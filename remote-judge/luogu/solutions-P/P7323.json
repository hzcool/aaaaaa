[
    {
        "content": "\u573a\u5916\u53e3\u80e1\u7b80\u8981\u9898\u89e3\uff08update\uff1a\u6539\u4e86\u4e2a\u5c0f\u7b14\u8bef\uff09\n\n\u8bb0\u4e00\u6761\u4ece $x$ \u5230 $y$\uff0c\u62ec\u53f7\u4e3a $w$ \u7684\u8fb9\u4e3a $(x,y,w)$\uff0c\u4e0e $w$ \u5bf9\u5e94\u7684\u53e6\u4e00\u4e2a\u62ec\u53f7\u662f $-w$\u3002\u9898\u76ee\u4e2d\u7ed9\u4e86\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u6027\u8d28\uff1a$(x,y,w)$ \u548c $(y,x,-w)$ \u662f\u6210\u5bf9\u5b58\u5728\u7684\u3002\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\uff1a\n\u4efb\u610f\u4e00\u6761\u5408\u6cd5\u8def\u5f84\u7684\u9006\u8def\u5f84\u76f8\u5f53\u4e8e\u628a\u62ec\u53f7\u5e8f\u5217\u7ffb\u8f6c\uff0c\u540c\u65f6\u6bcf\u4e2a\u62ec\u53f7\u53d8\u6210\u5bf9\u5e94\u53e6\u4e00\u4e2a\u62ec\u53f7\uff0c\u5f97\u5230\u7684\u8fd8\u662f\u5408\u6cd5\u8def\u5f84\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u53ef\u8fbe\u4e00\u5b9a\u662f\u53cc\u5411\u53ef\u8fbe\u3002\n\n\u5982\u679c\u4e00\u4e2a\u70b9 $x$ \u5b58\u5728\u4e24\u6761\u62ec\u53f7\u76f8\u540c\u7684\u51fa\u8fb9 $(x,a,w)$ \u548c $(x,b,w)$\uff0c\u4e14 $w$ \u662f\u53f3\u62ec\u53f7\uff0c\u90a3\u4e48 $a\\to x\\to b$ \u548c $b\\to x\\to a$ \u90fd\u662f\u957f\u5ea6\u4e3a $2$ \u7684\u5408\u6cd5\u8def\u5f84\uff0c\u5373 $a,b$ \u53cc\u5411\u53ef\u8fbe\u3002\u6ce8\u610f\u5230\u5728\u4e00\u4e2a\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u4e2d\u63d2\u5165\u53e6\u4e00\u4e2a\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u5f97\u5230\u7684\u4ecd\u7136\u662f\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\uff0c\u53ef\u4ee5\u628a $a,b$ \u5408\u5e76\u6210\u4e00\u4e2a\u70b9\u5904\u7406\u3002\u7531\u4e8e\u4e0a\u9762\u7684\u6027\u8d28\u8bf4\u660e\u5408\u5e76\u540e\u65b0\u56fe\u4e2d\u7684\u5408\u6cd5\u8def\u5f84\u4e00\u5b9a\u5bf9\u5e94\u7740\u4e00\u6761\u539f\u56fe\u4e2d\u7684\u5408\u6cd5\u8def\u5f84\u3002\u4e00\u76f4\u627e\u8fd9\u6837\u7684\u4e24\u6761\u8fb9\u5e76\u5408\u5e76\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u7684\u65f6\u5019\uff0c\u8bf4\u660e\u6b64\u65f6\u5df2\u6ca1\u6709\u957f\u5ea6\u4e3a $2$ \u7684\u5408\u6cd5\u8def\u5f84\uff0c\u663e\u7136\u4e0d\u5b58\u5728\u4efb\u4f55\u5408\u6cd5\u8def\u5f84\uff0c\u7b97\u6cd5\u7ed3\u675f\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u5176\u4e0a\u62ec\u53f7\u662f\u5de6\u62ec\u53f7\u7684\u8fb9\uff0c\u4ee5\u53ca\u5b83\u5408\u5e76\u4e4b\u524d\u662f\u591a\u5c11\u4e2a\u70b9\u7528\u4e8e\u8ba1\u7b97\u7b54\u6848\u3002\u7531\u4e8e\u5408\u5e76\u540e\u4e00\u4e2a\u70b9\u4e0a\u6bcf\u79cd\u62ec\u53f7\u7684\u8fb9\u53ea\u6709\u4e00\u6761\uff0c\u53ef\u4ee5\u5148\u8bb0\u5f55\u4e0b\u5f00\u59cb\u5c31\u6709\u7684\u5408\u5e76\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u54c8\u5e0c\u8868\u7ef4\u62a4\u4e0a\u9762\u7684\u8fb9\uff0c\u62ec\u53f7\u4f5c\u4e3a\u952e\uff0c\u8fb9\u7684\u7ec8\u70b9\u4f5c\u4e3a\u503c\u3002\u5408\u5e76\u70b9\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\uff0c\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u529e\u6cd5\u5904\u7406\u4e0a\u9762\u7684\u8fb9\uff0c\u628a\u8fb9\u5c11\u7684\u5408\u5e76\u5230\u591a\u7684\u4e0a\u3002\u4e00\u6b21\u5408\u5e76\u53ef\u80fd\u5f15\u8d77\u5176\u4ed6\u7684\u5408\u5e76\uff0c\u53ef\u4ee5\u7528\u961f\u5217\u5904\u7406\u3002\u6839\u636e\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u590d\u6742\u5ea6\u5206\u6790\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(m\\log m)$\u3002\u5982\u679c\u7528\u7684\u4e0d\u662f\u54c8\u5e0c\u8868\u800c\u662f ```std::map```\uff0c\u4f1a\u53d8\u6210$O(m\\log^2 m)$\uff0c\u53ef\u80fd\u4f1a\u8d85\u65f6\u3002",
        "postTime": 1612508870,
        "uid": 90893,
        "name": "\u93e1\u97f3\u30ea\u30f3",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P7323 \u3010[WC2021] \u62ec\u53f7\u8def\u5f84\u3011"
    },
    {
        "content": "\u8fd9\u8fb9\u662f\u4e00\u4e2a\u6c89\u8ff7\u4e8e T3 excrt \u7136\u540e T1 \u6765\u4e0d\u53ca,\u53ea\u6709 48 \u5206\u7684\u4e22\u4eba\u9009\u624b /dk\n\n---\n\n\u89c2\u5bdf :\n\n\u5982\u679c $(x,y)$ \u5408\u6cd5\u90a3\u4e48 $(y,x)$ \u4e5f\u5408\u6cd5.\n\n\u5982\u679c $(x,y)$ \u548c $(y,z)$ \u90fd\u5408\u6cd5 , \u90a3\u4e48 $(x,z)$ \u4e5f\u5408\u6cd5.\n\n\u56e0\u6b64\u53ef\u4ee5\u4e92\u76f8\u901a\u8fc7\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u5230\u8fbe\u8fd9\u4e2a\u6761\u4ef6\u662f\u4e00\u4e9b\u56e2,\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5408\u5e76\u4ed6\u4eec.\n\n\u5982\u679c $(x,y)$ \u80fd\u4e92\u76f8\u5230\u8fbe,\u4ed6\u4eec\u5b8c\u5168\u53ef\u4ee5\u7f29\u6210\u4e00\u4e2a\u70b9,\u56e0\u6b64\u6211\u4eec\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fd9\u4e2a\u56e2\u7684\u8054\u901a\u6027.\n\n\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u67d0\u4e2a\u989c\u8272\u7684\u5165\u8fb9\u7684\u4ee3\u8868\u8282\u70b9,**\u5982\u679c\u67d0\u79cd\u989c\u8272\u7684\u5165\u8fb9\u6709\u4e24\u79cd,\u90a3\u4e48\u4ed6\u4eec\u53ef\u4ee5\u88ab\u76f4\u63a5\u5408\u5e76,\u56e0\u6b64\u6211\u4eec\u8bb0\u4e00\u4e2a\u5373\u53ef**\u3002\n\n\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u4e0a\u9700\u8981\u989d\u5916\u8bb0\u4e00\u4e2a\u6808\u8868\u793a\u5408\u5e76\u64cd\u4f5c\u7684\u5e8f\u5217\u3002\n\n\u590d\u6742\u5ea6 $\\Theta(n\\log n+m\\log m)$\n\ncode :\n\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\ntemplate <typename T> void read(T &x){\n\tx = 0; char ch = getchar();\n\twhile (!isdigit(ch)) ch = getchar();\n\twhile (isdigit(ch)) x = x * 10 + ch - '0',ch = getchar();\n}\nconst int N = 300050,M = N<<1,V = M*20;\nint n,m,k,ex[M],ey[M],ez[M];\nstruct Union_Find_Set{\n\tint fa[N],siz[N];\n\tinline void init(int n){ for (int i = 1; i <= n; ++i) fa[i] = i,siz[i] = 1; }\n\tinline int F(int x){ return x == fa[x] ? (x) : (fa[x] = F(fa[x])); }\n\tinline void M(int x,int y){ x = F(x),y = F(y); if (x == y) return; fa[x] = y,siz[y] += siz[x]; }\n}S,S2;\nstack<pair<int,int> >stk;\ninline void Push(int x,int y){ if (!x || !y) return; if (S2.F(x) != S2.F(y)) S2.M(x,y),stk.push(make_pair(x,y)); }\nint T[N],lc[V],rc[V],id[V],cnto,pp,vv;\ninline void Ins(int &o,int l,int r){\n\tif (!o) o = ++cnto;\n\tif (l == r){ if (id[o]) Push(id[o],vv); id[o] = vv; return; }\n\tint mid = l+r>>1; if (pp <= mid) Ins(lc[o],l,mid); else Ins(rc[o],mid+1,r);\n}\ninline int Merge(int o1,int o2,int l,int r){\n\tif (!o1 || !o2) return o1|o2;\n\tif (l == r){ if (!id[o1] || !id[o2]) id[o1] = id[o1]|id[o2]; else Push(id[o1],id[o2]); return o1; }\n\tint mid = l+r>>1; lc[o1] = Merge(lc[o1],lc[o2],l,mid),rc[o1] = Merge(rc[o1],rc[o2],mid+1,r);\n\treturn o1;\n}\nint main(){\n\tint i,x,y; LL ans = 0,z;\n\tread(n),read(m),read(k);\n\tfor (i = 1; i <= m; ++i) read(ex[i]),read(ey[i]),read(ez[i]);\n\tS.init(n),S2.init(n); cnto = 0;\n\tfor (i = 1; i <= m; ++i) pp = ez[i],vv = ex[i],Ins(T[ey[i]],1,k);\n\twhile (!stk.empty()){\n\t\tx = stk.top().first,y = stk.top().second,stk.pop(),x = S.F(x),y = S.F(y);\n\t\tif (x == y) continue; S.M(x,y),T[y] = Merge(T[x],T[y],1,k);\n\t}\n\tfor (i = 1; i <= n; ++i) if (S.F(i) == i) z = S.siz[i],ans += z * (z-1)/2;\n\tcout << ans << '\\n';\n\treturn 0;\n}\n```",
        "postTime": 1612658650,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P7323 \u3010[WC2021] \u62ec\u53f7\u8def\u5f84\u3011"
    },
    {
        "content": "> \u5047\u8bbe\u6709 L \u5230 R\uff0c\u8fd9\u662f L\uff0c\u8fd9\u662f R\u3002\u8fd9\u4e9b\u8fb9\u6211\u4e0d\u52a0\u3002\u8fd9\u4e9b\u8fb9\u6211\u4e0d\u52a0\uff01\u66b4\u529b\u600e\u4e48\u505a\uff1f\u66b4\u529b\u662f\u4e0d\u662f\uff01\u52a0\u8fb9\u3001\u52a0\u8fb9\u3001\u52a0\u8fb9\uff0c\u7136\u540e\uff0c\u5e76\u67e5\u96c6\u67e5\u8be2\u3002\n\n\u9898\u76ee\u7ed9\u4e86\u4e00\u4e2a\u5173\u952e\u6761\u4ef6\uff1a\u5982\u679c\u6709\u4e00\u6761\u8fb9$(u, v, w)$\uff0c\u5219\u5fc5\u7136\u5b58\u5728\u4e00\u6761$(v, u, -w)$\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c$(u, v)$\u662f\u5408\u6cd5\u7684\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u8def\u5f84\u7ffb\u8f6c\u8fc7\u6765\uff0c\u5373\u53ef\u5f97\u5230$(v,u$\u7684\u5408\u6cd5\u8def\u5f84\u3002\u4e5f\u5c31\u662f\u8bf4\uff1a\u6240\u6709\u5408\u6cd5\u8def\u5f84\u662f\u5bf9\u79f0\u7684\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u79cd\u7b80\u5355\u60c5\u51b5\uff1a\n![QAQQQWAAPIOQ](https://cdn.luogu.com.cn/upload/image_hosting/3m1ctpq4.png)\n\u663e\u7136\uff0c\u8fd9\u91cc\u7684$(a,c)$\u5c31\u662f\u4e00\u6761\u5408\u6cd5\u8def\u5f84\u3002\u6211\u4eec\u4e0d\u59a8\u5c06$a,c$\u653e\u8fdb\u540c\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u8868\u793a\u8fd9\u4e24\u4e2a\u70b9\u76f4\u63a5\u53ef\u4ee5\u8fde\u51fa\u4e00\u6761\u5408\u6cd5\u8def\u5f84\u3002\u800c\u4e24\u6761\u5408\u6cd5\u8def\u5f84\u8fde\u63a5\u8d77\u6765\u663e\u7136\u4e5f\u662f\u4e00\u6761\u5408\u6cd5\u8def\u5f84\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fd9\u4e9b\u70b9\u7684\u96c6\u5408\uff0c\u6700\u7ec8\u628a\u70b9\u5206\u6210\u82e5\u5e72\u90e8\u5206\uff0c\u6bcf\u4e00\u4e2a\u96c6\u5408\u5185\u4efb\u610f\u4e00\u4e2a\u70b9\u90fd\u53ef\u4ee5\u548c\u5176\u5b83\u70b9\u6709\u5408\u6cd5\u62ec\u53f7\u8def\u5f84\u3002\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <unordered_map> //map\u3001set \u5747\u53ef\n#include <queue>\nusing namespace std;\ntypedef long long ll;\nconst int N = 3e5 + 5;\nint n, m, k;\nll ans = 0;\nunordered_map<int, int> e[N];\nqueue< pair<int, int> > q;\n#define mp make_pair\n#define brac first\n#define to second\nint fa[N];\nll cnt[N];\nvoid init() {\n    for (int i = 1; i <= n; i++)\n        fa[i] = i;\n}\nint find(int x) { return x == fa[x] ? x : fa[x] = find(fa[x]); }\nvoid merge(int x, int y) {\n    x = find(x), y = find(y);\n    if (x == y)\n        return;\n    if (e[x].size() < e[y].size())\n        swap(x, y);\n    for (auto it : e[y]) {\n        if (e[x].count(it.brac))\n            q.push(mp(e[x][it.brac], it.to));\n        else\n            e[x][it.brac] = it.to;\n    }\n    fa[y] = x;\n    e[y].clear();\n}\nvoid solve() {\n    while (!q.empty()) {\n        pair<int, int> x = q.front();\n        q.pop();\n        merge(x.brac, x.to);\n    }\n}\nint main(void) {\n    scanf(\"%d%d%d\", &n, &m, &k);\n    init();\n    for (int i = 1, u, v, w; i <= m; i++) {\n        scanf(\"%d%d%d\", &u, &v, &w);\n        swap(u, v);\n        if (e[u].count(w))\n            q.push(mp(e[u][w], v));\n        else\n            e[u][w] = v;\n    }\n    solve();\n    for (int i = 1; i <= n; i++)\n        cnt[find(i)]++;\n    for (int i = 1; i <= n; i++) {\n        ans += cnt[i] * (cnt[i] - 1) >> 1;\n        // printf(\"%lld %lld\\n\", ans, cnt[i]);\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1612617752,
        "uid": 255095,
        "name": "PragmaGCC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P7323 \u3010[WC2021] \u62ec\u53f7\u8def\u5f84\u3011"
    },
    {
        "content": "Upd\uff1a\u4fee\u6b63\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\n\nUpd\uff1a\u56fe\u7247\u6709\u8fdd\u4e8b\u5b9e\uff0c\u5df2\u7ea0\u6b63\n\n------\n\nWC \u6bd4\u8d5b\u7684\u65f6\u5019\u975e\u5e38\u667a\u969c\uff0c\u4e0d\u77e5\u9053\u66b4\u529b\u600e\u4e48\u505a\uff0c\u5c31\u5199\u4e86\u4e2a $16pts$ \u7684\u6811\u8dd1\u8def\u4e86\n\n------\n\n\u89c4\u5b9a\u8fb9 $(u,v,w)$ \u4ee3\u8868 $u \\rightarrow v$ \u7b2c $w$ \u79cd\u5de6\u62ec\u53f7\u7684\u8fb9\uff0c\u53f3\u62ec\u53f7\u4e3a $(u,v,-w)$\n\n\u6ce8\u610f\u5230\u4efb\u610f\u4e00\u4e2a\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u4e00\u5b9a\u542b\u6709 $()$ \u7684\u60c5\u51b5\n\n\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gj0fnszb.png)\n\n\u82e5\u70b9\u5bf9 $(u,v)$ \u4e4b\u95f4\u662f\u4e00\u4e2a\u7c7b\u578b $w$ \u7684 $()$ \u578b\uff0c\u5219\u89c2\u5bdf\u4e0a\u56fe\u53ef\u77e5\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u70b9 $x$ \u4f7f\u5f97\u5b58\u5728\u8fb9 $(u,x,w)$ \u548c $(v,x,w)$\n\n\u7531\u4e8e\u4efb\u610f\u4e00\u4e2a\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u90fd\u5305\u542b $()$ \uff0c\u56e0\u6b64\u5c06\u5b58\u5728\u4e0a\u56fe\u5173\u7cfb\u7684\u70b9 $u,v$ \u770b\u4f5c\u4e00\u4e2a\u70b9\u5904\u7406\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u7684\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\uff08\u6ce8\u610f\u5728\u5b9e\u73b0\u4e2d\u6211\u4eec\u5e76\u6ca1\u6709\u628a\u8fd9\u4e9b\u70b9\u771f\u6b63\u5408\u5e76\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u751a\u81f3\u6ca1\u6709\u5efa\u56fe\uff0c\u6240\u4ee5\u4e0b\u6587\u6240\u8bf4\u539f\u56fe\u3001\u65b0\u56fe\u5728\u4ee3\u7801\u4e2d\u5e76\u6ca1\u6709\u4f53\u73b0\uff0c\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u8868\u8fbe\uff09\n\n\u53cd\u8bc1\uff1a\u5982\u679c\u5f62\u6210\u5f71\u54cd\uff0c\u5219\u5b58\u5728\u4e00\u6761\u5728\u539f\u56fe\u4e2d\u5408\u6cd5\u7684\u62ec\u53f7\u8def\u5f84\u5728\u65b0\u56fe\u4e2d\u4e0d\u5408\u6cd5\uff0c\u6216\u662f\u4e00\u6761\u539f\u56fe\u4e2d\u4e0d\u5408\u6cd5\u7684\u62ec\u53f7\u8def\u5f84\u5728\u65b0\u56fe\u4e2d\u5408\u6cd5\n\n\u663e\u7136\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0d\u5b58\u5728\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u8fd9\u6761\u8def\u5f84\u4e00\u5b9a\u7ecf\u8fc7 $u,v$\uff0c\u53ef\u4ee5\u8868\u793a\u4e3a $s \\rightarrow \\cdots \\rightarrow u \\rightarrow  v\\cdots \\rightarrow t$ \u7684\u8fd9\u6837\u4e00\u6761\u8def\u5f84\uff0c\u53ef\u4ee5\u53d1\u73b0\u56e0\u4e3a $u \\rightarrow v$ \u662f\u4e00\u4e2a $()$ \u7684\u5173\u7cfb\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u5728\u4e00\u4e2a\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u4e2d\u53bb\u6389\u4e86\u4e00\u4e2a $()$\uff0c\u4efb\u7136\u5408\u6cd5\uff08\u5f53\u7136 $u,v$ \u53ef\u4ee5\u4e0d\u8fde\u7eed\uff0c~~\u4f46\u7531\u4e8e\u8ba8\u8bba\u592a\u8fc7\u590d\u6742\uff0c\u7b14\u8005\u5e76\u4e0d\u60f3\u5c55\u5f00\uff0c\u5b9e\u9645\u5e94\u8be5\u540c\u7406\uff1f~~\uff09\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u6240\u6709\u70b9 $x$\uff0c\u82e5\u5b83\u5b58\u5728\u4e24\u6761\u76f8\u540c\u7c7b\u578b\u7684\u5165\u8fb9\uff0c\u90a3\u4e48\u90fd\u5c06\u8fd9\u4e24\u6761\u5165\u8fb9\u7684\u53e6\u5916\u4e24\u4e2a\u7aef\u70b9\u770b\u4f5c\u4e00\u4e2a\u70b9\u5904\u7406\uff08\u5373\u4e0a\u6587\u7684 $u,v$\uff09\n\n\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4e00\u4e2a ```std::map<int,int>```\uff0c\u82e5\u5f53\u524d\u70b9\u7684\u5f53\u524d\u7c7b\u578b\u8fd8\u6ca1\u6709\u5165\u8fb9\uff0c\u5b58\u503c\uff1b\u82e5\u6709\uff0c\u5219\u5408\u5e76 ~~\uff08\u592a\u83dc\u4e86\u5f88\u4e45\u6ca1\u5199\u54c8\u5e0c\u8868\uff0c\u5c31\u7528\u4e86\u8fd9\u4e2a\u5077\u61d2\uff09~~\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u5408\u6cd5\u8def\u5f84\u4e00\u5b9a\u53ef\u4ee5\u7531\u8fd9\u6837\u7684\u591a\u6b21\u5408\u5e76\u8868\u793a\u51fa\u6765\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8fdb\u884c\u591a\u6b21\u5408\u5e76\n\n\u5177\u4f53\u5b9e\u73b0\u4e0e\u5e7f\u641c\u7c7b\u4f3c\uff0c\u9047\u5230\u4e00\u4e2a\u5408\u5e76\u5148\u628a\u5b83\u52a0\u5165\u961f\u5217\uff0c\u6bcf\u6b21\u53d6\u51fa\u961f\u5934\u5408\u5e76\uff0c\u540c\u65f6\u5904\u7406\u7531\u4e8e\u8fd9\u4e00\u6b21\u5408\u5e76\u5f15\u8d77\u7684\u5176\u4ed6\u5408\u5e76\uff0c\u52a0\u5165\u961f\u5217\uff0c\u76f4\u5230\u961f\u5217\u4e3a\u7a7a\n\n\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6fuuzvak.png)\n\n\u5148\u5c06 $u,v$ \u5408\u5e76\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0q66ef1o.png)\n\n\u5408\u5e76\u540e\u679a\u4e3e $v$ \u6bcf\u79cd\u7c7b\u578b\u7684\u5165\u8fb9\uff0c\u770b $u$ \u6709\u6ca1\u6709\u76f8\u540c\u7c7b\u578b\u7684\n\n\u7531\u4e8e\u662f\u7c7b\u5e7f\u641c\uff0c\u6bcf\u79cd\u7c7b\u578b\u5165\u8fb9\u82e5\u6709\u4e24\u6761\u5219\u5728\u4e4b\u524d\u5df2\u5408\u5e76\uff0c\u5219\u6b64\u65f6\u53ea\u6709\u4e00\u6761\u5165\u8fb9\uff0c\u800c\u4e14\u6070\u597d\u662f `std::map` \u4e2d\u5b58\u7684\u90a3\u4e00\u6761\n\n\u5982\u56fe\uff0c\u4e4b\u540e\u5f15\u8d77 $s_1,t_1$ \u7684\u5408\u5e76\n\n\u53ef\u4ee5\u8bc1\u660e\u5408\u5e76\u8fc7\u7a0b\u7ed3\u675f\u65f6\uff0c\u6240\u6709\u5408\u6cd5\u7684\u62ec\u53f7\u8def\u5f84\u90fd\u5df2\u7ecf\u88ab\u627e\u5230\n\n\u56e0\u4e3a\u4efb\u610f\u4e24\u4e2a $()$ \u578b\u7684\u70b9\u5bf9\u90fd\u5df2\u7ecf\u88ab\u5408\u5e76\uff0c\u6240\u4ee5\u4e00\u5b9a\u6240\u6709\u7684\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u90fd\u88ab\u5305\u542b\n\n\u5408\u5e76\u4e24\u4e2a\u70b9\u53ef\u4ee5 ~~\u52a0\u8fb9\u52a0\u8fb9\u52a0\u8fb9\uff0c\u5e76\u67e5\u96c6\u67e5\u8be2\uff01~~\n\n\u7528\u5e76\u67e5\u96c6\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u8fd9\u6837\u4e00\u5171\u53ea\u4f1a\u5408\u5e76 $O(m \\log m)$\n\n\u800c\u4e14\u5408\u5e76\u5b8c\u4e4b\u540e\u6bcf\u4e00\u4e2a\u90e8\u5206\u7684\u4efb\u610f\u4e24\u4e2a\u70b9\u90fd\u662f\u5408\u6cd5\u7684\u70b9\u5bf9\uff0c\u7edf\u8ba1\u7b54\u6848\u65f6\u5c31\u76f4\u63a5\u5bf9\u4e8e\u6bcf\u4e2a\u90e8\u5206\u52a0\u4e0a $\\dfrac{siz(siz-1)}{2}$ \n\n\u6ce8\u610f\u8981\u5f00 `long long`\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u542f\u53d1\u5f0f\u5408\u5e76\u7684 $O(m\\log m)$\uff0c\u6bcf\u6b21\u5408\u5e76 `std::map` \u7684 $O(\\log m)$\uff0c\u4e00\u5171 $O(m \\log^2 m)$\uff0c\u7528\u54c8\u5e0c\u8868\u53ef\u4ee5\u505a\u5230\u4e00\u4e2a $\\log$\n\n\u7531\u4e8e\u6709 `-O2` \u548c\u5feb\u8bfb\uff0c\u53ef\u4ee5\u901a\u8fc7\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;short f=1;char c=getchar();\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=-1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tx*=f;return;\n}\n#define ll long long\n#define rg register\n#define x first\n#define y second\nconst int N=3e5+5;\nint n,m,k,u,v,w; \nmap<int,int>mp[N];\nqueue<pair<int,int> >q;\nint fa[N],siz[N];\nll ans;\nint find(int x)\n{\n\tif(x!=fa[x]) return fa[x]=find(fa[x]);\n\treturn fa[x];\n}\nvoid merge(int a,int b)\n{\n\tint u=find(a),v=find(b);\n\tif(u==v) return;\n\tif(siz[u]<siz[v]) swap(u,v);\n\tfa[v]=u;\n\tsiz[u]+=siz[v];\n\tfor(map<int,int>::iterator it=mp[v].begin();it!=mp[v].end();it++)\n\t{\n\t\tif(mp[u][it->x]) q.push(make_pair(it->y,mp[u][it->x]));\n\t\telse mp[u][it->x]=it->y;\n\t}\n}\nint main()\n{\n\tread(n);read(m);read(k);\n\tfor(rg int i=1;i<=m;i++)\n\t{\n\t\tread(u);read(v);read(w);\n\t\tif(mp[v][w]) q.push(make_pair(u,mp[v][w]));\n\t\telse mp[v][w]=u;\n\t}\n\tfor(int i=1;i<=n;i++) fa[i]=i,siz[i]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front().x,v=q.front().y;\n\t\tq.pop();\n\t\tmerge(u,v);\n\t}\n\tfor(int i=1;i<=n;i++) if(i==fa[i]) ans+=(ll)siz[i]*(siz[i]-1)/2;\n\tcout<<ans;\n}\n```\n\n",
        "postTime": 1612690364,
        "uid": 231600,
        "name": "zhangboju",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7323 \u3010[WC2021] \u62ec\u53f7\u8def\u5f84\u3011"
    },
    {
        "content": "# \u8fd9\u9898\u809d\u4e86\u597d\u4e45\u603b\u7b97\u809d\u51fa\u6765\u4e86\uff0c\u90a3\u4e48\u5c31\u6765\u53d1\u7bc7\u9898\u89e3\u5427\n\n## \u89e3\u9898\u80cc\u666f\n\n$WC$\u8003\u573a\u4e0a\u60f3\u4e86$2h$\u4e00\u70b9\u601d\u8def\u90fd\u6ca1\u6709\uff0c\u6df1\u641c\u5224\u65ad\u5b8c\u5168\u4e0d\u53ef\u505a\uff0c\u4e8e\u662f\u5e72\u8106\u76f4\u63a5\u628a\u6709\u4e00\u79cd\u76f8\u540c\u7c7b\u578b\u62ec\u53f7\u7684\u51fa\u8fb9\u7684\u70b9\u5168\u52a0\u5230\u7b54\u6848\u91cc\u2026\u2026\n\n**\u5c45\u7136\u6709\u4e8c\u5341\u5206\uff1f\u6211\u4eba\u90fd\u50bb\u4e86\uff01**\n\n\u8003\u5b8c\u77e5\u9053\u505a\u6cd5\u540e\u518d\u6b21\u76f4\u547c\u5367\u8279\uff0c\u7136\u800c\u7531\u4e8e\u7ed9\u7684\u9898\u89e3\u592a\u7b80\u964b\u53c8\u809d\u4e86\u4e00\u665a\u4e0a\u2026\u2026\n\n---\n\n## \u8bdd\u4e0d\u591a\u8bf4\u6b63\u5f0f\u5f00\u59cb\u8bb2\u505a\u6cd5\n\n\u770b\u5230\u9898\u76ee\u4e2d\u6709\u4e2a\u201c\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u201d\u5c31\u76f4\u63a5\u5934\u5927\uff0c\u53c8\u6709\u591a\u79cd\u62ec\u53f7\u7c7b\u578b\u4e00\u770b\u5c31\u662f**\u6bd2\u7624**\u3002\n\n\u624b\u73a9\u6837\u4f8b$2$\u53d1\u73b0\u4e00\u6761\u8fb9\u6216\u8005\u4e00\u4e2a\u70b9\u80af\u5b9a\u662f\u53ef\u4ee5\u91cd\u590d\u7ecf\u8fc7\u7684\uff0c\u6240\u4ee5\u641c\u7d22\u4e0d\u53ef\u505a\uff0c\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n\u4e8e\u662f\u6211\u4eec\u9700\u8981\u51e0\u4e2a\u7ed3\u8bba\uff1a\n\n- ###  \u7ed3\u8bba1\uff1a\u5982\u679c$x$\u53ef\u4ee5\u5230\u8fbe$y$\uff0c\u90a3\u4e48$y$\u4e5f\u4e00\u5b9a\u53ef\u4ee5\u5230\u8fbe$x$\n\n\u663e\u7136\u539f\u8def\u8fd4\u56de\u5373\u53ef\u3002\n\n\u5982\u679c\u6709\u4e00\u4e2a\u5408\u6cd5\u8def\u5f84\u4e3a$( ( )[] ) $\n\n\u90a3\u4e48\u539f\u8def\u8fd4\u56de\u5c31\u662f\u628a\u5b83\u53cd\u8f6c\u4e00\u4e0b\uff0c\u53d8\u6210 $([]())$\uff0c\u800c\u8fd9\u4e5f\u4e00\u5b9a\u5408\u6cd5\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5ffd\u7565\u9898\u76ee\u4e2d $1 \\le x < y \\le n$\u7684\u6761\u4ef6\u4e86\u3002\n\n- ### \u7ed3\u8bba\u4e8c\uff1a\uff08\u5212\u91cd\u70b9\uff09\n\n\u6211\u4eec\u5148\u628a\u9898\u76ee\u4e2d\u7684\u8fb9\u53d6\u53cd\uff0c\u5373\u52a0\u5165\u7684\u8fb9\u4e0d\u662f$(u,v,w)$\u800c\u662f$(v,u,w)$\u3002\n\n\u5982\u56fe\uff0c$A,B,C$\u5747\u4e3a\u4e00\u4e2a\u70b9\u96c6\uff0c\u70b9\u96c6\u4e2d\u7684\u70b9\u5747\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\u3002\u56fe\u4e2d\u542b\u6709$(2,1,w)$\u548c$(3,4,w)$\u7684\u8fb9 **\uff08\u6ce8\u610f\u6b64\u5904\u8fb9\u5df2\u7ecf\u53d6\u53cd\u4e86\uff09**\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ao7deoe5.png?x-oss-process=image)\n\n\u5219$1$\u5230$4$\u5fc5\u6709\u4e00\u6761\u5408\u6cd5\u8def\u5f84\uff0c\u7ed3\u8bba\u663e\u7136\uff0c\u56e0\u4e3a$1 \\rightarrow 2 \\rightarrow 3 \\rightarrow 4$ \u7684\u8def\u5f84\u53ea\u662f\u5728$2 \\rightarrow 3$ \u7684\u8def\u5f84\u4e24\u8fb9\u52a0\u4e0a**\u4e00\u5bf9**\u62ec\u53f7\uff0c\u5fc5\u7136\u5408\u6cd5\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e **$A,C$\u70b9\u96c6\u4e2d\u7684\u70b9\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe** \uff0c\u56e0\u4e3a\u5bf9\u4e8e$A$\u4e2d\u7684\u70b9$x$\u548c$C$\u4e2d\u7684\u70b9$y$\u6765\u8bf4\uff0c\u8def\u5f84$x \\rightarrow 1 \\rightarrow 4 \\rightarrow y$ \u53ea\u662f\u628a\u4e09\u6bb5\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u62fc\u5728\u4e00\u8d77\u7f62\u4e86\uff0c\u6545\u6b64\u8def\u5f84\u5fc5\u7136\u5408\u6cd5\uff0c\u8fd9\u5c31\u662f**\u7ed3\u8bba\u4e8c**\u3002\n\n\n\u6709\u4e86\u4ee5\u4e0a\u4e24\u6761\u7ed3\u8bba\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u679a\u4e3e\u5b83\u7684\u51fa\u8fb9\uff0c\u628a\u76f8\u540c\u7c7b\u578b\u7684\u70b9\u5408\u5e76\u6210\u4e00\u4e2a\u70b9\uff0c\u540c\u65f6\u7b54\u6848\u52a0\u4e0a\u4e24\u4e2a\u70b9\u96c6\u5927\u5c0f\u7684\u4e58\u79ef\u5c31\u505a\u5b8c\u4e86\u2026\u2026\n\n---\n**\u7136\u800c\u4f60\u4f1a\u9047\u5230\u4e00\u8fde\u4e32\u7684\u95ee\u9898**\n\n## \u5177\u4f53\u5b9e\u73b0\uff1a\n\n\u5f88\u660e\u663e\uff0c\u5408\u5e76\u8fd9\u4e00\u64cd\u4f5c\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u5b9e\u73b0\u3002\n\n\u6211\u7684\u505a\u6cd5\u662f\u5148\u628a\u6240\u6709\u70b9\u52a0\u8fdb\u4e00\u4e2a\u961f\u5217\u91cc\uff0c\u6bcf\u6b21\u53d6\u51fa\u4e00\u4e2a\u70b9\u904d\u5386\u6bcf\u6761\u51fa\u8fb9\uff0c\u5c06\u7c7b\u578b\u76f8\u540c\u7684\u51fa\u8fb9\u6307\u5411\u7684\u70b9\u90fd\u5408\u5e76\u8d77\u6765\u3002\n\n\u5408\u5e76\u65f6\uff0c\u6211\u662f\u8bb2\u51fa\u5ea6\u5c0f\u7684\u5408\u5e76\u8fdb\u51fa\u5ea6\u5927\u7684\u4e2d\uff0c\u5c06\u51fa\u5ea6\u5c0f\u7684\u70b9\u7684\u6bcf\u6761\u8fb9\u90fd\u52a0\u5230\u53e6\u4e00\u4e2a\u70b9\u4e0a\uff0c\u540c\u65f6\u628a\u5176\u51fa\u5ea6$+1$\n\n\u6700\u540e\uff0c\u6211\u518d\u628a\u6240\u6709\u5408\u5e76\u5f97\u5230\u7684\u70b9\u90fd\u6254\u8fdb\u961f\u5217\u91cc\uff0c\u5982\u5df2\u7ecf\u5728\u91cc\u9762\u5c31\u4e0d\u7528\u7ba1\u4e86\u3002\n\n#### \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\n#define ll long long\nconst int N=3e5+5;\nusing namespace std;\nstruct node{\n\tint to,nxt,w;\n}e[N*2];\nint head[N],cnt;\nint f[N],s[N],in[N];\nint t[N],ct,ty[N],p[N]; \nint n,m,k;\nbool vis[N];\nll ans;\nchar ch;\nqueue<int> q;\nint rd(){\n\tint st=0;\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9'){\n\t\tst=(st<<1)+(st<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn st;\n}\nvoid add(int u,int v,int w){\n\tcnt++;\n\te[cnt].to=v;\n\te[cnt].w=w;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nint getf(int x){\n\tif(f[x]==x) return x;\n\treturn f[x]=getf(f[x]);\n}\nint merge(int fx,int fy){\n\tif(fx==fy) return fx;\n\tif(in[fx]<in[fy]) swap(fx,fy);\n\tans+=s[fx]*s[fy];\n\ts[fx]+=s[fy];\n\tin[fx]+=in[fy];\n\tf[fy]=fx;\n\tfor(int i=head[fy];i;){\n\t\tint v=e[i].to,tp;\n\t\ttp=e[i].nxt;\n\t\te[i].nxt=head[fx];\n\t\thead[fx]=i;\n\t\ti=tp;\n\t}\n\treturn fx;\n}\nint main(){\n\tn=rd();m=rd();k=rd();\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,w;\n\t\tu=rd();v=rd();w=rd();\n\t\tadd(v,u,w);\n\t\tin[v]++;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tf[i]=i;\n\t\ts[i]=1;\n\t\tvis[i]=1;\n\t\tq.push(i); \n\t}\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tif(f[u]!=u) continue;\n\t\tvis[u]=0;\n\t\tct=0;\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].to,w=e[i].w,fv=getf(v);\n\t\t\tif(!t[w]){\n\t\t\t\tt[w]=fv;\n\t\t\t\tty[++ct]=w;\n\t\t\t}\n\t\t\telse if(t[w]!=fv) t[w]=merge(t[w],fv),p[w]=t[w];\n\t\t}\n\t\tfor(int i=1;i<=ct;i++){\n\t\t\tint w=ty[i];\n\t\t\tif(p[w]&&!vis[p[w]]) q.push(p[w]),vis[p[w]]=1,p[w]=0;\n\t\t\tt[w]=0;\n\t\t}\n\t}\n\tcout<<ans;\n}\n```\n\n\u7531\u4e8e\u662f**\u542f\u53d1\u5f0f\u5408\u5e76**\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n \\log n)$ \u7ea7\u522b\u7684\u2026\u2026\n\n### \u5417\uff1f\n\n\u4ea4\u4e0a\u53bb$80pts$\u76f4\u63a5\u98de\u5347\n\n\u4ed4\u7ec6\u5206\u6790\u53d1\u73b0\u6bcf\u6b21\u53d6\u51fa\u4e00\u4e2a\u70b9\u540e\u90fd\u8981\u904d\u5386\u5b83\u7684\u540c\u79cd\u7c7b\u578b\u51fa\u8fb9\u6307\u5411\u7684\u70b9\u90fd\u4f1a\u88ab\u5408\u5e76\uff0c\u6211\u4eec\u53ea\u9700\u5bf9\u4e8e\u6bcf\u79cd\u7c7b\u578b\u4fdd\u7559\u4e00\u6761\u6307\u5411\u5408\u5e76\u540e\u7684\u70b9\u7684\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff0c\u5426\u5219\u5c31\u4f1a\u9020\u6210\u5927\u91cf\u7684\u5197\u4f59\u5224\u65ad\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u64cd\u4f5c\u5728\u5408\u5e76\u4e24\u4e2a\u70b9\u7684\u65f6\u5019\u7528\u90bb\u63a5\u94fe\u8868\u6765\u7ef4\u62a4\u5c31\u5fc5\u987b\u8981\u628a\u4e24\u70b9\u7684\u8fb9\u90fd\u904d\u5386\u4e00\u904d\uff0c\u6211\u4e2a\u4eba\u4e5f\u4e0d\u4f1a**\u54c8\u5e0c\u8868**\uff0c\u4e8e\u662f\u5c31\u91c7\u53d6\u4e86$map$\u6765\u8fdb\u884c\u8fd9\u4e00\u64cd\u4f5c\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u7ef4\u62a4\u4e00\u4e2a\u5408\u5e76\u64cd\u4f5c\u7684\u961f\u5217\uff0c\u5c06\u4e24\u70b9\u5408\u5e76\u65f6\u7528$map$\u5224\u65ad\u662f\u5426\u6709\u76f8\u540c\u7c7b\u578b\u7684\u51fa\u8fb9\uff0c\u5982\u679c\u6709\u5c31\u5c06\u4e24\u70b9\u5408\u5e76\u7684\u64cd\u4f5c\u52a0\u8fdb\u961f\u5217\u91cc\u4e4b\u540e\u5904\u7406\u3002\n\n**\u5177\u4f53\u7684\u7ec6\u8282\u53ef\u89c1\u4ee3\u7801\uff1a**\n\n```\n#include<bits/stdc++.h>\nconst int N=3e5+5;\nusing namespace std;\nstruct node{\n\tint to,nxt,w;\n}e[N*2];\nstruct abc{\n\tint x,y;\n}z;\nint n,m,k,num;\nint head[N],cnt;\nint f[N],s[N],in[N];\nlong long ans;\nqueue<abc> q;\nmap<int,int> mp[N];\nvector<int> ty[N];\nchar ch;\nint rd(){\n\tint st=0;\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9'){\n\t\tst=(st<<1)+(st<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn st;\n}\nvoid add(int u,int v,int w){\n\tcnt++;\n\te[cnt].to=v;\n\te[cnt].w=w;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nint getf(int x){\n\tif(f[x]==x) return x;\n\treturn f[x]=getf(f[x]);\n}\nint main(){\n\tn=rd();m=rd();k=rd();\n\tfor(int i=1;i<=n;i++) f[i]=i,s[i]=1;\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,w;\n\t\tu=rd();v=rd();w=rd();\n\t\tadd(v,u,w);\n\t\tif(!mp[v].count(w)){\n\t\t\tmp[v][w]=u;\n\t\t\tty[v].push_back(w);\n\t\t\tin[v]++;\n\t\t}\n\t\telse{\n\t\t\tz.x=mp[v][w];\n\t\t\tz.y=u;\n\t\t\tq.push(z);\n\t\t}\n\t}\n\twhile(!q.empty()){\n\t\tabc u=q.front();\n\t\tq.pop();\n\t\tint fx=getf(u.x),fy=getf(u.y);\n\t\tif(fx==fy) continue;\n\t\tif(in[fx]<in[fy]) swap(fx,fy);\n\t\tans+=s[fx]*s[fy];\n\t\ts[fx]+=s[fy];\n\t\tf[fy]=fx;\n\t\tfor(int i=0;i<ty[fy].size();i++){\n\t\t\tint w=ty[fy][i];\n\t\t\tif(!mp[fx].count(w)){\n\t\t\t\tmp[fx][w]=mp[fy][w];\n\t\t\t\tty[fx].push_back(w);\n\t\t\t\tin[fx]++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tz.x=mp[fx][w];\n\t\t\t\tz.y=mp[fy][w];\n\t\t\t\tq.push(z);\n\t\t\t}\n\t\t}\n\t\tmp[fy].clear();\n\t\tty[fy].clear();\n\t}\n\tprintf(\"%lld\",ans);\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u662f$O(n\\log n\\log k)$\u7ea7\u522b\u7684\uff0c\u5438\u6c27\u540e$3.19s$\n\n~~\u7136\u800c\u6211\u7528\u90bb\u63a5\u94fe\u8868\u5199\u6539\u5230\u6700\u540e\u670984pts\uff0c\u9664\u53bb4\u4e2aTLE\u5176\u4ed6\u70b9\u603b\u65f6\u95f4\u5c45\u7136\u53ea\u6709310ms\u2026\u2026~~\n[~~\u53ef\u4ee5\u6233\u8fd9\u91cc\u770b\u770b~~](https://www.luogu.com.cn/record/46309616)",
        "postTime": 1612671056,
        "uid": 323204,
        "name": "\u832b\u832b\u661f\u8fb01208",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7323 \u3010[WC2021] \u62ec\u53f7\u8def\u5f84\u3011"
    },
    {
        "content": "\u5f88\u6709\u610f\u601d\u7684\u4e00\u9053\u9898\uff0c\u6280\u5de7\u6027\u8f83\u5f3a\u3002\n\n\u6709\u51e0\u4e2a\u6027\u8d28\uff1a\n\n- \u5f53 $x\\to y$ \u5b58\u5728\u5408\u6cd5\u8def\u5f84\uff0c$y\\to x$ \u4e5f\u5b58\u5728\u5408\u6cd5\u8def\u5f84\u3002\n- \u5f53 $x\\to y$ \u5b58\u5728\u5408\u6cd5\u8def\u5f84\uff0c$y\\to z$ \u5b58\u5728\u5408\u6cd5\u8def\u5f84\u65f6\uff0c$x\\to z$ \u4e5f\u5b58\u5728\u5408\u6cd5\u8def\u5f84\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u63a8\u51fa\uff1a\n- \u5f53 $x\\to y$ \u5b58\u5728\u5408\u6cd5\u8def\u5f84\uff0c$x\\to z$ \u5b58\u5728\u5408\u6cd5\u8def\u5f84\uff0c$y\\to z$ \u4e5f\u5b58\u5728\u5408\u6cd5\u8def\u5f84\u3002\n- \u5f53\u5b58\u5728 $y\\to x$ \u7684\u5de6\u62ec\u53f7\uff0c$z\\to x$ \u7684\u5de6\u62ec\u53f7\uff0c$y\\to z$ \u5fc5\u5b58\u5728\u5408\u6cd5\u8def\u5f84\u3002\n\n\u6839\u636e\u8fd9\u4e9b\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u4ece\u5408\u6cd5\u8def\u5f84\u7684\u8fde\u901a\u6027\u6765\u770b\uff0c\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u90fd\u662f\u4e00\u4e2a\u56e2\uff0c\u8fde\u901a\u5757\u5185\u7684\u70b9\u4e24\u4e24\u53ef\u8fbe\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u6765\u5c1d\u8bd5\u5408\u5e76\u8fd9\u4e9b\u70b9\u3002\u663e\u7136\uff0c\u8bbe\u5408\u5e76\u8fdb\u884c\u4e86 $k$ \u8f6e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(km)$\uff0c\u6700\u52a3\u65f6\u5408\u5e76 $n-1$ \u8f6e\uff0c\u590d\u6742\u5ea6\u5373\u4e3a $O(nm)$\uff0c\u4e0d\u80fd\u627f\u53d7\u3002\n\n\u4f46\u6211\u4eec\u53d1\u73b0\u5f88\u591a\u8fb9\u4f1a\u88ab\u91cd\u590d\u5408\u5e76\uff0c\u8003\u8651\u53ea\u5408\u5e76\u90a3\u4e9b\u53ef\u80fd\u6539\u53d8\u8fde\u901a\u6027\u7684\u8fb9\uff0c\u8fd9\u4e00\u90e8\u5206\u4f7f\u7528\u4e00\u4e2a\u961f\u5217\u8bb0\u5f55\u90a3\u4e9b\u70b9\u5bf9\u3002\u6211\u4eec\u8fd8\u9700\u8981\u5408\u5e76\u4e24\u4e2a\u8fb9\u96c6\uff0c\u8fd9\u4e00\u90e8\u5206\u4f7f\u7528\u7ebf\u6bb5\u6811\u6216\u8005 $\\text{map}$ \u5565\u7684\u8fdb\u884c\u542f\u53d1\u5f0f\u5408\u5e76\u90fd\u662f\u53ef\u4ee5\u7684\uff08~~\u5584\u7528 $\\text{STL}$ \u53ef\u4ee5\u5e2e\u52a9\u4f60\u5feb\u901f $\\text{rush}$ \u5b8c\u4ee3\u7801~~\n\n**Show the Code**\n\n\u7406\u8bba $O(nm)$ \u590d\u6742\u5ea6\u4ee3\u7801 ~~\uff08\u4f46\u662f\u5b9e\u6d4b\u80fd\u8fc7\uff09~~\uff1a\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<functional>\n#include<algorithm>\ntypedef long long ll;\nstd::vector<std::pair<int,int> > mp[300005];\nint fa[300005],size[300005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline int find(int x) {return x==fa[x]? x:fa[x]=find(fa[x]);}\ninline int merge(int x,int y) {\n\tint fx=find(x),fy=find(y);\n\tif(fx!=fy) {\n\t\tif(size[fx]>size[fy]) {\n\t\t\tfa[fy]=fx; size[fx]+=size[fy];\n\t\t\tfor(register int i=0;i<mp[fy].size();++i) mp[fx].push_back(mp[fy][i]);\n\t\t\tif(mp[fy].size()) mp[fy].clear();\n\t\t}\n\t\telse {\n\t\t\tfa[fx]=fy; size[fy]+=size[fx];\n\t\t\tfor(register int i=0;i<mp[fx].size();++i) mp[fy].push_back(mp[fx][i]);\n\t\t\tif(mp[fx].size()) mp[fx].clear();\n\t\t}\n\t\treturn 1;\n\t}\n\telse {return 0;}\n}\nint main() {\n\tint n=read(),m=read(),k=read(); ll ans=0;\n\tfor(register int i=1;i<=m;++i) {int x=read(),y=read(),z=read(); mp[y].push_back(std::make_pair(z,x));}\n\tfor(register int i=1;i<=n;++i) fa[i]=i,size[i]=1;\n\twhile(1) {\n\t\tint tot=0;\n\t\tfor(register int i=1;i<=n;++i) {\n\t\t\tif(fa[i]==i&&mp[i].size()>1) {\n\t\t\t\tstd::sort(mp[i].begin(),mp[i].end());\n\t\t\t\tfor(register int j=0;j<(int)mp[i].size()-1;++j) {\n\t\t\t\t\tif(mp[i][j].first==mp[i][j+1].first) {\n\t\t\t\t\t\ttot+=merge(mp[i][j].second,mp[i][j+1].second);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!tot) break;\n\t}\n\tfor(register int i=1;i<=n;++i) {\n\t\tif(fa[i]==i) ans+=(size[i]-1)*1ll*size[i]/2;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n\u7406\u8bba $O(m \\log n)$ \u590d\u6742\u5ea6\u4ee3\u7801 ~~\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u5728 $\\text{loj}$ \u4e0a\u8dd1\u7684\u6bd4 $O(nm)$ \u66b4\u529b\u8fd8\u6162\uff09~~\uff1a\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<unordered_map>\ntypedef long long ll;\nint fa[300005],sz[300005];\nstd::queue<std::pair<int,int> > Q;\nstd::unordered_map<int,int> mp[300005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f; \n}\ninline void swap(int &x,int &y) {int tmp=x;x=y;y=tmp;}\ninline int find(int x) {return x==fa[x]? x:fa[x]=find(fa[x]);}\ninline void merge(int x,int y) {\n\tint fx=find(x),fy=find(y);\n\tif(fx!=fy) {\n\t\tif(sz[fx]<sz[fy]) swap(fx,fy);\n\t\tfor(std::unordered_map<int,int>::iterator it=mp[fy].begin();it!=mp[fy].end();++it) {\n\t\t\tint w=it->first,x=it->second;\n\t\t\tif(mp[fx][w]) Q.push(std::make_pair(x,mp[fx][w]));\n\t\t\telse mp[fx][w]=x;\n\t\t}\n\t\tsz[fx]+=sz[fy]; fa[fy]=fx;\n\t}\n}\nint main() {\n\tint n=read(),m=read(),k=read(); ll ans=0;\n\tfor(register int i=1;i<=n;++i) sz[i]=1,fa[i]=i;\n\tfor(register int i=1;i<=m;++i) {\n\t\tint x=read(),y=read(),w=read();\n\t\tif(mp[y][w]) Q.push(std::make_pair(x,mp[y][w]));\n\t\telse mp[y][w]=x;\n\t}\n\twhile(Q.size()) {std::pair<int,int> x=Q.front(); Q.pop(); merge(x.first,x.second);}\n\tfor(register int i=1;i<=n;++i) {if(fa[i]==i) ans+=sz[i]*1ll*(sz[i]-1)/2;}\n\tprintf(\"%lld\\n\",ans); \n\treturn 0;\n}\n```\n\n\n\n\n\n\n\n",
        "postTime": 1613533133,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P7323 \u3010[WC2021] \u62ec\u53f7\u8def\u5f84\u3011"
    },
    {
        "content": "\u6211\u4eec\u8003\u8651\u5408\u6cd5\u7684\u62ec\u53f7\u8def\u5f84\u662f\u600e\u6837\u7684\u5f62\u5f0f\uff1f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5408\u6cd5\u7684 **\u521d\u59cb\u7a7a\u4e32**\uff0c\u4ee5\u4e24\u79cd\u5f62\u5f0f\u6765\u6269\u5c55\u5f97\u5230\u4e00\u4e2a\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\uff1a\n\n- \u5c06\u4e24\u4e2a\u5408\u6cd5\u4e32\u62fc\u63a5\uff0c\u5373\u5bf9\u4e8e\u5408\u6cd5\u4e32 $\\operatorname A$ \u548c $\\operatorname B$\uff0c$\\operatorname {A+B}$ \u4e5f\u662f\u5408\u6cd5\u7684\u3002\n\n- \u5728\u4e00\u4e2a\u5408\u6cd5\u4e32\u7684\u5de6\u53f3\u5404\u52a0\u4e0a\u540c\u4e00\u79cd\u7684\u5de6\u53f3\u62ec\u53f7\uff0c\u5373\u5bf9\u4e8e\u5408\u6cd5\u4e32 $\\operatorname A$\uff0c$(\\operatorname A)$ \u662f\u5408\u6cd5\u7684\u3002\n\n---\n\n\u4ee5\u4e0b\uff0c\u6211\u4eec\u7528\u4e09\u4e2a\u53c2\u6570 $(x,y,z)$ \u8868\u793a\u4e00\u6761\u4ece $x$ \u6307\u5411 $y$\uff0c\u4ee3\u8868\u79cd\u7c7b\u4e3a $z$ \u7684\u5de6\u62ec\u53f7\u7684\u6709\u5411\u8fb9\u3002\n\n\u7528 $p_{x,y}$ \u8868\u793a **\u4e24\u70b9\u4e4b\u95f4\u5b58\u5728\u5408\u6cd5\u8def\u5f84** \u8fd9\u4e2a\u547d\u9898\u7684\u771f\u5047\u3002\n\n\n---\n\n\u9996\u5148\uff0c\u5f88\u597d\u8bc1\u660e\uff0c$p_{x,y}\\Rightarrow p_{y,x}$\u3002\n\n\u7136\u540e\u6839\u636e\u7b2c\u4e00\u79cd\u6269\u5c55\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a$p_{x,y},p_{y,z}\\Rightarrow p_{x,z}$\u3002\n\n\u6839\u636e\u8fd9\u4e24\u4e2a\u63a8\u5bfc\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\uff1a\u5f53 $p_{x,y}$ \u4e3a\u771f\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 $x,y$ **\u5408\u5e76\u4e3a\u4e00\u4e2a\u70b9**\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u610f\u70b9 $z$\uff0c\u90fd\u6709 $p_{x,z}=p_{y,z}$\u3002\n\n\u7136\u540e\u8003\u8651\u6211\u4eec\u5982\u4f55\u5f97\u77e5\u4e00\u4e9b\u5173\u7cfb\u4e3a\u771f\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u7528\u5230\u7b2c\u4e8c\u79cd\u6269\u5c55\uff0c\u8003\u8651\u5728\u4e00\u4e2a\u5408\u6cd5\u4e32\u5de6\u53f3\u52a0\u4e0a\u4e00\u4e2a\u62ec\u53f7\uff0c\u5b9e\u9645\u5728\u56fe\u4e0a\u4ee3\u8868\u4ec0\u4e48\uff1a\n\n\u4e2d\u95f4\u65e2\u7136\u662f\u4e00\u4e2a\u5408\u6cd5\u4e32 $\\operatorname A$\uff0c\u90a3\u4e48 $\\operatorname A$ \u6240\u4ee3\u8868\u7684\u8def\u5f84 $z\\to \\cdots \\to j$\uff0c$z,j$ \u5fc5\u5b9a\u5df2\u7ecf\u7f29\u6210\u4e86\u4e00\u4e2a\u70b9\u3002\n\n\u5047\u8bbe $z,j$ \u7f29\u6210\u7684\u70b9\u7f16\u53f7\u4e3a $y$\u3002\n\n\u90a3\u4e48\u5de6\u53f3\u62ec\u53f7\u4ee3\u8868\u7684\u8fb9\uff0c\u5206\u522b\u5c31\u662f $(x,y,\\beta)$ \u548c $(z,y,\\beta)$\u3002\n\n\u6b64\u65f6\u5c31\u4f1a\u589e\u52a0\u4e00\u6761\u5408\u6cd5\u8def\u5f84 $x\\to \\cdots \\to z$\u3002\n\n---\n\n\u90a3\u4e48\u5206\u6790\u5230\u8fd9\u91cc\uff0c\u505a\u6cd5\u5c31\u5df2\u7ecf\u51fa\u6765\u4e86\uff1a\u5bf9\u4e8e\u8fb9 $(x,y,z)$\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709 $y$ \u76f8\u540c\u4e14 $z$ \u76f8\u540c\u7684\u8fb9\uff0c\u5c06\u5b83\u4eec\u7684 $x$ \u5408\u5e76\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u91cd\u65b0\u7f16\u53f7\uff0c\u7ee7\u7eed\u5224\u65ad\u3002\n\n\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\uff1a\n\n\u52a0\u8fb9\uff0c\u52a0\u8fb9\uff0c\u52a0\u8fb9\uff0c\u7136\u540e\u5e76\u67e5\u96c6\u67e5\u8be2\u3002\n\n\u6ce8\u610f\u9700\u8981\u628a\u91cd\u590d\u7684\u8fb9\u5220\u9664\uff0c\u540c\u65f6\u5f53\u67d0\u4e2a $z$ \u53ea\u6709\u4e00\u6761\u8fb9\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u5220\u6389\u3002\n\n\u53ea\u8981\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u4e00\u76f4\u5230\u4e0d\u80fd\u7ee7\u7eed\u5408\u5e76\u4e3a\u6b62\uff0c\u5c31\u597d\u4e86\u3002\n\n\u81f3\u4e8e\u7b54\u6848\u7684\u8ba1\u7b97\uff0c\u53ea\u8981\u62ff\u6bcf\u4e2a\u8054\u901a\u5757\u5185\u90e8\u7684\u5927\u5c0f\u8ba1\u7b97\u4e24\u4e24\u70b9\u5bf9\u6570\u76ee\u5373\u53ef\u3002\n\n---\n\n\u5b89\u5229\u4e00\u4e0b\u81ea\u5df1\u7684 [WC \u6e38\u8bb0](https://www.cnblogs.com/zjjws/p/14382554.html)\n\n\u7136\u540e\u9644\u4e0a\u6211\u7684\u8003\u573a\u4ee3\u7801\uff0c\u867d\u7136\u80fd\u8fc7\uff0c\u4f46\u662f\u6211\u5206\u6790\u4e0d\u6765\u5b83\u7684\u590d\u6742\u5ea6\u3002\n\n~~\u4f46\u662f\u53ea\u60f3\u6253\u66b4\u529b\u5c31\u8dd1\u8def\uff0c\u7ed3\u679c\u6253\u4e86\u6ee1\u5206\u3002\u4e0d\u8fc7\u6211\u662f\u573a\u5916\u9009\u624b~~\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#define LL long long\nusing namespace std;\ninline LL rin()\n{\n    LL s=0;\n    bool bj=false;\n    char c=getchar();\n    for(;(c>'9'||c<'0')&&c!='-';c=getchar());\n    if(c=='-')bj=true,c=getchar();\n    for(;c>='0'&&c<='9';c=getchar())s=(s<<1)+(s<<3)+(c^'0');\n    if(bj)return -s;\n    return s;\n}\n\nconst int N=3e5+3;\n\nint n,m,k;\nint cuts;\nstruct zjj\n{\n    int f[N];\n    inline void init(int n){for(int i=1;i<=n;i++)f[i]=i;return;}\n    inline int find(int x){return f[x]==x?x:(f[x]=find(f[x]));}\n    inline void add(int x,int y){f[find(x)]=find(y);return;}\n    inline bool check(int x,int y){return find(x)==find(y);}\n    inline void connect(int x,int y){if(!check(x,y))cuts++,add(x,y);return;}\n}Alpha;\n\nstruct gyq\n{\n    int x,y,z;\n    inline void Read(){x=rin();y=rin();z=rin();return;}\n    inline void f5(){x=Alpha.find(x);y=Alpha.find(y);return;}\n}a[N<<1];\n\ngyq d[N<<1];\ninline bool myru_a(gyq x,gyq y){return x.z==y.z?x.y<y.y:x.z<y.z;}\n\nint cutt[N];\nint main()\n{\n    // freopen(\"bracke.in\",\"r\",stdin);\n    // freopen(\"bracket.out\",\"w\",stdout);\n    n=rin();m=rin();k=rin();\n    Alpha.init(n);\n    for(int i=1;i<=m;i++)a[i].Read();\n    sort(a+1,a+m+1,myru_a);\n    for(;m;)\n    {\n        int nam=0,tail=0;\n        cuts=0;\n        for(int i=1,j;i<=m;i=j)\n        {\n            if(a[i].z!=a[i-1].z){if(tail>1)for(;tail;tail--)a[++nam]=d[tail];tail=0;}\n            for(j=i+1;j<=m&&a[j].z==a[i].z&&a[j].y==a[i].y;j++)Alpha.connect(a[j-1].x,a[j].x);\n            d[++tail]=a[i];\n        }\n        if(!cuts)break;\n        if(tail>1)for(;tail;tail--)a[++nam]=d[tail];\n        for(int i=1;i<=nam;i++)a[i].f5();\n        for(int i=1,j;i<=nam;i=j)\n        {\n            for(j=i+1;j<=nam&&a[j].z==a[i].z;j++);\n            sort(a+i,a+j,myru_a);\n        }\n        m=nam;\n    }\n    for(int i=1;i<=n;i++)cutt[Alpha.find(i)]++;\n    \n    LL ans=0;\n    for(int i=1;i<=n;i++)ans+=1LL*(cutt[i]-1)*cutt[i]>>1;\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1612614696,
        "uid": 73551,
        "name": "zjjws",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7323 \u3010[WC2021] \u62ec\u53f7\u8def\u5f84\u3011"
    },
    {
        "content": "[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P7323)\u3002\n\n> \u9898\u610f\uff1a$n$ \u70b9 $2m$ \u8fb9\u6709\u5411\u56fe\uff0c\u6709 $k$ \u4e2a\u62ec\u53f7\u7c7b\u578b\u3002\u8f93\u5165 $u, v, w$ \u8868\u793a\u6709\u4e00\u6761\u4ece $u$ \u5230 $v$\uff0c\u62ec\u53f7\u7c7b\u578b\u4e3a $w$ \u7684\u5de6\u62ec\u53f7\u548c\u4e00\u6761\u901a $v$ \u5230 $u$\uff0c\u62ec\u53f7\u7c7b\u578b\u4e3a $w$ \u7684\u53f3\u62ec\u53f7\u3002\u95ee\u6709\u591a\u5c11\u4e2a\u65e0\u5e8f\u70b9\u5bf9\u6ee1\u8db3\u5b83\u4eec\u4e2d\u7684\u4e00\u6761\u6709\u5411\u8def\u5f84\u7684\u62ec\u53f7\u8fde\u6210\u7684\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u5408\u6cd5\u62ec\u53f7\u5339\u914d\u4e32\u3002\n\n> $k \\le n \\le 3\\times 10^5$\uff0c$m \\le 6\\times 10^5$\u3002\n\n\u603b\u7ed3\uff1a\u6280\u4e0d\u5982\u4eba\uff0c\u7518\u62dc\u4e0b\u98ce\u3002\n\n---\n\n### $Solution:$\n\n\u4ee5\u4e0b\u7528 $(x, y)$ \u8868\u793a\u4e00\u6761\u4ece $x$ \u5230 $y$ \u7684\u8def\u5f84\uff0c$(u, v, w)$ \u8868\u793a\u4e00\u6761\u4ece $u$ \u5230 $v$\uff0c\u5de6\u62ec\u53f7\u7c7b\u578b\u4e3a $w$ \u7684\u8fb9\uff0c$(u, v, -w)$ \u8868\u793a\u4e00\u6761\u4ece $u$ \u5230 $v$\uff0c\u53f3\u62ec\u53f7\u7c7b\u578b\u4e3a $w$ \u7684\u8fb9\u3002\n\n\u5148\u63a8\u4e00\u4e9b\u7ed3\u8bba\uff1a\n\n* \u7ed3\u8bba $1$\uff1a\u82e5 $(x, y)$ \u5408\u6cd5\uff0c\u5219 $(y, x)$ \u5408\u6cd5\u3002\n\n\u8bc1\u660e\uff1a\u5c06 $(x, y)$ \u53d8\u4e3a $(y, x)$ \u540e\uff0c\u539f\u6765\u7684\u5de6\u62ec\u53f7\u53d8\u6210\u53f3\u62ec\u53f7\uff0c\u539f\u6765\u7684\u53f3\u62ec\u53f7\u53d8\u6210\u5de6\u62ec\u53f7\uff0c\u5b57\u7b26\u4e32\u7ffb\u8f6c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e32\u663e\u7136\u8fd8\u662f\u4e2a\u5408\u6cd5\u4e32\u3002\n\n* \u7ed3\u8bba $2$\uff1a\u82e5 $(x, y)$ \u5408\u6cd5\uff0c\u4e14 $(y, z)$ \u5408\u6cd5\uff0c\u5219 $(x, z)$ \u5408\u6cd5\u3002\n\n\u8bc1\u660e\uff1a\u6839\u636e\u62ec\u53f7\u5e8f\u5217\u7684\u5b9a\u4e49\uff08\u82e5 `A` \u5408\u6cd5\uff0c\u4e14 `B` \u5408\u6cd5\uff0c\u5219 `AB` \u5408\u6cd5\uff09\u53ef\u8bc1\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u70b9\u653e\u8fdb\u82e5\u5e72\u4e2a\u96c6\u5408\u5185\uff0c\u5176\u4e2d\u4e00\u4e2a\u96c6\u5408\u5185\u7684\u70b9\u4e92\u76f8\u5408\u6cd5\uff0c\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\u5185\u7684\u70b9\u4e92\u76f8\u4e0d\u5408\u6cd5\u3002\n\n\u8bb0 $S_x$ \u4e3a\u70b9 $x$ \u6240\u5c5e\u7684\u96c6\u5408\uff0c$a\\rightarrow b$ \u8868\u793a $a$ \u7ecf\u8fc7\u4e00\u6761\u8fb9\u76f4\u63a5\u8d70\u5411 $b$\uff0c$a\\iff b$ \u8868\u793a $a, b$ \u95f4\u7684\u4e00\u6761\u5408\u6cd5\u8def\u5f84\u3002\n\n* \u7ed3\u8bba $3$\uff1a\u82e5\u5b58\u5728 $(x, y, w)$ \u548c $(z, y, w)$\uff0c\u5219 $(x, z)$ \u5408\u6cd5\u3002\n\n\u8bc1\u660e\uff1a\u56e0\u4e3a\u6709 $(z, y, w)$\uff0c\u4e8e\u662f\u5b58\u5728 $(y, z, -w)$\uff0c\u90a3\u4e48 $x \\rightarrow y \\rightarrow z$ \u5373\u4e3a\u5408\u6cd5\u8def\u5f84\u3002\n\n\u6211\u4eec\u8003\u8651\u628a\u8fd9\u4e2a\u7ed3\u8bba\u6269\u5c55\u5230\u96c6\u5408\u4e0e\u96c6\u5408\u4e4b\u95f4\uff1a\n\n* \u7ed3\u8bba $3.5$\uff1a\u82e5\u5b58\u5728 $(x, y, w)$ \u548c $(u, v, w)$ \u6ee1\u8db3 $S_{y} = S_v$ \u4e14 $S_x\\neq S_y$ \u4e14 $S_u\\neq S_v$\uff0c\u5219 $S_x, S_u$ \u4e24\u96c6\u5408\u53ef\u5408\u5e76\u3002\n\n\u8bc1\u660e\uff1a\u5bf9\u4e8e\u4efb\u610f\u70b9 $a, b$ \u6ee1\u8db3 $S_a = S_x$\uff0c$S_b = S_u$\uff0c\u6709\u8def\u5f84 $a \\iff x\\rightarrow y \\iff v\\rightarrow u\\iff b$ \u5408\u6cd5\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fd9\u4e9b\u96c6\u5408\u3002\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2a\u70b9\u662f\u5426\u6709\u67d0\u4e2a\u7c7b\u578b\u7684\u5de6\u62ec\u53f7\u8fb9\u8d70\u5411\u5b83\uff0c\u5e76\u8bb0\u5f55\u8fd9\u4e2a\u8d77\u70b9\u3002\u5982\u679c\u6709\u4e24\u4e2a\u8fd9\u6837\u7684\u8d77\u70b9\u5c31\u53ef\u4ee5\u5408\u5e76\uff0c\u7531\u4e8e\u5408\u5e76\u5b8c\u5bf9\u540e\u9762\u7684\u70b9\u4f1a\u6709\u5f71\u54cd\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528\u961f\u5217\u6765\u7ef4\u62a4\u5408\u5e76\u987a\u5e8f\uff0c\u5408\u5e76\u5b8c\u540e\u5c31\u653e\u5230\u961f\u672b\uff0c\u76f4\u5230\u961f\u5217\u6e05\u7a7a\u4e3a\u6b62\u3002\n\n\u6700\u540e\u7edf\u8ba1\u7b54\u6848\uff0c\u76f4\u63a5\u5c06\u6bcf\u4e2a\u96c6\u5408\u5185\u7684\u8d21\u732e\u7b97\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5355\u7eaf\u5730\u5408\u5e76\u6bcf\u6761\u8fb9\u6700\u591a\u53ef\u80fd\u4f1a\u5408\u5e76 $m$ \u6b21\uff0c\u590d\u6742\u5ea6\u4e3a $O(m^2 \\log m)$\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u7528\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u628a\u96c6\u5408\u5185\u70b9\u6570\u8f83\u5c11\u7684\u5408\u5e76\u5230\u70b9\u6570\u8f83\u591a\u7684\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u964d\u4e3a\u4e86 $O(m\\log^2 m)$\u3002\n\n\u7406\u8bba\u4e0a\u6765\u8bf4\u4f1a\u6709\u4e9b\u5361\u5e38\uff0c\u4e0d\u8fc7\u6211\u4f3c\u4e4e\u8dd1\u5f97\u633a\u5feb\u7684\uff1f\uff08\n\n---\n\n### $Code:$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <vector>\n#include <queue>\n#include <map>\n#include <set>\n#include <tr1/unordered_map>\nusing namespace std;\nusing namespace std::tr1;\n#define ll long long\n#define ull unsigned long long\n#define fi first\n#define se second\n#define dingyi int mid = l + r >> 1, ls = p << 1, rs = p << 1 | 1\n#define y0 y_csyakioi_0\n#define y1 y_csyakioi_1\n#define rep(i, x, y) for(int i = x; i <= y; ++i)\n#define per(i, x, y) for(int i = x; i >= y; --i)\n#define repg(i, u) for(int i = head[u]; i; i = e[i].nxt)\ninline int read(){\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(ch < '0' || ch > '9'){ if(ch == '-') f = -1; ch = getchar(); }\n\twhile(ch >= '0' && ch <= '9'){ x = x * 10 + (ch ^ 48); ch = getchar(); }\n\treturn x * f;\n}\nconst int N = 300010;\nint n, m, k, x, y, z, c[N], f[N]; ll ans;\nunordered_map <int, int> mp[N];\nqueue < pair <int, int> > q;\ninline int anc(int x){ return x == f[x] ? x : f[x] = anc(f[x]); }\ninline void Union(int x, int y){\n\tint fx = anc(x), fy = anc(y);\n\tif(fx != fy){\n\t\tif(c[fx] < c[fy]) swap(fx, fy);\n\t\tfor(unordered_map <int, int> ::iterator it = mp[fy].begin(); it != mp[fy].end(); ++it){\n\t\t\tint z = it -> fi, w = it -> se;\n\t\t\tif(mp[fx][z]) q.push(make_pair(mp[fx][z], w));\n\t\t\telse mp[fx][z] = w;\n\t\t}\n\t\tf[fy] = fx; c[fx] += c[fy]; \n\t}\n}\ninline void mian(){\n\tn = read(); m = read(); k = read();\n\trep(i, 1, n) c[i] = 1, f[i] = i;\n\trep(i, 1, m){\n\t\tx = read(); y = read(); z = read();\n\t\tif(mp[y][z]) q.push(make_pair(mp[y][z], x));\n\t\telse mp[y][z] = x;\n\t}\n\twhile(!q.empty()){ pair <int, int> dat = q.front(); q.pop(); Union(dat.fi, dat.se); }\n\trep(i, 1, n) if(f[i] == i) ans += 1ll * c[i] * (c[i] - 1) / 2; printf(\"%lld\\n\", ans);\n}\nint main(){ int qwq = 1; while(qwq--) mian(); return 0; }\n```",
        "postTime": 1613029024,
        "uid": 147999,
        "name": "Warriors_Cat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7323 \u3010[WC2021] \u62ec\u53f7\u8def\u5f84\u3011"
    },
    {
        "content": "[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P7323)\n\nemmmm\u2026\u2026\u2026\u2026\u600e\u4e48\u8bc4\u4ef7\u8fd9\u4e2a\u9898\u561b\u3002\u3002\u3002\u611f\u89c9\u7eaf\u8bba\u7b97\u6cd5\uff0c\u6b64\u9898\u6839\u672c\u8c08\u4e0d\u4e0a\u96be\u9898\uff0c\u4e0d\u8fc7 WC \u65f6\u5019\u592a\u667a\u969c\u53ea\u62ff\u4e86\u4e2a 48pts \u5c31\u8d70\u4eba\u4e86\u3002\u603b\u4e4b\uff0c\u6280\u4e0d\u5982\u4eba\uff0c\u7518\u62dc\u5413\u75af\uff08\n\n\u9996\u5148\u8981\u6ce8\u610f\u5230\u51e0\u4ef6\u4e8b\u60c5\uff1a\n\n1. \u5982\u679c $(x,y)$ \u95f4\u5b58\u5728\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u90a3\u4e48 $(y,x)$ \u4e4b\u95f4\u4e5f\u5b58\u5728\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u56e0\u4e3a\u628a\u4e00\u4e2a\u8def\u5f84\u53cd\u8fc7\u6765\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u628a\u62ec\u53f7\u5e8f\u5217\u7ffb\u8f6c\u8fc7\u6765\uff0c\u5e76\u4e14\u5de6\u62ec\u53f7\u53d8\u53f3\u62ec\u53f7\uff0c\u53f3\u62ec\u53f7\u53d8\u5de6\u62ec\u53f7\u3002\n2. \u5982\u679c $(x,y),(y,z)$ \u4e4b\u95f4\u5b58\u5728\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u90a3\u4e48 $(x,z)$ \u4e4b\u95f4\u4e5f\u5b58\u5728\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u3002\n\n\u6211\u4eec\u5c06\u8fd9\u4e24\u6761\u7efc\u5408\u5728\u4e00\u8d77\u53ef\u5f97\uff1a\u5b58\u5728\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u7684\u4e24\u70b9\u4e00\u5b9a\u662f\u82e5\u5e72\u4e2a\u6781\u5927\u56e2\u7684\u5e76\u3002\u4e8e\u662f\u73b0\u5728\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u53d8\u4e3a\u5982\u4f55\u6c42\u8fd9\u82e5\u5e72\u4e2a\u56e2\u3002\n\n\u6211\u4eec\u7ee7\u7eed\u89c2\u5bdf\uff0c\u53c8\u53ef\u5f97\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u5bf9\u4e8e\u67d0\u4e2a\u70b9 $u$\uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e24\u4e2a\u70b9 $v,w$ \u4e4b\u95f4\u90fd\u5b58\u5728\u8fde\u5411 $u$\uff0c\u5de6\u62ec\u53f7\u7c7b\u578b\u5747\u4e3a $i$ \u7684\u8fb9\uff0c\u90a3\u4e48 $v,w$ \u4e4b\u95f4\u80af\u5b9a\u80fd\u4e92\u76f8\u5230\u8fbe\uff0c\u56e0\u4e3a $v\\to u\\to w$ \u5c31\u662f\u5f62\u5982 $()$ \u7684\u5408\u6cd5\u8def\u5f84\u3002\n\n\u5982\u679c\u6211\u4eec\u5c06\u8fd9\u4e2a\u6027\u8d28\u63a8\u5e7f\u5230\u4e00\u822c\u56e2\u7684\u60c5\u51b5\uff0c\u5c31\u6709\uff1a\u5bf9\u4e8e\u540c\u4e00\u4e2a\u56e2\u4e2d\u7684\u4e24\u70b9 $x,y$\uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e24\u4e2a\u70b9 $u,v$ \u4f7f\u5f97 $u$ \u4e0e $x$ \u4e4b\u95f4\u3001$v$ \u4e0e $y$ \u4e4b\u95f4\u5747\u6709\u5de6\u62ec\u53f7\u7c7b\u578b\u4e3a $i$ \u7684\u8fb9\uff0c\u90a3\u4e48 $u,v$ \u5c31\u80fd\u4e92\u76f8\u5230\u8fbe\uff0c\u56e0\u4e3a $x,y$ \u672c\u8eab\u5c31\u80fd\u4e92\u76f8\u5230\u8fbe\uff0c\u800c\u5728 $x,y$ \u7684\u8def\u5f84\u524d\u9762\u6dfb\u4e00\u4e2a $i$ \u7c7b\u578b\u7684\u5de6\u62ec\u53f7\uff0c\u540e\u9762\u6dfb\u4e00\u4e2a $i$ \u7c7b\u578b\u7684\u53f3\u62ec\u53f7\uff0c\u5f97\u5230\u7684\u4ecd\u662f\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u3002\n\n\u8fd9\u6837\u4e00\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u51fa\u4e00\u4e2a\u505a\u6cd5\uff0c\u5148\u6bcf\u4e2a\u70b9\u5355\u72ec\u6210\u4e00\u4e2a\u56e2\uff0c\u7136\u540e $n$ \u5f00\u4e2a ```std::map``` \u6570\u7ec4 $mp_u$\u3002$mp_{u,w}$ \u8868\u793a\u4ee5 $u$ \u4e3a\u7ec8\u70b9\u662f\u5426\u5b58\u5728\u7c7b\u578b\u4e3a $w$ \u7684\u8fb9\uff0c\u5982\u679c\u6709\uff0c\u90a3\u6211\u4eec\u5c31\u8bb0\u5f55\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u7684\u6ee1\u8db3 $v$ \u4e0e $u$ \u4e4b\u95f4\u5b58\u5728\u7c7b\u578b\u4e3a $w$ \u7684\u8fb9\u7684 $v$\u3002\u7136\u540e\u6bcf\u6b21\u65b0\u8bfb\u5165\u4e00\u6761\u5f62\u5982 $(u,v,w)$ \u7684\u8fb9\uff0c\u6211\u4eec\u5c31\u68c0\u67e5 $mp_{v,w}$ \u662f\u5426\u6709\u503c\uff0c\u5982\u679c\u6709\uff0c\u90a3\u4e48\u8bf4\u660e $mp_{v,w},u$ \u4e0e $v$ \u4e4b\u95f4\u90fd\u5b58\u5728\u7c7b\u578b\u4e3a $w$ \u7684\u8fb9\uff0c\u6211\u4eec\u5c31\u5c06 $mp_{v,w}$ \u4e0e $u$ \u5408\u5e76\uff0c\u5426\u5219\u6211\u4eec\u5c31\u5c06 $mp_{v,w}$ \u8bbe\u4e3a $u$\u3002\n\n\u7136\u540e\u8003\u8651\u600e\u6837\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\u3002\u663e\u7136\u5728\u5408\u5e76\u4ee5 $u,v$ \u4e3a\u4ee3\u8868\u7684\u4e24\u4e2a\u96c6\u5408\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u67d0\u4e2a $w$ \u4f7f\u5f97 $mp_{u,w},mp_{v,w}$ \u90fd\u975e\u96f6\uff0c\u90a3\u4e48\u610f\u5473\u7740 $mp_{u,w}$ \u80fd\u591f\u5230\u8fbe\u67d0\u4e2a\u5728 $u$ \u6240\u4ee3\u8868\u7684\u56e2\u4e2d\u7684\u70b9 $x$\uff0c$mp_{v,w}$ \u80fd\u591f\u5230\u8fbe\u67d0\u4e2a\u5728 $v$ \u6240\u4ee3\u8868\u7684\u56e2\u4e2d\u7684\u70b9 $y$\uff0c\u800c\u7531\u4e8e\u6211\u4eec\u8981\u5c06 $u,v$ \u6240\u5728\u7684\u56e2\u5408\u5e76\u6210\u4e00\u4e2a\u5927\u56e2\uff0c\u6240\u4ee5 $x,y$ \u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u8fd9\u610f\u5473\u7740 $mp_{u,w},mp_{v,w}$ \u4e5f\u80fd\u4e92\u76f8\u5230\u8fbe\uff0c\u4e8e\u662f\u6211\u4eec\u8fdb\u4e00\u6b65\u5408\u5e76 $mp_{u,w},mp_{v,w}$\u3002\u5426\u5219\u5982\u679c\u67d0\u4e2a\u503c\u975e\u96f6\uff0c\u4e0d\u59a8\u8bbe $mp_{v,w}$ \u975e\u96f6\uff0c\u6211\u4eec\u5c31\u4ee4 $mp_{u,w}=mp_{v,w}$\uff0c\u8868\u793a $mp_{v,w}$ \u80fd\u591f\u5230\u8fbe\u67d0\u4e2a $u,v$ \u5408\u5e76\u5f62\u6210\u7684\u5927\u56e2\u4e2d\u7684\u70b9\u3002\u8fd9\u6837\u4e0d\u65ad\u5408\u5e76\u76f4\u5230\u4e0d\u80fd\u518d\u5408\u5e76\u4e2d\u4e3a\u6b62\u5373\u53ef\u3002\n\n\u7b97\u4e0b\u590d\u6742\u5ea6\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8fb9 $(u,v,w)$ \u6700\u591a\u88ab\u5408\u5e76\u4e00\u6b21\uff0c\u6240\u4ee5\u603b\u5171\u6700\u591a\u5408\u5e76 $m$ \u6b21\uff0c\u800c\u5982\u679c\u6211\u4eec\u4f7f\u7528**\u542f\u53d1\u5f0f\u5408\u5e76**\uff0c\u90a3\u4e48\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u88ab\u5408\u5e76 $\\log m$ \u6b21\u3002\u518d\u52a0\u4e0a ```std::map``` \u7684\u590d\u6742\u5ea6\uff0c\u53ef\u77e5\u603b\u590d\u6742\u5ea6\u4e3a $m\\log^2m$\u3002\u5f53\u7136\u5982\u679c\u4f7f\u7528\u54c8\u5e0c\u8868\u53ef\u5c06 ```std::map``` \u7684 $\\log$ \u53bb\u6389\uff0c\u4f46\u61d2\u5f97\u5199\u4e86/cy\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tx=0;char c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int MAXN=3e5;\nint n,m,k,f[MAXN+5],siz[MAXN+5];\nmap<int,int> buc[MAXN+5];\nqueue<pii> q;\nint find(int x){return (!f[x])?x:find(f[x]);}\nvoid merge(int x,int y){\n//\tprintf(\"%d %d\\n\",x,y);\n\tx=find(x);y=find(y);\n\tif(x!=y){\n\t\tif(siz[x]<siz[y]) swap(x,y);\n\t\tffe(it,buc[y]){\n\t\t\tint col=it->fi,z=it->se;\n\t\t\tif(buc[x][col]) q.push(mp(z,buc[x][col]));\n\t\t\telse buc[x][col]=z;\n\t\t} f[y]=x;siz[x]+=siz[y];\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=n;i++) siz[i]=1;\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,w;scanf(\"%d%d%d\",&u,&v,&w);\n\t\tif(buc[v][w]) q.push(mp(u,buc[v][w]));\n\t\telse buc[v][w]=u;\n\t}\n\twhile(!q.empty()){\n\t\tpii p=q.front();q.pop();\n\t\tmerge(p.fi,p.se);\n\t} ll ans=0;\n\tfor(int i=1;i<=n;i++) if(!f[i]) ans+=1ll*siz[i]*(siz[i]-1)/2;\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1612969280,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7323 \u3010[WC2021] \u62ec\u53f7\u8def\u5f84\u3011"
    },
    {
        "content": "\u7531\u4e8e\u8fd9\u4e2a\u9898\u7814\u7a76\u7684\u662f\u62ec\u53f7\u5e8f\u5217\uff0c\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u662f\u600e\u4e48\u5b9a\u4e49\u7684\uff1a  \n\n* \u7a7a\u4e32\u662f\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u3002\n\n* \u5982\u679c $A,B$ \u90fd\u662f\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u90a3\u4e48 $AB$ \u4e5f\u662f\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u3002\n\n* \u5982\u679c $A$ \u662f\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u90a3\u4e48 $c_1Ac_2$ \u662f\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u5176\u4e2d $c_1,c_2$ \u662f\u4e00\u5bf9\u80fd\u914d\u5bf9\u7684\u62ec\u53f7\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u5982\u679c $(x,y),(y,z)$ \u6ee1\u8db3\u6761\u4ef6\uff0c\u5c06\u4e24\u4e2a\u8def\u5f84\u9996\u5c3e\u76f8\u63a5\u5373\u53ef\u63a8\u51fa $(x,z)$ \u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u53c8\u7531\u4e8e\u8fd9\u4e2a\u9898\u91cc\u5de6\u62ec\u53f7\u7684\u8fb9\u548c\u53f3\u62ec\u53f7\u7684\u8fb9\u662f\u53cd\u5411\u7684\uff0c\u6240\u4ee5 $(x,y)$ \u6ee1\u8db3\u53ef\u63a8\u51fa $(y,x)$ \u6ee1\u8db3\u3002   \n\n\u6240\u4ee5\u539f\u56fe\u53ef\u4ee5\u5206\u6210\u82e5\u5e72\u90e8\u5206\uff0c\u6bcf\u4e00\u90e8\u5206\u4e4b\u95f4\u7684\u70b9\u90fd\u6ee1\u8db3\u6761\u4ef6\uff0c\u4e0d\u540c\u90e8\u5206\u4e4b\u95f4\u7684\u70b9\u5219\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u8003\u8651\u8def\u5f84 $x \\to z \\to y$\uff0c\u5982\u679c\u5b83\u662f\u5408\u6cd5\u7684\uff0c\u90a3\u4e48 $x \\to z$ \u548c $y \\to z$ \u8fb9\u4e0a\u7684\u62ec\u53f7\u5c31\u662f\u76f8\u540c\u7684\u3002   \n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u6709\u6b63\u5411\u8fb9\u8fde\u5411\u70b9 $x$ \u7684\u70b9\u4e2d\u628a\u8fb9\u4e0a\u62ec\u53f7\u79cd\u7c7b\u76f8\u540c\u7684\u5408\u5e76\uff1b\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u53ef\u4ee5\u505a\u5230 $O(m\\log n \\times T)$\uff0c\u5176\u4e2d $T$ \u4e3a\u5355\u6b21\u6570\u636e\u7ed3\u6784\u63d2\u5165\u7684\u590d\u6742\u5ea6\u3002\n\n\u90a3\u4e3a\u4ec0\u4e48\u8fd9\u6837\u80fd\u7edf\u8ba1\u51fa\u6240\u6709\u7684\u70b9\u5bf9 $(x,y)$ \u5462\uff1f   \n\n> \u5bf9\u4e8e\u5408\u6cd5\u4e32\u7684\u957f\u5ea6 $len$ \u8fdb\u884c\u5f52\u7eb3\u3002  \n\n> \u5f53 $len=2$ \u65f6\uff0c$x\\to y \\to z$ \u7684\u8def\u5f84\u5fc5\u5b9a\u88ab\u4e0a\u8ff0\u5408\u5e76\u65b9\u6cd5\u7edf\u8ba1\u3002 \n\n> \u5047\u8bbe $len \\le 2k$ \u7684\u8def\u5f84\u90fd\u88ab\u7edf\u8ba1\u4e86\uff0c\u73b0\u5728\u6765\u8bc1 $len=2k+2$ \u7684\u8def\u5f84\u4e5f\u88ab\u7edf\u8ba1\u4e86\u3002\n\n> \u8bbe $s_1,s_2,....s_{2k+2}$ \u662f\u8def\u5f84\u4e0a\u7684\u62ec\u53f7\u9996\u5c3e\u76f8\u63a5\u7ec4\u6210\u7684\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u3002\n\n> * \u82e5 $s_1$ \u5339\u914d\u7684\u62ec\u53f7\u662f $s_{2k+2}$\uff0c\u90a3\u4e48 $s_2,....s_{2k+1}$ \u662f\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u4e14\u957f\u5ea6\u4e3a $2k$\uff0c\u5728\u7edf\u8ba1\u8303\u56f4\u5185\uff0c\u800c $s_1$ \u4e0e $s_{2k+2}$ \u914d\u5bf9\uff0c\u6240\u4ee5\u5bf9\u5e94\u70b9\u4f1a\u88ab\u5408\u5e76\u8fdb\u4e00\u4e2a\u96c6\u5408\u3002\n\n> * \u82e5 $s_1$ \u4e0e $s_i$ \u5339\u914d $(i<2k+2)$\uff0c\u90a3\u4e48 $s_1,...,s_i$\uff0c$s_{i+1},...,s_{2k+2}$ \u90fd\u662f\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u4e14\u90fd\u5728\u7edf\u8ba1\u8303\u56f4\u5185\uff0c\u800c\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u88ab\u5e76\u8fdb\u4e00\u4e2a\u96c6\u5408\u3002\n\n> \u7531\u7b2c\u4e8c\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u4e0a\u8ff0\u5408\u5e76\u65b9\u6cd5\u53ef\u4ee5\u7edf\u8ba1\u6240\u6709\u5408\u6cd5\u7684 $(x,y)$\u3002\n\n\u8d34\u4e00\u4e0b\u672c\u4eba\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<unordered_map>\nusing namespace std;\nconst int NR=3e5+10;\n#define ll long long\n#define pii pair<int,int>\n#define mkp make_pair\n#define fi first\n#define se second\nint n,m,k;\nunordered_map<int,int>mp[NR];\nqueue<pii>task; \nint fa[NR],size[NR];\nvoid init(){\n\tfor(int i=1;i<=n;i++)\n\t\tfa[i]=i,size[i]=1;\n}\n\nint get(int x){\n\tif(fa[x]==x)return x;\n\treturn fa[x]=get(fa[x]);\n}\nvoid merge(int x,int y){\n\tx=get(x);y=get(y);\n\tif(x==y)return;\n\tif(size[x]>size[y])swap(x,y);\n\tfa[x]=y;size[y]+=size[x];\n\tfor(auto it:mp[x]){\n\t\tif(mp[y].count(it.fi))task.push(mkp(it.se,mp[y][it.fi]));\n\t\telse mp[y][it.fi]=it.se;\n\t}\n}\n\nint main(){\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,z;scanf(\"%d%d%d\",&x,&y,&z);\n\t\tswap(x,y);\n\t\tif(mp[x].count(z))task.push(mkp(y,mp[x][z]));\n\t\telse mp[x][z]=y;\n\t}\n\tinit();\n\twhile(!task.empty())\n\t\tmerge(task.front().fi,task.front().se),task.pop();\n\tll ans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tif(fa[i]==i)ans+=1ll*size[i]*(size[i]-1)/2;\n\tcout<<ans<<endl;\n\treturn 0;\n} \n\n```\n",
        "postTime": 1643117756,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "[WC2021] \u62ec\u53f7\u8def\u5f84 \u9898\u89e3"
    },
    {
        "content": "\u77e5\u9053\u8fd9\u662f\u5e76\u67e5\u96c6\u5c31\u597d\u505a\u4e86\u3002              \n\n\u9996\u5148\u6211\u4eec\u60f3\u4e00\u4e0b\u6211\u4eec\u8fd9\u9053\u9898\u6709\u4e2a\u4ec0\u4e48\u6027\u8d28\u3002           \n\n\u9996\u5148\u5f88\u663e\u7136\u6211\u4eec\u597d\u50cf\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u6df1\u5ea6\u4e3a 2 \u7684 BFS \u9884\u5904\u7406\u51fa\u6765\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u3002           \n\n\u63a5\u7740\u6211\u4eec\u8003\u8651\u62ec\u53f7\u7684\u6027\u8d28\uff0c\u65e0\u975e\u5c31\u662f\u4e24\u79cd\u62ec\u53f7\u5e8f\u5217\uff1a\u5916\u9762\u4e00\u76f4\u5408\u5408\u5408\u6210\u4e00\u4e2a\u5d4c\u5957\u62ec\u53f7\u5e8f\u5217\u4ee5\u53ca\u51e0\u4e2a\u62ec\u53f7\u5e8f\u5217\u62fc\u5728\u4e00\u8d77\u7684\u62ec\u53f7\u5e8f\u5217\u3002               \n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u4e24\u4e2a\u6027\u8d28\uff1a          \n\n- $(x , y)$ \u6210\u7acb\u5219 $(y , x)$ \u6210\u7acb\u3002              \n\n- $(x , y) , (y , z)$ \u6210\u7acb\u5219 $(x , z)$ \u6210\u7acb\u3002            \n\n\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u662f $O(n ^ 3)$ \u7c7b\u4f3c\u4f20\u9012\u95ed\u5305\u7684\u5199\u6cd5\u6765\u505a\u8fd9\u4e2a\u73a9\u610f\u513f\uff0c\u4f46\u662f\u5f88\u5feb\u611f\u89c9\u4f18\u5316\u4e0d\u52a8\uff0c\u5f03\u4e86\u3002              \n\n\u63a5\u7740\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u73a9\u610f\u513f\u597d\u50cf\u53ef\u4ee5\u5e76\u67e5\u96c6\uff0c\u6bd5\u7adf\u662f~~\u52a0\u8fb9\u52a0\u8fb9\u52a0\u8fb9\u5e76\u67e5\u96c6\u67e5\u8be2~~\u5bf9\u5427\u3002             \n\n\u8003\u8651\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\u7684\u70b9\u96c6\uff0c\u8fd9\u91cc\u5c31\u76f4\u63a5\u7528\u4e0a\u9762\u90a3\u4e2a\u6027\u8d28\u5c31\u53ef\u4ee5\u5f88\u597d\u8bc1\u660e\u5e76\u67e5\u96c6\u7684\u6b63\u786e\u6027\u3002          \n\n\u63a5\u7740\u6211\u7684\u601d\u8003\u89d2\u5ea6\u5c31\u7565\u5fae\u590d\u6742\u4e86\uff1a\u8003\u8651\u6bcf\u4e2a\u70b9\u5f00\u4e24\u4e2a vector \u7ef4\u62a4\u5de6\u62ec\u53f7\u8fb9\u548c\u53f3\u62ec\u53f7\u8fb9\u5e76\u4e14\u6309\u7167 w \u6392\u5e8f\uff0c\u505a\u7684\u65f6\u5019\u6bcf\u6b21\u679a\u4e3e\u4e2d\u8f6c\u70b9\uff0c\u7136\u540e\u66b4\u529b\u7528\u53cc\u6307\u9488\u53bb\u5408\uff0c\u5408\u7684\u65f6\u5019\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u5373\u53ef\u505a\u5230\u4e00\u4e2a\u5747\u644a\u4e0b\u6765\u7684 $O(m \\log m)$ \uff0c\u7136\u540e\u6211\u4eec\u6bcf\u6b21\u53ea\u4f1a\u628a 2m \u6761\u8fb9\u626b\u5230\u6240\u4ee5\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m)$ \u3002         \n\n\u8003\u8651\u6bcf\u6b21\u5b8c\u540e\u6211\u4eec\u5224\u4e00\u4e0b\u5f53\u524d\u66f4\u65b0\u7b54\u6848\u6ca1\u6709\uff0c\u6ca1\u6709\u7684\u8bdd\u5c31\u9000\u51fa\u3002         \n\n\u4f46\u662f\u8fd9\u4e2a\u505a\u6cd5\u5728\u5408\u5e76\u65f6\u53ef\u80fd\u4f1a\u88ab\u5361\u6210 $O(m ^ 2)$ \uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u8003\u8651\u53e6\u5916\u4e00\u79cd\u5b9e\u73b0\u3002\n\n\u6211\u4eec\u76f4\u63a5\u5f00\u4e2an \u4e2a map \u7ef4\u62a4 x \u6bcf\u79cd w \u8fde\u8fb9\u662f\u5426\u5b58\u5728\u5e76\u4e14\u8bb0\u5f55\u7b2c\u4e00\u4e2a\u8fde\u5230\u7684\u70b9\uff0c\u7136\u540e\u6765\u4e2a\u961f\u5217\uff0c\u66b4\u529b\u5728\u52a0\u8fb9\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u628a\u53ef\u4ee5\u5408\u5e76\u7684\u70b9\u76f4\u63a5\u5408\u5e76\u4e86(\u76f8\u5f53\u4e8e\u679a\u4e3e\u4e2d\u8f6c\u70b9\u540e\u6254\u8fdb\u961f\u5217)\uff0c\u7136\u540e\u4e0d\u505c\u7684\u5408\u5408\u5408\u76f4\u5230\u5408\u4e0d\u52a8\u4e3a\u6b62\uff0c\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log m \\log k)$ \u4e4b\u7c7b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5dee\u70b9\u5c31\u8dd1\u8d85\u65f6\u4e86\u3002                    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<vector>\n#include<map>\n#include<queue>\nusing namespace std;\nconst int Len = 3e5 + 5;\nint n,m,fa[Len];//\u4e0d\u96be\u60f3\u5230\u7528\u5e76\u67e5\u96c6\u628a\u53ef\u4ee5\u505a\u5230\u7684\u70b9\u5408\u8d77\u6765\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u6bcf\u6b21\u53ea\u7528\u66f4\u65b0\u4e00\u5c42\u62ec\u53f7\u5c31\u53ef\u4ee5\u4e86\n//\u6211\u4eec\u8fd8\u53d1\u73b0\u8fd9\u6837\u7684\u8bdd\u8fd8\u53ef\u4ee5\u628a()(())\u8fd9\u79cd\u5f62\u5f0f\u7ed9\u5408\u8d77\u6765\uff0c\u73b0\u5728\u5c31\u9700\u8981\u8003\u8651\u521d\u59cb\u5316        \n//\u76f4\u63a5\u5bf9\u6bcf\u4e2a\u70b9BFS\u521d\u59cb\u5316\u51fa\u6765\u6700\u5148\u7684\u60c5\u51b5\uff0c\u63a5\u7740\u8003\u8651\u600e\u4e48\u628a\u7b54\u6848\u5408\u5e76\u8d77\u6765\n//\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u7528Floyd\u5c31\u53ef\u4ee5n^3\u4e86\n//\u6211\u4eec\u8003\u8651\u8fd9\u4e48\u73a9\uff0c\u5982\u679c\u628a\u5e76\u67e5\u96c6\u770b\u6210\u4e00\u4e2a\u7f29\u70b9\u7684\u8fc7\u7a0b\uff0c\u90a3\u4e48\u5728\u7ecf\u8fc7\u7f29\u70b9\u540e\u7684\u56fe\u4e0a\u4e0a\u7ecf\u8fc7\u6709\u9650\u6b21\u521d\u59cb\u5316\u540e\u76f4\u5230\u7b54\u6848\u4e0d\u53ef\u4ee5\u66f4\u65b0\u5373\u4e3a\u6700\u540e\u7b54\u6848\n//\u611f\u89c9\u4e0d\u662f\u5f88\u597d\u6253\uff1a\u628a\u8fb9\u5206\u4e3a\u5de6\u62ec\u53f7\u548c\u53f3\u62ec\u53f7\u4e24\u79cd\u8fb9\u5f00vector\u5b58\uff0c\u7136\u540e\u6bcf\u6b21\u5408\u5e76\u65f6\u679a\u4e3e\u4e2d\u8f6c\u70b9\u76f4\u63a5\u66b4\u529b\u53cc\u6307\u9488\u626b\u4e00\u904d\uff0c\u5408\u5e76\u8fd8\u662f\u542f\u53d1\u5f0f\u5408\u5e76 \n//\u8003\u8651\u5148\u62ff\u4e00\u4e2alog\u6765\u6362\uff0c\u7528map\u5b58\u4e00\u4e0b\u4e0a\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u7167\u6837\u542f\u53d1\u5f0f\u5408\u5e76 \nstruct Node\n{\n\tint x,y;\n\tNode(){x = 0 , y = 0;}\n\tNode(const int X,const int Y){x = X , y = Y;}\n};\nmap<int,int> mp[Len];\nqueue<Node> q;\nvoid makeSet(int x){for(int i = 1 ; i <= x ; i ++) fa[i] = i;}\nint findSet(int x){return fa[x] == x ? fa[x] : fa[x] = findSet(fa[x]);}\nint cnt[Len];\ninline void unionSet(int x,int y)\n{\n\tint u = findSet(x) , v = findSet(y);\n\tif(u == v) return;\n\tif(mp[u].size() < mp[v].size()) swap(u , v);\n\tmap<int,int>::iterator it;\n\tfa[v] = u;\n\tfor(it = mp[v].begin() ; it != mp[v].end() ; it ++)\n\t{\n\t\tint w = it -> first , v = it -> second;\n\t\tif(!mp[u].count(w)) mp[u][w] = v;\n\t\telse q.push(Node(mp[u][w] , v));\n\t}\n} \nlong long ans;\nbool flaw[Len];\nint k;\nsigned main()\n{\n\tscanf(\"%d %d %d\",&n,&m,&k);\n\tfor(int i = 1 ; i <= m ; i ++) \n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d %d %d\",&x,&y,&z);\n\t\tif(!mp[y].count(z)) mp[y][z] = x;\n\t\telse q.push(Node(x , mp[y][z]));\n\t}\n\tmakeSet(n);\n\tNode res;\n\twhile(!q.empty())\n\t{\n\t\tres = q.front() ; q.pop();\n\t\tunionSet(res.x , res.y); \n\t}\n\tfor(int i = 1 ; i <= n ; i ++) cnt[findSet(i)] ++;\n\tfor(int i = 1 ; i <= n ; i ++) ans += 1LL * cnt[i] * (cnt[i] - 1) >> 1; \n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1618581823,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7323 [WC2021] \u62ec\u53f7\u8def\u5f84"
    },
    {
        "content": "upd\uff1a\u4fee\u6539\u4e86\u4ee3\u7801\u7684\u9519\u8bef\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P7323)\n\n* \u7ed3\u8bba $1$\uff1a\n\n  * \u53ef\u9006\u6027\u3002\u82e5\u7531 $x$ \u5230 $y$ \u6709\u4e00\u6761\u53ef\u4ee5\u5339\u914d\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u6cbf\u7740\u539f\u8def\u5f84\u76f8\u53cd\u7684\u65b9\u5411\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u6761\u7531 $y$ \u5230 $x$ \u7684\u5339\u914d\u8def\u5f84\u3002\n\n  * \u4f20\u9012\u6027\u3002\u82e5\u7531 $x$ \u5230 $y$ \u6709\u4e00\u6761\u5339\u914d\u8def\u5f84\uff0c\u7531 $y$ \u5230 $z$ \u4e5f\u6709\u4e00\u6761\u5339\u914d\u8def\u5f84\uff0c\u90a3\u4e48\u5408\u5e76\u8fd9\u4e24\u6761\u8def\u5f84\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u6761\u7531 $x$ \u5230 $z$ \u7684\u5339\u914d\u8def\u5f84\u3002\n\n  \u7531\u5b9a\u4e49\u5373\u53ef\u8bc1\u660e\u4ee5\u4e0a\u4e24\u6761\u7ed3\u8bba\u3002\n\n* \u7ed3\u8bba $1$ \u7684\u63a8\u8bba\uff1a\u56fe\u4e2d\u7684\u70b9\u4f1a\u6784\u6210\u82e5\u5e72\u4e2a\u96c6\u5408\uff0c\u5176\u4e2d\u76f8\u540c\u96c6\u5408\u4e2d\u7684\u70b9\u4e24\u4e24\u4e4b\u95f4\u5b58\u5728\u5339\u914d\u8def\u5f84\uff0c\u4e0d\u540c\u96c6\u5408\u4e2d\u7684\u70b9\u4e24\u4e24\u4e4b\u95f4\u4e0d\u5b58\u5728\u5339\u914d\u8def\u5f84\u3002\n\n \t\u8bc1\u660e\uff1a\u82e5\u5b9a\u4e49\u4e24\u4e24\u4e4b\u95f4\u5b58\u5728\u5339\u914d\u8def\u5f84\u7684\u70b9\u6784\u6210\u4e00\u4e2a\u96c6\u5408\uff0c\u53ea\u9700\u8bc1\u660e\u4e0d\u5b58\u5728\u5c5e\u4e8e\u4e0d\u540c\u96c6\u5408\u7684\u4e24\u70b9\u4e4b\u95f4\u5b58\u5728\u5339\u914d\u8def\u5f84\u5373\u53ef\u3002\u82e5\u5206\u522b\u5c5e\u4e8e $S_1$ \u548c $S_2$ \u7684\u4e24\u70b9 $u,v$ \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u7531 $u$ \u5230 $v$ \u7684\u5339\u914d\u8def\u5f84\uff0c\u90a3\u4e48\u6839\u636e\u4f20\u9012\u6027\uff0c\u96c6\u5408 $S_2$ \u4e2d\u7684\u4efb\u610f\u4e00\u70b9 $v'$ \u548c $u$ \u4e4b\u95f4\u90fd\u5b58\u5728\u4e00\u6761\u7531 $u$ \u5230 $v'$ \u7684\u5339\u914d\u8def\u5f84\uff1b\u540c\u7406\uff0c\u96c6\u5408 $S_1$ \u4e2d\u7684\u4efb\u610f\u4e00\u70b9 $u'$ \u548c\u96c6\u5408 $S_2$ \u4e2d\u7684\u4efb\u610f\u4e00\u70b9 $v'$ \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u7531 $u'$ \u5230 $v'$ \u7684\u5339\u914d\u8def\u5f84\u3002\u518d\u6839\u636e\u53ef\u9006\u6027\uff0c\u63a8\u51fa\u96c6\u5408 $S_1$ \u548c\u96c6\u5408 $S_2$ \u4e2d\u7684\u70b9\u6ee1\u8db3\u4e24\u4e24\u4e4b\u95f4\u5b58\u5728\u5339\u914d\u8def\u5f84\uff0c\u6b64\u65f6 $S_1$ \u548c $S_2$ \u53ef\u4ee5\u5408\u5e76\u6210\u4e00\u4e2a\u96c6\u5408\u3002\u6545\u547d\u9898\u5f97\u8bc1\u3002\n\n\u5f97\u5230\u4e86\u5212\u5206\u96c6\u5408\u7684\u601d\u8def\uff0c\u6211\u4eec\u5c31\u9700\u8981\u8003\u8651\u54ea\u4e9b\u96c6\u5408\u53ef\u4ee5\u88ab\u5408\u5e76\u3002\n\n* \u7ed3\u8bba $2$\uff1a\u82e5\u7528 $(u,v,w)$ \u63cf\u8ff0\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u5176\u4e2d $u,v$ \u4e3a\u5206\u522b\u4e3a\u8fb9\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c$w$ \u4e3a\u8fb9 $(u,v)$ \u4e0a\u5de6\u62ec\u53f7\u6807\u8bb0\u7684\u7c7b\u578b\u3002\u5219\u82e5\u5b58\u5728\u8fb9 $(u_1,v_1,w_1),(u_2,v_2,w_2)$\uff0c\u6ee1\u8db3 $w_1=w_2$\uff0c$v_1,v_2$ \u5c5e\u4e8e\u76f8\u540c\u96c6\u5408\u4e14\u4e0e $u_1,u_2$ \u5c5e\u4e8e\u4e09\u4e2a\u4e0d\u540c\u7684\u96c6\u5408\uff0c\u5219 $u_1,u_2$ \u6240\u5728\u96c6\u5408\u53ef\u4ee5\u88ab\u5408\u5e76\u3002\n\n\t\u8bc1\u660e\uff1a\u663e\u7136 $v_1,v_2$ \u4e4b\u95f4\u5b58\u5728\u5339\u914d\u8def\u5f84\uff0c\u5219 $u_1\\rightarrow v_1\\rightarrow v_2\\rightarrow u_2$ \u6784\u6210\u4e00\u6761\u5339\u914d\u8def\u5f84\u3002\u663e\u7136 $u_1,u_2$ \u6240\u5728\u96c6\u5408\u53ef\u4ee5\u88ab\u5408\u5e76\uff0c\u6545\u547d\u9898\u5f97\u8bc1\u3002\n    \n\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u96c6\u5408\uff0c\u5e76\u5bf9\u4e8e\u6bcf\u79cd\u5de6\u62ec\u53f7\u6807\u8bb0\u7c7b\u578b\uff0c\u7ef4\u62a4\u5176\u4e2d\u4e00\u4e2a\u5165\u8fb9\u7684\u8d77\u70b9\u6240\u5728\u7684\u96c6\u5408\u3002\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u5e76\u67e5\u96c6\uff0c\u6240\u4ee5\u53ea\u4fdd\u5b58\u4e00\u4e2a\u70b9\u5c31\u597d\u4e86\u3002\u5f53\u5408\u5e76\u8fc7\u7a0b\u4e2d\uff0c\u540c\u79cd\u5de6\u62ec\u53f7\u6807\u8bb0\u7c7b\u578b\u7684\u5165\u8fb9\u51fa\u73b0\u91cd\u590d\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u628a\u91cd\u590d\u7684\u4e24\u4e2a\u96c6\u5408\u518d\u8fdb\u884c\u5408\u5e76\uff0c\u4fdd\u8bc1\u8fd9\u6761\u5165\u8fb9\u59cb\u7ec8\u53ea\u5bf9\u5e94\u4e00\u4e2a\u96c6\u5408\u3002\u56e0\u4e3a\u96c6\u5408\u662f\u4e0d\u65ad\u6269\u5927\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u79cd\u7c7b\u4f3c bfs \u7684\u5f62\u5f0f\uff0c\u628a\u53ef\u5408\u5e76\u7684\u96c6\u5408\u6254\u5230\u961f\u5217\u5c3e\u7aef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define db double\n#define mp(a,b) make_pair((a), (b))\n#define pii pair<int, int> \nusing namespace std;\ninline int read() {\n\tint x = 0; bool op = 0;\n\tchar c = getchar();\n\twhile(!isdigit(c))op |= (c == '-'), c = getchar();\n\twhile(isdigit(c))x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\n\treturn op ? -x : x;\n}\nconst int N = 300010;\nint n, m, k;\nint f[N], siz[N], cnt[N];\nmap<int, int> e[N];\nqueue<pii> q;\nint find(int x) {return (f[x] == x) ? x : f[x] = find(f[x]);}\nint main() {\n\tn = read(); m = read(); k = read();\n\tfor(int i = 1; i <= m; i++) {\n\t\tint u = read(), v = read(), w = read();\n\t\tif(e[v].find(w) != e[v].end())q.push(mp(e[v][w], u));\n\t\telse e[v][w] = u;\n\t}\n\tfor(int i = 1; i <= n; i++) {f[i] = i; siz[i] = 1;}\n\twhile(q.empty() == false) {\n\t\tpii cur = q.front(); q.pop();\n\t\tint u = find(cur.first), v = find(cur.second);\n\t\tif(u == v)continue;\n\t\tif(siz[u] < siz[v])swap(u, v);\n\t\tf[v] = u; siz[u] += siz[v]; \n\t\tfor(map<int, int>::iterator it = e[v].begin(); it != e[v].end(); it++) {\n\t\t\tif(e[u].find(it -> first) != e[u].end())q.push(mp(e[u][it -> first], it -> second));\n\t\t\telse e[u][it -> first] = it -> second;\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i++)cnt[find(i)]++;\n\tll ans = 0;\n\tfor(int i = 1; i <= n; i++)ans += 1ll * cnt[i] * (cnt[i] - 1) / 2;\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1612963897,
        "uid": 149192,
        "name": "__gcd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7323 \u3010[WC2021] \u62ec\u53f7\u8def\u5f84\u3011"
    },
    {
        "content": "[\u4e2a\u4eba\u535a\u5ba2\u9605\u8bfb](https://vixbob.moe/7.html)\n\n\u7b26\u53f7\uff1a$\\langle u,v,k\\rangle$\u8868\u793a\u4e00\u6761$u\\to v$\u7684\u62ec\u53f7\u7f16\u53f7\u4e3a$k$\u7684\u5de6\u62ec\u53f7\u8fb9\uff0c$E$\u4e3a\u8fb9\u96c6\u3002\n\n\u9996\u5148\u6709\u51e0\u4e2a\u7ed3\u8bba\uff1a\n\n- \u5982\u679c$u\\to v$\u5b58\u5728\u5408\u6cd5\u8def\u5f84\uff0c\u90a3\u4e48$v\\to u$\u4e5f\u4e00\u5b9a\u5b58\u5728\u5408\u6cd5\u8def\u5f84\u3002\u8bc1\u660e\u6bd4\u8f83\u663e\u7136\uff0c\u53ea\u8981\u53d1$u\\to v$\u7684\u8def\u5f84\u53cd\u7740\u8d70\u4e00\u904d\u5373\u53ef\u3002\n- \u5982\u679c$u\\to v$\uff0c$v\\to x$\u5206\u522b\u5b58\u5728\u5408\u6cd5\u8def\u5f84\uff0c\u90a3\u4e48$u\\to x$\u4e5f\u5b58\u5728\u5408\u6cd5\u8def\u5f84\u3002\u628a\u4e24\u6761\u8def\u5f84\u8fde\u8d77\u6765\u5373\u53ef\u3002\n- \u5982\u679c$u\\to v$\u5b58\u5728\u5408\u6cd5\u8def\u5f84\uff0c$x\\to u$\u5b58\u5728\u4e00\u6761\u5de6\u62ec\u53f7\u8fb9\uff0c\u5e76\u4e14$v\\to y$\u5b58\u5728\u4e00\u6761**\u4e0e\u4e4b\u5bf9\u5e94**\u7684\u53f3\u62ec\u53f7\u8fb9\u3002\u90a3\u4e48$x\\to y$\u4e5f\u5b58\u5728\u5408\u6cd5\u8def\u5f84\u3002\n\n\u5b9a\u4e49\u4e00\u4e2a\u7b49\u4ef7\u96c6\u5408$S$\uff1a$\\forall u,v\\in S$\uff0c$u\\to v$\u548c$v\\to u$\u90fd\u5206\u522b\u5b58\u5728\u5408\u6cd5\u8def\u5f84\u3002($u\\to u$\u7684\u8def\u5f84\u4e5f\u662f\u5408\u6cd5\u8def\u5f84) \n\n\u90a3\u4e48\u7b49\u4ef7\u96c6\u5408\u4e5f\u6709\u82e5\u5e72\u6027\u8d28\uff1a\n\n- \u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a**\u6709\u4ea4\u7684**\u7b49\u4ef7\u96c6\u5408$S,T$\uff0c$S\\cup T$\u4e5f\u662f\u7b49\u4ef7\u96c6\u5408\u3002\n- \u5bf9\u4e8e\u4efb\u610f$u,v(u\\ne v)$\uff0c\u5b58\u5728\u7b49\u4ef7\u96c6\u5408$S$\uff0c\u5e76\u4e14$x\\in S,\\langle u,x,k\\rangle, \\langle v,x,k\\rangle \\in E$\u3002\u90a3\u4e48$\\{u,v\\}$\u4e5f\u662f\u4e00\u4e2a\u7b49\u4ef7\u96c6\u5408\u3002\n- \u5bf9\u4e8e\u4efb\u610f$x$\uff0c$\\{x\\}$\u662f\u4e00\u4e2a\u7b49\u4ef7\u96c6\u5408\u3002\n\n\u4e0d\u96be\u5f97\u51fa\uff1a$n$\u4e2a\u8282\u70b9\u4e00\u5b9a\u53ef\u4ee5\u88ab\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u6781\u5927\u7b49\u4ef7\u96c6\u5408\uff0c\u6700\u7ec8\u7b54\u6848\u4e3a$\\sum\\limits\\binom{|S_i|}{2}$\u3002\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a\u5982\u4f55\u5212\u5206\u7b49\u4ef7\u96c6\u5408\u3002\n\n\u5b9a\u4e49\u5bf9\u4e8e\u7b49\u4ef7\u96c6\u5408\u7684\u51fd\u6570$\\operatorname{Out}_k(S)=\\{u|x\\in S,\\langle u,x,k \\rangle\\in E\\} $\u3002\u663e\u7136$\\operatorname{Out}_k(S)$\u4e5f\u662f\u4e00\u4e2a\u7b49\u4ef7\u96c6\u5408\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u505a\u6cd5\uff1a\u5982\u679c\u5b58\u5728$x,k$\u4f7f\u5f97$|\\operatorname{Out}_k(\\{x\\})|\\ge 2$\uff0c\u6211\u4eec\u5c06$\\operatorname{Out}_k(\\{x\\})$\u5185\u7684\u6240\u6709\u70b9\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u5e76\u4e14\u66f4\u65b0\u8fd9\u4e2a\u70b9\u7684$\\operatorname{Out}$\u3002\u76f4\u5230\u6240\u6709\u70b9\u7684$\\operatorname{Out}$\u90fd\u5df2\u7ecf\u88ab\u66f4\u65b0\uff0c\u7a0b\u5e8f\u7ed3\u675f\u3002\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u7528\u961f\u5217\u8bb0\u5f55\u9700\u8981\u88ab\u66f4\u65b0\u7684\u70b9\uff0c\u7528$\\operatorname{map}$+\u542f\u53d1\u5f0f\u5408\u5e76\u6216\u7ebf\u6bb5\u6811\u5408\u5e76\u6765\u5b9e\u73b0$\\operatorname{Out}$\u7684\u7ef4\u62a4\uff0c\u5e76\u67e5\u96c6\u7ef4\u62a4\u7b49\u4ef7\u96c6\u5408\u3002\u8fd9\u91cc\u6211\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u5b9e\u73b0\uff0c\u590d\u6742\u5ea6$O(m \\log m)$\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#define mid ((l + r) / 2)\n#define rep(i, j, k) for(int i = j; i <= k; ++i)\n\ninline int read() {\n    int x = 0;\n    scanf(\"%d\", &x);\n    return x;\n}\n\ntypedef long long ll;\n\nusing std::vector;\nusing std::queue;\n\nconst int maxn = 3e5 + 5;\nconst int maxm = 6e5 + 5;\nconst int LOG = 25;\n\nint n, m, k, root[maxn], cnt, tot, id[maxm * LOG], fa[maxn], siz[maxn], vis[maxm], ROOT;\nvector<int> G[maxm];\nqueue<int> q;\n\nstruct node {\n    int ls, rs;\n    node(int a = 0, int b = 0) { ls = a; rs = b; }\n} t[maxm * LOG];\n\nvoid insert(int l, int r, int pos, int &p, int x) {\n    if(!p) p = ++cnt;\n    if(l == r) {\n        if(!id[p]) id[p] = ++tot;\n        G[id[p]].push_back(x);\n        if(G[id[p]].size() == 2) {\n            q.push(id[p]);\n            vis[id[p]] = 1;\n        } return;\n    }\n    if(pos <= mid) insert(l, mid, pos, t[p].ls, x);\n    else insert(mid + 1, r, pos, t[p].rs, x);\n}\n\nint merge(int l, int r, int u, int v) {\n    if(!u || !v) return u + v;\n    if(l == r) {\n        if(G[id[u]].size() < G[id[v]].size()) std::swap(u, v);\n        for(auto x : G[id[v]]) G[id[u]].push_back(x);\n\n        if(G[id[u]].size() > 1 && !vis[id[u]]) {\n            q.push(id[u]); vis[id[u]] = 1;\n        }\n        G[id[v]].clear(); vis[id[v]] = 2;\n        return u;\n    }\n    int lson = merge(l, mid, t[u].ls, t[v].ls);\n    int rson = merge(mid + 1, r, t[u].rs, t[v].rs);\n    t[u] = node(lson, rson); t[v] = node(0, 0);\n    return u;\n}\n\nint findx(int x) { return x == fa[x] ? x : fa[x] = findx(fa[x]); }\n\ninline int merge_set(int x, int y) {\n    x = findx(x); y = findx(y);\n    if(x == y) return x;\n    siz[x] += siz[y];\n    root[x] = merge(1, k, root[x], root[y]);\n    return fa[y] = x;\n}\n\nint main() {\n    n = read(); m = read(); k = read();\n    rep(i, 1, n) fa[i] = i, siz[i] = 1;\n    rep(i, 1, m) {\n        int x = read(), y = read(), c = read();\n        insert(1, k, c, root[y], x);\n    }\n    while(q.size()) {\n        int u = q.front(); q.pop();\n        if(vis[u] == 2) continue;\n        int x = G[u][0];\n        for(int i = 1; i < G[u].size(); ++i) x = merge_set(x, G[u][i]);\n        G[u].clear(); G[u].push_back(x);\n        vis[u] = 0;\n    }\n    ll ans = 0;\n    rep(i, 1, n) if(findx(i) == i) ans += 1ll * siz[i] * (siz[i] - 1) / 2;\n    std::cout << ans << std::endl;\n    return 0;\n}\n```",
        "postTime": 1613019223,
        "uid": 50971,
        "name": "ViXbob",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7323 \u3010[WC2021] \u62ec\u53f7\u8def\u5f84\u3011"
    }
]