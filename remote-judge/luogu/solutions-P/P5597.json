[
    {
        "content": "\u8fd9\u9898\u601d\u7ef4\u633a\u65b0\u9896\u7684\uff0c\u4e00\u65f6\u5019\u62ff\u5230\u8fd8\u771f\u4e0d\u4e00\u5b9a\u505a\u51fa\u6765\uff0c\u672c\u4eba\u4e5f\u662f\u770b\u4e86\u8bb2\u8bc4\u624d\u660e\u767d\u7684\uff0c\u771f\u662f\u8ba9\u4eba\u53f9\u4e3a\u89c2\u6b62\u3002\n\n\u53ef\u60dc\u7684\u662f\uff0c\u5f88\u591a\u4eba\u8868\u793a\u5e76\u4e0d\u660e\u767d\u5b98\u65b9\u9898\u89e3\u662f\u5565\u610f\u601d\uff0c\u6545\u5199\u6587\u4ee5\u8bb0\u4e4b\uff0c\u5e0c\u671b\u53ef\u4ee5\u5e2e\u52a9\u66f4\u591a\u4eba\u3002\n\n---\n\n\u9996\u5148\u6211\u4eec\u8981\u660e\u767d\u9898\u76ee\u7684\u610f\u601d\uff1a\u7ed9\u5b9a\u4e00\u4e2a**\u65e0\u9650**\u4e8c\u53c9\u6811\uff0c\u5e76\u7ed9\u5b9a\u4ee51\u53f7\u8282\u70b9\u4e3a\u6839\u6807\u8bb0\u4e00\u4e2a\u5c0f\u7684\u67d3\u8272\u4e8c\u53c9\u6811\uff0c\u627e\u4e00\u4e2a**\u6700\u5c0f\u904d\u5386\u5faa\u73af\u8282**\uff08\u4ee5\u4e0b\u7b80\u79f0\uff0c$S$\uff09\u53ef\u4ee5\u901a\u8fc7\u65e0\u6570\u6b21\u5faa\u73af\u8d70\u904d\u8fd9\u4e2a\u67d3\u8272\u4e8c\u53c9\u6811\uff08\u4ee5\u4e0b\u7b80\u79f0\uff0c$T$\uff09\u3002\n\n\u7531\u4e8e\u4e8c\u53c9\u6811\u7684\u5927\u5c0f\u662f\u65e0\u9650\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u4fdd\u8bc1\u5982\u679c$S$\u5408\u6cd5\uff08\u5373\u4e0d\u4f1a\u8dd1\u5230\u6839\u7684\u7236\u4eb2\uff09\uff0c\u5c31\u53ef\u4ee5\u4e00\u76f4\u8d70\u4e0b\u53bb\u3002**\u5f53\u7136\uff0c\u5982\u679c\u51fa\u73b0\u904d\u5386\u5230\u7684\u8282\u70b9$\\notin T$\uff0c\u8fd9\u5e76\u4e0d\u5f71\u54cd\u5faa\u73af\u8282\u7684\u5408\u6cd5\u6027\u3002**\n\n\u6211\u4eec\u6765\u8003\u8651\u6b63\u89e3\u3002\u5f88\u660e\u663e\u7684\u662f\uff0c\u6bcf\u590d\u8bfb\u4e00\u904d$S$\uff0c\u4f60\u4e00\u5b9a\u4ec5\u4f1a\u5230\u8fbe\u5f53\u524d\u8282\u70b9\u5b50\u6811\u4e2d\u7684\u67d0\u4e00\u8282\u70b9\u3002\u5f53\u8be5\u8282\u70b9 $\\notin T$ \u65f6\uff0c\u4f60\u4e4b\u540e\u4e00\u5b9a\u4f1a\u8d8a\u504f\u8d8a\u8fdc\uff0c\u518d\u4e5f\u904d\u5386\u4e0d\u5230$T$\u7684\u8282\u70b9\u4e86\uff0c\u6574\u4e2a\u590d\u8bfb\u5c31\u6b64\u7ed3\u675f\u3002**\u800c\u6211\u4eec\u8981\u505a\u7684\uff0c\u5c31\u662f\u786e\u4fdd\u6211\u4eec\u6784\u9020\u7684$S$\u53ef\u4ee5\u5728\u6b64\u4e4b\u524d\u904d\u5386\u5b8c$T$\u7684\u6240\u6709\u8282\u70b9\u3002**\n\n\u53c8\u7531\u4e8e\u6bcf\u6b21\u590d\u8bfb\u4e00\u904d$S$\uff0c\u6240\u5230\u8fbe\u8282\u70b9$x$ \u4e0e \u5f53\u524d\u8282\u70b9$now$ \u7684**\u76f8\u5bf9\u4f4d\u7f6e**\u662f\u4e0d\u53d8\u7684\uff0c\u800c\u4e14\u4e0b\u4e00\u6b65\u6211\u4eec\u4e5f\u4ec5\u4f1a\u904d\u5386$x$\u5b50\u6811\u4e2d\u7684\u5143\u7d20\u4e86\uff0c\u8fd9\u5c31\u610f\u5473\u7740**\u6211\u4eec\u8981\u904d\u5386\u5230\u6240\u6709$p\\in T$\uff0c\u4e14$p$\u5c5e\u4e8e$now$\u7684\u5b50\u6811\u4f46\u4e0d\u5c5e\u4e8e$x$\u7684\u5b50\u6811\uff0c\u8fd9\u4e9b\u70b9\u82e5\u6b64\u65f6\u4e0d\u88ab\u904d\u5386\u5c31\u6c38\u8fdc\u6ca1\u673a\u4f1a\u4e86\u3002**\n\n\u57fa\u4e8e\u4ee5\u4e0a\u4e24\u70b9\uff0c\u6211\u4eec\u4e0d\u59a8\u901a\u8fc7\u679a\u4e3e\u6839\u8282\u70b9\u901a\u8fc7\u4e00\u6b21\u5faa\u73af\u8282\u53ef\u5230\u8fbe\u7684\u8282\u70b9$X$\uff0c\u4ee5\u6b64\u4e0d\u65ad\u590d\u8bfb\u4e0b\u53bb\u76f4\u5230\u79bb\u5f00$T$\uff0c**\u540c\u65f6\u6211\u4eec\u628a\u6240\u6709\u4ee5$now$\u4e3a\u6839\u7684\uff0c\u4e0d\u5305\u542b$x$\u7684\u5b50\u6811 \u7684\u67d3\u8272\u8fde\u901a\u5757\u622a\u53d6\u4e0b\u6765\uff0c\u5e76\u5c06\u5b83\u4eec\u4ee5$now$\u4e3a\u6839\uff0c\u5408\u5e76\u6210\u4e00\u4e2a\u67d3\u8272\"\u5e76\"\u6811\uff08\u8fd9\u91cc\u5f15\u7528\u4e86\u5b98\u65b9\u9898\u89e3\u7684\u8bf4\u6cd5\uff09**\uff0c\u5f88\u660e\u663e\u7684\u662f\u8be5\u5e76\u6811\u5305\u542b\u4e86\u6211\u4eec\u4e00\u6b21\u64cd\u4f5c\u4e2d\u6240\u8981\u5305\u542b\u5230\u7684\u6240\u6709\u8282\u70b9\u3002\n\n\u82e5\u8be5\u6811\u7684\u5927\u5c0f\u4e3a$size$\uff0c\u4e0e$X$\u76f8\u5bf9\u4f4d\u79fb\u4e3a$x$\uff08\u5176\u5b9e\u5c31\u662f\u6df1\u5ea6\uff09\uff0c\u90a3\u4e48\u6700\u4f18\u7684\u6784\u9020\u65b9\u6848\u5373\u4e3a$2*(size-1)-x$\uff0c\u5373\u9664\u4e86$X$\u53ca\u5176\u94fe\u4e0a\u7684\u70b9\u53ea\u8d70\u4e00\u6b21\u5916\uff0c\u5176\u4ed6\u5747\u8d702\u6b21\u3002\n\n\u7531\u4e8e\u6211\u4eec\u679a\u4e3e$X$\u662f$O(N)$\u7684\uff0c\u5efa\u4e2a\u5e76\u6811\u4e5f\u662f$O(N)$\u7684\uff0c\u6240\u4ee5$O(N^2)$\u7a33\u8fc7~\n\n---\n\n\u5f53\u7136\uff0c\u7406\u8bba\u5f88\u7b80\u5355\uff0c\u4f46\u5728\u4ee3\u7801\u5b9e\u73b0\u65b9\u9762\u4ecd\u6709\u4e9b\u5c0f\u95ee\u9898\u3002\u6bd4\u65b9\u8bf4\u8fd9\u4e2a\"\u5e76\"\u6811\uff0c\u6211\u4eec\u5230\u5e95\u662f\u5982\u4f55\u5f97\u5230\u7684\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u601d\u60f3\uff08\u53cd\u6b63\u90fd\u662f\u4e8c\u53c9\u6811\uff09\uff0c\u82e5\u539f\u6765\u6ca1\u6709\u70b9\u5c31\u65b0\u5efa\u4e00\u4e2a\uff0c\u539f\u6765\u6709\u70b9\u7684\u8bdd\u5c31\u76f4\u63a5\u5408\u5e76\uff0c\u6700\u540e\u7279\u5224\u4e00\u4e0b\u522b\u641c\u5230$x$\u7684\u5b50\u6811\u5c31\u884c\u5566\uff0c\u8be6\u7ec6\u53ef\u4ee5\u770b\u6211\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstring>\n#define inf 2147483647\nusing namespace std;\n\nstruct ed{\n\tint ls,rs,f,sz,dd;\n}p[3000],c[3000];\nstring s;\nint st,lq,ans=inf/2;\n\nint build(int fa,int poi)  //\u521d\u59cb\u5316\u5efa\u6811 \n{\n\tp[poi].f=fa; p[poi].sz=1; p[poi].dd=p[fa].dd+1; \n\tif (s[poi]=='3') {\n\t\tp[poi].ls=build(poi,poi+1), p[poi].sz+=p[p[poi].ls].sz;\n\t\tp[poi].rs=build(poi,poi+p[poi].sz), p[poi].sz+=p[p[poi].rs].sz;}\n\tif (s[poi]=='2') \n\t\tp[poi].rs=build(poi,poi+1), p[poi].sz+=p[p[poi].rs].sz;\n\tif (s[poi]=='1')\n\t\tp[poi].ls=build(poi,poi+1), p[poi].sz+=p[p[poi].ls].sz;\n\treturn poi;\n}\n\nint gd(int now,string t)\n{\tint l=t.size();\n\tfor (int i=0;i<l;i++) now=((t[i]=='L')?p[now].ls:p[now].rs);\n\treturn now;\n}\n\nint merge(int now,int cs,int sp)  //\u6c42\u5e76\u6811 \n{\t\n\tif (!now) return cs;\n\tif (!cs) cs=++st; c[cs].sz=1;\n\tif (now==sp) return cs;\n\tc[cs].ls=merge(p[now].ls,c[cs].ls,sp); c[cs].sz+=c[c[cs].ls].sz;\n\tc[cs].rs=merge(p[now].rs,c[cs].rs,sp); c[cs].sz+=c[c[cs].rs].sz;\n\treturn cs;\n}\n\nint find(string rep)\n{\n\tint now=1,last=0;\n\twhile (now){  //\u82e5now=0\uff0c\u5219\u9000\u51fa \n\t\tlast=now , now=gd(now,rep); \n\t\tmerge(last,1,now);\n\t}\n\treturn c[1].sz;\n}\n\nvoid search(int now,string rep){  //\u627e\u76f8\u5bf9\u4f4d\u7f6e \n\tint cnt=0;\n\tif (now==0) return;\n\tif (now!=1) {\n\t\tmemset(c,0,sizeof(c)); st=1; cnt=find(rep);\n\t\tans=min(ans,2*(cnt-1)-p[now].dd+1);\n\t}\n\t\n\tsearch(p[now].ls,rep+'L');\n\tsearch(p[now].rs,rep+'R');\n}\n\nint main()\n{\n\tcin>>s; lq=s.size(); s='.'+s; \n\tbuild(0,1);\n\tsearch(1,\"\");\n\tcout<<ans<<endl;\n}\n\n```\n\n~~\u5199\u9898\u89e3\u6bd4\u6572\u4ee3\u7801\u8017\u65f6\u957f\uff0c\u56f0\u6b7b\u4e86~~",
        "postTime": 1571677614,
        "uid": 15984,
        "name": "\u5929\u6cfd\u9f9f",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5597 \u3010\u3010XR-4\u3011\u590d\u8bfb\u3011"
    },
    {
        "content": "\u4e0d\u9519\u7684\u601d\u7ef4\u9898\u3002\u5199\u4e86\u4e00\u4e0b\u53d1\u73b0\u8dd1\u5f97\u8fd8\u6bd4\u8f83\u5feb\uff0c\u6765\u5199\u7bc7\u9898\u89e3\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/m2nj91de.png)\n\n\u8bbe\u8fd0\u884c\u7b2c\u4e00\u904d\u6307\u4ee4\u540e\u673a\u5668\u4eba\u8d70\u5230\u7684\u7ed3\u70b9\u4e3a $u$\u3002\n\n\u56e0\u4e3a\u5f53\u673a\u5668\u4eba\u5728\u6839\u8282\u70b9\u5904\u8fd0\u884c\u6307\u4ee4\uff0c\u673a\u5668\u4eba\u4e0d\u4f1a\u8dd1\u5230\u6839\u8282\u70b9\u4ee5\u4e0a\uff1b\u6240\u4ee5\u5f53\u673a\u5668\u4eba\u5728 $u$ \u65f6\u518d\u8fd0\u884c\u6307\u4ee4\uff0c\u673a\u5668\u4eba\u4e5f\u4e0d\u4f1a\u8dd1\u5230 $u$ \u4ee5\u4e0a\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u7b2c\u4e00\u904d\u8fd0\u884c\u6307\u4ee4\u7684\u65f6\u5019\uff0c\u5c31\u8981\u628a $u$ \u4ee5\u5916\u7684\u5b9d\u85cf\uff08\u56fe\u4e2d\u84dd\u8272\uff09\u5168\u6316\u51fa\u6765\u3002\n\n\u540c\u7406\uff0c\u4ee5 $u$ \u4e3a\u7ed3\u70b9\u518d\u8fd0\u884c\u4e00\u904d\u6307\u4ee4\uff0c\u8bbe\u673a\u5668\u4eba\u8d70\u5230\u4e86 $v$\u3002\u663e\u7136\uff0c$v$ \u76f8\u5bf9\u4e8e $u$ \u7684\u4f4d\u7f6e\u548c $u$ \u76f8\u5bf9\u4e8e\u6839\u7684\u4f4d\u7f6e\u662f\u4e00\u6837\u7684\u3002\n\n\u6839\u636e\u521a\u624d\u7684\u5206\u6790\uff0c\u8fd9\u7b2c\u4e8c\u6b21\u8fd0\u884c\u6307\u4ee4\uff0c\u4e5f\u8981\u628a $u$ \u5b50\u6811\u91cc\uff0c$v$ \u5b50\u6811\u5916\u7684\u5b9d\u85cf\uff08\u56fe\u4e2d\u7ea2\u8272\uff09\u90fd\u6316\u6389\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u7b2c\u4e09\u6b21\u8fd0\u884c\u6307\u4ee4\u8981\u628a\u7eff\u8272\u7684\u5b9d\u85cf\u90fd\u6316\u6389\u3002\n\n\u4f46\u662f\u6307\u4ee4\u662f\u4e0d\u80fd\u53d8\u7684\u3002\n\n\u6240\u4ee5\u8981\u628a\u56fe\u4e2d\u84dd\u6846\u3001\u7ea2\u6846\u3001\u7eff\u6846\u4e2d\u7684\u6811\u53e0\u52a0\u5728\u4e00\u8d77\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/udeg6nb9.png)\n\n\u4e00\u6b21\u6307\u4ee4\u9700\u8981\u628a\u6574\u68f5\u65b0\u6811\u90fd\u904d\u5386\u4e00\u904d\uff0c\u5e76\u505c\u5728\u9ed1\u8272\u70b9\u4e0a\u3002\n\n\u9664\u4e86\u6839\u5230\u9ed1\u70b9\u4e4b\u95f4\u8fd9\u6bb5\u8def\u53ea\u7528\u8d70\u4e00\u904d\u5916\uff0c\u522b\u7684\u8fb9\u90fd\u8981\u8d70\u4e24\u8fb9\u3002\u8fd9\u6837\u90fd\u80fd\u7b97\u51fa\u6307\u4ee4\u7684\u957f\u5ea6\u3002\n\n\u679a\u4e3e $u$\uff0c\u53d6\u6307\u4ee4\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n### \u5b9e\u73b0\n\n\u5b9e\u73b0\u5e76\u4e0d\u5f88\u7b80\u5355\uff0c\u800c\u4e14\u6211\u7684\u5b9e\u73b0\u6bd4\u8f83\u77ed\uff0c\u6240\u4ee5\u8bb2\u4e00\u4e0b\u3002\n\n\u56e0\u4e3a\u8ba1\u7b97\u6307\u4ee4\u957f\u5ea6\u65f6\u9700\u8981\u6839\u5230 $u$ \u7684\u8ddd\u79bb\uff0c\u6240\u4ee5\u4e0d\u59a8\u7528\u641c\u7d22\u679a\u4e3e $u$\u3002\n\n\u5efa\u65b0\u6811\u65f6\u4e5f\u641c\u7d22\uff0c\u9700\u8981\u540c\u65f6\u4fdd\u5b58\u5728\u539f\u6811\u4e0a\u7684\u4f4d\u7f6e\u548c\u5728\u65b0\u6811\u4e0a\u7684\u4f4d\u7f6e\u3002  \n\u5982\u679c\u539f\u6811\u7684\u7ed3\u70b9\u5728\u65b0\u6811\u4e0a\u6ca1\u6709\uff0c\u65b0\u5efa\u65b0\u6811\u7ed3\u70b9\u5373\u53ef\u3002  \n\u5982\u679c\u5728\u65b0\u6811\u4e0a\u8d70\u5230\u4e86\u9ed1\u70b9\uff0c\u5c31\u628a\u65b0\u6811\u4e0a\u7684\u4f4d\u7f6e\u632a\u5230\u6839\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint ls,rs;\n}tre1[2010],tre2[2010];//\u539f\u6811\uff0c\u65b0\u6811\nint cnt1,cnt2,pos1,pos2,ans=1e9;//\u539f\u6811\u5927\u5c0f\uff0c\u65b0\u6811\u5927\u5c0f\uff0c\u539f\u6811\u4e0a u \u7684\u4f4d\u7f6e\uff0c\u65b0\u6811\u4e0a\u9ed1\u70b9\u4f4d\u7f6e,ans\nint input(){\n\tint c=getchar()-'0',u=++cnt1;\n\tif(c&1) tre1[u].ls=input();\n\tif(c&2) tre1[u].rs=input();\n\treturn u;\n}\nvoid dfs2(int u,int v){//\u539f\u6811\u4f4d\u7f6e\uff0c\u65b0\u6811\u4f4d\u7f6e\n\tif(u==pos1||v==pos2) { pos2=v; v=1; }//\u5230\u4e86\u9ed1\u70b9\n\tif(tre1[u].ls){\n\t\tif(!tre2[v].ls) tre2[v].ls=++cnt2;//\u65b0\u5efa\u7ed3\u70b9\n\t\tdfs2(tre1[u].ls,tre2[v].ls);\n\t}\n\tif(tre1[u].rs){\n\t\tif(!tre2[v].rs) tre2[v].rs=++cnt2;\n\t\tdfs2(tre1[u].rs,tre2[v].rs);\n\t}\n}\nvoid dfs1(int u,int dep){//dep \u6df1\u5ea6\n\tpos1=u;\n\tmemset(tre2,0,sizeof tre2);//\u6e05\u7a7a\n\tpos2=0;\n\tdfs2(1,cnt2=1);\n\tans=min(ans,cnt2*2-2-dep);\n\tif(tre1[u].ls) dfs1(tre1[u].ls,dep+1);\n\tif(tre1[u].rs) dfs1(tre1[u].rs,dep+1);\n}\nint main(){\n\tinput();\n\tdfs1(1,0);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1628493424,
        "uid": 178294,
        "name": "zhy137036",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5597 \u3010\u3010XR-4\u3011\u590d\u8bfb\u3011"
    },
    {
        "content": "\u4e00\u9053\u597d\u9898\uff01\u633a\u5bf9\u6211\u8111\u56de\u8def\u7684\uff0c\u4e8e\u662f\u79d2\u6389\u4e86\uff0c\u6765\u5199\u4e2a\u9898\u89e3\u3002\n\n\u4e0b\u6587\u79f0\u6267\u884c\u4e00\u904d\u6307\u4ee4\u7684\u8fc7\u7a0b\u4e3a\u4e00\u4e2a\u5468\u671f\u3002\u4f8b\u5982\u6307\u4ee4\u662f `LRU`\uff0c\u90a3\u4e48 `LRULRULRULRU` \u5171\u6267\u884c\u4e86\u56db\u4e2a\u5468\u671f\u3002\n\n\u770b\u5230\u5e73\u65b9\u7684\u6570\u636e\u8303\u56f4\uff0c\u4e0d\u96be\u60f3\u5230\u679a\u4e3e\u7b2c\u4e00\u4e2a\u5468\u671f\u7684\u7ec8\u70b9\u3002\u4f5c\u4e3a\u4e00\u53f0\u4f18\u79c0\u7684\u590d\u8bfb\u673a\uff0c\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a\u5468\u671f\u5728\u6811\u4e0a\u53d1\u751f\u7684\u76f8\u5bf9\u4f4d\u79fb\u662f\u76f8\u540c\u7684\u3002\n\n\u4f8b\u5982\uff0c\u5982\u4e0b\u7684\u4e00\u68f5\u6811\uff0c\u5982\u679c\u7b2c\u4e00\u5468\u671f\u4ece $1$ \u79fb\u52a8\u5230 $4$\uff0c\u90a3\u4e48\u7b2c\u4e8c\u5468\u671f\u4e00\u5b9a\u4ece $4$ \u79fb\u52a8\u5230 $16$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3d11pqj4.png)\n\n\u540c\u65f6\uff0c\u56e0\u4e3a\u5728\u6839\u8282\u70b9\u7684 `U` \u64cd\u4f5c\u975e\u6cd5\uff0c\u5047\u8bbe\u4e00\u4e2a\u5468\u671f\u4ece $u$ \u5f00\u59cb\uff0c\u90a3\u4e48\u9014\u4e2d\u4e00\u5b9a\u4e00\u76f4\u5728 $u$ \u7684\u5b50\u6811\u5185\uff0c\u4e0d\u53ef\u80fd\u5230 $u$ \u4e0a\u9762\u3002\n\n\u4f9d\u7136\u5047\u8bbe\u7b2c\u4e00\u5468\u671f\u4ece $1$ \u79fb\u52a8\u5230 $4$\uff0c\u90a3\u4e48\u6839\u636e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u7b2c\u4e00\u5468\u671f\u4e2d\u5fc5\u987b\u628a\u6240\u6709\u5728 $1$ \u5b50\u6811\u5185\u4f46\u4e0d\u5728 $4$ \u5b50\u6811\u5185\u7684\u8282\u70b9\u8bbf\u95ee\u4e00\u904d\uff0c\u4e5f\u5c31\u662f $1,2,3,5,6$\uff0c\u5e76\u6700\u7ec8\u505c\u5728 $4$\u3002\u540c\u7406\uff0c\u7b2c\u4e8c\u5468\u671f\u5fc5\u987b\u628a $4,8,9$ \u8bbf\u95ee\u4e00\u904d\u5e76\u505c\u5728 $16$\uff0c\u7b2c\u4e09\u5468\u671f\u5fc5\u987b\u628a $16$ \u8bbf\u95ee\u4e00\u904d\u3002\n\n\u6211\u4eec\u628a $(1,2,3,4,5,6),(4,8,9,16),(16)$ \u4e09\u68f5\u5b50\u6811\u53d6\u4e00\u4e2a\u5e76\uff08\u5982\u4e0b\u56fe\u6240\u793a\uff09\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5468\u671f\u8981\u4ece\u7eff\u8272\u7684\u70b9\u51fa\u53d1\uff0c\u7ecf\u8fc7\u6240\u6709\u7c89\u8272\u7684\u70b9\uff0c\u6700\u7ec8\u5230\u8fbe\u84dd\u8272\u7684\u70b9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/firbwoy5.png)\n\n\u663e\u800c\u6613\u89c1\u5730\uff0c\u6700\u5c11\u9700\u8981\u7684\u6307\u4ee4\u6570\u4e3a $2(n-1)-\\Delta d$\uff0c\u5176\u4e2d $n$ \u4e3a\u8fd9\u68f5\u6811\u4e2d\u7684\u70b9\u6570\uff0c$\\Delta d$ \u662f\u8d77\u70b9\u548c\u7ec8\u70b9\u4e4b\u95f4\u7684\u8fb9\u6570\u3002\u4e0a\u56fe\u7ed9\u51fa\u4e86\u4e00\u79cd\u6784\u9020\uff0c\u5373 `RLUULRUL`\u3002\n\n\u679a\u4e3e\u7b2c\u4e00\u4e2a\u5468\u671f\u7684\u7ec8\u70b9\uff0c\u7136\u540e\u6c42\u51fa\u6240\u6709\u8fd9\u6837\u7684\u5b50\u6811\u7684\u5e76\uff0c\u6700\u540e\u6839\u636e\u4e0a\u9762\u516c\u5f0f\u7edf\u8ba1\u6700\u4f18\u89e3\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^2)$\u3002\n\n```cpp\n//By: OIer rui_er\n#include <bits/stdc++.h>\n#define rep(x,y,z) for(int x=(y);x<=(z);x++)\n#define per(x,y,z) for(int x=(y);x>=(z);x--)\n#define debug(format...) fprintf(stderr, format)\n#define fileIO(s) do{freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);}while(false)\nusing namespace std;\ntypedef long long ll;\n\nmt19937 rnd(std::chrono::duration_cast<std::chrono::nanoseconds>(std::chrono::system_clock::now().time_since_epoch()).count());\nint randint(int L, int R) {\n    uniform_int_distribution<int> dist(L, R);\n    return dist(rnd);\n}\n\ntemplate<typename T> void chkmin(T& x, T y) {if(x > y) x = y;}\ntemplate<typename T> void chkmax(T& x, T y) {if(x < y) x = y;}\n\nconst int N = 2048;\n\nstruct BinaryTree {\n    int lc[N], rc[N], sz, rt;\n    BinaryTree() {\n        memset(lc, 0, sizeof(lc));\n        memset(rc, 0, sizeof(rc));\n        sz = rt = 0;\n    }\n    int read() {\n        int c = getchar() ^ 48, u = ++sz;\n        if(c & 1) lc[u] = read();\n        if(c & 2) rc[u] = read();\n        return u;\n    }\n}T, TU; // original tree; the union of trees\n\nvoid dfs_union(int u, int v, int root, int key) { // calculate the union\n    if(u == root || v == key) {\n        if(!key) key = v;\n        v = TU.rt;\n    }\n    if(T.lc[u]) {\n        if(!TU.lc[v]) TU.lc[v] = ++TU.sz;\n        dfs_union(T.lc[u], TU.lc[v], root, key);\n    }\n    if(T.rc[u]) {\n        if(!TU.rc[v]) TU.rc[v] = ++TU.sz;\n        dfs_union(T.rc[u], TU.rc[v], root, key);\n    }\n}\n\nint dfs_enum(int u, int d) { // enumerate the destination of round #1 moving\n    TU = BinaryTree();\n    TU.sz = TU.rt = 1;\n    dfs_union(T.rt, TU.rt, u, 0);\n    int ans = (TU.sz - 1) * 2 - d;\n    if(T.lc[u]) chkmin(ans, dfs_enum(T.lc[u], d+1));\n    if(T.rc[u]) chkmin(ans, dfs_enum(T.rc[u], d+1));\n    return ans;\n}\n\nint main() {\n    T.rt = T.read();\n    printf(\"%d\\n\", dfs_enum(T.rt, 0));\n    return 0;\n}\n```",
        "postTime": 1685179425,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5597\u3010\u3010XR-4\u3011\u590d\u8bfb\u3011"
    },
    {
        "content": "\u4e00\u9053\u6709\u8da3\u7684\u98982333.\n\n## \u601d\u8def\n\n\u9996\u5148,\u6307\u4ee4\u5faa\u73af\u4e00\u6b21\u540e,\u51fa\u53d1\u70b9\u548c\u7ed3\u675f\u70b9\u76f8\u5bf9\u4f4d\u7f6e\u90fd\u662f\u76f8\u540c\u7684.\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4e00\u6b21\u6307\u4ee4\u540e\u5230\u6839\u7684\u5de6\u513f\u5b50\u7684\u53f3\u513f\u5b50,\u7b2c\u4e8c\u6b21\u6307\u4ee4\u5c31\u5230\u6839\u7684\u5de6\u513f\u5b50\u7684\u53f3\u513f\u5b50\u7684\u5de6\u513f\u5b50\u7684\u53f3\u513f\u5b50,\u7b2c\u4e09\u6b21\u5c31\u5230\u6839\u7684\u5de6\u513f\u5b50\u7684\u53f3\u513f\u5b50\u7684\u5de6\u513f\u5b50\u7684\u53f3\u513f\u5b50\u7684\u5de6\u513f\u5b50\u7684\u53f3\u513f\u5b50...  \n\u6211\u4eec\u53ef\u4ee5YY\u4e00\u4e0b,\u7b2c\u4e00\u6b21\u6307\u4ee4\u7ed3\u675f\u540e\u80af\u5b9a\u5728\u6709\u5b9d\u85cf\u7684\u5730\u65b9.\u56e0\u4e3a\u6240\u6709\u6709\u5b9d\u85cf\u7684\u5730\u65b9\u6784\u6210\u4e00\u68f5\u6811,\u6ca1\u6709\u5b9d\u85cf\u7684\u5730\u65b9\u518d\u600e\u4e48\u5411\u4e0b\u5ef6\u4f38\u90fd\u4e0d\u4f1a\u6709\u5b9d\u85cf.  \n\u6570\u636e\u8303\u56f4\u8fd8\u662f\u6bd4\u8f83\u53cb\u597d\u7684,\u53ea\u6709$2000$,\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230$O(N^2)$\u7684\u66b4\u529b.\u4e8e\u662f\u6211\u4eec\u5148\u679a\u4e3e\u7b2c\u4e00\u6b21\u6307\u4ee4\u540e\u5230\u8fbe\u7684\u8282\u70b9.   \n\u5148\u6765\u770b\u5f20\u56fe(\u7070\u8272\u8282\u70b9\u4ee3\u8868\u6839\u8282\u70b9\u4ee5\u53ca\u6bcf\u6b21\u6307\u4ee4\u7ed3\u675f\u540e\u6240\u5904\u7684\u8282\u70b9):  \n![](https://cdn.luogu.com.cn/upload/image_hosting/3rq7kwrq.png)    \n\u5f88\u660e\u663e\u7684\u4e00\u70b9\u662f,\u6bcf\u6b21\u6307\u4ee4\u540e\u90fd\u4e0d\u53ef\u80fd\u8fd4\u56de\u7956\u5148\u8282\u70b9\u4e86.\u4e5f\u5c31\u662f\u8bf4,\u5230\u4e0b\u4e00\u4e2a\u7070\u8272\u70b9\u4e4b\u524d\u5fc5\u987b\u5148\u628a\u4e0a\u9762\u90e8\u5206\u5168\u90e8\u8bbf\u95ee\u5b8c,\u5426\u5219\u5c31\u4e0d\u53ef\u80fd\u56de\u53bb\u4e86.  \n\u6211\u4eec\u5fc5\u987b\u627e\u5230\u4e00\u4e2a\u6307\u4ee4\u96c6,\u80fd\u628a\u88ab\u7070\u8272\u70b9\u5206\u5f00\u7684\u8fde\u901a\u5757\u5185\u6240\u6709\u7684\u8282\u70b9\u90fd\u8bbf\u95ee.  \n\u518d\u6765\u5f20\u56fe:  \n![](https://cdn.luogu.com.cn/upload/image_hosting/rr72auia.png)  \n\u6211\u4eec\u628a\u88ab\u7070\u8272\u70b9\u5206\u5f00\u7684\u8fde\u901a\u5757(\u5f88\u660e\u663e\u662f\u6811)\u53d6\u51fa\u6765(\u7070\u8272\u70b9\u540c\u5c5e\u4e8e\u4e24\u4e2a\u8fde\u901a\u5757),\u7136\u540e\u628a\u8fd9\u4e9b\u6811\"\u5408\u5e76\"\u8d77\u6765.\u4f60\u53ef\u4ee5\u5728\u4e00\u4e9b\u900f\u660e\u7eb8\u4e0a\u753b\u51fa\u8fd9\u4e9b\u6811,\u7136\u540e\u628a\u8fd9\u4e9b\u900f\u660e\u7eb8\u53e0\u8d77\u6765(\u6ce8\u610f\u8fd9\u4e9b\u6811\u7684\u6839\u8282\u70b9\u91cd\u5408,\u6839\u8282\u70b9\u5de6\u513f\u5b50\u91cd\u5408,\u6839\u8282\u70b9\u53f3\u513f\u5b50\u91cd\u5408),\u7136\u540e\u4f60\u4ece\u4e0a\u9762\u770b\u5230\u7684\u6811\u5c31\u8981\"\u5408\u5e76\"\u7684\u7ed3\u679c.  \n\u5bb9\u6613\u53d1\u73b0,\u904d\u5386\u8fd9\u68f5\u6811(\u6700\u7ec8\u505c\u5728\u4e0b\u4e00\u4e2a\u7070\u8272\u70b9)\u7684\u6307\u4ee4\u96c6\u5c31\u662f\u8981\u6c42\u7684\u7b54\u6848.  \n\u8bbe\u8fd9\u68f5\"\u5408\u5e76\u6811\"\u542b$size$\u4e2a\u8282\u70b9,\u6839\u8282\u70b9\u5230\u4e0b\u4e00\u4e2a\u7070\u8272\u70b9\u7684\u6700\u77ed\u8def\u5f84\u662f$d$,\u6307\u4ee4\u96c6\u7684\u957f\u5ea6\u5c31\u662f$2\\times(size-1)-d$.  \n\u56e0\u4e3a\u6c42\"\u5408\u5e76\u6811\"\u65f6\u6bcf\u4e2a\u8282\u70b9\u4ec5\u8bbf\u95ee\u4e00\u6b21,\u6c42\u4e00\u6b21\"\u5408\u5e76\u6811\"\u7684\u590d\u6742\u5ea6\u662f$O(N)$\u7684.  \n\u52a0\u4e0a\u679a\u4e3e\u4e0b\u4e00\u4e2a\u7070\u8272\u70b9,\u603b\u590d\u6742\u5ea6\u662f$O(N^2)$\u7684.  \n\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u8bf7\u53c2\u8003\u4ee3\u7801.\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define fp( i, b, e ) for ( int i(b), I(e); i <= I; ++i )\ntemplate<typename T> inline bool cmin( T &x, T y ){ return y < x ? x = y, 1 : 0; }\n\nconst int MAXN = 2e3 + 15;\nstruct node{ int ls, rs; }o[MAXN], p[MAXN];\nint ans(1e9), tmp, n, cnt, cur; char s[MAXN];\n\nvoid Build( int &c ){ // \u6784\u5efa\u51fa\u9898\u76ee\u7ed9\u51fa\u6709\u5b9d\u85cf\u7684\u8282\u70b9\u6784\u6210\u7684\u6811\n\tif ( !c ) c = ++cnt;\n\tchar t(s[n++]);\n\tif ( t & 1 ) Build(o[c].ls);\n\tif ( t & 2 ) Build(o[c].rs);\n}\nvoid Merge( int &c, int l ){ // \"\u5408\u5e76\"\u8fc7\u7a0b\n\tif ( !c ) c = ++cnt;\n\tif ( l == cur ) return;\n\tif ( o[l].ls ) Merge(p[c].ls, o[l].ls);\n\tif ( o[l].rs ) Merge(p[c].rs, o[l].rs);\n}\n\nchar pth[MAXN];\nvoid Work( int c, int stp ){ //\u679a\u4e3e\u7070\u8272\u70b9\u7684\u8fc7\u7a0b\n\tif ( c != 1 ){\n\t\tmemset( p, 0, sizeof p ), cnt = cur = 1;\n\t\twhile( cur ){\n\t\t\tconst int t(cur);\n\t\t\tfp( i, 0, stp - 1 ) cur = pth[i] == 'L' ? o[cur].ls : o[cur].rs; // \u627e\u4e0b\u4e00\u4e2a\u7070\u8272\u70b9\n\t\t\tMerge(tmp = 1, t);\n\t\t} cmin( ans, (cnt - 1) * 2 - stp ); // \u7b54\u6848\u53d6\u6700\u5c0f\u503c\n\t}\n\tpth[stp] = 'L';\n\tif ( o[c].ls ) Work(o[c].ls, stp + 1);\n\tpth[stp] = 'R';\n\tif ( o[c].rs ) Work(o[c].rs, stp + 1);\n}\n\n\nsigned main(){\n\tscanf( \"%s\", s ), n = 0, cnt = 1;\n\tBuild(tmp = 1), Work(1, 0);\n\tprintf( \"%d\\n\", ans );\n\treturn 0;\n}\n```",
        "postTime": 1572272911,
        "uid": 70786,
        "name": "_louhc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5597 \u3010\u3010XR-4\u3011\u590d\u8bfb\u3011"
    },
    {
        "content": "\u8fd8\u86ee\u6709\u8da3\u7684\u9898\uff0c\u96be\u5ea6\u4e0d\u5927\uff08~~\u8bc4\u5206\u662f\u4e0d\u662f\u6709\u70b9\u9ad8\u554a~~\n\n\u9996\u5148\u8003\u8651\u8fd9\u4e2a\u6307\u4ee4\u8fd0\u884c\u4e4b\u540e\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u6307\u4ee4\u8fd0\u884c\u4e00\u6b21\u4e4b\u540e\u80af\u5b9a\u673a\u5668\u4eba\u4f1a\u5411\u4e0b\u8d70\u82e5\u5e72\u6b65\uff0c\u80af\u5b9a\u4e0d\u4f1a\u5411\u4e0a\u8d70\u3002\u6211\u4eec\u4e0d\u59a8\u679a\u4e3e\u8fd9\u4e2a\u673a\u5668\u4eba\u5728\u6307\u4ee4\u8fd0\u884c\u5b8c\u4e4b\u540e\u4f1a\u8d70\u5230\u54ea\u4e2a\u70b9\u4e0a\u3002\n\n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u679a\u4e3e\u5230\u7684\u8fd9\u4e2a\u70b9\uff08\u4e0d\u59a8\u79f0\u5176\u4e3a\u7ec8\u70b9 1\uff09\u5230\u6839\u7684\u94fe\u4e0a\u652f\u51fa\u53bb\u7684\u5b50\u6811\u5c31\u4e00\u5b9a\u6ca1\u6709\u673a\u4f1a\u5728\u7b2c\u4e00\u6b21\u8fd0\u884c\u4e4b\u540e\u8bbf\u95ee\u5230\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u8fd9\u4e9b\u5b50\u6811\u4e00\u5b9a\u5728\u7b2c\u4e00\u6b21\u8fd0\u884c\u6307\u4ee4\u7684\u8fc7\u7a0b\u4e2d\u904d\u5386\u5230\u3002\n\n\u66f4\u8fdb\u4e00\u6b65\u7684\uff0c\u5047\u8bbe\u8fd0\u884c\u4e24\u6b21\u6307\u4ee4\u4f1a\u4f7f\u5f97\u673a\u5668\u4eba\u5230\u8fbe\u7ec8\u70b9 2\uff0c\u90a3\u4e48\u7ec8\u70b9 1 \u5230\u7ec8\u70b9 2 \u4e0a\u5206\u652f\u51fa\u53bb\u7684\u5b50\u6811\u4e5f\u5fc5\u987b\u5728\u4e00\u6b21\u8fd0\u884c\u6307\u4ee4\u4e2d\u88ab\u904d\u5386\u5230\uff1b\u8fd0\u884c\u4e09\u6b21\u6307\u4ee4\u4f1a\u4f7f\u5f97\u673a\u5668\u4eba\u5230\u8fbe\u7ec8\u70b9 3\uff0c\u90a3\u4e48\u7ec8\u70b9 2 \u5230\u7ec8\u70b9 3 \u4e0a\u5206\u652f\u51fa\u53bb\u7684\u5b50\u6811\u4e5f\u5fc5\u987b\u5728\u4e00\u6b21\u8fd0\u884c\u6307\u4ee4\u4e2d\u88ab\u904d\u5386\u5230\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u6307\u4ee4\u7684\u8981\u6c42\u662f\u4ec0\u4e48\uff1f\u4e0d\u96be\u53d1\u73b0\u5f62\u5f0f\u4e0a\u7c7b\u4f3c\u4e8e\u6309\u7167\u7ec8\u70b9\u6765\u8fdb\u884c\u5207\u5272\u3002\u89c4\u5b9a\u6839\u8282\u70b9\u4e3a\u7ec8\u70b9 0\uff0c\u8bbe $T_i$ \u4e3a\u7ec8\u70b9 $i$ \u7684\u5b50\u6811\u53bb\u6389\u7ec8\u70b9 $i+1$ \u7684\u5b50\u6811\u91cc\u9762\u9664\u53bb\u7ec8\u70b9 $i+1$ \u4ee5\u5916\u7684\u6240\u6709\u70b9\u5f62\u6210\u7684\u4ee5\u7ec8\u70b9 $i$ \u4e3a\u6839\u7684\u6811\uff0c\u90a3\u4e48\u8fd9\u6761\u6307\u4ee4\u5fc5\u987b\u8981\u904d\u5386\u6240\u6709 $T_{[0,+\\infty)}$ \u7684\u5e76\uff0c\u4e14\u6700\u7ec8\u843d\u5230\u7ec8\u70b9 1 \u7684\u4f4d\u7f6e\u3002\n\n\u4e8e\u662f\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u6c42\u51fa\u5e76\uff08\u8fd9\u4e00\u6b65\u53ea\u9700\u8981\u904d\u5386\u6bcf\u4e00\u4e2a\u70b9\u4e00\u6b21\uff0c\u662f $O(n)$ \u7684\uff09\uff0c\u5047\u8bbe\u5b83\u6709 $n$ \u4e2a\u70b9\uff0c\u7ec8\u70b9 1 \u7684\u6df1\u5ea6\u4e3a $k$\uff0c\u90a3\u4e48\u9664\u4e86\u6839\u5230\u7ec8\u70b9 1 \u7684\u8def\u5f84\u4e0a\u7684\u8fb9\u53ea\u9700\u8981\u904d\u5386\u4e00\u6b21\u4e4b\u5916\uff0c\u5269\u4e0b\u7684\u8fb9\u90fd\u9700\u8981\u904d\u5386\u4e24\u6b21\uff0c\u6240\u4ee5\u6b64\u65f6\u6700\u5c0f\u6307\u4ee4\u957f\u5ea6\u662f $2(n-1)-k$\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684\u7ec8\u70b9 1\uff0c\u53ef\u4ee5 $O(n)$ \u8ba1\u7b97\u7b54\u6848\u3002\u518d\u7ed3\u5408 $O(n)$ \u66b4\u529b\u679a\u4e3e\u7ec8\u70b9 1\uff0c\u5c31\u5f97\u5230\u4e86 $O(n^2)$ \u7684\u7b97\u6cd5\uff0c\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u7531\u4e8e\u9700\u8981\u77e5\u9053\u8def\u5f84\uff0c\u6240\u4ee5\u66f4\u597d\u5199\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f dfs \u679a\u4e3e\u7ec8\u70b9 1\u3002\u4e0d\u8fc7\u4e0d\u7ba1\u600e\u4e48\u6837\u8fd9\u9898\u90fd\u4e0d\u96be\u5199\u5566\u3002\n\n```cpp\nint top1, top2, ls1[2005], rs1[2005], ls2[10005], rs2[10005], stk[10005], stktop, ans;\n\ninline void Read(int x) {\n\tchar c;\n\tcin >> c;\n\tif (c == '1') Read(ls1[x] = ++top1);\n\telse if (c == '2') Read(rs1[x] = ++top1);\n\telse if (c == '3') {\n\t\tRead(ls1[x] = ++top1);\n\t\tRead(rs1[x] = ++top1);\n\t}\n}\n\ninline void Dfs2(int u, int &x) {\n\tif (!u) return;\n\tif (!x) x = ++top2;\n\tif (ls1[u]) Dfs2(ls1[u], ls2[x]);\n\tif (rs1[u]) Dfs2(rs1[u], rs2[x]);\n}\n\ninline void BuildT(int rt) {\n\tint p = 1;\n\tfor (int i = 1;i <= stktop;i++) {\n\t\tif (!rt) return;\n\t\tif (stk[i]) {\n\t\t\tDfs2(ls1[rt], ls2[p]);\n\t\t\tif (!rs2[p]) rs2[p] = ++top2;\n\t\t\tp = rs2[p];\n\t\t\trt = rs1[rt];\n\t\t} else {\n\t\t\tDfs2(rs1[rt], rs2[p]);\n\t\t\tif (!ls2[p]) ls2[p] = ++top2;\n\t\t\tp = ls2[p];\n\t\t\trt = ls1[rt];\n\t\t}\n\t}\n\tBuildT(rt);\n}\n\ninline void Dfs1(int u) {\n\tif (u != 1) {\n\t\ttop2 = 1;\n\t\tmemset(ls2, 0, sizeof(ls2));\n\t\tmemset(rs2, 0, sizeof(rs2));\n\t\tBuildT(1);\n\t\tans = min(ans, 2 * top2 - 2 - stktop);\n\t}\n\tif (ls1[u]) {\n\t\tstk[++stktop] = 0;\n\t\tDfs1(ls1[u]);\n\t\tstktop--;\n\t}\n\tif (rs1[u]) {\n\t\tstk[++stktop] = 1;\n\t\tDfs1(rs1[u]);\n\t\tstktop--;\n\t}\n}\n```",
        "postTime": 1632550493,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5597 \u3010\u3010XR-4\u3011\u590d\u8bfb\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u597d\u9898\u3002\u8bf4\u5b9e\u8bdd\u601d\u8def\u5e76\u4e0d\u597d\u60f3\u3002\n****\n\u5148\u53e3\u80e1\u4e00\u4e2a\u4e1c\u897f\uff0c\u5c31\u662f\u5982\u679c\u5728\u4e00\u6b21\u5faa\u73af**\u7ed3\u675f**\u4e4b\u540e**\u79bb\u5f00\u4e86\u67d3\u8272\u5b50\u6811**\u4f46**\u6ca1\u6709\u5b8c\u6210\u5bf9\u67d3\u8272\u5b50\u6811\u7684\u904d\u5386**\uff0c\u8fd9\u79cd\u547d\u4ee4\u662f\u4e0d\u53ef\u884c\u7684\u3002\n\n\u6765\u4e2a\u8bc1\u660e\uff0c\u56e0\u4e3a\u5728\u6839\u8282\u70b9\u5904\u4e0d\u80fd\u5411\u4e0a\uff0c\u6240\u4ee5\u673a\u5668\u4eba\u7684**\u6574\u4f53\u8fd0\u52a8\u8d8b\u52bf\u80af\u5b9a\u662f\u8fdc\u79bb\u6839\u8282\u70b9**\u7684\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u8fd8\u6709\u4e00\u4e2a\u63a8\u8bba\uff0c\u5c31\u662f\u67d0\u6b21\u5faa\u73af\u5b8c\u540e\u5230\u8fbe\u8282\u70b9 $x$\uff0c\u90a3\u4e48**\u67d3\u8272\u6811\u4e2d\u975e $x$ \u5b50\u6811\u7684\u5fc5\u987b\u5b8c\u6210\u904d\u5386**\u3002\u8fd9\u4e2a\u5176\u5b9e\u4e5f\u5f88\u597d\u7406\u89e3\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u7ed3\u8bba\u5c31\u662f\u6bcf\u6b21\u673a\u5668\u4eba\u5faa\u73af\u5f00\u59cb\u7684\u8d77\u70b9\u548c\u7ec8\u70b9**\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8**\u3002\n\n\u4e8e\u6b64\u6211\u4eec\u53ef\u4ee5\u753b\u51fa\u4e00\u5f20\u56fe\uff0c\u5176\u4e2d\u7ea2\u8272\u7684\u8868\u793a\u6bcf\u6b21\u5faa\u73af\u5f00\u59cb\u7684\u8d77\u70b9\u7ec8\u70b9\u3002\n\n![4ygOdH.png](https://z3.ax1x.com/2021/09/26/4ygOdH.png)\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u7740\u624b\u8bbe\u8ba1\u5faa\u73af\u4e86\u3002\n\n\u9996\u5148\u8d77\u70b9\u7ec8\u70b9\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u800c\u4e14\u4e8c\u53c9\u6811\u65e0\u9650\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u5728\u6bcf\u6b21\u5faa\u73af\u5185\u628a\u6240\u6709\u7684\u4e0d\u540c\u7684\u60c5\u51b5\u90fd\u904d\u5386\u6389\u3002\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff0c\u6211\u4eec\u8981\u5728\u4e00\u6b21\u5faa\u73af\u5185\u628a\u4e0b\u56fe\u4e2d\u7eff\u5708\u5708\u8d77\u7684\u4e09\u4e2a\u90e8\u5206\u904d\u5386\u5b8c\n\n![4yRIKK.png](https://z3.ax1x.com/2021/09/26/4yRIKK.png)\n\n\u8003\u8651\u5408\u5e76\u8fd9\u4e09\u4e2a\u90e8\u5206\u3002\n\n![4y5ATU.png](https://z3.ax1x.com/2021/09/26/4y5ATU.png)\n\n\u663e\u7136\u9664\u4e86\u5408\u5e76\uff0c\u6211\u4eec\u8fd8\u8981\u5230\u8fbe\u4e0b\u6b21\u5f00\u59cb\u7684\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u56fe\u4e2d\u5de6\u4e0b\u89d2\u7684\u8282\u70b9\u3002\n\n\u8003\u8651\u4e00\u4e0b\u6bcf\u6b21\u547d\u4ee4\u9700\u8981\u7684\u957f\u5ea6\uff0c\u663e\u7136\u6700\u4f18\u7684\u60c5\u51b5\u662f\u7ea2\u70b9\u5230\u7ea2\u70b9\u4e4b\u95f4\u7684\u94fe\u53ea\u8d70\u4e00\u6b21\uff0c\u5176\u4ed6\u8d70\u4e24\u6b21\u3002\n\n\u90a3\u4e48 $\\texttt{ans}=\\left(\\texttt{size}-1\\right)\\times2-\\texttt{dep}$.\u5176\u4e2d $\\texttt{size},\\texttt{dep}$ \u5206\u522b\u8868\u793a\u8fd9\u68f5\u6811\u7684\u5927\u5c0f\u548c\u7ea2\u70b9\u95f4\u7684\u8ddd\u79bb\u3002\n\n\u81f3\u4e8e\u600e\u4e48\u5bfb\u627e\u7ea2\u70b9\uff0c\u8003\u8651\u66b4\u529b\u679a\u4e3e\u3002\n\n\u7efc\u5408\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}\\left(n^2\\right)$.\n\n\u6700\u540e\u505a\u4e00\u4e2a\u63d0\u9192\uff0c\u9012\u5f52\u5efa\u6811\u7684\u65f6\u5019\u5207\u8bb0\u4e0d\u53ef\u5f00\u5168\u5c40\u53d8\u91cf\uff01\uff01\uff01\n\n\u9700\u8981\u4ee3\u7801\u7684\u79c1\u4fe1\u627e\u6211\u8981\u3002\n\n",
        "postTime": 1632624666,
        "uid": 183026,
        "name": "Cocoly1990",
        "ccfLevel": 0,
        "title": "P5597 \u3010XR-4\u3011\u590d\u8bfb"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Coros-Trusds/p/15664901.html)\n\n# \u9898\u76ee\u5927\u610f\n\n\u5c0f X \u6361\u5230\u4e86\u4e00\u53f0\u590d\u8bfb\u673a\uff0c\u8fd9\u53f0\u590d\u8bfb\u673a\u53ef\u4ee5\u5411\u673a\u5668\u4eba\u53d1\u53f7\u65bd\u4ee4\u3002\u673a\u5668\u4eba\u5c06\u7ad9\u5728\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6839\u4e0a\uff0c\u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u65e0\u9650\u5ef6\u4f38\u7684\u3002\u4f60\u5c06\u5411\u590d\u8bfb\u673a\u5f55\u5165\u4e00\u4e32\u6307\u4ee4\uff0c\u8fd9\u4e32\u6307\u4ee4\u5355\u4e2a\u5b57\u7b26\u53ef\u4ee5\u662f\uff1a\n\n* `L`\uff1a\u547d\u4ee4\u673a\u5668\u4eba\u5411\u5f53\u524d\u8282\u70b9\u7684\u5de6\u5b50\u8d70\uff1b\n* `R`\uff1a\u547d\u4ee4\u673a\u5668\u4eba\u5411\u5f53\u524d\u8282\u70b9\u7684\u53f3\u5b50\u8d70\uff1b\n* `U`\uff1a\u547d\u4ee4\u673a\u5668\u4eba\u5411\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\u8d70\uff08\u82e5\u6ca1\u6709\uff0c\u5219\u547d\u4ee4\u975e\u6cd5\uff09\u3002\n\n\u5f55\u5165\u6307\u4ee4\u540e\uff0c\u590d\u8bfb\u673a\u5c06\u4f1a\u628a\u6307\u4ee4\u65e0\u9650\u590d\u8bfb\u4e0b\u53bb\u3002\u6bd4\u5982\u547d\u4ee4\u4e3a `LR`\uff0c\u90a3\u4e48\u673a\u5668\u4eba\u4f1a\u9075\u4ece `LRLRLRLR...` \u4e00\u76f4\u8d70\u4e0b\u53bb\u3002\n\n\u8fd9\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u4e0a\u6709\u4e00\u4e2a $n$ \u4e2a\u8282\u70b9\u7684\u8fde\u901a\u5757\uff0c\u4fdd\u8bc1\u8fd9\u4e2a\u8fde\u901a\u5757\u5305\u542b\u6839\u8282\u70b9\u3002\u8fde\u901a\u5757\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u57cb\u6709\u5b9d\u85cf\uff0c\u673a\u5668\u4eba\u5230\u8fbe\u8fc7\u7684\u5730\u65b9\u5982\u679c\u6709\u5b9d\u85cf\uff0c\u5219\u4f1a\u5c06\u5176\u5f00\u91c7\u3002\u5982\u679c\u4e00\u4e2a\u5730\u65b9\u6ca1\u6709\u5b9d\u85cf\uff0c\u673a\u5668\u4eba\u4e5f\u53ef\u4ee5\u5230\u90a3\u91cc\u53bb\u3002\u673a\u5668\u4eba\u4e5f\u53ef\u4ee5\u53cd\u590d\u7ecf\u8fc7\u4e00\u4e2a\u5730\u65b9\u3002\n\n\u663e\u7136\uff0c\u8fd9\u4e2a\u8fde\u901a\u5757\u672c\u8eab\u4e5f\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\u3002\n\n\u73b0\u5728\uff0c\u6709\u4eba\u544a\u8bc9\u4e86\u5c0f X \u57cb\u6709\u5b9d\u85cf\u7684\u8fd9\u68f5\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386\uff0c\u5c0f X \u9700\u8981\u5bfb\u627e\u5230\u4e00\u6761\u5c3d\u91cf\u77ed\u7684\u6307\u4ee4\uff0c\u4f7f\u5f97\u673a\u5668\u4eba\u80fd\u591f\u6316\u6398\u51fa\u6240\u6709\u5b9d\u85cf\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u53d1\u73b0\u8bfb\u5165\u6309\u7167\u524d\u5e8f\u904d\u5386\u8bfb\u5165\u4e0d\u662f\u975e\u5e38\u65b9\u4fbf\uff0c\u8fd9\u91cc\u5355\u72ec\u8003\u8651\u4e00\u4e0b\u3002\n\n\u9996\u5148\u81ea\u7136\u8981\u7ed9\u5f53\u524d\u8282\u70b9\u8d4b\u4e00\u4e2a\u7f16\u53f7\u7684\u3002\n\n\u82e5\u5f53\u524d\u6570\u5b57\u4e3a $1$ \u6216 $3$\uff0c\u90a3\u4e48\u9012\u5f52\u8fdb\u5165\u5de6\u5b50\u6811\uff1b\n\n\u82e5\u5f53\u524d\u6570\u5b57\u4e3a $2$ \u6216 $3$\uff0c\u90a3\u4e48\u9012\u5f52\u8fdb\u5165\u53f3\u5b50\u6811\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline int input()\n{\n\tint ch=getchar()-'0',p=++ia;\n\t\n\tif(ch==1 || ch==3)\n\t{\n\t\tnode1[p].ls=input();\n\t}\n\t\n\tif(ch==2 || ch==3)\n\t{\n\t\tnode1[p].rs=input();\n\t}\n\t\n\treturn p;\n}\n\nin function \"main()\":\n\tinput();\n```\n\n-----\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fdb\u884c\u4e00\u6b21\u6307\u4ee4\u4e4b\u540e\uff0c\u6211\u4eec\u5fc5\u7136\u5e94\u8be5\u5c06\u8be5\u8282\u70b9\u7684\u7956\u5148\u8282\u70b9\u7684\u5b9d\u85cf\u5168\u90e8\u53d6\u8d70\u3002\n\n\u8bbe\u4e00\u6b21\u6307\u4ee4\u540e\u6211\u4eec\u8d70\u5230\u4e86 $u$ \u70b9\uff0c\u518d\u6267\u884c\u4e00\u6b21\u6307\u4ee4\u540e\u53c8\u8d70\u5230\u4e86 $v$ \u70b9\u3002\n\n\u90a3\u4e48\u5728 $u$ \u7684\u7236\u5b50\u6811\u4e2d\u7ecf\u8fc7\u7684\u8def\u5f84\u5fc5\u7136\u548c $v$ \u548c $u$ \u4e4b\u95f4\u7ecf\u8fc7\u7684\u8def\u5f84\u4e00\u81f4\uff0c\u4e3a\u4e86\u5f97\u5230\u8fd9\u4e2a\u6700\u77ed\u8def\u5f84\uff0c\u6211\u4eec\u5c06\u5b9d\u85cf\u6811\u4e2d $u$ \u7684\u7236\u5b50\u6811\u4e0e $v$ \u548c $u$ \u4e4b\u95f4\u7684\u5b50\u6811\u62fc\u5728\u4e00\u8d77\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u6700\u540e\u5c31\u80fd\u591f\u5f97\u5230\u6b63\u786e\u7684\u8def\u5f84\u4e86\u3002\n\n\u5982\u4f55\u6c42\u51fa\u8fd9\u6761\u6307\u4ee4\u7684\u957f\u5ea6\u5462\uff1f\n\n\u6bcf\u6761\u8fb9\u4e00\u5b9a\u4f1a\u7ecf\u8fc7\u4e24\u6b21\uff0c\u8fb9\u6709 $num-1$ \u6761\uff0c\u6240\u4ee5\u662f $(num-1)\\times 2$\u3002\n\n\u662f\u8fd9\u6837\u5417\uff1f\u53ef\u4ee5\u53d1\u73b0\uff0c\u4ece\u62fc\u63a5\u6811\u7684\u6839\u5230\u5f53\u524d\u5faa\u73af\u8282\u7684\u672b\u5c3e\u8282\u70b9\u53ea\u4f1a\u8d70\u4e00\u6b21\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u51cf\u53bb\u8fd9\u4e00\u6bb5\u7684\u957f\u5ea6\u2014\u2014\u81ea\u7136\u5c31\u662f\u8282\u70b9\u4e2a\u6570\uff08\u4e5f\u5c31\u662f\u8282\u70b9\u6df1\u5ea6\uff09 $present\\_depth-1$\u3002\n\n\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u53d1\u73b0\u957f\u5ea6\u5c31\u662f $(num-1)\\times 2-(present\\_depth-1)$\uff0c$num$ \u8868\u793a\u62fc\u63a5\u51fa\u6765\u7684\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\uff0c$present\\_depth$ \u8868\u793a\u5f53\u524d\u679a\u4e3e\u7684 $u$ \u8282\u70b9\u7684\u6df1\u5ea6\u3002\n\n# \u4ee3\u7801\n\n```cpp\n//2021/12/8\n\n#define _CRT_SECURE_NO_WARNINGS\n\n#include <iostream>\n\n#include <cstdio>\n\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n\n#include <cstring>\n\n#define enter() putchar(10)\n\n#define debug(c,que) cerr<<#c<<\" = \"<<c<<que\n\n#define cek(c) puts(c)\n\n#define blow(arr,st,ed,w) for(register int i=(st);i<=(ed);i++)cout<<arr[i]<<w;\n\n#define speed_up() cin.tie(0),cout.tie(0)\n\n#define endl \"\\n\"\n\n#define Input_Int(n,a) for(register int i=1;i<=n;i++)scanf(\"%d\",a+i);\n\n#define Input_Long(n,a) for(register long long i=1;i<=n;i++)scanf(\"%lld\",a+i);\n\n#define mst(a,k) memset(a,k,sizeof(a))\n\nnamespace Newstd\n{\n\tinline int read()\n\t{\n\t\tint x=0,k=1;\n\t\tchar ch=getchar();\n\t\twhile(ch<'0' || ch>'9')\n\t\t{\n\t\t\tif(ch=='-')\n\t\t\t{\n\t\t\t\tk=-1;\n\t\t\t}\n\t\t\tch=getchar();\n\t\t}\n\t\twhile(ch>='0' && ch<='9')\n\t\t{\n\t\t\tx=(x<<1)+(x<<3)+ch-'0';\n\t\t\tch=getchar();\n\t\t}\n\t\treturn x*k;\n\t}\n\tinline void write(int x)\n\t{\n\t\tif(x<0)\n\t\t{\n\t\t\tputchar('-');\n\t\t\tx=-x;\n\t\t}\n\t\tif(x>9)\n\t\t{\n\t\t\twrite(x/10);\n\t\t}\n\t\tputchar(x%10+'0');\n\t}\n}\n\nusing namespace Newstd;\n\nusing namespace std;\n\nconst int INF=INT_MAX;\n\nconst int ma=2005;\n\nstruct Node\n{\n\tint ls;\n\t\n\tint rs;\n};\n\nNode node1[ma],node2[ma];\n\n//\u4e0b\u9762\u4ee3\u7801\u4e2d\"\u65b0\u6811\"\u5373\"\u62fc\u63a5\u6811\"qwq \nint ia,ib;//\u539f\u6811\u5927\u5c0f,\u65b0\u6811\u5927\u5c0f\n\nint pos1,pos2;//\u539f\u6811\u4e0a u \u7684\u4f4d\u7f6e,\u62fc\u63a5\u6811\u4e0a\u672b\u5c3e\u8282\u70b9\u7684\u4f4d\u7f6e \n\nint ans;\n\ninline int input()\n{\n\tint ch=getchar()-'0',p=++ia;\n\t\n\tif(ch==1 || ch==3)\n\t{\n\t\tnode1[p].ls=input();\n\t}\n\t\n\tif(ch==2 || ch==3)\n\t{\n\t\tnode1[p].rs=input();\n\t}\n\t\n\treturn p;\n}\n\ninline void init()\n{\n\tmst(node2,0);\n\t\n\tib=1;\n}\n\ninline void dfs2(int u,int v)//\u539f\u6811\u4f4d\u7f6e,\u65b0\u6811\u4f4d\u7f6e\n{\n\tif(u==pos1 || v==pos2)//\u5230\u8fbe\u5faa\u73af\u8282\u7684\u672b\u5c3e\u8282\u70b9 \n\t{\n\t\tpos2=v;\n\t\t\n\t\tv=1;\n\t}\n\t\n\tif(node1[u].ls!=0)\n\t{\n\t\tif(node2[v].ls==0)\n\t\t{\n\t\t\tnode2[v].ls=++ib;\n\t\t} \n\t\t\n\t\tdfs2(node1[u].ls,node2[v].ls);\n\t}\n\t\n\tif(node1[u].rs!=0)\n\t{\n\t\tif(node2[v].rs==0)\n\t\t{\n\t\t\tnode2[v].rs=++ib;\n\t\t}\n\t\t\n\t\tdfs2(node1[u].rs,node2[v].rs);\n\t}\n}\n\ninline void dfs1(int u,int depth)\n{\n\tinit();\n\t\n\tpos1=u,pos2=0;\n\t\n\tdfs2(1,1);\n\t\n\tans=min(ans,(ib-1)*2-(depth-1));\n\t\n\tif(node1[u].ls!=0)\n\t{\n\t\tdfs1(node1[u].ls,depth+1);\n\t}\n\t\n\tif(node1[u].rs!=0)\n\t{\n\t\tdfs1(node1[u].rs,depth+1);\n\t}\n}\n\nint main(void)\n{\n\tans=INF;\n\t\n\tinput();\n\t\n\tdfs1(1,1);\n\t\n\tprintf(\"%d\\n\",ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1638975638,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "P5597 \u3010XR-4\u3011\u590d\u8bfb"
    }
]