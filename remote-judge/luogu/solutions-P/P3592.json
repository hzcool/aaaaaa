[
    {
        "content": "\u9996\u5148\u5c06 $c$ \u79bb\u6563\u5316\uff0c\u8003\u8651\u533a\u95f4 DP\uff0c\u8bbe $f(i,j,k)$ \u4e3a\u533a\u95f4 $[i,j]$ \u6700\u5c0f\u503c\u4e3a $k$ \u65f6\u7684\u6700\u5927\u6536\u76ca\uff08\u53ea\u8003\u8651$i<=a<=b<=j$\u7684\u4eba\uff09\u3002\n\n\u8f6c\u79fb\u5c31\u679a\u4e3e\u6700\u5c0f\u503c\u653e\u5728\u90a3\n$f(i,j,k)=max(f(i,pos-1,y)+f(pos+1,j,z)+cnt(pos)*c[k]$\n\n\u5176\u4e2d$y>=k,z>=k$ , $cnt(pos)$\u4e3a\u533a\u95f4\u5728$[i,j]$\u7684$(a,b)$\u7a7f\u8fc7$pos$\u7684\u6570\u91cf\n\n\u590d\u6742\u5ea6$n^3m$\u3002\n\n\u8fd8\u9700\u8981\u8f93\u51fa\u65b9\u6848\uff0c\u4e8e\u662fdp\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u8f6c\u79fb\u4f4d\u7f6e\n\n\u5177\u4f53\u5b9e\u73b0$f[i][j][k]$\u4e3a\u533a\u95f4$[i,j]$\u6700\u5c0f\u503c\u4e3a$k$\uff0c$k$\u7684\u4f4d\u7f6e.\n\n$mx[i][j][k]$ \u662f $ max (dp[i][j][l])   l>=k)$\n\n$pre[i][j][k]$\u662f $mx[i][j][k]$\u7684$l$\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\ninline int read()\n{\n\tint k=0,f=1;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) k=k*10+c-'0';return f*k;\n}\nconst int N=55,M=4005;\nint n,m,cnt,f[N][N][M],pre[N][N][M],mx[N][N][M],g[N][M];\nint a[M],b[M],c[M],d[M],as[M];\nvoid get(int l,int r,int k)\n{\n\tif(l>r) return;\n\tint pos=f[l][r][k=pre[l][r][k]];\n\tas[pos]=d[k];\n\tget(l,pos-1,k),get(pos+1,r,k);\n}\nint main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=m;i++)\n\t\ta[i]=read(),b[i]=read(),c[i]=d[i]=read();\n\tsort(d+1,d+1+m);cnt=unique(d+1,d+1+m)-d-1;\n\tfor(int i=1;i<=m;i++)\n\t\tc[i]=lower_bound(d+1,d+1+cnt,c[i])-d;\n\tfor(int i=n;i;i--)\n\t\tfor(int j=i;j<=n;j++)\n\t\t{\n\t\t\tfor(int k=i;k<=j;k++)\n\t\t\t\tfor(int l=0;l<=cnt;l++)\n\t\t\t\t\tg[k][l]=0;\n\t\t\tfor(int k=1;k<=m;k++)\n\t\t\t\tif(i<=a[k]&&b[k]<=j)\n\t\t\t\t\tfor(int l=a[k];l<=b[k];l++)\n\t\t\t\t\t\tg[l][c[k]]++;\n\t\t\tfor(int k=i;k<=j;k++)\n\t\t\t\tfor(int l=cnt-1;l;l--)\n\t\t\t\t\tg[k][l]+=g[k][l+1];\n\t\t\tfor(int k=cnt;k;k--)\n\t\t\t{\n\t\t\t\tint maxn=0;\n\t\t\t\tfor(int l=i;l<=j;l++)\n\t\t\t\t{\n\t\t\t\t\tint w=mx[i][l-1][k]+mx[l+1][j][k]+g[l][k]*d[k];\n\t\t\t\t\tif(maxn<=w) maxn=w,f[i][j][k]=l;\n\t\t\t\t}\n\t\t\t\tif(maxn>=mx[i][j][k+1]) mx[i][j][k]=maxn,pre[i][j][k]=k;\n\t\t\t\telse mx[i][j][k]=mx[i][j][k+1],pre[i][j][k]=pre[i][j][k+1];\n\t\t\t}\n\t\t}\n\tget(1,n,1);\n\tprintf(\"%d\\n\",mx[1][n][1]);\n\tfor(int i=1;i<=n;i++)\t\n\t\tprintf(\"%d \",as[i]);\n\treturn 0;\n}\n/*\n7 5\n1 4 7\n3 7 13\n5 6 20\n6 7 1\n1 2 5\n*/\n```",
        "postTime": 1529054344,
        "uid": 36103,
        "name": "wxgwxg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3592 \u3010[POI2015]MYJ\u3011"
    },
    {
        "content": "[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3592)\n\n## 1.\u5bfb\u627e\u7b97\u6cd5\u65b9\u5411\n##### 1.1 \u6570\u636e\u8303\u56f4\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0cn\u7adf\u7136\u53ea\u670950\uff01\n\n\u8bf4\u660e\u6211\u4eec\u80af\u5b9a\u662f\u8981\u591a\u6b21\u679a\u4e3e\u4f4d\u7f6e\u7684\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4f30\u8ba1\u5728$O(n^2m)$\u81f3$O(n^3m)$\u4e4b\u95f4\n##### 1.2 \u521d\u6b65\u66b4\u529b\n\u66b4\u529b\u7684\u76ee\u7684\u662f\u6c42\u51fa\u5728\u89e3\u9898\u8fc7\u7a0b\u4e2d\u6211\u4eec\u5927\u81f4\u9700\u8981\u679a\u4e3e\u7684\u91cf\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a\u70b9\u7684\u53d6\u503c\uff0c\u7136\u540e\u7edf\u8ba1\u6709\u6548\u533a\u95f4\n\n\u5b9e\u9645\u5927\u81f4\u53ef\u4ee5\u505a\u5230$O(n\\space max(c))$\n##### 1.3 \u660e\u786e\u7b97\u6cd5\n\u66b4\u529b\u4e0d\u597d\u5199\uff0c\u800c\u4ece\u66b4\u529b\u5f97\u5230\u7684\u590d\u6742\u5ea6\u4f4e\u4e8e\u4e0a\u9650\uff0c\u90a3\u662f\u5426\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7$O(n)$\u81f3$O(n^2)$\u7684\u679a\u4e3e\u6765\u5feb\u901f\u5f97\u5230\u7b54\u6848\n\n\u53ef\u662f\u6211\u4eec\u53d1\u73b0\u6bcf\u4e2a\u4eba\u7684\u8981\u6c42\u662f\u533a\u95f4\u6027\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u533a\u95f4\u5355\u72ec\u8003\u8651\uff0c\u7136\u540e\u518d\u5408\u5e76\n\n\u8fd9\u4e2a\u601d\u60f3\uff0c\u4e0d\u5c31\u662f**\u533a\u95f4dp**\u5417\uff1f\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u611f\u6027\u7406\u89e3\uff0c\u5927\u80c6\u731c\u60f3qwq\uff09\n## 2.\u5b8c\u5584dp\u6b65\u9aa4\n\u65e2\u7136\u662fdp\u4e86\uff0c\u90a3\u5c31\u80af\u5b9a\u8981\u8d70dp\u90a3\u51e0\u6b65\u7684\n##### 2.1 \u8bbe\u8ba1\u72b6\u6001\n\u5e38\u89c4\u8bbe\u8ba1\u662f$f[i][j]$\u8868\u793a\u533a\u95f4$[i,j]$\u7684\u6536\u76ca\u6700\u5927\u503c\n\n\u7531\u4e8e\u6211\u4eec\u66b4\u529b\u53d1\u73b0\u9700\u8981\u679a\u4e3e\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\uff08\u5373\u65ad\u70b9\uff09\u548c\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u8fd9\u6837\u5b50\u8bbe\u8ba1\n\n$f[i][j][k]$\u8868\u793a\u533a\u95f4$[i,j]$\uff0c\u6700\u5c0f\u503c\u4e3a$k$\u7684\u6700\u5927\u6536\u76ca\n##### 2.2 \u786e\u5b9a\u8f6c\u79fb\u65b9\u7a0b\n\u7531\u4e8e\u6211\u4eec\u8981\u679a\u4e3e\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\uff08\u5373\u65ad\u70b9\uff09\uff0c\u90a3\u5c31\u53ef\u4ee5\u8fd9\u6837\u5b50\u5199\n\n$f[i][j][k]=max(f[i][l-1][k]+f[l+1][j][k]+val(i,j,l,k))(i<=l<=j)$\n\n$val(i,j,l,k)$\u8868\u793a\u5728\u533a\u95f4$[i,j]$\u5185\u7684\u987e\u5ba2\uff0c\u5f53\u6700\u5c0f\u503c\u5728$l$\u5904\uff0c\u6700\u5c0f\u503c\u4e3a$k$\u7684\u4ef7\u503c\n\n$val(i,j,l,k)=cnt(i,j,l,k)*k$\n\n$cnt(i,j,l,k)$\u4e5f\u5c31\u662f\u5728\u533a\u95f4$[i,j]$\u5185\u7684\u987e\u5ba2\uff0c\u5f53\u6700\u5c0f\u503c\u5728$l$\u5904\uff0c\u6700\u5c0f\u503c\u4e3a$k$\u65f6\uff0c\u5728$l$\u5904\u6d88\u8d39\u7684\u987e\u5ba2\u6570\u91cf\n\n\u5982\u679c\u6211\u4eec\u7a0d\u52a0\u601d\u8003\uff0c\u6211\u4eec\u5e94\u8be5\u53d1\u73b0\u6211\u4eec\u53d6\u503c\u540e\u7684\u7ed3\u679c\u662f\u53ef\u4f20\u9012\u7684\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c$f[i][j][k]=max(f[i][j][k],f[i][j][k+1])$\n\n\u56e0\u4e3a\u6211\u4eec\u9009\u62e9k\u4e3a\u6700\u5c0f\u503c\uff0ck+1\u4e5f\u662f\u53ef\u4ee5\u9009\u7684\uff0c\u987e\u5ba2\u5c11\u4e86\u53ef\u662f\u6bcf\u4e2a\u4eba\u4ea4\u7684\u94b1\u591a\u4e86\n\n\u6240\u4ee5\u5e94\u8be5\u6709\u4e24\u4e2a\u65b9\u7a0b\n$$\nf[i][j][k]=max\\left\\{\n\n\\begin{aligned}\n\nf[i][j][k+1]\\\\\n\nmax(f[i][l-1][k]+f[l+1][j][k]+val(i,j,l,k))(i<=l<=j)\\\\\n\n\\end{aligned}\n\\right.\n$$\n\n##### 2.3 \u5f97\u5230\u7b54\u6848\n\u663e\u7136\uff0c\u7b54\u6848\u5e94\u8be5\u662f$f[1][n][k]$\n\n\u90a3\u4e48k\u5e94\u8be5\u662f\u591a\u5c11\u5462\uff1f\n\n\u6211\u4eec\u73b0\u5728\u77e5\u9053\uff0ck=1\u65f6\u5df2\u7ecf\u628a\u5176\u4ed6\u7684k\u7684\u7b54\u6848\u90fd\u4f20\u9012\u4e86\uff0c\u6240\u4ee5k\u5c31\u662f1\u5566\n\n\u90a3\u4e48\u65b9\u6848\u5462\uff1f\uff08\u6ce8\u610f\u6709SPJ\uff09\n\n\u5e38\u89c4\u64cd\u4f5c\uff0c\u6211\u4eec\u5728\u679a\u4e3e\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u4e0b\u65ad\u70b9\u5373\u6700\u4f18\u51b3\u7b56\u70b9\uff0c\u518d**\u8bb0\u5f55\u4e0b\u6700\u4f18\u53d6\u503ck**\n\n\u8fd9\u91cc\u8981\u6ce8\u610f\u540e\u8005\u662f\u6307\u5411\u7b2c\u4e8c\u4e2a\u65b9\u7a0b\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u5c0f\u503c\u4e3ak\uff0c\u5b83\u7684\u6700\u4f18\u53d6\u503c\u4e0d\u4e00\u5b9a\u4e3ak\n\n\u7136\u540e\u5c31\u9012\u5f52\u6c42\u89e3\uff0c\u76f4\u63a5\u8f93\u51fa\n##### 2.4 \u4f18\u5316\u7b97\u6cd5\n\u54a6\uff1f\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\u5462\uff1f\n\n\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\n\n\u679a\u4e3e\u533a\u95f4\u72b6\u6001$O(n^2\\space max(c_i))$\n\n\u679a\u4e3e\u65ad\u70b9$O(n)$\n\n\u8f6c\u79fb\u65b9\u7a0b\uff08\u5373\u6c42val/cnt\uff09$O(m)$\n\n\u90a3\u590d\u6742\u5ea6\u5c31\u662f$O(n^3m\\space max(c_i))$\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u4f18\u5316\n\n\u9996\u5148\uff0c\u6211\u4eec\u53d1\u73b0\u6c42val\u5e94\u8be5\u662f\u53ef\u4ee5\u4f18\u5316\u7684\n\n\u56e0\u4e3a\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u5728\u67d0\u4e00\u4f4d\u7f6e\u53d6\u67d0\u4e00\u56fa\u5b9a\u503c\uff0c\u987e\u5ba2\u6570\u662f\u4e0d\u53d8\u7684\n\n\u90a3\u4e48\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5**\u9884\u5904\u7406cnt**\uff0c\u590d\u6742\u5ea6$O(m\\space max(c_i))$\n\n\u7136\u540e\u6211\u4eec\u5c31\u770b\u5230\u4e86\u4e00\u76f4\u6ca1\u6709\u5904\u7406\u7684$O(max(c_i))$ \n\n\u8fd9\u662f\u4e00\u4e2a\u9898\u76ee\u6ca1\u6709\u7ed9\u51fa\u7684\u503c\uff08\u4f3c\u4e4e\u662f$5e5$\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u4e0d\u89c1\u4e86\uff09\n\n\u663e\u7136\u6211\u4eec\u662f\u4e0d\u53ef\u4ee5\u4f7f\u7528\u5b83\u7684\n\n\u4f46\u662f\u6211\u4eec\u771f\u7684\u9700\u8981\u4ece$1-max(c_i)$\u679a\u4e3e\u5417\uff1f\n\n\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u53d6$c_i$\u548c$c_j(c_i>c_j)$\uff0c\u53ea\u6709\u5728\u4e24\u4e2a\u4e34\u754c\u70b9\u624d\u4f1a\u4ea7\u751f\u8d21\u732e\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6211\u4eec\u53d6$(c_j,c_i)$\u4e2d\u7684\u503c\u65f6\uff0c\u65e2\u4e0d\u80fd\u591f\u589e\u52a0\u987e\u5ba2\u6570\u91cf\uff0c\u53c8\u4e0d\u80fd\u591f\u589e\u5927\u6536\u5165\uff08\u672c\u6765\u7684$c_i$\u7684\u6536\u5165\u8d8a\u6765\u8d8a\u5c0f\u4e86\uff09\n\n\u6240\u4ee5\u6211\u4eec\u5f97\u5230\u6bcf\u4e00\u4e2a\u5e97\u7684\u6807\u4ef7\uff0c\u53ea\u6709\u5728\u67d0\u4e00\u4e2a$c_i$\u53d6\u503c\u624d\u4f1a\u6700\u4f18\n\n\u90a3\u5c31**\u79bb\u6563\u5316**\uff01\n\n\u6211\u4eec\u518d\u6765\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\n\n\u679a\u4e3e\u533a\u95f4\u72b6\u6001$O(n^2m)$\n\n\u679a\u4e3e\u65ad\u70b9$O(n)$\n\n\u6c42cnt\uff08\u8fd9\u91cc\u5e94\u8be5\u597d\u7406\u89e3\uff09\uff0c\u6b64\u65f6\u4e0d\u9700\u8981\u5d4c\u5957 $O(nm)$\n\n\u8fd9\u91cc\u5916\u5c42\u6709\u4e00\u4e2a$O(n^2)$\u7684\u679a\u4e3e\u533a\u95f4\n\n\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u5e94\u8be5\u662f$O(n^3m)$\n## 3. \u4ee3\u7801\u5b9e\u73b0\n\u76f8\u4fe1\u6765\u5230\u7d2b\u9898\u7684\u5927\u4f6c\u90fd\u5f88\u725b\u903c\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u7ed9\u51fa\u90e8\u5206\u4ee3\u7801\n##### 3.1 \u79bb\u6563\u5316\n\u8fd9\u5c31\u592a\u5bb9\u6613\u4e86\u5427\n##### 3.2 \u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u6c42\u51facnt\n```cpp\nfor(int len=1;len<=n;len++)\n\t\tfor(int i=1,j=i+len-1;j<=n;i++,j=i+len-1)//\u679a\u4e3e\u533a\u95f4\n\t\t{\n\t\t\tfor(int k=i;k<=j;k++)\n\t\t\t\tfor(int l=1;l<=tot;l++)//tot\u4e3a\u79bb\u6563\u5316\u540e\u5b9e\u9645\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684c\n\t\t\t\t\tg[k][l]=0;//\u56e0\u4e3a\u91cd\u590d\uff0c\u6240\u4ee5\u8981\u6e05\u96f6\uff0c\u8fd9\u91cc\u662fcnt\n\t\t\tfor(int k=1;k<=m;k++)\n\t\t\t\tif(a[k]>=i&&j>=b[k])//\u6ce8\u610f\u987e\u5ba2\u533a\u95f4\u5fc5\u987b\u5728\u679a\u4e3e\u7684\u533a\u95f4\u5185\uff0c\u5426\u5219\u987e\u5ba2\u53ef\u80fd\u5728\u5176\u4ed6\u533a\u95f4\u5185\u6d88\u8d39\n\t\t\t\t\tfor(int l=a[k];l<=b[k];l++)\n\t\t\t\t\t\tg[l][c[k]]++;\n\t\t\tfor(int k=i;k<=j;k++)\n\t\t\t\tfor(int l=tot-1;l;l--)//\u5982\u679cl\u53ef\u4ee5\uff0c\u90a3\u4e48\u6bd4l\u5c0f\u7684\u90fd\u53ef\u4ee5\n\t\t\t\t\tg[k][l]+=g[k][l+1];//\u6c42\u51fa\u6bcf\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u4ef7\u503c\u53ef\u4ee5\u6536\u83b7\u7684\u987e\u5ba2\n      \t\t}\n```\n##### 3.3 \u8f6c\u79fb\u65b9\u7a0b\n```cpp\nfor(int len=1;len<=n;len++)\n\t\tfor(int i=1,j=i+len-1;j<=n;i++,j=i+len-1)\n\t\t\tfor(int k=tot;k;k--)//\u679a\u4e3e\u6700\u5c0f\u503c\n\t\t\t{\n\t\t\t\tint anss=0,sum;\n\t\t\t\tfor(int l=i;l<=j;l++)//\u679a\u4e3e\u65ad\u70b9\n\t\t\t\t\tif((sum=f[i][l-1][k]+f[l+1][j][k]+g[l][k]*d[k])>=anss) anss=sum,num[i][j][k]=l;//\u8f6c\u79fb\u65b9\u7a0b\u663e\u7136,num\u5b58\u51b3\u7b56\u70b9\n\t\t\t\tif(anss>=f[i][j][k+1]) f[i][j][k]=anss,val[i][j][k]=k;//\u4e0ek+1\u6bd4\u8f83\uff08\u7531\u4e8e\u4e0d\u540c\u60c5\u51b5\u9700\u8981\u66f4\u65b0\u7684\u5185\u5bb9\u4e0d\u540c \uff0cval\u4e3a\u6700\u4f18\u503c\n\t\t\t\telse f[i][j][k]=f[i][j][k+1],val[i][j][k]=val[i][j][k+1];\n\t\t\t } \n```\n##### 3.4 \u6c42\u51fa\u7b54\u6848\n```cpp\nvoid gans(int l,int r,int k)\n{\n\tif(l>r) return;\n\tint point=num[l][r][k=val[l][r][k]];//\u5f97\u5230\u51b3\u7b56\u70b9\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684k\u4e0d\u4e00\u5b9a\u662f\u539f\u6765\u7684k\uff0c\u5e94\u8be5\u662f\u6700\u4f18\u7684k\n\tans[point]=d[k];//\u7b54\u6848\u51fd\u6570\n\tgans(l,point-1,k),gans(point+1,r,k);//\u9012\u5f52\u6c42\u89e3\n}\n```\n\u7136\u540e\u5b8c\u6574\u4ee3\u7801\u5c31\u4e0d\u7ed9\u51fa\u4e86\n\n\u7136\u540e\u5c31\u6ca1\u6709\u7136\u540e\u4e86\n\n**\u5b8c\u7ed3\u6492\u82b1**\n\n[\u987a\u624b\u5e7f\u544a](https://www.luogu.com.cn/blog/JohnJoeZHU/#type=%E9%A2%98%E8%A7%A3)",
        "postTime": 1596590961,
        "uid": 144523,
        "name": "JohnJoeZhu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3592 \u3010[POI2015]MYJ\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e8b\u771f\u7684\u6076\u5fc3\u4e86\u6211\u597d\u4e45\n\n\u9996\u5148\u6211\u4eec\u8981\u770b\u51fa\u6765\u8fd9\u4e2a\u662f\u4e00\u4e2a\u7b1b\u5361\u5c14\u6811\u7684\u6a21\u578b\uff0c\u867d\u7136\u548c\u7b1b\u5361\u5c14\u6811\u6ca1\u592a\u5927\u7684\u5173\u7cfb\n\n\u9996\u5148\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u8f66\u7684\u8d21\u732e\u4e00\u5b9a\u5728\u6700\u5c0f\u5904\u4ea7\u751f\n\n\u6240\u4ee5\u5bf9\u6b64\uff0c\u6211\u4eec\u627e\u5230\u6574\u4e2a\u7684\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6d17\u8f66\u7684\u63cf\u8ff0\u5206\u4e3a3\u7c7b\n\n1. \u7ecf\u8fc7\u6700\u5c0f\u503c\u7684\u70b9\u7684\n2. \u5728\u5de6\u8fb9\u7684\n3. \u5728\u53f3\u8fb9\u7684\n\n\u6211\u4eec\u53ef\u4ee5\u7edf\u8ba1\u7684\u5c31\u662f\u7ecf\u8fc7\u70b9\u7684\u503c\uff1acnt*val\n\n\u90a3\u4e48\u663e\u7136\u8fd9\u4e2a\u53ef\u4ee5\u63a8\u5e7f\uff0c\u6240\u5206\u6210\u7684\u4e24\u4e2a\u533a\u95f4\u4e5f\u662f\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\u7684\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u505a\u533a\u95f4dp\uff0c\u5148\u9884\u5904\u7406\u5bf9\u4e8e $[l,r]$ \u5f53\u70b9 $p$ \u9009\u62e9\u8d4b\u503c\u4e3a $k$ \u7684\u65f6\u5019\u53ef\u4ee5\u8003\u8651\u7684\u70b9\u7684\u4e2a\u6570\n\n\u6211\u4eec\u5b9a\u4e49 $f_{i,j,k}$ \u4e3a\u5f53\u8003\u8651 $[l,r]$ \u9009\u62e9\u6700\u5c0f\u503c\u4e3a\u5927\u4e8e\u7b49\u4e8e $k$ \u7684\u6570\u7684\u6700\u5927\u6536\u76ca\n\n\u7136\u540e\u518d\u679a\u4e3e $len$ \uff0c\u679a\u4e3e $k$ \u548c\u4e2d\u95f4\u70b9\u4f4d\u7f6e $p$ ,\u5e38\u89c1\u7684\u5957\u8def\u53bb\u66f4\u65b0\n\n\u5927\u6982\u5c31\u662f\u8fd9\u6837\n\n```cpp\nfor(int k=cnt;k>=1;k--)\n{\n  f[l][r][k]=f[l][r][k+1];\n  last[l][r][k]=last[l][r][k+1];\n  best[l][r][k]=best[l][r][k+1];\n  for(int p=l;p<=r;p++)\n  {\n    if(f[l][p-1][k]+f[p+1][r][k]+across[l][r][p][k]*b[k]>f[l][r][k])\n    {\n      f[l][r][k]=f[l][p-1][k]+f[p+1][r][k]+across[l][r][p][k] * b[k];\n      last[l][r][k]=p;\n      best[l][r][k]=k;\n    }\n  }\n}\n```\n\n\u7136\u540e\u6211\u4eec\u8981\u5904\u7406\u4e00\u4e0b\u7ef4\u62a4\u65b9\u6848\uff0c\u5c31\u662f\u8bb0\u5f55\u5728\u54ea\u91cc\u8f6c\u79fb\uff0c\u4e5f\u5c31\u662f\u7ef4\u62a4\u7b1b\u5361\u5c14\u6811\u7684\u6bcf\u4e00\u4e2a\u70b9\u548c\u70b9\u4e0a\u7684\u503c\uff0c\u6700\u540e\u4e00\u4e2adfs\u9012\u5f52\u5c31\u53ef\u4ee5\u627e\u5230\u7b54\u6848\u4e86\n\n\u90a3\u4ee3\u7801\u5c31\u662f\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nstruct Q\n{\n  int l,r;\n  long long val;\n}q[1010];\n\nlong long f[20][20][1010],last[20][20][1010],best[20][20][1010],across[20][20][20][1010],minn[20][20][20];\n\nlong long b[1010],ans[20];\n\nint n,m;\n\nvoid dfs(int l,int r,int k)\n{\n  if(l>r) return ;\n  ans[last[l][r][k]]=b[best[l][r][k]];\n  dfs(l,last[l][r][k]-1,best[l][r][k]);\n  dfs(last[l][r][k]+1,r,best[l][r][k]);\n}\n\nint main()\n{\n  memset(minn,0x3f,sizeof(minn));\n  scanf(\"%d%d\",&n,&m);\n  for(int i=1;i<=m;i++)\n  {\n    scanf(\"%d%d%lld\",&q[i].l,&q[i].r,&q[i].val);\n    b[i]=q[i].val;\n  }\n  sort(b+1,b+m+1);\n  int cnt=unique(b+1,b+m+1)-b-1;\n  for(int i=1;i<=m;i++)\n  {\n    q[i].val=lower_bound(b+1,b+cnt+1,q[i].val)-b;\n  }\n  for(int i=1;i<=m;i++)\n  {\n    for(int l=1;l<=q[i].l;l++)\n    {\n      for(int r=q[i].r;r<=n;r++)\n      {\n        for(int j=q[i].l;j<=q[i].r;j++)\n        {\n           across[l][r][j][q[i].val]++;\n        }\n      }\n    }\n  }\n  for(int l=1;l<=n;l++)\n  {\n    for(int r=l+1;r<=n;r++)\n    {\n      for(int p=l;p<=r;p++)\n      {\n        for(int j=cnt;j>=1;j--)\n        {\n          across[l][r][p][j]+=across[l][r][p][j+1];\n        }\n      }\n    }\n  }\n  for(int len=1;len<=n;len++)\n  {\n    for(int l=1;l+len-1<=n;l++)\n    {\n      int r=l+len-1;\n      best[l][r][cnt+1]=cnt;\n      last[l][r][cnt+1]=l;\n      for(int k=cnt;k>=1;k--)\n      {\n        f[l][r][k]=f[l][r][k+1];\n        last[l][r][k]=last[l][r][k+1];\n        best[l][r][k]=best[l][r][k+1];\n        for(int p=l;p<=r;p++)\n        {\n          if(f[l][p-1][k]+f[p+1][r][k]+across[l][r][p][k]*b[k]>f[l][r][k])\n          {\n            f[l][r][k]=f[l][p-1][k]+f[p+1][r][k]+across[l][r][p][k] * b[k];\n            last[l][r][k]=p;\n            best[l][r][k]=k;\n          }\n        }\n      }\n    }\n  }\n  dfs(1,n,1);\n  printf(\"%lld\\n\",f[1][n][1]);\n  for(int i=1;i<=n;i++)\n  {\n    printf(\"%lld \",ans[i]);\n  }\n}\n\n```\n\n\u7136\u800c\u8fd9\u4e2a\u8fc7\u4e0d\u4e86\n\n\u81ea\u7136\u53ef\u4ee5\u53d1\u73b0\u524d\u63d0\u6211\u4eec\u8981\u9884\u5904\u7406 $across$ \u6570\u7ec4\uff0c\u7136\u800c\u5b58\u4e0d\u4e0b\n\n\u5b9e\u9645\u53ef\u4ee5\u52a8\u6001\u6c42\u89e3\uff0c\u5c31\u50cf\u8fd9\u6837\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nstruct Q\n{\n  int l,r;\n  long long val;\n}q[4010];\n\nlong long f[55][55][4010],last[55][55][4010],best[55][55][4010],across[55][4010];\n\nlong long b[4010],ans[55];\n\nint n,m;\n\nvoid dfs(int l,int r,int k)\n{\n  if(l>r) return ;\n  ans[last[l][r][k]]=b[best[l][r][k]];\n  dfs(l,last[l][r][k]-1,best[l][r][k]);\n  dfs(last[l][r][k]+1,r,best[l][r][k]);\n}\n\nint main()\n{\n  scanf(\"%d%d\",&n,&m);\n  for(int i=1;i<=m;i++)\n  {\n    scanf(\"%d%d%lld\",&q[i].l,&q[i].r,&q[i].val);\n    b[i]=q[i].val;\n  }\n  sort(b+1,b+m+1);\n  int cnt=unique(b+1,b+m+1)-b-1;\n  for(int i=1;i<=m;i++)\n  {\n    q[i].val=lower_bound(b+1,b+cnt+1,q[i].val)-b;\n  }\n  for(int len=1;len<=n;len++)\n  {\n    for(int l=1;l+len-1<=n;l++)\n    {\n      int r=l+len-1;\n      memset(across,0,sizeof(across));\n      for(int k=1;k<=m;k++)\n      {\n        if(l<=q[k].l&&r>=q[k].r)\n        {\n          for(int p=q[k].l;p<=q[k].r;p++)\n          {\n            across[p][q[k].val]++;\n          }\n        }\n      }\n      for(int p=l;p<=r;p++)\n      {\n        for(int j=cnt;j>=0;j--)\n        {\n          across[p][j]+=across[p][j+1];\n        }\n      }\n      best[l][r][cnt+1]=cnt;\n      last[l][r][cnt+1]=l;\n      for(int k=cnt;k>=1;k--)\n      {\n        f[l][r][k]=f[l][r][k+1];\n        last[l][r][k]=last[l][r][k+1];\n        best[l][r][k]=best[l][r][k+1];\n        for(int p=l;p<=r;p++)\n        {\n          if(f[l][p-1][k]+f[p+1][r][k]+across[p][k]*b[k]>f[l][r][k])\n          {\n            f[l][r][k]=f[l][p-1][k]+f[p+1][r][k]+across[p][k] * b[k];\n            last[l][r][k]=p;\n            best[l][r][k]=k;\n          }\n        }\n      }\n    }\n  }\n  dfs(1,n,1);\n  printf(\"%lld\\n\",f[1][n][1]);\n  for(int i=1;i<=n;i++)\n  {\n    printf(\"%lld \",ans[i]);\n  }\n}\n\n```\n\n\u4f60\u4fbf\u5b8c\u7f8e\u89e3\u51b3\u4e86\u8fd9\u4e2a\u9898\u4e86\n",
        "postTime": 1592020526,
        "uid": 62573,
        "name": "zzqDeco",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3592 \u3010[POI2015]MYJ\u3011"
    },
    {
        "content": "> [P3592 [POI2015]MYJ](https://www.luogu.com.cn/problem/P3592)\n>\n> [POI \u5408\u96c6](https://www.cnblogs.com/alex-wei/p/POI.html)\u3002\n\n\u533a\u95f4 DP \u597d\u9898\u3002\u56e0\u4e3a $c_i$ \u5177\u4f53\u503c\u4e0d\u91cd\u8981\uff0c\u53ea\u5173\u5fc3\u76f8\u5bf9\u5927\u5c0f\uff0c\u6240\u4ee5\u79bb\u6563\u5316 $c_i$\u3002\u8bbe $f_{l,r,x}$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u6700\u5c0f\u503c\u4e0d\u5c0f\u4e8e\u4e3a $x$ \u7684\u7b54\u6848\u3002\u7531\u4e8e\u8981\u8f93\u51fa\u65b9\u6848\u6240\u4ee5\u8bb0\u5f55 $v_{l,r,x}$ \u8868\u793a $f_{l,r,x}$ \u7684\u533a\u95f4\u6700\u5c0f\u503c\u53d6\u4e86 $v_{l,r,x}$\uff0c\u4ee5\u53ca $d_{l,r,x}$ \u8868\u793a $f_{l,r,x}$ \u7684\u5206\u5272\u70b9\uff0c\u8fd9\u8bf4\u660e $f_{l,r,x}$ \u7531 $f_{l,d_{l,r,x}-1,v_{l,r,x}}$ \u548c $f_{d_{l,r,x}+1,r,v_{l,r,x}}$ \u8f6c\u79fb\u800c\u6765\u3002\n\n\u8f6c\u79fb\u679a\u4e3e\u65ad\u70b9 $k$\uff0c\u5219\u8d21\u732e\u4e3a $f_{l,r,x}=cx+\\max_{k\\in [l,r]}f_{l,k-1,x}+f_{k+1,r,x}$\uff0c\u5176\u4e2d $c$ \u662f\u6ee1\u8db3 $l\\leq a_i\\leq k\\leq b_i \\leq r$ \u7684 $i$ \u7684\u4e2a\u6570\uff0c\u53ef\u4ee5\u5728\u679a\u4e3e $l,r,k$ \u7684\u65f6\u5019 $\\mathcal{O}(m)$ \u9884\u5904\u7406\u3002\u6ce8\u610f\u8fd8\u8981\u548c $f_{l,r,x+1}$ \u53d6 $\\max$\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n^3m)$\u3002\n\n```cpp\nconst int N = 50 + 5;\nconst int M = 4e3 + 5;\n\nint n, m, a[M], b[M], c[M], d[M];\nint ans[N], f[N][N][M], buc[N][N];\npii tr[N][N][M];\nvoid dfs(int l, int r, int p) {\n\tif(l > r) return;\n\tpii it = tr[l][r][p];\n\tans[it.se] = d[it.fi];\n\tdfs(l, it.se - 1, it.fi), dfs(it.se + 1, r, it.fi);\n}\nbool Med;\nint main(){\n\tcin >> n >> m;\n\tfor(int i = 1; i <= m; i++) cin >> a[i] >> b[i] >> c[i], d[i] = c[i];\n\tsort(d + 1, d + m + 1);\n\tfor(int i = 1; i <= m; i++) c[i] = lower_bound(d + 1, d + m + 1, c[i]) - d;\n\tfor(int i = m; i; i--) {\n\t\tfor(int j = 1; j <= m; j++) if(c[j] == i)\n\t\t\tfor(int l = 1; l <= a[j]; l++) for(int r = b[j]; r <= n; r++) buc[l][r]++;\n\t\tfor(int len = 1; len <= n; len++)\n\t\t\tfor(int l = 1, r = len; r <= n; l++, r++) {\n\t\t\t\tf[l][r][i] = f[l][r][i + 1], tr[l][r][i] = tr[l][r][i + 1];\n\t\t\t\tfor(int p = l; p <= r; p++) {\n\t\t\t\t\tint coef = buc[l][r] - buc[l][p - 1] - buc[p + 1][r];\n\t\t\t\t\tint v = f[l][p - 1][i] + f[p + 1][r][i] + coef * d[i];\n\t\t\t\t\tif(v > f[l][r][i]) f[l][r][i] = v, tr[l][r][i] = {i, p};\n\t\t\t\t} if(tr[l][r][i].fi == 0) tr[l][r][i] = {i, l};\n\t\t\t}\n\t} cout << f[1][n][1] << endl, dfs(1, n, 1);\n\tfor(int i = 1; i <= n; i++) cout << ans[i] << \" \";\n\treturn 0;\n}\n```",
        "postTime": 1639123983,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P3592 [POI2015]MYJ"
    },
    {
        "content": "## \u601d\u8def\n\n>\u79bb\u6563\u5316+\u533a\u95f4$\\texttt{DP}$\n\n\u7a0d\u4f5c\u5206\u6790~~\u534a\u5929~~\u5c31\u4f1a\u53d1\u73b0\uff1a\u5b58\u5728\u4e00\u7ec4\u7b54\u6848\u4f7f\u5f97\u6bcf\u4e2a$ans_i$\u90fd\u662f\u67d0\u4e2a$c_i$\u3002\u56e0\u4e3a\u628a\u67d0\u4e2a\u7b54\u6848\u66ff\u6362\u6210\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684$c_i$\u4e0d\u4f1a\u66f4\u52a3\uff0c\u56e0\u6b64$c_i$\u7684\u503c\u5e76\u4e0d\u5f71\u54cd\u505a\u9898\uff0c\u4f46\u662f\u5927\u5c0f\u987a\u5e8f\u662f\u6709\u7528\u7684\u6240\u4ee5\u6211\u4eec\u5c06$c_i$\u79bb\u6563\u5316\u3002\n\n\u56e0\u4e3a\u4e00\u4e2a\u533a\u95f4\u7684\u4ee3\u4ef7\u4e4b\u548c\u53ea\u4e0e\u6700\u5c0f\u503c\u6709\u5173\uff0c\u800c\u4e14\u6570\u636e\u8303\u56f4\u7684$n$\u4e5f\u4e0d\u5927\uff0c\u6240\u4ee5\u8003\u8651\u533a\u95f4$\\texttt{DP}$\uff1a\n\n\u8bbe$f[l][r][k]$\u8868\u793a\u533a\u95f4$[l,r]$\u5185$ans[]$\u7684\u6700\u5c0f\u503c\u7b49\u4e8e$k$\u7684\u6700\u5927\u6536\u76ca\uff0c$g[p][j]$\u4e3a\u5f53\u524d\u533a\u95f4\u7a7f\u8fc7$p$\uff0c\u4e14$c\\geq j$\u7684\u533a\u95f4\u6570\u91cf\n\n\u679a\u4e3e\u6700\u5c0f\u7684\u4f4d\u7f6e$p$\uff0c\u90a3\u4e48\u5305\u542b$p$\u7684\u533a\u95f4\u7684\u7b54\u6848\u5168\u90fd\u662f$k$\uff0c\u4e4b\u540e\u8f6c\u79fb\n\n$$f[l][r][k]=\\max(\\max(f[l][p - 1][k] + f[p + 1][r][k]+g[p][k]*k,p\\in[l,r]),f[l][r][k+1])$$\n\n$\\texttt{DP}$\u65f6\u987a\u4fbf\u8bb0\u5f55\u8bb0\u5f55\u51b3\u7b56\u70b9\uff0c\u7136\u540e$dfs$\u8f93\u51fa\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^3m)$\n\n## \u4ee3\u7801\n\n```cpp\n/*\nAuthor:Loceaner\n\u533a\u95f4DP \n*/\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int A = 51;\nconst int B = 4011;\nconst int mod = 1e9 + 7;\nconst int inf = 0x3f3f3f3f;\n\ninline int read() {\n  char c = getchar(); int x = 0, f = 1;\n  for ( ; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n  for ( ; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n  return x * f;\n}\n\nstruct node { int l, r, c; } a[B];\nint n, m, tot, ans[B], res[B];\nint pre[A][A][B], f[A][A][B], pos[A][A][B], g[A][B];\n\ninline void work(int l, int r, int now) {\n  if (l > r) return;\n  int qwq = pos[l][r][now = pre[l][r][now]];\n  ans[qwq] = res[now];\n  work(l, qwq - 1, now), work(qwq + 1, r, now);\n}\n\ninline void update(int l, int r) {\n  for (int i = l; i <= r; i++) \n    for (int minn = 0; minn <= tot; minn++) g[i][minn] = 0;\n  for (int i = 1; i <= m; i++) \n    if (l <= a[i].l && a[i].r <= r) \n      for (int j = a[i].l; j <= a[i].r; j++) g[j][a[i].c]++;\n  for (int i = l; i <= r; i++)\n    for (int j = tot - 1; j >= 1; j--) g[i][j] += g[i][j + 1];\n}\n\ninline void dp(int l, int r) {\n  for (int k = tot; k >= 1; k--) {\n    int maxn = 0;\n    for (int p = l; p <= r; p++) {\n      int now = f[l][p - 1][k] + f[p + 1][r][k] + g[p][k] * res[k];\n      if (maxn <= now) maxn = now, pos[l][r][k] = p;\n    }\n    if (maxn >= f[l][r][k + 1]) f[l][r][k] = maxn, pre[l][r][k] = k;\n    else f[l][r][k] = f[l][r][k + 1], pre[l][r][k] = pre[l][r][k + 1];\n  }\n}\n\nsigned main() {\n  n = read(), m = read();\n  for (int i = 1; i <= m; i++)\n    a[i].l = read(), a[i].r = read(), a[i].c = read(), res[i] = a[i].c;\n  sort(res + 1, res + 1 + m);\n  tot = unique(res + 1, res + m + 1) - res - 1;\n  for (int i = 1; i <= m; i++) \n    a[i].c = lower_bound(res + 1, res + tot + 1, a[i].c) - res;\n  for (int i = n; i >= 1; i--)\n    for (int j = i; j <= n; j++) \n      update(i, j), dp(i, j);\n  work(1, n, 1);\n  cout << f[1][n][1] << '\\n';\n  for (int i = 1; i <= n; i++) cout << ans[i] << \" \";\n  return 0;\n}\n```",
        "postTime": 1594018419,
        "uid": 198323,
        "name": "loceaner",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3592 \u3010[POI2015]MYJ\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/P3592)\n\n\u8fd9\u9053\u9898\u662f\u6211\u505a\u8fc7\u7684\u6700\u96be\u7684\u4e00\u9053\u533a\u95f4dp\u3002\n\n#### 1\u601d\u8def\n\n\u770b\u5230 $n$ \u6700\u5927\u53ea\u6709\uff0c\u800c $m$ \u6709 $4000$ \uff0c\u6211\u4eec\u60f3\u5230\u8fd9\u4e2a\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f $O(n^3m)$ \u5de6\u53f3\u7684\uff0c\u6bd5\u7adf\u8fd9\u5df2\u7ecf\u662f\u6781\u9650\u3002\n\n\u8fdb\u800c\u53d1\u73b0\u4e00\u6bb5\u533a\u95f4\u5185\u6240\u82b1\u7684\u94b1\u6570\u4e0e\u8fd9\u6bb5\u533a\u95f4\u7684\u6700\u5c0f\u503c\u6709\u5173\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u628a\u6700\u5c0f\u503c\u653e\u8fdb\u72b6\u6001\u91cc\u3002\u8003\u8651\u533a\u95f4dp\uff0c\u6211\u4eec**\u679a\u4e3e\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e**\u6765\u8fdb\u884c\u8f6c\u79fb\u3002\n\n#### 2\u72b6\u6001\u8bbe\u8ba1\u548c\u8f6c\u79fb\u65b9\u7a0b\u5f0f\n\n\u6ce8\u610f\u5230 $m$ \u53ea\u6709 $4000$ \uff0c\u800c $c_i$ \u53ef\u80fd\u5f88\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u5bf9 $c_i$ \u79bb\u6563\u5316\u3002\n\n\u8bbe\u72b6\u6001 $f_{i,j,k}$ \u8868\u793a\u533a\u95f4 $[i,j]$ \uff08\u6ce8\u610f $i$ \u53ef\u80fd\u7b49\u4e8e $j$ \uff0c\u8fd9\u6837\u5199\u4e0d\u662f\u5f88\u7b26\u5408\u89c4\u8303\uff0c\u4f46\u4e0d\u5f71\u54cd\u7406\u89e3\uff09\u4e2d\u6700\u5c0f\u503c\u4e3a $k$ \u65f6\u6240\u6709\u4eba\u82b1\u7684\u94b1\u7684\u603b\u548c\u7684\u6700\u5927\u503c\u3002\n\n\u90a3\u4e48\u6709\u4e0b\u9762\u7684\u8f6c\u79fb\u65b9\u7a0b\u5f0f\uff1a\n$$\nf_{i,j,k}=\\max\\limits_{q_1,q_2\\in[k,m],x\\in[i,j]}(f_{i,x-1,q_1}+f_{x+1,j,q_2}+cost_{x,k})\n$$\n\u5176\u4e2d\uff0c\u4e0a\u9762\u6d89\u53ca\u7684\u6240\u6709\u53d8\u91cf\u90fd\u662f\u6574\u6570\uff0c $m$ \u4ee3\u8868\u7684\u542b\u4e49\u5982\u9898\u76ee\u6240\u793a\uff0c $cost_{x,k}$ \u8868\u793a\u628a $x$ \u8d4b\u503c\u4e3a**\u6700\u5c0f\u503c** $k$ \u6240\u4ea7\u751f\u7684\u82b1\u8d39\u3002\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u6211\u4eec\u9996\u5148\u679a\u4e3e\u8fd9\u4e2a\u6700\u5c0f\u503c $k$ \u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u539f\u95ee\u9898\u5212\u5206\u6210\u4e86\u4e24\u4e2a\u5b50\u95ee\u9898\uff0c\u7531\u4e8e $k$ \u662f\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u9700\u8981\u6ee1\u8db3\u5212\u5206\u540e\u4e24\u8fb9\u7684\u5c0f\u533a\u95f4\u7684\u6700\u5c0f\u503c\u8981\u4e0d\u5c0f\u4e8e $k$ \u3002\n\n\u5982\u4f55\u8ba1\u7b97 $cost_{x,k}$ \u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa\u5728 $[i,j]$ \u4e2d\u4f1a\u6709\u591a\u5c11\u4eba\u5728 $x$ \u8fd9\u4e2a\u4f4d\u7f6e\u82b1\u8d39\uff0c\u6700\u540e\u5728\u518d\u4e58\u4e0a $k$ \u3002\u524d\u8005\u6211\u4eec\u8003\u8651\u63d0\u524d\u9884\u5904\u7406\u51fa\u6765\uff0c\u770b\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u6570\u7ec4\u662f\u56db\u7ef4\u7684\uff0c\u592a\u5927\u5f00\u4e0d\u4e0b\u3002\u6240\u4ee5\u6211\u4eec\u4e0d\u5982\u52a8\u6001\u9884\u5904\u7406\uff1a\u5728dp\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u5148\u679a\u4e3e $i$ \u548c $j$ \uff0c\u4e4b\u540e\u6211\u4eec\u5f00\u4e00\u4e2a\u4e8c\u7ef4\u7684\u6570\u7ec4\uff0c\u7b97\u51fa\u5728\u533a\u95f4 $[i,j]$ \u4e2d\u7684 $cnt_{x,k}$ \uff08\u8868\u793a\u5728\u8be5\u533a\u95f4\u4e2d\u628a\u4f4d\u7f6e $x$ \u8d4b\u503c\u4e3a $k$ \u540e\u6709\u591a\u5c11\u4eba\u56de\u6765\u8fd9\u91cc\u82b1\u8d39\uff09\uff0c\u7136\u540e\u6211\u4eecdp\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\n\n+  $x$ \u7684\u53d6\u503c\u8303\u56f4\u4e3a $[i,j]$ \u800c\u975e $(i,j)$ \u3002\n\n  \u53ef\u80fd\u6709\u4e9b\u8bfb\u8005\u8ba4\u4e3a\u5f53 $x$ \u53d6\u503c\u4e3a $i$ \u6216 $j$ \u65f6\uff0c\u5bf9\u5e94\u7684 $x-1$ \u548c $x+1$ \u6ca1\u6709\u610f\u4e49\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u65f6\u5019 $cost_{x,k}$ \u662f\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u4e0d\u80fd\u6f0f\u8003\u8651\u6389\u8fd9\u79cd\u60c5\u51b5\u3002\u4e14\u5bb9\u6613\u53d1\u73b0\u867d\u7136 $x-1,x+1$\uff0c\u6240\u5bf9\u5e94\u7684 $f$ \u503c\u6709\u65f6\u4e0d\u5408\u6cd5\uff0c\u4f46\u662f\u5b83\u4eec\u4e0d\u5408\u6cd5\u65f6\u7684\u503c\u90fd\u662f $0$ \uff0c\u6240\u4ee5\u4e0d\u5f71\u54cd\u6b63\u786e\u6027\u3002\n\n+ \u5728\u8f6c\u79fb\u65f6\u6211\u4eec\u8bb0 $g_{i,j,k}=f_{i,j,q},q\\geq k$\uff0c\u5728\u7ef4\u62a4 $f$ \u7684\u540c\u65f6\u7ef4\u62a4 $g$ \uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230 $O(n)$  \u7684\u8f6c\u79fb\u2014\u2014\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u65ad\u70b9 $x$ \u3002\n\n#### 3\u6253\u5370\u89e3\n\n\u8fd9\u91cc\u6211\u5f00\u4e86\u4e24\u4e2a\u6570\u7ec4\uff0c $pre_{i,j,k}$ \u8868\u793a $f_{i,j,q'}=\\max(f_{i,j,q},q\\geq k)$ \u53d6\u5f97\u6700\u503c\u65f6\u679a\u4e3e\u7684\u65ad\u70b9\uff1b\u800c $co_{i,j,k}$ \u8868\u793a $f_{i,j,q},q\\geq k$ \u53d6\u5f97\u6700\u5927\u503c\u7684\u989c\u8272\uff0c\u5373\u6ee1\u8db3 $q\\geq k$ \u7684\u4f7f $f_{i,j,q}$ \u6700\u5927\u7684 $q$ \u3002\n\n\u663e\u7136\uff0c\u8fd9\u4e24\u4e2a\u6570\u7ec4\u662f\u53ef\u4ee5\u987a\u5e26\u7ef4\u62a4\u7684\uff0c\u5177\u4f53\u5b9e\u73b0\u8bf7\u770b\u4ee3\u7801\u3002\n\n#### 4\u4ee3\u7801\n\n```c++\n#define dd double\n#define ld long double\n#define ll long long\n#define ull unsigned long long\n#define N 52\n#define M 4010\nusing namespace std;\n\nconst int INF=0x3f3f3f3f;\n\ninline int Max(int a,int b){\n    return a>b?a:b;\n}\n\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\ntemplate<typename T> inline void write(T x){\n    if(x<0) x=-x,putchar('-');\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\n\nint d[M],rk[M];\nint n,m,a[M],b[M],c[M];\ninline void intt(){\n    n=read();m=read();\n    for(int i=1;i<=m;i++) a[i]=read(),b[i]=read(),c[i]=read();\n    for(int i=1;i<=m;i++) d[i]=c[i];\n    sort(d+1,d+m+1);\n    int nm=unique(d+1,d+m+1)-d-1;\n    for(int i=1;i<=m;i++){\n        int nowc=lower_bound(d+1,d+nm+1,c[i])-d;\n        rk[nowc]=c[i];\n        c[i]=nowc;\n    }\n}\n\nint cost[N][M];\nint f[N][N][M],g[N][N][M],point[N][N][M],co[N][N][M],lin[M]; \ninline int dp(){\n    int ans=-INF;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n-i+1;j++){\n            int l=j,r=j+i-1;\n            for(int k=1;k<=n;k++) for(int x=1;x<=m;x++) cost[k][x]=0;\n//            for(int k=l;k<=r;k++)\n//                for(int x=1;x<=m;x++)\n//                    if(l<=a[x]&&b[x]<=r&&a[x]<=k&&k<=b[x]) cost[k][c[x]]++;\n            for(int k=1;k<=m;k++) if(l<=a[k]&&b[k]<=r) for(int x=a[k];x<=b[k];x++) cost[x][c[k]]++;\n            for(int k=l;k<=r;k++)\n                for(int x=m;x>=1;x--)\n                    cost[k][x]+=cost[k][x+1];\n            for(int k=m;k>=1;k--){\n                for(int x=l;x<=r;x++){\n                    if(f[l][r][k]<=g[l][x-1][k]+g[x+1][r][k]+cost[x][k]*rk[k]){\n                        f[l][r][k]=g[l][x-1][k]+g[x+1][r][k]+cost[x][k]*rk[k];\n                        lin[k]=x;\n                    }\n                }\n                if(g[l][r][k+1]>f[l][r][k]){\n                    g[l][r][k]=g[l][r][k+1];\n                    point[l][r][k]=point[l][r][k+1];\n                    co[l][r][k]=co[l][r][k+1];\n                }\n                else{\n                    g[l][r][k]=f[l][r][k];\n                    point[l][r][k]=lin[k];\n                    co[l][r][k]=k;\n                }\n                if(i==n) ans=Max(ans,f[l][r][k]);\n            }\n        }\n    }\n    return ans;\n}\n\nint ans,color[N];\ninline void print(int l,int r,int k){\n    int w=-1,col=co[l][r][k];\n    color[w=point[l][r][k]]=co[l][r][k];\n    if(w==0){\n        printf(\"NOOOOOOOOOOOOOOOOO\\n\");\n        return;\n    }\n    if(l<w) print(l,w-1,col);\n    if(w<r) print(w+1,r,col);\n}\n\nint main(){\n    intt();\n    ans=dp();\n    write(ans);putchar('\\n');\n    print(1,n,1);\n    for(int i=1;i<=n;i++) write(rk[color[i]]),putchar(' ');\n    return 0;\n}\n```\n\n\u4ee3\u7801\u4e2d\u7684\u6ce8\u610f\u4e8b\u9879\uff1a\n\n+ $lin_k$ \u8868\u793a\u5728\u533a\u95f4 $[l,r]$ \u4e2d\u4f7f $f_{l,r,k}$ \u53d6\u5f97\u6700\u503c\u5f97\u65ad\u70b9\u3002\n\n+ \u6211\u4eec\u5229\u7528\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u524d\u7f00\u548c\u7684\u65b9\u5f0f\u6765\u8ba1\u7b97 $cut$ \uff08\u5728\u4ee3\u7801\u91cc\u662f $cost$ \uff09\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u96be\u7406\u89e3\uff0c\u5982\u679c\u503c $k$ \u80fd\u591f\u88ab\u8ba1\u7b97\uff0c\u90a3\u4e48\u6bd4 $k$ \u5c0f\u7684\u503c\u4e5f\u80af\u5b9a\u80fd\u88ab\u8ba1\u7b97\u3002\n\n+ \u6ce8\u610f\u5728 $61$ \u884c\u7684\u4e0d\u5927\u4e8e\u53f7\u548c\u5728\u7b2c $66$ \u884c\u7684\u5927\u4e8e\u53f7\uff0c\u8fd9\u4e24\u4e2a\u7b26\u53f7\u90fd\u4e0d\u80fd\u8f7b\u6613\u7684\u6539\u6210\u5c0f\u4e8e\u53f7\u548c\u4e0d\u5c0f\u4e8e\u53f7\uff0c\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u5728 print \u51fd\u6570\u4e2d\u51fa\u73b0 $w$ \u7b49\u4e8e $0$ \u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u4f60\u7684\u8fd9\u4e2a\u7a0b\u5e8f\u5c31\u505c\u4e0d\u4e0b\u6765\u4e86\uff0c\u800c\u4ee5\u4e0a\u4e24\u4e2a\u7b26\u53f7\u786e\u4fdd\u4e86\u4e0d\u4f1a\u51fa\u73b0 $0$ \u3002\n\n  \u4e3a\u4ec0\u4e48\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u51fa\u73b0 $0$ \u7684\u539f\u56e0\u662f\u56e0\u4e3a\u4f60\u5728\u8bb0\u5f55\u7684\u65f6\u5019\u9075\u5faa\u8fd9\u6837\u7684\u4e00\u4e2a\u539f\u5219\uff1a\u53ea\u8981\u4e0d\u662f\u66f4\u4f18\u5c31\u4e0d\u66f4\u65b0\u3002\u4f46\u8fd9\u91cc\u8981\u9075\u5faa\u7684\u539f\u5219\u786e\u6070\u6070\u76f8\u53cd\uff1a\u53ea\u8981\u8fbe\u5230\u6700\u4f18\u503c\u6216\u662f\u66f4\u4f18\u5c31\u66f4\u65b0\u3002 $61$ \u884c\u7684\u7b26\u53f7\u4fdd\u8bc1\u4e86 $lin$ \u6570\u7ec4\u4e0d\u4e3a $0$ \uff0c\u800c $66$ \u884c\u7684\u7b26\u53f7\u4fdd\u8bc1\u4e86\u76f8\u7b49\u65f6\u53d6 $lin$ \u7684\u503c\u3002\u8fd9\u6837\u5c31\u9632\u6b62\u4e86 $0$ \u7684\u51fa\u73b0\u3002\n\n  \u6211\u5df2\u7ecf\u5728 print \u51fd\u6570\u4e2d\u52a0\u5165\u4e86\u9632\u6b62\u7a0b\u5e8f\u505c\u4e0d\u4e0b\u6765\u7684\u63aa\u65bd\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u66f4\u6539\u8fd9\u4e24\u4e2a\u7b26\u53f7\uff0c\u770b\u4e00\u770b\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\n\n+ \u6ce8\u610f\u5230 $52$ \u5230 $54$ \u884c\u88ab\u6211\u6ce8\u91ca\u6389\u7684\u90e8\u5206\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e09\u884c\u548c\u7b2c $55$ \u884c\u7684\u4f5c\u7528\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7528\u6ce8\u91ca\u6389\u7684\u90e8\u5206\u66ff\u4ee3\u7b2c $55$ \u884c\u4f1a\u8d85\u65f6\uff0c\u8fd9\u63d0\u793a\u6211\u4eec\u5728\u6709\u5224\u65ad\u8bed\u53e5\u65f6\u9002\u5f53\u7684\u8c03\u6574\u5faa\u73af\u987a\u5e8f\u53ef\u4ee5\u51cf\u5c11\u4f18\u5316\u5e38\u6570\u3002\n\n\n\n",
        "postTime": 1620478200,
        "uid": 194093,
        "name": "\u5929\u68a6",
        "ccfLevel": 6,
        "title": "P3592\u9898\u89e3"
    },
    {
        "content": "$$\\text{sto MYJ orz}$$\n- MYJ \u662f\u6211\u4eec\u7684\u7ea2\u592a\u9633\uff0c\u8ba9\u6211\u4eec\u4e00\u8d77\u8d5e\u7f8e [MYJ](https://www.luogu.com.cn/user/58543) \u5427\u3002\n\n**\u9898\u610f**\n- [\u9898\u9762](https://www.luogu.com.cn/problem/P3592)\u3002\n- \u6709 $m$ \u4e2a\u5bf9\u4e8e\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$ \u7684\u4f30\u4ef7\u51fd\u6570 $f_i=[\\min_{k=l_i}^{r_i}a_k\\le c_i]\\cdot \\min_{k=l_i}^{r_i}a_k$\u3002\n- \u6784\u9020\u65b9\u6848\uff0c\u6700\u5927\u5316\uff1a\n$$\\sum_{i=1}^mf_i$$\n- $n\\le 50,m\\le 4000,c_i\\le 5\\times 10^5$\u3002\n\n**\u5206\u6790**\n- \u4e0d\u6127\u662f MYJ \u5927\u5946\u4f6c\u7684\u9898\u76ee\uff0c\u849f\u84bb\u4e00\u770b\u5c31\u4e0d\u4f1a\u4e86\u3002\n- MYJ \u8bf4\uff0c\u8981\u7b80\u5316\u95ee\u9898\uff1a\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u4fe1\u606f\uff0c\u6240\u6709\u7684 $a_i$ \u5e94\u8be5\u90fd\u662f $c_i$ \u4e2d\u7684\u4e00\u4e2a\uff0c\u5426\u5219\u663e\u7136\u53ef\u4ee5\u4f7f\u5f97\u4f30\u4ef7\u51fd\u6570\u7684\u503c\u53d8\u5927\uff0c\u6240\u4ee5 $5\\times 10^5$ \u53d8\u6210\u4e86 $4000$\u3002\n- MYJ \u8bf4\uff0c\u8981\u5b66\u4f1a\u53d8\u6362\uff1a\u6240\u4ee5\u6211\u4eec\u5047\u8bbe $f(l,r)$ \u4e3a\u4f7f\u5f97 $l\\le l_i,r_i\\le r$ \u7684\u6240\u6709\u4f30\u4ef7\u51fd\u6570\u7684\u548c\u6700\u5927\u7684\u5b89\u6392\uff0c\u6765\u601d\u8003\u5b83\u7684\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u3002\n- \u8ba9\u6211\u4eec\u4efb\u610f\u9009\u5b9a\u4e00\u4e2a $g$ \u4f5c\u4e3a $[l,r]$ \u7684\u4e2d\u70b9\u5e76\u5f3a\u884c\u8ba9\u5b83\u4e3a\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u6240\u6709\u7ecf\u8fc7 $g$ \u7684\u533a\u95f4\u5c31\u5168\u90e8\u5904\u7406\u5b8c\u6bd5\u4e86\uff0c\u95ee\u9898\u88ab\u5206\u4e3a\u4e24\u4e2a\u4e92\u76f8\u72ec\u7acb\u7684\u533a\u95f4\u3002\n- \u6240\u4ee5\u6211\u4eec\u8bbe $f(l,r,k)$ \u4e3a\u8bbe\u5b9a\u8ba9 $a_l$ \u5230 $a_r$ \u5927\u4e8e\u7b49\u4e8e $c_k$\uff0c\u5904\u7406\u5b8c\u88ab $[l,r]$ \u533a\u95f4\u8986\u76d6\u7684\u4f30\u4ef7\u51fd\u6570\u7684\u6700\u4f18\u65b9\u6848\u3002\n- \u806a\u660e\u5730\u8f6c\u79fb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^3m)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n^2m)$\uff0c\u806a\u660e\u5730\u526a\u679d\uff0c\u590d\u6742\u5ea6\u7edd\u5bf9\u5361\u4e0d\u6ee1\uff0c\u5bf9\u4e8e\u8f93\u51fa\u65b9\u6848\u7684\u95ee\u9898\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u5728\u7b97\u51fa\u6700\u4f18\u7684\u7b54\u6848\u540e\u8f7b\u6613\u5730\u5012\u63a8\u3002\n- \u6240\u4ee5\u6211\u4eec\u5c31\u6210\u529f\u5730\u6c34\u8fc7\u4e86\u8fd9\u9053\u9898\uff1a\u771f\u662f\u8ba9\u4eba\u611f\u5230\u65e0\u5c3d\u5730\u6109\u60a6\u554a\uff01[\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/5l8zt696)\uff0c\u6bd4\u8bb0\u5fc6\u5316\u641c\u7d22\u53ef\u80fd\u4f1a\u6162\u4e00\u70b9\u3002\n- \u6211\u89c9\u5f97\u8fd9\u79cd\u65b9\u6cd5\u8fd8\u662f\u6709\u542f\u53d1\u6027\u7684\u5427\uff0c\u4e0d\u6127\u662f [MYJ](https://www.luogu.com.cn/blog/RioBlu1270585465/p3592-poi2015-myj) \u554a\uff01",
        "postTime": 1649155650,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u819c\u62dc\u3011MYJ"
    },
    {
        "content": "**\u524d\u8a00**\n\n> \u770b\u5230\u9898\u89e3\u533a\u7684\u7801\u98ce\u5343\u7bc7\u4e00\u5f8b\uff0c\u6211\u6765\u63d0\u4f9b\u4e00\u79cd\u65b0\u7684\u5199\u6cd5\u5427\n\n**\u601d\u8def**\n\n\u9996\u5148\u5c06 $c$ \u79bb\u6563\u5316\uff0c\u5728\u8003\u8651\u533a\u95f4DP\uff0c$f(i,j,k)$ \u4e3a\u533a\u95f4 $[i,j]$ \u6700\u5c0f\u503c\u4e3a $k$ \u7684\u6700\u5927\u6536\u76ca\uff0c\u7136\u540e\u679a\u4e3e $k$ \u7684\u4f4d\u7f6e $x$\uff0c\u8f6c\u79fb\u6709 \n\n$$\nf[i,x-1,>=k]+f[x+1,j,>=k]+cost_x\n$$ \n\n$cost_x$ \u7528 $g$ \u6570\u7ec4\u624d\u5b58\u50a8\uff0c$g_{i,k}$ \u8868\u793a \u5728\u533a\u95f4\u8303\u56f4\u5185\uff0c\u7ecf\u8fc7 $k$ \uff08\u679a\u4e3e\u7684\u6700\u5c0f\u4ef7\u503c\uff09 \u7684\u6b21\u6570\n\n\u8fd8\u6709\uff0c\u5728\u8bb0\u5f55\u4e2a\u6570\u7684\u65f6\u5019\u7528\u5230**\u5dee\u5206**\uff0c\u8f6c\u79fb\u4e2a\u6570\u7531\u5927\u5230\u5c0f\u9012\u63a8\u8f6c\u79fb\u5c31\u53ef\u4ee5\u8ba1\u6570\u4e86\uff0c\u5176\u4f59\u7684\u5c31\u662f\u9012\u5f52\u8f93\u51fa\u65b9\u6848\uff0c\u5927\u5bb6\u90fd\u4f1a\uff0c\u6ca1\u5fc5\u8981\u8bf4\n\n```c\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define int long long\nusing namespace std;\n\nint  f[60][69][5000];\nint g[60][50000],pos[60][60][5000];\nint street[60][60][5000];\nint ans[100];\nint lsh[B],tot,m,n; \nint num[60][50000],cnt,a[B],b[B],c[B];\n\nint LSH(int x) {return lower_bound(lsh+1,lsh+1+tot,x)-lsh;}\nvoid work()\n{\n\tsort(lsh+1,lsh+tot+1) ;\n\ttot = unique(lsh+1,lsh+1+tot)-lsh-1;\n\tfor (int i=1;i<=m;i++) c[i]=LSH(c[i]);\n\treturn;\n}\n\nvoid query(int l,int r)\n{\n\tfor (int i=1;i<=n;i++) for (int j=1;j<=tot;j++) g[i][j]=0;\n\tfor (int i=1;i<=m;i++)\tif (l<=a[i] && b[i]<=r) g[a[i]][c[i]]++,g[b[i]+1][c[i]]--;//\u5dee\u5206\u64cd\u4f5c\n\tfor (int i=1;i<=n;i++) for (int j=1;j<=tot;j++) g[i][j]+=g[i-1][j];//\u8f6c\u79fb\u7684\u539f\u6570\n\tfor (int i=1;i<=n;i++) for (int j=tot;j>=1;j--) g[i][j]+=g[i][j+1];//\u5f00\u59cb\u8f6c\u79fb \n\t\n\treturn;\n}\n\nvoid dfs(int l,int r,int k)\n{\n\tif (k>tot) return;\n\tif (l>r) return;\n\tk=street[l][r][k];\n\tans[pos[l][r][k]]=lsh[k];\n\tdfs(l,pos[l][r][k]-1,k), dfs(pos[l][r][k]+1,r,k);\n}\n\nmain()\n{\n\tint x,y,z,maxx=0;\n\tn=read(),m=read();\n\tfor (int i=1;i<=m;i++)\ta[i]=read(),b[i]=read(),lsh[++tot]=c[i]=read();\n\twork();\n\tfor (int len=1;len<=n;len++)\n\t\tfor (int i=1;i+len-1<=n;i++)\n\t\t{\n\t\t\tint j=i+len-1;\n\t\t\tquery(i,j);\n\t\t\tfor (int k=tot;k>=1;k--)\n\t\t\t{\t\n\t\t\t\tfor (int l=i;l<=j;l++)\n\t\t\t\t{\n\t\t\t\t\tint val=(l>i)?f[i][l-1][k]:0;\n\t\t\t\t\t\tval+=((l<j)?f[l+1][j][k] : 0)+lsh[k]*g[l][k];\n\t\t\t\t\tif (f[i][j][k]<=val)\n\t\t\t\t\t{\n\t\t\t\t\t\tf[i][j][k]=val;\n\t\t\t\t\t\tpos[i][j][k]=l;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (f[i][j][k]>=f[i][j][k+1]) street[i][j][k]=k; \n\t\t\t\telse f[i][j][k]=f[i][j][k+1],street[i][j][k]=street[i][j][k+1]; \n\t\t\t}\n\t\t}\n\tprintf(\"%lld\\n\",f[1][n][1]);\n\tdfs(1,n,1);\n\tfor (int i=1;i<=n;i++) printf(\"%lld \",ans[i]?ans[i]:1); \n}\n```",
        "postTime": 1620185356,
        "uid": 230808,
        "name": "Zxsoul",
        "ccfLevel": 4,
        "title": "P3592 [POI2015]MYJ"
    },
    {
        "content": "\u9996\u5148\uff0c\u53d1\u73b0 $p$ \u7684\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u6700\u4f18\u89e3\u7684\u4e00\u79cd\u60c5\u51b5\u80af\u5b9a\u90fd\u662f\u586b\u5165 $c$ \u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u3002\n\n\u53d1\u73b0\u6784\u9020\u4e00\u4e2a\u5e8f\u5217\uff0c\u5c31\u662f\u5efa\u7acb\u4e00\u9897\u7b1b\u5361\u5c14\u6811\uff0c\u8bbe $dp(l, r, k)$ \u8868\u793a\u533a\u95f4 $[l, r]$ \u6700\u5c0f\u503c\u4e3a $k$ \uff0c\u4e5f\u5c31\u662f $l$ \uff0c$r$ \u4e24\u8282\u70b9 LCA \u7684\u6743\u503c\u4e3a $k$ \u7684\u6700\u4f18\u89e3\u3002\n\n\u90a3\u4e48\u6709 \n\n$$\ndp(l, r, k) = \\max_{a, b\\ge k\\ l < i < r}\\{dp(l, i - 1, a) + dp(i + 1, r, b) + k\\times f(l, r, i, k)\\}\n$$\n\n\u5176\u4e2d $f(l, r, i, k)$ \u8868\u793a\u5de6\u7aef\u70b9\u5c5e\u4e8e $[l, i]$ \uff0c\u53f3\u7aef\u70b9\u5c5e\u4e8e $[i, r]$ \u7684\u4e14 $c \\ge k$ \u6240\u6709\u7ebf\u6bb5\u4e2a\u6570\u548c\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7b80\u5355\u5bb9\u65a5\u7b97\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u8bbe $g(l, r, k)$ \u8868\u793a $[l, r]$ \u533a\u95f4\u4e2d $c\\geq k$ \u7684\u7ebf\u6bb5\u4e2a\u6570\uff0c\u8fd9\u4e2a\u7b54\u6848\u7b49\u4e8e $g(l, r, k) - g(l, i - 1, k) - g(i + 1, r, k)$ \u3002\n\n\u505a\u4e00\u4e0b\u7b2c\u4e09\u7ef4\u524d\u7f00\u5904\u7406\uff0c\u8fd9\u4e00\u6bb5 DP \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n ^ 3 m)$ \u3002\n\n\u8003\u8651\u5982\u4f55\u8f93\u51fa\u65b9\u6848\uff0c\u53ea\u8981\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u6b21\u8f6c\u79fb\u65f6\u5019\u7684\u90a3\u4e2a\u6700\u4f18\u7684 $i$ \u548c $a, b$ \u5373\u53ef\uff0c\u7136\u540e\u5c31\u50cf\u4e00\u68f5\u6811\u4e00\u6837\u904d\u5386\u4e0b\u53bb\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define forn(i,s,t) for(register int i=(s); i<=(t); ++i)\n#define form(i,s,t) for(register int i=(s); i>=(t); --i)\n#define rep(i,s,t) for(register int i=(s); i<(t); ++i)\nusing namespace std;\ntypedef long long LL;\nconst int N = 52, M = 4e3 + 3;\nstruct node {\n\tint l, r, c;\n\tnode() {}\n\tnode(int _l, int _r, int _c) : l(_l), r(_r), c(_c) {}\n};\ninline bool trans(int& A, int B) {\n\treturn (A <= B) && (A = B, 1);\n}\nint n, m, Rn, a[M], b[M], c[M], rft[M], g[N][N][M], val[N][N][M];\nint dp[N][N][M]; node f[N][N][M];\nbasic_string<int> P[M];\nvoid dfs(int l, int r, int k) {\n\tif(l > r) return ;\n\tif(f[l][r][k].l) dfs(l, f[l][r][k].c - 1, f[l][r][k].l);\n\tprintf(\"%d \", rft[val[l][r][k]]);\n\tif(f[l][r][k].r) dfs(f[l][r][k].c + 1, r, f[l][r][k].r);\n}\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tforn(i,1,m) scanf(\"%d%d%d\", a + i, b + i, c + i), rft[i] = c[i];\n\tsort(rft + 1, rft + m + 1);\n\tRn = unique(rft + 1, rft + m + 1) - rft - 1;\n\tforn(i,1,m) c[i] = lower_bound(rft + 1, rft + Rn + 1, c[i]) - rft, P[c[i]] += i;\n\tforn(i, 1, n) forn(j, i, n) form(k,Rn,1) {\n\t\tg[i][j][k] += g[i][j][k + 1];\n\t\trep(l,0,P[k].size()) {\n\t\t\tstatic int v; v = P[k][l];\n\t\t\tg[i][j][k] += (i <= a[v] && b[v] <= j);\n\t\t}\n\t}\n\tforn(len, 1, n) for(register int l = 1, r = len; r <= n; ++l, ++r)\n\t\tform(k, Rn, 1) {\n\t\t\tdp[l][r][k] = dp[l][r][k + 1], f[l][r][k] = f[l][r][k + 1];\n\t\t\tval[l][r][k] = val[l][r][k + 1];\n\t\t\tforn(i, l, r) if(trans(dp[l][r][k], dp[l][i - 1][k] + dp[i + 1][r][k] + 1ll * rft[k] * (g[l][r][k] - g[l][i - 1][k] - g[i + 1][r][k])))\n\t\t\t\tf[l][r][k] = node(val[l][i - 1][k], val[i + 1][r][k], i), val[l][r][k] = k;\n\t\t}\n\tprintf(\"%d\\n\", dp[1][n][1]), dfs(1, n, 1);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1621773042,
        "uid": 223884,
        "name": "AxDea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\uff1a\u300cPOI2015\u300dMyjnie"
    }
]