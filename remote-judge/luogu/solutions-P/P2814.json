[
    {
        "content": "\u53d1\u4e00\u4e2a\u7b80\u5355\u7684\u9898\u89e3 \u7528stl\u7684map\u628a\u4ed6\u548c\u7236\u4eb2\u76f4\u63a5\u8fde\u8d77\u6765\n\n\u4e0d\u8981\u8f6c\u6210\u5e8f\u53f7\u518d\u505a\uff1a\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<map>\nusing namespace std;\nmap<string,string>p;\nstring find(string x)\n{\n    if(x!=p[x]) \n        p[x]=find(p[x]);\n    return  p[x];\n}\nstring s,s1;\nint main()\n{\n    char ch;\n    cin>>ch;\n    while(ch!='$')\n    {\n        cin>>s;\n        if(ch=='#')\n        {\n            s1=s;\n            if(p[s]==\"\") p[s]=s;\n        }\n        else if(ch=='+')\n            p[s]=s1;\n        else \n            cout<<s<<' '<<find(s)<<endl;    \n        cin>>ch;\n    }\n    return 0;\n}\n```",
        "postTime": 1482652889,
        "uid": 20338,
        "name": "zhmshitiancai",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "**\u770b\u6211\u7684\u65e0\u654c0ms\u4ee3\u7801\uff08\u4e0d\u7528map\uff01\uff01\uff01\uff09**\n\n\u7528map\u6620\u5c04\u662f\u5f88\u65b9\u4fbf\uff0c\u4f46\u6211\u5fd8\u8bb0\u600e\u4e48\u7528\u4e86= =\uff0c\u6240\u4ee5\u5c31\u8bd5\u4e86\u4e2a\u4e0d\u7528map\u7684\u4ee3\u7801\uff0c\u539f\u672c\u540e\u9762\u4e24\u4e2a\u70b9\u662f\u8d85\u65f6\u7684\uff0c\u4f46\u7a81\u7136\u53d1\u73b0\u8fd9\u4e2a\u641c\u7d22\u7684\u5faa\u73af\u53ef\u4ee5\u5206\u5f00\u5faa\u73af\uff0c\u56e0\u4e3a\u4e00\u822c\u60c5\u51b5\u662f\u5728\u8981\u641c\u7684\u4eba\u7684\u4e0a\u9762\uff0c\u6240\u4ee5\u5148\u5f80\u4e0a\u641c\uff0c\u6ca1\u6709\u518d\u641c\u4e0b\u9762\uff0c\u7136\u540e\u7adf\u71360ms\u591f\u4e86\uff08233\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint a[50010];//\u5e76\u67e5\u96c6\u7684\u8bb0\u5f55\u7236\u4eb2\u70b9\nchar b[50010][10];\nint find(int o)\n{\n    while(a[o]!=o)//\u5e76\u67e5\u96c6\u7684\u627e\u7236\u4eb2\uff0c\u56e0\u4e3a\u6211\u662f\u4e00\u4e2a\u4e00\u4e2a\u8bb0\u5f55\u4e0a\u6765\u7684\uff0c\u7136\u540e\u5c31\u61d2\u5f97\u7528\u538b\u7f29\u8def\u5f84\u4e86\uff08\u53cd\u6b630ms\uff0cAC\u5c31\u597d233\uff09\n        o=a[o];\n    return o;\n}\nint main()\n{\n    int i,j,n=0,s=0,k,p,u=0,l;\n    while(1)\n    {\n        n++;\n        scanf(\"%s\",&b[n]);//b[n][0]\u50a8\u5b58\u7c7b\u578b('+','$','?','#')\uff0c\u540e\u9762\u50a8\u5b58\u4eba\u540d\n        if(b[n][0]=='$')\n            break;\n        if(b[n][0]=='?')\n        {\n            if(u==0)\n                l=n-1;//l\u8bb0\u5f55\u4e00\u5171\u8f93\u5165\u7684\u4eba\u540d\u4e2a\u6570\n            if(u==0)\n                for(k=1;k<=l;k++)//\u5f00\u59cb\u4e00\u4e2a\u4e00\u4e2a\u641c\u8fc7\u53bb\n                {\n                    p=0;\n                    if(b[k][0]=='#')\n                    {\n                        for(j=k;j>=1;j--)//\u4e8c\u5206for\u5faa\u73af\uff0c\u56e0\u4e3a\u4e00\u822c\u60c5\u51b5\u5728\u4e0a\u9762\uff0c\u4f46\u6709\u4e9b\u7279\u6b8a\u7684\u5728\u4e0b\u9762\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u51cf\u65f6\u95f4\n                        {\n                            s=0;\n                            if(b[j][0]=='+')\n                            {\n                                for(u=1;u<=6;u++)\n                                    if(b[k][u]==b[j][u])\n                                        s++;\n                                if(s==6)\n                                {\n                                    a[k]=j;//\u628a\u641c\u5230\u7684\u4eba\u540d\u5bf9\u5e94\u4e0a\uff0c\u5c31\u662f\u6254\u5230\u4e00\u4e2a\u96c6\u5408\u91cc\n                                    p=1;\n                                    break;\n                                }\n                            }\n                        }\n                        if(p!=1)\n                            for(j=k;j<=l;j++)//\u5982\u679c\u4e0a\u9762\u6ca1\u641c\u5230\u5c31\u5f80\u4e0b\u641c\n                            {\n                                s=0;\n                                if(b[j][0]=='+')\n                                {\n                                    for(u=1;u<=6;u++)\n                                        if(b[k][u]==b[j][u])\n                                            s++;\n                                    if(s==6)\n                                    {\n                                        a[k]=j;//\u540c\u4e0a\n                                        break;\n                                    }\n                                }\n                            }\n                    }\n                    u=1;\n                }\n            p=0;\n            for(i=l;i>=1;i--)//\u4ece\u4e0b\u5f80\u4e0a\u641c\u95ee\u7684\u4eba\u540d\n            {\n                s=0;\n                if(p==1)\n                    break;\n                for(j=1;j<=6;j++)\n                    if(b[n][j]==b[i][j])\n                    {\n                        s++;\n                        if(s==6)\n                        {\n                            p=1;\n                            k=i;\n                            break;\n                        }\n                    }\n            }\n            for(i=1;i<=6;i++)\n                printf(\"%c\",b[n][i]);\n            printf(\" \");\n            for(i=1;i<=6;i++)\n                printf(\"%c\",b[find(k)][i]);\n            printf(\"\\n\");\n        }\n        a[n]=n;//\u4e00\u8fb9\u8f93\u5165\u4e00\u822c\u521d\u59cb\u5316\u5e76\u67e5\u96c6\n        if(b[n][0]=='+')//\u628a\u513f\u5b50\u548c\u7236\u4eb2\u5bf9\u5e94\u8d77\u6765\n            for(j=n;j>=1;j--)\n                if(b[j][0]=='#')\n                {\n                    a[n]=j;//\u5e76\u67e5\u96c6\n                    break;\n                }\n    }\n    return 0;\n}\n```",
        "postTime": 1506597901,
        "uid": 60181,
        "name": "Iowa_BattleShip",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "# \u975e\u6b63\u89e3\uff0c\u66b4\u529b\u7b97\u6cd5\n#### \u770b\u5230\u697c\u4e0a\u5404\u4f4d\u5927\u4f6c\u7528map\uff0c\u672c\u849f\u84bb\u4e0d\u7981\u745f\u745f\u53d1\u6296\u3002    \n\u8fd9\u9898\u5f88\u660e\u663e\u662f\u7528\u5e76\u67e5\u96c6\u505a\uff0c\u7531\u4e8e\u540d\u5b57\u7684\u957f\u5ea6\u6709\u4e14\u53ea\u67096\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u5b57\u7b26\u6570\u7ec4\u5b58\u653e\u5e76\u8fdb\u884c\u67e5\u627e\u3002\u53ea\u9700\u8981\u5b58\u653e\u540d\u5b57\uff0c\u67e5\u627e\u540d\u5b57\uff0c\u67e5\u627e\u7956\u5148\u5373\u53ef\u3002   \n\u67e5\u627e\u662f\u7528for\u5faa\u73af\u5b9e\u73b0\u7684\uff0c\u4f46\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6ca1\u6709TLE\u3002  \n### \u6ce8\u91ca\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```\n#include <cstdio>\n#include <iostream>\n#include<algorithm>\nusing namespace std;\nstruct ren {\n\tchar name[7];//\u8fd9\u4e2a\u7ed3\u6784\u4f53\u53ef\u4ee5\u5f00\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7528\u6765\u5b58\u653e\u540d\u5b57\n} r[50005];\nint fa[50005];//\u8bb0\u5f55\u7236\u4eb2\u8282\u70b9\nchar k[7];//\u7528\u6765\u6682\u65f6\u5b58\u653e\u540d\u5b57\nint find(int f) {//\u67e5\u627e\u7236\u4eb2\u8282\u70b9\n\tif(fa[f]==f) {\n\t\treturn f;\n\t} else {\n\t\treturn fa[f]=find(fa[f]);//\u8def\u5f84\u538b\u7f29\n\t}\n}\nint main() {\n\tchar a;//\u7528\u6765\u5b58\u653e#\u3001+\u548c\uff1f\n\tint f,cnt=0;\n\tfor(int i=1; i<=10005; i++) {\n\t\tfa[i]=i;//\u521d\u59cb\u5316\n\t}\n\twhile(cin>>a) {\n\t\tif(a=='$') {\n\t\t\tbreak;//\u7ed3\u675f\u7b26\u9000\u51fa\u5faa\u73af\n\t\t}\n\t\tif(a=='#') {//\u5982\u679c\u662f\u7236\u4eb2\u8282\u70b9\n\t\t\tscanf(\"%s\",k);//\u628a\u540d\u5b57\u6682\u65f6\u5b58\u8fdbk\u6570\u7ec4\n\t\t\tint u=0;\n\t\t\tfor(int i=1; i<=cnt; i++) {\n\t\t\t\tint t=0;\n\t\t\t\tfor(int j=0; j<=5; j++) {\n\t\t\t\t\tif(k[j]!=r[i].name[j]) {\n\t\t\t\t\t\tt=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}//\u67e5\u627e\u540d\u5b57\u662f\u5426\u5b58\u5728\n\t\t\t\tif(t==0) {\n\t\t\t\t\tu=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}//\u5982\u679c\u540d\u5b57\u5df2\u5b58\u5728\uff0c\u6807\u8bb0\u4f4d\u7f6e\n\t\t\t}\n\t\t\tif(u==0) {//\u5982\u679c\u4e0d\u5b58\u5728\n\t\t\t\tcnt++;//\u6570\u91cf\u52a0\u4e00\n\t\t\t\tf=cnt;//\u6807\u8bb0\u4f4d\u7f6e\n\t\t\t\tfor(int j=0; j<=5; j++) {\n\t\t\t\t\tr[cnt].name[j]=k[j];\n\t\t\t\t}//\u5b58\u5165\u540d\u5b57\n\t\t\t\tfa[cnt]=find(f);//\u67e5\u627e\u5b83\u7684\u7236\u4eb2\n\t\t\t} else {\n\t\t\t\tf=u;//\u6807\u8bb0\u4f4d\u7f6e\n\t\t\t\tfa[u]=find(f);//\u67e5\u627e\u7236\u4eb2\n\t\t\t}\n\t\t}\n\t\tif(a=='+') {//\u5982\u679c\u662f\u5b69\u5b50\u8282\u70b9\n\t\t\tscanf(\"%s\",k);//\u8bfb\u5165\n\t\t\tint u=0;\n\t\t\tfor(int i=1; i<=cnt; i++) {\n\t\t\t\tint t=0;\n\t\t\t\tfor(int j=0; j<=5; j++) {\n\t\t\t\t\tif(k[j]!=r[i].name[j]) {\n\t\t\t\t\t\tt=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(t==0) {\n\t\t\t\t\tu=i;\n\t\t\t\t\tfor(int j=0; j<=5; j++) {\n\t\t\t\t\t\tr[i].name[j]=k[j];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}//\u67e5\u627e\u662f\u5426\u5b58\u5728\u8be5\u540d\u5b57\n\t\t\tif(u==0) {\n\t\t\t\tcnt++;\n\t\t\t\tfor(int j=0; j<=5; j++) {\n\t\t\t\t\tr[cnt].name[j]=k[j];\n\t\t\t\t}//\u628a\u540d\u5b57\u5b58\u8fdb\u6570\u7ec4\n\t\t\t\tfa[cnt]=find(f);//\u5408\u5e76\n\t\t\t} else {\n\t\t\t\tfa[u]=find(f);//\u5408\u5e76\n\t\t\t}\n\t\t}\n\t\tif(a=='?') {//\u5982\u679c\u662f\u67e5\u627e\n\t\t\tscanf(\"%s\",k);\n\t\t\tint u;\n\t\t\tfor(int i=1; i<=cnt; i++) {\n\t\t\t\tint t=0;\n\t\t\t\tfor(int j=0; j<=5; j++) {\n\t\t\t\t\tif(k[j]!=r[i].name[j]) {\n\t\t\t\t\t\tt=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}//\u67e5\u627e\u4f4d\u7f6e\n\t\t\t\tif(t==0) {\n\t\t\t\t\tu=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%s\",k);//\u8f93\u51fa\u8be5\u540d\u5b57\n\t\t\tprintf(\" \");\n\t\t\tprintf(\"%s\",r[find(u)].name);//\u8f93\u51fa\u5b83\u7684\u7956\u5148\uff0c\u56e0\u4e3a\u5b83\u7684\u7956\u5148\u548c\u5b83\u7684\u7236\u4eb2\u53ef\u80fd\u6ca1\u6709\u8fde\u8d77\u6765\uff0c\u6240\u4ee5\u8fd8\u8981\u67e5\u627e\u4e00\u6b21\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n#### \u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u6c42\u8fc7\uff01",
        "postTime": 1569744143,
        "uid": 206716,
        "name": "\u6d69\u701a\u661f\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "# \u770b\u8fd9\u4e48\u591adalao\u5199\u5e76\u67e5\u96c6\uff0c\u6211\u5fcd\u4e0d\u4f4f\u6253\u4e86\u4e2a\u66b4\u529b\u3002\n\n\u53ef\u4ee5\u5148\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\uff1b\n\n##### 1.\u5982\u679c\u662f\u201c#\u201d\u5c31\u8bb0\u5f55\u4e0b\u5b83\u7684\u7f16\u53f7\uff0c\n\n##### \u5f00\u59cb\u4e00\u6b21\u641c\u7d22\uff08\u672c\u849f\u84bb\u7528\u7684\u6df1\u641c\uff09\uff0c\u5982\u679c\u4e4b\u524d\u51fa\u73b0\u8fc7\uff0c\u90a3\u5c31\u8bb0\u5f55\u4ed6\u7684pre\u3010\u3011\uff08\u7956\u7236\uff09\u8282\u70b9\u7684\u7f16\u53f7\uff08\u66ff\u6362\u6389\u4e4b\u524d\u7684\uff09\uff1b\n\n##### 2.\u5982\u679c\u662f\u201c+\u201d\u5c31\u5c06\u4ed6\u7684\u7236\u4eb2\u8282\u70b9\u7f16\u53f7\u8bbe\u4e3a\u4e4b\u524d\u8bb0\u5f55\u7684\u7f16\u53f7\uff0c\n\n##### \u5f00\u59cb\u4e00\u6b21\u641c\u7d22\uff0c\u5982\u679c\u4e4b\u524d\u51fa\u73b0\u8fc7\uff0c\u90a3\u5c31\u8bf4\u660e\u4ed6\u4e4b\u524d\u662f\u522b\u4eba\u7684\u7236\u4eb2\u8282\u70b9\uff08\u6ca1\u6709\u7236\u4eb2\uff09\uff0c\u5c31\u628a\u4ed6\u7684\u7236\u4eb2\u8bbe\u4e3a\u4e4b\u524d\u8bb0\u5f55\u7684\u7f16\u53f7\uff1b\n\n##### 3.\u5982\u679c\u662f\u201c\uff1f\u201d\u628a\u4ed6\u8f93\u5165\u7684\u8f93\u51fa\u4e00\u904d\uff0c\n\n##### \u518d\u5f00\u59cb\u4e00\u6b21\u641c\u7d22\uff0c\u628a\u4ed6\u7b2c\u4e00\u6b21\uff08\u7b2c\u51e0\u6b21\u90fd\u884c\uff09\u51fa\u73b0\u7684\u7f16\u53f7\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u5f00\u59cb\u5bfb\u627e\u5230\u4ed6\u7684\u7956\u5148\u8f93\u51fa\u5373\u53ef\uff1b\n\n\u5b9e\u9645\u4e0a\u6211\u7684\u4ee3\u7801\u4e00\u5f00\u59cbTLE\u4e86\u4e24\u4e2a\u70b9\uff0c\u4e8e\u662f\u628acin\u6539\u6210\u4e86getchar\uff08\uff09\n### \u52c9\u5f3a\u80fd\u8fc7\uff0c\u4e0b\u9762\u4ea4\u4ee3\u7801\uff08~~\u60f3\u8981\u5b8c\u7f8e\u4ee3\u7801\u53bb\u522b\u7684\u5730\u65b9\u5427\u3002\u3002~~\uff09\n\n\n------------\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar a[50001][6];//\u8bb0\u5f55\u6bcf\u4e2a\u4eba\u7684\u540d\u5b57\nint pre[50001];//\u8bb0\u5f55\u6bcf\u4e2a\u4eba\u7684\u7238\u7238\u6216\u7956\u7236\nbool ss(int c,int d){//\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u627e\u7b2c\u4e00\u6b21\u51fa\u73b0\n    for(int i=0;i<6;i++){\n        if(a[c][i]!=a[d][i])\n            return 0;\n    }\n    return 1;\n}\nint main(){\n    char g;\n    int e,e2,t=0;\n    for(int i=1;;i++){\n        cin>>g;\n        if(g=='$')//\u5982\u679c\u662f'$'\u5c31\u7ed3\u675f\u5566\n            return 0;\t\n        if(g=='#'){\n            t++;\n            for(int j=0;j<6;j++)//\u8f93\u5165\u5b57\u7b26\u4e32(\u8fd9\u6837\u5e94\u8be5\u6bd4scanf\u8fd8\u5feb,\u4f46\u6211\u4e0d\u6e05\u695a)\n\t\ta[i][j]=getchar();\n            e=i;//\u8bb0\u5f55\u7238\u7238\n            for(int j=1;j<=t;j++){//\u6df1\u641c\u627e\u7b2c\u4e00\u6b21\u51fa\u73b0\n                if(ss(j,i)==1){\n                    pre[i]=pre[j];\n                    e=j;//\u5982\u679c\u6709\u7956\u7236\u5c31\u66f4\u65b0\n                }\n            }\n        }\n        if(g=='+'){\n            t++;\n            for(int j=0;j<6;j++)//\u8f93\u5165\u5b57\u7b26\u4e32\n\t\ta[i][j]=getchar();\n            pre[i]=e;//\u8bb0\u5f55\u7238\u7238\n            for(int j=1;j<=t;j++){//\u6df1\u641c\u627e\u7b2c\u4e00\u6b21\u51fa\u73b0\n                if(ss(j,i)==1){\n                    pre[j]=pre[i];/\u5982\u679c\u6709\u7238\u7238\u5c31\u66f4\u65b0\n                }\n            }\n            \n        }\n        if(g=='?'){\n            for(int j=0;j<6;j++)//\u8f93\u5165\u5b57\u7b26\u4e32\n\t\ta[i][j]=getchar();\n            for(int j=1;j<=t;j++){//\u6df1\u641c\u627e\u7b2c\u4e00\u6b21\u51fa\u73b0\n                if(ss(j,i)==1){\n                    e2=j;\n                    break;\n                }\n            }\n            for(int j=0;j<6;j++)//\u8f93\u51fa\u4ed6\u81ea\u5df1\n\t\tputchar(a[i][j]);\n\t    putchar(' ');\n            while(pre[e2]!=0)//\u627e\u7956\u5148\n                e2=pre[e2];\n            for(int j=0;j<6;j++)//\u8f93\u51fa\u7956\u5148\n\t\t\t\tputchar(a[e2][j]);\n\t\t\tputchar('\\n');\n        }\n    }\n    return 0;\n}\n```\n\n\n------------\n\n\u672c\u849f\u84bb\u6253\u7684\u7eaf\u66b4\u529b\u5e0c\u671b\u5404\u4f4ddalao\u559c\u6b22~~(\u4e0d\u559c\u6b22\u4e5f\u4e0d\u8981\u55b7\u554a~~)~~\n",
        "postTime": 1554864580,
        "uid": 192006,
        "name": "liuzitong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\u770b\u4e86\u697c\u4e0b\u5404\u4f4d\u5927\u4f6c\u7684stl\u6a21\u677fmap\u548c\u54c8\u5e0c\u8868\uff0c\u672c\u849f\u84bb\u611f\u5230\u5f88\u7591\u60d1\u4e0d\u89e3\uff08\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u592a\u6c34\uff09\uff0c\u6240\u4ee5\u6211\u7684\u65b9\u6cd5\u662f\u4e00\u4e2ac\u8bed\u8a00\u7684\u6807\u51c6\u7b97\u6cd5\uff08\u81ea\u5df1\u8ba4\u4e3a\uff09\u3002\n\n\u5728\u8fd9\u91cc\u5411\u5927\u5bb6\u63a8\u8350\u51e0\u9053\u5e76\u67e5\u96c6\u6c34\u9898\uff0c\u53ef\u4ee5\u8ba9\u4f60\u66f4\u4e86\u89e3\u5e76\u67e5\u96c6\u3002\u7f51\u5740\u5982\u4e0b\uff1a\n\nluogu P3367\uff08\u6807\u51c6\u6a21\u677f\uff09[luogu P3367\uff08\u6807\u51c6\u5e76\u67e5\u96c6\u6a21\u677f\uff09](https://www.luogu.org/problemnew/show/P3367)\n\nluogu P1551\uff08\u4eb2\u621a\uff09[luogu P1551\uff08\u4eb2\u621a\uff0c\u4e0e\u6a21\u677f\u5dee\u4e0d\u591a\uff0c\u53ef\u4ee5\u5f53\u5b9e\u8df5\u64cd\u4f5c\uff09](https://www.luogu.org/problemnew/show/P1551)\n\nluogu P1892\uff08\u56e2\u4f19\uff09[luogu P1892\uff08\u56e2\u4f19\uff0c\u7279\u6b8a\u7684\u5e76\u67e5\u96c6\uff0c\u6709\u670b\u53cb\u548c\u654c\u4eba\u4e4b\u5206\uff09](https://www.luogu.org/problemnew/show/P1892)\n\n\u8fd9\u9053\u9898\u5c31\u662f\u5e76\u67e5\u96c6\uff0c\u5982\u679c\u6ca1\u6709\u5b57\u7b26\u4e32\u7684\u8bfb\u5165\uff0c\u540d\u5b57\u90fd\u662f\u6570\u5b57\u7684\u8bdd\uff0c\u5c31\u662f\u4e2a\u6807\u51c6\u6a21\u677f\uff0c\u53ef\u80fd\u6bd4P1892\u8fd8\u7b80\u5355\u4e00\u4e9b\uff0c\u53ef\u662f\u73b0\u5728\u591a\u4e86\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u8ba9\u8fd9\u4e9b\u540d\u5b57\u53d8\u6210\u6570\u5b57\u5462\uff0c\u6211\u4eec\u7ed9\u6bcf\u4e2a\u4eba\u90fd\u7ed9\u4e88\u4e00\u4e2a\u7f16\u53f7\uff0c\u53ea\u6709\u8f93\u51fa\u65f6\u6309\u540d\u5b57\u7528\uff0c\u8fd9\u6837\u8fd9\u9053\u9898\u4e0d\u5c31\u6210\u4e86\u4e00\u9053\u6a21\u677f\u9898\u5417\uff1f\u5728\u8fd9\u91cc\u5199\u4e00\u4e0b\u6a21\u677f\uff0c\u63d0\u4f9b\u5e76\u67e5\u96c6\u57fa\u672c\u601d\u8def\u3002\n \npoj2524([poj 2524 Ubiquitous Religions\uff08\u65e0\u6240\u4e0d\u5728\u7684\u5b97\u6559\uff09](http://poj.org/problem?id=2524))\n```cpp\n#include<stdio.h> //poj 2524\n#include<string.h>\nint x[50001],n;\nint getx(int a)\n{\n\tif(x[a]==a) return a;\t//\u56e0\u4e3a\u521d\u59cb\u5316x[i]=i,\u8868\u793a\u76ee\u524d\u4ed6\u548c\u522b\u4eba\u7684\u5b97\u6559\u4fe1\u7684\u4e0d\u4e00\u6837\u6216\u522b\u7684\u4eba\u4fe1\u7684\u6559\u548c\u4ed6\u4e00\u6837\uff0c\u800c\u4ed6\u53c8\u662f\u6839\u8282\u70b9 \n\tx[a]=getx(x[a]);\t//\u6bcf\u4e00\u6b65\u90fd\u628ax[a]\u76ee\u524d\u5728\u7684\u6570\u7684\u6839\u8282\u70b9\u4fe1\u7684\u6559\u5b58\u5165x\u6570\u7ec4\u91cc \n\treturn x[a];\t//\u8fd4\u56dex[a] \n}\nint main()\n{\n\tint i,j,k,m,xx=0,ans;\n\twhile(1)\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tif(n==0&&m==0) break;\n\t\tans=n;\t//\u4e00\u5f00\u59cb\u4e00\u5171\u6709n\u4e2a\u5b97\u6559 \n\t\tfor(i=1;i<=n;i++)\t//\u521d\u59cb\u5316\uff0c\u6bcf\u4e2a\u4eba\u4e00\u5f00\u59cb\u7684\u5b97\u6559\u4fe1\u4ef0\u5c31\u662fi\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u3002 \n\t\t\tx[i]=i;\n\t\tfor(i=1;i<=m;i++)\n\t\t{\n\t\t\tint a,b;\n\t\t\tscanf(\"%d%d\",&a,&b);\t//\u8868\u793aa\u548cb\u4fe1\u7684\u5b97\u6559\u662f\u4e00\u6837\u7684 \n\t\t\tint xa=getx(a),xb=getx(b);\t//\u627e\u4e00\u4e0ba\u548cb\u76ee\u524d\u7684\u5b97\u6559\u4fe1\u4ef0 \n\t\t\tif(xa!=xb)\t//\u5982\u679c\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u4fe1\u4ef0\u76f8\u540c\u5c31\u8868\u660e\u5b83\u4eec\u5728\u4e4b\u524d\u5df2\u7ecfans--\u4e86\uff0c\u4e0d\u7528\u518d\u51cf\u4e86 \n\t\t\t{\n\t\t\t\tx[xb]=xa;\t//\u5c06xa\u4e0exb\u5408\u5e76 \n\t\t\t\tans--;\t//\u6bcf\u6709\u4e24\u4e2a\u4eba\u4fe1\u4ef0\u7684\u5b97\u6559\u76f8\u540c\u5b97\u6559\u7684\u4e2a\u6570\u5c31\u51cf\u5c11\u4e00\u4e2a \n\t\t\t}\n\t\t}\n\t\tprintf(\"Case %d: %d\\n\",++xx,ans);\n\t}\n\treturn 0;\t\n}\n```\n\u8fd9\u5c31\u662f\u5e76\u67e5\u96c6\u6a21\u677f\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u5148\u8fdb\u884c\u8bfb\u5165\uff0c\u7136\u540e\u7ed9\u6bcf\u4e2a\u8bfb\u5165\u7684\u6570\u7ed9\u4e00\u4e2a\u7f16\u53f7\uff0c\u4f9d\u6b21\u52a0\u4e0b\u53bb\u5c31\u884c\u4e86\uff0c\u4f46\u662f\u8981\u6ce8\u610f\uff0c\u5982\u679c\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\u4e0e\u4e4b\u524d\u7684\u67d0\u4e00\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u4f7f\u7528\u4f9d\u6b21\u52a0\u4e0b\u53bb\u7684\u7f16\u53f7\u4e86\uff0c\u8981\u4f7f\u7528\u4e4b\u524d\u7684\u7f16\u53f7\uff0c\u6240\u4ee5\u8fd8\u8981\u679a\u4e3e\u524d\u9762\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\n```cpp\n#include<stdio.h>\n#include<string.h>\nint fa[50001],num[50001];\nchar names[50001][7];\nint get(int x)\t//\u4e4b\u524dpoj 2524\u91cc\u89e3\u91ca\u8fc7\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u89e3\u91ca\u4e86\n{\n    if(fa[x]!=x) fa[x]=get(fa[x]);\n    return fa[x];\n}\nint main()\n{\n    char ch;\n    int i,t,n=0,tn,j;\n    for(i=1;i<=50000;i++) fa[i]=i;\t//\u521d\u59cb\u5316\uff0c\u6bcf\u4e2a\u4eba\u4e00\u5f00\u59cb\u7684\u7956\u5148\u5c31\u662f\u4ed6\u81ea\u5df1\n    scanf(\"%c\",&ch);\t//\u6211\u662f\u5b57\u7b26\u4e0e\u5b57\u7b26\u4e32\u5206\u5f00\u8bfb\u7684\n    while(ch!='$')\n    {\n        scanf(\"%s\",names[++n]+1);\n        num[n]=n;\t//\u5c06n\u7684\u503c\u8d4b\u503c\u7ed9num[n]\n        tn=n;\t//\u6e38\u6807\uff0c\u8868\u793a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u7f16\u53f7\uff0c\u4e00\u5f00\u59cb\u5c31\u662fn\n        for(i=1;i<n;i++)\t//\u679a\u4e3e\u4e4b\u524d\u7684\u6240\u6709\u5b57\u7b26\u4e32\n        {\n        \tfor(j=1;j<=6;j++)\t//\u679a\u4e3e\u540d\u5b57\u76846\u4e2a\u5b57\u6bcd\n        \t\tif(names[i][j]!=names[n][j])\t//\u5982\u679c\u4e0d\u76f8\u7b49\u5219\u76f4\u63a5\u8df3\u51fa\u5faa\u73af\n        \t\t\tbreak;\n\t\t\tif(j>6)\t//\u8bf4\u660e6\u4e2a\u5b57\u6bcd\u90fd\u76f8\u7b49\n\t\t\t{\n\t\t\t\ttn=i;\t//\u5c06\u6e38\u6807\u6307\u5411i\n\t\t\t\tbreak;\t//\u8df3\u51fa\u5faa\u73af\n\t\t\t}\n\t\t}\n        if(ch=='#')\t//\u8bf4\u660e\u662f\u7236\u4eb2\n        \t\u2026\u2026\n        else if(ch=='+')\t//\u5b50\u5973\n        \t\u2026\u2026\n        else\t//\u8be2\u95ee\n            \u2026\u2026\n        scanf(\"\\n%c\",&ch);\n    }\n    return 0;\n}\n```\n\u4e4b\u540e\u5982\u679c\u9047\u5230\u7684\u662f\u2018#\u2019\u5c31\u8bf4\u660e\u8fd9\u662f\u4e2a\u7236\u8282\u70b9\uff0c\u5c06\u7236\u8282\u70b9\u7684\u7f16\u53f7\u4fdd\u5b58\uff0c\u540e\u9762\u76f4\u5230\u4e0b\u4e00\u4e2a\u7236\u8282\u70b9\u65f6\u505a\u6539\u53d8\u3002\u5982\u679c\u9047\u5230\u7684\u662f\u2018+\u2019\u5c31\u5c06\u5b83\u4e0e\u7236\u8282\u70b9\u5408\u5e76\uff0c\u8be2\u95ee\u65f6\u5148\u8f93\u51fa\u539f\u672c\u5b57\u7b26\u4e32\uff0c\u518d\u8f93\u51fa\u7a7a\u683c\uff0c\u6700\u540e\u627e\u5230\u7956\u5148\u7684\u7f16\u53f7\uff0c\u8f93\u51fa\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nif(ch=='#')\t//\u8bf4\u660e\u662f\u7236\u4eb2\n\tfnum=num[tn];\t//fnum\u8868\u793a\u7236\u8282\u70b9\u7684\u7f16\u53f7\nelse if(ch=='+')\t//\u5b50\u5973\n\ta[get(num[tn])]=get(fnum);\t//\u5c06num[tn]\u7684\u7956\u5148\u4e0efnum\u7684\u7956\u5148\u5408\u5e76\nelse\t//\u8be2\u95ee\n{\n  \tprintf(\"%s\",names[tn]+1);\t//\u5148\u8f93\u51fa\u8be2\u95ee\u4eba\u7684\u540d\u5b57\n  \tprintf(\" \");\t//\u8f93\u51fa\u7a7a\u683c\n  \tint fn=get(num[tn]);\t//\u627e\u5230\u8be2\u95ee\u4eba\u7956\u5148\u7684\u7f16\u53f7\n  \tprintf(\"%s\",names[fn]+1);\t//\u8f93\u51fa\u7956\u5148\u7684\u540d\u5b57\n  \tprintf(\"\\n\");\n}\n```\n\u5b8c\u6574AC\u4ee3\u7801\u5982\u4e0b\uff08\u65e0\u6ce8\u91ca\uff09\uff1a\n```cpp\n#include<stdio.h>\n#include<string.h>\nint fa[50001],num[50001];\nchar names[50001][7];\nint get(int x)\n{\n    if(fa[x]!=x) fa[x]=get(fa[x]);\n    return fa[x];\n}\nint main()\n{\n    char ch;\n    int i,t,n=0,tn,j;\n    for(i=1;i<=50000;i++) fa[i]=i;\n    scanf(\"%c\",&ch);\n    while(ch!='$')\n    {\n    \tint fnum;\n        scanf(\"%s\",names[++n]+1);\n        num[n]=n;\n        tn=n;\n        for(i=1;i<n;i++)\n        {\n        \tfor(j=1;j<=6;j++)\n        \t\tif(names[i][j]!=names[n][j])\n        \t\t\tbreak;\n\t\t\tif(j>6)\n\t\t\t{\n\t\t\t\ttn=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n        if(ch=='#')\n        \tfnum=num[tn];\n        else if(ch=='+')\n        {\n        \tfa[get(num[tn])]=get(fnum);\n\t\t}\n        else\n        {\n            printf(\"%s\",names[tn]+1);\n            printf(\" \");\n            int fn=get(num[tn]);\n            printf(\"%s\",names[fn]+1);\n            printf(\"\\n\");\n        }\n        scanf(\"\\n%c\",&ch);\n    }\n    return 0;\n}\n```",
        "postTime": 1531672935,
        "uid": 70418,
        "name": "f\u03b1ns",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\u81ea\u4ece\u6709\u4e86STL\u4ee5\u540e\uff0cC++\u515a\u597d\u50cf\u8d8a\u6765\u8d8a\u61d2\u4e86\uff0c\u4e00\u7ffb\u9898\u89e3\uff0c\u4e00\u547c\u767e\u5e94\u5730\u5168\u662f\u7528map\u7684\u554a\u3002\u7136\u800c\u849f\u84bb\u5e76\u4e0d\u7cbe\u901a\uff0c\u53ea\u80fd\u5199\u4e00\u4e2a\u5f31\u5f31\u7684hash\u6765\u819c\u62dc\u5927\u795e\uff08~~\u4e5f\u7b97\u662f\u7ed9P\u515a\u4e00\u4e2a\u5b89\u6170\u5427~~\uff09\n\n\u5e76\u67e5\u96c6\u4e5f\u5c31\u4e0d\u7528\u8bb2\u4e86\uff0c\u81f3\u4e8ehash\uff0c\u8bf7\u770b\u4ee3\u7801\u3002\n```cpp\n#include <cstdio>\n#define Mod 1999997\nclass String{\n\tprotected:\n\t\tchar c[7];\n\t\tint len;\n\t\tint hash_num;\n\tpublic:\n\t\tString(){\n\t\t\tc[0]='?';\n\t\t}\n\t\tchar read(){\n\t\t\tlen=0;\n\t\t\tc[0]=getchar();\n\t\t\twhile((c[0]<'A'||c[0]>'Z')&&(c[0]<'a'||c[0]>'z')){\n\t\t\t\tc[0]=getchar();\n\t\t\t}\n\t\t\twhile((c[len]>='A'&&c[len]<='Z')||(c[len]>='a'&&c[len]<='z')){\n\t\t\t\tc[++len]=getchar();\n\t\t\t}\n\t\t\thash_num=0;\n\t\t\tfor(int i=1;i<len;i++){\n\t\t\t\tif(c[i]>='A'&&c[i]<='Z'){\n\t\t\t\t\thash_num=hash_num*52+c[i]-'A'+1;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\thash_num=hash_num*52+c[i]-'a'+28;\n\t\t\t\t}\n\t\t\t\thash_num%=Mod;\n\t\t\t}//\u8bfb\u5165\u65f6\u987a\u4fbf\u8ba1\u7b97hash\n\t\t\treturn c[len];\n\t\t}\n\t\tint &hash(){\n\t\t\treturn hash_num;\n\t\t}\n\t\tbool empty(){\n\t\t\treturn c[0]=='?';\n\t\t}\n\t\tfriend bool operator !=(String a,String b){\n\t\t\tif(a.len!=b.len){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tfor(int i=0;i<a.len;i++){\n\t\t\t\tif(a.c[i]!=b.c[i]){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t\tvoid print(){\n\t\t\tfor(int i=0;i<len;i++){\n\t\t\t\tputchar(c[i]);\n\t\t\t}\n\t\t}\n};\nint father[2000005];\nString Hash[2000005];\nint find(int x){//\u5e76\u67e5\u96c6\u6a21\u677f\n\tif(father[x]==x){\n\t\treturn x;\n\t}\n\treturn father[x]=find(father[x]);\n}\nvoid merge(int x,int y){\n\tint fa_x=find(x),fa_y=find(y);\n\tif(fa_x==fa_y){\n\t\treturn;\n\t}\n\tfather[fa_y]=fa_x;\n}\nint main(){\n\tfor(int i=0;i<Mod;i++){\n\t\tfather[i]=i;\n\t}\n\tString name;\n\tchar c;\n\tc=getchar();\n\twhile(c!='#'&&c!='+'&&c!='$'&&c!='?'){\n\t\tc=getchar();\n\t}\n\tint now_fa;\n\twhile(c!='$'){\n\t\tif(c=='#'){\n\t\t\tc=name.read();\n\t\t\twhile(!Hash[name.hash()].empty()&&Hash[name.hash()]!=name){\n\t\t\t\tname.hash()=name.hash()*3+1;\n\t\t\t\tname.hash()%=Mod;//\u5904\u7406\u51b2\u7a81\n\t\t\t}\n\t\t\tif(Hash[name.hash()].empty()){\n\t\t\t\tHash[name.hash()]=name;\n\t\t\t}\n\t\t\tnow_fa=name.hash();\n\t\t}\n\t\telse if(c=='+'){\n\t\t\tc=name.read();\n\t\t\twhile(!Hash[name.hash()].empty()&&Hash[name.hash()]!=name){\n\t\t\t\tname.hash()=name.hash()*3+1;\n\t\t\t\tname.hash()%=Mod;\n\t\t\t}\n\t\t\tif(Hash[name.hash()].empty()){\n\t\t\t\tHash[name.hash()]=name;\n\t\t\t}\n\t\t\tmerge(now_fa,name.hash());\n\t\t}\n\t\telse{\n\t\t\tc=name.read();\n\t\t\tname.print();\n\t\t\tputchar(' ');\n\t\t\twhile(Hash[name.hash()]!=name){\n\t\t\t\tname.hash()=name.hash()*3+1;\n\t\t\t\tname.hash()%=Mod;\n\t\t\t}\n\t\t\tHash[find(name.hash())].print();\n\t\t\tputs(\"\");\n\t\t}\n\t\twhile(c!='#'&&c!='+'&&c!='?'&&c!='$'){\n\t\t\tc=getchar();\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\u672c\u4eba\u5f88\u849f\u84bb\uff0c\u4ee3\u7801\u5e0c\u671b\u5404\u4f4d\u5927\u4f6c\u52ff\u55b7",
        "postTime": 1521560221,
        "uid": 33362,
        "name": "Suiseiseki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "# map + \u6a21\u62df\n### \u5f31\u5f31\u7684\u8bf4\u4e00\u53e5\uff1amap\u771f\u9999\uff1b\n## \u5207\u5165\u6b63\u9898\uff1a\n### \u672c\u9898\u6c42\u7684\u662f\u81ea\u5df1\u7684\u6700\u7238\u7238\u7684\u7956\u5148\uff0c\u6240\u4ee5\uff0c\u6211\u5148\u60f3\u5230\u5e76\u67e5\u96c6\uff1b\n### \u4f46\u662f\u770b\u5b8c\u6837\u4f8b\u4e00\u8138\u61f5\u903c\uff0c\n### \u6240\u4ee5\uff0c\u5c31\u50cf\u7528\u7ed3\u6784\u4f53\u6253\u5305\u4e00\u4e9b\u4e1c\u897f\uff1b\n### \u76ee\u7684\u5417  ~~emmmmmmm\u6a21\u62df\u94fe\u8868~~\n### \u90a3\u7ed3\u6784\u4f53\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\uff1a\n```cpp\nstruct node {\n\tstring s; // \u540d\u5b57\n\tint fa,id;\n    // \u6b64\u4eba\u7684\u7238\u7238\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4e0b\u6807\uff0c\u548c\u81ea\u5df1\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4e0b\u6807\n\tchar isfa; // \u5b58\u662f\u7238\u7238\u8fd8\u662f\u513f\u5b50\n}tag[N];\nmap<string,int> q;\n```\n### \u5f53\u7136\uff0c\u7528map\u5f62\u6210\u4e00\u4e2a\u6620\u5c04 \u5c06string\u6620\u5c04\u5230int\uff08\u4e5f\u5c31\u662f\u7f16\u53f7\uff09\n### \u6363\u9f13\u5b8c\u8fd9\u4e9b\uff0c\u4f60\u5c31\u53ef\u4ee5\u5904\u7406\u7239\u4e0e\u513f\u5b50\u7684\u5173\u7cfb\u5566\n### \u5c31\u662f\u8fd9\u6837\uff1a\n```cpp\nwhile(1) {\n\tcin >> tag[++ cnt].s; // \u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u5148\u8bfb\u5165\uff1b\n\tif(tag[cnt].s[0] == '?') break ; //\u4e0d\u662f\u7239\u6216\u513f\uff0c\u8df3\u51fa\uff1b\n\ttag[cnt].isfa = tag[cnt].s[0];\n    // \u5904\u7406\u4e00\u4e0b\uff0c\u56e0\u4e3a\u8981\u7528map\u5339\u914d\uff0c\u5148\u628a\u6807\u5934\u6390\u6389\uff0c\n    tag[cnt].s[0] = 'A';// \u81ea\u5df1\u89c4\u5b9a\u4e00\u4e2achar\u7b26\u53f7\uff0c\u8fd9\u6837\u6392\u9664\u5e72\u6270\n\tif(!q[tag[cnt].s]) q[tag[cnt].s] = cnt,tag[cnt].id = cnt;\n\telse tag[cnt].id = q[tag[cnt].s];\n    //\u4ee5\u4e0a\uff0c\u7528map\u5f62\u6210\u6620\u5c04\uff0c\u5982\u679cmap\u5df2\u88ab\u4ed8\u8fc7\u503c\uff0c\u7528id\u5b58\uff0c\u5426\u5219\u5c31\u65b0\u5f00\u4e00\u4e2a\n    //\u6ce8\u610f\uff0cid\u662f\u6b64string\u6700\u5f00\u59cb\u51fa\u73b0\u7684\u503c\n\tif(tag[cnt].isfa == '#') opt = tag[cnt].id;\n    //\u5982\u679c\u662f\u7238\u7238\uff0c\u5c31\u628a\u4ed6\u6700\u5f00\u59cb\u51fa\u73b0\u7684\u4e0b\u6807\u5b58\u4e00\u4e0b\n\tif(tag[cnt].isfa == '+') tag[tag[cnt].id].fa = opt;\n    //\u6ce8\u610f\uff0c\u513f\u5b50\u7684\u7238\u7238\u5e94\u7528\u8be5\u513f\u5b50\u7684id\u5b58\u50a8\n}\n```\n### \u8fd9\u6837\u4e4b\u540e\uff0c\u5bf9\u4e8e\u67e5\u8be2\uff0c\u5c31\u8df3\u7238\u7238\u5c31\u884c\u4e86\n```cpp\na = tag[cnt].s; //\u521a\u624d\u6700\u540e\u4e00\u6b21\u8bfb\u5165\nwhile(1) {\n\tif(a[0] == '$') break ; \n\ta[0] = 'A'; int tmp = q[a];//\u5148\u628a\u5f00\u5934\u6390\u6389\uff0c\u7528map\u8bfb\u53d6\u8be5\u513f\u5b50\u7684\u4e0b\u6807\n\tfor(int i = 1;i < a.size();i ++) \n    \t\tcout << a[i] ; cout << \" \";\n    //\u5148\u8f93\u51fa\u81ea\u5df1\u7684\u540d\u5b57\uff0c\u6ce8\u610f\u4e0d\u8981\u8f93\u51faa[0];\n\twhile(tag[tmp].fa) tmp = tag[tmp].fa;\n    //\u501f\u52a9\u5df2\u66f4\u65b0\u597d\u7684fa\u8df3\uff0c\u4e00\u76f4\u8df3\u5230\u4e3a0\uff0c\u8bf4\u660e\u5df2\u5230\u5934\uff1b\n\tfor(int i = 1;i < tag[tmp].s.size();i ++) \n    \t\tcout << tag[tmp].s[i] ; cout << endl;\n    //\u8f93\u51fa\u7238\u7238\uff1b\n\tcin >> a;\n}\n```\n## \u5728\u9ecf\u4e0a\u9ad8\u6e05\u65e0\u6ce8\u91ca\u7248\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<map>\n#include<string>\n#define N 500500\nusing namespace std;\n\nstruct node {\n\tstring s;\n\tint fa,id;\n\tchar isfa;\n}tag[N];\nint cnt,opt;\nmap<string,int> q;\nstring a;\n\nint main() {\n\twhile(1) {\n\t\tcin >> tag[++ cnt].s;\n\t\tif(tag[cnt].s[0] == '?') break ;\n\t\ttag[cnt].isfa = tag[cnt].s[0]; tag[cnt].s[0] = 'A';\n\t\tif(!q[tag[cnt].s]) q[tag[cnt].s] = cnt,tag[cnt].id = cnt;\n\t\telse tag[cnt].id = q[tag[cnt].s];\n\t\tif(tag[cnt].isfa == '#') opt = tag[cnt].id;\n\t\tif(tag[cnt].isfa == '+') tag[tag[cnt].id].fa = opt;\n\t}\n\ta = tag[cnt].s;\n\twhile(1) {\n\t\tif(a[0] == '$') break ; \n\t\ta[0] = 'A'; int tmp = q[a];\n\t\tfor(int i = 1;i < a.size();i ++) cout << a[i] ; cout << \" \";\n\t\twhile(tag[tmp].fa) tmp = tag[tmp].fa;\n\t\tfor(int i = 1;i < tag[tmp].s.size();i ++) cout << tag[tmp].s[i] ; cout << endl;\n\t\tcin >> a;\n\t}\n\treturn 0;\n}\n```\n### \u603b\u517138\uff0c\u8fd8\u7b97\u77ed\u5427~~~",
        "postTime": 1568296619,
        "uid": 153839,
        "name": "\u6e05\u8fdc\u5b66\u4f1a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "###\u4f5c\u8005\uff1a\u5cb8\u82b7\u6c40\u5170###\n\n##\u4e00\u3001\u9898\u76ee\uff1a##\n\n[\u94fe\u63a5\uff1a\u6d1b\u8c37\u539f\u9898](https://www.luogu.org/problemnew/show/2814)\n\n##\u4e8c\u3001\u601d\u8def\uff1a##\n\n\u660e\u663e\u7684\u5e76\u67e5\u96c6\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u6570\u636e\u7ed3\u6784\u2014\u2014map\u6620\u5c04:\n\n`map<string,string>father`\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u4e0e\u5b57\u7b26\u4e32\u7528\u5e76\u67e5\u96c6\u8fde\u63a5\u8d77\u6765\u4e86\u3002\n\n\u5c31\u53ef\u4ee5\u201c\u968f\u5fc3\u6240\u6b32\u4e0d\u903e\u77e9\u201d\u4e86\u3002\n\n\u5177\u4f53\u601d\u8def\u89c1\u4ee3\u7801\u3002\n\n##\u4e09\u3001\u6211\u7684C++\u6e90\u4ee3\u7801\uff1a##\n\n    \n    \n```cpp\n    // luogu P2814\n    #include<iostream>\n    #include<cstdio>\n    #include<string>\n    #include<map>\n    using namespace std;\n    const int maxn=50005;\n    string a[maxn];\n    int fa[maxn],n;\n    map<string,string>father;//map\u6620\u5c04\n    string find(string x){//find\u64cd\u4f5c\n        if(x==father[x])return x;\n        return father[x]=find(father[x]);//\u9012\u5f52\n    }\n    int main()\n    {\n        string f1;//\u8bb0\u5f55\"\u7236\u4eb2\"\n        while(1){\n            char op=getchar();\n            string str;//\u4e34\u65f6\u5b57\u7b26\u4e32\n            if(op=='#'){\n                cin>>f1;\n                if(father[f1]==\"\")/*f1\u6ca1\u6709\u7236\u4eb2*/father[f1]=f1;//\u7f6e\u4e8e\u9876\u7aef\n            }\n            else if(op=='?'){\n                cin>>str;\n                cout<<str<<\" \"<<find(str)<<endl;//\u8f93\u51fa\n            }\n            else if(op=='+'){\n                cin>>str;\n                father[str]=f1;//\u8ba4\u7238\u7238\n            }\n            else if(op=='$')break;//\u8df3\u51fa\u5faa\u73af\n        }\n        return 0;\n}\n```",
        "postTime": 1512894895,
        "uid": 43513,
        "name": "\u5cb8\u82b7\u6c40\u5170",
        "ccfLevel": 8,
        "title": "\u6d1b\u8c37 P2814\u5bb6\u8c31 \u9898\u89e3"
    },
    {
        "content": "\u5176\u4ed6\u5f88\u591a\u4eba\u90fd\u7528map\u6216\u8005\u5404\u79cd\u7384\u5b66\u65b9\u6cd5\u5361\uff0c\u8fd9\u91cc\u53d1\u4e00\u7bc7\u4e2d\u89c4\u4e2d\u77e9\u7684trie\u6811\u7684\u9898\u89e3\u3002\n\u4e5f\u6ca1\u6709\u7528\u4ec0\u4e48\u795e\u5947\u64cd\u4f5c\uff0c\u611f\u89c9\u8fd9\u624d\u662f\u51fa\u9898\u4eba\u60f3\u8ba9\u6211\u4eec\u5199\u7684\u4e1c\u897f\u3002\n\u6ca1\u6cd5\u8dd1\u52300ms\u8fd9\u79cd\u7384\u5b66\u7684\u65f6\u95f4\uff0c\u662f\u65f6\u95f4\u4e5f\u7b97\u6bd4\u8f83\u7a33\u5b9a\u7684\u4e86\uff0c\u5341\u4e2a\u6d4b\u8bd5\u70b9\u7528\u65f6\u57284ms\u52309ms\u4e4b\u95f4\u3002\n\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\nconst int N=500010;\nint cnt=0;\nint cnt_node=1;\nint fa[N];\nchar name[N][10];\nint next[N][26];\nint number[N<<4];\nint new_node()\n{\n\tcnt_node++;\n\tint k;\n\tfor(k=0;k<26;k++)next[cnt_node][k]=0;\n\treturn cnt_node;\n}\nvoid add(char *s)\n{\n\tint k,i,j;\n\ti=1;\n\tfor(k=0;k<6;k++)\n\t{\n\t\tif(!next[i][s[k]-'a'])next[i][s[k]-'a']=new_node();\n\t\ti=next[i][s[k]-'a'];\n\t}\n\tnumber[i]=cnt;\n\treturn;\n}\nint find_num(char *s)\n{\n\tint k,i,j;\n\ti=1;\n\tfor(k=0;k<6;k++)\n\t{\n\t\ti=next[i][s[k]-'a'];\n\t\tif(i==0)return 0;\n\t}\n\treturn number[i];\n}\nint main()\n{\n\tint k,i,j;\n\tint a,b,c;\n\tchar ch;\n\tchar tem[6];\n\tmemset(fa,0,sizeof(fa));\n\tfor(k=0;k<26;k++)next[1][k]=0;\n\twhile(true)\n\t{\n\t\tch=getchar();\n\t\twhile(ch!='$' && ch!='#' && ch!='+' && ch!='?')ch=getchar();\n\t\tif(ch=='$')break;\n\t\tif(ch=='#')\n\t\t{\n\t\t\tfor(k=0;k<6;k++)tem[k]=getchar();\n\t\t\ttem[0]='a'+(tem[0]-'A');\n\t\t\ta=find_num(tem);\n\t\t\tif(!a)\n\t\t\t{\n\t\t\t\tcnt++;\n\t\t\t\tadd(tem);\n\t\t\t\ta=cnt;\n\t\t\t\tfor(k=0;k<6;k++)name[cnt][k]=tem[k];\n\t\t\t}\n\t\t}\n\t\telse if(ch=='+')\n\t\t{\n\t\t\tfor(k=0;k<6;k++)tem[k]=getchar();\n\t\t\ttem[0]='a'+(tem[0]-'A');\n\t\t\tb=find_num(tem);\n\t\t\tif(!b)\n\t\t\t{\n\t\t\t\tcnt++;\n\t\t\t\tadd(tem);\n\t\t\t\tb=cnt;\n\t\t\t\tfor(k=0;k<6;k++)name[cnt][k]=tem[k];\n\t\t\t}\n\t\t\tfa[b]=a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(k=0;k<6;k++)tem[k]=getchar();\n\t\t\tfor(k=0;k<6;k++)printf(\"%c\",tem[k]);\n\t\t\ttem[0]='a'+(tem[0]-'A');\n\t\t\tb=find_num(tem);\n\t\t\twhile(fa[b])b=fa[b];\n\t\t\tprintf(\" \");\n\t\t\tprintf(\"%c\",'A'+(name[b][0]-'a'));\n\t\t\tfor(k=1;k<6;k++)printf(\"%c\",name[b][k]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1565530361,
        "uid": 86663,
        "name": "overflow",
        "ccfLevel": 0,
        "title": "P2814 trie\u6811\u9898\u89e3"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u80af\u5b9a\u7528\u5e76\u67e5\u96c6\u6765\u6a21\u62df\uff0c\u90a3\u6211\u4eec\u600e\u4e48\u5feb\u901f\u5c06\u4eba\u540d\u6620\u5c04\u51fa\u6765\u5462\uff0c\u5f53\u7136\u662f\u7528\u5bb9\u5668\u6765\u5b58\u50a8\uff0c\u8fd9\u91cc\u9002\u5408\u7528\u7684\u5bb9\u5668\u662fmap\n~~\uff08\u6211\u6700\u559c\u6b22\u7684\u5bb9\u5668\uff09~~\u53ef\u4ee5\u6620\u5c04\u4e0b\u6807\uff1amap<string,string>fa\u7b2c\u4e00\u4e2astring\u7c7b\u578b\u8868\u793a\u7684\u662f\u4e00\u5bf9\u5173\u7cfb\u4e2d\u513f\u5b50\u662f\u8c01\uff0c\u7b2c\u4e8c\u4e2astring\u7c7b\u578b\u8868\u793a\u7684\u662f\u4e00\u5bf9\u5173\u7cfb\u4e2d\u7236\u4eb2\u662f\u8c01\u3002\u4f46\u662f\u6211\u4eec\u9700\u8981\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8df3\u51fa\u4ed6\u6700\u65e9\u7684\u7956\u5148\u3002\n```\ninline string getfa(string x){return fa[x]==x?x:fa[x]=getfa(fa[x]);}\n```\n\u8fd9\u662f\u4e00\u6bb5\u8bb0\u5fc6\u5316DFS\u6765\u67e5\u627e\uff0c\u4e5f\u662f\u5e76\u67e5\u96c6\u7684\u6838\u5fc3\u90e8\u5206\u3002\u8868\u793a\u5982\u679c\u8fd9\u4e2a\u70b9\u7684\u7236\u4eb2\u662f\u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48\u8bf4\u660e\u5df2\u7ecf\u627e\u5230\u5934\u4e86\uff0c\u5c31\u4e0d\u627e\u4e86\u3002\u4e0d\u7136\u5c31\u627e\u4e0b\u53bb\uff0c\u5e76\u8bb0\u4f4f\u4ed6\u3002\n\u9644\u6211\u7684\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nmap<string,string> fa;\nstring father,now,lst;\ninline string getfa(string x){return fa[x]==x?x:fa[x]=getfa(fa[x]);}\nint main(){\n\tfreopen(\"gen.in\",\"r\",stdin);\n\tfreopen(\"gen.out\",\"w\",stdout);\n\tchar ch=getchar();\n\twhile (ch!='$'){\n\t\tcin>>now;getchar();\n\t\tif (ch=='#'){\n\t\t\tfather=now;\n\t\t\tif (fa[father]==\"\") fa[father]=father;//\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u7236\u4eb2\u6ca1\u6709\u7236\u4eb2\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba4\u4e3a\u4ed6\u662f\u81ea\u5df1\u7684\u7236\u4eb2\u3002\n\t\t}else\n\t\tif (ch=='+') fa[now]=father;else cout<<now<<\" \"<<getfa(now)<<endl;\n\t\tch=getchar();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1540047037,
        "uid": 131688,
        "name": "Station",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e4d\u4e00\u770b\u4e5cjiba\u96be\uff08\u4e5f\u4e0d\u77e5\u9053\u662f\u54ea\u4e2a\u7259\u7684\u8bf4\u8fd9\u662f\u63d0\u9ad8+,\u5206\u660e\u662f\u666e\u53ca\u9898\u561b\uff09\uff0c\u4f46\u662fYY\u4e0b\u5c31\u4f1a\u53d1\u73b0\u53ea\u8981\u7528stl\u7684map\uff0c\u79d2\u79d2KO\u597d\u5427\n\n\u4e0d\u591a\u8bf4\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nmap<string,string>father;\nstring fat(string x)//\u627e\u7238\u7238\n{\n    if(x!=father[x])\n    {\n        father[x]=fat(father[x]);\n    }\n    return father[x];\n}\nint main()\n{\n    //freopen(\"1.txt\",\"r\",stdin);\n    char k;\n    string f1,t;\n    while(1)\n    {\n        cin>>k;\n        if(k=='$') break;\n        if(k=='#')\n        {\n            cin>>f1;//\u7238\u7238\n            if(father[f1]==\"\") father[f1]=f1;\n            continue;\n        }\n        else if(k=='+')\n        {\n            cin>>t;//\u513f\u5b50\n            father[t]=f1;\n        }\n        else if(k=='?')\n        {\n            cin>>t;\n            cout<<t<<' '<<fat(t)<<endl;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1502592949,
        "uid": 33741,
        "name": "hhe_benlaji",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "# \u601d\u8def\u5341\u5206\u7b80\u5355\n\u5c31\u662f\u7528map\u8bb0\u5f55\u513f\u5b50\u5bf9\u5e94\u7684\u7236\u4eb2\uff0c\u4e0d\u65ad\u5f80\u4e0a\u67e5\u627e\uff0c\u76f4\u5230\u518d\u4e5f\u6ca1\u6709\u7236\u4eb2\u4e86\uff0c\u5c31\u662f\u7b54\u6848\n\n## \u5176\u5b9e\u5c31\u662f~~\u4e0d\u5fc5\u7ef4\u62a4\u5e76\u67e5\u96c6~~ \u61d2\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<map>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nchar in;\nmap<string,string>s;//map\u5bf9\u5e94\u513f\u5b50\u4e0e\u7236\u4eb2map[\u513f]=\u7236 \nint main()\n{\n\tstring i;\n\tstring father;//\u50a8\u5b58\u4e0a\u4e00\u4e2a\u7236\u4eb2 \n\twhile(cin>>in){\n    //in\u8bfb\u5165\u9996\u5b57\u7b26 \n    if(in=='$') break;\n\t\tcin>>i;\n\t\tif(in=='#') father=i;//father\u662f\u8be5\u7236\u4eb2 \n\t\tif(in=='+') s[i]=father;//\u8be5\u7236\u4eb2\u7684\u513f\u5b50\u7684\u7236\u4eb2\u662ffather\n\t\tif(in=='?') {\n\t\t\tcout<<i<<\" \";\n\t\t\tstring find=i;//\u4ece\u8be5\u513f\u5b50\u5f00\u59cb\u5f80\u4e0a\u627e \n\t\t\twhile(1){\n\t\t\t\tif(s[find]==\"\")break;//\u7a7a\u4e86\uff0c\u518d\u4e5f\u6ca1\u6709\u7236\u4eb2\u4e86\uff0c\u5c31\u662f\u7b54\u6848 \n\t\t\t\tfind=s[find];//\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8fd8\u6709\u7236\u4eb2\uff0c\u7ee7\u7eedzhao \n\t\t\t}\n\t\t\tcout<<find<<endl;\n\t\t}\n\t}\n    return 0;\n}\n```\n\n\n",
        "postTime": 1572705119,
        "uid": 100592,
        "name": "Tsumi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "## P2814 \u5bb6\u8c31 \u9898\u89e3\n### \u4e00\u3001\u601d\u8def\n#### \u5e76\u67e5\u96c6\u548cmap\u6620\u5c04\nmap\u6620\u5c04\uff1a\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u3002\n```cpp\nmap<string,string> f;\n```\n\u610f\u601d\u4e3a\u5efa\u7acb\u4e00\u4e2a\u7279\u6b8a\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e0b\u6807\u7c7b\u578b\u4e3astring\uff0c\u6570\u7ec4\u5b58\u653e\u7684\u6570\u636e\u4e5f\u662fstring\u7c7b\u578b\u7684\u3002\u7136\u800c\u5b83\u7684\u672c\u8d28\u8fd8\u662f\u666e\u901a\u6570\u7ec4\uff0c\u6b64\u5904\u662f\u5c06string\u7c7b\u6620\u5c04\u6210int\u578b\u3002\n\n\u6b64\u5904\u7528\u4e86map\uff0c\u5c31\u53ef\u4ee5\u5c06\u8f93\u5165\u7684\u540d\u5b57\u5f53\u6210\u4e00\u4e2a\u4e2a\u6574\u6570\uff08\u70b9\uff09\uff0c\u8fdb\u884c\u666e\u901a\u5e76\u67e5\u96c6\u5373\u53ef\u3002\n### \u4e8c\u3001\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<map>//map\u5e93\nusing namespace std;\nmap<string,string> f;\nstring a,b;\n//\u5b57\u7b26\u4e32a\u7528\u4e8e\u8bb0\u5f55\u8f93\u5165\u7684\u540d\u5b57\uff0cb\u7528\u4e8e\u8bb0\u5f55\u8f93\u5165\u7684\u540d\u5b57\u7684\u7956\u5148\uff08\u5982\u679c\u5b83\u662f\u7236\u5b50\u5173\u7cfb\u4e2d\u7684\u513f\u5b50\uff09\u3002\nstring find(string v)\n//\u5e76\u67e5\u96c6\u6a21\u677f\uff0c\u5bfb\u627e\u7956\u5148\u7684\u51fd\u6570\u3002\n{\n    if(f[v]==v)\n    {\n        return v;\n    }\n    else\n    {\n        f[v]=find(f[v]);\n        return f[v];\n    }\n}\nint main()\n{\n    char c;//\u7b2c\u4e00\u4e2a\u5b57\u7b26\n    cin>>c;\n    while(c!='$')\n    {\n        cin>>a;\n        if(c=='#')//\u5982\u679c\u662f\u7236\u4eb2\n        {\n            b=a;//\u7236\u4eb2\u4e3a\u81ea\u5df1\n            if(f[a]==\"\")//\u5982\u679c\u5b83\u6ca1\u6709\u7956\u5148\n            {\n                f[a]=a;//\u7956\u5148\u4e3a\u81ea\u5df1\n            }\n        }\n        else\n        {\n            if(c=='+')//\u6dfb\u52a0\u513f\u5b50\n            {\n                f[a]=b;//\u7956\u5148\u4e3a\u7236\u4eb2\n            }\n            else//\u5bfb\u627e\u7956\u5148\n            {\n                b=find(a);\n                cout<<a<<\" \"<<b<<endl;\n            }\n        }\n        cin>>c;\n    }\n    return 0;\n}\n```\nAccepted  100 \n\n\u7528\u65f6: 109ms / \u5185\u5b58: 2892KB",
        "postTime": 1554556246,
        "uid": 158626,
        "name": "lzcjoe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "## \u4e0d\u7528STL\uff0c\u66b4\u529b\u51fa\u5947\u8ff9\uff01\n\u5e76\u67e5\u96c6\u6a21\u677f\u9898\u52a0\u5b57\u7b26\u4e32  \n\u4e3a\u4ec0\u4e48\u8981map\u3002\u3002\u3002  \n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n\tchar name[11],pdd;\n\tint fa,len;\n}P[100010];\nchar pd;\nint FA,gs,root;\nint find(int x)\n{\n\tif(P[x].fa==x)\n\t{\n\t\treturn x; \n\t}\n\treturn P[x].fa=find(P[x].fa);\n}\nint found(int x)\n{\n\tfor(int i=1;i<=gs;i++)\n\t{\n\t\tif(P[i].pdd!='?')\n\t\t{\n\t\t\tfor(int j=1;j<=6;j++)\n\t\t\t{\n\t\t\t\tif(P[i].name[j]!=P[x].name[j])\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(j==6)\n\t\t\t\t{\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n    //freopen(\"gen.in\",\"r\",stdin);\n    //freopen(\"gen.out\",\"w\",stdout);\n    while(cin>>pd)\n    {\n    \tcin>>P[++gs].name+1;\n    \tP[gs].pdd=pd;\n    \tP[gs].fa=gs;\n    \tP[gs].len=strlen(P[gs].name+1);\n    \tif(pd=='#')\n    \t{\n    \t\tFA=found(gs);\n    \t}\n    \tif(pd=='+')\n    \t{\n    \t\tint qaq=found(gs);\n    \t\tP[qaq].fa=find(FA);\n    \t}\n    \tif(pd=='?')\n    \t{\n    \t\tint qwq=found(gs);\n    \t\troot=find(qwq);\n    \t\tfor(int i=1;i<=P[qwq].len;i++)\n    \t\t{\n    \t\t\tcout<<P[qwq].name[i];\n    \t\t}\n    \t\tcout<<\" \";\n    \t\tfor(int i=1;i<=P[root].len;i++)\n    \t\t{\n    \t\t\tcout<<P[root].name[i];\n    \t\t}\n    \t\tcout<<endl;\n    \t}\n    }\n}\n```\n",
        "postTime": 1552120756,
        "uid": 97593,
        "name": "G_A_TS",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "# \u96be\u5ea6\uff1a\u7701\uff08ti\uff09\u9009\uff08gao\uff09-\n\u7b97\u6cd5\uff1aMAP\n\n\uff08\u66f4\u591a\u7684\u6982\u5ff5\u9700\u81ea\u884c\u67e5\u767e\u5ea6\uff0c\u8fd9\u91cc\u8bf4\u4e00\u4e0b\u57fa\u672c\u7684\u6982\u5ff5\uff09\n\n\u5934\u6587\u4ef6\n```\n#include <map>\n```\n\u5b9a\u4e49\u4e00\u4e2amap\n```\nmap <type,type> m; \n//\u5b9a\u4e49map\uff0c\u8fd9\u91cc\u7684type\u53ef\u4ee5\u662fint\uff0cdouble\uff0c\u751a\u81f3\u662fstring\n```\n\n\u5728map\u4e2d\u6709\u4e00\u4e9bpair\u7ed3\u6784\u4f53\uff0c\u6bcf\u4e00\u4e2apair\u67092\u4e2a\u53d8\u91cf\uff1akey\uff0cvalue\n\nkey\u8f93\u51fa\u65f6\u6362\u4e3afirst\uff0cvalue\u662fsecond\uff08\u89c1\u4e0b\uff09\n\n\u8fd9\u91cc\u7684key\u5bf9\u5e94\u4f60\u8f93\u5165\u7684\u7b2c\u4e00\u4e2atype\uff0c\u800cvalue\u5bf9\u5e94\u7b2c\u4e8c\u4e2atype\n\n\u4f8b\u5982\uff1a\n```\nmap <string\uff0cint>\n```\n\u8fd9\u91cc\u7684key\u5c31\u662fstring\u7c7b\u578b\uff0cvalue\u5c31\u662fint\u7c7b\u578b\n\n\u4e0b\u9762\u662f\u57fa\u672c\u64cd\u4f5c\uff1a\n```\nmap<string,int> m;\nm.insert(make_pair(\"abc\",3)) //\u7b2c\u4e00\u4e2apair,key\u5b58\"abc\"\uff0cvalue\u5b583\nm.insert(make_pair(\"ab\",12)) //\u7b2c\u4e8c\u4e2apair,key\u5b58\"ab\"\uff0cvalue\u5b5812\nmap<int, string>::iterator it; //\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u65b9\u4fbf\u4e0b\u9762\u7684\u64cd\u4f5c\nit=find(\"abc\")//\u67e5\u627ekey\u662f\"abc\"\u7684pair\n//\u53d1\u73b0\u8fd9\u4e2apair\u7684key\u662f\"abc\"\uff0cvalue\u662f3\uff0cit\u6307\u5411\u5b83\ncout<<(*it).first<<\" \"<<(*it).second<<endl;\n//\u8f93\u51fa\u8fd9\u4e2apair\u7684key\u548cvalue\uff08\u5e94\u662f\"abc\"\u548c3\uff09\nit=find(\"1\")//\u67e5\u627ekey\u662f1\u7684pair\n//\u53d1\u73b0\u6ca1\u6709\uff0c\u8fd9\u662fit\u4f1a\u6307\u5411m.end()\nif(it==m.end())\n\tcout<<\"can't find\"<<endl;\nelse\n\tcout<<(*it).first<<\" \"<<(*it).second<<endl;\n//\u5e94\u8be5\u8f93\u51facan't find\n//(\u8fd8\u6709\u4e00\u4e9b\u64cd\u4f5c\u5728\u8fd9\u91cc\u5c31\u4e0d\u6f14\u793a\u4e86,\u8fd9\u4e2a\u4f8b\u5b50\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u8bd5\u4e00\u4e0b)\n```\n## \u73b0\u5728\uff0c\u8fdb\u5165\u6b63\u9898\n\n\u9898\u76ee\u7684\u4e00\u4e9b\u5173\u952e\u4fe1\u606f:\n\n1.\u5bb6\u65cf\u540d\u5b57\u4e00\u5b9a\u662f6\u4e2a\u5b57\u6bcd\n\n2.\u6570\u636e\u504f\u5c0f\n\n3.\u9700\u7528map\u52a0string\u89e3\u51b3\n\n\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\uff1a\uff08\u5148\u7ed9\u4e2a\u4e0d\u50cf\u4f2a\u4ee3\u7801\u7684\u4f2a\u4ee3\u7801\u5427\uff09\n\n```cpp\nwhile(\u8f93\u5165\u513f\u5b50 \u5e76\u4e14\u8f93\u5165\u7684\u4e0d\u662f$)\n{\n\tstring \u7236\u4eb2 \n\tif(\u9996\u5b57\u6bcd\u662f#)\n\t{\n\t\t \u7236\u4eb2=\u53bb\u6389\u7b2c\u4e00\u4e2a\u7b26\u53f7\u7684\u513f\u5b50 \n\t} \n\tif(\u9996\u5b57\u6bcd\u662f+)\n\t{\n\t\t//\u653e\u5165map\u91cc\n\t\tm.insert(make_pair(\u53bb\u6389\u7b2c\u4e00\u4e2a\u7b26\u53f7\u7684\u513f\u5b50\uff0c\u7236\u4eb2)) \n\t} \n\tif(\u9996\u5b57\u6bcd\u662f\uff1f)\n\t{\n\t\tmap<string,string>::iterator it;//\u5b9a\u4e49\u8fed\u4ee3\u5668\n\t\tit=m.find(\u513f\u5b50) \n\t\tif(\u627e\u5230\u4e86)\n\t\t{\n\t\t\tstring \u7b54\u6848 \n\t\t\twhile(\u8fd8\u80fd\u627e\u5230)\n\t\t\t{\n\t\t\t\t\u7b54\u6848=(*it).\u7236\u4eb2 \n\t\t\t\tit=find((*it).\u513f\u5b50) \n\t\t\t}\n\t\t\t\u8f93\u51fa\u539f\u5148\u7684\u513f\u5b50\u548c\u7956\u5148 \n\t\t}\n\t\telse\n\t\t{\n\t\t\t\u8f93\u51fa\u4e24\u6b21\u513f\u5b50 \n\t\t}\n\t} \n} \n```\n\n\u5982\u679c\u4f60\u7406\u89e3\u4e86\uff0c\u4f60\u73b0\u5728\u5e94\u8be5\u53ef\u4ee5\u53bb\u5199\u4e86\n\n# \u4f46\u662f\n\n\u8fd9\u91cc\u8fd8\u6709\u4e2a\u6b63\u89e3\uff08\u7ed9\u90a3\u4e9b\u8fd8\u662f\u4e0d\u61c2\u7684\u4eba\u770b\u7684\uff0c\u65e0\u6ce8\u91ca\uff09\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <string>\n#include <algorithm>\n#include <map>\nusing namespace std;\n\nmap <string,string> m;\n\nint main()\n{\n\tint i;\n\tstring tmp,key;\n\twhile(cin>>tmp && tmp[0]!='$')\n\t{\n\t\tif(tmp[0]=='#')\n\t\t\tkey=tmp.substr(1,6);\n\t\tif(tmp[0]=='+')\n\t\t\tm.insert(make_pair(tmp.substr(1,6),key));\n\t\tif(tmp[0]=='?')\n\t\t{\n\t\t\tstring ans;\n\t\t\tmap<string,string>::iterator it=m.find(tmp.substr(1,6));\n\t\t\tif(it==m.end())\n\t\t\t{\n\t\t\t\tcout<<tmp.substr(1,6)<<\" \"<<tmp.substr(1,6)<<endl;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile(it!=m.end())\n\t\t\t\t{\n\t\t\t\t\tans=(*it).second;\n\t\t\t\t\tit=m.find((*it).second);\n\t\t\t\t}\n\t\t\t\tcout<<tmp.substr(1,6)<<\" \"<<ans<<endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1570964561,
        "uid": 159610,
        "name": "Meaninglessness",
        "ccfLevel": 4,
        "title": "MAP\u7684\u4e00\u4e9b\u7528\u6cd5"
    },
    {
        "content": "# \u4e00\u3001\u601d\u8def\n### 1.\u8fd9\u79cd\u9898\u76ee\u7684\u6700\u4f73\u601d\u8def\u4e00\u5b9a\u662f\u5e76\u67e5\u96c6\u3002\n### 2.\u4f46\u662f\uff0c\u5e76\u67e5\u96c6\u4e2d\u7528\u6765\u5b58\u50a8\u6839\u8282\u70b9\u7684father\u6570\u7ec4\u4e0b\u6807\u5fc5\u987b\u4e3aint\u7c7b\u578b\uff0c\u4f46\u662f\u4eba\u540d\u5374\u662fchar\u7c7b\u578b\u3002\n### 3.\u6240\u4ee5\uff0c\u6211\u4eec\u4f7f\u7528stl\u96c6\u4e2d\u7684map\u5de5\u5177\u3002\n### map\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4f7f\u6570\u7ec4\u4e0b\u6807\u4e3a\u975e\u6574\u578b\u3002\u5b9a\u4e49\u4ee3\u7801\u4e3a\uff1a\n```cpp\nmap<string,string>fa;\n```\n### \u8fd8\u9700\u4f7f\u7528\u4ee5\u4e0b\u5934\u6587\u4ef6:\n```cpp\n#include<map>\n```\n# \u4e8c\u3001\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<map>//\u5173\u952e\u7684\u5934\u6587\u4ef6\n#include<iostream>//\u56e0\u4e3ascanf\u4e0d\u80fd\u8f93\u51fastring\u7c7b\u578b\uff0c\u6240\u4ee5\u52a0\u8bbe\u6b64\u4ee3\u7801\uff08\u5305\u62ecstring\u7684\u5b9a\u4e49\uff09\nusing namespace std;\nmap<string,string>fa;//\u8fd9\u53e5\u4ee3\u7801\u7684\u610f\u601d\u662f\uff0c\u5b9a\u4e49\u4e00\u4e2a\u4e0b\u6807\u4e3astring\u7c7b\u578b\uff08\u7b2c\u4e00\u4e2astring\uff09\uff0c\u503c\u4e3astring\u7c7b\u578b\u7684\u6570\u7ec4fa\nchar ch;//\u4f9b\u8f93\u5165\nstring s,f;//\u4f9b\u8bb0\u5f55\nstring find(string x)//\u5bfb\u627e\u7236\u8282\u70b9\u51fd\u6570\n{\n    if(x==fa[x])\n    {\n        return x;\n    }\n    return find(fa[x]);\n}\nint main()\n{\n\tcin>>ch;//\u6ce8\u610f\uff0c\u4e00\u5b9a\u4e0d\u80fd\u7528scanf\uff0c\u5426\u5219\u4f1aTLE\n    while(ch!='$')\n    {\n        cin>>s;\n        if(ch=='#')\n        {\n            f=s;\n            if(fa[s]==\"\")//\u5982\u679c\u6839\u8282\u70b9\u4e3a\u7a7a\n            {\n            \tfa[s]=s;//\u5219\u81ea\u5df1\u4e3a\u6839\u8282\u70b9\n\t\t\t}\n        }\n        if(ch=='+')\n        {\n            fa[s]=f;//\u5408\u5e76\u64cd\u4f5c\n        }\n        if(ch=='?')\n        {\n        \tcout<<s<<\" \"<<find(s)<<endl;//\u67e5\u8be2\u64cd\u4f5c\n\t\t}\n\t\tcin>>ch;\n    }\n    return 0;\n}\n```\n",
        "postTime": 1554556982,
        "uid": 158593,
        "name": "\u590f\u5b50\u6c50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\u663e\u7136\u8fd9\u53ea\u662f\u5e76\u67e5\u96c6\u7684\u4e00\u4e2a\u5165\u95e8\u9898\uff08~~\u5bf9\u6211\u6765\u8bf4\u5f53\u7136\u975e\u5e38\u7b80\u5355~~\uff09\uff0c\u4e0d\u8fc7\u662f\u8981\u6362\u6210\u5b57\u7b26\u4e32\uff0c\u7528\u4e2amap\u800c\u5df2\n\n\u5927\u4f6c\uff1a\u8fd9\u5c31\u662f\u4f60\u8fd9\u4e00\u9898\u7528\u4e00\u4e2a\u591a\u5c0f\u65f6\u7684\u7406\u7531\uff1f\n\n\u6211\uff1aemmm\uff08\u53ea\u4e0d\u8fc7\u53c8\u53cc\u53d2\u53d5\u6b7b\u5728\u4e86\u5b57\u7b26\u4e32\u6362\u884c\u7b26\u8bfb\u5165\u7684\u95ee\u9898\u4e0a\u4e86\uff09\n\n\u4ee3\u7801\uff1a\n```\n#include<iostream>\n#include<cstdio> \n#include<map>\n#define MAXN 10000\nusing namespace std;\nmap<string,string>fa;//map\u7c7b\u578b\u7684\u5b9a\u4e49\uff1a\u6ce8\u610f\u6ca1\u6709\u7a7a\u683c \nstring now,father;\nstring find(string x)//\u8def\u5f84\u538b\u7f29\u51fd\u6570 \n{\n    if(x==fa[x])\n        return x;\n    else\n        return fa[x]=find(fa[x]);\n}\nint main()\n{\n\tchar relation;//\u786e\u5b9a\u5173\u7cfb\u7684\u5b57\u7b26 \n    cin>>relation;\n    while(relation!='$')//\u5982\u679c\u8f93\u5165\u6587\u4ef6\u6709\u6548\n\t{ \n\t\tcin>>now;\n\t\tgetchar();//\u975e\u5e38\u91cd\u8981\uff01\uff01\uff01\u4e0d\u5199\u8fd9\u53e5\u8bdd\u8bfb\u8fdb\u6765\u7684\u540d\u5b57\u5c31\u6709\u4e00\u4e2a\u6362\u884c\u7b26 \n    \tif(relation=='#')\n\t\t{\n\t\t\tfather=now;\n\t\t\tif(fa[now]==\"\")\n\t\t\t\tfa[now]=now;//\u5982\u679c\u521a\u8bfb\u5165\u7684\u662f\u4e00\u4e2a\u7236\u4eb2\u5173\u7cfb\u4e14\u4ed6\u8fd8\u6ca1\u6709\u7236\u4eb2\uff0c\u5c31\u8ba9\u4ed6\u81ea\u5df1\u5f53\u81ea\u5df1\u7684\u7236\u4eb2 \n\t\t}\n\t\telse if(relation=='+')\n\t\t{\n\t\t\tfa[now]=father;//\u5982\u679c\u521a\u8bfb\u5165\u7684\u662f\u4e00\u4e2a\u513f\u5b50\u5173\u7cfb,\u5c31\u52a0\u5165\u5230\u56fe\u91cc\u9762 \n\t\t}\n\t\telse \n\t\t{\n\t\t\tcout<<now<<' '<<find(now)<<endl;//\u5982\u679c\u662f\u8981\u95ee\u8be2\u7956\u5148\uff0c\u5c31\u6309\u7167\u8981\u6c42\u8f93\u51fa\n\t\t}\n\t\tcin>>relation;//\u8bfb\u5165\u4e0b\u4e00\u4e2a\u5173\u7cfb \n    } \n    return 0;\n}\n```",
        "postTime": 1554538928,
        "uid": 164532,
        "name": "arthurwalnut",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "### \u770b\u5230\u5404\u4f4d\u7528map\u7684\u5927\u4f6c\u7684\u4ee3\u7801\u957f\u5ea6\u77ed\u7684\u53ef\u6015 \u849f\u84bb\u745f\u745f\u53d1\u6296\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u5b57\u7b26\u6570\u7ec4+strcmp\u51fd\u6570\u7684\u5199\u6cd5\n\nstrcmp\u7684\u7528\u6cd5\uff1astrcmp(s1,s2),s1,s2\u4e3a\u5b57\u7b26\u4e32\n\n\u82e5s1=s2\u5219\u8fd4\u56de0\uff0cs1>s2\u5219\u8fd4\u56de\u6b63\u6570\uff0cs1<s2\u5219\u8fd4\u56de\u8d1f\u6570\n\n\u53ef\u4ee5\u901a\u8fc7\u5224\u65adstrcmp(s1,s2)\u662f\u5426\u7b49\u4e8e0\u6765\u5224\u65ads1\u4e0es2\u662f\u5426\u76f8\u7b49\n\n\u6211\u4eec\u4ee5\u67d0\u4e2a\u540d\u5b57\u662f\u7b2c\u51e0\u4e2a\u51fa\u73b0\u4f5c\u4e3a\u8fd9\u4e2a\u540d\u5b57\u7684\u7f16\u53f7 \u4ece\u800c\u901a\u8fc7\u7f16\u53f7\u5b9e\u73b0\u5e76\u67e5\u96c6\n\n\u5728\u8f93\u51fa\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u5728\u5b57\u7b26\u4e32\u540d\u5b57\u540e\u9762\u5199\u201c+1\u201d \u5426\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6ca1\u6709\u8f93\u51fa\u6216\u8005\u51fa\u9519\n\n\u732e\u4e0a\u849f\u84bb\u4e11\u964b\u7684\u4ee3\u7801~\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint f[50003];\nchar a[50003][10],s[10],temp[10],last[10];\nint cnt;\nint find(int x)\n{\n\tif(f[x]==x) return x;\n\treturn f[x]=find(f[x]);\n}\nint main()\n{\n\tfor(int i=1;i<=50000;i++)\n\t\tf[i]=i;\n\twhile(scanf(\"%s\",s))\n\t{\n\t\tif(s[0]=='$') break;\n\t\tfor(int i=1;i<=6;i++)\n\t\t\ttemp[i]=s[i];\n            //\u5c06\u540d\u5b57\u6682\u65f6\u7528temp\u5b58\u50a8\u8d77\u6765\n            //s[0]\u4e0d\u5c5e\u4e8e\u540d\u5b57\u4e14\u540d\u5b57\u957f\u5ea6\u53ea\u67096\u4f4d\uff0c\u53ea\u9700\u8981\u4ece1\u5faa\u73af\u52306\n\t\tbool flag=true;\n\t\tint k;\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\tif(strcmp(temp+1,a[i]+1)==0)\n\t\t\t{\n\t\t\t\tflag=false;\n\t\t\t\tk=i;\n\t\t\t\tbreak;\n\t\t\t}//\u5982\u679c\u540d\u5b57\u51fa\u73b0\u8fc7\u5c31\u8bb0\u5f55\u4e0b\u5b83\u7684\u7f16\u53f7\n\t\tif(flag)\n\t\t{\n\t\t\tcnt++;\n\t\t\tk=cnt;\n\t\t\tfor(int i=1;i<=6;i++)\n\t\t\t\ta[cnt][i]=temp[i];\n\t\t}\u5426\u5219\u5b58\u50a8\u8fd9\u4e2a\u540d\u5b57\u5e76\u8bb0\u5f55\u7f16\u53f7\n\t\tif(s[0]=='#')\n\t\t{\n\t\t\tfor(int i=1;i<=6;i++)\n\t\t\t\tlast[i]=temp[i];\n\t\t}\n        //\u5982\u679c\u8f93\u5165\u7684\u540d\u5b57\u4f5c\u4e3a\u7236\u4eb2\uff0c\u5c31\u5c06\u8fd9\u4e2a\u540d\u5b57\u5b58\u5230last\u5b57\u7b26\u4e32\u91cc\u9762\n\t\tif(s[0]=='+')\n\t\t{\n\t\t\tint x;\n\t\t\tfor(int i=1;i<=cnt;i++)\n\t\t\t\tif(strcmp(last+1,a[i]+1)==0)\n\t\t\t\t{\n\t\t\t\t\tx=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tf[find(k)]=find(x);\n\t\t}\n        //\u5982\u679c\u4f5c\u4e3a\u513f\u5b50\uff0c\u5c31\u5bfb\u627e\u7236\u4eb2\u7684\u7f16\u53f7\u7136\u540e\u64cd\u4f5c\n\t\tif(s[0]=='?')\n\t\t{\n\t\t\tprintf(\"%s\",temp+1);\n\t\t\tputchar(' ');\n\t\t\tprintf(\"%s\",a[find(k)]+1);\n\t\t\tputchar('\\n');\n\t\t}//\u5982\u679c\u662f\u8be2\u95ee\uff0c\u5c31\u8f93\u51fa\u5b83\u7684\u540d\u5b57\u548c\u5b83\u7236\u4eb2\u7684\u540d\u5b57\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1541252584,
        "uid": 91889,
        "name": "Dirt\u3001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "## STL\u5927\u6cd5\u597d\uff01\n### \uff08\u770b\u5230\u697c\u4e0b\u7684\u5927\u4f6c\u4eec\u90fd\u6ca1\u6709\u7528\u6211\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6211\u5c31\u6765\u8131\u78b3\u7532\u919b\u4e00\u4e0b\u8fa3~~\uff09\n\n------------\n\n\n**~~\u4ee5\u4e0a\u90fd\u662f\u5e9f\u8bdd~~**\n\n**\u6211\u6240\u8bf4\u7684\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5177\u4f53\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a**\n- \u6700\u9996\u5148\uff0c\u57fa\u7840\u7684\u5e76\u67e5\u96c6\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\uff0c\u5982\u679c\u4e0d\u4f1a\u7684\u8bdd\u53ef\u4ee5\u770b\u4ee3\u7801\u6216\u8005\u51fa\u95e8\u53f3\u8f6cP3367\u5e76\u67e5\u96c6\u6a21\u677f\n- \u7136\u540e\uff0cSTL\u4e2d\u7684Map\u53ef\u4ee5\u76f4\u63a5\u65b9\u4fbf\u5730\u89e3\u51b3\u5b57\u7b26\u4e32\u54c8\u5e0c\u7684\u95ee\u9898\n- \u4f46\u662f\uff0c\u6bcf\u6b21\u90fd\u7528\u4e00\u904dMap\u4f3c\u4e4e\u663e\u5f97\u6709\u4e9b\u4e0d\u4f18\u7f8e\uff0c\u4f3c\u4e4e\u6709\u4e9b\u6162\u7684\u8bf4\n- \u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u5f15\u8fdb\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2aNum\u548c\u4e00\u4e2aNames\n- Num\u662f\u4e00\u4e2aMap\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662fNum[\u201cA\u201d]\u8868\u793a\u540d\u4e3aA\u7684\u4eba\u7684\u7f16\u53f7\n- \u4e8e\u662f\uff0cNames\u5c31\u662f\u53cd\u8fc7\u6765\u7684Num\uff0cName[i]\u8868\u793a\u7f16\u53f7\u4e3ai\u7684\u4eba\u7684\u540d\u5b57\n- \u603b\u4f53\u800c\u8a00\uff0c\u4e0d\u4ec5\u52a0\u5feb\u4e86\u901f\u5ea6\uff0c\u8fd8\u65b9\u4fbf\u4e86\u8c03\u8bd5\n\n### \u4e0a\u4ee3\u7801~~\n------------\n\n\n```cpp\n#include<bits/stdc++.h> // \u4e07\u80fd\u5934\u6587\u4ef6 \n\nusing namespace std;\n\nint f[50100]; // \u5e76\u67e5\u96c6\uff0cf[i]\u8868\u793a\u7f16\u53f7\u4e3ai\u7684\u4eba\u7684\u7956\u5148\uff08\u53ef\u80fd\u662f\u4e4b\u4e00\uff09 \nmap <string, int> Num; // \u524d\u9762\u5df2\u7ecf\u89e3\u91ca\u8fc7\u4e86 \nstring Names[50100]; // \u540c\u4e0a \nmap <string, bool> Used;  // \u8868\u793a\u8fd9\u4e2a\u4eba\u6709\u6ca1\u6709\u88ab\u52a0\u8fdbNum\u6570\u7ec4\u91cc\u9762 \n\nint Find(int x){ // \u627e\u5230\u7f16\u53f7\u4e3ax\u7684\u4eba\u6700\u65e9\u7684\u7956\u5148\uff08\u5e76\u67e5\u96c6\u7684\u4e1c\u897f\uff09 \n\tif(f[x] == x) return x;\n\tint next = Find(f[x]);\n\tf[x] = next; // \u8def\u5f84\u538b\u7f29 \n\treturn next;\n}\n\nvoid Link(int Fa, int Son){ // \u5c06\u4e24\u4e2a\u4eba\u8fde\u8d77\u6765\uff08\u628aSon\u52a0\u5230Fa\u7684\u65cf\u8c31\u4e0b\u65b9\uff09 \n\tf[Son] = f[Find(Fa)];\n}\n\nint main(){\n\tstring Name; // \u5f53\u524d\u8fd9\u7ec4\u7236\u5b50\u5173\u7cfb\u4e2d\u513f\u5b50\u7684\u540d\u5b57 \n\tstring Fa; // Fa \u2642\u4e50\u2642\u5668 \uff08\u5212\u6389\uff09\u5176\u5b9e\u662f\u8868\u793a\u5f53\u524d\u8fd9\u7ec4\u7236\u5b50\u5173\u7cfb\u4e2d\u7236\u4eb2\u7684\u540d\u5b57 \n\tchar Type = 'A'; // \u987e\u540d\u601d\u4e49\uff0c\u5f53\u524d\u8bfb\u5165\u6307\u4ee4\u7684\u79cd\u7c7b \n\tint Cur = 0; // \u5f53\u524d\u7f16\u53f7\u7f16\u5230\u7b2c\u51e0\u4e2a \n\tint Fanum; // \u8868\u793a\u5f53\u524d\u8fd9\u7ec4\u7236\u5b50\u5173\u7cfb\u4e2d\u7236\u4eb2\u7684\u7f16\u53f7 \n\twhile(Type != '$'){\n\t\tType = getchar();\n\t\tswitch(Type){\n\t\t\tcase '#':{\n\t\t\t\tcin >> Fa;\n\t\t\t\tif(!Used[Fa]){ // \u5982\u679c\u8fd9\u4eba\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u7ed9\u4ed6\u7f16\u4e2a\u53f7 \n\t\t\t\t\tUsed[Fa] = true;\n\t\t\t\t\tNum[Fa] = ++Cur;\n\t\t\t\t\tNames[Cur] = Fa;\n\t\t\t\t}\n\t\t\t\tif(f[Num[Fa]] == 0) // \u5982\u679c\u4ed6\u6ca1\u6709\u7956\u5148\uff0c\u5c06\u4ed6\u7684\u7956\u5148\u5b9a\u4e49\u4e3a\u4ed6\u81ea\u5df1 \n\t\t\t\t\tf[Cur] = Cur;\n\t\t\t\tFanum = f[Num[Fa]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '+':{\n\t\t\t\tcin >> Name;\n\t\t\t\tif(!Used[Name]){ // \u5982\u679c\u8fd9\u4e2a\u4eba\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u7ed9\u4ed6\u7f16\u4e2a\u53f7 \n\t\t\t\t\tUsed[Name] = true;\n\t\t\t\t\tNum[Name] = ++Cur;\n\t\t\t\t\tNames[Cur] = Name;\n\t\t\t\t}\n\t\t\t\tif(f[Num[Name]] == 0) // \u5982\u679c\u4ed6\u6ca1\u6709\u7956\u5148\uff0c\u5c06\u4ed6\u7684\u7956\u5148\u5b9a\u4e49\u4e3a\u4ed6\u81ea\u5df1 \n\t\t\t\t\tf[Num[Name]] = Cur;\n\t\t\t\tLink(Fanum, Num[Name]); // \u8bbe\u5b9a\uff1a\u4ed6\u662f\u4ed6\u7238\u7238\u7684\u513f\u5b50 \n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '?':{ // \u95ee\u8be2\u64cd\u4f5c\uff1a\u8f93\u51faName\u548cName\u6700\u65e9\u7684\u7956\u5148 \n\t\t\t\tcin >> Name;\n\t\t\t\tcout << Name << \" \" << Names[Find(Num[Name])]<< endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:break;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1521210890,
        "uid": 36362,
        "name": "Dilute",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5e76\u67e5\u96c6\u95ee\u9898\uff0c\u7136\u800c\u5b57\u7b26\u4e32\u7684\u5904\u7406\u633a\u9ebb\u70e6\uff0c\u7136\u540e\u9047\u5230\u4e86\u795e\u5947\u7684BUG\u3002\u3002\u3002\n\n\u9700\u8981\u7528\u5230\u6620\u5c04\u6570\u7ec4\uff08\u5173\u8054\u5f0f\u5bb9\u5668\uff09\uff0c\u5b9e\u73b0\u7f16\u53f7\u5230\u540d\u5b57\u3001\u540d\u5b57\u5230\u7f16\u53f7\u7684\u4e92\u76f8\u8f6c\u6362\uff1b\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7ed9\u540d\u5b57\u7684\u7f16\u53f7\u5fc5\u987b\u662f\u5b83\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7f16\u53f7\uff0c\u540e\u9762\u7684\u4e0d\u80fd\u8986\u76d6\uff0c\uff0c\u8fd9\u5c31\u662f\u6211\u51fa\u73b0\u7684bug\u4e4b\u4e00\u3002\u3002\n\n\u5176\u4f59\u7684\u5e94\u8be5\u5f88\u597d\u5199\u5427\u3002\u3002\n\n```cpp\n#include<iostream>  \n#include<cstdio>  \n#include<cstring>  \n#include<map>  \nusing namespace std;  \nmap<string,int>name;  \nmap<int,string>num;  \nmap<string,bool>b;  \nint f[50005];  \nstring s,ss;  \nint i,j,k,len,father;  \nbool pd=false;  \n  \nint find(int x)  \n{  \n    if (f[x]==x) return f[x];  \n    f[x]=find(f[x]);  \n    return f[x];  \n}  \n  \nvoid merge(int x,int y)  \n{  \n    int f1=find(x);  \n    int f2=find(y);  \n    f[f1]=f2;  \n    return;  \n}  \n  \nint main()  \n{  \n    freopen(\"gen.in\",\"r\",stdin);  \n    freopen(\"gen.out\",\"w\",stdout);  \n    for (i=1;i<=50000;++i)  \n      f[i]=i;  \n    i=0;  \n    while (cin>>s)   \n    {  \n        if (s==\"$\") break;  \n        if (s[0]=='#'||s[0]=='+')  \n        {  \n            len=s.length();  \n            ss=s.substr(1,len-1);  \n            if (!b[ss])  \n            {  \n                i++;  \n                name[ss]=i;  \n                b[ss]=true;  \n                num[i]=ss;  \n                if (s[0]=='#') father=i;  \n                if (s[0]=='+') merge(i,father);  \n            }  \n            else  \n            {  \n                if (s[0]=='#') father=name[ss];  \n                if (s[0]=='+') merge(name[ss],father);  \n            }  \n        }  \n        if (s[0]=='?')  \n        {  \n            if(pd==false)  \n            for (j=1;j<=i;++j)  \n              k=find(j);  \n            pd=true;  \n            len=s.length();  \n            ss=s.substr(1,len-1);  \n            cout<<ss;  \n            cout<<\" \";  \n            cout<<num[f[name[ss]]]<<endl;  \n        }  \n    }  \n    return 0;  \n}  \n```",
        "postTime": 1482647422,
        "uid": 32378,
        "name": "Malgr\u00e9_L_Guerre",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\u697c\u4e0b\u7684\u54c8\u5e0c\u8868\u7b80\u77ed\u7cbe\u608d\u2026\u2026\u5728\u770b\u9898\u89e3\u4e4b\u524d\u4e0d\u61c2\u54c8\u5e0c\u7684\u672c\u849f\u84bb\u53ea\u597d\u7528\u94fe\u8868+\u90bb\u63a5\u8868\u2026\u2026\u9ebb\u70e6\u53c8\u5bb9\u6613\u5199\u9519\uff0c\u4f46\u662f\u8fd8\u597d\u8fc7\u4e86\n\n\u641c\u7d22\u7956\u5148\u7684\u8bdd\uff0c\u9996\u5148\u60f3\u5230\u7684\u662f\u5e76\u67e5\u96c6\uff0c\u849f\u84bb\u5c31\u60f3\uff0c\u5982\u679c\u90a3\u4e9b\u540d\u5b57\u90fd\u662f\u5e8f\u53f7\u5c31\u5feb\u4e86\u3002\u6240\u4ee5\u6211\u628a\u6240\u6709\u4eba\u540d\u8f6c\u6210\u4e86\u5e8f\u53f7\uff0c\u7136\u540e\u5c31\u662f\u7b80\u5355\u7684\u5e76\u67e5\u96c6\u3002\u91cd\u70b9\u5728\u6700\u540e\u8981\u600e\u4e48\u628a\u4eba\u540d\u5bf9\u5e94\u7684\u5e8f\u53f7\u627e\u51fa\u6765\u3002\u4e8e\u662f\u6211\u7528\u4e86\u90bb\u63a5\u8868\uff0c\u6bcf\u4e2a\u5b57\u6bcd\u4f5c\u4e3a\u4e00\u4e2a\u8282\u70b9\uff0c\u6709\u4e09\u4e2a\u57df\uff1a\u5b57\u6bcd\uff0c\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u4f4d\u7f6e\u4ee5\u53ca\u540c\u7ea7\u7684\u5b57\u6bcd\u4f4d\u7f6e\u3002\u6bd4\u5982\u8bf4George\u548cGeoeee\u5728\u94fe\u8868\u4e2d\u5c31\u5171\u7528\u524d\u4e09\u4e2a\u8282\u70b9\uff0c\u800cr\u8fd9\u4e2a\u8282\u70b9\u7684\u201c\u540c\u7ea7\u5b57\u6bcd\u4f4d\u7f6e\u57df\u201d\u5c31\u5b58Geoeee\u4e2d\u7b2c\u4e8c\u4e2ae\u7684\u4f4d\u7f6e\uff0cr\u7684\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u5c31\u662f\u5b58g\u2026\u2026\u4ee5\u6b64\u7c7b\u63a8\u3002\u5f53\u7136\uff0c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u8fd8\u8981\u518d\u62c9\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u4e2a\u8282\u70b9\u7684\u5b57\u6bcd\u57df\u5c31\u5b58\u8fd9\u4e00\u4e32\u5355\u8bcd\u7684\u5e8f\u53f7\u3002\n\n\u770b\u7740\u6709\u70b9\u7ed5\uff0c\u63a5\u4e0b\u6765\u770b\u4ee3\u7801\u5427\u2026\u2026\u8f9b\u82e6\u5404\u4f4d\u770b\u5b98\u4e86\u2026\u2026\n\n\n```cpp\ntype point=^node;\n     node=record\n      letter:longint;//\u5b57\u6bcd\u57df\uff0c\u7528longint\u9632\u6b62\u5e8f\u53f7\u8d85\u51faASCII\u8303\u56f4\uff0c\u5f53\u7136\u5b57\u6bcd\u4e5f\u53ea\u80fd\u8f6c\u6362\u6210\u6570\u5b57              \u6765\u5b58\n      next,other:point;\n     end;\nvar a,b,c,d,n,m,gb,temp,tian:longint;\n    names:array[1..50000] of string[6];\n    father:array[0..50000] of longint;\n    s,s2:string;\n    p,q:point;\n    head:array['A'..'Z'] of point;\n    ch:char;\nfunction search(x:string):longint;//\u5224\u65ad\u4eba\u540d\u662f\u5426\u5b58\u5728\uff08\u4e0d\u5b58\u5728\u5c31\u8fd4\u56de0\uff09\uff0c\u4ee5\u53ca\u67e5\u627e\u5b58\u5728\u65f6\u540d\u5b57\u7684\u5e8f\u53f7\nvar v:longint;\nbegin\n v:=2;\n if head[x[1]]=nil then exit(0);\n p:=head[x[1]]^.next;\n if p=nil then exit(0);\n repeat\n  if p^.letter<>ord(x[v]) then\n    begin if p^.other=nil then exit(0) else p:=p^.other; end\n    else begin p:=p^.next; inc(v); end;\n until v>6;\n exit(p^.letter);\nend;\nprocedure zaolian(x:string);//\u5c06\u4eba\u540d\u6dfb\u52a0\u8fdb\u94fe\u8868\nvar v:longint;\nbegin\n if head[x[1]]=nil then//head\u7684\u76ee\u7684\u662f\u52a0\u5feb\u9996\u5b57\u6bcd\u67e5\u8be2\u7684\u901f\u5ea6\uff0c\u5982\u679c\u8fd9\u4e2a\u9996\u5b57\u6bcd\u4e0d\u5b58\u5728\u76f4\u63a5\u521b\u5efa\u65b0\u7684\u4e00\u4e32\u8282\u70b9\n   begin\n    new(head[x[1]]);\n    p:=head[x[1]];\n    v:=2;\n    while v<=6 do\n      begin\n       new(p^.next);\n       p:=p^.next;\n       p^.letter:=ord(x[v]);\n       inc(v);\n      end;\n    new(p^.next);\n    p:=p^.next;\n    p^.letter:=gb;\n   end\n   else begin\n    p:=head[x[1]]^.next;\n    v:=2;\n    while v<=6 do\n      begin\n       while (p^.letter<>ord(x[v])) and (p^.other<>nil) do p:=p^.other;//\u627e\u627e\u5171\u7528\u51e0\u4e2a\u8282\u70b9\n       if p^.letter=ord(x[v]) then begin p:=p^.next; inc(v); end\n         else if p^.other=nil then\n           begin\n            new(p^.other);\n            p:=p^.other;\n            p^.letter:=ord(x[v]);\n            inc(v);\n            while v<=6 do//\u6ca1\u5171\u7528\u7684\u5c31\u65b0\u5efa\n              begin\n               new(p^.next);\n               p:=p^.next;\n               p^.letter:=ord(x[v]);\n               inc(v);\n              end;\n            new(p^.next);\n            p:=p^.next;\n            p^.letter:=gb;\n            break;\n           end\n      end;\n   end;\nend;\nfunction find(o:longint):longint;\nbegin\n if father[o]<>o then father[o]:=find(father[o]);\n find:=father[o];\nend;\nprocedure union(fu,zi:longint);\nbegin\n fu:=find(fu);\n zi:=find(zi);\n father[zi]:=fu;\nend;\nbegin\n for ch:='A' to 'Z' do head[ch]:=nil;\n for a:=0 to 50000 do father[a]:=a;\n gb:=1; readln(s);\n while s[1]<>'?' do\n   begin\n    if s[1]='#' then\n      begin\n       names[gb]:=copy(s,2,6);\n       tian:=search(names[gb]);\n       if tian=0 then\n         begin\n          zaolian(names[gb]);\n          temp:=gb; inc(gb);\n         end\n         else temp:=tian;\n      end;\n    if s[1]='+' then\n      begin\n       names[gb]:=copy(s,2,6);\n       tian:=search(names[gb]);\n       if tian=0 then\n         begin\n          union(temp,gb);\n          zaolian(names[gb]);\n          inc(gb);\n         end\n         else union(temp,tian);\n      end;\n    readln(s);\n   end;\n while s[1]<>'$' do\n   begin\n    s2:=copy(s,2,6);\n    temp:=search(s2);\n    writeln(s2,' ',names[find(temp)]);\n    readln(s);\n   end;\nend.\n\n```",
        "postTime": 1478833009,
        "uid": 7997,
        "name": "\u96f7\u7535\u97f3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\u6765\u4e2ap\u515a\u7684\u9898\u89e3\n\n\u8fd9\u4e2a\u9898\u76ee\u7528\u5e76\u67e5\u96c6\u627e\u6700\u65e9\u5148\u7956\u663e\u7136\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u79cd\u601d\u8def\uff0c\u5bf9\u4e8e\u4eba\u540d\u7684\u5904\u7406\u9009\u62e9hash\u5373\u53ef\u3002\n\n```cpp\nconst maxn=50010;\n      xs=1000007;\nvar i,j,k,l,m,n,tot:longint;\n    hashp:array[0..xs]of longint;\n    fa:array[1..maxn]of longint;\n    names:array[1..maxn]of string;\nfunction hash(s:string):longint;\nvar i,k:longint;\nbegin\n    k:=0;\n    for i:=1 to length(s) do k:=((k+ord(s[i]))*100)mod xs;\n    if hashp[k]=0 then\n    begin\n      inc(tot);\n      names[tot]:=s;\n      hashp[k]:=tot;\n      exit(tot);\n    end\n    else exit(hashp[k]);\nend;\nfunction find(i:longint):longint;\nvar j,k,l:longint;\nbegin\n    j:=i;\n    while fa[j]<>j do j:=fa[j];\n    find:=j;k:=i;\n    while fa[k]<>j do //\u8def\u5f84\u538b\u7f29\n    begin\n      l:=fa[k];\n      fa[k]:=j;\n      k:=l;\n    end;\nend;\nprocedure union(f,s:longint);\nvar fp,sp:longint;\nbegin\n    fp:=find(f);sp:=find(s);  //\u4e3a\u4e86\u533a\u5206\u5408\u5e76\u7236\u4eb2\u548c\u513f\u5b50\n    if fp<>sp then fa[sp]:=fp;\nend;\nprocedure init;\nvar i,j,k,nowfa,nowson:longint;\n    s,na:string;\nbegin\n    s:='';\n    for i:=1 to maxn do fa[i]:=i;\n    while s<>'$' do\n    begin\n      readln(s);na:=s;\n      delete(na,1,1);\n      if s[1]='#' then nowfa:=hash(na);\n      if s[1]='+' then\n      begin\n        nowson:=hash(na);\n        union(nowfa,nowson);\n      end;\n      if s[1]='?' then writeln(na,' ',names[find(hash(na))]);\n    end;\nend;\nbegin\n    init;\nend.\n\n```",
        "postTime": 1478437999,
        "uid": 20390,
        "name": "lwhllw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u6211\u5199\u7684\u6bd4\u8f83\u65e0\u8bed\uff0c\u4e00\u5f00\u59cb\u9898\u76ee\u7684\u9898\u9762\u5199\u9519\u4e86\uff0c\u4ee5\u4e3a\u6bcf\u7ec4\u7236\u5b50\u5173\u7cfb\u53ea\u6709\u4e24\u884c\uff0c\u7136\u540e\u4ee5\u4e3a\u662f\u6837\u4f8b\u70b9\u7ed9\u9519\u4e86\uff0c\u7136\u540eWA\u3002\n\n\u95ee\u8fc7\u4e4b\u540e\u624d\u77e5\u9053\u53ef\u80fd\u6709\u591a\u884c\u3002C++\u7684\u5b57\u7b26\u4e32\u8bfb\u5165\u5b9e\u5728\u662f\u6709\u70b9\u6162\uff0c\u6211\u975e\u5e38\u7d2f\u7684\u7528getchar\uff08\uff09\u8bfb\u5165\uff0c\u8bb0\u5f97\u6362\u884c\u4e5f\u662f\u4e00\u4e2a\u5b57\u7b26\u3002\n\n\u5982\u679c\u9ad8\u7ea7\u70b9\u7684\u505a\u6cd5\u53ef\u4ee5\u5199\u4e00\u68f5\u641c\u7d22\u6811\uff0c\u6bcf\u6b21\u8bfb\u5165\u4e00\u4e2a\u4eba\u540d\u5c31\u67e5\u8be2\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u5982\u679c\u6ca1\u51fa\u73b0\u8fc7\u5c31\u628a\u4eba\u6570tot++\uff0c\u628a\u4ed6\u7684\u6570\u5b57\u7f16\u53f7\u8bbe\u4e3a\u73b0\u5728\u7684tot\u3002\n\n\u7136\u540e\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u7236\u5b50\u5173\u7cfb\uff0c\u8bb0\u5f97\u662f\u628a\u513f\u5b50\u7684\u7236\u8282\u70b9\u63a5\u5230\u7236\u4eb2\u7684\u7236\u8282\u70b9\u3002\n\n\u7531\u4e8e\u641c\u7d22\u6811\u5199\u8d77\u6765\u6bd4\u8f83\u70e6\uff0c\u6211\u7528map\u4e86\u3002\n\n\u7531\u4e8e\u4e00\u7ec4\u5173\u7cfb\u53ef\u80fd\u6709\u591a\u4e8e2\u884c\u7684\u4eba\u540d\u6240\u4ee5\u6211\u52a0\u4e86\u4e00\u5927\u5806\u7684\u64cd\u4f5c\uff0c\uff08\u80fd\u529b\u5f31\u5199\u7684\u591a\uff0c\u83ab\u55b7\uff09~~\u770b\u4e0d\u61c2\u4e0d\u8981\u7d27~~\u3002\n\n-------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <queue>\n#include <iostream>\n#include <map>\nusing namespace std;\nconst int maxn=50000+20;\nmap<string,int>name_num;\nmap<int,string>num_name;\nint p[maxn],tot=0;\nchar ch;\nstring s1,s2;\nint find(int x){\n    return x==p[x] ? x:p[x]=find(p[x]);\n}\nvoid Union(string a,string b){\n    int xx=name_num[a];\n    int yy=name_num[b];\n    int x=find(xx);\n    int y=find(yy);\n    p[y]=x;\n    return;\n}\ninline void add_person(string s){\n    if(name_num[s]==0){\n        name_num[s]=++tot;\n        p[tot]=tot;\n        num_name[tot]=s;\n    }\n    return;\n}\nint main(){\n    int flag=0;\n    while(true){\n        if(flag!=1) ch=getchar();\n        flag=0;\n        if(ch=='$') return 0;\n        if(ch=='?'){\n            s2=\"\";\n            for(int i=1;i<=6;i++){\n                ch=getchar();\n                s2+=ch;\n            }\n            ch=getchar();\n            int fa=find(name_num[s2]);\n            cout<<s2<<\" \"<<num_name[fa]<<endl;\n            continue;\n        }\n        if(ch=='#'){\n            s1=\"\";\n            for(int i=1;i<=6;i++){\n                ch=getchar();\n                s1+=ch;\n            }\n            ch=getchar();\n            add_person(s1);\n            while(true){\n                ch=getchar();\n                if(ch=='#'){\n                    flag=1;\n                    break;\n                }\n                if(ch=='?'){\n                    flag=2;\n                    break;\n                }\n                if(ch=='+'){\n                    s2=\"\";\n                    for(int i=1;i<=6;i++){\n                        ch=getchar();\n                        s2+=ch;\n                    }\n                    ch=getchar();\n                    add_person(s2);\n                    Union(s1,s2);\n                }\n            }\n        }\n        if(flag==2){\n            s2=\"\";\n            for(int i=1;i<=6;i++){\n                ch=getchar();\n                s2+=ch;\n            }\n            ch=getchar();\n            int fa=find(name_num[s2]);\n            cout<<s2<<\" \"<<num_name[fa]<<endl;\n            continue;\n        }\n    }    \n    return 0;\n}\n```",
        "postTime": 1471094768,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "[\u3010P2814\u5bb6\u8c31\u539f\u9898\u3011](https://www.luogu.org/problemnew/show/P2814)\n# \u9898\u76ee\u63cf\u8ff0\uff1a\n### \u7ed9\u4f60\u4e00\u957f\u7a9c\u540d\u5b57\uff0c\u8ba9\u4f60\u641e\u51fa\u4ed6\u4eec\u7684\u8001\u7956\u5148\n\n# Solution:\n## \u4e00\u773c\u5e76\u67e5\u96c6\u9898\uff0c\u800c\u8fd9\u9053\u9898\u76ee\u53ea\u8981\u5148\u641e\u4e00\u4e2a\u66b4\u529b\u54c8\u5e0c\uff0c\u518d\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u5e76\u67e5\u96c6\uff01\n## \u66b4\u529b\u54c8\u5e0c\u7684\uff1a\u66b4\u529b\u628a\u5b57\u7b26\u4e32\u8f6c\u6570\u5b57\uff0c\u6709\u5229\u4e8e\u5e76\u67e5\u96c6\u7684\u5b9e\u73b0\uff1a\n```cpp\ninline int chang(string s){\n    for(register int i=1;i<=t;i++)\n        if(str[i]==s) return i;//\u66b4\u529b\u628a\u91cd\u590d\u7684\u59d3\u540d\u5220\u53bb\n        str[++t]=s;\n    return t;//\u8fd4\u56de\u6bcf\u4e00\u4e2a\u540d\u5b57\u7684\u7f16\u53f7\n}\n```\n## \u4e8e\u662f\u5c31\u662f\u65e0\u8111\u51b0\u8336\u673a+\u5c0f\u6a21\u62df\u5c31\u8f7b\u677eAC\u5566\uff1a\n```cpp\nint main(){\n\tfor(register int i=1;i<=5e4+1;i++) fa[i]=i;\n\tdo{//\u5bf9\u4e0d\u540c\u7684\u7b26\u53f7\u6309\u7167\u9898\u76ee\u610f\u601d\u4e71\u641e\u5c31\u884c\u4e86\n\t\tcin>>c;\n\t\tif(c=='#') cin>>s1;\n\t\tif(c=='+'){ cin>>s2; if(s1!=s2) fa[find(chang(s2))]=find(chang(s1));  }\n\t\tif(c=='?'){ cin>>s2; cout<<s2<<\" \"<<str[find(chang(s2))]<<endl;  }\n\t}while(c!='$');\n\treturn 0;\n}\n```\n## CODE\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint const M=5e4+5;\nint n,m,fa[M],ans,t,x;\nstring s1,s2,str[M];\nchar c;\ninline int chang(string s){\n    for(register int i=1;i<=t;i++)\n        if(str[i]==s) return i;\n        str[++t]=s;\n    return t;\n}\nint find(int x){ if(x==fa[x]) return x;  return fa[x]=find(fa[x]); }//\u4e00\u53e5\u5e76\u67e5\u96c6\nint main(){\n\tfor(register int i=1;i<=5e4+1;i++) fa[i]=i;\n\tdo{\n\t\tcin>>c;\n\t\tif(c=='#') cin>>s1;\n\t\tif(c=='+'){ cin>>s2; if(s1!=s2) fa[find(chang(s2))]=find(chang(s1));  }\n\t\tif(c=='?'){ cin>>s2; cout<<s2<<\" \"<<str[find(chang(s2))]<<endl;  }\n\t}while(c!='$');\n\treturn 0;\n}\n\n```\n## \u4e3a\u4ec0\u4e48\u603b\u89c9\u5f97\u8fd9\u9053\u9898\u76ee\u662f\u6076\u610f\u8bc4\u5206\uff0c\u6700\u591a\u4e00\u9053\u9ec4\u9898\u5427\uff01\n\n",
        "postTime": 1551662250,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "## $STL$\u543c\u554a\uff01\n### \u6211\u7528\u4e86$map$\n### map<string,int>\u7684\u7528\u5904\uff1a\u628a\u4eba\u540d\u53d8\u6210\u5e8f\u53f7\n### map<int,string>\u7684\u7528\u5904\uff1a\u628a\u5e8f\u53f7\u53d8\u6210\u4eba\u540d\n```cpp\n#include<bits/stdc++.h>//\u61d2\u4eba\u4e13\u7528\u5934\u6587\u4ef6\nusing namespace std;\nint f[50000],cnt,a2,b2;map<string,int>mmp1;map<int,string>mmp2;string a1,b1;\nint find(int x){if(x==f[x])return x;return f[x]=find(f[x]);}\nmain()\n{\n\tfor(register int i=0;i<50000;++i)f[i]=i;//\u521d\u59cb\u5316\n\tfor(;;)//\u5c4e\u5faa\u73af\n\t{\n\t\tchar opt;for(;opt=getchar(),opt!='#'&&opt!='+'&&opt!='?'&&opt!='$';);//\u8f93\u5165\n\t\tswitch(opt)\n\t\t{\n\t\t\tcase'$':return 0;//\u7ed3\u675f\n\t\t\tcase'#':cin>>a1;\n\t\t\t\t\tif(mmp1.count(a1))a2=mmp1[a1];//\u65e7\u6863\u6848\u91cc\u6709\u8fd9\u4e2a\u4eba\uff0c\u628a\u6863\u6848\u7ffb\u51fa\u6765\u67e5\u770b\n\t\t\t\t\telse{a2=cnt++;mmp1[a1]=a2;mmp2[a2]=a1;}//\u65b0\u5efa\u4e00\u4e2a\u6863\u6848\n\t\t\t\t\tbreak;//\u5565\u90fd\u4e0d\u5e72\n\t\t\tcase'+':cin>>b1;\n\t\t\t\t\tif(mmp1.count(b1))b2=mmp1[b1];//\u65e7\u6863\u6848\u91cc\u6709\u8fd9\u4e2a\u4eba\uff0c\u628a\u6863\u6848\u7ffb\u51fa\u6765\u67e5\u770b\n\t\t\t\t\telse{b2=cnt++;mmp1[b1]=b2;mmp2[b2]=b1;}//\u65b0\u5efa\u4e00\u4e2a\u6863\u6848\n\t\t\t\t\tf[b2]=find(a2);//\u50a8\u5b58b2\u662fa2\u7684\u5b69\u5b50\n\t\t\t\t\tbreak;\n\t\t\tcase'?':cin>>b1;b2=mmp1[b1];//\u628a\u6863\u6848\u7ffb\u51fa\u6765\u67e5\u770b\n\t\t\t\t\ta2=find(b2);//\u627e\u51fab2\u7684\u7236\u4eb2\n\t\t\t\t\ta1=mmp2[a2];\n\t\t\t\t\tcout<<b1<<' '<<a1<<endl;//\u8f93\u51fa\n\t\t}\n\t}\n}/**/\n```",
        "postTime": 1549617194,
        "uid": 90693,
        "name": "_\u2022\u0301\u3078\u2022\u0301\u256c_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u6a21\u677f\u9898,\u770b\u5927\u4f6c\u4eec\u90fd\u7528\u5b57\u7b26\u54c8\u5e0c,\u50cf\u6211\u8fd9\u79cd\u4e0d\u4f1a\u54c8\u5e0c\u7684\u849f\u84bb\u53ea\u80fd\u7528map\u4e86\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<map>\n#include<string>\nusing namespace std;\nmap<string,string>f;\nstring find(string x)\n{\n    return f[x]==x?x:f[x]=find(f[x]);//\u67e5\u627ex\u7684\u7956\u5148\n}\nchar ch;\nstring s,x;\nint main()\n{\n    for(int i=1;i;i++)\n    {\n        cin>>ch;\n        if(ch=='$') break;\n        if(ch=='#')\n        {\n            cin>>x;\n            if(f[x]==\"\") f[x]=x;//x\u8fd8\u6ca1\u6709\u7956\u5148\uff0c\u5c06x\u7684\u7956\u5148\u8bbe\u4e3a\u81ea\u5df1\n        }\n        else if(ch=='+')\n        {\n            cin>>s;\n            f[s]=x;//\u5c06s\u7684\u7956\u5148\u8bbe\u4e3ax\uff0c\u90a3\u4e48x\u7684\u7956\u5148\u4e5f\u662fs\u7684\u7956\u5148\u4e86\n        }\n        else if(ch=='?')\n        {\n            cin>>s;\n            cout<<s<<' '<<find(s)<<endl;//\u8f93\u51fas\u7684\u7956\u5148\u662f\u8c01\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1546520341,
        "uid": 115122,
        "name": "\u79bb\u4eba\u600e\u633d",
        "ccfLevel": 0,
        "title": "\u5bb6\u8c31"
    },
    {
        "content": "\u770b\u597d\u50cf\u6ca1\u6709\u7528`Trie`\u6811\u505a\u7684\uff0c \u03a3 (\uff9f\u0414\uff9f;)\u00a0\n\n## \u601d\u8def\n\n\u8868\u793aC++\u9009\u624b\u6709`STL`\u76f4\u63a5`map`......(\uff34\u25bd\uff34)\u8868\u793a\u4e0d\u719f\u3002\n\n\u56e0\u4e3a\u662f\u540d\u5b57\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u50cf\u539f\u6765\u4e00\u6837\u505a\u5e76\u67e5\u96c6\uff0c\u6bd5\u7adf\u5b57\u7b26\u4e32\u4e0d\u80fd\u76f4\u63a5\u5f53\u4e0b\u6807\u7528\uff08\u8c01\u8bf4\u7684\uff0c`PHP`\u5c31\u884c\u2510(\uff9f\uff5e\uff9f)\u250c \uff09\u3002\u90a3\u6211\u4eec\u8003\u8651\u7ed9\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e00\u4e2a\u5e8f\u53f7(`Id`)\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u505a\u5e76\u67e5\u96c6\u4e86\u3002\n\n\u90a3\u6211\u4eec\u600e\u4e48\u7ef4\u62a4\u5462\uff1f\u628a\u6bcf\u4e2a\u540d\u5b57\u5b58\u4e0b\u6765\u600e\u4e48\u6837\uff1f\u600e\u4e48\u5b58\u5462\uff1f\n\n\u76f4\u63a5\u5b58\uff1f\u90a3\u5224\u65ad\u662f\u4e0d\u662f\u5b58\u5728\uff0c\u6211\u4e48\u8981\u90fd\u904d\u5386\u4e00\u904d\u6240\u6709\u5df2\u77e5\u7684\u5224\u91cd\u518d\u8d4b\u5e8f\u53f7\u3002\n\n`Trie`\u6811\u600e\u4e48\u6837\u3002\u597d\u50cf\u86ee\u597d\u73a9\u7684\u3002\u5224\u91cd\u76f4\u63a5`getId`\u90a3\u8f93\u51fa\u600e\u4e48\u529e\uff1f\u5012\u7740\u5b58\uff0c\u8bb0\u5f55`Id`\u7684\u8282\u70b9\u4f4d\u7f6e\u7684\u5b57\u7b26\uff0c\u5411\u4e0a\u8dd1\u3002\n\n\u6240\u4ee5\u5462\uff0c\u5728`Trie`\u6811\u6211\u4eec\u5f00\u4e24\u4e2a\u53d8\u91cf\u8bb0\u5f55\u4e0b\u5230\u5f53\u524d\u8282\u70b9\u7684\u8fb9\u6240\u4ee3\u8868\u7684\u5b57\u7b26\u548c\u7236\u8282\u70b9\uff0c\u518d\u5f00\u4e2a\u6570\u7ec4\u8bb0\u5f55`Id`\u7684\u8282\u70b9\u4f4d\u7f6e\uff08\u94fe\u5f0f\u524d\u5411\u661f\u6709\u6728\u6709\uff0c\u5f88\u50cf(\u2299o\u2299)\u2026\uff09\uff0c\u7136\u540e......\u6ca1\u6709\u4e86\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include <cstdio>\n#include <cstring>\nconst int maxA = 26 + 5;\nconst int maxN = 50000 + 5;\nconst int maxL = 6 + 5;\nconst int maxV = maxL * maxN;\n\nint Cnt, nCnt;\nint IdPos[maxN];\nstruct tree {\n    int Id, Parent, Son[maxA];\n    char Ch;\n} Trie[maxV];\nvoid Insert(const char *arr, const int &Len) {\n    int Root = 0;\n    for(int i = Len; i; --i) {\n        if(!Trie[Root].Son[arr[i - 1] - 'a']) {\n            Trie[Root].Son[arr[i - 1] - 'a'] = ++Cnt;\n            Trie[Cnt].Parent = Root;\n        }\n        Root = Trie[Root].Son[arr[i - 1] - 'a'];\n        Trie[Root].Ch = arr[i - 1];\n    }\n    Trie[Root].Id = ++nCnt;\n    IdPos[nCnt] = Root;\n}\nint getId(const char *arr, const int &Len) {\n    int Root = 0;\n    for(int i = Len; i; --i) {\n        if(!Trie[Root].Son[arr[i - 1] - 'a'])\n            return 0;\n        Root = Trie[Root].Son[arr[i - 1] - 'a'];\n    }\n    return Trie[Root].Id;\n}\nvoid Print(const int &Id) {\n    // printf(\"%d %d %d \", Cnt, Id, IdPos[Id]);\n    for(int i = IdPos[Id]; i; i = Trie[i].Parent) {\n        if(Trie[i].Id == Id)\n            putchar(Trie[i].Ch - 'a' + 'A');\n        else \n            putchar(Trie[i].Ch);\n    }\n    putchar('\\n');\n}\n\nint Parents[maxN];\nint Query(const int &X) {\n    return X == Parents[X] ? X : Parents[X] = Query(Parents[X]);\n}\nvoid Union(const int &X, const int &Y) {\n    int pX = Query(X), pY = Query(Y);\n    Parents[pX] = pY;\n}\n\nint PId, SId;\nchar tmp[maxL];\nint main() {\n    while(true) {\n        scanf(\"%s\", tmp);\n        if(tmp[0] == '#') {\n            tmp[1] = tmp[1] - 'A' + 'a';\n            if(!getId(tmp + 1, 6)) \n                Insert(tmp + 1, 6);\n            PId = getId(tmp + 1, 6);\n            Parents[PId] = Parents[PId] ? Parents[PId] : PId;\n            // printf(\"# %d %d \\n\", PId, Parents[PId]);\n        } else if(tmp[0] == '+') {\n            tmp[1] = tmp[1] - 'A' + 'a';\n            if(!getId(tmp + 1, 6)) \n                Insert(tmp + 1, 6);\n            SId = getId(tmp + 1, 6);\n            Parents[SId] = Parents[SId] ? Parents[SId] : SId;\n            // printf(\"+ %d %d\\n\", SId, Parents[SId]);\n            Union(SId, PId);\n        } else if (tmp[0] == '?') {\n            printf(\"%s \", tmp + 1);\n            tmp[1] = tmp[1] - 'A' + 'a';\n            SId = getId(tmp + 1, 6);\n            if(SId) {\n                PId = Query(SId);\n                Print(PId);\n            } else {\n                tmp[1] = tmp[1] - 'a' + 'A';\n                printf(\"%s\\n\", tmp + 1);\n            }\n        } else if(tmp[0] == '$')\n            break;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1540900051,
        "uid": 8173,
        "name": "\u547c\u5578\u5c71\u5e84",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\n\n------------\n\n\n## **Map**\u548c**set\u96c6\u5408**\u5e76\u7528\uff0c\u4e3b\u7b97\u6cd5\u8fd8\u662f\u5e76\u67e5\u96c6\n\n### set\u5224\u65ad\u662f\u5426\u5b58\u5165\u8be5\u4eba\n\n### \u7406\u89e3\u7b80\u5355 \n\n------------\n### set\u7528\u6cd5\uff1a\n# \u63d2\u5165\uff1as.insert(\u5143\u7d20)\n# \u67e5\u627e\uff1as.find(\u5143\u7d20)     \n## \u8fd4\u56de\u5143\u7d20\u6240\u5728\u4f4d\u7f6e\uff0c\u4e0d\u5b58\u5728\u5219\u8fd4\u56des.end()\n\n------------\n\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint b[50000];              //b\u7528\u4e8e\u5e76\u67e5\u96c6\nint ans[50000],anss[50000];//ans\u5b58\u7b54\u6848\u7956\u5b97,anss\u5b58\u8981\u6c42\u7684\u4eba\uff08\u5747\u5b58\u7f16\u53f7\uff09\nstring st,st1;             \nstring name[50000];        //\u7f16\u53f7-->\u4eba\u540d\nset<string> s;             //Set\uff1a\u4fdd\u5b58\u4eba\u540d\nmap<string,int> m;         //Map\uff1a\u4eba\u540d-->\u7f16\u53f7\nint i,j,n,t,x;\nint find(int k){       //\u5e76\u67e5\u96c6\u64cd\u4f5c\n    if(b[k]==k)return b[k];\n    else{\n        b[k]=find(b[k]);\n        return(b[k]);\n    }\n}\nint main(){\n    st=\"orzakcyc\";   //\u521d\u59cb\u5316\u5b57\u7b26\u4e32\u8bfb\u5165\n    while(st!=\"$\"){\n        cin>>st;\n        if(st[0]!='?'){\n          st1=st.substr(1,6);//\u4e34\u65f6\u5b57\u7b26\u4e32\n          if(s.find(st1)==s.end()){  //\u5224\u65ad\u662f\u5426\u5728\u96c6\u5408\u4e2d\uff08\u5148\u524d\u51fa\u73b0\u8fc7\uff09\n          \tn++;\n            b[n]=n;\n            name[n]=st1;\n            s.insert(st1);   //\u5b58\u5165Set\n            m[st1]=n;        //\u5b58\u5165Map\n          }\n          if(st[0]=='#'){    //x\u5b58\u50a8\u7236\u4eb2\u7f16\u53f7\n          \tx=m[st1];\n          }\n          else{\n          \tb[find(b[m[st1]])]=find(b[x]);\n          }\n        }\n        else{\n        \tst1=st.substr(1,6);\n        \tt++;\n        \tanss[t]=m[st1];\n        \tans[t]=find(b[m[st1]]); \n        }\n    }\n    for(i=1;i<=t;i++)\n      cout<<name[anss[i]]<<' '<<name[ans[i]]<<endl;\n    return 0;\n}\n```\n\u8fd8\u526910days\u4e86\n\u52a0\u6cb9\uff01",
        "postTime": 1540899917,
        "uid": 27771,
        "name": "Tofu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\u4e0d\u4f1a\u7528map\u7684\u60b2\u5267\uff0c\u53ea\u597d\u81ea\u5df1\u5199\u4e00\u4e2a\u54c8\u5e0c\u7b97\u6cd5,\u5c31\u662f\u7ed9\u6bcf\u4e00\u4e2a\u8d4b\u503c\uff0c\u8d8a\u5927\u8d8a\u597d\uff0c\u56e0\u4e3a\u6211\u7528\u7684\u662f50000\uff0c\u518d\u52a0\u4e0a\u5e76\u67e5\u96c6\uff0c\u5b8c\u7f8eAC\n```cpp\n#include<iostream>\nusing namespace std;\nconst int N=50002;\nint f[N],base[6];\nstring name[N],s;\nbool b[N];\nint hash(string s)\n{\n\tint hash_=0;\n\tfor(int i=0;i<s.size();i++) hash_+=(s[i]-64)*base[i];\n\treturn hash_%49999+1;\n}\nint find(int x)\n{\n\tif(f[x]!=x) f[x]=find(f[x]);\n\treturn f[x];\n}\nvoid unionn(int x,int y)\n{\n\tint u=find(x);\n\tint v=find(y);\n\tif(u==v) return;\n\tf[u]=v;\n}\nint NAMEIP(int h_ash,string s)\n{\n\twhile(b[h_ash]&&name[h_ash]!=s)\n\t{\n\t\th_ash++;\n\t\tif(h_ash>50000) h_ash=1;\n\t}\n\treturn h_ash;\n}\nint main()\n{\n\tbase[0]=1;\n\tfor(int i=1;i<6;i++) base[i]=base[i-1]*10;\n\tdo\n\t{\n\t\tcin>>s;\n\t\tif(s==\"$\") break;\n\t\tint _hash=hash(s.substr(1,6));\n\t\tint nameip=NAMEIP(_hash,s.substr(1,6));\n\t\tif(!b[nameip])\n\t    {\n\t    \tb[nameip]=1;\n\t    \tname[nameip]=s.substr(1,6);\n\t        f[nameip]=nameip;//\u81ea\u5df1\u505a\u7236\u4eb2 \n\t    }\n\t    int father;\n\t    if(s[0]=='#') father=nameip;\n\t    if(s[0]=='+') unionn(nameip,father);\n\t    if(s[0]=='?') cout<<s.substr(1,6)<<\" \"<<name[find(nameip)]<<endl;\n\t}while(s!=\"$\");\n} \n```",
        "postTime": 1536996197,
        "uid": 54712,
        "name": "Forestcgl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\u4e00\u9053\u5e76\u67e5\u96c6\u7684\u9898\u76ee\uff0c\u53ea\u4e0d\u8fc7\u5c06\u6570\u5b57\u53d8\u6210\u5b57\u7b26\u4e32\u800c\u5df2\n\n\u53ef\u4ee5\u628a\u5b57\u7b26\u4e32\u8f6c\u5316\u6210\u7f16\u7801\u64cd\u4f5c\uff0c\u4e0d\u8fc7\u7528c++\u91cc\u7684map\u66f4\u5feb\n\n\u5b9a\u4e49\u4e00\u4e2amap\uff0c\u7136\u540e\u53ef\u4ee5\u76f4\u63a5\u7528\u5e76\u67e5\u96c6\u7684\u6a21\u677f\u89e3\u51b3\u8fd9\u9053\u95ee\u9898\n\n\u5177\u4f53\u7ec6\u8282\u770b\u6ce8\u89e3\uff0c\u4e0a\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<map>\n#include<vector>\nusing namespace std;\nmap<string,string> f;\nstring x,y;\nstring ff(string x)\n{\n    if(f[x]==x) return x;\n    return f[x]=ff(f[x]);\n}\n//\u5bfb\u627e\u7956\u5148\nvoid unite(string x,string y)\n{\n    x=ff(x),y=ff(y);\n    if(x==y) return;\n    f[x]=y;\n}\n//\u5c06\u4e24\u4e2a\u4eba\u7684\u7956\u5148\u5408\u5e76\nint main()\n{\n    while(true)\n    {\n        string s;\n        cin>>s;\n        char c=s[0];\n        if(s.size()>1) s=s.substr(1,s.size()-1);\n        //\u5b57\u7b26c\u4e3a\u8981\u6c42\uff0c\u5b50\u4e32s\u4e3a\u4eba\u540d\n        if(c=='#')\n        {\n            x=s;\n            if(f.count(x)==0) f[x]=x;\n            //\u5982\u679c\u6ca1\u6709\u7956\u5148\uff0c\u5b9a\u4e49\u7956\u5148\u4e3a\u81ea\u5df1\uff0c\u9632\u6b62\u62a5\u9519\n        }\n        else if(c=='+')\n        {\n            y=s;\n            if(f.count(y)==0) f[y]=y;\n            unite(y,x);\n        }\n        else if(c=='?')\n        {\n            cout<<s<<' '<<ff(s)<<'\\n';\n        }\n        else if(c=='$')\n        {\n            break;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1527765527,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\n```cpp\n//designed by Sweetangel\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn = 99999;\ninline int read()\n{\n  int x=0,f=1;char c=getchar();\n  while(c>'9'||c<'0') {if(c=='-') f=-1;c=getchar();}\n  while(c>='0'&&c<='9') {x=x*10+c-'0'; c=getchar();}\n  return x*f;\n```\n}//\u4ece\u4e0a\u4e00\u4e2a\u7a0b\u5e8f\u6539\u8fc7\u6765\u7684\u61d2\u5f97\u5220\uff0c\u5c31\u6302\u5728\u8fd9\u91cc\u4e86\u3002\u3002\u3002\n\n\n\n\n\n    \n```cpp\nint e,F[maxn];\nmap<string,int> map1;\nmap<int,string> map2; \n//\u4e24\u4e2amap\u7528\u6765\u5b9e\u73b0\u5b57\u7b26\u4e32\u548c\u6570\u5b57\u7684\u4e92\u5316\n//\u770b\u5230\u697c\u4e0a\u5927\u4f6c\u7684\u4ee3\u7801\u624d\u77e5\u9053\u53ef\u4ee5map<string,string>...\nint find(int r)\n{\n  if(r!=F[r])\n    F[r] = find(F[r]); //\u8def\u5f84\u538b\u7f29\n  return F[r];\n}\nint main()\n{    \n  for(int i=1;i<=maxn;i++)\n    F[i] = i;//\u521d\u59cb\u5316\u5e76\u67e5\u96c6\n  int x,rx,y,ry;\n  //\u56e0\u4e3a\u53ef\u80fd\u4e00~~\u591a\uff0c\u6240\u4ee5\u7533\u8bf7\u5728\u5916\u9762\n  while(true)\n  {\n    char c;\n    cin>>c;\n    if(c=='$')\n      break;\n   //\u8bfb\u5165\u5224\u5b9a\u7b26\u53f7 #+?$,\u5e76\u5224\u5b9a\u8df3\u51fa    \n    string ss;\n    cin>>ss;\n    //\u8bfb\u5165\u5b57\u7b26\u4e32\u5e76\u5728\u4e0b\u9762\u5b8c\u6210\u7f16\u53f7\n    if(!map1[ss])\n    {\n      e++;\n      map1[ss] = e;\n         map2[e] = ss; \n       }\n    //\u7f16\u53f7\n       if(c=='#')\n       {\n       y = map1[ss];\n       ry = find(y);\n    }\n    //\u8bb0\u5f55\u7236\u4eb2\n       if(c=='+')\n       {\n         x = map1[ss];\n         rx = find(x);\n         if(rx!=ry)\n         F[rx] = ry; //\u6613\u9519\u70b9\uff1a\u4e00\u5b9a\u8981\u8ba9\u513f\u5b50\u6307\u5411\u7236\u4eb2...\uff0c\u53cd\u5411\u5c31wa...\n       }\n    //\u63d2\u5165\u513f\u5b50\n       if(c=='?')\n       cout<<ss<<\" \"<<map2[find(map1[ss])]<<endl;\n    }\n    //\u8f93\u51fa\u7b54\u6848\n  return 0;\n  //\u5b8c\u7f8e\u7ed3\u675f\uff01\n}\n```",
        "postTime": 1507729741,
        "uid": 28984,
        "name": "_\u8bf8\u795e\u9ec4\u660f",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "\u4ee3\u7801\u77ed\u5c0f\uff0c\u51b0\u8336\u51e0\uff08\u5e76\u67e5\u96c6\uff09+map\u8f7b\u677e\u8fc7\uff0cmap\u53ea\u662f\u7528\u6765\u65b9\u4fbf\u540d\u5b57\u8f6c\u5e8f\u53f7\uff0c\u4e3b\u8981\u8fd8\u662f\u51b0\u8336\u51e0\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <map>\nusing namespace std;\nint fa[50005];\n//fa\u662f\u6807\u53f7\u4e3ai\u7684\u4eba\u6240\u5728\u5bb6\u65cf\u7684\u7956\u5148\u6807\u53f7\nchar c;\n//c\u662f\u5f53\u524d\u64cd\u4f5c\u540d\nstring n_f[50005],s;\n//n_f\u662f\u6807\u53f7\u6240\u4ee3\u8868\u7684\u4eba\u540d\uff0cs\u662f\u5f53\u524d\u4eba\u540d\u3002  \nint n,f;\n//n\u8868\u793a\u5f53\u524d\u7684\u4eba\u6570\uff0cf\u8868\u793a\u5f53\u524d\u64cd\u4f5c\u7684\u7236\u4eb2\u6807\u53f7\u3002 \nmap<string,int>f_n;\n//f_n\u662f\u4eba\u540d\u6240\u4ee3\u8868\u7684\u6807\u53f7 \nint find(int xx) {return xx!=fa[xx]?fa[xx]=find(fa[xx]):xx;}\nint main(){\n    scanf(\"%c\",&c);\n    while (c!='$'){\n        cin>>s; \n        if (f_n.find(s)==f_n.end()) {\n            n_f[n]=s;\n            f_n[s]=n;\n            fa[n]=n;\n            n++; \n```\n}//\u68c0\u67e5\u5f53\u524d\u4eba\u540d\u662f\u5426\u767b\u5f55\uff0c\u6ca1\u6709\u5219\u767b\u5f55\n```cpp\n        if (c=='#') f=f_n[s];\n        if (c=='+') fa[f_n[s]]=fa[f];\n        if (c=='?') cout<<s<<\" \"<<n_f[find(f_n[s])]<<endl;//\u4e09\u79cd\u64cd\u4f5c\u7684\u5904\u7406 \n        scanf(\"\\n%c\",&c);//\u5173\u952e\u662f\u90a3\u4e2a\\n\uff0c\u6211\u56e0\u4e3a\u6ca1\u5f0a\u6389\u56de\u8f66\u7b26\u5bfc\u81f4\u6240\u6709\u7684\u64cd\u4f5cc\u90fd\u53d8\u6210\u4e86\u56de\u8f66\\n\uff0c\u4e8e\u662f\u5c31\u5bb3\u6211\u67e5\u4e86\u534a\u5929 \n    }\n    return 0;\n}\n\n```",
        "postTime": 1471404776,
        "uid": 745,
        "name": "dph754132771",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    },
    {
        "content": "**\u9898\u76ee**\n\n[Luogu2814 \u5bb6\u8c31](https://www.luogu.org/problemnew/show/P2814)\n\n---------\n\n**\u601d\u8def**\n\n\u8fd9\u9898\u5982\u679c\u6ca1\u6709\u5b57\u7b26\u4e32\u5904\u7406\uff0c\u5c31\u662f\u4e00\u9053~~ez~~\u7684\u5e76\u67e5\u96c6\u677f\u5b50\u9898\u3002\n\n\u6240\u4ee5\u8fd9\u9898\u7684\u96be\u70b9\u5728\u4e8e\uff1a\u5b57\u7b26\u4e32\u5904\u7406\u3002\n\n\u5982\u679c\u6211\u4eec\u80fd\u6709\u4e00\u4e2a$f(x)$\u8868\u793a\u5b57\u7b26\u4e32$x$\u5bf9\u5e94\u7684\u7f16\u53f7$f(x)$\uff0c\u518d\u6709\u4e00\u4e2a$g(x)$\u8868\u793a\u7f16\u53f7\u4e3a$x$\u7684\u5b57\u7b26\u4e32\uff0c\u5728\u6bcf\u6b21\u8f93\u5165\u540e\u8c03\u4e0b$f(x)$\uff0c$merge$\u4e00\u4e0b\uff0c\u8be2\u95ee\u7684\u65f6\u5019$g($\u6839\u8282\u70b9$)$\uff0c\u5c31\u80fd\u505a\u51fa\u6765\u4e86\u3002\n\n$map$\u65f6\u95f4\u590d\u6742\u5ea6\u9ad8\uff0c\u6211\u5728\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b$hash$\u7684\u89e3\u6cd5\u3002\n\n\u666e\u901a$hash$\u51fd\u6570\u76f4\u63a5\u5b8c\u6210\u4e86$f(x)$\u51fd\u6570\u7684\u529f\u80fd\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4ee4$names[hash(name)]=name$\uff0c\u4ee5\u540e\u8be2\u95ee\u7684\u65f6\u5019\u76f4\u63a5$names[getroot(hash(name)]$\uff0c\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n--------\n\n**$Hash$\u662f\u4ec0\u4e48\uff1f**\n\n\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5927\u5b57\u7b26\u4e32\u770b\u6210\u4e00\u4e2a$T$\u8fdb\u5236\u4f4d\u7684\u6574\u6570\uff0c\u800c\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u6709\u5b83\u5bf9\u5e94\u7684\u503c\u3002\n\n\u4e60\u60ef\u4e0a\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u6bcf\u4e2a\u5b57\u6bcd\u7684ASCII\u4f5c\u4e3a\u5b83\u4ee3\u8868\u7684\u503c\u3002\n\n\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u4f60\u7684\u7ed3\u679c\u9700\u8981%\u4e00\u4e2a$MOD$\u3002\n\n```cpp\nint hash(char str[]) //str\u7684\u5b57\u7b26\u4e32\u90e8\u5206\u4ecestr[1]\u5f00\u59cb\n{\n    int i, l = strlen(str + 1), ret = 0;\n    for (i = 1; i <= l; i++) ret = ((ret * T + MOD) % MOD + str[i] - '0' + MOD) % MOD;\n    return (ret + MOD) % MOD;\n} //\u8fd9\u91cc\u7684\u5b9e\u73b0\u53ef\u4ee5\u624b\u7b97\u6a21\u62df\u4e00\u4e0b\n```\n\n-------\n\n**\u53c2\u8003~~\u5927\u5e38\u6570~~\u4ee3\u7801**\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\nconst int MOD = 1000007, T = 12346; //\u5b9a\u4e49hash\u7684MOD\u548cT\nint fa[MOD]; //\u5e76\u67e5\u96c6\nchar names[MOD][7]; //names\u7528\u6765\u5b9e\u73b0\u4ece\u5b57\u7b26\u4e32\u67e5\u5230\u7f16\u53f7\u7684\u529f\u80fd\n\nint get(int x)\n{\n    if (fa[x] != x) fa[x] = get(fa[x]);\n    return fa[x];\n} //\u4f60\u7684get_root\u5199\u6cd5\u8ddf\u8fd9\u4e2a\u4e0d\u4e00\u6837\u6ca1\u5173\u7cfbQwQ\n\nint hash(char str[])\n{\n    int i, l = strlen(str + 1), ret = 0;\n    for (i = 1; i <= l; i++) ret = ((ret * T + MOD) % MOD + str[i] - '0' + MOD) % MOD;\n    return (ret + MOD) % MOD;\n}\n\nint main()\n{\n    char ch = getchar(), name[7];\n    int i, lastfa = -1, nowhash, t;\n    //lastfa\u662f\u4e0a\u6b21\u8bfb\u5165\u7684\u7236\u4eb2\u8282\u70b9\uff08\u5b57\u7b26\u4e32\u7f16\u53f7\uff09\uff0c\u4e5f\u5c31\u662f\u5e26'#'\u7684\u8282\u70b9\n    for (i = 1; i <= MOD; i++) fa[i] = i; //\u5e76\u67e5\u96c6\u521d\u59cb\u5316\uff0c\u8fd9\u9053\u9898\u91cc\u4e5f\u8bf4\u7684\u8fc7\u53bb\uff0c\u5982\u679c\u6ca1\u6709\u7236\u4eb2\u8282\u70b9\uff0c\u6700\u65e9\u7956\u5148\u5c31\u662f\u81ea\u5df1\n    while (ch != '$')\n    {\n        for (i = 1; i <= 6; i++) name[i] = getchar(); //\u8bfb\u5165\u540d\u5b57\n        nowhash = hash(name); //\u4ee4nowhash=\u5f53\u524d\u540d\u5b57\u7684hash\u503c\uff08\u7f16\u53f7\uff09\uff0c\u4e3a\u4e86\u9632\u6b62\u4ee5\u540e\u7684\u91cd\u590d\u8c03\u7528hash()\n        for (i = 1; i <= 6; i++) names[nowhash][i] = name[i]; //\u4ee4names[hash(name)]=name\n        if (ch == '#') lastfa = nowhash;  //\u66f4\u65b0lastfa\n        else if (ch == '+') fa[get(nowhash)] = get(lastfa); //\u4f7f\u6b64\u8282\u70b9\u7684\u6700\u65e9\u7956\u5148\u4e3a\u5b83\u7236\u4eb2\u7684\u6700\u65e9\u7956\u5148\uff0c\u76f8\u5f53\u4e8e\u5408\u5e76\u5b83\u6240\u5728\u96c6\u5408\u4e0e\u7236\u4eb2\u8282\u70b9\u6240\u5728\u96c6\u5408\uff0c\u6240\u6709\u8282\u70b9\u7684\u6700\u65e9\u7956\u5148\u7edf\u4e00\n        else if (ch == '?')\n        {\n            for (i = 1; i <= 6; i++) putchar(name[i]); //\u5148\u8f93\u51fa\u672c\u4eba\u7684\u540d\u5b57\n            putchar(' '); //\u4e00\u4e2a\u7a7a\u683c\n            for (i = 1; i <= 6; i++) putchar(names[get(nowhash)][i]); //\u6700\u65e9\u7956\u5148\u7684\u540d\u5b57\n            putchar('\\n'); //\u4e00\u4e2a\u6362\u884c\u7b26\n        }\n        ch = getchar();\n        while (ch == '\\r' || ch == '\\n' || ch == EOF) ch = getchar(); //\u8fd9\u91cc\u662f\u53bb\u9664\u4e0d\u5fc5\u8981\u7684\u5b57\u7b26\u9632\u6b62getchar()\u51fa\u73b0\u6df7\u4e71\uff0c\u8bfb\u5165\u4e0b\u4e00\u4e2a\u9700\u6c42\u7684\u7c7b\u578b\n    }\n    return 0;\n}\n```",
        "postTime": 1525171659,
        "uid": 62308,
        "name": "Mr_Wu",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2814 \u3010\u5bb6\u8c31\u3011"
    }
]