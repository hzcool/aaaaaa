[
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5e76\u6ca1\u6709\u5f88\u590d\u6742\uff0c~~\u6211\u4e00\u5f00\u59cb\u8fd8\u4ee5\u4e3a\u662f\u8d28\u56e0\u6570\u5206\u89e3\u518d\u8d2a\u5fc3~~\u3002\n\n\u9996\u5148\u8ba9\u6240\u6709\u7684 $a_i \\gets a_i - 1$\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd $a_i$ \u548c $a_j$ \u8fd9\u4e24\u5929\u53ef\u80fd\u662f\u540c\u4e00\u8258\u8239\u5c31\u53ea\u7528\u5224\u65ad $a_i|a_j$ \u6216\u8005 $a_j|a_i$\u3002\u518d\u628a $a_1(a_1=0)$ \u5220\u6389\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u8239\u8fd9\u5929\u90fd\u4f1a\u51fa\u73b0\uff0c\u8fd9\u4e00\u5929\u5df2\u7ecf\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002\n\n\u56e0\u4e3a\u6240\u6709\u5a31\u4e50\u65e5\u90fd\u51fa\u73b0\u5728 Mirko \u7684\u5217\u8868\u4e0a\uff0c\u6240\u4ee5\u5982\u679c\u5b58\u5728\u4e00\u5bf9\u6570\u5b57 $a_i|a_j$\uff0c\u90a3\u4e48 $a_i,a_j$ \u8fd9\u4e24\u4e2a\u65e5\u671f\u5c31\u53ef\u4ee5\u770b\u505a\u662f\u540c\u4e00\u8258\u8239\u3002\uff08\u56e0\u4e3a\u8981\u6c42\u8239\u7684\u6570\u91cf\u7684\u6700\u5c0f\u503c\uff0c\u770b\u4f5c\u540c\u4e00\u8258\u4e00\u5b9a\u6bd4\u770b\u4f5c\u4e24\u8258\u8981\u66f4\u4f18\u3002\uff09\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u627e\u5230\u5f53\u524d\u7559\u4e0b\u6765\u7684\u6700\u5c0f\u7684\u6570\u5b57\uff0c\u8fd9\u4e2a\u6570\u5b57\u4ee3\u8868\u4e86\u4e00\u8258\u8239\u6700\u65e9\u5230\u8fbe\u6e2f\u53e3\u7684\u65e5\u5b50\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u6570\u5b57\u7684\u6240\u6709\u500d\u6570\u5220\u6389\uff08\u770b\u4f5c\u662f\u540c\u4e00\u8258\u8239\uff09\uff0c\u8ba9\u7b54\u6848\u52a0\u4e0a\u4e00\uff08$ans\\gets ans + 1$\uff09\uff0c\u518d\u5220\u9664\u8fd9\u4e2a\u6570\u5b57\uff0c\u6700\u540e\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u3002\n\n\u5220\u6570\u7684\u8bdd\u7528\u4e00\u4e2a `bool` \u6570\u7ec4\u6807\u8bb0\u5373\u53ef\uff0c\u627e\u4e00\u4e2a\u6570\u7684\u500d\u6570\u5c31\u76f4\u63a5 $\\mathcal{O}(n)$ \u627e\u3002\u6700\u540e\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n^2)$\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cctype>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\ninline int read() {\n    int num = 0 ,f = 1; char c = getchar();\n    while (!isdigit(c)) f = c == '-' ? -1 : f ,c = getchar();\n    while (isdigit(c)) num = (num << 1) + (num << 3) + (c ^ 48) ,c = getchar();\n    return num * f;\n}\nconst int N = 5005;\nint a[N] ,n ,res; bool vis[N];\nsigned main() {\n    n = read() - 1; a[1] = read();\n    for (int i = 1; i <= n; i++) a[i] = read() - 1;\n    for (int i = 1; i <= n; i++) {\n        if (vis[i]) continue;\n        res++;\n        for (int j = i + 1; j <= n; j++)\n            if (a[j] % a[i] == 0) vis[j] = true;\n    }\n    printf(\"%d\\n\" ,res);\n    return 0;\n}\n```",
        "postTime": 1624280607,
        "uid": 177893,
        "name": "recollector",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7633 [COCI2010-2011#5] BRODOVI"
    },
    {
        "content": "## \u524d\u8a00\n\n\u8fd9\u4e0d\u662f\u5927\u6c34\u9898\u5417\uff0c\u600e\u4e48\u6ca1\u4eba\u4ea4\u9898\u89e3\u2026\u2026\n\n[\u4e00\u6a21\u4e00\u6837\u7684\u9898](https://www.luogu.com.cn/problem/SP8349)\n\n## \u601d\u8def\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u6240\u6709\u7684\u65f6\u95f4\u51cf $1$\uff0c\u5269\u4e0b\u7684\u65f6\u95f4\u90fd\u53ef\u4ee5\u770b\u4f5c\u67d0\u4e00\u8258\u8239\u7684\u5468\u671f\u65f6\u95f4\u7684\u500d\u6570\u3002\n\n\u6211\u4eec\u7528 $ans$ \u6765\u50a8\u5b58\u8239\u6570\uff0c\u518d\u7528 $cur$ \u6765\u50a8\u5b58\u4e0a\u4e00\u4e2a\u679a\u4e3e\u7684\u6570\uff0c\u521d\u59cb\u503c\u8bbe\u4e3a $2$\u3002\n\n\u7136\u540e\u7528\u4e00\u4e2awhile\u5faa\u73af\uff0c\u6bcf\u6b21\u627e\u5230\u7b2c\u4e00\u4e2a\u6ca1\u6709\u6807\u8bb0\u7684\u6570\uff0c$ans+1$\uff0c\u518d\u7528 $cur$ \u6807\u8bb0\u8fd9\u4e2a\u6570\u7684\u4e0b\u6807\u3002\u63a5\u7740\u4ece\u8fd9\u4e2a\u6570\u7684\u4e0b\u6807\u5f00\u59cb\uff0c\u627e\u5230\u8fd9\u4e2a\u6570\u7684\u500d\u6570\uff0c\u6807\u8bb0\u3002\u5f53\u53d1\u73b0\u5df2\u7ecf\u5faa\u73af\u8d85\u8fc7 $n$ \u4e2a\u65f6\uff0c\u9000\u51fawhile\u3002\n\n\u8f93\u51fa $ans$ \u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5005;\nint n,ans,cur,a[N];\nbool vis[N];\nbool break_;\nint main() {\n\tcin>>n;\n\tfor(int i=1; i<=n; i++) {\n\t\tcin>>a[i];\n\t\ta[i]--;//\u5148\u51cf\u4e00\n\t}\n\tcur=2;//\u521d\u59cb\u5316\n\twhile(1) {\n\t\tfor(int i=cur; i<=n; i++) {//\u627e\u7b2c\u4e00\u4e2a\u6ca1\u6807\u8bb0\u7684\u70b9\n\t\t\tif(!vis[i]) {\n\t\t\t\tcur=i;\n\t\t\t\t++ans;\n\t\t\t\tbreak;\n\t\t\t} else if(i==n) {\n\t\t\t\tbreak_=1;//\u6807\u8bb0\u7ed3\u675fwhile\n\t\t\t}\n\t\t}\n\t\tif(break_){//\u9000\u51fawhile\n\t\t\tbreak;\n\t\t}\n\t\tfor(int i=cur; i<=n; i++) {//\u6807\u8bb0\u500d\u6570\n\t\t\tif(a[i]%a[cur]==0) {\n\t\t\t\tvis[i]=1;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1633911046,
        "uid": 357311,
        "name": "little_cindy",
        "ccfLevel": 6,
        "title": "P7633 [COCI2010-2011#5] BRODOVI \u9898\u89e3"
    },
    {
        "content": "### \u601d\u8def\n\u5bf9\u4e8e\u9898\u76ee\u8981\u6c42\u4f7f\u8bbf\u95ee\u6e2f\u53e3\u7684\u8239\u53ea\u6570\u91cf\u6700\u5c0f\u5316\uff0c\u53ef\u4ee5\u89c6\u4f5c\u5c3d\u53ef\u80fd\u591a\u5730\u201c\u5408\u5e76\u201d\u8239\u53ea\u7684\u8fc7\u7a0b\u3002\u5230\u8bbf\u5929\u6570\u95f4\u9694\u76f8\u540c\u7684\u8239\u53ef\u4ee5\u662f\u540c\u4e00\u8258\u8239\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u88ab\u201c\u5408\u5e76\u201d\uff0c\u53ea\u8d21\u732e\u4e00\u6b21\u7b54\u6848\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u8bbe\u6bcf\u8258\u8239\u5728\u7b2c $a$ \u5929**\u540e**\u5230\u8bbf\uff0c\u53ef\u4ee5\u201c\u5408\u5e76\u201d\u7684\u4e24\u8258\u8239 $i,j(i<j)$ \u5e94\u5f53\u6ee1\u8db3 $a_j\\bmod a_i = 0$\u3002\u7531\u4e8e\u8f93\u5165\u7684\u662f\u6bcf\u8258\u8239\u5728\u7b2c\u51e0\u5929**\u65f6**\u5230\u8bbf\uff0c\u53ef\u4ee5\u5728\u8f93\u5165\u65f6 $-1$ \u4ee5\u5f97\u5230\u6bcf\u8258\u8239\u5bf9\u5e94\u7684 $a_i$\u3002\n\n\u5728\u5df2\u7ecf\u6ca1\u6709\u80fd\u4e0e\u5f53\u524d\u7684\u8239\u201c\u5408\u5e76\u201d\u7684\u8239\u540e\uff0c\u5411\u540e\u5bfb\u627e\u4e0b\u4e00\u8258\u6ca1\u6709\u88ab\u201c\u5408\u5e76\u201d\u8fc7\u7684\u8239\uff0c\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u5373\u53ef\u3002\u53ef\u4ee5\u5f00\u4e00\u4e2a\u5e03\u5c14\u578b\u6570\u7ec4\u8bb0\u5f55\u5408\u5e76\u60c5\u51b5\u3002\n\n\u53ef\u80fd\u4f1a\u6709\u7591\u8651\u7684\u662f\uff0c\u5728\u5904\u7406\u5b58\u5728\u8239 $i,j,k(i<j<k)$\uff0c\u6709 $a_k=a_i\\times a_j$ \u65f6\u662f\u5426\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u5176\u5b9e\u8fd9\u4e0d\u8fc7\u76f8\u5f53\u4e8e\u63d0\u524d\u5c06\u8239 $k$ \u5408\u5e76\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u8239 $j$ \u6b63\u5e38\u8d21\u732e\u7b54\u6848\uff0c\u56e0\u6b64\u7b54\u6848\u662f\u6b63\u786e\u7684\u3002\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define inf 1012332101\nusing namespace std;\n\n#define getchar() ( p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++ )\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read() { int x=0,f=1; char ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();} while(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();} return x*f; }\n\nconst int MAXN = 5005;\nint a[MAXN], ans, n, cur;\nbool vis[MAXN];\n\nint main() {\n    n = read(), cur = 2;\n    for (int i = 1; i <= n; ++i)\n        a[i] = read() - 1;\n    while (cur != inf) {\n        for (int i = cur; i <= n; ++i) {\n            if (!vis[i]) {\n                cur = i;\n                ++ans;\t\t//\u6bcf\u8258\u65b0\u8239\u8d21\u732e\u4e00\u6b21\u7b54\u6848\n                break;\n            } else if (i == n) {\n                cur = inf;\t//\u5408\u5e76\u7ed3\u675f\uff0c\u8d4b\u4e0d\u53ef\u80fd\u7684\u503c\u7ed3\u675f\u5faa\u73af\n            }\n        }\n        for (int i = cur; i <= n; ++i) {\n            if (a[i] % a[cur] == 0)\n                vis[i] = 1;\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1629477403,
        "uid": 392400,
        "name": "ABANDONED_ACCOUNT",
        "ccfLevel": 0,
        "title": "P7633 [COCI2010-2011#5] BRODOVI"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n- \u7ed9\u4f60 $n$ \u4e2a\u65f6\u95f4\u70b9\uff0c\u6bcf\u4e2a\u65f6\u95f4\u70b9\u90fd\u4f1a\u6709\u8239\u6765\uff0c\u4f46\u6bcf\u8258\u8239\u7684\u5230\u8fbe\u65f6\u95f4\u662f\u6709\u5468\u671f\u6027\u7684\uff0c\u4f60\u8981\u7b97\u51fa\u6700\u5c11\u6709\u51e0\u8258\u8239\u3002\n\n# \u9898\u89e3\n\n- \u6570\u636e\u8303\u56f4 $5000$\uff0c\u76f4\u63a5\u66b4\u529b\u3002\n\n1. \u9996\u5148\uff0c\u7528\u4e24\u4e2a\u6570\u7ec4 last \u548c ship\uff0c$ship_i$ \u548c $last_i$ \u5206\u522b\u8868\u793a\u7b2c $i$ \u8258\u8239\u7684\u5230\u8fbe\u65f6\u95f4\u5468\u671f\u548c\u4e0a\u4e00\u6b21\u5230\u8fbe\u7684\u65f6\u95f4\u3002\n\n1. \u7136\u540e\uff0c\u904d\u5386\u6bcf\u4e00\u4e2a\u65f6\u95f4\u70b9 $a_i$\uff0c\u6bcf\u4e2a\u65f6\u95f4\u70b9\u904d\u5386\u6bcf\u8258\u8239\uff0c\u5f53 $ship_j + last_j = a_i$ \u65f6\uff0c\u8868\u793a\u6709\u8239\u53ef\u4ee5\u8fd9\u4e2a\u65f6\u95f4\u5230\u8fbe\uff0c\u90a3\u4e48\u76f4\u63a5 break\u3002\n\n1. \u5982\u679c\uff0c\u53d1\u73b0\u6ca1\u6709\u8239\u53ef\u4ee5\u8fd9\u4e2a\u65f6\u95f4\u70b9\u5230\u8fbe\uff0c\u90a3\u4e48\u8239\u7684\u6570\u91cf +1\uff0c\u8bb0\u5f55\u4e0b ship \u548c last\u3002\n\n1. \u6700\u540e\uff0c\u8f93\u51fa\u4f60\u7edf\u8ba1\u7684\u8239\u6570\u91cf\u5373\u53ef\u3002\n\n- \u6211\u4eec\u8981\u6ce8\u610f\uff0c\u4e00\u8258\u8239\u5728\u8bbf\u95ee\u8fc7\u6e2f\u53e3\u540e\uff0c\u65e0\u8bba\u9694\u7740\u51e0\u4e2a\u95f4\u9694\uff0c\u5b83\u90fd\u4f1a\u518d\u6b21\u8bbf\u95ee\uff0c\u6211\u4eec\u4e0d\u80fd\u53ea\u7edf\u8ba1\u9694\u7740\u4e00\u4e2a\u95f4\u9694\u91cd\u65b0\u8bbf\u95ee\u7684\u60c5\u51b5\u3002\u90a3\u4e48 $ship_j + last_j = a_i$ \u5c31\u8981\u6539\u4e3a $(a_i - last_j) \\bmod ship_j = 0$\uff0c\u8868\u793a\u5f53\u524d\u5929\u548c\u8fd9\u8258\u8239\u4e0a\u4e00\u6b21\u5230\u8fbe\u7684\u65f6\u95f4\u4e4b\u95f4\u7684\u5929\u6570\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u8258\u8239\u5230\u8fbe\u7684\u5468\u671f\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nlong long n, a[100005], ship[100005], last[100005], ans;\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 1 ; i <= n ; i ++)\n    {\n        scanf(\"%d\", &a[i]);\n    }\n    ans = 1;\n    ship[ans] = a[2] - a[1];\n    last[ans] = a[2];\n    for (int i = 3 ; i <= n ; i ++)\n    {\n        bool flag = false;\n        for (int j = 1 ; j <= ans ; j ++)\n        {\n            if ((a[i] - last[j]) % ship[j] == 0)\n            {\n                flag = true;\n                break;\n            }\n        }\n        if (!flag)\n        {\n            ans ++;\n            ship[ans] = a[i] - a[1];\n            last[ans] = a[i];\n        }\n    }\n    printf(\"%d\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1629119633,
        "uid": 342868,
        "name": "Ted_hjl",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P7633\u3010[COCI2010-2011#5] BRODOVI\u3011"
    }
]