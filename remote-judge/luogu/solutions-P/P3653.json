[
    {
        "content": "\u8fd9\u9898\u597d\u6bd2\u7624\u554a...\u679c\u7136\u662fzzq...\n\n\u9996\u5148\u8981\u53bb\u5207\u4e86[\u8fd9\u9053\u9898](https://www.luogu.org/problemnew/show/P3601)\u6765\u5b66\u4f1a\u533a\u95f4\u7b5b\u79ef\u6027\u51fd\u6570\n\n\u7136\u540e\u4f60\u53d1\u73b0\u8fd9\u9898$r\\leq 10^{18}$....\u5904\u7406$\\sqrt{r}$\u4e2a\u7d20\u6570\u662f\u884c\u4e0d\u901a\u7684.\n\n\u4f46\u662f\u6211\u4eec\u6ce8\u610f\u4e00\u70b9\uff0c$\\mu$\u51fd\u6570\u53ef\u4ee5\u8ba4\u4e3a\u662f\u53ea\u548c\u7d20\u6570\u7684\u4e2a\u6570\u6709\u5173\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u62ff$10^6$\u4e2a\u6570\u53bb\u7b5b.\u5047\u8bbe$i$\u5df2\u7ecf\u9664\u53bb\u4e86\u6240\u6709$1e6$\u4ee5\u4e0b\u7684\u8d28\u56e0\u5b50\uff0c\u90a3\u4e48$i$\u53ea\u6709\u4e09\u79cd\u60c5\u51b5:\n\n$\\begin{cases}i=pq\\\\i=p\\\\i=p^2\\end{cases}(p,q\\in prime,p\\neq q)$\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u591a\u4e86\u4e24\u4e2a\u8d28\u56e0\u5b50\uff0c$\\mu$\u4e0d\u53d8\uff1b\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5$\\mu$\u53d6\u8d1f\uff1b\u5bf9\u4e8e\u7b2c\u4e09\u79cd\u60c5\u51b5$\\mu=0$.\n\n\u5982\u4f55\u53bb\u5224\u65ad\u5462?$i=p^2$\u53ea\u9700\u8981\u5224\u65ad$\\left\\lfloor\\sqrt{i}\\right\\rfloor^2=i$\uff1b$i=p$\u9700\u8981\u4f7f\u7528$Miller-Rabin$\u7d20\u6027\u6d4b\u8bd5\uff1b\u5269\u4e0b\u7684\u5c31\u662f$i=pq$\u7684\u60c5\u51b5\u4e86.\n\n$Miller-Rabin$\u7684\u65f6\u5019\u56e0\u4e3a\u6a21\u6570\u662f$long\\ long$\u7684\u6240\u4ee5\u9700\u8981\u7279\u6b8a\u5904\u7406\u4e58\u6cd5\n\n\u9996\u5148\u9f9f\u901f\u4e58\u6839\u672c\u8dd1\u4e0d\u52a8(\u5feb\u901f\u5e42+\u9f9f\u901f\u4e58\u662f\u4e24\u4e2a$\\log$\u7684)\uff0c\u6240\u4ee5\n\n```cpp\nlong long mul(long long a,long long b,long long m)\n{\n\treturn (a*b-(long long)((long double)a/m*b)*m+m)%m;\n}\n```\n\n\u539f\u7406baidu\u5427QAQ\n\n\u8fd9\u91cc\u56e0\u4e3a\u6570\u636e\u6c34\u800c\u4f7f\u7528\u4e86\u7b80\u5316\u7248\u7684$Miller-Rabin$(\u53ea\u6d4b$2$\u548c$3$\uff0c\u4e0d\u4e8c\u6b21\u63a2\u6d4b)\n\n\u6ce8\u91ca\u4e2d\u6709\u6b63\u5e38\u7684$Miller-Rabin$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nlong long fac[2000000],l,r;\nint mu[2000000],prime[2000000],p[2000005],cnt;\nlong long sqr(long long x){return x*x;}\nvoid make(int n)//\u6253\u88681e6\u7684\u7d20\u6570\n{\n\tp[0]=p[1]=1;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tif(!p[i])prime[++cnt]=i;\n\t\tfor(int j=1;j<=cnt&&i*prime[j]<=n;j++)\n\t\t{\n\t\t\tp[i*prime[j]]=1;\n\t\t\tif(i%prime[j]==0)break;\n\t\t}\n\t}\n}\nlong long mul(long long a,long long b,long long m)\n{\n\treturn (a*b-(long long)((long double)a/m*b)*m+m)%m;\n}\nlong long qpower(long long a,long long b,long long m)\n{\n\tlong long ans=1;\n\tfor(;b;b>>=1,a=mul(a,a,m))if(b&1)ans=mul(ans,a,m);\n\treturn ans;\n}\n/*\nbool Miller_Rabin(long long x,long long p)//\u771f\u7684MillerRabin\uff0c\u5e95\u4e0b\u8981\u9009\u53d612\u4e2a\u7d20\u6570 \n{\n\tlong long pd=qpower(p,x-1,x),s=x^1;\n\twhile(pd==1&&!(s&1))s>>=1,pd=qpower(p,s,x);\n\treturn pd==1||pd==(x^1);\n}\n*/\nbool Miller_Rabin(long long x,long long p){return qpower(p,x-1,x)==1;}\nbool judge(long long n)\n{\n\tfor(int i=1;i<=2;i++)if(!Miller_Rabin(n,prime[i]))return 0;\n\treturn 1;\n}\nint main()\n{\n\tscanf(\"%lld%lld\",&l,&r);\n\tfor(long long i=l;i<=r;i++)fac[i-l]=i,mu[i-l]=1;\n\tmake(1000000);\n\tfor(int i=1;i<=cnt&&prime[i]<=r;i++)\n\t{\n\t\tint t=prime[i];\n\t\tfor(long long j=((l-1)/t+1)*t;j<=r;j+=t)\n\t\t{\n\t\t\tint k=0;\n\t\t\twhile(fac[j-l]%t==0)++k,fac[j-l]/=t;\n\t\t\tif(k>1)mu[j-l]=0;else mu[j-l]=-mu[j-l];//\u533a\u95f4\u7b5b\n\t\t}\n\t}\n\tlong long ans=0;\n\tfor(long long i=l;i<=r;i++)\n\t{\t\n\t\tif(fac[i-l]!=1)\n\t\t{\n\t\t\tlong long t=fac[i-l];\n\t\t\tif(sqr((long long)sqrt(t))==t)mu[i-l]=0;\n\t\t\telse if(judge(t))mu[i-l]=-mu[i-l];//\u591a\u4e00\u4e2a\u8d28\u56e0\u5b50\n\t\t}\n\t\tans+=mu[i-l];\n\t}\n\tcout<<ans<<endl;\n}\n```\n\n\u540c\u7406\u5927\u6982\u4e5f\u53ef\u4ee5\u7b5b$\\sigma$...\u6bd2\u7624...",
        "postTime": 1555644406,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3653 \u3010\u5c0f\u6e05\u65b0\u6570\u5b66\u9898\u3011"
    },
    {
        "content": "~~\u867d\u7136\u6211\u5e73\u5e38\u90fd\u4e0d\u559c\u6b22\u5728\u9898\u89e3\u91cc\u55b7\u51fa\u9898\u4eba\uff0c\u4f46\u6211\u8fd8\u662f\u60f3\u8bf4\uff1azzq \u5927\u6bd2\u7624\uff01~~\n\n\u672c\u9898\u89e3\u7701\u7565\u90e8\u5206\u5206\u505a\u6cd5\u4ee5\u53ca\u4ee3\u7801\u3002\n\n\u524d\u7f6e\u829d\u58eb\uff1a[Miller-Rabin \u7b97\u6cd5](https://blog.csdn.net/forever_dreams/article/details/82314237)\n\n\u8fd9\u9053\u9898\u5361\u6389\u4e86~~\u6211\u6700\u7231\u7684~~ Pollard-Rho \u7b97\u6cd5\u3002\n\n\u7531\u4e8e\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u7684\u7279\u6b8a\u6027\uff0c\u8003\u8651\u9884\u5904\u7406\u51fa $10^6$ \u4ee5\u5185\u7684\u8d28\u6570\uff0c\u7528\u5176\u7b5b\u9664 $[l, r]$ \u5185\u7684\u6570\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f59\u4e0b\u7684\u8d28\u56e0\u6570\u4e4b\u79ef $x$\uff0c\u6709\u4ee5\u4e0b $4$ \u79cd\u60c5\u51b5\uff1a\n\n1. $x = 1$\uff0c\u6b64\u65f6 $\\mu(x) = 1$\uff1b\n2. $x$ \u4e3a\u8d28\u6570\uff0c\u6b64\u65f6 $\\mu(x) = -1$\uff1b\n3. $x$ \u4e3a\u4e24\u4e2a\u4e92\u5f02\u8d28\u6570\u4e4b\u79ef\uff0c\u6b64\u65f6 $\\mu(x) = 1$\uff1b\n4. $x$ \u4e3a\u975e $1$ \u7684\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u6b64\u65f6 $\\mu(x) = 0$\u3002\n\n\u7279\u5224 $x = 1$\uff0c\u7136\u540e\u7528 sqrt \u51fd\u6570\u5224\u65ad $x$ \u662f\u5426\u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u6700\u540e\u7528 Miller-Rabin \u5224\u65ad $x$ \u662f\u5426\u4e3a\u8d28\u6570\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((r - l) \\log^2 r + N)$\u3002\n\n~~\u987a\u4fbf\u8bf4\u4e00\u53e5\uff1a\u672c\u9898\u6570\u636e\u8fc7\u5f31\uff0cMiller-Rabin \u53ea\u9009\u53d6 $2$ \u4e2a\u5e95\u6570\u4e5f\u53ef AC~~\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <stdio.h>\n#include <math.h>\n\ntypedef long long ll;\ntypedef __int128 lll;\n\nconst int N = 2, M = 1e6 + 7;\nint test_prime[N + 7] = {0, 2, 3}, prime[M], mu_list[M];\nll last_factor[M];\nbool p[M];\n\ninline int init1(){\n\tint cnt = 0;\n\tp[0] = p[1] = true;\n\tfor (register int i = 2; i < M; i++){\n\t\tif (!p[i]) prime[++cnt] = i;\n\t\tfor (register int j = 1; j <= cnt && i * prime[j] < M; j++){\n\t\t\tp[i * prime[j]] = true;\n\t\t\tif (i % prime[j] == 0) break;\n\t\t}\n\t}\n\treturn cnt;\n}\n\ninline ll max(ll a, ll b){\n\treturn a > b ? a : b;\n}\n\ninline void init2(ll l, ll r, int cnt){\n\tll t = r - l;\n\tfor (register ll i = 0; i <= t; i++){\n\t\tlast_factor[i] = i + l;\n\t\tmu_list[i] = 1;\n\t}\n\tfor (register int i = 1; i <= cnt && (ll)prime[i] * prime[i] <= r; i++){\n\t\tfor (register ll j = (ll)max((l + prime[i] - 1) / prime[i], 2) * prime[i]; j <= r; j += prime[i]){\n\t\t\tint k = 0;\n\t\t\tll x = j - l;\n\t\t\twhile (last_factor[x] % prime[i] == 0){\n\t\t\t\tlast_factor[x] /= prime[i];\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tif (k == 1){\n\t\t\t\tmu_list[x] = -mu_list[x];\n\t\t\t} else {\n\t\t\t\tmu_list[x] = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline ll quick_pow(ll x, ll p, ll mod){\n\tll ans = 1;\n\twhile (p){\n\t\tif (p & 1) ans = (lll)ans * x % mod;\n\t\tx = (lll)x * x % mod;\n\t\tp >>= 1;\n\t}\n\treturn ans;\n}\n\ninline bool miller_rabin(ll n, ll k){\n\tll nd = n - 1, m = nd;\n\twhile (m){\n\t\tll x = quick_pow(k, m, n);\n\t\tif (x != 1 && x != nd) return false;\n\t\tif ((m & 1) == 1 || x == nd) return true;\n\t\tm >>= 1;\n\t}\n\treturn true;\n}\n\ninline bool is_prime(ll n){\n\tif (n < 2) return false;\n\tfor (register int i = 1; i <= N; i++){\n\t\tif (n == test_prime[i]) return true;\n\t\tif (!miller_rabin(n, test_prime[i])) return false;\n\t}\n\treturn true;\n}\n\ninline ll sqr(ll n){\n\treturn n * n;\n}\n\ninline int mu(ll n){\n\tif (sqr(sqrt(n)) == n) return n == 1 ? 1 : 0;\n\treturn is_prime(n) ? -1 : 1;\n}\n\nint main(){\n\tint ans = 0;\n\tll l, r, t;\n\tscanf(\"%lld %lld\", &l, &r);\n\tt = r - l;\n\tinit2(l, r, init1());\n\tfor (register ll i = 0; i <= t; i++){\n\t\tans += mu(last_factor[i]) * mu_list[i];\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1615300528,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3653 \u3010\u5c0f\u6e05\u65b0\u6570\u5b66\u9898\u3011"
    },
    {
        "content": "\u5c45\u7136\u6709\u4eba\u6765\u95ee\u6211\u8fd9\u9053\u9898\u600e\u4e48\u505a\u3002\u3002\u3002\u624d\u53d1\u73b0\u6211\u5207\u4e869\u4e2a\u6708\u8fd8\u662f\u6ca1\u4eba\u5199\u9898\u89e3\u3002\u3002\u3002\u90a3\u6211\u5199\u4e00\u7bc7\u5427\u3002\n\n------------\n\n\u770b\u5230\u8fd9\u662f\u4e00\u9053\u533a\u95f4\u6c42\u548c\u95ee\u9898\uff0c\u6211\u7684\u672c\u80fd\u53cd\u5e94\u662f\u8003\u8651\u6c42\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u524d\u7f00\u548c\u4e4b\u5dee\u3002\u4f46\u662f\u4ee4\u4eba\u611f\u5230\u5947\u602a\u7684\u662f$r-l\\leq 10^5$\uff0c\u53ef\u4ee5\u60f3\u5230\u76f4\u63a5\u66b4\u529b\u8ba1\u7b97$x\\in[l,r]$\u7684$\\mu(x)$\u3002\n\n\u5982\u4f55\u8ba1\u7b97$\\mu(x)$\u5462\uff1f\u4e00\u822c\u4f7f\u7528\u7ebf\u6027\u7b5b\u9884\u5904\u7406\u524d$n$\u4e2a\u6574\u6570\u7684\n$\\mu(x)$\u503c\uff0c\u540c\u7406\u53ef\u4ee5\u8003\u8651\u5148\u7ebf\u6027\u7b5b\u51fa\u4e00\u4e9b\u8d28\u6570\uff0c\u7136\u540e\u5bf9\u533a\u95f4\n\u8fdb\u884c\u57c3\u62c9\u6258\u65af\u7279\u5c3c\u7b5b\u6cd5\u7b5b\u51fa\u7b54\u6848\uff0c\u6700\u540e\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u7b5b\u51fa\u7b54\u6848\u3002\u3002\u3002\u679a\u4e3e\u6bcf\u4e2a\u8d28\u6570$p$\u7684\u500d\u6570\uff0c\u7136\u540e\u6309\u7167\u5b9a\u4e49\u8ba1\u7b97$mu[x]$\u7684\u503c\u3002\u8fd9\u90e8\u5206\u6211\u5c31\u4e0d\u7ec6\u8bb2\u4e86\uff0c\u5177\u4f53\u5b9e\u73b0\u770b\u6587\u672b\u4ee3\u7801\u3002\n\n\u5e38\u89c4\u57c3\u6c0f\u7b5b\u6cd5\u9700\u8981\u7b5b\u51fa$\\sqrt{r}$\u5185\u7684\u6240\u6709\u8d28\u6570\uff0c\u4f46\u662f\u6700\u5927\u89c4\u6a21\u4e3a$10^9$\u7684\u7ebf\u6027\u7b5b\u6240\u9700\u7684\u65f6\u95f4\u4ecd\u7136\u662f\u4e0d\u53ef\u4ee4\u4eba\u63a5\u53d7\u7684\u3002\u6211\u4eec\u8003\u8651\u51cf\u5c0f\u7ebf\u6027\u7b5b\u7684\u89c4\u6a21\u5230$k$\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\uff1a\u82e5\u6211\u4eec\u540c\u65f6\u7ef4\u62a4\u6bcf\u4e2a\u6574\u6570\u53bb\u9664$k$\u4ee5\u5185\u7684\u7d20\u6570\u540e\u5269\u4f59\u7684\u56e0\u5b50$fac[x]$\uff0c\u53ef\u4ee5\u53d1\u73b0\u67093\u79cd\u60c5\u51b5\uff1a\n\n- $fac[x]=1$\uff0c\u8868\u793a$x$\u5df2\u7ecf\u88ab\u7b5b\u5b8c\u4e86\uff0c\u6b64\u65f6\u7684$mu[x]$\u5c31\u662f\u7b54\u6848\u3002\n\n- $fac[x]=\\displaystyle \\prod_{i=1}^c{{p_i}^{q_i}}$\uff0c\u8fd9\u90e8\u5206\u4e0d\u597d\u5904\u7406\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574$k$\u7684\u5927\u5c0f\u6765\u9650\u5236\u5b50\u60c5\u51b5\u6570\u3002\u56e0\u4e3a$r\\leq 10^{18}$\uff0c\u82e5\u4ee4$k=10^6$\uff0c\u5219\u53ef\u4ee5\u53d1\u73b0\u8be5\u60c5\u51b5\u4ec5\u5269\u4e09\u4e2a\u5b50\u60c5\u51b5\uff1a\n\n\n1. $fac[x]=p$\uff0c$mu[x]$\u53d6\u53cd\uff1b\n\n2. $fac[x]=pq$\uff0c$mu[x]$\u4e0d\u53d8\uff1b\n\n3. $fac[x]=p^2$\uff0c$mu[x]$\u7f6e0\uff1b\n\n\u8bc1\u660e\uff1a\u56e0\u4e3a\u7b5b\u6cd5\u4fdd\u8bc1\u4e86\u6b64\u65f6\u7684$fac[x]$\u4e3a\u591a\u4e2a$p>10^6$\u4e4b\u79ef\uff0c\u4e14$fac[x]\\leq 10^{18}$\uff0c\u6240\u4ee5$fac[x]$\u6700\u591a\u4e3a\u4e24\u4e2a\u7d20\u6570\u4e4b\u79ef\u3002\n\n\u9996\u5148\u4f7f\u7528$sqrt$\u533a\u5206\u51fa\u60c5\u51b53\uff08\u5982\u679c\u6015\u6709\u7cbe\u5ea6\u8bef\u5dee\u53ef\u4ee5\u4e8c\u5206\uff09\uff0c\u7136\u540e\u4f7f\u7528\u7d20\u6027\u5224\u65ad\u7b97\u6cd5\u533a\u5206\u60c5\u51b51\u4e0e\u60c5\u51b52\uff08\u8fd9\u91cc\u7684\u6570\u636e\u6bd4\u8f83\u6c34\uff0c\u6211\u5f53\u65f6\u5077\u61d2\u53ea\u7528\u4e86\u8d39\u9a6c\u5b9a\u7406+__int128\uff0c\u6700\u597d\u4f7f\u7528Miller-Rabin\u7d20\u6027\u5224\u65ad\u7b97\u6cd5\uff09\u3002\n\n------------\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\u5bf9\u4e8e\u89c4\u6a21\u8f83\u5c0f\u7684\u6570\u636e\u53ef\u4ee5\u4ee4\u7ebf\u6027\u7b5b\u89c4\u6a21\u4e3a$\\sqrt{r}$\uff0c\n\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u8ba1\u7b97\u3002\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\ntypedef long long Int64;\nconst Int64 size=100100,psiz=1000100;\nInt64 bsiz,prime[psiz/10],mu[size],fac[size],pcnt=0;\nbool flag[psiz]={};\nvoid pre(Int64 siz){\n    bsiz=std::min(psiz-1,static_cast<Int64>(sqrt(siz)));\n    for(Int64 i=2;i<=bsiz;++i){\n        if(!flag[i])prime[++pcnt]=i;\n        for(Int64 j=1;j<=pcnt && prime[j]*i<=bsiz;++j){\n            flag[i*prime[j]]=true;\n            if(i%prime[j]==0)break;\n        }\n    }\n}\ntypedef __int128 Int128;\nInt64 powm(Int128 a,Int64 k,Int128 mod){\n    Int128 res=1;\n    while(k){\n        if(k&1)res=res*a%mod;\n        k>>=1,a=a*a%mod;\n    }\n    return res;\n}\nbool isPrime(Int64 x){\n    return powm(2,x-1,x)==1 && powm(3,x-1,x)==1;\n}\nint main(){\n    Int64 l,r;\n    scanf(\"%lld%lld\",&l,&r);\n    pre(r);\n    Int64 len=r-l;\n    for(int i=0;i<=len;++i)\n    \tmu[i]=1,fac[i]=i+l;\n    for(int i=1;i<=pcnt;++i){\n    \tInt64 x=l/prime[i]*prime[i];\n    \tif(x==l)x-=prime[i];\n    \twhile((x+=prime[i])<=r){\n    \t\tfac[x-l]/=prime[i];\n    \t\tmu[x-l]=-mu[x-l];\n    \t\twhile(fac[x-l]%prime[i]==0)\n    \t\t\tfac[x-l]/=prime[i],mu[x-l]=0;\n    \t}\n    }\n    for(int i=0;i<=len;++i)\n    \tif(fac[i]!=1){\n    \t\tInt64 sq=sqrt(fac[i]);\n    \t\tif(sq*sq==fac[i])mu[i]=0;\n    \t\telse if(isPrime(fac[i]))mu[i]=-mu[i];\n    \t}\n    Int64 ans=0;\n    for(int i=0;i<=len;++i)\n        ans+=mu[i];\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1540473083,
        "uid": 25170,
        "name": "dtcxzyw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3653 \u3010\u5c0f\u6e05\u65b0\u6570\u5b66\u9898\u3011"
    },
    {
        "content": ">\u524d\u8a00\uff1a\u8fd9\u9898\u9898\u89e3\u592a\u5c11\u4e86\u53ed\u2026\u2026\uff1f\u7a9d\u7801\u98ce\u597d\u5eb7\u7a9d\u6765\u5199\u9898\u89e3\uff01\n\n\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u53d1\u73b0\u867d\u7136$l,r$\u975e\u5e38\u5927\uff0c\u4f46\u662f$r-l$\u5f88\u5c0f\uff0c\u6240\u4ee5\u8003\u8651\u66b4\u529b\u7b97$r-l$\u8fd9\u4e00\u6bb5\u7684\u3002\n\n\u8003\u8651$\\mu(x)$\u7684\u6700\u57fa\u672c\u5b9a\u4e49\u5f0f\uff1a\n\n$$\\mu(x)=\\left\\{\\begin{aligned} 1 \\qquad \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ x=1 \\\\ (-1)^k \\qquad  x=p_1p_2\\dots p_k \\\\ 0 \\qquad \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ else  \\end{aligned}\\right.$$\n\n\u4e5f\u5c31\u662f\u8bf4$\\mu(x)$\u53ea\u548c\u56e0\u5b50\u4e2a\u6570\u6709\u5173\u3002\n\n\u56e0\u4e3a$l,r\\leq 10^{18}$\uff0c$\\sqrt n$\u7b5b\u56e0\u5b50\u4e0d\u592a\u884c\uff0c\u800c\u5982\u679c\u5199pollard_rho\u90a3\u4e48\u8981\u5bf9\u6bcf\u4e2a\u6570\u90fd\u505a\u4e00\u6b21\uff0c\u590d\u6742\u5ea6\u4e5f\u65e0\u6cd5\u627f\u53d7\u3002\u6240\u4ee5\u8003\u8651\u9884\u5904\u7406$n^\\frac{1}{3}$\u4ee5\u5185\u7684\u56e0\u5b50\uff0c\u56e0\u4e3a$n$\u9664\u5b8c$n^\\frac{1}{3}$\u5185\u7684\u56e0\u5b50\u4e4b\u540e\u6700\u591a\u53ea\u4f1a\u5269\u4e0b\u4e24\u4e2a\u56e0\u5b50\u3002\u8003\u8651\u7b5b\u51fa$10^6$\u4ee5\u5185\u7684\u8d28\u6570\uff0c\u7136\u540e\u53bb\u9664\uff0c\u9664\u7684\u65f6\u5019\u987a\u4fbf\u7b5b$\\mu$\u3002\u53d1\u73b0\u5269\u4e0b\u7684\u53ea\u6709\u8fd9\u4e09\u79cd\u60c5\u51b5\uff1a\n$$\nleft(x)=\\left\\{\\begin{aligned}p^2 \\qquad \\ \\ \\ \\ \\ \\ \\ \\   \\Rightarrow\\mu(x)=0 \\\\   pp'\\  \\qquad  \n\\Rightarrow\\mu(x)=\\mu(x)\\\\ p  \\qquad \\  \\Rightarrow\\mu(x) =-\\mu(x)\\\\\\end{aligned}\\right.\n$$\n\n\u4e3a\u4ec0\u4e48\u53ea\u4f1a\u6709\u8fd9\u4e09\u79cd\u60c5\u51b5\u5462\uff1f\u56e0\u4e3a$x$\u5fc5\u7136\u53ea\u6709$\\gt 10^6$\u7684\u56e0\u5b50\uff0c\u800c$x\\leq 10^{18} $ \uff0c\u6240\u4ee5\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u56e0\u5b50\u3002\n\n\u5224\u65ad$x=p^2$\u76f4\u63a5sqrt\uff0c\u5224\u65ad$x \\in prime$\u76f4\u63a5\u7528Millar_Rabin\uff0c\u8fd9\u4e24\u4e2a\u90fd\u5224\u65ad\u8fc7\u4e86\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5c31\u662f\u5269\u4e0b\u7684\u3002\n\n\u6240\u4ee5\u53ea\u8981\u7b5b$10^6$\u4ee5\u5185\u7684\u8d28\u6570\uff0c\u7136\u540e\u66b4\u529b\u679a\u4e3e$x\\in [l,r]$\u5224\u4e00\u4e0b\u518d\u7edf\u8ba1\u5c31ok\u4e86\u3002\n\n\n$\\color{#66bbf4}{Code : }$\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#define it register int\n#define ct const int\n#define il inline\nusing namespace std;\ntypedef long long ll;\n#define rll register ll\n#define cll const ll\nconst int N = 1000005;\nint p[N], cnt, mu[N], ans;\nbool isp[N];\nll l, r, lft[N];\nnamespace MR {\n\tconst int p[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47 };\n\til ll mul(cll a, cll b, cll p) {return (a * b - (unsigned long long)((long double)a / p * b + 1e-7) * p + p) % p;}\n\til ll ksm(rll x, rll L, cll p) { rll ans = 1; while (L) L& 1 ? ans = mul(ans, x, p) : 0, x = mul(x, x, p), L >>= 1; return ans; }\n\til bool isp(cll n) {\n\t\tfor (it i = 0; i < 14; ++i) if (!(n % p[i])) return n == p[i];\n\t\trll r = n - 1;it pw = 0;\n\t\twhile (!(r & 1)) r >>= 1, ++pw;\n\t\tfor (it i = 0, j; i < 14; ++i) {\n\t\t\trll x = ksm(p[i], r, n), y;\n\t\t\tfor (j = 1; j <= pw && x > 1; ++j) {\n\t\t\t\ty = mul(x, x, n);\n\t\t\t\tif (y == 1 && x != n - 1) return 0;\n\t\t\t\tx = y;\n\t\t\t}\n\t\t\tif (x ! = 1) return 0;\n\t\t}\n\t\treturn 1;\n\t}\n} \nil void Pre() {\n    it i, j, x;\n    for (i = 2; i < N; ++i) {\n        if (!isp[i]) p[++cnt] = i;\n        for (j = 1; (x = p[j] * i) < N && j < = cnt; ++j) {\n            isp[x] = 1;\n            if (!(i % p[j])) break;\n        }\n    }\n}\nint main() {\n    scanf(\"%lld%lld\", &l, &r), Pre(); it i, x, y;\n    for (i = r - l, x = 0; x <= i; ++x) lft[x] = x + l, mu[x] = 1;\n    for (i = 1; i <= cnt && p[i] <= r; ++i)\n        for (rll j = ((l - 1) / p[i] + 1) * p[i]; j <= r; j += p[i]) {\n            x = j - l, y = 0;\n            while (!(lft[x] % p[i])) lft[x] /= p[i], ++y;\n            mu[x] = (y > 1 ? 0 : -mu[x]);\n        }\n    for (i = r - l, x = 0; x <= i; ++x)\n        lft[x] > 1 ? y = (int)sqrt(lft[x]) , mu[x] = (y * y == lft[x] ? 0 : (MR::isp(lft[x]) ? -mu[x] : mu[x])) : 0, ans += mu[x];\n    printf(\"%d\", ans);\n    return 0;\n}\n",
        "postTime": 1594564339,
        "uid": 87724,
        "name": "\u58a8\u821e\u7075\u7eaf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3653 \u3010\u5c0f\u6e05\u65b0\u6570\u5b66\u9898\u3011"
    },
    {
        "content": "\u660e\u663e\u7684\uff0c\u675c\u6559\u7b5b\u662f\u65e0\u6cd5\u901a\u8fc7\u7684\u3002\u56e0\u4e3a $r-l \\leq 10^5$\uff0c\u6240\u4ee5\u8003\u8651\u66b4\u529b\u7b5b\u51fa\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u503c\u3002\n\n\u5957\u8def\u7684\uff0c\u5bf9\u4e8e $x\\in[L,R]$ \u5176\u8d28\u6570\u5927\u4e8e $10^6$ \u7684\u8d28\u6570\u7684\u4e2a\u6570\u5c0f\u4e8e $2$\uff0c\u8003\u8651\u7b5b\u53bb\u6240\u6709\u5c0f\u4e8e $10^6$ \u7684\u8d28\u6570\u3002\u5047\u8bbe\u5269\u4e0b\u7684\u6570\u4e3a $x\u2019$\uff0c\u4e00\u5171\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\u662f\u8d28\u6570\uff0c\u662f\u4e00\u4e2a\u5927\u8d28\u6570\u7684\u5e73\u65b9\uff0c\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5927\u8d28\u6570\u7684\u79ef\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\u7528 Miller-Rabin \u5224\u65ad\u5373\u53ef\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u76f4\u63a5\u5f00\u65b9\u5224\u65ad\u5373\u53ef\uff0c\u82e5\u524d\u4e24\u79cd\u60c5\u51b5\u5747\u4e3a\u5047\u5219\u4e00\u5b9a\u662f\u7b2c\u4e09\u79cd\u60c5\u51b5\u3002\n\n\u5728\u7b5b\u7684\u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u503c\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define LL long long\nclass ks{\n    public:\n        ll ksc(ll a,ll b,ll mod)\n        {\n            ll c=(long double)a/mod*b;\n            ll res=(unsigned long long)a*b-(unsigned long long)c*mod;\n            return (res+mod)%mod;\n        }\n        LL ksm(LL x, LL y, LL p){\n            LL cur=1;\n            for(; y; y>>=1,x=ksc(x,x,p))\n                if(y&1)cur=ksc(cur,x,p);\n            return cur;\n        }\n};\n\nmt19937 rnd(time(0));\n\nclass millerrabin{\n    private:\n        ks test;\n    public:\n        bool miller(LL S){\n            if(S<=2||S%2==0)return S==2;\n            LL ci=0,U=S-1;\n            while(U%2==0)U>>=1,ci++;\n            for(LL kase=1; kase<=10; kase++){\n                LL a=rand()%(S-1)+1,now=test.ksm(a,U,S),nxt;\n                for(LL i=1; i<=ci; i++){\n                    nxt=test.ksc(now,now,S);\n                    if(nxt==1&&now!=1&&now!=S-1)return false;\n                    now=nxt;\n                }\n                if(now!=1)return false;\n            }\n            return true;\n        }\n}mr;\n\nconst int N=1e6+11;\nint mu[N], vis[N], pr[N], pc;\nvoid sieve(int tot=1000000){\n    mu[1]=1;\n    for(int i(2); i<=tot; i++){\n        if(!vis[i]) pr[++pc]=i, mu[i]=-1;\n        for(int j=1; j<=pc&&1ll*pr[j]*i<=tot; j++){\n            vis[i*pr[j]]=1, mu[i*pr[j]]=-mu[i];\n            if(i%pr[j]==0){mu[i*pr[j]]=0; break;}\n        }\n    }\n}\nll a[N], Mu[N];\nint main(){\n\tsrand(time(0));\n\tll L, R, len;\n\tcin>>L>>R;\n    len=R-L+1;\n    sieve();\n    if(R<=1000000){\n        ll ans=0;\n        for(ll i=L; i<=R; i++)\n            ans+=mu[i];\n        cout<<ans<<'\\n';\n        return 0;\n    }\n    for(int i=0; i<len; i++) a[i]=L+i, Mu[i]=1;\n    for(ll i=1; i<=pc; i++){\n        ll x=pr[i];\n        for(ll j=(x-L%x)%x; j<len; j+=x){\n            ll c=0;\n            while(a[j]%x==0)a[j]/=x, c++;\n            if(c>1) Mu[j]=0;\n            if(c==1) Mu[j]=-Mu[j];\n        }\n    }\n    for(int i=0; i<len; i++){\n        if(a[i]==1) continue;\n        if(mr.miller(a[i])){Mu[i]=-Mu[i];}\n        else{\n            ll sqr=sqrt(a[i]);\n            if(sqr*sqr==a[i]) Mu[i]=0;\n        }\n    }\n    ll ans=0;\n    for(ll i=0; i<len; i++)ans+=Mu[i];\n    cout<<ans<<'\\n';\n    return 0;\n}\n```\n\n",
        "postTime": 1685094662,
        "uid": 740607,
        "name": "__ODT__",
        "ccfLevel": 0,
        "title": "P3653"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3653)\u3002\n\n\u9996\u5148\u95ee\u4e00\u4e0b\u51fa\u9898\u4eba\u62ff\u7684\u4ec0\u4e48\u9020\u7684\u6570\u636e\uff0c\u8d39\u9a6c\u5927\u5b9a\u7406\u90fd\u80fd\u8fc7\u3002\u3002\u3002\n\n#### \u601d\u8def\n\n\u8fd9\u9053\u9898\u76f4\u63a5\u7b5b\u6216\u6c42\u662f\u5f88\u96be\u505a\u7684\uff0c\u6709 $r\\le10^{18}$\uff0c\u8003\u8651\u5148\u7b5b $10^6$ \u4ee5\u5185\u7684\u7d20\u6570\uff0c\u4ee4 `fac[x]` \u8868\u793a $x$ \u7b5b\u51fa $10^6$ \u4ee5\u5185\u7684\u8d28\u56e0\u5b50\u4e4b\u540e\u5f97\u5230\u7684\u6570\uff0c\u90a3\u4e48\u6709 $3$ \u79cd\u60c5\u51b5\u3002\n\n$$fac_x=\\begin{cases}pq&(p,q\\in \\mathbb{P})\\\\p^2&(p\\not=1)\\\\p&(p\\in\\mathbb{P})\\end{cases}$$\n\n\u90a3\u4e48 $\\mu$ \u5c31\u5f88\u597d\u6c42\u4e86\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5 $\\mu(x)=1$\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5 $\\mu(x)=0$\uff0c\u7b2c\u4e09\u79cd\u60c5\u51b5 $\\mu(x)=-1$\u3002\u8fd9\u91cc\u4f7f\u7528 Miller_Rabin \u7d20\u6570\u68c0\u6d4b\u5224\u65ad\u7d20\u6570\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u53ea\u7528\u679a\u4e3e $i\\in[l,r]$ \u5373\u53ef\u3002\n\n#### CoDe\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define Auto map<ll,ll>::iterator\n#define lll __int128\nusing namespace std;\nconst ll Maxn=1e6+7,inf=0x3f3f3f3f;\nmap<ll,ll>S;\nnamespace Math{\n    inline ll mul(ll a,ll b,ll p){\n        a%=p,b%=p;\n        ll c=a*b-(ll)((long double)a*b/p+0.5)*p;\n        return c<0?c+p:c;\n    }\n    inline ll ksm(ll a,ll b,ll Mod)\n    {ll z=1;while(b){if(b&1)z=(lll)z*a%Mod;a=(lll)a*a%Mod;b>>=1;}return z;}\n    inline ll gcd(ll a,ll b){return b?gcd(b,a%b):a;}\n    inline ll qread(void){\n        ll x=0,f=1;char ch;\n        while((ch=getchar())<'0'||ch>'9') if(ch=='-') f=-1;x=(ch^48);\n        while((ch=getchar())>='0'&&ch<='9') x=(x<<1)+(x<<3)+(ch^48);\n        return x*f;\n    }\n}\nusing namespace Math;\nnamespace Miller_Rabin{\n    ll Test[11]={0,2,7,41,61};\n    inline bool Prime(ll X){\n        if(X<2) return false;\n        ll k=0,t=X-1;\n        while(1^(t&1)) t>>=1,++k;\n        for(ll i=1;i<=4;i++){\n            if(X==Test[i]) return true;\n            ll A=ksm(Test[i],t,X),Next=A;\n            for(ll j=1;j<=k;j++){\n                Next=mul(A,A,X);\n                if(Next==1&&A!=1&&A!=X-1) return false;\n                A=Next;\n            }\n            if(Next!=1) return false;\n        }\n        return true;\n    }\n}\nusing namespace Miller_Rabin;\nll l,r,ans,prime[Maxn],cnt,fac[Maxn];\nint mu[Maxn];\nbool isprime[Maxn];\ninline void init(ll n){\n    isprime[1]=isprime[0]=1;\n    for(ll i=2;i<=n;i++){\n        if(!isprime[i]) prime[++cnt]=i;\n        for(ll j=1;j<=cnt&&prime[j]*i<=n;j++){\n            isprime[i*prime[j]]=1;\n            if(!(i%prime[j])) break;\n        }\n    }\n}\nint main(){\n    init(1e6);\n    l=qread(),r=qread();\n    for(ll i=l;i<=r;i++) mu[i-l]=1,fac[i-l]=i;\n    for(ll i=1;i<=cnt&&prime[i]<=r;i++){\n        ll t=prime[i];\n        for(ll j=((l-1)/t+1)*t;j<=r;j+=t){\n            ll k=0;\n            while(fac[j-l]%t==0) ++k,fac[j-l]/=t;\n            if(k>1) mu[j-l]=0;\n\t\t\telse mu[j-l]=-mu[j-l];\n        }\n    }\n    for(ll i=l;i<=r;i++){  \n        if(fac[i-l]!=1){\n            ll t=fac[i-l];\n            if((ll)sqrt(t)*(ll)sqrt(t)==t) mu[i-l]=0;\n            else if(Prime(t)) mu[i-l]=-mu[i-l];\n        }\n        ans+=mu[i-l];\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n\n\u5176\u5b9e\u4e00\u5f00\u59cb\u6211\u662f\u62ff Pollard-rho \u7b97\u7684\uff0c\u7ed3\u679c TLE \u4e86\u3002",
        "postTime": 1682161578,
        "uid": 590600,
        "name": "MoriyaSuwako",
        "ccfLevel": 0,
        "title": "P3653\u9898\u89e3"
    }
]