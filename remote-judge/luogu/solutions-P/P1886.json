[
    {
        "content": "\n\u5206\u6790\uff1a\n\n\u4ee5\u6700\u5c0f\u503c\u4e3a\u4f8b\uff1a\u6784\u9020\u4e00\u4e2a\u5355\u8c03\u961f\u5217b[i]\uff0c\u8bb0h\u4e3a\u5143\u7d20\u4e0b\u6807\uff0cb\u4e2d\u5b58\u4e0b\u6807\u3002\u7b2c\u4e00\u6b21\uff1ab={1}\uff1b\u7b2c\u4e8c\u6b21\uff1ab={1,2}\uff08\u56e0\u4e3a3>1\u4e14\u5728\u8303\u56f4\u5185\uff09\uff1b\u7b2c\u4e09\u6b21\uff1ab={3}\uff08\u56e0\u4e3a\u961f\u5217\u5355\u8c03\u9012\u589e\uff0c-1\u6700\u5c0f\uff0c\u6240\u4ee5\u6324\u63891\u548c3\uff0c\u627e\u6700\u5c0f\u503c\u7684\u65f6\u5019\u4e5f\u4e0d\u4f1a\u8f6e\u5230\u5b83\u4eec\uff09\uff1b\u7b2c\u56db\u6b21\uff1ab={4}\uff081\u5df2\u7ecf\u5728\u5916\u9762\u4e86\u3002-3<-1\u679c\u65ad\u6324\u6389\uff09\uff1b\u7b2c\u4e94\u6b21\uff1ab={4,5}\uff085>-3 \u53ef\u4ee5\u4f5c\u4e3a\u5019\u9009\u4eba\uff09\uff1b\u7b2c\u516d\u6b21\uff1ab={4,6}\uff08\u679c\u65ad\u6324\u6389\uff0c\u6709\u6bd45\u5408\u9002\u7684\u5019\u9009\u4eba\uff09\uff1b\u7b2c\u4e03\u6b21\uff1ab={6,7}\uff084\u4e0d\u5728\u8303\u56f4\u5185\uff0c\u51fa\u5217\uff09\uff1b\u7b2c\u516b\u6b21\uff1ab={6,7,8}\n\n\u6bcf\u6b21\u90fd\u8f93\u51fa\u961f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\n\n\u4ee5\u6b64\u7ef4\u62a4\u961f\u5217\u4e2d\u5143\u7d20\u5e8f\u53f7\u7684\u5355\u8c03\u6027\uff0c\u5f97\u5230\u7ed3\u679c\u3002\n\n\u53ea\u662f\u6bd4\u8f83\u5224\u65ad\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u5c0f\u3002\n\n\u76f8\u7b49\u7684\u503c\u4e5f\u8981\u6324\u6389\u3002\n\n \n\u6700\u5927\u503c\u540c\u7406\u3002\n",
        "postTime": 1383831107,
        "uid": 1,
        "name": "kkksc03",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u6b64\u9898\u4e3a\u5355\u8c03\u961f\u5217\u6a21\u677f\u9898\uff0c\u5176\u5b9e\u697c\u4e0b\u628a\u5355\u8c03\u961f\u5217\u4e0e\u4f18\u5148\u961f\u5217\u6df7\u4e3a\u4e00\u8c08\u672c\u4eba\u5e76\u4e0d\u8d5e\u540c\u3002\n\n# \u5355\u8c03\u961f\u5217\u6709\u4e24\u4e2a\u6027\u8d28\n\n1. \u961f\u5217\u4e2d\u7684\u5143\u7d20\u5176\u5bf9\u5e94\u5728\u539f\u6765\u7684\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u5fc5\u987b\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\n\n1. \u961f\u5217\u4e2d\u5143\u7d20\u7684\u5927\u5c0f\u5fc5\u987b\u662f\u5355\u8c03\u9012\\*(\u589e/\u51cf/\u751a\u81f3\u662f\u81ea\u5b9a\u4e49\u4e5f\u53ef\u4ee5)\n\n\n# \u5355\u8c03\u961f\u5217\u4e0e\u666e\u901a\u961f\u5217\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5c31\u5728\u4e8e\u5355\u8c03\u961f\u5217\u65e2\u53ef\u4ee5\u4ece\u961f\u9996\u51fa\u961f\uff0c\u4e5f\u53ef\u4ee5\u4ece\u961f\u5c3e\u51fa\u961f\u3002\n\n\n# \u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u600e\u6837\u5b9e\u73b0\u5355\u8c03\u961f\u5217\u5462?\n\n\u5c31\u62ff\u6837\u4f8b\u6765\u8c08\u8c08\uff0c\u8bbe\u4ee5\u6700\u5c0f\u7684\u4e3a\u6807\u51c6\u3002\n\n```cpp\n8 3\n1 3 -1 -3 5 3 6 7\n```\n\u4e0b\u6587\u4e2d\u6211\u4eec\u7528q\u6765\u8868\u793a\u5355\u8c03\u961f\u5217\uff0cp\u6765\u8868\u793a\u5176\u6240\u5bf9\u5e94\u7684\u5728\u539f\u5217\u8868\u91cc\u7684\u5e8f\u53f7\u3002\n\n1. \u7531\u4e8e\u6b64\u65f6\u961f\u4e2d\u6ca1\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u76f4\u63a5\u4ee41\u8fdb\u961f\u3002\u6b64\u65f6\uff0cq={1},p={1}\u3002\n\n2. \u73b0\u57283\u9762\u4e34\u7740\u6289\u62e9\u3002\u4e0b\u9762\u57fa\u4e8e\u8fd9\u6837\u4e00\u4e2a\u601d\u60f3:\u5047\u5982\u628a3\u653e\u8fdb\u53bb\uff0c\u5982\u679c\u540e\u97622\u4e2a\u6570\u90fd\u6bd4\u5b83\u5927\uff0c\u90a3\u4e483\u5728\u5176\u6709\u751f\u4e4b\u5e74\u5c31\u6709\u53ef\u80fd\u6210\u4e3a\u6700\u5c0f\u7684\u3002\u6b64\u65f6\uff0cq={1,3},p={1,2}\n\n3. \u4e0b\u9762\u51fa\u73b0\u4e86-1\u3002\u961f\u5c3e\u5143\u7d203\u6bd4-1\u5927\uff0c\u90a3\u4e48\u610f\u5473\u7740\u53ea\u8981-1\u8fdb\u961f\uff0c\u90a3\u4e483\u5728\u5176\u6709\u751f\u4e4b\u5e74\u5fc5\u5b9a\u6210\u4e3a\u4e0d\u4e86\u6700\u5c0f\u503c\uff0c\u539f\u56e0\u5f88\u660e\u663e:\u56e0\u4e3a\u5f53\u4e0b\u97623\u88ab\u6846\u8d77\u6765\uff0c\u90a3\u4e48-1\u4e5f\u4e00\u5b9a\u88ab\u6846\u8d77\u6765\uff0c\u6240\u4ee53\u6c38\u8fdc\u4e0d\u80fd\u5f53\u6700\u5c0f\u503c\u3002\u6240\u4ee5\uff0c3\u4ece**\u961f\u5c3e**\u51fa\u961f\u3002\u540c\u7406\uff0c1\u4ece\u961f\u5c3e\u51fa\u961f\u3002\u6700\u540e-1\u8fdb\u961f\uff0c\u6b64\u65f6q={-1},p={3}\n\n4. \u51fa\u73b0-3\uff0c\u540c\u4e0a\u9762\u5206\u6790\uff0c-1>-3\uff0c-1\u4ece\u961f\u5c3e\u51fa\u961f,-3\u4ece\u961f\u5c3e\u8fdb\u961f\u3002q={-3}\uff0cp={4}\u3002\n\n4. \u51fa\u73b05\uff0c\u56e0\u4e3a5>-3\uff0c\u540c\u7b2c\u4e8c\u6761\u5206\u6790\uff0c5\u5728\u6709\u751f\u4e4b\u5e74\u8fd8\u662f\u6709\u5e0c\u671b\u7684\uff0c\u6240\u4ee55\u8fdb\u961f\u3002\u6b64\u65f6\uff0cq={-3,5},p={4,5}\n\n4. \u51fa\u73b03\u30023\u5148\u4e0e\u961f\u5c3e\u76845\u6bd4\u8f83\uff0c3<5\uff0c\u6309\u7167\u7b2c3\u6761\u7684\u5206\u6790\uff0c5\u4ece\u961f\u5c3e\u51fa\u961f\u30023\u518d\u4e0e-3\u6bd4\u8f83\uff0c\u540c\u7b2c\u4e8c\u6761\u5206\u6790\uff0c3\u8fdb\u961f\u3002\u6b64\u65f6\uff0cq={-3,3},p={4,6}\n\n4. \u51fa\u73b06\u30026\u4e0e3\u6bd4\u8f83\uff0c\u56e0\u4e3a3<6\uff0c\u6240\u4ee53\u4e0d\u5fc5\u51fa\u961f\u3002\u7531\u4e8e3\u4ee5\u524d\u5143\u7d20\u90fd\uff1c3\uff0c\u6240\u4ee5\u4e0d\u5fc5\u518d\u6bd4\u8f83\uff0c6\u8fdb\u961f\u3002\u56e0\u4e3a-3\u6b64\u65f6\u5df2\u7ecf\u5728\u6ed1\u52a8\u7a97\u53e3\u4e4b\u5916\uff0c\u6240\u4ee5-3\u4ece**\u961f\u9996**\u51fa\u961f\u3002\u6b64\u65f6\uff0cq={3,6},p={6,7}\n\n4. \u51fa\u73b07\u3002\u961f\u5c3e\u5143\u7d206\u5c0f\u4e8e7\uff0c7\u8fdb\u961f\u3002\u6b64\u65f6\uff0cq={3,6,7},p={6,7,8}\u3002\n\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5bf9\u5355\u8c03\u961f\u5217\u7684\u57fa\u672c\u64cd\u4f5c\u5df2\u7ecf\u5206\u6790\u5b8c\u6bd5\u3002\u56e0\u4e3a\u5355\u8c03\u961f\u5217\u4e2d\u5143\u7d20\u5927\u5c0f\u5355\u8c03\u9012\\*(\u589e/\u51cf/\u81ea\u5b9a\u4e49\u6bd4\u8f83)\uff0c\u56e0\u6b64\uff0c\u961f\u9996\u5143\u7d20\u5fc5\u5b9a\u662f\u6700\u503c\u3002\u6309\u9898\u610f\u8f93\u51fa\u5373\u53ef\u3002\n\n\n# \u4e0b\u9762\u653e\u4ee3\u7801\u5566\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5927\u5bb6\u590d\u5236(\u5212\u6389)\uff0c\u9119\u4eba\u5c31\u5199\u70b9\u6ce8\u91ca\uff0c\u53cd\u6b63\u524d\u9762\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\u3002\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std; \n\nstruct Monotone_queue\n{\n    static const int maxn=1000001;\n    int n,k,a[maxn];\n    int q[maxn],head,tail,p[maxn];//\u540c\u9898\u76ee\u53d9\u8ff0\u4e00\u6837\uff0cq\u662f\u5355\u8c03\u961f\u5217\uff0cp\u662f\u5bf9\u5e94\u7f16\u53f7\u3002\n    \n    void read()\n    {\n        scanf(\"%d %d\",&n,&k);\n        for(int i=1;i<=n;++i)\n            scanf(\"%d\",&a[i]);\n    }//\u8bfb\u5165\u4e0d\u5fc5\u8bf4\u4e86\n    \n    void monotone_max()//\u5355\u8c03\u6700\u5927\u503c\n    {\n        head=1;\n        tail=0;\n        for(int i=1;i<=n;++i)\n        {\n            while(head<=tail&&q[tail]<=a[i])\n                tail--;\n            q[++tail]=a[i];\n            p[tail]=i;\n            while(p[head]<=i-k)\n                head++;\n            if(i>=k)printf(\"%d \",q[head]);\n        }\n        printf(\"\\n\");\n    }\n    \n    void monotone_min()\n    {\n        head=1;\n        tail=0;//\u4e3a\u5565\u8981\u8fd9\u6837\u5462?\u56e0\u4e3ahead\u8981\u4e25\u683c\u5bf9\u5e94\u9996\u5143\u7d20\uff0ctail\u8981\u4e25\u683c\u5bf9\u5e94\u5c3e\u5143\u7d20\uff0c\u6240\u4ee5\u5f53tail>=head\u65f6\uff0c\u8bf4\u660e\u6709\u5143\u7d20\u3002\u800c\u4e00\u5f00\u59cb\u961f\u5217\u4e3a\u7a7a\uff0c\u8bf4\u4e00\u8981\u8fd9\u6837\u8d4b\u503c\u3002\u5176\u5b9e\u8fd9\u8ddf\u666e\u901a\u961f\u5217\u4e00\u6837\u3002\n        for(int i=1;i<=n;++i)\n        {//a[i]\u8868\u793a\u5f53\u524d\u8981\u5904\u7406\u7684\u503c\n            while(head<=tail&&q[tail]>=a[i])\n                tail--;//\u53ea\u8981\u961f\u5217\u91cc\u6709\u5143\u7d20\uff0c\u5e76\u4e14\u5c3e\u5143\u7d20\u6bd4\u5f85\u5904\u7406\u503c\u5927\uff0c\u5373\u8868\u793a\u5c3e\u5143\u7d20\u5df2\u7ecf\u4e0d\u53ef\u80fd\u51fa\u573a\uff0c\u6240\u4ee5\u51fa\u961f\u3002\u76f4\u5230\u5c3e\u5143\u7d20\u5c0f\u4e8e\u5f85\u5904\u7406\u503c\uff0c\u6ee1\u8db3\"\u5355\u8c03\"\u3002\n            q[++tail]=a[i];//\u5f85\u5904\u7406\u503c\u5165\u961f\u3002\n            p[tail]=i;//\u540c\u65f6\u5b58\u4e0b\u5176\u7f16\u53f7\n            while(p[head]<=i-k)\n                head++;//\u5982\u679c\u961f\u9996\u5143\u7d20\u5df2\u7ecf\"\u8fc7\u65f6\"\uff0c\u51fa\u961f\u3002\n            if(i>=k)printf(\"%d \",q[head]);//\u8f93\u51fa\u6700\u503c\uff0c\u5373\u961f\u9996\u5143\u7d20\u3002i>=k\u8868\u793a\u8be5\u8f93\u51fa\uff0c\u81f3\u4e8ewhy\u5c31\u81ea\u5df1\u770b\u9898\u76ee\u3002\n        }\n        printf(\"\\n\");\n        \n    }\n}worker;\n\nint main()\n{\n    worker.read();\n    worker.monotone_min();\n    worker.monotone_max();\n    return 0;\n}\n```",
        "postTime": 1493459770,
        "uid": 28164,
        "name": "hilsinleri",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "**\u8fd8\u662f\u5355\u8c03\u961f\u5217\u5feb**\n\n**RMQ\u548c\u7ebf\u6bb5\u6811\u4f1a\u6162\u5f88\u591a\u554a**\n\n**\u4e24\u4e2a\u5355\u8c03\u961f\u5217\u4e00\u4e2a\u6700\u5927\u4e00\u4e2a\u6700\u5c0f**\n\n**\u7136\u540e\uff1f**\n\n**\u5c31\u53ef\u4ee5\u4e86\u554a**\n\n1\u3001\u7ef4\u62a4\u961f\u9996\uff08\u5c31\u662f\u5982\u679c\u4f60\u5df2\u7ecf\u662f\u5f53\u524d\u7684m\u4e2a\u4e4b\u524d\u90a3\u4f60\u5c31\u53ef\u4ee5\u88ab\u5220\u4e86,head++\uff09\n\n2\u3001\u5728\u961f\u5c3e\u63d2\u5165\uff08\u6bcf\u63d2\u5165\u4e00\u4e2a\u5c31\u8981\u4ece\u961f\u5c3e\u5f00\u59cb\u5f80\u524d\u53bb\u9664\u5197\u6742\u72b6\u6001\uff09\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\nusing namespace std;\nint n,m;\nint q1[1000001],q2[1000001];\nint a[1000001];\nint min_deque()\n{\n    int h=1,t=0;\n    for(int i=1;i<=n;i++)\n    {\n        while(h<=t&&q1[h]+m<=i) h++;\n        while(h<=t&&a[i]<a[q1[t]]) t--;\n        q1[++t]=i;\n        if(i>=m) printf(\"%d \",a[q1[h]]);\n    }\n    cout<<endl;\n}\nint max_deque()\n{\n    int h=1,t=0;\n    for(int i=1;i<=n;i++)\n    {\n        while(h<=t&&q2[h]+m<=i) h++;\n        while(h<=t&&a[i]>a[q2[t]]) t--;\n        q2[++t]=i;\n        if(i>=m) printf(\"%d \",a[q2[h]]);\n    }\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    min_deque();\n    max_deque();\n    return 0;\n}\n```",
        "postTime": 1508917278,
        "uid": 18441,
        "name": "Drug__Lover",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u5148\u4ea4\u4e86\u4e00\u4efd\u9898\u89e3\u88ab\u6d1b\u8c37\u8bf4\u662f\u91cd\u590d\u9898\u89e3\u7279\u610f\u91cd\u65b0\u5199\u4e86\u4e00\u4efd\uff1b\uff1b\uff1b\n\n\u8fd9\u4e00\u6b21\u7528\u7684\u662f**deque**\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\ndeque-->\u53cc\u5411\u961f\u5217\u64cd\u4f5c\uff08\u7531\u4e8e\u641e\u5fd8\u4e86\u5982\u4f55\u6e05\u7a7a\u6240\u4ee5\u7528\u4e86\u4e24\u4e2adeque  \uffe3\u25a1\uffe3\uff5c\uff5c\u62b1\u6b49\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint x;\nstruct sd\n{\n    int num,val; //\u5b58\u50a8\u7f16\u53f7\u548c\u5927\u5c0f\n};\ndeque<sd> que;\ndeque<sd> que1;\nint add[3][1000005]; //\u7528\u4ee5\u5b58\u50a8\u7b54\u6848\u7684----\u89c1\u4ee3\u7801\nint main()\n{\n    int n,m,k,cnt=1;\n    cin>>n>>k;\n    sd rr;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);  //\u8f93\u5165\n        rr.num=i; rr.val=x;  //\u8d4b\u503c\n        while(!que.empty()&&x>=que.back().val)\n        que.pop_back();  //\u5355\u8c03\u961f\u5217\u7684\u64cd\u4f5c\uff0c\u4ee5\u4fdd\u8bc1\u5355\u8c03\n        while(!que1.empty()&&x<=que1.back().val)\n        que1.pop_back();\n        que.push_back(rr); //\u538b\u5165\u961f\u5217\n        que1.push_back(rr);//\u540c\u4e0a\n        while(i-k>=que.front().num)  //T\u6389\u4e0d\u5728\u8303\u56f4\u5185\u7684\n        que.pop_front();\n        while(i-k>=que1.front().num)\n        que1.pop_front(); //\u540c\u4e0a\n        if(i>=k) \n        {\n            add[0][cnt]=que.front().val;\n            add[1][cnt]=que1.front().val;\n            cnt++;\n        } //\u5b58\u7b54\u6848\n    }\n    for(int i=1;i<cnt;i++)\n    printf(\"%d \",add[1][i]);\n    printf(\"\\n\");\n    for(int i=1;i<cnt;i++)\n    printf(\"%d \",add[0][i]);  //\u8f93\u51fa\n    return 0;\n}\n```\n\u5c0f\u7ed3\uff1a\ndeque\u5176\u5b9e\u5f88\u597d\u7528\n\n\u5bf9\u4e8e\u666e\u901a\u6570\u636e\u7ed3\u6784\u8d39\u65f6\u633a\u591a\n\ndeque\u6ca1\u5f00O2 \u6700\u957f\u6d4b\u8bd5\u70b9400+ms\n\n\u5f00\u4e86O2  \u6700\u957f\u6d4b\u8bd5\u70b9300+ms\n\n\u7ed9\u5927\u5bb6\u9644\u4e0a deque\u7528\u6cd5\n\n1 d[i]:\u8fd4\u56ded\u4e2d\u4e0b\u6807\u4e3aI\u7684\u5143\u7d20\u7684\u5f15\u7528\u3002\n\n```cpp\n2 d.front():\u8fd4\u56de\u7684\u4e00\u4e2a\u5143\u7d20\u7684\u5f15\u7528\u3002\n3 d.back():\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u5f15\u7528\u3002\n4 d.pop_back():\u5220\u9664\u5c3e\u90e8\u7684\u5143\u7d20\u3002\u4e0d\u8fd4\u56de\u503c\u3002\n5 d.pop_front()\uff1a\u5220\u9664\u5934\u90e8\u5143\u7d20\u3002\u4e0d\u8fd4\u56de\u503c\u3002\n6 d.push_back(e):\u5728\u961f\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20e\u3002\n7 d.push_front(e):\u5728\u5bf9\u5934\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20e\u3002\n```",
        "postTime": 1515914716,
        "uid": 53746,
        "name": "aha\u6d6e\u4e91",
        "ccfLevel": 0,
        "title": "\u6d1b\u8c37 1886\u4fee\u6b63\u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u5f88\u591a(\u666e\u901a\u7684)\u7ebf\u6bb5\u6811t\u4e86\u51e0\u4e2a\u70b9\u7684\uff0c\u5f88\u5fc3\u75bc...\u660e\u660e\u6807\u7b7e\u91cc\u6709\u7ebf\u6bb5\u6811\uff0c\u5374\u8fc7\u4e0d\u4e86\u3002\n\n\u800c\u6211\u5c31\u504f\u4e0d\u4fe1\u8fd9\u4e2a\u90aa\uff0c\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u6572\u5b8c\u540e\uff0c\u5404\u79cd\u4f18\u5316\u65e0\u6570\u6b21\uff0ct\u4e86\u6700\u540e\u4e00\u4e2a\u70b9\u65e0\u6570\u6b21...\u6700\u540e\u5728\u653f\u6cbb\u8003\u573a\u60f3\u5230\u4e00\u79cd\u6e05\u5947\u7684\u64cd\u4f5c\uff1a\n\n**\u67e5\u8be2\u51fd\u6570\u4e00\u6b21\u6027\u8fd4\u56de\u6700\u5927\u548c\u6700\u5c0f\u503c**\n\n\u7528\u7ed3\u6784\u4f53\u6765\u5b9e\u73b0\u5c31\u597d\u5566\uff01\u67e5\u8be2\u6700\u5c0f\u503c\u7684\u65f6\u5019\u987a\u4fbf\u628a\u6700\u5927\u503c\u5b58\u8d77\u6765\uff0c\u5230\u65f6\u5019\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1000002;\nint a[maxn],i,n,k;\nstruct sao{\n    int mi,ma;\n}que;//\u7ed3\u6784\u4f53\uff0c\u5b58\u6700\u5927\u6700\u5c0f\u503c\ninline void read(int &x){//\u5feb\u8bfb\n    char c;int flag=0;\n    while(!isdigit(c=getchar()))\n        if(c=='-') flag=1;\n    x=c-'0';\n    while(isdigit(c=getchar()))\n        x=x*10+c-'0';\n    if(flag) x=-x;\n}\nstruct segtree{//\u7ebf\u6bb5\u6811\u7ed3\u6784\n    const int inf=1<<30;\n    int minv[maxn<<2],maxv[maxn<<2];\n    inline void pushup(int o){\n        maxv[o]=max(maxv[o<<1|1],maxv[o<<1]);\n        minv[o]=min(minv[o<<1|1],minv[o<<1]);\n    }\n    inline void build(int o,int l,int r){\n        if(l==r){minv[o]=maxv[o]=a[l];return;}\n        int mid=(l+r)>>1;\n        build(o<<1,l,mid);\n        build(o<<1|1,mid+1,r);\n        pushup(o);\n    }//\u6811\u4e5f\u4e00\u8d77\u5efa\n    inline sao querymin(int o,int l,int r,int ql,int qr){//\u64cd\u4f5c\u5f00\u59cb\n        if(ql<=l&&qr>=r)return (sao){minv[o],maxv[o]};//\u8fd9\u91cc\u5c31\u662f\u8fd4\u56desao\u7c7b\u578b\u7684\u503c\uff0c\u5b9e\u9645\u4e0a\u662f\u4e24\u4e2a\u503c\n        int minn=inf,maxx=-inf;\n        int mid=(l+r)>>1;\n        sao t;\n        if(ql<=mid){t=querymin(o<<1,l,mid,ql,qr);minn=min(minn,t.mi);maxx=max(maxx,t.ma);}//\u7528t\u5b58\u8d77\u6765\uff0c\u907f\u514d\u91cd\u590d\u9012\u5f52\n        if(qr>mid){t=querymin(o<<1|1,mid+1,r,ql,qr);minn=min(minn,t.mi);maxx=max(maxx,t.ma);}\n        return (sao){minn,maxx};\n    }\n}seg;\nint main(){\n    ios::sync_with_stdio(false);//\u51cf\u5c11cin\u65f6\u95f4...\u867d\u7136\u6ca1\u7528\u5230\n    read(n);read(k);\n    for(i=1;i<=n;i++)read(a[i]);\n    seg.build(1,1,n);\n    for(i=1;i<=n-k+1;i++){\n        que=seg.querymin(1,1,n,i,i+k-1);\n        printf(\"%d \",que.mi);//\u76f4\u63a5\u8f93\u51fa\u6700\u5c0f\u503c\n        a[i]=que.ma;//\u5b58\u6700\u5927\u503c\n    }\n    puts(\"\");\n    for(i=1;i<=n-k+1;i++)printf(\"%d \",a[i]);//\u8f93\u51fa\u6700\u5927\u503c\n    return 0;\n}\n```",
        "postTime": 1514868032,
        "uid": 5464,
        "name": "ChoHakuNe",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u6b64\u9898\u4e0d\u59a8\u53ef\u7528\u7ebf\u6bb5\u6811\u505a\u505a\uff1a\n\n\u5355\u8c03\u961f\u5217\u548c$RMQ$\uff0c\u9898\u89e3\u4e0a\u6f2b\u5929\u90fd\u662f\uff0c\u8fd8\u6709\u4e00\u4e9b\u8f83\u4e3a\u6577\u884d\u7684\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u6765\u4e00\u53d1\u8be6\u7ec6\u7684\u8bb2\u89e3\uff1a\n\n\u5148\u8bf4\u8bf4\u7ebf\u6bb5\u6811\uff1a\n\n\n\u73b0\u5728\u6211\u7ed9\u4f60\u4e00\u9053\u9898\u3002\n\n1\u3001\u4e00\u5171\u6709$n$\u4e2a\u6570\uff0c\u7ed9\u4f60$m$\u4e2a\u8303\u56f4\uff0c\u8ba9\u4f60\u6c42\u8303\u56f4\u5185\u7684\u6570\u548c\u3002\uff08$n \\leq 10^6$\uff09\n\n\u8fd9\u4e0d\u662f\u5f88\u7b80\u5355\uff0c\u4e0d\u662f\u5c0f\u5b66\u751f\u7684$OI$\u9898\u5417\uff1f\u524d\u7f00\u548c\uff0c\u641e\u5b9a\u3002\n\n\u518d\u52a0\u5f3a\uff1a\n\n2\u3001\u4e00\u5171\u6709$n$\u4e2a\u6570\uff0c\u7ed9\u4f60$k$\u4e2a\u64cd\u4f5c\uff0c\u8ba9\u4f60\u5728$l$\u548c$r$\u533a\u95f4\u5185\u52a0\u4e00\u4e2a\u6570\uff0c\u6216\u8ba9\u4f60\u6c42\u533a\u95f4\u5185\u7684\u548c\u3002\uff08$n \\leq 10^4$\uff09\n\nemm\u524d\u7f00\u548c\u65e0\u529b\u7ef4\u6301\u4e86\u3002\n\n\u518d\u52a0\u5f3a\uff1a\n\n2\u3001\u4e00\u5171\u6709$n$\u4e2a\u6570\uff0c\u7ed9\u4f60$k$\u4e2a\u64cd\u4f5c\uff0c\u8ba9\u4f60\u5728$l$\u548c$r$\u533a\u95f4\u5185\u52a0\u4e00\u4e2a\u6570\uff0c\u6216\u8ba9\u4f60\u6c42\u533a\u95f4\u5185\u7684\u548c\u3002\uff08$n \\leq 10^6$\uff09\n\n\u8fd9\u9700\u8981\u4e00\u79cd\u5f3a\u5927\u7684\u6570\u636e\u7ed3\u6784\u7ebf\u6bb5\u6811\n\n\n\n\u7ebf\u6bb5\u6811\uff0c\u7c7b\u4f3c\u533a\u95f4\u6811\uff0c\u5b83\u5728\u5404\u4e2a\u8282\u70b9\u4fdd\u5b58\u4e00\u6761\u7ebf\u6bb5\uff08\u6570\u7ec4\u4e2d\u7684\u4e00\u6bb5\u5b50\u6570\u7ec4\uff09\uff0c\u4e3b\u8981\u7528\u4e8e\u9ad8\u6548\u89e3\u51b3\u8fde\u7eed\u533a\u95f4\u7684\u52a8\u6001\u67e5\u8be2\u95ee\u9898\uff0c\n\n\u7531\u4e8e\u4e8c\u53c9\u7ed3\u6784\u7684\u7279\u6027\uff0c\u5b83\u57fa\u672c\u80fd\u4fdd\u6301\u6bcf\u4e2a\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a$O$($log$ $n$)\u3002\n\n\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u533a\u95f4\uff0c\n\n\u5b50\u8282\u70b9\u5219\u5206\u522b\u8868\u793a\u7236\u8282\u70b9\u7684\u5de6\u53f3\u534a\u533a\u95f4\uff0c\u4f8b\u5982\u7236\u4eb2\u7684\u533a\u95f4\u662f[$a$,$b$]\uff0c\u90a3\u4e48($c$=($a$+$b$)/$2$)\u5de6\u513f\u5b50\u7684\u533a\u95f4\u662f[$a$,$c$]\uff0c\u53f3\u513f\u5b50\u7684\u533a\u95f4\u662f[$c$+$1$,$b$]\u3002\n\n\u7531\u4e0a\u56fe\u53ef\u5f97\uff0c\n\n1\u3001\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u5b69\u5b50\u533a\u95f4\u8303\u56f4\u4e3a[$l$\uff0c$mid$]\uff0c\u53f3\u5b69\u5b50\u4e3a[$mid$+$1$,$r$]\n\n2\u3001\u5bf9\u4e8e\u7ed3\u70b9$k$\uff0c\u5de6\u5b69\u5b50\u7ed3\u70b9\u4e3a$2$*$k$\uff0c\u53f3\u5b69\u5b50\u4e3a$2$*$k$+$1$\uff0c\u8fd9\u7b26\u5408\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28\u3002\n\n\u7ebf\u6bb5\u6811\u652f\u6301\u4e94\u79cd\u79cd\u64cd\u4f5c\uff1a\u5efa\u6811\u3001\u5355\u70b9\u67e5\u8be2\u3001\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u67e5\u8be2\u3001\u533a\u95f4\u4fee\u6539\u3002\n\n\u5728\u5176\u4ed6\u5ef6\u7533\u91cc\u8fd8\u652f\u6301\u5982\u533a\u95f4\u6c42\u6700\u503c\u3002\n\n## 1\u3001\u5efa\u6811\n\n#### a\u3001\u5bf9\u4e8e\u4e8c\u5206\u5230\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\uff0c\u7ed9\u5b83\u7684\u5de6\u53f3\u7aef\u70b9\u786e\u5b9a\u8303\u56f4\u3002\n\n#### b\u3001\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5b58\u50a8\u8981\u7ef4\u62a4\u7684\u4fe1\u606f\uff0c\u518d\u56de\u5230\u7236\u8282\u70b9\u65f6\u7d2f\u8ba1\u5230\u7236\u8282\u70b9\u53bb\u3002\n\n#### c\u3001\u5408\u5e76\n\n### \u4ee3\u7801\n\n```\nvoid build(int k,int t,int w)\n{ int mid;\n\tif (t>w) return;\n\tif (t==w)\n\t  {\n\t  \ttree[k].l=t;tree[k].r=w;\n\t  \ttree[k].w=a[t];\n\t  \treturn;\n\t  }\n\tmid=(t+w)/2;\n\tbuild(k*2,t,mid);\n\tbuild(k*2+1,mid+1,w);\n\ttree[k].l=t;tree[k].r=w;\n\ttree[k].w=tree[k*2].w+tree[k*2+1].w;\n}\n```\n## \u5355\u70b9\u67e5\u8be2\n#### \u67e5\u8be2\u4e00\u4e2a\u70b9\u7684\u72b6\u6001\uff0c\u8bbe\u5f85\u67e5\u8be2\u70b9\u4e3ax\n#### a\u3001\u5982\u679c\u5f53\u524d\u679a\u4e3e\u7684\u70b9\u5de6\u53f3\u7aef\u70b9\u76f8\u7b49\uff0c\u5373\u53f6\u5b50\u8282\u70b9\uff0c\u5c31\u662f\u76ee\u6807\u8282\u70b9\u3002\n#### b\u3001\u5982\u679c\u4e0d\u662f\uff0c\u6240\u4ee5\u8bbe\u67e5\u8be2\u4f4d\u7f6e\u4e3ax\uff0c\u5f53\u524d\u7ed3\u70b9\u533a\u95f4\u8303\u56f4\u4e3a\u4e86l\uff0cr\uff0c\u4e2d\u70b9\u4e3amid\u3002\n#### c\u3001\u5982\u679cx<=mid\uff0c\u5219\u9012\u5f52\u5b83\u7684\u5de6\u5b69\u5b50\uff0c\u5426\u5219\u9012\u5f52\u5b83\u7684\u53f3\u5b69\u5b50\n### \u4ee3\u7801\n```\nvoid ask(int k)\n{\n    if(tree[k].l==tree[k].r) //\u5f53\u524d\u7ed3\u70b9\u7684\u5de6\u53f3\u7aef\u70b9\u76f8\u7b49\uff0c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u662f\u6700\u7ec8\u7b54\u6848 \n    {\n        ans=tree[k].w;\n        return ;\n    }\n    int m=(tree[k].l+tree[k].r)/2;\n    if(x<=m) ask(k*2);//\u76ee\u6807\u4f4d\u7f6e\u6bd4\u4e2d\u70b9\u9760\u5de6\uff0c\u5c31\u9012\u5f52\u5de6\u5b69\u5b50 \n    else ask(k*2+1);//\u53cd\u4e4b\uff0c\u9012\u5f52\u53f3\u5b69\u5b50 \n}\n```\n\n## \u5355\u70b9\u4fee\u6539\n#### \u5373\u66f4\u6539\u67d0\u4e00\u4e2a\u70b9\u7684\u72b6\u6001\u3002\n#### \u7ed3\u5408\u5355\u70b9\u67e5\u8be2\u7684\u539f\u7406\uff0c\u627e\u5230x\u7684\u4f4d\u7f6e\uff1b\u6839\u636e\u5efa\u6811\u72b6\u6001\u5408\u5e76\u7684\u539f\u7406\uff0c\u4fee\u6539\u6bcf\u4e2a\u7ed3\u70b9\u7684\u72b6\u6001\u3002\n\n```\nvoid add(int k)\n{\n    if(tree[k].l==tree[k].r)//\u627e\u5230\u76ee\u6807\u4f4d\u7f6e \n    {\n        tree[k].w+=y;\n        return;\n    }\n    int m=(tree[k].l+tree[k].r)/2;\n    if(x<=m) add(k*2);\n    else add(k*2+1);\n    tree[k].w=tree[k*2].w+tree[k*2+1].w;//\u6240\u6709\u5305\u542b\u7ed3\u70b9k\u7684\u7ed3\u70b9\u72b6\u6001\u66f4\u65b0 \n}\n```\n\n## \u533a\u95f4\u67e5\u8be2\n\n\n\n\n\u4ee3\u7801\n\n```\nvoid sum(int k)\n{\n    if(tree[k].l>=x&&tree[k].r<=y) \n    {\n        ans+=tree[k].w;\n        return;\n    }\n    int m=(tree[k].l+tree[k].r)/2;\n    if(x<=m) sum(k*2);\n    if(y>m) sum(k*2+1);\n}\n```\n## \u533a\u95f4\u4fee\u6539\n\n\u540c\u7406\n\n#### \u6211\u4eec\u4e0d\u8981\u9012\u5f52\u5230\u6bcf\u4e2a\u8282\u70b9\u3002\u6240\u4ee5\u8981\u6709\u4e00\u4e2a\u65b0\u7684\u6982\u5ff5\uff1a\u61d2\u6807\u8bb0\u3002\n\n\u5c31\u50cf\u65b0\u5e74\u7684\u65f6\u5019\u7684\u538b\u5c81\u94b1\uff0c\u53ea\u6709\u8981\u7528\u7684\u65f6\u5019\u624d\u7528\uff0c\u4e0d\u8981\u7684\u76f4\u63a5\u7ed9\u7236\u6bcd\u4fdd\u7ba1\u3002\n\n\u6240\u4ee5\uff0c\u4f20\u4e0b\u6765\u7684\u66f4\u6539\u503c\u82e5\u5728\u4e00\u4e2a\u533a\u95f4\u91cc\uff0c\u5c31\u4e0d\u518d\u4e0b\u4f20\uff0c\u4fee\u6539\u5b8c\u8be5\u8282\u70b9\u4fe1\u606f\u540e\uff0c\u5728\u6b64\u8282\u7684\u61d2\u6807\u8bb0\u4e0a\u6253\u4e00\u4e2a\u66f4\u6539\u503c\u3002\n\n\u5f53\u9700\u8981\u9012\u5f52\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u65f6\uff0c\u6807\u8bb0\u4e0b\u4f20\u7ed9\u5b50\u8282\u70b9\u3002\u8fd9\u91cc\u4e0d\u5fc5\u7ba1\u7528\u54ea\u4e2a\u5b50\u8282\u70b9\uff0c\u4e24\u4e2a\u90fd\u4f20\u4e0b\u53bb\u3002\n\n\u2460\u5f53\u524d\u8282\u70b9\u7684\u61d2\u6807\u8bb0\u7d2f\u79ef\u5230\u5b50\u8282\u70b9\u7684\u61d2\u6807\u8bb0\u4e2d\u3002\n\n\u2461\u4fee\u6539\u5b50\u8282\u70b9\u72b6\u6001\u3002\u5728\u5f15\u4f8b\u4e2d\uff0c\u5c31\u662f\u539f\u72b6\u6001+\u5b50\u8282\u70b9\u533a\u95f4\u70b9\u7684\u4e2a\u6570\u7236\u8282\u70b9\u4f20\u4e0b\u6765\u7684\u61d2\u6807\u8bb0\u3002\n\n\u2462\u7236\u8282\u70b9\u61d2\u6807\u8bb0\u6e050\u3002\u8fd9\u4e2a\u61d2\u6807\u8bb0\u5df2\u7ecf\u4f20\u4e0b\u53bb\u4e86\uff0c\u6b20\u503a\u8fd8\u6e05\uff0c\u4e0d\u7528\u518d\u8fd8\u4e86\u3002\n\n### \u4e0b\u4f20\u4ee3\u7801\n\n```\nvoid pushdown(int k)\n{\n\ttree[k*2].w+=((tree[k*2].r-tree[k*2].l+1)*tree[k].f);\n\ttree[k*2+1].w+=((tree[k*2+1].r-tree[k*2+1].l+1)*tree[k].f);\n\ttree[k*2].f+=tree[k].f;\n\ttree[k*2+1].f+=tree[k].f;\n\ttree[k].f=0;\n}\n```\n### \u533a\u95f4\u4fee\u6539\u4ee3\u7801\n\n```\nvoid add(int k,int t,int w)\n{ int mid;\nif (t>w) return;\n\tif (x<=t&&w<=y) \n\t  {\n\t  \ttree[k].w+=((w-t+1)*z);\n\t  \ttree[k].f+=z;\n\t  \treturn ;\n\t  }\n\tmid=(t+w)/2;\n\tif (tree[k].f) pushdown(k); \n\tif (x<=mid) add(k*2,t,mid);\n\tif (y>mid) add(k*2+1,mid+1,w);\n\ttree[k].w=tree[k*2].w+tree[k*2+1].w;\n}\n```\n\n### \u5355\u70b9\u67e5\u8be2\u4ee3\u7801\n\n```\n void ask(int k)//\u5355\u70b9\u67e5\u8be2\n{\n    if(tree[k].l==tree[k].r)\n    {\n        ans=tree[k].w;\n        return ;\n    }\n    if(tree[k].f) pushdown(k);//\u61d2\u6807\u8bb0\u4e0b\u4f20\uff0c\u552f\u4e00\u9700\u8981\u66f4\u6539\u7684\u5730\u65b9\n    int m=(tree[k].l+tree[k].r)/2;\n    if(x<=m) ask(k*2);\n    else ask(k*2+1);\n}\n```\n### \u533a\u95f4\u67e5\u8be2\u4ee3\u7801\n```\nint ask(int k,int t,int w)\n{ int mid;\nif (t>w) return 0;\n\tif (x<=t&&w<=y)\n\t  {\n\t  \treturn tree[k].w;\n\t  }\n\tmid=(t+w)/2;\n\tif (tree[k].f) pushdown(k); \n\tint sum=0;\n\tif (x<=mid)sum+=ask(k*2,t,mid);\n\tif (y>mid)sum+=ask(k*2+1,mid+1,w);\n\ttree[k].w=tree[k*2].w+tree[k*2+1].w;\n\treturn sum;\n}\n```\n\n[\u66f4\u5177\u4f53\u7684\u63cf\u8ff0](https://www.luogu.org/blog/2005-00-88-wyk/qian-tan-xian-duan-shu)\n\u65e0\u803b\u5730\u63a8\u8350\u4e00\u4e0b\u6211\u7684\u535a\u5ba2\n\n\u6240\u4ee5\u8bf4\u6b64\u9898\u4e3a\u7ebf\u6bb5\u6811\u7684\u62d3\u5c55\uff1a\u628a\u6c42\u533a\u95f4\u548c\u6539\u4e3a\u4e86\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u61d2\u6807\u8bb0\u5b58\u50a8\u7684\u5185\u5bb9\u6539\u4e3a\u6700\u5c0f\u503c\uff0c\u533a\u95f4\u4fee\u6539\u518d\u52a0\u5de5\u4e00\u4e0b\u3002\n\n\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\nvoid build(int k,int t,int w)\n{ int mid;\n\tif (t>w) return;\n\tif (t==w)\n\t  {\n\t  \ttree[k].l=t;tree[k].r=w;\n\t  \ttree[k].w=a[t];\n\t  \treturn;\n\t  }\n\tmid=(t+w)/2;\n\tbuild(k*2,t,mid);\n\tbuild(k*2+1,mid+1,w);\n\ttree[k].l=t;tree[k].r=w;\n\ttree[k].w=min(tree[k*2].w,tree[k*2+1].w);\n}\nint ask(int k,int t,int w)\n{ int mid;\nif (t>w) return 0;\n\tif (x<=t&&w<=y)\n\t  {\n\t  \treturn tree[k].w;\n\t  }\n\tmid=(t+w)/2;\n\tint sum=INT_MAX;\n\tif (x<=mid)sum=min(sum,ask(k*2,t,mid));\n\tif (y>mid)sum=min(sum,ask(k*2+1,mid+1,w));\n\treturn sum;\n}\nint read(int &x)\n{\n\tchar c=getchar();int f=1;\n\tx=0;\n\twhile (c<'0'||c>'9')\n\t  {\n\t  if (c=='-') f=-1;\n\t  c=getchar();\n      }\n\twhile (c>='0'&&c<='9')\n      {\n      \tx=x*10+(int)c-48;\n      \tc=getchar();\n\t  }\n\treturn x*f;\n}\n\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n log n)$\n\n\u53ea\u8981\u4e0d\u5361\u5e38\uff0c\u901f\u5ea6\u548c\u5355\u8c03\u961f\u5217\u548c$RMQ$\u76f8\u5dee\u65e0\u51e0\uff0c\u4e5f\u662f\u4e00\u79cd\u6c42\u6700\u503c\u7684\u65b9\u6848\uff0c\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0b\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000010\nusing namespace std;\nstruct node{\n\tint l,r,w,f;\n}tree[N*4];\nint x,y,z,i,a[N],n,m;\nvoid build(int k,int t,int w)\n{ int mid;\n\tif (t>w) return;\n\tif (t==w)\n\t  {\n\t  \ttree[k].l=t;tree[k].r=w;\n\t  \ttree[k].w=a[t];\n\t  \ttree[k].f=a[t];\n\t  \treturn;\n\t  }\n\tmid=(t+w)/2;\n\tbuild(k*2,t,mid);\n\tbuild(k*2+1,mid+1,w);\n\ttree[k].l=t;tree[k].r=w;\n\ttree[k].w=min(tree[k*2].w,tree[k*2+1].w);\n\ttree[k].f=max(tree[k*2].f,tree[k*2+1].f);\n}\nint ask1(int k,int t,int w)\n{ int mid;\nif (t>w) return 0;\n\tif (x<=t&&w<=y)\n\t  {\n\t  \treturn tree[k].w;\n\t  }\n\tmid=(t+w)/2;\n\tint sum=INT_MAX;\n\tif (x<=mid)sum=min(sum,ask1(k*2,t,mid));\n\tif (y>mid)sum=min(sum,ask1(k*2+1,mid+1,w));\n\treturn sum;\n}\nint ask2(int k,int t,int w)\n{ int mid;\nif (t>w) return 0;\n\tif (x<=t&&w<=y)\n\t  {\n\t  \treturn tree[k].f;\n\t  }\n\tmid=(t+w)/2;\n\tint sum=-INT_MAX;\n\tif (x<=mid)sum=max(sum,ask2(k*2,t,mid));\n\tif (y>mid)sum=max(sum,ask2(k*2+1,mid+1,w));\n\treturn sum;\n}\nint read(int &x)\n{\n\tchar c=getchar();int f=1;\n\tx=0;\n\twhile (c<'0'||c>'9')\n\t  {\n\t  if (c=='-') f=-1;\n\t  c=getchar();\n      }\n\twhile (c>='0'&&c<='9')\n      {\n      \tx=x*10+(int)c-48;\n      \tc=getchar();\n\t  }\n\treturn x*f;\n}\nsigned main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read(n);m=read(m);\n\tfor (int i=1;i<=4*N;i++) \n\t  {\n\t  \ttree[i].f=-INT_MAX;\n\t  \ttree[i].w=INT_MAX;\n\t  }\n\tfor (int i=1;i<=n;i++) a[i]=read(a[i]);\n\tbuild(1,1,n);\n\tfor (int i=m;i<=n;i++)\n\t  { int c;\n\t  \tx=i-m+1;y=i;\n\t  \tprintf(\"%d \",ask1(1,1,n));\n\t  }\n\tprintf(\"\\n\");\n\tfor (int i=m;i<=n;i++)\n\t  { int c;\n\t  \tx=i-m+1;y=i;\n\t  \tprintf(\"%d \",ask2(1,1,n));\n\t  }\n}\n```",
        "postTime": 1547353074,
        "uid": 119685,
        "name": "Kevin_Wa",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "# $\\color{red}\\text{ST\u8868}$\n\n\u4e0d\u77e5\u9053ST\u8868\u7684\u53bb\u505a\u4e00\u4e0b[\u8fd9\u9053\u9898](https://www.luogu.org/problem/P3865)\n\n\u8fd9\u91cc\u4e0d\u5bf9ST\u8868\u505a\u8fc7\u591a\u4ecb\u7ecd\n\n\u7a0d\u5fae\u4ecb\u7ecd\u4e00\u70b9\uff1a\u5148**\u9884\u5904\u7406**\uff0c\u4e4b\u540e$O(1)$\u67e5\u627e\u533a\u95f4\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\n\n### \u8fd9\u9053\u9898\u7684\u6570\u636e$\\color{red}\\text{\u4e27\u5fc3\u75c5\u72c2\uff01}$\n\n\u4ea4\u4e868\u904d\u624d\u8fc7\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/73381.png)\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int logn=25;\nint n,m,le,ri,f[1000001][logn+1],f2[1000001][logn+1],mx[1000001],mn[1000001];//f[i][j]=i\u4e3a\u8d77\u70b9\uff12\uff3e\uff4a\u4e2a\u6570\u4e2d\u6700\u5927\u503c  \nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=n;i++)scanf(\"%d\",&f[i][0]),f2[i][0]=f[i][0];//\u521d\u59cb\u5316\uff0c\u7b2ci\u4e2a\u6570\u5f00\u59cb\u957f\u5ea61\u7684\u533a\u95f4\u6700\u5927\u503c\u662f\u672c\u8eab\n    for(int j=1;j<=logn;j++){//\u679a\u4e3e\u533a\u95f4  2 4 8 16\n     \tfor(int i=1;i+(1<<j)-1<=n;i++)\n      \t\tf[i][j]=max(f[i][j-1],f[i+(1<<(j-1))][j-1]),f2[i][j]=min(f2[i][j-1],f2[i+(1<<(j-1))][j-1]);\n\t}\n    for(int i=1;i<=n-m+1;i++){\n        le=i,ri=i+m-1;\n        int len=log2(ri-le+1);\n        mx[i]=max(f[le][len],f[ri-(1<<len)+1][len]),mn[i]=min(f2[le][len],f2[ri-(1<<len)+1][len]);\n    }\n    for(int i=1;i<=n-m+1;i++){\n    \tcout<<mn[i]<<\" \";\n\t}\n\tcout<<endl;\n\tfor(int i=1;i<=n-m+1;i++){\n\t\tcout<<mx[i]<<\" \"; \n\t}\n    return 0;\n}\n```\n$\\color{blue}\\text{\u5b8c\u7f8eMLE}$\n\n\u6700\u5f00\u59cb\uff0c\u4e24\u4e2aST\u8868\u6570\u7ec4\uff0c\u5206\u522b\u8bb0\u5f55\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\uff0c\u7136\u540e\uff0c\u5b8c\u7f8eMLE\u4e86\u3002\n\n\u4e4b\u540e\u770b\u4e86\u4e00\u4e0b\u8ba8\u8bba\u8d34\uff0c\u604d\u7136\u5927\u609f\uff1a\u54e6\uff0c\u5f00**\u4e00\u4e2a**$ST$\u8868\u6570\u7ec4\uff0c\u7b97\u4e24\u904d\u3002\n\n\u7136\u540e\u65b0\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int logn=25;\nint n,m,le,ri,f[1000001][logn+1],mx[1000001],mn[1000001],input[1000001];//f[i][j]=i\u4e3a\u8d77\u70b9\uff12\uff3e\uff4a\u4e2a\u6570\u4e2d\u6700\u5927\u503c  \nint main(){\n    scanf(\"%d%d\",&n,&m);\n    //\u5148\u7b97\u6700\u5c0f\u503c\n    for(int i=1;i<=n;i++) scanf(\"%d\",&input[i]),f[i][0]=input[i];//\u521d\u59cb\u5316\uff0c\u7b2ci\u4e2a\u6570\u5f00\u59cb\u957f\u5ea61\u7684\u533a\u95f4\u6700\u5927\u503c\u662f\u672c\u8eab\n    for(int j=1;j<=logn;j++){//\u679a\u4e3e\u533a\u95f4  2 4 8 16\n     \tfor(int i=1;i+(1<<j)-1<=n;i++)\n\t\t\tf[i][j]=min(f[i][j-1],f[i+(1<<(j-1))][j-1]);\n\t}\n    for(int i=1;i<=n-m+1;i++){\n        le=i,ri=i+m-1;\n        int len=log2(ri-le+1);\n\t\tmn[i]=min(f[le][len],f[ri-(1<<len)+1][len]);\n    }\n    for(int i=1;i<=n-m+1;i++){\n    \tcout<<mn[i]<<\" \";\n\t}\n\tcout<<endl;\n   //\u518d\u7b97\u6700\u5927\u503c\n\tmemset(f,0,sizeof(f));\n\tfor(int i=1;i<=n;i++) f[i][0]=input[i];//\u521d\u59cb\u5316\uff0c\u7b2ci\u4e2a\u6570\u5f00\u59cb\u957f\u5ea61\u7684\u533a\u95f4\u6700\u5927\u503c\u662f\u672c\u8eab\n    for(int j=1;j<=logn;j++){//\u679a\u4e3e\u533a\u95f4  2 4 8 16\n     \tfor(int i=1;i+(1<<j)-1<=n;i++)\n      \t\tf[i][j]=max(f[i][j-1],f[i+(1<<(j-1))][j-1]);\n\t}\n    for(int i=1;i<=n-m+1;i++){\n        le=i,ri=i+m-1;\n        int len=log2(ri-le+1);\n        mx[i]=max(f[le][len],f[ri-(1<<len)+1][len]);\n    }\n\tfor(int i=1;i<=n-m+1;i++){\n\t\tcout<<mx[i]<<\" \"; \n\t}\n    return 0;\n}\n```\n\n$\\color{orange}\\text{\u5b8c\u7f8eTLE}$\n\n\u600e\u4e48\u4f1a$TLE$\u5462\uff1f\n\n\u8fd9\u5c31\u8981\u7275\u626f\u5230\u6bd2\u7624\u6570\u636e\u4e86\u3002\n\n~~\u6211\u6c38\u8fdc\u4e0d\u4f1a\u544a\u8bc9\u4f60\u662flogn\u5f00\u5927\u4e86~~\n\n\u518d\u6539\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int logn=19;\nint n,m,le,ri,f[1000001][logn+1],mx[1000001],mn[1000001],input[1000001];//f[i][j]=i\u4e3a\u8d77\u70b9\uff12\uff3e\uff4a\u4e2a\u6570\u4e2d\u6700\u5927\u503c  \nint main(){\n    scanf(\"%d%d\",&n,&m);\n    //\u5148\u7b97\u6700\u5c0f\u503c\n    for(int i=1;i<=n;i++) scanf(\"%d\",&input[i]),f[i][0]=input[i];//\u521d\u59cb\u5316\uff0c\u7b2ci\u4e2a\u6570\u5f00\u59cb\u957f\u5ea61\u7684\u533a\u95f4\u6700\u5927\u503c\u662f\u672c\u8eab\n    for(int j=1;j<=logn;j++){//\u679a\u4e3e\u533a\u95f4  2 4 8 16\n     \tfor(int i=1;i+(1<<j)-1<=n;i++)\n\t\t\tf[i][j]=min(f[i][j-1],f[i+(1<<(j-1))][j-1]);\n\t}\n    for(int i=1;i<=n-m+1;i++){\n        le=i,ri=i+m-1;\n        int len=log2(ri-le+1);\n\t\tmn[i]=min(f[le][len],f[ri-(1<<len)+1][len]);\n    }\n    for(int i=1;i<=n-m+1;i++){\n    \tcout<<mn[i]<<\" \";\n\t}\n\tcout<<endl;\n   //\u518d\u7b97\u6700\u5927\u503c\n\tmemset(f,0,sizeof(f));\n\tfor(int i=1;i<=n;i++) f[i][0]=input[i];//\u521d\u59cb\u5316\uff0c\u7b2ci\u4e2a\u6570\u5f00\u59cb\u957f\u5ea61\u7684\u533a\u95f4\u6700\u5927\u503c\u662f\u672c\u8eab\n    for(int j=1;j<=logn;j++){//\u679a\u4e3e\u533a\u95f4  2 4 8 16\n     \tfor(int i=1;i+(1<<j)-1<=n;i++)\n      \t\tf[i][j]=max(f[i][j-1],f[i+(1<<(j-1))][j-1]);\n\t}\n    for(int i=1;i<=n-m+1;i++){\n        le=i,ri=i+m-1;\n        int len=log2(ri-le+1);\n        mx[i]=max(f[le][len],f[ri-(1<<len)+1][len]);\n    }\n\tfor(int i=1;i<=n-m+1;i++){\n\t\tcout<<mx[i]<<\" \"; \n\t}\n    return 0;\n}\n```\n$\\color{green}\\text{\u5b8c\u7f8eAC}$\n\n~~19\u662f\u6211\u4ea4\u4e86\u597d\u51e0\u6b21\u8bd5\u51fa\u6765\u7684\u6570~~\n",
        "postTime": 1566217424,
        "uid": 145553,
        "name": "\u6211\u662f\u849f\u5f31",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u4e0d\u542b\u4fee\u6539\u64cd\u4f5c\u7684\u533a\u95f4\u6700\u503c\u67e5\u8be2\uff0cRMQ\u5927\u6982\u53ef\u505a\n\n\u4e8e\u662f\u6211\u4e00\u5f00\u59cb\u6572\u4e86\u4e00\u4e2a\u8fd9\u6837\u7684RMQ\n\n\u81f3\u4e8eRMQ\uff0c\u7f51\u4e0a\u6709\u5f88\u591a\u8bb2\u89e3\uff0c\u84dd\u4e66\u4e0a\u4e5f\u6709\uff0c\u6211\u5c31\u4e0d\u518d\u8bf4\u4e00\u904d\u4e86w\n\n```cpp\n    #include<cstdio>\n    #include<algorithm>\n    #include<iostream>\n    #include<utility>\n    using namespace std;\n    int n,k;\n    int dmax[1000010][20],dmin[1000010][20];\n    int a[1000010];\n    int mmax[1000010],mmin[1000010];\n    void init() //\u9884\u5904\u7406\n    {\n        for(int i=0;i<n;i++) dmin[i][0]=dmax[i][0]=a[i];\n        for(int j=1;(1<<j)<=n;j++)\n        {\n            for(int i=0;i+(1<<j)<=n;i++)\n            {\n                dmin[i][j]=min(dmin[i][j-1],dmin[i+(1<<(j-1))][j-1]);\n                dmax[i][j]=max(dmax[i][j-1],dmax[i+(1<<(j-1))][j-1]);\n            }\n        }\n    }\n    pair<int,int> query(int x,int y) //\u67e5\u8be2\n    {\n        int k=0;\n        while((1<<(k+1))<=y-x+1) k++;\n        return make_pair(min(dmin[x][k],dmin[y-(1<<k)+1][k]),max(dmax[x][k],dmax[y-(1<<k)+1][k]));\n    }\n    int main()\n    {\n        ios::sync_with_stdio(false);\n        cin>>n>>k;\n        for(int i=0;i<n;i++)\n        {\n            cin>>a[i];\n        }\n        init();\n        for(int i=0,j=0;i+k<=n;i++,j++)\n        {\n            //first\u662f\u6700\u5c0f\u503c\uff0csecond\u662f\u6700\u5927\u503c\n            pair<int,int> p=query(i,i+k-1);\n            mmin[i]=p.first;\n            mmax[j]=p.second;\n        }\n        for(int i=0;i+k<=n;i++)\n        {\n            cout<<mmin[i]<<' ';\n        }\n        cout<<endl;\n        for(int i=0;i+k<=n;i++)\n        {\n            cout<<mmax[i]<<' ';\n        }\n        cout<<endl;\n        return 0;\n    }\n```\n\u5927\u4f53\u4e0a\u770b\u8d77\u6765\u5e76\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u7136\u540e\u5c31\u4ea4\u4e86\u4e0a\u53bb\uff0c\u7136\u540e\u5c31MLE\n\u7136\u540e\u5f00\u59cb\u4f18\u5316\u7a7a\u95f4\u76f4\u5230\u6700\u540e\u53ea\u5269dmax\u548cdmin\u4e24\u4e2a\u6570\u7ec4\u7136\u540e\u63a5\u7740MLE\n\n\u7136\u800c\u8eab\u4e3a\u849f\u84bb\u7684\u6211\u6700\u540e\u624d\u60f3\u5230\u8fd9\u9898\u548c\u666e\u901a\u7684\u533a\u95f4\u6700\u503c\u67e5\u8be2\u4f3c\u4e4e\u6709\u4e0d\u540c\uff0c\u5b83\u7684\u533a\u95f4\u957f\u5ea6\u662f\u56fa\u5b9a\u7684qwq\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u4e24\u4e2ad\u6570\u7ec4\u53d8\u6210\u4e00\u7ef4\u7684qwq\n\n\u6211\u4eec\u77e5\u9053\uff0cRMQ\u4e2d\u6570\u7ec4d[i][j]\u8868\u793a\u4ecei\u5f00\u59cb\u957f\u5ea6\u4e3a2^j\u7684\u533a\u95f4\u5185\u7684\u6700\u503c\uff0c\u65e2\u7136\u67e5\u8be2\u957f\u5ea6k\u56fa\u5b9a\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbed[i]\u4e2d\u5b58\u50a8\u4ecei\u5f00\u59cb\uff0c\u6ee1\u8db3$2^{j}\\leqslant k$\u5e76\u4e14$i+j<n$\u7684\u6700\u5927j\u957f\u5ea6\u7684\u533a\u95f4\u6700\u503c\uff0c\u8fd9\u6837\u5728\u67e5\u8be2\u533a\u95f4[i,i+k]\u65f6\u6211\u4eec\u53d6d[i]\u548cd[i+k-j]\u4e2d\u7684\u6700\u503c\u5373\u53ef\n\n\u8fd9\u4e2a\u9898\u9700\u8981\u540c\u65f6\u67e5\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u8fd9\u6837\u5f00\u4e24\u4e2a\u6570\u7ec4\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n    #include<cstdio>\n    #include<algorithm>\n    #include<iostream>\n    using namespace std;\n    int n,k;\n    int dmax[1000001],dmin[1000001];\n    int init() //\u9884\u5904\u7406\n    {\n        int j=1;\n        for(j=1;j*2<=k;j*=2)\n        {\n            for(int i=0;i+j<n;i++)\n            {\n                dmin[i]=min(dmin[i+j],dmin[i]);\n                dmax[i]=max(dmax[i+j],dmax[i]);\n            }\n        }\n        return j;\n    }\n    int main()\n    {\n        ios::sync_with_stdio(false);\n        cin>>n>>k;\n        for(int i=0;i<n;i++)\n        {\n            cin>>dmin[i];\n            dmax[i]=dmin[i];\n        }\n        int j=init(); //\u4fdd\u5b58\u6c42\u5f97\u7684\u6700\u5927j\n        for(int i=0;i+k<=n;i++)\n        {\n            cout<<min(dmin[i],dmin[i+k-j])<<' ';\n        }\n        cout<<endl;\n        for(int i=0;i+k<=n;i++)\n        {\n            cout<<max(dmax[i],dmax[i+k-j])<<' ';\n        }\n        cout<<endl;\n        return 0;\n}\n```",
        "postTime": 1515035564,
        "uid": 31630,
        "name": "SystemLLH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "# \u8fd9\u662f\u4e00\u9053\u5355\u8c03\u53cc\u5411\u961f\u5217\u7684\u677f\u5b50\u9898\u3002\n\u597d\u50cf\u7528\u7ebf\u6bb5\u6811\u4e5f\u53ef\u4ee5\u505a\uff0c~~\u4f46\u662f\u672c\u849f\u84bb\u4e0d\u4f1a~~\n\n\n------------\n\n\u5148\u770b\u9898\u76ee\uff0c\u6240\u7ed9\u7684\u6570\u5217\u5e76\u4e0d\u7b26\u5408\u4e25\u683c\u7684\u5355\u8c03\u6027\n\n\u6240\u4ee5\u600e\u4e48\u505a\n\n~~\u66b4\u641c~~\u7528\u53cc\u5411\u961f\u5217\u786e\u4fdd\u4e25\u683c\u7684\u5355\u8c03\u6027\n\n\n------------\n\n```\n8 3\n\n1 3 -1 -3 5 3 6 7\n```\n\u62ff\u6837\u4f8b\u4e3e\u4f8b\uff08\u6700\u5c0f\u503c\uff09 \n\n\u5f00\u59cb1\u5165\u5217\uff08\u4e0d\u8981\u5728for\u4e4b\u524d\u5165\uff0c\u4f1a\u5f71\u54cd\u540e\u7eed\u5143\u7d20\u7684\u5165\u5217\uff09\n\n~~\u6211\u5c31\u662f\u8fd9\u6837\u5361\u4e86\u4e00\u665a\u4e0a~~\n\n3\u540c\u7406\n\n\u5f53-1\u5165\u5217\u65f6\uff0c\u524d\u9762\u76841\uff0c3\u8981\u961f\u5c3e\u51fa\u5217\n\n\u8fd9\u6837\u53ef\u4ee5\u7ef4\u62a4\u53cc\u5411\u961f\u5217\u7684\u4e25\u683c\u5355\u8c03\u6027\uff0c\u5e76\u4e14\u7701\u53bb\u4e86\u7528\u6574\u4e2a\u961f\u5217\u5224\u65ad\u7684\u65f6\u95f4\u3002\n\n-3\u5165\u961f\uff0c\u628a\u524d\u9762\u5168\u90e8\u5f39\u8d70\u3002\n\n5\u5165\u961f\u65f6\uff0c\u867d\u7136\u5b83\u6bd4-3 \u52a3\uff0c\u4f46\u7531\u4e8e\u5b83\u5904\u4e8e\u961f\u5c3e\uff0c\u5355\u8c03\u6027\u4f9d\u65e7\u7ef4\u62a4\n\n3\u5165\u961f\uff0c\u961f\u5c3e\u5f39\u8d705\n\n\u6ce8\u610f\u6b64\u65f6\u7a97\u53e3\u5df2\u7ecf\u4e3a3\uff0c\u57286\u5165\u961f\u540e\uff0c\u8981\u5f39\u8d70-3\n\n\u56e0\u4e3a\u5df2\u7ecf\u8d85\u8fc7\u8303\u56f4\n\n\u8fd9\u6837\u6700\u5c0f\u503c\u53d8\u4e3a-3\u4e86\n\n\u6700\u5927\u503c\u6362\u4e2a\u7b26\u53f7\uff0cctrl+V\u4e00\u904d\u8fc7\n \n\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\u70b9\uff0c\u6b64\u9898\u4e0d\u96be \n\n~~\u867d\u7136\u6211\u5361\u4e86\u4e00\u665a\u4e0a~~\n\n\u6700\u540eAC\u4ee3\u7801\u9644\u4e0a \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<deque>\n#include<iostream>\n\nusing namespace::std;\n\nint n,k,num[1000009],t;\ndeque <int> a;//\u5355\u8c03\u961f\u5217\u7684\u5b9e\u73b0\u4f9d\u9760\u53cc\u5411\u961f\u5217\n\nint main()\n{\n\tcin>>n>>k;\n\tfor(int i=0;i<n;i++)\n\t\tcin>>num[i];//\u8bfb\u5165\n\tt=0;//\u961f\u5934\u5728num\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u6307\u9488\n\tfor(int i=0;i<n;i++)\n\t{\n\t\t\twhile(!a.empty()&&a.back()>=num[i]) a.pop_back();//\u4e0d\u4f18\uff0c\u5f39\u51fa\n\t\ta.push_back(num[i]); \n\t\tif(i-t>=k&&num[t]==a.front()) \n\t\t{\n\t\t\tt++;\n\t\t\ta.pop_front();\n\t\t\t\n\t\t}\n\t\tif(i-t>=k&&num[t]!=a.front()) t++;//\u5982\u679cnum\u7684t\u5728\u961f\u5217\u5df2\u7ecf\u5f39\u6389\uff0c\u5c31\u4e0d\u7528\u5f39\u51fa\n\t\tif(i>=k-1) \n\t\t\tcout<<a.front()<<' ';//\u6ce8\u610f\u53ea\u5728\u7a97\u53e3\u5b8c\u5168\u8fdb\u5165\u540e\u518d\u8f93\u51fa\n\t}\n\tcout<<endl;\t\n\ta.clear();//\u6e05\u7a7a\u961f\u5217\uff0c\u91cd\u65b0\u8ba1\u7b97\n\tt=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\twhile(!a.empty()&&a.back()<=num[i]) a.pop_back();\n\t\ta.push_back(num[i]); \n\t\tif(i-t>=k&&num[t]==a.front()) \n\t\t{\n\t\t\tt++;\n\t\t\ta.pop_front();\n\t\t\t\n\t\t}\n\t\tif(i-t>=k&&num[t]!=a.front()) t++;\n\t\tif(i>=k-1) \n\t\t\tcout<<a.front()<<' ';\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1570159175,
        "uid": 237308,
        "name": "AlanSP",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "### \u672c\u6587~~\u9a84\u50b2~~\u5730\u9009\u81ea\uff1a\u849f\u84bb[black_white_tony](https://www.luogu.org/space/show?uid=80937)\u7684[\u535a\u5ba2](https://www.luogu.org/blog/bwt/)\n### 0.\u524d\u8a00\n\n\u5f88\u660e\u663e\u7684\uff0c\u672c\u9898\u662f\u5355\u8c03\u961f\u5217\u7684\u6a21\u677f\u9898\u76ee\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u6211\uff08\u548c\u6765\u8d4f\u5149\u7684 $julao$ \uff09\u4eca\u540e\u590d\u4e60\uff0c\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n### 1.\u7b80\u8ff0\n\n\u5355\u8c03\u961f\u5217\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff08~~\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97\u57fa\u7840\u6570\u636e\u7ed3\u6784~~\uff09\n\n\u5b83\u6ee1\u8db3\u4e00\u4e0b\u6027\u8d28\uff1a\n1. \u5355\u8c03\u961f\u5217\u4e2d\u7684\u6570\u662f\u6ee1\u8db3\u5355\u8c03\u9012\u589e/\u9012\u51cf/\u6216\u662f\u5176\u4ed6\u7684\u6027\u8d28\n\n2. \u5355\u8c03\u961f\u5217\u4e2d\u7684\u6570\u7684\u4e0b\u6807\u662f\u5355\u8c03\u9012\u589e\u7684\uff08\u8fd9\u4e5f\u662f\u4e0b\u9762\u7684\u51e0\u4f4d $julao$ \u5c06\u5355\u8c03\u961f\u5217\u4e0e\u4f18\u5148\u961f\u5217\u6df7\u4e3a\u4e00\u8c08\u7684\u9519\u8bef\u4e4b\u5904\u4e86\uff0c\u4f18\u5148\u961f\u5217\u4f1a\u5c06\u4e0b\u6807\u6539\u53d8\uff09\n\n### 2.\u5bf9\u4e8e\u672c\u9898\u7684\u5206\u6790\n\n\u672c\u9898\u5f88\u660e\u663e\u662f\u4f7f\u7528\u5355\u8c03\u961f\u5217\u6c42\u7a97\u53e3\u4e2d\u5f97\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u5f97\u3002\n\n\u4ec0\u4e48\u662f\u7a97\u53e3\u5462\uff1f\n\n\uff08\u867d\u7136\u6211\u53ea\u662f\u53e3\u80e1\u3002\u3002\u3002\u53cd\u6b63\u7a97\u53e3\u633a\u597d\u7406\u89e3\u7684\u5427\uff0c\uff0c\u53e3\u80e1\u8fd9\u4e48\u591a\u5927\u5bb6\u522b\u7ed5\u6655\u4e86\uff0c\u5c31\u662f\u4f60\u7406\u89e3\u7684\u90a3\u4e2a\u7a97\u53e3\uff09\n\n\u7a97\u53e3\u662f\u6307\uff1a\u5728\u4e00\u6bb5\u5e8f\u5217\u4e2d\uff0c\u4ece\u4e0b\u6807\u4e3a $i$ \u5230\u4e0b\u6807\u4e3a $i +\u3000k - 1$ \u7684\u4e0b\u6807\u8fde\u7eed\u7684\u5b50\u5e8f\u5217\u3002\u5176\u4e2d $k$ \u4e3a\u7a97\u53e3\u5927\u5c0f\u3002\u6ed1\u52a8\u7a97\u53e3\u662f\u6307 $i$ \u4f1a\u6ed1\u52a8\uff0c\u4e5f\u5c31\u662f\u9012\u589e\u6216\u9012\u51cf\uff0c\u4ece\u800c\u4f7f\u5f97\u6574\u4e2a\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e0d\u53d8\uff0c\u4f46\u6db5\u76d6\u7684\u6570\u53d8\u5316\u4e86\u3002\n\n\u5f62\u8c61\u7684\u8bb2\uff0c\u5c31\u662f\u5728\u4e00\u6bb5\u5b50\u5e8f\u5217\u53f3\u7aef\u70b9\u968f\u7740\u5de6\u7aef\u70b9\u7684\u589e\u5927\u800c\u589e\u5927\u3002\n\n### 3.\u5bf9\u4e8e\u5355\u8c03\u961f\u5217\u7684\u5206\u6790\n\n\u5355\u8c03\u961f\u5217\u6709\u4e24\u4e2a\u64cd\u4f5c\uff1a\u5220\u5934\u548c\u53bb\u5c3e\uff08\u8fd9\u4e24\u7684\u540d\u5b57\u662f\u6765\u6e90\u4e8e\uff09[\u8fd9\u4f4d $julao$ \u7684\u535a\u5ba2](https://www.luogu.org/blog/ybwowen/dan-diao-dui-lie)\n\n(\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u672c\u9898\u5f53\u4e2d\u7684\u5934\u662f\u6307\u6700\u540e\u8fdb\u6765\u7684\u6570\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5c3e\u4e3a\u6700\u5148\u8fdb\u6765\u7684\u6570\u6240\u5728\u7684\u4f4d\u7f6e)\n\n#### 3.1 \u53bb\u5c3e\n\n\u5f88\u660e\u663e\uff0c\u672c\u9898\u7684\u662f\u6709\u7a97\u53e3\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7684\u5355\u8c03\u961f\u5217\u4e2d\u7684\u6570\u7684\u4e0b\u6807\uff0c\u4e0d\u4ec5\u8981\u9012\u589e\uff0c\u800c\u4e14\u4e0d\u80fd\u8fc7\u671f\u3002\n\u6240\u4ee5\u6bcf\u6b21\u6211\u4eec\u66f4\u65b0\u961f\u5934\u7684\u65f6\u5019\uff0c\u90fd\u8981\u5224\u65ad\u961f\u5c3e\u7684\u4e0b\u6807\u662f\u5426\u8fc7\u671f\u4e86\u3002\n\n\u53ea\u8981\u961f\u5c3e\u7684\u4e0b\u6807\u8fc7\u671f\uff0c\u5373\u5728\u4ee5\u5f53\u524d\u66f4\u65b0\u5230\u7684\u6570\u4e3a\u5934\u7684\u7a97\u53e3\u5916\uff0c\u5c31 $pop$ \u51fa\u53bb\u3002\n\n```cpp\nwhile (q.back().n <= i - k) q.pop_back(); // i \u4e3a\u5f53\u524d\u7684\u961f\u5934\u7684\u4e0b\u6807\uff0c k \u4e3a\u7a97\u53e3\u5927\u5c0f\n\n```\n\n(\u672c\u9898\u7684\u5355\u8c03\u961f\u5217\u7528\u7ed3\u6784\u4f53\u6765\u5199\u7684\uff0c\u7ed3\u6784\u4f53\u4e2d\u7684 $m$ \u4ee3\u8868\u503c\uff0c $n$ \u4ee3\u8868\u4e0b\u6807)\n\n#### 3.2 \u5220\u5934\n\n\u5bf9\u4e8e\u5e8f\u5217\u5f53\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u4f1a\u66f4\u65b0\u4e00\u6b21\u3002\u521a\u521a\u7684\u53bb\u5c3e\u662f\u7ef4\u62a4\u5355\u8c03\u961f\u5217\u4e0b\u6807\u7684\u6027\u8d28\uff0c\u73b0\u5728\u6211\u4eec\u6765\u7ef4\u62a4\u4e00\u4e0b\u5355\u8c03\u961f\u5217\u7684\u9012\u589e\u6027\u3002\n\n\u5b9a\u4e49\u961f\u5934\u7684\u6570\u4e3a $x$\uff0c\u66f4\u65b0\u5230\u7684\u6570\u4e3a $y$\n\n\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u961f\u5217\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u961f\u5217\u4e2d\u7684\u6240\u6709\u6570\uff0c\u4e0b\u6807\u6bd4\u5b83\u5927\u7684\u503c\u4e5f\u6bd4\u5b83\u5927\u3002\n\n\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u7a97\u53e3\u4e2d\u6700\u5c0f\u503c\uff0c\u8981\u7528\u5355\u8c03\u9012\u589e\u7684\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5c3e\u662f\u6700\u5c0f\u7684\u503c\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a $y > x$\n\t\n    \u90a3\u5c31\u76f4\u63a5\u653e\u5165\uff0c\u56e0\u4e3a\u8fd9\u6837\u4e0d\u7834\u574f\u6570\u7684\u5355\u8c03\u6027\uff0c\u653e\u5165\u8fd9\u4e2a\u6570\u540e\u961f\u5217\u4f9d\u7136\u662f\u9012\u589e\u7684\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a $y < x$ \n\n\t\u9996\u5148\u80af\u5b9a\u4e0d\u80fd\u76f4\u63a5\u653e\u5165\uff0c\u56e0\u4e3a\u653e\u5165\u540e\u5355\u8c03\u6027\u5c31\u4f1a\u88ab\u7834\u574f\u3002\n    \u9996\u5148\uff0c\u8fd9\u4e2a\u6570\u6bd4\u5f53\u524d\u961f\u5934\u7684\u6570\u7684\u4e0b\u6807\u8981\u5927\uff0c\u503c\u5374\u6bd4\u5b83\u5c0f\u3002\n    \u6240\u4ee5\u5728 $x$ \u7684\u6709\u751f\u4e4b\u5e74\u5185\uff0c\u90fd\u4e0d\u53ef\u80fd\u662f\u7a97\u53e3\u6700\u5c0f(\u6216\u6ee1\u8db3\u6240\u6c42)\u7684\u3002\n    \u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u66f4\u65b0\u5230\u4e86 $y$\uff0c\u6240\u4ee5\u53ea\u8981\u5305\u62ec $x$ \u7684\u7a97\u53e3\u4e00\u5b9a\u5305\u62ec\u4e86 $y$\uff0c\u800c\u4e14 $x > y$\uff0c\u6240\u4ee5\u4e00\u76f4\u5230 $x$ \u8fc7\u671f\uff0c\u4ed6\u90fd\u4e0d\u53ef\u80fd\u662f\u6700\u5c0f\u7684\u6570\u3002\n    \u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u6570\u6bd4\u4f60\u665a\u8fdb\u6765\uff08\u4e0b\u6807\u6bd4\u4f60\u5927\uff09\u8fd8\u6bd4\u4f60\u66f4\u6ee1\u8db3\u6211\u4eec\u8981\u6c42\u7684\u6570\u7684\u6027\u8d28\uff0c\u90a3\u4f60\u5c31\u6253\u4e0d\u8fc7\u4ed6\u4e86\u3002\n    \u6253\u4e0d\u8fc7\u600e\u4e48\u529e\uff0c\u76f4\u63a5pop\u6389\u554a\uff08\u597d\u6b8b\u5fcd\uff09\n    \n\u4e0a\u4ee3\u7801\n\n```cpp\nwhile (!q.empty() && a[i].m <= q.front().m) q.pop_front(); // a\u4e3a\u7ed9\u51fa\u7684\u5e8f\u5217\uff0cm\u548cn\u7684\u610f\u4e49\u5982\u4e0a\n```\n\u6240\u4ee5\u7ecf\u8fc7\u6211\u4eec\u521a\u624d\u7684\u5206\u6790\uff0c\u5355\u8c03\u961f\u5217\u7684\u901a\u7528\u6a21\u677f\u5982\u4e0b\uff1a\n\n\n```cpp\nwhile (!q.empty() && a[i].m \u66f4\u7b26\u5408\u6240\u6c42\u7684\u8981\u6c42 q.front().m) q.pop_front();\nq.push_front(a[i]); // \u73b0\u5728\u7684\u961f\u5934\u6253\u5f97\u8fc7\u66f4\u65b0\u5230\u7684\u6570\u4e86\nwhile (q.back().n <= i - k) q.pop_back();\nprintf(\"%d\", q.back().m); // \u961f\u5c3e\u7684\u662f\u5f53\u524d\u6700\u7b26\u5408\u8981\u6c42\u7684\u6570\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u770b\u4e0b\u9762\n```\n\n#### 3.3 \u6027\u8d28\n\n\u521a\u624d\u7684\u4e24\u4e2a\u64cd\u4f5c\u5206\u6790\u5b8c\u4e86\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u90a3\u4e2a\u662f\u6700\u7b26\u5408\u6027\u8d28\u7684\u6570\u3002\n\n\u6bcf\u4e00\u4e2a\u6570\u90fd\u6bd4\u540e\u4e00\u4e2a\u6570\u66f4\u7b26\u5408\u6027\u8d28\n\n\u6240\u4ee5\u5c31\u662f\u7b2c\u4e00\u4e2a\u6570\u4e86\u3002\n\n### \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e6 + 10;\nint all, k;\nstruct node { int n, m; }a[maxn];\ndeque<node> q;\nvoid BIG(int all, int k) {\n\tfor (int i = 1; i <= all; ++i) {\n\t\twhile (!q.empty() && a[i].m >= q.front().m )q.pop_front(); // \u6c42\u6700\u5c0f\u7684\n\t\tq.push_front(a[i]);\n\t\twhile (q.back().n <= i - k) q.pop_back();\n\t\tif (i >= k) printf(\"%d \", q.back().m);\n\t}\n\tq.clear();\n}\nvoid LOW(int all, int k) {\n\tfor (int i = 1; i <= all; ++i) {\n\t\twhile (!q.empty() && a[i].m <= q.front().m) q.pop_front(); // \u6c42\u6700\u5927\u7684\n\t\tq.push_front(a[i]);\n\t\twhile (q.back().n <= i - k) q.pop_back();\n\t\tif (i >= k) printf(\"%d \", q.back().m);\n\t}\n\tq.clear();\n}\nint main() {\n\tscanf(\"%d %d\", &all, &k);\n\tfor (int i = 1; i <= all; ++i) scanf(\"%d\", &a[i].m), a[i].n = i;\n\tLOW(all, k);\n\tputs(\"\");\n\tBIG(all, k);\n\treturn 0;\n}\n\n```\n\n~~\u4ee3\u7801\u90e8\u5206\u53c2\u8003\u4e86\u697c\u4e0b $julao$ \u7684\u4ee3\u7801\uff0c\u6709\u70b9\u6284\u9898\u89e3\u7684\u5acc\u7591~~\n\n~~\uff08\u9898\u89e3\u7684\u4e8b\u60c5\uff0c\u80fd\u53eb\u6284\u9898\u89e3\u5417\uff09~~\n\n### 4.\u8336\u4f59\u996d\u540e\n\n>\u6709\u4e00\u5929\uff0c\u6709\u4e00\u4e2a\u53eb[\u5c0f\u5149](https://www.luogu.org/space/show?uid=73934)\n\u7684 $julao$ \u8fdb\u5165\u4e86\u4e00\u4e2a\u53eb\u201c\u56fd\u5bb6\u961f\u201d\u7684\u5355\u8c03\u961f\u5217\u3002\n\n>\u7136\u540e\uff0c\u5355\u8c03\u961f\u5217\u4e2d\u6240\u6709\u7684\u6570\u9664\u4e86[larryzhong](https://www.luogu.org/space/show?uid=20438) \u90fd\u88ab\u6e05\u7a7a\u4e86\u3002\n\n>\u5305\u62ec\u6211\u8fd9\u4e2a $juruo$\n\n>\u5f88\u4e45\u4ee5\u540e\uff0c\u4eba\u4eec\u624d\u6562\u56de\u60f3\u8d77\u88ab\u5c0f\u5149\u652f\u914d\u7684\u6050\u60e7\u3002\n\n>~~qwq~\n\n\n###### \u6b22\u996e\u8bbf\u95ee\u6211\u7684\u535a\u5ba2\uff0c\u535a\u5ba2\u5730\u5740\u5728\u4e0a\u9762\u54e6~~~",
        "postTime": 1540869971,
        "uid": 80937,
        "name": "\u5929\u624dbyt",
        "ccfLevel": 0,
        "title": "\u3010\u5355\u8c03\u6570\u636e\u7ed3\u6784\u4e4b\u4e00\u3011\u5355\u8c03\u961f\u5217"
    },
    {
        "content": "# \u6211\u504f\u8981\u7528STL\uff01\n\u8fd9\u9053\u9898\u6807\u7b7e\u91cc\u7ed9\u4e86\u7ebf\u6bb5\u6811\uff0c\u5355\u8c03\u961f\u5217\u7b49\u7b49\u591a\u79cd\u89e3\u6cd5\u3002\u4f3c\u4e4e\u5f88\u5c11\u4f7f\u7528STL\u7684\uff0c\u7528\u7684\u6bd4\u8f83\u591a\u7684\u4e5f\u662fdeque\uff0c\u90a3\u4e48\u6211\u6765\u5199\u4e00\u4efd\u5229\u7528\u53e6\u5916\u4e00\u79cd\u7ed3\u6784\u5b9a\u4e49\u7684\u6570\u636e\u7ed3\u6784AC\u8fd9\u9053\u9898\u7684\u9898\u89e3\u3002\n\n\u601d\u8def\uff1a\n\u5934\u6307\u9488\u6307\u5411i\uff0c\u5c3e\u6307\u9488\u6307\u5411i+k-1\uff0c\u5148\u5c061-k\u4e2d\u7684\u6570\u5b57\u538b\u5165\u5bb9\u5668\uff0c\u6c42\u51fa\u4e24\u4e2a\u6700\u503c\uff0c\u6700\u5c0f\u503c\u5f53\u573a\u8f93\u51fa\uff0c\u6700\u5927\u503c\u5b58\u5165\u6570\u7ec4\u3002\u6bcf\u6b21\u5220\u53bb\u5934\u6307\u9488\u6307\u5411\u7684\u6570\uff0c\u5e76\u6267\u884ci++\uff0c\u5c06\u65b0\u7684\u5c3e\u6307\u9488\u6307\u5411\u7684\u6570\u538b\u5165\u5bb9\u5668\uff0c\u6c42\u6700\u503c\uff0c\u5982\u4e0a\u53cd\u590d\uff08\u5bf9\u6b64\u4e0d\u592a\u7406\u89e3\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u4e00\u770b\u201c\u5c3a\u53d6\u6cd5\u201d\uff09\n\n**\u6ce8\u610f\uff1a\u76ee\u524d\u7cfb\u5217\u8d5b\u4e2d\u591a\u6570\u5df2\u7ecf\u5141\u8bb8\u4f7f\u7528O2\u4f18\u5316\uff0c\u800c\u4f7f\u7528O2\u4f18\u5316\u4e00\u822c\u60c5\u51b5\u4e0b\u662fSTL\u80fd\u591f\u88ab\u5e94\u7528\u7684\u57fa\u672c\u6761\u4ef6\u4e4b\u4e00\u3002**\n\n### \u6570\u636e\u7ed3\u6784\uff1amultiset\n### \u5b9a\u4e49\u65b9\u5f0f\uff1a\n```\nmultiset<int,less<int> > q1;\n```\n- \u5efa\u7acb\u4e00\u4e2a\u5185\u90e8\u5143\u7d20\u5347\u5e8f\u6392\u5217\u7684multiset\u5bb9\u5668\n \nmultiset\u7684\u5bb9\u5668\u5b9a\u4e49\u4e8eset\u5185\u3002\u4f46\u662fmultiset\u4e0eset\u76f8\u6bd4\u5177\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a\n- set\u4e2d\u4e0d\u80fd\u5b58\u50a8\u76f8\u540c\u7684\u5143\u7d20\uff0c\u4f46\u662fmultiset\u53ef\u4ee5\u3002\n- multiset\u53ef\u4ee5\u540c\u65f6\u5220\u9664\u6240\u6709\u76f8\u540c\u5143\u7d20\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528\u8fed\u4ee3\u5668\u5220\u9664\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\n\n\u76f8\u6bd4\u4e8e\u624b\u5199\u7684\u5355\u8c03\u961f\u5217\uff0cmultiset\u6709\u5982\u4e0b\u7684\u4f18\u70b9\uff1a\n- \u7f16\u7a0b\u590d\u6742\u5ea6\u4f4e\uff0c\u4e0d\u9700\u8981\u5b9e\u73b0\u590d\u6742\u7684\u8fc7\u7a0b\uff0cmultiset\u81ea\u5e26insert(),find(),erase()\u7b49\u7b49\u597d\u7528\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u9700\u8981\u4eb2\u81ea\u5b9e\u73b0\n- \u5728\u5f00\u542fO2\u4f18\u5316\u7684\u60c5\u51b5\u4e0b\uff0cmultiset\u7684\u8fd0\u884c\u901f\u5ea6\u5e76\u4e0d\u6bd4\u624b\u52a8\u5b9e\u73b0\u7684\u6570\u636e\u7ed3\u6784\u8981\u6162\uff08multiset\u5185\u90e8\u5229\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0\u81ea\u6211\u5e73\u8861\uff0c\u4fdd\u8bc1\u6570\u636e\u6709\u5e8f\uff09\n\n\u4e0b\u9762\u4ecb\u7ecd\u51e0\u4e2a\u9700\u8981\u7528\u5230\u7684\u6210\u5458\u51fd\u6570\uff1a\n#### s.begin():\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5bb9\u5668\u5934\u90e8\u7684\u8fed\u4ee3\u5668\n- \u53ef\u4ee5\u901a\u8fc7*s.begin()\u6765\u53d6\u503c\u3002\n\n#### s.end():\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5bb9\u5668\u5c3e\u90e8\u7684\u8fed\u4ee3\u5668\n- \u53ef\u4ee5\u901a\u8fc7*s.end()\u6765\u53d6\u503c\u3002\n- \u6ce8\u610f\uff1as.end()\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u88ab\u64e6\u9664\u7684\u5783\u573e\u503c\uff0c\u56e0\u6b64\uff0c\u771f\u6b63\u7684\u6700\u5927\u503c\u5728end\u7684\u524d\u4e00\u4e2a\u8fed\u4ee3\u5668\u5185\u3002\u6211\u4eec\u53ef\u4ee5\u5c06s.end()\u8d4b\u503c\u7ed9\u4e00\u4e2a\u8fed\u4ee3\u5668it\uff0c\u901a\u8fc7it--\u6765\u5b9e\u73b0.\u5176\u4e2d\uff0cit\u5e94\u8be5\u8fd9\u6837\u5b9a\u4e49\uff1a\n```\nmultiset<int>::iterator it;\n```\n\n#### s.find(int x):\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2a\u503c\u4e3ax\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\n#### s.erase(iterator it):\u5220\u9664\u8fed\u4ee3\u5668it\u6307\u5411\u7684\u5143\u7d20\n- \u7279\u522b\u6ce8\u660e\uff1aerase\u4e2d\u95f4\u5982\u679c\u4f20\u5165\u6574\u6570x\uff0c\u90a3\u4e48\u4f1a\u5220\u9664\u6240\u6709\u4e0ex\u76f8\u540c\u7684\u5143\u7d20\uff0c\u800c\u672c\u9898\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\uff0c\u6240\u4ee5\u5229\u7528find\u548cerase\u914d\u5408\u3002\n\n#### s.insert(int x):\u5728\u5bb9\u5668\u4e2d\u63d2\u5165\u4e00\u4e2a\u503c\u4e3ax\u7684\u5143\u7d20\n## \u6ce8\u610f\u7ec6\u8282\uff1a\n1. \u8f93\u51fa\u65f6iterator\u5fc5\u987b\u4f7f\u7528*\u53d6\u503c\uff0c\u56e0\u4e3aiterator\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u79cd\u590d\u6742\u800c\u7279\u6b8a\u7684\u6307\u9488\n1. \u5fc5\u987b\u5c06s.end()\u8d4b\u503c\u7ed9it\u540e\u518d\u6267\u884cit--\uff0c\u7136\u540e\u8f93\u51fa*it\uff0c\u56e0\u4e3a\u76f4\u63a5\u6267\u884c--s.end()\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u96be\u4ee5\u633d\u56de\u7684\u9519\u8bef\n1. \u4e3a\u4ec0\u4e48\u8981\u5148\u5b58\u50a8max\u503c\u6700\u540e\u8f93\u51fa\u5462\uff1f\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u7528\u4e24\u4e2amultiset\u5206\u522b\u5b58\u50a8\u5462\uff1f\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u7a7a\u95f4\u548c\u65f6\u95f4\uff0c\u5728\u672c\u9898\u6700\u5927\u7684\u6d4b\u8bd5\u70b9#9\u4e2d\uff0c\u6211\u7684\u7a0b\u5e8f\u8fd0\u884c\u4e86980ms\uff0c\u6d88\u8017\u4e8628MB\u7684\u7a7a\u95f4\u3002\u5982\u679c\u91cd\u65b0\u8dd1\u4e00\u904d\u53d6\u6700\u5927\u503c\u80af\u5b9aTLE\uff08\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684\uff0c\u770b\u6211\u8bb0\u5f55\u5c31\u77e5\u9053\u6211TLE\u4e86\u591a\u5c11\u6b21\uff09\n1. ~~\u60f3TLE\u5c31\u5c3d\u7ba1\u4e0d\u7528\u8bfb\u5165\u4f18\u5316~~\n\n## \u4ee3\u7801\u5b9e\u73b0\uff1a~~\u6211\u77e5\u9053\u4f60\u4eec\u6700\u559c\u6b22\u8fd9\u4e2a\u4e86~~\n\u6240\u4ee5\u5148\u5b89\u5229\u4e00\u4e0b\u6211\u7684\u535a\u5ba2\u5566\uff01\n\n[\u7b80\u964b\u800c\u6e29\u99a8\u7684\u5c0f\u5c0fblog](https://www.luogu.org/blog/user32234/)\n```\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nmultiset <int,less<int> > q1;\ninline int read(){\n    int x=0,k=1; char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')k=-1;c=getchar();}\n    while(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n    return x*k;\n}\nint n,m;\nint dat[1001000];\nint getmax[1001000];\nint main()\n{\n    n=read();\n    m=read();\n    for(int i=1;i<=n;i++)\n    {\n        dat[i]=read();\n    }\n    for(int i=1;i<=m;i++)\n    {\n        q1.insert(dat[i]);\n    }\n    printf(\"%d \",*q1.begin());\n    int j=1;\n    multiset<int>::iterator it=q1.end();\n    it--;\n    getmax[j]=*it;\n    for(int i=m+1;i<=n;i++)\n    {\n    \tq1.insert(dat[i]);\n    \tq1.erase(q1.find(dat[i-m]));\n    \tprintf(\"%d \",*q1.begin());\n    \tit=q1.end();\n    \tit--;\n    \tgetmax[++j]=*(it);\n    }\n    printf(\"\\n\");\n    for(int i=1;i<=j;i++)\n    {\n        printf(\"%d \",getmax[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n```",
        "postTime": 1530778046,
        "uid": 32234,
        "name": "\u66ff\u7f6a\u7f8a\u6811",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "## \u524d\u8a00\r\n\r\n- \u5c3d\u7ba1\u9898\u76ee\u540d\u79f0\u662f\u5355\u8c03\u961f\u5217\u6a21\u677f\uff0c\u4f46\u8fd9\u5e76\u4e0d\u80fd\u963b\u6b62\u6211\u4eec\u7528\u5176\u4ed6\u7684\u601d\u8def\u3002\r\n\r\n- \u8fd9\u7bc7\u9898\u89e3\u7b80\u8981\u4ecb\u7ecd\u4e86\u4e00\u4e2a**\u7ebf\u6027**\u7684\u5206\u5757\u505a\u6cd5\uff0c\u5b83\u7684\u590d\u6742\u5ea6\u4e0d\u4e9a\u4e8e\u5355\u8c03\u961f\u5217\u3002\r\n\r\n- \u540c\u65f6\uff0c\u8fd9\u7bc7\u6587\u7ae0\u5206\u6790\u4e86\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u52a3\uff0c\u5e0c\u671b\u4f60\u80fd\u5b66\u5230\u4e00\u4e9b\u3002\r\n\r\n## \u9898\u89e3\r\n\r\n\u6ed1\u52a8\u7a97\u53e3\u7684\u8be2\u95ee\u64cd\u4f5c\uff0c\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u6027\u8d28\uff1a**\u6bcf\u4e2a\u8be2\u95ee\u7684\u957f\u5ea6\u76f8\u540c**\uff0c\u90fd\u4e3a $k$ \u3002\r\n\r\n\u8fd9\u4e2a\u6027\u8d28\u544a\u8bc9\u6211\u4eec\uff0c\u4efb\u4f55\u8be2\u95ee\u90fd\u4f1a\u6070\u597d\u5305\u542b $k,2\\times k,\\cdots ,\\lfloor\\frac{n}{k}\\rfloor \\times k$ \u8fd9 $\\lfloor\\frac{n}{k}\\rfloor-1$ \u4e2a\u8282\u70b9\u4e2d\u7684\u67d0\u4e2a\u8282\u70b9\u3002\r\n\r\n\u8003\u8651\u9898\u76ee\u8981\u6c42\u7684 $\\min$ \u548c $\\max$ \u64cd\u4f5c\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5b83\u4eec\u6ee1\u8db3\u7ed3\u5408\u5f8b\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u5c06\u4e00\u4e2a\u8be2\u95ee\u62c6\u6210\u4e24\u4e2a\u533a\u95f4\uff0c\u4f7f\u5f97\u5b83\u4eec\u7684\u5e76\u4e3a\u8fd9\u4e2a\u8be2\u95ee\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u80fd\u901a\u8fc7\u5408\u5e76\u5b83\u4eec\u6765\u76f4\u63a5\u6c42\u5f97\u7b54\u6848\u3002\r\n\r\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c06\u4e0a\u8ff0\u8282\u70b9\u5b9a\u4e49\u4e3a**\u5173\u952e\u70b9**\u3002\u679a\u4e3e\u6bcf\u4e2a\u5173\u952e\u70b9\uff0c\u7136\u540e\u5206\u522b\u5411\u5de6\u53f3\u62d3\u5c55\uff0c\u8ba1\u7b97\u4ee5\u5b83\u4e3a\u5de6/\u53f3\u7aef\u70b9\u7684\u533a\u95f4\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u76f4\u5230\u78b0\u5230\u53e6\u5916\u4e00\u4e2a\u5173\u952e\u70b9\u6216\u8fb9\u754c\u3002\u4e8e\u662f\uff0c \u6bcf\u4e2a\u8be2\u95ee\u90fd\u80fd\u901a\u8fc7\u5b83\u5305\u542b\u7684\u5173\u952e\u70b9\u7684\u4fe1\u606f\u5f97\u51fa\u3002\r\n\r\n\u4ee5\u9898\u9762\u7684\u6837\u4f8b $a=\\{1,3,-1,-3,5,3,6,7\\},k=3$ \u4e3a\u4f8b\uff0c\u8ba1\u7b97\u6ed1\u5757\u7684\u6700\u5c0f\u503c\uff1a\r\n\r\n- \u679a\u4e3e\u5230\u5173\u952e\u70b9 $3$ \u3002 \r\n  - \u5206\u522b\u8ba1\u7b97\u51fa $[3,3],[2,3],[1,3]$ \u7684\u6700\u5c0f\u503c\uff0c\u4ee5\u53ca $[3,4],[3,5]$ \u7684\u6700\u5c0f\u503c\u3002\r\n  - \u8ba1\u7b97\u51fa $[1,3],[2,4]=[2,3]\\cup[3,4],[3,5]$ \u7684\u6700\u5c0f\u503c\u5206\u522b\u4e3a $-1,-3,-3$ \u3002\r\n- \u679a\u4e3e\u5230\u5173\u952e\u70b9 $6$ \u3002\r\n  - \u5206\u522b\u8ba1\u7b97\u51fa $[6,6],[5,6],[4,6]$ \u7684\u6700\u5c0f\u503c\uff0c\u4ee5\u53ca $[6,7],[6,8]$ \u7684\u6700\u5c0f\u503c\u3002\r\n  - \u8ba1\u7b97\u51fa $[4,6],[5,7]=[5,6]\\cup [6,7],[6,8]$ \u7684\u6700\u5c0f\u503c\u5206\u522b\u4e3a $-3,3,3$ \u3002\r\n\r\n\u6700\u5927\u503c\u8fc7\u7a0b\u540c\u7406\u3002\r\n\r\n\u8be5\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n)$ \uff0c\u56e0\u4e3a\u6211\u4eec\u4ece\u6bcf\u4e2a\u5173\u952e\u70b9\u5411\u5de6\u53f3\u62d3\u5c55\u7684\u6b21\u6570\u4e3a $4\\times k$ \uff0c\u800c\u4e00\u5171\u6709 $\\lfloor \\frac{n}{k}\\rfloor$ \u4e2a\u5173\u952e\u70b9\u3002\r\n  \r\n## \u53c2\u8003\u4ee3\u7801 \r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define up(l,r,i) for(int i=l;i<r;i++)\r\nusing namespace std;\r\n\r\ntypedef long long LL;\r\nconst int INF =2147483647;\r\nint qread(){\r\n    int w=1,c,ret;\r\n    while((c=getchar())> '9'||c< '0') w=(c=='-'?-1:1); ret=c-'0';\r\n    while((c=getchar())>='0'&&c<='9') ret=ret*10+c-'0';\r\n    return ret*w;\r\n}\r\nconst int MAXN =2e6+3;\r\nint n,k,A[MAXN],B[MAXN],C[MAXN],P[MAXN],Q[MAXN];\r\nint main(){\r\n    n=qread(),k=qread(); up(0,n,i) A[i]=qread();\r\n    for(int i=k-1;i<n;i+=k){\r\n        B[i]=C[i]=A[i]; int j=i+1; B[j]=C[j]=A[j];\r\n        up(1,k,t) B[i-t]=min(B[i-t+1],A[i-t]);\r\n        up(1,k,t) C[i-t]=max(C[i-t+1],A[i-t]);\r\n        up(1,k,t) B[j+t]=min(B[j+t-1],A[j+t]);\r\n        up(1,k,t) C[j+t]=max(C[j+t-1],A[j+t]);\r\n        up(j-k,j,t) P[t]=min(B[t],B[t+k-1]),Q[t]=max(C[t],C[t+k-1]);\r\n    }\r\n    up(0,n-k+1,i) printf(\"%d \",P[i]); puts(\"\");\r\n    up(0,n-k+1,i) printf(\"%d \",Q[i]); puts(\"\");\r\n    return 0;\r\n}\r\n```\r\n\r\n## \u5206\u6790\r\n\r\n- \u8fd9\u79cd\u65b9\u6cd5\u548c\u5355\u8c03\u961f\u5217\u590d\u6742\u5ea6\u76f8\u540c\uff0c\u7801\u91cf\u7565\u5c11\u3002\r\n\r\n- \u5355\u8c03\u961f\u5217\u8fd8\u53ef\u4ee5\u5904\u7406\u6ed1\u5757\u957f\u5ea6\u4e0d\u4e00\u5b9a\u56fa\u5b9a\u7684\u60c5\u51b5\u3002\u8be5\u65b9\u6cd5\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\u3002\r\n\r\n- \u8fd9\u79cd\u65b9\u6cd5\u80fd\u591f\u5904\u7406\u4e0b\u65b9\u95ee\u9898\uff1a\r\n\r\n> \u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6574\u6570\u5e8f\u5217 $a$ \u3002\u73b0\u5728\u8981\u6c42\u6c42\u51fa\u533a\u95f4 $[i,i+m-1]$ \u7684**\u8fde\u4e58\u79ef**\u5bf9 $p$ \u53d6\u6a21\u7684\u503c\u3002\r\n\r\n\u5355\u8c03\u961f\u5217\u96be\u4ee5\u7ef4\u62a4\uff1b\u800c\u6c42\u524d\u7f00\u79ef\u53ca\u5176\u9006\u5143\u7684\u65b9\u6cd5\uff0c\u65e0\u6cd5\u5904\u7406\u9006\u5143\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\u3002\r\n\r\n\u8fd9\u79cd\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u80fd\u7528\u4e0a\u8ff0\u7684\u5206\u5757\u505a\u6cd5\uff0c\u76f4\u63a5\u7ef4\u62a4\u6bcf\u4e2a\u5173\u952e\u70b9\u5411\u5de6\u53f3\u5ef6\u4f38\u7684\u524d\u7f00/\u540e\u7f00\u79ef\u3002",
        "postTime": 1596448005,
        "uid": 330759,
        "name": "\u56e7\u4ed9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u6ed1\u52a8\u7a97\u53e3 /\u3010\u6a21\u677f\u3011\u5355\u8c03\u961f\u5217"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u7b80\u5355\u4fbf\u6377\u7684\u505a\u6cd5\n\n\u5bf9\u539f\u5e8f\u5217\u4ee5$k-1$\u4e3a\u5757\u5927\u5c0f\u5206\u5757\n\n\u663e\u7136\u6bcf\u4e2a\u957f\u5ea6\u4e3a$ k$\u7684\u8be2\u95ee\u90fd\u6070\u597d\u8de8\u8fc7\u4e24\u4e2a\u5757\n\n\u5bf9\u6bcf\u4e2a\u5757\u8ba1\u7b97\u524d\u540e\u7f00$ Min\\ Max$\u5373\u53ef\n\n\u590d\u6742\u5ea6\u4e5f\u662f\u7ebf\u6027\u7684",
        "postTime": 1547024804,
        "uid": 58448,
        "name": "Flaranis",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u4e00\u79cd\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n)$ \u7684\u5206\u5757\u505a\u6cd5\u3002\u4e0d\u9700\u8981\u5f00 O2\u3002\r\n\r\n\u663e\u7136\uff0c\u8fd9\u9898\u53ef\u4ee5\u60f3\u51fa\u4e00\u79cd $\\mathcal{O}(n\\sqrt{n})$ \u7684\u5783\u573e\u5206\u5757\u505a\u6cd5\uff0c\u8fc7\u4e0d\u4e86\uff0c\u5b9e\u6d4b\u53ea\u6709 [70 \u5206](https://www.luogu.com.cn/record/76536917)\uff0c\u4f46\u662f\u5f00 O2 \u53ef\u8fc7\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u6ca1\u6709\u4f18\u5316\u7684\u4e50\u8da3\u4e86\u3002\r\n\r\n\u89c2\u5bdf\u67e5\u8be2\u9636\u6bb5\uff1a\r\n\r\n\u540c\u4e00\u4e2a\u5757\u5185\u6211\u4eec\u4e0d\u8003\u8651\uff0c\u56e0\u4e3a\u8fd9\u90e8\u5206\u76f4\u63a5\u66b4\u529b\u5373\u53ef\u3002\u770b\u4e24\u7aef\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u5757\u5185\u7684\u60c5\u51b5\uff0c\u6734\u7d20\u4ee3\u7801\u5982\u4e0b\uff1a\r\n\r\n```cpp\r\nfor (int i = l; i <= b[bel[l]].ed; i++) {\r\n\tminv = min(minv, a[i]);\r\n\tmaxv = max(maxv, a[i]);\r\n}\r\nfor (int i = b[bel[r]].st; i <= r; i++) {\r\n\tminv = min(minv, a[i]);\r\n\tmaxv = max(maxv, a[i]);\r\n}\r\nfor (int i = bel[l] + 1; i < bel[r]; i++) {\r\n\tminv = min(minv, b[i].minv);\r\n\tmaxv = max(maxv, b[i].maxv);\r\n}\r\n```\r\n\r\n\u6211\u4eec\u4f7f\u7528\u4e86\u6bd4\u8f83\u5927\u7684\u65f6\u95f4\u5728\u66b4\u529b\u8ba1\u7b97\u96f6\u6563\u5757\u7684\u503c\uff0c\u8fd9\u4f1a\u82b1\u8d39\u5f88\u591a\u65f6\u95f4\u3002\uff08\u4e4b\u6240\u4ee5\u8fd9\u6837\u8bf4\uff0c\u662f\u56e0\u4e3a\u5982\u679c\u6ce8\u91ca\u4e86\u524d\u4e24\u4e2a\u66b4\u529b\u7684 for \u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u73b0[\u53ea\u6709\u4e00\u4e2a\u70b9\u8d85\u65f6\u4e86](https://www.luogu.com.cn/record/76537264)\uff09\r\n\r\n\u6ce8\u610f\u5230\uff0c\u8fd9\u91cc\u96f6\u6563\u5757\u7684\u66b4\u529b\u90fd\u662f\u4ece\u4e00\u4e2a\u5757\u7684\u8d77\u70b9\u6216\u7ec8\u70b9\u5230\u67d0\u4e2a\u70b9\u4e4b\u524d\u7684\u6700\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u524d\u7f00\u548c\u540e\u7f00\u6700\u503c\u6765\u5b9e\u73b0 $\\mathcal{O}(1)$ \u67e5\u8be2\u5757\u7684\u8d77\u70b9\u3001\u7ec8\u70b9\u5230\u4e00\u4e2a\u70b9\u4e4b\u95f4\u7684\u6700\u503c\u3002\u6211\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528 premin/max \u548c sufmin/max \u5206\u522b\u8868\u793a\u524d\u7f00\u6700\u5c0f\u6700\u5927\u503c\u548c\u540e\u7f00\u6700\u5c0f\u6700\u5927\u503c\u3002\r\n\r\n\u90a3\u4e48\u606d\u559c\uff0c\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 [90 pts](https://www.luogu.com.cn/record/76490775)\uff0c\u6b63\u597d\u5bf9\u5e94\u4e86\u4e4b\u524d\u6ce8\u91ca\u6389\u7684\u8bc4\u6d4b\u8bb0\u5f55\u3002\u8bf4\u660e\u8fd9\u79cd\u4f18\u5316\u662f\u5927\u6709\u4f5c\u7528\u7684\u3002\r\n\r\n\u6b64\u523b\uff0c\u4f60\u53d1\u73b0\u4f60\u9677\u5165\u4e86\u4e00\u4e2a\u7a98\u5883\u2014\u2014\u4f60\u60f3\u4e0d\u51fa\u522b\u7684\u65b9\u6cd5\u4f18\u5316\u4e86\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5bf9\u5757\u957f\u5165\u624b\u3002\r\n\r\n\u6211\u4eec\u8981\u5145\u5206\u53d1\u6325 ~~\u4eba\u7c7b\u7684\u667a\u6167~~ \u524d\u7f00\u6700\u503c\u548c\u540e\u7f00\u6700\u503c\u7684\u4f5c\u7528\uff0c\u56e0\u4e3a\u4f7f\u7528\u8fd9\u4e24\u4e2a\u6570\u7ec4\u53ef\u4ee5 $\\mathcal{O}(1)$ \u627e\u5230\u6700\u503c\u3002\r\n\r\n\u80fd\u7528\u5230\u524d\u7f00\u6700\u503c\u548c\u540e\u7f00\u6700\u503c\u7684\u60c5\u51b5\u53ea\u6709\u5f53\u67e5\u8be2\u7684\u4e24\u4e2a\u7aef\u70b9\u5728\u4e0d\u540c\u7684\u5757\u5185\u3002\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u6807\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5757\u957f\u8bbe\u7f6e\u4e3a $k-1$\u3002\uff08\u6211\u7684\u4ee3\u7801\u4e2d $k$ \u4e0e\u5757\u7684\u4e2a\u6570\u91cd\u590d\u4e86\uff0c\u4e8e\u662f\u4f7f\u7528 $l$ \u4ee3\u66ff\uff09\u53ef\u80fd\u8bf4\u7684\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u6211\u753b\u4e2a\u56fe\uff1a\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/kpduogal.png)\r\n\r\n\u4e0a\u56fe\u4e2d\u7ea2\u8272\u6846\u8868\u793a\u5757\uff0c\u7eff\u8272\u6846\u8868\u793a\u67e5\u8be2\u533a\u95f4\u3002\u5bf9\u4e8e\u67e5\u8be2\u533a\u95f4\u7684 \u2460\uff0c\u53ef\u4ee5\u770b\u505a\u662f\u4ece $l$ \u5230 $l$ \u6240\u5728\u7684\u5757\u672b\u5c3e\u7684\u6700\u503c\uff08\u4f7f\u7528\u540e\u7f00\u6700\u503c\u6570\u7ec4\uff09\uff0c\u2461 \u540c\u7406\u53ef\u4ee5\u770b\u505a\u662f\u4ece $r$ \u6240\u5728\u7684\u5757\u7684\u8d77\u59cb\u5230 $r$ \u7684\u6700\u503c\uff08\u4f7f\u7528\u524d\u7f00\u6700\u503c\u6570\u7ec4\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5 $\\mathcal{O}(1)$ \u89e3\u51b3\u67e5\u8be2\u95ee\u9898\u3002\r\n\r\n\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5c31\u964d\u5230\u4e86 $\\mathcal{O}(n)$\uff0c\u597d\u50cf\u4e0d\u80fd\u518d\u4f4e\u4e86\u3002\r\n\r\n### \u4ee3\u7801\r\n\r\n```cpp\r\n#include<iostream>\r\n#include<cmath>\r\n#include<ctype.h>\r\n#include<climits>\r\n#include<vector>\r\nusing namespace std;\r\n\r\n#define int long long\r\n\r\nconst int maxn = 1e6 + 10;\r\nconst int maxblocksize = 1010;\r\n\r\nint n, l;\r\nint a[maxn];\r\n\r\nstruct block {\r\n    int st, ed;\r\n    vector<int> premax, premin;\r\n    vector<int> sufmax, sufmin;\r\n};\r\nvector<block> b;\r\n\r\nint blocksize, k, bel[maxn];\r\n\r\nvoid init() {\r\n    blocksize = l - 1, k = n / blocksize;\r\n    b.resize(k + 5);\r\n    for (int i = 1; i <= k; i++) {\r\n        b[i].st = b[i - 1].ed + 1;\r\n        b[i].ed = b[i].st + blocksize - 1;\r\n    }\r\n    if (b[k].ed != n) {\r\n        k++;\r\n        b[k].st = b[k - 1].ed + 1;\r\n        b[k].ed = n;\r\n    }\r\n    for (int i = 1; i <= k; i++) {\r\n        b[i].premax.resize(b[i].ed - b[i].st + 20);\r\n        b[i].premin.resize(b[i].ed - b[i].st + 20);\r\n        b[i].sufmax.resize(b[i].ed - b[i].st + 20);\r\n        b[i].sufmin.resize(b[i].ed - b[i].st + 20);\r\n        b[i].premax[0] = b[i].sufmax[b[i].ed + 1 - b[i].st + 1] = LLONG_MIN;\r\n        b[i].premin[0] = b[i].sufmin[b[i].ed + 1 - b[i].st + 1] = LLONG_MAX;\r\n        for (int j = b[i].st; j <= b[i].ed; j++) {\r\n            bel[j] = i;\r\n            b[i].premax[j - b[i].st + 1] = max(b[i].premax[j - b[i].st], a[j]);\r\n            b[i].premin[j - b[i].st + 1] = min(b[i].premin[j - b[i].st], a[j]);\r\n        }\r\n        for (int j = b[i].ed; j >= b[i].st; j--) {\r\n            b[i].sufmax[j - b[i].st + 1] = max(b[i].sufmax[j - b[i].st + 2], a[j]);\r\n            b[i].sufmin[j - b[i].st + 1] = min(b[i].sufmin[j - b[i].st + 2], a[j]);\r\n        }\r\n    }\r\n    return;\r\n}\r\npair<int, int> query(int l, int r) {\r\n    int minv = LLONG_MAX, maxv = LLONG_MIN;\r\n    minv = min(minv, b[bel[l]].sufmin[l - b[bel[l]].st + 1]);\r\n    minv = min(minv, b[bel[r]].premin[r - b[bel[r]].st + 1]);\r\n    maxv = max(maxv, b[bel[l]].sufmax[l - b[bel[l]].st + 1]);\r\n    maxv = max(maxv, b[bel[r]].premax[r - b[bel[r]].st + 1]);\r\n    return make_pair(minv, maxv);\r\n}\r\n\r\npair<int, int> ans[maxn];\r\n\r\nsigned main() {\r\n    cin >> n >> l;\r\n    for (int i = 1; i <= n; i++) {\r\n        cin >> a[i];\r\n    }\r\n    if (l == 1) {\r\n        for (int i = 1; i <= n; i++) {\r\n            cout << a[i] << ' ';\r\n        }\r\n        cout << endl;\r\n        for (int i = 1; i <= n; i++) {\r\n            cout << a[i] << ' ';\r\n        }\r\n        cout << endl;\r\n        return 0;\r\n    }\r\n    init();\r\n    int cnt = 0;\r\n    for (int i = 1; i + l - 1 <= n; i++) {\r\n        ans[++cnt] = query(i, i + l - 1);\r\n    }\r\n    for (int i = 1; i <= cnt; i++) {\r\n        cout << ans[i].first << ' ';\r\n    }\r\n    cout << endl;\r\n    for (int i = 1; i <= cnt; i++) {\r\n        cout << ans[i].second << ' ';\r\n    }\r\n    cout << endl;\r\n    return 0;\r\n}\r\n```",
        "postTime": 1653723098,
        "uid": 670262,
        "name": "Cerisier",
        "ccfLevel": 0,
        "title": "P1886 \u6ed1\u52a8\u7a97\u53e3 /\u3010\u6a21\u677f\u3011\u5355\u8c03\u961f\u5217"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7528\u4f18\u5148\u961f\u5217\u53ef\u4ee5\u8fc7\u5f97\u554a\uff0880\u5206\u90a3\u4f4d\u53ef\u80fd\u6ca1\u6709\u5438\u6c27\uff0c\u6211\u6700\u6162\u7684\u70b9350ms\u5de6\u53f3\uff09\n### \u5148\u666e\u53ca\u4e00\u4e0b\u4f18\u5148\u961f\u5217\n- \u4f18\u5148\u961f\u5217\u4e00\u822c\u7528\u6765\u89e3\u51b3\u4e00\u4e9b\u8d2a\u5fc3\u95ee\u9898\uff0c\u5176\u5e95\u5c42\u662f\u7528\u201c\u5806\u201d\u6765\u5b9e\u73b0\u7684\u3002\n- \u4efb\u4f55\u65f6\u523b\uff0c\u961f\u9996\u5143\u7d20\u4e00\u5b9a\u662f\u5f53\u524d\u961f\u5217\u4e2d\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\uff08\u5927\u6839\u5806\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u6700\u5c0f\u7684\uff08\u5c0f\u6839\u5806\uff09\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u624b\u5199\u4f18\u5148\u7ea7\u7684\u6bd4\u8f83\n- \u53ef\u4ee5\u4e0d\u65ad\u5f80\u4f18\u5148\u961f\u5217\u4e2d\u6dfb\u52a0\u67d0\u4e2a\u4f18\u5148\u7ea7\u7684\u5143\u7d20\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u65ad\u5f39\u51fa\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u90a3\u4e2a\u5143\u7d20\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4f1a\u81ea\u52a8\u8c03\u6574\u7ed3\u6784\uff0c\u59cb\u7ec8\u4fdd\u6301\u961f\u9996\u5143\u7d20\u7684\u4f18\u5148\u7ea7\u6700\u9ad8\u3002\n### \u4f18\u5148\u961f\u5217\u7684\u4ee3\u7801\n1. \u4f18\u5148\u961f\u5217\u7684\u5b9a\u4e49\u548c\u8bbf\u95ee\n```\npriority_queue<typename> name;\n```\n\u5176\u4e2d\uff0ctypename\u53ef\u4ee5\u662f\u4efb\u4f55\u57fa\u672c\u7c7b\u578b\u6216\u8005\u5bb9\u5668\uff0cname\u4e3a\u4f18\u5148\u961f\u5217\u7684\u540d\u5b57\n\n2. \u52a0\u5165\u5143\u7d20 \u590d\u6742\u5ea6O\uff08log2 n\uff09n\u4e3a\u5f53\u524d\u5143\u7d20\u4e2a\u6570\n```\nname.push(X);\n```\n\u5176\u4e2dname\u4e3a\u4f18\u5148\u961f\u5217\u7684\u540d\u5b57\uff08\u4e0d\u518d\u590d\u8ff0\uff09\uff0cX\u4e3a\u52a0\u5165\u5143\u7d20\u7684\u540d\u5b57\n\n3. \u83b7\u5f97\u961f\u9876\u5143\u7d20 \u590d\u6742\u5ea6 O\uff081\uff09\n```\nname.top();\n```\n\u53ef\u4ee5\u5728\u8d4b\u503c\u8bed\u53e5\u4e2d\u4f7f\u7528\u4e5f\u53ef\u4ee5\u5f53\u505a\u4e00\u4e2a\u53d8\u91cf\n\n4.\u5f39\u51fa\u5806\u9876\u5143\u7d20 \u590d\u6742\u5ea6O\uff08log2 n\uff09\n```\nname.pop();\n```\nX\u4e3a\u8981\u5f39\u51fa\u7684\u5143\u7d20\u7684\u540d\u5b57\uff08\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\u4e00\u4e2a\u5e76\u5f39\u51fa\uff0c\u4e0b\u65b9\u6709\u4e3e\u4f8b\uff09\n### \u4ee3\u7801\u4e3e\u4f8b\n```\npriority_queue<int>q;\nq.push(3);\nq.push(4);\nq.push(1);\ncout<<q.size()<<\" \";//\u8fd4\u56de\u5143\u7d20\u4e2a\u6570\nq.push(4);\ncout<<q.size()<<\" \"<<q.top()<<\" \";\nq.pop();\ncout<<q.top();\n```\n\u8fd9\u6bb5\u7a0b\u5e8f\u8f93\u51fa\"3 4 4 4\"\n\n\u89e3\u6790\uff1a\u8fd9\u662f\u5927\u6839\u5806\uff0c\u5148\u5b58\u51653,4,1\uff0c\u5728\u5806\u4e2d\u8868\u73b0\u4e3a4,3,1\uff1b\u6b64\u65f6\u8be2\u95ee\u5143\u7d20\u4e2a\u6570\u8fd4\u56de3\uff1b\n\u518d\u5b58\u51654\uff0c\u5806\u4e2d\u73b0\u5728\u4e3a4,4,3,1\uff0c\u8be2\u95ee\u5143\u7d20\u4e2a\u6570\u548c\u5806\u9876\u5143\u7d20\u8fd4\u56de4,4\uff1b\n\u518d\u5f39\u51fa\u5806\u9876\u5143\u7d20\uff0c\u5806\u4e2d\u4e3a4,3,1\uff0c\u8be2\u95ee\u5806\u9876\u5143\u7d20\u8fd4\u56de4\n### \u672c\u9898\u601d\u8def\u6838\u5fc3\n```\n\u5f00\u4e24\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u81ea\u5df1\u624b\u5199\u6bd4\u8f83\u7a0b\u5e8f\uff08\u7ed3\u6784\u4f53\uff09\uff0c\u5728\u8fdb\u884c\u65f6\u5982\u679ci-xx.top().xu>=k \u5c31\u4e0d\u65ad\u5f39\u51fa \u5b9a\u4e49\u4e24\u4e2a\u6570\u7ec4\u5b58\u653e\u7b54\u6848 \u6700\u540e\u8f93\u51fa\n```\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct num1{\n\tint xu,zhi;\n\tbool operator < (const num1 x) const {return (zhi>x.zhi)||(zhi==x.zhi&&xu<x.xu);}\n}p1;//\u81ea\u5df1\u624b\u5199\u6bd4\u8f83\u51fd\u6570\u6ce8\u610f\u8981\u7528\u5c0f\u4e8e\u53f7 \u5b9a\u4e49\u4e00\u4e2ap1\u662f\u4e3a\u4e86\u5b58\u5165\u65b9\u4fbf\nstruct num2{\n\tint xu,zhi;\n\tbool operator < (const num2 x) const {return (zhi<x.zhi)||(zhi==x.zhi&&xu<x.xu);}\n}p2;\npriority_queue<num1>q1;\npriority_queue<num2>q2;//\u5b9a\u4e49\u4e24\u4e2a\u4f18\u5148\u961f\u5217 \u4e00\u4e2a\u662fzhi\u5c0f\u7684\u4f18\u5148\uff0c\u4e00\u4e2a\u662fzhi\u5927\u7684\u4f18\u5148\nint n,k,top,a[1000001],ans1[1000001],ans2[1000001];//ans1\u548cans2\u5206\u522b\u50a8\u5b58\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\nint main(){\n\tscanf(\"%d %d\",&n,&k);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=k;i++){\n\t\tp1.xu=i,p1.zhi=a[i];\n\t\tq1.push(p1);\n\t\tp2.xu=i,p2.zhi=a[i];\n\t\tq2.push(p2);\n\t}//\u5148\u5c061-k\u7684\u6570\u636e\u5b58\u5165\u4e24\u4e2a\u4f18\u5148\u961f\u5217\u4e2d\n\tans1[++top]=q1.top().zhi,ans2[top]=q2.top().zhi;//\u628a\u4e24\u4e2a\u961f\u9996\u5143\u7d20\u4fdd\u5b58\n\tfor(int i=k+1;i<=n;i++){\n\t\tp1.xu=i,p1.zhi=a[i];\n\t\tq1.push(p1);\n\t\tp2.xu=i,p2.zhi=a[i];\n\t\tq2.push(p2);//\u4e0d\u505c\u5b58\u5165\u4e0b\u4e00\u4e2a\u51c6\u5907\u8fdb\u6765\u7684\u5143\u7d20\n\t\twhile(i-q1.top().xu>=k) q1.pop();\n\t\twhile(i-q2.top().xu>=k) q2.pop();//\u5982\u679c\u8d85\u8fc7\u4e86\u8303\u56f4\u5f39\u51fa\n        ans1[++top]=q1.top().zhi,ans2[top]=q2.top().zhi;//\u4fdd\u5b58\u7b54\u6848\n\t}\n\tfor(int i=1;i<=top;i++) printf(\"%d \",ans1[i]);\n\tprintf(\"\\n\");\n\tfor(int i=1;i<=top;i++) printf(\"%d \",ans2[i]);//\u6700\u540e\u8f93\u51fa\n}\n```\n",
        "postTime": 1566805446,
        "uid": 136601,
        "name": "\u3000\u3000\u3000\u543e\u7687",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P1886)\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst int maxn = 1e6+5;\nint n, k, a[maxn];\nint q[maxn];//\u961f\u5217\uff0c\u5b58\u7684\u662f\u4e0b\u6807\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    for(int i = 1; i <= n; ++i) scanf(\"%d\",&a[i]);\n    \n    \n    //\u7ef4\u62a4\u6700\u5c0f\u503c\uff0c\u5e8f\u5217\u8981\u5355\u8c03\u9012\u589e\n    int back = 1, front = 0;//\u961f\u5217\u5934\u5c3e\uff08back\u662f\u5934\uff0c\u6253\u7684\u65f6\u5019\uff09\n    for(int i = 1; i <= n; ++i){\n    \t//\u5982\u679c\u5982\u679c\u5c3e\u90e8\u7684\u5728\u6ed1\u5757\u4e4b\u5916\uff0c\u5219\u5220\u6389\u4ed6\u4eec\n        while(back <= front && q[back]+k <= i) ++back;\n        //\u5982\u679c\u5934\u90e8\u7684\u6bd4\u5f53\u524d\u7684\u5927\uff0c\u90a3\u4e48a[i]\u4ece\u5934\u8fdb\u53bb\uff0c\u961f\u5217\u5c31\u4e0d\u9012\u589e\u4e86\uff0c\u6240\u4ee5\u5220\u6389\u6bd4a[i]\u5927\u7684\u5934\u90e8\n        while(back <= front && a[i] < a[q[front]]) --front;\n        q[++front] = i;//\u5934\u90e8\u63d2\u5165i\n        if(i >= k) printf(\"%d \", a[q[back]]);//\u56e0\u4e3a\u5355\u8c03\u9012\u589e\uff0c\u6240\u4ee5\u7b54\u6848\u5728a\u7684\u4e0b\u6807\u5c31\u662fq[back]\n    }\n    \n    \n    //\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u540c\u4e0a\n    putchar('\\n');\n    memset(q,0,sizeof(q));\n    back = 1, front = 0;\n    for(int i = 1; i <= n; ++i){\n        while(back <= front && q[back]+k <= i) ++back;\n        while(back <= front && a[i] > a[q[front]]) --front;\n        q[++front] = i;\n        if(i >= k) printf(\"%d \", a[q[back]]);\n    }\n\n    return 0;\n}\n```",
        "postTime": 1581222529,
        "uid": 134635,
        "name": "zimindaada",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 - P1886 \u6ed1\u52a8\u7a97\u53e3 /\u3010\u6a21\u677f\u3011\u5355\u8c03\u961f\u5217"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u7528\u6570\u636e\u7ed3\u6784\u7684\u90fd\u662f\u7ebf\u6bb5\u6811\u5440\uff1f\n\n\u4e3a\u4ec0\u4e48\u4e0d\u7528**\u5e73\u8861\u6811**\u5440\uff1f\n\n~~\u867d\u7136\u6211\u77e5\u9053\u7ebf\u6bb5\u6811\u7b80\u5355~~\n\n\u4f46\u662f\u5e73\u8861\u6811\u53ef\u4ee5\u7528STL\u5440\uff01\uff01\uff01\n\n\u5f53\u7136\u8981\u7a0d\u5fae\u5361\u5e38\u2026\u2026\n\n\u601d\u8def\u5f88\u7b80\u5355\uff1a\u6a21\u62df\u7a97\u53e3\u6ed1\u52a8\uff0c\u6bcf\u6b21\u628a\u4e0a\u4e00\u4e2a\u6570\uff08\u5373\u7a97\u53e3\u521a\u521a\u79bb\u5f00\u7684\u90a3\u4e2a\uff09\u5220\u9664\uff0c\u7136\u540e\u628a\u65b0\u8fdb\u5165\u7684\u6570\u52a0\u5165\uff0c\u6700\u540e\u53d6\u6700\u5927/\u5c0f\u503c\n\n\u8fd9\u4e9b\u64cd\u4f5c\u5e73\u8861\u6811\u90fd\u6709\uff0c\u5747\u662f$O(log_2n)/O(1)$\u7ea7\u522b\n\n\u7136\u540e\u4f60\u53ef\u4ee5\u62ffset\u53bb\u8bd5\u4e86\n\n\u8bf7\u52a1\u5fc5\u6253\u51fa\u4ee3\u7801\u540e\u518d\u63a5\u7740\u770b\n\n---\n\u4f60\u4f1a\u53d1\u73b0\uff0c\u7528set\u662f\u9519\u7684\uff08\u6ed1\u7a3d\n\n**\u5982\u679c\u4f60\u7528set\uff0c\u90a3\u4e48\u4f1a\u81ea\u52a8\u9664\u91cd**\n\n**\u5982\u679c\u4f60\u7528multiset\uff0c\u90a3\u4e48\u5728\u5220\u9664\u65f6\u65e0\u8bba\u6709\u591a\u5c11\u4e2a\u90fd\u4f1a\u5220\u9664**\n\n~~tcl~~\n\n\u7d22\u6027\u81ea\u5df1\u6572\u4e00\u4e2a\u5e73\u8861\u6811\u51fa\u6765\u5427\uff01\n\n\u8bf7\u52a1\u5fc5\u6253\u51fa\u4ee3\u7801\u540e\u518d\u63a5\u7740\u770b\n\n---\nemmm\uff0c\u5176\u5b9e\uff0c\u53ef\u4ee5\u7528STL\u7684\u2026\u2026\n\n\uff08\u7136\u540e\u88ab\u6253\u4e86\u4e00\u987f\uff09\n\n\u7528**map**\n\n\u5982\u679c\u65b0\u7684\u6570$x$\u8fdb\u6765\u5c31\u628a\u503c\u4e3a$x$\u7684\u8282\u70b9\u589e\u52a0$1$\uff0c\u5220\u9664\u5219\u51cf\u5c11$1$\uff0c\u5982\u679c\u51cf\u5c11\u5230$0$\u5c31~~\u5973\u88c5~~\u5220\u9664\u6b64\u8282\u70b9\n\nAC!!!\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nmap<int,int> a;\nmap<int,int>::iterator it;\nint b[1000005],mx[1000005];\ninline int read()\n{\n   register int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nint main()\n{\n\tregister int n,m,i;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=0;i<m;i++)\n\t{\n\t\tb[i]=read();\n\t\ta[b[i]]++;\t\n\t}\n\tit=a.end();\n\tit--;\n\tprintf(\"%d \",a.begin()->first);\n\tmx[m-1]=it->first;\n\tfor(i=m;i<n;i++)\n\t{\n\t\tb[i]=read();\n\t\tit=a.find(b[i-m]);\n\t\tit->second--;\n\t\tif(it->second==0) a.erase(it);\n\t\ta[b[i]]++;\n\t\tprintf(\"%d \",a.begin()->first);\n\t\tit=a.end();\n\t\tit--;\n\t\tmx[i]=it->first;\n\t}\n\tputchar('\\n');\n\tfor(i=m-1;i<n;i++)\n\t\tprintf(\"%d \",mx[i]);\n}\n```\n",
        "postTime": 1579166922,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3 /\u3010\u6a21\u677f\u3011\u5355\u8c03\u961f\u5217\u3011"
    },
    {
        "content": "**\u8fd9\u9053\u9898\u7528\u5faa\u73af\u961f\u5217\u7684\u601d\u60f3\u5c31\u53ef\u4ee5\u8fc7\u3002**\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u770b\u4ee3\u7801\uff0c\u5e94\u8be5\u770b\u5f97\u61c2\u3002\n```\n//P1186\u6ed1\u52a8\u7a97\u53e3 \n#include<bits/stdc++.h>//\u61d2\u4eba\u4e13\u7528 \nusing namespace std;\nint n,k,a[1000001],q[1000001],head,rear;\nvoid getmin(){\n    head=rear=0;//\u5934\u7b49\u4e0e\u5c3e \n    for(int i=1;i<k;i++)\n\t{\n        while(rear>=head&&a[q[rear]]>=a[i])rear--;//\u5c3e\u51cf1\n        q[++rear]=i;//\u961f\u5c3e\u4e3ai \n    }\n    for(int i=k;i<=n;i++)\n\t{\n        while(rear>=head&&a[q[rear]]>=a[i])rear--; \n        q[++rear]=i;//\u5230\u8fd9\u91cc\u4e3a\u6b62\u540c\u4e0a \n        \n        if(i-q[head]>=k)head++;//\u5934\u52a01 \n        cout<<a[q[head]]<<\" \";//\u8f93\u51fa \n    }\n    cout<<endl;//\u6362\u4e2a\u884c \n}\nvoid getmax(){//\u540c\u4e0a\uff0c\u628a\u7b26\u53f7\u548c\u8fd0\u7b97\u6539\u4e00\u6539\u5c31\u597d\u4e86 \n    head=rear=0;\n    for(int i=1;i<k;i++)\n\t{\n        while(rear>=head&&a[q[rear]]<=a[i])rear--;\n        q[++rear]=i;\n    }\n    for(int i=k;i<=n;i++)\n\t{\n        while(rear>=head&&a[q[rear]]<=a[i])rear--;\n        q[++rear]=i;\n        \n        if(i-q[head]>=k)head++;\n        cout<<a[q[head]]<<\" \"; \n    }\n}\nint main(){\n    cin>>n>>k;\n    for(int i=1;i<=n;i++)cin>>a[i];//\u8bfb\u5165\u6570\u636e \n    \n    getmin();//\u53ea\u628a\u4e2a\u6570\u4e00\u5c31\u5566\uff01\n    getmax();//\u8981\u4e24\u51fd\u8dd1\u904d\u597d\uff01\uff01\n\t \n    return 0;//\u5b8c\u7f8edi\u7ed3\u675f \n}\n//\u8c22\u8c22\u5927\u5bb6\u89c2\u770b^_^\n```\n\u6c42\u901a\u8fc7\uff0c\n\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\n\u5f88\u6fc0\u52a8\u5462\u3002\n\n~~\u5982\u6709\u96f7\u540c\uff0c\u7eaf\u5c5e\u5de7\u5408~~",
        "postTime": 1565526595,
        "uid": 235981,
        "name": "\u849f\u84bbJason\u5468",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u5148\u5f15\u5165\u4e00\u4e2a\u5b50\u9898\u76ee\uff1a\n\n\u8bbe\u6709\u4e00\u4e2a\u6808\uff0c\u8981\u6c42\u652f\u63013\u79cd\u64cd\u4f5c\uff1a\n\n1. \u63d2\u5165\u4e00\u4e2a\u6570\n2. \u5220\u9664\u4e00\u4e2a\u6570\n3. \u6c42\u5f53\u524d\u6808\u4e2d\u7684\u6700\u5927\u503c\n\n\u8981\u6c42\u6bcf\u4e2a\u64cd\u4f5c\u5747\u4e3a$O(1)$\n\n\u524d\u4e24\u4e2a\u64cd\u4f5c\u5c31\u4e0d\u8bb2\u4e86~~\u4e0d\u4f1a\u5199\u6808\u7684\u662f\u6ca1\u770b\u8fc7\u4e00\u672c\u901a\u5417~~\n\n\u4e3b\u8981\u6765\u8bb23\u53f7\u64cd\u4f5c\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u660e\u786e1\u70b9\n\n**\u5bf9\u4e8e\u4efb\u4e00\u65f6\u523b\uff0c\u6808\u4e2d\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e(\u8bb0\u4e3a$k$)\u7684\u67e5\u8be2\u7b54\u6848(\u8bb0\u4e3a$ans_k$)\u53ea\u4e0e$<=k$\u7684\u4f4d\u7f6e\u6709\u5173\uff0c\u4e0e$>k$\u7684\u4f4d\u7f6e\u65e0\u5173**\n\n\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u65ad\u51fa\uff1a\n\n\u5f53\u6808\u4e2d\u63d2\u5165\u4e00\u4e2a\u6570\u65f6\uff0c$ans_k=max(ans_{k-1},val_k)$\n\n\u4f46\u662f$ans_{k-1}$\u600e\u4e48\u6c42\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u518d\u5f00\u4e00\u4e2a\u7b54\u6848\u6808\uff0c\u6bcf\u6b21\u5728\u63d2\u5165$val_k$\u65f6\u5728\u7b54\u6848\u6808\u4e2d\u63d2\u5165$min(val_k,ans_{k-1})$\uff0c\u8fd9\u65f6\u7b54\u6848\u6808\u7684\u6808\u9876\u5c31\u662f$ans_k$\n\n---\n\u518d\u56de\u5230\u73b0\u5728\u7684\u95ee\u9898\uff1a\n\n\u6b64\u65f6\u6211\u4eec\u7531\u5728**\u6808**\u4e2d\u64cd\u4f5c\u53d8\u4e3a\u5728**\u961f\u5217**\u4e2d\u64cd\u4f5c\n\n\u53ef\u662f\u5f88\u663e\u7136\u961f\u5217\u5e76\u4e0d\u6ee1\u8db3\u4e0a\u6587\u63d0\u5230\u7684\u6027\u8d28\n\n\u600e\u4e48\u529e\u5462\uff1f\n\n~~\u901a\u8fc7\u641c\u7d22\u5f15\u64ce~~\uff0c\u6211\u7075\u7a8d\u987f\u5f00\n\n\u6211\u4eec\u53ef\u4ee5\u7528**2\u4e2a\u6808\u6a21\u62df1\u4e2a\u961f\u5217**\uff01\n\n\u5177\u4f53\u8fc7\u7a0b\uff1a\n\n1. \u9996\u5148\u5f002\u4e2a\u6808\uff0c\u8bb0\u4e3a$sta_0$\u548c$sta_1$(\u6808\u9876\u5206\u522b\u4e3a\u961f\u5934($top_0$)\u548c\u961f\u5c3e($top_1$))\n2. \u4ece\u961f\u5c3e\u63d2\u5165\u65f6\u76f4\u63a5\u5c06\u503c\u63d2\u5165$sta_1$/\u961f\u5934\u65f6\u63d2\u5165$sta_0$\n3. \u961f\u5934\u5220\u9664\u65f6\u5148\u68c0\u67e5$sta_0$\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u662f\u5c31\u5c06$sta_1$\u4e2d\u7684\u5185\u5bb9\u4f9d\u6b21\u63d2\u5165\u5230$sta_0$\u4e2d\uff0c\u7136\u540e$--top_0$\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u628a1\u4e2a\u961f\u5217\u53d8\u6210\u4e862\u4e2a\u6808\uff0c\u518d\u5957\u4e0a**\u4e0a\u6587\u63d0\u5230\u7684\u6027\u8d28**\u5c31\u53ef\u4ee5\u5566~\n\n$Code:$\n\n```cpp\n#include<algorithm>\n#include<cstdio>\nusing std::max;\nusing std::min;\ntemplate<typename Tp,int N>//\u5c01\u88c5\u5927\u6cd5\u597d\nclass Rmq_Queue{\n\tint top[2];\n\tTp sta[2][N],maxn[2][N],minn[2][N];\n\tTp INF,_INF;\n\t\tvoid add(int k,Tp val)\n\t\t{\n\t\t\tsta[k][++top[k]]=val;\n\t\t\tmaxn[k][top[k]]=(top[k]==1)?val:max(val,maxn[k][top[k]-1]);\n\t\t\tminn[k][top[k]]=(top[k]==1)?val:min(val,minn[k][top[k]-1]);\n\t\t\tINF=max(INF,val);\n\t\t\t_INF=min(_INF,val);\n\t\t}\n\t\tvoid del(int k)\n\t\t{\n\t\t\tif(!top[k])//\u8fd9\u4e2a\u6808\u662f\u7a7a\u7684\n\t\t\t\twhile(top[k^1])//\u5c06\u53e6\u4e00\u4e2a\u6808\u7684\u5143\u7d20\u4f9d\u6b21\u63d2\u5165\u8fd9\u4e2a\u6808\n\t\t\t\t\tadd(k,sta[k^1][top[k^1]--]);\n\t\t\t--top[k];\n\t\t}\n\tpublic:\n\t\tvoid clear(){top[0]=top[1]=0;INF=_INF=Tp(0);}\n\t\tvoid push_back(Tp val){add(1,val);}\n\t\tvoid push_front(Tp val){add(0,val);}\n\t\tvoid pop_back(){del(1);}\n\t\tvoid pop_front(){del(0);}\n\t\tTp q_max()\n\t\t{\n\t\t\tTp ans=_INF;\n\t\t\tif(top[0])//\u67e5\u8be2sta0\n\t\t\t\tans=maxn[0][top[0]];\n\t\t\tif(top[1])//\u67e5\u8be2sta1\n\t\t\t\tans=max(ans,maxn[1][top[1]]);\n\t\t\treturn ans;\n\t\t}\n\t\tTp q_min()//\u540c\u7406\n\t\t{\n\t\t\tTp ans=INF;\n\t\t\tif(top[0])\n\t\t\t\tans=minn[0][top[0]];\n\t\t\tif(top[1])\n\t\t\t\tans=min(ans,minn[1][top[1]]);\n\t\t\treturn ans;\n\t\t}\n};\nint n,m;\nint val[(int)1e6+10];\nRmq_Queue<int,(int)1e6+10>q;\nsigned main(int argc,char **argv)\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",val+i);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tq.push_back(val[i]);\n\t\tif(i>=m)\n\t\t{\n\t\t\tprintf(\"%d \",q.q_min());\n\t\t\tq.pop_front();\n\t\t}\n\t}\n\tq.clear();\n\tputchar('\\n');\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tq.push_back(val[i]);\n\t\tif(i>=m)\n\t\t{\n\t\t\tprintf(\"%d \",q.q_max());\n\t\t\tq.pop_front();\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1560418714,
        "uid": 84836,
        "name": "a999999",
        "ccfLevel": 6,
        "title": "\u7528\u6808\u5b9e\u73b0\u961f\u5217(\u8d44\u74f7O(1)\u67e5\u8be2max/min)"
    },
    {
        "content": "\u8fd9\u662f\u672c\u849f\u84bb\u7b2c2\u6b21\u53d1\u9898\u89e3\uff0c\u671bdalao\u4eec\u4e0d\u8981\u55b7\u3002\u3002\u3002\u3002\n\u6211\u4f7f\u7528STL\u91cc\u7684\u4f18\u5148\u961f\u5217\u5199\u7684\uff08\u6211\u5b9a\u4e49\u4e86\u4e24\u4e2a\u961f\u5217\uff0c\u4e00\u4e2a\u9012\u589e\uff0c\u53e6\u4e00\u4e2a\u9012\u51cf\uff09\n\u8003\u8651\u5230\u5728\u6392\u5e8f\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u6570\u662f\u7b2c\u51e0\u4e2a\u4f1a\u6df7\u4e71\uff0c\u6211\u5c31\u7528\u4e86\u7ed3\u6784\u4f53\uff0cx\u8868\u793a\u7f16\u53f7\uff0cd\u8868\u793a\u8fd9\u4e2a\u6570\u503c\n```cpp\nstruct windo1{\n\tint x,d;\n\tbool operator<(const windo1 & t) const\n\t{\n\t\treturn d>t.d;\n\t}\n} t1;\npriority_queue <windo1> q1;\nstruct windo2{\n\tint x,d;\n\tbool operator<(const windo2 & t) const\n\t{\n\t\treturn d<t.d;\n\t}\n} t2;\npriority_queue <windo2> q2;\n```\n\u7528\u4e00\u4e2abool\u6570\u7ec4\u8bb0\u5f55\u8fd9\u4e2a\u6570\u80fd\u5426\u88ab\u770b\u89c1\uff0c\u4e0b\u6807\u8868\u793a\u8fd9\u4e2a\u6570\u662f\u7b2c\u51e0\u4e2a\u6570\uff080\u8868\u793a\u80fd\u770b\u5230\uff0c1\u8868\u793a\u770b\u4e0d\u5230\u3002\u521d\u59cb\u5316\n```cpp\n\tfor(register int i=k+1;i<=n;i++) b[i]=1;\n```\n\u6570\u7ec4\u9ed8\u8ba4\u4e3a0\u60011~k-1\u770b\u5f97\u89c1\uff0ck~n\u770b\u4e0d\u89c1\uff09\n\n\u6211\u5206\u4e24\u90e8\u5206\u8bfb\u5165\n\n\u7b2c\u4e00\u90e8\u5206\u8fb9\u8bfb\u4fbf\u5f80\u961f\u5217\u91cc\u5b58\n```cpp\n\tfor(register int i=1;i<=k-1;i++)\n\t{\n\t\tt0=gint();\n\t\tq1.push((windo1){i,t0});\n\t\tq2.push((windo2){i,t0});\n\t}\n```\n\n\u7b2c\u4e8c\u90e8\u5206\u5728\u8bfb\u7684\u65f6\u5019\u5c31\u9700\u8981\u8fdb\u884c\u64cd\u4f5c\u4e86\n\n\u9996\u5148b[i-k]=1,\u7b2ci-k\u4e2a\u6570\u770b\u4e0d\u89c1\u4e86\uff0c\n    b[k]=0,\u7b2ck\u4e2a\u6570\u80fd\u770b\u89c1\u4e86\n\n\u63a5\u7740\u53d6\u961f\u9996\uff0c\u5982b[\u961f\u9996]==0\uff0c\u90a3\u4e48\u961f\u9996\u5c31\u662f\u8981\u627e\u7684\u6700\u503c\n\u5426\u5219\u63a5\u7740\u53d6\u961f\u9996\u77e5\u9053b[\u961f\u9996]==0\n\u8fd9\u4e2a\u64cd\u4f5c\u9700\u8981\u6267\u884c\u4e24\u904d\uff0c\u53ca\u8981\u6c42\u6700\u5927\u6709\u8981\u6c42\u6700\u5c0f\n```cpp\n\t\tt1=q1.top();\n\t\twhile(b[t1.x])\n\t\t{\n\t\t\tq1.pop();\n\t\t\tt1=q1.top();\n\t\t}\n        t2=q2.top();\n\t\twhile(b[t2.x])\n\t\t{\n\t\t\tq2.pop();\n\t\t\tt2=q2.top();\n\t\t}\n```\n\u53ea\u662f\u6211\u5c31\u76f4\u63a5\u8f93\u51fa\u6700\u5927\u503c\u4e86\n\u53e6\u5f00\u4e00\u4e2a\u6570\u7ec4\u5206\u522b\u8bb0\u5f55\u6700\u5c0f\u503c\u6700\u540e\u4f7f\u51fa\u5373\u53ef\n\n\n------------\n\u4e0b\u9762\u9644\u4e0a\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n  #include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nint n,t0,k,ans2[1000001];\nbool b[1000001];\nstruct windo1{\n\tint x,d;\n\tbool operator<(const windo1 & t) const\n\t{\n\t\treturn d>t.d;\n\t}\n} t1;\npriority_queue <windo1> q1;\nstruct windo2{\n\tint x,d;\n\tbool operator<(const windo2 & t) const\n\t{\n\t\treturn d<t.d;\n\t}\n} t2;\npriority_queue <windo2> q2;\ninline int gint()  //\u62d9\u52a3\u7684\u5feb\u8bfb\uff08\u636e\u8bf4\u8fd8\u6709\u66f4\u5feb\u7684\uff09\u3002 \n{\n\tint ff=1,ee=0;\n\tchar ss=getchar();\n\twhile ((ss<'0'||ss>'9')&&ss!='-') ss=getchar();\n\twhile ((ss>='0'&&ss<='9')||ss=='-')\n\t{\n\t\tif (ss=='-') ff=-1;\n\t\telse ee=ee*10+ss-'0';\n\t\tss=getchar();\n\t}\n\treturn ee*ff;\n}\nint main()\n{\n\tn=gint();k=gint();\n\tfor(register int i=k+1;i<=n;i++) b[i]=1;//\u4e0d\u80fd\u770b\u7684\u662f1 //\u80fd\u770b\u7684\u662f0 \n\tfor(register int i=1;i<=k-1;i++)\n\t{\n\t\tt0=gint();\n\t\tq1.push((windo1){i,t0});\n\t\tq2.push((windo2){i,t0});\n\t}\n\tfor(register int i=k;i<=n;i++)\n\t{\n\t\tb[i-k]=1;b[i]=0;\n\t\tt0=gint();\n\t\tq1.push((windo1){i,t0});\n\t\tt1=q1.top();\n\t\twhile(b[t1.x])\n\t\t{\n\t\t\tq1.pop();\n\t\t\tt1=q1.top();\n\t\t}\n\t\tprintf(\"%d \",t1.d);\n\t\tq2.push((windo2){i,t0});\n\t\tt2=q2.top();\n\t\twhile(b[t2.x])\n\t\t{\n\t\t\tq2.pop();\n\t\t\tt2=q2.top();\n\t\t}\n\t\tans2[i]=t2.d;\n\t}\n\tprintf(\"\\n\");\n\tfor(register int i=k;i<=n;i++)\n\t\tprintf(\"%d \",ans2[i]);\n\treturn 0;\n}\n\n```\n\u4ee3\u7801\u7565\u957f\uff0c\u6ca1\u6709\u523b\u610f\u7f29\u884c\u6570\uff0c\u5e0c\u671b\u5927\u5bb6\u53ef\u4ee5\u8c05\u89e3\n\u5982\u6709\u610f\u89c1\uff0c\u6b22\u8fce\u79ef\u6781\u63d0\u51fa\n\u8c22\u8c22\u5927\u5bb6",
        "postTime": 1539490301,
        "uid": 121563,
        "name": "\u5149\u660e\u6b63\u5927",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "# \u533a\u95f4\u5212\u5b9a\u6700\u5c0f\u503c\u9898\u89e3--\u5355\u8c03\u961f\u5217\n\n\n\u8fd9\u9053\u9898\u4f5c\u4e3a\u4e00\u9053\u6807\u51c6\u7684\u6a21\u677f\u9898\uff0c\u505a\u6cd5\u5e76\u4e0d\u5c11\u3002\u66b4\u529b\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u4e00\u5c42\u5c42\u641c\u7d22\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u96be\u770b\u3002\u5176\u4ed6\u65b9\u6cd5\u8fd8\u6709\u7528\u7ebf\u6bb5\u6811\uff0crmq\u7b49\u7b49\u3002\u4f46\u662f\u8eab\u4e3a\u849f\u84bb\u4e00\u679a\u7684\u6211**\u90fd\u4e0d\u4f1a**\uff0c\u600e\u4e48\u529e\uff1f\u7ecf\u8fc7\u4e86H\u5de8\u4f6c\u7684\u70b9\u64ad\uff0c\u6211\u660e\u767d\u4e86\uff0c\u539f\u6765\u8fd9\u73a9\u610f\u53ef\u4ee5\u4e0d\u7528\u6d89\u53ca\u5230\u4ec0\u4e48\u9ad8\u7ea7\u7684\u7b97\u6cd5\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u7b80\u7b80\u5355\u5355\u7684\u961f\u5217\u5c31\u53ef\u4ee5\u641e\u5b9a\uff0c\u800c\u4e14\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n\uff09\uff0c\u662f\u4e0d\u662f\u5f88\u795e\u5947\uff0c\u4f46\u662f\uff0c\u7406\u60f3\u5f88\u4e30\u6ee1\uff0c\u73b0\u5b9e\u5f88\u9aa8\u611f\uff0c\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\u5e76\u975e\u6613\u4e8b\uff08\u5bf9\u4e8e\u849f\u84bb\u7684\u6211\u6765\u8bf4\uff09\uff0c\u5728\u7ecf\u8fc7\u5343\u8f9b\u4e07\u82e6\u7684\u5b9e\u73b0\u4e4b\u540e\u7279\u5199\u535a\u5ba2\u4e00\u7bc7\u4f5c\u4e3a\u7eaa\u5ff5\u3002\n\n\u9996\u5148\uff0c\u8981\u627e\u6ed1\u52a8\u533a\u95f4\u7684\u6700\u503c\uff0c\u641c\u7d22\u5bf9\u6bd4\u662f\u5c11\u4e0d\u4e86\u7684\uff0c\u4f46\u662f\u4e3a\u4e86\u907f\u514d\u591a\u6b21\u7684\u91cd\u590d\u641c\u7d22\uff0c\u6211\u4eec\u5c31\u9700\u8981\u4e00\u4e2a\u72b6\u6001\u6570\u7ec4\u6765\u8bb0\u5f55\u4ee5\u524d\u7684\u641c\u7d22\u8bb0\u5f55\u3002\u9996\u5148\u60f3\u5230\u7684\u5c31\u662f\u8bb0\u5f55\u4e0b\u626b\u63cf\u5230\u6bcf\u4e00\u4e2a\u70b9\u65f6\u5019\u7684\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u4f46\u8fd9\u6837\u505a\u6709\u4e00\u4e2a\u95ee\u9898\u2014\u2014\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u5b58\u4e0b\u6765\u7684\u6700\u5c0f\u503c\u662f\u5426\u5df2\u7ecf\u5728\u8303\u56f4m\u4e4b\u5916\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u53c8\u9700\u8981\u7ee7\u7eed\u626b\u63cf\u6765\u5224\u5b9a\u4e0a\u4e00\u4e2a\u5143\u7d20\u7684\u6700\u503c\u662f\u5426\u6709\u6548\uff0c\u5426\u5219\u91cd\u65b0\u641c\u7d22\uff0c\u8fd9\u6837\u4e00\u6765\u65f6\u95f4\u590d\u6742\u7684\u5c31\u56de\u5230\u4e86n\u65b9 \uff0c\u79bbO\uff08n\uff09\u7684\u73b0\u5b9e\u8fd8\u6709\u90a3\u4e48\u4e00\u70b9\u8fdc\u3002\n\n\u770b\u8d77\u6765\u8fd9\u6837\u597d\u50cf\u4e0d\u884c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6362\u4e00\u4e2a\u601d\u8def\uff0c\u53d1\u73b0\u5982\u679c\u6211\u4eec\u5bf9\u8fd9\u79cd\u72b6\u6001\u5b9a\u4e49\u4e00\u79cd\u201c\u4fdd\u8d28\u671f\u201d\uff0c\u5143\u7d20\u7684\u4e0b\u6807\u5c31\u521a\u597d\u4ee3\u8868\u7740\u65f6\u95f4\u7684\u6d41\u901d\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u5f88\u5bb9\u6613\u5730\u5224\u65ad\u6b64\u5143\u7d20\u662f\u5426\u5728\u8303\u56f4m\u4e4b\u5916\u3002\n\n\u5e76\u4e14\u901a\u8fc7\u4e0b\u6807\u63d0\u53d6\u5143\u7d20\u4e5f\u5341\u5206\u65b9\u4fbf\uff0c\u90a3\u4e48\u5982\u4f55\u5728\u6700\u5c0f\u7684\u65f6\u95f4\u53d6\u5230\u6700\u5c0f\u503c\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u961f\u5217\u8ba9\u961f\u5217\u7684\u672b\u7aef\u6c38\u8fdc\u90fd\u662f\u5728\u4fdd\u8d28\u671f\u5185\u7684\u6700\u5c0f\u503c\uff0c\u4fdd\u8d28\u671f\u8fc7\u4e86\u5c31\u628a\u5b83\u8e22\u6389\uff0c\u8fd9\u6837\u4e00\u6765\u95ee\u9898\u5c31\u5f88\u597d\u89e3\u51b3\u4e86\u3002\n\n\u6309\u7167\u89e3\u51b3\u6700\u5c0f\u503c\u7684\u601d\u8def\uff0c\u6700\u5927\u503c\u95ee\u9898\u81ea\u7136\u5c31\u8fce\u5203\u800c\u89e3\u4e86\u3002\n\n>\n\u9644\u4e0a\u4ee3\u7801\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\ndeque <int> q;\ndeque <int>::iterator it;\nint a[12345678],b[12345687],c[12345687]; \nint main()\n{\n\t//\tfreopen(\"1.txt\",\"r\",stdin);\n\t\n\tint n,k;\n\tcin>>n>>k;\n\n\t\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\t//\tprintf(\"0\\n\");\n\tfor(int i=0;i<n;i++)\n\t{\n\t\twhile(!q.empty() && a[q.back()] >= a[i])\tq.pop_back();\t\t//\u5728\u961f\u5217\u4e0d\u4e3a\u7a7a\u7684\u60c5\u51b5\u4e0b\uff0c\u4fdd\u6301\u6b64\u961f\u5217\u4e3a\u4e00\u4e2a\u5347\u5e8f\u961f\u5217 \n\t\tq.push_back(i);\t\t//\u4e0b\u6807\u5165\u961f \t \n\t\t\n\t//\tprintf(\"i: %d q.front: %d\\n\",i,q.front());\t\t\n\t\tb[i] = a[q.front()];\t\t\t\t\t\n\t\tif(q.front() <= i-k+1 && i>=k-1)\n\t\t\tq.pop_front();\t\t\t\t\n\t} \n\t\n\tfor(int i=k-1;i< n;i++)\n\t\tprintf(\"%d \",b[i]);\n\t\n\twhile(!q.empty())\n\t\tq.pop_back();\n\t\n\tcout<<endl;\n\t\t\n\tfor(int i=0;i<n;i++)\n\t{\n\t\twhile(!q.empty() && a[q.back()]<= a[i])\tq.pop_back();\n\t\n                q.push_back(i);\n\t\t\n\t\tc[i] = a[q.front()];\n\t\tif(q.front() <= i-k+1 && i>=k-1)\n\t\t{\n\t\t\tq.pop_front();\n\t\t}\n\t\t\t\n\t}\t\t\n\tfor(int i=k-1;i< n;i++)\n\t\tprintf(\"%d \",c[i]);\t\n\treturn 0;\n\t\n}\n```\n\nperfect\uff01",
        "postTime": 1571654798,
        "uid": 166850,
        "name": "farines",
        "ccfLevel": 0,
        "title": "\u533a\u95f4\u5212\u5b9a\u6700\u5c0f\u503c\u9898\u89e3\u2013\u5355\u8c03\u961f\u5217"
    },
    {
        "content": "\u53d1\u4e00\u6ce2\u6811\u72b6\u6570\u7ec4\u7684\u7248\u672c\n\n\u5355\u8c03\u961f\u5217\u662f\u6700\u5feb\u7684\n\n\u6811\u72b6\u6570\u7ec4\u4e5f\u53ef\u4ee5\u8fc7\n\n\u9700\u8981\u5438\u6c27\u8fd9\u91cc\u4f7f\u7528\u4e86\u624b\u52a8O3\n\n\u5177\u4f53\u600e\u4e48\u5199\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u7684\u677f\u5b50\u9898\uff0c\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u6700\u503c\uff0c\u6ce8\u610f\u521d\u59cb\u503c\u7684\u8bbe\u7f6e\u8c03\u4e86\u5f88\u4e45\n```cpp\n#pragma GCC optimize(3)\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int N=1000005;\nint n,k,a[N],c[N],b[N];\ninline int lowbit(int x){return (x&(-x));}\ninline void modify1(int pos,int val)\n{for(;pos<=n;pos+=lowbit(pos))c[pos]=max(c[pos],val);}\ninline void modify2(int pos,int val)\n{for(;pos<=n;pos+=lowbit(pos))b[pos]=min(b[pos],val);}\ninline int query1(int l,int r)\n{\n    int ans=-0x7fffffff;\n    while(r>=l)\n    {\n        ans=max(ans,a[r]);\n        for(r--;r-lowbit(r)>=l;r-=lowbit(r))\n        ans=max(ans,c[r]);\n    }\n    return ans;\n}\ninline int query2(int l,int r)\n{\n    int ans=0x7fffffff;\n    while(r>=l)\n    {\n        ans=min(ans,a[r]);\n        for(r--;r-lowbit(r)>=l;r-=lowbit(r))\n        ans=min(ans,b[r]);\n    }\n    return ans;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n>>k;\n    memset(c,-0x3f,sizeof(c));\n    memset(b,0x3f,sizeof(b));\n    for(int i=1;i<=n;i++)cin>>a[i],modify1(i,a[i]),modify2(i,a[i]);\n    for(int i=k;i<=n;i++)cout<<query2(i-k+1,i)<<\" \";\n    cout<<endl;\n    for(int i=k;i<=n;i++)cout<<query1(i-k+1,i)<<\" \";\n}\n```\n\u518d\u53d1\u4e00\u4e0b\u5355\u8c03\u961f\u5217\u7684\uff0c\u4e0d\u7528\u5438\u6c27\n\u7248\u672c\u4e00STL\n```cpp\n#include<iostream>\n#include<deque>\nusing namespace std;\nconst int N=1000005;\nint n,k;\nstruct node{int v,id;}a[N];\ndeque<node> qmin,qmax;\nint main()\n{\n    cin>>n>>k;\n    for(int i=1;i<=n;i++)cin>>a[i].v,a[i].id=i;\n    for(int i=1;i<=n;i++)\n    {\n        while(!qmin.empty()&&qmin.back().v>=a[i].v)qmin.pop_back();\n        qmin.push_back(a[i]);\n        if(qmin.front().id==i-k)qmin.pop_front();\n        if(i>=k)cout<<qmin.front().v<<\" \";\n    }\n    cout<<endl;\n    for(int i=1;i<=n;i++)\n    {\n        while(!qmax.empty()&&qmax.back().v<=a[i].v)qmax.pop_back();\n        qmax.push_back(a[i]);\n        if(qmax.front().id==i-k)qmax.pop_front();\n        if(i>=k)cout<<qmax.front().v<<\" \";\n    }\n}\n```\n\u7248\u672c\u4e8c\u6570\u7ec4\u6a21\u62df\n```cpp\n#include\"iostream\"\nusing namespace std;\nconst int N=1000005;\nint n,k,a[N],h,t;\nstruct deque{int v,id;}qmax[N],qmin[N];\nint main()\n{\n    cin>>n>>k;\n    for(int i=1;i<=n;i++)cin>>a[i];\t\n    h=t=1;\n    for(int i=1;i<=n;i++)\n    {\n        while(h!=t&&qmin[t-1].v>=a[i])t--;\n        qmin[t].v=a[i],qmin[t++].id=i;\n        if(qmin[h].id==i-k)h++;\n        if(i>=k)cout<<qmin[h].v<<\" \";\n    }\n    cout<<endl; \n    h=t=1;\n    for(int i=1;i<=n;i++)\n    {\n        while(h!=t&&qmax[t-1].v<=a[i])t--;\n        qmax[t].v=a[i],qmax[t++].id=i;\n        if(qmax[h].id==i-k)h++;\n        if(i>=k)cout<<qmax[h].v<<\" \";\n    }\n}\n```\n\u4e3b\u8981\u662f\u60f3\u63a8\u5e7f\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u975e\u5e38\u597d\uff0c\u4f1a\u6bd4\u7ebf\u6bb5\u6811\u5feb\uff0c\u8fd8\u5341\u5206\u597d\u5199",
        "postTime": 1550372586,
        "uid": 135659,
        "name": "\u96e8\u5e55\u6563\u5f71_\u5c0f\u521d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\n[\u5e7f\u544a](https://blog.csdn.net/longlong_long/article/details/82769513)  \n\n\n\u5355\t\u4e8e\t\u5341\t\u4e07\t\u8c94\t\u8c85\t\u62e5  \n\u8c03\t\u71ee\t\u5343\t\u91d1\t\u4e00\t\u4e08\t\u592b  \n\u961f\t\u961f\t\u9c7c\t\u9f99\t\u771f\t\u4e50\t\u4e8b  \n\u5217\t\u4ed9\t\u4f55\t\u5fc5\t\u95ee\t\u6c5f\t\u6e56  \n\n\u5355\t\u4e8e\t\u8f66\t\u9a91\t\u6765  \n\u8c03\t\u9f0e\t\u51fa\t\u84ec\t\u83b1  \n\u961f\t\u961f\t\u4eba\t\u5343\t\u91cc  \n\u5217\t\u4ed9\t\u9152\t\u4e00\t\u676f  \n\u770b\u770b\u8fd9\u4e24\u9996\u8bd7\u6bcf\u53e5\u8bdd\u7684\u5f00\u5934\uff0c\u8fde\u8d77\u6765\u5c31\u662f\u5355\u8c03\u961f\u5217\uff0c\u5355\u8c03\u961f\u5217\u662f\u4e00\u4e2a\u597d\u4e1c\u897f\u554a\uff0c\u4ed6\u5728\u5404\u8def\u7b97\u6cd5\u4e2d\u95f4\u90fd\u6709\u6781\u5927\u7684\u7528\u5904\uff0c\u7279\u522b\u662f\u7528\u6765\u5361\u65f6\u95f4\uff0c\u4f18\u5316\u7b97\u6cd5\uff0c\u6240\u4e00\u4e0d\u5b66\u597d\u662f\u4e0d\u884c\u7684\u554a\u3002  \n\n\u73b0\u5728\u5f00\u59cb\u6b63\u5f0f\u8bb2\u4e00\u8bb2\u5355\u8c03\u961f\u5217  \n\u9996\u5148\u6765\u770b\u4e00\u770b\u4e00\u9053\u9898  \n[\u6ed1\u52a8\u7a97\u53e3](https://www.luogu.org/problemnew/show/P1886)\n\u4e4d\u4e00\u770b\uff0c\u4e0d\u662f\u7ebf\u6bb5\u6811\u5417\uff1f~~\u968f\u968f\u4fbf\u4fbf\u5c31\u8fc7\u4e86~~\uff0c\u4f46\u662f\u901f\u5ea6\u5341\u5206\u6162\uff0c\u800c\u4e14\u8fd9\u53ea\u662f\u8bad\u7ec3\u5355\u8c03\u961f\u5217\u7684\u4e00\u9053\u9898\u800c\u5df2  \n\n\u7528\u4e00\u4e2a\u5934\u6307\u9488\uff0c\u4e00\u4e2a\u5c3e\u6307\u9488\uff0c\u6a21\u62df,\u6ee1\u8db3\u6bcf\u6b21\u961f\u5217\u6ee1\u8db3\u5355\u8c03\u6027\u3002\n\u65b0\u7684\u6570\u4ece\u5c3e\u90e8\u52a0\u5165\uff0c\u5982\u679c\u5927\u4e8e\u7b49\u4e8e\u524d\u9762\u4e00\u4e2a\u6570\u5219\u5f39\u51fa\u524d\u4e00\u4e2a\u6570\uff0ctail++\uff0c\u76f4\u5230\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5728\u5c3e\u90e8\u653e\u5165\u8fd9\u4e2a\u6570\u3002  \n\u662f\u4e0d\u662f\u5f88\u7ed5\uff1f  \n\n\u73b0\u5728\u5c06\u5b83\u5177\u4f53\u5316\uff0c\u5047\u8bbe\u6709\u4e00\u4e2aoier\u5728\u673a\u623f\u9893[\u6e38\u620f](http://slay.one),\u5bfc\u81f4\u5fd8\u8bb0\u4e86\u5b83\u63a5\u4e0b\u6765\u8fd8\u6709\u8bfe\u5916\u73ed,~~\u53ef\u601c,\u6b8b\u9177~~\u3002\u7b49\u4ed6\u60f3\u8d77\u6765\u5df2\u7ecf\u8981\u4e0a\u8bfe\u4e86\uff0c\u4e8e\u662f\u4ed6\u98de\u5954\u81f3\u516c\u4ea4\u7ad9\u53f0\uff0c\u597d\u4e0d\u5bb9\u6613\u7b49\u5230\u8f66\u6765\u4e86\uff0c\u4f46\u662f\u53d1\u73b0\u4e0a\u8f66\u4eba\u592a\u591a\u4e86\u3002\u4ed6\u51b3\u5b9a\u91c7\u53d6\u4e00\u4e9b\u63aa\u65bd\uff0c\u5df2\u77e5\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u6b66\u529b\u503c\u3002\u5982\u679c\u4ed6\u7684\u6b66\u529b\u503c\u5927\u4e8e\u524d\u9762\u7684\u4eba\uff0c\u76f4\u63a5\u5c06\u4ed6\u6254\u5230\u540e\u9762\u53bb\uff0c\u81ea\u5df1\u5219\u5411\u524d\u4e00\u4f4d\uff0c\u5982\u6b64\u53cd\u590d\u3002\u5982\u679c\u7b49\u4e8e\uff0c\u56e0\u4e3a\u4ed6\u5fc3\u4e2d\u6709\u7740\u4e00\u4e2a\u62a2\u5ea7\u4f4d\u7684\u4fe1\u5ff5\uff0c\u6240\u4ee5\u7ecf\u8fc7\u6b8a\u6b7b\u640f\u6597\uff0c\u8fd8\u662f\u628a\u90a3\u4eba\u6254\u540e\u9762\u53bb\u4e86\u3002  \n\n\u662f\u4e0d\u662f\u7406\u89e3\u4e86\uff0c\u63a5\u4e0b\u6765\u770b\u4ee3\u7801\n\u4ee3\u7801\u5982\u4e0b\uff1a  \n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#define rg register\nusing namespace std;\nstruct node{\n\tint v,x;\n}Max[1000001],Min[1000001];\nint a[1000001];\ninline int read(){\n\tint x=0,c=getchar(),f=1;\n\twhile(c<'0'||c>'9')\n\t\tf= (c=='-')?-1:1,c=getchar();\n\twhile(c>='0'&&c<='9')\n\t\tx=x*10+c-48,c=getchar();\n\treturn f*x;\n}\ninline void print(int x){\n    if(x<0)\n        putchar('-'),x=-x;\n    if(x>9)\n        print(x/10);\n    putchar(x%10+'0');\n}\nint main(){\n\tint n,m;\n    rg int head=1,tail=1;\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=read();\n\tfor(rg int i=1;i<=n;i++){\n\t\twhile(Min[tail].v>=a[i]&&head<=tail)\n\t\t\ttail--;\n\t\ttail++,Min[tail].x=i,Min[tail].v=a[i];\n\t\tif(i<m)\n\t\t\tcontinue;\n\t\tint flag=0;\n\t\twhile(head<=tail){\n\t\t\t(Min[head].x>=i-m+1)?(print(Min[head].v),putchar(' '),flag=1):head++;\n\t\t\tif(flag==1) break;\n\t\t}\n\t}\n\tputchar('\\n');\n\thead=tail=1;\n\tfor(rg int i=1;i<=n;i++){\n\t\twhile(Max[tail].v<=a[i]&&head<=tail)\n\t\t\ttail--;\n\t\ttail++,Max[tail].x=i,Max[tail].v=a[i];\n\t\tif(i<m)\n\t\t\tcontinue;\n\t\tint flag=0;\n\t\twhile(head<=tail){\n\t\t\t(Max[head].x>=i-m+1)?(print(Max[head].v),putchar(' '),flag=1):head++;\n\t\t\tif(flag==1) break;\n\t\t}\n\t}\n}\n\n```",
        "postTime": 1537327393,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "# \u4e00\u4e2a\u7b80\u6d01\u7684\u65b9\u6cd5\uff0c\u7528\u5faa\u73af\u52a0sort\uff0c\u6ca1\u6709\u7528\u4f18\u5148\u961f\u5217\n\n\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e00\u9898\uff0c\u4ee3\u7801\u975e\u5e38\u597d\u5199\uff0c\u6ca1\u6709\u7528\u5230\u9ad8\u7ea7\u7684\u77e5\u8bc6\uff0c\u975e\u5e38\u5bb9\u6613\u770b\u61c2\u3002\n\n## \u8fd9\u4e2a\u9898\u76ee\u7684\u4ee3\u7801\u5fc5\u987b\u8981\u4f18\u5316\n\n\u6211\u4eec\u5728\u6a21\u62df\u8fc7\u7a0b\u65f6\uff0c\u53ef\u4ee5\u501f\u52a9 int \u4e00\u4e2a max min\u5206\u522b\u8868\u793a\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u6700\u5c0f\u503c\uff0c\u7a97\u53e3\u79fb\u52a8\u65f6\u76f4\u63a5\u901a\u8fc7if\u6765\u5224\u65ad\u662f\u5426\u66f4\u65b0min max\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c11\u7528\u51e0\u904dsort\n\n## \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\nn\\*log2n\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint a[1000005];\nint maxbt;\nint minbt;    int b[1000000];\nint maxn(int x,int y)            //\u7528\u6765\u627e\u6700\u5927\u503c\n{\n    int top=0;\n    for(int i=x;i<=y;i++)\n    {\n        b[++top]=a[i];\n    }\n    sort(b+1,b+top+1);\n    return b[top];\n}int bt[1000000];\nint minn(int x,int y)       //\u7528\u6765\u627e\u6700\u5c0f\u503c\n{\n    int top=0;    \n    for(int i=x;i<=y;i++)\n    {\n        bt[++top]=a[i];\n    }\n    sort(bt+1,bt+top+1);\n    return bt[1];\n}\nint maxb[1000005];\nint minb[1000005];\nint main(){\n    int n,k;\n    a[0]=99999999;                            //\u8fd9\u4e2a\u4ee3\u7801\u4e2d\uff0c\u4e3a\u4e86\u65b9\u4fbf\u64cd\u63a7\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u6211\u820d\u5f03a\u30100\u3011\uff1b\n    scanf(\"%d%d\",&n,&k);\n       int maxt=0,mint=99999999;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(i<=k)\n        {\n          if(a[i]>maxt)                     //\u5728\u8f93\u5165\u65f6\u627e\u6ca1\u6709\u79fb\u52a8\u65f6\uff0c\u7a97\u53e3\u7684\u6700\u5927\u503c\n          {\n              maxt=a[i];\n          }\n          if(a[i]<mint)                       //\u5728\u8f93\u5165\u65f6\u627e\u6ca1\u6709\u79fb\u52a8\u65f6\uff0c\u7a97\u53e3\u7684\u6700\u5927\u503c\n          {\n              mint=a[i];\n          }    \n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        int end=i+k-1;            //\u8868\u793a\u7a97\u53e3\u7684\u672b\u7aef\u5750\u6807\n        if(end>n)\n        {\n            break;           //\u8fd9\u4e00\u70b9\u4e00\u5b9a\u8981\u52a0\u9632\u6b62\u7a97\u53e3\u8d8a\u754c\n        }\n        if(a[end]>maxt)          //\u5982\u679c\u65b0\u52a0\u7684\u5143\u7d20\u6bd4\u539f\u6765\u7684 max \u8981\u5927\n        {\n            maxt=a[end];   //\u66f4\u65b0max\n        }\n        if(a[end]<mint)       //\u5982\u679c\u65b0\u52a0\u7684\u5143\u7d20\u6bd4\u539f\u6765\u7684 min \u8981\u5c0f\n        {\n            mint=a[end];    //\u66f4\u65b0min\n        }\n        if(a[i-1]==maxt)      //\u5982\u679c\u6254\u6389\u7684\u5143\u7d20\u662f\u539f\u6765\u7684 max \n        {\n               maxt=maxn(i,end);  //\u7528sort\u91cd\u65b0\u627emax\n        }\n        if(a[i-1]==mint)      //\u5982\u679c\u6254\u6389\u7684\u5143\u7d20\u662f\u539f\u6765\u7684 min\n        {\n            mint=minn(i,end);  //\u7528sort\u91cd\u65b0\u627emin\n        }\n        maxb[++maxbt]=maxt;    //\u5c06max min\u52a0\u5165\u6570\u7ec4\u4e2d\u65b9\u4fbf\u8f93\u51fa\n        minb[++minbt]=mint;\n    }\n    for(int i=1;i<=minbt;i++)\n    {\n        cout<<minb[i]<<\" \";           //\u8f93\u51fa\n     } cout<<endl;\n    for(int i=1;i<=maxbt;i++)\n    {\n        cout<<maxb[i]<<\" \";\n     }\n     \n\n}\n```",
        "postTime": 1500007288,
        "uid": 34187,
        "name": "huanghu996",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "//emmm,\u7ebf\u6bb5\u6811\u505a\u7684\n\n//\u4e3b\u8981\u601d\u8def\uff1a\u6bcf\u6b21\u7684\u7a97\u53e3\u6ed1\u52a8\uff0c\u90fd\u4f1a\u5e26\u6765\u533a\u57df\u5185\u4e00\u4e2a\u503c\u7684\u6539\n\u53d8\uff0c\n\u4e0e\u5176\u7528\u6570\u5217\u6a21\u62df\uff0c\u4e0d\u5982\u76f4\u63a5\u6570\u636e\u66ff\u6362\uff0c\u6bcf\u6b21\u53ea\u8981\u627e\u51fa\u6570\u636e\u66ff\u6362\u540e\uff0c\n\u7a97\u53e3\u5185\u7684\u6700\u5927\u503c\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\n\u56e0\u800c\u53ef\u4ee5\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u6c42\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u6700\u5c0f\u503c\uff0c\n\u6bcf\u6b21\u66f4\u6539\u6570\u636e\uff0c\u5c31\u76f8\u5f53\u4e8e\u662f\u5355\u70b9\u4fee\u6539\uff08change\uff09\u3002\n\n\n//\u5148\u8f93\u5165k\u4e2a\u503c\uff0c\u5efa\u6811\n\n\n//\u6bcf\u6b21\u4fee\u6539\u7684\u70b9\u4e3ai%m\uff08i==m\u65f6\uff0c\u4fee\u6539\u7b2cm\u4e2a\u70b9\uff09,\u5bf9\u6811\u8fdb\u884c\u7ef4\n\n\u62a4\uff0c\u53d6sum[1][0]\u4e3a\u6700\u5927\u503c\uff0csum[1][1]\u4e3a\u6700\u5c0f\u503c\u3002\n\n\n//\u5f00\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u5b58\u6bcf\u6b21\u7a97\u53e3\u6ed1\u52a8\u540e\u533a\u95f4\u5185\u7684\u6700\u5927\u503cax[t],\u6700\u5c0f\u503cin[t]\n\n\n(t\u4e3a\u7a97\u53e3\u6ed1\u52a8\u7684\u6b21\u6570\uff09\n\n\n//\u5dee\u4e0d\u591a\u5c31\u662f\u8fd9\u6837\uff0c\u5927\u4f6c\u4eec\u4e0d\u559c\u52ff\u55b7qwq\n//\u8d34\u4ee3\u7801\uff1a\n\n```c\n#include<bits/stdc++.h>\n#define ll long long\n#define maxn 1000005\nusing namespace std;\nll n,m;\nll x;\nll ax[maxn],in[maxn],a[maxn];\nll sum[maxn*4][2];//\u5b58\u653e\u6700 \u5927 \u5c0f \u503c \nll ls(ll k){\n\treturn k<<1;\n}\nll rs(ll k){\n\treturn k<<1|1;\n}\ninline void push_up(ll k){//\u56de\u6eaf \n\tsum[k][0]=max(sum[ls(k)][0],sum[rs(k)][0]);\n\tsum[k][1]=min(sum[ls(k)][1],sum[rs(k)][1]);\n}\ninline void build(ll k,ll l,ll r){//\u5efa\u6811\n\tif(l==r){\n\t\tsum[k][0]=sum[k][1]=a[l];\n\t\treturn;\n\t}\n\tll mid=(l+r)>>1;\n\tbuild(ls(k),l,mid);\n\tbuild(rs(k),mid+1,r);\n\tpush_up(k);\n}\ninline void change(ll k,ll l,ll r,ll p,ll v){//\u5355\u70b9\u4fee\u6539\n\tif(l==r&&l==p){\n\t\tsum[k][0]=sum[k][1]=v;\n\t\treturn;\n\t}\n\tll mid=(l+r)>>1;\n\tif(p<=mid) change(ls(k),l,mid,p,v);\n\tif(p>mid) change(rs(k),mid+1,r,p,v);\n\tpush_up(k);\n}\nint main(){\n\tll t=0;//\u79fb\u52a8\u6b21\u6570 \n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%lld\",&a[i]);\n\t}\n\tbuild(1,1,m);//\u5efa\u6811\uff08\u5927\uff0c\u5c0f\uff09 \n\tax[++t]=sum[1][0],in[t]=sum[1][1];\n\tn-=m;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&x);\n\t\tif(i%m==0){\n\t\t\tchange(1,1,m,m,x);\n\t\t}\n\t\telse change(1,1,m,i%m,x);\n\t\tax[++t]=sum[1][0],in[t]=sum[1][1];\n\t}\n\tfor(int i=1;i<=t;i++){\n\t\tprintf(\"%lld \",in[i]);\t\n\t}\n\tprintf(\"\\n\");\n\tfor(int i=1;i<=t;i++){\n\t\tprintf(\"%lld \",ax[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n} \n```\n\n\n//\u6700\u540e\u795d\u5927\u5bb6   **RP++;**",
        "postTime": 1559453694,
        "uid": 148223,
        "name": "ailo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b,\u7528\u7684\u90fd\u662f\u5355\u8c03\u961f\u5217,\u8eab\u4e3a\u9b54\u828b\u5c5e\u7684\u6211,\u4e00\u770b\u6570\u636e,$10^{6}$,\u521a\u597d$O(nlog(n))$\u53ea\u80fd\u5f31\u5f31\u7684\u4f7f\u7528\u7ebf\u6bb5\u6811.(\u540e\u8fb9\u6709\u6ce8\u91ca)\n\n\u8bfb\u5230\u9898,\u5c31\u60f3\u5230\u5efa\u6811\u4e4b\u540e\u4ece$1$\u5f00\u59cb,\u533a\u95f4\u957f\u4e3a$k$,\u4e00\u76f4\u5230$n-k+1$\u626b\u4e00\u904d,\u4e8e\u662f\u5c31\u5f00\u59cb\u6b22\u5feb\u7684\u6253\u4ee3\u7801:(~~\u6709\u5751~~)(\u627e\u4e00\u4e0b\u54ea\u91cc\u9519\u4e86)\n\n```\n#include<bits/stdc++.h>\n#define lson (x<<1)\n#define rson (x<<1|1)\nusing namespace std;\nconst int _=1000010;\nint mid,n,k,num[_],maxx[_*4],minn[_*4];\nvoid pushup(int x){\n    maxx[x]=max(maxx[lson],maxx[rson]);\n    minn[x]=min(minn[lson],minn[rson]);\n}\nvoid build(int x,int l,int r){\n    if(l==r){\n        maxx[x]=num[l];\n        minn[x]=num[l];\n        return;\n    } \n    int mid=(l+r)>>1;\n    build(lson,l,mid);\n    build(rson,mid+1,r);\n    pushup(x); \n}\nint query_max(int x,int l,int r,int ll,int rr){\n    if(r<ll||l>rr) return -0x7fffffff; \n    if(l>=ll&&r<=rr) return maxx[x];\n    int mid=(l+r)>>1;\n    int xxx=max(query_max(lson,l,mid,ll,rr),query_max(rson,mid+1,r,ll,rr));\n    return xxx;\n}\nint query_min(int x,int l,int r,int ll,int rr){\n    if(r<ll||l>rr) return 0x7fffffff;\n    if(l>=ll&&r<=rr) return minn[x];\n    int mid=(l+r)>>1;\n    int xxx=min(query_min(lson,l,mid,ll,rr),query_min(rson,mid+1,r,ll,rr));\n    return xxx;\n}\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&num[i]);\n    }\n    build(1,1,n);\n    \n    for(int i=1;i<=n-k+1;i++){\n        printf(\"%d \",query_min(1,1,n,i,i+k-1));\n    }\n    printf(\"\\n\");\n    for(int i=1;i<=n-k+1;i++){\n        printf(\"%d \",query_max(1,1,n,i,i+k-1));\n    }\n    return 0;\n}\n```\n\n\u7136\u800cT\u6389\u4e86\u4e00\u4e2a\u70b9.\n\n\u7ecf\u8fc7\u4e00\u756a\u4ed4\u7ec6\u7684\u67e5\u627e\u540e,\u53d1\u73b0\u4e86\u95ee\u9898\u6240\u5728:\n\n#### \u8fd9\u91cc:\n\n```\nint query_max(int x,int l,int r,int ll,int rr){\n    if(r<ll||l>rr) return -0x7fffffff; ///<-\u8fd9\u91cc\n    if(l>=ll&&r<=rr) return maxx[x];\n    int mid=(l+r)>>1;\n    int xxx=max(query_max(lson,l,mid,ll,rr),query_max(rson,mid+1,r,ll,rr));\n    return xxx;\n}\n```\n\n\u4e24\u4e2a\u51fd\u6570\u90fd\u6709\u8fd9\u7c7b\u95ee\u9898.\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u5c31\u662f:**\u4e0d\u7ba1\u65e0\u8bba\u5982\u4f55,\u5148\u5f80\u4e0b\u8d70\u4e00\u5c42,\u4e0d\u884c\u4e86\u518d\u9000\u56de\u6765,\u56e0\u6b64\u5c31\u9020\u6210\u4e86$TLE$,\u751a\u81f3\u4f1a$MLE$**.\u6240\u4ee5\u9884\u5148\u5224\u5b9a\u4e00\u4e0b,\u80fd\u8d70\u5c31\u8d70,\u4e0d\u884c\u4e86\u8d70\u53e6\u4e00\u8fb9,\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86.\n\u90a3\u4e2a\u51fd\u6570\u5c31\u53d8\u6210\u4e86\u8fd9\u6837:\n\n```\nint query_max(int x,int l,int r,int ll,int rr){\n\tif(r<ll||l>rr) return -0x7fffffff; \n\tif(l>=ll&&r<=rr) return maxx[x];\n\tint mid=(l+r)>>1;\n\tif(rr<mid)/*\u9884\u5224*/ return query_max(lson,l,mid,ll,rr);\n\telse if(ll>mid)/*\u9884\u5224*/ return query_max(rson,mid+1,r,ll,rr);\n\t//\u5bf9\u6bd4\u4e00\u4e0b:\n    int xxx=max(query_max(lson,l,mid,ll,rr),query_max(rson,mid+1,r,ll,rr));\n\treturn xxx;\n}\n```\n\u6709\u60ca\u65e0\u9669,$977ms$\n\nAC\u4ee3\u7801:\n\n```\n#include<bits/stdc++.h>\n#define lson (x<<1)\n#define rson (x<<1|1)/*\u8fd9\u91cc\u76f8\u5f53\u4e8ex*2+1*/\nusing namespace std;\nconst int _=1000010;//\u6570\u7ec4\u8303\u56f4,\u76ae\u4e00\u4e0b\nint mid,n,k,num[_],maxx[_*4],minn[_*4];\nvoid pushup(int x){//\u5c06\u7238\u7238\u7684\u503c\u66f4\u65b0\u4e00\u4e0b\n\tmaxx[x]=max(maxx[lson],maxx[rson]);//\u63a8\u4e0a\u6700\u5927\u503c\n\tminn[x]=min(minn[lson],minn[rson]);//\u63a8\u4e0a\u6700\u5c0f\u503c\n}\nvoid build(int x,int l,int r){//\u5efa\u6811\u51fd\u6570\n\tif(l==r){//\u5230\u8fbe\u53f6\u5b50,\u8d4b\u4e0a\u521d\u503c\n\t\tmaxx[x]=num[l];\n\t\tminn[x]=num[l];\n\t\treturn;//\u9000\u56de\u4e0a\u4e00\u5c42\n\t} \n\tint mid=(l+r)>>1;\n\tbuild(lson,l,mid);//\u6784\u5efa\u5b50\u6811\n\tbuild(rson,mid+1,r);\n\tpushup(x); //\u66f4\u65b0\u8282\u70b9\u503c\n}\nint query_max(int x,int l,int r,int ll,int rr){//\u67e5\u8be2\u6700\u5927\u503c\n\tif(r<ll||l>rr) return -0x7fffffff; //\u4e0d\u5728\u5f53\u524d\u533a\u95f4,\u8bb0\u4f4f,\u503c\u8981\u591f\u5c0f\n\tif(l>=ll&&r<=rr) return maxx[x];//\u5168\u5305\u542b\u533a\u95f4\n\tint mid=(l+r)>>1;\n\tif(rr<mid) return query_max(lson,l,mid,ll,rr);//\u5728\u5de6\u533a\u95f4\n\telse if(ll>mid) return query_max(rson,mid+1,r,ll,rr);//\u5728\u53f3\u533a\u95f4\n\tint xxx=max(query_max(lson,l,mid,ll,rr),query_max(rson,mid+1,r,ll,rr));\n\treturn xxx;//\u8fd9\u6837\u505a\u4fdd\u9669,\u4e0d\u4f1a\u51fa\u95ee\u9898\n}\nint query_min(int x,int l,int r,int ll,int rr){//\u67e5\u8be2\u6700\u5c0f\u503c,\u540c\u4e0a\n\tif(r<ll||l>rr) return 0x7fffffff;//\u503c\u8981\u591f\u5c0f.\n\tif(l>=ll&&r<=rr) return minn[x];\n\tint mid=(l+r)>>1;\n\tif(rr<mid) return query_min(lson,l,mid,ll,rr);\n\telse if(ll>mid) return query_min(rson,mid+1,r,ll,rr);\n\tint xxx=min(query_min(lson,l,mid,ll,rr),query_min(rson,mid+1,r,ll,rr));\n\treturn xxx;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&num[i]);//\u8bfb\u5165\u6570\u5b57\n\t}\n\tbuild(1,1,n);//\u672c\u4eba\u5bb9\u6613\u5fd8\u6253\u8fd9\u4e2a,\u518d\u6b21\u63d0\u9192\n\t\n\tfor(int i=1;i<=n-k+1;i++){//\u4e00\u4e2a\u4e00\u4e2a\u533a\u95f4\u5730\u904d\u5386\n\t\tprintf(\"%d \",query_min(1,1,n,i,i+k-1));\n\t}\n\tprintf(\"\\n\");\n\tfor(int i=1;i<=n-k+1;i++){//\u540c\u4e0a\n\t\tprintf(\"%d \",query_max(1,1,n,i,i+k-1));\n\t}\n\treturn 0;\n} \n```\n\n\u5f97\u591a\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\u624d\u884c.",
        "postTime": 1550669902,
        "uid": 138061,
        "name": "la_un_ty",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u5168\u662f\u7ebf\u6bb5\u6811\u6216\u5355\u8c03\u961f\u5217\u3002\u3002\u3002\u6765\u53d1\u4e00\u7bc7\u6811\u72b6\u6570\u7ec4\u9898\u89e3\u3002\n\n\u5355\u8c03\u961f\u5217\u662f\u6b63\u89e3\uff0c\u8fd9\u91cc\u4e0d\u8bb2\u4e86\uff08\u80fd\u6709\u7a7a\u770b\u6811\u72b6\u6570\u7ec4\u9898\u89e3\u7684\u5927\u4f6c\u80af\u5b9a\u90fd\u4f1a\uff09\uff0c\u4f46\u662f\u5404\u4f4d\u7528\u7ebf\u6bb5\u6811\u7684\u5927\u4f6c\u5c31\u8981\u5404\u79cd\u5e38\u6570\u4f18\u5316\uff0c\u4e0d\u7136TLE\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u6837\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u8003\u8651\u4e00\u4e0b**\u529f\u80fd\u4e00\u6837**\u800c\u4e14**\u5e38\u6570\u66f4\u5c0f**\u7684**\u6811\u72b6\u6570\u7ec4**\u5462\uff1f\n\n\u5927\u81f4\u601d\u8def\uff1a\u5f53 $r-lowbit(r)>l$ \u65f6\uff0c\u533a\u95f4 $[l,r]$ \u7684\u6700\u5927\u503c\u76f8\u5f53\u4e8e $\\max([l,r-lowbit(r)-1],[r-lowbit(r),r])$ \uff0c\u5426\u5219\u6709 $\\max([l,r-1],a[r])$ \u3002\n\n\u8fd9\u6837\u5b50\u7684\u8bdd\u54ea\u6015\u4e0d\u5438\u6c27\u4e5f\u80fdAC~\n\n\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nlog_2n)$ \u3002\n\n## Code\n```\n#include \"bits/stdc++.h\"\n#define lowbit(x) ((x)&(-(x)))\n#define N 1000001\nusing namespace std;\n\nint n,m,a[N],c1[N],c2[N];\n\ninline void read(int &x)\n{\n\tint s=1;\n\tchar ch=0;\n\tx=0;\n\twhile(ch^'-'&&!isdigit(ch))\n\t\tch=getchar();\n\tif(ch=='-')\n\t{\n\t\ts=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))\n\t{\n\t\tx=(x<<1)+(x<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=s;\n}\n\nvoid update1(int i,int x)\n{\n\twhile(i<=n)\n\t{\n\t\tc1[i]=min(c1[i],x);\n\t\ti+=lowbit(i);\n\t}\n}\n\nvoid update2(int i,int x)\n{\n\twhile(i<=n)\n\t{\n\t\tc2[i]=max(c2[i],x);\n\t\ti+=lowbit(i);\n\t}\n}\n\nint query1(int l,int r)\n{\n\tint t=INT_MAX;\n\twhile(l<=r)\n\t\tif(r-lowbit(r)>l)\n\t\t\tt=min(t,c1[r]),r-=lowbit(r);\n\t\telse\n\t\t\tt=min(t,a[r]),r--;\n\treturn t;\n}\n\nint query2(int l,int r)\n{\n\tint t=INT_MIN;\n\twhile(l<=r)\n\t\tif(r-lowbit(r)>l)\n\t\t\tt=max(t,c2[r]),r-=lowbit(r);\n\t\telse\n\t\t\tt=max(t,a[r]),r--;\n\treturn t;\n}\n\nint main()\n{\n\tread(n),read(m);\n\tfor(int i=1;i<=n;i++)\n\t\tc1[i]=INT_MAX,c2[i]=INT_MIN;\n\tfor(int i=1;i<=n;i++)\n\t\tread(a[i]),update1(i,a[i]),update2(i,a[i]);\n\tfor(int i=m;i<=n;i++)\n\t\tprintf(\"%d \",query1(i-m+1,i));\n\tprintf(\"\\n\");\n\tfor(int i=m;i<=n;i++)\n\t\tprintf(\"%d \",query2(i-m+1,i));\n\treturn 0;\n}\n```\n\n\u867d\u7136\u4e0d\u662f\u6700\u5feb\u7684\uff0c\u4f46\u662f\u6bd4\u4e0a\u4e0d\u8db3\u6bd4\u4e0b\u6709\u4f59\uff0c\u4e5f\u987a\u4fbf\u4e3a\u50cf\u6211\u4e00\u6837\u7684\u849f\u84bb\u4ecb\u7ecd\u4e00\u4e0b\u533a\u95f4\u67e5\u8be2\u6700\u503c\u7684\u6811\u72b6\u6570\u7ec4\u3002",
        "postTime": 1538312084,
        "uid": 31317,
        "name": "nothingness",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u663e\u7136\u662f\u5355\u8c03\u961f\u5217\u7684\u6a21\u677f\u9898\u3002\u5c31\u6211\u505a\u7684\u8fd9\u51e0\u9898\u5355\u8c03\u961f\u5217\u7684\u9898\u800c\u8a00\uff0c\u5355\u8c03\u961f\u5217\u7684\u4f7f\u7528\u60c5\u51b5\u662f\u5f88\u660e\u663e\u7684\uff1a\n\n1. \u5728\u67d0\u4e2a/\u67d0\u7ec4\u533a\u95f4\u5185\u6c42\u89e3\uff0c\u8be5\u7ec4\u533a\u95f4\u7b26\u5408\u4ee5\u4e0b\u7279\u5f81\uff1a\n\n\ta. \u9884\u5148\u7ed9\u51fa\uff0c\u6216\u8005\u53ef\u4ee5\u6c42\u5f97\u3002\n    \n    b. \u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4$[l_{i},r_{i}]$\u4ee5\u53ca\u5b83\u4eec\u7684\u4e0b\u4e00\u4e2a\u533a\u95f4$[l_{i+},r_{i+1}]$\uff0c\u4e00\u5b9a\u5b58\u5728$l_{i}<=l_{i+1}$\u4e14$r_{i}<=r_{i+1}$\u3002\n   \n2. \u89e3\u6ee1\u8db3\u8fd9\u6837\u4e00\u7ec4\u6027\u8d28\uff1a\n\n\ta.\u89e3\u5b58\u5728\u5355\u8c03\u6027\u3002\n    \n    b.\u5728\u89e3\u96c6$A$\u4e2d\uff0c\u5bf9\u4e8e$\u2200x\u2208A$\uff0c\u5b83\u7684\u6c42\u89e3\u4e0d\u9700\u8981\u7528\u5230$\u2200y\u2208A\u222ay|y_{id}>x_{id}$\n\n\u6ee1\u8db3\u4e0a\u9762\u4e24\u7ec4\u7279\u5f81\u7684\u95ee\u9898\uff0c\u901a\u5e38\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u6c42\u89e3\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e00\u9898\uff0c\u7531\u4e8e\u5b83\u6c42\u7684\u662f\u6700\u503c\uff0c\u6240\u4ee5\u89e3\u663e\u7136\u6027\u8d28$2.a$\uff1b\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\u7684\u56de\u7b54\uff0c\u90fd\u53ea\u9700\u8981\u7528\u5230\u8be5\u8be2\u95ee\u6216\u5b83\u4e4b\u524d\u5df2\u6709\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u6ee1\u8db3\u6027\u8d28$2.b$\u800c\u5b83\u6240\u6c42\u7684\u300c\u7a97\u53e3\u300d\uff0c\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u4e2a\u5bbd\u5ea6\u4e3a$k$\u7684\u533a\u95f4$[i-k,i]$\uff0c\u6ee1\u8db3\u6027\u8d28$1$\u3002\u6545\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u6c42\u89e3\u3002\n\n------------\n\n\u6240\u8c13\u5355\u8c03\u961f\u5217\uff0c\u662f\u961f\u5217\u7684\u5b50\u96c6\uff0c\u662f\u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\u7684\u961f\u5217\uff1a\n\n1. \u961f\u5217\u5177\u6709\u5355\u8c03\u9012\u589e/\u9012\u51cf\u6027\u3002\n2. \u524d\u4e00\u4e2a\u5143\u7d20\u6c38\u8fdc\u6bd4\u540e\u4e00\u4e2a\u5143\u7d20\u5148\u8fdb\u961f\u3002\n\n\u800c\u4e3a\u4e86\u7ef4\u62a4\u8fd9\u79cd\u6027\u8d28\uff0c\u5728\u6bcf\u4e00\u6b21\u5c06\u65b0\u7684\u5143\u7d20$i$\u63d2\u5165\u961f\u5217\u65f6\uff0c\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n1. \u6bd4\u5bf9\u5143\u7d20$i$\u4e0e\u961f\u5c3e\u5143\u7d20$j$\u3002\n2. \u82e5\u63d2\u5165$i$\u540e\u4f1a\u7834\u574f\u6027\u8d281\u5219\u5f39\u51fa$j$\u3002\n3. \u56de\u5230\u6b65\u9aa41\uff0c\u76f4\u5230\u6027\u8d281\u88ab\u4fdd\u6301\u6216\u961f\u5217\u4e3a\u7a7a\u3002\n\n\u8fd9\u6837\u5c31\u7ef4\u62a4\u4e86\u961f\u5217\u7684\u5355\u8c03\u6027\uff0c\u5e76\u4e14\u53ef\u4ee5\u67e5\u8be2\u5728\u533a\u95f4$[1,i]$\u4e4b\u95f4\u7684\u89e3\u3002\n\n\u7136\u540e\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u80fd\u591f\u6c42\u5f97$[i-k,i]$\u7684\u89e3\uff0c\u6211\u4eec\u9700\u8981\u5f39\u51fa\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u89e3\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u961f\u9996\u5143\u7d20\uff0c\u6211\u4eec\u90fd\u9700\u8981\u5c06\u5b83\u7684$id$\u4e0e$i-k$\u6bd4\u5bf9\uff0c\u6c42\u5f97\u5b83\u662f\u5426\u5728\u6240\u6c42\u533a\u95f4\u5185\u3002\n\n\u8fd9\u5c31\u505a\u5b8c\u4e86\u3002\n\n------------\n\n\u5355\u8c03\u961f\u5217\u7531\u4e8e\u5b83\u7684\u7279\u6b8a\u6027\uff0c\u9700\u8981\u4f7f\u7528\u53cc\u7aef\u961f\u5217\u6765\u6c42\u89e3\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u624b\u5199\u4e5f\u53ef\u4ee5\u8c03\u7528$STL-deque$\u5e93\u3002\u5177\u4f53\u9009\u62e9\u4ec0\u4e48\u8fd8\u662f\u770b\u60c5\u51b5\u3002\u4e00\u822c\u6765\u8bf4\u624b\u5199\u4f1a\u5feb\u4e00\u70b9\uff08\u7b11\uff09\n\n\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<deque>\nusing namespace std;\nstruct data{\n\tint nm;\n\tint id;\n};\n\nint mx[1000005],mn[1000005],n,k;//\u6ce8\u610f\u6570\u636e\u8303\u56f4 \n\ndeque<data> xq;\ndeque<data> nq;\n\nvoid init(){\n\tscanf(\"%d%d\",&n,&k);\n\tint ni;\n\tdata nw;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&ni);\n\t\tnw.nm=ni;\n\t\tnw.id=i;\n\t\twhile((!xq.empty())&&xq.back().nm<=ni){\n\t\t\txq.pop_back();\n\t\t}\n\t\txq.push_back(nw);\n\t\twhile((!nq.empty())&&nq.back().nm>=ni){\n\t\t\tnq.pop_back();\n\t\t}\n\t\tnq.push_back(nw);\n\t\twhile((!xq.empty())&&xq.front().id<=i-k){\n\t\t\txq.pop_front();\n\t\t}\n\t\twhile((!nq.empty())&&nq.front().id<=i-k){\n\t\t\tnq.pop_front();\n\t\t}\n\t\tif(i>=k){\n\t\t\tmx[i-k]=xq.front().nm;\n\t\t\tmn[i-k]=nq.front().nm;\n\t\t}\n\t}\n\tfor(int i=0;i<=n-k;i++){\n\t\tprintf(\"%d \",mn[i]);\n\t}\n\tprintf(\"\\n\");\n\tfor(int i=0;i<=n-k;i++){\n\t\tprintf(\"%d \",mx[i]);\n\t}\n}\n\nint main(){\n\tinit();\n\treturn 0;\n}\n```",
        "postTime": 1530060945,
        "uid": 97512,
        "name": "Smokey_Days",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u533a\u95f4\u67e5\u8be2\n\n1\u3001\u9a6c\u4e0a\u60f3\u5230\u4e86\u5355\u8c03\u961f\u5217\u7684\u601d\u8def\uff1b\n\n2\u3001\u6700\u8fd1\u5728\u78d5\u7ebf\u6bb5\u6811\uff0c\u53cd\u6b63\u624b\u901f\u5feb\uff0c\u5148\u8dd1\u4e00\u904d\u7ebf\u6bb5\u6811\u3002\n\n\n\u5148\u5199\u7ebf\u6bb5\u6811\u7684\u767d\u75f4\u601d\u8def1\uff1a\n\n1\u3001\u5efa\u7a7a\u6811\u7684\u65f6\u5019\uff0c\u5728\u53f6\u5b50\u7684\u65f6\u5019\u987a\u4fbf\u8bfb\u521d\u59cb\u503c\uff08\u7701\u6389\u63d2\u521d\u59cb\u503c\u7684\u51fd\u6570\u548c\u8fd0\u7b97\u65f6\u95f4\uff09\uff0c\u5efa\u597d\u5c31\u5df2\u7ecf\u4e0d\u662f\u7a7a\u6811\u4e86\u3002\n\n2\u3001\u76f4\u63a5\u5199\u67e5\u8be2\u6700\u5927\u503c\u51fd\u6570\uff0c\u7136\u540e\u590d\u5236\u4e00\u4efd\uff0c\u6539\u6210\u6700\u5c0f\u503c\u3002\n\n3\u3001\u8f93\u51fa\u3002\n\n\n\u7ed3\u679c:50\u5206\uff0c\u56e7\u3002\n\n\u81ea\u5df1\u5206\u6790\uff1a\u611f\u89c9\u5206\u5927\u5c0f\u503c\uff0c\u67e5\u4e24\u904d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7ffb\u500d\u4e86\u3002\n\n\n\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193=\u8fd8\u6709\u8fd9\u79cd\u64cd\u4f5c=\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\n\n\u679c\u65ad\u53bb\u7ffb\u9898\u89e3\uff1a\u6709\u5927\u795e\u8bf4\u53ea\u9700\u8981\u67e5\u4e00\u6b21\uff0c\u6bcf\u6b21\u67e5\u7684\u65f6\u5019\u540c\u65f6\u8fd4\u56de\u6700\u5927\u548c\u6700\u5c0f\u503c\uff01\uff01\n\n\u2191\u2191\u2191\u2191\u2191\u2191\u2191\u2191\u2191=\u8fd8\u6709\u8fd9\u79cd\u64cd\u4f5c=\u2191\u2191\u2191\u2191\u2191\u2191\u2191\u2191\u2191\n\n\n\u673a\u667a\u7684\u6211\uff0c\u60f3\u5230\u4e86\u8fd4\u56de\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5b8c\u7f8e\u3002\n\n\u7ed3\u679c\uff1a80\u5206\uff0ct\u6700\u540e2\u4e2a\u70b9\u3002\n\n\n\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193=\u8fd8\u6709\u8fd9\u79cd\u64cd\u4f5c=\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\n\n\u56de\u53bb\u8ba4\u771f\u518d\u770b\u4e86\u4e00\u6b21\u5927\u795e\u7684\u5206\u6790\uff0c\u539f\u6765\u8fc7\u7a0b\u5148\u8f93\u51fa\u6700\u5c0f\u503c\uff0c\u6700\u540e\u5355\u72ec\u8f93\u51fa\u6700\u5927\u503c\u3002\u53c8\u7701\u6389\u4e00\u4e2a\u767e\u4e07\u7ea7\u522b\u7684\u5faa\u73af\u3002\n\n\u2191\u2191\u2191\u2191\u2191\u2191\u2191\u2191\u2191=\u8fd8\u6709\u8fd9\u79cd\u64cd\u4f5c=\u2191\u2191\u2191\u2191\u2191\u2191\u2191\u2191\u2191\n\n\n\u7136\u540e\u7ec8\u4e8e A \u4e86\uff0c\u4e00\u4f1a\u518d\u5237\u4e00\u6b21\u5355\u8c03\u961f\u5217\uff0c\u73b0\u5728\u5148\u4e0a\u7ebf\u6bb5\u6811\u7684\u767d\u75f4\u4ee3\u7801\u3002\n\n\n    \n    \n    \n        \n        \n        \n        \n    \n    \n\n```cpp\n    #include<cstdio>\n    struct nod{int l,r,s1,s2,a,b;nod(){a=-999999999,b=999999999;}}a[2000010];\n    int n,k,len=0;\n    struct nod2{int a,b;}b[2000010];//\u5b58\u7b54\u6848\u7684\u7ed3\u6784\u4f53 \n    int minn(int x,int y) { return x<y?x:y; }\n    int maxx(int x,int y) { return x>y?x:y; }\n    void br(int l,int r)\n    {\n        len++; int x=len; a[x].l=l; a[x].r=r;\n        if(l==r) { scanf(\"%d\",&a[x].a); a[x].b=a[x].a; return;} //\u5230\u53f6\u5b50\u4e86\uff0c\u8bfb\u6570\u636e \n        if(l<r)\n        {\n            int m=(l+r)/2;\n            a[x].s1=len+1; br(l,m);\n            a[x].s2=len+1; br(m+1,r);\n        }\n        a[x].a=maxx(a[a[x].s1].a,a[a[x].s2].a);//a \u6700\u5927\u503c \n        a[x].b=minn(a[a[x].s1].b,a[a[x].s2].b);//b \u6700\u5c0f\u503c \n    }\n    nod2 cha(int x,int l,int r)\n    {\n        nod2 p; int ma=-999999999,mi=999999999;\n        //p\u4f5c\u4e3a\u7f13\u5b58\u7ed3\u6784\u4f53\uff0c ma \u5b58\u4e34\u65f6\u6700\u5927\u503c\uff0cmi\u5b58\u4e34\u65f6\u6700\u5c0f\u503c \n        if(a[x].l==l&&a[x].r==r) { p.a=a[x].a; p.b=a[x].b; return p;}\n        int m=(a[x].l+a[x].r)/2,s1=a[x].s1,s2=a[x].s2;\n        if(r<=m) return cha(s1,l,r);\n        else if(l>m) return cha(s2,l,r);\n        else \n        {    p=cha(s1,l,m); ma=maxx(ma,p.a);mi=minn(mi,p.b);\n            p=cha(s2,m+1,r); ma=maxx(ma,p.a);mi=minn(mi,p.b);\n            p.a=ma; p.b=mi; return p;\n        }\n    }\n    int main()\n    {\n        scanf(\"%d %d\",&n,&k);\n        br(1,n);\n        for(int i=1;i<=n-k+1;i++)\n        {\n            int j=i+k-1;\n            b[i]=cha(1,i,j);\n            printf(\"%d \",b[i].b);//\u7b2c\u4e00\u884c\u8f93\u51fa\u653e\u5728\u8fd9\u91cc\uff0c\u7701\u6389\u4e00\u6b21\u767e\u4e07\u7ea7\u7684\u5faa\u73af\uff0c\u62ff\u4e0b\u6700\u540e2\u4e2a\u70b9 \n        }\n        printf(\"\\n\");\n        for(int i=1;i<=n-k+1;i++) printf(\"%d \",b[i].a); \n        return 0;\n    }\n```\n\u4e0b\u9762\u662f\u7528\u4e24\u4e2a\u5355\u8c03\u961f\u5217\u6765\u5b8c\u6210\u7684\u4ee3\u7801\uff1a\n    \n    \n    \n        \n        \n    \n    \n    \n        \n            \n    \n    \n        \n        \n        \n            \n        \n        \n```cpp\n    #include<cstdio>\n    #include<cstring>\n    int n,l,la=0,lb=0;\n    int a[1000010],an[1000010],bn[1000010];\n    struct nod{int x,i;} ;\n    nod da[1000010];//\u4e0b\u964d\u961f\u5217\uff0c\u5934\u6700\u5927 \uff1a\u89e3\u51b3\u6700\u5927\u503c \n    int t1=1,w1=1;//\u961f\u5217\u7684\u5934\u5c3e\u6807\u7b7e \n    void pp1(int l,int x)//\u6700\u5927\u503c \n    {    \n        //\u8fdb\u961f\u5217 \n        while(w1>=t1&&a[x]>da[w1].x) w1--;//\u627e\u5230\u63d2\u5165\u7684\u4f4d\u7f6e \n        w1++;//\u63d2\u5165\n        da[w1].x=a[x]; \n        da[w1].i=x;\n        //\u51fa\u961f\u5217\uff08\u533a\u95f4\u4e4b\u524d\u4f4d\u7f6e\u7684\u6570\uff09 \n        while(t1<=w1 &&da[t1].i<l) t1++; \n    }\n    //==========================================================\n    nod db[1000010];//\u4e0a\u5347\u961f\u5217\uff0c\u5934\u6700\u5c0f\uff1a\u89e3\u51b3\u6700\u5c0f\u503c \n    int t2=1,w2=1;// \u5934\u5c3e\u6807\u7b7e \n    void pp2(int l,int x)//\u6700\u5c0f\u503c \n    {    \n        //\u8fdb\u961f\u5217 \n        while(w2>=t2&&a[x]<db[w2].x) w2--;//\u627e\u5230\u63d2\u5165\u7684\u4f4d\u7f6e \n        w2++;//\u63d2\u5165  \n        db[w2].x=a[x]; \n        db[w2].i=x;\n        //\u51fa\u961f\u5217\uff08\u533a\u95f4\u4e4b\u524d\u4f4d\u7f6e\u7684\u6570\uff09 \n        while(t2<=w2 &&db[t2].i<l) t2++; \n    }\n    int main()\n    {\n        scanf(\"%d %d\",&n,&l);\n        for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n        da[1].x=-999999999;\n        db[1].x= 999999999;\n        for(int i=1;i<=l;i++)// \u7b2c\u4e00\u4e2a\u533a\u95f4 \n        {    \n            pp1(1,i); \n            pp2(1,i);\n        }\n        an[++la]=da[t1].x;\n        bn[++lb]=db[t2].x;\n        printf(\"%d \",bn[lb]);\n        for(int i=2;i<=n-l+1;i++)//\u540e\u7eed\u7684\u533a\u95f4 \n        {\n            int j=i+l-1;\n            pp1(i,j); an[++la]=da[t1].x; \n            pp2(i,j); bn[++lb]=db[t2].x; printf(\"%d \",bn[lb]);\n        }\n        printf(\"\\n\");\n        for(int i=1;i<=la;i++) printf(\"%d \",an[i]);\n        return 0;\n    } \n\n```",
        "postTime": 1515034569,
        "uid": 30744,
        "name": "liusu201601",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "###### \u5355\u8c03\u961f\u5217\u4e00\u822c\u7528\u4e8e\u6c42\u89e3\u7c7b\u4f3c\u6ed1\u52a8\u7a97\u53e3\u7684\u9898\uff0c\u5373\u7ebf\u4e0b\u6c42\u89e3\u533a\u95f4\u6700\u5c0f\u503c\u3001\u6700\u5927\u503c\uff0c\u53ef\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u7f29\u5c0f\u81f3O(N)\uff0c\u4e00\u822c\u4f7f\u7528\u53cc\u7aef\u961f\u5217\u6765\u5b9e\u73b0\u3002\n\n###### \u672c\u9898\u89e3\u9898\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n1.\u5224\u65ad\u961f\u9996\u5143\u7d20\u662f\u5426\u8d85\u51fa\u8303\u56f4\uff0c\u5982\u679c\u662f\uff0c\u5219\u961f\u9996\u5143\u7d20\u51fa\u961f\uff1b\n\n2.\u5224\u65ad\u961f\u5c3e\u5143\u7d20\u662f\u5426\u6ee1\u8db3\u8981\u6c42\uff08\u4f8b\u5982\u6c42\u533a\u95f4\u6700\u5927\u503c\uff0c\u8981\u6c42\u5219\u4e3a\u961f\u5c3e\u5143\u7d20\u5c0f\u4e8e\u63d2\u5165\u7684\u5143\u7d20\uff09\uff0c\u5982\u679c\u662f\uff0c\u5219\u961f\u5c3e\u5143\u7d20\u51fa\u961f\uff0c\u8fd4\u56de\u6b65\u9aa42\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219\u8fdb\u5165\u4e0b\u4e00\u6b65\uff1b\n\n3.\u5c06\u5143\u7d20\u63d2\u5165\u961f\u5c3e\u3002\n\n\n------------\n\n###### \u4ee5\u4e0a\u6b65\u9aa4\u4e3a\u7684\u662f\u4fdd\u8bc1\u961f\u9996\u5143\u7d20\u59cb\u7ec8\u4e3a\u6ee1\u8db3\u8be5\u533a\u95f4\u8981\u6c42\u7684\u5143\u7d20\uff0c\u6bd4\u5982\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u52171 3 5 0 1 2\uff0c\u7a97\u53e3\u5927\u5c0f\u4e3a3\uff0c\u6c42\u89e3\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5219\u6a21\u62df\u5982\u4e0b\uff1a\u4ee5\u4e0a\u6b65\u9aa4\u4e3a\u7684\u662f\u4fdd\u8bc1\u961f\u9996\u5143\u7d20\u59cb\u7ec8\u4e3a\u6ee1\u8db3\u8be5\u533a\u95f4\u8981\u6c42\u7684\u5143\u7d20\uff0c\u6bd4\u5982\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u52171 3 5 0 1 2\uff0c\u7a97\u53e3\u5927\u5c0f\u4e3a3\uff0c\u6c42\u89e3\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5219\u6a21\u62df\u5982\u4e0b\uff1a\n\n1.\u7b2c\u4e00\u4e2a\u5143\u7d20\u5165\u961f[1]\n\n2.\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5165\u961f[1 3]\n\n3.\u7b2c\u4e09\u4e2a\u5143\u7d20\u5165\u961f[1 3 5]\n\n4.\u961f\u9996\u5143\u7d201\u8d85\u51fa\u7a97\u53e3\u8303\u56f4\uff0c\u51fa\u961f\uff0c\u6b64\u65f6\u53d1\u73b0\u8981\u5165\u961f\u7684\u5143\u7d200\u6bd4\u961f\u5c3e\u5143\u7d205\u5c0f\uff0c\u800c\u7a97\u53e3\u5411\u53f3\u6ed1\u52a8\uff0c\u6240\u4ee5\u4e0b\u9762\u5305\u542b\u7684\u6700\u5c0f\u503c\u4e00\u5b9a\u4e0d\u662f5\uff0c\u6240\u4ee55\u51fa\u961f\uff1b\u6b64\u65f6\u53d1\u73b0\u8981\u5165\u961f\u7684\u5143\u7d200\u6bd4\u961f\u5c3e\u5143\u7d203\u5c0f\uff0c\u6240\u4ee53\u51fa\u961f\uff0c\u961f\u5217\u4e3a\u7a7a\uff0c0\u5165\u961f[0]\n\n5.\u4e0b\u9762\u4f9d\u6b21\u7c7b\u63a8\n\n\n------------\n\n\u53ef\u4ee5\u53d1\u73b0\u961f\u9996\u5143\u7d20\u6c38\u8fdc\u4fdd\u8bc1\u4e3a\u8be5\u533a\u95f4\u4e0b\u7684\u6700\u5c0f\u503c\uff0c\u6bcf\u6b21\u79fb\u52a8\u7a97\u53e3\u5e76\u8fdb\u884c\u4e86\u5165\u961f\u64cd\u4f5c\u540e\u53d6\u51fa\u961f\u9996\u5143\u7d20\u5c31\u662f\u6240\u8981\u6c42\u89e3\u7684\u503c\u3002\n\n\u4e0b\u9762\u662fC++\u7528deque\u5b9e\u73b0\u7684\u4ee3\u7801\uff0c\u53e6\u4e00\u4efd\u624b\u6253\u53cc\u7aef\u961f\u5217\u5b9e\u73b0\u7684\u4ee3\u7801\u5728\u535a\u5ba2...\u6709\u70b9\u957f\u5c31\u4e0d\u5728\u8fd9\u91cc\u653e\u51fa\u6765\u4e86...\u849f\u84bb\u4e00\u53ea...\u5927\u4f6c\u8f7b~~\u8bf7~~\u55b7\n\n    \n    \n    \n    \n    \n```cpp\n    #include<cstdio>\n    #include<cstdlib>\n    #include<cstring>\n    #include<iostream>\n    #include<algorithm>\n    #include<deque>\n    using namespace std;\n    const int MAXN = 1000000 + 5;\n    int data[MAXN], n, k, front = 0;\n    struct Data\n    {\n        int num, pos;\n        Data(int num = 0, int pos = 0) : num(num), pos(pos){}\n    };\n    deque<Data> ans;\n    int main()\n    {\n        //freopen(\"P1886.in\", \"r\", stdin);\n        //freopen(\"P1886.out\", \"w\", stdout);\n        scanf(\"%d%d\", &n, &k);\n        for(int i = 0; i < n; ++i) scanf(\"%d\", &data[i]);\n        for(int i = 0; i < n; ++i)\n        {\n            Data m(data[i], i);\n            while(!ans.empty() && ans.back().num > data[i]) ans.pop_back();\n            ans.push_back(m);\n            if(i >= k - 1)\n            {\n                if(ans.front().pos <= i - k) ans.pop_front();\n                printf(\"%d \", ans.front().num);\n            }\n        }\n        printf(\"\\n\");\n        while(!ans.empty()) ans.pop_back();\n        for(int i = 0; i < n; ++i)\n        {\n            Data m(data[i], i);\n            while(!ans.empty() && ans.back().num < data[i]) ans.pop_back();\n            ans.push_back(m);\n            if(i >= k - 1)\n            {\n                if(ans.front().pos <= i - k) ans.pop_front();\n                printf(\"%d \", ans.front().num);\n            }\n        }\n        printf(\"\\n\");\n        return 0;\n    }\n```\n\u624b\u6253\u53cc\u7aef\u961f\u5217\u4ee3\u7801\u5982\u4e0b\uff1a\n    \n    \n    \n    \n```cpp\n    #include<cstdio>\n    #include<cstdlib>\n    #include<cstring>\n    #include<iostream>\n    #include<algorithm>\n    using namespace std;\n    const int MAXN = 1000000 + 5;\n    int data[MAXN], n, k, front = 0;\n    struct queuee\n    {\n        int val[MAXN], pos[MAXN];\n        int front, back;\n        bool empty;\n        queuee()\n        {\n            memset(this->val, 0, sizeof(this->val));\n            memset(this->pos, 0, sizeof(this->pos));\n            this->front = 0;\n            this->back = -1;\n            this->empty = true;\n        }\n        void pop_front()\n        {\n            if(!this->empty) ++this->front;\n            if(this->back < this->front) this->empty = true;\n        }\n        void pop_back()\n        {\n            if(!this->empty) --this->back;\n            if(this->back < this->front) this->empty = true;\n        }\n        void push(int i, bool flag)\n        {\n            while(!this->empty)\n            {\n                if(flag)\n                    if(data[i] > this->val[this->back]) this->pop_back();\n                    else\n                    {\n                        this->val[++this->back] = data[i];\n                        this->pos[this->back] = i;\n                        this->empty = false;\n                        break;\n                    }\n                else\n                    if(data[i] < this->val[this->back]) this->pop_back();\n                    else\n                    {\n                        this->val[++this->back] = data[i];\n                        this->pos[this->back] = i;\n                        this->empty = false;\n                        break;\n                    }\n            }\n            if(this->empty || this->pos[this->back] != i)\n            {\n                this->val[++this->back] = data[i];\n                this->pos[this->back] = i;\n                this->empty = false;\n            }\n        }\n        int front_val()\n        {\n            return this->val[this->front];\n        }\n        int front_pos()\n        {\n            return this->pos[this->front];\n        }\n    }ansmax, ansmin;\n    int main()\n    {\n        //freopen(\"P1886.in\", \"r\", stdin);\n        //freopen(\"P1886.out\", \"w\", stdout);\n        scanf(\"%d%d\", &n, &k);\n        for(int i = 0; i < n; ++i) scanf(\"%d\", &data[i]);\n        for(int i = 0; i < n; ++i)\n        {\n            ansmax.push(i, false);\n            if(i >= k - 1)\n            {\n                if(ansmax.front_pos() <= i - k) ansmax.pop_front();\n                printf(\"%d \", ansmax.front_val());\n            }\n        }\n        printf(\"\\n\");\n        for(int i = 0; i < n; ++i)\n        {\n            ansmin.push(i, true);\n            if(i >= k - 1)\n            {\n                if(ansmin.front_pos() <= i - k) ansmin.pop_front();\n                printf(\"%d \", ansmin.front_val());\n            }\n        }\n        printf(\"\\n\");\n        return 0;\n}\n```",
        "postTime": 1513408613,
        "uid": 10337,
        "name": "ZPC2048",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "/\\*\n\u770b\u5230\u9898\u89e3\u90fd\u662f\u4ec0\u4e48\u5355\u8c03\u961f\u5217\u554a\uff0c\u7ebf\u6bb5\u6811\u554a\uff0c\n\n\u6211\u8868\u793a\u4ec0\u4e48\u9b3c\uff0c\u8fd9\u9898\u6211\u90fd\u6ca1\u7528\u4e0a\uff0c\u6211\u89c9\u5f97\u53ea\u662f\u6a21\u62df\uff0c\u81f3\u5c11\u6211\u662f\u8fd9\u4e48\u89c9\u5f97\u7684\uff08\u6709\u53ef\u80fd\u6211\u5e76\u4e0d\u4f1a\u5206\u6790\u7b97\u6cd5\uff09\n\n\u6211\u4eec\u5148\u52a0\u5165k\u4e2a\u6570\uff0c\u6784\u6210\u7b2c\u4e00\u6b21\u7684\u7a97\u53e3\uff0c\u63a5\u4e0b\u6765\u6bcf\u6b21\u5f80\u540e\u79fb\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5c31\u8fdb\u6765\u4e00\u4e2a\u6570\uff0c\u51fa\u53bb\u4e00\u4e2a\u6570\u3002\n\n\u8fdb\u6765\u7684\u6570\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u4e00\u662f\u5b83\u80fd\u505a\u65b0\u7684\u6700\u5927\u503c\uff08\u6216\u6700\u5c0f\u503c\uff09\uff0c\u90a3\u5c31\u66f4\u65b0\uff1b\u4e8c\u662f\u90fd\u4e0d\u662f\uff0c\u6ca1\u5565\u7528\u5c31\u6401\u7740\u3002\n\n\u51fa\u53bb\u7684\u6570\u4e5f\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u4e00\u662f\u5b83\u662f\u539f\u6765\u7684\u6700\u5927\u503c\uff08\u6216\u6700\u5c0f\u503c\uff09\uff0c\u8fd9\u65f6\u5c31\u4ece\u65b0\u626b\u4e00\u4e0b\u6574\u4e2a\u7a97\u53e3\u91cc\u7684\u6570\uff0c\u66f4\u65b0\u4e00\u4e0b\u6700\u5927\u503c\uff08\u6216\u6700\u5c0f\u503c\uff09\uff1b\u4e8c\u4e5f\u662f\u90fd\u4e0d\u662f\uff0c\u5c31\u4e0d\u7ba1\u5b83\u3002\n\n\u6bcf\u6b21\u79fb\u52a8\u7a97\u53e3\u540e\u90fd\u628a\u7b54\u6848\u8bb0\u5230\u4e00\u4e2aans\u6570\u7ec4\u91cc\u6700\u540e\u8f93\u51fa\u5c31\u884c\u4e86\n\n\n\u6211\u4e5f\u6ca1\u60f3\u5230\u8fd9\u6837\u5c31A\u4e86\uff0c\u867d\u8bf4\u6bd4\u8f83\u6162:\u603b\u7528\u65f6 1000+ ms\n\n\\*/\n \n\n\n\n\n\n\n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#include<string>\n#include<queue>\n#include<map>\n#include<vector>\n#include<ctime>\n#define ll long long\n#define R register\n#define Rf(a,b,c) for(R int (a)=(b);(a)<=(c);++(a))\n#define Tf(a,b,c) for(R int (a)=(b);(a)>=(c);--(a))\n#define D double\nusing namespace std;\nconst int N=1e6+5,inf=1e9+7;//inf\u4f5c\u6781\u503c\uff0c\u7528\u6765\u4ece\u65b0\u627e\u6700\u5927\u503c\uff08\u6216\u6700\u5c0f\u503c\uff09 \nint a[N],maxn=-inf,minx=inf,k,n,ans1[N],cnt1,ans2[N],cnt2;\n//a\u6570\u7ec4\u8bb0\u6570\u5217\uff0cmaxn\u662f\u5f53\u524d\u7a97\u53e3\u6700\u5927\u503c\uff0cminx\u662f\u5f53\u524d\u7a97\u53e3\u6700\u5c0f\u503c\n//ans1\u8bb0\u5f55\u6bcf\u6b21\u7684\u6700\u5c0f\u503c\uff0cans2\u8bb0\u5f55\u6bcf\u6b21\u7684\u6700\u5927\u503c \ninline int read() {//\u8bfb\u5165\u53ca\u8f93\u51fa\u4f18\u5316 \n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x*=10;x+=(ch-'0');ch=getchar();}\n    return x*f;\n}\ninline void write(int x) {\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint main()\n{\n    n=read();k=read();\n    Rf(i,1,n) a[i]=read();\n    Rf(i,1,k) {//\u5148\u52a0\u5165\u7b2c\u4e00\u4e2a\u7a97\u53e3\u7684\u503c\uff0c\u5bfb\u627e\u6700\u5927\u3001\u6700\u5c0f\u503c \n        maxn=max(maxn,a[i]);\n        minx=min(minx,a[i]);\n    }\n    ans1[++cnt1]=minx;ans2[++cnt2]=maxn;//\u628a\u7edf\u8ba1\u51fa\u7684\u7b2c\u4e00\u4e2a\u7a97\u53e3\u7684\u7b54\u6848\u52a0\u8fdbans\u6570\u7ec4 \n    Rf(i,k+1,n) {//\u5f80\u540e\u4f9d\u6b21\u79fb\u52a8\u7a97\u53e3 \n        if(a[i]>maxn) maxn=a[i];//\u5982\u679c\u65b0\u52a0\u5165\u7684\u6570\u662f\u6700\u5927\u503c\uff0c\u66f4\u65b0\u6700\u5927\u503c\n        //\u8fd9\u91cc\u6bd4\u8f83\u7684\u6700\u5927\u503c\u542b\u8981\u51fa\u53bb\u7684\u6570\uff0c\u5982\u679c\u8fd9\u6837\u90fd\u66f4\u65b0\u4e86\uff0c\u51fa\u53bb\u7684\u6570\u5c31\u4e0d\u5f71\u54cd\u6700\u5927\u503c\u4e86 \n        else if(a[i-k]==maxn) {//\u5426\u5219\uff0c\u5982\u679c\u51fa\u53bb\u7684\u6570\u662f\u4e4b\u524d\u7684\u6700\u5927\u503c \n            maxn=-inf;//\u628amaxn\u8d4b\u6210\u6781\u5c0f\u503c \n            Rf(j,i-k+1,i) maxn=max(maxn,a[j]);//\u518d\u5728\u5f53\u524d\u7a97\u53e3\u4e2d\u5bfb\u627e\u6700\u5927\u503c\n            //\u5f53\u524d\u7a97\u53e3\u5c31\u662f\u5f53\u524d\u65b0\u52a0\u7684\u6570\u5411\u524d\u79fb\u52a8k\u4e2a\uff0c\u4e0d\u7528\u8bb0\u5f55\u5177\u4f53\u7684\u7a97\u53e3\n            //\u611f\u89c9\u5c31\u50cf\u662f\u6838\u7cd6\u4f53\u5728mRNA\u4e0a\u7684\u79fb\u52a8 \n        }\n        //\u6700\u5c0f\u503c\u7684\u5904\u7406\u540c\u6700\u5927\u503c \n        if(a[i]<minx) minx=a[i];\n        else if(a[i-k]==minx) {\n            minx=inf;\n            Rf(j,i-k+1,i) minx=min(minx,a[j]);\n        }\n        ans1[++cnt1]=minx;ans2[++cnt2]=maxn;//\u628a\u6bcf\u6b21\u7684\u7b54\u6848\u8bb0\u8fdbans\u6570\u7ec4 \n    }\n    //\u8f93\u51fa\u6700\u7ec8\u7ed3\u679c\uff08\u5e76\u6ca1\u6709\u7528\u5230\u8f93\u51fa\u4f18\u5316\uff09 \n    Rf(i,1,cnt1) printf(\"%d \",ans1[i]);\n    printf(\"\\n\");\n    Rf(i,1,cnt2) printf(\"%d \",ans2[i]);\n    return 0;\n}\n\n```",
        "postTime": 1506655456,
        "uid": 35700,
        "name": "Khassar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u4e00\u68f5\u9ad8\u80fd\u7ebf\u6bb5\u6811\uff0c\u5efa\u7acb\u4e24\u68f5\u6811\uff0c\u4e00\u68f5\u5b58\u5f53\u524d\u5b50\u6811\u4e2d\u7684\u6700\u5927\u503c\uff0c\u4e00\u9897\u5b58\u5f53\u524d\u5b50\u6811\u4e2d\u4e2a\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u539f\u56e0\uff0ck==1\u65f6\u6309\u539f\u6837\u8f93\u51fa\uff0c\u4e0d\u8dd1\u7ebf\u6bb5\u6811\u3002\n\n\n/\\*\u5199\u7684\u7ebf\u6bb5\u6811\uff0cTLE\u4e86\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u8ba8\u8bba\u91cc\u8bf4\u6b63\u89e3\u662f\u6a21\u62df\u3002\u3002\u3002\u8fd9\u9053\u9898\u7ebf\u6bb5\u6811\u5e76\u4e0d\u96be\u5199\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u539f\u56e0\u4f1aTLE\u3002\u540e\u6765\u52a0\u4e86\u4e2a\u7279\u5224\uff0c\u5f53k==1\u65f6\u6309\u539f\u6837\u8f93\u51fa\u5c31\u8fc7\u4e86\u3002 \\*/\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define N 1000005\nusing namespace std;\nint n,k,maxn,minn;\nint num[N],min_tree[N*4],max_tree[N*4];\nint max_ans[N],min_ans[N];\nvoid build(int root,int l,int r)\n{\n    if(l==r)    //\u627e\u53f6\u8282\u70b9\uff0c\u5bf9\u5e94\u539f\u6570\u7ec4 \n    {\n        max_tree[root]=num[l];        //\u5b58\u5f53\u524d\u5b50\u6811\u4e2d\u7684\u6700\u5927\u503c \n        min_tree[root]=num[l];        //\u5b58\u5f53\u524d\u5b50\u6811\u4e2d\u7684\u6700\u5c0f\u503c \n        return;\n    }\n    int mid=(l+r)>>1;\n    build(root<<1,l,mid);    //\u5efa\u5de6\u5b50\u6811 \n    build(root<<1|1,mid+1,r);    //\u5efa\u53f3\u5b50\u6811 \n    max_tree[root]=max(max_tree[root<<1],max_tree[root<<1|1]);    //\u6c42\u5f53\u524d\u5b50\u6811\u4e2d\u7684\u6700\u5927\u503c \n    min_tree[root]=min(min_tree[root<<1],min_tree[root<<1|1]);    //\u6c42\u6700\u5c0f\u503c \n}\nvoid query(int root,int l,int r,int L,int R)\n{\n    if(L<=l&&r<=R)        //\u67e5\u8be2\u533a\u95f4\u5305\u542b\u5f53\u524d\u533a\u95f4\uff0c\u76f4\u63a5\u8c03\u7528\u5f53\u524d\u533a\u95f4\u7684\u503c \n    {\n        maxn=max(maxn,max_tree[root]);    //\u6700\u5927\u7684 \n        minn=min(minn,min_tree[root]);    //\u6700\u5c0f\u7684 \n        return;\n    }\n    int mid=(l+r)>>1;\n    if(L<=mid) query(root<<1,l,mid,L,R);    //\u627e\u67e5\u8be2\u533a\u95f4\u5728\u7ebf\u6bb5\u6811\u4e2d\u7684\u8303\u56f4 \n    if(mid<R) query(root<<1|1,mid+1,r,L,R);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&num[i]);\n    }\n    if(k==1)    //k==1\u65f6\u6309\u539f\u6837\u8f93\u51fa \n    {\n        for(int i=1;i<=n;i++)\n        {\n            printf(\"%d \",num[i]);\n        }\n        printf(\"\\n\");\n        for(int i=1;i<=n;i++)\n        {\n            printf(\"%d \",num[i]);\n        }\n        return 0;\n    }\n    build(1,1,n);        //\u5efa\u6811 \n    for(int i=1;i<=n-k+1;i++)        //\u627e\u7a97\u53e3\u4e2d\u80fd\u770b\u5230\u7684\u6700\u5927\u6700\u5c0f\u503c \n    {\n        maxn=-999999999,minn=999999999;        //\u521d\u59cb\u5316 \n        query(1,1,n,i,i+k-1);\n        max_ans[i]=maxn;        // \n        min_ans[i]=minn;\n    }\n    for(int i=1;i<=n-k+1;i++)\n    {\n        printf(\"%d \",min_ans[i]);\n    }\n    printf(\"\\n\");\n    for(int i=1;i<=n-k+1;i++)\n    {\n        printf(\"%d \",max_ans[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1500643434,
        "uid": 39886,
        "name": "Drifterming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u770b\u4e86\u697c\u4e0a\u5f88\u591a\u5927\u795e\u7684\u961f\u5217\u601d\u8def\uff0c\u4f46\u6ca1\u6709\u5b9e\u9645\u7684\u7528\u961f\u5217\u7684c++\u7684\u4ee3\u7801\uff0c\u6240\u4ee5\u6211\u6765\u63d0\u4f9b\u4e00\u4efdc++\u4ee3\u7801\u6765\u53c2\u8003\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,k,head,tail,a[1000001],mi[1000001],ma[1000001];//mi[ ]\u7528\u6765\u4fdd\u5b58\u6700\u5c0f\u503c\uff0cma[ ]\u7528\u6765\u4fdd\u5b58\u6700\u5927\u503c\uff1b\nint main()\n{\n    cin>>n>>k;\n    for(int i=1; i<=n; i++)\n        scanf(\"%d\",&a[i]);\n    for(int i=1; i<=n; i++)\n    {\n        if(head==tail)\n            mi[tail++]=a[i];//\u521d\u59cb\u72b6\u6001\u5c06\u7b2c\u4e00\u4e2a\u503c\u52a0\u5165\u961f\u5217\uff1b\n        else if(mi[tail-1]<a[i])\n            mi[tail++]=a[i];//\u56e0\u4e3a\u662f\u9012\u589e\u961f\u5217\uff0c\u6240\u4ee5a[i]>\u961f\u5c3e\u5c31\u5c06a[i]\u52a0\u5165\u961f\u5217\uff1b\n        else if(mi[tail-1]>a[i])//\u5426\u5219\u5224\u65ad\u5982\u4f55\u5c06\u961f\u5217\u4e2d\u5c0f\u4e8ea[i]\u7684\u6570\u8e22\u51fa\u961f\u5217\uff1b\n        {\n            if(a[i]<mi[head])\n                head=tail=0;//\u56e0\u4e3a\u662f\u9012\u589e\u961f\u5217\uff0c\u6240\u4ee5\u5f53a[i]\u5c0f\u4e8e\u961f\u5217\u4e2d\u6700\u5c0f\u6570\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u961f\u5217\u6e05\u7a7a\uff0c\u5e76\u5728\u540e\u9762\u653e\u5165a[i]\uff1b\n            else\n                while(mi[tail-1]>a[i])\n                    tail--;//\u5982\u679ca[i]\u6ca1\u6709\u5c0f\u4e8e\u961f\u5217\u4e2d\u6700\u5c0f\u7684\u6570\uff0c\u90a3\u5c31\u4ece\u961f\u5c3e\u4e00\u4e2a\u4e00\u4e2a\u548ca[i]\u6bd4\u8f83\uff0c\u77e5\u9053a[i]\u5927\u4e8e\u67d0\u4e2a\u6570\u4e3a\u6b62\uff1b\n            mi[tail++]=a[i];//\u5c06a[i]\u653e\u5165\u961f\u5217\u4e2d\uff1b\n        }\n        if(mi[head]==a[i-k]&&i>k)\n            head++;//\u5c06\u961f\u9996\u5373\u5f53\u524d\u6700\u5c0f\u503c\u548c\u524dk\u4e2aa[i]\u6bd4\u8f83\uff0c\u82e5\u76f8\u540c\uff0c\u5373\u5bf9\u624b\u9700\u8981\u51fa\u961f\u5217\uff1b\n        if(i>=k&&i!=n)\n            printf(\"%d \",mi[head]);\n        if(i==n)\n            cout<<mi[head];//\u4e00\u7cfb\u5217\u8f93\u51fa\u8bed\u53e5\uff1b\n    }\n    cout<<endl;\n    head=0;\n    tail=0;//\u961f\u9996\u961f\u5c3e\u8bb0\u5f97\u6e05\u7a7a\uff0c\u63a5\u4e0b\u6765\u7684\u6700\u5927\u503c\u548c\u6c42\u6700\u5c0f\u503c\u4e00\u6837\uff1b\n    for(int i=1; i<=n; i++)\n    {\n        if(head==tail)\n        {\n            ma[tail++]=a[i];\n            under[a[i]]=i;\n        }\n        else if(ma[tail-1]>a[i])\n        {\n            ma[tail++]=a[i];\n            under[a[i]]=i;\n        }\n        else if(ma[tail-1]<a[i])\n        {\n            if(a[i]>ma[head])\n                head=tail=0;\n            else\n                while(ma[tail-1]<a[i])\n                    tail--;\n            ma[tail++]=a[i];\n            under[tail-1]=i;\n        }\n        if(ma[head]==a[i-k]&&i>k)\n            head++;\n        if(i>=k&&i!=n)\n            printf(\"%d \",ma[head]);\n        if(i==n)\n            cout<<ma[head];\n    }\n    return 0;\n}\n```",
        "postTime": 1484661633,
        "uid": 23236,
        "name": "Luminous",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u4f18\u5148\u961f\u5217\n\n\u4ee5\u6700\u5c0f\u503c\u4e3a\u4f8b\uff0c\u5f53\u540e\u9762\u7684\u6570\u6bd4\u524d\u9762\u7684\u6570\u8fd8\u8981\u5c0f\u65f6\uff0c\n\n\u524d\u9762\u7684\u6570\u4e5f\u5c31\u5931\u53bb\u5b58\u5728\u4ef7\u503c\u4e86\uff0c\u6240\u4ee5\u53ca\u4e3a\u5355\u8c03\u4e0a\u5347\u5e8f\u5217\u3002\n\n\u4ee3\u7801\u611f\u89c9\u7b80\u5355\u4e9b\u3002\n\n\n\n\n\n```cpp\nvar n,k,h,t,i:longint;\n    b,a,f:array[0..1000000] of int64;\nbegin\nreadln(n,k);\nfor i:=1 to n do\nread(a[i]);\nif k=1 then\nbegin\nfor i:=1 to n do  write(a[i],' ');\nwriteln;\nfor i:=1 to n do  write(a[i],' ');\nexit;\nend;\nh:=1;t:=1;\nb[1]:=1;\n for i:=2 to n do\n begin\n  while (t>=h) and  (a[i]<=a[b[t]])do dec(t);\n  inc(t);b[t]:=i;\n   while b[h]<i-k+1 do inc(h);\n   f[i]:=a[b[h]];//\u8981\u5728\u7a97\u53e3\u8303\u56f4\u5185\n  end;\nfor i:=k to n do\n write(f[i],' ');\n writeln;//\u6700\u5c0f\n fillchar(b,sizeof(b),0);\n h:=1;t:=1;\n b[1]:=1;\n for i:=2 to n do\n begin\n  while (t>=h) and  (a[i]>=a[b[t]])do dec(t);\n  inc(t);b[t]:=i;\n   while b[h]<i-k+1 do inc(h);\n   f[i]:=a[b[h]];\n  end;\nfor i:=k to n do\n write(f[i],' ');//\u6700\u5927\nend.\n\n```",
        "postTime": 1478698845,
        "uid": 8524,
        "name": "\u54b8\u86cb\u8d85\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "### \u6b64\u9898\u4e3a\u5355\u8c03\u961f\u5217\u6a21\u677f\u9898\n# \u6211\u504f\u4e0d\u7528\u5355\u8c03\u961f\u5217\n## \u6211\u7528ST\u8868\n~~\u4e8e\u662f\u82b1\u4e94\u5206\u949f\u6253\u4e86\u4e2aST\u8868~~\n```c++\nconst int maxn = 1048576;\nconst int log_maxn = 20;\nint n,q,Log[maxn],Pow[log_maxn] = {1};\n\nclass ST\n{\n\tprivate:\n\t\tint data_min[log_maxn][maxn],data_max[log_maxn][maxn];\n\tpublic:\n\t\tvoid update(int pos,int val)\n\t\t{\n\t\t\tthis->data_max[0][pos] = this->data_min[0][pos] = val;\n\t\t}\n\t\tvoid build()\n\t\t{\n\n\t\t\tfor(int i = 1; i <= Log[n]; i++)\n\t\t\t\tfor(int j = 1; j + Pow[i] - 1 <= n; j++)\n\t\t\t\t{\n\t\t\t\t\tthis->data_min[i][j] = min(this->data_min[i - 1][j],this->data_min[i - 1][j + Pow[i - 1]]);\n\t\t\t\t\tthis->data_max[i][j] = max(this->data_max[i - 1][j],this->data_max[i - 1][j + Pow[i - 1]]);\n\t\t\t\t}\n\t\t}\n\t\tint search_min(int src_l,int src_r)\n\t\t{\n\t\t\tint src_len = src_r - src_l + 1;\n\t\t\treturn min(this->data_min[Log[src_len]][src_l],this->data_min[Log[src_len]][src_r - Pow[Log[src_len]] + 1]);\n\t\t}\n\t\tint search_max(int src_l,int src_r)\n\t\t{\n\t\t\tint src_len = src_r - src_l + 1;\n\t\t\treturn max(this->data_max[Log[src_len]][src_l],this->data_max[Log[src_len]][src_r - Pow[Log[src_len]] + 1]);\n\t\t}\n}A;\n```\n### \u7136\u540e\u7a81\u7136\u66b4\u6bd9\n![](https://cdn.luogu.com.cn/upload/image_hosting/64ygw59b.png)\n### \u6211\u7075\u673a\u4e00\u52a8\n```c++\n#pragma GCC target(\"avx,avx2\")\n#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4.1,sse4.2,avx,avx2,popcnt,tune=native\")\n#include <immintrin.h>\n#include <emmintrin.h>\n```\n### ~~\u987a\u4fbf\u5438\u4e86\u53e3\u6c27~~\n\n### \u8fd8\u662f\u66b4\u6bd9\n![](https://cdn.luogu.com.cn/upload/image_hosting/5izkh0yz.png)\n**\u7ecf\u8fc7\u8ba1\u7b97 \u4e00\u4e2a1048576*20\u7684\u6570\u7ec4\u9700\u8981 160MB \u7684\u7a7a\u95f4**\n\n### \u4e00\u770b\u9898\u76ee:\"~~\u6eda\u52a8~~\u6ed1\u52a8\u7a97\u53e3\"\n### \u9898\u4e2d\u67e5\u8be2\u7684\u533a\u95f4\u957f\u5ea6\u90fd\u662f\u56fa\u5b9a\u7684\n### \u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6eda\u52a8\u6570\u7ec4\n### 1048576$\\times$20->1048576$\\times$2\n### \u81f3\u4e8e\u4e3a\u4ec0\u4e48\u75281048576\n### ~~\u56e0\u4e3a\u4f18\u96c5~~\n### \u628aST\u8868\u6539\u6210\u6eda\u52a8\u6570\u7ec4\n\n```c++\n#include<cstdio>\n#include<iostream>\n\nusing namespace std;\n\nconst int maxn = 1048576;\nconst int log_maxn = 20;\nint n,q,Log[maxn],Pow[log_maxn] = {1};\nint nxt[2] = {1,0};\nint lst[2] = {1,0};\n\nclass ST\n{\n\tprivate:\n\t\tint data_min[2][maxn],data_max[2][maxn];\n\t\tint y_pos;\n\tpublic:\n\t\tvoid update(int pos,int val)\n\t\t{\n\t\t\tthis->data_max[0][pos] = this->data_min[0][pos] = val;\n\t\t}\n\t\tvoid build()\n\t\t{\n\t\t\tthis->y_pos = 1;\n\t\t\tfor(int i = 1; i <= Log[q]; i++)\n\t\t\t{\n\t\t\t\tfor(int j = 1; j + Pow[i] - 1 <= n; j++)\n\t\t\t\t{\n\t\t\t\t\tthis->data_min[this->y_pos][j] = min(this->data_min[lst[this->y_pos]][j],this->data_min[lst[this->y_pos]][j + Pow[i - 1]]);\n\t\t\t\t\tthis->data_max[this->y_pos][j] = max(this->data_max[lst[this->y_pos]][j],this->data_max[lst[this->y_pos]][j + Pow[i - 1]]);\n\t\t\t\t}\n\t\t\t\tthis->y_pos = nxt[this->y_pos];\n\t\t\t}\n\t\t}\n\t\tint search_min(int src_l,int src_r)\n\t\t{\n\t\t\treturn min(this->data_min[lst[this->y_pos]][src_l],this->data_min[lst[this->y_pos]][src_r - Pow[Log[q]] + 1]);\n\t\t}\n\t\tint search_max(int src_l,int src_r)\n\t\t{\n\t\t\treturn max(this->data_max[lst[this->y_pos]][src_l],this->data_max[lst[this->y_pos]][src_r - Pow[Log[q]] + 1]);\n\t\t}\n}A;\n```\n\n### \u5b8c\u7f8eAC\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/w6dlrscw.png)\n\n### \u9644\u4e0aAC\u4ee3\u7801\n```c++\n#include<cstdio>\n#include<iostream>\n\u3000\nusing\u3000namespace\u3000std;\t\t\u3000\t\t\t\n\u3000\nconst int maxn = 1048576;\nconst int log_maxn = 20;\nint n,q,Log[maxn],Pow[log_maxn] = {1};\n\u3000\u3000\u3000\u3000\nclass ST\t\t\t\u3000     \u3000    \u3000\u3000   //\u5b9a\u4e49ST\u8868\u7c7b \n{\u3000              \u3000\n\tprivate:\n\t\tint data_min[2][maxn],data_max[2][maxn];\n\t\tbool y_pos;\n\tpublic:\n\t\tvoid update(int pos,int val)\t\t//\u8bfb\u5165 \n\t\t{\n\t\t\tthis->data_max[0][pos] = this->data_min[0][pos] = val;\n\t\t}\n\t\tvoid build()\t\t\t\t\t\t//\u5efa\u8868 \u5de6\u53f3\u6a2a\u8df3 \n\t\t{\t\t\u3000\t\t\t\u3000\n\t\t\tthis->y_pos = 1;\n\t\t\tfor(int i = 1; i <= Log[q]; i++)\n\t\t\t{\n\t\t\t\tfor(int j = 1; j + Pow[i] - 1 <= n; j++)\n\t\t\t\t{\t\t\t\u3000\n\t\t\t\t\tthis->data_min[this->y_pos][j] = min(this->data_min[1 - this->y_pos][j],this->data_min[1 - this->y_pos][j + Pow[i - 1]]);\n\t\t\t\t\tthis->data_max[this->y_pos][j] = max(this->data_max[1 - this->y_pos][j],this->data_max[1 - this->y_pos][j + Pow[i - 1]]);\n\t\t\t\t}\t\u3000\t\t\t\n\t\t\t\tthis->y_pos =\u30001 - this->y_pos;\n\t\t\t}\t\t\t\t\t\t\u3000\n\t\t}\n\t\tint search_min(int src_l,int src_r)\t//\u67e5\u8be2\u6700\u5927\u503c \n\t\t{\n\t\t\treturn min(this->data_min[1 - this->y_pos][src_l],this->data_min[1 - this->y_pos][src_r - Pow[Log[q]] + 1]);\t\t\t\t\t\u3000\n\t\t}\t\t\t\u3000\t\t\t\t\t\n\t\tint search_max(int src_l,int src_r)\t//\u67e5\u8be2\u6700\u5c0f\u503c\n\t\t{\u3000\n\t\t\treturn max(this->data_max[1 - this->y_pos][src_l],this->data_max[1 - this->y_pos][src_r - Pow[Log[q]] + 1]);\u3000\n\t\t}\t\n}A;\u3000\t\t\n\u3000\u3000\u3000\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i = 2; i <= q; i++)\t\t\t\t//\u9884\u5904\u7406Log \u7528cmath\u7684log()\u4f1aT \n\t\tLog[i] = Log[i>>1] + 1;\n\tfor(int i = 1; i <= Log[q]; i++)\n\t\tPow[i] = Pow[i - 1]<<1;\n\tfor(int i = 1; i <= n; i++)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tA.update(i,x);\n\t\t}\n\tA.build();\n\tfor(int i = 1;i + q - 1 <= n;i++)\n\t\tprintf(\"%d \",A.search_min(i,i + q - 1));\n\tprintf(\"\\n\");\n\tfor(int i = 1;i + q - 1 <= n;i++)\n\t\tprintf(\"%d \",A.search_max(i,i + q - 1));\n\treturn 0;\n}\n```\n#### ~~\u4ee3\u7801\u4e2d\u542b\u6709\u5927\u91cf\u4e0d\u53ef\u89c1\u5b57\u7b26~~",
        "postTime": 1579312488,
        "uid": 207135,
        "name": "De_Zero",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3 /\u3010\u6a21\u677f\u3011\u5355\u8c03\u961f\u5217\u3011"
    },
    {
        "content": "\u697c\u4e0a\u5df2\u7ecf\u6709\u5f88\u591a\u62ff\u5355\u8c03\u961f\u5217\u5199\u7684\u4e86\n\n\u4e8e\u662f\u672c\u849f\u84bb\u732e\u4e0a\u4e00\u4efd\u7ebf\u6bb5\u6811\u5199\u6cd5\n\n\u5efa\u4e24\u6b21\u6811\uff0c\u4e00\u6b21\u5b58\u6700\u5c0f\u503c\uff0c\u4e00\u6b21\u5b58\u6700\u5927\u503c\n\n~~\u6700\u540e\u4e00\u4e2a\u70b9\u6781\u9650\u5361\u65f6\u9650980ms~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1000000;\ninline int Read()//\u5feb\u8bfb\n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nstruct Tree \n{\n\tint l,r,dat;\n\tTree() \n\t{\n\t\tl=r=0;\n\t\tdat=0;\n\t}\n}a[(N<<2)+10];\nint num[N+10];\nvoid Buildmin(int l,int r,int s)//\u5efa\u7acb\u5b58\u50a8\u6700\u5c0f\u503c\u7684\u7ebf\u6bb5\u6811\n{\n\ta[s].l=l;\n\ta[s].r=r;\n\tif(l==r)\n\t{\n\t\ta[s].dat=num[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tBuildmin(l,mid,s<<1);\n\tBuildmin(mid+1,r,s<<1|1);\n\ta[s].dat=min(a[s<<1].dat,a[s<<1|1].dat);\n}\nvoid Buildmax(int l,int r,int s)//\u5efa\u7acb\u5b58\u50a8\u6700\u5927\u503c\u7684\u7ebf\u6bb5\u6811\n{\n\ta[s].l=l;\n\ta[s].r=r;\n\tif(l==r)\n\t{\n\t\ta[s].dat=num[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tBuildmax(l,mid,s<<1);\n\tBuildmax(mid+1,r,s<<1|1);\n\ta[s].dat=max(a[s<<1].dat,a[s<<1|1].dat);\n}\nint querymax(int l,int r,int s)//\u67e5\u8be2\u533a\u95f4[l,r]\u6700\u5927\u503c\n{\n\tint ans=INT_MIN;\n\tif(a[s].l>=l&&a[s].r<=r) return a[s].dat;\n\tif(a[s<<1].r>=l) ans=max(ans,querymax(l,r,s<<1));\n\tif(a[s<<1|1].l<=r) ans=max(ans,querymax(l,r,s<<1|1));\n\treturn ans;\n}\nint querymin(int l,int r,int s)//\u67e5\u8be2\u533a\u95f4[l,r]\u6700\u5c0f\u503c\n{\n\tint ans=INT_MAX;\n\tif(a[s].l>=l&&a[s].r<=r) return a[s].dat;\n\tif(a[s<<1].r>=l) ans=min(ans,querymin(l,r,s<<1));\n\tif(a[s<<1|1].l<=r) ans=min(ans,querymin(l,r,s<<1|1));\n\treturn ans;\n}\nint main()\n{\n\tint n=Read(),k=Read();\n\tint from=1,to=1+k-1;//from:\u7a97\u53e3\u7684\u5de6\u7aef\u70b9 to:\u7a97\u53e3\u7684\u53f3\u7aef\u70b9\n\tfor(int i=1;i<=n;i++) num[i]=Read();\n\tBuildmin(1,n,1);//\u7b2c\u4e00\u6b21\u5efa\u6811\uff0c\u5b58\u6700\u5c0f\u503c\n\twhile(to<=n)\n\t{\n\t\tprintf(\"%d \",querymin(from,to,1));\n\t\tfrom++;\n\t\tto++;\n\t}\n\tputs(\"\");\n\tfrom=1,to=1+k-1;\n\tBuildmax(1,n,1);//\u7b2c\u4e8c\u6b21\u5efa\u6811\uff0c\u5b58\u6700\u5927\u503c\n\twhile(to<=n)\n\t{\n\t\tprintf(\"%d \",querymax(from,to,1));\n\t\tfrom++;\n\t\tto++;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1578313208,
        "uid": 125913,
        "name": "zztqwq",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3 /\u3010\u6a21\u677f\u3011\u5355\u8c03\u961f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898~~\u5f88\u660e\u663e~~\u662f**\u5355\u8c03\u961f\u5217**\n\n\u5177\u4f53\u600e\u4e48\u505a\u5927\u4f6c\u4eec\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\n\n### \u5b9a\u4e49\n\n1. \u5355\u8c03\u961f\u5217\u4e2d\u7684\u6570\u662f\u6ee1\u8db3\u5355\u8c03\u9012\u589e/\u9012\u51cf/\u6216\u8005\u81ea\u7f16\u3002\n\n2. \u548c\u4f18\u5148\u961f\u5217\u4e0d\u4e00\u6837\uff0c\u5355\u8c03\u961f\u5217\u4e2d\u7684\u6570\u7684\u4e0b\u6807\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\n\n\u76f4\u63a5\u653e\u7a0b\u5e8f\u5206\u6790(\u6700\u5c0f\u503c)\n\n```cpp\nfor(int i=1;i<=n;i++)\n{\n\twhile(head<=tail&&q[tail]>=a[i])  //\u6c42\u6700\u5c0f\u503c\u8981\u7528>=\u628a\u6bd4\u4ed6\u5927\u7684\u8e22\u51fa\u53bb\uff0c\u6700\u5927\u503c\u5c31\u662f<=\n\ttail--;\n\tq[++tail]=a[i]; \n\tp[tail]=i;\n\twhile(p[head]<=i-k) //\u4fdd\u6301\u961f\u5217\u5728\u67e5\u8be2\u8303\u56f4\u5185\n\thead++;\n\tif(i>=k)printf(\"%d \",q[head]);//\u8f93\u51fa\u6700\u503c\uff0c\u5373\u961f\u9996\u5143\u7d20\u3002i>=k\u8868\u793a\u5141\u8bb8\u8f93\u51fa\uff0c\u56e0\u4e3ak\u8868\u793a\u7a97\u53e3\u957f\u5ea6\uff0c\u539f\u6570\u7ec4\u4ece\u7b2ck\u4e2a\u6570\u5f00\u59cb\u8f93\u51fa\u7b54\u6848 \n}\n```\n\u8be6\u7ec6\u8fc7\u7a0b\u89c1[\u5927\u4f6c\u535a\u5ba2](https://www.luogu.org/blog/hankeke/solution-p1886)\n\n\u6211\u4e3b\u8981\u60f3\u8bb2\u4e00\u4e0b\u4f18\u5316 ~~\uff08\u4e5f\u4e0d\u7b97\u4ec0\u4e48\u4f18\u5316\u5427\uff09~~\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u6b21\u4ece\u5c3e\u90e8\u5165\u961f\u524d\u90fd\u4f1a\u6bd4\u8f83\u5927\u5c0f---->\u6ce8\u610f\u5bf9\u8c61\u662f\u961f\u5185\u5143\u7d20\uff0c\n\n\u4f46\u662f\u961f\u5185\u5143\u7d20\u90fd\u662f\u6309\u6b21\u5e8f\u5165\u961f\uff0c\n\n\u5373\u961f\u5185\u5143\u7d20\u90fd\u662f\u6bd4\u5f53\u524d\u8981\u5165\u961f\u7684\u6b21\u5e8f\u5c0f\uff0c\n\n\u6240\u4ee5\u5355\u8c03\u961f\u5217\u91cc\u7684\u5143\u7d20\u90fd\u662f\u6709\u6b21\u5e8f\u7684\uff08\u7531\u5c0f\u5230\u5927\uff09\u6240\u4ee5\uff0c\n\n\u6211\u4eec\u8981\u67e5\u627e\u67d0\u4e2aid\u7684\u65f6\u5019\uff0c\u4e5f\u53ef\u4ee5\u4e8c\u5206\u3002\n\n**\u4f18\u5316\u524d\uff1a**\n\n```cpp\n#include<cstdio> \n#include<string>\nusing namespace std;\n\nconst int maxn=1e6+5;\nint n,k;\nint q[maxn],p[maxn];\nint a[maxn];\n\nint read()\n{\n    int x=0,f=1;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n    while(isdigit(c)){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\n\nvoid readdata()\n{\n\tn=read(),k=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t}\n}\n\nvoid findmin()\n{\n\tint tail=0;\n\tint head=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(head<=tail&&q[tail]>=a[i])\n\t\ttail--;\n\t\tq[++tail]=a[i];\n\t\tp[tail]=i;\n\t\twhile(p[head]<=i-k)\n\t\thead++;\n\t\tif(i>=k)printf(\"%d \",q[head]);\n\t}\n}\n\nvoid findmax()\n{\n\tprintf(\"\\n\");\n\tint tail=0;\n\tint head=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(head<=tail&&q[tail]<=a[i])\n\t\ttail--;\n\t\tq[++tail]=a[i];\n\t\tp[tail]=i;\n\t\twhile(p[head]<=i-k)\n\t\thead++;\n\t\tif(i>=k)printf(\"%d \",q[head]);\n\t}\n}\n\nint main()\n{\n\treaddata();\n\tfindmin();\n\tfindmax();\n\treturn 0;\n}\n```\n**\u4f18\u5316\u540e**\n\n```cpp\n#include<cstdio> \n#include<string>\nusing namespace std;\n\nconst int maxn=1e6+5;\nint n,k;\nint q[maxn],p[maxn];\nint a[maxn];\n\nint read()\n{\n    int x=0,f=1;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n    while(isdigit(c)){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\n\nvoid readdata()\n{\n\tn=read(),k=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t}\n}\n\nvoid findmin()\n{\n\tint tail=0;\n\tint head=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint h=head,t=tail;\n\t\twhile(h<=t)\n\t\t{\n\t\t\tint mid=h+t>>1;\n\t\t\tif(q[mid]>=a[i]) t=mid-1;\n\t\t\telse h=mid+1;\n\t\t} \n\t\ttail=t;\n\t\tq[++tail]=a[i];\n\t\tp[tail]=i;\n\t\twhile(p[head]<=i-k)\n\t\thead++;\n\t\tif(i>=k)printf(\"%d \",q[head]);\n\t}\n}\n\nvoid findmax()\n{\n\tprintf(\"\\n\");\n\tint tail=0;\n\tint head=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint h=head,t=tail;\n\t\twhile(h<=t)\n\t\t{\n\t\t\tint mid=h+t>>1;\n\t\t\tif(q[mid]<=a[i]) t=mid-1;\n\t\t\telse h=mid+1;\n\t\t} \n\t\ttail=t;\n\t\tq[++tail]=a[i];\n\t\tp[tail]=i;\n\t\twhile(p[head]<=i-k)\n\t\thead++;\n\t\tif(i>=k)printf(\"%d \",q[head]);\n\t}\n}\n\nint main()\n{\n\treaddata();\n\tfindmin();\n\tfindmax();\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1572264435,
        "uid": 91720,
        "name": "Anonymous\u533f\u540d\u8005",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\n# \u672c\u9898\u89e3\u57fa\u672c\u4e0a\u662f\u7ebf\u6bb5\u6811\n\n\u9898\u76ee\u6807\u7b7e\u91cc\u6709\u7ebf\u6bb5\u6811\u7684\uff0c\u4f46\u770b\u5230\u5f88\u591a\u666e\u901a\u7684\u7ebf\u6bb5\u6811t\u4e86\u51e0\u4e2a\u70b9\u8fc7\u4e0d\u4e86\uff0c\u9898\u89e3\u91cc\u6709\u4e9b\u7ebf\u6bb5\u6811\u4e5f\u8017\u65f6\u5f88\u957f\u8fdc\u52a3\u4e8e\u5355\u8c03\u961f\u5217\n\n\u4e0d\u5c11\u90fd\u662f\u5bf9\u6240\u6709\u6570\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u4fee\u6539\u65b9\u5f0f\u4e5f\u4e0e\u6a21\u677f\u6ca1\u4ec0\u4e48\u5927\u5dee\u522b\uff0c\u4f46\u8fd9\u5e76\u4e0d\u5feb\uff0c\u6211\u60f3\u4e0d\u80fd\u7167\u642c\u6a21\u677f\uff0c\u5c31\u6362\u4e86\u66f4\u9002\u5408\u672c\u9898\u7684\u66f4\u65b0\u65b9\u5f0f\n\n\u6211\u4e5f\u662f\u5728\u62cd\u5b8c\u666e\u901a\u7ebf\u6bb5\u6811\u4e4b\u540e\u624d\u7a81\u53d1\u5947\u60f3\u53d1\u73b0\u4e86\u8fd9\u4e2a\u65b0\u64cd\u4f5c\u2014\u2014\u53ea\u5bf9\u7a97\u53e3\u5185\u6570\u5efa\u6811\u5e76\u76f4\u63a5\u5f7b\u5e95\u4fee\u6539\uff0c\u8fd9\u65f6\u95f4\u5c31\u77ed\u591a\u4e86\n\n\n\n~~\u628a\u7ebf\u6bb5\u6811\u538b\u5230\u6d1b\u8c37900ms\u601d\u8def\u60f3\u4e86\u597d\u4e00\u4f1a \u8fd9\u5927\u6982\u591f\u5feb\u4e86~~\n\n\n# \u601d\u8def\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u7a97\u53e3\u770b\u505a\u662f\u56fa\u5b9a\u7684\uff0c\u5176\u4e2d\u6709k\u4e2a\u6570\u3002\u63a5\u7740\u6709(n-k)\u6b21\u4fee\u6539\uff0c\u6bcf\u6b21\u6539\u4e00\u4e2a\u6570\uff1b\u6c42\u6700\u5927\u6700\u5c0f\u503c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u7a97\u53e3\u5185k\u4e2a\u6570\u5efa\u6811\u6c42\u6700\u5927\u6700\u5c0f\u503c\uff0c\u8fd9\u6837\u6811\u5c31\u5c0f\u4e9b\uff0c\u6811\u6839\u5c31\u662f\u7b54\u6848\uff1b\n\n\u7a97\u53e3\u6bcf\u79fb\u52a8\u4e00\u6b21\uff0c\u5c31\u66ff\u6362\u5176\u4e2d\u4e00\u4e2a\u6570\u5e76\u76f4\u63a5\u66f4\u65b0\u5230\u5e95\uff0c\u4fdd\u6301\u6811\u6839\u4e3a\u6700\u5927\u6700\u5c0f\u503c\uff1b\u6bcf\u6b21\u4fee\u6539\u8981\u6bd4\u8f83(log(k))\u6b21\uff0c\u5171\u4fee\u6539(n-k)\u6b21\uff1b\n\n(\u663e\u7136\u7a97\u53e3\u7b2ci\u6b21\u79fb\u52a8\u65f6\uff0c\u5c31\u7b49\u4ef7\u4e8e\u5c06\u6570\u7ec4\u7b2c((i-1)%k+1)\u4e2a\u6570\u66ff\u6362\u4e3a\u4e00\u65b0\u6570)\n\n\u7136\u540e\u9010\u4e00\u8f93\u51fa\u6811\u6839\u5c31\u597d\n\n## Code\n### \u6ca1\u6ce8\u91ca\u7248\u672c\n\n```cpp\n#include <cstdio>\nusing namespace std;\nconst int MAXN = 1000005;\n\nint a[MAXN],pes[MAXN],t1[2*MAXN]={-2147483647},t2[2*MAXN]={2147483647};\ninline bool scan_d(int &num){//\u5feb\u8bfb\n    char in; bool IsN=false; in = getchar();\n    if(in==EOF) return false;\n    while(in!='-' &&(in<'0'||in>'9')) in=getchar();\n    if(in=='-'){ IsN=true; num=0;} else num=in-'0';\n    while(in=getchar(),in>='0'&&in<='9'){ num*=10,num+=in-'0';}\n    if(IsN) num=-num; return true;\n}\ninline void build(int p, int l, int r){\n    if(l==r){ t1[p] = t2[p] = a[l], pes[l] = p; return;}\n    int mid = (l+r)>>1;\n    build(p<<1, l, mid); build(p<<1|1, mid+1, r);\n    t1[p] = t1[p<<1]<t1[p<<1|1] ? t1[p<<1]:t1[p<<1|1];\n    t2[p] = t2[p<<1]>t2[p<<1|1] ? t2[p<<1]:t2[p<<1|1];\n}\ninline void subtitu(int p, int z){\n    t1[p] = t2[p] = z;\n    int x, p2 = p;\n    do{\n        x = t1[p>>1];\n        t1[p>>1] = t1[p]<t1[p^1] ? t1[p]:t1[p^1];\n        p = p>>1;\n    }while(x != t1[p]);\n    do{\n        x = t2[p2>>1];\n        t2[p2>>1] = t2[p2]>t2[p2^1] ? t2[p2]:t2[p2^1];\n        p2 = p2>>1;\n    }while(x != t2[p2]);\n}\nint main(){\n//  freopen(\"l1886#0.in\", \"r\", stdin); freopen(\"l1886.out\", \"w\", stdout);\n    int n, k, sc;\n    scan_d(n);scan_d(k);  int val[n];\n    for(int i=1; i<=k; ++i) scan_d(a[i]);\n    build(1, 1, k);\n    for(int i=k,j=1; i<=n; ++i, j=i%k+1){\n        printf(\"%d \", t1[1]); val[i] = t2[1];\n        scan_d(sc); subtitu(pes[j], sc);\n    }\n    printf(\"\\n\");\n    for(int i=k; i<=n; ++i) printf(\"%d \", val[i]);\n    return 0;\n}\n```\n\n\n//\n\n### \u8be6\u7ec6\u6ce8\u91ca\u7248\u672c\n\n```cpp\n#include <cstdio>\nusing namespace std;\nconst int MAXN = 1000005;\n\nint a[MAXN],        /*\u8f93\u5165\u7684\u6570\u5217*/\n    pes[MAXN],      /*\u6570\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u4f4d\u7f6e*/\n    t1[2*MAXN]={-2147483647},   /*\u6c42\u6700\u5c0f\u503c\u7684\u6811*/\n    t2[2*MAXN]={2147483647};    /*\u6c42\u6700\u5927\u503c\u7684\u6811*/\n\ninline bool scan_d(int &num){//\u5feb\u8bfb\n    char in; bool IsN=false; in = getchar();\n    if(in==EOF) return false;\n    while(in!='-' &&(in<'0'||in>'9')) in=getchar();\n    if(in=='-'){ IsN=true; num=0;} else num=in-'0';\n    while(in=getchar(),in>='0'&&in<='9'){ num*=10,num+=in-'0';}\n    if(IsN) num=-num; return true;\n}\ninline void build(int p, int l, int r){ //\u5efa\u6811 //\u7ebf\u6bb5\u6811\u57fa\u672c\u4ee3\u7801\u4e0d\u518d\u8bb2\n    if(l==r){ t1[p] = t2[p] = a[l], pes[l] = p; return;}\n    //\u8bb0\u5f97\u628a\u6570\u7ec4\u4e2d\u7684\u6570\u5bf9\u5e94\u4e8e\u7ebf\u6bb5\u6811\u7684\u4f4d\u7f6e\u5b58\u597d(\u7b2cm\u4e2a\u6570\u5728pes[m]\u5904)\u4ee5\u8282\u7701\u4fee\u6539\u65f6\u95f4\n    int mid = (l+r)>>1;\n    build(p<<1, l, mid); build(p<<1|1, mid+1, r);\n    t1[p] = t1[p<<1]<t1[p<<1|1] ? t1[p<<1]:t1[p<<1|1];\n    t2[p] = t2[p<<1]>t2[p<<1|1] ? t2[p<<1]:t2[p<<1|1];\n}\ninline void subtitu(int p, int z){  /*\u5355\u70b9\u4fee\u6539*/\n    t1[p] = t2[p] = z;  //\u5148\u628a\u672c\u8eab\u6539\u4e86\n    int x, p2 = p;      //p\u5728\u4e24\u68f5\u6811\u91cc\u90fd\u8981\u7528 \u5148\u5b58\u597d\n    do{                 //\u66f4\u65b0\u6700\u5c0f\u503c\u6811\n        x = t1[p>>1];   //\u7236\u8282\u70b9\u539f\u503c\u5b58\u597d\n        t1[p>>1] = t1[p]<t1[p^1] ? t1[p]:t1[p^1];//\u66f4\u65b0\u7236\u8282\u70b9\n        p = p>>1;       //\u53cd\u590d\u5411\u4e0a\u66f4\u65b0\u7236\u8282\u70b9\n    }while(x != t1[p]); //\u82e5\u679c\u7236\u8282\u70b9\u6ca1\u53d8\u90a3\u4e48\u4ece\u6b64\u4e4b\u540e\u7684\u5404\u4e2a\u7956\u8282\u70b9\u90fd\u4e0d\u4f1a\u518d\u6709\u53d8\u5316\u4e86\n    do{                 //\u66f4\u65b0\u6700\u5927\u503c\u6811 //\u540c\u7406\u6284\u4e00\u904d\n        x = t2[p2>>1];\n        t2[p2>>1] = t2[p2]>t2[p2^1] ? t2[p2]:t2[p2^1];\n        p2 = p2>>1;\n    }while(x != t2[p2]);\n}\nint main(){\n//  freopen(\"l1886#0.in\", \"r\", stdin);\n//  freopen(\"l1886.out\", \"w\", stdout);\n    \n    int n, k, sc;       //\u4e07\u6076\u4e4b\u6e90\u7684\u6570\u636e\u4e2a\u6570\n    scan_d(n);scan_d(k);  int val[n];   //\u5b58\u7b54\u6848\u7684\u4e34\u65f6\u6570\u7ec4\n    for(int i=1; i<=k; ++i) scan_d(a[i]);//\u4e94\u82b1\u516b\u95e8\u7684\u8f93\u5165\n    build(1, 1, k);           //\u7cbe\u5999\u7edd\u4f26\u7684\u5efa\u6811\n    for(int i=k,j=1; i<=n; ++i, j=i%k+1){//\u7a97\u53e3\u7b2ci\u6b21\u79fb\u52a8\u65f6\uff0c\u5c31\u7b49\u4ef7\u4e8e\u5c06\u6570\u7ec4\u7b2c(i%k+1)\u4e2a\u6570\u66ff\u6362\u4e3a\u4e00\u65b0\u6570\n        printf(\"%d \", t1[1]); //\u4e00\u76ee\u4e86\u7136\u7684\u7b54\u6848\n        val[i] = t2[1];       //\u9274\u4e8e\u6700\u5927\u503c\u975e\u5f97\u8f93\u7b2c\u4e8c\u884c\u53ea\u597d\u5148\u5b58\u4e0b\u6765\u4e86\n        scan_d(sc);           //\u5b5c\u5b5c\u4e0d\u5026\u7684\u66f4\u65b0\n        subtitu(pes[j], sc);  //\u5c3d\u804c\u5c3d\u8d23\u7684\u4fee\u6539(\u7b80\u5355\u7c97\u66b4\u7684\u66f4\u65b0\u5f85\u66f4\u6539\u6570\u5728\u6811\u4e2d\u7684\u8282\u70b9)\n    }\n    printf(\"\\n\");             //\u6cfe\u6e2d\u5206\u660e\u7684\u6362\u884c\n    for(int i=k; i<=n; ++i) printf(\"%d \", val[i]);//\u80f8\u6709\u6210\u7af9\u7684\u7ed3\u679c\n    return 0;//\u753b\u9f99\u70b9\u775b\u7684\u8fd4\u56de\n}\n```\n\n\n",
        "postTime": 1559744286,
        "uid": 88912,
        "name": "HZAUqzx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u90fd\u7528\u7684**\u5355\u8c03\u961f\u5217***~~\u6211\u592a\u5f31\u4e86\uff0c\u4e0d\u4f1a\u5199\u961f\u5217~~ **\u2190\u8fd9\u662f\u771f\u7684**\n\n\u5148\u732e\u4e0a\u6211(\u4e11)\u6f02(\u964b)\u4eae \u7684 **\u66b4\u529b**\u4ee3\u7801\uff1a70\u5206\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<string>\n#include<stack> \n#define ll long long\n#define INF 2147483647\n#define re register \n#define in inline \n#define maxn 1000010\nusing namespace std;\n\nin int read()\n{ \n    int x=0,f=1;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=-1;c=getchar();} \n    while(isdigit(c)){x=x*10+c-48;c=getchar();}\n    return x*f;\n}\n\nin void put(int x)\n{\n     if(x<0) putchar('-'),x=-x;\n     if(x>9) put(x/10);\n     putchar(x%10+'0');\n}\n \nint a[maxn],_min[maxn],_max[maxn];\nint n,k,i,j;\n\nint main()\n{\t\n\tscanf(\"%d%d\",&n,&k);\n\tfor (i=1;i<=n;++i)\n\t\tscanf(\"%d\",&a[i]);\n\tfor (i=k;i<=n;++i)\n\t{\n\t\t_min[i]=INF; // \u521d\u59cb\u5316\u6700\u5c0f\u503c\n\t\t_max[i]=-INF; // \u521d\u59cb\u5316\u6700\u5927\u503c\n\t\tfor (j=i-k+1;j<=i;++j)\n\t\t{\n\t\t\t_min[i]=min(_min[i],a[j]); // \u53d6\u6700\u5c0f\u503c\n\t\t\t_max[i]=max(_max[i],a[j]); // \u53d6\u6700\u5927\u503c\n\t\t}\n\t}\n\t\n\tfor (i=k;i<=n;++i) \n\t\tprintf(\"%d \",_min[i]);\n\tprintf(\"\\n\");\n\tfor (i=k;i<=n;++i)\n\t\tprintf(\"%d \",_max[i]);\n\treturn 0;\n}\n```\n[\u8bc4\u6d4b\u8be6\u60c5](https://www.luogu.org/recordnew/show/16183241)\n_____\n\n**\u518d\u8bf4AC\uff0c\u5148\u8bf4\u601d\u8def**\uff1a\n\na\u4e3a\u539f\u6570\u7ec4\uff0cq\u4e3a\u7f16\u53f7\uff0c\u8fd0\u7528\u5355\u8c03\u961f\u5217\u7684\u601d\u60f3\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u6ce8\u91ca\n\n**\u4ee3\u7801\u5982\u4e0b\u2193**\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<string>\n#include<stack> \n#define ll long long\n#define INF 2147483647\n#define re register \n#define in inline \n#define maxn 100010\nusing namespace std;\n\nin int read()\n{ \n    int x=0,f=1;char c=getchar();\n    while(!isdigit(c)){if(c=='-')f=-1;c=getchar();} \n    while(isdigit(c)){x=x*10+c-48;c=getchar();}\n    return x*f;\n}\n\nin void put(int x)\n{\n     if(x<0) putchar('-'),x=-x;\n     if(x>9) put(x/10);\n     putchar(x%10+'0');\n}\n\nint n,m;\nint a[1000005],q[1000005];\nint h,t;\n\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n;i++)\n        a[i]=read();\n    h=1,t=0;\n    for(int i=1;i<=n;i++)//\u6c42\u6700\u5c0f\n    {\n        if(h<=t&&q[h]<i-m+1)\n            h++;\n        while(h<=t&&a[q[t]]>=a[i])//\u53ea\u8981\u961f\u5217\u91cc\u6709\u5143\u7d20\uff0c\u5e76\u4e14\u5c3e\u5143\u7d20\u6bd4\u5f85\u5904\u7406\u503c\u5927\uff0c\u5373\u8868\u793a\u5c3e\u5143\u7d20\u5df2\u7ecf\u4e0d\u53ef\u80fd\u51fa\u573a\uff0c\u6240\u4ee5\u51fa\u961f\u3002\u76f4\u5230\u5c3e\u5143\u7d20\u5c0f\u4e8e\u5f85\u5904\u7406\u503c\uff0c\u6ee1\u8db3\"\u5355\u8c03\"\u3002\uff08\u8fd9\u662f\u5355\u8c03\u961f\u5217\u5427\uff1f\uff09\n            t--;\n        q[++t]=i;//\u5b58\u5176\u7f16\u53f7\n        if(i>=m)\n            put(a[q[h]]),cout<<(i==n?'\\n':' ');\n    }\n    \n\n    h=1,t=0;\n    for(int i=1;i<=n;i++)//\u6c42\u6700\u5927\uff0c\u662f\u4e0d\u662f\u611f\u89c9\u5f88\u50cf\u4e0a\u8fb9\u7684\u2191\n    {\n        if(h<=t&&q[h]<i-m+1)\n            h++;\n        while(h<=t&&a[q[t]]<=a[i])//\u540c\u6c42\u6700\u5c0f\u601d\u8def\uff0c\u53ea\u662f\u5c3e\u5143\u7d20\u53d8\u6210\u4e86\u5934\u5143\u7d20\n            t--;\n        q[++t]=i;\n        if(i>=m)\n            put(a[q[h]]),cout<<(i==n?'\\n':' ');\n    }\n    return 0;\n}\n```\n\n[\u5b9e\u6d4b\u8bb0\u5f55](https://www.luogu.org/recordnew/show/16182880)~~\u5e76\u4e0d\u4f18\u79c0~~",
        "postTime": 1549869563,
        "uid": 126772,
        "name": "\u53f6\u67ab",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "~~\u8fd9\u660e\u660e\u662f**\u6811\u72b6\u6570\u7ec4**\u6c42\u533a\u95f4\u6781\u503c\u7684\u88f8\u9898\uff01\uff01\uff01~~\n\n\u4e3a\u4ec0\u4e48\u9898\u89e3\u91cc\u90fd\u662f**\u7ebf\u6bb5\u6811**\u548c**\u5355\u8c03\u961f\u5217** **?**\n\n\u90a3\u5c31\u8ba9\u672c\u849f\u84bb\u6765\u4ea4\u4e00\u53d1\u6811\u72b6\u6570\u7ec4\u601d\u8def\uff1a\n~~~\n1.\u7ef4\u62a4\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u5206\u522b\u5904\u7406\u6700\u5927\u548c\u6700\u5c0f\u503c\n2.\u6c42\u533a\u95f4\u6781\u503c\uff0c\u4e00\u5b9a\u8981\u521d\u59cb\u5316\u6811\u72b6\u6570\u7ec4\uff0c\u5426\u5219\u4f1awa\n3.\u5904\u7406\u4e00\u4e0b\u7a97\u53e3\uff08\u533a\u95f4\uff09\uff0c\u5c0f\u6a21\u62df\u5373\u53ef\n4.\u5927\u5438\u4e00\u53e3\u6c27\u6c14\uff0c\u4e0d\u5f00O2\u4f1aT\u4e00\u4e2a\u70b9\n~~~\n~~~cpp\n// luogu-judger-enable-o2 //\u6d1b\u8c37\u7684\u6c27\u6c14233333\n#include<bits/stdc++.h>\n#define INF_MAX 2147483641\n#define ss 1000009\n#define ll long long\nusing namespace std;\nll n,k;\nll trmin[ss],trmax[ss],a[ss],v;\nll ansmin[ss],ansmax[ss];\ninline ll lowbit(ll x)\n{\n    return x&-x;\n}\ninline void addmin(ll x,ll y)\n{\n   while(x<=n)\n   {\n       if(trmin[x]>y)\n           trmin[x]=y;\n        x+=lowbit(x);\n   }\n}\ninline void addmax(ll x,ll y)\n{\n   while(x<=n)\n   {\n       if(trmax[x]<y)\n           trmax[x]=y;\n        x+=lowbit(x);\n   }\n}\ninline ll getmin(ll x,ll r)\n{\n    ll ff=r;\n    ll maxx=INF_MAX;\n    while(ff>=x)\n    {\n        if(ff-lowbit(ff)>x)\n        {\n            maxx=min(maxx,trmin[ff]);\n            ff-=lowbit(ff);\n        }\n        else \n        {\n            maxx=min(maxx,a[ff]);\n            ff--;\n        }\n    }\n    return maxx;\n}\ninline ll getmax(ll x,ll r)\n{\n    ll ff=r;\n    ll maxx=-(INF_MAX);\n    while(ff>=x)\n    {\n        if(ff-lowbit(ff)>x)\n        {\n            maxx=max(maxx,trmax[ff]);\n            ff-=lowbit(ff);\n        }\n        else \n        {\n            maxx=max(maxx,a[ff]);\n            ff--;\n        }\n    }\n    return maxx;\n}\nint main()\n{\n    memset(trmin,127,sizeof(trmin));\n    memset(trmax,-127,sizeof(trmax));\n    //\uff01\uff01\uff01\n    //\u521d\u59cb\u5316\u6781\u4e3a\u91cd\u8981\uff01\uff01\uff01\uff01\n    scanf(\"%lld%lld\",&n,&k);\n    for(register ll i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        addmin(i,a[i]);\n        addmax(i,a[i]);\n        //\u5206\u522b\u6dfb\u52a0\n    }\n    for(register ll i=1;i+k-1<=n;i++)\n    {\n        if(i+k-1>n)break;\n        ansmin[++v]=getmin(i,i+k-1);\n        ansmax[v]=getmax(i,i+k-1);\n        //\u67e5\u8be2\uff0c\u5b58\u5728\u6570\u7ec4\u91cc\n        //\u8fd9\u91cc\u8981\u6a21\u62df\u4e00\u4e0b\u7a97\u53e3\u7684\u79fb\u52a8\n    }\n    for(register ll i=1;i<=v;i++)\n      printf(\"%lld \",ansmin[i]);\n    puts(\"\");\n    for(register ll i=1;i<=v;i++)\n      printf(\"%lld \",ansmax[i]);\n    return 0;//\u5feb\u4e50\u7ed3\u675f\n}\n~~~\n# ~~\u795d\u5927\u5bb6noip RP++~~",
        "postTime": 1540435667,
        "uid": 28190,
        "name": "\u4f1a\u6253\u6c99\u5305\u7684\u732b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1886)\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u770b\u4e0a\u53bb\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u6216ST\u8868\u505a\uff0c\u4f46\u5b83\u4eec\u90fd\u662fO(nlogn)\u7ea7\u522b\u7684\uff0c\u800c\u5728\u672c\u9898\u7684\u6570\u636e\u4e0b\u4e0d\u4f1a\u592a\u9ad8\u6548\uff0c\u4e8e\u662f\u6211\u4eec\u6765\u82df\u4e00\u4e2a\u4f18\u5316\uff1a\n\n\u672c\u9898\u4e2d\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u4fe1\u606f\uff1a\n\n##  \u6240\u6709\u533a\u95f4\u90fd\u662f\u7b49\u957f\u4e14\u8fde\u7eed\u7684 \u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u201c\u76f8\u90bb\u201d\u7684\u4e24\u4e2a\u533a\u95f4(l,r)\u4e0e(l+1,r+1)\u6709\u4e9b\u4e0d\u9519\u7684\u6027\u8d28\uff1a\n\n\u5e8f\u5217a\uff1aa[l],a[l+1],a[l+2]......a[r-1],a[r],a[r+1]\u3002\n\n\u4ee5\u6700\u5927\u503c\u4e3a\u4f8b\uff1a\u5728(l,r)\u4e2d\uff1a\n\nmax{a[l],a[l+1],a[l+2]...a[r-1],a[r]}\n=max{a[l],max{a[l+1],a[l+2]...a[r-1],a[r]}}\n\nmax{a[l+1],a[l+2]...a[r-1],a[r],a[r+1]}=max{max{a[l+1],a[l+2]......a[r-1],a[r]\n},a[r+1]}\u3002\n\n\u8fd9\u4e24\u4e2a\u65b9\u7a0b\u6709\u76f8\u540c\u7684\u90e8\u5206max{a[l+1],a[l+2]...a[r-1],a[r]}\uff0c\u6240\u4ee5\u533a\u95f4(l,r)\u4e2d\u7684\u6700\u5927\u503c\u843d\u5728(l+1,r)\u7684\u6982\u7387\u5f88\u5927\u3002\u90a3\u4e48\uff0c\u5728\u6c42(l+1,r+1)\u7684\u6700\u503c\u65f6\uff0c\u6211\u4eec\u5b8c\u5168\u6ca1\u5fc5\u8981\u518d\u626b\u63cf\u4e00\u6b21\u3002\u53ea\u6709\u5f53\u4e0a\u4e00\u6b21\u7684\u6700\u503c\u843d\u5728a[l]\u4e0a\u65f6\u624d\u9700\u91cd\u65b0\u626b\u63cf\uff0c\u4ece\u800c\u8fbe\u5230\u4f18\u5316\u7684\u76ee\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u60f3\u4e00\u4e2a\u95ee\u9898\u4ee5\u6700\u5927\u503c\u4e3a\u4f8b\uff0c\u5bf9\u4efb\u610f\u7684l<=i<=j<=r\uff0c\u5982\u679ca[i]<a[j]\uff0c\u90a3\u4e48\u5728\u533a\u95f4\u5411\u53f3\u79fb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6700\u5927\u503c\u7a76\u5176\u4e00\u751f\u4e5f\u4e0d\u4f1a\u843d\u5230a[i]\u4e0a\uff0c\u56e0\u4e3aa[i]\u6bd4a[j]\u5148\u5931\u6548\uff0c\u80fd\u7528a[i]\u4e00\u5b9a\u53ef\u4ee5a[j],\u6240\u4ee5\u6211\u4eec\u4e0d\u518d\u9700\u8981a[i]\u4e86\uff0c\u8fd9\u4e2a\u6027\u8d28\u4e0e[\u5355\u8c03\u961f\u5217](https://blog.csdn.net/er111er/article/details/78344161)\u5f88\u543b\u5408\u3002\n\n\u5f53\u6211\u4eec\u5c06\u533a\u95f4\u4ece(l,r)\u79fb\u52a8\u5230(l+1,r+1)\u65f6\uff0c\u82e5\u961f\u9996\u5143\u7d20\u4e0d\u5728(l+1,r+1)\u533a\u95f4\u5f53\u4e2d\uff0c\u5219\u5220\u9664\u5b83\uff0c\u5c06a[r+1]\u63d2\u5165\u5355\u8c03\u961f\u5217\u4e2d\uff0c\u8fd9\u6837\u5904\u7406\u540e\u7684\u961f\u9996\u5143\u7d20\u4fbf\u662f(l+1,r+1)\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n).\n\n\u6b22\u8fce\u5404\u4f4dDALAO\u7ea0\u9519\uff0c\u6211\u592a\u5f31\u4e86\u3002\n\n\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int maxa = 1e6+5;\nint a[maxa],q[maxa],num[maxa]={},fx[maxa],fn[maxa],n,head,i,k,tail;\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\thead=1,tail=0;\n\tfor(i=1;i<=n;i++){\n\t\twhile(num[head]<i-k+1&&head<=tail)head++;\n\t\twhile(a[i]<=q[tail]&&head<=tail)tail--;\n\t\tnum[++tail]=i;\n\t\tq[tail]=a[i];\n\t\tfn[i]=q[head];\n\t}\n\thead=1,tail=0;\n\tfor(i=1;i<=n;i++){\n\t\twhile(num[head]<i-k+1&&head<=tail)head++;\n\t\twhile(a[i]>=q[tail]&&head<=tail)tail--;\n\t\tnum[++tail]=i;\n\t\tq[tail]=a[i];\n\t\tfx[i]=q[head];\n\t}\n\tfor(i=k;i<=n;i++){\n\t\tprintf(\"%d \",fn[i]);\n\t}\n\tprintf(\"\\n\");\n\tfor(i=k;i<=n;i++){\n\t\tprintf(\"%d \",fx[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1537623381,
        "uid": 55050,
        "name": "\u6700\u559c\u6b22saber\u4e86",
        "ccfLevel": 0,
        "title": "P1886\u6ed1\u52a8\u7a97\u53e3"
    },
    {
        "content": "\u672c\u849f\u84bb\u6700\u8fd1\u5728\u5b66\u4e60\u7ebf\u6bb5\u6811\uff0c\u770b\u5230\u8fd9\u9053\u9898\uff0c\u5fc3\u91cc\u4e00\u60ca\uff1aWhat the hell\uff1f\u8fd9\u4e0d\u5c31\u662f\u4f20\u8bf4\u4e2d\u7684\u7ebf\u6bb5\u6811~~\u7b2c\u4e8c\u677f\u5b50~~\u5417\uff1f\u4e0d\u884c\uff0c\u6211\u5fc5\u987bA\u6389\u8fd9\u9053\u9898\u3002\n\n\u7136\u800c\uff0cAC\u4e4b\u96be\uff0c\u96be\u4e8e\u641e~~\u6bd4\u5229~~\u3002\u60f3\u8981A\u8fd9\u9053\u9898\u4e5f\u662f\u82b1\u4e86\u6211\u4e0d\u5c11\u65f6\u95f4\u3002\n\n\u6240\u4ee5\uff0c\u7279\u53d1\u6b64\u9898\u89e3\u548c\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u7ebf\u6bb5\u6811\u6280\u5de7\u3002\n\n\u5148\u4e0a60\u5206\u4ee3\u7801\n\n\uff08\u51e0\u4e4e\u677f\u5b50\uff0c\u4e0d\u96be\u60f3\u5230\uff0c\u4f46\u60f3\u51ed\u8fd9\u4e2a\u5c31\u60f3\u6c34\u4e86\u8fd9\u9053\u9898\uff1f\u54fc\uff0c\u51fa\u9898\u4eba\u600e\u4e48\u53ef\u80fd\u4f1a\u653e\u8fc7\u4f60\u5462\uff09\uff08\u5149\u901f\u9003\uff09\n```cpp\n#include<bits/stdc++.h>\n#define rnt register int\nusing namespace std;\nconst int Maxn=1e7+1;//1e7+1=10^7+1\nint n,k;\nint win[Maxn];//\u7a97\u53e3\u6811\nint mi[Maxn];//\u7ef4\u62a4\u7684\u6700\u5c0f\u503c\nint ma[Maxn];//\u7ef4\u62a4\u7684\u6700\u5927\u503c\n\ninline void read(int &x)//\u8bfb\u5165\u4f18\u5316\n{\n    int num=0,s=1;\n    char in=getchar();\n    while(!isdigit(in))\n    {\n        if(in=='-')\n        {\n            s=-1;\n        }\n        in=getchar();\n    }\n    while(isdigit(in))\n    {\n        num=(num<<1)+(num<<3)+in-'0';\n        in=getchar();\n    }\n    x=num*s;\n}\nvoid cst(int rt,int l,int r)//\u5efa\u6811\uff0cconstruct v.\u5efa\u8bbe\uff08\u7eaf\u5c5e\u778e\u626f\uff09\n{\n    if(l==r)\n    {\n        mi[rt]=win[l];//\u628a\u6700\u5927\u548c\u6700\u5c0f\u4e00\u8d77\u8fdb\u884c\u5efa\u6811\n        ma[rt]=win[l];\n        return;\n    }\n    int mid=(l+r)>>1;\n    cst(rt<<1,l,mid);\n    cst(rt<<1|1,mid+1,r);\n    mi[rt]=min(mi[rt<<1],mi[rt<<1|1]);//\u66f4\u65b0\u6700\u5c0f\n    ma[rt]=max(ma[rt<<1],ma[rt<<1|1]);//\u66f4\u65b0\u6700\u5927\n}\nint getmin(int rt,int l,int r,int al,int ar)//\u67e5\u8be2[al,ar]\u4e4b\u95f4\u6700\u5c0f\u503c\n{\n    if(ar<l||al>r)//\u8be2\u95ee\u533a\u95f4\u548c\u5f53\u524d\u533a\u95f4\u65e0\u4ea4\u96c6\n    {\n        return Maxn;//\u8fd4\u56de\u4e00\u4e2a\u8f83\u5927\u503c\uff0c\u5bf9\u4e0b\u9762\u7684\u66f4\u65b0\u6ca1\u6709\u5f71\u54cd\n    }\n    if(al<=l&&r<=ar)//\u8be2\u95ee\u533a\u95f4\u5305\u542b\u5f53\u524d\u533a\u95f4\n    {\n        return mi[rt];\n    }\n    int mid=(l+r)>>1;\n    return min(getmin(rt<<1,l,mid,al,ar),getmin(rt<<1|1,mid+1,r,al,ar));//\u9012\u5f52\n}\nint getmax(int rt,int l,int r,int al,int ar)\n{\n    if(ar<l||al>r)\n    {\n        return -1;//\u8fd4\u56de\u4e00\u4e2a\u8f83\u5c0f\u503c\uff0c\u6ce8\u610f\uff0c\u8fd9\u662f\u4e00\u4e2a\u5751\u70b9\uff0c\u6211\u5f53\u65f6\u5c31\u662f\u88ab\u61f5\u4e86\uff0c\u9898\u91cc\u6ca1\u6709\u89c4\u5b9a\u4e00\u5b9a\u975e\u8d1f\uff0c\u8fd9\u662f\u9519\u8bef\u539f\u56e0\u4e4b\u4e00\n    }\n    if(al<=l&&r<=ar)\n    {\n        return ma[rt];\n    }\n    int mid=(l+r)>>1;\n    return max(getmax(rt<<1,l,mid,al,ar),getmax(rt<<1|1,mid+1,r,al,ar));\n}\nint main()\n{\n    read(n),read(k);\n    for(rnt i=1;i<=n;i++)\n    {\n        read(win[i]);\n    }\n    cst(1,1,n);//\u5f00\u59cb\u5efa\u6811\n    for(rnt i=1;i<=n-k+1;i++)\n    {\n        printf(\"%d \",getmin(1,1,n,i,i+k-1));\n    }\n    puts(\"\");//\u6ce8\u610f\u6362\u884c\n    for(rnt i=1;i<=n-k+1;i++)\n    {\n        printf(\"%d \",getmax(1,1,n,i,i+k-1));\n    }\n    puts(\"\");\n    return 0;\n}\n```\n\n60\u5206\u7684\u663e\u7136\u6709\u5f88\u5927\u95ee\u9898\n\n\u603b\u7ed3\u5982\u4e0b\uff1a\n-  \u67e5\u8be2\u6700\u5927\u503c\uff0c\u4e3a\u4e86\u5bf9\u7ed3\u679c\u65e0\u5f71\u54cd\u8fd4\u56de\u7684-1\n-  \u8d39\u65f6\uff08\u6700\u4e3b\u8981\uff09main\uff01\uff01\uff01\n\n\u6240\u4ee5\uff0c\u6211\u7279\u610f\u5bf9\u7ebf\u6bb5\u6811\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u4e5f\u5c31\u662f~~\u65ad\u7f51~~\u64cd\u4f5c\n\n\u4e0a80\u5206\u4ee3\u7801\uff08\u5c31\u5dee\u4e00\u4e22\u4e22\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define rnt register int\nusing namespace std;\nconst int Maxn=1e7+1;\nint n,k,minn=Maxn,maxn=-Maxn;//60\u5206\u7684\u6559\u8bad\nint win[Maxn];\nint mi[Maxn];\nint ma[Maxn];\nint minans[Maxn];//\u79bb\u7ebf\u64cd\u4f5c\u65f6\u5019\u7528\u6765\u8bb0\u5f55\uff0c\u4e0b\u540c\nint maxans[Maxn];\n\ninline void read(int &x)\n{\n    int num=0,s=1;\n    char in=getchar();\n    while(!isdigit(in))\n    {\n        if(in=='-')\n        {\n            s=-1;\n        }\n        in=getchar();\n    }\n    while(isdigit(in))\n    {\n        num=(num<<1)+(num<<3)+in-'0';\n        in=getchar();\n    }\n    x=num*s;\n}\nvoid cst(int rt,int l,int r)\n{\n    if(l==r)\n    {\n        mi[rt]=win[l];\n        ma[rt]=win[l];\n        return;\n    }\n    int mid=(l+r)>>1;\n    cst(rt<<1,l,mid);\n    cst(rt<<1|1,mid+1,r);\n    mi[rt]=min(mi[rt<<1],mi[rt<<1|1]);\n    ma[rt]=max(ma[rt<<1],ma[rt<<1|1]);\n}\nvoid cct(int rt,int l,int r,int al,int ar)//\u4f18\u5316\n{\n    if(al<=l&&r<=ar)\n    {\n        maxn=max(maxn,ma[rt]);//\u66f4\u65b0\u6700\u5927\n        minn=min(minn,mi[rt]);//\u66f4\u65b0\u6700\u5c0f\n        return;//\u8fd9\u4e2areturn\u5f88\u5bb9\u6613\u88ab\u9057\u5fd8\n    }\n    int mid=(l+r)>>1;\n    if(al<=mid)//\u9012\u5f52\u5de6\u5b50\u6811\n    {\n        cct(rt<<1,l,mid,al,ar);\n    }\n    if(ar>mid)//\u9012\u5f52\u53f3\u5b50\u6811\n    {\n        cct(rt<<1|1,mid+1,r,al,ar);\n    }\n}\nint main()\n{\n    read(n),read(k);\n    for(rnt i=1;i<=n;i++)\n    {\n        read(win[i]);\n    }\n    cst(1,1,n);\n    for(rnt i=1;i<=n-k+1;i++)\n    {\n    \tminn=Maxn,maxn=-Maxn;//\u6bcf\u6b21\u66f4\u65b0\u5b8c\u540e\u8981\u91cd\u65b0\u8d4b\u503c\n    \tcct(1,1,n,i,i+k-1);//\u533a\u95f4\u6700\u5c0f\u6700\u5927\n    \tmaxans[i]=maxn,minans[i]=minn;//\u8bb0\u5f55\n    }\n    for(rnt i=1;i<=n-k+1;i++)\n    {\n        printf(\"%d \",minans[i]);\n    }\n    puts(\"\");\n    for(rnt i=1;i<=n-k+1;i++)\n    {\n        printf(\"%d \",maxans[i]);\n    }\n    puts(\"\");\n    return 0;\n}\n```\n\u4f46\u662f\uff0c\u8fd9\u4e00\u7bc7\u7684\u95ee\u9898\u5728\u54ea\u5462\uff1f\n\n\u7b54\uff1a\u5728\u4e8eminn\u548cmaxn\u7684\u503c\u4e0d\u591f\u66f4\u65b0\uff0c\u6700\u597d\u8d4b\u503c\u4e3a1e9\u6570\u91cf\u7ea7\n\n\u6700\u540e\uff0c\u7aef\u4e0aAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define rnt register int\nusing namespace std;\nconst int Maxn=1e8+1;//\u8fd9\u91cc\u4e0d\u8981\u52301e9\uff0c\u4f1a\u5361\u6389\u3002\u3002\u3002\nint n,k,minn=Maxn,maxn=-Maxn;//\u8fd9\u91cc\u4e0d\u53d8\nint win[Maxn];\nint mi[Maxn];\nint ma[Maxn];\nint minans[Maxn];\nint maxans[Maxn];\n\ninline void read(int &x)\n{\n    int num=0,s=1;\n    char in=getchar();\n    while(!isdigit(in))\n    {\n        if(in=='-')\n        {\n            s=-1;\n        }\n        in=getchar();\n    }\n    while(isdigit(in))\n    {\n        num=(num<<1)+(num<<3)+in-'0';\n        in=getchar();\n    }\n    x=num*s;\n}\nvoid cst(int rt,int l,int r)\n{\n    if(l==r)\n    {\n        mi[rt]=win[l];\n        ma[rt]=win[l];\n        return;\n    }\n    int mid=(l+r)>>1;\n    cst(rt<<1,l,mid);\n    cst(rt<<1|1,mid+1,r);\n    mi[rt]=min(mi[rt<<1],mi[rt<<1|1]);\n    ma[rt]=max(ma[rt<<1],ma[rt<<1|1]);\n}\nvoid cct(int rt,int l,int r,int al,int ar)//\u4f18\u5316\n{\n    if(al<=l&&r<=ar)\n    {\n        maxn=max(maxn,ma[rt]);\n        minn=min(minn,mi[rt]);\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(al<=mid)\n    {\n        cct(rt<<1,l,mid,al,ar);\n    }\n    if(ar>mid)\n    {\n        cct(rt<<1|1,mid+1,r,al,ar);\n    }\n}\nint main()\n{\n    read(n),read(k);\n    for(rnt i=1;i<=n;i++)\n    {\n        read(win[i]);\n    }\n    cst(1,1,n);\n    for(rnt i=1;i<=n-k+1;i++)\n    {\n    \tminn=(int)1e9+1,maxn=(int)-1e9+1;//\u6700\u7ec8\u7684\u4fee\u6539\uff0c\u5386\u5c3d\u5343\u8f9b\u4e07\u82e6\u54c7\n    \tcct(1,1,n,i,i+k-1);\n    \tmaxans[i]=maxn,minans[i]=minn;\n    }\n    for(rnt i=1;i<=n-k+1;i++)\n    {\n        printf(\"%d \",minans[i]);\n    }\n    puts(\"\");\n    for(rnt i=1;i<=n-k+1;i++)\n    {\n        printf(\"%d \",maxans[i]);\n    }\n    puts(\"\");\n    return 0;\n}\n```\n\u63d0\u4ea4\uff0cA\u6389\u5566~\n\n\u7528\u65f6: 1806ms / \u5185\u5b58: 28752KB\n\n\u663e\u7136\uff0c\u4e0d\u662f\u6700\u4f18\u505a\u6cd5\uff08\u961f\u5217\uff09\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8ba9\u5927\u5bb6\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u6709\u66f4\u597d\u7684\u4e86\u89e3~\n\n**\u73cd\u7231\u751f\u547d\uff0c\u8fdc\u79bb~~\u641e\u57fa~~~\uff08\u6284\u88ad\uff09**",
        "postTime": 1536510475,
        "uid": 59558,
        "name": "Skeleton",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "### \u7ebf\u6bb5\u6811\u4f18\u5316\u505a\u6cd5\n\n\u5982\u679c\u4ed4\u7ec6\u8bfb\u8fc7\u9898\u7684\u8bdd\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u9759\u6001\u7684\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u3002\n\n\u5f88\u591a\u4eba\uff08\u5982\u679c\u4f60\u5b66\u8fc7\u7ebf\u6bb5\u6811\u7684\u8bdd\uff09\u5c31\u4f1a\u60f3\u5230\uff0c\u6211\u5f53\u5e74\u5b66\u7ebf\u6bb5\u6811\u7684\u4f8b\u9898\u4e0d\u5c31\u662f\u533a\u95f4\u52a0\uff0c\u7136\u540e\u6c42\u533a\u95f4\u6700\u5927\u503c\u5417\uff1f\u4f55\u51b5\u8fd8\u6ca1\u6709\u533a\u95f4\u52a0\u8fd9\u4e00\u64cd\u4f5c\uff0c\u5c82\u4e0d\u55e8\u76ae\u54c9\uff1f\uff1f\uff1f\n\n\u597d\u7684\uff0c\u770b\u770b\u6570\u636e\u8303\u56f4\u3002\n\n1*10^6\uff1f\uff1f\uff1f\n\n\u7ebf\u6bb5\u6811\u80fd\u8fc7\u7684\u53bb\u5417\uff1f\u8fd8\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u503c\uff0c\u4e0d\u5f97\u4e24\u68f5\u7ebf\u6bb5\u6811\u5417\uff1f\uff1f\uff1f\n\n\u8fd9\u4e2a\u95ee\u9898\u5c31\u4e0d\u96be\u89e3\u51b3\u4e86\uff1a\n\n\u9996\u5148\u662f\u65f6\u95f4\u7684\u95ee\u9898\u3002\u6211\u4eec\u7684\u5e38\u8bc6\u544a\u8bc9\u6211\u4eec\uff0cO(nlogn)\u53ea\u80fd\u8d70100000\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u5e38\u6570\u4e0d\u662f\u5f88\u5927\u7684\u8bdd\uff0c\u5355\u4ece\u7ebf\u6bb5\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u8bf4\uff0cnlog\u2082n\u5728n=1000000\u7684\u8bdd\u662f1000000*20=20000000\uff0c\u52a0\u70b9\u5e38\u6570\u8fd8\u662f\u53ef\u4ee5\u8fc7\u7684\u3002\n\n\u63a5\u4e0b\u6765\u89e3\u51b3\u5f88\u591a\u4eba\u603b\u8981\u5199\u4e24\u68f5\u7ebf\u6bb5\u6811\u7684\u95ee\u9898\u3002\u7531\u4e0a\u6587\u77e5\uff0c20000000\u8981\u6c42\u4f60\u7684\u5e38\u6570\u5f88\u5c0f\uff0c\u800c\u4f60\u5982\u679c\u5199\u4e24\u68f5\u7ebf\u6bb5\u6811\u4f1a\u589e\u5927\u4f60\u7684\u5e38\u6570\uff0c\u800c\u4e14\u5199\u8d77\u6765\u8d39\u4e8b\uff0c\u6240\u4ee5\u4e0d\u5982\u53ea\u5199\u4e00\u68f5\u7ebf\u6bb5\u6811\u3002\n\n\u600e\u4e48\u5199\u5462\uff1f\uff1f\uff1f\n\n\u5728\u6b64\u4e4b\u524d\u5148\u4e86\u89e3\u4e00\u4e0b\u6211\u7684\u5b8f\u5b9a\u4e49QAQ\uff0c\u65b9\u4fbf\u7406\u89e3\u4ee5\u4e0b\u4ee3\u7801\n\n\t#define root 1,n,1\t\t\t//\u6839\u8282\u70b9\u7684\u5de6\u53f3\u8fb9\u754c\u4e0e\u8282\u70b9\u7f16\u53f7\n    #define lson l,m,rt<<1\t\t//\u5de6\u513f\u5b50\u7684\u5de6\u53f3\u8fb9\u754c\u4e0e\u8282\u70b9\u7f16\u53f7\n    #define rson m+1,r,rt<<1|1\t//\u53f3\u513f\u5b50\u7684\u5de6\u53f3\u8fb9\u754c\u4e0e\u8282\u70b9\u7f16\u53f7\n\n\u6211\u4eec\u4e0d\u59a8\u5199\u4e00\u4e2a\u7ed3\u6784\u4f53\n\n\tstruct node{\n    \tint maxx,minn;//\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\n    }t, z[mn<<2];//t\u662f\u7528\u6765\u63a5query\u51fd\u6570\uff08\u4e00\u4f1a\u518d\u8bb2\uff09\u7684\u8fd4\u56de\u503c\u7684\n    \t\t\t //z[]\u662f\u7528\u6765\u5b58\u7ebf\u6bb5\u6811\u4e3b\u4f53\u7684\u3002\n\n\u76f4\u63a5\u4e00\u8d77\u5b58\uff0c\u662f\u4e0d\u662f\u7701\u4e86\u4e24\u68f5\u7ebf\u6bb5\u6811\u7684\u9ebb\u70e6\uff1f\n\n\u90a3\u4e48\u600e\u4e48\u66f4\u65b0\u5462\uff1f\u5206\u522b\u66f4\u65b0\u5457\uff1a\n\n\tinline void update(int rt){//rt\u8868\u793a\u8981\u66f4\u65b0\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\n    \tz[rt].maxx=max(z[rt<<1].maxx,z[rt<<1|1].maxx);\n        z[rt].minn=min(z[rt<<1].minn,z[rt<<1|1].minn);\n    }\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u5566\uff01\n\n\u6211\u4eec\u7684\u57fa\u7840\u6570\u503c\u53ef\u4ee5\u548c\u5efa\u6811\u64cd\u4f5c\u4e00\u8d77\u8fdb\u884c\u3002\n\n\tinline void build(intl,int r,int rt){//\u5efa\u6811\n    \tif(l==r){z[rt].minn=z[rt].maxx=read();}//\u8fd9\u91cc\u4e00\u8d77\u8fdb\u884c\uff08\u6211\u7528\u4e86\u4e2a\u8bfb\u5165\u4f18\u5316\uff09\n        int m=(l+r)>>1;\n        build(lson);//\u5de6\u513f\u5b50\n        build(rson);//\u53f3\u513f\u5b50\n        update(rt);\n    }\n\n\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u533a\u95f4\u503c\u7684\u53d8\u5316\uff0c\u6240\u4ee5\u5c31\u4e0d\u5199modify\u8fd9\u90e8\u5206\u4e86\u3002\u63a5\u4e0b\u6765\u662f\u4e00\u4e2a\u67e5\u8be2\u7684\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u6709\u4e2a\u7ec6\u8282\uff0c\u4f60\u8981\u540c\u65f6\u8fd4\u56de\u6700\u5c0f\u503c\u4e0e\u6700\u5927\u503c\uff0c\u4e0d\u80fd\u628a\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u4e00\u7ec4\u7b54\u6848\u76f4\u63a5\u4f5c\u4e3a\u8fd9\u4e00\u4e2a\u533a\u95f4\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u4f60\u53ea\u80fd\u628a\u5de6\u53f3\u4e24\u8fb9\u540c\u65f6\u6bd4\u8f83\u6700\u5927\u503c\u6700\u5c0f\u503c\uff0c\u6700\u5927\u503c\u53d6\u4e24\u8005\u4e2d\u6700\u5927\u503c\u6700\u5927\uff0c\u6700\u5c0f\u503c\u53d6\u4e24\u8005\u4e2d\u6700\u5c0f\u503c\u6700\u5c0f\uff0c\u7136\u540e\u5408\u5e76\u6210\u4e00\u4e2anode\u7ed3\u6784\u4f53\u3002\n\n\u6240\u4ee5\uff0c\u4e3a\u4e86\u7b80\u5316\u8fd9\u4e00\u6b65\u9aa4\uff0c\u53ef\u4ee5\u591a\u5199\u4e00\u4e2a\u51fd\u6570\uff1a\n\n\tinline node cmp(node a,node b){//\u51fd\u6570\u540d\u5b57\u5c31\u4e0d\u8981\u6df1\u7a76\u4e86\n    \treturn (node){a.maxx > b.maxx ? a.maxx : b.maxx, a.minn < b.minn ? a.minn : b.minn};\n    }\n\n\u7136\u540e\u7528\u5728\u67e5\u8be2\uff08query\uff09\u51fd\u6570\u4e2d\uff1a\n\n### \u8fd9\u91cc\u6709\u4e2a\u5c0f\u5c0f\u7684\u4f18\u5316\uff1a\n\n\u5982\u679c\u4f60\u7684\u5224\u65ad\u662f\u53ea\u6709\u4e24\u4e2a\u7684\u8bdd\uff0c\u8fd9\u6837\u4f1a\u591a\u6b21\u8fdb\u5165\u5faa\u73af\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4ece\u5224\u65ad\u4e0a\u7701\u53bb\u4e00\u90e8\u5206\u65f6\u95f4\u3002\n\n\tinline node query(int l,int r,int rt,int nowl,int nowr){\n    \t//\u53d8\u91cf\u5206\u522b\u662f\u7ebf\u6bb5\u6811\u5de6\u53f3\u7aef\u70b9\uff0c\u7ebf\u6bb5\u6811\u8282\u70b9\u7f16\u53f7\uff0c\u67e5\u8be2\u8303\u56f4\u5de6\u53f3\u7aef\u70b9\n        if(nowl<=l && r<=nowr){return z[rt];}\n        int m=(l+r)>>1;\n        if(nowl<=m){\n        \tif(m<nowr)\n            \treturn cmp(query(lson,nowl,nowr),query(rson,nowl,nowr));//\u76f4\u63a5\u9012\u5f52\n            else\n            \treturn query(lson,nowl,nowr);\n        }else{\n        \treturn query(rson,nowl,nowr);\n        }\n    }\n\n\u8fd9\u6837\u8fd4\u56de\u7684\u5c31\u662f\u533a\u95f4\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e86\n\n\u4e3b\u51fd\u6570\u7684\u90e8\u5206\u76f4\u63a5\u5728\u5b8c\u6574\u4ee3\u7801\u4e2d\u8be6\u7ec6\u8bb2\u89e3\u4e86\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n#define go(i, j, n, k) for (int i = j; i <= n; i += k)\n#define fo(i, j, n, k) for (int i = j; i >= n; i -= k)\n#define rep(i, x) for (int i = h[x]; i; i = e[i].nxt)\n#define mn 1000100\n#define inf 1 << 30\n#define ll long long\n#define ld long double\n#define fi first\n#define se second\n#define root 1, n, 1\n#define lson l, m, rt << 1\n#define rson m + 1, r, rt << 1 | 1\n#define bson l, r, rt\ninline int read(){\n    int f = 1, x = 0;char ch = getchar();\n    while (ch > '9' || ch < '0'){if (ch == '-')f = -f;ch = getchar();}\n    while (ch >= '0' && ch <= '9'){x = x * 10 + ch - '0';ch = getchar();}\n    return x * f;\n}\ninline void write(int x){\n    if (x < 0)putchar('-'),x = -x;\n    if (x > 9)write(x / 10);\n    putchar(x % 10 + '0');\n}\n//This is AC head above...\nstruct node{\n    int maxx, minn;\n} t,z[mn<<2];\ninline node cmp(node a,node b){\n    return (node){a.maxx > b.maxx ? a.maxx : b.maxx, a.minn < b.minn ? a.minn : b.minn};\n}\ninline void update(int rt){\n    z[rt].maxx = max(z[rt << 1].maxx, z[rt << 1 | 1].maxx);\n    z[rt].minn = min(z[rt << 1].minn, z[rt << 1 | 1].minn);\n}\ninline void build(int l,int r,int rt){\n    if(l==r){\n        z[rt].maxx = z[rt].minn = read();\n        return;\n    }\n    int m = (l + r) >> 1;\n    build(lson);\n    build(rson);\n    update(rt);\n}\ninline node query(int l,int r,int rt,int nowl,int nowr){\n    if(nowl<=l && r<=nowr){\n        return z[rt];\n    }\n    int m = (l + r) >> 1;\n    if(nowl<=m){\n        if(m<nowr)\n            return cmp(query(lson, nowl, nowr), query(rson, nowl, nowr));\n        else\n            return query(lson, nowl, nowr);\n    }else{\n        return query(rson, nowl, nowr);\n    }\n}\nint n, k;\nint a[mn];\nint main(){\n    n = read(), k = read();//\u8bfb\u5165\n    build(root);//\u5efa\u6811\uff08\u5e76\u4e14\u76f4\u63a5\u8bfb\u5165\u53f6\u8282\u70b9\u6570\u503c\uff09\n    go(i,1,n-k+1,1){//\u8fd9\u91cc\u7684\u5faa\u73af\u7528\u6765\u6c42\u533a\u95f4\u6700\u5927\u503c\u6700\u5c0f\u503c\uff0c\u987a\u4fbf\u8f93\u51fa\u6700\u5c0f\u503c\n        node ooo = query(root, i, i + k - 1);//k\u662f\u533a\u95f4\u7684\u56fa\u5b9a\u957f\u5ea6\uff0c\u6240\u4ee5\u76f4\u63a5\u6309\u957f\u5ea6\u4e0e\u5faa\u73af\u5230\u7684\u5de6\u7aef\u70b9\u8be2\u95ee\n        printf(\"%d \", ooo.minn);//\u8f93\u51fa\u6700\u5c0f\u503c\uff08\u4e0d\u6562\u7528cin\u4e86QAQ\uff09\n        a[i] = ooo.maxx;//\u5b58\u50a8\u6700\u5927\u503c\n    }\n    putchar('\\n');\n    go(i,1,n-k+1,1){\n        printf(\"%d \", a[i]);//\u8f93\u51fa\u6700\u5927\u503c\uff08\u4e0d\u6562\u7528cin\u4e86\uff09\n    }\n    return 0;\n}\n```\n\n#### \u7b2c\u4e5d\u6b21\u5199\u9898\u89e3\uff0c\u5e0c\u671b\u53ef\u4ee5\u5e2e\u5230\u7528\u7ebf\u6bb5\u6811\u5374\u60e8\u906dTLE\u7684\u540c\u5b66",
        "postTime": 1533721041,
        "uid": 71168,
        "name": "yizimi\u8fdc\u6b23",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a[P1886 \u6ed1\u52a8\u7a97\u53e3](https://www.luogu.org/problemnew/show/P1886)\n\n\u9898\u610f\u4e0d\u8bb2\u4e86\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u770b\u5f97\u61c2\u3002\n\n\u8fd9\u9053\u9898\u91cc\u9762\u6709\u7ebf\u6bb5\u6811\u7684\u6807\u7b7e\uff0c\u7136\u800c\u5927\u5bb6\u90fd\u89c9\u5f97\u7ebf\u6bb5\u6811\u5e38\u6570\u592a\u5927\u800c\u53bb\u5199\u5355\u8c03\u961f\u5217\u2026\u2026\n\n\u5e38\u6570\u592a\u5927\u6ca1\u5173\u7cfb\u6211\u4eec\u7b97\u6cd5\u4f18\u79c0\u4e00\u70b9\u7167\u6837\u80fd\u8fc72333\n\n\u5efa\u4e24\u68f5\u6811\u5206\u522b\u7ef4\u62a4\u6700\u5927\u503c\u6700\u5c0f\u503c\u6211\u6ca1\u8bd5\u8fc7\uff0c\u4f46\u662f\u611f\u5230\u4e86\u4e00\u79cd\u6251\u9762\u800c\u6765\u7684TLE\u6c14\u606f\u6709\u6ca1\u6709\u2026\u2026\n\n\u8003\u8651\u5efa**\u4e00\u68f5\u7ebf\u6bb5\u6811**\uff0c\u540c\u65f6\u5b58\u50a8\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u8fd9\u6837\u5efa\u6811\u7684\u65f6\u5019\u5c31\u53ea\u9700\u8981\u5efa\u4e00\u6b21\u3002\u7ebf\u6bb5\u6811\u7528\u7ed3\u6784\u4f53\u5b58\u50a8\uff0c\u5f00\u56db\u4e2a\u57df\uff0c\u628a\u533a\u95f4\u6700\u5927\u503c\u548c\u533a\u95f4\u6700\u5c0f\u503c\u90fd\u8bb0\u5f55\u8fdb\u53bb\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\u8c8c\u4f3c\u53ef\u4ee5\u67e5\u6700\u5c0f\u503c\u7684\u65f6\u5019\u987a\u4fbf\u67e5\u8be2\u6700\u5927\u503c\u5e76\u5b58\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u4e0d\u8fc7\u6211\u6ca1\u8fd9\u4e48\u5199\u800c\u662f\u5206\u5f00\u67e5\u8be2\uff08\u7ecf\u5b9e\u9a8c\u8fd8\u662f\u80fd\u8dd1\u8fc7\u5c31\u662f\u6709\u70b9\u6162\uff09~~\uff08\u624d\u4e0d\u662f\u6211A\u5b8c\u624d\u53d1\u73b0\u61d2\u5f97\u6539\u4e86\u5462\uff09~~\n\n\u57fa\u672c\u5c31\u662f\u8fd9\u4e48\u591a\u5566\uff0c\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,a[1000005];\ninline int read(){\n\tint cnt=0,f=1;char c;\n\tc=getchar();\n\twhile(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n\twhile(isdigit(c)){cnt=cnt*10+c-'0';c=getchar();}\n\treturn f*cnt;\n}\nstruct segtree{int l;int r;int datmax;int datmin;}tree[4000005];\nvoid build_tree(int p,int l,int r){\n\ttree[p].l=l;tree[p].r=r;\n\tif(l==r){tree[p].datmax=a[l];tree[p].datmin=a[l];return;}\n\tint mid=l+r>>1;\n\tbuild_tree(p<<1,l,mid);\n\tbuild_tree(p<<1|1,mid+1,r);\n\ttree[p].datmax=max(tree[p<<1].datmax,tree[p<<1|1].datmax); \n\ttree[p].datmin=min(tree[p<<1].datmin,tree[p<<1|1].datmin);\n}\nint query_max(int p,int l,int r){\n\tif(l<=tree[p].l&&tree[p].r<=r)return tree[p].datmax;\n\tint mid=tree[p].l+tree[p].r>>1;\n\tint val=-(1<<30);\n\tif(l<=mid)val=max(val,query_max(p<<1,l,r));\n\tif(r>mid)val=max(val,query_max(p<<1|1,l,r));\n\treturn val; \n}\nint query_min(int p,int l,int r){\n\tif(l<=tree[p].l&&tree[p].r<=r)return tree[p].datmin;\n\tint mid=tree[p].l+tree[p].r>>1;\n\tint val=1<<30;\n\tif(l<=mid)val=min(val,query_min(p<<1,l,r));\n\tif(r>mid)val=min(val,query_min(p<<1|1,l,r));\n\treturn val;\n}\nint main(){\n\tn=read();k=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tbuild_tree(1,1,n);\n\tfor(int i=1;i<=n-k+1;i++)printf(\"%d \",query_min(1,i,i+k-1));\n\tprintf(\"\\n\");\n\tfor(int i=1;i<=n-k+1;i++)printf(\"%d \",query_max(1,i,i+k-1));\n\treturn 0;\n}\n```",
        "postTime": 1533115629,
        "uid": 43515,
        "name": "kma_093",
        "ccfLevel": 0,
        "title": "p1886"
    },
    {
        "content": "\u8fd9\u91cc\u6211\u975e\u5e38\u60f3\u7528\u7ebf\u6bb5\u6811A\u7684\u3002\n\n\u4e2a\u4eba\u535a\u5ba2\u98df\u7528\u66f4\u4f73\uff1ahttp://www.cinema000.xyz/737.ruby\n\n\u8fd9\u4e5f\u662f\u4e00\u9053RMQ\u95ee\u9898\uff0c\u6b63\u5982\u9898\u76ee\u540d\u79f0\u6240\u793a\uff0c\u5c31\u662f\u6c42\u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u503c\uff0c\u7136\u540e\u6211\u60f3\u7740\u7528\u7ebf\u6bb5\u6811\u53bb\u505a\uff0c\u53d1\u73b0\u6211\u7684\u5199\u6cd5\u8ba9\u6211\u65e0\u8bba\u600e\u6837\u4f18\u5316\u6216\u5f00\u2212o2\uff0c\u90fd\u65e0\u6cd5A\u6389\uff0c\u6b63\u597d\u4eca\u5929\u5b66\u4e86zkw\u7ebf\u6bb5\u6811\uff0c\u8fd9\u6811\u5e38\u6570\u7279\u522b\u5c0f\uff0c\u975e\u5e38\u5feb\uff0c\u7136\u540e\u987a\u624b\u5c31A\u6389\u4e86\u3002\n\n\u5176\u5b9e\u6211\u8fd8\u662f\u5f88\u597d\u5947\u4e3a\u4f55@OYSJ\u7684\u6734\u7d20\u7ebf\u6bb5\u6811\u4e5f\u8fc7\u53bb\u4e86\u3002\n\n\u5173\u4e8ezkw\u7ebf\u6bb5\u6811\uff0c\u53ef\u4ee5\u53c2\u7167\u4e2a\u4eba\u535a\u5ba2\u8be6\u7ec6\u4ecb\u7ecd\uff1ahttp://www.cinema000.xyz/730.ruby\u3002\n\n```cpp\n#include<cstdio>\n\nconst int MAXN = 1000000 + 6;\nconst int INT_MAX = 0x7fffffff;\n\nclass zkwSegmentTree{\n\tpublic:int max,min;\n};\ntypedef zkwSegmentTree zkw;\nzkw t[MAXN * 4];\n\ninline int LEFT(int x){return x << 1;}\ninline int RIGHT(int x){return x << 1 | 1;}\ninline int min(int a,int b){return a < b ? a : b;}\ninline int max(int a,int b){return a > b ? a : b;}\n\ninline int read(){\n\tint op = 1,ans = 0;char s = getchar();\n\twhile(s < '0' || s > '9'){if(s == '-'){op = -1;}s = getchar();}\n\twhile(s >= '0' && s <= '9'){ans = ans * 10 + s - '0';s = getchar();}\n\tans *= op;\n\treturn ans;\n}\nvoid print(int x){\n\tif(x < 0){putchar('-');x = -x;}\n\tif(x > 9){print(x / 10);}\n\tputchar(x % 10 + '0');\n}\nvoid printse(int x){\n\tprint(x);\n\tputchar(' ');\n}\n\nint n,M;\n\nvoid build(){\n\tfor(M = 1;M < (n + 1);M <<= 1);\n\tfor(int i = M + 1;i <= M + n;i++){\n\t\t//int gg;\n\t\t//scanf(\"%d\",&gg);\n\t\tt[i].min = t[i].max = read();\n\t}\n\tfor(int i = M - 1;i;i--){\n\t\tt[i].min = min(t[LEFT(i)].min,t[RIGHT(i)].min);\n\t\tt[i].max = max(t[LEFT(i)].max,t[RIGHT(i)].max);\n\t}\n}\n\nzkw ask(int l,int r){\n\tzkw ans;ans.max = -INT_MAX;ans.min = INT_MAX;\n\tfor(l += M - 1,r += M + 1;l ^ r ^ 1;l >>= 1,r >>= 1){\n\t\tif(~l & 1){\n\t\t\tans.min = min(ans.min,t[l ^ 1].min);\n\t\t\tans.max = max(ans.max,t[l ^ 1].max);\n\t\t}\n\t\tif(r & 1){\n\t\t\tans.min = min(ans.min,t[r ^ 1].min);\n\t\t\tans.max = max(ans.max,t[r ^ 1].max);\n\t\t}\n\t}\n\treturn ans;\n}\n\nzkw ANS[MAXN * 4];\n\nint main(){\n\tint m;\n\tscanf(\"%d %d\",&n,&m);\n\t\n\tbuild();\n\t\n\tint j = n - m + 1;\n\tfor(int i = 1;i <= j;i++){\n\t\tANS[i] = ask(i,i + m - 1);\n\t\tprintse(ANS[i].min);\n\t}\n\tputchar('\\n');\n\tfor(int i = 1;i <= j;i++){\n\t\tprintse(ANS[i].max);\n\t}\n\t\n\treturn 0;\n} \n```",
        "postTime": 1528003334,
        "uid": 77211,
        "name": "i9_7980XE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5355\u8c03\u961f\u5217\u7684\u677f\u5b50\uff0c\u4f46\u6ce8\u610f\u8fd9\u5e76\u4e0d\u662f\u4f18\u5148\u5bf9\u5217\uff08\u53c8\u540d\u5806\uff09\u3002\n## \u9996\u5148\uff0c\u4f18\u5148\u961f\u5217\u6709\u8fd9\u4e48\u51e0\u4e2a\u6027\u8d28\uff1a\n1.\u961f\u5217\u4e2d\u7684\u5143\u7d20\u5176\u5bf9\u5e94\u5728\u539f\u6765\u7684\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u5fc5\u987b\u662f\u5355\u8c03\u9012\u589e\u7684\u3002  \n2.\u961f\u5217\u4e2d\u5143\u7d20\u7684\u5927\u5c0f\u5fc5\u987b\u662f\u5355\u8c03\u9012(\u589e/\u51cf/\u751a\u81f3\u662f\u81ea\u5b9a\u4e49\u4e5f\u53ef\u4ee5)\u3002  \n3.\u5355\u8c03\u961f\u5217\u4e0e\u666e\u901a\u961f\u5217\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5c31\u5728\u4e8e\u5355\u8c03\u961f\u5217\u65e2\u53ef\u4ee5\u4ece\u961f\u9996\u51fa\u961f\uff0c\u4e5f\u53ef\u4ee5\u4ece\u961f\u5c3e\u51fa\u961f\u3002\u5f88\u795e\u5947\u5bf9\u4e0d\u5bf9\uff01\uff01\n# \u4f46\u6211\u4eec\u600e\u4e48\u53bb\u5b9e\u73b0\u5462\uff1f\uff1f\uff1f\n\u5c31\u62ff\u8fd9\u4e2a\u9898\u6765\u770b\n```\n8 3\n1 3 -1 -3 5 3 6 7\n```\n\u6211\u4eec\u7528qu\u6765\u8868\u793a\u5355\u8c03\u961f\u5217\uff0cp\u8868\u793a\u8fd9\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u3002  \n1.\u7531\u4e8e\u6b64\u65f6\u961f\u4e2d\u6ca1\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u76f4\u63a5\u4ee41\u8fdb\u961f\u3002\u6b64\u65f6\uff0cq={1},p={1}\u3002  \n\n2.\u73b0\u57283\u9762\u4e34\u7740\u6289\u62e9\u3002\u4e0b\u9762\u57fa\u4e8e\u8fd9\u6837\u4e00\u4e2a\u601d\u60f3:\u5047\u5982\u628a3\u653e\u8fdb\u53bb\uff0c\u5982\u679c\u540e\u97622\u4e2a\u6570\u90fd\u6bd4\u5b83\u5927\uff0c\u90a3\u4e483\u5728\u5176\u6709\u751f\u4e4b\u5e74\u5c31\u6709\u53ef\u80fd\u6210\u4e3a\u6700\u5c0f\u7684\u3002\u6b64\u65f6\uff0cq={1,3},p={1,2}  \n\n3.\u4e0b\u9762\u51fa\u73b0\u4e86-1\u3002\u961f\u5c3e\u5143\u7d203\u6bd4-1\u5927\uff0c\u90a3\u4e48\u610f\u5473\u7740\u53ea\u8981-1\u8fdb\u961f\uff0c\u90a3\u4e483\u5728\u5176\u6709\u751f\u4e4b\u5e74\u5fc5\u5b9a\u6210\u4e3a\u4e0d\u4e86\u6700\u5c0f\u503c\uff0c\u539f\u56e0\u5f88\u660e\u663e:\u56e0\u4e3a\u5f53\u4e0b\u97623\u88ab\u6846\u8d77\u6765\uff0c\u90a3\u4e48-1\u4e5f\u4e00\u5b9a\u88ab\u6846\u8d77\u6765\uff0c\u6240\u4ee53\u6c38\u8fdc\u4e0d\u80fd\u5f53\u6700\u5c0f\u503c\u3002\u6240\u4ee5\uff0c3\u4ece\u961f\u5c3e\u51fa\u961f\u3002\u540c\u7406\uff0c1\u4ece\u961f\u5c3e\u51fa\u961f\u3002\u6700\u540e-1\u8fdb\u961f\uff0c\u6b64\u65f6q={-1},p={3}  \n\n4.\u51fa\u73b0-3\uff0c\u540c\u4e0a\u9762\u5206\u6790\uff0c-1>-3\uff0c-1\u4ece\u961f\u5c3e\u51fa\u961f,-3\u4ece\u961f\u5c3e\u8fdb\u961f\u3002q={-3}\uff0cp={4}\u3002\n\n5.\u51fa\u73b05\uff0c\u56e0\u4e3a5>-3\uff0c\u540c\u7b2c\u4e8c\u6761\u5206\u6790\uff0c5\u5728\u6709\u751f\u4e4b\u5e74\u8fd8\u662f\u6709\u5e0c\u671b\u7684\uff0c\u6240\u4ee55\u8fdb\u961f\u3002\u6b64\u65f6\uff0cq={-3,5},p={4,5}  \n\n6.\u51fa\u73b03\u30023\u5148\u4e0e\u961f\u5c3e\u76845\u6bd4\u8f83\uff0c3<5\uff0c\u6309\u7167\u7b2c3\u6761\u7684\u5206\u6790\uff0c5\u4ece\u961f\u5c3e\u51fa\u961f\u30023\u518d\u4e0e-3\u6bd4\u8f83\uff0c\u540c\u7b2c\u4e8c\u6761\u5206\u6790\uff0c3\u8fdb\u961f\u3002\u6b64\u65f6\uff0cq={-3,3},p={4,6}  \n\n7.\u51fa\u73b06\u30026\u4e0e3\u6bd4\u8f83\uff0c\u56e0\u4e3a3<6\uff0c\u6240\u4ee53\u4e0d\u5fc5\u51fa\u961f\u3002\u7531\u4e8e3\u4ee5\u524d\u5143\u7d20\u90fd\uff1c3\uff0c\u6240\u4ee5\u4e0d\u5fc5\u518d\u6bd4\u8f83\uff0c6\u8fdb\u961f\u3002\u56e0\u4e3a-3\u6b64\u65f6\u5df2\u7ecf\u5728\u6ed1\u52a8\u7a97\u53e3\u4e4b\u5916\uff0c\u6240\u4ee5-3\u4ece\u961f\u9996\u51fa\u961f\u3002\u6b64\u65f6\uff0cq={3,6},p={6,7}  \n\n8.\u51fa\u73b07\u3002\u961f\u5c3e\u5143\u7d206\u5c0f\u4e8e7\uff0c7\u8fdb\u961f\u3002\u6b64\u65f6\uff0cq={3,6,7},p={6,7,8}\u3002\n\n**\u90a3\u4e48\uff0c\u6211\u4eec\u5bf9\u5355\u8c03\u961f\u5217\u7684\u57fa\u672c\u64cd\u4f5c\u5df2\u7ecf\u5206\u6790\u5b8c\u6bd5\u3002\u56e0\u4e3a\u5355\u8c03\u961f\u5217\u4e2d\u5143\u7d20\u5927\u5c0f\u5355\u8c03\u9012(\u589e/\u51cf/\u81ea\u5b9a\u4e49\u6bd4\u8f83)\uff0c\u56e0\u6b64\uff0c\u961f\u9996\u5143\u7d20\u5fc5\u5b9a\u662f\u6700\u503c\u3002\u6309\u9898\u610f\u8f93\u51fa\u5373\u53ef**\u3002\n\n\u8fd9\u5c31\u662f\u7b54\u9898\u7684\u4e00\u4e2a\u5b9e\u73b0\u8fc7\u7a0b\u3002\n\n\u4e0b\u9762\u653e\u672c\u9898\u7684\u4ee3\u7801\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002  \n\n~~P.S.\u672c\u849f\u84bb\u559c\u6b22\u6253\u6362\u884c\u548c\u7a7a\u683c\uff0c\u5e94\u8be5\u4e0d\u4f1a\u5f15\u8d77\u4e0d\u9002\u3002\u3002\u3002~~\n# CODE\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<deque>//STL\u4e0d\u89e3\u91ca\n\n#define re register//define\u5927\u6cd5\u597d\nconst int N = 1e6 + 1;\n\nusing namespace std;\n\nstruct wucstdio{\n\tint v;\n\tint h;\n}a[N];\n\nint n,k;\nint mi[N],ma[N];\ndeque<wucstdio> qu; //wucstdio\u662f\u672c\u6821\u4e00\u624b\u63a8\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u7684\u5de8\u4f6c\uff0c\u672c\u9898\u4e2d\u7684\u7ed3\u6784\u4f53\n//%%%%%%%%%\n\ninline int read(){\n    re int x = 0;\n    re int flag = true;\n    re int k = getchar();\n    while(k != '-' && !isdigit(k))\n\t\tk = getchar();\n    if(k == '-'){\n    \tflag = false;\n\t\tk = getchar();\n\t}\n    while(isdigit(k)){\n        x = x * 10 + k - '0';\n        k = getchar();\n    }\n    return (flag ? x : -x);\n}//\u5feb\u8bfb\n\nint main(){\n\tn = read(); k = read();\n\tfor(re int i = 1 ; i <= n ; i++){\n\t\ta[i].v = read();\n\t\ta[i].h = i;\n\t}\n\tfor(re int i = 1; i <= n; i ++){\n\t\twhile((!qu.empty()) && qu.front().h <= i - k)\n\t\t\tqu.pop_front();\n\t\twhile((!qu.empty()) && qu.back().v >= a[i].v)\n\t\t\tqu.pop_back();\n\t\tqu.push_back(a[i]);\n\t\tmi[i] = qu.front().v; \n\t}\n\tqu.clear();\n\tfor(re int i = 1; i <= n ;i ++){\n\t\twhile((!qu.empty()) && qu.front().h <= i - k)\n\t\t\tqu.pop_front();\n\t\twhile((!qu.empty()) && qu.back().v <= a[i].v)\n\t\t\tqu.pop_back();\n\t\tqu.push_back(a[i]);\n\t\tma[i] = qu.front().v;\n\t}\n\tfor(int i = k; i <= n ; i++ )\n\t\tprintf(\"%d \",mi[i]);\n\tprintf(\"\\n\");\n\tfor(int i = k; i <= n ; i++ )\n\t\tprintf(\"%d \",ma[i]);\n\treturn 0;\n}\n```\n\u6211\u5c31\u4e0d\u52a0\u6ce8\u91ca\u4e86\uff0c\u5927\u5bb6\u770b\u65f6\u52ff\u55b7\u3002~~\u5927\u5bb6\u590d\u5236\u4e5f\u65b9\u4fbf\u3002\u3002\u3002\u3002~~",
        "postTime": 1523071325,
        "uid": 54879,
        "name": "Law_Aias",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u5148\u8bf4\u6b63\u89e3\uff1a**\u5355\u8c03\u961f\u5217** ~~\u53ef\u849f\u84bb\u4e0d\u4f1a\u5199~~\n\n\u53c8\u770b\u5230\u6807\u7b7e\u91cc\u6709\u201c\u7ebf\u6bb5\u6811\u201d\n\n\u4f46\u542c\u8bf4\u8fd9\u9053\u9898**\u7ebf\u6bb5\u6811\u4f1aT**\n\n\u7ffb\u4e86\u7ffb\u9898\u89e3\uff0c**\u770b\u5230\u6709\u5199\u7ebf\u6bb5\u6811T\u523050\u5206\u7684**\n\n\u8fd8\u6709\u4e00\u6b21\u6027\u8fd4\u56de\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u64cd\u4f5c\n\n\u53ef\u6211\u53ea\u5199\u4e86\u4e00\u4e2a\u6700\u6700\u6734\u7d20\u7684\u7ebf\u6bb5\u6811\uff0c\u6bcf\u6b21\u67e5\u8be22\u6b21\uff08\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\uff09\n\n**\u4e5f\u8fc7\u4e86**\uff08\u6700\u6162988ms\u5361\u8fc7\uff0cO2\u6700\u6162600+ms\uff09\n\n\n------------\n\n\u601d\u8def\u975e\u5e38\u7b80\u5355\uff1a\u5c31\u662f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u533a\u95f4\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\n\n\u5199\u4e24\u4e2a\u67e5\u8be2\uff08queue\\_max & queue\\_min\uff09\uff0c\u5c06\u6bcf\u6b21\u67e5\u8be2\u7684\u7ed3\u679c\u5b58\u5165\u4e24\u4e2aans\u6570\u7ec4\u91cc\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n//\u51e0\u4e4e\u5c31\u662f\u6a21\u677f\n//\u8fd8\u7701\u4e00\u4e2a\u4fee\u6539\u64cd\u4f5c\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#define MAXN 5000005\nusing namespace std;\n\nint n, m, cnt;\nint a[MAXN];\nint ans_min[MAXN];\nint ans_max[MAXN];\nstruct Node\n{\n    int left; \n    int right;\n    int min, max;\n    Node *ch[2];\n}pool[MAXN], *root;\n\nvoid Build_Tree(Node *r, int left, int right)\n{\n    r->left = left;\n    r->right = right;\n    if(left == right) \n    {\n        r->min = r->max = a[left];\n        return ;\n    }\n    int mid = (left + right) / 2;\n    Node *lson = &pool[++cnt];\n    Node *rson = &pool[++cnt];\n    r->ch[0] = lson;\n    r->ch[1] = rson;\n    Build_Tree(lson, left, mid);\n    Build_Tree(rson, mid + 1, right);\n    r->min = min(r->ch[0]->min, r->ch[1]->min);\n    r->max = max(r->ch[0]->max, r->ch[1]->max);\n}//\u5efa\u7ebf\u6bb5\u6811\n\nint query_min(Node *r, int left, int right)\n{\n    if(r->left == left && r->right == right) return r->min;\n    if(r->ch[0]->right >= right) return query_min(r->ch[0], left, right);\n    if(r->ch[1]->left <= left) return query_min(r->ch[1], left, right);\n    return min(query_min(r->ch[0], left, r->ch[0]->right), \n               query_min(r->ch[1], r->ch[1]->left, right));\n\n}//\u67e5\u8be2\u533a\u95f4\u6700\u5c0f\n\nint query_max(Node *r, int left, int right)\n{\n    if(r->left == left && r->right == right) return r->max;\n    if(r->ch[0]->right >= right) return query_max(r->ch[0], left, right);\n    if(r->ch[1]->left <= left) return query_max(r->ch[1], left, right);\n    return max(query_max(r->ch[0], left, r->ch[0]->right), \n               query_max(r->ch[1], r->ch[1]->left, right));\n\n}//\u67e5\u8be2\u533a\u95f4\u6700\u5927\nint main()\n{\n    root = &pool[0];\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n    Build_Tree(root, 1, n);\n    for(int i = 1; i <= n - m + 1; i++)\n    {\n        ans_min[i] = query_min(root, i, i + m - 1);\n        ans_max[i] = query_max(root, i, i + m - 1);\n    }\n    for(int i = 1; i <= n - m + 1; i++) printf(\"%d \", ans_min[i]);\n    printf(\"\\n\");\n    for(int i = 1; i <= n - m + 1; i++) printf(\"%d \", ans_max[i]);\n     return 0;\n}\n```\n\n",
        "postTime": 1516002638,
        "uid": 54745,
        "name": "Gypsophila",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "#\u7b80\u5355\u7684\u5355\u8c03\u961f\u5217\u64cd\u4f5c\n\n\n- \u5982\u9898\uff0c\u5f53\u5355\u8c03\u961f\u5217\u7528\u4e8e\u6ed1\u52a8\u7a97\u53e3\u65f6\u961f\u5217\u7684\u4e00\u4e2a\u5143\u7d20\u901a\u5e38\u9700\u8981\u8d2e\u5b58\u4e24\u90e8\u5206\u503c\uff1a\u5730\u5740\uff08\u6216\u4e0b\u8868\uff09\uff0c\u503c\uff1b\u8fd9\u91cc\u5b9a\u4e49```struct node{int id,val;}```\u6765\u8868\u793a\u4e00\u4e2a\u5143\u7d20\uff1b\n- \u5728\u961f\u5217\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\uff0c\u4e00\u822c\u6b65\u9aa4\u4e3a\n  1. \u4f20\u5165\u4e00\u4e2a```node```;\n  2. \u4e0e\u961f\u9996\u6bd4\u8f83\uff0c\u5728```greater/less```\u6761\u4ef6\u4e0b\u91cd\u590d\u5220\u9664\u5bf9\u624b\u77e5\u9053\u627e\u5230\u5408\u9002\u4f4d\u7f6e\uff08\u6216\u961f\u5217\u4e3a\u7a7a\uff09;\u4e3a\u4e86\u7b80\u6d01\u8d77\u89c1\uff0c\u7528\u4e00\u4e2abool\u53d8\u91cf```g```\u6765\u8868\u793a\u5728\u5bf9\u54ea\u4e00\u4e2a\u961f\u5217\uff08Q[i]\uff09\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e0d\u96be\u53d1\u73b0ii.\u6b65\u7684\u5faa\u73af\u6761\u4ef6\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a``` (g^(val<Q[i].front().val))```\n  3. \u63d2\u5165```node```;\n- \u67e5\u8be2\u65f6\u8fd4\u56deQ[i].back().val\u5373\u53ef\uff1b\n\n\n##Sample Code\n\n```cpp\n#include<cstdio>\n#include<deque>\nusing std::deque;\nstruct node {\n  int id,val;\n};\ndeque<node>Q[2];\nvoid push(const node&p,bool g) {\n  while(!Q[g].empty()&&(g^(p.val<=Q[g].front().val)))\n    Q[g].pop\\_front();\n  Q[g].push\\_front(p);\n}\nvoid pop(const int id,bool g) {\n  while(!Q[g].empty()&&Q[g].back().id<=id)\n    Q[g].pop\\_back();\n}\nint top(bool g) {\n  return Q[g].back().val;\n}\nint n,k,ans[2][1000000];\nint main() {\n  scanf(\"%d%d\",&n,&k);\n  for(int i=1,x; i<k; i++) {\n    scanf(\"%d\",&x);\n    push(node {i,x},0);\n    push(node {i,x},1);\n  }\n  for(int i=1,x; i<=n-k+1; i++) {\n    scanf(\"%d\",&x);\n    for(int j=0; j<2; j++) {\n      push(node {i+k-1,x},j);\n      ans[j][i]=top(j),pop(i,j);\n    }\n  }\n  for(int j=0; j<2; j++) {\n    for(int i=1; i<=n-k+1; i++) {\n      printf(\"%d \",ans[j][i]);\n    }\n    printf(\"\\n\");\n  }\n}\n```",
        "postTime": 1515681775,
        "uid": 34920,
        "name": "\u65e9\u53f3\u6615",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "**P\u515a\u7684\u9898\u89e3\u6765\u4e00\u53d1**\n\n\u5c06\u4e0b\u9762\u5927\u4f6c\u65b9\u6cd5\u7a0d\u5fae\u6c47\u603b\u4e00\u4e0b\n\n\u9996\u5148\n\u54b3\u54b3\n\u770b\u5230\u9898\u76ee\u5c31\u60f3\u5230\u4e86\u7ebf\u6bb5\u6811\u554a\n\n\u4e0d\u9700\u8981\u4fee\u6539\u6570\u636e\u554a\uff0c\u5c31\u662f\u5148\u5efa\u6811\uff0c\u7136\u540e\u627e[i,i+k-1]\u533a\u95f4\u91cc\u7684\u6700\u503c\n\n\u8fd9\u91cc\u9700\u8981\u4e24\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e00\u4e2a\u5173\u952e\u5b57\u662f\u6700\u5927\uff0c\u53e6\u4e00\u4e2a\u662f\u6700\u5c0f\n\n\u4e0b\u9762\u770b\u7740\u4ee3\u7801\u89e3\u91ca\n\n```cpp\nvar\n  a1,a2:longint;\n  len,i,j,m,n,k,p:longint;\n  ansmax,ansmin,a,l,r,lc,rc,keymax,keymin:array[0..2000005]of longint;//key\u662f\u5173\u952e\u5b57\uff0clc,rc\u662f\u5de6\u53f3\u5b69\u5b50\uff0cl,r\u662f\u8fd9\u4e2a\u70b9\u7ba1\u7684\u8303\u56f4\nfunction max(x,y:longint):longint;\nbegin\n  if x>y then exit(x)\n  else exit(y);\nend;\nfunction min(x,y:longint):longint;\nbegin\n  if x<y then exit(x)\n  else exit(y);\nend;\nprocedure built(x,y:longint);\nvar\n  now,mid:longint;\nbegin\n  inc(len); now:=len;\n  l[now]:=x; r[now]:=y;\n  lc[now]:=-1; rc[now]:=-1;//\u4e00\u5f00\u59cb\u8ba4\u4e3a\u6ca1\u6709\u5de6\u53f3\u5b69\u5b50\n  if x=y then\n    begin\n      keymax[now]:=a[x]; keymin[now]:=a[x];//\u5982\u679c\u53ea\u7ba1\u4e00\u4e2a\u70b9\u7684\u8bdd\n    end\n  else\n    begin\n      mid:=(x+y) div 2;//\u4e8c\u5206\uff0c\u5c06\u8303\u56f4\u5206\u7ed9\u5de6\u53f3\u5b69\u5b50\n      lc[now]:=len+1; built(x,mid);\n      rc[now]:=len+1; built(mid+1,y);\n      keymax[now]:=max(keymax[lc[now]],keymax[rc[now]]);\n      keymin[now]:=min(keymin[lc[now]],keymin[rc[now]]);\n    end;\nend;\nfunction findmax(now,x,y:longint):longint;\nvar\n  mid,a1,a2:longint;\nbegin\n  if (l[now]=x)and(r[now]=y) then\n    findmax:=keymax[now]\n  else\n    begin\n      a1:=lc[now]; a2:=rc[now];\n      mid:=(l[now]+r[now]) div 2;\n      if mid>=y then findmax:=findmax(a1,x,y) else//\u5982\u679c\u5168\u5728\u5de6\u5b69\u5b50\u7684\u8303\u56f4\u5185\n      if mid<x then findmax:=findmax(a2,x,y) else//\u5982\u679c\u5168\u5728\u53f3\u5b69\u5b50\u8303\u56f4\u5185\n      findmax:=max(findmax(a1,x,mid),findmax(a2,mid+1,y));//\u90fd\u6709\u7684\u8bdd\u5c31\u5728\u5de6\u53f3\u5b69\u5b50\u4e2d\u53d6\u4e2a\u6700\u503c\n    end;\nend;\nfunction findmin(now,x,y:longint):longint;//\u540c\u7406\u554a\nvar\n  mid,a1,a2:longint;\nbegin\n  if (l[now]=x)and(r[now]=y) then\n    findmin:=keymin[now]\n  else\n    begin\n      a1:=lc[now]; a2:=rc[now];\n      mid:=(l[now]+r[now]) div 2;\n      if mid>=y then findmin:=findmin(a1,x,y) else\n      if mid<x then  findmin:=findmin(a2,x,y) else\n      findmin:=min(findmin(a1,x,mid),findmin(a2,mid+1,y));\n    end;\nend;\nbegin\n  readln(n,k);\n  for i:=1 to n do read(a[i]);\n  len:=0; built(1,n);\n  if n<=k then//\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u7a97\u53e3\n    begin\n      a1:=-maxlongint; a2:=maxlongint;\n      for i:=1 to n do\n        begin\n          if a1<a[i] then a1:=a[i];\n          if a2>a[i] then a2:=a[i];\n        end;\n      writeln(a2); writeln(a1);\n    end\n  else\n    begin\n      for i:=1 to n-k+1 do\n        begin\n          ansmax[i]:=findmax(1,i,i+k-1);\n          ansmin[i]:=findmin(1,i,i+k-1);\n        end;\n    end;\n  for i:=1 to n-k+1 do write(ansmin[i],' '); writeln;\n  for i:=1 to n-k+1 do write(ansmax[i],' ');\nend.\n```\n\u4e4b\u540e\u6211\u53d1\u73b0\n**\u6ca1\u6709\u4fee\u6539\u529f\u80fd\u7684\u7ebf\u6bb5\u6811\uff0c\u592a\u6d6a\u8d39\u4e86\uff0c\u53ea\u670970\u5206TLE**\n\n\u4e0b\u9762\u5927\u4f6c\u5c31\u6709\u8bf4\u4e86 \u5355\u8c03\u961f\u5217\n\n\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u7684\u961f\u5217\uff0c\u4e00\u4e2a\u65b0\u7684\u5143\u7d20\u8fdb\u961f\u524d\uff0c\u5148\u4e0e\u961f\u5c3e\u5143\u7d20\u6bd4\u8f83\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u80fd\u52a0\u8fdb\u53bb\u5f62\u6210\u5355\u8c03\u961f\u5217\u7684\u4f4d\u7f6e\n\n\u961f\u5934\u5c31\u662f\u7b54\u6848\uff0c\u4f46\u662f\u8981\u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u5728\u7a97\u53e3\u8303\u56f4\u5185\n\n```cpp\nvar\n  i,j,m,n,k,p:longint;\n  a,f,num:array[0..1000005]of longint;\nprocedure max;\nvar\n  i,head,tail:longint;\nbegin\n  head:=1; tail:=1; f[1]:=a[1]; num[1]:=1;\n  for i:=2 to k do\n    begin\n      if f[tail]>a[i] then\n        begin\n          inc(tail);\n          f[tail]:=a[i]; num[tail]:=i;\n        end\n      else\n        begin\n          while (f[tail]<a[i])and(tail>=head) do dec(tail);\n          inc(tail); f[tail]:=a[i]; num[tail]:=i;\n        end;\n    end;\n  write(f[head],' ');\n  for i:=k+1 to n do\n    begin\n      if num[head]<i-k+1 then  inc(head);\n      if f[tail]>a[i] then\n        begin\n          inc(tail);\n          f[tail]:=a[i]; num[tail]:=i;\n        end\n      else\n        begin\n          while (f[tail]<a[i])and(tail>=head) do dec(tail);\n          inc(tail); f[tail]:=a[i]; num[tail]:=i;\n        end;\n      write(f[head],' ');\n    end;\nend;\nprocedure min;\nvar\n  i,head,tail:longint;\nbegin\n  head:=1; tail:=1; f[1]:=a[1]; num[1]:=1;\n  for i:=2 to k do\n    begin\n      if f[tail]<a[i] then\n        begin\n          inc(tail);\n          f[tail]:=a[i]; num[tail]:=i;\n        end\n      else\n        begin\n          while (f[tail]>a[i])and(tail>=head) do dec(tail);\n          inc(tail); f[tail]:=a[i]; num[tail]:=i;\n        end;\n    end;\n  write(f[head],' ');\n  for i:=k+1 to n do\n    begin\n      if num[head]<i-k+1 then inc(head);\n      if f[tail]<a[i] then\n        begin\n          inc(tail);\n          f[tail]:=a[i]; num[tail]:=i;\n        end\n      else\n        begin\n          while (f[tail]>a[i])and(tail>=head) do dec(tail);\n          inc(tail); f[tail]:=a[i]; num[tail]:=i;\n        end;\n      write(f[head],' ');\n    end;\nend;\nbegin\n  readln(n,k);\n  for i:=1 to n do read(a[i]);\n  min; writeln; max;\nend.\n```",
        "postTime": 1512308098,
        "uid": 39488,
        "name": "\u56af\u5440\u56af\u5440",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u77ed\u5c0f\u7cbe\u608d\u7684\u4ee3\u7801\n\nstl\u91cc\u63d0\u4f9b\u4e86\u4e00\u79cd\u53eb\u505adeque\u7684\u53cc\u7aef\u961f\u5217\u3002\n\n\u8fd9\u79cd\u961f\u5217\u652f\u6301\u5728\u961f\u9996\u548c\u961f\u5c3e\u63d2\u5165\u6216\u8005\u5220\u9664\u3002\n\n\u8fd9\u6837\u6b63\u597d\u89e3\u51b3\u4e86queue\u4e0d\u7528\u5e94\u7528\u4e8e\u5355\u8c03\u961f\u5217\u7684\u7f3a\u9677\u3002\n\n\u5173\u4e8edeque\u7684\u5404\u79cd\u7528\u6cd5\u3002\n\n\u4e00\u5f20\u56fe\u8db3\u4ee5\u6982\u89c8\n\n\n ![](https://cdn.luogu.com.cn/upload/pic/6918.png) \n\n\u5bf9\u4e8e\u672c\u9898\u800c\u8a00\u3002\u67e5\u8be2\u6700\u5927\u6700\u5c0f\u503c\u5176\u5b9e\u5c31\u662f\u6539\u4e00\u4e0b\u5165\u961f\u6761\u4ef6\u7684\u95ee\u9898\uff0c\n\n\u4e00\u4e2a\u4e09\u76ee\u8fd0\u7b97\u7b26\u89e3\u51b3\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<deque>\nusing namespace std;\nconst int MAXN=2000050;\nconst int maxn=0x7fffffff;\nvoid read(int &n){char c='+';int x=0;bool flag=0;while(c<'0'||c>'9'){c=getchar();if(c=='-')flag=1;}\nwhile(c>='0'&&c<='9'){x=x*10+(c-48);c=getchar();}flag==1?n=-x:n=x;}\nint n,k;\nint a[MAXN];\nstruct node\n{\n    int w,p;\n    node (int a,int b)    {w=a;p=b;}\n};\ndeque<node>q;\nvoid find(bool how)\n{\n    while(q.size())     q.pop_front();\n    for(int i=1;i<=n;i++)\n    {\n        while(q.size()!=0&&(how==0?(q.back().w<a[i]):(q.back().w>a[i])))    q.pop_back();\n        q.push_back(node(a[i],i)); \n        while(q.front().p<=(i-k))    q.pop_front();\n        if(i>=k)    printf(\"%d \",q.front().w);\n    }\n    printf(\"\\n\");\n}\nint main()\n{\n    read(n);read(k);\n    for(int i=1;i<=n;i++)    read(a[i]);\n    find(1);find(0);\n    return 0;\n}\n```",
        "postTime": 1502283996,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a\n\n1:\u628a\u5f53\u524d\u6700\u5c0f\u503c\u6ed1\u51fa\u53bb\u4e86\u3002\n\n2\u3001\u6ed1\u8fdb\u6765\u5f53\u524d\u7684\u6700\u5c0f\u503c\n\n3\u3001\u6ed1\u8fdb\u6765\u66f4\u5c0f\u7684\u503c\n\n\u4f7f\u7528\u5f53\u524d\u6700\u5c0f\u503c\u6570\u91cf+\u5f53\u524d\u6700\u5c0f\u503c\u5927\u5c0f\uff0c\n\n+-------------------------+\n\n|               \u52a8\u89c4                  |\n+-------------------------+\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n```cpp\n    for(int i=2;i<=n-k+1;i++)//\u6700\u4f18=n~0.0625n*n\n    {\n        nummin[i]=nummin[i-1];\n        if(a[i-1]==dmin[i-1]) {nummin[i]--;}\n        if(a[i+k-1]==dmin[i-1]) {nummin[i]++;}\n        if(nummin[i]>0) dmin[i]=dmin[i-1];\n        if(a[i+k-1]<dmin[i-1]) dmin[i]=a[i+k-1],nummin[i]=1;\n        if(nummin[i]==0)\n        {\n            for(int j=i;j<i+k;j++)\n            {\n                if(a[j]<dmin[i]) {dmin[i]=a[j];nummin[i]=1;}\n                else if(a[j]==dmin[i]) {nummin[i]++;}\n            }\n        }\n    }\n```\n\u4f18\u5316\uff1a\u5982\u679c\u4e0a\u5347\u65f6\u5c0f\u7684\u4e22\u5f97\u591a\uff0c\u5c31\u8981\u627e\u4e00\u904dk\uff0c\u6240\u4ee5\u6700\u574f\u60c5\u51b5\u662f\u5355\u8c03\u589e\uff0c0.25n\\*n\n\u6240\u4ee5\u4e0a\u5347\u591a\u679c\u65ad\n\n\u5012\u8fc7\u6765\u627e\uff01\uff08\u540e\u8fb9\u8fd8\u8981\u6574\u8fc7\u6765\uff09\n\n\u603b\u4f53\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\nusing namespace std;\nconst int MAXN=1000004;\nint dmin[MAXN],nummin[MAXN],dmax[MAXN],nummax[MAXN],a[MAXN];\nint n,k;\nint _up,_down;\nbool turned;\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    memset(dmin,127,sizeof(dmin));//2139062143\u662fmemset\u7684\u6700\u5927\u8d4b\u503c\n    memset(dmax,128,sizeof(dmax));//-2139062144\u662fmemset\u7684\u6700\u5c0f\u8d4b\u503c\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    if(k==1)\n    {\n        for(int i=1;i<=n;i++) printf(\"%d \",a[i]);\n        printf(\"\\n\");\n        for(int i=1;i<=n;i++) printf(\"%d \",a[i]);\n        //system(\"pause\");\n        return 0;\n    }\n    _up=_down=0;\n    for(int i=2;i<=n;i++)\n    {\n        if(a[i]>a[i-1]) _up++;\n        if(a[i]<a[i-1]) _down++;\n    }\n    if(_up>_down)\n    {\n        for(int i=1;i<=n/2;i++) swap(a[i],a[n+1-i]);\n        turned=true;\n    }\n    for(int i=1;i<=k;i++)\n    {\n        if(a[i]<dmin[1]) {dmin[1]=a[i];nummin[1]=1;}\n        else if(a[i]==dmin[1]) {nummin[1]++;}\n    }\n    for(int i=2;i<=n-k+1;i++)//\u6700\u4f18=n \u7279\u6b8a\u60c5\u51b5=k(n/2-k)=0.25n^2 \n    {\n        nummin[i]=nummin[i-1];\n        if(a[i-1]==dmin[i-1]) {nummin[i]--;}\n        if(a[i+k-1]==dmin[i-1]) {nummin[i]++;}\n        if(nummin[i]>0) dmin[i]=dmin[i-1];\n        if(a[i+k-1]<dmin[i-1]) dmin[i]=a[i+k-1],nummin[i]=1;\n        if(nummin[i]==0)\n        {\n            for(int j=i;j<i+k;j++)\n            {\n                if(a[j]<dmin[i]) {dmin[i]=a[j];nummin[i]=1;}\n                else if(a[j]==dmin[i]) {nummin[i]++;}\n            }\n        }\n    }\n    if(turned) for(int i=n-k+1;i>=1;i--) cout<<dmin[i]<<\" \";\n    else for(int i=1;i<=n-k+1;i++) cout<<dmin[i]<<\" \";\n    cout<<endl;\n    if(turned) for(int i=1;i<=n/2;i++) swap(a[i],a[n+1-i]);\n    for(int i=1;i<=k;i++)\n    {\n        if(a[i]>dmax[1]) {dmax[1]=a[i];nummax[1]=1;}\n        else if(a[i]==dmax[1]) {nummax[1]++;}\n    }\n    for(int i=2;i<=n-k+1;i++)//\u6700\u591an/k\u6b21*\u904d\u5386k=n \n    {\n        nummax[i]=nummax[i-1];\n        if(a[i-1]==dmax[i-1]) nummax[i]--;\n        if(a[i+k-1]==dmax[i-1]) nummax[i]++;\n        if(nummax[i]>0) dmax[i]=dmax[i-1];\n        if(a[i+k-1]>dmax[i-1]) dmax[i]=a[i+k-1],nummax[i]=1;\n        if(nummax[i]==0)\n        {\n            for(int j=i;j<i+k;j++)\n            {\n                if(a[j]>dmax[i]) {dmax[i]=a[j];nummax[i]=1;}\n                else if(a[j]==dmax[i]) {nummax[i]++;}\n            }\n        }\n    }\n    for(int i=1;i<=n-k+1;i++) cout<<dmax[i]<<\" \";\n    cout<<endl;\n    //system(\"pause\");\n    return 0;\n}\n\n```",
        "postTime": 1501257286,
        "uid": 38375,
        "name": "\u673a\u667a\u7684\u5c82\u51e1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u53ea\u8981\u4f60\u638c\u63e1\u4e86\u4e00\u79cd\u53eb\u5355\u8c03\u961f\u5217\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5176\u5b9e\u5927\u5bb6\u90fd\u4e0d\u4f1a\u89c9\u5f97\u592a\u96be\uff08\u4e0d\uff0c\u662f\u89c9\u5f97\u7b80\u5355\u6781\u4e86\uff09\u3002\u6211\u8fd9\u91cc\u5c31\u5927\u6982\u8bb2\u8bb2\u4e00\u4e0b\u5b83\u7684\u8fd0\u884c\u6a21\u5f0f\u3002\u5355\u8c03\u961f\u5217\u987e\u540d\u601d\u4e49\u5c31\u662f\u4e00\u79cd\u961f\u5217\uff0c\u4f46\u8fd9\u79cd\u5947\u5947\u602a\u602a\u7684\u961f\u5217\u662f\u4e24\u7aef\u90fd\u80fd\u51fa\u53bb\u7684\u3002\u800c\u4e14\u5b83\u6709\u4e2a\u5947\u5947\u602a\u602a\u7684\u89c4\u5219\u3002\u9996\u5148\u6211\u4eec\u5c31\u5047\u8bbe\u6211\u4eec\u53d6\u6700\u5c0f\u6570\uff0c\u90a3\u4e48\u6bcf\u6b21\u6570\u636e\u8fdb\u961f\u90fd\u8981\u4f7f\u81ea\u5df1\u6bd4\u524d\u9762\u7684\u6570\u5927\uff0c\u82e5\u4e0d\u884c\u5219\u5f39\u51fa\u524d\u9762\u7684\u6570\u76f4\u5230\u6ee1\u8db3\u6761\u4ef6\u3002\u82e5\u53d6\u6700\u5927\u6570\u53cd\u4e4b\u3002\u800c\u8fd9\u9053\u9898\u8fd8\u589e\u52a0\u4e86\u4e00\u4e2a\u53ef\u6ed1\u52a8\u7684\u7a97\uff0c\u6240\u4ee5\u6bcf\u5f53\u7a97\u53e3\u6ed1\u52a8\u4e00\u6b21\uff0c\u90fd\u8981\u5f39\u51fa\u961f\u9996\u7684\u6570\uff0c\u4f46\u524d\u63d0\u662f\u4e0a\u4e2a\u7a97\u53e3\u7684\u7b2c\u4e00\u4e2a\u6570\u6ca1\u88ab\u5f39\u51fa\u3002\n\n\u4e0b\u9762\u662f\u7a0b\u5e8f\u3002\n\n```cpp\n#include<cstdio> \nusing namespace std;\nint a[1000001],b[1000001];\nint main()\n{\n    int n,m,x,head=0,tail=1;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    if(m==0)return 0;\n    if(m==1)\n    {\n        for(int i=1;i<=n-1;++i)\n        printf(\"%d \",a[i]);\n        printf(\"%d\\n\",a[n]);\n        for(int i=1;i<=n-1;++i)\n        printf(\"%d \",a[i]);\n        printf(\"%d\",a[n]);\n    }\n    b[tail]=a[1];\n    tail++;\n    head++;\n    for(int i=2;i<=n;i++)\n    {\n        while(b[tail-1]>a[i]&&tail>head)\n        {\n            tail--;\n        }\n        b[tail]=a[i];\n        tail++;\n        if(i>=m&&i<n)\n        {    \n            printf(\"%d \",b[head]);\n            if(a[i-m+1]==b[head])\n                head++;\n        }\n        if(i==n)\n        printf(\"%d\\n\",b[head]);\n    }\n    head=0;\n    tail=1;\n    b[tail]=a[1];\n    tail++;\n    head++;\n    for(int i=2;i<=n;i++)\n    {\n        while(b[tail-1]<a[i]&&tail>head)\n        {\n            tail--;\n        }\n        b[tail]=a[i];\n        tail++;\n        if(i>=m&&i<n)\n        {    \n            printf(\"%d \",b[head]);\n            if(a[i-m+1]==b[head])\n                head++;\n        }\n        if(i==n)\n        printf(\"%d\",b[head]);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1498025774,
        "uid": 38032,
        "name": "bluewzl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u53ea\u7ed9\u601d\u8def\uff0c\u7a0b\u5e8f\u81ea\u5df1\u6253\u3002\u7ed9\u4e86\u601d\u8def\u57fa\u672c\u4e0a\u4e5f\u53ef\u4ee5\u60f3\u51fa\u7a0b\u5e8f\u4e86\u3002\n\n\n\u6cd51\uff1a\n\n\n\u7ef4\u62a4\u4e24\u4e2a\u5927\u5c0f\u4e3aK\u7684\u5806\uff08\u5927\u6839\u5806\u548c\u5c0f\u6839\u5806\uff09\uff0c\u4f7f\u5f97\u91cc\u9762\u7684\u5143\u7d20\u90fd\u662f\u7a97\u53e3\u5185\u7684\u5143\u7d20\u3002\n\n\n\u6548\u7387\u5206\u6790\uff1a\n\n\n......\u7ef4\u62a4\u5806\u81ea\u5df1\u5c1d\u8bd5\u5427\n\n\n\u6cd52\uff1a\u5229\u7528\u5355\u8c03\u961f\u5217\n\n\n\u8bf4\u660e\uff1a\n\n\n\u59cb\u7ec8\u7ef4\u62a4\u4e00\u4e2a\u4e0b\u6807\u9012\u589e\u3001\u503c\u4e5f\u9012\u589e\u7684\u961f\u5217\u3002\u5f53\u626b\u63cf\u5230\u7b2c i \u4e2a\u6570\u65f6\uff0c\u5c06\u961f\u5934\u4e0b\u6807<=i-k\u7684\u6570\u5220\u6389\uff08\u628a\u5165\u961f\u65f6\u95f4\u592a\u957f\u7684\u7ed9\u5220\u6389\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6ca1\u6709\u7528\u4e86\uff09\uff0c\u540c\u65f6\u5c06\u7b2c i\u4e2a\u6570\u63d2\u5165\u961f\u5c3e\uff08\u7684\u9002\u5f53\u5904\uff09\u6b64\u65f6\u961f\u5934\u5143\u7d20\u5373\u4e3a\u6240\u6c42\u6700\u5c0f\u503c\u3002\uff08GG\uff0cLOL,Orz\uff09\n\n\n\u6548\u7387\u5206\u6790\uff1a\n\n\nO(n)\uff0c\u8ddf\u5806\u4ea7\u751f\u9c9c\u660e\u7684\u5bf9\u6bd4\u3002\n",
        "postTime": 1481438455,
        "uid": 23845,
        "name": "Red_w1nE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": " \n\n\n\n\n\n\n```cpp\n//\u5c31\u6211\u4e00\u4e2a\u4eba\u7528\u7684\u7ebf\u6bb5\u6811\u5417\n//noip rp++\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define lson l,m,rt<<1\n#define rson m+1,r,rt<<1|1\nusing namespace std;\nconst int INF=1<<30;\nconst int maxn=2000000+100;\nint MAX[maxn*4],MIN[maxn*4];//\u6570\u7ec4\u5f004\u500d \nint n,k,x;\nvoid Pushup(int rt){\n    MAX[rt]=max(MAX[rt<<1],MAX[rt<<1|1]);\n    MIN[rt]=min(MIN[rt<<1],MIN[rt<<1|1]);//\u53ef\u4ee5\u540c\u65f6\u7ef4\u62a4 \n}\nvoid build(int l,int r,int rt){\n    if(l==r){\n        scanf(\"%d\",&x);\n        MAX[rt]=MIN[rt]=x;\n        return;\n    }\n    int m=(l+r)>>1;\n    build(lson);\n    build(rson);\n    Pushup(rt);//\u5411\u4e0a\u4f20\u9012\u533a\u95f4\u6700\u503c \n}\nint query_max(int L,int R,int l,int r,int rt){\n    if(L<=l&&r<=R){\n        return MAX[rt];\n    }\n    int m=(l+r)>>1,ret=-INF;\n    if(L<=m)ret=max(ret,query_max(L,R,lson));\n    if(R>m)ret=max(ret,query_max(L,R,rson));\n    return ret;\n}\n//\u6700\u5927\u4e0e\u6700\u5c0f\u7684\u6c42\u6cd5\u76f8\u540c \nint query_min(int L,int R,int l,int r,int rt){\n    if(L<=l&&r<=R){\n        return MIN[rt];\n    }\n    int m=(l+r)>>1,ret=INF;\n    if(L<=m)ret=min(ret,query_min(L,R,lson));\n    if(R>m)ret=min(ret,query_min(L,R,rson));\n    return ret;\n}\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    build(1,n,1);\n    for(int i=1;i<=n-k+1;i++)printf(\"%d \",query_min(i,i+k-1,1,n,1));\n    printf(\"\\n\");\n    for(int i=1;i<=n-k+1;i++)printf(\"%d \",query_max(i,i+k-1,1,n,1));\n    return 0;\n}\n```",
        "postTime": 1479199336,
        "uid": 20301,
        "name": "WLQ567",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u6ce8\u610f\u5982\u679c\u78b0\u5230\u4e24\u4e2a\u76f8\u7b49\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u5e94\u8be5\u820d\u53bb\u524d\u4e00\u4e2a\uff0c\u56e0\u4e3a\u5728\u540e\u9762\u7684\u5143\u7d20\u66f4\u201c\u5e74\u8f7b\u201d\u3002\n\n\u4e0b\u9762\u662f\u7ed9\u697c\u4e0b\u5b9e\u73b0\u7684\u4ee3\u7801\uff1a\n\n```pascal\nvar\n  i,j,n,k,h,t:longint;\n    a,f,minax:array[0..1000001]of longint;\nbegin\n    readln(n,k);\n    for i:=1 to n do read(a[i]);\n  h:=1;t:=1;\n    fillchar(f,sizeof(f),0);\n    f[1]:=1;\n    for i:=2 to k do begin\n      while (h<=t)and(a[f[t]]>a[i]) do dec(t);\n        inc(t);\n        f[t]:=i;\n    end;\n    minax[1]:=a[f[1]];\n    write(minax[1],' ');\n    for i:=2 to n-k+1 do begin\n      if f[h]<i then inc(h);\n        while (h<=t)and(a[f[t]]>a[i+k-1]) do dec(t);\n        inc(t);\n        f[t]:=i+k-1;\n        minax[i]:=a[f[h]];\n        write(minax[i],' ');\n    end;\n    writeln;\n---------------------------------------------//\u7b2c\u4e00\u884c\u6c42\u5b8c\u4e86\n  h:=1;t:=1;\n    fillchar(f,sizeof(f),0);\n    f[1]:=1;\n    for i:=2 to k do begin\n      while (h<=t)and(a[f[t]]<a[i]) do dec(t);\n        inc(t);\n        f[t]:=i;\n    end;\n    minax[1]:=a[f[1]];\n    write(minax[1],' ');\n    for i:=2 to n-k+1 do begin\n      if f[h]<i then inc(h);\n        while (h<=t)and(a[f[t]]<a[i+k-1]) do dec(t);\n        inc(t);\n        f[t]:=i+k-1;\n        minax[i]:=a[f[h]];\n        write(minax[i],' ');\n    end;\nend.\n```",
        "postTime": 1471043780,
        "uid": 3116,
        "name": "\u98de\u7fd4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\n# \u524d\u7f6e\u77e5\u8bc6\n\n\u5355\u8c03\u961f\u5217\uff0c\u5373\u5355\u8c03\u9012\u51cf\u6216\u5355\u8c03\u9012\u589e\u7684\u961f\u5217\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\u961f\u5217\u4e0d\u662f\u5c3e\u8fdb\u5934\u51fa\u5417\u600e\u4e48\u7ef4\u62a4\u5355\u8c03\u6027\u5462?\n\n\u6211\u4eec\u7075\u6d3b\u53d8\u901a\u4e00\u4e0b\u8ba9\u961f\u9996\u53ef\u8fdb\u53ef\u51fa,\u8ba9\u961f\u5c3e\u4e5f\u53ef\u8fdb\u53ef\u51fa\u4e0d\u5c31\u884c\u4e86\u5417?\n\n\u6ca1\u770b\u61c2\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u4e00\u4e0b\u4ee3\u7801\n\n~~~ cpp\n//\u6b64\u64cd\u4f5c\u5355\u8c03\u9012\u51cf\nfor(i=1;i<=n;i++)//a\u6570\u7ec4\u662f\u8981\u63d2\u5165\u7684\u6570\u7ec4,n\u4e3a\u4ed6\u7684\u957f\u5ea6\n{\n\twhile(head<=tail&&que[tail]<=a[i]) tail--;\n    //\u8fd9\u91cc\u53d6\u7b49\u4e8e\u53f7\u7684\u539f\u56e0\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2aoier\u6bd4\u4f60\u5c0f\u8fd8\u6bd4\u4f60\u5f3a\u6216\u4e00\u6837\u5f3a\u4f60\u5c31\u6253\u4e0d\u8fc7\u4ed6\u4e86QWQ\n    que[++tail]=a[i];\n}\n~~~\n# \u4f18\u5316\n\u4f9d\u7136\u662f\u90a3\u4e2a\u4f8b\u9898\n\n\u6211\u4eec\u5148\u6253\u4e00\u4e2a\u666e\u901a\u7684dp\n\n$f[i]$ \u8868\u793a\u4ee5i\u7ed3\u5c3e\u7684\u7a97\u53e3\u4e2d\u7684\u6700\u5927(\u5c0f)\u503c\n\n\u5219\n\n\n$f[i]$=$\\Sigma^{j=i-k+1}_{j<=i}$ $min(f[j])$\n\n\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u662f$O(n^2)$!\n\n\u96be\u4e0d\u6210\u4f60\u80fd\u964d\u4e00\u7ef4?\u4f60\u4ee5\u4e3a\u5355\u8c03\u961f\u5217\u4e86\u4e0d\u8d77\u554a.\n\n\u6ca1\u9519\u5355\u8c03\u961f\u5217\u5c31\u662f\u53ef\u4ee5\u4e3a\u6240\u6b32\u4e3a!\n\n\u6253\u5b8c\u66b4\u529bDP\u4ee3\u7801\u6211\u4eec\u53d1\u73b0\u5927\u90e8\u5206\u7684\u65f6\u95f4\u90fd\u6d6a\u8d39\u5728\u5bfb\u627e$i-k+1$~$i$\u4e2d\u7684\u6700\u5c0f\u503c\u4e0a.\n\n\u627e\u6700\u5c0f\u503c\u6211\u4eec\u601d\u8003\u4e00\u4e0b\u53d1\u73b0\u5806\u4f3c\u4e4e\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4f46\u662f\u6211\u4eec\u8981\u6709\u4e0a\u8fdb\u5fc3\n\n\u5806\u867d\u7136\u6bd4\u7ebf\u6bb5\u6811\u7684\u89e3\u6cd5\u8981\u66f4\u4f18\u79c0\u4f46\u662f\u8fd8\u662f\u5f88\u96be\u8fc7\u66f4\u9ad8\u7684\u6570\u636e.\n\n\u522b\u5fd8\u4e86\u6211\u4eec\u521a\u521a\u5b66\u4e86\u5355\u8c03\u961f\u5217\u6240\u4ee5\u8fd9\u9053\u9898\u76ee\u5c31\u53ef\u505a\u4e86\n\n\u6bcf\u6b21\u52a0\u5165a[i],\u5f53i>=k\u65f6\u53d6\u51fa\u961f\u9996\u7136\u540e\u8f93\u51fa\u5047\u8bbe\u961f\u9996\u7684\u4f4d\u7f6e\u4e0d\u5728\u533a\u95f4\u5185\u5c31\u5f39\u51fa\n~~(\u5c31\u597d\u50cf\u4f60\u592a\u8001\u4e86\u5fc5\u987b\u9000\u5f79)~~\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u6109\u5feb\u7684\u5199\u4ee3\u7801\u4e86~\n~~~ cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint num[1000001],p[1000001],a[1000001];\nint k,head,tail,n;\nvoid dpmin()\n{\n\tint i;\n\thead=0;\n\ttail=1;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\twhile(num[head]<=i-k&&head<=tail) ++head;\n\t\twhile(a[i]<=p[tail]&&head<=tail) --tail;\n\t\tp[++tail]=a[i];\n\t\tnum[tail]=i;\n\t\tif(i>=k) printf(\"%d \",p[head]);\n\t}\n\tprintf(\"\\n\");\n}\nvoid dpmax()\n{\n\tint i;\n\thead=0;\n\ttail=1;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\twhile(num[head]<=i-k&&head<=tail) ++head;\n\t\twhile(a[i]>=p[tail]&&head<=tail) --tail;\n\t\tp[++tail]=a[i];\n\t\tnum[tail]=i;\n\t\tif(i>=k) printf(\"%d \",p[head]);\n\t}\n}\nint main()\n{\n\tint i;\n\tscanf(\"%d%d\",&n,&k); \n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tdpmin();\n\tdpmax();\n}\n\n~~~\n\n\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u90fd\u53ea\u8fdb\u51fa\u961f\u5217\u6700\u591a\u4e00\u6b21\u6240\u4ee5\u662f$O(N)$\u7684\u5566!",
        "postTime": 1566025847,
        "uid": 86266,
        "name": "AFOer_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u62ff\u5230\u4e00\u9053\u65b0\u9898\n~~\u770b\u770bti jie~~\n\u53d1\u73b0\u5927\u4f6c\u4eec\u8bf4\u7ebf\u6bb5\u6811\u4f1a\u88ab\u5361\uff0c\u8981\u628a\u6700\u5927\u6700\u5c0f\u503c\u4e00\u8d77\u67e5\u8be2\n\n\u7b97\u6cd5\u662f\u4e0d\u53ef\u80fd\u4f18\u5316\u7684\uff0c\u8fd9\u8f88\u5b50\u90fd\u4e0d\u53ef\u80fd\u4f18\u5316\u7684\n\t\t\t\t\t\t\t\t\t--\u9c81\u8fc5\n\u6240\u4ee5\uff0c\u5148\u6765\u4e00\u53d1\u7ebf\u6bb5\u6811\u66b4\u529b\u9898\u89e3\uff08\u6700\u6162\u7684\u70b9970ms\uff09\n```cpp\n#include <cstdio>\nusing namespace std;\n#define R register\n#define MAXN 1000000+5\n#define inf 2147483647\nstruct node {int l,r,maxx,minn,mid;}t[MAXN<<2];\n\ninline int read();\ninline int ls(int x);\ninline int rs(int x);\ninline int max(int x,int y);\ninline int min(int x,int y);\ninline void build(int x,int l,int r);\ninline int find_max(int x,int LL,int RR);\ninline int find_min(int x,int LL,int RR);\n\nint main()\n{\n\tR int n=read(),k=read();\n\tbuild(1,1,n);\n\tR int end=n+1-k;\n\tfor(R int i=1;i<=end;i++) printf(\"%d \",find_min(1,i,i+k-1)); putchar('\\n');\n\tfor(R int i=1;i<=end;i++) printf(\"%d \",find_max(1,i,i+k-1)); putchar('\\n');\n\treturn 0;\n}\ninline int max(int x,int y)\n{\n\treturn x>y?x:y;\n}\ninline int min(int x,int y)\n{\n\treturn x<y?x:y;\n}\ninline int read()\n{\n\tR int x=0,f=1;\n\tchar a=getchar();\n\tfor(;a>'9'||a<'0';a=getchar()) if(a=='-') f=-1;\n\tfor(;a<='9'&&a>='0';a=getchar()) x=(x<<1)+(x<<3)+(a^48);\n\treturn x*f;\n}\ninline int ls(int x)\n{\n\treturn x<<1;\n}\ninline int rs(int x)\n{\n\treturn x<<1|1;\n}\ninline void build(int x,int l,int r)\n{\n\tt[x].maxx=-inf;t[x].minn=inf,t[x].mid=(l+r)>>1;\n\tt[x].l=l;t[x].r=r;\n\tif(l==r)\n\t{\n\t\tt[x].maxx=t[x].minn=read();\n\t\treturn;\n\t}\n\tbuild(ls(x),l,t[x].mid);\n\tbuild(rs(x),t[x].mid+1,r);\n\tt[x].minn=min(t[ls(x)].minn,t[rs(x)].minn);\n\tt[x].maxx=max(t[ls(x)].maxx,t[rs(x)].maxx);\n}\ninline int find_max(int x,int LL,int RR)\n{\n\tint maxx=-inf;\n\tif(t[x].l>=LL&&t[x].r<=RR) return t[x].maxx;\n\tif(LL<=t[x].mid) maxx=max(maxx,find_max(ls(x),LL,RR));\n\tif(RR>t[x].mid)  maxx=max(maxx,find_max(rs(x),LL,RR));\n\treturn maxx;\n}\ninline int find_min(int x,int LL,int RR)\n{\n\tint minn=inf;\n\tif(t[x].l>=LL&&t[x].r<=RR) return t[x].minn;\n\tif(LL<=t[x].mid) minn=min(minn,find_min(ls(x),LL,RR));\n\tif(RR>t[x].mid)  minn=min(minn,find_min(rs(x),LL,RR));\n\treturn minn;\n}\n```\n\n\u597d\uff0c\u73b0\u5728\u6b65\u5165\u6b63\u9898\n\n\u5355\u8c03\u961f\u5217\n-\n\u7528\u4e8e\u5904\u7406\u5b9a\u957f\u5b50\u533a\u95f4\u7684\u6700\u503c\u95ee\u9898\n\n\u60ca\u5947\u7684\u53d1\u73b0\u2014\u2014\u2014 \u672c\u9898\u53d8\u6210\u4e86\u6a21\u677f\n\u6bcf\u6b21\u632a\u52a8\u533a\u95f4\uff0c\u5728\u961f\u5217\u4e2d\u7ef4\u62a4\u533a\u95f4\uff0c\u6dfb\u52a0\u65f6\u6bd4\u8f83\u5f53\u524d\u5143\u7d20\u548c\u961f\u5217\u4e2d\u5143\u7d20\u5927\u5c0f\uff0c\u7ef4\u62a4\u5355\u8c03\u6027\uff0c\u90a3\u4e48\u961f\u5934\u5c31\u662f\u6700\u5927\u6216\u8005\u6700\u5c0f\u503c\n\u8bb0\u5f97\u8981\u5f39\u51fa\u8d85\u51fa\u533a\u95f4\u957f\u5ea6\u7684\u4e0d\u5408\u6cd5\u961f\u5934\n\u7136\u540e\u5c31\u53ef\u4ee5\u5199\u4ee3\u7801\u4e86\n(ps.deque\u771f\u597d\u7528\uff0cSTL\u4e07\u5c81\uff01)\n```cpp\n#include <cstdio>\n#include <deque>\nusing namespace std;\n#define R register\n#define MAXN 1000000+5\n#define inf 2147483647\n\ninline int read();\nint n,k;\nint s[MAXN];\ndeque<int> q;\nint main()\n{\n\tn=read(),k=read();\n\tfor(R int i=1;i<=n;i++) s[i]=read();\n\tR int pos=1;\n\tfor(R int i=1;i<=n+1;i++)\n\t{\n\t\tfor(;pos<i;pos++)\n\t\t{\t\n\t\t\tif(q.empty()) q.push_back(pos);\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile(q.size()&&s[pos]<=s[q.back()]) q.pop_back();\n\t\t\t\tq.push_back(pos);\n\t\t\t}\n\t\t}\n\t\twhile(q.size()&&i-q.front()>k) q.pop_front();\n\t\tif(i-k>0)\n\t\t{\n\t\t\tprintf(\"%d \",s[q.front()]);\n\t\t}\n\t}\n\tputchar('\\n');\n\tpos=1;q.clear();\n\tfor(R int i=1;i<=n+1;i++)\n\t{\n\t\tfor(;pos<i;pos++)\n\t\t{\t\n\t\t\tif(q.empty()) q.push_back(pos);\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile(q.size()&&s[pos]>=s[q.back()]) q.pop_back();\n\t\t\t\tq.push_back(pos);\n\t\t\t}\n\t\t}\n\t\twhile(q.size()&&i-q.front()>k) q.pop_front();\n\t\tif(i-k>0)\n\t\t{\n\t\t\tprintf(\"%d \",s[q.front()]);\n\t\t}\n\t}\n\tputchar('\\n');\n\treturn 0;\n}\n\ninline int read()\n{\n\tR int x=0,f=1;\n\tchar a=getchar();\n\tfor(;a>'9'||a<'0';a=getchar()) if(a=='-') f=-1;\n\tfor(;a<='9'&&a>='0';a=getchar()) x=(x<<1)+(x<<3)+(a^48);\n\treturn x*f;\n}\n```\n\uff08\u6700\u6162400ms)",
        "postTime": 1566006604,
        "uid": 139012,
        "name": "______OvO______",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "# 1886.\u6ed1\u52a8\u7a97\u53e3\n~~\u6211\u504f\u4e0d\u7528\u5355\u8c03\u961f\u5217~~\n\n\u524d\u666f:\u518d\u6b21\u56de\u53bb\u590d\u4e60\u590f\u4ee4\u8425\u8bfe\u7a0b\u7684\u65f6\u5019\u53d1\u73b0zcy\u8001\u5e08\u8bb2\u8fd9\u4e00\u9898\u4f3c\u4e4e\u53ef\u4ee5\u7528\u5806\n\n\u4f46\u662f\u4f3c\u4e4e\u4e25\u683c\u610f\u4e49\u4e0a\u4e0d\u53eb\u5bf9\u9876\u5806(\u5b9e\u9645\u4e0a\u53ea\u7528\u5230\u4e00\u4e2a\u5806)\n\n\u90a3\u6211\u4eec\u5c1d\u8bd5\u7528\u5806\u6765\u5199\u8fd9\u4e00\u9898\n\nSLT\u81ea\u5e26\u5806\u7684\u60c5\u51b5\u4e0b,\u65e2\u6709\u65b9\u4fbf\u4e4b\u5904\u4e5f\u6709\u4e0d\u65b9\u4fbf\u7684\u5730\u65b9\n\n\u5806\u53ef\u4ee5\u7ef4\u62a4\u6700\u503c,\u7136\u540e\u6211\u4eec\u6839\u636e\u9898\u610f,\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5bf9\u5e94\u533a\u95f4\u7684\u5806\u5c31\u884c\n\n\u81ea\u7136\u80fd\u60f3\u5230\u628a\u6bcf\u4e2a\u5143\u7d20\u4e22\u5806\u91cc,\u7136\u540e\u6bcf\u6b21\u5f39\u6389\u4e00\u4e2a\u7684\u540c\u65f6\u52a0\u8fdb\u6765\u4e00\u4e2a\n\n\u4e0d\u597d\u505a\u7684\u5c31\u662f\u6ca1\u6cd5\u786e\u5b9a\u6700\u5f00\u59cb,\u4e5f\u5c31\u662f\u533a\u95f4$[i,i+L]$\u524d\u9762\u7684\u5143\u7d20\u662f\u54ea\u4e9b\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4e00\u4e2avis\u6570\u7ec4\u89e3\u51b3\n\n```cpp\nfor(int i=1;i<=L;i++)\nq.push(a[i]);\nfor(int i=L+1;i<=n;i++)\n{\n  while(vis[q.top().id]) q.pop();\n  cout<<q.top().num<<endl;\n  vis[i-L]=1;\n  q.push(a[i]);\n}\nwhile(vis[q.top().id]) q.pop();\ncout<<q.top().num<<endl;\n```\n\n\u6211\u4eec\u628a\u5143\u7d20\u5e26\u7f16\u53f7\u5305\u6210\u4e00\u4e2a\u7ed3\u6784\u4f53ele\n\n\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5982\u679c\u503c\u76f8\u7b49\u6309\u7f16\u53f7\u6392\u5e8f,\u5426\u5219\u6309\u503c\u6392\u5e8f\n\n\u5176\u5b9e\u6839\u672c\u4e0d\u9700\u8981\u7ba1\u54ea\u4e9b\u5143\u7d20\u5728\u90a3\u4e2a\u533a\u95f4\u524d\u9762\n\n\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u6700\u5c0f\u503c\n\n\u6240\u4ee5\u7528vis\u6309\u987a\u5e8f\u6807\u8bb0\u5143\u7d20,\u6bcf\u6b21\u591a\u6807\u8bb0\u4e00\u4e2a,\u8f93\u51fa\u5806\u9876\u65f6\u5148\u5224\u65ad,\u5982\u679c\u88ab\u6807\u8bb0\u4e86\u90a3\u5c31\u8bf4\u660e\u8fd9\u4e2a\u6700\u5c0f\u503c\u51fa\u5c40\u4e86,\u5f39\u6389\u5c31\u597d\n\n\u76f4\u5230\u6700\u5c0f\u503c\u6ca1\u88ab\u6807\u8bb0,\u90a3\u5c31\u662f\u7b54\u6848\n\n\u4e0b\u9762\u4e3a\u5b8c\u6574\u4ee3\u7801,\u53ea\u8d34\u4e00\u4e2a\u6700\u5c0f,\u8981\u6539\u6210\u6700\u5927\u7684\u8bdd\u91cd\u8f7d\u8fd0\u7b97\u7b26\u91cc\u9762\u6539\u4e2a\u7b26\u53f7\u5c31\u884c,\u624b\u5199\u5806\u7684\u8bdd\u5199\u4e00\u904d\u6700\u5c0f\u7136\u540e\u590d\u5236\u7c98\u8d34 ~~\u4f46\u662f\u6211\u4e0d\u662f\u5f88\u60f3\u624b\u5199~~\n\n\u7528STL\u9ebb\u70e6\u7684\u5c31\u662f\u4f60\u4e0d\u80fd\u518d\u5b9a\u4e49\u4e00\u6b21\u4f18\u5148\u7ea7,\u6240\u4ee5\u4e00\u4efd\u91cc\u9762\u53ea\u80fd\u7ef4\u62a4\u4e00\u79cd\u6700\u503c\n\n\u590d\u6742\u5ea6\u662f$O(N+NlogN)$\n\n\u53cc\u4efd\u7684\u4e58\u4e2a2\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nstruct ele{\n  int num,id;\n}a[500010];\npriority_queue<ele>q;\nint vis[500010];\n\nbool operator < (ele a,ele b)\n{\n  if(a.num==b.num)\n  return a.id<b.id;\n  return a.num<b.num;//\u8fd9\u5730\u65b9\u6539\u4e00\u4e0b\u5c31\u80fd\u6539\u53d8\u7ef4\u62a4\u6027\u8d28\n}\n\nint main()\n{\n  int n,L;\n  scanf(\"%d%d\",&n,&L);\n  for(int i=1;i<=n;i++)\n  {\n    scanf(\"%d\",&a[i].num);\n    a[i].id=i;\n  }\n  for(int i=1;i<=L;i++)\n  q.push(a[i]);\n  for(int i=L+1;i<=n;i++)\n  {\n    while(vis[q.top().id]) q.pop();//\u5148\u5f39\n    \n    cout<<q.top().num<<endl;//\u8f93\u51fa\n    \n    vis[i-L]=1;//\u6807\u8bb0\n    q.push(a[i]);//\u6254\u5806\u91cc\n  }\n  while(vis[q.top().id]) q.pop();//\u6700\u540e\u4e00\u4e2a\u7a97\u53e3\u7684\u7b54\u6848\u522b\u5fd8\u4e86\u8f93\u51fa\n  cout<<q.top().num<<endl;\n  return 0;\n}\n\n```\n\n~~\u6253\u4e2a\u535a\u5ba2\u5e7f\u544a~~",
        "postTime": 1565752748,
        "uid": 58134,
        "name": "Methylene_Blue",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "**\u7ecf\u5178\u7684\u5355\u8c03\u961f\u5217\u95ee\u9898**\n\n\u5355\u8c03\u961f\u5217\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\uff1a\n\n* \u961f\u5217\u4e2d\u7684\u5143\u7d20\u5176\u5bf9\u5e94\u5728\u539f\u6765\u7684\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u5fc5\u987b\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\n* \u961f\u5217\u4e2d\u5143\u7d20\u7684\u5927\u5c0f\u5fc5\u987b\u662f\u5355\u8c03\u9012(\u589e/\u51cf/\u81ea\u5b9a\u4e49)\u3002\n\n---\n\n$que[]$ \u8868\u793a\u5355\u8c03\u961f\u5217\uff0c$id[]$ \u8868\u793a\u6240\u5bf9\u5e94\u5728\u539f\u5217\u8868\u91cc\u7684\u5e8f\u53f7\u3002\n\n> \u5f53\u7136\uff0c\u5b9e\u9645\u4e0a\u53ea\u4fdd\u7559 $id[]$ \u5c31\u8db3\u591f\u4e86\u3002\u4e00\u822c\u7684\u6211\u4eec\u4e5f\u65f6\u8fd9\u4e48\u505a\u7684\u3002\n\n\u5bf9\u4e8e\u6837\u4f8b\u6211\u4eec\u6709\uff1a\n```\n8 3\n1 3 -1 -3 5 3 6 7\n```\n1. \u6b64\u65f6\u961f\u4e2d\u6ca1\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u4ee4 $1$ \u8fdb\u961f\u3002 $que=\\{1\\},id=\\{1\\}$ \u3002\n\n2. \u5047\u5982\u628a $3$ \u653e\u8fdb\u53bb\uff0c\u5982\u679c\u540e\u9762 $2$ \u4e2a\u6570\u90fd\u6bd4\u5b83\u5927\uff0c\u90a3\u4e48 $3$ \u5c31\u6709\u53ef\u80fd\u6210\u4e3a\u6700\u5c0f\u7684\u3002\u6b64\u65f6\uff0c$que=\\{1,3\\},id=\\{1,2\\}$\u3002\n\n3. $que=\\{-1\\},id=\\{3\\}$\u3002\n\n4. $que=\\{-3\\},id=\\{4\\}$\u3002\n\n5. $que=\\{-3,5\\},id=\\{4,5\\}$\u3002\n\n6. $que=\\{-3,3\\},id=\\{4,6\\}$\u3002\n\n7. $que=\\{3,6\\},id=\\{6,7\\}$\u3002\n\n8. $que=\\{3,6,7\\},id=\\{6,7,8\\}$\u3002\n\n```\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 1000005;\nint que[maxn], id[maxn], a[maxn];\nint n, k;\n\nvoid solve_min()\n{\n    int l = 1, r = 1;\n    for(int i = 1 ; i <= n; i++){\n        while(l < r && a[i] < que[r - 1])\n            r--;\n        que[r] = a[i];\n        id[r++] = i;\n        while(id[l] <= i - k)\n            l++;\n        if(i >= k) printf(\"%d%c\", que[l], i == n ? '\\n' : ' ');\n    }\n}\nvoid solve_max()\n{\n    int l = 1, r = 1;\n    for(int i = 1 ; i <= n; i++){\n        while(l < r && a[i] > que[r - 1])\n            r--;\n        que[r] = a[i];\n        id[r++] = i;\n        while(id[l] <= i - k)\n            l++;\n        if(i >= k) printf(\"%d%c\", que[l], i == n ? '\\n' : ' ');\n    }\n}\nint main()\n{\n    scanf(\"%d%d\", &n, &k);\n    for(int i = 1; i <= n; i++){\n        scanf(\"%d\", &a[i]);\n    }\n    solve_min();\n    solve_max();\n    return 0;\n}\n```\n",
        "postTime": 1565442947,
        "uid": 188642,
        "name": "Xiefan_Guo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "[\u67e5\u770b\u539f\u9898\u8bf7\u6233\u8fd9\u91cc]( https://www.luogu.org/problemnew/show/P1886)\n\n# \u66b4\u529b\u505a\u6cd5\n\u679a\u4e3e\u5457\u2026\u2026\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\u3002\n\u663e\u7136\uff0c\u8fd9\u79cd\u590d\u6742\u5ea6\u4e0d\u662f\u6211\u4eec\u53ef\u4ee5\u63a5\u53d7\u7684\n# \u7ebf\u6bb5\u6811\u505a\u6cd5\nps\uff1a \u611f\u89c9\u8fd9\u4e1c\u897f\u8fd8\u662f\u66b4\u529b\u2026\u2026  \n\u7531\u4e8e\u8fd9\u9053\u9898\u76ee\u95ee\u7684\u662f\u533a\u95f4\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u53bb\u89e3\u51b3\u3002\uff08\u53ea\u6709\u67e5\u8be2\uff0c\u53ef\u597d\u6572\u4e86\uff09\u4f46\u662f\u5462\uff0c\u7531\u4e8e\u7ebf\u6bb5\u6811\u7684\u590d\u6742\u5ea6\u662f$O(nlogn)$\u7684\uff0c\u800c\u4e14ta\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u4f1a\u8d85\u65f6qwq  \n\u9644\u4e00\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<malloc.h> \n#define ll long long\n#define INF 0x7fffffff\n#define re register\n\nusing namespace std;\n\nint read()\n{\n    register int x = 0,f = 1;register char ch;\n    ch = getchar();\n    while(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n    while(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n    return x * f;\n}\n\nstruct tree{\n\tint maxx,minn;\n\ttree *lson,*rson;\n}*root = (tree*)malloc(sizeof(tree));\n\nstruct node{\n\tint a,b;\n}ans[1000005];\n\nvoid build(tree *tre,int l,int r)\n{\n\tif(l == r)\n\t{\n\t\ttre -> maxx = read();\n\t\ttre -> minn = tre -> maxx;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\ttree *son1 = (tree*)malloc(sizeof(tree));\n\ttree *son2 = (tree*)malloc(sizeof(tree));\n\ttre -> lson = son1;\n\ttre -> rson = son2;\n\tbuild(tre -> lson,l,mid);\n\tbuild(tre -> rson,mid + 1,r);\n\ttre -> maxx = max(tre -> lson -> maxx,tre -> rson -> maxx);\n\ttre -> minn = min(tre -> lson -> minn,tre -> rson -> minn);\n}\n\nnode query(tree *tre,int l,int r,int x,int y)\n{\n\tif(l == r) return (node){tre -> maxx,tre -> minn};\n\tint mid = (l + r) >> 1;\n\tnode t1,t2;\n\tt1.a = -INF; t1.b = INF; t2.a = -INF; t2.b = INF;\n\tif(x <= mid) t1 = query(tre -> lson,l,mid,x,y);\n\tif(y > mid) t2 = query(tre -> rson,mid + 1,r,x,y);\n\treturn (node){max(t1.a,t2.a),min(t1.b,t2.b)};\n}\n\nint main()\n{\n\tint n,k;\n\tn = read(); k = read();\n\tbuild(root,1,n);\n\tfor(int i = 1; i <= n - k + 1; i++) ans[i] = query(root,1,n,i,i + k - 1);\n\tfor(int i = 1; i <= n - k + 1; i++) printf(\"%d \",ans[i].b); printf(\"\\n\");\n\tfor(int i = 1; i <= n - k + 1; i++) printf(\"%d \",ans[i].a); printf(\"\\n\");\n\treturn 0;\n}\n```\n\n# \u5355\u8c03\u961f\u5217\u505a\u6cd5\n\u7ec8\u4e8e\u5230\u6b63\u89e3\u4e86\u2026\u2026  \n~~\u76f4\u63a5\u7528\u5355\u8c03\u961f\u5217\u778e\u641e\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5566~~\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n)$\u7684   \n\u5bf9\u4e8e\u6bcf\u6b21\u5165\u961f\uff0c\u6211\u4eec\u90fd\u8981\u5224\u65ad\u4e00\u4e0b\uff0c\u5982\u679c\u8be5\u6570\u5927\u4e8e\u961f\u5c3e\uff0c\u5219\u76f4\u63a5\u5165\u961f\uff0c\u5426\u5219\u5c06\u961f\u5217\u4e2d\u6240\u6709\u6bd4ta\u5c0f\u7684\u6570\u5b57\u5168\u90e8\u51fa\u961f\uff0c\u7136\u540e\u518d\u5165\u961f\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u961f\u5217\u7684\u5355\u8c03\u6027\u3002  \n\u5bf9\u4e8e\u6bcf\u6b21\u51fa\u961f\uff0c\u6211\u4eec\u90fd\u8981\u5224\u65ad\u4e00\u4e0b\u8981\u51fa\u961f\u7684\u5143\u7d20\u662f\u5426\u8fd8\u5728\u961f\u5217\u4e2d\uff08\u53ef\u80fd\u5728\u522b\u7684\u5143\u7d20\u5165\u961f\u7684\u65f6\u5019\u51fa\u961f\u4e86\uff09  \n\u9644\u4e00\u4e0b\u4ee3\u7801\uff1a \n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define ll long long\n#define INF 0x7fffffff\n#define re register\n\nusing namespace std;\n\nint read()\n{\n    register int x = 0,f = 1;register char ch;\n    ch = getchar();\n    while(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n    while(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n    return x * f;\n}\n\nint n,k,a[1000005],que[1000006],head=1,tail;\n\nvoid q_push1(int k)\n{\n\tif(head > tail)\n\t{\n\t\tque[++tail] = k;\n\t\treturn ;\n\t}\n\tif(k <= que[tail]) \n\t{\n\t\tque[++tail] = k;\n\t\treturn ;\n\t}\n\twhile(que[tail] < k && tail >= head) tail--;\n\tque[++tail] = k;\n}\n\nvoid q_push2(int k)\n{\n\tif(head > tail)\n\t{\n\t\tque[++tail] = k;\n\t\treturn ;\n\t}\n\tif(k >= que[tail])\n\t{\n\t\tque[++tail] = k;\n\t\treturn ;\n\t}\n\twhile(que[tail] > k && tail >= head) tail--;\n\tque[++tail] = k;\n}\n\nint main()\n{\n\tn = read(); k = read();\n\tfor(int i = 1; i <= n; i++) a[i] = read();\n\tfor(int i = 1; i <= n; i++)\n\t{\t\n\t\tif(i - k > 0)\n\t\t\tif(a[i - k] == que[head])\n\t\t\t\thead ++;\n\t\tq_push2(a[i]);\n\t\tif(i >= k)printf(\"%d \",que[head]);\n\t}\n\tprintf(\"\\n\");\n\thead = 1; tail = 0;\n\tfor(int i = 1; i <= n; i++)\n\t{\t\n\t\tif(i - k > 0)\n\t\t\tif(a[i - k] == que[head])\n\t\t\t\thead ++;\n\t\tq_push1(a[i]);\n\t\tif(i >= k)printf(\"%d \",que[head]);\n\t}\n    return 0;\n}\n\n```",
        "postTime": 1561688715,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u6ed1\u52a8\u7a97\u53e3-\u9898\u89e3"
    },
    {
        "content": "# \u4e00\u3001\u8bfb\u9898\n\n\u9996\u5148\u6211\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c\u662f\u5728\u6211\u4eec\u5468\u8d5b\u7684\u7b2c\u4e00\u9898\uff08\u6559\u7ec3\u53e3\u4e2d\u7684\u7b7e\u5230\u9898\uff09\uff0c\u6240\u4ee5\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\uff1a\u66b4\u529b\u51fa\u5947\u8ff9\uff01\u7136\u800c\u770b\u5230\u6570\u636e\u540e\u2026\u2026$n \\leqslant 10^6$\u2026\u2026\n\n\u90a3\u4e48\uff0c\u6211\u60f3\u4e86\u60f3\uff0c\u89c9\u5f97\u8fd9\u9053\u9898\u5e94\u8be5\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u96c6\u5408\u2026\u2026\u7136\u800c\u8fd9\u9053\u9898\u7684\u6b63\u89e3\u662f\u5355\u8c03\u961f\u5217\uff0c\u90a3\u6211\u4eec\u5c31\u7528\u5355\u8c03\u961f\u5217\u5427\n\n\uff08\u7ef4\u62a4\u96c6\u5408\u597d\u50cf\u4e5f\u6ca1\u95ee\u9898\uff09\n\n# \u4e8c\u3001\u5355\u8c03\u961f\u5217\u662f\u4ec0\u4e48\uff1f\n\n\u5f53\u6211\u542c\u5230\u8fd9\u4e2a\u8bcd\u7684\u65f6\u5019\uff0c\u6211\u5728\u60f3\uff1a\u989d\u961f\u5217\u5c31\u662f\u4e00\u4e2aFIFO\u7684\u4e1c\u897f\uff0c\u600e\u4e48\u7ef4\u62a4\u5355\u8c03\u5462\uff1f\u540c\u5b66\u7ed9\u6211\u8bb2\u4e86\u4e00\u4e0b\uff1a\n\n> \u5047\u8bbe\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff0c\u5141\u8bb8\u4ece\u961f\u5c3e\u63d2\u5165\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u961f\u5217\u5355\u8c03 _\uff08\u8fd9\u9053\u9898\u662f\u5355\u8c03\u9012\u589e\uff0c\u4e25\u683c\u4e0e\u5426\u6ca1\u5173\u7cfb\uff09_ \uff08\u4e0d\u8981\u6c42\u5143\u7d20\u4e00\u76f4\u4fdd\u7559\u5728\u961f\u5217\u91cc\uff09\n\n> \u90a3\u4e48\u6211\u4eec\u60f3\uff0c\u6267\u884c\u63d2\u5165\u65f6\uff0c\n\n> 1. \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u90a3\u4e48\u76f4\u63a5\u63d2\u5165\u5373\u53ef\uff08\u4e00\u5b9a\u5355\u8c03\uff09\n\n> 2. \u5982\u679c\u961f\u5217\u975e\u7a7a\uff0c\u90a3\u4e48\u91cd\u590d\u6267\u884c\u8fd9\u4e2a\u64cd\u4f5c\uff1a\n\n>> \u5982\u679c\u961f\u5934$>$\u8981\u63d2\u5165\u7684\u6570\uff0c**\u5f39\u51fa\u961f\u5934**\u3002\uff08\u56e0\u4e3a\u961f\u5934\u672c\u6765\u5e94\u8be5\u6bd4\u8981\u63d2\u5165\u7684\u6570\u5c0f\uff0c\u8fd9\u6837\u5b50\u77db\u76fe\u4e86\uff09\u4e00\u76f4\u6267\u884c\u5230**\u961f\u5934$\\geqslant$\u961f\u5c3e**\uff0c\u8fd9\u662f\u6ca1\u95ee\u9898\u4e86\uff0c\u7ee7\u7eed\u770b\u4e0b\u4e00\u4e2a\u8981\u63d2\u5165\u7684\u6570\u3002\n\n# \u4e09\u3001\u90a3\u4e48\u8fd9\u9053\u9898\u600e\u4e48\u505a\u5462\uff1f\n\n\u5c31\u662f\u6784\u9020\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u5373\u53ef\uff0c\u63d2\u5165\u5373\u7a97\u53e3\u6700\u53f3\u7aef\u52a0\u5165\u4e86\u4e00\u4e2a\u6570\uff0c\u6700\u5927\u6700\u5c0f\u76f4\u63a5\u83b7\u53d6\u961f\u5934\u961f\u5c3e\u5373\u53ef\u3002\uff08\u987a\u4fbf\u5410\u69fd\u4e00\u53e5\u4e3a\u4ec0\u4e48\u8981\u5f3a\u5236\u79bb\u7ebf\uff09**\u8bb0\u5f97\u5982\u679c\u961f\u5934\u4e0d\u518d\u7a97\u53e3\u91cc\u9762\u4e5f\u8981\u5f39\u51fa\uff01**\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <algorithm> \n\n#define MaxN 1000001\n\nstd::deque<std::pair<int, int> > max, min;\n// std::pair<int, int> \u90fd\u77e5\u9053\u4ec0\u4e48\u610f\u601d\u5427\n\nint mx[MaxN], mn[MaxN];\n\n#define dit std::deque<std::pair<int, int> >::iterator\n// \u4e3a\u4e86\u904d\u5386\u6574\u4e2astd::deque<std::pair<int, int> > \u800c\u8bbe\u7f6e\u7684\u8fed\u4ee3\u5668\n\nint main() {\n    int n, k, inp, cnt = 0;\n    scanf(\"%d%d\", &n, &k);\n    \n    #ifndef x\n    #define x inp\n    #endif\n    // \u8c03\u8bd5\u5185\u5bb9\n    \n    for (int i = 1; i <= n; ++ i) {\n        scanf(\"%d\", &x);\n        \n        while (!max.empty() && x >= max.back().second)\n            max.pop_back();\n        while (!min.empty() && x <= min.back().second)\n            min.pop_back();\n        // \u4fdd\u8bc1\u961f\u5217\u5355\u8c03\n        \n        max.push_back(std::make_pair(i, x));\n        min.push_back(std::make_pair(i, x));\n        \n        while (i - k >= max.front().first)\n            max.pop_front();\n        while (i - k >= min.front().first)\n            min.pop_front();\n        // \u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u5f04\u4e86\u4e24\u4e2a\u961f\u5217\uff08\u8bf7\u52ff\u6a21\u4eff\uff09\n        // \u6211\u5728\u5199\u8fd9\u6bb5\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u961f\u5c3eback()\u7a81\u7136\u5fd8\u4e86\uff0c\u4e8e\u662f\u2026\u2026\n        \n        if (i >= k) {\n            mx[cnt] = max.front().second;\n            mn[cnt ++] = min.front().second;\n        }\n    }\n    \n    for (int i = 0; i < cnt; ++ i)\n        printf(\"%d \", mn[i]);\n    putchar('\\n');\n    for (int i = 0; i < cnt; ++ i)\n        printf(\"%d \", mx[i]);\n    // \u8ba8\u538c\u5f3a\u5236\u79bb\u7ebf\n    \n    return 0;\n}\n```\n\n\u5199\u5b8c\u4ee3\u7801\u540e\u8dd1\u4e86\u8dd1\u6837\u4f8b\uff0c\u9505\u4e86\uff0c\u8c03\u8fc7\u4e4b\u540e\u76f4\u63a5\u4ea4\u4e00\u53d1\u4e00\u6b21A\u4e86\u2026\u2026\n\n[AC\u8bb0\u5f55](https://www.luogu.org/recordnew/show/18965377)~~\uff0c\u5ffd\u7565\u5f00\u5934\u90a3\u4e9b\u5947\u5947\u602a\u602a\u7684\u4f18\u5316~~",
        "postTime": 1558316506,
        "uid": 92066,
        "name": "Kuriyama_Mirai",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u5355\u8c03\u961f\u5217\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u4e00\u79cd\u961f\u5217\u3002\n\n\u5728\u8fdb\u5165\u6b63\u6587\u4e2d\uff0c\u6211\u4eec\u5148\u6765\u770b\u8fd9\u4e48\u4e00\u4e2a\u95ee\u9898\uff1a[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1886)  \n\n\u73b0\u5728\u6709\u4e00\u5806\u6570\u5b57\u5171N\u4e2a\u6570\u5b57\uff08N<=10^6\uff09\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5927\u5c0f\u4e3ak\u7684\u7a97\u53e3\u3002\u73b0\u5728\u8fd9\u4e2a\u4ece\u5de6\u8fb9\u5f00\u59cb\u5411\u53f3\u6ed1\u52a8\uff0c\u6bcf\u6b21\u6ed1\u52a8\u4e00\u4e2a\u5355\u4f4d\uff0c\u6c42\u51fa\u6bcf\u6b21\u6ed1\u52a8\u540e\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\n\n\u4f8b\u5982\uff1a\n\nThe array is [1 3 -1 -3 5 3 6 7], and k = 3\n\n![](https://cdn.luogu.com.cn/upload/pic/688.png)\n\n\u6211\u4eec\u770b\u5230\u9898\u9762\u540e\uff0c\u9996\u5148\u4e00\u4e2a\u601d\u8def\uff1a\u66b4\u529b\u679a\u4e3e\uff01\u6211\u4eec\u53ea\u8981\u5728$k-n$\u4e2a\u6570\u4e2d\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u6700\u540e\u53d6$min$\u6216\u53d6$max$\u5373\u53ef,\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<iostream>\nusing namespace std;\nint n,k;\nint a[3000003];\nint f[3000003];\nint read() {\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') {\n        if(ch=='-') f=-f;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nint main() {\n\tn=read();k=read();\n\tint l=0;\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tfor(int i=k;i<=n;i++) {\n\t\tint maxn=-0xfffff,minx=0xfffff;\n\t\tfor(int j=i-k+1;j<=i;j++) {\n\t\t\tif(a[j]>maxn) maxn=a[j];\n\t\t\tif(a[j]<minx) minx=a[j];\n\t\t}\n\t\tcout<<minx<<\" \";\n\t\tf[++l]=maxn;\n\t}\n\tcout<<endl;\n\tfor(int i=1;i<=l;i++) cout<<f[i]<<\" \";\n}\n```\n\u7136\u800c\u7406\u60f3\u662f\u7f8e\u597d\u7684\uff0c\u4f46\u662f\u73b0\u5b9e\u5374\u662f\u53ef\u6015\u7684\uff1a\n\n\u6570\u636e\u8303\u56f4\n\n$50%$\u7684\u6570\u636e\uff0c$n<=10^5$\n\n$100%$\u7684\u6570\u636e\uff0c$n<=10^6$\n\n\u5bf9\u4e8e\u8fd9\u7ec4\u6570\u636e\uff0c\u6211\u4eec $O ( n* k)$\u7684\u65b9\u6cd5\u53ea\u80fd\u62ff$70$\u5206(\u4e5f\u8bb8\u662f\u6211\u592a\u849f\u4e86) \u6240\u4ee5\u6211\u4eec\u8981\u5f15\u8fdb\u4e00\u79cd\u65b0\u7684\u7b97\u6cd5\uff1a\u5355\u8c03\u961f\u5217\n\n\u8ba9\u6211\u4eec\u5148\u6765\u7406\u89e3\u4e00\u4e0b\u5355\u8c03\u961f\u5217\u7684\u5de5\u4f5c\u60c5\u51b5\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6709\u6846\u7684\u961f\u5217\u4e2d\uff0c\u6211\u4eec\u6bcf\u6b21\u8bfb\u5165\u4e00\u4e2a\u6570\uff0c\n\n$For$ $example$\n\n\u6709\u8fd9\u4e48\u4e00\u7ec4\u6570\uff1a\n\n$1$ $2$ $3$ $2$ $5$ $6$ $7$ $8$ $9$ $10$\n\n$k=3$\n\n\u6211\u4eec\u5148\u8bfb\u5165$1$,\u56e0\u4e3a\u6ca1\u6709\u961f\u9996\uff0c\u5c31\u5c06\u4ed6\u52a0\u5165\u961f\u3002\n\n\u63a5\u7740\uff0c\u8bfb\u5165$2$,$2$\u6bd4$1$\u5927\u4e14$2$\u5728$1$\u4e4b\u540e$,$\u6240\u4ee5,\u6211\u4eec\u5c06$2$\u5165\u961f\uff0c$1$\u51fa\u961f\n\n\u540c\u7406\uff0c\u6211\u4eec\u63a5\u7740\u8bfb\u5165$3$\n\n\u53ef\u662f\uff0c\u5230\u4e86$2$\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c$2$<$3$,\u4f46\u662f\uff0c$2$\u5728$3$\u4e4b\u540e\u51fa\u73b0\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5c06$2$\u5165\u961f,\u6240\u4ee5$,$\u5355\u8c03\u961f\u5217\u4e2d\u53d8\u6210\u4e86$3$ $2$\n\n\u63a5\u7740,\u6211\u4eec\u8bfb\u5165$4$,\u56e0\u4e3a$4>3>2$,\u6240\u4ee5\uff0c\u6211\u4eec\u5c06$2$\u4e0e$3$\u51fa\u961f\uff0c\u961f\u5217\u4e2d\u53ea\u7559\u4e0b$4$\n\n\u540c\u7406\uff0c\u6211\u4eec\u540e\u9762\u5c31\u662f\u4e0d\u65ad\u5730\u51fa\u961f\uff0c\u5165\u961f\u7684\u60c5\u51b5\u3002\n\n\u90a3\u6709\u4eba\u53ef\u80fd\u4f1a\u8bf4\uff0c\u90a3$2$\u5165\u961f\u6709\u4ec0\u4e48\u7528\uff1f\n\n\u90a3\u6211\u4eec\u518d\u6765\u770b\u4e00\u7ec4\u6570\u636e\uff1a\n\n$1$ $2$ $3$ $2$ $1$:$k=2$\n\n\u8fd9\u7ec4\u6570\u636e\uff0c\u524d\u9762\u90fd\u4e0e\u4e4b\u524d\u4e00\u6837\uff0c\n\n\u5230$1$\u5165\u961f\u65f6,\u60c5\u51b5\u5c31\u53d1\u751f\u4e86\u53d8\u5316\uff1a\n\n\u6b64\u65f6$3$\u7531\u4e8e$k=2$\u51fa\u961f\n\n\u90a3\u4e48,\u961f\u9996\u5c31\u53d8\u6210\u4e86$2$,\u90a3\u6211\u4eec\u5c31\u8f93\u51fa$2$,\n\n\u6240\u4ee5\u8fd9\u5c31\u662f\u961f\u9996$>$\u8bfb\u5165\u7684\u6570,\u4f46\u4ecd\u8981\u5165\u961f\u7684\u539f\u56e0\n\n# \u603b\u7ed3\uff1a\n\n\u6211\u4eec\u6bcf\u8bfb\u5165\u4e00\u4e2a\u6570\uff0c\u5c31\u5c06\u4ed6\u4e0e\u961f\u9996\u6bd4\u8f83$:$\n\n\u5982\u679c\u961f\u9996\u6bd4\u4ed6\u5c0f\uff0c\u90a3\u4e48\u961f\u4e2d\u6bd4\u8fd9\u4e2a\u6570\u5c0f\u7684\u90fd\u51fa\u961f(\u8fd9\u4e2a\u6570\u7684\u53ef\u6301\u4e45\u6027\u6bd4\u961f\u4e2d\u7684\u5f3a\u4e14\u8fd9\u4e2a\u6570\u6bd4\u961f\u9996\u5927)\n\n\u5982\u679c\u8fd9\u4e2a\u6570\u6bd4\u961f\u9996\u5c0f\uff0c\u5c06\u4ed6\u5165\u961f\uff1a\n\n\u5982\u679c\u8001\u7684\u6570\u8d85\u51fa\u8303\u56f4\uff0c\u5c06\u4ed6\u51fa\u961f\uff1a\n\n\u6700\u7ec8\uff0c\u961f\u4e2d\u7559\u4e0b\u7684\u5c31\u662f\u6700\u5927\u7684\u6216\u6700\u5e74\u8f7b\u7684,\u4ee3\u7801$:$\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\n#define maxn 2000003\n#define f(i,a,b) for(int i=a;i<=b;i++)\nint a[maxn];\nstruct s{\n    int id;\n    int num;\n};\ns f[maxn];\nint l=1;\nint r;\nint n,m;\nint read() {\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') {\n        if(ch=='-') f=-f;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid write(int x) {\n    if(x<0) {\n        putchar('-');\n        x=-x;\n    }\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint main() {\n    n=read();m=read();\n    for(int i=1;i<=n;i++) {\n        a[i]=read();\n    }\n    int sum=0;\n    f(i,1,n+1) {\n        if(sum<m) sum++;\n        else if(l<=r) {\n            if(f[l].id+m<i) l++;\n            write(f[l].num);\n            putchar(' ');\n        }\n        while(f[r].num>=a[i]&&l<=r) r--;\n        f[++r].num=a[i];\n        f[r].id=i;\n    }\n    putchar('\\n');\n    l=1;r=0;sum=0;\n    memset(f,0,sizeof(f));\n    f(i,1,n+1) {\n        if(sum<m) sum++;\n        else if(l<=r) {\n            if(f[l].id+m<i) l++;\n            write(f[l].num);\n            putchar(' ');\n        }\n        while(f[r].num<=a[i]&&l<=r) r--;\n        f[++r].num=a[i];\n        f[r].id=i;\n    }\n}\n```\n$PS:read$\u548c$write$\u53ef\u4ee5\u5ffd\u7565\n\n[\u4e3a\u4e86\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff0c\u987a\u4fbf\u5b89\u5229\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/RealMadrid/articles/10599588.html)",
        "postTime": 1553581527,
        "uid": 77119,
        "name": "\u4efb\u5f08\u51e1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u6700\u8fd1\u521a\u5b66\u4e86\u5206\u5757\uff0c\u53c8\u5bf9\u7ebf\u6bb5\u6811\u4e0d\u592a\u719f\u6089\uff0c\u800c\u4e14\u9898\u89e3\u91cc\u90fd\u662f\u4f18\u5148\u961f\u5217\uff0c\u4e8e\u662f\u6211\u5c31\u7528\u5206\u5757\u6253\u4e86\u8fd9\u9053\u9898\u3002\n\n**\u6838\u5fc3\u601d\u8def\uff1a\u6bcf\u4e2a\u5757\u4e2d\u7ef4\u62a4\u4e00\u4e2a\u5757\u5185\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\u6bcf\u6b21\u79fb\u52a8\u7a97\u53e3\u7684\u65f6\u5019\u5224\u65ad\u7a97\u6237\u524d\u4e00\u4e2a\u5143\u7d20\uff08\u4e5f\u5c31\u662f\u521a\u62ff\u8d70\u7684\u5143\u7d20\uff09\u662f\u5426\u4e3a\u6700\u5927\u503c/\u6700\u5c0f\u503c\uff0c\u5982\u679c\u4e0d\u662f\u5c31\u76f4\u63a5\u548c\u7a97\u53e3\u65b0\u52a0\u8fdb\u6765\u7684\u5143\u7d20\u6bd4\u8f83\u5927\u5c0f\uff0c\u5426\u5219\u91cd\u65b0\u5728\u5757\u4e0a\u641c\u7d22\u6700\u5927\u503c\u3002**\n\n**\u82e5\u6bcf\u6b21\u79fb\u52a8\u7a97\u53e3\u90fd\u641c\u7d22\u4e00\u904d\uff0c\u5c31\u53ea\u670960\u5206\u3002\u56e0\u4e3a\u7a97\u53e3\u4f1a\u5f88\u5927\uff0c\u800c\u5176\u4e2d\u7684\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\u53ef\u80fd\u4f1a\u4e00\u76f4\u90fd\u662f\u7ecf\u8fc7\u5b83\u7684\u7a97\u53e3\u4e2d\u7684\u6700\u5c0f/\u5927\u503c\uff0c\u6240\u4ee5\u53ea\u8981\u5224\u65ad\u5728\u79fb\u52a8\u7a97\u53e3\u7684\u65f6\u5019\u4f1a\u4e0d\u4f1a\u4ece\u8fd9\u79cd\u503c\u4e0a\u9762\u79fb\u8d70\uff0c\u5c31\u4f1a\u51cf\u5c11\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u641c\u7d22\u3002**\n\n```cpp\n#include <iostream>\nusing namespace std;\nint n,k,size,pos[1000001];\nlong long maxx[1000001],minn[1000001],a[1000001],maxxx,minnn;\nvoid ask1(int l,int r)//\u6700\u5c0f\u503c\n{\n\tminnn=19260817604;\n\tfor(int i=pos[l]+1;i<pos[r];i++)minnn=min(minnn,minn[i]);\n\tfor(int i=l;i<=min(r,pos[l]*size);i++)minnn=min(minnn,a[i]);\n\tif(pos[l]!=pos[r])\n\t{\n\t\tfor(int i=(pos[r]-1)*size+1;i<=r;i++)minnn=min(minnn,a[i]);\n\t}\n\treturn;\n}\nvoid ask2(int l,int r)//\u6700\u5927\u503c\n{\n\tmaxxx=-19260817604;\n\tfor(int i=pos[l]+1;i<pos[r];i++)maxxx=max(maxxx,maxx[i]);\n\tfor(int i=l;i<=min(r,pos[l]*size);i++)maxxx=max(maxxx,a[i]);\n\tif(pos[l]!=pos[r])\n\t{\n\t\tfor(int i=(pos[r]-1)*size+1;i<=r;i++)maxxx=max(maxxx,a[i]);\n\t}\n\treturn;\n\t\n}\nint main()\n{\n\tcin>>n>>k;\n\tfor(size=1;size*size<=n;size++);size--;//\u61d2\u5f97\u7528cmath\u5e93\u4e2d\u7684sqrt\uff0c\u5c31\u7528\u8fd9\u79cd\u571f\u529e\u6cd5\u4e86\n\tfor(int i=1;i<=n;i++)//\u8fb9\u8f93\u5165\u8fb9\u5efa\u5757\n\t{\n\t\tcin>>a[i];\n\t\tpos[i]=(i-1)/size+1;\n\t\tmaxx[pos[i]]=max(a[i],maxx[pos[i]]);//\u5757\u5185\u6700\u5927\u503c\n\t\tminn[pos[i]]=min(a[i],minn[pos[i]]);//\u5757\u5185\u6700\u5c0f\u503c\n\t}\n\tfor(int i=1;i<=n-k+1;i++)\n\t{\n\t\tif(a[i-1]==minnn)ask1(i,i+k-1);//\u5224\u65ad\u662f\u5426\u9700\u8981\u91cd\u65b0\u641c\u7d22\uff0c\u5176\u4e2dminnn\u662f\u524d\u4e00\u4e2a\u7a97\u53e3\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u6240\u4ee5\u5728\u8be2\u95ee\u7684\u51fd\u6570\u4e2d\u5c31\u81ea\u52a8\u66f4\u65b0\u4e86\n\t\telse minnn=min(a[i+k-1],minnn);//\u5982\u679c\u521a\u4ece\u7a97\u53e3\u4e2d\u88ab\u79fb\u8d70\u7684\u6570\u4e0d\u662f\u6700\u5c0f\u7684\uff0c\u5c31\u4e0d\u7ba1\u4e86\uff0c\u76f4\u63a5\u548c\u540e\u9762\u52a0\u8fdb\u6765\u7684\u65b0\u5143\u7d20\u6bd4\u8f83\u5c31\u597d\u4e86\n\t\tcout<<minnn<<' ';\n\t}\n\tcout<<endl;\n\tfor(int i=1;i<=n-k+1;i++)//\u6c42\u6700\u5927\u548c\u6700\u5c0f\u5dee\u4e0d\u591a\n\t{\n\t\tif(a[i-1]==maxxx)ask2(i,i+k-1);\n\t\telse maxxx=max(a[i+k-1],maxxx);\n\t\tcout<<maxxx<<' ';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1540040540,
        "uid": 14381,
        "name": "1jia1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "~~\u666e\u901a\u7ebf\u6bb5\u6811\u5c31\u597d\u4e86\u554a~~\n\n\u5f53\u7136 \u7b2c\u4e00\u6b21T\u4e86\u6700\u540e\u4e00\u4e2a\u70b9\n\n\u4e3a\u5565\u4f1aT\u5462 \n\n\u67e5\u8be2\u6b21\u6570\u592a\u591a\u4e86\uff0c\u90a3\u5c31\u7a0d\u7a0d\u526a\u526a\u679d\u5457\n\n\u4e0a\u4ee3\u7801\n\n\n------------\n```cpp\n\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint a[1000100];\nint maxtree[8000100];\nint mintree[8000100];\nint n,k;\nint readin(){\n\tint yi=0,ri=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-'){\n\t\t\tri=-1;\n\t\t}\n\t\tc=getchar();\n\t}\n\tfor(;isdigit(c);c=getchar()){\n\t\tyi=yi*10+c-'0';\n\t}\n\treturn yi*ri;\n}\nvoid maketree(int tip,int l,int r){\n\tif(l==r){\n\t\tmaxtree[tip]=a[l];\n\t\tmintree[tip]=a[l];\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tmaketree(tip*2,l,mid);\n\tmaketree(tip*2+1,mid+1,r);\n\tmaxtree[tip]=max(maxtree[tip*2],maxtree[tip*2+1]);\n\tmintree[tip]=min(mintree[tip*2],mintree[tip*2+1]);\n}\nint find1(int tip,int l,int r,int lf,int rf){\n\tif(l==lf&&r==rf){\n\t\treturn maxtree[tip];\n\t}\n\tint mid=(l+r)>>1;\n\tif(rf<=mid){\n\t\treturn find1(tip*2,l,mid,lf,rf);\n\t}\n\tif(lf>mid){\n\t\treturn find1(tip*2+1,mid+1,r,lf,rf);\n\t}\n\treturn max(find1(tip*2,l,mid,lf,mid),find1(tip*2+1,mid+1,r,mid+1,rf));\n}\nint find2(int tip,int l,int r,int lf,int rf){\n\tif(l==lf&&r==rf){\n\t\treturn mintree[tip];\n\t}\n\tint mid=(l+r)>>1;\n\tif(rf<=mid){\n\t\treturn find2(tip*2,l,mid,lf,rf);\n\t}\n\tif(lf>mid){\n\t\treturn find2(tip*2+1,mid+1,r,lf,rf);\n\t}\n\treturn min(find2(tip*2,l,mid,lf,mid),find2(tip*2+1,mid+1,r,mid+1,rf));\n}\nint main(){\n\tn=readin();\n\tk=readin();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=readin();\n\t}\n\tmaketree(1,1,n); \n\tint minn=find2(1,1,n,1,k);\n\tcout<<minn<<\" \";\n\tfor(int i=2;i<=n-k+1;i++){\n\t\tif(a[k+i-1]<=minn){//\u5982\u679c\u4e0b\u4e00\u4e2a\u6bd4\u5f53\u524d\u6700\u5c0f\u7684\u5c0f \u90a3\u4e0b\u4e00\u4e2a\u5c31\u662f\u65b0\u533a\u95f4\u4e2d\u6700\u5c0f\u7684\n\t\t\tminn=a[k+i-1];\n\t\t\tcout<<minn<<\" \";\n\t\t\tcontinue;\n\t\t}\n\t\tif(a[i-1]>minn){//\u521a\u521a\u6d3e\u51fa\u53bb\u7684\u90a3\u4e2a\u5982\u679c\u6bd4\u533a\u95f4\u4e2d\u7684\u6700\u5c0f\u7684\u5927 \u90a3\u6700\u5c0f\u7684\u4e0d\u53d7\u5f71\u54cd\n\t\t\tcout<<minn<<\" \";\n\t\t\tcontinue;\n\t\t}\n\t\tminn=find2(1,1,n,i,k+i-1);\n\t\tcout<<minn<<\" \";\n\t}\n\tcout<<endl;\n\tint maxn=find1(1,1,n,1,k);\n\tcout<<maxn<<\" \";\n\tfor(int i=2;i<=n-k+1;i++){\n\t\tif(a[k+i-1]>=maxn){\n\t\t\tmaxn=a[k+i-1];\n\t\t\tcout<<maxn<<\" \";\n\t\t\tcontinue;\n\t\t}\n\t\tif(a[i-1]<maxn){\n\t\t\tcout<<maxn<<\" \";\n\t\t\tcontinue;\n\t\t}\n\t\tmaxn=find1(1,1,n,i,k+i-1);\n\t\tcout<<maxn<<\" \";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1534418946,
        "uid": 26988,
        "name": "\u50da\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5217$\\{a_n\\}(a_i\\in\\mathbb Z)$\uff0c\u4e24\u4e2a\u6574\u6570$n,k$\uff0c\u6c42\u6bcf\u4e00\u4e2a\u533a\u95f4$[a_i,a_{i+k-1}]$\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\n\n\u76ee\u524d\u8fd9\u4e2a\u9898\u7684\u6700\u4f18\u7b97\u6cd5\u662f\u5355\u8c03\u961f\u5217\u3002\u6ce8\u610f\uff0c\u5355\u8c03\u961f\u5217\u8fd8\u4e0d\u80fd\u5355\u7eaf\u7684\u7528$STL$\u91cc\u9762\u7684$queue<int> Q$\u6765\u5199\uff0c\u56e0\u4e3a\u5355\u8c03\u961f\u5217\u5fc5\u987b\u6ee1\u8db3\u6536\u5c3e\u90fd\u80fd\u79fb\u9664\u5143\u7d20\uff0c\u800c$queue<int> Q$\u53ea\u652f\u6301\u961f\u5217\u9996\u4f4d\u79fb\u9664\u5143\u7d20\u3002\u6240\u4ee5\u6211\u4eec\u91c7\u7528\u6570\u7ec4\u6a21\u62df\u961f\u5217\uff0c\u4e24\u4e2a\u201c\u6307\u9488\u201d\u5206\u522b\u6307\u5411\u961f\u5934\u548c\u961f\u5c3e\uff0c\u4ece\u672b\u5c3e\u79fb\u9664\u65f6\u5199$\\mathtt{r--;}$\uff0c\u4ece\u5f00\u5934\u79fb\u9664\u65f6\u5199$\\mathtt{l++;}$\n  \n\u56e0\u4e3a\u8fd9\u9053\u9898\u8981\u6c42\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u505a\u4e24\u6b21\uff0c\u7b2c\u4e00\u6b21\u7b97\u6700\u5927\u503c\uff0c\u7b2c\u4e8c\u6b21\u7b97\u6700\u5c0f\u503c\uff0c\u5982\u679c\u4e24\u6b21\u5206\u522b\u5199\uff0c\u90a3\u4e48\u4ee3\u7801\u5bb9\u6613\u9519\u4e14\u975e\u5e38\u7e41\u7410\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7b80\u5316\u4e00\u4e0b\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\nusing namespace std;\n\nconst int N = 2000005;\n\nstruct node {\n    int i, v;\n}a[N];\nint n, k;\nnode Q[N] = { 0 };\nint l, r;\nint cmp_small(int a, int b) {\n\treturn a <= b;\n}\nint cmp_big(int a, int b) {\n\treturn a >= b;\n}\nvoid work(int (*cmp)(int , int )) {\n\tmemset(Q, 0, sizeof(Q));\n\tl = 1, r = 1;\n\tfor (int i = 1; i <= k; i ++)\n\t{\n\t\tnode p = a[i];\n\t\twhile (l != r && cmp(Q[r - 1].v, p.v))\n\t\t\tr --;\n\t\tQ[r ++] = p;\n\t}\n\tcout << Q[l].v << ' ';\n\tfor (int i = 2; i <= n - k + 1; i ++)\n\t{\n\t\twhile (Q[l].i < i)\n\t\t\tl ++;\n\t\tnode p = a[i + k - 1];\n\t\twhile (l != r && cmp(Q[r - 1].v, p.v))\n\t\t\tr --;\n\t\tQ[r ++] = p;\n\t\tcout << Q[l].v << ' ';\n\t}\n}\nint main(int argc, char const *argv[])\n{\n    ios::sync_with_stdio(false);\n    cin >> n >> k;\n    for (int i = 1; i <= n; i ++) {\n        cin >> a[i].v;\n        a[i].i = i;\n    }\n\tif (k == 1) {\n\t\tfor (int i = 1; i <= n; i ++)\n\t\t\tcout << a[i].v << ' ';\n\t\tcout << endl;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tcout << a[i].v << ' ';\n\t\treturn 0;\n\t}\n\twork(cmp_big);\n\tcout << endl;\n    work(cmp_small);\n    return 0;\n}\n```\n\n\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u7684$\\mathtt{int\\  (*cmp)(int\\  ,\\  int\\  )}$\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\u8ba9\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570\uff0c\u8c03\u7528\u7684\u65f6\u5019\u53c2\u6570\u662f\u4e00\u4e2a\u51fd\u6570\u540d\u3002\u5c31\u50cf$\\mathtt{qsort}$\u8c03\u7528\u7684\u65f6\u5019\u5199\u7684$\\mathtt{qsort(a+1,n,sizeof(a[1]),cmp);}$\u4e00\u6837\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c11\u5199\u5f88\u591a\u4ee3\u7801\u4e86\uff0c\u8c03\u7528\u7684\u65f6\u5019\u5199\u4e24\u4e2a\u6bd4\u8f83\u51fd\u6570\u5c31\u89e3\u51b3\u4e86",
        "postTime": 1533292947,
        "uid": 12075,
        "name": "\u521d\u65e5\u8f89\u714c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "##\u4e0b\u9762dalao\u7684\u4ee3\u7801\u53c8\u8981\u8c03\u7528stl\uff0c\u53c8\u8981\u7ed3\u6784\u4f53\uff0c\u5bf9\u4e8e\u521a\u5b66\u5355\u8c03\u961f\u5217\u7684\u8f83\u96be\u7406\u89e3\u3002\u4e8e\u662f\u6572\u4e86\u624b\u5199\u7684\uff0c\uff0c\uff0c\n\n###\u4eca\u5929\u90bb\u5ea7\u5728\u6572st\uff0c\u6211\u5c31\u968f\u4fbf\u6572\u4e86\u4e00\u53d1\uff0cT\u4e86\u4e09\u4e2a\u70b9\u3002\u4f46\u8fd9\u9053\u9898\u4e0d\u9700\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u5927\u5c0f\u4e0d\u53d8\uff0c\u53ea\u662f\u79fb\u52a8\uff0c\u53ef\u4ee5\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u4f18\u7684\u5355\u8c03\u961f\u5217\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#define maxn 1000005\nusing namespace std;\nint n,k,a[maxn],q[maxn],l,r;//n\u4e2a\u6570\uff0c\u533a\u95f4\u8303\u56f4\u4e3ak\uff0cl,r\u5206\u522b\u4e3a\u961f\u5217\u5934\u5c3e\u6307\u9488 \n//a[]\u5b58\u6570\u636e\uff0cq[]\u5b58\u7f16\u53f7\uff0c\u8c03\u7528\u6570\u636e\u65f6\u5e94\u7528a[q[l]] \ninline void read(int &x){//\u5feb\u8bfb\uff0c\u5b58\u5728\u8d1f\u6570\u3002 \n    char c;int flag=0;\n    while(!isdigit(c=getchar()))\n      if(c=='-') flag=1;\n    x=c-'0';\n    while(isdigit(c=getchar()))\n      x=x*10+c-'0';\n    if(flag) x=-x;\n}\nint main(){\n    ios::sync_with_stdio(false);//\u53ef\u4ee5\u51cf\u5c0f\u8f93\u5165\u8f93\u51fa\u6d41\uff08cin,cout\uff09\u65f6\u95f4 \n    read(n);read(k);\n    l=1;r=0;//\u521d\u59cb\u961f\u5217\u4e3a\u7a7a \n    for(int i=1;i<=n;i++){\n        read(a[i]);\n        while(l<=r&&q[l]<i-k+1) l++;//\u5c06\u6570\u538b\u5165\u961f\u5217\u4e4b\u524d\u5e94\u7ef4\u62a4\u533a\u95f4\u5927\u5c0f\uff0c\u5373\u961f\u9996\u7f16\u53f7\u6ee1\u8db3 y=i-k+1(\u7531i-y+1=k\u63a8\u6765)\n        while(l<=r&&a[q[r]]>a[i]) r--;// \u7ef4\u62a4\u5355\u8c03\u6027 \uff0c\u4e14\u4fdd\u8bc1\u961f\u9996\u4e3a\u6700\u5c0f\u503c \n        q[++r]=i;//\u538b\u5165 \n        if(i>=k) cout<<a[q[l]]<<\" \";//\u7531\u4e8e\u67e5\u8be2\u533a\u95f4\u5305\u62ec\u7b2ci\u4e2a\u6570\uff08\u67e5\u8be2\u4ee5i\u7ed3\u5c3e\u7684\u8fde\u7eedk\u4e2a\u6570\uff09\uff0c\u6240\u4ee5\u5e94\u5728\u538b\u5165\u540e\u518d\u8f93\u51fa \n    }cout<<\"\\n\";\n    l=1;r=0;//\u540c\u4e0a \n    for(int i=1;i<=n;i++){\n        while(l<=r&&q[l]<i-k+1) l++;\n        while(l<=r&&a[q[r]]<a[i]) r--;\n        q[++r]=i;\n        if(i>=k) cout<<a[q[l]]<<\" \";\n    }\n    return 0;\n}\n```",
        "postTime": 1505874618,
        "uid": 43195,
        "name": "jiezi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "# STL\u5927\u6cd5\u597d\uff01\uff01\uff01\n\n\u8fd9\u9053\u9898\u4e00\u5f00\u59cb\u62ff\u5230\u624b\u65f6\uff0c\u6211\u662f\u8499b\u7684\u3002\u518d\u770b\u9898\u89e3\uff0c\u5355\u8c03\u961f\u5217\u662f\u4ec0\u4e48\u9b3c\u554a\uff1f\u4e0d\u8fc7\u540e\u6765\u4e0a\u7f51\u770b\u4e86\u4e00\u4e0b\u540e\u5012\u662f\u8fd8\u633a\u7b80\u5355\u7684\u3002\n\n\u5355\u8c03\u961f\u5217\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u4e00\u4e2a\u4fdd\u8bc1\u6210\u5458\u6ee1\u8db3\u5355\u8c03\u9012\u589e\u9012\u51cf\u7684\u961f\u5217\u3002\u5728\u65b0\u6210\u5458\u8fdb\u5165\u65f6\uff0c\u9700\u8981\u5c06\u4ed6\u7684\u6743\u4e0e\u961f\u5c3e\u6210\u5458\u7684\u6743\u76f8\u6bd4\u8f83\uff0c\u82e5\u5c06\u8fd9\u4e2a\u6210\u5458\u76f4\u63a5\u63d2\u5165\u65f6\u4e0d\u6ee1\u8db3\u6761\u4ef6\u4e86\uff0c\u5219\u5c06\u961f\u5c3e\u51fa\u961f\uff0c\u53cd\u590d\u5faa\u73af\u76f4\u81f3\u6ee1\u8db3\u8981\u6c42\u6216\u961f\u5217\u4e3a\u7a7a\u4e3a\u6b62\u3002\u8fd9\u65f6\u518d\u63d2\u5165\u4fbf\u53ef\u4ee5\u4fdd\u8bc1\u961f\u5217\u7684\u5355\u8c03\u6027\u4e86\u3002\u9898\u76ee\u8981\u6c42\u540c\u65f6\u5bfb\u627e\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u5219\u53ea\u9700\u5f00\u4e24\u4e2a\u5355\u8c03\u961f\u5217\u5373\u53ef\u3002\u6211\u4eec\u8981\u7684\u7b54\u6848\u4fbf\u662f\u6bcf\u6b21\u64cd\u4f5c\u540e\u961f\u9996\u5143\u7d20\u7684\u96c6\u5408\u3002\n\n\u4f46\u8981\u6ce8\u610f\u7a97\u53e3\u53ef\u6ed1\u52a8\u3002\u5f53\u7a97\u53e3\u5de6\u7aef\u5750\u6807\u8d85\u8fc7\u961f\u9996\u65f6\uff0c\u8fd9\u4e2a\u961f\u9996\u4e0d\u5728\u7a97\u53e3\u4e2d\u3002\u89e3\u51b3\u65b9\u6cd5\u662f\u5728\u5165\u961f\u65f6\u8bb0\u5f55\u8be5\u5143\u7d20\u7684\u5750\u6807\u3002\u5728\u6bcf\u6b21\u5165\u961f\u64cd\u4f5c\u540e\u5f00\u59cb\u4ece\u5bf9\u9996\u8fde\u7eed\u5220\u9664\u5750\u6807\u4e0d\u6ee1\u8db3\u8981\u6c42\u7684\u5143\u7d20\uff0c\u6b64\u65f6\u7684\u5bf9\u9996\u624d\u662f\u6211\u4eec\u8981\u6c42\u7684\u7b54\u6848\u3002\n\n\u518d\u6ce8\u610f\u8981\u7528\u7684\u5bb9\u5668\u7c7b\u578b\u3002\u56e0\u4e3a\u8981\u540c\u65f6\u5bf9\u961f\u9996\u548c\u961f\u5c3e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u4e86deque\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<deque>\n#define For(i,a,b) for(i=(a);i<=(b);++i)\n#define Forward(i,a,b) for(i=(a);i>=(b);--i)\nusing namespace std;\ntemplate<typename T>\ninline void read(T &x)//\u8bfb\u5165\u4f18\u5316\n{\n    T s=0,f=1;\n    char k=getchar();\n    while(!isdigit(k)&&k!='-')k=getchar();\n    if(!isdigit(k))\n    {\n        f=-1;\n        k=getchar();\n    }\n    while(isdigit(k))\n    {\n        s=(s<<3)+(s<<1)+(k^'0');\n        k=getchar();\n    }\n    x=s*f;\n}\nstruct node\n{\n    int nu,ind;//\u5206\u522b\u662f\u6743\u503c\u548c\u5750\u6807\n}s;\ndeque<node>G;//\u8bb0\u5f55\u6700\u5927\u503c\u7528\u7684\u961f\u5217\ndeque<node>F;//\u8bb0\u5f55\u6700\u5c0f\u503c\u7528\u7684\u961f\u5217\nint n,k;\nint ma[2000000],mi[2000000];\nvoid input(int w,int in)\n{\n    s.nu=w;\n    s.ind=in;\n    while(!G.empty() && s.nu>G.back().nu)G.pop_back();//\u5220\u9664\u4e0d\u6ee1\u8db3\u8981\u6c42\u7684\u961f\u5c3e\n    G.push_back(s);//\u538b\u5165    \u4e0b\u9762\u7684\u64cd\u4f5c\u540c\u7406\n}\nvoid init(int w,int in)\n{\n    s.nu=w;\n    s.ind=in;\n    while(!F.empty() && s.nu<F.back().nu)F.pop_back();//\u540c\u4e0a\n    F.push_back(s);\n}\nvoid output(int in)\n{\n    while(G.front().ind<in)G.pop_front();//\u5c06\u7a97\u4f53\u4ee5\u5de6\u7684\u961f\u9996\u51fa\u961f\n    while(F.front().ind<in)F.pop_front();//\u540c\u4e0a\n}\nint main(void)\n{\n    read(n);\n    read(k);\n    int i,w;\n    For(i,1,k)//\u5148\u8fdb\u5165\u7b2c\u4e00\u4e2a\u7a97\u4f53\n    {\n        read(w);\n        input(w,i);\n        init(w,i);\n    }\n    ma[1]=G.front().nu;\n    mi[1]=F.front().nu;\n    For(i,k+1,n)//\u6ed1\u52a8\u5904\u7406\n    {\n        read(w);\n        input(w,i);\n        init(w,i);\n        output(i-k+1);\n        ma[i-k+1]=G.front().nu;\n        mi[i-k+1]=F.front().nu;\n    }\n    For(i,1,n-k+1)printf(\"%d \",mi[i]);//\u8f93\u51fa\n    putchar('\\n');\n    For(i,1,n-k+1)printf(\"%d \",ma[i]);\n    putchar('\\n');\n    return 0;\n}\n```",
        "postTime": 1500555107,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    },
    {
        "content": "\u5173\u4e8e\u6b63\u89e3 \u5355\u8c03\u961f\u5217 \u6ca1\u5565\u597d\u8bf4\u7684 ~~\u53cd\u6b63\u6211\u4e5f\u4e0d\u4f1a~~\n\n\u8bf4\u4e00\u4e0b\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\u5427 \u6211\u5199\u7684\u662fzkw\u7ebf\u6bb5\u6811 \u8c8c\u4f3c\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u4f1aT\u6389\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define maxn 1000100\n#define lc i<<1\n#define rc i<<1|1\nusing namespace std;\nint n,dep=1,m,x,y,z,k,ans[maxn];\nstruct node{\n    int max1,min1;\n}tree[maxn<<2];\nvoid build(){\n    while(dep<n)dep<<=1;//\u53d8\u6210\u6ee1\u4e8c\u53c9\u6811 \n    for(int i=dep;i<dep+n;i++){\n        scanf(\"%d\",&x);\n        tree[i].max1=tree[i].min1=x;//\u628a\u503c\u8d4b\u5230\u53f6\u5b50\u8282\u70b9\u4e0a\uff0c\u65b9\u4fbf\u4ee5\u540e\u4fee\u6539\u3002 \n    }\n    for(int i=dep-1;i;i--){\n        tree[i].min1=min(tree[lc].min1,tree[rc].min1);//\u7ef4\u62a4\u4e00\u4e0b \n        tree[i].max1=max(tree[lc].max1,tree[rc].max1);\n    }\n}\ninline int query_min(int l,int r){\n    int res;\n    l+=dep-1;r+=dep-1;//\u53d8\u5230\u53f6\u5b50\u8282\u70b9\u4e0a \n    res=min(tree[l].min1,tree[r].min1);\n    if(l==r)\n        return res;\n    for(;l^r^1;l>>=1,r>>=1){//\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\uff0c\u53ef\u4ee5\u81ea\u5df1\u753b\u56fe\u6f14\u793a\u4e00\u4e0b\uff0c\u5f88\u597d\u7406\u89e3 \n        if(~l&1)res=min(res,tree[l^1].min1);// ~l&1 -> l%2==0\n        if(r&1)res=min(res,tree[r^1].min1);// r&1 -> r%2!=0\n    }\n    return res;\n}\ninline int query_max(int l,int r){//\u540c\u4e0a \n    int res;\n    l+=dep-1;r+=dep-1;\n    res=max(tree[l].max1,tree[r].max1);\n    if(l==r)\n        return res;\n    for(;l^r^1;l>>=1,r>>=1){\n        if(~l&1)res=max(res,tree[l^1].max1);\n        if(r&1)res=max(res,tree[r^1].max1);\n    }\n    return res;\n}\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    build();\n    for(int i=1;i+k-1<=n;i++){\n        printf(\"%d \",query_min(i,i+k-1));\n        ans[i]=query_max(i,i+k-1);\n    }printf(\"\\n\");\n    for(int i=1;i+k-1<=n;i++)\n        printf(\"%d \",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1499260278,
        "uid": 34531,
        "name": "DDOSvoid",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1886 \u3010\u6ed1\u52a8\u7a97\u53e3\u3011"
    }
]