[
    {
        "content": "[\u53ef\u80fd\u6709\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zheyuanxie/p/p5934.html)\n\n## \u7b80\u8981\u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a $N$ \u4e2a\u70b9\uff0c$M$ \u6761\u8fb9\u7684 **\u65e0\u5411\u8fde\u901a** \u5e26\u6743\u56fe\u3002\u7ed9\u5b9a\u4e00\u6761\u8fb9 $(u,v,L)$\uff0c\u8bf7\u95ee\u9700\u8981\u5728\u539f\u56fe\u4e2d\u5220\u9664\u591a\u5c11\u6761\u8fb9\uff0c\u4f7f\u5f97\u5c06 $(u,v,L)$ \u63d2\u5165\u56fe\u540e\uff0c\u5b83\u65e2\u53ef\u80fd\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\uff0c\u53c8\u53ef\u80fd\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\u3002\n\n\u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff0c\u6ee1\u8db3 $N\\leq 20000,M\\leq 200000,L\\leq 20000$\u3002\n\n## \u601d\u8def\n\n\u5982\u679c\u4e00\u6761\u63d2\u5165\u8fb9 $(u,v,L)$ \u540e\u8be5\u8fb9\u53ef\u80fd\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\uff0c\u90a3\u4e48\u5982\u679c\u5c06\u8fb9\u6743\u5c0f\u4e8e $L$ \u7684\u8fb9\u7ec4\u6210\u4e00\u4e2a\u65b0\u56fe\uff0c\u5219\u65b0\u56fe\u4e0d\u8fde\u901a\u3002\n\n\u8bc1\u660e\uff1a\n\n- \u5982\u679c\u65b0\u56fe\u8fde\u901a\uff0c\u5219\u5bf9\u65b0\u56fe\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5219\u6700\u5c0f\u751f\u6210\u6811\u4e00\u5b9a\u662f\u539f\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\uff08\u663e\u7136\uff09\uff0c\u7136\u540e $(u,v,L)$ \u5c31\u4e00\u5b9a\u4e0d\u5728\u4efb\u610f\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u3002\u4e0e\u524d\u53e5\u77db\u76fe\uff0c\u6240\u4ee5\u5fc5\u987b\u4e0d\u8fde\u901a\u3002\n- \u5982\u679c\u65b0\u56fe\u4e0d\u8fde\u901a\uff0c\u5219\u4e0d\u5b58\u5728\u6700\u5c0f\u751f\u6210\u6811\uff0c\u4f7f\u5f97\u4efb\u610f\u4e00\u6761\u6811\u8fb9\u8fb9\u6743\u5c0f\u4e8e $L$\u3002\u53c8\u56e0\u4e3a\u539f\u56fe\u8fde\u901a\uff0c\u6240\u4ee5\u63d2\u5165 $(u,v,L)$ \u540e\uff0c\u539f\u56fe\u4f9d\u65e7\u8fde\u901a\u3002\u5982\u679c\u539f\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u8fb9\u96c6\u4e3a $S$\uff0c\u5219\u6ee1\u8db3 $\\forall (x,y,z) \\in S,z \\geq L$\u3002 $(u,v,L)$ \u63d2\u5165 $S$\uff0c\u5219\u6700\u5c0f\u751f\u6210\u6811\u53d8\u4e3a\u57fa\u73af\u6811\u3002\u5c06\u73af\u4e0a\u6700\u5927\u8fb9\u6743\u7684\u8fb9\u5220\u9664\uff0c\u5219\u8be5\u8fb9\u4e00\u5b9a\u4e0d\u662f $(u,v,L)$\uff08\u9664\u975e\u73af\u4e0a\u8fb9\u6743\u90fd\u76f8\u7b49\uff09\uff0c\u6240\u4ee5 $(u,v,L)$ \u53ef\u80fd\u5728\u63d2\u5165\u540e\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u3002\n\n\uff08\u53ef\u80fd\u6709\u4e00\u4e9b\u4e0d\u4e25\u8c28\uff0c\u656c\u8bf7\u6307\u6b63\uff09\n\n\u540c\u7406\u53ef\u5f97\uff1a\u5982\u679c\u4e00\u6761\u63d2\u5165\u8fb9 $(u,v,L)$ \u540e\u8be5\u8fb9\u53ef\u80fd\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\uff0c\u90a3\u4e48\u5982\u679c\u5c06\u8fb9\u6743\u5927\u4e8e $L$ \u7684\u8fb9\u7ec4\u6210\u4e00\u4e2a\u65b0\u56fe\uff0c\u5219\u65b0\u56fe\u4e0d\u8fde\u901a\u3002\n\n\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5efa\u51fa\u4e86\u8fd9\u4e24\u4e2a\u65b0\u56fe\uff0c\u5219\u76f8\u5f53\u4e8e\u5c31\u662f\u5728\u6c42\u5220\u9664\u591a\u5c11\u6761\u8fb9\u540e\u5168\u56fe\uff08\u5176\u5b9e\u5c31\u662f $u\\to v$\uff09\u4e0d\u8fde\u901a\u3002\u6700\u5c0f\u5272\u89e3\u51b3\u3002\n\n\u6700\u540e\u7b54\u6848\u5c31\u662f\u4e24\u56fe\u6700\u5c0f\u5272\u7b54\u6848\u548c\uff0c\u7531\u4e8e\u4e24\u4e2a\u56fe\u7684\u5272\u96c6\u7684\u4ea4\u96c6\u4e00\u5b9a\u4e3a\u7a7a\u96c6\uff08\u56e0\u4e3a\u5b83\u4eec\u6ca1\u6709\u76f8\u540c\u7684\u70b9\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u52a0\u6cd5\u539f\u7406\u3002\n\n\u6700\u540e\u8bf4\u4e00\u53e5\uff0c\u4e3a\u4ec0\u4e48\u662f\u9898\u9762\u53ef\u80fd\u662f\u6700\u5c0f\uff08\u6700\u5927\uff09\u751f\u6210\u6811\u5462\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u8fb9\u6743\u76f8\u7b49\u7684\u8fb9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\operatorname{maxflow}(n,m))$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nint n,m;\nconst int N = 200000+5,M = 200000+5;\nint s,t,U,V,L,ret;\n\nnamespace MaxFlow{\n\t// \u81ea\u5df1\u6253\u4e00\u904d Dinic \u6700\u5927\u6d41\uff0c\u4ee5\u9632\u5fd8\u8bb0\n\tstruct edge{\n\t\tint nxt,to,w;\n\t} g[M<<2];\n\tint head[N],ec,dis[N],now[N];\n\tbool vis[N];\n\tvoid add(int u,int v,int w){\n\t\tg[++ec].nxt=head[u];\n\t\tg[ec].to=v;\n\t\tg[ec].w=w;\n\t\thead[u]=ec;\n\t}\n\tint bfs(){\n\t\tmemset(dis,0x3f,sizeof(dis));\n\t\tmemset(vis,0,sizeof(vis));\n\t\tqueue<int> q;\n\t\tq.push(s);\n\t\tdis[s]=0;\n\t\tnow[s]=head[s];\n\t\tvis[s]=1;\n\t\twhile(!q.empty()){\n\t\t\tint u=q.front();\n\t\t\tq.pop();\n\t\t\tfor(int i=head[u];i;i=g[i].nxt){\n\t\t\t\tint v=g[i].to;\n\t\t\t\tif(g[i].w>0 && !vis[v]){\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tnow[v]=head[v];\n\t\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\t\tif(v==t){\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\tint dfs(int x,int sum){\n\t\tif(x==t){\n\t\t\treturn sum;\n\t\t}\n\t\tint k,res=sum;\n\t\tfor(int i=now[x];i&&sum;i=g[i].nxt){\n\t\t\tnow[x]=i;\n\t\t\tint v=g[i].to;\n\t\t\tif(g[i].w>0&&(dis[v]==dis[x]+1)){\n\t\t\t\tk=dfs(v,min(res,g[i].w));\n\t\t\t\tg[i].w-=k;\n\t\t\t\tg[i^1].w+=k;\n\t\t\t\tres-=k;\n\t\t\t}\n\t\t}\n\t\treturn sum-res;\n\t}\n\tint dinic(){\n\t\tint ans=0;\n\t\twhile(bfs()){\n\t\t\tans+=dfs(s,LLONG_MAX);\n\t\t}\n\t\treturn ans;\n\t}\n\tvoid addedge(int u,int v,int cap){\n\t\tadd(u,v,cap);\n\t\tadd(v,u,-cap);\n\t}\n\t\n\tvoid clean(void){\n\t\tec=0;\n\t\tmemset(head,0,sizeof(head));\n\t\tmemset(dis,0,sizeof(dis));\n\t\tmemset(vis,0,sizeof(vis));\n\t\tmemset(g,0,sizeof(g));\n\t}\n}\nusing namespace MaxFlow;\n\nstruct Edge{int from,to,weight;};\nvector<Edge> graph;\n\nsigned main(){\n\tcin>>n>>m;\n\tfor(int i=1,u,v,w;i<=m;i++){\n\t\tcin>>u>>v>>w;\n\t\tgraph.push_back({u,v,w});\n\t}\n\tcin>>U>>V>>L;\n\ts=U,t=V;\n\tclean();\n\tfor(Edge i:graph){\n\t\tif(i.weight < L){\n\t\t\taddedge(i.from,i.to,1);addedge(i.to,i.from,1);\n\t\t}\n\t}\n\tret=dinic();\n\tclean();\n\tfor(Edge i:graph){\n\t\tif(i.weight > L){\n\t\t\taddedge(i.from,i.to,1);addedge(i.to,i.from,1);\n\t\t}\n\t}\n\tcout<<ret+dinic()<<'\\n';\n\treturn 0;\n}\n\n```",
        "postTime": 1664543493,
        "uid": 413065,
        "name": "xiezheyuan",
        "ccfLevel": 5,
        "title": "P5934 [\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811"
    },
    {
        "content": "[P5934 [\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811](https://www.luogu.com.cn/problem/P5934)\n\n---\n\n# \u601d\u8def\n\n\u8fb9\u6743\u4e3a $L$ \u7684\u8fb9 $(u,v)$\uff0c\u8981\u51fa\u73b0\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\uff0c\u9700\u8981\u4ec0\u4e48\u6761\u4ef6\u5462\uff1f\n\n\u5c31\u662f\uff0c\u628a\u8fb9\u6743 $<L$ \u7684\u6240\u6709\u8fb9\u8fde\u4e0a\uff0c$u,v$\u4e5f\u4e0d\u80fd\u8054\u901a\uff0c\u90a3\u8fb9\u6743\u4e3a $L$ \u7684\u8fb9 $(u,v)$\u5c31\u5fc5\u987b\u9009\u4e86\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u5728\u539f\u56fe\u4e0a\u5272\u6389\u4e00\u4e9b\u8fb9\uff0c\u4f7f$u,v$\u4e0d\u80fd\u8054\u901a\u3002\n\n\u6240\u4ee5\u8f6c\u5316\u4e3a\u6700\u5c0f\u5272\u95ee\u9898\u3002\n\n\u628a\u539f\u56fe\u4e2d\u8fb9\u6743 $<L$ \u7684\u6240\u6709\u8fb9 $a\\to b$\uff0c\u90fd\u8fde $a\\to b$\u5bb9\u91cf\u4e3a$1$\uff0c $b\\to a$ \u5bb9\u91cf\u4e3a$1$\uff0c\u7136\u540e\u6c42 $u,v$ \u4e4b\u95f4\u7684\u6700\u5c0f\u5272\u3002\n\n\u90a3\u4e48\u6700\u5927\u751f\u6210\u6811\u5462\uff1f\u628a\u539f\u56fe\u4e2d\u8fb9\u6743 $>L$ \u7684\u6240\u6709\u8fb9 $a\\to b$\uff0c\u90fd\u8fde $a\\to b$\u5bb9\u91cf\u4e3a$1$\uff0c $b\\to a$ \u5bb9\u91cf\u4e3a$1$\uff0c\u7136\u540e\u6c42 $u,v$ \u4e4b\u95f4\u7684\u6700\u5c0f\u5272\u3002\n\n\u7136\u540e\u4e24\u4e2a\u7b54\u6848\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u4ee3\u7801\uff0c\u7528$\\text{Dinic}$\u6c42\u6700\u5c0f\u5272\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Rep(i,a,b) for(register int i=(a);i>=(b);--i)\nusing namespace std;\ninline int read()\n{\n    char c=getchar();int x=0;bool f=0;\n    for(;!isdigit(c);c=getchar())f^=!(c^45);\n    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n    if(f)x=-x;return x;\n}\nconst int maxn=20007,maxm=200007,inf=0x3f3f3f3f;\nint n,m,s,t,maxflow;\nint dep[maxn],cur[maxn];\nint tot=1,head[maxn];\nstruct edge{\n\tint to,nxt,w;\n}e[maxm<<2];\ninline void adde(int u,int v,int w){\n\te[++tot]=(edge){v,head[u],w};\n\thead[u]=tot;\n}\ninline void add(int u,int v,int w){\n\tadde(u,v,w);\n\tadde(v,u,0);\n}\nbool bfs(int s,int t)\n{\n\tqueue<int>q;\n\tmemcpy(cur,head,sizeof cur);\n\tmemset(dep,63,sizeof dep);\n\tdep[s]=0;q.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].to;\n\t\t\tif(dep[v]==inf&&e[i].w){\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}return dep[t]<inf;\n}\nint dfs(int u,int t,int minn)\n{\n\tif(!minn||u==t)return minn;\n\tint res=0;\n\tfor(int i=cur[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tcur[u]=i;\n\t\tif(dep[v]!=dep[u]+1)continue;\n\t\tint flow=dfs(v,t,min(minn,e[i].w));\n\t\tif(!flow)continue;\n\t\tres+=flow,minn-=flow;\n\t\te[i].w-=flow,e[i^1].w+=flow;\n\t\tif(!minn)break;\n\t}return res;\n}\ninline int dinic(int s,int t)\n{\n\tint maxflow=0;\n\twhile(bfs(s,t))maxflow+=dfs(s,t,inf);\n\treturn maxflow;\n}\nint uu[maxm],vv[maxm],ww[maxm];\nint main()\n{\n\tn=read(),m=read();\n\tFor(i,1,m)uu[i]=read(),vv[i]=read(),ww[i]=read();\n\ts=read(),t=read();\n\tint L=read();\n\tFor(i,1,m)if(ww[i]<L)add(uu[i],vv[i],1),add(vv[i],uu[i],1);\n\tint ans=dinic(s,t);\n\tmemset(head,0,sizeof head);tot=1;//\u8bb0\u5f97\u6e05\u7a7a\u56fe\u3002\n\tFor(i,1,m)if(ww[i]>L)add(uu[i],vv[i],1),add(vv[i],uu[i],1);\n\tans+=dinic(s,t);\n\tcout<<ans;\n    return 0;\n}\n```",
        "postTime": 1580039901,
        "uid": 151935,
        "name": "Rainbow_qwq",
        "ccfLevel": 0,
        "title": "P5934 \u3010[\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "## \u4e00\u3001\u9898\u610f\n\n\u7ed9\u5b9a\u8fde\u901a\u65e0\u5411\u56fe $G$ \u548c\u4e00\u6761\u989d\u5916\u7ed9\u5b9a\u7684\u8fb9 $e$\uff0c\u6c42\u81f3\u5c11\u5220\u6389\u591a\u5c11\u6761\u8fb9\u4f7f\u5f97\u65e2**\u5b58\u5728**\u6700\u5c0f\u751f\u6210\u6811\u53c8**\u5b58\u5728**\u6700\u5927\u751f\u6210\u6811\u5305\u542b $e$\u3002\n\n## \u4e8c\u3001\u601d\u8def\n\n\u6211\u4eec\u8003\u8651\u5c06 $e$ \u52a0\u5165 $G$\uff0c\u8bbe $e$ \u7684\u7aef\u70b9 $u,v$ \u5206\u522b\u4e3a $s,t$\u3002\u5982\u679c\u6b64\u65f6\u4ece $s$ \u5230 $t$ \u53ea\u6709\u4e00\u6761\u8def\u5f84\uff0c\u90a3\u4e48 $e$ \u5b58\u5728\u4e8e $G$ \u7684**\u4efb\u610f**\u4e00\u4e2a\u751f\u6210\u6811\u4e2d\uff1b\u5982\u679c $s,t$ \u5728\u4e00\u4e2a\u73af\u4e2d\uff0c\u8bf4\u660e\u5982\u679c\u6ca1\u6709 $e$\uff0c\u4ecd\u7136\u5b58\u5728\u4ece $s$ \u5230 $t$ \u7684\u8def\u5f84\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53bb\u89c2\u5bdf\u8fd9\u4e2a\u73af\u3002\n\n\u5728\u6c42\u6700\u5c0f\u751f\u6210\u6811\u65f6\uff0c\u4e00\u5b9a\u662f**\u65ad\u6389**\u8fd9\u4e2a\u73af\u7684**\u6700\u5927**\u7684\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u53ea\u8981\u73af\u4e0a\u5b58\u5728**\u4e0d\u5c0f\u4e8e** $e$ \u7684\u8fb9\uff0c\u5c31\u5b58\u5728\u6700\u5c0f\u751f\u6210\u6811\u5305\u542b $e$\uff1b\u5728\u6c42\u6700\u5c0f\u751f\u6210\u6811\u65f6\uff0c\u4e00\u5b9a\u662f**\u65ad\u6389**\u8fd9\u4e2a\u73af\u7684**\u6700\u5c0f**\u7684\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u53ea\u8981\u73af\u4e0a\u5b58\u5728**\u4e0d\u5927\u4e8e** $e$ \u7684\u8fb9\uff0c\u5c31\u5b58\u5728\u6700\u5927\u751f\u6210\u6811\u5305\u542b $e$\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u201c\u7834\u574f\u201d\u6389\u6240\u6709\u8fb9\u90fd\u5c0f\u4e8e $e$ \u7684\u73af**\u548c**\u6240\u6709\u8fb9\u90fd\u5927\u4e8e $e$ \u7684\u73af\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u4ee4\u6e90\u70b9\u4e3a $s$\uff0c\u6c47\u70b9\u4e3a $t$\uff0c\u5206\u522b\u5efa\u56fe $G_1=\\{\\forall e'\\in G|e'<e\\}$\uff0c$G_2=\\{\\forall e'\\in G|e'>e\\}$\uff0c\u56e0\u4e3a\u4e00\u4e2a\u73af\u53ea\u9700\u5272\u4e00\u6761\u8fb9\uff0c\u6240\u4ee5\u5bb9\u91cf\u8bbe\u4e3a $1$\u3002\u6c42\u4e24\u56fe\u6700\u5c0f\u5272\u4e4b**\u548c**\u5373\u53ef\u3002\n\n\u6ce8\u610f\u8981\u5efa\u53cc\u5411\u8fb9\u3002\n\n## \u4e09\u3001$\\text{further}$\n\n1. \u5982\u679c\u8981\u6c42**\u5b58\u5728**\u6700\u5c0f\u751f\u6210\u6811\u6216**\u5b58\u5728**\u6700\u5927\u751f\u6210\u6811\u5305\u542b $e$\uff0c\u6c42\u4e24\u56fe\u6700\u5c0f\u5272\u7684\u6700\u5c0f\u503c\u3002\n\n2. \u5982\u679c\u8981\u6c42**\u4efb\u610f**\u6700\u5c0f\u751f\u6210\u6811\u5305\u542b $e$\uff0c\u5efa\u56fe $G_1=\\{\\forall e'\\in G|e'\\le e\\}$\u3002\u6700\u5927\u751f\u6210\u6811\u540c\u7406\u3002\u5173\u952e\u5728\u4e8e\u5bf9\u4e8e\u6700\u5c0f\uff08\u5927\uff09\u751f\u6210\u6811\u539f\u7406\u7684\u8ba4\u8bc6\u3002\n\n### AC code\n\n```cpp\n//written_by_FTL\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<vector>\n#define ll long long\n#define db double\nusing namespace std;\nconst int N=2e4+5;\nint rd(){\n\tint ans=0,f=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')f^=(ch=='-'),ch=getchar();\n\twhile(ch>='0'&&ch<='9')ans=(ans<<3)+(ans<<1)+(ch^48),ch=getchar();\n\tif(f)ans=-ans;\n\treturn ans;\n}\nint n,m,u,v,s,t,c,ans;\nint nd[N],nds[N],tt=1;\nint dep[N],INF=0x3f3f3f3f;\nstruct xxs{\n\tint u,v,w;\n}ed[200005];\nstruct edge{\n\tint v,w,nxt;\n}e[1000005];\nvoid add(int u,int v,int w){\n\te[++tt]={v,w,nd[u]};\n\tnd[u]=tt;\n}\nbool bfs(){\n\tqueue<int>que;\n\tmemset(dep,0,sizeof dep);\n\tdep[s]=1;\n\tque.push(s);\n\twhile(!que.empty()){\n\t\tu=que.front();\n\t\tque.pop();\n\t\tfor(int i=nd[u];i;i=e[i].nxt){\n\t\t\tv=e[i].v;\n\t\t\tif(dep[v]==0&&e[i].w){\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tque.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t];\n}\nint dfs(int u,int flw){\n\tif(u==t)return flw;\n\tint ret=0,x;\n\tfor(int i=nds[u];i;i=nds[u]){\n\t\tnds[u]=e[i].nxt;\n\t\tint v=e[i].v;\n\t\tif(dep[v]!=dep[u]+1||e[i].w==0)continue;\n\t\tx=dfs(v,min(flw,e[i].w));\n\t\tif(x){\n\t\t\tflw-=x,ret+=x;\n\t\t\te[i].w-=x,e[i^1].w+=x;\n\t\t\tif(flw==0)break;\n\t\t}\n\t}\n\treturn ret;\n}\nint dinic(){\n\tint flw=0;\n\twhile(bfs())memcpy(nds,nd,sizeof nd),flw+=dfs(s,INF);\n\treturn flw;\n}\nint main(){\n\tn=rd(),m=rd();\n\tfor(int i=1;i<=m;i++)ed[i].u=rd(),ed[i].v=rd(),ed[i].w=rd();\n\ts=rd(),t=rd(),c=rd();\n\tfor(int i=1;i<=m;i++)//\u53cc\u5411\u5efa\u8fb9\n\t\tif(ed[i].w<c)add(ed[i].u,ed[i].v,1),add(ed[i].v,ed[i].u,0),add(ed[i].v,ed[i].u,1),add(ed[i].u,ed[i].v,0); \n\tans+=dinic();\n\tmemset(nd,0,sizeof nd),tt=1;\n\tfor(int i=1;i<=m;i++)//\u53cc\u5411\u5efa\u8fb9\n\t\tif(ed[i].w>c)add(ed[i].u,ed[i].v,1),add(ed[i].v,ed[i].u,0),add(ed[i].v,ed[i].u,1),add(ed[i].u,ed[i].v,0); \n\tans+=dinic();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n### $\\text{The End.}$",
        "postTime": 1642994347,
        "uid": 346440,
        "name": "FreeTimeLove",
        "ccfLevel": 7,
        "title": "P5934\u3010\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "# $\\texttt{Description}$\n\n> \u7ed9\u4f60\u4e00\u4e2a $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u56fe\uff0c\u8bf7\u95ee\u81f3\u5c11\u5220\u9664\u539f\u56fe\u4e0a\u7684\u591a\u5c11\u6761\u8fb9\uff0c\u624d\u80fd\u4f7f\u5f97\u52a0\u5165\u4e00\u6761\u4ece $u$ \u5230 $v$ \u8fb9\u6743\u4e3a $L$ \u7684\u8fb9\u540e\uff0c\u8be5\u8fb9\u540c\u65f6\u5728\u4efb\u610f\u4e00\u9897\u6700\u5c0f\u751f\u6210\u6811\u548c\u6700\u5927\u751f\u6210\u6811\u4e0a\u3002\n>\n> $ \\texttt{Data Range:}1\\le n\\le 2\\times 10^4,1\\le m\\le 2\\times 10^5$\n\n# $\\texttt{Solution}$\n\n\u6839\u636e kruskal \u7b97\u6cd5\u7684\u539f\u7406\uff0c\u4e00\u6761\u8fb9\u6743\u4e3a $L$ \u7684\u8fb9\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\uff0c\u5fc5\u987b\u6709\u5c06\u6240\u6709\u8fb9\u6743 $<L$ \u7684\u8fb9\u52a0\u5165\u540e\uff0c$u$ \u548c $v$ \u4ecd\u7136\u4e0d\u8fde\u901a\u3002\n\n\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u53ea\u8003\u8651\u8fb9\u6743 $<L$ \u7684\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u5220\u9664\u591a\u5c11\u6761\u7684\u8fb9\uff0c\u4f7f\u5f97 $u,v$ \u4e0d\u8fde\u901a\u3002\u5c31\u662f\u4e2a\u6700\u5c0f\u5272\u95ee\u9898\u4e86\u3002\u6700\u5927\u751f\u6210\u6811\u540c\u7406\u3002\n\n\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u6ca1\u6709\u53d6\u5230\u7b49\u53f7\uff0c\u56e0\u4e3a\u9898\u76ee\u53ea\u8981\u6c42\u51fa\u73b0\u5728\u4efb\u610f\u4e00\u9897 MST \u4e0a\uff0c\u800c\u5bf9\u4e8e kruskal \u800c\u8a00\uff0c\u6392\u5e8f\u7684\u65f6\u5019\u8fb9\u6743\u76f8\u540c\u7684\u8fb9\u4e4b\u95f4\u7684\u987a\u5e8f\u53ef\u4ee5\u968f\u610f\uff08\u800c\u4e14\u5982\u679c\u4e0d\u80fd\u968f\u610f\uff0c\u5c31\u4e0d\u80fd\u4f7f\u7528 sort \u8fd9\u79cd\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u4e86\uff09\u3002\u6240\u4ee5\u4e3a\u4e86\u6ee1\u8db3\u9898\u76ee\u7684\u8981\u6c42\uff0c\u5728\u8fb9\u6743\u4e3a $L$ \u7684\uff0c\u4e24\u4e2a\u7aef\u70b9\u4ecd\u672a\u8fde\u901a\u7684\u8fb9\u4e2d\uff0c\u6211\u4eec\u9009\u62e9\u9898\u76ee\u8ba9\u6211\u4eec\u65b0\u52a0\u7684\u90a3\u6761\u8fb9\u3002\n\n\u867d\u7136\u6d41\u91cf\u4e3a $1$ \u7684\u56fe\u4e0a Dinic \u6709\u4f18\u52bf\uff0c~~\u4f46\u662f\u4e0d\u7ba1\u5e38\u6570\u591a\u5c0f\u7684 Dinic \u4ecd\u7136\u88ab ISAP \u540a\u8d77\u6765\u6253~~\n\n~~\u4e0d\u8fc7\u5927\u591a\u6570\u65f6\u5019 EK \u548c ISAP \u5dee\u4e0d\u591a~~\n\n# $\\texttt{Code}$\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n\nconst int INF = 1e9;\ninline int min(const int x, const int y) {return x < y ? x : y;}\nstruct Edge {\n\tint to, nxt, cap;\n} e[800005];\nint head[20005], cur[20005], num[20005], dep[20005], from[200005], to[200005], val[200005];\nint tot = 1, s, t, n, m;\nstd::queue<int> Q;\ninline void AddEdge(const int u, const int v, const int cap) {\n\te[++ tot].to = v, e[tot].cap = cap, e[tot].nxt = head[u], head[u] = tot;\n}\n\nvoid bfs() {\n\tmemset(num, 0, sizeof num);\n\tmemset(dep, 0, sizeof dep);\n\tmemcpy(cur, head, sizeof cur);\n\tQ.push(t);\n\tnum[dep[t] = 1] = 1;\n\twhile (Q.size()) {\n\t\tint u(Q.front());\n\t\tQ.pop();\n\t\tfor (int i(head[u]); i; i = e[i].nxt)\n\t\t\tif (!dep[e[i].to]) ++ num[dep[e[i].to] = dep[u] + 1], Q.push(e[i].to);\n\t}\n}\n\nint dfs(const int u, const int flow) {\n\tif (u == t) return flow;\n\tint used(0), tmp(0);\n\tfor (int i(head[u]); i; i = e[i].nxt) {\n\t\tcur[u] = i;\n\t\tif (dep[u] - 1 == dep[e[i].to] && e[i].cap) {\n\t\t\tif (tmp = dfs(e[i].to, min(e[i].cap, flow - used)))\n\t\t\t\te[i].cap -= tmp, e[i ^ 1].cap += tmp, used += tmp;\n\t\t\tif (used == flow) return used;\n\t\t}\n\t}\n\tif (!(-- num[dep[u]])) dep[s] = n + 1;\n\t++ num[++ dep[u]];\n\treturn used;\n}\n\nint ISAP() {\n\tint Maxflow(0);\n\tbfs();\n\twhile (dep[s] && dep[s] <= n) Maxflow += dfs(s, INF);\n\treturn Maxflow;\n}\n\nint main() {\n\tint ans(0), L;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i(1); i <= m; ++ i) scanf(\"%d%d%d\", from + i, to + i, val + i);\n\tscanf(\"%d%d%d\", &s, &t, &L);\n\tfor (int i(1); i <= m; ++ i)\n\t\tif (val[i] < L) AddEdge(from[i], to[i], 1), AddEdge(to[i], from[i], 1);\n\tans = ISAP();\n\tmemset(head, 0, sizeof head);\n\ttot = 1;\n\tfor (int i(1); i <= m; ++ i)\n\t\tif (val[i] > L) AddEdge(from[i], to[i], 1), AddEdge(to[i], from[i], 1);\n\tprintf(\"%d\\n\", ans + ISAP());\n\treturn 0;\n}\n```",
        "postTime": 1619581835,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010P5934 [\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "\u4e0d\u4f1a Dinic\u3002\u3002\u3002\u53ea\u80fd\u7528 EK \u4e86\u3002\n\n\u5982\u679c\u662f\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\uff0c\u600e\u4e48\u529e\u5462\uff1f\uff1f\u6839\u636e Kruskal\uff0c\u5148\u9009 $\\lt L$ \u7684\u8fb9\uff0c\u7136\u540e\u9009 $=L$ \u7684\u8fb9\u3002\u6240\u4ee5\u5982\u679c\u9009\u5b8c\u6240\u6709 $\\lt L$ \u7684\u8fb9\uff0c$u$ \u548c $v$ \u8fd8\u4e0d\u8fde\u901a\uff0c\u90a3\u4e48\u53ea\u80fd\u9009 $=L$ \u7684\u5566\uff01\u6240\u4ee5\uff0c\u6211\u4eec\u628a\u6240\u6709 $\\lt L$ \u7684\u8fb9\u90fd\u8fde\u4e0a\uff0c\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u4e24\u4e2a\u65b9\u5411\u7684\u5bb9\u91cf\u90fd\u662f $1$\uff0c\u6c42\u4e00\u4e2a\u6700\u5c0f\u5272\u5c31\u884c\u4e86\u3002\u6839\u636e\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\uff0c\u53ef\u4ee5\u7528 Dinic \u6765\u6c42\u6700\u5927\u6d41\uff0c\u5f53\u7136\u6211\u4e0d\u4f1a\uff0c\u7528\u7684\u662f EK\u3002\n\n\u540c\u7406\uff0c\u6700\u5927\u751f\u6210\u6811\u53ea\u8981\u628a\u5c0f\u4e8e\u6539\u6210\u5927\u4e8e\u5373\u53ef\uff0c\u7136\u540e\u4e24\u4e2a\u7b54\u6848\u76f8\u52a0\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct apple\n{\n\tint p1,p2,l,z;\n\tapple(int p1=0,int p2=0,int l=0,int z=0):p1(p1),p2(p2),l(l),z(z){}\n\tbool operator<(const apple &other)const\n\t{\n\t\tif(l!=other.l)return l<other.l;\n\t\treturn z>other.z;\n\t}\n};\nint vist[20005],q[20005],u[200005],v[200005],w[200005],n,m,s,t,ans=0;\napple rt[20005];\nvector<pair<int,int> >g[20005];\nvector<int>gg[20005];\nvoid minu(int x,int z)\n{\n\tint ls=rt[x].p1,l2=rt[x].p2;\n\tif(!ls)return;\n\tint lt=gg[ls][l2];\n\tg[ls][l2].second-=z;\n\tg[x][lt].second+=z;\n\tminu(ls,z);\n}\nint EK()\n{\n\tint head=0,tail=0;\n\tmemset(vist,0,sizeof(vist));\n\tmemset(rt,0,sizeof(rt));\n\trt[s]=apple(0,0,0,2147483647);\n\tq[++tail]=s;\n\twhile(head<tail)\n\t{\n\t\tint x=q[++head],y=rt[x].l,f=rt[x].z;\n\t\tvist[x]=1;\n\t\tfor(int i=0;i<g[x].size();i++)\n\t\t{\n\t\t\tint cu=g[x][i].first;\n\t\t\tif(!g[x][i].second||vist[cu])continue;\n\t\t\tq[++tail]=cu;\n\t\t\tvist[cu]=1;\n\t\t\trt[cu]=apple(x,i,y+1,min(f,g[x][i].second));\n\t\t}\n\t}\n\tif(rt[t].z)\n\t{\n\t\tminu(t,rt[t].z);\n\t\tans+=rt[t].z;\n\t\treturn rt[t].z;\n\t}\n\treturn 0;\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&u[i],&v[i],&w[i]);\n\t}\n\tint uu,vv,ww;\n\tcin>>uu>>vv>>ww;\n\tfor(int i=1;i<=m;i++)if(w[i]<ww)\n\t{\n\t\tgg[u[i]].push_back(g[v[i]].size());\n\t\tgg[v[i]].push_back(g[u[i]].size());\n\t\tg[u[i]].push_back(make_pair(v[i],1));\n\t\tg[v[i]].push_back(make_pair(u[i],1));\n\t}\n\ts=uu,t=vv;\n\twhile(EK());\n\tint ans1=ans;\n\tfor(int i=1;i<=n;i++)g[i].clear(),gg[i].clear();\n\tfor(int i=1;i<=m;i++)if(w[i]>ww)\n\t{\n\t\tgg[u[i]].push_back(g[v[i]].size());\n\t\tgg[v[i]].push_back(g[u[i]].size());\n\t\tg[u[i]].push_back(make_pair(v[i],1));\n\t\tg[v[i]].push_back(make_pair(u[i],1));\n\t}\n\ts=uu,t=vv,ans=0;\n\twhile(EK());\n\tcout<<ans+ans1<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1595814015,
        "uid": 107484,
        "name": "wmy_goes_to_thu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5934 \u3010[\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "## P5934 \u3010[\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811\u3011\n\u4e00\u9053\u7f51\u7edc\u6d41\u6c34\u9898\u5427\u3002\n\n\u6211\u4eec\u5148\u6765\u8003\u8651\u6700\u5c0f\u751f\u6210\u6811\u7684\u60c5\u51b5\u3002\u5982\u679c\u4e00\u6761\u8fb9\u8fb9\u6743\u5927\u4e8e\u9009\u4e2d\u7684\u8fb9\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u662f\u5426\u5220\u53bb\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u3002\n\n\u5982\u679c\u4e00\u6761\u8fb9\u8fb9\u6743\u7b49\u4e8e\u5b83\uff0c\u7531\u4e8e\u6211\u4eec\u8981\u6c42\u7684\u662f**\u53ef\u80fd**\uff0c\u56e0\u6b64\u5bf9\u7b54\u6848\u4e5f\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u8fb9\u6743\u6bd4\u5b83\u5c0f\u7684\u8fb9\u5168\u90e8\u7ec3\u5b8c\u4e4b\u540e $u,v$ \u4e0d\u8fde\u901a\u5373\u53ef\uff0c\u8fd9\u6837\u8fd9\u6761\u8fb9\u5c31\u53ef\u4ee5\u52a0\u5165\u4e86\u3002\n\n\u628a\u6240\u6709\u8fb9\u6743\u6bd4\u9009\u5b9a\u7684\u8fb9\u7684\u8fb9\u6743\u5c0f\u7684\u8fb9\u62ff\u51fa\u6765\u8fde\u4e0a\uff0c\u6d41\u91cf\u5747\u4e3a $1$\uff0c\u7136\u540e\u6c42\u6700\u5c0f\u5272\u5373\u53ef\u3002\n\n\u7531\u4e8e\u719f\u77e5\u6700\u5c0f\u5272\u7b49\u4e8e\u6700\u5927\u6d41\uff0c\u76f4\u63a5\u4e00\u904d\u6700\u5927\u6d41\u7ed3\u675f\u3002\n\n\u7136\u540e\u6e05\u7a7a\u6570\u7ec4\uff0c\u7528\u4e00\u6837\u7684\u65b9\u6cd5\u89e3\u51b3\u6700\u5927\u6811\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u628a\u8fb9\u6743\u5927\u4e8e\u9009\u5b9a\u8fb9\u7684\u8fb9\u62ff\u51fa\u6765\u8fde\u4e0a\u3002\n\n\u7136\u540e\u518d\u8dd1\u4e00\u8fb9\u6700\u5927\u6d41\uff0c\u4e24\u6b21\u7b54\u6848\u76f8\u52a0\u3002\n\n```cpp\n#include<bits/stdc++.h> \n#define int long long\nusing namespace std;\ninline int read(){\n\tregister int x=0;\n\tregister bool f=0;\n\tregister char c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<3)+(x<<1)+c-48;\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nchar cr[200];int tt;\ninline void print(int x,char k='\\n') {\n    if(!x) putchar('0');\n    if(x < 0) putchar('-'),x=-x;\n    while(x) cr[++tt]=x%10+'0',x/=10;\n    while(tt) putchar(cr[tt--]);\n    putchar(k);\n}\nconst int maxn=25000;\nconst int inf=1e9+7; \nstruct Edge{\n    int nxt,to,val;\n}e[3000005];\nint num=1,h[maxn],s,t;\nqueue <int> q;\nvoid add(int from,int to,int dis){\n    e[++num].nxt=h[from];\n    e[num].to=to;\n    e[num].val=dis;\n    h[from]=num;\n    e[++num].nxt=h[to];\n    e[num].to=from;\n    e[num].val=1;\n    h[to]=num;\n}\nint n,m,maxflow,dep[maxn];\nchar mp[105][105];\nbool bfs(int s,int t){\n\tmemset(dep,0x3f,sizeof(dep));\n\twhile(!q.empty()) q.pop();\n    dep[s]=0;\n    q.push(s);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        for (int i=h[u];i;i=e[i].nxt){\n        \tint v=e[i].to;\n            if(dep[v]>inf&&e[i].val){\n                dep[v]=dep[u]+1;\n                q.push(e[i].to);\n            }\n        }\n    }\n    if(dep[t]<inf) return true;\n    return 0;\n}\nint dfs(int u,int t,int lim){\n    if (!lim||u==t)return lim;\n    int flow=0,f;\n    for (int i=h[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        int &w=e[i].val;\n        if(dep[v]==dep[u]+1&&(f=dfs(v,t,min(lim,w)))){\n            flow+=f;\n            lim-=f;\n            w-=f;\n            e[i^1].val+=f;\n            if(!lim) break;\n        }\n    }\n    return flow;\n}\nvoid dinic(int s,int t){\n    while(bfs(s,t)){\n\t\tmaxflow+=dfs(s,t,inf);\n\t}\n}\nint u[maxn*10],v[maxn*10],w[maxn*10],l,ans;\nsigned main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=m;i++){\n\t\tu[i]=read();\n\t\tv[i]=read();\n\t\tw[i]=read();\n\t} \n\ts=read();t=read();l=read();\n\tfor(int i=1;i<=m;i++){\n\t\tif(w[i]<l) add(v[i],u[i],1);\n\t}\n\tdinic(s,t);\n\tmemset(h,0,sizeof(h));\n\tnum=1;\n\tfor(int i=1;i<=m;i++){\n\t\tif(w[i]>l) add(v[i],u[i],1);\n\t}\n\tdinic(s,t);\n\tprint(maxflow);\n\treturn 0;\n}\n```\n",
        "postTime": 1583388084,
        "uid": 120074,
        "name": "BFqwq",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5934 \u3010[\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u5f20**\u65e0\u5411\u56fe**\uff0c\u5e76\u4e14\u7ed9\u4f60\u4e00\u6761\u8fb9\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u5176\u5bf9\u5e94\u7684\u8fb9\u6743\uff0c\u95ee\u6700\u5c11\u5220\u9664\u591a\u5c11\u6761\u8fb9\uff0c\u624d\u80fd\u4f7f\u539f\u56fe\u4e2d\u7684\u6700\u5c0f\u751f\u6210\u6811\u548c\u6700\u5927\u751f\u6210\u6811\u90fd\u90fd\u5305\u542b\u7ed9\u5b9a\u7684\u8fb9\uff08\u4e0d\u5220\u9664\u7ed9\u5b9a\u7684\u8fb9\uff09\u3002\n\n## \u601d\u8def\n\n\u6211\u4eec\u8003\u8651\u4ec0\u4e48\u65f6\u5019\u4f1a\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\u3002\u8003\u8651\u6700\u5c0f\u751f\u6210\u6811\u4e00\u5b9a\u662f\u5728\u8fde\u901a\u7684\u56fe\u91cc\u624d\u6709\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u8fd9\u6837\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5982\u679c\u7ed9\u51fa\u7684\u8fb9\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\uff0c\u90a3\u4e48\u7531\u8fb9\u6743\u5c0f\u4e8e\u8fd9\u6761\u8fb9\u7684\u6240\u6709\u8fb9\u6784\u6210\u7684\u65b0\u56fe\u4e00\u5b9a\u662f\u4e0d\u8fde\u901a\u7684\u3002\u6211\u4eec\u8003\u8651\u7528\u8bc1\u660e\uff1a\n\n\u5047\u5982\u65b0\u56fe\u662f\u8fde\u901a\u7684\uff0c\u90a3\u4e48\u5bf9\u65b0\u56fe\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u8fd9\u68f5\u6700\u5c0f\u751f\u6210\u6811\u4e00\u5b9a\u662f\u539f\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\uff08\u56e0\u4e3a\u65b0\u56fe\u4e2d\u90fd\u662f\u539f\u8fb9\u96c6\u4e2d\u8fb9\u6743\u8f83\u5c0f\u7684\u8fb9\uff0c\u7b54\u6848\u4e00\u5b9a\u66f4\u4f18\uff09\uff0c\u800c\u5176\u4e2d\u7684\u6240\u6709\u8fb9\u6743\u90fd\u6bd4\u7ed9\u5b9a\u8fb9\u8fb9\u6743\u5c0f\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u52a0\u8fdb\u7ed9\u5b9a\u7684\u8fb9\u3002\n\n\u6700\u5927\u751f\u6210\u6811\u4e5f\u662f\u540c\u6837\u7684\uff0c\u5c06\u5927\u4e8e\u7ed9\u5b9a\u8fb9\u8fb9\u6743\u7684\u8fb9\u5efa\u65b0\u56fe\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8981\u4f7f\u5f97\u65b0\u56fe\u4e0d\u8fde\u901a\uff0c\u6700\u5c11\u5220\u9664\u7684\u8fb9\u7684\u6570\u91cf\uff0c\u5c31\u662f\u6700\u5c0f\u5272\u95ee\u9898\uff0c\u4f7f\u7528\u6700\u5c0f\u5272\u6c42\u89e3\u3002\n\n\u7531\u4e8e\u4e24\u5f20\u65b0\u56fe\u7684\u8fb9\u96c6\u7684\u4ea4\u96c6\u4e3a\u7a7a\u96c6\uff0c\u6240\u4ee5\u5c06\u4e24\u5f20\u65b0\u56fe\u7684\u6700\u5c0f\u5272\u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\n#define int long long\n#define endl '\\n'\n\nusing namespace std;\n\nconst int N = 2e5 + 5;\nconst int INF = 1 << 30;\n\nint n, m, s, t, ans;\nint u[N], v[N], w[N];\n\n// \u4ee5\u4e0b\u662f\u7956\u4f20 dinic\n\nint dep[N], st[N];\nbool vis[N];\n\nint head[N], tot = 1;\n\nstruct Node{\n\tint to, w, next;\n}edges[N * 2];\n\nvoid add(int u, int v, int w){\n\ttot++;\n\tedges[tot].to = v;\n\tedges[tot].w = w;\n\tedges[tot].next = head[u];\n\thead[u] = tot;\n}\n\nbool bfs(){\n\tmemset(dep, 0, sizeof(dep));\n\tdep[s] = 1;\n\tqueue<int> q;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tint x = q.front();\n\t\tq.pop();\n\t\tfor(int i = head[x]; i; i = edges[i].next){\n\t\t\tif(dep[edges[i].to] == 0 && edges[i].w){\n\t\t\t\tdep[edges[i].to] = dep[x] + 1;\n\t\t\t\tif(edges[i].to == t){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tq.push(edges[i].to);\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nint dfs(int x, int flow){\n  if(x == t){\n    vis[t] = true;\n\t\treturn flow;\n\t}\n\tint tmp = 0, sum = 0;\n  for(int i = st[x]; i; i = edges[i].next){\n    st[x] = i;\n    if(edges[i].w && dep[edges[i].to] == dep[x] + 1){\n\t\t\tif(tmp = dfs(edges[i].to, min(flow - sum, edges[i].w))){\n\t\t\t\tedges[i].w -= tmp;\n\t\t\t\tedges[i ^ 1].w += tmp;\n\t\t\t\tsum += tmp;\n\t\t\t}\n\t\t\tif(flow == sum){\n\t\t\t\tbreak;\n\t\t\t}\n    }\n  }\n  if(!sum){\n  \tdep[x] = 0;\n\t}\n  return sum;\n}\n\nint dinic(){\n\tint ans = 0, sum;\n\twhile(bfs()){\n\t  memcpy(st, head, sizeof(head));\n\t  vis[t] = true;\n\t  while(vis[t]){\n\t    vis[t] = false;\n\t\t  while(sum = dfs(s, INF)){\n\t\t\t  ans += sum;\n\t\t  }\n\t  }\n\t}\n\treturn ans;\n}\n\nvoid Solve(){\n  cin >> n >> m;\n  for(int i = 1; i <= m; i++){\n    cin >> u[i] >> v[i] >> w[i];\n  }\n  int L;\n  cin >> s >> t >> L;\n  for(int i = 1; i <= m; i++){\n    if(w[i] > L){\n      add(u[i], v[i], 1); // \u8fd9\u91cc\u7531\u4e8e\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u6b63\u53cd\u4e24\u8fb9\u90fd\u4e3a 1\n      add(v[i], u[i], 1);\n    }\n  }\n  ans += dinic();\n  tot = 1;\n  memset(head, 0, sizeof(head));\n  for(int i = 1; i <= m; i++){\n    if(w[i] < L){\n      add(u[i], v[i], 1);\n      add(v[i], u[i], 1);\n    }\n  }\n  ans += dinic();\n  cout << ans;\n}\n\nsigned main(){\n#ifdef debug\n  freopen(\"Code.in\", \"r\", stdin);\n  freopen(\"Code.out\", \"w\", stdout);\n#endif\n  Solve();\n  return 0;\n}\n```",
        "postTime": 1673080074,
        "uid": 363006,
        "name": "_Alexande_",
        "ccfLevel": 5,
        "title": "P5934 \u9898\u89e3"
    },
    {
        "content": "\u8003\u8651 `kruskal` \u7b97\u6cd5\u7684\u8fc7\u7a0b\u3002\n\n\u5148\u5c06\u8fb9\u6309\u8fb9\u6743\u6392\u5e8f\uff0c\u8003\u8651\u5f53\u52a0\u5165 $(u,v)$ \u65f6\u53ea\u6709 $(u,v)$ \u4e0d\u8054\u901a\u624d\u53ef\u80fd\u4f7f\u5f97\u5176\u51fa\u73b0\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6240\u6709\u7684\u8fb9\u6743\u5c0f\u4e8e $L$ \u7684\u8fb9\uff0c\u6211\u4eec\u5e0c\u671b\u53bb\u9664\u5c3d\u53ef\u80fd\u5c11\u7684\u8fb9\u4f7f\u5f97 $(u,v)$ \u4e0d\u8054\u901a\u3002\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u7f51\u7edc\u6d41\u6a21\u578b\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9 $(x,y)$ \u5efa\u7acb\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u6700\u5c0f\u5272\u5373\u4e3a\u7b54\u6848\u3002\n\n\u6700\u5927\u751f\u6210\u6811\u7684\u8fc7\u7a0b\u662f\u7c7b\u4f3c\u7684\uff0c\u52a0\u5165\u6240\u6709\u8fb9\u6743\u5927\u4e8e $L$ \u7684\u8fb9\u8dd1\u6700\u5c0f\u5272\uff0c\u5c06\u4e24\u6b21\u7f51\u7edc\u6d41\u7684\u7b54\u6848\u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u5206\u6790\uff1a\n\u7531\u4e8e\u5bb9\u91cf\u5747\u4e3a $1$\uff0c\u6240\u4ee5\u5728\u4f7f\u7528 `Dinic` \u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u964d\u4f4e\uff0c\u5177\u4f53\u5206\u6790\u53c2\u8003[OI-wiki Dinic\u7b97\u6cd5\u7279\u6b8a\u60c5\u5883\u4e0b\u7684\u590d\u6742\u5ea6\u5206\u6790](https://oi-wiki.org/graph/flow/max-flow/#%E7%89%B9%E6%AE%8A%E6%83%85%E5%BD%A2%E4%B8%8B%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90)~~\u53cd\u6b63\u80fd\u8fc7\u5c31\u5bf9\u4e86~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int MX=1e6+7;\nconst ll INF=1e18+7;\nstruct Edge{\n\tint from,to;\n\tll cap,flow;\n\tint nxt;\n}edge[MX];\nstruct e{\n\tint u,v,c;\n}cedge[MX];\nbool cmp(e x,e y){return x.c<y.c;}\nint head[MX],cur[MX],d[MX],tNode=0,cnt=0;\nbool vis[MX];\nint n,m,s,t,L;\nvoid addE(int u,int v,ll c){\n\tedge[tNode].from=u;\n\tedge[tNode].to=v;\n\tedge[tNode].cap=c;\n\tedge[tNode].flow=0;\n\tedge[tNode].nxt=head[u];\n\thead[u]=tNode;\n\ttNode++;\n}\n\nqueue<int > q; \n\nbool BFS() {\n\tmemset(vis,false,sizeof(vis));\n\td[s]=0;\n\tvis[s]=true;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tint p=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[p];i!=-1;i=edge[i].nxt){\n\t\t\tint to=edge[i].to;\n\t\t\tif(!vis[to]&&edge[i].flow<edge[i].cap){\n\t\t\t\td[to]=d[p]+1;\n\t\t\t\tvis[to]=true;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\treturn vis[t];\n}\n\nll DFS(int x,ll a){\n\t//cout<<x<<endl;\n\tif(x==t||a==0)return a;\n\tll flow=0,f;\n\tfor(int &i=cur[x];i!=-1;i=edge[i].nxt){\n\t\tint to=edge[i].to;\n\t\tif(d[x]+1==d[to]&&(f=DFS(to,min(a,edge[i].cap-edge[i].flow)))>0){\n\t\t\tflow+=f;\n\t\t\ta-=f;\n\t\t\tedge[i].flow+=f;\n\t\t\tedge[i^1].flow-=f;\n\t\t\tif(a==0)break;\n\t\t}\n\t}\n\treturn flow;\n}\n\nll DINIC(){\n\tll ret=0;\n\twhile(BFS()){\n\t\tfor(int i=1;i<=n;i++)cur[i]=head[i];\n\t\tret+=DFS(s,INF);\n\t}\n\treturn ret;\n}\n\nvoid add(int x,int y,ll c){\n\taddE(x,y,c);\n\taddE(y,x,0);\n}\n\nll solve(int l,int r){\n\tfor(int i=1;i<=n;i++)head[i]=-1;\n\ttNode=0;\n\tfor(int i=l;i<=r;i++){\n\t\tadd(cedge[i].u,cedge[i].v,1);\n\t\tadd(cedge[i].v,cedge[i].u,1);\n\t}\n\treturn DINIC();\n}\n\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)cin>>cedge[i].u>>cedge[i].v>>cedge[i].c;\n\tsort(cedge+1,cedge+1+m,cmp);\n\tcin>>s>>t>>L;\n\tint pos1=0,pos2=0;\n\tfor(int i=1;i<=m;i++){\n\t\tif(cedge[i].c>=L&&pos1==0)pos1=i;\n\t\tif(cedge[i].c>L&&pos2==0)pos2=i;\n\t}\n\tcout<<solve(1,pos1-1)+solve(pos2,m)<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1678687233,
        "uid": 236867,
        "name": "opHJY2023",
        "ccfLevel": 0,
        "title": "P5934 [\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811 \u9898\u89e3"
    },
    {
        "content": "## \u7b80\u8981\u9898\u610f\n\u7ed9\u4e00\u4e2a\u65e0\u5411\u56fe\u548c\u4e00\u6761\u8fb9\uff0c\u95ee\u9700\u8981\u5220\u9664\u51e0\u6761\u8fb9\u624d\u80fd\u8ba9\u8fd9\u6761\u8fb9\u53ef\u80fd\u5728\u6700\u5c0f\u548c\u6700\u5927\u751f\u6210\u6811\u5185\n## \u9898\u89e3\nKruskal \u6c42\u6700\u5c0f\u751f\u6210\u6811\u6211\u4eec\u662f\u5b66\u8fc7\u7684\uff0c\u6211\u4eec\u77e5\u9053\u5f53\u4e00\u6761\u8fb9\u662f\u5b83\u4e24\u8fb9\u6240\u5728\u7684\u8054\u901a\u5757\u4e4b\u95f4\u6700\u77ed\u7684\uff0c\u8fd9\u6761\u8fb9\u5c31\u5fc5\u5b9a\u5728\u751f\u6210\u6811\u5185\u3002\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u4e5f\u5dee\u4e0d\u591a\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u60f3\u5305\u542b\u7ed9\u5b9a\u7684\u8fb9\u7684\u73af\uff0c\u8fd9\u6837\u5305\u542b\u4e86\u6240\u6709\u53ef\u80fd\u7684\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u4fdd\u8bc1\u8fd9\u6761\u8fb9\u4e00\u5b9a\u662f\u8054\u901a\u6bcf\u4e2a\u73af\u4e0a\u7684\u70b9\u7684\u53ef\u80fd\u8fde\u8fb9\uff0c\u8fd9\u8981\u6c42\u7ed9\u5b9a\u7684\u8fb9\u4e0d\u80fd\u662f\u73af\u4e0a\u6700\u5dee\u7684\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u628a\u6bd4\u7ed9\u5b9a\u8fb9\u5dee\u6216\u8005\u4e00\u6837\u7684\u5168\u90e8\u5220\u6389\uff0c\u5982\u679c\u5269\u4e0b\u7684\u8fb9\u8fd8\u6709\u73af\uff0c\u90a3\u4e48\u7ed9\u5b9a\u7684\u8fb9\u4e00\u5b9a\u662f\u6700\u5dee\u7684\uff0c\u63a5\u4e0b\u6765\u53ea\u8981\u8ba1\u7b97\u53bb\u6389\u591a\u5c11\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff0c\u7528\u6700\u5c0f\u5272\u89e3\u51b3\u3002\n\n\u5173\u4e8e\u540c\u65f6\u8981\u5728\u6700\u5c0f\u548c\u6700\u5927\u4e24\u9897\u751f\u6210\u6811\u4e2d\uff0c\u5176\u5b9e\u4e0d\u9700\u8981\u62c5\u5fc3\u4f1a\u6709\u4ea4\u96c6\u4ec0\u4e48\u7684\uff0c\u4e0a\u9762\u5ffd\u7565\u66f4\u5dee\u8fb9\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u4e24\u6b21\u6c42\u89e3\u4e0d\u4f1a\u4ea7\u751f\u8fb9\u4ea4\u96c6\uff0c\u653e\u5fc3\u5927\u80c6\u505a\u4e24\u6b21\u52a0\u8d77\u6765\u5c31\u597d\u4e86\u3002\n\n\u6ce8\u610f\uff1a\u662f\u65e0\u5411\u56fe\uff0c\u5411\u54ea\u8fb9\u6d41\u90fd\u6709\u53ef\u80fd\u3002\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=20005,M=1e6+5;\nint n,m,num,ver[M],ne[M],val[M],head[N],tot=1,dis[N],now[N],ans,s,t;\nint a[M],b[M],c[M],v;\nvoid add(int x,int y,int z)\n{\n\tver[++tot]=y;ne[tot]=head[x];head[x]=tot;val[tot]=z;\n\tver[++tot]=x;ne[tot]=head[y];head[y]=tot;val[tot]=z;\n}\nbool bfs()\n{\n\tmemset(dis,0,sizeof(dis));\n\tqueue<int> q;dis[s]=1;\n\tnow[s]=head[s];q.push(s);\n\twhile(q.size())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=head[x];i;i=ne[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tif(!val[i] || dis[y]) continue;\n\t\t\tdis[y]=dis[x]+1;now[y]=head[y];\n\t\t\tq.push(y);\n\t\t}\n\t}\n\tif(dis[t]) return 1;\n\treturn 0;\n}\nint dinic(int x,int flow)\n{\n\tif(x==t) return flow;\n\tint k,rest=flow;\n\tfor(int i=now[x];i && rest;i=ne[i])\n\t{\n\t\tint y=ver[i];now[x]=i;\n\t\tif(!val[i] || dis[y]!=dis[x]+1) continue;\n\t\tk=dinic(y,min(rest,val[i]));\n\t\tif(!k) dis[y]=0;\n\t\tval[i]-=k;val[i^1]+=k;rest-=k;\n\t}\n\treturn flow-rest;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;scanf(\"%d%d%d\",&x,&y,&z);\n\t\ta[i]=x;b[i]=y;c[i]=z;\n\t}\n\tscanf(\"%d%d%d\",&s,&t,&v);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(c[i]>=v) continue;\n\t\tadd(a[i],b[i],1);\n\t}\n\twhile(bfs())\n\t{\n\t\tint flow;\n\t\twhile(flow=dinic(s,0x3f3f3f3f)) ans+=flow;\n\t}\n\tmemset(head,0,sizeof(head));tot=1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(c[i]<=v) continue;\n\t\tadd(a[i],b[i],1);\n\t}\n\twhile(bfs())\n\t{\n\t\tint flow;\n\t\twhile(flow=dinic(s,0x3f3f3f3f)) ans+=flow;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1664717007,
        "uid": 300710,
        "name": "xuyuansu",
        "ccfLevel": 0,
        "title": "P5934 [\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u5f20\u65e0\u5411\u6709\u6743\u56fe\u548c\u4e00\u6761\u989d\u5916\u7684\u8fb9\uff0c\u95ee\u6700\u5c11\u5220\u9664\u591a\u5c11\u6761\u8fb9\uff0c\u53ef\u4ee5\u4f7f\u5f97\u8fd9\u6761\u989d\u5916\u7684\u8fb9\u5373\u6709\u53ef\u80fd\u51fa\u73b0\u5728\u8fd9\u5f20\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e2d\uff0c\u4e5f\u6709\u53ef\u80fd\u51fa\u73b0\u5728\u6700\u5927\u751f\u6210\u6811\u4e2d\u3002\n\n## \u89e3\u6cd5\n\n\u8003\u8651\u7528 Kruskal \u6c42\u6700\u5c0f\u751f\u6210\u6811\u65f6\uff0c\u5bf9\u4e8e\u989d\u5916\u7684\u8fd9\u6761\u8fb9 $(u, v)$\uff0c\u5176\u6743\u503c\u4e3a $l$\uff0c\u5982\u679c\u524d\u9762\u8fb9\u6743 $<l$ \u7684\u8fb9\u8fde\u63a5\u540e $u,v$ \u5df2\u7ecf\u8054\u901a\uff0c\u90a3\u4e48 $u,v$ \u5c31\u4e0d\u4f1a\u88ab\u9009\uff0c\u6240\u4ee5\u8003\u8651\u5bf9\u4e8e\u6240\u6709\u8fb9\u6743 $<l$ \u7684\u8fb9\uff0c\u8fde\u4e00\u6761\u53cc\u5411\u8fb9\uff0c\u5bb9\u91cf\u4e3a $1$\uff0c\u4e8b\u5b9e\u4e0a\u5c31\u662f\u6c42\u8fd9\u4e2a\u56fe\u7684\u6700\u5c0f\u5272\u3002\n\n\u6700\u5927\u751f\u6210\u6811\u540c\u7406\uff0c\u7b54\u6848\u662f\u4e24\u4e2a\u6700\u5c0f\u5272\u4e4b\u548c\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nconst int N = 1e6 + 5;\n\nint u[N], v[N], w[N], cur[N], d[N];\nint n, m, s, t, L, ans = 0;\n\nint e[N], c[N], h[N], ne[N], idx;\n\nvoid add(int U, int V, int W)\n{\n\te[idx] = V, c[idx] = W, ne[idx] = h[U], h[U] = idx++;\n\te[idx] = U, c[idx] = 0, ne[idx] = h[V], h[V] = idx++;\n}\n\nint bfs()\n{\n\tfor (int i = 1; i <= n; i++) d[i] = -1;\n\tcur[s] = h[s];\n\td[s] = 0;\n\tqueue<int> q;\n\tq.push(s);\n\twhile (q.size())\n\t{\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tfor (int i = h[u]; ~i; i = ne[i])\n\t\t{\n\t\t\tint j = e[i];\n\t\t\tif (d[j] == -1 && c[i] > 0)\n\t\t\t{\n\t\t\t\td[j] = d[u] + 1;\n\t\t\t\tcur[j] = h[j];\n\t\t\t\tif (j == t) return 1;\n\t\t\t\tq.push(j);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nint dfs(int u, int lim)\n{\n\tif (u == t) return lim;\n\tint flow = 0;\n\tfor (int i = cur[u]; ~i && flow < lim; i = ne[i])\n\t{\n\t\tcur[u] = i;\n\t\tint j = e[i];\n\t\tif (d[j] == d[u] + 1 && c[i] > 0)\n\t\t{\n\t\t\tint t = dfs(j, min(c[i], lim - flow));\n\t\t\tif (t == 0) d[j] = -1;\n\t\t\tflow += t;\n\t\t\tc[i] -= t, c[i ^ 1] += t;\n\t\t}\n\t}\n\treturn flow;\n}\n\nint dinic()\n{\n\tint ret = 0, f;\n\twhile (bfs())\n\t{\n\t\twhile (f = dfs(s, (int)2e9)) ret += f;\n\t}\n\treturn ret;\n}\n\nsigned main()\n{\n\tmemset(h, -1, sizeof h);\n\tscanf(\"%lld%lld\", &n, &m);\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\", &u[i], &v[i], &w[i]);\n\t}\n\tscanf(\"%lld%lld%lld\", &s, &t, &L);\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tif (w[i] < L)\n\t\t{\n\t\t\tadd(u[i], v[i], 1);\n\t\t\tadd(v[i], u[i], 1);\n\t\t}\n\t}\n\tans = dinic();\n\tmemset(h, -1, sizeof h);\n\tidx = 0;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tif (w[i] > L)\n\t\t{\n\t\t\tadd(u[i], v[i], 1);\n\t\t\tadd(v[i], u[i], 1);\n\t\t}\n\t}\n\tans += dinic();\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1660111351,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "P5934 [\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811"
    },
    {
        "content": "# $\\text{Description}$\n\n\u6c42\u4f7f$(u,v,w)$\u8fd9\u6761\u8fb9\u65e2\u5728\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u4e5f\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\uff0c\u6700\u5c11\u9700\u8981\u5220\u9664\u7684\u8fb9\u7684\u6570\u91cf\u3002\n# $\\text{Solution}$\n\u6211\u4eec\u5148\u8003\u8651\u6700\u5c0f\u751f\u6210\u6811\n\n\u6211\u4eec\u6a21\u62df$\\text{Kruskal}$\u7684\u7b97\u6cd5\u8fc7\u7a0b\uff0c\u5982\u679c$(u,v,w)$\u8981\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u7684\u8bdd\uff0c\u90a3\u4e48\u5728\u9009\u8fd9\u6761\u8fb9\u7684\u65f6\u5019\uff0c\u524d\u9762\u6bd4\u4ed6\u5c0f\u7684\u8fb9\u90fd\u6ca1\u6709\u4f7f$(u,v)$\u8054\u901a\u3002\n\n\u8fd9\u6837\u76f8\u5f53\u4e8e\u6211\u4eec\u8981\u4f7f$(u,v)$\u5728\u6bd4\u4ed6\u5c0f\u7684\u8fb9\u96c6\u4e2d\uff0c\u4e0d\u8ba9\u4ed6\u4eec\u8054\u901a\uff0c\u5373\u6c42\u6700\u5c0f\u5272\u3002\n\n\u6700\u5927\u751f\u6210\u6811\u4e5f\u540c\u7406\u3002\n\n# $\\text{Code}$\n```cpp\ninline void Build() {\n\tread(n); read(m); Flow.n = n; \n\tfor (int i = 1; i <= m; ++i) read(a[i]), read(b[i]), read(c[i]);\n\tread(Flow.s); read(Flow.t); read(w);\n\tFlow.Clear();\n\tfor (int i = 1; i <= m; ++i) if (w < c[i]) Flow.Add(a[i], b[i], 1);//\u8fd9\u91cc\u5efa\u7684\u662f\u4e24\u8fb9\u6d41\u91cf\u5747\u4e3a1\u7684\u8fb9\n\tFlow.Dinic(Flow.s, Flow.t, Flow.n);\n\tFlow.Clear();\n\tfor (int i = 1; i <= m; ++i) if (w > c[i]) Flow.Add(a[i], b[i], 1);\n\tFlow.Dinic(Flow.s, Flow.t, Flow.n); \n\tprintf(\"%d\\n\", ans);\n}\n```",
        "postTime": 1589537530,
        "uid": 107377,
        "name": "Cryin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5934 \u3010[\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u6700\u5c0f\u751f\u6210\u6811\u7684\u60c5\u51b5\uff1a\n\n\u8003\u8651\u5982\u4f55\u4f7f\u5f97$<u,v>$\u4e0d\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\uff0c\u4e0d\u96be\u53d1\u73b0\u5982\u679c\u53ea\u4f7f\u7528$<L$\u7684\u8fb9\u5c31\u80fd\u4f7f\u5f97$u,v$\u8054\u901a\u90a3\u4e48\u5c31\u4e0d\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5c06\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u5220\u53bb\u6700\u5c11\u7684\u8fb9\u4f7f\u5f97$u,v$\u4e0d\u8fde\u901a\uff0c\u4e5f\u5c31\u662f\u6c42\u6700\u5c0f\u5272\u4e86\u3002\n\n\u6700\u5927\u751f\u6210\u6811\u540c\u7406\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\nconst int N=2e4+5;\nconst int M=2e5+5;\n\nint n,m,cnt,s,t;\nint u[M],v[M],w[M];\nint head[N],dep[N];\n\nstruct edge\n{\n    int to,nxt,w;\n};\nedge e[M<<2];\n\nvoid add(int x,int y,int z)\n{\n    e[++cnt].to=y;\n    e[cnt].nxt=head[x];\n    e[cnt].w=z;\n    head[x]=cnt;\n}\nvoid link(int x,int y,int z)\n{\n    add(x,y,z),add(y,x,0);\n}\nbool bfs()\n{\n    queue<int>q;\n    ms(dep);\n    q.push(s),dep[s]=1;\n    while(!q.empty())\n    {\n\tint x=q.front();\n\tq.pop();\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t    int v=e[i].to;\n\t    if(e[i].w&&!dep[v])\n\t    {\n\t\tdep[v]=dep[x]+1;\n\t\tq.push(v);\n\t\tif(v==t) return true;\n\t    }\n\t}\n    }\n    return false;\n}\nint dfs(int x,int flow)\n{\n    if(x==t) return flow;\n    int res=flow,delta;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n\tint v=e[i].to;\n\tif(!res) return flow;\n\tif(e[i].w&&dep[v]>dep[x])\n\t{\n\t    delta=dfs(v,min(e[i].w,res));\n\t    if(!delta) dep[v]=0;\n\t    e[i].w-=delta,e[i^1].w+=delta;\n\t    res-=delta;\n\t}\n    }\n    return flow-res;\n}\nint dinic()\n{\n    int res=0,flow=0;\n    while(bfs()) while(flow=dfs(s,INF)) res+=flow;\n    return res;\n}\nint main()\n{\n    fio();\n    gi(n),gi(m);\n    for(int i=1;i<=m;++i) gi(u[i],v[i],w[i]);\n    int l,ans=0;\n    gi(s,t,l);\n    cnt=1,ms(head);\n    for(int i=1;i<=m;++i) if(w[i]<l) link(u[i],v[i],1),link(v[i],u[i],1);\n    ans+=dinic();\n    cnt=1,ms(head);\n    for(int i=1;i<=m;++i) if(w[i]>l) link(u[i],v[i],1),link(v[i],u[i],1);\n    ans+=dinic();\n    print(ans);\n    end();\n}\n```",
        "postTime": 1582535074,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5934 \u3010[\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    },
    {
        "content": "\u56de\u987e $\\mathrm{kruskal}$ \u7684\u8fc7\u7a0b\uff0c\u4e00\u6761\u8fb9 $(u,v,w)$ \u53ef\u80fd\u51fa\u73b0\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\uff0c\u5fc5\u987b\u4fdd\u8bc1\u6240\u6709 $w$ \u503c\u5c0f\u4e8e\u8be5\u8fb9\u7684\u8fb9\u52a0\u5165\u56fe\u540e $(u,v)$ \u4ecd\u7136\u4e0d\u8fde\u901a\u3002\u90a3\u4e48\u539f\u9898\u76f8\u5f53\u4e8e\u8be2\u95ee\u6700\u5c11\u5220\u53bb\u51e0\u6761\u8fb9\uff0c\u4f7f\u5f97 $(u,v)$ \u65e0\u6cd5\u901a\u8fc7\u8fb9\u6743\u5c0f\u4e8e $L$ \u7684\u8fb9\u8fde\u901a\uff08\u6700\u5927\u751f\u6210\u6811\u540c\u7406\uff09\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u6700\u5c0f\u5272\u95ee\u9898\uff0c\u4f17\u6240\u5468\u77e5\u6700\u5927\u6d41\u7b49\u4e8e\u6700\u5c0f\u5272\u3002\u5c06 $u,v$ \u770b\u505a\u56fe\u7684\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u5bf9\u4e8e\u6240\u6709\u8fb9\u6743\u5c0f\u4e8e $L$ \u7684\u8fb9 $(u',v')$ \uff0c\u5728\u56fe\u4e2d\u8fde\u63a5\u4e24\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9 $u' \\to v'$ \u548c $v' \\to u'$\uff0c\u7136\u540e\u5728\u8fd9\u5f20\u56fe\u4e0a\u8dd1\u6700\u5927\u6d41\u5c31\u662f\u4f7f\u5f97\u8fb9 $(u,v,L)$ \u53ef\u80fd\u51fa\u73b0\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u7684\u7b54\u6848\uff0c\u6700\u5927\u751f\u6210\u6811\u540c\u7406\u3002\u628a\u4e24\u4e2a\u7b54\u6848\u52a0\u8d77\u6765\u5c31\u884c\u4e86\uff08\u663e\u7136\u8fb9\u6743\u5927\u4e8e $L$ \u7684\u8fb9\u548c\u8fb9\u6743\u5c0f\u4e8e $L$ \u7684\u8fb9\u4e0d\u53ef\u80fd\u6709\u4ea4\uff09\u3002\n\n```cpp\n#define int long long\n \nconst int maxn = 1e6 + 5;\nconst int inf = 0x3f3f3f3f3f3f3f;\n\nstruct node {\n    int nxt, to, flow;\n} edge[maxn << 1];\nint n, m, s, t, w, tot = 1, head[maxn];\n\ninline void addedge(int u, int v, int w) {\n    edge[++tot] = (node){head[u], v, w}, head[u] = tot;\n}\n\nint dep[maxn];\nqueue <int> q;\n\ninline bool bfs(int s, int t) {\n    for (int i = 1;i <= n;i++) dep[i] = 0;\n    dep[s] = 1, q.push(s);\n    while (!q.empty()) {\n        int u = q.front(); q.pop();\n        for (int i = head[u];i;i = edge[i].nxt) {\n            int v = edge[i].to;\n            if (edge[i].flow && !dep[v]) {\n                dep[v] = dep[u] + 1;\n                q.push(v);\n            }\n        }\n    }\n    return dep[t];\n} \n\nint cur[maxn];\n\ninline int dfs(int u, int rest = inf) {\n    if (u == t) return rest;\n    int flow = 0;\n    for (int i = cur[u];i;i = edge[i].nxt) {\n        cur[u] = i;\n        int v = edge[i].to;\n        if (edge[i].flow && dep[v] == dep[u] + 1) {\n            int x = dfs(v, min(rest, edge[i].flow));\n            edge[i].flow -= x;\n            edge[i ^ 1].flow += x;\n            rest -= x;\n            flow += x;\n        }\n        if (!rest) break;\n    }\n    return flow;\n}\n\ninline int dinic(int s, int t) {\n    int ans = 0;\n    while (bfs(s, t)) {\n        for (int i = 1;i <= n;i++) cur[i] = head[i];\n        ans += dfs(s);\n    }\n    return ans;\n}\n\nstruct Edge {\n    int u, v, w;\n} e[maxn << 1];\nint ans;\n\nsigned main(void) {\n    n = read(), m = read();\n    for (int i = 1;i <= m;i++) {\n        e[i].u = read(), e[i].v = read(), e[i].w = read();\n    }\n    s = read(), t = read(), w = read();\n    for (int i = 1;i <= m;i++) {\n        if (e[i].w < w) {\n            addedge(e[i].u, e[i].v, 1), addedge(e[i].v, e[i].u, 0);\n            addedge(e[i].v, e[i].u, 1), addedge(e[i].u, e[i].v, 0);\n        }\n    }\n    ans += dinic(s, t);\n    for (int i = 1;i <= n;i++) head[i] = 0;\n    tot = 1;\n    for (int i = 1;i <= m;i++) {\n        if (e[i].w > w) {\n            addedge(e[i].u, e[i].v, 1), addedge(e[i].v, e[i].u, 0);\n            addedge(e[i].v, e[i].u, 1), addedge(e[i].u, e[i].v, 0);\n        }\n    }\n    ans += dinic(s, t);\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1627202771,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5934\u3010[\u6e05\u534e\u96c6\u8bad2012]\u6700\u5c0f\u751f\u6210\u6811\u3011"
    }
]