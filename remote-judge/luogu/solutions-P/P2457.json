[
    {
        "content": "\u5927\u5927\u7684\u6c34\u9898\uff0c\u88f8\u7684\u6700\u5c0f\u8d39\u7528\u6d41\u3002\n\n1.\u7edf\u8ba1\u51fa\u6bcf\u4e00\u79cd\u8d27\u7269\u7684\u6570\u91cf\u603b\u548csum[i]\uff0c\u90a3\u4e48\u5bf9\u4e8e\u7b2ci\u79cd\u8d27\u7269\uff0c\u5c06\u5b83\u653e\u5230\u7b2cj\u4f4d\u7f6e\u65f6\u7684\u4ee3\u4ef7\u5c31\u662fsum[i]-map[j][i]\u3002\n\n2.\u865a\u62df\u4e00\u4e2a\u6e90\u70b9\u548c\u4e00\u4e2a\u6c47\u70b9\uff0c\u865a\u62dfn\u4e2a\u70b9\u4ee3\u8868n\u79cd\u8d27\u7269\uff0c\u53e6\u5916n\u4e2a\u70b9\u4ee3\u8868n\u4e2a\u4ed3\u5e93\u3002\uff08\u6240\u4ee5\u603b\u5171\u6709n\\*2+1\u4e2a\u70b9\uff09\u3002\n\n3.\u5c06\u6e90\u70b9\u548c1\uff5en\u4e2a\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\u7684\u8fb9\u3002\uff08\u4ee3\u8868\u6bcf\u4e00\u79cd\u8d27\u7269\u90fd\u9700\u8981\u5b89\u653e\uff09\n\n4.\u5c06i\u548cj+n\u4e4b\u95f4\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3asum[i]-map[j][i]\u7684\u8fb9\u3002\uff08\u8868\u793a\u5c06\u7b2ci\u79cd\u8d27\u7269\u653e\u5230\u7b2cj\u4e2a\u4ed3\u5e93\u7684\u4ee3\u4ef7\uff09\n\n5.\u5c06j+n\u548c\u6c47\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a\u96f6\u7684\u8fb9\u3002\uff08\u8868\u793a\u7b2cj\u4e2a\u4ed3\u5e93\u80fd\u4e14\u4ec5\u80fd\u653e\u4e00\u79cd\u8d27\u7269\uff0c\u5c31\u907f\u514d\u4e86\u628a\u4e0d\u540c\u7684\u8d27\u7269\u653e\u5230\u540c\u4e00\u4e2a\u4ed3\u5e93\u4e2d\uff09\n\n\u7136\u540e\u76f4\u63a5\u8dd1\u6700\u5c0f\u8d39\u7528\u6d41\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u9f13\u638c\uff5e\uff5e\u9f13\u638c\uff5e\uff5e\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint n,map[155][155],sum[155];\nstruct node\n{\n    int next,to,dis,cap;\n}edge[50005];\nint head[1001],size=1;\nvoid putin(int from,int to,int dis,int cap)\n{\n    size++;\n    edge[size].next=head[from];\n    edge[size].to=to;\n    edge[size].dis=dis;\n    edge[size].cap=cap;\n    head[from]=size;\n}\nvoid in(int from,int to,int dis,int cap)\n{\n    putin(from,to,dis,cap);\n    putin(to,from,-dis,0);\n}\nbool vis[1001];\nint dist[1001],pre[1001],cost;\nbool spfa(int r,int t)\n{\n    memset(dist,127/3,sizeof(dist));\n    int mmax=dist[0];\n    queue<int>mem;\n    mem.push(r);\n    dist[r]=0;\n    vis[r]=1;\n    while(!mem.empty())\n    {\n    int x=mem.front();mem.pop();\n    vis[x]=0;\n    for(int i=head[x];i!=-1;i=edge[i].next)\n    {\n        int y=edge[i].to;\n        if(edge[i].cap&&dist[y]>dist[x]+edge[i].dis)\n        {\n        dist[y]=dist[x]+edge[i].dis;\n        pre[y]=i;\n        if(!vis[y])\n        {\n            mem.push(y);\n            vis[y]=1;\n        }\n        }\n    }\n    }\n    if(dist[n*2+1]==mmax)return 0;\n    else return 1;\n}\nvoid change()\n{\n    int x=n*2+1;\n    while(x!=0)\n    {\n    cost+=edge[pre[x]].dis;\n    edge[pre[x]].cap-=1;\n    edge[pre[x]^1].cap+=1;\n    x=edge[pre[x]^1].to;\n    }\n}\nint main()\n{\n    freopen(\"[SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c.in\",\"r\",stdin);\n    freopen(\"[SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c.out\",\"w\",stdout);\n    int i,j;\n    memset(head,-1,sizeof(head));\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    for(j=1;j<=n;j++)\n        scanf(\"%d\",&map[i][j]),sum[j]+=map[i][j];\n    for(i=1;i<=n;i++)\n    {\n    in(0,i,0,1);\n    in(i+n,n*2+1,0,1);\n    for(j=1;j<=n;j++)\n        in(i,j+n,sum[i]-map[j][i],1);\n    }\n    while(spfa(0,n*2+1))change();\n    printf(\"%d\\n\",cost);\n    return 0;\n}\n```",
        "postTime": 1505982680,
        "uid": 36357,
        "name": "kakakaka",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2457 \u3010[SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u662f\u4e2a\u5e26\u6743\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u53ea\u4e0d\u8fc7\u662f\u6700\u5c0f\u5339\u914d\uff0c\u6240\u4ee5\u8d39\u7528\u6d41\u662f\u5f88\u65b9\u4fbf\u7684\n\n\u7136\u800c\u6211\u4eec\u673a\u623f\u7684herobrine\u5927\u4f6cdinicTLE\u4e00\u4e2a\u70b9\uff0c\u6211\u8868\u793a\u4e0d\u80fd\u7406\u89e3\uff0c\u8fd9\u9898EK\u90fd\u8f7b\u677e\u8fc7\n\n\u4e0aek\u4ee3\u7801\uff0c\u56e0\u4e3a\u662f\u7167\u7740\u8d39\u7528\u6d41\u677f\u5b50\u6539\u7684\uff0c\u7528\u7684\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u6240\u4ee5\u9884\u5904\u7406\u6bd4\u8f83\u590d\u6742\n\n\u6ce8\u91ca\u5728\u4ee3\u7801\u91cc\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#define N 305 //\u70b9\u6570\u81f3\u5c11\u8981n*2+2(\u4e8c\u5206\u56fe2n\u4e2a\u70b9,\u8fd8\u6709\u6e90\u70b9\u6c47\u70b9)\n#define For(i,j,k) for(int i=j;i<=k;++i)\nusing namespace std;\nint read(){\n    int x=0,l=1; char ch=getchar();\n    while(!isdigit(ch)) {if (ch=='-') l=-1; ch=getchar();}\n    while(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return x*l;\n}\nint head[N],cnt=1,q[N],qian[N],dis[N],a[151][151],b[151]; //cnt\u662f\u8fb9\u6570\nstruct node{\n    int next,to,f,w; //f\u6d41\u91cf\uff0cw\u8d39\u7528\n}mp[50000]; //\u8fb9\u6570\u8981\u591a\u5f00\u4e00\u70b9\nvoid add(int x,int y,int z,int w){\n    mp[++cnt]=node{head[x],y,z,w}; head[x]=cnt; //\u94fe\u524d\u5b58\u8fb9\n}\nint main(){\n    int s0=0,n=read(),l,r,x,y,s,t; bool fl[N]={0},flag;\n    s=1; t=n*2+2; //s\u6e90\u70b9\uff0ct\u6c47\u70b9\n    For(i,1,n)\n        For(j,1,n) a[i][j]=read(); //\u8981\u5148\u5168\u90e8\u8bfb\u5165\n    For(i,1,n)\n        For(j,1,n) b[i]+=a[j][i]; //b[i]\u6307\u8d27\u7269i\u7684\u603b\u6570\n    For(i,1,n){\n        add(s,i+1,1,0); add(i+1,s,0,0); //\u6e90\u70b9\u5efa\u8fb9\uff0c\u70b9 i+1 \u8868\u793a\u7b2c i \u79cd\u8d27\u7269\n        add(n+i+1,t,1,0); add(t,n+i+1,0,0); //\u6c47\u70b9\u5efa\u8fb9\uff0cn+i+1 \u8868\u793a\u7b2c i \u4e2a\u4ed3\u5e93\n        For(j,1,n) add(i+1,j+n+1,1,b[i]-a[j][i]),add(j+n+1,i+1,0,a[j][i]-b[i]); //\u8d27\u7269 i \u5230\u4ed3\u5e93j\u7684\u8d39\u7528\u4e3a i \u7684\u603b\u6570\u51cf\u53bb\u4ed3\u5e93 j \u5df2\u6709\u7684\u8d27\u7269 i \u6570\u91cf\n        //\u6b63\u53cd\u5411\u8fb9\u7f16\u53f7\u76f8\u90bb\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u53f7^1\u5feb\u901f\u627e\u5230\u53cd\u5411\u8fb9(\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48cnt\u521d\u503c\u8981\u4e3a1)\n    }\n    n=n*2+2; //n\u6539\u4e3a\u603b\u70b9\u6570,\u540e\u9762\u5faa\u73af\u961f\u5217\u8981\u7528\n    while(1){\n        memset(dis,127,sizeof(dis));\n        q[1]=s; flag=0; fl[s]=1; l=0; r=1; dis[s]=0;\n        while(l<r){\n            l++; x=q[l%n];\n            for(int i=head[x];i!=0;i=mp[i].next){\n                y=mp[i].to;\n                if (mp[i].f>0&&dis[y]>dis[x]+mp[i].w){\n                    dis[y]=dis[x]+mp[i].w;\n                    if (!fl[y]) fl[y]=1,q[(++r)%n]=y;\n                    qian[y]=i; if (y==t) flag=1; //qian[y]\u662f\u7528\u6765\u627e\u8def\u5f84\u7684\uff0c\u5185\u90e8\u5b58\u7684\u662f\u8fb9\u7f16\u53f7\n                }\n            }\n            fl[x]=0;\n```\n}//\u8fd9\u4e48\u591a\u884c\u90fd\u662fspfa\u627e\u8d39\u7528\u6700\u5c0f\u7684\u589e\u5e7f\u8def\n```cpp\n        if (!flag) break; //\u6ca1\u6709\u589e\u5e7f\u8def\u53ef\u4ee5\u9000\u4e86\n        y=t;\n        while(qian[y]!=0){ //\u6c47\u70b9\u56de\u6eaf\u627e\u8def\u5f84\n            x=qian[y]; s0+=mp[x].w; mp[x].f--; mp[x^1].f++; y=mp[x^1].to; //y\u62ff\u5230\u4e0b\u4e00\u4e2a\u70b9\u7684\u7f16\u53f7(\u53cd\u5411\u8fb9\u6307\u5411\u7684\u70b9\u5c31\u662f)\n        }\n    }\n    printf(\"%d\\n\",s0);\n    return 0; //\u7ed3\u675f\u4e86~\u6700\u77ed\u826f\u5fc3\u4ee3\u7801\n}\n```",
        "postTime": 1504012671,
        "uid": 20821,
        "name": "wjy666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2457 \u3010[SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "\u6709\u6bd2\u7684\u9898\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u5f53\u6211\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u9053\u9898\u76ee\u65f6\uff0c\u7b2c\u4e00\u53cd\u5e94\u65f6KM\uff0c\u4f46\u6211\u4e0d\u4f1a\u6253\uff0c\u6240\u4ee5\u5c31\u6253\u8d39\u7528\u6d41\u3002\u7ed3\u679cDinic\u88ab\u5361\u7206\uff0c\u6b7b\u6d3bTLE1\u4e2a\u70b9\u3002\u7136\u540e\u3002\u3002\u3002\n\n\n\n\u6211\u5c31\u53bb\u770b\u4e86\u4e00\u4e0bKM\u3002\n\n\u5176\u5b9eKM\u53ea\u662f\u5308\u7259\u5229\u7684\u4e00\u4e2a\u53d8\u79cd\uff0c\u7a0d\u5fae\u6539\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\uff08\u9644\u89e3\u91ca\uff09\uff1a\n\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<queue>\n#define For(i,a,b) for(i=(a);i<=(b);++i)\nusing namespace std;\nconst int MAXN=190;\nconst int inf=0xFFFFFFF;\ntemplate<typename T>\ninline void read(T &x)//\u5feb\u901f\u8bfb\u5165\n{\n    T s=0,f=1;\n    char k=getchar();\n    while(!isdigit(k)&&(k^'-'))k=getchar();\n    if(!isdigit(k))\n    {\n        f=-1;\n        k=getchar();\n    }\n    while(isdigit(k))\n    {\n        s=(s<<3)+(s<<1)+(k^48);\n        k=getchar();\n    }\n    x=s*f;\n}\nint n,a[MAXN][MAXN],match[MAXN],l[MAXN],r[MAXN];//\u6570\u7ec4\u5bf9\u5e94\uff1aa[i][j]:\u4ed3\u5e93i\u4e2d\u653e\u5165j\u7269\u54c1\u9700\u8981\u7684\u6743match[i]:\u5308\u7259\u5229\u4e2d\u7269\u54c1i\u5bf9\u5e94\u5339\u914d\u4ed3\u5e93l:\u4ed3\u5e93i\u7684\u671f\u671b\u503cr[i]:\u7269\u54c1j\u7684\u671f\u671b\u503c\nbool visx[MAXN],visy[MAXN];//\u5206\u522b\u8bb0\u5f55\u4ed3\u5e93\u548c\u7269\u54c1\u662f\u5426\u8bbf\u95ee\nbool dfs(int x)//\u5308\u7259\u5229++\n{\n    visx[x]=true;\n    int i;\n    For(i,1,n)if(l[x]+r[i]==a[x][i]&&!visy[i])//KMdfs\u4e2d\u6bd4\u5308\u7259\u5229\u591a\u7684\u4e00\u884c\uff1al[x]+r[i]==a[x][i]\n    {\n        visy[i]=true;\n        if(!match[i]||dfs(match[i]))\n        {\n            match[i]=x;\n            return true;\n        }\n    }\n    return false;\n}\nint KM(void)\n{\n    int i,j,k;\n    For(i,1,n)\n        For(j,1,n)if(a[i][j]>l[i])l[i]=a[i][j];//\u9884\u5904\u7406\u4ed3\u5e93\u671f\u671b\u503c\n    For(i,1,n)\n    {\n        while(1)\n        {\n            memset(visx,0,sizeof(visx));//\u8bb0\u5f97\u6e050\n            memset(visy,0,sizeof(visy));\n            if(dfs(i))break;//\u5982\u679c\u627e\u5230\u5339\u914d\uff0c\u76f4\u63a5\u9000\u51fa\u8fd9\u6b21\u5faa\u73af\n            int d=inf;//\u5426\u5219\u627e\u5230\u5df2\u5339\u914d\u4ed3\u5e93\u4e0e\u672a\u5339\u914d\u7269\u54c1\u4e2d\u671f\u671b\u503c\u548c\u51cf\u53bb\u6743\u503c\u6700\u5c0f\u7684\u5dee\uff0c\u5728\u5c06\u5df2\u5339\u914d\u7684\u4ed3\u5e93\u671f\u671b\u503c\u51cf\u53bb\u8be5\u5dee\uff0c\u5df2\u5339\u914d\u7684\u7269\u54c1\u52a0\u4e0a\u8be5\u5dee\n            For(j,1,n)if(visx[j])\n                For(k,1,n)if(!visy[k])d=min(d,l[j]+r[k]-a[j][k]);\n            For(j,1,n)if(visx[j])l[j]-=d;\n            For(j,1,n)if(visy[j])r[j]+=d;\n        }\n    }\n    int sum=0;\n    For(i,1,n)sum+=a[match[i]][i];//\u5904\u7406\u8f93\u51fa\n    return sum;\n}\nint main()\n{\n    //freopen(\"data.txt\",\"r\",stdin);\u663e\u7136\u662f\u8c03\u8bd5\n    //freopen(\"sdoi.out\",\"w\",stdout);\n    read(n);\n    int i,j,k,l;\n    For(i,1,n)\n        For(j,1,n)\n        {\n            read(k);\n            For(l,1,n)if(l!=i)a[l][j]+=k; //\u6ce8\u610f\u8f93\u5165\u7684\u5904\u7406\n        }\n    For(i,1,n)\n       For(j,1,n)a[i][j]=100*n-a[i][j];//\u8bb0\u5f97\u8981\u5c06\u6743\u503c\u53d6\u53cd\uff0c\u56e0\u4e3a\u4f60\u8dd1\u7684\u662f\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\u4e3a\u4e86\u65b9\u4fbfmemset\uff0c\u6211\u5c06\u6743\u53d6\u53cd\u540e\u518d\u52a0\u4e86100n\n    printf(\"%d\\n\",100*n*n-KM());//\u8bb0\u5f97\u52a0\u4e0a\u591a\u51cf\u7684100n\u3002\uff08\u56e0\u4e3a\u6709n\u6761\u5339\u914d\u8fb9\uff0c\u6240\u4ee5\u4e00\u5171\u8981\u52a0\u4e0a100n^2\uff09\n    return 0;\n}\n```\n\u987a\u4fbf\u518d\u964490\u5206\u6028\u5ff5Dinic\u3002\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<queue>\n#define For(i,a,b) for(i=(a);i<=(b);++i)\nusing namespace std;\nconst int MAXN=1000;\nconst int inf=0xFFFFFFF;\ntemplate<typename T>\ninline void read(T &x)\n{\n    T s=0,f=1;\n    char k=getchar();\n    while(!isdigit(k)&&(k^'-'))k=getchar();\n    if(!isdigit(k))\n    {\n        f=-1;\n        k=getchar();\n    }\n    while(isdigit(k))\n    {\n        s=(s<<3)+(s<<1)+(k^48);\n        k=getchar();\n    }\n    x=s*f;\n}\nint n,a[MAXN][MAXN];\nstruct edge\n{\n    int v,w,c,next;\n}p[MAXN*MAXN+MAXN<<2];\nint e=1,head[MAXN],fee;\nvoid add(int u,int v,int c,int f)\n{\n    p[++e].v=v;\n    p[e].c=c;\n    p[e].w=f;\n    p[e].next=head[u];\n    head[u]=e;\n}\nint g[MAXN];\nbool vis[MAXN];\nint level[MAXN];\nbool spfa(int s,int t)\n{\n    int h=0,tt=1;\n    g[tt]=s;\n    fill(level+1,level+t+1,inf);\n    level[s]=1;\n    while(h!=tt)\n    {\n        h=(h+1)%300;\n        int u=g[h],v=head[u];\n        vis[u]=false;\n        while(v)\n        {\n            if(p[v].c&&level[p[v].v]>level[u]+p[v].w)\n            {\n                level[p[v].v]=level[u]+p[v].w;\n                if(!vis[p[v].v])\n                {\n                    vis[p[v].v]=true;\n                    tt=(tt+1)%300;\n                    g[tt]=p[v].v;\n                }\n            }\n            v=p[v].next;\n        }\n    }\n    return level[t]!=inf;\n}\nint dfs(int u,int t,int flow)\n{\n    if(u==t||!flow)return flow;\n    int sum=0,v=head[u];\n    vis[u]=true;\n    while(v)\n    {\n        if(level[p[v].v]==level[u]+p[v].w&&!vis[p[v].v]&&p[v].c>0)\n        {\n            int f=dfs(p[v].v,t,min(flow,p[v].c));\n            sum+=f;\n            p[v].c-=f;\n            p[v^1].c+=f;\n            fee+=f*p[v].w;\n            flow-=f;\n        }\n        v=p[v].next;\n    }\n    vis[u]=false;\n    return sum;\n}\nvoid Dinic(int s,int t)\n{\n    int ans=0;\n    while(spfa(s,t))\n    {\n        ans+=dfs(s,t,inf);\n        //cout<<ans<<endl;\n    }\n}\nint main()\n{\n    //freopen(\"data.txt\",\"r\",stdin);\n    //freopen(\"sdoi.out\",\"w\",stdout);\n    read(n);\n    int i,j,k,u;\n    For(i,1,n)\n        For(j,1,n)\n        {\n            read(k);\n            For(u,1,n)if(u!=i)a[u][j]+=k;\n        }\n    For(i,1,n)\n    {\n        add(1,i+1,1,0);\n        add(i+1,1,0,0);\n        add(i+n+1,n*2+2,1,0);\n        add(n*2+2,i+n+1,0,0);\n        For(j,1,n)\n        {\n            add(i+1,n+j+1,1,a[i][j]);\n            add(n+j+1,i+1,0,-a[i][j]);\n        }\n    }\n    Dinic(1,n*2+2);\n    printf(\"%d\\n\",fee);\n    return 0;\n}\n\uff08\u53c8\u957f\u53c8\u4e0d\u80fd\u8fc7\uff09\n```",
        "postTime": 1504005498,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2457 \u3010[SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "**Part 1 \u9898\u610f\u5206\u6790**\n\n\u5c06\u4e00\u4e2a\u7c7b\u578b\u7684\u8d27\u7269\u653e\u5230\u540c\u4e00\u4e2a\u4ed3\u5e93\u4e2d\uff0c\u4ee4\u82b1\u8d39\u4e3a\u6bcf\u4e2a\u8d27\u7269\u7684\u6570\u91cf\uff0c\u6c42\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u4e0d\u96be\u770b\u51fa\uff0c\u8d39\u7528\u6d41\u88f8\u9898\u3002\n\n**Part 2 \u5efa\u56fe**\n\n1.\u5047\u8bbe\u7b2c $i$ \u79cd\u8d27\u7269\u7684\u6570\u91cf\u603b\u5171\u4e3a $sum_i$ , \u5219\u5c06\u7b2c $j$ \u4e2a\u4ed3\u5e93\u88c5\u6ee1\u7b2c $i$ \u79cd\u7269\u54c1\u6240\u8981\u82b1\u8d39\u7684\u4ef7\u503c\u4e3a $sum_i - a_{j,i}$ ;\n\n2.\u5efa\u7acb\u8d85\u6e90\u8d85\u6c47\uff0c\u5e76\u5efa $n$ \u4e2a\u70b9\u8868\u793a\u4ed3\u5e93\uff0c\u5e76\u5efa $n$ \u4e2a\u70b9\u8868\u793a\u8d27\u7269\uff1b\n\n3.\u5c06\u6bcf\u79cd\u8d27\u7269\u4e0e\u8d85\u6e90\u8fde\u63a5\uff0c\u6d41\u91cf $1$ , \u8d39\u7528\u4e3a $0$ ;\n\n4.\u5c06\u6bcf\u4e2a\u4ed3\u5e93\u4e0e\u8d85\u6c47\u8fde\u63a5\uff0c\u6d41\u91cf $1$ , \u8d39\u7528\u4e3a $0$ ;\n\n5.\u7531\u5efa\u56fe\u7b2c\u4e00\u6761\uff0c\u5c06\u7b2c $j$ \u4e2a\u4ed3\u5e93\u548c\u7b2c $i$ \u79cd\u8d27\u7269\u8fde\u63a5\uff0c\u6d41\u91cf\u4e3a $1$ , \u8d39\u7528\u4e3a $sum_i - a_{j,i}$ .\n\n\u88f8\u8dd1\u8d39\u7528\u6d41\u5373\u53ef\u3002\n\n**Part 3 Code**\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 40005\nusing namespace std;\nint n,s,t;\nint mmap[205][205];\nint sum[205];\nint cnt=1;\nint ans1,ans2;\nint h[MAXN];\nint nmin[MAXN],dis[MAXN];\nint prt[MAXN];\nbool blog[MAXN];\nstruct work{\n\tint next,to,val,sz;\n}w[MAXN*2];\ninline void qxx(int x,int y,int z,int c){\n\tw[++cnt]=(work){h[x],y,z,c};\n\th[x]=cnt;\n\tw[++cnt]=(work){h[y],x,0,-c};\n\th[y]=cnt;\n}\ninline bool spfa(){\n\tmemset(blog,false,sizeof(blog));\n\tmemset(nmin,127/2,sizeof(nmin));\n\tmemset(dis,127/2,sizeof(dis));\n\tqueue<int> q;\n\tq.push(s);\n\tdis[s]=0;\n\tint INF=nmin[s];\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tblog[x]=false;\n\t\tfor(int i=h[x];i;i=w[i].next){\n\t\t\tif(!w[i].val)continue;\n\t\t\tint y=w[i].to;\n\t\t\tif(dis[x]+w[i].sz<dis[y]){\n\t\t\t\tdis[y]=dis[x]+w[i].sz;\n\t\t\t\tnmin[y]=min(nmin[x],w[i].val);\n\t\t\t\tprt[y]=i;\n\t\t\t\tif(blog[y])continue;\n\t\t\t\tq.push(y);\n\t\t\t\tblog[y]=true;\n\t\t\t}\n\t\t}\n\t}\n\tif(nmin[t]!=INF)return true;\n\treturn false;\n}\ninline void updata(){\n\tint x=t;\n\twhile(x!=s){\n\t\tint y=prt[x];\n\t\tw[y].val-=nmin[t];\n\t\tw[y^1].val+=nmin[t];\n\t\tx=w[y^1].to;\n\t}\n\tans1+=nmin[t];\n\tans2+=nmin[t]*dis[t];\n}\ninline int read(){\n    int x=0,w=1;char c=getchar();\n    while(c>'9'||c<'0'){if(c=='-'){w=-1;}c=getchar();}\n    while(c<='9'&&c>='0')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    return x*w;\n}\nsigned main(){\n\tn=read();\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=n;++j){\n\t\t\tmmap[i][j]=read();\n\t\t\tsum[j]+=mmap[i][j];\n\t\t}\n\t}\n\ts=0,t=n*2+1;\n\tfor(int i=1;i<=n;++i){\n\t    qxx(s,i,1,0);\n\t    qxx(i+n,t,1,0);\n\t    for(int j=1;j<=n;++j)qxx(i,j+n,1,sum[i]-mmap[j][i]);\n    }\n\twhile(spfa())updata();\n\tprintf(\"%d\",ans2);\n\treturn 0;\n}\n```\n",
        "postTime": 1649311130,
        "uid": 302191,
        "name": "\u6afb\u5c18\u0f72\u0f7c\u0f72\u0f39",
        "ccfLevel": 7,
        "title": "P2457 [SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c"
    },
    {
        "content": "\u6211\u672c\u60f3\u7528\u8fd9\u9898\u7ec3\u7ec3\u8d39\u7528\u6d41\uff0c\u4f46\u662f\u83ab\u540d RE 30\u3002\n\n\u7136\u540e\u6211\u4ea4\u4e86\u4e00\u53d1 KM\u3002\n\n\u76f4\u63a5\u51b2\u5230\u6700\u4f18\u89e3\u7b2c\u4e00\u9875\u4e86\u3002(12.14)\n\n\u603b\u7ed3\uff1a\n\nKM \u725b\u903c\uff01\uff01\uff01\n\n\u672c\u9898\u601d\u8def\uff1a\n\n1. \u5efa\u7acb\u4e8c\u5206\u56fe\uff0c\u5de6\u90e8\u8282\u70b9\u4e3a $n$ \u79cd\u8d27\u7269\uff0c\u53f3\u90e8\u8282\u70b9 $n$ \u4e2a\u4f4d\u7f6e\n\n2. \u5c06\u5de6\u90e8\u7b2c $i$ \u4e2a\u8282\u70b9\u8fde\u5411\u53f3\u90e8\u7b2c $j$ \u4e2a\u8282\u70b9\u4e00\u6761\u8fb9\u6743\u4e3a $sum_i-w_{i,j}$ \u7684\u8fb9\uff0c\u5176\u4e2d $sum_i=\\sum\\limits_{j=1}^{n} w_{i,j}$\u3002\n\n3. \u8fd9\u5f20\u56fe\u4e0a\u4e00\u5b9a\u5b58\u5728\u5b8c\u5907\u5339\u914d\uff0c\u4e8e\u662f\u6211\u4eec\u8dd1 KM\n\n\u5bf9\u4e8e\u9898\u76ee\u4e2d\u6240\u6c42\u7684\u6700\u5c0f\u65b9\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fb9\u6743\u53d6\u53cd\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u4e5f\u53d6\u53cd\u3002\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#define inf 0x7fffffff\nusing namespace std;\nint n,m,a[505],w[505][505],sum[505];\nint va[505],vb[505],map[505][505];//\u8bbf\u95ee\u6807\u8bb0\nint la[505],lb[505];//\u9876\u6807\nint match[505],upd[505];//\u5339\u914d\u70b9\u3001\u66f4\u65b0\nbool dfs(int x) {//\u5308\u7259\u5229\n    va[x]=1;\n    for(int y=1; y<=n; y++)\n    if(w[x][y]!=-inf){\n        if(!vb[y])\n            if(la[x]+lb[y]==w[x][y]) {\n                vb[y]=1;\n                if(!match[y]||dfs(match[y])) {\n                    match[y]=x;\n                    return true;\n                }\n            } else upd[y]=min(upd[y],la[x]+lb[y]-w[x][y]);\n    }\n\n    return false;\n}\nint KM() {//KM\u677f\u5b50\n    memset(match,0,sizeof(match));\n    for(int i=1; i<=n; i++) {\n        la[i]=-inf;\n        lb[i]=0;\n        for(int j=1; j<=n; j++)\n            la[i]=max(la[i],w[i][j]);\n    }\n    for(int i=1; i<=n; i++)\n        while(true) {\n            memset(va,0,sizeof(va));\n            memset(vb,0,sizeof(vb));\n            for(int j=1; j<=n; j++)upd[j]=inf;\n            if(dfs(i))break;\n            int delta=inf;\n            for(int j=1; j<=n; j++)\n                if(!vb[j])delta=min(delta,upd[j]);\n            for(int j=1; j<=n; j++) {\n                if(va[j])la[j]-=delta;\n                if(vb[j])lb[j]+=delta;\n            }\n        }\n    int ans=0;\n    for(int i=1; i<=n; i++)\n        ans+=w[match[i]][i];\n    return ans;\n}\nsigned main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        map[i][j]=x;\n        sum[j]+=x;\n    }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n        w[i][j]=-(sum[i]-map[j][i]);\n    printf(\"%d\",-KM());\n    return 0;\n}\n```\n",
        "postTime": 1639460876,
        "uid": 482082,
        "name": "Mortis_Vampire",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2457 [SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c"
    },
    {
        "content": "\u5199\u4e00\u7bc7\u9898\u89e3\uff0c\u4e5f\u7b97\u662f\u52a0\u5f3a\u6211\u5bf9KM\u7684\u7406\u89e3\u5427\u3002\n\u5148\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint n;\nint store[155][155];\nint w[155][155];\nint ll[155];\nint la[155],lb[155];\nint va[155],vb[155];\nint match[155];\nint delta;\nbool dfs(int x)\n{\n\tva[x]=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!vb[i])\n\t\t{\n\t\t\tif((la[x]+lb[i])==w[x][i])\n\t\t\t{\n\t\t\t\tvb[i]=1;\n\t\t\t\tif(!match[i]||dfs(match[i]))\n\t\t\t\t{\n\t\t\t\t\tmatch[i]=x;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse delta=min(delta,la[x]+lb[i]-w[x][i]);\n\t\t}\n\t}\n\treturn false;\n}\nint KM()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tla[i]=-(1<<30);\n\t\tlb[i]=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tla[i]=max(la[i],w[i][j]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(true)\n\t\t{ \n\t\t\tmemset(va,0,sizeof(va));\n\t\t\tmemset(vb,0,sizeof(vb));\n\t\t\tdelta=(1<<30);\n\t\t\tif(dfs(i))break;\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tif(va[j])la[j]-=delta;\n\t\t\t\tif(vb[j])lb[j]+=delta;\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tans-=w[match[i]][i];\n\t}\n\treturn ans;\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tstore[i][j]=read();\n\t\t\tll[j]+=store[i][j];\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tw[i][j]=-(ll[j]-store[i][j]);\n\t\t}\t\n\tcout<<KM();\n\treturn 0;\n}\n```\n\u9996\u5148\u5f15\u5165\u4ea4\u9519\u6811\u7684\u6982\u5ff5\n\n\u5176\u5b9e\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662f\u5728\u4e00\u822c\u7684\u5308\u7259\u5229\u7b97\u6cd5\u4e2d\uff0c\u4ece\u4e00\u4e2a\u5de6\u90e8\u70b9\u51fa\u53d1\u5c1d\u8bd5\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u5931\u8d25\uff0c\u90a3\u4ed6\u6240\u6709\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u4ee5\u53ca\u4e3a\u4e86\u8bbf\u95ee\u8fd9\u4e9b\u8282\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u5171\u540c\u6784\u6210\u4ea4\u9519\u6811\u3002\uff08\u8be5\u6811\u6839\u8282\u70b9\u4e3a\u5de6\u90e8\u70b9\uff0c\u53f6\u5b50\u4e5f\u662f\u5de6\u90e8\u70b9\uff09\n\n\u4e4b\u540e\u662f\u9876\u6807\uff0c\u8fd9\u4e2a\u6982\u5ff5\u4e3a\u76f8\u7b49\u5b50\u56fe\u800c\u670d\u52a1\u3002\n\u6240\u8c13\u76f8\u7b49\u5b50\u56fe\uff0c\u5c31\u662f\u4e8c\u5206\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u6ee1\u8db3Ai+Bi=W(i,j)\u7684\u8fb9\u6240\u6784\u6210\u7684\u5b50\u56fe\u3002\n\u800c\u9876\u6807\uff0c\u5c31\u662f\u8fd9\u91cc\u7684Ai\uff0cBi\u3002\u5b9e\u9645\u64cd\u4f5c\u65f6\uff0c\u5c06\u5de6\u90e8\u70b9\u7684\u9876\u6807\u8d4b\u503c\u4e3aAi\uff0c\u53f3\u90e8\u70b9\u8d4b\u503c\u4e3aBi\u3002\n# \u5b9a\u7406\n#### \u82e5\u76f8\u7b49\u5b50\u56fe\u4e2d\u5b58\u5728\u5b8c\u5907\u5339\u914d\uff0c\u5219\u8fd9\u4e2a\u5b8c\u5907\u5339\u914d\u5c31\u662f\u4e8c\u5206\u56fe\u7684\u5e26\u6743\u6700\u5927\u5339\u914d\u3002\n\n\n------------\n\n\n```cpp\nfor(int i=1;i<=n;i++)\n\t{\n\t\tla[i]=-(1<<30);\n\t\tlb[i]=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tla[i]=max(la[i],w[i][j]);\n\t\t}\n\t}\n```\n\u5728\u8fd9\u91cc\u6211\u4eec\u5c06\u6240\u6709\u7684Ai\u8d4b\u503c\u4e3a\u5176\u6240\u8fde\u8fb9\u4e2d\u6743\u503c\u6700\u5927\u8005\uff0cBi\u8d4b\u503c\u4e3a0\u3002\u6b64\u65f6\u4ed6\u6ee1\u8db3Ai+Bj>=W(i,j)\u3002\n```\nfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(true)\n\t\t{ \n\t\t\tmemset(va,0,sizeof(va));\n\t\t\tmemset(vb,0,sizeof(vb));\n\t\t\tdelta=(1<<30);\n\t\t\tif(dfs(i))break;\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tif(va[j])la[j]-=delta;\n\t\t\t\tif(vb[j])lb[j]+=delta;\n\t\t\t}\n\t\t}\n\t}\n```\n\u5bf9\u6bcf\u4e00\u4e2a\u5de6\u90e8\u8282\u70b9\u8fdb\u884c\u5339\u914d\uff08\u4f7f\u7528while\uff08true\uff09\u4e0d\u8fbe\u76ee\u7684\u4e0d\u7f62\u4f11\uff09\u5982\u679cdfs(i)==1\uff0c\u5373\u8fd9\u4e2a\u8282\u70b9\u53ef\u4ee5\u5339\u914d\uff0c\u90a3\u5c31\u4e0d\u7ba1\u4ed6\u3002\u5426\u5219\u4fee\u6539\u9876\u6807\uff08\u5931\u8d25\u7684\u4ea4\u9519\u6811\u4e2d\u7684\u9876\u6807\uff09\u3002\n\u8fd9\u91cc\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u5373\u4fee\u6539\u9876\u6807\u540e\uff0c\u518d\u4e00\u6b21\u8fdb\u884cdfs\u65f6\uff0c\u539f\u6765\u5e76\u975e\u76f8\u7b49\u5b50\u56fe\u4e2d\u7684\u8fb9\uff0c\u73b0\u5728\u5c31\u6709\u53ef\u80fd\u6210\u4e3a\u76f8\u7b49\u5b50\u56fe\u4e2d\u7684\u8fb9\u3002\n\uff08\u6682\u65f6\u5199\u5230\u8fd9\u91cc\uff0c\u673a\u623f\u5173\u95e8\u4e86\uff09\n\n\n",
        "postTime": 1569248416,
        "uid": 52325,
        "name": "wenjie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2457 \u3010[SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "## \u57fa\u672c\u601d\u8def\uff1aKM \u7b97\u6cd5\u6c42\u6700\u4f18\u5339\u914d\n\n\u5982\u679c\u4f60\u4e0d\u4f1a KM \u7b97\u6cd5\u8bf7[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/blog/zxh248588021/er-fen-tu-xue-xi-bi-ji)\n\n\u5148\u6765\u5b9a\u4e49\u4e00\u4e9b\u6570\u7ec4\u65b9\u4fbf\u4e0b\u9762\u8868\u8fbe\uff1a\n\n```cpp\nint n,m,mp[N][N];//mp\u5b58\u653e\u8f93\u5165\u7684\u77e9\u9635\nint sum[N];//sum\u5b58\u653e\u6bcf\u4e00\u79cd\u8d27\u7269\u91cd\u91cf\u7684\u603b\u548c \nint va[N],vb[N]//va\uff0cvb\u6807\u8bb0\u6bcf\u4e00\u6b21dfs\u5de6\u53f3\u53c2\u4e0e\u7684\u70b9\nint w[N][N];//w\u5b58\u653e\u628ai\u5176\u4f59\u6240\u6709\u8d27\u7269\u642c\u5230\u4ed3\u5e93j\u7684\u4ee3\u4ef7 \nint la[N],lb[N]//la\uff0clb\u5206\u522b\u4e3a\u5de6\u53f3\u6807\u6746\nint mi[N];//mi\u4e3a\u53f3\u90e8\u70b9\u5339\u914d\u7684\u70b9\nint vis[N];//vis\u6807\u8bb0\u5f53\u524ddfs\u6bcf\u4e00\u4e2a\u70b9\u6700\u5c11\u4e0b\u964d\u591a\u5c11\u53ef\u4ee5\u6709\u5176\u4ed6\u7684\u9009\u62e9 \n```\n\n\u9898\u76ee\u7ed9\u51fa\u7684\u8f93\u5165\u7b2c $i$ \u884c\u662f\u4ed3\u5e93 $i$ \u6240\u5b58\u653e\u7684\u7b2c $j$ \u79cd\u8d27\u7269\u7684\u91cd\u91cf\uff0c\u5982\u679c\u8981\u7528\u4ed3\u5e93 $i$ \u6765\u5b58\u653e\u8d27\u7269 $j$\uff0c\u90a3\u5c31\u9700\u8981\u628a\u5176\u4ed6\u4ed3\u5e93\u91cc\u7684\u8d27\u7269 $j$ \u7ed9\u642c\u5230\u4ed3\u5e93 $i$\uff0c\u4ee3\u4ef7\u4e3a $sum_{j}-mp[i][j]$\uff0c\u6240\u4ee5\u8f93\u5165 $mp$ \u6570\u7ec4\u7684\u540c\u65f6\u628a $sum$ \u6570\u7ec4\u7ed9\u5904\u7406\u51fa\u6765\uff0c\u7136\u540e\u628a $w$ \u6570\u7ec4\u5904\u7406\u51fa\u6765\uff0c\u5de6\u90e8\u70b9\u4e3a\u4ed3\u5e93\u7f16\u53f7\uff0c\u53f3\u90e8\u70b9\u4e3a\u8d27\u7269\u79cd\u7c7b\u7f16\u53f7\uff0c\u8dd1 KM \u7b97\u6cd5\u5c31\u597d\u5566\u3002\n\n\u8fd9\u9898\u8ba9\u7740\u6c42\u6700\u5c0f\u4ee3\u4ef7\uff0c\u548c\u4e00\u822c\u7684\u4e0d\u592a\u4e00\u6837\u600e\u4e48\u529e\uff1f\n\n\u53ea\u8981\u5728\u5904\u7406 $w$ \u6570\u7ec4\u7684\u65f6\u5019\u5b58\u7684\u8fb9\u6743\u4e00\u53d6\u53cd\uff0c\u8dd1 KM \u7684\u65f6\u5019\u4e0d\u4e45\u5c31\u53ef\u4ee5\u627e\u6700\u4f18\u5339\u914d\u4e86\u5417\uff0c\u6700\u540e\u8f93\u51fa\u522b\u5fd8\u4e86\u53d6\u53cd\u3002\n\n### code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define INF 0x7fffffff\n#define N 510\nusing namespace std;\nint n,m,mp[N][N],sum[N];//mp\u5b58\u653e\u8f93\u5165\u7684\u77e9\u9635\uff0csum\u5b58\u653e\u6bcf\u4e00\u79cd\u8d27\u7269\u91cd\u91cf\u7684\u603b\u548c \nint va[N],vb[N],w[N][N];//va\uff0cvb\u6807\u8bb0\u6bcf\u4e00\u6b21dfs\u5de6\u53f3\u53c2\u4e0e\u7684\u70b9\uff0cw\u5b58\u653e\u628ai\u5176\u4f59\u6240\u6709\u8d27\u7269\u642c\u5230\u4ed3\u5e93j\u7684\u4ee3\u4ef7 \nint la[N],lb[N],mi[N],vis[N];//la\uff0clb\u5206\u522b\u4e3a\u5de6\u53f3\u6807\u6746\uff0cmi\u4e3a\u53f3\u90e8\u70b9\u5339\u914d\u7684\u70b9\uff0c\ninline int read()\n{\n   int s=0,w=1;char ch=getchar();\n   while(ch<'0'||ch>'9')\n   {  if(ch=='-')  w=-1;  ch=getchar();}\n   while(ch>='0'&&ch<='9')\n   {  s=s*10+ch-'0'; ch=getchar();}\n   return s*w;\n} \ninline int dfs(int x)//\u5308\u7259\u5229\u7b97\u6cd5 \n{\n    va[x]=1;//\u6807\u8bb0\u53c2\u4e0e\u672c\u6b21dfs \n    for(int i=1;i<=n;i++)//\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53f3\u90e8\u7684\u70b9 \n      if(w[x][i])//\u5982\u679c\u5f53\u524d\u4e24\u70b9\u4e4b\u95f4\u5b58\u5728\u8fb9 \n        if(!vb[i])//vb\u6ca1\u6709\u6807\u8bb0\u5df2\u7ecf\u641c\u8fc7\u4e86 \n        {\n            if(la[x]+lb[i]==w[x][i])//\u5982\u679c\u5f53\u524d\u5de6\u53f3\u6807\u6746\u52a0\u8d77\u6765\u7b49\u4e8e\u8fb9\u6743 \n            {\n                vb[i]=1;//\u6807\u8bb0\u53ef\u4ee5 \n                if(!mi[i]||dfs(mi[i]))//\u5982\u679c\u5f53\u524d\u53f3\u90e8\u70b9\u6ca1\u6709\u4e0e\u4e4b\u76f8\u5339\u914d\u7684\u70b9\u6216\u8005\u4e0e\u4e4b\u76f8\u5339\u914d\u7684\u70b9\u53ef\u4ee5\u4e0e\u5176\u4ed6\u70b9\u5339\u914d \n                {\n                    mi[i]=x;//\u5f53\u524d\u5de6\u90e8\u70b9\u4e0e\u53f3\u90e8\u70b9\u5339\u914d \n                    return 1;//\u8fd4\u56de\u5339\u914d\u6210\u529f \n                }\n            }\n        else vis[i]=min(vis[i],la[x]+lb[i]-w[x][i]);//\u5982\u679c\u4e0d\u7b49\u4e8e\u8fb9\u6743\uff0c\u6c42\u51fa\u4e0b\u964d\u6700\u5c0f\u53ef\u4ee5\u6709\u5176\u4ed6\u89e3\u7684\u503c \n        }\n    return 0;//\u8fd4\u56de\u5339\u914d\u5931\u8d25 \n}\nint KM()//KM\u7b97\u6cd5\u677f\u5b50 \n{\n    for(int i=1;i<=n;i++)\n    {\n        la[i]=-INF;\n        lb[i]=0;\n        for(int j=1;j<=n;j++)\n          la[i]=max(la[i],w[i][j]);//\u7ed9\u5de6\u90e8\u6807\u6746\u8d4b\u521d\u503c \n    }\n    for(int i=1;i<=n;i++)//\u5339\u914d\u6bcf\u4e00\u4e2a\u5de6\u90e8\u70b9 \n    {\n        while(1)\n        {\n            memset(va,0,sizeof(va));//\u6bcf\u6b21\u90fd\u8981\u6e05\u7a7ava\uff0cvb \n            memset(vb,0,sizeof(vb));\n            for(int j=1;j<=n;j++)\n              vis[j]=INF;//\u8d4b\u521d\u503c\uff0cvis\u8868\u793a\u6bcf\u4e00\u4e2a\u70b9\u6700\u5c11\u4e0b\u964d\u591a\u5c11\u53ef\u4ee5\u6709\u53e6\u4e00\u79cd\u9009\u62e9 \n            if(dfs(i))break;//\u5982\u679c\u5f53\u524d\u70b9\u5339\u914d\u6210\u529f\u76f4\u63a5\u9000\u51fa \n            int d=INF;//\u8d4b\u521d\u503c \n            for(int j=1;j<=n;j++)\n              d=min(d,vis[j]);//\u53d6\u6bcf\u4e00\u4e2avis\u7684\u6700\u5c0f\u503c \n            for(int j=1;j<=n;j++)\n            {\n                if(va[j])la[j]-=d;//\u5de6\u90e8\u70b9\u51cfd \n                if(vb[j])lb[j]+=d;//\u53f3\u90e8\u70b9\u52a0d \n            }\n        }\n    }\n    int ans=0;//ans\u8868\u793a\u7b54\u6848 \n    for(int i=1;i<=n;i++)//\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53f3\u90e8\u70b9 \n      ans+=w[mi[i]][i];//\u7d2f\u52a0\u6240\u9009\u7684\u8fb9\u6743 \n    return ans;//\u8fd4\u56de\u7b54\u6848 \n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n        {\n            int x;\n            x=read();\n            mp[i][j]=x;//\u5b58\u56fe \n            sum[j]+=x;//\u7d2f\u52a0\u4e00\u79cd\u8d27\u7269\u7684\u91cd\u91cf\u603b\u548c \n        }\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=n;j++)\n      w[i][j]=-(sum[i]-mp[j][i]);//\u8f6c\u6362\u4e00\u4e0b\u6c42\u51fa\u8981\u628a\u6240\u6709\u8d27\u7269\u653e\u5230\u6700\u6b64\u4ed3\u5e93\u7684\u4ee3\u4ef7\uff0c\u53d6\u76f8\u53cd\u6570\u6c42\u6700\u5927\u8fb9\u6743\u5339\u914d \n    printf(\"%d\",-KM());//\u8f93\u51fa\u7684\u65f6\u5019\u522b\u5fd8\u4e86\u53d6\u53cd \n    return 0;\n}//by wwwaax \n```\n",
        "postTime": 1659235777,
        "uid": 526519,
        "name": "Aisaka_Taiga",
        "ccfLevel": 0,
        "title": "P2457\u9898\u89e3"
    },
    {
        "content": "\u7531\u4e8e\u9898\u76ee\u8981\u6c42\u6c42\u6700\u5c0f\u4ee3\u4ef7\uff0c\u5e76\u4e14\u6709\u6d41\u91cf\u9650\u5236\uff08\u4e3a $1$ \uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528**\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41**\u3002\n\n\n------------\n\n\u9996\u5148\u6211\u4eec\u8bfb\u5165\u6574\u5f20\u56fe\uff0c\u8bb0\u5f55\u4e0b\u6bcf\u79cd\u8d27\u7269\u7684\u6570\u91cf $sum_i$ \u3002\n\n```cpp\nfor(register int i=1;i<=n;i++){\n\tfor(register int j=1;j<=n;j++){\n\t\tmp[i][j]=read();\n\t\tsum[i]+=mp[i][j];//\u7b2ci\u79cd\u8d27\u7269\u7684\u603b\u6570 \n\t}\n}\n```\n\n\u7136\u540e\u8003\u8651\u600e\u4e48\u5efa\u6a21\u3002\n\n\u6211\u4eec\u5c06\u6bcf\u4e2a\u4ed3\u5e93 $i$ \u62c6\u6210\u4e24\u4e2a\u4ed3\u5e93\uff0c\u65b9\u4fbf\u8fde\u8fb9\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4ed3\u5e93\uff0c\u8981\u63a5\u53d7\u7b2c $i$ \u79cd\u8d27\u7269\u7684\u4ee3\u4ef7\u4e3a\u7b2c $i$ \u79cd\u8d27\u7269\u7684\u603b\u6570\u51cf\u53bb\u672c\u6765\u5c31\u5728\u8be5\u4ed3\u5e93\u4e2d\u7684\u8d27\u7269\u6570\u91cf\uff0c\u5373\uff1a\n```cpp\nfor(register int i=1,x;i<=n;i++){\n\tfor(register int j=1;j<=n;j++) \n    \tadd(i,j+n,1,sum[i]-mp[i][j]);\n        //\u5c06\u7b2ci\u79cd\u8d27\u7269\u8fd0\u5230\u7b2cj\u4e2a\u4ed3\u5e93\u6240\u9700\u7684\u4ee3\u4ef7 \n}\n```\n\u7136\u540e\u5c31\u662f\u5c06\u539f\u5148\u7684\u4ed3\u5e93\u8fde\u5411\u6e90\u70b9\uff0c\u5c06\u514b\u9686\u7684\u4ed3\u5e93\u8fde\u5411\u6c47\u70b9\uff0c\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5c31\u597d\u4e86\u3002\uff08\u8fd9\u9898\u4e0d\u7b97\u96be\u60f3\uff0c\u7ffb\u9898\u89e3\u524d\u8bf7\u81f3\u5c11\u4fdd\u8bc1 $30$ \u5206\u949f\u7684\u601d\u8003\u65f6\u95f4\uff09\u3002\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=0x3f3f3f3f;\nconst int N=1e5+10;\nint n,mp[210][210],s,t,dis[N],pre[N],vis[N];\nint nxt[N],flow[N],mincost,head[N],tot=1,sum[210]; \nstruct edge{\n    int to,nxt,flow,dis;\n}e[N];\ninline int read(){\n\tint w=1,x=0;\n\tchar ch=getchar();\n\tfor(;ch>'9'||ch<'0';ch=getchar()) if(ch=='-') w=-1;\n\tfor(;ch<='9'&&ch>='0';ch=getchar()) x=(x<<1)+(x<<3)+ch-'0';\n\treturn x*w;\n}\ninline void add(int u,int v,int w,int dis){\n    e[++tot].nxt=head[u];\n    e[tot].to=v;\n    e[tot].flow=w;\n    e[tot].dis=dis;\n    head[u]=tot;\n    e[++tot].nxt=head[v];\n    e[tot].to=u;\n    e[tot].flow=0;\n    e[tot].dis=-dis;\n    head[v]=tot;\n}\ninline bool spfa(){\n    queue<int> q;\n    memset(dis,0x3f,sizeof dis);\n    memset(flow,0x3f,sizeof flow);\n    memset(vis,0,sizeof vis);\n    q.push(s); \n    vis[s]=1;dis[s]=0;pre[t]=-1;\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();vis[u]=0;\n        for(register int i=head[u];i;i=e[i].nxt){\n        \tint v=e[i].to,w=e[i].dis;\n            if(e[i].flow>0&&dis[v]>dis[u]+w){\n                dis[v]=dis[u]+w;\n                pre[v]=u;nxt[v]=i;\n                flow[v]=min(flow[u],e[i].flow);\n                if (!vis[v]){\n                    vis[v]=1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    return pre[t]!=-1;\n}\nvoid mcmf(){//\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u7248\u5b50 \n    while(spfa()){\n        int u=t;\n        mincost+=flow[t]*dis[t];\n        while(u!=s){\n            e[nxt[u]].flow-=flow[t];\n            e[nxt[u]^1].flow+=flow[t];\n            u=pre[u];\n        }\n    }\n}\nsigned main(){\n    n=read();\n\ts=n*3+1,t=s+1;\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\tmp[i][j]=read();\n\t\t\tsum[i]+=mp[i][j];//\u7b2ci\u79cd\u8d27\u7269\u7684\u603b\u6570 \n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tadd(s,i,1,0);\n\t\tadd(i+n,t,1,0);\n\t}\n\tfor(register int i=1,x;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++) add(i,j+n,1,sum[i]-mp[i][j]);//\u5c06\u7b2ci\u79cd\u8d27\u7269\u8fd0\u5230\u7b2cj\u4e2a\u4ed3\u5e93\u6240\u9700\u7684\u4ee3\u4ef7 \n\t}\n    mcmf();\n    printf(\"%d\\n\",mincost);\n    return 0;\n}\n```",
        "postTime": 1654394896,
        "uid": 467203,
        "name": "Kaenbyou_Rin",
        "ccfLevel": 0,
        "title": "P2457 [SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c \u9898\u89e3"
    },
    {
        "content": "## **\u4e00.\u5206\u6790**\n\n\u5efa\u56fe\u601d\u8def\u662f\u6bd4\u8f83\u6e05\u6670\u7684\uff0c\u6240\u4ee5\u79f0\u5b83\u4e3a\u6c34\u9898\u3002\u5efa\u56fe\u5c31\u662f\u5c06\u6bcf\u4e00\u4ef6\u8d27\u7269\u4e0e\u6bcf\u4e00\u95f4\u4ed3\u5e93\u4e4b\u95f4\u5efa\u8fb9\uff0c\u5efa\u4e00\u6761\u6d41\u91cf\u4e3a\u4e00\uff0c\u8d39\u7528\u4e3a\u8fd9\u4e2a\u8d27\u7269\u642c\u8fd0\u5230\u8fd9\u4e2a\u4ed3\u5e93\u7684\u6d88\u8017\u7684\u8fb9\u3002\u6e90\u70b9\u5219\u4e0e\u6bcf\u4e00\u4e2a\u8d27\u7269\u5efa\u4e00\u6761\u6d41\u91cf\u4e3a\u4e00\uff0c\u8d39\u7528\u4e3a\u96f6\u7684\u8fb9\u3002\u6bcf\u4e00\u4e2a\u4ed3\u5e93\u5c31\u4e0e\u6c47\u70b9\u5efa\u4e00\u6761\u6d41\u91cf\u4e3a\u4e00\uff0c\u8d39\u7528\u4e3a\u96f6\u7684\u8fb9\uff08\u6709\u4e2a\u5c0f\u6280\u5de7\uff0c\u5f53\u6bcf\u4e2a\u4ed3\u5e93\u6709\u6307\u5b9a\u8d27\u7269\u4e2a\u6570\u5b58\u653e\u65f6\uff0c\u6d41\u91cf\u5c31\u4e3a\u6307\u5b9a\u4e2a\u6570\uff09\u3002\u5927\u6982\u5c31\u662f\u8fd9\u6837\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u6572\u677f\u5b50\u4e86\u3002\n\n## **\u4e8c.code**\n\n```c\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\nconst int N=1e5+90,inf=999999999;\nusing namespace std;\nstruct node{\n\tint to,w,val,nex;\n}e[N];\nint head[N],tot=1;\nint dis[N],incf[N],per[N],ans;\nbool bk[N];\nint n,s,t;\nint sum[N],a[1000][1000];\nvoid add(int u,int v,int w,int val){\n\te[++tot].to=v;\n\te[tot].w=w;\n\te[tot].val=val;\n\te[tot].nex=head[u];\n\thead[u]=tot;\n}\nbool spfa(){\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(bk,false,sizeof(bk));\n\tqueue<int> p;\n\tp.push(s);\n\tdis[s]=0;\n\tbk[s]=true;\n\tincf[s]=0x7fffffff;\n\twhile(!p.empty()) {\n\t\tint k=p.front();\n\t\tp.pop();\n\t\tbk[k]=false;\n\t\tfor(int i=head[k];i;i=e[i].nex){\n\t\t\tint v=e[i].to;\n\t\t\tif(e[i].w==0) continue;\n\t\t\tif(dis[v]>dis[k]+e[i].val){\n\t\t\t\tper[v]=i;\n\t\t\t\tdis[v]=dis[k]+e[i].val;\n\t\t\t\tincf[v]=min(incf[k],e[i].w);\n\t\t\t\tif(!bk[v]){\n\t\t\t\t\tp.push(v);\n\t\t\t\t\tbk[v]=true; \n\t\t\t\t}\n\t\t\t}\n\t\t} \n\t}\n\tif(dis[t]==0x3f3f3f3f) return false;\n\telse return true;\n}\n\nvoid work(){\n\twhile(spfa()){\n\t\tint x=t;\n\t\tans+=dis[t];\n\t\tint i;\n\t\twhile(x!=s){\n\t\t\ti=per[x];\n\t\t\te[i].w-=incf[t];\n\t\t\te[i^1].w+=incf[t];\n\t\t\tx=e[i^1].to;\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n;\n\ts=0;\n\tt=n+n+1;\n\tfor(int i=1;i<=n;i++){\n\t\tadd(s,i,1,0);\n\t\tadd(i,s,0,0);\n\t\tadd(i+n,t,1,0);\n\t\tadd(t,i+n,0,0);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tcin>>a[i][j];\n\t\t\tsum[j]+=a[i][j];//\u5c0f\u6280\u5de7\uff0c\u5148\u5c06\u603b\u548c\u7b97\u51fa\u6765\uff0c\u8fd9\u6837\u5f53\u653e\u5728\u67d0\u4e00\u4ed3\u5e93\u65f6\uff0c\u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u8d27\u7269\u7684\u603b\u8d39\u7528\u51cf\u53bb\u653e\u5728\u8fd9\u4e2a\u4ed3\u5e93\u7684\u8d39\u7528 \n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tadd(i,j+n,1,sum[i]-a[j][i]);//\u5177\u4f53\u5b9e\u73b0 \n\t\t\tadd(j+n,i,0,a[j][i]-sum[i]);\n\t\t}\n\t}\n\twork();\n\tcout<<ans;\n\treturn 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1\uff08\u7559\u4e2a\u8d5e\u518d\u8d70\u5457\uff09\u3002\n",
        "postTime": 1619506210,
        "uid": 299821,
        "name": "GTAyin",
        "ccfLevel": 5,
        "title": "\u5927\u5927\u7684\u6c34\u9898\uff0c\u88f8\u88f8\u7684\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41"
    },
    {
        "content": "$$\\texttt{\u9898\u76ee\u5927\u610f}$$\n\n$\\quad$\u6bcf\u4e2a\u4ed3\u5e93\u4e2d\u53ea\u653e\u4e00\u79cd\u7269\u54c1\uff0c\u540c\u79cd\u7269\u4f53\u5fc5\u987b\u653e\u5728\u540c\u4e00\u4e2a\u4ed3\u5e93\u91cc\uff0c\u6709 $n$ \u4e2a\u4ed3\u5e93\uff0c$n$ \u79cd\u7269\u54c1\uff0c\u8f6c\u79fb\u7269\u54c1\u7684\u4ee3\u4ef7\u662f\u5176\u6570\u91cf\uff0c\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n$\\quad$\u8fd9\u9898\u7b80\u76f4\u5c31\u662f\u6a21\u677f\u9898\uff0c\u5f88\u9002\u5408\u7ec3\u4e60\u4e8c\u5206\u56fe\u6700\u5927\u6743\u7684 $KM$ \u7b97\u6cd5\u548c\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41 $EK$ \u7b97\u6cd5\u3002\n\n$\\quad$\u4e24\u79cd\u65b9\u6cd5\u6211\u90fd\u4f1a\u4ecb\u7ecd\u5e76\u8d34\u51fa\u4ee3\u7801\uff0c\u60f3\u770b $EK$ \u7b97\u6cd5\u7684\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7 $KM$ \u7b97\u6cd5\n\n$$\\texttt{KM \u7b97\u6cd5}$$\n\n$\\quad$\u8fd9\u79cd\u9898\u578b\u4e0d\u662f\u5f88\u591a\uff0c\u6ca1\u6709\u505a\u8fc7\u7684\u53ef\u4ee5\u5148\u770b\u770b[P1559 \u8fd0\u52a8\u5458\u6700\u4f73\u5339\u914d\u95ee\u9898](https://www.luogu.com.cn/problem/P1559)\uff0c\u5c31\u662f\u4e00\u9053\u57fa\u7840\u7684KM\u7b97\u6cd5\u6a21\u677f\u9898\uff0c\u53e6\u5916[\u8fd9\u4e2a\u535a\u5ba2](https://www.cnblogs.com/wenruo/p/5264235.html)\u5199\u7684\u4e0d\u9519\uff0c\u5f88\u9002\u5408\u5b66\u4e60\u3002\n\n$\\quad$\u9996\u5148KM\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u57fa\u4e8e\u4ee5\u4e0b\u5b9a\u7406\uff1a\n\n$\\quad$\u82e5\u7531\u4e8c\u5206\u56fe\u4e2d\u6240\u6709\u6ee1\u8db3 \u7684\u8fb9 \u6784\u6210\u7684\u5b50\u56fe\uff08\u79f0\u505a\u76f8\u7b49\u5b50\u56fe\uff09\u6709\u5b8c\u5907\u5339\u914d\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b8c\u5907\u5339\u914d\u5c31\u662f\u4e8c\u5206\u56fe\u7684\u6700\u5927\u6743\u5339\u914d\u3002\n\n$\\quad$KM\u7b97\u6cd5\u7684\u6b63\u786e\u6027\uff1a\n\n1. KM\u7b97\u6cd5\u8981\u6c42\u7684\u662f\u56fe\u4e2d\u6700\u5927\u6743\u5339\u914d\u662f\u5b8c\u5907\u5339\u914d\u4e5f\u5c31\u662f\u8bf4\u90fd\u5339\u914d\u4e0a\u4e86\u3002\u6211\u60f3\u8fd9\u4e2a\u6761\u4ef6\u8981\u4e0d\u662f\u9898\u76ee\u4e2d\u81ea\u5df1\u7ed9\u51fa\u4e86\uff0c\u8981\u4e0d\u5c31\u662f\u8fb9\u6743\u90fd\u662f\u6b63\u503c\u4e14\u6bcf\u4e2a\u70b9\u60f3\u5176\u4ed6\u70b9\u90fd\u6709\u8fde\u8fb9\u5982\u672c\u9898\uff0c\u6b64\u65f6\u8fd9\u4e2a\u6027\u8d28\u662f\u53ef\u4ee5\u88ab\u4fdd\u8bc1\u7684\u3002\n\n2. \u8fd9\u4e2a\u7b97\u6cd5\u662f\u56f4\u7ed5\u7740\u9876\u70b9\u7684\u5b9a\u6807\u5339\u914d\u7684\u6211\u6765\u5b9a\u6027\u7684\u63cf\u8ff0\u8fd9\u4e2a\u7b97\u6cd5\u7684\u8fc7\u7a0b\uff1a\u9996\u5148\u6bcf\u4e2a\u70b9\u90fd\u548c\u81ea\u5df1\u6700\u5927\u7684\u8fb9\u6743\u8fdb\u884c\u5339\u914d\uff0c\u7136\u540e\u53d1\u73b0\u6709\u4e9b\u70b9\u6ca1\u6709\u5339\u914d\u5bf9\u8c61\u7684\u8bdd\u66f4\u6362\u4ea4\u9519\u6811\u4e2d\u5b9a\u6807\u7684\u503c\u7136\u540e\u518d\u6b21\u5bfb\u627e\u589e\u5e7f\u8def\u3002\u5f53\u7136\u65b0\u80fd\u6c9f\u901a\u7684\u8def\u662f\u8fb9\u6743\u53d8\u5316\u6700\u5c0f\u7684\u3002\n\n3. \u7ecf\u8fc7\u6211\u957f\u671f\u7684\u7814\u7a76\u6211\u7ec8\u4e8e\u628a\u6211\u7684\u53cd\u4f8b\u8bc1\u660e\u51fa\u6765\u4e86\u6211\u7684\u610f\u601d\u662f\u6307\u662f\u5426\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\u4f7f\u5f97\u5f53\u524d\u76f4\u63a5\u70b9\u5339\u914d\u4e0a\u6bd4\u4e24\u4e2a\u5df2\u5339\u914d\u8fb9\u66f4\u6362\u5339\u914d\u7136\u540e\u662f\u5f53\u524d\u70b9\u5f97\u5230\u5339\u914d\u66f4\u4f18\uff0c\u8fd9\u4e2a\u4e3b\u610f\u5f88\u5bb9\u6613\u8d70\u5230\u8fd9\u4e2a\u8bef\u533a\u7ecf\u8fc7\u6211\u753b\u7684\u591a\u5f20\u56fe\u6211\u53d1\u73b0\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u662f\u4e0d\u5b58\u5728\u5b8c\u5907\u5339\u914d\u7684\u60c5\u51b5\u7684\u5426\u5219\u7686\u53ef\u4ee5\u5229\u7528KM\u7f51\u4e0a\u7684\u8bc1\u660e\u65b9\u6cd5\u6765\u8bc1\u660e\u3002\n\n$\\quad$Kuhn\uff0dMunkres\u7b97\u6cd5\u6d41\u7a0b\uff1a\n\n* \u521d\u59cb\u5316\u53ef\u884c\u9876\u6807\u7684\u503c\uff1b\n* \u7528\u5308\u7259\u5229\u7b97\u6cd5\u5bfb\u627e\u5b8c\u5907\u5339\u914d\uff1b\n* \u82e5\u672a\u627e\u5230\u5b8c\u5907\u5339\u914d\u5219\u4fee\u6539\u53ef\u884c\u9876\u6807\u7684\u503c\uff1b\n* \u91cd\u590d\uff082\uff09\uff083\uff09\u76f4\u5230\u627e\u5230\u76f8\u7b49\u5b50\u56fe\u7684\u5b8c\u5907\u5339\u914d\u4e3a\u6b62\u3002\n\n$\\quad$\u53e6\u5916KM\u7b97\u6cd5\u6c42\u7684\u662f\u6700\u5927\u5339\u914d\u4e0b\u7684\u6700\u5927\u503c\uff0c\u672c\u9898\u8981\u6c42\u6700\u5c0f\u4ee3\u4ef7\uff0c\u6240\u4ee5\u8fb9\u6743\u8981\u53d6\u53cd\u3002\n\n$\\quad$\u53ef\u4ee5\u770b\u770b\u4ee3\u7801\u7684\u6ce8\u91ca\uff0c\u611f\u89c9\u4e0d\u662f\u5f88\u597d\u7406\u89e3(\u5f53\u65f6\u65b0\u5b66\u7684\u65f6\u5019\u611f\u89c9\u5f88\u96be)\u3002\n\n```cpp\n#include<iostream>//KM\u7b97\u6cd5 \n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<map>\n#include<algorithm>\n#define int long long\n#define re register int\n#define il inline\n#define inf 1e18+5\n#define next nee\nusing namespace std;\nil int read()\n{\n  int x=0,f=1;char ch=getchar();\n  while(!isdigit(ch)&&ch!='-')ch=getchar();\n  if(ch=='-')f=-1,ch=getchar();\n  while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n  return x*f;\n}\nil void print(int x)\n{\n  if(x<0)putchar('-'),x=-x;\n  if(x/10)print(x/10);\n  putchar(x%10+'0');\n}\nconst int N=155;\nint n,a[N][N];\nint minz,lx[N],ly[N];//\u9876\u6807\nint w[N],b[N][N];//\u8fb9\u6743\nint match[N];//match[i]\u8868\u793a\u7b2ci\u4e2a\u4ed3\u5e93\u7684\u5339\u914d\u5bf9\u8c61\nbool visx[N],visy[N];//\u6807\u8bb0\uff0c\u6bcf\u4e2a\u4ed3\u5e93\u53ea\u8d70\u4e00\u904d\nil bool dfs(int x)\n{\n\tvisx[x]=1;\n\tfor(re i=1;i<=n;i++)\n\tif(!visy[i]){//\u672a\u8bbf\u95ee\u8fc7\n\t\tint t=lx[x]+ly[i]-b[x][i];\n\t\tif(t==0){//\u6ee1\u8db3\u5e73\u8861\u6761\u4ef6\n\t\t\tvisy[i]=1;\n\t\t\tif(match[i]==0||dfs(match[i]))\n\t\t\t{\n\t\t\t\tmatch[i]=x;return 1;\n\t\t\t}\n\t\t}\n\t\telse if(t>0)minz=min(minz,t);//\u66f4\u65b0\u6700\u5c0f\u4fee\u6539\u503c\n\t}\n\treturn 0;\n}\nil void KM()\n{\n\tfor(re i=1;i<=n;i++)\n\t{\n\t\twhile(1)\n\t\t{\n\t\t\tmemset(visx,0,sizeof(visx));//\u6e05\u96f6\n\t\t\tmemset(visy,0,sizeof(visy));//\u6e05\u96f6\n\t\t\tminz=inf;    //\u521d\u59cb\u5316\u4e3ainf\n\t\t\tif(dfs(i))break;//\u627e\u5230\u5c31\u4e0b\u4e00\u4e2a\uff0c\u76f4\u5230\u627e\u5230\u4e3a\u6b62\n\t\t\tfor(re j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tif(visx[j])lx[j]-=minz;//\u964d\u4f4ex\u7684\u8981\u6c42\n\t\t\t\tif(visy[j])ly[j]+=minz;//\u589e\u52a0y\u7684\u8981\u6c42\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main()\n{\n\tn=read();\n\tfor(re i=1;i<=n;i++)\n\t{\n\t\tlx[i]=-inf;//\u521d\u59cb\u5316\u4e3a\u6781\u5c0f\u503c\n\t\tfor(re j=1;j<=n;j++)a[i][j]=read(),w[j]+=a[i][j];\n\t}\n\tfor(re i=1;i<=n;i++)for(re j=1;j<=n;j++)\n   {\n    b[i][j]=-w[i]+a[j][i];//\u8bb0\u5f97\u53d6\u53cd\n    lx[i]=max(lx[i],b[i][j]);//\u9876\u6807\u521d\u59cb\u5316\n   }\n\tKM();int ans=0;\n\tfor(re i=1;i<=n;i++)ans+=b[match[i]][i];//\u7edf\u8ba1\u7b54\u6848\n\tprint(-ans);\n\treturn 0;\n}\n```\n$$\\texttt{EK \u7b97\u6cd5}$$\n\n$\\quad$\u6ca1\u505a\u8fc7\u7684\u5efa\u8bae\u5148\u505a\u6a21\u677f\uff0c\u5176\u5b9e\u4e00\u6837\u7b80\u5355([P3381 \u3010\u6a21\u677f\u3011\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41](https://www.luogu.com.cn/problem/P3381))\n\n$\\quad$EK\u7b97\u6cd5\u6d41\u7a0b\uff1a\n* \u5728\u6b8b\u4f59\u7f51\u7edc\u4e0a\u5bfb\u627e\u6700\u77ed\u8def\n* \u5bf9\u8be5\u8def\u5f84\u8fdb\u884c\u589e\u5e7f, \u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\n* \u4e0d\u65ad\u91cd\u590dopt.1\u64cd\u4f5c, \u76f4\u81f3s\\to ts\u2192t\u4e0d\u5b58\u5728\u8def\u5f84\n\n$\\quad$\u5176\u5b9e\u5c31\u662f\u628a\u7f51\u7edc\u6d41\u7684 $bfs$ \u6362\u6210\u4e86 $SPFA$\uff0c\u4e00\u6b21\u53ea\u627e\u4e00\u6761\u589e\u5e7f\u8def\uff0c\u628a\u4ee3\u4ef7\u770b\u505a\u8ddd\u79bb\uff0c\u53e6\u5916\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9 $s$ \u548c\u8d85\u7ea7\u6c47\u70b9 $t$\uff0c$s$ \u8fde\u5411\u6240\u6709\u4ee3\u8868\u7269\u54c1\u7684\u70b9 $(1...n)$\uff0c\u6ca1\u6709\u4ee3\u4ef7\uff0c\u6240\u6709\u4ee3\u8868\u4ed3\u5e93\u7684\u70b9 $(n+1...2n)$ \u8fde\u5411 $t$\uff0c\u6ca1\u6709\u4ee3\u4ef7\uff0c\u6240\u6709\u7269\u54c1\u548c\u4ed3\u5e93\u4e24\u4e24\u76f8\u8fde\uff0c\u6d41\u91cf\u90fd\u4e3a $1$ \u5373\u53ef(\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u4ecb\u7ecd\u7684\u5f88\u8be6\u7ec6\u4e86)\u3002\n\n$\\quad$\u8fd9\u91cc $SPFA$ \u4e5f\u53ef\u4ee5\u6362\u6210 $Dijkstra$\uff0c\u53ea\u4e0d\u8fc7\u8d39\u7528\u6d41\u4f1a\u6709\u8d1f\u8fb9\u6743\uff0c\u9700\u8981\u52a0\u4e0a\u52bf\uff0c\u7a0d\u5fae\u6709\u70b9\u9ebb\u70e6\u3002\n\n$\\quad$\u7136\u540e\u76f4\u63a5\u8dd1\u8d39\u7528\u6d41\u5c31 $OK$ \u4e86\u3002\n\n```cpp\n#include<iostream>//EK\u7b97\u6cd5 \n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<map>\n#include<algorithm>\n#define int long long\n#define re register int\n#define il inline\n#define inf 1e18+5\n#define next nee\nusing namespace std;\nil int read()\n{\n  int x=0,f=1;char ch=getchar();\n  while(!isdigit(ch)&&ch!='-')ch=getchar();\n  if(ch=='-')f=-1,ch=getchar();\n  while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n  return x*f;\n}\nil void print(int x)\n{\n  if(x<0)putchar('-'),x=-x;\n  if(x/10)print(x/10);\n  putchar(x%10+'0');\n}\nconst int N=250;\nint n,s,t,a[N][N],maxcost,w[N],dis[N<<1],pre[N<<1];\nint next[N*N*2],go[N*N*2],head[N<<1],tot=1,d[N*N*2],val[N*N*2];\nbool vis[N<<1];\nil void Add(int x,int y,int z,int u)\n{\n\tnext[++tot]=head[x];\n\thead[x]=tot;go[tot]=y;val[tot]=z;d[tot]=u;\n}\nil bool SPFA()\n{\n\tqueue<int>q;\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis,0x3f,sizeof(dis));//\u521d\u59cb\u5316\n\tint maxn=dis[0];\n\tq.push(s);vis[s]=1;dis[s]=0;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop();vis[x]=0;\n\t\tfor(re i=head[x],y;i,y=go[i];i=next[i])\n\t\tif(val[i]){\n\t\t\tif(dis[y]>dis[x]+d[i])\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+d[i];\n\t\t\t\tpre[y]=i;//\u8bb0\u5f55\u524d\u9a71\n\t\t\t\tif(!vis[y])vis[y]=1,q.push(y);\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[t]==maxn)return 0;//\u672a\u88ab\u8dd1\u5230\n\treturn 1;\n}\nil void EK()\n{\n\twhile(SPFA())\n\t{\n\t\tint x=t;\n\t\tmaxcost+=dis[t];//\u56e0\u4e3a\u6bcf\u6761\u8def\u6d41\u91cf\u4e3a1\uff0c\u6ca1\u6709\u5fc5\u8981\u8bb0\u5f55\u6d41\u91cf\n\t\twhile(x!=s){//\u56de\u6d41\n\t\t\tint i=pre[x];\n\t\t\tval[i]-=1;\n\t\t\tval[i^1]+=1;\n\t\t\tx=go[i^1];\n\t\t}\n\t}\n}\nsigned main()\n{\n\tn=read();s=2*n+1;t=2*n+2;\n\tfor(re i=1;i<=n;i++)for(re j=1;j<=n;j++)a[i][j]=read(),w[j]+=a[i][j];//\u8bb0\u5f55\u6bcf\u4e2a\u7269\u54c1\u603b\u6570\u91cf\n\tfor(re i=1;i<=n;i++)\n\t{\n\t\tAdd(s,i,1,0);Add(i,s,0,0);\n\t\tAdd(i+n,t,1,0);Add(t,i+n,0,0);\n\t}\n\tfor(re i=1;i<=n;i++)for(re j=1;j<=n;j++)\n\tAdd(i,j+n,1,w[i]-a[j][i]),Add(j+n,i,0,a[j][i]-w[i]);//\u5efa\u8fb9\n\tEK();\n\tprint(maxcost);\n\treturn 0;\n}\n```",
        "postTime": 1613980288,
        "uid": 109220,
        "name": "Farkas_W",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2457 \u3010[SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "~~\u5148\u8d5e\u540e\u770b\u738b\u8005\u98ce\u8303~~\n\n\u770b\u697c\u4e0bdalao\u7684`dinic`\u7684\u7b97\u6cd5\u6302\u4e86\uff0c~~\u96be\u9053\u8fd9\u9898 `dinic` \u662f\u8d1f\u4f18\u5316~~\uff0c\u5176\u5b9e\u8fd9\u9053\u9898\u7528 `EK` \u5c31\u53ef\u4ee5\u6c34\u8fc7\u53bb\u3002\n\n## \u524d\u7f6e\u829d\u58eb\uff1a\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n\n\u5982\u679c\u60a8\u4e0d\u4f1a\u8d39\u7528\u6d41\uff0c\u53ef\u4ee5\u5148\u53bb\u5b66\u4e60\u4e00\u4e0b\uff0c\u5e76AC\u8fd9\u9053[\u6a21\u677f\u9898\u76ee](https://www.luogu.com.cn/problem/P3381)\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6c34\u8fd9\u9053\u9898\u76ee\u4e86\u3002\n\n## \u672c\u9898\u89e3\u6cd5\n\n\u9996\u5148\uff0c\u6211\u4eec\u77e5\u9053\u8d39\u7528\u6d41\u7684\u7528\u9014\u662f\u5728\u786e\u4fdd**\u5230\u8fbe\u6c47\u70b9\u6d41\u91cf\u6700\u5927\u65f6**\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u8fde\u8fb9\u6765\u5efa\u56fe\u3002\n\n\u6211\u4eec\u5148\u8fdb\u884c\u62c6\u70b9\uff0c\u4e00\u4e2a\u70b9\u7528\u6765\u5b58\u672c\u6765\u7684\u5e93\u5b58\uff0c\u53e6\u4e00\u4e2a\u70b9\u7528\u6765\u5b58\u642c\u8fd0\u540e\u7684\u5e93\u5b58\u3002\n\n\u6240\u4ee5\u8bf4\u539f\u70b9\u548c\u6c47\u70b9\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e0b\u6765\u4e86\uff1a\n\n```\ns=0,t=n*2+1;\n```\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6700\u7ec8\u4e00\u79cd\u7269\u54c1\uff08\u7684\u5168\u90e8\uff09\u53ea\u4f1a\u5728\u4e00\u4e2a\u4ed3\u5e93\u91cc\uff0c\u56e0\u4e3a\u4ed3\u5e93\u548c\u7269\u54c1\u7684\u4e2a\u6570\u90fd\u4e3a `n` \uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u8981\u7edf\u8ba1\u4e00\u4e0b\u603b\u6570\uff0c\u5728\u8f93\u5165\u65f6\u7d2f\u52a0\u5373\u53ef\u3002\n\n### \u91cd\u70b9\uff1a\n\n\u4e3a\u4e86\u7b80\u5316\u95ee\u9898\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u4ed3\u5e93\u4e2d\u6bcf\u79cd\u7269\u54c1\u770b\u505a\u4e3a**\u4e00\u4e2a\u6574\u4f53**\uff0c\u56e0\u4e3a\u628a\u4e00\u4e2a\u4ed3\u5e93\u91cc\u7684\u7269\u54c1\u62c6\u6765\u62c6\u53bb\u80af\u5b9a\u4f1a\u82b1\u4e0d\u5fc5\u8981\u7684\u4ee3\u4ef7\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u5efa\u56fe\uff08\u90e8\u5206\uff09\u5c31\u662f\u8fd9\u6837\uff0c\u5bb9\u91cf\u4e3a1\uff08\u4e00\u4e2a\u6574\u4f53\uff09\uff0c\u8d39\u7528\u4e3a\u96f6\uff08\u65e0\u82b1\u8d39\uff09\uff1a\n\n```\n\tfor(int i=1;i<=n;i++){\n    \tadd(s,i,1,0);//\u539f\u70b9\u5230\u8fd9\u4e2a\u70b9\u8fde\u4e00\u4e0b\n    \tadd(i+n,t,1,0);//\u8fd9\u4e2a\u70b9\u5230\u6c47\u70b9\u8fde\u4e00\u4e0b\n   \t}\n\n```\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u628a\u8d27\u7269\u5f80\u4e0b\u4e00\u4e2a\u70b9\u79fb\u52a8\u4e86\uff0c\u8fb9 `i,j` \u7684\u610f\u4e49\u4e3a\u628a `i` \u79cd\u8d27\u7269\u5168\u90e8\u8fd0\u5230 `j` \u53f7\u4ed3\u5e93\uff0c\u6240\u9700\u8981\u7684\u4ee3\u4ef7\u5c31\u662f\uff1a\u603b\u8d39\u7528-\u8fd9\u4e2a\u4ed3\u5e93\u7684\u91cd\u91cf\uff08\u540c\u79cd\u7684\uff09\uff0c\u8fd9\u4e2a\u653e\u5728\u521a\u624d\u7684\u5faa\u73af\u91cc\u5c31\u884c\u4e86\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nconst int inf=2147483647;\nint maxn,cost;\nint top=1,head[5001];\nint dis[5001];\nint n,m,s,t,book[5001],c[200][200],d[200];\nstruct point{\n    int v,w,val,next;\n}a[100001];\nstruct b{\n    int fa;\n    int v;\n}b[5001];\ninline void _add(int u,int v,int val,int w){\n    a[++top].v=v;\n    a[top].val=val;\n    a[top].w=w;\n    a[top].next=head[u];\n    head[u]=top;\n}\ninline void add(int u,int v,int val,int w){\n\t_add(u,v,val,w);\n\t_add(v,u,0,-w);\n}\nbool spfa(){\n\tqueue<int> q;\n    memset(b,0,sizeof(b));\n    memset(book,0,sizeof(book));\n    for(int i=0;i<=t;i++)\n    \tdis[i]=inf;\n    dis[s]=0;\n    q.push(s);\n    book[s]=1;\n    while(!q.empty()){\n        int u=q.front();\n        book[u]=0;\n        q.pop();\n        for(int i=head[u];i;i=a[i].next){\n            int v=a[i].v,w=a[i].w;\n            if(a[i].val>0&&dis[v]>dis[u]+w){\n                dis[v]=dis[u]+w;\n                b[v].fa=u,b[v].v=i;\n                if(book[v]==0){\n                    q.push(v);\n                    book[v]=1;\n                }\n            }\n        }\n    }\n    return dis[t]!=inf;\n}\nvoid EK(){\n    while(spfa()){\n        int minn=inf;\n        for(int i=t;i!=s;i=b[i].fa)\n\t\t\tminn=min(minn,a[b[i].v].val);\n        for(int i=t;i!=s;i=b[i].fa){\n            a[b[i].v].val-=minn;\n            a[b[i].v^1].val+=minn;\n        }\n        maxn+=minn;\n        cost+=minn*dis[t];\n    }\n    return;\n}\nint main()\n{\n    n=read();\n\ts=0,t=n*2+1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tc[i][j]=read();\n\t\t\td[j]+=c[i][j];\n\t\t}\n\tfor(int i=1;i<=n;i++){\n    \tadd(s,i,1,0);\n    \tadd(i+n,t,1,0);\n    \tfor(int j=1;j<=n;j++)\n        \tadd(i,j+n,1,d[i]-c[j][i]);\n    }\n    EK();\n    cout<<cost;\n    return 0;\n}\n\n```\n\n\u8c22\u8c22\u5927\u5bb6\uff01",
        "postTime": 1612104438,
        "uid": 253738,
        "name": "\u542c\u53d6MLE\u58f0\u4e00\u7247",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2457 \u3010[SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "\u5230[\u6211\u7684\u535a\u5ba2](https://blog.csdn.net/zsyzClb/article/details/88345083)\u98df\u7528\u5473\u9053\u66f4\u5609\n\n\u9996\u5148\u7b80\u5316\u9898\u76ee\uff0c\u6c42\u51facos[i][j]\u8d27\u7269i\u653e\u5230j\u4ed3\u5e93\u6240\u9700\u7684\u503c\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u5176\u5b9e\u662f\u4e00\u9053\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u7684\u9898\u76ee\n\n\u7136\u540e\u5c31AC\u5427\uff08\u597d\u77ed\u7684\u89e3\u91ca\uff09\n\n\u53c2\u8003\u4ee3\u7801 \uff08\u6ce8\u91ca\u6211\u4e5f\u61d2\u5f97\u5199\u4e86\uff09\n\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <queue> \n \nusing namespace std ;\n \nnamespace IO {\n    inline int read() {\n        int x = 0 , f = 0 ; char s = getchar() ;\n        while ( !isdigit(s) ) f |= s=='-' , s = getchar() ;\n        while (  isdigit(s) ) x = (x<<1)+(x<<3)+(s-48) , s = getchar() ;\n        return !f ? x : -x ;\n    }\n    int ss , aa[21] ; \n    inline void write ( int x ) {\n        if ( !x ) putchar('0') ; ss = 0 ;\n        if ( x < 0 ) putchar('-') , x = -x ;\n        while ( x ) aa[++ss] = x%10 , x /= 10 ;\n        for ( int i = ss ; i > 0 ; i -- ) putchar(aa[i]+'0') ;\n        puts ( \"\" ) ;\n    }\n}\nusing namespace IO ;\n \nconst int N = 315 ;\n \nint n , a[N][N] ;\nint cos[N][N] , s[N] ;\n \nnamespace MAP {\n    struct edge {\n        int v , w , k , nxt ;\n    } e[N*N] ; int tot , last[N] , cur[N] ;\n    inline void add ( int u , int v , int w , int k ) {\n        e[++tot] = (edge){ v , w , k , last[u] } ;\n        last[u] = tot ;\n        e[++tot] = (edge){ u , 0 , -k , last[v] } ;\n        last[v] = tot ;\n    }\n}\nusing namespace MAP ;\n \nbool vis[N] ; int dis[N] ;\nint S , T ; int cost = 0 ;\n \ninline bool SPFA() {\n    memset ( vis , 0 , sizeof(vis) ) ; vis[T] = 1 ;\n    memset ( dis , -1 , sizeof(dis) ) ; dis[T] = 0 ;\n    queue<int> q ; q.push ( T ) ;\n    while ( !q.empty() ) {\n        int u = q.front() ; q.pop () ; vis[u] = 0 ;\n        for ( int i = last[u] ; i != -1 ; i = e[i].nxt ) {\n            int v = e[i].v ;\n            if ( e[i^1].w  && ( dis[v] > dis[u]-e[i].k || dis[v] == -1 ) ) {\n                dis[v] = dis[u] - e[i].k ;\n                if ( !vis[v] ) vis[v] = 1 , q.push ( v ) ;\n            }\n        }\n    }\n    return dis[S] != -1 ;\n}\n \nint dfs ( int u , int f ) {\n    vis[u] = 1 ;\n    if ( u == T ) return f ;\n    int ans = 0 , t = 0 ;\n    for ( int i = cur[u] ; i != -1 ; i = e[i].nxt ) {\n        int v = e[i].v ;\n        if ( !vis[v] && e[i].w && dis[u]-e[i].k == dis[v] ) {\n            ans += ( t=dfs( v , min( e[i].w , f-ans )) ) ;\n            e[i].w -= t , e[i^1].w += t ;\n            cost += t*e[i].k ; cur[u] = i ;\n            if ( ans == f ) break ;\n        }\n    }\n    vis[u] = 0 ; return ans ;\n}\n \nint main() {\n    n = read() ;\n    for ( int i = 1 ; i <= n ; i ++ ) \n        for ( int j = 1 ; j <= n ; j ++ ) \n            a[i][j] = read() , s[j] += a[i][j] ;\n    for ( int i = 1 ; i <= n ; i ++ ) \n        for ( int j = 1 ; j <= n ; j ++ ) \n            cos[i][j] = s[i] - a[j][i] ;\n    S = 2*n+1 , T = S + 1 ;\n    tot = -1 , memset ( last , -1 , sizeof(last) ) ;\n    for ( int i = 1 ; i <= n ; i ++ ) \n        add ( S , i , 1 , 0 ) , add ( i+n , T , 1 , 0 ) ;\n    for ( int i = 1 ; i <= n ; i ++ )\n        for ( int j = 1 ; j <= n ; j ++ ) \n            add ( i , j+n , 1 , cos[i][j] ) ;\n    int ans = 0 ;\n    while ( SPFA() ) {\n        memcpy ( cur , last , sizeof(cur) ) ;\n        ans += dfs ( S , 999999999 ) ;\n    }\n    write ( cost ) ; return 0 ;\n}\n\n```\n",
        "postTime": 1552020497,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2457 \u3010[SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "\u6211\u6781\u5c11\u505a\u6700\u5927\u6d41\u8d39\u7528\u6d41\u6700\u5c0f\u5272\u8fd9\u7c7b\u7684\u7f51\u7edc\u6d41\u9898\u76ee, \u4f46\u662f\u5efa\u6a21\u8fd8\u662f\u4f1a\u7684, \u53ea\u662f\u6bcf\u6b21\u9898\u4e4b\u524d\u90fd\u8981baidu\u4e2a\u677f\u5b50\u7528\u2026\u2026\n#### Solution\n![](https://cdn.luogu.com.cn/upload/pic/21905.png)\n\u6211\u7a0d\u5fae\u753b\u4e86\u4e2a\u56fe\u7136\u540e\u5c31\u660e\u767d\u6539\u600e\u4e48\u5efa\u56fe\u4e86(\u753b\u56fe\u7528\u7684\u5de5\u5177[SketchBook](https://www.sketchbook.com/))\n\n\u53ea\u662f\u6211\u8fd9\u4e2a\u56fe\u591a\u5efa\u4e86\u4e00\u4e9b\u8fb9, \u5c31\u662f\u628a\u6bcf\u4e2a\u4ed3\u5e93\u7684\u6bcf\u79cd\u8d27\u7269\u90fd\u5efa\u4e86\u70b9, \u5b9e\u9645\u4e0a\u662f\u4e0d\u7528\u7684, \u53ea\u662f\u8fd9\u6837\u66f4\u65b9\u4fbf\u7406\u89e3.\u8fd9\u6837\u4f1a\u591a\u5efa$n^2$\u4e2a\u70b9.\n\n#### Code\n```c++\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#define N 22505\n#define INF 100000000\nusing namespace std;\n\nstruct Edge{\n    int from,to,cap,flow,cost;\n    Edge(int u,int v,int ca,int f,int co):from(u),to(v),cap(ca),flow(f),cost(co){};\n};\n//\u7f51\u7edc\u6d41: baidu: \u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u6a21\u677f\nnamespace MCMF{\n    int n,m,s,t;\n    vector<Edge> edges;\n    vector<int> G[N];\n    int inq[N],d[N],p[N],a[N];\n\n    void init(int _n){\n        n=_n;\n        for(int i=0;i<n;i++)\n            G[i].clear();\n        edges.clear();\n    }\n    void addedge(int from,int to,int cap,int cost){\n        edges.push_back(Edge(from,to,cap,0,cost));\n        edges.push_back(Edge(to,from,0,0,-cost));\n        int m=edges.size();\n        G[from].push_back(m-2);\n        G[to].push_back(m-1);\n    }\n    bool SPFA(int s,int t,int &flow,int &cost){\n        for(int i=0;i<n;i++)d[i]=INF;\n        memset(inq,0,sizeof(inq));\n        d[s]=0;inq[s]=1;p[s]=0;a[s]=INF;\n        queue<int> Q;\n        Q.push(s);\n        while(!Q.empty()){\n            int u=Q.front();Q.pop();inq[u]--;\n            for(int i=0;i<G[u].size();i++){\n                Edge& e=edges[G[u][i]];\n                if(e.cap>e.flow && d[e.to]>d[u]+e.cost){\n                    d[e.to]=d[u]+e.cost;p[e.to]=G[u][i];\n                    a[e.to]=min(a[u],e.cap-e.flow);\n                    if(!inq[e.to]){\n                        inq[e.to]++;Q.push(e.to);\n                    }\n                }\n            }\n        }\n        if(d[t]==INF) return false;\n        flow+=a[t],cost+=d[t]*a[t];int u=t;\n        while(u!=s){\n            edges[p[u]].flow+=a[t];\n            edges[p[u]^1].flow-=a[t];\n            u=edges[p[u]].from;\n        }\n        return true;\n    }\n    int MincotMaxflow(int s,int t){\n        int flow=0,cost=0;\n        while(SPFA(s,t,flow,cost));\n        return cost;\n    }\n};\n\nint n;\nint map[155][155];\nint allco[N];\n\nint main(){\n    scanf(\"%d\",&n);\n    MCMF::init(2*n+2);\n    for(int i=1;i<=n;++i)\n        for(int j=1;j<=n;++j)\n            scanf(\"%d\",&map[i][j]);\n    \n    for(int j=1;j<=n;++j)\n        for(int i=1;i<=n;++i)\n            allco[j]+=map[i][j];\n    for(int i=1;i<=n;++i){\n        MCMF::addedge(0,i,1,0);\n        MCMF::addedge(i+n,n*2+1,1,0);\n        for(int j=1;j<=n;j++)\n            MCMF::addedge(i,j+n,1,allco[i]-map[j][i]);\n    }\n    printf(\"%d\",MCMF::MincotMaxflow(0,2*n+1));\n    return 0;\n}\n```",
        "postTime": 1530344545,
        "uid": 39067,
        "name": "aiyougege",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2457 \u3010[SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "\u89e3\uff1a\n\n\u6211\u7684\u9519\u8bef\u7684\u5efa\u6a21\u65b9\u5f0f:(\u6d41\u91cf,\u8d39\u7528)   sum[i]\uff1ai\u8fd9\u79cd\u8d27\u7269\u7684\u603b\u91cf\n\nS->\u8d27\u7269 (sum[i],1)\n\n\u8d27\u7269->\u4ed3\u5e93 (a[i][j],1)\n\n\u4ed3\u5e93->T (inf,0)\n\n\u4f46\u662f\u8fd9\u6837\u5efa\u6a21\u7684\u95ee\u9898\u662f\uff0c\u6ca1\u6709\u529e\u6cd5\u63a7\u5236\u5f52\u7c7b\u4ee5\u53ca\u600e\u4e48\u653e\n\n\u6b63\u786e\u5efa\u6a21\u65b9\u5f0f\uff1a\n\n\u8d39\u7528\u63a7\u5236\u8d27\u7269\u603b\u91cf\uff0c\u6d41\u91cf\u4fdd\u8bc1\u6bcf\u79cd\u8d27\u7269\u53ea\u80fd\u653e\u5230\u5176\u4e2d\u4e00\u4e2a\u4ed3\u5e93\n\nS->\u8d27\u7269 (1,0)\n\n\u8d27\u7269->\u4ed3\u5e93 (1,sum[i]-a[j][i])\n\n\u4ed3\u5e93->T (1,0)\n\n[>_<](http://www.cnblogs.com/adelalove/p/8678770.html)",
        "postTime": 1522417694,
        "uid": 83546,
        "name": "\u4f9d\u4f9d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2457 \u3010[SDOI2006]\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u70e6\u607c\u3011"
    }
]