[
    {
        "content": "## \u524d\u8a00\n\u6211\u89c9\u5f97\u8fd9\u9898\u633a\u597d\u554a...\u4e3a\u4ec0\u4e48\u9898\u89e3\u90fd\u5199\u5f97\u8fd9\u4e48\u8349\u7387...\u90a3\u5c31\u7531\u6211\u6765\u7cfb\u7edf\u5730\u8bb2\u89e3\u8bb2\u89e3\u3002\n\uff08\u987a\u5e26\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u7684\u535a\u5ba2\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u53bb[\u8fd9\u91cc](https://captainslow.cf/2018/09/06/luogup2662-%E7%89%9B%E5%9C%BA%E5%9B%B4%E6%A0%8F/)\u770b\uff09\n## \u5206\u6790\n~~\u89c4\u6a21\u8f83\u5c0f\uff0c\u76f4\u63a5\u4e0a\u53ef\u884c\u89e3DP~~\uff08\u6709\u4e2a\u53eb[_DYT](https://www.luogu.org/space/show?uid=36654)\u5927\u4f6c\u641e\u4e86\u4e00\u6ce2\u5206\u6790\u8bc1\u660e\u8fd9\u4e2a\u89e3\u82e5\u5b58\u5728\u662f\u5c0f\u4e8e$9 \\times 10^6$\uff09\n\u5f53\u7136\u6211\u4eec\u8981\u8003\u8651\u66f4\u597d\u7684\u89e3\u6cd5\uff0c\u5982\u679c\u662f\u521d\u4e2d\u6211\u4e5f\u4f1a\u5199\u53ef\u884c\u89e3DP\uff0c\u5f53\u7136\u8003\u573a\u4e0a\u5b9e\u5728\u5199\u4e0d\u51fa\u6765\u6211\u8fd8\u662f\u5e94\u8be5\u6253\u4e2a\u66b4\u529b\u9a97\u9a97~~\u6ee1\u5206~~\u7684\u3002\n### PART 1 \u65e0\u89e3\uff1f\n\u95ee\u9898\u786e\u5b9e\u53ef\u80fd\u65e0\u89e3\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n> - \u5b58\u5728\u6570\u5b571\n> > - \u5982\u679c\u67091\u8fd9\u4e2a\u6570\u5b57\uff0c\u90a3\u4e48\u6240\u6709\u7684\u6570\u5b57\u90fd\u53ef\u4ee5\u88ab\u8868\u793a\u51fa\u6765\uff0c\u5c31\u4e0d\u5b58\u5728\u4e0d\u80fd\u8868\u793a\u51fa\u7684\u6570\u4e86\n\n> - \u6240\u6709\u6570\u7684gcd\u5927\u4e8e1\n> > - \u8bbe\u8fd9\u4e9b\u6570\u4e3a$A_1, A_2,...,A_n$\uff0c\u8bbe$q=gcd(A_1, A_2,...,A_n)$\uff0c\u5219$q|A_1x_1+A_2x_2+...+A_nx_n$($x_1,x_2,...,x_n \\in Z$)\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u7ed3\u8bba\uff0c\u5b66\u4e60\u6574\u9664\u7684\u65f6\u5019\u662f\u5fc5\u56de\u8bb2\u5230\u7684\u3002\u6240\u4ee5\uff0c\u7531\u4e8e$q > 1$\uff0c\u5fc5\u7136\u5b58\u5728\u4e0d\u80fd\u8868\u793a\u51fa\u6765\u7684\u6570\uff0c\u5373$\\forall q \\nmid m$\uff0c\u90fd\u662f\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u6570\uff0c\u663e\u7136\u8fd9\u4e2a$m$\u662f\u53ef\u4ee5\u5230\u65e0\u7a77\u5927\u7684\u3002\n\n\u8fd9\u4e24\u8005\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u5148\u7279\u5224\u51fa\u6765\uff0c\u800c\u5269\u4e0b\u7684\u5c31\u662f$q=1$\u7684\u60c5\u51b5\u4e86\uff0c\u8fd9\u6837\u7684\u8bdd\u662f\u80af\u5b9a\u5b58\u5728\u6700\u5927\u7684\u4e0d\u80fd\u8868\u793a\u51fa\u6765\u7684\u6570\u7684\u3002\n\u8fd9\u4e2a\u5f88\u663e\u7136\u3002\n### PART 2 \u5bfb\u627e\n\u6211\u4eec\u5982\u4f55\u53bb\u5bfb\u627e\u8fd9\u4e2a\u6700\u5927\u7684\u4e0d\u80fd\u88ab\u8868\u793a\u51fa\u6765\u7684\u6570\u5462\uff1f\n\u6211\u4eec\u8003\u8651\u6240\u6709\u53ef\u4ee5\u88ab\u8868\u793a\u51fa\u6765\u7684\u6570\u6784\u6210\u7684\u6570\u96c6$S$\uff0c\u7531\u6700\u5c0f\u6570\u539f\u7406\u53ef\u77e5\uff0c$S$\u4e2d\u4e00\u5b9a\u5b58\u5728\u6700\u5c0f\u7684$s_0$\u3002\u8003\u8651\u6a21$s_0$\u7684\u6bcf\u4e00\u4e2a\u5269\u4f59\u7cfb\uff0c\u8bb0\u4e3a$K_i=\\lbrace x|x \\equiv i\\pmod{s_0}\\rbrace,i=0,1,2,...,s_0-1$\u3002\n\u663e\u7136$s_0=min(A_i)$\u3002\u5bf9$\\forall K_i$\uff0c\u7531\u6700\u5c0f\u6570\u539f\u7406\uff0c\u5b58\u5728\u6700\u5c0f\u7684\u80fd\u88ab\u8868\u793a\u51fa\u6765\u7684$t_i$\uff0c$t_i=s_0*p+i$\uff0c\u663e\u7136$p>0$\uff0c\u5426\u5219\u4e0e$s_0$\u7684\u6700\u5c0f\u6027\u77db\u76fe\u3002\u90a3\u4e48\u5bf9\u6bcf\u4e00\u4e2a$K_i$\uff0c\u6700\u5927\u4e0d\u80fd\u88ab\u8868\u793a\u51fa\u6765\u7684\u6570\u5c31\u662f$s_0*(p-1)+i$\u3002\u8fd9\u6837\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u6c42\u6bcf\u4e00\u4e2a\u8fd9\u6837\u7684$t_i$\uff0c\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u5f15\u5165\u8fd9\u4e2a\u88ab\u79f0\u4e3a\u5269\u4f59\u7cfb\u6700\u77ed\u8def\u7684\u7b97\u6cd5\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u5269\u4f59\u7cfb$K_i$\u62bd\u8c61\u4e3a\u56fe\u4e2d\u7684\u70b9\uff0c\u90a3\u4e48\u8fde\u63a5\u5b83\u4eec\u7684\u8fb9\u5c31\u662f$A_i$\u4e2d\u7684\u90a3\u4e9b\u6570\u3002\u7136\u540e\u5c31\u7528\u666e\u901a\u7684\u6700\u77ed\u8def\u66f4\u65b0\u65b9\u5f0f\u5c31\u53ef\u4ee5\u4e86\u3002\u6211\u9009\u62e9\u4e86\u7528Dijkstra\u7b97\u6cd5\u3002\n## \u53c2\u8003\u7a0b\u5e8f\n```cpp\n// Luogu P2262\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nconst int ARSIZE = 4005;\nconst int INF = 0x7f7f7f7f;\n\nint N, M, L[ARSIZE], tot_l = 0, Q[ARSIZE];\nbool exist[ARSIZE] = {0}, used[ARSIZE] = {0};\n\ninline int gcd(int a, int b) {\n    for (a < b ? std::swap(a, b) : (void)0; b; std::swap(a, b)) a %= b;\n    return a;\n}\nint dijkstra();\n\nint main() {\n    scanf(\"%d%d\", &N, &M);\n    int j, li, gd = 0;\n    for (int i = 0; i < N; i++) {\n        scanf(\"%d\", &li);\n        gd = gcd(gd, li);\n        for (j = 0; j <= M && j < li; j++) exist[li - j] = true, gd = gcd(li - j, gd);\t// \u5f88\u591a\u4ebaWA\uff0c\u534a\u5929\u67e5\u4e0d\u51fa\u9519\uff0c\u5f88\u53ef\u80fd\u5c31\u662f\u53ea\u7b97\u4e86\u6240\u6709L[i]\u7684gcd\n    }\n    if (exist[1] || gd > 1) puts(\"-1\");\n    else printf(\"%d\\n\", dijkstra());\n    return 0;\n}\n\nint dijkstra() {\n    memset(Q, 0x7f, sizeof(Q));\n    int i, v, k;\n    for (Q[0] = 0, i = 2; i <= 3000; i++)\t// \u521d\u59cb\u5316\n        if (exist[i]) L[tot_l++] = i;\n    int MOD = L[0];\n    while (true) {\n        for (i = 0, k = -1; i < MOD; i++)\n            if (!used[i] && (k == -1 || Q[i] < Q[k])) k = i;\n        if (k == -1) break;\n        used[k] = true;\n        for (i = 1; i < tot_l; i++)\n            if (!used[v = (k + L[i]) % MOD]) Q[v] = std::min(Q[v], Q[k] + L[i]);\t// \u66f4\u65b0\u5176\u4ed6\u5269\u4f59\u7cfb\n    }\n    int res = -1;\n    for (i = 1; i < MOD; i++) res = std::max(res, Q[i] - MOD);\n    return res;\n}\n```",
        "postTime": 1536193033,
        "uid": 28022,
        "name": "CaptainSlow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2662 \u3010\u725b\u573a\u56f4\u680f\u3011"
    },
    {
        "content": "\u88f8\u7684\u540c\u4f59\u7c7bbfs\uff0c\u6ce8\u610f\u6728\u68cd\u957f\u5ea6\u4e0d\u80fd\u4e3a\u8d1f\uff0c\u53ef\u4ee5\u53bb\u91cd\u51cf\u5c11\u590d\u6742\u5ea6\u3002\n\n(\u7136\u800c\u592a\u77ed\u4e86\uff0c\u4e0d\u80fd\u8fc7\u5ba1\u6838\uff0c\u5c31\u8bb2\u4e00\u4e0b\u540c\u4f59\u7c7bbfs\u662f\u4ec0\u4e48\u5427)\n\n\u628a\u56f4\u680f\u6309\u7167\u957f\u5ea6\u6700\u77ed\u7684\u56f4\u680f\u7684\u957f\u5ea6\u5206\u4e3a\u51e0\u4e2a\u540c\u4f59\u7c7b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a\u540c\u4f59\u7c7b\u5185\u80fd\u591f\u62fc\u6210\u7684\u6700\u77ed\u7684\u56f4\u680f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u540c\u4f59\u7c7b\u5185\u6bd4\u4ed6\u957f\u7684\u56f4\u680f\u90fd\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u6700\u77ed\u7684\u90a3\u6839\u56f4\u680f\u62fc\u6210\u3002\n\n\u53ef\u4ee5\u628a\u540c\u4f59\u7c7b\u770b\u6210\u8282\u70b9\uff0c\u4ece\u6bcf\u4e2a x \u5230 (x+Ai) mod L \u8fde\u4e00\u6761\u957f\u5ea6\u4e3a Ai \u7684\u8fb9\uff08Ai\u4e3a\u6bcf\u6839\u56f4\u680f\u957f\u5ea6\uff0cL\u4e3a\u6700\u77ed\u56f4\u680f\u957f\u5ea6\uff09\uff0c\u7136\u540e\u4ee50\u4e3a\u8d77\u70b9\u6c42\u5355\u6e90\u6700\u77ed\u8def\u3002\n\n\u5728\u6240\u6709\u70b9\u52300\u53f7\u70b9\u7684\u6700\u77ed\u8def\u4e2d\u53d6\u6700\u5927\u503c\u8bb0\u4e3aT\uff0c\u90a3\u4e48\u6700\u957f\u4e0d\u80fd\u591f\u62fc\u6210\u7684\u56f4\u680f\u5c31\u662fT-L\u3002\n\n\u5982\u679c\u6240\u6709\u7684\u56f4\u680f\u90fd\u662f\u5176\u4e2d\u4e00\u6761\u56f4\u680f\u7684\u6574\u6570\u500d\uff0c\u5219\u8f93\u51fa-1.\n\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int N=105;\nconst int M=3005;\nint n,m,nn,ans,a[N*M],dis[3005];\nbool inq[3005];\nqueue<int>q;\nbool pd()\n{\n    for(int i=2;i<=nn;i++)\n        if(a[i]%a[1]!=0)\n            return 0;\n    return 1;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    nn=n;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(a[i]-j>0)\n                a[++nn]=a[i]-j;\n    sort(a+1,a+nn+1);\n    if(pd())\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    nn=unique(a+1,a+nn+1)-a-1;\n    memset(dis,0x3f,sizeof(dis));\n    dis[0]=0;\n    q.push(0);\n    inq[0]=1;\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=2;i<=nn;i++)\n            if(dis[(u+a[i])%a[1]]>dis[u]+a[i])\n            {\n                dis[(u+a[i])%a[1]]=dis[u]+a[i];\n                if(!inq[(u+a[i])%a[1]])\n                {\n                    inq[(u+a[i])%a[1]]=1;\n                    q.push((u+a[i])%a[1]);\n                }\n            }\n        inq[u]=0;\n    }\n    for(int i=1;i<=a[1]-1;i++)\n        ans=max(ans,dis[i]);\n    printf(\"%d\\n\",ans-a[1]);\n    return 0;\n}\n```",
        "postTime": 1479033258,
        "uid": 12070,
        "name": "Lynx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2662 \u3010\u725b\u573a\u56f4\u680f\u3011"
    },
    {
        "content": "\u672c\u9898\u662f\u540c\u4f59\u6700\u77ed\u8def\uff0c\u7a0d\u52a0\u62d3\u5c55\u3002\u8fd9\u91cc\u60f3\u7a0d\u5fae\u8bf4\u8bf4\u540c\u4f59\u6700\u77ed\u8def\u3002\n\n\u5173\u4e8e\u540c\u4f59\u6700\u77ed\u8def\uff0c\u8be6\u7ec6\u8bb2\u8d77\u7684\u8bdd\u4ece\u8fd9\u9053\u9898\u5165\u624b\u6bd4\u8f83\u590d\u6742\uff0c\u4e0d\u5982\u5148\u6765\u770b\u770b\u8fd9\u9053\u9898\uff1a\n\n\u3010P3403\u8df3\u697c\u673a\u3011\n\n## \u9898\u76ee\u80cc\u666f\nDJL\u4e3a\u4e86\u907f\u514d\u6210\u4e3a\u4e00\u53ea\u54b8\u9c7c\uff0c\u6765\u627esrwudi\u5b66\u4e60\u538b\u4ee3\u7801\u7684\u6280\u5de7\u3002\n\n## \u9898\u76ee\u63cf\u8ff0\nSrwudi\u7684\u5bb6\u662f\u4e00\u5e62h\u5c42\u7684\u6469\u5929\u5927\u697c\u3002\u7531\u4e8e\u524d\u6765\u5b66\u4e60\u7684\u849f\u84bb\u8d8a\u6765\u8d8a\u591a\uff0csrwudi\u6539\u9020\u4e86\u4e00\u4e2a\u8df3\u697c\u673a\uff0c\u4f7f\u5f97\u8bbf\u5ba2\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7684\u4e0a\u697c\u3002\n\n\u7ecf\u8fc7\u6539\u9020\uff0csrwudi\u7684\u8df3\u697c\u673a\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u56db\u79cd\u65b9\u5f0f\u79fb\u52a8\uff1a\n\n\u5411\u4e0a\u79fb\u52a8x\u5c42\uff1b\n\n\u5411\u4e0a\u79fb\u52a8y\u5c42\uff1b\n\n\u5411\u4e0a\u79fb\u52a8z\u5c42\uff1b\n\n\u56de\u5230\u7b2c\u4e00\u5c42\u3002\n\n\u4e00\u4e2a\u6708\u9ed1\u98ce\u9ad8\u7684\u5927\u4e2d\u5348\uff0cDJL\u6765\u5230\u4e86srwudi\u7684\u5bb6\uff0c\u73b0\u5728\u4ed6\u5728srwudi\u5bb6\u7684\u7b2c\u4e00\u5c42\uff0c\u78b0\u5de7\u8df3\u697c\u673a\u4e5f\u5728\u7b2c\u4e00\u5c42\u3002DJL\u60f3\u77e5\u9053\uff0c\u4ed6\u53ef\u4ee5\u4e58\u5750\u8df3\u697c\u673a\u524d\u5f80\u7684\u697c\u5c42\u6570\u3002\n\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\u8f93\u5165\u683c\u5f0f\uff1a\n\n \n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570h\uff0c\u8868\u793a\u6469\u5929\u5927\u697c\u7684\u5c42\u6570\u3002\n\n\u7b2c\u4e8c\u884c\u4e09\u4e2a\u6b63\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u9898\u76ee\u4e2d\u7684x, y, z\u3002\n\n \n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\n \n\n\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793aDJL\u53ef\u4ee5\u5230\u8fbe\u7684\u697c\u5c42\u6570\u3002\n\n \n\n## \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\u8f93\u5165\u6837\u4f8b#1\uff1a\n\n15\n\n4 7 9\n\n\u8f93\u51fa\u6837\u4f8b#1\uff1a\n\n9\n\n\u8f93\u5165\u6837\u4f8b#2\uff1a\n\n33333333333\n\n99005 99002 100000\n\n\u8f93\u51fa\u6837\u4f8b#2\uff1a\n\n33302114671\n## \u8bf4\u660e\n\u53ef\u4ee5\u5230\u8fbe\u7684\u697c\u5c42\u6709\uff1a1,5,8,9,10,12,13,14,15\n\n\u60f3\u4e0d\u51fa\u6765\u4e0d\u8981\u6b7b\u78d5\u8fd9\u4e00\u9898\uff0c\u5148\u770b\u770b\u7b2c\u4e09\u9898\u3002\u3002\u3002\u3002\n\n1<=h<=2^63-1\n\n1<=x, y, z<=100000\n\n## \u601d\u8def\n\n\u9996\u5148\u8003\u8651\u4f4e\u4e00\u7ea7\u7684\u95ee\u9898\uff0c\u5047\u5982\u53ea\u5b58\u5728x\uff0cy\u4e24\u79cd\u64cd\u4f5c\u800c\u4e0d\u662fx\uff0cy\uff0cz\u4e09\u79cd\uff08\u6682\u65f6\u5ffd\u7565\u56de\u5230\u7b2c\u4e00\u5c42\uff09\n\n\u90a3\u4e48\u5f88\u597d\u60f3\uff0c\u53ea\u8981\u7528y\u80fd\u51d1\u51fa\u6765x\u7684\u5269\u4f59\u7cfb\uff08%x\u7684\u6240\u6709\u4f59\u6570\u7684\u96c6\u5408\uff09\uff0c\u90a3\u4e48\u6240\u6709\u697c\u5c42\u90fd\u80fd\u8fbe\u5230\n\n\u8bbei\u4e3a%x\u7684\u4e00\u4e2a\u4f59\u6570\uff0cf[i]\u4e3a\u7528y\u80fd\u51d1\u51fa\u6765\u7684%x=i\u7684\u6700\u5c0f\u9ad8\u5ea6\uff0c\u90a3\u4e48f[i]\u518d\u5f80\u4e0a\u8df3\u4efb\u610f\u4e2ax\u7684\u5c42\u6570\u90fd\u80fd\u8fbe\u5230\uff0c\u5373\u5bf9\u4e8ef[x]\u80fd\u8fbe\u5230\u7684\u5c42\u6570\u4e3a(h-f[i])/x+1\u3002\u56e0\u4e3a\u7a0b\u5e8f\u91cc\u9762\u7684\u9664\u6cd5\u662f\u5411\u4e0b\u53d6\u6574\uff0c\u540e\u9762\u8fd8\u8981\u8865\u4e00\u4e2a1\u3002\u53e6\u5916\uff0c\u7531\u4e8ef\u6570\u7ec4\u7684\u5b58\u5728\uff0c\u4e00\u5b9a\u4e0d\u5b58\u5728\u6574\u9664\u7684\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u628a\u6240\u6709\u8fd9\u6837\u7684f[i]\u52a0\u8d77\u6765\u5c31\u662f\u6240\u6c42\u7684\u7b54\u6848\u3002\u63a8\u5e7f\u5230\u4e09\u79cd\u64cd\u4f5c\u7684\u60c5\u51b5\uff0c\u53ea\u8981\u7528y\u548cz\u53bb\u51d1f\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u3002\n\n\u63a5\u4e0b\u6765\u95ee\u9898\u662f\u600e\u4e48\u6c42f[i]\u3002\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e00\u4e2af[i]\uff0c\u5728\u5b83\u7684\u57fa\u7840\u4e0a\u518d\u6267\u884c\u4e00\u904dy\u6216z\u64cd\u4f5c\uff0c\u4f8b\u5982\u7528f[i]+y\uff0c\u663e\u7136\u80fd\u5f97\u5230f[i+y]\u3002\u90a3\u4e48\u8003\u8651\u8ba9f[i+y]\u548cf[i]\u90fd\u6210\u4e3a\u70b9\uff0c\u7528y\u4f5c\u4e3a\u8fb9\u76f8\u8fde\uff0c\u4ee5\u5df2\u77e5\u72b6\u6001\u63a8\u51fa\u5176\u5b83\u6240\u6c42\u72b6\u6001\u3002\u56e0\u4e3af\u6570\u7ec4\u8303\u56f4\u662fx\u7684\u5269\u4f59\u7cfb\uff0c\u4e3a\u4e86\u4f7ff\u6700\u5c0f\u6211\u4eec\u9009\u62e9x\uff0cy\uff0cz\u4e2d\u6700\u5c0f\u7684\u6210\u4e3ax\uff0c\u8fde\u8fb9\u65f6f[i+y]\u8981\u4f5c\u4e3af[(i+y)%x]\u8fd9\u4e2a\u70b9\u4f7f\u7528\uff0c\u5bf9\u7ed3\u679c\u5e76\u65e0\u5f71\u54cd\u3002\n\n\u8003\u8651\u8d77\u59cb\u72b6\u6001\u662f\u7b2c\u4e00\u5c42\u4e14\u6700\u4f4e\u53ea\u80fd\u56de\u5230\u7b2c\u4e00\u5c42\uff0c\u90a3\u4e48\u5df2\u77e5\u72b6\u6001\u662ff[1]=1\u3002\u7528SPFA\u6765\u677e\u5f1b\u8fd9\u4e9b\u7b49\u5f0f\u5173\u7cfb\uff0c\u8dd1\u51faf\u6570\u7ec4\u3002\u6700\u540e\u7528h\u8ba1\u7b97\u603b\u7b54\u6848\u7684\u65f6\u5019\uff0c\u8981\u6392\u9664\u6389f[i]\u4e2d>h\u7684\u7b54\u6848\u3002\n\n\u8fd9\u9053\u9898\u4e2d\u7684\u540c\u4f59\u6700\u77ed\u8def\u601d\u60f3\uff0c\u4e2a\u4eba\u7406\u89e3\u5728\u4e8e\u5229\u7528\u540c\u4f59\u6765\u6784\u9020x\u7684\u5269\u4f59\u7cfb\u8fd9\u4e9b\u70b9\u3002f[i]\uff0cf[i]+x\uff0cf[i]+2x\uff0c...\uff0cf[i]+kx\uff0c\u8fd9\u4e9b\u697c\u5c42\u6570\u90fd%x\u540c\u4f59\uff0c\u90a3\u4e48\u53ea\u8981\u5efa\u7acbf[i]\u7684\u72b6\u6001\u5c31\u80fd\u7528\u6781\u4f4e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6c42\u51faf[i]+x\uff0cf[i]+2x\u7b49\u662f\u5426\u53ef\u884c\u3002\n\n\u7136\u540e\u56de\u5230\u672c\u9898\u725b\u573a\u56f4\u680f\u3002\n\n\u4f9d\u7136\u662f\u7531\u4e00\u4e9b\u6570\u5b57\u53bb\u51d1\u4e00\u4e2a\u6570\u5b57\u7684\u5269\u4f59\u7cfb\uff0c\u8fd9\u9053\u9898\u7531\u4e8e\u591a\u4e86M\u7684\u6761\u4ef6\uff0c\u9700\u8981\u5148\u66b4\u529b\u628a\u6240\u6709\u80fd\u7528\u7684\u6570\u5b57\u6c42\u51fa\u6765\uff0c\u5e76\u8ba9\u5176\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\u6210\u4e3a\u63d0\u4f9b\u5269\u4f59\u7cfb\u7684x\u3002\n\n\u7136\u540e\u8dd1\u4e00\u904d\u6240\u6709\u80fd\u7528\u7684\u6570\u5b57\uff0c\u548cx\u7684\u5269\u4f59\u7cfb\u5efa\u8fb9\uff0c\u6700\u540e\u8dd1\u6700\u77ed\u8def\u3002\n\n\u6c42\u4e0d\u80fd\u51d1\u51fa\u7684\u6700\u5927\u6570\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u5148\u8003\u8651d\u6570\u7ec4\u7684\u610f\u4e49\u3002d[i]\u5373\u4e3a\u5176\u4ed6\u6570\u5b57\u80fd\u51d1\u51fa\u6765\u7684%x=i\u7684\u6700\u5c0f\u6570\u5b57\uff0c\u90a3\u4e48d[i]+x,d[i]+2x,d[i]+3x... d[i]\u4ee5\u4e0a\u8df3\u6240\u6709\u4e2ax\u90fd\u80fd\u8fbe\u5230\u3002\n\n\u90a3\u4e48%x=i\u7684\u6570\u5b57\uff0c\u6700\u5927\u51d1\u4e0d\u51fa\u6765\u7684\u5c31\u662fd[i]-x\u3002\n\n\u90a3\u4e48\u5f88\u663e\u7136\u4e86\uff0c\u628a\u6240\u6709\u7684d[i]-x\u6c42\u51fa\u6765\uff0c\u53d6\u5176\u4e2d\u6700\u5927\u503c\u3002\n\n\u4f46\u662f\u8fd8\u6709\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff0c\u672c\u9898\u5b58\u5728\u8f93\u51fa-1\u7684\u8981\u6c42\u3002\u5176\u4e2d\u4e00\u79cd\u8f93\u51fa-1\u7684\u60c5\u51b5\u662f\u6ca1\u6709\u51d1\u4e0d\u51fa\u6765\u7684\u6570\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u80fd\u7528\u7684\u6728\u6599\u4e2d\u5b58\u5728\u957f\u4e3a1\u7684\uff0c\u81ea\u7136\u5c31\u80fd\u8fbe\u5230\u6240\u6709\u7684\u957f\u5ea6\u3002\n\n\u53e6\u4e00\u79cd\u60c5\u51b5\u662f\u4e0d\u5b58\u5728\u8fd9\u4e2a\u6700\u5927\u503c\u3002\u8fd9\u91cc\u6709\u4e24\u79cd\u8003\u8651\u65b9\u5411\uff0c\u4e00\u79cd\u662f\u6c42\u51fa\u6240\u6709\u6570\u5b57\u7684gcd\uff0c\u82e5\u5176\u4e0d\u7b49\u4e8e1\uff0c\u81ea\u7136\u6709\u4e00\u7cfb\u5217\u6ca1\u6cd5\u51d1\u51fa\u6765\u7684\u6570\u5b57\u3002\u56e0\u4e3a\u80fd\u51d1\u51fa\u6765\u7684\u6570\u5b57\u4e00\u5b9a\u662f\u8fd9\u4e2agcd\u7684\u500d\u6570\uff0c\u5176\u4e0d\u4e3a\u4e00\u7684\u65f6\u5019\u5fc5\u7136\u5b58\u5728\u51d1\u4e0d\u51fa\u6765\u7684\u7a7a\u7f3a\u3002\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u662f\u6700\u540e\u627eans\u7684\u65f6\u5019\u987a\u4fbf\u770b\u4e00\u4e0b\u662f\u5426\u6709d[i]>max\uff08max\u662f\u7ed9d\u6570\u7ec4\u8dd1\u6700\u77ed\u8def\u524d\u8bbe\u7684\u6700\u5927\u503c\uff09\uff0c\u5982\u679c\u6709\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e32%x=i\u7684\u6570\u5b57\u90fd\u51d1\u4e0d\u51fa\u6765\u3002\uff08\u5176\u5b9e\u8fd9\u79cd\u505a\u6cd5\u5927\u6982\u76f8\u5f53\u4e8e\u731c\u6d4b\u5229\u7528\u4e86\u6570\u636e\u6bd4\u8f83\u5c0f\uff09\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<iostream> \n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nint n,m;\nint x,a[101];\nint ver[5100001],Next[5100001],head[2600001],edge[5100001],tot,d[2600001],vis[2600001],ans=0;\nqueue<int>q;\nvoid add(int x,int y,int z){\n    ver[++tot]=y;\n    Next[tot]=head[x];\n    edge[tot]=z;\n    head[x]=tot;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    sort(a+1,a+n+1);\n    x=max(1,a[1]-m);\n    if(x==1){\n        printf(\"-1\");\n        return 0;\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=max(a[i-1]+1,a[i]-m);j<=a[i];j++){\n            if(j!=x){\n                for(int k=0;k<x;k++){\n                    add(k,(k+j)%x,j);\n                }\n            }\n        }\n    }\n    memset(d,0x3f,sizeof(d));\n    d[0]=0;\n    q.push(0);\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        vis[u]=0;\n        for(int i=head[u];i;i=Next[i]){\n            int v=ver[i],z=edge[i];\n            if(d[v]>d[u]+z){\n                d[v]=d[u]+z;\n                if(!vis[v]){\n                    vis[v]=1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    d[x]=0;\n    for(int i=1;i<x;i++){\n//        printf(\"%d %d\\n\",i,d[i]);\n        if(d[i]>100000000){\n            printf(\"-1\");\n            return 0;\n        }\n        ans=max(ans,d[i]-x);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u4ee5\u4e0a\u3002",
        "postTime": 1560476437,
        "uid": 114222,
        "name": "\u72db\u679d\u51ea\u6597",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2662 \u3010\u725b\u573a\u56f4\u680f\u3011"
    },
    {
        "content": "\u8fd9\u65f6\u4e00\u7bc7\u975e\u5e38\u8be6\u7ec6\u7684\uff0c\u6bd4\u8f83\u6e05\u695a\u7684\u9898\u89e3\uff08~~\u81ea\u6211\u8ba4\u4e3a\u7684~~\uff09\u3002\n### \u5c0f\u8d34\u58eb\n\u524d\u7f6e\u77e5\u8bc6 djikstra \u7b97\u6cd5\u53ef\u4ee5\u70b9\u8fd9\u91cc\u8fdb\u884c\u5b66\u4e60[P3771](https://www.luogu.com.cn/problem/P3371)\u3002\u6216\u8005\u8fd9\u91cc[P4779](https://www.luogu.com.cn/problem/P4779)\u3002\n## \u9898\u610f\n\u5373\u7ed9\u51fa\u4e00\u4e2a\u542b\u6709 $N(1 \\leq N \\leq 100)$ \u4e2a\u6570\u7684\u5e8f\u5217 $A$\uff0c\u5c06\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5143\u7d20 $a_i$ \u5230 $a_i-M$ \u4e4b\u95f4\u7684\u6570\u52a0\u5165\u5e8f\u5217 $A$\uff08\u5305\u62ec $a_i-M$\uff09\uff0c\u7136\u540e\u7b97\u51fa\u6700\u5927\u4e0d\u53ef\u88ab\u5e8f\u5217 $A$ \u8868\u793a\u7684\u6570\uff08\u5f53\u4e00\u4e2a\u6570\u53ef\u7531\u8be5\u5e8f\u5217\u4e2d\u7684\u53ef\u91cd\u590d\u7684\u5143\u7d20\u76f8\u52a0\u5f97\u5230\u65f6\uff0c\u8be5\u6570\u53ef\u4ee5\u88ab\u8868\u793a\uff09\u3002\n### \u601d\u8def\u7684\u5f00\u59cb\n\u5148\u4ece\u7279\u6b8a\u5f00\u59cb\uff0c\u5047\u5982\u5e8f\u5217 $A$ \u4e2d\u53ea\u5b58\u5728\u4e24\u4e2a\u5143\u7d20\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5047\u5982\u6709\u4e00\u4e2a\u5143\u7d20\u6570\u503c\u4e3a $x$\uff0c\u90a3\u4e48 $x$ \u7684\u6240\u6709\u500d\u6570\u5c06\u4f1a\u6210\u4e3a\u53ef\u4ee5\u88ab\u8868\u793a\u7684\u6570\u3002 \n\n\u6b64\u65f6\u82e5\u5e8f\u5217\u4e2d\u8fd8\u5b58\u5728\u4e00\u4e2a\u5143\u7d20 $y(x<y)$\uff0c\u8bbe\u53ef\u4ee5\u88ab\u8868\u793a\u7684\u6570\u4e3a $ z $\uff0c\u90a3\u4e48\u6709\u7b49\u5f0f $ ax+by=z $\uff0c\u5176\u4e2d $a,b$ \u4e3a\u4efb\u610f\u81ea\u7136\u6570\uff08\u5373\u53ef\u4ee5\u4e3a $0$\uff09~~\uff08\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u5b9a\u7406\uff01bushi\uff09~~\u3002\u5219\u53ef\u4ee5\u53d8\u6362\u4e00\u4e0b\u7b49\u5f0f\uff0c\u53d8\u4e3a\uff1a\n\n$$ by\\equiv z \\pmod x$$ \n\n\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4 $z$ \u4e0e $by$ \u540c\u4f59(\u8fd9\u91cc\u8981\u6ce8\u610f $z \\geq by$)\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u7528\u5230\u521a\u521a\u63d0\u5230\u7684\u5269\u4f59\u7c7b $z$ \u4e0e $by$ \u540c\u5c5e\u5728\u53d6\u6a21 $x$ \u610f\u4e49\u4e0b\u7684\u540c\u4e00\u4e2a\u540c\u4f59\u7c7b\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u672c\u9898\u89e3\u7684\u9700\u8981\u601d\u8003\u91cd\u70b9\u4e86\uff01\n\n**\u6211\u4eec\u53d1\u73b0 \u5728\u6b63\u6574\u6570\u57df\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5269\u4f59\u7c7b\u4e2d\u7684\u53ef\u4ee5\u88ab\u8868\u793a\u7684\u6b63\u6574\u6570 $z$\uff0c\u90fd\u53ef\u4ee5\u4f7f $z+ax$\uff08$a$ \u4e3a\u4efb\u610f\u6b63\u6574\u6570\uff09\u8fd9\u4e2a\u6570\u4e5f\u80fd\u88ab\u8868\u793a\uff08\u5373\u8fd9\u4e2a\u5269\u4f59\u7c7b\u4e2d\u6240\u6709\u5927\u4e8e\u7b49\u4e8e $z$ \u7684\u6574\u6570\u90fd\u53ef\u4ee5\u88ab\u8868\u793a\uff09\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u627e\u5230\u8fd9\u4e2a\u5269\u4f59\u7c7b\u4e2d\u6700\u5c0f\u7684\u6b63\u6574\u6570 $z$ \u90a3\u6211\u4eec\u4e0d\u5c31\u53ef\u4ee5\u627e\u5230\u6700\u5927\u7684\u4e0d\u53ef\u88ab\u8868\u793a\u7684\u6570\u4e86\u5417\uff1f**\n\n**\u56e0\u4e3a\u8fd9\u4e2a\u5269\u4f59\u7c7b\u4e2d\u6240\u6709\u5927\u4e8e\u7b49\u4e8e $z$ \u7684\u6574\u6570\u90fd\u53ef\u4ee5\u88ab\u8868\u793a\uff0c\u90a3\u4e48\u5e76\u4e14 $z$ \u672c\u8eab\u5c31\u662f\u6700\u5c0f\u7684\u53ef\u4ee5\u88ab\u8868\u793a\u7684\u6570\uff0c\u6240\u4ee5 $z-x$ \u4e3a\u6700\u5927\u4e0d\u53ef\u88ab\u8868\u793a\u7684\u6570\uff0c\u56e0\u4e3a\u5728\u53d6\u6a21 $x$ \u610f\u4e49\u4e0b\u7684\u6240\u6709\u5269\u4f59\u7c7b\u8986\u76d6\u6574\u4e2a\u6b63\u6574\u6570\u96c6\u5408\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u5bf9\u4e8e\u6bcf\u4e2a\u5269\u4f59\u7c7b\u4e2d\u6700\u5c0f\u7684\u53ef\u4ee5\u88ab\u8868\u793a\u7684\u6570 $z$ \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u80fd\u6c42\u5230\u6240\u6709\u5269\u4f59\u7c7b\u4e2d\u7684\u6700\u5927\u4e0d\u53ef\u88ab\u8868\u793a\u7684\u6570\uff0c\u7136\u540e\u5176\u4e2d\u80af\u5b9a\u6709\u6211\u4eec\u8981\u7684\u7b54\u6848\u3002**\n\n### \u601d\u8def\u7684\u53d1\u5c55\n\n \u4ee4 $ rm=y \\bmod  x,mc=y / x$ \u5f53 $b=1$ \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6240\u6709\u5927\u4e8e\u7b49\u4e8e $rm\\cdot x+c$ \u4e14\u53d6\u4f59 $x$ \u4e3a $c$ \u7684\u6570\u90fd\u53ef\u4ee5\u88ab\u8868\u793a\uff08\u5373\u6b64\u65f6\u6682\u65f6\u8ba4\u4e3a $rm\\cdot x+c$ \u4e3a\u8be5\u5269\u4f59\u7c7b\u4e2d\u6700\u5c0f\u53ef\u88ab\u8868\u793a\u7684\u6570\uff09\uff0c\u6b64\u65f6\u82e5\u60f3\u8981\u5f97\u5230\u5f97\u5230\u8fd9\u4e2a\u503c\uff0c\u6211\u4eec\u9700\u8981\u4ece $0$ \u5f00\u59cb\u52a0\u4e0a\u8868\u793a\u5927\u5c0f\u7684 $rm\\cdot x$ \u7136\u540e\u518d\u52a0\u4e0a\u8868\u793a\u54ea\u4e2a\u5269\u4f59\u7c7b\u7684 $mc$\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u6b64\u66f4\u65b0\u5269\u4f59\u7c7b $mc$ \u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u65f6\u5c31\u8981\u7528\u5230\u6700\u77ed\u8def\u7b97\u6cd5\u4e86\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u5269\u4f59\u7c7b\u5f53\u4f5c\u4e00\u4e2a\u8282\u70b9\uff0c\u7528\u8def\u5f84\u957f\u5ea6\u8868\u793a\u8be5\u5269\u4f59\u7c7b\u4e2d\u6700\u5c0f\u53ef\u88ab\u8868\u793a\u7684\u6570\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u662f\u8981\u6c42\u4ece\u6e90\u70b9 $0$ \u5230\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\u3002\n\n\u90a3\u4e48\u6362\u4e2a\u8868\u793a\u65b9\u6cd5\u8bb2\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 $dis_{mc}$ \u8868\u793a\u5728\u53d6\u6a21 $x$ \u610f\u4e49\u4e0b $mc$ \u7684\u5269\u4f59\u7c7b\uff0c\u5176\u5230\u6e90\u70b9\u7684\u8ddd\u79bb\u4e3a $rm$\uff08\u52a0\u4e0a\u4e86\u591a\u5c11\u4e2a $x$\uff09\u3002\n\n\u8fd9\u65f6\u5982\u679c\u8981\u901a\u8fc7\u8fd9\u4e2a $dis_{mc}$ \u6269\u5c55\u5230\u522b\u7684\u5730\u65b9\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u52a0\u4e0a\u53e6\u4e00\u4e2a\u53ef\u4ee5\u88ab\u8868\u793a\u7684\u6570\u6765\u8fdb\u884c\u8f6c\u79fb\uff0c\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a $dis_{mc}$ \u5176\u5b9e\u672c\u8d28\u4e0a\u90fd\u662f\u7531\u5e8f\u5217 $A$ \u4e2d\u7684\u5143\u7d20\u76f8\u52a0\u5f97\u5230\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u52a0\u4e0a $A$ \u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u8f6c\u79fb\uff08\u6ce8\u610f\u73b0\u5728\u5728\u8003\u8651\u53ea\u6709\u4e24\u4e2a\u5143\u7d20\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u76f4\u63a5\u7528 $y$ \u6765\u8868\u793a\u8fd9\u4e2a\u5143\u7d20\uff09\uff0c\u5047\u5982 $y=rm_{1}\\cdot x+mc_{1}$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u6269\u5c55\u65b9\u5f0f\uff1a\n$$dis_{(mc + mc_{1} ) \\mod x}=dis_{mc} + ( mc + mc_{1} )\\div x + rm_{1}$$\n\n _PS:\u6ce8\u610f\u8fd9\u91cc $( mc + mc_{1} )\\div x$ \u5bb9\u6613\u6f0f\u6389\uff0c\u56e0\u4e3a\u6ca1\u6709\u8003\u8651\u5230\u5728\u4f59\u6570\u76f8\u52a0\u65f6\u5927\u4e8e $x$ \u7684\u60c5\u51b5\u3002_ \n\n### \u6700\u7ec8\u89e3\u6cd5\n\n\u5176\u5b9e\u7ecf\u8fc7\u4e0a\u9762\u7684\u53d9\u8ff0\u540e\uff0c\u5728\u5143\u7d20\u6570\u91cf\u5927\u4e8e2\u7684\u60c5\u51b5\u4e5f\u5df2\u7ecf\u53ef\u89c1\u4e00\u6591\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u4e00\u4e2a\u4f5c\u4e3a\u6807\u51c6\u7684 $x$\uff0c\u7136\u540e\u7528\u5176\u4ed6\u5143\u7d20\u8fdb\u884c\u6269\u5c55\uff0c\u663e\u800c\u6613\u89c1\uff0c\u6211\u4eec\u7684\u56fe\u4e2d\u7684\u8282\u70b9\u6570\u662f\u4e3a $x-1$ \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f $x$ \u53d6\u5c3d\u91cf\u5c0f\u7684\u503c\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u51cf\u5c11\u65f6\u95f4\u590d\u6742\u5ea6 ~~\uff08\u5176\u5b9e\u6ca1\u6709\u51cf\u5c11\u591a\u5c11\uff09~~\u3002\n\n\u6211\u4eec\u7528 $rm_i$ \u8868\u793a\u7b2c\u67d0\u4e2a\u5176\u4ed6\u5143\u7d20\u9664\u4ee5 $x$ \u7684\u5546\uff0c\u5176\u4f59\u6570\u4e3a $i$\uff0c\u4e3a\u4e86\u8d2a\u70b9\u590d\u6742\u5ea6\uff0c\u8fd9\u91cc\u5e94\u5c3d\u91cf\u4f7f $rm_i$ \u6700\u5c0f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6bcf\u4e2a\u5143\u7d20\u9664\u4ee5 $x$ \u540e\u53d6\u6700\u5c0f\u503c\u5c31\u597d\u4e86\u3002\n\n\u90a3\u4e48\u4f9d\u636e\u4e0a\u6587\u8f6c\u79fb\u5c31\u5199\u6210\u4e86\uff1a\n\n$$dis_{(mc_{i}+mc_{j})\\mod x}=dis_{mc_{i}}+(mc_i+mc_j)\\div x+rm_j $$\n\n### \u5173\u4e8e-1\u7684\u60c5\u51b5\n- \u5b58\u5728\u53ef\u4ee5\u7528\u7684\u5355\u4f4d\u4e3a $1$ \u7684\u6805\u680f\n>\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u53ef\u4ee5\u7528\u7684\u6805\u680f\uff08\u53ef\u80fd\u662f\u88ab\u524a\u540e\u7684\uff09\u4e3a $1$ \u65f6\uff0c\u5373\u4e0d\u5b58\u5728\u4efb\u4f55\u4e0d\u80fd\u88ab\u8868\u793a\u7684\u6570\u65f6\uff0c\u8f93\u51fa $-1$\u3002\n\n- \u6240\u6709\u6570\u7684 $\\gcd$ \u4e0d\u4e3a $1$ \u65f6\uff0c\u8f93\u51fa $-1$\u3002\n>\u8fd9\u65f6\u6700\u5927\u503c\u53ef\u80fd\u65e0\u9650\u5927\uff0c\u5176\u5b9e\u8bc1\u6cd5\u633a\u7b80\u5355\u7684\uff0c\u5047\u5982\u6240\u6709\u6570\u7684 $\\gcd$ \u5927\u4e8e $1$\uff0c\u5e94\u4e3a\u6240\u6709\u53ef\u4ee5\u88ab\u8868\u793a\u7684\u6570\u4e00\u5b9a\u90fd\u4e3a $\\gcd$ \u7684\u500d\u6570\uff0c\u82e5 $\\gcd$ \u4e0d\u4e3a $1$\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bf4\u660e\u5b58\u5728\u65e0\u9650\u4e2a\u4e0d\u53ef\u88ab\u8868\u793a\u7684\u6570\uff08\u53ea\u8981\u6ee1\u8db3\u4e0d\u662f $\\gcd$ \u7684\u500d\u6570\u5c31\u884c\u4e86\uff09\uff0c\u6b64\u65f6\u4e5f\u4e0d\u53ef\u586b\u6ee1\u6240\u6709\u5269\u4f59\u7c7b\uff0c\u4e0d\u8fc7\u5176\u5b9e\u8fd9\u4e2a\u4e0d\u9700\u8981\u5728\u610f\uff0c\u56e0\u4e3a\u9898\u76ee\u8981\u6c42 $m>0$\uff0c\u6240\u4ee5\u4e00\u5b9a\u5b58\u5728\u4e24\u4e2a\u76f8\u90bb\u7684\u6b63\u6574\u6570\uff0c\u5b83\u4eec\u662f\u4e00\u5b9a\u4e92\u8d28\u7684\uff0c\u6b64\u65f6 $\\gcd$ \u4e3a $1$\u3002\n\n# Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define pii pair<int,int>\nint n, m, a[3001], dis[3001], rm[3001], mc[3001], cnt;\nbool vis[3001];\nint Min = 3001, ans;\npriority_queue<pii, vector<pii>, greater<pii> >q;\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t\tMin = min(Min, a[i]);\n\t}\n\t/*\u4ee5\u6700\u5c0f\u503c\u4e3a\u6807\u51c6*/\n\tMin -= m;\n\t/*\u5b58\u5728\u53ef\u7528\u6805\u680f\uff08\u53ef\u80fd\u662f\u88ab\u524a\u540e\u7684\uff09\u4e3a1\u65f6\uff0c\u8f93\u51fa-1*/\n\tif (Min <= 1)\n\t{\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\tfor (int i = 1; i < Min; i++) \n\t\tdis[i] = rm[i] = 3001;\n\t/*\u627e\u5230\u6700\u5c0f\u7684\u5269\u4f59\u7c7b\u6269\u5c55\u65b9\u5f0f\u6216\u8005\u662f\u56fe\u4e2d\u7684\u8fb9\u6743*/\n\tfor (int i = 1; i <= n; i++) \n\t\tfor (int j = 0; j <= m; j++)\n\t\t\trm[(a[i] - j) % Min] = min(rm[(a[i] - j) % Min], (a[i] - j) / Min);\n    /*\u627e\u5230\u5bf9\u4e8erm[i]\u7684\u6700\u5c0f\u7684\u5546*/\n\tfor (int i = 1; i < Min; i++)\n\t\tif (rm[i] != 3001) \n\t\t\tmc[++cnt] = i;\n\tq.push(make_pair(0,0));\t\n\twhile (!q.empty())\n\t{\n\t\tpii x = q.top();\n\t\tint k = x.second;\n\t\tq.pop();\n\t\tif (vis[k])continue;\n\t\tvis[k] = true;\n\t\tfor (int i = 1; i <= cnt; i++)\n\t\t\tif (dis[(mc[i] + k) % Min] > dis[k] + rm[mc[i]] + (mc[i] + k) / Min)\n\t\t\t{\n\t\t\t\t/*dis[(i+j)%x] = dis[i] + (i+j)/x + rm[j]*/\n\t\t\t\tdis[(mc[i] + k) % Min] = dis[k] + rm[mc[i]] + (mc[i] + k) / Min ;\n\t\t\t\tq.push(make_pair(dis[(mc[i] + k) % Min], (mc[i] + k) % Min));\n\t\t\t}\n\t}\n\tfor (int i = 1; i < Min; i++) \n\t{\n\t\t/*if (dis[i] == 3001) {\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t\t//\u5269\u4f59\u7c7b\u672a\u88ab\u586b\u6ee1\u65f6\n\t\t}\u56e0\u4e3aM>0\uff0c\u6240\u4ee5\u88ab\u4e88\u8003\u8651*/\n\t\tans = max(ans, (dis[i] - 1) * Min + i);\n\t}\n\tprintf(\"%d\", ans);\n\tfinish /(^v^)/\n\treturn 0;\n}\n\n\n```\n## \u5410\u69fd & \u603b\u7ed3\n\u8fd9\u4e2a\u9898\u76ee\u633a\u597d\u7684\uff0c\u4f46\u6570\u636e\u592a\u6c34\u4e86\uff0c\u6211\u5199\u7684\u65f6\u5019\u770b\u5230\u81ea\u5df1A\u4e869\u4e2a\u70b9\uff0c\u672c\u4ee5\u4e3a\u53ea\u662f\u4e00\u4e9b\u5c0f\u9519\u8bef\uff0c\u7ed3\u679c\u7adf\u7136\u662f\u5c06 pair \u7684\u4e24\u4e2a\u5173\u952e\u5b57\u5199\u53cd\u4e86\u3002 \n\n\u8fd9\u9053\u9898\u76ee\u4e3b\u8981\u8003\u5bdf\u5bf9\u6570\u5b57\u76f8\u52a0\u548c\u53d6\u6a21\u7684\u7406\u89e3\uff0c\u5176\u5b9e\u8003\u8651\u5230\u8fd9\u4e2a\u5176\u4ed6\u5c31\u8fce\u5203\u800c\u89e3\u4e86\uff0c\u662f\u4e00\u9053\u975e\u5e38\u597d\u7684\u9898\u76ee ~~\uff08\u8bcd\u7a77\uff09~~\u3002",
        "postTime": 1656559939,
        "uid": 310439,
        "name": "\u661f\u661f\u4e0e\u8fb0",
        "ccfLevel": 0,
        "title": "P2662\u9898\u89e3"
    },
    {
        "content": "\u8bb2\u4e00\u4e0b\u53ef\u884c\u6027DP\u7684\u505a\u6cd5\uff08\n\n\u9996\u5148\uff0c\u5148\u5224-1\uff0c\u5982\u679cgcd\u8d77\u6765\u4e0d\u7b49\u4e8e\u4e00\u6216\u8005\u6709\u4e2a\u6728\u68d2\u957f\u5ea6\u4e3a1\uff0c\u76f4\u63a5\u8f93\u51fa-1\uff08\u907f\u514d\u4e4b\u540e\u8ba1\u7b97\u9519\u8bef\uff09\u3002\n\n\u6709\u4e2a\u5c0f\u4f18\u5316\uff0c\u5982\u679c`m!=0`\u7684\u8bdd\uff0c\u56e0\u4e3agcd(x,x-1)=1\uff0cgcd\u80af\u5b9a\u4e3a1\uff0c\u76f4\u63a5\u8df3\u8fc7\u7b97gcd\u7684\u90e8\u5206~~\u8282\u7701\u51e0\u6beb\u79d2~~\u3002\n\n\u7136\u540e\uff0c\u901a\u8fc7[P3951 \u5c0f\u51ef\u7684\u7591\u60d1](https://www.luogu.org/problemnew/show/P3951)\u7684\u7ed3\u8bba\uff0c\u8bbe\u6700\u5c0f\u7684\u4e24\u6839\u6728\u68cd\u957f\u5ea6\u4e3a\u4e3aa,b\uff0c\u5219\u4ee4$limit=a\\times b-a-b$\u3002\u56e0\u4e3a\u6bd4limit\u5927\u7684\u957f\u5ea6\u80af\u5b9a\u80fd\u901a\u8fc7a\u548cb\u62fc\u51fa\u3002limit\u7684\u5927\u5c0f\u662f$\\Theta(li^2)$\u7ea7\u7684\u3002\n\n\u4e4b\u540e\u76f4\u63a5\u8dd1\u53ef\u884c\u6027DP\u3002\u4f46\u662f\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e2ali\u548c\u6bcf\u4e2am\u90fd\u679a\u4e3e\u4e00\u904d\u7684\u8bdd\uff0c\u6700\u591a\u80fd\u6709$\\Theta(nm\\times limit)$\u7684\u590d\u6742\u5ea6\uff0c\u4fdd\u4e0d\u51c6\u4f1a\u70b8\u3002\n\n\u89c2\u5bdf\u5230\u5bf9\u4e8e\u4e00\u4e2ali\u548c\u5f53\u524d\u626b\u63cf\u5230\u53ef\u884c\u7684\u4e00\u4e2aj\uff0c\u9700\u8981\u4fee\u6539`j+li-m`\u5230`j+li`\u4e00\u6bb5\u7684\u503c\u3002\u56e0\u4e3a\u662f\u8fde\u7eed\u7684\u533a\u95f4\u4fee\u6539\uff0c\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u5dee\u5206\u3002\u6240\u4ee5\uff0c\u53ef\u4ee5\u5c06DP\u6570\u7ec4\u5dee\u5206\uff0c\u6bcf\u6b21\u53ea\u9700\u8981\u679a\u4e3e`n`\uff0c\u56e0\u4e3a\u6bcf\u6b21\u66f4\u65b0\u90fd\u8981\u626b\u4e00\u904d\uff0c\u4e5f\u4e0d\u4f1a\u589e\u52a0\u683c\u5916\u8d1f\u62c5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230$\\Theta(n\\times limit)$\u3002\n\n\u7406\u8bba\u4e0a\u5f97\u5361\u5361\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u8dd1\u5f97\u633a\u5feb\uff0c\u5927\u6982\u5728100ms\u5de6\u53f3\u3002\n\n\u522b\u95ee\u6211bool\u6570\u7ec4\u600e\u4e48\u5dee\u5206\uff0c\u6211\u7528\u7684int\u3002\n\n\u9644\u73b0\u5728AC\uff0c\u4f46\u662f\u6570\u636e\u4e00\u52a0\u5f3a\u5c31\u5f97TLE\u4ee3\u7801\u3002\n\n```cpp\n#include <bitset>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nint gcd(int a,int b)\n{\n\treturn b?gcd(b,a%b):a;\n}\n\nint li[105];\nint cani[9000005];\n\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tscanf(\"%d\",li+i);\n\t}\n\t\n\tsort(li+1,li+1+n);\n\t\n\tif(li[1]-m <= 1)\n\t{\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\t\n\tif(!m)\n\t{\n\t\tint sgcd = li[1];\n\t\tfor(int i=2; i<=n; ++i)\n\t\t{\n\t\t\tsgcd = gcd(sgcd,li[i]);\n\t\t}\n\t\tif(sgcd != 1)\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\tint limit = m?(li[1]-m)*(li[1]-m+1)-(li[1]*2-m*2+1):li[1]*li[2]-li[1]-li[2];\n\t\n\tcani[0] = 1;\n\tcani[1] = -1;\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tint s = 0;\n\t\tfor(int j=0; j+li[i]-m<=limit; ++j)\n\t\t{\n\t\t\ts += cani[j];\n\t\t\tif(s)\n\t\t\t{\n\t\t\t\t++cani[j+li[i]-m];\n\t\t\t\t\n\t\t\t\tif(j+li[i]+1 <= limit)\n\t\t\t\t{\n\t\t\t\t\t--cani[j+li[i]+1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint s = 0;\n\tint ans = 0;\n\tfor(int i=0; i<=limit; ++i)\n\t{\n\t\ts += cani[i];\n\t\tif(!s)\n\t\t{\n\t\t\tans = i;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\",ans);\n}\n```\n\n\uff08\u66b4\u529b\u78be\u6807\u7b97\u7cfb\u5217\uff09",
        "postTime": 1563965687,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2662 \u3010\u725b\u573a\u56f4\u680f\u3011"
    },
    {
        "content": "#### \u89e3\u6790\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u80fd\u7528\u7684\u6570\u66b4\u529b\u8dd1\u51fa\u6765\uff0c\u590d\u6742\u5ea6 $O(NM)$\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\u7b2c\u4e00\u4e2a\u65e0\u89e3\u60c5\u51b5\uff1a\u5f53\u80fd\u7528\u7684\u6570\u51fa\u73b0 $1$ \u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u62fc\u51d1\u7684\u51fa\u4efb\u610f\u6b63\u6574\u6570\u3002\n\n\u5c06\u5176\u7279\u5224\u6389\uff0c\u6211\u4eec\u7ee7\u7eed\u3002\n\n\u8bbe\u6240\u6709\u80fd\u7528\u7684\u6570\u4e2a\u6570\u4e3a $n$\uff0c\u90a3\u4e48\u672c\u9898\u7684\u95ee\u9898\u5c31\u662f\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 $\\{a_n\\}$\uff0c\u6c42 $\\sum_{i=1}^na_ix_i$ \u6700\u5927\u4e0d\u80fd\u8868\u793a\u51fa\u7684\u6574\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528[**\u540c\u4f59\u6700\u77ed\u8def**](https://www.luogu.com.cn/blog/Izayoimiku9/tong-yu-zui-duan-lu)\u7684\u6280\u5de7\u6765\u6c42\u3002\n\n\u8bbe $base$ \u662f\u6211\u4eec\u89c4\u5b9a\u7684\u6a21\u6570\uff0c\u540c\u4f59\u6700\u77ed\u8def\u6c42\u51fa\u7684\u8ddd\u79bb $f[x]$ \u662f\u80fd\u62fc\u51d1\u51fa\u7684\u5728\u4ee5 $x$ \u4e3a\u4ee3\u8868\u5143\u7684\u5269\u4f59\u7c7b\u4e2d\u7684\u6700\u5c0f\u6570\u5b57\u3002\n\n\u90a3\u4e48 $f[x]-base$ \u5c31\u662f\u4e0d\u80fd\u62fc\u51d1\u51fa\u7684\u5728\u8be5\u5269\u4f59\u7c7b\u4e2d\u7684\u6700\u5927\u6570\u5b57\u3002\u904d\u5386\u6240\u6709\u5269\u4f59\u7c7b $[x]$ \uff0c\u53d6\u6700\u5927\u7684 $f[x]$ \u5373\u53ef\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u4f1a\u9047\u5230\u53e6\u4e00\u4e2a\u65e0\u89e3\u60c5\u51b5\uff0c\u53ef\u80fd\u6211\u4eec\u6839\u672c\u65e0\u6cd5\u62fc\u51fa\u67d0\u4e00\u4e2a\u5269\u4f59\u7c7b\u4e2d\u7684\u6570\u5b57\uff0c\u5373 $f[x]\\to \\infty$\u3002\n\n\u4ecd\u7136\u7279\u5224\u6389\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> PII;\n\nconst int N=4e5+10,INF=0x3f3f3f3f;\n\nint n,m;\nint arr[N],cnt=0;\nint base=INF;\n\nint head[N],ver[N<<1],nxt[N<<1],edg[N<<1],tot=0;\nvoid add(int x,int y,int z)\n{\n\tver[++tot]=y; edg[tot]=z; nxt[tot]=head[x]; head[x]=tot;\n}\nbool vis[N];\nint f[N];\npriority_queue<PII,vector<PII>,greater<PII> > q;\n\nvoid dijkstra()\n{\n\tmemset(f,0x3f,sizeof f);\n\tmemset(vis,0,sizeof vis);\n\tf[0]=0; q.push({0,0});\n\twhile(q.size())\n\t{\n\t\tint x=q.top().second;\n\t\tq.pop();\n\t\tif(vis[x]) continue;\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=nxt[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tif(f[y]>f[x]+edg[i])\n\t\t\t{\n\t\t\t\tf[y]=f[x]+edg[i];\n\t\t\t\tq.push({f[y],y});\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tcnt=n;\n\tfor(int i=1;i<=cnt;i++) scanf(\"%d\",&arr[i]),vis[arr[i]]=1,base=min(base,arr[i]);\n\tfor(int i=1;i<=n;i++)//\u66b4\u529b\u8dd1\u51fa\u6240\u6709\u80fd\u7528\u7684\u6570\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(arr[i]-j>0&&!vis[arr[i]-j]) arr[++cnt]=arr[i]-j,vis[arr[cnt]]=1,base=min(arr[cnt],base);\n\t\t\telse if(arr[i]-j<=0) break;\n\t}\n\tif(vis[1]) return 0&printf(\"-1\");//\u51fa\u73b0\u4e86 1\n\tfor(int i=0;i<base;i++)\n\t{\n\t\tfor(int j=1;j<=cnt;j++)\n\t\t\tadd(i,(i+arr[j])%base,arr[j]);\n\t}\n\tdijkstra();\n\tint ans=0;\n\tfor(int i=1;i<base;i++)\n\t{\n\t\tif(f[i]>=INF) return 0&printf(\"-1\");//\u8fd9\u4e2a\u5269\u4f59\u7c7b\u65e0\u6cd5\u88ab\u62fc\u51d1\u51fa\n\t\tans=max(ans,f[i]-base);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1620270150,
        "uid": 278259,
        "name": "RemiliaScarlet\u25ce",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2662 \u725b\u573a\u56f4\u680f"
    },
    {
        "content": "\u8fd9\u9898\u7684\u6570\u636e\u6c34\u5230\u4e0d\u53ef\u601d\u8bae\n=\n\u7eaf\u66b4\u529b\u578bdp\u5c31\u80fd\u8dd1\u8fc7\u3002\u3002\u3002\u800c\u4e14\u8dd1\u5f97\u98de\u5feb\n\n\n------------\n\u5177\u4f53\u600e\u4e48dp\u5462\uff1f\n\n\u6211\u4eec\u7528\u96c6\u5408s\u8bb0\u5f55\u53ef\u7528\u7684\u6728\u68cd\u957f\u5ea6\uff0c\u5e76\u8bbef[i]\u8868\u793a\u7528\u53ef\u80fd\u7684\u6728\u68cd\u662f\u5426\u80fd\u62fc\u51fa\u957f\u5ea6i\n\n\u90a3\u8f6c\u79fb\u65b9\u7a0b\u5c31\u5f88\u7b80\u5355\u4e86\uff1af[i]=f[i] || f[i-x]    (x\u5728s\u4e2d) \u8fb9\u754cf[0]=1\n\ndp\u5230\u54ea\u5462\uff1f\u53ea\u9700\u8981\u5230\u53ef\u9009\u6728\u68cd\u957f\u5ea6\u4e2d\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\u7684\u79ef\u5373\u53ef\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u5bf9\u4e8e\u6caa\u4e92\u8d28\u7684\u4e24\u4e2a\u957f\u5ea6a\u548cb\uff0c\u80fd\u6700\u5927\u62fc\u51fa\u7684\u957f\u5ea6\u4e3aa*b-a-b\u3002\u3002\u6211\u4e0d\u8bc1\u4e86\uff0c\u53ef\u81ea\u884c\u8df3\u8f6c2017\u63d0\u9ad8\u7ec4D1T1[\u5c0f\u51ef\u7684\u7591\u60d1](https://www.luogu.org/problem/P3951)\u8fdb\u884c\u7814\u7a76\u3002\u663e\u7136\uff0c\u6728\u68cd\u79cd\u7c7b\u53d8\u591a\u540e\uff0c\u7b54\u6848\u53ea\u4f1a\u53d8\u5c0f\n\n\u6728\u68cd\u7684\u79cd\u7c7b\u6570\u663e\u7136\u4e0d\u4f1a\u8d85\u8fc73000\uff08\u56e0\u4e3a\u6700\u957f\u624d3000\uff09\u53ef\u4ee5\u7528\u6876\u5904\u7406\u4e00\u4e0b\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#define LL long long\nusing namespace std;\n\nconst LL maxn=3000+10;\nLL u[maxn];\nLL f[maxn];\nLL a[maxn],cnt;\n\nint main()\n{\n\tLL n,m;\n\tcin>>n>>m;\n\tfor (LL i=1;i<=n;i++)\n\t{\n\t\tLL x;\n\t\tcin>>x;\n\t\tfor (LL j=0;j<=m;j++)\n\t\t{\n\t\t\tif (x>j) u[x-j]=1;\n\t\t}\n\t}\n\tfor (LL i=1;i<maxn;i++)\n\t{\n\t\tif (u[i]) a[++cnt]=i;\n\t}\n\tLL ans=-1;\n\tf[0]=1;\n\tfor (LL i=1;i<=a[1]*a[2];i++)\n\t{\n\t\tf[i%maxn]=0;\n\t\tfor (LL j=1;j<=cnt;j++)\n\t\t{\n\t\t\tif (a[j]>i) break;\n\t\t\tif (f[(i-a[j]+maxn)%maxn]) \n\t\t\t{\n\t\t\t\tf[i%maxn]=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!f[i%maxn]) ans=i;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6O(max(l)^3)(\u867d\u7136\u8dd1\u4e0d\u6ee1\uff0c\u4f46\u600e\u4e48\u770b\u90fd\u4f1a\u8d85\u65f6)\uff0c\u4e0a\u6587\u5206\u6790\u8fd8\u5b58\u5728~~\u6211\u61d2\u5f97\u77eb\u6b63\u7684~~\u903b\u8f91\u9519\u8bef\n\n\u4f46\u5b83\u5c31\u662f\u4ee5\u5e73\u5747\u4e00\u4e2a\u70b9**7ms**\u7684\u901f\u5ea6A\u4e86\n=\nqwq",
        "postTime": 1567662322,
        "uid": 86589,
        "name": "\u5e73\u8861\u6811\u68ee\u6797",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2662 \u3010\u725b\u573a\u56f4\u680f\u3011"
    },
    {
        "content": "# \u95ee\u9898\u7b80\u8ff0\n\n- [\u95ee\u9898\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2662)\u3002\n\n- \u9898\u9762\u7b80\u8ff0\uff1a\u7ed9\u5b9a $n$ \u4e2a\u6570\uff0c\u4ee5\u53ca\u4e00\u4e2a $m$ \u8868\u793a\u6bcf\u4e2a\u6570\u53ef\u4ee5\u51cf\u5c0f $1 \\sim m$ \u518d\u4f7f\u7528\uff0c\u6c42\u51fa\u6700\u5927\u7684\u65e0\u6cd5\u62fc\u51d1\u7684\u6570\u3002\u82e5\u65e0\u89e3\u8f93\u51fa $-1$\u3002\n\n# \u524d\u7f6e\u829d\u58eb\n\n- [\u8be6\u7ec6\u7684\u540c\u4f59\u6700\u77ed\u8def](https://www.luogu.com.cn/blog/zhoujinrui/tong-yu-zui-duan-lu)\u3002\n\n- \u8fd9\u91cc\u7b80\u5355\u5730\u8bb2\u4e00\u4e0b\u540c\u4f59\u6700\u77ed\u8def\uff1a\u4e00\u822c\u7528\u4e8e\u6c42\u89e3 $\\sum_{i=1}^na_ix_i=k$ \u4e2d $k$ \u7684\u53d6\u503c\u65b9\u6848\u6570\uff0c\u4e14 $k$ \u6709\u4e00\u5b9a\u4e0a\u7ebf\u7684\u95ee\u9898\u3002\n\n- \u63a5\u4e0b\u6765\u4ee5\u4e00\u4e2a\u95ee\u9898\u4e3a\u4f8b\uff1a\u5df2\u77e5 $x,y,z,h$\uff0c\u6c42\u4e0d\u5b9a\u65b9\u7a0b $ax+by+cz=k\\ (k<=h)$ \u4e2d $k$ \u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u53d6\u503c\u3002\n\n- \u4ee4 $f_i$ \u4e3a **\u6700\u5c0f\u7684**\u6a21 $x$ \u7b49\u4e8e $i$ \u7684\u6570\u3002\u8003\u8651\u8f6c\u79fb\n\t$$\\begin{cases}\n    f_{(i+y) \\operatorname{mod}x}=f_i+y\\\\\n    f_{(i+z) \\operatorname{mod}x}=f_i+z\n   \\end{cases}$$\n    \n- \u8fd9\u5f88\u50cf**\u5355\u6e90\u6700\u77ed\u8def**\uff1f\u4e8e\u662f\u6211\u4eec\u5c31\u7528\u5355\u6e90\u6700\u77ed\u8def\u6765\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\u3002\u6c42\u5f97\u8fd9\u4e2a $f$ \u6570\u7ec4\u540e\u4fbf\u53ef\u4ee5\u6839\u636e\u9898\u610f\u7075\u6d3b\u7684\u7b97\u51fa\u4e00\u4e9b\u7b54\u6848\u3002\n\n# \u95ee\u9898\u6c42\u89e3\n\n- \u6211\u4eec\u56de\u5230\u6b63\u9898\uff0c\u6211\u4eec\u540c\u6837\u8003\u8651\u540c\u4f59\u6700\u77ed\u8def\u6c42\u89e3\u95ee\u9898\u3002\n\n- \u5148\u66b4\u529b\u5efa\u8fb9\uff0c\u590d\u6742\u5ea6 $O(nm)$\u3002 \n\n- \u94a6\u5b9a $p=\\operatorname{min}\\{a\\}-m$\uff0c\u6211\u4eec\u4f9d\u7136\u4ee4 $f_i$ \u4e3a**\u6700\u5c0f\u7684**\u6a21 $p$ \u7b49\u4e8e $i$ \u7684\u6570\uff0c\u7528\u6700\u77ed\u8def\u8fdb\u884c\u5bf9 $f$ \u6570\u7ec4\u7684\u72b6\u6001\u8f6c\u79fb\u540e\u600e\u4e48\u8ba1\u7b97\u51fa\u7b54\u6848\uff1f\n\n- \u5148\u4e00\u4e2a\u4e2a\u8003\u8651\u5269\u4f59\u7cfb\u5f53\u4e2d\u7684\u60c5\u51b5\u3002\u5bf9\u4e8e $f_i$\uff0c\u5176\u542b\u4e49\u4e3a**\u6700\u5c0f\u7684**\u6a21 $p$ \u7b49\u4e8e $i$ \u7684\u6570\uff0c\u90a3\u4e48 $f_i-p$ \u65e2\u4e0e $f_i$ \u540c\u4f59\uff0c\u4e5f\u662f\u8be5\u5269\u4f59\u7c7b\u4e2d**\u6700\u5927**\u7684\u62fc\u51d1\u4e0d\u51fa\u6765\u7684\u6570\u3002\n\n- \u6211\u4eec\u6700\u540e\u6765\u679a\u4e3e**\u6240\u6709\u7684\u5269\u4f59\u7c7b**\uff0c\u7b54\u6848\u5373\u4e3a $\\operatorname{max}_{i=1}^{p-1}\\{f_i-p\\}$\u3002\n\n- \u8fd8\u6709\u4e00\u4e9b**\u65e0\u89e3**\u7684\u60c5\u51b5\uff1a\n\t1. \u6570\u5217\u4e2d\u6709 $1$\uff0c\u53ef\u4ee5\u51d1\u51fa\u4efb\u4f55\u6570\uff0c\u65e0\u89e3\u3002\n    1. \u65e0\u6cd5\u62fc\u51fa\u67d0\u4e2a\u5269\u4f59\u7c7b\uff0c\u90a3\u4e48 $f_i=\u221e$\uff0c\u65e0\u89e3\u3002\n\n# code\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAXN = 5e6 + 5;\nconst int INF=0x3f3f3f3f;\n\nint n, m;\nint p, ans, cnt;\nint hd[MAXN], dis[MAXN], a[MAXN];\nbool vis[MAXN];\n\nqueue <int> q;\n\nstruct edge{\n\tint nt, v, w;\n}e[MAXN];\n\nint read(){\n\tchar ch=getchar(); int res=0,w=1;\n\twhile(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {res=res*10+ch-'0';ch=getchar();}\n\treturn res*w;\n}\n\nvoid addedge(int u, int v, int w) {\n\te[++cnt].v = v; \n   \te[cnt].w = w;\n\te[cnt].nt = hd[u]; \n    hd[u] = cnt;\n}\n\nvoid Spfa(){\n    memset(dis, 0x3f, sizeof dis);\n    dis[0] = 0; q.push(0); vis[0] = 1;\n    while(!q.empty()) {\n        int u = q.front();\n        q.pop(); vis[u] = 0;\n        for(int i = hd[u]; i; i = e[i].nt) {\n            int v = e[i].v;\n            if(1LL * dis[u] + 1LL * e[i].w < dis[v]){\n                dis[v] = dis[u] + e[i].w;\n                if(!vis[v]){\n                    q.push(v);\n                    vis[v] = 1;\n                }\n            }\n        }\n    } \n}\n\nvoid init() {//\u5efa\u8fb9 \n\tfor(int i = 1; i <= n; ++i)  {//\u679a\u4e3e\u6bcf\u79cd\u6728\u6599 \n\t\tfor(int j = max(a[i - 1] + 1, a[i] - m); j <= a[i]; ++j) {//\u679a\u4e3e\u524a\u53bb\u7684\u65b9\u6848 \n\t\t\tif(j != p) {\n\t\t\t\tfor(int k = 0; k < p; ++k)\n\t\t\t\t\taddedge(k, (k + j) % p, j);//\u5047\u8bbe\u6240\u6709\u7684k\u70b9\u90fd\u80fd\u88ab\u5230\u8fbe\u5e76\u5efa\u8fb9\uff0c\u5982\u679ck\u65e0\u6cd5\u5230\u8fbe\u540e\u9762\u6709\u7279\u5224 \n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tn = read(), m = read();\n\tfor(int i = 1; i <= n; ++i) a[i] = read();\n\tsort(a + 1, a + 1 + n);\n\tp = max(1, a[1] - m);//\u6700\u5c0f\u503c\u6700\u4e3a\u53d6\u6a21\u7684\u6570\n\tif(p == 1) {\n\t\tputs(\"-1\");//\u67091\u5219\u65e0\u89e3 \n\t\treturn 0;\n\t}\n\tinit();//\u5efa\u8fb9\n\tSpfa();//\u72b6\u6001\u8f6c\u79fb\u7528Spfa\u5b9e\u73b0\n\tfor(int i = 0; i < p; ++i) {\n\t\tif(dis[i] >= INF) {//\u65e0\u6cd5\u51d1\u51fa\u8be5\u5269\u4f59\u7c7b\u5219\u65e0\u89e3\n\t\t\tputs(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t\tans = max(ans, dis[i] - p);//\u6bd4\u8f83\u7b54\u6848\n\t}\n\t\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n} \n```\n\n\n",
        "postTime": 1662273113,
        "uid": 597737,
        "name": "zhoujinrui",
        "ccfLevel": 0,
        "title": "P2662 \u725b\u573a\u56f4\u680f"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u540c\u4f59\u6700\u77ed\u8def\u7c7b\u578b\u7684\u9898\u3002\n\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u82e5\u5e72\u79cd\u6728\u68cd\u7684\u957f\u5ea6 $a$\uff0c\u6bcf\u79cd\u6728\u68cd\u6570\u91cf\u65e0\u9650\uff0c\u6bcf\u6839\u6728\u68cd\u53ef\u4ee5\u524a\u77ed $1\\sim m$ \u7684\u957f\u5ea6\u518d\u7528\uff0c\u7136\u540e\u95ee\u7528\u8fd9\u4e9b\u6728\u68cd\u4e0d\u80fd\u7ec4\u6210\u7684\u6700\u5927\u957f\u5ea6\u662f\u591a\u5c11\uff0c\u5982\u679c\u6240\u6709\u957f\u5ea6\u90fd\u80fd\u7ec4\u6210\u6216\u4e0d\u5b58\u5728\u8fd9\u4e2a\u6700\u5927\u957f\u5ea6\uff0c\u90a3\u4e48\u8f93\u51fa $-1$\u3002\n\n-----------\n\n# \u9898\u76ee\u5206\u6790\n\n\u4ec0\u4e48\u662f\u540c\u4f59\u6700\u77ed\u8def\u3002[link](https://www.luogu.com.cn/blog/430409/knowledge-tongyu-shortest-path)\n\n\u53d6 $minn$ \u4e3a $\\min\\{a\\}-m$\uff0c\u7136\u540e\u5c31\u662f\u5957\u8def\u3002\u4ee4 $dis[i]$ \u8868\u793a\u6a21 $minn$ \u4e0b\u7b49\u4e8e $i$ \u7684\u6700\u5c0f\u957f\u5ea6\uff0c\u4e00\u4e2a\u6728\u68cd\u53ef\u80fd\u53d8\u6210 $a[i]-m\\sim a[i]$ \u4e4b\u5185\u7684\u6240\u6709\u503c\uff0c\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u8fde\u8fb9\u3002\u8dd1\u6700\u77ed\u8def\u5c31\u597d\u4e86\u3002\n\n\u6700\u540e\u7b54\u6848\u5c31\u662f $\\max\\{dis[i]-m\\}$\u3002\u56e0\u4e3a $dis[i]$ \u5df2\u7ecf\u662f\u6700\u5c0f\u7684\u4e86\uff0c$dis[i]-m$ \u4e0e $dis[i]$ \u6a21 $minn$ \u610f\u4e49\u4e0b\u4f59\u6570\u76f8\u540c\uff0c\u82e5 $dis[i]-m$ \u4e5f\u6ee1\u8db3\u6761\u4ef6\u5219\u4e0e\u201c\u6700\u5c0f\u201d\u76f8\u6096\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n//2022/5/6\n#define _CRT_SECURE_NO_WARNINGS\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <queue>\n#include <utility>\n#define enter putchar(10)\n#define debug(c,que) std::cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) std::cout << arr[i] << w;\n#define speed_up() ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define Abs(x) ((x) > 0 ? (x) : (-x))\n#define stop return(0)\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\tif (x < 0) x += mod;\n\treturn x % mod;\n}\nnamespace Newstd {\n\tchar buf[1 << 21],*p1 = buf,*p2 = buf;\n\tinline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++;\n\t}\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getc();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline void write(int x) {\n\t\tif (x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif (x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\ntypedef std::pair<int,int> PII;\n\nconst int INF = 0x3f3f3f3f;\nconst int N = 1e6 + 5;\nstruct Gragh {\n\tint v,w,nxt;\n} gra[N << 1];\nint a[N],head[N],dis[N];\nbool vis[N]; \nint n,m,idx,minn;\ninline void add(int u,int v,int w) {\n\tgra[++ idx].v = v,gra[idx].w = w,gra[idx].nxt = head[u],head[u] = idx;\n}\ninline void dijkstra(int st) {\n\tmst(dis,0x3f),mst(vis,false);\n\tdis[st % minn] = 0;\n\tstd::priority_queue<PII,std::vector<PII>,std::greater<PII> >q;\n\tq.push(std::make_pair(dis[st % minn],st % minn));\n\twhile (!q.empty()) {\n\t\tint u = q.top().second;q.pop();\n\t\tif (vis[u]) continue;\n\t\tvis[u] = true;\n\t\tfor (register int i = head[u];i;i = gra[i].nxt) {\n\t\t\tint v = gra[i].v,w = gra[i].w;\n\t\t\tif (dis[v] > dis[u] + w) {\n\t\t\t\tdis[v] = dis[u] + w;\n\t\t\t\tq.push(std::make_pair(dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\ninline int query(int x) {\n\tint res = 0;\n\tfor (register int i = 0;i < x; ++ i) {\n\t\tif (dis[i] == INF) {\n\t\t\treturn -1;\n\t\t}\n\t\tres = std::max(res,dis[i] - x);\n\t}\n\treturn res;\n}\nint main(void) {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.txt\",\"r\",stdin);\n#endif\n\tn = read(),m = read();\n\tminn = INF;\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\ta[i] = read();\n\t\tminn = std::min(minn,a[i]);\n\t}\n\tminn = std::max(minn - m,1);\n\tif (minn == 1) return puts(\"-1\"),0;//\u957f\u5ea6\u4e3a 1,\u5219\u6240\u6709\u957f\u5ea6\u90fd\u53ef\u4ee5\u62fc\u51fa\u6765 \n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tfor (register int j = a[i] - m;j <= a[i]; ++ j) {\n\t\t\tif (j != minn) {\n\t\t\t\tfor (register int k = 0;k < minn; ++ k) {\n\t\t\t\t\tadd(k,(k + j) % minn,j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tdijkstra(0);\n\tprintf(\"%d\\n\",query(minn));\n\t\n\treturn 0;\n}\n```",
        "postTime": 1651827447,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "P2662 \u725b\u573a\u56f4\u680f"
    }
]