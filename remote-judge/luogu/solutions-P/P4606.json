[
    {
        "content": "\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\u7684\u65f6\u5019\u6211\u60ca\u4e86\n\n\u8fd9\u4e0d\u662f\u628a\u6211\u7684 [road](https://www.luogu.org/problemnew/show/P4320) \u7684\u8be2\u95ee\u70b9\u6570\u4ece\u4e24\u4e2a\u6539\u6210 $k$ \u4e2a\u5417\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u5199\u8fc7\u6211\u516c\u5f00\u8d5b\u7684\u8fd9\u4e2a\u9898\u4f60\u5c31\u53ef\u4ee5 SDOI2018 \u8003\u573a\u4e0a\u62ff\u5230\u81f3\u5c11 45 \u5206\u4e86\n\n\u6240\u4ee5\u8fd9\u7b97\u4e0d\u7b97\u6211\u62bc\u4e2d\u4e86 SDOI2018 \u7684\u9898\u76ee\u5440\n\n\u9996\u5148\u4f7f\u7528 Tarjan \u7b97\u6cd5\u5efa\u51fa\u5706\u65b9\u6811\uff0c\u7136\u540e\u7b54\u6848\u5c31\u662f \u5706\u65b9\u6811 \u4e0a\u5305\u542b\u6240\u6709\u5173\u952e\u70b9\u7684\u6700\u5c11\u70b9\u6570\u8054\u901a\u5757 \u7684\u5706\u70b9\u6570\u91cf \u51cf\u53bb \u5173\u952e\u70b9\u7684\u6570\u91cf\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u8bbe\u5706\u70b9\u7684\u6743\u503c\u8bbe\u4e3a 1 \uff0c\u65b9\u70b9\u7684\u6743\u503c\u4e3a 0 \uff0c\u5c06\u70b9\u6743\u653e\u5230\u8fd9\u4e2a\u70b9\u4e0e\u5176\u7236\u8282\u70b9\u7684\u8fb9\u4e0a\n\n\u641e\u51fa\u6811\u4e0a\u7684 DFS \u5e8f\uff0c\u5c06\u8be2\u95ee\u7684\u5173\u952e\u70b9\u6309\u7167 DFS \u5e8f\u6392\u5e8f\uff0c\u6c42\u51fa\u6392\u5e8f\u4e4b\u540e\u7684\u76f8\u90bb\u5173\u952e\u70b9\u5728\u6811\u4e0a\u8def\u5f84\u7684\u6743\u503c\u4e4b\u548c\u518d\u52a0\u4e0a\u6392\u5e8f\u4e4b\u540e\u7b2c\u4e00\u4e2a\u5173\u952e\u70b9\u4e0e\u6700\u540e\u4e00\u4e2a\u5173\u952e\u70b9\u5728\u6811\u4e0a\u7684\u8def\u5f84\u6743\u503c\u4e4b\u548c\uff0c\u5c06\u5176\u9664\u4ee5 2 \u5c31\u662f\u5706\u65b9\u6811\u4e0a\u5305\u542b\u6240\u6709\u5173\u952e\u70b9\u7684\u6700\u5c11\u70b9\u6570\u8054\u901a\u5757\u7684\u8fb9\u6743\u503c\u548c\uff0c\u8f6c\u5316\u4e3a\u70b9\u6743\u4e4b\u548c\u9700\u8981\u52a0\u4e0a\u8054\u901a\u5757\u6839\u8282\u70b9(\u4e5f\u5c31\u662f\u6392\u5e8f\u4e4b\u540e\u7b2c\u4e00\u4e2a\u5173\u952e\u70b9\u4e0e\u6700\u540e\u4e00\u4e2a\u5173\u952e\u70b9\u7684LCA)\u7684\u6743\u503c\uff0c\u6700\u540e\u51cf\u53bb\u5173\u952e\u70b9\u6570\u91cf\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6:$O(N\\log N)$\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\n\n#define DEBUG(args...) fprintf(stderr, args)\n\ntypedef long long LL;\n\n#define FOR(i, l, r) for(int i = (l), i##_end = (r); i <= i##_end; ++i)\n#define REP(i, l, r) for(int i = (l), i##_end = (r); i <  i##_end; ++i)\n#define DFR(i, l, r) for(int i = (l), i##_end = (r); i >= i##_end; --i)\n#define DRP(i, l, r) for(int i = (l), i##_end = (r); i >  i##_end; --i)\n\ntemplate<class T>T Min(const T &a, const T &b) {return a < b ? a : b;}\ntemplate<class T>T Max(const T &a, const T &b) {return a > b ? a : b;}\ntemplate<class T>bool Chkmin(T &a, const T &b) {return a > b ? a = b, 1 : 0;}\ntemplate<class T>bool Chkmax(T &a, const T &b) {return a < b ? a = b, 1 : 0;}\n\nclass fast_input {\nprivate:\n\tstatic const int SIZE = 1 << 15 | 1;\n\tchar buf[SIZE], *front, *back;\n\n\tvoid Next(char &c) {\n\t    if(front == back) back = (front = buf) + fread(buf, 1, SIZE, stdin);\n\t\tc = front == back ? (char)EOF : *front++;\n\t}\n\npublic :\n\ttemplate<class T>void operator () (T &x) {\n\t\tchar c, f = 1;\n\t\tfor(Next(c); !isdigit(c); Next(c)) if(c == '-') f = -1;\n\t\tfor(x = 0; isdigit(c); Next(c)) x = x * 10 + c - '0';\n\t\tx *= f;\n\t}\n\tvoid operator () (char &c, char l = 'a', char r = 'z') {\n\t\tfor(Next(c); c > r || c < l; Next(c)) ;\n\t}\n}input;\n\nconst int SN = 200000 + 47;\nconst int LOGN = 18;\nconst int INF = 0x3f3f3f3f;\n\nstd::vector<int> graph[SN], tree[SN];\nint low[SN], dfn[SN], rank, vis[SN], stack[SN], *top;\nint f[SN][LOGN], deep[SN], dis[SN], cp, kp[SN], ckp;\nint n;\n\nvoid Clear();\nvoid Tarjan(int, int);\nvoid DFS(int);\nint LCA(int, int);\nint Dis(int, int);\n\nint main() {\n\n#ifdef Cai\n\tfreopen(\"s.in\", \"r\", stdin);\n#endif\n\n\tint x, y, z, m, cases, q;\n\n\tinput(cases);\n\twhile(cases--) {\n\t\tClear(), input(n), input(m), cp = n;\n\t\tFOR(i, 1, m) {\n\t\t\tinput(x), input(y);\n\t\t\tgraph[x].push_back(y);\n\t\t\tgraph[y].push_back(x);\n\t\t}\n\t\tTarjan(1, -1);\n\t\tdeep[1] = 0, dis[1] = 0, rank = 0, DFS(1);\n\t\tinput(q);\n\t\twhile(q--) {\n\t\t\tinput(ckp);\n\t\t\tREP(i, 0, ckp) input(kp[i]);\n\t\t\tstd::sort(kp, kp + ckp, [](int x, int y) {return dfn[x] < dfn[y];});\n\t\t\tx = 0, kp[ckp] = kp[0];\n\t\t\tREP(i, 0, ckp) x += Dis(kp[i], kp[i + 1]);\n\t\t\tprintf(\"%d\\n\", x / 2 - ckp + (LCA(kp[0], kp[ckp - 1]) <= n));\n\t\t}\n\t}\n\n\treturn 0;\n\n}\n\nvoid Clear() {\n\ttop = stack, rank = 0;\n\tFOR(i, 1, n) graph[i].clear();\n\tFOR(i, 1, cp) tree[i].clear(), dfn[i] = 0;\n}\n\nvoid Tarjan(int x, int y) {\n\tdfn[x] = low[x] = ++rank, vis[x] = 1, *++top = x;\n\tfor(auto v : graph[x]) {\n\t\tif(v == y || dfn[v] > dfn[x]) continue;\n\t\tif(!dfn[v]) Tarjan(v, x), Chkmin(low[x], low[v]);\n\t\telse if(vis[v]) {Chkmin(low[x], dfn[v]); continue;}\n\t\tif(low[v] == dfn[x]) {\n\t\t\t++cp, tree[x].push_back(cp);\n\t\t\twhile(*top != v) vis[*top] = 0, tree[cp].push_back(*top), --top;\n\t\t\ttree[cp].push_back(v), vis[v] = 0, --top;\n\t\t}\n\t\telse if(low[v] > dfn[x])\n\t\t\ttree[x].push_back(v), --top, vis[v] = 0;\n\t}\n}\n\nvoid DFS(int x) {\n\tdfn[x] = ++rank;\n\tfor(auto v : tree[x]) {\n\t\tdeep[v] = deep[x] + 1, dis[v] = dis[x] + (v <= n), f[v][0] = x;\n\t\tREP(i, 1, LOGN) f[v][i] = f[f[v][i - 1]][i - 1];\n\t\tDFS(v);\n\t}\n}\n\nint LCA(int x, int y) {\n\tif(deep[x] < deep[y]) std::swap(x, y);\n\tfor(int d = deep[x] - deep[y], i = 0; i < LOGN; ++i)\n\t\tif(d >> i & 1)\n\t\t\tx = f[x][i];\n\tif(x == y) return x;\n\tDFR(i, LOGN - 1, 0) if(f[x][i] != f[y][i]) x = f[x][i], y = f[y][i];\n\treturn f[x][0];\n}\n\nint Dis(int x, int y) {\n\tint t = LCA(x, y);\n\treturn dis[x] + dis[y] - 2 * dis[t];\n}\n\n```",
        "postTime": 1526473051,
        "uid": 21784,
        "name": "Caii",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4606 \u3010[SDOI2018]\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\u5706\u65b9\u6811\u4e0a\u5706\u65b9\u679c\uff0c\n\n\u5706\u65b9\u6811\u4e0b\u4f60\u548c\u6211\u3002\n\n\u5706\u65b9\u6811\u524d\u5efa\u865a\u6811\uff0c\n\n\u6b22\u4e50\u591a\u53c8\u591a\u3002\n\n(/huaji)\n\n\u7ee7apio2018\u4e4b\u540e\uff0c\u5706\u65b9\u6811\u518d\u73b0\u6c5f\u6e56\uff01\n\n\u8fd9\u91cc\u7ed9\u4e0d\u4f1a\u5706\u65b9\u6811\u7684\u7ae5\u978b\u666e\u53ca\u4e00\u4e0b\u8fd9\u79cd\u4eca\u5e74wc\u4e0a\u7684\u65b0(hei)\u79d1\u6280\uff1a\n\n\u5148\u5bf9\u4e00\u5f20\u65e0\u5411\u56fe\u8fdb\u884ctarjan\u6c42\u70b9\u53cc\u3002\n\n~~\u4ec0\u4e48\u4f60\u8bf4\u4f60\u4e0d\u4f1atarjan\u6c42\u70b9\u53cc\uff1f\u51fa\u95e8\u53f3\u8f6c\u767e\u5ea6\u4e00\u4e0b\u3002~~\n\n\u4e4b\u540e\u5c06\u539f\u56fe\u4e2d\u7684\u70b9\u770b\u505a\u5706\u70b9\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u53cc\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\u770b\u505a\u65b9\u70b9\u3002\n\n\u7136\u540e\u91cd\u65b0\u5efa\u56fe\uff1a\u5982\u679c\u4e00\u4e2a\u70b9\u5728\u67d0\u4e2a\u70b9\u53cc\u91cc\uff0c\u5c31\u5c06\u5176\u5bf9\u5e94\u7684\u70b9\u8fde\u8fb9\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\u6700\u540e\u5f97\u5230\u7684\u4e00\u5b9a\u662f\u4e00\u68f5\u6811\uff08\u5982\u679c\u539f\u56fe\u4e0d\u8fde\u901a\u5c31\u4f1a\u5f97\u5230\u68ee\u6797\uff09\u3002\n\n\u4e3a\u4ec0\u4e48\u662f\u68f5\u6811\u5462\uff1f\u9996\u5148\u5982\u679c\u539f\u56fe\u8fde\u901a\uff0c\u5982\u6b64\u64cd\u4f5c\u540e\u7684\u56fe\u4e5f\u4e00\u5b9a\u8fde\u901a\uff08\u5bb9\u6613\u770b\u51fa\u64cd\u4f5c\u4e0d\u4f1a\u6539\u53d8\u4e24\u70b9\u4e4b\u95f4\u7684\u8fde\u901a\u5173\u7cfb\uff09\uff1b\u5176\u6b21\u5982\u679c\u65b0\u56fe\u4e0a\u6709\u73af\uff0c\u5c31\u53ef\u4ee5\u628a\u5b83\u7f29\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u70b9\u53cc\u3002\n\n\u8fd9\u68f5\u6811\u6709\u4ec0\u4e48\u6027\u8d28\u5462\uff1f\n\n1\u3001\u6811\u4e0a\u7684\u6bcf\u4e00\u6761\u8fb9\u90fd\u8fde\u63a5\u4e861\u4e2a\u5706\u70b9\u548c1\u4e2a\u65b9\u70b9\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u5706\u70b9\u90fd\u4e0e\u5176\u6240\u5728\u7684\u7684\u70b9\u53cc\u6709\u8fb9\u76f8\u8fde\uff0c\u6bcf\u4e2a\u65b9\u70b9\u90fd\u4e0e\u8fd9\u4e2a\u70b9\u53cc\u4e2d\u5305\u542b\u7684\u70b9\u76f8\u8fde\u3002\n\n\u8fd9\u91cc\u8865\u5145\u4e00\u4e0b\uff1a\u6211\u4eec\u5c06\u201c\u70b9\u53cc\u201d\u5b9a\u4e49\u4e3a\u201c\u5c06\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u5220\u53bb\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u4f9d\u7136\u8fde\u901a\u201d\uff0c\u8fd9\u6837\u5b9a\u4e49\u7684\u597d\u5904\u662f\u5bf9\u4e8e2\u4e2a\u70b91\u6761\u8fb9\u7684\u60c5\u51b5\u6211\u4eec\u4e5f\u5c06\u5176\u89c6\u4f5c\u4e00\u4e2a\u70b9\u53cc\uff0c\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u7684\u8ba8\u8bba\u3002\uff08\u636e\u8bf4\u4e0d\u8fd9\u4e48\u5b9a\u4e49\u53ef\u80fd\u4f1a\u51fa\u73b0\u5706\u70b9\u4e0e\u5706\u70b9\u7684\u8fde\u8fb9\u2026\u2026\u745f\u745f\u53d1\u6296\uff09\n\n2\u3001\u5bf9\u4e8e\u6240\u6709\u7684\u5272\u70b9\uff08\u5b9a\u4e49\u4e3a\u5220\u53bb\u540e\u4f7f\u5f97\u56fe\u4e0d\u8fde\u901a\u7684\u70b9\uff09\uff0c\u5728\u56fe\u4e2d\u90fd\u6709\u81f3\u5c112\u6761\u51fa\u8fb9\uff08\u5bf9\u5e94\u56fe\u4e2d\u7684\u5272\u70b9\u81f3\u5c11\u57282\u4e2a\u70b9\u53cc\u5185\uff09\uff1b\u800c\u975e\u5272\u70b9\u53ea\u4f1a\u67091\u6761\u51fa\u8fb9\u3002\n\n3\u3001\u4e00\u6761\uff08\u4ece\u5706\u70b9\u5230\u5706\u70b9\u7684\uff09\u6811\u4e0a\u7b80\u5355\u8def\u5f84\u4ee3\u8868\u4ec0\u4e48\uff1f\n\n\u4ee3\u8868\u539f\u56fe\u4e2d\u7684\u4e00\u5806\u8def\u5f84\uff0c\u5176\u4e2d\uff1a\u6240\u6709\u7ecf\u8fc7\u7684\u5272\u70b9\uff08\u6811\u4e0a\u7684\u5706\u70b9\uff09\u90fd\u662f\u5fc5\u7ecf\u7684\uff0c\u800c\u5728\u70b9\u53cc\u5185\uff08\u6811\u4e0a\u7684\u65b9\u70b9\uff09\u53ef\u4ee5\u968f\u4fbf\u8d70\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff1a\u539f\u56fe\u4e2d\u4e24\u70b9\u7b80\u5355\u8def\u5f84\u7684\u5e76\uff01\n\n\u8fd9\u6837\u4e00\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5706\u65b9\u6811\u5904\u7406\u5f88\u591a\u56fe\u4e0a\u8def\u5f84\u95ee\u9898\uff0c\u4f8b\u5982\u53ea\u9700\u8981\u5728\u65b9\u70b9\u5904\u7ef4\u62a4\u70b9\u53cc\u5185\u6240\u6709\u70b9\u7684\u4fe1\u606f\u5c31\u53ef\u4ee5\u5904\u7406\u56fe\u4e0a\u7b80\u5355\u8def\u5f84\u7684\u5e76\u7684\u76f8\u5173\u95ee\u9898\u3002\n\n~~\u8fd9\u6837\u4e00\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5f88\u591a\u6811\u4e0a\u8def\u5f84\u95ee\u9898\u5f3a\u884c\u4e0a\u56fe\u3002~~\n\n~~\u4ee5\u53ca\u8bb8\u591a\u5e8f\u5217\u7ef4\u62a4\u533a\u95f4\u4fe1\u606f\u7684\u95ee\u9898\uff0c\u539f\u5148\u53ea\u662f\u4e0a\u6811\uff0c\u73b0\u5728\u53ef\u4ee5\u4e0a\u56fe\u4e86\uff01~~\n\n\u800c\u4e14\u8fd9\u4e2a\u4e1c\u897f\u7684\u5b9e\u73b0\u96be\u5ea6\u548c\u4ee3\u7801\u590d\u6742\u5ea6\u5e76\u4e0d\u5927\uff0c~~\u8bf4\u4e0d\u5b9a\u54ea\u5929\u53d8\u6210noip\u57fa\u7840\u7b97\u6cd5\u5462\u2026\u2026\u9003~~\n\n\u56de\u5230\u8fd9\u9053\u9898\uff1a\n\n\u9996\u5148\u8003\u8651\u5220\u6389\u54ea\u4e9b\u70b9\u624d\u80fd\u4f7f\u5f97\u56fe\u4e0a\u539f\u672c\u8fde\u901a\u7684\u4e24\u70b9\u53d8\u4e3a\u4e0d\u8fde\u901a\u3002\n\n\u663e\u7136\u662f\u4e24\u70b9\u7684\u7b80\u5355\u8def\u5f84\u4e2d\u5fc5\u7ecf\u7684\u5272\u70b9\u3002\n\n\u800c\u8fd9\u5728\u5706\u65b9\u6811\u4e0a\u5bf9\u5e94\u7684\u5c31\u662f\u4e24\u70b9\u8def\u5f84\u4e0a\u7684\u5706\u70b9\u3002\n\n\u5bf9\u4e8e\u591a\u4e2a\u8d77\u70b9\u8981\u6c42\u5b58\u5728\u4e00\u5bf9\u4e0d\u8fde\u901a\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u8be2\u95ee\u70b9\u6570\u7684\u603b\u6570\u662fO(n)\u7ea7\u522b\uff0c\u5bb9\u6613\u60f3\u5230\u865a\u6811\u3002\n\n\u5c06\u6bcf\u6b21\u7684\u8be2\u95ee\u70b9\u62ce\u51fa\u6765\u5efa\u865a\u6811\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u865a\u6811\u4e0a\u6240\u6709\u662f\u975e\u8be2\u95ee\u70b9\u7684\u5706\u70b9\uff08\u5305\u62ec\u5efa\u865a\u6811\u9700\u8981\u7528\u5230\u7684\u5173\u952e\u70b9\u548c\u865a\u6811\u7684\u8fb9\u4e0a\u7ecf\u8fc7\u7684\u90a3\u4e9b\u975e\u5173\u952e\u70b9\uff09\u90fd\u662f\u5408\u6cd5\u7684\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u8981\u6bcf\u6b21\u7edf\u8ba1\u865a\u6811\u4e0a\u7684\u70b9\u6570\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u53ea\u6709\u5efa\u865a\u6811\u76841\u4e2alog\u3002\n\n\u987a\u4fbf\u8bf4\u4e00\u53e5\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7f51\u4e0a\u7684tarjan\u6c42\u70b9\u53cc\u90fd\u662f\u5c06\u8fb9\u5165\u6808\u2026\u2026\u6211\u4e00\u76f4\u5199\u7684\u662f\u70b9\u5165\u6808\u4e5f\u4e00\u76f4\u6ca1\u51fa\u8fc7\u9505\u2026\u2026\uff08\u53ef\u80fd\u6709\u4e00\u4e9b\u5947\u5999\u7684\u5904\u7406\u4fdd\u8bc1\u4e86\u6b63\u786e\u6027\uff1f\uff09\n\n\u518d\u4ee5\u53ca\uff0c\u4e3a\u4e86\u533a\u5206\u5f00\u6811\u8fb9\u548c\u56fe\u8fb9\u663e\u5f97\u4e0d\u90a3\u4e48\u4e71\uff0c\u8fd9\u91cc\u7528\u7684\u662f\u5b69\u5b50\u94fe\u8868\u5b58\u6811\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<ctime>\n#include<vector>\nusing namespace std;\n#define li long long\n#define gc getchar()\n#define pc putchar\nli read(){\n\tli x = 0;\n\tint y = 0,c = gc;\n\twhile(!isdigit(c)){\n\t\ty = c;\n\t\tc = gc;\n\t}\n\twhile(isdigit(c)){\n\t\tx = (x << 1) + (x << 3) + (c ^ '0');\n\t\tc = gc;\n\t}\n\treturn y == '-' ? -x : x;\n}\nvoid print(li q){\n\tif(q < 0){\n\t\tpc('-');\n\t\tq = -q;\n\t}\n\tif(q >= 10) print(q / 10);\n\tpc(q % 10 + '0');\n}\nint t,n,m,p,s,a[200010],sl;\nint lgb[200010];\nstruct edge{\n\tint to,nxt;\n}e[500010];\nint cnt,fir[100010];\ninline void ins(int u,int v){\n\te[++cnt].to = v;e[cnt].nxt = fir[u];fir[u] = cnt;\n\te[++cnt].to = u;e[cnt].nxt = fir[v];fir[v] = cnt;\n}\nint st[200010],ft;\nint low[100010],dfn[100010],nw,tot,dfsnw;\nint fa[200010],fsts[200010],nxt[200010];\nvoid tar(int q,int lst){//\u6c42\u70b9\u53cc\n\tdfn[q] = low[q] = ++nw;\n\tst[++ft] = q;\n\tfor(int i = fir[q];i;i = e[i].nxt){\n\t\tint j = e[i].to;\n\t\tif(j == lst) continue;\n\t\tif(dfn[j]) low[q] = min(low[q],dfn[j]);\n\t\telse{\n\t\t\ttar(j,q);\n\t\t\tif(low[j] >= dfn[q]){\n\t\t\t\tfa[++tot] = q;\n\t\t\t\tnxt[tot] = fsts[q];\n\t\t\t\tfsts[q] = tot;//\u8fd9\u91cc\u662f\u5b69\u5b50\u94fe\u8868\u5b58\u6811\n\t\t\t\tint l;\n\t\t\t\tdo{\n\t\t\t\t\tl = st[ft--];\n\t\t\t\t\tfa[l] = tot;\n\t\t\t\t\tnxt[l] = fsts[tot];\n\t\t\t\t\tfsts[tot] = l;\n\t\t\t\t}while(l != j);\n\t\t\t}\n\t\t\tlow[q] = min(low[q],low[j]);\n\t\t}\n\t}\n}\n//\u6ca1\u9519\u5706\u65b9\u6811\u5728\u6c42\u70b9\u53cc\u7684\u8fc7\u7a0b\u4e2d\u5c31\u987a\u624b\u6784\u5efa\u597d\u4e86\uff0c\u6240\u4ee5\u6211\u8bf4\u96be\u5ea6\u5e76\u4e0d\u5927\uff08\u9003\uff09\n//\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u4e9b\u6811\u4e0a\u5e38\u89c4\u64cd\u4f5c\nint len[200010],dpt[200010];//\u8fd9\u4e2alen\u662f\u6839\u5230\u67d0\u4e2a\u70b9\u7684\u8def\u5f84\u4e0a\u5706\u70b9\u7684\u4e2a\u6570\uff0c\u7528\u6765\u6700\u7ec8\u8ba1\u7b97\u7b54\u6848\nint stb[18][200010];\nint dfsx[200010],wz[200010],ed[200010];\nvoid dfs(int q){\n\tdfsx[++dfsnw] = q;\n\twz[q] = dfsnw;\n\tlen[q] = len[fa[q]] + (q <= n);\n\tfor(int i = fsts[q];i;i = nxt[i]){\n\t\tdpt[i] = dpt[q] + 1;\n\t\tstb[0][i] = q;\n\t\tdfs(i);\n\t} \n\ted[q] = dfsnw;\n}\ninline bool isfa(int u,int v){\n\treturn wz[u] < wz[v] && ed[u] >= ed[v];\n}\ninline void buildst(){\n\tregister int i,j;\n\tfor(i = 1;i <= 17;++i){\n\t\tfor(j = 1;j <= n;++j) stb[i][j] = stb[i - 1][stb[i - 1][j]];\n\t}\n}\nint lca(int u,int v){\n\tif(dpt[u] < dpt[v]) swap(u,v);\n\tint i = 0,j = dpt[u] - dpt[v];\n\twhile(j){\n\t\tif(j & 1) u = stb[i][u];\n\t\tj >>= 1;\n\t\t++i;\n\t}\n\tif(u == v) return u;\n\tfor(i = lgb[dpt[v]];i >= 0;--i){\n\t\tif(stb[i][u] == stb[i][v]) continue;\n\t\tu = stb[i][u];\n\t\tv = stb[i][v];\n\t}\n\treturn fa[u];\n}\nvoid init(){\n\ttot = n;\n\tft = 0;\n\ttar(1,0);\n\tdfs(1);\n\tbuildst();\n}\nbool cmp(int q,int w){\n\treturn wz[q] < wz[w];\n}\nbool vst[200010];\nint st2[200010],ft2;\nint main(){\n\t//freopen(\"game.in\",\"r\",stdin);\n\t//freopen(\"game.out\",\"w\",stdout);\n\tint i,j,u,v,ans;\n\tfor(i = 2;i <= 200000;++i) lgb[i] = lgb[i >> 1] + 1;\n\tt = read();\n\twhile(t--){\n\t\tcnt = 0;\n\t\tmemset(fir,0,sizeof(fir));\n\t\tmemset(fa,0,sizeof(fa));\n\t\tmemset(fsts,0,sizeof(fsts));\n\t\tmemset(nxt,0,sizeof(nxt));\n\t\tmemset(dfn,0,sizeof(dfn));\n\t\tmemset(low,0,sizeof(low));\n\t\tmemset(wz,0,sizeof(wz));\n\t\tnw = tot = dfsnw = 0;\n\t\tn = read();\n\t\tm = read();\n\t\tfor(i = 1;i <= m;++i){\n\t\t\tu = read();\n\t\t\tv = read();\n\t\t\tins(u,v);\n\t\t}\n\t\tinit();\n\t\tp = read();\n\t\twhile(p--){\n\t\t\ts = read();\n\t\t\tfor(i = 1;i <= s;++i){\n\t\t\t\ta[i] = read();\n\t\t\t\tvst[a[i]] = 1;\n\t\t\t} \n            //\u4ee5\u4e0b\u662f\u6784\u5efa\u865a\u6811\u7684\u90e8\u5206\n\t\t\tsort(a + 1,a + s + 1,cmp);\n\t\t\tsl = s;\n\t\t\tfor(i = 1;i < s;++i){\n\t\t\t\tj = lca(a[i],a[i + 1]);\n\t\t\t\tif(!vst[j]){\n\t\t\t\t\ta[++sl] = j;\n\t\t\t\t\tvst[j] = 1;\n\t\t\t\t} \n\t\t\t}\n\t\t\tsort(a + 1,a + sl + 1,cmp);\n\t\t\tft2 = 0;\n\t\t\tans = 0;\n\t\t\tst2[0] = fa[a[1]];//\u4fbf\u4e8e\u628a\u865a\u6811\u7684\u6839\u7b97\u8fdb\u7b54\u6848\n\t\t\tfor(i = 1;i <= sl;++i){\n\t\t\t\tj = a[i];\n\t\t\t\twhile(ft2 && !isfa(st2[ft2],j)) --ft2;\n\t\t\t\tu = st2[ft2];\n\t\t\t\tans += len[j] - len[u];\n\t\t\t\tst2[++ft2] = j;\n\t\t\t}\n\t\t\tprint(ans - s);//\u522b\u5fd8\u4e86\u628a\u8be2\u95ee\u70b9\u51cf\u6389\n\t\t\tpc('\\n');\n\t\t\tfor(i = 1;i <= sl;++i) vst[a[i]] = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n//We_cannot_live_without_our_red_sun_Claris\n//2018nian5yue15riday1\n```",
        "postTime": 1526517056,
        "uid": 45775,
        "name": "liuzhangfeiabc",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4606 \u3010[SDOI2018]\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "[\u5230\u6211\u7684blog\u4e2d\u67e5\u770b](https://www.cnblogs.com/suxxsfe/p/12780859.html)  \n\n[P4606 [SDOI2018]\u6218\u7565\u6e38\u620f](https://www.luogu.com.cn/problem/P4606)\uff1a\u5e7f\u4e49\u5706\u65b9\u6811  \n\u5176\u5b9e\u4f1a\u4e86\u5706\u65b9\u6811\u5c31\u4e0d\u96be\uff0c\u8fbe\u4e0d\u5230\u9ed1\uff0c\u6700\u591a\u7b97\u4e2a\u7d2b  \n\u90a3\u4e2a\u8f6c\u6362\u5230\u5706\u65b9\u6811\u4e0a\u4ee5\u540e\u7684\u5904\u7406\u65b9\u6cd5\uff0c\u753b\u753b\u56fe\u5c31\u80fd\u770b\u51fa\u6765\uff0c\u6240\u4ee5\u505a\u56fe\u8bba\u9898\u4e00\u5b9a\u8981\u591a\u753b\u56fe\uff0c\u5e76\u628a\u56fe\u753b\u6e05\u695a\u70b9\u554a\uff01\uff01  \n\n~~\u4f46\u6211\u600e\u4e48\u4ece9\u70b9\u4e00\u76f4\u8c03\u5230\u4e0b\u53484\u70b9\u554a\u554a\u554a\u554a\u554a~~  \n\u53cc\u500d\u7ecf\u9a8c\uff1a[P4320 \u9053\u8def\u76f8\u9047](https://www.luogu.com.cn/problem/P4320)\uff0c~~\u4f46\u662f\u88ab\u5361\u5e38\u4e86\u5e76\u6ca1\u6709\u8fc7~~  \n\n\u7ed9\u51fa\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u548c $q$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u51fa $s$ \u4e2a\u70b9\uff0c\u95ee\u5b58\u5728\u51e0\u4e2a\u70b9\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u70b9\u548c\u4ed6\u76f8\u8fde\u7684\u8fb9\u88ab\u53bb\u9664\u540e\uff0c\u8fd9 $s$ \u4e2a\u70b9\u4e2d\uff0c\u81f3\u5c11\u5b58\u5728\u4e00\u5bf9\u70b9\u4e92\u4e0d\u76f8\u901a  \n\n------------------  \n\n\u5148\u7528 tarjan \u5bf9\u539f\u56fe\u5efa\u7acb\u5706\u65b9\u6811\uff0c\u7136\u540e\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e24\u5bf9\u7ed9\u5b9a\u7684\u70b9\uff0c\u6c42\u4ed6\u4eec\u7684\u6811\u4e0a\u8def\u5f84\u4e2d\uff0c\u6709\u51e0\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7684\u5706\u70b9\uff08\u6839\u636e\u5706\u65b9\u6811\u7684\u6027\u8d28\uff0c\u8fd9\u5c31\u662f\u4ed6\u4eec\u4e4b\u95f4\u7684\u5272\u70b9\uff0c\u4e5f\u5c31\u662f\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684\u70b9\uff09  \n\u8fd9\u4e9b\u70b9\u7684\u5e76\u96c6\u7684\u5927\u5c0f\u5373\u4e3a\u7b54\u6848  \n\n\u4f46\u8fd9\u6837\u590d\u6742\u5ea6\u663e\u7136\u8fc7\u4e0d\u53bb\uff0c\u800c\u4e14\u8fd9\u6837\u63cf\u8ff0\u7b54\u6848\u4e0d\u65b9\u4fbf\u505a\u8f6c\u5316\uff08\u4e00\u5f00\u59cb\u6211\u5c31\u662f\u4e00\u76f4\u5728\u8fd9\u6837\u60f3\uff0c\u5bfc\u81f4\u5361\u4e86\u597d\u957f\u65f6\u95f4\uff09  \n\u6240\u4ee5\u5e94\u8be5\u7ed9\u51fa\u53e6\u4e00\u79cd\u5bf9\u7b54\u6848\u7684\u63cf\u8ff0\uff1a\u5728\u5706\u65b9\u6811\u4e2d\uff0c\u5305\u542b\u6240\u6709\u7ed9\u51fa\u7684\u70b9\u7684\u8054\u901a\u5757\uff0c\u6700\u5c0f\u7684\u5927\u5c0f\uff0c\u518d\u51cf\u53bb $s$ \u5373\u4e3a\u7b54\u6848  \n\u663e\u7136\u8fd9\u548c\u521a\u624d\u90a3\u6837\u662f\u7b49\u4ef7\u7684  \n~~\u4f46\u662f\u8fd8\u662f\u4e0d\u4f1a\u7b97~~  \n\n\u53d1\u73b0\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684 $s$ \u4e2a\u70b9\u662f\u6392\u597d\u5e8f\u7684\uff0c~~\u7136\u800c\u8fd9\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528~~\uff0c\u4f46\u8fd9\u542f\u793a\u6211\u4eec\uff0c\u4e0d\u59a8\u628a\u7ed9\u51fa\u7684\u70b9\u6309\u7167\u4ed6\u4eec\u5728\u5706\u65b9\u6811\u4e2d\u7684 dfs \u5e8f\u91cd\u65b0\u6392\u5e8f  \n\u7136\u540e\u753b\u4e00\u4e2a\u56fe\uff0c\u53d1\u73b0\uff0c\u5982\u679c\u7531 dfs \u5e8f\u4ece\u5c0f\u5230\u5927\uff0c\u4ee5\u6b64\u8d70\u8fc7\u6240\u6709\u7684\u70b9\uff0c\u7136\u540e\u518d\u4ece\u7b2c $s$ \u4e2a\u70b9\u8d70\u56de\u7b2c $1$ \u4e2a\u70b9  \n\u5728\u8d70\u8fc7\u8def\u5f84\u4e2d\uff0c\u5982\u679c\u4e0d\u8003\u8651\u6bcf\u76f8\u90bb\u4e24\u4e2a\u70b9\u7684 LCA\uff08\u6b64\u65f6\u6211\u4eec\u8d70\u7684\u662f\u6811\u4e0a\u6700\u77ed\u8def\u5f84\uff0c\u663e\u7136\u4f1a\u7ecf\u8fc7 LCA\uff0c\u8fd9\u91cc\u8bf4\u7684\u4e0d\u8003\u8651\u5c31\u662f\u4e0d\u628a\u5b83\u8ba1\u5165\u5728\u5185\uff09\uff0c\u6bcf\u4e2a\u70b9\u6070\u597d\u88ab\u8d70\u4e86\u4e24\u6b21\uff0c\u800c\u8fd9\u4e9b\u88ab\u8d70\u8fc7\u7684\u70b9\u6070\u597d\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u8054\u901a\u5757  \n\u5176\u5b9e\u8fd9\u91cc\u672c\u6765\u662f\u6709\u4e2a\u56fe\u7684\uff0c\u4f46\u753b\u7684\u592a\u4e11\u5c31\u6ca1\u52a0\u8fdb\u6765\uff0c\u81ea\u5df1\u753b\u4e00\u753b\u5427  \n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u4e3a\u6bcf\u4e2a\u70b9\u8d4b\u503c\u4e00\u4e2a\u70b9\u6743\uff0c\u65b9\u70b9\u4e3a $0$ \u5706\u70b9\u4e3a $1$\uff0c\u500d\u589e\u6c42\u6811\u4e0a\u8def\u5f84\u70b9\u6743\u548c\u5c31\u597d\u4e86  \n\u5f53\u7136\uff0c\u6700\u540e\u8fd8\u8981\u518d\u9664\u4ee5\u4e8c\uff0c\u518d\u51cf\u53bb $s$  \n\u4e0d\u8fc7\u8fd9\u6837\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u7b2c\u4e00\u4e2a\u70b9\u548c\u7b2c $s$ \u4e2a\u70b9\u7684 LCA \u4f1a\u4e0d\u88ab\u7edf\u8ba1\uff0c\u6240\u4ee5\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u4e2a\u5706\u70b9\u7b54\u6848\u5c31\u518d\u52a0\u4e00  \n\n\u4ee3\u7801  \n\n```cpp  \n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<map>\n#include<iomanip>\n#include<cstring>\n#define reg register\n#define EN std::puts(\"\")\n#define LL long long\ninline int read(){\n\tregister int x=0;register int y=1;\n\tregister char c=std::getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') y=0;c=std::getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+(c^48);c=std::getchar();}\n\treturn y?x:-x;\n}\n#define N 400007\n#define M 400006\nstruct graph{\n\tint tot;\n\tint fir[N],nex[M],to[M];\n\tinline void add(int u,int v){\n\t\tto[++tot]=v;\n\t\tnex[tot]=fir[u];fir[u]=tot;\n\t}\n\tinline void clear(){\n\t\tstd::memset(fir,0,sizeof fir);std::memset(to,0,sizeof to);\n\t\tstd::memset(nex,0,sizeof nex);tot=0;\n\t}\n}T,G;\nint n,m;\nint dfn[N],deep[N],size[N],dfscnt;\nint fa[22][N],val[N],S[N];\ninline int cmp(int x,int y){return dfn[x]<dfn[y];}\nstruct get_bcc{\n\tint dfn[N],low[N],stack[N],top;\n\tint bcccnt,dfscnt;\n\tvoid tarjan(int u){\n\t\tdfn[u]=low[u]=++dfscnt;stack[top++]=u;\n\t\tfor(reg int v,i=G.fir[u];i;i=G.nex[i]){\n\t\t\tv=G.to[i];\n\t\t\tif(!dfn[v]){\n\t\t\t\ttarjan(v);\n\t\t\t\tlow[u]=std::min(low[u],low[v]);\n\t\t\t\tif(low[v]>=dfn[u]){\n\t\t\t\t\tbcccnt++;\n\t\t\t\t\tdo{\n\t\t\t\t\t\tT.add(bcccnt,stack[--top]);T.add(stack[top],bcccnt);\n\t\t\t\t\t}while(stack[top]^v);\n\t\t\t\t\tT.add(bcccnt,u);T.add(u,bcccnt);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse low[u]=std::min(low[u],dfn[v]);\n\t\t}\n\t}\n}BCC;\ninline void clear(){\n\tT.clear();G.clear();\n\tstd::memset(BCC.dfn,0,sizeof BCC.dfn);std::memset(BCC.low,0,sizeof BCC.low);\n\tBCC.top=0;BCC.dfscnt=0;\n\tdfscnt=0;\n\tstd::memset(dfn,0,sizeof dfn);\n\tstd::memset(fa,0,sizeof fa);std::memset(val,0,sizeof val);\n\tstd::memset(deep,0,sizeof deep);std::memset(size,0,sizeof size);\n}\nvoid dfs(int u,int fat){\n\tsize[u]=1;deep[u]=deep[fat]+1;\n\tdfn[u]=++dfscnt;fa[0][u]=fat;\n\tval[u]=val[fat]+(u<=n);\n\tfor(reg int v,i=T.fir[u];i;i=T.nex[i]){\n\t\tv=T.to[i];\n\t\tif(v==fat) continue;\n\t\tdfs(v,u);size[u]+=size[v];\n\t}\n}\ninline void pre(){\n\tfor(reg int i=1;i<=20;i++){\n\t\tfor(reg int j=1;j<=BCC.bcccnt;j++) fa[i][j]=fa[i-1][fa[i-1][j]];\n\t}\n}\ninline int get(int x,int y){\n\tif(deep[x]<deep[y]) std::swap(x,y);\n\tfor(reg int i=20;~i;i--)\n\t\tif(deep[fa[i][x]]>=deep[y])x=fa[i][x];\n\tif(x==y) return x;\n\tfor(reg int i=20;~i;i--)\n\t\tif(fa[i][x]!=fa[i][y]) x=fa[i][x],y=fa[i][y];\n\treturn fa[0][x];\n}\nint main(){int cases=read();while(cases--){\n\tBCC.bcccnt=n=read();m=read();\n\tfor(reg int u,v,i=1;i<=m;i++){\n\t\tu=read();v=read();\n\t\tG.add(u,v);G.add(v,u);\n\t}\n\tBCC.tarjan(1);\n\tdfs(1,0);\n\tpre();\n//\t\n//\t\tEN;EN;\n//\t\tstd::printf(\"n : %d  m : %d  bcccnt : %d\\n\",n,m,BCC.bcccnt);\n//\t\tfor(reg int i=1;i<=BCC.bcccnt;i++){\n//\t\t\tstd::printf(\"now : %d  size : %d  deep : %d  dfn : %d  val : %d\\n\",i,size[i],deep[i],dfn[i],val[0][i]);\n//\t\t\tfor(reg int j=T.fir[i];j;j=T.nex[j]) std::printf(\"%d \",T.to[j]);\n//\t\t\tEN;\n//\t\t}\n//\t\n\treg int s,ans,lca;\n\tint q=read();while(q--){\n \t\ts=read();ans=0;\n\t\tfor(reg int i=1;i<=s;i++) S[i]=read();\n\t\tstd::sort(S+1,S+1+s,cmp);S[s+1]=S[1];\n\t\tfor(reg int i=1;i<=s;i++){\n\t\t\tlca=get(S[i],S[i+1]);\n\t\t\tans+=val[S[i]]+val[S[i+1]]-val[lca]*2;\n\t\t}\n\t\tans>>=1;ans-=s;\n\t\tans+=(get(S[1],S[s])<=n);\n\t\tstd::printf(\"%d\\n\",ans);\n\t}\n\tif(cases) clear();\n}\n\treturn 0;\n}\n```",
        "postTime": 1587891937,
        "uid": 164432,
        "name": "suxxsfe",
        "ccfLevel": 9,
        "title": "P4606 [SDOI2018]\u6218\u7565\u6e38\u620f"
    },
    {
        "content": "\u9898\u76ee\u8981\u6c42\u6467\u6bc1\u4e00\u4e2a\u70b9\u4f7f\u5f97\u4e24\u4e2a\u5173\u952e\u70b9\u4e0d\u8fde\u901a\uff0c\u663e\u7136\u6467\u6bc1\u7684\u70b9\u53ea\u80fd\u662f\u5272\u70b9\u3002\u6240\u4ee5\u6211\u4eec\u5148\u6c42\u51fa\u5272\u70b9\u5e76\u4e14\u5efa\u7acb\u51fa\u539f\u56fe\u7684\u5706\u65b9\u6811\u3002\n\n\u90a3\u4e48\u5706\u65b9\u6811\u662f\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u628a\u539f\u56fe\u7684\u6bcf\u4e2a\u70b9\u770b\u4f5c\u5706\u70b9\uff0c\u7ed9\u6bcf\u4e2a\u70b9\u53cc\uff08BCC\uff09\u65b0\u5efa\u4e00\u4e2a\u65b9\u70b9\uff0c\u7136\u540e\u8ba9\u6bcf\u4e2a\u5706\u70b9\u5411\u5bf9\u5e94\u7684\u70b9\u53cc\u65b9\u70b9\u5efa\u8fb9\u3002\u663e\u7136\uff0c\u65b0\u56fe\u7684\u8fb9\u53ea\u4f1a\u8fde\u63a5\u5706\u70b9\u548c\u65b9\u70b9\uff0c\u6240\u4ee5\u662f\u4e00\u68f5\u6811\u3002\u5e76\u4e14\u53ea\u6709\u5272\u70b9\u4f1a\u540c\u65f6\u8fde\u5411\u82e5\u5e72\u4e2a\u65b9\u70b9\uff0c\u56e0\u4e3a\u53ea\u6709\u5272\u70b9\u540c\u65f6\u5c5e\u4e8e\u591a\u4e2a\u70b9\u53cc\u3002\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u54ea\u4e9b\u70b9\u53ef\u4ee5\u6467\u6bc1\u3002\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $x$\uff0c\u5982\u679c\u5b83\u53ef\u4ee5\u6467\u6bc1\uff0c\u53ea\u53ef\u80fd\u662f\u5b83\u7684\u5b50\u6811\u548c\u5916\u5b50\u6811\u90fd\u6709\u5173\u952e\u70b9\uff08\u4e00\u7c7b\uff09\uff0c\u6216\u8005\u5b83\u7684\u591a\u4e2a\u5b50\u8282\u70b9\u7684\u5b50\u6811\u5185\u90fd\u6709\u5173\u952e\u70b9\uff08\u4e8c\u7c7b\uff09\uff0c\u5e76\u4e14\u5b83\u9700\u8981\u662f\u5272\u70b9\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5148\u9884\u5904\u7406\u51fa\u4e00\u4e2a $sum$ \u6570\u7ec4\uff0c$sum_x$ \u8868\u793a\u4ece\u6811\u6839\u5230 $x$ \u8282\u70b9\u4e4b\u95f4\u5272\u70b9\u7684\u4e2a\u6570\uff0c\u662f\u4e00\u4e2a\u524d\u7f00\u548c\u3002\n\n\u7136\u540e\u6bcf\u7ec4\u8be2\u95ee\u5efa\u51fa\u865a\u6811\uff0c$siz_x$ \u8868\u793a $x$ \u5b50\u6811\u5185\u5173\u952e\u70b9\u4e2a\u6570\u3002\u9996\u5148\u8003\u8651\u4e00\u7c7b\uff0c\u5982\u679c $siz_x>0$ \u5e76\u4e14 $m-siz_x>0$\uff0c\u4e5f\u5c31\u662f\u5185\u5916\u5b50\u6811\u90fd\u5b58\u5728\u5173\u952e\u70b9\uff0c\u90a3\u4e48 $x$ \u5230 $pre$ \u4e4b\u95f4\u7684\u5272\u70b9\u90fd\u53ef\u4ee5\u88ab\u6467\u6bc1\uff0c\u4ea7\u751f\u7684\u8d21\u732e\u5c31\u662f $sum_x-sum_{pre}$\uff0c\u5f53\u7136\uff0c\u5982\u679c $x$ \u4e5f\u662f\u5173\u952e\u70b9\uff0c\u8d21\u732e\u8981\u51cf\u53bb\u4e00\u3002\u63a5\u4e0b\u6765\u8003\u8651\u4e8c\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e2a $cnt$\uff0c\u8868\u793a\u6709\u591a\u5c11\u68f5\u5b50\u8282\u70b9\u7684\u5b50\u6811\u5185\u6709\u5173\u952e\u70b9\u3002\u5982\u679c $cnt>2$ \u5c31\u8bf4\u660e\u53ef\u4ee5\u6467\u6bc1 $x$ \u70b9\uff0c\u4f46\u4f9d\u7136\u8981\u5224\u65ad $x$ \u4e0d\u662f\u5173\u952e\u70b9\u5e76\u4e14 $x$ \u662f\u5272\u70b9\u3002\n\n\u4e0b\u9762\u662f AC \u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nconst int INF = 0x7f7f7f7f;\n\nint Q,n,m,q,ans=0,a[200005],ls[200005];\nint ee,h[200005],nex[200005<<1],to[200005<<1];\nint low[200005],bcc,cut[200005];\nint dep[200005],fa[200005][20],dfn[200005],sum[200005];\nint top,sk[200005],siz[200005];\nvector<int> c[200005];\n\nvoid addedge(int x,int y)\n{\n\tnex[++ee] = h[x], to[ee] = y, h[x] = ee;\n}\n\nvoid tarjin(int x,int fa)\n{\n\tint ch=0;\n\tdfn[x] = low[x] = ++dfn[0];\n\tfor(int i=h[x];i;i=nex[i])\n\t{\n\t\tif(dfn[to[i]]==0)\n\t\t{\n\t\t\tsk[++top] = to[i];\n\t\t\ttarjin(to[i],x);\n\t\t\tlow[x] = min(low[x],low[to[i]]);\n\t\t\tif(x==fa)\n\t\t\t\tch++;\n\t\t\telse if(low[to[i]]>=dfn[x])\n\t\t\t\tcut[x] = 1;\n\t\t\tif(low[to[i]]>=dfn[x])\n\t\t\t{\n\t\t\t\tbcc++;\n\t\t\t\twhile(sk[top]!=to[i])\n\t\t\t\t\tc[bcc].push_back(sk[top]), top--;\n\t\t\t\tc[bcc].push_back(sk[top]), top--;\n\t\t\t\tc[bcc].push_back(x);\n\t\t\t}\n\t\t}\n\t\telse if(to[i]!=fa)\n\t\t\tlow[x] = min(low[x],dfn[to[i]]);\n\t}\n\tif(x==fa && ch>=2)\n\t\tcut[x] = 1;\n}\n\nvoid dfs0(int x,int pre)\n{\n\tdep[x] = dep[pre]+1, fa[x][0] = pre, dfn[x] = ++dfn[0], sum[x] = sum[pre]+cut[x];\n\tfor(int j=1;j<20;j++)\n\t\tfa[x][j] = fa[fa[x][j-1]][j-1];\n\tfor(int i=h[x];i;i=nex[i])\n\t\tif(to[i]!=pre)\n\t\t\tdfs0(to[i],x);\n}\n\nint lca(int x,int y)\n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\twhile(dep[x]>dep[y])\n\t\tx = fa[x][(int)log2(dep[x]-dep[y])];\n\tif(x==y)\n\t\treturn y;\n\tfor(int k=19;k>=0;k--)\n\t\tif(fa[x][k]!=fa[y][k])\n\t\t\tx = fa[x][k], y = fa[y][k];\n\treturn fa[x][0];\n}\n\nbool cmp(int x,int y)\n{\n\treturn dfn[x]<dfn[y];\n}\n\nvoid build()\n{\n\tee = top = 0;\n\tsort(ls+1,ls+1+m,cmp);\n\tif(ls[1]!=1) sk[++top] = 1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(top==0)\n\t\t{\n\t\t\tsk[++top] = ls[i];\n\t\t\tcontinue;\n\t\t}\n\t\tint z=lca(sk[top],ls[i]);\n\t\twhile(top>1 && dep[z]<dep[sk[top-1]])\n\t\t\taddedge(sk[top],sk[top-1]), addedge(sk[top-1],sk[top]), top--;\n\t\tif(dep[z]<dep[sk[top]])\n\t\t\taddedge(sk[top],z), addedge(z,sk[top]), top--;\n\t\tif(top==0 || sk[top]!=z)\n\t\t\tsk[++top] = z;\n\t\tsk[++top] = ls[i];\n\t}\n\twhile(--top)\n\t\taddedge(sk[top],sk[top+1]), addedge(sk[top+1],sk[top]);\n}\n\nvoid dfs1(int x,int pre)\n{\n\tsiz[x] = a[x];\n\tfor(int i=h[x];i;i=nex[i])\n\t\tif(to[i]!=pre)\n\t\t\tdfs1(to[i],x), siz[x] += siz[to[i]];\n}\n\nvoid dfs(int x,int pre)\n{\n\tint cnt=0;\n\tif(a[x]==1)\n\t\tsiz[x] = 1;\n\telse\n\t\tsiz[x] = 0;\n\tfor(int i=h[x];i;i=nex[i])\n\t\tif(to[i]!=pre)\n\t\t{\n\t\t\tdfs(to[i],x);\n\t\t\tif(siz[to[i]]>0)\n\t\t\t\tcnt++;\n\t\t\tsiz[x] += siz[to[i]];\n\t\t}\n\tif(m-siz[x]>=1)\n\t{\n\t\tif(!a[x])\n\t\t\tans += sum[x]-sum[pre];\n\t\telse\n\t\t\tans += max(sum[fa[x][0]]-sum[pre],0ll);\n\t}\n\telse if(cnt>=2 && !a[x])\n\t\tans += (x<=n);\n\ta[x] = h[x] = 0;\n}\n\nsigned main()\n{\n\tcin>>Q;\n\twhile(Q--)\n\t{\n\t\tmemset(h,0,sizeof(h)), ee = 0;\n\t\tmemset(dfn,0,sizeof(dfn)), memset(cut,0,sizeof(cut));\n\t\tfor(int i=1;i<=bcc;i++)\n\t\t\tc[i].clear();\n\t\tbcc = 0;\n\t\tmemset(sum,0,sizeof(sum));\n\t\tcin>>n>>m;\n\t\tfor(int i=1,x,y;i<=m&&scanf(\"%lld%lld\",&x,&y);i++)\n\t\t\taddedge(x,y), addedge(y,x);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(dfn[i]==0)\n\t\t\t\ttarjin(1,1);\n\t\tee = 0, memset(h,0,sizeof(h));\n\t\tfor(int i=1;i<=bcc;i++)\n\t\t\tfor(int j=0;j<c[i].size();j++)\n\t\t\t\taddedge(c[i][j],i+n), addedge(i+n,c[i][j]);\n\t\tmemset(dfn,0,sizeof(dfn));\n\t\tdfs0(1,0);\n\t\tee = 0, memset(h,0,sizeof(h));\n\t\tcin>>q;\n\t\twhile(q--)\n\t\t{\n\t\t\tscanf(\"%lld\",&m);\n\t\t\tfor(int i=1;i<=m&&scanf(\"%lld\",ls+i);i++)\n\t\t\t\ta[ls[i]]++;\n\t\t\tbuild();\n\t\t\tans = 0;\n\t\t\tdfs(1,0);\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n\n\u795d\u5927\u5bb6 AC \u6109\u5feb\uff01",
        "postTime": 1629087012,
        "uid": 123298,
        "name": "kouylty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\u3010P4606 [SDOI2018]\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "[\u9898\u76ee\u6233\u8fd9](https://www.luogu.com.cn/problem/P4606)\n\n\u8fd9\u9053\u9898\uff0c\u5df2\u7ecf\u8fd1\u4e4e\u4e8e\u5706\u65b9\u6811\u548c\u6811\u4e0a\u500d\u589e\u5904\u7406\u70b9\u6743\u548c+LCA\u7684\u677f\u5b50\u4e86\u3002\n\n\u5bf9\u4e8e\u4e0d\u61c2\u5706\u65b9\u6811\u57fa\u672c\u5b9a\u4e49\u7684\u5c0f\u4f19\u4f34\uff0c\u5efa\u8bae\u53bb\u770b[\u5c0f\u7c89\u5154\u7684\u535a\u5ba2](https://www.baidu.com/link?url=DM6KPXibnMEFiYEzNGJws2t2B3XwiLIxjpOYMak3DDr9bdXHCL3TnsLFJo62Bkm-jWX4QEQxRNXAhASEVK6zdq&wd=&eqid=80dbfe15000916f1000000065edb3f70)~~\uff08\u6211\u4e5f\u662f\u770b\u8fd9\u4e2a\u535a\u5ba2\u5b66\u7684\u5706\u65b9\u6811\uff09~~\n\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c \u6211\u4eec\u5982\u4f55\u624d\u80fd\u4f7f\u5f97\u4e24\u4e2a\u70b9\u53d8\u5f97\u4e0d\u8fde\u901a\u5462\uff1f  \n### \u5f53\u7136\u662f\u5e72\u6389\u6211\u4eec\u8def\u5f84\u4e0a\u5fc5\u987b\u7ecf\u8fc7\u7684\u70b9\uff0cWhich is called \u5272\u70b9\n\n\u800c\u8fd9\u91cc\u4e5f\u5c31\u8981\u5229\u7528\u5230\u6211\u4eec\u5706\u65b9\u6811\u7684\u6027\u8d28\u3002  \u8fd9\u4e9b\u5272\u70b9\u5c31\u662f\u6211\u4eec\u5706\u65b9\u6811\u4e0a\u7684\u5706\u70b9\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u8f7b\u677e\u7684\u60f3\u5230\u4e00\u4e2a\u529e\u6cd5\uff1a \u76f4\u63a5\u627e\u51fa\u6240\u6709\u7684\u5706\u70b9\u4e0d\u5c31\u597d\u4e86\uff1f\n\u7136\u9e45\uff0c\u6211\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fd9\u6837\u662f\u8fc7\u4e0d\u53bb\u7684\u3002\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u6240\u6709\u5706\u70b9\u5462\uff1f \u4e0d\u59a8\u6362\u4e00\u79cd\u601d\u8def\u3002\n\u5bf9\u4e8e\u4e00\u4e2a\u5706\u65b9\u6811\uff0c\u5982\u679c\u6211\u4eec\u80fd\u627e\u5230\u5176\u5305\u542b\u6240\u6709\u70b9\u7684\u8fde\u901a\u5757\uff08\u5f53\u7136\u662f\u6700\u5c0f\u7684\uff0c\u7c7b\u4f3c\u4e8e\u6700\u5c0f\u751f\u6210\u6811\u7684\u4e1c\u897f\uff09\uff0c\u7136\u540e\u5c06\u5176\u51cf\u6389s\uff0c\u5c31\u662f\u6211\u4eec\u7684\u5706\u70b9\u7684\u6570\u91cf\u3002~~\uff08\u8bf7\u81ea\u884c\u753b\u56fe\u624b\u6478\uff09~~\n\n\u5982\u679c\u6211\u4eec\u5c06\u6240\u6709\u7684\u70b9\u6309\u7167dfs\u5e8f\u6392\u5e8f\uff08\u5373dfn\uff09\uff0c\u7136\u540e\u4f9d\u6b21\u904d\u5386\uff08\u8bf7\u81ea\u884c\u753b\u56fe\uff09\uff0c\u53d1\u73b0\u6211\u4eec\u5c06\u4f1a\u5f97\u5230\u4e00\u4e2a\u8054\u901a\u56fe\u3002\u8fd9\u4e0d\u5c31\u662f\u6211\u4eec\u8981\u627e\u7684\u5417\uff01\uff01\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u7edf\u8ba1\u5176\u5927\u5c0f\u5462?  \u4e5f\u5f88\u7b80\u5355\u3002\u4ee4 val[\u65b9\u70b9] = 0, val[\u5706\u70b9] = 0,\u7136\u540e\u500d\u589e\u6c42\u8def\u5f84\u70b9\u6743\u548c\u5373\u53ef\u3002\n\n### \u53cb\u60c5tips:\n\u4e0d\u8981\u5fd8\u4e86\uff0cLCA\u4f1a\u88ab\u591a\u6b21\u7ecf\u8fc7\uff0c\u8981\u8bb0\u5f97\u51cf\u6389\u30021\u53f7\u70b9\u548cs\u53f7\u70b9\u7684LCA\u4e0d\u4f1a\u88ab\u7edf\u8ba1\u5230\uff0c\u8bb0\u5f97\u7279\u5224\u5176\u5706\u70b9\u65b9\u70b9\uff0c\u7136\u540e\u52a0\u4e0a\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 1000010\n#define isdigit(c) ((c)>='0'&&(c)<='9')\n#define I_WANT_TO_AK_IOI 0\n\nint read(){\n\tint x = 0, s = 1;\n\tchar c = getchar();\n\twhile(!isdigit(c)){\n\t\tif(c == '-')s = -1;\n\t\tc = getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx = (x << 1) + (x << 3) + (c ^ '0');\n\t\tc = getchar();\n\t}\n\treturn x * s;\n}\n\nstruct tu{  /*  \u201c\u56fe \u201d */\n\tint v, next;\n};\nint n, m;\n\nstruct node{\n\ttu t[N << 1];\n\tint f[N << 1];\n\tint bian;\n\t\n\tinline void add(int u, int v){  /*\u53cc\u5411\u8fb9*/ \n\t\tt[++bian] = (tu){v, f[u]}, f[u] = bian;\n\t\tt[++bian] = (tu){u, f[v]}, f[v] = bian;\n\t\treturn ;\n\t}\n\t/*  \u8c03\u8bd5\u9519\u8bef \n\tvoid out(){\n\t \tthis-> bian; \n\t\tprintf(\"%d\\n\", bian);\n\t\treturn ;\n\t}*/\n\tvoid clean(){\n\t\tbian = 0;\n\t\tmemset(f, 0, sizeof(f));\n\t\tfor(int i = 1;i <= (N << 1); i++)\n\t\t\tt[i] = (tu){0, 0};\n\t\treturn ;\n\t}\n}G, T;\n\n\nstruct bcc{\n\tint dfn[N << 1], low[N], stac[N], top;\n\tint bcccnt, id;\n\t\n\tvoid tarjan(int now){    /*\u6c42\u5706\u65b9\u6811*/\n\t\tdfn[now] = low[now] = ++id;\n\t\tstac[top++] = now;\n\t\tfor(int i = G.f[now]; i; i = G.t[i].next){\n\t\t\tint v = G.t[i].v;\n\t\t\tif(!dfn[v]){\n\t\t\t\ttarjan(v);\n\t\t\t\tlow[now] = min(low[now], low[v]);\n\t\t\t\tif(dfn[now] <= low[v]){\n\t\t\t\t\tbcccnt++;\n\t\t\t\t\tdo{\n\t\t\t\t\t\tT.add(bcccnt, stac[--top]);\n\t\t\t\t\t} while(stac[top] != v);  \n\t\t\t\t\tT.add(bcccnt, now);  /*\u5706\u65b9\u6811\u5efa\u56fe*/\n\t\t\t\t}\n\t\t\t}\n\t\t\telse low[now] = min(low[now], dfn[v]);\n\t\t}\n\t\treturn ;\n\t}\n\t\n\tinline void clean(){\n\t\tid = 0;\n\t\ttop = 0;\n\t\tbcccnt = 0;\n\t\tmemset(dfn, 0, sizeof(dfn));\n\t\tmemset(low, 0, sizeof(low));\n\t\treturn ;\n\t}\n} BCC;\n\nnamespace LCA{\n\tint size[N << 1], deth[N << 1], dfn[N << 1], fa[N << 1][22], id = 0;\n\tint val[N], siz[N];\n\tvoid dfs(int now,int father){\n\t\tsize[now] = 1;\n\t\tdeth[now] = deth[father] + 1; \n\t\tdfn[now] = ++id;\n\t\tfa[now][0] = father;\n\t\tval[now] = val[father] + (now <= n);\n\t\tfor(int i = T.f[now]; i; i = T.t[i].next){\n\t\t\tint v = T.t[i].v;\n\t\t\tif(v != father){\n\t\t\t\tdfs(v, now);\n\t\t\t\tsiz[now] += siz[v];\n\t\t\t}\n\t\t}\n\t\treturn ;\n\t}\n\n\tvoid prepare(){  /*\u500d\u589e\u9884\u5904\u7406*/\n\t\tfor(int j = 1;j <= 20; j++)\n\t\t\tfor(int i = 1;i <= BCC.bcccnt; i++)\n\t\t\t\tfa[i][j] = fa[fa[i][j-1]][j-1];\n\t\treturn ;\n\t}\n\n\tint get_lca(int x, int y){  /*\u500d\u589e\u6c42LCA*/\n\t\tif(deth[x] < deth[y]) swap(x, y);\n\t\tfor(int i = 20; ~i; i--){\n\t\t\tif(deth[fa[x][i]] >= deth[y]) x = fa[x][i];\n\t\t}\n\t\tif(x == y) return x;\n\t\tfor(int i = 20; ~i; i--){\n\t\t\tif(fa[x][i] != fa[y][i]) x = fa[x][i], y = fa[y][i];\n\t\t}\n\t\treturn fa[x][0];\n\t}\n\t\n\tinline bool cmp(int x, int y){\n\t\treturn dfn[x] < dfn[y];\n\t}\n\t\n\tinline void clean(){\n\t\tid = 0;\n\t\tmemset(dfn, 0, sizeof (dfn));\n\t\tmemset(fa, 0, sizeof(fa));\n\t\tmemset(val,0, sizeof (val));\n\t\tmemset(deth, 0, sizeof(deth));\n\t\tmemset(size, 0, sizeof(size));\n\t\treturn ;\n\t}\n\t\n}\n\n\ninline void clean(){\n\tBCC.clean();\n\tT.clean();\n\tG.clean();\n\tLCA::clean();\n\treturn ;\n}\nint a[N];\n\n\nint main(){\n//\tfreopen(\"hh.txt\", \"r\", stdin);\n\tint test = read();\n\twhile(test--){\n\t\tn = read(), m = read();\n\t\tfor(int i = 1;i <= m; i++){\n\t\t\tint x = read(), y = read();\n\t\t\tG.add(x, y);  /*\u5148\u5efa\u539f\u56fe*/ \n\t\t}\n\t\tBCC.bcccnt = n;\n\t\tBCC.tarjan(1);  /*\u5efa\u7acb\u5706\u65b9\u6811*/ \n\t\tLCA::dfs(1, 0);\n\t\tLCA::prepare(); /*\u5904\u7406\u500d\u589e\u548c\u8def\u5f84\u70b9\u6743\u548c*/ \n\t\tint q = read();\n\t\twhile(q--){\n\t\t\tint s = read(), ans = 0;\n\t\t\tfor(int i = 1;i <= s; i++) a[i] = read();\n\t\t\tsort(a + 1, a + s + 1, LCA::cmp);  /*\u6309\u7167dfn\u6392\u5e8f*/ \n\t\t\ta[s + 1] = a[1];\n\t\t\tfor(int i = 1;i <= s; i++){\n\t\t\t\tint lca = LCA::get_lca(a[i], a[i + 1]);\n\t\t\t\tans += LCA::val[a[i]] + LCA::val[a[i + 1]] - (LCA::val[lca] << 1);\n\t\t\t}\n\t\t\tans >>= 1;\n\t\t\tans -= s;\n\t\t\tans += (LCA::get_lca(a[1], a[s]) <= n);\n\t\t\tprintf(\"%d\\n\", ans);\n\t\t}\n\t\tclean();  /*\u4e0d\u8981\u5fd8\u4e86\u6e05\u7a7a\u5440*/\n\t}\n\treturn I_WANT_TO_AK_IOI;\n}\n```\n\n#### \u4ee3\u7801\u4e00\u5b9a\u8981\u6a21\u5757\u5316\u554a\uff0c\u4e0d\u7136\u5bb9\u6613\u5199\u5d29\n~~(\u867d\u7136\u6211\u6a21\u5757\u5316\u4e86\u4e5f\u5199\u5d29\uff09~~",
        "postTime": 1591428189,
        "uid": 234224,
        "name": "\u9752\u9e1f_Blue_Bird",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4606 \u3010[SDOI2018]\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "$\u8fd9\u9053\u9898\u753b\u4e2a\u56fe,\u53d1\u73b0\u548c\u5706\u65b9\u6811\u5173\u7cfb\u5f88\u5927!!$\n\n$\u6bd4\u5982u\u548cv\u5728\u5706\u65b9\u6811\u4e0a\u7684\u8def\u5f84\u7ecf\u8fc7\u51e0\u4e2a\u5706\u70b9,\u90a3\u4e9b\u5706\u70b9\u5c31\u7b26\u5408\u8981\u6c42!!$\n\n$\u89e3\u91ca:\u7ecf\u8fc7\u7684\u5706\u70b9\u8fde\u63a5\u7740\u4e24\u4e2a\u65b9\u70b9,\u5206\u522b\u5c5e\u4e8eu\u7684\u70b9\u53cc\u548cv\u7684\u70b9\u53cc$\n\n$\u53bb\u6389\u8fd9\u4e2a\u70b9,u\u548cv\u5206\u5272\u5f00\u6765$\n\n$\u6240\u4ee5\u73b0\u5728\u5c31\u662f\u6c42\u7ed9\u5b9a\u7684s\u96c6\u5408\u4efb\u610f\u4e24\u70b9\u8def\u5f84\u7ecf\u8fc7\u7684\u5706\u70b9\u4e2a\u6570(\u4e0d\u91cd\u590d)$\n\n**\u4f46\u662f\u4f1a\u8d85\u65f6**\n\n**\u8003\u8651\u4f18\u5316**\n\n$\u6211\u4eec\u53d1\u73b0\u8981\u6c42\u7684\u5c31\u662fs\u96c6\u5408\u7684\u6700\u5c0f\u8fde\u901a\u5b50\u56fe\u4e2d\u7684\u5706\u70b9\u554a!!$\n\n$\u90a3\u600e\u4e48\u6c42?$\n\n$\u60f3\u8c61\u4e00\u4e0bdfs\u7684\u8fc7\u7a0b,\u641c\u7d22\u67d0\u68f5\u5b50\u6811,\u7136\u540e\u539f\u8def\u8fd4\u56de,\u5728\u641c\u7d22\u53e6\u4e00\u9897\u5b50\u6811...$\n\n\u4e5f\u5c31\u662f\u6309\u7167$dfs$\u5e8f\u7ed9$s$\u96c6\u5408\u6392\u5e8f\n\n\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u76f8\u90bb\u4e24\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u5706\u70b9\u5373\u53ef!!(\u5f53\u7136\u8fd9\u6837\u6bcf\u6761\u8fb9\u76f8\u5f53\u4e8e\u8d70\u4e86\u4e24\u6b21)\n\n\u6700\u540e\u9664\u4ee5$2$\u51cf\u53bb$s$\u4e2d\u96c6\u5408\u7684\u4e2a\u6570\u5373\u53ef\n\n$s$\u96c6\u5408\u9996\u5c3e\u5143\u7d20\u4e5f\u8981\u8ba1\u7b97\u8def\u5f84\u4e0a\u7684\u8d21\u732e,\u4f46\u662f\u8d21\u732e\u662f\u70b9,\u4e0d\u597d\u7edf\u8ba1\n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u5706\u70b9\u7684\u8d21\u732e\u653e\u5728\u5b83\u548c\u7236\u4eb2\u7684\u8fb9\u4e0a\u53bb(\u8d21\u732e\u4e3a$1$)\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u7528$lca$\u6765\u6c42\u6811\u4e0a\u4e24\u70b9\u7684\u8ddd\u79bb!!\n\n\u6700\u540e,\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282,\u5982\u679c$s$\u96c6\u5408\u9996\u5c3e\u5143\u7d20\u7684$lca$\u662f\u5706\u70b9\n\n\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u8d21\u732e\u6ca1\u6709\u7b97\u8fdb\u53bb(\u4e0d\u5728\u8fde\u901a\u5b50\u56fe\u91cc,\u5728\u5916\u8fb9\u7684\u8fb9\u4e86)\n\n\u9700\u8981\u989d\u5916\u52a0\u4e0a\u53bb\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e6+10;\nint t,n,m,f,q;\nvector<int>vec[maxn];\nstruct edge{ int to,nxt; }d[maxn];\nint head[maxn],cnt=1;\nvoid add(int u,int v){\td[++cnt]=(edge){v,head[u]},head[u]=cnt; }\nvoid ins(int u,int v){ vec[u].push_back(v); }\nint low[maxn],dfn[maxn],stac[maxn],iid,top;\nvoid tarjan(int u)\n{\n\tlow[u]=dfn[u]=++iid,stac[++top]=u;\n\tfor(int i=head[u];i;i=d[i].nxt )\n\t{\n\t\tint v=d[i].to;\n\t\tif( !dfn[v] )\n\t\t{\n\t\t\ttarjan(v),low[u]=min(low[u],low[v]);\n\t\t\tif( low[v]>=dfn[u] )\n\t\t\t{\n\t\t\t\t++f;//\u53d1\u73b0\u5272\u70b9\n\t\t\t\twhile( 1 )\n\t\t\t\t{\n\t\t\t\t\tins(f,stac[top]); ins(stac[top],f);\n\t\t\t\t\tif( stac[top--]==v )\tbreak;\t\n\t\t\t\t} \n\t\t\t\tins(f,u); ins(u,f);\n\t\t\t}\n\t\t}\n\t\telse\tlow[u]=min( low[u],dfn[v] );\n\t}\n}\nint id[maxn],fa[maxn][22],dis[maxn],num,deep[maxn],s[maxn];\nvoid dfs(int u,int father)\n{\n\tid[u]=++num,deep[u]=deep[father]+1;\n\tfa[u][0]=father, dis[u]=dis[father]+( u<=n );\n\tfor(int i=1;i<=20;i++)\n\t\tfa[u][i]=fa[ fa[u][i-1] ][i-1];\n\tfor(int i=0;i<vec[u].size();i++)\n\t\tif( vec[u][i]!=father )\tdfs( vec[u][i],u );\n}\nint lca(int x,int y)\n{\n\tif( deep[x]<deep[y] )\tswap(x,y);\n//\tfor(int i=log(deep[x]);i>=0;i--)\n//\t\tif( deep[fa[x][i]]>=deep[y] )\tx=fa[x][i];\n\tfor(int j=0,d=deep[x]-deep[y];d;j++,d>>=1)\n\t\tif( d&1 )\tx=fa[x][j];\n\tif( x==y )\treturn x;\n\tfor(int i=18;i>=0;i--)\n\t\tif( fa[x][i]!=fa[y][i] )\n\t\t\tx=fa[x][i],y=fa[y][i];\n\treturn fa[x][0];\n}\nbool com(int a,int b){\treturn id[a]<id[b]; }\nvoid init()\n{\n\tiid=0,num=0,cnt=1,top=0;\n\tfor(int i=1;i<=f;i++)\n\t{\n\t\tvec[i].clear(),head[i]=0;\n\t\tdfn[i]=low[i]=0;\n\t\tid[i]=dis[i]=deep[i]=0;\n\t\tfor(int j=0;j<=20;j++)\tfa[i][j]=0;\n\t}\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n//\tcin.tie(0),cout.tie(0);\n\tcin >> t;\n\twhile( t-- )\n\t{\n\t\tcin >> n >> m;\n\t\tf=n;\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tint l,r; cin >> l >> r;\n\t\t\tadd(l,r); add(r,l);\n\t\t}\n\t\ttarjan(1),top--;\n\t\tdfs(1,0);\n\t\tcin >> q;\n\t\twhile( q-- )\n\t\t{\n\t\t\tint shu,ans=0; cin >> shu;\n\t\t\tans=-2*shu;\n\t\t\tfor(int i=1;i<=shu;i++)\tcin >> s[i];\n\t\t\tsort(s+1,s+1+shu,com);\n\t\t\tfor(int i=1;i<shu;i++)\n\t\t\t{\n\t\t\t\tint u=s[i],v=s[i+1];\n\t\t\t\tans+=dis[u]+dis[v]-2*dis[lca(u,v)];\n\t\t\t}\n\t\t\tans+=dis[s[1]]+dis[s[shu]]-2*dis[lca(s[1],s[shu])];\n\t\t\tif( lca(s[1],s[shu])<=n )\tans+=2;\n\t\t\tcout << ans/2 << '\\n';\n\t\t}\n\t\tinit();\n\t}\n}\n```",
        "postTime": 1599118066,
        "uid": 299810,
        "name": "issue_is_fw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4606 \u3010[SDOI2018]\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "# Description\n\n\u6709\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u6bcf\u6b21\u7ed9\u5b9a\u4e00\u4e2a\u96c6\u5408$S$\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u70b9\u6ee1\u8db3\u5220\u9664\u8fd9\u4e2a\u70b9\u540e\uff0c$S$\u4e2d\u81f3\u5c11\u6709\u4e24\u4e2a\u70b9\u4e0d\u8fde\u901a\u3002\n\n$n \\leq 10^5$\uff0c$m,\\sum |S| \\leq 2\\times 10^5$\n\n# Solution\n\n\u8003\u8651\u6240\u6c42\u5c31\u662f$S$\u5728\u5706\u65b9\u6811\u4e0a\u865a\u6811\u7684\u5706\u70b9\u6570-$|S|$\u3002\n\n\u4f46\u5b9e\u9645\u5e76\u4e0d\u9700\u8981\u628a\u865a\u6811\u6c42\u51fa\u6765\uff0c\u8003\u8651\u628a\u4e00\u4e2a\u5706\u70b9\u7684\u6743\u503c\u653e\u5728\u5b83\u5230\u7236\u4eb2\u65b9\u70b9\u7684\u8fb9\u4e0a\uff0c\u90a3\u4e48\u628a$S$\u6309$dfs$\u5e8f\u6392\u5e8f\u540e\uff0c\u7b54\u6848\u4e3a\n\n$$\\frac{dis(S_1,S_2)+dis(S_2,S_3)+...+dis(S_{n-1},S_n)+dis(S_n,S_1)}{2}-|S|$$\n\n\u8fd9\u4e2a\u53ef\u4ee5\u753b\u56fe\u611f\u53d7\u4e00\u4e0b\u3002\n\n\u6ce8\u610f\u5f53\u865a\u6811\u4e0a\u6700\u6d45\u70b9\u4e3a\u5706\u70b9\u65f6\uff0c\u8981\u52a0\u4e0a\u5b83\u7684\u6743\u503c\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int gi()\n{\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') c = getchar();\n\tint sum = 0;\n\twhile('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n\treturn sum;\n}\n\nconst int maxn = 100005;\n\nint n, m, s[maxn];\n\nstruct edge\n{\n\tint to, next;\n} e[maxn << 2];\nint h[maxn << 1], tot, cnt;\n\ninline void add(int u, int v)\n{\n\te[++tot] = (edge) {v, h[u]}; h[u] = tot;\n\te[++tot] = (edge) {u, h[v]}; h[v] = tot;\n}\n\nnamespace Tarjan\n{\n\n\tstruct edge\n\t{\n\t\tint to, next;\n\t} e[maxn << 2];\n\tint h[maxn], tot;\n\t\n\tinline void Add(int u, int v)\n\t{\n\t\te[++tot] = (edge) {v, h[u]}; h[u] = tot;\n\t\te[++tot] = (edge) {u, h[v]}; h[v] = tot;\n\t}\n\n\tint dfn[maxn], low[maxn], Time, stk[maxn], top;\n\n\tvoid dfs(int u)\n\t{\n\t\tdfn[u] = low[u] = ++Time;\n\t\tstk[++top] = u;\n\t\tfor (int i = h[u], v; v = e[i].to, i; i = e[i].next)\n\t\t\tif (!dfn[v]) {\n\t\t\t\tdfs(v);\n\t\t\t\tlow[u] = min(low[u], low[v]);\n\t\t\t\tif (dfn[u] == low[v]) {\n\t\t\t\t\t++cnt;\n\t\t\t\t\twhile (stk[top + 1] != v)\n\t\t\t\t\t\tadd(stk[top], cnt), --top;\n\t\t\t\t\tadd(cnt, u);\n\t\t\t\t}\n\t\t\t} else low[u] = min(low[u], dfn[v]);\n\t}\n\t\n}\n\nint fa[maxn << 1], dep[maxn << 1], dis[maxn << 1], siz[maxn << 1], son[maxn << 1], top[maxn << 1], dfn[maxn << 1], low[maxn << 1], Time;\nint vis[maxn << 1];\n\nvoid dfs1(int u)\n{\n\tvis[u] = 1;\n\tdep[u] = dep[fa[u]] + 1; dis[u] = dis[fa[u]] + (u <= n); siz[u] = 1; son[u] = 0;\n\tfor (int i = h[u], v; v = e[i].to, i; i = e[i].next)\n\t\tif (v != fa[u]) {\n\t\t\tif (vis[v]) \n\t\t\t\tputs(\"call me\"), exit(0);\n\t\t\tfa[v] = u; dfs1(v); siz[u] += siz[v];\n\t\t\tif (siz[v] > siz[son[u]]) son[u] = v;\n\t\t}\n}\n\nvoid dfs2(int u)\n{\n\tdfn[u] = ++Time;\n\tif (son[u]) top[son[u]] = top[u], dfs2(son[u]);\n\tfor (int i = h[u], v; v = e[i].to, i; i = e[i].next)\n\t\tif (v != son[u] && v != fa[u]) top[v] = v, dfs2(v);\n\tlow[u] = Time;\n}\n\ninline int lca(int u, int v)\n{\n\twhile (top[u] != top[v]) {\n\t\tif (dep[top[u]] > dep[top[v]]) u = fa[top[u]];\n\t\telse v = fa[top[v]];\n\t}\n\treturn dep[u] < dep[v] ? u : v;\n}\n\nint main()\n{\n\tint T = gi();\n\t\n\twhile (T--) {\n\t\tn = gi(); m = gi();\n\t\tfill(h + 1, h + cnt + 1, 0); tot = 0;\n\t\tfill(Tarjan::h + 1, Tarjan::h + n + 1, 0); Tarjan::tot = 0;\n\t\tfill(Tarjan::dfn + 1, Tarjan::dfn + n + 1, 0);\n\t\tfor (int i = 1; i <= m; ++i) Tarjan::Add(gi(), gi());\n\n\t\tcnt = n; Tarjan::Time = 0; \n\t\tTarjan::dfs(1); --Tarjan::top;\n\n\t\tmemset(vis + 1, 0, sizeof(vis));\n\t\tdfs1(1);\n\t\tTime = 0; top[1] = 1; dfs2(1);\n\t\t\n\t\tint q = gi(), k;\n\t\twhile (q--) {\n\t\t\tk = gi();\n\t\t\tfor (int i = 1; i <= k; ++i) s[i] = gi();\n\t\t\tsort(s + 1, s + k + 1, [](const int &a, const int &b) {return dfn[a] < dfn[b];});\n\t\t\tint ans = -2 * k;\n\t\t\tfor (int i = 1; i < k; ++i) ans += dis[s[i]] + dis[s[i + 1]] - (dis[lca(s[i], s[i + 1])] << 1);\n\t\t\tans += dis[s[k]] + dis[s[1]] - (dis[lca(s[k], s[1])] << 1);\n\t\t\tif (lca(s[1], s[k]) <= n) ans += 2;\n\t\t\tprintf(\"%d\\n\", ans >> 1);\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1556152749,
        "uid": 119899,
        "name": "dsidsi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4606 \u3010[SDOI2018]\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "[\u6233\u6211\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8cqwq](https://www.goldenpotato.cn/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/luogu-p4606-sdoi2018%E6%88%98%E7%95%A5%E6%B8%B8%E6%88%8F/)\n\n---\n# Solution\n> \u5706\u65b9\u6811\u4e0a\u5706\u65b9\u679c\uff0c  \n  \u5706\u65b9\u6811\u4e0b\u4f60\u548c\u6211\u3002  \n  \u5706\u65b9\u6811\u524d\u5efa\u865a\u6811\uff0c   \n  \u6b22\u4e50\u591a\u53c8\u591a\u3002  \n  \n[![A5PwBd.th.png](https://s2.ax1x.com/2019/04/08/A5PwBd.th.png)](https://imgchr.com/i/A5PwBd)\n\n.\n\n\u597d\u5427\uff0c\u6211\u4eec\u6765\u8bf4\u6b63\u9898\u3002  \n\u8fd9\u9898\u5c31\u6bd4\u8f83\u5f3a\u3002~~\u6839\u636e\u5e38\u8bc6~~\uff0c\u5982\u679c\u6211\u4eec\u7206\u6389\u7684\u70b9\u80fd\u5f71\u54cd\u8fd9\u4e2a\u56fe\u7684\u8fde\u901a\u6027\uff0c**\u90a3\u4e48\uff0c\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u662f\u5272\u70b9**\u3002  \n\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u5148\u5bf9\u539f\u56fe\u505a**Tarjan\u6c42\u70b9\u53cc**\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8003\u8651\u7528\u5706\u65b9\u6811\u6765\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\u3002\n\n\u6211\u4eec\u5148\u8003\u8651\u66b4\u529b\u600e\u4e48\u505a\uff0c\u6211\u4eec\u5148\u5bf9\u539f\u56fe\u6c42\u51fa\u5706\u65b9\u6811\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53d1\u73b0\uff0c**\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u7684\u70b9\u4e00\u5b9a\u662f\u5b69\u5b50\u6709\u88ab\u9009\u5b9a\u7684\u70b9\u7684\u5706\u70b9\uff0c\u5e76\u4e14\u8fd9\u4e2a\u70b9\u7684\u603b\u5171\u88ab\u9009\u5b9a\u7684\u5b69\u5b50\u6570\u4e0d\u7b49\u4e8e\u603b\u5171\u88ab\u9009\u5b9a\u6570**\uff08\u56e0\u4e3a\u5982\u679c\u8fd9\u4e2a\u70b9\u88ab\u5272\u6389\u4e86\uff0c\u5176\u88ab\u9009\u5b9a\u7684\u5b69\u5b50\u4e00\u5b9a\u4f1a\u4e0e\u5176\u4ed6\u70b9\u65ad\u5f00\u6765\uff0c\u4e14\u65b9\u70b9\u4ee3\u8868\u4e00\u4e2a\u70b9\u53cc\uff0c\u5e76\u4e0d\u80fd\u5272\uff09\u3002  \n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7edf\u8ba1\u4e00\u4e0b\u6709\u591a\u5c11\u4e2a\u6709\u8d21\u732e\u7684\u70b9\u5373\u53ef\u3002  \n\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8fdb\u4e00\u6b65\u89c2\u5bdf\u6570\u636e\uff0c\u53d1\u73b0$\\sum S$\u975e\u5e38\u5c0f\uff0c\u56e0\u6b64\u8003\u8651\u7528\u865a\u6811\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898  \n\n\u6211\u4eec\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u7684\u70b9\u6784\u5efa\u865a\u6811\u3002\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u8981\u591a\u8ba1\u7b97\u8fb9\u7684\u8d21\u732e\uff0c\u8003\u8651\u4e00\u6761\u8fb9\u7684\u8d21\u732e\uff0c\u5373\u4e3a\u8fd9\u6761\u8fb9\u4e0a\u6709\u591a\u5c11\u4e2a\u539f\u70b9\uff0c\u968f\u4fbf\u8f6c\u79fb\u4e00\u4e0b\u5c31\u597d\u4e86\u3002~~\u597d\u4e2a\u9b3c\u554a\uff0c\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u5927\u5bb6\u6ce8\u610f\u4e00\u4e0b~~  \n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(\\sum S \\cdot log n)$  \n\u5c31\u9171\uff0c\u8fd9\u9898\u5c31\u88ab\u6211\u4eec\u5207\u6389\u5566\u30fe(\u25cf\u00b4\u2200\uff40\u25cf) \n\n---\n# Code\n```cpp\n//Luogu P4606 [SDOI2018]\u6218\u7565\u6e38\u620f\n//Apr,8th,2019\n//\u5706\u65b9\u6811+\u865a\u6811\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nlong long read()\n{\n\tlong long x=0,f=1; char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int N=2*100000+100;\nvector <int> e[N],e2[N],e3[N];\nint n,m,q;\nint low[N],cnt,dfn_to,dfn[N],mstack[N],top;\nbool vis[N];\nvoid Tarjan(int now,int father)\n{\n\tvis[now]=true;\n\tdfn[now]=low[now]=++dfn_to;\n\tmstack[++top]=now;\n\tfor(int i=0;i<int(e[now].size());i++)\n\t\tif(vis[e[now][i]]==false)\n\t\t{\n\t\t\tTarjan(e[now][i],now);\n\t\t\tlow[now]=min(low[now],low[e[now][i]]);\n\t\t\tif(low[e[now][i]]>=dfn[now])\n\t\t\t{\n\t\t\t\te2[now].push_back(n+(++cnt));\n\t\t\t\twhile(mstack[top+1]!=e[now][i])\n\t\t\t\t\te2[n+cnt].push_back(mstack[top--]);\n\t\t\t}\n\t\t}\n\t\telse if(e[now][i]!=father)\n\t\t\tlow[now]=min(low[now],dfn[e[now][i]]);\n}\nint fa[N][21],depth[N],pre[N];\nvoid dfs(int now,int father)\n{\n\tfa[now][0]=father,depth[now]=depth[father]+1;\n\tdfn[now]=++dfn_to;\n\tpre[now]=pre[father]+(now<=n);\n\tfor(int i=1;i<=20;i++)\n\t\tfa[now][i]=fa[fa[now][i-1]][i-1];\n\tfor(int i=0;i<int(e2[now].size());i++)\n\t\tif(e2[now][i]!=father)\n\t\t\t\tdfs(e2[now][i],now);\n}\nint LCA(int x,int y)\n{\n\tif(depth[x]<depth[y]) swap(x,y);\n\tfor(int i=20;i>=0;i--)\n\t\tif(depth[x]-(1<<i) >= depth[y])\n\t\t\tx=fa[x][i];\n\tif(x==y) return x;\n\tfor(int i=20;i>=0;i--)\n\t\tif(fa[x][i]!=fa[y][i])\n\t\t\tx=fa[x][i],y=fa[y][i];\n\treturn fa[x][0];\n}\nbool cmp(int x,int y)\n{\n\treturn dfn[x]<dfn[y];\n}\nbool sp[N];\nint f[N];\nint GetSum(int x,int y) //(x,y)\n{\n\treturn pre[y]-pre[x]-(y<=n);\n}\nint dfs2(int now)\n{\n\tf[now]=0;\n\tfor(int i=0;i<int(e3[now].size());i++)\n\t\tf[now]+=dfs2(e3[now][i])+GetSum(now,e3[now][i]);\n\tif(sp[now]==false and now<=n and (now!=1 or e3[now].size()!=1))\n\t\tf[now]++;\n\tif(now==1 and e3[now].size()==1 and sp[now]==false)\n\t\tf[now]-=GetSum(now,e3[now][0]);\n\treturn f[now];\n}\nint main()\n{\n\tfreopen(\"4606.in\",\"r\",stdin);\n\tfreopen(\"4606.out\",\"w\",stdout);\n\t\n\tint T=read();\n\t\n\tfor(;T>0;T--)\n\t{\n\t\tn=read(),m=read();\n\t\t\n\t\tfor(int i=1;i<=2*n;i++)\n\t\t\te[i].clear(),e2[i].clear(),e3[i].clear();\n\t\tmemset(vis,0,sizeof vis);\n\t\tdfn_to=0;\n\t\t\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tint s=read(),t=read();\n\t\t\te[s].push_back(t);\n\t\t\te[t].push_back(s);\n\t\t}\n\t\t\n\t\tTarjan(1,1);\n\t\tdfn_to=0;\n\t\tdfs(1,1);\n\t\t\n\t\tq=read();\n\t\tstatic int a[N],rec[N];\n\t\tfor(int i=1;i<=q;i++)\n\t\t{\n\t\t\tm=read();\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\ta[j]=read();\n\t\t\t\n\t\t\tsort(a+1,a+1+m,cmp);\n\t\t\tmstack[top=1]=1,cnt=0;\n\t\t\tfor(int j=(a[1]==1?2:1);j<=m;j++)\n\t\t\t{\n\t\t\t\twhile(LCA(mstack[top],a[j])!=mstack[top])\n\t\t\t\t{\n\t\t\t\t\tint lca=LCA(mstack[top],a[j]);\n\t\t\t\t\tif(depth[lca] > depth[mstack[top-1]])\n\t\t\t\t\t{\n\t\t\t\t\t\te3[lca].push_back(mstack[top]);\n\t\t\t\t\t\trec[++cnt]=mstack[top],mstack[top]=lca;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\te3[mstack[top-1]].push_back(mstack[top]);\n\t\t\t\t\t\trec[++cnt]=mstack[top--];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmstack[++top]=a[j];\n\t\t\t}\n\t\t\twhile(top>1)\n\t\t\t{\n\t\t\t\te3[mstack[top-1]].push_back(mstack[top]);\n\t\t\t\trec[++cnt]=mstack[top--];\n\t\t\t}\n\t\t\trec[++cnt]=1;\n\t\t\t\n\t\t\tfor(int i=1;i<=m;i++)\n\t\t\t\tsp[a[i]]=true;\n\n\t\t\tprintf(\"%d\\n\",dfs2(1));\n\t\t\n\t\t\tfor(int i=1;i<=cnt;i++)\n\t\t\t\tsp[rec[i]]=false,e3[rec[i]].clear();\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n\n\n",
        "postTime": 1554718292,
        "uid": 52563,
        "name": "GoldenPotato137",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4606 \u3010[SDOI2018]\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "# \u5706\u65b9\u6811\u7684\u5b9a\u4e49\n\n\u5706\u65b9\u6811\u662f\u7528\u6765\u89e3\u51b3\u4ed9\u4eba\u638c\u56fe\u7684\u95ee\u9898\u7684\uff0c\u90a3\u4ec0\u4e48\u662f\u4ed9\u4eba\u638c\u56fe\u5462\uff1f\n\n\u5373\u4e0d\u5b58\u5728\u8fb9\u540c\u65f6\u5c5e\u4e8e\u591a\u4e2a\u73af\u7684\u65e0\u5411\u8fde\u901a\u56fe\u662f\u4e00\u68f5\u4ed9\u4eba\u638c\u3002\n\n## \u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u5b9a\u4e49\n\u8981\u4ecb\u7ecd\u5706\u65b9\u6811\uff0c\u9996\u5148\u8981\u4ecb\u7ecd\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u3002\n\n\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u56fe\u7684\u4e00\u4e2a\u5b9a\u4e49\u662f\uff1a\u56fe\u4e2d\u4efb\u610f\u4e24\u4e0d\u540c\u70b9\u4e4b\u95f4\u90fd\u6709\u81f3\u5c11\u4e24\u6761\u70b9\u4e0d\u91cd\u590d\u7684\u8def\u5f84\u3002\n\n\u4e00\u79cd\u7b80\u5355\u7684\u5b9a\u4e49\uff1a\u4e0d\u5b58\u5728\u5272\u70b9\u7684\u56fe\u3002\n\n\u4f46\u8fd9\u79cd\u5b9a\u4e49\u5bf9\u4e8e\u4e24\u70b9\u4e00\u8fb9\u7684\u56fe\u65f6\u662f\u6ca1\u7528\u7684\uff0c\u5b83\u6ca1\u6709\u5272\u70b9\uff0c\u4f46\u662f\u5e76\u4e0d\u80fd\u627e\u5230\u4e24\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u6761\u8def\u5f84\u3002\uff08\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u90a3\u4e00\u6761\u8def\u5f84\u53ef\u4ee5\u7b97\u4e24\u6b21\uff0c\u4f46\u7684\u786e\u6ca1\u6709\u76f8\u4ea4\uff0c\u56e0\u4e3a\u4e0d\u7ecf\u8fc7\u5176\u4ed6\u70b9\uff09\u3002\n\n\u5728\u70b9\u53cc\u8fde\u901a\u56fe\u5185\uff0c\u4e00\u4e2a\u70b9\u53ef\u80fd\u5c5e\u4e8e\u591a\u4e2a\u70b9\u53cc\uff0c\u4f46\u662f\u4e00\u6761\u8fb9\u5c5e\u4e8e\u6070\u597d\u4e00\u4e2a\u70b9\u53cc\u3002\n\n\u66f4\u591a\u5173\u4e8e\u6709\u5411\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u77e5\u8bc6\uff0c\u8bf7\u770b\u6211\u7684\u535a\u5ba2 $\\to$ [\u5f3a\u8fde\u901a\u5206\u91cf](https://www.cnblogs.com/orzz/p/15104647.html)\n\n\u66f4\u591a\u5173\u4e8e\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u77e5\u8bc6\uff0c\u8bf7\u770b\u6211\u7684\u535a\u5ba2 $\\to$ [\u53cc\u8fde\u901a\u5206\u91cf](https://www.cnblogs.com/orzz/p/15114866.html)\n\n## \u7ee7\u7eed\u4ecb\u7ecd\u5706\u65b9\u6811\n\n\u5173\u4e8e\u5706\u65b9\u6811\u7684\u5efa\u56fe\uff0c\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5c06\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u5185\u7684\u6240\u6709\u8fb9\u5220\u53bb\uff0c\u518d\u5c06\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u6bcf\u4e2a\u70b9\u5411\u4e00\u4e2a\u65b0\u5efa\u7684\u70b9\u8fde\u8fb9\uff0c\u8fd9\u4e2a\u65b0\u5efa\u7684\u70b9\u5373\u662f\u65b9\u70b9\u3002\n\n\u6240\u4ee5\u5728\u5706\u65b9\u6811\u4e2d\u6709 $n+c$ \u4e2a\u70b9\uff0c\u5176\u4e2d $n$ \u662f\u539f\u56fe\u70b9\u6570\uff0c$c$ \u662f\u539f\u56fe\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\u3002\n\n\u6bcf\u4e2a\u70b9\u53cc\u90fd\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u83ca\u82b1\u56fe\uff0c\u591a\u4e2a\u83ca\u82b1\u56fe\u901a\u8fc7\u539f\u56fe\u4e2d\u7684\u5272\u70b9\u8fde\u63a5\u5728\u4e00\u8d77\uff08\u56e0\u4e3a\u70b9\u53cc\u7684\u5206\u9694\u70b9\u662f\u5272\u70b9\uff09\u3002\n\n\u663e\u7136\uff0c\u5706\u65b9\u6811\u4e2d\u6bcf\u6761\u8fb9\u8fde\u63a5\u4e00\u4e2a\u5706\u70b9\u548c\u4e00\u4e2a\u65b9\u70b9\u3002\n\n\u5728\u4e0b\u9762\u8fd9\u5f20\u56fe\u4e2d\uff0c$[1,2,3,4,5]$ \u662f\u5706\u70b9\uff0c$[6,7]$ \u662f\u65b9\u70b9\u3002\n\n![](https://img-blog.csdnimg.cn/img_convert/a64ea1977df8894a39bf10c1ae9b80ab.png)\n\n\u800c\u5982\u679c\u5706\u65b9\u6811\u8fde\u901a\uff0c\u5219\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a\n\n* \u65b9\u70b9\u4e4b\u95f4\u4e0d\u4f1a\u5b58\u5728\u8fde\u8fb9\u3002\n\n* \u539f\u56fe\u7684\u5272\u70b9\u5c31\u662f\u5706\u65b9\u6811\u4e2d\u5ea6\u6570\u5927\u4e8e $1$ \u7684\u5706\u70b9\u3002\n\n* \u5706\u65b9\u6570\u662f\u4e00\u68f5\u975e\u5e38\u597d\u7684\u6811\uff0c\u5373\u70b9\u6570\u7b49\u4e8e\u8fb9\u6570\u52a0 $1$\u3002\n  \n* \u5706\u65b9\u6811\u4e0a\u4efb\u610f\u4e00\u6761\u8def\u5f84\u4e0a\u5706\u70b9\u65b9\u70b9\u95f4\u9694\u5206\u5e03\u3002\n\n* \u5982\u679c\u5706\u70b9\u7684 $size$ \u4e3a $1$\uff0c\u90a3\u4e48\u4e00\u4e2a\u5706\u70b9\u5b50\u6811\u7684 $size$ \u548c\u5c31\u662f\u5b83\u4e0b\u9762\u7684\u6240\u6709\u70b9\u7684\u6570\u91cf\u3002\n\n* \u5bf9\u4e8e\u4e00\u4e2a\u70b9\u53cc\u4e2d\u7684\u4e24\u70b9\uff0c\u5b83\u4eec\u4e4b\u95f4\u7b80\u5355\u8def\u5f84\u7684\u5e76\u96c6\uff0c\u6070\u597d\u5b8c\u5168\u7b49\u4e8e\u8fd9\u4e2a\u70b9\u53cc\uff0c\u5373\u540c\u4e00\u4e2a\u70b9\u53cc\u4e2d\u7684\u4e24\u4e0d\u540c\u70b9 $u$\uff0c$v$ \u4e4b\u95f4\u4e00\u5b9a\u5b58\u5728\u4e00\u6761\u7b80\u5355\u8def\u5f84\u7ecf\u8fc7\u7ed9\u5b9a\u7684\u5728\u540c\u4e00\u4e2a\u70b9\u53cc\u5185\u7684\u53e6\u4e00\u70b9 $w$\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8003\u8651\u4e24\u5706\u70b9\u5728\u5706\u65b9\u6811\u4e0a\u7684\u8def\u5f84\uff0c\u4e0e\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u65b9\u70b9\u76f8\u90bb\u7684\u5706\u70b9\u7684\u96c6\u5408\uff0c\u5c31\u7b49\u4e8e\u539f\u56fe\u4e2d\u4e24\u70b9\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u70b9\u96c6\u3002\n\n\u5982\u679c\u539f\u56fe\u4e2d\u67d0\u4e2a\u8fde\u901a\u5206\u91cf\u53ea\u6709\u4e00\u4e2a\u70b9\uff0c\u5219\u9700\u8981\u5177\u4f53\u60c5\u51b5\u5177\u4f53\u5206\u6790\uff0c\u6211\u4eec\u5728\u540e\u7eed\u8ba8\u8bba\u4e2d\u4e0d\u8003\u8651\u5b64\u7acb\u70b9\u3002\n\n\u6ce8\u610f\u4e00\u6761\u8fb9\u8fde\u63a5\u4e24\u4e2a\u70b9\u7684\u5728\u8fd9\u91cc\u4e0d\u7b97\u70b9\u53cc\u3002\n\n## \u5e7f\u4e49\u5706\u65b9\u6811\n\n\u666e\u901a\u5706\u65b9\u6811\u53ea\u80fd\u89e3\u51b3\u4ed9\u4eba\u638c\u56fe\u4e0a\u7684\u95ee\u9898\uff0c\u800c\u5e7f\u4e49\u5706\u65b9\u6811\u5219\u53ef\u4ee5\u5c06\u6240\u6709\u65e0\u5411\u56fe\u8f6c\u5316\u4e3a\u5706\u65b9\u6811\u5904\u7406\u3002\n\n\u5e7f\u4e49\u5706\u65b9\u6811\u6027\u8d28\uff1a\u5706\u70b9\u65b9\u70b9\u76f8\u95f4\uff0c\u4e0d\u5b58\u5728\u4e24\u4e2a\u2018\u2019\u76f8\u540c\u5f62\u72b6\u2018\u2019\u7684\u70b9\u76f8\u8fde\u3002\n\n\u4e0e\u5706\u65b9\u6811\u4e0d\u540c\u7684\u662f\uff0c\u5e7f\u4e49\u5706\u65b9\u6811\u9700\u8981\u628a\u4e00\u6761\u8fb9\u8fde\u63a5\u4e24\u4e2a\u70b9\u4e5f\u770b\u6210\u4e00\u4e2a\u70b9\u53cc\uff0c\u539f\u672c\u4e24\u4e2a\u5706\u70b9\u6709\u4e00\u6761\u8fb9\u76f8\u8fde\uff0c\u73b0\u5728\u5728\u4e2d\u95f4\u63d2\u5165\u4e00\u4e2a\u65b9\u70b9\u95f4\u9694\u5f00\u5c31\u597d\u4e86\u3002\n\n\u53ef\u4ee5\u53c2\u7167\u8fd9\u5f20\u56fe\n\n![](https://img-blog.csdnimg.cn/img_convert/51b720e058f7a5dc7dc77c9eb881274f.png)\n\n# \u5706\u65b9\u6811\u7684\u5e94\u7528\n\n[\u6d1b\u8c37 P4606 [SDOI2018]\u6218\u7565\u6e38\u620f](https://www.luogu.com.cn/problem/P4606)\n\n### \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u548c $q$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u51fa $s$ \u4e2a\u70b9\uff0c\u95ee\u5b58\u5728\u51e0\u4e2a\u70b9\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u70b9\u548c\u4ed6\u76f8\u8fde\u7684\u8fb9\u88ab\u53bb\u9664\u540e\uff0c\u8fd9 $s$ \u4e2a\u70b9\u4e2d\uff0c\u81f3\u5c11\u5b58\u5728\u4e00\u5bf9\u70b9\u4e92\u4e0d\u76f8\u901a\u3002\n### \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u8003\u8651\u5220\u6389\u54ea\u4e9b\u70b9\u624d\u80fd\u4f7f\u5f97\u56fe\u4e0a\u539f\u672c\u8fde\u901a\u7684\u4e24\u70b9\u53d8\u4e3a\u4e0d\u8fde\u901a\u3002\n\n\u663e\u7136\u5220\u6389\u4e24\u70b9\u7684\u7b80\u5355\u8def\u5f84\u4e2d\u5fc5\u7ecf\u7684\u5272\u70b9\u53ef\u4ee5\u4f7f\u5f97\u56fe\u4e0a\u539f\u672c\u8fde\u901a\u7684\u4e24\u70b9\u53d8\u4e3a\u4e0d\u8fde\u901a\u3002\n\n\u800c\u8fd9\u5728\u5706\u65b9\u6811\u4e0a\u5bf9\u5e94\u7684\u5c31\u662f\u4e24\u70b9\u8def\u5f84\u4e0a\u7684\u5706\u70b9\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u8f7b\u677e\u7684\u60f3\u5230\u4e00\u4e2a\u529e\u6cd5\uff1a \u76f4\u63a5\u627e\u51fa\u6240\u6709\u7684\u5706\u70b9\u4e0d\u5c31\u597d\u4e86\uff1f \n\n\u7136\u800c\uff0c\u6211\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u8fc7\u4e0d\u53bb\u7684\u3002\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u6240\u6709\u5706\u70b9\u5462\uff1f \u4e0d\u59a8\u6362\u4e00\u79cd\u601d\u8def\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u5706\u65b9\u6811\uff0c\u5982\u679c\u6211\u4eec\u80fd\u627e\u5230\u5176\u5305\u542b\u6240\u6709\u70b9\u7684\u6700\u5c0f\u7684\u8fde\u901a\u5757\uff0c\u7136\u540e\u5c06\u5176\u51cf\u6389 $s$\uff0c\u5c31\u662f\u6211\u4eec\u7684\u5706\u70b9\u7684\u6570\u91cf\u3002\n\n\u4f8b\u5982\u8fd9\u5f20\u56fe\uff1a\n\n![](https://img-blog.csdnimg.cn/a963aeba1770432391713f52acdc43f1.png)\n\n\u5047\u8bbe\u7ed9\u51fa\u7684 $s$ \u4e2a\u70b9\u5206\u522b\u4e3a\uff1a$4\u30015\u30016\u30017$\u3002\n\n\u5219\u5efa\u5b8c\u5706\u65b9\u6811\u5c31\u53d8\u6210\u8fd9\u6837\uff1a\n\n![](https://img-blog.csdnimg.cn/3645e2b68fa14a4da372465e038e1de1.png)\n\n\u56fe\u4e2d\u6ca1\u52a0\u6df1\u7684\u70b9\u5c31\u662f\u5706\u65b9\u6811\u4e2d\u7684\u65b9\u70b9\u3002\n\n\u6613\u5f97\uff0c\u4f7f\u7528 `Tarjan` \u7b97\u6cd5\u5efa\u51fa\u5706\u65b9\u6811\uff0c\u7136\u540e\u7b54\u6848\u5c31\u662f\u5706\u65b9\u6811\u4e0a\u5305\u542b\u6240\u6709\u5173\u952e\u70b9\u7684\u6700\u5c11\u70b9\u6570\u8054\u901a\u5757\u7684\u5706\u70b9\u6570\u91cf\u51cf\u53bb\u5173\u952e\u70b9\u7684\u6570\u91cf\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u8bbe\u5706\u70b9\u7684\u6743\u503c\u8bbe\u4e3a $1$ \uff0c\u65b9\u70b9\u7684\u6743\u503c\u4e3a $0$ \uff0c\u5c06\u70b9\u6743\u653e\u5230\u8fd9\u4e2a\u70b9\u4e0e\u5176\u7236\u8282\u70b9\u7684\u8fb9\u4e0a\u3002\n\n\u7136\u540e\u753b\u4e00\u4e2a\u56fe\uff0c\u53d1\u73b0\uff0c\u5982\u679c\u7531 `dfs` \u5e8f\u4ece\u5c0f\u5230\u5927\uff0c\u4ee5\u6b64\u8d70\u8fc7\u6240\u6709\u7684\u70b9\uff0c\u7136\u540e\u518d\u4ece\u7b2c $s$ \u4e2a\u70b9\u8d70\u56de\u7b2c $1$ \u4e2a\u70b9\u3002\n\n\u5728\u8d70\u8fc7\u8def\u5f84\u4e2d\uff0c\u5982\u679c\u4e0d\u8003\u8651\u6bcf\u76f8\u90bb\u4e24\u4e2a\u70b9\u7684 `LCA`\uff08\u6b64\u65f6\u6211\u4eec\u8d70\u7684\u662f\u6811\u4e0a\u6700\u77ed\u8def\u5f84\uff0c\u663e\u7136\u4f1a\u7ecf\u8fc7 `LCA`\uff0c\u8fd9\u91cc\u8bf4\u7684\u4e0d\u8003\u8651\u5c31\u662f\u4e0d\u628a\u5b83\u8ba1\u5165\u5728\u5185\uff09\uff0c\u6bcf\u4e2a\u70b9\u6070\u597d\u88ab\u8d70\u4e86\u4e24\u6b21\uff0c\u800c\u8fd9\u4e9b\u88ab\u8d70\u8fc7\u7684\u70b9\u6070\u597d\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u8054\u901a\u5757\u3002\n\n\u4e0d\u8fc7\u8fd9\u6837\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u7b2c\u4e00\u4e2a\u70b9\u548c\u7b2c $s$ \u4e2a\u70b9\u7684 `LCA` \u4f1a\u4e0d\u88ab\u7edf\u8ba1\uff0c\u6240\u4ee5\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u4e2a\u5706\u70b9\u7b54\u6848\u5c31\u518d\u52a0 $1$\u3002\n\n### AC CODE\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int _ = 100005;\n\nint n, m, q, cnt;\nvector<int> G[_], T[_ * 2];\n\nint dfn[_ * 2], low[_], cnt_node;\n\nstack<int> s;\n\nvoid Tarjan(int u)\n{\n    low[u] = dfn[u] = ++cnt_node;\n    s.push(u);\n    for (auto v : G[u])\n    {\n        if (!dfn[v])\n        {\n            Tarjan(v);\n            low[u] = min(low[u], low[v]);\n            if (low[v] == dfn[u])\n            {\n                ++cnt;\n                while (1)\n                {\n                    int x = s.top();\n                    s.pop();\n                    T[cnt].push_back(x);\n                    T[x].push_back(cnt);\n                    // cout << cnt << \" \" << x << endl;\n                    if (x == v)\n                        break;\n                }\n                T[cnt].push_back(u);\n                T[u].push_back(cnt);\n                // cout << cnt << \" \" << u << endl;\n            }\n        }\n        else\n            low[u] = min(low[u], dfn[v]);\n    }\n}\n\nint dep[_ * 2], fa[_ * 2][18], dis[_ * 2];\n\nvoid dfs(int u, int fz)\n{\n    dfn[u] = ++cnt_node;\n    dep[u] = dep[fa[u][0] = fz] + 1;\n    dis[u] = dis[fz] + (u <= n);\n    for (int j = 0; j < 17; ++j)\n        fa[u][j + 1] = fa[fa[u][j]][j];\n    for (auto v : T[u])\n        if (v != fz)\n            dfs(v, u);\n}\n\nint LCA(int x, int y)\n{\n    if (dep[x] < dep[y])\n        swap(x, y);\n    for (int j = 0, d = dep[x] - dep[y]; d; ++j, d >>= 1)\n        if (d & 1)\n            x = fa[x][j];\n    if (x == y)\n        return x;\n    for (int j = 17; ~j; --j)\n        if (fa[x][j] != fa[y][j])\n            x = fa[x][j], y = fa[y][j];\n    return fa[x][0];\n}\n\nint main()\n{\n    int TT;\n    scanf(\"%d\", &TT);\n    while (TT--)\n    {\n        scanf(\"%d%d\", &n, &m);\n        for (int i = 1; i <= n; ++i)\n        {\n            G[i].clear();\n            dfn[i] = low[i] = 0;\n        }\n        for (int i = 1; i <= n * 2; ++i)\n            T[i].clear();\n        for (int i = 1, x, y; i <= m; ++i)\n        {\n            scanf(\"%d%d\", &x, &y);\n            G[x].push_back(y);\n            G[y].push_back(x);\n        }\n        cnt = n;\n        cnt_node = 0;\n        Tarjan(1);\n        cnt_node = 0;\n        dfs(1, 0);\n        scanf(\"%d\", &q);\n        while (q--)\n        {\n            int S, A[_];\n            scanf(\"%d\", &S);\n            int Ans = -2 * S;\n            for (int i = 1; i <= S; ++i)\n                scanf(\"%d\", &A[i]);\n            sort(A + 1, A + S + 1, [](int i, int j)\n                 { return dfn[i] < dfn[j]; });\n            for (int i = 1; i <= S; ++i)\n            {\n                int u = A[i], v = A[i % S + 1];\n                Ans += dis[u] + dis[v] - 2 * dis[LCA(u, v)];\n            }\n            if (LCA(A[1], A[S]) <= n)\n                Ans += 2;\n            printf(\"%d\\n\", Ans / 2);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1628956907,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "P4606 [SDOI2018]\u6218\u7565\u6e38\u620f"
    }
]