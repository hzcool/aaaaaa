[
    {
        "content": "### P3280 [SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613\n\n\n\n---\n\n#### \u9898\u610f\n\n> $~~~~$ \u7ed9\u51fa\u9700\u8981\u62dc\u8bbf\u7684\u57ce\u5e02\u7684\u987a\u5e8f\uff0c\u6bcf\u4e2a\u57ce\u5e02\u53ef\u4ee5\u4e70\u5165\u6216\u5356\u51fa\u7ed9\u5b9a\u6700\u5927\u503c\u4ee5\u5185\u7684\u6570\u91cf\u7684\u91d1\u6761\u3002\u6709\u4e24\u79cd\u9053\u8def\uff0c\u4e00\u79cd\u4e0a\u9762\u9650\u5236\u643a\u5e26\u7684\u91d1\u6761\u4e2a\u6570\uff0c\u53e6\u4e00\u79cd\u4e0d\u9650\u5236\u3002\u5728\u6bcf\u4e2a\u57ce\u5e02\u7684\u4e70\u5165\u6216\u5356\u51fa\u7684\u91d1\u6761\u5c3d\u91cf\u6700\u5927\uff0c\u6c42\u6bcf\u6b21\u5356\u51fa\u7684\u91d1\u6761\u4e2a\u6570\u503c\u3002\n\n---\n\n#### \u9898\u89e3  \n\n$~~~~$ \u5176\u5b9e\u6211\u5199\u7684\u9898\u610f\u5df2\u7ecf\u628a\u8fd9\u9898\u7b80\u5316\u4e86\u3002  \n\n$~~~~$ \u5148\u6765\u770b\u4e24\u4e2a\u9650\u5236\u600e\u4e48\u89e3\u51b3\uff0c\u7531\u4e8e\u4e70\u5165\u7684\u65f6\u5019\u4e0d\u9700\u8981\u8f93\u51fa\uff0c\u5176\u5b9e\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5168\u90e8\u4e70\u4e0b\u6765\uff0c\u7136\u540e\u5728\u8def\u4e0a\u4e22\u6389\u3002\uff08\u5176\u5b9e\u4e22\u6389\u591a\u5c11\u5c31\u662f\u5c11\u4e70\u591a\u5c11\uff09\u6240\u4ee5\u76f4\u63a5\u5ffd\u7565\u9650\u5236\uff08b\uff09 \u5373\u53ef\u3002\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u9650\u5236\uff08a\uff09\u4e5f\u53ef\u4ee5\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\u5ffd\u7565\u6389\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u4e70\u5165\u76f4\u63a5\u5168\u4e70\u5c31\u53ef\u4ee5\u4e86\u3002~~\u6240\u4ee5\u8fd9\u4e24\u4e2a\u9650\u5236\u5b8c\u5168\u5c31\u662f\u6765\u5e72\u6270\u7684\u3002~~\n\n$~~~~$ \u518d\u6765\u770b\u5269\u4e0b\u7684\u90e8\u5206\uff0c\u4e24\u79cd\u9053\u8def\uff0c\u6709\u9650\u5236\u65f6\u6211\u4eec\u53ef\u4ee5\u60f3\u5230 [P1967 \u8d27\u8f66\u8fd0\u8f93](https://www.luogu.com.cn/problem/P1967 \"\u8def\u5f84\u4e0a\u6743\u503c\u6700\u5c0f\u503c\u6700\u5927\") \uff0c\u7528 Kruskal\u91cd\u6784\u6811 \u5c06\u6743\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u5373\u53ef\u3002\u81f3\u4e8e\u6ca1\u6709\u9650\u5236\u65f6\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5176\u9650\u5236\u4e3a\u65e0\u9650\u5927\uff08\u672c\u9898\u7684 $INF$ \u5f00\u5230  $10^9$ \u5373\u53ef\uff09\uff0c\u90a3\u5c31\u53c8\u53d8\u6210\u7b2c\u4e00\u79cd\u4e86\u3002  \n\n$~~~~$ \u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86\u3002\u6ce8\u610f\u6570\u7ec4\u8981\u5f00\u591f\u5927\uff0c\u6709\u65f6\u5019\u5b83\u4e0d\u591f\u4f1a\u7206 `WA` \u800c\u4e0d\u662f `RE`. \n\n---\n\n#### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#define ll long long\nusing namespace std;\nconst ll INF=1e18;\nll n,m,p;\nll tot,fa[400005],order[400005],gold[400005];\nvector <ll> G[400005]; \nstruct Edge{\n\tll u,v;\n\tll w;\n\tEdge(){}\n\tEdge(ll U,ll V,ll W){u=U,v=V,w=W;}\n}E[600005];\nll findSet(ll x)\n{\n\tif(fa[x]==x) return x;\n\telse return fa[x]=findSet(fa[x]);\n}\nvoid Kru()\n{\n\tll cnt=0;\n\tfor(ll i=1;i<=m+max(p,1ll)-1;i++)\n\t{\n\t\tll u=E[i].u,v=E[i].v,w=E[i].w;\n\t\tu=findSet(u),v=findSet(v);\n\t\tif(u!=v)\n\t\t{\n\t\t\ttot++;cnt++;\n\t\t\tgold[tot]=w;\n\t\t\tG[u].push_back(tot); G[tot].push_back(u); fa[u]=tot;\n\t\t\tG[v].push_back(tot); G[tot].push_back(v); fa[v]=tot;\n\t\t}\n\t\tif(cnt==n-1) return;\n\t}\n}\ninline bool cmp(Edge x,Edge y){return x.w>y.w;}\nll dep[400005],f[400005][20],lg[400005];\nvoid dfs(ll u,ll fat)\n{\n\tdep[u]=dep[fat]+1;\n\tf[u][0]=fat;\n\tfor(ll i=1;i<=lg[dep[u]];i++) f[u][i]=f[f[u][i-1]][i-1];\n\tfor(ll i=0;i<G[u].size();i++)\n\t{\n\t\tll v=G[u][i];\n\t\tif(v==fat) continue;\n\t\tdfs(v,u);\n\t} \n}\nll query(ll x,ll y)\n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\twhile(dep[x]>dep[y]) x=f[x][lg[dep[x]-dep[y]]-1];\n\tif(x==y) return gold[x];\n\tfor(ll k=lg[dep[x]]-1;k>=0;k--)\n\t{\n\t\tif(f[x][k]!=f[y][k]) x=f[x][k],y=f[y][k];\t\n\t}\n\treturn gold[f[x][0]];\n}\nint main() {\n\tll root;\n\tscanf(\"%lld %lld %lld\",&n,&m,&p);\n\tfor(ll i=1;i<=n;i++) fa[i]=i,lg[i]=lg[i-1]+(1<<lg[i-1]==i),scanf(\"%lld\",&order[i]);\t\n\tfor(ll i=1;i<=n;i++) fa[i+n]=i+n,lg[i+n]=lg[i+n-1]+(1<<lg[i+n-1]==i+n),scanf(\"%lld\",&gold[i]);\n\tfor(ll i=1,u,v,w;i<=m;i++)\n\t{\n\t\tscanf(\"%lld %lld %lld\",&u,&v,&w);\n\t\tE[i]=Edge(u,v,w);\n\t}\n\tif(p) scanf(\"%lld\",&root);\n\tfor(ll i=1,q;i<p;i++)\n\t{\n\t\tscanf(\"%lld\",&q);\n\t\tE[m+i]=Edge(root,q,INF);\n\t}\n\ttot=n;\n\tsort(E+1,E+m+max(p,1ll),cmp);\n\tKru();\n\t\n\tdfs(tot,0);\n\t\n\tll now=gold[order[1]];\n\tif(now<=0) puts(\"0\"),now=0;\n\tfor(ll i=1;i<n;i++)\n\t{\n\t\tll x=order[i],y=order[i+1];\n\t\tll re=query(x,y);\n\t\tnow=min(now,re);\n\t\tif(gold[y]>0) now+=gold[y];\n\t\telse\n\t\t{\n\t\t\tif(now+gold[y]>=0) printf(\"%lld\\n\",-gold[y]),now+=gold[y];\n\t\t\telse printf(\"%lld\\n\",now),now=0; \n\t\t}\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1598969916,
        "uid": 160701,
        "name": "Azaz\u0435l",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3280 \u3010[SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613 \u3011"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u5728[\u6211\u7684blog](https://www.cnblogs.com/TEoS/p/11789273.html)\n\n------------\n\n**\u601d\u8def\u5206\u6790**\n\n\u4e3a\u4e86\u8ba9\u4ea4\u6613\u989d\u5c3d\u91cf\u5927\uff0c\u663e\u7136\u6211\u4eec\u9700\u8981\u5c3d\u91cf\u591a\u5730\u4e70\u5165\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u57ce\u5e02\uff0c\u5230\u8fbe\u8fd9\u4e2a\u57ce\u5e02\u65f6\u643a\u5e26\u7684\u9ec4\u91d1\u53d7\u5230\u51e0\u4e2a\u6761\u4ef6\u7684\u5f71\u54cd\uff1a\u4e4b\u524d\u5356\u51fa\u7684\u9ec4\u91d1\uff0c\u4e4b\u524d\u80fd\u4e70\u5165\u7684\u6700\u591a\u7684\u9ec4\u91d1\uff0c\u524d\u4e00\u4e2a\u57ce\u5e02\u5230\u5f53\u524d\u57ce\u5e02\u7684\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u8fb9\u6743\u3002\u65e2\u7136\u4e0d\u9700\u8981\u8f93\u51fa\u4e70\u5165\u7684\u6570\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5c3d\u91cf\u591a\u5730\u4e70\u5165\uff0c\u7136\u540e\u518d\u6309\u7167\u8fb9\u6743\u7684\u9650\u5236\u524a\u51cf\u3002\u8fd9\u6837\uff0c\u521a\u597d\u5356\u5b8c\u7684\u9650\u5236\u4e5f\u5c31\u6ca1\u6709\u5f71\u54cd\u4e86\u3002\u5356\u51fa\u65f6\u5f53\u7136\u4e5f\u8981\u5c3d\u91cf\u90fd\uff0c\u56e0\u6b64\u5356\u51fa\u7684\u91cf\u5c31\u662f\u524d\u4e00\u4e2a\u57ce\u5e02\u80fd\u5e26\u5230\u5f53\u524d\u57ce\u5e02\u7684\u6700\u591a\u7684\u9ec4\u91d1\u548c\u5356\u51fa\u9650\u5236\u4e2d\u5c0f\u7684\u4e00\u4e2a\u3002\n\n\u663e\u7136\u6211\u4eec\u5e0c\u671b\u57ce\u5e02\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u8fb9\u6743\u6700\u5927\uff0c\u5373\u4f7f\u591a\u7ed5\u8def\u4e5f\u6ca1\u6709\u5173\u7cfb\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5148\u6c42\u51fa\u4e00\u68f5\u6700\u5927\u751f\u6210\u6811\uff0c\u7528kruskal\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u77e5\u9053\u6700\u5927\u751f\u6210\u6811\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u8fd9\u4e2a\u8ddd\u79bb\u53ef\u4ee5\u7528\u500d\u589e\u6216\u8005\u6811\u5256\u6765\u6c42\u3002\n\n\u5bf9\u4e8e\u6709\u5217\u8f66\u7ad9\u7684\u57ce\u5e02\uff0c\u53ef\u4ee5\u770b\u4f5c\u540c\u4e00\u4e2a\u57ce\u5e02\u3002\u6ce8\u610f\uff0c\u4e70\u5165\u548c\u5356\u51fa\u7684\u9650\u5236\u8fd8\u662f\u8981\u6309\u7167\u539f\u57ce\u5e02\u7b97\uff0c\u5728\u6c42\u6700\u5927\u751f\u6210\u6811\u548c\u8fdb\u884c\u6811\u5256\u5904\u7406\u8be2\u95ee\u65f6\u624d\u5408\u5e76\u3002\u8fd9\u91cc\u7528\u6709\u5217\u8f66\u7ad9\u7684\u7f16\u53f7\u6700\u5c0f\u7684\u57ce\u5e02\u6765\u4ee3\u8868\u8fd9\u4e9b\u57ce\u5e02\u7684\u4ee3\u8868\u7f16\u53f7\u3002\n\n\u6574\u7406\u4e00\u4e0b\u601d\u8def\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u57ce\u5e02\uff0c\u6211\u4eec\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n1. \u6c42\u51fa\u524d\u4e00\u4e2a\u57ce\u5e02\u6700\u591a\u80fd\u5e26\u5230\u5f53\u524d\u57ce\u5e02\u591a\u5c11\u9ec4\u91d1\n1. \u82e5\u5356\u51fa\uff0c\u5219\u8f93\u51fa\u9ec4\u91d1\u91cf\u548c\u5356\u51fa\u9650\u5236\u4e2d\u5c0f\u7684\u4e00\u4e2a\uff0c\u5e76\u7ef4\u62a4\u9ec4\u91d1\u91cf\uff1b\u82e5\u4e70\u5165\uff0c\u5219\u76f4\u63a5\u5f53\u505a\u5168\u90e8\u4e70\u5165\uff0c\u7ef4\u62a4\u9ec4\u91d1\u91cf\u5373\u53ef\u3002\n\n**\u5177\u4f53\u5b9e\u73b0**\n\n1. \u5efa\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\n\n\u8dd1\u4e00\u904dkruskal\u5373\u53ef\uff0c\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\n```cpp\nstruct Edge\n{\n\tint x,y,z;\n\t#define x(i) e[i].x\n\t#define y(i) e[i].y\n\t#define z(i) e[i].z\n}e[2*M];\n\nvoid add(int x,int y,int z)\n{\n\tver[++tot]=y,edge[tot]=z,Next[tot]=head[x],head[x]=tot;\n\tver[++tot]=x,edge[tot]=z,Next[tot]=head[y],head[y]=tot;\n}\n\nbool cmp(Edge a,Edge b)\n{\n\treturn a.z>b.z;\n}\n\nint get(int a)\n{\n\treturn fa[a]==a?a:fa[a]=get(fa[a]);\n}\n\nvoid kruskal()\n{\n\tsort(e+1,e+m+1,cmp);\n\tfor(int i=1;i<=n;i++)\n\t\tfa[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=p[x(i)]?minp:x(i),y=p[y(i)]?minp:y(i),fx,fy;//\u770b\u770b\u80fd\u5426\u5408\u5e76\n\t\tfx=get(x),fy=get(y);\n\t\tif(fx==fy)\n\t\t\tcontinue;\n\t\tfa[fx]=fy;\n\t\tadd(x,y,z(i));\n\t}\n}\n```\n2. \u6811\u5256\u9884\u5904\u7406\n\n\u6b63\u5e38\u7684\u6811\u5256\u9884\u5904\u7406\uff0c\u8fd9\u91cc\u7528\u6bcf\u6761\u8fb9\u4e24\u4e2a\u7aef\u70b9\u4e2d\u6df1\u5ea6\u66f4\u5927\u7684\u8282\u70b9\u5b58\u50a8\u8fd9\u6761\u8fb9\u7684\u6743\u503c\uff0c\u65b9\u4fbf\u5904\u7406\u3002\u5bf9\u6811\u94fe\u5256\u5206\u4e0d\u719f\u6089\u7684\u53ef\u4ee5[\u70b9\u51fb\u98df\u7528](https://www.cnblogs.com/TEoS/p/11359015.html)\u3002\n\n```cpp\nstruct Tree\n{\n\tint siz,f,d,seg,son,top;\n\t#define siz(i) t[i].siz\n\t#define f(i) t[i].f\n\t#define d(i) t[i].d\n\t#define seg(i) t[i].seg\n\t#define son(i) t[i].son\n\t#define top(i) t[i].top\n}t[N];\n\nstruct Seg\n{\n\tint l,r,rev;\n\tll sum;\n\t#define l(i) c[i].l\n\t#define r(i) c[i].r\n\t#define sum(i) c[i].sum\n\t#define rev(i) c[i].rev\n}c[N];\n\nvoid dfs1(int f,int x)\n{\n\tsiz(x)=1,d(x)=d(f)+1,f(x)=f;\n\tfor(int i=head[x];i;i=Next[i])\n\t\tif(ver[i]!=f)\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tdfs1(x,y);\n\t\t\tsiz(x)+=siz(y);\n\t\t\tif(siz(y)>siz(son(x)))\n\t\t\t\tson(x)=y;\n\t\t\tlen[y]=edge[i];//\u7528\u6df1\u5ea6\u8f83\u5927\u7684\u7aef\u70b9\u5b58\u50a8\u8fb9\u7684\u6743\u503c\n\t\t}\n}\n\nvoid dfs2(int x)\n{\n\tif(son(x))\n\t{\n\t\tseg(son(x))=++seg(0);\n\t\trev(seg(0))=son(x);\n\t\ttop(son(x))=top(x);\n\t\tdfs2(son(x));\n\t}\n\tfor(int i=head[x];i;i=Next[i])\n\t\tif(!top(ver[i]))\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tseg(y)=++seg(0);\n\t\t\trev(seg(0))=y;\n\t\t\ttop(y)=y;\n\t\t\tdfs2(y);\n\t\t}\n}\n\nvoid build(int p,int l,int r)\n{\n\tl(p)=l,r(p)=r;\n\tif(l==r)\n\t{\n\t\tsum(p)=len[rev(l)];\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(lson,l,mid),build(rson,mid+1,r);\n\tsum(p)=min(sum(lson),sum(rson));\n}\n\nseg(1)=++seg(0),rev(1)=1,top(1)=1,len[1]=IINF;\n```\n\n3. \u4f9d\u6b21\u5bf9\u6bcf\u4e2a\u57ce\u5e02\u8fdb\u884c\u5904\u7406\n\n\u5148\u7b97\u51fa\u4e0a\u4e00\u4e2a\u57ce\u5e02\u5230\u5f53\u524d\u57ce\u5e02\u6700\u591a\u80fd\u643a\u5e26\u591a\u5c11\u9ec4\u91d1\uff0c\u82e5\u5356\u51fa\uff0c\u5219\u53d6\u643a\u5e26\u91cf\u548c\u5356\u51fa\u9650\u5236\u4e2d\u5c0f\u7684\u4e00\u4e2a\u5356\u51fa\uff1b\u82e5\u4e70\u5165\uff0c\u5219\u5168\u90e8\u4e70\u5165\u3002\n\n\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\uff0c\u56e0\u4e3a\u662f\u7528\u6df1\u5ea6\u8f83\u5927\u7684\u7aef\u70b9\u5b58\u50a8\u8fb9\u7684\u6743\u503c\uff0c\u56e0\u6b64\u67e5\u8be2\u7684\u65f6\u5019\u4e0d\u80fd\u67e5\u8be2\u5230LCA\u5904\uff0c\u56e0\u4e3aLCA\u5b58\u50a8\u7684\u8fb9\u6743\u4e0d\u5728\u8def\u5f84\u4e0a\u3002\n\n```cpp\nll op(int x,int y)\n{\n\tll val=IINF;\n\tx=p[x]?minp:x,y=p[y]?minp:y;//\u770b\u770b\u80fd\u5426\u5408\u5e76\n\twhile(top(x)!=top(y))\n\t{\n\t\tif(d(top(x))<d(top(y)))\n\t\t\tswap(x,y);\n\t\tval=min(val,ask(1,seg(top(x)),seg(x)));\n\t\tx=f(top(x));\n\t}\n\tif(d(x)>d(y))\n\t\tswap(x,y);\n\tval=min(val,ask(1,seg(x)+1,seg(y)));//\u4e0d\u80fd\u67e5\u8be2\u5230LCA\u5904\n\treturn val;\n}\n\nvoid solve()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tnow=min(i!=1?op(rank[i-1],rank[i]):IINF,now);//\u67e5\u8be2\u4e0a\u4e00\u4e2a\u57ce\u5e02\u5230\u5f53\u524d\u57ce\u5e02\u7684\u8def\u5f84\u4e0a\u6700\u5c0f\u8fb9\u6743\n\t\tif(w[rank[i]]<0)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",min(-w[rank[i]],now));//\u5356\u51fa\u8f83\u5c0f\u7684\u4e00\u4e2a\n\t\t\tnow-=min(-w[rank[i]],now);//\u7ef4\u62a4\u5269\u4e0b\u7684\u9ec4\u91d1\n\t\t}\n\t\telse\n\t\t\tnow+=w[rank[i]];//\u5168\u90e8\u4e70\u5165\n\t}\n}\n```\n\n\n------------\n\u6700\u540e\u5949\u4e0a\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define lson p<<1\n#define rson p<<1|1\n#define ll long long\nusing namespace std;\nconst int N=1e6,M=1e6,INF=1e8;\nconst ll IINF=1e17;\nint n,m,q,tot,minp=INF;\nll now;\nint head[N],ver[2*M],Next[2*M];\nint rank[N],fa[N];\nll edge[2*M];\nll w[N],len[N];\nbool p[N];\nstruct Edge\n{\n\tint x,y,z;\n\t#define x(i) e[i].x\n\t#define y(i) e[i].y\n\t#define z(i) e[i].z\n}e[2*M];\nstruct Tree\n{\n\tint siz,f,d,seg,son,top;\n\t#define siz(i) t[i].siz\n\t#define f(i) t[i].f\n\t#define d(i) t[i].d\n\t#define seg(i) t[i].seg\n\t#define son(i) t[i].son\n\t#define top(i) t[i].top\n}t[N];\nstruct Seg\n{\n\tint l,r,rev;\n\tll sum;\n\t#define l(i) c[i].l\n\t#define r(i) c[i].r\n\t#define sum(i) c[i].sum\n\t#define rev(i) c[i].rev\n}c[N];\nbool cmp(Edge a,Edge b)\n{\n\treturn a.z>b.z;\n}\nvoid add(int x,int y,int z)\n{\n\tver[++tot]=y,edge[tot]=z,Next[tot]=head[x],head[x]=tot;\n\tver[++tot]=x,edge[tot]=z,Next[tot]=head[y],head[y]=tot;\n}\nvoid dfs1(int f,int x)\n{\n\tsiz(x)=1,d(x)=d(f)+1,f(x)=f;\n\tfor(int i=head[x];i;i=Next[i])\n\t\tif(ver[i]!=f)\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tdfs1(x,y);\n\t\t\tsiz(x)+=siz(y);\n\t\t\tif(siz(y)>siz(son(x)))\n\t\t\t\tson(x)=y;\n\t\t\tlen[y]=edge[i];\n\t\t}\n}\nvoid dfs2(int x)\n{\n\tif(son(x))\n\t{\n\t\tseg(son(x))=++seg(0);\n\t\trev(seg(0))=son(x);\n\t\ttop(son(x))=top(x);\n\t\tdfs2(son(x));\n\t}\n\tfor(int i=head[x];i;i=Next[i])\n\t\tif(!top(ver[i]))\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tseg(y)=++seg(0);\n\t\t\trev(seg(0))=y;\n\t\t\ttop(y)=y;\n\t\t\tdfs2(y);\n\t\t}\n}\nvoid build(int p,int l,int r)\n{\n\tl(p)=l,r(p)=r;\n\tif(l==r)\n\t{\n\t\tsum(p)=len[rev(l)];\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(lson,l,mid),build(rson,mid+1,r);\n\tsum(p)=min(sum(lson),sum(rson));\n}//2. \u6811\u5256\u9884\u5904\u7406\nll ask(int p,int l,int r)\n{\n\tif(l<=l(p) && r(p)<=r)\n\t\treturn sum(p);\n\tint mid=(l(p)+r(p))>>1;\n\tll val=IINF;\n\tif(l<=mid)\n\t\tval=min(val,ask(lson,l,r));\n\tif(r>mid)\n\t\tval=min(val,ask(rson,l,r));\n\treturn val;\n}\nint get(int a)\n{\n\treturn fa[a]==a?a:fa[a]=get(fa[a]);\n}\nvoid kruskal()\n{\n\tsort(e+1,e+m+1,cmp);\n\tfor(int i=1;i<=n;i++)\n\t\tfa[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=p[x(i)]?minp:x(i),y=p[y(i)]?minp:y(i),fx,fy;\n\t\tfx=get(x),fy=get(y);\n\t\tif(fx==fy)\n\t\t\tcontinue;\n\t\tfa[fx]=fy;\n\t\tadd(x,y,z(i));\n\t}\n}//1. \u5efa\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\nll op(int x,int y)\n{\n\tll val=IINF;\n\tx=p[x]?minp:x,y=p[y]?minp:y;\n\twhile(top(x)!=top(y))\n\t{\n\t\tif(d(top(x))<d(top(y)))\n\t\t\tswap(x,y);\n\t\tval=min(val,ask(1,seg(top(x)),seg(x)));\n\t\tx=f(top(x));\n\t}\n\tif(d(x)>d(y))\n\t\tswap(x,y);\n\tval=min(val,ask(1,seg(x)+1,seg(y)));\n\treturn val;\n}\nvoid read()\n{\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&rank[i]);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&w[i]);\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d%d%d\",&x(i),&y(i),&z(i));\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tp[x]=1;minp=min(minp,x);\n\t}\n}\nvoid solve()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tnow=min(i!=1?op(rank[i-1],rank[i]):IINF,now);\n\t\tif(w[rank[i]]<0)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",min(-w[rank[i]],now));\n\t\t\tnow-=min(-w[rank[i]],now);\n\t\t}\n\t\telse\n\t\t\tnow+=w[rank[i]];\n\t}\n}//3. \u4f9d\u6b21\u5bf9\u6bcf\u4e2a\u57ce\u5e02\u8fdb\u884c\u5904\u7406\nint main()\n{\n\tread();\n\tkruskal();\n\tseg(1)=++seg(0),rev(1)=1,top(1)=1,len[1]=IINF;\n\tdfs1(0,1),dfs2(1),build(1,1,n);\n\tsolve();\n\treturn 0;\n}\n```\n\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\uff0c\u6709\u4e0d\u8db3\u4e4b\u5904\u8bf7\u6307\u51fa\u3002",
        "postTime": 1572752347,
        "uid": 91534,
        "name": "TEoS",
        "ccfLevel": 6,
        "title": "P3280 [SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613"
    },
    {
        "content": "\uff08\u65e5\u5e38\u804a\u5929\uff09\uff0c\u4e0d\u8fc7\u4e5f\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u8fd8\u662f\u63a8\u9500\u4e00\u4e0b[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/174026/)\u5427\u3002\u8fd8\u6709\u8c22\u8c22\u4e4b\u524d\u7ed9\u6211\u9898\u89e3\u70b9\u8d5e\u7684\u5404\u4f4d\u5927\u4f6c\u3002\n\n\u5fc3\u7075\u9e21\u6c64\uff1a\u5982\u679c\u4f60\u8ff7\u60d8\u4e86\uff0c\u8bf7\u4e0d\u8981\u653e\u5f03\uff0c\u4f60\u603b\u80fd\u722c\u8fc7\u90a3\u770b\u4f3c\u9ad8\u5927\u7684\u5c71\u3002\uff08\u6b64\u751f\u4e0d\u6094\u5b66OI\u3002\uff09\n\n------------\n\u7b97\u6cd5\uff1a\u6811\u5256+\u6700\u5927\u751f\u6210\u6811\u3002\n\n\u9898\u610f\uff1a\u4f9d\u7167\u9898\u76ee\u6240\u7ed9\u7684\u987a\u5e8f\uff0c\u4e00\u4e2a\u4e00\u4e2a\u8d70\u57ce\u5e02\uff0c\u5176\u5b9e\u5c31\u662f\u627e\u5230\u57ce\u5e02\u95f4\u8def\u5f84\u6700\u5c0f\u7684\u627f\u91cd\u91cf\u3002\n\n------------\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u8d2a\u5fc3\u4e00\u4e0b\uff0c\u4ed6\u4e0d\u9700\u8981\u8f93\u51fa\u4e70\u4e86\u591a\u5c11\uff0c\u4e5f\u5c31\u662f\u4f60\u53ef\u4ee5\u5c3d\u91cf\u591a\u4e70\u5566\uff0c\u7136\u540e\u56e0\u5356\u51fa\u591a\u5c11\u800c\u8c03\u6574\u4e70\u4e86\u591a\u5c11\uff0c\u8fd9\u6837\u6761\u4ef6a\uff08~~\u4ed6\u5e0c\u671b\u4e0e\u6700\u540e\u4e00\u4e2a\u5ba2\u6237\u5b8c\u6210\u4ea4\u6613\u540e\uff0c\u624b\u4e0a\u6ca1\u6709\u5269\u4f59\u9ec4\u91d1~~\uff09\u5176\u5b9e\u5c31\u4e0d\u7528\u8003\u8651\u5566\u3002\n\n\u7b2c\u4e00\u4e2a\u601d\u60f3\uff0c\u7ed3\u675f\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u6bcf\u6b21\u5356\u51fa\u591a\u5c11\u4e0e\u4e70\u8fdb\u6765\uff0c\u5176\u5b9e\u5c31\u4e0e\u6211\u4eec\u4e0b\u4e00\u6b21\u8981\u8d70\u7684\u8def\u7a0b\u6700\u5c0f\u503c\u6709\u5173\uff0c\u6240\u4ee5\u4e3a\u4e86\uff0c\u5e26\u7684\u8d8a\u591a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u4e00\u68f5\u6700\u5927\u751f\u6210\u6811\uff08\u56e0\u4e3a\u4e0d\u7528\u8003\u8651\u8def\u7a0b\u591a\u5c11\u3002\uff09\n\n\u7b2c\u4e8c\u4e2a\u601d\u60f3\u7ed3\u675f\u3002\n\n\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n\tfor(int i=1;i<=n;i++) cin>>city[i];\n\t\n\tfor(int i=1;i<=n;i++) cin>>shop[i];\n\t\n\tfor(int i=1;i<=m;i++) cin>>road[i].x>>road[i].y>>road[i].w;\n\t\n    //\u5982\u679c\u662f\u5217\u8f66\uff0c\u8def\u7a0b\u627f\u91cd\u91cf\u5373\u662f\u65e0\u9650\u5927\u3002\u628a\u7b2c\u4e00\u4e2a\u5217\u8f66\u70b9\u5f53\u505ax\uff0c\u56e0\u4e3a\u662f\u53cc\u5411\u8fb9\uff0c\u8c01\u5f53x\u4e5f\u65e0\u6240\u8c13\u3002\n    \n\tif(q==1) cin>>wuliao;//\u4e00\u4e2a\u5217\u8f66\u7ad9\u80af\u5b9a\u5f88\u65e0\u804a\u3002\n\t\n\tif(q>=2) cin>>road[m+1].x>>road[m+1].y;\n\t\n\tif(q>=2) road[m+1].w=maxx;\n\t\n\tfor(int i=3+m;i<=q+m;i++) \n\t{\n\t\tcin>>road[i-1].y;\n\t\t\n\t\troad[i-1].x=road[m+1].x;\n\t\t\n\t\troad[i-1].w=maxx;\n\t}\n\t\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n\t\n\tsort(road+1,road+q+m,cmp);\n\t\n\tfor(int i=1;i<=q+m;i++)\n\t{\n\t\tint fax=find(fa[road[i].x]),fay=find(fa[road[i].y]);\n\t\t\n\t\tif(fax!=fay)\n\t\t{\n\t\t\tadd(road[i].x,road[i].y,road[i].w);\n\t\t\t\n\t\t\tadd(road[i].y,road[i].x,road[i].w);\n\t\t\t\n\t\t\tfa[fax]=fay;\n\t\t\t\n\t\t\tcnnt++;\n\t\t\t\n\t\t\tif(cnnt==n) break;\n\t\t}\n\t}\n```\n\n\u7b2c\u4e09\u4e2a\u601d\u60f3\uff0c\u5e94\u8be5\u4f1a\u6811\u5256\u7684\u5c31\u4e0d\u7528\u5f80\u4e0b\u770b\u5566\u3002\n\n\u5373\u662f\u6811\u4e0a\u627e\u8def\u5f84\u7684\u6700\u5c0f\u503c\u3002\u5f88\u660e\u663e\u5c31\u662f\u6811\u5256\uff0c\u628a\u8def\u5f84\u503c\u641e\u5230\u513f\u5b50\u5c31\u53ef\u4ee5\uff0c\u6bcf\u6b21\u8d70\u8def\u5f84\u5c31\u4e0d\u7528\u8d70LCA\u3002\n\n```cpp\nvoid build(int u,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\ttree[u]=www[l];\n\t\t\n\t\treturn;\n\t}\n\t\n\tint mid=(l+r)/2;\n\t\n\tbuild(u*2,l,mid);\n\t\n\tbuild(u*2+1,mid+1,r);\n\t\n\ttree[u]=min(tree[u*2],tree[u*2+1]);\n}\n\nint Query(int u,int l,int r,int x,int y)\n{\n\tif(l>=x&&r<=y) return tree[u];\n\t\n\tint mid=(l+r)/2,ans=maxx;\n\t\n\tif(x<=mid) ans=min(ans,Query(u*2,l,mid,x,y));\t\n\t\n\tif(y>mid) ans=min(ans,Query(u*2+1,mid+1,r,x,y));\n\t\n\treturn ans;\n}\n\nint query(int x,int y)\n{\n\tint ans=maxx;\n\t\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\t\n\t\tans=min(ans,Query(1,1,n,id[top[x]],id[x]));\n\t\t\n\t\tx=father[top[x]];\n\t}\n\t\n\tif(dep[x]>dep[y]) swap(x,y);\n\t\n\tans=min(ans,Query(1,1,n,id[x]+1,id[y]));\n\t//cout<<x+1<<\" \"<<id[y]<<'\\n';\n\treturn ans;\n}\n\nvoid dfs1(int u,int fat,int deep)\n{\n\tfather[u]=fat;\n\t\n\tdep[u]=deep;\n\t\n\tsize[u]=1;\n\t\n\tint maxson=-1;\n\t\n\tfor(int i=head[u];i;i=a[i].u)\n\t{\n\t\tint v=a[i].v,w=a[i].w;\n\t\t\n\t\tif(v==fat) continue;\n\t\t\n\t\tdfs1(v,u,deep+1);\n\t\t\n\t\tsize[u]+=size[v];\n\t\t\n\t\tww[v]=w;\n\t\t\n\t\tif(size[v]>maxson)\n\t\t{\n\t\t\tson[u]=v;\n\t\t\t\n\t\t\tmaxson=size[v];\n\t\t}\n\t}\n}\n\nvoid dfs2(int u,int topu)\n{\n\ttop[u]=topu;\n\t\n\tid[u]=++cnt;\n\t\n\twww[cnt]=ww[u];\n\t\n\tif(son[u]==0) return;\n\t\n\tdfs2(son[u],topu);\n\t\n\tfor(int i=head[u];i;i=a[i].u)\n\t{\n\t\tint v=a[i].v;\n\t\t\n\t\tif(v==son[u]||v==father[u]) continue;\n\t\t\n\t\tdfs2(v,v);\n\t}\n}\n```\n\n\u6700\u540e\u5373\u662f\u4e70\u6700\u591a\u7684\uff0c\u5356\u6700\u591a\u7684\u3002\n\n```cpp\n\tfor(int i=1;i<n;i++)\n\t{\n\t\t\n\t\tif(shop[city[i]]>=0) anss=min(anss+shop[city[i]],query(city[i],city[i+1]));\n\t\t\n\t\telse \n\t\t{\t\n\t\t\tcout<<min(anss,-shop[city[i]])<<'\\n';\n\t\t\t\n\t\t\tanss=max((int)0,anss+shop[city[i]]);\n\t\t\n\t\t    anss=min(anss,query(city[i],city[i+1]));\n\t\t}\n\t\t\n\t\t//cout<<\"anss:\"<<query(city[i],city[i+1])<<'\\n';\n\t}\n\t\n\tif(shop[city[n]]<0) cout<<min(anss,-shop[city[n]])<<'\\n';\n\n```\n\n\u4e0b\u9762\u662f\u5b8c\u6574\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\nconst int maxx=1e17+1000;\n\nint head[300500],cntt,tree[1200500],www[300500],top[300500],dep[300500],n,fa[300500],father[300500];\n\nint size[300500],son[300500],ww[300500],id[300500],m,q,city[300500],shop[300500],anss,wuliao,cnt,cnnt=1;\n\nstruct nod{\n\tint x,y,w;\n}road[300500];\n\nbool cmp(nod a,nod b)\n{\n\treturn a.w>b.w;\n}\n\nstruct node{\n\tint u,v,w;\n}a[300500];\n\nvoid add(int u,int v,int w)\n{\n\ta[++cntt].u=head[u];\n\t\n\ta[cntt].v=v;\n\t\n\thead[u]=cntt;\n\t\n\ta[cntt].w=w;\n}\n\nvoid build(int u,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\ttree[u]=www[l];\n\t\t\n\t\treturn;\n\t}\n\t\n\tint mid=(l+r)/2;\n\t\n\tbuild(u*2,l,mid);\n\t\n\tbuild(u*2+1,mid+1,r);\n\t\n\ttree[u]=min(tree[u*2],tree[u*2+1]);\n}\n\nint Query(int u,int l,int r,int x,int y)\n{\n\tif(l>=x&&r<=y) return tree[u];\n\t\n\tint mid=(l+r)/2,ans=maxx;\n\t\n\tif(x<=mid) ans=min(ans,Query(u*2,l,mid,x,y));\t\n\t\n\tif(y>mid) ans=min(ans,Query(u*2+1,mid+1,r,x,y));\n\t\n\treturn ans;\n}\n\nint query(int x,int y)\n{\n\tint ans=maxx;\n\t\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\t\n\t\tans=min(ans,Query(1,1,n,id[top[x]],id[x]));\n\t\t\n\t\tx=father[top[x]];\n\t}\n\t\n\tif(dep[x]>dep[y]) swap(x,y);\n\t\n\tans=min(ans,Query(1,1,n,id[x]+1,id[y]));\n\t//cout<<x+1<<\" \"<<id[y]<<'\\n';\n\treturn ans;\n}\n\nint find(int u)\n{\n\tif(fa[u]==u) return u;\n\t\n\telse return fa[u]=find(fa[u]);\n}\n\nvoid dfs1(int u,int fat,int deep)\n{\n\tfather[u]=fat;\n\t\n\tdep[u]=deep;\n\t\n\tsize[u]=1;\n\t\n\tint maxson=-1;\n\t\n\tfor(int i=head[u];i;i=a[i].u)\n\t{\n\t\tint v=a[i].v,w=a[i].w;\n\t\t\n\t\tif(v==fat) continue;\n\t\t\n\t\tdfs1(v,u,deep+1);\n\t\t\n\t\tsize[u]+=size[v];\n\t\t\n\t\tww[v]=w;\n\t\t\n\t\tif(size[v]>maxson)\n\t\t{\n\t\t\tson[u]=v;\n\t\t\t\n\t\t\tmaxson=size[v];\n\t\t}\n\t}\n}\n\nvoid dfs2(int u,int topu)\n{\n\ttop[u]=topu;\n\t\n\tid[u]=++cnt;\n\t\n\twww[cnt]=ww[u];\n\t\n\tif(son[u]==0) return;\n\t\n\tdfs2(son[u],topu);\n\t\n\tfor(int i=head[u];i;i=a[i].u)\n\t{\n\t\tint v=a[i].v;\n\t\t\n\t\tif(v==son[u]||v==father[u]) continue;\n\t\t\n\t\tdfs2(v,v);\n\t}\n}\n\nsigned main()\n{\n\tcin>>n>>m>>q;\n\t\n\tfor(int i=1;i<=n;i++) cin>>city[i];\n\t\n\tfor(int i=1;i<=n;i++) cin>>shop[i];\n\t\n\tfor(int i=1;i<=m;i++) cin>>road[i].x>>road[i].y>>road[i].w;\n\t\n\tif(q==1) cin>>wuliao;\n\t\n\tif(q>=2) cin>>road[m+1].x>>road[m+1].y;\n\t\n\tif(q>=2) road[m+1].w=maxx;\n\t\n\tfor(int i=3+m;i<=q+m;i++) \n\t{\n\t\tcin>>road[i-1].y;\n\t\t\n\t\troad[i-1].x=road[m+1].x;\n\t\t\n\t\troad[i-1].w=maxx;\n\t}\n\t\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n\t\n\tsort(road+1,road+q+m,cmp);\n\t\n\tfor(int i=1;i<=q+m;i++)\n\t{\n\t\tint fax=find(fa[road[i].x]),fay=find(fa[road[i].y]);\n\t\t\n\t\tif(fax!=fay)\n\t\t{\n\t\t\tadd(road[i].x,road[i].y,road[i].w);\n\t\t\t\n\t\t\tadd(road[i].y,road[i].x,road[i].w);\n\t\t\t\n\t\t\t//cout<<road[i].x<<\" \"<<road[i].y<<'\\n';\n\t\t\t\n\t\t\tfa[fax]=fay;\n\t\t\t\n\t\t\tcnnt++;\n\t\t\t\n\t\t\tif(cnnt==n) break;\n\t\t}\n\t}\n\t\n\t//ww[1]=maxx;\n\t\n\tdfs1(1,0,1);\n\t\n\tdfs2(1,1);\n\t\n\tbuild(1,1,n);\n\t\n\t//anss=shop[city[1]];\n\t\n\tfor(int i=1;i<n;i++)\n\t{\n\t\t\n\t\tif(shop[city[i]]>=0) anss=min(anss+shop[city[i]],query(city[i],city[i+1]));\n\t\t\n\t\telse \n\t\t{\t\n\t\t\tcout<<min(anss,-shop[city[i]])<<'\\n';\n\t\t\t\n\t\t\tanss=max((int)0,anss+shop[city[i]]);\n\t\t\n\t\t    anss=min(anss,query(city[i],city[i+1]));\n\t\t}\n\t\t\n\t\t//cout<<\"anss:\"<<query(city[i],city[i+1])<<'\\n';\n\t}\n\t\n\tif(shop[city[n]]<0) cout<<min(anss,-shop[city[n]])<<'\\n';\n\t\t\n\treturn 0;\n\t\n}\n```\n\n\u5343\u4e07\u4e0d\u8981\u5fd8\u4e86\u5356\u51fa\u53bb\u4e4b\u540e\u8d70\u5230\u4e0b\u4e00\u4e2a\u57ce\u5e02\uff0c\u4e5f\u8981\u770b\u8def\u5f84\u6700\u5c0f\u503c\u3002",
        "postTime": 1568676829,
        "uid": 174026,
        "name": "\u6b27\u9e70",
        "ccfLevel": 0,
        "title": "P3280 [SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613\u9898\u89e3"
    },
    {
        "content": "# \u3010SCOI2013\u3011\u6469\u6258\u8f66\u4ea4\u6613\n## \u4e0b\u9762\u7ed9\u4e00\u4e2a\u6bd4\u8f83\u6e05\u695a\u4e00\u70b9\u7684\u9898\u9762\n\nmzry1992 \u5728\u6253\u5b8c\u540a\u9488\u51fa\u9662\u4e4b\u540e\uff0c\u4e70\u4e86\u8f86\u65b0\u6469\u6258\u8f66\uff0c\u5f00\u59cb\u4e86\u5728\u5468\u8fb9\u57ce\u5e02\u7684\u9ec4\u91d1\u8fd0\u9001\u751f\u610f\u3002\n\n\u5728 mzry1992 \u751f\u6d3b\u7684\u5730\u65b9\uff0c\u57ce\u5e02\u4e4b\u95f4\u662f\u7528\u53cc\u5411\u9ad8\u901f\u516c\u8def\u8fde\u63a5\u7684\uff0c\u53e6\u5916\uff0c\u6bcf\u6761\u9ad8\u901f\u516c\u8def\u6709\u4e00\u4e2a\u8f7d\u91cd\u4e0a\u9650\uff0c\u5373\u5728\u4e0d\u8003\u8651\u9a7e\u9a76\u5458\u548c\u6469\u6258\u8f66\u91cd\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6240\u8f7d\u8d27\u7269\u7684\u91cf\u8d85\u8fc7\u67d0\u4e2a\u503c\uff0c\u5219\u4e0d\u80fd\u9a76\u4e0a\u8be5\u6761\u9ad8\u901f\u516c\u8def\u3002\n\n\u4eca\u5e74\uff0c mzry1992 \u4e00\u5171\u6536\u5230\u4e86\u6765\u81ean \u4e2a\u4e0d\u540c\u57ce\u5e02\u7684 n \u4efd\u5b9a\u8ba2\u5355\uff0c\u6bcf\u4e2a\u8ba2\u5355\u8981\u6c42\u5356\u51fa\u4e0a\u9650\u4e3a\u4e00\u5b9a\u91cf\u7684\u9ec4\u91d1\uff0c\u6216\u662f\u8981\u6c42\u4e70\u5165\u4e0a\u9650\u4e3a\u4e00\u5b9a\u91cf\u7684\u9ec4\u91d1\u3002\u7531\u4e8e\u8ba2\u5355\u5e76\u4e0d\u662f\u540c\u65f6\u53d1\u6765\u7684\uff0c\u4e3a\u4e86\u7ef4\u62a4\u751f\u610f\u4e0a\u7684\u540d\u58f0\uff0cmzry1992 \u4e0d\u5f97\u4e0d\u6309\u7167\u8ba2\u5355\u53d1\u6765\u7684\u987a\u5e8f\u4e0e\u5ba2\u6237\u8fdb\u884c\u4ea4\u6613\u3002\n\n\u4ed6\u4e0e\u7b2c i \u4e2a\u5ba2\u6237\u8fdb\u884c\u4ea4\u6613\u7684\u5177\u4f53\u6b65\u9aa4\u662f\uff1a\n1. \u524d\u5f80\u7b2c i \u4e2a\u5ba2\u6237\u6240\u5728\u57ce\u5e02\u3002\u5f53\u7136\uff0c\u4e2d\u9014\u662f\u5b8c\u5168\u5141\u8bb8\u7ecf\u8fc7\u5176\u4ed6\u57ce\u5e02\u7684\u3002\n2. \u4e0e\u7b2c i \u4e2a\u5ba2\u6237\u8fdb\u884c\u4ea4\u6613\u3002\n\u4f46\u6709\u4e24\u4e2a\u9650\u5236\uff1a\n\n(a) \u4e0e\u6700\u540e\u4e00\u4e2a\u5ba2\u6237\u5b8c\u6210\u4ea4\u6613\u540e\uff0c\u624b\u4e0a\u6ca1\u6709\u5269\u4f59\u9ec4\u91d1\u3002\n(b) \u7531\u4e8e\u9ec4\u91d1\u662f\u5f88\u8d35\u91cd\u7684\u7269\u54c1\uff0c\u4e0d\u80fd\u51fa\u73b0\u56e0\u4e3a\u4e70\u5165\u8fc7\u591a\u9ec4\u91d1\u800c\u9020\u6210\u5728\u4ee5\u540e\u7684\u8fd0\u9001\u8fc7\u7a0b\u4e2d\u4e0d\u5f97\u4e0d\u4e22\u5f03\u9ec4\u91d1\u7684\u60c5\u51b5\u3002\n\nmzry \u5e0c\u671b\u603b\u4ea4\u6613\u989d\u6700\u5927\uff0c\u5176\u6b21\u4ed6\u5e0c\u671b\u5356\u51fa\u4ea4\u6613\u989d\u5e8f\u5217\u7684\u5b57\u5178\u5e8f\u6700\u5927\u3002\u5176\u4e2d\u5b57\u5178\u5e8f\u6307\u7684\u662f\u5148\u6bd4\u8f83\u7b2c\u4e00\u6b21\u5356\u51fa\u4ea4\u6613\u989d\uff0c\u82e5\u76f8\u7b49\u5219\u6bd4\u8f83\u4e0b\u4e00\u6b21\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u4e00\u5f00\u59cb\uff0cmzry1992 \u4f4d\u4e8e\u7b2c\u4e00\u4e2a\u8ba2\u5355\u5ba2\u6237\u6240\u5728\u7684\u57ce\u5e02\u3002\n\n\u73b0\u5728\u6709\u4e00\u4e2a\u597d\u6d88\u606f\uff0c\u6709\u4eba\u63d0\u4f9b\u4e86mzry1992 \u514d\u8d39\u8bd5\u7528\u5468\u8fb9\u57ce\u5e02\u7684\u5217\u8f66\u7cfb\u7edf\u7684\u8d44\u683c\u3002\u5177\u4f53\u6765\u8bb2\uff0c\u5982\u679c mzry1992 \u5e0c\u671b\u4ece A \u57ce\u5e02\u5230\u8fbe B \u57ce\u5e02\uff0c\u4e14 A\u3001B \u57ce\u5e02\u5747\u6709\u5217\u8f66\u7ad9\u7684\u8bdd\uff0c\u4ed6\u53ef\u4ee5\u643a\u5e26\u7740\u9ec4\u91d1\u4e0e\u6469\u6258\u8f66\u4ece A \u57ce\u5e02\u4e58\u5750\u5217\u8f66\u5230 B \u57ce\u5e02\uff0c\u8fd9\u91cc\u5047\u5b9a\u4e58\u5750\u5217\u8f66\u6ca1\u6709\u8f7d\u91cd\u9650\u5236\u3002\n\n\u73b0\u5728\u5df2\u77e5\u57ce\u5e02\u95f4\u7684\u4ea4\u901a\u7cfb\u7edf\u60c5\u51b5\u548c\u8ba2\u5355\u60c5\u51b5\uff0c\u8bf7\u5e2e\u52a9 mzry1992 \u8ba1\u7b97\u6bcf\u4e2a\u5411 mzry1992 \u8d2d\u4e70\u9ec4\u91d1\u7684\u5ba2\u6237\u7684\u8d2d\u4e70\u91cf\u3002\n\n## \u9898\u89e3\n\u663e\u7136\uff0c\u8fd9\u9898\u7684\u4e70\u5356\u9ec4\u91d1\u8fc7\u7a0b\u5f88\u7528\u6a21\u62df\u5c31\u53ef\u4ee5\u5b9e\u73b0\uff0c\u5173\u952e\u662f\u53ef\u4ee5\u4e70\u5356\u591a\u5c11\n\n\u9996\u5148\u9700\u8981\u660e\u786e\u4e00\u70b9\uff0c\u5c31\u662f\u6211\u4eec\u4e0d\u4e00\u5b9a\u8981\u6309\u7167\u9898\u76ee\u8bf4\u7684\u4e0d\u80fd\u4e22\u5f03\u9ec4\u91d1\uff0c\u5176\u5b9e\u53ef\u4ee5\u5168\u90e8\u4e70\u5b8c\uff0c\u4e4b\u540e\u5728\u8fc7\u4e0d\u53bb\u8def\u7684\u65f6\u5019\u518d\u4e22\u6389\uff0c\u8fd9\u6837\u5b50\u662f\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u7684\n\u7136\u540e\u4e70\u5356\u9ec4\u91d1\u7684\u8fc7\u7a0b\u5c31\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u8d2a\u5fc3\u4e86\uff0c\u9700\u8981\u4e70\u7684\u57ce\u5e02\u5168\u90e8\u4e70\u6765\uff0c\u9700\u8981\u5356\u7684\u57ce\u5e02\u80fd\u5356\u591a\u5c11\u5356\u591a\u5c11\n\n\u4e0b\u4e00\u4e2a\u91cd\u8981\u70b9\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u57ce\u5e02\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02\u4e2d\u8d1f\u91cd\u6700\u5c0f\u7684\u8fb9\uff08\u56e0\u4e3a\u4e24\u4e2a\u57ce\u5e02\u95f4\u53ef\u4ee5\u643a\u5e26\u7684\u9ec4\u91d1\u7684\u91cf\u662f\u7531\u8d1f\u91cd\u6700\u5c0f\u7684\u90a3\u6761\u8fb9\u51b3\u5b9a\u7684\uff09\uff0c\u7136\u540e\u56e0\u4e3a\u8981\u8fd0\u5c3d\u91cf\u591a\u9ec4\u91d1\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8981\u8ba9\u6700\u5c0f\u7684\u90a3\u6761\u8fb9\u7684\u8d1f\u91cd\u6700\u5927\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4ec0\u4e48\uff1f\u6700\u5927\u751f\u6210\u6811\uff01\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u8981\u4fdd\u7559\u539f\u56fe\u4e2d\u5c5e\u4e8e\u6700\u751f\u6210\u6811\u7684\u8fb9\u5373\u53ef\uff08\u81f3\u4e8e\u5217\u8f66\u7ad9\u600e\u4e48\u8fde\u8fb9\uff0c\u5176\u5b9e\u53ea\u8981\u76f8\u90bb\u5730\u8fde\u8fc7\u6765\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u6700\u540e\u5f62\u6210\u7684\u662f\u4e00\u68f5\u6811\uff09\n\u63a5\u7740\uff0c\u8981\u5728\u6811\u4e0a\u627e\u5230\u8def\u5f84\u8fb9\u6743\u7684\u6700\u5c0f\u503c\u5c31\u968f\u4fbf\u7528\u4ec0\u4e48\u65b9\u6cd5\u627e\u90fd\u884c\u4e86\uff0c\u53ef\u4ee5\u7528\u6c42LCA\u7684\u65b9\u5f0f\uff0c\u6211\u7528\u7684\u662f\u500d\u589e\uff0c\u5927\u4f6c\u7528\u6811\u5256\u548c Tarjan \u4e5f\u884c\n## CODE\n\n```cpp\n#include<cstdio>\n#include<string>\n#include<cmath>\n#include<algorithm>\n#define max(a,b) (((a)>(b))?(a):(b))\n#define min(a,b) (((a)<(b))?(a):(b))\n#define swap(a,b) (a)^=(b)^=(a)^=(b)\n#define R register ll\n#define N 100005\n#define M 300005\n#define ll long long\n#define inf 100000000000\nusing namespace std;\nstruct arr{ll u,v,w;}bian[M];\nstruct G{ll to,next,w;}e[N<<1];\nll n,m,q,go[N],train[N],tot,fa[N],cnt,f[N][20],dep[N],mxdep,head[N],b[N],g[N][20];;\ninline void read(ll &x)\n{\n\tx=0;ll f=1;char ch=getchar();\n\twhile (!isdigit(ch)) {if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();x*=f;\n}\ninline bool cmp(arr x,arr y) {return x.w>y.w;}\ninline void add(ll u,ll v,ll len)\n{\n\te[++cnt].to=v;e[cnt].w=len;\n\te[cnt].next=head[u];head[u]=cnt;\n}\ninline void dfs(ll u,ll fa)\n{\n\tfor (R i=head[u];i;i=e[i].next)\n\t{\n\t\tll v=e[i].to;if (v==fa) continue;\n\t\tf[v][0]=u;g[v][0]=e[i].w;dep[v]=dep[u]+1;mxdep=max(dep[v],mxdep);dfs(v,u);\n\t}\n}\ninline ll lca(ll x,ll y)\n{\n\tll mn=inf;\n\tif (dep[x]!=dep[y])\n\t{\n\t\tif (dep[x]<dep[y]) swap(x,y);\n\t\tfor (R i=log2(dep[x]-dep[y]);i>=0;--i)\n\t\t\tif (dep[f[x][i]]>dep[y]) mn=min(g[x][i],mn),x=f[x][i];\n\t\tmn=min(g[x][0],mn);x=f[x][0];\t\n\t}\n\tif (x==y) return mn;\n\tfor (R i=log2(dep[x]);i>=0;--i)\n\t\tif (f[x][i]!=f[y][i]) mn=min(mn,min(g[x][i],g[y][i])),x=f[x][i],y=f[y][i];\n\tmn=min(mn,min(g[x][0],g[y][0]));return mn; \n}\ninline ll find(ll k)\n{\n\tif (fa[k]==k) return k;return fa[k]=find(fa[k]);\n}\nint main()\n{\n\tread(n);read(m);read(q);\n\tfor (R i=1;i<=n;++i)\n\t\tread(go[i]),fa[i]=i;\n\tfor (R i=1;i<=n;++i)\n\t\tread(b[i]);\n\tfor (R i=1;i<=m;++i)\n\t\tread(bian[i].u),read(bian[i].v),read(bian[i].w);\n\tfor (R i=1;i<=q;++i)\n\t{\n\t\tread(train[i]);\n\t\tif (i>1) bian[++m].u=train[i-1],bian[m].v=train[i],bian[m].w=inf;\n\t}\n\tsort(bian+1,bian+1+m,cmp);ll tot=1;\n\tfor (R i=1;i<=m;++i)\n\t{\n\t\tll f1=find(bian[i].u),f2=find(bian[i].v);\n\t\tif (f1!=f2)\n\t\t{\n\t\t\tadd(bian[i].u,bian[i].v,bian[i].w);\n\t\t\tadd(bian[i].v,bian[i].u,bian[i].w);\n\t\t\t++tot;fa[f1]=f2;if (tot==n) break;\n\t\t}\n\t}\n\tmxdep=1;dep[1]=1;dfs(1,0);\n\tfor (R j=1;j<=log2(mxdep);++j)\n\t\tfor (R i=1;i<=n;++i)\n\t\t\tf[i][j]=f[f[i][j-1]][j-1],g[i][j]=min(g[i][j-1],g[f[i][j-1]][j-1]);\n\tll now=go[1];tot=0;\n\tif (b[go[1]]>0) tot=b[go[1]];else printf(\"0\\n\");\n\tfor (R i=2;i<=n;++i)\n\t{\n\t\tll k=lca(go[i-1],go[i]);\n\t\tif (tot>k) tot=k;\n\t\tif (b[go[i]]>0) tot+=b[go[i]];\n\t\telse\n\t\t{\n\t\t\tprintf(\"%lld\\n\",min(-b[go[i]],tot));\n\t\t\ttot-=min(-b[go[i]],tot);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1625574088,
        "uid": 37885,
        "name": "\u51b7\u7b11\u53f9\u79cb\u8427",
        "ccfLevel": 0,
        "title": "\u3010SCOI2013\u3011\u6469\u6258\u8f66\u4ea4\u6613 \u9898\u89e3"
    },
    {
        "content": "\u521a\u5b66oi\u5f88\u83dc\u4e0d\u4f1a\u500d\u589e\uff09\u81ea\u5df1\u601d\u8003\u51fa\u4e86\u4e2a\u6c42\u4e0d\u4e86lca\u7684\u6811\u4e0a\u500d\u589e....\uff0c\u53ef\u662f\u8fd9\u6837\u7684\u500d\u589e\u4f3c\u4e4e\u6ca1\u6709\u7528,\u6211\u5f88\u6e05\u6d41\u5730\u5199\u4e86\u4e2a\u88f8\u6811\u94fe\u5256\u5206\uff0c\u5f53noip\u524d\u590d\u4e60\u677f\u5b50\u4e86,\u7ec6\u8282\u633a\u591a\u5199\u6302\u4e86\u4e00\u4e2a\u67e5\u8be2\u64cd\u4f5c,\u6700\u540e\u6570\u7ec4\u5f00\u592a\u5927\u75af\u72c2re\u3002\n\n------------\n\n\n\u601d\u8def:\u672c\u9898\u9898\u9762\u7684a\u7ea6\u675f\u5176\u5b9e\u6ca1\u6709\u4ec0\u4e48\u7528,\u53d1\u73b0\u76f4\u63a5\u8d2a\u5fc3\u5730\u80fd\u62ff\u5c31\u62ff,\u627e\u5230\u4e24\u70b9\u8def\u5f84\u4e0a\u6700\u5927\u7684\u6700\u5c0f\u5c0f\u6743\u8fb9,\u53d6\u4e2amin\u5c31\u884c\u4e86,\u5c3d\u7ba1\u4f60\u53ef\u80fd\u8868\u9762\u4e0a\u6700\u7ec8\u4f1a\u5269\u4f59,\u4f46\u662f\u672c\u9898\u4e0d\u8981\u6c42\u5177\u4f53\u65b9\u6848\uff08\u5728\u4ec0\u4e48\u5730\u65b9\u62ff\u4e86\u51e0\u4e2a\uff09\uff0c\u4f60\u53ef\u4ee5\u60f3\u8c61\u591a\u51fa\u6765\u7684\u90e8\u5206\u5176\u5b9e\u53ef\u4ee5\u81ea\u52a8\u8c03\u6574\u4e3a\u5408\u6cd5\u800c\u4e14\u4e0d\u5f71\u54cd\u7b54\u6848,\u6240\u4ee5\u76f4\u63a5\u8d2a\u5fc3\u591a\u62ff\u3002\n\n\n\n\u4e0b\u9762\u662f\u8fd9\u4e2a\u4ee3\u7801,\u987a\u9762\u9001\u4e86\u4e00\u7ec4\u81ea\u9020\u6837\u4f8b,\u770b\u8fd9\u4e48\u53ef\u7231\u7684\u6837\u4f8b\u7ed9\u4e2a\u8d5e\uff1f;\n```cpp\n#include<bits/stdc++.h>\n#define use 1,n-q+1,rt\n#define left l,mid,ls[pos]\n#define righ mid+1,r,rs[pos]\n#define fer(x,y,z) for(signed x=y;x<=z;x++)\n#define int long long\n#define N 510100\nusing namespace std;\nstruct p{int s,t,v;}e[N];bool pd[N];\nint n,m,q,a[N],link[N],nxt[N],to[N],las[N],val[N],pot,f[N];\nint v[N],d_[N],d[N],fa[N],si[N],son[N],top[N],dep[N];\nint ls[N],rs[N],mi[N],rt,cnt,pnt,ans,now;\ninline bool cmp(p b,p c){return b.v>c.v;}\nint bine(int x){return f[x]!=x?f[x]=bine(f[x]):x;}\ninline int maxx(int b,int c){return b>c?b:c;}\ninline int minn(int b,int c){return b>c?c:b;}\nvoid sak_bu(int l,int r,int &pos){\n\tif(!pos)pos=++cnt;if(l==r){mi[pos]=v[d[l]];return;}\n\tint mid=l+r>>1;sak_bu(left),sak_bu(righ);\n\tmi[pos]=minn(mi[ls[pos]],mi[rs[pos]]);\n}\nvoid sak_qu(int l,int r,int pos,int ql,int qr){\n\tif(ql==l&&qr==r){ans=minn(ans,mi[pos]);return;}int mid=l+r>>1;\n\tif(mid>=qr)sak_qu(left,ql,qr);else if(mid<ql)sak_qu(righ,ql,qr);\n\telse sak_qu(left,ql,mid),sak_qu(righ,mid+1,qr);\n}\nvoid dfs1(int x){\n\tsi[x]=1;for(int i=las[x];i;i=nxt[i])if(to[i]!=fa[x]){\n\t\tfa[to[i]]=x,dep[to[i]]=dep[x]+1;dfs1(to[i]),si[x]+=si[to[i]];\n\t\tif(si[to[i]]>si[son[x]])son[x]=to[i];v[to[i]]=val[i];\n\t}\n}\nvoid dfs2(int x,int t){\n\td_[x]=++cnt,d[cnt]=x,top[x]=t;\n\tif(son[x])dfs2(son[x],t);\n\tfor(int i=las[x];i;i=nxt[i])\n\t if(fa[x]!=to[i]&&son[x]!=to[i])dfs2(to[i],to[i]);\n}\nmain(){\n\tcin>>n>>m>>q;int x=1,y;\n\tfer(i,1,n)scanf(\"%lld\",&link[i]);\n\tfer(i,1,n)scanf(\"%lld\",&a[i]),f[i]=i;\n\tfer(i,1,m)scanf(\"%lld%lld%lld\",&e[i].s,&e[i].t,&e[i].v);\n\tfer(i,1,q)scanf(\"%lld\",&x),pd[x]=1;pot=x;\n\tfer(i,1,n)if(pd[i])f[i]=x;\n\tif(a[link[1]]<0)cout<<0<<'\\n';\n\t\n\tsort(e+1,e+1+m,cmp);int i=1;while(pnt<n-q){\n\t\tif(pd[e[i].s])e[i].s=pot;if(pd[e[i].t])e[i].t=pot;\n\t\tx=bine(e[i].s),y=bine(e[i].t);if(x!=y){\n\t\t pnt++,f[x]=y,x=e[i].s,y=e[i].t;\n\t\t nxt[++cnt]=las[x],las[x]=cnt,to[cnt]=y,val[cnt]=e[i].v,\n\t\t nxt[++cnt]=las[y],las[y]=cnt,to[cnt]=x,val[cnt]=e[i].v;\n\t\t}i++;\n\t}if(!q)q=1;cnt=0,dfs1(pot),dfs2(pot,pot),cnt=0,sak_bu(use);\n\n\tnow=maxx(now,a[link[1]]);fer(i,2,n){\n\t\tans=1e17,x=link[i-1],y=link[i];\n\t\tif(pd[x])x=pot;if(pd[y])y=pot;\n\t\twhile(top[x]!=top[y]){\n\t\t\tif(dep[top[x]]>dep[top[y]])sak_qu(use,d_[top[x]],d_[x]),x=fa[top[x]];\n\t\t\telse sak_qu(use,d_[top[y]],d_[y]),y=fa[top[y]];\n\t\t}\n\t\tif(dep[x]>dep[y])sak_qu(use,d_[y]+1,d_[x]);\n\t\telse if(x!=y)sak_qu(use,d_[x]+1,d_[y]);now=minn(ans,now);\n\t\tif(a[link[i]]<0)cout<<minn(-a[link[i]],now)<<'\\n',now=maxx(0,now+a[link[i]]);\n\t\telse now+=a[link[i]];\n\t}\n}\n//6 6 2\n//4 5 1 6 3 2\n//15 12 -4 20 -21 -13\n//1 3 23\n//1 4 12\n//1 5 20\n//1 6 9\n//4 2 10\n//2 6 15\n//3 5\n//ans:12 10 0\n```",
        "postTime": 1541423180,
        "uid": 59907,
        "name": "Sakura_\u68a6\u7476",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3280 \u3010[SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613 \u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u4e24\u4e2a\u57ce\u5e02\u95f4\u7684\u8def\u5f84\uff0c\u80fd\u8fd0\u9001\u7684\u9ec4\u91d1\u6570\u91cf\u662f\u8def\u5f84\u4e0a\u8fb9\u6743\u7684\u6700\u5c0f\u503c\u3002\n\n\u663e\u7136\uff0c\u5728 Kruskal \uff08\u6700\u5927\uff09\u751f\u6210\u6811\u4e0a\u8dd1\u5373\u53ef\u4f7f\u8fb9\u6743\u6700\u5c0f\u503c\u6700\u5927\u3002\n\n\u94c1\u8def\u7ebf\u53ef\u4ee5\u770b\u4f5c\u8fb9\u6743\u65e0\u7a77\u5927\u7684\u9053\u8def\u3002\u56e0\u6b64\uff0c\u5728\u8dd1\u6700\u5927\u751f\u6210\u6811\u524d\u53ef\u4ee5\u5c06\u94c1\u8def\u7ad9\u70b9\u95f4\u9884\u5148\u8fde\u8fb9\u3002\uff08\u7f29\u70b9\u5e94\u8be5\u4e5f\u6ca1\u95ee\u9898\uff0c\u4f46\u6ca1\u5fc5\u8981\u3002\uff09\n\n\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u6811\u4e0a\u95ee\u9898\u3002\n\n\u518d\u8003\u8651\u9898\u76ee\u7ed9\u5b9a\u7684\u4e24\u4e2a\u9650\u5236\u3002\n\n\u5c11\u4e70\u548c\u5728\u8def\u4e0a\u6254\u6389\u662f\u7b49\u4ef7\u7684\uff08\u6254\u6389 $1$ \u5355\u4f4d\u9ec4\u91d1\u5373\u76f8\u5f53\u4e8e\u8fd8\u56de\u5356\u65b9 $1$ \u5355\u4f4d\uff09\uff0c\u56e0\u6b64\u4e24\u9650\u5236\u53ef\u4ee5\u5ffd\u7565\u3002\n\n\u6811\u4e0a\u4e24\u70b9\u8def\u5f84\u4e0a\u8fb9\u6743\u6700\u5c0f\u503c\uff0c\u53ef\u4f7f\u7528\u500d\u589e\u5728\u5355\u6b21 $\\text{O(log n)}$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int maxn = 1e5 + 10, inf = 1e18;\nstruct Edge{\n\tint s, t, wei;\n\tconst bool operator <(const Edge &c)const{return wei > c.wei;}\n}e[maxn << 1];\nint n, m, q, ord[maxn], a[maxn], p[maxn], fa[maxn];\nvector<int> edge[maxn], wei[maxn];\nint f[maxn][20], w[maxn][20], dep[maxn];\n\ninline int getf(int x){return fa[x] == x ? x : fa[x] = getf(fa[x]);}\n\nvoid dfs(int u){\n\tdep[u] = dep[f[u][0]] + 1;\n\tfor(int i = 0; i < (int)edge[u].size(); i++){\n\t\tint v = edge[u][i];\n\t\tif(v == f[u][0]) continue;\n\t\tf[v][0] = u, w[v][0] = wei[u][i];\n\t\tdfs(v);\n\t}\n}\nint LCA(int x, int y){\n\tif(dep[x] < dep[y]) swap(x, y);\n\tint ret = inf, det = dep[x] - dep[y];\n\tfor(int i = 0; i < 20; i++) if(det & (1 << i)) ret = min(ret, w[x][i]), x = f[x][i];\n\tif(x == y) return ret;\n\tfor(int i = 19; i >= 0; i--)\n\t\tif(f[x][i] != f[y][i]) ret = min({ret, w[x][i], w[y][i]}), x = f[x][i], y = f[y][i];\n\treturn min({ret, w[x][0], w[y][0]});\n}\nsigned main(){\n\tscanf(\"%lld%lld%lld\", &n, &m, &q);\n\tfor(int i = 1; i <= n; i++) scanf(\"%lld\", &ord[i]);\n\tfor(int i = 1; i <= n; i++) scanf(\"%lld\", &a[i]);\n\tfor(int i = 1; i <= m; i++) scanf(\"%lld%lld%lld\", &e[i].s, &e[i].t, &e[i].wei);\n\tiota(fa + 1, fa + n + 1, 1);\n\tint tot = 0;\n\t//\u5c06\u5217\u8f66\u770b\u4f5c\u8fb9\u6743\u65e0\u7a77\u5927\u7684\u8fb9,\u76f4\u63a5\u52a0\u5165\u751f\u6210\u6811 \n\tfor(int i = 1; i <= q; i++){\n\t\tscanf(\"%lld\", &p[i]);\n\t\tif(i != 1){\n\t\t\tint fx = getf(p[i - 1]), fy = getf(p[i]);\n\t\t\tif(fx == fy) continue;\n\t\t\tfa[fy] = fx, tot++;\n\t\t\tedge[p[i]].push_back(p[i - 1]), wei[p[i]].push_back(inf);\n\t\t\tedge[p[i - 1]].push_back(p[i]), wei[p[i - 1]].push_back(inf);\n\t\t}\n\t}\n\t//Kruskal\n\tsort(e + 1, e + m + 1);\n\tfor(int i = 1; i <= m; i++){\n\t\tif(tot >= n - 1) break;\n\t\tint x = e[i].s, y = e[i].t, fx = getf(x), fy = getf(y);\n\t\tif(fx == fy) continue;\n\t\tfa[fx] = fy, tot++;\n\t\tedge[x].push_back(y), wei[x].push_back(e[i].wei);\n\t\tedge[y].push_back(x), wei[y].push_back(e[i].wei);\n\t}\n\t//\u500d\u589e\u9884\u5904\u7406 \n\tdfs(1);\n\tfor(int i = 1; i < 20; i++) for(int j = 1; j <= n; j++){\n\t\tf[j][i] = f[f[j][i - 1]][i - 1];\n\t\tw[j][i] = min(w[j][i - 1], w[f[j][i - 1]][i - 1]);\n\t}\n\t\n\tint gold = 0;\n\tfor(int i = 1; i < n; i++){\n\t\tint cur = ord[i], tar = ord[i + 1];\n\t\tint MAX = LCA(cur, tar);\n\t\tif(a[cur] > 0) gold = min(gold + a[cur], MAX);\n\t\telse{\n\t\t\tint sell = min(gold, -a[cur]);\n\t\t\tprintf(\"%lld\\n\", sell);\n\t\t\tgold = min(gold - sell, MAX);\n\t\t}\n\t}\n\tif(a[ord[n]] < 0) printf(\"%lld\\n\", min(gold, -a[ord[n]]));\n\treturn 0;\n}\n\n```",
        "postTime": 1658562141,
        "uid": 170890,
        "name": "Cxny",
        "ccfLevel": 7,
        "title": "\u9898\u89e3P3280\u3010[SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613\u3011"
    },
    {
        "content": "# Part 1 \u7b80\u5316\u6a21\u578b\n\u9996\u5148\u6211\u4eec\u7b80\u5316\u4e00\u4e0b\u6a21\u578b\uff0c\u9898\u610f\u662f\u8ba9\u6211\u4eec\u5728\u4e00\u5f20\u56fe\u4e0a\u627e\u5230\u4e24\u4e2a\u70b9\u95f4\u9650\u91cd\u6700\u5927\u7684\u8def\u5f84\uff0c\u800c\u4e14\u8fd9\u5f20\u56fe\u5b58\u5728\u4e00\u7c7b\u7279\u6b8a\u70b9\uff0c\u5b83\u4eec\u4e4b\u95f4\u53ef\u4ee5\u76f4\u63a5\u4f20\u9001\u4e14\u9650\u91cd\u65e0\u9650\u3002\n\n# Part 2 \u6700\u5927\u751f\u6210\u6811\uff01\n\n\u63a5\u7740\u6211\u4eec\u6765\u601d\u8003\u89e3\u9898\u65b9\u6cd5\uff0c\u5982\u679c\u4f60\u505a\u8fc7 P1967 \u8d27\u8f66\u8fd0\u8f93 \u8fd9\u9053\u9898\uff0c\u4f60\u80af\u5b9a\u53ef\u4ee5\u60f3\u5230\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u9650\u91cd\u6700\u5927\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u5176\u5b83\u8fb9\u7684\u8fb9\u6ca1\u6709\u5173\u7cfb\uff0c\u53ef\u4ee5\u5220\u6389\uff0c\u56e0\u6b64\uff0c\u5982\u679cq=0(\u6ca1\u6709\u7279\u6b8a\u70b9),\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u4e00\u68f5\u6700\u5927\u751f\u6210\u6811\uff0c\u7136\u540e\u901a\u8fc7\u500d\u589e\u6765\u6c42\u51fa\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6700\u5927\u9650\u91cd\u3002\n\n```cpp\n//\u6700\u5927\u751f\u6210\u6811\ninline void kruskal(){\n\tint k=0;\n\tfor(register int i=1;i<=n;i++)fat[i]=i;\n\tfor(register int i=1;i<=m;i++){\n\t\tint f1=getfat(a[i].u),f2=getfat(a[i].v);\n\t\tif(f1!=f2){\n\t\t\tfat[f2]=f1;\n\t\t\tint x=a[i].u,y=a[i].v;\n\t\t\taddt(x,y,a[i].w);\n\t\t\taddt(y,x,a[i].w);\n\t\t\tk++;\n\t\t\tif(k==n-1)break;\n\t\t}\n\t}\n}\n//\u500d\u589e\u7ef4\u62a4\u7684\u521d\u59cb\u5316\ninline void dfs1(int x,int fa){\n\tdep[x]=dep[fa]+1;\n\tf[x][0]=fa;\n\tfor(register int i=1;i<=20;i++){\n\t    f[x][i]=f[f[x][i-1]][i-1];\n\t    fmi[x][i]=min(fmi[x][i-1],fmi[f[x][i-1]][i-1]);\n    }\ninline void dfs1(int x,int fa){\n\tdep[x]=dep[fa]+1;\n\tf[x][0]=fa;\n\tfor(register int i=1;i<=20;i++){\n\t    f[x][i]=f[f[x][i-1]][i-1];\n\t    fmi[x][i]=min(fmi[x][i-1],fmi[f[x][i-1]][i-1]);\n    }\n\tfor(register int e=poi[x];e;e=nex[e]){\n\t\tif(to[e]==fa)continue;\n\t\tfmi[to[e]][0]=val[e];\n\t\tdfs1(to[e],x);\n\t\tcz[x]=max(cz[x],min(val[e],cz[to[e]]));\n\t}\n}\n//\u500d\u589e\u6c42\u516c\u8def\u4e0a\u4e24\u70b9\u6700\u5927\u9650\u91cd\ninline int glca(int x,int y){\n\tint re=1<<30;\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(register int i=20;i>=0;i--){\n\t\tif(dep[f[x][i]]>=dep[y]){\n\t\t\tre=min(re,fmi[x][i]);\n\t\t\tx=f[x][i];\n\t\t}\n\t}\n\tif(x==y)return re;\n\tfor(register int i=20;i>=0;i--){\n\t\tif(f[x][i]!=f[y][i]){\n\t\t\tre=min(re,min(fmi[x][i],fmi[y][i]));\n\t\t\tx=f[x][i];\n\t\t\ty=f[y][i];\n\t\t}\n\t}\n\tre=min(re,min(fmi[x][0],fmi[y][0]));\n\treturn re;\n}\n```\n\n# Part 3 \u8f66\u7ad9emmm?\n\u73b0\u5728\u8f66\u7ad9\u662f\u4e00\u4e2a\u68d8\u624b\u7684\u95ee\u9898\uff0c\u7531\u4e8e\u8f66\u7ad9\u6700\u591a\u53ef\u80fd\u6709 $ 1*10^5$\u4e2a,$O(n^2)$\u7684\u5728\u8f66\u7ad9\u4e4b\u95f4\u4e92\u76f8\u8fde\u8fb9\u663e\u7136\u662f\u4e0d\u5927\u53ef\u80fd\u7684\uff0c\u7136\u800c\uff0c\u663e\u7136\u7684\u4e00\u70b9\u662f\uff0c\u6211\u5982\u679c\u8981\u53bb\u8f66\u7ad9\uff0c\u80af\u5b9a\u662f\u53bb\u5230\u5f53\u524d\u4f4d\u7f6e\u8def\u5f84\u9650\u91cd\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u672c\u8eab\u662f\u8f66\u7ad9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9650\u91cd\u80af\u5b9a\u662f\u6b63\u65e0\u7a77\uff0c\u7565\u52a0\u601d\u8003\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u51fa\u7528\u4e24\u904d$O(n)$\u7684dfs\u7ef4\u62a4\u51fa\u6bcf\u4e2a\u70b9\u5230\u8f66\u7ad9\u7684\u6700\u5927\u9650\u91cd\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/s1ufr9pw.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n```cpp\ninline void dfs1(int x,int fa){\n\tdep[x]=dep[fa]+1;\n\tf[x][0]=fa;\n\tfor(register int i=1;i<=20;i++){\n\t    f[x][i]=f[f[x][i-1]][i-1];\n\t    fmi[x][i]=min(fmi[x][i-1],fmi[f[x][i-1]][i-1]);\n    }\n\tfor(register int e=poi[x];e;e=nex[e]){\n\t\tif(to[e]==fa)continue;\n\t\tfmi[to[e]][0]=val[e];\n\t\tdfs1(to[e],x);\n\t\tcz[x]=max(cz[x],min(val[e],cz[to[e]]));\n     //\u5148\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u5230\u5b50\u6811\u8f66\u7ad9\u7684\u6700\u5927\u9650\u91cd\n\t}\n}\n```\n![](https://cdn.luogu.com.cn/upload/image_hosting/f7pkyds0.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n```cpp\ninline void dfs2(int x,int up){\n\tcz[x]=max(cz[x],up);\n   //up\u662f\u7236\u8282\u70b9\u5230\u81ea\u5df1\u7684\u6700\u5927\u9650\u91cd\n   //\u6b64\u65f6\u7236\u8282\u70b9\u53ef\u4ee5\u662f\u4ece\u7236\u8282\u70b9\u7684\u4e0a\u9762\u8fc7\u6765\uff0c\n   //\u4e5f\u53ef\u4ee5\u662f\u4ece\u7236\u8282\u70b9\u7684\u5176\u4ed6\u5b50\u6811\u8fc7\u6765\n   //\u4e0e\u672c\u8eab\u81ea\u5df1\u7684\u5b50\u6811\u6bd4\u8f83\n\tfor(register int e=poi[x];e;e=nex[e]){\n\t\tif(to[e]==f[x][0])continue;\n\t\tdfs2(to[e],min(cz[x],val[e]));\n   //\u5411\u4e0b\u6df1\u641c\n\t}\n}\n```\n# Part 4 \u4e70\u5356\u3002\n\u6709\u4e86\u4e0a\u8ff0\u7684\u9884\u5904\u7406\uff0c\u6211\u4eec\u5c31\u4e5f\u53ef\u4ee5\u5f00\u59cb\u6109\u5feb\u5730\u505a\u751f\u610f\u4e86qwq,\u7531\u4e8e\u4e70\u5165\u65f6\u4e0d\u8981\u6c42\u8f93\u51fa\uff0c\u6240\u4ee5\u4e70\u591a\u4e86\u6211\u4eec\u4e22\u6389\u4e5f\u4e0d\u4f1a\u6709\u4eba\u77e5\u9053(\u5176\u5b9e\u5c31\u662f\u6ca1\u6709\u5f71\u54cd)\uff0c\u8fd9\u6837\u7684\u8bdd\u5728\u6bcf\u4e2a\u80fd\u4e70\u5165\u7684\u70b9\u5168\u90e8\u4e70\u5165\uff0c\u5230\u4e0b\u4e00\u4e2a\u70b9\u7684\u8def\u4e0a\u5c31\u4e22\u5230\u9650\u91cd\u4e3a\u6b62\uff0c\u5230\u4e86\u5356\u7684\u70b9\uff0c\u80fd\u5356\u591a\u5c11\u5356\u591a\u5c11\uff0c\u8fd9\u6837\uff0c\u4ee5\u4e00\u79cd\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u8fd9\u9053\u9898\u5c31\u5b8c\u7f8e\u89e3\u51b3\u4e86\n```cpp\nint fir,sec,now=0,lim;\n\tfor(register int i=1;i<=n;i++){\n\t\tif(i==n){\n        //\u5982\u679c\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u5c31\u6ca1\u6709\u5230\u4e0b\u4e00\u4e2a\u70b9\u7684\u9650\u91cd\u4e86\n\t\t\tif(b[sec]>0)continue;\n\t\t\tif(now>=(-b[sec])){\n\t\t\t    printf(\"%lld\\n\",-b[sec]);\n\t\t\t    now=now+b[sec];\n\t\t    }else{\n\t\t    \tprintf(\"%lld\\n\",now);\n\t\t    \tnow=0;\n\t\t\t}\n\t\t}else{\n\t\tfir=dd[i].bh;sec=dd[i+1].bh;\n\t\tlim=max(min(cz[fir],cz[sec]),glca(fir,sec));\n        //\u5230\u4e0b\u4e00\u4e2a\u70b9\u7684\u6700\u5927\u9650\u91cd\n\t\tif(b[fir]>0){\n\t\t\tif(now+b[fir]>lim)now=lim;\n\t\t\telse now+=b[fir];\n        //\u5982\u679c\u662f\u4e70\u5165\u70b9\uff0c\u5c31\u5168\u90e8\u4e70\u5165\uff0c\n        //\u7136\u540e\u548c\u9650\u91cd\u53d6min,\u76f8\u5f53\u4e8e\u591a\u4e86\u5c31\u4e22\u6389   \n\t\t}else{\n        //\u662f\u5356\u51fa\u70b9\n\t\t\tif(now+b[fir]>=0){\n        //\u5982\u679c\u5f53\u524d\u5269\u4e0b\u7684\u9ec4\u91d1\u6bd4\u5356\u51fa\u7684\u591a\n        //\u90a3\u5c31\u5356\u51fa\u8fd9\u4e48\u591a\n\t\t\t    printf(\"%lld\\n\",-b[fir]);\n\t\t\t    now=now+b[fir];\n\t\t    }else{\n        //\u5426\u5219\u5c31\u5168\u90e8\u5356\u51fa\u53bb    \n\t\t    \tprintf(\"%lld\\n\",now);\n\t\t    \tnow=0;\n\t\t\t}\n\t\t\tif(now>lim)now=lim;\n\t\t}\n\t    }\n\t}\n```\n# Part 5 Code\n\u5230\u8fd9\u91cc\uff0c\u672c\u7bc7\u9898\u89e3\u5c31\u57fa\u672c\u7ed3\u675f\u6765\uff0c\u7136\u540e\u7c98\u4e00\u4e0b\u6574\u4e2a\u4ee3\u7801\u5427\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int mxn=109951162776;\nstruct no{\n\tint bh,ord;\n}dd[410001];\nstruct edge{\n\tint u,v,w;\n}a[410001];\nint b[410001],fat[410001],n,m,fmi[410001][21],f[410001][21],dep[410001],cz[410001];\nint tot,poi[410001],to[410001],nex[410001],val[410001];\ninline bool cmp(no x,no y){\n\treturn x.ord<y.ord;\n}\ninline bool cmp2(edge x,edge y){\n\treturn x.w>y.w;\n}\ninline void addt(int x,int y,int z){\n\ttot++;\n\tnex[tot]=poi[x];poi[x]=tot;to[tot]=y;val[tot]=z;\n}\ninline int getfat(int x){\n\tif(x==fat[x])return x;\n\tfat[x]=getfat(fat[x]);\n\treturn fat[x];\n}\ninline void kruskal(){\n\tint k=0;\n\tfor(register int i=1;i<=n;i++)fat[i]=i;\n\tfor(register int i=1;i<=m;i++){\n\t\tint f1=getfat(a[i].u),f2=getfat(a[i].v);\n\t\tif(f1!=f2){\n\t\t\tfat[f2]=f1;\n\t\t\tint x=a[i].u,y=a[i].v;\n\t\t\taddt(x,y,a[i].w);\n\t\t\taddt(y,x,a[i].w);\n\t\t\tk++;\n\t\t\tif(k==n-1)break;\n\t\t}\n\t}\n}\ninline void dfs1(int x,int fa){\n\tdep[x]=dep[fa]+1;\n\tf[x][0]=fa;\n\tfor(register int i=1;i<=20;i++){\n\t    f[x][i]=f[f[x][i-1]][i-1];\n\t    fmi[x][i]=min(fmi[x][i-1],fmi[f[x][i-1]][i-1]);\n    }\n\tfor(register int e=poi[x];e;e=nex[e]){\n\t\tif(to[e]==fa)continue;\n\t\tfmi[to[e]][0]=val[e];\n\t\tdfs1(to[e],x);\n\t\tcz[x]=max(cz[x],min(val[e],cz[to[e]]));\n\t}\n}\ninline void dfs2(int x,int up){\n\tcz[x]=max(cz[x],up);\n\tfor(register int e=poi[x];e;e=nex[e]){\n\t\tif(to[e]==f[x][0])continue;\n\t\tdfs2(to[e],min(cz[x],val[e]));\n\t}\n}\ninline int glca(int x,int y){\n\tint re=1<<30;\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(register int i=20;i>=0;i--){\n\t\tif(dep[f[x][i]]>=dep[y]){\n\t\t\tre=min(re,fmi[x][i]);\n\t\t\tx=f[x][i];\n\t\t}\n\t}\n\tif(x==y)return re;\n\tfor(register int i=20;i>=0;i--){\n\t\tif(f[x][i]!=f[y][i]){\n\t\t\tre=min(re,min(fmi[x][i],fmi[y][i]));\n\t\t\tx=f[x][i];\n\t\t\ty=f[y][i];\n\t\t}\n\t}\n\tre=min(re,min(fmi[x][0],fmi[y][0]));\n\treturn re;\n}\ninline int read(){\n\tchar c=getchar();\n\tint s=0,fu=1;\n\twhile(c<'0' or c>'9'){\n\t\tif(c=='-')fu=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0' and c<='9'){\n\t\ts=(s<<1)+(s<<3)+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s*fu;\n}\nsigned main(){\n\t//freopen(\"5.in\",\"r\",stdin);\n\t//freopen(\"test.out\",\"w\",stdout);\n\tint q;\n\tn=read();m=read();q=read();\n\tfor(register int i=1;i<=n;i++){\n\t\tdd[i].bh=read();\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tb[i]=read();\n\t}\n\tfor(register int i=1;i<=m;i++){\n\t\ta[i].u=read();a[i].v=read();a[i].w=read();\n\t}\n\tsort(a+1,a+1+m,cmp2);\n\tfor(register int i=1;i<=q;i++){\n\t\tcz[read()]=mxn;\n\t}\n\tkruskal();\n\t//fmi[1][0]=1<<30;\n\tdfs1(1,0);\n\tdfs2(1,0);\n\tint fir,sec,now=0,lim;\n\tfor(register int i=1;i<=n;i++){\n\t\tif(i==n){\n\t\t\tif(b[sec]>0)continue;\n\t\t\tif(now>=(-b[sec])){\n\t\t\t    printf(\"%lld\\n\",-b[sec]);\n\t\t\t    now=now+b[sec];\n\t\t    }else{\n\t\t    \tprintf(\"%lld\\n\",now);\n\t\t    \tnow=0;\n\t\t\t}\n\t\t}else{\n\t\tfir=dd[i].bh;sec=dd[i+1].bh;\n\t\tlim=max(min(cz[fir],cz[sec]),glca(fir,sec));\n\t\tif(b[fir]>0){\n\t\t\tif(now+b[fir]>lim)now=lim;\n\t\t\telse now+=b[fir];\n\t\t}else{\n\t\t\tif(now+b[fir]>=0){\n\t\t\t    printf(\"%lld\\n\",-b[fir]);\n\t\t\t    now=now+b[fir];\n\t\t    }else{\n\t\t    \tprintf(\"%lld\\n\",now);\n\t\t    \tnow=0;\n\t\t\t}\n\t\t\tif(now>lim)now=lim;\n\t\t}\n\t    }\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1606034652,
        "uid": 95072,
        "name": "wudiss8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3280 \u3010[SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613 \u3011"
    },
    {
        "content": "\u9898\u610f:https://www.luogu.org/problem/P3280\n\nNOIP\u8d27\u8f66\u8fd0\u8f93\u52a0\u5f3a\u7248,\u589e\u52a0\u4e86\u94c1\u8def\u7684\u60c5\u51b5\n\n\u4e0e\u8d27\u8f66\u8fd0\u8f93\u4e00\u6837,\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\u8d2a\u5fc3,\u6bcf\u6b21\u627e\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8fb9\u6743\u6700\u5c0f\u7684\u5373\u53ef\n\n\u8003\u8651\u5728\u94c1\u8def\u57ce\u4e4b\u95f4\u79fb\u52a8\u662f\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd,\u56e0\u6b64\u53ea\u8981\u4fdd\u8bc1\u94c1\u8def\u57ce\u5e02\u4e4b\u95f4\u4e24\u4e24\u4e92\u901a\u5373\u53ef,\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u94c1\u8def\u57ce\u5e02,\u5c06\u5b83\u4eec\u4e4b\u95f4\u7684\u8fb9\u5efa\u6210\u4e00\u9897\u6811\u5373\u53ef,\u8fd9\u91cc\u94a6\u5b9a\u7b2c\u4e00\u4e2a\u94c1\u8def\u57ce\u4e3a\u6839,\u5c06\u5176\u4ed6\u94c1\u8def\u57ce\u5411\u5b83\u8fde\u8fb9\n\n\u5b9e\u73b0\u7528\u4e86\u514b\u9c81\u65af\u5361\u5c14\u91cd\u6784\u6811,\u6811\u4e0a\u500d\u589e\u4e5f\u80fd\u505a\n\ncode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int maxn=1e5+10;\nconst int maxm=3*1e5+10;\nint n,m,K,cnt,tot,st,t;\nint head[maxn<<1],b[maxn],val[maxn<<1],fa[maxn<<1],pos[maxn],dep[maxn<<1];\nint f[maxn<<1][20];\nstruct Edge{int u,v,w;}E[maxm];\nstruct edge{int to,nxt;}e[maxn<<2];\ninline bool cmp(Edge x,Edge y){return x.w>y.w;}\ninline void add(int u,int v)\n{\n\te[++cnt].nxt=head[u];\n\thead[u]=cnt;\n\te[cnt].to=v;\n}\ninline int find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\ninline void kruscal()\n{\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\tsort(E+1,E+m+1,cmp);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=find(E[i].u),y=find(E[i].v);\n\t\tif(x==y)continue;\n\t\ttot++;fa[x]=fa[y]=fa[tot]=tot;val[tot]=E[i].w;\n\t\tadd(x,tot);add(tot,x);add(y,tot);add(tot,y);\n\t}\n}\nvoid dfs(int x,int pre)\n{\n\tdep[x]=dep[pre]+1;\n\tfor(int i=1;i<=t;i++)f[x][i]=f[f[x][i-1]][i-1];\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tif(y==pre)continue;\n\t\tf[y][0]=x;dfs(y,x);\n\t}\n}\ninline int lca(int x,int y)\n{\n\tif(dep[x]>dep[y])swap(x,y);\n\tfor(int i=t;~i;i--)if(dep[f[y][i]]>=dep[x])y=f[y][i];\n\tif(x==y)return x;\n\tfor(int i=t;~i;i--)if(f[x][i]!=f[y][i])x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nsigned main()\n{\n\tscanf(\"%lld%lld%lld\",&n,&m,&K);tot=n;t=(int)log2(2*n)+1;\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",&pos[i]);\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",&b[i]);\n\tfor(int i=1;i<=m;i++)scanf(\"%lld%lld%lld\",&E[i].u,&E[i].v,&E[i].w);\n\tif(K)scanf(\"%lld\",&st);\n\tfor(int i=1;i<K;i++){E[++m].u=st;scanf(\"%lld\",&E[m].v);E[m].w=4234324294823;}\n\tkruscal();dfs(tot,0);\n\tint now=pos[1],ans=0;\n\tif(b[now]>0)ans+=b[now];\n\telse puts(\"0\");\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tans=min(ans,val[lca(now,pos[i])]);\n\t\tif(b[pos[i]]>0)ans+=b[pos[i]];\n\t\telse \n\t\t{\n\t\t\tb[pos[i]]=-b[pos[i]];\n\t\t\tprintf(\"%lld\\n\",min(ans,b[pos[i]]));\n\t\t\tans=max(ans-b[pos[i]],0LL);\n\t\t}\n\t\tnow=pos[i];\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1569730157,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P3280 [SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613(\u514b\u9c81\u65af\u5361\u5c14\u91cd\u6784\u6811)"
    },
    {
        "content": "[P3280](https://www.luogu.com.cn/problem/P3280)\n\n### \u601d\u8def\n\n\u6ca1\u6709\u6c42\u4e70\u5165\u4e86\u591a\u5c11\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f53\u4f5c\u6bcf\u6b21\u628a\u80fd\u4e70\u7684\u5168\u90fd\u4e70\u4e86\uff0c\u8d70\u5728\u8def\u4e0a\u4e0d\u884c\u518d\u6254\u3002\u5356\u51fa\u65f6\u7531\u9898\u610f\u80fd\u5356\u591a\u5c11\u5356\u591a\u5c11\u3002\n\n\u4e3b\u8981\u7684\u95ee\u9898\u662f\u6c42\u4ece\u57ce\u5230\u57ce\u6700\u591a\u80fd\u5e26\u591a\u5c11\u4e1c\u897f\u3002\u8ba1\u7b97\u4e24\u70b9\u95f4\u8def\u5f84\u7684\u6743\u503c\u6700\u5c0f\u503c\u800c\u4e0d\u5728\u610f\u8ddd\u79bb\uff0c\u5efa\u6700\u5927\u751f\u6210\u6811\uff0c\u628a\u56fe\u6539\u4f5c\u6811\u3002\u901a\u8fc7\u500d\u589e\u7684\u65b9\u5f0f\uff0c\u6c42 lca \u65f6\u7b97\u8def\u5f84\u6743\u503c\u7684\u6700\u5c0f\u503c\u3002\u5bf9\u4e8e\u706b\u8f66\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u6761\u6743\u503c\u4e3a $\\infty$ \u7684\u8def\u3002\n\n### code\n\n\u56fe\u8bba\u5c31\u50cf\u642d\u79ef\u6728\u3002\n\n#### 1.\u5904\u7406\u706b\u8f66\n\n\u7531\u4e8e $\\infty$ \u8db3\u591f\u5927\uff0c\u706b\u8f66\u7684\u8fb9\u4e00\u5b9a\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\u3002\n\n```cpp\n\twhile(p--){\n\t\tint u;\n\t\tu=read();\n\t\tif(!st)st=u;\n\t\telse{\n\t\t\tadd(u,st,inf);add(st,u,inf);\n\t\t\tf[fd(u)]=fd(st);\n\t\t\t++cnt;\n\t\t}\n\t}\n```\n\n#### 2.\u751f\u6210\u6811\n\n```cpp\nstruct edge{\n\tint x,y,w;\n}mp[maxn];\nbool cmp(edge u,edge v){\n\treturn u.w>v.w;\n}\nvoid add(int u,int v,int w){\n\te[++tot].nxt=head[u];e[tot].to=v;e[tot].val=w;\n\thead[u]=tot;\n}\n```\n\n\u7ed3\u6784\u4f53 mp \u662f\u539f\u56fe\u7684\u8fb9\uff0cadd \u51fd\u6570\u662f\u751f\u6210\u6811\u7684\u94fe\u5f0f\u524d\u5411\u661f\u7684\u52a0\u8fb9\u3002\n\n```cpp\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,w;\n\t\tu=read();v=read();w=read();\n\t\tmp[i].x=u;mp[i].y=v;mp[i].w=w;\n\t}\n\tfor(int i=1;i<=n;i++)f[i]=i;\n\tsort(mp+1,mp+m+1,cmp);\n\tfor(int i=1;i<=m;i++){\n\t\tif(fd(mp[i].x)!=fd(mp[i].y)){\n\t\t\tadd(mp[i].x,mp[i].y,mp[i].w);add(mp[i].y,mp[i].x,mp[i].w);\n\t\t\tf[fd(mp[i].x)]=fd(mp[i].y);\n\t\t\t++cnt;\n\t\t}\n\t\tif(cnt==n-1)break;\n\t}\n```\n\n#### 3.\u500d\u589e\n\n$fa_{u,i}$ \u8868\u793a $u$ \u7684 $2^i$ \u4e2a\u7956\u5148\uff0c$dis_{u,i}$ \u8868\u793a $u$ \u5230 $2^i$ \u4e2a\u7956\u5148\u7684\u8def\u5f84\u4e0a\u6700\u5c0f\u6743\u503c\u3002\n\nlca \u8df3\u516c\u5171\u7956\u5148\u7684\u540c\u65f6\u8ba1\u7b97\u8def\u5f84\u4e0a\u6700\u5c0f\u6743\u503c\u3002\n\n```cpp\nint dep[maxn],fa[maxn][25],dis[maxn][25];\nvoid dfs(int u,int ff){\n\tfor(int i=1;1<<i<=dep[u];i++){\n\t\tfa[u][i]=fa[fa[u][i-1]][i-1];\n\t\tdis[u][i]=min(dis[u][i-1],dis[fa[u][i-1]][i-1]);\n\t}\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v!=ff){\n\t\t\tdep[v]=dep[u]+1;\n\t\t\tfa[v][0]=u;dis[v][0]=e[i].val;\n\t\t\tdfs(v,u);\n\t\t}\n\t}\n}\nint lca(int u,int v){\n\tint ans=inf;\n\tif(dep[u]!=dep[v]){\n\t\tif(dep[u]<dep[v])swap(u,v);\n\t\tfor(int i=log2(dep[u]);i>=0;i--){\n\t\t\tif(dep[fa[u][i]]>dep[v]){\n\t\t\t\tans=min(ans,dis[u][i]);\n\t\t\t\tu=fa[u][i];\n\t\t\t}\n\t\t}\n\t\tans=min(ans,dis[u][0]);u=fa[u][0];\n\t}\n\tif(u==v)return ans;\n\tfor(int i=log2(dep[u]);i>=0;i--){\n\t\tif(fa[u][i]!=fa[v][i]){\n\t\t\tans=min({ans,dis[u][i],dis[v][i]});\n\t\t\tu=fa[u][i];v=fa[v][i];\n\t\t}\n\t}\n\tans=min({ans,dis[u][0],dis[v][0]});\n\treturn ans;\n}\n```\n\n#### 4.\u8ba1\u7b97\u7b54\u6848\n\n$sum$ \u8868\u793a\u5f53\u524d\u624b\u4e2d\u7684\u8d27\u7269\u91cd\u91cf\uff0c$lim$ \u8868\u793a\u4ece\u57ce\u5230\u57ce\u6700\u591a\u7684\u901a\u884c\u91cd\u91cf\u3002\n\n```cpp\n\tif(b[a[1]]>0)sum=b[a[1]];\n\telse printf(\"0\\n\");\n\tfor(int i=2;i<=n;i++){\n\t\tlim=lca(a[i-1],a[i]);\n\t\tif(sum>lim)sum=lim;//inf\u8981\u8db3\u591f\u5927\u3002\n\t\tif(b[a[i]]>0)sum+=b[a[i]];\n\t\telse{\n\t\t\tprintf(\"%lld\\n\",min(sum,-b[a[i]]));\n\t\t\tsum-=min(sum,-b[a[i]]);\n\t\t}\n\t}\n```",
        "postTime": 1683278677,
        "uid": 754153,
        "name": "gdf_yhm",
        "ccfLevel": 5,
        "title": "P3280 \u9898\u89e3"
    },
    {
        "content": "\u91cd\u6784\u6811\u9898\u76ee\uff0c\u975e\u5e38\u7b80\u5355\u554a\u3002\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3280)\n\n\u5f88\u663e\u7136\uff0c\u8ba9\u4f60\u987a\u6b21\u6c42\u4e24\u70b9\u7684\u6700\u5c0f\u74f6\u9888\u8def\u3002\n\n\u4f46\u662f\u95ee\u9898\u5728\u4e8e\u5217\u8f66\uff0c\u53ef\u4ee5\u4f7f\u5f97\u6700\u5c0f\u74f6\u9888\u8def\u88ab\u6253\u4e71\u3002\n\n\u8003\u8651\u6b63\u5e38\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u74f6\u9888\u8def\uff0c\u8d70\u5230\u4e24\u70b9\u7684 $\\text{LCA}$\uff0c\u7136\u540e\u8fd4\u56de $\\text{LCA}$ \u7684 $val$ \u5373\u53ef\u3002\n\n\u4f46\u662f\u56e0\u4e3a\u5217\u8f66\u7ad9\u7684\u539f\u56e0\uff0c\u6211\u4eec\u7684\u8def\u5f84\u7531 $u\\to c\\to v$ \u53d8\u4e3a\u4e86 $u\\to a\\to b\\to v$\u3002\uff08\u5176\u4e2d $c$ \u4e3a $u,v$ \u7684 $\\text{LCA}$\uff0c$a,b$ \u5747\u4e3a\u5217\u8f66\u8f66\u7ad9\uff09\u3002\n\n\u7b54\u6848\u5c31\u53d8\u4e3a\u4e86 \n\n$ans=\\max(val_c,\\min(val_a,val_b))$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u627e\u6bcf\u5bf9 $u,v$ \u7684 $a,b$ \u54ea\uff1f\n\n\u8003\u8651\u5b9e\u9645\u8fc7\u7a0b\uff0c\u5f53 $u\\to c$ \u7684\u500d\u589e\u8fc7\u7a0b\u4e2d\u3002\u9047\u5230\u4e86\u4e00\u4e2a\u70b9 $d$\uff0c$d$ \u7684\u5b50\u6811\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u5217\u8f66\u7ad9\u70b9\uff0c\u90a3\u4e48\u7b54\u6848\u4e00\u5b9a\u4e0d\u518d\u662f $val_c$ \u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u7684 $deep_d>deep_c$\uff0c\u53c8\u56e0\u4e3a\u91cd\u6784\u6811\u7684\u6027\u8d28\uff0c$deep$ \u8d8a\u5927\uff0c\u8bf4\u660e $val$ \u8d8a\u5927\u3002\n\n\u90a3\u5c31\u597d\u505a\u591a\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u6539\u4e0b $\\text{Kruskal}$ \u91cd\u6784\u6811\u7684\u5efa\u6811\u8fc7\u7a0b\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u91cd\u6784\u70b9\uff0c\u591a\u7ef4\u62a4\u4e00\u4e2a $vis$ \u8868\u793a\u5b50\u6811\u4e2d\u662f\u5426\u6709\u5217\u8f66\u8f66\u7ad9\u5373\u53ef\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u6c42\u51fa\u6765\u4e86 $u,v$ \u4e24\u70b9\u95f4\u7684\u6700\u5c0f\u74f6\u9888\u8def\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u6309\u7167\u987a\u5e8f\u8fdb\u884c\u4ea4\u6613\u5373\u53ef\uff0c\n\n\u5177\u4f53\u7684\uff0c\u6211\u4eec\u8bbe $now$ \u8868\u793a\u5f53\u524d\u7684\u9ec4\u91d1\u6570\u91cf\uff0c\u6bcf\u5230\u4e00\u4e2a\u8865\u5145\u9ec4\u91d1\u7684\u5730\u70b9\uff0c\u6211\u4eec\u5c31\u628a $now+=b_i$\uff0c\u6bcf\u5230\u4e00\u4e2a\u5356\u51fa\u9ec4\u91d1\u7684\u5730\u70b9\uff0c\u6211\u4eec\u5c31\u628a $now=\\max(0,now+b_i)$\u3002\u540c\u65f6\u8f93\u51fa\u7b54\u6848\u3002\n",
        "postTime": 1667876816,
        "uid": 331947,
        "name": "hegm",
        "ccfLevel": 0,
        "title": "P3280 [SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613 \u9898\u89e3"
    },
    {
        "content": "## \u3010SCOI 2013\u3011\u6469\u6258\u8f66\u4ea4\u6613\n\n\u601d\u8def\u5c31\u662fkruskal\u91cd\u6784\u6811\u548c\u6811\u5256\n\n\u5bf9\u4e8e\u9898\u76ee\u7ed9\u51fa\u7684\u4e24\u79cd\u9650\u5236\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4e0d\u8003\u8651\uff0c\u56e0\u4e3a\u4e70\u5165\u4ea4\u6613\u662f\u4e0d\u9700\u8981\u8f93\u51fa\u7684\n\n\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u6bcf\u6b21\u8d2a\u5fc3\u7684\u5168\u62ff\u8d70\uff0c\u5168\u5356\u51fa\uff0c\u7136\u540e\u8def\u4e0a\u6254\u6389\u62ff\u4e0d\u4e86\u7684\uff08\u88ab\u9650\u5236\u4f4f\u7684\uff09\uff0c\u800c\u6709\u5217\u8f66\u7ad9\u7684\u57ce\u5e02\u4e4b\u95f4\u53ef\u4ee5\u62ff\u65e0\u7a77\u591a\u7684\u9ec4\u91d1\uff0c\u90a3\u4e48\u4e24\u79cd\u9650\u5236\u5c31\u6ca1\u6709\u5b58\u5728\u7684\u610f\u4e49\uff0c\u552f\u4e00\u7684\u9650\u5236\u5c31\u662f\u8def\u5f84\u8fb9\u6743\n\n\u6240\u4ee5\u95ee\u9898\u53ef\u4ee5\u53d8\u4e3a\u7ed9\u51fa\u4e00\u4e2a\u56fe\uff0c\u8ba9\u4f60\u4f7f\u5176\u8fde\u901a\uff0c\u7136\u540e\u8fd8\u8981\u6c42\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u5c3d\u91cf\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u4e00\u4e2a\u6700\u5927\u751f\u6210\u6811\uff0c\u8ba9\u8fb9\u6743\u4e3a\u9ad8\u901f\u7684\u8f7d\u91cd\u9650\u5236\uff0c\u5217\u8f66\u7ad9\u4e4b\u95f4\u7684\u8fb9\u6743\u8bbe\u4e3aINF\n\n\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u80fd\u643a\u5e26\u7684\u9ec4\u91d1\u6570\u91cf\u5c31\u7b49\u4e8e\u4e0a\u4e00\u4e2a\u57ce\u5e02\u5230\u8fd9\u4e2a\u57ce\u5e02\u7ecf\u8fc7\u7684\u6240\u6709\u8fb9\u7684\u6700\u5c0f\u8fb9\u6743\u548c\u73b0\u5728\u6709\u7684\u9ec4\u91d1\u6570\u91cf\u7684\u8f83\u5c0f\u503c\uff0c\u8def\u5f84\u4e0a\u8fb9\u6743\u6700\u5c0f\u503c\u53ef\u4ee5\u7528\u6811\u5256\u6c42\u89e3\n\n\u7136\u540e\u8fd9\u9898\u5c31\u5207\u4e86QwQ\n\nAC code\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\n#include<climits>\n#include<cstdlib>\n#define int long long\n\nusing namespace std;\n\nconst int maxn=2e5+5;\n\ninline int read()\n{\n    int w=0,f=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9')\n    {\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0' && ch<='9')\n    {\n        w=(w<<3)+(w<<1)+(ch^48);\n        ch=getchar();\n    }\n    return w*f;\n}\n\nint now_money;\nint root,cnt;\nint n,m,q,tot;\nint head[maxn];\nint b[maxn];\nint fa[maxn];\nint order[maxn];\nstruct edge\n{\n    int from,to,val;\n}e[maxn*3];\nstruct node\n{\n    int to,next,val;\n}edg[maxn*3];\n\nbool cmp(edge a,edge b)\n{\n    return a.val>b.val;\n}\n\nvoid add(int x,int y,int z)\n{\n    edg[++tot].to=y;\n    edg[tot].next=head[x];\n    edg[tot].val=z;\n    head[x]=tot;\n}\n\nint find(int x)\n{\n    if(x==fa[x]) return x;\n    else return fa[x]=find(fa[x]);\n}\n\nvoid merger(int x,int y)\n{\n    if(rand()%2) fa[x]=y;\n    else fa[y]=x;\n}\n\nvoid kruskal()\n{\n    for(int i=1;i<=n;i++) fa[i]=i;\n    sort(e+1,e+m+max(q,1ll),cmp);cnt=0;\n    for(int i=1;i<=m+max(q,1ll)-1;i++)\n    {\n        int u=find(e[i].from);\n        int v=find(e[i].to);\n        if(u==v) continue;\n        merger(u,v);cnt++;\n        add(e[i].from,e[i].to,e[i].val);\n        add(e[i].to,e[i].from,e[i].val);\n        if(cnt==n-1) break;\n    }\n}\n\nint a[maxn];\nint id[maxn],val[maxn];\nint siz[maxn],deep[maxn];\nint max_son[maxn],top[maxn];\n\nstruct s_t\n{\n    int l,r;\n    int val;\n}t[maxn*4];\n\nvoid dfs_first(int x,int f)\n{\n    siz[x]=1;fa[x]=f;\n    deep[x]=deep[f]+1;\n    for(int i=head[x];i;i=edg[i].next)\n    {\n        int to=edg[i].to;\n        if(to==f) continue;\n        val[to]=edg[i].val;\n        dfs_first(to,x);\n        siz[x]+=siz[to];\n        if(siz[to]>siz[max_son[x]])\n        {\n            max_son[x]=to;\n        }\n    }\n}\n\nvoid dfs_second(int x,int t)\n{\n    id[x]=++tot;top[x]=t;\n    a[tot]=val[x];\n    if(!max_son[x]) return ;\n    dfs_second(max_son[x],top[x]);\n    for(int i=head[x];i;i=edg[i].next)\n    {\n        int to=edg[i].to;\n        if(to!=fa[x] && to!=max_son[x])\n        {\n            dfs_second(to,to);\n        }\n    }\n}\n\nvoid build(int p,int l,int r)\n{\n    t[p].l=l,t[p].r=r;\n    if(l==r)\n    {\n        t[p].val=a[l];\n        return ;\n    }\n    int mid=(l+r)>>1;\n    build(p*2,l,mid);\n    build(p*2+1,mid+1,r);\n    t[p].val=min(t[p*2].val,t[p*2+1].val);\n}\n\nint query(int p,int l,int r)\n{\n    if(l<=t[p].l && t[p].r<=r) return t[p].val;\n    int mid=(t[p].l+t[p].r)>>1;int ans=LLONG_MAX;\n    if(l<=mid) ans=min(ans,query(p*2,l,r));\n    if(r>mid) ans=min(ans,query(p*2+1,l,r));\n    return ans;\n}\n\nint get_min(int x,int y)\n{\n    int ans=LLONG_MAX;\n    while(top[x]!=top[y])\n    {\n        if(deep[top[x]]<deep[top[y]]) swap(x,y);\n        ans=min(ans,query(1,id[top[x]],id[x]));\n        x=fa[top[x]];\n    }\n    if(deep[x]>deep[y]) swap(x,y);\n    ans=min(ans,query(1,id[x]+1,id[y]));\n    return ans;\n}\n\nsigned main()\n{\n    n=read();\n    m=read();\n    q=read();\n\n    for(int i=1;i<=n;i++) order[i]=read();\n    for(int i=1;i<=n;i++) b[i]=read();\n\n    for(int i=1;i<=m;i++)\n    {\n        e[i].from=read();\n        e[i].to=read();\n        e[i].val=read();\n    }\n\n    for(int i=1;i<=q;i++)\n    {\n        if(i==1) root=read();\n        else \n        {\n            e[m+i-1].from=root;\n            e[m+i-1].to=read();\n            e[m+i-1].val=LLONG_MAX;\n        }\n    }\n\n    kruskal();\n    tot=0,dfs_first(1,0);\n    tot=0,dfs_second(1,1);\n\n    build(1,1,n);\n\n    now_money=b[order[1]];\n    if(now_money<=0)\n    {\n        now_money=0;\n        cout<<0<<endl;\n    }\n\n    for(int i=2;i<=n;i++)\n    {\n        now_money=min(get_min(order[i],order[i-1]),now_money);\n        if(b[order[i]]<0) \n        {\n            cout<<min(now_money,-b[order[i]])<<endl;\n            now_money-=min(now_money,-b[order[i]]);\n        }\n        else\n        {\n            now_money+=b[order[i]];\n        }\n    }\n\n    return 0;\n}\n```\n",
        "postTime": 1667309581,
        "uid": 464366,
        "name": "NinT_W",
        "ccfLevel": 0,
        "title": "\u3010SCOI 2013\u3011\u6469\u6258\u8f66\u4ea4\u6613"
    },
    {
        "content": "# \u7b80\u5316\u9898\u610f\n\u7ed9\u51fa\u4e00\u4e2a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8fb9\u6709\u8fb9\u6743\uff0c\u70b9\u6709\u70b9\u6743\uff0c\u70b9\u6743\u6709\u6b63\u6709\u8d1f\u3002\u7ed9\u51fa\u4e00\u4e2a\u987a\u5e8f\uff0c\u8981\u6c42**\u6309\u7167\u987a\u5e8f\u7ecf\u8fc7\u6bcf\u4e2a\u70b9**\uff0c\u5728\u6bcf\u4e2a\u70b9\u4e70\u5165\u6216\u5356\u51fa\u4e00\u5b9a\u91cf\u7684\u9ec4\u91d1\uff0c\u4f46\u4e70\u5165\u6216\u5356\u51fa\u7684\u6570\u91cf\u4e0d\u5f97\u8d85\u8fc7\u70b9\u6743\u7edd\u5bf9\u503c\u3002\u5728\u8fd0\u8f93\u8fc7\u7a0b\u4e2d**\u7ecf\u8fc7\u6bcf\u6761\u8fb9\u65f6\u9ec4\u91d1\u6570\u91cf\u4e0d\u5f97\u8d85\u8fc7\u8fb9\u6743**\uff0c\u9ec4\u91d1\u4e0d\u53ef\u4e22\u5f03\uff0c\u6570\u91cf\u4efb\u610f\u65f6\u523b\u90fd\u4e0d\u53ef\u4e3a\u8d1f\uff0c**\u5728\u7ed3\u675f\u540e\u9ec4\u91d1\u6570\u91cf\u9700\u8981\u4e3a0**\u3002\u53e6\u5916\u6709 $k$ \u4e2a\u94c1\u8def\u7ad9\uff0c**\u4efb\u610f\u4e24\u4e2a\u94c1\u8def\u7ad9\u4e4b\u95f4\u6709\u4e00\u6761\u94c1\u8def\uff0c\u94c1\u8def\u4e0d\u8bbe\u8fd0\u8f7d\u4e0a\u9650**\u3002\u6c42\u80fd\u8fbe\u5230\u9500\u552e\u6700\u5927\u503c\u7684\u65b9\u6848\uff0c\u82e5\u9500\u552e\u503c\u76f8\u540c\uff0c\u5219\u5b57\u5178\u5e8f\u5927\u7684\u4f18\u5148\u3002\n\n# Solution\n\n\u8981\u6c42\u603b\u9500\u552e\u91cf\u6700\u5927\uff0c\u90a3\u4e48\u5728\u4ece\u4e00\u4e2a\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u7684\u8fc7\u7a0b\u4e2d\u8d70\u9650\u91cd\u5927\u7684\u70b9\u663e\u7136\u6bd4\u8d70\u9650\u91cd\u5c0f\u7684\u4f18\uff0c\u56e0\u4e3a\u5982\u679c\u8d70\u9650\u91cd\u5c0f\u7684\u8fb9\u5230\u8fbe\u53e6\u4e00\u4e2a\u70b9\u65f6\u643a\u5e26\u7684\u9ec4\u91d1\u6570\u91cf\u80af\u5b9a\u4f1a\u5c11\uff0c\u6240\u4ee5\u8981\u5c3d\u91cf\u5f80\u9650\u91cd\u5927\u7684\u8fb9\u8d70\u3002\u56e0\u6b64\u8d70\u7684\u8fb9\u53ea\u4f1a\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\u3002\u800c\u94c1\u8def\u7684\u8bdd\u5c31\u76f8\u5f53\u4e8e\u6ca1\u6709\u8fd0\u8f7d\u4e0a\u9650\u7684\u516c\u8def\uff0c\u4f46\u662f\u7528 $O(n^2)$ \u7684\u65f6\u95f4\u8fde\u8fb9\u663e\u7136\u4e0d\u73b0\u5b9e\uff0c\u6240\u4ee5\u8bbe\u4e00\u4e2a\u94c1\u8def\u603b\u7ad9\uff0c\u8ba9\u6bcf\u4e2a\u94c1\u8def\u7ad9\u70b9\u8fde\u5411\u603b\u7ad9\uff0c\u4e0a\u9650\u4e3a $\\inf$ \uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u901a\u8fc7\u603b\u7ad9\u8fd9\u4e2a\u4e2d\u8f6c\u70b9\u6765\u8fde\u63a5\u5404\u4e2a\u94c1\u8def\u7ad9\u70b9\uff0c\u540c\u65f6\u7531\u4e8e\u603b\u7ad9\u8fde\u5411\u7ad9\u70b9\u7684\u4e0a\u9650\u662f $\\inf$\uff0c\u6240\u4ee5\u8fd9\u4e9b\u8fb9\u5fc5\u7136\u51fa\u73b0\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\u3002\n\n\u5c06\u56fe\u8f6c\u6362\u6210\u6811\u540e\uff0c\u5728\u8fd0\u8f93\u8fc7\u7a0b\u4e2d\uff0c\u4ece\u4e00\u4e2a\u70b9\u5f80\u53e6\u4e00\u4e2a\u70b9\u8d70\uff0c\u5230\u4e86\u53e6\u4e00\u4e2a\u70b9\u65f6\u5269\u4e0b\u7684\u9ec4\u91d1\u6570\u91cf\u80af\u5b9a\u662f\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u7528\u500d\u589e\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u6c42\u51fa\u6700\u5c0f\u503c\u3002\n\n\u8003\u8651\u4e00\u79cd\u8d2a\u5fc3\uff0c\u867d\u7136\u9898\u76ee\u8981\u6c42\u4e0d\u80fd\u4e22\u5f03\uff0c\u4f46\u662f\u65e2\u7136\u53ea\u6c42\u9500\u552e\u65b9\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e70\u7684\u5730\u65b9\u5168\u4e70\uff0c\u67d0\u6761\u8def\u8d70\u4e0d\u8fc7\u5c31\u4e22\u5f03\uff0c\u5230\u4e86\u6700\u540e\u4e5f\u4e22\u5f03\uff0c\u56e0\u4e3a\u4f60\u4e70\u4e86\u7136\u540e\u4e22\u6389\u4e86\u76f8\u5f53\u4e8e\u4f60\u4e00\u5f00\u59cb\u6ca1\u4e70\uff0c\u5bf9\u7b54\u6848\u662f\u4e0d\u5f71\u54cd\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u603b\u9500\u552e\u91cf\u6700\u5927\u4e14\u5728\u524d\u9762\u7684\u9500\u552e\u989d\u5c3d\u91cf\u5927\u3002\n\n\u56e0\u6b64\u601d\u8def\u4e3a\n\n- \u5c06\u6bcf\u4e2a\u94c1\u8def\u7ad9\u70b9\u8fde\u4e00\u6761 $\\inf$ \u7684\u8fb9\u5230\u603b\u7ad9\n- \u6c42\u51fa\u6574\u4e2a\u56fe\u7684\u6700\u5927\u751f\u6210\u6811\uff08\u5305\u62ec\u94c1\u8def\u603b\u7ad9\uff09\u3002\n- \u6309\u7167\u7ed9\u5b9a\u987a\u5e8f\u6a21\u62df\uff0c\u9047\u5230\u4e70\u7684\u5168\u4e70\uff0c\u9047\u5230\u5356\u7684\u80fd\u5356\u591a\u5c11\u662f\u591a\u5c11\uff0c\u5e76\u8f93\u51fa\u9500\u552e\u989d\u3002\n- \u8d70\u8def\u5f84\u7684\u9014\u4e2d\u9047\u5230\u8d70\u4e0d\u8fc7\u7684\u5c31\u4e22\u6389\uff0c\u5373\u6c42\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u503c\uff0c\u7528\u500d\u589e\u5373\u53ef\u3002\n\n# Code\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define inf 891234567987654321\n#define ll long long\n#define N 100005\nusing namespace std;\nstruct krus\n{\n\tint x,y;\n\tll val;\n}Krus[N*3];\nstruct node\n{\n\tint head,next,to;\n\tll val;\n}a[N*6];\nint n,m,q,x,y,tot,xx,yy,w[N],fa[N<<1][20],deep[N],father[N];\nll z,ans,c[N],f[N<<1][20];\nbool cmp(krus x,krus y) {return x.val>y.val;}\nint find(int x)\n{\n\tif (father[x]!=x) father[x]=find(father[x]);\n\treturn father[x];\n}\nvoid add(int x,int y,ll z)\n{\n\ta[++tot].to=y;\n\ta[tot].val=z;\n\ta[tot].next=a[x].head;\n\ta[x].head=tot;\n}\nvoid dfs(int now,int Fa,ll val)\n{\n\tdeep[now]=deep[Fa]+1;\n\tfa[now][0]=Fa;\n\tf[now][0]=val;\n\tfor (int i=a[now].head;i;i=a[i].next)\n\t{\n\t\tint u=a[i].to;\n\t\tll v=a[i].val;\n\t\tif (u==Fa) continue;\n\t\tdfs(u,now,v);\n\t}\n}\nint LCA(int x,int y)\n{\n\tif (deep[x]!=deep[y])\n\t{\n\t\tif (deep[x]<deep[y]) swap(x,y);\n\t\tfor (int i=17;i>=0;--i)\n\t\t{\n\t\t\tif (deep[fa[x][i]]>deep[y]) x=fa[x][i];\n\t\t}\n\t\tx=fa[x][0];\n\t}\n\tif (x==y) return x;\n\tfor (int i=17;i>=0;--i)\n\t{\n\t\tif (fa[x][i]!=fa[y][i])\n\t\t{\n\t\t\tx=fa[x][i];\n\t\t\ty=fa[y][i];\n\t\t}\n\t}\n\treturn fa[x][0];\n}\nll get(int x,int y)\n{\n\tint lca=LCA(x,y);\n\tll res=inf;\n\tfor (int i=17;i>=0;--i)\n\t{\n\t\tif (deep[fa[x][i]]>deep[lca])\n\t\t{\n\t\t\tres=min(res,f[x][i]);\n\t\t\tx=fa[x][i];\n\t\t}\n\t\tif (deep[fa[y][i]]>deep[lca])\n\t\t{\n\t\t\tres=min(res,f[y][i]);\n\t\t\ty=fa[y][i];\n\t\t}\n\t}\n\tif (x!=lca) res=min(res,f[x][0]);\n\tif (y!=lca) res=min(res,f[y][0]);\n\treturn res;\n}//\u6c42\u51fa\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u503c\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor (int i=1;i<=n;++i)\n\t\tscanf(\"%d\",&w[i]);\n\tfor (int i=1;i<=n;++i)\n\t\tscanf(\"%lld\",&c[i]);\n\tfor (int i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%d%d%lld\",&x,&y,&z);\n\t\tKrus[i].x=x;Krus[i].y=y;Krus[i].val=z;\n\t}\n\tfor (int i=1;i<=q;++i)\n    \t\tscanf(\"%d\",&x),Krus[m+i].x=x,Krus[m+i].y=n+1,Krus[m+i].val=inf;\n\tsort(Krus+1,Krus+m+q+1,cmp);\n\tfor (int i=1;i<=n+1;++i)\n\t\tfather[i]=i;\n\tfor (int i=1;i<=m+q;++i)\n\t{\n\t\tx=Krus[i].x;y=Krus[i].y;\n\t\txx=find(x);yy=find(y);\n\t\tif (xx!=yy)\n\t\t{\n\t\t\tfather[xx]=yy;\n\t\t\tadd(x,y,Krus[i].val);\n\t\t\tadd(y,x,Krus[i].val);\n\t\t}\n\t}//\u5904\u7406\u51fa\u6700\u5927\u751f\u6210\u6811\n\tmemset(fa,0,sizeof(fa));\n\tdfs(1,0,0);\n\tfor (int j=1;j<=17;++j)\n\t\tfor (int i=1;i<=n+1;++i)\n\t\t{\n\t\t\tfa[i][j]=fa[fa[i][j-1]][j-1];\n\t\t\tf[i][j]=min(f[i][j-1],f[fa[i][j-1]][j-1]);\n\t\t}//\u500d\u589e\u57fa\u672c\u64cd\u4f5c\n\tans=0;\n\tfor (int i=1;i<=n;++i)\n\t{\n\t\tx=w[i];\n\t\tif (c[x]>0) ans+=c[x];//\u5168\u90e8\u4e70\u5165\n\t\telse\n\t\t{\n\t\t\tprintf(\"%lld\\n\",min(-c[x],ans));//\u80fd\u5356\u591a\u5c11\u5356\u591a\u5c11\n\t\t\tans=max(ans+c[x],(ll)0);//\u66f4\u65b0\u9ec4\u91d1\u6570\u91cf\n\t\t}\n\t\tif (i<n) ans=min(ans,get(w[i],w[i+1]));//\u8d70\u8def\u5f84\n\t}//\u6a21\u62df\n\treturn 0;\n}\n```\n\n",
        "postTime": 1625702977,
        "uid": 166078,
        "name": "Thunder_S",
        "ccfLevel": 6,
        "title": "P3280 \u6469\u6258\u8f66\u4ea4\u6613"
    },
    {
        "content": "kruskal\u91cd\u6784\u6811+\u500d\u589e+\u8d2a\u5fc3\n\n\u8fd9\u9898\u60f3\u6cd5\u7b80\u5355\uff0c\uff0c\uff0c\u7136\u800c\uff0c\u627e\u4e86\u51e0\u4e2a\u5c0f\u65f6\u7684\u9519\u8bef\u7ed3\u679c\u662finf\u6ca1\u5f00\u5230LL\u8303\u56f4\u3002\u3002\u3002\u3002\n\n\u3000\u3000\u9996\u5148\u6211\u4eec\u9700\u8981\u627e\u5230\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u80fd\u591f\u643a\u5e26\u9ec4\u91d1\u7684\u4e0a\u9650\u503c\uff0c\u56e0\u4e3a\u662f\u5728\u7ecf\u8fc7\u7684\u9053\u8def\u6743\u503c\u4e2d\u53d6min\uff0c\u6211\u4eec\u8981\u4f7f\u5f97\u8fd9\u4e2amin\u503c\u6700\u5927\uff0c\u5c31\u5e94\u8be5\u8981\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\u5bfb\u627e\u6b63\u786e\u7684\u8fb9\u3002\u6c42\u51fa\u6700\u5927\u751f\u6210\u6811\u540e\u6211\u4eec\u9700\u8981\u5728\u4e0a\u9762\u500d\u589e\u5bfb\u627e\u6743\u503c\u6700\u5c0f\u7684\u8fb9\uff0c\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u5373\u4e3a\u643a\u5e26\u9ec4\u91d1\u7684\u4e0a\u9650\u503c\u3002\n\n\u3000\u3000\u4e8e\u662f\u4f60\u53ef\u4ee5\u5199\u6700\u5927\u751f\u6210\u6811\u4e5f\u53ef\u4ee5\u5199kruskal\u91cd\u6784\u6811\uff0c\u8fd9\u91cc\u6211\u5199\u7684\u662fkruskal\u91cd\u6784\u6811\uff0c\u8fd9\u6837\u4ee5\u6765\uff0c\u56e0\u4e3akruskal\u91cd\u6784\u6811\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bfb\u627e\u5bf9\u5e942\u4e2a\u8282\u70b9\u7684lca\uff0c\u8fd9\u4e2alca\u7684\u70b9\u6743\u5373\u4e3a\u6211\u4eec\u8981\u627e\u7684\u503c\u3002\n\n\u3000\u3000\u4f46\u662f\u6ce8\u610f\u5230\u9898\u4e2d\u6709\u4e00\u4e9b\u70b9\u53ef\u4ee5\u88ab\u5217\u8f66\u8fde\u901a\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e9b\u88ab\u8054\u901a\u7684\u70b9\u4e4b\u95f4\u79fb\u52a8\u4e0d\u4f1a\u5e26\u6765\u4efb\u4f55\u9650\u5236\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u6709\u5217\u8f66\u7684\u8282\u70b9\u770b\u505a\u4e00\u4e2a\u70b9\uff08\u7f29\u70b9\uff09\n\n\u3000\u3000\u7136\u540e\u6ce8\u610f\u5230\u9898\u76ee\u8981\u6c42\u7684\u4ec5\u4ec5\u662f\u6bcf\u4e2a\u5356\u9ec4\u91d1\u7684\u5730\u65b9\u5356\u51fa\u7684\u9ec4\u91d1\u6570\uff0c\u800c\u4e14\u5728\u4efb\u610f\u5730\u65b9\u4e70\u5356\u7684\u9ec4\u91d1\u5e76\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u9650\u5236\uff08\u5982\u4ef7\u683c\u4e4b\u7c7b\u7684\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u6bcf\u5230\u4e00\u4e2a\u5730\u65b9\u5c31\u4e70\u5149\u6240\u6709\u9ec4\u91d1\uff0c\u7136\u540e\u5982\u679c\u5e26\u4e0d\u5230\u4e0b\u4e00\u4e2a\u5730\u65b9\u53bb\uff0c\u6211\u4eec\u5c31\u5f53\u6211\u4eec\u4e4b\u524d\u6ca1\u4e70\u8fc7\uff0c\u5bf9\u9053\u8def\u7684\u4e0a\u9650\u53d6min\u5373\u53ef\u3002\u5982\u679c\u6700\u540e\u9ec4\u91d1\u6709\u5269\u4f59\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5f53\u505a\u6211\u4eec\u6ca1\u4e70\u8fc7\u3002\n\n\u3000\u3000\u4e8e\u662f\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n  \n~~\u4e0d\u8981\u8138\u7684\u5ba3\u4f20\u4e00\u6ce2~~[my blog](https://www.cnblogs.com/ww3113306/p/9806422.html)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define R register int\n#define AC 501000\n#define ac 1001000\n#define LL long long\n#define inf 1000000000000000LL//!!!!!!!!!!!!!!!!!!!!!\n/*\u56e0\u4e3a\u53ea\u9700\u8981\u5173\u5fc3\u5356\u51fa\u4e86\u591a\u5c11\uff0c\u6240\u4ee5\u9047\u5230\u4e70\u5165\u7684\u5c31\u80fd\u4e70\u5c31\u4e70\uff0c\u5982\u679c\u8981\u4e22\u5f03\u5c31\u5f53\u6211\u6ca1\u4e70\u8fc7\uff0c\n\u5982\u679c\u6709\u5269\u4f59\u4e5f\u5f53\u6211\u6ca1\u4e70\u8fc7\uff0c\u7136\u540e\u6709\u5217\u8f66\u7684\u70b9\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\uff0c\u6240\u4ee5\u5c31\u7f29\u70b9\u7f29\u8d77\u6765\uff0c\u7136\u540e\u6709\u8def\u4e0a\u6709\u8d1f\u8f7d\u4e0a\u9650\uff0c\n\u6240\u4ee5\u5c31\u8dd1\u6700\u5927\u751f\u6210\u6811(\u91cd\u6784\u6811)\uff0c\u7136\u540e\u500d\u589e\u67e5\u6700\u5927\u4e0a\u9650\u662f\u591a\u5c11\uff0c\u628a\u5269\u4f59\u9ec4\u91d1\u5bf9\u4e0a\u9650\u53d6min\u5373\u53ef\u3002*/\n\nint n, m, q, cnt, who;\nLL have;\nint Head[ac], date[ac], Next[ac], tot;\nint father[AC], vis[AC], belong[AC], dep[ac];\nLL f[ac][21], power[ac];//\u70b9\u6743or\u8fb9\u6743(\u53f6\u8282\u70b9\u5c31\u662f\u70b9\u6743\uff0c\u4e0d\u7136\u5c31\u662f\u8fb9\u6743)\n\nstruct road{\n    int x, y;LL dis; \n}way[ac];\n\ninline bool cmp(road a, road b){\n    return a.dis > b.dis;\n}\n\ninline int read()\n{\n    int x = 0;char c = getchar(); bool z = false;\n    while(c > '9' || c < '0') {\n        if(c == '-') z = true;\n        c = getchar();\n    }\n    while(c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    if(!z) return x;\n    else return -x;\n}\n\ninline int find(int x){\n    if(father[x] == x) return x;\n    else return father[x] = find(father[x]);\n}\n\ninline void add(int f, int w){\n    date[++tot] = w, Next[tot] = Head[f], Head[f] = tot, father[w] = f;    \n    //printf(\"%d ---> %d : %d\\n\", f, w, power[cnt]);\n}\n\ninline void upmin(LL &a, LL b){\n    if(b < a) a = b;\n}\n\nvoid kruskal()//\u91cd\u6784\u6811\n{\n    int b = 2 * n;\n    for(R i = 1; i <= b; i ++) father[i] = i;\n    for(R i = 1; i <= m; i ++)\n    {\n        int fx, fy;\n        fx = find(belong[way[i].x]), fy = find(belong[way[i].y]);\n        if(fx == fy) continue;\n        power[++cnt] = way[i].dis;\n        //printf(\"%d %d %d\\n\", way[i].x, way[i].y, way[i].dis);        \n        add(cnt, fx), add(cnt, fy);\n    }    \n    power[cnt + 1] = inf, dep[cnt] = 1, f[cnt][0] = cnt;\n}\n\nvoid dfs(int x)//\u500d\u589e\n{\n    int now;\n//    printf(\"!!!%d\\n\", power[x]);\n    for(R i = 1; i <= 20; i ++)\n        f[x][i] = f[f[x][i - 1]][i - 1];\n    for(R i = Head[x]; i; i = Next[i])\n        now = date[i], f[now][0] = x, dep[now] = dep[x] + 1, dfs(now);\n}\n\nint lca(int x, int y)//\u8981\u5148\u500d\u589e\u627e\u5230\u6700\u5c0f\u4e0a\u9650\n{\n    if(dep[x] < dep[y]) swap(x, y);\n    for(R i = 20; i >= 0; i --)\n        if(dep[f[x][i]] >= dep[y]) x = f[x][i];\n    for(R i = 20; i >= 0; i --)\n        if(f[x][i] != f[y][i]) \n            x = f[x][i], y = f[y][i];\n    if(x != y) return power[f[x][0]];\n    else return power[x];\n}\n\nvoid go(int f, int w)\n{\n    LL lim = (belong[f] == belong[w]) ? inf : lca(belong[f], belong[w]);\n    /*if(find(belong[f]) != find(belong[w])) \n    {\n        for(R i = w; i <= n; i ++) printf(\"0\\n\");\n        exit(0);\n    }*/\n    upmin(have, lim);\n    if(power[w] > 0) have += power[w];\n    else \n    {\n        if(have > - power[w]) \n            have += power[w], printf(\"%lld\\n\", -power[w]);\n        else printf(\"%lld\\n\", have), have = 0; \n    }\n}\n\nvoid pre()\n{\n    n = cnt = read(), m = read(), q = read();\n    for(R i = 1; i <= n; i ++) vis[i] = read(), belong[i] = i;//\u8bfb\u5165\u6bcf\u4e2a\u57ce\u5e02\u7684\u8bbf\u95ee\u987a\u5e8f\n    for(R i = 1; i <= n; i ++) power[i] = read();//\u8bfb\u5165\u6bcf\u4e2a\u57ce\u5e02\u7684\u8ba2\u5355\n    for(R i = 1; i <= m; i ++)//\u8bfb\u5165\u8fb9\n        way[i].x = read(), way[i].y = read(), way[i].dis = read();\n    for(R i = 1; i <= q; i ++)//\u8bfb\u5165\u6709\u5217\u8f66\u7684\u57ce\u5e02\n    {\n        int a = read();\n        if(!who) who = a;\n        belong[a] = who;\n    }\n    sort(way + 1, way + m + 1, cmp);\n}\n\nvoid work()\n{\n    if(power[vis[1]] > 0) have = power[vis[1]];\n    else printf(\"0\\n\");\n    for(R i = 1; i < n; i ++) go(vis[i], vis[i + 1]);\n}\n\nint main()\n{\n//    freopen(\"in.in\", \"r\", stdin);\n    pre();\n    kruskal();\n    dfs(cnt);\n    work();\n//    fclose(stdin);\n    return 0;\n}\n```",
        "postTime": 1539775266,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3280 \u3010[SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613 \u3011"
    },
    {
        "content": "\u500d\u589e\u4ec0\u4e48\u7684\u6700\u6162\u4e86\uff0c\u5e38\u6570\u592a\u5927\u4e86\n\n\u6211\u4eec\u53ef\u4ee5\u4e0a\u6811\u5256\u554a\n\n\u4f46\u662f\u5982\u679c\u7528\u6811\u5256\u6765\u67e5\u8be2\u6811\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u5c0f\u8fb9\u6743\u7684\u8bdd\uff0c\u53ef\u80fd\u53ea\u80fd\u5728\u4e0a\u4e00\u68f5\u7ebf\u6bb5\u6811\uff1f\n\n\u90a3\u4e5f\u592a$naive$\u4e86\uff0c\u5c3d\u7ba1\u500d\u589e\u5e38\u6570\u5927\uff0c\u4f46\u662f\u8fd8\u662f\u6bd4\u4e24\u4e2a$log$\u5feb\u7684\n\n\u90a3\u5e72\u8106\u91cd\u6784\u6811\u7b97\u4e86\n\n\u6211\u4eec\u76f4\u63a5\u5efa\u51fa$kruskal$\u91cd\u6784\u6811\uff0c\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u5728\u91cd\u6784\u6811\u4e0a\u76f4\u63a5\u7528\u6811\u5256\u6765\u67e5\u8be2$lca$\uff0c$lca$\u7684\u70b9\u6743\u5c31\u662f\u6700\u5c0f\u8fb9\u7684\u8fb9\u6743\n\n\u8fd9\u5c31\u662f\u6211\u6700\u4f18\u89e3\u7684\u539f\u56e0\u4e86\n\n\u4e4b\u540e\u53d1\u73b0\u81ea\u5df1\u7684\u601d\u8def\u975e\u5e38\u6e05\u5947\uff0c\u90a3\u5c31\u5e72\u8106\u518d\u5199\u4e00\u4e0b\u601d\u8def\u5427\n\n\u53ef\u80fd\u662f\u6211\u592a\u50bb\u4e86\uff0c\u5e76\u6ca1\u6709\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u8d2a\u5fc3\uff0c\u6240\u4ee5\u641e\u51fa\u6765\u4e00\u79cd\u975e\u5e38\u96be\u5199\u7684\u65b9\u6cd5\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a$Maxn$\u6570\u7ec4\uff0c$Maxn[i]$\u8868\u793a$i$\u6b21\u4ea4\u6613\u540e\u6700\u591a\u53ef\u4ee5\u643a\u5e26\u591a\u5c11\u679a\u91d1\u5b50\n\n\u663e\u7136$Maxn[n]=0$\uff0c$n$\u6b21\u4ea4\u6613\u540e\u6211\u4eec\u4e0d\u80fd\u518d\u6709\u91d1\u5b50\u4e86\n\n\u4e4b\u540e\u6211\u4eec\u5012\u7740\u63a8\u51fa$Maxn$\u6570\u7ec4\n\n\u9996\u5148$Maxn[i]$\u5e94\u8be5\u7b49\u4e8e$i$\u6b21\u4ea4\u6613\u548c$i+1$\u6b21\u4ea4\u6613\u4e4b\u95f4\u4e24\u70b9\u7684\u6700\u5c0f\u8fb9\u6743\n\n\u5982\u679c$a[i+1]<0$\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5356\u51fa\u6d88\u8017\u6389\u4e00\u4e9b,\u90a3\u5c31\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u591a\u5f80\u540e\u4f20\u9012\u4e00\u4e9b\uff0c\u4e8e\u662f\u5c31\u6709$Maxn[i]-|a[i+1]|<=Maxn[i+1]$\n\n\u4e5f\u5c31\u662f$Maxn[i]<=Maxn[i]-a[i+1]$\n\n\u5982\u679c$a[i+1]>0$\uff0c\u6211\u4eec\u5356\u51fa\u90fd\u4e0d\u80fd\u4e86\uff0c\u4e8e\u662f\u5c31\u6709$Maxn[i]<=Maxn[i+1]$\n\n\u6c42\u51fa$Maxn$\u6570\u7ec4\u4e4b\u540e\u8d2a\u5fc3\u5c31\u53ef\u4ee5\u5566\n\n\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#define re register\n#define maxn 100005\n#define INF 9999999999\n#define LL long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\nstruct E\n{\n\tint v,nxt;\n}e[maxn<<2];\nstruct g\n{\n\tint x,y;\n\tLL z;\n}G[maxn<<1];\nint fa[maxn<<1];\nint sum[maxn<<1],Fa[maxn<<1],top[maxn<<1],deep[maxn<<1],son[maxn<<1],head[maxn<<1];\nint n,m,q,num;\nLL Maxn[maxn];\nint c[maxn<<1];\nLL a[maxn],b[maxn];\nLL val[maxn<<2];\ninline LL read()\n{\n\tchar c=getchar();\n\tLL x=0,r=1;\n\twhile(c<'0'||c>'9') {if(c=='-') r=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')\n\t\tx=(x<<3)+(x<<1)+c-48,c=getchar();\n\treturn x*r;\n}\ninline int find(int x)\n{\n\tif(x==fa[x]) return x;\n\treturn fa[x]=find(fa[x]);\n}\ninline void add_edge(int x,int y)\n{\n\te[++num].v=y;\n\te[num].nxt=head[x];\n\thead[x]=num;\n}\nvoid dfs1(int x)\n{\n\tsum[x]=1;\n\tint maxx=-1;\n\tfor(re int i=head[x];i;i=e[i].nxt)\n\tif(!deep[e[i].v])\n\t{\n\t\tdeep[e[i].v]=deep[x]+1;\n\t\tFa[e[i].v]=x;\n\t\tdfs1(e[i].v);\n\t\tsum[x]+=sum[e[i].v];\n\t\tif(sum[e[i].v]>maxx) maxx=sum[e[i].v],son[x]=e[i].v;\n\t}\n}\nvoid dfs2(int x,int topf)\n{\n\ttop[x]=topf;\n\tif(!son[x]) return;\n\tdfs2(son[x],topf);\n\tfor(re int i=head[x];i;i=e[i].nxt)\n\tif(deep[e[i].v]>deep[x]&&son[x]!=e[i].v) dfs2(e[i].v,e[i].v);\n}\ninline int LCA(int x,int y)\n{\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(deep[top[x]]<deep[top[y]]) std::swap(x,y);\n\t\tx=Fa[top[x]];\n\t}\n\tif(deep[x]<deep[y]) return x;\n\treturn y;\n}\ninline int cmp(g a,g b)\n{\n\treturn a.z>b.z;\n}\nsigned main()\n{\n\tn=read(),m=read(),q=read();\n\tfor(re int i=1;i<=n;i++) b[i]=read();\n\tfor(re int i=1;i<=n;i++) a[i]=read();\n\tfor(re int i=1;i<=m;i++)\n\t\tG[i].x=read(),G[i].y=read(),G[i].z=read();\n\tfor(re int i=1;i<=n*2;i++) c[i]=i;\n\tif(q>=1)\n\t{\n\t\tint pre=read(),X;\n\t\tfor(re int i=1;i<q;i++)\n\t\t{\n\t\t\tX=read();\n\t\t\tc[X]=pre;\n\t\t}\n\t}\n\tstd::sort(G+1,G+m+1,cmp);\n\tfor(re int i=1;i<=n*2;i++)\n\tif(c[i]==i) fa[i]=i;\n\tint cnt=n;\n\tfor(re int i=1;i<=m;i++)\n\t{\n\t\tint xx=find(c[G[i].x]);\n\t\tint yy=find(c[G[i].y]);\n\t\tif(xx==yy) continue;\n\t\tadd_edge(++cnt,xx),add_edge(cnt,yy);\n\t\tadd_edge(xx,cnt),add_edge(yy,cnt);\n\t\tval[cnt]=G[i].z;\n\t\tfa[xx]=cnt,fa[yy]=cnt;\n\t}\n\tdeep[cnt]=1;\n\tdfs1(cnt);\n\tdfs2(cnt,cnt);\n\tMaxn[n]=0;\n\tfor(re int i=n-1;i;i--)\n\t{\n\t\tint lca=LCA(c[b[i]],c[b[i+1]]);\n\t\tMaxn[i]=val[lca];\n\t\tif(lca==c[b[i]]) Maxn[i]=INF;\n\t\tif(a[b[i+1]]<0)\n\t\t\tMaxn[i]=min(Maxn[i+1]-a[b[i+1]],Maxn[i]);\n\t\telse\n\t\t\tMaxn[i]=min(Maxn[i],Maxn[i+1]);\n\t}\n\tLL now=0;\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tif(a[b[i]]>0) now=min(Maxn[i],a[b[i]]+now);\n\t\telse \n\t\t{\n\t\t\tprintf(\"%lld\\n\",min(now,-a[b[i]]));\n\t\t\tnow+=a[b[i]];\n\t\t\tnow=max(now,0);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1539696917,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3280 \u3010[SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613 \u3011"
    },
    {
        "content": "\u7b2c\u4e00\u8fd9\u4e2a\u9898\u6bd4\u5f53\u5e74NOIP\u597d\n\u7b2c\u4e00\u597d\u5728\u6570\u636e\u4e0a\uff1a\u6709\u4e00\u6761\u957f\u94fe\u3002\n\u5361\u6b7b\u4e0d\u5199ST\u8868\u67e5\u5927\u5c0f\u7684\u3002\n\u7b2c\u4e8c\u8fd9\u4e2a\u9898\u548cSDOI\u7684\u6240\u6258\u95e8\u738b\u7c7b\u4f3c\u3002\n\u5b83\u5b58\u5728\u94c1\u8def\u8fd9\u4e2a\u6982\u5ff5\u3002\n\u4f60\u4e0d\u80fd\u4e24\u4e24\u5efa\u8fb9\u3002\u628a\u7b2c\u4e00\u4e2a\u8f66\u7ad9\u770b\u505a\u539f\u70b9\u7136\u540e\u641e\u4e00\u6761\u6df1\u5ea6\u662f1\u7684\u6811\u3002\n\u7b2c\u4e09\u6700\u540e\u6253\u7b54\u6848\u662f\u4e00\u4e2a\u8d2a\u5fc3\u3002\n\u7136\u540e\u6700\u5927\u751f\u6210\u6811+LCA\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\nusing namespace std;\n#define N (long long)3e5+100\n#define maxn (int)1e5+100\n#define INF (long long)1e18\ninline void read(long long &x){\n\tx=0;\n\tint f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=f;\n} \nstruct Front_star{\n\tlong long u,v,w,nxt;\n}e[N*2],edge[N*2];\nlong long n,m,q;\nlong long list_incoming[maxn]={0};\nlong long trade_sum[maxn]={0};\nlong long cnt=0;\nvoid add(long long u,long long v,long long w){\n\tcnt++;\n\te[cnt].u=u;\n\te[cnt].v=v;\n\te[cnt].w=w;\n}\nlong long ecnt=0;\nlong long first[maxn]={0};\nvoid insert(long long u,long long v,long long w){\n\tecnt++;\n\tedge[ecnt].u=u;\n\tedge[ecnt].v=v;\n\tedge[ecnt].w=w;\n\tedge[ecnt].nxt=first[u];\n\tfirst[u]=ecnt;\n}\nbool cmp(Front_star a,Front_star b){\n\treturn a.w>b.w;\n}\n// KRUSKAL\nlong long fa[maxn]={0};\ninline long long getfa(long long x){\n\tif(fa[x]==x){\n\t\treturn x;\n\t}\n\telse{\n\t\treturn fa[x]=getfa(fa[x]);\n\t}\n}\ninline long long link(long long x,long long y){\n\tlong long dx=getfa(x);\n\tlong long dy=getfa(y);\n\tfa[dx]=dy;\n}\nvoid kruskal(){\n\tlong long all=0;\n\tfor(long long i=1;i<=cnt;i++){\n\t\tlong long u=e[i].u;\n\t\tlong long v=e[i].v;\n//\t\tcout<<\"u= \"<<u<<\" v= \"<<v<<endl; \n\t\tif(getfa(u)!=getfa(v)){\n\t\t\tall++;\n\t\t\tlink(u,v);\n//\t\t\tcout<<u<<\" \"<<v<<\" \"<<e[i].w<<endl;\n//\t\t\tcout<<e[i].w<<endl;\n\t\t\tinsert(u,v,e[i].w);\n\t\t\tinsert(v,u,e[i].w);\n\t\t\tif(all==n-1)\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n// LCA\nlong long f[maxn][35]={0};\nlong long st[maxn][35]={0};\nlong long dep[maxn]={0};\nvoid dfs(long long u,long long fa){\n//\tcout<<u<<\" \"<<fa<<endl;\n\tfor(long long i=1;(1<<i)<=dep[u];i++){\n\t\tf[u][i]=f[f[u][i-1]][i-1];\n\t\tst[u][i]=min(st[f[u][i-1]][i-1],st[u][i-1]);\n\t}\n\tfor(long long i=first[u];i;i=edge[i].nxt){\n\t\tlong long v=edge[i].v;\n\t\tlong long w=edge[i].w;\n\t\tif(v==fa)\n\t\t\tcontinue;\n\t\tdep[v]=dep[u]+1;\n\t\tf[v][0]=u;\n\t\tst[v][0]=w;\n\t\tdfs(v,u);\n\t}\n}\nlong long lca(long long x,long long y){\n\tlong long ans=0;\n\tif(dep[x]<dep[y]){\n\t\tswap(x,y);\n\t}\n\tans=INF+10;\n\tlong long t=dep[x]-dep[y];\n\tfor(long long i=0;(1<<i)<=t;i++){\n\t\tif(t&(1<<i)){\n\t\t\tans=min(ans,st[x][i]);\n\t\t\tx=f[x][i];\n\t\t}\n\t}\n//\tcout<<\"x= \"<<x<<\" \"<<y<<endl; \n\tif(x==y){\n\t\treturn ans;\n\t}\n\t\n\tfor(long long i=20;i>=0;i--){\n\t\tif(f[x][i]!=f[y][i]){\n\t\t\tans=min(ans,min(st[x][i],st[y][i]));\n\t\t\tx=f[x][i];\n\t\t\ty=f[y][i];\n\t\t}\n\t}\n\tans=min(ans,min(st[x][0],st[y][0]));\n\treturn ans;\n}\nint main(){\n\tfreopen(\"motorcycle.in\",\"r\",stdin);\n\tfreopen(\"motorcycle.out\",\"w\",stdout);\n\tread(n);\n\tread(m);\n\tread(q);\n\tfor(long long i=1;i<=n;i++){\n\t\tread(list_incoming[i]);\n\t} \n\tfor(long long i=1;i<=n;i++){\n\t\tread(trade_sum[i]);\n\t}\n\tfor(long long i=1;i<=m;i++){\n\t\tlong long u,v,w;\n\t\tread(u);\n\t\tread(v);\n\t\tread(w);\n\t\tadd(u,v,w);\n\t}\n//\tcout<<\"hello wolrd\"<<endl;\n\tif(q){\n\t\tlong long u;\n\t\tread(u);\n\t\tfor(long long i=2;i<=q;i++){\n\t\t\tlong long v;\n\t\t\tread(v);\n\t\t\tadd(u,v,INF);\n\t\t}\n\t}\n\tsort(e+1,e+1+cnt,cmp);\n\tfor(long long i=1;i<=n;i++){\n\t\tfa[i]=i;\n\t}\n\tkruskal();\n//\tf[1][0]=1;\n//\tdep[1]=0;\n\tdfs(list_incoming[1],0);\n\tlong long nowhaving=0;\n\tif(trade_sum[list_incoming[1]]<0){\n\t\tcout<<0<<endl;\n//\t\treturn 0;\n\t}\n\telse{\n\t\tnowhaving=trade_sum[list_incoming[1]];\n\t}\n//\tfor(long long i=1;i<=n;i++){\n//\t\tfor(long long j=0;j<=2;j++){\n//\t\t\tcout<<st[i][j]<<\" \";\n//\t\t}\n//\t\tcout<<endl;\n//\t}\n//\tcout<<lca(1,3);\n\tfor(long long i=1;i<n;i++){\n\t\tlong long u=list_incoming[i];\n\t\tlong long v=list_incoming[i+1];\n\t\tlong long LCA=lca(u,v);\n//\t\tcout<<\"LCA= \"<<LCA<<\" \"<<u<<\" \"<<v<<endl;\n\t\tnowhaving=min(nowhaving,LCA);\n\t\tif(trade_sum[v]>0){\n\t\t\tnowhaving+=trade_sum[v];\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%lld\\n\",min(nowhaving,-trade_sum[v]));\n\t\t\tnowhaving=max((long long)0,nowhaving+trade_sum[v]);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1519805229,
        "uid": 28147,
        "name": "\u5289\u5b50\u98ba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3280 \u3010[SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613 \u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9053\u9898\uff0c\u5f88\u5bb9\u6613\u60f3\u8d77NOIP2013Day1\u7684\u8d27\u8f66\u8fd0\u8f93\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u9053\u9898\u548c\u8d27\u8f66\u8fd0\u8f93\u57fa\u672c\u4e00\u6837\uff0c\u4e0d\u8fc7\u52a0\u4e86\u4e9b\u9ec4\u91d1\u4e70\u5356\u548c\u5217\u8f66\u3002\n\n\u9996\u5148\uff0c\u5c06\u5b58\u5728\u5217\u8f66\u7684\u70b9\u5168\u90e8\u7f29\u8d77\u6765\uff1b\n\n\u7136\u540e\u518d\u8dd1\u4e00\u904d\u6700\u5927\u751f\u6210\u6811\uff1b\n\n\u5176\u6b21\uff0c\u5728\u6811\u4e0a\u500d\u589e\uff1b\n\n\u6700\u540e\uff0c\u6a21\u62df\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u4e0b\u9762\u732e\u4e0a\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\nprogram p3280;\ntype link=^node;\n     node=record\n       data,v:longint;\n       next:link;\n     end;\nvar e:array[0..200010,1..2] of longint;\n    v,sh,xi,lie,fa,bel:array[0..200010] of longint;\n    b:array[0..200010] of link;\n    n,m,q:longint;\n    d:array[0..100010] of longint;\n    vis:array[0..100010] of boolean;\n    f,g:array[0..100010,0..20] of longint;\nfunction min(x,y:int64):int64;\nbegin\n  if x<y then exit(x) else exit(y);\nend;\nprocedure init;\nvar i,mint:longint;\nbegin\n  readln(n,m,q);\n  for i:=1 to n do\n  begin\n    read(sh[i]);\n    bel[i]:=i;\n  end;\n  for i:=1 to n do\n    read(xi[i]);\n  for i:=1 to m do\n    readln(e[i,1],e[i,2],v[i]);\n  mint:=n;\n  for i:=1 to q do\n  begin\n    read(lie[i]);\n    if lie[i]<mint then mint:=lie[i];\n  end;\n  for i:=1 to q do\n    bel[lie[i]]:=bel[mint];\nend;\nprocedure swap(var x,y:longint);\nvar t:longint;\nbegin\n  t:=x;\n  x:=y;\n  y:=t;\nend;\nprocedure heap(nn,ii:longint);\nvar i,j,x,y,z:longint;\nbegin\n  i:=ii;\n  j:=2*i;\n  x:=e[i,1];\n  y:=e[i,2];\n  z:=v[i];\n  while j<=nn do\n  begin\n    if (v[j]>v[j+1]) and (j<nn) then inc(j);\n    if z>v[j] then\n    begin\n      v[i]:=v[j];\n      e[i,1]:=e[j,1];\n      e[i,2]:=e[j,2];\n      i:=j;\n      j:=2*i;\n    end\n    else\n      j:=nn+1;\n  end;\n  v[i]:=z;\n  e[i,1]:=x;\n  e[i,2]:=y;\nend;\nprocedure heapsort;\nvar i:longint;\nbegin\n  for i:=m div 2 downto 1 do\n    heap(m,i);\n  for i:=m downto 2 do\n  begin\n    swap(e[i,1],e[1,1]);\n    swap(e[i,2],e[1,2]);\n    swap(v[i],v[1]);\n    heap(i-1,1);\n  end;\nend;\nfunction get(x:longint):longint;\nbegin\n  if fa[x]=x then\n    exit(x)\n  else\n    fa[x]:=get(fa[x]);\n  exit(fa[x]);\nend;\nprocedure kruskal;\nvar i,x,y:longint;\n    p:link;\nbegin\n  for i:=1 to n do\n    fa[i]:=i;\n  for i:=1 to m do\n  begin\n    x:=bel[e[i,1]];\n    y:=bel[e[i,2]];\n    if get(x)<>get(y) then\n    begin\n      fa[get(x)]:=get(y);\n      new(p);\n      p^.data:=x;\n      p^.v:=v[i];\n      p^.next:=b[y];\n      b[y]:=p;\n      new(p);\n      p^.data:=y;\n      p^.v:=v[i];\n      p^.next:=b[x];\n      b[x]:=p;\n    end;\n  end;\nend;\nprocedure dfs(x:longint);\nvar p:link;\nbegin\n  p:=b[x];\n  while p<>nil do\n  begin\n    if not vis[p^.data] and (get(p^.data)=get(x)) then\n    begin\n      vis[p^.data]:=true;\n      d[p^.data]:=d[x]+1;\n      f[p^.data,0]:=x;\n      g[p^.data,0]:=p^.v;\n      dfs(p^.data);\n    end;\n    p:=p^.next;\n  end;\nend;\nfunction minw(x,y:longint):int64;\nvar j:longint;\n    s1,s2:int64;\nbegin\n  x:=bel[x];\n  y:=bel[y];\n  if x=y then exit(high(s1));\n  if d[x]>d[y] then swap(x,y);\n  s1:=high(s1);\n  for j:=0 to 20 do\n    if (d[y]-d[x]) and (1 shl j)<>0 then\n    begin\n      s1:=min(s1,g[y,j]);\n      y:=f[y,j];\n    end;\n  if x=y then exit(s1);\n  s2:=high(s2);\n  for j:=20 downto 0 do\n    if (f[x,j]<>f[y,j]) then\n    begin\n      s1:=min(s1,g[y,j]);\n      s2:=min(s2,g[x,j]);\n      y:=f[y,j];\n      x:=f[x,j];\n    end;\n  s1:=min(s1,g[y,0]);\n  s2:=min(s2,g[x,0]);\n  exit(min(s1,s2));\nend;\nprocedure main;\nvar i,j,pre,now:longint;\n    gold,sale:int64;\nbegin\n  heapsort;\n  kruskal;\n  fillchar(d,sizeof(d),0);\n  fillchar(f,sizeof(f),0);\n  for i:=1 to n do\n    for j:=0 to 20 do\n      g[i,j]:=maxlongint;\n  fillchar(vis,sizeof(vis),false);\n  vis[1]:=true;\n  d[1]:=1;\n  dfs(1);\n  for j:=1 to 20 do\n    for i:=1 to n do\n    begin\n      f[i,j]:=f[f[i,j-1],j-1];\n      g[i,j]:=min(g[i,j-1],g[f[i,j-1],j-1]);\n    end;\n  pre:=sh[1];\n  gold:=0;\n  sale:=0;\n  if xi[sh[1]]>=0 then\n    gold:=gold+xi[sh[1]]\n  else\n    writeln(0);\n  for i:=2 to n do\n  begin\n    now:=sh[i];\n    if xi[now]>0 then\n      gold:=min(gold,minw(pre,now))+xi[now];\n    if xi[now]<0 then\n    begin\n      gold:=min(gold,minw(pre,now));\n      sale:=min(gold,-xi[now]);\n      writeln(sale);\n      gold:=gold-sale;\n    end;\n    pre:=now;\n  end;\nend;\nbegin\n  init;\n  main;\nend.\n```",
        "postTime": 1493528897,
        "uid": 27469,
        "name": "xh2010",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3280 \u3010[SCOI2013]\u6469\u6258\u8f66\u4ea4\u6613 \u3011"
    }
]