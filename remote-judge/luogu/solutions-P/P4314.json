[
    {
        "content": "\u521d\u4e00\u7684\u65f6\u5019\u5e9f\u8bdd\u8fc7\u591a\uff0c\u89c1\u8c05\u3002\n\n\u4f5c\u4e3a\u4e00\u4e2a\u521d\u4e00\u7684\u849f\u84bb\uff0c\u5c45\u7136\u505a\u51fa\u8fd9\u9898\u4e86\uff0c\u771f\u4e0d\u53ef\u601d\u8bae\u3002\n\n\u6211\u4ee5\u4e3a\u8fd9\u4e0d\u5c31\u662f\u4e00\u4e2a\u6a21\u677f\u5417\u3002\n\n\u7136\u800c\u5230\u6d1b\u8c37\u4e0a\uff0c\u5c45\u7136\u662f\u9ed1\u9898\u3002\u3002\u3002\n\n# \u6b63\u9898\n\n\u629b\u5f00\u5386\u53f2\u6700\u503c\uff0c\u53ea\u9700\u8981\u4e24\u4e2a\u6807\u8bb0\u4e71\u641e\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u4e00\u4e2a\u533a\u95f4\u5148\u8d4b\u503c\u518d\u52a0\uff0c\u7b2c\u4e8c\u4e2a\u52a0\u6cd5\u64cd\u4f5c\u53ef\u4ee5\u53d8\u6210\u4e00\u4e2a\u8d4b\u503c\u64cd\u4f5c\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u8fd9\u9898\u96be\u70b9\u4e0d\u5728\u8fd9\u3002\n\n#### \u6211\u4eec\u53ef\u4ee5\u5148\u4ece\u7b80\u5355\u7684\u4efb\u52a1\u5165\u624b\uff0c\u60f3\u4e00\u4e0b\u5206\u5757\n\n\u5047\u5982\u7528\u5206\u5757\uff0c\u8981\u7ef4\u62a4\u4ec0\u4e48\uff1f\n1. \u4e00\u4e2a\u533a\u95f4\u5185\u5f53\u524d\u7684\u7d2f\u52a0\uff08\u5047\u5982\u6ca1\u6709\u8d4b\u503c\u64cd\u4f5c\uff09\n2. \u5386\u53f2\u6700\u5927\u7d2f\u52a0\uff08\u5047\u5982\u6ca1\u6709\u8d4b\u503c\u64cd\u4f5c\uff09\n3. \u5047\u5982\u6709\u8d4b\u503c\u64cd\u4f5c\uff0c\u7ef4\u62a4**\u5f53\u524d\u533a\u95f4\u8d4b\u503c**\u548c**\u5386\u53f2\u6700\u5927\u8d4b\u503c**\n4. \u8d4b\u503c\u540e\u52a0\uff0c\u6539\u6210\u8d4b\u503c\u64cd\u4f5c\n5. **\u7b2c\u4e00\u6b21\u8d4b\u503c\u524d**\u6709\u52a0\u6cd5\u64cd\u4f5c\uff0c\u8bb0\u5f55\u4e00\u4e0b\u7b2c\u4e00\u6b21\u8d4b\u503c\u524d\u7684**\u5386\u53f2\u6700\u5927\u7d2f\u52a0**\u5c31\u597d\u4e86\n\n\u603b\u7ed3\uff1a\u4e24\u79cd\u60c5\u51b5\n1. \u533a\u95f4\u4e00\u76f4\u52a0\n2. \u533a\u95f4\u52a0\u4e00\u4e9b\u6570\uff0c\u518d\u8d4b\u503c\n\n\u6839\u636e\u8fd9\u4e9b\u5c31\u80fd\u5199\u51fa\u5206\u5757\u4e86\n\n------------\n\n## \u7ebf\u6bb5\u6811\n\n\u7ebf\u6bb5\u6811\u6bd4\u5206\u5757\u591a $pushdown$\n\n\u5148\u8868\u793a\u51fa\u4e00\u4e2a\u533a\u95f4\u7ecf\u5386\u7684\u72b6\u6001\uff08\u7528 $pushdown$ \u4f5c\u4e3a\u5206\u754c\u7ebf\uff09\uff1a\n\n1. \u6574\u4e2a\u533a\u95f4\u53ea\u6709\u52a0\u6ca1\u6709\u8d4b\u503c\u3002\u7528\u4e24\u4e2a $tag$ \u5206\u522b\u8868\u793a**\u5f53\u524d\u7d2f\u52a0\u7684\u503c**\u548c**\u5386\u53f2\u4e0a\u7d2f\u52a0\u7684\u6700\u5927\u7684\u503c**\uff08\u5982\u4e0b~~\u56fe~~\uff09\n\n![]( https://cdn.luogu.com.cn/upload/pic/50996.png )\n\n2. \u6709\u8d4b\u503c\u64cd\u4f5c\u3002\u7528**\u7b2c\u4e00\u6b21\u8d4b\u503c**\u4f5c\u4e3a\u5206\u754c\u7ebf\uff0c\u524d\u9762\u7684\u6240\u6709\u52a0\u6cd5\u64cd\u4f5c\u53ea\u7528\u7edf\u8ba1**\u5386\u53f2\u6700\u5927\u7d2f\u52a0**\uff0c\u4ee5\u540e\u7684\u52a0\u6cd5\u548c\u8d4b\u503c\u90fd\u770b\u4f5c\u8d4b\u503c\uff0c\u7528\u4e24\u4e2a $tag$ \u8868\u793a**\u5f53\u524d\u8d4b\u503c**\u548c**\u5386\u53f2\u6700\u5927\u8d4b\u503c**\uff08\u5982\u4e0b~~\u56fe~~\uff09\n\n![]( https://cdn.luogu.com.cn/upload/pic/50997.png )\n\n\uff08\u8fd9\u5f20\u56fe\u6253\u9519\u4e86\u4e00\u4e2a\u5b57\uff0c\u5386\u53f2\u6700\u5927\u8d4b\u503c\u4e3a2\uff09\n\n------------\n\n\u7136\u540e\u662f $pushdown$\n\n\u6211\u4eec\u8003\u8651\uff0c\u4e00\u4e2a\u533a\u95f4\u548c\u5b83\u7684\u5de6\u53f3\u5b50\u6811\uff0c\u4e00\u5b9a\u662f\u5de6\u53f3\u5b50\u6811\u5148\u6709 $tag$ \u7136\u540e\u624d\u662f\u8be5\u533a\u95f4\u6709 $tag$ \u6700\u540e\u624d\u662f\u8be5\u533a\u95f4\u7684 $pusdown$\n\n#### \u96be\u70b9\u6765\u4e86\n\n\u600e\u4e48\u7ef4\u62a4\u5f53\u524d\u6700\u5927\u548c\u5386\u53f2\u6700\u5927\uff1f\n\n\u6211\u61d2\u5f97\u753b\u56fe\uff0c\u4f46\u662f\u6211\u53bb\u770b\u522b\u4eba\u7684\u9898\u89e3\uff0c\u6ca1\u56fe\u7b80\u76f4\u6ca1\u6cd5\u770b\n\n\u5927\u6982\u5206\u4e24\u79cd\u60c5\u51b5\u5c31\u53ef\u4ee5\u4e86\n\n1. \u5982\u679c\u8be5\u533a\u95f4\u6ca1\u6709\u8d4b\u503c\u64cd\u4f5c\uff0c\u628a**\u533a\u95f4\u52a0\u6cd5**\u548c**\u5386\u53f2\u6700\u5927\u7d2f\u52a0**\u4e0b\u653e\n2. \u5426\u5219\u6709\u8d4b\u503c\u64cd\u4f5c\u3002\u4f46\u662f\u6ce8\u610f**\u7b2c\u4e00\u6b21\u8d4b\u503c\u524d\u8fd8\u6709\u52a0\u6cd5\u64cd\u4f5c**\uff0c\u8fd9\u4f1a\u5bf9\u5386\u53f2\u6700\u5927\u503c\u4ea7\u751f\u5f71\u54cd\u3002 **\u5148\u628a\u52a0\u6cd5\u4e0b\u653e\uff0c\u7136\u540e\u628a\u8d4b\u503c\u4e0b\u653e**\u3002\n\n\u53ef\u4ee5\u8003\u8651\u4e00\u4e9b\u7ec6\u8282\uff1a\u4e24\u79cd\u60c5\u51b5\u52a0\u6cd5\u4e0b\u653e\u7684\u51fd\u6570\u53ef\u4ee5\u7528\u540c\u4e00\u4e2a\u51fd\u6570\u3002\n\n\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f\u4e0d\u7528\u4e0b\u653e\u5f53\u524d\u52a0\u6cd5\u7684\u3002\u4e0d\u8fc7\uff0c\u5c31\u7b97\u4e0b\u653e\u4e86\u4e5f\u6ca1\u5173\u7cfb\uff0c\u56e0\u4e3a\u5f85\u4f1a\u8fd8\u8981\u4e0b\u653e\u8d4b\u503c\uff0c\u524d\u9762\u7684\u52a0\u6cd5\u5c31\u6ca1\u7528\u4e86\uff08\u5386\u53f2\u6700\u5927\u7d2f\u52a0\u548c\u5386\u53f2\u6700\u5927\u503c\u4f1a\u53e6\u5916\u64cd\u4f5c\uff09\u3002\n\n\u8fd9\u4e9b\u4e0b\u653e\u6709\u70b9\u4e0d\u540c\uff0c\u56e0\u4e3a\u5386\u53f2\u6700\u5927 \u548c \u5f53\u524d \u662f\u5206\u5f00\u8ba1\u7b97\u7684\n\npushdown \u4e0b\u653e\u52a0\u6cd5\u7684\u51fd\u6570\uff08\u5efa\u8bae\u770b\u6ce8\u91ca\uff09\uff1a\n```cpp\ninline void add(int k/*\u5b50\u6811\u4e0b\u6807*/,int v/*\u5f53\u524d\u7d2f\u52a0*/,int hv/*\u5386\u53f2\u6700\u5927\u7d2f\u52a0*/){\n\tif(\u6709\u533a\u95f4\u8d4b\u503c\u6807\u8bb0) return \u533a\u95f4\u8d4b\u503c\n    //\u63a5\u4e0b\u6765\uff0c\u8868\u793a\u5b50\u6811\u53ea\u6709\u533a\u95f4\u52a0\uff0c\u6ca1\u6709\u533a\u95f4\u8d4b\u503c\n    htagp[k]=maxx(htagp[k],hv+tagp[k]);  //\u96be\u70b9\uff0c\u89c1\u56fe1\uff0c\u66f4\u65b0\u5386\u53f2\u6700\u5927\u7d2f\u52a0\n    tagp[k]+=v;  //\u66f4\u65b0\u5f53\u524d\u52a0\u6cd5\n    mx[k]+=v;  //\u66f4\u65b0\u5f53\u524d\u6700\u5927\n    mxh[k]=maxx(mxh[k],mx[k]-tagp[k]+htagp[k]);  //\u66f4\u96be\u70b9\uff0c\u66f4\u65b0\u5386\u53f2\u6700\u5927\u503c\n```\n\n![]( https://cdn.luogu.com.cn/upload/pic/51088.png)\n\n\u56fe1\u4e2d\uff0c\u5de6\u5b50\u6811\u7684\u5386\u53f2\u6700\u5927\u7d2f\u52a0\u53ef\u4ee5\u662f\u539f\u6765\u7684\uff08$\\colorbox{white}{\\color{lightblue}{\u84dd\u5927\u62ec\u53f7}}$\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u6309\u7167\u65f6\u95f4\u8f74\u7684\u53d1\u5c55\u6700\u5927\u7d2f\u52a0\uff08$\\colorbox{white}{\\color{red}{\u7ea2\u7ebf\u6bb5}}$\uff09\n\n\u6ca1\u6709 \u56fe2 \u4e86\uff0c\u4fee\u6539\u81ea\u5df1\u7406\u89e3\u5427\uff0c\u548c\u4e0a\u9762\u5dee\u4e0d\u591a\n\n------------------\n\n\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define lc k<<1\n#define rc k<<1|1\n#define ls lc,l,mid\n#define rs rc,mid+1,r\nconst int MAXN=1e5+5,INF=0x7fffffff;\nint n,m;\nint a[MAXN];\nint mx[MAXN<<2],mxh[MAXN<<2];\nint tagp[MAXN<<2],tagc[MAXN<<2];\t//\u5e38\u89c4tag\nint htagp[MAXN<<2],htagc[MAXN<<2];\ninline void pushup(int k){\n\tmx[k]=max(mx[lc],mx[rc]);\n\tmxh[k]=max(mxh[lc],mxh[rc]);\n}\nvoid Build(int k,int l,int r){\n\ttagc[k]=INF;\t//\u8d4b\u503c\u6807\u8bb0\u4e3aINF\u8868\u793a\u6ca1\u6709\u8d4b\u503c\u64cd\u4f5c\n    htagc[k]=-INF;\t//\u9632\u6b62\u4e00\u76f4\u662f\u8d1f\u6570\n\tif(l==r){\n\t\tmx[k]=mxh[k]=a[l];\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tBuild(ls);\n\tBuild(rs);\n\tpushup(k);\n\treturn ;\n}\ninline void chg(int k,int v,int hv){\n\tmx[k]=v;\n\tmxh[k]=max(mxh[k],hv);\n\ttagc[k]=v;\n\thtagc[k]=max(htagc[k],hv);\n}\ninline void add(int k,int v,int hv){\n\tif(tagc[k]!=INF) return chg(k,tagc[k]+v,tagc[k]+hv);\t//\u8f6c\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\n\thtagp[k]=max(htagp[k],hv+tagp[k]);\n\ttagp[k]+=v;\n\tmx[k]+=v;\n\tmxh[k]=max(mxh[k],mx[k]-tagp[k]+htagp[k]);\n}\ninline void pushdwn(int k){\n\tadd(lc,tagp[k],htagp[k]);\n\tadd(rc,tagp[k],htagp[k]);\n\ttagp[k]=htagp[k]=0;\n\tif(tagc[k]!=INF){\t//\u5982\u679c\u6709\u8d4b\u503c\u6807\u8bb0\n\t\tchg(lc,tagc[k],htagc[k]);\n\t\tchg(rc,tagc[k],htagc[k]);\n\t\ttagc[k]=INF;\n\t}\n}\nint qx,qy,qv;\nint Query(int k,int l,int r){\n\tif(qx<=l&&r<=qy) return mx[k];\n\tpushdwn(k);\n\tint mid=l+r>>1;\n\tint res=-INF;\n\tif(qx<=mid) res=max(res,Query(ls));\n\tif(mid<qy) res=max(res,Query(rs));\n\treturn res;\n}\nint Queryh(int k,int l,int r){\n\tif(qx<=l&&r<=qy) return mxh[k];\n\tpushdwn(k);\n\tint mid=l+r>>1;\n\tint res=-INF;\n\tif(qx<=mid) res=max(res,Queryh(ls));\n\tif(mid<qy) res=max(res,Queryh(rs));\n\treturn res;\n}\nvoid Modifyp(int k,int l,int r){  //plus\n\tif(qx<=l&&r<=qy) return add(k,qv,max(qv,0));\n\tpushdwn(k);\n\tint mid=l+r>>1;\n\tif(qx<=mid) Modifyp(ls);\n\tif(mid<qy) Modifyp(rs);\n\tpushup(k);\n\treturn ;\n}\nvoid Modifyc(int k,int l,int r){  // change\n\tif(qx<=l&&r<=qy) return chg(k,qv,qv);\n\tpushdwn(k);\n\tint mid=l+r>>1;\n\tif(qx<=mid) Modifyc(ls);\n\tif(mid<qy) Modifyc(rs);\n\tpushup(k);\n\treturn ;\n}\nint main(){\n\t//freopen(\"4314.in\",\"r\",stdin);\n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++)\n\t\tscanf(\"%d\",a+i);\n\tBuild(1,1,n);\n\tscanf(\"%d\",&m);\n\twhile(m--){\n\t\tchar opt[2];\n\t\tscanf(\"%s%d%d\",opt,&qx,&qy);\n\t\tif(opt[0]=='Q') printf(\"%d\\n\",Query(1,1,n));\n\t\telse if(opt[0]=='A') printf(\"%d\\n\",Queryh(1,1,n));\n\t\telse{\n\t\t\tscanf(\"%d\",&qv);\n\t\t\tif(opt[0]=='P') Modifyp(1,1,n);\n\t\t\telse Modifyc(1,1,n);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u597d\u50cf\u5404\u4f4d\u7684\u9898\u89e3\u90fd\u6bd4\u6211\u7684\u7b80\u5355\u5f88\u591a\uff1f\n\n------------\n\n2021.1.22\n\n\u88ab [y_dove](https://www.luogu.com.cn/user/248872) hack\u4e86\uff0c\u6ca1\u6709\u8003\u8651\u4e00\u4e2a\u4f4d\u7f6e\u4e00\u76f4\u662f\u8d1f\u6570\u5e76\u4e14\u4fee\u6539\u6210\u8d1f\u6570\u7684\u60c5\u51b5\n\n\u7adf\u7136\u6389\u7d2b\u4e86",
        "postTime": 1549336176,
        "uid": 116116,
        "name": "LZDQ",
        "ccfLevel": 0,
        "title": "\u9ed1\u9898\u9898\u89e3 P4314 \u3010CPU\u76d1\u63a7\u3011"
    },
    {
        "content": "Update:  \n2020-1-8 \u4fee\u590d\u4e86 ```do_val``` \u51fd\u6570\u7684 bug\uff0c\u611f\u8c22 @z7z_Eta \u63d0\u4f9b\u7684 hack \u6570\u636e \uff1b \u4fee\u6539\u4e86\u90e8\u5206\u6587\u7ae0\u5185\u5bb9\n\n---\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4314)\n\n\u9996\u884c\u6c42\u8d5e\uff0c\u53cd\u6b63\u4e0d FA \u94b1 qwq\n\n## 0.\u524d\u7f6e\n\n- \u7ebf\u6bb5\u6811\uff08\u5e76\u80fd\u8f83\u597d\u5730\u7406\u89e3\uff09\n- \u4e00\u9897\u80fd\u542c\u6211\u628a\u5e9f\u8bdd\u8bf4\u5b8c\u7684\u5fc3\n\n## 1.\u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u51fa $T$ \u4e2a\u6570\uff0c$E$ \u4e2a\u64cd\u4f5c\uff08$T,E \\leq 10^5$\uff09:\n\n- Q X Y\uff1a\u8be2\u95ee\u4ece $X$ \u5230 $Y$ \u7684**\u5f53\u524d**\u6700\u5927\u503c\n- A X Y\uff1a\u8be2\u95ee\u4ece $X$ \u5230 $Y$ \u7684**\u5386\u53f2**\u6700\u5927\u503c\uff08\u51fa\u73b0\u8fc7\u7684\u6700\u5927\u6570\uff09\n- P X Y Z\uff1a\u5c06 $X$ \u5230 $Y$ \u8fd9\u6bb5\u533a\u95f4\u52a0 $Z$\n- C X Y Z\uff1a\u5c06 $X$ \u5230 $Y$ \u8fd9\u6bb5\u533a\u95f4\u8d4b\u503c\u4e3a $Z$\n\n## 2.\u7ebf\u6bb5\u6811\n\n\u770b\u5230\u8fd9\u9053\u9898\uff0c\u9996\u5148\u4e0d\u96be\u60f3\u5230\u7684\u5c31\u662f\u7ebf\u6bb5\u6811\n\n\u5982\u679c\u6ca1\u6709\u67e5\u8be2\u5386\u53f2\u6700\u5927\u503c\uff0c\u8fd9\u9053\u9898\uff08\u5bf9\u4e8e\u60a8\u6765\u8bf4\uff09\u80af\u5b9a\u6ca1\u6709\u96be\u5ea6\n\n\u52a0\u4e0a\u5386\u53f2\u6700\u5927\u503c\uff0c\u4e8b\u60c5\u5c31\u590d\u6742\u4e86\u3002\u3002\u3002\n\n\u8fd9\u4e5f\u662f\u8fd9\u9053\u9898\u56f0\u96be\u7684\u5730\u65b9\uff0c\u5373\u5bf9\u4e8e ```lazy tag``` \u7684\u7406\u89e3\n\n---\n\n$\\tiny \\text{\uff08\u4ee5\u4e0a\u90fd\u662f\u5e9f\u8bdd\uff09}$\n\n---\n\n## 3.lazy tag \u7684\u4f7f\u7528\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5b8c\u5168\u53ef\u4ee5\u4f5c\u4e3a\u7ebf\u6bb5\u6811\u7684\u6a21\u677f\u9898\uff0c\u8003\u5bdf\u4e86 ```lazy tag``` \u4e0e\u6811\u4e0a\u8282\u70b9\u7684\u66f4\u65b0\u987a\u5e8f\u7684\u5173\u7cfb\n\n### \u5982\u4f55\u7406\u89e3\uff1f\n\n```lazy tag``` \u5b9e\u9645\u4e0a\u53ef\u4ee5\u770b\u4f5c\u662f\u5bf9\u4e8e\u8be5\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684**\u64cd\u4f5c\u5e8f\u5217**\uff0c\u8fd9\u4e5f\u662f\u7ebf\u6bb5\u6811\u7684\u7cbe\u9ad3\u6240\u5728\n\n```push_down``` \u64cd\u4f5c\u5c31\u662f\u628a\u7236\u8282\u70b9\u7684\u64cd\u4f5c\u5e8f\u5217\u63a5\u5728\u513f\u5b50\u8282\u70b9\u7684\u5e8f\u5217**\u4e4b\u540e**  \n\uff08_\u601d\u8003\uff1a\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u662f \u201c **\u4e4b\u540e** \u201d \uff1f_\uff09\n\n\u5bf9\u4e00\u4e2a\u70b9\u8fdb\u884c ```push_down``` \u64cd\u4f5c\u540e\uff0c\u8be5\u70b9\u7684\u64cd\u4f5c\u5e8f\u5217\u5373\u88ab\u6e05\u7a7a\uff0c\u56e0\u4e3a\u5728\u9012\u5f52\u5b8c\u5b50\u6811\u540e\uff0c\u8be5\u70b9\u7b54\u6848\u5c06\u88ab\u66f4\u65b0\u3002\u4ee5\u4e0b\u6587\u7ae0\u4e2d\u7684 \u201c \u64cd\u4f5c\u5e8f\u5217 \u201d\uff0c\u90fd\u6307\u7684\u662f\u8be5\u70b9\u4e0a\u4e00\u6b21\u8fdb\u884c ```push_down``` \u540e\uff08\u5373\u4e0a\u4e00\u6b21\u6e05\u7a7a\u540e\uff09\u7684\u64cd\u4f5c\u5e8f\u5217\n\n### \u5982\u4f55\u5904\u7406\u64cd\u4f5c\u5e8f\u5217\uff1f\n\n\u9996\u5148\uff0c\u76f8\u90bb\u7684\u540c\u79cd\u64cd\u4f5c\u53ef\u88ab\u5408\u5e76\n\n\u4e8e\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u64cd\u4f5c\u5e8f\u5217\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\uff08 \"+\" \u53f7\u8868\u793a\u64cd\u4f5c\u7684\u5148\u540e\u987a\u5e8f\uff0c\u6c49\u5b57\u53d9\u8ff0\u53ef\u80fd\u5f71\u54cd\u60a8\u7684\u9605\u8bfb\u4f53\u9a8c\uff09\uff1a\n\n1. $\\text{\u52a0\u64cd\u4f5c}$\n2. $\\text{\u52a0\u64cd\u4f5c} + \\text{\u8d4b\u503c\u64cd\u4f5c}$\n3. $\\text{\u52a0\u64cd\u4f5c} + \\text{\u8d4b\u503c\u64cd\u4f5c} + \\text{\u52a0\u64cd\u4f5c}$\n4. $\\text{\u52a0\u64cd\u4f5c} + \\text{\u8d4b\u503c\u64cd\u4f5c} + \\text{\u52a0\u64cd\u4f5c} + \\text{\u8d4b\u503c\u64cd\u4f5c}$\n5. $\\cdots$\n\n\u8fd9\u4e2a\u64cd\u4f5c\u5e8f\u5217\u663e\u7136\u5f88\u96be\u4fdd\u5b58\u5728\u6bcf\u4e00\u4e2a\u70b9\u4e0a\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u9996\u6b21\u8d4b\u503c\u64cd\u4f5c\u4e4b\u540e\u7684\u4efb\u4f55\u4fee\u6539\u90fd\u53ef\u4ee5\u770b\u4f5c\u8d4b\u503c\u64cd\u4f5c\uff08_\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48_\uff09\n\n\u4e8e\u662f\u64cd\u4f5c\u5e8f\u5217\u5316\u7b80\u4e3a\uff08**\u91cd\u70b9**\uff09\uff1a\n\n$$\\text{\u52a0\u64cd\u4f5c + \u8d4b\u503c\u64cd\u4f5c}$$\n\n\u73b0\u5728\uff0c\u606d\u559c\u60a8\u89e3\u51b3\u4e86\u4e24\u4e2a\u4e2a\u5f88\u5927\u7684\u95ee\u9898\uff1a\u64cd\u4f5c\u5e8f\u5217\u5982\u4f55\u4fdd\u5b58 & \u540c\u4e00\u70b9\u4e0a\u64cd\u4f5c\u7684\u5148\u540e\u987a\u5e8f\u95ee\u9898\n\n\u4e8e\u662f\uff0c\u53ea\u7528\u4fdd\u5b58\u52a0\u548c\u8d4b\u503c\u4e24\u79cd ```lazy tag```\uff0c\u4fbf\u53ef\u8bb0\u5f55\u8be5\u8282\u70b9\u7684\u64cd\u4f5c\u5e8f\u5217\n\n---\n\n**\u5982\u679c\u60a8\u7406\u89e3\u4e86\u4ee5\u4e0a\u5185\u5bb9\uff0c\u90a3\u4e48\u60a8\u5c31\u5df2\u7ecf\u638c\u63e1\u4e86\u672c\u9898\u7b97\u6cd5\u7684\u6838\u5fc3\u3002\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\uff0c\u4e5f\u53ef\u4ee5\u5148\u770b\u4ee3\u7801\uff0c\u518d\u56de\u987e\u4ee5\u4e0a\u5185\u5bb9**\n\n---\n\n\u5176\u5b83\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\n\n## 4.code\n\n```cpp\n#include<cstdio>\nconst int MAXN = 1e5 + 5;\nconst int inf = 0x7fffffff;\n\ninline int max(int a,int b){ return a>b? a: b;}\ninline void chk_max(int &a,int b){ if(a<b) a=b;}\n\nint ans[MAXN<<2],max_ans[MAXN<<2];//\u533a\u95f4\u6700\u5927\u503c\t\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c \n\nbool vis[MAXN<<2];//\u662f\u5426\u8fdb\u884c\u8fc7\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c \nint sum[MAXN<<2], val[MAXN<<2];//\u4e0a\u6b21\u4e0b\u653e\u4e4b\u540e\u7684\u52a0\u548c\t\u4e0a\u6b21\u4e0b\u653e\u4e4b\u540e\u7684\u8d4b\u503c\u64cd\u4f5c \uff08\u8d4b\u503c\u4e4b\u540e\u7684\u52a0\u64cd\u4f5c\u4e00\u5e76\u7b97\u5165\u8d4b\u503c\uff0c\u4e0b\u540c\uff09\nint max_sum[MAXN<<2], max_val[MAXN<<2];//\u4e0a\u6b21\u4e0b\u653e\u4e4b\u540e\u8fbe\u5230\u7684\u6700\u5927\u52a0\u548c\t\u4e0a\u6b21\u4e0b\u653e\u4e4b\u540e\u8d4b\u7684\u6700\u5927\u503c \n/*\n\u6ce8\u610f\u8fd9\u91cc\u5b9e\u9645\u4e0a\u4f7f\u7528\u4e864\u4e2alazy_tag\uff0c\u4e0d\u8fc7\u5982\u679c\u60a8\u7406\u89e3\u4e86\u7b97\u6cd5\u7684\u6838\u5fc3\uff0c\u60a8\u5e94\u8be5\u77e5\u9053\u6211\u5728\u5e72\u4ec0\u4e48\n*/\n#define ls(u) ((u)<<1)\n#define rs(u) ((u)<<1|1)//\u4e2a\u4eba\u4e60\u60ef\uff0c\u5de6\u53f3\u513f\u5b50\n\n\ninline void push_up(int u)//push_up\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u7528\u5de6\u53f3\u513f\u5b50\u7684\u7b54\u6848\u66f4\u65b0\u672c\u8282\u70b9\u7684\u7b54\u6848\n{\n    ans[u] = max(ans[ls(u)], ans[rs(u)]);\n    max_ans[u] = max(max_ans[ls(u)], max_ans[rs(u)]);\n}\n\n\n//\u6211\u5c06\u66f4\u65b0lazy_tag\u7684\u64cd\u4f5c\u6253\u5305\u6210\u51fd\u6570\uff0c\u4e0d\u7136\u6709\u53ef\u80fd\u5728\u7ec6\u8282\u4e0a\u51fa\u9519\uff08\u5176\u5b9e\u6211\u4e00\u5f00\u59cb\u5c31\u662f\u5728\u8fd9\u91cc\u51fa\u7684\u9519\uff09\n/*\n\u66f4\u65b0\u52a0\u64cd\u4f5c\u7684tag\uff0c\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n 1.\u8d4b\u8fc7\u503c\uff0c\u7b97\u4f5c\u8d4b\u503c\u64cd\u4f5c\n 2.\u6ca1\u8d4b\u8fc7\u503c\n*/\ninline void do_sum(int u,int k,int max_k)//max_k\u8868\u793a\u7236\u8282\u70b9\u5728\u4e0a\u4e00\u6b21push_down\u4e4b\u540e\u8fbe\u5230\u7684\u6700\u5927\u52a0\u548c\n{\n    if(vis[u])\n    {\n        chk_max(max_val[u], val[u]+max_k);\n        chk_max(max_ans[u], ans[u]+max_k);\n        ans[u]+=k;\n        val[u]+=k;\n    }\n    else\n    {\n        chk_max(max_sum[u], sum[u]+max_k);\n        chk_max(max_ans[u], ans[u]+max_k);\n        ans[u]+=k;\n        sum[u]+=k;\n    }\n}\n\ninline void do_val(int u,int k,int max_k)//max_k\u8868\u793a\u7236\u8282\u70b9\u5728\u4e0a\u4e00\u6b21push_down\u4e4b\u540e\u8fbe\u5230\u7684\u6700\u5927\u8d4b\u503c\n{\n\tif(vis[u])\n\t{\n\t\tchk_max(max_val[u], max_k);\n    \tchk_max(max_ans[u], max_k);\n\t}\n    else\n    {\n    \tvis[u]=1;//\u8be5\u70b9\u6807\u8bb0\u4e3a\u8d4b\u8fc7\u503c\n    \tmax_val[u] = max_k;\n    \tchk_max(max_ans[u], max_k);\n\t}\n    ans[u] = val[u] = k;\n}\n\ninline void push_down(int u)\n{\n    do_sum(ls(u),sum[u],max_sum[u]);\n    do_sum(rs(u),sum[u],max_sum[u]);//\u5148\u4f20\u9012\u548c\n    \n    sum[u] = max_sum[u] = 0;//\u4e0b\u4f20\u4e4b\u540e\u6e05\u96f6\n    \n    if(vis[u])\n    {\n        do_val(ls(u),val[u],max_val[u]);\n        do_val(rs(u),val[u],max_val[u]);\n        \n        vis[u] = 0;\n        val[u] = max_val[u] = 0;//\u4e0b\u4f20\u4e4b\u540e\u6e05\u96f6\n    }\n}\n\nvoid build(int u,int l,int r)//\u5efa\u6811\n{\n    if(l==r)\n    {\n        scanf(\"%d\",&ans[u]);\n        max_ans[u]=ans[u];\n        return;\n    }\n    \n    int mid=(l+r)>>1;\n    build(ls(u),l,mid);\n    build(rs(u),mid+1,r);\n    push_up(u);\n}\n\nint query(int u,int l,int r, int ql,int qr)//Q\u64cd\u4f5c\n{\n    if(ql<=l && r<=qr) return ans[u];\n    \n    push_down(u);\n    int mid=(l+r)>>1, ret=-inf;\n    if(ql<=mid) ret = query(ls(u),l,mid, ql,qr);\n    if(mid<qr) chk_max(ret, query(rs(u),mid+1,r, ql,qr));\n    \n    return ret;\n}\n\nint query_max(int u,int l,int r, int ql,int qr)//A\u64cd\u4f5c\uff0c\u4e0eQ\u7c7b\u4f3c\n{\n    if(ql<=l && r<=qr) return max_ans[u];\n    \n    push_down(u);\n    int mid=(l+r)>>1, ret=-inf;\n    if(ql<=mid) ret = query_max(ls(u),l,mid, ql,qr);\n    if(mid<qr) chk_max(ret, query_max(rs(u),mid+1,r, ql,qr));\n    \n    return ret;\n}\n\nvoid add(int u,int l,int r, int ql,int qr,int k)//P\u64cd\u4f5c\n{\n    if(ql<=l && r<=qr)\n    {\n        do_sum(u,k,k);//\u8fd9\u91ccmax_k\u4e5f\u586bk\u5c31\u884c\u4e86\n        return;\n    }\n    \n    push_down(u);\n    int mid = (l+r)>>1;\n    if(ql<=mid) add(ls(u),l,mid, ql,qr,k);\n    if(mid<qr) add(rs(u),mid+1,r, ql,qr,k);\n    push_up(u);\n}\n\nvoid assign(int u,int l,int r, int ql,int qr,int k)//C\u64cd\u4f5c\n{\n    if(ql<=l && r<=qr)\n    {\n        do_val(u,k,k);\n        return;\n    }\n    \n    push_down(u);\n    int mid = (l+r)>>1;\n    if(ql<=mid) assign(ls(u),l,mid, ql,qr,k);\n    if(mid<qr) assign(rs(u),mid+1,r, ql,qr,k);\n    push_up(u);\n}\n\n//\u8fd9\u4e24\u4e2a\u51fd\u6570\u662f\u8c03\u8bd5\u7528\u7684\uff0c\u7528\u4e8e\u6253\u5370\u5e8f\u5217\nvoid print(int u,int l,int r)\n{\n    if(l==r)\n    {\n        printf(\"%d \",ans[u]);\n        return;\n    }\n    push_down(u);\n    int mid=(l+r)>>1;\n    print(ls(u),l,mid);\n    print(rs(u),mid+1,r);\n}\ninline void test(int t)\n{\n    printf(\"=========================================\\n\");\n    print(1,1,t);\n    printf(\"\\n=========================================\\n\");\n}\n\nint main(void)\n{\n    int t;\n    scanf(\"%d\",&t);\n    build(1,1,t);\n    \n    int e;\n    scanf(\"%d\",&e);\n    while(e--)\n    {\n        char c=getchar();\n        while(c!='Q' && c!='A' && c!='P' && c!='C') c=getchar();//\u4e2a\u4eba\u4e60\u60ef\uff0c\u611f\u89c9\u8fd9\u4e48\u5199\u6bd4\u8f83\u4fdd\u9669 \n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        \n        if(c=='Q') printf(\"%d\\n\",query(1,1,t, x,y));\n        if(c=='A') printf(\"%d\\n\",query_max(1,1,t, x,y));\n        if(c=='P')\n        {\n            int z;\n            scanf(\"%d\",&z);\n            add(1,1,t, x,y,z);\n            //test(t);\n        }\n        if(c=='C')\n        {\n            int z;\n            scanf(\"%d\",&z);\n            assign(1,1,t, x,y,z);\n            //test(t);\n        }\n    }\n    return 0;\n}\n```\n\n\u672c\u9898\u89e3\u4e3b\u8981\u7528\u4e8e\u7406\u6e05\u81ea\u5df1\u601d\u8def\uff0c\u5982\u679c\u6709\u4e0e\u4ed6\u4eba\u65b9\u6cd5\u91cd\u590d\u4e5f\u4e0d\u8981\u55b7qaq\n\n\u5b9e\u9645\u8fd8\u5199\u4e86\u86ee\u957f\u65f6\u95f4\u7684\u3002\u3002\u3002\u7801\u5b57\u624b\u9178\uff0c\u89c1\u8c05qwq\n\n\u5982\u679c\u60a8\u89c9\u5f97\u9898\u89e3\u6709\u9519\u8bef\uff0c\u53ef\u4ee5\u79c1\u4fe1\u6216\u8005\u8bc4\u8bba\n\n\u5f53\u7136\u522b\u5fd8\u4e86\u70b9\u8d5eqwq",
        "postTime": 1560785080,
        "uid": 73687,
        "name": "He_Ren",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4314 \u3010CPU\u76d1\u63a7\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u80af\u5b9a\u662f\u7528\u5f53\u524d\u6700\u5927\u503c\u53ca\u5f53\u524d\u7684\u6807\u8bb0\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u503c\uff0c\u5982\u679c\u4f60\u771f\u8fd9\u6837\u5199\uff0c\u5c31\u4f1aWA\u6210 $20pts$\uff0c\u6bd5\u7adf\u662f\u9053\u9ed1\u9898\uff0c\u4e0d\u53ef\u80fd\u8fd9\u4e48\u7b80\u5355\uff01\n\n\u4e3e\u4e2a\u53cd\u4f8b\uff1a\n\n```\n8\n1 1 10 1 1 1 1 1\n3\nP 1 8 100\nP 1 8 -10\nA 3 3\n```\n\n\u663e\u7136\uff0c\u7b54\u6848\u662f110\uff0c\u4f46\u5982\u679c\u6309\u521a\u624d\u90a3\u6837\u7ef4\u62a4\u7684\u8bdd\u5c31\u4f1a\u8f93\u51fa100,\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u628a\u4f1a\u51cf\u5c0f\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u7684add\u6807\u8bb0\uff0c**\u513f\u5b50\u7684\u5386\u53f2\u6700\u5927\u503c\u5f97\u4e0d\u5230\u53ca\u65f6\u7684\u66f4\u65b0**\uff0c\u5c31\u4f1aWA\u6389\n\n\u6240\u4ee5\uff0c\u6bcf\u4e2a\u8282\u70b9\u8fd8\u8981\u8bb0\u5f55\u5386\u53f2\u6700\u5927add\u6807\u8bb0\n\n\u540c\u7406\uff0c\u8fd8\u8981\u8bb0\u5f55\u5386\u53f2\u6700\u5927\u8986\u76d6\u6807\u8bb0\n\n---\n\n\u5148\u8bb0\u7262\u542b\u4e49\uff1a\uff08\u5f88\u597d\u8bb0\u5427\uff0c\u5c31\u662f\"\u5b57\u9762\"\u610f\u601d\uff09\n\n\u6ce8\uff1ah\u662fhistory\u7684\u610f\u601d\n\n- `add` \u5f53\u524d\u52a0\u6cd5\u6807\u8bb0\n\n- `hadd` \u5386\u53f2\u6700\u5927\u52a0\u6cd5\u6807\u8bb0\n\n- `cov` \u5f53\u524d\u8986\u76d6\u6807\u8bb0\n\n- `hcov` \u5386\u53f2\u6700\u5927\u8986\u76d6\u6807\u8bb0\n\n- `iscov` \u5f53\u524d\u662f\u5426\u8986\u76d6\u6807\u8bb0\uff0c\u503c\u4e3atrue/false\n\n- `mx` \u5f53\u524d\u533a\u95f4\u6700\u5927\u503c\n\n- `hmx` \u5386\u53f2\u533a\u95f4\u6700\u5927\u503c\n\n\u4e24\u79cd\u8be2\u95ee\u7167\u5e38\uff0c\u53d6\u533a\u95f4mx/hmx\u7684\u6700\u5927\u503c\u5373\u53ef,\u6ce8\u610f\u9898\u76ee\u4e2d\u53ea\u8bf4\u503c\u90fd\u5728int\u8303\u56f4\u5185\uff0c\u6240\u4ee5\u4fdd\u9669\u8d77\u89c1\uff0c`inf` \u8981\u53d6 INT_MAX (2147483647)\n\n```cpp\nint Qmax(int i,int l,int r){\n\tif(tree[i].l>=l&&tree[i].r<=r){\n\t\treturn tree[i].mx;\n\t}\n\tpushdown(i);\n\tint ans=-inf;\n\tint mid=(tree[i].l+tree[i].r)>>1;\n\tif(l<=mid){\n\t\tans=max(ans,Qmax(i*2,l,r));\n\t}\n\tif(r>mid){\n\t\tans=max(ans,Qmax(i*2+1,l,r));\n\t}\n\treturn ans;\n}\nint Qhmax(int i,int l,int r){\n\tif(tree[i].l>=l&&tree[i].r<=r){\n\t\treturn tree[i].hmx;\n\t}\n\tpushdown(i);\n\tint ans=-inf;\n\tint mid=(tree[i].l+tree[i].r)>>1;\n\tif(l<=mid){\n\t\tans=max(ans,Qhmax(i*2,l,r));\n\t}\n\tif(r>mid){\n\t\tans=max(ans,Qhmax(i*2+1,l,r));\n\t}\n\treturn ans;\n}\n```\n\n\u513f\u5b50\u66f4\u65b0\u7236\u4eb2\u4e5f\u7167\u5e38\uff0c\u76f4\u63a5\u53d6max\u5373\u53ef:\n\n```cpp\ninline void update(int i){\n\ttree[i].mx=max(tree[i*2].mx,tree[i*2+1].mx);\n\ttree[i].hmx=max(tree[i].hmx,tree[i].mx);\n   //\u6216tree[i].hmx=max(tree[i*2].hmx,tree[i*2+1].hmx);\n}\n```\n\n---\n\n### \u91cd\u70b9\u662f\u5982\u4f55pushdown\n\n\u5148\u4ecb\u7ecd\u4e00\u4e2a**\u597d\u79d1\u6280:** \u6210\u5458\u51fd\u6570\uff0c\u53ef\u4ee5\u4f7f\u4ee3\u7801\u770b\u8d77\u6765\u6761\u7406\u66f4\u6e05\u6670\uff0c\u5e76\u5927\u5927\u51cf\u5c11\u7801\u91cf\uff0c\u4e0d\u8fc7\u53ef\u80fd\u4f1a\u7a0d\u5fae\u6162\u4e00\u70b9\uff0c\u52a0\u4e00\u4e9b `inline` \u5c31\u6ca1\u5173\u7cfb\u5566\n\npushdown\u7684\u65f6\u5019\u91cd\u70b9\u662f\u8981**\u5206\u7c7b\u8ba8\u8bba**\uff1a\u4e4b\u524d\u662f\u5426\u88ab\u8986\u76d6\u8fc7\uff0c\u5373\u7531 `iscov` \u6807\u8bb0\u51b3\u5b9a\n\n\u5148\u8bb2\u8986\u76d6\u7684\u65f6\u5019\uff1a\uff08\u8981\u4f20 `d` \u548c `hd` ,\u8868\u793a\u7528\u4e8e\u66f4\u65b0\u7684\u5f53\u524d\u8986\u76d6\u503c\u548c\u7528\u4e8e\u66f4\u65b0\u7684\u5386\u53f2\u8986\u76d6\u6700\u5927\u503c\uff09\n\n- \u5982\u679ciscov\u4e3a`true`\uff1a\u7528hd\u66f4\u65b0hcov\uff0c\u53d6max\n\n- \u5982\u679ciscov\u4e3a`false`\uff1aiscov\u53d8\u4e3atrue\uff0chcov\u53d8\u4e3ahd\n\n\u6b64\u5916\u8fd8\u8981\u66f4\u65b0\u5386\u53f2\u6700\u5927\u503chmx\uff0c(\u548chd\u53d6max)\n\n\u52a0\u6cd5\u7684\u65f6\u5019\u66f4\u590d\u6742\u4e00\u4e9b\uff1a`d` \u548c `hd` \u7684\u542b\u4e49\u540c\u7406\n\n- \u5982\u679ciscov\u4e3a`true`\uff1a\u8bf4\u660e\u4e4b\u524d\u88ab\u8986\u76d6\u8fc7\u4e86\uff0c\u6b64\u65f6\u76f8\u5f53\u4e8e\u7528d+cov\u8fdb\u884cCover\u5373\u53ef\n\n- \u5982\u679ciscov\u4e3a`false`\uff1a\u6b64\u65f6\u53ea\u6709\u52a0\u6cd5\uff0c\u7528mx+hd\u548cadd+hd\u5206\u522b\u66f4\u65b0hmx\u548chad,\u5e76\u66f4\u65b0mx\u548cadd\u6807\u8bb0 (\u628amx\u548cadd\u52a0\u4e0ad)\n\n\u6700\u540e\uff0cpushdown\u4ee5\u540e\u522b\u5fd8\u8bb0**\u6e05\u7a7a\u6807\u8bb0**\uff01\uff01\n\n```cpp\n\n//\u7ed3\u6784\u4f53\u91cc\u7684\u6210\u5458\u51fd\u6570\uff1a\nstruct node{\n\t...\n\tinline void Cover(int d,int hd){//\u8986\u76d6\n\t\tif(iscov){\n\t\t\thcov=max(hcov,hd);\n\t\t}\n\t\telse{\n\t\t\tiscov=true;\n\t\t\thcov=hd;\n\t\t}\n\t\thmx=max(hmx,hd);\n\t\tcov=mx=d;\n\t\tadd=0;\n\t}\n\tinline void Add(int d,int hd){//\u8f85\u52a9Change\u6267\u884c\u52a0\u6cd5\n\t\thadd=max(hadd,add+hd);\n\t\thmx=max(hmx,mx+hd);\n\t\tadd+=d,mx+=d;\n\t}\n\tinline void Change(int d,int hd){//\u52a0\u6cd5\u7684\u5206\u7c7b\u8ba8\u8bba\n\t\tif(iscov)Cover(cov+d,cov+hd);\n\t\telse Add(d,hd);\n\t}\n   /*\u5176\u5b9e\u8fd8\u53ef\u4ee5\u628aChange\u548cAdd\u5408\u5e76\uff0c\u6ce5\u840c\u522b\u628a\u610f\u601d\u6df7\u4e86\u5c31\u597d*/\n}\n\n//\u4e0b\u653e\u6807\u8bb0\nvoid pushdown(int i){\n\t//\u5148\u4e0b\u653e\u52a0\u6cd5\n\ttree[i*2].Change(tree[i].add,tree[i].hadd);\n\ttree[i*2+1].Change(tree[i].add,tree[i].hadd);\n\ttree[i].add=tree[i].hadd=0;//\u6e05\u7a7a\n   //\u518d\u4e0b\u653e\u8986\u76d6\n\tif(tree[i].iscov){\n\t\ttree[i*2].Cover(tree[i].cov,tree[i].hcov);\n\t\ttree[i*2+1].Cover(tree[i].cov,tree[i].hcov);\n\t\ttree[i].iscov=tree[i].cov=tree[i].hcov=0;//\u6e05\u7a7a\u6807\u8bb0\n\t}\n}\n```\n\n---\n\n\u5982\u4f55\u533a\u95f4\u4fee\u6539\u8c03\u7528Change\u548cCover\u5c31\u4e0d\u8bf4\u4e86\u628a\uff0c\u8d34\u4e2acode\n\n```cpp\nvoid _plus(int i,int l,int r,int d){\n\tif(tree[i].l>=l&&tree[i].r<=r){\n\t\ttree[i].Change(d,d);\n\t\treturn;\n\t}\n\tpushdown(i);\n\tint mid=(tree[i].l+tree[i].r)>>1;\n\tif(l<=mid){\n\t\t_plus(i*2,l,r,d);\n\t}\n\tif(r>mid){\n\t\t_plus(i*2+1,l,r,d);\n\t}\n\tupdate(i);\n}\nvoid Cover(int i,int l,int r,int d){\n\tif(tree[i].l>=l&&tree[i].r<=r){\n\t\ttree[i].Cover(d,d);\n\t\treturn ;\n\t}\n\tpushdown(i);\n\tint mid=(tree[i].l+tree[i].r)>>1;\n\tif(l<=mid){\n\t\tCover(i*2,l,r,d);\n\t}\n\tif(r>mid){\n\t\tCover(i*2+1,l,r,d);\n\t}\n\tupdate(i);\n}\n```\n\n\u7136\u540e...\u5c31\u5b8c\u4e86\u3002\u4ee3\u7801\u5c31\u8d34\u526a\u5207\u677f\u91cc\u4e86 [here](https://www.luogu.com.cn/paste/xvkzt25w)\n\n[*Froggy's blog*](https://www.luogu.org/blog/1445353309froggy/)\n\n#### \u5471!!\n\n",
        "postTime": 1578793883,
        "uid": 100285,
        "name": "Froggy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4314 \u3010CPU\u76d1\u63a7\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u543c\u554a\uff0c\u8003\u5bdf\u4e86\u5bf9\u4e8elazy\u6807\u8bb0\u548c\u65f6\u95f4\u8f74\u7684\u5173\u7cfb\uff01\uff08\u96fe\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7236\u5b50\u8282\u70b9\u7684\u5173\u7cfb\uff0clazy\u6807\u8bb0\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u4e00\u6bb5\u64cd\u4f5c\uff08\u5f80\u5f80\u5408\u5e76\u6210\u4e00\u4e2a\uff09\uff0c\u8fd9\u6bb5\u64cd\u4f5c\u76ee\u524d\u5728\u7236\u8282\u70b9\u88ab\u7edf\u8ba1\u800c\u5728\u5b50\u8282\u70b9\u6ca1\u6709\u88ab\u7edf\u8ba1\u3002\u800c\u4e0b\u653e\u5b9e\u9645\u4e0a\u5c31\u662f\u66f4\u65b0\u4e86\u5b50\u8282\u70b9\u7684\u6240\u8c13\u201c\u64cd\u4f5c\u5e8f\u5217\u201d\uff08\u6211\u53e3\u80e1\u7684\uff09\n\n\u4e4b\u524d\u5176\u4ed6\u51e0\u7bc7\u9898\u89e3\u63d0\u5230\u7684\u79cd\u79cd\u95ee\u9898\uff0c\u6211\u8ba4\u4e3a\u7a76\u5176\u539f\u56e0\u90fd\u662f\u5728\u66f4\u65b0\u5e8f\u5217\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u8bb0\u5f55\u8db3\u591f\u7684\u4fe1\u606f\u5bfc\u81f4\u7edf\u8ba1\u51fa\u9519\uff0c\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u663e\u5f0f\u8003\u8651\u8fd9\u6bb5\u64cd\u4f5c\u5e8f\u5217\uff08\u4e0d\u518d\u50cf\u4e4b\u524d\u7f29\u6210\u4e00\u4e2a\u64cd\u4f5c\uff09\uff0c\u5e76\u8bb0\u5f55\u8db3\u591f\u7684\u4fe1\u606f\u3002\n\n\u4e0d\u96be\uff08\u8bef\uff09\u53d1\u73b0\uff0c\u4e00\u6bb5\u533a\u95f4\uff0c\u5148\u8d4b\u503c\u518d\u533a\u95f4\u52a0\uff0c\u5176\u5b9e\u53ef\u4ee5\u7f29\u6210\u4e00\u4e2a\u8d4b\u503c\u64cd\u4f5c\u800c\u4e0d\u5f71\u54cd\u7edf\u8ba1\u7b54\u6848\u3002\u6240\u4ee5\u4e00\u4e2a\u70b9\u4e0a\u7684\u64cd\u4f5c\u5e8f\u5217\u53ea\u6709\u4e24\u79cd\uff0c\u5355\u7eaf\u533a\u95f4\u52a0\uff0c\u548c\u5148\u52a0\u518d\u8d4b\u503c\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5206\u522b\u8003\u8651\u7236\u5b50\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u8bb0\u5f55\u9700\u8981\u7684\u5386\u53f2\u6700\u5927\u503c\uff0c\u5c31\u53ef\u4ee5\u7edf\u8ba1\u7b54\u6848\u4e86\u3002\n\n\uff08\u8fd8\u6709\u4e00\u90e8\u5206\u66f4\u8be6\u7ec6\u7684\u8bf4\u660e\u7ed3\u5408\u4ee3\u7801\u7ed9\u51fa\uff09\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n//defs&tools==================================================\nconst int MAXN=2e5+10,INF=0x3f3f3f3f;\ntemplate <typename T> void rd(T &x) {\n\tx=0;int f=1;char ch=getchar();\n\twhile(!isdigit(ch)) { if(ch=='-') f=-1; ch=getchar();}\n\twhile(isdigit(ch)) { x=x*10+ch-'0'; ch=getchar();}\n\tx*=f;\n}\nvoid chkmax(int &x,int y) {\n\tif(y>x) x=y;\n}\nint a[MAXN],N,M;\n//seg_tree====================================================\nbool type[MAXN];//0 \u8868\u793a\u4e00\u6bb5\u5e8f\u5217\u8fd8\u53ea\u6709\u52a0\u64cd\u4f5c \n\t//1\u8868\u793a\u4e00\u6bb5\u5e8f\u5217\u5148\u6709\u52a0\u64cd\u4f5c\u518d\u6709\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c \nint lc[MAXN],rc[MAXN];\nint maxv[MAXN],addtag[MAXN],valtag[MAXN];\n/*\n\tmaxv \u4e00\u5207\u64cd\u4f5c\u5904\u7406\u5b8c\u4e4b\u540e\u5f53\u524d\u533a\u95f4\u7684\u6700\u5927\u503c \uff08\u5305\u62ecaddtag\u548cvaltag\uff09\n\taddtag \u4e0a\u4e00\u6b21\u4e0b\u653e\u4e4b\u540e\uff0c\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\u4e4b\u524d\u4e00\u5207add\u64cd\u4f5c\u7684\u5408\u5e76\n\tvaltag \u4e0a\u4e00\u6b21\u4e0b\u653e\u540e\uff0c\u4e00\u5207\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\uff08\u5408\u5e76\u4e86\u4e4b\u540e\u7684\u52a0\u64cd\u4f5c\uff09\u7684\u5408\u5e76 \n*/\nint hmax[MAXN],hadd[MAXN],hval[MAXN];\n/*\n\thmaxv \u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\n\thadd \u4e0a\u4e00\u6b21\u4e0b\u653e\u4e4b\u540e\uff0c\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\u4e4b\u524d\uff0c\u4e00\u5207\u52a0\u64cd\u4f5c\u5408\u5e76\u65f6\u80fd\u8fbe\u5230\u7684\u6700\u5927\u503c\n\thval \u4e0a\u4e00\u6b21\u4e0b\u653e\u540e\uff0c\u4e00\u5207\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\u80fd\u8fbe\u5230\u7684\u6700\u5927\u503c \n*/ \nint cnt,rt;\n//modules=================================================== \nvoid update(int x) {//\u4fe1\u606f\u5408\u5e76 \n\tmaxv[x]=max(maxv[ lc[x] ],maxv[ rc[x] ]);\n\thmax[x]=max(hmax[ lc[x] ],hmax[ rc[x] ]);\n}\n/*\n\tAddTag\u51fd\u6570\u9002\u7528\u4e8e\u5728\u4e00\u6bb5\u52a0\u64cd\u4f5c\u7684\u672b\u5c3e\u518d\u6dfb\u52a0\u4e00\u6bb5\u52a0\u64cd\u4f5c\n\tadd->\u65b0\u52a0\u5165\u7684\u5e8f\u5217\u7684\u672b\u5c3e\u7ed3\u679c\n\thisadd->\u65b0\u52a0\u5165\u7684\u5e8f\u5217\u7684\u53ef\u53d6\u5230\u7684\uff08\u5386\u53f2\uff09\u6700\u5927\u503c\n\t\u53ef\u80fd\u7684\u5386\u53f2\u6700\u5927\u503c\u6709\u4e24\u4e2a:\u4e00\u4e2a\u4ece\u539f\u5e8f\u5217\u51fa\u53d1,\u5230hisadd(\u65b0\u5e8f\u5217\u622a\u6b62)\n\t\t\t\t\t\t\t\u4e00\u4e2a\u662f\u539f\u5e8f\u5217\u7684\u53ef\u80fd\u6700\u5927\u503c \n\t\u6309\u7167\u8fd9\u4e24\u4e2a\u53ef\u80fd\u66f4\u65b0hmax\u548chadd \n*/\nvoid AddTag(int x,int add,int hisadd) {\n\tchkmax(hadd[x],addtag[x]+hisadd);\n\tchkmax(hmax[x],maxv[x]+hisadd);\n\taddtag[x]+=add;\n\tmaxv[x]+=add; \n}\n/*\n\tValTag\u6709\u4e24\u79cd\u53ef\u80fd:\n\t\t1.\u5728\u4e00\u6bb5\u53ea\u6709\u52a0\u64cd\u4f5c\u7684\u5e8f\u5217\u672b\u5c3e\u52a0\u4e0a\u4e00\u6bb5\u8d4b\u503c\u64cd\u4f5c\n\t\t2.\u5728\u4e00\u6bb5\u5148\u52a0\u518d\u8d4b\u7684\u5e8f\u5217\u66f4\u65b0\u672b\u5c3e\u4e00\u6bb5\u8d4b\u503c\u64cd\u4f5c(\u4e24\u6bb5\u8d4b\u503c\u64cd\u4f5c\u5408\u5e76) \n\t\u56e0\u800c\u6211\u4eec\u9700\u8981\u7528type\u6807\u8bb0\u533a\u5206 \n\tval -> \u5e8f\u5217\u6700\u540e\u8d4b\u503c\u6210\u4e86\u5565\n\thisval->\u5e8f\u5217\u5386\u53f2\u6700\u5927\u8d4b\u503c\u6210\u4e86\u5565 \n*/\nvoid ValTag(int x,int val,int hisval) {\n\tif(type[x]) {//\u60c5\u51b52 \n\t\tchkmax(hval[x],hisval);//\u4e4b\u524d\u6709\u5386\u53f2\u6700\u5927\u6240\u4ee5\u9700\u8981\u6bd4\u8f83 \n\t\tchkmax(hmax[x],hisval);\n\t\tvaltag[x]=val; \n\t\tmaxv[x]=val; \n\t} else {//\u60c5\u51b51 \n\t\ttype[x]=true;\n\t\thval[x]=hisval;\n\t\tchkmax(hmax[x],hisval);\n\t\tvaltag[x]=val;\n\t\tmaxv[x]=val; \n\t}\n}\n/*\n\t\u5f53\u4e00\u4e2a\u533a\u95f4\u5df2\u7ecf\u6709\u4e86\u4e24\u79cd\u64cd\u4f5c\u7684\u65f6\u5019,\u518d\u5f80\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a\u542b\u6709\u4e24\u79cd\u64cd\u4f5c\u7684\u5e8f\u5217\n\tadd(son)->set(son)->add(father)->set(father)\n\t\u6b64\u65f6\u5bf9\u4e8e\u8fd9\u4e2a\u533a\u95f4 set(son)->add(father)\u5176\u5b9e\u662f\u53ef\u4ee5\u5408\u5e76\u7684 \n\t\t\u5408\u5e76\u6210set\u64cd\u4f5c\u540e\u53ef\u4ee5\u6309\u7167\u6b64\u64cd\u4f5c\u4e0b\u653e \n*/\nvoid Pushdown(int x) {\n\t//\u5148\u628a\u672c\u8282\u70b9\u5e8f\u5217\u5185\u90e8\u7684add\u64cd\u4f5c\u4e0b\u653e\u5230\u5b50\u8282\u70b9 \n\tif(type[ lc[x] ])\n\t\tValTag(lc[x],valtag[lc[x]]+addtag[x],valtag[lc[x]]+hadd[x]);\n\telse\n\t\tAddTag(lc[x],addtag[x],hadd[x]);\n\tif(type[ rc[x] ])\n\t\tValTag(rc[x],valtag[rc[x]]+addtag[x],valtag[rc[x]]+hadd[x]);\n\telse\n\t\tAddTag(rc[x],addtag[x],hadd[x]);\t \n\t//\u518d\u628a\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c\u4e0b\u653e\u5230\u5b50\u8282\u70b9\n\tif(type[x]) {\n\t\tValTag(lc[x],valtag[x],hval[x]);\n\t\tValTag(rc[x],valtag[x],hval[x]);\n\t} \n\t//\u6e05\u96f6\n\ttype[x]=false;\n\taddtag[x]=hadd[x]=hval[x]=valtag[x]=0; \n} \nvoid Build(int &x,int L,int R) {\n\tx=++cnt;\n\tif(L==R) {\n\t\tmaxv[x]=hmax[x]=a[L];\n\t\treturn;\n\t}\n\tint mid=(L+R)>>1;\n\tBuild(lc[x],L,mid);\n\tBuild(rc[x],mid+1,R);\n\tupdate(x);\n}\n//[B,E]\u67e5\u8be2\u533a\u95f4  [L,R]\u5f53\u524d\u533a\u95f4 \nint QueryA(int x,int L,int R,int B,int E) {\n\tif(L==B&&R==E) return maxv[x];\n\tPushdown(x);\n\tint mid=(L+R)>>1,ans=-INF;\n\tif(mid>=B) chkmax(ans,QueryA(lc[x],L,mid,B,min(mid,E)) ); \n\tif(mid+1<=E) chkmax(ans,QueryA(rc[x],mid+1,R,max(mid+1,B),E) );\n\treturn ans;\n}\nint QueryB(int x,int L,int R,int B,int E) {\n\tif(L==B&&R==E) return hmax[x];\n\tPushdown(x);\n\tint mid=(L+R)>>1,ans=-INF;\n\tif(mid>=B) chkmax(ans,QueryB(lc[x],L,mid,B,min(mid,E)) ); \n\tif(mid+1<=E) chkmax(ans,QueryB(rc[x],mid+1,R,max(mid+1,B),E) );\n\treturn ans;\n}\nvoid Add(int x,int L,int R,int B,int E,int val) {\n\tif(L==B&&R==E) {\n\t\tif(type[x]) ValTag(x,valtag[x]+val,valtag[x]+val);\n\t\telse AddTag(x,val,val);\n\t\treturn;\n\t}\n\tPushdown(x);\n\tint mid=(L+R)>>1;\n\tif(mid>=B) Add(lc[x],L,mid,B,min(E,mid),val);\n\tif(mid+1<=E) Add(rc[x],mid+1,R,max(mid+1,B),E,val);\n\tupdate(x);\n}\nvoid Val(int x,int L,int R,int B,int E,int num) {\n\tif(L==B&&R==E) {\n\t\tValTag(x,num,num);\n\t\treturn;\n\t}\n\tPushdown(x);\n\tint mid=(L+R)>>1;\n\tif(mid>=B) Val(lc[x],L,mid,B,min(E,mid),num);\n\tif(mid+1<=E) Val(rc[x],mid+1,R,max(mid+1,B),E,num);\n\tupdate(x);\n}\nchar __t[3];\nchar &opt=__t[0]; \n//main======================================================== \nint main() {\n\trd(N);\n\t//printf(\"N=%d\\n\",N);\n\tfor(int i=1;i<=N;++i) rd(a[i]);\n\tBuild(rt,1,N);\n\trd(M);\n\t//printf(\"M=%d\\n\",M);\n\tfor(int i=1;i<=M;++i) {\n\t\tscanf(\"%s\",__t);\n\t\tint L,R,val;\n\t\trd(L),rd(R);\n\t\tif(L>R) swap(L,R);\n\t\tif(opt=='Q') \t\tprintf(\"%d\\n\",QueryA(rt,1,N,L,R));\n\t\telse if(opt=='A') \tprintf(\"%d\\n\",QueryB(rt,1,N,L,R));\n\t\telse if(opt=='P')   rd(val),Add(rt,1,N,L,R,val);\n\t\telse if(opt=='C')   rd(val),Val(rt,1,N,L,R,val);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1532331029,
        "uid": 20565,
        "name": "wzj423",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4314 \u3010CPU\u76d1\u63a7\u3011"
    },
    {
        "content": "\u6807\u51c6\u7ebf\u6bb5\u6811\u3002\n\n~~\u8bf4\u5b9e\u8bdd\u611f\u89c9\u5e76\u6ca1\u6709NOI+\u7684\u96be\u5ea6\u2026\u2026~~\n\n\u4f46\u662f\u6253\u6807\u8bb0\u7684\u65b9\u6cd5\u5341\u5206\u503c\u5f97\u6211\u4eec\u5b66\u4e60\uff0c\u6765\u8bb2\u8bb2\u601d\u8def\u5427\uff1a\n\n------------\n\n\u6211\u6700\u5f00\u59cb\u7684\u60f3\u6cd5\u662f\u8fd9\u6837\u7684\uff1a\n\n\u5173\u4e8e\u5386\u53f2\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u5185\u5f00\u4e00\u4e2a\u65b0\u7684\u6743\u503c$\\ hmax\\ $ (\u5f53\u524d\u6700\u5927\u503c\u4e3a$\\ nmax\\ $)\uff0c\u66f4\u65b0\u65b9\u7a0b\u4e3a $:\\ hmax=max(hmax,nmax)$ \u3002\u5176\u6b21\u5173\u4e8e\u4fee\u6539\uff0c\u60f3\u5230\u8981\u6253\u4e24\u4e2a\u6807\u8bb0: $\\ addlazy\\ $\u548c$\\ changelazy\\ $\uff0c\u6700\u5927\u503c\u8ba1\u7b97\u65b9\u5f0f\u4e3a $\\ nmax=changelazy+addlazy\\ $ \u3002\n\n\u7136\u800c\uff0c\u8fd9\u6837\u5b50\u4f1a\u6709\u4e00\u70b9 $\\ bug\\ $ \uff0c\u5c31\u662f\u5f88\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u5bf9\u4e8e\u67d0\u4e2a\u7ed3\u70b9 $\\ i\\ $ \uff0c\u5728\u5b83\u7684\u6807\u8bb0\u8fd8\u6ca1\u6709\u4e0b\u653e\u7684\u65f6\u5019\uff0c\u5b83\u7684\u7236\u4eb2\u53c8\u4e0b\u653e\u4e86\u65b0\u7684\u6807\u8bb0\u7ed9\u5b83\uff0c\u4e8e\u662f\u5c31\u5c06\u539f\u6765\u7684\u6807\u8bb0\u8986\u76d6\u4e86\uff0c\u4e22\u5931\u4e86\u539f\u6765\u7684\u90a3\u4e00\u6b21\u4fee\u6539\u7684\u503c\uff0c\u8fd9\u6837\u5728\u67e5\u8be2\u5386\u53f2\u6700\u5927\u503c\u7684\u65f6\u5019\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u9519\u8bef\u7684\u7b54\u6848\u3002\n\n\u5728\u8fd9\u79cd\u60f3\u6cd5\u4e0b\uff0c\u4e3a\u4e86\u907f\u514d\u9519\u8bef\u7684\u7b54\u6848\uff0c\u5c31\u5fc5\u987b\u5728\u6bcf\u4e00\u6b21\u6709\u65b0\u7684\u6807\u8bb0\u4e0b\u653e\u7ed9 $\\ i\\ $ \u4e4b\u524d\uff0c\u628a $\\ i\\ $ \u4e0a\u7684\u6807\u8bb0\u5168\u90e8\u4e0b\u653e\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u4f1a\u4f7f\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u66b4\u589e\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86$\\ lazy\\ $ \u4e5f\u5c31\u5931\u53bb\u4e86\u5b83\u4eec\u5b58\u5728\u7684\u610f\u4e49\u3002\u5b9e\u6d4b\u5982\u679c\u8fd9\u6837\u5199\u7684\u8bdd\uff0c\u53ea\u80fd\u5f97 $\\ 20\\ $\u5206\uff08$\\ 2AC\\ \\&\\ 8TLE\\ $\uff09\u3002\n\n------------\n\n\u4e8e\u662f\u8003\u8651\u65b0\u7684\u505a\u6cd5\uff08\u611f\u8c22 $\\ GXZlegend\\ $\u53ca\u5176\u535a\u5ba2\uff09\uff1a\n\n\u58f0\u660e\uff1a\u5728\u4ee5\u4e0b\u8868\u8fbe\u4e2d\uff0c\u524d\u7f00 $\\ n\\ $\u8868\u793a $\\ now\\ $ \uff0c\u524d\u7f00 $\\ h\\ $ \u8868\u793a $\\ history\\ $\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6807\u8bb0\u5b9a\u4e49\u6210\u4e8c\u7ef4\u7684$\\ (add,change)\\ $\uff0c\u6700\u5927\u503c\u7684\u8ba1\u7b97\u65b9\u5f0f\u4e3a\uff1a$\\ nmax=max(nmax+add,change)\\ $ \u4ee5\u53ca $\\ hmax=max(hmax+add,change)\\ $ \uff0c\u5e76\u4e14\u5728\u67d0\u4e00\u4e2a\u8282\u70b9\u5904\u5b9a\u4e49\u4e24\u4e2a\u6807\u8bb0 $\\ nlazy\\ $\uff08\u8868\u793a\u5f53\u524d\u7684\u4fee\u6539\u6807\u8bb0\uff09\u548c $\\ hlazy\\ $ \uff08\u8868\u793a\u4f7f\u5f97\u8fd9\u4e2a\u8282\u70b9\u7684\u5386\u53f2\u6700\u5927\u503c\u8fbe\u5230\u6700\u5927\u65f6\u7684\u6807\u8bb0\uff09\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u4e24\u4e2a\u6807\u8bb0\u90fd\u53ef\u4ee5\u8ba4\u4e3a\u662f\u66fe\u7ecf\u7684\u591a\u4e2a\u6807\u8bb0\u7684\u5171\u540c\u4f5c\u7528\u7684\u7ed3\u679c\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u66f4\u65b0\u6807\u8bb0\uff08\u628a\u6807\u8bb0 $\\ (c,d)\\ $ \u52a0\u5230 $\\ (a,b)\\ $ \u4e0a\u53bb\uff09\uff0c\u4e0d\u96be\u53d1\u73b0\uff1a\u82e5\u8981\u4f7f\u5f97\u8ba1\u7b97\u65b9\u5f0f\u4e0d\u53d1\u751f\u6539\u53d8\uff0c\u5219\u65b0\u7684\u6807\u8bb0\u4e3a\uff1a$\\ (a+c,max(d,b+c))\\ $\u3002\n\n\u7136\u540e\u5982\u4f55\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u6807\u8bb0\u5462\uff1f \u7531\u8ba1\u7b97\u65b9\u5f0f\u53ef\u5f97\uff1a\u82e5\u8981\u4f7f\u5f97 $\\ hmax\\ $ \u6700\u5927\uff0c\u9700\u8981\u4f7f\u5f97 $\\ add\\  $\u6700\u5927\u6216\u8005 $\\ change\\ $ \u6700\u5927\uff0c\u6240\u4ee5\u5f53\u4e24\u4e2a\u6807\u8bb0\u5206\u522b\u4e3a $\\ (a,b),(c,d)\\ $ \u65f6\uff0c $\\ hlazy=(max(a,c),max(b,d))\\ $\u3002\n\n\u8fd8\u6709\u4e00\u70b9\uff1a\u4fee\u6539\u64cd\u4f5c\u4e0e\u6807\u8bb0\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u6211\u4eec\u8981\u533a\u95f4\u52a0\u7684\u65f6\u5019\uff0c\u6253\u4e0a\u4e00\u4e2a $\\ (z,-inf)\\ $ \u7684\u6807\u8bb0\uff0c\u5f53\u6211\u4eec\u8981\u533a\u95f4\u8d4b\u503c\u7684\u65f6\u5019\uff0c\u6253\u4e0a\u4e00\u4e2a $\\ (-inf,z)\\ $ \u7684\u6807\u8bb0\u5c31\u884c\u4e86\u3002\n\n\u5230\u6b64\u4e3a\u6b62\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u6240\u6709\u8981\u8003\u8651\u7684\u4e1c\u897f\u90fd\u8003\u8651\u5b8c\u4e86\uff0c\u4e8e\u662f\u53ef\u4ee5\u6109\u5feb\u5730\u5f00\u59cb\u6572\u4ee3\u7801\uff0c\u5e76\u4e14\u6109\u5feb\u5730 $\\ AC\\ $ \u6b64\u9898\u4e86\uff1a\n\n\u4e60\u60ef\u6307\u9488\u5199\u6cd5\uff0c[\u539f\u535a\u5ba2\u4e3a\u4f3c\u4e4e\u66f4\u6d41\u884c\u7684\u6570\u7ec4\u5199\u6cd5](http://www.cnblogs.com/GXZlegend/p/8315275.html)\n```\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\nusing namespace std;\nconst int MAXN=100001;\nconst int INF=0x3f3f3f3f;\nchar opt;\nint T,E,x,y,z;\nint arr[MAXN];\nstruct data{\n    int add,change;\n    data(int aa=0,int cc=-INF) {add=aa;change=cc;}\n    data operator +(const data &a) const{return data(max(-INF,add+a.add),max(a.change,change+a.add));}\n    data operator *(const data &a) const{return data(max(add,a.add),max(change,a.change));}\n};\nstruct segtree{\n    int Start,End;\n    int nmax,hmax;\n    data nlazy,hlazy;\n    segtree *son[2];\n    segtree(){\n        Start=End=nmax=hmax=0;\n        nlazy=hlazy=data();\n        son[0]=son[1]=NULL;\n    }\n    inline void update(){\n        nmax=max(son[0]->nmax,son[1]->nmax);\n        hmax=max(son[0]->hmax,son[1]->hmax);\n    }\n    inline void caculate(data now,data history){\n        hlazy=hlazy*(nlazy+history);\n        nlazy=nlazy+now;\n        hmax=max(hmax,max(nmax+history.add,history.change));\n        nmax=max(nmax+now.add,now.change);\n    }\n    inline void pushdown(){\n        son[0]->caculate(nlazy,hlazy);\n        son[1]->caculate(nlazy,hlazy);\n        nlazy=hlazy=data();\n    }\n    inline void build(int nstart,int nend){\n        Start=nstart;End=nend;\n        if(Start==End){nmax=hmax=arr[Start];return;}\n        int mid=(Start+End)>>1;\n        (son[0]=new(segtree))->build(Start,mid);\n        (son[1]=new(segtree))->build(mid+1,End);\n        update();\n    }\n    inline void modify(int nstart,int nend,data key){\n        if(nstart==Start&&nend==End) {caculate(key,key);return;}\n        pushdown();\n        int mid=(Start+End)>>1;\n        if(nstart>mid) son[1]->modify(nstart,nend,key);\n        else if(nend<=mid) son[0]->modify(nstart,nend,key);\n        else {son[0]->modify(nstart,mid,key);son[1]->modify(mid+1,nend,key);}\n        update();\n    }\n    inline int query(int nstart,int nend,bool flag){\n        if(nstart==Start&&nend==End) return flag?hmax:nmax;\n        pushdown();\n        int mid=(Start+End)>>1;\n        if(nstart>mid) return son[1]->query(nstart,nend,flag);\n        if(nend<=mid) return son[0]->query(nstart,nend,flag);\n        else return max(son[0]->query(nstart,mid,flag),son[1]->query(mid+1,nend,flag));\n    }\n}*root;\ninline int read(){\n    int x=0,f=1;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar()) if(c=='-') f=-1;\n    for(;c>='0'&&c<='9';c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n    return x*f;\n}\nint main(){\n    T=read();\n    for(int i=1;i<=T;++i) arr[i]=read();\n    (root=new(segtree))->build(1,T);\n    E=read();\n    while(E--){\n        opt=getchar();\n        while(opt<'A'||opt>'Z') opt=getchar();\n        x=read();y=read();\n        if(opt=='Q') printf(\"%d\\n\",root->query(x,y,false));\n        if(opt=='A') printf(\"%d\\n\",root->query(x,y,true));\n        if(opt=='P') {z=read();root->modify(x,y,data(z,-INF));}\n        if(opt=='C') {z=read();root->modify(x,y,data(-INF,z));}\n    }\n    return 0;\n}\n```\n\u4e0d\u5f00$\\ O2\\ $\u8dd1\u4e86 $\\ 4992ms\\ $ \uff0c\u5f00 $\\ O2\\ $ \u53ea\u8dd1\u4e86 $\\ 1380ms\\ $ \uff0c\u8bf7\u8ba9\u6211\u611f\u53f9\u4e00\u53e5 $\\ O2\\ $\u7684\u5de8\u5927\u7528\u5904\u3002\n\n\u6700\u540e\u518d\u5410\u69fd\u4e00\u53e5\uff1a\u611f\u89c9\u7ebf\u6bb5\u6811\u7684\u7cbe\u9ad3\uff0c\u4e0d\u8fc7\u5c31\u662f\u627e\u597d $\\ lazy\\ $ \u4ee5\u53ca $\\ lazy\\ $ \u4e0e $\\ val\\ $ \u4e4b\u95f4\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u4f46\u5373\u4f7f\u5982\u6b64\uff0c\u8fd8\u662f\u5341\u5206\u6709\u8da3\u7684\u3002\n\n\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\u3002",
        "postTime": 1525873209,
        "uid": 28747,
        "name": "LDlornd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4314 \u3010CPU\u76d1\u63a7\u3011"
    },
    {
        "content": "[P4314 CPU\u76d1\u63a7](https://www.luogu.com.cn/problem/P4314)\n\n\u53d1\u73b0\u4ee5\u524d\u5199\u5f97\u592a\u4e0d\u6e05\u695a\u4e86\u4ee5\u81f3\u4e8e\u590d\u4e60\u7684\u65f6\u5019\u770b\u4e0d\u61c2\u81ea\u5df1\u5199\u4e86\u5565\uff0c\u770b\u9898\u89e3\u4e5f\u6ca1\u592a\u770b\u61c2\uff0c\u4e8e\u662f\u51b3\u5b9a\u91cd\u65b0\u5b66\u4e00\u4e0b\u7136\u540e\u81ea\u5df1\u5199\u7bc7\u9898\u89e3\u3002\n\n\u672c\u7bc7\u9898\u89e3\u53c2\u8003 [\u5173\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u4e00\u4e9b\u8fdb\u9636\u64cd\u4f5c](https://www.luogu.com.cn/blog/command-block/guan-yu-xian-duan-shu-shang-di-yi-suo-jin-jie-cao-zuo)\n\n\n\u5148\u8003\u8651\u5982\u679c\u53ea\u6709\u52a0\u64cd\u4f5c\u600e\u4e48\u505a\u3002\u5047\u8bbe\u6bcf\u4e2a\u70b9\u5f00\u4e86\u4e00\u4e2a\u961f\u5217\uff0c\u5b58\u8fd9\u4e2a\u70b9\u88ab\u6253\u8fc7\u7684\u6240\u6709\u6807\u8bb0\uff0c\u90a3\u4e48 `pushdown` \u64cd\u4f5c\u5373\u4e3a\u5c06\u7236\u4eb2\u8282\u70b9\u7684\u961f\u5217\u4e2d\u7684\u5143\u7d20\u5168\u90e8\u653e\u8fdb\u513f\u5b50\u8282\u70b9\u7684\u961f\u5217\uff0c\u6bcf\u653e\u5165\u4e00\u4e2a\u503c\uff0c\u5219\u66f4\u65b0 $x\\leftarrow x'+tag,mx\\leftarrow\\max(mx,x)$\u3002\u4f46\u6211\u4eec\u4e0d\u53ef\u80fd\u771f\u7684\u5b58\u4e00\u4e2a\u961f\u5217\u3002\u8bbe\u961f\u5217\u4e2d\u52a0\u6cd5\u6807\u8bb0\u7684\u524d\u7f00\u548c\u4e3a $s[1\\dots k]$\uff0c\u5219\u6240\u6709\u66f4\u65b0\u8fdb\u884c\u5b8c\u540e\u5e94\u6709 $x\\leftarrow x'+s_k,mx\\leftarrow\\max\\{x'+s_i\\}=x'+\\max\\{s_i\\}$\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u5386\u53f2\u52a0\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\u8fd9\u4e2a\u4e1c\u897f\u600e\u4e48\u7ef4\u62a4\u5462\uff1f\u8003\u8651\u5408\u5e76\u4e24\u4e2a\u961f\u5217\uff08\u7684\u524d\u7f00\u548c\uff09$s_{son}[1\\dots k_1],s_{fa}[1\\dots k_2]$ \u7684\u8fc7\u7a0b\n$$\ns_{son}[i]=\\begin{cases}s_{son}'[i]\\quad(i\\le k_1)\\\\s'_{son}[k_1]+s_{fa}[i-k_1]\\quad(k_1<i\\le k_1+k_2)\\end{cases}\n$$\n\u5219 $\\max\\{s_{son}[i]\\}=\\max(\\max \\{s'_{son}[i]\\},s_{son}'[k_1]+\\max\\{s_{fa}[i]\\})$ \uff0c\u5219\u6211\u4eec\u9700\u8981\u7ef4\u62a4 $s_{son}[k_1]$ \uff0c\u5373\u76ee\u524d\u7684\u52a0\u6cd5\u6807\u8bb0\u5373\u53ef\u3002\u603b\u7ed3\u4e00\u4e0b\uff0c\u4ee3\u7801\u5982\u4e0b\n\n```cpp\nvoid getsum(int ro,int sum,int hsum)//hsum:\u7236\u8282\u70b9\u4e0a\u4e00\u6b21pushdown\u540e\u7684\u5386\u53f2\u52a0\u6cd5\u6807\u8bb0\u6700\u5927\u503c\n{\n   t[ro].hsum=max(t[ro].hsum,t[ro].sum+hsum);//\u5386\u53f2\u52a0\u6cd5\u6807\u8bb0\u6700\u5927\u503c\n   t[ro].ans[1]=max(t[ro].ans[1],t[ro].ans[0]+hsum);//\u5386\u53f2\u6700\u5927\u503c\n   t[ro].ans[0]+=sum;//\u5f53\u524d\u6700\u5927\u503c\n   t[ro].sum+=sum; //\u5f53\u524d\u52a0\u6cd5\u6807\u8bb0\n}\n```\n\n\u518d\u52a0\u4e0a\u8d4b\u503c\u64cd\u4f5c\u540e\uff0c\u5982\u679c\u961f\u5217\u4e2d\u6709\u4e24\u79cd\u6807\u8bb0\uff0c\u4e0d\u4fbf\u4e8e\u5904\u7406\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5\u5b58\u5728\u4e00\u4e2a\u8d4b\u503c\u6807\u8bb0\uff0c\u5219\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u6240\u6709\u6570\u4f1a\u53d8\u6210\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u4e4b\u540e\u7684\u52a0\u6cd5\u6807\u8bb0\u90fd\u53ef\u4ee5\u770b\u6210\u8d4b\u503c\u6807\u8bb0\u3002\u56e0\u6b64\uff0c\u6b64\u65f6\u7684\u961f\u5217\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u4e2a\u52a0\u6cd5\u6807\u8bb0\u961f\u5217\u7d27\u8ddf\u7740\u4e00\u4e2a\u8d4b\u503c\u6807\u8bb0\u961f\u5217\u3002\u52a0\u6cd5\u6807\u8bb0\u6309\u4e0a\u9762\u8bf4\u7684\u5904\u7406\u3002\u5bf9\u4e8e\u8d4b\u503c\u6807\u8bb0 $a[1\\dots k]$\uff0c\u6700\u7ec8\u4ea7\u751f\u7684\u8d21\u732e\u5373\u4e3a $max\\{a_i\\}$\uff0c\u518d\u7ef4\u62a4\u4e00\u4e2a\u5386\u53f2\u6700\u5927\u8d4b\u503c\u6807\u8bb0\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define inl inline\n#define mid (t[ro].l+t[ro].r)/2\nusing namespace std;\nnamespace FGF\n{\n\tint n,m;\n\tconst int N=1e5+5;\n\tconst int INF=0x3f3f3f3f;\n\tint read()\n\t{\n\t\tint s=0,w=1;char ch=getchar();\n\t\twhile(!isdigit(ch)){if(ch=='-')w=-w;ch=getchar();}\n\t\twhile(isdigit(ch))s=s*10+ch-'0',ch=getchar();\n\t\treturn s*w;\n\t}\n\tstruct tree{\n\t\tint l,r,sum,hsum,val,hval,ans[2];\n\t\tbool vis;\n\t}t[N<<2]; \n\tint a[N];\n\tinl void pushup(int ro)\n\t{\n\t\tt[ro].ans[0]=max(t[ro<<1].ans[0],t[ro<<1|1].ans[0]);//\u5f53\u524d\u6700\u503c \n\t\tt[ro].ans[1]=max(t[ro<<1].ans[1],t[ro<<1|1].ans[1]);//\u5386\u53f2\u6700\u503c \n\t}\n\tvoid build(int ro,int l,int r)\n\t{\n\t\tt[ro].l=l,t[ro].r=r;\n\t\tif(l==r)\n\t\t{\n\t\t\tt[ro].ans[0]=t[ro].ans[1]=a[l];\n\t\t\treturn;\n\t\t}\n\t\tbuild(ro<<1,l,mid),build(ro<<1|1,mid+1,r);\n\t\tpushup(ro);\n\t}\n\tinl void getsum(int ro,int sum,int hsum)//hsum:\u7236\u8282\u70b9\u4e0a\u4e00\u6b21pushdown\u540e\u7684\u6700\u5927\u52a0\u548c \n\t{\n\t\tif(t[ro].vis)//\u662f\u5426\u8fdb\u884c\u8fc7\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c \n\t\t{\n\t\t\tt[ro].hval=max(t[ro].hval,t[ro].val+hsum);\n\t\t\tt[ro].ans[1]=max(t[ro].ans[1],t[ro].ans[0]+hsum);\n\t\t\tt[ro].ans[0]+=sum;\n\t\t\tt[ro].val+=sum;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tt[ro].hsum=max(t[ro].hsum,t[ro].sum+hsum);\n\t\t\tt[ro].ans[1]=max(t[ro].ans[1],t[ro].ans[0]+hsum);\n\t\t\tt[ro].ans[0]+=sum;\n\t\t\tt[ro].sum+=sum;\n\t\t}\n\t}\n\tinl void getval(int ro,int val,int hval)//hval:\u7236\u8282\u70b9\u4e0a\u4e00\u6b21pushdown\u540e\u7684\u6700\u5927\u8d4b\u503c \n\t{\n\t\tif(t[ro].vis)t[ro].hval=max(t[ro].hval,hval);\n\t\telse t[ro].vis=1,t[ro].hval=hval;\n\t\tt[ro].ans[1]=max(t[ro].ans[1],hval);\n\t\tt[ro].ans[0]=t[ro].val=val;\n\t }\n\tinl void pushdown(int ro)\n\t{\n\t\tgetsum(ro<<1,t[ro].sum,t[ro].hsum);\n\t\tgetsum(ro<<1|1,t[ro].sum,t[ro].hsum);\n\t\tt[ro].sum=t[ro].hsum=0;\n\t\tif(t[ro].vis)\n\t\t{\n\t\t\tgetval(ro<<1,t[ro].val,t[ro].hval);\n\t\t\tgetval(ro<<1|1,t[ro].val,t[ro].hval);\n\t\t\tt[ro].val=t[ro].hval=0,t[ro].vis=0;\n\t\t}\n\t}\n\tvoid add(int ro,int l,int r,int x)\n\t{\n\t\tif(t[ro].l>=l&&t[ro].r<=r)\n\t\t{\n\t\t\tgetsum(ro,x,x);\n\t\t\treturn;\n\t\t}\n\t\tpushdown(ro);\n\t\tif(l<=mid)add(ro<<1,l,r,x);\n\t\tif(r>mid)add(ro<<1|1,l,r,x);\n\t\tpushup(ro);\n\t}\n\tvoid updat(int ro,int l,int r,int x)\n\t{\n\t\tif(t[ro].l>=l&&t[ro].r<=r)\n\t\t{\n\t\t\tgetval(ro,x,x);\n\t\t\treturn;\n\t\t}\n\t\tpushdown(ro);\n\t\tif(l<=mid)updat(ro<<1,l,r,x);\n\t\tif(r>mid)updat(ro<<1|1,l,r,x);\n\t\tpushup(ro);\n\t}\n\tint query(int ro,int l,int r,int op)\n\t{\n\t\tif(t[ro].l>=l&&t[ro].r<=r)return t[ro].ans[op];\n\t\tpushdown(ro);\n\t\tint s=-INF;\n\t\tif(l<=mid)s=query(ro<<1,l,r,op);\n\t\tif(r>mid)s=max(s,query(ro<<1|1,l,r,op));\n\t\treturn s;\n\t}\n\tvoid work()\n\t{\n\t\tn=read();\n\t\tfor(int i=1;i<=n;i++)\n\t\t\ta[i]=read();\n\t\tbuild(1,1,n);\n\t\tm=read();\n\t\twhile(m--)\n\t\t{\n\t\t\tchar s[5];\n\t\t\tint x,y;\n\t\t\tscanf(\"%s\",s);x=read(),y=read();\n\t\t\tif(s[0]=='Q')printf(\"%d\\n\",query(1,x,y,0));\n\t\t\tif(s[0]=='A')printf(\"%d\\n\",query(1,x,y,1));\n\t\t\tif(s[0]=='P')add(1,x,y,read());\n\t\t\tif(s[0]=='C')updat(1,x,y,read());\n\t\t}\n\t}\n}\nint main()\n{\n\tFGF::work();\n\treturn 0;\n}\n```",
        "postTime": 1625271409,
        "uid": 224403,
        "name": "\u6728xx\u6728\u5927",
        "ccfLevel": 9,
        "title": "P4314 CPU\u76d1\u63a7\uff08\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u503c\uff09"
    },
    {
        "content": "### Part1 \u524d\u8a00\n\u53ef\u80fd\u6211\u662f\u4e0d\u559c\u7231\u7e41\u6742\u63a8\u5bfc\u7684\u4eba\uff0c\u770b\u4e86\u591a\u7bc7\u9898\u89e3\u90fd\u6ca1\u80fd\u7406\u89e3\u7ebf\u6bb5\u6811\u5386\u53f2\u6700\u503c\u7684\u6807\u8bb0\uff0c\u4e8e\u662f\u624b\u5199\u4e86\u4e00\u4e2a\u77e9\u9635\u4e58\u6cd5\u7684\u7248\u672c\uff0c\u5c31\u611f\u89c9\u90fd\u80fd\u7406\u89e3\u4e86\uff0c\u6240\u4ee5\u8fd9\u7bc7\u6587\u7ae0\u9001\u7ed9\u6709\u4e00\u5b9a\u77e9\u9635\uff08\u7ebf\u6027\u4ee3\u6570\uff09\u57fa\u7840\u53c8\u4e0d\u80fd\u7406\u89e3\u7ebf\u6bb5\u6811\u5386\u53f2\u6700\u503c\u7684\u4eba\u3002\n\n### Part2 \u77e9\u9635\u4e58\u6cd5\u7684\u6027\u8d28\n\n\u4e24\u4e2a\u77e9\u9635 $A_{n,m},B_{m,p}$ \u76f8\u4e58\u5f97\u5230 $C_{n,p}$\uff0c\u6ee1\u8db3 $C_{n,p}=\\sum A_{n,i}B_{i,p}$\u3002\n\n\u800c\u5904\u7406\u533a\u95f4\u6700\u503c\u548c\u5386\u53f2\u6700\u503c\u65f6\uff0c\u5e38\u7528\u5e7f\u4e49\u77e9\u4e58\uff0c\u5373 $C_{n,p}=\\max (A_{n,i}+B_{i,p})$\u3002\n\n\u77e9\u9635\u4e58\u6cd5\u548c\u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\u5747\u5177\u6709\u7ed3\u5408\u5f8b\u3002\n\n### Part3 \u533a\u95f4\u5386\u53f2\u6700\u503c\u7ef4\u62a4\n\n\u8003\u8651\u5e8f\u5217\u6bcf\u4e00\u4e2a\u6570\u7ef4\u62a4\u4e00\u4e2a\u5411\u91cf $\\begin{bmatrix}a_i\\\\b_i\\end{bmatrix}$\uff0c$a_i$ \u8868\u793a\u5f53\u524d\u503c\uff0c$b_i$ \u8868\u793a\u5386\u53f2\u6700\u503c\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u5411\u91cf\u548c\uff08\u5373 $a_i,b_i$ \u7684\u6700\u5927\u503c\uff09\u3002\n\n\u90a3\u4e48\u533a\u95f4\u52a0 $k$ \u53ef\u4ee5\u770b\u4f5c $\\begin{bmatrix}a\\\\b\\end{bmatrix}\\leftarrow\\begin{bmatrix}a+k\\\\\\max\\{b,a+k\\}\\end{bmatrix}$\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6784\u9020\u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\uff1a$\\begin{bmatrix}a\\\\b\\end{bmatrix}\\begin{bmatrix}k&k\\\\-\\infty&0\\end{bmatrix}=\\begin{bmatrix}a+k\\\\\\max\\{b,a+k\\}\\end{bmatrix}$\uff0c\u6545\u53ef\u4ee5\u5c06\u61d2\u6807\u8bb0\u8bbe\u4e3a $\\begin{bmatrix}k&k\\\\-\\infty&0\\end{bmatrix}$ \u8fd9\u4e2a\u77e9\u9635\u3002\n\n\u4e0d\u8fc7\u672c\u9898\u9700\u8981\u652f\u6301\u533a\u95f4\u8d4b\u503c\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u533a\u95f4\u52a0\uff0c\u5c31\u662f\u5373\u4f7f\u7ebf\u6bb5\u6811\u8282\u70b9\u88ab\u533a\u95f4\u5b8c\u5305\uff0c\u53ea\u8981\u6700\u5927\u503c\u4e0d\u7b49\u4e8e\u6700\u5c0f\u503c\uff0c\u5c31\u9012\u5f52\u4e0b\u53bb\uff0c\u6839\u636e\u989c\u8272\u6bb5\u5747\u644a\u7406\u8bba\uff0c\u8fd9\u90e8\u5206\u7684\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u7ed9\u5411\u91cf\u518d\u52a0\u4e00\u7ef4\uff0c\u4f7f\u5176\u53d8\u4e3a $\\begin{bmatrix}a\\\\b\\\\0\\end{bmatrix}$\uff0c\u8fd9\u6837\u5c31\u6709 $\\begin{bmatrix}a\\\\b\\\\0\\end{bmatrix}\\begin{bmatrix}-\\infty&-\\infty&-\\infty\\\\-\\infty&0&-\\infty\\\\k&k&0\\end{bmatrix}=\\begin{bmatrix}k\\\\\\max\\{b,k\\}\\\\0\\end{bmatrix}$\u3002\n\n\u5176\u5b9e\u770b\u5230\u8fd9\u91cc\u4f60\u5df2\u7ecf\u80fd AC \u672c\u9898\u4e86\uff0c\u56e0\u4e3a\u6211\u4e5f\u662f[\u8fd9\u6837\u5199\u7684](https://hydro.ac/d/bzoj/record/63ef8141e96dda153f1cb9c9)\u3002\n\n### Part4 \u5c06\u77e9\u9635\u8f6c\u4e3a\u6807\u8bb0\n\n\u4e8b\u5b9e\u4e0a\u672c\u9898\u6ca1\u6709\u533a\u95f4\u6700\u503c\u64cd\u4f5c\uff0c\u53ea\u662f\u8ba9\u4f60\u7a0d\u5fae\u7406\u89e3\u4e00\u4e0b\u5386\u53f2\u6700\u503c\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u516c\u8ba4\u7684\u4f8b\u9898\u8fd8\u662f [\u7ebf\u6bb5\u6811 3](https://www.luogu.com.cn/problem/P6242)\u3002\n\n\u8fd9\u9053\u9898\u7531\u4e8e\u62e5\u6709\u533a\u95f4\u6700\u503c\u64cd\u4f5c\uff0c\u6240\u4ee5\u8981\u5bf9\u6700\u5927\u503c\u548c\u975e\u6700\u5927\u503c\u5206\u522b\u6253\u6807\u8bb0\uff0c\u5f53\u7136\u4f60\u4f1a\u53d1\u73b0\u8fd9\u9053\u9898\u7684\u6240\u6709\u6807\u8bb0\u5747\u4e3a\u52a0\u4e0a\u4e00\u4e2a\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u77e9\u9635 $\\begin{bmatrix}k&k\\\\-\\infty&0\\end{bmatrix}$ \u6765\u8868\u793a\u6807\u8bb0\u3002\n\n\u5f53\u7136\u6700\u521d\u6211\u53ea\u4f1a\u4f7f\u7528\u5206\u5757\u6765\u7ef4\u62a4\uff0c\u672c\u5730\u5c31\u8981\u8dd1 7s\uff0c\u7a33\u7a33\u5730\u8d85\u65f6\uff0c\u7531\u6b64\u53ef\u89c1\uff0c\u77e9\u9635\u4e58\u6cd5\u7684 $k^3$ \u5f88\u591a\u65f6\u5019\u5e76\u4e0d\u80fd\u5f53\u5e38\u6570\u770b\u5f85\u3002\n\n\u8003\u8651\u4e24\u4e2a\u6807\u8bb0\u7ed3\u5408\uff08\u76f8\u4e58\uff09\uff0c\u4f1a\u5f97\u5230\u4ec0\u4e48\uff1a$\\begin{bmatrix}k_1&k_2\\\\-\\infty&0\\end{bmatrix}\\begin{bmatrix}k_3&k_4\\\\-\\infty&0\\end{bmatrix}=\\begin{bmatrix}k_1+k_3&\\max\\{k_2,k_1+k_4\\}\\\\-\\infty&0\\end{bmatrix}$\uff0c\u4ece\u5b9e\u9645\u610f\u4e49\u6765\u8003\u8651\uff0c$A_{1,1}$ \u8868\u793a\u5f53\u524d\u52a0\u503c\uff0c$A_{1,2}$ \u8868\u793a\u5386\u53f2\u6700\u5927\u52a0\u503c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6700\u5927\u503c\u548c\u975e\u6700\u5927\u503c\u5206\u522b\u8bb0\u5f55 $tag1$ \u8868\u793a\u5f53\u524d\u52a0\u503c\uff0c$tag2$ \u8868\u793a\u5386\u53f2\u6700\u5927\u52a0\u503c\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u5361\u5e38\uff0c\u751a\u81f3\u5c06\u5757\u957f\u8c03\u5230\u4e86 $120$\uff0c\u7ec8\u4e8e\u901a\u8fc7\u4e86\u6b64\u9898\u3002\n\n\u81f3\u6b64\uff0c\u7ebf\u6bb5\u6811\u548c\u5206\u5757\u5c31\u6ca1\u4ec0\u4e48\u4e24\u6837\u4e86\uff0c\u9664\u4e86\u5e38\u6570\u8f83\u5c0f\u3002\n\n### Part5 \u666e\u901a\u77e9\u9635\u4e58\u6cd5\u4e0e\u533a\u95f4\u5386\u53f2\u548c\n\n\u5927\u81f4\u6a21\u578b\u5982 [NOIP2022 \u6bd4\u8d5b](https://www.luogu.com.cn/problem/P8868)\uff0c\u4e8b\u5b9e\u4e0a\u7814\u7a76\u77e9\u4e58\u672c\u6765\u5c31\u662f\u4e3a\u4e86\u5b66\u4e60\u8fd9\u9053\u9898\u7684\u505a\u6cd5\uff0c\u636e\u8bf4\u90fd\u88ab\u51fa\u70c2\u4e86\u3002\n\n\u9898\u610f\u6c42 $\\sum\\limits_{L\\le l\\le r\\le R}\\max\\limits_{i=l}^ra_i\\max\\limits_{i=l}^rb_i$\uff0c\u9700\u8981\u7528\u626b\u63cf\u7ebf\u8f6c\u6362\u4e3a\u5386\u53f2\u548c\u3002\n\n\u5176\u5b9e\u5c31\u662f\u4ece $1$ \u5230 $n$ \u626b\u53f3\u7aef\u70b9\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5e8f\u5217 $A_i=\\max\\limits_{j=i}^ra_j,B_i=\\max\\limits_{j=i}^rb_j$ \u7684\u4e58\u79ef\u5386\u53f2\u548c\u3002\n\n\u5bb9\u6613\u53d1\u73b0 $A_i,B_i$ \u662f\u5355\u8c03\u7684\uff0c\u800c\u6bcf\u4e00\u6b21\u4f1a\u5168\u5c40\u4e0e $a_r,b_r$ \u53d6 $\\max$\uff0c\u76f4\u63a5\u505a\u662f\u4e0d\u597d\u7ef4\u62a4\u7684\uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u6216\u76f4\u63a5\u66b4\u529b\u989c\u8272\u6bb5\u5747\u644a\u8f6c\u5316\u4e3a\u533a\u95f4\u52a0\uff0c\u8003\u8651\u6bcf\u4e00\u4e2a\u8282\u70b9\u7ef4\u62a4\u5411\u91cf\uff1a$\\begin{bmatrix}a\\\\b\\\\ab\\\\c\\\\len\\end{bmatrix}$\uff0c\u8868\u793a\u533a\u95f4 $A_i,B_i$ \u7684\u548c\uff0c$A_iB_i$ \u7684\u548c\uff0c$A_iB_i$ \u7684\u5386\u53f2\u548c\uff0c\u533a\u95f4\u957f\u5ea6\u3002\u8003\u8651\u5982\u4f55\u533a\u95f4\u52a0\u3002\n\n\u6211\u4eec\u9700\u8981 $\\begin{bmatrix}a\\\\b\\\\ab\\\\c\\\\len\\end{bmatrix}\\leftarrow\\begin{bmatrix}a+k\\times len\\\\b\\\\ab+k\\times b\\\\c\\\\len\\end{bmatrix}$\uff0c\u53ef\u4ee5\u6784\u9020\u77e9\u9635\u4e58\u6cd5\uff1a\n\n$\\begin{bmatrix}a\\\\b\\\\ab\\\\c\\\\len\\end{bmatrix}\\begin{bmatrix}1&0&0&0&0\\\\0&1&k&0&0\\\\0&0&1&0&0\\\\0&0&0&1&0\\\\k&0&0&0&1\\end{bmatrix}=\\begin{bmatrix}a+k\\times len\\\\b\\\\ab+k\\times b\\\\c\\\\len\\end{bmatrix}$\n\n\u540c\u7406\uff0c\u6709\u533a\u95f4 $B_i$ \u589e\u52a0 $k$\uff1a\n\n$\\begin{bmatrix}a\\\\b\\\\ab\\\\c\\\\len\\end{bmatrix}\\begin{bmatrix}1&0&k&0&0\\\\0&1&0&0&0\\\\0&0&1&0&0\\\\0&0&0&1&0\\\\0&k&0&0&1\\end{bmatrix}=\\begin{bmatrix}a\\\\b+k\\times len\\\\ab+k\\times a\\\\c\\\\len\\end{bmatrix}$\n\n\u5f53\u7136\uff0c\u64cd\u4f5c\u7ed3\u675f\u65f6\u9700\u8981\u5bf9\u533a\u95f4 $1\\sim r$ \u66f4\u65b0\u5386\u53f2\u548c\uff1a\n\n$\\begin{bmatrix}a\\\\b\\\\ab\\\\c\\\\len\\end{bmatrix}\\begin{bmatrix}1&0&0&0&0\\\\0&1&0&0&0\\\\0&0&1&1&0\\\\0&0&0&1&0\\\\0&0&0&0&1\\end{bmatrix}=\\begin{bmatrix}a\\\\b\\\\ab\\\\c+ab\\\\len\\end{bmatrix}$\n\n\u81f3\u6b64\uff0c\u4f60\u5df2\u7ecf\u53ef\u4ee5\u5728 $k^3(n+q)\\log n$\uff08\u5176\u4e2d $k=5$\uff09 \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u6b64\u9898\u4e86\uff0c\u5728\u573a\u4e0a\u80fd\u83b7\u5f97 $76$ \u5206\uff0c\u8fd8\u4e0d\u591f\u4f18\u79c0\u3002\n\n\u8981\u77e5\u9053\uff0c\u77e9\u9635\u4e58\u6cd5\u66f4\u591a\u662f\u7528\u6765\u7406\u89e3\u6807\u8bb0\u7684\uff0c\u800c\u4e0d\u662f\u7528\u5728\u4ee3\u7801\u5b9e\u73b0\u4e0a\u7684\u3002\n\n\u53d1\u73b0\u77e9\u9635\u7684\u4e3b\u5bf9\u89d2\u7ebf\u6c38\u8fdc\u90fd\u4e3a $1$\uff0c\u6709\u4e00\u4e9b\u9879\u6c38\u8fdc\u90fd\u4e3a $0$\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u77e9\u9635\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20 $A_{i,j}$ \u90fd\u53ef\u4ee5\u89c6\u4f5c $i$ \u5bf9 $j$ \u4ea7\u751f\u7684\u8d21\u732e\uff0c\u800c\u8fd9\u4e2a\u8d21\u732e\u4f1a\u5f62\u6210\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff08\u504f\u5e8f\u96c6\uff09\uff1a$len\\rightarrow a,b\\rightarrow ab\\rightarrow c$\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u6bcf\u4e00\u4e2a\u77e9\u9635\u6700\u591a\u53ea\u6709 $9$ \u4e2a\u6709\u6548\u72b6\u6001\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5927\u5927\u51cf\u5c0f\u4e86\u5e38\u6570\uff0c\u53ef\u4ee5\u8f7b\u677e[\u901a\u8fc7](https://uoj.ac/submission/607388)\u3002\n\n### Part6 \u540e\u8bb0\n\n\u8fd9\u4e9b\u4f17\u6240\u5468\u77e5\u7684\u4e1c\u897f\u80fd\u591a\u5b66\u5c31\u591a\u5b66\u4e00\u70b9\u5427\u3002",
        "postTime": 1676695749,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u533a\u95f4\u5386\u53f2\u64cd\u4f5c\uff0c\u4ece\u77e9\u9635\u4e58\u6cd5\u5230\u6807\u8bb0"
    },
    {
        "content": "**update on 2022-01-17\uff1a\u66f4\u6539\u4e86\u4e00\u4e2a\u9519\u8bef\uff0c\u611f\u8c22 [lyx1311](https://www.luogu.com.cn/user/193308)\u3002**\n\n## 1. \u524d\u7f6e\u77e5\u8bc6 & \u5e9f\u8bdd\n\n1. AC [\u8be5\u9898](https://www.luogu.com.cn/problem/P3372)\n\n2. \u77e5\u9053\u5982\u4f55\u8fdb\u884c\u5b9a\u503c\u533a\u95f4\u4fee\u6539\uff08\u5373\u6539\u4e3a\u540c\u4e00\u4e2a\u503c\uff09\u3002\n\n\u770b\u51e0\u7bc7\u9898\u89e3\u90fd\u6ca1\u6709\u8bb2\u7b2c\u4e8c\u4e2a\uff08\u53ef\u80fd\u662f\u5bf9\u4ed6\u4eec\u6709\u4e9b\u7b80\u5355\uff09\uff0c\u4f3c\u4e4e\u53c8\u6ca1\u6709\u5408\u9002\u7684\u9898\uff0c\u6211\u8fd8\u662f\u8bb2\u4e00\u4e0b\u5427\u3002\n\n\u672c\u4eba\u56e0\u4e3a\u4e0d\u719f\u6089\u5b9a\u503c\u533a\u95f4\u4fee\u6539\uff0c\u6240\u4ee5\u8c03\u8bd5\u4e86\u8bb8\u4e45\uff0c\u524d\u524d\u540e\u540e 3 \u4e2a\u6708\u7ec8\u4e8e\u8fc7\u4e86\uff0c\u6240\u4ee5\u7406\u89e3\u8f83\u6df1\u523b\u3002\n\n\u540c\u65f6\uff0c\u5e0c\u671b\u5927\u5bb6\u4e0d\u8981\u91cd\u8e48\u8986\u8f99\u3002\n\n\u5982\u679c\u7b2c\u4e00\u4e2a\u672a\u5b8c\u6210\u7684\u8bdd\uff0c\u8bf7\u5148\u5b8c\u6210\u3002\n\n~~\u5e7f\u544a\u4e00\u4e0b~~ \uff1a[\u6211\u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/mydcwfy-342891/segment-tree)\n\n\u5982\u679c\u7b2c\u4e8c\u4e2a\u4e0d\u77e5\u9053\u7684\u8bdd\uff0c\u8bf7\u5f80\u4e0b\u770b\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u5728\u63a5\u4e0b\u6765\u7684\u8bb2\u89e3\u4e2d\uff0c\u7528\u533a\u95f4\u52a0\u8868\u793a\u533a\u95f4\u540c\u65f6\u52a0\u4e0a\u4e00\u4e2a\u6570\uff0c\u533a\u95f4\u4fee\u6539\u8868\u793a\u533a\u95f4\u6539\u4e3a\u4e00\u4e2a\u6570\u3002\n\n## 2. \u7ef4\u62a4\u533a\u95f4\u5b9a\u503c\u4fee\u6539\n\n\u5176\u5b9e\uff0c\u8fd9\u4e2a\u4ee3\u7801\u5982\u679c\u4e0d\u52a0\u4e0a lazytag \u7684\u8bdd\uff0c\u8fd8\u662f\u5f88\u7b80\u5355\u7684\uff08\u5c31\u50cf\u533a\u95f4\u52a0\u4e00\u6837\u7ef4\u62a4\uff09\u3002\n\n\u4f46\u662f\uff0c\u5982\u679c\u6709 lazytag \u7684\u8bdd\uff0c\u4e8b\u60c5\u5c31\u53d8\u7684\u6ca1\u90a3\u4e48\u7b80\u5355\u4e86\u3002\n\n\u53ef\u80fd\u5f88\u591a\u540c\u5b66\u76f4\u63a5\u5c06 c\uff08\u5c31\u662f\u6539\u4e3a\u7684\u6570\u7684\u61d2\u6807\u8bb0\uff09\u4e0e lazytag \u5171\u5b58\u7684\u8bdd\uff0c\u6709\u53ef\u80fd\u4f1a\u5bfc\u81f4\u65f6\u95f4\u5148\u540e\u4e0d\u5206\u3002\n\n\u5230\u5e95\u662f\u5148\u52a0\uff0c\u8fd8\u662f\u5148\u8d4b\u503c\uff1f\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\u3002\n\n\u5047\u5982\u662f\u5148\u52a0\uff0c\u518d\u8d4b\u503c\u3002\n\n\u6bd4\u5982\uff0c\u4ee5\u4e0b\u7684 Hack \u6570\u636e\uff1a\n\n```plain\nInput:\n3\n1 1 1\n4\nP 1 2 1\nC 1 3 5\nP 1 2 -1\nQ 1 1\nStdans:\n4\nOutput:\n5\n```\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u5f88\u660e\u663e\uff0c\u6211\u4eec\u5c06\u524d\u9762\u7684 lazytag \u4e5f\u7b97\u8fdb\u53bb\u4e86\uff0c\u624d\u5bfc\u81f4\u4e86\u9519\u8bef\u3002\n\n\u600e\u6837\u5c06\u6574\u4e2a\u64cd\u4f5c\u5e8f\u5217\u538b\u7f29\u4e3a 2 \u4e2a\u61d2\u6807\u8bb0\u5462\uff1f\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u533a\u95f4\uff0c\u8d4b\u503c\u8fc7\u540e\uff0c\u6240\u6709\u7684\u52a0\u64cd\u4f5c\u90fd\u53ef\u4ee5\u770b\u4f5c\u8d4b\u503c\u64cd\u4f5c\uff1a\n\n\u521a\u624d\u7684\u6570\u636e\uff1a\n\n```plain\nP 1 2 -1\n```\n\n\u7b49\u4ef7\u4e8e\uff1a\n\n```plain\nC 1 2 4\n```\n\n\u8fd9\u65f6\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u5148\u52a0\uff0c\u518d\u8d4b\u503c\u3002\n\n\u6ce8\u610f\uff0c\u867d\u7136\u8d4b\u503c\u64cd\u4f5c\u4e0d\u662f\u5bf9\u4e8e\u8be5\u533a\u95f4\uff0c\u4f46\u662f\u6211\u4eec\u5728\u9012\u5f52\u8be5\u533a\u95f4\u65f6\uff0c\u4e00\u5b9a\u4f1a\u5c06\u8be5\u533a\u95f4\u7684 lazytag \u4e0b\u4f20\u5230\u8be5\u533a\u95f4\u3002\n\n\u6709\u540c\u5b66\u53ef\u80fd\u60f3\u5230\u8d4b\u503c\u65f6\u6e05\u7a7a lazytag\uff0c\u4f46\u662f\u5bf9\u4e8e\u540e\u9762\u7684\u64cd\u4f5c\uff0c\u5c31\u672a\u514d\u6709\u4e9b\u9ebb\u70e6\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u63a8\u8350\u8fd9\u4e00\u79cd\u5199\u6cd5\u3002\n\n\u4ee3\u7801 [\u653e\u8fd9](https://www.luogu.com.cn/paste/lqbzd5ra) \u4e86\u3002\n\n## 3. \u5e26\u533a\u95f4\u52a0\u7684\u5386\u53f2\u6700\u5927\u503c\n\n\u6709\u540c\u5b66\u53ef\u80fd\u76f4\u63a5\u60f3\u5230\u662f\u7528\u4e00\u4e2a bef\uff08\u5f53\u524d\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\uff09\u7ef4\u62a4\uff0c\u4f46\u6709\u4e00\u4e2a\u95ee\u9898\u3002\n\n\u5047\u8bbe\u8fd8\u6ca1\u66f4\u65b0\u5230\uff0c\u5c31\u88ab\u8986\u76d6\u4e86\u5462\uff1f\n\n\u4f8b\u5982\u4e0b\u9762\u7684 Hack \u6570\u636e\uff1a\n\n```plain\nInput:\n3\n1 3 2\n3\nP 1 2 5\nP 1 2 -1\nA 1 3\nStdans:\n8\nOutput:\n7\n```\n\n\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u9519\u8bef\u5462\uff1f\n\n\u6211\u4eec\u5e94\u8be5\u662f\u6700\u5927\u503c\u7684\u7b2c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u8fd8\u6ca1\u66f4\u65b0\u5b50\u8282\u70b9\uff0c\u5c31\u88ab\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6240\u8986\u76d6\u4e86\u3002\n\n\u8fd9\u4e2a\u4e5f\u7ed9\u4e86\u6211\u4eec\u4ee5\u542f\u53d1\uff1a\n\n\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u7ef4\u62a4 lazytag \u7684\u6700\u5927\u503c\u5462\uff1f\n\n\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\u4e86\u3002\n\n\u4ee3\u7801\u5c31\u7565\u4e86\uff08 ~~\u9003~~ \uff09\n\n## 4. \u672c\u9898\n\n### 1\uff09 \u9898\u610f & \u57fa\u672c\u601d\u8def\n\n\u9898\u610f\u63a5\u8fd1\u4e8e\u6a21\u677f\u9898\uff0c\u5c31\u662f\u652f\u6301 4 \u4e2a\u64cd\u4f5c\uff1a\n\n1. \u5bf9\u4e00\u4e2a\u533a\u95f4\u8fdb\u884c\u533a\u95f4\u52a0\n\n2. \u5bf9\u4e00\u4e2a\u533a\u95f4\u8fdb\u884c\u533a\u95f4\u4fee\u6539\n3. \u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\n4. \u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u7684\u5386\u53f2\u6700\u5927\u503c\n\n\u8003\u8651\u548c\u524d\u9762\u4e00\u6837\u7684\u601d\u8def\uff0c\u6211\u4eec\u5bf9\u4e00\u4e2a\u533a\u95f4\u7ef4\u62a4\u4e86\u516d\u4e2a\u503c\uff1a\n now,bef,c,maxc,lt,maxlt\n\n\uff08lt \u662f lazytag \u7684\u7f29\u5199\u5566\uff09\u3002\n\n\u6211\u4eec\u518d\u8003\u8651\u5f00\u59cb\u533a\u95f4\u4fee\u6539\u7684\u505a\u6cd5\uff1a\n\n\u5148\u52a0\uff0c\u518d\u8d4b\u503c\u3002\n\n### 2\uff09 \u91cd\u8981\u6027\u8d28\n\n\u73b0\u5728\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u5c06\u7236\u8282\u70b9\u7684\u64cd\u4f5c\u5e8f\u5217\u662f\u63a5\u5728\u5b50\u8282\u70b9\u64cd\u4f5c\u5e8f\u5217\u7684\u90a3\u4e2a\u4f4d\u7f6e\uff1f\n\n\u6211\u4eec\u518d\u6765\u6316\u6398\u4fe1\u606f\u3002\n\n\u89c2\u5bdf [\u7ebf\u6bb5\u6811 1](https://www.luogu.com.cn/problem/P3372) \u7684\u4ee3\u7801\u7684\u4e00\u90e8\u5206\uff1a\n\n```cpp\nvoid modify(int p,int l,int r,int x)\n{\n    if (tr[p].l>=l&&tr[p].r<=r)\n    {\n        tr[p].sum+=(ll)(tr[p].r-tr[p].l+1)*x;\n        tr[p].add+=(ll)x;\n        return;\n    }\n    pushdown(p);//\u91cd\u70b9\u884c\n    int mid=tr[p].l+tr[p].r>>1;\n    if (l<=mid) modify(p1,l,r,x);\n    if (r>mid) modify(p2,l,r,x);\n    pushup(p);\n}\n```\n\n\n\n\u8ba4\u771f\u601d\u8003\u91cd\u70b9\u884c\uff1a\u8fd9\u4e2a pushdown \u5bf9\u6211\u4eec\u6709\u4ec0\u4e48\u4f5c\u7528\u5462\uff1f\n\n\u5b83\u544a\u8bc9\u6211\u4eec\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8282\u70b9\u5728\u7236\u8282\u70b9\u4e4b\u540e\u66f4\u65b0\uff0c\u90a3\u4e48\u7236\u8282\u70b9\u4e00\u5b9a\u4f1a\u6267\u884c pushdown\u3002\n\n\u6211\u4eec\u53c8\u53ef\u4ee5\u5f97\u5230\uff0c\u5982\u679c\u7236\u8282\u70b9\u8fd8\u6709\u6807\u8bb0\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u5728\u5b50\u8282\u70b9\u6807\u8bb0\u4e4b\u540e\u624d\u6807\u8bb0\u7684\u3002\n\n\u5341\u5206\u91cd\u8981\uff0c\u8bf7\u52a1\u5fc5\u7406\u89e3\u518d\u5f80\u4e0b\u8bfb\u3002\n\n### 3\uff09 \u5177\u4f53\u5b9e\u73b0\n\n\u76f8\u5bf9\u6765\u8bf4\u7b80\u5355\u4e00\u4e9b\u4e86\u3002\n\n\u73b0\u5728\u7684 maxlt \u8868\u793a\u5728\u7b2c\u4e00\u6b21\u8d4b\u503c\u4e4b\u524d\uff0clt \u8fbe\u5230\u7684\u6700\u5927\u503c\u3002\n\nmaxc \u8868\u793a\u6700\u5927\u8d4b\u503c\u3002\n\n\u6211\u4eec\u770b\u600e\u6837\u4ece\u5b50\u8282\u70b9\u8f6c\u79fb\u5230\u7236\u8282\u70b9\u3002\n\n\u753b\u5f20\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/h3cpdlj5.png)\n\n\u5982\u679c\u5b50\u8282\u70b9\u5df2\u7ecf\u6709 c \u7684\u8bdd\uff0cmaxlt \u4e0d\u53d8\u3002\n$$\nson.maxc=\\max(son.maxc,fa.maxc).\n$$\n\n\n\u8fd8\u6709\u4e00\u79cd\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hmghhrm7.png)\n\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e0b\u6574\u4e2a\u533a\u95f4\u7684 maxlt \u6765\u81ea\u4e00\u4e0b\u4e24\u4e2a\u5730\u65b9\uff1a\n\n1. \u539f\u6765\u7684 maxlt\n2. \u539f\u6765\u7684\u603b\u548c lt \u52a0\u7236\u8282\u70b9\u7684 maxlt\n\n\u8fd9\u65f6\uff0c\u5b50\u8282\u70b9\u7684\u53ef\u66f4\u65b0\u4e3a\uff1a\n$$\nson.maxlt=\\max(son.maxlt,son.lt+fa.maxlt)\n$$\n\u5982\u679c\u7236\u8282\u70b9\u6709 c\uff0c\u76f4\u63a5\u8d4b\u503c\u7ed9\u513f\u5b50\u8282\u70b9\u5373\u53ef\u3002\n\n\u6211\u4eec\u5c06 pushdown \u51fd\u6570\u5148\u5199\u597d\uff1a\n\n```cpp\nvoid change(int p,int c,int maxc)\n{\n\ttr[p].lt=0;\n    tr[p].c=c;\n    tr[p].maxc=max(tr[p].maxc,maxc);\n    tr[p].now=c;\n    tr[p].bef=max(tr[p].bef,tr[p].maxc);\n}\n\nvoid add(int p,int lt,int maxlt)\n{\n    if (tr[p].c!=INF)\n    {//\u5df2\u7ecf\u6709\u4e86\u8d4b\u503c\uff0c\u65e0\u9700\u66f4\u65b0 lt \u4e0e maxlt\uff0c\u76f4\u63a5\u8fdb\u5165 change\n        change(p,tr[p].c+lt,tr[p].c+maxlt);\n        return ;\n    }\n    tr[p].maxlt=max(tr[p].maxlt,tr[p].lt+maxlt);\n    tr[p].bef=max(tr[p].now+maxlt,tr[p].bef);\n    tr[p].now+=lt;tr[p].lt+=lt;\n    return ;\n}\nvoid pushup(int p)\n{\n    tr[p].now=max(tr[l(p)].now,tr[r(p)].now);\n    tr[p].bef=max(tr[p].now,tr[p].bef);\n}\n\nvoid pushdown(int p)\n{\n    if (tr[p].l==tr[p].r) return;\n\tadd(l(p),tr[p].lt,tr[p].maxlt);\n    add(r(p),tr[p].lt,tr[p].maxlt);\n    if (tr[p].c!=INF)\n    {\n\t\tchange(l(p),tr[p].c,tr[p].maxc);\n        change(r(p),tr[p].c,tr[p].maxc);\n        tr[p].c=INF;tr[p].maxc=-INF;\n    }\n\ttr[p].lt=0;tr[p].maxlt=0;\n    pushup(p);\n}\n```\n\n\u6211\u8fd9\u91cc\u4f7f\u7528\u51fd\u6570\uff0c\u4ee3\u7801\u76f8\u5bf9\u7b80\u6d01\u4e00\u4e9b\u3002\n\n\u540c\u65f6\uff0c\u6211\u4eec\u5199\u6210\u51fd\u6570\u7684\u597d\u5904\u8fd8\u6709\u4e00\u4e2a\uff0c\u5c31\u662f\uff1a\u533a\u95f4\u52a0\u4e0e\u8d4b\u503c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\n\n\u4e00\u4e2a\u52a0\u51fd\u6570\u53ef\u4ee5\u770b\u505a\u662f $lt=maxlt=x$ \u7684\u64cd\u4f5c\u5e8f\u5217\u3002\n\n\u4e00\u4e2a\u8d4b\u503c\u51fd\u6570\u53ef\u4ee5\u770b\u505a\u662f $c=maxc=x$ \u7684\u64cd\u4f5c\u5e8f\u5217\u3002\n\n\u81f3\u6b64\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u5f97\u5230\u89e3\u51b3\u4e86\u3002\n\n## 5. \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define l(k) (k<<1)\n#define r(k) (k<<1|1)\nusing namespace std;\n\nconst int N=2e5+10,INF=0x7fffffff;\n\nstruct Node{\n    int l,r;\n    int now,bef;\n    int c,maxc;\n    int lt,maxlt;\n}tr[N<<2];\n//lt \u662f lazytag \u7684\u7f29\u5199\u5566\nint a[N];\n\nvoid change(int p,int c,int maxc)\n{\n    // printf(\"change_%d %d %d %d %d\\n\",p,tr[p].l,tr[p].r,c,maxc);\n\ttr[p].lt=0;\n    tr[p].c=c;\n    tr[p].maxc=max(tr[p].maxc,maxc);\n    tr[p].now=c;\n    tr[p].bef=max(tr[p].bef,tr[p].maxc);\n}\n\nvoid add(int p,int lt,int maxlt)\n{\n    // printf(\"add_%d %d %d %d %d %d %d\\n\",p,tr[p].l,tr[p].r,lt,maxlt,tr[p].lt,tr[p].maxlt);\n    if (tr[p].c!=INF)\n    {\n        change(p,tr[p].c+lt,tr[p].c+maxlt);\n        return ;\n    }\n    tr[p].maxlt=max(tr[p].maxlt,tr[p].lt+maxlt);\n    tr[p].bef=max(tr[p].now+maxlt,tr[p].bef);\n    tr[p].now+=lt;tr[p].lt+=lt;\n    return ;\n}\n//\u6ce8\u610f\uff0c\u4ee5\u4e0a\u662f pushdown \u7684\u64cd\u4f5c\uff0c\u4e0e\u771f\u6b63\u7684\u65e0\u5173\uff0c\u771f\u6b63\u7684\u5728\u4e0b\u9762 insert_change/insert_plus\nvoid pushup(int p)\n{\n    tr[p].now=max(tr[l(p)].now,tr[r(p)].now);\n    tr[p].bef=max(tr[p].now,tr[p].bef);\n}\n\nvoid pushdown(int p)\n{\n    if (tr[p].l==tr[p].r) return;\n//\tprintf(\"plus:%d %d %d %d %d %d\\n\",p,tr[p].l,tr[p].r,tr[p].c,tr[p].lt,tr[p].maxlt);\n\t/*if (tr[l(p)].c!=INF) pushdown(l(p));\n\tif (tr[r(p)].c!=INF) pushdown(r(p));*/\n\tadd(l(p),tr[p].lt,tr[p].maxlt);\n    add(r(p),tr[p].lt,tr[p].maxlt);\n    if (tr[p].c!=INF)\n    {\n//    \tprintf(\"change:%d %d %d %d %d\\n\",p,tr[p].l,tr[p].r,tr[p].c,tr[p].maxc);\n\t\tchange(l(p),tr[p].c,tr[p].maxc);\n        change(r(p),tr[p].c,tr[p].maxc);\n        tr[p].c=INF;tr[p].maxc=-INF;\n    }\n\ttr[p].lt=0;tr[p].maxlt=0;\n    pushup(p);\n}\n\nvoid build(int p,int l,int r)\n{\n    tr[p]=(Node){l,r,0,-INF};\n    tr[p].c=INF;tr[p].maxc=-INF;\n    tr[p].lt=tr[p].maxlt=0;\n    if (l==r)\n    {\n        tr[p].bef=tr[p].now=a[l];\n        return;\n    }\n    int mid=l+r>>1;\n    build(l(p),l,mid);\n    build(r(p),mid+1,r);\n    pushup(p);\n}\n\nvoid insert_change(int p,int l,int r,int x)\n{\n    if (l<=tr[p].l&&r>=tr[p].r)\n    {\n    \tchange(p,x,x);\n//\t\tprintf(\"here:%d %d %d %d %d %d\\n\",p,tr[p].l,tr[p].r,tr[p].c,tr[p].maxc,tr[p].bef);\n        return;\n    }\n    pushdown(p);\n    int mid=tr[p].l+tr[p].r>>1;\n    if (l<=mid) insert_change(l(p),l,r,x);\n    if (r>mid) insert_change(r(p),l,r,x);\n    pushup(p);\n}\n\nvoid insert_plus(int p,int l,int r,int x)\n{\n    if (l<=tr[p].l&&r>=tr[p].r)\n    {\n        /*if (tr[p].c!=INF) insert_change(p,l,r,x+tr[p].now);\n        else tr[p].now+=x,tr[p].lt+=x,tr[p].maxlt=max(tr[p].lt,tr[p].maxlt),tr[p].bef=max(tr[p].bef,tr[p].now);*/\n        add(p,x,x);\n        /*if (p==4)\n        {\n        \tprintf(\"-------%d %d %d\\n\",p,tr[p].c,tr[p].lt);\n        }*/\n//\t\tprintf(\"here___:%d %d %d %d %d %d\\n\",p,tr[p].l,tr[p].r,tr[p].lt,tr[p].maxlt,tr[p].bef);\n        return;\n    }\n    pushdown(p);\n    int mid=tr[p].l+tr[p].r>>1;\n    if (l<=mid) insert_plus(l(p),l,r,x);\n    if (r>mid) insert_plus(r(p),l,r,x);\n    pushup(p);\n}\n\nint querynow(int p,int l,int r)\n{\n    if (tr[p].l>=l&&tr[p].r<=r)\n    {\n   \t    // printf(\"query_now%d %d %d %d\\n\",p,tr[p].l,tr[p].r,tr[p].now);\n        return tr[p].now;\n    }\n    pushdown(p);\n    int mid=tr[p].l+tr[p].r>>1,ans=-INF;\n    if (l<=mid) ans=max(ans,querynow(l(p),l,r));\n    if (r>mid) ans=max(ans,querynow(r(p),l,r));\n    return ans;\n}\n\nint querybef(int p,int l,int r)\n{\n    if (tr[p].l>=l&&tr[p].r<=r)\n    {\n   \t    // printf(\"query_bef%d %d %d %d\\n\",p,tr[p].l,tr[p].r,tr[p].bef);\n        return tr[p].bef;\n    }\n    pushdown(p);\n    int mid=tr[p].l+tr[p].r>>1,ans=-INF;\n    if (l<=mid) ans=max(ans,querybef(l(p),l,r));\n    if (r>mid) ans=max(ans,querybef(r(p),l,r));\n    return ans;\n}\n\nint main()\n{\n\t// freopen(\"randdata.in\",\"r\",stdin);\n\t// freopen(\"myans.out\",\"w\",stdout);\n    int n,m;scanf(\"%d\",&n);\n    for (int i=1;i<=n;++i) scanf(\"%d\",a+i);\n    build(1,1,n);\n    scanf(\"%d\",&m);\n    char op[5];\n    int l,r,x;\n    while (m--)\n    {\n        scanf(\"%s\",op);\n        scanf(\"%d %d\",&l,&r);\n        if (op[0]=='Q')\n        {\n            printf(\"%d\\n\",querynow(1,l,r));\n        }\n        else if (op[0]=='A')\n        {\n            printf(\"%d\\n\",querybef(1,l,r));\n        }\n        else{\n            scanf(\"%d\",&x);\n            if (op[0]=='P') insert_plus(1,l,r,x);\n            else insert_change(1,l,r,x);\n        }\n    }\n    return 0;\n}\n\n```\n\n",
        "postTime": 1620477493,
        "uid": 342891,
        "name": "mydcwfy",
        "ccfLevel": 9,
        "title": "\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u503c\u7684\u7ebf\u6bb5\u6811"
    },
    {
        "content": "\u6253\u6807\u8bb0\uff0c\u63a8\u6807\u8bb0\uff0c\u597d\u9ebb\u70e6\u3002\n\n\u5386\u53f2\u6700\u503c\u95ee\u9898\u3001\u5386\u53f2\u7248\u672c\u548c\u95ee\u9898\uff0c\u76f4\u63a5\u8003\u8651\u7528\u4e0d\u52a8\u8111\u5b50\u7684\u7ebf\u4ee3\u89e3\u6cd5\u3002\n\n\u7531\u4e8e\u8981\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4 $a, b$\uff0c\u7136\u540e\u6bcf\u6b21\u64cd\u4f5c\u8ba9 $b_i \\leftarrow \\max(a_i, b_i)$\uff0c\u4e8e\u662f\u76f4\u63a5\u628a $a_i, b_i$ \u653e\u5165\u4e00\u4e2a\u5411\u91cf\u91cc\u9762\uff0c\u8bb0\u4f5c $\\begin{bmatrix} a_i\\\\b_i \\end{bmatrix}$\u3002\n\n\u91cd\u5b9a\u4e49\u77e9\u9635\u4e58\u6cd5\uff0c\u5c06 $\\times, +$ \u5206\u522b\u6362\u6210 $+ ,\\max$\uff0c\u5219\u6bcf\u6b21\u66f4\u65b0 $b_i \\leftarrow \\max(a_i, b_i)$ \u53ef\u4ee5\u770b\u4f5c\uff1a\n\n$$\n\\begin{bmatrix} a_i\\\\b_i \\end{bmatrix}\n\\leftarrow\n\\begin{bmatrix} 0 & -\\infty \\\\ 0 & 0 \\end{bmatrix}\n\\begin{bmatrix} a_i\\\\b_i \\end{bmatrix}\n$$\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5411\u91cf\uff0c\u90a3\u4e48\u6bcf\u6b21\u64cd\u4f5c\u5b8c\u8ba9\u5168\u5c40\u4e58\u4e0a\u4e00\u4e2a\u56fa\u5b9a\u7684\u77e9\u9635\u5373\u53ef\uff0c\u76f4\u63a5\u6253\u533a\u95f4\u4e58\u6cd5 \u6807\u8bb0\u3002\n\n\u7136\u540e\u8003\u8651\u533a\u95f4\u52a0\u6cd5\u3002\n\n\u5982\u679c\u533a\u95f4\u52a0\u4e0a $k$\uff1a\n\n$$\n\\begin{bmatrix} a_i\\\\b_i \\end{bmatrix}\n\\leftarrow\n\\begin{bmatrix} k & -\\infty \\\\ -\\infty & 0 \\end{bmatrix}\n\\begin{bmatrix} a_i\\\\b_i \\end{bmatrix}\n$$\n\n\u7136\u540e\u8003\u8651\u533a\u95f4\u8986\u76d6\u3002\n\n\u53d1\u73b0\u4e0d\u5bf9\u4e86\uff0c\u9700\u8981\u4e00\u4e2a\u5e38\u6570\u9879\uff0c\u4e8e\u662f\u5c06\u5411\u91cf\u6539\u4e3a $\\begin{bmatrix} a_i\\\\b_i\\\\0 \\end{bmatrix}$\n\n\u90a3\u4e48\u5982\u679c\u533a\u95f4\u8d4b\u4e3a $k$\uff1a\n\n$$\n\\begin{bmatrix} a_i\\\\b_i\\\\0 \\end{bmatrix}\n\\leftarrow\n\\begin{bmatrix} -\\infty & -\\infty & k \\\\ -\\infty & 0 & -\\infty \\\\ -\\infty & -\\infty & 0 \\end{bmatrix}\n\\begin{bmatrix} a_i\\\\b_i \\\\ 0 \\end{bmatrix}\n$$\n\n\u540c\u7406\u6bcf\u6b21\u533a\u95f4\u52a0\u53d8\u4e3a\uff1a\n\n$$\n\\begin{bmatrix} a_i\\\\b_i\\\\0 \\end{bmatrix}\n\\leftarrow\n\\begin{bmatrix} k & -\\infty & -\\infty \\\\ -\\infty & 0 & -\\infty \\\\ -\\infty & -\\infty & 0 \\end{bmatrix}\n\\begin{bmatrix} a_i\\\\b_i\\\\0 \\end{bmatrix}\n$$\n\n\u66f4\u65b0 $b_i$ \u53d8\u4e3a\uff1a\n\n$$\n\\begin{bmatrix} a_i\\\\b_i\\\\0 \\end{bmatrix}\n\\leftarrow\n\\begin{bmatrix} 0 & -\\infty & -\\infty \\\\ 0 & 0 & -\\infty \\\\ -\\infty & -\\infty & 0 \\end{bmatrix}\n\\begin{bmatrix} a_i\\\\b_i\\\\0 \\end{bmatrix}\n$$\n\n\u53d1\u73b0\u4efb\u4f55\u64cd\u4f5c\u90fd\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e86\u533a\u95f4\u4e58\u6cd5\uff0c\u4e8e\u662f\u53ea\u7528\u7ef4\u62a4\u4e00\u4e2a\u4e58\u6cd5\u6807\u8bb0\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n \\log n)$ \uff0c\u4f46\u662f\u7531\u4e8e\u662f\u77e9\u9635\u4e58\u6cd5\uff0c\u6240\u4ee5\u5e38\u6570\u8f83\u5927\uff0c\u4f46\u662f\u8db3\u4ee5\u901a\u8fc7\uff0c[code](https://www.luogu.com.cn/paste/kf3zoztq)\u3002\n\n\u4f46\u662f\u6709\u4e9b\u60c5\u51b5\u5c31\u8fc7\u4e0d\u4e86\uff0c\u6bd4\u5982[\u8fd9\u9898](https://www.luogu.com.cn/problem/P8868) \uff0c\u6240\u4ee5\u6709\u5fc5\u8981\u5b66\u4f1a\u4e00\u5b9a\u7684\u5361\u5e38\u6280\u5de7\uff08~~\u5982\u679c\u4f60\u975e\u8981\u628a\u77e9\u9635\u4e58\u6cd5\u5b8c\u5168\u5faa\u73af\u5c55\u5f00\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u90a3\u9053\u9898\u7684~~\uff09\u3002\n\n\u53d1\u73b0\u4efb\u4f55\u65f6\u523b\u4efb\u4f55\u77e9\u9635\u4e2d\uff0c\u9664\u4e86\u8fd9\u56db\u4e2a\u4f4d\u7f6e\uff08$*$ \u6807\u8bb0\u5904\uff09\uff0c\u5176\u4ed6\u4f4d\u7f6e\u7684\u503c\u90fd\u662f\u4e0d\u53d8\u7684\u3002\n\n$$\n\\begin{bmatrix} * & -\\infty & * \\\\ * & 0 & * \\\\ -\\infty & -\\infty & 0 \\end{bmatrix}\n$$\n\n\u4e8e\u662f\u53ef\u4ee5\u53ea\u7528\u7ef4\u62a4\u8fd9\u56db\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u7136\u540e\u6839\u636e\u77e9\u9635\u4e58\u6cd5\u5199\u51fa\u8fd9\u56db\u4e2a\u503c\u7684\u8f6c\u79fb\u5f0f\u5373\u53ef\u3002\n\n\u8fd9\u6837\u5199\u5e38\u6570\u7ea6\u4e3a\u76f4\u63a5\u77e9\u9635\u4e58\u6cd5\u7684 $\\frac 1 4$\uff0c[code](https://www.luogu.com.cn/paste/4adm882i)\u3002\n\n\u5f53\u7136\u8fd8\u53ef\u4ee5\u4f18\u5316\u5e38\u6570\uff0c\u6bd4\u5982\u6807\u8bb0\u6c38\u4e45\u5316\uff0c\u53ea\u4e0d\u8fc7\u6211\u5c31\u6ca1\u5199\u4e86\u3002\n\n\u6ce8\u610f $-\\infty$ \u4e0d\u8981\u8bbe\u5f97\u592a\u5c0f\uff0c\u4f1a\u7206 `long long`\u3002",
        "postTime": 1673004574,
        "uid": 205541,
        "name": "Aftglw",
        "ccfLevel": 0,
        "title": "CPU \u76d1\u63a7"
    },
    {
        "content": "\u4e00\u770b$T,E\\le10^5$\u5c31\u53ef\u4ee5\u8003\u8651\u5f00\u59cb\u975e\u5e38naive\u7684\u5206\u5757\u4e86.\u9996\u5148\u6ce8\u610f\u5230\u9700\u8981\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u5f53\u524d\u503c/\u5386\u53f2\u6700\u5927\u503c\u548c\u5757\u5185\u7684\u5f53\u524d\u6700\u5927/\u5386\u53f2\u6700\u5927\u503c,\u7136\u540e\u67e5\u8be2\u5c31\u5f88\u5bb9\u6613\u4e86.  \n\u4f46\u662f\u6ce8\u610f\u5230\u4ee5\u4e0a\u56db\u4e2a\u503c\u5e76\u4e0d\u597d\u76f4\u63a5\u7ef4\u62a4,\u6240\u4ee5\u8003\u8651\u62c6\u5f00\u6765\u7ef4\u62a4.\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u4e00\u5757\u5185\u6240\u6709\u503c\u5168\u90e8\u4e00\u6837,\u90a3\u4e48\u533a\u95f4\u52a0\u548c\u533a\u95f4\u8d4b\u503c\u5b9e\u9645\u4e0a\u6ca1\u6709\u533a\u522b.\n\n\u8003\u8651\u6bcf\u4e00\u4e2a\u5757\u5185\u7684\u4fee\u6539,\u53ef\u4ee5\u5206\u4e3a\u56db\u4e2a\u90e8\u5206:\n\n- \u6267\u884c\u4e86\u6570\u6b21\u6574\u5757\u533a\u95f4\u52a0,\u6253\u6807\u8bb0;\n- \u6267\u884c\u4e86\u6574\u5757\u533a\u95f4\u8d4b\u503c,\u6253\u6807\u8bb0;\n- \u6267\u884c\u4e86\u6570\u6b21\u6574\u5757\u533a\u95f4\u52a0/\u8d4b\u503c,\u6253\u6807\u8bb0;\n- \u4f5c\u4e3a\u6563\u5757\u88ab\u4fee\u6539,\u7edf\u8ba1\u6807\u8bb0\u8d21\u732e,\u6e05\u7a7a\u6807\u8bb0;\n\n![](https://i.loli.net/2021/01/25/iAhT8VzElUMwbsu.png)\n\n\u56fe\u4e2d\u4ece\u5de6\u5230\u53f3\u5206\u522b\u662f\u521d\u59cb\u72b6\u6001(\u7b2c\u56db\u90e8\u5206\u4fee\u6539\u540e\u7684\u72b6\u6001)\u548c\u524d\u4e09\u6b21\u4fee\u6539\u540e\u7684\u72b6\u6001.\u9ed1\u8272\u662f\u5f53\u524d\u72b6\u6001,\u84dd\u8272\u662f\u4e0a\u4e00\u5f20\u56fe\u7684\u72b6\u6001,\u6a59\u8272\u662f\u5386\u53f2\u6700\u5927\u503c.\n\n\u8003\u8651\u5bf9\u6bcf\u4e2a\u533a\u95f4\u7ef4\u62a4\u4e03\u4e2a\u6807\u8bb0:\u533a\u95f4\u52a0$\\mathrm{adt}$,\u533a\u95f4\u8d4b\u503c$\\mathrm{ftt}$,\u662f\u5426\u8fdb\u884c\u4e86\u533a\u95f4\u8d4b\u503c$\\mathrm{ftf}$,\u5f53\u524d\u6700\u5927$\\mathrm{nmx}$,\u5386\u53f2\u6700\u5927$\\mathrm{hmx}$,\u5386\u53f2\u6700\u5927\u533a\u95f4\u52a0$\\mathrm{amx}$,\u5386\u53f2\u6700\u5927\u533a\u95f4\u8d4b\u503c$\\mathrm{fmx}$;\u5bf9\u6bcf\u4e2a\u70b9\u518d\u7ef4\u62a4\u5f53\u524d\u503c$\\mathrm{nvl}$\u548c\u5386\u53f2\u6700\u5927\u503c$\\mathrm{hvl}$\u6807\u8bb0.\n\n\u7136\u540e\u5c31\u80fd\u5199\u51fa\u6bcf\u4e00\u4e2a\u4fee\u6539\u7684\u64cd\u4f5c\u4e86,\u5206\u522b\u662f:\n\n- \u76f4\u63a5\u4fee\u6539\u533a\u95f4\u52a0\u6807\u8bb0,\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u533a\u95f4\u52a0\u6807\u8bb0,\n  \u6b64\u65f6\u533a\u95f4\u6700\u5927\u503c/\u5386\u53f2\u533a\u95f4\u6700\u5927\u503c/\u5355\u4e2a\u6570\u5f53\u524d\u503c/\u5355\u4e2a\u6570\u5386\u53f2\u6700\u5927\u503c\u5206\u522b\u662f$\\mathrm{nmx}+\\mathrm{adt}$/$\\max\\{\\mathrm{hmx},\\mathrm{nmx}+\\mathrm{amx}\\}$/$\\mathrm{nvl}+\\mathrm{adt}$/$\\max\\{\\mathrm{hvl},\\mathrm{nvl}+\\mathrm{amx}\\}$;\n- \u8bb0\u5f55\"\u5df2\u7ecf\u8fdb\u884c\u4e86\u533a\u95f4\u8d4b\u503c\",\u4fee\u6539\u533a\u95f4\u8d4b\u503c\u6807\u8bb0,\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u533a\u95f4\u8d4b\u503c\u6807\u8bb0;\n  \u56db\u4e2a\u503c\u5206\u522b\u662f$\\mathrm{ftt}$/$\\max\\{\\mathrm{hmx},\\mathrm{fmx},\\mathrm{nmx}+\\mathrm{amx}\\}$/$\\mathrm{fmx}$/$\\max\\{\\mathrm{hvl},\\mathrm{fmx},\\mathrm{nvl}+\\mathrm{amx}\\}$;\n- \u4fee\u6539\u533a\u95f4\u8d4b\u503c\u6807\u8bb0,\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u533a\u95f4\u8d4b\u503c\u6807\u8bb0;\n  \u56db\u4e2a\u503c\u540c\u4e0a;\n- \u4ee4$\\mathrm{nvl}\\gets\\begin{cases}\\mathrm{nvl}+\\mathrm{adt}&\\mathrm{ftf}=\\mathrm{false}\\\\\\mathrm{ftt}&\\mathrm{ftf}=\\mathrm{true}\\end{cases}$,\u540c\u65f6\u626b\u63cf\u6574\u4e2a\u533a\u95f4\u66f4\u65b0$\\mathrm{nmx}$,\u5269\u4e0b\u6807\u8bb0\u590d\u4f4d($0$\u6216$-\\infty$).\n  \u56db\u4e2a\u503c\u5206\u522b\u662f$\\mathrm{nmx}$/$\\mathrm{hmx}$/$\\mathrm{nvl}$/$\\mathrm{hvl}$.\n\n\u540c\u6837\u7684,\u4f5c\u4e3a\u6563\u5757\u88ab\u7edf\u8ba1\u8d21\u732e\u65f6,\u4e5f\u9700\u8981\u7edf\u8ba1\u6807\u8bb0\u8d21\u732e\u5e76\u6e05\u7a7a\u6807\u8bb0.\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\ntypedef long long ll;\n\n/* ---- read() & rlong() - begin ---- */\n#define gc() (p0==p1&&(p1=(p0=buf)+fread(buf,1,1048576,stdin),p0==p1)?EOF:*p0++)\n#define pc(c) (p2==fub+1048576?(fwrite(fub,1048576,1,stdout),*((p2=fub)++)=c):*(p2++)=c)\nchar buf[1048576],fub[1048576],*p0,*p1,*p2=fub;\ninline int read() {\n\tint r=0; char c=gc(); bool f=false;\n\twhile ((c<48||c>57)&&c!=45) c=gc(); if (c==45) {f=true; c=gc();}\n\twhile (c>47&&c<58) {r=(r<<3)+(r<<1)+(c^48); c=gc();} return f?-r:r;\n}\ninline char rchar() {char c=gc(); while (c<65||c>90) c=gc(); return c;}\ntemplate <typename _typ> inline void write(_typ x) {\n\tstatic char t[25]; if (!x) {pc(48); pc(10); return;} char *p=t+1;\n\tt[1]=10; if (x<0) {x=-x; pc(45);} while (x) {*(++p)=(x%10)^48; x/=10;}\n\twhile (p!=t) pc(*(p--));\n}\n#undef gc\n#undef pc\n/* ---- read() & rlong() -- end ----- */\n\nconst int q=317; int n,p[100505],l[325],r[325];\nint nvl[100505],hvl[100505],adt[325],ftt[325];\nint nmx[325],hmx[325],amx[325],fmx[325]; bool ftf[325];\n\ninline void pushtag(int u) {\n\tif (ftf[u]) for (int i=l[u];i<=r[u];++i) {\n\t\thvl[i]=max(hvl[i],max(nvl[i]+amx[u],fmx[u])); nvl[i]=ftt[u];\n\t}\n\telse for (int i=l[u];i<=r[u];++i) {\n\t\thvl[i]=max(hvl[i],nvl[i]+amx[u]); nvl[i]+=adt[u];\n\t}\n\tadt[u]=amx[u]=0; fmx[u]=0x80000000; ftf[u]=false;\n}\n\ninline void recalc(int u) {\n\tnmx[u]=0x80000000; for (int i=l[u];i<=r[u];++i)\n\t\t{nmx[u]=max(nmx[u],nvl[i]); hmx[u]=max(hmx[u],hvl[i]);}\n}\n\ninline void modify_ad(int u,int v,int w) {\n\tif (p[u]==p[v]) {\n\t\tpushtag(p[u]); for (int i=u;i<=v;++i)\n\t\t\thvl[i]=max(hvl[i],nvl[i]+=w); recalc(p[u]);\n\t}\n\telse {\n\t\tpushtag(p[u]); pushtag(p[v]);\n\t\tfor (int i=u;i<=r[p[u]];++i) hvl[i]=max(hvl[i],nvl[i]+=w);\n\t\tfor (int i=l[p[v]];i<=v;++i) hvl[i]=max(hvl[i],nvl[i]+=w);\n\t\trecalc(p[u]); recalc(p[v]); for (int i=p[u]+1;i<p[v];++i)\n\t\t\tftf[i]?fmx[i]=max(fmx[i],ftt[i]+=w):amx[i]=max(amx[i],adt[i]+=w);\n\t}\n}\n\ninline void modify_ft(int u,int v,int w) {\n\tif (p[u]==p[v]) {\n\t\tpushtag(p[u]); for (int i=u;i<=v;++i)\n\t\t\thvl[i]=max(hvl[i],nvl[i]=w); recalc(p[u]);\n\t}\n\telse {\n\t\tpushtag(p[u]); pushtag(p[v]);\n\t\tfor (int i=u;i<=r[p[u]];++i) hvl[i]=max(hvl[i],nvl[i]=w);\n\t\tfor (int i=l[p[v]];i<=v;++i) hvl[i]=max(hvl[i],nvl[i]=w);\n\t\trecalc(p[u]); recalc(p[v]); for (int i=p[u]+1;i<p[v];++i) {\n\t\t\tfmx[i]=max(fmx[i],ftt[i]=w); ftf[i]=true;\n\t\t}\n\t}\n}\n\ninline int query_mx(int u,int v) {\n\tint w=0x80000000; if (p[u]==p[v]) {\n\t\tpushtag(p[u]); for (int i=u;i<=v;++i) w=max(w,nvl[i]); recalc(p[u]);\n\t}\n\telse {\n\t\tpushtag(p[u]); for (int i=u;i<=r[p[u]];++i) w=max(w,nvl[i]);\n\t\tpushtag(p[v]); for (int i=l[p[v]];i<=v;++i) w=max(w,nvl[i]);\n\t\trecalc(p[u]); recalc(p[v]); for (int i=p[u]+1;i<p[v];++i)\n\t\t\tw=max(w,ftf[i]?ftt[i]:nmx[i]+adt[i]);\n\t}\n\treturn w;\n}\n\ninline int query_hx(int u,int v) {\n\tint w=0x80000000; if (p[u]==p[v]) {\n\t\tpushtag(p[u]); for (int i=u;i<=v;++i) w=max(w,hvl[i]); recalc(p[u]);\n\t}\n\telse {\n\t\tpushtag(p[u]); for (int i=u;i<=r[p[u]];++i) w=max(w,hvl[i]);\n\t\tpushtag(p[v]); for (int i=l[p[v]];i<=v;++i) w=max(w,hvl[i]);\n\t\trecalc(p[u]); recalc(p[v]); for (int i=p[u]+1;i<p[v];++i)\n\t\t\tw=max(w,ftf[i]?max(max(hmx[i],fmx[i]),nmx[i]+amx[i]):max(hmx[i],nmx[i]+amx[i]));\n\t}\n\treturn w;\n}\n\nint main() {\n\tint m,u,v; n=read();\n\tfor (int i=0;i<n;++i) {nvl[i]=hvl[i]=read(); p[i]=i/q;} p[n]=p[n-1]+1;\n\tfor (int i=0,j;j<n;r[i]=(l[i+1]=j)-1,++i) {\n\t\tnmx[i]=nvl[l[i]]; fmx[i]=0x80000000;\n\t\tfor (j=l[i]+1;p[j-1]==p[j];++j) nmx[i]=max(nvl[j],nmx[i]); hmx[i]=nmx[i];\n\t}\n\tm=read(); while (m--) switch (rchar()) {\n\t\tcase 65: u=read()-1; write(query_hx(u,read()-1)); break;\n\t\tcase 67: u=read()-1; v=read()-1; modify_ft(u,v,read()); break;\n\t\tcase 80: u=read()-1; v=read()-1; modify_ad(u,v,read()); break;\n\t\tcase 81: u=read()-1; write(query_mx(u,read()-1)); break;\n\t\tdefault: break;\n\t}\n\tfwrite(fub,p2-fub,1,stdout); return 0;\n}\n```",
        "postTime": 1611557765,
        "uid": 54189,
        "name": "konjacq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4314 \u3010CPU\u76d1\u63a7\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u67d0\u4e00\u65e5\u6211\u540c\u5b66\u53eb\u6211\u505a\u8fd9\u9053\u9898\uff0c\u6211\u4e00\u770b\uff0c\u8fd9\u4e0d\u5c31\u677f\u5b50\u5417\uff1f\u8fd8\u9ed1\u7684\uff1f20\u5206\u949f\u6b3b\u6b3b\u6253\u5b8c\uff0c\u81ea\u4fe1\u63d0\u4ea4\u3002\u3002\u3002\u3002\u30020\u5206\n\n## \u9898\u610f\n\n\u9898\u610f\u5c31\u662f\u4e00\u6bb5\u5e8f\u5217\u6709``\u533a\u95f4\u52a0``\u3001``\u533a\u95f4\u8986\u76d6``\u3001``\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c``\u3001``\u67e5\u8be2\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c``\n\n\u6211\u7b2c\u4e00\u6b21\u505a\u7684\u601d\u8def\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n\n\u7528\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u6bcf\u6b21\u66f4\u65b0\u5b8c\u6700\u5927\u503c$maxn$\u540e\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u503c$maxh$\uff0c\u5373\uff1a\n\n$maxh=max(maxh,maxn)$\n\n\u7136\u9e45WA\u4e86\uff0c\u4e00\u5206\u90fd\u6ca1\u6709\u3002\u3002\u3002\n\n\u7136\u540e\u5728\u540c\uff08da\uff09\u5b66\uff08lao\uff09\u7684\u5e2e\u52a9\u4e0b\u6211\u660e\u767d\u4e86\u95ee\u9898\u6240\u5728\uff1a\n\n\u5728\u5bf9\u5927\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5bb9\u6613\u51fa\u73b0\u5386\u53f2\u6700\u5927\u503c\u4e22\u5931\u7684\u95ee\u9898\uff0c\u5373\u52a0\u4e86\u4e00\u4e2a\u5927\u503c\u5374\u53c8\u88ab\u5c0f\u503c\u8986\u76d6\u6389\n\n\u5bf9pushdown\u8fdb\u884c\u4e00\u5b9a\u4fee\u6539\u624d\u80fd\u8fc7\uff0c\u867d\u7136\u6211\u4e0d\u77e5\u9053\u600e\u4e48\u6539\uff08\u5c0f\u58f0\n\n\u8fd9\u91cc\u5c31\u4ecb\u7ecd\u4e00\u79cd\u53ef\u4ee5\u9632\u6b62\u4fe1\u606f\u6d41\u5931\u7684\u65b9\u5f0f\uff1a\u591a\u7ef4\u62a4\u4e24\u4e2a\u6807\u8bb0\uff08``\u533a\u95f4\u5386\u53f2\u6700\u5927\u52a0``\u3001``\u533a\u95f4\u5386\u53f2\u6700\u5927\u8986\u76d6``\uff09\n\n\u6bcf\u6b21\u4fee\u6539\u4ee5\u53ca\u4e0b\u653e\u6807\u8bb0\u90fd\u8981\u8fdb\u884c\u7ef4\u62a4\n\n\u5982\u679c\u6211\u4eec\u5199\u6210\u8fd9\u6837\uff1a\n\n+ \u533a\u95f4\u5de6\u3001\u53f3\u7aef\u7f16\u53f7\uff1a$l,r$\n+ \u533a\u95f4\u6700\u5927\u503c\uff1a$maxn$\n+ \u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\uff1a$maxh$\n+ \u533a\u95f4\u8986\u76d6\u6807\u8bb0\uff1a$tag1$\n+ \u533a\u95f4\u5386\u53f2\u6700\u5927\u8986\u76d6\uff1a$hc$\n+ \u533a\u95f4\u52a0\u6807\u8bb0\uff1a$tag2$\n+ \u533a\u95f4\u5386\u53f2\u6700\u5927\u52a0\uff1a$hp$\n\n\u90a3\u4e48\u5b83\uff08pushdown\uff09\u5c31\u662f\u8fd9\u6837\u6ef4\uff1a\n\n```cpp\nvoid pushdown(int id){\n\tif(t[id].l==t[id].r) return ;\n\tt[id<<1].maxh=max(t[id<<1].maxh,max(t[id<<1].maxn+t[id].hp,t[id].hc));\n\tt[id<<1|1].maxh=max(t[id<<1|1].maxh,max(t[id<<1|1].maxn+t[id].hp,t[id].hc));\n\tif(t[id<<1].tag1!=-INF) t[id<<1].hc=max(t[id<<1].hc,t[id<<1].tag1+t[id].hp);\n\telse t[id<<1].hp=max(t[id<<1].hp,t[id<<1].tag2+t[id].hp);\n\tif(t[id<<1|1].tag1!=-INF) t[id<<1|1].hc=max(t[id<<1|1].hc,t[id<<1|1].tag1+t[id].hp);\n\telse t[id<<1|1].hp=max(t[id<<1|1].hp,t[id<<1|1].tag2+t[id].hp);\n\tif(t[id].tag2){\n\t\tif(t[id<<1].tag1!=-INF) t[id<<1].tag1+=t[id].tag2;\n\t\telse t[id<<1].tag2+=t[id].tag2;\n\t\tif(t[id<<1|1].tag1!=-INF) t[id<<1|1].tag1+=t[id].tag2;\n\t\telse t[id<<1|1].tag2+=t[id].tag2;\n\t\tt[id<<1].maxn+=t[id].tag2,t[id<<1|1].maxn+=t[id].tag2;\n\t}\n\tif(t[id].tag1!=-INF){\n\t\tt[id<<1].maxn=t[id<<1].tag1=t[id].tag1;\n\t\tt[id<<1|1].maxn=t[id<<1|1].tag1=t[id].tag1;\n\t\tt[id<<1].tag2=0,t[id<<1|1].tag2=0;\n\t}\n\tt[id<<1].hp=max(t[id<<1].hp,t[id<<1].tag2);\n\tt[id<<1|1].hp=max(t[id<<1|1].hp,t[id<<1|1].tag2);\n\tt[id<<1].hc=max(t[id<<1].hc,max(t[id<<1].tag1,t[id].hc));\n\tt[id<<1|1].hc=max(t[id<<1|1].hc,max(t[id<<1|1].tag1,t[id].hc));\n\tt[id].hc=t[id].tag1=-INF;\n\tt[id].hp=t[id].tag2=0;\n}\n```\n\n\u8fd9\u91cc$-INF$\u548c$0$\u5206\u522b\u4ee3\u8868$tag1,hc$\u548c$tag2,hp$\u4e0d\u5b58\u5728\n\n\u5982\u679c\u8fd8\u662f\u4e0d\u80fd\u7406\u89e3\u5c31\u8bf7\u518d\u770b\u770b\u4e0a\u9762\u90a3\u6bb5\u4ee3\u7801\uff08\u56e0\u4e3a\u8fd9\u5c31\u662f\u96be\u70b9\uff09\n\n\u603b\u7684\u6765\u8bf4\u8fd9\u662f\u4e00\u9053\u601d\u7ef4\u91cf\u3001\u4ee3\u7801\u91cf\u517c\u5907\u7684\u597d\u9898\uff08\u849f\u84bb\u6211\u8c03\u4e86\u4e00\u4e0b\u5348\u3002\u3002\uff09\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(ElogT)$\uff0c\u7a33\u8fc7\uff01\n\n## \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#define N 100001\n#define INF 1ll<<31\n#define int long long\n#define rnt register int\nusing namespace std;\nchar s[10];\nint n,m,x,y,z,d[N];\nstruct node{int l,r,maxn,maxh,tag1/*+*/,tag2/*=*/,hp,hc;}t[N*4];\nvoid pushup(int id){\n\tt[id].maxn=max(t[id<<1].maxn,t[id<<1|1].maxn);\n\tt[id].maxh=max(t[id<<1].maxh,t[id<<1|1].maxh);\n}\nvoid build(int id,int l,int r){\n\tt[id].l=l,t[id].r=r,t[id].tag1=t[id].hc=-INF;\n\tif(l==r){\n\t\tt[id].maxh=t[id].maxn=d[l];\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(id<<1,l,mid);\n\tbuild(id<<1|1,mid+1,r);\n\tpushup(id);\n}\nvoid pushdown(int id){\n\tif(t[id].l==t[id].r) return ;\n\tt[id<<1].maxh=max(t[id<<1].maxh,max(t[id<<1].maxn+t[id].hp,t[id].hc));\n\tt[id<<1|1].maxh=max(t[id<<1|1].maxh,max(t[id<<1|1].maxn+t[id].hp,t[id].hc));\n\tif(t[id<<1].tag1!=-INF) t[id<<1].hc=max(t[id<<1].hc,t[id<<1].tag1+t[id].hp);\n\telse t[id<<1].hp=max(t[id<<1].hp,t[id<<1].tag2+t[id].hp);\n\tif(t[id<<1|1].tag1!=-INF) t[id<<1|1].hc=max(t[id<<1|1].hc,t[id<<1|1].tag1+t[id].hp);\n\telse t[id<<1|1].hp=max(t[id<<1|1].hp,t[id<<1|1].tag2+t[id].hp);\n\tif(t[id].tag2){\n\t\tif(t[id<<1].tag1!=-INF) t[id<<1].tag1+=t[id].tag2;\n\t\telse t[id<<1].tag2+=t[id].tag2;\n\t\tif(t[id<<1|1].tag1!=-INF) t[id<<1|1].tag1+=t[id].tag2;\n\t\telse t[id<<1|1].tag2+=t[id].tag2;\n\t\tt[id<<1].maxn+=t[id].tag2,t[id<<1|1].maxn+=t[id].tag2;\n\t}\n\tif(t[id].tag1!=-INF){\n\t\tt[id<<1].maxn=t[id<<1].tag1=t[id].tag1;\n\t\tt[id<<1|1].maxn=t[id<<1|1].tag1=t[id].tag1;\n\t\tt[id<<1].tag2=0,t[id<<1|1].tag2=0;\n\t}\n\tt[id<<1].hp=max(t[id<<1].hp,t[id<<1].tag2);\n\tt[id<<1|1].hp=max(t[id<<1|1].hp,t[id<<1|1].tag2);\n\tt[id<<1].hc=max(t[id<<1].hc,max(t[id<<1].tag1,t[id].hc));\n\tt[id<<1|1].hc=max(t[id<<1|1].hc,max(t[id<<1|1].tag1,t[id].hc));\n\tt[id].hc=t[id].tag1=-INF;\n\tt[id].hp=t[id].tag2=0;\n}\nint query(int id,int l,int r){\n\tpushdown(id);\n\tif(t[id].l==l && t[id].r==r) return t[id].maxn;\n\tint mid=(t[id].l+t[id].r)>>1;\n\tif(r<=mid) return query(id<<1,l,r);\n\telse if(l>mid) return query(id<<1|1,l,r);\n\telse return max(query(id<<1,l,mid),query(id<<1|1,mid+1,r));\n}\nint ask(int id,int l,int r){//query_history\n\tpushdown(id);\n\tif(t[id].l==l && t[id].r==r) return t[id].maxh;\n\tint mid=(t[id].l+t[id].r)>>1;\n\tif(r<=mid) return ask(id<<1,l,r);\n\telse if(l>mid) return ask(id<<1|1,l,r);\n\telse return max(ask(id<<1,l,mid),ask(id<<1|1,mid+1,r));\n}\nvoid plus(int id,int l,int r,int val){\n\tpushdown(id);\n\tif(t[id].l==l && t[id].r==r){\n\t\tt[id].hp+=val;t[id].tag2+=val;t[id].maxn+=val;\n\t\tt[id].maxh=max(t[id].maxh,t[id].maxn);\n\t\treturn ;\n\t}\n\tint mid=(t[id].l+t[id].r)>>1;\n\tif(r<=mid) plus(id<<1,l,r,val);\n\telse if(l>mid) plus(id<<1|1,l,r,val);\n\telse{plus(id<<1,l,mid,val);plus(id<<1|1,mid+1,r,val);}\n\tpushup(id);\n}\nvoid change(int id,int l,int r,int val){\n\tpushdown(id);\n\tif(t[id].l==l && t[id].r==r){\n\t\tt[id].hc=t[id].tag1=t[id].maxn=val;\n\t\tt[id].maxh=max(t[id].maxh,t[id].maxn);\n\t\treturn ;\n\t}\n\tint mid=(t[id].l+t[id].r)>>1;\n\tif(r<=mid) change(id<<1,l,r,val);\n\telse if(l>mid) change(id<<1|1,l,r,val);\n\telse{change(id<<1,l,mid,val);change(id<<1|1,mid+1,r,val);}\n\tpushup(id);\n}\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(rnt i=1;i<=n;i=-~i) scanf(\"%lld\",&d[i]);\n\tbuild(1,1,n);\n\tscanf(\"%lld\",&m);\n\tfor(rnt i=1;i<=m;i=-~i){\n\t\tscanf(\"\\n%s%lld%lld\",s,&x,&y);\n\t\tswitch(s[0]){\n\t\t\tcase 'Q':{\n\t\t\t\tprintf(\"%lld\\n\",query(1,x,y));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'A':{\n\t\t\t\tprintf(\"%lld\\n\",ask(1,x,y));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'P':{\n\t\t\t\tscanf(\"%lld\",&z);\n\t\t\t\tplus(1,x,y,z);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'C':{\n\t\t\t\tscanf(\"%lld\",&z);\n\t\t\t\tchange(1,x,y,z);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n## \u540e\u8bb0\n\n\u6bd2\u7624\u7801\u98ce\u4e0d\u559c\u52ff\u55b7\uff01\n\n[![](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2921431843,3149119026&fm=26&gp=0.jpg)](https://www.luogu.org/blog/oneJURUO/)",
        "postTime": 1570622520,
        "uid": 118382,
        "name": "torque",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4314 \u3010CPU\u76d1\u63a7\u3011"
    },
    {
        "content": "\n\u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4\u53ca\u5176\u5404\u4e2a\u5143\u7d20\u7684\u521d\u503c\uff0c\u8981\u6c42\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n1.\u533a\u95f4\u52a0\n\n2.\u533a\u95f4\u8d4b\u503c\n\n3.\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\n\n4.\u67e5\u8be2\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\n\n\u5206\u6790\uff1a\n\n\u5bb9\u6613\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u7ec6\u601d\u6076\u6781\uff08\u4ed4\u7ec6\u60f3\u60f3\u6076\u5fc3\u5230\u4e86\u6781\u70b9\uff09\u7684\u662f\uff0c\u6700\u540e\u67e5\u8be2\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\u7684\u64cd\u4f5c\u3002\n\n\u5982\u679c\u53ea\u8bb0\u5f55\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\u663e\u7136\u4e0d\u80fd\u4e0b\u653e\uff0c\u5982\u679c\u5355\u7eaf\u66f4\u65b0\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u8d4b\u503c\u6700\u5927\u503c\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5386\u53f2\u6700\u5927\u503c\u66f4\u65b0\u4e0d\u53ca\u65f6\u7684\u60c5\u51b5\u3002\u5982\u5148\u8d4b\u503c\u5f88\u5927\u503c\uff0c\u672a\u6765\u5f97\u53ca\u4e0b\u653e\uff0c\u53c8\u8d4b\u503c\u5f88\u5c0f\uff0c\u5bfc\u81f4\u5b50\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\u4e0d\u80fd\u66f4\u65b0\u3002\u53c8\u5982\u5982\u679c\u533a\u95f4\u52a0\u53ea\u53d6\u6700\u5927\u503c\uff0c\u53ef\u80fd\u4f1a\u53ea\u53d6\u6700\u5927\u503c\uff0c\u5bfc\u81f4\u5b9e\u9645\u4e0a\u5ffd\u89c6\u4e86\u4e00\u4e9b\u4f7f\u533a\u95f4\u52a0\u53d8\u5c0f\u7684\u64cd\u4f5c\u3002\n\n\u3002\u3002\u3002\u3002\uff08\u6b64\u5904\u7701\u7565\u82e5\u5343\u5b57\uff09\n\n\u6240\u4ee5\u6211\u4eec\u8bb0\u5f55\u5982\u4e0b\u51e0\u70b9\uff1a\n\n1.mx(x)\u5f53\u524d\u533a\u95f4\u6700\u5927\u503c\n\n2.hx(x)\u5386\u53f2\u533a\u95f4\u6700\u5927\u503c\n\n3.ad(x)\u5f53\u524d\u533a\u95f4\u52a0\n\n4.ha(x)\u5386\u53f2\u6700\u5927\u533a\u95f4\u52a0\n\n5.ch(x)\u5f53\u524d\u533a\u95f4\u8d4b\u503c\n\n6.hc(x)\u5386\u53f2\u6700\u5927\u533a\u95f4\u8d4b\u503c\n\n\u6ce8\u610f \uff1a\n\n\u8fd9\u91cc\u6211\u4eec\u6240\u8c13\u7684ha,hc\u662f\u6307\u5728\u4e0a\u4e00\u6b21pushdown\u4e4b\u540e\uff0c\u671f\u95f4\u8fdb\u884c\u7684\u64cd\u4f5c\u4e2d\u7684\u6700\u5927\u503c\u3002\u662f\u53ef\u4ee5\u6e05\u96f6\u7684\uff0c\u4e0d\u50cfhx\u3002\n\n\u521d\u503c\uff1aha=ad=0,ch=hc=-inf\u3002\n\n\u56e0\u4e3a\u6bcf\u6b21\u90fd\u5148\u8fdb\u884cpushdown\uff0c\u6240\u4ee5ha\u3001hc\u76f4\u63a5\u968f\u7740ad\u3001ch\u66f4\u65b0\u3002\n\n\u6ce8\u610f\u7684\u662fpushdown\u4e2d\u7684\u8bb8\u591a\u8ba8\u8bba\uff0c\u81ea\u5df1\u5206\u6790\u6e05\u695a\u3002\n\n\u5176\u5b9e\u6bcf\u6b21\u90fdpushdown\u662f\u5f88\u6162\u7684\uff0c\u4f1atle\u4e24\u4e2a\u70b9\u3002\n\n\u7136\u540e\u5c31\u628a\u533a\u95f4\u5185\u7684l\u3001r\u4e0d\u8bb0\u5f55\u4e86\uff0c\u7adf\u7136\u4e0d\u5f00O2\u6c34\u8fc7\u3002\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=100000+10;\nconst ll inf=1e13;\nint root,n,e;\nll a[N];\nint cc;\nstruct node{\n    ll add,ch;\n    ll mx,hx;\n    ll had,hch;//\u4e00\u6bb5\u65f6\u95f4\u5185\u6700\u503c  \n    #define ad(x) t[x].add\n    #define ch(x) t[x].ch\n    #define mx(x) t[x].mx\n    #define hx(x) t[x].hx\n    #define ha(x) t[x].had\n    #define hc(x) t[x].hch\n    #define l(x) t[x].l\n    #define r(x) t[x].r\n}t[4*N];\nvoid pushup(int x)\n{\n    int s1=x<<1,s2=x<<1|1;\n    mx(x)=max(mx(s1),mx(s2));\n    hx(x)=max(hx(s1),hx(s2));\n}\nvoid build(int x,int L,int R)\n{\n    if(L==R)\n    {\n        ad(x)=0;ch(x)=-inf;ha(x)=0;hc(x)=-inf;\n        mx(x)=hx(x)=a[L];\n        return;\n    }\n    int mid=(L+R)>>1;\n    ad(x)=0;ch(x)=-inf;ha(x)=0;hc(x)=-inf;\n    mx(x)=hx(x)=-inf;\n    build(x<<1,L,mid);\n    build(x<<1|1,mid+1,R);\n    pushup(x);\n}\nvoid pushdown(int x)\n{\n    for(int i=0;i<=1;i++)\n    {\n        int s=x<<1|i;\n        hx(s)=max(hx(s),max(mx(s)+ha(x),hc(x)));\n        if(ch(s)!=-inf) hc(s)=max(hc(s),ch(s)+ha(x));\n        else ha(s)=max(ha(s),ad(s)+ha(x));\n        if(ad(x))\n        {\n            if(ch(s)!=-inf) ch(s)+=ad(x);\n            else ad(s)+=ad(x);\n            mx(s)+=ad(x);\n        }\n        if(ch(x)!=-inf)\n        {\n            mx(s)=ch(s)=ch(x);\n            ad(s)=0;\n        }\n        hc(s)=max(hc(s),max(ch(s),hc(x)));\n        ha(s)=max(ha(s),ad(s));\t\n    }\n    hc(x)=-inf;\n    ad(x)=0;ch(x)=-inf;ha(x)=0;\n}\nvoid add(int x,int l,int r,int L,int R,ll c)\n{\n    if(l!=r)pushdown(x);\n    if(L<=l&&r<=R)\n    {\n        ad(x)+=c;ha(x)+=c;\n        mx(x)+=c;hx(x)=max(mx(x),hx(x));\n        return;\n    }\n    \n    int mid=(l+r)>>1;\n    if(L<=mid) add(x<<1,l,mid,L,R,c);\n    if(R>mid) add(x<<1|1,mid+1,r,L,R,c);\n    pushup(x);\n}\nvoid chan(int x,int l,int r,int L,int R,ll c)\n{\n    if(l!=r)pushdown(x);\n    if(L<=l&&r<=R)\n    {\n        ch(x)=c,mx(x)=c;hc(x)=c;\n        hx(x)=max(hx(x),mx(x));\n        return;\n    }\t\n    int mid=(l+r)>>1;\n    if(L<=mid) chan(x<<1,l,mid,L,R,c);\n    if(R>mid) chan(x<<1|1,mid+1,r,L,R,c);\n    pushup(x);\n}\nll qx(int x,int l,int r,int L,int R)\n{\n    if(l!=r)pushdown(x);\n    if(L<=l&&r<=R)\n    {\n        return mx(x);\n    }\n    int mid=(l+r)>>1;\n    ll res=-inf;\n    if(L<=mid) res=max(res,qx(x<<1,l,mid,L,R));\n    if(R>mid) res=max(res,qx(x<<1|1,mid+1,r,L,R));\n    return res;\n}\nll qh(int x,int l,int r,int L,int R)\n{\n    if(l!=r)pushdown(x);\n    if(L<=l&&r<=R)\n    {\n        return hx(x);\n    }\n    int mid=(l+r)>>1;\n    ll res=-inf;\n    if(L<=mid) res=max(res,qh(x<<1,l,mid,L,R));\n    if(R>mid) res=max(res,qh(x<<1|1,mid+1,r,L,R));\n    return res;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n    root=1;\n    build(1,1,n);\n    scanf(\"%d\",&e);\n    char q;\n    int x,y;\n    ll z;\n    while(e)\n    {\n        cin>>q;\n        if(q=='Q')\n        {\n            scanf(\"%d%d\",&x,&y);\n            printf(\"%lld\\n\",qx(root,1,n,x,y));\t\n        }\n        else if(q=='A')\n        {\n            \n            scanf(\"%d%d\",&x,&y);\n            printf(\"%lld\\n\",qh(root,1,n,x,y));\n        }\n        else if(q=='P')\n        {\n            scanf(\"%d%d%lld\",&x,&y,&z);\n            add(root,1,n,x,y,z);\n        }\n        else{\n            scanf(\"%d%d%lld\",&x,&y,&z);\n            chan(root,1,n,x,y,z);\n        }\n        e--;\n    }\n    return 0;\n}\n```\n",
        "postTime": 1525514435,
        "uid": 56672,
        "name": "\u67ab\u6797\u665a",
        "ccfLevel": 9,
        "title": "Tyvj 1518 CPU\u76d1\u63a7\u2014\u2014\u6781\u6076\u7ebf\u6bb5\u6811"
    },
    {
        "content": "- \u672c\u9898\u624d\u662f\u7ef4\u62a4\u5386\u53f2\u533a\u95f4\u6700\u5927\u503c\u7684\u6a21\u677f\u597d\u5427\u3002\n- \u6279\u8bc4\u67d0\u9053\u4e8c\u5408\u4e00\u7684\u4ee4\u4eba\u53d1\u6307\u7684\u884c\u4e3a\u3002\n\n**\u9898\u610f**\n- [\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P4314)\u3002\n- \u9898\u610f\uff1a\u7ef4\u62a4\u6570\u5217\u4f7f\u4e4b\u652f\u6301\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u8986\u76d6\uff0c\u533a\u95f4\u6700\u5927\u503c\u67e5\u8be2\uff0c\u533a\u95f4\u5386\u53f2\u6700\u5927\u503c\u67e5\u8be2\u3002\n- \u5982\u679c\u6ca1\u6709\u540e\u4e00\u4e2a\u8fd9\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6bb5\u6811\u3002\n\n**\u5206\u6790**\n- \u6211\u4eec\u8003\u8651\u53ef\u5426\u7528\u61d2\u6807\u8bb0\u5b9e\u73b0\uff1a\u5728\u533a\u95f4\u52a0\u7684\u65f6\u5019\uff0c\u88ab\u5b8c\u6574\u8986\u76d6\u5230\u7684\u533a\u95f4\uff0c\u5176\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u4e0d\u6539\u53d8\uff0c\u5728\u533a\u95f4\u8986\u76d6\u7684\u65f6\u5019\uff0c\u88ab\u5b8c\u6574\u8986\u76d6\u7684\u533a\u95f4\uff0c\u5176\u6700\u5927\u503c\u786e\u5b9a\u3002\n- \u90a3\u4e48\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c $Mx$\uff0c\u5386\u53f2\u6700\u5927\u503c $Hs$\uff0c\u52a0\u548c\u61d2\u6807\u8bb0 $Ad$\uff0c\u8986\u76d6\u61d2\u6807\u8bb0 $Cv$\uff08\u8fd9\u91cc\u8fd8\u8981\u52a0\u4e00\u4e2a\u6570\u7ec4\u5224\u65ad\u61d2\u6807\u8bb0\u662f\u5426\u5b58\u5728\uff09\u3002\n- \u90a3\u4e48\u4e0a\u4f20\u5408\u5e76\u81ea\u7136\u597d\u529e\uff0c\u4e0b\u4f20\u65f6\u5e94\u8be5\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002\n- \u5417\uff1f\n- \u54c8\u54c8\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u5c0f\u5751\u554a\uff0c\u5982\u679c\u8fd9\u6837\u505a\u7684\u8bdd\uff0c\u6807\u8bb0\u5148\u589e\u540e\u51cf\uff0c\u90a3\u4e48\u4e0b\u4f20\u7684\u8bdd\u513f\u5b50\u5c31\u6ca1\u6709\u66f4\u65b0\u554a\u3002\n- \u6240\u4ee5\u771f\u6b63\u6b63\u786e\u7684\u65b9\u6cd5\u662f\u8fde\u533a\u95f4\u52a0\u548c\u533a\u95f4\u8986\u76d6\u7684\u5927\u5c0f\u4e5f\u5f97\u8bb0\u4e0b\u5728\u64cd\u4f5c\u53cd\u590d\u5730\u91cd\u53e0\u4e2d\u51fa\u73b0\u7684\u6700\u5927\u7684\u90a3\u4e2a\uff08\u4e5f\u5c31\u662f\u5386\u53f2\u6807\u8bb0\uff09\u3002\n- \u4e0d\u8fc7\u4f5c\u8005\u5728\u5b66\u4e60\u5230\u8fd9\u91cc\u7684\u65f6\u5019\u4e0d\u7531\u5f97\u4ea7\u751f\u4e86\u4e00\u4e2a\u7591\u95ee\u554a\uff0c\u5728\u66f4\u65b0\u7684\u65f6\u5019\u4e0d\u7ba1\u4e09\u4e03\u4e8c\u5341\u4e00\u76f4\u63a5\u4e0b\u4f20\u61d2\u6807\u8bb0\u4e0d\u5c31\u597d\u4e86\u5417\uff1f\n- emmm\uff0c\u4ed4\u7ec6\u601d\u8003\u53d1\u73b0\u8fd8\u662f\u4e0d\u884c\uff0c\u56e0\u4e3a\u6bcf\u6b21\u4e0b\u4f20\u4e00\u4e2a\u7684\u65f6\u5019\uff0c\u6574\u4e2a\u5b50\u6811\u90fd\u4f1a\u4e0b\u4f20\uff0c\u590d\u6742\u5ea6\u4f1a\u5f92\u589e\u4e00\u4e2a $\\log$\uff08\u6211\u53ef\u4e0d\u60f3\u88ab\u5361\u7206\uff09\uff08\u4f20\u7edf\u7684\u65b9\u6cd5\u5219\u53ef\u4ee5\u5c06\u591a\u4f59\u7684\u64cd\u4f5c\u641e\u4e00\u8d77\uff09\u3002\n\n**\u5b9e\u73b0\u7ec6\u8282**\n- \u540c\u6837\u7684\uff0c\u533a\u95f4\u8986\u76d6\u5bf9\u533a\u95f4\u52a0\u4e5f\u4f1a\u6709\u5f71\u54cd\uff0c\u4f5c\u8005\u91c7\u7528\u7684\u662f\u4f18\u5148\u8fdb\u884c\u533a\u95f4\u52a0\uff0c\u5176\u6b21\u8fdb\u884c\u533a\u95f4\u8986\u76d6\u7684\u65b9\u6cd5\u3002\n- \u8fd8\u6709\u4e00\u4e2a\u5c0f\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u8986\u76d6\uff0c\u5386\u53f2\u6700\u5927\u533a\u95f4\u52a0\uff0c\u5386\u53f2\u6700\u5927\u533a\u95f4\u8986\u76d6\u5728\u95f2\u7f6e\u7684\uff08\u5e76\u6ca1\u6709\u64cd\u4f5c\uff09\u65f6\u5019\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u7684\uff1f\u52a0\u548c\u5728\u95f2\u7f6e\u7684\u65f6\u5019\u663e\u7136\u5e94\u8be5\u662f $0$\uff0c\u4f46\u8986\u76d6\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u6807\u8bb0\u7ed9\u5b83\uff0c\u5728\u4e0d\u7528\u7684\u65f6\u5019\u5c06\u5176\u7f6e\u4e3a $-\\infty$\u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/4zleu418)\u3002\n- \u4f5c\u8005 $1A$ \u5566\uff01\n\n**\u603b\u7ed3**\n- \u61d2\u6807\u8bb0\u9700\u8981\u4ed4\u7ec6\u63a8\u6572\uff0c\u8003\u8651\u4efb\u4f55\u64cd\u4f5c\u4e4b\u95f4\u7684\u4e92\u76f8\u5f71\u54cd\u548c\u91cd\u590d\u64cd\u4f5c\u7684\u5f71\u54cd\u3002",
        "postTime": 1639392490,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u6570\u636e\u7ed3\u6784\u3011P4314"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u601d\u8def\uff1a\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4$\\mathrm{add,set}$\u7684$tag$,\u7ef4\u62a4\u6700\u5927\u503c$max$\u548c\u5386\u53f2\u6700\u5927\u503c$Max$,\u7136\u540e\u50cf\u6b63\u5e38\u7684\u7ebf\u6bb5\u6811\u4e00\u6837\u7ef4\u62a4\n\n\u7136\u540e\u4f60\u60ca\u8bb6\u7684\u53d1\u73b0\u4f60\u53ea\u62ff\u5230\u4e8c\u5341\u5206\uff08\u53ea\u6709$Q$\u7684\u90e8\u5206\u5206\uff09\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u53d1\u73b0\u6709\u4e9b$tag$\uff0c\u4ed6\u8fd8\u6ca1\u6709\u6765\u5f97\u53ca\u88ab\u66f4\u65b0\u5c31\u88ab\u8986\u76d6\u4e86..\u800c\u8fd9\u4e9b$tag$\u672c\u6765\u80fd~~\u6539\u53d8\u4e16\u754c~~\u66f4\u65b0\u7b54\u6848\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e24\u4e2a$tag$:$\\mathrm{Add,Set}$\u8868\u793a\u8be5\u8282\u70b9\u4ece\u4e0a\u6b21\u4e0b\u653e\u5230\u76ee\u524d\u7684\u6700\u5927$add$\u548c$set$\u503c\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u4e50\u7684\u7528\u8fd9\u4e9b$tag$\u6765\u7ef4\u62a4\u7b54\u6848\u4e86\n\n`Code:`\n\n\n``` cpp\n#include <bits/stdc++.h>\n\n#define R register\n#define ll long long\n#define sum(a, b, mod) ((a + b) % mod)\n#define checkmax(a, b) ((a) = ((a) < (b)) ? (b) : (a))\n\nconst int MaxN = 1e5 + 10;\nconst int inf = 0x3f3f3f3f;\n\nstruct node\n{\n    int l, r;\n    int Max, Add, Set;\n    int max, add, set;\n};\n\nint n, m, a[MaxN];\n\nstruct SegmentTree\n{\n    node t[MaxN << 2];\n    inline void pushup(int id)\n    {\n        t[id].max = std::max(t[id << 1].max, t[id << 1 | 1].max);\n        t[id].Max = std::max(t[id << 1].Max, t[id << 1 | 1].Max);\n    }\n    inline void build(int id, int l, int r)\n    {\n        t[id].l = l, t[id].r = r, t[id].set = t[id].Set = -inf;\n        if (l == r)\n        {\n            t[id].max = t[id].Max = a[(l + r) >> 1];\n            return;\n        }\n        int mid = (l + r) >> 1;\n        build(id << 1, l, mid);\n        build(id << 1 | 1, mid + 1, r);\n        pushup(id);\n    }\n    inline void checksum(int id, int add, int Add)\n    {\n        if (t[id].set != -inf)\n        {\n            checkmax(t[id].Set, t[id].set + Add);\n            checkmax(t[id].Max, t[id].max + Add);\n            t[id].set += add, t[id].max += add;\n        }\n        else\n        {\n            checkmax(t[id].Add, t[id].add + Add);\n            checkmax(t[id].Max, t[id].max + Add);\n            t[id].add += add, t[id].max += add;\n        }\n    }\n    inline void checkset(int id, int set, int Set)\n    {\n        checkmax(t[id].Set, Set);\n        checkmax(t[id].Max, Set);\n        t[id].set = set, t[id].max = set;\n    }\n    inline void pushdown(int id)\n    {\n        checksum(id << 1, t[id].add, t[id].Add), checksum(id << 1 | 1, t[id].add, t[id].Add), t[id].add = t[id].Add = 0;\n        if (t[id].set != -inf)\n        {\n            checkset(id << 1, t[id].set, t[id].Set), checkset(id << 1 | 1, t[id].set, t[id].Set);\n            t[id].set = t[id].Set = -inf;\n        }\n    }\n    void add(int id, int l, int r, int val)\n    {\n        if (t[id].l > r || t[id].r < l)\n            return;\n        if (l <= t[id].l && t[id].r <= r)\n        {\n            checksum(id, val, val);\n            return;\n        }\n        pushdown(id), add(id << 1, l, r, val), add(id << 1 | 1, l, r, val), pushup(id);\n    }\n    void set(int id, int l, int r, int val)\n    {\n        if (t[id].l > r || t[id].r < l)\n            return;\n        if (l <= t[id].l && t[id].r <= r)\n        {\n            checkset(id, val, val);\n            return;\n        }\n        pushdown(id), set(id << 1, l, r, val), set(id << 1 | 1, l, r, val), pushup(id);\n    }\n    int query_max(int id, int l, int r)\n    {\n        if (t[id].l > r || t[id].r < l)\n            return -inf;\n        if (l <= t[id].l && t[id].r <= r)\n            return t[id].max;\n        pushdown(id);\n        return std::max(query_max(id << 1, l, r), query_max(id << 1 | 1, l, r));\n    }\n    int query_Max(int id, int l, int r)\n    {\n        if (t[id].l > r || t[id].r < l)\n            return -inf;\n        if (l <= t[id].l && t[id].r <= r)\n            return t[id].Max;\n        pushdown(id);\n        return std::max(query_Max(id << 1, l, r), query_Max(id << 1 | 1, l, r));\n    }\n} T;\n\nchar get()\n{\n    char ch = getchar();\n    while (ch > 'Z' || ch < 'A')\n        ch = getchar();\n    return ch;\n}\n\ninline int read()\n{\n    int x = 0, f = 1;\n    char ch = getchar();\n    while (ch > '9' || ch < '0')\n    {\n        if (ch == '-')\n            f = 0;\n        ch = getchar();\n    }\n    while (ch <= '9' && ch >= '0')\n        x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    return f ? x : (-x);\n}\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++)\n        scanf(\"%d\", &a[i]);\n    T.build(1, 1, n);\n    scanf(\"%d\", &m);\n    while (m--)\n    {\n        char ch = get();\n        int x = read(), y = read(), z;\n        if (ch == 'Q')\n            printf(\"%d\\n\", T.query_max(1, x, y));\n        else if (ch == 'A')\n            printf(\"%d\\n\", T.query_Max(1, x, y));\n        else if (ch == 'P')\n            z = read(), T.add(1, x, y, z);\n        else\n            z = read(), T.set(1, x, y, z);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1569580511,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4314 \u3010CPU\u76d1\u63a7\u3011"
    },
    {
        "content": "**\u6211i207M\u7684\u7ebf\u6bb5\u6811\u6c38\u4e0d\u4e3a\u5974\uff01**\n\n\u56e0\u4e3a\u672c\u4eba\u5199\u7ebf\u6bb5\u6811\u6709\u4e00\u4e9b\u5947\u602a\u7684\u4e60\u60ef\uff0c\u6211\u7684\u54f2\u5b66\u662f\u8fd9\u6837\u7684\uff1a\u4e00\u4e2a\u70b9\u6709lazy\u6807\u8bb0\uff0c\u8868\u793a\u5b83\u81ea\u5df1\u7684\u4fe1\u606f\u8fd8\u6ca1\u6709\u88ab\u66f4\u65b0\u3002\u901a\u5e38\u7684\u5199\u6cd5\u662f\u201c\u5df2\u7ecf\u88ab\u66f4\u65b0\uff0c\u4f46\u5b50\u6811\u672a\u66f4\u65b0\u201d\n\n\u4f46\u662f\u505a\u8fd9\u9053\u9898\u65f6\uff0c\u60f3\u641c\u4e00\u641c\u9898\u89e3\uff0c\u53d1\u73b0\u90fd\u4e0d\u662f\u6211\u7684\u54f2\u5b66\uff0c\u770b\u4e0d\u4e0b\u53bb\u3002\u4e8e\u662f\u53ea\u80fd\u786c\u7740\u5934\u76ae\u81ea\u5df1\u7422\u78e8\uff0c\u603b\u7b97\u662f\u5199\u51fa\u6765\u4e86\uff0c\u8dd1\u5f97\u8fd8\u633a\u5feb\u3002\u4e8e\u662f\u53d1\u4e00\u7bc7\u9898\u89e3\uff0c\u770b\u770b\u6709\u6ca1\u6709\u548c\u6211\u4e00\u6837\u7684\u7ebf\u6bb5\u6811\u54f2\u5b66\u73a9\u5bb6\u3002\n\n\u63a8\u8350\u5927\u5bb6\u5199\u8fd9\u9053\u9898\u65f6\uff0c\u5148\u628a\u4e0d\u5e26A\u64cd\u4f5c\u7684\u5199\u4e00\u904d\uff0c\u7136\u540e\u518d\u6dfb\u52a0A\u64cd\u4f5c\uff0c~~\u4e0d\u7136Q\u90fdWA\u4e86A\u8fd8\u600e\u4e48\u5bf9~~\n\n\u8fd9\u6837\u5199\u6709\u4e00\u4e2a\u597d\u5904\uff1a\u4e00\u4e2a\u8282\u70b9\u53ea\u4f1a\u6709\u8986\u76d6\u6216\u52a0\u6cd5\u4e2d\u4e00\u79cd\u6807\u8bb0\u3002\n\n\u5c31\u4e13\u95e8\u8bf4\u4e00\u4e0bhistory\u64cd\u4f5c\u5427\uff1a\n\nhcg(history_change)\uff1a\u4e0b\u653e\u548c\u666e\u901achange\u6807\u8bb0\u4e0b\u653e\u7c7b\u4f3c\uff0c\u76f4\u63a5\u66f4\u65b0\u3002\n\nhad(history_add)\uff1a\u9996\u5148\uff0c\u6211\u4eec\u8981\u660e\u767d\u4e00\u4e2a\u8282\u70b9\u7684history\u6807\u8bb0\u548c\u6b63\u5e38\u6807\u8bb0\u662f\u201c\u5e76\u8054\u201d\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u4e0d\u4f1a\u4e92\u76f8\u5f71\u54cd\u3002\n\n\u9996\u5148\u7528had\u53bb\u66f4\u65b0hmx(history_max)\uff0c\u7136\u540e\u8003\u8651\u4e0b\u653e\uff1a\u5206\u591a\u79cd\u60c5\u51b5\uff1a\n\n1. \u513f\u5b50\u7684\u6807\u8bb0\u7c7b\u578b\u662f\u8986\u76d6\uff1ahad\u4e0d\u53bb\u66f4\u65b0\u513f\u5b50\u7684had\uff0c\u5426\u5219\u65f6\u95f4\u9519\u4e71\u3002\u7528lcg(lazy_change)+had\u66f4\u65b0hcg\u3002\n\n2. \u4e0d\u7136\uff0c\u5c31\u7528lad(lazy_add)+had\u66f4\u65b0had\u3002\n\n------------------\n\n\u4ee3\u7801\u5c31\u653e\u51e0\u4e2a\u4f8b\u5b50\u5427\uff0c\u5176\u4ed6\u7684\u90fd\u80fd\u4eff\u5199\u51fa\u6765\u3002\n\n\u4e0d\u5f00O2:2400ms\uff1b\u5f00O2:1000ms\n\n```cpp\nvoid up(int x)\n{\n\tmx[x]=max(mx[ls],mx[rs]);\n\thmx[x]=max(hmx[ls],hmx[rs]);\n}\nvoid build(int x,int l,int r)\n{\n\thcg[x]=lcg[x]=-inf;\n\tif(l==r)\n\t{\n\t\thmx[x]=mx[x]=chu[l];\n\t\treturn;\n\t}\n\tgm;\n\tbuild(ls,l,mid), build(rs,mid+1,r);\n\tup(x);\n}\nvoid down(int x)\n{\n\tif(hcg[x]!=-inf)\n\t{\n\t\thmx[x]=max(hcg[x],hmx[x]);\n\t\tif(rs<M)\n\t\t{\n\t\t\thcg[ls]=max(hcg[x],hcg[ls]),hcg[rs]=max(hcg[x],hcg[rs]);\n\t\t}\n\t\thcg[x]=-inf;\n\t}\n\tif(had[x])\n\t{\n\t\thmx[x]=max(mx[x]+had[x],hmx[x]);\n\t\tif(rs<M)\n\t\t{\n\t\t\tif(lcg[ls]!=-inf) hcg[ls]=max(lcg[ls]+had[x],hcg[ls]);\n\t\t\telse had[ls]=max(lad[ls]+had[x],had[ls]);\n\t\t\tif(lcg[rs]!=-inf) hcg[rs]=max(lcg[rs]+had[x],hcg[rs]);\n\t\t\telse had[rs]=max(lad[rs]+had[x],had[rs]);\n\t\t}\n\t\thad[x]=0;\n\t}\n\tif(lcg[x]!=-inf)\n\t{\n\t\tmx[x]=lcg[x];\n\t\tif(rs<M)\n\t\t{\n\t\t\tlcg[ls]=lcg[rs]=lcg[x];\n\t\t\tlad[ls]=0,lad[rs]=0;\n\t\t}\n\t\tlcg[x]=-inf;\n\t}\n\telse if(lad[x])\n\t{\n\t\tmx[x]+=lad[x];\n\t\tif(rs<M)\n\t\t{\n\t\t\tif(lcg[ls]!=-inf) lcg[ls]+=lad[x],hcg[ls]=max(lcg[ls],hcg[ls]);\n\t\t\telse lad[ls]+=lad[x];\n\t\t\tif(lcg[rs]!=-inf) lcg[rs]+=lad[x],hcg[rs]=max(lcg[rs],hcg[rs]);\n\t\t\telse lad[rs]+=lad[x];\n\t\t}\n\t\tlad[x]=0;\n\t}\n}\nint askmax(int x,int l,int r,int ql,int qr)\n{\n\tdown(x);\n\tif(ql<=l&&r<=qr)\n\t{\n\t\treturn mx[x];\n\t}\n\tgm; int res=-inf;\n\tif(ql<=mid) res=askmax(ls,l,mid,ql,qr);\n\tif(qr>mid) res=max(askmax(rs,mid+1,r,ql,qr),res);\n\treturn res;\n}\nvoid add(int x,int l,int r,int ql,int qr,int k)\n{\n\tdown(x);\n\tif(ql<=l&&r<=qr)\n\t{\n\t\tlad[x]+=k;\n\t\thad[x]=max(lad[x],had[x]);\n\t\tdown(x);\n\t\treturn;\n\t}\n\tgm;\n\tif(ql<=mid) add(ls,l,mid,ql,qr,k);\n\telse down(ls);\n\tif(qr>mid) add(rs,mid+1,r,ql,qr,k);\n\telse down(rs);\n\tup(x);\n}\n```\n\n----------------\n\n\u53cb\u60c5\u8d60\u9001\u4e00\u79cd\u65b9\u6cd5\uff1a\n\n\u548c GXZlegend \u7684\u505a\u6cd5\u7c7b\u4f3c\u3002\u60f3\u5b66\u4e60\u8fd9\u79cd\u505a\u6cd5\u7684\u53ef\u4ee5\u53bb\u5199UOJ#164\n\n\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u7684\u6807\u8bb0\u5f62\u5982$(a,b)$\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u7684\u771f\u5b9e\u503c\u662f$max(x+a,b)$\uff0c\u8fd9\u6837\u52a0\u6cd5\u5c31\u662f$(val,-inf)$\uff0c\u8986\u76d6\u5c31\u662f$(-inf,val)$\uff1b\n\n\u6807\u8bb0\u7684\u5408\u5e76\uff1a$(a,b)+(c,d)=(a+c,max(b+c,d))$\uff08\u6ce8\u610f\u662f\u6709\u987a\u5e8f\u7684\u54e6\uff09\n\npushdown\u64cd\u4f5c\uff1a\n\n\u5176\u4e2d$bas=(0,-inf)$\uff0c\u5c31\u662f\u7a7a\u64cd\u4f5c\n\n```cpp\nil int fit(const int &v) // \u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u64cd\u4f5c\u7684\u8bdd\u4f1a\u7206int\n{\n\treturn max(min(v,inf),-inf);\n}\nstruct Node\n{\n\tint a,b;\n\tNode() {}\n\tNode(const int aa,const int bb)\n\t{\n\t\ta=aa,b=bb;\n\t}\n\tfriend Node operator+(const Node &u,const Node &v)\n\t{\n\t\treturn Node(fit(u.a+v.a),fit(max(u.b+v.a,v.b)));\n\t}\n\til void upd(const Node &v)\n\t{\n\t\ta=max(v.a,a), b=max(v.b,b);\n\t}\n\til int calc(int x)\n\t{\n\t\treturn max(x+a,b);\n\t}\n}\nil void down(int x)\n{\n\tif(his[x]!=bas)\n\t{\n\t\thmx[x]=max(his[x].calc(mx[x]),hmx[x]);\n\t\tif(rs<M)\n\t\t{\n\t\t\this[ls].upd(laz[ls]+his[x]);\n\t\t\this[rs].upd(laz[rs]+his[x]);\n\t\t}\n\t\this[x]=bas;\n\t}\n\tif(laz[x]!=bas)\n\t{\n\t\tmx[x]=laz[x].calc(mx[x]);\n\t\tif(rs<M)\n\t\t{\n\t\t\tlaz[ls]=laz[ls]+laz[x];\n\t\t\tlaz[rs]=laz[rs]+laz[x];\n\t\t}\n\t\tlaz[x]=bas;\n\t}\n}\n```",
        "postTime": 1545463539,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u7ebf\u6bb5\u6811\u5386\u53f2\u6700\u5927\u503c-CPU\u76d1\u63a7-\u89e3\u9898\u62a5\u544a"
    }
]