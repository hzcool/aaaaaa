[
    {
        "content": "## \u9898\u89e3 P3987 \u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\n\n\u58f0\u660e\uff1a\u8fd9\u662f\u4e00\u7bc7\u4e71\u641e + \u5361\u5e38\u7684\u9898\u89e3\uff0c\u53ea\u8981\u4f1a\u5faa\u73af\u548c\u6570\u7ec4\u7684\u4eba\u90fd\u80fd\u770b\u61c2\u8fd9\u7bc7\u9898\u89e3\uff08\u7b11\uff09\u3002\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3987)\n\n### Part $1$ \u6700 naive \u7684\u4ee3\u7801\n\n\u9996\u5148\uff0c\u770b\u5230\u9898\u76ee\u53ef\u4ee5\u8f7b\u677e\u5730\u6253\u51fa\u8fd9\u6837\u4e00\u4efd\u4ee3\u7801\uff08\u7eaf\u66b4\u529b\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nint a[100010];\n\nsigned main() {\n\tint n,m;\n\tcin>>n>>m;\n\tfor(int i=1; i<=n; ++i) cin>>a[i];\n\twhile(m--) {\n\t\tint xuanze;\n\t\tcin>>xuanze;\n\t\tif(xuanze==1) { \n\t\t\tint l,r,x,w;\n\t\t\tcin>>l>>r>>x;\n\t\t\tfor(int i=l; i<=r; ++i) {\n\t\t\t\tif(a[i]%x==0) { // \u5982\u679c\u662f x \u7684\u500d\u6570\uff0c\u9664\u4ee5 x\n\t\t\t\t\ta[i]/=x;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if(xuanze==2) {\n\t\t\tint l,r,sum=0;\n\t\t\tcin>>l>>r;\n\t\t\tfor(int i=l; i<=r; ++i) { // \u6c42\u548c\n\t\t\t\tsum+=a[i];\n\t\t\t}\n\t\t\tcout<<sum<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u60f3\u5fc5\u8fd9\u4ee3\u7801\u5927\u5bb6\u90fd\u80fd\u770b\u61c2\u5427\u3002\n\n\u63d0\u4ea4\u4e0a\u53bb\uff0cC++O2 $36\\  \\text{pts}$\uff0c\u8fd9\u8bf4\u660e\u6709\u5e0c\u671b\u5361\u8fc7\u53bb\uff01\n\n### Part $2$ \u5361\u5e38\u6570\u4e4b\u7406\u8bba\u57fa\u7840\n\n\u6211\u4eec\u5148\u770b\u4e00\u4e0b\u590d\u6742\u5ea6\uff1a\u6700\u5dee $O(mn)$\uff0c\u4f46\u8fdc\u8fdc\u8fbe\u4e0d\u5230\u3002\u51ed\u501f\u7740 $4\\ \\text{s}$ \u7684\u65f6\u9650\uff0c\u518d\u52a0\u4e0a\u6d1b\u8c37\u795e\u673a\uff0c\u5361\u5361\u5e38\u6570\u5c31\u5dee\u4e0d\u591a\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4ece $\\text{2020.12.12}$ \u5c31\u4e0b\u51b3\u5fc3\u5361\u5e38\u6570\u66b4\u529b AC\uff01\n\n\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b\u57fa\u7840\u7684\u5361\u5e38\u6570\u65b9\u6cd5\uff1a\n\n* \u5feb\u8bfb\u5feb\u5199\n\n\u4e0b\u9762\u7ed9\u51fa\u6211\u7684\u5feb\u901f\u8f93\u5165 `int` \u7c7b\u578b\u7684\u6570\u548c\u5feb\u901f\u8f93\u51fa `long long` \u7c7b\u578b\u7684\u6570\u7684\u4ee3\u7801\uff1a\n\n```cpp\nconst int size=(1<<20)+1;\nchar buf[size],*p1=buf,*p2=buf;\nchar buffer[size];\nint op1=-1;\nconst int op2=size-1;\ninline char readchar() {\n\tif(p1!=p2) {\n\t\treturn *p1++;\n\t}\n\treturn p1==(p2=(p1=buf)+fread(buf,1,size-1,stdin))?EOF:*p1++;\n}\ninline void flush() {\n\tfwrite(buffer,1,op1+1,stdout),op1=-1;\n}\ninline void writechar(const char &x) {\n\tif(op1==op2) flush();\n\tbuffer[++op1]=x;\n}\n#ifndef ONLINE_JUDGE\n#define readchar getchar\n#endif\n#define putchar writechar\ninline int read() {\n\tint s=1,c=readchar(),x=0;\n\twhile(c<=32) {\n\t\tc=readchar();\n\t}\n\tif(c=='-') {\n\t\ts=-1,c=readchar();\n\t}\n\tfor(; ('0'<=c && c<='9'); c=readchar()) {\n\t\tx=x*10+c-'0';\n\t}\n\treturn x*s;\n}\ninline void write(long long x) {\n\tif(x<0) {\n\t\twritechar('-'),x=-x;\n\t}\n\tchar s[25];\n\tint n=0;\n\twhile(x || !n) {\n\t\ts[n++]='0'+x%10,x/=10;\n\t}\n\twhile(n--) {\n\t\twritechar(s[n]);\n\t}\n}\n```\n\n* \u4f7f\u7528 `inline` \u548c `register`\u3002\n\n* \u5faa\u73af\u5c55\u5f00\uff1a\u662f\u901a\u8fc7\u589e\u52a0\u6bcf\u6b21\u8fed\u4ee3\u8ba1\u7b97\u7684\u5143\u7d20\u7684\u6570\u91cf\uff0c\u51cf\u5c11\u5faa\u73af\u7684\u8fed\u4ee3\u6b21\u6570\u3002\u6bd4\u5982\u8fd9\u4efd\u4ee3\u7801\uff1a\n\n```cpp\nfor(register int i=1; i<=n; ++i) sum+=a[i];\n```\n\n\u53ef\u4ee5\u4f18\u5316\u6210\uff1a\n\n```cpp\nregister int i;\nfor(i=1; i<=n-3; i+=4) sum+=a[i]+a[i+1]+a[i+2]+a[i+3];\nwhile(i<=n) sum+=a[i++];\n```\n\n\u8fd9\u6837\u5b50\u8c8c\u4f3c\u5728 -O2 \u7684\u60c5\u51b5\u4e0b\u4e0d\u80fd\u4f18\u5316\u5f88\u591a\uff0c\u4f46\u8fd8\u662f\u5199\u4e0a\u5427\uff08\u7b11\uff09\u3002\n\n* \u4f4d\u8fd0\u7b97\n\n\u8fd9\u662f\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u4f18\u5316\uff0c\u56e0\u4e3a\u8ba1\u7b97\u673a\u5185\u90e8\u662f\u4e8c\u8fdb\u5236\uff0c\u5982\u679c\u6709\u4e9b\u64cd\u4f5c\u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\u89e3\u51b3\uff0c\u5c31\u6bd4\u666e\u901a\u8fd0\u7b97\u4f18\u5316\u65f6\u95f4\u591a\u4e86\uff01\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e9b\u7b80\u5355\u7684\u4f4d\u8fd0\u7b97\uff1a\n\n* `&1` \u76f8\u5f53\u4e8e `%2`\u3002\n* `>>1` \u76f8\u5f53\u4e8e `/2`\u3002\n* `<<1` \u76f8\u5f53\u4e8e `*2`\u3002\n\n\u7b49\u7b49 $\\cdots$\n\n\u540c\u6837\u5730\uff0c`&3` \u76f8\u5f53\u4e8e `%4`\uff08\u4e0e\u4e0a\u4e00\u4e2a\u4e8c\u7684\u6b21\u65b9 $-1$ \u76f8\u5f53\u4e8e\u6a21\u8fd9\u4e2a\u4e8c\u7684\u6b21\u65b9\uff09\uff0c`>>2` \u76f8\u5f53\u4e8e `/4`\uff08\u53f3\u79fb\u4e00\u4e2a\u6570\u76f8\u5f53\u4e8e\u9664\u4ee5 $2$ \u7684\u8fd9\u4e2a\u6570\u6b21\u65b9\uff09\uff0c`<<2` \u76f8\u5f53\u4e8e `*4`\uff08\u5de6\u79fb\u4e00\u4e2a\u6570\u76f8\u5f53\u4e8e\u4e58\u4ee5 $2$ \u7684\u8fd9\u4e2a\u6570\u6b21\u65b9\uff09\u3002\n\n* \u4e09\u76ee\u8fd0\u7b97\u7b26\n\n\u683c\u5f0f\u662f\u8fd9\u6837\u7684\uff1a`a?b:c`\n\n\u5176\u4e2d `a` \u662f\u8868\u8fbe\u5f0f\uff0c`b,c` \u53ef\u4ee5\u662f\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u6267\u884c\u7684\u8bed\u53e5\u3002\n\n\u6bd4\u5982\u8bf4\u4f60\u8981\u7528\u4e00\u4e2a `if` \u89e3\u51b3\u7684\uff1a\n\n```cpp\nif(a==b) flag=0;\n```\n\n\u53d8\u6210\u4e09\u76ee\u8fd0\u7b97\u7b26\u662f\uff1a\n\n```cpp\na==b?flag=0:1;\n```\n\n\u5176\u5b9e `1` \u76f8\u5f53\u4e8e\u4e0d\u6267\u884c\u4efb\u4f55\u4e1c\u897f\u3002\n\n\u8fd9\u9053\u9898\u80fd\u7528\u5230\u7684\u57fa\u7840\u5361\u5e38\u64cd\u4f5c\u5c31\u8fd9\u4e48\u591a\u3002\n\n### Part $3$ \u5361\u5e38\u6570\u4e4b\u5b9e\u8df5\u672c\u9898\n\n\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e0b\u8fd9\u4e00\u9898\u9488\u5bf9\u6700\u4e0a\u9762\u8fd9\u4e2a\uff08naive\uff09\u4ee3\u7801\u80fd\u4f18\u5316\u4ec0\u4e48\u3002\n\n* \u628a\u4e0d\u5fc5\u8981\u7684 `long long` \u8f6c\u6210 `int`\u3002\u5206\u6790\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u51fa\u4e86\u6c42\u548c\u7684 `sum` \u9700\u8981\u5b9a\u4e49\u6210 `long long`\uff0c\u5176\u4ed6\u7684\u90fd\u4e0d\u9700\u8981\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38 amazing \u7684\u64cd\u4f5c\uff0c\u6539\u4e00\u4e0b\u5c31\u76f4\u63a5\u53d8\u6210\u4e86 [88\u5206](https://www.luogu.com.cn/record/51412795)\uff01\n\n* \u52a0\u4e0a\u4e0a\u6587\u7ed9\u51fa\u7684\u5feb\u8bfb\u5feb\u5199\uff0c\u52a0\u4e0a\u8fd9\u4e2a\u867d\u7136[\u4e0d\u4f1a\u52a0\u5206](https://www.luogu.com.cn/record/51412949)\uff0c\u4f46\u603b\u65f6\u95f4\u8fd8\u662f\u4f18\u5316\u4e86 $3 \\ \\text{s}$\u3002\n\n* \u628a\u6240\u6709\u91cc\u9762\u5b9a\u4e49\u7684\u53d8\u91cf\u90fd\u653e\u5230\u5916\u9762\uff08\u4ee5\u540e\u65b9\u4fbf\u5faa\u73af\u5c55\u5f00\uff09\uff0c\u5e76\u52a0\u4e0a `register`\uff08\u6570\u7ec4\u4e0d\u7528\u52a0\uff09\u3002\n\n* \u5faa\u73af\u5c55\u5f00 + \u4f4d\u8fd0\u7b97\u3002\n\n\u653e\u4e00\u4e0b\u4ee3\u7801\uff0c\u8fd9\u4e2a\u4f18\u5316\u633a\u5173\u952e\u7684\uff0c\u80fd\u4f18\u5316\u5230 [97\u5206](https://www.luogu.com.cn/record/51414639)\u3002\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int size=(1<<20)+1;\nchar buf[size],*p1=buf,*p2=buf;\nchar buffer[size];\nint op1=-1;\nconst int op2=size-1;\ninline char readchar() {\n\tif(p1!=p2) {\n\t\treturn *p1++;\n\t}\n\treturn p1==(p2=(p1=buf)+fread(buf,1,size-1,stdin))?EOF:*p1++;\n}\ninline void flush() {\n\tfwrite(buffer,1,op1+1,stdout),op1=-1;\n}\ninline void writechar(const char &x) {\n\tif(op1==op2) flush();\n\tbuffer[++op1]=x;\n}\n#ifndef ONLINE_JUDGE\n#define readchar getchar\n#endif\n#define putchar writechar\ninline int read() {\n\tint s=1,c=readchar(),x=0;\n\twhile(c<=32) {\n\t\tc=readchar();\n\t}\n\tif(c=='-') {\n\t\ts=-1,c=readchar();\n\t}\n\tfor(; ('0'<=c && c<='9'); c=readchar()) {\n\t\tx=x*10+c-'0';\n\t}\n\treturn x*s;\n}\ninline void write(long long x) {\n\tif(x<0) {\n\t\twritechar('-'),x=-x;\n\t}\n\tchar s[25];\n\tint n=0;\n\twhile(x || !n) {\n\t\ts[n++]='0'+x%10,x/=10;\n\t}\n\twhile(n--) {\n\t\twritechar(s[n]);\n\t}\n}\nint a[100010];\nsigned main() {\n\tregister int n=read(),m=read(),l,r,x,xuanze,i;\n\tregister long long sum;\n\tfor(i=0; i<n; a[++i]=read());\n\twhile(m--) {\n\t\txuanze=read();\n\t\tif(xuanze==1) {\n\t\t\tl=read(),r=read(),x=read();\n\t\t\tfor(i=l; i<=r-5; i+=6) {\n\t\t\t\t!(a[i]%x)?a[i]/=x:1;\n\t\t\t\t!(a[i+1]%x)?a[i+1]/=x:1;\n\t\t\t\t!(a[i+2]%x)?a[i+2]/=x:1;\n\t\t\t\t!(a[i+3]%x)?a[i+3]/=x:1;\n\t\t\t\t!(a[i+4]%x)?a[i+4]/=x:1;\n\t\t\t\t!(a[i+5]%x)?a[i+5]/=x:1;\n\t\t\t}\n\t\t\twhile(r-i+1) {\n\t\t\t\t!(a[i]%x)?a[i]/=x:1;\n\t\t\t\t++i;\n\t\t\t}\n\t\t} else {\n\t\t\tl=read(),r=read();\n\t\t\tsum=0;\n\t\t\tfor(i=l; i<=r-5; i+=6) {\n\t\t\t\tsum+=a[i]+a[i+1]+a[i+2]+a[i+3]+a[i+4]+a[i+5];\n\t\t\t}\n\t\t\twhile(r-i+1) {\n\t\t\t\tsum+=a[i++];\n\t\t\t}\n\t\t\twrite(sum),putchar('\\n');\n\t\t}\n\t}\n\tflush();\n\treturn 0;\n}\n```\n\n* \u63a5\u4e0b\u6765\u5c31\u9700\u8981\u795e\u5947\u7684\u4e71\u641e\u64cd\u4f5c\u6765\u8fc7\u8fd9 TLE \u7684\u7b2c\u4e00\u4e2a\u70b9\u3002\n\n\u6211\u4eec\u91cd\u65b0\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c$x$ \u7684\u8303\u56f4\u662f $1 \\le x \\le 500000$\uff0c\u90a3\u4e48 $x=1$ \u7684\u65f6\u5019\u6240\u6709\u6570\u90fd\u80fd\u88ab $1$ \u6574\u9664\uff0c\u6240\u6709\u6570\u90fd\u6ca1\u6539\u53d8\uff01\u6240\u4ee5\u5982\u679c\u5f53 $x=1$ \u7684\u65f6\u5019\u5b8c\u5168\u53ef\u4ee5\u8df3\u8fc7\u5b83\uff01\u6253\u51fa\u4ee3\u7801\uff0c\u63d0\u4ea4\uff0c\u5c45\u7136\u8fd8\u662f TLE on $\\#1$\uff0c\u4e0d\u8fc7\u603b\u65f6\u95f4\u76f4\u63a5\u5c11\u4e86 $11 \\ \\text{s}$ \u79d2\uff01\u8bf4\u660e\u8fd9\u4e2a\u4f18\u5316\u662f\u7ba1\u7528\u7684\u3002\n\n\u63a5\u7740\u770b\uff0c\u8fd8\u662f\u8ba8\u8bba $x$\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u91cc\u6709\u5927\u91cf\u7684\u53d6\u6a21\u548c\u9664\u6cd5\u64cd\u4f5c\u3002\u5982\u4f55\u4f18\u5316\u5462\uff1f\u4f4d\u8fd0\u7b97\uff01\u5728 $x=2$ \u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528\u3002\u8fd9\u65f6\u5019\uff0c\u53ef\u4ee5\u7279\u5224 $x=2$ \u7684\u60c5\u51b5\uff0c\u4f7f\u7528\u4f4d\u8fd0\u7b97\u4f18\u5316\u65f6\u95f4\u3002\n\n\u8fd9\u91cc\u7279\u522b\u611f\u8c22 dalao @[Jiayn](https://www.luogu.com.cn/user/267122) \u7684\u8fd9\u4e2a\u601d\u8def\uff0c\u5e76\u8ba9\u6211 AC\uff01\uff01\uff01\n\n\u8fd9\u91cc\u7684\u4ee3\u7801\uff1a\n\n```cpp\nif(x==2) {\n\tfor(i=l; i<=r-5; i+=6) {\n\t\t!(a[i]&1)?a[i]>>=1:1;\n\t\t!(a[i+1]&1)?a[i+1]>>=1:1;\n\t\t!(a[i+2]&1)?a[i+2]>>=1:1;\n\t\t!(a[i+3]&1)?a[i+3]>>=1:1;\n\t\t!(a[i+4]&1)?a[i+4]>>=1:1;\n\t\t!(a[i+5]&1)?a[i+5]>>=1:1;\n\t}\n\twhile(r-i+1) {\n\t\t!(a[i]&1)?a[i]>>=1:1;\n\t\t++i;\n\t}\n}\n```\n\n\u8fd9\u4e2a\u4f18\u5316\u65f6\u95f4\u7684\u65b9\u6cd5\u53ef\u4ee5\u8bf4\u5728 $\\#1$ \u662f\u7279\u522b\u6709\u7528\uff0c\u4ece TLE \u53d8\u6210 AC \u4e86\uff01\u5176\u5b9e\u540c\u7406\uff0c\u5f53 $x=4$ \u7684\u60c5\u51b5\u4e5f\u53ef\uff0c\u5f53 $x=2^n$ \u7684\u60c5\u51b5\u90fd\u53ef\u4ee5\u3002\u4f46\u662f\u5199\u51fa\u90a3\u4e48\u591a\uff0c\u6267\u884c\u7684\u6982\u7387\u5f88\u5c0f\uff0c\u7ecf\u5b9e\u6d4b\uff0c\u5199\u51fa $x=2,4$ \u7684\u4f4d\u8fd0\u7b97\u4f18\u5316\u662f\u6700\u4f18\u7684\uff0c\u5199\u5f97\u592a\u591a\u4f1a\u6709\u8d1f\u4f18\u5316\u3002\u90a3\u4e48\uff0c\u73b0\u5728\u5c31\u53ef\u4ee5 AC \u4e86\uff01\n\n\u7531\u4e8e\u8fd9\u4e24\u4e2a\u4f18\u5316\u90fd\u5f88\u7b80\u5355\uff0c\u5e76\u7ed9\u51fa\u4e86\u53c2\u8003\u7684\u90e8\u5206\u4ee3\u7801\uff0c\u6240\u4ee5\u5c31\u4e0d\u653e\u4ee3\u7801\u4e86\u3002[\u8fd9\u91cc\u662f AC \u8bb0\u5f55](https://www.luogu.com.cn/record/51417451)\u3002\n\n### Part $4$ \u8bb0\u5f55\n\n\u8fd9\u9053\u9898\u662f\u6211\u4ece $\\text{2020.12.12}$ \u5230 $\\text{2021.06.01}$ \u7ecf\u5386\u4e86\u534a\u5e74\uff0c\u60f3\u51fa\u4e86\u5404\u79cd\u5404\u6837\u7684\u65b9\u6cd5\uff0c\u4ece $36$ \u5206\uff0c\u5230 $88$ \u5206\uff0c\u5230 $94$ \u5206\uff0c\u5230  $97$ \u5206\u3002\u5c24\u5176\u662f\u8fd9 $97$ \u5206\u5361\u4e86\u6211\u534a\u5e74\u3002\u76f4\u5230 $\\text{2021.06.01}$ \u624d\u60f3\u51fa $x=1$ \u7684\u7279\u5224\uff0c\u5e76\u5f97\u5230\u4e86 @[Jiayn](https://www.luogu.com.cn/user/267122) \u7684\u601d\u8def\u5e2e\u52a9\uff08$x=2$ \u7528\u4f4d\u8fd0\u7b97\uff09\u624d AC\u3002\n\n### Part $5$ Update\n\n* \u6709\u4e00\u4e2a dalao @[_zuoChunMei_](https://www.luogu.com.cn/user/299086) \u5199\u4e86\u8fd9\u9898\u7684\u53e6\u4e00\u79cd\u66b4\u529b\u89e3\u6cd5\uff1a\u524d\u7f00\u548c\u3002\u5176\u5b9e\u8fd9\u79cd\u65b9\u6cd5\u590d\u6742\u5ea6\u548c\u4e0a\u6587\u4e2d\u7684\u590d\u6742\u5ea6\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u6362\u4e86\u4e00\u79cd\u66b4\u529b\u7684\u65b9\u6cd5\u3002\n\n\u601d\u8def\u5c31\u662f\uff0c\u6700\u5f00\u59cb\u7b97\u51fa $a$ \u6570\u7ec4\u7684\u524d\u7f00\u548c\uff0c\u4e4b\u540e\u5462\uff0c\u6bcf\u6b21\u66f4\u65b0\uff0c\u90fd\u4f1a\u5f71\u54cd\u540e\u9762\u7684\u524d\u7f00\u548c\u3002\u6bd4\u5982\uff1a\u5982\u679c $x$ \u6574\u9664 $a_i$\uff0c\u90a3\u4e48 $a_i$ \u8981\u9664\u4ee5 $x$\u3002\u8fd9\u6837\u7684\u8bdd $i \\sim n$ \u7684\u524d\u7f00\u548c\u4f1a\u51cf\u5c11\u591a\u5c11\u5462\uff1f\u4f1a\u51cf\u5c11\u66f4\u65b0\u540e\u7684 $a_i$ \u7684 $x-1$ \u500d\u7684\u6570\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6570 $sum$ \u8868\u793a\u5230\u73b0\u5728\u4e00\u5171\u51cf\u5c11\u4e86\u51e0\u3002\u5728\u533a\u95f4 $[l,r]$ \u4e2d\u6bcf\u4e2a\u524d\u7f00\u548c\u90fd\u8981\u51cf\u5c11\u5f53\u524d\u7684 $sum$\uff08\u4e5f\u5c31\u662f `qzh[i]-=sum`\uff09\u3002\u90a3\u4e48\uff0c\u5728\u533a\u95f4 $[r+1,n]$ \u4e2d\u6bcf\u4e2a\u6570\u4e5f\u8981\u51cf\u5c11\uff0c\u5c31\u662f\u51cf\u5c11\u6700\u540e\u7684 $sum$\u3002\n\n\u8be6\u7ec6\u7684\u770b\u4e00\u4e0b\u4ee3\u7801\u5427\uff0c\u5361\u5e38\u7684\u5957\u8def\u6ca1\u53d8\uff0c\u8fd9\u91cc\u53ea\u653e\u90e8\u5206\u4ee3\u7801\uff1a\n\n```cpp\nif(xuanze==1) {\n\tl=read(),r=read(),x=read();\n\tsum=0;\n\tif(x!=1) {\n\t\tif(x==2) {\n\t\t\tfor(i=l; i<=r-5; i+=6) {\n\t\t\t\t!(a[i]&1)?a[i]>>=1,sum+=a[i]:1;qzh[i]-=sum;\n\t\t\t\t!(a[i+1]&1)?a[i+1]>>=1,sum+=a[i+1]:1;qzh[i+1]-=sum;\n\t\t\t\t!(a[i+2]&1)?a[i+2]>>=1,sum+=a[i+2]:1;qzh[i+2]-=sum;\n\t\t\t\t!(a[i+3]&1)?a[i+3]>>=1,sum+=a[i+3]:1;qzh[i+3]-=sum;\n\t\t\t\t!(a[i+4]&1)?a[i+4]>>=1,sum+=a[i+4]:1;qzh[i+4]-=sum;\n\t\t\t\t!(a[i+5]&1)?a[i+5]>>=1,sum+=a[i+5]:1;qzh[i+5]-=sum;\n\t\t\t}\n\t\t\twhile(r-i+1) {\n\t\t\t\t!(a[i]&1)?a[i]>>=1,sum+=a[i]:1;qzh[i]-=sum;\n\t\t\t\t++i;\n\t\t\t}\n\t\t} else if(x==4) {\n\t\t\tfor(i=l; i<=r-5; i+=6) {\n\t\t\t\t!(a[i]&3)?a[i]>>=2,sum+=a[i]*3:1;qzh[i]-=sum;\n\t\t\t\t!(a[i+1]&3)?a[i+1]>>=2,sum+=a[i+1]*3:1;qzh[i+1]-=sum;\n\t\t\t\t!(a[i+2]&3)?a[i+2]>>=2,sum+=a[i+2]*3:1;qzh[i+2]-=sum;\n\t\t\t\t!(a[i+3]&3)?a[i+3]>>=2,sum+=a[i+3]*3:1;qzh[i+3]-=sum;\n\t\t\t\t!(a[i+4]&3)?a[i+4]>>=2,sum+=a[i+4]*3:1;qzh[i+4]-=sum;\n\t\t\t\t!(a[i+5]&3)?a[i+5]>>=2,sum+=a[i+5]*3:1;qzh[i+5]-=sum;\n\t\t\t}\n\t\t\twhile(r-i+1) {\n\t\t\t\t!(a[i]&3)?a[i]>>=2,sum+=a[i]*3:1;qzh[i]-=sum;\n\t\t\t\t++i;\n\t\t\t}\n\t\t} else {\n\t\t\tfor(i=l; i<=r-5; i+=6) {\n\t\t\t\t!(a[i]%x)?a[i]/=x,sum+=a[i]*(x-1):1;qzh[i]-=sum;\n\t\t\t\t!(a[i+1]%x)?a[i+1]/=x,sum+=a[i+1]*(x-1):1;qzh[i+1]-=sum;\n\t\t\t\t!(a[i+2]%x)?a[i+2]/=x,sum+=a[i+2]*(x-1):1;qzh[i+2]-=sum;\n\t\t\t\t!(a[i+3]%x)?a[i+3]/=x,sum+=a[i+3]*(x-1):1;qzh[i+3]-=sum;\n\t\t\t\t!(a[i+4]%x)?a[i+4]/=x,sum+=a[i+4]*(x-1):1;qzh[i+4]-=sum;\n\t\t\t\t!(a[i+5]%x)?a[i+5]/=x,sum+=a[i+5]*(x-1):1;qzh[i+5]-=sum;\n\t\t\t}\n\t\t\twhile(r-i+1) {\n\t\t\t\t!(a[i]%x)?a[i]/=x,sum+=a[i]*(x-1):1;qzh[i]-=sum;\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t\tfor(i=r+1; i<=n-5; i+=6) {\n\t\t\tqzh[i]-=sum,qzh[i+1]-=sum,qzh[i+2]-=sum,qzh[i+3]-=sum,qzh[i+4]-=sum,qzh[i+5]-=sum;\n\t\t}\n\t\twhile(n-i+1) {\n\t\t\tqzh[i++]-=sum;\n\t\t}\n\t}\n} else {\n\tl=read(),r=read();\n\twrite(qzh[r]-qzh[l-1]),putchar('\\n');\n}\n```\n\n\u6ce8\u610f\uff0c`qzh` \u6570\u7ec4\u548c `sum` \u90fd\u8981\u5f00 `long long`\u3002\n\n\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u7528 C++O2 \u8bed\u8a00\u662f\u8fc7\u4e0d\u53bb\u7684\uff0c\u53ea\u80fd\u4f7f\u7528 C++17O2 [\u8fc7](https://www.luogu.com.cn/record/51441728)\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u8bd5\u7740\u5361\u5e38\u770b C++ \u80fd\u4e0d\u80fd\u8fc7\uff08[\u6b64\u4e3a\u6ca1\u8fc7\u7684\u8bb0\u5f55](https://www.luogu.com.cn/record/51441624)\uff0c\u53ef\u89c1\u5df2\u7ecf\u5f88\u63a5\u8fd1\u4e86\uff09\u3002\n\n* $\\text{update at 10.5}$ \u5f04\u51fa\u6b63\u89e3\u4e86\uff0c\u8fd9\u4e2a\u9898\u89e3\u4e5f\u6bd4\u8f83\u6709\u610f\u4e49\u4e86\u3002\n\n\u5927\u5bb6\u53ef\u4ee5\u770b\u4e00\u4e0b\u5927\u795e[\u90dd\u5609\u9716](https://www.luogu.com.cn/user/355640)\u7684\u8fd9\u7bc7[\u9898\u89e3](https://www.luogu.com.cn/blog/DUCKPEAR/solution-p3987)\uff0c\u5229\u7528\u79bb\u7ebf\u4e71\u641e\u3002\u4f46\u662f\u8fd9\u4e5f\u4e0d\u7b97\u6700\u597d\u7684\u89e3\u6cd5\uff0c\u4e5f\u8fc7\u4e0d\u53bb [[Ynoi2013] \u5927\u5b66](https://www.luogu.com.cn/problem/P5610)\u3002\n\n\u90a3\u4e48\u6700\u597d\u7684\u89e3\u6cd5\u662f\u4ec0\u4e48\u5462\uff1fhjl \u5927\u795e\u53c8\u60f3\u51fa\u4e00\u79cd[\u65b9\u6cd5](https://www.luogu.com.cn/blog/DUCKPEAR/solution-p5610)\uff0c\u8fd9\u6837\u5c31\u8fc7\u4e86\uff0c\u590d\u6742\u5ea6\u4e5f\u4e0d\u7384\u5b66\u3002\u8fd9\u79cd\u505a\u6cd5\u653e\u5230\u8fd9\u9898\u91cc\u80fd\u6392\u5230[\u6700\u4f18\u89e3\u7b2c\u4e00\u9875](https://www.luogu.com.cn/record/list?pid=P3987&orderBy=1&status=&page=1)\u3002",
        "postTime": 1622643000,
        "uid": 353688,
        "name": "\u738b\u7199\u6587",
        "ccfLevel": 0,
        "title": "P3987 \u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~ \u9898\u89e3"
    },
    {
        "content": "\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6570\u6700\u591a\u88ab/log\u6b21\uff08\u65e0\u89c6\u63891\u548c0\u7684\u60c5\u51b5\uff09\n\n\u74f6\u9888\u5728\u4e8e\u5982\u4f55\u627e\u51fa\u6240\u6709\u8be5\u88ab/\u7684\u6570\u800c\u4e0d\u5728\u4e8e\u5982\u4f55\u7ef4\u62a4\n\n500000\u4ee5\u5185\u7684\u6709\u6700\u591a\u7ea6\u6570\u7684\u6570\u6709200\u4e2a\u7ea6\u6570\n\n\u7136\u540e\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u6765\u7ef4\u62a4\n\n\u628a\u6bcf\u4e2ai\u63d2\u5165ai\u7684\u6240\u6709\u7ea6\u6570\u5bf9\u5e94\u7684\u5e73\u8861\u6811\u91cc\u9762\n\n\u6bcf\u6b21\u533a\u95f4[l,r]\u4e2dx\u7684\u500d\u6570/x\u7684\u65f6\u5019\n\n\u5219\u5728\u7b2cx\u4e2a\u5e73\u8861\u6811\u91cc\u9762\u628a\u533a\u95f4[l,r]\u622a\u51fa\u6765\u7136\u540eDFS\u8fd9\u4e2a\u5b50\u6811\n\n\u8fb9DFS\u8fb9\u5220\u6389\u91cc\u9762\u6240\u6709ai/x\u540e\u4e0d\u4e3ax\u500d\u6570\u7684\u4e0b\u6807i\n\n\u5e73\u8861\u6811\u8bbf\u95ee\u8fde\u7eedsize\u4e2a\u6570\u7684\u590d\u6742\u5ea6\u4e3alogn+size\u7684\n\n\u603b\u590d\u6742\u5ea6O( nd + mlog^2n ) , \u7a7a\u95f4O( nd )\uff0cd\u4e3a\u503c\u57df\u5185\u6700\u5927\u7ea6\u6570\u4e2a\u6570\uff0c\u5373200\n\n\nPS.\u4f3c\u4e4e\u83ab\u540d\u5176\u5999\u7684\u88ab\u94fe\u8868\u66b4\u529b\u8fc7\u4e86\u3002\u3002\u3002\u975e\u5e38\u65e0\u6cd5\u7406\u89e3\n\n\u5176\u5b9e\u7c7b\u4f3c\u590d\u6742\u5ea6\u7684\u505a\u6cd5\u5f88\u591a\uff0c\u5e73\u8861\u6811\u505a\u6cd5\u7a7a\u95f4\u548c\u65f6\u95f4\u5e38\u6570\u90fd\u4e0d\u592a\u597d\n\n\u8fd8\u6709\u5f88\u591andlogn\u7684\u505a\u6cd5\uff0c\u6211\u53ea\u5361\u4e86\u4e00\u90e8\u5206\n\n\u56e0\u4e3astd\u7528\u7684\u5e73\u8861\u6811\u5f88\u5947\u602a\uff0c\u5728\u8fd9\u4e2a\u9898\u91cc\u9762\u5904\u4e8e\u5f88\u5927\u7684\u52a3\u52bf\u3002\u3002\u3002\n",
        "postTime": 1511773049,
        "uid": 3296,
        "name": "noip",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "```\n\u5728\u592a\u9633\u897f\u659c\u7684\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7f6e\u8eab\u5929\u4e0a\u4e4b\u68ee\u3002\n\n\u7b49\u8fd9\u573a\u6218\u4e89\u7ed3\u675f\u4e4b\u540e\uff0c\u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4f17\u4eba\uff0c\u4eba\u4eba\u672c\u7740\u6b63\u4e49\u4e4b\u540d\u3002\n\n\u957f\u5b58\u4e0d\u706d\u7684\u8fc7\u53bb\uff1b\u9010\u6e10\u6d88\u901d\u7684\u672a\u6765\u3002\n\n\u6211\u56de\u6765\u4e86\uff0c\u7eb5\u4f7f\u65e5\u8584\u897f\u5c71\uff0c\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\uff0c\u6b64\u65f6\u6b64\u523b\u7684\u5149\u8f89\uff0c\u76fc\u541b\u52ff\u5fd8\u3002\n\n            \u2014\u2014\u2014\u2014\u4e16\u754c\u4e0a\u6700\u5e78\u798f\u7684\u5973\u5b69 \u73c2\u6735\u8389\n```\n\n$ $\n\n# \u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u975e\u8d1f\u6574\u6570\u5e8f\u5217 $a_i$ \u548c\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. \u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u548c\u4e00\u4e2a\u6574\u6570 $x$ \uff0c\u4ee4 $a_l,a_{l+1},...,a_r$ \u4e2d\u6240\u6709 $x$ \u7684\u500d\u6570\u9664\u4ee5 $x$ \u3002\n\n2. \u7ed9\u5b9a\u533a\u95f4 $[l,r]$ \uff0c\u6c42 $\\sum_{i=l}^r a_i$ \u7684\u503c\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n~~\u8fd9\u662f lxl \u51fa\u7684\u9898\uff0c\u7136\u800c\u5374\u4e0d\u662f\u5206\u5757\u6216\u7384\u5b66\u51f8\u5305~~\n\n~~\u8fd9\u662f\u5173\u4e8e\u73c2\u6735\u8389\u7684\u9898\uff0c\u7136\u800c\u5374\u4e0d\u662f Chtholly Tree~~\n\n\u5f53 $x\\neq 1$ \u65f6\uff0c\u53d1\u73b0\u5f53\u4e00\u4e2a\u6570\u6ee1\u8db3\u500d\u6570\u6761\u4ef6\u65f6\uff0c\u5176\u6700\u5c11\u4f1a\u88ab\u9664\u4ee5\u4e8c\uff0c\u5373\u51cf\u5c11\u4e00\u534a\uff0c\u5bb9\u6613\u8bc1\u660e\uff0c\u4e00\u4e2a\u6570 $a$ \u4f1a\u88ab\u6700\u591a\u9664 $O(log_2~a)$ \u6b21\uff0c\u6240\u4ee5\u6240\u6709\u6570\u603b\u5171\u6700\u591a\u4f1a\u88ab\u9664 $O(\\sum_{i=1}^n log_2 ~a)$ \u6b21\u3002\n\n\u5047\u5982\u6211\u4eec\u6bcf\u6b21\u64cd\u4f5c\u80fd\u5728 **\u5747\u644a** $O(1)$ \u6216 **\u5355\u6b21** $O(\\log_2 n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u53d6\u51fa\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\uff0c\u66b4\u529b\u4fee\u6539\uff0c\u7528\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5f53\u524d $a$ \u7684\u503c\u5e76\u652f\u6301\u67e5\u8be2\u533a\u95f4\u548c\uff0c\u5373\u53ef\u901a\u8fc7\u6b64\u9898\u3002\n\n\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u6211\u4eec\u9700\u8981\u5728\u4ee5\u4e0a\u63cf\u8ff0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u627e\u5230\u533a\u95f4\u5185\u8fd9\u6837\u7684\u4e00\u4e9b\u6570\u3002\n\n\u6211\u4eec\u5c1d\u8bd5\u7528\u53e6\u4e00\u79cd\u65b9\u5f0f\u63cf\u8ff0\u8981\u6c42\u7684\u4e0b\u6807\uff0c\u5148\u9884\u5904\u7406\u51fa\u6240\u6709 **\u6709\u7ea6\u6570** \u4e3a $k$ \u7684\u4e0b\u6807\u4f4d\u7f6e\uff0c\u5c06\u5176\u585e\u8fdb\u4e00\u4e2a\u7f16\u53f7\u4e3a $k$ \u7684\u5e73\u8861\u6811\u4e2d\uff0c\u5e73\u8861\u6811\u4e2d\u4ece\u5c0f\u5230\u5927\u7ef4\u62a4\u7684\u662f $a_i$ \u4e3a $k$ \u7684\u500d\u6570\u7684\u6240\u6709\u4e0b\u6807 $i$ \u3002\u9884\u5904\u7406\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt {\\max\\{a_i\\}})$ \u3002\n\n\u5f53\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u4e2d\u4e3a $x$ \u7684\u500d\u6570\u7684\u6240\u6709\u503c\u65f6\uff0c\u6211\u4eec\u53d6\u51fa\u5e73\u8861\u6811\u4e2d\u503c\u7684\u8303\u56f4\u5728 $[l,r]$ \u4e4b\u95f4\u7684\u6240\u6709\u5143\u7d20\u3002\u672c\u4eba\u5b9e\u73b0\u672c\u9898\u6240\u7528\u7684\u5e73\u8861\u6811\u4e3a FHQ Treap \uff0c\u5728\u4ee3\u7801\u5b9e\u73b0\u4e2d\u5373\u4e3a\u4e24\u6b21 ```split``` \u64cd\u4f5c\u53d6\u51fa\u4e2d\u95f4\u7684\u4e00\u6bb5\uff0c\u904d\u5386\u8fd9\u68f5 BST \uff0c\u5c06\u6240\u6709\u5bf9\u5e94\u7684\u6570\u9664\u4ee5 $x$ \uff0c\u5982\u679c\u5176\u4ecd\u6ee1\u8db3\u7ee7\u7eed\u5b58\u5728\u7684\u6761\u4ef6\uff08\u9664\u4e4b\u540e\u7684\u6570\u4ecd\u4e3a $x$  \u7684\u500d\u6570\uff09\uff0c\u5219\u7ee7\u7eed\u5c06\u5176\u5e76\u5165\u5e73\u8861\u6811\u4e2d\u3002\n\n\u5c06\u4e00\u4e2a\u5b50\u6811\u4e2d\u6240\u6709\u53ef\u4ee5\u5e76\u5165\u5e73\u8861\u6811\u4e2d\u7684\u503c\u5e76\u5165\u5e73\u8861\u6811\u7684\u64cd\u4f5c\u4e3a\uff1a\u53d6\u51fa\u8fd9\u4e9b\u5e73\u8861\u6811\u4e2d\u7684\u7ed3\u70b9\uff0c\u4e00\u6b21\u6027 $O(n)$ \u5efa\u6811\u5c06\u5176\u4f5c\u4e3a\u4e2d\u95f4\u503c\u548c\u503c\u57df\u5728 $[1,l-1]$ \u548c $[l+1,r]$ \u7684\u4e24\u68f5\u5b50\u6811 ```merge``` \u5728\u4e00\u8d77\u3002\n\n\u7136\u800c\uff0c\u5728\u5c06\u4e00\u4e2a\u503c\u9664\u4ee5 $x$ \u540e\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5176\u9664\u4ee5\u53e6\u4e00\u4e2a\u503c\u65f6\u4e0d\u80fd\u9664\u5c3d\u3002\u5728\u904d\u5386\u5230\u8fd9\u4e2a\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u4e0d\u5bf9\u5176\u8fdb\u884c\u5904\u7406\uff0c\u76f4\u63a5\u4e0d\u5c06\u5176\u5e76\u5165\u5e73\u8861\u6811\u4e2d\u5373\u53ef\uff0c\u590d\u6742\u5ea6\u4ecd\u7136\u80fd\u591f\u4fdd\u8bc1\u3002\n\n\u5728 **\u4e00\u4e9b\u4f18\u5316** \u90fd\u8fdb\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u6b64\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt {\\max\\{a_i\\}} +m\\log_2 n\\log_2 \\max\\{a_i\\})$ \u3002\n\n## \u4e00\u4e9b\u4f18\u5316\n\n\u5728\u5efa\u6811\u65f6\uff0c\u7531\u4e8e FHQ Treap \u662f\u68f5 **\u7b1b\u5361\u5c14\u6811** \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 $O(n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u8fdb\u884c\u5efa\u6811\u3002\uff08 $n$ \u4e3a\u5c06\u8981\u5efa\u6811\u7684\u7ed3\u70b9\u6570\uff09\n\n\u6216\u8005\u4f60\u53ef\u4ee5\u50cf\u672c\u4eba\u4ee3\u7801\u5b9e\u73b0\u4e2d\u4e00\u6837\uff0c**\u5229\u7528 FHQ Treap \u7684\u968f\u673a\u4f18\u5148\u7ea7\u53ea\u662f\u4e3a\u4e86\u4f7f```merge```\u64cd\u4f5c\u66f4\u52a0\u968f\u673a\u7684\u6027\u8d28\uff0c\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684\u65b9\u6cd5\u5efa\u6811\uff0c\u5e76\u968f\u673a\u8d4b\u503c\u4f18\u5148\u7ea7\uff0c\u4ecd\u7136\u80fd\u4fdd\u8bc1\u5efa\u6811\uff08 $O(n)$ \uff09\u548c\u5176\u4ed6\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff08 $O(\\log_2n)$ \uff09** \u3002\n\n\u5728\u7ef4\u62a4\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u548c\u7684\u6570\u636e\u7ed3\u6784\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e38\u6570\u66f4\u5c0f\u7684 **\u6811\u72b6\u6570\u7ec4** \u3002\n\n\u5728\u6dfb\u52a0\u4e86\u4e0a\u8ff0\u4f18\u5316\u540e\uff0c\u672c\u4eba\u7684\u4ee3\u7801\u5c31\u8dd1\u5230\u4e86\u6ee1\u5206\u4e3a $100$ \u5206\u7684\u5168\u90e8\u70b9\u90fd\u8bc4\u6d4b\uff08\u5373\u4e00\u5e76\u8bc4\u6d4b\u4e86\u540e\u6765\u6dfb\u52a0\u7684\u603b\u5171 $26$ \u4e2a\u70b9\uff09\u7684 **\u7b2c\u4e8c\u540d** \u3002\n\n## \u4ee3\u7801\u5c55\u793a\n\n```cpp\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#define L (o<<1)\n#define R (o<<1|1)\nusing namespace std;\nconst int maxn=500010;\nint n,m,a[maxn],op,l,r,x;\nvector<int>g[maxn];\nconst int ddd=40000010;\nstruct FHQ\n{\n    int rt[maxn],cnt,lc[ddd],rc[ddd],siz[ddd],val[ddd];\n    void print(int o)\n    {\n        if(!o)return;\n        print(lc[o]);\n        printf(\"%d \",val[o]);\n        print(rc[o]);\n    }\n    void maintain(int o){siz[o]=siz[lc[o]]+siz[rc[o]]+1;}\n    int build(int l,int r,int*p)\n    {\n        if(l>r)return 0;\n        int mid=(l+r)>>1,v=p[mid],ret=newnode(v);\n        lc[ret]=build(l,mid-1,p);\n        rc[ret]=build(mid+1,r,p);\n        maintain(ret);\n        return ret;\n    }\n    int merge(int x,int y)\n    {\n        if(x==0||y==0)return x+y;\n        maintain(x);maintain(y);\n        if(rand()<rand())\n        {\n            rc[x]=merge(rc[x],y);\n            maintain(x);return x;\n        }\n        else\n        {\n            lc[y]=merge(x,lc[y]);\n            maintain(y);return y;\n        }\n    }\n    void split_val(int o,int k,int&x,int&y)\n    {\n        if(!o){x=y=0;return;}\n        if(val[o]<=k)x=o,split_val(rc[o],k,rc[o],y);\n        else y=o,split_val(lc[o],k,x,lc[o]);\n        maintain(o);\n    }\n    void split_siz(int o,int k,int&x,int&y)\n    {\n        if(!o){x=y=0;return;}\n        if(siz[lc[o]]>=k)y=o,split_siz(lc[o],k,x,lc[o]);\n        else x=o,split_siz(rc[o],k-siz[lc[o]]-1,rc[o],y);\n        maintain(o);\n    }\n    int newnode(int v)\n    {\n        cnt++;\n        lc[cnt]=rc[cnt]=0;\n        val[cnt]=v;\n        siz[cnt]=1;\n        return cnt;\n    }\n}st;\ntypedef long long ll;\n/*\nstruct segtree\n{\n    ll sum[maxn];\n    void build(int o,int l,int r)\n    {\n        if(l==r){sum[o]=a[l];return;}\n        int mid=(l+r)>>1;\n        build(L,l,mid);\n        build(R,mid+1,r);\n        sum[o]=sum[L]+sum[R];\n    }\n    void update(int o,int l,int r,int x,int v)\n    {\n        if(l==r){sum[o]=v;return;}\n        int mid=(l+r)>>1;\n        if(x<=mid)update(L,l,mid,x,v);\n        if(x>=mid+1)update(R,mid+1,r,x,v);\n        sum[o]=sum[L]+sum[R];\n    }\n    ll query(int o,int l,int r,int ql,int qr)\n    {\n        if(r<ql||l>qr)return 0;\n        if(ql<=l&&r<=qr)return sum[o];\n        int mid=(l+r)>>1;\n        return query(L,l,mid,ql,qr)+query(R,mid+1,r,ql,qr);\n    }\n}sg;\n*/\n#define lowbit(x) (x&(-x))\nstruct bit\n{\n    ll sum[maxn];\n    void upd(int o,int v){for(int i=o;i<=n;i+=lowbit(i))sum[i]+=v;}\n    ll query(int o){ll ret=0;for(int i=o;i;i-=lowbit(i))ret+=sum[i];return ret;}\n}sg;\nint cur,q[maxn];\nvoid dfs(int x,int v)\n{\n    if(!x)return;\n    if(st.lc[x])dfs(st.lc[x],v);\n    if(a[st.val[x]]%v==0)sg.upd(st.val[x],-a[st.val[x]]),a[st.val[x]]/=v,sg.upd(st.val[x],a[st.val[x]]);\n    if(a[st.val[x]]%v==0)q[++cur]=st.val[x];\n    if(st.rc[x])dfs(st.rc[x],v);\n}\nvoid del(int x,int l,int r)\n{\n    int a,b,c;\n    st.split_val(st.rt[x],r,b,c);\n    st.split_val(b,l-1,a,b);\n    cur=0;int t=0;dfs(b,x);\n    t=st.build(1,cur,q);\n    st.rt[x]=st.merge(a,st.merge(t,c));\n}\ninline int read()\n{\n    int ret=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')ret=((ret+(ret<<2))<<1)+ch-'0',ch=getchar();\n    return ret;\n}\ninline void write(ll x)\n{\n    if(x<10){putchar('0'+x);return;}\n    write(x/10);putchar('0'+(x%10));\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n;i++)a[i]=read();\n    for(int i=1;i<=n;i++)sg.upd(i,a[i]);\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j*j<=a[i];j++)if(a[i]%j==0)\n        {\n            g[j].push_back(i);\n            //st.rt[j]=st.merge(st.rt[j],st.newnode(i));\n            if(j*j!=a[i])g[a[i]/j].push_back(i);\n            //st.rt[a[i]/j]=st.merge(st.rt[a[i]/j],st.newnode(i));\n        }\n    }\n    for(int i=1;i<=500000;i++)\n    {\n        cur=0;\n        for(vector<int>::iterator it=g[i].begin();it!=g[i].end();it++)q[++cur]=*it;\n        st.rt[i]=st.build(1,cur,q);\n    }\n    while(m--)\n    {\n        op=read();l=read();r=read();\n        if(op==2)write(sg.query(r)-sg.query(l-1)),putchar('\\n');\n        else\n        {\n            x=read(); \n            if(x>1)del(x,l,r);\n            //printf(\"sg:\");sg.print(1,1,n);printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1552984761,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "BIT\u505a\u6cd5\n\n---\n\n\u4e00\u4e2atrick\uff1a\n>\u6bcf\u6b21 $a_i\\div k$\uff0c\u6700\u591a\u9700\u8981 $\\log~a$ \u6b21 $a$ \u5c31\u4f1a\u53d8\u6210 $1$\u3002\n\n\u53ef\u4ee5\u8bd5\u7740\u81ea\u884c\u7406\u89e3\uff0c\u4e0d\u7406\u89e3\u7684\u770b\u8fd9\uff1a\n\n$k\\ge 2$ \u6240\u4ee5\u8bf4\u6bcf\u6b21\u6700\u5c11\u4f1a\u4f7f $a_i$ \u6298\u534a\uff0c\u6240\u4ee5\u6700\u591a\u9700\u8981 $\\log~a$ \u6b21 $a$ \u5c31\u4f1a\u53d8\u6210 $1$ \u3002\n\n\u6240\u4ee5\u8bf4\u4fee\u6539\u7684\u590d\u6742\u5ea6\u6700\u591a\u5c31 $O(n\\log a_i)$ \u3002\n\n\u6240\u4ee5\u8bf4\u53ea\u8981\u628a\u67e5\u8be2\u590d\u6742\u5ea6\u63a7\u5236\u5728\u5355\u6b21 $O(\\log n)$ \u5c31\u884c\u3002\n\n\u533a\u95f4\u6c42\u548c\uff0c\u5355\u6b21 $O(\\log n)$ \uff0c\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\n\n**\u6811\u72b6\u6570\u7ec4\uff01**\n\n\u53ef\u662f\u2026\u2026\u4fee\u6539\u5230\u5e95\u600e\u4e48\u6539\u5462\uff1f\n\n\u524d\u6587\u8bf4\u8fc7\uff0c\u4fee\u6539\u7684\u590d\u6742\u5ea6\u6700\u591a\u5c31 $O(n\\log a_i)$ \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u8981\u4fee\u6539\u7684\u6570\uff0c**\u5355\u70b9\u4fee\u6539**\uff08\u800c\u4e0d\u662f\u533a\u95f4\uff09\n\n\u6700\u5927\u7684\u95ee\u9898\uff0c\u5982\u4f55\u627e\u5230\u8981\u4fee\u6539\u7684\u6570\uff1f\n\n\u5f00 $500000$ \u4e2a vector\uff0c\u7b2c $i$ \u4e2a vector \u8868\u793a\u5305\u542b\u56e0\u6570 $i$ \u7684\u5143\u7d20\u7684\u4e0b\u6807\uff0c\u53ef\u4ee5\u4f7f\u5176\u6709\u5e8f\uff0c\u4f7f\u7528\u4e8c\u5206\u6cd5\uff08STL\u91cc\u7684lower_bound\u548cupper_bound\uff09\u627e\u5230\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u66b4\u529b\u904d\u5386\u5176\u95f4\u7684\u5143\u7d20\uff0c\u66b4\u529b\u9664\uff0c\u66b4\u529b\u5728BIT\u4e2d\u4fee\u6539\u5373\u53ef\u3002\n\n\u4f46\u662f\u8981\u6ce8\u610f\uff1a**\u5220\u9664\u5df2\u7ecf\u4e0d\u5305\u542b\u56e0\u6570 $i$ \u7684\u5143\u7d20**\n\n\u6015\u4ec0\u4e48\uff0c\u76f4\u63a5\u66b4\u529b\u627e\u7528erase\u51fd\u6570\u3002\n\n\u601d\u8def\u6ca1\u4e86\u3002\n\n---\n\n**\u522b\u7740\u6025\u53bb\u5199\u4ee3\u7801** ~~\uff08\u60a8\u8fd8\u6ca1\u70b9\u8d5e\u5462\uff09~~\n\nerase\u6b63\u5411\u5220\u6570\u4f1a\u51fa\u73b0\u95ee\u9898\uff01\n\n\u5220\u9664\u4e00\u4e2a\u6570\u540e\u540e\u9762\u7684\u6570\u4e0b\u6807\u90fd\u4f1a $-1$\uff0c\u6240\u4ee5\u5220\u7b2c\u4e8c\u4e2a\u7684\u65f6\u5019\u90a3\u91cc\u5df2\u7ecf\u4e0d\u662f\u8981\u5220\u7684\u6570\u4e86\u3002\n\n\u5904\u7406\u65b9\u6cd5\u7b80\u5355\uff0c\u53cd\u5411\u5220\u6570\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5230\u4e4b\u540e\u5220\u7684\u6570\u3002\n\nACcode:\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\n//\nlong long read()\n{\n    long long in=0;short f=1;\n    char c=getchar();\n    while (c>'9'||c<'0')\n    {if(c=='-') f=-1;c=getchar();break;} \n    while (c>='0'&&c<='9') \n    {in=in*10+c-'0';c=getchar();}\n    return in*f;\n}\nvoid write(long long x)  \n{  \n    if (x==0){putchar('0');return;}\n    if(x<0) {putchar('-');x=-x;}\n    if(x<10) {putchar(x+'0');return;}\n    short num=0; char c[30];\n    while(x) c[++num]=(x%10)+48,x/=10;\n    while(num) putchar(c[num--]);\n}\n//\u5feb\u8bfb\u5feb\u5199 \n#define lowbit(x) (x&(-x))\nlong long tree[100008];\nint n;\nlong long get_sum(int wh)\n{\n\tlong long ans=0;\n\tfor(;wh;wh-=lowbit(wh)) ans+=tree[wh];\n\treturn ans;\n}\nvoid add(int wh,long long v)\n{\n\tfor(;wh<=n;wh+=lowbit(wh)) tree[wh]+=v;\n}\n//\u6811\u72b6\u6570\u7ec4 \n#define vit vector<int>::iterator\nint a[100008],m;\nvector<int>ys[500008];\nvector<vit>t;\nint main()\n{\n\tn=read();m=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tfor(register int j=1;j*j<=a[i];j++)\n\t\t{\n\t\t\tif(a[i]%j==0)\n\t\t\t{\n\t\t\t\tys[j].push_back(i);\n\t\t\t\tif(a[i]!=j*j) ys[a[i]/j].push_back(i);  \n\t\t\t}\n\t\t}\n\t\tadd(i,a[i]);\n\t}\n\twhile(m--)\n\t{\n\t\tshort opt=read();\n\t\tswitch(opt)\n\t\t{\n\t\t\tcase 1:\n\t\t\t{\n\t\t\t\tint l=read(),r=read(),x=read();\n\t\t\t\tt.clear();\n\t\t\t\tif(x==1||ys[x].empty()) continue;\n\t\t\t\tvit l2=lower_bound(ys[x].begin(),ys[x].end(),l);\n\t\t\t\tvit r2=upper_bound(ys[x].begin(),ys[x].end(),r);\n\t\t\t\tif(l2==ys[x].end()) continue;\n\t\t\t\tfor(vit it=l2;it!=r2;it++)\n\t\t\t\t{\n\t\t\t\t\tif(a[*it]%x!=0) continue;\n\t\t\t\t\tadd(*it,-(a[*it]-a[*it]/x));\n\t\t\t\t\ta[*it]/=x;\n\t\t\t\t\tif(a[*it]%x!=0) t.push_back(it);\n\t\t\t\t}\n\t\t\t\tif(!t.empty()) \n\t\t\t\t{\n\t\t\t\t\tfor(int i=t.size()-1;i>=0;i--) ys[x].erase(t[i]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2:\n\t\t\t{\n\t\t\t\tint l=read(),r=read();\n\t\t\t\twrite(get_sum(r)-get_sum(l-1));\n\t\t\t\tputchar('\\n');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u5feb\u53bbAC\u52a0\u5f3a\u7248\uff1a[P5610](https://www.luogu.com.cn/problem/P5610)\n\n[My solution](https://www.luogu.com.cn/blog/242524/solution-p5610)\n\n~~\u70b9\u8d5e\uff0c\u70b9\u8d5e\uff0c\u4e00\u5b9a\u8981\u70b9\u8d5e~~\n",
        "postTime": 1609421874,
        "uid": 242524,
        "name": "JRzyh",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "## ~~\u524d\u8a00\u7684\u524d\u8a00~~\n\n\u7b97\u662f\u5728\u521d\u4e00\u7ed3\u675f\u4e4b\u524d\u505a\u4e86\u4e00\u9053$Ynoi$\u7684\u6bd2\u7624\u9898\u4e86\u5427\u3002\u3002\u3002\n\n\u4e5f\u7b97\u4e86\u5374\u4e86\u4e00\u4e2a\u5fc3\u613f\u5427\u3002\n\n## \u524d\u8a00\n\n\u4f5c\u4e3a\u4e00\u4e2a\u73c2\u5b66\u5bb6\u770b\u5230\u8fd9\u9898\u5c31\u7acb\u4e86\u4e2a$flag$\u8981$A$\u6389\u5b83\n\n\u7136\u540e\u8fd9\u9898\u4ea4\u4e8649\u904d\u624d\u8fc7~~\u8fd9\u4e48\u6d6a\u8d39\u8bc4\u6d4b\u673a\u8d44\u6e90\u4f1a\u4e0d\u4f1a\u88ab\u6253~~ \n\n\u6362\u4e86\u4e09\u56db\u79cd\u65b9\u6cd5\n\n\u6700\u540e\u88ab\u6700\u540e\u4e00\u4e2a\u70b9\u5361\u4e86\u5341\u51e0\u6b21\n\n\u540e\u6765\u4e00\u6012\u4e4b\u4e0b\u628a\u80fd\u6362$int$\u7684$long long$\u6362\u4e86\u5c31\u8fc7\u4e86(~~\u5927\u96fe~~)\n\n## \u6b63\u6587\n\n#### \u524d\u7f6e\u829d\u58eb\uff1a\u7ebf\u6bb5\u6811 $vector$ $iterator$ \n\n\u4e00\u5f00\u59cb\u6211\u662f\u6839\u636e\u5b98\u65b9\u9898\u89e3\u7684\u65b9\u6cd5\u6765\u505a\u7684\n\n\u7136\u800c\u672c\u849f\u84bb\u4e0d\u4f1a\u5e73\u8861\u6811 \n\n\u53ea\u80fd\u66b4\u529b\u5206\u89e3\u56e0\u5b50\u518d\u66b4\u529b\u67e5\u8be2\n\n\u7ed3\u679c\u4e0d\u65ad\u5361\u5e38\u8fd8\u662f\u53ea\u6709$43-58 pts$\n\n~~\u56e0\u4e3a\u6211\u6bd4\u8f83\u559c\u6b22\u7ebf\u6bb5\u6811\u6240\u4ee5\u6211\u5199\u7684\u7ebf\u6bb5\u6811~~\n\n```cpp\n#pragma GCC optimize(\"O3\")\n#pragma GCC optimize(\"Ofast\")//\u8bf7\u5ffd\u7565\u8fd9\u90e8\u5206\n#include<bits/stdc++.h>\n#define rint register int\n#define N 100005\n#define Num 500005\ntypedef long long ll;\nll input[N],n,m;\nstd::vector<ll> f[Num];//\u5b58\u50a8\u6bcf\u4e2a\u6570\u7684\u56e0\u5b50\ninline ll read(){//\u5feb\u8bfb\n    ll x=0;\n    char ch=getchar();\n    while(!isdigit(ch))\n     ch=getchar();\n    while(isdigit(ch))\n     x=(x<<3)+(x<<1)+(ch^48),\n      ch=getchar();\n    return x;\n}\nnamespace Segment_Tree{//\u7ebf\u6bb5\u6811\u6a21\u677f\n    struct Tree{\n        ll l,r,val;\n    }tree[N<<2];\n    void build(ll index,ll l,ll r){\n        tree[index].l=l;\n    \ttree[index].r=r;\n        if(l==r){\n            tree[index].val=input[l];\n    \t\treturn;\n    \t}\n        ll mid=l+r>>1;\n    \tbuild(index<<1,l,mid);\n    \tbuild(index<<1|1,mid+1,r);\n    \ttree[index].val=tree[index<<1].val+tree[index<<1|1].val;\n    \treturn;\n    }\n    void sub(ll index,ll dis,ll k){\n    \ttree[index].val-=k;\n        if(tree[index].l==tree[index].r)\n         return;\n        if(dis<=tree[index<<1].r)\n         sub(index<<1,dis,k);\n        if(dis>=tree[index<<1|1].l)\n         sub(index<<1|1,dis,k);\n    }\n    ll ask(ll index,ll l,ll r){\n    \tif(tree[index].l>=l&&tree[index].r<=r)\n    \t  return tree[index].val;\n    \tll mid=tree[index].l+tree[index].r>>1,ans=0;\n    \tif(l<=mid)\n    \t ans+=ask(index<<1,l,r);\n        if(r>mid)\n    \t ans+=ask(index<<1|1,l,r);\n        return ans;\n    }\n}\nusing namespace Segment_Tree;\ninline void trace(ll num){//\u66b4\u529b\u5206\u89e3\u56e0\u5b50\n    ll top=std::sqrt(num);\n    for(rint i=2;i<=top;++i){\n        if(num%i)\n         continue;\n        f[num].push_back(i);\n    }\n    ll count=f[num].size();\n    for(rint i=count;i<count*2;++i)\n     f[num].push_back(num/f[num][i-count]);\n    f[num].push_back(num);\n    return;\n}\ninline void find(ll l,ll r,ll k){//\u533a\u95f4\u9664\n    if(k==1)\n     return;\n    for(rint i=l;i<=r;++i){\n        ll key=INT_MAX;\n        for(rint j=0;j<f[input[i]].size();++j){//\u66b4\u529b\u67e5\u627e\n            if(f[input[i]][j]==k){\n                key=j;\n                break;\n            }\n        }\n        if(key==INT_MAX)\n         continue;\n        ll t=input[i];\n        input[i]/=k;\n        sub(1,i,t-input[i]);//\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\n    }\n    return;\n}\nint main(){\n    //freopen(\"input.txt\",\"r\",stdin);\n    for(rint i=2;i<=500000;++i)\n     trace(i); //\u5206\u89e3\u56e0\u5b50\n    n=read(),m=read();\n    for(rint i=1;i<=n;++i)\n     input[i]=read();\n    build(1,1,n);\n    for(rint i=1;i<=m;++i){\n        ll q=read();\n        switch(q){\n            case 1:{\n                //printf(\"it's question 1.\\n\");\n                ll l=read(),r=read(),k=read();\n                find(l,r,k);\n                break;\n            }\n            case 2:{\n                //printf(\"it's question 2.\\n\");\n                ll l=read(),r=read();\n                printf(\"%lld\\n\",ask(1,l,r));\n                break;\n            }\n        }\n    }\n}\n```\n\n\u7136\u540e\u63a5\u4e0b\u6765\u4e00\u6574\u5929\u672c\u849f\u84bb\u90fd\u5728\u8003\u8651\u600e\u4e48\u4f18\u5316\n\n\u79bb\u7ebf\u5206\u89e3\u4e5f\u83ab\u540d\u5176\u5999T\u6389\n\n\u5e73\u8861\u6811\u6211\u53c8\u4e0d\u4f1a\n\n\u53ea\u80fd\u6362\u4e00\u79cd\u505a\u6cd5\n\n\u4e8e\u662f\u6211\u628a\u5e0c\u671b\u5bc4\u6258\u4e8e\uff1a\n\n## vector\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$input[i]$\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a$vector$\uff0c\u5b83\u4eec\u7684\u503c\u90fd\u662f$input[i]$\u7684\u56e0\u5b50\uff0c**\u5373$f[i][j]$\u5b58\u7684\u662f\u6240\u6709\u662fi\u7684j\u500d\u6570\u7684\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807**\uff0c\u5728\u8f93\u5165\u7684\u65f6\u5019\u76f4\u63a5\u4e0e\u5904\u7406\u597d\n\n\u4f46\u662f\u5982\u679c\u66b4\u529b\u679a\u4e3e\u8fd8\u662f\u4f1aT\u6389\n\n\u8fd9\u662f\u6211\u4eec\u5c31\u8981\u5f15\u8fdb\u4e24\u4e2a$STL$\u81ea\u5e26\u51fd\u6570\uff1a\n\n$lower$ $bound$\n\n$upper$ $bound$\n\n$lower$ $bound$\u548c$upper$  $bound$\u90fd\u662f\u5229\u7528\u4e8c\u5206\u67e5\u627e\u7684\u65b9\u6cd5\u5728\u4e00\u4e2a\u6392\u597d\u5e8f\u7684\u6570\u7ec4\u4e2d\u8fdb\u884c\u67e5\u627e\u7684\u3002\n\n\u5728\u4ece\u5c0f\u5230\u5927\u7684\u6709\u5e8f\u6570\u7ec4\u4e2d\uff0c\n\n$lower$ $bound(begin,end,num)$\uff1a\u4ece\u6570\u7ec4\u7684$begin$\u4f4d\u7f6e\u5230$end-1$\u4f4d\u7f6e\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u6216\u7b49\u4e8e$num$\u7684\u6570\u5b57\uff0c\u627e\u5230\u8fd4\u56de\u8be5\u6570\u5b57\u7684\u5730\u5740\uff0c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de$end$\u3002\n\n$upper$ $bound(begin,end,num)$\uff1a\u4ece\u6570\u7ec4\u7684$begin$\u4f4d\u7f6e\u5230$end-1$\u4f4d\u7f6e\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e$num$\u7684\u6570\u5b57\uff0c\u627e\u5230\u8fd4\u56de\u8be5\u6570\u5b57\u7684\u5730\u5740\uff0c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de$end$\u3002\n\n\u8fd9\u548c\u8fd9\u91cc\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\n\n#### $lower$ $bound(f[k].begin(),f[k].end(),l)$\u5230$upper$ $bound(f[k].begin(),f[k].end(),r)$\u521a\u597d\u5c31\u662f\u8fd9\u4e2a\u8981\u6539\u53d8\u7684\u533a\u95f4\uff01\n\n\u4f46\u662f\u56e0\u4e3a$lower$ $bound$ \u548c $upper$ $bound$ \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u6240\u4ee5\u8981\u7528$iterator$($STL$\u8fed\u4ee3\u5668\uff0c\u73c2\u4ee5\u7406\u89e3\u4e3a$STL$\u7684\u6307\u9488)\u6765\u5b58\u50a8\n\n\u9664\u5b8c\u4e4b\u540e\u6211\u4eec\u8981\u5220\u9664\u5176\u4ed6\u6d88\u5931\u7684\u56e0\u5b50\n\n\u8fd9\u65f6\u6211\u4eec\u5c31\u8981\u5f15\u8fdb\u4e00\u4e2a\u795e\u5947\u7684\u4e1c\u897f\uff1a$vector$\u81ea\u5e26\u7684$erase$\n\n\u4f46\u662f$erase$\u6b63\u5411\u5220\u6570\u4f1a\u51fa\u73b0\u95ee\u9898(\u5220\u9664\u4e00\u4e2a\u6570\u540e\u540e\u9762\u7684\u6570\u4e0b\u6807\u90fd\u4f1a $-1$)\uff0c\u6240\u4ee5\u8981\u53cd\u5411\u5220\u6570\uff0c\u8fd9\u4e2a\u5176\u4ed6\u9898\u89e3\u5df2\u8fd1\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u81f3\u6b64\u6211\u4eec\u6709\u4e86\u6ee1\u5206\u7684$AC$\u4ee3\u7801\uff1a\n\n# \u796d\u4e0a\u4ee3\u7801\n\n```cpp\n#pragma GCC optimize(\"O3\")\n#pragma GCC optimize(\"O2\")\n#pragma GCC optimize(\"Ofast\")//\u540c\u4e0a\n#include<bits/stdc++.h>\n#define rint register int\n#define N 100005\n#define Num 500005\ntypedef long long ll;\nint input[N],n,m;\nstd::vector<int> f[Num];//\u5b58\u50a8\u56e0\u5b50\nstd::vector<int>::iterator p1,p2,it;\nstd::vector<std::vector<int>::iterator> del;//\u5b58\u50a8\u8981\u5220\u9664\u7684\u6570\ninline void write(ll x){//\u5feb\u5199\n     if(x>9) \n      write(x/10);\n     putchar(x%10+'0');\n}\ninline int read(){//\u5feb\u8bfb\n    int x=0;\n    char ch=getchar();\n    while(!isdigit(ch))\n     ch=getchar();\n    while(isdigit(ch))\n     x=(x<<3)+(x<<1)+(ch^48),\n      ch=getchar();\n    return x;\n}\nnamespace Segment_Tree{//\u7ebf\u6bb5\u6811\u6a21\u677f\n    struct Tree{\n        int l,r;\n        ll val;\n    }tree[N<<2];\n    void build(int index,int l,int r){\n        tree[index].l=l;\n    \ttree[index].r=r;\n        if(l==r){\n            tree[index].val=input[l];\n    \t\treturn;\n    \t}\n        int mid=l+r>>1;\n    \tbuild(index<<1,l,mid);\n    \tbuild(index<<1|1,mid+1,r);\n    \ttree[index].val=(ll)(tree[index<<1].val+tree[index<<1|1].val);\n    \treturn;\n    }\n    void sub(int index,int dis,int k){\n    \ttree[index].val-=k;\n        if(tree[index].l==tree[index].r)\n         return;\n        if(dis<=tree[index<<1].r)\n         sub(index<<1,dis,k);\n        if(dis>=tree[index<<1|1].l)\n         sub(index<<1|1,dis,k);\n    }\n    ll ask(int index,int l,int r){\n    \tif(tree[index].l>=l&&tree[index].r<=r)\n    \t  return tree[index].val;\n    \tint mid=tree[index].l+tree[index].r>>1;\n        ll ans=0;\n    \tif(l<=mid)\n    \t ans+=ask(index<<1,l,r);\n        if(r>mid)\n    \t ans+=ask(index<<1|1,l,r);\n        return ans;\n    }\n}\nusing namespace Segment_Tree;\ninline void trace(int index,int num){//\u5206\u89e3\u56e0\u5b50\n    for(rint i=1;i*i<=num;++i){\n        if(num%i)\n         continue;\n        f[i].push_back(index);\n        if(num/i^i)\n         f[num/i].push_back(index);\n    }\n}\ninline void find(int l,int r,int k){\n    if(k==1||f[k].empty()) //\u526a\u679d\n     return;\n    p1=std::lower_bound(f[k].begin(),f[k].end(),l);\n    p2=std::upper_bound(f[k].begin(),f[k].end(),r);//\u67e5\u627e\u533a\u95f4\n    if(p1==f[k].end())//\u526a\u679d\n     return;\n    del.clear();\n    for(it=p1;it!=p2;++it){//\u66b4\u529b\u66f4\u65b0\u56e0\u5b50\n        if(input[*it]%k)\n         continue;\n        int val=input[*it],w=val/k;\n        sub(1,*it,input[*it]-input[*it]/k);\n        input[*it]/=k;\n        val=input[*it];\n        if(val%k)\n         del.push_back(it);\n    }\n    for(rint i=del.size()-1;i>0;--i)\n     f[k].erase(del[i]); //\u66b4\u529b\u5220\u9664\u6570\n}\nint main(){\n    n=read(),m=read();\n    for(rint i=1;i<=n;++i)\n     input[i]=read(),trace(i,input[i]);//\u8bfb\u5165\u987a\u4fbf\u5904\u7406\n    build(1,1,n);//\u5efa\u6811\n    while(m--){\n        int q=read();\n        switch(q){\n            case 1:{\n                int l=read(),r=read(),k=read();\n                find(l,r,k);\n                break;\n            }\n            case 2:{\n                int l=read(),r=read();\n                write(ask(1,l,r));\n                putchar('\\n');\n                break;\n            }\n        }\n    }\n}\n```\n$7.30$ $update$ \u4fee\u6539\u4e86\u4e00\u4e2a\u5c0f\u9519\u8bef\uff0c\u589e\u52a0\u4e86\u4e00\u4e9b\u8bf4\u660e",
        "postTime": 1559568687,
        "uid": 157603,
        "name": "\u5343\u53cd\u7530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "\u9996\u5148\u6b63\u5982\u5b98\u65b9\u9898\u89e3\u6240\u8ff0\u201c\u74f6\u9888\u5728\u4e8e\u5982\u4f55\u627e\u51fa\u6240\u6709\u8be5\u88ab/\u7684\u6570\u800c\u4e0d\u5728\u4e8e\u5982\u4f55\u7ef4\u62a4\u201d\u3002\n\n\u8003\u8651\u79bb\u7ebf\u6765\u5b8c\u6210\u8fd9\u4e00\u6b65\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c$(id=\u8fd9\u662f\u7b2c\u51e0\u4e2a\u8be2\u95ee\uff0cl,r,x)$\uff0c\u5728$l$\u5904\u6dfb\u52a0$x$\uff08\u5177\u4f53\u64cd\u4f5c\u662f\u7528\u4e00\u4e2a`set<int> e[A+5];`\uff0c\u5e76`e[x].insert(id)`\uff09\u7136\u540e\u5728$r+1$\u5904\u6dfb\u52a0$x$\u7684\u5220\u9664\u6807\u8bb0\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e2a\u6570\u53d7\u54ea\u4e9b\u8be2\u95ee\u7684\u5f71\u54cd\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a$a_i$\uff0c\u5c06\u5b83\u7684\u56e0\u5b50\uff08\u5728500000\u4ee5\u5185\u6700\u591a200\u4e2a\uff09\u5bf9\u4e8e\u7684`set<int>`\u7684`\\*begin()`\u53d6\u51fa\u6765\uff0c\u4ee5\u8be2\u95ee\u7684\u5148\u540e\u987a\u5e8f\u4e3a\u5173\u952e\u5b57\u5efa\u7acb\u4e00\u4e2a\u5806\u3002\u7136\u540e\u6a21\u62df$a_i$\u4e0d\u65ad\u9664\u52301\u7684\u60c5\u51b5\uff0c\u5982\u679c\u5f53\u524d\u5806\u9876\u7684\u6570\u5bf9\u5e94\u7684x\u4ecd\u7136\u662f$a_i$\u7684\u56e0\u5b50\uff0c\u90a3\u4e48\u5c31\u628a\u5806\u9876\u7684\u8fed\u4ee3\u5668++\u540e\u6254\u56de\u5806\u4e2d\uff0c\u5426\u5219\u5f39\u6389\u5806\u9876\uff0c\u8fd9\u6837\u505a\u9884\u5904\u7406\u65f6n\\*(\u5efa\u7acb\u5927\u5c0f\u4e3ad\u7684\u5806\u7684\u65f6\u95f4+d\u6b21pop+(logw\u7b49\u4e8e19)\u6b21push)\u7684\u590d\u6742\u5ea6\u3002\n\n\u5982\u679c\u76f4\u63a5\u7528\u666e\u901a\u7684\u5806\uff0c\u90a3\u4e48\u662f$ndlogd$\u3002\u5b9e\u6d4b\u5e38\u6570\u4e0d\u662f\u592a\u5927\u7684\u8bdd\uff0c\u662f\u80fdAC\u7684\uff0c~~\u5c3d\u7ba1\u51fa\u9898\u4eba\u626c\u8a00\u6709\u7a7a\u4e86\u8981\u5361\u6389\u8fd9\u79cd\u7b97\u6cd5~~\u3002\n\n\u6ce8\u610f\u5230pop\u7684\u6b21\u6570\u8fdc\u5927\u4e8epush\u7684\u6b21\u6570\uff0c\u8003\u8651\u5feb\u901f($O(n)$)\u5efa\u7acb\uff0c\u5feb\u901f($\u5355\u6b21O(1)$)pop\uff0c\u6162\u901f\uff08\u5355\u6b21$O(logn)$\uff09push\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\u7136\u800c\u8fd9\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u56e0\u4e3a\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u662f$O(nlogn)$\u7684\uff0c\u800c\u503c\u57df\u53c8\u662f500000\u3002\n\n\u5982\u679c\u4e0d\u8003\u8651\u5feb\u901f\u5efa\u7acb\uff0c\u90a3\u4e48\u5e73\u8861\u6811\u662f\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u6307\u5411\u524d\u9a71\u540e\u7ee7\u7684\u6307\u9488\u5373\u53ef\u3002\n\n\u5176\u5b9e\u5e73\u8861\u6811\u5728\u539f\u5e8f\u5217\u6709\u5e8f\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd$O(n)$\u5efa\u7acb\uff0c\u7136\u800c\u6bcf\u6b21\u76f4\u63a5`sort`\u4f1a\u591alog\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e00\u70b9\uff0c\u628a\u6240\u6709\u5143\u7d20\u79bb\u7ebf\u4e0b\u6765\uff08\u79bb\u7ebf\u5957\u79bb\u7ebf\uff0c\u79bb\u7ebf\u7b97\u6cd5\u7684\u5b50\u7b97\u6cd5\u4ecd\u8981\u79bb\u7ebf\uff0c\u6709\u8da3\uff09\uff0c\u7136\u540e\u57fa\u6570\u6392\u5e8f\u5373\u53ef\u3002\n\n\u5c31\u8fd9\u6837\uff0c\u57fa\u6570\u6392\u5e8f+\u5e73\u8861\u6811+`set`+`vector`+\u6811\u72b6\u6570\u7ec4\u603b\u7b97\u8fbe\u5230\u4e86std\u7684\u590d\u6742\u5ea6\uff0c\u7136\u800c\u5df2\u7ecf\u4e0d\u60f3\u5199\u4e86\u3002\n\n\u636e\u8bf4\u539f\u59cb\u5e73\u8861\u6811\u7248\u672c\u7684std\u67094\u52305K\uff0c\u53ef\u80fd\u4e0d\u6bd4\u6211\u8fd9\u79cd\u7b97\u6cd5\u597d\u591a\u5c11\uff1f\n\n\u53ef\u662f\u5206\u5757\u7248\u672c\u7684std\u53c8\u5feb\u53c8\u77ed\u3002\n\n\u6211\u8fd9\u79cd\u7b97\u6cd5\u4e5f\u53ea\u80fd\u662f\u5a31\u4e50\u5927\u4f17\u4e86\u3002\n\n\u4e0b\u9762\u662f\u6211\u539f\u59cb\u7684$ndlogd$\u7684\u4ee3\u7801\n\n\n```cpp\n#pr\\\nagma GCC optimize(\"O2\")\n#include<vector>\n#include<set>\n#include<cstdio>\n#include<cctype>\n#include<queue>\nusing namespace std;\ntypedef long long ll;\ninline void read(int&x){\n    char c=getchar();\n    for(;!isdigit(c);c=getchar());\n    for(x=0;isdigit(c);c=getchar())x=x*10+c-48;\n}\nconst int N=100005,A=500000;\nvector<int> d[A+5],b[N];\nvector<pair<int,int> > op[N];\nset<int> e[A+5];\nset<int>::iterator it;\nint n,i,m,l[N],r[N],x[N],o[N],a[N],y,j,k,z;\nll s[N];\ninline void add(int i,int x){for(;i<=n;i+=i&-i)s[i]+=x;}\ninline ll query(int i){register ll ans=0;for(;i;i-=i&-i)ans+=s[i];return ans;}\nstruct node{\n    int id;\n    set<int>::iterator it;\n    bool operator<(const node&rhs)const{\n        return *it>*rhs.it;\n    }\n}xx;\nstruct pq{\n    static const int N=450;\n    int l[N],r[N],rt,d[N],q[N],t,w,t2;\n    node v[N];\n    int merge(int x,int y){\n        if(!x || !y)return x|y;\n        if(v[x]<v[y])t2=x,x=y,y=t2;\n        r[x]=merge(r[x],y);\n        if(d[r[x]]>d[l[x]])t2=l[x],l[x]=r[x],r[x]=t2;\n        d[x]=d[r[x]]+1;\n        return x;\n    }\n    inline void ini(){t=1,w=0;}\n    inline void pb(const node&x){\n        v[++w]=x;l[w]=r[w]=0;d[w]=1;q[w]=w;\n    }\n    inline void ini2(){\n        for(;t<w;t+=2)q[++w]=merge(q[t],q[t+1]);rt=q[w];\n    }\n    const node& top(){return v[rt];}\n    inline void pop(){rt=merge(l[rt],r[rt]);}\n    inline bool empty(){return !rt;}\n    inline bool push(const node&x){\n        v[++w]=x;l[w]=r[w]=0;d[w]=1;rt=merge(rt,w);\n    }\n}qq;\nint main(){\n    //freopen(\"1.txt\",\"r\",stdin);freopen(\"2.txt\",\"w\",stdout);\n    read(n),read(m);\n    for(i=1;i<=n;++i)read(a[i]),add(i,a[i]);\n    for(i=2;i<=A;++i)\n        for(j=i;j<=A;j+=i)d[j].push_back(i);\n    for(i=1;i<=m;++i){\n        read(o[i]);read(l[i]);read(r[i]);\n        if(o[i]==1)read(x[i]),b[l[i]].push_back(i),b[r[i]+1].push_back(i);\n    }\n    for(i=1;i<=n;++i){\n        for(j=0;j<(int)b[i].size();++j){\n            y=b[i][j];\n            if(i==l[y])e[x[y]].insert(y);\n                else e[x[y]].erase(y);\n        }\n        qq.ini();\n        for(j=0;j<(int)d[a[i]].size();++j){\n            y=d[a[i]][j];\n            if(!e[y].empty())qq.pb((node){y,e[y].begin()});\n        }\n        qq.ini2();\n        for(y=a[i];!qq.empty() && y>1;){\n            xx=qq.top();qq.pop();\n            it=xx.it;j=*it;\n            if(y%x[j]==0){\n                y/=x[j];\n                op[j].push_back(make_pair(i,y));\n                if(++it!=e[xx.id].end())qq.push((node){xx.id,it});\n            }\n        }\n    }\n    for(i=1;i<=m;++i){\n        for(j=0;j<(int)op[i].size();++j){\n            y=op[i][j].first,z=op[i][j].second;\n            add(y,z-a[y]);a[y]=z;\n        }\n        if(o[i]==2)printf(\"%lld\\n\",query(r[i])-query(l[i]-1));\n    }\n    return 0;\n}\n                    \n                    \n```\n",
        "postTime": 1511793280,
        "uid": 19567,
        "name": "zx2003",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "\u672c\u9898\u662f P5610 \u7684\u79bb\u7ebf\u7248\u53cc\u500d\u7ecf\u9a8c\uff0c\u4f7f\u7528\u8be5\u9898\u505a\u6cd5\u5220\u9664\u5728\u7ebf\u7684\u5f02\u6216\u5373\u53ef\u3002\n\n---\n\n\u672c\u9898\u7684\u96be\u70b9\u4e3b\u8981\u5728\u4e8e\u5982\u4f55\u5feb\u901f\u627e\u5230\u9700\u8981\u4fee\u6539\u7684\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u5bf9\u4e8e\u6bcf\u4e2a\u8d28\u6570\u6211\u4eec\u9700\u8981\u4fee\u6539\u7684\u6570\u7684\u4f4d\u7f6e\u7b49\u4fe1\u606f\uff0c\u5feb\u901f\u6c42\u51fa\u9700\u8981\u4fee\u6539\u7684\u6700\u5de6\u4fa7\uff0c\u7136\u540e\u901a\u8fc7\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6307\u9488\u7684\u7ed3\u6784\u4f9d\u6b21\u904d\u5386\uff0c\u5373\u53ef\u5b8c\u6210\u4fee\u6539\u3002\n\n\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u6574\u4e32\u5e8f\u5217\uff0c\u5e76\u4e14\u56e0\u4e3a\u6709\u4fee\u6539\uff0c\u9700\u8981\u652f\u6301\u5355\u70b9\u6539\u548c\u533a\u95f4\u67e5\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e38\u6570\u5c0f\u8fd8\u597d\u5199\u7684\u6811\u72b6\u6570\u7ec4\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u4fbf\u5f97\u51fa\u4e86\u4e00\u79cd\u89e3\u6cd5\u3002\u5728\u6b64\u57fa\u7840\u4e0a\u518d\u5361\u4ebf\u70b9\u70b9\u5e38\u6570\u5373\u53ef\u3002\n\n---\n\n\u603b\u7ed3\u4e00\u4e0b\uff1a\u6211\u4eec\u7ef4\u62a4\u5e76\u67e5\u96c6\u548c\u6811\u72b6\u6570\u7ec4\uff0c\u5e76\u67e5\u96c6\u7528\u6765\u5feb\u901f\u6c42\u51fa\u6240\u6709\u9700\u8981\u4fee\u6539\u7684\u70b9\uff0c\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u4fee\u6539\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u5728\u7a0b\u5e8f\u6700\u5f00\u59cb\u9700\u8981\u5bf9\u6240\u6709\u6570\u8fdb\u884c\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{x}+n\\log{n}\\times\\alpha(n))$\u3002\n\n---\n\n\u4e3b\u8981\u4ee3\u7801\uff08\u5df2\u5220\u9664\u8c03\u8bd5\u90e8\u5206\uff09\uff1a\n\n```cpp\nnamespace BIT {\n\tll s[N];\n\tvoid modify(int u, int x) {for(;u<=n;u+=u&(-u)) s[u] += x;}\n\tll query(ll u) {ll res = 0; for(;u;u-=u&(-u)) res += s[u]; return res;}\n}\nnamespace DSU {\n\tvector<int> fa[N], fa2[N];\n\tint find(int u, int v) {return (v == ll(fa2[u].size()) || v == fa2[u][v]) ? v : fa2[u][v] = find(u, fa2[u][v]);}\n}\nusing DSU::fa;\nusing DSU::fa2;\n\nvoid init() {\n\tn = read(); m = read();\n\tfor(int i=1;i<=n;i++) {\n\t\ta[i] = read();\n\t\tint _ = sqrt(a[i]);\n\t\tfor(int j=1;j<=_;j++) {\n\t\t\tif(!(a[i] % j)) {\n\t\t\t\tfa[j].push_back(i);\n\t\t\t\tfa2[j].push_back(fa2[j].size());\n\t\t\t\tif(j * j < a[i]) {\n\t\t\t\t\tfa[a[i]/j].push_back(i);\n\t\t\t\t\tfa2[a[i]/j].push_back(fa2[a[i]/j].size());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tBIT::modify(i, a[i]);\n\t}\n}\nvoid modify(int l, int r, int x) {\n\tint pos = lower_bound(fa[x].begin(), fa[x].end(), l) - fa[x].begin();\n\tfor(int i=DSU::find(x,pos);i<ll(fa[x].size())&&fa[x][i]<=r;i=DSU::find(x,i+1)) {\n\t\tif(!(a[fa[x][i]] % x)) {\n\t\t\tint _ = fa[x][i];\n\t\t\tBIT::modify(_, a[_]/x-a[_]);\n\t\t\ta[_] /= x;\n\t\t}\n\t\tif(a[fa[x][i]] % x) fa2[x][i] = i + 1;\n\t}\n}\nll query(int l, int r) {return BIT::query(r) - BIT::query(l-1);}\n```",
        "postTime": 1600433665,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "\u8fd9\u662f\u5bf9\u5b98\u65b9\u9898\u89e3\u7684\u4e00\u4e2a\u8865\u5145\uff08\u8c8c\u4f3c\u76ee\u524d\u9898\u89e3\u91cc\u5c31\u6211\u6309\u7167\u5b98\u65b9\u9898\u89e3\u601d\u8def\u6765\u7684\uff09\u3002\n\n\u9996\u5148\u770b\u5230\u5b98\u65b9\u9898\u89e3\uff08\u89c1\u6700\u5e95\u4e0b\u7684\u9898\u89e3\uff09\uff0c\u76f4\u63a5\u5bf9\u5176\u8fdb\u884c\u6a21\u62df\uff0c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a\n\n\n```cpp\nint main()\n{\n    cin >> N >> M;\n    for(int i = 1, j; i <= N; ++i) {\n        scanf(\"%d\", A + i);\n        Modify(i, A[i]);\n        for(j = 2; j * j < A[i]; ++j)\n            if(A[i] % j == 0)\n                S[j].insert(i), S[A[i] / j].insert(i);\n        if(j * j == A[i])\n            S[j].insert(i);\n        S[A[i]].insert(i);\n    }\n\n    for(int o, l, r, x; M--; ) {\n        scanf(\"%d%d%d\", &o, &l, &r);\n        if(o == 2)\n            printf(\"%lld\\n\", Query(r) - Query(l - 1));\n        else {\n            scanf(\"%d\", &x);\n            for(set<int>::iterator it = S[x].lower_bound(l); it != S[x].end() && *it <= r; ) {\n                int    i = *it, &t = A[i];\n                if(t % x) {\n                    S[x].erase(it++);\n                    continue;\n                }\n                if(t / x % x)\n                    S[x].erase(it++);\n                else\n                    ++it;\n                Modify(i, t / x - t);\n                t /= x;\n            }\n        }\n    }\n\n    return 0;\n}\n```\n\u5176\u4e2d\uff0cS[]\u4e3aset<int>\uff0cModify\u548cQuery\u4e3a\u6811\u72b6\u6570\u7ec4\u7684\u51fd\u6570\u3002\n\n\u8fd9\u6837\uff0c\u53ef\u4ee5\u62ff\u523044~56pts.\n\n\n\u63a5\u7740\u6211\u4eec\u8003\u8651\u4f18\u5316\u3002\n\n\u2460\u628aset\u6539\u6210\u624b\u5199\u5e73\u8861\u6811\uff08\u6211\u7528\u7684\u662ftreap\uff09\u3002\n\n\u2461\u6211\u4eec\u53d1\u73b0\u5e76\u4e0d\u662f\u6240\u6709\u7684\u56e0\u5b50\u90fd\u8981\u7528\u5230\uff0c\u53ea\u9700\u8981\u7528\u5230\u9898\u76ee\u4e2d\u9700\u8981\u67e5\u8be2\u7684\u56e0\u5b50\u3002\u6545\u79bb\u7ebf\u7531500000\u68f5\u4f18\u5316\u4e3am\u68f5\u3002\n\n\u2462IO\u4f18\u5316\u7b49\u5404\u79cd\u5361\u5e38\u6280\u5de7\u3002\uff08#pragma GCC optimize(2) (\u5212\u6389)\uff09\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u62ff\u523088~92pts.\n\n\n\u7136\u540e\uff0c\u6211\u4eec\u518d\u8003\u8651\u4f18\u5316\uff1a\n\n\u2463\u5206\u89e3\u56e0\u6570\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u9700\u8981\u6bcf\u6b21\u90fd\u679a\u4e3e\u5230$\\sqrt{a_i}$\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u6570\u7684\u56e0\u5b50\uff0c\u6839\u636e\u8c03\u548c\u7ea7\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6\u4e3a$O(m ln number)$.\n\n\u2464\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u68f5\u5e73\u8861\u6811\u63d2\u5165\u7684\u5e8f\u5217\u662f\u53ef\u4ee5\u63d0\u524d\u786e\u5b9a\u7684\uff0c\u6545\u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884cinsert\uff0c\u6211\u4eec\u5148\u628a\u6bcf\u68f5\u5e73\u8861\u6811\u7684\u5143\u7d20\u9884\u5904\u7406\u51fa\u6765\uff08\u56e0\u6570\u5206\u89e3\u65f6\u8bb0\u5f55\uff0c\u5e76\u4e14\u53ef\u4ee5\u4fdd\u8bc1\u6709\u5e8f\uff09\uff0c\u63a5\u7740\u7528$O(size)$\u8fdb\u884cbuild\u5373\u53ef\u3002\n\n\n\u901a\u8fc7\u8fd9\u51e0\u4e2a\u4f18\u5316\uff0c\u5373\u53ef\u901a\u8fc7\u6b64\u9898\u3002\uff08\u4e3a\u4e86\u51cf\u5c0f\u9898\u89e3\u7684\u4ee3\u7801\u957f\u5ea6\uff0c\u6211\u5220\u9664\u4e86IO\u4f18\u5316\u548c\u5185\u5b58\u6c60\u7b49\u5185\u5bb9\u7684\u4ee3\u7801\uff09\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long    ll;\nconst size_t        MaxN = 100005, MaxNumber = 500005;\n\nint        N, M;\nint        A[MaxN], O[MaxN], L[MaxN], R[MaxN], X[MaxN], X0[MaxN], Cnt;\nint        ID[MaxNumber];\nvector<int>    Fac[MaxNumber];\nll        C[MaxN];\n\n//treap\nstruct node {\n    int    key, fix;\n    node    *ch[2];\n\n    node(int val, int last): key(val), fix(last + rand())\n    { ch[0] = ch[1] = nullptr; }\n} *root[MaxN];\n\ninline void rotate(node *&o, const int& d)\n{\n    node    *u = o->ch[d];\n    o->ch[d] = u->ch[d ^ 1], u->ch[d ^ 1] = o;\n    o = u;\n}\n\nvector<int>    Treap[MaxN];\nvoid build(node *&o, const vector<int>& a, const int& l, const int& r, const int& last)\n{\n    if(l > r)\n        return;\n    int    m = l + r >> 1;\n    o = new node(a[m], last);\n    \n    build(o->ch[0], a, l, m - 1, o->fix);\n    build(o->ch[1], a, m + 1, r, o->fix);\n}\n\nvector<int>    buf;\nvoid DFS(node *o, const int& l, const int& r)\n{\n    if(!o)\n        return;\n    if(o->key < l)\n        DFS(o->ch[1], l, r);\n    else if(o->key > r)\n        DFS(o->ch[0], l, r);\n    else\n        buf.push_back(o->key), DFS(o->ch[0], l, r), DFS(o->ch[1], l, r);\n}\n\nvoid erase(node *&o, const int& val)\n{\n    if(!o)\n        return;\n    if(o->key == val) {\n        if(!o->ch[0])\n            o = o->ch[1];\n        else if(!o->ch[1])\n            o = o->ch[0];\n        else {\n            int    d = o->ch[1]->fix < o->ch[0]->fix;\n            rotate(o, d);\n            erase(o->ch[d ^ 1], val);\n        }\n    } else {\n        int    d = val > o->key;\n        erase(o->ch[d], val);\n    }\n}\n//treap end\n\nvoid modify(int x, const int& val)\n{\n    for(; x <= N; x += x & -x)\n        C[x] += val;\n}\n\nll query(int x)\n{\n    ll    ret = 0;\n    for(; x; x ^= x & -x)\n        ret += C[x];\n    return ret;\n}\n\nint main()\n{\n    srand(19260817U);\n\n    cin >> N >> M;\n    for(int i = 1; i <= N; ++i) {\n        scanf(\"%d\", A + i);\n        modify(i, A[i]);\n    }\n\n    for(int i = 1; i <= M; ++i) {\n        scanf(\"%d%d%d\", O + i, L + i, R + i);\n        if(O[i] == 1) {\n            scanf(\"%d\", X + i);\n            X0[++Cnt] = X[i];\n        }\n    }\n\n    sort(X0 + 1, X0 + Cnt + 1);\n    Cnt = unique(X0 + 1, X0 + Cnt + 1) - X0;\n    for(int i = 1; i != Cnt; ++i) {\n        int    &t = X0[i];\n        if(t == 1)\n            continue;\n        ID[t] = i;\n        for(int j = t; j <= 500000; j += t)\n            Fac[j].push_back(i);\n    }\n\n    for(int i = 1; i <= N; ++i)\n        for(auto j: Fac[A[i]])\n            Treap[j].push_back(i);\n    for(int i = 1; i != Cnt; ++i)\n        build(root[i], Treap[i], 0, Treap[i].size() - 1, -2147483648);\n\n    buf.reserve(N);\n    for(int i = 1; i <= M; ++i) {\n        int    &o = O[i], &l = L[i], &r = R[i], &x = X[i];\n        if(o == 2)\n            printf(\"%lld\\n\", query(r) - query(l - 1));\n        else {\n            int    k = ID[x];\n            buf.clear();\n            DFS(root[k], l, r);\n            for(auto i: buf) {\n                int    &t = A[i];\n                if(t % x) {\n                    erase(root[k], i);\n                    continue;\n                }\n                if(t / x % x)\n                    erase(root[k], i);\n                modify(i, t / x - t);\n                t /= x;\n            }\n        }\n    }\n\n    return 0;\n}\n```",
        "postTime": 1511954579,
        "uid": 3144,
        "name": "\u6d6e\u5c18ii",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "![](http://www.akuziti.com/mb/cache/159670583162239.png)\n\n**\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389\uff01**\n\n___________________\n\n\u8003\u8651\u5230\u4e00\u4e2a\u6570 $x$ \u5982\u679c\u88ab\u9664\u4e86\u4e00\u6b21\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a $< \\frac{x}{2}$\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u6570 $a[i]$ \u88ab\u9664\u7684\u6b21\u6570\u4e00\u5b9a\u4f1a $<\\log a[i]$\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u7528\u5355\u70b9\u4fee\u6539\u800c\u4e0d\u662f\u533a\u95f4\u4fee\u6539\uff08\u56e0\u4e3a\u6bcf\u6b21\u4fee\u6539\u80fd\u591f\u88ab\u6574\u9664\u7684\u70b9\u6240\u9700\u8981\u7684\u65f6\u95f4\u4e3a $O(n\\log n)$\uff0c\u662f\u80fd\u8fc7\u7684\uff09\u3002\n\n\u7136\u540e\u8fd9\u9898\u5c31\u7ed3\u675f\u4e86\uff1f\u4e0d\uff01\u8fdc\u8fdc\u6ca1\u6709\u3002\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\u4e00\u4e2a\u533a\u95f4\u4e2d\u6709\u54ea\u4e9b\u70b9\u80fd\u591f\u88ab\u8bfb\u5165\u7684 $x$ \u6574\u9664\u3002\u90a3\u6211\u4eec\u80fd\u600e\u4e48\u529e\u5462\uff1f\n\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a $x\\in (2,\\sqrt{\\max{a[i]}})$ \u90fd\u5f00\u4e00\u68f5\u5e73\u8861\u6811\uff0c\u4f1a\u5f00\u4e00\u4e2a $root$ \u6570\u7ec4\uff0c\u5176\u4e2d\u4ee5  $rt[x]$ \u4e3a\u6839\u5e73\u8861\u6811\u4e2d\u6240\u6709\u7684\u6570\u90fd\u662f\u80fd\u591f\u88ab $x$ \u6574\u9664\u7684\u3002\u800c\u8fd9\u4e2a\u5e73\u8861\u6811\uff0c\u6211\u4eec\u9009\u62e9\u4f7f\u7528 fhqtreap\uff0c\u56e0\u4e3a\u5b83\u6bd4 splay \u66f4\u5feb\uff0c\u4f17\u6240\u5468\u77e5\uff0c Ynoi \u5361\u5e38\u5341\u5206\u4e25\u91cd\uff08\u867d\u7136\u8fd9\u9898\u4e0d\u662f\u5f88\u5361\u5e38\u6570\uff09\u3002\n\n\u5f53\u6211\u4eec\u8981\u4fee\u6539\u65f6\uff0c\u6211\u4eec\u5148\u8bfb\u5165 $l,r,x$\uff0c\u7136\u540e\u6211\u4eec\uff0c\u628a\u4ee5 $rt[x]$ \u4e3a\u6839\u7684\u5e73\u8861\u6811\u5206\u88c2\uff08split\uff09\u4e00\u4e0b\uff0c\u5206\u6210\u4e09\u90e8\u5206\uff0c$1-(l-1),l-r,(r+1)-n$\u3002\n\n\u7136\u540e\u6211\u4eec\u627e\u5230\u4e2d\u95f4\uff08\u4e5f\u5c31\u662f $l-r$\uff09\u90a3\u4e00\u90e8\u5206\uff0c\u5e76\u4e14\u5c06\u8fd9\u4ee5\u90e8\u5206\u4e2d\u7684\u5143\u7d20\u90fd\u627e\u5230\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u80fd\u591f\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u6c42\u548c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4e14\u8d8a\u5feb\u8d8a\u597d\uff0c\u90a3\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u4e86~\n\n\u603b\u7684\u590d\u6742\u5ea6\u662f $O(n\\sqrt{\\max{a[i]}}+n\\log n\\log(\\max{a[i]}))$\uff0c\u5e94\u8be5\u662f\u52c9\u5f3a\u80fd\u8fc7\u7684\n\n\u51e0\u4e2a\u7ec6\u8282\uff1a\n\n1.\u6811\u72b6\u6570\u7ec4\u90a3\u91cc\u8981\u5f00 $long\\ long$\n\n2.\u6211\u4eec\u4e00\u5b9a\u8981\u7279\u5224\u662f\u5426\u80fd\u591f\u6574\u9664\uff0c\u6bd4\u5982\u4e00\u4e2a24\u9664\u5b8c6\u4e4b\u540e\u5b83\u5c31\u4e0d\u518d\u662f3\u7684\u500d\u6570\u4e86\uff0c\u4f46\u5b83\u8fd8\u57283\u7684\u90a3\u68f5\u5e73\u8861\u6811\u4e2d\u3002\n\n3.\u8fd9\u9898\u7531\u4e8e\u8981\u5f00\u5f88\u591a\u68f5\u5e73\u8861\u6811\uff0c\u7a7a\u95f4\u5361\u7684\u5f88\u6b7b\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u8fdb\u884c\u201c\u5e9f\u7269\u5229\u7528\u201d\uff0c\u5373\u5c06\u5df2\u7ecf\u88ab\u5220\u9664\u7684\u70b9\u7684\u4e0b\u6807\u56de\u6536\u8d77\u6765\uff0c\u7528 $re$ \u6570\u7ec4\u50a8\u5b58\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u6a21\u62df\u6808\u7684\u65b9\u5f0f\u91cd\u65b0\u5229\u7528\u3002\n\n4.\u4e00\u5b9a\u8981\u5224\u4e00\u4e0b `if(k==1) continue;`\u8981\u4e0d\u7136\u4f1a $T$ \u6389\u3002\n\n\u4e0b\u9762\u8bf7\u89c1\u5b8c\u6574\u4ee3\u7801\uff0c\u5982\u679c\u8fd8\u6709\u4e0d\u61c2\u7684\u53ef\u4ee5\u770b\u6ce8\u91ca\n\n```\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int NR=5e5+10;\nconst int MR=34e6+10;\nint n,m; \nint mx=0;//\u627e\u5230a[i]\u4e2d\u7684\u6700\u5927\u503c\nint tot,len;//\u5206\u522b\u8868\u793a\u76ee\u524d\u7684\u603b\u8282\u70b9\u6570\u4ee5\u53ca\u5efa\u6811\u7684\u65f6\u5019\u7684\u957f\u5ea6 \nint a[NR],q[NR];//\u5206\u522b\u8868\u793a\u8bfb\u5165\u7684a[i]\u5df2\u7ecf\u5efa\u6811\u65f6\u7684\u90a3\u4e2a\u6570\u7ec4 \nint rt[NR],son[MR][2];//rt[x]\u5c31\u662f\u6211\u89e3\u91ca\u4e2d\u7684rt\uff0c\u4e5f\u5c31\u662f\u90a3\u4e2a\u80fd\u6574\u9664x\u7684\u5e73\u8861\u6811\u7684\u6839 \nint val[MR],siz[MR];//val[u]\u8868\u793au\u5bf9\u5e94\u5728a[i]\u6570\u7ec4\u7684\u4e0b\u6807\uff0csiz\u8868\u793afhq\u4e2d\u7684\u5b50\u6811\u7684\u7ed3\u70b9\u6570 \nint re[MR],resiz;//re\u56de\u6536\u7ed3\u70b9\u7684\u6570\u7ec4\uff0cresiz\u662f\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u90fd\u51e0\u4e2a\u5f85\u56de\u6536\u7684\u7ed3\u70b9 \nll c[NR];//\u8fd9\u4e2a\u6570\u6811\u72b6\u6570\u7ec4\u7684\u6570\u7ec4 \nvector<int> ys[NR];//\u7528\u4e00\u4e2avector\u7edf\u8ba1\u56e0\u6570 \n\nint lowbit(int x){//\u6811\u72b6\u6570\u7ec4\u6807\u914dlowbit \n\treturn x&(-x);\n}\n\nvoid add(int x,ll val)//\u6811\u72b6\u6570\u7ec4\u5355\u70b9\u4fee\u6539\u51fd\u6570 \n{\n\twhile(x<=n)\n\t{\n\t\tc[x]+=val;\n\t\tx+=lowbit(x);\n\t}\n}\n\nll query(int x)//\u67e5\u8be2\u533a\u95f4\u548c \n{\n\tll ans=0;\n\twhile(x)\n\t{\n\t\tans+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\n\nint newnode(int x)//\u65b0\u5efa\u4e00\u4e2a\u7ed3\u70b9 \n{\n\tint u;\n\tif(resiz) u=re[resiz--];//\u5982\u679c\u6709\u5f85\u56de\u6536\u7684\u70b9\uff0c\u5c31\u5e9f\u7269\u5229\u7528 \n\telse u=++tot;//\u5426\u5219\u7ed3\u70b9\u603b\u662f+1 \n\tval[u]=x;siz[u]=1;//\u521d\u59cb\u5316 \n\treturn u;\n}\n\nvoid update(int x){//\u8ba1\u7b97x\u7684siz\u503c \n\tsiz[x]=siz[son[x][0]]+siz[son[x][1]]+1;\n}\n\nint build(int l,int r)//\u7528O(n)\u5efa\u6811\uff0c\u5426\u5219\u53ef\u80fd\u4f1aTLE \n{\n\tif(r<l) return 0;\n\tint mid=(l+r>>1);\n\tint u=newnode(q[mid]);//\u65b0\u5efa\u4e00\u4e2au\u7ed3\u70b9 \n\tson[u][0]=build(l,mid-1);//\u5efa\u5de6\u5b50\u6811 \n\tson[u][1]=build(mid+1,r);//\u5efa\u53f3\u5b50\u6811 \n\tupdate(u);//\u8ba1\u7b97u\u7684siz \n\treturn u;\n}\n\nvoid split(int x,int &u,int &v,int k)//fhqtreap\u7684\u5206\u88c2\u51fd\u6570 \n{\n\tif(!x){u=v=0;return;}\n\tif(val[x]<=k) split(son[u=x][1],son[x][1],v,k);\n\telse split(son[v=x][0],u,son[x][0],k);\n\tupdate(x);\n}\n\nint merge(int u,int v)//fhq\u7684\u5408\u5e76\u51fd\u6570 \n{\n\tif(!u||!v) return u|v;\n\tint root;\n\tif(rand()<rand()) son[root=u][1]=merge(son[u][1],v);\n\telse son[root=v][0]=merge(u,son[v][0]);\n\tupdate(root);\n\treturn root;\n}\n\nvoid dfs(int u,int k)//\u5904\u7406\u64cd\u4f5c1 \n{\n\tif(!u) return;//\u5982\u679c\u5230\u4e86\u53f6\u5b50\uff0c\u76f4\u63a5return \n\tif(son[u][0]) dfs(son[u][0],k);//\u5982\u679c\u5b83\u6709\u5de6\u513f\u5b50\uff0c\u5219\u5c06\u5b83\u5de6\u513f\u5b50\u91cc\u7684\u70b9\u4e5f\u9664\u4e00\u4e0bk \n\tif(a[val[u]]%k==0)//\u5982\u679c\u80fd\u6574\u9664k \n\t{\n\t\tadd(val[u],-a[val[u]]+a[val[u]]/k);//\u76f4\u63a5\u6539\u53d8\u4e00\u4e0b\u8fd9\u4e2a\u503c \n\t\ta[val[u]]/=k;//\u9664\u4e00\u4e0b\uff0c\u65b9\u4fbf\u4e4b\u540e\u5224\u65ad\u662f\u5426\u80fd\u591f\u6574\u9664k \n\t}\n\tif(a[val[u]]%k==0) q[++len]=val[u];//\u5982\u679c\u4ecd\u7136\u80fd\u6574\u9664\uff0c\u91cd\u65b0\u52a0\u5165\u5e73\u8861\u6811 \n\tif(son[u][1]) dfs(son[u][1],k);//\u5982\u679c\u5b83\u6709\u53f3\u513f\u5b50\uff0c\u5219\u5c06\u5b83\u53f3\u513f\u5b50\u91cc\u7684\u70b9\u4e5f\u9664\u4e00\u4e0bk \n\tre[++resiz]=u;//\u5f85\u56de\u6536\u7684\u70b9\u589e\u52a0\u4e00\u4e2a \n\tson[u][0]=son[u][1]=0;//\u60c5\u51b5\u8fd9\u4e9b\u70b9 \n\tsiz[u]=val[u]=0;\n}\n\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch<='9'&&ch>='0'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nint main()\n{\n//\tfreopen(\"1.in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tsrand(15402533);\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tmx=max(mx,a[i]);\n\t\tadd(i,a[i]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j*j<=a[i];j++)\n\t\t{\n\t\t\tif(a[i]%j==0)\n\t\t\t{\n\t\t\t\tys[j].push_back(i);\n\t\t\t\tif(j*j!=a[i]) ys[a[i]/j].push_back(i);\n\t\t\t\t//\u5c06\u56e0\u6570\u52a0\u5165\u8fd9\u4e2avector \n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=2;i<=mx;i++)\n\t{\n\t\tlen=0;\n\t\tfor(vector<int>::iterator it=ys[i].begin();it!=ys[i].end();it++)\n\t\t\tq[++len]=*it;\n\t\trt[i]=build(1,len);\n\t\t//\u5c06vector\u91cc\u7684\u5143\u7d20\u5efa\u6811 \n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint op=read(),l=read(),r=read();\n\t\tif(op==1)\n\t\t{\n\t\t\tint k=read();\n\t\t\tif(k==1) continue;\n\t\t\tint a,b,c;\n\t\t\tsplit(rt[k],a,c,r);\n\t\t\tsplit(a,a,b,l-1);\n\t\t\t//\u5206\u88c2\u6210\u4e09\u90e8\u5206 \n\t\t\tlen=0;\n\t\t\tdfs(b,k);\n\t\t\t//dfs\u4fee\u6539 \n\t\t\tb=build(1,len);\n\t\t\trt[k]=merge(merge(a,b),c);\n\t\t\t//\u5408\u5e76 \n\t\t}\n\t\telse\n\t\t{\n\t\t\tll ans=query(r)-query(l-1);\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t\t//\u8f93\u51fa\u7b54\u6848 \n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1596724195,
        "uid": 97136,
        "name": "chenzida",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "\n> \u5728\u592a\u9633\u897f\u659c\u7684\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7f6e\u8eab\u5929\u4e0a\u4e4b\u68ee\u3002\n> \u7b49\u8fd9\u573a\u6218\u4e89\u7ed3\u675f\u540e\uff0c\u4e0d\u5f52\u4e4b\u4eba\u548c\u671b\u773c\u6b32\u7a7f\u7684\u4eba\u4eec\uff0c\u4eba\u4eba\u672c\u7740\u6b63\u4e49\u4e4b\u540d\u3002\n> \u957f\u5b58\u4e0d\u706d\u7684\u8fc7\u53bb\uff0c\u9010\u6e10\u6d88\u901d\u7684\u672a\u6765\u3002\n> \u6211\u56de\u6765\u4e86\uff0c\u7eb5\u4f7f\u65e5\u8584\u897f\u5c71\uff0c\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\uff0c\n> \u6b64\u65f6\u6b64\u523b\u7684\u5149\u8f89\uff0c\u76fc\u541b\u52ff\u5fd8\u3002\n> \u2014\u2014\u4e16\u4e0a\u6700\u5e78\u798f\u7684\u5973\u5b69\n#### \u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\n5.20\u6765\u5207\u4fe1\u4ef0\u9898\uff01\n\n****\n\n\u8003\u8651\u64cd\u4f5c$1$\uff0c\u6bcf\u6b21\u628a\u4e00\u4e2a\u533a\u95f4\u5185$x$\u7684\u500d\u6570\u9664\u4ee5$x$\n- \u5f53$x=1$\u7684\u65f6\u5019\uff0c\u663e\u7136\u4ec0\u4e48\u90fd\u4e0d\u7528\u505a\n- \u5f53$x\\geq 2$\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u6570\u6700\u574f\u60c5\u51b5\u4e0b\u53ea\u4f1a\u88ab\u9664$\\log$\u6b21\uff08\u6bcf\u6b21\u90fd\u9664$2$\uff09\u5c31\u4f1a\u53d8\u6210$1$\uff0c\u7136\u540e\u5c31\u4e0d\u80fd\u518d\u9664\u4e86\n\n\u6240\u4ee5\u4e00\u5171\u64cd\u4f5c\u6b21\u6570\u6700\u591a\u53ea\u6709$n\\log r$ \u6b21\uff0c\u5176\u4e2d$r=\\max\\{a_i\\}$\uff0c\u5373\u503c\u57df\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u9700\u8981\u8003\u8651\u5982\u4f55\u5feb\u901f\u7684\u627e\u51fa\u533a\u95f4\u5185\u662f$x$\u7684\u500d\u6570\u7684\u6570\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4efb\u610f$a_i\\leq 5\\times 10^5$\uff0c\u4ed6\u6700\u591a\u6700\u591a\u53ea\u80fd\u6709$\\sqrt{a_i}$\u4e2a\u56e0\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7ed9\u6bcf\u4e00\u4e2a\u56e0\u6570\u5efa\u7acb\u4e00\u68f5\u5e73\u8861\u6811\u50a8\u5b58\u6240\u6709\u7684\u6ee1\u8db3$a_i$\u662f\u8fd9\u4e2a\u56e0\u6570\u7684\u500d\u6570\u7684$i$\uff0c\u90a3\u4e48\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5$\\text{FHQ Treap}$\u6309\u7167\u533a\u95f4$split$\u5c31\u53ef\u4ee5\n\n\u8fd9\u4e9b\u5e73\u8861\u6811\u7684\u5efa\u7acb\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u5229\u7528$O(n\\sqrt{r})$\u7684\u65f6\u95f4\u8fdb\u884c\u9884\u5904\u7406\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u80fd\u591f\u652f\u6301 \u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u67e5\u8be2 \u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u5efa\u7acb\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\n\n\u6700\u591a\u5220\u9664$n\\log r$\u6b21\uff0c\u6bcf\u6b21\u9700\u8981\u82b1\u8d39$\\log n$\u7684\u65f6\u95f4\n\n\u90a3\u4e48\u5747\u644a\u4e0b\u6765\u7684\u590d\u6742\u5ea6\u5c31\u662f$O(n\\sqrt r+n\\log n\\log r)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f$O(n\\sqrt r)$\n\n\u5728$n=10^5,r=5\\times 10^5$\uff0c\u65f6\u9650$4s$\uff0c\u7a7a\u95f4\u9650\u5236$1.22GB$\uff08\u8fd9\u662f\u4e2a\u4ec0\u4e48\u6570\uff1f\uff1f\uff1f\uff09\u7684\u60c5\u51b5\u4e0b**\u770b\u4e0a\u53bb**\u53ef\u4ee5\u901a\u8fc7\uff08Ynoi\uff0c\u4f60\u61c2\u7684\n\n\u540c\u65f6\u4e3a\u4e86\u8ffd\u6c42\u6548\u7387\uff0c\u6211\u4eec\u5e94\u8be5\u6bcf\u6b21\u5efa\u6811\u7684\u65f6\u5019\u5efa\u51fa\u4e00\u68f5\u7b1b\u5361\u5c14\u6811\uff0c\u5426\u5219\u4f1a\u6709\u51e0\u4e2a\u70b9T\u6389\uff0c\u6bcf\u6b21\u5c31\u628a\u9700\u8981\u65b0\u5efa\u7684\u90e8\u5206\u5b58\u5230\u6570\u7ec4\u91cc\u9762\u7136\u540e\u66b4\u529b\u5efa\u6811\u5c31\u53ef\u4ee5\uff08\u4e0b\u9762\u7684$build$\u90e8\u5206\uff09\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u5efa\u6811\u662f\u4e25\u683c\u7684$O(n)$\u800c\u4e0d\u4f1a\u6709\u591a\u51fa\u6765\u7684$\\log$\n\n****\n\u505a\u6cd5\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u5751\u8fd8\u662f\u4e0d\u5c11\uff0c\u8fd9\u91cc\u7b80\u5355\u5217\u51e0\u4e2a\u6211\u6389\u8fdb\u53bb\u7684\u5751\u5427\n\n- \u6211\u4eec\u5728\u9884\u5904\u7406\u7684\u65f6\u5019\u4e3a\u4e86\u65b9\u4fbf\u53ef\u4ee5\u62ff\u4e00\u4e2a$vector$\u5b58\u76f8\u5e94\u7684\u4e0b\u6807\u7136\u540e\u518d\u6254\u5230\u5e73\u8861\u6811\u91cc\uff0c\u4f46\u662f\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5fc5\u987b\u4fdd\u8bc1$vector$\u5355\u8c03\u9012\u589e\n- \u5728\u904d\u5386\u533a\u95f4\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5373\u4f7f\u662f\u9664\u4e5f\u9700\u8981\u5148\u5224\u65ad\u80fd\u4e0d\u80fd\u9664\u5c3d\uff08$12$\u5206\u5f88\u53ef\u80fd\u5c31\u662f\u6302\u5728\u8fd9\u91cc\u4e86\uff09\uff0c\u56e0\u4e3a\u6bd4\u5982\u8bf4\u6709\u4e2a$4$\uff0c\u4ed6\u5148\u9664\u4e86\u4e2a$2$\uff0c\u63a5\u4e0b\u6765\u53c8\u8981\u9664$4$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u4ed6\u4e0d\u662f$4$\u7684\u500d\u6570\u4e86\uff0c\u4f46\u662f\u4ed6\u8fd8\u5728$4$\u90a3\u68f5\u5e73\u8861\u6811\u91cc\u9762\n****\n\u5361\u5e38\u7684\u8bdd\uff0c\u5176\u5b9e\u8fd9\u9898\u4e5f\u4e0d\u600e\u4e48\u5361\u5566...\n\n\u5982\u679c\u6700\u540e\u4e24\u4e2a\u70b9T\u4e86\u53ef\u4ee5\u770b\u770b\u662f\u4e0d\u662f\u5199\u4e86`# define int long long`\uff0c\u5c31\u628a\u6811\u72b6\u6570\u7ec4\u5f00longlong\u5c31\u591f\u4e86\uff0c~~\u80fd\u5feb\u4e09\u5206\u4e4b\u4e00~~\n\n\u5199\u5b8c\u8fd9\u9898\u987a\u4fbf\u8fd8\u53ef\u4ee5\u628a\u5927\u5b66\u7ed9A\u4e86\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n# define Rep(i,a,b) for(int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\n\nconst int N=5e5+5;\nconst int M=34e6+5;\n\ntemplate<typename T> void read(T &x){\n   x=0;int f=1;\n   char c=getchar();\n   for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n   for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nint n,m,top;\nint a[N];\nint root[N],tot;\nint q[N],len;\nint son[M][2],siz[M],val[M];\nll bit[N];\nint bin[M],binsiz;\nvector<int> fac[N];\n\nvoid add(int o,int x){\n    for(;o<=n;o+=o&-o)bit[o]+=x;\n}  \n\nll ask(int o){\n    ll res=0;\n    for(;o;o-=o&-o)res+=bit[o];\n    return res;\n}\n\nint newnode(int x){\n    int u=(!binsiz)?++tot:bin[binsiz--];\n    siz[u]=1;\n    val[u]=x;\n    return u;\n}\n\nvoid update(int x){\n    siz[x]=siz[son[x][0]]+siz[son[x][1]]+1;\n}\n\nint build(int l,int r){\n    if(l>r)return 0;\n    int mid=l+r>>1;\n    int u=newnode(q[mid]);\n    son[u][0]=build(l,mid-1);\n    son[u][1]=build(mid+1,r);\n    return update(u),u;\n}\n\nint merge(int u,int v){\n    if(!u||!v)return u|v;\n    int rt;\n    if(rand()<rand())son[rt=u][1]=merge(son[u][1],v);\n    else son[rt=v][0]=merge(u,son[v][0]);\n    return update(rt),rt;\n}\n\nvoid split(int o,int &u,int &v,int k){\n    if(!o){u=v=0;return;}\n    if(val[o]<=k)split(son[u=o][1],son[o][1],v,k);\n    else split(son[v=o][0],u,son[o][0],k);\n    update(o);\n}\n\nvoid del(int &rt,int x){\n    int lft,mid,rht;\n    split(rt,lft,rht,x);\n    split(lft,lft,mid,x-1);\n    rt=merge(lft,rht);\n}\n\nvoid dfs(int u,int k){\n    if(!u)return;\n    if(son[u][0])dfs(son[u][0],k);\n    if(a[val[u]]%k==0)add(val[u],-a[val[u]]+a[val[u]]/k),a[val[u]]/=k;\n    if(a[val[u]]%k==0)q[++len]=val[u];\n    if(son[u][1])dfs(son[u][1],k);\n    bin[++binsiz]=u;\n    son[u][0]=son[u][1]=siz[u]=val[u]=0;\n}\n\nint main()\n{\n    srand(time(0));\n    read(n),read(m);\n    Rep(i,1,n)read(a[i]),top=max(top,a[i]),add(i,a[i]);\n    Rep(i,1,n)\n        for(int j=1;j*j<=a[i];j++)\n            if(a[i]%j==0){\n                fac[j].push_back(i);\n                if(a[i]/j!=j)fac[a[i]/j].push_back(i);\n            }\n    Rep(i,2,top){\n        len=0;\n        for(vector<int>::iterator it=fac[i].begin();it!=fac[i].end();it++)\n            q[++len]=*it;\n        root[i]=build(1,len);\n    }\n    Rep(i,1,m){\n        int opt,l,r,k;\n        read(opt),read(l),read(r);\n        if(opt==1){\n            read(k);\n            if(k==1)continue;\n            int lft,mid,rht;\n            split(root[k],lft,rht,r);\n            split(lft,lft,mid,l-1);\n            len=0;\n            dfs(mid,k);\n            mid=build(1,len);\n            root[k]=merge(merge(lft,mid),rht);\n        }\n        else printf(\"%lld\\n\",ask(r)-ask(l-1));\n    }\n    return 0;\n}\n```\n",
        "postTime": 1589978106,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3  \u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~"
    },
    {
        "content": "\u5728\u592a\u9633\u897f\u659c\u7684\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7f6e\u8eab\u5929\u4e0a\u4e4b\u68ee\u3002\u7b49\u8fd9\u573a\u6218\u4e89\u7ed3\u675f\u4e4b\u540e\uff0c\u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4f17\u4eba\uff0c \u4eba\u4eba\u672c\u7740\u6b63\u4e49\u4e4b\u540d\uff0c\u957f\u5b58\u4e0d\u706d\u7684\u8fc7\u53bb\u3001\u9010\u6e10\u6d88\u901d\u7684\u672a\u6765\u3002\u6211\u56de\u6765\u4e86\uff0c\u7eb5\u4f7f\u65e5\u8584\u897f\u5c71\uff0c\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\uff0c\u6b64\u65f6\u6b64\u523b\u7684\u5149\u8f89\uff0c\u76fc\u541b\u52ff\u5fd8\u3002\u2014\u2014\u4e16\u754c\u4e0a\u6700\u5e78\u798f\u7684\u5973\u5b69 \u73c2\u6735\u8389\n\n\u6ce8\uff1a\u611f\u8c22wxw\u5927\u4f6c\u63d0\u4f9b\u7684hack\u6570\u636e\uff0c\u8fd9\u9898\u6570\u636e\u5b9e\u5728\u5f88\u5947\u8469\u3002\n\n## \u89e3\u9898\u601d\u8def\uff1a\n\n\u8fd9\u9053\u9898\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u9664\u6cd5\uff0c\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u80af\u5b9a\u662f\u505a\u4e0d\u5230\u7684\uff0c\u53ef\u662f\u50cfwxw\u5927\u4f6c\u90a3\u6837\u7684\u5361\u5e38\u53c8\u4e0d\u4f1a\u3002\n\n\u4f46\uff01\u662f\uff01\u8fd9\u53ef\u662f\u4e00\u9053\u4fe1\u4ef0\u9898\uff0c\u600e\u4e48\u53ef\u4ee5\u8f7b\u6613\u653e\u5f03\uff01\n\n\u4e8e\u662f\u6211\u4eec\u53d1\u6325\u778e\u641e\u7cbe\u795e\uff0c\u7ebf\u6bb5\u6811\u80fd\u505a\u5230\u7684\u5f97\u505a\uff0c\u4e0d\u80fd\u505a\u5230\u7684\u4e5f\u5f97\u7ed9\u6211\u505a\uff08\u7ebf\u6bb5\u6811\uff1a\u6211\u62db\u8c01\u60f9\u8c01\u4e86\u6211\uff09\u3002\n\n\u65e2\u7136\u533a\u95f4\u9664\u6cd5\u4e0d\u884c\uff0c\u90a3\u5355\u70b9\u9664\u6cd5\u80af\u5b9a\u662f\u884c\u7684\uff0c\u73b0\u5728\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u5728\u4e00\u4e2a\u533a\u95f4\u5185\u5982\u4f55\u5feb\u901f\u627e\u5230 $x$ \u7684\u500d\u6570\u3002\n\n\u66b4\u529b\u80af\u5b9a\u4e0d\u53ef\u884c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u5f00 $n$ \u4e2a\u52a8\u6001\u6570\u7ec4 $e$\u3002\n\n$e_i$ \u8868\u793a\u80fd\u88ab $i$ \u6574\u9664\u7684\u6240\u6709\u6570\u7684\u7f16\u53f7\uff0c\u7f16\u53f7\u80af\u5b9a\u662f\u9012\u589e\u7684\uff0c\u5c31\u65b9\u4fbf\u6211\u4eec\u4e8c\u5206\u4e86\u3002\n\n\u6bcf\u6b21\u9047\u5230\u9664\u6cd5\uff0c\u5c31\u5728 $e_x$ \u91cc\u5934\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $l$ \u548c\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e $r$ \u7684\u6570\u5b57\uff0c\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u66b4\u529b\u5355\u70b9\u4fee\u6539\u3002\n\n\u4f46\u662f\u6709\u4e2a\u95ee\u9898\uff0c\u4fee\u6539\u5b8c\u4e4b\u540e\u6709\u53ef\u80fd\u5c31\u4e0d\u662f $x$ \u7684\u500d\u6570\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u5f15\u8fdb\u4e00\u4e2a\u7384\u5b66\u4f18\u5316\u3002\n\n\u6bcf\u6b21\u8bb0\u5f55\u64cd\u4f5c $1$ \u9664\u4ee5 $x$ \u7684\u6b21\u6570\uff0c\u5982\u679c\u6b21\u6570\u5f88\u591a\uff0c\u6bcf\u64cd\u4f5c\u4e00\u6b21\u5c31\u5c06\u4e0d\u662f $x$ \u7684\u500d\u6570\u7684\u5220\u9664\u6389\uff0c\u8fd9\u6837\u4ee5\u540e\u66b4\u529b\u4fee\u6539\u80fd\u5feb\u70b9\u3002\n\n\u4e8b\u5b9e\u4e0a $500000$ \u5927\u6982\u9664\u4e2a $19$ \u6b21 $2$ \u5c31\u5dee\u4e0d\u591a\u5230 $1$ \u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u5b8c\u5168\u80fd\u63a5\u53d7\u3002\n\n## AC\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<cstdio>\nusing namespace std;\n#define int long long \nnamespace in { //\u5feb\u8bfb\u6a21\u677f\n#ifdef faster\n\tchar buf[1 << 21], * p1 = buf, * p2 = buf;\n\tinline int getc() { return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2) ? EOF : *p1++; }\n#else\n\tinline int getc() { return getchar(); }\n#endif\n\ttemplate <typename T>inline void read(T& t) {\n\t\tt = 0; int f = 0; char ch = getc(); while (!isdigit(ch)) { if (ch == '-')f = 1; ch = getc(); }\n\t\twhile (isdigit(ch)) { t = t * 10 + ch - 48; ch = getc(); }if (f)t = -t;\n\t}\n\ttemplate <typename T, typename... Args> inline void read(T& t, Args&... args) { read(t); read(args...); }\n}\nvector<int> e[500005];\nint n, m, a[500005], t[500005], tree[2000005];\nstruct node\n{\n\tint op, u, v, w;\n}s[500005];\ninline int find1(int now, int x)//\u4e8c\u5206\n{\n\tint l = 0, r = e[x].size() - 1, ans = -1, mid;\n\twhile (l <= r)\n\t{\n\t\tmid = (l + r) >> 1;\n\t\tif (e[x][mid] >= now)\n\t\t{\n\t\t\tans = mid;\n\t\t\tr = mid - 1;\n\t\t}\n\t\telse l = mid + 1;\n\t}\n\treturn ans;\n}\ninline int find2(int now, int x)\n{\n\tint l = 0, r = e[x].size() - 1, ans = -1, mid;\n\twhile (l <= r)\n\t{\n\t\tmid = (l + r) >> 1;\n\t\tif (e[x][mid] <= now)\n\t\t{\n\t\t\tans = mid;\n\t\t\tl = mid + 1;\n\t\t}\n\t\telse r = mid - 1;\n\t}\n\treturn ans;\n}\ninline void cf(int now, int x)//\u8fd9\u91cc\u662f\u9884\u5904\u7406\uff0c\u5c06\u7b26\u5408\u6761\u4ef6\u7684\u6570\u653e\u8fdb\u52a8\u6001\u6570\u7ec4\u91cc\n{\n\tfor (register int i = 1; i * i <= now; ++i)\n\t{\n\t\tif (now % i == 0)\n\t\t{\n\t\t\te[i].push_back(x);\n\t\t\tif (i * i != now)\n\t\t\t\te[now / i].push_back(x);\n\t\t}\n\t}\n}\ninline void build(int now, int l, int r)//\u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\n{\n\tif (l == r)\n\t{\n\t\ttree[now] = a[l];\n\t\treturn;\n\t}\n\tint mid = (l + r) / 2;\n\tbuild(now * 2, l, mid);\n\tbuild(now * 2 + 1, mid + 1, r);\n\ttree[now] = tree[now * 2] + tree[now * 2 + 1];\n}\ninline void update(int now, int l, int r, int k, int x)\n{\n\tif (l > k || r < k)\n\t\treturn;\n\tif (l == k && r == k)\n\t{\n\t\ttree[now] /= x;\n\t\treturn;\n\t}\n\tint mid = (l + r) / 2;\n\tupdate(now * 2, l, mid, k, x);\n\tupdate(now * 2 + 1, mid + 1, r, k, x);\n\ttree[now] = tree[now * 2] + tree[now * 2 + 1];\n}\ninline int query(int now, int l, int r, int x, int y)\n{\n\tif (l > y || r < x)\n\t\treturn 0;\n\tif (x <= l && r <= y)\n\t\treturn tree[now];\n\tint mid = (l + r) / 2, res;\n\tres = query(now * 2, l, mid, x, y) + query(now * 2 + 1, mid + 1, r, x, y);\n\treturn res;\n}\ninline void divide(int l, int r, int x)\n{\n\tint head = find1(l, x), tail = find2(r, x);\n\tif (head == -1)\n\t\treturn;\n\tfor (register int i = head; i <= tail; ++i)\n\t{\n\t\tint now = e[x][i];\n\t\tif (a[now] % x == 0)\n\t\t\ta[now] /= x, update(1, 1, n, now, x);\n\t\telse if (t[x] >= 10000)//\u8fd9\u91cc\u5c31\u662f\u7384\u5b66\u4f18\u5316\n\t    \te[x].erase(e[x].begin() + i), --i,--tail;\n\t}\n}\nsigned main()\n{\n\tin::read(n, m);\n\tfor (register int i = 1; i <= n; ++i)\n\t{\n\t\tin::read(a[i]);\n\t\tcf(a[i], i);\n\t}\n\tbuild(1, 1, n);\n\tfor (register int i = 1; i <= m; ++i)\n\t{\n\t\tin::read(s[i].op);\n\t\tif (s[i].op == 1)\n\t\t{\n\t\t\tin::read(s[i].u, s[i].v, s[i].w);\n\t\t\t++t[s[i].w];\n\t\t}\n\t\telse\n\t\t\tin::read(s[i].u, s[i].v);\n\t}\n\tfor (register int i = 1; i <= m; ++i)\n\t{\n\t\tif (s[i].op == 1)\n\t\t{\n\t\t\tif (s[i].w == 1)\n\t\t\t\tcontinue;\n\t\t\tdivide(s[i].u, s[i].v, s[i].w);\n\t\t\t--t[s[i].w];\n\t\t}\n\t\telse\n\t\t\tprintf(\"%lld\\n\", query(1, 1, n, s[i].u, s[i].v));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1630223545,
        "uid": 355640,
        "name": "_HMZ_",
        "ccfLevel": 7,
        "title": "P3987 \u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~ \u9898\u89e3"
    },
    {
        "content": "## $\\text{Preface}$\n\n\u524d\u51e0\u5929\u505a\u4e86\u8fd9\u9053\u9898\uff0c\u8bb2\u8bfe\u5c31\u8bb2\u4e86\u4e00\u4e0b\uff0c\u51b3\u5b9a\u6765\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\n\n\u6709\u6ca1\u6709\u5927\u4f6c\u6559\u6559\u6211\u600e\u4e48\u5361\u8fc7 P5610 \u554a/kk\u3002\n\n## [$\\text{Description}$](https://www.luogu.com.cn/problem/P3987)\n\n\u7ed9\u5b9a $n$ \u4e2a\u6570\uff0c\u6709\u5982\u4e0b\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n`1 l r x` \u7ed9 $[l,r]$ \u5185\u4e2d $x$ \u7684\u500d\u6570\u9664\u4ee5 $x$\u3002\n\n`2 l r ` \u67e5\u533a\u95f4\u548c\u3002\n\n$1 \\le n,m \\le 10^5,1\\le a_i,x \\le 5\\times 10^5$\n\n## [$\\text{Solution}$](https://www.luogu.com.cn/paste/905ygoyd)\n\n\u6211\u4eec\u5982\u679c\u5c06\u64cd\u4f5c\u53d8\u6210\uff1a\u5bf9\u4e8e $[l,r]$ \u7684\u6570\u9664\u4ee5 $x$\uff08\u4e0b\u53d6\u6574\uff09\uff0c\u90a3\u8fd9\u9053\u9898\u5c31\u4f1a\u975e\u5e38\u597d\u505a\u3002\u56e0\u4e3a\u53ef\u4ee5\u8bc1\u660e\u7684\u662f\u4e00\u4e2a\u6570\u6700\u591a\u9664\u4ee5 $\\log$ \u6b21\u5c31\u53ef\u4ee5\u9664\u5230 $0$\uff0c\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u4fee\u6539\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c\u533a\u95f4\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7684\u95ee\u9898\u5b9e\u9645\u5728\u4e8e\u5982\u4f55\u7cbe\u51c6\u7684\u627e\u51fa\u4e00\u4e2a\u533a\u95f4\u5185 $[l,r]$ \u7684 $x$ \u7684\u500d\u6570\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u56de\u5934\u770b\u4e00\u773c\u7a7a\u95f4\u9650\u5236\uff1a1.22GB\uff0c\u518d\u770b\u4e00\u773c\u503c\u57df: $x\\in [1,500000]$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u7684\u5bf9\u6bcf\u4e00\u4e2a\u6570\u90fd\u5efa\u4e00\u68f5\u5e73\u8861\u6811\uff08\u5176\u7ed3\u6784\u6709\u70b9\u7c7b\u4f3c\u4e8e\u4e0d\u501f\u52a9\u539f\u6811\u7ed3\u6784\u800c\u76f4\u63a5\u91cd\u65b0\u5efa\u6811\u7684\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811\uff09\u3002\n\n\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662f fhq-treap\u3002\n\n\u6211\u4eec\u5148\u9884\u5904\u7406\uff0c\u5c06\u6bcf\u4e00\u4e2a $a_i$ \u7684\u56e0\u5b50\u6240\u5728\u7684\u5e73\u8861\u6811\u7f16\u53f7\u4e2d\u63d2\u5165 $i$ \u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u5728\u8fd9\u91cc\u63a8\u8350\u7528 $\\Theta(n)$ \u5730\u5efa\u6811\uff08\u6bd5\u7adf\u662f lxl \u7684\u9898\uff09\uff0c\u5177\u4f53\u600e\u4e48\u5efa\u6811\u53ef\u4ee5\u770b\u94fe\u63a5\u91cc\u7684\u4ee3\u7801\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $1$\uff0c\u6211\u4eec dfs $x$ \u5bf9\u5e94\u7684\u5e73\u8861\u6811\uff0c\u5982\u679c\u67d0\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u503c\u662f $x$ \u7684\u500d\u6570\uff0c\u5c31\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u3002\u540c\u65f6\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u68c0\u9a8c\u5176\u662f\u5426\u662f $x$ \u7684\u500d\u6570\uff0c\u5982\u679c\u4e0d\u662f\u5c31\u5220\u9664\u8be5\u8282\u70b9\u3002\n\n\u4f46\u662f\u8fd9\u91cc\u6709\u4e2a\u95ee\u9898\uff1a\u65e2\u7136\u8fd9\u4e2a\u8282\u70b9\u5728 $x$ \u5bf9\u5e94\u7684\u5e73\u8861\u6811\u91cc\uff0c\u96be\u9053\u4e0d\u5e94\u8be5\u662f\u56e0\u4e3a\u4ed6\u662f $x$ \u7684\u500d\u6570\u624d\u53ef\u4ee5\u5417\uff1f\n\n\u5176\u5b9e\u5e76\u4e0d\u662f\u8fd9\u6837\u5b50\uff1a\u5047\u8bbe\u6211\u5148\u8fdb\u884c\u533a\u95f4\u9664\u4ee5 $4$\uff0c\u518d\u8fdb\u884c\u533a\u95f4\u9664\u4ee5 $2$\uff0c\u800c\u5728\u533a\u95f4\u9664\u4ee5 $2$ \u7684\u65f6\u5019\u6709\u7684\u8282\u70b9\u5df2\u7ecf\u88ab\u9664\u4ee5 $4$\uff0c\u53ef\u80fd\u5c31\u4e0d\u518d\u662f $2$ \u7684\u500d\u6570\u4e86\uff0c\u8fd9\u4e00\u6b65\u8d77\u5230\u4e86\u4e00\u4e2a\u7279\u5224\u7684\u4f5c\u7528\uff0c\u540c\u65f6\u4fdd\u8bc1\u4e86\u6b63\u786e\u6027\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $2$\uff0c\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\u5373\u53ef\u3002\n\n\u7ec6\u8282\u89c1\u4ee3\u7801\u3002",
        "postTime": 1617849715,
        "uid": 413147,
        "name": "_Alejandro_",
        "ccfLevel": 0,
        "title": "P3987\u9898\u89e3"
    },
    {
        "content": "\u4e8b\u5b9e\u4e0a\u8fd9\u9053\u9898\u7684\u6b63\u89e3\u662f vector \u3002\u3002\u3002\n\n\u4f60\u4f1a\u53d1\u73b0\u5bfc\u81f4 vector \u590d\u6742\u5ea6\u4e0d\u5bf9\u7684\u662f\u5220\u9664\u64cd\u4f5c\u3002\n\n\u5176\u5b9e\u53ef\u4ee5\u540c\u65f6\u5efa\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u7136\u540e\u5728\u5220\u9664\u6570\u7684\u65f6\u5019\u5408\u5e76\u4e00\u4e0b\u3002\n\n\u5728\u5bfb\u627e\u7684\u65f6\u5019\u968f\u4fbf\u4e8c\u5206\u4e00\u4e0b\uff0c\u7136\u540e\u5229\u7528\u5e76\u67e5\u96c6\u5feb\u901f\u8df3\u8fc7\u88ab\u5220\u9664\u7684\u6570\u3002\n\n\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5e73\u8861\u6811\u662f\u4e00\u6837\u7684\uff0c\u5e38\u6570\u5c0f\uff0c\u7801\u91cf\u5c0f\u3002\n\n\u672c\u6765\u6211\u6253\u7b97\u5728\u52a0\u5f3a\u7248 P5610 \u53d1\u7684\uff0c\u4f46\u662f\u88ab fz \u62a2\u5148\u4e86\u3002\u3002\u3002",
        "postTime": 1587280408,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "### \u8fd9\u91cc\u7ed9\u51fa\u51e0\u79cd\u5f3a\u529b\u7684\u526a\u679d\u64cd\u4f5c\n\n\u76ee\u524d\u8dd1\u5230\u6240\u6709$100$\u5206\u91cc\u7684\u7b2c\u4e8c\u540d\uff0c\u65f6\u95f4\uff1a$2019/09/18$\n\n\u8bbe\u8f93\u5165\u8fdb\u6765\u7684\u662f$a$\u6570\u7ec4\n\n1. \u5f00\u4e00\u4e2a$50$\u4e07\u7684$vector$\uff0c\u6211\u7528$sta$\u8868\u793a\n\n2. \u628a$a[i]$\u5206\u89e3\uff0c\u6c42\u51fa\u5b83\u7684\u6240\u6709$>=2$\u7684**\u7ea6\u6570**\uff08\u5305\u62ec\u5b83\u81ea\u5df1\uff09\n\n3. **\u5bf9\u4e8e\u6bcf\u4e2a$a[i]$\uff0c\u5982\u679c\u5b83\u542b\u6709\u4e00\u4e2a\u7ea6\u6570$x$**\uff0c\u90a3\u4e48\u5c31\u628a $i$ \u4e22\u8fdb$sta[x]$\u91cc\n\n4. \u6267\u884c\u5b8c\u4e0a\u9762\u7684\u64cd\u4f5c\u540e\uff0c\u53ef\u4ee5\u77e5\u9053\uff0c**\u82e5$sta[x]$\u91cc\u9762\u6709\u4e00\u4e2a\u503c $i$ \uff0c\u5219$a[i]$\u4e3a$x$\u7684\u500d\u6570**\n\n5. \u5efa$50$\u4e07\u9897\u5e73\u8861\u6811\uff08\u6211\u7528\u7684$splay$\uff0c\u6ce8\u610f\u7a7a\u95f4\u5f00\u5927\u70b9\uff0c\u6211\u5f00\u4e86$3000$\u4e07\uff09\n\n6. \u4ece$1$\u5230$n$\uff0c\u628a$sta[i]$\u91cc\u5934\u7684\u6570\u503c\uff08\u5373\u4e00\u5806$a$\u6570\u7ec4\u7684\u4e0b\u6807\uff09\u4e22\u8fdb\u5e73\u8861\u6811\u91cc\n\n7. \u7528\u6811\u72b6\u6570\u7ec4\uff08\u5355\u70b9\u4fee\uff0c\u533a\u95f4\u67e5\uff09\u7ef4\u62a4$a$\u6570\u7ec4\u7684\u533a\u95f4\u548c\n\n8. \u8f93\u5165$m$\u4e2a\u64cd\u4f5c\uff0c\u82e5\u64cd\u4f5c\u4e3a\u533a\u95f4\u6c42\u548c\uff0c\u76f4\u63a5\u6811\u72b6\u6570\u7ec4\u8f93\u51fa\u5373\u53ef\n\n9. \u82e5\u64cd\u4f5c\u4e3a\u533a\u95f4\u4fee\u6539\uff0c\u9664\u4ee5\u7684\u6570\u4e3a$x$\uff0c\u5219\u627e\u5230\u7b2c$x$\u9897\u5e73\u8861\u6811\uff0c\u518d\u627e\u5230 $l$ \u7684\u524d\u9a71 $lc$\uff0c\u627e\u5230 $r$ \u7684\u540e\u7ee7 $rc$\uff08\u6ce8\u610f $l$ \u548c $r$ \u662f\u503c\uff0c$lc$ \u548c $rc$ \u662f\u5e73\u8861\u6811\u91cc\u70b9\u7684\u7f16\u53f7\uff09\uff1b\u628a $lc$ \u7ffb\u5230\u6839\u8282\u70b9\uff0c $rc$ \u7ffb\u5230 $lc$ \u53f3\u5b69\u5b50\uff0c\u90a3\u4e48 $rc$ \u7684\u5de6\u5b50\u6811\u5c31\u5305\u542b\u7740(\u4f60\u8981\u9664\u7684(\u90a3\u4e9b\u6570(\u7684\u4e0b\u6807))) ~~\u6ed1\u7a3d\u65ad\u53e5~~\n\n10. \u904d\u5386 $rc$ \u7684\u5de6\u5b50\u6811\uff0c\u53d6\u51fa\u6240\u6709\u7684\u4e0b\u6807\uff0c\u5bf9\u4e00\u4e2a\u503c\u4e3a $i$ \u7684\u4e0b\u6807\uff0c\u53c8\u8fdb\u884c\u4e0b\u5217\u64cd\u4f5c\n\n11. \u82e5$a[i]$\u4e0d\u662f$x$\u7684\u500d\u6570\uff0c\u5219\u5220\u6389\u8fd9\u4e2a\u70b9\uff08\u5e73\u8861\u6811\u7684\u70b9\uff09\uff0c\u5426\u5219\u628a $a[i]$ \u9664\u4ee5 $x$ \u5e76\u4fee\u6539\u6811\u72b6\u6570\u7ec4\u7684\u503c\uff0c\u82e5 $a[i]$ \u9664\u5b8c\u540e\u4e0d\u518d\u662f $x$ \u7684\u500d\u6570\uff0c\u5219\u5220\u6389\u8fd9\u4e2a\u70b9\n\n\u4e3a\u4ec0\u4e48\u4e00\u5f00\u59cb\u5c31\u8981\u5224$a[i]$\u662f\u4e0d\u662f$x$\u7684\u500d\u6570\u5462\uff0c\u5c31\u6bd4\u5982\u6570\u5b57$6$\uff0c\u9664\u5b8c\u4e00\u4e2a$2$\uff0c\u5269\u4e2a$3$\uff0c\u663e\u7136\uff0c\u5b83\u5df2\u7ecf\u4e0d\u662f$6$\u7684\u500d\u6570\u4e86\uff0c\u4f46\u7b2c$6$\u9897\u5e73\u8861\u6811\u91cc\u8fd8\u4fdd\u7559\u7740\u8fd9\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u2026\u2026\u4f60\u61c2\u5f97\u5566\n\n**\u597d\u7684\uff0c\u4e0a\u9762\u662f\u57fa\u672c\u64cd\u4f5c\uff0c\u4e0d\u52a0\u526a\u679d\u4f18\u5316\u4f1aT\uff0cT\u5230\u98de\u8d77**\n\n\u526a\u679d1\uff1a\u5728\u5206\u89e3\u7ea6\u6570\u7684\u65f6\u5019\uff0c\u820d\u5f03$O(\\sqrt n)$\u7684\u5206\u89e3\u65b9\u6cd5\uff0c\u6539\u4e3a\u7528\u7ebf\u7b5b\u9884\u5904\u7406\uff0c$O(logn)$\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u518d\u7528\u9012\u5f52\u7ec4\u5408\u7ea6\u6570\u7684\u65b9\u6cd5\n\n\u526a\u679d2\uff1a\u5220\u5e73\u8861\u6811\u7684\u70b9\u65f6\u5148\u7528\u6808\u5b58\u8d77\u6765\uff0c\u64cd\u4f5c\u7ed3\u675f\u540e\u518d\u5220\u6389\n\n\u526a\u679d3\uff1a\u4e0d\u9700\u8981\u5efa$50$\u4e07\u9897\u5e73\u8861\u6811\uff0c\u7528\u4e00\u4e2a$bool$\u6570\u7ec4\u8bb0\u5f55\u6709\u6ca1\u6709\u5efa\u8fc7\u8fd9\u68f5\u6811\uff0c\u7b49\u5230\u4fee\u6539\u64cd\u4f5c\u7684\u65f6\u5019\u518d\u5efa\u6811\u5373\u53ef\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\n\n$ $ $ $ -1. \u4ee3\u7801\u6253\u6574\u9f50\uff0c\u597d\u8c03\u4e00\u4e9b\n\n0. \u80cc\u597d\u4f60\u7684\u5e73\u8861\u6811\u677f\u5b50\n\n1. $RE$\u7684\u540c\u5b66\u53ef\u80fd\u662f\u56e0\u4e3a\u6570\u7ec4\u5f00\u592a\u5c0f\u4e86\n\n2. $a$\u6570\u7ec4\u91cc\u9762\u6709\u4e00\u4e9b\u503c\u4e3a$0$\u6216$1$\u7684\uff0c\u8981\u8df3\u8fc7\n\n3. \u9664\u4ee5 $x$ \u65f6\uff0c\u82e5 $x$\u4e3a$1$\uff0c\u8df3\u8fc7\n\n4. \u9664\u4ee5 $x$ \u65f6\uff0c\u82e5 $sta[x]$\u4e3a\u7a7a\uff0c\u8df3\u8fc7\n\n5. \u5efa\u5e73\u8861\u6811\u65f6\u591a\u63d2\u5165\u4e24\u4e2a\u54e8\u5175\u8282\u70b9\uff0c\u9632\u7384\u5b66$RE$\n\n6. \u52a0\u4e0a$fread$\u4ee5\u83b7\u5f97\u66f4\u5feb\u7684\u901f\u5ea6\n\n7. \u5341\u5e74$OI$\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00$long$ $long$\u89c1\u7956\u5b97\n\n\u6700\u540e\u4e0a\u4ee3\u7801\uff0c\u590d\u6742\u5ea6$O(nlog^2n)+$\u5de8\u5927\u5e38\u6570\n\n```cpp\n#include<cstdio>\n#include<vector>\n#define R register\nusing namespace std;\ntypedef long long ll;\nint v[500005],pri[100005],tp=0;\nvoid find()\n{\n\tfor(int i=2;i<=500000;i++)\n\t{\n\t\tif(!v[i])\n\t\t{\n\t\t\tpri[++tp]=i;v[i]=i;\n\t\t}\n\t\tfor(int j=1;j<=tp&&i*pri[j]<=500000;j++)\n\t\t{\n\t\t\tv[i*pri[j]]=pri[j];\n\t\t\tif(i%pri[j]==0)break;\n\t\t}\n\t}\n}\nint n,m,tmp=0;\nint a[100005];ll sum[100005];\ninline int lowbit(int x){return x&-x;}\ninline void add(int x,ll k){while(x<=n){sum[x]+=k;x+=lowbit(x);}}\ninline ll getsum(int x){ll ans=0;while(x){ans+=sum[x];x-=lowbit(x);}return ans;}\nvector<int>sta[500005];\nstruct node\n{\n\tint d,f,son[2];\n}tr[30000005];int len=0,rt[500005];\ninline void rotate(int x,int w)\n{\n\tint f=tr[x].f,ff=tr[tr[x].f].f;\n\t\n\ttr[f].son[1-w]=tr[x].son[w];\n\tif(tr[x].son[w]!=0)tr[tr[x].son[w]].f=f;\n\t\n\ttr[x].son[w]=f;tr[f].f=x;\n\t\n\tif(tr[ff].son[0]==f)tr[ff].son[0]=x;\n\telse tr[ff].son[1]=x;\n\ttr[x].f=ff;\n}\ninline void splay(int now,int x,int rot)\n{\n\twhile(tr[x].f!=rot)\n\t{\n\t\tint f=tr[x].f,ff=tr[tr[x].f].f;\n\t\tif(rot==ff)\n\t\t{\n\t\t\tif(tr[f].son[0]==x)rotate(x,1);\n\t\t\telse rotate(x,0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\t if(tr[f].son[0]==x&&tr[ff].son[0]==f){rotate(f,1);rotate(x,1);}\n\t\t\telse if(tr[f].son[1]==x&&tr[ff].son[1]==f){rotate(f,0);rotate(x,0);}\n\t\t\telse if(tr[f].son[0]==x&&tr[ff].son[1]==f){rotate(x,1);rotate(x,0);}\n\t\t\telse if(tr[f].son[1]==x&&tr[ff].son[0]==f){rotate(x,0);rotate(x,1);}\n\t\t}\n\t}\n\tif(rot==0)rt[now]=x;\n}\ninline int findip(int now,int d)\n{\n\tint x=rt[now];\n\twhile(tr[x].d!=d)\n\t{\n\t\tif(d<tr[x].d)\n\t\t{\n\t\t\tif(tr[x].son[0]==0)break;\n\t\t\tx=tr[x].son[0];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(tr[x].son[1]==0)break;\n\t\t\tx=tr[x].son[1];\n\t\t}\n\t}\n\treturn x;\n}\ninline int findqianqu(int now,int d)\n{\n\tint x=findip(now,d);splay(now,x,0);\n\tif(tr[x].d>=d&&tr[x].son[0]!=0)\n\t{\n\t\tx=tr[x].son[0];\n\t\twhile(tr[x].son[1]!=0)x=tr[x].son[1];\n\t}\n\treturn x;\n}\ninline int findhouji(int now,int d)\n{\n\tint x=findip(now,d);splay(now,x,0);\n\tif(tr[x].d<=d&&tr[x].son[1]!=0)\n\t{\n\t\tx=tr[x].son[1];\n\t\twhile(tr[x].son[0]!=0)x=tr[x].son[0];\n\t}\n\treturn x;\n}\nint b[100005],cnt;//\u5783\u573e\u6876\u6570\u7ec4 \ninline void del(int now,int x)\n{\n\tsplay(now,x,0);\n\tint p=tr[x].son[0];\n\twhile(tr[p].son[1]!=0)p=tr[p].son[1];\n\tsplay(now,p,x);\n\tint rc=tr[x].son[1];\n\ttr[p].f=0;rt[now]=p;\n\ttr[p].son[1]=rc;tr[rc].f=p;\n}\nvoid dfs(int now,int x)\n{\n\tif(a[tr[x].d]%now)b[++cnt]=x;\n\telse\n\t{\n\t\ta[tr[x].d]/=now;\n\t\tadd(tr[x].d,1ll*a[tr[x].d]*(1-now));\n\t\tif(a[tr[x].d]%now)b[++cnt]=x;\n\t}\n\tif(tr[x].son[0])dfs(now,tr[x].son[0]);\n\tif(tr[x].son[1])dfs(now,tr[x].son[1]);\n}\nvoid fuck(int now,int l,int r)\n{\n\tint lc=findqianqu(now,l),rc=findhouji(now,r);\n\tsplay(now,lc,0);splay(now,rc,lc);\n\tcnt=0;\n\tif(tr[rc].son[0])dfs(now,tr[rc].son[0]);\n\tfor(R int i=1;i<=cnt;i++)del(now,b[i]);\n}\nvoid build(int l,int r)\n{\n\tint mid=l+r>>1;\n\tint cow=++len;tr[cow].d=b[mid];\n\tif(l<mid){tr[cow].son[0]=len+1;tr[len+1].f=cow;build(l,mid-1);}\n\tif(mid<r){tr[cow].son[1]=len+1;tr[len+1].f=cow;build(mid+1,r);}\n}\nvoid bt(int now)\n{\n\tb[cnt=1]=0;\n\tfor(R int i=0;i<sta[now].size();i++)b[++cnt]=sta[now][i];\n\tb[++cnt]=n+1;\n//\tfor(int i=2;i<cnt;i++)printf(\"%d \",b[i]);puts(\"\");\n\trt[now]=len+1;\n\tbuild(1,cnt);\n}\ninline void ins(int now,int x){sta[now].push_back(x);}\n#define g (p1==p2&&(p2=(p1=buf)+fread(buf,1,size,stdin),p1==p2)?EOF:*p1++)\nconst int size=1<<20;\nchar buf[size],*p1=0,*p2=0;\ninline int read()\n{\n\tR int s=0;R char c=g;\n\twhile(c<48)c=g;\n\twhile(47<c)s=(s<<1)+(s<<3)+(c^48),c=g;\n\treturn s;\n}\nvoid print(ll x)\n{\n\tif(x>9)print(x/10);\n\tputchar(x%10+48);\n}\nstruct fuc\n{\n\tint z,t;\n}sb[23];int tot;\nvoid bfs(int p,int last,int t,int ss)\n{\n\tins(ss,p);\n\tif(t<sb[last].t)bfs(p,last,t+1,ss*sb[last].z);\n\tfor(int i=last+1;i<=tot;i++)bfs(p,i,1,ss*sb[i].z);\n}\nbool uke[500005];\nint main()\n{\n\tfind();\n\tn=read();m=read();\n\tfor(R int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();add(i,1ll*a[i]);\n\t\tif(tmp<a[i])tmp=a[i];\n\t\tif(a[i]<2)continue;\n\t\tint j=a[i];\n\t\tif(v[j]==j){ins(j,i);continue;}\n\t\ttot=1;sb[1].z=v[j];sb[1].t=1;\n\t\twhile(v[j]!=j)\n\t\t{\n\t\t\tif(v[j/v[j]]==sb[tot].z)sb[tot].t++;\n\t\t\telse{sb[++tot].z=v[j/v[j]];sb[tot].t=1;}\n\t\t\tj/=v[j];\n\t\t}\n\t\tfor(int k=1;k<=tot;k++)bfs(i,k,1,sb[k].z);\n\t}\n\twhile(m--)\n\t{\n\t\tR int cz=read(),l=read(),r=read();\n\t\tif(cz==1)\n\t\t{\n\t\t\tR int x=read();\n\t\t\tif(x>1&&sta[x].size())\n\t\t\t{\n\t\t\t\tif(!uke[x]){uke[x]=1;bt(x);}\n\t\t\t\tfuck(x,l,r);\n\t\t\t}\n\t\t}\n\t\telse print(getsum(r)-getsum(l-1)),puts(\"\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1568768057,
        "uid": 120634,
        "name": "2018heyuyang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "#### \u9996\u5148\u7eaa\u5ff5\u4e00\u4e0b\u6b64\u9898\u4ea4\u4e8620\u904d\u5c31\u662f\u56e0\u4e3a\u4e00\u4e2a\u5c0f\u95ee\u9898\u800c\u5bfc\u81f4\u6302\u4e86\u3002\u3002\u4e8e\u662f\u6211\u8981\u53d1\u4e2a\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002            \n\u5176\u5b9e\u697c\u4e0b\u5df2\u7ecf\u6709\u8fc7$vector$\u7684\u9898\u89e3\u4e86\uff0c\u53ef\u662f\u6211\u8ba4\u4e3a\u771f\u7684\u8bb2\u7684\u597d\u96be\u61c2\u554a\uff0c\u6211\u770b\u4e86\u597d\u51e0\u904d\u624d\u770b\u61c2\u3002\u3002\u4e8e\u662f\u8fd9\u91cc\u5c31\u7ed9\u5927\u5bb6\u4e00\u4e2a\u81ea\u8ba4\u4e3a\u6bd4\u8f83\u597d\u61c2\u7684\u9898\u89e3\u3002         \n### \u524d\u7f6e\u77e5\u8bc6\uff1a        \n\u6811\u72b6\u6570\u7ec4\uff1a\u8fd9\u4e2a\u6d1b\u8c37\u6709\u6a21\u677f\uff0c\u81ea\u5df1\u5b66\u4e60\u4e00\u4e0b\u5c31\u597d\u4e86\u3002       \n\u52a8\u6001\u6570\u7ec4$(vector)$\uff1a\u8fd9\u4e2a\uff0c\uff0c\u518d\u4e0d\u4f1a\u5c31\u81ea\u5df1\u4e0a\u7f51\u67e5\u4e00\u4e0b\u5427\uff0c\u6709\u597d\u591a\u6587\u7ae0\u3002            \n### \u6211\u7684\u601d\u8def\uff1a        \n\u671f\u671b\u5f97\u5206:$0\\sim15$\u7b97\u6cd5:\u6a21\u62df\uff0c\u66b4\u529b\uff0c\u8fd9\u91cc\u4ee3\u7801\u5c31\u4e0d\u7ed9\u51fa\u6765\u4e86\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u4f1a\u5199\u3002        \n**\u6ee1\u5206\u7b97\u6cd5\uff08$100$\u5206\u7b97\u6cd5\uff09**\uff1a         \n\u2460\uff1a\u5e73\u8861\u6811\uff0c\u5df2\u7ecf\u88ab\u4eba\u8bb2\u70c2\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bf4\u4e86\u3002      \n\u2461: $vector$:  \n\u9996\u5148\u6211\u4eec\u5047\u8bbe\u8f93\u8fdb\u6765\u7684\u6570\u7ec4\u4e3a$a$  \n#### \u5bf9\u4e8e$opt$\u4e3a$1$\u7684\u64cd\u4f5c\uff1a   \n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f00$MAXN$\u4e2a$vector$\u7c7b\u578b\u7684\u6570\u7ec4$yz$\uff0c\n**$yz[i]$\u91cc\u5b58\u7684\u4e1c\u897f\u4ee3\u8868\u80fd\u591f\u6574\u9664$i$\u7684\u6570\u7684\u4e0b\u6807**\u3002\n\u53c8\u5047\u8bbe\u8f93\u8fdb\u6765\u7684\u533a\u95f4\u6700\u5de6\u503c\u4e3a$l$,\u6700\u53f3\u503c\u4e3a$r$,\u67e5\u627e\u7684\u500d\u6570\u4e3a$div$\u7684\u500d\u6570     \n\u8fd9\u65f6\u6211\u4eec\u53ea\u9700\u8981\u5728$yz[div]$\u91cc\u67e5\u627e\u662f\u5426\u542b\u6709$l$\u548c$r$\u3002    \n\u8fd9\u91cc\u7684$C++$\u81ea\u5e26\u4e00\u4e2alower_bound\u548cupper_bound\u51fd\u6570\uff0c\u7528\u6765\u627e\u4e00\u4e2a\u6570\u5728\u8fd9\u4e2a\u6570\u7ec4\u91cc\u7684\u51fa\u73b0\u7684\u6700\u5c0f\u4e0b\u6807\u548c\u6700\u5927\u4e0b\u6807\u3002     \n\u53ef\u662f\u6211\u4eec\u53c8\u8981\u5220\u6570\uff0c\u90a3\u600e\u4e48\u529e\uff1f**\u4e8e\u662f\u6211\u4eec\u5c31\u53c8\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u578b\u4e3a$vector$\u8fed\u4ee3\u5668**\u7c7b\u578b\u7684$vector$\u7c7b\u578b$t$\uff0c\u7528\u6765\u5728\u6267\u884c\u5b8c$1$\u64cd\u4f5c\u540e\u5c06\u5df2\u7ecf\u4e0d\u662f$div$\u7684\u500d\u6570\u7684\u6570\u5220\u6389\u3002          \n#### \u6ce8\u610f\uff0c$vector$\u7684$erase$\u8981\u614e\u7528\uff0c\u4e3a\u4ec0\u4e48\uff1f       \n\u6bd4\u5982\uff0c\u73b0\u5728\u6709$4$\u4e2a\u6570\uff1a      \n```\n1 2 7 5\n```\n\u73b0\u5728\u6211\u4eec\u8981\u628a$7$\u548c$5$\u5220\u6389\uff0c\u90a3\u4e48$t$\u6570\u7ec4\u91cc\u5b58\u7684\u5c31\u662f$0$\u548c$1$\uff0c\u7b2c\u4e00\u6b21\u65f6\uff0c$5$\u88ab\u5220\u6389\u4e86\u3002    \n\u6570\u5217\u53d8\u6210\u4e86\uff1a     \n```\n1 2 7\n```      \n\u8fd9\u4e2a\u65f6\u5019$t$\u6570\u7ec4\u91cc\u8fd8\u6709\u4e00\u4e2a$1$,\u90a3\u4e48\u5c31\u5220\u6389\u4e86$2$,\u800c\u4e0d\u662f$7$\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u4f1a\u51fa\u95ee\u9898\uff1a             \n#### \u53ef\u662f\u4e3a\u4ec0\u4e48\u5728\u8fd9\u91cc$vector$\u5c31\u662f\u80fd\u7528\u7684\u5462\uff1f\u56e0\u4e3a$yz$\u6570\u7ec4\u91cc\u7684\u5143\u7d20\u4e00\u5b9a\u662f\u4ece\u5c0f\u5230\u5927\u6392\u597d\u5e8f\u4e86\u7684\uff0c\u6240\u4ee5$t$\u6570\u7ec4\u5012\u7740\u5220\u5c31\u4e00\u5b9a\u4e0d\u4f1a\u51fa\u95ee\u9898\u3002\n\u597d\u4e86\uff0c1\u64cd\u4f5c\u5c31\u8fd9\u4e48\u70b9\u4e1c\u897f\n### \u90a3\u4e48\u6211\u4eec\u518d\u770b2\u64cd\u4f5c\uff1a     \n2\u64cd\u4f5c\u771f\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\uff0c\u5f00\u4e2a\u6811\u72b6\u6570\u7ec4\u4e71\u641e\u5c31\u884c\u4e86\u3002\u3002\n## \u8bdd\u4e0d\u591a\u8bf4\uff0c\u770b\u4ee3\u7801\uff1a         \n```cpp\n#include<bits/stdc++.h>\n#define MAXN 100010\n#define Vit vector<int>::iterator\n#define ll long long\n#define MAXV 500010\nusing namespace std;\nll m,i,j,x,y,w,opt,z;\nll a[MAXN],n;\nll tree[MAXN];\nvector<int> yz[MAXV];\nVit l,r,it;\nvector<Vit> t;\nnamespace Fastio{\n    ll read(){//\u5feb\u901f\u8f93\u5165\n   \t    ll x=0;char c=getchar();\n        while(!isdigit(c)) c=getchar();\n        while(isdigit(c)){x=x*10+c-48;c=getchar();}\n        return x;\n\t}\n    void write(ll x){//\u5feb\u901f\u8f93\u51fa\n        if(x/10>0) write(x/10);\n        putchar(x%10+48);\n        return;\n    }\n}\nusing namespace Fastio;\nnamespace Tree{//\u6811\u72b6\u6570\u7ec4\n    ll lowbit(ll x){return x&-x;}\n    // lowbit\u51fd\u6570\n\tvoid add(ll x,ll v,ll n){\n    //\u4fee\u6539\u67d0\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u5176\u5b9e\u4e0d\u662fadd\u7684\u6709\u610f\u601d\uff0c\u61d2\u7684\u6539\u4e86\n        while(x<=n){\n            tree[x]+=v;\n            x+=lowbit(x);\n        }\n        return;\n    }\n    ll sum(int x){//\u6c421~x\u7684\u6570\u5217\u7684\u548c\n        ll ans=0;\n        while(x!=0){\n            ans+=tree[x];\n            x-=lowbit(x); \n        }\n        return ans;\n    }\n}\nusing namespace Tree;\nint main(){\n    n=read();m=read();\n    for(i=1;i<=n;i++){\n    \ta[i]=read();\n    \tj=1;\n      \tfor(j=1;j*j<=a[i];j++){\n        //\u4e00\u4e2a\u6570/2\u7684\u56e0\u5b50\u4e2a\u6570\u4e0d\u53ef\u80fd\u8d85\u8fc7\u8fd9\u4e2a\u6570\u7684sqrt\n    \t\tif(a[i]%j){continue;}\n        //a[i]%j>0,\u4ee3\u8868\u4e0d\u6574\u9664    \n \t\t\tyz[j].push_back(i);//\u653e\u5165\u4e0b\u6807i\n\t\t\tif(a[i]/j!=j) yz[a[i]/j].push_back(i);\t\n        //\u6ce8\u610f\uff0c\u5f53\u4e00\u4e2a\u6570\u662f\u5e73\u65b9\u65f6\uff0c\u8fd9\u6837\u5b50sqrt(a[i])\u5c31\u88ab\u653e\u4e86\u4e24\u904d\uff0c\u5c31\u4f1a\u51fa\u95ee\u9898    \n\t\t}\n\t\tadd(i,a[i],n);\n\t}\n\twhile(m--){\n\t\topt=read();\n\t\tif(opt==1){\n\t\t\tx=read();y=read();z=read();\n\t\t\tt.clear();\n\t\t\tif(x>y) swap(x,y);\n            //\u8fd9\u4e2a\u5176\u5b9e\u5b8c\u5168\u4e0d\u9700\u8981\uff0c\u61d2\u5f97\u6539\u4e86\n\t\t\tif(z==1||yz[z].empty()) continue;\n\t\t\tl=lower_bound(yz[z].begin(),yz[z].end(),x);\n\t\t\tr=upper_bound(yz[z].begin(),yz[z].end(),y);\n\t\t\tif(l==yz[z].end()) continue;\n\t\t\t//cout << *l <<' '<<*r << endl;\n\t\t\tfor(it=l;it!=r; ++it){\n\t\t\t\tint k=a[*it];\n\t\t\t\tif(k%z) continue;\n\t\t\t\tint w=k/z;\n\t\t\t\tadd(*it,-(k-w),n);\n                //\u4fee\u6539\u6811\u72b6\u6570\u7ec4\u7684\u503c\n\t\t\t\ta[*it]/=z;\n\t\t\t\tk=a[*it];\n\t\t\t\tif(k%z) t.push_back(it);\n                //\u5f53\u8fd9\u4e2a\u6570\u9664\u5b8c\u4e4b\u540e\u5df2\u7ecf\u4e0d\u662fdiv\u7684\u500d\u6570\u65f6\uff0c\u653e\u5165t\u6570\u7ec4\n\t\t\t}\n\t\t\tif(!t.empty())\n            //\u5982\u679c\u8fd9\u53e5\u8bdd\u4e0d\u5199\u5c31\u4f1aRE= =\uff0c\u8c03\u4e8620\u51e0\u6b21\u5c31\u662f\u8fd9\u53e5\u8bdd\u3002\u3002\n\t\t\tfor(i=t.size()-1;i>0;i--) yz[z].erase(t[i]);   //\u4eceyz\u6570\u7ec4\u91cc\u5220\u53bb\n\t\t}\n\t\telse{\n\t\t\tx=read();y=read();\n\t\t\twrite(sum(y)-sum(x-1));\n\t\t\tprintf(\"\\n\");\n\t\t}\n    }\n    return 0;\n}\n```       \n**\u6ce8\u610f\uff0c\u4e0d\u4fdd\u8bc1\u6b64\u4ee3\u7801\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u80fd\u8fc7\uff0c\u56e0\u4e3a\u6709\u7684\u65f6\u5019\u8bc4\u6d4b\u4eba\u591a\u8bc4\u6d4b\u673a\u8dd1\u7684\u6162\uff0c\u4eba\u5c11\u7684\u65f6\u5019\u8dd1\u5f97\u5feb\u3002~~\u4f46\u662f\u5f00\u4e86O2\u4e00\u5b9a\u80fd\u8fc7QAQ~~**\n\n\n",
        "postTime": 1537117653,
        "uid": 114320,
        "name": "\u843d\u6c50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u6709\u4e00\u79cd\u66b4\u529bstd\u89e3\u6cd5\uff0c\u6211\u4eec\u5427\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u7528\u5dee\u5206-\u524d\u7f00\u548c\u7684\u65b9\u5f0f\u5904\u7406\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u67e5\u8be2\u5b83\u88ab\u54ea\u4e9b\u64cd\u4f5c\u8986\u76d6\u4e86\u3002\n\n\u4ece\u5de6\u5230\u53f3\u626b\u63cf\uff0c\u5c06\u64cd\u4f5c\u7684\u5e8f\u53f7\u63d2\u5165x\u7684set\u4e2d\uff0c\u8fd9\u6837\u5c31\u4ece\u5c0f\u5230\u5927\u4e86\n\n\u663e\u7136\u4e00\u4e2a\u6570\u7684\u56e0\u5b50\u6570\u662fsqrt\uff085e5\uff09\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u628a\u5b83\u7684\u56e0\u5b50\u5bf9\u5e94\u7684\u64cd\u4f5c\u5e8f\u53f7\u4e22\u8fdb\u5806\u91cc\u6bcf\u6b21\u62ff\u4e00\u4e2a\u6700\u5c0f\u7684\u6765\u5904\u7406\u4e86\uff0c\u6bcf\u6b21\u53d6\u5b8c\u4e00\u4e2a\u6570\uff0c\u5c06\u5b83\u7684\u4e0b\u4e00\u4e2a\u6570\u4e22\u8fdb\u53bb\uff08set\u4e2d\u5df2\u7ecf\u81ea\u52a8\u5c06\u5e8f\u53f7\u6392\u5e8f\u4e86\uff09\n\n\u590d\u6742\u5ea6\uff1a\n\n$$ \\mathcal{O(Nlog^2N + N * logN * log(sqrt(N))) + N * logN *logN} $$\n",
        "postTime": 1511778356,
        "uid": 75714,
        "name": "BEYOND_DELIBERATE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "~~\u7136\u800c\u6211\u559c\u6b22\u5948\u8299\u83b2.~~\n\n\u9898\u76ee\u610f\u601d\u5f88\u597d\u61c2,\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u9664\u548c\u4e00\u4e2a\u533a\u95f4\u6c42\u548c.\n\n\u8003\u8651\u7528splay\u6bcf\u6b21\u65cb\u8f6c\u51fa\u8981\u64cd\u4f5c\u7684\u533a\u95f4,\u6253\u6807\u8bb0\u6c42\u89e3.\n\n\u4f46\u662f\u53d1\u73b0\u8fd9\u4e2a\u6807\u8bb0\u6ca1\u6cd5\u7ef4\u62a4,\u4f46\u662f\u53d1\u73b0\u6570\u7684\u5927\u5c0f\u53ea\u67095e6,\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u6570\u5b57\u5efa\u4e00\u9897\u5e73\u8861\u6811,\u91cc\u9762\u63d2\u5165\u7684\u70b9\u662f\u539f\u5e8f\u5217\u4e0a\u88ab\u8fd9\u4e2a\u6570\u5b57\u6574\u9664\u7684\u6570\u7684\u4e0b\u6807,\u5e73\u8861\u6811\u6309\u7167\u4e0b\u6807\u6392\u5e8f,\u64cd\u4f5c\u4e2d\u7684\u8981\u9664\u4ee5\u8fd9\u4e2a\u6570\u76f4\u63a5\u7528\u8fd9\u4e2a\u6570\u7684\u5e73\u8861\u6811\u65cb\u8f6c\u51fa\u8981\u9664\u7684\u533a\u95f4\u5373\u53ef,\u6c42\u548c\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u89e3.\n\n\u5148\u627e\u51fa\u64cd\u4f5c\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u5728\u9664\u6570\u5bf9\u5e94\u7684\u6811\u4e0a\u7684\u524d\u9a71\u548c\u53f3\u7aef\u70b9\u5728\u6811\u4e0a\u7684\u540e\u7ee7,\u628a\u524d\u9a71\u65cb\u8f6c\u5230\u6839,\u628a\u540e\u7ee7\u65cb\u8f6c\u5230\u524d\u9a71\u7684\u4e0b\u9762,\u56e0\u4e3a\u540e\u7ee7\u4e00\u5b9a\u5927\u4e8e\u524d\u9a71,\u6240\u4ee5\u540e\u7ee7\u8fd9\u4e2a\u70b9\u5728\u524d\u9a71\u7684\u53f3\u513f\u5b50\u4e0a,\u5f88\u663e\u7136\u540e\u7ee7\u7684\u5de6\u513f\u5b50\u5c31\u5168\u90e8\u5305\u542b\u4e86\u5728\u64cd\u4f5c\u533a\u95f4\u5185\u7684\u70b9\u4e86.\n\n\u7136\u540e\u5728\u540e\u7ee7\u7684\u5de6\u513f\u5b50\u8fd9\u9897\u5b50\u6811\u4e0a\u8fdb\u884cdfs,\u76f4\u63a5\u5728\u539f\u5e8f\u5217\u4e0a\u9664\u4ee5\u64cd\u4f5c\u7684\u6570,\u5e76\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u66f4\u6539\u4e00\u4e0b.\u5982\u679c\u9664\u4ee5\u4e86\u8fd9\u4e2a\u6570\u4e4b\u540e\u8fd9\u4e2a\u539f\u5e8f\u5217\u4e0a\u7684\u6570\u4e0d\u88ab\u8fd9\u4e2a\u6570\u6574\u9664\u4e86,\u5c31\u628a\u5b83\u4ece\u8fd9\u4e2a\u6570\u5b57\u5bf9\u5e94\u7684splay\u4e0a\u5220\u6389,\u4e3a\u4e86\u9632\u6b62\u5f71\u54cd\u9012\u5f52\u7ed3\u6784,\u6211\u4eec\u53ef\u4ee5\u5728\u56de\u6eaf\u7684\u65f6\u5019\u5224\u65ad\u662f\u5426\u5220\u9664,\u8981\u5220\u7684\u8bdd\u5c31\u5c06\u5b83\u7684\u513f\u5b50\u8282\u70b9\u4e0d\u65ad\u4e0a\u65cb,\u628a\u5b83\u65cb\u5230\u53f6\u5b50\u8282\u70b9\u4e0a\u76f4\u63a5\u5220\u9664\u5373\u53ef.\n\n\u5bf9\u4e8e\u5efa\u6811,\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u9884\u5904\u7406\u51fa\u539f\u5e8f\u5217\u4e0a\u54ea\u4e9b\u4f4d\u7f6e\u7684\u6570\u88ab\u67d0\u4e2a\u6570\u6574\u9664,\u7136\u540e\u63d2\u5165\u8fd9\u4e2a\u6570\u5bf9\u5e94\u7684splay\u4e0a,\u6309\u7167\u539f\u5e8f\u5217\u4e0b\u6807\u5904\u7406\u7684\u8bdd\u9884\u5904\u7406\u51fa\u7684\u4f4d\u7f6e\u662f\u6709\u5e8f\u7684,\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u9012\u5f52\u5efa\u7acb\u4e00\u9897\u5b8c\u7f8e\u7684splay.\n\n## \u4ee3\u7801\n\n```cpp\n#define lxl int\n#define R register\n#define INF 0x3f3f3f3f\n#define debug(x) printf(\"debug:%d\\n\",x)\n#define debugf(x) printf(\"debug:%llf\\n\",x)\n#define lowbit(x) (x&-x)\nconst lxl maxn=40000010,maxm=500010,maxt=100010;\nlxl n,m,NodeCnt,MaxA;\nlxl root[maxm],a[maxt],fa[maxn],c[maxn][2],size[maxn],val[maxn],q[maxn];\nlong long t[maxt];\nstd::vector<lxl>v[maxm];\ninline void modify(lxl x,lxl val){for(;x<maxt;x+=lowbit(x))t[x]+=val;}\ninline long long query(lxl x)\n{\n\tlong long sum=0;\n\tfor(;x;x-=lowbit(x))sum+=t[x];\n\treturn sum;\n}\nstruct _Spaly\n{\n\tinline void rotate(lxl x)\n\t{\n\t\tlxl y=fa[x],z=fa[y],d=c[y][1]==x;\n\t\tc[z][c[z][1]==y]=x;\n\t\tfa[x]=z,fa[y]=x,fa[c[x][d^1]]=y;\n\t\tc[y][d]=c[x][d^1],c[x][d^1]=y;\n\t\tPushUp(y),PushUp(x);\n\t}\n\tinline void spaly(lxl x,lxl goal,lxl id)\n\t{\n\t\twhile(fa[x]!=goal)\n\t\t{\n\t\t\tlxl y=fa[x],z=fa[y];\n\t\t\tif(fa[y]!=goal)rotate((c[y][0]==x)^(c[z][0]==y)?x:y);\n\t\t\trotate(x);\n\t\t}\n\t\tif(!goal)root[id]=x;\n\t}\n\tinline void PushUp(lxl x){size[x]=size[c[x][0]]+size[c[x][1]]+1;}\n\tlxl suc(lxl x,lxl v)\n\t{\n\t\tlxl tmp;\n\t\tif(!x)return v;\n\t\tif(v<=val[x])return suc(c[x][0],v);\n\t\telse\n\t\t{\n\t\t\ttmp=suc(c[x][1],v);\n\t\t\tif(tmp==v)tmp=x;\n\t\t\treturn tmp;\n\t\t}\n\t}\n\tlxl aft(lxl x,lxl v)\n\t{\n\t\tlxl tmp;\n\t\tif(!x)return v;\n\t\tif(v>=val[x])return aft(c[x][1],v);\n\t\telse\n\t\t{\n\t\t\ttmp=aft(c[x][0],v);\n\t\t\tif(tmp==v)tmp=x;\n\t\t\treturn tmp;\n\t\t}\n\t}\n\tinline void div(lxl id,lxl l,lxl r)\n\t{\n\t\tif(!size[root[id]])return;\n\t\tl=suc(root[id],l),r=aft(root[id],r);\n\t\tspaly(l,0,id),spaly(r,l,id);\n\t\tif(!c[r][0])return;\n\t\tdfs(c[r][0],id);\n\t}\n\tvoid dfs(lxl now,lxl id)\n\t{\n\t\tif(!(a[val[now]]%id))modify(val[now],a[val[now]]/id-a[val[now]]),a[val[now]]/=id;\n\t\tif(c[now][0])dfs(c[now][0],id);\n\t\tif(c[now][1])dfs(c[now][1],id);\n\t\tif(a[val[now]]%id)del(now);\n\t\tPushUp(now);\n\t}\n\tinline void del(lxl now)\n\t{\n\t\twhile(true)\n\t\t{\n\t\t\tif(c[now][0])rotate(c[now][0]);\n\t\t\telse if(c[now][1])rotate(c[now][1]);\n\t\t\telse break;\n\t\t}\n\t\tc[fa[now]][c[fa[now]][1]==now]=0;\n\t\t--size[fa[now]],fa[now]=0,size[now]=0;\n\t}\n\tvoid build(lxl id,lxl &t,lxl l,lxl r,lxl from)\n\t{\n\t\tif(l>r)return;\n\t\tif(!t)t=++NodeCnt;\n\t\tlxl mid=(l+r)>>1;\n\t\tfa[t]=from,val[t]=q[mid];\n\t\tif(l==r){size[t]=1;return;}\n\t\tbuild(id,c[t][0],l,mid-1,t),build(id,c[t][1],mid+1,r,t);\n\t\tPushUp(t);\n\t}\n}splay;\ninline lxl read()\n{\n\tchar c=getchar();\n\tlxl f=1,x=0;\n\tfor(;!isdigit(c);c=getchar())(c=='-')&&(f=-1);\n\tfor(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n\treturn f*x;\n}\nint main(void)\n{\n\tn=read(),m=read();\n\tfor(R int i(1);i<=n;++i)\n\t{\n\t\ta[i]=read(),modify(i,a[i]),MaxA=std::max(a[i],MaxA);\n\t\tfor(R int j(1);j*j<=a[i];++j)\n\t\t\tif(!(a[i]%j))\n\t\t\t{\n\t\t\t\tv[j].push_back(i);\n\t\t\t\tif(j*j!=a[i])v[a[i]/j].push_back(i);\n\t\t\t}\n\t}\n\tfor(R int i(1);i<maxm;++i)\n\t{\n\t\tlxl cur=0;\n\t\tfor(std::vector<lxl>::iterator it=v[i].begin();it!=v[i].end();++it)q[++cur]=*it;\n\t\tq[0]=-INF,q[cur+1]=INF;\n\t\tsplay.build(i,root[i],0,cur+1,0);\n\t}\n\tfor(R int i(1);i<=m;++i)\n\t{\n\t\tlxl opt=read(),l=read(),r=read(),x;\n\t\tif(opt==1)\n\t\t{\n\t\t\tx=read();\n\t\t\tif(x>1)splay.div(x,l,r);\n\t\t}\n\t\telse printf(\"%lld\\n\",query(r)-query(l-1));\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1590806083,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "~~\u6211 tm  RE \u8fd9\u4e48\u4e45\u662f\u56e0\u4e3a a \u6570\u7ec4\u5f00\u5927\u4e86 10 \u500d\u7206\u5185\u5b58\uff1f~~\n\n\n\n---\n\n\n\u65e2\u7136\u6ca1\u4eba\u5199 FHQ treap \u6211\u5c31\u6765\u4e00\u53d1\uff1f\n\n\u6211\u4eec\u8003\u8651\u6c5f\u6bcf\u4e2a\u8be2\u95ee\u79bb\u7ebf\u56de\u7b54\uff08\u4f46\u5e76\u4e0d\u662f\u83ab\u961f\uff09\n\n\u4e4b\u6240\u4ee5\u6c5f\u8be2\u95ee\u62f7\u4e0b\u6765\u5176\u5b9e\u662f\u8981\u8bb0\u5f55\u8981\u9664\u7684 v \n\n\u8bb0\u5f55\u4e0b\u6240\u6709\u7684 v \u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6c5f\u539f\u5e8f\u5217\u4e2d\u662f v \u500d\u6570\u7684\u6570\u62c9\u51fa\u6765\u73a9\u5e73\u8861\u6811\n\n\u7136\u540e\u987a\u5e8f\u5904\u7406\u6bcf\u6b21\u8be2\u95ee\n\n\u6211\u4eec\u8003\u8651\u66b4\u529b\u5730\u5728\u5173\u4e8e v \u7684\u90a3\u68f5\u5e73\u8861\u6811\u91cc\u9762\u627e\u8282\u70b9\u5e76\u66f4\u65b0\u7b54\u6848\uff0c\u5982\u679c\u8bf4\u67d0\u4e2a\u8282\u70b9\u9664\u53bb v \u4e4b\u540e\u4e0d\u518d\u662f v \u7684\u500d\u6570\u5c31\u6c5f\u5b83\u5220\u9664\uff0c\u5bf9\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u7ef4\u62a4\u8981\u5220\u9664\u7684\u8282\u70b9\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6709\u53ef\u80fd\u4e00\u4e2a\u6570\u5728\u522b\u7684\u5e73\u8861\u6811\u4e2d\u9664\u53bb\u4e86 v \uff0c\u4f46\u73b0\u5728\u6211\u4eec\u53c8\u5728\u53e6\u4e00\u68f5\u5e73\u8861\u6811\u4e2d\u627e\u5230\u4e86\u5b83\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u5728\u7b2c\u4e00\u6b21\u9664\u53bb v \u7684\u65f6\u5019\u6c5f $a_i$ \u540c\u65f6\u9664\u53bb v \uff0c\u7b2c\u4e8c\u6b21\u627e\u5230\u4ed6\u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u80fd\u88ab v \u6574\u9664\u5373\u53ef\n\n\n\u603b\u4f53\u601d\u8def\u5f88\u66b4\u529b\uff0c\u4f46\u662f\u8d85\u7ea7\u96be\u8c03\u7684\u554a $mmp$ \u4e0d\u5f00 $O_2$ \u597d\u50cf\u8fd8\u4f1a T \u4e0a\u5929\uff08\u6211\u771f\u662f...\uff09\n\n\u7136\u540e\u5c31\u662f\u6ce8\u610f\u6570\u7ec4\u5f00\u7684\u5927\u5c0f...\u4e0d\u7136\u53c8 $T$ \u53c8 $M$ \u7684....\n\n\n```cpp\n//by Judge\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#define fp(i,a,b) for(int i=(a),I=(b)+1;i<I;++i)\n#define ll long long\nusing namespace std;\nconst int N=1e5+3,M=1e6+3;\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline void cmax(int& a,int b){if(a<b)a=b;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ninline void print(ll x,char chr='\\n'){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]=chr;\n} int n,m,mx,a[N],vis[M];\nvector<int> V[M]; stack<int> st;\nstruct que{int op,l,r,v;}q[N]; //\u8be2\u95ee\nnamespace BIT{ ll f[M]; //\u677f\u5b50\uff0c\u6ca1\u6bd2\n\t#define lowbit(x) (x&-x)\n\tinline void update(int x,int v){for(;x<=n;x+=lowbit(x)) f[x]+=v;}\n\tinline ll query(int x,ll s=0){for(;x;x^=lowbit(x)) s+=f[x]; return s;}\n} using namespace BIT;\nnamespace FHQTreap{ int rt[M],stk[M],tot;  //\u677f\u5b50\uff0ctreap \u8fde siz \u90fd\u4e0d\u5e26\u7684\n\tinline int Rand(){static int seed=703; return seed=int(seed*48271%(~0u>>1));}\n\tstruct node{ int ls,rs,pos,val; inline void init(int x){ls=rs=0,pos=Rand(),val=x;}}t[M<<6];\n\tinline int newnode(int x){return t[++tot].init(x),tot;}\n\tinline int build(int x,int n){\n\t\tint top=0,rt,now,pre;\n\t\tstk[++top]=rt=newnode(V[x][0]);\n\t\tfp(i,1,n){ now=newnode(V[x][i]),pre=0;\n\t\t\tfor(;t[stk[top]].pos>t[now].pos;pre=stk[top--]);\n\t\t\tif(top) t[stk[top]].rs=now;\n\t\t\tt[now].ls=pre,stk[++top]=now;\n\t\t\tif(top==1) rt=now;\n\t\t} return rt;\n\t}\n\tint merge(int x,int y){ if(!x||!y) return x|y;\n\t\tif(t[x].pos<t[y].pos) return t[x].rs=merge(t[x].rs,y),x;\n\t\telse return t[y].ls=merge(x,t[y].ls),y;\n\t}\n\tvoid split(int rt,int k,int& x,int& y){\n\t\tif(!rt) return x=y=0,void();\n\t\tif(t[rt].val<=k) split(t[x=rt].rs,k,t[rt].rs,y);\n\t\telse split(t[y=rt].ls,k,x,t[rt].ls);\n\t}\n\tinline void delet(int& rt,int x){ int a,b;\n\t\tsplit(rt,x-1,rt,a),split(a,x,a,b),rt=merge(rt,b);\n\t}\n\tvoid dfs(int x,int& v){ if(!x) return ;\n\t\tdfs(t[x].ls,v),dfs(t[x].rs,v);\n\t\tint& nw=a[t[x].val];\n\t\tif(!(nw%v)) update(t[x].val,nw/v-nw),nw/=v;\n\t\tif(nw%v) st.push(t[x].val);\n\t}\n} using namespace FHQTreap;\nint main(){ n=read(),m=read();\n\tfp(i,1,n) update(i,a[i]=read()),cmax(mx,a[i]);\n\tfp(i,1,m){ q[i].op=read(); //\u628a\u6240\u6709\u8be2\u95ee\u8bb0\u5f55\n\t\tq[i].l=read(),q[i].r=read();\n\t\tif(q[i].op&1) vis[q[i].v=read()]=1;\n\t}\n\tfp(i,1,n){ int nw=a[i]; //\u7b5b\u51fa\u6240\u6709\u6570\u7684\u7ea6\u6570\n\t\tfp(j,1,sqrt(nw)) if(!(nw%j)){\n\t\t\tif(vis[j]&&j>1) V[j].push_back(i);\n\t\t\tif(vis[nw/j]&&j*j<nw) V[nw/j].push_back(i);\n\t\t}\n\t}\n\tfp(i,2,mx) if(V[i].size()) //\u66b4\u529b\u6c5f\u6240\u6709\u8981\u7528\u5230\u7684 \u7ea6\u6570 \u5efa\u6811\n\t\trt[i]=build(i,V[i].size()-1);\n\tfp(i,1,m) if(q[i].op&2) print(query(q[i].r)-query(q[i].l-1));\n\telse if(q[i].v>1){ int& nw=rt[q[i].v],a,b,c; //\u987a\u5e8f\u5904\u7406\u8be2\u95ee\n\t\tsplit(nw,q[i].l-1,a,b),split(b,q[i].r,b,c);\n\t\tdfs(b,q[i].v),nw=merge(a,merge(b,c));\n\t\tfor(int p;!st.empty();st.pop())\n\t\t\tp=st.top(),delet(nw,p);\n\t} return Ot(),0;\n}\n```",
        "postTime": 1552648235,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3987)\n\n## \u9898\u610f\n\n- \u975e\u8d1f\u6574\u6570\u5e8f\u5217\uff0c\u652f\u6301 \u533a\u95f4\u548c\u67e5\u8be2 \u548c \u533a\u95f4\u6240\u6709\u67d0\u6570\u500d\u6570\u9664\u4ee5\u5176\u3002\n\n## Sol\n\n~~\u5927\u5b66\u5f31\u5316\u7248 \u4e0d\u5361\u5e38~~\n\n\u8003\u8651\u4e00\u4e2a\u6570\u7684\u56e0\u6570\u4e2a\u6570\u4e0d\u8d85\u8fc7 $2\\sqrt{a_i}$\uff0c\u4e0d\u59a8\u5bf9\u6bcf\u4e2a\u56e0\u6570\u5f00\u94fe\u8868\uff0c\u8bb0\u5f55\u5176\u500d\u6570\u4f4d\u7f6e\u3002\n\n\u8003\u8651\u6bcf\u4e2a\u6570\u6700\u591a\u80fd\u88ab\u64cd\u4f5c $\\log{a_i}$ \u6b21\uff0c\u6211\u4eec\u6bcf\u6b21\u66b4\u529b\u4fee\u6539\u94fe\u8868\u5c31\u884c\u4e86\u3002\n\n\u533a\u95f4\u548c\u53ef\u4ee5\u5199\u4e2a BIT\uff0c\u6bd5\u7adf\u5e38\u6570\u5c0f\u3002\uff08\n\n\u603b\u590d\u6742\u5ea6 $O(n\\sqrt{a_i}+n\\log n\\log {a_i})$\u3002\n\n```cpp\n// wish to get better qwq\n\n#include<bits/stdc++.h>\n#define re register int\n#define pb push_back\n\nusing namespace std;\ntypedef long long ll;\n\ntemplate <typename T> void rd(T &x){\n\tint fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(ll x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\n\n// ---------- IO ---------- //\n\nconst int N=5e5+5;\nint n,m,a[N];\nvector<int> f[N],fa[N];\n\nll sum[N],ans;\n\ninline int lowbit(int x){return x&(-x);}\n\ninline void add(int x,ll k){\n\twhile(x<=n) sum[x]+=k,x+=lowbit(x);\n}\n\ninline ll query(int x){\n\tll s=0;\n\twhile(x) s+=sum[x],x-=lowbit(x);\n\treturn s;\n}\n\n// ---------- BIT ---------- //\n\ninline int found(int pos,int x){\n\tif(x>=fa[pos].size()) return x;\n\treturn fa[pos][x]==x?fa[pos][x]:fa[pos][x]=found(pos,fa[pos][x]);\n}\n\n// ---------- DSU ---------- //\n\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);rd(m);\n\tfor(re i=1;i<=n;++i){\n\t\trd(a[i]);add(i,a[i]);\n\t\tfor(re j=1;j*j<=a[i];++j)\n\t\t\tif(a[i]%j==0){\n\t\t\t\tf[j].pb(i);fa[j].pb(fa[j].size());\n\t\t\t\tif(j*j!=a[i]) f[a[i]/j].pb(i),fa[a[i]/j].pb(fa[a[i]/j].size());\n\t\t\t}\n\t}\n\tint op,l,r,x;\n\tfor(re i=1;i<=m;++i){\n\t\trd(op);rd(l);rd(r);\n\t\tif(op==1){\n\t\t\trd(x);\n\t\t\tif(x==1) continue;\n\t\t\tint st=lower_bound(f[x].begin(),f[x].end(),l)-f[x].begin();\n\t\t\tfor(re j=found(x,st);j<f[x].size()&&f[x][j]<=r;j=found(x,j+1)){\n\t\t\t\tif(a[f[x][j]]%x==0) add(f[x][j],a[f[x][j]]/x-a[f[x][j]]),a[f[x][j]]/=x;\n\t\t\t\tif(a[f[x][j]]%x!=0) fa[x][j]=found(x,j+1);\n\t\t\t}\n\t\t}\n\t\telse wr(ans=query(r)-query(l-1)),puts(\"\");\n\t}\n\treturn 0;\n}\n\n// ---------- Main ---------- //\n```\n\n\u4e0d\u5361\u5e38\u7adf\u7136\u80fd\u8fc7\u3002\uff08\n\n![\"duliu!\"](https://cdn.luogu.com.cn/upload/image_hosting/ciegxbap.png)\n\n\u6211\u4eec\u8003\u8651\u5361\u5e38\u3002\uff08\n\n\u628a\u6570\u7ec4\u5168\u90e8\u6539\u6210\u6307\u9488\u5373\u53ef\u3002\uff08\n\n\u6ce8\u610f\u7ec6\u8282\uff0c\u4e0d\u8981 $<=$ \u5199\u6210 $<$\u3002\uff08\n\n\u4f1a RE \u98de\u3002\uff08\n\n```cpp\n// wish to get better qwq\n\n#include<bits/stdc++.h>\n#define re register int\n#define pb push_back\n#define lb lower_bound\n#define ub upper_bound\n\nusing namespace std;\ntypedef long long ll;\n\ntemplate <typename T> void rd(T &x){\n\tint fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(ll x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\n\n// ---------- IO ---------- //\n\nconst int N=5e5+5;\nint n,m,a[N],cnt[N],maxn,*p[N],node[N*505],*tp=node;\n\nll sum[N],ans;\n\ninline int ma(int x,int y){return x<y?y:x;}\n\ninline void add(int x,ll k){\n\twhile(x<=n) sum[x]+=k,x+=x&(-x);\n}\n\ninline ll query(int x){\n\tll s=0;\n\twhile(x) s+=sum[x],x^=x&(-x);\n\treturn s;\n}\n\n// ---------- BIT ---------- //\n\nstruct DSU{\n\tint *fa;\n\tinline void init(int n){for(re i=0;i<n;++i) fa[i]=i;}\n\tinline int found(int x){return fa[x]==x?x:fa[x]=found(fa[x]);}\n}nxt[N];\n\n// ---------- DSU ---------- //\n\ninline void modify(int l,int r,int x){\n\tl=lb(p[x],p[x]+cnt[x],l)-p[x];\n\tr=ub(p[x],p[x]+cnt[x],r)-p[x]-1;\n\tif(l>r) return ;\n\tfor(re nw=nxt[x].found(l);nw<=r;nw=nxt[x].found(nw+1)){\n\t\tint t=p[x][nw];\n\t\tif(a[t]%x==0) add(t,a[t]/x-a[t]),a[t]/=x;\n\t\tif(nw>=r) break;\n\t\tif(a[t]%x) nxt[x].fa[nw]=nxt[x].found(nw+1);\n\t}\n}\n\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);rd(m);\n\tfor(re i=1;i<=n;++i){\n\t\trd(a[i]);add(i,a[i]);\n\t\tcnt[a[i]]++;maxn=ma(maxn,a[i]);\n\t}\n\tfor(re i=1;i<=maxn;++i)\n\t\tfor(re j=i+i;j<=maxn;j+=i) cnt[i]+=cnt[j];\n\tfor(re i=1;i<=maxn+1;++i)\n\t\tif(cnt[i]){\n\t\t\tp[i]=tp;tp+=cnt[i];\n\t\t\tnxt[i].fa=tp;nxt[i].init(cnt[i]);\n\t\t\ttp+=cnt[i];cnt[i]=0;\n\t\t}\n\tfor(re i=1;i<=n;++i){\n\t\tfor(re j=1;j*j<=a[i];++j)\n\t\t\tif(a[i]%j==0){\n\t\t\t\tp[j][cnt[j]++]=i;\n\t\t\t\tif(j*j!=a[i]) p[a[i]/j][cnt[a[i]/j]++]=i;\n\t\t\t}\n\t}\n\tint op,l,r,x;\n\tfor(re i=1;i<=m;++i){\n\t\trd(op);rd(l);rd(r);\n\t\tif(op==1){\n\t\t\trd(x);\n\t\t\tif(x==1) continue;\n\t\t\tmodify(l,r,x);\n\t\t}\n\t\telse wr(ans=query(r)-query(l-1)),puts(\"\");\n\t}\n\treturn 0;\n}\n\n// ---------- Main ---------- //\n```",
        "postTime": 1610285369,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~ \u9898\u89e3 DSU"
    },
    {
        "content": "\u7b97\u662f[\u5927\u5b66](https://www.luogu.com.cn/problem/P5610)\u90a3\u9898\u7684\u5f31\u5316\u7248\uff1f\u65f6\u9650\u653e\u5230\u4e86 4s\uff0c\u4e5f\u4e0d\u5f3a\u5236\u5728\u7ebf\u4e86qwq\n\n~~\u5176\u5b9e\u662f\u5927\u5b66\u90a3\u9898\u628a\u6211\u5361\u6ca1\u4e86/kk~~\n\n------------\n\n# Description\n\n\u7ed9\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $A$\uff0c\u6709 $m$ \u6b21\u64cd\u4f5c\uff0c\u9700\u8981\u652f\u6301\uff1a\n\n- \u7ed9\u533a\u95f4 $[l,r]$ \u5185\u6240\u6709 $x$ \u7684\u500d\u6570\u9664\u4ee5 $x$\n- \u533a\u95f4\u6c42\u548c\n\n$1\\le n,m\\le10^5,0\\le A_i\\le5\\times10^5,1\\le x\\le5\\times10^5$\u3002\n\n------------\n\n# Solution\n\n\u533a\u95f4\u6c42\u548c\u5c31\u4e0d\u591a\u8bf4\u4e86\u5427qwq\u3002\n\n\u8fd9\u91cc\u4e3b\u8981\u8bf4\u4e00\u4e0b\u7b2c\u4e00\u79cd\u64cd\u4f5c\u3002\n\n\u770b\u5230\u64cd\u4f5c\u540e\u7acb\u9a6c\u611f\u89c9\u61d2\u6807\u8bb0\u4e4b\u7c7b\u7684\u57fa\u672c\u4e0d\u53ef\u80fd......\n\n\u6240\u4ee5\u548b\u529e/fad\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u6570\u4e0d\u7ba1\u9664\u4ee5\u4e2a\u4ec0\u4e48\u4e1c\u897f\uff0c\u90fd\u4f1a\u81f3\u5c11\u51cf\u534a\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e $A_i$\uff0c\u9876\u591a\u7ed9\u5b83\u9664\u4e2a $\\log A_i$ \u6b21\u5c31\u4f1a\u53d8\u6210 $1$\uff0c\u7136\u540e\u5c31\u4e0d\u662f\u4efb\u4f55\u6570\u7684\u500d\u6570\uff0c\u9664\u4ee5 $1$ \u4e5f\u4e0d\u4f1a\u518d\u53d8\uff0c\u4e0d\u7528\u518d\u53bb\u7ba1\u4ed6\u4e86\u3002\n\n\u6240\u4ee5\u7528\u4e00\u79cd\u7c7b\u4f3c [GSS4](https://www.luogu.com.cn/problem/SP2713) \u90a3\u9053\u7684\u601d\u60f3\uff0c\u6211\u4eec\u76f4\u63a5\u627e\u5230\u6bcf\u4e2a\u9700\u8981\u4fee\u6539\u7684\u6570\uff0c\u4e00\u4e2a\u4e00\u4e2a\u4fee\u6539\u3002\n\nps\uff1a\u90a3\u9898\u6211\u4e5f\u5199\u4e86[\u9898\u89e3](https://www.luogu.com.cn/blog/wwwluogucn/solution-sp2713)\uff0c\u6b22\u8fce\u53c2\u89c2qwq\n\n\u7136\u540e\u8fd9\u9898\u7684\u96be\u70b9\u5c31\u5728\u4e8e\uff1a\u600e\u4e48\u5feb\u901f\u627e\u5230\u5e94\u8be5\u4fee\u6539\u7684\u6570\u554aorz\u3002\n\n\u8fd9\u4e0d\u50cf GSS4\uff0c\u90a3\u4e2a\u7ed9\u5b9a\u4e86\u662f\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u6240\u6709\u6570\uff0c\u4f46\u662f\u8fd9\u9898\u4fee\u6539\u7684\u53ef\u4e0d\u662f\u6574\u4e2a\u533a\u95f4\u554aqwq......\n\n\u5982\u679c\u66b4\u529b\u626b\u4e00\u904d\u4fee\u6539\u533a\u95f4\u663e\u7136\u4e0d\u53ef\u80fd\u3002\n\n\u4e4b\u524d\u770b\u5230\u8fd9\u9898\u4e4b\u540e\u5c31\u76f4\u63a5\u5361\u5230\u4e86\u8fd9\u91cc\uff0c\u7136\u540e\u5f03\u7597\u4e86qwq\u3002\n\n\u76f4\u5230\u67d0\u8c37\u7f51\u6821\u7b2c\u4e09\u6b21tg\u6a21\u62df\u8d5b\u7684\u65f6\u5019\u51fa\u4e86\u67d0\u4e2a\u9898\uff0c\u5927\u6982\u4e5f\u662f\u7ea6\u6570\u76f8\u5173\u7684\uff0c\u4e8e\u662f\u5b66\u5230\u4e86\u7528\u51b0\u8336\u59ec\u6765\u5904\u7406\u7ea6\u6570\u4e2a\u6570\u7684\u597d\u529e\u6cd5qwq\uff08\n\n\uff08\u9898\u76ee\u4fdd\u5bc6\uff0c\u60f3\u770b\u9898\u76ee\u8bf7\u5de6\u8f6c\u62a5\u540d\u79cb\u4ee4\u8425\uff09\n\n\u6240\u4ee5\u6211\u4eec\u56de\u6765\u8bf4\u8bf4\u8fd9\u9053\u9898\u8be5\u600e\u4e48\u5904\u7406\u3002\n\n\u7531\u4e8e $A_i$ \u548c $x$ \u7684\u8303\u56f4\u53ea\u6709 $5\\times10^5$\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7528 DS\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $k$\uff0c\u5904\u7406\u51fa\u5e8f\u5217 $A$ \u4e2d\u6240\u6709 $k$ \u7684\u500d\u6570\u7684\u4f4d\u7f6e\u3002\n\n\u8fd9\u4e2a\u5f88\u597d\u5904\u7406\uff0c\u76f4\u63a5\u8f93\u5165\u7684\u65f6\u5019\u968f\u4fbf\u641e\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u770b\u770b\u8981\u5bf9\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u4ec0\u4e48\u64cd\u4f5c\uff1a\n\n- \u7531\u4e8e\u9664\u4ee5 $k$ \u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fd9\u4e2a\u6570\u4e0d\u518d\u662f $k$ \u7684\u500d\u6570\uff0c\u6240\u4ee5\u9700\u8981\u652f\u6301\u5220\u9664\u64cd\u4f5c\u3002\n- \u7531\u4e8e\u9650\u5b9a\u4e86\u8981\u5728 $[l,r]$ \u4e2d\u627e\u6570\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u652f\u6301 `lower_bound`\u3002\n- \u7136\u540e\u663e\u7136\u8981\u652f\u6301\u5355\u70b9\u67e5\u8be2\u3002\n\n\u6b64\u65f6\u7b54\u6848\u5df2\u7ecf\u547c\u4e4b\u6b32\u51fa\u4e86\uff1a\u76f4\u63a5 Splay \u6216\u8005 Treap \u4e4b\u7c7b\u7684\u5e73\u8861\u6811\u786c\u641e\u5c31\u884c\u4e86\uff01\n\n\u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e $1\\le k\\le 5\\times10^5$ \u7684\u6240\u6709 $k$\uff0c\u5efa\u4e00\u68f5\u5e73\u8861\u6811\u7ef4\u62a4\u5c31\u884c\u4e86\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5efa $5\\times 10^5$ \u68f5\u5e73\u8861\u6811\u3002\n\n\u7136\u800c\u6211\u8bf4\u8fc7\uff0c\u6211\u7528\u7684\u662f\u51b0\u8336\u59ec\uff0c\u90a3\u4e48\u51b0\u8336\u59ec\u8be5\u600e\u4e48\u641e\u5462qwq\n\n\u6211\u4eec\u5728\u6211\u4eec\u7ef4\u62a4\u7684\u8fd9\u4e2a\u5e8f\u5217\uff08**\u6ce8\u610f\uff0c\u662f\u6211\u4eec\u7ef4\u62a4\u7684\u8fd9\u4e2a\u5e8f\u5217\uff0c\u4e5f\u5c31\u662f $k$ \u7684\u6240\u6709\u500d\u6570\u8fd9\u4e2a\uff0c\u800c\u4e0d\u662f\u539f\u5e8f\u5217 $A$**\uff09\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u9884\u5904\u7406\u51fa\u5b83\u7684\u4e0b\u4e00\u4e2a\u6ca1\u6709\u88ab\u5220\u9664\u7684\u4f4d\u7f6e `it`\u3002\n\n\u663e\u7136\u521d\u59cb\u6bcf\u4e2a `it` \u90fd\u6307\u5411\u81ea\u5df1\u3002\n\n\u7136\u540e `lower_bound` \u7684\u65f6\u5019\u76f4\u63a5\u7528\u8fd9\u4e9b `it` \u6765\u5904\u7406\u5c31\u884c\u4e86\uff0c\u8fd9\u4e9b `it` \u53ef\u4ee5\u76f4\u63a5\u7528\u51b0\u8336\u59ec\u7ef4\u62a4\u3002\n\n~~\u6240\u4ee5\u8bf4\u548c\u67d0\u8c37\u7f51\u6821\u7684\u90a3\u4e2a\u6a21\u62df\u9898\u6ca1\u5565\u8054\u7cfb\uff0c\u51b0\u8336\u59ec\u7684\u5904\u7406\u65b9\u5f0f\u90fd\u4e0d\u4e00\u6837~~\n\n\u8fd9\u6837\u7684\u8bdd\u5c31\u6ca1\u4ec0\u4e48\u95ee\u9898\u4e86qwq\u3002\n\n\u6700\u540e\u63d0\u4e00\u5634\u590d\u6742\u5ea6\uff1a\u9884\u5904\u7406\u590d\u6742\u5ea6\u662f $O(n\\sqrt{A})$\uff0c\u5355\u6b21\u64cd\u4f5c\u663e\u7136\u662f $O(\\log n)$\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a\uff1a$O(n\\sqrt{A}+m\\log n)$\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<cstdlib>\n#include<cstring>\n#include<cctype>\n#include<iostream>\n\n#define MAXN 100005\n#define LL long long\n#define RE register\n#define int long long\n\nusing namespace std;\n\ninline LL qread(){\n\tRE char ch=getchar();\n\tRE LL x=0,f=1;\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<3)+(x<<1)+ch-48;\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\n\nint a[MAXN];\nint n,m;\nLL c[MAXN];\nvector<int>it[500005];\n\nvector<int>fa[500005];\ninline int find(int x,int v){\n\tif(v==fa[x].size()||v==fa[x][v])return (v);\n\treturn (fa[x][v]=find(x,fa[x][v]));\n}\n\nstruct BIT{\n\tinline int lowbit(int x){\n\t\treturn x&(-x);\n\t}\n\t\n\tinline void modify(int x,LL k){\n\t\tfor(RE int i=x;i<=n;i+=lowbit(i)){\n\t\t\tc[i]+=k;\n\t\t}\n\t}\n\t\n\tinline LL Sum(int x){\n\t\tLL ans=0;\n\t\tfor(RE int i=x;i;i-=lowbit(i)){\n\t\t\tans+=c[i];\n\t\t}\n\t\treturn ans;\n\t}\n};\nBIT tree;\n\ninline void pre(){\n\tn=qread();\n\tm=qread();\n\tfor(RE int i=1;i<=n;i++){\n\t\ta[i]=qread();\n\t\ttree.modify(i,a[i]);\n\t}\n\tfor(RE int i=1;i<=n;i++){\n\t\tfor(RE int j=1;j*j<=a[i];j++){\n\t\t\tif(a[i]%j==0){\n\t\t\t\tit[j].push_back(i);\n\t\t\t\tfa[j].push_back(fa[j].size());\n\t\t\t\tif(j*j!=a[i]){\n\t\t\t\t\tit[a[i]/j].push_back(i);\n\t\t\t\t\tfa[a[i]/j].push_back(fa[a[i]/j].size());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void change(int l,int r,int x){\n\tint pos=find(x,lower_bound(it[x].begin(),it[x].end(),l)-it[x].begin());\n\twhile(pos<it[x].size()&&it[x][pos]<=r){\n\t\tint u=it[x][pos];\n\t\tif(a[u]%x==0){\n\t\t\ttree.modify(u,a[u]/x-a[u]);\n\t\t\ta[u]/=x;\n\t\t}\n\t\tif(a[u]%x!=0)fa[x][pos]=pos+1;\n\t\tpos=find(x,pos+1);\n\t}\n}\n\nsigned main(void){\n\t\n\tpre();\n\tLL ans=0;\n\twhile(m--){\n\t\tint op,l,r;\n\t\top=qread();\n\t\tl=qread();\n\t\tr=qread();\n\t\tif(l>=r)swap(l,r);\n\t\tif(op==1){\n\t\t\tLL x=qread();\n\t\t\tif(x==1)continue;\n\t\t\tchange(l,r,x);\n\t\t}\n\t\telse{\n\t\t\tans=tree.Sum(r)-tree.Sum(l-1);\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1603883951,
        "uid": 307453,
        "name": "\u4e91\u6d45\u77e5\u5904",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "## \u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011\n\n\u9898\u76ee\u4f20\u9001\u95e8\uff1a\n\nhttps://www.luogu.org/problemnew/show/P3987\n\n\u4e00\u9053\u795e\u4ed9\u6bd2\u7624\u73c2\u5b66\u5361\u5e38\u9898\u3002\u3002\u3002\u4ea4\u4e86$17$\u53d1\u7ec8\u4e8e$A$\u4e86\n\n~~\uff08\u4f46\u662f\u6b7b\u6d3b\u627e\u4e0d\u5230\u54ea\u91cc\u88ab\u6211\u6539\u5bf9\u4e86\uff09~~\n\n\u5199\u5b8c\u4e4b\u540e\u4e3a\u4e86\u7eaa\u5ff5\u4e00\u4e0b\uff0c\u5c31\u53d1\u4e86\u8fd9\u7bc7\u9898\u89e3\n\n~~\uff08\u611f\u89c9\u6211\u7684\u601d\u8def\u5f88\u591a\u90fd\u548c\u697c\u4e0b\u4e00\u6837QAQ\uff09~~\n\n\u5148\u6765\u626f\u4e00\u70b9\u6ca1\u7528\u7684\n\n\u5176\u5b9e\u672c\u6765\u5b66\u957f\u6253\u7b97\u4e0b\u5348\u7ed9\u6211\u4eec\u8003\u4e00\u5957\u6a21\u62df\u8d5b\u9898\u76ee\u7684\u3002\u3002\u3002\n\n\u9898\u76ee\u4e00\u53d1\u4e0b\u6765\u5c31\u53d1\u73b0$T1$\u662f\u8fd9\u4e2a\u9898\uff0c\u4e8e\u662f\u673a\u623f\u540c\u5b66\u4eec\u96c6\u4f53\u9e3d\u6389\u4e86\u5b66\u957f\u7684\u6a21\u62df\u8d5b\uff08\u96fe\uff09\n\n\u4f46\u662f\u4f5c\u4e3a\u73c2\u5b66\u5bb6\u7684\u6211\u6ca1\u6709\u9e3d\uff01\u8fd8\u662f\u4f9d\u7136\u5199\u6389\u4e86\u8fd9\u4e2a\u9898~~\uff08\u7ed3\u679c\u5199\u4e86\u4e00\u4e0b\u5348\uff0c\u4e5f\u662f\u9189\u4e86\uff09~~\n\n\u5f88\u65e9\u4ee5\u524d\u5c31\u60f3\u5199\u6389\u8fd9\u4e2a\u9898\uff0c\u4f46\u662f\u4e00\u770b\u5e73\u8861\u6811\u7684\u6807\u7b7e\u5c31\u5413\u5f97\u4e0d\u8f7b\u3002\u3002\u3002\n\n\u4f46\u662f~~\u73b0\u5728\u8fd8\u4e0d\u4f1a\u5e73\u8861\u6811\u7684\u6211~~\u7ec8\u4e8e\u7528\u975e\u5e73\u8861\u6811\u505a\u6cd5\u5199\u5b8c\u4e86\uff01\n\n\u54b3\u54b3\u3002\u3002\u3002\u4e0d\u8bf4\u6ca1\u7528\u7684\uff0c\u76f4\u63a5\u5f00\u8bb2\uff01\n\n\u524d\u9762\u7684$5$\u4e2a\u70b9(#$1$~#$5$)\u90fd\u662f\u7ed9\u7684\u66b4\u529b\u5206\uff0c\u4e71\u641e\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u8fd9\u91cc\u4e0d\u8bb2\n\n\u76f4\u63a5\u6765\u8bb2\u6ee1\u5206\u505a\u6cd5\u597d\u4e86\uff08\u8fd9\u91cc\u7528\u7684\u662f$vector$\u505a\u6cd5\uff09\n\n**\u64cd\u4f5c$1$\u6bcf\u6b21\u90fd\u8981\u627e\u51fa\u64cd\u4f5c\u533a\u95f4\u4e2d$x$\u7684\u500d\u6570\u5e76\u9664\u6389$x$**\n\nemmm\u3002\u3002\u3002\u53d1\u73b0\u5982\u679c\u518d\u7528\u66b4\u529b\u7684\u505a\u6cd5\u6765\u6734\u7d20\u7684\u67e5\u627e\uff0c\u6548\u7387\u5341\u5206\u4f4e\u4e0b\n\n\u4e0d\u59a8\u6362\u4e2a\u601d\u8def\n\n\u60f3\u5fc5\u6709\u4eba\u80af\u5b9a\u5df2\u7ecf\u505a\u8fc7\u8fd9\u9053\u9898\u4e86\u5427\uff1a[P4168 [Violet]\u84b2\u516c\u82f1](https://www.luogu.org/problemnew/show/P4168)\n\n\uff08\u6ca1\u6709\u505a\u8fc7\u7684\u540c\u5b66\u53ef\u4ee5\u5148\u5f80\u4e0b\u770b\uff0c\u4ee5\u540e\u518d\u505a\uff09\n\n\u505a\u8fd9\u9898\u4e4b\u524d\uff0c\u6211\u5148\u505a\u6389\u4e86\u8fd9\u9898\uff0c\u56e0\u6b64\u60f3\u5230\u4e86\u4e0b\u9762\u7684~~xjb\u5199~~\u7b97\u6cd5\n\n\u84b2\u516c\u82f1\u8fd9\u9898\u7684\u7b2c\u4e8c\u79cd\u505a\u6cd5\u5c31\u548c\u672c\u9898\u6709\u7740\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\n\n\u5728\u300a\u84b2\u516c\u82f1\u300b\u90a3\u9053\u9898\u4e2d\uff0c\u7b2c\u4e8c\u79cd\u505a\u6cd5\u7684**\u601d\u60f3\u662f\u5c06\u5143\u7d20\u7684\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e\u90fd\u6309\u5347\u5e8f\u5b58\u5728\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u4e4b\u540e\u56de\u7b54\u6bcf\u6b21\u8be2\u95ee$[l,r]$\u53ea\u9700\u8981\u5728\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5e94\u7684\u6570\u7ec4\u4e2d\u4e8c\u5206\u51fa\u90a3\u4e9b\u6070\u597d\u5728$l$\u548c$r$\u5185\u7684\u5143\u7d20**\uff0c\u4ece\u800c\u5f97\u5230\u8be5\u5143\u7d20$A[i]$\u5728\u533a\u95f4$[l,r]$\u5185\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5373$num=upper$_$bound(A[i],r)-lower$_$bound(A[i],l)$\n\n\n\u90a3\u4e48\u5230\u4e86\u8fd9\u9053\u9898\u4e0a\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd9\u6837\u6765\u505a\n\n\u4e0d\u59a8\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20$A[i]$\uff0c\u6211\u4eec\u82e5\u5e72\u4e2a\u6570\u7ec4\uff0c\u8fd9\u82e5\u5e72\u4e2a\u6570\u7ec4\u7684\u952e\u503c\u90fd\u662f$A[i]$\u7684\u56e0\u5b50\uff0c\u5373**\u6570\u7ec4$T[i]$\u5b58\u7684\u662f\u6240\u6709\u662f$i$\u7684\u500d\u6570\u7684\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807**\n\n**\u540c\u65f6\u6211\u4eec\u4fdd\u8bc1\u6bcf\u4e00\u4e2a$T$\u6570\u7ec4\u5185\u90e8\u90fd\u662f\u6709\u5e8f\uff08\u5347\u5e8f\uff09\u7684**\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u64cd\u4f5c$1$ $l$ $r$ $x$\uff0c\u90fd\u6709\u5982\u4e0b\u7684\u64cd\u4f5c\uff1a\n\n\u6211\u4eec\u76f4\u63a5**\u5728$x$\u5bf9\u5e94\u7684$T$\u6570\u7ec4\u5185\u90e8\u8fdb\u884c\u4e8c\u5206\u67e5\u627e**\uff0c\u627e\u5230\u90a3\u4e9b\u6070\u597d\u5904\u4e8e$[l,r]$\u7684\u5143\u7d20\uff0c\u76f4\u63a5\u5c06\u4ed6\u4eec\u9664\u6389$x$(\u5373$A[*it]/=x$)\uff0c\u540c\u65f6**\u5bf9\u4e8e\u8fd9\u4e9b\u9664\u6389$x$\u7684\u65b0\u6570\uff0c\u5982\u679c\u53d1\u73b0\u5b83\u4e0d\u518d\u662f$x$\u7684\u500d\u6570**(\u4e5f\u53ef\u4ee5\u7406\u89e3\u6210$x$\u4e0d\u518d\u662f\u65b0$A[*it]$\u7684\u56e0\u5b50)**\u5c31\u5c06\u65b0$A[*it]$\u4ece$x$\u6240\u5bf9\u5e94\u7684$T$\u6570\u7ec4\u4e2d\u5220\u53bb**\n\n\u4f46\u662f\u73b0\u5728\u95ee\u9898\u53c8\u6765\u4e86\uff0c**\u5982\u4f55\u4ece$x$\u6240\u5bf9\u5e94\u7684$T$\u6570\u7ec4\u4e2d\u5220\u53bb\u4e00\u4e2a\u6570\u5462\uff1f**\n\n\u522b\u5fd8\u4e86\u6211\u4eec\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u975e\u5e38\u795e\u5947\u7684\u4e1c\u897f\uff0c\u53eb\u505a$vector$\u3002$vector$\u5185\u90e8\u81ea\u5e26\u4e86\u4e00\u4e2a\u51fd\u6570\u53eb\u505a$vector.erase()$\uff0c\u5b83\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6570\u4ece\u8be5$vector$\u6570\u7ec4\u4e2d\u5220\u53bb\n\n\u90a3\u597d\u4e86\uff0c\u73b0\u5728\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb~~\u6c34\u6389~~\u89e3\u51b3\u8fd9\u9053\u9898\u4e86\uff08\u96fe\uff09\n\n\u8fd8\u6ca1\u5b8c\uff01\u54ea\u80fd\u90a3\u4e48\u7b80\u5355\u8ba9\u4f60\u8fd9\u4e48$A$\u6389\u4e00\u9053\u7d2b\u9898\uff1f\uff1f\uff1f\n\n$vector.erase()$\u51fd\u6570\u7684\u795e\u5947\u4e4b\u5904\u5728\u4e8e\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u5e2e\u4f60\u5220\u6389\u4e00\u4e9b\u6570\uff0c\u8fd8\u53ef\u4ee5\u628a\u4f60\u5361\u6b7b\n\n\u5982\u679c\u76f4\u63a5\u6b63\u5411\u5220\u6570\uff0c\u5c31\u4f1a\u50cf\u6211\u4e00\u6837$WA$\u597d\u591a\u6b21\n\n$Why?$\n\n**$vector.erase()$\u51fd\u6570\u5220\u6389\u4e00\u4e2a\u6570\u4e4b\u540e\u539f\u5176\u540e\u5269\u4e0b\u7684\u6570\u56de\u4f1a\u6574\u4f53\u5411$0$\u65b9\u5411\u5e73\u79fb\u4e00\u4e2a\u5355\u4f4d**\n\n\u8fd9\u53c8\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\n\n\u5176\u5b9e\u6700\u5f00\u59cb\u6211\u4e5f\u662f\u9519\u4e86\u5f88\u591a\u6b21\uff0c\u6700\u540e~~\u4e71\u6539~~\u624d$A$\u6389\u7684\n\n\u5199\u5b8c\u4e4b\u540e\u6765\u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u697c\u4e0b\u7684\u4e00\u4f4d\u795e\u4ed9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff1a\n\n\uff08\u5f15\u7528\u697c\u4e0b\u7684\u4f8b\u5b50\uff09\n\n\u5982\u679c\u6211\u4eec\u7684\u67d0\u4e00\u4e2a$T$\u6570\u7ec4\u4e2d\u5b58\u7684\u662f\u8fd9\u6837\u7684\u5e8f\u5217\uff1a\n\n$1$ $2$ $7$ $5$\n\n\u5047\u8bbe\u73b0\u5728\u6211\u4eec\u8981\u5220\u6389$7$\u548c$5$\n\n\u90a3\u4e48\u5bf9\u5e94\u7684\u5220\u9664\u4e0b\u6807\u4e3a$1$\u548c$0$\n\n\u6b63\u5411\u6765\u5220\u9664\u6570\u7684\u8bdd\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u5220\u6389$0$\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u5373$5$\n\n\u90a3\u4e48\u73b0\u5728\u53d8\u6210\u4e86$1$ $2$ $7$\uff0c\u6b64\u65f6\u6211\u4eec\u8fd8\u8981\u5220\u6389$7$\n\n\u4f46\u662f\u5982\u679c\u5220\u6389$1$\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u5c31\u4f1a\u5220\u6389$2$\uff0c\u800c\u4e0d\u662f$7$\n\n\u56e0\u6b64**\u6b63\u5411\u5220\u6570\u5c31\u4f1a\u51fa\u95ee\u9898**\n\n\u4f46\u662f\u518d\u56de\u6765\u8003\u8651\u8fd9\u9053\u9898\uff0c\u6211\u4eec**\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u6bcf\u4e00\u4e2a$T$\u6570\u7ec4\u5185\u90e8\u90fd\u662f\u6709\u5e8f\uff08\u5347\u5e8f\uff09\u7684**\n\n\u56e0\u6b64\u6211\u4eec**\u4e0d\u80fd\u6b63\u5411\u5220\u6570\uff0c\u4f46\u662f\u53cd\u5411\u5220\u6570\u5c31\u6ca1\u95ee\u9898**\n\n\uff08\u5982\u679c\u8fd8\u662f\u4e0d\u61c2\uff0c\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u4f8b\u5b50\u6a21\u62df\u4e00\u4e0b\uff09\n\n\u90a3\u4e48\u5230\u4e86\u8fd9\u91cc\u64cd\u4f5c$1$\u4e5f\u5c31\u7b97\u8bb2\u5b8c\u4e86\u5427\n\n\u64cd\u4f5c$2$\u561b\u3002\u3002\u3002\u5c31\u662f\u67e5\u8be2\u533a\u95f4\u548c\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u548c\u7ebf\u6bb5\u6811\u90fd\u53ef\u4ee5\u641e\n\n\u540c\u65f6\u6ce8\u610f\u4e00\u4e0b\uff0c**\u6bcf\u4e2a\u6570$A[i]$\u5728\u9664\u6389$x$\u4e4b\u540e\uff0c\u8981\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u5bf9\u5e94\u7684\u4f4d\u7f6e\u8fdb\u884c\u5355\u70b9\u4fee\u6539\uff0c\u7531\u4e8e$A[i]$\u9664\u6389\u4e86$x$\uff0c\u56e0\u6b64\u4fee\u6539$A[i]$\u8d21\u732e\u5c31\u662f$-(A[i]-A[i]/x)$**\n\n\u90a3\u4e48\u5c31\u6ca1\u5565\u4e86\u5427\uff0c\u4e0b\u9762\u653e\u4e00\u6ce2\u4ee3\u7801\n\nPS\uff1a\u8bf7\u5ffd\u7565\u4e00\u4e9b\u5947\u602a\u7684\u53d8\u91cf\u540d\uff0c\u6bd4\u5982\u6811\u72b6\u6570\u7ec4BLT\uff0c\u5e94\u4e3aBIT\n\n~~\uff08\u56e0\u4e3a\u6211\u6700\u5f00\u59cb\u5b66\u7684\u65f6\u5019\u5c31\u8bb0\u9519\u4e86$233$\uff09~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#define re register\nusing namespace std;\ntypedef long long ll;\nchar IN[1<<17],*SS=IN,*TT=IN;\ninline char gc(){return (SS==TT&&(TT=(SS=IN)+fread(IN,1,1<<17,stdin),SS==TT)?EOF:*SS++);}\ninline int read()//fread\u4e00\u53d1\u5165\u9b42 \n{\n    int now=0,f=1;re char c=gc();\n    for(;!isdigit(c);c=='-'&&(f=-1),c=gc());\n    for(;isdigit(c);now=now*10+c-'0',c=gc());\n    return now*f;}\nconst int maxn=100003;\nconst int maxk=500003;\nint n,Q,A[maxn];\nvector<int> T[maxk];\nvector<int>::iterator pos1,pos2,it;\nvector<vector<int>::iterator > be_to_del;\nnamespace BLT//\u6811\u72b6\u6570\u7ec4 \n{\n\tll tr[maxn];\n\tinline int lowbit(int x){return x&(-x);}\n\tinline void add(int x,int k){while(x<=n)tr[x]+=k,x+=lowbit(x);}\n\tinline ll sum(int x,ll s=0){while(x)s+=tr[x],x-=lowbit(x);return s;}\n\tinline ll query(int l,int r){return sum(r)-sum(l-1);}\n}\nusing namespace BLT;\ninline void work(int pos,int x)//\u628ax\u7684\u4f4d\u7f6e\u5b58\u5165\u5176\u56e0\u5b50\u7684\u5bf9\u5e94T\u6570\u7ec4\u4e2d \n{\n\tfor(re int i=1;i<=sqrt(x);i++)\n\t\t{\n\t\t\tif(x%i)continue;\n\t\t\tT[i].push_back(pos);\n\t\t\tif(x/i!=i)T[x/i].push_back(pos);\n\t\t\t//\u6ce8\u610f\u5e73\u65b9\u6570\u7684\u5224\u65ad \n\t\t}\n}\ninline void Clean()\n{\n    vector<vector<int>::iterator> tmp;\n    swap(tmp,be_to_del);\n}\ninline void change(int l,int r,int k)\n{\n\tif(k==1||T[k].empty())return ;\n\tpos1=lower_bound(T[k].begin(),T[k].end(),l);\n\tpos2=upper_bound(T[k].begin(),T[k].end(),r);\n\tClean();\n\tfor(it=pos1;it!=pos2;++it)//\u66b4\u529b\u66f4\u65b0 \n\t\t{\n\t\t\tif(A[*it]%k)continue;\n            add(*it,-(A[*it]-A[*it]/k)),A[*it]/=k;\n            if(A[*it]%k)be_to_del.push_back(it);\n            //\u628a\u4e0d\u518d\u662fk\u7684\u500d\u6570\u7684\u6570\u90fd\u4e22\u8fdb\u5f85\u5220\u9664\u6570\u7ec4 \n\t\t}\n\tif(be_to_del.empty())return ;\n\tfor(re int i=be_to_del.size()-1;i>=0;i--)\n\t\tT[k].erase(be_to_del[i]);//\u5012\u5e8f\u5220\u9664\u6570 \n}\nint main()\n{\n\tn=read(),Q=read();\n\tfor(re int i=1;i<=n;i++)\n\t\tA[i]=read(),add(i,A[i]),work(i,A[i]);\n\twhile(Q--)\n\t\t{\n\t\t\tint flag=read();\n\t\t\tif(flag==1)\n\t\t\t\t{\n\t\t\t\t\tint x=read(),y=read(),k=read();\n\t\t\t\t\tchange(x,y,k);\n\t\t\t\t}\n\t\t\telse if(flag==2)\n\t\t\t\t{\n\t\t\t\t\tint x=read(),y=read();\n\t\t\t\t\tprintf(\"%lld\\n\",query(x,y));\n\t\t\t\t}\n\t\t}\n\treturn 0;\n}\n```\n\u53ef\u80fd\u5199\u5b8c\u4e4b\u540e\u624d\u53d1\u73b0\u8fd9\u9898\u662f\u591a\u4e48\u7684\u73c2\u5b66~~\u6bd2\u7624~~\uff08\u5927\u96fe\uff09\n\n\u5230\u8fd9\u91cc\u5c31\u6ca1\u4ec0\u4e48\u4e86\uff0c\u611f\u8c22\u4f60\u7684\u9605\u8bfb\uff01\n\n\u6700\u540e~~\u65e0\u803b\u7684~~\u63a8\u4e00\u6ce2\u6211\u7684$blog$\uff1a\n\nhttps://www.luogu.org/blog/new2zy/\n\n\u62dc\u62dc~~~\n\n\n\n\n\n\n",
        "postTime": 1538574435,
        "uid": 60359,
        "name": "___new2zy___",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "[P3987 \u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~](/problem/P3987)\n\n\u849f\u84bb\u7684\u7b2c\u4e00\u9053 Ynoi /cy\uff0c\u4e5f\u662f\u7f55\u89c1\u7684\u6ca1\u6709\u5206\u5757\u7684 Ynoi\u3002\n\n## \u601d\u8def\n\n\u9996\u5148\uff0c\u5728 $1\\sim 500000$\uff0c\u4e00\u4e2a\u6570\u6700\u591a\u6709 $200$ \u591a\u4e2a\u56e0\u6570\u3002\u5bf9\u4e8e $1\\sim 500000$\uff0c\u53ef\u4ee5\u5efa\u5e73\u8861\u6811\uff0c\u7ef4\u62a4\u542b\u6709\u8fd9\u4e2a\u56e0\u6570\u7684\u6570\u7684\u4e0b\u6807\u3002\uff08\u6211\u7528\u7684\u662f FHQ\uff09\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u8003\u8651\u5728 $x$ \u7684\u5e73\u8861\u6811\u91cc\uff0c\u5206\u88c2\u51fa $l\\sim r$ \u7684\u533a\u95f4\uff0c\u7136\u540e\u5bf9\u8fd9\u68f5\u5b50\u6811\u8fdb\u884c dfs\u3002\u5728 dfs \u91cc\uff0c\u5220\u9664\u6240\u6709\u6574\u9664\u5b8c $x$ \u540e\u4e0d\u80fd\u7ee7\u7eed\u6574\u9664 $x$ \u7684\u8282\u70b9\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff0c\u8003\u8651\u5efa\u4e00\u4e2a \u7ebf\u6bb5\u6811/\u6811\u72b6\u6570\u7ec4 \u7ef4\u62a4 $a$ \u6570\u7ec4\uff0cdfs \u65f6\u5220\u9664\u5b50\u6811\u8282\u70b9\u987a\u4fbf\u8fdb\u884c\u4fee\u6539\uff0c\u7136\u540e\u533a\u95f4\u67e5\u8be2\u5373\u53ef\u3002\n\n## \u5751\u70b9\n\n\u7ec6\u8282\u6781\u591a\u3002\n\n### \u5efa\u6811\n\n+ FHQ \u548c\u7ebf\u6bb5\u6811\u975e\u5e38\u50cf\uff0c\u53ef\u4ee5\u4eff\u7167\u7ebf\u6bb5\u6811 $\\mathcal O(n)$ \u5efa\u6811\u3002\n+ \u66b4\u529b\u8fdb\u884c\u8d28\u56e0\u6570\u5206\u89e3/cy\n\n---\n\n### \u4fee\u6539\n\n+ dfs \u5220\u9664\uff0c\u8bb0\u5f97\u5148\u9012\u5f52\u5de6\u5b50\u6811\uff0c\u5728\u8fdb\u884c\u5220\u9664\uff0c\u518d\u9012\u5f52\u53f3\u5b50\u6811\uff0c\u8fd9\u662f\u56e0\u4e3aBST \u5de6\u5b50\u6811 $\\lt$ \u6839 $\\lt$ \u53f3\u5b50\u6811\u3002\n+ dfs \u5220\u9664\uff0c\u4e00\u4e2a\u6570\u53ef\u80fd\u6574\u9664\u5b8c\u4e00\u4e2a $x$ \u540e\u65e0\u6cd5\u518d\u6574\u9664\u4e0b\u4e00\u4e2a $x$\uff0c\u6b64\u65f6\u76f4\u63a5\u5220\u6389\u3002\n+ dfs \u5220\u9664\uff0c\u8981\u5224\u662f $x$ \u7684\u500d\u6570\u800c\u4e0d\u662f $x^2$ \u7684\u500d\u6570\uff0c\u5982\u679c\u6ee1\u8db3\u540e\u8005\uff0c\u5e94\u8be5\u91cd\u65b0\u52a0\u8fdb\u5e73\u8861\u6811\u91cc\u3002\n\n\u7531\u4e8e\u6709\u4e9b\u6570\u5220\u9664\u540e\u53c8\u8981\u91cd\u65b0\u52a0\u8fdb\u5e73\u8861\u6811\u91cc\uff0c\u56e0\u6b64\u8003\u8651 dfs \u65f6\u5220\u5b8c\u5168\u90e8\u7684\u6570\uff0c\u987a\u4fbf\u8bb0\u5f55\u54ea\u4e9b\u6570\u6574\u9664\u540e\u8fd8\u8981\u653e\u56de\u6811\u91cc\u3002\n\n+ \u5220\u9664\u5b8c\u540e\uff0c\u8fd8\u8981\u7528\u8bb0\u5f55\u4e0b\u6765\u7684\u6570\u5efa\u6811\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528 $\\mathcal O(n)$ \u5efa\u6811\u51fd\u6570\u3002\n\n\u4f46\u662f\uff0c\u8bb8\u591a\u8282\u70b9\u90fd\u9700\u8981\u88ab\u5220\u9664\u518d\u52a0\u8fdb\uff0c\u6d6a\u8d39\u4e86\u6781\u5927\u7684\u7a7a\u95f4\uff0c\u672c\u6765 $500000$ \u4ee5\u5185\u7684\u6570\u56e0\u6570\u603b\u4e2a\u6570\u53ea\u6709 $7\\times 10^6$\uff0c\u7136\u540e\u6211\u5f00\u5230\u4e86 $2\\times 10^7$ /kk\u3002\n\n+ \u7a7a\u95f4\u5361\u7684\u5f88\u7d27\uff0c\u4fee\u6539\u8981\u5224 $x=1$\uff08\u8fd9\u4f1a\u8ba9\u4f60 MLE\uff09\n\n---\n\n### last\n\n`long long` \u4e0d\u5f00\u662f\u4e0d\u884c\u7684\uff0c\u5f00\u662f\u6ca1\u95ee\u9898\u7684\u3002\u4ec0\u4e48 MLE nmsl\u3002  \n\n## Code\n\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\n#include<vector>\n#define int long long\nconst int maxn = 5e5 + 1;\nconst int max_size = 2e7 + 1;\nint n,m;\nstd::vector<int> value[maxn];\nint a[maxn],tmp[maxn],len = 0;\nint lc[max_size],rc[max_size],id[max_size],heap[max_size],siz[max_size],cnt = 0,rt[maxn];// \u628a\u6240\u6709 FHQ \u90fd\u5f00\u5728\u4e00\u8d77\nint new_node(int i){\n\tsiz[++cnt] = 1;\n\tid[cnt] = i;\n\theap[cnt] = rand();\n\treturn cnt;\n}\nvoid push_up(int i){\n\tsiz[i] = 1 + siz[lc[i]] + siz[rc[i]];\n}\nint build(int l,int r){ // O(n) \u5efa\u6811\n\tif(l > r) return 0;\n\tint mid = l + r >> 1,i = new_node(tmp[mid]);\n\tlc[i] = build(l,mid - 1);\n\trc[i] = build(mid + 1,r);\n\tpush_up(i);\n\treturn i;\n}\nint merge(int x,int y){\n\tif(!x || !y) return x + y;\n\tif(heap[x] < heap[y]){\n\t\trc[x] = merge(rc[x],y);\n\t\tpush_up(x);\n\t\treturn x;\n\t} else {\n\t\tlc[y] = merge(x,lc[y]);\n\t\tpush_up(y);\n\t\treturn y;\n\t}\n}\nvoid split(int i,int k,int& x,int& y){\n\tif(!i) x = y = 0;\n\telse {\n\t\tif(id[i] <= k){\n\t\t\tx = i;\n\t\t\tsplit(rc[i],k,rc[i],y);\n\t\t} else {\n\t\t\ty = i;\n\t\t\tsplit(lc[i],k,x,lc[i]);\n\t\t}\n\t}\n}\n// \u4ee5\u4e0a\u90fd\u662f\u5e38\u89c4\nint T[maxn];// \u6811\u72b6\u6570\u7ec4\u7801\u91cf\u5c0f\uff0c\u5e38\u6570\u597d\uff01\uff01\nvoid update(int i,int x){\n\tfor(;i <= n;i += (i & -i)) T[i] += x;\n}\nint query(int i){\n\tint ret = 0;\n\tfor(;i;i -= (i & -i)) ret += T[i];\n\treturn ret;\n}\n// --------\nvoid dfs(int p,int x){\n\tif(!p) return;\n\tdfs(lc[p],x);// \u5148\u641c\u5de6\u8fb9\n\tif(a[id[p]] % x == 0){\n\t\tupdate(id[p],-a[id[p]]);\n\t\ta[id[p]] /= x;\n\t\tupdate(id[p],a[id[p]]);// dfs\u65f6\u987a\u4fbf\u66f4\u65b0\u6811\u72b6\u6570\u7ec4\n\t}\n\tif(a[id[p]] % x == 0)\n\t\ttmp[++len] = id[p];// x^2 \u7684\u500d\u6570\u8bb0\u5f55\u8d77\u6765\n\tdfs(rc[p],x);// \u6700\u540e\u641c\u53f3\u8fb9\n}\nvoid update(int l,int r,int a){\n\tint x,y,z;\n\tsplit(rt[a],r,x,z);// \u628a>r\u7684\u5206\u8d70\n\tsplit(x,l - 1,x,y);// \u628a<l\u7684\u5206\u8d70\n\tlen = 0;\n\tdfs(y,a);\n\tint k = build(1,len);// \u91cd\u65b0\u5efa\u6811\n\trt[a] = merge(merge(x,k),z);// \u662fmerge(x,k)\n}\nint query(int l,int r){// \u6811\u72b6\u6570\u7ec4\n\treturn query(r) - query(l - 1);\n}\nsigned main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i = 1;i <= n;++i){\n\t\tscanf(\"%lld\",a + i);\n\t\tupdate(i,a[i]);\n\t\tfor(int j = 1;j * j <= a[i];++j)\n\t\t\tif(a[i] % j == 0){\n\t\t\t\tvalue[j].push_back(i);\n\t\t\t\tif(j * j != a[i]) value[a[i] / j].push_back(i);\n\t\t\t}// \u66b4\u529b\u5206\u89e3\n\t}\n\tfor(int i = 1;i < maxn;++i){\n\t\tlen = 0;\n\t\tfor(int j = 0;j < value[i].size();++j) tmp[++len] = value[i][j];\n\t\trt[i] = build(1,len);// \u5efa\u6811\n\t}\n\twhile(m--){\n\t\tint opt,l,r;\n\t\tint x;\n\t\tscanf(\"%lld%lld%lld\",&opt,&l,&r);\n\t\tif(opt == 1){\n\t\t\tscanf(\"%lld\",&x);\n\t\t\tif(x != 1) update(l,r,x);// \u5224x=1\n\t\t} else printf(\"%lld\\n\",query(l,r));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1628259483,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3-P3987"
    },
    {
        "content": "\u9996\u5148\u58f0\u660e\uff1a  \n\u6211\u662f\u6309\u7167\u5b98\u65b9\u9898\u89e3\u5199\u7684\uff0c\u6240\u4ee5\u5e76\u6ca1\u6709\u4ec0\u4e48\u597d\u7684\u601d\u8def\uff0c\u8ddf\u5b98\u65b9\u9898\u89e3\u4e00\u6837  \n\u5c31\u662f\u5bf9\u6bcf\u4e2a\u6570\u5b57\u7ef4\u62a4\u4e00\u9897\u5e73\u8861\u6811\uff0c\u6bcf\u68f5\u6811\u5b58\u5176\u500d\u6570\u7684\u4e0b\u6807\uff0c\u7136\u540e\u66b4\u529b\u7ef4\u62a4\u5c31\u597d\u4e86\uff0c\u590d\u6742\u5ea6(ndlogd)  \n\u90a3\u4e48\u6211\u5199\u8fd9\u7bc7\u9898\u89e3\u5e72\u4ec0\u4e48\u5462\uff1f\uff1f  \n\u662f\u56e0\u4e3a\u6211\u5728\u5199\u8fd9\u9053\u9898\u7684\u65f6\u5019\u4e00\u5f00\u59cb\u4f7f\u7528\u4e86set\uff0c\uff08\u7ed3\u679c\u88ab\u5361\u4e86\uff0c\u5e38\u6570\u5927\u5f97\u4e00\u6279\uff09\uff0c\u5728\u6211\u4e0d\u505c\u4f18\u5316\u4e0b\u4e5f\u53ea\u80fd\u8fc745\u5206\uff08\u6b64\u65f6\u4ee3\u7801\u957f\u5ea62k\uff09\u4e8e\u662f\u5f88\u591a\u548c\u6211\u4e00\u6837\u7684\u7ae5\u978b\u4eec\u5c31\u5f00\u59cb\u624b\u5199\u5e73\u8861\u6811\u4e86\uff0c\u4f46\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5e73\u8861\u6811\u7684\u521d\u5b66\u8005\u5f80\u5f80\u603b\u662f\u5f88\u96be\u4ece\u4e00\u68f5\u6811\u6269\u5c55\u5230\u591a\u68f5\uff0c\u6240\u4ee5\u6211\u5728\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u5f88easy\u7684\u65b9\u6cd5\uff0c\u8ba9\u4e0d\u7528\u6307\u9488\u7684\u540c\u5b66\u4e5f\u53ef\u4ee5\u8f7b\u677e\u505a\u5230\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528vector\u7ef4\u62a4\u6570\u7ec4\uff0c\u5e76\u4e14\u5c01\u88c5\u6210\u7c7b\uff08\u516b\u89d2\u5e3d\u7684\uff09\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u5b9e\u73b0\u4e86\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u7ed9\u50cf\u6211\u4e00\u6837\u4e00\u5f00\u59cb\u671b\u800c\u5374\u6b65\u7684\u540c\u5b66\u4eec\u4e00\u4e2a\u6bd4\u8f83\u6e05\u6670\u7684\u6a21\u677f\u3002 \u7531\u4e8esplay\u662f\u81ea\u9002\u5e94\u7684\u6811\uff0c\u6240\u4ee5\u5728\u6211\u4eec\u53bb\u5bf9\u4e00\u4e2a\u533a\u95f4\u904d\u5386\u7684\u65f6\u5019\u590d\u6742\u5ea6\u5176\u5b9e\u5f88\u4f4e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u904d\u5386\u7684\u65f6\u5019\u76f4\u63a5\u67e5\u8be2\u540e\u7ee7\uff0c\u6b64\u5904\u52a0\u4e00\u4e2ainf\u4f1a\u6bd4\u8f83\u597d\u5904\u7406\uff0c\u8be6\u60c5\u89c1\u4ee3\u7801\u5373\u53ef  \n\nset\u7248\u672c:\n```cpp\n#include <cstdio>\n#include <set>\n\nusing namespace std;\n\n#define R register\n#define ll long long\n\ninline int read()\n{\n\t#define C getchar()\n\tint x=0;char a=C;\n\tfor(;a>'9'||a<'0';a=C);\n\tfor(;a>='0'&&a<='9';a=C)\n\tx=(x<<1)+(x<<3)+(a^48);\n\treturn x;\n}\n\nconst int inf=0x7f7f7f7f;\nconst int MAXN=1e5+10;\nconst int MAXNUM=5e5+10;\n\nint n,m,a[MAXN];\nset<int> st[MAXNUM];\n\ninline void insert(int ad)\n{\n\tint t=a[ad];\n\tst[t].insert(ad);\n\tfor(R int i=2;i*i<=a[ad];i++)\n\t{\n\t\tif(t%i==0)\n\t\t{\n\t\t\tst[i].insert(ad);\n\t\t\tif(i*i!=t)\n\t\t\t\tst[t/i].insert(ad);\n\t\t}\n\t}\n}\n\nll tr[MAXN];\n\ninline int lowbit(int x) {return x&-x;}\ninline void chg(int x,ll y)\n{\n\tfor(;x<=n;x+=lowbit(x))\n\ttr[x]+=y;\n}\n\ninline ll find(int x)\n{\n\tll ans=0;\n\tfor(;x;x-=lowbit(x))\n\t\tans+=tr[x];\n\treturn ans;\n}\n\ninline ll query(int x,int y)\n{\n\treturn find(y)-find(x-1);\n}\n\ninline void work(int l,int r,int x)\n{\n\t#define IT set<int>::iterator\n\tR IT it=st[x].lower_bound(l);\n\tfor(;it!=st[x].end()&&*it<=r;)\n\t{\n\t\tint t=*it;\n\t\tif(a[t]%x!=0) \n\t\t{\n\t\t\tIT tt=it;\n\t\t\tit++;\n\t\t\tst[x].erase(tt);\n\t\t\tcontinue;\n\t\t}\n\t\tchg(t,-a[t]);\n\t\ta[t]/=x;\n\t\tchg(t,a[t]);\n\t\tIT tt=it;\n\t\tit++;\n\t\tif(a[t]%x!=0) st[x].erase(tt);\n\t}\n}\n\nint main()\n{\n\tn=read();m=read();\n\tfor(R int i=1;i<=n;i++) a[i]=read();\n\tfor(R int i=1;i<=n;i++) insert(i);\n\tfor(R int i=1;i<=n;i++) chg(i,a[i]);\n\tR int opt,l,r,x;\n\tfor(R int i=1;i<=m;i++)\n\t{\n\t\topt=read();l=read();r=read();\n\t\tif(opt==1)\n\t\t{\n\t\t\tx=read();\n\t\t\tif(x==1||x==0) continue;\n\t\t\twork(l,r,x);\n\t\t}\n\t\telse printf(\"%lld\\n\",query(l,r));\n\t}\n\treturn 0;\n}\n```\n\n\n\nsplay\u7684\u7248\u672c\uff08\u4e0a\u9762\u7684\u597d\u50cf\u591a\u4e2alog\uff09\n```cpp\n#include <cstdio>\n#include <vector>\n\n#define R register\n#define ll long long\n\nusing std::vector;\n\nconst int inf=0x7f7f7f7f;\nconst int MAXN=1e5+10;\nconst int MAXNUM=5e5+10;\n\ninline int read();\n\nclass Splay\n{\n\tprivate:\n\t\tint rt,tot;\n\t\tstruct Node\n\t\t{\n\t\t\tint ch[2],siz,val,fa,cnt;\n\t\t};\n\t\tvector<Node> t;\n\t\tinline int New(int x);\n\t\tinline int get(int x);\n\t\tinline void splay(int x);\n\t\tinline void clear(int x);\n\t\tinline void update(int x);\n\t\tinline void rotate(int x);\n\t\tinline int  get(int x,int y);\n\t\tinline void connect(int x,int y,int chk);\n\t\tinline void splay(int x,int goal);\n\tpublic:\n\t\tSplay();\n\t\tinline int Pre();\t\t\n\t\tinline int Nxt();\t\t\n\t\tinline int rk(int k);\t\t\n\t\tinline int pre(int k);\t\t\n\t\tinline int nxt(int k);\n\t\tinline int kth(int k);\t\n\t\tinline void del(int k);\n\t\tinline void insert(int k);\n\t\tinline int size();\n\t\tinline void solve(int l,int r,int x);\n\t\tinline void dfs(int now,int x);\n};\n\nclass BIT\n{\n\tprivate:\n\t\tll c[MAXN];\n\t\tinline int lowbit(int x);\n\tpublic:\n\t\tint n;\n\t\tinline void add(int x,int y);\n\t\tinline ll find(int x);\n\t\tinline ll query(int x,int y);\n};\n\nint n,m,a[MAXN];\nint st[MAXN];\nint top;\nBIT bit;\nSplay Tree[MAXNUM];\n\ninline void ins(int ad)\n{\n\tint t=a[ad];\n\tTree[t].insert(ad);\n\tfor(R int i=2;i*i<=t;i++)\n\t{\n\t\tif(t%i==0)\n\t\t{\n\t\t\tTree[i].insert(ad);\n\t\t\tif(i*i!=t)\n\t\t\t\tTree[t/i].insert(ad);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tn=read();m=read(); bit.n=n;\n\tfor(R int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tbit.add(i,a[i]);\n\t\tins(i);\n\t}\n\tint opt,l,r,x;\n\tfor(R int i=1;i<=m;i++)\n\t{\n\t\topt=read();l=read();r=read();\n\t\tif(opt==2)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",bit.query(l,r));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx=read();\n\t\t\tif(x==1||x==0) continue;\n\t\t\tTree[x].solve(l,r,x);\n\t\t}\n\t}\n\treturn 0;\n}\n\ninline int read()\n{\n    #define C getchar()\n    char a=C;int x=0,f=1;\n    for(;a>'9'||a<'0';a=C) if(a=='-') f=-1;\n    for(;a>='0'&&a<='9';a=C) x=x*10+a-'0';\n    return x*f;\n    #undef C\n}\n\n#define ls(x) t[x].ch[0]\n#define rs(x) t[x].ch[1]\n#define fa(x) t[x].fa\n#define cnt(x) t[x].cnt\n#define siz(x) t[x].siz\n#define val(x) t[x].val\n\ninline int Splay::size()\n{\n\treturn t[rt].siz;\n}\n\ninline int Splay::New(int x)\n{\n\tNode tmp;\n\ttmp.val=x;\n\ttmp.cnt=1;\n\ttmp.siz=1;\n\ttmp.fa=tmp.ch[1]=tmp.ch[0]=0;\n\tt.push_back(tmp);\n\ttot++;\n\treturn tot;\n}\n\ninline int Splay::get(int x)\n{\n\treturn x==rs(fa(x));\n}\n\ninline int Splay::get(int x,int y)\n{\n\treturn x==rs(y);\n}\n\ninline void Splay::update(int x)\n{\n\tsiz(x)=siz(ls(x))+siz(rs(x))+cnt(x);\n}\n\ninline void Splay::connect(int x,int y,int chk)\n{\n\tt[y].ch[chk]=x;\n\tfa(x)=y;\n}\n\ninline void Splay::rotate(int x)\n{\n\tint y=fa(x);int z=fa(y);\n\tint chk=get(x);\n\tconnect(t[x].ch[chk^1],y,chk);\n\tconnect(y,x,chk^1);\n\tif(z) connect(x,z,get(y,z));\n\telse fa(x)=0;\n\tupdate(y);\n}\n\ninline void Splay::splay(int x)\n{\n\tfor(R int f=fa(x);f;rotate(x),f=fa(x))\n\tif(fa(f)) rotate(get(x)==get(f)?f:x);\n\trt=x;\n}\n\ninline void Splay::splay(int x,int goal)\n{\n\tfor(R int f=fa(x);f!=goal;rotate(x),f=fa(x))\n\tif(fa(f)!=goal) rotate(get(x)==get(f)?f:x);\n\tif(goal==0)\n\trt=x;\n}\n\ninline void Splay::clear(int x)\n{\n\tfa(x)=siz(x)=cnt(x)=ls(x)=rs(x)=val(x)=0;\n}\n\nSplay::Splay()\n{\n\trt=tot=0;\n\tNode tmp;\n\ttmp.val=0;\n\ttmp.cnt=0;\n\ttmp.siz=0;\n\ttmp.fa=tmp.ch[1]=tmp.ch[0]=0;\n\tt.push_back(tmp);\n}\n\ninline void Splay::insert(int k)\n{\n\tif(!rt)\n\t{\n\t\trt=New(k);\n\t\tupdate(rt);\n\t\treturn;\n\t}\n\tint x=rt,f=0;\n\twhile(1)\n\t{\n\t\tif(val(x)==k)\n\t\t{\n\t\t\tcnt(x)++;\n\t\t\tsplay(x);\n\t\t\treturn ;\n\t\t}\n\t\tf=x;x=t[x].ch[k>val(x)];\n\t\tif(!x)\n\t\t{\n\t\t\tx=New(k);\n\t\t\tconnect(x,f,k>val(f));\n\t\t\tsplay(x);\n\t\t\treturn ;\n\t\t}\n\t}\n}\n\ninline int Splay::rk(int k)\n{\n\tint res=0,x=rt;\n\twhile(1)\n\t{\n\t\tif(k<val(x)) x=ls(x);\n\t\telse\n\t\t{\n\t\t\tres+=siz(ls(x));\n\t\t\tif(k==val(x)) {splay(x);return res+1;}\n\t\t\tres+=cnt(x);x=rs(x);\n\t\t}\t\t\n\t}\n}\n\ninline int Splay::kth(int k)\n{\n\tint x=rt;\n\twhile(1)\n\t{\n\t\tif(k<=siz(ls(x))) x=ls(x);\n\t\telse\n\t\t{\n\t\t\tk-=cnt(x)+siz(ls(x));\n\t\t\tif(k<=0) return val(x);\n\t\t\tx=rs(x);\n\t\t}\t\n\t}\n}\n\ninline int Splay::Pre()\n{\n\tint x=ls(rt);\n\twhile(rs(x)) x=rs(x);\n\treturn x;\n}\n\ninline int Splay::Nxt()\n{\n\tint x=rs(rt);\n\twhile(ls(x)) x=ls(x);\n\treturn x;\n}\n\ninline void Splay::del(int k)\n{\n\trk(k);\n\tif(cnt(rt)>1)\n\t{\n\t\tcnt(rt)--;\n\t\tupdate(rt);\n\t\treturn;\n\t}\n\tif(!ls(rt)&&!rs(rt))\n\t{\n\t\tclear(rt);\n\t\trt=0;\n\treturn;\n\t}\n\tif(!ls(rt))\n\t{\n\t\tint x=rt;\n\t\trt=rs(x);\n\t\tfa(rt)=0;\n\t\tclear(x);\n\t\treturn;\n\t}\n\tif(!rs(rt))\n\t{\n\t\tint x=rt;\n\t\trt=ls(x);\n\t\tfa(rt)=0;\n\t\tclear(x);\n\t\treturn;\n\t}\n\tint x=rt,tmp=Pre();\n\tsplay(tmp);\n\tconnect(rs(x),tmp,1);\n\tclear(x);\n\tupdate(rt);\n}\n\ninline int Splay::pre(int k)\n{\n\tinsert(k);\n\tint res=Pre();\n\tdel(k);\n\treturn val(res);\n}\n\ninline int Splay::nxt(int k)\n{\n\tinsert(k);\n\tint res=Nxt();\n\tdel(k);\n\treturn val(res);\n}\n\ninline void Splay::solve(int l,int r,int x)\n{\n\tinsert(-inf);insert(inf);\n\tinsert(l);\n\tint LL=Pre();\n\tdel(l);\n\tinsert(r);\n\tint RR=Nxt();\n\tdel(r);//printf(\"%d %d\\n\",val(LL),val(RR));\n\tsplay(LL,0);\n\tsplay(RR,LL);\n\ttop=0;\n\tdfs(ls(rs(rt)),x);\n\tfor(R int i=1;i<=top;i++)\n\tdel(st[i]);\n}\n\ninline void Splay::dfs(int now,int x)\n{\n\tif(now==0) return;\n\tif(a[val(now)]%x==0)\n\t{\n\t\tbit.add(val(now),-a[val(now)]);\n\t\ta[val(now)]/=x;\n\t\tbit.add(val(now),a[val(now)]);\n\t}\n\tif(ls(now)) dfs(ls(now),x);\n\tif(rs(now)) dfs(rs(now),x);\n\tif(a[val(now)]%x) \n\t{\n\t\tst[++top]=val(now);\n\t}\n}\n\ninline int BIT::lowbit(int x) \n{\n\treturn x&-x;\n}\n\ninline void BIT::add(int x,int y)\n{\n\tfor(;x<=n;x+=lowbit(x)) c[x]+=y;\n}\n\ninline ll BIT::find(int x)\n{\n\tll ans=0;\n\tfor(;x;x-=lowbit(x)) ans+=c[x];\n\treturn ans;\n}\n\ninline ll BIT::query(int x,int y)\n{\n\treturn find(y)-find(x-1);\n}\n```\n\n",
        "postTime": 1580384441,
        "uid": 139012,
        "name": "______OvO______",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684\u601d\u8def\u6709\u70b9\u50cf\u603b\u7edf\u9009\u4e3e\u90a3\u4e2a\u9898\uff0c\u5bf9\u6bcf\u4e2a\u56e0\u5b50\u5efa\u68f5\u5e73\u8861\u6811\uff0c\u7ef4\u62a4\u80fd\u88ab\u5b83\u6574\u9664\u7684\u6570\u7684\u4f4d\u7f6e\u3002\n\n\u9664\u7684\u65f6\u5019\u5728\u8fd9\u4e2a\u56e0\u5b50\u7684\u5e73\u8861\u6811\u4e0a\u66b4\u529bdfs\u8fd9\u4e2a\u533a\u95f4\uff0c\u6a21\u62df\u9898\u76ee\u63cf\u8ff0\n\n\u5982\u679c\u533a\u95f4\u4e2d\u4e00\u4e2a\u6570\u88ab\u9664\u4e86\u540e\u4e0d\u80fd\u6574\u9664\u8fd9\u4e2a\u56e0\u5b50\uff0c\u5c31\u628a\u4ed6\u5220\u9664\u3002\n\n\u4e4b\u540e\u5355\u70b9\u4fee\u6539\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u3002\n\n\u4ee5\u53ca\u4e00\u4e9b\u8bb8\u8bb8\u591a\u591a\u7684\u7ec6\u8282\u3002\u3002\u3002\n\n\u6bd4\u5982\u53ef\u4ee5\u53ea\u5bf9\u8be2\u95ee\u51fa\u73b0\u7684\u56e0\u5b50\u5efa\u5e73\u8861\u6811\uff0c\u6240\u4ee5\u53ef\u4ee5\u79bb\u7ebf\u628a\u4e00\u4e2a\u56e0\u5b50\u7684\u500d\u6570\u4f4d\u7f6e\u653e\u5230\u4e00\u4e2avector\u91cc\u4e4b\u540e\u4e00\u5757\u5efa\n\n\u6bd4\u5982\u5efa\u6811\u4e00\u5b9a\u8981\u7528build\u800c\u4e0d\u662f\u66b4\u529binsert\uff0c\u56e0\u4e3a\u8fd9\u9898\u597d\u50cf\u67091e7+\u4e2a\u8282\u70b9\u3002\n\n\u518d\u6bd4\u5982\u4e0d\u80fd\u5728dfs\u7684\u65f6\u5019\u76f4\u63a5\u5220\u9664\uff0c\u90a3\u6837\u7834\u574f\u6811\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u8981\u628a\u5220\u9664\u7684\u6570\u653e\u5230\u4e00\u4e2a\u6808\u91cc\u3002\n\n\u5e73\u8861\u6811\u7a7a\u95f43e7\u4f3c\u4e4e\u5f88\u7a33\u3002\n\n\u5173\u4e8e\u5185\u5b58\u6c60\uff1a\u6ca1\u591a\u5927\u5fc5\u8981\uff0c\u5982\u679c\u8981\u7528\u5185\u5b58\u6c60\u5c31\u5f97\u5728\u8be2\u95ee\u7684\u65f6\u5019\u5efa\u6811\u3002\u3002\u3002\n\n\u7528\u7684splay\uff0c\u5728\u4e00\u4e2aluogu\u7279\u522b\u5361\u7684\u665a\u4e0a\u8dd1\u5230\u4e86\u7ea611900s\uff0c\u7136\u800c\u7b2c\u4e8c\u5929\u65e9\u4e0a\u600e\u4e48\u5361\u5e38\u90fd\u6ca1\u6709\u4e4b\u524d\u5feb\u4e86\u3002\n\n```c++\n#include<vector>\n#include<cstdio>\n#include<iostream>\n#define ll long long\n#define re register\nusing namespace std;\ninline char gc(){\n\tstatic char buf[1<<23],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<23,stdin),p1==p2)?EOF:*p1++;\n}\ninline int init(){\n\tre char c=gc();re int a=0,w=1;\n\twhile((c<'0'||c>'9')&&c-'-')c=gc();\n\tif(c=='-')w=-w,c=gc();\n\twhile(c>='0'&&c<='9')a=(a<<3)+(a<<1)+(c^48),c=gc();\n\treturn a*w;\n}\ninline void pc(re char c,re int p=0){\n\tstatic char buf[1<<23],*p1=buf;\n\tif(p){fwrite(buf,1,p1-buf,stdout);return ;}\n\t*p1++=c;\n\tif(p1==buf+(1<<23))fwrite(buf,1,1<<23,stdout),p1=buf;\n}\nvoid write(re ll x){\n\tif(x>9)write(x/10);\n\tpc(x%10+'0');\n}\ninline char getc(){\n\tchar c=gc();\n\twhile(!isupper(c)) c=gc();\n\treturn c;\n}\nstruct tree{\n\tint num,val,fa,ch[2];\n}t[50260817];\nstruct ques{\n\tint x,p,l,r;\n}q[100001];\nll c[100001];\nint a[100001],cut[500001],n,tot,m,o[500001],maxn;\nvector<int> num[500001];\ninline int lowbit(int x){return x&(-x);}\ninline void add(int x,int y){while (x<=n) c[x]+=y,x+=lowbit(x);}\ninline ll query(int x){ll num=0;while (x) num+=c[x],x-=lowbit(x);return num;}\nstruct Splay{\n\tint rt;\n\tinline void rotate(int x){\n\t\tint y=t[x].fa,z=t[y].fa,f=(t[y].ch[1]==x);\n\t\tt[x].fa=z; t[z].ch[t[z].ch[1]==y]=x;\n\t\tt[t[x].ch[f^1]].fa=y; t[y].ch[f]=t[x].ch[f^1];\n\t\tt[x].ch[f^1]=y; t[y].fa=x;\n\t}\n\tinline void splay(int x,int goal){\n\t\tint y,z;\n\t\twhile (t[x].fa!=goal){\n\t\t\ty=t[x].fa,z=t[y].fa;\n\t\t\tif (z!=goal)\n\t\t\t\tif ((t[y].ch[1]==x)^(t[z].ch[1]==y)) rotate(x); else rotate(y);\n\t\t\trotate(x);\n\t\t\t}\n\t\tif (!goal) rt=x;\n\t}\n//\tinline void ins(int x,int z){\n//\t\tint u=rt; printf(\"%d %d %d\\n\",x,z,rt);\n//\t\twhile (t[u].ch[x>t[u].val]) u=t[u].ch[x>t[u].val];\n//\t\tint y=++tot;\n//\t\tt[u].ch[x>t[u].val]=y; t[y].num=z;\n//\t\tt[y].val=x; t[y].fa=u; splay(y,0);\n//\t}\n\tinline void find(int x){\n\t\tint u=rt;\n\t\twhile (t[u].val!=x&&t[u].ch[x>t[u].val]) u=t[u].ch[x>t[u].val];\n\t\tsplay(u,0);\n\t}\n\tinline int nex(int x,int f){\n\t\tfind(x);\n\t\tif (t[rt].val<=x&&!f) return rt;\n\t\tif (t[rt].val>=x&&f) return rt;\n\t\tint y=t[rt].ch[f];\n\t\twhile (t[y].ch[f^1]) y=t[y].ch[f^1];\n\t\treturn y;\n\t}\n\tinline void del(int x){\n\t\tint u=nex(x-1,0),v=nex(x+1,1);\n\t\tsplay(u,0); splay(v,u);\n\t\tt[v].ch[0]=0; t[t[v].ch[0]].fa=0;\n\t}\n\tvoid dfs(int x){\n\t\tif (t[x].ch[0]) dfs(t[x].ch[0]);\n\t\tif (t[x].ch[1]) dfs(t[x].ch[1]);\n\t\tint u=t[x].val;\n\t\tif (a[u]%t[x].num==0){\n\t\t\tint z=a[u]/t[x].num;\n\t\t\tadd(u,z-a[u]); a[u]=z;\n\t\t}\n\t\telse{\n\t\t\tcut[++cut[0]]=u; return;\n\t\t}\n\t}\n\tinline void arrange(int l,int r){\n\t\tint u=nex(l-1,0),v=nex(r+1,1);\n\t\tsplay(u,0); splay(v,u);\n\t\tif (t[v].ch[0])\n\t\t\tdfs(t[v].ch[0]);\n\t\tfor (int i=1; i<=cut[0]; i++) del(cut[i]);\n\t\tcut[0]=0;\n\t}\t\n\tinline void print(int x){\n\t\tif (t[x].ch[0]) print(t[x].ch[0]);\n\t\tprintf(\"id:%d num:%d val:%d fa:%d ch0:%d ch1:%d\\n\"\n\t\t\t,x,t[x].num,t[x].val,t[x].fa,t[x].ch[0],t[x].ch[1]);\n\t\tif (t[x].ch[1]) print(t[x].ch[1]);\n\t}\n\tinline void debug(){print(rt);}\n\tinline int build(int l,int r,int fa,int x){\n\t\tif (l>r) return 0;\n\t\tint y=++tot,mid=(l+r)>>1;\n\t\tt[y].val=num[x][mid];\n\t\tt[y].fa=fa; t[y].num=x;\n\t\tt[y].ch[0]=build(l,mid-1,y,x);\n\t\tt[y].ch[1]=build(mid+1,r,y,x);\n\t\treturn y;\n\t}\n}sp[500001];\nint main(){\n\tn=init(),m=init();\n\tfor (int i=1; i<=n; i++){\n\t\ta[i]=init();\n\t\tadd(i,a[i]); maxn=max(maxn,a[i]);\n\t}\n\tfor (int i=1; i<=m; i++){\n\t\tq[i].p=init(),q[i].l=init(),q[i].r=init();\n\t\tif (q[i].p==1){\n\t\t\tq[i].x=init();\n\t\t\tif (q[i].x>maxn) continue;\n\t\t\tif (q[i].x!=1) o[q[i].x]=1;\n\t\t}\n\t}\n\tfor (int i=1; i<=maxn; i++){\n\t\tif (o[i]) num[i].push_back(-2e9);\n//\t\tif (o[i]) sp[i].ins(-2e9,i),sp[i].ins(2e9,i);\n//\t\tsp[i].debug();\n\t}\n\tfor (int i=1; i<=n; i++){\n\t\tfor (int j=1; j*j<=a[i]; j++){\n\t\t\tif (a[i]%j!=0) continue;\n\t\t\tif (!a[i]) continue;\n\t\t\tif (o[j]) num[j].push_back(i);\n\t\t\tif (a[i]/j!=j&&o[a[i]/j]) num[a[i]/j].push_back(i);\n\t\t}\n\t}\n\tfor (int i=1; i<=maxn; i++){\n\t\tif (o[i]){\n\t\t\tnum[i].push_back(2e9);\n\t\t\tsp[i].rt=sp[i].build(0,num[i].size()-1,0,i);\n\t\t}\n\t}\n\t// sp[8].debug();\n\tfor (int i=1; i<=m; i++){\n\t\tif (q[i].p==1){\n\t\t\tif (q[i].x==1) continue;\n\t\t\tif (q[i].x>maxn) continue;\n\t\t\tsp[q[i].x].arrange(q[i].l,q[i].r);\n\t\t}\n\t\telse write(query(q[i].r)-query(q[i].l-1)),pc('\\n');\n\t}\n\tpc(' ',1);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1552954845,
        "uid": 63661,
        "name": "Taduro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5f88\u73c2\u5b66\u554a\uff5e\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u7528\u66b4\u529b\u5361\u8fc7\u7684\u65b9\u6cd5\n\n\u56e0\u4e3a\u4e00\u4e2a\u6570\u7684\u56e0\u6570\u4e2a\u6570\u5e76\u4e0d\u4f1a\u5f88\u591a\uff0c\u7528`std::set`\u7ef4\u62a4\u6bcf\u4e2a\u56e0\u5b50\u7684\u500d\u6570\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\n\n\u6267\u884c\u64cd\u4f5c\u7684\u65f6\u5019\u76f4\u63a5\u66b4\u529b`lower_bound`\u627e\u51fa\u5bf9\u5e94\u7684\u4f4d\u7f6e\u7136\u540e\u5224\u65ad\u662f\u5426\u5220\u9664\u5c31\u53ef\u4ee5\u4e86\uff0c\u533a\u95f4\u548c\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c\u3002\n\n\u5c31\u5982\u9898\u89e3\u91cc\u9762\u6240\u8bf4\uff0c\u8fd9\u6837\u662f\u8fc7\u4e0d\u4e86\u7684\uff0c\u6211\u5f00\u4e86`O2`\u4e5f\u53ea\u5f97\u5230\u4e86`39`\u5206\n\n\u8fd9\u4e2a\u65f6\u5019\u522b\u4eba\u8bf4\u8981\u624b\u5199\u5e73\u8861\u6811\u7136\u540e\u5728\u6811\u91cc\u9762`DFS`\u5220\u9664..\u800c\u4e14\u9700\u8981\u5404\u79cd\u5404\u79cd\u5361\u5e38\uff0c\u60f3\u60f3\u5c31\u597d\u9ebb\u70e6\n\n\u5176\u5b9eSTL\u662f\u5f88\u5f3a\u5927\u7684\n\n\u76f4\u63a5\u628a`std::set`\u6362\u6210`std::vector`\u7136\u540e\u5c31\u53ef\u4ee5\u8fa3\u3002\n\n\u56e0\u4e3a\u6309\u7167\u987a\u5e8f\u628a\u6570\u63d2\u5165`std::vector`\u5220\u9664\u4e5f\u662f\u987a\u7740\u5220\u9664\uff0c\u6240\u4ee5`vector`\u81ea\u7136\u6709\u5e8f\n\n\u867d\u7136\u60f3\u5230`vector.erase()`\u7684\u590d\u6742\u5ea6\u8c8c\u4f3c\u5f88\u7206\u70b8\u3002\u3002\n\n\u800c`std::vector`\u662f\u4e00\u4e2a\u795e\u5947\u7684\u4e1c\u897f\uff0c\u5c31\u53ef\u4ee5\u5361\u8fc7\u4e86\u3002\u3002\n\n\u5927\u6982\u662f\u5220\u9664\u7684\u4e1c\u897f\u4e5f\u4e0d\u4f1a\u5f88\u591a\uff0c\u6570\u636e\u7684\u56e0\u5b50\u6bd4\u8f83\u5206\u6563\u9020\u6210\u7684\u5427\n\n\u51fa\u9898\u4eba\u4e5f\u6ca1\u6709\u5361\u8fd9\u4e2a\u6bd2\u7624\u505a\u6cd5\u5462\u3002\u3002\u3002\n\n\u8c8c\u4f3c\u590d\u6742\u5ea6\u5f88\u7206\u70b8\uff0c\u7279\u522b\u662f\u6bcf\u6b21`erase`\u7adf\u7136\u662fO(\u56e0\u5b50\u4e2a\u6570)\u7684\uff0c\u8981\u5361\u5176\u5b9e\u5f88\u597d\u5361\u6389\u7684QAQ\n\n\u4f46\u662f\u8fd9\u4e2a\u6bd4\u5176\u5b835KB\uff0c6KB\u751a\u81f3\u66f4\u957f\u7684\u4ee3\u7801\u597d\u5199\u591a\u4e86\u5427\n\n\u56e0\u4e3a\u6ca1\u6709`O2`STL\u4f1a\u6162\u4e00\u70b9\uff0c\u6211\u4e5f\u6ca1\u600e\u4e48\u7279\u610f\u53bb\u5361\u5e38\uff0c\u6240\u4ee5\u4f1aT\u540e\u4e24\u4e2a\u70b9\u3002\u3002\n\n\u5f00`O2`\u53ef\u4ee5\u628a\u6700\u540e\u4e00\u4e2a\u70b9\u7528`3960ms`\u5361\u8fc7\u53bb\u3002\u3002\u3002\n\n[\u4ee3\u7801](https://www.luogu.org/paste/h9k1arud)",
        "postTime": 1522566409,
        "uid": 67648,
        "name": "EDT_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3987 \u3010\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389~\u3011"
    }
]