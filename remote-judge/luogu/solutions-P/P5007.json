[
    {
        "content": "## Solution\uff1a\n\n### subtask 1:\n\n\u76f4\u63a5 $2^n$ \u679a\u4e3e\u5b50\u96c6\u5373\u53ef\n\n### subtask 2\uff1a\n\n\u5b9a\u4e49 $f_i$ \u4e3a i \u7684\u5b50\u6811\u5185\u7684\u96c6\u5408\u4e2a\u6570\u3002\n\n\u8003\u8651\u5982\u679c $i$ \u53ea\u6709\u4e24\u4e2a\u513f\u5b50 $v_1$ \u548c $v_2$\uff0c\u90a3\u4e48 $f_i=f_{v_1}*f_{b_2}+f_{v_1}+f_{v_2}+1$ \n\n\u8fd9\u4e2a\u975e\u5e38\u663e\u7136\u3002\u8003\u8651\u5982\u679c\u6709\u591a\u4e2a\u513f\u5b50\uff0c\u6211\u4eec\u5b9a\u4e49 $g_j$ \u4e3a\u524d $j$ \u4e2a\u513f\u5b50\u7684\u96c6\u5408\u4e2a\u6570\uff0c\u90a3\u4e48\u5982\u679c\u65b0\u52a0\u5165\u4e00\u4e2a\u513f\u5b50 $v$\uff0c$g_{j+1}=g_j*f_v+g_j+f_v$ \n\n$g_j$ \u53ea\u548c $g_{j-1}$ \u6709\u5173\uff0c\u6240\u4ee5\u76f4\u63a5\u5f00\u4fe9\u53d8\u91cf\u8bb0\u5f55\u5373\u53ef\n\n\u590d\u6742\u5ea6 $O(n)$\n\n### subtask 3\uff1a\n\n\u5176\u5b9e\u8ddf\u70b9\u6743\u4e3a 1 \u7684\u60c5\u51b5\u7c7b\u4f3c\n\n\u5b9a\u4e49 $f_i$ \u4e3a i \u7684\u5b50\u6811\u5185\u6240\u6709\u7684\u6bd2\u7624\u96c6\u7684\u4ef7\u503c\u4e4b\u548c\n\n$g_i$ \u4e3a i \u7684\u5b50\u6811\u5185\u7684\u6bd2\u7624\u96c6\u7684\u4e2a\u6570\n\n\u8f6c\u79fb\u4e0e\u4e0a\u9762\u7c7b\u4f3c  v \u4e3a u \u7684\u513f\u5b50\n\n$f_u=f_u*g_v+f_v*g_u+f_u+g_u$\n\n$g_u=g_u*g_v+g_u+g_v$\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u662f $O(n)$\n\n\u522b\u5fd8\u4e86\u6a21\u6570\u662f 1e8 + 7\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#include<cstring>\n#define maxn 1000010\n#define ll long long\n#define gc getchar\nusing namespace std;\n\nint n, m, T;\n\nint w[maxn];\n\nconst int p = 100000007;\n\nint read(){\n    int x = 0; char c = gc();\n    while(!isdigit(c)) c = gc();\n    while(isdigit(c)){x = x * 10 + c - '0'; c = gc();}\n    return x;\n}\n\nstruct Edge{\n    int to, next;   \n}e[maxn * 2]; int c1, head[maxn];\ninline void add_edge(int u, int v){\n    e[c1].to = v; e[c1].next = head[u]; head[u] = c1++;\n}\n\nll f[maxn], g[maxn];\nvoid dfs(int u, int fa){\n    for(int i = head[u]; ~i; i = e[i].next){\n        int v = e[i].to; if(v == fa) continue;\n        dfs(v, u);\n        f[u] = (f[u] * g[v] + f[v] * g[u] + f[u] + f[v]) % p;\n        g[u] = (g[u] * g[v] + g[u] + g[v]) % p;\n    }\n    f[u] = (f[u] + w[u]) % p; ++g[u];\n}\n\nint main(){\n    memset(head, -1, sizeof head);\n    n = read(); T = read();\n    for(int i = 1; i <= n; ++i) w[i] = T ? i : 1;\n    for(int i = 1; i < n; ++i){\n    \tint x = read(), y = read();\n        add_edge(x, y); add_edge(y, x); \t\n    }\n    dfs(1, 0); cout << f[1] << endl;\n    return 0;\n}\n\n```\n\n",
        "postTime": 1541415425,
        "uid": 34531,
        "name": "DDOSvoid",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5007 \u3010DDOSvoid \u7684\u7591\u60d1\u3011"
    },
    {
        "content": "# P5007 DDOSvoid \u7684\u7591\u60d1\n\n## Description\n\n\u627e\u51fa\u6811\u4e2d\u6240\u6709 **\u5185\u90e8\u5143\u7d20\u4e0d\u5b58\u5728\u7956\u5148\u540e\u4ee3\u5173\u7cfb** \u7684\u96c6\u5408\uff0c\u5b9a\u4e49\u4e00\u4e2a\u96c6\u5408\u7684\u6743\u503c\u4e3a\u96c6\u5408\u4e2d\u6240\u6709\u5143\u7d20\u7684\u6743\u503c\u548c\uff0c\u518d\u7b97\u51fa\u6240\u6709\u96c6\u5408\u7684\u6743\u503c\u548c\u3002\n\n## Solution\n\n\u4e4d\u4e00\u770b\u9898\u9762\u597d\u50cf\u5f88\u8ff7\uff0c\u4f46\u662f\u6211\u4eec\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u4e24\u68f5\u4e0d\u540c\u7684\u5b50\u6811\uff0c\u5176\u5185\u90e8\u7684\u96c6\u5408\u5982\u4f55\u9009\u53d6\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\u3002\u540c\u65f6\u6211\u4eec\u53d1\u73b0\u5982\u679c\u8981\u660e\u786e\u6bcf\u4e00\u4e2a\u96c6\u5408\u662f\u4ec0\u4e48\u518d\u53bb\u8ba1\u7b97\u7b54\u6848\u5341\u5206\u56f0\u96be\uff0c\u4e8e\u662f\u60f3\u5230\u8003\u8651\u6bcf\u4e2a\u5143\u7d20\u7684\u8d21\u732e\u3002\n\n\u8bbe $f_u$ \u4e3a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u7b54\u6848\uff0c $g_u$ \u4e3a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u5408\u6cd5\u96c6\u5408\u6570\u91cf\uff0c $v$ \u4e3a $u$ \u7684\u4e00\u4e2a\u513f\u5b50\uff0c\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n$$\nf_u = f_v * (g_u + 1) + f_u * (g_v + 1);\n$$\n\n$$\ng_u = g_u + g_v * (g_u + 1)\n$$\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1a\n- $f_u$ \u548c $g_u$ \u5728\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\u5e76\u4e0d\u4e25\u683c\u662f\u4e0a\u8ff0\u5b9a\u4e49\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u7684\u904d\u5386\u662f\u6309\u6b21\u5e8f\u8fdb\u884c\u7684\uff0c\u6240\u4ee5 $f_u$ \u548c $g_u$ \u5176\u5b9e\u662f **\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\u5b50\u6811\u7684\u7b54\u6848/\u96c6\u5408\u6570** \u5177\u4f53\u7684\u53ef\u4ee5\u770b\u4ee3\u7801\n- \u4e00\u4e2a\u70b9\u672c\u8eab\u7684\u6743\u503c\u662f\u5728\u4ed6\u7684\u5b50\u8282\u70b9\u5168\u90e8\u904d\u5386\u5b8c\u540e\u624d\u52a0\u8fdb\u53bb\u7684\uff0c\u56e0\u4e3a\u8981\u4fdd\u8bc1\u96c6\u5408\u7684\u5408\u6cd5\u6027\uff0c\u800c\u4e00\u65e6\u9009\u4e2d\u4e86\u81ea\u5df1\uff0c\u90a3\u4e48\u4ed6\u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\u5c31\u4e00\u5b9a\u4e0d\u80fd\u9009\u4e86\n\n\u6700\u7ec8\u7b54\u6848\u5373\u4e3a $f_1$\u3002\n\n>Talk is cheap, show me your code.\n\n```cpp\n#include <cstdio>\n\nconst int N = 1000005, mod = 1e8 + 7;\nint n, t;\nint e_cnt, heads[N], f[N], g[N];\n\nstruct Edge {\n  int v, nxt;\n} e[N << 1];\n\ninline void add(int u, int v) {\n  e[++e_cnt].v = v, e[e_cnt].nxt = heads[u], heads[u] = e_cnt;\n  e[++e_cnt].v = u, e[e_cnt].nxt = heads[v], heads[v] = e_cnt;\n}\n\nvoid solve(int u, int fa) {\n  for (int i = heads[u], v; i; i = e[i].nxt) {\n    if ((v = e[i].v) != fa) {\n      solve(v, u);\n      f[u] = 1ll * f[v] * (g[u] + 1) % mod + 1ll * f[u] * (g[v] + 1) % mod, f[u] %= mod;\n      g[u] = g[u] + 1ll * (g[u] + 1) * g[v] % mod, g[u] %= mod;\n    }\n  }\n  f[u] += t ? u : 1, f[u] %= mod, ++g[u];\n}\n\nint main() {\n#ifndef ONLINE_JUDGE\n#ifdef LOCAL\n  freopen(\"testdata.in\", \"r\", stdin);\n  freopen(\"testdata.out\", \"w\", stdout);\n#else\n  freopen(\"P5007 DDOSvoid \u7684\u7591\u60d1.in\", \"r\", stdin);\n  freopen(\"P5007 DDOSvoid \u7684\u7591\u60d1.out\", \"w\", stdout);\n#endif\n#endif\n\n  scanf(\"%d%d\", &n, &t);\n  for (int i = 1, u, v; i < n; ++i) {\n    scanf(\"%d%d\", &u, &v);\n    add(u, v);\n  }\n  solve(1, 1);\n  printf(\"%d\", f[1]);\n  return 0;\n}\n```",
        "postTime": 1602314368,
        "uid": 229905,
        "name": "BlueQuantum",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5007 \u3010DDOSvoid \u7684\u7591\u60d1\u3011"
    },
    {
        "content": "**p\u515a\u548cc\u515a\u7684\u798f\u5229**\n\n------------\n\n\u4f5c\u4e3a\u6bd4\u8d5b\u7684T2\uff0c\u8fd9\u5e94\u8be5\u662f\u4e00\u9053\u6bd4\u8f83\u5bb9\u6613\u60f3\u51fa\u6765\u7684\u6811\u5f62DP\n\n\u6211\u4eec\u8bbe\u4ee5\u8282\u70b9u\u4e3a\u6839\u7684\u6811\uff0c\u5b83\u672c\u8eab\u6743\u503c\u4e3a $a[u]$ \uff0c\u5185\u90e8\u6240\u5305\u542b\u7684\u975e\u7a7a\u96c6\u5408\u6570\u4e3a $p[u]$ \uff0c\u6240\u6709\u96c6\u5408\u7684\u6bd2\u7624\u503c\u4e4b\u548c\u4e3a $f[u]$ \uff0c\u8282\u70b9u\u7684\u5b50\u6811\u4e3a $tree_1 , tree_2 ... tree_n$ \u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e0d\u540c\u7684\u5b50\u6811\u6240\u542b\u7684\u96c6\u5408\uff0c\u4ea4\u53c9\u5408\u5e76\u90fd\u80fd\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7b26\u5408\u8981\u6c42\u7684\u96c6\u5408\u3002\u7531\u4e8e\u6bcf\u4e2a\u5b50\u6811\u90fd\u6709 $p[tree]+1$ \u79cd\u72b6\u6001\uff08\u4efb\u4f55\u96c6\u5408\u90fd\u4e0d\u9009 or \u9009\u5176\u4e2d\u67d0\u4e00\u4e2a\u96c6\u5408\uff09\uff0c\u5373\u610f\u5473\u7740\uff1a\n\n$p[u]=(p[tree_1]+1)(p[tree_2]+1) ... (p[tree_n]+1)$\n\n$p[u]$ \u5c31\u7b97\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u6c42 $f[u]$\u3002\n\n------------\n\n\u5047\u5982\u6211\u4eec\u5148\u56fa\u5b9a\u5b50\u6811 $tree_1$ \u4e0d\u52a8\uff0c\u90a3\u4e48\u5305\u542b $tree_1$ \u7684\u96c6\u5408\u4e00\u5171\u6709 $(p[tree_2]+1)(p[tree_3]+1) ... (p[tree_n]+1)$ \u4e2a\u3002\u7531\u4e8e\u5b50\u6811 $tree_1$ \u5bf9\u6bcf\u4e2a\u96c6\u5408\u7684\u8d21\u732e\u4e3a $f[tree_1]$ \uff0c\u6240\u4ee5\u5b83\u5bf9 $f[u]$ \u7684\u603b\u8d21\u732e\u5c31\u5e94\u8be5\u662f $f[tree_1](p[tree_2]+1)(p[tree_3]+1) ... (p[tree_n]+1)$ \u3002\n\n\u540c\u7406\uff0c\u5bf9\u4e8e\u4efb\u610f\u5b50\u6811 $tree_i$ \uff0c\u6211\u4eec\u90fd\u80fd\u6c42\u51fa\u5b83\u7684\u8d21\u732e\uff1a\n\n$f[tree_i](p[tree_1]+1)(p[tree_2]+1) ... (p[tree_{i-1}]+1)(p[tree_{i+1}]+1) ... (p[tree_n]+1)$\n\n\u6211\u4eec\u53d1\u73b0\uff0c$f[tree_i]$\u53f3\u8fb9\u90a3\u4e2a\u56e0\u5b50\uff0c\u6070\u597d\u7b49\u4e8e $p[u]/(p[tree_i]+1)$\uff0c\u6240\u4ee5\u53ef\u4ee5\u5316\u7b80\u4e00\u4e0b\uff1a\n\n$\\frac{p[u]}{p[tree_i]+1}f[tree_i]$\n\n\u5373 \n\n$f[u]=a[u]+\\sum_{n=1}^{N} \\frac{p[u]}{p[tree_i]+1}f[tree_i]$\n\n\u5176\u4e2d\u9664\u6cd5\u53ef\u4ee5\u7528\u6269\u6b27\u9006\u5143\u505a\u3002\n\n\u6700\u7ec8 $f[1]$ \u5c31\u662f\u6240\u8981\u6c42\u7684\u503c\u4e86\u3002\n\n------------\n\n\u559c\u95fb\u4e50\u89c1\u7684\u4e0a\u4ee3\u7801\u65f6\u523b\uff1a\n\n```pascal\nconst INF=100000007;\nvar\n    head:array[-1..1000001] of longint;\n    e,next:array[-1..2000001] of longint;\n    f,p,c,v,a:array[-1..2000001] of int64;\n    t:longint;\n    i,n,flag,x,y:longint;\n    \nprocedure exgcd(p,q:int64; var x,y:int64);  //\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\nvar tmp:int64;\nbegin\n    if q=0 then begin x:=1; y:=0; exit; end;\n    exgcd(q,p mod q,x,y);\n    tmp:=x; x:=y; y:=tmp-p div q*y;\nend;\n\nfunction reverse(x:int64):int64;  //\u6c42\u9006\u5143\nvar res,tmp:int64;\nbegin\n    res:=0; tmp:=0;\n    exgcd(x,INF,res,tmp);\n    res:=(res mod INF+INF) mod INF;\n    exit(res);\nend;\n    \nprocedure addedge(x,y:longint);  //\u524d\u5411\u661f\u5efa\u8fb9\nbegin\n    inc(t); e[t]:=y; next[t]:=head[x]; head[x]:=t;\n    inc(t); e[t]:=x; next[t]:=head[y]; head[y]:=t;\nend;\n\nprocedure dp(x,fa:longint);  //\u6811\u5f62DP\nvar \n    i:longint;\nbegin\n    i:=head[x]; p[x]:=1; f[x]:=a[x];\n    while i>0 do begin\n        if e[i]<>fa then begin\n            dfs(e[i],x); p[x]:=p[x]*(p[e[i]]+1) mod INF;  //\u904d\u5386\u5b50\u6811\u5e76\u66f4\u65b0\u70b9x\u7684\u5b50\u96c6\u6570\u91cf\n        end;\n        i:=next[i];\n    end;\n    i:=head[x];\n    while i>0 do begin\n        if e[i]<>fa then begin\n            f[x]:=(f[x]+((f[e[i]]*p[x]) mod INF*reverse(p[e[i]]+1)) mod INF) mod INF;  //\u66f4\u65b0\u5b50\u6811\u4e0a\u96c6\u5408\u7684\u6bd2\u7624\u503c\u4e4b\u548c\n        end;\n        i:=next[i];\n    end;\nend;\n\nbegin\n    readln(n,flag);\n    for i:=1 to n-1 do begin \n        readln(x,y);\n        addedge(x,y);\n    end;\n    for i:=1 to n do if flag=0 then a[i]:=1 else a[i]:=i;\n    dp(1,0);\n    writeln(f[1]);  //\u7b54\u6848\u5373\u4e3a\u6574\u68f5\u6811\u4e0a\u96c6\u5408\u7684\u6bd2\u7624\u503c\u4e4b\u548c\nend.\n```\n\n\n\n------------\n\n\n```cpp\n#include<bits/stdc++.h>\n#define INF 100000007\n#define M 2000001\ntypedef long long ll;\nusing namespace std;\n\nstruct Edge{\n    int to,next;\n}e[M];\n\nint head[M], n, t = 0;\nll f[M], p[M], a[M];\n\nll Exgcd(ll p, ll q, ll &x, ll &y) {  //\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\n    if (q == 0) {\n        x = 1,y = 0; \n        return p;\n    }\n    ll res = Exgcd(q, p%q, x, y);\n    int tmp = x;\n    x = y;\n    y = tmp-p/q*y;\n}\n\nll Reverse(ll x){  //\u6c42\u5173\u4e8e100000007\u7684\u9006\u5143\n    ll res = 0,tmp = 0;\n    Exgcd(x,INF,res,tmp);\n    res = (res%INF+INF) % INF;\n    return res;\n}\n    \nvoid AddEdge(int x, int y){  //\u524d\u5411\u661f\u5efa\u8fb9\n    e[++t] = (Edge){y, head[x]}; head[x] = t;\n    e[++t] = (Edge){x, head[y]}; head[y] = t;\n}\n\nvoid DP(int x, int fa){  //\u6811\u5f62DP\n    p[x] = 1; f[x] = a[x];\n    for (int i = head[x]; i; i = e[i].next){\n        if (e[i].to!=fa) {\n            DP(e[i].to, x); (p[x] *= p[e[i].to]+1) %= INF;  //\u904d\u5386\u5b50\u6811\u5e76\u66f4\u65b0\u70b9x\u7684\u5b50\u96c6\u6570\u91cf\n        }\n    }\n    for (int i = head[x]; i; i = e[i].next){\n        if (e[i].to!=fa) {\n            (f[x] += ((f[e[i].to]*p[x]) % INF) * (Reverse(p[e[i].to]+1) % INF)) %= INF;  //\u66f4\u65b0\u5b50\u6811\u4e0a\u96c6\u5408\u7684\u6bd2\u7624\u503c\u4e4b\u548c\n        }\n    }\n}\n\nint main(){\n    ios::sync_with_stdio(false);\n    int flag;\n    cin >> n >> flag;\n    for (int i=1; i<n; i++) {\n        int x,y;\n        cin >> x >> y;\n        AddEdge(x,y);\n    }\n    for (int i=1; i<=n; i++){\n        if (!flag) a[i] = 1; else a[i] = i;\n    }\n    DP(1,0);\n    cout << f[1] << endl;  //\u7b54\u6848\u5373\u4e3a\u6574\u68f5\u6811\u4e0a\u96c6\u5408\u7684\u6bd2\u7624\u503c\u4e4b\u548c\n    return 0;\n}\n```",
        "postTime": 1541421715,
        "uid": 31712,
        "name": "zrzluck99",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5007 \u3010DDOSvoid \u7684\u7591\u60d1\u3011"
    },
    {
        "content": "## \u524d\u7f6e\u77e5\u8bc6\n\n\u6811\u5f62 dp\n\n## \u5206\u6790\n\ndp \u561b\uff0c\u4ee4 $f_i$ \u8868\u793a $i$ \u7684\u5b50\u6811\u5185\u7684\u96c6\u5408\u4e2a\u6570\u3002\n\n### 1. $Subtask\\space2$\n\n\u56e0\u4e3a\u70b9\u6743\u90fd\u662f $1$\uff0c\u6240\u4ee5 $Subtask\\space2$ \u76f8\u5f53\u4e8e\u6c42\u6bd2\u7624\u96c6\u4e2a\u6570\u3002\n\n\u9996\u5148\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$ \u4e0e\u5b83\u7684\u513f\u5b50\u4eec $S_u$\uff1a\n\n$$f_u = \\sum \\limits_{\\footnotesize \\textsf{\u96c6\u5408} \\space v \\subseteq S_u \\space} \\prod \\limits_{i \\in v_i} f_i$$\n\n\u4f46\u662f\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u597d\u7b97\uff0c\u6240\u4ee5\u4ee4 $g_i$ \u8868\u793a\u524d $i$ \u4e2a\u513f\u5b50\u7684\u96c6\u5408\u4e2a\u6570\uff0c\u90a3\u4e48\u5982\u679c\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u513f\u5b50$v$\uff0c \u90a3\u4e48\n\n$$g_{i + 1} = g_i f_v + g_i + f_v$$\n\n### 2. $Subtask\\space 3$\n\n\u70b9\u6743\u4e0d\u662f $1$ \u4e86\uff0c\u4f46\u662f\u57fa\u672c\u5dee\u4e0d\u591a\u3002\n\n\u5bf9\u4e8e\u8282\u70b9 $u$ \u7684\u6bcf\u4e2a\u513f\u5b50 $v$\uff0c$f_u$ \u521d\u59cb\u5316\u4e3a $w_u$\uff0c$g_u$ \u521d\u59cb\u5316\u4e3a $0$\n\n$$\\begin{aligned}\n\tg_u &= g_u g_v + g_u + g_v\\\\\n\tf_u &= f_u g_v + f_v g_u + f_u + g_u\n\\end{aligned}$$\n\n\u6700\u540e\uff0c\u8bb0\u5f97 $g_u$ \u8981\u52a0\u4e0a $u$ \u81ea\u5df1\n\n\u6240\u4ee5\u5c31\u505a\u5b8c\u4e86\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define lld long long\nusing namespace std;\nconst int mod = 1e8 + 7;\nint n, T;\nint w[1000010];\nstruct edge {\n\tint to, nxt;\n} es[3000010];\nint ecnt;\nint head[1000010];\nvoid addedge(int fr, int to) {\n\tes[++ ecnt] = (edge){to, head[fr]};\n\thead[fr] = ecnt;\n}\nlld f[1000010];\nlld g[1000010];\nvoid dfs(int u, int fa) {\n\tfor (int e = head[u], v; e; e = es[e].nxt)\n\t\tif ((v = es[e].to) != fa) {\n\t\t\tdfs(v, u);\n\t\t\tf[u] = (f[u] * g[v] % mod + f[v] * g[u] % mod + f[u] + f[v]) % mod;\n\t\t\tg[u] = (g[u] * g[v] % mod + g[u] + g[v]) % mod;\n\t\t}\n\tf[u] = (f[u] + w[u]) % mod;\n\t++ g[u];\n}\nint main() {\n\tscanf(\"%d%d\", &n, &T);\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tif (T) w[i] = i;\n\t\telse w[i] = 1;\n\t}\n\tfor (int i = 1, u, v; i < n; ++ i) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\taddedge(u, v);\n\t\taddedge(v, u);\n\t}\n\tdfs(1, 0);\n\tprintf(\"%lld\\n\", f[1]);\n}\n```",
        "postTime": 1637733434,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "P5007 DDOSvoid \u7684\u7591\u60d1 \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u5b9a\u4e49\u4e00\u4e2a\u6709\u70b9\u6743\u7684\u6709\u6839\u6811\u4e0a\u7684\u6bd2\u7624\u96c6\u4e3a\u6ee1\u8db3\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u4e0d\u5b58\u5728\u7956\u5148\u2014\u540e\u4ee3\u5173\u7cfb\u7684\u96c6\u5408\uff0c\u6c42\u6240\u6709\u6bd2\u7624\u96c6\u7684\u70b9\u6743\u548c\u7684\u548c\n\n\n\n\u8bbe\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u6bd2\u7624\u96c6\u7684\u548c\u4e3a $f_x$\uff0c\u6bd2\u7624\u96c6\u4e2a\u6570\u4e3a $g_x$\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u8003\u8651\u6bd2\u7624\u96c6\u5982\u4f55\u9009\u62e9\uff0c\u663e\u7136\u5bf9\u4e8e\u67d0\u4e2a\u70b9\uff0c\u53ea\u6709\uff1a\n\n* \u53ea\u9009\u8fd9\u4e2a\u70b9 \uff08\u8fd9\u4e2a\u4e0e\u5176\u513f\u5b50\u65e0\u5173\uff0c\u53ef\u4ee5\u5355\u72ec\u5904\u7406\uff0c\u6240\u4ee5\u4e0b\u9762\u6682\u65f6\u4e0d\u7edf\u8ba1\u8fd9\u79cd\u60c5\u51b5\uff09\n* \u9009\u82e5\u5e72\u4e2a\u5b50\u6811\n\n\u6211\u4eec\u5148\u8003\u8651\u7b2c\u4e00\u4e2a\u513f\u5b50 $son_1$\uff0c\u5219\u4f1a\u6709 $f_x=f_{son},g_x=g_{son}$\u3002\n\n\u52a0\u5165\u73b0\u5728\u6765\u4e86\u7b2c\u4e8c\u4e2a\u513f\u5b50 $son_2$\uff0c\u6211\u4eec\u5206\u60c5\u51b5\u8003\u8651\u4f1a\u5bf9 $f$ \u548c $g$ \u7684\u8d21\u732e\u3002\n\n| \u60c5\u51b5           | \u5bf9 $f$ \u7684\u8d21\u732e                                       | \u5bf9 $g$ \u7684\u8d21\u732e              |\n| -------------- | --------------------------------------------------- | -------------------------- |\n| \u53ea\u9009\u7b2c\u4e00\u4e2a\u513f\u5b50 | $f_{son_1}$                                         | $g_{son_1}$                |\n| \u53ea\u9009\u7b2c\u4e8c\u4e2a\u513f\u5b50 | $f_{son_2}$                                         | $g_{son_2}$                |\n| \u540c\u65f6\u9009\u4e24\u4e2a\u513f\u5b50 | $f_{son_1}\\cdot g_{son_2}+f_{son_2}\\cdot g_{son_1}$ | $g_{son_1}\\cdot g_{son_2}$ |\n\n\u4e5f\u5c31\u662f\uff0c$f_x=f_{son_1}\\cdot g_{son_2}+f_{son_2}\\cdot g_{son_1}+f_{son_1}+f_{son_2}$\uff0c$g_x=g_{son_1}\\cdot g_{son_2}+g_{son_1}+g_{son_2}$\n\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u7edf\u8ba1\u5b8c\u4e86 $k$ \u4e2a\u513f\u5b50\uff0c\u6765\u4e86\u7b2c $k+1$ \u4e2a\u513f\u5b50\uff0c\u6211\u4eec\u628a\u524d $k$ \u4e2a\u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u6ce8\u610f\u5230\u5b83\u4e0e\u7b2c $k+1$ \u4e2a\u513f\u5b50\u4e5f\u6709\u4e0e\u4e0a\u9762\u7c7b\u4f3c\u7684\u4e09\u79cd\u5173\u7cfb\uff0c\u5373\u9009\u524d $k$ \u4e2a\uff0c\u9009\u7b2c $k+1$ \u4e2a\uff0c\u548c\u540c\u65f6\u9009\u8fd9\u4e24\u4e2a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4fbf\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\u904d\u5386\u6240\u6709\u513f\u5b50\u4e86\uff08\u5f53\u7136\u521d\u59cb\u65f6\u662f $f_x=g_x=0$\uff09\u3002\n\n\u6ce8\u610f\u5230\u8fd8\u6ca1\u6709\u8ba8\u8bba\u5230\u53ea\u9009 $x$ \u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u5728\u521a\u521a\u6c42\u51fa\u7684\u57fa\u7840\u4e0a\uff0c$f_x$ \u8981\u52a0\u4e0a $x$ \u7684\u70b9\u6743\uff0c$g_x$ \u8981\u52a0 $1$\u3002\n\n\u6ce8\u610f\u4e58\u6cd5\u7684\u5730\u65b9\u53ef\u80fd\u7206 `int` \uff0c\u8fd8\u6709\u6ce8\u610f\u6a21\u6570\u662f $10^8+7$ \u800c\u975e $10^9+7$\u3002\n\n\u6ce8\u610f\u5230\u5b8c\u5168\u6ca1\u6709\u7528\u5230\u70b9\u6743\u662f $x$ \u7684\u6027\u8d28\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b97\u6cd5\u5b8c\u5168\u53ef\u4ee5\u9002\u7528\u4e8e\u4efb\u610f\u70b9\u6743\u7684\u60c5\u51b5\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n//\n// Problem: P5007 DDOSvoid \u7684\u7591\u60d1\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P5007\n// Memory Limit: 500 MB\n// Time Limit: 1000 ms\n\n#include <iostream>\n#include <vector>\nusing namespace std;\nvector< int > edges[ 1000010 ];\nlong long int a[ 1000010 ]; //\u70b9\u6743\nlong long int f[ 1000010 ], g[ 1000010 ]; // f \u4e0e g\nconst long long int pmod = 100000007; \nvoid dfs( int x, int fa )\n{\n    for ( auto i : edges[ x ] ) //\u904d\u5386\u6240\u6709\u513f\u5b50\n    {\n        if ( i == fa )\n        {\n            continue;\n        }\n        dfs( i, x );\n        f[ x ] = ( f[ x ] * g[ i ] + f[ i ] * g[ x ] + f[ x ] + f[ i ] ) % pmod;\n        g[ x ] = ( g[ x ] * g[ i ] + g[ x ] + g[ i ] ) % pmod;  //\u6309\u7167\u5f0f\u5b50\u8f6c\u79fb\n    }\n    f[ x ] = ( f[ x ] + a[ x ] ) % pmod; \n    g[ x ]++; //\u52a0\u4e0a\u53ea\u9009\u81ea\u5df1\u7684\u60c5\u51b5\n}\nint main()\n{\n    int n;\n    bool t;\n    cin >> n >> t;\n    for ( int i = 1; i < n; i++ )\n    {\n        int u, v;\n        cin >> u >> v;\n        edges[ u ].push_back( v );\n        edges[ v ].push_back( u );\n        if ( t )\n        {\n            a[ i ] = i;\n        }\n        else\n        {\n            a[ i ] = 1;\n        } \n    }\n    if ( t )\n    {\n        a[ n ] = n;\n    }\n    else\n    {\n        a[ n ] = 1;\n    }//\u6309\u7167\u9898\u76ee\u683c\u5f0f\u5b58\u70b9\u6743\n    dfs( 1, 0 );\n    cout << f[ 1 ] << endl;\n}\n```\n\n",
        "postTime": 1626685137,
        "uid": 122079,
        "name": "songhongyi",
        "ccfLevel": 6,
        "title": "P5007 DDOSvoid\u7684\u7591\u60d1 \u9898\u89e3"
    }
]