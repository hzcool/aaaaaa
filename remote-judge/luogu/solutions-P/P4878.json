[
    {
        "content": "## \u5dee\u5206\u7ea6\u675f\u6a21\u7248\u9898\n\n### \u4e0d\u8fc7\u540e\u4e09\u4e2a\u70b9\u7b80\u76f4\u662f\u6ee1\u6ee1\u7684\u6076\u610fqwq\n\n\u8fd9\u91cc\u4e0d\u8bf4\u505a\u9898\u601d\u8def\uff08\u6bd5\u7adf\u7eaf\u6a21\u677f\uff09\uff0c\u53ea\u8bf4\u51e0\u4e2a\u5751\u70b9\uff1a\n\n1. \u76f8\u90bb\u7684\u4e24\u5934\u725b\u95f4\u5fc5\u987b\u5efa\u8fb9\uff08\u8fd9\u70b9\u597d\u50cfluogu\u6ca1\u6709\u4f53\u73b0\uff09\uff0c\u4f8b\u5982\u4e00\u7ec4\u6570\u636e\uff1a\n\n\t4 1 1\n    \n\t1 4 10\n    \n\t2 3 20\n    \n    output\uff1a-1\n    \n \t\u82e5\u76f8\u90bb\u725b\u672a\u5efa\u8fb9\uff0c\u8dd1\u51fa\u6765\u7684\u7ed3\u679c\u662f10\uff1b\u800c\u4e8b\u5b9e\u5982\u56fe\uff1a\n\n![](https://i.loli.net/2019/03/18/5c8f6c092c1de.png)\n\n        \u5b58\u5728\u8d1f\u6743\u73af\u3002\n        \u56e0\u6b64\u6211\u5728\u4ee3\u7801\u91cc\u5199\u4e86\u4e00\u6761\uff1a\n```cpp\nfor(int i=1;i<n;i++)\n{\n    add(i+1,i,0);\n}\n```\n\n\n2. \u5e94\u8dd1\u4e24\u904dSPFA\uff0c\u4e00\u904d\u4ece\u8d85\u7ea7\u6e90\u70b90\u5224\u65ad\u6709\u65e0\u89e3\uff0c\u4e00\u904d\u4ece1\u8ba1\u7b97\u7ed3\u679c\u3002\n\n\t\u5982\u679c\u4e0d\u8dd10\u90a3\u4e00\u904d\uff0c\u5219\u53ef\u80fd\u5224\u4e0d\u51fa\u9898\u76ee\u539f\u56fe\u662f\u5426\u8054\u901a\u6216\u6709\u65e0\u8d1f\u6743\u73af\uff08\u6bd5\u7adf\u4ece\u70b91\u4e0d\u4e00\u5b9a\u80fd\u5230\u8fbe\u6240\u6709\u70b9\uff09\u3002\n    \n    \u6240\u4ee5\u8981\u5efa\u8fb9qwq\n    \n```cpp\nfor(int i=1;i<=n;i++)\n{\n    add(0,i,0);\n}\n```\n\u4f3c\u4e4e\u53ef\u4ee5\u4e86qwq\n\nAC\u4ee3\u7801\uff1a\n```cpp\n//Author:pawn\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ml,md,a,b,c,fst[10100],nex[50010],v[50010],w[50010],cnt,vis[10100],dis[10100],tim[10100];\nqueue<int> q;\nvoid add(int a,int b,int c)\n{\n    nex[++cnt]=fst[a];\n    fst[a]=cnt;\n    v[cnt]=b;\n    w[cnt]=c;\n    return ;\n}\nint spfa(int k)\n{\n    memset(dis,0x7f/3,sizeof(dis));\n    memset(vis,0,sizeof(vis));\n    memset(tim,0,sizeof(tim));\n    q.push(k);\n    dis[k]=0;\n    vis[k]=1;\n    while(!q.empty())\n    {\n        int u=q.front();\n        //cout<<u<<\" \";\n        q.pop();\n        tim[u]++;\n        vis[u]=0;\n        if(tim[u]>n)\n        return -1;\n        for(int i=fst[u];i!=-1;i=nex[i])\n        {\n            if(dis[v[i]]>dis[u]+w[i])\n            {\n                dis[v[i]]=dis[u]+w[i];\n                if(!vis[v[i]])\n                {\n                    q.push(v[i]);\n                    vis[v[i]]=1;\n                }\n            }\n        }\n    }\n    /*cout<<endl;\n    for(int i=1;i<=n;i++)\n    {\n        cout<<dis[i]<<\" \";\n    }*/\n    if(dis[n]>1e8)\n    return -2;\n    return dis[n];\n}\nint main()\n{\n    memset(fst,-1,sizeof(fst));\n    cin>>n>>ml>>md;\n    for(int i=1;i<=ml;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        add(a,b,c);\n    }\n    for(int i=1;i<=md;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        add(b,a,-c);\n    }\n    for(int i=1;i<n;i++)\n    {\n        add(i+1,i,0);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        add(0,i,0);\n    }\n    int sp=spfa(0); \n    if(sp<=-1)\n    {\n    \tcout<<sp;\n    \treturn 0;\n    }\n    else\n    {\n    \tcout<<spfa(1);\n    }\n    //cout<<\" \"<<sp;\n    return 0;\n}\n/*\n5 1 1\n1 5 10\n2 3 20\n*/\n//output:-1\n\n```\n\u6c42\u8fc7qwq",
        "postTime": 1552903623,
        "uid": 116368,
        "name": "BinDir0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4878 \u3010[USACO05DEC] \u5e03\u5c40\u3011"
    },
    {
        "content": "> ~~\u8fd9\u662f\u6211\u4eec\u5b66\u6821\u7684\u5c0f\u7f51\u7ba1\u4e0a\u4f20\u7684\u9898\uff0c\u6211\u5c45\u7136\u6765\u5199\u9898\u89e3\u4e86QWQ~~\n\n\n\u5f88\u663e\u7136\uff0c\u8fd9\u662f\u4e00\u9053\u5dee\u5206\u7ea6\u675f\u7684\u88f8\u9898\uff0c\u778e\u641e\u4e00\u4e0b\u8dd1\u4e2a\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f~~\u4e27\u5fc3\u75c5\u72c2~~\u7684\u5c0f\u7f51\u7ba1\u51fa\u4e86\u4e09\u4e2a~~DB~~\u6570\u636e\uff0c\u4f60\u8fd8\u5f97\u53bb\u4ece0\u5f00\u59cb\u8dd1spfa\u5224\u65ad\u56fe\u662f\u4e0d\u662f\u8054\u901a\u7684\uff0c\u7136\u540e\u5c31A\u4e86QAQ\n\n##  \u5dee\u5206\u7ea6\u675f\n\u8fd9\u73a9\u610f\u4e3b\u8981\u5c31\u662f\u7ed9\u4f60\u51e0\u4e2a\u4e0d\u7b49\u5f0f\uff0c\u8ba9\u4f60\u6c42\u4e00\u4e2a\u4e1c\u897f\u7684\u8303\u56f4\uff0c\n\n$x_2-x_1\\leq a_1$\n\n$x_3-x_2\\leq a_2$\n\n$x_4-x_3\\leq a_3$\n\n$x_5-x_4\\leq a_4$\n\n\u6bd4\u65b9\u8bf4\u6211\u4eec\u6709\u4ee5\u4e0a\u51e0\u4e2a\u4e0d\u7b49\u5f0f\uff0c\u6c42 $x_5-x_1$\u7684\u6700\u5927\u503c\uff0c\u76f4\u63a5\u4ee3\u5165\u8ba1\u7b97\u5c31\u53ef\u4ee5\uff0c\u4f46\u662f\u8981\u8ba1\u7b97\u673a\u80fd\u62ff\u6765\u8ba1\u7b97\uff0c\u6211\u4eec\u5f97\u6709\u4e00\u4e2a\u89c4\u77e9\u70b9\u7684\u65b9\u6cd5\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u79fb\u9879\uff0c\u53d1\u73b0 $x_i\\leq x_j +a_k$\n\u7136\u540e\u53ef\u4ee5~~\u81ea\u7136\u800c\u7136~~\u5730\u60f3\u5230\u6c42\u6700\u77ed\u8def\u65f6\u7684\u677e\u5f1b\u64cd\u4f5c\uff0c\u4f46\u662f\u8fd9\u91cc\u7b26\u53f7\u662f\u53cd\u7684\uff0c\u8fd9\u5e76\u65e0\u5927\u788d\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u6c42 $x_5-x_1$ \u7684\u6700\u5927\u503c\uff0c\u5c31\u7b49\u4e8e $x_1$ ~ $x_5$ \u7684\u6700\u5c0f\u503c\uff08\u8fd9\u91cc\u8bf7\u597d\u597d\u7406\u89e3\uff09\uff0c\u5982\u679c $dis[n]$ \u662f\u65e0\u7a77\u5927\uff0c\u5c31\u8868\u660e $x_5-x_1$ \u53ef\u4ee5\u65e0\u7a77\u5927\uff0c\u5982\u679c\u51fa\u73b0\u8d1f\u73af\uff0c\u5c31\u8868\u660e\u65e0\u89e3\n\n## code\uff1a\n\u65b9\u4fbf~~\u590d\u5236~~\u7684\u4ee3\u7801QWQ\n\n```cpp\n#include <bits/stdc++.h>\n#define INF 0x3f3f3f3f\n#define main mian\nusing namespace std;\nconst int N=1005;\nconst int M=40005;\nint n,ml,md,a,b,d;\nstruct EDGE\n{\n\tint nxt,to,wei,;\n}edge[M];\nint head[N],tot;\ninline void add(int x,int y,int v)\n{\n\tedge[++tot].nxt=head[x];\n\tedge[tot].to=y;\n\tedge[tot].wei=v;\n\thead[x]=tot;\n}\nqueue<int> q;\nint vis[N],dis[N],circle[N];\nvoid spfa(int s)\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(circle,0,sizeof(circle));\n\tq.push(s);\n\tvis[s]=1,dis[s]=0;\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front(); q.pop(); vis[now]=0;\n\t\tfor(int i=head[now];i;i=edge[i].nxt)\n\t\t{\n\t\t\tint tt=edge[i].to;\n\t\t\tif(dis[now]+edge[i].wei<dis[tt])\n\t\t\t{\n\t\t\t\tdis[tt]=dis[now]+edge[i].wei;\n\t\t\t\tcircle[tt]=circle[now]+1;\n\t\t\t\tif(circle[tt]>=n)\n\t\t\t\t{\n\t\t\t\t\tputs(\"-1\");exit(0);\n\t\t\t\t}\n\t\t\t\tif(!vis[tt])\n\t\t\t\t{\n\t\t\t\t\tvis[tt]=1;\n\t\t\t\t\tq.push(tt);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n}\nint main()\n{\n\tint n;\n\tscanf(\"%d%d%d\",&n,&ml,&md);\n\tfor(int i=1;i<=n;i++) add(0,i,0);\n\tfor(int i=1;i<=ml;i++)\n\t{\n\t\tscanf(\"%d%d%d\",a,b,d);\n\t\tadd(a,b,d);\n\t}\n\tfor(int i=1;i<=md;i++)\n\t{\n\t\tscanf(\"%d%d%d\",a,b,d);\n\t\tadd(b,a,-d);\n\t}\n\tspfa(0);\n\tspfa(1);\n\tif(dis[n]==INF) puts(\"-2\");\n\telse printf(\"%d\",dis[n]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1536924778,
        "uid": 98822,
        "name": "ROY1994",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4878 \u3010[USACO05DEC]layout\u5e03\u5c40\u3011"
    },
    {
        "content": "# Layout G\n[\u9898\u76ee\u4f20\u9001\u95e8qwq](https://www.luogu.com.cn/problem/P4878)\n\n#### \u524d\u8a00\n\n\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8fd9\u9053\u9898\u8bfb\u4e0b\u6765\u5b8c\u5168\u5c31\u662f **\u6a21\u677f\u9898\uff01**\uff08~~\u5f53\u7136\u9664\u6700\u540e\u4e09\u4e2a\u4e07\u6076\u7684$hack$\u6570\u636e\u4ee5\u5916~~\uff09\n\n\u5982\u679c\u6709\u4e0d\u4e86\u89e3\u7684\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\u7684\uff0c\u73c2\u4ee5\u770b[\u8fd9\u7bc7\u535a\u5ba2](https://www.cnblogs.com/Eleven-Qian-Shan/p/13226903.html)\u554a\n\n------------\n#### \u5206\u6790\n\n- $N$\u4e2a\u70b9\uff0c\u7ed9\u51fa$M_L$\u7ec4$\u2264$\u7684\u5173\u7cfb\uff0c$M_D$\u7ec4$\u2265$\u7684\u5173\u7cfb\n\n\u8fd9....\u4e0d\u5c31\u662f**\u7ea6\u675f\u6761\u4ef6**\u561b\uff01\u90a3\u6700\u76f4\u89c2\u7684\u89e3\u51b3\u65b9\u6cd5\u4e0d\u5c31\u662f**\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf**\u561b\uff01\n\n- \u5bf9\u4e8e\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\u7684\u9898\uff0c\u6211\u4eec\u8fd8\u662f\u8981\u5148\u5224\u65ad\u662f**\u8dd1\u6700\u77ed\u8def\u8fd8\u662f\u6700\u957f\u8def**\n\n\u7ee7\u7eed\u770b\u9898\uff0c\u53d1\u73b0\u8981\u6c42\u51fa\u4ece$1$\u5230$N$\u7684**\u6700\u5927**\u8ddd\u79bb\n\n\u6211\u4eec\u77e5\u9053\uff0c**\u6c42\u6700\u5927\u89e3\u5c31\u662f\u8dd1\u6700\u77ed\u8def\uff0c\u6c42\u6700\u5c0f\u89e3\u5c31\u662f\u8dd1\u6700\u957f\u8def**\uff08\u4e0d\u77e5\u9053\u7684\u8fd8\u662f\u4e0a\u9762\u90a3\u7bc7\u535a\u5ba2qwq\uff09\n\n\u521d\u6b65\u601d\u8def\u5df2\u7ecf\u51fa\u6765\u4e86\uff1a\u8dd1\u6700\u77ed\u8def\u7684\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\u6a21\u677f\n\n- \u6211\u4eec\u518d\u6765\u770b\u770b\u8f93\u51fa\u683c\u5f0f\uff1a\n\n1. \u5982\u679c\u4ece$1$\u5230$N$\u6ca1\u6709\u5408\u6cd5\u65b9\u6848\uff0c\u5219\u8f93\u51fa\u201c$-1$\u201d\n\n2. \u5982\u679c\u4ece$1$\u5230$N$\u7684\u8ddd\u79bb\u4e3a\u65e0\u9650\u5927\uff0c\u5219\u8f93\u51fa\u201c$-2$\u201d\n\n3. \u5426\u5219\u8f93\u51fa\u4ece$1$\u5230$N$\u7684\u6700\u5927\u8ddd\u79bb\n\n\u5982\u679c\u4e0d\u597d\u7406\u89e3\uff0c\u53ef\u4ee5\u8f6c\u6362\u6210\u5982\u4e0b\uff1a\n\n1. \u5982\u679c\u4ece$1$\u5230$N$**\u5b58\u5728\u73af**\uff0c\u5219\u662f\u201c$-1$\u201d\n\n2. \u5982\u679c$1$**\u65e0\u6cd5\u5230\u8fbe**$N$\uff0c\u5219\u662f\u201c$-2$\u201d\n\n3. \u5426\u5219\u8f93\u51fa\u4ece$1$\u5230$N$\u7684\u6700\u5927\u8ddd\u79bb\n\n- \u597d\u4e86\uff0c\u6765\u770b\u770b\u4e0a\u9762\u601d\u8def\u7f16\u51fa\u6765\u7684\u4ee3\u7801\uff08\u522b\u6025\u7740\u8bf4\u4e3a\u4ec0\u4e48A\u4e0d\u4e86\uff0c\u56e0\u4e3a\u8fd8\u6709$hack$\u5728\uff09\n\nPS\uff1a\u8fd9\u91cc\u548c\u4e0b\u9762\u7684\u4ee3\u7801\u7686\u4f7f\u7528 **$deque$\uff08\u53cc\u7aef\u961f\u5217\uff09**\uff0c\u8fd9\u662f **$SPFA$\u7684\u4e00\u79cd\u53eb\u505a$SLF$\u7684\u4f18\u5316**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ndeque<int> q;\nint n,ml,md,u,v,w,flag;\nint tot,dis[520010],vis[520010],cnt[520010],head[520010];\n\nstruct node {\n\tint to,net,val;\n} e[520010];\n\ninline void add(int u,int v,int w) {\n\te[++tot].to=v;\n\te[tot].val=w;\n\te[tot].net=head[u];\n\thead[u]=tot;\n}\n\ninline void spfa() {\n\tfor(register int i=1;i<=n;i++) {\n\t\tvis[i]=0;\n\t\tdis[i]=2005020600;\n\t}\n\tdis[1]=0;\n\tvis[1]=1;\n\tcnt[1]=1;\n\tq.push_back(1);\n\twhile(!q.empty()) {\n\t\tint x=q.front();\n\t\tq.pop_front();\n\t\tvis[x]=0;\n\t\tfor(register int i=head[x];i;i=e[i].net) {\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]>dis[x]+e[i].val) {\n\t\t\t\tdis[v]=dis[x]+e[i].val;\n\t\t\t\tif(cnt[v]==n) {\n\t\t\t\t\tflag=1;\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t\tif(!vis[v]) {\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tcnt[v]++;\n\t\t\t\t\tif(!q.empty()&&dis[q.front()]<dis[v]) q.push_back(v);\n\t\t\t\t\telse q.push_front(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d%d\",&n,&ml,&md);\n\tfor(register int i=1;i<=ml;i++) {\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadd(u,v,w);\n\t}\n\tfor(register int i=1;i<=md;i++) {\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadd(v,u,-w);\n\t}\n\tspfa();\n\tif(flag==1) puts(\"-1\");\n\telse {\n\t\tif(dis[n]==2005020600) puts(\"-2\");\n\t\telse printf(\"%d\",dis[n]);\n\t}\n\treturn 0;\n}\n```\n\n------------\n#### \u4f18\u5316\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6700\u540e\u4e09\u7ec4$hack$\u6570\u636e\u8fc7\u4e0d\u4e86\uff08~~\u53ef\u6076\u554a~~\uff09\n\n- \u4e3a\u4ec0\u4e48\uff1f\n\n\u56e0\u4e3a\u9898\u76ee\u7ed9\u51fa\u7684\u6570\u636e**\u5e76\u4e0d\u4fdd\u8bc1\u56fe\u7684\u8fde\u901a\u6027\uff01**\n\n- \u4ec0\u4e48\u610f\u601d\uff1f\n\n$1$\u6709\u53ef\u80fd\u662f\u201c\u5b64\u513f\u70b9\u201d\u554a\uff01\u90a3**\u56fe\u5c31\u4e0d\u8fde\u901a**\u4e86\uff0c\u7ed3\u679c\u5c31\u662f\u4e0a\u9762\u7684\u7a0b\u5e8fWA\u6389\u4e86\n\n- \u600e\u4e48\u4f18\u5316\uff1f\n\n\u6211\u4eec\u5c31\u5148\u7279\u522b\u8dd1\u4e00\u904d\uff0c\u5224\u65ad\u56fe\u662f\u5426\u8fde\u901a\uff0c\u5982\u679c\u8fde\u901a\u5c31\u7ee7\u7eed\u8fdb\u884c\u4e0a\u9762\u7684\u64cd\u4f5c\uff1b\u5982\u679c\u4e0d\u8fde\u901a\u5c31\u76f4\u63a5\u8f93\u51fa\u201c$-1$\u201d\u5373\u53ef\n\n- \u7279\u522b\u5904\u7406\n\n\u8fd9\u91cc\u6211\u4eec\u5f15\u5165\u201c**\u8d85\u7ea7\u6e90\u70b9**\u201d\u6765\u5e2e\u52a9\u6211\u4eec**\u5224\u65ad\u56fe\u7684\u8fde\u901a\u6027**\n\n\u5373\uff1a**\u5efa\u7acb\u4e00\u4e2a\u70b9$0$\uff0c\u7136\u540e\u4e0e$1$\u5230$N$\u7684\u6bcf\u4e2a\u70b9\u90fd\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$0$\u7684\u8fb9**\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8dd1\u4e00\u904d\u989d\u5916\u7684$SPFA$\u6765\u5224\u65ad\u56fe\u7684\u8fde\u901a\u6027\u4e86\uff08\u8fd9\u4e5f\u7b97\u4f5c\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\u7684\u4e00\u79cd\u57fa\u7840\u64cd\u4f5c\u5427\uff09\n\n- \u6700\u540e\u7ed9\u51fa$100pts$\u7684$Code$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ndeque<int> q;\nint n,ml,md,u,v,w,flag;\nint tot,dis[520010],vis[520010],cnt[520010],head[520010];\n\nstruct node {\n\tint to,net,val;\n} e[520010];\n\ninline void add(int u,int v,int w) {\n\te[++tot].to=v;\n\te[tot].val=w;\n\te[tot].net=head[u];\n\thead[u]=tot;\n}\n\ninline void spfa(int s) {\n\tfor(register int i=1;i<=n;i++) {\n\t\tvis[i]=0;\n\t\tdis[i]=2005020600;\n\t}\n\tdis[s]=0;\n\tvis[s]=1;\n\tcnt[s]=1;\n\tq.push_back(s);\n\twhile(!q.empty()) {\n\t\tint x=q.front();\n\t\tq.pop_front();\n\t\tvis[x]=0;\n\t\tfor(register int i=head[x];i;i=e[i].net) {\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]>dis[x]+e[i].val) {\n\t\t\t\tdis[v]=dis[x]+e[i].val;\n\t\t\t\tif(cnt[v]==n) {\n\t\t\t\t\tflag=1;\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t\tif(!vis[v]) {\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tcnt[v]++;\n\t\t\t\t\tif(!q.empty()&&dis[q.front()]<dis[v]) q.push_back(v);\n\t\t\t\t\telse q.push_front(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d%d\",&n,&ml,&md);\n\tfor(register int i=1;i<=n;i++) add(0,i,0);\n\tfor(register int i=1;i<=ml;i++) {\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadd(u,v,w);\n\t}\n\tfor(register int i=1;i<=md;i++) {\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadd(v,u,-w);\n\t}\n\tspfa(0);\n\tif(flag==1) {\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tspfa(1);\n\tif(flag==1) puts(\"-1\");\n\telse {\n\t\tif(dis[n]==2005020600) puts(\"-2\");\n\t\telse printf(\"%d\",dis[n]);\n\t}\n\treturn 0;\n}\n```\n\n\n------------\n\n\u6700\u540e\uff0c\u5982\u679c\u8fd9\u7bc7\u9898\u89e3\u6709\u4efb\u4f55\u9519\u8bef\u6216\u60a8\u6709\u4efb\u4f55\u4e0d\u61c2\u7684\uff0c\u6b22\u8fce\u7559\u8a00\u533a\u8bc4\u8bba\u554a\uff0c\u6211\u4f1a\u53ca\u65f6\u6539\u6b63\u548c\u56de\u590d\uff0c\u8c22\u8c22\u5404\u4f4ddalao\u554aqwq\n\n------------\n\n",
        "postTime": 1593828213,
        "uid": 145205,
        "name": "Eleven\u8c26",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4878 \u3010[USACO05DEC]Layout G\u3011"
    },
    {
        "content": "**\u4e00\u9053\u5dee\u5206\u7ea6\u675f\u7684\u543c\u9898**\n\n\u5bf9\u4e8e\u6b64\u9898\uff0c\u72b6\u6001\u65e0\u975e\u4e24\u79cd\uff1a**\u57fa\u53cb\u4e0e\u654c\u4eba**\n\n\u90a3\u4e48\uff0c**\u5c31\u6709$u-v \\le c$ \u6216\u8005 $u - v \\ge c$**\n\n\u5bf9\u4e8e$u-v \\le c$\uff0c**\u53ef\u4ee5\u7528\u6c42\u6700\u77ed\u8def\u4e2d**\u7684$dis[v] = dis[u] + e[i].dis$\n\n\u6211\u4eec\u5bf9$u - v \\ge c$ \u8f6c\u6362\u6210 $v-u \\le -c$\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5**\u5f88\u6109\u5feb\u7684\u8dd1\u8def**\u5566\n\n\u90a3\u4e48\u5efa\u56fe\u5c31\u9171\uff1a\n\n```cpp\nfor(int i = 1;i <= ml;i ++) {\n\tint u = read(),v = read(),w = read();\n\tcp(u,v,w); \n}\nfor(int i = 1;i <= md;i ++) {\n\tint u = read(),v = read(),w = read();\n\tcp(v,u,-w);\n}\n```\n\u4f46\u662f\uff0c\u6c42\u89e3\u8fc7\u7a0b\u4e2d\u4f1a\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n1.\u5982\u679c**\u6ca1\u6709\u5408\u6cd5\u65b9\u6848**\uff0c\u8f93\u51fa -1\n\n2.\u5982\u679c**\u6709\u5408\u6cd5\u65b9\u6848**\uff0c\u4f46 1 \u53f7\u5976\u725b\u53ef\u4ee5\u4e0e N \u53f7\u5976\u725b**\u76f8\u8ddd\u65e0\u7a77\u8fdc**\uff0c\u8f93\u51fa -2. \n\n3.\u5426\u5219\uff0c**\u8f93\u51fa 1 \u53f7\u5976\u725b\u4e0e N \u53f7\u5976\u725b\u95f4\u7684\u6700\u5927\u8ddd\u79bb**\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5728**\u8dd1\u6700\u77ed\u8def\u65f6\u8981\u5224\u5b9a\u662f\u5426\u5b58\u5728\u8d1f\u73af**\uff0c\u539f\u7406\u4e0d\u7528\u6211\u89e3\u91ca\u5427\uff0c\n\u4f46\u4e00\u70b9\u8981\u6ce8\u610f\uff0c\u5728\u6c42\u89e3\u65b9\u6848\u4e2d\uff0c**\u5224\u8d1f\u73af\u7684\u4f18\u5148\u7ea7\u6700\u9ad8**\n\n\u6240\u4ee5\uff0c\u6709\u65f6\u5019\u56fe\u5e76\u4e0d\u8054\u901a\uff0c\u8fd9\u65f6**\u4e0d\u8981\u7740\u6025\u8f93\u51fa-2\uff0c\u8981\u5148\u5224\u5b9a\u8d1f\u73af\u7684\u6709\u65e0**\n\n\u6240\u4ee5\u6211\u5e72\u8106\u5bf9**\u6bcf\u4e2a\u8054\u901a\u5757\u6c42\u4e00\u4e2aSPFA\uff0c\u5224\u5b9a\u8d1f\u73af**\uff0c**\u6700\u540e\u5728\u4ece1\u8dd1\u5230n\uff0c\u6c42\u6700\u77ed\u8def**\n\n\u5b8c\u6574\u4ee3\u7801\u5728\u8fd9\u91cc\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#define N 50500\n#define INF 999999999\nusing namespace std;\n\ninline int read() {\n\tint x = 0,f = 1; char s = getchar();\n\twhile(s < '0' || s > '9') {if(s == '-') f = -1;s = getchar();}\n\twhile(s >= '0' && s <= '9') {x = x * 10 + s - '0';s = getchar();}\n\treturn x * f;\n}\n\nint n,ml,md;\nint head[N],cnt;\nstruct node {\n\tint nxt,to,dis;\n}e[N];\nint dis[N],vis[N],tot[N],tvs[N];\n\ninline void cp(int u,int v,int w) {\n\tcnt ++;\n\te[cnt].to = v;\n\te[cnt].dis = w;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\n\nqueue<int> q;\ninline bool SPFA(int s) {\n\tfor(int i = 1;i <= n;i ++) dis[i] = INF,tot[i] = 0;\n\tq.push(s); dis[s] = 0; \n\tvis[s] = tot[s] = tvs[s] = 1;\n\twhile(!q.empty()) {\n\t\tint u = q.front(); q.pop(); vis[u] = 0;\n\t\tif(tot[u] >= n) return true; tot[u] ++;\n\t\tfor(int i = head[u];i;i = e[i].nxt) {\n\t\t\tint v = e[i].to; tvs[v] = 1;\n\t\t\tif(dis[v] > dis[u] + e[i].dis) {\n\t\t\t\tdis[v] = dis[u] + e[i].dis;\n\t\t\t\tif(!vis[v]) vis[v] = 1,q.push(v); \n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nint main() {\n\tn = read(),ml = read(),md = read();\n\tfor(int i = 1;i <= ml;i ++) {\n\t\tint u = read(),v = read(),w = read();\n\t\tcp(u,v,w); \n\t}\n\tfor(int i = 1;i <= md;i ++) {\n\t\tint u = read(),v = read(),w = read();\n\t\tcp(v,u,-w);\n\t}\n\tfor(int i = 1;i <= n;i ++) \n\t\tif(!tvs[i]) \n\t\t\tif(SPFA(i)) {\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\tSPFA(1);\t\n\tprintf(\"%d\\n\",dis[n] == INF ? -2 : dis[n]);\n    \t//\u5bf9\u4e8edis[n]\u4ecd\u672a\u66f4\u65b0\uff0c\u5219\u56fe\u4e0d\u8fde\u901a\uff0c\u4e3a\u60c5\u51b52\n\treturn 0;\n}\n```",
        "postTime": 1571060232,
        "uid": 153839,
        "name": "\u6e05\u8fdc\u5b66\u4f1a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4878 \u3010[USACO05DEC] \u5e03\u5c40\u3011"
    },
    {
        "content": "\u770b\u5230\u4e0d\u7b49\u5f0f\u5c31\u80fd\u60f3\u5230\u5dee\u5206\u7ea6\u675f\u3002\n\n\u5bf9\u4e8e\u8fd9\u6837\u7684\u9898\uff0c\u6211\u4eec\u6709\uff1a\n\n\u5f53$X_i-X_j<=C$\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u770b\u6210$X_i<=C+X_j$\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece$j$\u5411$i$\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a$C$\u7684\u8fb9\u3002\n\n\u5f53$X_i-X_j>=C$\u65f6\uff0c\u6211\u4eec\u4e24\u8fb9\u4e58\u4ee5$-1$\u5f97\uff1a\n\n$X_j-X_i<=-C$\uff0c\u4ece$i$\u5411$j$\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a$-C$\u7684\u8fb9\u5373\u53ef\u3002\n\n\u7136\u540e\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u8fd9\u9053\u9898\u6211\u4eec\u53d1\u73b0\u4e24\u4e2a\u4e0d\u4e00\u6837\u7684\u5730\u65b9\uff1a\u4e24\u4e2a\u65e0\u89e3\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u65e0\u89e3\u60c5\u51b5\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679c\u8fd9\u4e2a\u56fe\u6709\u8d1f\u73af\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\u65e0\u89e3\u3002\n\n\u7528$Spfa$\u5373\u53ef\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e0d\u8fde\u901a\u60c5\u51b5\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u7684\u601d\u8def\uff0c\u5efa\u4e00\u4e2a\u70b9$0$\uff0c\u4f7f\u5f97\u5b83\u4e0e\u6240\u6709\u70b9\u90fd\u76f8\u8fde\uff0c\u4e14\u8fb9\u6743\u4e3a$0$.\u7136\u540e\u4ece$0$\u5f00\u59cb\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u8d1f\u73af\u548c\u65e0\u89e3\u60c5\u51b5\uff0c\u90fd\u53ef\u4ee5\u7528\u8fd9\u4e00\u6b65\u5224\u51fa\u6765\u3002\n\n\u90a3\u4e48\uff0c\u5982\u679c\u6709\u89e3\uff0c\u518d\u4ece$1$\u8dd1\u4e00\u904d\u8bb0\u5f55\u7b54\u6848\u5c31\u597d\u4e86\u3002\n\n~~\u8fd9\u9053\u7d2b\u9898\u5176\u5b9e\u6ca1\u90a3\u4e48\u96be\uff0c\u4e0d\u662f\u5417\uff1f\uff08\u9003\uff09~~\n\n$Code:$\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int MAXN=500000;\n#define inf 0x7f/3\nint head[MAXN],dis[MAXN],vis[MAXN];\nint tot,n,m,cnt[MAXN],d;\nqueue<int>q;\nstruct edge{\n\tint nxt,to,dis;\n}e[MAXN];\ninline void add(int x,int y,int w){\n\te[++tot].nxt=head[x];\n\te[tot].to=y;\n\te[tot].dis=w;\n\thead[x]=tot;\n}\nbool Spfa(int s){\n\tmemset(dis,inf,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(cnt,0,sizeof(cnt));\n\tdis[s]=0;vis[s]=1;q.push(s);\n\twhile(!q.empty()){\n\t\tint k=q.front();\n\t\tq.pop();vis[k]=0;\n\t\tcnt[k]++;\n\t\tif(cnt[k]>n){\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tfor(int i=head[k];i;i=e[i].nxt){\n\t\t\tint j=e[i].to;\n\t\t\tif(dis[j]>dis[k]+e[i].dis){\n\t\t\t\tdis[j]=dis[k]+e[i].dis;\n\t\t\t\tif(!vis[j])vis[j]=1,q.push(j);\n\t\t\t}\n\t\t}\n\t}\n\treturn 1;\n}int main(){\n\tscanf(\"%d%d%d\",&n,&m,&d);\n\tfor(int i=1;i<=m;++i){\n\t\tint a,b,c;\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tadd(a,b,c);\n\t}\n\tfor(int i=1;i<=d;++i){\n\t\tint a,b,c;\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tadd(b,a,-c);\n\t}\n\tfor(int i=1;i<=n;++i)add(0,i,0);\n\tfor(int i=1;i<=n;++i)add(i+1,i,0);\n\tint K=Spfa(0);\n\tif(!K)return 0;\n\tif(dis[n]>1e8){\n\t\tprintf(\"-2\\n\");\n\t\treturn 0;\n\t}\n\tint C=Spfa(1);\n\tif(!K||!C)return 0;\n\telse if(dis[n]>1e8)printf(\"-2\\n\");\n\telse printf(\"%d\\n\",dis[n]);\n\treturn 0;\n}\n```\n$(PS:$\u5bf9\u4e8e\u6700\u540e\u4e3a\u4ec0\u4e48\u662f$dis[n]>1e8$\u6211\u4e5f\u4e0d\u592a\u6e05\u695a\uff0c\u5f53\u65f6\u6211\u6ca1\u6709\u8fd9\u6837\u5199$WA$ $on$\u7b2c\u516d\u4e2a\u70b9,\u662f\u5224\u4e0d\u8fde\u901a\u7684\u65f6\u5019\u9519\u4e86\u3002\u5982\u679c\u6709\u5927\u4f6c\u77e5\u9053\u662f\u4e3a\u4ec0\u4e48\uff0c\u8bf7\u79c1\u4fe1\uff0c\u6211\u4f1a\u4fee\u6539\uff0c\u4e0d\u80dc\u611f\u6fc0\u3002",
        "postTime": 1565869623,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4878 \u3010[USACO05DEC] \u5e03\u5c40\u3011"
    },
    {
        "content": "\u505a\u8fd9\u9053\u9898\u4e4b\u524d\uff0c\u5927\u5bb6\u5e94\u8be5\u5148\u5b66\u4e60\u4e00\u4e0b\u5dee\u5206\u7ea6\u675f\u3002\n\n\u7ed9\u5927\u5bb6\u63a8\u8350\u4e2a\u535a\u5ba2\uff1a[\u4e0d\u662f\u6211\u7684\u2026\u2026](http://www.cnblogs.com/void/archive/2011/08/26/2153928.html)\n\n\u7136\u540e\u56de\u5230\u8fd9\u4e2a\u9898\u76ee\u4e0a\u6765\uff0c\u9996\u5148\u8fd9\u9053\u9898\u6709\u8d1f\u73af\u7684\u51fa\u73b0\uff0c\u90a3\u663e\u7136\u4e0d\u80fd\u7528$dijkstra$\u4e86\uff0c\u90a3\u5c31\u628a\u89e3\u6cd5\u9501\u5b9a\u4e3a$spfa$\u3002\n\n\u5bf9\u4e8e\u7ed9\u51fa\u7684\u524d$M_L$\u79cd\u5173\u7cfb\uff1a\n\n\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\uff1a$d[B]-d[A] \\leq D$\n\n\u540e$M_D$\u79cd\u5173\u7cfb\u662f\uff1a$d[B]-d[A] \\geq D$,\u5373$d[A]-d[B] \\leq -D$\n\n\u90a3\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u5173\u7cfb\uff0c\u6839\u636e\u5dee\u5206\u7ea6\u675f\uff0c\u6211\u4eec\u9700\u8981\u5efa\u4ece$A$\u5230$B$\uff0c\u8fb9\u6743\u4e3aD\u7684\u8fb9\uff0c\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u5173\u7cfb\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5efa\u4ece$B$\u5230$A$\uff0c\u8fb9\u6743\u4e3a$-D$\u7684\u8fb9\u3002\n\n\u8fd9\u6837\u5efa\u5b8c\u56fe\u8dd1\u76f4\u63a5\u8c03\u7528$spfa(1)$\u5c31\u53ef\u4ee5\u5f97$70$\u5206\u4e86\uff0c\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u80fd$AC$\n\u5462\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u5dee\u5206\u7ea6\u675f\u65f6\u7684\u8d77\u70b9\u662f$0$\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5148\u8dd1\u4e00\u904d$spfa(0)$,\u5e76\u5efa\u4e00\u6761\u4ece0\u5230$i(1 \\leq i \\leq n)$\u7684\u8fb9\u6743\u4e3a0\u7684\u8fb9\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u96be\u9053\u4e0d\u5e94\u8be5\u662f$d[0]-d[i] \\leq 0$\u4e48\uff1f\u8fd9\u6837\u4e0d\u662f\u5e94\u8be5\u4ecei\u52300\u7684\u8fb9\u4e48\uff1f\u4f46\u662f\uff0c\u6709\u6ca1\u6709\u60f3\u8fc7\uff0c\u5982\u679c\u4f60\u8fd9\u6837\u5efa\uff0c\u90a3\u4f60\u4ee50\u4e3a\u8d77\u70b9\u8dd1spfa\u6709\u610f\u4e49\u4e48\uff1f0\u6ca1\u6cd5\u5230\u8fbe\u4efb\u4f55\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u5efa\u4e00\u6761\u4ece0\u5230i\u7684\u8fb9\u7684\u8fb9\u6743\u4e3a0\u7684\u8fb9\u3002\u8fd9\u6837\u8fd9\u9898\u5c31\u80fdAC\u5566\uff01\n\n\n\u4e0b\u9762\u662f\u6211~~\u4e11\u964b(\u5b66\u957f\u8bf4\u7684)~~\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#include<cstring>\n#include<queue>\n#define maxn 1007\nusing namespace std;\nint num,n,m,p,head[maxn],dis[maxn],vis[maxn],in[maxn];\ninline int qread() {\n  char c=getchar();int num=0,f=1;\n  for(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n  for(;isdigit(c);c=getchar()) num=num*10+c-'0';\n  return num*f;\n}\nstruct node {\n  int v,w,nxt;\n}e[20007];\ninline void ct(int u, int v, int w) {\n  e[++num].v=v;\n  e[num].w=w;\n  e[num].nxt=head[u];\n  head[u]=num;\n}\nconst int inf=0x3f3f3f3f;\ninline void spfa(int s) {\n  memset(dis,0x3f,sizeof(dis));\n  memset(vis,0,sizeof(vis));\n  memset(in,0,sizeof(in));\n  queue<int>q;\n  q.push(s),vis[s]=1,in[s]=1;\n  dis[s]=0;\n  while(!q.empty()) {\n    int u=q.front();\n    q.pop();vis[u]=0;\n    for(int i=head[u];i;i=e[i].nxt) {\n      int v=e[i].v;\n      if(dis[v]>dis[u]+e[i].w) {\n        dis[v]=dis[u]+e[i].w;\n        if(!vis[v]) {\n          vis[v]=1;\n          in[v]++;\n          if(in[v]>n) {\n            printf(\"-1\\n\");\n            exit(0);\n          }\n          q.push(v);\n        }\n      }\n    }\n  }\n}\nint main() {\n  n=qread(),m=qread(),p=qread();\n  for(int i=1,u,v,d;i<=m;++i) {\n    u=qread(),v=qread(),d=qread();\n    ct(u,v,d);\n  }\n  for(int i=1,u,v,d;i<=p;++i) {\n    u=qread(),v=qread(),d=qread();\n    ct(v,u,-d);\n  }\n  for(int i=1;i<=n;++i) ct(0,i,0);\n  spfa(0);\n  spfa(1);\n  if(dis[n]==inf) {\n    printf(\"-2\\n\");\n    return 0;\n  }\n  printf(\"%d\\n\",dis[n]);\n  return 0;\n}\n```",
        "postTime": 1546130305,
        "uid": 68622,
        "name": "King\u4e28\u5e1d\u5fa1\u5a01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4878 \u3010[USACO05DEC]layout\u5e03\u5c40\u3011"
    },
    {
        "content": "\u5173\u4e8e\u4e3a\u4ec0\u4e48\u8981\u4ece0\u5148\u8dd1\u6700\u77ed\u8def\uff08\u5176\u4ed6\u9898\u89e3\u5199\u7684\u597d\u50cf\u4e0d\u662f\u5f88\u6e05\u695a~~\u4e5f\u8bb8\u662f\u6211\u8bed\u6587\u592a\u5dee~~\uff09\n\n## \u3010\u5206\u6790\u3011\n\n\u4e0d\u96be\u770b\u51fa\u8fd9\u662f\u4e00\u9053\u5dee\u5206\u7684\u9898\u76ee\n\n\u5efa\u8fb9\u5c31\u4e0d\u8bf4\u4e86(\u6ce8\u610f\u522b\u6f0f\u4e86\uff09\n\n## \u3010Code\u3011\n```cpp\n\tn = read(),m = read(),k = read();\n    For(i,1,m)\n    {\n        int x,y,z;\n        x = read(),y = read(),z = read();\n        Add_edge(x,y,z);\n    }\n    For(i,1,k)\n    {\n        int x,y,z;\n        x = read(),y = read(),z = read();\n        Add_edge(y,x,-z);\n    }\n    For(i,1,n - 1)\n    {\n        Add_edge(i + 1,i,0);\n    }\n```\n\u8fd9\u6837\u7684\u8bdd\u5c31\u670980\u5206\u4e86\n\n\u90a3\u53e6\u59162\u7684\u70b9\u4e3a\u4ec0\u4e48\u4f1aWA\u5462,\u89c1\u4e0b\u56fe\n\n![](https://cdn.luogu.com.cn/upload/pic/46928.png)\n\n\u5373\n\n5 0 4\n\n5 2 1\n\n4 5 1\n\n4 3 1\n\n3 2 1\n\nAns = -1\n\n~~\u5982\u679c\u6309\u7167\u9898\u610f\uff0c\u8fd9\u6570\u636e\u5e76\u4e0d\u5b58\u5728\uff0c\u56e0\u4e3aB>=A~~\n\n\u5982\u679c\u4ece\u4e00\u5f00\u59cb\u7684\u8bdd\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u662f-2\uff0c\u4f46\u5176\u5b9e\u662f\u65e0\u89e3\u7684\uff08\u5b58\u5728\u8d1f\u73af\uff09\n\n\u6211\u4eec\u53ef\u4ee5\u4ece\u6bcf\u4e2a\u70b9\u8fdb\u884cSPFA,\u627e\u5230\u8d1f\u73af\uff0cprintf(\"-1\");exit(0);\n\n\u6211\u4eec\u53ef\u4ee5\u5728\u5efa\u4e00\u4e2a\u70b9\uff0c\u6bd4\u5982\uff1a0\uff08\u4efb\u610f\u4e00\u4e2a\u4e0d\u5728\u56fe\u4e2d\u7684\u70b9\uff09\uff0c\u5f80\u6bcf\u4e00\u4e2a\u70b9\u5efa\u4e00\u67610\u7684\u8fb9\uff0c\u518d\u4ece0 SPFA\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u6bcf\u4e2a\u70b9SPFA\n\n![](https://cdn.luogu.com.cn/upload/pic/46936.png)\n\n## \u3010Code\u3011\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cstdlib>\n#include <queue>\n#define max(x,y)(x>y?x:y)\n#define re register\n#define min(x,y)(x<y?x:y)\n#define For(a,b,c) for(register int a = b;a <= c; a++)\n#define IL inline \n\nusing namespace std;\n\ntypedef long long LL;\nIL int read() {\n    re int ret=0;re bool flag=0;re char c=getchar();\n    while((c<'0')|(c>'9'))flag^=!(c^'-'),c=getchar();\n    while((c>='0')&(c<='9'))ret=(ret<<3)+(ret<<1)+(c^'0'),c=getchar();\n    return flag?-ret:ret;\n}\n\nIL void Put(char * s) { puts(s); }\nIL void Put(char c) { Put(&c); }\nIL void Put(LL x) { char c[55]={0}; sprintf(c,\"%lld\",x); Put(c); }\nIL void Put(int x) { Put(x|0LL); }\n\nconst int M = 1e7 + 10;\nconst int INF = 0xffff;\n\nqueue <int> Q;\n\nint Dis[M],Gis[M],Nxt[M],Fir[M],go[M],val[M],n,Tot,m,k,Min;\nbool vis[M];\n\ninline void Add_edge(int x,int y,int z)\n{\n    Nxt[++Tot] = Fir[x],go[Tot] = y,val[Tot] = z,Fir[x] = Tot;\n}\n\ninline void SPFA(int x)\n{\n    Q.push(x),Gis[x] = 1,Dis[x] = 0;\n    while(!Q.empty())\n    {\n        int Now = Q.front();Q.pop();\n        vis[Now] = 0;\n        for(re int i = Fir[Now];i;i = Nxt[i])\n        {\n            int Go = go[i];\n            int Val = val[i];\n            if(Dis[Go] > Dis[Now] + Val)\n            {\n                Dis[Go] = Dis[Now] + Val;\n                if(!vis[Go])\n                {\n                    if(++Gis[Go] >= n + 1)\n                    {\n                        Put(-1);\n                        exit(0);\n                    }\n                    Q.push(Go);\n                    vis[Go] = 1;\n                }\n            }\n        }\n    }\n}\n\ninline bool check()\n{\n    int Max = Dis[1];\n    For(i,2,n)\n    {\n        if(Dis[i] < Max) return 1;\n        Max = max(Max,Dis[i]);\n    }\n    return 0;\n}\n\ninline void init()\n{\n    n = read(),m = read(),k = read();\n    For(i,1,m)\n    {\n        int x,y,z;\n        x = read(),y = read(),z = read();\n        Add_edge(x,y,z);\n    }\n    For(i,1,k)\n    {\n        int x,y,z;\n        x = read(),y = read(),z = read();\n        Add_edge(y,x,-z);\n    }\n    \n    For(i,1,n) Add_edge(i + 1,i,0);\n    \n    For(i,1,n)\n    {\n        Add_edge(0,i,0);\n    }\n}\n\ninline void solve()\n{\n    memset(Dis,127/3,sizeof(Dis));\n    int p = Dis[n];\n    \n    SPFA(0);//\u6bcf\u4e2a\u70b9\u8fdb\u884cSPFA\n    \n    memset(Dis,127/3,sizeof(Dis));\n    memset(vis,0,sizeof(vis));\n    \n    SPFA(1);\n    if(Dis[n] == p) Put(-2);\n    else Put(Dis[n]);\n}\n\nint main(void)\n{\n    init();\n    solve();\n    return 0;\n}\n\n```",
        "postTime": 1545484837,
        "uid": 75093,
        "name": "Awdrgysxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4878 \u3010[USACO05DEC]layout\u5e03\u5c40\u3011"
    },
    {
        "content": "### \u9898\u9762\n\n1512 \u6392\u961f\u5e03\u5c40\n\n\u65f6\u95f4\u9650\u5236: 1000 ms \u5185\u5b58\u9650\u5236: 65536 KB\n\n\u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\n\u5f53\u6392\u961f\u7b49\u5019\u5582\u98df\u65f6\uff0c\u5976\u725b\u559c\u6b22\u548c\u5b83\u4eec\u7684\u670b\u53cb\u7ad9\u5f97\u9760\u8fd1\u4e9b\u3002FJ\u6709N\u5934\u5976\u725b\uff0c\u7f16\u53f7\u4ece1\u5230N\uff0c\u6cbf\u4e00\u6761\u76f4\u7ebf\u7ad9\u7740\u7b49\u5019\u5582\u98df\u3002\u5976\u725b\u6392\u5728\u961f\u4f0d\u4e2d\u7684\u987a\u5e8f\u548c\u5b83\u4eec\u7684\u7f16\u53f7\u662f\u76f8\u540c\u7684\u3002\u56e0\u4e3a\u5976\u725b\u76f8\u5f53\u82d7\u6761\uff0c\u6240\u4ee5\u53ef\u80fd\u6709\u4e24\u5934\u6216\u8005\u66f4\u591a\u5976\u725b\u7ad9\u5728\u540c\u4e00\u4f4d\u7f6e\u4e0a\u3002\u5373\u4f7f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8c61\u5976\u725b\u662f\u7ad9\u5728\u4e00\u6761\u6570\u8f74\u4e0a\u7684\u8bdd\uff0c\u5141\u8bb8\u6709\u4e24\u5934\u6216\u66f4\u591a\u5976\u725b\u62e5\u6709\u76f8\u540c\u7684\u6a2a\u5750\u6807\u3002\u4e00\u4e9b\u5976\u725b\u76f8\u4e92\u95f4\u5b58\u6709\u597d\u611f\uff0c\u5b83\u4eec\u5e0c\u671b\u4e24\u8005\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6570L\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4e00\u4e9b\u5976\u725b\u76f8\u4e92\u95f4\u975e\u5e38\u53cd\u611f\uff0c\u5b83\u4eec\u5e0c\u671b\u4e24\u8005\u95f4\u7684\u8ddd\u79bb\u4e0d\u5c0f\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6570D\u3002\n\n\u7ed9\u51faML\u6761\u5173\u4e8e\u4e24\u5934\u5976\u725b\u95f4\u6709\u597d\u611f\u7684\u63cf\u8ff0\uff0c\u518d\u7ed9\u51faMD\u6761\u5173\u4e8e\u4e24\u5934\u5976\u725b\u95f4\u5b58\u6709\u53cd\u611f\u7684\u63cf\u8ff0\u3002\u4f60\u7684\u5de5\u4f5c\u662f\uff1a\u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u8981\u6c42\u7684\u65b9\u6848\uff0c\u8f93\u51fa\u22121\uff1b\u5982\u679c1\u53f7\u5976\u725b\u548cN\u53f7\u5976\u725b\u95f4\u7684\u8ddd\u79bb\u53ef\u4ee5\u4efb\u610f\u5927\uff0c\u8f93\u51fa\u22122\uff1b\u5426\u5219\uff0c\u8ba1\u7b97\u51fa\u5728\u6ee1\u8db3\u6240\u6709\u8981\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c1\u53f7\u5976\u725b\u548cN\u53f7\u5976\u725b\u95f4\u53ef\u80fd\u7684\u6700\u5927\u8ddd\u79bb\u3002\n\n\u3010\u8f93\u5165\u3011\n\n\u7b2c\u4e00\u884c\u4e09\u4e2a\u6574\u6570N,ML,MD\uff1b\u63a5\u4e0b\u6765ML\u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6b63\u6574\u6570A,B,D\uff0c\u8868\u793a\u5976\u725bA\u548c\u5976\u725bB\u81f3\u591a\u76f8\u9694D\u7684\u8ddd\u79bb\uff1b\u63a5\u4e0b\u6765MD\u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6b63\u6574\u6570A,B,D\uff0c\u8868\u793a\u5976\u725bA\u548c\u5976\u725bB\u81f3\u5c11\u76f8\u9694D\u7684\u8ddd\u79bb\u3002\n\n\u3010\u8f93\u51fa\u3011\n\n\u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u8981\u6c42\u7684\u65b9\u6848\uff0c\u8f93\u51fa\u22121\uff1b\u5982\u679c1\u53f7\u5976\u725b\u548cN\u53f7\u5976\u725b\u95f4\u7684\u8ddd\u79bb\u53ef\u4ee5\u4efb\u610f\u5927\uff0c\u8f93\u51fa\u22122\uff1b\u5426\u5219\uff0c\u8ba1\u7b97\u51fa\u5728\u6ee1\u8db3\u6240\u6709\u8981\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c1\u53f7\u5976\u725b\u548cN\u53f7\u5976\u725b\u95f4\u53ef\u80fd\u7684\u6700\u5927\u8ddd\u79bb\u3002\n\n\u3010\u8f93\u5165\u6837\u4f8b\u3011\n\n4 2 1\n\n1 3 10\n\n2 4 20\n\n2 3 3\n\n\u3010\u8f93\u51fa\u6837\u4f8b\u3011\n\n27\n\n\u3010\u63d0\u793a\u3011\n\n\u6837\u4f8b\u8bf4\u660e\uff1a\n\n\u8fd9\u56db\u5934\u725b\u5206\u522b\u4f4d\u4e8e 0,7,10,27\u3002\n\n\u6570\u636e\u8303\u56f4:\n\n\u5bf9\u4e8e\u5168\u90e8\u6570\u636e\uff0c2\u2264N\u22641000,1\u2264ML,MD\u226410^4,1\u2264L,D\u226410^6\u3002\n\n### \u7b97\u6cd5\n\n\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\uff08\u6700\u77ed\u8def / \u6700\u957f\u8def\uff09\u3001SPFA\u5224\u8d1f\uff08\u6b63\uff09\u73af\n\n#### \u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\n\n\u7ed9\u5b9a\u82e5\u5e72\u4e2a**\u4e0d\u7b49\u5f0f\uff08\u7ea6\u675f\u6761\u4ef6\uff09**\uff0c\u4e0d\u7b49\u5f0f\u5f62\u5982 $x_i-x_j<=a$ \uff08\u5176\u4e2d $a$ \u4e3a\u5e38\u6570\uff09\uff0c\u8981\u6c42\u4e00\u7ec4\u89e3\u4f7f\u5f97\u6240\u4ee5\u4e0d\u7b49\u5f0f\u6210\u7acb\u3002\n\n\u4e0d\u7b49\u5f0f\u53ef\u4ee5\u53d8\u5f62\u4e3a $x_i<=x_j+a$ \u8fd9\u548c**\u5355\u6e90\u6700\u77ed\u8def\u4e2d\u7684\u677e\u5f1b\u7684\u5f0f\u5b50** $dis[edge[j].to]<=dis[i]+edge[j].w$ \u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u628a**\u6bcf\u4e00\u4e2a\u53d8\u91cf\u770b\u4f5c\u6709\u5411\u56fe\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u5bf9\u4e8e\u7ea6\u675f\u6761\u4ef6\u5efa\u7acb\u6709\u5411\u8fb9\uff0c\u6c42\u51fa\u6b64\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\u3002**\n\n\u5982\u679c ${dis[1],dis[2],\u2026\u2026,dis[n]}$ \u662f\u4e00\u7ec4\u89e3\uff0c\u5219 ${dis[1]+x,dis[2]+x,\u2026\u2026,dis[n]+x}$ \u4e5f\u662f\u4e00\u7ec4\u89e3\uff08\u4f5c\u5dee\u62b5\u6d88\uff09\u3002\n\n#### \u5efa\u56fe\u65b9\u6cd5\n\n\u5bf9\u4e8e\u666e\u901a\u7684\u5dee\u5206\u7ea6\u675f\u7684\u5f0f\u5b50\uff0c\u5efa\u56fe\u7684\u65b9\u6cd5\u6709\u5982\u4e0b\u4e24\u79cd\n\n1. \u5355\u6e90\u6700\u77ed\u8def\u5efa\u56fe\n\n**\u5bf9\u4e8e** $x_i-x_j<=a$ **\u4ece\u7ed3\u70b9j\u5411\u7ed3\u70b9i\u8fde\u4e00\u6761\u957f\u5ea6\u4e3aa\u7684\u8fb9\u3002** \u6240\u6c42\u6700\u77ed\u8def\u7684\u957f\u5ea6\u5c31\u662f\u539f\u4e0d\u7b49\u5f0f\u7ec4\u7684\u4e00\u7ec4\u89e3\u3002\n\n\u5bf9\u4e8e $x_i-x_j>=a$ \u7684\u6761\u4ef6\u53ef\u4ee5\u8f6c\u6362\u4e3a $x_i-x_j<=-a$ \u6c42\u89e3\u3002\n\n**\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b90\u53f7\u70b9**\uff0c\u4ece0\u53f7\u70b9\u5411\u6bcf\u4e00\u4e2a\u70b9\u8fde\u63a5\u4e00\u6761\u957f\u5ea6\u4e3a0\u7684\u6709\u5411\u8fb9\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u56fe\u7684\u8054\u901a\u6027\uff0c\u4e5f\u4e0d\u4f1a\u589e\u52a0\u6700\u77ed\u8def\u7684\u957f\u5ea6\uff0c**\u53ef\u4ee5\u627e\u51fa\u6700\u5c0f\u7684\u6b63\u6574\u6570\u89e3**\u3002\n\n\u5982\u679c\u628a0\u53f7\u70b9\u5411\u6bcf\u4e00\u4e2a\u70b9\u8fde\u63a5\u7684\u6709\u5411\u8fb9\u7684\u957f\u5ea6**\u8c03\u6574\u4e3aa**\uff0c\u5219\u53ef\u4ee5\u662f\u89e3**\u90fd\u5927\u4e8ea**\u3002\n\n2. \u5355\u6e90\u6700\u957f\u8def\u5efa\u56fe\n\n**\u5bf9\u4e8e** $x_i-x_j>=a$ **\u4ece\u7ed3\u70b9j\u5411\u7ed3\u70b9i\u8fde\u4e00\u6761\u957f\u5ea6\u4e3aa\u7684\u8fb9\u3002** \u6240\u6c42**\u6700\u957f\u8def**\u7684\u957f\u5ea6\u5c31\u662f\u539f\u4e0d\u7b49\u5f0f\u7ec4\u7684\u4e00\u7ec4\u89e3\u3002\n\n\u5728\u6c42\u6700\u957f\u8def\u7684\u65f6\u5019\uff0c\u8981\u5c06dis\u6570\u7ec4\u521d\u59cb\u5316\u4e3a-inf\uff0c\u6c42\u89e3\u65f6\u7684\u677e\u5f1b\u5f0f\u5b50\u8981\u53d8\u4e3a $dis[edge[j].to]>=dis[i]+edge[j].w$ \u3002\n\n#### \u89e3\u7684\u5224\u65ad\n\n\u8981\u5224\u65ad\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\u662f\u5426\u6709\u89e3\uff0c\u9700\u8981\u5224\u65ad\u56fe\u4e2d\u662f\u5426\u6709\u6b63\uff08\u8d1f\uff09\u73af\uff08\u5176\u5b9e\u5c31\u662f\u5224\u65ad\u56fe\u662f\u5426\u6709\u6700\u77ed\u8def / \u6700\u957f\u8def\uff09\u3002\n\n#### \u5224\u65ad\u65b9\u6cd5\n\n1. \u5728SPFA\u8fed\u4ee3\u65f6\uff0c\u8bb0\u5f55\u70b9\u5165\u961f\u7684\u6b21\u6570\uff0c\u82e5\u6b21\u6570\u5927\u4e8e\u70b9\u6570\uff0c\u5219\u5b58\u5728\u8d1f\u73af\u3002\n\n2. \u5728SPFA\u8fed\u4ee3\u65f6\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u6700\u77ed\u8def\u7ecf\u8fc7\u7684\u70b9\u7684\u6570\u76ee\uff0c\u82e5\u5927\u4e8e\u603b\u70b9\u6570\uff0c\u5219\u5b58\u5728\u8d1f\u73af\u3002\n\n\u6b63\u73af\uff08\u6700\u957f\u8def\uff09\u7684\u5224\u65ad\u65b9\u6cd5\u4e5f\u662f\u76f8\u4f3c\u7684\u3002\n\n#### \u672c\u9898\u4e2d\u7684\u5dee\u5206\u7ea6\u675f\u6761\u4ef6\n\n\u672c\u9898\u4e2d\u725b\u7684\u8ddd\u79bb\u8981\u6c42\u5c31\u662f\u5dee\u5206\u7ea6\u675f\u6761\u4ef6\u3002\n\n\u6ce8\u610f\uff1a\u672c\u9898\u4e2d\u5bf9\u725b\u7684\u8ddd\u79bb\u7684\u8981\u6c42\u6709\u4e24\u79cd\uff0c\u4e0d\u7b49\u5f0f\u7b26\u53f7\u76f8\u53cd\uff0c\u9700\u8981\u5c06\u5f0f\u5b50\u53d8\u5f62\u540e\u4f7f\u7b26\u53f7\u65b9\u5411\u4e00\u81f4\u624d\u80fd\u8fdb\u884c\u5dee\u5206\u7ea6\u675f\u7b97\u6cd5\u3002\n\n\u672c\u9898\u4e5f\u8981\u5224\u65ad1\u53f7\u70b9\u4e0en\u53f7\u70b9\u7684\u8054\u901a\u6027\uff0c\u9700\u8981\u8fdb\u884c2\u6b21SPFA\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nunsigned short int n,ml,md,a,b;\nunsigned int d;\nstruct node\n{\n\tunsigned short int to,next;\n\tint w;\n}edge[40005];\nunsigned short int cnt,head[1005];\ninline void add(unsigned short int u,unsigned short int v,int w)\n{\n\tcnt++;\n\tedge[cnt].to=v;\n\tedge[cnt].next=head[u];\n\thead[u]=cnt;\n\tedge[cnt].w=w;\n}//\u90bb\u63a5\u8868\nint dis[1005];\nunsigned int sum[1005];\nchar book[1005];\nchar spfa(unsigned short int start)\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(sum,0,sizeof(sum));\n\tmemset(book,0,sizeof(book));\n\tstd::queue<unsigned short int> q;\n\tq.push(start);\n\tdis[start]=0;\n\twhile(!q.empty())\n\t{\n\t\tunsigned short int i=q.front();\n\t\tq.pop();\n\t\tbook[i]=0;\n\t\tfor(unsigned short int j=head[i];j!=0;j=edge[j].next)\n\t\t{\n\t\t\tif(dis[edge[j].to]>dis[i]+edge[j].w)\n\t\t\t{\n\t\t\t\tdis[edge[j].to]=dis[i]+edge[j].w;\n\t\t\t\tsum[edge[j].to]=sum[i]+1;//\u7ecf\u8fc7\u7684\u70b9\u7edf\u8ba1\n\t\t\t\tif(sum[edge[j].to]>=n)\n\t\t\t\t{\n\t\t\t\t\tputs(\"-1\");\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif(book[edge[j].to]==0)\n\t\t\t\t{\n\t\t\t\t\tbook[edge[j].to]=1;\n\t\t\t\t\tq.push(edge[j].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}//\u6700\u77ed\u8defSPFA\nint main()\n{\n\tscanf(\"%hu%hu%hu\",&n,&ml,&md);\n\tfor(unsigned short int i=n;i>=1;i--)\n\t{\n\t\tadd(0,i,0);\n\t}//\u865a\u62df\u6e90\u70b9\n\tfor(unsigned short int i=1;i<=ml;i++)\n\t{\n\t\tscanf(\"%hu%hu%u\",&a,&b,&d);\n\t\tadd(a,b,d);\n\t}\n\tfor(unsigned short int i=1;i<=md;i++)\n\t{\n\t\tscanf(\"%hu%hu%u\",&a,&b,&d);\n\t\tadd(b,a,-d);\n\t}\n\tif(spfa(0)==1)//\u5224\u65ad\u89e3\n\t{\n\t\treturn 0;\n\t}\n\tspfa(1);//\u6b64\u5904\u4ece1\u5f00\u59cb\uff0c\u5224\u65ad\u8054\u901a\u6027\u548c\u6700\u77ed\u8ddd\u79bb\n\tif(dis[n]==0x3f3f3f3f)\n\t{\n\t\tputs(\"-2\");\n\t\treturn 0;\n\t}\n\tprintf(\"%u\",dis[n]);\n\treturn 0;\n}\n```\n#### \u8fd0\u884c\u7ed3\u679c\n\n\u4e00\u672c\u901aOJ\uff1a\n\n1512\n\n\u901a\u8fc7 100\u5206\n\n\u6d4b\u8bd5\u70b91: \u7b54\u6848\u6b63\u786e 428KB 2MS \n\n\u6d4b\u8bd5\u70b92: \u7b54\u6848\u6b63\u786e 424KB 1MS \n\n\u6d4b\u8bd5\u70b93: \u7b54\u6848\u6b63\u786e 436KB 1MS \n\n\u6d4b\u8bd5\u70b94: \u7b54\u6848\u6b63\u786e 436KB 1MS \n\n\u6d4b\u8bd5\u70b95: \u7b54\u6848\u6b63\u786e 452KB 1MS \n\n\u6d4b\u8bd5\u70b96: \u7b54\u6848\u6b63\u786e 440KB 2MS \n\n\u6d4b\u8bd5\u70b97: \u7b54\u6848\u6b63\u786e 452KB 2MS \n\n\u6d4b\u8bd5\u70b98: \u7b54\u6848\u6b63\u786e 484KB 6MS \n\n\u6d4b\u8bd5\u70b99: \u7b54\u6848\u6b63\u786e 508KB 5MS \n\n\u6d4b\u8bd5\u70b910: \u7b54\u6848\u6b63\u786e 516KB 5MS \n\n\u6d1b\u8c37\uff1a\n\n\u8bc4\u6d4b\u72b6\u6001 Accepted\n\n\u8bc4\u6d4b\u5206\u6570 100\n\n\u7528\u65f6 105ms \u5185\u5b58 912.00KB\n\n\u6d4b\u8bd5\u70b9\u4fe1\u606f\n\n2ms/640.00KB AC #1\n\n3ms/656.00KB AC #2\n\n3ms/656.00KB AC #3\n\n3ms/664.00KB AC #4\n\n3ms/772.00KB AC #5\n\n3ms/656.00KB AC #6\n\n3ms/664.00KB AC #7\n\n4ms/692.00KB AC #8\n\n5ms/804.00KB AC #9\n\n5ms/760.00KB AC #10\n\n3ms/692.00KB AC #11\n\n32ms/512.00KB AC #12\n\n36ms/912.00KB AC #13\n\n//\u7b2c\u4e00\u4e2aAC\u7684\u7d2b\u9898\uff01\uff01\uff01",
        "postTime": 1565425759,
        "uid": 158626,
        "name": "lzcjoe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4878 \u3010[USACO05DEC] \u5e03\u5c40 / \u4e00\u672c\u901a\u63d0\u9ad8\u7bc7 3.4.2 1512 \u6392\u961f\u5e03\u5c40\u3011"
    },
    {
        "content": "## \u4e00\u9053\u88f8\u7684\u5dee\u5206\u7ea6\u675f\u9898\u76ee\n~~\uff08\u672c\u849f\u84bb\u4e00\u5f00\u59cb\u5c45\u7136\u6ca1\u60f3\u5230\u7528\u5dee\u5206\uff0c\u76f4\u5230\u540e\u6765\u542c\u53d6WA\u58f0\u4e00\u7247\u3002\u3002\u3002QwQ\uff09~~\n\n------------\n\n## \u4ec0\u4e48\u662f\u5dee\u5206\u7ea6\u675f\n  - \u7ed9\u5b9an\u4e2a\u53d8\u91cf\u548cm\u4e2a\u4e0d\u7b49\u5f0f\uff0c\u6bcf\u4e2a\u4e0d\u7b49\u5f0f\u7684\u5f62\u5f0f\u4e3a **a[i] - a[j] <= dis **  (0 <= i, j < n, 0 <= k < m\uff0cdis\u5df2\u77e5) \uff0c\u6c42 a[i] - a[j] \u7684\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u3002\n \n  - \u5bf9\u4e8e\u6bcf\u4e2a\u4e0d\u7b49\u5f0f\uff1aa[i] - a[j] <= dis \u6216 a[i] - a[j] >= dis\uff1b\u5efa\u7acb**\u70b9 j \u5230\u70b9 i **\u7684\u6709\u5411\u8fb9\uff0c\u8fb9\u6743\u4e3adis\u3002\n \n  - \u6c42 a[i] - a[j] \u7684**\u6700\u5927\u503c**\uff0c\u5c31\u662f\u6c42 j \u5230 i \u7684**\u6700\u77ed\u8def**\u3002(a[i] - a[j] <= dis)\u3002\n  \n  \u6c42 a[i] - a[j] \u7684**\u6700\u5c0f\u503c**\uff0c\u5c31\u662f\u6c42 j \u5230 i \u7684**\u6700\u957f\u8def**\u3002(a[i] - a[j] >= dis)\n \n  - \u82e5\u6240\u5efa\u7acb\u7684\u6709\u5411\u56fe\u6709**\u8d1f\u73af**\u5219\u8fd9\u4e9b\u4e0d\u7b49\u5f0f**\u65e0\u89e3**\u3002\n\n~~\uff08\u7531\u6b64\u53ef\u89c1\u8fd9\u662f\u4e00\u4e2a\u7070\u5e38\u7070\u5e38\u6bd2\u7624\u7684\u7b97\u6cd5QwQ\uff09~~\n\n##  \n\n\n ##  \n\n** \u6240\u4ee5\u8bf4\uff0c\u8fd9\u9898 ~~\u663e\u800c\u6613\u89c1~~ \u662f\u5dee\u5206\u60f9~**\n\n  \n## \u53e6\u5916\u8fd8\u6709\u51e0\u70b9\u8981\u6ce8\u610f\u54d2\uff1a\n \n  - \u53ef\u80fd\u6709\u8d1f\u8fb9\u6743\uff0c\u56e0\u6b64\u53ef\u4ee5\u628a\u6700\u77ed\u8def\u786e\u5b9a\u4e3a**SPFA**\u3002\n  \n  - \u9898\u76ee\u4e2d\u6709\u4e9b\u6761\u4ef6\u662f a[j] - a[i] >= dis , \u8fd8\u9700\u8981\u4e58\u4e00\u4e2a \u22121 \uff0c\u628a\u5b83\u53d8\u6210 a[j] - a[i] <= \u2212dis \u5c31\u53ef\u4ee5\u5566\u3002\n  \n  - \u56fe\u53ef\u80fd\u4e0d\u8fde\u901a\uff0c\u56e0\u6b64\u8981\u4ece0\u5f00\u59cb\u5411\u6bcf\u4e2a\u70b9\u5efa\u4e00\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\uff0c\u7136\u540e\u8fd8\u8981\u4ee50\u4e3a\u9876\u70b9\u8dd1\u4e00\u904dSPFA\uff0c\u6700\u540e\u624d\u80fd\u4ee51\u4e3a\u9876\u70b9\u8dd1\u6700\u77ed\u8def\u6c42\u89e3\u3002\n  \n  ~~\uff08\u5f53\u521d\u6ca1\u60f3\u5230\u8fd9\u70b9\uff0c\u7ed3\u679c\u90a3\u4e09\u7ec4hack\u6570\u636e\u603c\u5230\u809d\u75bcQwQ\uff09~~\n\n\n\n## code\uff1a\n```cpp\n#include <bits /stdc++.h>\n#define N 1000005\n#define inf 0x3f3f3f3\nusing namespace std;\n\ninline void r(int &a) {\n\tchar c;\n\ta=0;\n\twhile((c=getchar())<48);\n\twhile(c>47) a=a*10+c-'0',c=getchar();\n}\n\ninline void wr(int x) {\n\tif(x<0) x=-x,putchar (45);\n\tif(x<10) {putchar (x+48);return;}\n\twr(x/10);\n\tputchar (x%10+48);\n}\n\nstruct edge {\n\tint nt,to,w;\n} e[2*N];\n\nint n,ml,md,t;\nint head[2*N],vis[2*N],dis[2*N],use[2*N];\n\nqueue<int> q;\n\ninline void add(int x,int y,int v) {\n\te[++t].nt=head[x];\n\te[t].to=y;\n\te[t].w=v;\n\thead[x]=t;\n}\n\nviod SPFA(int s) {\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(use,0,sizeof(use));\n\tq.push(s);\n\tvis[s]=1,dis[s]=0;\n\twhile(!q.empty()) {\n\t\tint u=q.front();\n\t\tq.pop(),vis[u]=0;\n\t\tfor(int i=head[u]; i; i=e[i].nt) {\n\t\t\tint z=e[i].to,v=e[i].w;\n\t\t\tif(dis[u]+v<dis[z]) {\n\t\t\t\tdis[z]=dis[u]+v,use[z]=use[u]+1;\n\t\t\t\tif(use[z]>=n) puts(\"-1\"),exit(0);\n\t\t\t\tif(!vis[z]) vis[z]=1,q.push(z);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tr(n),r(ml),r(md);\n\tfor(int i=1; i<=n; i++) add(0,i,0);\n\tint a,b,d;\n\tfor(int i=1; i<=ml; i++) \n\t\tr(a),r(b),r(d),add(a,b,d);\n\tfor(int i=1; i<=md; i++)\n\t\tr(a),r(b),r(d),add(b,a,-d);\n\tSPFA(0),SPFA(1);\n\tif(dis[n]==inf) puts(\"-2\");\n\telse wr(dis[n]);\n\treturn 0;\n}\n\n```\n \n ",
        "postTime": 1549774944,
        "uid": 68972,
        "name": "\u65d7\u6728\u4e94\u4e94\u5f00",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4878 \u3010[USACO05DEC] \u5e03\u5c40\u3011"
    },
    {
        "content": "## \u5176\u5b9e\uff0c\u6ca1\u6709HACK\u6570\u636e\u6211\u4eec\u4e5f\u5e94\u8be5\u60f3\u5230\u56fe\u4e0d\u8fde\u901a\u7684\u60c5\u51b5\uff0c\u5173\u4e8e\u5dee\u5206\u7ea6\u675f\u53ef\u4ee5\u770b\u770b\u697c\u4e0b\u9898\u89e3\n# \u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cdDFS\u5224\u8d1f\u73af\u7684\u65b9\u6cd5\uff0c\u987a\u5e26\u63d0\u4e00\u4e0b\u672c\u9898\u7684\u4e00\u70b9\u6ce8\u610f\u4e8b\u9879\n##### \u5bf9\u6bcf\u4e2a\u70b9\uff0c\u8bb0\u4e00\u4e2aVIS\uff0c\u5728DFS\u8fdb\u5165\u8be5\u70b9\u65f6VIS=1\uff0c\u6b63\u5e38\u56de\u6eaf\u65f6VIS=0\uff0c\u8868\u793a\u8be5\u70b9\u5728\u6b64\u6b21DFS\u4e2d\u88ab\u8bbf\u95ee\uff0c\u8fd4\u56de0\n### \u904d\u5386\u6240\u6709\u51fa\u8fb9\uff0c\u5e76\u66f4\u65b0\u6700\u77ed\u8def\uff0c\u5982\u679c\u8be5\u70b9\u6709VIS\u6807\u8bb0\uff0c\u8bf4\u660eDFS\u4e86\u4e00\u5708\u53c8\u56de\u5230\u4e86\u5b83\uff0c\u53ea\u80fd\u662f\u56e0\u4e3a\u6709\u8d1f\u73af\uff0c\u8fd4\u56de1\n#### \u4e3e\u4e2a\u6817\u5b50\n \u6211\u4eec\u8981\u627e\u5c0f\u660e\u7684\u7956\u5148\uff0c\u4e8e\u662f\u627e\u5c0f\u660e\u7684\u7238\u7238\uff0c\u518d\u627e\u5c0f\u660e\u7684\u7237\u7237\u3002\u3002\u3002\u7ed3\u679c\u627e\u4e86\u4e00\u5708\u56de\u6765\u7a81\u7136\u627e\u5230\u4e86\u5c0f\u660e\uff08~~\u4e71\u4f26\u4e86~~\uff09\u8bf4\u660e\u6709\u95ee\u9898\uff08~~\u5c0f\u660e\u662f\u81ea\u5df1\u7684\u7956\u5148~~\uff09\n\u8fd9\u4e2a\u4f8b\u5b50\u4e0d\u4e25\u8c28\uff0c\u4f46\u7c7b\u6bd4\u5728\u5224\u8d1f\u73af\u7684\u60c5\u51b5\u4e2d\u5f88\u6d45\u663e\u6613\u61c2\n\u5f53\u7136\uff0c\u56fe\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u8054\u901a\u5757\uff0c\u56e0\u6b64\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u8bb0\u4e00\u4e2aUSE\uff0c\u5728DFS\u65f6\u628aUSE\u8bb0\u4e3a1\uff0c\u5faa\u73af\u6bcf\u4e2a\u70b9\u53d6USE=0\u7684\u70b9\u5f00\u59cbDFS\n# \u6700\u540e\uff0c\u5f3a\u8c03\u4e00\u4e2a\u95ee\u9898\n## \u6bcf\u5934\u5976\u725b\u5f00\u59cb\u65f6\u90fd\u662f\u6709\u5e8f\u6392\u5217\u7684\uff0c\u8fd9\u8bf4\u660ed[x]-d[x-1]>=0\uff0c\u52a0\u8fd9\u4e00\u4e2a\u5c31\u591f\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=10005;\nvector<int>v[1005];\nvector<int>e[1005];\nint n,ml,md,d[1005];\nbool ok;\nint vis[1005],use[1005];\nvoid read(int& x)\n{\n    char c=getchar();\n    x=0;\n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        x=x*10+c-'0';\n        c=getchar();\n    }\n}\nbool dfs(int x)//\u8fd9\u662f\u91cd\u70b9\n{\n    vis[x]=1;\n    use[x]=1;\n    for(unsigned int i=0;i<v[x].size();i++)\n    {\n        int y=v[x][i];\n        int z=e[x][i];\n        if(d[y]>d[x]+z)\n        {\n            if(vis[y])return 1;//\u5728\u6b64\u6b21DFS\u4e2d\u627e\u5230\u4e86\u4e00\u4e2a\u8bbf\u95ee\u8fc7\u7684\u70b9\uff0c\u662f\u8d1f\u73af\n            d[y]=d[x]+z;\n            if(dfs(y))return 1;//\u5982\u679c\u7ee7\u7eed\u8bbf\u95ee\u65f6\u53d1\u73b0\u4e86\u8d1f\u73af\n        }\n    }\n    vis[x]=0;//\u6e05\u6807\u8bb0\n    return 0;\n}\nint main()\n{\n//\tfreopen(\"layout.4.in\",\"r\",stdin);\n    read(n);\n    read(ml);\n    read(md);\n    for(int i=1;i<=ml;i++)\n    {\n        int x,y,z;\n        read(x);\n        read(y);\n        read(z);\n        v[x].push_back(y);\n        e[x].push_back(z);\n    }\n    for(int i=1;i<=md;i++)\n    {\n        int x,y,z;\n        read(x);\n        read(y);\n        read(z);\n        v[y].push_back(x);\n        e[y].push_back(-z);\n    }\n    for(int i=2;i<=n;i++)\n    {\n    \tv[i].push_back(i-1);\n    \te[i].push_back(0);\n\t}\n    memset(d,0x3f3f3f3f,sizeof(d));\n    for(int i=1;i<=n;i++)\n    {\n        if(!use[i])\n        {\n            use[i]=1;\n            d[i]=0;\n            memset(vis,0,sizeof(vis));\n            if(dfs(i))\n            {\n                printf(\"-1\\n\");\n                return 0;\n            }\n            if(d[n]==0x3f3f3f3f)ok=1;\n        }\n    }\n    if(!ok)printf(\"%d\\n\",d[n]);\n    else printf(\"-2\\n\");\n}\n```",
        "postTime": 1547899327,
        "uid": 68207,
        "name": "CreeperLordVader",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4878 \u3010[USACO05DEC]layout\u5e03\u5c40\u3011"
    },
    {
        "content": "\u6b64\u9898\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\uff0c\n\u540c\u65f6\u636e\u9898\u610f\u5976\u725b\u987a\u5e8f\u5fc5\u987b\u4ece\u5de6\u5230\u53f3\n\n\u8bbe1\u53f7\u5976\u725b\u4e3ax1\uff0c\n2\u53f7\u5976\u725b\u4e3ax2\n\u4ee5\u6b64\u7c7b\u63a8\n \n\u5976\u725b\u95f4\u8ddd\u79bb\u4e0d\u5f97\u5c0f\u4e8e\u6216\u5927\u4e8e\u67d0\u4e2a\u503c\u76f8\u5f53\u4e8e\u5c06\u8fd9\u4e2a\u9898\u8f6c\u5316\u4e3a\uff1a\n\u6709\u82e5\u5e72\u4e2a\u53d8\u91cf\u3001\u6709\u82e5\u5e72\u7684\u4e0d\u7b49\u5f0f\n\u6839\u636e\u4e0d\u7b49\u5f0f\u5217\u51fa\u53d6\u503c\u8303\u56f4\u786e\u5b9a\u7b54\u6848\n\n\u4f46\u53c8\u8981\u6c42\u6700\u540e\u7b54\u6848\u4e3a\u4ece1\u5230n\u53f7\u70b9\u7684\u8ddd\u79bb\u6700\u5927 \uff0c\u56e0\u6b64\n\u8f6c\u5316\u4e3a\u6700\u77ed\u8def\u95ee\u9898\n\n\u6211\u4eec\u8bbes\u4e3a\u8d77\u70b9\uff0c\u5219\n$dis[i]$\u8868\u793a$s$\u5230$i$\u7684\u6700\u77ed\u8def\n\n\u56e0\u6b64\u4e0d\u7b49\u5f0f\u53ef\u4ee5\u5199\u6210$dis[a]-dis[b] \\leq c$;\n\n\u5982\u679c\u6709\u5927\u4e8e\u7684\u60c5\u51b5\uff0c\u901a\u8fc7\u79fb\u9879\uff0c\u5c06\u5176\u53d8\u4e3a\u5c0f\u4e8e\n\n\u636e\u6b64\u5efa\u8fb9\u8fde\u56fe\n\n\u8dd1\u6700\u77ed\u8def\n\n\u5f97\u5230\u53d6\u503c\u6700\u5927\u8303\u56f4\u7684\u503c\n\n",
        "postTime": 1548837296,
        "uid": 38852,
        "name": "Sakurajima_Mai",
        "ccfLevel": 0,
        "title": "P4878 [USACO05DEC] \u5e03\u5c40"
    },
    {
        "content": "\u505a\u6cd5\uff1a\u5dee\u5206\u7ea6\u675f~\uff08\u7b2c\u4e00\u6b21A\u5dee\u5206\u7ea6\u675f\u7684\u9898\uff0c\u6709\u70b9\u5c0f\u5f00\u5fc3~\uff09\n\n\u6211\u4eec\u6839\u636e\u9898\u610f\u4e0d\u96be\u5f97\u5230\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u4e0d\u7b49\u5f0f\uff1a\n\nx[j]-x[i]<=0 (\u6309\u7f16\u53f7\u6392\u5e8f)\n\nx[j]-x[i]<=c1[i] (m1\u7ec4\u70b9\u8ddd\u79bb\u5c0f\u4e8e\u67d0\u6570)\n\nx[j]-x[i]>=c2[i] (m2\u7ec4\u70b9\u8ddd\u79bb\u5927\u4e8e\u67d0\u6570)\n\n(\u5373x[i]-x[j]<=-c1[i],\u6211\u4eec\u4fdd\u8bc1\u7edf\u4e00\u5de6\u8fb9\u5c0f\u4e8e\u53f3\u8fb9~)\n\n\u6211\u4eec\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u662f\u627e\u5230x[1]-x[n]<=T\u4e2d\uff0cT\u7684\u6700\u5c0f\u503c\n\n\u56e0\u4e3a\u4e0d\u7b49\u5f0f\u5de6\u53f3\u7684>\u6216\u8005<\u7edf\u4e00\uff0c\u6240\u4ee5\u4e0d\u7b49\u5f0f\u4e4b\u95f4\u53ef\u4ee5\u76f8\u52a0\uff0c\n\u6bd4\u5982\uff1ax1-x2<=5\uff1bx2-x3<=3,\u90a3\u4e48\u4e5f\u53ef\u4ee5\u5f97\u5230x1-x3<=8\n\n\u6211\u4eec\u628axi-xj<=c\u770b\u6210\u4e00\u6761\u4ecei\u8fde\u5411j\u7684\u6743\u503c\u4e3ac\u7684\u8fb9\u7684\u8bdd\uff0c\n\u5c31\u76f8\u5f53\u4e8ex->y\u8981c1,y->z\u8981c2,x->z\u5c31\u53ef\u4ee5\u82b1\u8d39c1+c2\u6765\u8fde\u63a5\uff08\u5c31\u7c7b\u4f3c\u4e8e\u6700\u77ed\u8def\u7684\u677e\u5f1b\u5566\uff09\n\n\u4e8e\u662f---\u6211\u4eec\u6839\u636e\u9898\u76ee\u5efa\u597d\u8fb9\uff0c\u8dd1\u4e00\u6b21SPFA\u5c31\u53ef\u4ee5\u5566~\n\nPS\uff1a\u6709\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n1\u3001\u5f53\u5b58\u5728\u8d1f\u6743\u73af\u65f6\uff0c\u6211\u4eec\u4e0d\u5b58\u5728\u6700\u77ed\u8def\uff0c\u4e8e\u662f\u8f93\u51fa-1\uff0c1->n\u4e0d\u5b58\u5728\u6700\u4f18\u5173\u7cfb\uff08\u53e6\u5916\u4ece\u539f\u70b9\u51fa\u53d1\u4e0d\u4f1a\u7ecf\u8fc7\u7684\u8d1f\u6743\u73af\u867d\u7136\u4e0d\u4f1a\u5f71\u54cd\u6211\u4eec\u6c42\u51fa\u6700\u77ed\u8def\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u4eec\u5f04\u4e0d\u51fa\u4e00\u4e2a\u6574\u4f53\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u6240\u4ee5\u867d\u7136\u6c42\u51fa\u6700\u77ed\u8def\u4f46\u662f\u4e5f\u662f\u8981\u62a5-1\u7684\uff01--\u56e0\u4e3a\u8fd9\u4e2a\u60f3\u4e86\u597d\u4e45\uff09\n\n2\u3001\u5f531\u8054\u7cfb\u4e0d\u4e0an,\u90a3\u4e48\u5c31\u4ee3\u8868n\u4e0d\u53d71\u7ea6\u675f\u4e86\u3002\u4ed6\uff08\u548c\u4ed6\u7684\u5c0f\u4f19\u4f34\uff09\u7231\u662f\u591a\u5c11\u662f\u591a\u5c11\uff0c\u6211\u4eec\u5c31\u8f93\u51fa-2\n\n\u4ee3\u7801\uff1a\uff08spfa\u8fd9\u91cc\u53ef\u4ee5\u5012\u7740\u627e\uff0cfor(int i=n;i>=1;i--),\u6bcf\u6b21\u521d\u59cb\u5316\uff0c\u4f1a\u66f4\u65b9\u4fbf\u4e00\u70b9\uff09\n\n~~\uff08AND\u867d\u7136\u4e0a\u9762\u8bf4\u7684\u662fxi-xj<=c\u770b\u6210i->j\u7684\u8fb9\uff0c\u4f46\u662f\u4ee3\u7801\u91cc\u6253\u7684\u662fj->i\u7684\u8fb9\u3002\u3002\u3002\uff09~~\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nint n,m1,m2,d[2100];//d[i]=T:   f(i)-f(1)<=T,\nstruct node\n{\n\tint x,y,c,next;\n}a[41000];int len,last[2100];//\u6709\u5411\u8fb9a,x->y :f(y)-f(x)<=c\n//\nvoid ins(int x,int y,int c)\n{\n\tint now=++len;\n\ta[now].x=x;a[now].y=y;a[now].c=c;\n\ta[now].next=last[x];last[x]=len;\n}\nint list[2100],head,tail;bool v[2100];\nint jl[2100];\nvoid spfa(int st)\n{\n\t\n\tmemset(v,true,sizeof(v));v[st]=false;\n\td[st]=0;\n\tlist[1]=st;head=1;tail=2;\n\twhile(head!=tail)\n\t{\n\t\tint x=list[head];\n\t\tfor(int k=last[x];k;k=a[k].next)\n\t\t{\n\t\t\tint y=a[k].y;\n\t\t\tif(d[y]>d[x]+a[k].c)\n\t\t\t{\n\t\t\t\td[y]=d[x]+a[k].c;\n\t\t\t\tif(v[y])\n\t\t\t\t{\n\t\t\t\t\tjl[y]++;\n\t\t\t\t\tif(jl[y]==n)//\u88ab\u66f4\u65b0\u5165\u961f\u4e86n\u6b21\uff0c\u4f46\u662f\u6211\u4eec\u4e00\u822c\u6765\u8bf4\u6700\u591a\u88abn-1\u4e2a\u70b9\u66f4\u65b0\u5230\uff08\u4e0d\u53ef\u80fd\u81ea\u5df1\u66f4\u65b0\u81ea\u5df1\u5427\uff09\uff0c\u4e8e\u662f\u8fd9\u5c31\u662f\u8d1f\u73af\u7c97\u7ebf\u4e86\uff01\n\t\t\t\t\t{\n\t\t\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\t\t\texit(0);\n\t\t\t\t\t}\n\t\t\t\t\tv[y]=false;\n\t\t\t\t\tlist[tail++]=y;\n\t\t\t\t\tif(tail>n)tail-=n;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\thead++;\n\t\tv[x]=true;\n\t\tif(head>n)head-=n;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m1,&m2);\n\tfor(int i=1;i<=n-1;i++)ins(i+1,i,0);//f(i)-f(i+1)<=0\n\tfor(int i=1;i<=m1;i++)//f(y)-f(x)<=c\n\t{\n\t\tint x,y,c;\n\t\tscanf(\"%d%d%d\",&x,&y,&c);\n\t\tins(x,y,c);\n\t}\n\tfor(int i=1;i<=m2;i++)//f(x)-f(y)<=-c\n\t{\n\t\tint x,y,c;\n\t\tscanf(\"%d%d%d\",&x,&y,&c);\n\t\tins(y,x,-c);\n\t}\n\tmemset(d,63,sizeof(d));int pd=d[n];\n\tspfa(1);\n\tint ans=d[n];\n\tmemset(jl,0,sizeof(jl));\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(jl[i]==0)spfa(i);//\u5224\u5b9a\u6e90\u70b9\u4e0d\u7ecf\u8fc7\u7684\u8d1f\u73af\u662f\u5426\u53ef\u80fd\u51fa\u73b0 \n\t}\n\tif(ans==pd)printf(\"-2\\n\");//\u65e0\u66f4\u65b0\uff1a1\u548cn\u4e0d\u8fde\u901a\n\telse printf(\"%d\\n\",ans);\n\treturn 0;\n} \n```",
        "postTime": 1540732521,
        "uid": 58343,
        "name": "thhhty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4878 \u3010[USACO05DEC]layout\u5e03\u5c40\u3011"
    },
    {
        "content": "### \u5dee\u5206\u7ea6\u675f\u7684\u9898\n\u7528\u524d\u5411\u661f\u628a\u5dee\u5206\u7ea6\u675f\u7684\u56fe\u505a\u51fa\u6765,\u7136\u540e\u8dd1spfa\n\n\u6ce8\u610f\u8fd9\u4e2a\u5730\u65b9\u56e0\u4e3a\u8981\u8003\u8651\u6ca1\u6709\u65b9\u6848\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u8f93\u51fa-1\u7684\u60c5\u51b5\uff0c\u9700\u8981\u4ece0\u5f00\u59cb\u9884\u8dd1spfa\uff0c\u5224\u65ad\u7ebf\u8def\u6709\u6ca1\u6709\u65ad\u4e86\u7684\u5730\u65b9\uff0c\u7136\u540e\u518d\u4ece1\u5f00\u59cb\u8dd1\n\n~~\u4e0a\u4ee3\u7801Q\u03c9Q~~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ml,md;\nstruct edge\n{\n\tint v,to,nxt;\n}e[4010];\nint head[1010],ei=0;\nint dis[1010];\ninline void add(int x,int y,int v)\n{\n\tei++;\n\te[ei].to=y;\n\te[ei].nxt=head[x];\n\te[ei].v=v;\n\thead[x]=ei;\n}\nint vis[1010];\nint tag[1010];\nvoid spfa(int s)\n{\n\tint i;\n\tqueue<int>qu;\n\tqu.push(s);\n\tvis[s]=1;\n\tdis[s]=0;\n\twhile(!qu.empty())\n\t{\n\t\tint x=qu.front();\n\t\tvis[x]=0;\n\t\tqu.pop();\n\t\tif(tag[x]>=2*n)\t\t\n\t\t{\n\t\t\tcout<<\"-1\";\n\t\t\texit(0);\n\t\t}\n\t\tfor(i=head[x];i!=0;i=e[i].nxt)\n\t\t{\n\t\t\tint y=e[i].to;\n\t\t\tif(dis[y]>dis[x]+e[i].v)\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+e[i].v;\n\t\t\t\ttag[y]=tag[x]+1;\n\t\t\t\tif(vis[y]==0)\n\t\t\t\t{\n\t\t\t\t\tqu.push(y);\n\t\t\t\t\tvis[y]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tint i,j;\n\tcin>>n>>ml>>md;\n\tmemset(dis,0x3f,sizeof(dis));\n\tfor(i=1;i<=ml;i++)\n\t{\n\t\tint x,y,l;\n\t\tscanf(\"%d%d%d\",&x,&y,&l);\n\t\tif(x>y)\n\t\t{\n\t\t\tswap(x,y);\n\t\t}\n\t\tadd(x,y,l);\n\t}\n\tfor(i=1;i<=md;i++)\n\t{\n\t\tint x,y,l;\n\t\tscanf(\"%d%d%d\",&x,&y,&l);\n\t\tif(x>y)\n\t\t{\n\t\t\tswap(x,y);\n\t\t}\n\t\tadd(y,x,-l);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tadd(0,i,0);\n\t}\n\tspfa(0);\t\t\t\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(tag,0,sizeof(dis));\n\tspfa(1);\n\tif(dis[n]==0x3f3f3f3f)\n\t{\n\t\tcout<<\"-2\";\n\t\treturn 0;\n\t}\n\tcout<<dis[n];\n}\n```",
        "postTime": 1538729159,
        "uid": 53854,
        "name": "Outlow\u2122",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4878 \u3010[USACO05DEC]layout\u5e03\u5c40\u3011"
    }
]