[
    {
        "content": "### \u6c42\u9006\u5e8f\u5bf9\n\u4f46\u8fd9\u80af\u5b9a\u4e0d\u662f\u666e\u901a\u7684\u6c42\u9006\u5e8f\u5bf9\u9898\u76ee\uff1a\u6570\u636e\u8303\u56f4\u592a\u5927\u4e86\uff0c\u4f1a\u8d85\u65f6\u3002\n\n\u5c3d\u7ba1\u6570\u636e\u8303\u56f4\u5f88\u5927\uff0c\u4f46\u662f**k**\u4e0d\u5927\uff0c\u6700\u591a\u53ea\u7275\u6d89\u5230\u4e86**2k**\u4e2a\u6570\u3002\n\n\u6211\u4eec\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n![\u6817\u5b50](https://i.loli.net/2019/05/13/5cd8cf438322b46109.png)\n\n\u9700\u8981\u4ea4\u6362\u7684\u4e24\u7ec4\u6570\u662f\uff1a1\u20146 , 4\u20149\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u65702\u30013\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a**\u6574\u4f53**\uff0c\u65707\u30018\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a**\u6574\u4f53**\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u6bb5**\u8fde\u7eed**\u7684\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u770b\u505a\u4e00\u4e2a**\u6574\u4f53**\uff0c\u8bb0\u5f55\u4e0b\u5b83\u7684\u4ee3\u8868\u5143**id**\u548c\u6743\u503c**t**\u3002\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u6211\u4eec\u6765\u770b\u5904\u7406\u4e4b\u540e\u5e94\u8be5\u662f\u600e\u6837\u7684\uff1a\n\n\uff081,1) \uff0c (2,2) \uff0c (4,1) \uff0c (5,1) \uff0c (6,1) \uff0c (7,2) \uff0c (9,1)\n\n\u6211\u4eec\u5c31\u628a\u6240\u6709\u7684\u8fde\u7eed\u533a\u95f4\u8bb0\u505a\u4e86**\u4e8c\u5143\u7ec4**\u3002\u7528\u8fd9\u4e2a\u533a\u95f4\u6700\u5c0f\u7684\u6570\u4f5c**\u4ee3\u8868\u5143**\uff0c**\u6743\u503c**\u5c31\u662f\u533a\u95f4\u6570\u7684\u4e2a\u6570\u3002\n\n\u7136\u540e\u8fdb\u884c\u4ea4\u6362\uff1a\n\n\uff086,1\uff09\uff0c\uff082,2\uff09\uff0c\uff089,1\uff09\uff0c\uff085,1\uff09\uff0c\uff081,1\uff09\uff0c\uff087,2\uff09\uff0c\uff084,1\uff09\n\n\u5269\u4e0b\u7684\u5c31\u662f\u666e\u901a\u7684\u6c42\u9006\u5e8f\u5bf9\u4e86\u3002\n\n\u522b\u5fd8\u4e86\u79bb\u6563\u5316\u3002\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=1e5+5;\nint n,st,tot;\nstruct aaa{\n\tint x,y;\n}Q[N];//\u8bb0\u5f55\u9700\u8981\u4ea4\u6362\u7684\u6570\nint t[2*N],id[2*N];//t:\u6743\u503c\u3002id:\u4ee3\u8868\u5143\nint s[2*N],row[22*N];\nll ans,c[2*N];\n\nint query(int val){//\u79bb\u6563\u5316\u7684\u67e5\u8be2\n\treturn lower_bound(row+1,row+1+tot,val)-row;\n}\n\nvoid adds(int pos,ll w){//\n\tfor(;pos<=tot;pos+=pos&-pos) c[pos]+=w;\n\treturn;\n}\n\nll asks(int pos){\n\tll sum=0;\n\tfor(;pos;pos-=pos&-pos) sum+=c[pos];\n\treturn sum;\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&Q[i].x,&Q[i].y);\n\t\ts[i]=Q[i].x;s[i+n]=Q[i].y;\n\t}\n\tsort(s+1,s+1+2*n);\n\tst=unique(s+1,s+1+2*n)-(s+1);\n\trow[++tot]=s[1];t[tot]=1;\n\tfor(int i=2;i<=st;i++){\n\t\tif(s[i]-s[i-1]>1){\n\t\t\trow[++tot]=s[i-1]+1;\n\t\t\tt[tot]=s[i]-s[i-1]-1;\n\t\t}\n\t\trow[++tot]=s[i];t[tot]=1;\n\t}\n\tfor(int i=1;i<=tot;i++) id[i]=i;\n\tfor(int i=1;i<=n;i++){\n\t\tint x=query(Q[i].x),y=query(Q[i].y);\n\t\tswap(t[x],t[y]);\n\t\tswap(id[x],id[y]);\n\t}\n\tfor(int i=tot;i>=1;i--){\n\t\tans+=asks(id[i]-1)*(ll)t[i];//\u6ce8\u610f\uff0c\u4e58\u6cd5 \n\t\tadds(id[i],(ll)t[i]);\n\t} \n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1557714067,
        "uid": 123159,
        "name": "IC_QQQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2448 \u3010\u65e0\u5c3d\u7684\u751f\u547d\u3011"
    },
    {
        "content": "70\u5206\uff1a\n\n\u88f8\u7684\u9006\u5e8f\u5bf9\uff0c\u6811\u72b6\u6570\u7ec4\u7ebf\u6bb5\u6811\u5f52\u5e76\u6392\u5e8f\u5747\u53ef\u8fc7\u3002\n\n100\u5206\uff1a\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u672a\u88ab\u64cd\u4f5c\u8fc7\u7684\u6570\u4e0d\u5fc5\u4e00\u4e00\u7edf\u8ba1\uff0c\u56e0\u4e3a\u603b\u6709\u4e00\u4e2a\u8fde\u7eed\u533a\u95f4\u7684\u6570\u8ddf\u4ed6\u5177\u6709\u76f8\u540c\u7684\u6027\u8d28\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5148\u5c06\u88ab\u64cd\u4f5c\u8fc7\u7684\u70b9\u5b58\u4e0b\u6765\u79bb\u6563\u5316\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u70b9\u8fdb\u884c\u4ea4\u6362\u64cd\u4f5c\u3002\n\n\u4e4b\u540e\u51e0\u4e4e\u5c31\u662f\u666e\u901a\u7684\u9006\u5e8f\u5bf9\uff0c\u6811\u72b6\u6570\u7ec4\u5b58\u6bd4I\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u3002\u5206\u522b\u8ba1\u7b97hash\u540e\u4e24\u4e2a\u503c\u4e4b\u95f4\u4e00\u6bb5\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u548c\u7aef\u70b9\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\uff0c\u52a0\u5230\u7b54\u6848\u4e2d\u3002\n\n\u9644\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<iostream>\n#include<algorithm>\n#include<cstdlib>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#define ll long long\nusing namespace std;\nint hash[200005],b[200005],a[200005];\nll ans,tree[200005];\nint n,m,cnt;\nstruct node {int x,y;} q[100005];\ninline int read()\n{\n    int a=0,f=1; char c=getchar();\n    while (c<'0'||c>'9') {if (c=='-') f=-1; c=getchar();}\n    while (c>='0'&&c<='9') {a=a*10+c-'0'; c=getchar();}\n    return a*f;\n}\ninline int find(int x)\n{\n    int l=1,r=m;\n    while (l<=r)\n    {\n        int mid=(l+r)>>1;\n        if (hash[mid]==x) return mid;\n        else if (hash[mid]<x) l=mid+1; else r=mid-1;\n    }\n    return r;\n}\ninline int lowbit(int x)\n{\n    return x&(-x);\n}\ninline void add(int x,ll val)\n{\n    for (int i=x;i<=m;i+=lowbit(i)) tree[i]+=val;\n}\ninline ll query(int x)\n{\n    ll sum=0;\n    for (int i=x;i;i-=lowbit(i)) sum+=tree[i];\n    return sum;\n}\nint main()\n{\n    n=read();\n    for (int i=1;i<=n;i++) a[++cnt]=q[i].x=read(),a[++cnt]=q[i].y=read();\n    sort(a+1,a+cnt+1); \n    for (int i=1;i<=cnt;i++)\n        if (a[i]!=a[i-1]) hash[++m]=a[i];\n    for (int i=1;i<=m;i++) b[i]=i;\n    for (int i=1;i<=n;i++)\n    {\n        int x=find(q[i].x),y=find(q[i].y);\n        swap(b[x],b[y]);\n    }\n    add(b[m],1);\n    for (int i=m-1;i;i--)\n    {\n        ll x=(ll)(hash[i+1]-hash[i]-1),p=query(i);\n        ans=ans+(x*p);\n        add(i,x);\n        ans=ans+query(b[i]-1);\n        add(b[i],1);\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1443795152,
        "uid": 1517,
        "name": "ws_fqk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2448 \u3010\u65e0\u5c3d\u7684\u751f\u547d\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u7528\u6811\u72b6\u6570\u7ec4\u9006\u5e8f\u5bf9+\u79bb\u6563\u5316\u3002\u4e0b\u9762\u5148\u770b\u770b\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,a[200001],b[200001],d[200001],e,f[200001],g,hh,h[200001],m,x;\nstruct cc{   //\u79bb\u6563\u5316\u51c6\u5907 \n    long long p;\n    long long q;\n};\ncc c[200001];\nlong long mmp(const cc & o, const cc & oo)  //\u6392\u5e8f \n{return o.p<oo.p;}\ninline void rad(long long &noi)  //\u5feb\u8bfb \n{\n    bool mark=false;\n    static char ch;\n    while(ch=getchar(),ch<'0'||ch>'9') if(ch=='-') mark=true;\n    noi=ch-'0';\n    while(ch=getchar(),ch<='9'&&ch>='0') noi=(noi<<3)+(noi<<1)+ch-'0';\n    if(mark) noi=-noi;\n}\nint main()\n{\n    rad(n);\n    for(int i=1;i<=2*n;i++)\n    rad(c[i].p),c[i].q=i,a[i]=i;    //\u79bb\u6563\u5316\u51c6\u5907 \n    sort(c+1,c+2*n+1,mmp);\n    for(int i=1;i<=200000;i++) f[i]=1,b[i]=i;\n    hh=c[1].p;\n    for(int i=1;i<=2*n;i++)\n    if(c[i].p!=hh)\n    f[(++g)*2]=c[i].p-hh-1,hh=c[i].p;   //\u8ba1\u7b97\u79bb\u6563\u5316\u540e\u5b9e\u9645\u8ddd\u79bb \n    g=0;\n    for(int i=1;i<=2*n;i++)\n    {\n        if(c[i].p!=c[i-1].p)\n        g++;d[c[i].q]=g;   //\u79bb\u6563\u5316 \n    }\n    //g\u662f\u6709\u51e0\u4e2a\u4e0d\u540c\u6570\u5b57 \n    for(int i=1;i<=n;i++)\n    swap(a[d[i*2-1]],a[d[i*2]]);    //\u4ea4\u6362\u79bb\u6563\u5316\u5b8c\u540e\u7684\u503c\uff0c*2\u4e4b\u540e\u89e3\u91ca \n    for(int i=1;i<=g;i++) b[i*2-1]=a[i]*2-1;      //\u5c06\u79bb\u6563\u5316\u540e\u7684\u6570\u5b58\u4e0b \n    for(int i=1;i<=2*g-1;i++)    //\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9 \n    {\n        e=0;m+=f[i];   //\u5b9e\u9645\u6709\u591a\u5c11\u4e2a\u6570\u5b57 \n        for(int j=b[i]-1;j;j-=(j&(-j))) e+=h[j];\n        for(int j=b[i];j<=g*2-1;j+=(j&(-j))) h[j]+=f[i];\n        x+=f[i]*(m-e-f[i]);    //\u9006\u5e8f\u5bf9\u7684\u5b9e\u9645\u5bf9\u6570\u662f\u5f53\u524d\u533a\u95f4\u6570\u5b57\u4e2a\u6570\u4e58\u4ea4\u6362\u65f6\u7ecf\u8fc7\u51e0\u4e2a\u6570\u5b57 \n    }\n    printf(\"%lld\\n\",x);\n    return 0;\n}\n```\n\\*2\u7684\u539f\u56e0\uff1f\n\n\u5c06\u4e0d\u540c\u6570\u5b57\u4e2a\u6570\u4ea4\u53c9\u5728\u533a\u95f4\u4e2d\n\n\n\u5148\u6765\u770b\u8fd9\u6837\u4e00\u7ec4\u6570\u636e\n\n2 4 9 1 4\n\nb[]=5 2 1 4 3\n\nf[]=1 2 1 4 1\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\n\nb[]\u8868\u793a\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\uff0c\u6ce8\u610f\u533a\u95f4\u4e5f\u7b97\n\n\u800cf[]\u8868\u793a\u533a\u95f4\u6709\u51e0\u4e2a\u6570\u5b57\uff0c\u7b97\u7b54\u6848\u7684\u65f6\u5019\u7528\n\n\u518d\u6765\u770b\u8fd9\u6837\n\n2 1 2 3 4\n\nb[]=3 2 1 4 7 6 5\n\nf[]=1 0 1 0 1 0 1\n\n\u6ce8\u610f\u533a\u95f4\u4e3a0\u65f6\uff0c\u5373\u4f7f\u6709\u9006\u5e8f\u5bf9\uff0c\u5bf9\u7b54\u6848\u4e5f\u6ca1\u6709\u5f71\u54cd\u3002\n\n\n\u63d0\u9192\uff1a\u5f53\u4f01\u56fe\u6253100\u5206\u7a0b\u5e8f\u65f6\uff0c\u53ef\u4ee5\u4ece70\u5206\u7684\u6a21\u677f\u7f16\u51e0\u4e2a\u5927\u6570\u636e\uff0c\u8fc7\u4e86\u57fa\u672c\u5c31A\u4e86\u3002\n",
        "postTime": 1513676937,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2448 \u3010\u65e0\u5c3d\u7684\u751f\u547d\u3011"
    },
    {
        "content": "#### ~~\u542c\u8bf4 csp\u4e4b\u524d\u53d1\u9898\u89e3\u4f1a++rp~~\n### \u5bf9\u4e8e\u8fd9\u4e2a\u7384\u5b66\u9898 \n\u5728AC\u4e4b\u524d \u6211\u7528\u4e86\u4e2a\u9519\u8bef\u7684\u65b9\u6cd5\uff0c\u5fd8\u8bb0\u7edf\u8ba1\u4e2d\u95f4\u4e0d\u53d8\u7684\u6570\u636e\n\n\u7136\u540e \u5c31\u6709 \u4e00\u4e2a \u4e0d\u540c\u4e8e\u5176\u4ed6\u9898\u89e3\u7684\u505a\u6cd5\n\n~~\u53ea\u662f\u53c8\u81ed\u53c8\u957f\u7f62\u4e86~~\nset \u6765\u53bb\u91cd\uff0c\u7ef4\u62a4\u5355\u8c03\u4e0a\u5347\u7684\u5e8f\u5217\nmap \u6765\u7edf\u8ba1 \u6539\u53d8\u524d\u7684 \u4f4d\u7f6e\n\n\u7136\u540e\u6211\u53d1\u73b0\u5f53 val\uff01=1 \u65f6\u6211\u9006\u5e8f\u5bf9\u6c42\u4e0d\u5bf9\u4e86\n\n\u56de\u5934\u91cd\u65b0\u5b66\u4e86\u904d\u6811\u72b6\u6570\u7ec4\u9006\u5e8f\u5bf9\uff0c\u628a\u4e4b\u524d\u8ba9\u6211\u61f5\u903c\u7684\u505a\u6cd5\u7ed9\u5426\u4e86\u3002\u3002\n\n\u91cd\u65b0\u6839\u636e\u539f\u7406\u60f3\u5230\u4e86\u6b63\u786e\u7684\u505a\u6cd5\n\n\u4f60\u53ef\u4ee5\u6b63\u7740\uff0c\u4e5f\u53ef\u4ee5\u5230\u7740\uff1b\n\n\u7136\u540e\u4f60\u53d1\u73b0\u5bf9\u4e8e val!=1 \u7684\u5355\u8c03\u4e0a\u5347\u5e8f\u5217\n\n\u4ed6\u4eec\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f\u524d\u9762\u6bd4\u4ed6\u5927\u7684\u4e2a\u6570* val \n\u7136\u540e \n\n\u6b64\u9898\u53ef\u505a\n\n\u4e0b\u9762\u4ee3\u7801\u672a\u4f18\u5316\n\n\u5982\u679c\u60f3\u4e0d\u61c2\u524d\u9762\u7684\u6539\u53d8\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u5176\u4ed6\u5927\u4f6c\u4ee3\u7801\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <set>\n#include <map> \n#define int long long \nusing namespace std;\nvoid r(int &x)\n{\n\tchar a;\n\tint f=1;\n\twhile((a=getchar())<'0'||a>'9')if(a=='-')f=-1;\n\tx=a-48;\n\twhile((a=getchar())>='0'&&a<='9')\n\tx=(x<<3)+(x<<1)+a-48;\n\tx=x*f;\n}\nset<int>st;\nmap<int,int>ma;\nint x[405000],y[405000];\nint n,cnt;\nstruct edge{\n\tint sum,id,val;\n}e[405000];\nbool cmp(edge x,edge y)\n{\n\treturn x.sum<y.sum;\n}\nint sum[405000];\nint lowbit(int x){return x&(-x);}\nint tot;\nvoid modify(int x,int v)\n{\n\tfor(;x<=tot;x+=lowbit(x)) sum[x]+=v;\n}\nint query(int x)\n{\n\tint ans=0;\n\tfor(;x;x-=lowbit(x)) ans+=sum[x];\n\treturn ans;\n}\nsigned main()\n{\n\tr(n);\n\tfor(int i=1;i<=n;i++)\n\t{\t\n\t\tr(x[i]),r(y[i]);\n\t\tst.insert(x[i]);\n\t\tst.insert(y[i]);\n\t}\n\tset<int>::iterator it;\n\twhile(!st.empty())\n\t{\t\t\n\t\tit=st.begin();\n\t\tma[*it]=++cnt;\n\t\te[cnt].id=cnt;\n\t\te[cnt].sum=(*it);\n\t\te[cnt].val=1;\n\t\tst.erase(it);\n\t}\n\ttot=cnt;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tif(e[i].sum-e[i-1].sum!=1)\n\t\t{\n\t\t\te[++tot].sum=e[i-1].sum+1;\n\t\t\te[tot].val=e[i].sum-e[i-1].sum-1;\n\t\t}\n\t}\n\tsort(e+1,e+tot+1,cmp);\n\tfor(int i=1;i<=tot;i++) ma[e[i].sum]=i,e[i].id=i;\n\tfor(int i=1;i<=n;i++)\n\t{\t\n\t\tswap(e[ma[x[i]]].sum,e[ma[y[i]]].sum);\n\t\tswap(ma[x[i]],ma[y[i]]);\n\t}\n\tsort(e+1,e+tot+1,cmp);\n\tint ans=0;\n\tfor(int i=tot;i>=1;i--)\n\t{\t\t\t\n\t\tmodify(e[i].id,e[i].val);\n\t\tans+=(query(e[i].id)-e[i].val)*e[i].val;\n\t}\n\tcout<<ans<<\"\\n\";\n}\n\n\n\n```\n",
        "postTime": 1572338453,
        "uid": 123841,
        "name": "lwyz123",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2448 \u3010\u65e0\u5c3d\u7684\u751f\u547d\u3011"
    },
    {
        "content": "### Solution\n\u5fd8\u4e86\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4\u76f4\u63a5\u505a\u4e86.\u6240\u4ee5\u5199\u4e86\u5f88\u9ebb\u70e6\u7684\u7ebf\u6bb5\u6811.\n\u5927\u6982\u5199\u4e00\u4e0b\u600e\u4e48\u505a, \u56e0\u4e3a\u7ec6\u8282\u6bd4\u8f83\u591a.\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u6b21\u4ea4\u6362\u7684\u5b9e\u9645\u4e0a\u662f\u4ea4\u6362\u4e86\u4e24\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570.\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u7684\u4f4d\u7f6e\u5206\u6210\u4e09\u7c7b:\n1. \u6709\u7684\u4f4d\u7f6e\u4f1a\u88ab\u6539\u53d8(\u4ea4\u6362), \u4e5f\u5bf9\u7b54\u6848\u6709\u8d21\u732e;\n2. \u6709\u7684\u4f4d\u7f6e\u4e0d\u4f1a\u88ab\u6539\u53d8, \u4e5f\u4e0d\u4f1a\u5bf9\u7b54\u6848\u6709\u8d21\u732e;\n3. \u6709\u7684\u4f4d\u7f6e\u4e0d\u4f1a\u88ab\u6539\u53d8, \u4f46\u662f\u5bf9\u7b54\u6848\u6709\u8d21\u732e.\n\n\n1. \u7b2c\u4e00\u7c7b\u662f\u6240\u6709\u7684\u64cd\u4f5c\u4f1a\u4ea4\u6362\u7684\u4f4d\u7f6e;\n2. \u7b2c\u4e8c\u7c7b\u662f\u88ab\u6539\u53d8\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u5f80\u5de6\u548c\u5f80\u53f3\u7684\u6570;\n3. \u7b2c\u4e09\u7c7b\u662f\u4e0d\u4f1a\u88ab\u76f4\u63a5\u6539\u53d8, \u4f46\u662f\u5176\u5de6\u53f3\u90fd\u6709\u88ab\u6539\u53d8\u7684\u6570.\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u4ea4\u63622\u548c5\u4f4d\u7f6e, \u6570\u5217\u53d8\u6210$1,5,3,4,2,6,7,\\cdots$.\n\u4f4d\u7f6e$2, 5$\u5c5e\u4e8e\u7b2c\u4e00\u7c7b, \u4f4d\u7f6e$1,6,7,\\cdots$\u5c5e\u4e8e\u7b2c\u4e8c\u7c7b, \u4f4d\u7f6e$3, 4$\u5c5e\u4e8e\u7b2c\u4e09\u7c7b(\u56e0\u4e3a\u4e0e5\u4f4d\u7f6e\u5f62\u6210\u9006\u5e8f\u5bf9)\n\n- \u5bf9\u4e8e\u4e0d\u4f1a\u88ab\u6539\u53d8\u4e5f\u6ca1\u6709\u5f71\u54cd\u7684\u6570, \u5ffd\u7565\u5b58\u5728\u5c31\u597d\u4e86.\n- \u5bf9\u4e8e\u4e0d\u4f1a\u88ab\u6539\u53d8\u4f46\u662f\u6709\u5f71\u54cd\u7684\u4f4d\u7f6e, \u8fd9\u4e9b\u4f4d\u7f6e\u7684\u884c\u4e3a\u8868\u73b0\u51fa\u6765\u50cf\u662f\u4e00\u4e2a**\u6574\u4f53**(\u4f1a**\u540c\u65f6\u5bf9\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u4ea7\u751f\u6216\u4e0d\u4ea7\u751f\u9006\u5e8f\u5bf9**).\n\u6240\u4ee5\u5c31\u628a\u4ed6\u4eec**\u6346**\u8d77\u6765, \u770b\u6210\u662f\u4e00\u4e2a**\u7279\u6b8a\u7684\u6570\u5b57**\u5c31\u597d\u4e86.\n\n\u6240\u4ee5\u5c31\u5c06\u8fd9\u4e9b\u6d89\u53ca\u5230\u7684\u4f4d\u7f6e\u79bb\u6563\u5316, \u5728\u79bb\u6563\u5316\u540e\u6309\u8981\u6c42**\u4ea4\u6362\u8fd9\u4e9b\u4f4d\u7f6e\u4e0a\u7684\u6570**\u5f62\u6210\u4e00\u4e2a\u6570\u5217,\u5229\u7528**\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811**\u6c42\u9006\u5e8f\u5bf9\u5373\u53ef.\n\n\u81f3\u4e8e\u600e\u4e48\u79bb\u6563\u5316, \u770b\u4ee3\u7801\u5c31\u597d\u4e86\n### Code\n```c++\n#include <stdio.h>\n#include <string.h>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int N = 1e6;\nstruct Node {\n    long long val;\n    Node *ls, *rs;\n    Node(int _v = 0, Node *_ls = nullptr, Node *_rs = nullptr) :\n        val(_v), ls(_ls), rs(_rs) { }\n    void pushup() {\n        val = ls->val + rs->val;\n    }\n    void mod(int k) { val += k; }\n};\nclass Tree { // \u666e\u901a\u7684\u5355\u8c03\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u7ebf\u6bb5\u6811\n    int n;\n    Node* root;\n #define LS l, mid, node->ls\n #define RS mid + 1, r, node->rs\n    void build(int l, int r, Node* node) {\n        if (l == r) return;\n        int mid = l + r >> 1;\n        node->ls = new Node();\n        node->rs = new Node();\n        build(LS), build(RS);\n    }\n    void insert(int l, int r, Node* node, int p, int k) {\n        if (l == r) return node->mod(k);\n        int mid = l + r >> 1;\n        if (p <= mid) insert(LS, p, k);\n        if (p >  mid) insert(RS, p, k);\n        node->val = node->ls->val + node->rs->val;\n    }\n    long long query(int l, int r, Node* node, int L, int R) {\n        if (l >= L and r <= R) \n            return node->val;\n        int mid = l + r >> 1;\n        long long res = 0;\n        if (L <= mid) res += query(LS, L, R);\n        if (R >  mid) res += query(RS, L, R);\n        return res;\n    }\n  public:\n    Tree(int _n) : n(_n), root(new Node()) {}\n    void build() {\n        build(1, n, root);\n    }\n    long long query(int l, int r) {\n        return query(1, n, root, l, r);\n    }\n    void insert(int p, int k) {\n        insert(1, n, root, p, k);\n    }\n};\nstruct Operate {\n    int l, r;\n    Operate(int _ = 0, int __ = 0) :\n        l(_), r(__) {}\n}Opt[N];\nstruct Element {\n    int v, siz; \n    Element(int _v = 0, int _s = 0) :\n        v(_v), siz(_s) { }\n    bool operator < (const Element& o) const {\n        return v < o.v;\n    }\n}P[N];\n\nint A[N], seq[N];\n\nint main () {\n    int n;\n    scanf(\"%d\", &n);\n    int tot = 0;\n    for (int i = 1, u, v, c; i <= n; i += 1) {\n        scanf(\"%d%d\", &u, &v);\n        Opt[i] = Operate(u, v);\n        A[++tot] = u, A[++tot] = v;\n    }\n    sort(A + 1, A + tot + 1);\n    int cnt = unique(A + 1, A + tot + 1) - A - 1; // \u88ab\u76f4\u63a5\u4ea4\u6362\u7684\u4f4d\u7f6e, \u4e5f\u5c31\u662f\u7b2c\u4e00\u7c7b\n    int total = 0;\n    for (int i = 1; i <= cnt; i += 1) {\n        P[++total] = Element(A[i], 1); // \u7b2c\u4e00\u7c7b\n        if (A[i + 1] > A[i] + 1) // A[i] \u548cA[i+1]\u4e4b\u95f4\u7684\u662f\u7b2c\u4e09\u7c7b\n            P[++total] = Element(A[i] + 1, A[i + 1] - A[i] - 1);  // A[i+1]-A[i]-1\u662f\u8fd9\u4e00\u6bb5\u7684\u4e2a\u6570\n    }\n#define Find(x) lower_bound(P + 1, P + total + 1, Element(x, 0)) - P\n    Tree* T = new Tree(total); // \u5efa\u7ebf\u6bb5\u6811\n    T->build();\n    for (int i = 1; i <= total; i += 1)\n        seq[i] = i;\n    for (int i = 1, u, v; i <= n; i += 1) {\n        u = Find(Opt[i].l), v = Find(Opt[i].r); // \u6309\u8981\u6c42\u4ea4\u6362\n        swap(seq[u], seq[v]);\n    }\n    long long res = 0;\n    for (int i = 1; i <= total; i += 1) {\n        T->insert(seq[i], P[seq[i]].siz); \n        res += 1ll * P[seq[i]].siz * T->query(seq[i] + 1, total);\n    }\n    printf(\"%lld\\n\", res);\n    return 0;\n}\n```",
        "postTime": 1541146148,
        "uid": 39067,
        "name": "aiyougege",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2448 \u3010\u65e0\u5c3d\u7684\u751f\u547d\u3011"
    },
    {
        "content": "\u8fd9\u9898\u76ee\u6bd4\u8f83\u5751\u7239\u3002\u3002\u3002\n\n\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u5c31\u662f\u4e2a\u88f8\u7684\u9006\u5e8f\u5bf9\n\n\u7136\u540e\u6253\u8d77\u6765\u8d8a\u770b\u8d8a\u4e0d\u5bf9\u3002\u3002\u3002\n\n\u7136\u540eL\u4e86\u534a\u5929\u624dA.\n\n\n[\u9898\u76ee\u4f20\u9001](https://www.luogu.org/problemnew/show/P2448)\n\n\n\u601d\u60f3:\n\n\u5148\u53bb\u91cd\uff0c\u7136\u540e\u79bb\u6563\u5316\u3002\u7136\u540e\u5012\u5e8f\u63d2\u5165\u3002\u4f46\u662f\u5728\u8fd9\u91cc\uff0c\u79bb\u6563\u5316\u95f4\u6d88\u5931\u7684\u6570\u5b57\u7684\u7b54\u6848\u8fd8\u662f\u8981\u7b97\uff0c\u7136\u540e\u4ed6\u4eec\u7ec4\u6210\u7684\u65b0\u9006\u5e8f\u5bf9\u4e5f\u8981\u7b97\u8fdb\u53bb\u3002\n\n\u5148\u4e0a\u4ee3\u7801\n\n```cpp\n    /*\n        By Adscn~ \n    */\n    #include<bits/stdc++.h>\n    using namespace std;\n    #define IL inline\n    #define RG register\n    #define gi getint()\n    #define pi(k) putint(k)\n    #define gc getchar()\n    #define File(a) freopen(a\".in\",\"r\",stdin);freopen(a\".out\",\"w\",stdout)\n    IL int getint()\n    {\n        RG int xi=0;\n        RG char ch=gc;\n        bool f=0;\n        while(ch<'0'|ch>'9')ch=='-'?f=1:f,ch=gc;\n        while(ch>='0'&ch<='9')xi=(xi<<1)+(xi<<3)+ch-48,ch=gc;\n        return f?-xi:xi;\n    }\n    IL void putint(int k)\n    {\n        if(k<0)k=-k,putchar('-');\n        if(k>10)putint(k/10);\n        putchar(k%10+'0');\n    }\n    IL int max(RG int a,RG int b)\n    {\n        return a>b?a:b;\n    }\n    typedef long long ll;\n    int cnt,cnt1;\n    int c[200000+1];\n    int now;\n    void change(int,int);\n    int lowbit(int);\n    IL void push(RG int i)\n    {\n        change(now,i);\n        now++;\n    }\n    IL void change(RG int i,RG int j)\n    {\n        for(; i <= cnt1; i+=lowbit(i))\n            c[i] += j;\n        return;\n    }\n    IL ll getsum(int i)\n    {\n        ll ans = 0;\n        for(; i; i-=lowbit(i))\n            ans += c[i];\n        return ans;\n    }\n    IL int lowbit(RG int k)\n    {\n        return k&(-k);\n    }//\u6811\u72b6\u6570\u7ec4\n    int a[200001];\n    int x[200001],y[200001];\n    int hash[200001],qc[200001];\n    map<int,int> hash1;\n    int main(void)\n    {\n        RG int n=gi,i;\n        for(i=1; i<=n; i++)x[i]=qc[++cnt]=gi,y[i]=qc[++cnt]=gi;\n        sort(qc+1,qc+cnt+1);//\u53bb\u91cd\n        for(i=1; i<=cnt; i++)if(qc[i]!=qc[i-1])hash[++cnt1]=qc[i];//\u5efa\u7acb\u4ece\u79bb\u6563\u5316\u540e\u7684\u65b0\u6570\u7ec4\u5230\u539f\u6570\u7ec4\u7684\u503c\u7684\u6620\u5c04\n        for(i=1;i<=cnt1;i++)hash1[hash[i]]=i;//\u5efa\u7acb\u76f8\u53cd\u6620\u5c04\n        for(i=1; i<=cnt1; i++)a[i]=i;\n        for(i=1; i<=n; i++)swap(a[hash1[x[i]]],a[hash1[y[i]]]);//\u4ea4\u6362\u65b0\u6570\u7ec4\u7684\u503c\n        change(a[cnt1],1);\n        ll ans=0;\n        for(i=cnt1-1; i; i--)\n        {\n            ll x=(ll)(hash[i+1]-hash[i]-1),p=getsum(i);//x\u662f\u4e24\u4e2a\u6570\u4e4b\u95f4\u6ca1\u6709\u88ab\u79bb\u6563\u5316\u7684\u6570\u7684\u4e2a\u6570,p\u662f\u524d\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u3002\n            ans+=x*p;//\u660e\u663e\uff0c\u6bcf\u4e24\u4e2a\u90fd\u662f\u4e00\u5bf9\u9006\u5e8f\u5bf9\n            change(i,x);\n            ans+=getsum(a[i]-1);//\u4e0b\u9762\u662f\u5bf9\u6620\u5c04\u540e\u7684\u79bb\u6563\u5316\u6570\u7ec4\u8fdb\u884c\u7684\u5355\u72ec\u9006\u5e8f\u5bf9\u8ba1\u7b97\n            change(a[i],1);\n        }\n        printf(\"%lld\",ans);\n        return 0;\n    }\n```\n\u89e3\u91ca\u4e00\u4e0b\u51e0\u4e2a\u95ee\u9898:\n\nQ1.\u4e3a\u4ec0\u4e4876\u884c\u7684x\u662fhash[i+1]-hash[i]-1\n\nA1.\u56e0\u4e3a\u5373\u4f7f\u79bb\u6563\u5316\u4e86\uff0c\u4f46\u662f\u4e24\u4e2a\u6570\u4e4b\u4e2d\u7684\u6570\u6ca1\u6709\u88ab\u4ea4\u6362\uff0c\u8fd8\u662f\u539f\u6765\u7684\u90a3\u4e9b\u6570\u3002\u4e3e\u4f8b\uff1a\n\n\u6bd4\u5982\n1 2 3 4 5 6 7 8\n\n\u4ea4\u6362 4 7\n\n\u4ea4\u6362 1 4\n\n-> 7 2 3 1 5 6 4 8\n\n\u4f46\u662f\u4e4b\u95f4\u8fd8\u662f5,6\n\nQ2.\u4e3a\u4ec0\u4e4887\u884c\u662fchange(i,x),\u800c\u4e0d\u662fchange(i,1)\uff0c\u4e5f\u4e0d\u662fchange(a[i],x)\n\nA2.\u56e0\u4e3a\u65e2\u7136\u4ed6\u4eec\u4e4b\u95f4\u6709x\u4e2a\u6570\uff0c\u6811\u72b6\u6570\u7ec4\u6c42sum\u7684\u65f6\u5019\u5fc5\u987b\u8981\u5c06\u5176\u8ba1\u7b97\u5728\u5185\uff0c\u6240\u4ee5\u628a\u4ed6\u4eec\u52a0\u5728\u4ed6\u4eec\u5f00\u59cb\u7684\u6570\u7684\u7f16\u53f7i\u4e0a,\u8fd9\u6837\u5728\u8ba1\u7b97\u67d0\u6570\u524d\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u4e2a\u6570\u65f6\uff0c\u5c31\u53ef\u4ee5\u4e00\u6b21\u6027\u52a0\u4e0ax\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u662fchange(a[i],1)\uff0c\u53c2\u89c1A1.\n\nQ3.\u5982\u4f55\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\n\nA3.\u8bf7\u9605\u8bfb\u63a8\u8350\u535a\u5ba2[\u4f20\u9001\u95e8](http://blog.csdn.net/SeasonJoe/article/details/50193789?fps=1&locationNum=15)\n",
        "postTime": 1515224650,
        "uid": 19607,
        "name": "ACA\u306d",
        "ccfLevel": 6,
        "title": "P2448 \u65e0\u5c3d\u7684\u751f\u547d"
    },
    {
        "content": "## \u5199\u5728\u524d\u9762\n\n\u8fd9\u4e00\u7bc7\u6ca1\u6709\u4ec0\u4e48\u597d\u4e1c\u897f\uff0c~~\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u5199Hash~~\n\n# $Idea$\n\n\u56e0\u4e3a\u672c\u9898\u6c42\u7684\u662f**\u9006\u5e8f\u5bf9**,\u91cd\u70b9\u662f**\u79bb\u6563\u5316**\uff0c\u4e0d\u662f\u4e48\uff1f![ts.png](https://i.loli.net/2019/09/21/GZBd691o2I3CFwv.png)\n\n\u4e8e\u662f\u53ef\u4ee5\u7528**Hash**\u6765\u5904\u7406\u672c\u9898\uff1f\n\n- \u88f8\u7684\u6811\u72b6\u6570\u7ec4\u548c\u5f52\u5e76\u6709$70\\;pts$![\u88f8\u7684.png](https://i.loli.net/2019/09/29/DQV8ZUtFbfpgzOC.png)\u662f\u5427\n\n- \u6839\u636e[\u8fd9\u4e00\u7bc7\u9898\u89e3](https://www.luogu.org/blog/IC-QQQ/solution-p2448)\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u79cd\u597d\u7684\u505a\u6cd5\n\n\u8fd9\u91cc\u6211\u91c7\u7528**Hash**\n\n\u53ef\u4ee5\u770b\u770b\u8bb0\u5f55\n\n![jl.png](https://img.langlangago.xyz/2019/09/29/5d908ffd37d8a.png)\n\n\u5f00$O2$\u7684$74\\;ms$![\u60a0\u95f2.gif](https://i.loli.net/2019/09/27/Qp2FNJftigzaGyB.gif)\n\n# $Code$\n\n```cpp\nint Hash[maxn<<1],c[maxn<<1],l[maxn<<1];\nint cnt,tot,n,m;\npair<int,int> p[maxn];\ninline void add(int x,int v){\n\tfor(int i=x;i<=m;i+=(-i)&i)\n\t\tc[i]+=v;\n}\ninline ll ask(int x){\n\tint ans=0;\n\tfor(int i=x;i;i-=i&(-i))\n\t\tans+=c[i];\n\treturn ans;\n}\nsigned main(){\n\tint k=read();\n\tfor(int i=1;i<=k;i++){\n\t\tp[i].first=read(); p[i].second=read();\n\t\tHash[++cnt]=p[i].first;\n\t\tHash[++cnt]=p[i].second;//\u5148\u90fd\u653e\u5165Hash\u6570\u7ec4\u91cc\uff0c\u4e4b\u540e\u6392\u5e8f\u53bb\u91cd\n\t}\n\tsort(Hash+1,Hash+cnt+1);\n\tm=unique(Hash+1,Hash+cnt+1)-Hash-1;\n\tfor(int i=1;i<=m;i++) l[i]=i;//\u8bb0\u5f55\u539f\u59cb\u72b6\u6001\n    for(int i=1;i<=k;i++){\n        int pos1=lower_bound(Hash+1,Hash+1+m,p[i].first)-Hash;\n        int pos2=lower_bound(Hash+1,Hash+1+m,p[i].second)-Hash;\n        swap(l[pos1],l[pos2]);//\u627e\u5230\u5bf9\u5e94\u4f4d\u7f6e\u8fdb\u884c\u76f8\u5e94\u64cd\u4f5c\n    }\n    ll ans=0;\n    for(int i=m;i>=1;i--){\n        ans+=ask(l[i]-1);//\u5355\u70b9\u6c42\u9006\u5e8f\u5bf9\n        add(l[i],1);//\u66f4\u65b0\u5355\u70b9\n        ll len=Hash[i]-Hash[i-1]-1;//\u6c42\u8fde\u7eed\u533a\u95f4\u957f\u5ea6\n        ans+=len*ask(i-1);//\u8fde\u7eed\u7684\u4e0d\u53d8\u533a\u95f4\uff0c\u53ef\u4ee5\u5c06\u5b83\u770b\u4f5c i \u8fd9\u4e2a\u6570\uff01\n        if(i!=1) add(i-1,len);//\u6700\u540e\u4e00\u4e2a\u4e0d\u7528\u66f4\u65b0\u4e86\uff08\u4e5f\u4e0d\u80fd\u66f4\u65b0\uff0c\u4f1a\u5728\u66f4\u65b0\u4e2d\u6b7b\u5faa\u73af\uff0c\u56e0\u4e3a0\u7684lowbit\u662f0\uff09\n    }\n    printf(\"%lld\",ans);\n\treturn 0;\n}\n```\n\n$$\nThe \\quad End\n$$\n\n$$\n\\text{\u613f\u610f\u7528\u4e00\u652f\u9ed1\u8272\u7684\u94c5\u7b14,\u753b\u4e00\u51fa\u6c89\u9ed8\u821e\u53f0\u5267-\u300a\u4e0d\u8981\u8bf4\u8bdd\u300b\u9648\u5955\u8fc5}\n$$\n\n",
        "postTime": 1569755609,
        "uid": 126772,
        "name": "\u53f6\u67ab",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2448 \u3010\u65e0\u5c3d\u7684\u751f\u547d\u3011"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6709 $n$ \u4e2a\u6570\u7684\u5e8f\u5217\uff0c\u600e\u4e48\u6c42\u9006\u5e8f\u5bf9\uff1f\u6211\u4eec\u4ece\u540e\u5f80\u524d\u5904\u7406\u6570\u7ec4\uff0c\u5047\u8bbe\u5f53\u524d\u7684\u6570\u5927\u5c0f\u4e3a $x$\uff0c\u4e4b\u524d\u5904\u7406\u7684\u6570\u6709\u591a\u5c11\u4e2a\u5c0f\u4e8e $x$ \u7684\u5c31\u65b0\u4ea7\u751f\u4e86\u591a\u5c11\u4e2a\u9006\u5e8f\u5bf9\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u90fd\u6ee1\u8db3\u4e0b\u6807\u5927\u4e8e\u5f53\u524d\u6570\u4e14\u6570\u503c\u5c0f\u4e8e\u5f53\u524d\u6570\u3002\u6240\u4ee5\u6211\u4eec\u5f00\u4e00\u4e2a\u5927\u5c0f\u7b49\u4e8e\u503c\u57df\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u7ef4\u62a4\u5148\u524d\u5c0f\u4e8e\u5f53\u524d\u6570\u7684\u4e2a\u6570\uff0c\u7136\u540e\u7d2f\u79ef\u7b54\u6848\u5373\u53ef\u3002\n\n# Solution\n\u4f46\u662f $2^{31}$ \u7684\u503c\u57df\uff0c\u6570\u7ec4\u627f\u53d7\u4e0d\u8d77\uff0c\u4e8e\u662f\u8003\u8651\u79bb\u6563\u5316\u3002\u53ea\u8ba1\u7b97\u9898\u76ee\u4e2d\u51fa\u73b0\u6570\u5b57\u7684\u9006\u5e8f\u5bf9\u662f\u4f1a\u51fa\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u6ca1\u6709\u6539\u53d8\u4f4d\u7f6e\u7684\u6570\u4e5f\u53ef\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u3002\u6211\u4eec\u5148\u5bf9\u9898\u76ee\u4e2d\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\u8fdb\u884c\u6392\u5e8f\uff0c\u8bb0\u4e3a $num_{i}$\uff0c\u663e\u7136 $i \\leqslant 2k$\uff0c\u7136\u540e\u79bb\u6563\u5316 $num$ \u6570\u7ec4\u8bb0\u4e3a $d$ \u6570\u7ec4\u3002\u518d\u6309\u7167\u9898\u76ee\u4ea4\u6362 $d_{x_i}$ \u548c $d_{y_i}$\uff0c\u5982\u679c\u4e0d\u8003\u8651\u6ca1\u4ea4\u6362\u4f4d\u7f6e\u7684\u6570\uff0c\u7b54\u6848\u663e\u7136\u662f\u5e8f\u5217 $d$ \u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u6ca1\u4ea4\u6362\u4f4d\u7f6e\u7684\u6570\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/005094wu.png)\n\n\u8fd9\u662f\u4ea4\u6362\u540e\u7684\u6570\u7ec4\u3002\u82e5 $num_{d_i}> num_i$\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6570\u4e4b\u95f4\u6ca1\u6709\u88ab\u4ea4\u6362\u7684\u6570\u4e2a\u6570\u4e3a $num_{d_i}-num_i-(d_i-i)$\uff0c\u8fd9\u4e9b\u6570\u90fd\u6bd4 $num_{d_i}$ \u5c0f\uff0c\u7edf\u8ba1\u8fdb\u7b54\u6848\uff1b\u82e5 $num_{d_i}< num_i$ ,\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6570\u4e4b\u95f4\u6ca1\u6709\u88ab\u4ea4\u6362\u8fc7\u7684\u6570\u4e2a\u6570\u4e3a $num_{i}-num_{d_i}-(i-d_i)$\uff0c\u8fd9\u4e9b\u6570\u90fd\u6bd4 $num_{d_i}$ \u5927\uff0c\u7edf\u8ba1\u8fdb\u7b54\u6848\u3002\n\n\u8bb0\u5f97\u5f00\u957f\u6574\u578b\u3002\n\n# Code\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n#define int long long\nusing namespace std;\nconst int N=1e5+5;\ninline int read() {\n\tint res,sign=1;char c;\n\twhile(!isdigit(c=getchar())) if(c=='-') sign=-1;res=c^48;\n\twhile(isdigit(c=getchar())) res=(res<<3)+(res<<1)+(c^48);\n\treturn res*sign;\n}\nint tot,a[N],b[N],c[N],num[N<<1],d[N];\ninline void swap(int &x,int &y) {\n\tint tmp=x;\n\tx=y,y=tmp;\n}\nint find(int x) {\n\tint l=1,r=tot,mid;\n\twhile(l<=r) {\n\t\tmid=l+r>>1;\n\t\tif(num[mid]<x) l=mid+1;\n\t\telse r=mid-1;\n\t}\n\treturn l;\n}\nint lowbit(int x) {return x&(-x);}\ninline void add(int x) {\n\twhile(x<=tot) {\n\t\tc[x]++;\n\t\tx+=lowbit(x);\n\t}\n}\nint sum(int x) {\n\tint res=0;\n\twhile(x) {\n\t\tres+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn res;\n}\nsigned main() {\n\tint k=read();\n\tfor(int i=1;i<=k;++i) {\n\t\ta[i]=read();\n\t\tb[i]=read();\n\t\tnum[i]=a[i];\n\t\tnum[k+i]=b[i];\n\t}\n\tsort(num+1,num+2*k+1);\n\ttot=unique(num+1,num+2*k+1)-num-1;\n\tfor(int i=1;i<=tot;++i) d[i]=i;\n\tfor(int i=1;i<=k;++i) swap(d[find(a[i])],d[find(b[i])]);\n\tint ans=0;\n\tfor(int i=tot;i>=1;--i) {\n\t\tadd(d[i]);\n\t\tans+=sum(d[i]-1);\n\t\tif(d[i]>i) ans+=num[d[i]]-num[i]-(d[i]-i);\n\t\tif(d[i]<i) ans+=num[i]-num[d[i]]-(i-d[i]);\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1631322619,
        "uid": 186477,
        "name": "SegTre",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2448"
    },
    {
        "content": "## \u9898\u610f\n\n\u4e00\u4e2a\u5f88\u957f\u7684\u5e8f\u5217 $a_1,a_2,a_3,\u2026,a_{2^{31}-1}$\uff0c\u503c\u5206\u522b\u662f $1,2,3,\u2026,2^{31}-1$\u3002\n\n\u8fdb\u884c $k$ \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u6b21\u6709\u4e24\u4e2a\u6570 $x,y$\uff0c\u8bf7\u4ea4\u6362 $a_x,a_y$\uff0c\u6700\u540e\u8f93\u51fa\u65b0\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n## \u5206\u6790\n\n\u6bcf\u6b21\u4ea4\u6362\u53ea\u4f1a\u6539\u53d8\u4e24\u4e2a\u6570\u7684\u4f4d\u7f6e\uff0c\u4ea4\u6362\u7684\u6b21\u6570\u4e5f\u6bd4\u8f83\u5c11\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6839\u636e $x,y$ \u628a\u6574\u4e2a\u5e8f\u5217\u5206\u6210\u51e0\u6bb5\uff0c\u6bcf\u6bb5\u5185\u7684\u6570\u5b57\u90fd\u662f\u8fde\u7eed\u7684\u3002\n\n\u8bf7\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a\n\n```cpp\n2\n1 8\n4 10\n```\n\n\u4ea4\u6362\u7684\u70b9 $x,y$ \u663e\u7136\u8981\u5355\u72ec\u4e00\u6bb5\uff0c\u4e2d\u95f4\u7684\u6570\u4e5f\u8981\u4e00\u6bb5\u3002\n\n$1|2\\ 3|4|5\\ 6\\ 7|8|9|10$\n\n\u8fd9\u6837\u5c31\u77e5\u9053\u600e\u4e48\u5206\u4e86\u5427\uff0c\u6240\u6709\u4f5c\u4e3a\u5de6\u7aef\u70b9\u7684\u6570\u5c31\u662f $x,x+1,y,y+1$\uff0c\u5c06\u4ed6\u4eec\u653e\u8fdb\u6570\u7ec4 $c$ \u4e2d\u8fdb\u884c\u6392\u5e8f\u5e76\u53bb\u91cd\uff0c\u786e\u5b9a\u6bcf\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u5c31\u662f\u4e0b\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u51cf $1$\u3002\u867d\u7136\u8fd9\u6837\u770b\u8d77\u6765\u50cf\u662f\u79bb\u6563\u5316\uff0c\u4f46\u5176\u5b9e\u5e76\u4e0d\u662f\u3002\u4ea4\u6362\u65f6\u53ea\u8981\u4ea4\u6362 $x,y$ \u6240\u5728\u7684\u6bb5\u5373\u53ef\u3002\n\n```cpp\nfor(int i=1;i<=n;i++){\n\tx[i]=read();y[i]=read();\n\tc[++m]=x[i];c[++m]=x[i]+1;\n\tc[++m]=y[i];c[++m]=y[i]+1;\n}\nsort(c+1,c+m+1);\nint tot=unique(c+1,c+m+1)-c-1;\nfor(int i=1;i<tot;i++)\n\ta[i].l=c[i],a[i].r=c[i+1]-1;\nfor(int i=1;i<=n;i++){\n\tx[i]=lower_bound(c+1,c+tot+1,x[i])-c;\n\ty[i]=lower_bound(c+1,c+tot+1,y[i])-c;\n\tswap(a[x[i]],a[y[i]]);\n}\n```\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u4e86\u3002\n\n\u6309\u7167\u5957\u8def\uff0c\u5012\u5e8f\u626b\u63cf\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u5b9e\u73b0\uff1a\n\n- \u6c42\u4e00\u6bb5\u533a\u95f4\u4e2d\u5c11\u4e8e\u67d0\u4e2a\u6570\u7684\u6570\u7684\u4e2a\u6570\u2014\u2014**\u533a\u95f4\u67e5\u8be2**\u3002\n\n- \u628a\u4e00\u6bb5\u8fde\u7eed\u7684\u6570\u51fa\u73b0\u7684\u6b21\u6570\u589e\u52a0 $1$\u2014\u2014**\u533a\u95f4\u589e\u52a0**\u3002\n\n\u8fd9\u4e0d\u5c31\u662f**\u7ebf\u6bb5\u6811**\u5417\uff01\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4ee5\u6743\u503c\u4e3a\u8282\u70b9\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\u3002\n\n\u7136\u800c\u53f6\u5b50\u8282\u70b9\u6570\u591a\u8fbe $2^{31}-1$\uff0c\u666e\u901a\u7ebf\u6bb5\u6811\u662f\u5b58\u4e0d\u4e0b\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7528**\u52a8\u6001\u5f00\u70b9**\u7684\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6bcf\u6b21\u6c42\u7b54\u6848\u8bb0\u5f97\u8981\u4e58\u4e0a\u533a\u95f4\u7684\u957f\u5ea6\u3002\n\n\u6700\u540e\u5c31\u662f\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\u677f\u5b50\u4e86\u3002\n\n**\u53cb\u60c5\u63d0\u793a**\uff1a\u8981\u5f00 ``long long``\uff0c\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7a7a\u95f4\u8981\u5f00\u5927\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nll read(){\n\tll x=0,f=1;char ch=getchar();\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nvoid write(ll x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nconst int N=1e5+10,M=3e6+10;\nint n,m,c[N<<2],x[N],y[N],t=1,l,r;\nll ans;\nstruct qj{\n\tint l,r;\n}a[N<<2];\nstruct Tree{\n\tint cl,cr;\n\tll tag,sum;\n}s[M];\nvoid make(int p){\n\tif(s[p].cl)\n\t\treturn;\n\ts[p].cl=++t;s[p].cr=++t;\n}\nvoid pushup(int p){\n\ts[p].sum=s[s[p].cl].sum+s[s[p].cr].sum;\n}\nvoid pushdown(int p,int l,int mid,int r){\n\tif(s[p].tag){\n\t\ts[s[p].cl].tag=s[s[p].cr].tag=s[p].tag;\n\t\ts[s[p].cl].sum+=s[p].tag*(mid-l+1);\n\t\ts[s[p].cr].sum+=s[p].tag*(r-mid);\n\t\ts[p].tag=0;\n\t}\n}\nvoid add(int p,int l1,int r1){\n\tif(l<=l1&&r1<=r){\n\t\ts[p].tag++;\n\t\ts[p].sum+=(r1-l1+1);\n\t\treturn;\n\t}\n\tint mid=(l1+r1)>>1;\n\tmake(p);\n\tpushdown(p,l1,mid,r1);\n\tif(l<=mid)\n\t\tadd(s[p].cl,l1,mid);\n\tif(r>mid)\n\t\tadd(s[p].cr,mid+1,r1);\n\tpushup(p);\n}\nll ask(int p,int l1,int r1){\n\tif(l<=l1&&r1<=r)\n\t\treturn s[p].sum;\n\tll ans=0;\n\tint mid=(l1+r1)>>1;\n\tmake(p);\n\tpushdown(p,l1,mid,r1);\n\tif(l<=mid)\n\t\tans+=ask(s[p].cl,l1,mid);\n\tif(r>mid)\n\t\tans+=ask(s[p].cr,mid+1,r1);\n\treturn ans;\n}\nint main()\n{\n    n=read();\n\tfor(int i=1;i<=n;i++){\n\t\tx[i]=read();y[i]=read();\n\t\tc[++m]=x[i];c[++m]=x[i]+1;\n\t\tc[++m]=y[i];c[++m]=y[i]+1;\n\t}\n\tsort(c+1,c+m+1);\n\tint tot=unique(c+1,c+m+1)-c-1;\n\tfor(int i=1;i<tot;i++)\n\t\ta[i].l=c[i],a[i].r=c[i+1]-1;\n\tfor(int i=1;i<=n;i++){\n\t\tx[i]=lower_bound(c+1,c+tot+1,x[i])-c;\n\t\ty[i]=lower_bound(c+1,c+tot+1,y[i])-c;\n\t\tswap(a[x[i]],a[y[i]]);\n\t}\n\tfor(int i=tot-1;i;i--){\n\t\tl=1;r=a[i].l-1;\n\t\tif(l<=r)\n\t\t\tans+=ask(1,1,c[tot])*(a[i].r-a[i].l+1);\n\t\tl=a[i].l,r=a[i].r;\n\t\tadd(1,1,c[tot]);\n\t}\n\twrite(ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1629527871,
        "uid": 419144,
        "name": "chenjunxiu",
        "ccfLevel": 7,
        "title": "P2448 \u65e0\u5c3d\u7684\u751f\u547d"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\n\u770b\u5230\u9898\u76ee\u663e\u800c\u6613\u89c1\u662f\u6c42\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\n\n### \u601d\u8def\u5206\u6790\n\n\u770b\u5230\u6570\u636e\u8303\u56f4 $x_i,y_i \\le 2^{31}-1$\uff0c$k \\le 10^5$\u3002\u6570\u636e\u503c\u57df\u5927\u4f46\u662f\u4e2a\u6570\u5c11\uff0c\u4e14\u4e0e\u6570\u636e\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u6709\u5173\uff0c\u56e0\u6b64\u8003\u8651\u79bb\u6563\u5316\u3002\n\n#### \u79bb\u6563\u5316\u7b80\u5355\u4ecb\u7ecd\n\n\u79bb\u6563\u5316\u5b9e\u9645\u5c31\u662f\u4e00\u79cd\u6620\u5c04\uff0c\u5f53\u6570\u636e\u503c\u57df\u8fc7\u5927\u800c\u4e2a\u6570\u6709\u9650\u65f6\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u79bb\u6563\u5316\u3002\n\n\u5177\u4f53\u8fc7\u7a0b\u4ee5\u6b64\u9898\u4e3a\u4f8b\u3002\u5047\u8bbe\u7ed9\u51fa\u8fd9\u4e48\u4e00\u7ec4\u6570\u636e\uff1a\n\n```\n2\n\n123456789 123456\n\n987654321 123456\n\n```\n\n\u9996\u5148\u5c06\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u6570\u6536\u96c6\u8d77\u6765\uff0c\u5b58\u8fdb $a$ \u6570\u7ec4\uff0c\u5e76\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u518d**\u53bb\u91cd**\u4fdd\u5b58\u8fdb $pos$ \u6570\u7ec4\u5f53\u4e2d\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/wykzmz13.png)\n\n\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5efa\u7acb\u6620\u5c04\u5173\u7cfb\u3002**\u5c06\u6570\u503c\u5927\u7684\u6570\u5728 $num$ \u6570\u7ec4\u4e2d\u7528\u6570\u503c\u5c0f\u7684\u6570\u4ee3\u66ff\uff0c\u4f46\u5404\u4e2a\u6570\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u4e0d\u53d8**\uff0c\u63a5\u4e0b\u6765\u4ea4\u6362\u64cd\u4f5c\u5148\u7528\u4e8c\u5206\u7b54\u6848\u5728 $pos$ \u6570\u7ec4\u4e2d\u68c0\u7d22\uff0c\u7136\u540e\u901a\u8fc7\u6620\u5c04\u5728 $num$ \u6570\u7ec4\u4e2d\u8fdb\u884c\u4ea4\u6362\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ji9dhfzo.png)\n\n\u6700\u7ec8\u88ab\u4ea4\u6362\u8fc7\u7684\u6570\u4e4b\u95f4\u7684\u9006\u5e8f\u5bf9\u5728 $num$ \u6570\u7ec4\u4e2d\u6c42\u5373\u53ef\u3002\n\n#### \u88ab\u4ea4\u6362\u7684\u6570\u4e0e\u672a\u88ab\u4ea4\u6362\u7684\u6570\u4e4b\u95f4\u7684\u9006\u5e8f\u5bf9\n\n\u8003\u8651\u6bcf\u4e2a\u88ab\u4ea4\u6362\u7684\u6570\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u8bbe $x<y$\uff0c\u5f53 $x$ \u548c $y$ \u4ea4\u6362\u540e\u3002\n\n\u5bf9\u4e8e $x$ \u6765\u8bf4\uff0c $x \\sim y$ \u4e4b\u95f4\u6240\u6709\u672a\u88ab\u4ea4\u6362\u7684\u6570\u90fd\u6bd4 $x$ \u5927\uff0c\u5f62\u6210\u9006\u5e8f\u5bf9\u3002\n\n\u5bf9\u4e8e $y$ \u6765\u8bf4\uff0c$x \\sim y$ \u4e4b\u95f4\u6240\u6709\u672a\u88ab\u4ea4\u6362\u7684\u6570\u90fd\u6bd4 $y$ \u5c0f\uff0c\u5f62\u6210\u9006\u5e8f\u5bf9\u3002\n\n\u9006\u5e8f\u5bf9\u4e2a\u6570\u90fd\u4e3a $x \\sim y$ \u4e4b\u95f4\u6240\u6709\u672a\u88ab\u4ea4\u6362\u7684\u6570\u3002\n\n\u6e29\u99a8\u63d0\u793a\uff1a\u4ee5\u4e0b\u4e3b\u8981\u4e3a\u4ee3\u7801\u5b9e\u73b0\u8bb2\u89e3\uff0c\u672c\u8d28\u601d\u60f3\u540c\u4e0a\u3002\n\n\u5bf9\u4e8e\u4ea4\u6362\u8fc7\u540e\u7684 $num$ \u6570\u7ec4\uff0c$num_i$ \u8868\u793a\u7684\u662f\u4f4d\u7f6e $pos_i$ \u4e0a\u5f53\u524d\u6240\u5728\u7684\u6570\u5728 $num$ \u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u6570\u3002\u8bb0\u6570 $x$ \u4e3a\u4f4d\u7f6e $pos_i$  \u4e0a\u5f53\u524d\u6240\u5728\u7684\u6570\u3002\n\n$pos_{num_i}$ \u8868\u793a\u6570 $x$ \u73b0\u5728\u6240\u5728\u7684\u4f4d\u7f6e\u3002\n\n$pos_i$ \u8868\u793a\u6570 $x$ \u539f\u6765\u5728\u7684\u4f4d\u7f6e\u3002\n\n$\\left\\vert pos_i-pos_{num_i}-1\\right\\vert$ \u8868\u793a\u4e24\u4e2a\u4f4d\u7f6e\u95f4\u6240\u6709\u7684\u6570\u3002\n\n$\\left\\vert num_i-i-1\\right\\vert$ \u8868\u793a\u4e24\u4e2a\u4f4d\u7f6e\u95f4\u6240\u6709\u88ab\u4ea4\u6362\u8fc7\u7684\u6570\u3002\n\n\u56e0\u6b64\u6240\u6709\u672a\u88ab\u4ea4\u6362\u7684\u6570\u5c31\u662f $\\left\\vert pos_i-pos_{num_i}-1\\right\\vert - \\left\\vert num_i-i-1\\right\\vert$\u3002\n\n### code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nstruct A{\n\tint x,y;\n}a[100005];\nint k,pos[200005],num[200005],cnt,len;\nint t[100005];\nvoid add(int x){\n\tfor(;x<=len;x+=(x&-x)) t[x]+=1;\n}\nlong long sum(int x){\n\tlong long ans=0;\n\tfor(;x;x-=(x&-x)) ans+=t[x];\n\treturn ans;\n}\nint find(int x){\n\tint l=1,r=len;\n\twhile(l<r){\n\t\tint mid=(l+r)>>1;\n\t\tif(pos[mid]<x) l=mid+1;\n\t\telse if(pos[mid]>x) r=mid-1;\n\t\telse return mid;\n\t}\n} \nint main(){\n\tscanf(\"%d\",&k);\n\tfor(int i=1;i<=k;i++){\n\t\tscanf(\"%d%d\",&a[i].x,&a[i].y);\n\t\tnum[++cnt]=a[i].x;\n\t\tnum[++cnt]=a[i].y;\n\t}\n\tsort(num+1,num+cnt+1);\n\tfor(int i=1;i<=cnt;i++){\n\t\tif(num[i]==num[i-1]) continue;\n\t\tpos[++len]=num[i];\n\t}\n\tfor(int i=1;i<=len;i++) num[i]=i;\n\tfor(int i=1;i<=k;i++){\n\t\tint pos1=find(a[i].x);\n\t\tint pos2=find(a[i].y);\n\t\tswap(num[pos1],num[pos2]);\n\t}\n\tlong long ans=0;\n\tfor(int i=len;i>=1;i--){\n\t\tadd(num[i]);\n\t\tans+=sum(num[i]-1);\n\t\tans+=abs(pos[num[i]]-pos[i]-1)-abs(num[i]-i-1); \n\t} \n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1673431228,
        "uid": 450334,
        "name": "k_stefani",
        "ccfLevel": 0,
        "title": "P2448 \u65e0\u5c3d\u7684\u751f\u547d"
    },
    {
        "content": "\u9996\u5148 $70\\%$ \u7684\u6570\u636e\u70b9\u76f4\u63a5\u4e2a $10^5$ \u7684\u5e8f\u5217\u76f4\u63a5\u64cd\u4f5c\uff0c\u5927\u4e8e $10^5$ \u7684\u6570\u80af\u5b9a\u4e0d\u4f1a\u8d21\u732e\u7b54\u6848\uff0c\u56e0\u4e3a\u6bd4\u5b83\u5927\u7684\u503c\u4e0d\u4f1a\u4ea4\u6362\u5230\u524d\u9762\uff0c\u6700\u540e\u8dd1\u4e00\u904d\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u5373\u53ef\n\n\u5bf9\u4e8e $x,y$ \u5f88\u5927\u7684\u65f6\u5019\uff0c\u5bb9\u6613\u53d1\u73b0\u6700\u591a\u4f1a\u6709 $10^5$ \u4e2a\u6570\u4f1a\u8fdb\u884c\u4ea4\u6362\u64cd\u4f5c\n\n\u5269\u4e0b\u7684\u662f\u82e5\u5e72\u4e2a\u7c7b\u4f3c\u4e8e $x,x+1,x+2...$ \u7684\u8fde\u7eed\u6bb5\uff0c\u4e0d\u59a8\u628a\u8fd9\u4e9b\u8fde\u7eed\u6bb5\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u8fd9\u4e2a\u8fde\u7eed\u6bb5\u5185\u6570\u7684\u4e2a\u6570\uff0c\u8dd1\u4e00\u904d\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\uff0c\u6ce8\u610f\u6570\u7ec4\u8981\u5f00\u4e24\u500d\n\n```c++\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\n#define rint register int \n\nusing namespace std;\n\nconst int maxn = 2e5 + 50;\n\ninline int read () {\n\trint x = 0, w = 1;\n\tchar ch = getchar ();\n\tfor (; ch < '0' || ch > '9'; ch = getchar ()) if (ch == '-') w = -1;\n\tfor (; ch >= '0' && ch <= '9'; ch = getchar ()) x = x * 10 + ch - '0';\n\treturn x * w;\n}\n\nint k, n, len, a[maxn], b[maxn], cnt[maxn], pos[maxn], tree[maxn];\nlong long ans;\n\nstruct Node {\n\tint x, y;\n} q[maxn];\n\ninline void Insert (rint x, rint val) {\n\tfor (; x; x -= x & -x) tree[x] += val;\n}\n\ninline int Query (rint x, int ans = 0) {\n\tfor (; x <= maxn; x += x & -x) ans += tree[x];\n\treturn ans;\n}\n\nint main () {\n\tk = read();\n\tfor (rint i = 1; i <= k; i ++) \n\t\tq[i].x = b[++ len] = read(), q[i].y = b[++ len] = read();\n\tb[++ len] = 1, b[++ len] = 2147483647;\n\tsort (b + 1, b + len + 1), len = unique (b + 1, b + len + 1) - b - 1;\n\tn = (len << 1) - 1;\n\tfor (rint i = 1; i <= n; i ++) {\n\t\ta[i] = pos[i] = i;\n\t\tif (i & 1) cnt[i] = 1;\n\t\telse cnt[i] = b[(i >> 1) + 1] - b[i >> 1] - 1;\n\t}\n\tfor (rint i = 1; i <= k; i ++) {\n\t\tq[i].x = lower_bound (b + 1, b + len + 1, q[i].x) - b;\n\t\tq[i].y = lower_bound (b + 1, b + len + 1, q[i].y) - b;\n\t\tq[i].x <<= 1, q[i].y <<= 1, q[i].x --, q[i].y --;\n\t\tswap (a[q[i].x], a[q[i].y]);\n\t}\n\tfor (rint i = 1; i <= n; i ++) \n\t\tans += 1ll * Query (a[i]) * cnt[i], Insert (a[i], cnt[i]);\n\tprintf (\"%lld\\n\", ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1616592749,
        "uid": 335193,
        "name": "Rubyonly",
        "ccfLevel": 8,
        "title": "P2448 \u9898\u89e3"
    },
    {
        "content": "```\n/*\n\u5e8f\u5217\u5206\u4e3a\u79fb\u52a8\u7684\u5e8f\u5217\u548c\u672a\u79fb\u52a8\u7684\u5e8f\u5217\u4e24\u90e8\u5206\n\u8be2\u95ee\u79bb\u6563\u5316\u540e \n\u5bf9\u4e8e\u79fb\u52a8\u7684\u5e8f\u5217\uff0c\u62bd\u51fa\u6765\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\u9006\u5e8f\u5bf9\n\u5bf9\u4e8e\u672a\u79fb\u52a8\u7684\u5e8f\u5217\uff0c\u60f3\u529e\u6cd5\u80fd\u76f4\u63a5\u7edf\u8ba1\u7b54\u6848\n\u9996\u5148\u7ef4\u62a4\u54ea\u4e9b\u6570\u672a\u88ab\u79fb\u52a8\u8fc7\uff0c\u7136\u540e\u5bf9\u4e8e\u672a\u88ab\u79fb\u52a8\u8fc7\u7684\u6570\u6c42\u524d\u7f00\u548csum[i] \n\u8fd9\u6837\u5c31\u5f97\u5230\u4e861~i\u4e2d\u672a\u88ab\u79fb\u52a8\u8fc7\u7684\u6570\u7684\u4e2a\u6570\uff0c\u8fdb\u800c\u80fdO(1)\u5f97\u51fa\u6bcf\u6bb5\u533a\u95f4\u672a\u88ab\u79fb\u52a8\u7684\u6570\u7684\u4e2a\u6570\u3002\n\u8003\u8651\u4e00\u4e2a\u79fb\u52a8\u4e86\u7684\u5143\u7d20\uff0c\u4ecei\u5411\u524d\u79fb\u52a8\u5230\u4e86j\uff0c\u90a3\u4e48\u4ed6\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u5c31\u662fsum[j,i]\n\u56e0\u4e3a\u5411\u524d\u79fb\u52a8\u540e[j,i]\u8fd9\u6bb5\u533a\u95f4\u6240\u6709\u6570\u90fd\u6bd4\u4ed6\u5c0f\u3002\n\u540c\u7406\u4e00\u4e2a\u5143\u7d20\u4ecei\u5411\u540e\u79fb\u52a8\u5230\u4e86j\uff0c\u90a3\u4e48\u4ed6\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3asum[i,j]\n\u6240\u4ee5\u672a\u88ab\u79fb\u52a8\u7684\u5143\u7d20\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u548c\u5c31\u662f\u03a3abs(sum[\u539f\u6765\u4f4d\u7f6e]-sum[\u79fb\u52a8\u540e\u7684\u4f4d\u7f6e]) \n*/\n#include<bits/stdc++.h>\n\n#define N 200007\n#define ll long long\n\nusing namespace std;\nint n,m,cnt,num;\nll ans;\nll pos[N],a[N],sum[N];\nstruct node{\n\tint L,R;\n}ask[N];\n\nstruct BIT_{\n\t\n\tint n;ll a[N];\n\t\n\tstatic int lowbit(int x){\n\t\t\n\t\treturn x & -x;\n\t}\n\t\n\tvoid clear(){\n\t\t\n\t\tfor(int i=1;i<=n;i++) a[i]=0;\n\t}\n\t\n\tll query(int pos){\n\t\t\n\t\tll ans=0;\n\t\tfor(int i=pos;i>0;i-=lowbit(i)) ans+=a[i];\n\t\treturn ans;\n\t}\n\t\n\tvoid update(int pos,int val){\n\t\t\n\t\tfor(int i=pos;i<=n;i+=lowbit(i)) a[i]+=val;\n\t}\n}bit;\n\ninline int read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\n\nvoid discrete()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\task[i].L=read();ask[i].R=read();\n\t\ta[i]=ask[i].L;a[i+n]=ask[i].R;\n\t\tpos[i]=i;pos[i+n]=i+n;\n\t}\n\tsort(a+1,a+n*2+1);\n\tnum=unique(a+1,a+n*2+1)-a-1;\n\tfor(int i=1;i<=num;i++) sum[i]=sum[i-1]+a[i]-a[i-1]-1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\task[i].L=lower_bound(a+1,a+num+1,ask[i].L)-a;\n\t\task[i].R=lower_bound(a+1,a+num+1,ask[i].R)-a;\n\t\tswap(pos[ask[i].L],pos[ask[i].R]);\n\t}\n}\n\nint main()\n{\n\tn=read();discrete();\n\tbit.n=n<<1; bit.clear();\n\tfor(int i=num;i>=1;i--)\n\t{\n\t\tans+=bit.query(pos[i]);\n\t\tans+=abs(sum[pos[i]]-sum[i]);\n\t\tbit.update(pos[i],1);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1541152007,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2448 \u3010\u65e0\u5c3d\u7684\u751f\u547d\u3011"
    },
    {
        "content": "\u9898\u610f\u5c31\u662f\u7ed9\u5b9a\u82e5\u5e72\u6b21\u4ea4\u6362\u64cd\u4f5c\uff0c\u6c42\u51fa\u4ea4\u6362\u4e4b\u540e\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\uff0c\u5f53\u7136\u7531\u4e8ex\u548cy\u5f88\u5927\u7684\u5173\u7cfb\uff0c\u8fd9\u9898\u662f\u4e0d\u80fd\u591f\u76f4\u63a5\u7edf\u8ba1\u9006\u5e8f\u5bf9\u7684\uff0c\u6211\u4eec\u9700\u8981\u5148\u8fdb\u884c\u4e00\u6b21\u79bb\u6563\u5316\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u7684\u4e00\u4e2a\u5e8f\u5217\uff1a54123\u548c\u5e8f\u5217\uff1a54111\u7684\u9006\u5e8f\u5bf9\u6570\u662f\u4e00\u6837\u591a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u6bcf\u6b21\u4ea4\u6362\u7684\u4e24\u4e2a\u6570\u8bb0\u5f55\u4e0b\u6765\uff0c\u5982\u679c\u53d1\u73b0\u6709\u4e00\u6bb5\u6570\u5b57\u6ca1\u6709\u88ab\u4ea4\u6362\uff0c\u90a3\u4e48\u5c31\u8bb0\u5f55\u8fd9\u6bb5\u6570\u5b57\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\u6570\u5b57\uff0c\u518d\u628a\u957f\u5ea6\u8bb0\u5f55\u4e0b\u6765\uff0c\uff08\u5982\u5e8f\u521754123\u5c06\u88ab\u79bb\u6563\u5316\u4e3a\uff1a\uff08\uff085,1\uff09\uff0c\uff084,1\uff09\uff0c\uff081,3\uff09\uff09\uff0c\u7b2c\u4e00\u4e2a\u6570\u5b57\u8868\u793a\u79bb\u6563\u5316\u4e4b\u540e\u7684\u6570\u503c\uff0c\u7b2c\u4e8c\u4e2a\u6570\u5b57\u8868\u793a\u8be5\u6570\u503c\u7684\u957f\u5ea6\u3002\uff09\u6700\u540e\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\uff08\u9700\u8981\u518d\u6b21\u79bb\u6563\u5316\uff09\u6216\u8005\u5f52\u5e76\u6392\u5e8f\u7edf\u8ba1\u9006\u5e8f\u5bf9\u7684\u65f6\u5019\uff0c\u53ea\u8981\u628a\u6c42\u51fa\u6765\u7684\u67d0\u4e2a\u6570\u5b57\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u6570\u4e58\u4ee5\u8be5\u6570\u5b57\u7684\u957f\u5ea6\uff0c\u7d2f\u52a0\u5c31\u53ef\u4ee5\u6c42\u51fa\u603b\u7684\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u4e86\u3002\n\n\u53e6\u9644\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u7684\u6587\u7ae0\u4e00\u4efd\uff1ahttp://blog.csdn.net/acdreamers/article/details/8520096\n\n\uff08\u6ce8\uff1a\u518d\u4f7f\u7528\u8be5\u5927\u89e6\u535a\u5ba2\u4e2d\u6240\u5199\u7684\u79bb\u6563\u5316\u65b9\u6cd5\u4e4b\u524d\uff0c\u8fd8\u9700\u8981\u8dd1\u4e00\u904d\u4e0a\u9762\u7684\u79bb\u6563\u5316\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u8981\u4e24\u6b21\u79bb\u6563\u5316=A=\uff0c\u5f53\u7136\u4e5f\u53ef\u80fd\u53ea\u662f\u6211\u81ea\u5df1\u60f3\u591a\u4e86\uff09\n\n\u9644\u4e0a\u81ea\u5df1\u7684\u4ee3\u7801\u4e00\u4efd\n\n```cpp\n\n#include<iostream>  \n#include<stdio.h>  \n#include<string.h>  \n#include<string>  \n#include<stdlib.h>  \n#include<algorithm>  \n#include<math.h>  \n#include<map>  \n#define int long long  \nusing namespace std;  \n  \nconst int Maxn=500010;  \nmap <int,int>m;  \nstruct T  \n{  \n    int len;  \n    int v;  \n    int order;  \n}a[Maxn];  \nint cnt;  \nlong long c[Maxn];  \nT aa[Maxn];  \nlong long sum[Maxn];  \nlong long n;  \n  \nint lowbit(int x)  \n{  \n    return x&(-x);  \n}  \n  \nvoid update(int t,int value)  \n{  \n    int i;  \n    for(i=t;i<=cnt;i+=lowbit(i))  \n    {  \n        c[i]+=value;  \n    }  \n}  \n  \nlong long getsum(int x)  \n{  \n    int i;  \n    long long temp=0;  \n    for(i=x;i>=1;i-=lowbit(i))  \n    {  \n        temp+=c[i];  \n    }  \n    return temp;  \n}  \n  \nbool cmp(T x,T y)  \n{  \n    return x.v<y.v;  \n}  \n  \nmain()  \n{  \n    int k;  \n    scanf(\"%lld\",&k);  \n      for (int i=1;i<=k;i++)  \n    {  \n        int t1,t2;  \n        scanf(\"%lld%lld\",&t1,&t2);  \n        int tt1=t2,tt2=t1;  \n        if (m[t1]==0)  \n            m[t1]=t1;  \n        if (m[t2]==0)  \n            m[t2]=t2;  \n        int x1=m[tt1];  \n        int x2=m[tt2];  \n        m[t1]=x1;  \n        m[t2]=x2;  \n        n=max(n,(long long)t1);  \n        n=max(n,(long long)t2);  \n    }  \n    map<int,int>::iterator it;  \n    int last=-1;  \n    for(it=m.begin();it!=m.end();++it)  \n    {  \n        if (last!=-1 && it->first!=last+1)  \n        {  \n            cnt++;  \n            a[cnt].v=last+1;  \n            a[cnt].len=it->first-last-1;  \n            a[cnt].order=cnt;  \n            last=it->first;  \n        }  \n        cnt++;  \n        a[cnt].v=it->second;  \n        a[cnt].len=1;  \n        a[cnt].order=cnt;  \n        last=it->first;  \n    }  \n    sort(a+1,a+cnt+1,cmp);  \n    for(int i=1;i<=cnt;i++)   \n    {  \n        aa[a[i].order].v=i;  \n        aa[a[i].order].len=a[i].len;  \n    }  \n    for (int i=1;i<=cnt;i++)  \n    {  \n        sum[i]=sum[i-1]+aa[i].len;  \n    }  \n    memset(c,0,sizeof(c));  \n    long long ans=0;  \n    for(int i=1;i<=cnt;i++)  \n    {      \n        update(aa[i].v,aa[i].len);  \n        ans+=(sum[i]-getsum(aa[i].v))*a[i].len;  \n    }  \n    printf(\"%lld\\n\",ans);  \n}  \n\n```",
        "postTime": 1444615557,
        "uid": 9772,
        "name": "zeromaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2448 \u3010\u65e0\u5c3d\u7684\u751f\u547d\u3011"
    },
    {
        "content": "\u5f88\u5bb9\u6613\u770b\u51fa\u8fd9\u662f\u4e00\u9053\u9006\u5e8f\u5bf9\u7684\u9898\uff0c\u7136\u800c\u6570\u636e\u8303\u56f4\u5e76\u4e0d\u5141\u8bb8\u76f4\u63a5\u6811\u72b6\u6570\u7ec4\u6216\u8005\u5f52\u5e76\u6392\u5e8f\u3002\n\n\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u79bb\u6563\u5316\u3002\n\n\u5bf9\u4e8e\u5c0f\u4e8e\u6700\u5c0f\u503c\u6216\u8005\u5927\u4e8e\u6700\u5927\u503c\u7684\uff0c\u663e\u7136\u4e0d\u4f1a\u5bf9\u9006\u5e8f\u5bf9\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\u3002\n\n\u5bf9\u4e8e\u4e2d\u95f4\u7684\u6570\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u7136\u540e\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\n\nT.modify(a[n],1);\nfor1(i,n-1,1)\n{  \n    LL len=num[i+1]-num[i];  \n    ans+=((len-1)*T.query(i));  \n    T.modify(i,len);\n    ans+=T.query(a[i]-1); \n    T.modify(a[i],1);\n}\n```cpp",
        "postTime": 1443797682,
        "uid": 3090,
        "name": "Invoker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2448 \u3010\u65e0\u5c3d\u7684\u751f\u547d\u3011"
    }
]