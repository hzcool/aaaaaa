[
    {
        "content": "\u9996\u5148\uff0c\u4e00\u70b9\u57fa\u672c\u5e38\u8bc6\uff0c\u7ed9\u4f60\u4e00\u4e2a\u540e\u5e8f\u904d\u5386\uff0c\u90a3\u4e48\u6700\u540e\u4e00\u4e2a\u5c31\u662f\u6839\uff08\u5982ABCD\uff0c\u5219\u6839\u4e3aD\uff09\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u6c42\u5148\u5e8f\uff0c\u610f\u5473\u7740\u8981\u4e0d\u65ad\u627e\u6839\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6765\u770b\u8fd9\u9053\u9898\u65b9\u6cd5\uff1a\uff08\u793a\u4f8b\uff09\n\n\u4e2d\u5e8fACGDBHZKX\uff0c\u540e\u5e8fCDGAHXKZB\uff0c\u9996\u5148\u53ef\u627e\u5230\u4e3b\u6839B\uff1b\n\n\u90a3\u4e48\u6211\u4eec\u627e\u5230\u4e2d\u5e8f\u904d\u5386\u4e2d\u7684B\uff0c\u7531\u8fd9\u79cd\u904d\u5386\u7684\u6027\u8d28\uff0c\u53ef\u5c06\u4e2d\u5e8f\u904d\u5386\u5206\u4e3aACGD\u548cHZKX\u4e24\u68f5\u5b50\u6811\uff0c\n\n\u90a3\u4e48\u5bf9\u5e94\u53ef\u627e\u5230\u540e\u5e8f\u904d\u5386CDGA\u548cHXKZ\uff08\u4ece\u5934\u627e\u5373\u53ef\uff09\n\n\u4ece\u800c\u95ee\u9898\u5c31\u53d8\u6210\u6c421.\u4e2d\u5e8f\u904d\u5386ACGD\uff0c\u540e\u5e8f\u904d\u5386CDGA\u7684\u6811 2.\u4e2d\u5e8f\u904d\u5386HZKX\uff0c\u540e\u5e8f\u904d\u5386HXKZ\u7684\u6811\uff1b\n\n\u63a5\u7740\u9012\u5f52\uff0c\u6309\u7167\u539f\u5148\u65b9\u6cd5\uff0c\u627e\u52301.\u5b50\u6839A\uff0c\u518d\u5206\u4e3a\u4e24\u68f5\u5b50\u68112.\u5b50\u6839Z\uff0c\u518d\u5206\u4e3a\u4e24\u68f5\u5b50\u6811\u3002\n\n\u5c31\u6309\u8fd9\u6837\u4e00\u76f4\u505a\u4e0b\u53bb\uff08\u5148\u8f93\u51fa\u6839\uff0c\u518d\u9012\u5f52\uff09\uff1b\n\n\u6a21\u677f\u6982\u62ec\u4e3astep1:\u627e\u5230\u6839\u5e76\u8f93\u51fa\n\nstep2:\u5c06\u4e2d\u5e8f\uff0c\u540e\u5e8f\u5404\u5206\u4e3a\u5de6\u53f3\u4e24\u68f5\u5b50\u6811\uff1b\n\nstep3:\u9012\u5f52\uff0c\u91cd\u590dstep1,2\uff1b\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nvoid beford(string in,string after){\n    if (in.size()>0){\n        char ch=after[after.size()-1];\n        cout<<ch;//\u627e\u6839\u8f93\u51fa\n        int k=in.find(ch);\n        beford(in.substr(0,k),after.substr(0,k));\n        beford(in.substr(k+1),after.substr(k,in.size()-k-1));//\u9012\u5f52\u5de6\u53f3\u5b50\u6811\uff1b\n    }\n}\nint main(){\n    string inord,aftord;\n    cin>>inord;cin>>aftord;//\u8bfb\u5165\n    beford(inord,aftord);cout<<endl;\n    return 0;\n}\n```",
        "postTime": 1500882880,
        "uid": 21653,
        "name": "sunyufei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u6a21\u62df\u4e86\u597d\u4e45\uff0c\u7ec8\u4e8e\u627e\u51fa\u4e86\u5957\u8def\uff0c\u7528\u7684\u662fDFS\uff0c\u5176\u5b9e\u5c31\u662f\u9012\u5f52\uff1b\n\n\n\u6211\u8bf4\u4e00\u4e0b\u8fd9\u9898\u7684\u4e3b\u8981\u7684\u65b9\u6cd5\uff08\u8981\u70b9\uff09\uff0c\n\n1.\u540e\u5e8f\u904d\u5386\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4e00\u5b9a\u662f\u6839\u8282\u70b9\uff08\u5bf9\u4e8e\u6bcf\u4e00\u9897\u5b50\u6811\u4e5f\u6210\u7acb\uff09\uff1b\n\n2.\u65e2\u7136\u8fd9\u9898\u8981\u6c42\u5148\u5e8f\u904d\u5386\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u4e00\u6b21\u8f93\u51fa\u8bbf\u95ee\u7684\u7236\u8282\u70b9\u5373\u53ef\uff1b\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ea\u8981\u9012\u5f52\u5c06\u4e00\u68f5\u5927\u6811\u5206\u6210\u4e24\u9897\u5b50\u6811\uff0c\u8ba9\u540e\u627e\u4ed6\u4eec\u7684\u7236\u8282\u70b9\uff0c\u4e0d\u65ad\u9012\u5f52\u8f93\u51fa\uff1b\n\n3.\u90a3\u4e48\u96be\u70b9\u5c31\u5728\u8fd9\u4e86\uff0c\u5982\u4f55\u901a\u8fc7\u4e00\u4e2a\u4e2d\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u4e2d\u627e\u51fa\u4e24\u6bb5\u5b50\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217\uff08\u540e\u5e8f\uff0c\u56e0\u4e3a\u53ea\u6709\u540e\u5e8f\u6211\u4eec\u624d\u65b9\u4fbf\u627e\u5230\u7236\u8282\u70b9\uff09\u5462\uff1f\n\n\n\u81ea\u5df1\u53ef\u4ee5\u62ff\u51e0\u4e2a\u6837\u4f8b\u505a\u4e00\u505a\uff0c\u8010\u6027\u70b9\u5c31\u4f1a\u53d1\u73b0\u5b83\u7684\u5957\u8def\uff0c\u6211\u8fd9\u91cc\u7b80\u5355\u8bf4\u4e00\u4e0b\uff1a\n\n\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u5230\u5f53\u524d\u7236\u8282\u70b9\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u6c42\u51fa\u4ed6\u7684\u5de6\u5b50\u6811\u8282\u70b9\u6570\u548c\u53f3\u5b50\u6811\u8282\u70b9\u6570\uff0c\u56e0\u4e3a\u4e2d\u5e8f\u904d\u5386\u8bbf\u95ee\u7684\u987a\u5e8f\u662f\u5de6\u5b50\u6811\uff0c\u7236\u8282\u70b9\uff0c\u53f3\u5b50\u6811\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa\uff1b\n\n\n\u7136\u540e\uff0c\u7531\u4e8e\u6211\u4eec\u5bf9\u7ed3\u70b9\u7684\u8bbf\u95ee\u4e00\u5b9a\u662f\u5148\u8bbf\u95ee\u4e00\u9897\u5b50\u6811\uff0c\u5728\u8bbf\u95ee\u53e6\u4e00\u9897\uff0c\u6240\u4ee5\u5728\u6211\u4eec\u7684\u539f\u540e\u5e8f\u904d\u5386\u4e32\u53f3\u8fb9\u754c\u4e2d\u51cf\u6389\u53f3\u5b50\u6811\u8282\u70b9\u4e2a\u6570\u518d\u51cf\u4e00\u5373\u4e3a\u65b0\u7684\u5de6\u5b50\u6811\u53f3\u8fb9\u754c\uff0c\u5728\u539f\u540e\u5e8f\u904d\u5386\u4e32\u5de6\u8fb9\u754c\u52a0\u4e0a\u5de6\u5b50\u6811\u8282\u70b9\u4e2a\u6570\u5373\u4e3a\u65b0\u7684\u53f3\u5b50\u6811\u5de6\u8fb9\u754c\uff1b\n\n\n\u5f53\u7136\u53f3\u5b50\u6811\u53f3\u8fb9\u754c\u548c\u5de6\u5b50\u6811\u5de6\u8fb9\u754c\u8fd9\u4e2a\u975e\u5e38\u597d\u786e\u5b9a\uff0c\u5c31\u4e0d\u5728\u591a\u8bf4\uff0c\u81ea\u5df1\u770b\u4ee3\u7801\u5427\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nchar s1[10];\nchar s2[10];\nint len;\ninline int find(char ch)\n{\n    for(int i=0;i<len;i++)\n    {\n        if(s1[i]==ch) return i;\n    }\n}\nvoid dfs(int l1,int r1,int l2,int r2)\n{\n    int m=find(s2[r2]);\n    cout<<s2[r2];\n    if(m>l1) /*\u5177\u6709\u5de6\u5b50\u6811*/dfs(l1,m-1,l2,r2-r1+m-1);//r1-m\u4e3a\u53f3\u5b50\u6811\u7ed3\u70b9\u6570 \n    if(m<r1) /*\u5177\u6709\u53f3\u5b50\u6811*/dfs(m+1,r1,l2+m-l1,r2-1);//m-l1\u4e3a\u5de6\u5b50\u6811\u8282\u70b9\u6570\n}\nint main()\n{\n    cin>>s1;\n    cin>>s2;\n    len=strlen(s1);\n    dfs(0,len-1,0,len-1);\n}\n\n```",
        "postTime": 1500432560,
        "uid": 47803,
        "name": "NeosKnight",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u770b\u5230\u5f88\u591a\u4e2d\u89c4\u4e2d\u77e9\u7684\u9012\u5f52\u9898\u89e3\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u65b0\u601d\u8def\u2014\u2014**\u4e8c\u53c9\u641c\u7d22\u6811**\n\n### \u7b97\u6cd5\u80cc\u666f\n\n\n\u56e0\u4e3a\u5bf9\u4e8e\u4e8c\u53c9\u641c\u7d22\u6811\u5de6\u5c0f\u53f3\u5927\u7684\u539f\u5219\uff0c\u5176\u4e2d\u5e8f\u904d\u5386\u5373\u4e3a\u6811\u4e2d\u7684\u5143\u7d20\u7684\u5347\u5e8f\u6392\u5217\uff1b\u800c\u540e\u5e8f\u904d\u5386\u662f\u6309\u5148\u5de6\u5b50\u53f3\u5b50\u518d\u6839\u8282\u70b9\u7684\u987a\u5e8f\u8f93\u51fa\uff1b\n\n\u56e0\u6b64\n\u5bf9\u4e8e**\u4e8c\u53c9\u641c\u7d22\u6811**\u800c\u8a00\n\n\u5982\u679c\u6309\u7167\u5176\u540e\u5e8f\u904d\u5386\u7684**\u98a0\u5012**\u540e\u7684\u987a\u5e8f\u63d2\u5165\u5143\u7d20\uff0c\u5c31\u53ef\u4ee5**\u8fd8\u539f\u6574\u68f5\u6811**\uff01\n\n\u539f\u56e0\u662f\u5728\u5143\u7d20x\u88ab\u63d2\u5165\u4ee5\u524d\uff0cx\u7684\u7236\u8282\u70b9\u5df2\u7ecf\u63d2\u5165\u5728\u6811\u4e2d\uff08\u540e\u5e8f\u904d\u5386\u7684\u98a0\u5012\u540e\u7684\u987a\u5e8f\uff09\uff0c\u56e0\u6b64x\u4e00\u5b9a\u4f1a\u63d2\u5165\u5230\u539f\u6765\u7684\u6811\u4e2d\u7684\u4f4d\u7f6e\u4e0a\u3002\n\n\n### \u7b97\u6cd5\u63cf\u8ff0\n\n\n- \u5bf9\u4e8e\u4e2d\u5e8f\u904d\u5386\u7684\u5b57\u7b26\u4e32\u7684\u5b57\u6bcd\u4ece\u5c0f\u5230\u5927\u6807\u53f7\n\n- \u5229\u7528**\u540e\u5e8f\u904d\u5386\u7684\u98a0\u5012\u540e\u7684\u987a\u5e8f**\u628a\u6807\u53f7\u63d2\u5165\u5230\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\n\n- \u628a\u8fd9\u9897\u4e8c\u53c9\u641c\u7d22\u6811\u6309\u524d\u5e8f\u904d\u5386\uff0c\u8f93\u51fa\u6bcf\u4e2a\u7ed3\u70b9\u5b58\u50a8\u7684\u6807\u53f7\u5bf9\u5e94\u7684\u5b57\u6bcd\n\n\n### \u7b97\u6cd5\u6837\u4f8b\n\n\n- \u5bf9\u4e8e\u6837\u4f8b\u7684\u6570\u636e\n\nBADC\nBDCA\n- \u5bf9\u4e2d\u5e8f\u904d\u5386\u6807\u53f7\u5982\u4e0b\n\nBADC\n1234\n- \u56e0\u6b64\u540e\u5e8f\u904d\u5386\u5373\u4e3a\n\n1342\n- \u98a0\u5012\u540e\n\n2431\n- \u4e8e\u662f\u6309\u71672431\u7684\u987a\u5e8f\u63d2\u5165\u4e8c\u53c9\u6811\u5982\u4e0b\uff08\u5b9e\u5728\u753b\u4e0d\u4e86\u56fe\uff09\n\n2\uff1a\u5de6\u5b501\uff0c\u53f3\u5b504\n\n1\uff1a\u53f6\u8282\u70b9\n\n4\uff1a\u5de6\u5b503\uff0c\u53f3\u5b50NULL\n\n3\uff1a\u53f6\u8282\u70b9\n\n- \u56e0\u6b64\u524d\u5e8f\u904d\u5386\u4e3a\n\n2134\n- \u5bf9\u5e94\u5b57\u6bcd\n\nABCD\n\n### \u9898\u89e3\u4ee3\u7801\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n\nusing namespace std;\n\nchar pre[10];//\u540e\u5e8f\u904d\u5386\nchar mid[10];//\u524d\u5e8f\u904d\u5386\nint num[300];//\u5b57\u6bcd\u5bf9\u5e94\u7684\u6570\u5b57\nchar let[10];//\u6570\u5b57\u5bf9\u5e94\u7684\u5b57\u6bcd\n\nstruct node//\u7ed3\u70b9\n{\n    int key;\n    node * p=NULL;//\u7236\u8282\u70b9\n    node * left=NULL;//\u5de6\u5b50\n    node * right=NULL;//\u53f3\u5b50\n};\ntypedef struct node * bNode;//\u7ed3\u70b9\u6307\u9488\n\nbNode tree_insert(bNode tree_root,int nkey)//\u4e8c\u53c9\u641c\u7d22\u6811\u63d2\u5165\u51fd\u6570\n{\n    bNode z=new node,y=NULL,x=tree_root;\n    z->key=nkey;\n    while(x!=NULL)\n    {\n        y=x;\n        if(nkey<x->key)x=x->left;\n        else x=x->right;\n    }\n    z->p=y;\n    if(y==NULL)tree_root=z;\n    else if(nkey<y->key)y->left=z;\n    else y->right=z;\n    \n    return tree_root;\n}\n\nvoid tree_preorder(bNode k)//\u524d\u5e8f\u904d\u5386\u8f93\u51fa\n{\n    if(k==NULL)return;\n    cout<<let[k->key];//key\u5bf9\u5e94\u7684\u5b57\u6bcd\n    tree_preorder(k->left);\n    tree_preorder(k->right);\n}\n\nint main()\n{\n    bNode t1=NULL;\n    cin>>mid>>pre;\n    for(int i=0;mid[i]!='\\0';i++)//\u5efa\u7acb\u5b57\u6bcd\u4e0e\u6807\u53f7\u7684\u53cc\u5411\u8054\u7cfb\n    {\n        num[mid[i]]=i;\n        let[i]=mid[i];\n    }\n    for(int i=strlen(pre)-1;i>=0;i--)//\u6309\u98a0\u5012\u987a\u5e8f\u63d2\u5165\n    {\n        t1=tree_insert(t1,num[pre[i]]);\n    }\n    tree_preorder(t1);\n    return 0;\n}\n```",
        "postTime": 1515242818,
        "uid": 42196,
        "name": "sshwy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1030 \u4e4b\u4e8c\u53c9\u641c\u7d22\u6811"
    },
    {
        "content": "```cpp\n//\u4ee3\u7801\u5f88\u77ed \u5f88\u5bb9\u6613\u7406\u89e3\n//\u540e\u5e8f\u7684\u6700\u540e\u4e00\u4e2a\u662f\u6839\n//\u5148\u5e8f\u662f\u5148\u8f93\u51fa\u6570\u7684\u6839 \u90a3\u5c31\u627e\u4e00\u6b21\u8f93\u51fa\u4e00\u6b21\n//\u7136\u540e\u7ee7\u7eed\u627e\u51fa\u5de6\u6811\u548c\u53f3\u6811\n//\u4e4b\u9053\u7a7a\u6811\u65f6\u505c\u6b62 \n//P1030 luogu\n//DinnerHunt\n//P1030 luogu\n//DinnerHunt\n#include <iostream>\nusing namespace std;\nstring in_str,post_str;\nvoid build(int l1,int r1,int l2,int r2)        //\u5f53\u524d\u6811\u7684\u5728\u4e2d\u5e8f\u904d\u5730\u7684\u8303\u56f4 l1-r1  \u5728\u540e\u5e8f\u904d\u5730\u7684\u8303\u56f4 l2-r2\n{\n    if(l1>r1) return;                        //\u5f53\u524d\u4e3a\u7a7a\u6811 \u5219\u76f4\u63a5\u8fd4\u56de\n    cout << post_str[r2];                    //\u540e\u5e8f\u904d\u5730\u7684\u6700\u540e\u4e00\u4e2a\u4e00\u5b9a\u662f\u8282\u70b9\u7684\u6839\uff0c\u8f93\u51fa\u6839\u7684\u503c\n    int p = l1;                                \n    while(in_str[p] != post_str[r2]) p++;    //\u4ece\u4e2d\u5e8f\u904d\u5730\u4e2d\u627e\u51fa\u5de6\u6811\u7684\u8303\u56f4\n    int cnt = p-l1;                            //\u5de6\u6811\u8282\u70b9\u6709\u591a\u5c11\u4e2a\n    build(l1,p-1,l2,l2+cnt-1);                //\u9012\u5f52\u904d\u5730\u5de6\u6811 \u4e2d\u5e8f\uff08\u4ecel1\u5f00\u59cb\u7684p-1\u4e2a\uff0c\u56e0\u4e3a\u5f53\u524d\u8282\u70b9\u4e0d\u7b97\u5de6\u6811\u90e8\u5206\uff09 \u540e\u5e8f\uff08\u4e0e\u5de6\u6811\u7c7b\u4f3c\uff0c\u4f46\u53f3\u8fb9\u90e8\u5206\u4e0d\u80fd\u7528p-1\uff0c\u81ea\u5df1\u601d\u8003\u4e0b\u4e3a\u4ec0\u4e48\uff09\n    build(p+1,r1,l2+cnt,r2-1);                //\u9012\u5f52\u904d\u5730\u53f3\u6811 \u4e2d\u5e8f\uff08\u4ecep+1\u5f00\u59cb\uff0c\u521a\u597d\u63a5\u4e0a\u5de6\u6811\u90e8\u5206\u5230\u672b\u5c3e\uff09 \u540e\u5e8f\uff08\u521a\u597d\u63a5\u4e0a\u540e\u5e8f\u7684\u5de6\u6811\u90e8\u5206\uff0c\u56e0\u4e3a\u6839\u5728\u7ed3\u5c3e\u6240\u4ee5\u4e2d\u95f4\u4e0d\u5fc5\u51cf1\uff0c\u6700\u540e\u51cf1\uff09\n}\nint main(){\n    ios::sync_with_stdio(false);            //\u52a0\u901f\n    cin  >> in_str >> post_str;                //\u4e2d\u5e8f\u548c\u540e\u5e8f\n    int n=in_str.length()-1;                //\u957f\u5ea6\n    build(0,n,0,n);                            \n}\n```",
        "postTime": 1508330776,
        "uid": 62401,
        "name": "DinnerHunt",
        "ccfLevel": 0,
        "title": "P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u770b\u5230\u8c8c\u4f3c\u6ca1\u6709\u8fd9\u79cd\u505a\u6cd5\uff0c\u849f\u84bb\u6765\u53d1\u4e00\u7bc7\u3002\u3002\u3002\n>\u524d\u5e8f\u904d\u5386\u7684\u89c4\u5219\uff1a\n\n>\uff081\uff09\u8bbf\u95ee\u6839\u8282\u70b9\n\n>\uff082\uff09\u524d\u5e8f\u904d\u5386\u5de6\u5b50\u6811\n\n>\uff083\uff09\u524d\u5e8f\u904d\u5386\u53f3\u5b50\u6811\n\n>\u4e2d\u5e8f\u904d\u5386\u7684\u89c4\u5219\uff1a\n\n>\uff081\uff09\u4e2d\u5e8f\u904d\u5386\u5de6\u5b50\u6811\n\n>\uff082\uff09\u8bbf\u95ee\u6839\u8282\u70b9\n\n>\uff083\uff09\u4e2d\u5e8f\u904d\u5386\u53f3\u5b50\u6811\n\n>\u540e\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\u7684\u89c4\u5219\uff1a\n\n>\uff081\uff09\u540e\u5e8f\u904d\u5386\u5de6\u5b50\u6811\n\n>\uff082\uff09\u540e\u5e8f\u904d\u5386\u53f3\u5b50\u6811\n\n>\uff083\uff09\u8bbf\u95ee\u6839\u8282\u70b9\n\n\u505a\u7684\u65f6\u5019\u4e71\u641e\u4e00\u901a\uff0c\u610f\u5916\u53d1\u73b0\u4e86\u4e0d\u77e5\u9053~~\u7b97\u4e0d\u7b97\u4e00\u4e2a\u89c4\u5f8b\u7684~~\u89c4\u5f8b\n\n\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u56fe\n(\u4fe1\u7b14\u6d82\u9e26\u4e4b\u4f5c\u3002\u3002\u3002)\n\n![avatar](https://i.loli.net/2018/11/24/5bf8b6cb8e5b1.png)\n\n\u524d\u5e8f\uff1a1\uff0c2\uff0c4\uff0c5\uff0c3\n\n\u4e2d\u5e8f\uff1a4\uff0c2\uff0c5\uff0c1\uff0c3\n\n\u540e\u5e8f\uff1a4\uff0c5\uff0c2\uff0c3\uff0c1\n\n### \u524d\u5e8f+\u4e2d\u5e8f\n\n#### \u8fd9\u4e2a\u7b80\u5355\uff0c\u524d\u5e8f\u4e2d1\uff08\u6839\u8282\u70b9\uff09\u540e\u4fbf\u662f2\uff081\u7684\u5de6\u5b50\u6811\u6839\u8282\u70b9\uff09\uff0c2\u540e\u4fbf\u662f4\uff082\u7684\u53f3\u5b50\u6811\u6839\u8282\u70b9\uff09\uff0c\u518d\u5229\u7528\u4e2d\u5e8f\u4e2d\u6839\u8282\u70b9\u4f4d\u7f6e\u5206\u79bb\u5de6\u53f3\u5b50\u6811\u5373\u53ef\n```\nvoid dfs(int x,int l,int r)\n{\tif(l>r)return; \n\tint mark;\n\tif(l==r)\n{\t\tans[++tot]=b[l];\n\t\treturn;\n}\n\tfor(int i=l;i<=r;i++)\n\tif(b[i]==a[x])\n{\t\tmark=i;\n\t\tbreak;\n}\n\tdfs(x+1,l,mark-1);\n\tdfs(x+mark+1,mark+1,r);\n\tans[++tot]=b[mark];\n}\n```\n\n### \u4e2d\u5e8f+\u540e\u5e8f\n\n### \u8bf7\u4ed4\u7ec6\u89c2\u5bdf\uff0c1\uff08\u6839\u8282\u70b9\uff09\u5728\u4e2d\u5e8f\u4e2d\u7684\u5de6\u8fb9\uff08\u5373\u5176\u7684\u5de6\u5b50\u6811\uff09\u7684\u6700\u53f3\u7684\u4f4d\u7f6e\uff0c\u5bf9\u5e94\u7740\u540e\u5e8f\u4e2d\u5176\u5de6\u5b50\u6811\u76842\uff08\u5373\u5176\u5de6\u5b50\u6811\u7684\u6839\u8282\u70b9\uff09\uff0c\u53f3\u8fb9\uff08\u5373\u5176\u7684\u53f3\u5b50\u6811\uff09\u7684\u6700\u53f3\u7684\u4f4d\u7f6e\u5f53\u7136\u5c31\u662f\u5b83\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a\u9012\u5f52\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n```\nvoid dfs(int x,int l,int r)\n{\tif(l>r)return;\n\tif(l==r)\n{\t\tans[++tot]=b[l];\n\t\treturn;\n}\n\tint mark=inf;\n\tfor(int i=l;i<=r;i++)\n\tif(b[i]==a[x])\n{\t\tmark=i;\n\t\tbreak;\n}\n\tans[++tot]=b[mark];\n\tdfs(mark-1,l,mark-1);\n\tdfs(x-1,mark+1,r);\n}\n```\n\n\n\u6211\u5f53\u7136\u4e5f\u5c31\u8fd9\u4e48\u60f3\u554a\uff0c\u5199\u5b8c\u7f8e\u6ecb\u6ecb\u4ea4\u5566\uff0c\u7136\u540e\u3002\u3002\u3002\n\n![avatar](https://i.loli.net/2018/11/24/5bf8c13627340.png)\n\n### \uff1f\uff1f\uff1f\uff1f\uff01\n\u6211\u505a\u9519\u4e86\u4ec0\u4e48\u4f60\u8981\u8fd9\u6837\u5bf9\u6211\uff1f\uff1f\uff1f\uff1f\n\n\n\n\u75db\u5b9a\u601d\u75db\uff0c \u6211\u7528\u5229\u7528\u4fbf\u6377\u7684\u4e92\u8054\u7f51\u627e\u5230\u4e86\u8fd9\u6837\u4e00\u79cd\u8be1\u5f02\u6570\u636e\n\n![avatar](https://i.loli.net/2018/11/24/5bf8f2077175d.png)\n![avatar](https://i.loli.net/2018/11/24/5bf8f22fa94ae.png)\n\n\uff08\u8f6c\u8f7d\u81f3[\u6797\u3001Zephyr](https://www.cnblogs.com/GNLin0820/p/6533681.html)\uff09\n\n\u4e0d\u77e5\u9053\u5927\u5bb6\u770b\u51fa\u6765\u6ca1\u6709\uff0c\u6309\u7167\u521a\u521a\u7684\u601d\u8def\u5199\u7684\u8bdd\uff0c\u4f1a\u6b7b\u5faa\u73af\u3002\u3002\u3002\n\n\u95ee\u9898\u51fa\u57286\u7684\u4f4d\u7f6e\u4e0a\uff0c\u5982\u679c\u653e\u4efb\u81ea\u6d41\uff0c\u5c31\u4f1a\n![avatar](https://i.loli.net/2018/11/24/5bf8cc673e0d3.png)\n\u539f\u6765\u662f\u56e0\u4e3a\u4e2d\u5e8f\u4e2d\u76846\u548c\u540e\u5e8f\u76846\u521a\u521a\u597d\u9519\u5f00\u4e00\u4f4d\uff0c\u7528mark-1\u5c31\u4f1a\u53c8\u9000\u56de\u52306\uff0c\u6240\u4ee5\u6b64\u65f6\u5e94\u6709\u4e00\u4e2a\u7279\u5224\u3002\u3002\u3002\u3002\u3002\n```\n\tif(mark!=s-1)\n{\t\tdfs(mark-1,l,mark-1);\n\t\tdfs(x-1,mark+1,r);\n}\n\telse \n\tdfs(x-1,l,r);\n}\n```\n\n\n\u4e0b\u9762\u653e\u4e0a\u4e11\u4ee3\u7801\n\n```\n/*\nid:Dear_Prince\n*/\n#include<bits/stdc++.h>\n#define inf 2147483647\nusing namespace std;\nconst int maxn=255;\nchar a[maxn],b[maxn],ans[maxn];\nint s,tot;\nvoid input()\n{\tfreopen(\"input.txt\",\"r\",stdin);\n\t//freopen(\"output.txt\",\"w\",stdout);\n}\nvoid dfs(int x,int l,int r)\n{\tif(l>r||x<0)return;\n\tif(l==r)\n{\t\tans[++tot]=b[l];//\u5230\u4e86\u53f6\u8282\u70b9\u5c31\u4ee3\u8868\u8fd9\u9897\u5de6\uff08\u53f3\uff09\u5b50\u6811\u5df2\u7ecf\u904d\u5386\u5b8c\u4e86\n\t\treturn;\n}\n\tint mark=inf;//\u7528\u4ee5\u6807\u8bb0\u5728\u8fd9\u4e2a\u533a\u95f4\u662f\u5426\u627e\u5230\u6839\uff0c\u4ee5\u53ca\u6839\u7684\u4f4d\u7f6e\n\tfor(int i=l;i<=r;i++)\n\tif(b[i]==a[x])\n{\t\tmark=i;\n\t\tbreak;\n}\n\tif(mark!=inf)\n{\t\tans[++tot]=b[mark];//\u627e\u5230\u5c31\u5b58\n\tif(mark!=s-1)//\u7279\u5224\u4e00\u4e0b\n{\t\tdfs(mark-1,l,mark-1);\n\t\tdfs(x-1,mark+1,r);\n}\n\telse \n\tdfs(x-1,l,r);\n}\n}\nint main()\n{\tinput();\n\tscanf(\"%s\",b);\n\tscanf(\"%s\",a);//\u8bfb\u5165\u5b57\u7b26\u4e32\u4e0d\u7528\u89e3\u91ca\u4e86\u5427\uff0c\u6ce8\u610f\u4e0d\u8981\u52a0&\n\ts=strlen(a);\n\tdfs(s-1,0,s-1);//\u8fd9\u91cc\u53ea\u4f20\u90123\u4e2a\u53d8\u91cf\uff0c\u540e\u5e8f\u4e2d\u7684\u6839\u8282\u70b9\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7740\u7684\u4e2d\u5e8f\u4e2d\u5de6\u53f3\u5b50\u6811\u7684\u8303\u56f4l\uff0cr\n\tfor(int i=1;i<=s;i++)\n\tprintf(\"%c\",ans[i]);\n\treturn 0;\n}\n```\n\n\n#### \u5b8c\u7ed3\uff01\n\n",
        "postTime": 1543029859,
        "uid": 109379,
        "name": "Dear_Prince",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u6211\u4eec\u6709\u4e2d\u5e8f\u6392\u5217\uff08\u5de6-\u4e2d-\u53f3\uff09\u548c\u540e\u5e8f\u6392\u5217\uff08\u5de6-\u53f3-\u4e2d\uff09\uff0c\u6c42\u7684\u662f\u524d\u5e8f\u6392\u5217\uff08\u4e2d-\u5de6-\u53f3\uff09\u3002\n\n\u9996\u5148\u8981\u77e5\u9053\u7684\u662f\uff0c\u6709\u524d\u5e8f\uff08\u540e\u5e8f\uff09\u548c\u4e2d\u5e8f\u53ef\u4ee5\u6c42\u540e\u5e8f\uff08\u524d\u5e8f\uff09\uff0c\u4f46\u662f\u53ea\u6709\u524d\u5e8f\u548c\u540e\u5e8f\u662f\u4e0d\u80fd\u6c42\u5f97\u4e2d\u5e8f\u7684\uff0c\u8bc1\u660e\u4ece\u7565\u3002\n\n\u540e\u5e8f\u904d\u5386\u7684\u7279\u5f81\u662f\u4ec0\u4e48\u5462\uff1f\u6839\u8282\u70b9\u603b\u662f\u5728\u6700\u540e\u88ab\u8bbf\u95ee\u5230\u3002\n\n\u90a3\u4e2d\u5e8f\u904d\u5386\u7684\u7279\u5f81\u53c8\u662f\u4ec0\u4e48\u5462\uff1f\u6839\u8282\u70b9\u7684\u5de6\u53f3\u4e24\u4fa7\u7684\u70b9\u6070\u662f\u5b83\u7684\u5de6\u53f3\u5b50\u6811\u3002\n\n\u6211\u4eec\u62ff\u4e00\u68f5\u6811\u6765\u4e3e\u4f8b\u5b50\uff1a\n\n ![](https://cdn.luogu.com.cn/upload/pic/2646.png) \n\n\u9996\u5148\u8fd9\u68f5\u6811\u7684\u6839\u662fA\uff08\u540e\u5e8f\u6392\u5217\u7684\u6700\u540e\u4e00\u4e2a\uff09\uff0c\u8f93\u51faA\uff1b\n\n\u7136\u540e\u5728\u4e2d\u5e8f\u6392\u5217\u4e2d\u627e\u5230A\u7684\u4f4d\u7f6e\uff0c\u53d1\u73b0\u5b83\u5de6\u53f3\u5404\u6709\u4e09\u4e2a\u70b9\uff0c\u5206\u522b\u662f\u5b83\u7684\u5de6\u53f3\u5b50\u6811\uff1b\n\n\u628a\u4e2d\u5e8f\u6392\u5217\u5de6\u8fb9\u4e09\u4e2a\u70b9\u548c\u540e\u5e8f\u6392\u5217\u7684\u524d\u4e09\u4e2a\u70b9\u4f5c\u4e3a\u5de6\u5b50\u6811\u53bbdfs\uff0c\u56e0\u4e3a\u5148\u5e8f\u6392\u5217\u662f\u4e2d-\u5de6-\u53f3\uff0c\u6240\u4ee5\u5148\u8d70\u5de6\u8fb9\uff1b\n\n> [L]\u4f20\u5165\u7684\u4e2d\u5e8f\u662fDEB\uff0c\u540e\u5e8f\u662fEDB - \u8f93\u51faB\uff0cDE\u662f\u5de6\u5b50\u6811\uff0c\u540c\u6837\u64cd\u4f5c\uff1b\n>> [L]\u4f20\u5165\u7684\u4e2d\u5e8f\u662fDE\uff0c\u540e\u5e8f\u662fED  - \u8f93\u51faD\uff0cE\u662f\u53f3\u5b50\u6811\uff0c\u540c\u6837\u64cd\u4f5c\uff1b\n>>> [R]\u4f20\u5165\u7684\u4e2d\u5e8f\u662fE\uff0c\u540e\u5e8f\u662fE - \u8f93\u51faE\uff1b\n> [R]\u4f20\u5165\u7684\u4e2d\u5e8f\u662fFCG\uff0c\u540e\u5e8f\u662fFGC - \u8f93\u51faC\uff0cF\u662f\u5de6\u5b50\u6811\uff0c\u540c\u6837\u64cd\u4f5c\uff0cG\u662f\u53f3\u5b50\u6811\uff0c\u540c\u6837\u64cd\u4f5c\uff1b\n>> [L] \u4f20\u5165\u7684\u4e2d\u5e8f\u662fF\uff0c\u540e\u5e8f\u662fF - \u8f93\u51faF\uff1b\n>> [R] \u4f20\u5165\u7684\u4e2d\u5e8f\u662fG\uff0c\u540e\u5e8f\u662fG - \u8f93\u51faG\uff1b\n\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u6c42\u5148\u5e8f\u904d\u5386\u7684\u8fc7\u7a0b\u3002\uff08\u4e0a\u9762\u7565\u53bb\u4e86L/R\u5b50\u6811\u4e3a\u7a7a\u7684\u573a\u5408\u3002\n\n\n\u7136\u540e\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u7b80\u5355\u5730\u901a\u8fc7DFS\u6765\u5b8c\u6210\u8fd9\u9053\u9898\u4e86\uff0c\u56e0\u4e3a\u6c42\u7684\u662f\u5148\u5e8f\u904d\u5386\uff0c\u6240\u4ee5\u6bcf\u6b21\u76f4\u63a5\u8f93\u51fa\u540e\u5e8f\u6392\u5217\u7684\u6700\u540e\u4e00\u4e2a\u70b9\u5373\u53ef\u3002\u6ca1\u6709\u5fc5\u8981\u53bb\u4fdd\u5b58\u5b83\u3002\n\n\u5728\u7a0b\u5e8f\u4e2d\u6211\u6ca1\u6709\u5224\u65ad\u5b83\u6709\u6ca1\u6709\u5b50\u6811\u800c\u662f\u76f4\u63a5dfs\u4e86\u4e0b\u53bb\uff08\u4e3a\u56fe\u65b9\u4fbf\uff09\u3002\u56e0\u6b64\uff0c\u5728dfs\u51fd\u6570\u7684\u5f00\u59cb\u8981\u5224\u65ad\u4f20\u5165\u7684\u5b57\u7b26\u4e32\u662f\u5426\u5927\u4e8e0\u3002\n\n\u53e6\u5916\uff0c\u4e4b\u524d\u6709\u4eba\u7528\u4e86\u5b50\u4e32\uff0c\u4f46\u4e5f\u6ca1\u6709\u5fc5\u8981\uff0c\u56e0\u4e3a\u53ea\u8bbf\u95ee\u800c\u4e0d\u4fee\u6539\uff0c\u53ea\u8981\u4f20\u7ed9\u51fd\u6570\u4e24\u4e2a\u4e32\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u4e0b\u6807\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u5199\u8d77\u6765\u5f88\u7b80\u5355\u3002\n\n\u53ef\u4ee5\u81ea\u5df1\u601d\u8003\u4e00\u4e0bdfs\u4e2d\u4f20\u5165\u7684\u56db\u4e2a\u53c2\u6570\u4e3a\u4ec0\u4e48\u662f\u90a3\u6837\u3002\n\n\n[codec]\n\n/\\* P1030\n\n\\* Au: SJoshua\n\n\\*/\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\nchar mid[20], aft[20];\nvoid dfs(int ml, int mr, int al, int ar) {\n    if (ml > mr || al > ar) {\n        return;\n    }\n    printf(\"%c\", aft[ar]);\n    for (int k = ml; k <= mr; k++) {\n        if (mid[k] == aft[ar]) {\n            dfs(ml, k-1, al, al+k-ml-1);\n            dfs(k+1, mr, al+k-ml, ar-1);\n            break; \n        }\n    }\n}\nint main(void) {\n    scanf(\"%s\", mid);\n    scanf(\"%s\", aft);\n    int len = strlen(mid) - 1;\n    dfs(0, len, 0, len);\n    return 0;    \n}\n[/codec]\n```",
        "postTime": 1473423499,
        "uid": 790,
        "name": "\u7ea6\u4fee\u4e9a_RK",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9898\u672c\u849f\u84bb\u7684AC\u8def\u7a0b\u4e5f\u662f\u5f88\u6ce2\u6298\uff0c\u5b9e\u5728\u505a\u4e0d\u4e0b\u53bb\u4e86\uff0c\u6765\u770b\u770b\u9898\u89e3\uff0c\u7136\u540e\u4e00\u8138\u61f5\u903c\u770b\u4e0d\u61c2\uff0c\u540e\u6765\u81ea\u5df1\u597d\u4e0d\u5bb9\u6613\u624d\u5199\u51fa\u6765\u7684  \n\u4e3b\u8981\u601d\u8def\u8fd8\u662f\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u9012\u5f52\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a  \n1. \u8f93\u51fa\u8be5\u90e8\u5206\u540e\u5e8f\u904d\u5386\u6700\u540e\u4e00\u9879\uff08\u540e\u5e8f\u904d\u5386\u662f\u5de6\u53f3\u6839\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u9879\u662f\u6839\uff09\n2. \u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u5230\u4ed6\n3. \u5206\u6210\u5de6\u53f3\u4e24\u90e8\u5206\n4. \u5224\u65ad\u662f\u5426\u4e3a\u7a7a\n5. \u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u56de\u5230\u7b2c1\u6b65\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5728\u4e2d\u5e8f\u548c\u540e\u5e8f\u4e2d\u7684\u4f4d\u7f6e\u5bf9\u4e0d\u597d\uff0c\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u5f53\u8f93\u51faA\u548cB\u4e4b\u540e\uff0c\u4e2d\u5e8f\u7684DC\u4f4d\u4e8e2\u30013\u7684\u4f4d\u7f6e\uff08\u4f4d\u7f6e\u75280--3\u8868\u793a\uff09\uff0c\u800c\u540e\u5e8f\u57281\u30012\u4f4d\u7f6e\uff0c\u8fd9\u600e\u4e48\u529e\u5462\uff1f  \n\u5176\u5b9e\uff0c\u901a\u8fc7\u89c2\u5bdf\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6bcf\u88ab\u5212\u5206\u4e3a\u53f3\u534a\u90e8\u5206\u4e00\u6b21\uff0c\u4e2d\u5e8f\u548c\u540e\u5e8f\u7684\u4f4d\u7f6e\u5c31\u4f1a\u9519\u5f001\u3002\u8fd8\u662f\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0cDC\u5728\u6709\u4e14\u4ec5\u6709\u7b2c\u4e00\u6b21\u5212\u5206\u662f\u88ab\u5206\u5230\u53f3\u8fb9\uff0c\u6240\u4ee5\u4e2d\u5e8f\u548c\u540e\u5e8f\u7684\u4f4d\u7f6e\u4f1a\u9519\u5f001\u4e2a\u70b9\u3002\n\u90a3\u4e48\uff0c\u4e86\u89e3\u4e86\u8fd9\u70b9\u4ee5\u540e\uff0c\u5c31\u4e0d\u4f1a\u6709\u4ec0\u4e48\u5927\u95ee\u9898\u4e86  \n**\u4ee3\u7801\uff1a**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring s2,s3;\nvoid dg(int l,int r,int s)//l\u548cr\u5206\u522b\u662f\u5de6\u53f3\u8fb9\u754c\uff0c\u4ee5\u4e2d\u5e8f\u4e3a\u51c6\uff0cs\u662f\u88ab\u5212\u5206\u4e3a\u53f3\u534a\u90e8\u5206\u7684\u6b21\u6570\n{\n    cout<<s3[r-s];//\u7531\u4e8e\u4f1a\u9519\u5f00s\uff0c\u6240\u4ee5\u4f4d\u7f6e\u8981\u51cfs\n    for(int i=l;i<=r;i++)\n     if(s2[i]==s3[r-s])//\u627e\u5230\u8f93\u51fa\u7684\u70b9\n     {\n         if(i!=l) dg(l,i-1,s);//\u5982\u679c\u662fl\uff0c\u90a3\u4e48\u5de6\u8fb9\u5c31\u4e0d\u4f1a\u6709\u8282\u70b9\u4e86\uff0c\u5c31\u4e0d\u7528\u505a\u4e86\uff0c\u4e0b\u9762\u540c\u7406\n         if(i!=r) dg(i+1,r,s+1);\n     }\n    return ;\n}\nint main()\n{\n    cin>>s2>>s3;\n    int l=s2.length();\n    dg(0,l-1,0);\n    return 0;\n}\n```\n## [\u5b8c\u7f8e\u6492\u82b1](https://www.luogu.org/blog/yhdhg1395754790/)",
        "postTime": 1562763045,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "```cpp\n//\u8fd9\u9898\u540e\u5e8f\u6392\u5217\u6700\u540e\u4e00\u4e2a\u4e00\u5b9a\u662f\u6839\n//\u4ece\u4e2d\u5e8f\u6392\u5217\u4e2d\u627e\u51fa\u6839\uff0c\u524d\u534a\u6bb5\u662f\u4e00\u9897\u5b50\u6811\uff08\u5de6\uff09\uff0c\u540e\u534a\u6bb5\u662f\u4e00\u9897\u5b50\u6811\uff08\u53f3\uff09 \n//\u540e\u5e8f\u6392\u5217\u4e2d\u6700\u540e\u4e00\u4e2a\u80fd\u627e\u5230\u7684\u5b50\u6811\u4e2d\u6709\u7684\u5b57\u6bcd\u662f\u5b50\u6811\u7684\u6839\uff08\u4e5f\u6709\u53ef\u80fd\u662f\u6574\u68f5\u6570\uff09 \n//\u597d\u4e86\uff0c\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u6839\u636e\u524d\u4e09\u53e5\u53ef\u4ee5\u5199\u7a0b\u5e8f\u4e86 \n#include<cstdio>//\u7a0b\u5e8f\u5f00\u59cb\uff01 \n#include<cstring>\nusing namespace std;\nchar a[100]/*\u5b58\u4e2d\u5e8f*/,b[100]/*\u5b58\u540e\u5e8f*/;\nvoid tree(int d,int e)//\u9012\u5f52\u51fd\u6570 \n{\n    int i,f,c,j;\n    c=0;//c\u5f52\u96f6\uff08\u4e3a\u4ec0\u4e48\u4f60\u4e00\u4f1a\u513f\u5c31\u77e5\u9053\u4e86\uff09 \n    if(d>e) return;//\u67e5\u627e\u8303\u56f4\u4e3ad-e\uff08\u4e00\u9897\u6811\uff09\uff0c\u8303\u56f4\u4e2d\u6ca1\u4e1c\u897f\u4e86\uff0c\u7ed3\u675f \n    for(j=strlen(a)-1;j>=0;j--)//\u5012\u7740\u627e\uff0c\u4ee5\u4fbf\u627e\u51fa\u6700\u540e\u4e00\u4e2a \n    {\n        for(i=d;i<=e;i++)//\uff01\uff01\uff01\u6574\u68f5\u6811\u90fd\u8981\u627e\uff01\uff01\uff01 \n        {\n            if(a[i]==b[j])//\u627e\u5230\u4e86\uff0c\u8bb0\u5f55\uff0c\u7ed3\u675f\u67e5\u627e \n            {\n                c=i;\n                break;\n            }\n        }\n        if(c) break;//c\u6709\u53d8\u52a8\uff0c\u9000\u51fa\u5faa\u73af\uff08\u6ca1\u53d8\u52a8\u8bf4\u660e\u6ca1\u627e\u5230\u6216\u8005\u6700\u540e\u624d\u627e\u5230\uff09 \n    }\n    printf(\"%c\",a[c]);//\u8f93\u51fa\u6839\n    tree(d,c-1);//\u5de6\u5b50\u6811\u5148\n    tree(c+1,e);\n}\nint main()\n{\n    int i,c;\n    scanf(\"%s%*c%s\",a,b);//\u8f93\u5165\uff08%*c\u662f\u4e3a\u4e86\u4e0d\u8bb0\u5f55\u6362\u884c\uff09 \n    tree(0,strlen(a)-1);//\u8c03\u7528\u51fd\u6570 \n}\n```",
        "postTime": 1504317890,
        "uid": 48978,
        "name": "bh1234666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "~~\u849f\u84bb\u9898\u89e3\uff0cdalao\u8f7b\u55b7~~\n# \u6574\u4f53\u601d\u8def\n\u4f7f\u7528\u4e2d\u5e8f\u548c\u540e\u5e8f\u6784\u9020\u6811\uff08\u6307\u9488\u65b9\u6cd5\uff09\uff0c\u4f7f\u7528\u524d\u5e8f\u904d\u5386\uff0c\u50a8\u5b58\u5728\u6570\u7ec4\u91cc\u3002\n# \u5177\u4f53\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u65b9\u6cd5~~\u597d\u5427\u534a\u5177\u4f53~~\n\u5148\u6765\u770b\u6837\u4f8b\uff1a\n\n\u8f93\u5165\uff1a\n```\nBADC\nBDCA\n```\n\u4f7f\u7528\u5b57\u7b26\u4e32\u5b58\u50a8\u5373\u53ef\u3002\n\n\u600e\u4e48\u6784\u9020\u5462\uff1f\u9996\u5148\uff0c\u5047\u8bbe\u5927\u5bb6\u90fd\u77e5\u9053\u524d\u5e8f\u3001\u4e2d\u5e8f\u548c\u540e\u5e8f\u4ee3\u8868\u4ec0\u4e48~~\u4f5c\u8005\u61d2\u5f97BB~~\uff0c\u7531\u6b64\u53ef\u77e5\u540e\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u9879\u5373\u4e3a\u6839\uff0c\u5728\u6837\u4f8b\u4e2d\u662f\u201cA\u201d\uff0c\u5728\u4e2d\u5e8f\u4e2d\u5bfb\u627e\u201cA\u201d\uff0c\u5c06\u201cA\u201d\u5de6\u8fb9\uff08\u5373\u201cB\u201d\uff09\u8bbe\u4e3a\u5de6\u5b50\u6811\uff0c\u53f3\u8fb9\uff08\u5373\u201cDC\u201d\uff09\u8bbe\u4e3a\u53f3\u5b50\u6811\uff0c\u5e76\u4ece\u53f3\u5b50\u6811\u2192\u5de6\u5b50\u6811\u8fd9\u6837\u7684\u987a\u5e8f\u5f00\u59cb\u9012\u5f52\uff08\u56e0\u4e3a\u540e\u5e8f\u904d\u5386\u65f6\u6839\u8282\u70b9\u5f80\u524d\u79fb\u4e00\u4f4d\u5c31\u662f\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\uff09\u3002\n\n~~\u8fc7\u7a0b\u7565~~\n\n\u6784\u9020\u7ed3\u679c\uff08\u7ebf\u6027\u5b58\u50a8\uff0c\u4e0b\u68071\u662f\u6839\uff0c2i\u662f\u4e0b\u6807\u4e3ai\u7684\u8282\u70b9\u7684\u5de6\u5b50\u6811\uff0c2i+1\u662f\u53f3\u5b50\u6811\uff0c\u503c\u82e5\u662f0\u5219\u4e3a\u7a7a\uff09\uff1a0 A B C 0 0 D\u3002\n```\n\u524d\u5e8f\uff1aABCD\n```\n\n\u8f93\u51fa\uff1a\n```\nABCD\n```\n\u5b8c\u5168\u543b\u5408~~\u5e9f\u8bdd\u4e0d\u543b\u5408\u6211\u80fd\u62ff\u51fa\u6765\u5199\u5417~~\u3002\n# \u5751\u70b9\n\u5148\u9012\u5f52\u53f3\u5b50\u6811\uff0c\u518d\u9012\u5f52\u5de6\u5b50\u6811\uff0c\u8981\u4e0d\u7136\u4f1a~~\u5495\u5495\u5730\u7384\u5b66~~\u51fa\u9519\u3002\n# \u6838\u5fc3\u4ee3\u7801\u8be6\u89e3\n\u6ce8\uff1a\u6b64\u4ee3\u7801\u91c7\u7528C++\u7684\u667a\u80fd\u6307\u9488\u3002\n\n\n\u8282\u70b9\u7ed3\u6784\uff1a\n```cpp\nstruct node\n{\n    char value; // \u503c\n    std::shared_ptr<node> l; // \u5de6\u5b69\n    std::shared_ptr<node> r; // \u53f3\u5b69\n    node(char value = '0', std::shared_ptr<node> l = nullptr, std::shared_ptr<node> r = nullptr):value(value), l(l), r(r) {}; // \u521d\u59cb\u5316\n};\n```\nbuildtree\u51fd\u6570\uff08\u63a5\u4e0b\u6765\u7f29\u8fdb\u7684\u7686\u4e3a\u51fd\u6570\u5185\uff09\uff1a\n```cpp\n// \u6784\u9020\u6811\u51fd\u6570\uff0cleft\u548cright\u7528\u6765\u9650\u5b9a\u5b50\u6811\uff08\u5f53\u524d\u67e5\u627e\uff09\u7684\u8303\u56f4\nvoid buildtree(int left, int right, int& t, std::shared_ptr<node>& ns, std::string inStr, std::string postStr)\n```\n\u5bfb\u627e\u6839\u8282\u70b9\uff1a\n```cpp\n    // flag\u521d\u59cb\u503c\u4e3a-1\n    for (int i = left; i < right; i++)\n    {\n        if (inStr.at(i) == postStr.at(t))\n        {\n            flag = i;\n            i = right; // \u7ed3\u675ffor\u5faa\u73af\n        }\n    }\n```\n\u7ed3\u675f\u6761\u4ef6\uff08\u6ca1\u627e\u5230\u6839\u8282\u70b9\uff09\uff1a\n```cpp\n    if (-1 == flag)\n    {\n        return;\n    }\n```\n\u521b\u5efa\u8282\u70b9\u5e76\u5c06\u5f53\u524d\u6839\u79fb\u81f3\u53f3\u5b50\u6811\u7684\u6839\uff1a\n```cpp\n    ns = std::make_shared<node>(); // \u521b\u5efa\u8282\u70b9\n    ns->value = inStr.at(flag); // \u8d4b\u503c\n    --t; // \u79fb\u6839\n```\n\u9012\u5f52\uff1a\n```cpp\n    buildtree(flag + 1, right, t, ns->r, inStr, postStr); // \u53f3\u5b50\u6811\n    buildtree(left, flag, t, ns->l, inStr, postStr); // \u5de6\u5b50\u6811\n```\n\u63a5\u4e0b\u6765\u662fpreorder\u51fd\u6570\uff08\u540c\u6837\u7684\u7f29\u8fdb\uff09\uff1a\n```cpp\n// \u524d\u5e8f\u904d\u5386\u51fd\u6570\uff0cn\u662f\u8282\u70b9\u6570\u76ee\nvoid preorder(int& n, std::shared_ptr<node> ns)\n```\n\u904d\u5386\u9012\u5f52\uff1a\n```cpp\n    if (ns != nullptr) // \u5224\u65ad\u662f\u5426\u4e3a\u7a7a\uff08\u672a\u521b\u5efa\uff09\n    {\n        pre.at(n++) = ns->value; // \u5c06\u503c\u50a8\u5b58\u81f3\u6570\u7ec4\n        preorder(n, ns->l); // \u904d\u5386\u5de6\u5b50\u6811\n        preorder(n, ns->r); // \u904d\u5386\u53f3\u5b50\u6811\n    }\n```\n# \u5b8c\u6574\u4ee3\u7801\n\u7801\u98ce\u8be1\u5f02\u65e0\u6ce8\u91ca\uff0cdalao\u8f7b\u55b7QwQ\n```cpp\n#include <array>\n#include <iostream>\n#include <memory>\n#include <string>\nstruct node\n{\n    char value;\n    std::shared_ptr<node> l;\n    std::shared_ptr<node> r;\n    node(char value = '0', std::shared_ptr<node> l = nullptr, std::shared_ptr<node> r = nullptr):value(value), l(l), r(r) {};\n};\nstd::array<char, 10> pre;\nvoid buildtree(int, int, int&, std::shared_ptr<node>&, std::string, std::string);\nvoid preorder(int&, std::shared_ptr<node>);\nint main(void)\n{\n    int num, tmp;\n    std::string in, post;\n    std::shared_ptr<node> root;\n    num = 0;\n    pre.fill('0');\n    std::cin >> in >> post;\n    tmp = in.size() - 1;\n    buildtree(0, in.size(), tmp, root, in, post);\n    preorder(num, root);\n    for (int i = 0; i < num; i++)\n    {\n        std::cout << pre.at(i);\n    }\n    std::cout << std::endl;\n    return 0;\n}\nvoid buildtree(int left, int right, int& t, std::shared_ptr<node>& ns, std::string inStr, std::string postStr)\n{\n    int flag;\n    flag = -1;\n    for (int i = left; i < right; i++)\n    {\n        if (inStr.at(i) == postStr.at(t))\n        {\n            flag = i;\n            i = right;\n        }\n    }\n    if (-1 == flag)\n    {\n        return;\n    }\n    ns = std::make_shared<node>();\n    ns->value = inStr.at(flag);\n    --t;\n    buildtree(flag + 1, right, t, ns->r, inStr, postStr);\n    buildtree(left, flag, t, ns->l, inStr, postStr);\n    return;\n}\nvoid preorder(int& n, std::shared_ptr<node> ns)\n{\n    if (ns != nullptr)\n    {\n        pre.at(n++) = ns->value;\n        preorder(n, ns->l);\n        preorder(n, ns->r);\n    }\n    return;\n}\n```\n\u849f\u84bb\u7684\u9898\u89e3\u5c31\u5230\u8fd9\u91cc\u4e86\uff0c\u4e5f\u8bf7dalao\u4eec\u591a\u591a\u8865\u5145QwQ",
        "postTime": 1566297998,
        "uid": 121479,
        "name": "\u806a\u660e\u7684\u732a",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ea\u8981\u7b80\u5355\u7684\u8c03\u7528\u8fc7\u7a0b\u5c31\u884c\u4e86\u3002\u540e\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u4e2a\u5c31\u662f\u6811\u7684\u6839\u8282\u70b9\uff0c\u6211\u4eec\u5c31\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u51fa\u6839\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u6839\u8282\u70b9\u7684\u5de6\u8fb9\u5c31\u662f\u5de6\u5b50\u6811\uff0c\u53f3\u8fb9\u5c31\u662f\u53f3\u5b50\u6811\u3002\u622a\u53d6\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u76f4\u5230\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u90fd\u662f\u53f6\u5b50\u8282\u70b9\u3002\u6211\u7684\u4ee3\u7801\u5e94\u8be5\u4e5f\u6bd4\u8f83\u77ed\u3002\n\n```delphi\nvar s,s1:string;  \n    i,j,k,l,n,m,o,p,l1,l2:longint;  \nprocedure xx(s,s1:string);  \nvar x:longint;  \n    c:char;  \nbegin  \nc:=s1[length(s1)];  \nwrite(c);  //\u8f93\u51fa\u6839\u8282\u70b9\nx:=pos(c,s);  //\u627e\u6839\u8282\u70b9\u7684\u4f4d\u7f6e\n   if x-1>0 then  \n   xx(copy(s,1,x-1),copy(s1,1,x-1));//\u5904\u7406\u5de6\u5b50\u6811  \n   if length(s1)-x>0 then  \n   xx(copy(s,x+1,length(s1)-x),copy(s1,x,length(s1)-x));//\u5904\u7406\u53f3\u5b50\u6811  \nend;  \nbegin  \n  readln(s);  \n  readln(s1);  \n  xx(s,s1);  \nend.\n```",
        "postTime": 1453112607,
        "uid": 10357,
        "name": "\u6840\u9a9c\u7684\u91ce\u5fc3\u5bb6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u540e\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u5c31\u662f\u6839\uff0c\u56e0\u6b64\u8981\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u5230\u5b83\uff0c\u5c31\u77e5\u9053\u5de6\u53f3\u5b50\u6570\u7684\u5148\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u4e86\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u4e8c\u53c9\u6811\u6784\u9020\u51fa\u6765\uff0c\u7136\u540e\u518d\u641e\u4e00\u641e\u9012\u5f52\u904d\u5386\u3002\n\n\u6362\u8a00\u4e4b\uff0c\u5148\u5728\u540e\u5e8f\u904d\u5386\u627e\u5230\u6811\u6839,\u4ece\u800c\u627e\u51fa\u5de6\u53f3\u5b50\u6811\u8282\u70b9\uff0c\u7136\u540e\u9012\u5f52\u5de6\u53f3\u5b50\u6570\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\nconst int maxn=10000+10;\nchar post_order[maxn],in_order[maxn],leftch[maxn],rightch[maxn];\nchar build(int L1,int R1,int L2,int R2)//\u628a\u5148\u5e8fL1~R1,\u540e\u5e8fL2~R2\u5efa\u6210\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u6811\u6839 \n{\n if(L1>R1) return 0;//\u63d0\u524d\u5224\u65ad\u6bd4\u8f83\u4fdd\u9669,L1>R1\u5c31\u662f\u7a7a\u6811 \n char root=post_order[R2];//\u540e\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u5c31\u662f\u6839 \n putchar(root);//\u56e0\u4e3a\u662f\u5148\u5e8f\uff0c\u5148\u8f93\u51fa\u6839\u8282\u70b9 \n int p=L1;\n while(in_order[p]!=root) p++;//\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u6839\u8282\u70b9 \n int cnt=p-L1;//cnt\u8868\u793a\u6839\u8282\u70b9\u524d\u6709\u51e0\u4e2a\u5b57\u7b26\uff0c\u5373\u5de6\u5b50\u6811\u8282\u70b9\u4e2a\u6570 \n leftch[root]=build(L1,p-1,L2,L2+cnt-1);//\u5206\u522b\u662f\u5de6\u5b50\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u548c\u540e\u5e8f\u904d\u5386\u533a\u95f4\u8303\u56f4,\u53c2\u6570\u8981\u6349\u6478\u4e00\u4e0b \n rightch[root]=build(p+1,R1,L2+cnt,R2-1);//\u53f3\u5b50\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u548c\u540e\u5e8f\u904d\u5386\u533a\u95f4\u8303\u56f4\n return root;//\u8fd4\u56de\u6811\u6839    \n}\nint main()\n{\n scanf(\"%s%s\",in_order,post_order);\n int len=strlen(in_order);\n build(0,len-1,0,len-1);//0\u5373\u7b2c\u4e00\u4e2a\u5f00\u59cb,\u5230\u957f\u5ea6-1(\u522b\u5fd8\u4e86\u6570\u7ec4\u4e0b\u6807\u4ece0\u5f00\u59cb) \n}\n\n```",
        "postTime": 1493817869,
        "uid": 27114,
        "name": "BlueArc",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9898\u641c\u7d22\u5c31\u53ef\u4ee5\u4e86\u2026\u2026\n\n\n\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u904d\u5386\u662f\u6839\u5de6\u53f3\uff0c\u4e2d\u5e8f\u904d\u5386\u662f\u5de6\u6839\u53f3\uff0c\u540e\u5e8f\u904d\u5386\u662f\u5de6\u53f3\u6839\n\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0cBADC\u662f\u4e2d\u5e8f\u904d\u5386\uff0cBDCA\u662f\u540e\u5e8f\u904d\u5386\u3002\u56e0\u4e3a\u540e\u7eed\u904d\u5386\u662f\u5de6\u53f3\u6839\uff0c\u6240\u4ee5\u53ef\u4ee5\u5224\u65ad\uff0cA\u662f\u6839\uff0c\u8f93\u51fa\u6839\u3002\u5728BADC\uff0c\u6839A\u662f\u7b2c\u4e8c\u4e2a\uff0c\u90a3\u4e48\u53ef\u4ee5\u5224\u65adB\u662f\u5de6\u5b50\u6811\uff0cDC\u662f\u53f3\u5b50\u6811\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u77e5\u9053\uff0c\u5728\u540e\u7eed\u6392\u5217\u4e2d\uff0cB\u5c31\u662f\u5de6\u5b50\u6811\uff0cDC\u662f\u53f3\u5b50\u6811\u3002\u4e4b\u540e\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u5206\u522b\u91cd\u590d\u4ee5\u4e0a\u8fc7\u7a0b\uff0c\u76f4\u5230\u8be5\u5b50\u6811\n\n```delphi\n\nvar s,ss:string;\nprocedure try(s1,s2:string);\nvar s3,s4,s5,s6:string;\n\u3000\u3000ch:char;\n\u3000\u3000k:longint;\nbegin\n\u3000\u3000if s1='' then exit;\n\u3000\u3000write(s2[ord(s2[0])]);\n\u3000\u3000ch:=s2[ord(s2[0])];\n\u3000\u3000k:=pos(ch,s1);\n\u3000\u3000s3:=copy(s1,1,k-1);\n\u3000\u3000s5:=copy(s1,k+1,length(s1)-k);\n\u3000\u3000s4:=copy(s2,1,k-1);\n\u3000\u3000s6:=copy(s2,k,length(s2)-k);\n\u3000\u3000try(s3,s4);//\u5f80\u5de6\u641c\n\u3000\u3000try(s5,s6);//\u5f80\u53f3\u641c\nend;\nbegin\n\u3000\u3000readln(s);\n\u3000\u3000readln(ss);\n\u3000\u3000try(s,ss);\nend.\n\n```",
        "postTime": 1435674317,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u4e0d\u6784\u9020\u5b50\u8282\u70b9\uff0c\u4e00\u4e2a\u6bd4\u8f83\u62bd\u8c61\u7684\u505a\u6cd5\n\n\n\u539f\u7406\uff1a\n\n1.\u4e2d\u5e8f\u904d\u5386\u8fde\u7eed\u7684\u70b9\u96c6\uff0c\u5728\u540c\u4e00\u5b50\u6811\u4e2d\n\n2.\u540c\u4e00\u5b50\u6811\u4e2d\uff0c\u6839\u7684\u540e\u5e8f\u904d\u5386\u6700\u5927\n\n\u75311\u548c2\uff0c\n\n\u53ef\u7528get(l,r)\u8868\u793a\u4e2d\u5e8f\u904d\u5386\u4e3al~r\u7684\u70b9\uff0c\n\n\u627e\u5230\u5176\u4e2d\u540e\u5e8f\u904d\u5386\u6700\u5927\u7684\u4e00\u4e2a(m)\u4f5c\u4e3a\u6839\n\n\u9012\u5f52\u5904\u7406get(l,m-1)\u548cget(m+1,r)\n\n\n\n\n\n    \n```cpp\n//a1[i]:\u5148\u5e8f\u904d\u5386\u4e3ai\u7684\u70b9\n//a2[i]:\u70b9i\u7684\u4e2d\u5e8f\u904d\u5386\n//ra2[i]:\u4e2d\u5e8f\u904d\u5386\u4e3ai\u7684\u70b9 \uff08\u53cd\u5411\u67e5\u627e\uff09\n//a3[i]:\u4e2d\u5e8f\u904d\u5386\u4e3ai\u7684\u70b9\u7684\u540e\u5e8f\u904d\u5386\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstring s2,s3;\nint a1[30],a2[30],ra2[30],a3[30];\ninline int maxloc(int*a,int l,int r){//\u8fd4\u56de\u6570\u7ec4a\u4e2d\uff0cl~r\u95f4\uff0c\u6570\u503c\u6700\u5927\u7684\u4e0b\u6807\n    int loc,tmax=-99999999;\n    for(int i=l;i<=r;i++) if(a[i]>tmax){\n        tmax=a[i];\n        loc=i;\n    }\n    return loc;\n}\nint cnt=0;\nvoid get(int l,int r){//\u4e2d\u5e8f\u904d\u5386l~r\n    if(l>r) return;\n    int m=maxloc(a3,l,r);\n    a1[++cnt]=ra2[m];\n    get(l,m-1);\n    get(m+1,r);\n}\nint main(){\n    cin>>s2;\n    cin>>s3;\n    for(int i=0;i<s2.length();i++){\n        a2[s2[i]-'A'+1]=i+1;\n        ra2[i+1]=s2[i]-'A'+1;\n    }\n    for(int i=0;i<s3.length();i++) a3[ a2[s3[i]-'A'+1] ]=i+1;\n    get(1,s2.length());\n    for(int i=1;i<=s2.length();i++) cout<<(char)('A'+a1[i]-1);\n    return 0;\n}\n\n```",
        "postTime": 1495697516,
        "uid": 27741,
        "name": "angrypop",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\n\n```cpp\nvar\n    inorder_s, postorder_s : string;\nprocedure search(in_l, in_r, post_l, post_r:longint);\nvar i:longint;\nbegin\n    write(postorder_s[post_r]);         //\u7531\u4e8e\u662f\u5148\u5e8f\u904d\u5386\uff0c\u6240\u4ee5\u5148\u8f93\u51fa\u3002\n    i := pos(postorder_s[post_r], inorder_s);         //\u627e\u5b57\u6bcd\u5728\u4e2d\u5e8f\u904d\u5386\u7684\u4f4d\u7f6e\n    if i <> in_l then search(in_l, i-1, post_l, post_l + i - in_l - 1);       //\u641c\u5de6\u8fb9\uff0c\n    if i <> in_r then search(i+1, in_r, post_l + i - in_l, post_r - 1);         //\u641c\u53f3\u8fb9\nend;\nbegin\n    readln(inorder_s);\n    readln(postorder_s);\n    search(1, Length(inorder_s), 1, Length(postorder_s));       \nend.\n```",
        "postTime": 1472347106,
        "uid": 9087,
        "name": "fl_334",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\u4e00\u68f5\u6811\u7684\u540e\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u4f4d\u5c31\u662f\u6839\u7ed3\u70b9\uff0c\u800c\u4e2d\u5e8f\u904d\u5386\u4e2d\u6839\u7ed3\u70b9\u7684\u5de6\u53f3\u4e24\u8fb9\u5c31\u662f\u5de6\u53f3\u5b50\u6811\u4e0a\u7684\u7ed3\u70b9\u3002(\u5982\u679c\u8fde\u8fd9\u4e2a\u90fd\u4e0d\u61c2\u4f60\u4e5f\u4e0d\u4f1a\u6765\u505a\u8fd9\u9053\u9898\u7684)\n\n\u7136\u540e\u6211\u4eec\u5c31\u901a\u8fc7\u540e\u5e8f\u904d\u5386\u5f97\u5230\u6839\u7ed3\u70b9\u4ee5\u540e\u5c31\u8f93\u51fa\uff0c\u518d\u8fdb\u884c\u9012\u5f52\u641e\u4e00\u641e\u5de6\u53f3\u5b50\u6811\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nstring a,b;\n\nvoid work(string x,int xl,int xr,string y,int yl,int yr)\n{\n    if(xl>xr||yl>yr)return;\n    int t=x.find(y[yr]);\n    putchar(x[t]); //\u56e0\u4e3a\u662f\u6c42\u5148\u5e8f\u904d\u5386\uff0c\u6240\u4ee5\u5148\u8f93\u51fa\u518d\u9012\u5f52\n    work(x,xl,t-1,y,yl,yl+t-xl-1);\n    work(x,t+1,xr,y,yl+t-xl,yr-1);\n}\n\nint main()\n{\n    cin>>a>>b;\n    a=' '+a;\n    b=' '+b;\n    work(a,1,a.size()-1,b,1,b.size()-1);\n}\n```",
        "postTime": 1483862045,
        "uid": 28164,
        "name": "hilsinleri",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "A\u8fd9\u9053\u9898\u7684\u5173\u952e\u662f\u770b\u4f60\u4f1a\u4e0d\u4f1a\u624b\u73a9\u3002\u3002\u3002\u660e\u767d\u4e86\u539f\u7406\u540e\uff0c\u7a0b\u5e8f\u5c31\u5f88\u597d\u5199\u4e86\uff0c\u552f\u4e00\u8981\u6ce8\u610f\u7684\u5c31\u662f\u4f20\u9012\u7684\u4e0b\u6807\u9700\u8981\u597d\u597d\u6349\u6478\u4e00\u4e0b\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nchar mid[20],last[20];\nvoid ss(int l1,int r1,int l2,int r2)\n{\n    int i,j,k;\n    if (l1>r1||l2>r2) return;  //\u5982\u679c\u5f53\u524d\u8bbf\u95ee\u4f4d\u7f6e\u4e3a\u7a7a\uff0c\u8fd4\u56de \n    char c=last[r2];   //\u540e\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u4e2a\u4e00\u5b9a\u662f\u6839\u8282\u70b9 \n    cout<<c;\n    for (i=l1;i<=r1;i++)\n    {\n        if (mid[i]==c)  //\u67e5\u627e\u4e2d\u5e8f\u904d\u5386\u4e2d\u6839\u5728\u4ec0\u4e48\u4f4d\u7f6e \n        {\n            ss(l1,i-1,l2,l2-l1+i-1);  //\u9012\u5f52\u67e5\u627e\u4e2d\u5e8f\u904d\u5386\u4e2d\u6839\u7684\u5de6\u5b50\u6811\uff0c\u4ee5\u53ca\u540e\u5e8f\u904d\u5386\u4e2d\u5f00\u5934\u524d\uff08i-l1\uff09\u4e2a \n            ss(i+1,r1,r2-r1+i,r2-1);  //\u9012\u5f52\u67e5\u627e\u4e2d\u5e8f\u904d\u5386\u4e2d\u6839\u7684\u53f3\u5b50\u6811\uff0c\u4ee5\u53ca\u540e\u5e8f\u904d\u5386\u4e2d\u5269\u4e0b\u7684\u90e8\u5206 \n        }\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(false);  //\u8bfb\u4f18\uff0c\u52a0\u4e0d\u52a0\u5f71\u54cd\u4e0d\u5927 \n    cin>>mid;\n    cin>>last;\n    ss(0,strlen(mid)-1,0,strlen(last)-1);  //\u4f20\u9012\u4e0b\u6807 \n    return 0;\n}\n\n```",
        "postTime": 1477652304,
        "uid": 20874,
        "name": "Coco_T",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u4e00\u4e0b\u4f3c\u4e4e\u6ca1\u6709\u7528 `find_last_of()` \u7684\u540c\u5b66\n\n## \u601d\u8def1\uff1a\n\t\n    1. \u540e\u5e8f\u6700\u540e\u4e00\u4e2a\u663e\u7136\u662f\u672c\u6811\u7684\u6839\uff0c\u8f93\u51fa\n    2. \u53bb\u4e2d\u5e8f\u91cc\u627e\u6b64\u6839\n    3. \u628a\u4e2d\u5e8f\u5212\u6210\u4e24\u68f5\u5b50\u6811\uff0c\u5de6\u4e00\u68f5\uff0c\u53f3\u4e00\u68f5\uff08\u8bb0\u5f97\u8003\u8651\u8d8a\u754c\u95ee\u9898\uff09\n    4. \u518d\u53bb\u540e\u5e8f\u5212\u6811\n    5. \u9012\u5f52\n    \n\u6211\u4eec\u53d1\u73b0\u540e\u5e8f\u7684\u4f5c\u7528\u5c31\u662f\u63d0\u4f9b\u6839\u800c\u5df2\uff0c\u800c\u6839\u4e00\u5b9a\u662f\u540e\u5e8f\u7684\u6700\u540e\u4e00\u4e2a\u3002\n\u800c\u540e\u5e8f\u6811\u4e0e\u4e2d\u5e8f\u6811\u552f\u4e00\u4e0d\u540c\u4e4b\u5904\u5c31\u662f\u8282\u70b9\u987a\u5e8f\u4e0d\u4e00\u6837\u3002\n\u6240\u4ee5 `houxu.find_last_of(zhongxu)` \u5c31\u662f\u540e\u5e8f\u4e2d\u6839\u7684\u4f4d\u7f6e\u3002\n\n## \u601d\u8def2\n\n\t1. \u627e\u5230\u540e\u5e8f\u4e2d\u7684\u6839\u5e76\u8f93\u51fa int a=houxu.find_last_of(zhongxu)\n    2. \u53bb\u4e2d\u5e8f\u91cc\u627e\u6b64\u6839 zhongxu.find(houxu[a])\n    3. \u628a\u4e2d\u5e8f\u5212\u6210\u4e24\u68f5\u5b50\u6811\uff0c\u5de6\u4e00\u68f5\uff0c\u53f3\u4e00\u68f5\uff08\u8bb0\u5f97\u8003\u8651\u8d8a\u754c\u95ee\u9898\uff09\n    4. \u9012\u5f52\n    \n## AC\u4ee3\u7801\n\n```\n\n#include<iostream>\n#include<cstring>\nusing namespace std;\nstring z,h;\nvoid dfs(int zs,int ze){\n    string t(z,zs,ze-zs+1);\n    int a=h.find_last_of(t);\n    cout<<h[a];\n    int b=z.find(h[a]);\n    if(b!=zs) dfs(zs,z.find(h[a])-1);\n    if(b!=ze) dfs(z.find(h[a])+1,ze);\n}\nint main(){\n    cin>>z>>h;\n    dfs(0,z.size()-1);\n    return 0;\n}\n\n```",
        "postTime": 1562210610,
        "uid": 90170,
        "name": "wtyrrel_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u505a\u4e86\u5feb\u534a\u4e0a\u5348\n\n\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u9053\u666e\u53ca\uff0d(\u56e0\u4e3a\u6211\u592a\u84bb\u4e86)\n\n\u6211\u4e0d\u592a\u7406\u89e3\u9012\u5f52\u554a,\u6211\u5b9e\u5728\u592a\u84bb\u4e86,\u4e8e\u662f\u5c31\u5f00\u59cb\u505a\u4e86\u8fd9\u9053\u9898\n\n\u4e00\u5f00\u59cb\u6570\u7ec4\u8d8a\u754c,\u871c\u6c41RE\n\n------\n\n\u5410\u69fd\u7ed3\u675f\n\n\u601d\u8def\u5927\u5bb6\u5e94\u8be5\u90fd\u660e\u767d\u5427\n\n## \u627e\u540e\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u4e2a,\u53bb\u4e2d\u5e8f\u904d\u5386\u627e\u5230,\u7136\u540e\u5de6\u53f3\u4e8c\u5206,\u5c31\u8fd9\u4e48\u7b80\u5355\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nstring a,b;\n\nvoid sg(int a1,int a2,int b1,int b2){//a1,b1\u662f\u4e24\u4e2a\u904d\u5386\u7684\u8d77\u70b9,a2,b2\u662f\u7ec8\u70b9\n\tcout<<b[b2];//\u8f93\u51fa\u540e\u5e8f\u904d\u5386\u6700\u540e\u4e00\u4e2a\n\tint x;//x\u8bb0\u5f55\u4e2d\u5e8f\u904d\u5386\u4e2d\u540e\u5e8f\u6700\u540e\u4e00\u4e2a\u7684\u4f4d\u7f6e\n\tfor (int i = a1; i <= a2; ++i)//\u597d\u50cf\u4e5f\u53ef\u4ee5\u7528\u4ec0\u4e48\u4ec0\u4e48\"\u90a6\u5fb7\",\u54b1\u4e5f\u4e0d\u4f1a\u8bfb,\u54b1\u4e5f\u4e0d\u4f1a\u62fc,\u6211\u8fd9\u79cd\u849f\u84bb\u600e\u4e48\u4f1a\u8fd9\u79cd\u4e1c\u897f\n\t\tif(a[i] == b[b2]){\n\t\t\tx = i;\n\t\t\tbreak;\n\t\t}\n\tif(a1 <= x - 1 && b1 <= b1 + x - 1 - a1)//\u8d8a\u754c\u5c31\u4e0d\u9012\u5f52\n\t\tsg(a1,x - 1,b1,b1 + x - 1 - a1);//\u5de6\u8fb9,\u4e3a\u4ec0\u4e48\u8fd9\u6837\u62ff\u6837\u4f8b\u81ea\u5df1\u5206\u4e00\u4e0b\u5c31\u77e5\u9053\u4e86\n\tif(x + 1 <= a2 && b1 + x - a1 <= b2 - 1)\n\t\tsg(x + 1,a2,b1 + x - a1,b2 - 1);//\u53f3\u8fb9\n}\n\nint main(int argc, char const *argv[])\n{\n\tcin>>a>>b;\n\tint lea,leb;\n\tlea = a.length() - 1;\n\tleb = b.length() - 1;\n\tsg(0,lea,0,leb);//\u8d77\u59cb\u957f\u5ea6\n\treturn 0;\n}//\u4e0b\u9762\u662f\u4e00\u7ec4\u81ea\u5df1\u7684\u6570\u636e,\u6b63\u786e\u7b54\u6848\u662f125763i89,\u5927\u5bb6\u53ef\u4ee5\u5199\u5b8c\u4e4b\u540e\u6d4b\u8bd5\u4e00\u4e0b\n//75261i389\n//7562i9831\n\n```",
        "postTime": 1561519931,
        "uid": 192006,
        "name": "liuzitong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u5176\u5b9e\u5c31\u662f\u76f4\u63a5\u4ece\u540e\u5e8f\u6392\u5217\u5f00\u59cb\u4ece\u6700\u540e\u9762\u4f9d\u6b21\u5728\u4e2d\u5e8f\u6392\u5217\u91cc\u627e\u6839\u5c31\u53ef\u4ee5\u4e86\u3002\u4e3b\u8981\u662f\u56e0\u4e3a\u6839\u5728\u540e\u5e8f\u6392\u5217\u91cc\u7684\u4f4d\u7f6e\u5f88\u7279\u6b8a\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```cpp\n    void Find_root(int a, int b)//\u67e5\u627e\u51fd\u6570\n    {\n        if (a > b)//\u5224\u65ad\u662f\u5426\u6709\u7a7a\u95f4\u8fdb\u884c\u67e5\u627e\n            return;\n        char root;\n        int flag = 0;\n        bool k = false;\n        for (int i = strlen(lio) - 1; i >= 0; i--)\n        {\n            for (int j = a; j <= b; j++)\n            {\n                if (mio[j] == lio[i])\n                {\n                    flag = j;\n                    k = true;\n                    root = mio[j];\n                    break;\n                }\n            }\n            if (k)\n                break;\n        }\n    cout << root;//\u5148\u5e8f\u8f93\u51fa\n    Find_root(a, flag - 1);//\u9012\u63a8\n    Find_root(flag + 1, b);\n}\n```",
        "postTime": 1514777087,
        "uid": 78369,
        "name": "Harmony",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u5176\u5b9e\u6ce8\u91ca\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\uff0c\u4f46\u662f\u4e3a\u4e86\u8868\u793a\u6211\u5bf9\u67d0\u4f4d\u795e\u725b\u7684\u6124\u6068\u6211\u8fd8\u662f\u8981\u8bf4\n\n\u91cd\u70b9\u5728\u4e8e\u8fd9\u4e2adfs(left1,m-1,left2,m-left1+left2-1\uff09\u9012\u5f52\u00b7\u5f0f\u4ece\u4e2d\u5e8f\u904d\u5386\u7684\u6839\u8282\u70b9\u5e8f\u5217\u67e5\u627e\u5230\u540e\u5e8f\u904d\u5386\u5e8f\u5217\n\nm-left1+left2-1\u5bf9\u5e94\u67e5\u627e\u540e\u5e8f\u904d\u5386\u4e2d\u5b50\u6811\u7684\u6839\u8282\u70b9\u4f4d\u7f6e\uff0c\u548cm\u5728\u4e2d\u5e8f\u4e2d\u5bf9\u5e94\u7684\u6839\u8282\u70b9\u5b8c\u5168\u4e0d\u662f\u540c\u4e00\u4e2a\u8282\u70b9\n\n\u6ce8\u610f\u5728\u627e\u5230\u8ddf\u7ed3\u70b9\u540e\u6211\u4eec\u662f\u5224\u65ad\u5de6\u53f3\u5b50\u6811\u7684\u533a\u95f4\u8303\u56f4\uff0c\u8fdb\u884c\u9012\u5f52\uff0c\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5229\u7528\u4e2d\u540e\u904d\u5386\u6839\u8282\u70b9\u548c\u5de6\u53f3\u5b50\u6811\u7684\u4f4d\u7f6e\u5173\u7cfb\n\n\u786e\u5b9a\u641c\u7d22\u533a\u95f4\uff0c\u53ef\u63a8\u51fa\u8fd9\u4e2a\u5f0f\u5b50\uff0c\n\n\u6700\u91cd\u70b9\u7684\u662f\uff0c\u672c\u9053\u9898\u6559\u4f1a\u6211\u4eec\u505a\u9898\u4e00\u5b9a\u8981\u591a\u753b\u56fe\u554a****\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nstring a,b;\nint dfs(int left1,int right1 ,int left2,int right2)//\u57fa\u672c\u601d\u8def\u641c\u7d22\u540e\u5e8f\u904d\u5386\u7684\u6839\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u7684\u4f4d\u7f6e \n{\n    int m=a.find(b[right2]);//\u8f93\u51fa\u6839\u8282\u70b9 \n    cout<<b[right2];//\u6ce8\u610fm\u662fint\u578b\u7684\u4e0d\u80fd\u8f93\u51fa\n    //\u8f93\u51fa\u5e94\u7528\u540e\u5e8f\u904d\u5386\u7684\u6839\u7ed3\u70b9\u4f5c\u4e3a\u533a\u95f4\u7aef\u70b9\u8f93\u51fa \n    if(m>left1)//\u786e\u5b9a\u67e5\u627e\u533a\u95f4\n    {dfs(left1,m-1,left2,m-left1+left2-1);}//\u8fd9\u4e2a\u51cf\u4e00\u5c31\u662f\u5c06right2\u8f6c\u6362\u5230\u6839\u8282\u70b9\u7684\u4f4d\u7f6e\u4e0a \n    if(m<right1)\n    {dfs(m+1,right1,m-left1+left2,right2-1);}//\u8fd9\u4e2a\u6700\u8ba9\u4eba\u8d39\u89e3\u7684\u4fbf\u662f\u5982\u4f55\u4ece\u4e2d\u5e8f\u904d\u5386\u533a\u95f4\n    //\u67e5\u627e\u5230 \u540e\u5e8f\u904d\u5386\u533a\u95f4\u8fd8\u662f\u90a3\u53e5\u8bdd------\u753b\u4e00\u753b \n}\nint main()\n{\n    cin>>a>>b;\n    dfs(0,a.size()-1,0,b.size()-1);//\u540e\u5e8f\u904d\u5386\u7528\u6765\u786e\u5b9a\u6839\u8282\u70b9 \n    return 0;\n } \n//\u603b\u7ed3\u4efb\u4f55\u4e00\u9053\u9898\u90fd\u8981\u62ff\u7eb8\u753b\u4e00\u753b\n```",
        "postTime": 1496151491,
        "uid": 40055,
        "name": "jimmy\u5b59",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u901a\u8fc7\u4e00\u4e2a\u7ed3\u70b9\uff0c\u8981\u77e5\u9053\u5de6\u53f3\u5b50\u6811\u6839\u8282\u70b9\u5730\u5740\uff0c\u4e5f\u8981\u77e5\u9053\u5de6\u53f3\u5b50\u6811\u7ed3\u70b9\u6570\u91cf\uff0c\u7528\u5206\u6cbb\u6cd5\u91cd\u5efa\u6811\u3002\u5269\u4e0b\u7684\u5c31\u662f\u6309\u5148\u5e8f\u904d\u5386\u8f93\u51fa\u4e86\u3002\n\n\u4e0b\u9762\u4ee3\u7801\u4e2ds1,t1\u4e3a\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\uff0cs2,t2\u4e3a\u540e\u5e8f\u904d\u5386\u5e8f\u5217.\n\n\u8f93\u5165\u5b8c\u6bd5\u540e\u5148\u5c06\u540e\u5e8ft2\u53cd\u8fc7\u6765\uff0c\u5219t2[0]\u5fc5\u4e3a**\u6574\u68f5\u6811\u7684\u6839\u8282\u70b9**\u3002\n\n\u5bf9\u4e8e\u4e2d\u5e8f\u904d\u5386\u6765\u8bf4\uff0c\u4ecet1\u4e2d\u67e5\u627e\u6839\u8282\u70b9\u4f4d\u7f6e\uff0c\u56e0\u4e3at1\u662f\u4e2d\u5e8f\u904d\u5386\uff0c\u6240\u4ee5\u8be5\u4f4d\u7f6e\u5c06\u5de6\u53f3\u5b50\u6811\u4e00\u5206\u4e3a\u4e8c\uff0c\u901a\u8fc7\u5730\u5740\u76f8\u51cf\u6765\u5f97\u5230**p(\u5de6\u5b50\u6811\u7ed3\u70b9\u6570)**\u3002t1\u662f**\u5de6\u5b50\u6811\u6839\u8282\u70b9\u5730\u5740**\uff0ct1+p+1\u662f**\u53f3\u5b50\u6811\u6839\u8282\u70b9\u5730\u5740**\u3002\n\n\u800c\u5bf9\u4e8e\u540e\u5e8f\u904d\u5386\u6765\u8bf4\uff0ct2+1\u662f**\u53f3\u5b50\u6811\u6839\u8282\u70b9\u5730\u5740**\uff0ct2+n-p(n-p\u4e3a\u53f3\u5b50\u6811\u8282\u70b9\u6570)\u4e3a**\u5de6\u5b50\u6811\u6839\u8282\u70b9\u5730\u5740**\u3002\n\n\u6709\u4e86**3\u4e2a\u6839\u8282\u70b9\u7684\u5730\u5740\u548c\u5de6\u53f3\u5b50\u6811\u7684\u7ed3\u70b9\u6570**\uff0c\u4e8e\u662f\u9012\u5f52\u6c42\u89e3\uff0c\u6309\u7167\u5148\u5e8f\u904d\u5386\u7684\u987a\u5e8f\uff0c\u6bcf\u6b21\u5148\u5f80\u5de6\u8d70\uff0c\u5de6\u8fb9\u6ca1\u6709\u7ed3\u70b9\u518d\u5f80\u53f3\u8d70\uff0c\u6bcf\u8d70\u5230\u4e00\u4e2a\u7ed3\u70b9\u76f4\u63a5\u8f93\u51fa\u7ed3\u70b9\u7684\u5b57\u7b26\u3002\n\n\u4e0b\u9762\u662f**C\u4ee3\u7801**\uff08Ps:\u53c2\u8003\u4e86\u5218\u6c5d\u4f73\u300a\u7b97\u6cd5\u7ade\u8d5b\u5165\u95e8\u7ecf\u5178\u300b\u4e2d\u7684\u6c42\u540e\u5e8f\u904d\u5386\u7684\u7a0b\u5e8f\uff09\n\n```cpp\n#include<stdio.h>\n#include<string.h>\nvoid build(int n, char* t1,char* t2)//t1\u4e3a\u4e2d\u5e8f\u904d\u5386\uff0ct2\u4e3a\u540e\u5e8f\u904d\u5386\u3002 \n{\n    if(n==0) return;//\u65e0\u7ed3\u70b9\uff0c\u8fd4\u56de \n    if(t2[0]!='\\0') \n    printf(\"%c\",t2[0]);//\u5148\u5e8f\u8f93\u51fa\n    int p=strchr(t1,t2[0]) - t1; // p\u4e3a\u5de6\u5b50\u6811\u7ed3\u70b9\u6570\u91cf (\u6839\u8282\u70b9\u4f4d\u7f6e - t1\u9996\u5730\u5740 = \u5de6\u5b50\u6811\u7ed3\u70b9\u6570\u91cf)\n    build( p ,     t1     , t2+n-p ); //\u5de6\u5b50\u6811\u7ed3\u70b9\u6570,\u4e2d\u5e8f\u904d\u5386\u5de6\u5b50\u6811\u6839\u8282\u70b9\u5730\u5740\uff0c\u540e\u5e8f\u904d\u5386\u5de6\u5b50\u6811\u6839\u8282\u70b9\u5730\u5740\n    build( n-p-1 , t1+p+1 , t2+1   );\n}\nint main(void)\n{\n    char s1[10000],s2t[10000],s2[10000]={'\\0'};\n    scanf(\"%s%s\",s1,s2t);\n    int i=0,len=strlen(s2t)-1;\n    while(len>=0)\n        s2[i++]=s2t[len--];        //\u5c06\u540e\u7eed\u904d\u5386\u53cd\u8fc7\u6765\u3002 \n    build(strlen(s1),s1,s2);\n    return 0; \n}\n```",
        "postTime": 1437496670,
        "uid": 4693,
        "name": "CoolTeam",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u9996\u5148\u5148\u5e8f\u4e2d\u5e8f\u540e\u5e8f\uff0c\u641e\u61c2\uff08\u4e0d\u61c2\u4f60\u641e***\uff09\n\n\u6211\u4eec\u77e5\u9053\uff0c\u540e\u5e8f\u662f\u201c\u5de6 \u53f3 \u6839\u201d\n\n\u4e2d\u5e8f\u662f\u201c\u5de6 \u6839 \u53f3\u201d\n\n\u6240\u4ee5\uff0c\u540e\u5e8f\u7684\u6700\u540e\u4e00\u4e2a\u5fc5\u5b9a\u662f\u201c\u6839\u201d\n\n\u63a5\u7740\uff0c\u5728\u4e2d\u5e8f\u4e2d\u627e\u5230\u8fd9\u4e2a\u6839\uff0c\u5b83\u5de6\u8fb9\u4fbf\u662f\u6b64\u65f6\u8fd9\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u53f3\u8fb9\u4fbf\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\uff0c\u4e00\u76f4\u9012\u5f52\n\n\u4e3a\u4e86\u4f18\u5316\uff0c\u6211\u4eec\u53d1\u73b0\u5148\u5e8f\u662f\u201c\u6839 \u5de6 \u53f3\u201d\uff0c\n\n\u6240\u4ee5\u6bcf\u6b21\u5faa\u73af\u7684\u65f6\u5019\u6253\u51fa\u540e\u5e8f\u7684\u6700\u540e\u4e00\u4e2a\uff0c\u4fbf\u662f\u8fd9\u4e2a\u6811\u7684\u201c\u6839\u201d\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u6284\u6807\u7a0b\u8005\u81ea\u91cd\n\n```delphi\n\nvar\n  zx,hx:ansistring;\nprocedure qxx(zx,hx:ansistring);\nvar len,zuo1,you1,zuo,you:ansistring;\nbegin\n  if zx='' then exit;\n  len:=hx[length(hx)];\n  zuo:=copy(zx,1,pos(len,zx)-1);\n  you:=copy(zx,pos(len,zx)+1,length(zx)-pos(len,zx));\n  zuo1:=copy(hx,1,length(zuo));\n  you1:=copy(hx,length(zuo)+1,length(you));\n  write(len);\n  qxx(zuo,zuo1);\n  qxx(you,you1);\nend;\nbegin\n  readln(zx);\n  readln(hx);\n  qxx(zx,hx);\nend.\n\n```",
        "postTime": 1381630949,
        "uid": 30,
        "name": "RealR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u9898\u89e3\uff1a\n\n\u8fd9\u91cc\u8981\u7528\u5230\u9012\u5f52\uff0c\u4ee5\u7b80\u5316\u95ee\u9898\u3002\u9996\u5148\u4ece\u540e\u5e8f\u904d\u5386\u4e2d\u627e\u5230\u6811\u6839\uff0c\u5c31\u662f\u6700\u540e\u90a3\u4e00\u4e2a\uff0c\u7136\u540e\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u5230\u4ed6\u7684\u4f4d\u7f6e\uff0c\u524d\u9762\u662f\u4f5c\u5b50\u6811\u7684\u4e2d\u5e8f\u904d\u5386\uff0c\u540e\u9762\u662f\u53f3\u5b50\u6811\u7684\u4e2d\u5e8f\u904d\u5386\uff0c\u56e0\u4e3a\u4e2d\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u7684\u8282\u70b9\u6570\u662f\u4e00\u6837\u7684\uff0c**\u7531\u6b64\u53ef\u4ee5\u6839\u636e\u627e\u5230\u7684\u5b50\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7684\u8282\u70b9\u6570\u786e\u5b9a\u540e\u5e8f\u904d\u5386\u4e2d\u7684\u5de6\u53f3\u5b50\u6811\u7684\u540e\u5e8f\u904d\u5386\uff0c\u7531\u6b64\u9012\u5f52\u7b80\u5316\u95ee\u9898\uff0c\u77e5\u9053\u53ea\u5269\u4e00\u4e2a\u5b57\u7b26\u7684\u65f6\u5019\uff0c\u4ed6\u5c31\u662f\u53f6\u5b50\u3002\u6bcf\u6b21\u9012\u5f52\u5148\u8f93\u51fa\u5b50\u6811\u6839\uff0c\u7136\u540e\u662f\u5de6\u53f3\u5b50\u6811\u7684\u5148\u5e8f\u904d\u5386\uff0c\u8fd9\u4e2a\u9012\u5f52\u5904\u7406\u3002\u6ce8\u610f\u6ca1\u6709\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\u7684\u60c5\u51b5\u5373\u53ef\u3002**\n\n\n```delphi\nvar i,j,k,m,n,a,b,c,q:longint;\n    s1,s2,s3:ansistring;\nprocedure dg(zhong,hou:ansistring);\nvar gen:ansistring; p,l:longint;\nbegin\n  l:=length(hou);\n  if l<2 then write(hou) else begin\n  write(hou[l]);p:=pos(hou[l],zhong);\n  dg(copy(zhong,1,p-1),copy(hou,1,p-1));\n  dg(copy(zhong,p+1,l),copy(hou,p,l-p)); end;\nend;\nbegin\n  readln(s1);\n  readln(s2);\n  dg(s1,s2);\nend.\n```",
        "postTime": 1377011012,
        "uid": 147,
        "name": "\u91ce\u83dc\u6c64",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u53d1\u4e00\u4e2a\u6307\u9488\u7684\u505a\u6cd5\uff1a\n```cpp\n#include<stdio.h>\n#include<cstring>\nusing namespace std;\nconst int maxn=100;\nchar ind[maxn],pos[maxn];//ind-\u4e2d\u5e8f\u904d\u5386\u6570\u7ec4;pos-\u540e\u5e8f\u904d\u5386\u6570\u7ec4\nstruct Point{\n\tchar val;Point* lson;Point* rson;//\u4e8c\u53c9\u6811\n\tPoint(char cha){\n\t\tval=cha;lson=rson=NULL;//\u521d\u59cb\u5316\n\t}\n};\nPoint* dfs(char* stind,char* enind,char* stpos,char* enpos){\n\tchar a=*enpos;//st:start;en-end;ind-\u4e2d\u5e8f\u904d\u5386\u6570\u7ec4;pos-\u540e\u5e8f\u904d\u5386\u6570\u7ec4\uff1b\u90fd\u662f\u6307\u9488\u53d8\u91cf\n\tPoint* root=new Point(a);//\u65b0\u5efa\u5185\u5b58\n\tif(stind==enind)return root;//\u53ea\u6709\u4e00\u4e2a\u76f4\u63a5\u8fd4\u56de\u6307\u9488\n\tchar* k=stind;while(*k!=a)k++;//\u627e\u5b50\u6811\u7684\u6839\u8282\u70b9\n\tint lftlen=k-stind,ritlen=enind-k;//\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u5927\u5c0f\n\tif(lftlen>0)root->lson=dfs(stind,k-1,stpos,stpos+lftlen-1);\n\tif(ritlen>0)root->rson=dfs(k+1,enind,stpos+lftlen,enpos-1);\n\treturn root;//\u8fd9\u4fe9dfs\u5c31\u662f\u52a8\u52a8\u8111\u5c31\u4f1a\u7684\u4e1c\u897f\n}\nvoid Print(Point* root){//\u6253\u5370\n\tputchar(root->val);\n\tif(root->lson!=NULL)Print(root->lson);\n\tif(root->rson!=NULL)Print(root->rson);\n}\nint main(){\n\tscanf(\"%s%s\",ind,pos);//\u8bfb\u5165\n\tPoint *root=dfs(ind,ind+strlen(ind)-1,pos,pos+strlen(pos)-1);\n\tPrint(root);//\u8f93\u51fa\n\treturn 0;\n}\n```\n### \u81ea\u8ba4\u4e3a\u6211\u5199\u7684\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u6613\u61c2\u7684^_^~~\n## \u8bf4\u4e00\u70b9\uff1a\u6211\u539f\u6765\u9519\u4e86n\u591a\u6b21\uff0c\u9519\u8bef\u6765\u6e90\u7adf\u7136\u662fgets\uff0c\uff0c\u849f\u84bb\u6211\u4e5f\u4e0d\u77e5\u662f\u5565\u539f\u7406\uff0c\u671b\u8bc4\u8bba\u533a\u6709\u5927\u4f6c\u6307\u70b9\n\u4f7f\u7528gets\u7684\u6d4b\u8bd5\u70b9\u4fe1\u606f\uff1a\n\n`Wrong Answer. wrong answer On line 1 column 1, read (ASCII 13), expected A.`\n\n\u540e\u6765\u8981\u5199\u9898\u89e3\u7684\u65f6\u5019\u770b\u5230\u697c\u4e0a\u6709\u8fb9\u5efa\u6811\u8fb9\u8f93\u51fa\u7684\uff0c~~\u4f46\u662f\u8fd9\u6837\u4e0d\u4fbf\u4e8e\u7406\u89e3~~\uff08\u5f3a\u989c\u6b22\u7b11\u5f3a\u8bcd\u593a\u7406Q\u03c9Q\uff09",
        "postTime": 1568217042,
        "uid": 24695,
        "name": "Wh_Xcjm",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u3010\u601d\u8def\u3011\uff1a\u8fd9\u4e2a\u9898\u76ee\u5c31\u662f\u4e00\u4e2adfs\u7684\u9898\u76ee\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u5f97\u5230\u540e\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u4e2a\u503c\u662f\u6839\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u4e2d\u5e8f\u904d\u5386\u901a\u8fc7\u4e00\u4e2a\u6839\u6765\u5212\u5206\u6210\u4e24\u68f5\u5b50\u6811\uff0c\u518d\u9009\u5012\u4e8c\u7684\u540e\u5e8f\u904d\u5386\u7684\u503c\u518d\u5230\u4e2d\u5e8f\u7684\u4e24\u68f5\u5b50\u6811\u904d\u5386\uff0c\u4e0d\u65ad\u53bb\u5212\u5206\uff0c\u51fa\u53e3\u662f\u5f53\u5212\u5206\u7684\u533a\u95f4\u5927\u5c0f\u4e3a1\u7684\u65f6\u5019\u5c31\u662f\u51fa\u53e3\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5230\u6839\u4e3a1\uff0c\u5de6\u513f\u5b50\u4e3a\u6839*2\uff0c\u53f3\u513f\u5b50\u4e3a\u6839*2 + 1\u3002\u90a3\u4e48\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u68f5\u4e8c\u53c9\u6811\u3002\u518d\u901a\u8fc7\u524d\u5e8f\u904d\u5386\u904d\u5386\u51fa\u7ed3\u679c\n\n```C++\n#include <bits/stdc++.h>\nusing namespace std;\n/*\u7ed9\u51fa\u540e\u5e8f \u4e2d\u5e8f \u6c42\u524d\u5e8f*/\nconst int MAXN = 1e5 + 5;\nchar tree[MAXN * 100], mid_tree[MAXN], end_tree[MAXN];\nint n;\nvoid dfs(int num, int root, int l, int r){///\u5f53\u524d\u8282\u70b9\u7684\u6570\u76ee [l, r]\n    int flag = 0;\n    if(num == 0 || l > r || r < l){\n        return ;\n    }\n    if(l == r){\n        tree[root] = mid_tree[l];\n        return ;\n    }\n    for(int i = l; i <= r; i ++){\n        if(mid_tree[i] == end_tree[num]){\n            flag = 1;\n            dfs(num - 1, root * 2, l, i - 1);\n            dfs(num - 1, root * 2 + 1, i + 1, r);\n            tree[root] = mid_tree[i];\n        }\n    }\n    if(!flag){\n        dfs(num - 1, root, l, r);\n    }\n    return ;\n}\nvoid front_dfs(int root){///\u4e2d\u5de6\u53f3\n    cout << tree[root];\n    if(tree[root * 2] != '0'){\n        front_dfs(root * 2);\n    }\n    if(tree[root * 2 + 1] != '0'){\n        front_dfs(root * 2 + 1);\n    }\n}\nint main(){\n    for(int i = 1; i <= MAXN; i ++){\n        tree[i] = '0';\n    }\n    scanf(\"%s\", &mid_tree[1]);\n    scanf(\"%s\", &end_tree[1]);\n    int len1 = strlen(mid_tree + 1), len2 = strlen(end_tree + 1);\n    dfs(len2, 1, 1, len1);\n    front_dfs(1);\n    cout << endl;\n    return 0;\n}\n```",
        "postTime": 1562486492,
        "uid": 104119,
        "name": "moxin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "# \u5206\u6790\n\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u548c\u540e\u5e8f\u904d\u5386\u3002\u8981\u6c42\u8f93\u51fa\u8fd9\u68f5\u6811\u7684\u524d\u5e8f\u904d\u5386\u3002\n# \u8bbe\u8ba1\n## \u8f93\u5165\u4e0e\u8f93\u51fa\n\u7528\u51fd\u6570\u5b9e\u73b0int\u578b\u4e0echar\u578b\u7684\u8f6c\u6362\u3002\n## \u5efa\u6811\n\u9012\u5f52\u4ee5\u4e0b\u884c\u4e3a\u5efa\u6811\uff1a\n1. \u53d6\u540e\u5e8f\u904d\u5386\uff08back\uff09\u4e2d\u7684\u4e00\u6bb5\u533a\u95f4[back_l,back_r].\n2. \u53d6back\u4e2d\u7684\u6839\uff08root\uff09\u4f4d\u7f6eback_root.\n3. \u53d6\u4e2d\u5e8f\u904d\u5386\uff08mid\uff09\u4e2d\u7684\u5bf9\u5e94\u533a\u95f4[mid_l,mid_r].\n4. \u53d6mid\u4e2d\u7684root\u4f4d\u7f6emid_root.\n5. \u53d6mid\u4e2droot\u7684\u5de6\u513f\u5b50\u533a\u95f4[mid_ls_l,mid_ls_r];\u53f3\u513f\u5b50\u533a\u95f4[mid_rs_l,mid_rs_r].\n6. \u5339\u914dback\u4e2droot\u7684\u5de6\u513f\u5b50\u533a\u95f4[back_ls_l,back_rs_r];\u53f3\u513f\u5b50\u533a\u95f4[back_rs_l,back_rs_r].\n7. \u9012\u5f52\u5bf9\u5e94\u5904\u74065,6\u6b65\u9aa4\u5904\u7406\u51fa\u7684\u533a\u95f4\u5f97\u51faroot\u7684\u5de6\u3001\u53f3\u513f\u5b50\u3002\n8. \u8fd4\u56deroot\u3002\n## \u6c42\u5148\u5e8f\u904d\u5386\nDFS\u5b9e\u73b0\u3002\n## \u8bbe\u8ba1\u65f6\u9047\u5230\u7684\u95ee\u9898\n\u539f\u8bef\u8ba4\u4e3a\u4e2d\u5e8f\u904d\u5386\u7684\u5de6\u53f3\u513f\u5b50\u533a\u95f4\u7684\u7aef\u70b9\u503c\u80fd\u4e0e\u540e\u5e8f\u904d\u5386\u7684\u5de6\u53f3\u513f\u5b50\u533a\u95f4\u7aef\u70b9\u503c\u5339\u914d\uff0c\u5b9e\u5219\u4e0d\u7136\u3002\n# \u7f16\u7801\n## \u8f93\u5165\u4e0e\u8f93\u51fa\n```cpp\nint name( char x ){ return (int)( x - 'A' + 1 ); };\nchar word( int x ){ return (char)( x + 'A' - 1 ); };\n```\n## \u5efa\u6811\n\u4e0b\u4ee3\u7801\u6f14\u793a\u4e2d\u53d8\u91cf\u542b\u4e49\u5927\u4f53\u4e0e\u8bbe\u8ba1\u90e8\u5206\u76f8\u540c\u3002\n```cpp\ninline int find( int mid_l, int mid_r, int back_l, int back_r ){\n\tint back_root = back_r;\n\tchar root = back[back_root];\n\tint mid_root;\n\tfor( int i = mid_l; i<=mid_r; ++i )\n\t\tif( mid[i] == root ){\n\t\t\tmid_root = i;\n\t\t\tbreak;\n\t\t}\n\tbool ls = 0;\n\tint mid_ls_l, mid_ls_r;\n\tif( mid_root - 1 >= mid_l ){\n\t\tmid_ls_l = mid_l;\n\t\tmid_ls_r = mid_root - 1;\n\t\tls = 1;\n\t}\n\tbool rs = 0;\n\tint mid_rs_l, mid_rs_r;\n\tif( mid_root + 1 <= mid_r ){\n\t\tmid_rs_l = mid_root + 1;\n\t\tmid_rs_r = mid_r;\n\t\trs = 1;\n\t}\n\tint back_ls_l = 0, back_ls_r = 0;\n\tif( ls ){\n\t\tfor( int k = mid_ls_l; k<=mid_ls_r; ++k )\n\t\t\tfor( int i = back_l; i<=back_r; ++i )\n\t\t\t\tif( back[i] == mid[k] ){\n\t\t\t\t\tback_ls_l = min( i, back_ls_l );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\tfor( int k = mid_ls_l; k<=mid_ls_r; ++k )\n\t\t\tfor( int i = back_l; i<=back_r; ++i )\n\t\t\t\tif( back[i] == mid[k] ){\n\t\t\t\t\tback_ls_r = max( i, back_ls_r );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t}\n\tint back_rs_l = 0, back_rs_r = 0;\n\tif( rs ){\n\t\tfor( int k = mid_rs_l; k<=mid_rs_r; ++k )\n\t\t\tfor( int i = back_l; i<=back_r; ++i )\n\t\t\t\tif( back[i] == mid[k] ){\n\t\t\t\t\tback_rs_l = min( i, back_rs_l );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\tfor( int k = mid_rs_l; k<=mid_rs_r; ++k )\n\t\t\tfor( int i = back_l; i<=back_r; ++i )\n\t\t\t\tif( back[i] == mid[k] ){\n\t\t\t\t\tback_rs_r = max( i, back_rs_r );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t}\n\tint root_re = name( root );\n\tif( ls )\n\t\tt[root_re].ls = find( mid_ls_l, mid_ls_r, back_ls_l, back_ls_r );\n\tif( rs )\n\t\tt[root_re].rs = find( mid_rs_l, mid_rs_r, back_rs_l, back_rs_r );\n\treturn root_re;\n}\n```\n## \u6c42\u5148\u5e8f\u904d\u5386\n```cpp\nvoid dfs( int x ){\n\tprintf(\"%c\",word( x ));\n\tif( t[x].ls ) dfs( t[x].ls );\n\tif( t[x].rs ) dfs( t[x].rs );\n}\n```\n## \u7f16\u7801\u65f6\u9047\u5230\u7684\u95ee\u9898\n\u539ffind\u51fd\u6570\u4f20\u53c2\u6df7\u4e71\u3001\u5197\u4f59\u3002\n\n------------\n\u611f\u8c22\u60a8\u7684\u9605\u8bfb\u300220190216",
        "postTime": 1550327015,
        "uid": 121617,
        "name": "WestTree",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u7ed9\u51fa\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u6392\u5217\u3002\u6c42\u51fa\u5b83\u7684\u5148\u5e8f\u6392\u5217\u3002\uff08\u7ea6\u5b9a\u6811\u7ed3\u70b9\u7528\u4e0d\u540c\u7684\u5927\u5199\u5b57\u6bcd\u8868\u793a\uff0c\u957f\u5ea6<=8\uff09\u3002\n\n\u8fd9\u9053\u9898\u6211\u4eec\u60f3\u8981\u77e5\u9053\u5176\u5148\u5e8f\u904d\u5386\uff0c\u5173\u952e\u5728\u4e8e\u627e\u5230\u6839\uff0c\u7136\u540e\u62c6\u6210\u5de6\u53f3\u5b50\u6811\u9012\u5f52\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2adfs\u51fd\u6570\u6765\u505a\u8fd9\u4ef6\u4e8b\uff0c\u4f20\u5165 44 \u4e2a\u53c2\u6570l1, r1, l2, r2\uff0c\u8868\u793a\u5f53\u524d\u8003\u8651\u7684\u5b50\u6811\uff0c\u4e2d\u5e8f\u904d\u5386\u662f\u6574\u68f5\u6811\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u7684l1\u5230r1\u8fd9\u4e00\u6bb5\uff0c\u540e\u5e8f\u904d\u5386\u662f\u6574\u68f5\u6811\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u7684l2\u5230r2\u8fd9\u4e00\u6bb5\u3002\n\n\u5982\u679c\u8fd9\u68f5\u5b50\u6811\u4e3a\u7a7a\uff0c\u4e5f\u5c31\u662fl1 > r1\u4e86\uff0c\u5f53\u7136\u6211\u4eec\u59cb\u7ec8\u4fdd\u6301\u4e24\u6bb5\u5927\u5c0f\u76f8\u540c\u7684\u8bdd\uff0c\u6b64\u65f6\u4e5f\u80af\u5b9a\u662fl2 > r2\u4e86\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u3002le 8\u22648\uff09\u3002\n\n\u8fd9\u9053\u9898\u6211\u4eec\u60f3\u8981\u77e5\u9053\u5176\u5148\u5e8f\u904d\u5386\uff0c\u5173\u952e\u5728\u4e8e\u627e\u5230\u6839\uff0c\u7136\u540e\u62c6\u6210\u5de6\u53f3\u5b50\u6811\u9012\u5f52\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2adfs\u51fd\u6570\u6765\u505a\u8fd9\u4ef6\u4e8b\uff0c\u4f20\u5165 4 \u4e2a\u53c2\u6570l1, r1, l2, r2\uff0c\u8868\u793a\u5f53\u524d\u8003\u8651\u7684\u5b50\u6811\uff0c\u4e2d\u5e8f\u904d\u5386\u662f\u6574\u68f5\u6811\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u7684l1\u5230r1\u8fd9\u4e00\u6bb5\uff0c\u540e\u5e8f\u904d\u5386\u662f\u6574\u68f5\u6811\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u7684l2\u5230r2\u8fd9\u4e00\u6bb5\u3002\n\n\u5982\u679c\u8fd9\u68f5\u5b50\u6811\u4e3a\u7a7a\uff0c\u4e5f\u5c31\u662fl1 > r1\u4e86\uff0c\u5f53\u7136\u6211\u4eec\u59cb\u7ec8\u4fdd\u6301\u4e24\u6bb5\u5927\u5c0f\u76f8\u540c\u7684\u8bdd\uff0c\u6b64\u65f6\u4e5f\u80af\u5b9a\u662fl2 > r2\u4e86\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u3002\n```cpp\n#include <iostream>\n#include <cstring>\nusing namespace std;\nchar s1[15],s2[15];\nvoid dfs(int l1,int r1,int l2,int r2){\n    if (l1>r1){\n        return;\n    }\n    int p;\n    for (int i=l1;i<=r1;++i){\n        if (s1[i]==s2[r2]){\n            p=i;\n        \tbreak;\n        }\n    }\n    cout<<s1[p];\n    dfs(l1,p-1,l2,l2+p-1-l1);\n    dfs(p+1,r1,r2-r1+p,r2-1);\n}\nint main() {\n    int len;\n    cin >> s1 >> s2;\n    len = strlen(s1);\n\tdfs(0,len-1,0,len-1);\n    return 0;\n}\n```",
        "postTime": 1542538555,
        "uid": 112628,
        "name": "klssxbc0001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e0d\u5c11\u5927\u4f6c\u4eec\u5199\u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u51e0\u4e4e\u90fd\u7528\u7684\u662fstring\u7684find()\n\u51fd\u6570\uff0c\u4f46\u8c8c\u4f3c\u7528string\u7684first_of_all()\u66f4\u7b80\u5355\u4e9b\u5427\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<string>\n#include<algorithm>\nusing namespace std;\nstring mid, las;\nint k=1;\nvoid change(int begin, int end){\n\tif(begin>end)\t{return ;}\n\tif(begin==end)\t{cout << mid[begin];\tk++;\treturn ;}\n\tstring temp(mid, begin, end-begin+1);//\u628a\u8fd9\u68f5\u5b50\u6811\u590d\u5236\u51fa\u6765\n\tint i=las.find_first_of(temp);//\u5728\u540e\u5e8f\u91cc\u627e\u5230\u5b50\u6811\u91cc\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5219\u5b83\u4e00\u5b9a\u662f\u8fd9\u68f5\u6811\u7684\u6839\u8282\u70b9\n\tint j=mid.find_first_of(las[i]);//\u518d\u4ece\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u5230\u6839\u8282\u70b9\u7684\u4f4d\u7f6e\n\tcout << las[i];\n\tchange(begin, j-1);\n\tchange(j+1, end);//\u6700\u540e\u5148\u5e8f\u8f93\u51fa\u5373\u53ef\n\t\n}\nint main(void)\n{\n\tcin >> mid >> las;\n\treverse(las.begin(), las.end());//\u628a\u540e\u5e8f\u904d\u5386\u7ffb\u8f6c\uff0c\u65b9\u4fbf\u627e\u6839\u8282\u70b9\n\tmid='0'+mid, las='0'+las;\n\tchange(1, las.size()-1);\n\treturn 0;\n}\n```",
        "postTime": 1523691643,
        "uid": 69203,
        "name": "z2512690268",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": ">>\u7b80\u5355\u7684\u5206\u6cbb\u9898\uff0c\u5728\u8349\u7a3f\u7eb8\u4e0a\u62b9\u4e00\u62b9\u5c31\u51fa\u6765\u4e86\u3002\n\u5728\u540e\u5e8f\u904d\u5386\u4e2d\uff0c\u4e00\u68f5\u6811\u7684\u6839\u4e00\u5b9a\u5728\u6700\u540e\u3002\n\n\u7136\u540e\u786e\u5b9a\u6839\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5206\u6210\u4e24\u4e2a\u5b50\u6811\u3002\n\n\u5c31\u6ca1\u4e86\u3002\n\n>>\u4ee3\u7801\u5982\u4e0b\uff1a\uff1a\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nvoid dfs(string M,string L){\n    int len=M.length();  //\u8fd9\u662f\u786e\u5b9a\u5b50\u6811\u7684\u5468\u957f\u3002\n    if (len<=1){  //\u5982\u679c\u8fd9\u68f5\u6811\u53ea\u662f\u4e00\u4e2a\u5355\u8282\u70b9\u6216\u662f\u7a7a\u6811\uff0c\u76f4\u63a5\u8f93\u51fa\u5c31\u597d\u4e86\n        cout << M;\n        return;\n    }\n    int u=M.find(L[len-1]);  //\u627e\u5230\u6839\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u7684\u4f4d\u7f6e\u3002\n    cout << M[u];\n    dfs(M.substr(0,u),L.substr(0,u));   //\u627e\u5230\u5de6\u8fb9\u7684\u5b50\u6811\n    dfs(M.substr(u+1,len-u-1),L.substr(u,len-1-u));  /\u627e\u5230\u53f3\u8fb9\u7684\u5b50\u6811\n}\nint main()\n{\n    string M,L;\n    cin >> M >> L;\n    dfs(M,L);\n    cout << \u201caaaaa\u201d  << endl;\n    return 0;\n}\n**\u5176\u5b9e\u5462\uff0c\u4ee3\u7801\u8fd8\u53ef\u4ee5\u4f18\u5316\uff0c\u5148\u4e0e\u5904\u7406\u51fa\u4e2d\u5e8f\u904d\u5386\u4e2d\u6bcf\u4e2a\u5b57\u6bcd\u7684\u4f4d\u7f6e\uff0c\u5c31\u53ef\u4ee5\u7701\u4e0b\u67e5\u627e\u7684\u65f6\u95f4\u5566\uff01\uff01\uff01\u539f\u672cO(n^2\uff09\u53d8\u4e3aO\uff08n)!!!!**\n```",
        "postTime": 1505997222,
        "uid": 14908,
        "name": "Jack_Homes_Huang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u4e2d\u89c4\u4e2d\u77e9\u7684\u5199\u6cd5 \u9012\u5f52\n\n\n\u4e3b\u8981\u662f\u8fd9\u4e2a\u51fd\u6570\u3002\n\n\n\u4f5c\u7528\uff1a\u6839\u636e[mbegin,mend]\u548c[lbegin, lend]\u8ba1\u7b97\u51fa\u5148\u5e8f\u904d\u5386\n\n\nlast\u5b58\u50a8\u540e\u5e8f\u904d\u5386\n\n\nmiddle\u5b58\u50a8\u5148\u5e8f\u904d\u5386\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\nvoid getFirst ( int mbegin, int mend, int lbegin, int lend )\n{\nif ( mbegin <= mend && lbegin <= lend )//\u4ec5\u5f53\u95ed\u5408\u533a\u95f4\u6709\u5143\u7d20\u65f6\n{\ncout << last[lend];\nif ( mbegin == mend || lbegin == lend ) return;//\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u4e0d\u7528\u63a5\u7740\u5f80\u4e0b\u9012\u5f52\u4e86\nint i  = strchr(middle+mbegin, last[lend]) - middle - mbegin;//\u67e5\u627e\u5e76\u8ba1\u7b97\u51famiddle\u548clast\u7684\u5206\u5272\u70b9\u6765\ngetFirst ( mbegin, mbegin + i - 1, lbegin, lbegin + i - 1 );\ngetFirst ( mbegin + i + 1, mend, lbegin + i, lend - 1 );\n}\n}\n```\nmain:\n\ncin >> middle >> last; //\u4ece\u6807\u51c6\u8f93\u5165\u6d41\u4e2d\u8f93\u5165\u4e24\u4e2a\u6574\u6570\n\n\ngetFirst ( 0, strlen ( middle ) - 1, 0, strlen ( last ) - 1 ); //\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u6d41\u4e2d\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nvoid abc(int x,int x1,int y,int y1);\nstring s1,s2;\nint main()\n{\ncin>>s1>>s2;\nabc(0,s1.length()-1,0,s2.length()-1);\nreturn 0;\n}\nvoid abc(int x1,int x,int y1,int y)\n{\nint m=s1.find(s2[y]);\ncout<<s2[y];\nif(m>x1)\nabc(x1,m-1,y1,y1+m-x1-1);\nif(m<x)\nabc(m+1,x,y1+m-x1,y-1);\n}\n```",
        "postTime": 1498367369,
        "uid": 32880,
        "name": "MinecraftFuns",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u4e4b\u524ddalao\u4ee3\u7801\u90fd\u597d\u7b80\u7ec3QwQ \u849f\u84bb\u5199\u4e86\u8d3c\u6734\u7d20\u7684\u4ee3\u7801\uff0c\u5e0c\u671b\u53ef\u4ee5\u7ed9\u65b0\u624b\u63d0\u4f9b\u4e00\u70b9\u5e2e\u52a9\n\n    \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint wa[15],wb[15];//where a \u548c where b \u5b58\u7684\u662f\u6bcf\u4e2a\u5b57\u6bcd\u5728a/b\u4e0a\u7684\u4f4d\u7f6e\n                  //\u7136\u540e\u7528ascii \u7801\u628a\u5b57\u6bcd\u8f6c\u6210\u6570\u5b57\u4e0b\u6807 \u5176\u5b9e\u53ef\u4ee5\u7528map \u6211\u6bd4\u8f83\u52e4\u594bQwQ \n    char a[15],b[15];\nvoid gao(int l,int r,char rt)//\u641e \u5c31\u662f\u548c\u5148\u5e8f\u4fbf\u5229\u7684\u601d\u7ef4\u4e00\u6837\uff0c\u5148\u8f93\u51fa\u6839\u8282\u70b9\u5728gao \u5de6\u53f3 \n{\n    if(l>r) return ;//\u4e0d\u5224\u4f1a\u6302 \u53ef\u4ee5\u6a21\u62df\u4e00\u4e0b \n    cout<<rt;if(l==r) return ;int lr=100,rr=100;\n    for(int i=wb[rt-'A'+1];i>=0;i--)//\u5229\u7528\u4e86\u540e\u7eed\u904d\u5386\u6bcf\u79d1\u5b50\u6811\u4e4b\u524d\u4e00\u4e2a\u4e3a\u5176\u5b50\u6811\u7684\u6839\u6765\u627e\u5de6\u53f3\u5b50\u6811\u7684\u6839 \n    {\n        if(lr==100&&wa[b[i]-'A'+1]<wa[rt-'A'+1]) lr=i;\n        if(rr==100&&wa[b[i]-'A'+1]>wa[rt-'A'+1]) rr=i;\n    }\n    if(rr==100) rr=lr;if(lr==100) lr=rr;//\u4e5f\u662f\u9632\u6b62\u4e8c\u53c9\u6811\u4e0d\u6ee1\u513f\u6302\u6389 \n     gao(l,wa[rt-'A'+1]-1,b[lr]);gao(wa[rt-'A'+1]+1,r,b[rr]);//\u641e\u5de6\u53f3\u5b50\u6811 \n}\nint main()\n{\n    cin>>a>>b;\n    int al=strlen(a),bl=strlen(b);\n    for(int i=0;i<al;i++) wa[a[i]-'A'+1]=i;//\u9884\u5904\u7406\u4f4d\u7f6e  \n    for(int i=0;i<bl;i++) wb[b[i]-'A'+1]=i;\n    gao(0,al-1,b[bl-1]);\n}\n```",
        "postTime": 1494683630,
        "uid": 19600,
        "name": "LittlePrincess",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "**\u51fd\u6570f(s1,s2)\u8fd4\u56de\u4e2d\u5e8f\u904d\u5386\u4e3as1,\u540e\u5e8f\u904d\u5386\u4e3as2\u7684\u4e8c\u53c9\u6811\u5148\u5e8f\u904d\u5386\u7684\u503c\u3002**\n\n**\u663e\u7136\uff0c\u5982\u679cs1\u548cs2\u90fd\u4e3a\u7a7a\uff0c\u90a3\u4e48f\u4e5f\u5e94\u8fd4\u56de\u7a7a\u3002**\n\n**\u5982\u679cs1\u548cs2\u90fd\u53ea\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u90a3\u4e48\u6b64\u4e8c\u53c9\u6811\u5148\u5e8f\u904d\u5386\u7684\u503c\u4e3as1(\u6b64\u65f6s2\u4e0es1\u76f8\u7b49)\uff0cf\u5e94\u8fd4\u56des1\uff08\u6216s2\uff09\u3002**\n\n**\u5982\u679c\u4e0a\u9762\u4e24\u4e2a\u6761\u4ef6\u90fd\u4e0d\u6ee1\u8db3\uff0c\u90a3\u4e48\u8bb0\u5f55\u540e\u5e8f\u904d\u5386\u6700\u540e\u4e00\u4f4d\u5373\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\uff0c\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u5bfb\u627e\u6b64\u8282\u70b9\uff0c\u8282\u70b9\u524d\uff08sa\uff09\u5373\u4e3a\u5de6\u5b50\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7684\u503c\uff0c\u8282\u70b9\u540e\uff08sb\uff09\u5373\u4e3a\u53f3\u5b50\u6811\u4e2d\u5e8f\u904d\u5386\u7684\u503c\u3002**\n\n**\u8bb0\u5f55sa\u548csb\u7684\u957f\u5ea6\uff0c\u6839\u636e\u957f\u5ea6\u5728s2\u4e2d\u5206\u522b\u627e\u51fa\u5de6\u5b50\u6811\u540e\u5e8f\u904d\u5386\u7684\u503c\uff08sc\uff09\u4ee5\u53ca\u53f3\u5b50\u6811\u540e\u5e8f\u904d\u5386\u7684\u503c\uff08sd\uff09\u3002**\n\n**\u6700\u540e\u6b64\u6811\u540e\u5e8f\u904d\u5386\u7684\u503c\u5e94\u4e3a\u6839\u8282\u70b9+\u5de6\u5b50\u6811\u524d\u5e8f\u904d\u5386\u7684\u503c+\u53f3\u5b50\u6811\u524d\u5e8f\u904d\u5386\u7684\u503c\uff08\u5373c+f(sa,sc)+f(sb,sd)\uff09\u3002**\n\n\n```cpp\n#include<iostream>\n#include<string>\nusing namespace std;\nstring s1,s2;\nstring f(string s1,string s2)\n{\n    if(s1.length()<=1)\n        return s1;\n    char c=s2[s2.length()-1];\n    int a=s1.find(c,0);\n    string sa=s1.substr(0,a);\n    string sb=s1.substr(a+1,s1.length()-a-1);\n    int l1=sa.length();\n    int l2=sb.length();\n    string sc=s2.substr(0,l1);\n    string sd=s2.substr(l1,l2);\n    return c+f(sa,sc)+f(sb,sd);\n}\nint main()\n{\n    cin>>s1;\n    cin>>s2;\n    cout<<f(s1,s2);\n    return 0;\n}\n```",
        "postTime": 1494646422,
        "uid": 28455,
        "name": "hehe_54321",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "```cpp\n\n//2015-10-13 00:16\n/*\n\u6d1b\u8c371030 \u6c42\u5148\u5e8f\u6392\u5217\n\u672c\u9898\u5730\u5740\uff1a http://www.luogu.org/problem/show?pid=1030\n\n\u9898\u76ee\u63cf\u8ff0\n\u7ed9\u51fa\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u6392\u5217\u3002\u6c42\u51fa\u5b83\u7684\u5148\u5e8f\u6392\u5217\u3002\uff08\u7ea6\u5b9a\u6811\u7ed3\u70b9\u7528\u4e0d\u540c\u7684\u5927\u5199\u5b57\u6bcd\u8868\u793a\uff0c\u957f\u5ea6<=8\uff09\u3002\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\u8f93\u5165\u683c\u5f0f\uff1a\n2\u884c\uff0c\u5747\u4e3a\u5927\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u6392\u5217\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n1\u884c\uff0c\u8868\u793a\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u3002\n\n\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\u8f93\u5165\u6837\u4f8b#1\uff1a\nBADC\nBDCA\n\u8f93\u51fa\u6837\u4f8b#1\uff1a\nABCD\n*/\n/*\n\u6ce8\u610f\u5b57\u7b26\u4e32\u8bbe\u7f6e\u4e3a\u7a7a\u7684\u65f6\u5019\u76f4\u63a5\u8bbe\u7f6e\u4e3a\u201c\u201d\u522b\u778e\u8bbe\u7f6e\u4ec0\u4e48\u4e71\u4e03\u516b\u7cdf\u7684\uff0c\u88ab\u8fd9\u4e2a\u5361\u4e86\n\u8bfb\u5230\u4e00\u4e2a\u4e32\uff0c\u628a\u6839\u8282\u70b9\u6311\u51fa\u6765\u8d4b\u503c\u7ed9\u5f53\u524d\u8282\u70b9 \n\u7136\u540e\u5206\u522b\u628a\u4e2d\u5e8f\u904d\u5386\u7684\u6839\u8282\u70b9\u7684\u5de6\u4e32\u548c\u540e\u7eed\u904d\u5386\u4e2d\u76f8\u540c\u7684\u4e32\u6311\u51fa\u6765\u9012\u5f52\u7ed9Build\n\u5982\u679c\u6ca1\u6709\u5de6\u5ddd\u5c31\u4e0d\u9012\u5f52\n\u53f3\u9762\u4e32\u76f8\u540c \n\u4ee3\u7801\u957f\u662f\u56e0\u4e3a\u6211\u6839\u672c\u4e0d\u4f1a\u5efa\u4e8c\u53c9\u6811\u6240\u4ee5\u5c31\u5957\u7ebf\u6bb5\u6811\u7684\u6a21\u677f\u4e86= =\n\u53e6\u5916\u5176\u4ed6\u540c\u5b66\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0bstring \u5f88\u6709\u5e2e\u52a9\u7684\n*/\n#include <cstdio>\n#include <iostream>\n#include <string>\nusing namespace std;\nstruct Node{\n    string word;\n    int left,right;\n    Node():left(0),right(0){};\n}tree[100];\nvoid Build(int i,string mlist,string llist)\n{\n    string ltemp,rtemp;\n    tree[i].word=llist.substr(llist.size()-1);\n    if(llist.size() == 1) return ;\n    ltemp=mlist.find(tree[i].word) == 0 ? \"\" :mlist.substr(0,mlist.find(tree[i].word));\n    if(ltemp!=\"\")\n    {\n        tree[i].left=i<<1;\n        Build(i<<1,ltemp,llist.substr(0,ltemp.size()));\n    }\n    \n    rtemp=mlist.find(tree[i].word) == mlist.size()-1 ? \"\" :mlist.substr(mlist.find(tree[i].word)+1,mlist.size()-1);\n    if(rtemp!=\"\")\n    {\n        tree[i].right=(i<<1)+1;\n        Build((i<<1)+1,rtemp,llist.substr(ltemp.size(),rtemp.size()));\n    }\n}\n\nvoid DFS(int i)\n{\n    cout<<tree[i].word;\n    if(tree[i].left)\n        DFS(tree[i].left);\n    if(tree[i].right)\n        DFS(tree[i].right);\n}\n\nint main()\n{\n    freopen(\"test.in\",\"r\",stdin);\n    string mid,last;\n    cin>>mid>>last;\n    Build(1,mid,last);\n    DFS(1);\n    return 0;    \n} \n\n\n```",
        "postTime": 1444666837,
        "uid": 896,
        "name": "SiTer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u8bdd\u8bf4\u4e8c\u53c9\u6811...\u6709\u70b9\u65e0\u5398\u5934\\\n\u8bdd\u4e0d\u591a\u8bf4\u4e86,\u4e0a\u4ee3\u7801:\n```cpp\n#include <iostream>\n#include <iomanip>\n#include <cmath>\n#include <cstdio>\n#include <fstream>\n#include <cstring>\n#include <string>\nusing namespace std;\n//ifstream cin();\n//ofstream cout();\nstring s1,s2;\nvoid calc(int l1,int r1,int l2,int r2){\n\tint m=s2.find(s1[l1]);\n\tif(m>l2) calc(l1+1,l1+m-l2,l2,m-1);\n\tif(m<r2) calc(l1+m-l2+1,r1,m+1,r2);\n\tcout<<s1[l1];\n}\nint main(){\n\tcin>>s1>>s2;\n\tcalc(0,s1.length()-1,0,s2.length()-1);\n\tios::sync_with_stdio(false);\n\treturn 0;\n}\n```\n\u5f53\u7136\u4e86\\\n\u8fd9\u4e0d\u53ef\u80fd\u662f\u6b63\u89e3\\\n\u5927\u5bb6\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e0b,\u8fd9\u4e2a\u4ee3\u7801\u662f\u8f93\u5165\u5148\u5e8f\u4e2d\u5e8f,\u8f93\u51fa\u540e\u5e8f\u7684.\\\n\u8981\u5b66\u4f1a\u81ea\u5df1\u6539\u4ee3\u7801\n```cpp\n#include <iostream>\nusing namespace std;\nstring in_str,post_str;\nvoid build(int l1,int r1,int l2,int r2)//\u5f53\u524d\u6811\u7684\u5728\u4e2d\u5e8f\u904d\u5730\u7684\u8303\u56f4 l1-r1  \u5728\u540e\u5e8f\u904d\u5730\u7684\u8303\u56f4 l2-r2\n{\n    if(l1>r1) return;                        //\u5f53\u524d\u4e3a\u7a7a\u6811 \u5219\u76f4\u63a5\u8fd4\u56de\n    cout << post_str[r2];             \n    int p=l1;                 \n    while(in_str[p] != post_str[r2]) p++;    //\u4ece\u4e2d\u5e8f\u904d\u5730\u4e2d\u627e\u51fa\u5de6\u6811\u7684\u8303\u56f4\n    int cnt = p-l1;                            //\u5de6\u6811\u8282\u70b9\u6709\u591a\u5c11\u4e2a\n    build(l1,p-1,l2,l2+cnt-1);                //\u9012\u5f52\u904d\u5730\u5de6\u6811 \u4e2d\u5e8f\uff08\u4ecel1\u5f00\u59cb\u7684p-1\u4e2a\uff0c\u56e0\u4e3a\u5f53\u524d\u8282\u70b9\u4e0d\u7b97\u5de6\u6811\u90e8\u5206\uff09 \u540e\u5e8f\uff08\u4e0e\u5de6\u6811\u7c7b\u4f3c\uff0c\u4f46\u53f3\u8fb9\u90e8\u5206\u4e0d\u80fd\u7528p-1\uff0c\u81ea\u5df1\u601d\u8003\u4e0b\u4e3a\u4ec0\u4e48\uff09\n    build(p+1,r1,l2+cnt,r2-1);                //\u9012\u5f52\u904d\u5730\u53f3\u6811 \u4e2d\u5e8f\uff08\u4ecep+1\u5f00\u59cb\uff0c\u521a\u597d\u63a5\u4e0a\u5de6\u6811\u90e8\u5206\u5230\u672b\u5c3e\uff09 \u540e\u5e8f\uff08\u521a\u597d\u63a5\u4e0a\u540e\u5e8f\u7684\u5de6\u6811\u90e8\u5206\uff0c\u56e0\u4e3a\u6839\u5728\u7ed3\u5c3e\u6240\u4ee5\u4e2d\u95f4\u4e0d\u5fc5\u51cf1\uff0c\u6700\u540e\u51cf1\uff09\n}\nint main(){  \n    cin>>in_str>>post_str; //\u8f93\u5165\n    int n=in_str.length()-1;                //\u957f\u5ea6\n    build(0,n,0,n);                        \n}\n```\n",
        "postTime": 1562292528,
        "uid": 187373,
        "name": "A_Soul",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u540e\u5e8f\u6392\u5217\uff1a \u5de6\u5b50\u6811\u7684\u540e\u5e8f\u6392\u5217 + \u53f3\u5b50\u6811\u7684\u540e\u5e8f\u6392\u5217 + \u6839\u7ed3\u70b9\n\n\u4e2d\u5e8f\u6392\u5217\uff1a \u5de6\u5b50\u6811\u7684\u4e2d\u5e8f\u6392\u5217 + \u6839\u8282\u70b9 + \u53f3\u5b50\u6811\u7684\u4e2d\u5e8f\u6392\u5217\n\n\u6839\u636e\u4ee5\u4e0a\u4e24\u6761\uff0c\u6839\u8282\u70b9\u5728\u540e\u5e8f\u6392\u5217\u4e2d\u5f88\u5bb9\u6613\u88ab\u786e\u5b9a\uff0c\u4e5f\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3002\u800c\u627e\u5230\u8fd9\u4e2a\u5b57\u7b26\u5728\u4e2d\u5e8f\u6392\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u786e\u5b9a\u5de6\u53f3\u4e24\u68f5\u5b50\u6811\u3002\u5f53\u5269\u4e0b\u7684\u5e8f\u5217\u957f\u5ea6\u4e3a1\u6216\u4e3a\u7a7a\u65f6\uff0c\u6784\u5efa\u5b8c\u6bd5\u3002\n\n\u90a3\u4e48\u5f88\u663e\u7136\u4e0a\u8ff0\u8fc7\u7a0b\u53ef\u4ee5\u7528\u9012\u5f52\u5b8c\u6210\uff0c\u5177\u4f53\u89c1\u4ee5\u4e0b\u4ee3\u7801\u3002\u8fd9\u91cc\u662f\u5b58\u8d77\u6765\u518d\u8f93\u51fa\uff0c\u4e2a\u4eba\u89c9\u5f97\u597d\u7406\u89e3\u4e00\u4e9b\u3002\n\n\n    \n    \n    \n    \n    \n```cpp\n    #include<iostream>\n    #include<vector>\n    #include<string>\n    #include<algorithm>\n    using namespace std; //\u5934\u6587\u4ef6\n    struct Tree {\n        char self; //\u81ea\u5df1\u8868\u793a\u7684\u5b57\u7b26\n        Tree* left, *right; //\u5de6\u53f3\u5b50\u6811\n        /*~Tree() { if (left) left->~Tree(), delete left; if (right) right->~Tree(), delete right; }*/ //\u8fd9\u4e2a\u6790\u6784\u51fd\u6570\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u7528\n    }* root = new Tree(); //\u4e2a\u4eba\u559c\u6b22\u7528\u6307\u9488\u5b58\u4e8c\u53c9\u6811\n    string mid, post; //\u4e2d\u5e8f\u548c\u540e\u5e8f\u6392\u5217\n    typedef string::iterator sit;\n    void build(Tree* t, string m, string p) { //\u901a\u8fc7m\uff08\u4e2d\u5e8f\u6392\u5217\uff09\u548cp\uff08\u540e\u5e8f\u6392\u5217\uff09\u6784\u5efa\u6811\n        if (m.size() == 1) { //\u82e5\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e0d\u9700\u518d\u6784\u5efa\uff0c\u8fd4\u56de\n            t->self = m[0];\n            return;\n        }\n        sit w = m.begin() + m.find(p[p.size() - 1]);\n        t->self = *w; //\u627e\u5230\u6839\u8282\u70b9\u5728m\u4e2d\u7684\u4f4d\u7f6e\n        string l(m.begin(), w), r(w + 1, m.end()); //\u83b7\u5f97\u4e24\u68f5\u4e2d\u5e8f\u904d\u5386\u7684\u5b50\u6811\n        string p2 = p.substr(0, l.size()); //\u83b7\u5f97\u4e24\u68f5\u540e\u5e8f\u904d\u5386\u7684\u5b50\u6811\n        string p3 = p.substr(l.size(), r.size());\n        if (p2.size()) //\u82e5\u4e0d\u4e3a\u7a7a\n            build(t->left = new Tree(), l, p2); //\u7ee7\u7eed\u4e0b\u4e00\u6b65\u6784\u5efa\n        if (p3.size()) //\u540c\u4e0a\n            build(t->right = new Tree(), r, p3);\n    }\n    void pre(Tree* t) { //\u8f93\u51fa\u5148\u5e8f\u904d\u5386\n        cout << t->self;\n        if (t->left)  pre(t->left);\n        if (t->right) pre(t->right);\n    }\n    int main() {\n        cin >> mid >> post;\n        build(root, mid, post); //\u6784\u5efa\u6574\u68f5\u6811\n        pre(root); //\u8f93\u51fa\u5148\u5e8f\u6392\u5217\n        return 0;\n}\n```",
        "postTime": 1514211127,
        "uid": 64757,
        "name": "huang_yue",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u6700\u7b80\u5355\u7684\u601d\u8def\u5c31\u662f\u6839\u636e\u7ed9\u5b9a\u7684\u540e\u5e8f\u5e8f\u5217\u548c\u4e2d\u5e8f\u5e8f\u5217\u8fd8\u539f\u51fa\u6811\uff0c\u7136\u540e\u76f4\u63a5\u5148\u5e8f\u904d\u5386\u3002\n\n\u5982\u679c\u5df2\u77e5\u4e00\u4e2a\u540e\u5e8f\u5e8f\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u8ba4\uff0c\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4f4d\u4e3a\u5176\u6839\u8282\u70b9\u3002\n\n\u5728\u4e2d\u5e8f\u4e2d\u641c\u7d22\u8fd9\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u5de6\u8fb9\u7684\u4e3a\u5de6\u5b50\u6811\u7684\u8282\u70b9\uff0c\u53f3\u8fb9\u7684\u4e3a\u53f3\u5b50\u6811\u8282\u70b9\u3002\n\n\u63a5\u7740\u5c06\u8fd9\u4e24\u4e2a\u5b50\u6811\u5e8f\u5217\u9012\u5f52\u5904\u7406\uff0c\u76f4\u5230\u5e8f\u5217\u957f\u5ea6\u4e3a1\u65f6\u505c\u6b62\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\nCPP\n#include <cstdio>\n\n#include <cstdlib>\n\n#include <cstring>\n\nclass NODE\n\n{\npublic :\n\n\n```cpp\n    NODE *l,*r,*p;\n    char entity;\n};\nNODE* GenerateTree(char* Inorder,char* Postorder,int Length,NODE* parent); // \u6784\u5efa\u5b50\u6811\uff0c\u5e76\u8fd4\u56de\u5b50\u6811\u7684\u6839\u8282\u70b9\nNODE *list;\nint used;\nvoid Preorder(NODE* node);\nint main()\n{\n    char* Inorder = (char*)calloc(11,sizeof(char));\n    char* Postorder = (char*)calloc(11,sizeof(char));\n    scanf(\"%s%s\",Inorder,Postorder);\n    list = (NODE*)calloc(strlen(Postorder),sizeof(NODE));\n    NODE* root = GenerateTree(Inorder,Postorder,strlen(Postorder),NULL); // \u6784\u5efa\u4e8c\u53c9\u6811\n    Preorder(root);// \u5148\u5e8f\u904d\u5386\n}\nNODE* GenerateTree(char* Inorder,char* Postorder,int Length,NODE* parent)\n{\n    NODE* node = &list[used++]; // \u8c03\u7528\u4e00\u4e2a\u7a7a\u95f4\n    node->entity = Postorder[Length-1]; // \u547d\u540d\n    int L;\n    for(L=0;L<Length;L++)if(Inorder[L]==node->entity)break;\n    NODE* left = NULL;\n    if(L>0)left = GenerateTree(Inorder,Postorder,L,node);  // \u6784\u5efa\u5de6\u5b50\u6811\n    node->l = left;\n    NODE* right = NULL;\n    if(L+1<Length)right = GenerateTree(Inorder+L+1,Postorder+L,Length-L-1,node);;  // \u6784\u5efa\u53f3\u5b50\u6811\n    node->r = right;\n    return node; \n}\nvoid Preorder(NODE* node) // \u5148\u5e8f\u904d\u5386\n{\n    if(node == NULL)return ;\n    printf(\"%c\",node->entity);\n    Preorder(node->l);\n    Preorder(node->r);\n}\n```",
        "postTime": 1492166675,
        "uid": 30310,
        "name": "RedContritio",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1030 \u3010\u6c42\u5148\u5e8f\u6392\u5217\u3011"
    }
]