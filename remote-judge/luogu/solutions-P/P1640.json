[
    {
        "content": "# ~~\u8fd9\u9898\u4e3a\u4ec0\u4e48\u8981\u4e8c\u5206\u56fe\u5462\uff1f~~\n\n\u592a\u5927\u4e86\u597d\u50cf\u5212\u4e0d\u4f4f\n\n\u8fd9\u9898\u6211\u4eecbfs\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u4e8c\u5206\u56fe\u53c8\u4e0d\u597d\u5199\uff0c\u8fd8\u6162\u7684\u8981\u6b7b\uff0c~~\u8fd8\u4e11~~\uff0c\u4e0d\u5982~~\u597d\u5199~~\u7a33\u5b9a\u7684bfs\u3002\n\n\u8bf4\u662fbfs\u5176\u5b9e\u5c31\u662f\u4e71\u641e\u3002\n\n\u4ee5\u4e0b\u51e0\u6bb5\u901a\u4fd7\u6613\u61c2~~\u53ef\u7231~~\u9762\u5411\u840c\u65b0\u3002\u5927\u4f6c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u770b\u603b\u7ed3\u3002\n\n\u4e00\u4e2a\u88c5\u5907\u53ea\u80fd\u63d0\u4f9b\u4e00\u4e2a\u5c5e\u6027\u3002\u6211\u4eec\u628a\u4e24\u4e2a\u5c5e\u6027\u503c\u5f53\u505a\u4e24\u4e2a\u70b9\u6765\u8fde\u7ebf\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u611f\u6027\u5730\u60f3\u8c61\u8fd9\u6761\u7ebf\u4e0a\u6709\u4e00\u53ea\u732b\uff0c\u8fd9\u53ea\u732b\u8981\u4e0d\u7136\u8db4\u5728\u4e00\u5934\uff0c\u8981\u4e0d\u7136\u8db4\u5728\u53e6\u4e00\u5934\uff0c\u54ea\u4e2a\u503c\u88ab\u8986\u76d6\u4ee3\u8868\u7740\u8fd9\u4e2a\u88c5\u5907\u63d0\u4f9b\u54ea\u4e2a\u5c5e\u6027\u503c\u3002\u5982\u679c\u5c06\u5c5e\u6027\u503c\u6765\u8fd9\u6837\u5efa\u4e00\u5f20\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u56fe\uff0c\u56e0\u4e3a\u6bcf\u4e00\u53ea\u732b\u90fd\u80fd\u8986\u76d6\u65c1\u8fb9\u7684\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u60f3\u8c61\u5230\uff0c\u5982\u679c\u8bf4\u8fd9\u4e2a\u56fe\u4e2d\u6709m\u6761\u8fb9\uff0cn\u4e2a\u70b9\uff0c\u90a3\u4e48\u4e00\u5b9a\u53ef\u4ee5\u6709min(n,m)\u4e2a\u70b9\u88ab\u8986\u76d6\u3002\n\n\u9664\u4e86\u4e00\u4e2a\u6811\u4ee5\u5916\uff0c\u56fe\u4e0a\u7684\u8fb9\u6570\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e\u70b9\u6570\u3002\u663e\u7136\u5427\uff01\u90a3\u4e48\u8bf4\u660e\u56fe\u4e2d\u7684\u6240\u6709\u70b9\u90fd\u662f\u53ef\u4ee5\u88ab\u732b\u732b\u641e\u5230\u7684\uff0c\u6811\u4e2d\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u70b9\u65e0\u6cd5\u88ab\u8986\u76d6\u3002\u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\u6211\u4eec\u5f53\u7136\u662f\u8ba9\u90a3\u4e2a\u6700\u5927\u7684\u503c\u7684\u90a3\u4e2a\u70b9\u65e0\u6cd5\u88ab\u8986\u76d6\u3002\u6211\u4eec\u53ef\u4ee5\u7528bfs \u901a\u8fc7\u5bf9\u904d\u5386\u5230\u7684\u8fb9\u6570\u548c\u70b9\u6570\u7684\u6bd4\u8f83 \u6765\u7ef4\u62a4\u8fd9\u4e2a\u8fc7\u7a0b\uff0c(\u4e0d\u77e5\u9053\u600e\u4e48\u7ef4\u62a4\u53ef\u4ee5\u770b\u4ee3\u7801\u6211\u4f1a\u5c3d\u91cf\u7684\uff01\u5199\u7684\u975e\u5e38\uff01\u8be6\u7ec6  ~~\u6bd5\u7adf\u6211\u60f3\u8fc7\u5ba1\u6838~~)\n\n\u800c\u5bf9\u4e8e\u6811\u4e2d\u6700\u5927\u7684\u70b9\u5982\u4f55\u5904\u7406\u5462\uff1f\u6bcf\u4e00\u6b21bfs\u90fd\u4f1a\u904d\u5386\u6574\u4e2a\u8fde\u901a\u5757\uff0c\u5176\u4ed6\u7684bfs\u662f\u591f\u4e0d\u5230\u8fd9\u4e2a\u6700\u5927\u70b9\u7684\u3002\u6240\u4ee5\u6700\u5927\u7684\u90a3\u4e2a\u70b9\u65e0\u6cd5\u88ab\u5176\u4ed6\u7684bfs\u8986\u76d6\u3002\u90a3\u4e48\u6211\u4eec\u5c06\u5b83\u7684\u72b6\u6001\u89c6\u4e3acant\uff0c\u5373\u5b83\u7edd\u5bf9\u65e0\u6cd5\u88ab\u8986\u76d6\u3002\n\n\u6ca1\u6709\u4e0e\u4efb\u4f55\u70b9\u76f8\u8fde\u7684\u70b9\uff0c\u4e5f\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u6811\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4ece1\u5f00\u59cb\uff0c\u541110000\u904d\u5386\u3002\u6bcf\u4e00\u4e2a\u503c\u90fd\u662f\u5c5e\u6027\u503c\uff0c\u5c06\u6bcf\u4e00\u4e2a\u503c\u90fd\u770b\u505a\u70b9\u3002\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u70b9\u6ca1\u6709\u88abbfs\u8fc7\u5c31bfs\u5b83 ~~\u5e9f\u8bdd~~\uff0c\u8981\u4e0d\u7136\u5c31\u5224\u65ad\u662f\u5426\u662fcant\u70b9\u3002\n\n ## \u603b\u7ed3\u5728\u8fd9\n \u603b\u7ed3\uff1a\u5c06\u5c5e\u6027\u503c\u8fde\u8fb9\uff0c\u6bcf\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u5185\u7684\u6240\u6709\u70b9\u90fd\u53ef\u9009\uff0c\u6bcf\u4e00\u4e2a\u6811\u5185\u6700\u5927\u70b9\u4e0d\u53ef\u9009\uff0c\u7528bfs\u5224\u65ad\u3002\u6839\u672c\u5c31\u4e0d\u7528\u7f29\u70b9\u3002(\u5e76\u67e5\u96c6\u53ef\u80fd\u4f1a\u66f4\u5feb\uff1f\u6211\u5199\u4e0d\u660e\u767d..)\u6bcf\u4e00\u6761\u8fb9\u4e0e\u6bcf\u4e00\u4e2a\u70b9\u90fd\u81f3\u591a\u4f1a\u88ab\u5224\u65ad\u4e00\u6b21\uff0c\u4e0a\u754c\u590d\u6742\u5ea6O(n+m) (\u8981\u662f2\u5c31cant\u4e86\uff0c\u90a3\u4e48\u5f53\u7136\u540e\u9762\u5168\u4e0d\u7528\u5224\u4e86)\u3002\n \n \u591a\u7b80\u5355...\n\n\u8bf4\u5b9e\u8bdd\uff0c\u5904\u7406\u7ed3\u679c\u7684\u601d\u8def\u4e0e\u697c\u4e0b\u7528\u5e76\u67e5\u96c6\u7684\u5927\u4f6c\u4eec\u7684\u601d\u8def\u5f88\u50cf\uff0c\u4f46\u662f\u53c8\u7565\u6709\u4e0d\u540c\u3002\u4e25\u683c\u5730\u8bf4\u5e76\u4e0d\u662f\u540c\u4e00\u79cd\u65b9\u6cd5\u3002\n\n\u4ee3\u7801\uff01\n```cpp\n#include <bits/stdc++.h> //\u6211\u5c31\u597d\u8fd9\u4e00\u53e3\n#define rap(i,s,n) for(int i=s;i<=n;i++)//\u540c\u4e0a\n#define drap(i,s,n) for(int i=s;i>=n;i--)//\u540c\u4e0a\n#define N 23333\n#define M 2333333\nusing namespace std;\nchar xB[1<<15],*xS=xB,*xTT=xB;//\u8bfb\u4f18 \u539f\u56e0\u540c\u4e0a\n#define getc() (xS==xTT&&(xTT=(xS=xB)+fread(xB,1,1<<15,stdin),xS==xTT)?0:*xS++)\n#define isd(c) ((c>='0'&&c<='9')||(c=='-'))\ntemplate<typename T>\ninline void rd(T & xaa){\n    char xchh; T f=1; xaa=0; while(xchh=getc(),!isd(xchh));\n    if(xchh=='-'){f=-1; xchh=getc();} xaa=xchh-'0';\n    while(xchh=getc(),isd(xchh)) xaa=xaa*10+xchh-'0';\n    xaa*=f; return;\n}\nint m,to[M],nxt[M],head[N],cnt;//\u5b58\u56fe\nbool vis[N],cant[N];//bfs\u7528\u7684\nvoid add(int a,int b){cnt++; to[cnt]=b; nxt[cnt]=head[a]; head[a]=cnt; return;}\nbool bfs(int k){//\u8fd4\u56de\u662f\u5426\u80fd\u8986\u76d6\n\t//printf(\"bfs(%d)\\n\",k); \n    if(!vis[k]){\n        vis[k]=1; int maxp=k,nump=0,nume=0; queue<int>q; q.push(k);\n        //maxp:\u6d89\u53ca\u5230\u7684\u6700\u5927\u7684\u70b9\u3002\u8bbe\u62100\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u3002\n        //nump:\u70b9\u6570 nume:\u8fb9\u6570\n        while(!q.empty()){\n            int u=q.front(); q.pop(); maxp=max(maxp,u); nump++;\n            for(int i=head[u];i;i=nxt[i]){nume++; if(!vis[to[i]]) vis[to[i]]=1,q.push(to[i]);}\n        }\n        //\u6bcfbfs\u4e00\u4e2a\u70b9\u90fd\u8ba9nump++(\u663e\u7136),\u6bcf\u78b0\u5230\u4e00\u6761\u8fb9\u90fd\u8ba9nume++\u3002\n        //\u4f46\u662f\u56e0\u4e3a\u662f\u53cc\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u90fd\u78b0\u5230\u4e86\u4e24\u904d\u3002\u6240\u4ee5/2\n        nume>>=1; if(nume<nump) cant[maxp]=1;\n        //rap(i,1,maxp) printf(\"%d \",vis[i]); printf(\"\\n\");\n    \t//rap(i,1,maxp) printf(\"%d \",cant[i]); printf(\"\\n\");\n    }\n    return (!cant[k]);//\u5224\u65ad\u5f53\u524d\u70b9\u662f\u5426\u4e0d\u53ef\u8986\u76d6(\u5176\u5b9e\u53ea\u6709\u5b83\u81ea\u5df1\u5b64\u96f6\u96f6\u4e0d\u548c\u5176\u4ed6\u70b9\u76f8\u8fde\u624d\u662f0...\n}\nint main(){\n    //freopen(\"1640.in\",\"r\",stdin);\n    rd(m); int a,b; rap(i,1,m){rd(a),rd(b); add(a,b); add(b,a);}\n    int k=1; while((vis[k]&&!cant[k])||bfs(k)) k++; printf(\"%d\\n\",k-1);\n    //\u6ce8\u610fwhile\u4e2d\u7684\u5224\u65ad\u3002\u53ea\u6709vis\u8fc7\u624d\u80fd\u5224\u65adcant\u503c\uff0c\u5426\u5219cant\u503c\u6ca1\u6709\u610f\u4e49\u3002\u6ca1\u6709vis\u8fc7\u5c31\u4f1abfs\u3002\n    return 0;\n}\n```\n\n\u70b9\u4e2a\u8d5e\u5427 ^^\uff08\u7528\u4e00\u4e2aPAFF\u9171\u7684\u8868\u60c5\uff09",
        "postTime": 1520842301,
        "uid": 24620,
        "name": "Windows_XP",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "\u662f\u7684\uff0c\u6211\u6765\u89e3\u91ca\u4e00\u4e0b\u4e8c\u5206\u56fe\u7684\u5efa\u56fe\uff1a\n\n\u6bcf\u4ef6\u88c5\u5907\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u5982\u679c\u628a\u653b\u51fb\u5e8f\u5217\u5efa\u6210\u70b9\uff0c\u5c31\u662f\u88c5\u5907\u548c\u653b\u51fb\u987a\u5e8f\u7684\u5339\u914d\u3002\n\n\u6bd4\u5982\u5c5e\u6027\u503c\u662f3\u548c5\uff0c\u90a3\u4e48\u8fd9\u4ef6\u88c5\u5907\u8981\u4e48\u57283\u4f4d\u7f6e\u8981\u4e48\u57285\u4f4d\u7f6e\u88ab\u4f7f\u7528\u3002\n\n\u5f53\u7136\uff0c\u6309\u653b\u51fb\u987a\u5e8f\u5f00\u59cb\u5339\u914d\uff0c\u4e00\u65e6\u5339\u914d\u4e0d\u6210\u529f\uff0c\u6839\u636e\u9898\u610f\u5c31\u5fc5\u987b\u4e2d\u6b62\u3002\n\n\n\u8fd8\u6709\uff0c\u6bcf\u6b21memset\u592a\u6162\u4e86\uff0c\u7528\u65f6\u95f4\u6233id\u3002\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define MAXN 1010000\n#define MAXM 4040000\n#define X(n) (n+10000)\nstruct Edge\n{\n    int to,nex;\n    Edge(){}\n    Edge(int _to, int _nex):to(_to),nex(_nex){}\n};\nEdge e[MAXM+5];\nint first[MAXN+5], book[MAXN+5], match[MAXN+5], N, tot, id, op;\nvoid Add(int a, int b)\n{\n    e[tot] = Edge(b,first[a]);\n    first[a] = tot++;\n    return;\n}\nbool DFS(int x)\n{\n    for(register int u = first[x], v; u+1; u = e[u].nex)\n        if(book[v=e[u].to]-id)\n        {\n            book[v] = id;\n            if(!match[v] || DFS(match[v]))\n            {\n                match[x] = v, match[v] = x;\n                return true;\n            }\n        }\n    return false;\n}\nint Hungary()\n{\n    int ans = 0;\n    for(register int i = id = 1; i <= 10000; i++, id++)\n        if(DFS(i))\n            ans++;\n        else\n            break;\n    return ans;\n}\nint main()\n{\n    scanf(\"%d\",&N), memset(first,-1,sizeof(first));\n    for(register int i = 1, j; i <= N; i++)\n        for(j = 0; j < 2; j++)\n            scanf(\"%d\",&op), Add(op,X(i)), Add(X(i),op);\n    printf(\"%d\\n\",Hungary());\n     return 0;\n}\n```",
        "postTime": 1485327012,
        "uid": 16528,
        "name": "magolor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "### \u8fd9\u9053\u9898\u4ece\u7f51\u7edc\u6d41\u7684\u89d2\u5ea6\u6765\u60f3\uff0c\u662f\u5f88\u795e\u5947\u7684\u3002\n\n\u5b83\u544a\u8bc9\u6211\u4eec\u4e00\u4e2a\u6280\u5de7\uff1a\u7384\u5b66\u590d\u6742\u5ea6\u5206\u6790\uff08**\u6309\u7279\u5b9a\u987a\u5e8f\u9000\u6d41/\u589e\u5e7f**\uff09\n\n\u9996\u5148\u5efa\u7acb\u6a21\u578b\u3002\n\n\u6ee1\u8db3**\u8fde\u7eed**\u653b\u51fb\u6761\u4ef6\u4e0d\u592a\u597d\u641e\uff0c\u6211\u4eec\u8f6c\u5316\u6210\u5224\u5b9a\u6027\u95ee\u9898\u3002\n\n\u5373\u201c\u80fd\u5426\u8fde\u7eed\u653b\u51fblimit\u6b21\u201d\n\n(1)\u6bcf\u4e2a\u7269\u54c1\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\n\n(2)\u653b\u51fb->\u4ef7\u503c(\u6d41)\n\n\u90a3\u4e48\u53ef\u4ee5\u8fd9\u6837\u5efa\u56fe\uff1a\n\n\u5206\u4e3a\u4e24\u5c42,\u4e00\u5c42\u662f\u6bcf\u4e2a\u7269\u54c1,\u7b2c\u4e8c\u5c42\u662f\u6309\u5c5e\u6027\u503c\u6392\u5e8f\u7684\u6bcf\u6b21\u653b\u51fb\u3002\n\n(1)\u4eceS\u5411\u4ee3\u8868\u6bcf\u4e2a\u7269\u54c1\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u5bb9\u91cf\u4e3a1(\u6bcf\u4e2a\u7269\u54c1\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21);\n\n(2)\u4ece\u6bcf\u4e2a\u7269\u54c1\u5411\uff08\u5c5e\u60271\uff09\uff08\u5c5e\u60272\uff09\u4e24\u4e2a\u7b2c\u4e8c\u5c42\u7684\u70b9\u8fde\u8fb9\u3002\n\n(3)\u6bcf\u4e2a\u7b2c\u4e8c\u5c42\u7684\u70b9\u5411T\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a1(\u6bcf\u79cd\u5c5e\u6027\u53ea\u653b\u51fb\u4e00\u6b21)\n\n\u8fd9\u6837\u5b50\uff0c\u6211\u4eec\u6210\u529f\u7684\u4f7f\u7528\u4e00\u4e2a$O(\\text{\u7f51\u7edc\u6d41}*log(10000))$\u7684\u7b97\u6cd5\u89e3\u51b3\u4e86\u672c\u9898\u3002\n\n\u65e0\u7591\u662f\u4f1aTLE\u7684\u3002\n\n\u6211\u4eec\u77e5\u9053\u5728\u8dd1\u7f51\u7edc\u6d41\u7684\u65f6\u5019\uff0c\u589e\u5e7f\u7684\u8def\u5f84\u662f\u7384\u5b66\u3002\n\n\u6839\u636e**\u4eba\u7c7b\u667a\u6167**\uff0cS\u7684\u51fa\u8fb9\u591a\uff0cT\u7684\u51fa\u8fb9\u5c11\uff0c\u4eceS\u5f00\u59cb\u627e\u53ef\u80fd\u4f1a\u6162\u3002\n\n\u90a3\u6211\u4eec**\u628a\u6574\u4e2a\u56fe\u53cd\u5411**\uff0c\u8fd9\u6837\u6700\u5927\u6d41\u4e0d\u53d8\u3002\n\n\u6211\u4eec\u4ece\u539f\u6765\u7684T\u5f00\u59cb\u589e\u5e7f\u7684\u8bdd\uff0c\u6839\u636e**\u4eba\u7c7b\u667a\u6167**\uff0c\u589e\u5e7f\u987a\u5e8f\u662f\u53ef\u4ee5\u968f\u610f\u6307\u5b9a\u7684\uff0c\u8fd9\u6837\u5e76\u4e0d\u4f1a\u88ab\u5361\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u6309\u7167\u589e\u5e7f\u5c5e\u60271\uff0c\u5c5e\u60272\uff0c\u5c5e\u60273\u2026\u2026\u7684\u987a\u5e8f\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7b54\u6848\uff0c\u7136\u540e\u5229\u7528\u4e0a\u4e00\u6b21\u7684\u6b8b\u91cf\u7f51\u7edc\u6765\u589e\u5e7f\uff08\u5177\u4f53\u89c1\u4ee3\u7801\uff09\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u8981\u4e48\u589e\u5e7f\u51fa1\uff0c\u8981\u4e48\u65e0\u6cd5\u589e\u5e7f\uff0c**\u4e0d\u4f1a\u51fa\u73b0\u62c6\u524d\u9762\u7684\u6d41\u7684\u60c5\u51b5**\u3002\n\n\u8fd9\u6837\u5b50\uff0c\u590d\u6742\u5ea6\u5c31\u4ece$O(\\text{\u7f51\u7edc\u6d41}*log(10000))$\u53d8\u4e3a\u4e86$O(\\text{\u7f51\u7edc\u6d41})$!\n\n~~\u7384\u5b66~~\n\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u6211\u4f7f\u7528vector\u5efa\u8fb9MLE\uff0c\u7136\u540e\u4f7f\u7528\u4e86\u4e00\u4e2a\u6bd4\u8f83\u795e\u5947\u7684\u5efa\u8fb9\u65b9\u6cd5\u3002\n\n\u8fd8\u6709\uff0c\u6211\u61d2\u5f97\u5199dinic\uff0c\u4e8e\u662f\u4e4e\u5199\u4e86FF\u6700\u5927\u6d41\uff08FF\u8fc7\u767e\u4e07\u543c\uff01\uff09\u3002\n\n```cpp\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<vector>\n#define Maxn 1010000\nusing namespace std;\nint n,m,sink,em,ans;\nstruct Line\n{int g,l,b;}\nl[Maxn*6];\nint s[Maxn+100];\nint cnt,e[Maxn+100];\nint dfs(int num,int val)\n{\n  if (num==sink)return val;\n  e[num]=cnt;\n  int flow,v;\n  for (int i=s[num-1];i<s[num];i++)\n   if (l[i].l&&e[v=l[i].g]!=cnt){\n    flow=dfs(v,min(val,l[i].l));\n    if (flow){\n      l[i].l-=flow;\n      l[l[i].b].l+=flow;\n      return flow;\n    }\n  }return 0;\n}\nvoid addLine(int f,int t,int c)\n{\n  l[s[f]].b=s[t];\n  l[s[t]].b=s[f];\n  l[s[f]].g=t;\n  l[s[f]].l=c;\n  l[s[t]].g=f;\n  l[s[t]].l=0;\n  s[t]++;s[f]++;\n}\nstruct Data\n{int a,b;}\na[1000500];\nint main()\n{\n  scanf(\"%d\",&n);\n  sink=n+10010+1;\n  //\u70b91~n\u662f\u7269\u54c1\uff0c\u70b9n+1~n+10000\u662f\u5c5e\u6027\u503c\n  //sink\u662f\u6c47\uff0c\u6ca1\u6709\u6e90\n  for (int i=1;i<=n;i++){\n    scanf(\"%d%d\",&a[i].a,&a[i].b);\n    s[sink]++;s[i]=3;\n    s[n+a[i].a]++;\n    s[n+a[i].b]++;\n  }for (int i=2;i<=sink;i++)s[i]+=s[i-1];\n  for (int i=sink;i>=0;i--)s[i+1]=s[i];\n  for (int i=1;i<=n;i++)addLine(i,sink,1);\n  for (int i=1;i<=n;i++){\n    addLine(n+a[i].a,i,1);\n    addLine(n+a[i].b,i,1);\n  }cnt=1;\n  for (int i=1;i<=10010;i++,cnt=i)\n   if (!dfs(n+i,1))\n    {printf(\"%d\",i-1);break;}\n  return 0;\n}\n```\n\n~~\u7a81\u7136\u60f3\u5230\uff0cFF\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\u4e0d\u5c31\u662f\u5308\u7259\u5229\u5417\uff1f~~",
        "postTime": 1551844963,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "## \u4e00\u9053\u601d\u7ef4\u9898\n\u5148\u5b89\u5229\u6211\u5199\u7684blog\uff1a[$\\color{#ff4081}\\texttt{\u4e8c\u5206\u56fe\u6d45\u6790}$](https://lzsy01-xzy-blog.blog.luogu.org/XZY-1)\u3002\n***\n\u6211\u7b2c\u4e00\u4e0b\u770b\u5230\u8fd9\u9898\uff0c\u8111\u888b\u91cc\u6709\u4e24\u4e2a\u60f3\u6cd5\uff1a\n- dfs\u904d\u5386\uff0c\u679a\u4e3e\u80fd\u5230\u8fbe\u7684\u70b9\u3002\n- \u4e8c\u5206\u56fe\uff0c\u6c42\u6700\u5927\u5339\u914d\u3002\n***\n\n## \u8fd9\u4e24\u79cd\u7b97\u6cd5\u6211\u90fd\u8bd5\u4e86\u4e00\u4e0b\u3002\n### dfs\uff1a\n$code:$\n\n```cpp\n#include <cstdio>\n#include <bitset>\nusing namespace std;\n\nint read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile (c<'0' || c>'9'){if (c=='-')f=-1;c=getchar();}\n\twhile (c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-48;c=getchar();}\n\treturn x*f;\n}\n\nconst int MAXN=1000005;\nint n,ans;\nbitset<MAXN> vis;\nint a[MAXN],b[MAXN];\n\nvoid dfs(int now)\n{\n\tif (now>ans)ans=now;\n\tfor (int i=1;i<=n;i++)\n\t\tif (!vis[i]&&(a[i]==now+1||b[i]==now+1))\n\t\t{\n\t\t\tvis.set(i);\n\t\t\tdfs(now+1);\n\t\t\tvis.reset(i);\n\t\t}\n}\n\nint main()\n{\n\tn=read();\n\tfor (int i=1;i<=n;i++)\n\t\ta[i]=read(),b[i]=read();\n\tfor (int i=1;i<=n;i++)\n\t\tif (a[i]==1||b[i]==1)\n\t\t{\n\t\t\tvis.set(i);\n\t\t\tdfs(1);\n\t\t\tvis.reset(i);\n\t\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u4ee3\u7801\u7279\u522b\u77ed\uff0c\u4f46\u5f04\u4e0d\u5230$100$\u5206:\n![](https://s2.ax1x.com/2019/04/21/Ei7Wh8.png)\n~~\u6240\u4ee5\u5927\u5bb6\u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u641e\u4e8c\u5206\u56fe\u5427\u3002~~\n## \u4e8c\u5206\u56fe\n\u4e0d\u61c2\u4e8c\u5206\u56fe\uff0c\u53ef\u4ee5\u6765[\u8fd9\u91cc](https://lzsy01-xzy-blog.blog.luogu.org/XZY-1)\u770b\u4e00\u4e0b,\u91cc\u9762\u8be6\u7ec6\u89e3\u91ca\u4e86\u4e8c\u5206\u56fe\uff0c\u5373\u7528\u7f51\u7edc\u6d41\u6c42\u89e3\u6700\u5927\u5339\u914d\u3002  \n\u4e8c\u5206\u56fe\u7684\u9898\u76ee\u91cd\u70b9\u5728\u5efa\u56fe\uff0c\u8fd9\u9053\u9898\u76ee\uff0c\u7531\u4e8e\u6bcf\u4e2a\u6b66\u5668\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u6bcf\u4e2a\u7269\u54c1\u53ea\u6709\u4e00\u4e2a\u6709\u7528\u7684\u5c5e\u6027\u503c\uff0c\u6bcf\u4e2a\u5c5e\u6027\u503c\u4e5f\u53ea\u5bf9\u5e94\u4e00\u4e2a\u6709\u7528\u7684\u7269\u54c1\u3002\u4e8e\u662f\uff0c~~\u8c01\u90fd\u80fd~~\u60f3\u5230\u628a\u5c5e\u6027\u503c\u548c\u7269\u54c1\u8fde\u8fb9\uff0c\u8ba1\u7b97\u6700\u5927\u5339\u914d\u3002\n### \u5efa\u56fe\uff1a\n```cpp\ninline void init()\n{\n    memset(head,-1,sizeof(head));\n    int a,b;n=read();\n    for (int i=1;i<=n;i++)\n    {\n        a=read();b=read();\n        Addedge(a,i);Addedge(b,i);\n    }\n}\n```\n### $work:$\n\u7531\u4e8e\u8981\u662f\u8fde\u7eed\u7684\u5c5e\u6027\u503c\uff0c\u6545\u4ece$1$\u5f00\u59cb\u5339\u914d\uff0c\u76f4\u5230\u5339\u914d\u4e0d\u4e86\u4e3a\u6b62\u3002\n```cpp\nint ans=0;\n    for (int i=1;i<=10000;i++)\n    {\n        now++;\n        if (dfs(i))ans++;\n        else break;\n    }\n    printf(\"%d\\n\",ans);\n```\n\u603b\u4ee3\u7801\uff1a\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint read()\n{\n    int x=0,f=1;char c=getchar();\n    while (c<'0' || c>'9'){if (c=='-')f=-1;c=getchar();}\n    while (c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-48;c=getchar();}\n    return x*f;\n}\n\nconst int MAXN=1000005;\nconst int MAXM=100005;\nint n,id,now;\n\nstruct edge\n{\n    int v,nx;\n}set[4*MAXN];\nint head[MAXM],chk[MAXM],match[MAXN];\n\ninline void Addedge(int u,int v)\n{\n    id++;set[id].v=v;set[id].nx=head[u];\n    head[u]=id;\n}\n\ninline void init()\n{\n    memset(match,-1,sizeof(match));\n    int a,b;n=read();\n    for (int i=1;i<=n;i++)\n    {\n        a=read();b=read();\n        Addedge(a,i);Addedge(b,i);\n    }\n}\n\ninline bool dfs(int u)\n{\n    int v;\n    for (int k=head[u];k>0;k=set[k].nx)\n    {\n        v=set[k].v;\n        if (chk[v]!=now)\n        {\n            chk[v]=now;\n            if ((match[v]==-1)||dfs(match[v]))\n            {\n                match[v]=u;return true;\n            }\n        }\n    }\n    return false;\n}\n\nint main()\n{\n    init();\n    int ans=0;\n    for (int i=1;i<=10000;i++)\n    {\n        now++;\n        if (dfs(i))ans++;\n        else break;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\u6548\u7387\u53ef\u89c2\uff1a\n![](https://s2.ax1x.com/2019/04/21/EiqCY6.png)",
        "postTime": 1555817404,
        "uid": 141348,
        "name": "\u26a1LZSY01_XZY\u26a1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u773c\u770b\u5230\u6b64\u9898\u662f\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u4f46\u662f\u5174\u51b2\u51b2\u7684\u4ea4\u4e0a\u53bb\u4ee3\u7801\u540e\uff0c\u53d1\u73b0T\u4e862\u4e2a\u70b9\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\ntypedef long long ll;\ninline void read (int& s) {\n\ts = 0;\n\tstatic char c = getchar ();\n\twhile (c < '0' || c > '9') c = getchar ();\n\twhile (c >= '0' && c <= '9') s = (s << 3) + (s << 1) + (c & 15), c = getchar ();\n\treturn ;\n}\n\nconst int N = 10003, M = 1000003;\nint n;\nvector <int> c[N];\nint d[M], vis[M];\n\nbool Find (const int x) {\n\tint i, y, k = c[x].size ();\n\tfor (i = 0; i < k; ++i) {\n\t\ty = c[x][i];\n\t\tif (!vis[y]) {\n\t\t\tvis[y] = 1;\n\t\t\tif (!d[y] || Find (d[y])) {\n\t\t\t\td[y] = x;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main () {\n\tread (n);\n\tint i, x, y; for (i = 1; i <= n; ++i) {\n\t\tread (x), read (y);\n\t\tc[x].push_back (i);\n\t\tc[y].push_back (i);\n\t}\n\tfor (i = 1; i < N; ++i) {\n\t\tmemset (vis, 0, sizeof (vis));\n\t\tif (!Find (i)) {\n\t\t\tprintf (\"%d\\n\", i - 1);\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u55ef\uff1f\uff1f\n\n\u4e00\u5f00\u59cb\u4ee5\u4e3a\u662fvector\u5e38\u6570\u5927\uff0c\u4f46\u5f00O2\u540e\u2026\u2026\n\n#### \u4f9d\u7136TLE\n\n\u5f00Ofast\n\n### TLE\n\n![\uff1f\uff1f\uff1f](https://b-ssl.duitang.com/uploads/item/201707/31/20170731092533_uENGa.thumb.700_0.jpeg)\n\n\u4ed4\u7ec6\u60f3\u60f3\uff0c\u7ec8\u4e8e\u53d1\u73b0\u95ee\u9898\uff1a\n\n\u662f[memset0](https://www.luogu.org/space/show?uid=53495)\u7684\u9505\uff01\n\n\u554a\u4e0d\u662f\uff0c\u662fmemset (vis, 0, sizeof (vis));\n\n\u7531\u4e8e\u6bcf\u4e00\u6b21find\u90fd\u8981\u6e05\u7a7a&&\u503c\u57df\u4e0a\u767e\u4e07\uff0c\u6240\u4ee5\u4f1aT\u3002\n\n\u6539\u8fc7\u540e\u5c31\u80fd\u8f7b\u677eAC\u4e86\u3002\n\n\u5177\u4f53\u5b9e\u73b0\uff1a\u8bbe\u4e00\u4e2a\u53d8\u91cfnow\uff0c\u5982\u679cvis\u91cc\u503c\u4e3anow\u5219\u5df2\u8bbf\u95ee\u8fc7\uff0c\u82e5\u4e0d\u662f\u5219\u8d4b\u503c\u4e3anow\u5411\u4e0b\u9012\u5f52\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\ntypedef long long ll;\ninline void read (int& s) {\n\ts = 0;\n\tstatic char c = getchar ();\n\twhile (c < '0' || c > '9') c = getchar ();\n\twhile (c >= '0' && c <= '9') s = (s << 3) + (s << 1) + (c & 15), c = getchar ();\n\treturn ;\n}\n\nconst int N = 10003, M = 1000003;\nint n, now, h[N], tot;\nstruct stu {\n\tint v;\n\tint next;\n}s[M << 1];\n\ninline void add (const int x, const int y) {\n\t++tot;\n\ts[tot].v = y;\n\ts[tot].next = h[x];\n\th[x] = tot;\n\treturn ;\n}\n\nint d[M], vis[M];\n\nbool Find (const int x) {\n\tint i, y; for (i = h[x]; i; i = s[i].next) {\n\t\ty = s[i].v;\n\t\tif (vis[y] != now) {\n\t\t\tvis[y] = now;\n\t\t\tif (!d[y] || Find (d[y])) {\n\t\t\t\td[y] = x;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main () {\n\tread (n);\n\tint i, x, y; for (i = 1; i <= n; ++i) {\n\t\tread (x), read (y);\n\t\tadd (x, i);\n\t\tadd (y, i);\n\t}\n\tfor (i = 1; i < N; ++i) {\n\t\t++now;\n\t\tif (!Find (i)) {\n\t\t\tprintf (\"%d\\n\", i - 1);\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1569472622,
        "uid": 31193,
        "name": "\u68a7\u6850\u706f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "## \u4e8c\u5206\u56fe\u5339\u914d\n\n\u6211\u4eec\u90fd\u80fd\u591f\u60f3\u5230\u8ba9\u6bcf\u4e2a\u88c5\u5907\u548c\u5b83\u7684\u5c5e\u6027\u53bb\u8fde\u8fb9.\n\n\u9996\u5148\u63d0\u4f9b\u4e00\u79cd\u521d\u6b65\u60f3\u6cd5\uff1a\n\n\u5982\u679c\u6211\u4eec\u95ed\u7740\u773c\u53bb\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\u7684\u6700\u5927\u5339\u914d\uff0c\u90a3\u4e48\u6211\u4eec\u5f97\u5230\u7684\u7b54\u6848\u5f88\u663e\u7136\u662f\u9519\u8bef\u7684.\u56e0\u4e3a\u6211\u4eec\u5728\u5f97\u5230\u6700\u5927\u5339\u914d\u7684\u65f6\u5019\u6ca1\u6709\u8003\u8651\u4ece$1$\u5230$n$\u7684\u8fde\u7eed\u6027\u3002\n\n\u90a3\u6211\u4eec\u8be5\u600e\u4e48\u529e\u5462\uff1f\u7741\u5f00\u773c\u518d\u53bb\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\u7684\u6700\u5927\u5339\u914d\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u4e00\u4e2a\u7b54\u6848\uff0c\u6211\u4eec\u53ea\u5bf9\u5c0f\u4e8e\u7b49\u4e8e$mid$\u7684\u5c5e\u6027\u53bb\u8dd1\u6700\u5927\u5339\u914d\uff0c\u6700\u540e\u770b\u770b\u5339\u914d\u7684\u70b9\u7684\u4e2a\u6570\u662f\u5426\u7b49\u4e8emid,\u5982\u679c\u7b49\u4e8e\u7684\u8bdd\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u90fd\u5339\u914d\u4e0a\uff0c\u90a3\u5c31\u6269\u5927$l$\uff0c\u5426\u5219\u5c31\u7f29\u5c0f$r$\u3002\n\n\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6(\u5728Dinic\u7b97\u6cd5\u4e0b)\u662fO($n \\sqrt{m}log(k)$)\u5176\u4e2d$k$\u4e3a10000.\u65f6\u95f4\u590d\u6742\u5ea6\u53ea\u80fd\u8fc7\u524d\u51e0\u4e2a\u6570\u636e\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a\n\n\u6211\u4eec\u4e8c\u5206\u4e4b\u6240\u4ee5\u4f1a\u8d85\u65f6\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u505a\u4e86\u5f88\u591a\u6b21\u65e0\u7528\u7684\u6700\u5927\u5339\u914d.\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u5373\u5bf9\u6bcf\u4e00\u4e2a\u5c5e\u6027\u70b9\u4f9d\u6b21\u8fdb\u884c\u914d\u5bf9\u3002\u56e0\u4e3a\u6211\u4eec\u662f\u5c06\u5c5e\u6027\u70b9\u4ece\u5927\u5230\u5c0f\u4f9d\u6b21\u8fdb\u884c\u5339\u914d\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u8003\u8651\u4f1a\u6709\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\uff0c\u5f53\u6211\u4eec\u67d0\u4e00\u6b21\u65e0\u6cd5\u5339\u914d\u5c5e\u6027\u70b9$i$\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u7b54\u6848$i-1$.\n\n\u8fd8\u6709\u5308\u7259\u5229\u7b97\u6cd5\u5b83\u53ea\u7528\u5efa\u5355\u5411\u8fb9\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u66f4\u65b0\u7684\u65f6\u5019\u90fd\u53ea\u4f1a\u7528\u5230\u4e00\u4e2a\u8fb9\u4e0a\u7684\u70b9\u6765\u66f4\u65b0\uff0c\u7528\u4e0d\u5230\u53e6\u4e00\u8fb9\u4e0a\u7684\u70b9\u3002\n\n\u53e6\u5916$n=10^6$\u7684\u65f6\u5019\u6211\u4eec\u5c31\u4e0d\u80fd\u6bcf\u6b21memset\u4e86\uff0c\u5426\u5219\u4e5f\u4f1a\u8d85\u65f6\uff0c\u6211\u4eec\u8bb0\u5f55\u4e00\u4e0b\u65f6\u95f4\u70b9\uff0c\u5728\u904d\u5386\u7684\u65f6\u5019\u770b\u4e00\u4e0b\u65f6\u95f4\u70b9\u662f\u4e0d\u662f\u51b2\u7a81\u4e86\u5373\u53ef\u3002\n\n\u8fd8\u6709\u4e00\u5b9a\u8981\u5f00\u5927\u6570\u7ec4 ~~\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u4f1a\u77e5\u9053~~\n\n\u732e\u4e0a\u6211~~\u4e11\u964b~~\u7684\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,a,b,tot,now;\nconst int M=10100,N=1100000;\nint head[M],vis[N],k[N];\nstruct bian\n{\n\tint to,nt;\n}e[N<<1];\nvoid add(int f,int t)\n{\n\te[++tot].to=t;\n\te[tot].nt=head[f];\n\thead[f]=tot;\n}\nint read()\n{\n\tchar ch;int x=0,f=1;\n\twhile(!isdigit(ch=getchar()))\n\t{(ch=='-')&&(f=-f);}\n\twhile(isdigit(ch))\n\t{x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    return x*f;\n}\nint find(int x)\n{\n\tfor(int i=head[x];i;i=e[i].nt)\n\t{\n\t\tif(vis[e[i].to]==now)continue;\n\t\tvis[e[i].to]=now;\n\t\tif(!k[e[i].to]||find(k[e[i].to]))\n\t\t{\n\t\t\tk[e[i].to]=x;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\ta=read(),b=read();\n\t\tadd(a,i);add(b,i);\n\t}\n\tfor(int i=1;i<=10001;++i)\n\t{\n\t\tnow=i;\n\t\tif(!find(i))\n\t\t{\n\t\t\tcout<<i-1;\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n\n",
        "postTime": 1568117556,
        "uid": 153843,
        "name": "wljss",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "~~\u5e76\u67e5\u96c6\u597d\u554a~~\n\n\u628a\u6bcf\u4e2a\u88c5\u5907\u7684\u4e24\u4e2a\u5c5e\u6027$a,b$\u770b\u6210\u8fb9$(a,b)$\uff0c\u4f1a\u5f62\u6210\u4e00\u4e9b\u8fde\u901a\u5757\n\n\u5982\u679c\u8fde\u901a\u5757\u5927\u5c0f\u4e3a$k$ \uff0c\u65e0\u73af\uff08\u6811\uff09\uff0c\u7b54\u6848\u662f$k\u22121$\uff0c\u6709\u73af\u5c31\u662f$k$\n\n\u8003\u8651\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u8fde\u901a\u5757\u3002\n\n\u5408\u5e76\u5e76\u67e5\u96c6$x,y$\uff0c\u82e5$x\\not =y$\uff0c\u628a\u6570\u5b57\u5c0f\u7684\u7236\u4eb2\u8bbe\u4e3a\u6570\u5b57\u5927\u7684\uff0c\u7ed9\u6570\u5b57\u5c0f\u7684\u6253\u4e0a$vis$ \u6807\u8bb0\u3002\u82e5$x=y$\uff0c\u7ed9\u6811\u6839\u6253\u4e0a\u6807\u8bb0\u3002\n\n\u8fd9\u6837\u7ef4\u62a4\u7684\u5e76\u67e5\u96c6\u6709\u5f88\u597d\u7684\u6027\u8d28\uff1a\u8981\u4e48\u6240\u6709$vis=1$ \uff0c\u8981\u4e48\u9664\u6839\uff08\u6700\u5927\u70b9\uff09\u5916$vis=1$ \u3002\u4e8e\u662f\u6700\u540e\u904d\u5386\u4e00\u4e0b\u8f93\u51fa\u7b54\u6848\u5c31\u884c\u4e86.\n\n`\u4ee3\u7801\u5e94\u8be5\u80fd\u81ea\u5df1\u5199\u4e86`",
        "postTime": 1566622395,
        "uid": 126772,
        "name": "\u53f6\u67ab",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u8fd9\u4e2a\u9898\u76ee\u5176\u5b9e\u7279\u522b\u7b80\u5355\u3002\u6bcf\u79cd\u653b\u51fb\u529b\u53ef\u4ee5\u7531\u6709\u4e2a\u6b66\u5668\u63d0\u4f9b\u3002\u6bcf\u4e2a\u6b66\u5668\u4ec5\u4ec5\u6709\u4e24\u4e2a\u5c5e\u6027\uff0c\u5c5e\u6027\u548c\u6b66\u5668\u662f\u4e8c\u5bf9\u4e00\uff08\u5176\u5b9e\u5b8c\u5168\u53ef\u4ee5\u591a\u5bf9\u4e00\uff09\u3002\u9898\u76ee\u8981\u6c42\u653b\u51fb\u529b\u4ece\u4e00\u5f00\u59cb\u5c3d\u53ef\u80fd\u5927\uff0c\u6240\u4ee5\u5c31\u662f\u7ed9\u6bcf\u79cd\u653b\u51fb\u529b\u627e\u4e2a\u6b66\u5668\u3002\u770b\u6700\u591a\u5339\u914d\u51e0\u4e2a\u3002\u5b8c\u5168\u53d8\u6210\u4e86\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\u8fd9\u6837\u4e8c\u5206\u56fe\u5de6\u7aef\u70b9\u5c31\u662f\u653b\u51fb\u529b\u8303\u56f4\uff0c\u53f3\u7aef\u70b9\u5c31\u662f\u6b66\u5668\u7f16\u53f7\u8303\u56f4\u3002\u8dd1\u4e00\u8fb9\u6700\u5927\u5339\u914d\u5c31\u5b8c\u4e8b\u513f\u4e86\u3002\u5bf9\u4e8e\u6837\u4f8b\u800c\u8a00\uff0c\u5de6\u8fb9\u8282\u70b9\u4e3a\uff1a1,2,3,4,5.\n\u53f3\u8fb9\u8282\u70b9\u4e3a\uff1a1\uff08A\uff09,2\uff08B\uff09,3\uff08c\uff09.\uff08\u6b66\u5668\u7f16\u53f7\uff09\u3002\u7136\u540e\u4ece\u6bcf\u79cd\u653b\u51fb\u529b\u5411\u6b66\u5668\u8fde\u8fb9\u3002\u53d8\u4e3a\uff1a1->(A);2->(A);2->(B);3->(B);4->(C);5->(c);\u7a0b\u5e8f\u4e2d\u5c06\u53f3\u7aef\u70b9\u8fdb\u884c\u4e86\u5904\u7406\uff0c\u770b\u4ee3\u7801\u6ce8\u91ca\u3002\n\n```c\n#include<stdio.h>\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#define MAXN  1010005\nusing namespace std;\n\nvector<int> G[10005];    //\u5de6\u7aef\u70b9\u662f\u653b\u51fb\u529b\u7684\u8303\u56f4\uff0c\u6700\u5927\u4e3a10000\uff0c\u6240\u4ee5\u5f00\u621010005\u5c31\u591f\u4e86\nbool vis[MAXN];                //\u53f3\u7aef\u70b9\u7684\u8303\u56f4<=1000000\uff0c\u4f46\u662f\u5bf9N\u7684\u7f16\u53f7\u5e94\u8be5\u52a0\u4e0a10000.\u5c31\u662f1010000\nint vv[MAXN];                   //\u548c\u53f3\u7aef\u70b9\u5339\u914d\u7684\u5de6\u7aef\u70b9\u7f16\u53f7\nint maxn;                             //\u8f93\u5165\u6570\u636e\u65f6\u5904\u7406\u51fa\u653b\u51fb\u529b\u7684\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f\u5de6\u7aef\u70b9\u8303\u56f4\u7684\u6700\u5927\u503c\nint n;                                            //\u5de6\u7aef\u70b9\u8303\u56f4\u4e3a[1,maxn]\n\nbool match(int u)         //\u5339\u914d\u6a21\u677f\u5c31\u4e0d\u8bf4\u4e86\n{\n    for(int i=0;i<G[u].size();i++)\n    {\n        int v=G[u][i];\n        if(vis[v])\n            continue;\n        vis[v]=true;\n        if(!vv[v]||match(vv[v]))\n        {\n            vv[v]=u;\n            return true;\n        }\n    }\n    return false;\n}\n\nvoid Km()               //\u5339\u914d\u6a21\u677f\n{\n    memset(vv,0,sizeof(vv));\n    int sum=0;\n    for(int i=1;i<=maxn;i++)\n    {\n        memset(vis,0,sizeof(vis));\n        if(match(i))\n            sum++;\n        else\n            break;\n    }\n    printf(\"%d\\n\",sum);\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    int uu,vv;\n    maxn=0;\n    for(int i=1;i<=n;i++)                          //\u4ece\u653b\u51fb\u529b\u5411\u6b66\u5668\u8fde\u4e00\u6761\u6709\u5411\u8fb9\n    {\n        scanf(\"%d %d\",&uu,&vv);\n        maxn=max(maxn,uu);\n        maxn=max(maxn,vv);\n        G[uu].push_back(i+10000);       //\u7b2ci\u4ef6\u6b66\u5668\u7f16\u53f7\u4e3a10000+i\n        G[vv].push_back(i+10000);\n    }\n    Km();\n    return 0;\n}\n\n```\n",
        "postTime": 1569508203,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a$n$\u4e2a\u88c5\u5907\uff0c\u6bcf\u4e2a\u88c5\u5907\u6709\u4e24\u4e2a\u5c5e\u6027\u503c\uff0c\u6bcf\u79cd\u88c5\u5907\u53ea\u80fd\u4f7f\u7528\u5176\u4e2d\u4e00\u4e2a\u5c5e\u6027\uff0c\u5e76\u4e14\u6bcf\u4e2a\u88c5\u5907\u53ea\u80fd\u7528\u4e00\u6b21\u3002\u73b0\u5728\u8981\u4ece\u5c5e\u6027$1$\u5f00\u59cb\uff0c\u4f9d\u6b21\u4f7f\u7528\u88c5\u5907\uff0c\u95ee\u6700\u591a\u80fd\u4f7f\u7528\u591a\u5c11\u4e2a\u3002\n\n\u9898\u89e3\uff1a\n\n\u4e8c\u5206\u56fe\u3002~~\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u662f\u56e0\u4e3a\u4ece\u8bd5\u70bc\u573a\u8fdb\u6765\u624d\u60f3\u5230\u7684~~\n\n\u5efa\u6a21\u5f88\u5de7\u5999\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u5c5e\u6027\u4e3a\u5de6\u7aef\u70b9\uff08\u5c5e\u6027\u503c$\\le n$\uff09\uff0c\u88c5\u5907\u4e3a\u53f3\u7aef\u70b9\u505a\u4e8c\u5206\u56fe\u5339\u914d\u3002\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u662f\u8fd9\u6837\u7684\u3002\n\n```\n3\n1 2\n3 2\n4 5\n```\n\n\n\n![P1640_0](https://cdn.luogu.com.cn/upload/pic/55765.png)\n\n\u663e\u7136\uff0c$4$,$5$\u4e0d\u53ef\u80fd\u88ab\u4f7f\u7528\uff0c\u6240\u4ee5\u7565\u53bb\u3002\n\n\u7136\u540e\u4ece$1$\u5230$n$\uff0c\u6309\u5c5e\u6027\u503c\u5339\u914d\uff0c\u8fd9\u91cc\u5339\u914d\u7684\u610f\u4e49\u5df2\u7ecf\u5f88\u660e\u663e\u4e86\u3002\u5f53\u5c5e\u6027$i$\u65e0\u6cd5\u5339\u914d\u65f6\uff0c\u8f93\u51fa$i-1$\n\n\u6211\u4eec\u7684\u7a0b\u5e8f\u5df2\u7ecf\u6210\u5f62\u4e86\uff0c\u957f\u8fd9\u6837\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint cc,to[2002000],net[2002000],fr[2002000];\nint fa[2002000],vis[2002000],n,a,b;\nvoid addedge(int u,int v)\n{\n    if (u>n) return ;\n    cc++;\n    to[cc]=v;net[cc]=fr[u];fr[u]=cc;\n}\nint findgf(int x)//\u5308\u7259\u5229\n{\n    if (vis[x]) return false;\n    vis[x]=true;\n    for (int i=fr[x];i;i=net[i])\n    {\n        if (fa[to[i]])\n        {\n            if (findgf(fa[to[i]]))\n            {\n                fa[to[i]]=x;\n                return true;\n            }\n        }\n        else\n        { \n            fa[to[i]]=x;\n            return true;\n        }\n    }\n    return false;\n}\nint main()\n{\n    cin>>n;\n    for (int i=1;i<=n;i++)\n    {\n        cin>>a>>b;\n        addedge(a,n+i);\n        addedge(b,n+i);\n    }\n    for (int i=1;i<=n+1;i++)\n    {\n        for (int j=1;j<=n;j++)\n          vis[j]=false;\n        if (!findgf(i)) {cout<<i-1<<endl;break;}\n    }\n    return 0;\n}\n```\n\n\u8fd9\u91cc\u56e0\u4e3a$for$\u5faa\u73af\u6e05\u7a7a\u6570\u7ec4\uff0c$TLE$\u4e86\u3002\n\n\u56de\u60f3\u4e00\u4e0b\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u6211\u4eec\u60f3\u5230\u4e86\u4e00\u79cd\u4f18\u5316\u3002\n\n**\u5f53\u67d0\u4e00\u4e2a\u5df2\u7ecf\u8fde\u63a5\u67d0\u4e2a\u70b9\u7684\u5de6\u7aef\u70b9\u5df2\u7ecf\u4e0d\u53ef\u80fd\u8fde\u63a5\u5176\u4ed6\u53f3\u7aef\u70b9\u65f6\uff0c\u53ef\u4ee5\u628a$vis$\u76f4\u63a5\u7f6e$true$\uff0c\u5426\u5219\uff0c\u5728\u9000\u51fa$dfs$\u65f6\uff0c\u5c06\u5176\u7f6e$false$\u3002**\u8fd9\u6837\u4fbf\u4e0d\u7528\u6bcf\u6b21\u521d\u59cb\u5316\u3002\n\n![P1640_1](https://cdn.luogu.com.cn/upload/pic/55766.png)\n\n\u8fd9\u4e2a\u4f18\u5316\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u5feb\u591a\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint cc,to[2002000],net[2002000],fr[2002000];\nint fa[2002000],vis[2002000],n,a,b;\nvoid addedge(int u,int v)\n{\n    if (u>n) return ;\n    cc++;\n    to[cc]=v;net[cc]=fr[u];fr[u]=cc;\n}\nint findgf(int x)//\u5308\u7259\u5229\n{\n    if (vis[x]) return false;\n    vis[x]=true;\n    for (int i=fr[x];i;i=net[i])\n    {\n        if (fa[to[i]])\n        {\n            if (findgf(fa[to[i]]))\n            {\n                fa[to[i]]=x;\n                vis[x]=false;\n                return true;\n            }\n        }\n        else\n        { \n            fa[to[i]]=x;\n            vis[x]=false;\n            return true;\n        }\n    }\n    return false;\n}\nint main()\n{\n    cin>>n;\n    for (int i=1;i<=n;i++)\n    {\n        cin>>a>>b;\n        addedge(a,n+i);\n        addedge(b,n+i);\n    }\n    for (int i=1;i<=n+1;i++)\n    {\n        if (!findgf(i)) {cout<<i-1<<endl;break;}\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1554269793,
        "uid": 73990,
        "name": "fmj_123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "# \u5199\u5728\u524d\u9762\uff1a\n\u5982\u60f3\u83b7\u53d6\u66f4\u4f73\u9605\u8bfb\u6548\u679c\uff0c\u8bf7\u70b9\u51fb[\u8fd9\u91cc](https://blog.csdn.net/kkkksc03/article/details/88604047)\uff0c\u4efb\u4f55\u7591\u95ee\u6b22\u8fce\u79c1\u4fe1\u4f5c\u8005\uff01\n\n# \u9898\u76ee\u94fe\u63a5\uff1a\nhttps://www.luogu.org/problemnew/show/P1640\n# \u5206\u6790\uff1a\n\u8fd9\u9053\u9898\u7528\u4e8c\u5206\u56fe\u6765\u89e3\u51b3\u5373\u53ef.\u5e94\u8be5\u53ef\u4ee5\u4f5c\u4e3a\u7f51\u7edc\u6d41\u4e2d\u7684\u6a21\u677f\u9898\u6765\u98df\u7528\uff0c\n\u6bcf\u4e00\u4e2a\u6b66\u5668\u6709\u4e24\u4e2a\u5c5e\u6027\uff0c\u4f46\u662f\u53ea\u80fd\u53d6\u4e00\u4e2a\u7528\uff0c\u7531\u6b64\u6211\u4eec\u4fbf\u53ef\u4ee5\u60f3\u5230\u4e0e\u4e8c\u5206\u56fe\u6302\u94a9\u3002\n\n> \u4e8c\u5206\u56fe\u5339\u914d\u5f53\u4e2d\uff0c\u4e00\u4e2a\u70b9\u53ea\u80fd\u548c\u4e00\u4e2a\u70b9\u5339\u914d\n\n\n\u95ee\u9898\u5f53\u4e2d\u8981\u4ece\u5c0f\u5230\u5927\u4f7f\u7528\u6240\u6709\u5c5e\u6027\uff0c\u6240\u4ee5\u80af\u5b9a\u8981\u6709\u4ee51\u202610000\u5c5e\u6027\u4e3a\u70b9\u7684\u4e00\u4fa7\n\n\u628a\u88c5\u5907\u653e\u5728\u53e6\u4e00\u4fa7\uff0c\u88c5\u5907\u548c\u5b83\u7684\u4e24\u4e2a\u5c5e\u6027\u8fde\u8fb9.\n\n(\u4e5f\u5c31\u76f8\u5f53\u4e8e\u4ece\u5de6\u5230\u53f3\u4e00\u8fde\uff0c\u518d\u4ece\u53f3\u5230\u5de6\u4e00\u8fde\uff0c\u624d\u76f8\u5f53\u4e8e\u7528\u4e86\u4e24\u4e2a\u5c5e\u6027\u3002\n\n\u4ece\u5c0f\u5230\u5927\u5339\u914d\u5c5e\u6027\u70b9\uff0c\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u5fc5\u987b\u8981\u6bcf\u4e2a\u6280\u80fd\u4f9d\u6b21\u91ca\u653e\uff0c\u6240\u4ee5\u8981\u6709else break\u73af\u8282\uff0c\u8fd9\u662f\u4e00\u4e2a\u7f51\u7edc\u6d41\u4e8c\u5206\u56fe\u4e2d\u9700\u8981\u91cd\u70b9\u6ce8\u610f\u7684\u73af\u8282\uff0c\u6709\u65f6\u8981\u52a0\u800c\u6709\u65f6\u4e0d\u8981\uff0c\u8fd9\u91cc\u8981\u52a0\u4e0a\u8fd8\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u3002\n\n\n# \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<cmath>\nusing namespace std;\nvector<int>v[10005];\nint vis[1000005],link[1000005];\nint t;\nbool find(int x)//\u4e8c\u5206\u56fe\u6a21\u677f\uff0c\u7b80\u5355\u800c\u4e14\u7406\u89e3\u4e5f\u4e0d\u96be\uff0c\u5899\u88c2\u5efa\u8bae\u501f\u9274\n{\n    for(int i=0;i<v[x].size();i++)\n    {\n        int p=v[x][i];\n        if(vis[p]!=t)\n        {\n            vis[p]=t;\n            if(link[p]==0||find(link[p]))\n            {\n                link[p]=x;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int maxf=0;\n    for(int i=1;i<=n;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        v[a].push_back(i);\n        v[b].push_back(i);\n    } \n    int cnt=0;\n    for(int i=1;i<=n;i++)\n    {\n        t++;\n        if(find(i))\n        {\n            cnt++;\n        }\n        else\n        break;\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n} \n```\n\n",
        "postTime": 1552736212,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211yy\u4e86\u4e00\u4e2a\u8d39\u7528\u6d41\u7684\u505a\u6cd5\n\u9996\u5148\u5efa\u56fe\u5f88\u663e\u7136\n>\u6e90\u70b9\u8fde\u88c5\u5907\u6d41\u91cf\u4e3a1\u8d39\u7528\u4e3a0  \n\u88c5\u5907\u5411\u6bcf\u4e2a\u80fd\u653b\u51fb\u5230\u7684\u70b9\u5efa\u4e00\u6761\u6d41\u91cf\u4e3a1\u8d39\u7528\u4e3a\u653b\u51fb\u70b9\u7f16\u53f7\u7684\u8fb9  \n\u80fd\u653b\u51fb\u5230\u7684\u70b9\u518d\u5411\u6c47\u70b9\u8fde\u8fb9\n\n\u8fd9\u6837\u7684\u8bdd\u8dd1\u4e00\u4e2a\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u6b21\u8dd1\u7684\u6d41\u90fd\u662f\u5411\u53ef\u884c\u7684\u70b9\u4e2d\u5e8f\u53f7\u5c3d\u53ef\u80fd\u5c0f\u7684\u6d41  \n\u6700\u540e\u4ece\u653b\u51fb\u70b91\u5f00\u59cb\u626b\u4e00\u904d\uff0c\u770b\u54ea\u4e2a\u8fb9\u7b2c\u4e00\u4e2a\u6ca1\u6d41\u91cf\uff0c\u7b54\u6848\u5c31\u662f\u90a3\u4e2a\u7f16\u53f7-1.",
        "postTime": 1519308737,
        "uid": 28053,
        "name": "aface0427",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u5230\u6211\u535a\u5ba2\u770b\uff1a http://www.cnblogs.com/bingdada/p/7710958.html\n\n\n\u601d\u8def\uff1a\n\n\n\u4e00\u5f00\u59cb\u770b\u9898\u76ee\u8fd8\u4e0d\u662f\u7279\u522b\u660e\u767d\uff0c\u540e\u6765\u591a\u770b\u4e86\u51e0\u904d\uff0c\u7136\u540e\u5c31\u60f3\u5230\u770b\u4e8c\u5206\u56fe\uff08\u8fd9\u9898\u662f\u968f\u673a\u8df3\u7684\uff09\uff0c\u5bf9\u4e8e\u8fd9\u9898\u6765\u8bf4\uff0c\u627e\u56fe\u4e24\u8fb9\u7684\u5bf9\u5e94\u5173\u5fc3\u662f\u5f88\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u4e00\u4e2a\u6b66\u5668\u6709\u4e24\u4e2a\u5c5e\u6027\u5374\u53ea\u80fd\u88ab\u4f7f\u7528\u4e00\u6b21\uff0c\u800c\u4e14\u9898\u76ee\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u70b9\uff0c\u5c31\u662f\u5c5e\u6027\u5fc5\u987b\u662f\u9012\u589e\u7684\uff0c\u6240\u4ee5\u4e8c\u5206\u56fe\u4e24\u8fb9\u70b9\u96c6\u6240\u5bf9\u5e94\u5173\u7cfb\u662f\u5de6\u8fb9\u5c5e\u6027\u987a\u5e8f\u5bf9\u5e94\u53f3\u8fb9\u6b66\u5668\u6240\u5305\u542b\u7684\u5c5e\u6027\uff0c\u5bf9\u4e8e\u7b2ci\u4e2a\u6b66\u5668\u6765\u6240\uff0c\u5982\u679c\u5b83\u7684\u5c5e\u6027\u4e3aa,b \uff0c \u5219\u6211\u4eec\u5c31\u5efa\u4e24\u6761\u8fb9\uff0c\u7b2c\u4e00\u6761\u662f  a-->i    \uff0c\u7b2c\u4e8c\u6761\u662fb-->i\u3002\n\n\n\u5230\u6700\u540e\u8fb9\u5efa\u597d\u540e\uff0c\u8dd1\u4e00\u904d\u5308\u7259\u5229\u7b97\u6cd5\u6c42\u6700\u5927\u5339\u914d\u5c31\u53ef\u4ee5\uff0c\u5728\u6c42\u6700\u5927\u5339\u914d\u65f6\u5982\u679c\u51fa\u73b0\u5c5e\u6027\u65ad\u5c42\uff0c\u5219\u76f4\u63a5\u9000\u51fa\uff0c\u8fd4\u56de\u5f53\u65f6\u7684\u6700\u5927\u5339\u914d\u6570\u3002\n\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\uff0c\u6709\u95ee\u9898\u53ef\u4ee5\u7559\u8a00\u3002\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define N 1000009\n#define M 2000009\nusing namespace std;\nint en;\nstruct edge{\n    int e;\n    edge *next;\n}*v[N],ed[M];\nvoid add_edge(int s,int e){                        //\u524d\u5411\u661f\u5b58\u8fb9 \n    en++;\n    ed[en].next = v[s],v[s] =ed+en,v[s]->e =e;\n}\nint result[N];\nbool use[N];\nbool dfs(int now){\n    for(edge *e = v[now];e;e=e->next)\n      if(!use[e->e]){\n          use[e->e] = true;\n          if(!result[e->e] || dfs(result[e->e])){\n              result[e->e] = now;\n              return true;\n          }\n      }\n    return false;\n}\nint xiongyali(){\n    memset(result,0,sizeof(result));\n    int ans = 0;\n    for(int a = 1; a <= 10000; a++){\n        memset(use,0,sizeof(use));\n        if(dfs(a))ans++;                //\u5f53\u51fa\u73b0\u67d0\u70b9\u4e0d\u80fd\u5339\u914d\u65f6\uff0c\u8bf4\u660e\u6700\u5927\u5339\u914d\u6570\u5c31\u4e3a\u5f53\u524d\u72b6\u6001 \n        else break;\n    }\n    return ans;\n}\nint read(){\n    int x = 0;\n    char ch = getchar();\n    while(ch < '0' || ch > '9')ch = getchar();\n    while(ch >= '0' && ch <= '9'){\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x;\n}\nint main(){\n    int n =read();\n    for(int i = 1; i <= n; i++){\n        int u =read(),v = read();\n        add_edge(u,i);\n        add_edge(v,i);\n    }\n    int ans = xiongyali();\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1508667297,
        "uid": 32526,
        "name": "\u9648\u65b0\u6708",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "\u5173\u4e8e\u6700\u4e0b\u9762\u7684\u5e76\u67e5\u96c6\u89e3\u6cd5\uff0c\u5176\u5b9e\u6709\u4e00\u4e2a\u5c0f\u95ee\u9898\n\n2\n1 45\n2 100\n\u8fd9\u4e2a\u6837\u4f8b\u8dd1\u51fa\u6765\u662f1 \uff0c\u4f46\u663e\u7136\uff0cans=2\n\n\u8fd9\u4e2a\u9898\u7684\u5e76\u67e5\u96c6\u8bc1\u660e\u5176\u5b9e\u4e0d\u96be\uff0c\u81ea\u5df1\u63a8\u63a8\u4e5f\u80fd\u63a8\u51fa\u6765\uff1a \u73af\u4e0a\u7684\u5c5e\u6027\u503c\u4e0d\u4f1a\u88ab\u88c5\u5907\u9650\u5236\u4f4f\uff0c\u800c\u94fe\u4e0a\u7684\u53ef\u4ee5\u4efb\u9009\u4e00\u4e2a\u70b9\uff0c\u5373\u4e00\u4e2a\u5c5e\u6027\n\n\u663e\u7136\uff0c\u5bf9\u4e8en\u4e2a\u88c5\u5907\uff0c\u6211\u4eec\u6700\u591a\u6253\u5230n\u6b21\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u5927\u4e8en\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u662f\u53ef\u4ee5\u4e0d\u53bb\u8003\u8651\u7684\n\n\u56e0\u6b64\uff0c\u53ef\u4ee5\u9009\u62e9\u820d\u5f03\u8fd9\u4e2a\u70b9\uff0c\u6765\u8ba9\u94fe\u4e0a\u4efb\u610f\u4e00\u4e2a\u70b9\u90fd\u53ef\u4ee5\u4f7f\u7528\n\n\u56e0\u6b64\u5982\u679c\u6709\u4e00\u4e2a\u88c5\u5907\u7684\u67d0\u4e2a\u5c5e\u6027>n\uff0c\u53ef\u4ee5\u820d\u5f03\u5b83\uff0c\u4f7f\u8fd9\u4e2a\u94fe\u6210\u4e3a\u73af\uff0c\u53c8\u6216\u8005\u50cf\u697c\u4e0b\u90a3\u6837\u76f4\u63a5\u8fde\u52300\u4e0a\n\n\uff08\u56e0\u4e3a\u90a3\u4e2aa\u6216\u662fb\u592a\u5927\u4e86\uff0c\u627e\u5e76\u67e5\u96c6\u7684\u7236\u4eb2\u76f4\u63a5\u627e\u5230\u4e860\uff09\n\n\u697c\u4e0b\u7684\u95ee\u9898\u4e5f\u6b63\u5728\u8fd9\u91cc\uff0c\u4ed6\u7684\u521d\u59cb\u5316\u91cc\u5e76\u6ca1\u6709\u628a0\u7684num\u8d4b\u4e3a1\n\n\u8fd9\u5bfc\u81f4\u4e86\u4e0a\u9762\u7684\u6837\u4f8b\u6ca1\u6709\u51fa\u6765\n\n\u5c3d\u7ba1\u6211\u7533\u8bc9\u4e86\u597d\u51e0\u6b21\uff0c\u4f46\u90fd.....\n\n\u6240\u4ee5\uff0c\u8fd9\u662f\u4fee\u6539\u7684\u4ee3\u7801\uff1a\n\n\uff08\u8d34\u51fa\u6765\u662f\u4e0d\u662f\u6d89\u5acc\u6284\u88ad\uff1f\u53ea\u628a\u6539\u7684\u90a3\u53e5\u8bdd\u653e\u51fa\u6765\u597d\u4e86\uff09\n\n\u7b2c21\u884c\uff1a    for (int i=0; i<=n+1; ++i) num[i]=1;\n\n\u4e8b\u5b9e\u4e0a\u6211\u5728\u535a\u5ba2\u4e0a\u89c1\u8fc7\u548c\u697c\u4e0b\u4e00\u6bdb\u4e00\u6837\u7684\u9898\u89e3\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u4e00\u4e2a\u4eba\n",
        "postTime": 1499416498,
        "uid": 35718,
        "name": "MloVtry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "### \u9898\u610f\r\n\r\n[Link](https://www.luogu.com.cn/problem/P1640)\r\n\r\n### Sol\r\n\r\n\u7ed9\u4e2a\u5176\u4ed6\u9898\u89e3\u90fd\u6ca1\u7ed9\u51fa\u8fc7\u7684\u65b9\u6cd5:\u4e8c\u5206\u7b54\u6848\u3002\r\n\r\n\u7136\u540e\u600e\u4e48 check \u5462\uff1f\r\n\r\n\u770b [\u8fd9\u4e2a\u5e16\u5b50](https://www.luogu.com.cn/discuss/501132)\u3002\r\n\r\n~~\uff08\u5b8c\uff09~~\r\n\r\n-----\r\n\r\n\u89e3\u6cd5\uff1a\r\n\r\n\u62bd\u8c61\u6210\u56fe\u8bba\u95ee\u9898\uff1a\u7ed9\u5b9a\u65e0\u5411\u56fe\uff0c\u8bd5\u7ed9\u8fb9\u52a0\u4e0a\u65b9\u5411\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u5165\u5ea6\u81f3\u5c11\u4e3a 1\u3002\r\n\r\n\u4e8c\u5206\u7b54\u6848\uff0c\u8bbe\u4e8c\u5206\u5230\u7684\u7b54\u6848\u662f $u$\u3002\r\n\r\n\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u82e5\u4e24\u4e2a\u8282\u70b9\u90fd\u5927\u4e8e $u$\uff0c\u8df3\u8fc7\u4e4b\u3002\r\n\r\n\u82e5\u4e24\u4e2a\u8282\u70b9\u4ec5\u4e00\u4e2a\u5927\u4e8e $u$\uff0c\u5219\u6307\u5411\u5c0f\u4e8e $u$ \u7684\u70b9\uff0c\u8fd9\u4e2a\u70b9\u6210\u4e3a \u201c\u81ea\u7531\u70b9\u201d\u3002\r\n\r\n\u7136\u540e\u8fde\u63a5\u6240\u6709\u5269\u4e0b\u7684\u8fb9\u3002\r\n\r\n\u82e5\u6700\u540e\u5b58\u5728\u6ca1\u6709\u81ea\u7531\u70b9\u7684\u6811\uff0c\u90a3\u4e48\u4e0d\u5408\u6cd5\uff0c\u5426\u5219\u5408\u6cd5\u3002\u8bc1\u660e\u663e\u7136\u3002\r\n\r\n\u590d\u6742\u5ea6 $O(n\\log m\\alpha(n))$\uff0c\u5176\u4e2d $m$ \u662f\u8282\u70b9\u6570\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u7684\u5c5e\u6027\u503c\u3002\r\n\r\n### Code\r\n\r\n\u5927\u6982\u662f\u56e0\u4e3a\u6211 sb \u4e00\u6837\u52a8\u6001\u5f00\u5e76\u67e5\u96c6\u6240\u4ee5\u8981\u5f00 O2\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u5565 O2 \u80fd\u4ece 1200ms+ \u4f18\u5316\u5230 200ms\u3002\r\n\r\n```cpp\r\n#include<iostream>\r\n#include<algorithm>\r\n#include<stdio.h>\r\n#include<vector>\r\nusing namespace std;\r\nconst inline void readln(int&I){\r\n\tI=0;char C=getchar();\r\n\twhile(!isdigit(C))C=getchar();\r\n\twhile( isdigit(C))I=(I<<3)+(I<<1)+C-'0',C=getchar();\r\n}\r\n#define pii pair<int,int>\r\nint n,c1,c2;\r\nvector<pii >e;\r\nbool operator<(pii pa,pii pb){\r\n\tif(pa.first==pb.first)return pa.second<pb.second;\r\n\telse return pa.first<pb.first;\r\n}\r\nint fi(vector<int>*f,int o){\r\n\tif((*f).at(o)==o)return o;\r\n\telse return (*f).at(o)=fi(f,(*f).at(o));\r\n}\r\nbool check(int u){\r\n\tvector<int>f(u+1),g(u+1);\r\n\tfor(int i=1;i<=u;i++)\r\n\t\tf.at(i)=i,g.at(i)=0;\r\n\tfor(int i=e.size()-1;i>=0;i--){\r\n\t\tif(e[i].first>u){\r\n\t\t\tif(e[i].second<=u)\r\n\t\t\t\tg.at(fi(&f,e[i].second))=1;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tint v1=fi(&f,e[i].first),v2=fi(&f,e[i].second);\r\n\t\tif(v1!=v2)f[v2]=v1,g[v1]|=g[v2];\r\n\t\telse g[v2]=1;\r\n\t}\r\n\tfor(int i=1;i<=u;i++)\r\n\t\tif(f[i]==i && g[i]==0)return 0;\r\n\treturn 1;\r\n}\r\nint main(){\r\n\treadln(n);\r\n\tfor(int i=1;i<=n;i++)\r\n\t\treadln(c1),readln(c2),\r\n\t\te.push_back(make_pair(max(c1,c2),min(c1,c2)));\r\n\tint l=0,r=n+1;\r\n\twhile(l+1<r){//[l,r)\r\n\t\tint mid=((l+r)>>1);\r\n\t\tif(check(mid))l=mid;\r\n\t\telse r=mid;\r\n\t}\r\n\tprintf(\"%d\\n\",l);\r\n}\r\n```",
        "postTime": 1664444903,
        "uid": 217300,
        "name": "Error_Eric",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1640 [SCOI2010] \u8fde\u7eed\u653b\u51fb\u6e38\u620f"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u3001\u3001\u53ef\u4ee5\u628a\u5b83\u5f53\u6210\u7ed3\u8bba\u9898\u641e\uff0c\n\n\u7ed3\u8bba\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5982\u679c\u533a\u95f41~n\u5185\u7684\u51fa\u73b0\u6b21\u6570\u90fd>=2\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f41~n\u5185\u90fd\u4f1a\u5408\u6cd5\n\n  \n\u8fd9\u4e2a\u7ed3\u8bba\u5f88\u597d\u8bc1\u660e\uff0c\u8fde\u5230\u5916\u9762\u53ef\u4ee5\u89c6\u4e3a\u505c\u6b62   \u5916\u9762\u8fde\u8fdb\u6765\u7684\u53ef\u4ee5\u89c6\u4e3a\u51ed\u7a7a\u589e\u52a0\uff0c\u5982\u679c\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u518d\u56de\u5230\u8fd9\u4e2a\u70b9\uff0c\u90a3\u8fd9\u4e00\u5757\u7684\u90fd\u53ef\u4ee5\u4e0d\u77db\u76fe\u5730\u53d6\u3002\n\n\n\u6839\u636e\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece1\u4e00\u76f4\u626b\u5230n \u68c0\u9a8c\u524dn\u4e2a\u6570\u5408\u4e0d\u5408\u6cd5\n\n\u5982\u679c\u679a\u4e3e\u7684\u8fd9\u4e2a\u6570\u6b21\u6570>1\uff0c\u90a3\u6839\u636e\u4e0a\u9762\u7684\u7ed3\u8bba\u5c31\u53ef\u4ee5\u8df3\u8fc7\n\n\u5982\u679c\u679a\u4e3e\u7684\u8fd9\u4e2a\u6570==1\uff0c\u90a3\u6211\u4eec\u5c31\u4e00\u8def\u5f80\u8fd9\u6761\u552f\u4e00\u7684\u8fb9\u8d70\uff0c\u4e00\u76f4\u5230\u4e0d\u5408\u6cd5\u6216\u8005\u5408\u6cd5\u4e3a\u6b62\uff1b\n\n\u90a3\u600e\u4e48\u5224\u65ad\u5269\u4e0b\u7684\u8fd9\u4e00\u6761\u8def\u662f\u90a3\u4e00\u6761\u5462\uff1f \u6211\u4e00\u5f00\u59cb\u7528\u7684set\uff0c\u540e\u6765\u83ab\u540d\u88ab\u5361\u5e38\u6570\u4e86\uff08\u7406\u8bbanlogn\uff0cn=1e6\uff0c\u8bfb\u5165\u5c31T\u4e86\uff09\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6362\u4e00\u4e2a\u65b9\u5f0f\u5361\u5e38\u6570\n\n\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u4e00\u4e2a\u70b9==1\u53ea\u6709\u4e00\u6b21\uff0c\u56e0\u4e3a\u4e0b\u4e00\u6b21\u4ed6\u5c31\u4f1a\u53d8\u62100\n\n\u56e0\u4e3an==10000\uff0c\n\n\u800c1e8\u5e38\u6570\u5c0f\u53ef\u4ee5\u5361\u8fc7\u3001\n\n\u6240\u4ee5\u5c31bool\u66b4\u529b\u679a\u4e3e\n\n\u4ec0\u4e48\uff1fbool\u5f00\u591a\u5c11\uff0c\u8fd8\u7528\u8bf4\u561b 10000\\*10000\u554a\uff0c\u80fd\u8fc7\u7f16\u8bd1\uff0c\u624b\u7b97100MB\n\n\u7136\u540e\u4e8b\u5b9e\u8bc1\u660e 1e8<1e6\\*log(1e6)\n\n\n\u7136\u540e\u5c31\u66b4\u529b\u5730\u5361\u65f6\u5361\u7a7a\u95f4 A\u4e86\u3001\uff08\u4f30\u8ba1\u4e5f\u5c31\u6211\u80fd\u60f3\u51fa\u8fd9\u4e48\u8111\u6b8b\u7684\u65b9\u6cd5\u4e86\uff09\n\n\n\n\u7801\uff1a\n\n```cpp\n#include<cstdio>  \n#include<algorithm>  \nusing namespace std;  \n#include<set>  \nint tong[100005],n,i,x,y,it,j;  \nbool b[10005][10005];  \nint read()  \n{  \n    int x=0,f=1;char ch=getchar();  \n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}  \n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}  \n    return x*f;  \n}  \nint main()  \n{  \nscanf(\"%d\",&n);  \n    for(i=1;i<=n;i++)  \n    {  \n    x=read();  \n    y=read();  \n    b[x][y]=b[y][x]=1;  \ntong[x]++;  \ntong[y]++;  \n    }  \n    for(i=1;i<=10000;i++)  \n    {  \n    int o=i;  \n    while(1)  \n    {  \n        tong[o]--;    \n        if(tong[o]<0)  \n        {  \n            printf(\"%d\",i-1);  \n            return 0;             \n        }  \n        if(tong[o]>0||o>i)  \n        {     \n        break;    \n        }  \n        if(tong[o]==0)  \n        {     \n        for(j=1;j<=10000;j++)  \n        if(b[o][j]==1){it=j;break;}  \n        b[it][o]=b[o][it]=0;  \n        o=it;                     \n        }     \n    }  \n    }  \nprintf(\"10000\");  \n}\n```",
        "postTime": 1505051549,
        "uid": 20220,
        "name": "_HLLY_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u5199\u4e8c\u5206\u56fe\u7684\u9898\u89e3\u5462\u3002\u3002\u3002\n\n\u660e\u660e\u4e8c\u5206\u56fe\u624d\u662f\u6700\u597d\u60f3\u6700\u597d\u5199\u7684\u7b97\u6cd5\uff08\u867d\u7136\u59ff\u52bf\u4e0d\u597d\u6162\u7684\u8981\u6b7b\uff09\n\nPs\uff1a\u7406\u8bba\u4e0a\u7684\u590d\u6742\u5ea6\u4f30\u8ba1\u662f\u8981T\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u8fd9\u4e0d\u662f\u5b8c\u5168\u7684\u5308\u7259\u5229\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u6ca1\u6709\u5339\u914d\u7684\u70b9\u5c31\u53ef\u4ee5\u6eda\u7c97\u4e86\n\n\u5308\u7259\u5229\u603b\u6ca1\u6709\u4eba\u4e0d\u4f1a\u5427\n\n\uff08\u7b97\u4e86\u8fd8\u662f\u8bf4\u4e00\u4e0b\uff09\u6bcf\u6b21\u627e\u5230\u4e00\u79cd\u89e3\u5c31\u53ef\u4ee5\u4e86\uff0c\u4ee5\u540e\u518d\u6162\u6162\u4fee\u6539\uff08\u8fd9\u79cd\u601d\u8def\u7c7b\u4f3c\u4e8e\u6700\u5927\u6d41\uff0c\u4e8b\u5b9e\u4e0a\u4e8c\u5206\u56fe\u548c\u6700\u5927\u6d41\u5c31\u662f\u540c\u4e00\u79cd\u4e1c\u897f\uff09\uff0c\u6bcf\u6b21\u5982\u679c\u53d1\u73b0\u60f3\u5339\u914d\u7684\u70b9\u5df2\u7ecf\u88ab\u5339\u914d\u4e86\u5c31\u60f3\u529e\u6cd5\u8ba9\u539f\u2642\u914d\uff08\u4ec0\u4e48\u9b3c\uff09\u53e6\u5bfb\u65b0\u2640\u6b22\uff08\u4ec0\u4e48\u9b3c\uff09\uff0c\u7136\u540e\u9012\u5f52\n\n\u5b9e\u9645\u4e0a\u5e94\u7528\u5728\u8fd9\u9053\u9898\u91cc\u5c31\u8868\u73b0\u4e3a\u66b4\u529b\u4e86\uff0c\u6bcf\u6b21\u90fd\u8d2a\u5fc3\u5730\u628a\u70b9\u585e\u8fdb\u53bb\uff0c\u76f4\u5230\u585e\u4e0d\u8fdb\u53bb\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <cstdio>\nbool b[3000001];\nint c[3000001],fir[3000001],to[3000001],nex[3000001];\nint N,n,p,q;\nvoid add(int p,int q)\n{\n    nex[++N]=fir[p];to[N]=q;fir[p]=N;\n}\nbool find(int k)\n{\n    b[k]=true;\n    for(int i=fir[k];i;i=nex[i])\n    if(!c[to[i]]) {    c[to[i]]=k;b[k]=false;return true;}\n    else \n    if(!b[c[to[i]]] && find(c[to[i]]))\n    {\n        c[to[i]]=k;b[k]=false;return true;\n    }\n    b[k]=false;\n    return false;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&p,&q);\n        if(p<=n)    add(p,i+n);\n        if(q<=n)    add(q,i+n);\n    }\n    for(int i=1;i<=n;i++)\n        if(!find(i))\n        {\n            printf(\"%d\",i-1);\n            return 0;\n        }\n    printf(\"%d\",n);\n    return 0;\n}\n\u987a\u52bf\u5b89\u5229http://www.cnblogs.com/wanglichao/p/5931723.html\n```",
        "postTime": 1475628957,
        "uid": 885,
        "name": "wanglichao1121",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    },
    {
        "content": "\u521d\u770b\u6ca1\u4ec0\u4e48\u5934\u7eea\n\n\u60f3\u5230\u4e8c\u5206\u56fe\n\n\u6bcf\u4e2a\u88c5\u5907\u7684\u4e24\u4e2a\u503c$a,b$\u5411$i$\u8fde\u8fb9\n\n\u8dd1\u4e8c\u5206\u56fe\u5373\u53ef\uff0c\u4e00\u65e6\u4e0d\u80fd\u5339\u914d\u5c31\u9000\u51fa\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 1000010\nusing namespace std;\nstruct Edge{\n\tint to, next;\n}edge[maxn << 1];\nint num, head[maxn], link[maxn], vis[maxn], n, ans;\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nvoid addedge(int x, int y){ edge[++num] = (Edge){y, head[x]}, head[x] = num; }\n\nint dfs(int u){\n\tif (vis[u]) return 0;\n\tvis[u] = 1;\n\tfor (int i = head[u]; i; i = edge[i].next){\n\t\tint v = edge[i].to;\n\t\tif (!link[v] || dfs(link[v])){\n\t\t\tlink[v] = u; return 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main(){\n\tn = read();\n\tfor (int i = 1; i <= n; ++i){\n\t\tint x = read(), y = read();\n\t\taddedge(x, i), addedge(y, i);\n\t}\n\tfor (int i = 1; i <= 10000; ++i){\n\t\tfor (int j = 1; j <= 10000; ++j) vis[j] = 0;\n\t\tif (dfs(i)) ++ans; else break;\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1569154366,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1640 \u3010[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f\u3011"
    }
]