[
    {
        "content": "#### ~~GF~~\u5b98\u65b9\u9898\u89e3\n\n\u9996\u5148\u7206\u520750pts\uff0c\u4f9d\u7167\u9898\u610f\u6a21\u62df\u7136\u540e\u52a0\u4e0a\u8bb0\u5fc6\u5316\u5c31\u884c\u4e86\u3002\n\n\u4ece\u6700\u9ad8\u70b9dfs\uff0c\u8bb0\u5f55\u5f53\u524d\u4f4d\u7f6e\u4e0e\u662f\u5426\u8fdb\u884c\u8fc7 $2$ \u64cd\u4f5c\uff0c\u6bcf\u6b21\u5148\u679a\u4e3e\u53ef\u80fd\u60c5\u51b5\u7136\u540e\u8f6c\u79fb\u5c31\u884c\u4e86\u3002\n\n50pts\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#define int long long\n#define mod 998244353\nusing namespace std;\nint n,a[1005],mx,mn=2e9;\nint f[1005][2];\ninline int pw(int a,int p){\n    if (p==0)return 1;\n    int t=pw(a,p/2);\n    t=t*t%mod;\n    if (p%2==1)t=t*a%mod;\n    return t;\n}\ninline int inv(int a){\n    return pw(a,mod-2);\n}\ninline int dfs(int now,int flag){\n    if (a[now]==mn)return 0;\n    if (f[now][flag]!=-1)return f[now][flag];\n    int tot=0,s=0;\n    for (int i=1;i<=n;i++){\n        if (i==now)continue;\n        if (a[i]<a[now])tot++;\n        else if (a[i]==a[now]&&flag==0)tot++;\n    }\n    int _inv=inv(tot);\n    for (int i=1;i<=n;i++){\n        if (i==now)continue;\n        if (a[i]<a[now])s+=_inv*(dfs(i,0)+abs(now-i)),s%=mod;\n        else if (a[i]==a[now]&&flag==0)s+=_inv*(dfs(i,1)+abs(now-i)),s%=mod;\n    }\n    return f[now][flag]=s;\n}\nsigned main(){\n    cin>>n;\n    for (int i=1;i<=n;i++)cin>>a[i],mx=max(mx,a[i]),mn=min(mn,a[i]);\n    memset(f,-1,sizeof(f));\n    for (int i=1;i<=n;i++){\n        if (a[i]==mx){\n            cout<<dfs(i,0)<<endl;\n            return 0;\n        }\n    }\n    return 0;\n}\n\n```\n\n\u7136\u540e\u8003\u8651\u6ee1\u5206dp\uff0c\u5148\u6309\u9ad8\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u76f8\u540c\u9ad8\u5ea6\u4e00\u8d77\u8f6c\u79fb\u3002\n\n\u6709\u4e24\u79cd\u8f6c\u79fb\u60c5\u51b5\uff1a\u76f8\u540c\u9ad8\u5ea6\u4e0e\u4e0d\u540c\u9ad8\u5ea6\u3002\n\n\u8bbe $g_{i}$ \u8868\u793a\u7531\u4e0d\u540c\u9ad8\u5ea6\u8f6c\u79fb\uff0c$f_{i}$ \u8868\u793a\u4e24\u79cd\u8f6c\u79fb\u5747\u53ef\u3002\n\n$g_{i}$ \u76f4\u63a5\u7531 \u4e4b\u524d\u7684\u524d\u7f00\u548c \u4e0e \u5f53\u524d\u70b9\u5230\u4e4b\u524d\u70b9\u7684\u8ddd\u79bb\u548c \u6c42\u51fa\u3002\n\n\u7b2c\u4e8c\u79cd\u8f6c\u79fb\u60c5\u51b5\u5219\u7531 $g_{i}$ \u4e4b\u548c \u4e0e \u5f53\u524d\u70b9\u5230\u76f8\u540c\u9ad8\u5ea6\u70b9\u7684\u8ddd\u79bb\u548c\u6c42\u51fa\uff08\u4f7f\u7528\u5bb9\u65a5\u539f\u7406\u7b97\u51fa\uff1a\u7528\u5f53\u524d\u70b9\u5230\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u548c\u51cf\u53bb\u5f53\u524d\u70b9\u5230\u4e4b\u524d\u70b9\u7684\u8ddd\u79bb\u548c\uff09\u3002\n\n$f_{i}$ \u76f4\u63a5\u7528\u4e24\u79cd\u8f6c\u79fb\u4e58\u4e0a\u76f8\u5e94\u6982\u7387\u6c42\u51fa\u3002\n\n\u5bf9\u4e8e\u8ddd\u79bb\u548c\u7684\u6c42\u6cd5\uff0c\u53ef\u4ee5\u53c2\u8003[\u8fd9\u9898](https://www.luogu.com.cn/problem/P2345)\u3002\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define int long long\n#define mod 998244353\nusing namespace std;\nint n,g[500005],f[500005],dis[500005];\nint ans,sum;\nstruct node{\n    int pos,h;\n}a[500005];\nbool cmp(node a,node b){\n    return a.h<b.h;\n}\ninline int pw(register int a,register int p){\n    if (p==0)return 1;\n    register int t=pw(a,p/2);\n    t=t*t%mod;\n    if (p%2==1)t=t*a%mod;\n    return t;\n}\ninline int inv(register int a){\n    return pw(a,mod-2);\n}\ninline void getmod(register int &a){\n    a=(a%mod+mod)%mod;\n    return;\n}\nstruct BIT{\n    int tree[1000005];\n    inline void mem(){\n        memset(tree,0,sizeof(tree));\n        return;\n    }\n    inline int lowbit(register int &x){\n        return x&(-x);\n    }\n    inline int query(register int pos){\n        int ans=0;\n        while(pos)ans+=tree[pos],getmod(ans),pos-=lowbit(pos);\n        return ans;\n    }\n    inline void add(register int pos,register int val){\n        while(pos<=n)tree[pos]+=val,getmod(tree[pos]),pos+=lowbit(pos);\n        return;\n    }\n}bit1,bit2;\ninline void add(int pos){\n    bit1.add(pos,1);\n    bit2.add(pos,pos);\n    return;\n}\ninline void del(int pos){\n    bit1.add(pos,-1);\n    bit2.add(pos,-pos);\n}\ninline int ask(int pos){\n    register int ans=bit1.query(pos-1)*pos-bit2.query(pos-1);\n    getmod(ans);\n    ans+=(bit2.query(n)-bit2.query(pos))-(bit1.query(n)-bit1.query(pos))*pos;\n    getmod(ans);\n    return ans;\n}\nsigned main(){\n    cin>>n;\n    for (int i=1;i<=n;i++)scanf(\"%lld\",&a[i].h),a[i].pos=i;\n    sort(a+1,a+1+n,cmp);\n    bit1.mem();\n    bit2.mem();\n    for (int i=1;i<=n;){\n        register int j=i,nowsum=0;\n        while(a[j].h==a[i].h)j++;\n        for (register int k=i;k<j;k++){\n            dis[k]=ask(a[k].pos);\n            getmod(dis[k]);\n            g[k]=sum+dis[k];\n            getmod(g[k]);\n            g[k]*=inv(i-1);\n            getmod(g[k]);\n            nowsum+=g[k];\n            getmod(nowsum);\n        }\n        for (register int k=i;k<j;k++)add(a[k].pos);\n        for (register int k=i;k<j;k++){\n            register int now=nowsum+ask(a[k].pos)-dis[k]-g[k];\n            now*=inv(j-i-1);\n            getmod(now);\n            f[k]=(inv(j-2)*(i-1)%mod)*g[k]%mod+(inv(j-2)*(j-i-1)%mod)*now%mod;\n            getmod(f[k]);\n        }\n        for (register int k=i;k<j;k++){\n            sum+=f[k];\n            getmod(sum);\n        }\n        i=j;\n    }\n    cout<<f[n]<<endl;    \n    return 0;\n}\n```\n\n\u8003\u573a\u4e0aJK\u7528\u4e25\u683c\u7ebf\u6027\u7684\u7b97\u6cd5\u540a\u6253\u4e86std...",
        "postTime": 1586645838,
        "uid": 235926,
        "name": "1kri",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6375"
    },
    {
        "content": "\u5c71 $i$ \u7684\u9ad8\u5ea6\u4e3a $h_i$\uff0c\u6a2a\u5750\u6807\u662f $x_i$\u3002\n\n\u9700\u8981\u8ba1\u7b97\u7684\u6709\uff1a\n- \u521a\u5230\u8fbe\u5c71 i\uff0c\u4e14\u5230\u8fbe\u5c71 i \u524d\u6ca1\u6709\u53bb\u8fc7\u76f8\u540c\u9ad8\u5ea6\u7684\u5c71\uff0c\u6240\u6709\u8fd9\u79cd\u65b9\u6848\u7684\u6982\u7387\u548c $p_{i}$\n- \u521a\u5230\u8fbe\u5c71 i\uff0c\u4e14\u5230\u8fbe\u5c71 i \u524d\u6ca1\u6709\u53bb\u8fc7\u76f8\u540c\u9ad8\u5ea6\u7684\u5c71\uff0c\u7684\u671f\u671b\u4f53\u529b\u6d88\u8017 $d_{i}$\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c $h_i = h_j$\uff0c\u4f1a\u6709 $p_i = p_j$\uff0c\u56e0\u4e3a\u53ea\u8981\u6709\u4e00\u4e2a\u5230\u8fbe $i$ \u7684\u65b9\u6848\uff0c\u76f8\u5e94\u7684\u4e5f\u4f1a\u6709\u4e00\u4e2a\u5230\u8fbe $j$ \u7684\u65b9\u6848\uff0c\u4f46\u662f\u7531\u4e8e $x_i \\ne x_j$ \u6240\u4ee5 $d_i \\ne d_j$\u3002\n\n\u8bb0 $c_i$ \u4e3a\u9ad8\u5ea6**\u5c0f\u4e8e\u6216\u7b49\u4e8e**\u5c71 $i$ \u9ad8\u5ea6\u7684\u5c71\u7684\u6570\u91cf\uff0c\n\u8bb0 $c'_i$ \u4e3a\u9ad8\u5ea6**\u5c0f\u4e8e**\u5c71 $i$ \u9ad8\u5ea6\u7684\u5c71\u7684\u6570\u91cf\u3002\n\n\u518d\u8bb0 $u_h$ \u4e3a\u521a\u5230\u8fbe\u9ad8\u5ea6\u4e3a $h$ \u6240\u6709\u5c71 $i$ \u7684\u6982\u7387\u548c\uff08$\\sum_{i, h_i = h}{p_i}$\uff09\uff1b\n\u518d\u8bb0 $v_h$ \u4e3a\u521a\u5230\u8fbe\u9ad8\u5ea6\u4e3a $h$ \u7684\u5c71\u7684\u671f\u671b\u4f53\u529b\u6d88\u8017\uff08$\\sum_{i, h_i = h}{d_i}$\uff09\u3002\n\u8fd9\u4e24\u4e2a\u7528\u6765\u505a\u5728\u540c\u4e00\u4e2a\u9ad8\u5ea6\u4e0a\u518d\u8dd1\u4e00\u6b21\u7684\u8f6c\u79fb\u3002\n\n\u5bf9\u4e8e\u5df2\u7ecf\u7b97\u5b8c\u7684\u5c71 $i$\uff0c\u8003\u8651\u9ad8\u5ea6\u4e25\u683c\u5c0f\u4e8e\u5c71 $i$ \u7684\u5c71 $j$\u3002\n\n\u4e00\u7c7b\u8f6c\u79fb\u662f\u4e0d\u8d70\u548c $i$ \u9ad8\u5ea6\u76f8\u540c\u7684\u5c71\uff0c$p_j$ \u4f1a\u589e\u52a0 $p_i / (c_i - 1)$\uff0c$d_j$ \u4f1a\u589e\u52a0 $d_i / (c_i - 1) + p_i / (c_i - 1) \\left|x_i - x_j\\right|$\u3002\n\n\u53e6\u4e00\u7c7b\u8f6c\u79fb\u662f\u8d70\u4e86\u4e00\u6b65\u548c $i$ \u9ad8\u5ea6\u76f8\u540c\u7684\u5c71\uff0c\u6211\u4eec\u5c06\u5c71 $i$ \u770b\u505a\u662f\u7b2c\u4e8c\u6b21\u5230\u8fbe\u7684\u9ad8\u5ea6\u4e3a $h_i$ \u7684\u5c71\uff0c\u90a3\u4e48\u7b2c\u4e8c\u6b21\u5230\u8fbe\u5c71 $i$ \u7684\u6982\u7387\u662f $p'_i = (u_{h_i} - p_i) / (c_i - 1)$\uff0c\u671f\u671b\u4f53\u529b\u6d88\u8017\u662f\uff1a\n$$d'_i = (v_{h_i} - d_i) / (c_i - 1) + \\sum_{j, h_j = h_i, i \\ne j}{p_j / (c_j - 1)  \\left|x_i - x_j\\right|}$$\n\u5f0f\u5b50\u91cc\u5c71 $i$, $j$ \u9ad8\u5ea6\u76f8\u540c\uff0c\u6240\u4ee5\u6709\uff1a\n$$d'_i = (v_{h_i} - d_i) / (c_i - 1) + p_i / (c_i - 1) \\sum_{j, h_j = h_i, i \\ne j}{ \\left|x_i - x_j\\right|}$$\n\u663e\u7136\uff0c\u4e00\u4e2a\u9ad8\u5ea6\u7b97\u5b8c\u4e4b\u540e\u53ef\u4ee5\u6309\u6a2a\u5750\u6807 $x_i$ \u7684\u987a\u5e8f\u6c42\u4e2a\u524d\u7f00\u548c\u3002$\\sum_{j, h_j = h_i, i \\ne j}{ \\left|x_i - x_j\\right|}$ \u5c31\u53ef\u4ee5\u62c6\u4e00\u4e0b\u7edd\u5bf9\u503c\uff0c\u7528\u524d\u7f00\u548c\u6765\u6c42\uff0c\u8bb0\u8fd9\u4e2a\u4e1c\u897f\u662f $w_i$\u3002\u90a3\u4e48\uff1a\n$$d'_i = (v_{h_i} - d_i) / (c_i - 1) + w_i p_i / (c_i - 1)$$\n\n\u6700\u7ec8\uff0c\u53e6\u4e00\u7c7b\u8f6c\u79fb\u662f\uff0c$p_j$ \u4f1a\u589e\u52a0 $p'_i / c'_i$\uff0c$d_j$ \u4f1a\u589e\u52a0 $d'_i / c'_i + p'_i / c'_i \\left|x_i - x_j\\right|$\u3002\n\n\u4e24\u7c7b\u8f6c\u79fb\u4e2d\u7684\u7edd\u5bf9\u503c\u4e0d\u597d\u5f04\uff0c\u60f3\u529e\u6cd5\u62c6\uff0c\u8003\u8651\u5206\u6cbb\u9ad8\u5ea6\uff0c\u4e5f\u5373 `cdq(l, r)` \u4e4b\u540e\uff0c\u5e94\u5f53\u8ba1\u7b97\u5b8c\u9ad8\u5ea6\u5728 $[l, r)$ \u5185\u6240\u6709\u5c71\u7684\u4fe1\u606f\u3002\n\n\u9996\u5148\u80af\u5b9a\u662f\u9012\u5f52\u5730\u5904\u7406 `cdq(mid, r)`\u3002\u7136\u540e\u8003\u8651\u9ad8\u5ea6\u5728 $[mid, r)$ \u6240\u6709\u5c71\u7ed9\u9ad8\u5ea6\u5728 $[l, mid)$ \u6240\u6709\u5c71\u7b97\u8d21\u732e\u3002\n\n\u6211\u4eec\u628a\u9ad8\u5ea6\u5728 $[l, r)$ \u6240\u6709\u7684\u5c71\u6309\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u7c7b\u4f3c\u524d\u9762\u7684\u73a9\u6cd5\u7ef4\u62a4\u4e00\u4e0b $p_i / (c_i - 1) x_i$ \u7684\u524d\u7f00\u548c\uff0c\u4ee5\u53ca $p_i / (c_i - 1)$ \u7684\u524d\u7f00\u548c\uff0c\u5c31\u53ef\u4ee5\u63a8\u51fa\u6765\u5bf9\u4e8e $j$ \u6240\u6709\u7684\u8f6c\u79fb\u503c\u4e86\u3002\n\n\u5199\u7684\u8bdd cdq \u91cc\u9762\u53ef\u80fd\u4f1a\u5957\u4e2a `partition` \u548c `sort`\uff0c\u6bcf\u4e2a\u5143\u7d20\u5728\u7b2c $i$ \u5c42\u9012\u5f52\u53ea\u4f1a\u88ab\u67d0\u4e2a\u9012\u5f52\u5904\u7406\u5230\uff0c\u6bcf\u5c42\u662f $\\mathcal{O}(n \\log n)$ \u7684\u3002\u79bb\u6563\u5316\u9ad8\u5ea6\u540e\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n \\log^2 n)$\u3002",
        "postTime": 1601995012,
        "uid": 6547,
        "name": "Chielo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6375 \u3010\u300cStOI-1\u300d\u5c0fZ\u7684\u65c5\u884c\u3011 CDQ\u5206\u6cbb"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u770b\u5230\u8fd9\u9898\u5c31\u5bb9\u6613\u60f3\u5230 DP\u3002\n\n\u8bbe $f_{x,0}$ \u8868\u793a\u4ece\u7b2c\u4e00\u6b21\u5230\u8fbe\u9ad8\u5ea6\u4e3a $h_x$ \u7684\u5c71\u65f6\u4ece\u7f16\u53f7\u4e3a $x$ \u7684\u5c71\u8d70\u5230\u6700\u4f4e\u70b9\u7684\u671f\u671b\u6b65\u6570\uff0c$f_{x,1}$ \u8868\u793a\u7b2c\u4e8c\u6b21\u5230\u8fbe\u9ad8\u5ea6\u4e3a $h_x$ \u7684\u5c71\u65f6\u4ece\u7f16\u53f7\u4e3a $x$ \u7684\u5c71\u8d70\u5230\u6700\u4f4e\u70b9\u7684\u671f\u671b\u6b65\u6570\u3002\n\n\u6211\u4eec\u8bb0\u6700\u4f4e\u70b9\u7684\u7f16\u53f7\u4e3a $p$\uff0c\u663e\u7136\u6709 $f_{p,0}=0$\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u8f6c\u79fb\uff0c\u8bb0\u9ad8\u5ea6\u4e0d\u8d85\u8fc7 $i$ \u7684\u5c71\u7684\u4e2a\u6570\u4e3a $t_i$\uff0c\u6613\u5f97\uff1a\n\n$$f_{x,1}=\\dfrac{1}{t_{h_x-1}}\\sum_{h_i<h_x}(|x-i|+f_{i,0})$$\n\n$$f_{x,0}=\\dfrac{1}{t_{h_x}-1}(\\sum_{h_i<h_x}(|x-i|+f_{i,0})+\\sum_{h_i=h_x}[i\\ne x](f_{i,1}+|x-i|)$$\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a $|x-i|$ \u4e0d\u592a\u597d\u5904\u7406\uff0c\u4f46\u6211\u4eec\u53d1\u73b0 $|x-i|$ \u53ef\u4ee5\u88ab\u5f88\u5bb9\u6613\u63d0\u51fa\u6765\uff0c\u4e8e\u662f\u6211\u4eec\u7ef4\u62a4\u4e00\u5ea7\u5c71\u5de6\u8fb9\u6bd4\u81ea\u5df1\u4f4e\u7684\u5c71\u7684\u4e2a\u6570\uff0c\u6bd4\u81ea\u5df1\u4f4e\u7684\u5c71\u7684\u7f16\u53f7\u548c\uff0c\u9ad8\u5ea6\u4e0d\u5927\u4e8e\u81ea\u5df1\u7684\u5c71\u7684\u4e2a\u6570\uff0c\u9ad8\u5ea6\u4e0d\u5927\u4e8e\u81ea\u5df1\u7684\u5c71\u7684\u7f16\u53f7\u548c\u3002\u5bf9\u4e8e\u53f3\u8fb9\u540c\u6837\u5904\u7406\uff0c\u8f6c\u79fb\u5373\u53ef\u88ab\u4f18\u5316\u5230 $\\Theta(1)$\u3002\u4e8e\u662f\u6211\u4eec\u5c06 $h_i$ \u79bb\u6563\u5316\uff0c\u518d\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u5904\u7406\u540e\u6548\u6027\uff0c\u6211\u4eec\u79bb\u6563\u5316\u4e4b\u540e\uff0c\u5bf9\u4e8e\u4ece\u5c0f\u5230\u5927\u7684\u6bcf\u4e2a\u9ad8\u5ea6\uff0c\u5148\u5904\u7406\u8fd9\u4e2a\u9ad8\u5ea6\u4e0a\u7684 $f_{x,1}$ \u518d\u5904\u7406\u8fd9\u4e2a\u9ad8\u5ea6\u4e0a\u7684 $f_{x,0}$\uff0c\u7136\u540e\u518d\u53bb\u5904\u7406\u4e0b\u4e00\u4e2a\u9ad8\u5ea6\u5373\u53ef\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\Theta(n\\log n)$\u3002\n\nCode:\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\nusing namespace std ;\nconst int MAXN = 5e5 + 10 , mod = 998244353 ;\nint n , h[MAXN] , t[MAXN] ;\ntypedef long long ll ;\nll f[MAXN][2] , c1[MAXN] , c2[MAXN] , g[MAXN][8] , s[MAXN] ;\nvoid upd (ll *c , int x , ll k) {\n\tfor (; x <= n ; x += (x & -x)) c[x] = (c[x] + k) % mod ;\n}\nll query (ll *c , int x) {\n\tll ret = 0 ;\n\tfor (; x ; x -= (x & -x)) ret = (ret + c[x]) % mod ;\n\treturn ret ;\n}\nll qpow (ll x , ll p = mod - 2) {\n\tll ret = 1 ;\n\tfor (; p ; p >>= 1 , x = x * x % mod)\n\t\tif (p & 1) ret = ret * x % mod ;\n\treturn ret ;\n}\nvector <int> G[MAXN] ;\nint main () {\n\tscanf (\"%d\" , &n) ;\n\tfor (int i = 1 ; i <= n ; i++) scanf (\"%d\" , &h[i]) , t[i] = h[i] ;\n\tsort (t + 1 , t + n + 1) ;\n\tint m = unique (t + 1 , t + n + 1) - t - 1 ;\n\tfor (int i = 1 ; i <= n ; i++)\n\t\th[i] = lower_bound (t + 1 , t + m + 1 , h[i]) - t , G[h[i]].push_back (i) ; \n\tmemset (t , 0 , sizeof (t)) ;\n\tfor (int i = 1 ; i <= n ; i++) t[h[i]]++ ;\n\tfor (int i = 1 ; i <= m ; i++) t[i] += t[i - 1] ;\n\tfor (int i = 1 ; i <= n ; i++) {\n\t\tg[i][0] = query (c1 , h[i] - 1) ; g[i][1] = query (c2 , h[i] - 1) ;\n\t\tg[i][4] = query (c1 , h[i]) , g[i][5] = query (c2 , h[i]) ;\n\t\tupd (c1 , h[i] , i) , upd (c2 , h[i] , 1) ;\n\t}\n\tmemset (c1 , 0 , sizeof (c1)) , memset (c2 , 0 , sizeof (c2)) ;\n\tfor (int i = n ; i ; i--) {\n\t\tg[i][2] = query (c1 , h[i] - 1) , g[i][3] = query (c2 , h[i] - 1) ;\n\t\tg[i][6] = query (c1 , h[i]) , g[i][7] = query (c2 , h[i]) ; \n\t\tupd (c1 , h[i] , i) , upd (c2 , h[i] , 1) ;\n\t}\n\tf[G[1][0]][0] = 0 ;\n\tfor (int i = 2 ; i <= m ; i++) {\n\t\ts[i] = s[i - 1] ;\n\t\tll ret = 0 ;\n\t\tfor (int j = 0 ; j < G[i].size () ; j++) {\n\t\t\tint x = G[i][j] ;\n\t\t\tll tmp = qpow (t[i - 1]) * ((g[x][2] - g[x][0] + mod) % mod + (g[x][1] - g[x][3] + mod) % mod * x % mod) % mod ;\n\t\t\tf[x][1] = (tmp + s[i - 1] * qpow (t[i - 1]) % mod) % mod ;\n\t\t\tret = (ret + f[x][1]) % mod ; \n\t\t}\n\t\tfor (int j = 0 ; j < G[i].size () ; j++) {\n\t\t\tint x = G[i][j] , cnt = t[i] - 1 ;\n\t\t\tll tmp = qpow (cnt) * ((g[x][6] - g[x][4] + mod) % mod + (g[x][5] - g[x][7] + mod) % mod * x % mod) % mod ;\n\t\t\tf[x][0] = (tmp + s[i - 1] * qpow (cnt) % mod + (ret - f[x][1] + mod) % mod * qpow (cnt) % mod) % mod ;\n\t\t\ts[i] = (s[i] + f[x][0]) % mod ;\n\t\t}\n\t}\n\tprintf (\"%lld\\n\" , f[G[m][0]][0]) ;\n\treturn 0 ;\n} \n```",
        "postTime": 1654251598,
        "uid": 122641,
        "name": "GIFBMP",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6375\u3010\u300cStOI-1\u300d\u5c0fZ\u7684\u65c5\u884c\u3011"
    }
]