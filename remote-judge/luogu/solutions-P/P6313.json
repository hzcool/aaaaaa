[
    {
        "content": "~~\u5f88\u6709\u8da3\u7684\u9898~~\n\n\u601d\u8def\u90e8\u5206\u6765\u81ea @StudyingFather\uff08Loj\uff09\n\n\u56e0\u4e3a $1 \\le P \\le 2$ \uff0c\u540c\u65f6\u6ce8\u610f\u5230\u4e24\u672c\u62a4\u7167\u529e\u7406\u5e76\u4e0d\u4e92\u76f8\u5e72\u6270\uff0c\u53ef\u4ee5\u53ea\u8003\u8651 $P=1$ \u7684\u60c5\u51b5\uff0c\u5982\u679c $P=2$ \u7684\u8bdd\uff0c\u9009\u4e00\u4e2a\u72b6\u6001\u4ee5\u53ca\u4e0e\u5b83\u4e92\u8865\uff08\u5c31\u662f\u4e24\u4e2a\u96c6\u5408\u6ca1\u6709\u76f8\u540c\u7684\u5143\u7d20\uff0c\u4e14\u6b63\u597d\u4e24\u4e2a\u96c6\u5408\u5927\u5c0f\u7684\u548c\u7b49\u4e8e $n$ \uff09\u6c42\u89e3\u5373\u53ef\n\n\u8003\u8651\u5230 $n \\le 22$ \uff0c\u5c1d\u8bd5\u4f7f\u7528\u72b6\u538b\uff0c\u8bbe $f[i]$ \u4e3a\u72b6\u6001\u4e3a $i$ \u65f6\uff0c\u6700\u5c0f\u7684\u628a $i$ \u6240\u6709\u5305\u542b\u7684\u62a4\u7167\u529e\u5b8c\u7684\u65f6\u95f4\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u8f6c\u79fb\u70b9 $j$ \u8003\u8651\u5982\u4f55\u8f6c\u79fb\uff08\u5373\u4ece $f[i]$ \u8f6c\u79fb\u5230 $f[i+2^{j-1}]$ \uff09\uff0c\u9996\u5148\u4ee4 $f[i+2^{j-1}]=f[i]$\n\n1\u3001\u770b\u6709\u54ea\u4e9b\u51fa\u56fd\u7684\u65f6\u95f4\u6bb5\u5305\u542b\u4e86 $f[i+2^{j-1}]$ \uff08\u5373 $l_x \\le f[i+2^{j-1}] \\le r_x(r_x=l_x+len_x-1,1 \\le x \\le n)$ \uff09\uff0c\u8fd9\u4e9b\u533a\u95f4\u5185\u90fd\u4e0d\u80fd\u529e\u7406\u62a4\u7167\uff08\u6b64\u65f6\u5728\u56fd\u5916\uff0c\u7528\u54ea\u672c\u62a4\u7167\u90fd\u529e\u4e0d\u4e86\uff09\uff0c\u6240\u4ee5 $f[i+2^{j-1}]=\\max\\{r_x\\}+1+t_j$ \uff0c\u6ce8\u610f\u6b64\u65f6 $f[i+2^{j-1}]$ \u6709\u53d8\u5316\uff0c\u53c8\u53ef\u4ee5\u8fdb\u884c\u8f6c\u79fb\u3002\n\n2\u3001\u7136\u540e\u8003\u8651\u5305\u542b\u5728 $i$ \u91cc\u9762\u7684\u70b9\uff0c\u6b64\u65f6\u56e0\u4e3a\u6211\u4eec\u53ea\u6709\u4e00\u672c\u62a4\u7167\uff0c\u6211\u4eec\u4e0d\u80fd\u5728\u6709\u7b7e\u8bc1\u8fd8\u6ca1\u529e\u5b8c\u7684\u60c5\u51b5\u4e0b\u51fa\u56fd\uff0c\u5373 $f[i+2^{j-1}] \\le l_x$ \u4e14 $l_x \\le f[i]+t_j$ \uff0c\u8fd9\u65f6\u4e2d\u95f4\u8fd9\u4e00\u6bb5\u53ea\u80fd\u629b\u5f03\uff0c\u6240\u4ee5 $f[i+2^{j-1}]=\\max\\{r_x\\}+1+t_j$ \u3002\n\n\u6ce8\u610f\uff0c\u6ce8\u610f\uff0c\u6ce8\u610f\uff01\u8fd9\u91cc\u4e24\u79cd\u72b6\u6001\u662f\u4e92\u76f8\u5f71\u54cd\u7684\n\n\u7136\u540e\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u8c8c\u4f3c\u662f $O(n^2 \\times 2^n)$ \uff0c\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u8fc7\uff0c\u6bd5\u7adf\u5f88\u591a\u72b6\u6001\u662f\u8f6c\u79fb\u4e0d\u4e86\u7684\uff0c\u53ef\u80fd\u80fd\u8fc7\u3002\n\n\u4f46\u662f\u4e0d\u80fd\u505c\u7559\u5728\u53ef\u80fd\uff0c\u6211\u4eec\u5c3d\u91cf\u4f18\u5316\u5230 $O(n \\times 2^n)$ \uff0c\u6ce8\u610f\u5230\u8fd9\u4e24\u79cd\u90fd\u662f\u4f1a\u628a $l$ \u5f04\u5f97\u8d8a\u6765\u8d8a\u5927\uff0c\u6240\u4ee5\u8003\u8651\u4ee5 $l$ \u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u4f46\u662f\u8fd8\u662f\u6ca1\u6709\u7528\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4e0d\u540c\u7684 $j$ \u56e0\u4e3a $t_j$ \u4e0d\u540c\uff0c\u53c8\u8981\u4ece\u5934\u518d\u6765\u3002\u7a81\u7136\u6ce8\u610f\u5230\uff0c\u5982\u679c $t_j$ \u4ee5\u5347\u5e8f\u6392\u5217\uff0c\u90a3\u4e48 $j$ \u8f6c\u79fb\u51fa\u6765\u7684\u7b54\u6848\u4e00\u5b9a\u6bd4 $j-1$ \u66f4\u5927\uff08\u56e0\u4e3a $t$ \u8d8a\u5927\u8d8a\u96be\u6ee1\u8db3\u6761\u4ef6\uff09\uff0c\u6240\u4ee5\u6b64\u65f6\u518dcopy\u4e00\u904d\u6570\u7ec4\uff0c\u4ee5 $t$ \u4e3a\u5173\u952e\u5b57\u6392\u5e8f\u5373\u53ef\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n\nusing namespace std;\n\n#define maxn 55\n#define maxN 5005005\n#define INF 2000000002\n\ninline int read(){\n\tint r=0,f=0;\n\tchar c;\n\twhile(!isdigit(c=getchar()))f|=(c=='-');\n\twhile(isdigit(c))r=(r<<1)+(r<<3)+(c^48),c=getchar();\n\treturn f?-r:r;\n}\n\nstruct LR{\n\tint l,r,t;\n\tint num;\n}lr[2][maxn];\n\nint n,p,s[2],ans[maxn][2];\n\nint pre[maxN],f[maxN];\n\ninline bool cmp1(LR x,LR y){\n\treturn x.l<y.l;\n}\n\ninline bool cmp2(LR x,LR y){\n\treturn x.t<y.t;\n}\n\ninline void calc(int x,int i){\n\tif(f[x]==INF)return;\n\twhile(x){\n\t\tint j=pre[x];\n\t\tint num=lr[1][j].num;\n\t\tans[num][0]=i;\n\t\tans[num][1]=f[x]-lr[1][j].t;\n\t\tx^=(1<<(num-1));//\u6ce8\u610f\u8fd9\u91cc\u662fnum\uff0c\u7406\u7531\u89c1\u4e0b\n\t}\n}\n\nint main(){\n\tn=read(),p=read();\n\tfor(int i=1;i<=n;i++){\n\t\tlr[0][i].l=read();\n\t\tlr[0][i].r=lr[0][i].l+read()-1;\n\t\tlr[0][i].t=read(),lr[0][i].num=i;\n\t\tlr[1][i]=lr[0][i];//copy\u4e00\u4e0b\n\t}\n\tsort(lr[0]+1,lr[0]+1+n,cmp1);\n\tsort(lr[1]+1,lr[1]+1+n,cmp2);\n\tfor(int i=0;i<(1<<n);i++)f[i]=INF;\n\tf[0]=1;\n\tfor(int i=0;i<(1<<n);i++){\n\t\tif(f[i]==INF)continue;\n\t\tint t=f[i];\n\t\ts[0]=s[1]=1;\n\t\tfor(int j=1;j<=n;j++){\n        \t//\u6ce8\u610fj\u662f\u7b97\u679a\u4e3et\u4ece\u5c0f\u5230\u5927\uff0c\u6240\u4ee5\u662flr[1][j]\n\t\t\tif(i&(1<<(lr[1][j].num-1)))continue;\n\t\t\twhile(1){\n                //\u8fd9\u91cc\u662f\u6309l\uff0c\u6240\u4ee5\u662flr[0][s[]]\n\t\t\t\twhile(s[0]<=n&&lr[0][s[0]].r<t)s[0]++;\n\t\t\t\twhile(s[1]<=n&&(lr[0][s[1]].l<t||!(i&(1<<(lr[0][s[1]].num-1)))))s[1]++;\n                //\u56e0\u4e3a\u4e24\u79cd\u6392\u5e8f\u4f1a\u5bfc\u81f4\u987a\u5e8f\u4e0d\u540c\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u72b6\u6001\u662f\u7528\u539f\u672c\u7684num\uff0c\u8fd9\u6837\u65b9\u4fbf\u7edf\u4e00\n\t\t\t\tif(s[0]<=n&&lr[0][s[0]].l<=t){\n\t\t\t\t\tt=lr[0][s[0]].r+1;//\u4e24\u79cd\u60c5\u51b5\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(s[1]<=n&&t+lr[1][j].t>=lr[0][s[1]].l){\n\t\t\t\t\tt=lr[0][s[1]].r+1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t+lr[1][j].t<lr[1][j].l){\n\t\t\t\tint to=i|(1<<(lr[1][j].num-1));\n                //\u8fd9\u91cc\u8bb0\u5f97\u4e5f\u662fnum\n\t\t\t\tif(f[to]>t+lr[1][j].t){\n\t\t\t\t\tf[to]=t+lr[1][j].t;\n\t\t\t\t\tpre[to]=j;\n                    //\u8fd9\u91cc\u8981\u5b58j\uff0c\u4e0d\u7136\u65e0\u6cd5\u51cf\u53bbt[j]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(p==1)calc((1<<n)-1,1);\n\telse {//P=2\u65f6\u53d6\u4e92\u8865\u7684\u4e24\u4e2a\u72b6\u6001\u5373\u53ef\n\t\tfor(int i=0;i<(1<<n);i++){\n\t\t\tif(f[i]!=INF&&f[(1<<n)-1-i]!=INF){\n\t\t\t\tcalc(i,1);\n\t\t\t\tcalc((1<<n)-1-i,2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(!ans[1][0])return puts(\"NO\"),0;\n\tputs(\"YES\");\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d %d\\n\",ans[i][0],ans[i][1]);\n\treturn 0;\n}\n```",
        "postTime": 1591150759,
        "uid": 71403,
        "name": "\u4e00\u53f6\u77e5\u79cb\u3002",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6313 \u3010[eJOI2018]\u62a4\u7167\u3011"
    },
    {
        "content": "$n\\leq 22$\u4e00\u773c\u72b6\u538b\uff0c\u518d\u52a0\u4e0a\u8fd9\u4e2a\u7b7e\u8bc1\u529e\u7406\u662f**\u6709\u5e8f\u8fdb\u884c**\u7684\uff0c\u56e0\u6b64\u72b6\u538b\u5c31\u6ca1\u95ee\u9898\u4e86\u3002\n\n$P$\u53ea\u6709$1$\u6216$2$\u3002\u5982\u679c\u662f$1$\u7684\u8bdd\uff0c\u7b54\u6848\u5c31\u76f4\u63a5\u662f\u5168\u96c6\uff1b\u5426\u5219\uff0c\u56e0\u4e3a\u4e24\u5f20\u62a4\u7167\u662f**\u76f8\u4e92\u72ec\u7acb**\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u62a4\u7167$1$\u529e\u7406\u7684\u90e8\u5206\uff0c\u5219\u62a4\u7167$2$\u529e\u7406\u7684\u90e8\u5206\u5c31\u662f\u5176**\u8865\u96c6**\u3002\n\n\u6211\u4eec\u8bbe$f[i]$\u8868\u793a\u5f53\u96c6\u5408$i$\u4e2d\u7684\u6240\u6709\u7b7e\u8bc1\u5168\u90fd\u529e\u5b8c\u540e\uff0c**\u53ef\u4ee5\u7ed3\u675f\u7684\u6700\u5c0f\u65f6\u95f4**\u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8bbe\u5462\uff0c\u53cd\u6b63\u6700\u7ec8\u7b54\u6848\u4e5f\u4e0d\u8981\u6c42\u4f60\u529e\u7406\u62a4\u7167\u7684\u65f6\u95f4\u6700\u77ed\uff0c\u529e\u5feb\u529e\u6162\u4e0d\u90fd\u80fd\u8fc7\u5417\uff1f\n\n\u56e0\u4e3a\u5bf9\u4e8e\u540c\u4e00\u5f20\u7b7e\u8bc1\uff0c\u4f60**\u529e\u7684\u8d8a\u65e9**\uff0c\u5c31\u8d8a\u6709\u53ef\u80fd**\u518d\u6324\u51fa\u4e00\u6bb5\u65f6\u95f4\u7ed9\u53e6\u4e00\u5f20\u7b7e\u8bc1**\u3002\u51b5\u4e14\uff0c\u5982\u679c\u4f60\u62a4\u7167\u529e\u7684\u592a\u665a\uff0c\u53ef\u80fd\u76f4\u5230\u4e00\u573atrip\u5df2\u7ecf\u5f00\u59cb\u4e86\u7b7e\u8bc1\u8fd8\u6ca1\u529e\u5b8c\u3002\u56e0\u6b64\uff0c\u4f60\u4e0d\u5982\u5c31\u5c3d\u91cf\u7f29\u77ed\u529e\u5b8c\u96c6\u5408\u5185\u7b7e\u8bc1\u7684\u65f6\u95f4\uff0c\u589e\u52a0\u7559\u7ed9\u5176\u4ed6\u7b7e\u8bc1\u7684\u65f6\u95f4\u3002\n\n\u6211\u4eec\u679a\u4e3e\u4e00\u4e2a$j$\uff0c\u8868\u793a\u6700\u540e\u4e00\u5f20\u529e\u7406\u7684\u7b7e\u8bc1\u662f\u7b7e\u8bc1$j$\u3002\u6211\u4eec\u8bbe\u4e00\u4e2a$now$\u8868\u793a\u6700\u65e9\u80fd**\u5f00\u59cb\u529e\u7406**\u8be5\u7b7e\u8bc1\u7684\u65f6\u95f4\uff0c\u8fd9\u6837$now+t_j$\u5373\u4e3a\u6700\u65e9\u7ed3\u675f\u529e\u7406\u7684\u65f6\u95f4\u3002\u663e\u7136\uff0c\u8fd9\u4e2a$now$\u521d\u59cb\u5c31\u662f$f[i\\setminus j]$\uff0c\u5176\u4e2d$\\setminus$\u8868\u793a\u4ece\u96c6\u5408\u4e2d\u5220\u53bb\u5143\u7d20\u7684\u64cd\u4f5c\u3002\n\n\u6709\u4ec0\u4e48\u65f6\u5019\u8fd9\u4e2a$now$\u4e0d\u5408\u6cd5\u5462\uff1f\n\n\u663e\u7136\uff0c\u5f53\u8fd9\u4e2a$now$\u5728\u67d0\u6bb5trip**\u6b63\u4e2d\u95f4**\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u8bbe$[l_k,r_k]$\u4e3a\u4e00\u6bb5trip\u7ecf\u8fc7\u7684\u65f6\u95f4\u6bb5\u3002\u5219\u5982\u679c$now\\in[l_k,r_k]$\uff0c\u5b83\u5c31\u81f3\u5c11\u9700\u8981\u5230$r_k+1$\u624d\u80fd\u5f00\u59cb\u3002\n\n\u5e76\u4e14\uff0c\u56e0\u4e3a\u9898\u76ee\u8bf4\u4e86\u201c**\u53bbtrip\u65f6\u62a4\u7167\u5fc5\u987b\u5728\u8eab\u8fb9**\u201d\uff0c\u5219\u5982\u679c\u51fa\u73b0$now<l_k$\u4f46$now+t_j\\geq l_k$\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a$now$\u8fd8\u662f\u5fc5\u987b\u63a8\u8fdf\u5230$r_k+1$\u5f00\u59cb\u3002\n\n\u4e0a\u4e24\u8005\u7684$r_k+1$\u90fd\u662f\u8981\u53d6\u6700\u5927\u503c\u7684\uff0c\u56e0\u4e3a\u6700\u7ec8\u7684$now$**\u4e0d\u80fd\u6ee1\u8db3\u4e0a\u4e24\u8005\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6761\u4ef6**\u3002\n\n\u7b49\u7b49\uff0c\u8fd8\u6ca1\u5b8c\u3002\u6211\u4eec\u8dd1\u4e00\u904d\u540e\uff0c$now$\u53ef\u80fd\u53d8\u5927\u4e86\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5b83\u53ef\u80fd\u8fdb\u5165\u65b0\u7684$[l_k,r_k]$\u533a\u95f4\uff0c\u6216\u662f\u518d\u6b21\u4e0d\u80fd\u5728trip\u524d\u529e\u5b8c\u62a4\u7167\uff01\n\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n\u518d\u8dd1\u4e00\u8fb9\u5457\uff01\n\n\u4e8e\u662f\u6211\u4eec\u73b0\u5728\u5f97\u5230\u7684\u7b97\u6cd5\u662f$n^32^n$\u7684\uff0c\u5176\u4e2d$n^3$\u5206\u522b\u6765\u81ea\u4e8e\u679a\u4e3e$j$\uff0c\u6bcf\u4e00\u904d\u7684\u679a\u4e3e$k$\uff0c\u4ee5\u53ca\u6700\u591a\u8dd1$n$\u904d\u7684\u679a\u4e3e$k$\u3002\u867d\u7136\u80af\u5b9a\u662f\u8dd1\u4e0d\u6ee1\u7684\uff0c\u4f46\u56e0\u4e3a\u6700\u5927\u6709$n\\leq22$\uff0c\u5f97\u5206\u53ea\u6709$90\\%$\u3002\n\n\u4ee3\u7801\uff08\u91c7\u53d6\u586b\u8868\u6cd5\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,f[1<<24],l[24],r[24],t[24],frm[1<<24],res[24][2],MAXN;\nvoid calc(int sta,int id){\n\tif(!sta)return;\n\tres[frm[sta]][0]=id;\n\tres[frm[sta]][1]=f[sta]-t[frm[sta]];\n\tcalc(sta^(1<<frm[sta]),id);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m),memset(f,0x3f3f3f3f,sizeof(f)),MAXN=1<<n;\n\tfor(int i=0;i<n;i++)scanf(\"%d%d%d\",&l[i],&r[i],&t[i]),r[i]+=l[i]-1;\n\tf[0]=1;\n\tfor(int i=1;i<MAXN;i++){\n\t\tfor(int j=0;j<n;j++){\n\t\t\tif(!(i&(1<<j)))continue;\n\t\t\tint now=f[i^(1<<j)];\n\t\t\twhile(true){\n\t\t\t\tif(now+t[j]>=f[i])break;\n\t\t\t\tint las=now;\n\t\t\t\tfor(int k=0;k<n;k++){\n\t\t\t\t\tif((i&(1<<k))&&now<=l[k]&&now+t[j]>=l[k])now=max(now,r[k]+1);\n\t\t\t\t\tif(l[k]<=now&&now<=r[k])now=max(now,r[k]+1);\n\t\t\t\t}\n\t\t\t\tif(las==now)break;\n\t\t\t}\n\t\t\tif(now+t[j]<f[i]&&now+t[j]<l[j])f[i]=now+t[j],frm[i]=j;\n\t\t}\n\t}\n\tif(m==1){\n\t\tif(f[MAXN-1]==0x3f3f3f3f){puts(\"NO\");return 0;}\n\t\tputs(\"YES\");\n\t\tcalc(MAXN-1,1);\n\t\tfor(int i=0;i<n;i++)printf(\"%d %d\\n\",res[i][0],res[i][1]);\n\t}else{\n\t\tfor(int i=0;i<MAXN;i++){\n\t\t\tif(f[i]==0x3f3f3f3f||f[(MAXN-1)^i]==0x3f3f3f3f)continue;\n\t\t\tputs(\"YES\");\n\t\t\tcalc(i,1);\n\t\t\tcalc((MAXN-1)^i,2);\n\t\t\tfor(int i=0;i<n;i++)printf(\"%d %d\\n\",res[i][0],res[i][1]);\n\t\t\treturn 0;\n\t\t}\n\t\tputs(\"NO\");\n\t}\n\treturn 0;\n}\n```\n\u6211\u4eec\u4e0d\u5f97\u4e0d\u4f18\u5316\u590d\u6742\u5ea6\u3002\u56e0\u4e3a$now$\u6bcf\u66f4\u65b0\u4e00\u904d\uff0c\u6211\u4eec\u90fd\u8981\u91cd\u65b0\u8dd1\u4e00\u904d$k$\uff0c\u8fd9\u662f\u4e0d\u662f\u592a\u6d6a\u8d39\u4e86\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u524a\u51cf\u590d\u6742\u5ea6\uff0c\u6bd4\u5982\u8bf4\uff0c\u5728\u5bf9\u7b7e\u8bc1\u6309\u67d0\u79cd\u987a\u5e8f\u6392\u5e8f\u540e**\u5168\u7a0b\u4f7f\u7528\u4e00\u4e2a\u6307\u9488**\u3002\u6bd4\u5982\u5c31**\u6309$l$\u9012\u589e\u6392\u5e8f**\u3002\n\n------------\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6761\u4ef6$now\\in[l_k,r_k]$\uff0c\u6211\u4eec\u53ef\u4ee5\u62c6\u6210\u4e24\u534a\uff0c\u5373$now\\geq l_k$\u548c$now\\leq r_k$\u3002\n\n\u5bf9\u4e8e\u540e\u4e00\u534a\uff0c\u4e00\u4e2a$r_k$\u5982\u679c\u73b0\u5728\u4e0d\u6210\u7acb\uff0c\u5219\u518d\u5f80\u540e\u4e5f\u4e0d\u53ef\u80fd\u6210\u7acb\uff08\u56e0\u4e3a$now$\u662f\u9012\u589e\u7684\uff09\u3002\u56e0\u6b64\u56e0\u6b64\u6211\u4eec\u7528\u4e00\u4e2a\u6307\u9488$p_1$\u8868\u793a\u5f53\u524d\u679a\u4e3e\u5230\u7684\u67d0\u4e2a$k$\u4f7f\u5f97$r_k\\geq now$\u3002\n\n\u5bf9\u4e8e\u524d\u4e00\u534a\uff0c\u4ecd\u7136\u56e0\u4e3a$now$\u662f\u9012\u589e\u7684\uff0c\u73b0\u5728\u4e0d\u6210\u7acb\u7684$l_k$\u53ef\u80fd\u7b49$now$\u589e\u52a0\u540e\u5c31\u6210\u7acb\u4e86\u3002\u56e0\u6b64\u6211\u4eec\u5b9e\u9645\u4e0a\u4f1a\u5bf9\u6bcf\u4e2a$k$\u7b49\u5230\u4e00\u4e2a\u65f6\u523b\uff0c\u4f7f\u5f97\u4e24\u8fb9\u90fd\u6210\u7acb\u3002\n\n\u5f53\u7136\uff0c\u4e5f\u6709\u53ef\u80fd\u8fd9\u4e2a$now$\u76f4\u63a5\u8df3\u8fc7\u4e86\uff0c\u540e\u4e00\u534a\u5df2\u7ecf\u4e0d\u6210\u7acb\u4e86\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u589e\u52a0$p_1$\uff0c\u627e\u5230\u4e0b\u4e00\u4e2a\u540e\u4e00\u534a\u6210\u7acb\u7684\u4f4d\u7f6e\uff0c\u5e76\u8010\u5fc3\u7b49\u5f85$now$\u518d\u6b21\u6da8\u5230\u524d\u4e00\u534a\u6210\u7acb\u3002\n\n------------\n\n\u5bf9\u4e8e\u540e\u4e00\u4e2a\u6761\u4ef6$now<l_k$\u4e14$now+t_j\\geq l_k$\uff0c\u6211\u4eec\u5957\u7528\u5148\u524d\u7684\u601d\u8def\uff0c\u7528$p_2$\u8868\u793a\u5f53\u524d\u679a\u4e3e\u5230\u7684\u6709$now<l_k$\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u518d\u6b21\u8010\u5fc3\u7b49\u5f85\u76f4\u5230$now+t_i$\u6da8\u5230\u5927\u4e8e\u7b49\u4e8e$l_k$\u7684\u65f6\u5019\u8f6c\u79fb\u5373\u53ef\u3002\n\n------------\n\n\u5219\u73b0\u5728\u6211\u4eec\u590d\u6742\u5ea6\u4f18\u5316\u5230\u4e86$O(n^22^n)$\uff0c\u4ecd\u7136\u6709\u4e9b\u5371\u9669\u3002\u600e\u4e48\u529e\u5462\uff1f\n\n\u56e0\u4e3a\u679a\u4e3e$j$\u662f\u514d\u4e0d\u4e86\u7684\uff0c\u56e0\u6b64\u8003\u8651\u7701\u6389\u6bcf\u4e00\u6b21\u7684$p_1,p_2$\u7684\u4ece\u5934\u5f00\u59cb\u679a\u4e3e\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\u4e0e$j$\u6709\u5173\u7684\u4ec5\u5728\u540e\u4e00\u4e2a\u6761\u4ef6$now<l_k$\u4e14$now+t_j\\geq l_k$\u51fa\u73b0\uff0c\u800c\u4e0e\u524d\u4e00\u4e2a\u6761\u4ef6\u65e0\u5173\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5c06$j$**\u6309\u7167$t_j$\u9012\u589e\u7684\u987a\u5e8f\u679a\u4e3e**\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1$j$\u5c0f\u65f6\u4e0d\u5408\u6cd5\u7684$k$\u5230$j$\u5927\u65f6\u53ef\u80fd\u5c31\u5408\u6cd5\u4e86\uff0c\u4f46$j$\u5927\u65f6\u4e0d\u5408\u6cd5\u7684$k$\u5728$j$\u5c0f\u65f6\u4e5f\u4e0d\u53ef\u80fd\u5408\u6cd5\u3002\n\n\u8fd9\u6837\u5c31\u5c06\u590d\u6742\u5ea6\u4f18\u5316\u5230\u4e86$O(n2^n)$\u3002\n\n\u4ee3\u7801\uff08\u91c7\u7528\u5237\u8868\u6cd5\uff0c\u6709\u82f1\u6587\u6ce8\u91ca\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,f[1<<24],l[24],r[24],t[24],frm[1<<24],res[24][2],MAXN,ordl[24],ordt[24];//ordl is in the increasing order of l, while ordt is in that of t.\nvoid calc(int sta,int id){//restore the time when each visa was handled\n\tif(!sta)return;\n\tres[frm[sta]][0]=id;\n\tres[frm[sta]][1]=f[sta]-t[frm[sta]];\n\tcalc(sta^(1<<frm[sta]),id);\n}\nbool cmpl(int x,int y){\n\treturn l[x]<l[y];\n}\nbool cmpt(int x,int y){\n\treturn t[x]<t[y];\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m),memset(f,0x3f3f3f3f,sizeof(f)),MAXN=1<<n;\n\tfor(int i=0;i<n;i++)scanf(\"%d%d%d\",&l[i],&r[i],&t[i]),r[i]+=l[i]-1,ordl[i]=ordt[i]=i;\n\tsort(ordl,ordl+n,cmpl);\n\tsort(ordt,ordt+n,cmpt);\n\tf[0]=1;\n\tfor(int i=0;i<MAXN;i++){\n\t\tint now=f[i];\n\t\tif(now==0x3f3f3f3f)continue;\n\t\tint p1=0,p2=0;//pointer for l<=now<=r and pointer for now<=l<=now+t.\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint J=ordt[j];//the j-th smallest index by the order of k is J.\n\t\t\tif(i&(1<<J))continue;\n\t\t\twhile(true){\n\t\t\t\twhile(p1<n&&r[ordl[p1]]<now)p1++;//ensure that r[ordl[pl]]>=now;\n\t\t\t\twhile(p2<n&&(!(i&(1<<ordl[p2]))||l[ordl[p2]]<now))p2++;\n\t\t\t\tif(p1<n&&l[ordl[p1]]<=now){now=r[ordl[p1]]+1;continue;}\n\t\t\t\tif(p2<n&&now+t[J]>=l[ordl[p2]]){now=r[ordl[p2]]+1;continue;}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(now+t[J]<f[i|(1<<J)]&&now+t[J]<l[J])f[i|(1<<J)]=now+t[J],frm[i|(1<<J)]=J;//transferring only takes place when the answer is better than the previous one and the time the visa finished is before the trip\n\t\t}\n\t}\n\tif(m==1){\n\t\tif(f[MAXN-1]==0x3f3f3f3f){puts(\"NO\");return 0;}\n\t\tputs(\"YES\");\n\t\tcalc(MAXN-1,1);\n\t\tfor(int i=0;i<n;i++)printf(\"%d %d\\n\",res[i][0],res[i][1]);\n\t}else{\n\t\tfor(int i=0;i<MAXN;i++){//numerate the section which is done by passport 1, and the remaining is done by passport 2.\n\t\t\tif(f[i]==0x3f3f3f3f||f[(MAXN-1)^i]==0x3f3f3f3f)continue;\n\t\t\tputs(\"YES\");\n\t\t\tcalc(i,1);\n\t\t\tcalc((MAXN-1)^i,2);\n\t\t\tfor(int i=0;i<n;i++)printf(\"%d %d\\n\",res[i][0],res[i][1]);\n\t\t\treturn 0;\n\t\t}\n\t\tputs(\"NO\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1592299820,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6313 \u3010[eJOI2018]\u62a4\u7167\u3011"
    },
    {
        "content": "**\u524d\u8a00**\n\n------------\n\n\u597d\u9898\uff0c\u603b\u5171\u7528\u4e86 7 \u5c0f\u65f6\uff0c\u6253\u4e86 5k \u4ee3\u7801\u3002\n\n\u672c\u9898\u89e3\u5c06\u8bb2\u4e00\u4e2a $O(n2^n\\log n)$ \u7684\u65b9\u6cd5\u3002\n\n**\u601d\u8def**\n\n------------\n\n\u8003\u8651 $P=1$ \u7684\u60c5\u51b5\uff0c\u53d1\u73b0\u53ef\u4ee5\u901a\u8fc7\u72b6\u538b\u89e3\u51b3\uff0c\u5373\u8bbe $f_i$ \u4e3a\u5f53\u4e00\u5f20\u62a4\u7167\u83b7\u5f97\u7b7e\u8bc1\u96c6\u5408\u4e3a $i$ \u65f6\u62a4\u7167\u6700\u65e9\u80fd\u591f\u81ea\u7531\u652f\u914d\u7684\u65f6\u95f4\uff0c\u82e5\u4e0d\u8003\u8651\u4efb\u4f55\u9650\u5236\uff0c\u5176\u8f6c\u79fb\u7684\u5f0f\u5b50\u5982\u4e0b\uff1a\n\n$f_i = \\min_{j \\in i} f_{i-2^{j-1}} + t_j$\n\n\u663e\u7136\uff0c\u72b6\u6001\u8f6c\u79fb\u8fd8\u6709\u5176\u5b83\u6761\u4ef6\uff0c\u6574\u7406\u4e0b\u6765\u6709\u4e24\u6761\uff1a\n\n1. \u8981\u6c42\u7533\u8bf7\u7b7e\u8bc1\u65f6\u4e0d\u80fd\u5728\u4e0a\u8bfe\u3002\n\n1. \u8981\u6c42\u7533\u8bf7\u7b7e\u8bc1\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u51fa\u73b0\u8fc7\u9700\u8981\u68c0\u67e5\u8be5\u62a4\u7167\u7684\u8bfe\u7a0b\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5728\u8f6c\u79fb\u540e\u5c06 $f_i$ \u5904\u7406\u4e00\u4e0b\u6765\u907f\u514d\u8fdd\u53cd\u7b2c\u4e00\u4e2a\u6761\u4ef6\u7684\u60c5\u51b5\uff0c\u4f7f\u5f97\u5982\u679c\u6b64\u65f6\u5982\u679c\u662f\u5728\u4e0a\u8bfe\u65f6\u95f4\u5c31\u4e00\u76f4\u5f80\u540e\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u662f\u4e0a\u8bfe\u65f6\u95f4\u7684\u65f6\u95f4\u70b9\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4e8c\u5206\u627e\u5230\u6b64\u65f6 $f_i$ \u6240\u5728\u7684\u8bfe\u7a0b\u518d\u9884\u5904\u7406\u89e3\u51b3\u3002\u4f46\u662f\u6b64\u65f6\u8fd8\u662f\u4e0d\u80fd\u76f4\u63a5\u8f6c\u79fb\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4eec\u5c06\u8f6c\u79fb\u7684\u5f0f\u5b50\u6539\u53d8\u4e00\u4e0b\uff1a\n\n\u8bbe $ti$ \u4e3a\u4ece $f_{i-2^{j-1}}$ \u5f00\u59cb\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u7684\u65f6\u95f4\u70b9\u3002\n\n$f_i = \\min_{j \\in i} ti + t_j$\n\n\u76ee\u524d\u7684\u95ee\u9898\u662f\u6c42 $ti$\uff0c\u6211\u4eec\u53d1\u73b0 $n$ \u4e2a\u8bfe\u7a0b\u4e2d\u95f4\u6700\u591a\u53ea\u6709 $n$ \u6bb5\u7a7a\u95f2\u65f6\u95f4\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/eiubposi.png)\n\uff08\u7ea2\u8272\u4e3a\u4f11\u606f\u65f6\u95f4\uff09\n\n\u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e $ti$\uff0c\u53ea\u9700\u8981\u770b $f_{i-2^{j-1}}$ \u5230\u4e0b\u4e00\u4e2a\u9700\u8981\u7528\u5230\u8be5\u62a4\u7167\u7684\u8bfe\u7a0b\u7684\u65f6\u95f4\u591f\u4e0d\u591f $t_j$\uff0c\u4e0d\u591f\u5219\u5f80\u540e\u9762\u4e00\u4e2a\u6574\u5757\u7ea2\u8272\u4e00\u4e2a\u6574\u5757\u7ea2\u8272\u5730\u770b\uff0c\u770b\u5b83\u7684\u5de6\u7aef\u70b9\u5230\u4e0b\u4e00\u4e2a\u9700\u8981\u7528\u5230\u8be5\u62a4\u7167\u7684\u8bfe\u7a0b\u7684\u65f6\u95f4\u591f\u4e0d\u591f $t_j$\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u53ef\u884c\u7684\u65f6\u95f4\u70b9\u5373\u53ef\u3002\u5982\u679c\u8981\u627e\u5230\u4e0b\u4e00\u4e2a\u9700\u8981\u7528\u5230\u8be5\u62a4\u7167\u7684\u8bfe\u7a0b\u9700\u8981\u7528\u5230\u4e8c\u5206\u3002\n\n\u4f46\u8fd9\u4e48\u505a\u65f6\u95f4\u662f $O(n^2 \\log n)$ \u7684\uff0c\u6bd4\u66b4\u529b\u8fd8\u52a3\uff0c\u9700\u8981\u4f18\u5316\u4e00\u4e2a $n$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a $j$ \u5904\u7406\u4e00\u4e0b $ti$ \u592a\u6d6a\u8d39\u65f6\u95f4\u4e86\uff0c\u4e0d\u5982\u79bb\u7ebf\u4e0b\u6765\u5728\u5916\u9762\u5904\u7406\u51fa\u6bcf\u4e2a\u6574\u5757\u7684\u5de6\u7aef\u70b9\u80fd\u591f\u63d0\u4f9b\u7684\u6700\u957f\u65f6\u95f4\u7136\u540e\u5c06\u8be2\u95ee\u6392\u5e8f\u540e\u5728\u5185\u90e8\u8fdb\u884c $O(n \\log n)$ \u79bb\u7ebf\u5904\u7406\u5373\u53ef\uff0c\u9700\u8981\u4f7f\u7528\u7ebf\u6bb5\u6811\u548c\u79bb\u6563\u5316\u3002\n\n\u5bf9\u4e8e $P=2$ \u7684\u60c5\u51b5\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u5176\u4e2d\u4e00\u4e2a\u62a4\u7167\u7684\u96c6\u5408\uff0c\u53e6\u4e00\u4e2a\u62a4\u7167\u4e0e\u5176\u4e92\u8865\u5373\u53ef\u3002\u5173\u4e8e\u65b9\u6848\u8f93\u51fa\uff0c\u5728\u72b6\u6001\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u4e0b\u8f6c\u79fb\u8fc7\u7a0b\u5373\u53ef\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $O(n2^n\\log n)$ \u7684\u5927\u5e38\u6570\u505a\u6cd5\uff0c\u88ab\u5361\u5e38\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884c\u4f18\u5316\uff0c\u6211\u7b80\u5355\u63d0\u4e00\u4e0b\u6211\u4f18\u5316\u7684\u70b9\u3002\n\n1. \u7531\u4e8e\u662f\u5355\u70b9\u4fee\u6539\u67e5\u8be2\u524d\u7f00\u6700\u5927\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u7ebf\u6bb5\u6811\u6362\u6210\u6811\u72b6\u6570\u7ec4\u3002\n1. \u5bf9\u4e8e\u627e\u5230\u4e0d\u5408\u6cd5 $f_i$ \u6240\u5728\u7684\u8bfe\u7a0b\u53ef\u4ee5\u4e0d\u7528\u4e8c\u5206\uff0c\u56e0\u4e3a\u5b83\u6240\u5728\u7684\u8bfe\u7a0b\u76f8\u5bf9 $f_{i-2^{j-1}}$ \u4e00\u5b9a\u662f\u9012\u589e\u7684\uff0c\u53ef\u4ee5\u6253\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u3002\n1. \u4f7f\u7528 C++98\u3002\n\n\u4ee3\u7801\u5f88\u4e71\uff0c\u5176\u5b9e\u8fd8\u6709\u4e00\u4e9b\u4f18\u5316\u7684\u70b9\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\n\n**code**\n\n------------\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename G> inline void read(G &x) {x=0;G f=1;char ch=getchar();while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();if(ch=='-') f=-1,ch=getchar();while(ch>='0'&&ch<='9') {x=x*10+(ch^48);ch=getchar();}x*=f;}\nconst int MAXN=(1<<22)+5;\nint d[30];\nvoid update(int x,int z) {\n    for(int i=x;i<30;i+=(i&-i)) d[i]=min(d[i],z); \n}\nint query(int x) {\n    int res=INT_MAX;\n    for(int i=x;i;i-=(i&-i)) res=min(res,d[i]);\n    return res;\n}\nvoid update(int l,int r,int k,int p,int z) {\n    if(l==k&&r==k) {\n        d[p]=min(d[p],z);\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(k<=mid) update(l,mid,k,p<<1,z);\n    else update(mid+1,r,k,p<<1|1,z);\n    d[p]=min(d[p<<1],d[p<<1|1]);\n}\nstruct node{\n    int s,len,t,idx;\n}a[30];\nint dir[30],bok[30],tmp[30],idx[30];\nbool cmp(node x,node y) {\n    return x.s<y.s;\n}\nint n,k,f[MAXN],las[MAXN],as[MAXN],lis[MAXN],ans[30],nxt[30];\nbool g[30];\nvector<int> v[30];\nsigned main() {\t\n    // freopen(\"passports.in\",\"r\",stdin);\n    // freopen(\"passports.out\",\"w\",stdout);\n    read(n),read(k);\n    for(int i=1;i<=n;++i) {\n        read(a[i].s),read(a[i].len),read(a[i].t);\n        a[i].idx=i;\n    }\n    sort(a+1,a+1+n,cmp);\n    for(int i=1;i<=n;++i) dir[i]=a[i].t;\n    for(int i=1;i<=n;++i) bok[i]=a[i].s;\n    sort(dir+1,dir+1+n);\n    int cnt=unique(dir+1,dir+1+n)-dir-1;\n    for(int i=1;i<=n;++i) {\n        a[i].t=lower_bound(dir+1,dir+1+cnt,a[i].t)-dir;\n    }\n    for(int i=n;i>=1;--i) {\n        if(i==n||a[i].s+a[i].len<a[i+1].s) nxt[i]=a[i].s+a[i].len;\n        else nxt[i]=nxt[i+1];\n    }\n    a[0].len=1,lis[0]=(a[1].s==1);\n    f[0]=1;\n    for(int i=1;i<(1<<n);++i) f[i]=INT_MAX;\n    for(int i=1;i<(1<<n);++i) {\n        int ls=0,tot=0;\n        for(int j=1;j<=n;++j) {\n            if((i>>(j-1))&1) {\n                ++tot;\n                tmp[tot]=a[j].s;\n                idx[tot]=j;\n                v[j].clear();\n            }\n        }\n        for(int j=n;j>=1;--j) {\n            if((i>>(j-1))&1) {\n                int ti=f[i-(1<<(j-1))],p=upper_bound(tmp+1,tmp+1+tot,ti+dir[a[j].t])-tmp-1;\n                p=idx[p];\n                if(p!=0&&ti<=a[p].s) {\n                    v[p].push_back(j);\n                    continue;\n                }\n                if(ti<=a[j].s-dir[a[j].t]-1) {\n                    int nw=ti+dir[a[j].t];\n                    int k=lis[i-(1<<(j-1))];\n                    while(k!=n&&a[k+1].s<=nw) ++k;\n                    if(k!=0&&nw<a[k].s+a[k].len) nw=nxt[k];\n                    if(nw<f[i]) {\n                        f[i]=nw,las[i]=j,as[i]=ti,lis[i]=k;\n                    }\n                }\n            }\n        }\n        memset(d,127,sizeof(d));\n        for(int j=n;j>=1;--j) {\n            if((i>>(j-1))&1) {\n                for(int t1=0;t1<v[j].size();++t1) {\n                    int k=v[j][t1];\n                    int ti=query(n-a[k].t+1);\n                    if(ti<=a[k].s-dir[a[k].t]-1) {\n                        int nw=ti+dir[a[k].t];\n                        int p=lis[i-(1<<(j-1))];\n                        while(p!=n&&a[p+1].s<=nw) ++p;\n                        if(p!=0&&nw<a[p].s+a[p].len) nw=nxt[p];\n                        if(nw<f[i]) {\n                            f[i]=nw,las[i]=k,as[i]=ti,lis[i]=p;\n                        }\n                    }\n                }\n                ls=j;\n            }\n            if(a[j].s-a[j-1].s-a[j-1].len>0) {\n                int k=(ls==0?n:upper_bound(dir+1,dir+1+cnt,a[ls].s-a[j-1].s-a[j-1].len-1)-dir-1);\n                if(k!=0) update(n-k+1,a[j-1].s+a[j-1].len);\n            }\n        }\n    }\n    if(k==1) {\n        for(int i=(1<<n)-1;i<(1<<n);++i) {\n            if(f[i]!=INT_MAX&&f[(1<<n)-i-1]!=INT_MAX) {\n                puts(\"YES\");\n                int nw=i;\n                while(nw!=0) {\n                    ans[a[las[nw]].idx]=as[nw];\n                    g[a[las[nw]].idx]=0;\n                    nw-=(1<<(las[nw]-1));\n                }\n                nw=(1<<n)-i-1;\n                while(nw!=0) {\n                    ans[a[las[nw]].idx]=as[nw];\n                    g[a[las[nw]].idx]=1;\n                    nw-=(1<<(las[nw]-1));\n                }\n                for(int j=1;j<=n;++j) {\n                    printf(\"%d %d\\n\",g[j]+1,ans[j]);\n                }\n                return 0;\n            }\n        }\n    }\n    else {\n        for(int i=0;i<(1<<(n-1));++i) {\n            if(f[i]!=INT_MAX&&f[(1<<n)-i-1]!=INT_MAX) {\n                puts(\"YES\");\n                int nw=i;\n                while(nw!=0) {\n                    ans[a[las[nw]].idx]=as[nw];\n                    g[a[las[nw]].idx]=0;\n                    nw-=(1<<(las[nw]-1));\n                }\n                nw=(1<<n)-i-1;\n                while(nw!=0) {\n                    ans[a[las[nw]].idx]=as[nw];\n                    g[a[las[nw]].idx]=1;\n                    nw-=(1<<(las[nw]-1));\n                }\n                for(int j=1;j<=n;++j) {\n                    printf(\"%d %d\\n\",g[j]+1,ans[j]);\n                }\n                return 0;\n            }\n        }\n    }\n    puts(\"NO\");\n\treturn 0;\n}\n/*\n2 1\n99804934 8385 2669639\n99873926 1 2360419\n\n*/\n```",
        "postTime": 1673420156,
        "uid": 271260,
        "name": "PosVII",
        "ccfLevel": 7,
        "title": "P6313 [eJOI2018] \u62a4\u7167 \u9898\u89e3"
    }
]