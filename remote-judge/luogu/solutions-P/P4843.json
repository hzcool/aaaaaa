[
    {
        "content": "\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u7684\u505a\u6cd5\u5927\u4f6c\u4eec\u90fd\u8bb2\u8fc7\u4e86\uff0c\u6211\u5c31\u6765\u8bb2\u4e00\u4e2a\u53e6\u7c7b\u7684\u89e3\u6cd5\u3002\uff08\u4e0d\u8fc7\u4e5f\u662f\u7f51\u7edc\u6d41\uff09\n\n~~\u8fd9\u4e2a\u505a\u6cd5\u662f\u8003\u573a\u4e0a\u60f3\u4e86\u5f88\u4e45\u90fd\u4e0d\u4f1a\u540e\u5947\u601d\u5999\u60f3\u60f3\u51fa\u6765\u7684\uff08\u4e0d\u4f1a\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\uff09\uff0c\u6240\u4ee5\u6ca1\u591a\u5c11\u601d\u8def\u5f15\u5bfc\u3002~~\n\n\u9996\u5148\u539f\u9898\u660e\u663e\u53ef\u4ee5\u8f6c\u79fb\u6210\u4e00\u4e2a\u7c7b\u4f3c\u6700\u5c0f\u94fe\u8986\u76d6\u7684\u95ee\u9898\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u6211\u7684\u5177\u4f53\u505a\u6cd5\uff1a\n\n\u6211\u4eec\u5bf9\u539f\u6765\u7684\u6709\u5411\u65e0\u73af\u56fe\u8fdb\u884c\u6539\u9020\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0h7bd7gh.png)\n\n\u4e0a\u9762\u7684\u662f\u539f\u56fe\uff0c\u6211\u4eec\u628a\u56fe\u4e2d\u7684\u6bcf\u4e00\u6761\u8fb9 $e_i$ \u62c6\u6210\u4e24\u6761\u8fb9\uff1a\u4e00\u6761\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $1$\uff0c\u4e0d\u59a8\u53d6\u540d\u53eb $a_i$\uff1b\u4e00\u6761\u6d41\u91cf\u4e3a $\\infty$\uff0c\u8d39\u7528\u4e3a $0$\uff0c\u53d6\u540d\u53eb $b_i$\u3002\u7136\u540e\u6e90\u70b9\u5411\u6bcf\u4e2a\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\uff08\u4e5f\u5c31\u662f\u94fe\u8986\u76d6\u7684\u8d77\u70b9\uff09\u8fde\u8fb9\uff0c\u6d41\u91cf $\\infty$\uff0c\u8d39\u7528 $0$\uff1b\u6bcf\u4e2a\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\uff08\u4e5f\u5c31\u662f\u94fe\u8986\u76d6\u7684\u7ec8\u70b9\uff09\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf $\\infty$\uff0c\u8d39\u7528 $0$\u3002\n\n\u7136\u540e\u8dd1**\u6700\u5927**\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u610f\u601d\u5c31\u662f\u8bf4\u6bcf\u6b21\u589e\u5e7f\u65f6\uff0c\u76f8\u5f53\u4e8e\u6211\u65b0\u8986\u76d6\u4e00\u6761\u94fe\u3002\u5728\u589e\u5e7f\u4e2d\uff1a\n\n\u5982\u679c\u67d0\u6761\u539f\u56fe\u4e2d\u7684\u8fb9 $e_i$ \u6ca1\u6709\u88ab\u8d70\u8fc7\uff0c\u90a3\u4e48\u4e3a\u4e86\u6ee1\u8db3\u6700\u5927\u8d39\u7528\uff0c\u7a0b\u5e8f\u80af\u5b9a\u4f1a\u9009\u62e9\u6d41\u8d39\u7528\u4e3a $1$ \u7684\u90a3\u6761\u8fb9 $a_i$\uff0c\u8d39\u7528\u589e\u52a0 $1$\uff0c\u4ee3\u8868\u6211\u65b0\u6e05\u7406\u4e86\u4e00\u6761\u96ea\u9053\uff0c\u5373\u65b0\u8bbf\u95ee\u4e86\u4e00\u6761\u539f\u56fe\u4e2d\u7684\u8fb9\uff1b\n\n\u5982\u679c\u8fd9\u6761\u8fb9 $e_i$ \u88ab\u8d70\u8fc7\u4e86\uff0c\u90a3\u4e48\u8d39\u7528\u4e3a $1$ \u7684\u90a3\u6761\u8fb9\u80af\u5b9a\u88ab\u6d41\u6ee1\u4e86\uff0c\u53ea\u80fd\u6d41\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff0c\u4e0d\u8d21\u732e\u8d39\u7528\uff0c\u610f\u601d\u5c31\u662f\u6211\u8d70\u8fc7\u7684\u8fd9\u6761\u8fb9\u5728\u6211\u524d\u51e0\u6b21\u8986\u76d6\u65f6\u5df2\u7ecf\u88ab\u8986\u76d6\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u53ea\u662f\u8def\u8fc7\u8fd9\uff0c\u5e76\u4e0d\u8981\u6e05\u7406\u8fd9\u3002\n\n\u7136\u540e\u6839\u636e\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u7684\u7279\u6027\uff0c\u6bcf\u6b21\u589e\u5e7f\u5b8c\u540e\uff0c\u80fd\u4fdd\u8bc1\u6240\u5f97\u7684\u89e3\u662f\u5f53\u524d\u7684\u6700\u4f18\u89e3\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u80fd\u4fdd\u8bc1\u7528\u6700\u4f18\u65b9\u6cd5\u8986\u76d6\u6240\u6709\u8fb9\u3002\n\n\u90a3\u4e48\u5f53\u8d21\u732e\u7684\u8d39\u7528\u7b49\u4e8e\u603b\u8fb9\u6570\u65f6\uff0c\u6574\u4e2a\u56fe\u4e5f\u5c31\u88ab\u6211\u4eec\u8986\u76d6\u5b8c\u4e86\uff0c\u7b54\u6848\u5c31\u662f\u94fe\u7684\u6761\u6570\uff0c\u4e5f\u5c31\u662f\u8986\u76d6\u7684\u6b21\u6570\uff0c\u6216\u8005\u8bf4\u589e\u5e7f\u7684\u6b21\u6570\u3002\n\n\u6574\u9053\u9898\u4e5f\u5c31\u7ed3\u675f\u4e86\u3002\n\n\u987a\u5e26\u8bf4\u4e00\u4e0b\uff0c\u5176\u5b9e\u8fd9\u79cd**\u8dd1\u7f51\u7edc\u6d41\u5374\u4e0d\u8dd1\u5b8c\uff0c\u628a\u7f51\u7edc\u6d41\u5f53\u6210\u4e00\u4e2a\u7c7b\u4f3c\u8d2a\u5fc3\u7684\u5de5\u5177\u6765\u4f7f\u7528**\u7684 trick \u633a\u5b9e\u7528\u4e5f\u633a\u5e38\u89c1\u7684\uff08\u7c7b\u4f3c\u6570\u5b66\u4e2d\u7684\u8bbe\u800c\u4e0d\u6c42\uff09\uff0c\u6bd4\u5982 BZOJ2893\u5f81\u670d\u738b \u4e5f\u53ef\u4ee5\u7528\u8fd9\u4e2a trick \u505a\uff0c\u800c\u4e14\u6bd4\u8fd9\u4e2a\u9ebb\u70e6\u4e00\u70b9\uff0c\u6240\u4ee5\u5efa\u8bae\u603b\u7ed3\u4e00\u4e0b\uff08\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\n#define N 110\n#define M 10010\n#define INF 0x7fffffff\n\nusing namespace std;\n\ninline int read()\n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=(x<<1)+(x<<3)+(ch^'0');\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\n\nint n,s,t,tot,ans;\nint rudu[N],chudu[N];\nint cnt=1,head[N],to[N*4+M*4],nxt[N*4+M*4],c[N*4+M*4],w[N*4+M*4];\nint pre[N],dis[N];\nbool inq[N];\n\nqueue<int>q;\n\nvoid adde(int u,int v,int ci,int wi)\n{\n\tto[++cnt]=v;\n\tc[cnt]=ci;\n\tw[cnt]=wi;\n\tnxt[cnt]=head[u];\n\thead[u]=cnt;\n\t\n\tto[++cnt]=u;\n\tc[cnt]=0;\n\tw[cnt]=-wi;\n\tnxt[cnt]=head[v];\n\thead[v]=cnt;\n}\n\nbool SPFA()\n{\n\tmemset(dis,128,sizeof(dis));\n\tq.push(s);\n\tdis[s]=0;\n\tinq[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tinq[u]=0;\n\t\tfor(int i=head[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif(c[i]&&dis[u]+w[i]>dis[v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w[i];\n\t\t\t\tpre[v]=i;\n\t\t\t\tif(!inq[v])\n\t\t\t\t{\n\t\t\t\t\tinq[v]=1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t]!=dis[0];\n}\n\nvoid MCMF()\n{\n\tint maxcost=0,maxflow=0;\n\twhile(SPFA())\n\t{\n\t\tint minflow=INF;\n\t\tfor(int u=t;u!=s;u=to[pre[u]^1]) \n\t\t\tminflow=min(minflow,c[pre[u]]);\n\t\tfor(int u=t;u!=s;u=to[pre[u]^1])\n\t\t{\n\t\t\tc[pre[u]]-=minflow;\n\t\t\tc[pre[u]^1]+=minflow;\n\t\t\tmaxcost+=minflow*w[pre[u]];\n\t\t}\n\t\tmaxflow+=minflow;\n\t\tans++;//\u7edf\u8ba1\u589e\u5e7f\u6b21\u6570\uff08\u94fe\u7684\u6761\u6570\uff09\n\t\tif(maxcost==tot) break;//\u5982\u679c\u6700\u5927\u8d39\u7528\u8fbe\u5230\u603b\u8fb9\u6570\n\t}\n}\n\nint main()\n{\n\tn=read();\n\ts=1,t=1+n+1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint m=read();\n\t\ttot+=m;\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tint v=read();\n\t\t\tadde(1+i,1+v,1,1);//ai\n\t\t\tadde(1+i,1+v,INF,0);//bi\n\t\t\tchudu[i]++,rudu[v]++;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!rudu[i]) adde(s,1+i,INF,0);//\u6e90\u70b9\u8fde\u5165\u5ea6\u4e3a0\u7684\u70b9\n\t\tif(!chudu[i]) adde(1+i,t,INF,0);//\u51fa\u5ea6\u4e3a0\u7684\u70b9\u8fde\u6c47\u70b9\n\t}\n\tMCMF();//\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n/*\n5\n1 2\n0\n2 2 4\n0\n1 4\n*/\n```",
        "postTime": 1597125499,
        "uid": 118318,
        "name": "ez_lcw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4843 \u3010\u6e05\u7406\u96ea\u9053\u3011"
    },
    {
        "content": "\u9898\u76ee\u5730\u5740\uff1a[P4843 \u6e05\u7406\u96ea\u9053](https://www.luogu.org/problemnew/show/P4843)\n\n### \u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\n\n#### \u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\n> \u7ed9\u5b9a $n$ \u4e2a\u70b9\uff0c $m$ \u6761\u8fb9\u7684\u7f51\u7edc\uff0c\u6c42\u4e00\u4e2a\u53ef\u884c\u89e3\uff0c\u4f7f\u5f97\u8fb9 $(u,v)$ \u7684\u6d41\u91cf\u4ecb\u4e8e $[B(u,v),C(u,v)]$ \u4e4b\u95f4\uff0c\u5e76\u4e14\u6574\u4e2a\u7f51\u7edc\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\u3002\n\n\u5982\u679c\u628a $C-B$ \u4f5c\u4e3a\u5bb9\u91cf\u4e0a\u754c\uff0c $0$ \u4f5c\u4e3a\u5bb9\u91cf\u4e0b\u754c\uff0c\u5c31\u662f\u4e00\u822c\u7684\u7f51\u7edc\u6d41\u6a21\u578b\u3002\n\n\u7136\u800c\u6c42\u51fa\u7684\u5b9e\u9645\u6d41\u91cf\u4e3a $f(u,v)+B(u,v)$ \uff0c\u4e0d\u4e00\u5b9a\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\uff0c\u9700\u8981\u8c03\u6574\u3002\n\n\u8bbe $inB[u]=\\sum B(i,u)$ \uff0c $outB[u]=\\sum B(u,i)$ \uff0c $d[u]=inB[u]-outB[u]$ \u3002\n\n\u65b0\u5efa\u6e90\u6c47\uff0c $S$ \u5411 $d>0$ \u7684\u70b9\u8fde\u8fb9\uff0c $d<0$ \u7684\u70b9\u5411 $T$ \u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u76f8\u5e94\u7684 $d$ \u3002\n\n\u5728\u8be5\u7f51\u7edc\u4e0a\u6c42\u6700\u5927\u6d41\uff0c\u5219\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf $+$ \u4e0b\u754c\u5c31\u662f\u539f\u7f51\u7edc\u7684\u4e00\u4e2a\u53ef\u884c\u6d41\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u53ef\u7701\u7565 $inB,outB$ \u6570\u7ec4\uff0c\u76f4\u63a5\u5728 $d$ \u6570\u7ec4\u4e0a\u4fee\u6539\u3002\n\n#### \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\n\u4ece $T$ \u5230 $S$ \u8fde\u4e00\u6761\u4e0b\u754c\u4e3a $0$ \uff0c\u4e0a\u754c\u4e3a $+inf$ \u7684\u8fb9\uff0c\u628a\u6c47\u6d41\u5165\u7684\u6d41\u91cf\u8f6c\u79fb\u7ed9\u6e90\u6d41\u51fa\u7684\u6d41\u91cf\uff0c\u8f6c\u5316\u4e3a\u65e0\u6e90\u6c47\u7684\u7f51\u7edc\uff0c\u7136\u540e\u6c42\u89e3**\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41**\u3002\n\n#### \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41\n\n\u4e24\u4e2a\u65b9\u6cd5\uff1a\n\n1. \u4e8c\u5206\u7b54\u6848 $ans$ \uff0c\u4ece $T$ \u5230 $S$ \u8fde\u4e00\u6761\u4e0b\u754c\u4e3a $0$ \uff0c\u4e0a\u754c\u4e3a $ans$ \u7684\u8fb9\uff0c\u8f6c\u5316\u4e3a\u65e0\u6e90\u6c47\u7f51\u7edc\u3002\u627e\u5230\u6700\u5c0f\u7684 $ans$ \uff0c\u4f7f\u5f97\u8be5\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u7f51\u7edc\u6709\u53ef\u884c\u6d41\u3002\n2. \u7c7b\u4f3c**\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41**\u7684\u6784\u56fe\u65b9\u6cd5\uff0c\u4f46\u5148\u4e0d\u6dfb\u52a0 $T$ \u5230 $S$ \u7684\u8fb9\uff0c\u6c42\u4e00\u6b21\u8d85\u7ea7\u6e90\u5230\u8d85\u7ea7\u6c47\u7684\u6700\u5927\u6d41\u3002\u7136\u540e\u518d\u6dfb\u52a0\u4e00\u6761\u4ece $T$ \u5230 $S$ \u4e0b\u754c\u4e3a $0$ \uff0c\u4e0a\u754c\u4e3a $+inf$ \u7684\u8fb9\uff0c\u5728**\u6b8b\u91cf\u7f51\u7edc**\u4e0a\u518d\u6c42\u4e00\u6b21\u8d85\u7ea7\u6e90\u5230\u8d85\u7ea7\u6c47\u7684\u6700\u5927\u6d41\u3002\u6d41\u7ecf $T$ \u5230 $S$ \u7684\u8fb9\u7684\u6d41\u91cf\u5c31\u662f\u6700\u5c0f\u6d41\u7684\u503c\u3002\u8be5\u7b97\u6cd5\u7684\u601d\u60f3\u662f\u5728\u7b2c\u4e00\u6b65\u4e2d\u5c3d\u53ef\u80fd\u586b\u5145\u5faa\u73af\u6d41\uff0c\u4ee5\u51cf\u5c0f\u6700\u5c0f\u6d41\u7684\u4ee3\u4ef7\u3002\n\n\u8fde\u8fb9\uff1a\n\n1. $(s,i,0,+inf)$ \uff1b\n2. $(i,t,0,+inf)$ \uff1b\n3. \u5bf9\u6bcf\u6761\u96ea\u9053\uff0c\u8fde\u8fb9 $(i,j,1,+inf)$ \u3002\n\n\u5bf9\u7f51\u7edc $s-t$ \u6c42**\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41**\u3002\n\n\u8fd9\u91cc\u4f7f\u7528\u65b9\u6cd5\u4e8c\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 106, M = 2e4 + 6, inf = 1e9;\nint n, s, t, S, T, d[N], ans;\nint Head[N], Edge[M], Leng[M], Next[M], tot = 1;\n\ninline void add(int x, int y, int z) {\n    Edge[++tot] = y;\n    Leng[tot] = z;\n    Next[tot] = Head[x];\n    Head[x] = tot;\n    Edge[++tot] = x;\n    Leng[tot] = 0;\n    Next[tot] = Head[y];\n    Head[y] = tot;\n}\n\ninline void ins(int x, int y, int l, int r) {\n    add(x, y, r - l);\n    d[x] -= l;\n    d[y] += l;\n}\n\ninline bool bfs() {\n    memset(d, 0, sizeof(d));\n    queue<int> q;\n    q.push(S);\n    d[S] = 1;\n    while (q.size()) {\n        int x = q.front();\n        q.pop();\n        for (int i = Head[x]; i; i = Next[i]) {\n            int y = Edge[i], z = Leng[i];\n            if (d[y] || !z) continue;\n            q.push(y);\n            d[y] = d[x] + 1;\n            if (y == T) return 1;\n        }\n    }\n    return 0;\n}\n\nint dinic(int x, int flow) {\n    if (x == T) return flow;\n    int rest = flow;\n    for (int i = Head[x]; i && rest; i = Next[i]) {\n        int y = Edge[i], z = Leng[i];\n        if (d[y] != d[x] + 1 || !z) continue;\n        int k = dinic(y, min(rest, z));\n        if (!k) d[y] = 0;\n        else {\n            Leng[i] -= k;\n            Leng[i^1] += k;\n            rest -= k;\n        }\n    }\n    return flow - rest;\n}\n\nint main() {\n    cin >> n;\n    s = n + 1, t = n + 2, S = n + 3, T = n + 4;\n    for (int i = 1; i <= n; i++) {\n        ins(s, i, 0, inf);\n        ins(i, t, 0, inf);\n        int k;\n        scanf(\"%d\", &k);\n        while (k--) {\n            int x;\n            scanf(\"%d\", &x);\n            ins(i, x, 1, inf);\n        }\n    }\n    for (int i = 1; i <= t; i++) {\n        if (d[i] > 0) add(S, i, d[i]);\n        else if (d[i] < 0) add(i, T, -d[i]);\n    }\n    while (bfs()) while (dinic(S, inf));\n    ins(t, s, 0, inf);\n    while (bfs()) while (dinic(S, inf));\n    cout << Leng[tot] << endl;\n    return 0;\n}\n```",
        "postTime": 1552324964,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "P4843 \u6e05\u7406\u96ea\u9053"
    },
    {
        "content": "[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4843)\n\n~~\u9898\u89e3\u533a\u597d\u50cf\u5bf9\u6211\u8fd9\u79cd\u849f\u84bb\u4e0d\u592a\u53cb\u597d\u554a\uff0c\u6211\u6765\u8865\u4e00\u53d1~~\n\n\u672c\u7bc7\u6587\u5b57\u6bd4\u8f83\u591a\uff0c\u5efa\u8bae\u7ec6\u5fc3\u8bfb\uff08\u849f\u84bb\u4f1a\u8865\u56fe\u7684\uff09\n\n### 1.\u7b97\u6cd5\n- \u56fe\u8bba \n\n\u8fd9\u4e2a\u663e\u7136\u5427\n\n- \u7f51\u7edc\u6d41\n\n\u4e3a\u4ec0\u4e48\u7528\u5230\u7f51\u7edc\u6d41\u5462\uff1f\n\n\u56e0\u4e3a\u6bcf\u4e2a\u659c\u5761\u90fd\u4ee3\u8868\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u4eba\u6ed1\u96ea\u76f8\u5f53\u4e8e\u6d41\u6d41\u91cf\n\n\u6bcf\u4e2a\u70b9\u90fd\u53ef\u4ee5\u51fa\u53d1\uff0c\u6240\u4ee5\u6e90\u70b9S\u5411\u6bcf\u4e2a\u70b9\u8fde\u8fb9\uff1b\u6bcf\u4e2a\u70b9\u90fd\u53ef\u4ee5\u7ed3\u675f\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u5411\u6c47\u70b9T\u8fde\u8fb9\n\n\u53ef\u662f\u6d41\u91cf\u5462\uff1f\n\n\u6bcf\u6761\u8fb9\u6211\u4eec\u90fd\u6ca1\u529e\u6cd5\u786e\u5b9a\u6d41\u8fc7\u6b21\u6570\uff0c\u4f46\u662f\u5982\u679c\u5168\u90e8\u8bbe\u7f6e\u4e3a$inf$\u53c8\u663e\u7136\u4e0d\u53ef\u884c\n\n- \u6709\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\n\n\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u90fd\u81f3\u5c11\u6d41\u8fc71\u6b21\uff0c\u4f46\u53ef\u4ee5\u6d41\u65e0\u9650\u6b21\uff0c\u53ef\u4ee5\u60f3\u5230\u6709\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\n\n- \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41\n\n\u8fd9\u4e2a\u663e\u7136\u5427\n\n### 2.\u5b9e\u73b0\n\n~~\u8fd9\u662f\u849f\u84bb\u6700\u8270\u96be\u7684\u90e8\u5206\uff0c\u5927\u4f6c\u4eec\u53ef\u7565\u8fc7~~\n\n\u600e\u4e48\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\n\n\u6211\u4eec\u4e0d\u4ece\u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u8bf4\u8d77\n\n- \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41\n\n\u5df2\u77e5\uff1a\u5982\u4f55\u6c42\u6709\u6e90\u6c47\u65e0\u4e0b\u754c\u6700\u5927\u6d41\n\n\u5b9e\u73b0\u6700\u5c0f\u6d41\u4f1a\u6ee1\u8db3\u4ec0\u4e48\u5462\uff1f\n\n**\u6d41\u91cf\u5b88\u6052**\uff08\u9664\u6e90\u6c47\u70b9\u5916\u7684\u6bcf\u4e2a\u70b9\u7684\u603b\u6d41\u5165\u91cf=\u603b\u6d41\u51fa\u91cf\uff09\u4e14**\u6c47\u70b9\u6d41\u91cf\u6700\u5c0f**\n\n\u5bf9\u4e8e\u5df2\u77e5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff0c\u6bcf\u4e00\u6761\u589e\u5e7f\u8def\uff0c\u6d41\u8fc7\u4e00\u6b21\u5bf9\u4e8e\u6b8b\u91cf\u7f51\u7edc\u4ecd\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u627e\u5230\u53ef\u884c\u6d41\uff08\u4ec5\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\uff09\uff0c\u7136\u540e\u51cf\u5c11T-S\u7684\u6700\u5927\u6d41\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5b50\u53ef\u884c\u5462\uff1f\n\n\u56e0\u4e3a\u53cd\u5411\u8fb9\u7684\u6d41\u91cf\u589e\u52a0\u7b49\u4ef7\u4e8e\u6b63\u5411\u8fb9\u7684\u7684\u6d41\u91cf\u51cf\u5c11\u3002\u56e0\u6b64\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u627e\u51fat\u5230s\u7684\u6d41\u5c31\u76f8\u5f53\u4e8e\u51cf\u5c0f\u4e86s\u5230t\u7684\u6d41\u3002\n\n- \u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\n\u6211\u4eec\u6765\u770b\u6d41\u91cf\u5b88\u6052\u7684\u5b9a\u4e49\uff1a\n\n**\u9664\u6e90\u6c47\u70b9\u5916**\u7684\u6bcf\u4e2a\u70b9\u7684\u603b\u6d41\u5165\u91cf=\u603b\u6d41\u51fa\u91cf\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u8fd9\u91cc\u53ea\u6709\u6e90\u6c47\u70b9\u5728\u641e\u7279\u6b8a\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u8fde\u4e00\u6761T-S\u7684\u8fb9\uff0c\u4e0b\u754c0\uff0c\u4e0a\u754c$inf$\uff0c\u8868\u793a\u6211\u4eec\u628a\u4eceS\u6d41\u5230T\u7684\u6d41\u91cf\u90fd\u6d41\u56de\u53bb\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6e90\u6c47\u70b9\u5c31\u88ab\u89e3\u51b3\u4e86\n\n\u7b49\u7b49\uff0c\u4f60\u8fd8\u6ca1\u6709\u8bf4\u4e0a\u4e0b\u754c\u600e\u4e48\u5f04\u5462\uff01\n\n\u4e0d\u7740\u6025\uff0c\u6211\u4eec\u4e0d\u662f\u5df2\u7ecf\u627e\u5230\u6211\u4eec\u7684\u7ec8\u6781\u76ee\u6807\u4e86\u5417\uff1f\n\n- \u65e0\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\n\n\u7ec8\u4e8e\uff0c\u6211\u4eec\u6765\u5904\u7406\u4e0a\u4e0b\u754c\u4e86\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u6d41\u90fd\u8981\u6ee1\u8db3\u4e0b\u754c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u6b8b\u91cf\u7f51\u7edc\uff0c\u6bcf\u6761\u8fb9\u6d41\u91cf\u4e3a \u4e0a\u754c-\u4e0b\u754c \uff0c\u8868\u793a\u5bf9\u4e8e\u539f\u7f51\u7edc\u6d41\u4e0b\u754c\u6d41\u6ee1\uff0c\u5728 \u4e0a\u754c-\u4e0b\u754c \u91cc\u505a\u6587\u7ae0\u3002\n\n\u53ef\u4ee5\u8ba4\u4e3a\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\u4e00\u6761\u4eceu\u5230v\u7684\u8fb9\u4e0a\u76841\u4e2a\u6d41\u91cf\u4ee3\u8868\u5c06\u539f\u56fe\u4e2du\u5230v\u7684\u6d41\u91cf\u589e\u59271\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u6bcf\u4e2a\u70b9\u4e0d\u4e00\u5b9a\u4f1a\u6d41\u91cf\u5b88\u6052\u554a\uff0c\u600e\u4e48\u529e\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5e94\u8be5\u5148\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u6ede\u7559\u7684\u6d41\u91cf\uff08\u5efa\u8fb9\u65f6\u968f\u4fbf\u7edf\u8ba1\uff09\uff0c\u4f1a\u6709\u4e00\u4e0b\u51e0\u79cd\u60c5\u51b5\n\n1. \u5982\u679c\u70b9i\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\u6d41\u5165\u91cf>\u6d41\u51fa\u91cf,\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7ed9\u591a\u7684\u6d41\u5165\u91cf\u627e\u4e00\u4e2a\u53bb\u5904\n2. \u5982\u679c\u70b9i\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\u6d41\u5165\u91cf<\u6d41\u51fa\u91cf,\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7ed9\u591a\u7684\u6d41\u51fa\u91cf\u627e\u4e00\u4e2a\u6765\u5904\n3. \u5982\u679c\u70b9i\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\u6d41\u5165\u91cf=\u6d41\u51fa\u91cf,\u90a3\u4e48\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\n\n\u6211\u4eec\u6240\u65b0\u5efa\u7684\u4ecei\u51fa\u53d1\u7684\u8fb9\u4e5f\u8981\u6709\u4e2a\u53bb\u5904,\u6307\u5411i\u7684\u8fb9\u4e5f\u8981\u6709\u4e2a\u6765\u8def,\u56e0\u6b64\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u865a\u62df\u6e90\u70b9ss\u548c\u4e00\u4e2a\u865a\u62df\u6c47\u70b9tt\u3002\u65b0\u5efa\u7684\u6307\u5411i\u7684\u8fb9\u90fd\u4ecess\u51fa\u53d1,\u4ecei\u51fa\u53d1\u7684\u8fb9\u90fd\u6307\u5411tt\u3002\n\n\u7136\u540e\u53ef\u4ee5\u8bc1\u660e\uff0css\u7684\u6d41\u51fa\u91cf=tt\u7684\u6d41\u5165\u91cf\uff08\u60f3\u60f3\u4e3a\u4ec0\u4e48/\u6587\u7ae0\u5e95\u90e8\u6709\u53c2\u8003\u8d44\u6599\u6709\u8bc1\u660e\uff09\n\n\u90a3\u4e48\uff0c\u5230\u5e95\u5728\u4e0b\u754c\u4e0a\u52a0\u4e0a\u591a\u5c11\u4f1a\u4f7f\u5f97\u6d41\u91cf\u5b88\u6052\u5462\n\n\u6293\u4f4f\u5df2\u77e5\uff0c\u6709\u6e90\u6c47\uff0c\u90a3\u5c31\u662fss-tt\u7684\u6700\u5927\u6d41\u5b9e\u9524\u4e86\uff08\u6ce8\u610f\u6211\u4eec\u4e0d\u5728\u4e4e\u53ef\u884c\u6d41\u662f\u5426\u6700\u5c0f\u6216\u6700\u5927\uff09\n\n\u53ef\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\u6839\u636e\u6211\u4eec\u7684\u5efa\u8fb9\uff0c\u8981\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\uff0c\u5fc5\u987bss\u548ctt\u76f8\u8fde\u7684\u8fb9\u90fd\u6ee1\u6d41\n\n\u53ef\u4ee5\u53d1\u73b0\u5047\u5982\u5b58\u5728\u8fd9\u6837\u7684\u65b9\u6848,\u8fd9\u6837\u7684\u6d41\u4e00\u5b9a\u662f\u6211\u4eec\u6240\u5efa\u51fa\u7684\u56fe\u7684ss-tt\u6700\u5927\u6d41,\u6240\u4ee5\u8dd1ss\u5230tt\u7684\u6700\u5927\u6d41\u5373\u53ef\u3002\uff08\u849f\u84bb\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u554a\uff09\n\n### 3.\u4ee3\u7801\n\n\u7ec8\u4e8e\u662f\u4ee3\u7801\u4e86\n\n\u4e0d\u8fc7\u5efa\u8bae\u81ea\u5df1\u6253\uff0c\u6bd5\u7adf\u601d\u8def\u6e05\u6670\u4e86\uff0c\u4e0d\u7136\u53ef\u4ee5\u4ece\u4e0b\u5f80\u4e0a\u518d\u8bfb\u4e00\u904d\n\n```cpp\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#include<cmath>\n#define maxn 100010\n#define inf 1e9\n#define min(A,B) A<B?A:B\nusing namespace std;\nstruct edge{\n    int nex,u,v,w;\n}edge[maxn<<2];//maxn\u7684\u6570\u636e\u8303\u56f4\u662f\u65e0\u8111\u5f00\u7684\nint head[maxn],top=1,cur[maxn],totflow[maxn];\nint n,m,k,s,t,ss,tt,sum=0,maxflow=0;\nint deep[maxn];\nvoid add_edge(int u,int v,int w)\n{\n    edge[++top].v=v;\n    edge[top].u=u; \n    edge[top].w=w;\n    edge[top].nex=head[u];\n    head[u]=top;\n}\nvoid add(int u,int v,int w){add_edge(u,v,w),add_edge(v,u,0);}//\u53cc\u5411\u8fb9\nbool bfs()\n{\n    for(int i=0;i<=t;i++) cur[i]=head[i],deep[i]=0;\n    deep[s]=1;\n    queue<int>q;\n    q.push(s);\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=head[u];i;i=edge[i].nex)\n        {\n            int v=edge[i].v;\n            if(!deep[v]&&edge[i].w)\n            {\n                deep[v]=deep[u]+1;\n                q.push(v);\n            }\n        }\n    }\n    return deep[t];\n}\nint dfs(int u,int lowest)\n{\n    if(u==t) return lowest;\n\tint used=0,rlow;\n    for(int i=cur[u];i&&used<lowest;i=edge[i].nex)\n    {\n    \tcur[u]=i;\n        int v=edge[i].v;\n        if(edge[i].w&&deep[u]+1==deep[v])\n        {\n            if((rlow=dfs(v,min(lowest-used,edge[i].w))))\n            {\n            \tused+=rlow;\n                edge[i].w-=rlow;\n                edge[i^1].w+=rlow;\n                if(used==lowest) break;\n            }   \n        }\n    }\n    if(used<lowest) deep[u]=-1;\n    return used;\n } //\u5168\u90e8\u6a21\u677f\u5c31\u4e0d\u7528\u8bf4\u4e86\nvoid Dinic(){maxflow=0;while(bfs()) maxflow+=dfs(s,inf);}\nint main()\n{\n    scanf(\"%d\",&n);\n    s=0,t=n+1,ss=n+2,tt=n+3;\n    for(int i=1,w,num;i<=n;i++)\n    {\n    \tscanf(\"%d\",&num);\n    \tfor(int j=1;j<=num;j++)\n    \t{\n    \t\tscanf(\"%d\",&w);\n    \t\ttotflow[i]--,totflow[w]++;//\u8fb9\u67431\n    \t\tadd(i,w,inf);//inf-1=inf\n\t\t}\n\t\tadd(s,i,inf); add(i,t,inf);//\u53ef\u4ee5\u8d70\u65e0\u9650\u6b21\n        //\u6ce8\u610fs\u548ct\u662f\u6ca1\u6709\u5fc5\u8981\u7edf\u8ba1totflow\u7684\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(totflow[i]<0) add(i,tt,-totflow[i]);\n\t\telse add(ss,i,totflow[i]);//\u865a\u62df\u8282\u70b9\u7684\u8fde\u8fb9\n\tadd(t,s,inf);//\u6709\u6e90\u6c47\u53d8\u6210\u65e0\u6e90\u6c47\n\ts=ss,t=tt;\n\tDinic();\n\tint ans=edge[top].w;//\u8fd9\u662f\u6700\u540e\u4e00\u6761\u8fb9\u7684\u53cd\u5411\u8fb9\uff0c\u542b\u4e49\u662f\u53ef\u884c\u6d41\u7684\u5927\u5c0f\n\tedge[top].w=edge[top-1].w=0;//\u6700\u540e\u4e00\u6761\u8fb9\u8981\u5220\u6389\n\ts=n+1,t=0;//\u628a\u53ef\u884c\u6d41\u51cf\u5230\u6700\u5c0f\u6d41\uff08\u628a\u53cd\u5411\u8fb9\u90fd\u6d41\u56de\u53bb\u4e14\u6ee1\u8db3\u6d41\u91cf\u5b88\u6052\uff09\n\tDinic();\n\tprintf(\"%d\",ans-maxflow);\n    return 0;\n}\n```",
        "postTime": 1586784370,
        "uid": 144523,
        "name": "JohnJoeZhu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4843 \u3010\u6e05\u7406\u96ea\u9053\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u610f\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u5bb9\u6613\u63a8\u51fa\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41\u7684\u6a21\u578b\u3002\n\n\u5373\u6bcf\u6761\u96ea\u9053\u6d41\u91cf\u4e0b\u754c\u4e3a $1$ \uff0c\u5176\u4ed6\u8fb9\u4e0b\u754c\u4e3a $0$ \u3002\u6240\u6709\u8fb9\u4e0a\u754c\u4e3a $inf$ \u3002\n\n\u7136\u540e\u8dd1\u6700\u5c0f\u6d41\u5373\u53ef\u3002\n\n\u4f46\u662f\u8c01\u6765\u6559\u6211\u6700\u5c0f\u6d41\u600e\u4e48\u8dd1 /kel \u3002\n\n\u6700\u5c0f\u6d41\u4e0d\u80fd\u76f4\u63a5\u8dd1\uff0c\u6211\u4eec\u9700\u8981\u5c06\u95ee\u9898\u8f6c\u6362\u4e00\u4e0b\u3002\n\n\u6bd4\u8f83\u5957\u8def\u7684\u505a\u6cd5\u5c31\u662f\u4e8c\u5206\u7b54\u6848\uff0c\u8fd9\u6837\u95ee\u9898\u8f6c\u6362\u4e3a\u5224\u5b9a\u3002\u5224\u5b9a\u76f4\u63a5\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u5373\u53ef\u3002\u76f4\u63a5\u5957\u6a21\u677f\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define pre(i,a,b) for(int i=a;i>=b;i--)\n#define N 505\nusing namespace std;\nint h[N],tot=1,in[N],s,t;\nstruct edge{\n\tint to,nxt,cap;\n}e[N*N];\nvoid add(int x,int y,int z){\n\tif(!z)return;\n\te[++tot].nxt=h[x];h[x]=tot;e[tot].to=y;e[tot].cap=z;\n\te[++tot].nxt=h[y];h[y]=tot;e[tot].to=x;e[tot].cap=0;\n}\nint sum;\nvoid add(int x,int y,int l,int r){\n\tin[x]-=l;in[y]+=l;\n\tadd(x,y,r-l);\n}\nint d[N],cur[N];queue<int>q;\nbool bfs(){\n\tmemset(d,0,sizeof(d));\n\td[s]=1;q.push(s);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();cur[x]=h[x];\n\t\tfor(int i=h[x];i;i=e[i].nxt)if(e[i].cap&&!d[e[i].to]){\n\t\t\td[e[i].to]=d[x]+1;q.push(e[i].to);\n\t\t}\n\t}\n\treturn d[t]?true:false;\n}\nint dfs(int x,int flow){\n\tif(x==t)return flow;\n\tint res=flow;\n\tfor(int &i=cur[x];i;i=e[i].nxt)if(e[i].cap&&d[e[i].to]==d[x]+1){\n\t\tint now=dfs(e[i].to,min(e[i].cap,res));\n\t\tif(!now)d[e[i].to]=0;\n\t\te[i].cap-=now;e[i^1].cap+=now;res-=now;\n\t\tif(!res)return flow;\n\t}\n\treturn flow-res;\n}\nint S,T,n;\nvector<int>u[N];\nconst int inf = 1e9;\nbool calc(){\n\tint hav=0;\n\trep(i,1,T)if(in[i]>0)add(s,i,in[i]),hav+=in[i];else add(i,t,-in[i]);\n\twhile(bfs())hav-=dfs(s,inf);\n\tif(hav)return false;return true;\n}\nbool check(int mid){\n\tmemset(in,0,sizeof(in));\n\tmemset(h,0,sizeof(h));tot=1;sum=0;\n\tS=n*2+1,T=S+1;s=T+1;t=s+1;\n\trep(i,1,n)add(i,i+n,0,inf),add(S,i,0,inf),add(i+n,T,0,inf);\n\trep(x,1,n){\n\t\tfor(int i=0;i<(int)u[x].size();i++){\n\t\t\tint y=u[x][i];add(x+n,y,1,inf);\n\t\t}\n\t}\n\tadd(T,S,0,mid);\n\treturn calc();\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tint l=1,r=0,ans;\n\trep(i,1,n){\n\t\tint cnt;scanf(\"%d\",&cnt);\n\t\tr+=cnt;\n\t\trep(j,1,cnt){\n\t\t\tint x;scanf(\"%d\",&x);\n\t\t\tu[i].push_back(x);\n\t\t}\n\t}\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid))r=mid-1,ans=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n} \n```",
        "postTime": 1601264717,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4843 \u3010\u6e05\u7406\u96ea\u9053\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u6709\u4e00\u5f20\u6709\u5411\u56fe $G(n, m)$\uff0c\u6bcf\u6b21\u90fd\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\u51fa\u53d1\u6cbf\u4e00\u6761\u8def\u5f84\u884c\u8d70\u3002\u95ee\u8981\u4f7f\u6bcf\u6761\u8fb9\u81f3\u5c11\u904d\u5386\u4e00\u904d\u7684\u6700\u5c11\u51fa\u53d1\u6b21\u6570\u3002\n\n# \u601d\u8def\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\u7684\u9650\u5236\u663e\u7136\u53ef\u4ee5\u865a\u62df\u4e00\u4e2a\u8d85\u7ea7\u8282\u70b9 $0$ \u5f80\u6bcf\u4e2a\u70b9\u8fde\u8fb9\uff0c\u6b64\u65f6\u95ee\u9898\u53d8\u6210\u4e86\u4ece\u96f6\u51fa\u53d1\u8981\u4f7f\u539f\u56fe\u4e2d\u6bcf\u6761\u8fb9\u90fd\u88ab\u904d\u5386\u4e00\u904d\u7684\u7684\u6700\u5c0f\u51fa\u53d1\u6b21\u6570\u3002\u8003\u8651\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u3002\u4ee4\u539f\u56fe\u4e2d\u6bcf\u6761\u8fb9\u4e3a $(u, v, 1, \\infty)$\uff0c\u865a\u62df\u8fb9\u4e3a $(0, i, 0, \\infty)$\uff0c\u6b64\u65f6\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u677f\u7684\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41\u3002\n\n\u7136\u540e\u600e\u4e48\u5199\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41\uff1f\u5e38\u89c4\u505a\u6cd5\u662f\u4e8c\u5206\u7b54\u6848\u7136\u540e\u8dd1\u53ef\u884c\u6d41\u3002\u4f46\u8fd9\u91cc\u6709\u66f4\u597d\u7684\u505a\u6cd5\u3002\u53c2\u8003\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u7684\u60f3\u6cd5\uff0c\u5728\u539f\u6709\u7684 $s, t$ \u5916\u518d\u5efa\u4e00\u5bf9 $S, T$\uff0c\u5148\u4e0d\u8fde $S, T$ \u8dd1\u6700\u5927\u6d41\uff0c\u7136\u540e\u8fde\u8fb9 $(S, T, 0, \\infty)$\uff0c\u6b64\u65f6\u7684**\u6b8b\u91cf\u7f51\u7edc**\u7684\u6700\u5927\u6d41\u4e2d $(S, T)$ \u7684\u6d41\u91cf\u5c31\u662f\u6700\u5c0f\u6d41\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n\nusing namespace std;\n\nconst int inf = 1e9, N = 110, E = 2e5 + 10;\n\nstruct S{\n\tint to, nxt, edge;\n}a[E];\nint head[N], tot;\nint d[N];\n\nvoid add(int u, int v, int c){\n\ta[++tot].to = v;\n\ta[tot].edge = c;\n\ta[tot].nxt = head[u];\n\thead[u] = tot;\n\ta[++tot].to = u;\n\ta[tot].edge = 0;\n\ta[tot].nxt = head[v];\n\thead[v] = tot;\n\treturn ;\n}\nvoid Add(int u, int v, int l, int r){\n\tadd(u, v, r - l);d[u] -= l;d[v] += l;\n}\n\nint in[N], pre[N];\nbool vis[N];\nint level[N];\nint n, m, t, s, S, T;\n\nbool bfs(){\n\tmemset(level, 0, sizeof(level));\n\tqueue<int> q;\n\tq.push(S);\n\tlevel[S] = 1;\n\twhile(!q.empty()){\n\t\tint x = q.front();\n\t\tq.pop();\n\t\tfor(int i = head[x]; i; i = a[i].nxt){\n\t\t\tint c = a[i].edge, y = a[i].to;\n\t\t\tif(c && !level[y]){\n\t\t\t\tq.push(y);\n\t\t\t\tlevel[y] = level[x] + 1;\n\t\t\t\tif(y == T) return 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nint maxflow, flow;\n\nint Dinic(int x, int flow){\n\tif(x == T) return flow;\n\tint rest = flow, in = 0;\n\tfor(int i = head[x]; i && rest; i = a[i].nxt){\n\t\tint y = a[i].to;\n\t\tif(a[i].edge && level[y] == level[x] + 1){\n\t\t\tint in = Dinic(y, min(rest, a[i].edge));\n\t\t\tif(in == 0) level[y] = 0;\n\t\t\telse{\n\t\t\t\ta[i].edge -= in;\n\t\t\t\ta[i ^ 1].edge += in;\n\t\t\t\trest -= in;\n\t\t\t}\n\t\t}\n\t}\n\treturn flow - rest;\n}\ninline int read(){\n    int s = 0, f = 0; char ch = getchar();\n    while(!isdigit(ch)){if(ch == '-') f = 1; ch = getchar();}\n    while(isdigit(ch)) s = s * 10 + ch - 48, ch = getchar();\n    return f ? ~s + 1 : s;\n}\nsigned main(){\n\tn = read();\n\ts = n + 1;t = n + 2;S = n + 3;T = n + 4;\n\tmemset(head, 0, sizeof(head));\n\ttot = 1;\n\tmaxflow = 0;\n\tfor(int i = 1; i <= n; i++){\n\t\tm = read();\n\t\tAdd(s, i, 0, inf);\n\t\tAdd(i, t, 0, inf);\n\t\tfor(int j = 1, to; j <= m; j++){\n\t\t\tto = read();\n\t\t\tAdd(i, to, 1, inf);\n\t\t}\n\t}\n\tfor(int i = 1; i <= t; i++){\n\t\tif(d[i] > 0) add(S, i, d[i]);\n\t\telse if(d[i] < 0) add(i, T, -d[i]);\n\t}\n\twhile(bfs() == true) while(Dinic(S, inf));\n\tAdd(t, s, 0, inf);\n\twhile(bfs() == true) while(Dinic(S, inf));\n\tcout << a[tot].edge;\n\treturn 0;\n}\n```",
        "postTime": 1684386462,
        "uid": 408759,
        "name": "ollo",
        "ccfLevel": 6,
        "title": "P4843 \u6e05\u7406\u96ea\u9053 \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\u662f\u5bfb\u627e\u4e00\u4e2aDAG\u7684\u6700\u5c0f\u8fb9\u8986\u76d6\u3002\n\n\u6211\u4eec\u9996\u5148\u8003\u8651\u628a\u8fb9\u770b\u505a\u70b9\uff0c\u8dd1\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u3002\u56e0\u4e3a\u8fb9\u5f88\u591a\uff08\u53ef\u80fd\u6709$n^2$\u6761\uff09\uff0c\u70b9\u53ef\u4ee5\u91cd\u590d\u8d70\uff0c\u5373\u4f7f\u7f51\u7edc\u6d41\u4e0dT\uff0c\u8dd1\u4f20\u9012\u95ed\u5305\u4e5f\u4f1aT\u3002\u590d\u6742\u5ea6\u4e3a$O(m^3)$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u76f4\u63a5\u5bf9\u539f\u56fe\u8dd1\u7f51\u7edc\u6d41\u3002\n\n\u5efa\u7acb\u4e00\u4e2a$S$\u5411\u6bcf\u4e2a\u70b9\u8fde$inf$\u6d41\u91cf\u7684\u8fb9\uff08\u8868\u793a\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u70b9\u5f00\u59cb\uff09\uff0c\u6bcf\u4e2a\u70b9\u5411$T$\u8fde$inf$\u6d41\u91cf\u7684\u8fb9\uff08\u8868\u793a\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u70b9\u7ed3\u675f\uff09\u3002\u539f\u56fe\u7684\u6bcf\u6761\u8fb9\u8981\u81f3\u5c11\u8d70\u4e00\u904d\uff0c\u4e5f\u5c31\u662f\u6d41\u91cf\u4e3a$[1,inf)$\u3002\u76f4\u63a5\u6700\u5c0f\u6d41\u5373\u53ef\uff08\u5176\u5b9e\u8fd9\u662f\u6700\u5c0f\u6d41\u7684\u6a21\u677f\u9898\uff09\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <queue>\n#include <cstring>\n\nconst int maxn=207;\nconst int maxe=maxn*maxn*5;\nconst int inf=0x3f3f3f3f;\n\nusing namespace std;\n\nint n,tot,x,cnt,s,t,sum,ans;\nint ls[maxn],deg[maxn],dis[maxn];\n\nstruct edge{\n    int y,w,op,next;\n}g[maxe];\n\nqueue <int> q;\n\nvoid add(int x,int y,int w)\n{\n    g[++cnt]=(edge){y,w,cnt+1,ls[x]};\n    ls[x]=cnt;\n    g[++cnt]=(edge){x,0,cnt-1,ls[y]};\n    ls[y]=cnt;\n}\n\nbool bfs()\n{   \n    memset(dis,inf,sizeof(dis));\n    q.push(s);\n    dis[s]=0;  \n    while (!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        for (int i=ls[x];i>0;i=g[i].next)\n        {\n            int y=g[i].y;\n            if ((g[i].w) && (dis[y]>dis[x]+1))\n            {\n                dis[y]=dis[x]+1;\n                q.push(y);\n            }\n        }\n    }\n    return (dis[t]!=inf);\n}\n\nint dfs(int x,int maxf)\n{\n    if ((x==t) || (!maxf)) return maxf;\n    int ret=0;\n    for (int i=ls[x];i>0;i=g[i].next)\n    {\n        int y=g[i].y;\n        if ((g[i].w) && (dis[y]==dis[x]+1))\n        {\n            int f=dfs(y,min(maxf-ret,g[i].w));\n            if (!f) dis[y]=-1;\n            ret+=f;\n            g[i].w-=f;\n            g[g[i].op].w+=f;\n        }\n    }\n    return ret;\n}\n\nint dinic()\n{\n    int flow=0;\n    while (bfs()) \n      flow+=dfs(s,inf);\n    return flow;\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&tot);\n        for (int j=1;j<=tot;j++)\n        {\n            scanf(\"%d\",&x);\n            add(i,x,inf-1);\n            deg[i]--;\n            deg[x]++;\n        }\n    }\t  \n    int S=n+1,T=n+2,SS=n+3,TT=n+4;\n    for (int i=1;i<=n;i++)\n    {\n        add(S,i,inf);\n        add(i,T,inf);\n    }    \n    int nowcnt=cnt;\n    add(T,S,inf);\n    for (int i=1;i<=n;i++)\n    {\n        if (deg[i]>0) add(SS,i,deg[i]),sum+=deg[i];\n        else if (deg[i]<0) add(i,TT,-deg[i]);\n    }\n    s=SS,t=TT;\n    dinic();\n    ans=g[nowcnt+2].w;\n    for (int i=nowcnt+1;i<=cnt;i++) g[i].w=0;    \n    s=T,t=S;\n    ans-=dinic();\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1537445707,
        "uid": 18895,
        "name": "liangzihao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4843 \u3010\u6e05\u7406\u96ea\u9053\u3011"
    }
]