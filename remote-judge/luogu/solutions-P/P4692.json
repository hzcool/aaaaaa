[
    {
        "content": "\u7b80\u5355\u5bb9\u65a5+\u6bd2\u7624STL\u3002\n\n\u8bbe\u957f\u5ea6\u4e3a$n$\u7684\u5e8f\u5217\u5171\u6709$G(n)$\u4e2a\u5b50\u533a\u95f4\uff0c\u5219\uff1a\n\n$$G(n)=\\frac{n(n+1)}{2}$$\n\n\u8003\u8651\u5206\u5f00\u8ba1\u7b97\u6bcf\u4e2a\u989c\u8272\u7684\u8d21\u732e\uff0c\u5229\u7528\u8865\u96c6\u8f6c\u5316\u7684\u601d\u60f3\uff0c\u8bbe\u989c\u8272$c$\u7684\u603b\u8d21\u732e\u4e3a$res_c$\uff0c\u5219\uff1a\n\n$$res_c=\\prod_{i=1}^{n}G(len_i)-\\prod_{i=1}^{n}ans_{c,i}$$\n\n\u5176\u4e2d$ans_{c,i}$\u4e3a\u7b2c$i$\u4e2a\u5e8f\u5217\u4e2d**\u4e0d\u5305\u542b**\u989c\u8272$c$\u7684\u5b50\u533a\u95f4\u4e2a\u6570\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u51fa$ans_{c,i}$\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u4f7f\u4e00\u4e2a\u5b50\u533a\u95f4\u4e0d\u5305\u542b\u67d0\u79cd\u989c\u8272\uff0c\u5219\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u4e00\u5b9a\u5728\u76f8\u90bb\u4e24\u4e2a\u989c\u8272$c$\u4e4b\u95f4\u3002\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u989c\u8272\u5c06\u67d0\u4e2a\u5e8f\u5217\u5206\u6210$m$\u4e2a\u957f\u5ea6\u5206\u522b\u4e3a$l_i$\u7684\u5b50\u5e8f\u5217\uff0c\u5219\u53ef\u4ee5\u5f97\u51fa\uff1a\n\n$$ans_{c,i}=\\sum_{i=1}^{m}G(l_i)$$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u989c\u8272\u5728\u6bcf\u4e2a\u5e8f\u5217\u5185\u7684\u51fa\u73b0\u4f4d\u7f6e\u7ef4\u62a4$set$\u5373\u53ef\u6c42\u51fa$ans_{c,i}$\u3002\n\n\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u603b\u7b54\u6848\uff0c\u8bbe\u603b\u7b54\u6848\u4e3a$ANS$\uff0c\u989c\u8272\u6570\u91cf\u4e3a$cntcol$\u5219\uff1a\n\n$$ANS=\\sum_{i=1}^{cntcol}res_c=\\sum_{i=1}^{cntcol}\\prod_{i=1}^{n}G(len_i)-\\sum_{i=1}^{cntcol}\\prod_{i=1}^{n}ans_{c,i}$$\n\n\u7ef4\u62a4$all_c=\\prod_{i=1}^{n}ans_{c,i}$\uff0c$S=\\sum_{i=1}^{cntcol}all_c$\u5373\u53ef\u6c42\u51fa\u7b54\u6848\u3002\n\n\u8003\u8651\u5982\u4f55\u8fdb\u884c\u4fee\u6539\u3002\u5c06\u67d0\u4e2a\u4f4d\u7f6e\u7684\u989c\u8272\u4fee\u6539\u53ef\u4ee5\u770b\u6210\u5728\u67d0\u989c\u8272\u7684$set$\u4e2d\u5220\u9664\u4e00\u4e2a\u4f4d\u7f6e\u540e\u5728\u53e6\u4e00\u4e2a\u989c\u8272\u7684$set$\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u8003\u8651\u6dfb\u52a0/\u5220\u9664\u4e00\u4e2a\u4f4d\u7f6e\u4ea7\u751f\u7684\u5f71\u54cd\u3002\u5b9e\u8d28\u4e0a\u662f\u5c06\u4e00\u6bb5\u5212\u5206\u51fa\u7684\u5b50\u5e8f\u5217\u5206\u6210\u4e24\u6bb5\u6216\u5c06\u4e24\u6bb5\u5408\u6210\u4e00\u6bb5\uff0c\u76f4\u63a5\u7ef4\u62a4\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u7ec6\u8282\uff1a\u7ef4\u62a4\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u5b58\u5728$all_c$\u53d8\u6210$0$\u53c8\u53d8\u56de\u4e0d\u4e3a$0$\u7684\u60c5\u51b5\uff0c\u5bb9\u6613\u51fa\u9519\uff0c\u9700\u8981\u7279\u522b\u7ef4\u62a4\u3002\u5c06\u4f4d\u7f6e$-1$\u548c$len_i$\u63d2\u5165\u6240\u6709\u989c\u8272\u7684$set$\u4e2d\u53ef\u4ee5\u89c4\u907f\u6389\u5f88\u591a\u7ec6\u8282\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define sIT set<int>::iterator\nusing namespace std;\nconst int MAXN = 200050, P = 19260817, inv2 = 9630409;\nint read() {\n\tchar ch; int x; while(ch = getchar(), ch < '!'); x = ch - 48;\n\twhile(ch = getchar(), ch > '!') x = (x << 3) + (x << 1) + ch - 48; return x;\n}\nint inv(int a) {\n\tif(a == 0) return 1;\n\tint b = P-2, res = 1;\n\tfor(; b; a = 1ll*a*a%P, b >>= 1) if(b&1) res = 1ll*res*a%P;\n\treturn res;\n}\nint G(int _n) {return 1ll*_n*(_n+1)%P*inv2%P;}\nstruct Z {\n\tint p, c;\n\tbool operator < (const Z &b) const {\n\t\treturn p == b.p ? c < b.c : p < b.p;\n\t}\n};\nmap <Z, int> id; map <int, int> idc;\nint n, m, len[MAXN], sigma, _ans[MAXN], all[MAXN], S, piL, cnt, cntcol, _0[MAXN], _all[MAXN];\nbool __0[MAXN];\nvector <int> a[MAXN]; set <int> s[MAXN];\nvoid modify(int p, int _n, int c, int tp) {\n\tbool tmp = __0[p];\n\tS = (S + P - all[c]) % P;\n\tif(!tmp) _all[c] = 1ll*_all[c]*inv(_ans[p])%P;\n\tif(!tmp) all[c] = 1ll*all[c]*inv(_ans[p])%P;\n\tif(!tp) _ans[p] = (_ans[p] - G(_n) + P) % P;\n\telse _ans[p] = _ans[p] + G(_n) % P;\n\tif(_ans[p]) _all[c] = 1ll*_all[c]*_ans[p]%P;\n\tif(!_ans[p] && !tmp) __0[p] = 1, ++_0[c];\n\tif(_ans[p] && tmp) __0[p] = 0, --_0[c];\n\tall[c] = 1ll*all[c]*_ans[p]%P;\n\tif(!_0[c]) all[c] = _all[c];\n\tS = (S + all[c]) % P;\n}\nvoid del(int p, int t) {\n\tint c = a[p][t], u = id[(Z){p, c}];\n\tsIT it = s[u].lower_bound(t), itl, itr;\n\titl = (--it)++; itr = (++it)--;\n\tmodify(u, (*itr)-(*itl)-1, c, 1);\n\tmodify(u, (*it)-(*itl)-1, c, 0);\n\tmodify(u, (*itr)-(*it)-1, c, 0);\n\ts[u].erase(it);\n}\nvoid add(int p, int t) {\n\tint c = a[p][t], u = id[(Z){p, c}];\n\tsIT itr = s[u].upper_bound(t), itl;\n\titl = (--itr)++;\n\tmodify(u, t-(*itl)-1, c, 1);\n\tmodify(u, (*itr)-t-1, c, 1);\n\tmodify(u, (*itr)-(*itl)-1, c, 0);\n\ts[u].insert(t);\n}\nvoid getans() {\n\tfor(int i = 1; i <= n; ++i)\n\t\tfor(int j = 0; j < len[i]; ++j)\n\t\t\tadd(i, j);\n}\nvoid update(int x, int y, int k) {del(x, y); a[x][y] = k; add(x, y);}\nint main() {\n\tn = read(); m = read(); piL = 1;\n\tfor(int i = 1; i <= n; ++i) len[i] = read(), piL = 1ll*piL*G(len[i])%P;\n\tfor(int i = 1; i <= n; ++i)\n\t\tfor(int x, j = 0; j < len[i]; ++j) {\n\t\t\tx = read();\n\t\t\tif(!idc[x]) {\n\t\t\t\tsigma = (sigma + piL) % P;\n\t\t\t\tidc[x] = ++cntcol;\n\t\t\t\t_all[cntcol] = all[cntcol] = piL; S = (S + all[cntcol]) % P;\n\t\t\t} x = idc[x];\n\t\t\tZ t; t = (Z) {i, x};\n\t\t\tif(!id[t]) {\n\t\t\t\tid[t] = ++cnt;\n\t\t\t\ts[cnt].insert(-1); s[cnt].insert(len[i]);\n\t\t\t\t_ans[cnt] = G(len[i]);\n\t\t\t}\n\t\t\ta[i].push_back(x);\n\t\t}\n\tgetans();\n\tprintf(\"%d\\n\", (sigma+P-S)%P);\n\tfor(int x, y, k; m--; ){\n\t\tx = read(); y = read(); k = read();\n\t\tif(!idc[k]) {\n\t\t\tsigma = (sigma + piL) % P;\n\t\t\tidc[k] = ++cntcol;\n\t\t\t_all[cntcol] = all[cntcol] = piL; S = (S + all[cntcol]);\n\t\t} k = idc[k];\n\t\tZ t; t = (Z) {x, k};\n\t\tif(!id[t]) {\n\t\t\tid[t] = ++cnt;\n\t\t\ts[cnt].insert(-1); s[cnt].insert(len[x]);\n\t\t\t_ans[cnt] = G(len[x]);\n\t\t}\n\t\tupdate(x, y-1, k);\n\t\tprintf(\"%d\\n\", (sigma+P-S)%P);\n\t}\n}\n\n```",
        "postTime": 1573086672,
        "uid": 2491,
        "name": "\u8bd7\u4e43",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4692 \u3010[Ynoi2016]\u8c01\u7684\u68a6\u3011"
    },
    {
        "content": "```\n\u54e5\u54e5\u7684\u8eab\u4f53\u6d6e\u5728\u7a7a\u4e2d\u2026\n\n\u6211\u65e0\u8a00\u5730\u8df3\u4e86\u51fa\u53bb\u3002\n\n\u554a\u554a\u2026\u662f\u8fd9\u6837\u554a\u2026\n\n\u7531\u5c90\u59d0\u4e5f\u662f\u8fd9\u79cd\u5fc3\u60c5\u554a\u2026\n\n\u5e76\u6ca1\u6709\u4ec0\u4e48\u9053\u7406\u53ef\u8a00\u2026\n\n\u53ea\u662f\u56e0\u4e3a\u559c\u6b22\u7684\u4eba\u5411\u7740\u5929\u7a7a\u8df3\u4e0b\u53bb\u4e86\u2026\n\n\u6211\u60f3\u8981\u6293\u4f4f\u90a3\u4e2a\u8eab\u4f53\u2026\n\n\u6211\u2014\u2014\n```         \n\n\u7d20\u6674\u65e5~~         \n\n-----------------------------------------\n\n\u5176\u5b9e\u60f3\u5230\u5bb9\u65a5\u7b97\u662f\u4e00\u9053\u5f88\u7b80\u5355\u7684\u9898\u3002            \n\n\u8bf7\u5728\u9605\u8bfb\u65f6\u533a\u5206\u201c\u5e8f\u5217\u201d\u548c\u201c\u751f\u6210\u5e8f\u5217\u201d\u4e24\u4e2a\u6982\u5ff5\u3002\n\n\u5982\u679c\u6b63\u7740\u7b97\u4f30\u8ba1\u8981\u5bf9\u6bcf\u4e2a\u5e8f\u5217\u7684\u989c\u8272\u5404\u5f00\u4e00\u68f5\u5e73\u8861\u6811\u7136\u540e\u533a\u95f4\u4e58\u7ef4\u62a4\u4e00\u5806\u4e1c\u897f\uff0c\u53c8\u96be\u5199\u53c8\u96be\u8c03\u5efa\u8bae\u4e0d\u8981\u8f7b\u6613\u5c1d\u8bd5\u3002               \n\n\u5bf9\u4e8e\u8fd9\u79cd\u8ba1\u6570\u9898\uff0c\u6211\u4eec\u9996\u5148\u8003\u8651\u6bcf\u79cd\u72b6\u6001\u7684\u8d21\u732e\u662f\u7531\u4ec0\u4e48\u7ec4\u6210\u3002\u5f88\u663e\u7136\u7684\u662f\uff0c\u4e00\u79cd\u72b6\u6001\u6700\u540e\u7684\u603b\u8d21\u732e\u7531\u751f\u6210\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u79cd\u989c\u8272\u8d21\u732e\uff0c\u8fd9\u662f\u4e00\u79cd\u5f88\u5957\u8def\u7684\u8ba1\u6570\u6a21\u578b\uff0c\u6211\u4eec\u76f4\u63a5\u8003\u8651\u6bcf\u79cd\u989c\u8272\u5bf9\u6240\u6709\u751f\u6210\u5e8f\u5217\u7684\u8d21\u732e\u3002          \n\n\u63a5\u7740\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u6b63\u7740\u6c42\u8fd9\u4e1c\u897f\u5f88\u56f0\u96be\uff0c\u6bd5\u7adf\u8fd9\u4e1c\u897f\u4e0d\u662f\u53ef\u4ee5\u76f4\u63a5\u7531\u6392\u5217\u7ec4\u5408\u53ef\u4ee5\u5f97\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7528\u5bb9\u65a5\u6765\u7b97\u8fd9\u4e1c\u897f\u3002\u6211\u4eec\u7ef4\u62a4\u5f53\u524d\u603b\u7684\u60c5\u51b5\u4e2d\u6709\u591a\u5c11\u79cd\u751f\u6210\u5e8f\u5217\u5e8f\u5217\u91cc\u9762\uff0c\u989c\u8272 $i$ \u5bf9\u5176\u6ca1\u6709\u8d21\u732e\uff0c\u8bb0\u4e3a $mul_i$ \uff0c\u5f88\u663e\u7136\u7684\u662f\u6700\u540e\u603b\u7684\u751f\u6210\u5e8f\u5217\u6570\u51cf\u53bb $mul_i$ \u5c31\u662f\u4e00\u79cd\u989c\u8272\u7684\u6240\u6709\u8d21\u732e\u6b21\u6570\uff0c\u7b54\u6848\u5373\u662f\u6bcf\u79cd\u989c\u8272\u7684\u603b\u8d21\u732e\u6b21\u6570\u3002            \n\n\u5f88\u663e\u7136\u6211\u4eec\u4e00\u6b21\u5355\u70b9\u4fee\u6539\u53ea\u4f1a\u4fee\u6539\u4e24\u79cd\u989c\u8272\u7684\u603b\u8d21\u732e\u6b21\u6570\uff0c\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u6539\u8fd9\u4e24\u79cd\u989c\u8272\u7684\u603b\u8d21\u732e\u5373\u53ef\u3002\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u6211\u4eec\u77e5\u9053\u4e00\u79cd\u989c\u8272\u7684 $mul_i$ \u662f\u6240\u6709\u5e8f\u5217\u4e2d\u4e0d\u5305\u542b\u989c\u8272 $i$ \u7684\u5b50\u4e32\u7684\u4e2a\u6570\u4e4b\u79ef\uff0c\u8bb0\u4e00\u4e2a\u5e8f\u5217 $x$ \u4e2d\u4e0d\u5305\u542b\u989c\u8272 $i$ \u7684\u5b50\u4e32\u6570\u91cf\u4e3a $sum_{x,i}$ \uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06 $mul_i$ \u7528\u6570\u5b66\u516c\u5f0f\u8868\u8fbe\u6210 $mul_i = \\prod_{x = 1} ^ n sum_{x,i}$ \uff0c\u7531\u4e8e\u4e00\u6b21\u53ea\u4f1a\u52a8\u4e00\u4e2a\u5e8f\u5217\u7684\u4e24\u79cd\u989c\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u8fd9\u4e24\u79cd\u989c\u8272\u5bf9\u5e94\u7684 $sum$ \u3002            \n\n\u7136\u540e\u4f60\u5c31\u53d1\u73b0\u8fd9\u4e1c\u897f\u5f00\u59cb\u5957\u8def\u8d77\u6765\u4e86\uff0c\u6211\u4eec\u76f4\u63a5\u7ef4\u62a4\u6bcf\u4e2a\u5e8f\u5217\u4e2d\u989c\u8272 $i$ \u7684\u4e00\u4e2a\u4f4d\u7f6e\u5173\u7cfb\uff0c\u8fd9\u4e2a\u5f00 set \u5c31\u597d\u4e86\uff0c\u7136\u540e $sum_{x,i}$ \u7684\u503c\u5c31\u662f\u4efb\u610f\u7684\u4e24\u4e2a\u79bb\u5f97\u6700\u8fd1\u7684\u989c\u8272\u4f4d\u7f6e\u4e2d\u95f4\u53ef\u4ee5\u9009\u7684\u5b50\u4e32\u4e2a\u6570\u4e4b\u548c\uff0c\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u5728\u63d2\u5165/\u5220\u9664\u65f6\u5927\u5e38\u6570\u66b4\u529b\u7ef4\u62a4\uff0c\u63a5\u7740\u6211\u4eec\u987a\u4fbf\u4fee\u4e00\u4e0b $mul$ \u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\u3002            \n\n\u662f\u4e0d\u662f\u611f\u89c9\u5f88\u7b80\u5355\uff1f\u7136\u800c\u5b9e\u73b0\u7ec6\u8282\u662f\u771f\u7684\u591a\uff0c\u8c03\u4e86\u6211\u4e00\u665a\u4e0a\u2026\u2026         \n\n\u9996\u5148\u6211\u4eec\u8981\u8003\u8651\u4e00\u4e0b\u6211\u4eec\u4ee3\u7801\u7684\u6838\u5fc3\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u5e8f\u5217\u4e2d\u989c\u8272 $i$ \u4f4d\u7f6e\u5173\u7cfb\u7684 set \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd9\u4e48\u5f00\uff1a          \n\n```cpp\nmap<int,set<int> > mp[100005];\n```       \n\n~~\u7136\u540e\u5b9e\u73b0\u8d77\u6765\u5c31\u4e0d\u7528\u79bb\u6563\u5316\u4e86\uff0c\u5178\u578b\u7684\u7528\u5e38\u6570\u6362\u4ee3\u7801\u5b9e\u73b0~~                   \n\n\u63a5\u7740\u6211\u4eec\u9700\u8981\u6ce8\u610f\u4f60\u5728\u7ef4\u62a4 $mul$ \u65f6\u53ef\u80fd\u78b0\u5230\u5f53\u524d\u7684 $mul$ \u4e3a $0$ \u4f46\u662f\u6211\u4eec\u4fee\u4e86\u4e00\u4e2a $sum$ \u4e4b\u540e\u4f60\u8fd9\u4e2a $mul$ \u8981\u53d8\u56de\u53bb\u5374\u53d8\u4e0d\u56de\u53bb\u7684\u60c5\u51b5\u2026\u2026\u6211\u7684\u529e\u6cd5\u662f\uff0c\u76f4\u63a5\u628a $mul$ \u62c6\u6210\u4e24\u4e2a\u6570\u7ec4\u4e00\u90e8\u5206\u7ef4\u62a4 $0$ \u7684\u60c5\u51b5\u4e00\u90e8\u5206\u7ef4\u62a4\u975e $0$ \u7684\u60c5\u51b5\u3002           \n\n\u7136\u540e\u6ce8\u610f\u7ed9\u4e4b\u524d\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u989c\u8272\u7684 $sum$ \u548c $mul$ \u8d4b\u4e00\u4e0b\u503c\u3002\n\n\u5176\u4ed6\u6bd4\u8f83\u91cd\u8981\u7684\u5b9e\u73b0\u7ec6\u8282\u5176\u5b9e\u4e5f\u6ca1\u592a\u591a\u4e86\uff0c\u4f46\u662f\u5c0f\u7ec6\u8282\u5f88\u591a\uff0c\u5b9e\u73b0\u65f6\u5019\u5c0f\u5fc3\u4e00\u4e0b\u3002              \n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\n#define int long long\nconst int mod = 19260817;\nconst int Len = 2e5 + 5;\nmap<int,set<int> > mp[Len];\nset<int>::iterator it,itt;\nmap<int,long long> mul,mul0,sum[Len],flag,frag,lst;\nmap<int,long long>::iterator mpit;\nlong long All,Ans,pre[Len];\ninline long long qpow(long long a,long long b)\n{\n\tlong long res = 1;\n\twhile(b)\n\t{\n\t\tif(b & 1) res = res * a % mod;\n\t\ta = 1LL * a * a % mod;\n\t\tb = b >> 1;\n\t}\n\treturn res;\n}\nint n,m,len[Len];\nvector<int> v[Len];\ninline long long qs(long long x){return 1LL * x * (x + 1) / 2 % mod;}\ninline int Zero(int x){return (x != 0) ? 0 : 1;}\ninline long long Mul(int x){return mul[x] * Zero(mul0[x]) % mod;}\nsigned main()\n{\n\tscanf(\"%lld %lld\",&n,&m);\n\tfor(int i = 1 ; i <= n ; i ++) scanf(\"%lld\",&len[i]);\n\tAll = 1;\n\tpre[0] = 1;\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tAll = All * qs(len[i]) % mod;\n\t\tpre[i] = All;\n\t\tv[i].push_back(0);\n\t\tfor(int j = 1 ; j <= len[i] ; j ++) \n\t\t{\n\t\t\tint x;scanf(\"%lld\",&x);\n\t\t\tv[i].push_back(x);\n\t\t\tmp[i][x].insert(j);\n\t\t}\n\t\tfor(int j = 1 ; j <= len[i] ; j ++) \n\t\t{\n\t\t\tint l , r = j - 1;\n\t\t\tit = mp[i][v[i][j]].lower_bound(j);\n\t\t\tif(it == mp[i][v[i][j]].begin()) l = 1;\n\t\t\telse itt = it , l = (*-- itt) + 1;\n\t\t\tif(l <= r) sum[i][v[i][j]] += qs(r - l + 1) , sum[i][v[i][j]] %= mod;\n\t\t\tif(it == -- mp[i][v[i][j]].end()) sum[i][v[i][j]] += qs(len[i] - j) , sum[i][v[i][j]] %= mod;\n\t\t}\n\t\tflag.clear();\n\t\tfor(int j = 1 ; j <= len[i] ; j ++) \n\t\t{\n\t\t\tif(flag[v[i][j]]) continue;\n\t\t\tif(!frag[v[i][j]])\n\t\t\t{\n\t\t\t\tfrag[v[i][j]] = 1;\n\t\t\t\tmul[v[i][j]] = 1;\n\t\t\t}\n\t\t\tflag[v[i][j]] = 1;\n\t\t\tif(sum[i][v[i][j]]) mul[v[i][j]] = mul[v[i][j]] * sum[i][v[i][j]] % mod;\n\t\t\telse mul0[v[i][j]] ++;\n\t\t\tmul[v[i][j]] = mul[v[i][j]] * qpow(pre[lst[v[i][j]]] , mod - 2) % mod * pre[i - 1] % mod;\n\t\t\tlst[v[i][j]] = i;\n\t\t}\n\t}\n\tfor(mpit = mul.begin() ; mpit != mul.end() ; mpit ++) \n\t{\n\t\tint idx = mpit -> first;\n\t\tmul[idx] = mul[idx] * qpow(pre[lst[idx]] , mod - 2) % mod * pre[n] % mod;\n\t}\n\tfor(mpit = mul.begin() ; mpit != mul.end() ; mpit ++) \n\t{\n\t\tlong long nums = mpit -> second;int idx = mpit -> first;\n\t\tnums = nums * Zero(mul0[idx]);\n\t\tAns += (All - nums + mod) % mod , Ans %= mod;\n\t}\n\tprintf(\"%lld\\n\",Ans);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint x,y,z,L,R;scanf(\"%lld %lld %lld\",&x,&y,&z);\n\t\tAns -= (All - Mul(v[x][y]) + mod) % mod , Ans %= mod;\n\t\tif(sum[x][v[x][y]]) mul[v[x][y]] = mul[v[x][y]] * qpow(sum[x][v[x][y]] , mod - 2) % mod;\n\t\telse mul0[v[x][y]] --;\n\t\tit = mp[x][v[x][y]].lower_bound(y);\n\t\tint l,r = y - 1;\n\t\tif(it == mp[x][v[x][y]].begin()) L = l = 1;\n\t\telse itt = it , L = l = (*-- itt) + 1;\n\t\tif(l <= r) sum[x][v[x][y]] += mod - qs(r - l + 1) , sum[x][v[x][y]] %= mod;\n\t\tl = y + 1;\n\t\tif(it == -- mp[x][v[x][y]].end()) R = r = len[x];\n\t\telse itt = it , R = r = (*++ itt) - 1;\n\t\tif(l <= r) sum[x][v[x][y]] += mod - qs(r - l + 1) , sum[x][v[x][y]] %= mod;\n\t\tsum[x][v[x][y]] += qs(R - L + 1) , sum[x][v[x][y]] %= mod;\n\t\tif(sum[x][v[x][y]]) mul[v[x][y]] = mul[v[x][y]] * sum[x][v[x][y]] % mod;\n\t\telse mul0[v[x][y]] ++;\n\t\tAns += (All - Mul(v[x][y]) + mod) % mod , Ans %= mod;\n\t\tmp[x][v[x][y]].erase(y);\n\t\tv[x][y] = z;\n\t\tif(frag[v[x][y]]) Ans -= (All - Mul(v[x][y]) + mod) % mod , Ans %= mod;\t\n\t\tif(!mp[x][z].size()) \n\t\t{\n\t\t\tsum[x][z] = qs(len[x]);\t\n\t\t\tmul[z] = mul[z] * qpow(qs(len[x]) , mod - 2) % mod;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(sum[x][v[x][y]]) mul[z] = mul[z] * qpow(sum[x][v[x][y]] , mod - 2) % mod;\n\t\t\telse mul0[z] ++;\n\t\t}\n\t\tmp[x][v[x][y]].insert(y);\n\t\tr = y - 1;\n\t\tit = mp[x][v[x][y]].lower_bound(y);\n\t\tif(it == mp[x][v[x][y]].begin()) L = l = 1;\n\t\telse itt = it , L = l = (*-- itt) + 1;\n\t\tif(l <= r) sum[x][v[x][y]] += qs(r - l + 1) , sum[x][v[x][y]] %= mod;\n\t\tl = y + 1;\n\t\tif(it == -- mp[x][v[x][y]].end()) R = r = len[x];\n\t\telse itt = it , R = r = (*++ itt) - 1;\n\t\tif(l <= r) sum[x][v[x][y]] += qs(r - l + 1) , sum[x][v[x][y]] %= mod;\n\t\tsum[x][v[x][y]] += mod - qs(R - L + 1) , sum[x][v[x][y]] %= mod;\n\t\tif(!frag[v[x][y]]) \n\t\t{\n\t\t\tmul[v[x][y]] = All * qpow(qs(len[x]) , mod - 2) % mod;\n\t\t\tfrag[v[x][y]] = 1;\n\t\t}\n\t\tif(sum[x][v[x][y]]) mul[v[x][y]] = mul[v[x][y]] * sum[x][v[x][y]] % mod;\n\t\telse mul0[v[x][y]] ++;\n\t\tAns += (All - Mul(v[x][y]) + mod) % mod , Ans %= mod;\n\t\tprintf(\"%lld\\n\",(Ans + mod) % mod);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1626877743,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4692 [Ynoi2016] \u8c01\u7684\u68a6"
    },
    {
        "content": "## \u89e3\u6790\n\n\u4e0d\u96be\u53d1\u73b0\u6bcf\u79cd\u989c\u8272\u7684\u8d21\u732e\u90fd\u662f\u72ec\u7acb\u7684\uff1b\u5373\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u8ba1\u7b97\u6bcf\u79cd\u989c\u8272\u4f1a\u5728\u591a\u5c11\u65b9\u6848\u4e2d\u51fa\u73b0\uff0c\u518d\u628a\u8fd9\u4e9b\u8d21\u732e\u52a0\u8d77\u6765\n\n\u76f4\u63a5\u8ba1\u7b97\u6bcf\u79cd\u989c\u8272\u4f1a\u5728\u591a\u5c11\u79cd\u65b9\u6848\u4e2d\u51fa\u73b0\u53ef\u80fd\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u8003\u8651\u5bb9\u65a5\uff1b\u5177\u4f53\u6765\u8bf4\uff0c\u8bbe\u6240\u6709\u53ef\u80fd\u7684\u65b9\u6848 $S$\uff0c\u989c\u8272 $c$ \u4e0d\u51fa\u73b0\u7684\u65b9\u6848\u6570 $f(c)$\uff0c\u5bf9\u6bcf\u79cd\u989c\u8272\u6211\u4eec\u8981\u6c42\u7684\u503c\u5373\u4e3a $S-f(c)$\u3002\u5176\u4e2d $S$ \u5e94\u4e3a $\\prod\\limits_{i=1}^n{h(len_i)}$\uff08\u8fd9\u91cc $h(x)$ \u6307\u957f\u5ea6\u4e3a $x$ \u7684\u5e8f\u5217\u7684\u5b50\u4e32\u9009\u6cd5\u4e2a\u6570\uff0c\u4e0d\u96be\u5f97\u5230 $h(x)=\\frac {x(x+1)} {2}$\n\uff09\uff0c\u7b54\u6848\u5373\u4e3a $\\sum{(S-f(c))}$\n\n\u518d\u8003\u8651 $f(c)$ \u600e\u4e48\u6c42\u3002\u8003\u8651\u5e8f\u5217 $i$ \u4e2d $c$ \u51fa\u73b0\u7684\u6bcf\u4e2a\u4f4d\u7f6e $\\{p_k\\}$\uff0c\u5e76\u989d\u5916\u6dfb\u52a0\u4e24\u4e2a\u4f4d\u7f6e $p_s=0, p_t=len_i+1$ \uff08\u5373\u8be5\u5e8f\u5217\u7684\u5f00\u59cb\u4e0e\u672b\u5c3e\uff0c\u4e3a\u4e86\u65b9\u4fbf\u540e\u9762\u7684\u5904\u7406\uff09\uff0c\u5219\u5728\u5e8f\u5217 $i$ \u4e2d\u9009\u62e9\u4e00\u4e2a\u5b50\u4e32\u4e14\u8be5\u5b50\u4e32\u4e0d\u5305\u542b $c$ \u7684\u5b50\u4e32\u4e2a\u6570\u5373\u4e3a $\\sum {h(p_l-p_r)}$\uff08\u8fd9\u91cc $p_r$ \u662f\u5c06 $\\{p_k\\}$ \u6392\u5e8f\u540e\u4e0e $p_l$ \u76f8\u90bb\u4e14\u5927\u4e8e $p_l$ \u7684\u5143\u7d20\uff1b$h(x)$ \u89c1\u4e0a\uff09\uff0c\u4e8e\u662f\u5c31\u6709 $f(c)=\\prod\\limits_{i=1}^n\\sum {h(p_l-p_r)}$\n\n\u5230\u8fd9\u91cc\u9898\u76ee\u5c31\u5dee\u4e0d\u591a\u505a\u5b8c\u4e86\uff0c\u4e0d\u96be\u53d1\u73b0\u4e0a\u8ff0\u7684\u4e1c\u897f\u90fd\u53ef\u4ee5\u7528 `set` \u4ec0\u4e48\u7684\u76f4\u63a5\u7ef4\u62a4\uff08\u5305\u62ec\u4fee\u6539\u64cd\u4f5c\uff09\u3002\u4f46\u662f\u5b9e\u73b0\u7684\u7ec6\u8282\u5f88\u591a...\u4f8b\u5982 $\\sum {h(p_l-p_r)}$ \u53ef\u80fd\u4e3a $0$\uff0c\u4e8e\u662f\u66f4\u65b0 $f(c)$ \u53ca\u7b54\u6848\u65f6\u9700\u8981\u7279\u5224\u4e0b\uff0c\u4e0d\u80fd\u771f\u7684\u9664/\u4e58 $0$\n\n\u5269\u4e0b\u7684\u5c31\u89c1\u4ee3\u7801\u53ca\u6ce8\u91ca\u628a \\fad\n\n## CODE\n\n```cpp\n#include <cstdio>\n#include <map>\n#include <set>\n#include <vector>\nusing std::map;\nusing std::set;\nusing std::vector;\nusing std::pair;\ntypedef pair<int, int> pad;\n\nconst int MAXN =1e5+20, M =19260817;\n\n/*------------------------------IO------------------------------*/\n\nint read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\treturn x;\n}\n\nvoid write(const int &x){\n\tif(x/10)\n\t\twrite(x/10);\n\tputchar('0'+x%10);\n}\n\n/*------------------------------Base------------------------------*/\n\ninline void Plus(int &A, const int &B){\n\tA +=B;\n\tif(A >= M)\n\t\tA -=M;\n}\n\ninline void Minus(int &A, const int &B){\n\tA -=B;\n\tif(A < 0)\n\t\tA +=M;\n}\n\ninline int Minus2(int A, const int &B){\n\tA -=B;\n\tif(A < 0)\n\t\tA +=M;\n\treturn A;\n}\n\nint Inv(int x){\n\tint ret =1;\n\tfor(int k =M-2; k; k >>=1, x =1ll*x*x%M)\n\t\tif(k&1)\n\t\t\tret =1ll*ret*x%M;\n\treturn ret;\n}\n\nint sum_t[MAXN];\n\n// \u8fd9\u91cc\u8fd4\u56de\u7684\u4f4d\u7f6e\u4e0b\u6807\u548c\u9898\u89e3\u4e2d\u7684\u6709\u4e9b\u4e0d\u592a\u4e00\u6837...\u76f8\u5f53\u4e8e\u662f\u5c06\u6240\u6709\u5e8f\u5217\u62fc\u63a5\u6210\u4e86\u4e00\u4e2a\u5e8f\u5217 //\ninline int get_pos(const int &i, const int &j){\n\treturn sum_t[i-1]+2+j;\n}\n\n/*------------------------------Operation------------------------------*/\n\nset<int> Set[MAXN<<1];\nmap<int, int> Col;\nint Cnt_col;\n/** Set[col_id] : \u8be5\u989c\u8272 (col_id) \u7684\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e //\n *  Col : \u79bb\u6563\u5316\u989c\u8272 //\n *  Cnt_col : \u603b\u989c\u8272\u6570 //\n**/\n\nint Ctrb[MAXN<<1], Cnt_zero[MAXN<<1];\nmap<int, int> Map_ctrb[MAXN<<1];\nint Ctrb_All, Ans;\n/** Ctrb[col_id] : \u4e0d\u5305\u542b\u8be5\u989c\u8272 (col_id) \u7684\u65b9\u6848\u6570 //\n *  Cnt_zero[col_id] : \u8be5\u989c\u8272 (col_id) \u5b58\u5728\u67d0\u4e2a\u5e8f\u5217\u6ee1\u8db3\u8981\u6c42\u7684\u5b50\u4e32\u6570\u4e3a 0\uff0c\u7edf\u8ba1\u8fd9\u4e2a 0 \u7684\u4e2a\u6570 //\n *  Map_ctrb[col_id] : \u6bcf\u4e2a\u5e8f\u5217\u4e0d\u5305\u542b\u8be5\u989c\u8272 (col_id) \u7684\u5b50\u4e32\u4e2a\u6570 //\n *  Ctrb_All : \u603b\u65b9\u6848\u6570 ( \u4e0d\u540c\u533a\u95f4\u7684\u9009\u6cd5 ) //\n *  Ans : \u5c31\u662f\u7b54\u6848 //\n**/\n\ninline void updata(const int &col_id, const int &pre, const int &now){\n\tMinus(Ans, Minus2(Ctrb_All, (Cnt_zero[col_id] == 0) ? Ctrb[col_id] : 0));\n\t\n\tif(pre == 0)\n\t\t--Cnt_zero[col_id];\n\tif(now == 0)\n\t\t++Cnt_zero[col_id];\n\t\n\tCtrb[col_id] =1ll*Ctrb[col_id]*((pre == 0) ? 1 : Inv(pre))%M;\n\tCtrb[col_id] =1ll*Ctrb[col_id]*((now == 0) ? 1 : now)%M;\n\t\n\tPlus(Ans, Minus2(Ctrb_All, (Cnt_zero[col_id] == 0) ? Ctrb[col_id] : 0));\n}\n\nvoid insert(const int &val, const int &i, const int &j){\n\tmap<int, int>::iterator it =Col.find(val);\n\tif(it == Col.end()){\n\t\t++Cnt_col;\n\t\tit =(Col.insert(pad(val, Cnt_col))).first;\n\t\tCtrb[Cnt_col] =Ctrb_All;\n\t}\n\tint cur =it->second, pos =get_pos(i, j);\n\t\n\tif(!Map_ctrb[cur].count(i)){\n\t\tSet[cur].insert(sum_t[i-1]+2);\n\t\tSet[cur].insert(sum_t[i]+1);\n\t\t\n\t\tint len =sum_t[i]-(sum_t[i-1]+2);\n\t\tMap_ctrb[cur].insert(pad(i, 1ll*len*(len+1)/2%M));\n\t}\n\tSet[cur].insert(pos);\n\t\n\tint posl =*(--Set[cur].lower_bound(pos)), posr =*(Set[cur].upper_bound(pos));\n\tint len1 =pos-posl-1, len2 =posr-pos-1, len3 =posr-posl-1;\n\tit =Map_ctrb[cur].find(i);\n\t\n\t// it->second : \u8be5\u5e8f\u5217 (i) \u4e0d\u5305\u542b\u8be5\u989c\u8272 (cur) \u7684\u5b50\u4e32\u4e2a\u6570 //\n\t\n\tint div =it->second;\n\tMinus(it->second, 1ll*len3*(len3+1)/2%M);\n\tPlus(it->second, 1ll*len1*(len1+1)/2%M);\n\tPlus(it->second, 1ll*len2*(len2+1)/2%M);\n\tint mul =it->second;\n\tupdata(cur, div, mul);\n}\n\nvoid erase(const int &val, const int &i, const int &j){\n\tint cur =Col.find(val)->second, pos =get_pos(i, j);\n\t\n\tint posl =*(--Set[cur].lower_bound(pos)), posr =*(Set[cur].upper_bound(pos));\n\tint len1 =pos-posl-1, len2 =posr-pos-1, len3 =posr-posl-1;\n\tmap<int, int>::iterator it =Map_ctrb[cur].find(i);\n\t\n\t// it->second : \u8be5\u5e8f\u5217 (i) \u4e0d\u5305\u542b\u8be5\u989c\u8272 (cur) \u7684\u5b50\u4e32\u4e2a\u6570 //\n\t\n\tint div =it->second;\n\tMinus(it->second, 1ll*len1*(len1+1)/2%M);\n\tMinus(it->second, 1ll*len2*(len2+1)/2%M);\n\tPlus(it->second, 1ll*len3*(len3+1)/2%M);\n\tint mul =it->second;\n\tupdata(cur, div, mul);\n\t\n\tSet[cur].erase(pos);\n}\n\n/*------------------------------Main------------------------------*/\n\nvector<vector<int> > col;\n\nint main(){\n\tint n =read(), m =read();\n\tcol.resize(n+1);\n\tsum_t[0] =-2;\n\tCtrb_All =1;\n\tfor(int i =1; i <= n; ++i){\n\t\tint t =read();\n\t\tcol[i].resize(t+1, 0);\n\t\tCtrb_All =1ll*Ctrb_All*(1ll*t*(t+1)/2%M)%M;\n\t\tsum_t[i] =t+sum_t[i-1]+2/*<- \u6bcf\u4e24\u4e2a\u5e8f\u5217\u95f4\u63d2\u4e24\u4e2a\u7a7a\u4f4d*/;\n\t}\n\tfor(int i =1; i <= n; ++i)\n\t\tfor(int j =1; j <= sum_t[i]-(sum_t[i-1]+2); ++j){\n\t\t\tint a =read();\n\t\t\tcol[i][j] =a;\n\t\t\tinsert(a, i, j);\n\t\t}\n\t// init done. //\n\t\n\twrite(Ans), putchar('\\n');\n\tfor(int t =0; t < m; ++t){\n\t\tint x =read(), y =read(), z =read();\n\t\terase(col[x][y], x, y);\n\t\tcol[x][y] =z;\n\t\tinsert(z, x, y);\n\t\twrite(Ans), putchar('\\n');\n\t}\n}\n```",
        "postTime": 1606825800,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4692 \u3010[Ynoi2016]\u8c01\u7684\u68a6\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.lydsy.com/JudgeOnline/problem.php?id=5395)\n\nSTL+\u5bb9\u65a5\n\n\u597d\u50cf\u4e5f\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u5427\uff0c\u5c31\u662f\u4e00\u9053\u7eaf\u7cb9\u7684\u7ec6\u8282\u9898\uff0c\u601d\u8def\u4ec0\u4e48\u7684\u8fd8\u662f\u5f88\u666e\u901a\u7684\u5427\u3002\n\u8003\u8651\u5bf9\u989c\u8272\u5206\u5f00\u8003\u8651\u8d21\u732e\u3002\u8865\u96c6\u8f6c\u5316\u4e3a\u989c\u8272\u4e0d\u8d21\u732e\u7684\u6240\u6709\u533a\u95f4\u3002\u5373\u6bcf\u4e2a\u5e8f\u5217\u989c\u8272\u7684\u76f8\u90bb\u4f4d\u7f6e\u4e2d\u9009\u533a\u95f4\u3002\u518d\u628a\u6bcf\u4e2a\u5e8f\u5217\u7684\u7b54\u6848\u4e58\u8d77\u6765\u3002\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7528STL\u7ef4\u62a4\u3002\n\n$S(set)$\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u79cd\u989c\u8272\u7684\u4f4d\u7f6e\uff0c$tj(map)$\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u79cd\u989c\u8272\u5728\u6bcf\u4e00\u4e2a\u5e8f\u5217\u7684\u8d21\u732e\uff0c$vec(map)$\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e00\u4e2a\u5e8f\u5217\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u6240\u5bf9\u5e94\u7684\u7f16\u53f7\uff0c\u52a0\u4e0a\u5bb9\u65a5\u539f\u7406\u7684\u601d\u60f3\uff0c\u6bcf\u6b21\u4fee\u6539\u524d\u5148\u53bb\u6389\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u8d21\u732e\uff0c\u518d\u52a0\u4e0a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u8d21\u732e\uff0c\u5c31\u597d\u4e86\u3002\u5c31\u662f\u7ec6\u8282\u591a\uff0c\u5176\u4ed6\u90fd\u597d......(\u8c03\u4e86\u6211\u4e24\u4e2a\u5c0f\u65f6\uff09\n\nupdate:\u597d\u50cf\u8bf4\u8981\u591a\u4e00\u70b9\u7ec6\u8282\u7684\u63cf\u8ff0\u3002\u90a3\u5c31\u5199\u4e00\u4e0b\u5427\u3002\u6bcf\u6b21\u4fee\u6539$tj$\u7684\u65f6\u5019\uff0c\u5982\u679c$tj$\u5927\u4e8e0\uff0c\u5219\u7528$ret$\u6570\u7ec4\u53bb\u628a\u8fd9\u4e00\u79cd\u989c\u8272\u7684\u603b\u8d21\u732e\u4e58\u8fdb\u53bb\uff0c\u5982\u679c\u7b49\u4e8e0\uff0c\u8bf4\u660e\u8fd9\u4e00\u4e2a\u4f4d\u7f6e\u989c\u8272\u4e0d\u5b58\u5728\u8d21\u732e\uff0c\u90a3\u6211\u4eec\u5c31\u9700\u8981\u5728\u7edf\u8ba1\u6700\u7ec8\u7b54\u6848\u7684\u65f6\u5019\u51cf\u53bb\u8fd9\u79cd\u989c\u8272\u7684\u8d21\u732e\u3002\u4fee\u6539\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e5f\u662f\u540c\u6837\u7684\u505a\u6cd5\u3002\u4fee\u6539$tj$\uff0c\u67e5\u770b\u662f\u5426\u6709\u8d21\u732e\uff0c\u518d\u76f8\u5e94\u5730\u4fee\u6539\u7b54\u6848\u3002\u7136\u540e\u5c31\u597d\u4e86\u3002\n\ncode:\n```\n//2018.9.18 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register LL\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline LL read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline LL _abs(const res &x){\n    return x>0?x:-x;\n}\ninline LL _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline LL _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst LL kcz=19260817,N=2e5+10;\nnamespace MAIN{\n    LL n,m;\n    LL len[N],INV,tot;\n    LL s=1;\n    LL fac[N],inv[N];\n    inline LL qpow(res x,res y){\n        res Ans=1;\n        while(y){\n            if(y&1)Ans=Ans*x%kcz;\n            x=x*x%kcz,y>>=1;\n        }\n        return Ans%kcz;\n    }\n    map<LL,LL> pos;\n    set<LL> S[N];\n    LL num;\n    struct P{\n        LL x,y,va;\n        P() {}\n        P(res x,res y,res va):x(x),y(y),va(va) {}\n    }a[N];\n    inline LL calc(const res &x){\n        return x*(x+1)/2%kcz;\n    }\n    LL ans,ret[N];\n    map<LL,LL> tj[N];\n    inline void add(res &x,const res &y){\n        x+=y;\n        x>=kcz?x-=kcz:1;\n    }\n    LL qaq[N];\n    typedef pair<LL,LL> Pair;\n#define mp make_pair\n    map<Pair,LL> vec;\n    set<LL>::iterator it,l,r;\n    inline void pre(){\n        fac[0]=inv[0]=1;\n        for(res i=1;i<=n;i++){\n            fac[i]=calc(len[i])*fac[i-1]%kcz;\n            inv[i]=qpow(fac[i],kcz-2);\n            for(res j=1;j<=len[i];j++){\n                a[++tot]=P(i,j,read());\n                if(!pos[a[tot].va])pos[a[tot].va]=++num;\n                a[tot].va=pos[a[tot].va];\n                S[a[tot].va].insert(tot);\n                vec[mp(i,j)]=tot;\n            }\n        }\n        for(res i=1;i<=num;i++){\n            res x=0,y=0;\n            ret[i]=1;\n            for(it=S[i].begin();it!=S[i].end();it++){\n                res p=*it;\n                if(!x)ret[i]=ret[i]*fac[a[p].x-1]%kcz,add(tj[i][a[p].x],calc(a[p].y-1));\n                else if(x==a[p].x)add(tj[i][a[p].x],calc(a[p].y-y-1));\n                else {\n                    add(tj[i][x],calc(len[x]-y));\n                    if(tj[i][x])ret[i]=ret[i]*tj[i][x]%kcz;\n                    else qaq[i]++;\n                    ret[i]=ret[i]*fac[a[p].x-1]%kcz*inv[x]%kcz;\n                    add(tj[i][a[p].x],calc(a[p].y-1));\n                }\n                x=a[p].x,y=a[p].y;\n            }\n            //\u8fd9\u91cc\u6709\u4e09\u7c7b\uff0c\u6ce8\u610f\u5206\u7c7b\n            add(tj[i][x],calc(len[x]-y));\n            if(tj[i][x])ret[i]=ret[i]*tj[i][x]%kcz;\n            else qaq[i]++;\n            ret[i]=ret[i]*fac[n]%kcz*inv[x]%kcz;\n            add(ans,s-(qaq[i]?0:1)*ret[i]);\n        }\n        ans=(ans%kcz+kcz)%kcz;\n        printf(\"%lld\\n\",ans);\n    }\n    inline void modify(const res &c,const res &x,const res &y,const res &p,const res &bol){\n        res L,R;\n        l=S[c].lower_bound(p),r=l;\n        if(l==S[c].begin())L=0;\n        else{\n            l--,L=*l;\n            if(a[L].x!=x)L=0;\n            else L=a[L].y;\n        }\n        r++;\n        if(r==S[c].end())R=len[x];\n        else{\n            R=*r;\n            if(a[R].x!=x)R=len[x];\n            else R=a[R].y-1;\n        }\n        if(bol&&R==len[x]&&!L)tj[c][x]=calc(len[x]);//\u5982\u679c\u662f\u589e\u52a0\u7684\u65f6\u5019\uff0c\u8fd8\u8981\u6ce8\u610f\u4e00\u4e0btj\u7684\u521d\u59cb\u5316\u95ee\u9898\n        ans-=s-(qaq[c]?0:1)*ret[c];\n        if(tj[c][x])ret[c]=ret[c]*qpow(tj[c][x],kcz-2)%kcz;\n        else qaq[c]--;\n        tj[c][x]+=(bol?-1:1)*(calc(R-L)-calc(R-y)-calc(y-L-1));\n        if(tj[c][x])ret[c]=ret[c]*tj[c][x]%kcz;\n        else qaq[c]++;\n        ans+=s-(qaq[c]?0:1)*ret[c];\n    }\n    inline void solve(){\n        res x=read(),y=read(),w=read(),p=vec[mp(x,y)],c=a[p].va;\n        modify(c,x,y,p,0);\n        S[c].erase(p);\n        if(!pos[w])pos[w]=++num,ret[num]=fac[n];//\u4fee\u6539\u989c\u8272\u7684\u65f6\u5019\u5148\u770b\u770b\u539f\u672c\u6709\u6ca1\u6709\u8fd9\u79cd\u989c\u8272\n        w=pos[w];\n        a[p].va=w;\n        S[w].insert(p);\n        modify(w,x,y,p,1);\n        ans=(ans%kcz+kcz)%kcz;\n        printf(\"%lld\\n\",ans);\n    }\n    inline void MAIN(){\n        INV=qpow(2,kcz-2);\n        n=read(),m=read();\n        for(res i=1;i<=n;i++)len[i]=read(),s=s*len[i]%kcz*(len[i]+1)%kcz*INV%kcz;\n        pre();\n        while(m--)solve();\n    }\n}\nint main(){\n    MAIN::MAIN();\n    return 0;\n}\n```",
        "postTime": 1537260300,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010YNOI2016\u3011\u8c01\u7684\u68a6"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u601d\u8def\u5e76\u4e0d\u96be\u60f3\u3002\n\n\u5f88\u660e\u663e\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u79cd\u6570\u5206\u522b\u6c42\u51fa\u5b83\u4eec\u7684\u8d21\u732e\uff0c\u5728\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848\uff08$con.size() \\times mlen - ans$\uff09\uff08$con$ \u8868\u793a\u8fc4\u4eca\u4e3a\u6b62\u51fa\u73b0\u4e86\u591a\u5c11\u79cd\u6570\uff09\u3002\n\n\u5bf9\u4e8e\u4e00\u79cd\u6570\uff08$v$\uff09\u600e\u4e48\u6c42\u8d21\u732e\uff1f\n\n\u6b63\u96be\u5219\u53cd\uff0c\u7528\u603b\u65b9\u6848\uff08$mlen$\uff09\u51cf\u53bb\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\uff08$mul_{v}$\uff09\u3002\n\n\u600e\u4e48\u6c42\u4e00\u79cd\u6570\u7684\u4e0d\u5408\u6cd5\u65b9\u6848\u6570\uff1f\n\n\u6c42\u51fa\u8be5\u79cd\u6570\u5728\u6bcf\u4e2a\u5e8f\u5217\u7684\u4e0d\u5408\u6cd5\u65b9\u6848\u6570\uff08$sum_{i,v}$\uff09\uff0c\u518d\u4e58\u8d77\u6765\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u603b\u6570\uff08$mul_{v}$\uff09\u3002\n\n\u600e\u4e48\u6c42\u4e00\u79cd\u6570\u5728\u4e00\u4e2a\u5e8f\u5217\u91cc\u7684\u4e0d\u5408\u6cd5\u65b9\u6848\u6570\uff1f\n\n\u5bf9\u8fd9\u79cd\u6570\u5f00\u4e00\u4e2a set\uff08$mp_{i,v}$\uff09\uff0c\u8bb0\u5f55\u4e00\u4e0b\u51fa\u73b0\u7684\u5750\u6807\uff0c\u628a\u76f8\u90bb\u4e24\u4e2a\u5750\u6807\u4e4b\u95f4\u7684\u5b50\u533a\u95f4\uff08\u4e0d\u5305\u542b\u8fd9\u4e24\u4e2a\u5750\u6807\uff09\u6570\u5168\u90e8\u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5199\u8d77\u6765\u592a\u9ebb\u70e6\u4e86\u3002\n\n\u800c\u4e14\u6709\u4e00\u4e2a\u5de8\u5751\u65e0\u6bd4\u7684\u7ec6\u8282\uff1a$sum_{i,v}$ \u53ef\u80fd\u4e3a $0$\uff08\u5373\u5e8f\u5217 $i$ \u7684\u6240\u6709\u6570\u90fd\u4e3a $v$\uff09\uff0c\u5982\u679c\u5c06\u5176\u4e58\u8fdb $mul_{v}$ \u7684\u8bdd\uff0c\u4f1a\u5bfc\u81f4\u540e\u9762\u5c06\u8981\u9664 $0$\u3002\n\n\u8fd9\u600e\u4e48\u529e\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u6570 $v$\uff0c\u6709\u51e0\u4e2a\u5e8f\u5217\u7684 $sum_{i,v}$ \u4e3a $0$\uff0c\u8bb0\u4e3a $zer_{v}$\u3002\n\n\u5728\u66f4\u65b0\u7684\u65f6\u5019\u6ce8\u610f\u5224\u65ad\u4e00\u4e0b $zer_{v}$\uff0c\u53ea\u6709 $zer_{v}$ \u4e3a $0$ \u624d\u66f4\u65b0 $ans$\uff08$ans$ \u8868\u793a\u6240\u6709\u6570\u7684\u4e0d\u5408\u6cd5\u65b9\u6848\u6570\u4e4b\u548c\uff09\u3002\n\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u9b3c\u755c\u5361\u5e38\u6570\u65f6\u95f4\uff08\u4e3a\u4ec0\u4e48\u6bcf\u6b21\u505a Ynoi \u7684\u9898\u90fd\u8981\u5361\u5e38\u6570\uff09\u3002\n\n\u5509\uff0c\u5927\u5e38\u6570\u9009\u624b\u7684\u53f9\u606f\u3002\n\n\u5148\u4f18\u5316\u4e86\u4e00\u4e9b\u663e\u800c\u6613\u89c1\u7684\u91cd\u590d\u8ba1\u7b97\u3002\n\n\u53c8\u53d1\u73b0\u81ea\u5df1\u4e00\u6b21 insert \u8981\u67e5\u8be2\u5341\u51e0\u6b21 map\u3002\n\n\u4e8e\u662f\u7528 & \u4f18\u5316\u4e86\u4e00\u4e0b\uff0c\u5c31\u53ea\u7528\u67e5 $5$ \u6b21 map \u4e86\u3002\n\n\u7136\u540e TLE\u3002\n\n\u5c1d\u8bd5\u9884\u5904\u7406\u9006\u5143\uff0c\u88ab\u5361\u7a7a\u95f4\u4e86\u3002\n\n\u540e\u6765\u624d\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u79bb\u6563\u5316\u4f18\u5316\u6389 $con,zer,mul$ \u4e09\u4e2a map\uff08\u7531\u4e8e\u6bd4\u8f83\u61d2\uff0c\u6ca1\u6709\u628a $con$ \u4f18\u5316\u6389\uff09\u3002\n\n\u7136\u540e\u5c31 AC\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\nusing namespace std;\ninline int gi()\n{\n\tchar c;int num=0,flg=1;\n\twhile((c=getchar())<'0'||c>'9')if(c=='-')flg=-1;\n\twhile(c>='0'&&c<='9'){num=num*10+c-48;c=getchar();}\n\treturn flg==1?num:-num;\n}\n#define N 100005\nconst int mod=19260817;\nconst int inv2=9630409;\nint inv(int x)\n{\n\tif(!x) return 1;\n\tint ret=1,y=mod-2;\n\twhile(y){\n\t\tif(y&1)ret=1ll*ret*x%mod;\n\t\ty>>=1;x=1ll*x*x%mod;\n\t}\n\treturn ret;\n}\nint n,m,ans,len[N],cal[N],mlen;\nvector<int> a[N];\nmap<int,set<int> >mp[N];\nset<int>::iterator it,it1,it2;\nmap<int,int> sum[N],con;\nint hh[2*N],hcnt;\nstruct node{int i,j,z;}q[N];\nint mul[2*N],zer[2*N];\nvoid insert(int i,int j,int v)\n{\n\tint &mu=mul[v],&su=sum[i][v],tm=mu,ts=su;\n\tset<int> &S=mp[i][v];\n\tif(!con[v]++)mu=mlen;\n\tif(S.empty()){\n\t\tS.insert(-1);S.insert(len[i]);\n\t\tts=su=cal[len[i]+1];\n\t}\n\tit1=S.lower_bound(j);\n\tit2=it1;it1--;\n\tsu=(su-cal[(*it2)-(*it1)]+cal[(*it2)-j]+cal[j-(*it1)]+mod)%mod;\n\tS.insert(j);\n\tif(!su){if(!zer[v]++){ans=ans-tm+mod;if(ans>=mod)ans-=mod;}}\n\telse{\n\t\tmu=1ll*mu*inv(ts)%mod*su%mod;\n\t\tif(!zer[v])ans=(ans-tm+mu+mod)%mod;\n\t}\n}\nvoid delet(int i,int j,int v)\n{\n\tint &mu=mul[v],&su=sum[i][v],tm=mu,ts=su;\n\tset<int> &S=mp[i][v];\n\tit1=it2=it=S.lower_bound(j);\n\tit1--;it2++;\n\tsu=(su+cal[(*it2)-(*it1)]-cal[(*it2)-j]-cal[j-(*it1)]+2*mod)%mod;\n\tS.erase(it);con[v]--;\n\tif(!ts){if(!(--zer[v])){ans=ans+mu;if(ans>=mod)ans-=mod;}}\n\telse{\n\t\tmu=1ll*mu*inv(ts)%mod*su%mod;\n\t\tif(!zer[v])ans=(ans-tm+mu+mod)%mod;\n\t}\n}\nint main()\n{\n\tint i,j,z;\n\tmlen=1;ans=0;\n\tfor(cal[1]=0,i=1;i<=100000;i++)\n\t\tcal[i+1]=(cal[i]+i)%mod;\n\tn=gi();m=gi();\n\tfor(i=1;i<=n;i++){\n\t\tlen[i]=gi();\n\t\tmlen=1ll*mlen*cal[len[i]+1]%mod;\n\t}\n\tfor(i=1;i<=n;i++)for(j=0;j<len[i];j++){\n\t\ta[i].push_back(gi());\n\t\thh[++hcnt]=a[i][j];\n\t}\n\tfor(i=1;i<=m;i++){\n\t\tq[i].i=gi();q[i].j=gi()-1;q[i].z=gi();\n\t\thh[++hcnt]=q[i].z;\n\t}\n\tsort(hh+1,hh+hcnt+1);\n\thcnt=unique(hh+1,hh+hcnt+1)-hh-1;\n\tfor(i=1;i<=n;i++)for(j=0;j<len[i];j++){\n\t\ta[i][j]=lower_bound(hh+1,hh+hcnt+1,a[i][j])-hh;\n\t\tinsert(i,j,a[i][j]);\n\t}\n\tprintf(\"%d\\n\",(1ll*con.size()*mlen%mod+mod-ans)%mod);\n\tfor(int k=1;k<=m;k++){\n\t\ti=q[k].i;j=q[k].j;\n\t\tz=q[k].z=lower_bound(hh+1,hh+hcnt+1,q[k].z)-hh;\n\t\tdelet(i,j,a[i][j]);\n\t\tinsert(i,j,a[i][j]=z);\n\t\tprintf(\"%d\\n\",(1ll*con.size()*mlen%mod+mod-ans)%mod);\n\t}\n}\n```\n\n",
        "postTime": 1679575214,
        "uid": 925577,
        "name": "ULSG_XBaiC",
        "ccfLevel": 0,
        "title": "P4692 [Ynoi2016] \u8c01\u7684\u68a6 \u9898\u89e3"
    },
    {
        "content": "Ynoi \u4e2d\u5c11\u89c1\u7684\u4e0d\u5361\u5e38\u9898\u5462....\u867d\u8bf4\u6709 50 \u4e2a\u6570\u636e\u70b9...\n\n\u679c\u7136\u8fd8\u662f\u9053\u597d\u9898\n\n# noteskey\n\n\u603b\u4e4b\u5c31\u662f\u8865\u96c6\u8f6c\u5316\u7684\u601d\u60f3\uff0c\u7b97\u51fa\u6bcf\u79cd\u989c\u8272\u9009\u70b9\u7684\u603b\u65b9\u6848\u51cf\u53bb\u4e0d\u53ef\u884c\u65b9\u6848\uff08\u5c31\u662f\u4e0d\u5305\u542b \u8be5\u79cd\u989c\u8272\u7684\u70b9\u7684\u533a\u95f4\u9009\u53d6\u65b9\u6848\uff09\u5c31\u662f\u6bcf\u79cd\u989c\u8272\u7684\u8d21\u732e\n\n\u7136\u540e\u5c31\u662f\u8003\u8651\u6bcf\u79cd\u989c\u8272\u628a\u4e00\u4e2a\u533a\u95f4\u5206\u6210\u82e5\u5e72\u4efd\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u7b97\u51fa\u8fd9\u82e5\u5e72\u4efd\u533a\u95f4\u5185\u7684\u5b50\u533a\u95f4\u4e2a\u6570\u5c31\u884c\u4e86\n\n\u5177\u4f53\u64cd\u4f5c\u4e5f\u5c31\u662f\u8003\u8651\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u70b9\u540e\u4f1a\u51cf\u53bb\u539f\u6765\u533a\u95f4\u7684\u8d21\u732e\u7136\u540e\u52a0\u4e0a\u65b0\u7684\u4e24\u4e2a\u533a\u95f4\u7684\u8d21\u732e\n\n\u90a3\u4e48\u5220\u9664\u70b9\u4e5f\u662f\u540c\u7406\n\n\u590d\u6742\u5ea6 $(n+m)log(n+m)$ \uff0c\u8bf4\u767d\u4e86\u5c31\u662f $O(n   ~log  ~n)$\n\n\n# watch out\n\n\u8981\u6ce8\u610f\u7684\u5c31\u662f\u8fd9\u91cc\u9700\u8981\u79bb\u6563\u5316\uff0c\u5f53\u7136\u4fee\u6539\u64cd\u4f5c\u4e2d\u7684\u503c\u4e5f\u662f\u8981\u52a0\u8fdb\u79bb\u6563\u5316\u7684\u6570\u7ec4\u4e2d\u7684\uff0c\u5177\u4f53\u79bb\u6563\u662f\u5f00\u6570\u7ec4\u8fd8\u662f\u7528 vector \u5c31\u770b\u559c\u597d\u4e86...\n\n\n# code \n\n\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u77ed\u7684\uff0cYnoi \u91cc\u8fd9\u4e48\u77ed\u7684\u4ee3\u7801\u90fd\u6ca1\u6709\u591a\u5c11\u7684...\n\n\n```cpp\n//by Judge\n#pragma GCC optimize(\"Ofast\")\n#include<bits/stdc++.h>\n#define Rg register\n#define Pi pair<int,int>\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(Rg int i=(a),I=(b)-1;i>I;--i)\n#define ll long long\nusing namespace std;\nconst int mod=19260817;\nconst int M=5e5+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int mul(int x,int y){return 1ll*x*y%mod;}\ninline int dec(int x,int y){return x<y?x-y+mod:x-y;}\ninline int inc(int x,int y){return x+y>=mod?x+y-mod:x+y;}\ninline bool cmax(int& a,int b){return a<b?a=b,1:0;}\ninline bool cmin(int& a,int b){return a>b?a=b,1:0;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int CCF=-1,Z;\ninline void Ot(){fwrite(sr,1,CCF+1,stdout),CCF=-1;}\ninline void print(int x,char chr='\\n'){\n    if(CCF>1<<20)Ot();if(x<0)sr[++CCF]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++CCF]=z[Z],--Z);sr[++CCF]=chr;\n} int n,m,ans,Ynoi=1; arr L,R,pos,len,a,inv,LN,ept,P;\nset<int> s[M]; vector<int> lr; map<Pi,int> gx;\nstruct opts{ int x,y,z; }q[M];\ninline int C2(int x){return (1ll*x*(x-1)>>1)%mod;}\ninline int INV(int x){return x<=5e5?inv[x]:mul(mod-mod/x,INV(mod%x));}\n#define LL long long\n#define pii Pi\n#define md mod\ninline void insert(int col,int x){\n\tint pre=*--s[col].lower_bound(x),suf=*s[col].upper_bound(x);\n\tcmax(pre,L[pos[x]]-1),cmin(suf,R[pos[x]]+1); Pi xb=Pi(pos[x],col);\n\tif(!gx.count(xb)) gx[xb]=C2(len[pos[x]]+1); int &v=gx[xb];\n\tans=inc(ans,ept[col]?0:LN[col]),LN[col]=mul(LN[col],INV(v));\n\tv=inc(dec(v,C2(suf-pre)),inc(C2(x-pre),C2(suf-x)));\n\tif(v) LN[col]=mul(LN[col],v); else ++ept[col];\n\tans=dec(ans,ept[col]?0:LN[col]),s[col].insert(x);\n}\ninline void erase(int col,int x){\n\tint pre=*--s[col].lower_bound(x),suf=*s[col].upper_bound(x);\n\tcmax(pre,L[pos[x]]-1),cmin(suf,R[pos[x]]+1); Pi xb=Pi(pos[x],col);\n\tif(!gx.count(xb)) gx[xb]=C2(len[pos[x]]+1); int& v=gx[xb];\n\tans=inc(ans,ept[col]?0:LN[col]);\n\tif(!v) --ept[col]; else LN[col]=mul(LN[col],INV(v));\n\tv=dec(inc(v,C2(suf-pre)),inc(C2(x-pre),C2(suf-x))),LN[col]=mul(LN[col],v);\n\tans=dec(ans,ept[col]?0:LN[col]),s[col].erase(x);\n}\nint main(){ n=read(),m=read(),inv[1]=1;\n\tfp(i,2,5e5) inv[i]=mul(mod-mod/i,inv[mod%i]);\n\tfp(i,1,n) len[i]=read(),L[i]=R[i-1]+1,R[i]=R[i-1]+len[i],\n\t\tYnoi=mul(Ynoi,C2(len[i]+1)),P[i]=P[i-1]+len[i];\n\tfp(i,1,n) fp(j,L[i],R[i]) pos[j]=i,a[j]=read(),lr.push_back(a[j]);\n\tfp(i,1,m) q[i].x=read(),q[i].y=read(),q[i].z=read(),lr.push_back(q[i].z);\n\tsort(lr.begin(),lr.end()),lr.erase(unique(lr.begin(),lr.end()),lr.end());\n\tfp(i,0,lr.size()) s[i].insert(0),s[i].insert(R[n]+1),LN[i]=Ynoi;\n\tfp(i,1,R[n]) a[i]=lower_bound(lr.begin(),lr.end(),a[i])-lr.begin(),insert(a[i],i);\n\tfor(Rg int i=(print(ans),1);i<=m;++i,print(ans)){ int id=P[q[i].x-1]+q[i].y;\n\t\terase(a[id],id),insert(a[id]=lower_bound(lr.begin(),lr.end(),q[i].z)-lr.begin(),id);\n\t} return Ot(),0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1555459712,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4692 \u3010[Ynoi2016]\u8c01\u7684\u68a6\u3011"
    }
]