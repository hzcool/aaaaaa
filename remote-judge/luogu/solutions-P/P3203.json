[
    {
        "content": "\u5173\u4e8eLCT\u7684\u95ee\u9898\u8be6\u89c1[\u6211\u7684LCT\u603b\u7ed3](http://www.cnblogs.com/flashhu/p/8324551.html)\n\n## \u601d\u8def\u5206\u6790\n\n\n\u9996\u5148\u5206\u6790\u4e00\u4e0b\u9898\u610f\u3002\n\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5f39\u529b\u88c5\u7f6e\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u5f39\u5230\u3002\u628a\u8fd9\u6837\u7684\u4e00\u79cd\u5173\u7cfb\u53ef\u4ee5\u89c6\u4f5c\u8fb9\u3002\n\n\n\u7136\u540e\uff0c\u6bcf\u4e2a\u88c5\u7f6e\u4e00\u5b9a\u4f1a\u5f80\u540e\u5f39\uff0c\u8fd9\u4e0d\u5c31\u4ee3\u8868\u4e0d\u5b58\u5728\u73af\u4e48\uff1f\n\n\n\u4e8e\u662f\uff0c\u4e00\u4e2a\u68ee\u6797\u7684\u6a21\u578b\u88ab\u6211\u4eec\u5efa\u51fa\u6765\u4e86\u3002\n\n\n\u8003\u8651\u5230\u6709\u4fee\u6539\u5f39\u529b\u503c\u7684\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u8981\u65ad\u8fb9\u548c\u8fde\u8fb9\uff0c\u4e8e\u662f\u7528LCT\u7ef4\u62a4\u3002\n\n\n### \u601d\u8def\u4e00\n\n\u6bcf\u4e00\u4e2a\u70b9\u5411\u5b83\u5f39\u5230\u7684\u4f4d\u7f6e\u8fde\u8fb9\u3002\u5982\u679c\u88ab\u5f39\u98de\u4e86\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u5c31\u4e0d\u5b58\u5728\u3002\n\n\n\u67e5\u8be2\u5f39\u98de\u7684\u6b65\u6570\uff0c\u5c31\u662f\u67e5\u8be2\u8be5\u70b9\u5230\u5176\u6240\u5c5e\u539f\u6811\u4e2d\u6839\u8282\u70b9\u7684\u8def\u5f84\u7684$size$\u3002\n\n\n\u6ce8\u610f\u6b64\u9898\u7684\u4e00\u4e9b\u7279\u6027\u3002\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u67e5\u8be2\u6216\u8005\u66f4\u6539\u6307\u5b9a\u8def\u5f84$(x-y)$\u7684\u4fe1\u606f\u3002\n\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c**\u6211\u4eec\u6839\u672c\u4e0d\u9700\u8981\u6362\u6839\uff01**\n\n\n\u539f\u6765\u9700\u8981\u6362\u6839\u7684$split,link,cut$\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9898\u76ee\u7279\u6027\u9002\u5f53\u8c03\u6574\u4e00\u4e0b\u3002\n\n\n- \u67e5\u8be2\u539f\u672c\u9700\u8981$split$\uff0c\u6211\u4eec\u76f4\u63a5$access(x),splay(x)$\uff0c\u8f93\u51fa$x$\u7684$size$\u3002\n\n- \u8fde\u8fb9\u539f\u672c\u9700\u8981$link$\uff0c\u9898\u76ee\u4fdd\u8bc1\u4e86\u662f\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u76f4\u63a5\u6539$x$\u7684\u7236\u4eb2\uff0c\u8fde\u8f7b\u8fb9\u3002\n\n- \u65ad\u8fb9\u539f\u672c\u9700\u8981$cut$\uff0c\u7136\u800c\u6211\u4eec\u786e\u5b9a\u5176\u7236\u4eb2\u7684\u4f4d\u7f6e\uff0c$access(x),splay(x)$\u540e\uff0c$x$\u7684\u7236\u4eb2\u4e00\u5b9a\u5728$x$\u7684\u5de6\u5b50\u6811\u4e2d\uff08LCT\u603b\u7ed3\u4e2d\u7684\u6027\u8d281\uff09\uff0c\u76f4\u63a5\u53cc\u5411\u65ad\u5f00\u8fde\u63a5\u3002\n\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u7a0b\u5e8f\u4e00\u4e0b\u5b50\u5c11\u4e86\u4e00\u5806\u51fd\u6570\uff08$pushdown,makeroot,findroot,split,link,cut$\uff09\n\n\n\u4ee3\u7801\u5c11\uff0c\u5e38\u6570\u5c0f\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a\uff1f\n\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#define R register int\n#define I inline void\n#define G ch=getchar()\n#define gc G;while(ch<'-')G\n#define in(z) gc;z=ch&15;G;while(ch>'-')z*=10,z+=ch&15,G;\nconst int N=200009;\nint f[N],c[N][2],s[N];\ninline bool nroot(R x){\n    return c[f[x]][0]==x||c[f[x]][1]==x;\n}\nI pushup(R x){\n    s[x]=s[c[x][0]]+s[c[x][1]]+1;\n}\nI rotate(R x){\n    R y=f[x],z=f[y],k=c[y][1]==x,w=c[x][!k];\n    if(nroot(y))c[z][c[z][1]==y]=x;c[x][!k]=y;c[y][k]=w;\n    if(w)f[w]=y;f[y]=x;f[x]=z;\n    pushup(y);\n}\nI splay(R x){\n    R y,z;\n    while(nroot(x)){\n        y=f[x];z=f[y];\n        if(nroot(y))\n            rotate((c[y][0]==x)^(c[z][0]==y)?x:y);//fixed\n        rotate(x);\n    }\n    pushup(x);\n}\nI access(R x){\n    for(R y=0;x;x=f[y=x])\n        splay(x),c[x][1]=y,pushup(x);\n}//\u4ee5\u4e0a\u662f\u8f7b\u91cf\u5316\u7684LCT\u677f\u5b50\nint main()\n{\n    register char ch;\n    R n,m,j,k;\n    in(n);\n    for(j=1;j<=n;++j){\n        s[j]=1;\n        in(k);\n        if(j+k<=n)f[j]=j+k;//\u5982\u679c\u5f39\u98de\u4e86\u5c31\u4e0d\u8fde\u8fb9\n    }\n    in(m);\n    while(m--){\n        gc;\n        if(ch&1){\n            in(j);++j;\n            access(j);splay(j);//\u76f4\u63a5\u67e5\u8be2\n            printf(\"%d\\n\",s[j]);\n        }\n        else{\n            in(j);in(k);++j;\n            access(j);splay(j);\n            c[j][0]=f[c[j][0]]=0;//\u76f4\u63a5\u65ad\u8fb9\n            if(j+k<=n)f[j]=j+k;//\u76f4\u63a5\u8fde\u8fb9\n            pushup(j);\n        }\n    }\n    return 0;\n}\n```\n\n### \u601d\u8def2\n\n\n\u628a\u5f39\u98de\u8fd9\u79cd\u60c5\u51b5\u4e5f\u53ef\u4ee5\u89c6\u4f5c\u4e00\u4e2a\u8282\u70b9\uff08\u7f16\u53f7\u53ef\u5b9a\u4e3a$n+1$\uff09\n\n\u5982\u679c\u5f39\u98de\u4e86\u5c31\u628a$x$\u8fde\u5230\u8fd9\u4e2a\u70b9\u4e0a\uff0c\u4e8e\u662f\u8fd9\u4e2a\u70b9\u7a33\u7a33\u5730\u5750\u4f4f\u4e86\u6811\u6839\u7684\u4f4d\u7f6e\u3002\n\n\n\u67e5\u8be2\u7684\u65f6\u5019\u5f97\u5230\u7684$size$\u51cf$1$\u5373\u53ef\u3002\n\n\n\u5176\u5b83\u540c\u4e0a\u3002\n\n\n\u5176\u5b9e\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u6837\u4e0d\u5982\u4e0a\u9762\u3002\u52a8\u6001\u6811\u672c\u8eab\u5c31\u5b9a\u4e49\u4e3a\u7ef4\u62a4\u68ee\u6797\uff0c\u591a\u4e86\u8fd9\u4e00\u4e2a\u70b9\u7b49\u4e8e\u5f3a\u884c\u628a\u5b83\u53d8\u6210\u4e00\u68f5\u6811\uff0c\u53ef\u80fd\u6709\u70b9\u591a\u6b64\u4e00\u4e3e\u3002\u3002\u3002\u3002\u3002\u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u53ea\u8d34main\u51fd\u6570\uff0c\u56e0\u4e3aLCT\u677f\u5b50\u662f\u4e00\u6837\u7684\u3002\u3002\u3002\u3002\u3002\u3002\n\n\n```cpp\nint main()\n{\n    register char ch;\n    R rt,n,m,j,k;\n    in(n);rt=n+1;\n    for(j=1;j<=rt;++j)s[j]=1;\n    for(j=1;j<=n;++j){\n        in(k);\n        f[j]=j+k>n?rt:j+k;//\u4e0e\u4e0a\u9762\u4e0d\u540c\n    }\n    in(m);\n    while(m--){\n        gc;\n        if(ch&1){\n            in(j);++j;\n            access(j);splay(j);\n            printf(\"%d\\n\",s[j]-1);\n        }\n        else{\n            in(j);in(k);++j;\n            access(j);splay(j);\n            c[j][0]=f[c[j][0]]=0;\n            f[j]=j+k>n?rt:j+k;\n            pushup(j);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1516847245,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "$LCT$\u88f8\u9898\u3002\n\n\u9996\u5148\uff0c\u5efa\u7acb\u4e00\u4e2a\u865a\u62df\u8282\u70b9$n+1$\uff0c\u7ef5\u7f8a\u5230\u8fbe\u8fd9\u4e2a\u8282\u70b9\u5373\u88ab\u5f39\u98de\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u88c5\u7f6e\uff0c\n\n\u5982\u679c$i+Ki<=n$\uff0c\u5219\u6267\u884c$Link(i,i+Ki)$\uff0c\u5426\u5219$Link(i,n+1)$\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u5148\u6267\u884c$Cut(j,j+Kj)$\uff08\u5982\u679c$j+Kj>n$\u5219\u4e3a$n+1$\uff09\uff0c\u518d\u6267\u884c$Link(j,j+k)$\uff08\u5982\u679c$j+k>n$\u5219\u4e3a$n+1$\uff09\uff0c\n\n\u5e76\u628a$Kj$\u8d4b\u4e3a$k$\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\u64cd\u4f5c\uff0c\u5206\u522b\u6267\u884c$MakeRoot(y)$\uff0c$Access(n+1)$\u548c$Splay(n+1)$\uff0c\u6700\u7ec8\u7b54\u6848\u5373\u4e3a$size[n+1]-1$\u3002\n\n\u5176\u4e2d$size[i]$\u8868\u793a**\u5e73\u8861\u6811**\u4e2d\u8282\u70b9$i$\u7684\u5b50\u6811\u7684\u5927\u5c0f\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\ninline int read() {\n    int res = 0; bool bo = 0; char c;\n    while (((c = getchar()) < '0' || c > '9') && c != '-');\n    if (c == '-') bo = 1; else res = c - 48;\n    while ((c = getchar()) >= '0' && c <= '9')\n        res = (res << 3) + (res << 1) + (c - 48);\n    return bo ? ~res + 1 : res;\n}\nconst int N = 2e5 + 5;\nint n, m, fa[N], lc[N], rc[N], rev[N], que[N], len, sze[N], val[N];\nint which(int x) {return rc[fa[x]] == x;}\nbool is_root(int x) {\n    return !fa[x] || (lc[fa[x]] != x && rc[fa[x]] != x);\n}\nvoid down(int x) {\n    if (rev[x]) {\n        swap(lc[x], rc[x]);\n        if (lc[x]) rev[lc[x]] ^= 1;\n        if (rc[x]) rev[rc[x]] ^= 1;\n        rev[x] = 0;\n    }\n}\nvoid upt(int x) {\n    sze[x] = 1;\n    if (lc[x]) sze[x] += sze[lc[x]];\n    if (rc[x]) sze[x] += sze[rc[x]];\n}\nvoid rotate(int x) {\n    int y = fa[x], z = fa[y], b = lc[y] == x ? rc[x] : lc[x];\n    if (z && !is_root(y)) (lc[z] == y ? lc[z] : rc[z]) = x;\n    fa[x] = z; fa[y] = x; b ? fa[b] = y : 0;\n    if (x == lc[y]) rc[x] = y, lc[y] = b;\n    else lc[x] = y, rc[y] = b; upt(y); upt(x);\n}\nvoid splay(int x) {\n    int i, y; que[len = 1] = x;\n    for (y = x; !is_root(y); y = fa[y]) que[++len] = fa[y];\n    for (i = len; i >= 1; i--) down(que[i]);\n    while (!is_root(x)) {\n        if (!is_root(fa[x])) {\n            if (which(x) == which(fa[x])) rotate(fa[x]);\n            else rotate(x);\n        }\n        rotate(x);\n    }\n    upt(x);\n}\nvoid Access(int x) {\n    int y;\n    for (y = 0; x; y = x, x = fa[x]) {\n        splay(x); rc[x] = y;\n        if (y) fa[y] = x; upt(x);\n    }\n}\nint Find_Root(int x) {\n    Access(x); splay(x);\n    while (down(x), lc[x]) x = lc[x];\n    splay(x); return x;\n}\nvoid Make_Root(int x) {\n    Access(x); splay(x);\n    rev[x] ^= 1;\n}\nvoid Link(int x, int y) {\n    Make_Root(x); fa[x] = y;\n}\nvoid Cut(int x, int y) {\n    Make_Root(x); Access(y); splay(y);\n    lc[y] = 0; fa[x] = 0; upt(y);\n}\nint Select(int x, int y) {\n    Make_Root(x); Access(y); splay(y);\n    return sze[y];\n}\nint main() {\n    int i, x, y, z; n = read();\n    for (i = 1; i <= n + 1; i++) sze[i] = 1;\n    for (i = 1; i <= n; i++) {\n        x = val[i] = read();\n        if (i + x <= n) Link(i, i + x);\n        else Link(i, n + 1);\n    }\n    m = read(); while (m--) {\n        x = read();\n        if (x == 2) {\n            y = read() + 1; z = read();\n            Cut(y, y + val[y] <= n ? y + val[y] : n + 1);\n            Link(y, y + z <= n ? y + z : n + 1);\n            val[y] = z;\n        }\n        else {\n            y = read() + 1;\n            printf(\"%d\\n\", Select(y, n + 1) - 1);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1501995718,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]BOUNCE \u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "## ~~\u6ca1\u4eba\u770b\u7684~~\u9898\u610f\n\n\u6e38\u620f\u4e00\u5f00\u59cb\uff0cLostmonkey\u5728\u5730\u4e0a\u6cbf\u7740\u4e00\u6761\u76f4\u7ebf\u6446\u4e0an\u4e2a\u88c5\u7f6e\uff0c\u6bcf\u4e2a\u88c5\u7f6e\u8bbe\u5b9a\u521d\u59cb\u5f39\u529b\u7cfb\u6570ki\uff0c\u5f53\u7ef5\u7f8a\u8fbe\u5230\u7b2ci\u4e2a\u88c5\u7f6e\u65f6\uff0c\u5b83\u4f1a\u5f80\u540e\u5f39ki\u6b65\uff0c\u8fbe\u5230\u7b2ci+ki\u4e2a\u88c5\u7f6e\uff0c\u82e5\u4e0d\u5b58\u5728\u7b2ci+ki\u4e2a\u88c5\u7f6e\uff0c\u5219\u7ef5\u7f8a\u88ab\u5f39\u98de\u3002\u7ef5\u7f8a\u60f3\u77e5\u9053\u5f53\u5b83\u4ece\u7b2ci\u4e2a\u88c5\u7f6e\u8d77\u6b65\u65f6\uff0c\u88ab\u5f39\u51e0\u6b21\u540e\u4f1a\u88ab\u5f39\u98de\u3002\u4e3a\u4e86\u4f7f\u5f97\u6e38\u620f\u66f4\u6709\u8da3\uff0cLostmonkey\u53ef\u4ee5\u4fee\u6539\u67d0\u4e2a\u5f39\u529b\u88c5\u7f6e\u7684\u5f39\u529b\u7cfb\u6570\uff0c\u4efb\u4f55\u65f6\u5019\u5f39\u529b\u7cfb\u6570\u5747\u4e3a\u6b63\u6574\u6570\u3002\n\n## \u5b9e\u73b0\n\n~~LCT\u88f8\u9898\u4f46\u6211\u4e0d\u4f1a~~\n\n\u770b\u5230\u8fd9\u4e2a\uff0c\u4e00\u5b9a\u662f\u7528\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u7684\uff1b\u4f46\u662f\u6ca1\u6709\u73b0\u6210\u7684\u597d\u7684\u65b9\u6cd5\uff0c\u600e\u4e48\u529e\uff1f\u5206\u5757\uff01\n\n\u8bbe$f[i]$\u8868\u793a\u4ecei\u5f00\u59cb\uff0c\u8df3\u51fa\u6240\u5728\u5757\u7684\u6b65\u6570\uff1b$to[i]$\u8868\u793a\u8df3\u51fa\u6240\u5728\u5757\u540e\u5230\u4e86\u54ea\u91cc\uff1b\n\n\u521d\u59cb\u5316\u5f88\u7b80\u5355\u5566\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u5427\uff1b\n\n\u8981\u4fee\u6539\uff1f\u6574\u4e2a\u5757\u5185\u66b4\u529b\u91cd\u6784\uff1b\n\n## \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define inf 0x3f3f3f3f\n#define ri register int\n#define il inline\n#define fi first\n#define se second\n#define mp make_pair\n#define pi pair<int,int>\n#define mem0(x) memset((x),0,sizeof(x))\n#define mem1(x) memset((x),0x3f,sizeof(x))\n#define pb push_back\n#define gc getchar\ntemplate<class T>void in(T &x) {\n    x = 0; bool f = 0; char c = gc();\n    while (c < '0' || c > '9') {if (c == '-') f = 1; c = gc();}\n    while ('0' <= c && c <= '9') {x = (x << 3) + (x << 1) + (c ^ 48); c = gc();}\n    if (f) x = -x;\n}\n#undef gc\n#define N 200010\nint k[N];\nint block;\nint bl[N];\nint l[N >> 1];\nint f[N], to[N];\nint n, m;\nil void replace(int p, int w) {\n    k[p] = w;\n    for (ri i = l[bl[p] + 1] - 1; i >= l[bl[p]]; --i) {\n        if (i + k[i] >= l[bl[i] + 1]) {\n            f[i] = 1;\n            to[i] = i + k[i];\n        }\n        else {\n            f[i] = f[i + k[i]] + 1;\n            to[i] = to[i + k[i]];\n        }\n    }\n}\nil int query(int p) {\n    int ret = 0;\n    while (p <= n) {\n        ret += f[p];\n        p = to[p];\n    }\n    return ret;\n}\nsigned main() {\n    in(n);\n    block = sqrt(n);\n    for (ri i = 1; i <= n; ++i) {\n        in(k[i]);\n        bl[i] = (i - 1) / block + 1;\n        if (bl[i] != bl[i - 1]) l[bl[i]] = i;\n    }\n    l[bl[n] + 1] = n + 1;\n    //prework\n    for (ri i = n; i >= 1; --i) {\n        if (i + k[i] >= l[bl[i] + 1]) {\n            f[i] = 1;\n            to[i] = i + k[i];\n        }\n        else {\n            f[i] = f[i + k[i]] + 1;\n            to[i] = to[i + k[i]];\n        }\n    }\n    in(m);\n    int op, p, w;\n    while (m--) {\n        in(op), in(p);\n        if (op == 1) {\n            printf(\"%d\\n\", query(p + 1));\n        }\n        else {\n            in(w);\n            replace(p + 1, w);\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1531559463,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u7b2c\u4e00\u9053\u5206\u5757-\u597d\u9898-\u5f39\u98de\u7ef5\u7f8a-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u6211\u4e5f\u66fe\u60f3\u900f\u5f7bLCT,\u4f46\u65e0\u5948\u592a\u83dc\u3002\n\n\u4f46\u8fd9\u4e2a\u9898\u53ef\u4ee5\u7528\u5206\u5757\u505a\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e0b\u4ece\u8fd9\u4e2a\u70b9\u8df3\u51e0\u6b21\u8df3\u51fa\u8fd9\u4e2a\u5757\uff0c\u548c\u8df3\u51fa\u8fd9\u4e2a\u5757\u540e\u5728\u54ea\u4e2a\u4f4d\u7f6e\u3002\n\n\u663e\u7136\u6211\u4eec\u9700\u8981\u4ece\u540e\u5f80\u524d\u7ef4\u62a4\u3002\n\u4fee\u6539\u65f6\u4e5f\u662f\u5728\u5757\u5185\u4ece\u540e\u5f80\u524d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$O(n\\sqrt{n})$ \u5f88\u663e\u7136\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\nint n , m , len , top , opt , x , y;\nint k[200200] , f[200200] , g[200200] , l[200200] , r[200200] , pos[200200]; // f\u6570\u7ec4\u8868\u793a\u8df3\u51e0\u6b21\u8df3\u51fa\u5757 \uff0c g\u6570\u7ec4\u8868\u793a\u7b2c\u4e00\u6b21\u8df3\u51fa\u5757\u7684\u4f4d\u7f6e\u5728\u54ea \nint main()\n{\n\tscanf(\"%d\",&n);\n\tlen = sqrt(n);\n\tfor(int i = 0;i < n;i ++)\tscanf(\"%d\",&k[i]) , pos[i] = i / len + 1 , l[pos[i]] = 2147483647;\n\tfor(int i = 0;i < n;i ++)\tl[pos[i]] = min(l[pos[i]],i) , r[pos[i]] = max(r[pos[i]],i) , top = max(pos[i],top);\n\tfor(int i = n - 1;i >= 0;i --)\n\t{\n\t\tif(i + k[i] > r[pos[i]])\t\n\t\t{\n\t\t\tf[i] = 1;\n\t\t\tg[i] = i + k[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tf[i] = f[i+k[i]] + 1;\n\t\t\tg[i] = g[i+k[i]];\n\t\t}\n\t}\n\t//for(int i = 0;i < n;i ++)\tprintf(\"f[%d] = %d , g[%d] = %d\\n\",i,f[i],i,g[i]);\n\tscanf(\"%d\",&m);\n\twhile(m --> 0)\n\t{\n\t\tscanf(\"%d%d\",&opt,&x);\n\t\tif(opt == 1)\n\t\t{\n\t\t\tint res = 0;\n\t\t\twhile(g[x] < n)\n\t\t\t{\n\t\t\t\tres += f[x];\n\t\t\t\tx = g[x];\n\t\t\t}\n\t\t\tres += f[x];\n\t\t\tprintf(\"%d\\n\",res);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d\",&y);\n\t\t\tk[x] = y;\n\t\t\tfor(int i = r[pos[x]];i >= l[pos[x]];i --)\n\t\t\t{\n\t\t\t\tif(i + k[i] > r[pos[i]])\n\t\t\t\t{\n\t\t\t\t\tf[i] = 1;\n\t\t\t\t\tg[i] = i + k[i];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tf[i] = f[i+k[i]] + 1;\n\t\t\t\t\tg[i] = g[i+k[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t//for(int i = 0;i < n;i ++)\tprintf(\"f[%d] = %d , g[%d] = %d\\n\",i,f[i],i,g[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1568462083,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "Update:3.25\u6dfb\u52a0Java\u4ee3\u7801\u3002\n\nUpdate:5.7\u4fee\u590d\u90e8\u5206\u6392\u7248\u3002\n\n\u54a6\uff1f\u9898\u89e3\u533a\u5168\u662fLCT\uff0c\u4f46\u6211\u4e0d\u4f1a\u554a\u554a\u554a\u3002\n\n\u89c2\u5bdf\u4e00\u4e0b $\\operatorname{O}(m\\sqrt{n})$ \u7684\u5206\u5757\u4e5f\u662f\u80fd\u8fc7\u7684\uff0c\u8fd9\u91cc\u5c31\u8bb2\u4e00\u4e0b\u5206\u5757\u89e3\u6cd5\u3002\n\n\u548c\u7b2c\u4e00\u7bc7\u9898\u89e3\u5dee\u4e0d\u591a\uff0c\u4f46\u81ea\u8ba4\u4e3a\u53d8\u91cf\u540d\u4ec0\u4e48\u7684\u66f4\u52a0\u6e05\u6670\uff0c\u5e76\u4e14\u8865\u5145\u4e86\u601d\u8def\u5206\u6790\u3002\n\n\u5148\u6765\u8bb2\u4e00\u4e0b\u601d\u8def\uff1a\n\n\u76f8\u5f53\u4e8e\u7ef4\u62a4\u4e00\u68f5\u6811\uff0c\u652f\u6301\u65ad\u8fb9+\u52a0\u8fb9\uff0c\u548c\u67e5\u8be2\u4e00\u4e2a\u70b9\u7684\u6df1\u5ea6\u3002\n\n\u5148\u6765\u8003\u8651\u4e00\u4e0b\uff0c\u8981\u662f\u6ca1\u6709\u65ad\u8fb9+\u52a0\u8fb9\u64cd\u4f5c\uff0c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f\n\n\u76f8\u4fe1\u5927\u5bb6\u90fd\u80fd\u60f3\u5230\uff08\u60f3\u4e0d\u5230\u7684\u4e48\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u8c14\u8c14\u7f62\uff09\uff0c**\u9884dfs\uff08\u8fd9\u91cc\u7531\u4e8e\u6570\u636e\u7279\u6b8a\u6027\u53ef\u4ee5\u76f4\u63a5\u6539\u6210DP\uff09\u4e00\u904d\u6c42\u51fa\u6bcf\u4e2a\u70b9\u6df1\u5ea6**\uff0c\u67e5\u8be2\u76f4\u63a5\u8f93\u51fa\u3002\n\n\u8981\u662f\u65ad\u8fb9+\u52a0\u8fb9\u6781\u5c11\u5462\uff1f\n\n\u4e5f\u5f88\u597d\u529e\uff01\u6bcf\u6b21\u6539\u7684\u65f6\u5019\u5168\u90e8\u66b4\u529b\u91cd\u6784\u5c31\u662f\u4e86\uff0c**\u7531\u4e8e\u4fdd\u8bc1\u4e86\u65ad\u8fb9+\u52a0\u8fb9\u5f88\u5c11\u6240\u4ee5\u91cd\u6784\u6b21\u6570\u5f88\u5c11**\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u518d\u60f3\u60f3\uff0c\u8981\u662f\u67e5\u8be2\u6ca1\u6709\u5462\uff1f\n\n\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u4e3b\u7a0b\u5e8f\u76f4\u63a5\u4e00\u884creturn 0;\n\n~~\u8c14\u8c14~~\u3002\n\n\u52a0\u5f3a\u4e00\u70b9\uff0c\u8981\u662f\u53ea\u6709\u5f88\u5c11\u7684\u67e5\u8be2\u5462\uff1f\n\n**\u53ea\u7ef4\u62a4\u5f39\u529b\u7cfb\u6570\uff0c\u6bcf\u6b21\u67e5\u8be2\u66b4\u529b\u722c\u6811**<-\u633a\u5f62\u8c61\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e24\u79cd\u66b4\u529b\u60f3\u6cd5\u4e86\uff0c\u63a5\u7740\u5c31\u662f\u4e00\u4e2a~~\u8457\u540d~~\u7b49\u5f0f\uff1a\n\n$$\\Huge{\\text{\u66b4\u529b+\u66b4\u529b=\u5206\u5757}}$$\n\n\u6ca1\u9519\uff01\u5c31\u662f\u5206\u5757\u6765\u8c03\u8282\u8fd9\u4e24\u4e2a\u66b4\u529b\u3002\n\n$\\sqrt n$ \u53ea\u7f8a\u5206\u6210\u4e00\u4e2a\u5757\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u628a\u4e00\u5806\u4e1c\u897f\u6254\u5230\u5757\u4e0a\u53bb\u7ef4\u62a4\uff1a\n\n\u8fd9\u53ea\u7f8a\uff08\u88ab\u5f39\u51fa\u539f\u4f4d\u540e\uff09\u4e0b\u4e00\u4e2a\u5230\u8fbe\u7684\u662f\u54ea\u4e00\u4e2a\u4f4d\u7f6e->\u8fd9\u53ea\u7f8a\u88ab\u5f39\u51fa\u539f\u5757\u540e\u4e0b\u4e00\u4e2a\u5230\u8fbe\u7684\u662f\u54ea\u4e2a\u4f4d\u7f6e\u3002\n\n\u8fd9\u53ea\u7f8a\u5f39\u51fa\u81ea\u5df1\u539f\u4f4d\u9700\u8981\u51e0\u6b65\uff08\u5f53\u7136\u662f1\uff09->\u8fd9\u53ea\u7f8a\u5f39\u51fa\u81ea\u5df1\u539f\u5757\u9700\u8981\u51e0\u6b65\u3002\n\n\u7ed3\u5408\u4e24\u4e2a\u66b4\u529b\uff0c\u5148\u9884\u5904\u7406\u51fa\u8fd9\u4e24\u4e2a\u6570\u7ec4\uff0c\u6bcf\u6b21\u65ad\u8fb9+\u52a0\u8fb9\u5757\u5185\u66b4\u529b\u91cd\u6784\uff0c\u67e5\u8be2\u6df1\u5ea6\u4e00\u5757\u4e00\u5757\u8df3\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $\\operatorname{O}(m\\sqrt{n})$ \uff0c\u80fd\u8fc7\u3002\n\nC++\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nclass process{//\u6211\u4eec\u7684\u7a0b\u5e8f\n    private:\n\t\tint read(){\n\t\t\tchar c=getchar();\n\t\t\twhile(!isdigit(c))c=getchar();\n\t\t\tint x=c^48;\n\t\t\twhile(isdigit(c=getchar()))x=x*10+(c^48);\n\t\t\treturn x;\n\t\t}//\u5feb\u8bfb\n        class block{//\u5206\u5757\n        \tprivate:\n        \t\tint*fa,*out,*bel,*num;\n\t\t\t//\u5f39\u529b\u7cfb\u6570\uff0c\u5757\u610f\u4e49\u7236\u4eb2\uff0c\u6bcf\u4e2a\u70b9\u6240\u5c5e\u5757\u7684\u7f16\u53f7\uff0c\u5757\u610f\u4e49\u8fb9\u6743\n        \t\tint*beg,*ed;//\u6bcf\u4e2a\u5757\u7684\u5f00\u59cb\u4f4d\u7f6e\u4e0e\u7ed3\u675f\u4f4d\u7f6e\n        \t\tint tot;//\u5e8f\u5217\u957f\u5ea6\n        \t\tvoid range_rebuild(int l,int r){//\u533a\u95f4\u91cd\u6784\n        \t\t\tfor(int i=r;i>=l;--i){//\u5012\u7740\u6765\uff08\u60f3\u60f3\u4e3a\u4ec0\u4e48\uff1f\uff09\n        \t\t\t\tif(i+fa[i]>tot||bel[i+fa[i]]!=bel[i])num[i]=1,out[i]=i+fa[i];\n        \t\t\t\telse num[i]=num[i+fa[i]]+1,out[i]=out[i+fa[i]];\t\t\t\n        \t\t\t}//\u5206\u7c7b\uff0c\u5f39\u4e00\u6b21\u51fa\u4e0d\u51fa\u5757\n        \t\t}\n        \tpublic:\n        \t\tblock(int n,int*f){//\u6784\u9020\u51fd\u6570\uff0c\u76f8\u5f53\u4e8e\u9884\u5904\u7406\n        \t\t\tint cnt=sqrt(tot=n);//\u5757\u6570\n        \t\t\tfa=new int[n+9],\n\t\t\t\tout=new int[n+9],\n\t\t\t\tbel=new int[n+9],\n\t\t\t\tnum=new int[n+9],\n\t\t\t\tbeg=new int[cnt+9],\n\t\t\t\ted=new int[cnt+9];//\u7533\u8bf7\u7a7a\u95f4\n        \t\t\tbel[0]=0;\n        \t\t\tmemcpy(fa+1,f+1,n<<2);//\u590d\u5236\u6570\u7ec4\n        \t\t\tfor(int i=1;i<=n;++i)bel[i]=i/cnt+1,(bel[i]!=bel[i-1])&&(ed[bel[i-1]]=i-1,beg[bel[i]]=i);\n                    \t\t//\u5904\u7406\u6bcf\u4e2a\u5757\u7684\u5f00\u59cb\u4e0e\u7ed3\u675f\uff0c\u548c\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5757\u7f16\u53f7\n        \t\t\ted[bel[n]]=n;//\u6700\u540e\u4e00\u5757\uff01\n        \t\t\trange_rebuild(1,n);//\u8bf4\u662f\u91cd\u6784\u5176\u5b9e\u5c31\u662f\u6784\u5efa\n        \t\t}\n        \t\t~block(){\n        \t\t\tdelete[]fa,delete[]out,delete[]bel,delete[]num;\n        \t\t\tdelete[]beg,delete[]ed;\n        \t\t}//\u5514\uff0c\u4e0d\u8981\u5fd8\u4e86\u5185\u5b58\u91ca\u653e\n        \t\tvoid update(int pos,int val){//\u65ad\u8fb9+\u52a0\u8fb9\n        \t\t\tfa[pos]=val;//\u5f39\u529b\u7cfb\u6570\n        \t\t\trange_rebuild(beg[bel[pos]],ed[bel[pos]]);//\u5757\u5185\u91cd\u6784\n        \t\t}\n        \t\tint calcdepth(int pos){\n        \t\t\tint ret=0;\n        \t\t\twhile(pos<=tot)ret+=num[pos],pos=out[pos];\n\t\t\t\t//\u4e00\u5757\u4e00\u5757\u8df3\uff0c\u76f8\u5f53\u4e8e\u5757\u610f\u4e49\u4e0b\u201c\u722c\u6811\u201d\n        \t\t\treturn ret;\n        \t\t}\n        }*Block;\n\tpublic:\n\t\tprocess(){//\u8fd8\u662f\u9884\u5904\u7406\n\t\t\tint n=read(),*f=new int[n+9];\n\t\t\tfor(int i=1;i<=n;++i)f[i]=read();//\u8f93\u5165\n\t\t\tBlock=new block(n,f);//\u5206\u5757\n\t\t\tdelete f;\n\t\t}\n\t\t~process(){\n\t\t\tfclose(stdin);\n\t\t\tfclose(stdout);\n            delete[]Block;\n\t\t}\n\t\tvoid main(){\n\t\t\tfor(int m=read();m;--m){//\u5904\u7406\u64cd\u4f5c\n\t\t\t\tint u=read(),v=read()+1;//\u6ce8\u610f\u7531\u4e8e\u8fd9\u91cc\u9898\u76ee\u662f0\u5230n-1\uff0c\u4ee3\u7801\u91cc\u662f1\u5230n\u6240\u4ee5\u8981+1\n\t\t\t\tif(u==1)printf(\"%d\\n\",Block->calcdepth(v));//\u6df1\u5ea6\n\t\t\t\telse Block->update(v,read());//\u65ad\u8fb9+\u52a0\u8fb9\n\t\t\t}\n\t\t}\n}Process;\nint main(){\n\tProcess.main();\n\treturn 0;\n}\n```\nJava\u4ee3\u7801\uff1a\n```java\nimport java.io.*;\nfinal class block{\n    private int fa[],out[],bel[],num[],beg[],ed[],tot;\n    private void range_rebuild(int l,int r){\n      for(int i=r;i>=l;--i){\n        if(i+fa[i]>tot||bel[i+fa[i]]!=bel[i]){\n          num[i]=1;\n          out[i]=i+fa[i];\n        }\n        else{\n          num[i]=num[i+fa[i]]+1;\n          out[i]=out[i+fa[i]];\t\t \n        }\n      }\n    }\n    public void update(int pos,int val){\n      fa[pos]=val;\n      range_rebuild(beg[bel[pos]],ed[bel[pos]]);\n    }\n    public int calcdepth(int pos){\n      int ret=0;\n      while(pos<=tot){\n        ret+=num[pos];\n        pos=out[pos];\n      }\n      return ret;\n    }\n    block(int n,StreamTokenizer cin)throws IOException{\n      int cnt=(int)Math.sqrt(tot=n);\n      fa=new int[n+9];\n      out=new int[n+9];\n      bel=new int[n+9];\n      num=new int[n+9];\n      beg=new int[cnt+9];\n      ed=new int[cnt+9];\n      bel[0]=0;\n      for(int i=1;i<=n;++i){\n        cin.nextToken();\n        fa[i]=(int)cin.nval;\n        bel[i]=i/cnt+1;\n        if(bel[i]!=bel[i-1]){\n          ed[bel[i-1]]=i-1;\n          beg[bel[i]]=i;\n        }\n      }\n      ed[bel[n]]=n;\n      range_rebuild(1,n);\n    }\n}\nfinal class Process{\n   private block Block;\n   private static StreamTokenizer cin;\n   private static PrintWriter pw;\n   private static int nextInt()throws IOException{\n    cin.nextToken();\n    return (int)cin.nval;\n   }\n   public void main()throws IOException{\n    for(int m=nextInt();m>0;--m){\n      int u=nextInt(),v=nextInt()+1;\n      if(u==1){\n       pw.print(Block.calcdepth(v));\n       pw.print('\\n');\n      }\n      else Block.update(v,nextInt());\n    }\n    pw.close();\n   }\n   Process()throws IOException{\n      cin=new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n      pw=new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n      Block=new block(nextInt(),cin);\n   }\n}\npublic class Main{\n   public static void main(String args[])throws IOException{\n      (new Process()).main();\n   }\n}\n```\n\u554a~\u7ec8\u4e8e\u5b8c\u4e86\u3002\n\n\u6709\u4ec0\u4e48\u95ee\u9898\u6b22\u8fce\u79c1\u4fe1\u3002\n\n~~\u5199\u7684\u8fd9\u4e48\u8f9b\u82e6\uff0c\u987a\u624b\u7559\u4e2a\u8d5e\u5457~~\n\nOver.",
        "postTime": 1584974881,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "\u4e00\u9053\u5bf9\u521d\u5b66`LCT`\u8005\u6765\u8bf4\u6bd4\u8f83\u6709\u601d\u7ef4\u96be\u5ea6\u7684\u9898\u3002\n\n\u9898\u89e3\u91cc\u7684\u5f00\u4e00\u4e2a\u70b9\u8868\u793a\u5f39\u98de\u7684\u505a\u6cd5\u849f\u84bb\u53ea\u80fd\u8868\u793a\u60f3\u4e0d\u5230`qaq`\uff0c\u5728\u6ca1\u770b\u9898\u89e3\u7684\u60c5\u51b5\u4e0b\u60f3\u51fa\u4e86\u8fd9\u6837\u7684\u505a\u6cd5\uff1a\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u70b9\u5f39\u5230\u7684\u70b9\u4f5c\u4e3a\u5b83\u7684\u7236\u4eb2\uff0c\u5982\u679c\u5f39\u98de\u90a3\u4e48\u5c31\u662f\u6839\u3002\u5bb9\u6613\u53d1\u73b0\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u68ee\u6797\u3002\u8be2\u95ee\u64cd\u4f5c\u5c31\u662f\u6c42\u8fd9\u4e2a\u70b9\u7684\u6df1\u5ea6\uff0c\u800c\u4fee\u6539\u64cd\u4f5c\u5c31\u662f\u628a\u4e00\u4e2a\u70b9\u65ad\u5f00\u548c\u7236\u4eb2\u7684\u8fde\u63a5\uff0c\u63a5\u5230\u4e00\u4e2a\u65b0\u7684\u70b9\u4e0a\u3002\u8bf4\u767d\u4e86\u5c31\u662f**\u53ef\u4ee5\u4fee\u6539\u7236\u4eb2\u7684\u52a8\u6001\u6df1\u5ea6\u8be2\u95ee**\u3002\n\n\u90a3\u4e48\uff0c\u770b\u5230\u52a8\u6001\u7ef4\u62a4\u68ee\u6797\uff0c\u4fbf\u53ef\u4ee5\u60f3\u5230`LCT`\u3002\u95ee\u9898\u662f\u8981\u6c42\u6df1\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u5f88\u4ee4\u4eba\u8ba8\u538c\u7684\u9650\u5236\u6761\u4ef6\uff1a**\u4e0d\u80fd\u6362\u6839**\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u4e0d\u5f97\u4e0d\u7528\u5269\u4e0b\u6765\u7684\u51e0\u79cd\u64cd\u4f5c~~\u548c\u4eba\u7c7b\u7684\u667a\u6167~~\u6765\u5b8c\u6210\u8fd9\u9053\u9898\u3002\n\n~~\u5916\u63a5\u8868\u793a\u5f39\u98de\u7684\u70b9\u7684\u505a\u6cd5\uff1a\u6e23\u6e23\uff0c\u6211\u5c31\u53ef\u4ee5\u6362\u6839\uff01~~\n\n## 0. \u5efa\u6811\n\n\u8981\u662f\u6240\u6709\u70b9\u90fd`link`\u5230\u5b83\u7684`father`\uff0c\u4e14\u4e0d\u8bf4\u5e26\u4e00\u4e2a`log`\uff0c\u4e0d\u80fd\u6362\u6839`link`\u64cd\u4f5c\u4e5f\u7528\u4e0d\u4e86\u554a\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u597d\u65b9\u6cd5\uff1a\u6240\u6709\u8fb9\u9ed8\u8ba4\u521d\u59cb\u865a\u8fb9\uff0c\u76f4\u63a5\u8fde\u5c31\u5b8c\u4e8b\u3002\n\n\u5efa\u6811\u90e8\u5206\u4ee3\u7801\uff1a\n```\nfor (int i=1; i<=n; ++i)\n{\n    int tmp;\n    scanf(\"%d\", &tmp);\n    fa[i]=(i+tmp>n)?0:(i+tmp);\n    // \u8981\u662f\u5f39\u98defather\u5c31\u662f0\uff08\u5373\u662f\u6811\u6839\uff09\n}\n```\n\n## 1. \u67e5\u8be2\u64cd\u4f5c\n\n\u8fd9\u4e2a\u64cd\u4f5c\u76f8\u5bf9\u7b80\u5355\u3002LCT\u7684\u5b9e\u94fe\u5256\u5206\u6709\u4e00\u4e2a\u597d\u5904\uff1a\u53ef\u4ee5\u76f4\u63a5\u7528`access`\u64cd\u4f5c\u6253\u901a\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u7684\u539f\u6811\u957f\u8fd9\u6837\uff1a\n```\n      2\n     / \\\n    1   5\n   / \\\n  3   4\n       \\\n        6\n```\n\uff08\u5047\u8bbe\u4e00\u5f00\u59cb\u5168\u662f\u865a\u8fb9\uff09\n\n\u7136\u540e\u5047\u5982\u6211\u4eec\u8981\u67e5\u8be2\u8282\u70b94\u7684\u8def\u5f84\uff0c\u6211\u4eec\u5148`access`\u4e00\u4e0b4\u53f7\u70b9\uff0c\u6811\u53d8\u6210\u8fd9\u6837\uff1a\n```\n       2\n     // \\\n    1   5\n   / \\\\\n  3   4\n       \\\n        6\n```\n\uff08\u53cc\u6760\u8868\u793a\u5b9e\u8fb9\uff0c\u5355\u6760\u8868\u793a\u865a\u8fb9\uff09\n\n\u6b64\u65f6\u6839\u6240\u5728\u7684`splay`\u7684\u5143\u7d20\u4e00\u5b9a\u662f\u6839\u5230\u67e5\u8be2\u7684\u70b9\u8fd9\u6761\u94fe\uff0c\u56e0\u6b64\u8981\u67e5\u8be2\u70b9\u7684`rank`\u5373\u662f\u5b83\u7684\u6df1\u5ea6\u3002\u628a\u8981\u67e5\u8be2\u7684\u70b9`splay`\u5230\u6839\uff0c\u90a3\u4e48\u5b83\u7684\u5de6\u5b50\u6811\u7684\u5927\u5c0f\u5c31\u662f\u5b83\u7684\u7956\u5148\u4e2a\u6570\uff08\u800c\u4e14\u5b83\u4e00\u5b9a\u6ca1\u6709\u53f3\u5b50\u6811\uff09\u3002\u628a\u5de6\u5b50\u6811\u7684`size`\u52a0\u4e00\uff0c\u5373\u53ef\u5f97\u5230\u8981\u67e5\u8be2\u7684\u70b9\u7684`rank`\uff0c\u4e5f\u5c31\u662f\u5b83\u7684\u6df1\u5ea6\u3002\n\n\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u8fd9\u65f6\u7684\u8f85\u52a9\u6811\u957f\u8fd9\u6837\uff1a\n```\n      4\n    // \\\n   1    6\n // \\\n2    3\n|\n5\n```\n\u53ef\u4ee5\u770b\u5230\u67e5\u8be2\u7684\u70b9\uff084\uff09\u6240\u6709\u7684\u7956\u5148\u90fd\u5728\u5de6\u5b50\u6811\u3002\u5982\u679c\u4ecd\u6709\u7591\u8651\uff0c\u53ef\u4ee5\u52a0\u4e00\u53e5`assert(son[i][1]==0);`\u6765\u9a8c\u8bc1\u3002\n\n\u67e5\u8be2\u64cd\u4f5c\u4ee3\u7801\uff1a\n```\nint query(int i)\n{\n    access(i);\n    splay(i);\n    assert(son[i][1]==0);\n    return son[i][0]?siz[son[i][0]]+1:1;\n    // \u8981\u989d\u5916\u5224\u76ee\u524d\u7684\u70b9\u5df2\u7ecf\u662f\u6839\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a0\u53f7\u8282\u70b9\u53ef\u80fd\u6709\u5783\u573e\u6570\u503c\n}\n```\n\n## 2. \u4fee\u6539\u64cd\u4f5c\n\n\u8fd9\u662f\u6bd4\u8f83\u56f0\u96be\u7684\u4e00\u4e2a\u64cd\u4f5c\u3002\n\n\u770b\u5230\u65ad/\u8fde\uff0c\u60f3\u5230\u7684\u7b2c\u4e00\u4e2a\u5c31\u662f`cut`\u548c`link`\u3002\u7136\u800c\u5148\u4e0d\u8bf4\u5e38\u6570\uff0c\u4e0d\u80fd\u6362\u6839\u8fd9\u4e00\u70b9\uff0c\u5c31\u8ba9`cut`\u548c`link`\u6210\u4e3a\u4e86\u4e0d\u53ef\u80fd\u3002\u90a3\u4e48\uff0c\u600e\u4e48\u505a\u5462\uff1f\n\n\u8981\u65ad\u5f00\u67e5\u8be2\u8282\u70b9\uff08\u79f0\u4e3a`i`\uff09\u548c\u5b83\u5728\u539f\u6811\u4e2d\u7684\u7236\u4eb2\uff0c\u6211\u4eec\u9996\u5148\u8981\u627e\u5230\u5b83\u5728\u539f\u6811\u4e2d\u7684\u7236\u4eb2\u3002\u5bb9\u6613\u60f3\u5230\uff0c\u9996\u5148\u8981\u8ba9\u5b83\u548c\u7236\u4eb2\u5728\u4e00\u68f5`splay`\u91cc\u9762\u3002\u6240\u4ee5\uff0c\u5148\u8981`access(i)`\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u7531\u4e8e`i`\u548c`i`\u7684\u7236\u4eb2\u5728\u539f\u6811\u4e2d\u6df1\u5ea6\u8fde\u7eed\uff0c`i`\u7684\u7236\u4eb2\u5728`splay`\u4e2d\u4e00\u5b9a\u662f`i`\u7684\u524d\u9a71\u3002\u67e5\u627e\u524d\u9a71\u662f\u6bd4\u8f83\u57fa\u7840\u7684`splay`\u64cd\u4f5c\uff08\u5f53\u7136\u4e0d\u662f\u666e\u901a\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u90a3\u79cd\u4ece\u6839\u8282\u70b9\u67e5\u627e\u524d\u9a71\u7684\u64cd\u4f5c\uff09\uff0c\u53ef\u4ee5\u5148`splay(i)`\uff0c\u7136\u540e\u4ece`i`\u7684\u5de6\u513f\u5b50\u4e00\u76f4\u5f80\u53f3\u513f\u5b50\u627e\uff0c\u76f4\u5230\u4e0d\u5b58\u5728\u53f3\u513f\u5b50\u4e3a\u6b62\u3002\u627e\u7236\u4eb2\u90e8\u5206\u4ee3\u7801\uff1a\n```\naccess(i);\nsplay(i);\n// \u627e\u7236\u4eb2\nint ifa=son[i][0];\nwhile (son[ifa][1]) ifa=son[ifa][1];\n```\n\u627e\u5230\u7236\u4eb2\u4e4b\u540e\uff0c\u4e3a\u4e86\u65ad\u8fb9\uff0c\u6211\u4eec\u8981\u8ba9`i`\u53f7\u8282\u70b9\u548c`ifa`\u8282\u70b9\u4e4b\u95f4\u5b58\u5728\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\u3002\u56e0\u6b64\uff0c\u5148`splay(ifa)`\uff0c\u7136\u540e\uff0c\u7531\u4e8e`ifa`\u548c`i`\u6df1\u5ea6\u8fde\u7eed\uff0c`ifa`\u7684\u53f3\u513f\u5b50\u4e00\u5b9a\u662f`i`\uff0c\u800c\u4e14`i`\u4e0d\u5b58\u5728\u5de6\u513f\u5b50\uff08\u5176\u5b9e\u4e5f\u4e0d\u5b58\u5728\u53f3\u513f\u5b50\uff0c\u56e0\u4e3a\u6211\u4eec`access`\u8fc7`i`\uff09\u3002\u76f4\u63a5\u65ad\u8fb9\uff0c\u628a`i`\u8fde\u5230\u65b0\u7236\u4eb2\u5373\u53ef\u3002\u4fee\u6539\u64cd\u4f5c\u4ee3\u7801\uff1a\n```\nvoid modify(int i, int j) // \u4fee\u6539\uff0cj\u662f\u65b0\u7684\u7236\u4eb2\n{\n    access(i);\n    splay(i);\n    // find father\n    int ifa=son[i][0];\n    while (son[ifa][1]) ifa=son[ifa][1];\n    splay(ifa);\n    assert(ifa==fa[i]);\n    son[ifa][1]=0;\n    push_up(ifa);\n    fa[i]=j;\n    return;\n}\n```\n\u4f46\u662f\uff0c\u4e14\u6162\uff01\u5982\u679c\u4f60\u7528\u8fd9\u4efd\u4ee3\u7801\u63d0\u4ea4\uff0c\u4f60\u5c06\u4f1a\u5f97\u5230\u4e24\u4e2a`TLE`\uff08\u800c\u4e14\u662f\u5c0f\u6570\u636e\u7684\uff09\u3002\u8fd9\u5012\u4e0d\u662f\u5e38\u6570\u7684\u539f\u56e0\uff0c\u800c\u662f\u56e0\u4e3a\uff0c\u5982\u679c`i`\u5df2\u7ecf\u662f\u6839\uff0c\u90a3\u4e48`ifa`\u5c31\u662f`0`\uff0c\u7136\u540e\u6211\u4eec\u5c31\u4f1a\u8fdb\u5165`splay(0)`\u6b7b\u5faa\u73af\uff01\u89e3\u51b3\u7684\u65b9\u6cd5\u662f\u52a0\u4e00\u4e2a`ifa`\u662f\u5426\u4e3a`0`\u7684\u5224\u65ad\u3002\u6b63\u786e\u7684\u4fee\u6539\u64cd\u4f5c\u4ee3\u7801\uff1a\n```\nvoid modify(int i, int j) // \u4fee\u6539\uff0cj\u662f\u65b0\u7684\u7236\u4eb2\n{\n    access(i);\n    splay(i);\n    // find father\n    int ifa=son[i][0];\n    if (ifa)\n    {\n        while (son[ifa][1]) ifa=son[ifa][1];\n        splay(ifa);\n        assert(ifa==fa[i]);\n        son[ifa][1]=0;\n        push_up(ifa);\n    }\n    fa[i]=j;\n    return;\n}\n```\n---\n\u597d\u5566\uff0c\u64cd\u4f5c\u90fd\u8bb2\u5b8c\u5566`qwq`\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5b8c\u6574\u7684AC\u4ee3\u7801\u4e86\u3002\u987a\u5e26\u63d0\u4e00\u53e5\uff0c\u8fd9\u4efd\u4ee3\u7801\u53ea\u6709`130+`\u884c\uff08\u542b\u7a7a\u884c\uff09\uff0c\u6bd4\u666e\u901a`LCT`\u7801\u91cf\u5c0f\u4e86\u5f88\u591a\uff0c\u800c\u4e14\u5e38\u6570\u51fa\u5947\u5730\u5c0f\uff0c\u4e0d\u52a0\u4efb\u4f55\u523b\u610f\u5361\u5e38\uff0c\u5438\u4e00\u53e3\u6c27\uff0c\u603b\u65f6\u95f4`580+ms`\uff0c\u5728\u6d1b\u8c37\u5c45\u7136\u6392\u5728\u524d`5`\u9875\uff08\u524d\u51e0\u9875\u6709\u5927\u91cf\u7684\u5de8\u4f6c\u53cd\u590d\u63d0\u4ea4\uff09\uff0c\u53ef\u8c13\u662f\u76f8\u5f53\u4ee4\u4eba\u60ca\u559c\u4e86`qwq`\u3002\n\n\u5b8c\u6574AC code:\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <assert.h>\n\n// by luogu @\u6a31\u521d\u97f3\u6597\u6a61\u76ae\n\nconst int N=200000;\nconst int M=100000;\n\nint n, m;\n\nint fa[N+10], son[N+10][2], siz[N+10];\n\ninline bool nroot(int i) // \u4e0d\u662f\u6839\n{\n\treturn (son[fa[i]][0]==i)||(son[fa[i]][1]==i);\n}\n\ninline bool chk(int i) // \u662f\u53f3\u513f\u5b50\n{\n\treturn son[fa[i]][1]==i;\n}\n\ninline void push_up(int i) // \u4e0a\u4f20\u4fe1\u606f\n{\n\tsiz[i]=1;\n\tif (son[i][0])\n\t\tsiz[i]+=siz[son[i][0]];\n\tif (son[i][1])\n\t\tsiz[i]+=siz[son[i][1]];\n\treturn;\n}\n\ninline void spin(int i) // \u65cb\u8f6c\n{\n\tint ifa=fa[i], igfa=fa[ifa], dir=chk(i),\n\t\tison=son[i][dir^1], dirfa=chk(fa[i]), nrt=nroot(ifa);\n\tfa[ison]=ifa;\n\tson[ifa][dir]=ison;\n\tfa[ifa]=i;\n\tson[i][dir^1]=ifa;\n\tfa[i]=igfa;\n\tif (nrt)\n\t\tson[igfa][dirfa]=i;\n\tpush_up(ifa);\n\tpush_up(i);\n\treturn;\n}\n\nvoid splay(int i) // splay\n{\n\tint ifa=fa[i];\n\twhile (nroot(i))\n\t{\n\t\tif (nroot(ifa))\n\t\t{\n\t\t\tif (chk(i)==chk(ifa))\n\t\t\t\tspin(ifa);\n\t\t\telse\n\t\t\t\tspin(i);\n\t\t}\n\t\tspin(i);\n\t\tifa=fa[i];\n\t}\n\treturn;\n}\n\nvoid access(int i) // access\n{\n\tint j=0;\n\twhile (i)\n\t\tsplay(i), son[i][1]=j, push_up(i), j=i, i=fa[i];\n\treturn;\n}\n\nint query(int i) // \u67e5\u8be2\n{\n\taccess(i);\n\tsplay(i);\n\tassert(son[i][1]==0);\n\treturn son[i][0]?siz[son[i][0]]+1:1;\n}\n\nvoid modify(int i, int j) // \u4fee\u6539\uff0cj\u662f\u65b0\u7684\u7236\u4eb2\n{\n\taccess(i);\n\tsplay(i);\n\t// find father\n\tint ifa=son[i][0];\n\tif (ifa)\n\t{\n\t\twhile (son[ifa][1]) ifa=son[ifa][1];\n\t\tsplay(ifa);\n\t\tassert(ifa==fa[i]);\n\t\tson[ifa][1]=0;\n\t\tpush_up(ifa);\n\t}\n\tfa[i]=j;\n\treturn;\n}\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i=1; i<=n; ++i)\n\t\tfa[i]=0, son[i][0]=son[i][1]=0, siz[i]=1;\n\tfor (int i=1; i<=n; ++i)\n\t{\n\t\tint tmp;\n\t\tscanf(\"%d\", &tmp);\n\t\tfa[i]=(i+tmp>n)?0:(i+tmp);\n\t}\n\tscanf(\"%d\", &m);\n\tfor (int i=1; i<=m; ++i)\n\t{\n\t\tint cmd, j, k;\n\t\tscanf(\"%d%d\", &cmd, &j);\n\t\t++j;\n\t\t// \u9898\u76ee\u4e2d\u7684\u7f16\u53f7\u4e3a0~n-1\uff0c\u5b9e\u9645\u7684\u7f16\u53f7\u8981+1\u4fbf\u4e8e\u64cd\u4f5c\n\t\tswitch (cmd)\n\t\t{\n\t\tcase 1:\n\t\t\tprintf(\"%d\\n\", query(j));\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tscanf(\"%d\", &k);\n\t\t\tmodify(j, (j+k>n)?0:(j+k));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tprintf(\"stupid yyc\\n\"); // \u6ed1\u7a3d\n\t\t\t// \u9632\u6b62\u6570\u636e\u51fa\u9519\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1573138802,
        "uid": 66287,
        "name": "\u6a31\u521d\u97f3\u6597\u6a61\u76ae",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "\u4e00\u9053\u7b80\u5355\u5206\u5757\u9898\u3002\n\n\u5bf9\u6574\u4e2a\u6570\u7ec4\u8fdb\u884c\u5206\u5757\uff0c\u5757\u7684\u5927\u5c0f\u53d6$sqrt(N)$\uff0c\u5206\u5757\u4e4b\u540e\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4```jump[]```\u548c```step[]```\uff0c\u5206\u522b\u8868\u793a\u8df3\u51fa\u5f53\u524d\u5757**\u6240\u5230\u8fbe\u7684\u4f4d\u7f6e**\u4e0e\u6240\u7528\u7684\u6b65\u6570\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u5b8c\u6210\u3002\n\n\u7136\u540e\u66f4\u6539\u65f6~~\u66b4\u529b~~\u66f4\u6539\uff0c\u7531\u4e8e\u53ea\u6709\u5355\u70b9\u4fee\u6539\uff0c```jump[]```\u4e0e```step[]```\u53ea\u548c\u5757\u5185\u7684\u5143\u7d20\u6709\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728$O(sqrt(N))$\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u3002\n\n\u67e5\u8be2\u65f6\u76f4\u63a5\u6574\u5757\u6574\u5757\u8df3\uff0c\u6700\u591a\u6709$O(sqrt(N))$\u5757\uff0c\u6240\u4ee5\u4e5f\u662f$O(sqrt(N))$\u7684\u65f6\u95f4\u3002\n\n### Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint lnk[1000000];  //\u539f\u6570\u7ec4\u5728\u5757\u5185\u7684\u7f16\u53f7\nstruct node {\n    int l, r;\n} a[1000000];       // \u4fdd\u5b58\u6bcf\u4e00\u4e2a\u5757\u7684\u533a\u95f4\nint num[1000000];   // num[x]\u8868\u793a\u4ecex\u5f80\u540e\u8df3\u4e00\u6b65\u5230\u8fbe\u7684\u4f4d\u7f6e\nint jump[1000000];  // jump[x]\u8868\u793a\u5728x\u65f6\u8df3\u51fa\u5f53\u524d\u5757\u5230\u8fbe\u7684\u4f4d\u7f6e\nint step[1000000];  // step[x]\u8868\u793a\u8df3\u51fa\u5f53\u524d\u5757\u6240\u7528\u6b65\u6570\nvoid update(int l, int r) {\n    //\u66f4\u65b0\u5f53\u524d\u5757\u7684jump\u4e0estep\u503c\n    for (int i = r; i >= l; i--) {\n        //\u5012\u5e8f\u5faa\u73af\uff0c\u7528i+num[i]\u7684\u503c\u66f4\u65b0i\n        if (i + num[i] > a[lnk[i]].r) {\n            //\u5982\u679c\u4e00\u6b21\u5c31\u8df3\u51fa\u5f53\u524d\u5757\uff0c\u76f4\u63a5\u66f4\u65b0\n            jump[i] = i + num[i];\n            step[i] = 1;\n        } else {\n            //\u5426\u5219\u7ee7\u627f\u540c\u4e00\u5757\u4e2d\u7684\u4e0b\u4e00\u4e2a\u8df3\u5230\u7684\u5143\u7d20\n            jump[i] = jump[i + num[i]];\n            step[i] = step[i + num[i]] + 1;\n        }\n    }\n}\nint block;  //\u6bcf\u5757\u5927\u5c0f\nint n;\nvoid init() {\n    //\u5206\u5757\u521d\u59cb\u5316\n    block = sqrt(n);\n    for (int i = 0; i < n; i++)\n        lnk[i] = i / block;\n    for (int i = 0; i <= lnk[n - 1]; i++) {\n        a[i].l = i * block;\n        a[i].r = (i + 1) * block - 1;\n    }\n    a[lnk[n - 1]].r = n - 1;\n    update(0, n - 1);  //\u4e00\u6b21\u66f4\u65b0\u6574\u4e2a\u5e8f\u5217\u7684jump[]\u4e0estep[]\u503c\n}\nint ask(int x) {\n    //\u8be2\u95ee\u5f39\u51fa\u5e8f\u5217\u9700\u8981\u591a\u5c11\u6b65\n    int ans = 0;\n    while (x < n) {\n        ans += step[x];\n        x = jump[x];\n    }\n    return ans;\n}\nint main() {\n    ios::sync_with_stdio(NULL);\n    cin.tie(NULL);\n    // \u8f93\u5165\u4f18\u5316\uff0c\u540c\u6b65IO\u7f13\u5b58\u5e76\u7ed1\u5b9acin\u4e0ecout\u6d41\n    cin >> n;\n    for (int i = 0; i < n; i++)\n        cin >> num[i];\n    init();\n    int q;\n    cin >> q;\n    while (q --> 0) {\n        // q\u8d8b\u8fd1\u4e8e0 (\u6ed1\u7a3d)\n        static int opt, x, y;\n        cin >> opt >> x;\n        if (opt == 1) {\n            cout << ask(x) << '\\n';\n        } else {\n            cin >> y;\n            num[x] = y;\n            update(a[lnk[x]].l, a[lnk[x]].r);\n        }\n    }\n}\n\n```\n",
        "postTime": 1576327116,
        "uid": 84832,
        "name": "MaxDYF",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "\u505a\u6cd5\u6765\u81ea\u9ec4\u5b66\u957f\n\n\u4e0d\u9700\u8981\u7528link cut tree(\u6211\u4e0d\u4f1a) \uff0c \u5229\u7528\u5206\u5757\u7684\u601d\u60f3\uff0c (\u81ea\u8ba4\u4e3a\u4ee3\u7801\u6bd4\u697c\u5e95\u7684\u90a3\u4e2a\u597d\u61c2)\n\n\u6bcf\u5757\u5206 \u221aN \u4e2a\u5143\u7d20 \uff0c \u9884\u5904\u7406\u51fa\u6765\u4e00\u4e2a\u5757\u91cc\u7684\u70b9\u53ef\u4ee5\u8df3\u5230\u53e6\u4e00\u4e2a\u5757\u7684\u4ec0\u4e48\u4f4d\u7f6e\n\n\u67e5\u8be2\u64cd\u4f5c\uff1a\u4e00\u5757\u4e00\u5757\u8df3\u8fc7\u53bb \u5355\u6b21\u590d\u6742\u5ea6 O(\u221aN)\n\n\u4fee\u6539\u64cd\u4f5c\uff1a\u53ea\u9700\u8981\u628a\u76f8\u5e94\u7684\u5757\u6539\u4e00\u904d\u5c31\u597d\u4e86 \u8fd9\u4e2a\u4e5f\u662fO(\u221aN)\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u8fc7\u4e86\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 200001\nvoid read(int& x)\n{\n    x=0;char c;c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n}\nint N,M,block,cnt,ans,a[MAXN],l[MAXN],r[MAXN],step[MAXN],to[MAXN],belong[MAXN];\nint main()\n{\n    read(N);\n    for(int i=1;i<=N;i++)read(a[i]);\n//initiation\n    block=( int)sqrt(N);\n    cnt=(N%block)?N/block+1:N/block;\n    for(int i=1;i<=cnt;i++)\n        l[i]=r[i-1]+1,r[i]=l[i]+block-1;\n    r[cnt]=N;\n    for(int i=1,j=1;i<=cnt;j++)\n    {\n        belong[j]=i;\n        if(j==r[i])i++;\n    }\n    for(int i=N;i>=1;i--)\n    {\n        to[i]=i+a[i];\n        if(to[i]>r[belong[i]])step[i]=1;\n        else step[i]=step[to[i]]+1,to[i]=to[to[i]];\n    }\n//operation\n    read(M);\n    while(M--)\n    {\n        int k,x,y;\n        read(k);\n        if(k==1)    //query\n        {\n            ans=0;read(x);x++;\n            while(x<=N)ans+=step[x],x=to[x];\n            printf(\"%d\\n\",ans);\n        }\n        else        //change\n        {\n            read(x);read(y);x++;\n            a[x]=y;\n            for(int i=r[belong[x]];i>=l[belong[x]];i--)\n            {\n                to[i]=i+a[i];\n                if(to[i]>r[belong[i]])step[i]=1;\n                else step[i]=step[to[i]]+1,to[i]=to[to[i]];\n            }\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1505137489,
        "uid": 24693,
        "name": "HiJ1m",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]BOUNCE \u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "\u521d\u5b66\u5206\u5757\uff0c\u82e5\u6709\u9519\u8bef\u8bf7\u89c1\u8c05\uff0c\u5e76\u63d0\u9192\u4e0b**\u8c22\u8c22**\n\n### \u60f3\u4e86\u4e00\u4f1a\u513f\uff0c\u5728\u4e0a\u5395\u6240\u65f6\uff0c\u901a\u4e86\uff01\n\n~~\u626f\u6de1\u7ed3\u675f~~\n\n**\u6b63\u6587\uff1a**\n\n1.  \u601d\u8003\u5386\u7a0b\uff1a\n\n\t\u4e00\u6765\u89c9\u5f97\u8981\u9760\u67d0\u79cd\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7b97\u6cd5\u4e71\u641e\uff08~~\u7ed3\u679c\uff1a\u5341\u5e74\u4ee5\u540e\uff0c\u4e0d\u77e5\u9053\uff0cGG~~\uff09\n\t\n    \u540e\u9762\u53c8\u611f\u89c9\u5206\u5757\u5904\u7406\u4f1a\u5f88\u65b9\u4fbf\uff0c\u4e8e\u662f\u5f00\u59cb\u5c1d\u8bd5\u3002\n    \n    \u7b97\u6cd5\u786e\u5b9a\u4e0b\u6765\u3002\n    \n2.\t\u9047\u89c1\u7684\u969c\u788d\uff1a\n\t\n    \u5148\u8003\u8651\u6734\u7d20\u505a\u6cd5\uff1a\n\t```cpp\n\twhile(x<=n){\n\t\tans++;\n\t\tx=x+a[x];\n\t}\n\t``` \n  \t\u90a3\u4e48\u5f88\u660e\u663e\u5728\u5212\u5206\u597d\u5757\u540e\uff0c\u60f3\u529e\u6cd5\u5c06\u4ee5\u4e0a\u505a\u6cd5**\u52a0\u901f**\u3002\n    \n    \u65e2\u7136\u5982\u6b64\uff0c\u5c31\u5c06**\u70b9**\u653e\u5927\u5230**\u5757**\u6765\u770b\uff0c\u7531\u8fd9\u4e2a\u5757\u8df3\u8dc3\u5230\u4ed6\u540e\u9762\u7684\u5757\u3002\n    \n    \u4e0d\u96be\u770b\u51fa\uff1a\n    \n    \u7edf\u8ba1\u8fd9\u4e2a\u5757\u4e2d\uff0c\u4ece\u5f53\u524d\u4f4d\u7f6e\u8df3\u51fa\u5f53\u524d\u5757\u7684**\u6b65\u6570**\u4ee5\u53ca**\u8df3\u51fa\u540e\u7684\u4f4d\u7f6e\uff08PS\uff1a\u4e0d\u662f\u4e4b\u540e\u7684\u54ea\u4e2a\u5757\uff09**\n    \n3. **\u4ee3\u7801\uff1a\uff08\u5177\u4f53\u5b9e\u73b0\u5199\u4e86\u6ce8\u91ca\uff09**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e5+5;\nint n,m,ans,a[maxn],pos[maxn],cnt[maxn],tot,len,to[maxn],L[450],R[450];\n\nvoid init(){\n\tlen=tot=sqrt(n);//\u7531\u4e8e\u61d2\uff0c\u4e3a\u7b97\u5177\u4f53\u5e94\u8be5\u4e3a\u591a\u5c11\uff0c\u76f4\u63a5\u9644\u4e3a\u6839\u53f7n\n\tfor(int i=1;i<=tot;++i){//\u6bcf\u4e2a\u5757\u5de6\u53f3\u7aef\u70b9\u7ef4\u62a4\n\t\tL[i]=(i-1)*len+1;\n\t\tR[i]=i*len;\n\t}\n\tif(R[tot]<n) tot++,L[tot]=R[tot-1]+1,R[tot]=n;//\u5757\u662f\u5426\u7edf\u8ba1\u5b8c\u6574\uff1f\n\tfor(int i=1;i<=tot;++i)\n\t\tfor(int j=R[i];j>=L[i];--j){//\u5012\u53d9\u679a\u4e3e\uff0c\u63d0\u524d\u7ef4\u62a4\u51fa\u4fe1\u606f\n\t\t\tpos[j]=i;//\u8bb0\u5f55\u6bcf\u4e2a\u4f4d\u7f6e\u6240\u5bf9\u5e94\u7684\u5757\n\t\t\tif(a[j]+j>R[i])//\u76f4\u63a5\u8df3\u51fa\n\t\t\t\tcnt[j]=1,to[j]=j+a[j];//\u6b65\u6570=1\uff0c\u4e0b\u4e2a\u4f4d\u7f6e\u7d2f\u52a0\n\t\t\telse//\u82e5\u4e0d\u80fd\n\t\t\t\tcnt[j]+=cnt[j+a[j]]+1,to[j]=to[j+a[j]];//\u7531\u4e4b\u540e\u4f4d\u7f6e\u8f6c\u79fb\u800c\u6765\uff0c\u601d\u60f3\u540c\u4e0a\n\t\t}\n}\n\nvoid query(int x){\n\tans=0;\n\twhile(x<=n){//\u672a\u8df3\u51fa\uff0c\u4e00\u76f4\u7d2f\u52a0\n\t\tans+=cnt[x];\n\t\tx=to[x];\n\t}\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i) scanf(\"%d\",&a[i]);\n\tinit();//\u9884\u5904\u7406\n\tscanf(\"%d\",&m);\n\twhile(m--){\n\t\tint op,x,y;\n\t\tscanf(\"%d%d\",&op,&x);\n     \tx++;//\u4e4b\u524d\u5b58\u7684\u662f\uff1a1~n\n\t\tif(op==1){\n\t\t\tquery(x);\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t\telse{//\u66b4\u529b\u66f4\u65b0\uff0c\u91cd\u65b0\u7ef4\u62a4\uff0c\u4e0e\u9884\u5904\u7406\u4e00\u81f4\n\t\t\tscanf(\"%d\",&y);\n\t\t\ta[x]=y;\n\t\t\tint now=pos[x];\n\t\t\tfor(int i=R[now];i>=L[now];--i) to[i]=cnt[i]=0;//\u8fd9\u91cc\u76f4\u63a5\u6e05\u6389\uff0c\u9632\u6b62cnt\u7d2f\u52a0\u51fa\u9519\n\t\t\tfor(int i=R[now];i>=L[now];--i){\n\t\t\t\tif(a[i]+i>R[now])\n\t\t\t\t\tcnt[i]=1,to[i]=i+a[i];\n\t\t\t\telse\n\t\t\t\t\tcnt[i]+=cnt[i+a[i]]+1,to[i]=to[i+a[i]];\n\t\t\t}\n\t\t}\n\t}\n\treturn 0; \n}\n```\n\nrp++",
        "postTime": 1569578380,
        "uid": 109381,
        "name": "Mosher",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "\u5173\u4e8e\u8fd9\u9053\u9898\uff0c\u5982\u679c\u4e0d\u662f\u56e0\u4e3albg\u5927\u4f6c\u5e2e\u6211dbug\uff0c\u6211\u53ef\u80fd\u5c31\u771f\u7684\u60e8\u6b7b\u5728\u8fd9\u9053\u9898\u4e0a\u4e86\u3002\u3002\u3002\uff08\u5341\u5206\u611f\u8c22\uff09\n\n\u597d\u4e86\uff0c\u4e0d\u5e9f\u8bdd\u4e86\uff0c\u8fdb\u5165\u6b63\u9898\u3002\n\n\u8fd9\u9053\u9898\u7684\u6b63\u89e3LCT\u6211\u5e76\u6ca1\u6709\u5b66\u8fc7\uff0c\u6240\u4ee5\u6211\u4e5f\u53ea\u80fd\u7528\u4e07\u6076\u7684\u5206\u5757\uff08\u9a97\u5206\u5229\u5668\uff09\u4e86\u3002\u3002\u3002\n\n\u601d\u8def\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5c06\u6574\u4e2a\u5e8f\u5217\u5206\u6210\u82e5\u5e72\u4e2a\u5757\uff08\u5757\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u6570\u636e\uff0c\u4f46\u662f\u6211\u4eec\u4e00\u822c\u90fd\u4f1a\u9ed8\u8ba4\u4e3a\u221an\uff09\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5757\u7684\u6bcf\u4e00\u4e2a\u70b9\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u4ed6\u5f39\u51fa\u8fd9\u4e2a\u5757\u8fd8\u9700\u51e0\u6b65\u548c\u5f39\u51fa\u4e4b\u540e\u4f1a\u5230\u8fbe\u54ea\u4e00\u4e2a\u70b9\u5373\u53ef\u3002\n\n\u5173\u4e8e\u4fee\u6539\uff0c\u7531\u4e8e\u6bcf\u4e00\u4e2a\u5757\u4e4b\u95f4\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u5355\u70b9\u4fee\u6539\u53ea\u9700\u8981\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5757\u5c31\u53ef\u4ee5\u4e86\uff0c\u5e76\u4e14\u7531\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7684\u6570\u636e\u90fd\u5efa\u7acb\u5728\u4ed6\u540e\u9762\u5757\u7684\u57fa\u7840\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\u90fd\u9700\u8981\u5012\u7740\u6765\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u800c\u5bf9\u4e8e\u67e5\u8be2\u6211\u4eec\u53ea\u8981\u5faa\u7740\u6bcf\u4e00\u4e2a\u70b9\u7684\u6307\u5411\uff0c\u7d2f\u52a0\u6bcf\u4e00\u4e2a\u70b9\u7684sum\u503c\uff0c\u5927\u4e8en\u7684\u65f6\u5019\u8df3\u51fa\u5373\u53ef\u3002\n\nPS\uff1a\u7531\u4e8e\u88c5\u7f6e\u662f\u4ece\u96f6\u5f00\u59cb\u8ba1\u6570\u7684\u6240\u4ee5\u8bfb\u5165\u6570\u636e\u65f6\u4e0d\u8981\u5fd8\u4e86\u52a0\u4e00\uff01\uff01\uff01\n\n\u6700\u540e\uff0c\u9644\u4e0a\u672c\u9898\u4ee3\u7801\uff1a\uff08\u7801\u98ce\u8f83\u4e11\uff0c\u52ff\u55b7\u3001\u3001\u3001\uff09\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nstruct pot\n{\n    int to,k,conti,sum;\n}p[200005];\nint size,cnt=1,n;\nvoid change(int ct)\n{\n    //printf(\"%d\\n\",size);\n    for(int j=min(ct*size,n);j>(ct-1)*size;j--)\n    {\n        if(j + p[j].k > ct * size || j + p[j].k > n) p[j].sum = 1,p[j].to = j + p[j].k;\n        else\n        {\n            p[j].to=p[j+p[j].k].to;\n            p[j].sum=p[j+p[j].k].sum + 1;\n        }\n        //printf(\"%d\\n\",p[j].to);\n    }\n}\nint query(int y)\n{\n    int ans=0;\n    while(y<=n)\n    {\n        ans+=p[y].sum;\n        //printf(\"%d\\n\",ans);\n        y=p[y].to;\n    }\n    return ans;\n}\nint main()\n{\n    int temp = 0;\n    scanf(\"%d\",&n);\n    size=sqrt(n);\n    for(int i=1;i<=n;i++)\n    {\n        temp++;\n        if(temp>size)\n        {\n            cnt++;\n            temp=1;\n        }\n        scanf(\"%d\",&p[i].k);\n        p[i].conti=cnt;\n    }\n    //if(temp != 0) cnt++;\n    //printf(\"%d\\n\",cnt);\n    for(int i=cnt;i >= 1;i--)\n        change(i);\n    int m;\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n    {\n        int x,y,z;\n        scanf(\"%d%d\",&x,&y);\n        if(x==1)\n            printf(\"%d\\n\",query(y+1));\n        else\n        {\n            scanf(\"%d\",&z);\n            p[y+1].k=z;\n            //printf(\"%d\\n\",p[y].k); \n            change(p[y+1].conti);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1550400869,
        "uid": 133227,
        "name": "\u4e8e\u4e30\u6797",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "# LCT\u7684\u677f\u5b50\u9898\n\u6211\u770b\u5230\u697c\u4e0b\u5f88\u591a\u5927\u4f6c\u7528\u5206\u5757\u7684\u65b9\u6cd5\u89e3\u51b3\u4e86\u8fd9\u9053\u9898\uff0c\u4f46\u662f\u672c\u849f\u84bb\u4e0d\u4f1a\u5206\u5757\uff0c\u4f46\u6211\u4f1aLCT\u554a\uff0c\u6240\u4ee5\u5c31\u7528LCT\u89e3\u51b3\u4e86\u8fd9\u9053\u9898\u3002\n## \u795e\u5947\u7684\u601d\u8def\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9 \u7ef4\u62a4\u4ed6\u7684size\uff0c\u6bcf\u4e00\u4e2a\u5f39\u5c04\u5668 \u7531\u5b83\u5373\u5c06\u5230\u8fbe\u7684\u5f39\u5c04\u5668\u5411\u4ed6\u8fde\u8fb9\n\n\u865a\u62df\u4e00\u4e2an+1\u53f7\u8282\u70b9 \u8fdb\u884c\u6700\u540e\u4e00\u6b21\u5f39\u5c04\uff0c\n\u6bcf\u6b21\u76f4\u63a5\u67e5\u8be2\u5bf9\u5e94\u4f4d\u7f6e\u7684size\u5373\u53ef\u3002\n### \u4e5f\u5c31\u662f\n\u628a\u7ed9\u51fa\u7684\u6570\u636e\u5f53\u505a\u68ee\u6797\uff0c\u5373i\u7684\u7236\u4eb2\u662fi+k[i]\uff0c\u8be2\u95ee\u7684\u662f\u5230\u6839\u7684\u8def\u5f84\u957f\u5ea6+1\uff0c\u53ef\u4ee5\u4fee\u6539\u7236\u4eb2\u3002\u6240\u4ee5\u53ea\u9700\u8981link\u64cd\u4f5c\u5373\u53ef\uff0c\u6ce8\u610f\u628a\u8d85\u8fc7n\u7684\u8282\u70b9\u8bbe\u4e3a0\u3002\u6bcf\u6b21\u8be2\u95ee\u5148access\uff0c\u7136\u540eSplay\u5230\u6839\uff08Splay\u4e2d\u8981\u7ef4\u62a4size\uff09\uff0c\u8fd9\u6837\u6240\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f\u8282\u70b9\u5728Splay\u4e0a\u7684\u5de6\u5b50\u6811\u5927\u5c0f+1\u3002\n\n# CODE\uff1a\n```\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<iostream>\n#include<cstdlib>\n#include<algorithm>\n\nusing namespace std;\n\nconst int maxn = 200010;\n\ninline int read(){\n\tint x = 0;\n\tint flag = true;\n\tint k = getchar();\n\twhile(k != '-' && !isdigit(k))\n\t    k = getchar();\n\tif(k == '-'){\n\t   k = getchar();\n\t   flag = false;\n\t}\n\twhile(isdigit(k)){\n\t\tx = x * 10 + k - '0';\n\t\tk = getchar();\n\t}\n\treturn (flag ? x : -x);\n}\n\nstruct node{\n\tint father;\n\tint ch[2];\n\tint size;\n\tbool is_root;\n}tree[maxn];\n\nint n,m,k[maxn];\n\nvoid update(int x){\n\ttree[x].size=1;\n\tif(tree[x].ch[0]) tree[x].size += tree[tree[x].ch[0]].size;\n\tif(tree[x].ch[1]) tree[x].size += tree[tree[x].ch[1]].size;\n}\ninline int getson(int x){\n\treturn x == tree[tree[x].father].ch[1];\n}\nvoid rotate(int x){\n\tif(tree[x].is_root) return;\n\tint k = getson(x),fa = tree[x].father;\n\tint fafa = tree[fa].father;\n\ttree[fa].ch[k] = tree[x].ch[k^1];\n\tif(tree[x].ch[k^1])\n\t\ttree[tree[x].ch[k^1]].father = fa;\n\ttree[x].ch[k^1] = fa;\n\ttree[fa].father = x;\n\ttree[x].father = fafa;\n\tif(!tree[fa].is_root)\n\t\ttree[fafa].ch[fa == tree[fafa].ch[1]] = x;\n\telse {\n\t\ttree[x].is_root = true;\n\t\ttree[fa].is_root = false;\n\t}\n\tupdate(fa);\n\tupdate(x);\n}\nvoid Splay(int x){\n\tfor(int y ; !tree[x].is_root;rotate(x)){\n\t\tif(!tree[y = tree[x].father].is_root){\n\t\t\trotate((getson(x) == getson(y)) ? y : x);\n\t\t}\n\t}\n}\nvoid access(int x){\n\tint y = 0;\n\twhile(x){\n\t\tSplay(x);\n\t\ttree[tree[x].ch[1]].is_root = true;\n\t\ttree[tree[x].ch[1] = y].is_root = false;\n\t\tupdate(x);\n\t\tx = tree[y = x].father;\n\t}\n}\nvoid link(int u,int v){\n\tif(v > n) v = 0;\n\taccess(u);\n\tSplay(u);\n\ttree[tree[u].ch[0]].is_root = true;\n\ttree[tree[u].ch[0]].father = 0;\n\ttree[u].ch[0] = 0;\n\ttree[u].father = v;\n\tupdate(u);\n}\nint Query(int x){\n\taccess(x);\n\tSplay(x);\n\treturn tree[tree[x].ch[0]].size + 1;\n}\n\nint main(){\n\tn = read();\n\tfor(int i = 1 ; i <= n ; i++){\n\t\ttree[i].is_root = 1;\n\t\ttree[i].size = 1;\n\t\ttree[i].father = 0;\n\t\ttree[i].ch[0] = 0;\n\t\ttree[i].ch[1] = 0;\n\t}\n\tfor(int i = 1 ; i <= n ; i++){\n\t\tk[i] = read();\n\t\tlink(i,i + k[i]);\n\t}\n\tm = read();\n\tint xx,x,y;\n\twhile(m--){\n\t\txx = read();\n\t\tx = read();\n\t\tif(xx == 1)\n\t\t\tprintf(\"%d\\n\",Query(x+1));\n\t\telse if(xx == 2){\n\t\t\ty = read();\n\t\t\tlink(x + 1,x + y + 1);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u53e6\u5916\uff0cLCT\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(logN^2)\uff0c\u6240\u4ee5\u4e0d\u5f00\u6c27\u6c14\u4f18\u5316\u4e5f\u80fd\u8fc7\u3002  \n\u849f\u84bb\u7684\u8017\u65f6\u4e3a652ms\u3002\n",
        "postTime": 1528893304,
        "uid": 54879,
        "name": "Law_Aias",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "# \u66b4\u529b+lazy+\u5e95\u5c42\u4f18\u5316(\u5faa\u73af\u5c55\u5f00\uff0c\u6d88\u9664\u5206\u652f)+\u8bfb\u5165\u4f18\u5316+\u5b8c\u7f8eAC\n```cpp\n#include<cstdio>\n#include<cctype>\nusing namespace std;\nstruct _Main {\n\tint read() { //\u8bfb\u5165\u4f18\u5316\n\t\tchar t;\n\t\tint ans;\n\t\twhile(!isdigit(t=getchar()));\n\t\tans=t-'0';\n\t\twhile(isdigit(t=getchar())) {\n\t\t\tans*=10;\n\t\t\tans+=t-'0';\n\t\t}\n\t\treturn ans;\n\t}\n\n\tint inline abs(int a) { //\u53d6\u6d88\u5206\u652f\u7684\u7edd\u5bf9\u503c\n\t\treturn a>>31^((a>>31)+a);\n\t}\n\tint inline max (int a,int b) { //\u53d6\u6d88\u5206\u652f\u7684\u6700\u5927\u503c\n\t\treturn (a+b+abs(a-b))>>1;\n\t}\n\tint inline min (int a,int b) { //\u53d6\u6d88\u5206\u652f\u7684\u6700\u5c0f\u503c\n\t\treturn (a+b-abs(a-b))>>1;\n\t}\n\tint n,m;\n\tint k[200010];\n\tint t[200017];\n\tvoid fresh() {\n\t\tint i;\n\t\tgoal++;\n\t\tfor(i=lar; i>goal;) { //\u5faa\u73af\u5c55\u5f00\uff0c\u53ea\u66f4\u65b0\u9700\u8981\u66f4\u65b0\u7684\n\t\t\tif(i+k[i]>=n) {\n\t\t\t\tt[i]=1;\n\t\t\t} else {\n\t\t\t\tt[i]=1+t[i+k[i]];\n\t\t\t}\n\t\t\ti--;\n\t\t\tif(i+k[i]>=n) {\n\t\t\t\tt[i]=1;\n\t\t\t} else {\n\t\t\t\tt[i]=1+t[i+k[i]];\n\t\t\t}\n\t\t\ti--;\n\t\t\tif(i+k[i]>=n) {\n\t\t\t\tt[i]=1;\n\t\t\t} else {\n\t\t\t\tt[i]=1+t[i+k[i]];\n\t\t\t}\n\t\t\ti--;\n\t\t}\n\t\tgoal--;\n\t\tfor(; i>=goal; i--) { //\u6536\u5c3e\n\t\t\tif(i+k[i]>=n) {\n\t\t\t\tt[i]=1;\n\t\t\t} else {\n\t\t\t\tt[i]=1+t[i+k[i]];\n\t\t\t}\n\t\t}\n\t}\n\tint goal;//\u9700\u8981\u66f4\u65b0\u7684\u6700\u5c0f\u4f4d\u7f6e\n\tint lar;//\u9700\u8981\u66f4\u65b0\u7684\u6700\u5927\u4f4d\u7f6e\n\t_Main() {\n\t\tint i,j,l;\n\t\tn=read();\n\t\tfor(i=0; i<n; i++) {\n\t\t\tk[i]=read();\n\t\t}\n\t\tlar=n-1;\n\t\tgoal=0;\n\t\tfresh();//\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e00\u4e0a\u6765\u5237\u4e00\u904d\u6bd4\u4e0d\u5237\u8981\u5feb\n\t\tlar=-1;\n\t\tm=read();\n\t\tfor(i=0; i<m; i++) {\n\t\t\tl=read();\n\t\t\tj=read();\n\t\t\tif(l==1) {\n\t\t\t\tgoal=j;//\u66f4\u65b0\u5230\u9700\u8981\u67e5\u7684\u4f4d\u7f6e\u5373\u53ef\n\t\t\t\tfresh();\n\t\t\t\tlar=min(j-1,lar);\n\t\t\t\tprintf(\"%d\\n\",t[j]);\n\t\t\t} else {\n\t\t\t\tk[j]=read();\n\t\t\t\tl=t[j];\n\t\t\t\tif(j+k[j]>=n) {\n\t\t\t\t\tt[j]=1;\n\t\t\t\t} else {\n\t\t\t\t\tt[j]=1+t[j+k[j]];\n\t\t\t\t}\n\t\t\t\tif(l!=t[j])//\u53ea\u6709\u6b65\u6570\u6539\u53d8\u624d\u66f4\u65b0\u6700\u5927\u503c\n\t\t\t\t\tlar=max(lar,j-1);\n\t\t\t}\n\t\t}\n\t}\n}nb;\nint main() {}\n\n```\n",
        "postTime": 1555849313,
        "uid": 155661,
        "name": "\u5c71\u6c34\u4e00\u7a0b_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "\u633a\u597d\u7684\u4e00\u9053\u9898.\n\n\u9898\u610f\u5927\u7ea6\u662f\u7ed9\u4e00\u4e2a\u68ee\u6797(\u7b2c$i$\u4e2a\u88c5\u7f6e\u5f39\u529b\u7cfb\u6570\u4e3a$K_i$\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4ece\u88c5\u7f6e$i$\u5411\u88c5\u7f6e$i+K_i$\u8fde\u8fb9)\uff0c\u7136\u540e\u652f\u6301\u6539\u53d8\u67d0\u4e2a\u88c5\u7f6e\u7684\u5f39\u529b\u7cfb\u6570\uff0c\u67e5\u8be2\u67d0\u4e2a\u88c5\u7f6e\u7684\u6df1\u5ea6.\n\n\u67e5\u8be2\u67d0\u4e2a\u88c5\u7f6e\u7684\u6df1\u5ea6\u76f8\u5f53\u4e8e\u95ee\u67d0\u4e2a\u70b9\u5230\u5176\u6240\u5728\u6811\u6839\u8fd9\u6761\u94fe\u7684\u5927\u5c0f\uff0c\u6539\u53d8\u5f39\u529b\u7cfb\u6570\u5c31\u662f\u65ad\u8fb9\u518d\u8fde\u8fb9.\n\n\u770b\u4e86\u770b\uff0c\u89c9\u5f97\u677f\u5b50\u76f4\u63a5\u5957\u5c31\u597d\uff0c\u4e8e\u662f\u5199\u5b8c\u56db\u884c\u5934\u6587\u4ef6\u4e4b\u540e\u4f60\u7709\u5934\u4e00\u76b1~~\u770b\u4e86\u9898\u89e3~~\uff0c\u53d1\u73b0\u5e76\u4e0d\u9700\u8981\u677f\u5b50\n\n\u56e0\u4e3a\u8fd9\u68f5\u6811\u7684\u8fde\u8fb9\u662f\u5177\u6709\u65b9\u5411\u6027\u7684!\u800c\u4e00\u822c\u7684$LCT$\u7ef4\u62a4\u7684\u662f\u65e0\u5411\u7684\u68ee\u6797.\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u8fde\u3001\u65ad\u8fb9\u7684\u65f6\u5019\u6839\u672c\u4e0d\u9700\u8981\u8003\u8651\u6362\u6839\uff0c\u53ea\u9700\u8981\u65ad\u8fb9\u65f6$access\\& splay$\uff0c\u7136\u540e\u53cc\u5411\u65ad\u5f00\u5de6\u5b50\u6811(\u8fd9\u4e9b\u90fd\u662f\u6df1\u5ea6\u6bd4\u5b83\u5c0f\u7684\u70b9)\uff0c\u7136\u540e\u8fde\u8fb9\u65f6\u5411\u65b0\u7684\u7236\u4eb2\u8fde\u4e00\u6761\u865a\u8fb9\uff1b\u67e5\u8be2\u7684\u65f6\u5019\u4e5f\u4e0d\u9700\u8981\u628a\u94fe\u62ce\u51fa\u6765\uff0c\u53ea\u9700\u8981$access\\&splay$\uff0c\u7136\u540e\u76f4\u63a5\u8f93\u51fa\u8be5\u70b9$size$\u5373\u53ef.\n\n\u8fd8\u662f\u8981\u914d\u5408\u5bf9$LCT$\u7684\u611f\u6027\u7406\u89e3233\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define nroot(x) (ch[f[x]][0]==x||ch[f[x]][1]==x)\nusing namespace std;\nconst int N=5e5;\nint ch[N][2],size[N],f[N],n,m;\nvoid pushup(int x){size[x]=size[ch[x][0]]+size[ch[x][1]]+1;}\nvoid rotate(int x)\n{\n\tint y=f[x],z=f[y],wh=ch[y][1]==x,w=ch[x][wh^1];\n\tif(nroot(y))ch[z][ch[z][1]==y]=x;\n\tch[x][wh^1]=y,ch[y][wh]=w;\n\tf[w]=y,f[y]=x,f[x]=z;pushup(y);\n}\nvoid splay(int x)\n{\n\twhile(nroot(x))\n\t{\n\t\tint y=f[x],z=f[y];\n\t\tif(nroot(y))rotate((ch[z][1]==y)^(ch[y][1]==x)?x:y);\n\t\trotate(x);\n\t}\n\tpushup(x);\n}\nvoid link(int x,int y){f[x]=y;}\nvoid access(int x){for(int y=0;x;x=f[y=x])splay(x),ch[x][1]=y,pushup(x);}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tif(i+x<=n)link(i,i+x);//\u6ca1\u5f39\u98de\u624d\u8fde\u8fb9\uff0c\u4e0b\u540c\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint opt,x,y;\n\t\tscanf(\"%d%d\",&opt,&x);x++;\n\t\tif(opt==1){access(x),splay(x),printf(\"%d\\n\",size[x]);}\n\t\telse{scanf(\"%d\",&y),access(x),splay(x),ch[x][0]=f[ch[x][0]]=0;if(x+y<=n)link(x,x+y);}\n\t}\n}\n```",
        "postTime": 1555235750,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "[\u67e5\u770b\u539f\u9898\u8bf7\u6233\u8fd9\u91cc](https://www.luogu.org/problem/P3203)  \n\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b\u8fd9\u9053\u9898\u5982\u679c\u5148\u8f6c\u5316\u6210\u68ee\u6797\u518d\u5904\u7406\u7684\u8bdd\uff0c\u4e00\u5171\u6709\u5982\u4e0b\u51e0\u4e2a\u64cd\u4f5c\uff1a  \n - \u5220\u9664\u4e00\u6761\u8fb9\n - \u52a0\u5165\u4e00\u6761\u8fb9  \n - \u67e5\u8be2\u4e24\u70b9\u95f4\u8def\u5f84\u6743\u503c\u548c  \n \n\u8fd9\u4e0d\u662f\u4e00\u9053LCT\u7684\u9898\u5417\u2026\u2026  \n\u7136\u800cLCT\u4ee3\u7801\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\uff0c\u8fd9\u91cc\u6211\u4eec\u6765\u8bb2\u4e00\u4e0b\u5982\u4f55\u7528\u5206\u5757\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u3002  \n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u8fd9$n$\u4e2a\u88c5\u7f6e\u5206\u6210$\\sqrt n$\u5757\uff0c\u6bcf\u5757\u6709$\\sqrt n$\u4e2a\u5143\u7d20\u3002\u7136\u540e\uff0c\u6211\u4eec\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u5143\u7d20\u8df3\u51fata\u6240\u5728\u5757\u6240\u9700\u8981\u7684\u6b65\u6570\u4ee5\u53cata\u4f1a\u8df3\u5230\u54ea\u91cc\u3002\u7136\u540e\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\uff0c\u6211\u4eec\u5c31\u7528$O(n)$\u7684\u590d\u6742\u5ea6\u53bb\u4fee\u6539\u4e00\u4e2a\u5757\u4e2d\u6240\u6709\u5143\u7d20\u7684\u503c\uff1b\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2\uff0c\u6211\u4eec\u5c31\u4e00\u4e2a\u5757\u4e00\u4e2a\u5757\u6761\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(\\sqrt n)$  \ncode\uff1a  \n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define ll long long\n#define INF 0x7fffffff\n#define re register\n#define qwq printf(\"qwq\\n\");\n\nusing namespace std;\n\nint read()\n{\n\tregister int x = 0,f = 1;register char ch;\n\tch = getchar();\n\twhile(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n\twhile(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n\treturn x * f;\n}\n\nint n,m,x,y,z,a[200005],l[100005],r[100005],len,num,to[200005],cnt[200005],blog[200005];\n\nvoid clannad(int k)\n{\n\tfor(int i = r[k]; i >= l[k]; i--)\n\t{\n\t\tblog[i] = k;\n\t\tif(i + a[i] > r[k]) to[i] = i + a[i],cnt[i] = 1;\n\t\telse to[i] = to[i + a[i]],cnt[i] = cnt[i + a[i]] + 1;\n\t}\n}\n\nvoid change(int k)\n{\n\tint u = blog[k];\n\tfor(int i = k; i >= l[u]; i--)\n\t{\n\t\tif(i + a[i] > r[u]) to[i] = i + a[i],cnt[i] = 1;\n\t\telse to[i] = to[i + a[i]],cnt[i] = cnt[i + a[i]] + 1;\n\t}\n}\n\nint query(int k,int sum)\n{\n\tif(k > n) return sum;\n\treturn query(to[k],sum + cnt[k]);\n}\n\nint main()\n{\n\tn = read();\n\tfor(int i = 1; i <= n; i++) a[i] = read();\n\tlen = sqrt(n);\n\tnum = n / len;\n\tif(n % len) num++;\n\tfor(int i = 1; i <= num; i++) l[i] = (i - 1) * len + 1,r[i] = i * len;\n\tr[num] = n;\n\tfor(int i = 1; i <= num; i++) clannad(i);\n\tm = read();\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tx = read(); y = read() + 1;\n\t\tif(x == 1) printf(\"%d\\n\",query(y,0));\n\t\tif(x == 2)\n\t\t{\n\t\t\tz = read();\n\t\t\ta[y] = z;\n\t\t\tchange(y);\n\t\t}\n\t}\n    return 0;\n}\n```",
        "postTime": 1565752706,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "## \u4e3a\u4f55\u6ca1\u6709\u6307\u9488\n\n\u601d\u8def\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\n\n\u5efa\u70b9\u5efa\u5230n + 1\n\n\u5230\u4e86n + 1\u4ee3\u8868\u5f39\u98de\u4e86\n\n\u8f93\u5165\u5f39\u529b\u7cfb\u6570\u7684\u65f6\u5019\u5c31\u76f4\u63a5link\n\nLCT\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811siz\n\n1\u64cd\u4f5c\u6253\u901aj\u5230n + 1\u4e4b\u95f4\u7684\u91cd\u94fe\uff0c\u8f93\u51fan + 1\u7684siz - 1\uff0c\u4e5f\u5c31\u662f\u6df1\u5ea6\n\n2\u64cd\u4f5ccut\u6389\u539f\u6765\u7684\u8fb9\u518d\u5efa\u65b0\u8fb9\uff0c\u6ce8\u610f\u5224\u65ad\u662f\u4e0d\u662f\u8fde\u5230n + 1\u5373\u53ef\n\n\u7531\u4e8e\u5b83\u544a\u8bc9\u4f60\u7f16\u53f7\u4ece0~n - 1\uff0c\u6240\u4ee5\u628a\u7f16\u53f7\u5168\u4f53\u4e0a\u632a\u4e00\u4f4d\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <complex>\n#include <algorithm>\n#include <climits>\n#include <queue>\n#include <map>\n#include <set>\n#include <vector>\n#include <iomanip>\n#define A 1000010\n#define B 2010\n\nusing namespace std;\ntypedef long long ll;\nint tot, n, m, x, y, w[A];\nnamespace LCT {\n\tstruct node* null;\n\tstruct node {\n\t\tnode *ch[2], *fa;\n\t\tint siz, rev;\n\t\tbool whether() {\n\t\t\treturn fa->ch[1] == this;\n\t\t}\n\t\tbool isroot() {\n\t\t\treturn fa == null or (fa->ch[0] != this and fa->ch[1] != this);\n\t\t}\n\t\tvoid update() {\n\t\t\tsiz = 1;\n\t\t\tif (ch[0] != null) siz += ch[0]->siz;\n\t\t\tif (ch[1] != null) siz += ch[1]->siz;\n\t\t}\n\t\tvoid down() {\n\t\t\tif (this == null or !rev) return;\n\t\t\tswap(ch[0], ch[1]);\n\t\t\tch[0]->rev ^= 1;\n\t\t\tch[1]->rev ^= 1;\n\t\t\trev = 0;\n\t\t}\n\t\tvoid setnode(bool k, node *c) {\n\t\t\tdown();\n\t\t\tch[k] = c;\n\t\t\tif (c != null) c->fa = this;\n\t\t}\n\t}pool[A];\n\t#define ND node*\n\tvoid init() {\n\t\tnull = pool;\n\t\tnull->ch[0] = null->ch[1] = null->fa = null;\n\t\tnull->siz = null->rev = 0;\n\t}\n\tND newnode(int val) {\n\t\tND x = pool + ++tot;\n\t\tx->ch[0] = x->ch[1] = x->fa = null;\n\t\tx->siz = 1;\n\t\treturn x;\n\t}\n\tvoid rotate(ND x) {\n        node *fa = x->fa, *grand = fa->fa;\n        if (!fa->isroot()) grand->down();\n        fa->down(); x->down();\n        int dir = x->whether();\n        fa->setnode(dir, x->ch[dir ^ 1]);\n        if (fa->isroot()) x->fa = fa->fa;\n        else grand->setnode(fa->whether(), x);\n        x->setnode(dir ^ 1, fa);\n        fa->update(); x->update();\n    }\n    void fix(ND x) {\n        if (!x->isroot()) fix(x->fa);\n        x->down();\n    }\n    void splay(ND x) {\n        fix(x);\n        while (!x->isroot()) {\n            if (!x->fa->isroot())\n                x->whether() == x->fa->whether() ? rotate(x->fa) : rotate(x);\n        \trotate(x);\n        }\n        x->update();\n    }\n    ND access(ND x) {\n        ND y = null;\n        while (x != null) {\n            splay(x);\n            x->ch[1] = y;\n            x->update();\n            y = x;\n        \tx = x->fa;\n        }\n        return y;\n    }\n    void makeroot(ND x) {\n        access(x)->rev = 1;\n        splay(x);\n    }\n    void link(ND x, ND y) {\n        makeroot(x);\n        x->fa = y;\n    }\n    void cut(ND x, ND y) {\n        makeroot(x);\n        access(y);\n        splay(x);\n        if (x->ch[1] == y and x->ch[1]->ch[0] != null) return;\n        x->ch[1] = y->fa = null;\n    }\n    int ask(int x, int y) {\n    \tND a = pool + x;\n    \tND b = pool + y;\n    \tmakeroot(a);\n    \taccess(b);\n    \tsplay(b);\n    \treturn b->siz;\n    }\n}\n\nint main(int argc, char const *argv[]) {\n\tLCT::init();\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n + 1; i++) LCT::newnode(1);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &w[i]);\n\t\tLCT::ND a = LCT::pool + i;\n\t\tLCT::ND b = LCT::pool + i + w[i];\n\t\tLCT::ND c = LCT::pool + n + 1;\n\t\tif (i + w[i] <= n) LCT::link(a, b);\n\t\telse LCT::link(a, c);\n\t}\n\tscanf(\"%d\", &m);\n\twhile (m--) {\n\t\tint opt;\n\t\tscanf(\"%d\", &opt);\n\t\tif (opt == 1) {\n\t\t\tscanf(\"%d\", &x); x++;\n\t\t\tprintf(\"%d\\n\", LCT::ask(x, n + 1) - 1);\n\t\t}\n\t\telse {\n\t\t\tscanf(\"%d%d\", &x, &y); x++;\n\t\t\tLCT::ND a = LCT::pool + x;\n\t\t\tLCT::ND b = LCT::pool + x + w[x];\n\t\t\tLCT::ND c = LCT::pool + n + 1;\n\t\t\tLCT::ND d = LCT::pool + x + y;\n\t\t\tLCT::cut(a, x + w[x] <= n ? b : c);\n\t\t\tLCT::link(a, x + y <= n ? d : c);\n\t\t\tw[x] = y;\n\t\t}\n\t}\n}\n```",
        "postTime": 1546177857,
        "uid": 78064,
        "name": "\u826f\u6708\u6faa\u4e8c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9\u8fd9\u91cc->[\u6211\u7684blog](https://www.cnblogs.com/bztMinamoto/p/9325828.html)\n\n\u7528\u8fd9\u9898\u6765\u7ec3\u7ec3LCT\u5427\u2026\u2026\u8bdd\u8bf4wjz\u5927\u4f6c\u8bb2\u7684LCT\u51e0\u4e4e\u6ca1\u600e\u4e48\u542c\u61c2\u554aQAQ\u6211\u597d\u83dc\n\n\u8bdd\u8bf4\u5173\u4e8eLCT\uff0c\u8fd9\u4e24\u4f4d\u5927\u4f6c\u7684blog\u5f88\u4e0d\u9519\n\nhttp://www.cnblogs.com/zwfymqz/p/8972914.html#_label5\n\nhttp://www.cnblogs.com/flashhu/p/8324551.html\n\n \n\n\u9996\u5148\u6211\u4eec\u8003\u8651\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5411\u4ed6\u88ab\u5f39\u5230\u7684\u8282\u70b9\u8fde\u8fb9\u3002\u5373\u5bf9\u4e8e\u6240\u6709\u8282\u70b9\u5efa\u4e00\u68f5\u6811\uff0ci\u8282\u70b9\u7684\u7236\u4eb2\u4e3a\u4ecei\u88c5\u7f6e\u4f1a\u88ab\u5f39\u98de\u5230\u54ea\u4e00\u4e2a\u88c5\u7f6e\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u865a\u62df\u8282\u70b9n+1\uff0c\u8ba9\u6240\u6709\u88ab\u5f39\u98de\u5230\u5927\u4e8en\u7684\u70b9\u8fde\u5230n+1\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5230\u4e86n+1\u5c31\u610f\u5473\u7740\u5df2\u7ecf\u88ab\u5f39\u98de\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u5148\u5c06\u70b9\u4e0e\u539f\u5148\u7684\u8fde\u8fb9cut\uff0c\u518dlink\u5230\u65b0\u7684\u70b9\u4e0a\n\n\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u6211\u4eec\u4f9d\u6b21\u6267\u884cmakeroot(x),access(y),splay(y)\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u53d1\u73b0x\u7684\u6df1\u5ea6\u5373\u4e3a\u7b54\u6848\u3002\u800c\u56e0\u4e3a\u6b64\u65f6splay\u5df2\u7ecf\u662f\u4e00\u6761\u94fe\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662fsz[y]-1\uff08sz\u8868\u793a\u4ee5y\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff09\n```\n//minamoto\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#define N 200005\nusing namespace std;\n#define getc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<15,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<15],*p1=buf,*p2=buf;\ninline int read(){\n    #define num ch-'0'\n    char ch;bool flag=0;int res;\n    while(!isdigit(ch=getc()))\n    (ch=='-')&&(flag=true);\n    for(res=num;isdigit(ch=getc());res=res*10+num);\n    (flag)&&(res=-res);\n    #undef num\n    return res;\n}\nnamespace lct{\n\tint top,s[N],ch[N][2],fa[N],sz[N],v[N];bool rev[N];\n\tinline bool isroot(int x){return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;}\n\tinline void pushup(int x){sz[x]=sz[ch[x][0]]+sz[ch[x][1]]+1;}\n\tinline void pushdown(int x){if(rev[x])swap(ch[x][0],ch[x][1]),rev[ch[x][0]]^=1,rev[ch[x][1]]^=1,rev[x]^=1;}\n\tinline void rotate(int x){\n\t\tint y=fa[x],z=fa[y],d=(ch[y][1]==x);if(!isroot(y)) ch[z][ch[z][1]==y]=x;\n\t\tfa[x]=z,fa[y]=x;fa[ch[x][d^1]]=y,ch[y][d]=ch[x][d^1],ch[x][d^1]=y;pushup(y),pushup(x);\n\t}\n\tinline void splay(int x){\n\t\ts[top=1]=x;for(int i=x;!isroot(i);i=fa[i]) s[++top]=fa[i];for(int i=top;i>=1;--i) pushdown(s[i]);\n\t\tfor(int y=fa[x],z=fa[y];!isroot(x);y=fa[x],z=fa[y]){\n\t\t\tif(!isroot(y)) ((ch[z][1]==y)^(ch[y][1]==x))?rotate(x):rotate(y);rotate(x);\n\t\t}\n\t}\n\tinline void access(int x){int t=0;while(x){splay(x),ch[x][1]=t,pushup(x),t=x,x=fa[x];}}\n\tinline void makeroot(int x){access(x),splay(x),rev[x]^=1;}\n\tinline void split(int x,int y){makeroot(x),access(y),splay(y);}\n\tinline void link(int x,int y){makeroot(x);fa[x]=y;}\n\tinline void cut(int x,int y){makeroot(x);access(y),splay(y);fa[x]=ch[y][0]=0;pushup(y);}\n\tinline int query(int x,int y){makeroot(x),access(y),splay(y);return sz[y]-1;}\n}\nusing namespace lct;\nint main(){\n\t//freopen(\"testdata.in\",\"r\",stdin);\n\tint n,m;\n\tn=read();\n\tfor(int i=1;i<=n+1;++i) sz[i]=1;\n\tfor(int i=1;i<=n;++i){\n\t\tv[i]=read();\n\t\tif(i+v[i]<=n) link(i,i+v[i]);\n\t\telse link(i,n+1);\n\t}\n\tm=read();\n\twhile(m--){\n\t\tint opt=read(),i=read();++i;\n\t\tif(opt==1){\n\t\t\tprintf(\"%d\\n\",query(i,n+1));\n\t\t}\n\t\telse{\n\t\t\tint k=read();\n\t\t\tcut(i,i+v[i]<=n?i+v[i]:n+1);\n\t\t\tlink(i,i+k<=n?i+k:n+1);\n\t\t\tv[i]=k;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1531832212,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "\u611f\u89c9\u8fd8\u662f\u5f88\u663e\u7136\u5427\uff0c\u76f4\u63a5\u5c06\u8fd9\u4e2a(\u70b9)\u4e0e(\u70b9+\u52b2\u5ea6\u7cfb\u6570)\u7684\u70b9\u8fde\u63a5\u8d77\u6765\uff0c\n\n\u540c\u65f6\u8003\u8651\u5efa\u4e00\u4e2a\u7a7a\u7ed3\u70b9n+1(\u7f16\u53f70\u4e0d\u597d\u5904\u7406\uff0c\u4e8e\u662f\u6240\u6709\u7f16\u53f7\u5411\u4e0a\u5e73\u79fb\u4e00\u4e2a\u5355\u4f4d)\uff0c\u610f\u4e3a\u6240\u6709\u7684\u7ef5\u7f8a\u5230\u8fd9\u4e2a\u5730\u65b9\u5c31\u80fd\u591f\u88ab\u5f39\u98de\n\n\u5982\u679c\u8fde\u63a5\u7684\u65f6\u5019i+k<=n\u5c31\u8fde\u4e0d\u7136\u5c31\u548cn+1\u8fde\u63a5\u8d77\u6765\n\n\u6bcf\u4e00\u6b21\u8be2\u95ee\u64cd\u4f5c\uff0csetroot(x) access(n+1) splay(n+1),\u7b54\u6848\u5c31\u662fsiz[n+1]-1\n\n\u800c\u6bcf\u6b21\u8fdb\u884c\u4fee\u6539\u52b2\u5ea6\u7cfb\u6570\u7684\u65f6\u5019\uff0c\u4e0d\u53ea\u662f\u5149\u8981\u8fde\uff0c\u8fd8\u8981\u5c06\u539f\u6765\u7684\u8fb9\u5220\u6389\u3002 \u5c31\u53ef\u4ee5\u4e86(\u540c\u65f6\u8bb0\u5f97\u7f16\u53f7\u8fde\u63a5\u4e0d\u5927\u4e8en+1\u89c4\u5b9a)\n\n\u5c31\u8fd9\u6837\u641e\u5b9a\u4e86\uff0c\u5f00\u59cb\u75db\u82e6\u5730\u8c03\u8bd5\u7f62\uff01\n\ncheer!\n\n\n```cpp\n#include<bits/stdc++.h>\n#define zig(x) zigzag(x,1)\n#define zag(x) zigzag(x,2)\nusing namespace std;\nconst int maxn=200005;\nint n,m,rev[maxn],ls[maxn],rs[maxn],fa[maxn],jingdu[maxn],siz[maxn];\nbool isroot(int x) { return ls[fa[x]]!=x&&rs[fa[x]]!=x; }\nvoid putup(int x)\n{\n\tsiz[x]=siz[ls[x]]+siz[rs[x]]+1;\n}\nvoid zigzag(int x,int knd)\n{\n\tint y=fa[x],z=fa[y];\n\tif(!isroot(y))\n\t{\n\t\tif(ls[z]==y) ls[z]=x;\n\t\telse rs[z]=x;\n\t}\n\tfa[x]=z; fa[y]=x;\n\tif(knd==1)\n\t{\n\t\tls[y]=rs[x];\n\t\tfa[ls[y]]=y;\n\t\trs[x]=y;\n\t}\n\telse\n\t{\n\t\trs[y]=ls[x];\n\t\tfa[rs[y]]=y;\n\t\tls[x]=y;\n\t}\n\tputup(y); putup(x);\n}\nvoid putdowm(int x)\n{\n\tif(!rev[x]) return;\n\tswap(ls[x],rs[x]); rev[ls[x]]^=1; rev[rs[x]]^=1; \n\trev[x]=0;\n}\nint sta[maxn];\nvoid splay(int x)\n{\n\tint top=0; sta[++top]=x;\n\tfor(int i=x;!isroot(i);i=fa[i]) { sta[++top]=fa[i]; }\n\twhile(top) putdowm(sta[top--]);\n\twhile(!isroot(x))\n\t{\n\t\tint y=fa[x],z=fa[y];\n\t\tif(isroot(y))\n\t\t{\n\t\t\tif(ls[y]==x) zig(x);\n\t\t\telse zag(x);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(ls[z]==y)\n\t\t\t{\n\t\t\t\tif(ls[y]==x) { zig(y); zig(x); }\n\t\t\t\telse { zag(x); zig(x); }\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(rs[y]==x) { zag(y); zag(x); }\n\t\t\t\telse { zig(x); zag(x); }\n\t\t\t}\n\t\t}\n\t}\n}\nvoid acc(int x)\n{\n\tfor(int y=0;x;y=x,x=fa[x])\n\t{\n\t\tsplay(x);\n\t\trs[x]=y;\n\t\tputup(x);\n\t}\n}\nvoid setroot(int x)\n{\n\tacc(x); splay(x); rev[x]^=1;\n}\nvoid link(int a,int b)\n{\n\tsetroot(a); fa[a]=b;\n}\nvoid cut(int a,int b)\n{\n\tsetroot(a); acc(b); splay(b);\n\tls[b]=fa[a]=0;\n}\nint getroot(int a)\n{\n\tacc(a); splay(a);\n\twhile(ls[a]) a=ls[a];\n\treturn a;\n}\nint ans(int x)\n{\n\tsetroot(x); acc(n+1); splay(n+1); return siz[n+1]-1;\n}\nvoid change(int x,int y)\n{\n\tcut(x,min(jingdu[x]+x,n+1)); jingdu[x]=y; link(x,min(x+jingdu[x],n+1));\n}\n\nint main()\n{\n\tint x,y,z;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&jingdu[i]);\n\t\tlink(i,min(jingdu[i]+i,n+1));\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tif(x==1)\n\t\t{\n\t\t\tscanf(\"%d\",&y); ++y;\n\t\t\tprintf(\"%d\\n\",ans(y));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d\",&y,&z); ++y;\n\t\t\tchange(y,z);\n\t\t}\n\t}\n}\n```\n\n\u4e2a\u4eba\u535a\u5ba2\u5c0f\u7ad9:[Newuser\u5c0f\u7ad9](https://www.newuser.top)\u6b22\u8fce\u5149\u987e\uff01",
        "postTime": 1522859814,
        "uid": 55343,
        "name": "Newuser",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "\u4e00\u9053LCT\u5c31\u597d\u597d\u6253\u4e2a\u6a21\u677f\n\n\u64cd\u4f5c\u5f88\u5c11:\u8fde\u63a5\u548c\u5220\u8fb9\u3002\n\n\u628an + 1 \u4f5c\u4e3a\u6700\u540e\u7684\u6811\u6839\u5c31\u53ef\u4ee5\u5168\u90e8\u5904\u7406\u4e86\n\n\nC++\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#define F(x) tree[x].fa\n#define LC(x) tree[x].child[0]\n#define RC(x) tree[x].child[1]\n#define REV(x) tree[x].rev\n#define SIZE(x) tree[x].size\n#define Size 300010\nusing namespace std;\ninline int read(){\n    int sum=0,fg=1;char c=getchar();\n    while(c<'0' || c>'9'){if(c=='-')fg=-1;c=getchar();}\n    while(c>='0' && c<='9'){sum=sum*10+c-'0';c=getchar();}\n    return sum*fg;\n}\nstruct lct{\n    int fa,child[2],rev,size;\n}tree[Size];\nint fa[Size];\nstruct link_cut_tree{\n    int stack[Size];\n    inline bool isroot(int x){\n        return LC(F(x))!=x && RC(F(x))!=x;\n    }\n    inline void pushup(int x){\n        SIZE(x)=SIZE(LC(x))+SIZE(RC(x))+1;\n    }\n    inline void pushdown(int x){\n        if(!REV(x))return;\n        REV(x)^=1;REV(LC(x))^=1;REV(RC(x))^=1;\n        swap(LC(x),RC(x));\n    }\n    inline void rotate(int x){\n        int A=F(x),B=F(A);bool w=(RC(A)==x);\n        if(!isroot(A)){\n            if(LC(B)==A)LC(B)=x;\n            else if(RC(B)==A)RC(B)=x;\n        }\n        F(tree[x].child[w^1])=A;F(A)=x;F(x)=B;\n        tree[A].child[w]=tree[x].child[w^1];tree[x].child[w^1]=A;\n        pushup(A);pushup(x);\n    }\n    void Pushdown(int x){\n        if(!isroot(x))Pushdown(F(x));\n        pushdown(x);\n    }\n    inline void splay(int x){\n        Pushdown(x); \n        while(!isroot(x)){\n            if(!isroot(F(x)))rotate(x);\n            rotate(x);\n        }\n    }\n    inline void access(int x){\n        for(int i=0;x;x=F(x)){splay(x);RC(x)=i;i=x;pushup(x);}\n    }\n    inline void reverse(int x){\n        access(x);splay(x);REV(x)^=1;\n    }\n    inline void link(int x,int y){\n        reverse(x);F(x)=y;\n    }\n    inline void cut(int x,int y){\n        reverse(x);access(y);splay(y);F(x)=LC(y)=0;\n    }\n}LCT; \nint main(){\n    int n=read();\n    for(int i=1;i<=n;i++){\n        int k=read();\n        SIZE(i)=1;fa[i]=F(i)=min(n+1,i+k);\n    }\n    SIZE(n+1)=1;\n    int m=read();\n    while(m--){\n        int tp=read();\n        if(tp==1){\n            int x=read();x++;\n            LCT.reverse(n+1);LCT.access(x);LCT.splay(x);\n            printf(\"%d\\n\",SIZE(LC(x)));\n        }\n        else{\n            int x=read(),y=read();x++;\n            LCT.cut(x,fa[x]);LCT.link(x,min(n+1,x+y));\n            fa[x]=min(n+1,x+y);\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1488787161,
        "uid": 19623,
        "name": "Jason_Yvan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]BOUNCE \u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "### Description\n\n\u7ed9 $n$ \u4e2a\u70b9\u4ee5\u53ca\u5b83\u4eec\u7684\u5f39\u529b\u7cfb\u6570 $k_i$ \uff0c\u542b\u4e49\u4e3a \u53ef\u4ee5\u5f39\u5230 $i + k_i$ \u7684\u4f4d\u7f6e\u3002\n\n\u652f\u6301\u4e24\u4e2a\u4e1c\u897f\uff0c\u4fee\u6539\u4e00\u4e2a\u70b9\u7684\u5f39\u529b\u7cfb\u6570\uff1b\u6c42\u4e00\u4e2a\u70b9\u8981\u5f39\u591a\u5c11\u6b21\u5f39\u51fa $n$ \n\n### Solution\n\n\u7528 LCT \u505a\u3002\u5f39\u529b\u7cfb\u6570\u662f $k_i$ \u53ef\u4ee5\u770b\u4f5c\u662f $i$ \u548c $i+k_i$ \u8fde\u4e86\u4e00\u6761\u8fb9\u3002\u5982\u679c\u5f39\u51fa\u53bb\u4e86\u5c31\u4e0d\u59a8\u8bbe\u548c $0$ \u8fde\u4e00\u6761\u8fb9\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u5148\u628a\u539f\u6765\u7684\u8fb9\u5220\u9664\uff0c\u4fee\u6539 k \u6570\u7ec4\uff0c\u518d\u8fde\u4e0a\u65b0\u8fb9\n\n\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5b50\u6811\u5927\u5c0f siz \uff08\u8fd9\u91cc\u662f splay \u4e0a\u7684 siz\uff0c\u4e0d\u662f\u539f\u6811\u4e0a\u7684\uff09\uff0c\u7136\u540e\u8be2\u95ee\u5c31\u76f8\u5f53\u4e8e\u5f53\u524d\u8fd9\u4e2a\u70b9 $u$ \u5230 $0$ \u8fd9\u6761\u94fe\u4e0a\u6709\u51e0\u4e2a\u70b9\u3002\u6240\u4ee5\u5c31 split \u51fa\u6765\u8fd9\u6761\u94fe\u7136\u540e\u8f93\u51fa siz - 1 \u5c31\u884c\u4e86\uff08\u6ce8\u610f\u8981\u51cf $1$ \u56e0\u4e3a\u95ee\u7684\u662f\u5f39\u591a\u5c11\u6b21\uff09\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\uff08\u6ce8\u610f\u8f93\u5165\u7684\u65f6\u5019\u8981\u52a0 1\uff09\n\n### Code\n\n[\u770b\u4ee3\u7801\u6233\u8fd9\u91cc](https://www.cnblogs.com/acfunction/p/10256867.html)\n\n",
        "postTime": 1547205860,
        "uid": 54745,
        "name": "Gypsophila",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "### [\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/yzhang-rp-inf/p/10202665.html)\n\n### [\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P3203)\n\n### \u8fd9\u9898\u7528Link-Cut-Tree\u89e3\u51b3\uff0c[Link-Cut-Tree\u8be6\u89e3](https://www.cnblogs.com/yzhang-rp-inf/p/10201857.html)\n\n\u9884\u5904\u7406\uff1a\u4ece\u4e00\u4e2a\u70b9\u5f39\u5230\u53e6\u4e00\u4e2a\u70b9\u5c31\u5728lct\u91cc\u4ece$i$\u8fde\u8fb9\u5230$i+k_i$\uff0c\u5982\u679c\u7ef5\u7f8a\u88ab\u5f39\u98de\u4e86\u5c31\u4ece$i$\u8fde\u8fb9\u5230$n+1$(\u4e00\u4e2a\u865a\u62df\u70b9\uff0c\u65b9\u4fbf\u7edf\u8ba1)\n\n\u64cd\u4f5c1\uff1asplit\uff08x\uff0cn+1\uff09\uff0c\u628ax\u5230n+1\u8def\u5f84\u4e0a\u7684\u70b9\u653e\u5230\u540c\u4e00\u4e2aSplay\u4e2d\uff0c\u7b54\u6848\u5c31\u662fT.size[n+1]-1\n\n\u64cd\u4f5c2\uff1a\u5148\u628a$i$\u5230$i+oldk$\u7684\u8fb9\u5220\u9664\n\n\u5982\u679c$i+newk<=n$\uff0c\u4ece$i$\u8fde\u8fb9\u5230$i+newk$\uff0c\u5426\u5219\u5c31\u4ece$i$\u8fde\u8fb9\u5230$n+1$\n\n### \u6ce8\u610f\uff1a\u7f16\u53f7\u662f0~n-1\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5199\u7801\uff0c\u628a\u6240\u6709\u7684\u7f16\u53f7\u52a01\n\n```cpp\n#include <bits/stdc++.h>\n#define N 200005\n#define getchar nc\nusing namespace std;\ninline char nc(){\n    static char buf[100000],*p1=buf,*p2=buf; \n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++; \n}\ninline int read()\n{\n    register int x=0,f=1;register char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    return x*f;\n}\ninline void write(register int x)\n{\n    if(!x)putchar('0');if(x<0)x=-x,putchar('-');\n    static int sta[20];register int tot=0;\n    while(x)sta[tot++]=x%10,x/=10;\n    while(tot)putchar(sta[--tot]+48);\n}\ninline void Swap(register int &a,register int &b)\n{\n    a^=b^=a^=b;\n}\nstruct Link_Cut_Tree{\n    int c[N][2],fa[N],top,q[N],rev[N],size[N];\n    inline void pushup(register int x)\n    {\n        size[x]=size[c[x][0]]+size[c[x][1]]+1;\n    }\n    inline void pushdown(register int x){\n        if(rev[x])\n        {\n            register int l=c[x][0],r=c[x][1];\n            rev[l]^=1,rev[r]^=1,rev[x]^=1;\n            Swap(c[x][0],c[x][1]);\n        }\n    }\n    inline bool isroot(register int x)\n    {\n        return c[fa[x]][0]!=x&&c[fa[x]][1]!=x;\n    }\n    inline void rotate(register int x)\n    {\n        int y=fa[x],z=fa[y],l,r;\n        l=c[y][0]==x?0:1;\n        r=l^1;\n        if(!isroot(y))\n            c[z][c[z][0]==y?0:1]=x;\n        fa[x]=z;\n        fa[y]=x;\n        fa[c[x][r]]=y;\n        c[y][l]=c[x][r];\n        c[x][r]=y;\n        pushup(y),pushup(x);\n    }\n    inline void splay(register int x)\n    {\n        top=1;\n        q[top]=x;\n        for(register int i=x;!isroot(i);i=fa[i])\n            q[++top]=fa[i];\n        for(register int i=top;i;--i)\n            pushdown(q[i]);\n        while(!isroot(x))\n        {\n            int y=fa[x],z=fa[y];\n            if(!isroot(y))\n                rotate((c[y][0]==x)^(c[z][0]==y)?(x):(y));\n            rotate(x);\n        }\n    }\n    inline void access(register int x)\n    {\n        for(register int t=0;x;t=x,x=fa[x])\n        {\n            splay(x);\n            c[x][1]=t;\n            pushup(x);\t\n        }\n    }\n    inline void makeroot(register int x)\n    {\n        access(x);\n        splay(x);\n        rev[x]^=1;\n    }\n    inline void split(register int x,register int y)\n    {\n        makeroot(x);\n        access(y);\n        splay(y);\n    }\n    inline void cut(register int x,register int y)\n    {\n        split(x,y);\n        if(c[y][0]==x)\n        {\n            c[y][0]=0;\n            fa[x]=0;\n        }\n    }\n    inline void link(register int x,register int y)\n    {\n        makeroot(x);\n        fa[x]=y;\n    }\n}T;\nint n,m,val[N];\nint main()\n{\n    n=read();\n    for(register int i=1;i<=n;++i)\n    {\n        val[i]=read();\n        T.link(i,i+val[i]<=n?(i+val[i]):(n+1));\n    }\n    m=read();\n    while(m--)\n    {\n        int opt=read();\n        if(opt==1)\n        {\n            int x=read()+1;\n            T.split(x,n+1);\n            write(T.size[n+1]-1),puts(\"\");\n        }\n        else\n        {\n            int x=read()+1,y=read();\n            T.cut(x,x+val[x]<=n?(x+val[x]):(n+1));\n            val[x]=y;\n            T.link(x,x+val[x]<=n?(x+val[x]):(n+1));\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1546240618,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "\u5206\u5757\u4ee5\u540e\u5c31\u5f88\u7b80\u5355\u4e86,\u53ef\u4ee5\u76f4\u63a5\u641e\u3002\n\n\u9996\u5148\u9884\u5904\u7406,\u6c42\u51fa\u4e00\u4e2a $get_i$ \u548c\u76f8\u5bf9\u5e94\u7684 $pace_i$ \u4ee3\u8868\u4ece $i$ \u70b9\u4e00\u76f4\u5f39\u5230\u4e0b\u4e00\u4e2a\u5757\u7684\u5730\u65b9\u548c\u6b65\u6570\u3002\u90a3\u6211\u4eec\u67e5\u8be2\u7684\u65f6\u5019\u6bcf\u4e00\u6b21\u90fd\u662f\u53ef\u4ee5\u5728 $\\sqrt{N}$ \u7684\u6b21\u6570\u5185\u5f39\u5230\u7ec8\u70b9\u7684\u3002\n\n\u5173\u4e8e\u4fee\u6539,\u5c31\u662f\u5757\u91cc\u9762\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u70b9 $j$ \u4f1a\u5f39\u5230 $i$ \u8fd9\u91cc,\u501f\u52a9 $i$ \u6765\u5f39\u5230\u4e0b\u4e00\u4e2a\u5757\u3002\u8fd9\u6837\u5b50\u5c31\u4fdd\u8bc1\u4e86\u4fee\u6539\u5728\u6574\u4e2a\u5757\u91cc\u9762,\u64cd\u4f5c\u540c\u6837\u662f $\\sqrt{N}$ \u7684\u3002\n\n\u7136\u540e\u6ce8\u610f\u5f39\u51fa\u4e86\u4ee5\u540e\u8981\u5224\u4e00\u4e0b\u8fb9\u754c,\u4e0d\u7136\u4f1a\u6ea2\u51fa\u5bfc\u81f4\u5f88\u591a\u795e\u5947\u7684\u4e1c\u897f\u3002\n\n```pascal\n// luogu-judger-enable-o2\nvar\n    bounce,get,pace:array [-1..200007] of longint;\n    node_num,block_num,mode,ans,l,k,i,j,n,m:longint;\n\nfunction Locate(node:longint):longint;begin exit((node-1) div node_num+1); end;\n\nprocedure Ready;\nbegin\n    read(n); node_num:=trunc(sqrt(n)); block_num:=Locate(n);\n    for i := 1 to n do read(bounce[i]); read(m);\n\n    for i:=n downto 1 do \n    begin\n        l:=Locate(i)*node_num;\n        if (i+bounce[i]>n) then begin get[i]:=0; pace[i]:=1; continue; end;\n        if (i+bounce[i]>l) then begin get[i]:=i+bounce[i]; pace[i]:=1; end else \n        begin get[i]:=get[i+bounce[i]]; pace[i]:=pace[i+bounce[i]]+1; end;\n    end;\nend;\n\nbegin\n    Ready;\n    for i:=1 to m do \n    begin \n    \tread(mode);\n        if mode=1 then \n        begin\n        \tans:=0; read(l); inc(l); j:=l;\n            while j>0 do begin inc(ans,pace[j]); j:=get[j]; end;\n            writeln(ans);\n        end else \n        begin\n            read(l,k); inc(l);  bounce[l] := k;\n            for j:=l downto(Locate(l)-1)*node_num+1 do \n            begin\n            \tif (j+bounce[j]>n) then begin get[j]:=0; pace[j]:=1; continue; end;\n                if (j+bounce[j]>Locate(l)*node_num) then begin get[j]:=j+bounce[j]; pace[j]:=1; end else \n                begin get[j]:=get[j+bounce[j]]; pace[j]:=pace[j+bounce[j]]+1; end;\n            end;\n        end;\n    end;\nend.\n```",
        "postTime": 1538781504,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "# \u4e0b\u9762\u7684\u5927\u4f6c\u505a\u6cd5\u6ca1\u770b\u61c2\uff0c\u6211\u5c31\u8bf4\u51e0\u79cd\u65b9\u6cd5 \u672c\u9898\u4e00\u5751\uff1a\u88c5\u7f6e\u4ece0\u5f00\u59cb\uff08\u5751\u554a\uff09\n\n####  1.\t\u5148\u8bf4\u66b4\u529b\uff0c\u4e0d\u8981\u95ee\u6211\u65b9\u6cd5\uff0c\u7528O2\u80fd\u6c34\u523040\u5206#### \n```\n#include <cstdio>\nint n,x,y,ans,s,z;\nint a[220000];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)scanf(\"%d\",&a[i]);\n\tscanf(\"%d\",&s);\n\tfor(int i=1;i<=s;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(x==1){\n\t\t\tans=0;\n\t\t\twhile(y<n){\n\t\t\t\t++ans;\n\t\t\t\ty+=a[y];\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}else{\n\t\t\tscanf(\"%d\",&z);\n\t\t\ta[y]=z;\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n####  2.\u518d\u8bf4\u4e00\u4e2a\u80fd\u6c34\u523070\u5206\uff08O2\uff09\uff0c\u73b0\u5c06\u6574\u4e2a\u6570\u5217\u5168\u90e8\u505a\u4e00\u904d\u5b58\u5230b\u6570\u7ec4\u91cc\uff0c\u67e5\u8be2\u64cd\u4f5c\u4e00\u641c\u5c31\u80fd\u627e\u5230\u7b54\u6848\uff0c\u4f46\u4fee\u6539\u6709\u70b9\u9ebb\u70e6\u9700\u8981\u5c06\u4fee\u6539\u70b9\u4e4b\u524d\u6240\u6709\u5237\u65b0\u4e00\u8fb9\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a n+n*n ,\u6240\u4ee5\u7206\u70b8\n```\n#include <cstdio>\n#include <cstring>\nint n,x,y,s,z;\nint a[220000],b[220000];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)scanf(\"%d\",&a[i]);\n\t\n\tfor(int i=n-1;i>=0;i--){\n\t\tif(a[i]+i>=n){\n\t\t\tb[i]=1;\n\t\t\tcontinue;\n\t\t}else b[i]=b[a[i]+i]+1;\n\t}\n\t\n\tscanf(\"%d\",&s);\n\tfor(int i=1;i<=s;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(x==1)printf(\"%d\\n\",b[y]);\n\t\telse{\n\t\t\tscanf(\"%d\",&z);\n\t\t\ta[y]=z;\n\t\t\tfor(int k=y;k>=0;k--){\n\t\t\t\tif(a[k]+k>=n){\n\t\t\t\t\tb[k]=1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}else b[k]=b[a[k]+k]+1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\n\n```\n## 3.\u6b63\u89e3\u767b\u573a \u5c06\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u8fdb\u884c\u6539\u8fdb\u2014\u2014\u5206\u6bb5\n#### \u73b0\u5c06\u6bcf\u6bb5\u5747\u5300\u65ad\u5f00\u957f\u5ea6\u4e3asqrt(n)\uff0c\u518d\u5c06\u7b2ci\u6bb5\u8d77\u70b9\u548c\u7ec8\u70b9\u5b58\u5230l[i]\u548cr[i]\u91cc\n####  \u7136\u540e\u5c06\u6bcf\u6bb5\u6309\u7167\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u6c42\u51fa\u6bcf\u6bb5\u7b54\u6848\n####  \u4ecb\u7ecd\u4e00\u4e0bcut(l,j)\u8868\u793a\u4ecej\u5230l\u6c42\u503c\uff08\u6ce8\u610f\u4e00\u5b9a\u8981\u5012\u7740\u505a\uff09\uff0c\u5982\u679c\u6709\u6570\u8df3\u51fa\u672c\u6bb5\u5c31\u5c06\u4ed6\u7b54\u6848\u503c\u7ed91\uff0c\u5c06\u5176\u7236\u8282\u70b9\u7ed9\u5230\u4ed6\u5bf9\u5e94\u8df3\u5230\u7684\u4f4d\u7f6e\uff0c\u5426\u5219\u5728\u672c\u6bb5\u91cc\u540c2\n#### \u6700\u540e\u52a0\u7b54\u6848\u53ea\u9700\u5c06\u672c\u70b9\u52a0\u4e0a\u6240\u5230\u8282\u70b9\u7684\u7b54\u6848\u6c42\u548c\u5373\u53ef\uff0c\u4fee\u6539\u53ea\u9700\u66f4\u6539\u672c\u6bb5\u5373\u53ef\uff0c\u590d\u6742\u5ea6\u4e3a log2n+long2n \u5373\u53ef\uff0c\u867d\u7136\u67e5\u8be2\u590d\u6742\u5ea6\u589e\u52a0\u4f46\u6574\u4e2a\u590d\u6742\u5ea6\u5747\u644a\u4e0b\u6765\u6c42\u5c0f\u4e86\u5f88\u591a\n\n```\n#include <cstdio>\n#include <cmath>\nconst int N=220000;\nconst int N1=500;\nint n,sn,m,x,y,z,ans,k;\nint a[N],b[N],f[N],l[N1],r[N1];\nvoid cut(int x,int y){\n\tfor(int i=y;i>=x;i--){\n\t\tif(i+a[i]>y){\n\t\t\tb[i]=1;\n\t\t\tf[i]=a[i]+i;\n\t\t}else{\n\t\t\tb[i]=b[a[i]+i]+1;\n\t\t\tf[i]=f[a[i]+i];\n\t\t}\n\t}\n}\nint main(){\n\t\n\tscanf(\"%d\",&n);\n\tsn=sqrt(n);\n\tfor(int i=0;i<n;i++)scanf(\"%d\",&a[i]);\n\t\n\tfor(int i=1;i<sn;i++){\n\t\tl[i]=sn*(i-1);\n\t\tr[i]=sn*i-1;\n\t}\n\tl[sn]=r[sn-1]+1;\n\tr[sn]=n-1;\n\tfor(int i=1;i<=sn;i++)cut(l[i],r[i]);\n\t\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\t\n\t\tif(x==1){\n\t\t\tans=0;\n\t\t\t\n\t\t\twhile(y<n){\n\t\t\t\tans+=b[y];\n\t\t\t\ty=f[y];\n\t\t\t}\n\t\t\t\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}else{\n\t\t\tscanf(\"%d\",&z);\n\t\t\ta[y]=z;\n            if((y+1)%sn==0)k=(y+1)/sn;\n            else k=(y+1)/sn+1;\n            cut(l[k],r[k]);\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1519304640,
        "uid": 53333,
        "name": "liuqy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "# \u6b63\u9898\n\u8bc4\u6d4b\u8bb0\u5f55:https://www.luogu.org/recordnew/lists?uid=52918&pid=P3203\n\n-----\n\n## \u9898\u76ee\u5927\u610f\n$n$\u4e2a\u88c5\u7f6e\u3002\u5230\u7b2c$i$\u4e2a\u88c5\u7f6e\u4f1a\u88ab\u5f80\u524d\u5f39$a_i$\u4e2a\u3002\n\u4e24\u79cd\u64cd\u4f5c\n\u4fee\u6539$a_i$\u548c\u8be2\u95ee\u4ece$i$\u51fa\u53d1\u8981\u591a\u5c11\u6b21\u5f39\u5c04\u53ef\u4ee5\u5f39\u51fa\u53bb\u3002\n\n------\n\n## \u89e3\u9898\u601d\u8def\n\u5206\u5757\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u7ef4\u62a4\u8981\u591a\u5c11\u6b65\u5f39\u51fa\u8be5\u5757\u548c\u5f39\u51fa\u53bb\u540e\u5f39\u5230\u54ea\u91cc\u3002\n\u8be2\u95ee\u5c31\u76f4\u63a5\u6839\u636e\u4e24\u4e2a\u6570\u636e\uff0c\u4fee\u6539\u5c31\u76f4\u63a5\u91cd\u6784\u6574\u4e2a\u5757\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6:$O(n\\sqrt n)$\n\n--------\n\n## code\n```cpp\n#include<cstdio>\n#include<cmath>\n#define N 200010\n#define T 500\nusing namespace std;\nint n,m,x,t,a[N],L[T],R[T],step[N],to[N],pos[N];\nvoid pre_work()//\u9884\u5904\u7406\n{\n\tfor(int i=1;i<=t;i++)//\u5757\u8fb9\u754c\n\t{\n\t\tL[i]=(i-1)*t+1;\n\t\tR[i]=i*t;\n\t}\n\tif(R[t]!=n) t++,L[t]=R[t-1]+1,R[t]=n;\n\tfor(int i=1;i<=t;i++)\n\t  for(int j=R[i];j>=L[i];j--)\n\t  {\n\t      if(j+a[j]<=R[i]) step[j]=step[j+a[j]]+1,to[j]=to[j+a[j]];\n\t      else step[j]=1,to[j]=j+a[j];\n\t      pos[j]=i;\n\t  }//\u521d\u59cb\u6570\u636e\n}\nint ask(int x)//\u8be2\u95ee\n{\n\tint ans=0;\n\twhile(x<=n)\n\t  ans+=step[x],x=to[x];\n\treturn ans;\n}\nvoid change(int i)//\u91cd\u6784\u5757\n{\n\tfor(int j=R[i];j>=L[i];j--)\n\t  if(j+a[j]<=R[i]) step[j]=step[j+a[j]]+1,to[j]=to[j+a[j]];\n\t  else step[j]=1,to[j]=j+a[j];\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tt=sqrt(n);\n\tfor(int i=1;i<=n;i++)\n\t  scanf(\"%d\",&a[i]);\n\tpre_work();\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tif(x==1)\n\t\t{\n\t\t\tscanf(\"%d\",&x);x++;\n\t\t\tprintf(\"%d\\n\",ask(x));\n\t\t}\n\t\telse{\n\t\t\tscanf(\"%d\",&x);x++;\n\t\t\tscanf(\"%d\",&a[x]);\n\t\t\tchange(pos[x]);\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1544187464,
        "uid": 52918,
        "name": "QuantAsk",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "#### \u8fd9\u9898\u6570\u636e\u6709\u70b9\u6076\u5fc3\uff0c\u5bfc\u81f4\u6211\u8fdeT\u4e86\u51e0\u4e07\u6b21\uff0c\u6709\u4e00\u4e2a\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7684On\u9884\u5904\u7406\u88ab\u8feb\u88ab\u6211\u6539\u6210\u6839\u53f7n\uff0c\u7ed3\u679c\u5c31A\u4e86\uff1f\u6211\u8fd9\u5c31\u6709\u70b9\u641e\u4e0d\u61c2\u4e86\u3002\n\n#### \u8fd9\u9898\u6211\u7684\u601d\u8def\u662f\u5206\u5757\u3002\u5c06\u6bcf\u4e2a\u6570\u5f39\u51fa\u8fd9\u4e2a\u6570\u6240\u5904\u7684\u5757\u7684\u6b21\u6570\u8bb0\u5f55\u4e0b\u6765\uff0c\u5e76\u8bb0\u5f55\u6b64\u6570\u5f39\u51fa\u6b64\u5757\u540e\u6307\u5411\u7684\u5750\u6807\u3002\u6bcf\u4e00\u6b21update\uff0c\u6211\u4eec\u5c31\u66f4\u65b0\u6b64\u6570\u6240\u5904\u7684\u5757\u5373\u53ef\u3002\u6700\u540e\u626b\u63cf\u4e5f\u5f88\u65b9\u4fbf\uff0c\u5c06\u5f39\u5230\u7684\u6570\u7684\u6b21\u6570\u4e4b\u548c\u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n#### \u867d\u7136\u6709\u70b9\u5361\u5e38\uff08\u4e0d\u77e5\u9053\u600e\u4e48\u5361\u7684\uff09\uff0c\u4f46\u662f\u5728\u6211\u7684\u52aa\u529b\u4e4b\u4e0b\u4e5f\u5f88\u5feb\u89e3\u51b3\u4e86\u54c7\u5494\u5494\u3002\n\n#### \u8be6\u7ec6\u89e3\u7b54\u8bf7\u770b\u4ee3\u7801\n\n```c\n#include<bits/stdc++.h>\n#define RR register\n#define M 200005\nusing namespace std;\nint S;//\u5757\u5927\u5c0f \nint n,m;\nint a,b,c;\nvoid Rd(int &res) {//\u5feb\u8bfb \n\tchar c;\n\tint flag=1;\n\tres=0;\n\twhile(c=getchar(),c<48) {\n\t\tif(c=='-')flag=-1;\n\t}\n\tdo res=(res<<3)+(res<<1)+(c^48);\n\twhile(c=getchar(),c>=48);\n\tres*=flag;\n}\nvoid Pdfs(int n) {//\u8f93\u51fa\u6302 \n\tif(n==0)return;\n\tPdfs(n/10);\n\tputchar(n%10^48);\n}\nvoid Print(int n) {//\u8f93\u51fa\u6302 \n\tif(n<0) {\n\t\tputchar('-');\n\t\tn=-n;\n\t}\n\tif(n==0)putchar('0');\n\telse Pdfs(n);\n}\nstruct node {\n\tint L,R;\n} pos[M];//\u6bcf\u4e2a\u5757\u7684\u5de6\u53f3\u6307\u9488 \nstruct dot {\n\tint val,cnt,to;\n} A[M];//\u4e3b\u6570\u7ec4\uff0c\u8bb0\u5f55\u503c\uff0c\u5f39\u51e0\u6b21\u51fa\u6b64\u5757\uff0c\u5230\u8fbe\u7684\u70b9 \nvoid Init(int n) {\n//\tfor(int i=1;i<=n;i++)pos[i/S]=((node){max(1,i/S*S),min(n,(i/S+1)*S-1)});\n//\u4e0a\u9762\u7684\u5c31\u662f\u6211\u8bf4\u7684\u9884\u5904\u7406On\uff0c\u83ab\u540d\u5176\u5999\u56e0\u6b64T \n\n\tfor(RR int i=0;i<=S+1;i++)pos[i]=((node){max(1,i*S),min(n,(i+1)*S-1)});\n\t//\u5b9a\u4e49\u6bcf\u4e2a\u5757\u7684\u8fb9\u754c\uff0c\u4ecei*S\u5230(i+1)*S-1\uff0c\u5982\u679c-1\u6ca1\u52a0\u4f1a\u5bfc\u81f4wa\u6216\u8005T \n\treturn;\n}\nvoid update(int b,int c,bool flag) {//\u66f4\u6539\u4e00\u4e2a\u6570\uff0c\u66f4\u65b0\u8fd9\u4e2a\u6570\u6240\u5904\u7684\u5757 \n\tint k=b/S;\n\tint R0=pos[k].R,L0=pos[k].L;//\u8fb9\u754c \n\tA[b].val=c;//\u66f4\u65b0\u503c \n\tfor(RR int i=R0; i>=L0; i--) {//\u4ece\u540e\u5f80\u524d\u66f4\u65b0 \n\t\tint v=A[i].val;\n\t\tif(i+v<=R0)A[i]=((dot) {A[i].val,A[i+v].cnt+1,A[i+v].to});\n\t\t//\u5982\u679c\u6ca1\u6709\u5f39\u51fa\u6b64\u5757\uff0c\u5219\u6307\u5411\u6b64\u5757\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5f39\u5c04\u5668 \n\t\telse A[i].cnt=1,A[i].to=i+A[i].val;\n\t\t//\u5f39\u51fa\u6b64\u5feb\uff0c\u66f4\u65b0 \n\t}\n\treturn;\n}\ninline int query(int num) {\n\tint ans=0,ka=num/S;\n\twhile(ka<=n/S+1&&num<=n) {\n\t\tans+=A[num].cnt;\n\t\tnum=A[num].to;\n\t\tka=num/S;\n\t}\n\treturn ans;\n\t//\u5f88\u7b80\u5355\u7684\u8be2\u95ee \n}\nint main() {\n\tscanf(\"%d\",&n);\n\tS=sqrt(n);\n\t//\u66f4\u65b0\u5757\u7684\u5927\u5c0f \n\tInit(n);\n\t//\u5757\u7684\u8fb9\u754c\u66f4\u65b0 \n\tfor(RR int i=1; i<=n; i++)Rd(A[i].val);\n\tfor(RR int i=n; i>=1; i--)update(i,A[i].val,1);\n\tscanf(\"%d\",&m);\n\tfor(RR int i=1; i<=m; i++) {\n\t\tRd(a);\n\t\tif(a==1) {\n\t\t\tRd(b);\n\t\t\tPrint(query(b+1));\n\t\t\tputs(\"\");\n\t\t} else {\n\t\t\tRd(b);Rd(c);\n\t\t\tupdate(b+1,c,1);\n\t\t\t//\u8be2\u95ee\u7684\u8fb9\u754c\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u6240\u4ee5\u52a0\u4e00 \n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n###### \u770b\u5728\u6211de\u4e86\u8fd9\u4e48\u4e45bug\u7684\u4efd\u4e0a\u91c7\u7eb3\u6211\u5427\uff01",
        "postTime": 1531835690,
        "uid": 32178,
        "name": "CodeRikka",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]\u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9eLCT\u52a8\u6001\u6811\u548c\u5206\u5757\u90fd\u53ef\u4ee5\u641e\u7684\u3002\uff08\u636e\u8bf4\uff09\n\n\u6211\u7528\u7684\u662f\u5206\u5757\u554a\uff5e\uff08\u56e0\u4e3a\u8868\u793a\u4e0d\u4f1aLCT\uff09\n\n\u5206\u5757\u89e3\u6cd5\uff1a\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u8df3\u51fa\u5206\u5757\u7684\u6b65\u6570\u4ee5\u53ca\u8df3\u5230\u4e0b\u4e00\u5206\u5757\u7684\u54ea\u4e2a\u70b9\uff0c\u60f3\u6e05\u695a\u4e4b\u540e\u5c31\u5f88\u597d\u5199\u4e86\uff0c\u6ce8\u610f\u7ec6\u8282\uff01\uff01\uff01\n\n\u3010AC\u4ee3\u7801\u3011\n\n   \n   \n       \n       \n       \n       \n       \n               \n               \n       \n```cpp\n#include<iostream> \n#include<cstdio> \n#include<cmath> \n#include<algorithm> \nusing namespace std; \nint n,m,x,y; \nint a[200005],b[200005][3],c[200005]; \nint main() \n{ \n    scanf(\"%d\",&n); \n    for(int i=0;i<n;i++) \n    { \n        scanf(\"%d\",&a[i]); \n    } \n    int h=(int)sqrt(n); \n    int v=1; \n    for(int i=0;i<n;i++) \n    { \n        c[i]=v; \n        if((i+1)%h==0)v++; \n    } \n    for(int i=n-1;i>=0;i--) \n    { \n        if(i+a[i]>n-1 || c[i+a[i]]!=c[i])b[i][2]=i+a[i]; else b[i][2]=b[i+a[i]][2]; \n        if(c[i+a[i]]!=c[i])b[i][1]=1; else b[i][1]=b[i+a[i]][1]+1; \n    } \n    /*for(int i=0;i<n;i++) \n    { \n        cout<<a[i]<<\" \"<<b[i][1]<<\" \"<<b[i][2]<<endl; \n    }*/\n    scanf(\"%d\",&m); \n    for(int k=1;k<=m;k++) \n    { \n        scanf(\"%d\",&x); \n        if(x==1) \n        { \n            scanf(\"%d\",&x); \n            int ans=0; \n            while(x<=n-1) \n            { \n                ans+=b[x][1]; \n                x=b[x][2];   \n            } \n            if(ans==0)printf(\"%d\\n\",1); else printf(\"%d\\n\",ans); //\u8bd5\u8fc7\u4e86\uff0c\u6570\u636e\u5176\u5b9e\u6709\u6f0f\u6d1e\uff0c\u4e0d\u52a0\u524d\u534a\u6bb5\uff0c\u53ea\u5199else\u4e4b\u540e\u4e5f\u53ef\u4ee5\u8fc7\u7684\u3002\n        } \n        else\n        { \n            scanf(\"%d%d\",&x,&y); \n            a[x]=y; \n            if(x+y>n-1 || c[x+y]!=c[x])b[x][2]=x+y; else b[x][2]=b[x+y][2]; \n            if(c[x+y]!=c[x])b[x][1]=1; else b[x][1]=b[x+y][1]+1; \n            for(int i=x-1;i>=0;i--) \n            { \n                if(c[i]!=c[x])break; \n                if(i+a[i]<=n-1 && c[i+a[i]]==c[i])b[i][2]=b[i+a[i]][2]; \n                if(c[i+a[i]]==c[i])b[i][1]=b[i+a[i]][1]+1; \n            } \n            /*for(int i=0;i<n;i++) \n            { \n                cout<<a[i]<<\" \"<<b[i][1]<<\" \"<<b[i][2]<<endl; \n            }*/\n        } \n    } \n    return 0; \n}\n```",
        "postTime": 1476952736,
        "uid": 16817,
        "name": "winmt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]BOUNCE \u5f39\u98de\u7ef5\u7f8a\u3011"
    },
    {
        "content": "\u4e00\u9053LCT\uff0c\u7adf\u7136\u6ca1\u6709\u4eba\u53d1LCT\u7684\u9898\u89e3\uff01\uff01\uff01\uff08\u867d\u7136ORZ\u697c\u4e0b\u5206\u5757\u795e\u7287\uff0c\u8868\u793a\u4e0d\u4f1a\u5206\u5757\uff09\n\nLCT\u52a8\u6001\u6811\uff0cSplay\u7ef4\u62a4\u3002\u633a\u88f8\u7684\uff0c\u5176\u5b9e\u5c31\u662f\u7ef4\u62a4\u4e00\u7247**\u68ee\u6797**\uff0c\u6bcf\u4e2a\u70b9\u7684\u7236\u4eb2\u662fi+ki\uff0c\u652f\u6301\u5272\u8fb9\u52a0\u8fb9\u4ee5\u53ca\u67e5\u8be2\u5230\u6839\u7684\u8def\u5f84\u957f\u3002\n\nLCT\u7ef4\u62a4\u4ee5\u540e\u4fee\u6539\u5f39\u529b\u7cfb\u6570\u5c31\u662f\u5148\u5272\u8fb9\u7136\u540e\u52a0\u8fb9\uff0c\u8def\u5f84\u957f\u5c31\u662f\u5de6\u5b50\u6811sz\uff08LCT\u81ea\u884c\u5ea6\u5a18\uff09\u3002\n\n\u672c\u4ebaLCT\u5199\u6cd5\u4e0d\u592a\u6b63\u5e38\uff0cSplay\u4e0d\u53d8\uff0c\u589e\u52a0rtf\u8868\u793a\u975e\u504f\u7231\u8fb9\u3002\n\n\n\u5c0f\u63d0\u793a\uff1a**\u6ce8\u610f\u7279\u6b8a\u60c5\u51b5\uff1a\u5272\u8fb9\u65f6\u5f39\u529b\u7cfb\u6570\u8d85\u8fc7n\u6216\u7b49\u4e8e0\u5c31\u4e0d\u8981\u518d\u52a0\u8fb9\u4e86\uff01\u90a3\u662f\u68ee\u6797\uff01**\n",
        "postTime": 1485778601,
        "uid": 16528,
        "name": "magolor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3203 \u3010[HNOI2010]BOUNCE \u5f39\u98de\u7ef5\u7f8a\u3011"
    }
]