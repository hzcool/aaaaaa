[
    {
        "content": "\u8be2\u95ee\u5373\u6c42 dfs \u5e8f\u5728\u4e00\u6bb5\u533a\u95f4\uff0c\u6df1\u5ea6\u5728\u4e00\u6bb5\u540e\u7f00\u7684\u7ed3\u70b9\u6570\u91cf\u3002\n\n\u9759\u6001\u4e8c\u7ef4\u6570\u70b9\uff0c\u7ecf\u5178\u7684\u505a\u6cd5\u662f\u4e3b\u5e2d\u6811\u3002\u4e0d\u8fc7\u672c\u9898\u4e2d dfs \u5e8f\u4e00\u7ef4\u662f\u533a\u95f4\uff0c\u6df1\u5ea6\u4e00\u7ef4\u662f\u524d\u540e\u7f00\uff0c\u53ef\u4ee5\u5728\u6570\u70b9\u65f6\u4ee5\u6df1\u5ea6\u4e3a\u7b2c\u4e00\u7ef4\uff0c\u4ee5 dfs \u5e8f\u4e3a\u7b2c\u4e8c\u7ef4\u3002\u8fd9\u6837\uff0c\u5c06\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u6302\u8f7d\u5230\u5bf9\u5e94\u7b2c\u4e00\u7ef4\u524d\u7f00\u5904\uff0c\u52a0\u70b9\u65f6\u6309\u7b2c\u4e00\u7ef4\u6709\u5e8f\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u70b9\u65f6\u56de\u7b54\u5f53\u524d\u524d\u7f00\u5904\u7684\u8be2\u95ee\uff0c\u8fd9\u53ea\u9700\u8981\u67e5\u8be2\u6b64\u65f6\u7b2c\u4e8c\u7ef4\u7684\u533a\u95f4\u4fe1\u606f\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002",
        "postTime": 1667911920,
        "uid": 118109,
        "name": "whhsteven",
        "ccfLevel": 7,
        "title": "P8844 [\u4f20\u667a\u676f #4 \u521d\u8d5b] \u5c0f\u5361\u4e0e\u843d\u53f6"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u5927\u5bb6\u90fd\u5728\u79bb\u7ebf\u5462\uff1f\u6765\u4e00\u53d1\u5728\u7ebf\u53c8\u4e0d\u9700\u8981\u52a8\u8111\u7684\u505a\u6cd5\u3002\n\n\u9898\u610f\uff1a\u7ed9\u5b9a\u4e24\u79cd\u64cd\u4f5c\uff0c\u7b2c\u4e00\u79cd\u64cd\u4f5c\u662f\u5c06\u6240\u6709\u6df1\u5ea6 $\\geq x$ \u7684\u70b9\u7684\u70b9\u6743\u8bbe\u4e3a $1$\uff0c\u5176\u5b83\u8bbe\u4e3a $0$\uff0c\u7b2c\u4e8c\u79cd\u64cd\u4f5c\u662f\u8be2\u95ee $x$ \u7684\u5b50\u6811\u70b9\u6743\u548c\u3002\n\n\n\u6ce8\u610f\u5230\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u7684\u672c\u8d28\u662f\uff1a\u8be2\u95ee $x$ \u7684\u5b50\u6811\u5185\u6df1\u5ea6\u5927\u4e8e\u7b49\u4e8e $cx$ \u7684\u70b9\u7684\u4e2a\u6570\u3002\u5176\u4e2d $cx$ \u662f\u4e0a\u4e00\u6b21\u64cd\u4f5c\u4e00\u8bbe\u7f6e\u7684\u6df1\u5ea6\u3002\n\n\u6211\u4eec\u4f7f\u7528 DFS \u5e8f\u5c06\u5176\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5e8f\u5217\u4e0a\u8fde\u7eed\u533a\u95f4\u7684\u95ee\u9898\uff0c\u81f3\u4e8e\u8be2\u95ee\u533a\u95f4\u5185\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u6570\u7684\u503c\u600e\u4e48\u505a\uff1f\u53ef\u4ee5\u9009\u62e9\u79bb\u7ebf\u6811\u72b6\u6570\u7ec4\uff0c\u4f46\u662f\u4e3b\u5e2d\u6811\u663e\u7136\u66f4\u76f4\u63a5\u3002\n\n\u5c0f\u5751\u70b9\uff1a\u4e00\u5f00\u59cb\u6240\u6709\u70b9\u6743\u90fd\u662f $0$\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u9009\u62e9\u628a $cx$ \u8bbe\u4e3a $n+1$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5, LG = 19;\nint n, m, ld[N], rd[N], idx;\nint rt[N], ls[N * LG], rs[N * LG], sum[N * LG], tot;\nvector<int> g[N];\ninline int modify(int pre, int l, int r, int x, int k) {\n\tint p = ++tot;\n\tls[p] = ls[pre], rs[p] = rs[pre], sum[p] = sum[pre] + k;\n\tif (l == r)\n\t\treturn p;\n\tint mid = (l + r) >> 1;\n\tif (x <= mid)\n\t\tls[p] = modify(ls[pre], l, mid, x, k);\n\telse\n\t\trs[p] = modify(rs[pre], mid + 1, r, x, k);\n\treturn p;\n}\ninline int query(int u, int v, int l, int r, int L, int R) {\n\tif (L <= l && r <= R)\n\t\treturn sum[v] - sum[u];\n\tint mid = (l + r) >> 1, res = 0;\n\tif (L <= mid)\n\t\tres += query(ls[u], ls[v], l, mid, L, R);\n\tif (R > mid)\n\t\tres += query(rs[u], rs[v], mid + 1, r, L, R);\n\treturn res;\n}\ninline void dfs(int u, int fr, int dep) {\n\tld[u] = ++idx, rt[idx] = modify(rt[idx - 1], 1, n, dep, 1);\n//\tcerr << u << ' ' << dep << '\\n';\n\tfor (int v : g[u])\n\t\tif (v != fr)\n\t\t\tdfs(v, u, dep + 1);\n\trd[u] = idx;\n}\nsigned main() {\n\tcin.tie(nullptr)->sync_with_stdio(false);\n\tcin >> n >> m;\n\tfor (int i = 1; i < n; i++) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tg[u].emplace_back(v);\n\t\tg[v].emplace_back(u);\n\t}\n\tdfs(1, 0, 1);\n\tint curx = n + 1;\n\tfor (int i = 1; i <= m; i++) {\n\t\tint op, x;\n\t\tcin >> op >> x;\n\t\tif (op == 1) {\n\t\t\tcurx = x;\n\t\t} else {\n\t\t\tif (curx == n + 1)\n\t\t\t\tcout << \"0\\n\";\n\t\t\telse \n\t\t\t\tcout << query(rt[ld[x] - 1], rt[rd[x]], 1, n, curx, n) << '\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1667993815,
        "uid": 434929,
        "name": "Usada_Pekora",
        "ccfLevel": 7,
        "title": "P8844 \u4e3b\u5e2d\u6811"
    },
    {
        "content": "### \u4f7f\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u76f8\u5bf9\u7b80\u6d01\n------------\n\u9898\u76ee\u7ed9\u51fa\u7684\u8981\u6c42\u76f8\u5f53\u5177\u4f53\uff0c\u5f88\u5bb9\u6613\u53d1\u73b0\u6bcf\u6b21\u67e5\u8be2\u7ed3\u679c\u53ea\u4e0e\u4e0a\u6b21\u4fee\u6539\u6709\u5173\uff0c\u4e14\u67e5\u8be2\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u4e8e\u7ed9\u51fa\u7684\u8282\u70b9\uff0c\u5176\u5b50\u6811\u5185\u6709\u591a\u5c11\u8282\u70b9\u7684\u6df1\u5ea6\u5927\u4e8e\u7b49\u4e8e\u4e0a\u6b21\u67d3\u8272\u7684\u6df1\u5ea6\u3002\n\n\u7531\u4e8e\u8981\u67e5\u8be2\u5b50\u6811\u5185\u67d0\u4e00\u6df1\u5ea6\uff08\u53ca\u4ee5\u4e0b\uff09\u7684\u8282\u70b9\u6570\u91cf\uff0c\u8003\u8651\u7ef4\u62a4\u4ee5\u4e0b\u4fe1\u606f\uff1a\n\n- \u8282\u70b9\u7684\u6df1\u5ea6\n- \u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\n- \u6574\u68f5\u6811\u7684\u6df1\u5ea6\n\n\u4ec5\u51ed\u4ee5\u4e0a\u4e09\u4e2a\u4fe1\u606f\u65e0\u6cd5\u4ee5\u53ef\u4ee5\u63a5\u53d7\u7684\u590d\u6742\u5ea6\u67e5\u8be2\uff0c\u8003\u8651\u4e00\u79cd\u80fd\u591f\u5feb\u901f\u7edf\u8ba1\u67d0\u8282\u70b9\u5b50\u6811\u4fe1\u606f\u7684\u65b9\u6cd5\uff1a**\u4f7f\u7528 dfs \u5e8f**\u3002\n\n\u5229\u7528\u6811\u7684 dfs \u5e8f\u548c\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u53ef\u4ee5\u4ee5\u5e8f\u5217\u67e5\u8be2\u7684\u65b9\u5f0f\u5feb\u901f\u67e5\u8be2\u8282\u70b9\u7684\u5b50\u6811\u3002\n\n------------\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff1a![](https://cdn.luogu.com.cn/upload/image_hosting/5paln9hs.png)\n\n- ```1 2 4 5 3``` \uff1a\u6811\u7684 dfs \u5e8f\n- ```1 2 3 4 5``` \uff1a\u8282\u70b9\u7f16\u53f7\n- ```1 2 5 3 4``` \uff1a\u8282\u70b9\u5728 dfs \u5e8f\u4e2d\u7684\u4e0b\u6807\n- ```5 3 1 2 1``` \uff1a\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\n\n\u53ef\u4ee5\u53d1\u73b0**\u8282\u70b9\u7684\u5b50\u6811\u5728 dfs \u5e8f\u4e2d\u5fc5\u4e3a\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u4e14\u4e00\u5b9a\u8ddf\u968f\u5728\u8be5\u8282\u70b9\u4e4b\u540e**\u3002\u6240\u4ee5\u67e5\u8be2\u8282\u70b9\u7684\u5b50\u6811\u7b49\u4ef7\u4e8e\u5728 dfs \u5e8f\u4e2d\u67e5\u8be2\u533a\u95f4 $[$ \u8282\u70b9\u5728 dfs \u5e8f\u4e2d\u7684\u4e0b\u6807\uff0c\u8282\u70b9\u5728 dfs \u5e8f\u4e2d\u7684\u4e0b\u6807 $+$ \u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f $-1]$\u3002\n\n\u540c\u65f6\uff0c\u7531\u4e8e\u6bcf\u6b21\u8be2\u95ee\u7684\u7ed3\u679c\u53ea\u4e0e\u4e0a\u6b21\u67d3\u8272\u7684\u6df1\u5ea6\u6709\u5173\uff0c\u53ef\u4ee5\u5c06\u8be2\u95ee\u4e0e\u5176\u6700\u8fd1\u4e00\u6b21\u67d3\u8272\u6df1\u5ea6\u76f8\u5173\u8054\uff0c\u6309\u7167\u8be2\u95ee\u65f6\u7684\u67d3\u8272\u6df1\u5ea6\u4ece\u5927\u5230\u5c0f\u8fdb\u884c\u6392\u5e8f\uff0c\u6bcf\u6b21\u67e5\u8be2\u65f6\u5982\u679c\u5f53\u524d\u67d3\u8272\u6df1\u5ea6\u5c0f\u4e8e\u8be2\u95ee\u67d3\u8272\u6df1\u5ea6\u5c31\u5bf9\u9700\u8981\u67d3\u8272\u7684\u8282\u70b9\u8fdb\u884c\u67d3\u8272\uff0c\u67d3\u8272\u5373\u5728 dfs \u5e8f\u4e2d\u5bf9\u8282\u70b9\u8fdb\u884c\u6807\u8bb0\u3002\n\n\u67d3\u8272\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u5b9e\u73b0\uff0c\u5bf9\u4e8e\u7ebf\u6bb5\u6811\uff0c\u53ef\u4ee5\u5355\u70b9\u4fee\u6539\u6bcf\u6b21\u9700\u8981\u67d3\u8272\u7684\u8282\u70b9\uff0c\u4e5f\u53ef\u4ee5\u533a\u95f4\u8986\u76d6\u6bcf\u6b21\u9700\u8981\u67d3\u8272\u7684\u8282\u70b9\u53ca\u5176\u5b50\u6811\uff1b\u5bf9\u4e8e\u6811\u72b6\u6570\u7ec4\uff0c\u5355\u70b9\u4fee\u6539\u6bcf\u6b21\u9700\u8981\u67d3\u8272\u7684\u8282\u70b9\u3002\u6bcf\u4e2a\u8282\u70b9\u81f3\u591a\u6267\u884c\u4e00\u6b21\u67d3\u8272\u64cd\u4f5c\uff0c\u67d3\u8272\u548c\u67e5\u8be2\u5355\u6b21\u590d\u6742\u5ea6\u540c\u4e3a $O(\\log n)$\u3002$n$\uff0c$m$ \u540c\u9636\uff0c\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u6700\u7ec8\u9700\u8981\u7ef4\u62a4\u7684\u5173\u952e\u4fe1\u606f\uff1a\n\n- \u8282\u70b9\u5728 dfs \u5e8f\u4e2d\u7684\u4e0b\u6807\n- \u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\n- \u6574\u68f5\u6811\u7684\u6df1\u5ea6\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<vector>\nusing namespace std;\nstruct Question{int i,x,dep;}q[100001];//d[x]:x\u5728dfs\u5e8f\u4e2d\u7684\u4e0b\u6807 z[x]:x\u7684\u5b50\u6811\u5927\u5c0f \nint n,m,a,b,cnt,las,maxd,c[100001],d[100001],z[100001],ans[100001];\nvector<int> v[100001],u[100001];//u[x]:\u5b58\u50a8\u6240\u6709\u6df1\u5ea6\u4e3ax\u7684\u8282\u70b9\u5728dfs\u5e8f\u4e2d\u7684\u4e0b\u6807 \nvoid dfs(int x,int f,int dep){\n\td[x]=++cnt,u[dep].push_back(cnt);\n\tfor(int i:v[x]) if(i!=f) dfs(i,x,dep+1);\n\tz[x]++,z[f]+=z[x],maxd=max(dep,maxd);//\u7edf\u8ba1\u5b50\u6811\u7b49\u4ef7\u4e8ez[x]=cnt-d[x]+1 \n}\nbool cmp(const Question &x,const Question &y){return x.dep>y.dep;}\nvoid add(int x){while(x<=n) c[x]++,x+=x&-x;}\nint sum(int x){int ret=0;while(x) ret+=c[x],x-=x&-x;return ret;}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);cout.tie(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<n;i++){\n\t\tcin>>a>>b;\n\t\tv[a].push_back(b);\n\t\tv[b].push_back(a);\n\t}\n\tdfs(1,0,1),cnt=0;\n\tlas=maxd+1;//\u672a\u67d3\u8272\u65f6\u94a6\u5b9alas\u4e3amaxd+1 \n\tfor(int i=1;i<=m;i++){\n\t\tcin>>a>>b;\n\t\tif(a==1) las=b;\n\t\telse q[++cnt]=Question{cnt,b,las};\n\t}\n\tsort(q+1,q+cnt+1,cmp);\n\tlas=maxd;\n\tfor(int i=1;i<=cnt;i++){\n\t\twhile(las>=q[i].dep) for(int i:u[las--]) add(i);//\u6807\u8bb0\u6df1\u5ea6\u4e3alas\u7684\u6240\u6709\u8282\u70b9 \n\t\tans[q[i].i]=sum(d[q[i].x]+z[q[i].x]-1)-sum(d[q[i].x]-1);\n\t}\n\tfor(int i=1;i<=cnt;i++) cout<<ans[i]<<'\\n';\n\treturn 0;\n}\n```\n\n\u672c\u9898\u56f0\u6270\u4e86\u7b14\u8005\u5f88\u4e45\u5f88\u4e45\uff0c\u5728\u901a\u8fc7\u540e\u53d1\u4e00\u7bc7\u9898\u89e3\u7eaa\u5ff5\u3002",
        "postTime": 1674021868,
        "uid": 662295,
        "name": "Flanksy",
        "ccfLevel": 0,
        "title": "P8844 [\u4f20\u667a\u676f #4 \u521d\u8d5b] \u5c0f\u5361\u4e0e\u843d\u53f6"
    },
    {
        "content": "\u4e2a\u4eba\u8ba4\u4e3a\u662f\u4e00\u9053\u6bd4\u8f83\u6709\u65b0\u610f\u7684\u4e8c\u7ef4\u6570\u70b9\u9898\u3002\n\n# \u601d\u8def\n\n\u56e0\u4e3a\u64cd\u4f5c\u4e00\u662f\u628a\u6574\u68f5\u6811\u90fd\u67d3\u7eff\uff0c\u4e4b\u540e\u8ba9\u6df1\u5ea6 $\\ge x$ \u7684\u7ed3\u70b9\u53d8\u9ec4\uff0c\u4e0d\u96be\u53d1\u73b0\u9ec4\u8272\u8282\u70b9\u7684\u4e2a\u6570\u968f\u7740 $x$ \u7684\u51cf\u5c0f\u800c\u589e\u5927\u3002\n\n\u6211\u4eec\u8003\u8651\u5c06\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u5904\u7406\uff0c\u6309 $x$ \u7684\u5927\u5c0f\u4ece\u5927\u5230\u5c0f\u5904\u7406\u6bcf\u4e2a\u8be2\u95ee\u3002\n\n\u6211\u4eec\u9884\u5904\u7406\u51fa\u6240\u6709\u70b9\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684 dfs \u5e8f\u4ee5\u53ca\u6bcf\u4e2a\u6df1\u5ea6\u5bf9\u5e94\u54ea\u4e9b\u8282\u70b9\u3002\n\n\u6211\u4eec\u4ee5 dfs \u5e8f\u4e3a\u4e00\u7ef4\uff0c\u4ee5\u70b9\u7684\u6df1\u5ea6\u4e3a\u4e00\u7ef4\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u7ecf\u5178\u7684**\u4e8c\u7ef4\u6570\u70b9**\u95ee\u9898\u3002\n\n\u8bb0\u5f55\u6bcf\u4e2a\u64cd\u4f5c\u4e00\u4e4b\u540e\uff0c\u4e0b\u4e2a\u64cd\u4f5c\u4e00\u4e4b\u524d\u7684\u6240\u6709\u64cd\u4f5c\u4e8c\u7684\u7f16\u53f7\uff0c\u5728\u904d\u5386\u5230\u5f53\u524d\u7684\u64cd\u4f5c\u4e00\u5bf9\u5e94\u7684\u6df1\u5ea6\u65f6\u5904\u7406\u7b54\u6848\u3002\n\n\u4ee5 dfs \u5e8f\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u5728\u904d\u5386\u6bcf\u4e2a\u6df1\u5ea6\u65f6\uff0c\u5c06\u5bf9\u5e94\u6df1\u5ea6\u7684\u6240\u6709\u70b9\u7684 dfs \u5e8f\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u52a0\u4e00\uff08\u5373\u4e4b\u524d\u6ca1\u6709\u67d3\u9ec4\u7684\u70b9\uff09\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u4e8c\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u8be2\u7ebf\u6bb5\u6811\u4e2d $id_x$ \u5230 $id_x+siz_x-1$ \u5185\u8282\u70b9\u7684\u4e2a\u6570\uff08\u5373\u9ec4\u8272\u8282\u70b9\u7684\u4e2a\u6570\uff09\u3002\n\n\u8fd9\u6837\u5904\u7406\u7684\u8bdd\uff0c\u6bcf\u4e2a\u8282\u70b9\u53ea\u4f1a\u4fee\u6539\u7ebf\u6bb5\u6811\u4e00\u6b21\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u7684\u5355\u70b9\u4fee\u6539\u590d\u6742\u5ea6\u4e3a $\\mathcal O(\\log n)$\uff0c\u6240\u4ee5\u4fee\u6539\u64cd\u4f5c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\log n)$\u3002\n\n\u5171\u6709 $m$ \u6b21\u67e5\u8be2\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O((n+m)\\log n)$\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100010\n#define ls x<<1\n#define rs x<<1|1\nusing namespace std;\nint n,m,cnt,siz[N],tot,depm,ans[N],id[N];\nvector<int> G[N],a[N],ask[N];\nint q[N],sum[N<<2];\nvoid dfs(int x,int fa,int dep){\n    id[x]=++cnt;\n    a[dep].push_back(cnt);\n    siz[x]=1;\n    depm=max(depm,dep);\n    for(auto to:G[x]){\n        if(to==fa){\n            continue;\n        }\n        dfs(to,x,dep+1);\n        siz[x]+=siz[to];\n    }\n}\nvoid update(int x,int l,int r,int ad){\n    if(l==r&&l==ad){\n        sum[x]++;\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(ad<=mid){\n        update(ls,l,mid,ad);\n    }\n    else{\n        update(rs,mid+1,r,ad);\n    }\n    sum[x]=sum[ls]+sum[rs];\n}\nint query(int x,int l,int r,int L,int R){\n    if(l>=L&&r<=R){\n        return sum[x];\n    }\n    int mid=(l+r)>>1,res=0;\n    if(L<=mid){\n        res+=query(ls,l,mid,L,R);\n    }\n    if(R>mid){\n        res+=query(rs,mid+1,r,L,R);\n    }\n    return res;\n}\nsigned main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<n;i++){\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        G[u].push_back(v);\n        G[v].push_back(u);\n    }\n    dfs(1,1,1);\n    int now=0;\n    for(int i=1;i<=m;i++){\n        int op;\n        scanf(\"%d\",&op);\n        if(op==1){\n            scanf(\"%d\",&now);\n        }\n        else{\n            ++tot;\n            scanf(\"%d\",&q[tot]);\n            ask[now].push_back(tot);\n        }\n    }\n    for(int i=depm;i;i--){\n        for(auto j:a[i]){\n            update(1,1,n,j);\n        }\n        for(auto j:ask[i]){\n            int x=q[j];\n            ans[j]=query(1,1,n,id[x],id[x]+siz[x]-1);\n        }\n    }\n    for(int i=1;i<=tot;i++){\n        printf(\"%d\\n\",ans[i]);\n    }\n    return 0;\n}\n```\n\n\n",
        "postTime": 1668220367,
        "uid": 478585,
        "name": "Dregen_Yor",
        "ccfLevel": 4,
        "title": "P8844 [\u4f20\u667a\u676f #4 \u521d\u8d5b] \u5c0f\u5361\u4e0e\u843d\u53f6 \u9898\u89e3"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a\u6811\u94fe\u5256\u5206\uff08\u867d\u7136\u4e0d\u9700\u8981\u94fe\u64cd\u4f5c\uff0c\u6240\u4ee5\u4e5f\u4e0d\u9700\u8981\u7ef4\u62a4\u8f7b\u91cd\u8fb9\uff0c\u53ea\u8981\u6309\u7167 dfs \u5e8f\u5c31\u884c\uff0c\u5c31\u7b97\u5f31\u5316\u5427 qwq\uff09\n\n---\n\n\u6ce8\u610f\u5230\u6bcf\u4e2a\u64cd\u4f5c $2$ \u53ea\u548c\u524d\u9762\u90a3\u4e2a\u64cd\u4f5c $1$ \u6709\u5173\u7cfb\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u628a\u64cd\u4f5c $2$ \u79bb\u7ebf\u4e0b\u6765\uff0c\u6309\u7167**\u524d\u9762\u4e00\u4e2a\u64cd\u4f5c $1$ \u7684\u67d3\u8272\u7684\u6df1\u5ea6**\u6392\u5e8f\u3002\n\n\u5f00\u59cb\u65f6\u6240\u6709\u70b9\u4e3a\u7eff\u8272\u3002\u8bbe\u5f53\u524d\u4e3a\u67d3\u8272\u6df1\u5ea6 $x$ \u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\uff1a\n\n- \u7ee7\u627f\u67d3\u8272\u6df1\u5ea6\u4e3a $x+1$ \u7684\u6811\u3002\n- \u5e76\u4e14\u628a\u6bcf\u4e00\u4e2a\u6df1\u5ea6\u4e3a $x$ \u7684\u70b9\u90fd\u67d3\u4e0a\u9ec4\u8272\u3002\n- \u5bf9\u4e8e\u6df1\u5ea6\u4e3a $x$ \u7684\u8be2\u95ee\uff0c\u6c42\u5176\u5b50\u6811\u5185\u7684\u67d3\u8272\u70b9\u4e2a\u6570\u3002\n\n\u5f53\u7136\u5148\u5168\u90e8\u67d3\u9ec4\u518d\u4e00\u5c42\u5c42\u53d6\u6d88\u4e5f\u884c\u7684\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5c06\u6811\u6309\u7167 dfs \u5e8f\u53d8\u6210\u5e8f\u5217\u540e\uff0c\u7b2c\u4e8c\u4e2a\u6b65\u9aa4\u5373\u4e3a\u5355\u70b9\u4fee\u6539\uff0c\u7b2c\u4e09\u4e2a\u5373\u4e3a\u533a\u95f4\u6c42\u548c\uff0c\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\u3002\uff08~~\u4ee3\u7801\u91cc\u6211\u5199\u7684\u65f6\u5019\u56e0\u4e3a\u50bb\u4e86\u5199\u4e86\u4e2a\u7ebf\u6bb5\u6811~~\uff09\n\n\n\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u521a\u521a\u5f00\u59cb\u8fd8\u6ca1\u6709\u67d3\u8272\u7684\u8be2\u95ee\uff0c\u7b54\u6848\u4e3a $0$\uff0c\u9700\u8981\u7279\u5224\u3002\n\n\u6bcf\u4e2a\u70b9\u90fd\u8981\u4e00\u6b21\u67d3\u8272\uff0c\u8fd8\u9700\u8981\u8fdb\u884c $m$ \u6b21\u533a\u95f4\u6c42\u548c\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u4e3a $O((n+m) \\log n)$\u3002\n\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/z9t6qp0j)",
        "postTime": 1668143779,
        "uid": 363317,
        "name": "Nicrobot",
        "ccfLevel": 4,
        "title": "P8844 \u9898\u89e3"
    },
    {
        "content": "\u5148\u8003\u8651\u66b4\u529b\u505a\u6cd5\u3002\n\n\u5bf9\u4e8e\u6df1\u5ea6 $\\geq x$ \u7684\u70b9\u53d8\u6210\u9ec4\u8272\uff0c\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6df1\u5ea6\u4e3a $x$ \u7684\u70b9\uff0c\u5c06\u4ee5\u5b83\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6bcf\u4e2a\u70b9\u90fd\u53d8\u6210\u9ec4\u8272\u3002\n\n\u4f46\u662f\u663e\u7136\u6df1\u5ea6\u4e3a $x$ \u7684\u7ed3\u70b9\u7684\u6570\u91cf\u662f $O(n)$ \u7ea7\u522b\u7684\uff0c\u6bcf\u6b21\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u8986\u76d6\u533a\u95f4\u6c42\u548c\u7684\u7406\u8bba\u590d\u6742\u5ea6\u4e0a\u754c\u662f $O(mn\\log n)$ \u7684\uff0c\u663e\u7136\u590d\u6742\u5ea6\u4e0d\u5bf9\u3002\n\n\u4f46\u662f\u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u53ef\u5f97\uff0c\u64cd\u4f5c\u4e00\u91cc\u6709\u8fd9\u4e48\u4e00\u53e5\u8bdd\uff1a\u628a\u6574\u68f5\u6811\u90fd\u67d3\u7eff\u3002\n\n\u663e\u7136\u6bcf\u6b21\u64cd\u4f5c\u548c\u4e4b\u524d\u7684\u64cd\u4f5c\u548c\u67e5\u8be2\u662f\u65e0\u5173\u7684\uff0c\u5bf9\u6bcf\u6b21\u67e5\u8be2\u4ea7\u751f\u8d21\u732e\u7684\u53ea\u6709\u4e0a\u4e00\u6b21\u4fee\u6539\u64cd\u4f5c\uff0c\u5e76\u4e14\u4e00\u6b21\u4fee\u6539\u81f3\u4e0b\u4e00\u6b21\u4fee\u6539\u4e4b\u95f4\u7684\u6240\u6709\u67e5\u8be2\u90fd\u53ef\u4ee5\u6253\u4e71\u987a\u5e8f\uff0c\u56e0\u4e3a\u67e5\u8be2\u4e0d\u4f1a\u5f71\u54cd\u6811\u7684\u6570\u636e\u3002\n\n\u8003\u8651\u64cd\u4f5c\u79bb\u7ebf\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\u64cd\u4f5c\u627e\u5230\u4e0a\u6b21\u7684\u4fee\u6539\uff0c\u7136\u540e\u5c06 \n$dep$ \u4ece $1$ \u679a\u4e3e\u5230 $n$\uff0c\u5bf9\u6240\u6709\u6df1\u5ea6\u7b49\u4e8e $dep$ \u7684\u7ed3\u70b9\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u8986\u76d6\uff0c\u8986\u76d6\u5b8c\u540e\u67e5\u8be2\u6240\u6709\u4ee5 $dep$ \u4e3a\u4e0a\u4e00\u6b21\u4fee\u6539\u7684\u67e5\u8be2\u5373\u53ef\u3002\n\n\u7531\u4e8e\u4e00\u68f5\u6811\u6700\u591a\u53ea\u6709 $n$ \u4e2a\u7ed3\u70b9\uff0c\u800c\u533a\u95f4\u8986\u76d6\u6700\u591a\u53ea\u4f1a\u8fdb\u884c $n$ \u6b21\u3002\u7531\u4e8e $n,m$ \u540c\u9636\uff0c\u6240\u4ee5\u603b\u4f53\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <utility>\n#include <vector>\nusing namespace std;\n\nconst int N = 1e5 + 5;\n\nint n, m;\n\nclass SegmentTree\n{\npublic:\n\tstruct Node\n\t{\n\t\tint l, r, sum;\n\t\tint tag;\n\t}tr[N << 2];\n\tvoid pushup(int u)\n\t{\n\t\ttr[u].sum = tr[u << 1].sum + tr[u << 1 | 1].sum;\n\t}\n\tvoid pushdown(int u)\n\t{\n\t\tif (tr[u].tag != -1)\n\t\t{\n\t\t\ttr[u << 1].tag = tr[u].tag;\n\t\t\ttr[u << 1].sum = tr[u].tag * (tr[u << 1].r - tr[u << 1].l + 1);\n\t\t\ttr[u << 1 | 1].tag = tr[u].tag;\n\t\t\ttr[u << 1 | 1].sum = tr[u].tag * (tr[u << 1 | 1].r - tr[u << 1 | 1].l + 1);\n\t\t\ttr[u].tag = -1;\n\t\t}\n\t}\n\tvoid build(int u, int l, int r)\n\t{\n\t\ttr[u] = { l, r, 0, -1 };\n\t\tif (l == r) return;\n\t\tint mid = l + r >> 1;\n\t\tbuild(u << 1, l, mid);\n\t\tbuild(u << 1 | 1, mid + 1, r);\n\t}\n\tvoid update(int u, int l, int r, int c)\n\t{\n\t\tif (tr[u].l >= l and tr[u].r <= r)\n\t\t{\n\t\t\ttr[u].tag = c;\n\t\t\ttr[u].sum = c * (tr[u].r - tr[u].l + 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpushdown(u);\n\t\t\tint mid = tr[u].l + tr[u].r >> 1;\n\t\t\tif (l <= mid) update(u << 1, l, r, c);\n\t\t\tif (r > mid) update(u << 1 | 1, l, r, c);\n\t\t\tpushup(u);\n\t\t}\n\t}\n\tint query(int u, int l, int r)\n\t{\n\t\tif (tr[u].l >= l and tr[u].r <= r)\n\t\t{\n\t\t\treturn tr[u].sum;\n\t\t}\n\t\tpushdown(u);\n\t\tint mid = tr[u].l + tr[u].r >> 1, sum = 0;\n\t\tif (l <= mid) sum = query(u << 1, l, r);\n\t\tif (r > mid) sum += query(u << 1 | 1, l, r);\n\t\treturn sum;\n\t}\n}f;\n\nvector<int> G[N];\nvector<pair<int, int> > p[N];\nvector<int> DEP[N];\nint sz[N], dep[N], ans[N], idx;\nint id[N], idx2;\n\nvoid dfs(int u, int fa)\n{\n\tdep[u] = dep[fa] + 1;\n\tDEP[dep[u]].push_back(u);\n\tsz[u] = 1;\n\tid[u] = ++idx2;\n\tfor (int i = 0; i < G[u].size(); i++)\n\t{\n\t\tint j = G[u][i];\n\t\tif (j != fa)\n\t\t{\n\t\t\tdfs(j, u);\n\t\t\tsz[u] += sz[j];\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t}\n\tint last = 0;\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint op, x;\n\t\tscanf(\"%d%d\", &op, &x);\n\t\tif (op == 1)\n\t\t{\n\t\t\tlast = x;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tp[last].push_back(make_pair(x, ++idx));\n\t\t}\n\t}\n\tdfs(1, 0);\n\tf.build(1, 1, n);\n\tfor (int i = 0; i <= n; i++)\n\t{\n\t\tif (p[i].size() == 0) continue;\n\t\tif (i == 0)\n\t\t{\n\t\t\tfor (pair<int, int> j : p[i])\n\t\t\t{\n\t\t\t\tans[j.second] = 0;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tf.update(1, 1, n, 0);\n\t\t\tfor (int j : DEP[i])\n\t\t\t{\n\t\t\t\t//printf(\"%d %d\\n\", i, j);\n\t\t\t\tf.update(1, id[j], id[j] + sz[j] - 1, 1);\n\t\t\t}\n\t\t\tfor (pair<int, int> j : p[i])\n\t\t\t{\n\t\t\t\tans[j.second] = f.query(1, id[j.first], id[j.first] + sz[j.first] - 1);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= idx; i++)\n\t{\n\t\tprintf(\"%d\\n\", ans[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1667993001,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "P8844 [\u4f20\u667a\u676f #4 \u521d\u8d5b] \u5c0f\u5361\u4e0e\u843d\u53f6"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P8844)\n\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://chenyu-w.github.io/2022/11/09/P8844%E5%B0%8F%E5%8D%A1%E4%B8%8E%E8%90%BD%E5%8F%B6/)\n\n## \u524d\u8a00\n\n\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u9700\u8981\u4ec0\u4e48\u8111\u5b50\uff0c\u4f46\u662f\u76f8\u5bf9\u4e8e\u96be\u5199\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u505a\u6cd5\u3002\n\n#### \u524d\u7f6e\u829d\u58eb\n\n\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\n## \u5206\u6790\n\n\u663e\u7136\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c $2$\uff0c\u5bf9\u5b83\u6709\u5f71\u54cd\u7684\u53ea\u6709\u4e0a\u4e00\u4e2a\u4fee\u6539\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u64cd\u4f5c\u79bb\u7ebf\u4e0b\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u64cd\u4f5c $2$\uff0c\u8bb0\u5f55\u4e00\u4e0b\u5b83\u4e0a\u4e00\u4e2a\u64cd\u4f5c $1$ \u7684\u6df1\u5ea6\uff0c\u7136\u540e\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u6c42 $u$ \u5b50\u6811\u4e2d\u6df1\u5ea6 $ \\ge x$ \u7684\u70b9\u6709\u51e0\u4e2a\u3002\n\n\u7136\u540e\u5c31\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u7ecf\u5178\u5957\u8def\uff0c\u6211\u4eec\u5728\u6bcf\u4e2a\u70b9\u4ee5\u6df1\u5ea6\u4e3a\u4e0b\u6807\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u8fdb\u884c\u63d2\u5165\uff0c\u518d\u901a\u8fc7\u4e00\u6b21 dfs \u5411\u4e0a\u5e76\uff0c\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u8ba1\u7b97\u7684\u6df1\u5ea6\u4e3a $x$\uff0c\u90a3\u4e48\u7b54\u6848\u5373\u4e3a\u533a\u95f4 $[x, n]$ \u4e2d\u7684\u548c\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include <bits/stdc++.h>\n#define pii pair<int, int>\n\nusing namespace std;\nconst int N = 1e5 + 10, M = 1e7 + 10;\nint h[N], e[N << 1], ne[N << 1], idx;\nint dep[N];\nstruct node\n{\n    int lc, rc, sum;\n} t[M];\nint root[N], tot;\nint n, m;\nvector<pii> q[N];\nint res[N];\n\ninline int read()\n{\n    int x = 0, y = 1; char c = getchar();\n    while (c < '0' || c > '9') {if (c == '-') y = -1; c = getchar();}\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * y;\n}\n\ninline void add(int a, int b)\n{\n    e[idx] = b, ne[idx] = h[a], h[a] = idx++;\n}\n\ninline void dfs1(int u, int p)\n{\n    dep[u] = dep[p] + 1;\n    for (int i = h[u]; ~i; i = ne[i])\n    {\n        int v = e[i];\n        if (v == p) continue;\n        dfs1(v, u);\n    }\n}\n\ninline void pushup(int p)\n{\n    t[p].sum = t[t[p].lc].sum + t[t[p].rc].sum;\n}\n\ninline void insert(int &p, int l, int r, int x)\n{\n    if (!p) p = ++tot;\n    if (l == r)\n    {\n        t[p].sum++;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    if (x <= mid) insert(t[p].lc, l, mid, x);\n    else insert(t[p].rc, mid + 1, r, x);\n    pushup(p);\n}\n\ninline int merge(int &p, int &q, int l, int r)\n{\n    if (!p) return q;\n    if (!q) return p;\n    if (l == r)\n    {\n        t[p].sum += t[q].sum;\n        return p;\n    }\n    int mid = (l + r) >> 1;\n    t[p].lc = merge(t[p].lc, t[q].lc, l, mid);\n    t[p].rc = merge(t[p].rc, t[q].rc, mid + 1, r);\n    pushup(p);\n    return p;\n}\n\ninline int query(int p, int l, int r, int L, int R)\n{\n    if (!p || l > R || r < L) return 0;\n    if (L <= l && r <= R) return t[p].sum;\n    int mid = (l + r) >> 1, res = 0;\n    if (L <= mid) res += query(t[p].lc, l, mid, L, R);\n    if (R > mid) res += query(t[p].rc, mid + 1, r, L, R);\n    return res;\n}\n\ninline void dfs2(int u, int p)\n{\n    for (int i = h[u]; ~i; i = ne[i])\n    {\n        int v = e[i];\n        if (v == p) continue;\n        dfs2(v, u);\n        merge(root[u], root[v], 1, n);\n    }\n    for (int i = 0; i < q[u].size(); i++)\n        res[q[u][i].second] = query(root[u], 1, n, q[u][i].first, n);\n}\n\nint main()\n{\n    memset(h, -1, sizeof h);\n    n = read(), m = read();\n    for (int i = 1; i <= n - 1; i++)\n    {\n        int a = read(), b = read();\n        add(a, b);\n        add(b, a);\n    }\n    dfs1(1, 0);\n    for (int i = 1; i <= n; i++) insert(root[i], 1, n, dep[i]);\n    int last_dep = n + 1;\n    int cnt = 0;\n    for (int i = 1; i <= m; i++)\n    {\n        int op = read(), u = read();\n        if (op == 1) last_dep = u;\n        else q[u].push_back({last_dep, ++cnt});\n    }\n    dfs2(1, 0);\n    for (int i = 1; i <= cnt; i++)\n        printf(\"%d\\n\", res[i]);\n    return 0;\n}\n```\n\n",
        "postTime": 1667958694,
        "uid": 587248,
        "name": "wcywcywcywcy",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P8844"
    },
    {
        "content": "\u601d\u7ef4\u4e0d\u591f\uff0c\u6570\u636e\u7ed3\u6784\u6765\u51d1\u3002\n\n\u67e5\u8be2\u5b50\u6811\u5185\u6ee1\u8db3\u6df1\u5ea6\u7684\u6761\u4ef6\u7684\u70b9\u6570\u662f\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u7ebf\u6bb5\u6811\u5408\u5e76 trick \u4e86\u5427\u3002\n\n\u8003\u8651\u5c06\u6240\u6709\u7684\u67e5\u8be2\u64cd\u4f5c\u79bb\u7ebf\u4e0b\u6765\u3002\u5bf9\u4e8e\u4e00\u4e2a\u67e5\u8be2\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u6700\u521d\u4f1a\u5c06\u5168\u90e8\u6811\u6d82\u6210\u7eff\u8272\uff0c\u6240\u4ee5\u5f53\u4e14\u4ec5\u5f53\u5728\u5b83\u4e4b\u524d\u6700\u540e\u4e00\u4e2a\u6267\u884c\u7684\u4fee\u6539\u64cd\u4f5c\u4f1a\u5bf9\u5b83\u4f5c\u51fa\u8d21\u732e\u3002\n\n\u79bb\u7ebf\u4e0b\u6765\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u5b58\u50a8\u8fd9\u4e2a\u67e5\u8be2\u64cd\u4f5c\u524d\u7684\u90a3\u4e2a\u4fee\u6539\u64cd\u4f5c\u3002\u6bcf\u4e2a\u67e5\u8be2\uff0c\u53ea\u9700\u8981\u8be2\u95ee\u8be5\u5b50\u6811\u5185\u6df1\u5ea6\u5927\u4e8e\u7b49\u4e8e\u4e0a\u4e00\u6b21\u4fee\u6539\u64cd\u4f5c\u7684\u4fee\u6539\u6df1\u5ea6\u7684\u8282\u70b9\u4e2a\u6570\u5373\u53ef\u3002\n\n\u7ebf\u6bb5\u6811\u5408\u5e76\u4ee3\u7801\u5f88\u77ed\uff0c\u4f46\u662f\u522b\u5fd8\u4e86\u6700\u540e\u8981 ``pushup``\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 0x3f3f3f3f\n//#define LL_inf 1145141919810\n#define ull unsigned long long\n#define ll long long\nusing namespace std;\n//#define int long long\nconst int Maxn=1e5+10;\nint n,m;\nint dep[Maxn];\nint head[Maxn],tot;\nstruct Edge{\n\tint to;\n\tint nxt;\n}E[Maxn<<1];\nvoid addedge(int u,int v)\n{\n\ttot++;\n\tE[tot].to=v;\n\tE[tot].nxt=head[u];\n\thead[u]=tot;\n}\nstruct segtree{\n\tint lson,rson;\n\tint val;\n}t[Maxn<<5];\nint nodenum;\nint newnode()\n{\n\treturn ++nodenum;\n}\nvoid pushup(int node)\n{\n\tt[node].val=t[t[node].lson].val+t[t[node].rson].val;\n}\nvoid update(int &node,int l,int r,int pos)\n{\n\tif(!node)\n\t{\n\t\tnode=newnode();\n\t}\n\tif(l==r)\n\t{\n\t\tt[node].val++;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)\n\t{\n\t\tupdate(t[node].lson,l,mid,pos);\n\t}else{\n\t\tupdate(t[node].rson,mid+1,r,pos);\n\t}\n\tpushup(node);\n}\nint query(int node,int l,int r,int ql,int qr)\n{\n\tif(ql>=qr) return 0;\n\tif(!node) return 0;\n\tif(ql<=l && r<=qr)\n\t{\n\t\treturn t[node].val;\n\t}\n\tint mid=(l+r)>>1,sum=0;\n\tif(ql<=mid)\n\t{\n\t\tsum+=query(t[node].lson,l,mid,ql,qr);\n\t}\n\tif(qr>mid)\n\t{\n\t\tsum+=query(t[node].rson,mid+1,r,ql,qr);\n\t}\n\treturn sum;\n}\nint root[Maxn];\nvoid dfs(int u,int fa)\n{\n\tdep[u]=dep[fa]+1;\n\tfor(int i=head[u];i;i=E[i].nxt)\n\t{\n\t\tint v=E[i].to;\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\n\t}\n}\nint merge(int u,int v,int l,int r)\n{\n\tif(!u || !v)\n\t{\n\t\treturn u+v;\n\t}\n\tif(l==r)\n\t{\n\t\tt[u].val+=t[v].val;\n\t\treturn u; \n\t}\n\tint mid=(l+r)>>1;\n\tt[u].lson=merge(t[u].lson,t[v].lson,l,mid);\n\tt[u].rson=merge(t[u].rson,t[v].rson,mid+1,r);\n\tpushup(u);\n\treturn u;\n}\nstruct Queris{\n\tint id;\n\tint d;\n};\nvector<Queris> Q[Maxn];\nint res[Maxn]; \nvoid dfs2(int u,int fa)\n{\n\tupdate(root[u],1,n,dep[u]);\n\tfor(int i=head[u];i;i=E[i].nxt)\n\t{\n\t\tint v=E[i].to;\n\t\tif(v==fa) continue;\n\t\tdfs2(v,u);\n\t\troot[u]=merge(root[u],root[v],1,n);\n\t}\n\t\n\tfor(auto i:Q[u])\n\t{\n\t\tint id=i.id;\n\t\tint depth=i.d;\n\t\tres[id]=query(root[u],1,n,depth,n);\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\taddedge(u,v);\n\t\taddedge(v,u);\n\t}\n\tdfs(1,0);\n\tint lst=n+1;\n\tmemset(res,-1,sizeof(res));\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint opt;\n\t\tscanf(\"%d\",&opt);\n\t\tif(opt==1)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tlst=x;\n\t\t}else{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tQ[x].push_back((Queris){i,lst});\n\t\t}\n\t}\n\t\n\tdfs2(1,0);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(res[i]==-1) continue;\n\t\tprintf(\"%d\\n\",res[i]);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1682773346,
        "uid": 358739,
        "name": "BFSDFS123",
        "ccfLevel": 0,
        "title": "P8844 [\u4f20\u667a\u676f #4 \u521d\u8d5b] \u5c0f\u5361\u4e0e\u843d\u53f6 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P8844)\n\n\u8fd9\u9898\u771f\u7684\u6709\u84dd\u5417\uff1f~~\u867d\u7136\u5f53\u65f6\u6211\u6253\u4f20\u667a\u676f\u7684\u65f6\u5019\u6ca1\u6709\u5207\u51fa\u6765~~\uff0c\u4f46\u662f\u73b0\u5728\u770b\u6765\u5c31\u662f\u4e00\u4e2a\u50bb\u5b50\u9898\u3002\n\n## \u601d\u8def\n\n\u5bb9\u6613\u7684\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u4e0d\u540c\u7684 $1$ \u64cd\u4f5c\u7684\u5f71\u54cd\u662f\u91cd\u590d\u8986\u76d6\u6ef4\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u6700\u540e\u4e00\u6b21 $1$ \u64cd\u4f5c\u5e72\u4e86\u4ec0\u4e48\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u5c31\u662f\u677f\u5b50\u4e86\uff0c\u8bb0 $la$ \u8868\u793a\u4e0a\u4e00\u4e2a $1$ \u64cd\u4f5c\u3002\u5148\u6839\u636e $\\verb!DFS!$ \u5e8f\u628a\u6811\u62cd\u6241\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55 $minx_x$ \u548c $maxx_x$ \u8868\u793a\u5b83\u5b50\u6811\u7684 $\\verb!DFS!$ \u5e8f\u8986\u76d6\u8303\u56f4\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u67e5\u8be2\u64cd\u4f5c\u5c31\u662f\u9759\u6001\u4e8c\u7ef4\u6570\u70b9\uff0c\u6c42\u6a2a\u5750\u6807\u5728 $minx_x$ \u548c $maxx_x$ \u4e4b\u95f4\uff0c\u7eb5\u5750\u6807\u5728 $la$ \u548c $10^5$ \u4e4b\u95f4\u7684\u70b9\u6570\u3002\n\n\u4e8e\u662f\u76f4\u63a5\u4e3b\u5e2d\u6811\u65e0\u8111\u7ef4\u62a4\u5373\u53ef\u3002\u5f53\u7136\u4f60\u60f3\u79bb\u7ebf\u6811\u72b6\u6570\u7ec4\u4e5f\u53ef\u4ee5\uff0c\u8dd1\u7684\u6bd4\u4e3b\u5e2d\u6811\u66f4\u5feb\uff0c~~\u4e0d\u8fc7\u51fa\u9898\u4eba\u53ef\u4ee5\u5361\u4f60\u5f3a\u5236\u5728\u7ebf~~\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint const N=1e5+10;\nvector<int>a[N];\nint cnt=1,root[N];\nstruct hjt_Tree{\n    #define ls(x) (lc[x])\n    #define rs(x) (rc[x])\n    #define mid ((l+r)>>1)\n    int lc[N*40],rc[N*40],c[N*40];\n    inline int clone(int la){++cnt;ls(cnt)=ls(la);rs(cnt)=rs(la);c[cnt]=c[la];return cnt;}\n    inline void update(int &rt,int la,int l,int r,int p){\n        rt=clone(la);if (l==r){++c[rt];return;}\n        if (p<=mid) update(ls(rt),ls(la),l,mid,p);\n        else update(rs(rt),rs(la),mid+1,r,p);\n        c[rt]=c[ls(rt)]+c[rs(rt)];\n    }\n    inline int query(int x,int l,int r,int ll,int rr){\n        if (ll<=l && r<=rr) return c[x];\n        int res=0;\n        if (ll<=mid) res+=query(ls(x),l,mid,ll,rr);\n        if (mid<rr) res+=query(rs(x),mid+1,r,ll,rr);\n        return res;\n    }\n}T;//\u4e3b\u5e2d\u6811\u677f\u5b50\u90e8\u5206\nint minx[N],maxx[N],dep[N],chag[N],dfn[N],tot;\ninline void dfs(int x,int fa){\n    dfn[x]=minx[x]=maxx[x]=++tot;\n    dep[x]=dep[fa]+1;chag[dfn[x]]=dep[x];\n    for (auto v:a[x]) if (v^fa) dfs(v,x),minx[x]=min(minx[x],minx[v]),maxx[x]=max(maxx[x],maxx[v]);\n}//\u6839\u636e DFS \u5e8f\u628a\u6811\u62cd\u6241\nsigned main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0),cout.tie(0);\n    int n,m;cin>>n>>m;\n    for (int i=1;i<n;++i){\n        int u,v;cin>>u>>v;\n        a[u].push_back(v);\n        a[v].push_back(u);\n    }\n    root[0]=1;dfs(1,0);\n    for (int i=1;i<=n;++i) T.update(root[i],root[i-1],1,100000,chag[i]);\n    int la=0;\n    while (m--){\n        int opt,x;cin>>opt>>x;\n        if (opt==1) la=x;\n        else{\n            if (!la) cout<<\"0\\n\";\n            else{\n                cout<<T.query(root[maxx[x]],1,100000,la,100000)-\n                      T.query(root[minx[x]-1],1,100000,la,100000)<<'\\n';//\u76f4\u63a5\u65e0\u8111\u67e5\u8be2\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1668328363,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "P8844 [\u4f20\u667a\u676f #4 \u521d\u8d5b] \u5c0f\u5361\u4e0e\u843d\u53f6"
    },
    {
        "content": "\u770b\u5230\u5b50\u6811\u7edf\u8ba1\uff0c\u53ef\u4ee5\u6c42\u51fa\u6811\u7684 dfs \u5e8f\u3002\u8fd9\u6837\u5c31\u628a\u5b50\u6811\u4e0a\u7684\u7edf\u8ba1\u8f6c\u5316\u6210\u4e86\u533a\u95f4\u7684\u7edf\u8ba1\u3002\n\n\u9898\u4e2d\u7684\u64cd\u4f5c\u53ef\u4ee5\u8f6c\u5316\u4e00\u4e0b\u3002\u6c42\u4e00\u4e2a\u5b50\u6811\u6709\u591a\u5c11\u4e2a\u6df1\u5ea6\u4e0d\u5c0f\u4e8e $x$ \u7684\u8282\u70b9\u3002\n\n\u4e00\u79cd\u6734\u7d20\u7684\u65b9\u6cd5\u5c31\u662f\u5f00\u4e00\u4e2a $n^2$ \u7684\u6570\u7ec4\uff0c\u9884\u5904\u7406\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u7684\u6bcf\u4e2a\u6df1\u5ea6\u7684\u8282\u70b9\u7684\u4e2a\u6570\u3002\u4f46\u662f $n$ \u662f $10^5$ \u7ea7\u7684\uff0c\u65e0\u6cd5\u901a\u8fc7\u3002\u53ef\u4ee5\u4f7f\u7528\u5206\u5757\u4f18\u5316\u3002\n\n$f_{i,j}$ \u4e3a dfs \u5e8f\u5728\u7b2c $i$ \u5757\u5185\uff0c\u6df1\u5ea6\u4e3a $j$ \u7684\u8282\u70b9\u7684\u6570\u91cf\u3002\u8fd9\u6837\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u6811\u5bf9\u5e94\u7684\u533a\u95f4\uff0c\u5b8c\u6574\u5757\u76f4\u63a5\u52a0\u4e0a\uff0c\u96f6\u6563\u5757\u76f4\u63a5\u66b4\u529b\u6c42\u5c31\u884c\u4e86\u3002\u590d\u6742\u5ea6 $O((m+n)\\sqrt n)$\u3002\n\n\u6ce8\u610f\uff1a\u533a\u5206\u771f\u5b9e\u7684\u7f16\u53f7\u548c dfs \u5e8f\uff0c\u7b2c\u4e00\u6b21\u4fee\u6539\u64cd\u4f5c\u524d\u53ef\u80fd\u6709\u67e5\u8be2\u64cd\u4f5c\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=300,T=410;\nint f[N+5][100005],idx,dfn[200005],sd[200005],n,m,bh[200005],st[N+5],ed[N+5],dep[200005],ss=100001,mk[200005],ys[100005];\nvector<int>e[200005];\nvoid dfs(int x){\n\tdfn[x]=++idx,mk[x]=1,ys[idx]=x;\n\tfor(int i=0;i<e[x].size();i++)if(mk[e[x][i]]==0)dep[e[x][i]]=dep[x]+1,dfs(e[x][i]);\n\tsd[x]=idx;\n}\nint solve(int l,int r){\n\tint res=0;\n\tfor(int i=l;i<=r;i++)res+=dep[ys[i]]>=ss;\n\treturn res;\n}\nint Solve(int l,int r){\n\tint ll=bh[l]+1,rr=bh[r]-1,res=0;\n\tif(bh[l]==bh[r])return solve(l,r);\n\tfor(int i=ll;i<=rr;i++)res+=f[i][ss];\n\tres+=solve(l,st[ll]-1)+solve(ed[rr]+1,r);\n\treturn res;\n}\nint main(){\n\tcin>>n>>m;\n\tdep[1]=1;\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\te[x].push_back(y);\n\t\te[y].push_back(x);\n\t}\n\tdfs(1);\n\tfor(int i=1;i<=100000;i++)bh[i]=(i-1)/T+1;\n\tfor(int i=1;i<=N;i++)st[i]=(i-1)*T+1,ed[i]=i*T;\n\tfor(int i=1;i<=n;i++)f[bh[dfn[i]]][dep[i]]++;\n\tfor(int i=1;i<=N;i++)for(int j=n;j>=1;j--)f[i][j]+=f[i][j+1];\n\twhile(m--){\n\t\tint op,x;\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1)scanf(\"%d\",&ss);\n\t\telse{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tprintf(\"%d\\n\",Solve(dfn[x],sd[x]));\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1668046104,
        "uid": 555287,
        "name": "_ANIG_",
        "ccfLevel": 5,
        "title": "\u5c0f\u5361\u4e0e\u843d\u53f6 \u9898\u89e3"
    }
]