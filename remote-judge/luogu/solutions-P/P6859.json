[
    {
        "content": "## UPD on 2020.11.23\n\n\u611f\u8c22\u795e\u4ed9\u9a8c\u9898\u4eba @[QuantAsk](https://www.luogu.com.cn/user/52918) \u548c @[beginend](https://www.luogu.com.cn/user/11788) CCCCOrz\u3002\n\n\u8fd9\u9053\u9898\u7684 idea \u6700\u521d\u6765\u6e90\u4e8e [P3514 [POI2011]LIZ-Lollipop](https://www.luogu.com.cn/problem/P3514)\uff0c\u90a3\u9053\u9898\u5229\u7528\u5176\u5b83\u6027\u8d28\u53ef\u4ee5 $O(n)$ \u9884\u5904\u7406\u7b54\u6848\uff0c$O(1)$ \u56de\u7b54\u3002\u5e76\u4e0d\u652f\u6301\u4fee\u6539\u64cd\u4f5c\u3002\n\n\u7136\u540e\u6709\u4e00\u5929\u548c QuantAsk \u8ba8\u8bba\u8fd9\u9898\u7684\u65f6\u5019\u60f3\u51fa\u4e86\u652f\u6301\u4fee\u6539\u7684 $O(m\\log n)$ \u505a\u6cd5\uff0c\u7136\u540e\u5c31\u6709\u4e86\u8fd9\u9053\u9898 /fad\u3002\n\n\u770b\u5230\u6709\u4eba\u8bf4\u8fd9\u9053\u9898\u5361\u5e38 /kk\uff0c\u5c06\u6570\u636e\u8303\u56f4\u5f00\u8fd9\u4e48\u5927\u662f\u56e0\u4e3a $O(m\\log^2 n)$ \u505a\u6cd5\u5e38\u6570\u5b9e\u5728\u662f\u592a\u5c0f\u4e86\uff0c\u6211\u5c1d\u8bd5\u6784\u9020\u4e86\u5f88\u591a\u6570\u636e\u90fd\u53ef\u4ee5\u8f7b\u677e\u8dd1\u8fc7\uff0c\u6240\u4ee5\u6700\u7ec8\u53ea\u80fd\u5728\u6570\u636e\u8303\u56f4\u4e0b\u624b\u3002\n\n\u6709\u795e\u4ed9\u5199\u7ebf\u6bb5\u6811\u88ab\u5361\u5e38\uff0c\u4f46[\u6211](https://www.luogu.com.cn/record/40801885)\u548c[\u9a8c\u9898\u4eba](https://www.luogu.com.cn/record/39605372)\u7684\u9012\u5f52\u7248\u7ebf\u6bb5\u6811\u90fd\u662f\u53ef\u4ee5\u5728\u4e0d\u52a0 O2 \u4e0b $2s$ \u8dd1\u8fc7\u7684\u3002\u81f3\u4e8e\u6709\u795e\u4ed9\u5199 Splay\u3002\u3002\u3002\u90a3\u6211\u771f\u7684\u611f\u5230\u62b1\u6b49\u4e86 /kel\u3002\n\nstd \u662f\u6811\u72b6\u6570\u7ec4\uff0c\u6240\u4ee5\u5e38\u6570\u5c0f\u4e00\u70b9\uff0c\u6211\u5c1d\u8bd5\u4e86\u5f88\u591a\u6b21\uff0c\u5728\u4e0d\u52a0 O2 \u4e0b\u90fd\u53ef\u4ee5\u5728 $1s$ \u5185\u8dd1\u8fc7\u3002\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 $1,2$ \u5e8f\u5217\u3002\u8981\u6c42\u652f\u6301\u5355\u70b9\u4fee\u6539\uff0c\u67e5\u8be2\u548c\u4e3a $k$ \u4e14\u5de6\u7aef\u70b9\u5c3d\u91cf\u5c0f\u7684\u533a\u95f4\u3002 \n\n## \u7b97\u6cd5 1\n\n\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u53d1\u73b0\u5728\u5de6\u7aef\u70b9\u4e0d\u65ad\u5411\u53f3\u626b\u63cf\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\u4e5f\u4e00\u5b9a\u5355\u8c03\u4e0d\u51cf\u3002\u6240\u4ee5\u4e0d\u7528\u6bcf\u6b21\u91cd\u65b0\u5f00\u59cb\u626b\u63cf\u53f3\u7aef\u70b9\uff0c\u5728\u4e0a\u4e00\u6b21\u626b\u63cf\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u5411\u53f3\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm)$\uff0c\u671f\u671b\u5f97\u5206 $20pts$\u3002\n\n## \u7b97\u6cd5 2\n\n\u5c06\u539f\u5e8f\u5217\u505a\u524d\u7f00\u548c\uff0c\u8bbe\u505a\u524d\u7f00\u548c\u540e\u7684\u5e8f\u5217\u4e3a $s$\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u6700\u5c0f\u7684\u4e24\u4e2a\u4f4d\u7f6e $i,j$ \u4f7f\u5f97 $s_j-s_i=k$\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8e\u5c06\u5e8f\u5217 $s$ \u7684\u4e00\u6bb5\u540e\u7f00\u5168\u90e8\u52a0\u4e0a\u4e00\u4e2a\u6570\uff1b\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u53ef\u4ee5\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u4e8c\u5206\u51fa\u53f3\u7aef\u70b9\uff0c\u5982\u679c\u8fd9\u4e00\u6bb5\u533a\u95f4\u7684\u548c\u4e3a $k$ \u5373\u4e3a\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm\\log n)$ \u6216 $O(nm\\log^2 n)$\uff0c\u53d6\u51b3\u4e8e\u662f\u5728\u6570\u636e\u7ed3\u6784\u5185\u4e8c\u5206\u8fd8\u662f\u4e8c\u5206\u5957\u6570\u636e\u7ed3\u6784\u3002\u5199\u7684\u597d\u770b\u4e00\u4e9b\u6216\u8bb8\u53ef\u4ee5\u62ff\u5230 $20pts$\u3002\n\n\u751a\u81f3\u6ca1\u6709\u7b97\u6cd5 1 \u4f18\u79c0\u3002\n\n## \u7b97\u6cd5 3\n\n\u5728\u7b97\u6cd5 2 \u4e2d\uff0c\u5bb9\u6613\u53d1\u73b0\u6211\u4eec\u4e8c\u5206\u51fa\u7684\u6bcf\u4e00\u6bb5\u533a\u95f4\u548c\u8981\u4e48\u662f $k$\uff0c\u8981\u4e48\u662f $k+1$\u3002\u56e0\u4e3a\u5982\u679c\u548c\u5927\u4e8e $k+1$ \u7684\u8bdd\uff0c\u53f3\u7aef\u70b9\u5411\u5de6\u79fb\u52a8\u4e00\u4f4d\u548c\u80af\u5b9a\u4e0d\u5c0f\u4e8e $k$\u3002\n\n\u5047\u8bbe\u6211\u4eec\u4e8c\u5206\u51fa\u7684\u4e24\u4e2a\u533a\u95f4\u4e3a $[l,r_1]$ \u548c $[l+1,r_2]$\uff0c\u4e14\u8fd9\u4e24\u4e2a\u533a\u95f4\u7684\u548c\u5747\u4e3a $k+1$\uff0c\u90a3\u4e48\uff1a\n\n- $a_l$ \u4e00\u5b9a\u7b49\u4e8e $2$\uff0c\u5426\u5219 $[l+1,r_1]$ \u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u548c\u4e3a $k$ \u7684\u533a\u95f4\u3002\n\n- $a_{r_1}$ \u4e00\u5b9a\u7b49\u4e8e $2$\uff0c\u5426\u5219 $[l,r_1-1]$ \u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u548c\u4e3a $k$ \u7684\u533a\u95f4\u3002\n\n- $r_2=r_1+1$\uff0c\u56e0\u4e3a $\\sum^{r_1}_{i=l} a_i=\\sum^{r_2}_{i=l+1}a_i-\\sum^{r_2}_{i=r_1+1}a_i+a_l$\uff0c\u800c $a_l=2$\uff0c\u5f53 $r_2>r_1+1$ \u65f6\uff0c $\\sum^{r_2}_{i=r_1+1}a_i=2$ \u5f53\u4e14\u4ec5\u5f53 $r_2=r_1+2$ \u4e14 $a_{r_1+1}=a_{r_1+2}=1$\uff0c\u6b64\u65f6\u533a\u95f4 $[l,r_1+1]$ \u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u548c\u4e3a $k$ \u7684\u533a\u95f4\u3002\n\n\u6700\u540e\u4e00\u70b9\u6362\u53e5\u8bdd\u8bf4\uff0c\u9ec4\u8272\u90e8\u5206\u7684\u548c\u4e00\u5b9a\u7b49\u4e8e\u84dd\u8272\u90e8\u5206\u7684\u548c\uff0c\u800c\u84dd\u8272\u90e8\u5206\u7684\u548c\u4e3a $2$\uff0c\u90a3\u4e48\u53ea\u6709\u5f53 $r_2=r_1+1$ \u4e14 $a_{r_2}=2$ \u65f6\u624d\u6ee1\u8db3\u6761\u4ef6\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vtvb4m6y.png)\n\n\u90a3\u5982\u679c\u518d\u52a0\u5165\u4e00\u4e2a\u533a\u95f4 $[l+2,r_3]$\uff0c\u90a3\u4e48\u5c31\u6709 $a_{l+1}=a_{r2}=2,r_3=r_2+1$\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u53ea\u8981\u63a5\u4e0b\u6765\u6709\u4e00\u4e2a\u4f4d\u7f6e\u4e0d\u662f $2$ \u4e86\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u548c\u4e3a $k+1$ \u7684\u533a\u95f4\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\u533a\u95f4\u4e0e\u8fde\u7eed\u7684 $2$ \u7684\u4e2a\u6570\u6709\u5173\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\uff0c\u4e8c\u5206\u51fa\u4ece\u4f4d\u7f6e $1$ \u5f00\u59cb\u548c\u4e0d\u5c0f\u4e8e $k$ \u7684\u533a\u95f4 $[1,p]$\u3002\u7136\u540e\u518d\u7528\u6570\u636e\u7ed3\u6784\u6c42\u51fa\u4f4d\u7f6e $1$ \u548c\u4f4d\u7f6e $p$ \u540e\u8fde\u7eed\u7684 $2$ \u7684\u4e2a\u6570\uff0c\u5047\u8bbe\u5206\u522b\u4e3a $cnt1$ \u4e2a\u548c $cnt2$ \u4e2a\uff0c\n\n- \u5f53 $cnt1<cnt2$ \u65f6\uff0c\u533a\u95f4 $[2+cnt1,p+cnt1]$ \u5373\u4e3a\u7b54\u6848\u3002\n\n- \u5f53 $cnt1\\geq cnt2$ \u65f6\uff0c\u533a\u95f4 $[1+cnt2,p+cnt2]$ \u5373\u4e3a\u7b54\u6848\u3002\n\n\u53ef\u4ee5\u624b\u5199\u5c0f\u6570\u636e\u6765\u7406\u89e3\u3002\n\n\u90a3\u4e48\u6211\u4eec\u9700\u8981\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\uff1a\n\n1. \u5982\u4f55\u627e\u5230\u7b2c\u4e00\u4e2a\u524d\u7f00\u548c\u4e0d\u5c0f\u4e8e $k$ \u7684\u4f4d\u7f6e\u3002\n\n2. \u5982\u4f55\u6c42\u51fa\u4e00\u4e2a\u4f4d\u7f6e\u540e\u9762\u6709\u591a\u5c11\u4e2a\u8fde\u7eed\u7684 $2$\u3002\n\n\u5bf9\u4e8e\u95ee\u9898 1\uff0c\u76f4\u63a5\u91c7\u7528\u4e8c\u5206+\u6570\u636e\u7ed3\u6784\u5373\u53ef\u3002\u5bf9\u4e8e\u95ee\u9898 2\uff0c\u4f9d\u7136\u53ef\u4ee5\u4e8c\u5206\u957f\u5ea6\uff0c\u5047\u8bbe\u4e3a $len$\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5224\u65ad\u533a\u95f4 $[p,p+len-1]$ \u7684\u548c\u662f\u5426\u4e3a $2\\times len$ \u5373\u53ef\u3002\n\n\u91c7\u7528\u6811\u72b6\u6570\u7ec4\u6216\u8005\u7ebf\u6bb5\u6811\u5b9e\u73b0\u5747\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log^2 n)$\uff0c\u671f\u671b\u5f97\u5206 $50pts$\u3002\n\n## \u7b97\u6cd5 4\n\n\u53ef\u4ee5\u5728\u7b97\u6cd5 3 \u7684\u57fa\u7840\u4e0a\uff0c\u5728\u6570\u636e\u7ed3\u6784\u5185\u4e8c\u5206\u3002\u53ef\u4ee5\u7701\u6389\u4e00\u4e2a $\\log$\u3002\n\n\u6811\u72b6\u6570\u7ec4\u4e8c\u5206\u6216\u7ebf\u6bb5\u6811\u4e8c\u5206\u5747\u53ef\uff0c\u540e\u8005\u5199\u6cd5\u4e0d\u4f18\u7f8e\u53ef\u80fd\u4f1a\u88ab\u5361\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log n)$\uff0c\u671f\u671b\u5f97\u5206 $100pts$\u3002",
        "postTime": 1600246276,
        "uid": 53962,
        "name": "stoorz",
        "ccfLevel": 7,
        "title": "\u8774\u8776\u4e0e\u82b1 \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\u7b80\u8ff0\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$ \uff08$\\forall a_i\\in\\{1,2\\}$\uff09\uff0c\u5e26\u4fee\uff0c\u6bcf\u6b21\u8be2\u95ee\u5e8f\u5217\u4e2d\u662f\u5426\u6709\u4e00\u6bb5\u533a\u95f4\u533a\u95f4\u548c\u4e3a $s$\u3002   \n\n\u53d1\u73b0\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u65b9\u6848\u5de6\u7aef\u70b9\u6700\u5c0f\uff0c\u6240\u4ee5\u8003\u8651\u4ece $1$ \u5411\u53f3\u79fb\u52a8\u5de6\u7aef\u70b9\u5bfb\u627e\u7b2c\u4e00\u4e2a\u5408\u6cd5\u65b9\u6848\u3002   \n\n\u7531\u4e8e\u5e8f\u5217\u4e2d\u7684\u6570\u4ec5\u6709 $1,2$ \u4e24\u79cd\uff0c\u6240\u4ee5\u4e00\u4e2a\u5de6\u7aef\u70b9\u4e0d\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53\u5176\u5411\u53f3\u7b2c\u4e00\u4e2a\u4f7f\u533a\u95f4\u548c\u5927\u4e8e\u7b49\u4e8e $s$ \u7684\u4f4d\u7f6e\u7684\u6570\u4e3a $2$\uff0c\u4e14\u8fd9\u6bb5\u7684\u533a\u95f4\u548c\u6070\u597d\u7b49\u4e8e $s+1$\u3002  \n\n\u73b0\u5728\u6211\u4eec\u5411\u53f3\u79fb\u52a8\u5de6\u7aef\u70b9\uff0c\u5e0c\u671b\u4e0a\u8ff0\u533a\u95f4\u548c\u4ece $s+1$ \u53d8\u4e3a $s$ \uff0c\u5373\u533a\u95f4\u548c\u51cf $1$\u3002   \n\n\u6bcf\u6b21\u5de6\u7aef\u70b9\u52a0 $1$\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a    \n1. \u539f\u533a\u95f4\u5de6\u7aef\u70b9\u7684\u6570\u4e3a $1$  \n\t\u53f3\u7aef\u70b9\u4e0d\u53d8\uff0c\u533a\u95f4\u548c\u51cf $1$ \uff0c\u627e\u5230\u7b54\u6848\u3002\n2. \u539f\u533a\u95f4\u53f3\u7aef\u70b9\u53f3\u8fb9\u4e00\u4e2a\u6570\u4e3a $1$    \n\t\u53f3\u7aef\u70b9\u52a0 $1$ \uff0c\u533a\u95f4\u548c\u51cf $2$\uff08\u5de6\uff09 \u52a0 $1$\uff08\u53f3\uff09\uff0c\u5171\u8ba1\u51cf $1$ \uff0c\u627e\u5230\u7b54\u6848\u3002   \n3. \u539f\u533a\u95f4\u5de6\u7aef\u70b9\u53ca\u53f3\u7aef\u70b9\u53f3\u8fb9\u4e00\u4e2a\u6570\u4e3a\u5747\u4e3a $2$    \n\t\u65b0\u533a\u95f4\u53f3\u7aef\u70b9\u52a0 $1$\uff0c\u533a\u95f4\u548c\u51cf $2$\uff08\u5de6\uff09 \u52a0 $2$\uff08\u53f3\uff09\uff0c\u5171\u8ba1\u4e0d\u53d8\uff0c\u672a\u627e\u5230\u7b54\u6848\u3002   \n    \n\u4e8e\u662f\u8fd9\u4e2a\u9898\u5c31\u53d8\u6210\u4e86\u5bfb\u627e\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u53f3\u8fb9\u7b2c\u4e00\u4e2a $1$ \u7684\u4f4d\u7f6e\u3002\u3002\u3002\n\n\u8fd9\u4e2a\u7528\u7ebf\u6bb5\u6811\u5927\u529b\u7ef4\u62a4\u5c31\u597d\u4e86\u3002\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u7ebf\u6bb5\u6811\uff0c\u4e00\u4e2a\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u4e00\u4e2a\u7ef4\u62a4\u533a\u95f4\u5185 $1$ \u7684\u4e2a\u6570\u3002\u7136\u540e\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5b9e\u73b0\u3002    \n\n\u5177\u4f53\u5b9e\u73b0\u89c1[\u4ee3\u7801](https://www.luogu.com.cn/paste/pak7zv1p)\u3002\n\n\u6ce8\u610f\u8fd9\u9898\u5361\u5e38\uff08\u4e5f\u53ef\u80fd\u662f\u6211\u592a\u83dc\u4e86qwq\uff09\uff0c\u6211\u628a\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u7684\u5b9e\u73b0\u7531\u9012\u5f52\u6539\u4e3a\u5faa\u73af\u624d\u8fc7\u7684\u3002",
        "postTime": 1603103209,
        "uid": 35137,
        "name": "a___",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6859\u3010\u8774\u8776\u4e0e\u82b1\u3011"
    },
    {
        "content": "## P6859\n\n\u4e0d\u96be\u60f3\u5230\uff0c\u8981\u4f7f\u533a\u95f4\u7684 $l$ \u5c3d\u91cf\u5c0f\uff0c\u90a3\u4e48\u6700\u4f18\u60c5\u51b5\u80af\u5b9a\u662f\u4ece\u6700\u5de6\u7aef\u5f00\u59cb\u53d6\u3002\n\n\u7531\u4e8e\u5e26\u4fee\uff0c\u6240\u4ee5\u76f4\u63a5\u8003\u8651\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u5982\u679c\u6070\u597d\u5b58\u5728\u4e00\u4e2a\u70b9 $r$\uff0c\u4f7f\u5f97 $\\sum_{i=1}^r a_i=s$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206/\u6811\u72b6\u6570\u7ec4\u4e0a\u4e8c\u5206\u6765\u6c42\u5f97 $r$ \u7684\u503c\u3002\n\n\u5982\u679c\u6ca1\u6709\u7684\u8bdd\uff0c\u6211\u4eec\u5fc5\u7136\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a $r$\uff0c\u4f7f\u5f97 $\\sum_{i=1}^r a_i=s+1$\uff08\u6ce8\u610f\u63d0\u524d\u7279\u5224\u6389 $\\sum_{i=1}^n<s$ \u7684\u60c5\u51b5\uff09\uff0c\u56e0\u4e3a\u4efb\u4f55\u4e00\u4e2a\u503c\u4e0d\u662f $1$ \u5c31\u662f $2$\u3002\u663e\u7136\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c$a_r=2$\uff08\u5426\u5219 $1$ \u548c $r-1$ \u5c31\u6ee1\u8db3\u6761\u4ef6\u4e86\uff09\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u7aef\u70b9\u4e00\u540c\u5411\u540e\u63a8\u3002\u5f53\u63a8\u5230 $a_r=1$ \u65f6\uff0c\u4e14 $a_1$ \u5230 $a_{l-1}$ \u5168\u90e8\u4e3a $2$ \u65f6\uff0c\u8fd9\u4e2a\u533a\u95f4\u5c31\u5408\u6cd5\u4e86\uff08\u56e0\u4e3a\u524d\u9762\u5de6\u8fb9 $-2$ \u53f3\u8fb9 $+2$\uff0c\u533a\u95f4\u7684\u548c\u4e0d\u53d8\uff09\u3002\u6216\u8005\u63a8\u5230\u67d0\u4e2a\u533a\u95f4 $a_l=1$ \u4e14\u53f3\u8fb9\u7684\u90a3\u51e0\u4f4d\u6ca1\u6709\u51fa\u73b0 $1$ \u7684\u65f6\u5019\uff0c\u53d6 $l+1$ \u548c $r$ \u540c\u6837\u5408\u6cd5\u3002\n\n\u5047\u8bbe $1$ \u540e\u7684\u7b2c\u4e00\u4e2a $1$ \u4e3a $pos1$\uff0c$r$ \u540e\u7684\u7b2c\u4e00\u4e2a $1$ \u4e3a $pos2$\uff0c\u5219 $[pos1+1,pos1+r-1]$ \u4e0e $[pos2-r+1,pos2]$ \u4e2d $l$ \u8f83\u5c0f\u7684\u533a\u95f4\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u533a\u95f4\u3002\n\n\u6240\u4ee5\u5b9e\u9645\u4e0a\u6211\u4eec\u5c31\u8981\u8003\u8651\u5de6\u53f3\u54ea\u8fb9\u5148\u51fa\u73b0 $1$\u3002\u4e8e\u662f\u6b64\u65f6\u5c31\u53ef\u4ee5\u8003\u8651\u7528\u4e00\u4e2a set \u5bf9 $1$ \u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u590d\u6742\u5ea6 $\\operatorname O(n\\log n)$\uff0c\u5e38\u6570\u5f88\u5c0f\u3002\n\ncode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 987654321\nusing namespace std;\nint read(){\n\tbool f=1;\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-')f=0;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<3)+(x<<1)-48+c;\n\t\tc=getchar();\n\t}\n\treturn f?x:x*-1;\n}\nchar cr[200];int tt;\ninline void print(register int x,register char k='\\n') {\n    if(!x) putchar('0');\n    if(x < 0) putchar('-'),x=-x;\n    while(x) cr[++tt]=x%10+'0',x/=10;\n    while(tt) putchar(cr[tt--]);\n    putchar(k);\n}\nconst int maxn=2e6+5;\nint t[maxn<<2],n,a[maxn],m;\nset<int> s;\nset<int>::iterator it;\ninline void build(register int o,register int l,register int r){\n\tif(l==r){\n\t\tt[o]=a[l];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(o<<1,l,mid);\n\tbuild(o<<1|1,mid+1,r);\n\tt[o]=t[o<<1]+t[o<<1|1];\n}\ninline void change(register int o,register int l,register int r,register int q){\n\tif(l==r){\n\t\tt[o]=a[l];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(q<=mid) change(o<<1,l,mid,q);\n\telse change(o<<1|1,mid+1,r,q);\n\tt[o]=t[o<<1]+t[o<<1|1];\n}\nstruct ask{\n\tint pos,sum;\n};\ninline ask query(register int o,register int l,register int r,register int sum,register int tar){\n\tif(l==r){\n\t\task tmp;\n\t\ttmp.sum=sum+t[o];\n\t\ttmp.pos=l;\n\t\treturn tmp;\n\t}\n\tint mid=l+r>>1;\n\tif(sum+t[o<<1]>=tar) return query(o<<1,l,mid,sum,tar);\n\telse return query(o<<1|1,mid+1,r,sum+t[o<<1],tar);\n}\nsigned main(){\n\tn=read();m=read();\n\tfor(register int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t\tif(a[i]==1){\n\t\t\ts.insert(i);\n\t\t}\n\t}\n\tbuild(1,1,n);\n\tfor(register int i=1;i<=m;i++){\n\t\tchar ch=getchar();\n\t\twhile(ch!='A'&&ch!='C'){\n\t\t\tch=getchar();\n\t\t}\n\t\tif(ch=='C'){\n\t\t\tint pos=read();\n\t\t\tif(a[pos]==1) s.erase(pos);\n\t\t\ta[pos]=read();\n\t\t\tif(a[pos]==1) s.insert(pos);\n\t\t\tchange(1,1,n,pos);\n\t\t}\n\t\telse{\n\t\t\tint tar=read();\n\t\t\tif(tar==0||tar>t[1]){\n\t\t\t\tputs(\"none\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\task tmp=query(1,1,n,0,tar);\n\t\t\tint pos=tmp.pos;\n\t\t\tint sum=tmp.sum;\n\t\t\twhile(sum<tar){\n\t\t\t\tpos++;\n\t\t\t\tsum+=a[pos];\n\t\t\t}\n\t\t\tif(sum==tar){\n\t\t\t\tprint(1,' ');\n\t\t\t\tprint(pos);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint pos1=inf,pos2=inf,len=pos-1;\n\t\t\tif(s.begin()!=s.end()) pos1=*s.begin();\n\t\t\tit=s.lower_bound(pos);\n\t\t\tif(it!=s.end()) pos2=*it;\n\t\t\tif(pos1+len>n && pos2>n){\n\t\t\t\tputs(\"none\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(pos1>=pos2-len){\n\t\t\t\tprint(pos2-len,' ');\n\t\t\t\tprint(pos2);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprint(pos1+1,' ');\n\t\t\t\tprint(pos1+len);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u672c\u6765\u662f\u6d1b\u8c37\u6700\u5feb\u7684\uff0c\u540e\u6765\u88ab\u4e00\u4e2a\u4eba\u8d85\u4e86\uff08",
        "postTime": 1603291803,
        "uid": 120074,
        "name": "BFqwq",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6859 \u3010\u8774\u8776\u4e0e\u82b1\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u8d85\u96be\u9898\u7684\u6a21\u677f\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u6027\u8d28\uff0c$a_i=1/2$\uff0c\u6211\u654f\u9510\u7684\u611f\u89c9\u5230\u8fd9\u9053\u9898\u53ef\u80fd\u662f\u57fa\u4e8e\u8fd9\u4e2a\u6027\u8d28\u6765\u505a\u7684\n\n\u5148\u4ee4$l=1$\uff0c\u770b\u770b\u662f\u5426\u5b58\u5728$r$\uff0c\u4f7f\u5f97$a_l+...+a_r=s$\n\n\u53d1\u73b0\u4e0d\u5b58\u5728\u8fd9\u4e2a$r$\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728$r$\uff0c\u4f7f\u5f97$\\sum_{i=l}^{r}a_i=s-1\u4e14a_{r+1}=2$\n\n\u5982\u679c\u5b58\u5728$r$\u6ee1\u8db3\uff0c\u5f53\u7136\u76f4\u63a5\u8f93\u51fa\uff0c\u82e5\u662f\u4e0d\u5b58\u5728\n\n\u5fc5\u5b9a\u5f62\u5982![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20201025115453820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01vZGVzdENvZGVyXw==,size_16,color_FFFFFF,t_70#pic_center)\n\n\u8003\u8651\u79fb\u52a8$l,r$\uff0c\u7136\u540e\u8fd9\u4e2a\u65f6\u5019\u4e00\u4e2a\u5fc5\u5b9a\u7684\u6761\u4ef6\u662f$a_{r+1}=2$\n\n\u5982\u679c$a_1=1$\uff0c\u53ef\u4ee5\u4f7f$l+1,r+1$\uff0c\u8fd9\u6837\u6574\u6bb5\u533a\u95f4\u548c+1\uff0c\u5f97\u5230\u7b54\u6848\n\n\u5982\u679c$a_1=2,a_{r+2}=1$\uff0c\u53ef\u4ee5$l+1,r+2$\uff0c\u4e5f\u80fd\u5f97\u5230\u7b54\u6848\n\n\u53d1\u73b0\u5176\u5b9e\u7b54\u6848\u8ddf**l\u53f3\u7aef\u7b2c\u4e00\u4e2a1\u7684\u4f4d\u7f6e\u4e0er\u53f3\u7aef\u7b2c\u4e00\u4e2a1\u7684\u4f4d\u7f6e**\u6709\u5173\n\n\u8bb0$p1,p2$\u5206\u522b\u4ee3\u8868$l,r$\u53f3\u7aef\u7b2c\u4e00\u4e2a1\u7684\u4f4d\u7f6e\n\n\u82e5\u4e0d\u5b58\u5728\u53e6\u884c\u8ba8\u8bba\n\n\u90a3\u4e48\u53c8\u53ef\u4ee5\u5f97\u5230\u4ece$l->p1$\u4e4b\u95f4\u6709$lsum = p1-1$\u4e2a2\n\n$r->p2$\u4e4b\u95f4\u6709$rsum=p2-r-1$\u4e2a2\n\n\u8ba8\u8bba$lsum,rsum$\u7684\u5927\u5c0f\uff08\u5177\u4f53\u539f\u56e0\u53ef\u4ee5\u5728\u8349\u7a3f\u7eb8\u4e0a\u5f97\u51fa\uff09\n\n- $lsum<rsum:l=p1+1,r=p1+r$\n- $lsum=rsum:l=p1,r=p2$\n- $lsum>rsum:l=rsum+1,r=p2$\n\n\u9898\u76ee\u5c31\u505a\u51fa\u6765\u4e86\n\n\u95ee\u9898\u6765\u5230\u5982\u4f55\u6c42\u51fa$r,p1,p2$\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u76f4\u63a5\u6765\u7ef4\u62a4\n\n\u5982\u679c\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u9700\u8981\u5957\u4e0a\u4e8c\u5206\uff0c\u590d\u6742\u5ea6$O(nlog^2n)$\n\n\u5982\u679c\u7528\u7ebf\u6bb5\u6811\uff0c\u76f4\u63a5$O(nlogn)$\n\n\u6211\u4e24\u4e2a\u90fd\u5199\u4e86\n\nCode\u6811\u72b6\u6570\u7ec4\uff08\u8fd9\u4e2a\u8981\u5f00O2\u624d\u80fd\u8fc7\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 2000010\nusing namespace std;\nint tree1[maxn], tree2[maxn], n, m, a[maxn];\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nint lowbit(int x){ return x & -x; }\nvoid update1(int x, int y){ for (; x <= n; x += lowbit(x)) tree1[x] += y; }\nvoid update2(int x, int y){ for (; x <= n; x += lowbit(x)) tree2[x] += y; }\nint query1(int x){ int s = 0; for (; x; x -= lowbit(x)) s += tree1[x]; return s; }\nint query2(int x){ int s = 0; for (; x; x -= lowbit(x)) s += tree2[x]; return s; }\n\nint find(int s){\n\tint l = 1, r = n, ans = -1;\n\twhile (l <= r){\n\t\tint mid = (l + r) >> 1;\n\t\tif (query1(mid) <= s) ans = mid, l = mid + 1; else r = mid - 1;\n\t}\n\treturn ans;\n}\n\nint find1(int x){\n\tint l = x, r = n, ans = -1, base = query2(x - 1);\n\twhile (l <= r){\n\t\tint mid = (l + r) >> 1;\n\t\tif (query2(mid) > base) ans = mid, r = mid - 1; else l = mid + 1;\n\t}\n\treturn ans;\n}\n\nint main(){\n\tn = read(), m = read();\n\tfor (int i = 1; i <= n; ++i){\n\t\ta[i] = read();\n\t\tupdate1(i, a[i]), update2(i, a[i] == 1);\n\t}\n\tint p1 = find1(1);\n\twhile (m--){\n\t\tchar c = getchar();\n\t\tfor (; c != 'C' && c != 'A'; c = getchar());\n\t\tint x = read();\n\t\tif (c == 'A'){\n\t\t\tif (x == 1){\n\t\t\t\tif (p1 == -1) puts(\"none\");\n\t\t\t\telse printf(\"%d %d\\n\", p1, p1); continue;\n\t\t\t}\n\t\t\tif (query1(n) < x){\n\t\t\t\tputs(\"none\"); continue;\n\t\t\t}\n\t\t\tint pos = find(x);\n\t\t\tif (pos < 1){\n\t\t\t\tputs(\"none\"); continue;\n\t\t\t} else\n\t\t\tif (query1(pos) == x){\n\t\t\t\tprintf(\"%d %d\\n\", 1, pos); continue;\n\t\t\t}\n\t\t\tint p2 = find1(pos + 1);\n\t\t\tif (p1 == -1){\n\t\t\t\tputs(\"none\"); continue;\n\t\t\t}\n\t\t\tif (p2 == -1){\n\t\t\t\tif (n - pos <= p1 - 1) puts(\"none\");\n\t\t\t\telse printf(\"%d %d\\n\", p1 + 1, pos + p1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint l1 = p1 - 1, l2 = p2 - pos - 1;\n\t\t\tif (l1 < l2) printf(\"%d %d\\n\", p1 + 1, pos + p1);\n\t\t\telse if (l1 == l2) printf(\"%d %d\\n\", p1, p2);\n\t\t\telse printf(\"%d %d\\n\", l2 + 1, p2);\n\t\t} else{\n\t\t\tint y = read();\n\t\t\tif (a[x] != y){\n\t\t\t\tupdate1(x, -a[x] + y);\n\t\t\t\tif (y == 2) update2(x, -1); else update2(x, 1);\n\t\t\t\ta[x] = y;\n\t\t\t\tp1 = find1(1);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\nCode\u7ebf\u6bb5\u6811\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 2000010\n#define ls rt << 1\n#define rs rt << 1 | 1\nusing namespace std;\nint n, m, a[maxn], ifequal;\nstruct Seg{\n\tint l, r, sum, cnt;\n}seg[maxn << 2];\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nvoid pushup(int rt){\n\tseg[rt].sum = seg[ls].sum + seg[rs].sum;\n\tseg[rt].cnt = seg[ls].cnt + seg[rs].cnt;\n}\n\nvoid build(int rt, int l, int r){\n\tseg[rt].l = l, seg[rt].r = r;\n\tif (l == r){\n\t\tseg[rt].sum = a[l], seg[rt].cnt = (a[l] == 1);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls, l, mid), build(rs, mid + 1, r);\n\tpushup(rt);\n}\n\nvoid update(int rt, int x, int y){\n\tif (seg[rt].l > x || seg[rt].r < x) return;\n\tif (seg[rt].l == seg[rt].r){\n\t\tseg[rt].sum = y;\n\t\tseg[rt].cnt = (y == 1);\n\t\treturn;\n\t}\n\tupdate(ls, x, y), update(rs, x, y);\n\tpushup(rt);\n}\n\nint query(int rt, int x){\n\tif (seg[rt].r <= x) return seg[rt].cnt;\n\tif (seg[rt].l > x) return 0;\n\treturn query(ls, x) + query(rs, x);\n}\n\nint query2(int rt, int x){\n\tif (seg[rt].r <= x) return seg[rt].sum;\n\tif (seg[rt].l > x) return 0;\n\treturn query2(ls, x) + query2(rs, x);\n}\n\nint find1(int rt, int x){\n\tif (seg[rt].l == seg[rt].r) return seg[rt].cnt > x ? seg[rt].l : -1;\n\tif (seg[ls].cnt > x) return find1(ls, x);\n\telse return find1(rs, x - seg[ls].cnt);\n}\n\nint findpos(int rt, int x){\n\tif (seg[rt].sum == x){\n\t\tifequal = 1;\n\t\treturn seg[rt].r;\n\t}\n\tif (seg[rt].sum < x && seg[rt].sum + a[seg[rt].r + 1] > x) return seg[rt].r;\n\tif (seg[rt].l == seg[rt].r) return -1;\n\tif (seg[ls].sum >= x) return findpos(ls, x);\n\telse if (seg[ls].sum < x && seg[ls].sum + a[seg[ls].r + 1] > x) return seg[ls].r;\n\telse return findpos(rs, x - seg[ls].sum);\n}\n\nint main(){\n\tn = read(), m = read();\n\tfor (int i = 1; i <= n; ++i) a[i] = read();\n\tbuild(1, 1, n);\n\tint p1 = find1(1, 0);\n\twhile (m--){\n\t\tchar c = getchar();\n\t\tfor (; c != 'C' && c != 'A'; c = getchar());\n\t\tint x = read();\n\t\tif (c == 'A'){\n\t\t\tif (x == 1){\n\t\t\t\tif (p1 == -1) puts(\"none\");\n\t\t\t\telse printf(\"%d %d\\n\", p1, p1); continue;\n\t\t\t}\n\t\t\tif (seg[1].sum < x){\n\t\t\t\tputs(\"none\"); continue;\n\t\t\t}\n\t\t\tifequal = 0;\n\t\t\tint pos = findpos(1, x);\n\t\t\tif (pos < 1){\n\t\t\t\tputs(\"none\"); continue;\n\t\t\t} else if (ifequal){\n\t\t\t\tprintf(\"%d %d\\n\", 1, pos); continue;\n\t\t\t}\n\t\t\tint p2 = find1(1, query(1, pos));\n\t\t\tif (p1 == -1){\n\t\t\t\tputs(\"none\"); continue;\n\t\t\t}\n\t\t\tif (p2 == -1){\n\t\t\t\tif (n - pos <= p1 - 1) puts(\"none\");\n\t\t\t\telse printf(\"%d %d\\n\", p1 + 1, pos + p1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint l1 = p1 - 1, l2 = p2 - pos - 1;\n\t\t\tif (l1 < l2) printf(\"%d %d\\n\", p1 + 1, pos + p1);\n\t\t\telse if (l1 == l2) printf(\"%d %d\\n\", p1, p2);\n\t\t\telse printf(\"%d %d\\n\", l2 + 1, p2);\n\t\t} else{\n\t\t\tint y = read();\n\t\t\tif (a[x] != y) update(1, x, y), p1 = find1(1, 0), a[x] = y;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u540e\u6765\u6211\u7ffb\u4e00\u7ffb\u9898\u89e3\uff0c\u53d1\u73b0\u5927\u5bb6\u90fd\u628a\u7ebf\u6bb5\u6811\u7684\u51e0\u4e2a\u90e8\u5206\u6539\u6210\u975e\u9012\u5f52\u7248\u672c\u4e86\uff0c\u597d\u50cf\u53ef\u4ee5\u66f4\u5feb\uff0c\u6211\u4e5f\u6539\u4e86\u4e00\u4e0b\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 2000010\n#define ls rt << 1\n#define rs rt << 1 | 1\nusing namespace std;\nstruct Seg{\n\tint l, r, sum, cnt;\n}seg[maxn << 2];\nint  n, m, a[maxn], ifequal;\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nvoid pushup(int rt){\n\tseg[rt].sum = seg[ls].sum + seg[rs].sum;\n\tseg[rt].cnt = seg[ls].cnt + seg[rs].cnt;\n}\n\nvoid build(int rt, int l, int r){\n\tseg[rt].l = l, seg[rt].r = r;\n\tif (l == r){\n\t\tseg[rt].sum = a[l], seg[rt].cnt = a[l] == 1;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls, l, mid), build(rs, mid + 1, r);\n\tpushup(rt);\n}\n\nvoid update(int rt, int x, int y){\n\tif (seg[rt].l == seg[rt].r){\n\t\tseg[rt].sum = y, seg[rt].cnt = (y == 1);\n\t\treturn;\n\t}\n\tif (seg[ls].r >= x) update(ls, x, y);\n\telse update(rs, x, y);\n\tpushup(rt);\n}\n\nint query(int rt, int x){\n\tif (seg[rt].r <= x) return seg[rt].cnt;\n\tif (seg[rt].l > x) return 0;\n\treturn query(ls, x) + query(rs, x);\n}\n\nint find1(int rt, int x){\n\twhile (1){\n\t\tif (seg[rt].l == seg[rt].r){\n\t\t\tif (seg[rt].cnt > x) return seg[rt].l;\n\t\t\telse return -1;\n\t\t}\n\t\tif (seg[ls].cnt > x) rt = ls;\n\t\telse x -= seg[ls].cnt, rt = rs;\n\t}\n\treturn -1;\n}\n\nint findpos(int rt, int x){\n\twhile (1){\n\t\tif (seg[rt].sum == x){\n\t\t\tifequal = 1;\n\t\t\treturn seg[rt].r;\n\t\t}\n\t\tif (seg[rt].sum < x && seg[rt].sum + a[seg[rt].r + 1] > x) return seg[rt].r;\n\t\tif (seg[rt].l == seg[rt].r) return -1;\n\t\tif (seg[ls].sum >= x) rt = ls;\n\t\telse if (seg[ls].sum < x && seg[ls].sum + a[seg[ls].r + 1] > x) return seg[ls].r;\n\t\telse x -= seg[ls].sum, rt = rs;\n\t}\n\treturn -1;\n}\n\nint main(){\n\tn = read(), m = read();\n\tfor (int i = 1; i <= n; ++i) a[i] = read();\n\tbuild(1, 1, n);\n\tint p1 = find1(1, 0);\n\twhile (m--){\n\t\tchar c = getchar();\n\t\tfor (; c != 'C' && c != 'A'; c = getchar());\n\t\tint x = read();\n\t\tif (c == 'A'){\n\t\t\tif (x == 1){\n\t\t\t\tif (p1 == -1) puts(\"none\");\n\t\t\t\telse printf(\"%d %d\\n\", p1, p1); continue;\n\t\t\t}\n\t\t\tif (seg[1].sum < x){\n\t\t\t\tputs(\"none\"); continue;\n\t\t\t}\n\t\t\tifequal = 0;\n\t\t\tint pos = findpos(1, x);\n\t\t\tif (pos < 1){\n\t\t\t\tputs(\"none\"); continue;\n\t\t\t} else\n\t\t\tif (ifequal){\n\t\t\t\tprintf(\"%d %d\\n\", 1, pos); continue;\n\t\t\t}\n\t\t\tint p2 = find1(1, query(1, pos));\n\t\t\tif (p1 == -1){\n\t\t\t\tputs(\"none\"); continue;\n\t\t\t}\n\t\t\tif (p2 == -1){\n\t\t\t\tif (n - pos <= p1 - 1) puts(\"none\");\n\t\t\t\telse printf(\"%d %d\\n\", p1 + 1, pos + p1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint l1 = p1 - 1, l2 = p2 - pos - 1;\n\t\t\tif (l1 < l2) printf(\"%d %d\\n\", p1 + 1, pos + p1);\n\t\t\telse if (l1 == l2) printf(\"%d %d\\n\", p1, p2);\n\t\t\telse printf(\"%d %d\\n\", l2 + 1, p2);\n\t\t} else{\n\t\t\tint y = read();\n\t\t\tif (a[x] != y){\n\t\t\t\tupdate(1, x, y);\n\t\t\t\ta[x] = y;\n\t\t\t\tp1 = find1(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1603598663,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6859 \u3010\u8774\u8776\u4e0e\u82b1\u3011"
    },
    {
        "content": "# P6859 \u8774\u8776\u4e0e\u82b1\n[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6859)\n\n## \u9898\u610f\uff1a\n\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u8ba9\u4f60\u6c42\u51fa\u4e00\u4e2a\u5e8f\u5217\uff0c\u8ba9\u5176\u548c\u6b63\u597d\u4e3a s \uff0c\u4e0d\u9700\u8981\u8003\u8651\u957f\u5ea6\u6700\u5c0f\uff0c\u53ea\u9700\u8981\u8003\u8651\u8ba9 l \u6700\u5c0f\u3002\u540c\u65f6\u652f\u6301\u4fee\u6539\u3002\n## 20pts:\n\u8fd9\u5c31\u662f\u6700\u6734\u7d20\u7684\u66b4\u529b\u4e86\uff0c\u8003\u8651\u53cc\u6307\u9488\uff0c\u5c3a\u53d6\u6cd5\uff0c head \u548c tail \u521d\u59cb\u4e3a 1\uff0c\u7136\u540e\u5148\u5411\u6709\u79fb\u52a8 tail \uff0c\u76f4\u5230 tail \u548c head \u533a\u95f4\u548c\u6070\u597d == s\uff0c\u76f4\u63a5\u8f93\u51fa\uff0c\u5426\u5219\uff0c\u5411\u53f3\u7f29\u8fdb head \uff0c\u5982\u521a\u597d == s \uff0c\u8f93\u51fa\u7ed3\u679c\uff0c\u5426\u5219\u7ee7\u7eed\u5411\u53f3\u79fb\u52a8 tail \uff0c\u91cd\u590d\u4ee5\u4e0a\u8fc7\u7a0b\u3002\u82e5\u6700\u540e\u90fd\u6ca1\u6709\u4f7f\u548c == s \u7684\u7ed3\u679c\uff0c\u8f93\u51fa $\u201cnone \u201d$\u3002\u6ce8\u610f0\u8981\u7279\u5224\uff0c\u8f93\u51fa $\u201cnone\u201d$ \u3002\u590d\u6742\u5ea6O(nm)\n\n$ Code $\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define gc getchar()\nint n;\nint a[1000000+10];\n\ninline int read() {\n\tregister int r = 0, l = 1;\n\tregister char ch = gc;\n\twhile (!isdigit(ch)) {\n\t\tif (ch == '-')l = -1;\n\t\tch = gc;\n\t}\n\twhile (isdigit(ch)) {\n\t\tr = (r << 3) + (r << 1) + ch - '0';\n\t\tch = gc;\n\t}\n\treturn r * l;\n}\n\ninline void solve(){\n\tregister const int sum=read();\n\tif(sum>2*n){\n\t\tputs(\"none\");\n\t\treturn;\n\t}\n\tregister int cnt=0,head=1,tail=0;\n\tfor(int i=1;i<=n;++i){\n\t\tcnt+=a[i];tail++;\n\t\tif(cnt<sum)continue;\n\t\twhile(cnt>sum)cnt-=a[head],head++;\n\t\tif(head>tail)continue;\n\t\tif(cnt==sum){\n\t\t\tprintf(\"%d %d\\n\", head,tail);\n\t\t\treturn;\n\t\t}\n\t}\n\tputs(\"none\");\n\treturn;\n}\n\nint main() {\n\tn=read();\n\tregister const int m=read();\n\tregister char s[5];\n\tfor(int i=1;i<=n;++i)a[i]=read();\n\tfor(int i=1,x;i<=m;++i){\n\t\tscanf(\"%s\",s+1);\n\t\tif(s[1]=='C')x=read(),a[x]=read();\n\t\telse solve();\n\t}\n\treturn 0;\n}\n```\n## 50pts\n\u6211\u4eec\u8003\u8651\u4f18\u5316\uff0c\u5148\u6765\u6a21\u62df\u8fc7\u7a0b\uff0c\u9996\u5148\u662f\u5bfb\u627e\u7b2c\u4e00\u4e2a\u4ee5 $1$ \u4e3a\u5f00\u5934\u5e8f\u5217\u533a\u95f4\u548c\u521a\u597d\u5927\u4e8e\u7b49\u4e8e s \uff0c\u7684\u533a\u95f4\uff0c\u7136\u540e\u6536\u7f29\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e8c\u5206\u4f18\u5316\uff0c\u7136\u540e\u518d\u8003\u8651\uff0c\u6211\u4eec\u6700\u540e\u6c42\u51fa\u6765\u7684\u4e00\u5b9a\u662f\u4e00\u4e2a\u548c\u4e3a $s$ \u6216 $s+1$ \u7684\u533a\u95f4\uff0c\u56e0\u4e3a\u6240\u6709\u9879\u7684\u503c\u53ea\u6709 1 \u548c2\uff0c\u4e14\u6700\u540e\u7684 a[tail] \u5fc5\u4e3a $2$ \uff0c\u5982\u679c\u662f $1$\uff0c\u90a3\u5230 a[tail-1] \u548c\u6070\u597d\u4e3a $s$ \uff0c\u53ea\u80fd\u8bf4\u660e\u4e8c\u5206\u4f60\u5199\u6302\u4e86  ~~2333~~  \u3002\u901a\u8fc7\u4e0a\u9762 $ 20pts $ \u7684\u7a0b\u5e8f\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u540e\u627e\u5230\u5f00\u5934\u662f a[1] \u7684\u5e8f\u5217\u540e\uff0c\u79fb\u52a8\u53ea\u9700\u8981\u627e\u5230\u6700\u8fd1\u7684\u4e00\u4e2a\u503c\u4e3a 1 \u7684\u70b9\uff0c\u7136\u540e\u628a\u5e8f\u5217\u5411\u53f3\u5e73\u79fb\u5373\u53ef\u3002\u5177\u4f53\u5b9e\u73b0\u5148\u627e\u5230\u8ddd\u79bb a[1] \u6700\u8fd1\u7684 1 \u7684\u4f4d\u7f6e\uff0c\u8bbe\u4e3a pos1\uff0c\u7136\u540e\u627e\u5230\u8ddd\u79bb tail \u6700\u8fd1\u7684 1 \u7684\u4f4d\u7f6e \uff0c\u8bbe\u4e3apos2\uff0c\u5982\u679c pos1 - 1 \u6bd4 pos2 - tail \u5c0f\uff0c\u7ed3\u679c\u5e94\u662f 1 \u79fb\u52a8\u5230  pos1 \uff0c tail \u540c\u65f6\u79fb\u52a8\u3002\u5927\u7684\u8bdd\u540c\u7406\u3002\u90a3\u5982\u679c\u76f8\u7b49\u7684\u8bdd\u600e\u4e48\u5904\u7406\uff1f( dalao \u5e94\u8be5\u53d1\u73b0\u8fd9\u5e76\u6ca1\u6709\u5f71\u54cd\uff0c\u7136\u800c\u6211\u5f53\u65f6\u6ca1\u6709\u60f3\u51fa\u6765\uff0c\u5361\u4e86\u5f88\u4e45\uff0c~~\u6211\u592a\u83dc\u4e86~~)\u9996\u5148\u60f3\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\u7684\u8bdd\uff0c pos1 \u5fc5\u7136\u5728\u5e8f\u5217\u5185\u90e8\uff0c\u56e0\u4e3a\u5982\u679c pos1 \u5728\u5916\u90e8\u53ea\u80fd\u5728\u6709\uff0c\u56e0\u4e3a\u6700\u5de6\u7aef a[1] \u5df2\u7ecf\u5728\u5e8f\u5217\u5185\uff0c\u7136\u540e\u90a3\u4e48 pos2 \u5e94\u8be5\u5c31\u662f pos1 \uff0c\u53c8\u56e0\u4e3a tail >= 1 \uff0c\u5982\u679c tail == 1\uff0c\u90a3\u6839\u672c\u65e0\u5f71\u54cd\uff0c\u5982\u679c > 1 \uff0c\u90a3\u53c8\u4e92\u76f8\u77db\u76fe\u3002\u6240\u4ee5\u5fc5\u662f\u5728\u5185\u90e8\uff0c\u5982\u679c\u5728\u5185\u90e8\uff0c\u90a3\u4e24\u4e2a\u4e00\u597d\u60f3\u5bf9\u7ed3\u679c\u5e76\u6ca1\u6709\u5f71\u54cd\uff0c\u672c\u8d28\u4e0a\u8fd8\u662f\u628a\u5e8f\u5217\u91cc\u7684 2 \u6362\u6210 1 \u3002\u90a3\u4e48\u7ef4\u62a4\u533a\u95f4\u548c\u5e26\u4fee\u6539\u548c\u5e8f\u5217\u91cc\u7b2c\u4e00\u4e2a\u4e3a 1 \u7684\u4f4d\u7f6e\uff0c\u5f53\u7136\u5c31\u662f\u7528~~sb~~\u7ebf\u6bb5\u6811\u554a\u3002\u518d\u5199\u4e00\u4e2a\u4e8c\u5206\uff0c\u590d\u6742\u5ea6$ O(mlog^2n)$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define gc getchar()\n#define lson (x<<1)\n#define rson (x<<1|1)\n#define min(a,b) (a<b?a:b)\n#define mid ((tree[x].l+tree[x].r)>>1)\nconst int maxn=2e6+10;\nint n,m;\nstruct gdx{\n\tint l,r,data,num;//data\u662f\u533a\u95f4\u548c\uff0cnum\u662f\u533a\u95f4\u5185\u7b2c\u4e00\u4e2a 1 \u51fa\u73b0\u7684\u4f4d\u7f6e\n}tree[maxn<<2];\nint a[maxn];\n\ninline int read(){\n\tregister int r=0,l=1;register char ch=gc;\n\twhile(!isdigit(ch)){if(ch=='-')l=-1;ch=gc;}\n\twhile(isdigit(ch)){r=(r<<3)+(r<<1)+ch-'0';ch=gc;}\n\treturn r*l;\n}\n\ninline int check(register const int x,register const int y){//\u8fd4\u56de\u503c\u4e3a0\u5219\u8868\u793a\u533a\u95f4\u5185\u6ca1\u6709 1 \uff0c\u6240\u4ee5\u8981\u5199check\u51fd\u6570\n\tif(!x)return y;\n\tif(!y)return x;\n\treturn min(x,y);\n}\n\ninline void push_up(register const int x){\n\ttree[x].data=tree[lson].data+tree[rson].data;\n\tif(tree[lson].num)return tree[x].num=tree[lson].num,void();\n\tif(tree[rson].num)return tree[x].num=tree[rson].num,void();\n\treturn tree[x].num=0,void();\n}\n\nvoid build(register const int x,register const int l,register const int r){\n\ttree[x].l=l;tree[x].r=r;\n\tif(l==r){\n\t\ttree[x].data=a[l];\n\t\ttree[x].data==1?tree[x].num=l:tree[x].num=0;\n\t\treturn;\n\t}\n\tbuild(lson,l,mid);\n\tbuild(rson,mid+1,r);\n\tpush_up(x);\n}\n\nvoid Modify(register const int x,register const int l,register const int z){\n\tif(tree[x].l==tree[x].r&&tree[x].l==l){\n\t\ttree[x].data=z;a[l]=z;\n\t\tz==1?tree[x].num=l:tree[x].num=0;\n\t\treturn;\n\t}\n\tl<=mid?Modify(lson,l,z):Modify(rson,l,z);\n\tpush_up(x);\n}\n\nint query(register const int x,register const int l,register const int r){\n\tif(l<=tree[x].l&&r>=tree[x].r)return tree[x].data;\n\tregister int ans=0;\n\tif(l<=mid)ans+=query(lson,l,r);\n\tif(r>mid)ans+=query(rson,l,r);\n\treturn ans;\n}\n\nint Query(register const int x,register const int l,register const int r){\n\tif(l<=tree[x].l&&r>=tree[x].r)return tree[x].num;\n\tregister int ans=0;\n\tif(l<=mid)ans=Query(lson,l,r);\n\tif(r>mid)ans=check(ans,Query(rson,l,r));\n\treturn ans;\n}\n\ninline int lowerbound(register int l,register int len,register const int x,register int half=0){//\u522b\u95ee\u8fd9\u4e2a\u4e8c\u5206\u8fd9\u4e48\u5947\u602a\uff0c\u8fd9\u662f\u6211\u6284\u7684STL\u7684lower_bound\u51fd\u6570\uff0c\u81ea\u5df1\u603b\u662f\u5199\u6302\uff0c\u53ea\u80fd\u53bb\u6284STL\u6e90\u7801\u52a0\u81ea\u5df1\u7684\u4fee\u6539\uff0c\u6bd5\u7adf\u6e90\u7801\u90fd\u662f\u8fed\u4ee3\u5668\n\twhile(len>0){\n\t\thalf=len>>1;\n\t\tif(query(1,1,l+half)<x)l+=half+1,len=len-half-1;\n\t\telse len=half;\n\t}\n\treturn l;\n}\n\ninline void solve(register const int s){\n\tif(!s)return puts(\"none\"),void();//0\u7279\u5224\n\tregister int op=query(1,1,n);//nt\u4e86\uff0c\u61d2\u5f97\u6539\u4e86\uff0c\u76f4\u63a5\u7528tree[1].data\u5c31\u884c\u4e86\n\tif(op<s)return puts(\"none\"),void();\n\tif(op==s)return printf(\"1 %d\\n\",n),void();\n\tregister int p=lowerbound(1,n-1,s);\n\tif(query(1,1,p)==s)return printf(\"1 %d\\n\",p),void();\n\tif(a[1]==1)return printf(\"2 %d\\n\",p),void();\n\tregister const int ll=Query(1,1,n),rr=Query(1,p,n);\n\tif(!ll&&!rr)return puts(\"none\"),void();\n\tif(ll&&rr){\n\t\tif(ll-1<rr-p){\n\t\t\tif(ll-1+p>n)return puts(\"none\"),void();\n\t\t\tprintf(\"%d %d\\n\",ll+1,ll-1+p);\n\t\t\treturn;\n\t\t}else{\n\t\t\tif(rr>n)return puts(\"none\"),void();\n\t\t\tprintf(\"%d %d\\n\",rr-p+1,rr);\n\t\t\treturn;\n\t\t}\n\t}else if(ll&&!rr){\n\t\tif(ll-1+p>n)return puts(\"none\"),void();\n\t\tprintf(\"%d %d\\n\",ll+1,ll-1+p);\n\t\treturn;\n\t}else{\n\t\tif(rr>n)return puts(\"none\"),void();\n\t\tprintf(\"%d %d\\n\",rr-p+1,rr);\n\t\treturn;\n\t}\n}\n\nint main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=n;++i)a[i]=read();\n\tbuild(1,1,n);\n\tregister char s[10];\n\tfor(register int i=1,x;i<=m;++i){\n\t\tscanf(\"%s\",s+1);\n\t\tif(s[1]=='A')solve(read());\n\t\telse x=read(),Modify(1,x,read());\n\t}\n\treturn 0;\n}\n```\n## 100pts\n\u5927\u4f6c\u4eec\u90fd\u770b\u51fa\u6765\u4e86\uff0c\u6211\u8fd9\u4e9b\u7684\u662f\u591a\u4e48nt,\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u91cc\u4e8c\u5206\uff0c\u53cd\u800c\u5728\u5916\u9762\u5199~~sb~~\u4e8c\u5206\uff1f\u590d\u6742\u5ea6O(mlogn)\n\n\u7801\u98ce\u6bd2\u7624\uff0c\u52ff\u55b7\uff0cemm\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define gc getchar()\n#define lson (x<<1)\n#define rson (x<<1|1)\nconst int maxn=2e6+10;\nint n,m;\nstruct gdx{\n\tint l,r;\n\tint data,num;\n}tree[maxn<<2];\nint a[maxn];\n\ninline int read(){\n\tint r=0,l=1;char ch=gc;\n\twhile(!isdigit(ch)){if(ch=='-')l=-1;ch=gc;}\n\twhile(isdigit(ch)){r=(r<<3)+(r<<1)+ch-'0';ch=gc;}\n\treturn r*l;\n}\n\ninline int check(const register int x,const register int y){\n\tif(!x)return y;\n\tif(!y)return x;\n\treturn min(x,y);\n}\n\ninline void push_up(const register int x){\n\ttree[x].data=tree[lson].data+tree[rson].data;\n\tif(tree[lson].num)return tree[x].num=tree[lson].num,void();\n\tif(tree[rson].num)return tree[x].num=tree[rson].num,void();\n\treturn tree[x].num=0,void();\n}\n\ninline void build(const register int x,const register int l,const register int r){\n\ttree[x].l=l;tree[x].r=r;\n\tif(l==r){\n\t\ttree[x].data=a[l];\n\t\tif(tree[x].data==1)tree[x].num=l;\n\t\treturn;\n\t}\n\tconst int mid=((tree[x].r+tree[x].l)>>1);\n\tbuild(lson,l,mid);\n\tbuild(rson,mid+1,r);\n\tpush_up(x);\n}\n\ninline void Modify(const register int x,const register int l,const register int z){\n\tif(tree[x].l==tree[x].r&&tree[x].l==l){\n\t\ttree[x].data=z;a[l]=z;\n\t\tif(z==1)tree[x].num=l;\n\t\telse tree[x].num=0;\n\t\treturn;\n\t}\n\tconst int mid=((tree[x].r+tree[x].l)>>1);\n\tif(l<=mid)Modify(lson,l,z);\n\telse Modify(rson,l,z);\n\tpush_up(x);\n}\n\ninline int query(const register int x,const register int l,register const int r){\n\tif(l<=tree[x].l&&r>=tree[x].r)return tree[x].data;\n\tregister int ans=0;\n\tconst int mid=((tree[x].r+tree[x].l)>>1);\n\tif(l<=mid)ans+=query(lson,l,r);\n\tif(r>mid)ans+=query(rson,l,r);\n\treturn ans;\n}\n\ninline int Query(const register int x,const register int l,const register int r){\n\tif(l<=tree[x].l&&r>=tree[x].r)return tree[x].num;\n\tregister int ans=0;\n\tconst int mid=((tree[x].r+tree[x].l)>>1);\n\tif(l<=mid)ans=check(ans,Query(lson,l,r));\n\tif(r>mid)ans=check(ans,Query(rson,l,r));\n\treturn ans;\n}\n\nint Find(register const int x)\n\tif(tree[x].l==tree[x].r)return tree[x].l;\n\treturn Find(rson);\n}\n\nint lowerbound(register const int x,register const int z,register const int sch){//\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\n\tif(tree[x].l==tree[x].r)return tree[x].l;\n\tif(z+tree[lson].data>sch)return lowerbound(lson,z,sch);\n\tif(z+tree[lson].data==sch)return Find(lson);//\u76f8\u7b49\u540e\u76f4\u63a5\u8fd4\u56de\u5de6\u513f\u5b50\u53f3\u7aef\u70b9\uff0c\u6211nt\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5reutrn tree[lson].r\n\telse return lowerbound(rson,z+tree[lson].data,sch);\n}\n\ninline void solve(const register int s){\n\tif(!s)return puts(\"none\"),void();\n\tif(tree[1].data<s)return puts(\"none\"),void();\n\tif(tree[1].data==s)return printf(\"1 %d\\n\",n),void();\n\tconst register int p=lowerbound(1,0,s);\n\tif(query(1,1,p)==s)return printf(\"1 %d\\n\",p),void();\n\tif(a[1]==1)return printf(\"2 %d\\n\",p),void();\n\tconst register int ll=Query(1,1,n),rr=Query(1,p,n);\n\tif(!ll&&!rr)return puts(\"none\"),void();\n\tif(ll&&rr){\n\t\tif(ll-1<rr-p){\n\t\t\tif(ll-1+p>n)return puts(\"none\"),void();\n\t\t\tprintf(\"%d %d\\n\",ll+1,ll-1+p);\n\t\t\treturn;\n\t\t}else{\n\t\t\tif(rr>n)return puts(\"none\"),void();\n\t\t\tprintf(\"%d %d\\n\",rr-p+1,rr);\n\t\t\treturn;\n\t\t}\n\t}else if(ll&&!rr){\n\t\tif(ll-1+p>n)return puts(\"none\"),void();\n\t\tprintf(\"%d %d\\n\",ll+1,ll-1+p);\n\t\treturn;\n\t}else{\n\t\tif(rr>n)return puts(\"none\"),void();\n\t\tprintf(\"%d %d\\n\",rr-p+1,rr);\n\t\treturn;\n\t}\n}\n\nint main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=n;++i)a[i]=read();\n\tbuild(1,1,n);\n\tregister char s[10];\n\tfor(register int i=1,x;i<=m;++i){\n\t\tscanf(\"%s\",s+1);\n\t\tif(s[1]=='A')solve(read());\n\t\telse x=read(),Modify(1,x,read());\n\t}\n\treturn 0;\n}\n```\n\nPS \uff1a \u6708\u8d5b\u8003\u4e86\u8fd9\u9053\u9898\uff0c\u5f53\u65f6\u5fc3\u6001\u5c31\u88ab\u8003\u70b8\u4e86\uff0c $ 20 pts $ \u66b4\u529b\u90fd\u6253\u6302\u4e86\uff0c\u6211\u592a\u83dc\u4e86\n",
        "postTime": 1604109893,
        "uid": 335214,
        "name": "\u8363\u8000\u5357\u51a5",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6859 \u3010\u8774\u8776\u4e0e\u82b1\u3011"
    },
    {
        "content": "\u9898\u76ee\u8981\u6c42 $l$ \u6700\u5c0f\uff0c\u90a3\u4e48\u5fc5\u5b9a\u662f\u628a\u5de6\u7aef\u70b9\u4ece\u6700\u5de6\u7aef\u5f00\u59cb\u5411\u53f3\u626b\u3002\n\n\u56fa\u5b9a\u5de6\u7aef\u70b9\u4e3a $1$\uff0c\u4e8c\u5206\u51fa\u6700\u5c0f\u7684\u4f4d\u7f6e $pos$\uff0c\u4f7f\u5f97 $\\sum_{i=1}^{pos}a_i>=x$\uff08\u4e8b\u5148\u7279\u5224\u603b\u548c\u5c0f\u4e8e $x$ \u548c $x=0$ \u7684\u60c5\u51b5\uff09\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c$\\sum_{i=1}^{pos}a_i=x$ \u6216 $\\sum_{i=1}^{pos}a_i=x+1$\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\u76f4\u63a5\u8f93\u51fa\uff0c\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5fc5\u5b9a\u6709 $a_{pos}=2$\uff0c\u5426\u5219 $[1,pos-1]$ \u53ef\u884c\uff0c\u540c\u65f6\uff0c\u82e5 $a_{1}=1$\uff0c\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa $2\\ pos$\u3002\n\n\u90a3\u4e48\u5c31\u5269\u4e0b\u4e86 $a_1=2$ \u4e14 $a_{pos}=2$ \u7684\u60c5\u51b5\u3002\u4e0d\u96be\u60f3\u5230\u9700\u8981\u5bfb\u627e\u5de6\u7aef\u70b9\u53f3\u8fb9\u7684\u6700\u8fd1\u7684 $1$ \u548c\u53f3\u7aef\u70b9\u53f3\u8fb9\u6700\u8fd1\u7684 $1$\uff0c\u8bb0\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u5206\u522b\u4e3a $lnxt,rnxt$\u3002\n\n\u4e0d\u59a8\u5148\u8bbe\u9009\u4e86\u79bb\u53f3\u7aef\u70b9\u6700\u8fd1\u7684 $1$\uff0c\u5219\u6700\u7ec8\u7b54\u6848\u53f3\u7aef\u70b9\u4e3a $rnxt$\uff0c\u90a3\u4e48\u5de6\u7aef\u70b9\u5c31\u5e94\u5f53\u662f $rnxt-pos+1$\uff0c\u4e14\u5bf9\u4e8e\u4efb\u610f $i\\in[1,rnxt-pos]$ \u90fd\u6709 $a_i=2$\uff0c\u5426\u5219\u7b54\u6848\u5c06\u4e0d\u5bf9\uff0c\u56e0\u4e3a\u5de6\u7aef\u70b9\u626b\u63cf\u8fc7\u7a0b\u4e2d\u6f0f\u6389\u4e86 $1$\u3002\u6240\u4ee5\u6709 $rnxt-pos<lnxt$\u3002\n\n\u82e5\u9009\u4e86\u79bb\u5de6\u7aef\u70b9\u6700\u8fd1\u7684$1$\uff0c\u5219\u6700\u7ec8\u7b54\u6848\u5de6\u7aef\u70b9\u4e3a $lnxt+1$\uff0c\u8981\u52a0\u4e00\u662f\u56e0\u4e3a\u73b0\u5728\u533a\u95f4\u548c\u6bd4 $x$ \u5927 $1$ \u56e0\u6b64\u8981\u626b\u8fc7\u8fd9\u4e2a $1$ \uff0c\u90a3\u4e48\u53f3\u7aef\u70b9\u662f $pos+lnxt-1$\uff0c\u4f9d\u636e\u4e0a\u9762\u8ba8\u8bba\u7684\u6b64\u65f6\u6709 $rnxt-pos>=lnxt$\n\n\u5f53\u7136\u8fd8\u6709\u65e0\u89e3\u7684\u60c5\u51b5\u5373\u4e24\u79cd\u65b9\u6cd5\u7684\u53f3\u7aef\u70b9\u90fd\u8d85\u8fc7\u4e86 $n$\u3002\n\n\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u5c31\u662f$\\begin{cases}{[rnxt-pos+1,rnxt]}&rnxt-pos<lnxt\\\\{[lnxt+1,pos+lnxt-1]}&rnxt-pos>=lnxt\\end{cases}$\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4\u548c\u4ee5\u53ca\u533a\u95f4 $1$ \u4e2a\u6570\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5c31\u884c\u5566\u3002\u4ee3\u7801\u53ef\u80fd\u6709\u70b9\u6bd2\u7624\n\ncode\uff1a\n```cpp\n#define ri register int\n#define ll long long\n#define N 2000010\nint n,m,a[N],x,y,z,sum[N<<2],num[N<<2];char ch[5];\ninline int rd(){\n\tint x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x;\n}\ninline void build(int id,int l,int r){\n\tif(l==r){sum[id]=a[l];num[id]=(a[l]==1);return;}\n\tint mid=(l+r)>>1;\n\tbuild(id<<1,l,mid),build(id<<1|1,mid+1,r);\n\tsum[id]=sum[id<<1]+sum[id<<1|1];\n\tnum[id]=num[id<<1]+num[id<<1|1];\n}\ninline void update(int id,int l,int r,int des,int val){\n\tif(l==r){sum[id]=val;num[id]=(val==1);return;}\n\tint mid=(l+r)>>1;\n\tif(des<=mid) update(id<<1,l,mid,des,val);\n\telse update(id<<1|1,mid+1,r,des,val);\n\tsum[id]=sum[id<<1]+sum[id<<1|1];\n\tnum[id]=num[id<<1]+num[id<<1|1];\n}\ninline int querysum(int id,int l,int r,int ql,int qr){\n\tif(ql<=l&&r<=qr) return sum[id];\n\tint mid=(l+r)>>1,ans=0;\n\tif(ql<=mid) ans+=querysum(id<<1,l,mid,ql,qr);\n\tif(qr>mid) ans+=querysum(id<<1|1,mid+1,r,ql,qr);\n\treturn ans;\n}\ninline int querynum(int id,int l,int r,int ql,int qr){\n\tif(ql<=l&&r<=qr) return num[id];\n\tint mid=(l+r)>>1,ans=0;\n\tif(ql<=mid) ans+=querynum(id<<1,l,mid,ql,qr);\n\tif(qr>mid) ans+=querynum(id<<1|1,mid+1,r,ql,qr);\n\treturn ans;\n}\ninline int binary_querysum(int id,int l,int r,int val){\n\tif(l>r) return 0;\n\tint mid;\n\twhile(l<r){\n\t\tmid=(l+r)>>1;\n\t\tif(sum[id<<1]>=val) r=mid,id<<=1;\n\t\telse l=mid+1,val-=sum[id<<1],id=(id<<1)|1;\n\t}\n\treturn l;\n}\ninline int binary_querynum(int id,int l,int r,int val){\n\tint mid;\n\twhile(l<r){\n\t\tmid=(l+r)>>1;\n\t\tif(num[id<<1]>=val) r=mid,id<<=1;\n\t\telse l=mid+1,val-=num[id<<1],id=(id<<1)|1;\n\t}\n\treturn l;\n}\nint main(){\n\tn=rd(),m=rd();\n\tfor(ri i=1;i<=n;++i) a[i]=rd();a[n+1]=1;build(1,1,n+1);\n\twhile(m--){\n\t\tscanf(\"%s\",ch);\n\t\tif(ch[0]=='A'){\n\t\t\tx=rd();\n\t\t    if(x>sum[1]-1||x==0){puts(\"none\");continue;}\n\t\t    int pos=binary_querysum(1,1,n+1,x);\n\t\t    if(querysum(1,1,n+1,1,pos)==x){printf(\"%d %d\\n\",1,pos);continue;}\n\t\t    if(a[1]==1){printf(\"%d %d\\n\",2,pos);continue;}\n\t\t    int lnxt=binary_querynum(1,1,n+1,1),rnxt=binary_querynum(1,1,n+1,querynum(1,1,n+1,1,pos)+1);\n\t\t    //cout<<pos<<\" \"<<lnxt<<\" \"<<rnxt<<endl;\n\t\t    //if(lnxt==n+1){puts(\"none\");continue;}\n\t\t    if(pos+lnxt-1>n&&rnxt>n){puts(\"none\");continue;}\n\t\t    if(rnxt-pos+1<lnxt+1){\n\t\t    \tprintf(\"%d %d\\n\",rnxt-pos+1,rnxt);\n\t\t    \tcontinue;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"%d %d\\n\",lnxt+1,pos+lnxt-1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t    //puts(\"none\");\n\t\t}\n\t\telse{y=rd(),z=rd();a[y]=z;update(1,1,n+1,y,z);}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1603356940,
        "uid": 135839,
        "name": "Fairicle",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6859 \u3010\u8774\u8776\u4e0e\u82b1\u3011"
    },
    {
        "content": "## P6859 \u8774\u8776\u4e0e\u82b1 \u9898\u89e3\n\n### \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$ ,$a_i\\in \\{ 1,2 \\}$ \uff0c\u6bcf\u6b21\u64cd\u4f5c\u7ed9\u51fa\u4e24\u79cd\u7c7b\u578b\u7684\u64cd\u4f5c\uff1a\n\n* \u4fee\u6539\u683c\u5f0f\uff1a$C \\ i \\ val$ \u5c06 $a_i$ \u6539\u4e3a $val\\in \\{1,2\\}$\n* \u67e5\u8be2\u683c\u5f0f\uff1a$A \\ K$ \uff0c\u67e5\u8be2\u6574\u4e2a\u5e8f\u5217\u6709\u65e0\u4e00\u4e2a\u5b50\u4e32\u548c\u4e3a $K$\uff0c\u8f93\u51fa\u6240\u6709\u65b9\u6848\u4e2d $L$ \u6700\u5c0f\u7684\u3002\n\n### \u5206\u6790\uff1a\n\n\u9996\u5148\uff0c\u8bbe\u8981\u6c42\u67e5\u8be2\u7684\u548c\u4e3a $K$ \uff0c\u9996\u5148\u5f53 $K>sum$ \u6216 $K=0$ \u65f6\u662f\u80af\u5b9a\u65e0\u89e3\u7684\u3002\uff08\u6b64\u65f6 $sum$ \u6307\u6574\u4e2a\u5e8f\u5217\u7684\u548c\uff09\n\n\u56e0\u4e3a\u8981\u6c42\u5de6\u7aef\u70b9\u6700\u5c0f\uff1a\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u4ece $1$ \u5f00\u59cb\uff0c\u6211\u4eec\u5148\u627e\u5230\u4ee5 $1$ \u4e3a\u5de6\u7aef\u70b9\uff0c\u5b50\u4e32\u548c $\\geq K$ \u7684\u6700\u5c0f\u7684\u53f3\u7aef\u70b9\u8bb0\u4f5c $R$\u3002\n\n\u8fd9\u4e00\u70b9\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5728 $\\Theta(\\log n )$ \u7684\u65f6\u95f4\u89e3\u51b3\uff0c\u4fee\u6539\u4e5f\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5355\u70b9\u4fee\u6539\u3002\n\n\u6b64\u65f6\u67e5\u8be2\u5230\u7684\u5b50\u4e32\u548c\u4e00\u5b9a\u4e3a $K$ \u6216 $K+1$ ,\u8fd9\u70b9\u53ef\u4ee5\u901a\u8fc7\u53cd\u8bc1\u6cd5\u8bc1\u660e\u3002\n\n\u82e5\u5b50\u6bb5\u548c\u4e3a $K$ \u5219\u8bc1\u660e\u5df2\u7ecf\u627e\u5230\u4e86\u7b54\u6848\uff0c\u7740\u91cd\u89e3\u51b3\u7684\u80af\u5b9a\u662f\u5b50\u6bb5\u548c\u4e3a $K+1$ \u7684\u90e8\u5206\u3002\n\n\u4e3a\u4e86\u4fdd\u8bc1\u5de6\u7aef\u70b9\u6700\u5c0f\uff0c\u5e76\u4e14\u4fdd\u6301\u7740\u5f53\u524d\u7684\u5b50\u4e32\u548c\u4e3a $K+1$ \u4e0d\u53d8\uff0c\u9009\u62e9\u4e24\u4e2a\u7aef\u70b9\u540c\u65f6\u5411\u53f3\u79fb\u52a8\u3002\n\n\u5728\u4e24\u4e2a\u7aef\u70b9\u5411\u53f3\u79fb\u52a8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u7aef\u70b9\u7684\u503c\u4e3a $1$ \uff0c\u5219\u627e\u5230\u4e86\u7b54\u6848\u3002\n\n\u56e0\u4e3a\u5b83\u4eec\u90fd\u4ece\u539f\u672c\u7684 $2$ \u8d70\u5230\u4e86 $1$ \u3002\uff08\u53f3\u7aef\u70b9\u7684\u503c\u4e00\u5b9a\u4e3a $2$\uff09\n\n\u800c\u5de6\u7aef\u70b9\u53ef\u4ee5\u8fd1\u4f3c\u7684\u770b\u4f5c\u4ece $2$ \u8d70\u5230\u4e86 $1$\u3002\n\n\u6240\u4ee5\u7b54\u6848\u5c31\u662f\u79bb\u5de6\u7aef\u70b9\u6700\u8fd1\u7684 $1$ \uff0c\u6216\u8005\u53f3\u7aef\u70b9\u66f4\u8fd1\u7684 $1$\u3002\n\n\u7528\u4e00\u4e2a `set` \u7ef4\u62a4\u5373\u53ef\u3002\n\n### Code:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x){\n    x=0;char ch=getchar();bool f=false;\n    while(!isdigit(ch)) f|=ch=='-',ch=getchar();\n    while(isdigit(ch))  x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    x=f?-x:x;return;\n}\ntemplate <typename T>\ninline void print(T x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) print(x/10);\n    putchar(x%10^48);return;\n}\nconst int N=2e6+3,INF=1e9;\nint n,m,a[N],nxt[N],pre[N];\nstruct node{\n    int sum,lazy;\n    #define sum(x)  c[x].sum\n    #define lazy(x) c[x].lazy\n}c[N<<2];\n#define lc x<<1\n#define rc x<<1|1\ninline void Push_up(int x){sum(x)=sum(lc)+sum(rc);return;}\ninline void Build(int x,int l,int r){\n    if(l==r){sum(x)=a[l];return;}\n    int mid=(l+r)>>1;Build(lc,l,mid),Build(rc,mid+1,r);\n    Push_up(x);return;\n}\ninline void Modify(int x,int l,int r,int to,int d){\n    if(l==r){sum(x)=d;return;}\n    int mid=(l+r)>>1;if(mid>=to) Modify(lc,l,mid,to,d);\n    else Modify(rc,mid+1,r,to,d);\n    Push_up(x);return;\n}\nint res=0;\ninline int Query(int x,int l,int r,int k){\n    if(l==r){res+=a[l];return l;}\n    int mid=(l+r)>>1;\n    if(sum(lc)>=k)  return Query(lc,l,mid,k);\n    else{res+=sum(lc);return Query(rc,mid+1,r,k-sum(lc));}\n}\nset<int> loc;\nint main(){\n    read(n),read(m);\n    for(register int i=1;i<=n;++i){read(a[i]);if(a[i]==1) loc.insert(i);}\n    Build(1,1,n);\n    while(m--){\n        char op[2];scanf(\"%s\",op);\n        if(op[0]=='A'){\n            int x;read(x);\n            if(x>sum(1)||x==0){puts(\"none\");continue;}\n            res=0;int R=Query(1,1,n,x);\n            if(res==x){print(1),putchar(' '),print(R),putchar('\\n');continue;}\n            int loc1=INF,loc2=INF;\n            if(!loc.empty())    loc1=*loc.begin();\n            set<int>::iterator it=loc.lower_bound(R);\n            if(it!=loc.end())   loc2=*it;\n            int len=loc2-R+1;\n            if(loc2==INF&&R+loc1-1>n){puts(\"none\");continue;}\n            if(loc1>=len) print(len),putchar(' '),print(loc2),putchar('\\n');\n            else print(loc1+1),putchar(' '),print(R+loc1-1),putchar('\\n');\n        }\n        else{\n            int i,val;read(i),read(val);\n            if(a[i]==1) loc.erase(i);\n            if(val==1)  loc.insert(i);\n            a[i]=val;Modify(1,1,n,i,val);\n        }\n    }\n\n    return 0;\n}\n\n```",
        "postTime": 1631453558,
        "uid": 67621,
        "name": "NuoCarter",
        "ccfLevel": 7,
        "title": "P6859 \u8774\u8776\u4e0e\u82b1 \u9898\u89e3"
    }
]