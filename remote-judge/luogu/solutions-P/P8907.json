[
    {
        "content": "# Part 1\uff1a\u524d\u8a00\n\u8c22\u8c22\u8fd9\u9053\u9898\u8ba9\u6211\u610f\u8bc6\u5230\u6211\u5728\u542f\u53d1\u5f0f\u5408\u5e76\u65b9\u9762\u4e00\u7a8d\u4e0d\u901a\u3002\n\n\u611f\u89c9\u8fd9\u662f Pt \u7ec4\u6700\u7b80\u5355\u7684\u4e00\u9898\n\n# Part 2\uff1a\u6b63\u6587\n\n\u8003\u8651\u4e00\u4e2a\u6027\u8d28\uff0c\u6bcf\u6b21\u4e92\u76f8\u8fde\u8fb9\u663e\u7136\u6709\u4e9b\u591a\u4f59\uff0c\u4e0d\u59a8\u8f6c\u5316\u6210\u5c06\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\u548c\u5176\u5b83\u70b9\u8fde\u8fb9\u3002\n\n\u8003\u8651\u6b63\u786e\u6027\uff0c\u82e5\u4e00\u5934\u725b $x$ \u51fa\u961f\uff0c\u4e0d\u59a8\u8bbe\u4e0e\u4ed6\u76f8\u8fde\u4e14\u7f16\u53f7\u5927\u4e8e\u4ed6\u7684\u725b\u7684\u7f16\u53f7\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u4e3a $y_1,y_2,...,y_k$\uff0c\u6211\u4eec\u8fd9\u79cd\u8fde\u8fb9\u7b56\u7565\u76f8\u5f53\u4e8e\u5ef6\u65f6\u8fde\u8fb9\uff0c\u5373\u5728 $y_1$ \u51fa\u961f\u4ee5\u524d\u8fde\u63a5 $y_1\\rightarrow y_2,y_3,\\ldots y_k$\uff0c$y_2$ \u51fa\u961f\u4ee5\u524d\u8fde\u63a5 $y_2\\rightarrow y_3,\\ldots y_k$\uff0c\u6bcf\u6761\u5e94\u5f53\u8fde\u7684\u8fb9\u90fd\u88ab\u8fde\u4e0a\u4e86\u81f3\u5c11\u4e00\u6b21\uff0c\u6545\u5b58\u5728\u5145\u5206\u6027\uff0c\u6240\u4ee5\u6b63\u786e\u3002\n\n\u76f4\u63a5\u8fde\u8fb9\u590d\u6742\u5ea6\u662f $O(n^2)$\uff0c\u542f\u53d1\u5f0f\u5408\u5e76 set \u540e\u590d\u6742\u5ea6\u662f $O(m\\log^2n)$ \u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\n\n# Part 3\uff1a\u4ee3\u7801\n```cpp\nconst int N=2e5+7;\nint n,m;\nset<int>g[N];\n\nvoid Main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=m;i++){\n\t\tint u=read(),v=read();\n\t\tg[min(u,v)].insert(max(u,v));\n\t}\n\tll ans=-m;\n\tfor(int i=1;i<=n;i++){\n\t\tif(g[i].empty())continue;\n\t\tans+=g[i].size();\n\t\tint u=*g[i].begin(),v=i;g[v].erase(g[v].begin());\n\t\tif(g[u].size()<g[v].size())swap(g[u],g[v]);\n\t\tfor(auto i:g[v])g[u].insert(i);\n\t}\n\tcout<<ans;\n\treturn;\n}\n```",
        "postTime": 1671977452,
        "uid": 373699,
        "name": "EXODUS",
        "ccfLevel": 0,
        "title": "P8907 \u9898\u89e3"
    },
    {
        "content": "\u4e00\u6761\u8fb9 $(i,j)$ \u4f1a\u4ea7\u751f\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u6761 $i\\to j$ \u7684\u8def\u5f84\u6ee1\u8db3\u8fd9\u6761\u8def\u5f84\u9664 $i,j$ \u4e4b\u5916\u7684\u6240\u6709\u70b9\u90fd\u5c0f\u4e8e $i,j$\u3002\u6211\u4eec\u94a6\u5b9a $i<j$\uff0c\u4ece\u5c0f\u5230\u5927\u628a\u6bcf\u4e2a\u70b9\u4f9d\u6b21\u52a0\u5165\u3002\u52a0\u5165 $i$ \u65f6\uff0c$i$ \u4ea7\u751f\u7684\u603b\u8d21\u732e\u5c31\u662f $i$ \u80fd\u5230\u8fbe\u7684\u70b9\u4e2d\u5927\u4e8e $i$ \u7684\u70b9\u7684\u4e2a\u6570\u3002\u5f00 $n$ \u4e2a\u5e73\u8861\u6811\uff0c\u521d\u59cb\u65f6\u628a\u70b9 $i$ \u7684\u90bb\u5c45\u90fd\u63d2\u5165\u5230\u70b9 $i$ \u5bf9\u5e94\u7684\u5e73\u8861\u6811\u4e2d\uff0c\u7136\u540e\u542f\u53d1\u5f0f\u5408\u5e76\u7ef4\u62a4\u8fde\u901a\u5757\u4fe1\u606f\u3002\u89c6 $n,m$ \u540c\u9636\uff0c\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nnamespace vectorwyx{\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define pb push_back\n#define eb emplace_back\n#define mk make_pair\n#define sml(x,y) (x=min(x,y))\n#define big(x,y) (x=max(x,y))\n#define ll long long\n#define uint unsigned\n#define ull unsigned long long\n#define umap unordered_map\n#define db double\n#define fo(i,x,y) for(int i=(x);i<=(y);++i)\n#define go(i,x,y) for(int i=(x);i>=(y);--i)\n#define ptc putchar\n#define emp emplace\n#define re return\n#define co continue\n#define brk break\n#define HH (ptc('\\n'))\n#define bctz __builtin_ctz\n#define bclz __builtin_clz\n#define bppc __builtin_popcount\nusing namespace __gnu_pbds;\n#define Tree tree<int,null_type,greater<int>,rb_tree_tag,tree_order_statistics_node_update>\nusing namespace std;\nll seed=chrono::system_clock::now().time_since_epoch().count();\nmt19937 rnd(seed);\ninline int rm(int x,int y){return (int)(rnd()%(y-x+1ll)+x);}\ninline int read(){signed ch=getchar();int x=0,f=1;while(!isdigit(ch)){if(ch==(int)('-'))f=-1;ch=getchar();}while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}return x*f;}\ninline void out(int *a,int l,int r){fo(i,l,r) cout<<*(a+i)<<' ';puts(\"\");}\n\n//14:54~15:12~15:13\nconst int N=2e5+5;\nvector<int> e[N];\nll ans;\nint n,m,f[N],siz[N];\nTree a[N];\n\nint fin(int x){\n\tif(f[x]==x) re f[x];\n\tre f[x]=fin(f[x]);\n}\n\nvoid merge(int x,int y){\n\tint fx=fin(x),fy=fin(y);\n\tif(fx==fy) re;\n\tif(siz[fx]>siz[fy]) swap(fx,fy);\n\tf[fx]=fy,siz[fy]+=siz[fx];\n\tfor(auto i:a[fx]) a[fy].insert(i);\n\tTree tmp;swap(a[fx],tmp);\n}\n\nsigned main(){\n\tcin>>n>>m;ans-=m;\n\tfo(i,1,n) f[i]=i,siz[i]=1;\n\tfo(i,1,m){\n\t\tint x=read(),y=read();\n\t\te[x].eb(y),e[y].eb(x);\n\t\ta[x].insert(y);a[y].insert(x);\n\t}\n\tfo(i,1,n){\n\t\tfor(int j:e[i]) if(j<i) merge(i,j);\n\t\tans+=a[fin(i)].order_of_key(i);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n}\n\n\n\n\n\n\n\n\n\n\nsigned main(){re vectorwyx::main();}\n\n```",
        "postTime": 1671882675,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P8907 [USACO22DEC] Making Friends P"
    },
    {
        "content": "## \u8f6c\u5316\uff1a\n\n\u89c2\u5bdf\u4e00\u4e0b\u6837\u4f8b\uff0c\u53ef\u4ee5\u53d1\u73b0 $(u,v)$ \u6700\u540e\u80fd\u6210\u4e3a\u670b\u53cb\u7684\u5145\u8981\u6761\u4ef6\u662f\uff1a\n\n\u5b58\u5728\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u70b9\u7684\u7f16\u53f7\u4e0d\u5927\u4e8e $\\min(u,v)$ \u3002\n\n\u7b80\u5355\u8bc1\u660e\uff1a\n\n\u5145\u5206\u6027\u975e\u5e38\u663e\u7136\uff0c\u4e0b\u8bc1\u5fc5\u8981\u6027\u3002\n\n\u4e0b\u9762\u7b80\u79f0 $(u,v)$ \u4e4b\u95f4\u4ec5\u901a\u8fc7\u5c0f\u4e8e $\\min(u,v)$ \u7684\u70b9\u8fde\u901a\u7684\u8def\u5f84\u4e3a\u5408\u6cd5\u8def\u5f84\u3002\n\n\u91c7\u7528\u53cd\u8bc1\u6cd5\uff0c\u5047\u8bbe\u4e24\u4e2a\u70b9 $u,v$\uff0c$u<v$\uff0c\u672c\u6765\u4e4b\u95f4\u4e0d\u5b58\u5728\u5408\u6cd5\u8def\u5f84\uff0c\u800c\u6700\u540e\u76f4\u63a5\u76f8\u8fde\u4e86\uff0c\u90a3\u4e48\u81ea\u7136\u5b83\u4eec\u6700\u7ec8\u6ee1\u8db3\"\u53ef\u4ee5\u4e0d\u7ecf\u8fc7\u5927\u4e8e $\\min(u,v)$ \u7684\u70b9\u8fde\u901a\"\uff0c\u5373\u5408\u6cd5\u8def\u5f84\u5728\u6700\u540e\u51fa\u73b0\u4e86\u3002\n\n\u8003\u8651\u5b83\u4eec\u4e4b\u95f4\u7b2c\u4e00\u6b21\u5b58\u5728\u5408\u6cd5\u8def\u5f84\u7684\u65f6\u523b\uff1a\u53bb\u6389\u70b9 $p$ \u524d\u4e0d\u5b58\u5728\u5408\u6cd5\u8def\u5f84\uff0c\u53bb\u6389\u70b9 $p$ \u540e\u5b58\u5728\u5408\u6cd5\u8def\u5f84\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u6c42 $p$ \u8d70\u6389\u540e $u,v$ \u8fd8\u5f97\u5728\u573a\uff0c\u6240\u4ee5 $p<\\min(u,v)$\u3002\n\n\u8bbe\u53bb\u6389\u70b9 $p$ \u540e\u8fb9 $(s,p)$ \u548c $(p,t)$ \u53d8\u6210\u4e86\u8fb9 $(s,t)$\uff0c\u800c $(u,v)$ \u7684\u5408\u6cd5\u8def\u5f84\u4e0a\u7ecf\u8fc7 $(s,t)$ \u8fd9\u6761\u8fb9\uff0c\u4e8e\u662f $s,t<\\min(u,v)$\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u5728\u53bb\u6389 $p$ \u4e4b\u524d\uff0c\u7531\u4e8e $s,t,p$ \u5747\u5c0f\u4e8e $\\min(u,v)$ \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u5408\u6cd5\u8def\u5f84\u4e0a\u7684 $(s,t)$ \u6362\u6210 $(s,p),(p,t)$ \uff0c\u8bf4\u660e\u53bb\u6389 $p$ \u4e4b\u524d\u4e5f\u662f\u5b58\u5728\u5408\u6cd5\u8def\u5f84\u7684\uff0c\u4e0e\u5047\u8bbe\u77db\u76fe\u3002\n\n\u56e0\u6b64\uff0c\u5fc5\u8981\u6027\u5f97\u8bc1\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e24\u70b9 $(u,v)$ \u95f4\uff0c\u82e5\u521d\u59cb\u4e0d\u5b58\u5728\u5408\u6cd5\u8def\u5f84\uff0c\u5219\u6700\u7ec8\u4e0d\u53ef\u80fd\u76f4\u63a5\u8fde\u901a\u3002\n\n## \u5b9e\u73b0\uff1a\n\n\u5bf9\u4e8e\u6240\u6709\u70b9\u5bf9 $(u,v),u<v$ \u4e0d\u59a8\u679a\u4e3e $u$ \u3002\n\n\u8bb0 $S_x$ \u8868\u793a\u6240\u6709\u4e0e $x$ \u76f4\u63a5\u76f8\u90bb\u7684\u70b9\u6240\u6784\u6210\u7684\u96c6\u5408\u3002\n\n\u5f53\u6211\u4eec\u5904\u7406\u70b9 $x$ \u65f6\u9700\u8981\u4fdd\u8bc1\u6240\u6709\u4e24\u7aef\u7f16\u53f7\u5747\u4e0d\u5927\u4e8e $x$ \u7684\u8fb9\u5df2\u7ecf\u52a0\u8fdb\u6765\u4e86\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u52a0\u8fb9\u7684\u8fc7\u7a0b\u3002\u7136\u540e\uff0c\u8003\u8651 $x$ \u6240\u5728\u8fde\u901a\u5757\uff0c\u5176 \n $\\bigcup S$ \u4e2d\u5927\u4e8e $x$ \u7684\u70b9\u7684\u4e2a\u6570\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u4e1c\u897f\uff0c**\u7ebf\u6bb5\u6811\u5408\u5e76**\u7ef4\u62a4\u533a\u95f4\u548c\u5373\u53ef\u3002\n\n\u6ce8\u610f\u53bb\u9664\u521d\u59cb\u65f6\u7684\u670b\u53cb\u5173\u7cfb\uff0c\u5373\u521d\u59cb $ans=-m$ \u3002\u590d\u6742\u5ea6 $\\mathcal{O}(m+n\\log n)$ \u3002\n\n\u4e0d\u4ecb\u610f\u590d\u6742\u5ea6\u591a\u4e00\u4e2a $\\log n$ \u7684\u8bdd\u53ef\u4ee5\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u5e73\u8861\u6811/\u5806\u7ef4\u62a4 $\\bigcup S$ \u3002\n  \n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nint n, m, d[200005], fa[200005];\nlong long s[200005];\nlong long ans = 0ll;\nstd::vector <int> v[200005];\nconst int M = 7000005;\nint ls[M], rs[M], tot = 0, sum[M];\nint root[200005];\nint fd(int x){\n\treturn x == fa[x] ? x : fa[x] = fd(fa[x]);\n}\nint Merge(int x, int y, int l, int r){\n\tif(!x || !y) return x | y;\n\tif(l == r){\n\t\tsum[x] = sum[x] | sum[y];\n\t\treturn x;\n\t}\n\tint mid = l + r >> 1;\n\tls[x] = Merge(ls[x], ls[y], l, mid);\n\trs[x] = Merge(rs[x], rs[y], mid + 1, r);\n\tsum[x] = sum[ls[x]] + sum[rs[x]];\n\treturn x;\n}\nint update(int x, int l, int r, int y){\n\tif(!x) x = ++tot;\n\tif(l == r){\n\t\tsum[x] = 1;\n\t\treturn x;\n\t}\n\tint mid = l + r >> 1;\n\tif(y <= mid) ls[x] = update(ls[x], l, mid, y);\n\telse rs[x] = update(rs[x], mid + 1, r, y);\n\tsum[x] = sum[ls[x]] + sum[rs[x]];\n\treturn x; \n}\nint ask(int x, int l, int r, int L, int R){\n\tif(!x) return 0;\n\tif(l == L && r == R) return sum[x];\n\tint mid = l + r >> 1;\n\tif(R <= mid) return ask(ls[x], l, mid, L, R);\n\telse if(L >= mid + 1) return ask(rs[x], mid + 1, r, L, R);\n\treturn ask(ls[x], l, mid, L, mid) + ask(rs[x], mid + 1, r, mid + 1, R);\n}\ninline void merge(int x, int y){\n\tx = fd(x), y = fd(y);\n\tif(x == y) return ;\n\tfa[y] = x;\n\troot[x] = Merge(root[x], root[y], 1, n);\n\treturn ;\n}\nint main(){\n\tscanf(\"%d%d\", &n, &m);\n\tans = -1ll * m;\n\tfor(int i = 1; i <= n; ++i) fa[i] = i;\n\tfor(int j = 1; j <= m; ++j){\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tif(x > y) std::swap(x, y);\n\t\tv[y].push_back(x);\n\t\troot[x] = update(root[x], 1, n, y);\n\t}\n\tfor(int i = 1; i <= n; ++i){\n\t\tfor(int j = 0; j < v[i].size(); ++j)\n\t\t\tmerge(i, v[i][j]);\n\t\tif(i != n)\n\t\t\tans = ans + 1ll * ask(root[fd(i)], 1, n, i + 1, n);\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1672491480,
        "uid": 131591,
        "name": "\u849f\u84bb\u541bHJT",
        "ccfLevel": 7,
        "title": "P8907 [USACO22DEC] Making Friends P \u9898\u89e3"
    }
]