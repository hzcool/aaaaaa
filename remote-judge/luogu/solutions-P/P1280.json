[
    {
        "content": "\u5514~\u666e\u53ca\u7ec4\u6c34\u9898\uff0c\u6bd4\u8f83\u9002\u5408DP\u7ec3\u4e60\n\n\n\u8fd9\u9898\u663e\u7136\u662f\u4e00\u4e2a\u7ebf\u6027\u52a8\u89c4\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u7b2c\u4e00\u65f6\u95f4\u60f3\u5230\u8bbef[i]:1~i\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\uff0c\u4f46\u662f\uff0c\u60f3\u4e86\u4e00\u4e0b\u4e4b\u540e\u53d1\u73b0\uff0c\u7b2ci\u65f6\u523b\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\u662f\u548c\u540e\u9762i+\u9009\u62e9\u4efb\u52a1\u7684\u6301\u7eed\u65f6\u95f4\u7684\u65f6\u523b\u6709\u5173\u7cfb\u7684\uff0c\u90a3\u4e48\uff0c\u6b63\u7740\u627e\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u6211\u4eec\u6765\u8bd5\u4e00\u4e0b\u5012\u7740\u641c,\u5373\u8bbef[i]\u8868\u793ai~n\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\uff0c\u7ecf\u5c1d\u8bd5\uff0c\u53d1\u73b0\u662f\u5b8c\u5168\u53ef\u884c\u7684\uff0c\u53ef\u4ee5\u5217\u51fa\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\n\n**\uff08\u672c\u65f6\u523b\u65e0\u4efb\u52a1\uff09f[i]=f[i+1]+1;//\u7ee7\u627f\u4e0a\u4e00\u4e2a\u65f6\u523b\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\u540e+1**\n\n**\uff08\u672c\u65f6\u523b\u6709\u4efb\u52a1\uff09f[i]=max(f[i],f[i+a[sum])//a[sum]\u8868\u793a\u5728\u8fd9\u4e2a\u65f6\u523b\u7684\u4efb\u52a1\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u627e\u51fa\u9009\u62e9\u54ea\u4e00\u4e2a\u672c\u65f6\u523b\u4efb\u52a1\u4f7f\u7a7a\u95f2\u65f6\u95f4\u6700\u5927\u5316**\n\n\u90a3\u4e48\u65e2\u7136\u662f\u5012\u7740\u641c\uff0c\u4ece\u540e\u5f80\u524d\u7684\u4efb\u52a1\u5bf9\u5e94\u7684\u5f00\u59cb\u65f6\u95f4\u81ea\u7136\u4e5f\u8981\u53cd\u8fc7\u6765\uff0c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff08\u540c\u65f6\u4e5f\u662f\u4e3a\u4e86\u628a\u76f8\u540c\u5f00\u59cb\u65f6\u95f4\u7684\u4efb\u52a1\u653e\u5230\u4e00\u8d77\uff09,\u5f53\u7136\u5728\u8fdb\u884c\u72b6\u6001\u5237\u65b0\u7684\u65f6\u5019\u522b\u5fd8\u4e86\u62ffsum\u4e0d\u65ad\u8ba1\u4e00\u4e0b\u5df2\u7ecf\u5230\u54ea\u4e00\u4e2a\u4efb\u52a1\u4e86\n\n\n\u90a3\u4e48\u3002\u3002\u559c\u95fb\u4e50\u89c1\u7684\uff0c\u4e0a\u4ee3\u7801\u3002\u3002\u3002\u3002\n\n\n```cpp\n#include<iostream>  \n#include<algorithm>  \nusing namespace std;  \nlong int n,k,sum[10001],num=1,f[10001];  \nstruct ren//\u7ed3\u6784\u4f53\uff0c\u4e00\u8d77\u6392\u5e8f \uff0c\u4ece\u5927\u5230\u5c0f   \n{  \n    long int ks,js;  \n};  \nren z[10001];  \nint cmp(ren a,ren b)  \n{  \n    return a.ks>b.ks;  \n}  \nint main()  \n{  \n    long int i,j;   \n    cin>>n>>k;  \n    for(i=1;i<=k;i++)  \n    {  \n    cin>>z[i].ks>>z[i].js;    \n    sum[z[i].ks]++;  \n    }  \n    sort(z+1,z+k+1,cmp);  \n    for(i=n;i>=1;i--)//\u5012\u7740\u641c   \n    {  \n        if(sum[i]==0)  \n        f[i]=f[i+1]+1;  \n        else for(j=1;j<=sum[i];j++)  \n        {  \n            if(f[i+z[num].js]>f[i])  \n            f[i]=f[i+z[num].js];  \n            num++;//\u5f53\u524d\u5df2\u626b\u8fc7\u7684\u4efb\u52a1\u6570   \n        }  \n    }  \n    cout<<f[1]<<endl;  \n}  \n\n```",
        "postTime": 1506747940,
        "uid": 3573,
        "name": "\u738b\u5c3c\u739b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u3010\u8bbe\u3011f[i]\u8868\u793a1\u5230i\u4e2a\u65f6\u95f4\u6700\u5927\u7a7a\u95f2\u503c\u3002\n\n\u3010\u5206\u6790\u3011\u672c\u9898\u662f\u4e00\u9053\u8d44\u6e90\u5206\u914d\u7c7b\u52a8\u6001\u89c4\u5212\u3002\u6211\u4eec\u53ef\u4ee5\u5212\u5206\u9636\u6bb5\u7684\u6807\u51c6\u662f\u65f6\u95f4\u548c\u4efb\u52a1\u3002\u5982\u679c\u5c3c\u514b\u5728\u4e00\u4e2a\u65f6\u95f4\u70b9\u4e0a\u6ca1\u6709\u63a5\u5230\u4efb\u52a1\uff0c\u6211\u4eec\u5c31\u8ba9\u4ed6\u5ef6\u7eed\u4ed6\u539f\u6765\u7684\u7a7a\u95f2\u65f6\u6bb5\uff0c\u73b0\u5728\u7a7a\u95f2\u65f6\u95f4=\u4e0a\u4e00\u4e2a\u7a7a\u95f2\u70b9\u7684\u7a7a\u95f2\u65f6\u95f4+1\uff1b\u5982\u679c\u8fd9\u65f6\u6709\u8fd9\u4e2a\u65f6\u95f4\u70b9\u5f00\u59cb\u7684\u4efb\u52a1\uff0c\u6211\u4eec\u5c31\u5c06\u5176\u63d2\u5165\uff0c\u6709\u591a\u4e2a\u8fd9\u6837\u7684\u4efb\u52a1\u4f9b\u6211\u4eec\u9009\u62e9\u6700\u4f18\u7684\u3002\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u95f4\u70b9\u5c3c\u514b\u53ea\u6709\u4e24\u4e2a\u9009\u62e9\u8981\u4e48\u5b8c\u6210\u4e00\u4e2a\u4efb\u52a1\u8981\u4e48\u4ec0\u4e48\u90fd\u4e0d\u5e72\uff0c\u4ee5\u5f00\u59cb\u65f6\u95f4\u6765\u9009\u62e9\u6bcf\u4e00\u6b21\u90fd\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u6700\u4f18\u7684\u3002\u4f46\u662f\u672c\u9898\u597d\u5728\u5f00\u59cb\u65f6\u95f4\u548c\u5b8c\u6210\u65f6\u95f4\u90fd\u6709\u4e00\u4e2a\u4e25\u683c\u7684\u9650\u5b9a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u4e00\u4e2a\u4efb\u52a1\u63d2\u5165\u5728\u54ea\u4e2a\u65f6\u95f4\u7ed3\u675f\uff0c\u53ea\u8981\u6839\u636e\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u63d2\u5165\u63a7\u5236\u5c31\u884c\u4e86\u3002\n\n\u3010\u6700\u4f18\u5b50\u7ed3\u6784\u3011\n\n\u672c\u9898\u7684\u6700\u4f18\u5b50\u7ed3\u6784\u53ef\u4ee5\u5efa\u7acb\u5728\u5f00\u59cb\u65f6\u95f4\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5efa\u7acb\u5728\u7ed3\u675f\u65f6\u95f4\u4e0a\u3002\u5148\u8bf4\u7ed3\u675f\u65f6\u95f4\uff1a\n\n```delphi\n\nj:=1;\nfor i:=1 to n do\n   if p[j]+t[j]-1<>i then f[i]:=f[i-1]+1\n   else\n      while p[j]+t[j]-1=i do\n         begin\n         if f[i]<f[p[j]-1]\n            then f[i]:=f[p[j]-1];\n         inc(j);\n         end;\n\n```\n\u4e0a\u8ff0\u7a0b\u5e8f\u770b\u4f3c\u5b8c\u7f8e\uff0c\u6211\u4eec\u4e0d\u96be\u4e3e\u51fa\u53cd\u4f8b\uff0c\u5982\u4e09\u4e2a\u4efb\u52a1\uff081\uff0c6\uff09\uff082\uff0c3\uff09\uff081\uff0c4\uff09\uff0c\u6211\u4eec\u770b\u5230\u56e0\u4e3a\u8f93\u5165\u6570\u636e\u53ea\u80fd\u4fdd\u8bc1\u5f00\u59cb\u65f6\u95f4\u4e25\u683c\u6392\u5e8f\uff0c\u800c\u4e0d\u662f\u7ed3\u675f\u65f6\u95f4\uff0c\u6240\u4ee5\u5f53j\u7b49\u4e8e1\u7684\u65f6\u5019f[i]\u53ea\u4f1a\u8003\u8651\u60c5\u51b5\u4e00\uff0c\u56e0\u4e3a\u5728while\u5faa\u73af\u4e2d\u5f00\u59cb\u6c38\u8fdc\u662f\u56e0\u4e3a\u73a9\u4e0d\u6210\u800c\u8df3\u51fa\uff0cj\u503c\u52a0\u4e0d\u4e861.\n\n\u9488\u5bf9\u6b64\u95ee\u9898\u53ea\u80fd\u5728\u5f00\u59cb\u5728\u5bf9\u7ed3\u675f\u8fdb\u884c\u4e00\u4e2a\u6392\u5e8f\uff0c\u65f6\u95f4\u4e0a\u4e0d\u591f\u3002\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u5f00\u59cb\u65f6\u95f4\u7531\u5927\u5230\u5c0f\u8fdb\u884c\u9006\u63a8\u6c42\u89e3\uff0c\u56e0\u4e3a\u5f00\u59cb\u65f6\u95f4\u662f\u4e92\u4e0d\u5e72\u6d89\u7684\uff0c\u800c\u4e14\u8f93\u5165\u65f6\u5c31\u6709\u987a\u5e8f\uff0c\u5177\u5907\u65e0\u540e\u6548\u6027\u3002\u4e0b\u9762\u6211\u4eec\u7167\u6b64\u65b9\u6cd5\u5199\u65b9\u7a0b\u3002\n\n\u3010\u65b9\u7a0b\u3011\n\nf[i]=f[i+1]+1     \u5982\u679ci<>p[j]\n\nf[i]=max{f[i+t[j]]}\u5982\u679cp[j]=i\n",
        "postTime": 1377585116,
        "uid": 1,
        "name": "kkksc03",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "## $O(n+k)$\u505a\u6cd5\n\n`f[i]`\u8868\u793a\u7b2c$i$\u5206\u949f\u8d77\u6700\u5927\u95f2\u6687\u65f6\u95f4\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n- \u5982\u679c\u5f53\u524d\u65e0\u4efb\u52a1\uff0c`f[i]=f[i+1]+1`\n- \u5982\u679c\u5f53\u524d\u7b2c$i$\u4e2a\u4efb\u52a1\u6301\u7eed$t_i$\u5206\u949f`f[i]=max(f[i+t[i]])`\n\n\u9012\u63a8\u987a\u5e8f\uff1a`for(i=n;i>0;i--)`\n\n\u7b54\u6848\uff1a`f[1]`\n\n\u5b9e\u73b0\u65b9\u5f0f\uff1a\u52a8\u6001\u6570\u7ec4$v_i$\u5b58\u5728\u65f6\u523b$i$\u5f00\u59cb\u7684\u4efb\u52a1\u6301\u7eed\u65f6\u95f4\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nint n,k,s,t,f[10002];\nvector<int>v[10001];\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    while(k--){\n        scanf(\"%d%d\",&s,&t);\n        v[s].push_back(t);\n    }\n    for(int i=n;i;--i){\n        if(v[i].size()>0)\n            for(int j=0;j<v[i].size();++j)\n                f[i]=max(f[i],f[i+v[i][j]]);\n        else f[i]=f[i+1]+1;            \n    }\n    printf(\"%d\",f[1]);\n}\n```",
        "postTime": 1538572589,
        "uid": 35406,
        "name": "\u300c\u5df2\u6ce8\u9500\u300d",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "### \u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u6700\u77ed\u8def\uff08\u6700\u957f\u8def\uff1f\uff09\u505a\u3002\n\n\u5c06\u65f6\u95f4\u70b9\u4f5c\u4e3a\u56fe\u8bba\u7684\u70b9\u3002\n\n\u4ece\u7b2cP\u5206\u949f\u5f00\u59cb\uff0c\u6301\u7eed\u65f6\u95f4\u4e3aT\u5206\u949f\u7684\u4efb\u52a1\u89c6\u4e3a\u4eceP\u70b9\u5230P+T\u70b9\u8fde\u4e00\u6761\u6743\u4e3aT\u7684\u8fb9\u3002\uff08\u8fb9\u7684\u8d77\u70b9\u662f\u4efb\u52a1\u7684\u8d77\u59cb\u65f6\u95f4\uff0c\u7ec8\u70b9\u662f\u4efb\u52a1\u7ed3\u675f\u65f6\u95f4\u7684\u4e0b\u4e00\u5206\u949f\uff09\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u5230\u6700\u540e\u4e5f\u6ca1\u6709\u51fa\u5ea6\uff0c\u5219\u5411\u540e\u4e00\u4e2a\u70b9\u8fde\u8fb9\u6743\u4e3a0\u7684\u8fb9\uff08\u6ca1\u6d3b\u5e72\uff0c\u8fd9\u4e00\u5206\u949f\u4ed6\u53ef\u4ee5\u6478\u9c7c\u3002\u3002\u3002\uff09\n\n\u8dd1\u6700\u77ed\u8def\u5c31\u5f97\u5230\u4ed6\u81f3\u5c11\u8981\u5e72\u591a\u957f\u65f6\u95f4\uff0c\u7b54\u6848\u5c31\u662f\uff08n-\u6700\u77ed\u8def\u7ed3\u679c\uff09\n\n\u5982\u679c\u5c06\u8fb9\u6743\u4f5c\u4e3a\u4f11\u606f\u65f6\u95f4\u7684\u8bdd\u7528\u6700\u957f\u8def\u4e5f\u80fd\u505a\n\ncode:\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define N 10005\nusing namespace std;\nstruct Edge{\n    int to,next,w;\n}edge[N*2];\nint head[N],tot;\nvoid addedge(int from,int to,int w){\n    edge[++tot].to=to;\n    edge[tot].w=w;\n    edge[tot].next=head[from];\n    head[from]=tot;\n}\nint dis[N];\nbool vis[N];\nvoid spfa(){\n    memset(dis,0x7f,sizeof(dis));\n    dis[1]=0;\n    queue<int> q;\n    q.push(1);\n    int now;\n    while(!q.empty()){\n        now=q.front();\n        q.pop();\n        vis[now]=false;\n        for(int i=head[now];i;i=edge[i].next){\n            if(dis[edge[i].to]>dis[now]+edge[i].w){\n                dis[edge[i].to]=dis[now]+edge[i].w;\n                if(!vis[edge[i].to]){\n                    q.push(edge[i].to);\n                    vis[edge[i].to]=true;\n                }\n            }\n        }\n    }\n}\nint main(){\n    int n,k,p,t;\n    scanf(\"%d%d\",&n,&k);\n    while(k--){\n        scanf(\"%d%d\",&p,&t);\n        addedge(p,p+t,t);\n    }\n    for(int i=1;i<=n;++i){\n        if(head[i]==0){\n            addedge(i,i+1,0);\n        }\n    }\n    spfa();\n    printf(\"%d\",n-dis[n+1]);\n}\n```\n",
        "postTime": 1551587519,
        "uid": 120867,
        "name": "tong_xz",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u611f\u89c9\u6b63\u7740\u505a\u633a\u987a\u7684\u554a..\n\n\u4e0b\u9762\u7ed9\u51fa1\u4e2a\u5f88\u597d\u7406\u89e3\u7684\u505a\u6cd5.\n\n\u5148\u770b\u6837\u4f8b.\n\n ![](https://cdn.luogu.com.cn/upload/pic/12223.png) \n\nniko\u9009\u4e86$(1,6]$\u4e0e$(8,13]$2\u4e2a\u5de5\u4f5c.\n\n\u610f\u601d\u662f\u4ece\u65f6\u95f4**1**\u5f00\u59cb,\u5230\u65f6\u95f4**6**\u7ed3\u675f\u90fd\u662f\u5de5\u4f5c\u65f6\u95f4.\n\n\u56fe\u4e0a\u7684\u7ea2\u5b9e\u7ebf\u4ee3\u8868\u9009\u62e9\u7684\u5de5\u4f5c.\u865a\u7ebf\u6bb5$MN$\u4e0e$OP$\u90fd\u4ee3\u8868\u7a7a\u95f2\u65f6\u95f4.\n\n\u6ce8\u610f\u56fe\u4e0a\u7684\u533a\u95f4\u662f$(1,7)$\u548c$(8,13)$.\n\n\u5f3a\u8c03\u8fd92\u4e2a\u90fd\u662f\u5f00\u59cb\u65f6\u95f4.\u4e5f\u5c31\u662f\u4ece\u65f6\u95f4**1**\u5f00\u59cb,\u5230\u65f6\u95f4**7**\u5f00\u59cb.\u4e2d\u95f4\u6709**6**\u6bb5.\n\n\u65f6\u95f4**6**\u7684**\u7ed3\u675f\u65f6\u95f4**\u4e0e\u65f6\u95f4**7**\u7684**\u5f00\u59cb\u65f6\u95f4**\u5e94\u8be5\u662f1\u6837\u7684\u5427.\n\n\u8fd9\u6837\u5c31\u597d\u5904\u7406\u591a\u4e86.\u76f4\u63a5\n\n```cpp\nt[i] += p[i]\n```\n\u4ee3\u8868\u7ed3\u675f\u7684\u65f6\u5019.\n\n\n------------\n\n\n~~\u8bb2\u5b8c\u4e86\u70e9\u8bdd.~~\u4e0b\u9762\u8fdb\u5165\u9898\u89e3.\n\n\u9898\u610f\u8981\u6c42.\u5728\u67d0\u4e2a\u65f6\u95f4\u4e0a.niko\u6709\u4efb\u52a1\u5fc5\u987b\u505a.\u6709\u591a\u4e2a\u4efb\u52a1\u9009\u62e9\u4efb\u610f1\u4e2a.\n\n\u95ee\u4ece\u5f00\u59cb\u5230\u7ed3\u675f\u7684\u6700\u5927\u7a7a\u95f2\u7684\u65f6\u95f4.\n\n\u9996\u5148\u5f53\u7136\u8981\u6309\u8d77\u59cb\u65f6\u95f4\u6392\u5e8f..\n\n\u4e4b\u540e\u5462.\u6211\u4eec\u77e5\u9053.\u7a7a\u95f2\u65f6\u95f4\u662f\u4ece2\u4e2a\u4efb\u52a1\u7684\u4e2d\u95f4\u65f6\u95f4\u7701\u4e0b\u6765\u7684..\n\n\u7a76\u7adf\u6709\u6ca1\u6709\u8fd9\u6bb5\u7a7a\u95f2\u65f6\u95f4.?\n\n\u5982\u679c\u6709\u7684\u8bdd,\u8bf4\u660e\u5728\u8fd9**\u4e2d\u95f4**1\u5b9a\u6ca1\u6709\u5176\u5b83\u4efb\u52a1\u4e86.\n\n\u4e0d\u7136niko\u4f1a\u4f18\u5148\u505a\u8fd9\u4e2a\"\u5176\u5b83\u7684\u4efb\u52a1.\".\n\n\u4e0d\u7ba1\u8fd9\u4e2a\u4efb\u52a1\u505a\u7684\u7a76\u7adf\u6709\u591a\u5feb.\u8fd9\u6bb5\u7a7a\u95f2\u65f6\u95f41\u5b9a\u88ab**\u7834\u574f**\u4e86.\n\n\u7a7a\u95f2\u65f6\u95f4\u867d\u7136\u4e0d\u5b8c\u6574.\u4f46\u662f\u5982\u679c\u4ecd\u7136\u5b58\u5728.\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\"\u5176\u5b83\u7684\u4efb\u52a1.\"\u6765\u8f6c\u79fb.\n\n\u6240\u4ee5\u53ea\u8981\u5173\u6ce8\u79bb\u8fd9\u4e2a\u4efb\u52a1\u5f00\u59cb\u65f6\u95f4**\u6700\u8fd1**\u7684\u4efb\u52a1\u5c31\u884c\u4e86..\n\n\u90a3\u4e48\u8bbe$f[i]$\u8868\u793a\u5230\u7b2c**i**\u4e2a\u4efb\u52a1\u5f00\u59cb\u65f6.\u6700\u5927\u7684\u7a7a\u95f2\u65f6\u95f4.\n\n\u8f6c\u79fb\u65b9\u7a0b:$f[i] = max(f[j]+p[i]-t[j]),(1 <= j<= i-1)$.\n\n$p[i]$,$t[i]$\u8868\u793a\u4efb\u52a1$i$\u7684\u8d77\u59cb\u65f6\u95f4\u4e0e\u7ed3\u675f\u65f6\u95f4.\n\n\u5176\u4e2d$i$\u8981\u6ee1\u8db3.$p[i] = min(p[k],(1 <= k <= n,p[k] >= t[j]))$\u8f6c\u79fb\u624d\u6210\u7acb.\n\n\u770b\u8d77\u6765\u9ebb\u70e6.?\n\n~~\u4f2a~~\u4ee3\u7801.\n\n```cpp\nfor (int i = 1; i <= n; i++)\n    for (int j = 1; j <= i-1; j++)\n        if (p[i] >= t[j] && p[i] <= b[j]){\n            f[i] = max(f[i],f[j]+p[i]-t[j]);\n            b[j] = p[i];\n        }\n```\n\u7528$b[j]$\u8bb0\u5f55\u4e0b\u8ddd\u79bb$t[j]$\u7684\u6700\u5c0f\u503c.\n\n\u53ef\u884c\u6027\u5f88\u5bb9\u6613\u63a2\u7a76.-\n\n\u6700\u540e\u628a\u5934\u5c3e2\u4e2a\u5f53\u4f5c\u5de5\u4f5c\u52a0\u8fdb\u53bb.\u8f93\u51fa$f[n]$\u5c31\u53ef\u4ee5\u4e86..\n\n\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6$O(\\frac{n^2}{2})$.\u7a7a\u95f4$O(4n)$.\u8fd8\u662f\u80fd\u8fc7\u7684..\n\nDiu\u4ee3\u7801..\n\n```cpp\nprogram P1280;\n var\n  b,f,x,y,z:array[0..10001] of longint;\n  i,j,k,p,n:longint;\n function hahamax(x,y:longint):longint;   //\u6700\u5927\u503c\u6bd4\u8f83..(math.)\n  begin\n   if x>y then exit(x)\n          else exit(y);\n  end;\n procedure hahasort(l,r:longint);         //\u5feb\u901f\u6392\u5e8f..\n  var\n   o,p,m,t:longint;\n  begin\n   o:=l;\n   p:=r;\n   m:=x[(o+p) div 2];\n   repeat\n    while x[o]<m do inc(o);\n    while x[p]>m do dec(p);\n    if o<=p then\n     begin\n      t:=x[o];\n      x[o]:=x[p];\n      x[p]:=t;\n      t:=y[o];\n      y[o]:=y[p];\n      y[p]:=t;\n      inc(o);\n      dec(p);\n     end;\n   until o>p;\n   if o<r then hahasort(o,r);\n   if l<p then hahasort(l,p);\n  end;\n begin\n  readln(n,k);\n  for i:=1 to k do\n   begin\n    readln(x[i],y[i]);                     //x,y\u5c31\u662f\u4e0a\u9762\u7684p,t.\n    inc(y[i],x[i]);                        //\u505a\u7c7b\u4f3c\u5f00\u533a\u95f4\u5904\u7406..\n   end;\n  x[0]:=1;\n  y[0]:=1;\n // fillchar(z,sizeof(z),0);               //\u8c03\u8bd5\u7528.-\n  inc(k);\n  x[k]:=n+1;                               //\u7531\u4e8e\u662f\u5f00\u533a\u95f4..\n  y[k]:=n+1;                               //\u7ed3\u675f\u53d8\u6210n+1..\n  hahasort(1,k-1);\n  for i:=0 to k do\n   begin\n    b[i]:=1008208820;                      //\u521d\u59cb\u5316b[i]\u6700\u5927.\n    f[i]:=-1008208820;                     //\u8bf4\u660e\u4efb\u52a1\u8fd8\u4e0d\u80fd\u505a.\n   end;\n  f[0]:=0;                                 //working.\n  for i:=0 to k do\n   for j:=0 to i-1 do\n    if (b[j]>=x[i]) and (x[i]>=y[j]) then\n     begin\n      f[i]:=hahamax(f[i],f[j]+x[i]-y[j]);  //\u80fd\u8f6c\u79fb\u7684\u8f6c\u79fb.\n      b[j]:=x[i];                          //\u627e\u5230\u6700\u8fd1\u7684\u5de5\u4f5c.\n     end;                                  //\u53ef\u80fd\u6709\u591a\u4e2a.\n  writeln(f[k]);\n end.\n```\n(\u0ca1\u03c9\u0ca1).\n",
        "postTime": 1513756600,
        "uid": 20454,
        "name": "BFSBFSBFSBFS",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u6240\u6709\u80fd\u627e\u5230\u7684\u9898\u89e3\u90fd\u662f\u5012\u63a8\u7684\uff0c \u770b\u4e86\u8ba8\u8bba\u91cc\u8bf4\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u8981\u5012\u63a8\u7684\u8bf4\u660e\u3002\u3002\u3002\n\n\u8ba4\u4e3a\u53ea\u80fd\u8bf4\u5728\u90a3\u79cd\u5b9a\u4e49\u4e0b\u53ea\u80fd\u5012\u63a8\n\n\u8868\u793a\u6b63\u63a8\u8fc7\u4e86\u3002\u3002\u3002\u611f\u89c9\u6ca1\u6bdb\u75c5\u554a\n\n\u6240\u4ee5\u653e\u4e00\u7bc7\u6b63\u63a8\u7684\u9898\u89e3QAQ\n\n//\u80fd\u8fc7\u4e0d\u6392\u9664\u6570\u636e\u6ca1\u5361\u6389\u9519\u8bef\u7684\u70b9\uff0c \u6b22\u8fce\u5927\u4f6c\u65a7\u6b63\n\n\n\u5b9a\u4e49f[i]\u4e3a\u4ece1\u5f00\u59cb\u5230\u5f53\u524d\u65f6\u95f4\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u4f11\u95f2\u65f6\u95f4\n\n\u4ece\u5f53\u524d\u70b9\u5411\u540e\u63a8\uff0c \u66f4\u65b0\u540e\u7eed\u7ed3\u70b9\u7684\u6700\u5927\u4f11\u95f2\u65f6\u95f4\n\n\u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a//\u4f2a\u4ee3\u7801\n\n\nif(\u5f53\u524d\u70b9\u65e0\u4efb\u52a1\uff09\n\n\n```cpp\n    f[i+1]=f[i]+1;\nelse \n    for(\u904d\u5386\u5f53\u524d\u70b9\u5f00\u59cb\u7684\u6240\u6709\u4efb\u52a1)\n        f[i+t[j]]=max(f[i+t[j]], f[i]);\n```\n\u8bb0\u5f97 f \u6570\u7ec4\u521d\u59cb\u5316\u4e3a\u5f88\u5c0f\u7684\u6570\u554a\n\u6309\u9898\u610f\u4ece1\u5f00\u59cb\u8ba1\u7b97\uff0c \u6240\u4ee5ans=f[n+1]\n\n\n//\u603b\u5171\u5de5\u4f5c\u4e86n\u5206\u949f\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff0c\u5982\u679c\u4e0a\u9762\u6211\u6ca1\u6709\u8bf4\u6e05\u695a\u7684\u8bdd\u53ef\u4ee5\u770b\u4e00\u770b\n\n\u5982\u679c\u8fd8\u4e0d\u662f\u5f88\u6e05\u695a\u6b22\u8fce\u548c\u6211\u8ba8\u8bbaQwQ\n\n\u6709\u9519\u8bef\u8bf7\u6307\u51fa\u8c22\u8c22\n\n//\u56e0\u4e3a\u7f16\u8f91\u5668\u7684\u539f\u56e0\u7f29\u8fdb\u662f\u4e24\u4e2a\u7a7a\u683c\uff0c \u4ee5\u53ca\u4ee3\u7801\u98ce\u683c\u5514\u3002\u3002\u3002\n\n\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N = 1e5+5;\nint f[N], n, k;\nvector<int> task[N];\nint main() {\n  memset(f, -0x3f, sizeof(f));\n  f[1]=0;\n  scanf(\"%d%d\", &n, &k);\n  while(k--) {\n    int x, t;\n    scanf(\"%d%d\", &x, &t);\n    task[x].push_back(t);\n  }\n  for(int i=1; i<=n; ++i) {\n    if(task[i].size()==0) \n      f[i+1]=max(f[i]+1, f[i+1]);\n    else\n      for(int j=0; j<task[i].size(); ++j) {\n    int &x=f[i+task[i][j]];\n    x=max(x, f[i]);\n    }\n  }\n  printf(\"%d\\n\", f[n+1]);\n  return 0;\n}\n```",
        "postTime": 1508139062,
        "uid": 31811,
        "name": "Ada____",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u597d\u591a\u9006\u63a8\u9898\u89e3\u7528\u5230\u4e86\u6392\u5e8f\uff0c\u6211\u8fd9\u4e2a\u849f\u84bb\u6839\u672c\u770b\u4e0d\u61c2\u554aQAQ\n\n\u8fd9\u662f**\u4e0d\u7528\u6392\u5e8f\u3001\u4e0d\u7528\u5b58\u6bcf\u4e2a\u4efb\u52a1**\u7684\u9006\u63a8\u505a\u6cd5\uff1a~~\uff08\u5176\u5b9e\u8fd8\u662f\u5b58\u4e86\uff09~~\n\n\u8f6c\u79fb\u8fd8\u662f\u4e00\u6837\u7684\uff0c\u7b80\u5355\u518d\u8bf4\u4e00\u4e0b\n\n`f[i]`\u8868\u793a\u4ece\u540e\u5f80\u524d\u63a8\u5230\u65f6\u523bi\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u65f6\u523bi\u6ca1\u6709\u4efb\u52a1\u5f00\u59cb\uff0c\u6211\u4eec\u5c31\u8ba9`f[i] = f[i+1] + 1`\u3002\u53ef\u80fd\u4f1a\u6709\u4eba\u6000\u7591i\u4e4b\u524d\u7684\u65f6\u523b\u4f1a\u4e0d\u4f1a\u4e5f\u628ai\u5360\u7528\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u5f0f\u5b50\u662f\u6ca1\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u4e4b\u524d\u7684\u4efb\u52a1\u4f1a\u5360\u7528i\uff0c\u90a3\u4e48\u5b83\u8f6c\u79fb\u7684\u65f6\u5019\u4e5f\u7528\u4e0d\u7740`f[i]`\u3002\n\n\u5176\u6b21\uff0c\u5982\u679c\u65f6\u523bi\u6709\u4efb\u52a1\u5f00\u59cb\uff0c\u6211\u4eec\u80af\u5b9a\u8981\u9009\u4e00\u4e2a**\u4efb\u52a1\u7ed3\u675f\u4e4b\u540e\u7a7a\u95f2\u65f6\u95f4\u6700\u5927**\u7684\u4efb\u52a1\u6765\u505a\u3002\u6211\u4eec\u8bfb\u5165\u7684\u65f6\u5019\u76f4\u63a5\u5b58\u50a8**\u5728\u65f6\u523bi\u5f00\u59cb\u7684\u4efb\u52a1\u662f\u54ea\u4e9b**\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u679a\u4e3e\uff0c\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\u5b58\u50a8\u8fd9\u4e9b\u4efb\u52a1\uff0cvector\u80fd\u5f88\u597d\u5730\u80dc\u4efb\u3002\uff08\u5728\u7a0b\u5e8f\u4e2d\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\u7701\u6389\u4e86\u5b58\u4efb\u52a1\u7684\u6570\u7ec4\uff0cvector\u76f4\u63a5\u5b58\u4e86\u7ed3\u675f\u65f6\u95f4\u3002\u5b9e\u9645\u4e0a\u4e5f\u53ea\u4f1a\u7528\u5230\u7ed3\u675f\u65f6\u95f4\uff0c\u7f16\u53f7\u6ca1\u6709\u7528\uff09\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 10008\nusing namespace std;\nint n, k, p, t, f[maxn]; //p t\u53ea\u662f\u7528\u6765\u8f93\u5165\u7684\nvector <int> b[maxn]; //b[i]\u5b58\u50a8\u7b2ci\u65f6\u523b\u5f00\u59cb\u7684\u4efb\u52a1\u7684\u7ed3\u675f\u65f6\u95f4 \n\nint main(){\n\tcin>>n>>k;\n\tfor(int i=1 ; i<=k ; i++){\n\t\tcin>>p>>t;\n\t\tb[p].push_back(t);\n\t}\n\tfor(int i=n ; i>=1 ; i--){ //\u4ece\u540e\u5f80\u524d\u679a\u4e3e\u65f6\u523b \n\t\tif(b[i].empty()) f[i] = f[i+1] + 1; //i\u65f6\u523b\u6ca1\u6709\u4efb\u52a1\u5f00\u59cb\n\t\telse{\n\t\t\tfor(int j=0 ; j<b[i].size() ; j++) //\u8fd9\u4e00\u65f6\u523b\u6709\u4efb\u52a1\uff0c\u679a\u4e3e\u8fd9\u4e9b\u4efb\u52a1\uff08\u7684\u7ed3\u675f\u65f6\u95f4\uff09\n\t\t\t\tf[i] = max(f[i], f[i + b[i][j]]); \n\t\t}\n\t}\n\tcerr<<f[1]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1539687716,
        "uid": 58197,
        "name": "BuXiangJuanLe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "1280 \u5c3c\u514b\u7684\u4efb\u52a1\n\n1.\u5b50\u4efb\u52a1   \u7b2ci\u65f6\u523b\u5c3c\u514b\u662f\u5426\u6709\u4efb\u52a1\u53ef\u9009  \u5982\u679c\u6709\uff0c\u9009\u54ea\u4e2a\u6b47\u7684\u65f6\u95f4\u66f4\u957f\n\n2.\u5b9a\u4e49\u72b6\u6001\n\n\u5728\u524di\u65f6\u523b\u5c3c\u514b\u6700\u591a\u6b47\u591a\u4e45\uff08\u6700\u5c11\u5de5\u4f5c\u591a\u4e45\uff09\uff1f\n\n3.\u72b6\u6001\u8f6c\u79fb\n\n\u672c\u9898\u8981\u5012\u7740\u63a8  \u53ca\u4ece\u5927\u7684\u65f6\u95f4\u5f80\u5c0f\u7684\u65f6\u95f4\u8f6c\u79fb   \u56e0\u4e3a   \u5982\u679c\u6b63\u7740  \u5728i\u7684\u65f6\u5019 \u663e\u7136\u8fd8\u6ca1\u8f6c\u79fb  i+t\n\n\u8003\u8651\u5982\u679c i\u65f6\u523b\u6ca1\u6709\u4efb\u52a1  \u5219 \u4ecei+1\u79d2 \u5230\u7b2c i \u79d2\u53ef\u4ee5\u6b47\u7740 \u5c31\u723d\u6b6a\u6b6a\u3002\n\n\u5982\u679c\u6709\u4efb\u52a1  \u5c31  \u4ece\u8fd9\u51e0\u4e2a\u4efb\u52a1\u4e2d \u9009\u62e9\u4e00\u4e2a\uff08\u6839\u636e\u7a0b\u5e8f\u9009\u62e9\u8f7b\u677e\u5730\uff0c\u5c31\u7f8e\u6ecb\u6ecb\uff01\uff09\n\n\u53ca\ndp\u3010i\u3011=dp\u3010i+1\u3011+1\uff1b\n\n\u6216\nif  t\u3010j\u3011\u3002s==i   \n\ndp\u3010i\u3011=max(dp\u3010i+t\u3010j\u3011\u3002e\u3011\uff0cdp\u3010i\u3011)\uff1b\n\n\u5177\u4f53\u770b\u4ee3\u7801\u5427\uff01\n\n\u5bf9\u4e86\u5728\u89e3\u91ca\u4e00\u4e2a\u95ee\u9898  sort\u5bf9\u4e8e\u8fd9\u9898\u800c\u8a00  \u5982\u679c\u4f60\u8981  \u6bcf\u6b21\u82b1j\u7684\u590d\u6742\u5ea6\u626b\u4e0b\u7684\u8bdd  \u62cd\u4e0d\u6392\u5e8f\u65e0\u6240\u8c13 \uff0c\u4f46\u662f\u6392\u5e8f\u540e \u4f60\u53ef\u4ee5\u6839\u636e\u65f6\u95f4\u7684\u5355\u8c03\u6027\u4f18\u5316\uff0c\n\n\u53ca\u6bcf\u6b21\u5e76\u4e0d\u7528\u626b\u5b8c \u5c31\u53ef\u4ee5\u7528\u7279\u5224\u7ed3\u675f\n\n\u4e0d\u6392\u5e8f   \u590d\u6742\u5ea6\uff08\u786e\u754c\uff09  nk\n\n\u6392\u5e8f       \uff08\u4e0a\u754c\uff09nk  +(\u4e0b\u754c)klogk \u4e0a\u754c \uff08k^2\uff09    \uff08\u6392\u5e8f\u53ea\u8ba8\u8bbasort\uff09\n\n    \n    \n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nstruct  node\n{\n    int s,e;\n}t[10000];\nint dp[10000];\nint st[100009];\nint cmp(node a,node b)\n{\n    return a.s>b.s;\n}\nint n,m,k;\nint main()\n{\ncin>>n>>k;\nfor(int i=1;i<=k;i++)\n{\n    cin>>t[i].s>>t[i].e;\nst[t[i].s ]++;\n}\nsort(t+1,t+1+n,cmp);\ndp[n+1]=0;\nfor(int i=n;i>=1;i--)\n{\n    if(st[i]==0)\n    {\n        dp[i]=dp[i+1]+1;\n    }\n    else\n    {\n    for(int j=1;j<=k;j++)\n    {\n    if(t[j].s==i)    \ndp[i]=max(dp[i+t[j].e ],dp[i]);        \n    }\n     }\n}\ncout<<dp[1]<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1508638501,
        "uid": 23992,
        "name": "bingliang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "##### \u4e00\u3001\u9519\u8bef\u505a\u6cd5\uff1a\u8d2a\u5fc3\u3002\n\n\u672c\u9898\u7684\u5b9e\u8d28\u662f\u533a\u95f4\u5185\u653e\u4e0d\u76f8\u4ea4\u7684\u7ebf\u6bb5\uff0c\u4f7f\u7a7a\u4f59\u90e8\u5206\u5c3d\u53ef\u80fd\u5c11\u3002\u5e76\u4e14\u80fd\u653e\u7684\u7ebf\u6bb5\u5fc5\u987b\u653e\u3002\n\n\u8d2a\u5fc3\u53ea\u80fd\u6c42\u653e\u7ebf\u6bb5\u7684\u6570\u91cf\uff08\u5982 \u51cc\u4e71\u7684yyy/\u7ebf\u6bb5\u8986\u76d6 \uff09\uff0c\u65e0\u6cd5\u6c42\u957f\u77ed\u3002\u4e07\u822c\u65e0\u5948\u4e4b\u4e0b\uff0c\u53ea\u80fd\u7528\u5751\u6b7b\u65e0\u6570\u849f\u84bb\u7684dp\u3002\n\n##### \u4e8c\u3001\u5212\u5206\u9636\u6bb5\n\n\u9996\u5148\uff0c\u8fd9\u9898\u53ef\u4e0d\u9700\u8981\u533a\u95f4\u4e4b\u7c7b\u7684\u9b3c\u4e1c\u897f\uff08\u518d\u8bf4\u6570\u636e\u8303\u56f4\u4e5f\u4e0d\u5141\u8bb8\uff09\u3002\u5e94\u8be5\u8003\u8651\u7684\u601d\u8def\u662f\u7ebf\u6027DP\u3002\n\n\u53ef\u4ee5\u60f3\u5230\u8bb0 f[i] \u4e3a1~i\u6bb5\u65f6\u95f4\u7684\u6700\u957f\u7a7a\u95f2\uff0c\u4f46\u662f\u8fd9\u6837\u601d\u7ef4\u96be\u5ea6\u66f4\u5927\u3002\u9006\u63a8\u624d\u662f\u66f4\u5408\u9002\u7684\u65b9\u6848\u3002\n\n\u6362\u4e00\u79cd\u601d\u8def\uff0c\u8bb0f[i]\u4e3ai~n\u6bb5\u65f6\u95f4\u7684\u6700\u957f\u7a7a\u95f2\u3002\n\n##### \u4e09\u3001\u72b6\u6001\u8f6c\u79fb\n\n\u5bf9\u4e8edp\u6211\u4eec\u7684\u601d\u8def\u7c7b\u4f3c\u4e8e\u6570\u5b66\u4e2d\u7684\u201c\u5206\u7c7b\u8ba8\u8bba\u201d\u3002\n\n\u2460 \u5f53f[i]\u65f6\u6ca1\u6709\u4efb\u52a1\u53ef\u4ee5\u505a\uff0c\u5c31+1\u7a7a\u95f2\u65f6\u95f4\u3002\n\nf[i]=f[i+1]+1;\n\n\u2461 \u5f53f[i]\u65f6\u8981\u505a\u4efb\u52a1\uff08\u5b58\u5728p=i\uff09\uff0c\u5c31\u4e00\u4e2a\u4e00\u4e2a\u4efb\u52a1\u5730\u641c\uff0c\u9009\u51fa\u7a7a\u95f2\u6700\u957f\u7684\u3002\u8ba1\u7b97\u7a7a\u95f2\u65f6\uff0c\u4ece\u65f6\u95f4i\u5230\u65f6\u95f4i+a[i].e\uff08\u4e5f\u5c31\u662f\u4ecep\u5f00\u59cbe\u79d2\u540e\uff09\u5168\u90e8\u4f11\u606f\u4e0d\u4e86\u3002\n\n\u6545 f[i]=max(f[i+a[i].e],f[i]) max\u7528\u4e8e\u9009\u51fa\u7a7a\u95f2\u6700\u957f\u3002\n\n##### \u56db\u3001\u4ee3\u7801\n\n\u8fd9\u79cd\u601d\u8def\u8fd8\u6709\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u6392\u5e8f\u540e\u7684\u6570\u636e\u80fd\u591f\u66f4\u5feb\u901f\u5730\u627e\u5230\u5f53\u524d\u65f6\u95f4\u53ef\u505a\u7684\u4efb\u52a1\u3002\u4e0d\u8fc7\u6d1b\u8c37\u7684\u6570\u636e\u6709\u70b9\u6c34\uff08\uff1f\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nstruct task{\n    int p,t;\n}a[10005];\nbool b[10005];\n/*bool comp(task t1,task t2)\n{\n    return t1.p>t2.p;\n}\n\u6392\u5e8f\u51fd\u6570\u3002\n*/\nint main()\n{\n    int n,k,f[10005];\n    cin>>n>>k;\n    memset(b,0,sizeof(b));\n    memset(f,0,sizeof(f));//\u6ce8\u610f\u521d\u59cb\u5316\uff0c\u6211\u4e4b\u524dWA\u4e86\u4e24\u4e2a\u70b9\n    for(int i=1;i<=k;i++)\n    {\n        cin>>a[i].p>>a[i].t;\n        b[a[i].p]=1;\n    }\n    //sort(a+1,a+1+k,comp);\n    //\u6392\u5e8f\u4e3a\u4f18\u5316\u505a\u6cd5\uff0c\u4e0d\u8ba8\u8bba\uff08\u597d\u5427\u5176\u5b9e\u662f\u6211\u592a\u5f31\n    f[n+1]=0;\n    for(int i=n;i>=1;i--)\n    {\n        if(b[i])\n            for(int j=1;j<=k;j++)\n            {\n                if(a[j].p==i)\n                    f[i]=max(f[i+a[j].t],f[i]);\n            }\n        else\n            f[i]=f[i+1]+1;\n    }\n    cout<<f[1];\n    return 0;\n}\n```\n",
        "postTime": 1539268774,
        "uid": 34372,
        "name": "_wkjzyc",
        "ccfLevel": 0,
        "title": "P1280 \u5c3c\u514b\u7684\u4efb\u52a1"
    },
    {
        "content": "# P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011\n\n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u5c3c\u514b\u6bcf\u5929\u4e0a\u73ed\u4e4b\u524d\u90fd\u8fde\u63a5\u4e0a\u82f1\u7279\u7f51\uff0c\u63a5\u6536\u4ed6\u7684\u4e0a\u53f8\u53d1\u6765\u7684\u90ae\u4ef6\uff0c\u8fd9\u4e9b\u90ae\u4ef6\u5305\u542b\u4e86\u5c3c\u514b\u4e3b\u7ba1\u7684\u90e8\u95e8\u5f53\u5929\u8981\u5b8c\u6210\u7684\u5168\u90e8\u4efb\u52a1\uff0c\u6bcf\u4e2a\u4efb\u52a1\u7531\u4e00\u4e2a\u5f00\u59cb\u65f6\u523b\u4e0e\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\u6784\u6210\u3002\n\n\u5c3c\u514b\u7684\u4e00\u4e2a\u5de5\u4f5c\u65e5\u4e3a$N$\u5206\u949f\uff0c\u4ece\u7b2c\u4e00\u5206\u949f\u5f00\u59cb\u5230\u7b2cN\u5206\u949f\u7ed3\u675f\u3002\u5f53\u5c3c\u514b\u5230\u8fbe\u5355\u4f4d\u540e\u4ed6\u5c31\u5f00\u59cb\u5e72\u6d3b\u3002\u5982\u679c\u5728\u540c\u4e00\u65f6\u523b\u6709\u591a\u4e2a\u4efb\u52a1\u9700\u8981\u5b8c\u6210\uff0c\u5c3c\u514b\u53ef\u4ee5\u4efb\u9009\u5176\u4e2d\u7684\u4e00\u4e2a\u6765\u505a\uff0c\u800c\u5176\u4f59\u7684\u5219\u7531\u4ed6\u7684\u540c\u4e8b\u5b8c\u6210\uff0c\u53cd\u4e4b\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\uff0c\u5219\u8be5\u4efb\u52a1\u5fc5\u9700\u7531\u5c3c\u514b\u53bb\u5b8c\u6210\uff0c\u5047\u5982\u67d0\u4e9b\u4efb\u52a1\u5f00\u59cb\u65f6\u523b\u5c3c\u514b\u6b63\u5728\u5de5\u4f5c\uff0c\u5219\u8fd9\u4e9b\u4efb\u52a1\u4e5f\u7531\u5c3c\u514b\u7684\u540c\u4e8b\u5b8c\u6210\u3002\u5982\u679c\u67d0\u4efb\u52a1\u4e8e\u7b2c$P$\u5206\u949f\u5f00\u59cb\uff0c\u6301\u7eed\u65f6\u95f4\u4e3aT\u5206\u949f\uff0c\u5219\u8be5\u4efb\u52a1\u5c06\u5728\u7b2c$P+T-1$\u5206\u949f\u7ed3\u675f\u3002\n\n\u5199\u4e00\u4e2a\u7a0b\u5e8f\u8ba1\u7b97\u5c3c\u514b\u5e94\u8be5\u5982\u4f55\u9009\u53d6\u4efb\u52a1\uff0c\u624d\u80fd\u83b7\u5f97\u6700\u5927\u7684\u7a7a\u6687\u65f6\u95f4\u3002\n\n### \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n##### \u8f93\u5165\u683c\u5f0f\uff1a\n\u8f93\u5165\u6570\u636e\u7b2c\u4e00\u884c\u542b\u4e24\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570N\u548c$K$($1\u2264N\u226410000$\uff0c$1\u2264K\u226410000$)\uff0c$N$\u8868\u793a\u5c3c\u514b\u7684\u5de5\u4f5c\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u5206\u949f\uff0cK\u8868\u793a\u4efb\u52a1\u603b\u6570\u3002\n\n\u63a5\u4e0b\u6765\u5171\u6709$K$\u884c\uff0c\u6bcf\u4e00\u884c\u6709\u4e24\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570$P$\u548c$T$\uff0c\u8868\u793a\u8be5\u4efb\u52a1\u4ece\u7b2c$P$\u5206\u949f\u5f00\u59cb\uff0c\u6301\u7eed\u65f6\u95f4\u4e3a$T$\u5206\u949f\uff0c\u5176\u4e2d$1\u2264P\u2264N$\uff0c$1\u2264P+T-1\u2264N$\u3002\n\n##### \u8f93\u51fa\u683c\u5f0f\uff1a\n\u8f93\u51fa\u6587\u4ef6\u4ec5\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5c3c\u514b\u53ef\u80fd\u83b7\u5f97\u7684\u6700\u5927\u7a7a\u6687\u65f6\u95f4\u3002\n\n### \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\n##### \u8f93\u5165\u6837\u4f8b#1\uff1a \u590d\u5236\n$15$ $6$\n\n$1$ $2$\n\n$1$ $6$\n\n$4$ $11$\n\n$8$ $5$\n\n$8$ $1$\n\n$11$ $5$\n##### \u8f93\u51fa\u6837\u4f8b#1\uff1a \u590d\u5236\n$4$\n\n\n\n\u56e0\u6700\u8fd1\u5c0f\u83dc\u9e21\u6709\u7279\u6b8a\u7684\u79d8\u5bc6\u884c\u52a8\uff0c\u6240\u4ee5\u6ca1\u6709\u548c\u5927\u5bb6\u5206\u4eab\u3002\n\n\u4eca\u5929\uff0c\u6211\u6765\u548c\u5927\u5bb6\u6765\u5206\u4eab\u4e00\u4e0b\u5b66\u4e60     \u52a8\u6001\u89c4\u5212,\u52a8\u89c4,$dp$      \u7684\u5fc3\u5f97\u3002\n\n\u5176\u4e2d\uff0c\u9009\u4e86\u8fd9\u9053\u9898\u6765\u8bb2\u8bb2\u3002\n\n\u52a8\u6001\u89c4\u5212,\u52a8\u89c4,$dp$      \u8fd9\u91cc\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u4ecb\u7ecd[\u52a8\u6001\u89c4\u5212](https://baike.baidu.com/item/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/529408)\u548c\u4e00\u4f4d$dalao$\u535a\u5ba2\u91cc\u7684[\u603b\u7ed3](http://cppblog.com/menjitianya/archive/2015/10/23/212084.html)\n\n\u8fd9\u9053\u9898\u770b\u4e86\u540e\uff0c\u77e5\u9053\u7528     \u52a8\u6001\u89c4\u5212,\u52a8\u89c4,$dp$      \u4f46\u5934\u8111\u4e00\u70ed\uff0c\u50cf\u62a5\u5e9f\u4e86\u4f3c\u7684\uff0c\u60f3\u4e0d\u4e0b\u53bb\u4e86\u3002\n\n\u4e8e\u662f\uff0c\u5c31\u770b\u4e86\u770b\u9898\u89e3\u91cc\u7684$dalao$\u662f\u600e\u6837\u505a\u7684\u3002\n\n\u679c\u7136\uff0c\u4e0d\u51fa\u6240\u6599\uff0c\u771f\u6709\u6536\u83b7\u3002\n\n\u7406\u89e3\u540e\u6253\u4e86\u4e00\u904d\uff0c$AC$\u4e86\u3002\uff08\u5c0f\u83dc\u9e21\u597d\u4e45\u6ca1\u6709\u8fd9\u4e48\u9ad8\u5174\u8fc7\u3002\uff09\n\n\u8bb2\u4e86\u8fd9\u4e48\u591a\u5e9f\u8bdd\uff0c\u6765\u8bb2\u8bb2\u6b63\u9898\u3002\n\n\u8fd9\u9898\u4e3b\u8981\u8bb2\u7684\u662f\uff1a\u4ece\u7b2c\u4e00\u5206\u949f\u5f00\u59cb\u5230\u7b2cN\u5206\u949f\u7ed3\u675f\uff0c\u5c3c\u514b\u5e94\u8be5\u5982\u4f55\u9009\u53d6\u4efb\u52a1\uff0c\u624d\u80fd\u83b7\u5f97\u6700\u5927\u7684\u7a7a\u6687\u65f6\u95f4\u3002\n\n\u662f     \u52a8\u6001\u89c4\u5212,\u52a8\u89c4,$dp$      \u7684\u9898\uff0c\u6211\u4eec\u7b2c\u4e00\u65f6\u523b\u60f3\u5230\u7684\u5e38\u7528\u516c\u5f0f\uff1a\u89e3\u4ec0\u4e48\u5c31\u8bbe\u4ec0\u4e48\u3002\n\n\u95ee\uff1a\u6700\u5927\u7684\u7a7a\u6687\u65f6\u95f4\n\n\u8bbe\uff1a$f[i]$\u8868\u793a$1$\u5230$i$\u4e2a\u65f6\u95f4\u6700\u5927\u7a7a\u95f2\u503c\u3002\n\n\u51c6\u5907\u5c31\u7eea\uff0c\u90a3\u5c31\u5dee\u4e3b\u89d2\u767b\u573a\u4e86\uff0c\u6838\u5fc3\u65b9\u7a0b\u3002\n\n$if(b[i]==0)ans[i]=ans[i+1]+1;$\n\n$if(ans[i+a[q].t]>ans[i])ans[i]=ans[i+a[q].t];$\n\n\n\n\u6709\u4e86\u6838\u5fc3\uff0c\u5c31\u76f8\u5f53\u4e8e\u6709\u4e86\u4e3b\u9aa8\uff0c\u8840\u548c\u76ae\u8089\u5c31\u6162\u6162\u586b\uff1b\n\n\u6709\u4e86\u6838\u5fc3\uff0c\u5c31\u76f8\u5f53\u4e8e\u6709\u4e86\u63d0\u7eb2\uff0c\u7ecf\u5178\u540d\u53e5\u5c31\u6162\u6162\u5199\uff1b\n\n\u6709\u4e86\u6838\u5fc3\uff0c\u5c31\u76f8\u5f53\u4e8e\u6709\u4e86\u9886\u8896\uff0c\u8f85\u52a9\u4eba\u5458\u5c31\u6162\u6162\u6765\u3002\n\n\n\n\u5e9f\u8bdd\u771f\u6ca1\u591a\uff0c\u8bb2\u4ee3\u7801\uff1a\n\n```\n//\u9898\u76ee\u63d0\u4f9b\u8005\n//\u8bc4\u6d4b\u65b9\u5f0f \u4e91\u7aef\u8bc4\u6d4b\n//\u6807\u7b7e \u52a8\u6001\u89c4\u5212,\u52a8\u89c4,dp \u6392\u5e8f \u679a\u4e3e,\u66b4\u529b\n//\u96be\u5ea6 \u666e\u53ca+/\u63d0\u9ad8\n//\u65f6\u7a7a\u9650\u5236 1000ms / 128MB\n#include<cstdio>//\u8c03\u7528      scanf\u548cprintf      \u7684\u5e93\n#include<cstring>//\u8c03\u7528      memset      \u7684\u5e93\n#include<algorithm>//\u8c03\u7528      sort      \u7684\u5e93\n//\u5934\u6587\u4ef6\n#define ll long long\nusing namespace std;\nconst ll mx=10010;\n//\u4e60\u60ef\u4e86\nll n,k,q=1;\nll b[mx],ans[mx];\nstruct node{ll p,t;}a[mx];//\u7528\u7ed3\u6784\u4f53\u6392\u5e8f\u65b9\u4fbf\n//\u51c6\u5907\u5c31\u7eea\nbool cmp(node a,node b) { return a.p>b.p; }//\u56e0\u9006\u63a8\uff0c\u6240\u4ee5\u4ece\u5927\u5230\u5c0f\nint main()//\u5f00\u59cb\u4e86\n{\n\tmemset(b,0,sizeof(b));\n\tmemset(ans,0,sizeof(ans));\n    //\u5148\u521d\u59cb\u503c\u4e3a0\n\tscanf(\"%lld %lld\",&n,&k);\n\tfor(ll i=1;i<=k;i++)scanf(\"%lld %lld\",&a[i].p,&a[i].t),b[a[i].p]++;\n\t//\u8f93\u5165\n    sort(a+1,a+k+1,cmp);//\u6392\u5e8f\n\tfor(ll i=n;i>0;i--)//\u6ce8\u610f\u662f\u9006\u63a8{\n\t\tif(b[i]==0)ans[i]=ans[i+1]+1;\n\t\telse{\n\t\t\tfor(ll j=1;j<=b[i];j++){\n\t\t\t\tif(ans[i+a[q].t]>ans[i])ans[i]=ans[i+a[q].t];\n\t\t\t\tq++;\n\t\t\t}\n\t\t}\n\t}\n    //\u89e3\u65b9\u7a0b\n\tprintf(\"%lld\",ans[1]);//\u7ed3\u679c\u5b58\u5728\u7b2c\u4e00\u4f4d\uff0c\u8f93\u51fa\n\treturn 0;\n}\n```",
        "postTime": 1526194299,
        "uid": 54816,
        "name": "lijiahao2017",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u901b\u4e86\u4e00\u5708\u9898\u89e3\u53d1\u73b0\u5e76\u6ca1\u6709\u6211\u7684\u601d\u8defqvq\uff08\u867d\u7136\u6211\u7684\u60f3\u6cd5\u4e0d\u4ec5\u4e11\u964b\u96be\u5199\u5e38\u6570\u5927\u8fd8\u662fnlogn\u7684\u590d\u6742\u5ea6\n\n\u5f88\u660e\u663e\u662f\u4e2aDP\u4e86emmmm\u4f46\u662f\u6211\u6ca1\u60f3\u5230\u5012\u5e8f\u8f6c\u79fb\u8fd9\u4e48NB\u7684\u4e1c\u897f\n\n\u4ee4dp[i]\u8868\u793a\u5b8c\u6210\u524di\u4e2a\u4efb\u52a1\u7684\u603b\u4f11\u606f\u65f6\u95f4\uff0c\u5982\u679c\u8d77\u70b9\u4e3aa[i].x\uff0c\u7ec8\u70b9\u4e3aa[i].y,\u90a3\u4e48\u5f53\u524d\u503c\u4e00\u5b9a\u662f\u7531\n### \u4ece\u8d77\u59cb\u65f6\u95f4\u5f80\u524d\u6570\u76f4\u5230\u53e6\u4e00\u4e2a\u4efb\u52a1\u7684\u8d77\u59cb\u65f6\u95f4\n\u5728\u8fd9\u6bb5\u533a\u95f4\u91cc\u7ed3\u5c3e\u7684i\u7684dp\u503c\u8f6c\u79fb\u8fc7\u6765\n\n\u6211\u4eec\u8003\u8651\u4ee5\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u8fd9\u6837\u9884\u5904\u7406\u51fa\u6bcf\u6bb5\u533a\u95f4\u3002\u66b4\u529b\u8f6c\u79fb\u662fn\u65b9\u7684\uff0c\u4f30\u8ba1\u4e5f\u80fd\u8fc7\uff0c\u4f46\u662f\u6211\u4eec\u8003\u8651\u4f18\u5316\u3002\n\n  \u7ef4\u62a4\u4e00\u8bfe\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u521d\u503c\u4e3a-inf\uff0c\u5728a[i].y\u7684\u4f4d\u7f6e\u4e0a\u5b58\u50a8dp[i]-a[i].y\u7684\u503c\uff0c\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\uff0c\u8fd9\u6837\u6211\u4eec\u8f6c\u79fb\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u5bfb\u627e\u533a\u95f4\u6700\u5927\u503c\u52a0\u4e0a\u5f53\u524d\u5de6\u7aef\u70b9\uff0c\u50cf\u8fd9\u6837\n  ```\ndp[i]=query(1,1,10000,a[i].last+1,a[i].x)+a[i].x;\n```\n\u56e0\u4e3a\u5f88\u660e\u663ea[i].x-a[j].y\u5373\u4e3a\u4f11\u606f\u65f6\u95f4\uff0c\u8fd9\u6837\u5c31\u6bcf\u6b21\u627e\u5230\u6700\u5927\u503c\u3002\n\n\u7ec6\u8282\u8fd8\u662f\u5f88\u591a\u7684\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\n\n```\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\n\ninline int read() {\n\tint x=0,f=1;\n\tchar cr=getchar();\n\twhile (cr>'9' || cr<'0') {\n\t\tif (cr=='-') f=-1;\n\t\tcr=getchar();\n\t}\n\twhile (cr>='0' && cr<='9') {\n\t\tx=(x<<3)+(x<<1)+cr-'0';\n\t\tcr=getchar();\n\t}\n\treturn x*f;\n}\n\nconst int maxn=10050;\n\nstruct node{\n\tint x,y;\n\tint last;\n}a[maxn];\n\ninline bool cmp1(node a,node b) {\n\tif (a.x==b.x) return a.y<b.y;\n\treturn a.x<b.x;\n}\n\nint tr[maxn<<2];\nint dp[maxn];\n\ninline void add(int now,int l,int r,int loc,int val) {\n\tif (l==r) {\n\t\ttr[now]=max(tr[now],val);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif (loc<=mid) add(now<<1,l,mid,loc,val);\n\telse add(now<<1|1,mid+1,r,loc,val);\n\ttr[now]=max(tr[now<<1],tr[now<<1|1]);\n}\n\ninline int query(int now,int l,int r,int x,int y) {\n\tif (x<=l && r<=y) return tr[now];\n\tint ans=-2e9,mid=l+r>>1;\n\tif (x<=mid) ans=max(ans,query(now<<1,l,mid,x,y));\n\tif (mid+1<=y) ans=max(ans,query(now<<1|1,mid+1,r,x,y));\n\treturn ans;\n}\n\nint main() {\n\tint n=read(),k=read();\n\tn++;\n\tmemset(tr,-0x3f,sizeof(tr));\n\tmemset(dp,-0x3f,sizeof(dp));\n\tint mx=0;\n\tfor (int i=1;i<=k;i++) {\n\t\ta[i].x=read(),a[i].y=a[i].x+read();\n\t\tmx=max(mx,a[i].x);\n\t}\n\tsort(a+1,a+k+1,cmp1);\n\tint cnt=1;dp[1]=a[1].x-1;\n\tadd(1,1,10000,a[1].y,dp[1]-a[1].y);\n\twhile (a[++cnt].x==a[1].x) {\n\t\tdp[cnt]=a[cnt].x-1;\n\t\tadd(1,1,10000,a[cnt].y,dp[cnt]-a[cnt].y);\n\t}\n\tfor (int i=1;i<=k;i++) {\n\t\tif (a[i].x!=a[i-1].x) a[i].last=a[i-1].x;\n\t\telse a[i].last=a[i-1].last;\n\t}\n\tint ans=0;\n\tfor (int i=cnt;i<=k;i++) {\n\t\tdp[i]=query(1,1,10000,a[i].last+1,a[i].x)+a[i].x;\n\t\tadd(1,1,10000,a[i].y,dp[i]-a[i].y);\n\t\tif (a[i].y>mx) ans=max(ans,dp[i]+(n-a[i].y));\n\t}\n\tprintf(\"%d\",ans);\n}\n```\n",
        "postTime": 1571065059,
        "uid": 76720,
        "name": "YoOXiii",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\uff08\u601d\u8def\u6765\u81ea\u540c\u673a\u623f\u5de8\u795e@Nyte\n\nDP\u83dc\u83dcFCB\u53c8\u6765\u53d1\u9898\u89e3\u4e86\uff01  \n\u7ffb\u4e86\u4e00\u4e0b\u697c\u4e0b\u7684\u5927\u4f6c\u7684\u9898\u89e3\u597d\u50cf\u90fd\u662f\u82b1\u5f0f\u7684 $ O(n)$ DP\uff0c\u7136\u800c\u6b64\u9898\u7684\u6570\u636e\u8303\u56f4\u8c8c\u4f3c\u53ea\u6709 10000\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528 $O(n^2)$ \u7684\u641c\u7d22\u8fc7 `AC`\n\n\u5927\u81f4\u601d\u8def\u662f\u5efa\u6709\u5411\u56fe\uff0c\u628a\u6bcf\u4e2a\u4efb\u52a1\u89c6\u4e3a\u4e00\u4e2a\u70b9\uff0c\u4e24\u4e2a\u4efb\u52a1\u4e4b\u95f4\u53ef\u4ee5\u4f11\u606f\u7684\u65f6\u95f4\u4f5c\u4e3a\u8fd9\u6761\u8fb9\u7684\u957f\u5ea6\u3002\u6700\u540e\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u6700\u77ed\u8def \uff08\u6700\u957f\u8def\uff1f\uff09\uff0c\u53ef\u4ee5\u7528 bfs(SPFA) \u641e\u5b9a\u3002~~\uff08\u4f60\u60f3dij\u6211\u4e5f\u4e0d\u963b\u6b62\u4f60\uff09~~\n\n$\\ $\n\n## \u5206\u6790\n\n### \u7b2c\u4e00\u6b65\uff1a\u5efa\u56fe\n\n$\\ \\ \\ \\ $\u7531\u4e8e\u6bcf\u4e2a\u4efb\u52a1\u7ed3\u675f\u4e4b\u540e\uff0c\u53ea\u8981\u4e00\u6709\u4efb\u52a1\uff0c\u53ef\u7231\u7684\u5c0f\u5c3c\u514b\u5c31\u5fc5\u987b\u505a\uff08\u6216\u8005\u9009\u62e9\u5176\u4e2d\u4e4b\u4e00\u505a\uff09\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148**\u5bf9\u4efb\u52a1\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f**\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a\u4efb\u52a1\u90fd\u5f80\u540e\u5c55\u5f00\u4e00\u6b21\u641c\u7d22\uff0c**\u627e\u5230\u7b2c\u4e00\u4e2a\uff08\u6216\u8005\u51e0\u4e2a\u540c\u65f6\u5f00\u59cb\u7684\uff09\u5f00\u59cb\u65f6\u95f4\u5728\u5b83\u7684\u7ed3\u675f\u65f6\u95f4\u4ee5\u540e\u7684\u4efb\u52a1**\u3002\u5e76\u4e14\u5728\u5b83\u4eec\u4e4b\u95f4\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u8fb9\u7684\u957f\u5ea6\u5c31\u662f\u4f11\u606f\u65f6\u95f4 `a[j].begin-a[i].end` \u3002\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u8d77\u70b9\u7684\u8fb9\u81f3\u5c11\u6709\u4e00\u6761\uff0c\u4e0d\u4f1a\u6709\u5f88\u591a\u6761\u3002   \n\n$\\ \\ \\ \\ $\u81f3\u4e8e\u5982\u4f55\u5b58\u50a8\u8fb9\uff0c\u672c\u849f\u84bb\u4e0d\u4f1a\u7ebf\u6027\u5b58\u50a8\uff0c\u5c31\u60f3\u5230\u4e86\u5f00\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 `b[i][][2]` \u5b58\u50a8\u4ee5 $i$\u53f7\u4efb\u52a1 \u4e3a\u8d77\u70b9\u7684\u6240\u6709 \u76ee\u6807\u4efb\u52a1\u70b9\uff0c\u548c\u8fb9\u957f\u3002\u4f46\u662f\u4e00\u5171\u6709 $10000$ \u4e2a\u4efb\u52a1\uff0c\u6781\u9650\u60c5\u51b5\u4e0b\u662f\u67d0\u4e00\u4e2a\u70b9\u8fde $9999$ \u6761\u8fb9\uff0c\u4f46\u662f\u6211\u4eec\u663e\u7136\u4e0d\u53ef\u80fd\u5c06\u6570\u7ec4\u5f00\u5230 $10000\\times10000$\u3002\u600e\u4e48\u529e\u5462\uff1fvector\u5927\u6cd5\u597d\u3002\u7531\u4e8e\u6700\u591a $10000$ \u4e2a\u4efb\u52a1\uff0c\u6240\u4ee5\u5176\u5b9e\u6700\u591a\u5b58 $10000$ \u6761\u8fb9,vector\u53ef\u4ee5\u6709\u6548\u907f\u514d\u7a7a\u95f4\u6d6a\u8d39\n\n$\\ \\ \\ \\ $\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u4ece\u54ea\u91cc\u5f00\u59cb\u641c\u7d22\u5462\uff1f\u6211\u4eec\u9700\u8981\u518d**\u65b0\u589e\u4e00\u4e2a\u865a\u62df\u7684 $0$ \u53f7\u4efb\u52a1**\uff0c\u5b83\u7684\u7ed3\u675f\u65f6\u95f4\u662f $0$\u3002\u7136\u540e\u6309\u7167\u5148\u524d\u8bf4\u8fc7\u7684\u529e\u6cd5\u8fde\u8fb9  \n$\\ \\ \\ \\ $\u641c\u7d22\u5230\u4ec0\u4e48\u65f6\u5019\u7ed3\u675f\u5462\uff1f\u6211\u4eec\u53c8\u9700\u8981**\u65b0\u589e\u4e00\u4e2a\u865a\u62df\u7684 $K+1$ \u53f7\u4efb\u52a1**\uff0c\u5b83\u7684\u7ed3\u675f\u65f6\u95f4\u662f $N+1$\n\n$\\ \\ \\ \\ $\u5176\u5b9e\u8fd9\u4e2a\u90e8\u5206\u8fd8\u6709\u5f88\u591a\u7ec6\u8282\u503c\u5f97\u6ce8\u610f\uff0c\u8be6\u89c1\u4ee3\u7801  \n\n$\\ \\ \\ \\ $\u5728\u4ee3\u7801\u4e2d, $m$ \u8868\u793a\u603b\u65f6\u95f4\uff0c$n$ \u8868\u793a\u4efb\u52a1\u603b\u6570, $b$ \u6570\u7ec4\u662f\u4e00\u4e2avector\uff0c\u7528\u4e8e\u5b58\u50a8\u6240\u6709\u8fb9\n```\n\tread(m);read(n);\n\tfor(int i=1;i<=n;++i){\n\t\tread(a[i].begin);\n\t\tread(a[i].last);\n\t\ta[i].end=a[i].begin+a[i].last-1;  //\u751f\u6210\u70b9\uff0c\u8bb0\u5f97-1\n\t}\n\ta[++n].begin=m+1;   //\u751f\u6210\u865a\u62df\u7684n+1\u53f7\u4efb\u52a1\n\tsort(a+0,a+n+1,cmp);   //\u5b89\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\n\tfor(int i=0;i<n;++i){\n\t\tint j=i;       //\u4ece\u5f53\u524d\u5143\u7d20\u5f00\u59cb\u67e5\u627e\n\t\twhile(1){\n\t\t\t++j;\n\t\t\tif(a[j].begin>a[i].end){\n\t\t\t\tb[i][0].push_back(j);  //\u5b58\u5165\u76ee\u7684\u5730\n\t\t\t\tb[i][1].push_back(a[j].begin-a[i].end-1); //\u5b58\u5165\u8fb9\u957f\n\t\t\t\tif(a[j+1].begin>a[j].begin)break;  \n\t\t\t\t\t//\u628a\u6240\u6709\u540c\u65f6\u5f00\u59cb\u7684\u4efb\u52a1\u90fd\u67e5\u627e\u5b8c\u6bd5\u624d\u7ed3\u675f\n\t\t\t}\n\t\t\tif(j==n)break;   //\u8fb9\u754c\u7279\u5224\n\t\t}\n\t}\n```\n---\n\n### \u7b2c\u4e8c\u6b65\uff1a\u641c\u7d22\n\n\u7531\u4e8e\u672c\u83dc\u9e21\u4e0d\u4f1a SPFA \uff0c\u53ea\u4f1a\u5199\u6734\u7d20\u7684 bfs \uff0c\u6240\u4ee5\u5c31\u7a0d\u5fae\u8bf4\u4e00\u4e0b\u601d\u8def\u5427\u3002\u5176\u5b9e\u611f\u89c9\u548c SPFA \u6bd4\u8f83\u50cf\uff0c\u8fd9\u90e8\u5206\u6bd4\u8f83\u7b80\u5355\uff0c\u7565\u8bb2\u4e00\u4e0b\n\n$\\ \\ \\ \\ $\u6211\u4eec\u9700\u8981\u4e24\u4e2a\u961f\u5217\uff0c\u5206\u522b\u5b58\u4efb\u52a1\u7f16\u53f7\uff0c\u4ee5\u53ca\u7d2f\u8ba1\u7684\u603b\u65f6\u95f4\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u961f\u9996\u5143\u7d20\uff0c\u904d\u5386\u4ee5\u4ed6\u4e3a\u8d77\u70b9\u7684\u6240\u6709\u8fb9\uff0c\u5f53\u7136\u663e\u7136\u4e0d\u662f\u6240\u6709\u70b9\u90fd\u53ef\u4ee5\u5165\u961f\u3002 \u5165\u961f\u6761\u4ef6\u662f **\u5f53\u524d\u4efb\u52a1\u7d2f\u79ef\u7684\u4f11\u606f\u65f6\u95f4 + \u8fd9\u4e24\u4e2a\u4efb\u52a1\u4e4b\u95f4\u7684\u4f11\u606f\u65f6\u95f4 > \u76ee\u6807\u4efb\u52a1\u7d2f\u79ef\u7684\u6700\u5927\u4f11\u606f\u65f6\u95f4**\n\n$\\ \\ \\ \\ $\u6211\u4eec\u9700\u8981\u53e6\u5f00\u4e00\u4e2a `maxx\u6570\u7ec4` \u5b58**\u6bcf\u4e2a\u4efb\u52a1\u5f00\u59cb\u65f6\u7d2f\u79ef\u7684\u6700\u5927\u4f11\u606f\u65f6\u95f4**\u3002\u7279\u522b\u6ce8\u610f\uff0c\u5b83\u9700\u8981\u88abmemset\u6210 $-1$\u3002\u4e0d\u7136\u5982\u679c\u662f\u5728 $1$ \u65f6\u95f4\u6709\u5f00\u59cb\u7684\u4efb\u52a1\uff0c\u5426\u5219\u4f1a $0+0!>0$\uff0c\u5224\u65ad\u4e0d\u6210\u7acb\uff0c\u8fc7\u4e0d\u4e86\u6837\u4f8bQwQ\u3002\n\n```\nvoid bfs(int start){\n\tx.push(start);\n\tt.push(0);\n\tdo{\n\t\tint xs=x.front();\n\t\tint ts=t.front();\n\t\tfor(int i=0;i<b[xs][0].size();++i){  //\u5224\u65ad\u662f\u5426\u7b26\u5408\u5165\u961f\u6761\u4ef6\n\t\t\tif(ts+b[xs][1][i]>maxx[b[xs][0][i]]){\n\t\t\t\tx.push(b[xs][0][i]);\n\t\t\t\tt.push(ts+b[xs][1][i]); //\u5165\u961f\n\t\t\t\tmaxx[b[xs][0][i]]=ts+b[xs][1][i]; \u66f4\u65b0\u6700\u5927\u503c \n\t\t\t}\n\t\t}\n\t\tx.pop();t.pop();   //\u961f\u9996\u51fa\u961f\n\t}while(!x.empty());\n}\n```\n\n\u5230\u8fd9\u91cc\u5c31\u5dee\u4e0d\u591a\u7ed3\u675f\u5566\uff01\u5b8c\u6574\u4ee3\u7801\uff1f\u8fd8\u662f\u53d1\u4e00\u4e2a\u5427\n\n$\\ $\n\n---\n\n## \u5b8c\u6574\u4ee3\u7801\n\n```\n#include<cstdio>\n#include<queue>\n#include<vector> \n#include<iostream>\n#include<algorithm>\n#include<cstring>\n\nusing namespace std;\n\nvector<int>b[10005][2];\nqueue<int>x,t;\nint m,n,maxx[10005];\nstruct work{\n\tint begin,end,last;\n}a[10005];\n\ninline void read(int &x){\n\tchar ch=' ';\n\twhile(!isdigit(ch)){ch=getchar();}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+ch-'0';\n\t\tch=getchar();\n\t}                  //\u5feb\u8bfb\n}\n\nbool cmp(work a,work b){\n\treturn a.begin<b.begin;\n}\n\nvoid bfs(int start){\n\tx.push(start);\n\tt.push(0);\n\tdo{\n\t\tint xs=x.front();\n\t\tint ts=t.front();\n\t\tfor(int i=0;i<b[xs][0].size();++i){\n\t\t\tif(ts+b[xs][1][i]>maxx[b[xs][0][i]]){\n\t\t\t\tx.push(b[xs][0][i]);\n\t\t\t\tt.push(ts+b[xs][1][i]);\n\t\t\t\tmaxx[b[xs][0][i]]=ts+b[xs][1][i];\n\t\t\t}\n\t\t}\n\t\tx.pop();t.pop();\n\t}while(!x.empty());   //bfs\u904d\u5386\u8fb9\n}\n\nint main(){\n\tread(m);read(n);\n\tfor(int i=1;i<=n;++i){\n\t\tread(a[i].begin);\n\t\tread(a[i].last);\n\t\ta[i].end=a[i].begin+a[i].last-1;\n\t}                \n\ta[++n].begin=m+1;   //\u8bfb\u5165\u4e0e\u5efa\u70b9\n\tsort(a+0,a+n+1,cmp);\n\tfor(int i=0;i<n;++i){\n\t\tint j=i;\n\t\twhile(1){\n\t\t\t++j;\n\t\t\tif(a[j].begin>a[i].end){\n\t\t\t\tb[i][0].push_back(j);\n\t\t\t\tb[i][1].push_back(a[j].begin-a[i].end-1);\n\t\t\t\tif(a[j+1].begin>a[j].begin)break;\n\t\t\t}\n\t\t\tif(j==n)break;\n\t\t}         //\u5efa\u8fb9\n\t}\n\tmemset(maxx,-1,sizeof(maxx));\n\tbfs(0);        //\u641c\u7d22\u7b54\u6848\n\tprintf(\"%d\",maxx[n]);   //\u8f93\u51fa\n\treturn 0;\n}\n```\n\u5927\u529f\u544a\u6210\uff01\n\n",
        "postTime": 1567252073,
        "uid": 45176,
        "name": "FCBM71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u6839\u672c\u4e0d\u9700\u8981\u52a8\u6001\u89c4\u5212\uff0cdfs \u4e00\u6b21\u5c31\u53ef\u4ee5\u8fc7\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, k, ans; bool vis [10001][2500];\nvector<int> task [10001];\nvoid dfs (int x, int y){ //printf(\"%i %i\\n\", x, y);\n    if (vis[x][y]||x>k){ return; }\n    vis[x][y] = true; ans = max(ans, y);\n    if (task[x].empty()){ dfs(x+1, y+1); return; }\n    for (int i : task[x]){ dfs(i, y); }\n} int main(int argc, const char * argv[]) { scanf(\"%i%i\", &k, &n);\n    for (int a, b, i = 0; i < n; i++){ scanf(\"%i%i\", &a, &b);\n        a--; task[a].push_back(a+b);\n    } ans = 0; dfs(0, 0); printf(\"%i\\n\", ans);\n    return 0;\n}\n\n```",
        "postTime": 1512655831,
        "uid": 76572,
        "name": "VulpesCorsac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "# DPDPDP\n\u5bf9\u4e8e\u6bcf\u4e2a\u65f6\u523b\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4efb\u52a1\uff0c\u90a3\u4e48\u5b83\u7684\u4f11\u606f\u65f6\u95f4\u5c31\u662f\u4e0a\u4e00\u6b21+1\uff0c\u5982\u679c\u6709\u4efb\u52a1\u90a3\u4e48\u5b83\n\u5c31\u662f\u4e0a\u56de\u7684\u4f11\u606f\u65f6\u95f4\uff0c\u4f46\u662f\u8fd9\u6837\u987a\u63a8\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u4f60\u4e0d\u77e5\u9053\u5f53\u524d\u65f6\u95f4\u662f\u5426\u5728\u67d0\u4e00\u4e2a\u4efb\u52a1\u8fdb\u884c\u7684\n### \u91cc\u9762\uff0c\u5012\u63a8\u7684\u8bdd\u5c31\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\uff08\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\uff09\u3002\ndp[i]\u8868\u793a\u7b2c i \u79d2\u540e\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4f11\u606f\u65f6\u95f4\uff0c\u5982\u679c\u5f53\u524d\u65e0\u4efb\u52a1\u90a3\u4e48\u53ea\u8981\u7b49\u4e8e dp[i+1]+1\uff0c\u5982\u679c\n\u5f53\u524d\u6709\u4efb\u52a1\uff0c \u90a3\u4e48\u7b2c i \u79d2\u540e\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4f11\u606f\u65f6\u95f4\u5c31\u662f dp[i+task[k]]\uff0c \u8981\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\uff08 \u5047\n\u5b9a\u662f k \u4efb\u52a1\uff09 \u5728\u7b2c i \u79d2\u5f00\u59cb\uff0c\u6301\u7eed task[k]\u79d2\uff0c\u867d\u7136\u7ed3\u675f\u65f6\u95f4\u662f\u7b2c i+task[k]-1 \u79d2\uff0c\u4f46\u662f\u7b2c i+task[k]-\n1 \u79d2\u8fd8\u662f\u5728\u5de5\u4f5c\u7684\uff0c \u5728 i+task[k]\u624d\u53ef\u80fd\u4f11\u606f\u7684\uff0c \u6240\u4ee5\u5bf9\u4e8e dp[i]\u6765\u8bf4\uff0c \u5982\u679c\u7b2c i \u79d2\u6709\u4efb\u52a1\u5f00\u59cb\uff0c\n\u90a3\u4e48\u4f11\u606f\u7684\u65f6\u95f4\uff0c\u53ea\u80fd\u662f\u4e0e dp[i+task[k]]\u76f8\u540c\u3002\n\u800c\u5f53\u7b2c i \u79d2\u6709\u591a\u4e2a\u4efb\u52a1\u5f00\u59cb\u90a3 dp[i] = max{dp[i + task[k]]} k \u8868\u793a\u6240\u6709\u5728 i \u79d2\u5f00\u59cb\u7684\u4efb\u52a1\u3002\n\u8fb9\u754c\u6761\u4ef6\u4e3a\uff1a dp[N + 1] = 0\uff08 \u5de5\u4f5c\u7684\u65f6\u95f4\u662f 1~N\uff0c N+1 \u8d85\u51fa\u5de5\u4f5c\u65f6\u95f4\uff0c \u6240\u4ee5\u5de5\u4f5c\u65f6\u95f4\u7684\u4f11\u606f\n\u65f6\u95f4\u4e3a 0\uff09\u3002\n\u8fd9\u91cc\u5148\u8981\u628a\u4efb\u52a1\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\u3002\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nlong int n,k,sum[10001],num=1,f[10001];\nstruct Node\n{\n    long int s,t;\n}z[10001];\nint cmp(Node a,Node b)\n{\n    return a.s>b.s;\n}\nint main()\n{\n    long int i,j;\n    cin>>n>>k;\n    for(i=1;i<=k;i++)\n    {\n    cin>>z[i].s>>z[i].t;\n    sum[z[i].s]++;\n    }\n    sort(z+1,z+k+1,cmp);\n    for(i=n;i>=1;i--)\n    {\n        if(sum[i]==0)\n        f[i]=f[i+1]+1;\n        else for(j=1;j<=sum[i];j++)\n        {\n            if(f[i+z[num].t]>f[i])\n            f[i]=f[i+z[num].t];\n            num++;\n        }\n    }\n    cout<<f[1];\n}\n```\n",
        "postTime": 1562918081,
        "uid": 79186,
        "name": "WB_TS_\u6b27\u5bd2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "[Link]( https://www.luogu.org/problem/P1280 )\n\n**[Blog](https://tony102.xyz/index.php/2019/10/18/luogu1280-%e5%b0%bc%e5%85%8b%e7%9a%84%e4%bb%bb%e5%8a%a1/)\u9605\u8bfb\u6548\u679c\u66f4\u4f73**\n\n### \u9898\u610f\n\n\u200b\t\t\u6709\u4e00\u6bb5\u957f\u5ea6\u4e3a $n$ \u7684\u65f6\u95f4,\u6709 $k$ \u4e2a\u4efb\u52a1\u9700\u8981\u5b8c\u6210,\u6bcf\u4e2a\u4efb\u52a1\u4ece$p$\u5f00\u59cb\u4e00\u76f4\u6301\u7eed$t$\u5206\u949f,\u5219\u5728$p+t-1$\u7684\u65f6\u523b\u7ed3\u675f.\u5728\u67d0\u4e00\u65f6\u523b\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1,\u90a3\u4e48\u8fd9\u4e2a\u4efb\u52a1\u5fc5\u987b\u8981\u505a.\u5426\u5219,\u82e5\u67d0\u4e2a\u65f6\u523b\u6709\u591a\u4e2a\u4efb\u52a1,\u53ef\u4ee5\u4efb\u9009\u5176\u4e2d\u4e00\u4e2a\u505a.\u95ee\u4e00\u79cd\u9009\u62e9\u65b9\u6848\u4f7f\u7a7a\u95f2\u65f6\u95f4(\u4e0d\u505a\u4efb\u52a1\u7684\u65f6\u95f4)\u6700\u957f.\n\n\n\n### \u9898\u89e3\n\n\u200b\t\t\u9996\u5148\u53ef\u4ee5\u8003\u8651\u4ece\u524d\u5f80\u540e\u9009\u4efb\u52a1,\u8bbe $f[i]$ \u8868\u793a$[1,i]$\u65f6\u523b\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4.\u90a3\u4e48\u8f6c\u79fb\u4e3a:\n\n\u200b\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$$f[i] += f[i+p_j + t_j]$$ \n\n\u200b\t\t\u5c31\u662f\u8bf4,\u8fd9\u4e00\u523b\u80fd\u83b7\u5f97\u7684\u7a7a\u95f2\u65f6\u95f4\u80af\u5b9a\u4f1a\u8ddf\u9009\u62e9\u7684\u4efb\u52a1\u7ed3\u675f\u7684\u65f6\u95f4\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\u6302\u94a9.\u65e0\u6cd5\u4fdd\u8bc1DP\u7684\u65e0\u540e\u6548\u6027,\u6240\u4ee5\u4e0d\u59a8\u8003\u8651\u4ece\u540e\u8f6c\u79fb.\n\n\u200b\t    \u8bbe$f[i]$\u8868\u793a\u4ece $[i,n]$ \u65f6\u523b\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u7684\u7a7a\u95f2\u65f6\u95f4,\u90a3\u4e48\u72b6\u6001\u6709\u4e24\u79cd:\n\n\u200b\t\t1.\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u9009\u4e86\u4efb\u52a1\u5e76\u4e14\u8fd8\u6ca1\u7ed3\u675f\n\n\u200b\t\t2.\u8fd9\u4e2a\u65f6\u5019\u6ca1\u6709\u5728\u505a\u4efb\u4f55\u4efb\u52a1\u4e14\u8fd9\u4e2a\u65f6\u5019\u6709\u4efb\u52a1\u53ef\u505a\n\n  \u90a3\u4e48\u8f6c\u79fb\u5c31\u6bd4\u8f83\u663e\u800c\u6613\u89c1\u4e86,\u5f00\u4e00\u4e2a\u6876$basket[]$\u8868\u793a\u4e00\u6761\u65f6\u95f4\u8f74,\u5728\u8bfb\u5165\u65f6\u5904\u7406\u67d0\u4e2a\u65f6\u5019\u6709\u51e0\u4e2a\u4efb\u52a1\n\n  \u5f53$baket[i]=0$,\u8868\u793a\u6b64\u65f6\u6ca1\u6709\u4efb\u52a1\u53ef\u505a, $f[i] = f[i+1]+1$\n\n  \u5426\u5219, $f[i] = min\\{f[i+a[k].t] |k \\in \\{1,baket[i]\\}\\}$\n\n  \u5c14\u540e\u8fd8\u9700\u5904\u7406\u4e00\u4e2a\u7ec6\u8282,\u5c31\u662f\u5165\u5ea6\u7684\u4efb\u52a1\u8981\u6309\u7167\u8d77\u59cb\u65f6\u95f4\u6392\u5e8f.\n\n\n\n### Code\n\n\u89c1\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int SIZE = 10000 + 5;\n\nint n, k;\nint f[SIZE], basket[SIZE];\n\nstruct node {\n    int st, t;\n} a[SIZE];\n\ninline int read()\n{\n    char ch = getchar();\n    int f = 1, x = 0;\n    while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); }\n    while (ch >= '0' && ch <= '9') { x = (x << 1) + (x << 3) + ch - '0'; ch = getchar(); }\n    return x * f;\n}\n\ninline int CMP(node a, node b) \n{\n    return a.st > b.st;\n}\n\nint main()\n{\n    int cnt = 1;\n    n = read(), k = read();\n    for (int i = 1; i <= k; i++)    \n        a[i].st = read(), a[i].t = read(), basket[a[i].st]++;\n    std::sort(a + 1, a + k + 1, CMP);\n    for (int i = n; i >= 1; i--) {\n        if (!basket[i]) f[i] = f[i + 1] + 1;\n        else {\n            for (int j = 1; j <= basket[i]; j++) {\n                if (f[i + a[cnt].t] > f[i]) \n                    f[i] = f[i + a[cnt].t];\n                cnt++;\n            }\n        }\n    }\n    printf(\"%d\", f[1]);\n    return 0;\n}\n```\n\n\n\n\n\n\u200b\t",
        "postTime": 1571391345,
        "uid": 46708,
        "name": "andysk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u770b\u4e86\u697c\u4e0a\u5927\u4f6c\u4eec\u7684\u9898\u89e3\uff0c\u57fa\u672c\u5168\u7528\u7684dp\uff08\u52a8\u6001\u89c4\u5212\uff09\u3002\n\n\u5176\u5b9e\uff0c\u8fd9\u9053\u9898\u8fd8\u6709\u4e00\u79cd\u66f4\u52a0\u6734\u7d20\u7684\u601d\u60f3\uff1a\u8bb0\u5fc6\u5316\u3002\n\n#### \u4f46\uff0c\u4e0d\u7ba1\u600e\u6837\uff0c\u8bb0\u5fc6\u5316\u4e5f\u4e0d\u662f\u4e00\u4e0b\u5b50\u5c31\u5199\u51fa\u6765\u7684####\n\n# \u8ba9\u6211\u4eec\u5148\u7206\u641c\u5427\uff01#\n\n\u5176\u5b9e\uff0c\u7206\u641c\u5f88\u5bb9\u6613\u60f3\u5230\u3002\u9996\u5148\uff0c\u672c\u9898\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f\u5728\u540c\u4e00\u65f6\u523b\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u7684\u4efb\u52a1\u53ef\u4ee5\u9009\u62e9\u3002\u6bd4\u5982\uff0c\u6837\u4f8b\u4e2d\u5728\u7b2c\u4e00\u5206\u949f\u5c31\u53ef\u4ee5\u9009\u62e9\u957f\u5ea6\u4e3a2\u7684\u4efb\u52a1\u4e00\uff08\u6837\u4f8b\u4e2d\u7b2c\u4e8c\u884c1 2\uff09\u6216\u8005\u957f\u5ea6\u4e3a6\u7684\u4efb\u52a1\u4e8c\uff08\u6837\u4f8b\u4e2d\u7b2c\u4e09\u884c1 6\uff09\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\uff1adfs\u6bcf\u4e00\u4e2a\u60c5\u51b5\u3002\u6bd4\u5982\uff0c\u5148\u641c\u8d77\u70b9\u4e3a1\uff0c\u957f\u5ea6\u4e3a2\u7684\u4efb\u52a1\uff0c\u7136\u540e\u53d1\u73b0\u6211\u4eec\u4e0d\u80fd\u540c\u65f6\u505a\u8d77\u70b9\u4e3a1\uff0c\u957f\u5ea6\u4e3a6\u7684\u4efb\u52a1\uff0c\u4e8e\u662f\u6211\u4eec\u7ee7\u7eed\u5f80\u540e\u641c\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n\n\u7136\u540e\uff0c\u6211\u4eec\u76f4\u63a5\u8df3\u5230\u65f6\u95f4\u4e3a3\u7684\u5730\u65b9\uff08\u56e0\u4e3a1\u30012\u90fd\u5728\u505a\u4efb\u52a1\uff09\u3002\u6211\u4eec\u53d1\u73b03\u8fd9\u91cc\u6ca1\u6709\u4efb\u52a1\uff0c\u4e8e\u662f\u7a7a\u95f2\u65f6\u95f4+1\u3002\u63a5\u7740\uff0c\u6211\u4eec\u641c\u5230\u65f6\u95f4\u4e3a4\u7684\u5730\u65b9\uff0c\u53d1\u73b0\u6211\u4eec\u8981\u505a\u4efb\u52a1\uff0c\u4ece4\u5f00\u59cb\u505a\u523014\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u5f53\u641c\u5230\u65f6\u95f4\u4e3a16\u7684\u5730\u65b9\u540e\uff0c\u6211\u4eec\u8bb0\u5f55\u7b54\u6848\u540e\u56de\u6eaf\u3002\n\n\u7136\u540e\u641c\u8d77\u70b9\u4e3a1\uff0c\u957f\u5ea6\u4e3a6\u7684\u4efb\u52a1\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n\u4ee5\u4e0a\u4e3adfs\u57fa\u672c\u601d\u8def\u3002\n```\nvoid dfs(int now,int tot)\n{\n  if(now==n+1)\n  {\n  \tans=max(ans,tot);\n  \treturn;\n  }\n  int cnt=0;\n  for(int i=0;i<shed[now].size();i++)\n  {\n  \tif(!vis[shed[now][i]])\n  \t{\n  \t  vis[shed[now][i]]=1;\n  \t  dfs(now+work[shed[now][i]].len,tot);\n  \t  vis[shed[now][i]]=0;\n  \t  cnt++;\n\t}\n  }\n  if(cnt==0)  dfs(now+1,tot+1);\n}\n```\n------------\n\u5f88\u660e\u663e\uff0c\u770b\u4e00\u4e0b\u6570\u636e\uff1an,k<=10000\u3002\u5f88\u660e\u663e\uff0c\u80af\u5b9a\u4f1a\u8d85\u65f6\u3002\u4e00\u5b9a\u8fdb\u884c\u4e86\u5197\u4f59\u7684\u8ba1\u7b97\u3002\u90a3\u4e48\uff0c\u5197\u4f59\u5728\u54ea\u91cc\u5462\uff1f\n\n## \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8bb0\u5fc6\u5316\uff01##\n\u6bd4\u5982\uff0c\u6211\u4eec\u628a\u6837\u4f8b\u6539\u6210\n```\n15 6\n1 2\n1 6\n4 3\n8 5\n8 1\n11 5\n```\n\u753b\u51fa\u56fe\u540e\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u641c\u5b8c\u4efb\u52a11\u30013\u4e4b\u540e\uff0c\u5230\u8fbe\u65f6\u523b\u4e3a8\u7684\u5730\u65b9\uff0c\u6211\u4eec\u5c31\u4f1a\u628a\u65f6\u523b8\u4e4b\u540e\u7684\u4efb\u52a1\u7edf\u7edf\u641c\u4e00\u904d\u3002\u800c\u5f53\u6211\u4eec\u56de\u6eaf\u4e4b\u540e\u518d\u641c\u4efb\u52a12\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6309\u4e0a\u9762\u7684dfs\uff0c\u5c31\u4f1a\u518d\u628a\u7b2c8~15min\u7684\u4efb\u52a1\u518d\u641c\u4e00\u904d\u3002\u5176\u5b9e\u8fd9\u5c31\u6ca1\u6709\u5fc5\u8981\u4e86\uff0c\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u641c\u8fc7\u76f8\u540c\u7684\u4e00\u904d\uff0c\u800c\u4e24\u6b21\u641c\u7d22\u540e\u65f6\u95f4\u7b2c8min~15min\u7684\u7a7a\u4f59\u65f6\u95f4\u7684\u6700\u5927\u503c\u5e76\u4e0d\u4f1a\u53d8\u5316\uff0c\u5e76\u4e14\u5728\u7b2c1min~7min\u505a\u4efb\u52a12\u6240\u5f97\u7684\u7a7a\u4f59\u65f6\u95f4\u6700\u5927\u503c\uff081\uff09\u4e0d\u4f1a\u6bd4\u505a\u4efb\u52a11\u548c\u4efb\u52a13\u66f4\u4f18\uff082\uff09\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u526a\u679d\u8fd4\u56de\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u641c\u5230\u7b2ci\u5206\u949f\u65f6\u5f53\u524d\u6240\u83b7\u5f97\u7684\u7a7a\u4f59\u65f6\u95f4\u6700\u5927\u503c\uff0c\u5982\u679c\u6211\u4eec\u53c8\u641c\u5230\u8fd9\u4e2a\u65f6\u95f4\u70b9\uff0c\u800c\u76ee\u524d\u7684\u89e3\u4e0d\u4f1a\u6bd4\u4e4b\u524d\u7684\u66f4\u4f18\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\uff0c\u4e0d\u5fc5\u518d\u641c\u4e86\u3002\u8fd9\u5c31\u5b9e\u73b0\u4e86\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\u800c\u5199\u8d77\u6765\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u518d\u52a0\u4e09\u53e5\u8bdd\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u5199\u7684\u6709\u70b9\u4e11\uff09\n```\n#include <iostream>\n#include <cstring>\n#include <vector>\nusing namespace std;\nstruct node{\n  int sta,len;\n};\nint n,k;\nnode work[10010];\nvector<int> shed[10010];\nbool vis[10010];\nint f[10010];                                //\u52a0\u7684\u7b2c\u4e00\u53e5 \nint ans=0;\nvoid dfs(int now,int tot)\n{\n  if(now==n+1)\n  {\n  \tans=max(ans,tot);\n  \treturn;\n  }\n  if(tot<=f[now])  return;                   //\u52a0\u7684\u7b2c\u4e8c\u53e5 \n  f[now]=tot;                                //\u52a0\u7684\u7b2c\u4e09\u53e5 \n  //\u4ee5\u4e0a\u4e24\u53e5\u5c31\u5b9e\u73b0\u4e86\u8bb0\u5fc6\u5316 \n  int cnt=0;\n  for(int i=0;i<shed[now].size();i++)\n  \tif(!vis[shed[now][i]])\n  \t{\n  \t  vis[shed[now][i]]=1;\n  \t  dfs(now+work[shed[now][i]].len,tot);\n  \t  vis[shed[now][i]]=0;\n  \t  cnt++;\n\t}\n  if(cnt==0)  dfs(now+1,tot+1);\n}\nint main()\n{\n  memset(f,-1,sizeof(f));\n  cin>>n>>k;\n  for(int i=1;i<=k;i++)\n  {\n  \tcin>>work[i].sta>>work[i].len;\n  \tshed[work[i].sta].push_back(i);\n  }\n  dfs(1,0);\n  cout<<ans<<endl;\n  return 0;\n}\n```\n",
        "postTime": 1549978655,
        "uid": 84902,
        "name": "2482173874lzy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "## \u4f60\u4ece\u672a\u89c1\u8fc7\u7684\u5168(chuan)\u65b0\u9898\u89e3\n\n\u770b\u5230\u70ed\u95e8\u9898\u89e3\u90fd\u662f\u679a\u4e3e\u65f6\u95f4\u7684\n\n\u6765\u4e00\u53d1\u679a\u4e3e\u4efb\u52a1\u7684\n\n\u9898\u76ee\u4e2d\u7684\u4efb\u52a1\u53ef\u4ee5\u770b\u6210\u662f\u7ebf\u6bb5\n\n\u5b9a\u4e49\u7ebf\u6bb5\u6570\u6700\u591a\u7684\u3001\u4e24\u4e24\u4e0d\u76f8\u4ea4\u7ebf\u6bb5\u7ec4\u4e3a\u201c\u597d\u7684\u201d\u7ebf\u6bb5\u7ec4\uff0c\u77e5\u5728\u201c\u597d\u7684\u201d\u7ebf\u6bb5\u7ec4\u4e2d\u518d\u52a0\u5165\u4efb\u610f\u4e00\u6761\u7ebf\u6bb5\u90fd\u4f1a\u51fa\u73b0\u7ebf\u6bb5\u91cd\u53e0\n\n\u5219\u9898\u610f\u4e3a\u6c42\u201c\u597d\u7684\u201d\u7ebf\u6bb5\u7ec4\u4e2d\u957f\u5ea6\u548c\u6700\u5c0f\u7684\n\n\u4e3a\u4e86\u4f7f\u5176\u6ee1\u8db3\u8fd9\u6837\u7684\u6027\u8d28\uff0c\u5b9a\u4e49succ[i]\u8868\u793a\u6bcf\u6761\u7ebf\u6bb5\u7684\u76f4\u63a5\u540e\u7ee7\u7ebf\u6bb5\u7684\u5de6\u7aef\u70b9\uff08\u5373\u7b2ci\u6761\u7ebf\u6bb5\u7684\u53f3\u7aef\u70b9\u5230succ[i]\u4e2d\u6ca1\u6709\u4efb\u4f55\u4e00\u6761\u7ebf\u6bb5\u7684\u5de6\u7aef\u70b9\uff09\n\n\u5c06\u7ebf\u6bb5\u6309\u7167\u5de6\u7aef\u70b9\u7b2c\u4e00\u5173\u952e\u5b57\u5347\u5e8f\uff0c\u53f3\u7aef\u70b9\u7b2c\u4e8c\u5173\u952e\u5b57\u5347\u5e8f\u6392\u5e8f\uff0c\u6613\u6c42succ[i]\n\n\u8bbef[i]\u4e3a\u524di\u6761\u7ebf\u6bb5\u4e2d\u201c\u597d\u7684\u201d\u7ebf\u6bb5\u7ec4\u6700\u5c0f\u7684\u957f\u5ea6\u548c,len[i]\u4e3a\u7b2ci\u6761\u7ebf\u6bb5\u7684\u957f\u5ea6,T[i].start/end\u4e3a\u7b2ci\u6761\u7ebf\u6bb5\u7684\u5de6/\u53f3\u7aef\u70b9\n\n\u6709\u65b9\u7a0b\nf[i]=min(f[i],f[j]+len[i]),succ[j]=i\n\n\u521d\u59cb\u5316\u65f6\uff0c\u4ee4f[0]=0,succ[1]=T[1].start\n\n\u6700\u540e\uff0c\u5728\u6240\u6709succ[i]=0\uff08\u5373\u65e0\u76f4\u63a5\u540e\u7ee7\u7ebf\u6bb5\uff09\u7684\u7ebf\u6bb5i\u4e2d\uff0c\u5bf9f[i]\u6253\u64c2\u53f0\u5373\u53ef\n\n```\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n\n\nusing namespace std;\nconst int MAXN=10000,MAXK=10000,INF=0x7fffffff;\nint f[MAXN];//f[i]\u8868\u793a\u524di\u5206\u949f\u95f2\u6687\u65f6\u95f4\u7684\u6700\u5927\u503c\n\nstruct times\n{\n    int start,time,end;\n}T[MAXN];\nbool operator<(times A,times B)//\u7ebf\u6bb5\u6392\u5e8f\n{\n    if (A.start==B.start) return A.end<B.end;\n    else return A.start<B.start;\n}\nint N,K,ans,succ[MAXN];\nint main()\n{\n    cin>>N>>K;\n    for (int i=1;i<=K;i++)\n        cin>>T[i].start>>T[i].time,T[i].end=T[i].start+T[i].time-1;\n    sort(T+1,T+K+1);\n    memset(succ,-1,sizeof succ);\n    for (int i=1;i<=K;i++)\n    {\n        int num=i;\n        while (T[num].start<=T[i].end&&num<=K) num++;\n        succ[i]=T[num].start;\n        if (num==K+1) succ[i]=0;\n    }\n    int ans=INF;\n    memset(f,0x3f,sizeof f);\n    f[0]=0;\n    succ[0]=T[1].start;\n    for (int i=1;i<=K;i++)\n    {\n        for (int j=0;j<i;j++)\n            if (succ[j]==T[i].start)\n                f[i]=min(f[i],f[j]+T[i].time);\n    }\n\n    for (int i=1;i<=K;i++)\n        if (!succ[i])\n            ans=min(ans,f[i]);\n    cout<<N-ans<<endl;\n}\n\n\n```\n",
        "postTime": 1534688142,
        "uid": 12973,
        "name": "Voldemort123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "## LUOGU P1280 SOLUTION\n### \u89e3\u9898\u601d\u8def  \n\n**\u52a8\u6001\u89c4\u5212**\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a\n1. \u9884\u5904\u7406\u9636\u6bb5 \n\n\u8bbe\u7f6e\u4e24\u4e2abool\u6570\u7ec4begin\u3001end\uff0cbegin\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u65f6\u95f4\u70b9\u6709\u65e0\u4efb\u52a1\u5f00\u59cb\uff0cend\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u65f6\u95f4\u70b9\u6709\u65e0\u4efb\u52a1\u7ed3\u675f\u3002\u6bcf\u6b21\u8f93\u5165\u4e00\u4e2a\u4efb\u52a1\u7684\u8d77\u6b62\u65f6\u95f4\u540e\uff0c\u66f4\u65b0\u4e24\u4e2abool\u6570\u7ec4\u5e76\u5efa\u7acb\u4e00\u6761\u4ece\u7ec8\u6b62\u65f6\u95f4\u5230\u8d77\u6b62\u65f6\u95f4\u7684\u6709\u5411\u8fb9\uff0c\u7528vector\u5b9e\u73b0\u7684\u4e8c\u7ef4\u6570\u7ec4\u5b58\u50a8\u3002\n\n2. DP\u9636\u6bb5  \n  \n\u4ece\u540e\u5f80\u524d\u8fdb\u884c\u4e00\u904d\u626b\u63cf\u3002\u8bbe\u7f6e\u6570\u7ec4f\uff0cf[i]\u8bb0\u5f55\u4ece\u65f6\u95f4\u70b9i\u5230\u5de5\u4f5c\u65e5\u7ed3\u675f\u4e4b\u95f4\u6700\u957f\u7684\u7a7a\u6687\u65f6\u95f4\uff08\u5373\uff1a\u65f6\u95f4\u70b9i\u7684\u201c**\u9006\u63a8\u6700\u5927\u7a7a\u6687\u65f6\u95f4**\u201d\uff09\u3002  \n  \n\u626b\u63cf\u5230\u6709\u4efb\u52a1\u7ed3\u675f\u7684\u65f6\u95f4\u70b9\u65f6\uff0c\u4ee5\u4e3a\u6b64\u65f6\u4efb\u52a1\u521a\u7ed3\u675f\uff0c\u4ece\u4e0b\u4e00\u5206\u949f\u624d\u4f1a\u8fdb\u5165\u7a7a\u6687\u72b6\u6001\uff0c\u6545\u6211\u4eec\u7528\u5f53\u524d\u65f6\u95f4\u4e0b\u4e00\u5206\u949f\u7684\u201c\u9006\u63a8\u6700\u5927\u7a7a\u6687\u65f6\u95f4\u201d\u5206\u522b\u5bf9\u3010\u5f53\u524d\u65f6\u95f4\u7ed3\u675f\u7684\u6240\u6709\u4efb\u52a1\u3011\u7684\u8d77\u59cb\u65f6\u95f4\u7684\u201c\u9006\u63a8\u6700\u5927\u7a7a\u6687\u65f6\u95f4\u201d\u8fdb\u884c\u6bd4\u8f83\uff0c\u82e5\u66f4\u5927\u5219\u66ff\u6362\u4e4b\u3002\u8fd9\u4e00\u6b65\u628a\u6240\u6709\u6709\u4efb\u52a1\u5f00\u59cb\u7684\u65f6\u95f4\u70b9\u7684\u201c\u9006\u63a8\u6700\u5927\u7a7a\u6687\u65f6\u95f4\u201d\u5df2\u7ecf\u66f4\u65b0\u4e3a\u6700\u4f18\u89e3\u3002\n  \n\u540c\u65f6\uff0c\u82e5\u6ca1\u6709\u4efb\u52a1\u5728\u5f53\u524d\u65f6\u95f4\u5f00\u59cb\uff0c\u5219\u4e0b\u4e00\u5206\u949f\u7684\u201c\u9006\u63a8\u6700\u5927\u7a7a\u6687\u65f6\u95f4\u201d\u52a0\u4e00\u4e4b\u540e\u5373\u4e3a\u5f53\u524d\u65f6\u95f4\u7684\u201c\u9006\u63a8\u6700\u5927\u7a7a\u6687\u65f6\u95f4\u201d\u3002  \n  \n\u4e00\u904d\u626b\u63cf\u8fc7\u540e\uff0cf[1]\u5373\u4e3a\u4ece\u5de5\u4f5c\u65e5\u5f00\u59cb\u5230\u5de5\u4f5c\u65e5\u7ed3\u675f\u7684\u201c\u9006\u63a8\u6700\u5927\u7a7a\u6687\u65f6\u95f4\u201d\uff0c\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\u3002\n    \n### AC\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<vector>\nusing namespace std;\nint n,k,t,p,now,f[10001];\nbool begin[10001],end[10001];\nvector<int> v[10001];\nint max(int x,int y){return x>y?x:y;}\nint main()\n{\n  scanf(\"%d%d\",&n,&k);\n  for(int i=1;i<=k;i++)//\u9884\u5904\u7406\u9636\u6bb5\n    {\n      scanf(\"%d%d\",&p,&t);\n      begin[p]=1;//\u505a\u6807\u8bb0\n      end[p+t-1]=1;\n      v[p+t-1].push_back(p);//\u5efa\u8fb9\n    }\n  for(int i=n;i>=1;i--)//DP\u9636\u6bb5\n    {\n      if(end[i])\n\tfor(int k=0;k<v[i].size();k++)\n\t  f[v[i][k]]=max(f[v[i][k]],f[i+1]);\n      if(!begin[i])f[i]=f[i+1]+1;\n    }\n  printf(\"%d\",f[1]);\n  return 0;\n}\n```\n",
        "postTime": 1570271856,
        "uid": 118377,
        "name": "Honeta",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u867d\u7136\u6587\u7ae0\u5df2\u7ecf\u6709\u5f88\u591a\u4e86\uff0c\u4f46\u662f\u8bb8\u591a\u662f\u91cd\u590d\u7684\uff0c\u4e0d\u540c\u6709\u4ef7\u503c\u7684\u601d\u8def\u5e76\u6ca1\u6709\u5f88\u591a\uff0c\u6240\u4ee5\uff0c\u5728\u6b64\u63d0\u51fa\u4e00\u79cd\u65b0\u601d\u8def\u3002\n\n\u8fd9\u79cd\u601d\u8def\u4e0d\u540c\u4e8e~~\u6240\u6709~~\u9898\u89e3\uff0c\u65e0\u9700\u6392\u5e8f\uff0c\u6b63\u7740\u505a\uff08\u5f53\u7136\u8fd8\u662f$DP$\uff09\u3002\n\n\u9996\u5148\u53ef\u4ee5\u8f6c\u6362\u4e00\u4e0b\u601d\u8def\uff0c\u7528$DP$\u6765\u6c42\u505a\u5c11\u5de5\u4f5c\u65f6\u95f4\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f$n-$\u6700\u5c0f\u5de5\u4f5c\u65f6\u95f4\u3002\n\n\u63a5\u7740\uff0c\u6839\u636e\u9898\u610f\uff0c\u5982\u679c\u6b64\u4efb\u52a1\u5728$x$\u65f6\u5f00\u59cb\uff0c\u90a3\u4e48\u4ece$1-x$\u90fd\u53ef\u4ee5\u6267\u884c\uff08\u6682\u5b9a\uff09\u90a3\u4e48\u4fbf\u8981\u679a\u4e3e\u524d$1-x$\u7684\u91cf\uff0c\u7136\u800c\uff0c\u8fd9\u9898\u6709\u4e00\u4e2a\u9650\u5b9a\uff1a\u53ea\u8981\u6b64\u65f6\u7a7a\u95f2\uff0c\u5982\u6709\u4efb\u52a1\uff0c\u5fc5\u987b\u505a\u3002\u8fd9\u6837\uff0c\u5c31\u5e94\u8be5\u7528\u4e00\u4e2a\u6570\u7ec4\u6807\u8bb0\u6b64\u65f6\u662f\u5426\u6709\u4efb\u52a1\uff0c\u7531\u4e8e\u65f6\u95f4\u5355\u8c03\u4e0a\u5347\uff0c\u53ea\u9700\u8bb0\u5f55\u76ee\u524d\u6700\u8fdf\u7684\u6709\u4efb\u52a1\u65f6\u95f4\u5373\u53ef\uff0c\u56e0\u6b64\u5c31\u8981\u4ece\u6700\u8fdf\u7684\u65f6\u95f4\u52a0\u4e00\u5f00\u65f6\u904d\u5386\uff0c\u5982\u6b64\u65f6\u95f4\u4e5f\u987a\u5e26\u4f18\u5316\u4e86\u3002\n\n\u4f46\u662f\u5982\u679c\u6709\u76f8\u540c\u65f6\u95f4\u5f00\u59cb\u7684\u4efb\u52a1\u600e\u4e48\u529e\u5462\uff1f\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u5206\u5f00\u5904\u7406\u5c31\u597d\u4e86\u3002\n\n\u53ef\u4ee5\u8bbe$f[i]$\u8868\u793a$1-i$\u6700\u5c0f\u5de5\u4f5c\u65f6\u95f4\n\n\u8fd9\u79cd\u65b9\u6cd5\u4fdd\u8bc1\u4e86\u65e0\u540e\u6548\u6027\uff0c\u751a\u81f3\u53ef\u4ee5\u628a\u5f53\u4f5c\u80cc\u5305\u7406\u89e3\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<map> \n#include<bitset>\nusing namespace std;\n#define re register int\ninline int read(){\n    int x=0,ff=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')ff=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    return x*ff;\n}\nstruct tt{\n\tint x,y;\n}a[10005];\nint n,k,f[10005],ss;\nbool b[10005];\nsigned main(){\n\tn=read();k=read();\n\tfor(int i=1;i<=k;i++){a[i].x=read();a[i].y=read();}\n\tmemset(f,0x3f,sizeof(f));f[1]=0;\n\tfor(int i=1;i<=k;i++){\n\t\tif(a[i].x==a[i-1].x){//\u7279\u6b8a\u5904\u7406\u76f8\u540c\u4efb\u52a1\n\t\t\tf[a[i].x+a[i].y]=min(f[a[i].x+a[i].y],f[a[i].x]+a[i].y);\n            //\u6839\u636e\u9898\u76ee\u800c\u6765\u7684\u8f6c\u79fb\u65b9\u7a0b\n            //\u4e0a\u9762\u662f\u7279\u6b8a\u5904\u7406\u76f8\u540c\u65f6\u95f4\u5f00\u59cb\u4efb\u52a1\u5f00\u59cb\u65f6\u95f4\u5bf9\u540e\u9762\u65f6\u95f4\u7684\u5f71\u54cd\n\t\t\tfor(int j=a[i].x-1;!b[j]&&j;j--){\n\t\t\t\tf[a[i].x+a[i].y]=min(f[a[i].x+a[i].y],f[j]+a[i].y);\n                //\u6b64\u8f6c\u79fb\u65b9\u7a0b\u4e0e\u4e0a\u9762\u4e00\u4e2a\u610f\u601d\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor(int j=a[i].x;!b[j]&&j;j--){\n\t\t\t\tf[a[i].x+a[i].y]=min(f[a[i].x+a[i].y],f[j]+a[i].y);\n\t\t\t}\n\t\t\tb[a[i].x]=1;//\u6807\u8bb0\uff0c\u6b64\u65f6\u5df2\u6709\u4efb\u52a1\n\t\t}\n\t}\n\tfor(int i=n+1;!b[i]&&i;i--)ss=max(ss,n-f[i]);\n    //\u8fd9\u91cc\u5c31\u662f\u5751\u70b9\u4e86\uff0cf[i]\u8868\u793a\u7684\u662fi\u4e4b\u524d\u8fd9\u4e2a\u5de5\u4f5c\u65f6\u95f4\u7684\u6700\u5c0f\u503c\uff0ci\u4e3a\u7a7a\u95f2\u65f6\u95f4\uff0c\u6709\u53ef\u80fd\u4e3an+1\u4e86\uff08\u9898\u76ee\u4e00\u4fdd\u8bc1\u5de5\u4f5c\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8en\uff0c\u90a3\u4e48\u7a7a\u95f2\u65f6\u95f4\u6700\u5927\u4e3an+1\u4e86\uff09\n\tcout<<ss<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1566465999,
        "uid": 114059,
        "name": "fscbti",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u8bbe\u8ba1\u72b6\u6001f\u3010i\u3011\u8868\u793a\u5728i~T\uff08T\u4e3a\u603b\u65f6\u95f4\uff09\u7684\u65f6\u95f4\u5185\u7684\u6700\u5927\u95f2\u6687\u65f6\u95f4\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n\u5982\u679c\u65f6\u95f4\u70b9i\u5904\u6ca1\u6709\u4efb\u52a1\uff0c\u5219f\u3010i\u3011= f\u3010i+1\u3011+1;\n\n\u5982\u679c\u65f6\u95f4\u70b9i\u5904\u6709\u4efb\u52a1\uff0c\u5219f\u3010i\u3011=max\uff08f\u3010i+\u4efb\u52a1k\u7684\u6301\u7eed\u65f6\u95f4\u3011\uff09;   //\u6b64\u5904k = 1~\u65f6\u95f4\u70b9i\u5904\u7684\u4efb\u52a1\u603b\u4e2a\u6570\n\n\u6240\u4ee5\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u60f3\u8981\u77e5\u9053f\u3010i\u3011\uff0c\u5fc5\u987b\u5148\u6c42\u51fa f\u3010\u6bd4i\u5927\u7684\u65f6\u95f4\u70b9\u3011\uff0c\u6240\u4ee5\u786e\u5b9a\u672c\u9898\u5012\u63a8\uff1a\u7531f\u3010T\u3011\u9012\u63a8\u5230f\u30101\u3011\u3002\n\n\n\u90a3\u4e48\u5982\u4f55\u8bb0\u5f55\u4e0b \u65f6\u95f4\u70b9i\u5904\u7684\u6bcf\u4e2a\u4efb\u52a1\u7684\u4fe1\u606f\u5462\uff0c\u76f4\u63a5\u5c06\u201c\u4efb\u52a1\uff08\u5f00\u59cb\u65f6\u95f4\u3001\u6301\u7eed\u65f6\u95f4\uff09\u201d\u5b9a\u4e49\u6210\u7ed3\u6784\u4f53\u3002\u8f93\u5165\u5b8c\u6bd5\u540e\uff0c\u4ee5\u6bcf\u4e2a\u4efb\u52a1\u7684\u5f00\u59cb\u65f6\u95f4\u4e3a\u5173\u952e\u5b57 \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\u8fd9\u6837\u5c31\u4f7f\u5f97 \u5f00\u59cb\u65f6\u95f4\u76f8\u540c\u7684\u4efb\u52a1 \u9760\u5230\u4e86\u4e00\u8d77\uff0c\u5e76\u4e14\u63a5\u4e0b\u6765dp\u65f6\u76f4\u63a5\u4ece\u4e0b\u68071\u5f00\u59cb\u5f80\u540e\u505a\uff0c\u5c31\u4fdd\u8bc1\u4e86\u5012\u63a8\uff08\u65f6\u95f4\u4ece\u540e\u5f80\u524d\uff09\u3002\n\n\n\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int maxn = 1e4+10;\nint f[maxn],sch[maxn],T,n;// sch[i]\u8868\u793a\u5728\u65f6\u95f4\u70b9i\u5904\u7684\u4efb\u52a1\u6570\u91cf\uff0c\u521d\u59cb\u90fd\u4e3a0 \u3002 \nstruct task{\n    int s,l; //s\u4e3a\u4efb\u52a1\u7684\u5f00\u59cb\u65f6\u95f4\uff0cl\u4e3a\u4efb\u52a1\u7684\u6301\u7eed\u65f6\u95f4 \n}t[maxn];\nint cmp(task a,task b){\n    return a.s > b.s;  //\u6309\u5f00\u59cb\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n}\nint main(){\n    scanf(\"%d%d\",&T,&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d\",&t[i].s,&t[i].l);\n        sch[t[i].s]++;\n    }\n    sort(t+1,t+n+1,cmp);\n    for(int i=T,now=1;i>=1;i--){\n        if(!sch[i])f[i]=f[i+1]+1;\n        else for(int k=1;k<=sch[i];k++,now++) f[i]=max(f[i],f[i+t[now].l]);\n        //\u4ecesch[i]\u4e2a\u4efb\u52a1\u91cc\u9762 \u627e\u5230\u4e00\u4e2a\u4efb\u52a1\uff0c\u4f7f\u5f97 f[i+\u8fd9\u4e2a\u4efb\u52a1\u7684\u6301\u7eed\u65f6\u95f4] \u6700\u5927 \n    }\n    printf(\"%d\\n\",f[1]);\n    return 0;\n}\n```",
        "postTime": 1503574212,
        "uid": 23342,
        "name": "Redstone\u7ea2\u77f3\u7c89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a\n\n\u6c42\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\u5373\u6c42\u6700\u5c0f\u6d88\u8017\u65f6\u95f4\u3002\n\nf[i]\u8868\u793a\u4ee5\u7b2ci\u4e2a\u4efb\u52a1\u7ed3\u5c3e\u7684\u5de5\u4f5c\u5e8f\u5217\u7684\u6700\u5c0f\u6d88\u8017\u65f6\u95f4\n\n\u628a\u4efb\u52a1\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff0c\u4ee5\u786e\u4fdd\u5982\u679c\u67d0\u4e00\u65f6\u523b\u65e0\u5176\u4ed6\u4efb\u52a1\u5fc5\u987b\u505a\u4e00\u4e2a\u3002\n\nf[i]=f[j]+cost(i) \u4ec5\u5f53end(j)<start(i) \u4e14 \u5728\u533a\u95f4(end(j),start(i))\u4e2d\u65e0\u5176\u4ed6\u4efb\u52a1\u3002\n\n\u4f7f\u7528cnt(i)\u8868\u793a\u4ece1-i\u65f6\u523b\u6709\u51e0\u4e2a\u4efb\u52a1\uff0c\u5982\u679ccnt(a)==cnt(b)\u5219\u8bf4\u660ea,b\u95f4\u65e0\u4efb\u52a1\u3002\n\n\n```cpp\n\n#include <iostream>\n#include <climits>\n#include <algorithm>\n#define start(x) task[x].start\n#define cost(x) task[x].cost\n#define end(x) task[x].end\nusing namespace std;\n\nstruct ts{\n    int start;\n    int cost;\n    int end;\n}task[10001];\n\nbool cmp(ts a,ts b){\n    return a.start<b.start;\n}\n\nint n,k,f[10001],cnt[10001];\nint b[10001];\n\nint main(){\n    cin>>n>>k;\n    for (int i=1;i<=k;i++){\n        cin>>start(i)>>cost(i);\n        end(i)=start(i)+cost(i)-1;\n        ++b[start(i)];\n    }\n    for (int i=1;i<=n;i++)\n        cnt[i]=cnt[i-1]+b[i];\n    sort(task+1,task+k+1,cmp);\n    int ans=0;\n    for (int i=1;i<=k;i++){\n        f[i]=INT_MAX/3;\n        for (int j=0;j<i;j++)\n            if (start(i)>end(j) && cnt[start(i)-1]==cnt[end(j)])\n                f[i]=min(f[i],f[j]+cost(i));\n        if (cnt[end(i)]==cnt[n])\n            ans=max(ans,n-f[i]);\n    }\n    cout<<ans;\n    return 0;\n}\n\n```",
        "postTime": 1438158356,
        "uid": 1253,
        "name": "zkx06111",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u76ee\u524d\u7684\u9898\u89e3\u4e2ddp\u5747\u662f\u4ee5\u65f6\u95f4\u4f5c\u4e3a\u72b6\u6001\u7684\uff0c\u4f46\u662f\u5f53$n\\leq 10^9$\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5c31\u4e0d\u884c\u4e86\uff0c\u6240\u4ee5\u6211\u6765\u5199\u4e00\u4e0b\u4e0d\u4f9d\u8d56\u4e8e\u65f6\u95f4\u7684dp\u505a\u6cd5\u3002\r\n\r\n\u9996\u5148\uff0c\u6211\u4eec\u6309\u7167**\u5f00\u59cb\u65f6\u95f4**\u5bf9\u6240\u6709\u4efb\u52a1\u8fdb\u884c\u6392\u5e8f\u3002\r\n\r\n\u6211\u4eec\u8bbe$dp_i$\u8868\u793a\u9009\u5230\u7b2c$i$\u4efd\u4efb\u52a1\u4e14\u7b2c$i$\u4efd\u4efb\u52a1\u5fc5\u9009\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u7a7a\u6687\u65f6\u95f4\u3002\r\n\r\n\u6613\u5f97dp\u65b9\u7a0b\u4e3a$dp_i=min(dp_i,dp_j+$\u4e24\u4efd\u4efb\u52a1\u4e2d\u95f4\u9694\u7684\u65f6\u95f4$)$ $(1\\leq j<i)$\u3002\r\n\r\n\u8fdb\u884c\u4e0a\u8ff0\u8f6c\u79fb\u7684\u524d\u63d0\u662f\u7b2c$j$\u4e2a\u4efb\u52a1\u548c\u7b2c$i$\u4e2a\u4efb\u52a1\u4e4b\u95f4\u6ca1\u6709\u5176\u4ed6\u5f00\u59cb\u7684\u4efb\u52a1\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u524d\u7f00\u548c\u5f97\u77e5\u3002\r\n\r\n\u7279\u6b8a\u7684\uff0c\u7b2c\u4e00\u4e2a\u4efb\u52a1\u9700\u8981\u7279\u5224\u3002\r\n\r\n\u6ce8\u610f\u7b54\u6848\u5e76\u4e0d\u662f$dp_n$\uff0c\u53ea\u8981\u4e00\u4e2a\u4efb\u52a1\u7ed3\u675f\u7684\u65f6\u523b\u5230$n$\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u5f00\u59cb\u7684\u4efb\u52a1\uff0c\u90a3\u4e48\u5747\u53ef\u5bf9\u7b54\u6848\u505a\u8d21\u732e\u3002\r\n\r\n\u7ec6\u8282\uff1a\u6ce8\u610f\u907f\u514d\u4e0d\u5408\u6cd5\u8f6c\u79fb\uff0c\u6bd4\u5982\u6709\u7684\u4efb\u52a1\u5fc5\u987b\u7531\u5c3c\u514b\u7684\u540c\u4e8b\u53bb\u505a\uff0c\u90a3\u4e48\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e2a\u4efb\u52a1\u4e0d\u5408\u6cd5\uff0c\u6240\u6709\u88ab\u6211\u4eec\u6807\u8bb0\u4e3a\u4e0d\u5408\u6cd5\u7684\u72b6\u6001\u5747\u4e0d\u80fd\u8f6c\u79fb\u5230\u5176\u4ed6\u72b6\u6001\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(k^2)$\u3002\r\n\r\ncode:\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm> \r\n#define ri register int\r\n\r\ninline int read() {\r\n\tint x=0,f=1;char ch=getchar();\r\n\twhile(ch<'0'||ch>'9') {if(ch=='-')f=-1;ch=getchar();}\r\n\twhile(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\r\n\treturn x*f;\r\n}\r\n\r\nconst int N=1e4+5;\r\nint dp[N],sum[N],n,k,ans;//\u7b2ci\u4e2a\u5de5\u4f5c\u5fc5\u987b\u505a\u6700\u5927\u4f11\u606f\u6570 \r\n\r\nstruct node{\r\n\tint p,l;\r\n}work[N];\r\n\r\nbool cmp(node x,node y){\r\n\treturn x.p<y.p;\r\n}\r\n\r\nint main(){\r\n\tn=read(),k=read();\r\n\tfor(ri i=1;i<=k;i++)dp[i]=-1;\r\n\tfor(ri i=1;i<=k;i++)work[i].p=read(),work[i].l=read(),sum[work[i].p]++;\r\n\tstd::sort(work+1,work+k+1,cmp);\r\n\tfor(ri i=1;i<=n;i++)sum[i]+=sum[i-1];//\u65f6\u523b1-i\u7684\u5de5\u4f5c\u603b\u6570 \r\n\tfor(ri i=1;i<=k;i++){\r\n\t\tfor(ri j=1;j<i;j++){\r\n\t\t\tif(dp[j]!=-1&&work[i].p>=work[j].p+work[j].l&&sum[work[i].p-1]-sum[work[j].p+work[j].l-1]==0)dp[i]=std::max(dp[i],dp[j]+(work[i].p-(work[j].p+work[j].l))); \r\n\t\t}\r\n\t\tif(sum[work[i].p-1]==0)dp[i]=std::max(dp[i],work[i].p-1);\r\n\t}\r\n\tfor(ri i=1;i<=k;i++){\r\n\t\tif(sum[n]-sum[work[i].p+work[i].l-1]==0&&dp[i]!=-1)ans=std::max(dp[i]+(n-(work[i].p+work[i].l))+1,ans);\r\n\t}\r\n\tprintf(\"%d\",ans);\r\n\treturn 0;\r\n}\r\n```\r\n\r\n",
        "postTime": 1612514625,
        "uid": 174897,
        "name": "zjrdmd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u5c3c\u514b\u7684\u4efb\u52a1"
    },
    {
        "content": "# \u9898\u610f\n\u5728\u7b2c\u4e00\u5206\u949f\u5230\u7b2ct\u5206\u949f\uff0c \u4e00\u5171\u6709n\u4e2a\u4efb\u52a1\u7b49\u5c3c\u514b\u53bb\u505a\uff0c \u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\uff0c \u6c42\u5c3c\u514b\u7684\u6700\u5927\u4f11\u606f\u65f6\u95f4\n\n# \u601d\u8def\n### \u5b50\u95ee\u9898\uff1a\n\u8fd9\u662f\u4e00\u9053\u52a8\u6001\u89c4\u5212\uff0c \u9996\u5148\u9700\u8981\u627e\u51fa\u65e0\u540e\u6548\u6027\u7684\u5b50\u95ee\u9898\u3002 \u6211\u5148\u60f3\u5230\u7684\u5b50\u95ee\u9898\u662f\uff0c \u7528 dp[i]\u8868\u793a\u7b2c1\u5230\u7b2ci\u5206\u949f\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\uff0c \u4f46\u662f\u4f60\u4f1a\u53d1\u73b0\uff0c \u524d i \u5206\u949f\u9009\u62e9\u7684\u4efb\u52a1\u662f\u5bf9\u540e\u9762\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\u7684\u8ba1\u7b97\u662f\u6709\u5f71\u54cd\u7684\uff0c \u6240\u4ee5\u4e0d\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u3002 \u7136\u540e\u53c8\u60f3\u5230\u4e00\u4e2a\u5b50\u95ee\u9898\uff0c \u7528dp[i]\u8868\u793a\u7b2c i \u5206\u949f\u5230\u7b2c t \u5206\u949f\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\uff0c \u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\uff0c \u4e0d\u7ba1\u4f60\u540e i \u5206\u949f\u9009\u62e9\u7684\u4efb\u52a1\u662f\u4ec0\u4e48\uff0c \u90fd\u5bf9\u540e\u7eed\u8ba1\u7b97\u65e0\u5f71\u54cd\uff0c \u5373\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u3002\n\n\u6240\u4ee5\u5b50\u95ee\u9898\u4e3a\uff1a dp[i]\u8868\u793a\u7b2c i \u5206\u949f\u5230\u7b2c t \u5206\u949f\u7a7a\u95f2\u65f6\u95f4\u7684\u6700\u5927\u503c\n### \u9012\u63a8\u65b9\u7a0b\uff1a\n\u5982\u679c\u7b2c i \u5206\u949f\u65e0\u4efb\u52a1\ndp[i] = dp[i+1]+1\n\u5982\u679c\u7b2c i \u5206\u949f\u6709\u4efb\u52a1\nfor 1 c[i][0] //c[i][0]\u8868\u793a\u7b2c i \u5206\u949f\u7684\u4efb\u52a1\u4e2a\u6570\ndp[i] = max(dp[i+c[i][k]]\uff0c dp[i])\n\n# \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n, k;\nstruct work{\n\tint s;\n\tint t;\n};\n\nwork c[10010];\nint num[10010];\nint pos[10010];\nint dp[10010];\n\nbool cmp(work i, work j)\n{\n\treturn i.s < j.s;\n}\n\nint main()\n{\n\tcin >> n >> k; //\u5de5\u4f5c\u65f6\u95f4\u548c\u4efb\u52a1\u603b\u6570\n\tmemset(num, 0, sizeof(num));\n\tmemset(dp, 0, sizeof(dp));\n\tfor(int i = 1; i <= k; i++)\n\t{\n\t\tcin >> c[i].s >> c[i].t;\n\t\tnum[c[i].s]++;\n\t} \n\tsort(c+1, c+k+1, cmp);\n\tpos[1] = 1;\n\n\tfor(int i = 2; i <= n; i++)\n\t{\n\t\tpos[i] = pos[i-1] + num[i-1];\n\t}\n\n\tfor(int i = n; i > 0; i--)\n\t{\n\t\tif(num[i] == 0)\n\t\t\tdp[i] = dp[i+1] + 1;\n\t\telse\n\t\t{\n\t\t\tfor(int j = 1; j <= num[i]; j++)\n\t\t\t{\n\t\t\t\tdp[i] = max(dp[i+c[pos[i]-1+j].t ], dp[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t\n\t\n\tcout << dp[1];\n}\n```\n",
        "postTime": 1572585414,
        "uid": 257135,
        "name": "tindon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "~~\u5927\u5bb6\u90fd\u8bf4\u8fd9\u662f\u9053dp\u6c34\u9898\uff0c\u5c31\u6211\u4e00\u4e2a\u4eba\u4e0d\u89c9\u5f97\u5417 $\\ \\ \\ \\ \\ \\  $~~$QWQ$\n\n~~\u4f17\u6240\u5468\u77e5~~\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u9898\u76ee\u91cc\u96be\u4ee5\u4ece\u524d\u5f80\u540e\u8fdb\u884c\u52a8\u6001\u89c4\u5212\uff0c\u90a3\u4e48\u5728\u8fd9\u79cd\u7ebf\u6027\u7684\u533a\u95f4\u9898\u76ee\u91cc\uff0c\u6211\u4eec\u4e0d\u59a8\u5148\u53bb\u5c1d\u8bd5\u4e0b\u4ece\u540e\u5f80\u524d\u6765\u89e3\u9898\uff0c\u8fd9\u53ef\u4ee5\u8bf4\u662f\u4e00\u79cd\u7ecf\u9a8c\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u4e00\u79cd\u5957\u8def\u3002\u65e2\u53ef\u4ee5\u662f\u5728\u7ebf\u4e0a\u4ece\u540e\u5f80\u524d\uff0c\u4e5f\u53ef\u4ee5\u662f\u6392\u5e8f\u65f6\u7684\u4ece\u5927\u5230\u5c0f\uff0c\u8fd9\u9898\u5c31\u662f\u6309\u7167\u65f6\u95f4\u7ebf\u4ece\u540e\u5f80\u524d\u3002\n\n\u5148\u6765\u89e3\u91ca \u4e3a\u4ec0\u4e48 \u3002\u5982\u679c\u6211\u4eec\u4ece\u524d\u5f80\u540e dp \u7684\u8bdd\uff0c\u6211\u4eec\u5728\u8003\u8651\u5230\u5f53\u524d\u65f6\u95f4\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u4f9d\u6b21\u8003\u8651\u9009\u53d6\u7684\u533a\u95f4\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5e9e\u5927\u800c\u4e14\u590d\u6742\u7684\u95ee\u9898\uff0c\u6700\u4f18\u7684\u533a\u95f4\u5e76\u6ca1\u6709\u4efb\u4f55\u7279\u70b9\uff0c\u96be\u4ee5\u627e\u51fa\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u5982\u679c\u4ece\u540e\u5f80\u524d dp \u7684\u8bdd\uff0c\u5475\u5475\u5475~\n\n\n------------\n\n\u5982\u679c\u5f53\u524d\u65f6\u95f4\u70b9\u5e76\u6ca1\u6709\u4efb\u52a1\u7684\u8bdd\uff0c\u53ef\u4ee5\u76f4\u63a5\u662f\u524d\u4e00\u4e2a\u65f6\u95f4\u70b9\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4+1\u3002\n\n\u5982\u679c\u5f53\u524d\u65f6\u95f4\u70b9\u6709\u4efb\u52a1\u7684\u8bdd\uff0c\u6328\u4e2a\u904d\u5386\u8fd9\u4e9b\u4efb\u52a1\u627e\uff0c$f[i]$\u4e3a$max(f[$\u8fd9\u4e2a\u65f6\u95f4\u70b9\u7b2c1\u4e2a\u4efb\u52a1\u7684\u6301\u7eed\u65f6\u95f4$+$\u5f53\u524d\u65f6\u95f4\u70b9]\uff0c\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7)\uff0c\u5c31\u662f\u8003\u8651\u9009\u53d6\u8fd9\u4e2a\u4efb\u52a1\u540e\uff0c\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\u4e3a\u8fd9\u4e9b\u4efb\u52a1\u7684\u7ed3\u675f\u65f6\u95f4\u4e0a\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\u4e2d\u7684\u6700\u5927\u503c\u3002\n\n\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n\u4f2a\u4ee3\u7801\u98ce\u683c\u53ef\u80fd\u6bd4\u8f83\u96f7\u4eba\uff0c\u51d1\u5408\u7740\u770b QAQ\n\tif(\u5f53\u524d\u65f6\u95f4\u70b9\u6ca1\u6709\u4efb\u52a1)\n\t\tf[i]=f[i+1]+1;\n\telse//\u5f53\u524d\u65f6\u95f4\u70b9\u6709\u4efb\u52a1\n\t\tfor(\u904d\u5386\u4e00\u4e0b\u8fd9\u4e9b\u4efb\u52a1)\n\t\t{\n\t\t\tf[i]=max(f[i],f[i+t[].\u6301\u7eed\u65f6\u95f4]);\n\t\t}\n```\n\n\n------------\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u662f\u4e00\u6ce2\u4ee3\u7801\u4e86\uff1a\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nstruct node//\u5229\u7528\u7ed3\u6784\u4f53\n{\n\tint begin;\n\tint end;\n}t[10010];\nbool cmp(node a,node b)//\u6309\u7167\u65f6\u95f4\u5f00\u59cb\u70b9\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n{\n\treturn a.begin>b.begin;\n}\nint sum[10010],f[10010],s=1;\n//sum\u4e3a\u5404\u4e2a\u65f6\u95f4\u70b9\u7684\u4efb\u52a1\u6570 s\u4e3a\u5f53\u524d\u6b63\u5728\u8003\u8651\u7b2c\u51e0\u4e2a\u4efb\u52a1\nint main()\n{\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%d%d\",&t[i].begin,&t[i].end);\n        //\u8fd9\u91cc\u7684end\u5e76\u4e0d\u662f\u7ed3\u675f\u65f6\u95f4 \u800c\u662f\u6301\u7eed\u65f6\u95f4\n\t\tsum[t[i].begin]++;\n        //\u5f53\u524d\u65f6\u95f4\u70b9\u7684\u4efb\u52a1\u6570+1\n\t}\n\tsort(t+1,t+k+1,cmp);//\u6392\u5e8f\n\tfor(int i=n;i>=1;i--)//\u4ece\u540e\u5f80\u524d\n\t{\n\t\tif(!sum[i])//\u5f53\u524d\u6ca1\u6709\u4efb\u52a1\n\t\t\tf[i]=f[i+1]+1;\n\t\telse//\u5f53\u524d\u6709\u4efb\u52a1\n\t\t{\n\t\t\tfor(int j=1;j<=sum[i];j++)//\u904d\u5386\u6240\u6709\u4efb\u52a1\n\t\t\t{\n\t\t\t\tf[i]=max(f[i],f[i+t[s].end]);//\u627e\u6700\u5927\u7684\n                s++;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\tprintf(\"%d\",f[1]);//\u8f93\u51fa\u65f6\u95f4\u70b9\u4e3a1\u65f6\u7684\u6700\u5927\u7a7a\u6687\u65f6\u95f4\n\treturn 0;\n}\n```\n",
        "postTime": 1565186791,
        "uid": 196949,
        "name": "renxiaoyu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u5c31\u662f\u4e2a\u6700\u77ed\uff08\u957f\uff09\u8def\u88f8\u9898\u3002\n\n\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a\u533a\u95f4\u7684\u4e8b\u60c5\u505a\u5b8c\u4e4b\u540e\u80af\u5b9a\u4f1a\u53bb\u505a\u540e\u9762\u7684\u7b2c\u4e00\u4e2a\u5f00\u59cb\uff08\u53ef\u80fd\u6709\u591a\u4e2a\uff09\u7684\u533a\u95f4\uff0c\u6240\u4ee5\u76f4\u63a5\u5c06\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u533a\u95f4\u5f53\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u6bcf\u4e2a\u70b9\u5411\u540e\u9762\u7684\u7b2c\u4e00\u4e2a\u533a\u95f4\u4ee3\u8868\u7684\u70b9\u8fde\u8fb9\u3002\n\n\u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6743\u503c\u5c31\u662f\u4e24\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\uff08\u6ce8\u610f\u533a\u95f4\u7684\u5f00\u95ed\u60c5\u51b5\uff09\uff0c\u7136\u540e\u679a\u4e3e\u5f00\u5934\u6700\u65e9\u7684\u7b2c\u4e00\u4e2a\u533a\u95f4\u6240\u4ee3\u8868\u7684\u6240\u6709\u70b9\u3002\n\n\u8dd1\u6700\u957f\u8def\uff08\u5c31\u662f\u50cf\u6700\u77ed\u8def\u7c7b\u4f3c\u7684\u65b9\u6cd5\u8dd1SPFA\uff09,\u6700\u540e\u8dd1\u51fa\u6765\u533a\u6700\u5927\u503c\u5c31\u662f\u7ed3\u679c\u4e86\u3002\n\n``` cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <vector>\n#include <queue>\n#define MAX_N 20007\n\nint N, k, sz;\nstd::vector<int> sta[MAX_N], stp[MAX_N], tim[MAX_N], now;\nint head[MAX_N], to[MAX_N * 1000], nxt[MAX_N * 1000], dis[MAX_N * 1000], cap;\nint bg[MAX_N], ed[MAX_N];\nint res, d[MAX_N], stad;\nbool inq[MAX_N];\n\nvoid add_edge (int u, int v, int w) {\n    //printf(\"%d %d %d\\n\", u, v, w);\n    nxt[++cap] = head[u];\n    head[u] = cap;\n    to[cap] = v;\n    dis[cap] = w;\n}\n\nvoid spfa (int s) {\n    memset(inq, false, sizeof(inq));\n    memset(d, -1, sizeof(d));\n    std::queue<int> q;\n    q.push(s);\n    inq[s] = true;\n    d[s] = 0;\n    while (!q.empty()) {\n    int x = q.front(); q.pop();\n    for (int i = head[x]; i; i = nxt[i]) {\n        if (d[to[i]] < d[x] + dis[i]) {\n        d[to[i]] = d[x] + dis[i];\n        res = std::max(res, d[to[i]]);\n        if (!inq[to[i]]) q.push(to[i]), inq[to[i]] = true;\n        }\n    }\n    inq[x] = false;\n    }\n}\n\nint main () {\n    scanf(\"%d%d\", &N, &k);\n    int s, l;\n    for (int i = 1;i <= k; ++i) {\n    scanf(\"%d%d\", &s, &l);\n    sta[s].push_back(++sz);\n    stp[s + l - 1].push_back(sz);\n    ed[sz] = s + l - 1;\n    bg[sz] = s;\n    }\n    for (int i = 1;i <= N; ++i) {\n    while (!now.empty() && !sta[i].empty()) {\n        for (int j = 0;j < sta[i].size(); ++j)\n        add_edge (now[now.size() - 1], sta[i][j], i - ed[now[now.size() - 1]] - 1);\n        now.pop_back();\n    }\n    for (int j = 0;j < sta[i].size(); ++j) tim[ed[sta[i][j]]].push_back(sta[i][j]);\n    while (!tim[i].empty()) now.push_back(tim[i][tim[i].size() - 1]), tim[i].pop_back();\n    }\n    while (!now.empty())\n    add_edge (now[now.size() - 1], sz + 1, N - ed[now[now.size() - 1]]), now.pop_back();\n    for (int i = 1;i < N; ++i) {\n    if (sta[i].empty()) continue;\n    stad = i - 1;\n    for (int j = 0;j < sta[i].size(); ++j)\n        spfa (sta[i][j]);\n    break;\n    }\n    printf(\"%d\\n\", res + stad);\n    return 0;\n}\n\n```",
        "postTime": 1526613491,
        "uid": 51361,
        "name": "hjsjhn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "#\u849f\u84bb\u7684\u9898\u89e3\n\n\u5176\u5b9e\u4e5f\u5c31\u662f\u4e00\u4e2a\u5206\u7ec4\u80cc\u5305\u800c\u5df2..\u4ee5\u4efb\u52a1\u5f00\u59cb\u7684\u65f6\u95f4\u5206\u7ec4\uff0c\u6240\u6709\u5f00\u59cb\u65f6\u95f4\u76f8\u540c\u7684\u4efb\u52a1\u5728\u540c\u4e00\u7ec4\u5185\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <array>\n#include <algorithm>\n#include <functional>\n#include <cstdlib>\n#include <map>\nusing namespace std;\n\nusing int_t = unsigned long long int;\n\nint main() {\n    int_t timeLimit, count;\n    cin >> timeLimit>>count;\n    //\u6570\u636e\u5b58\u5728map\u91cc map[\u4efb\u52a1\u5f00\u59cb\u65f6\u95f4]\n    map<int_t, vector < int_t>> tasks;\n    for (int i = 1; i <= count; i++) {\n        int_t start, cost;\n        cin >> start>>cost;\n        tasks[start].push_back(cost);\n    }\n    int_t dp[10001] = {0};\n    //\u5f00\u59cbdp \n    for (int_t time = timeLimit; time >= 1; time--) {\n        //\u5982\u679c\u5f53\u524d\u65f6\u95f4\u70b9\u6ca1\u6709\u4efb\u52a1\u5f00\u59cb\uff0c\u5219\u76f4\u63a5\u6539\u4e3a\u4e0a\u4e00\u70b9\u7684\u503c+1\n        if (tasks.find(time) == tasks.end()) {\n            dp[time] = dp[time + 1] + 1;\n            continue;\n        }\n        vector<int_t> &vec = tasks[time];\n        //\u9009\u62e9\u4efb\u52a1\u4e4b\u524d\u5148\u5bf9\u4efb\u52a1\u7684\u7ed3\u675f\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n        sort(vec.begin(), vec.end());\n        for (auto ptr = vec.begin(); ptr < vec.end(); ptr++) {\n            dp[time] = max(dp[time], dp[time + *ptr]);\n        }\n    }\n    cout << dp[1];\n}\n```",
        "postTime": 1506608372,
        "uid": 56891,
        "name": "officeyutong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "##\u5206\u4eab\u4e00\u4e2a\u4e8c\u5206\u67e5\u627e\u4f18\u5316\u7684\u601d\u8def\n\n\u6574\u4f53\u4e0a\u662f\u8fd9\u6837\u7684\uff1a\u4ece\u540e\u5f80\u524d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4efb\u52a1k\uff0c\u5bfb\u627e\u4e4b\u540e\u7684\u4efb\u52a1\u4e2d\u7b2c\u4e00\u4e2a\u5728\u8be5\u4efb\u52a1\u7ed3\u675f\u540e\u5f00\u59cb\u7684\u4efb\u52a1\uff1a\n\n- \u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u4efb\u52a1\uff0c\u90a3\u4e48\u4ece\u4efb\u52a1k\u5f00\u59cb\uff0c\u80fd\u591f\u4f11\u606f\u7684\u6700\u957f\u65f6\u95f4\u5c31\u662fn+1-end of k\uff1b\n\n- \u5982\u679c\u6709\uff0c\u8bbe\u627e\u5230\u7684\u4efb\u52a1\u8d77\u59cb\u65f6\u95f4\u4e3ap\uff0c\u90a3\u4e48\u4ece\u4efb\u52a1k\u5f00\u59cb\uff0c\u80fd\u591f\u4f11\u606f\u7684\u6700\u957f\u65f6\u95f4\u5c31\u662fp-end of k+max{ start of j=p | dp[j] }\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u4ecep\u5f00\u59cb\u7684\u4efb\u52a1\u4e2d\u7684\u6700\u4f18\u89e3\u52a0\u4e0a\u4e24\u4e2a\u4efb\u52a1\u4e2d\u95f4\u7684\u7a7a\u95f2\u65f6\u95f4\u3002\n\n\u5b9e\u73b0\uff1a\n\n\u5f00\u59cb\u8fd8\u662f\u5c06\u6240\u6709\u7684\u4efb\u52a1\u6309\u7167\u8d77\u59cb\u65f6\u95f4\u6392\u5e8f\uff0c\u4e4b\u540e\u4ece\u6700\u540e\u4e00\u4e2a\u4efb\u52a1\u5f00\u59cb\u5012\u63a8\uff0c\u4e0a\u8ff0\u7684\u5bfb\u627e\u8fc7\u7a0b\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\u4f18\u5316\uff0c\u7528maxi\u6570\u7ec4\u8bb0\u5f55\u6240\u6709\u8d77\u59cb\u65f6\u95f4\u70b9\u5904\u7684\u6700\u4f18\u89e3\uff0c\u6bcf\u6b21dp\u6c42\u503c\u4e4b\u540e\u4e5f\u66f4\u65b0maxi\u6570\u7ec4\uff0c\u8be6\u89c1\u4ee3\u7801\u3002\n\n\u603b\u590d\u6742\u5ea6O(nlogn)\uff0c\u6548\u7387\u8981\u7565\u4f4e\u4e8eO(n)\u7684\u5206\u7ec4\u80cc\u5305\u601d\u8def\uff0c\u7528\u65f612ms\uff0c\u7b97\u662f\u629b\u7816\u5f15\u7389\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define maxn 10001\nusing namespace std;\nstruct line\n{\n    int l,r;\n}a[maxn];\nbool cmp_sort(const line &a,const line &b);\nint dp[maxn],left[maxn],maxi[maxn],n,k,ans=0;\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=k;i++)\n    {\n        int t;\n        scanf(\"%d%d\",&a[i].l,&t);\n        a[i].r=a[i].l+t;\n    }\n    n++;\n    sort(a+1,a+k+1,cmp_sort);\n    for(int i=1;i<=k;i++)\n        left[i]=a[i].l;\n    memset(maxi,0,sizeof(maxi));\n    for(int i=k;i>=1;i--)\n    {\n        int pos=lower_bound(left+i+1,left+k+1,a[i].r)-left;\n        if(pos==k+1)\n            dp[i]=n-a[i].r;\n        else\n            dp[i]=a[pos].l-a[i].r+maxi[a[pos].l];\n        maxi[a[i].l]=max(maxi[a[i].l],dp[i]); \n    }\n    for(int i=1;a[i].l==left[1];i++)\n        ans=max(ans,dp[i]);\n    ans+=(left[1]-1);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\nbool cmp_sort(const line &a,const line &b)\n{\n    return a.l<b.l;\n}\n```",
        "postTime": 1505040272,
        "uid": 14664,
        "name": "greyishsong",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u611f\u89c9\u5927\u5bb6\u7684\u65b9\u6cd5\u90fd\u5f88\u70e6\u554a\u3002\u3002\n\n\n\u7528f[i]\u8868\u793a\u4ecei\u5230n\u4f4d\u7f6e\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\uff0cp[i]\u8868\u793a\u7b2ci\u4e2a\u4efb\u52a1\u7684\u5f00\u59cb\u65f6\u95f4,t[i]\u8868\u793a\u7b2ci\u4e2a\u4efb\u52a1\u7684\u7ed3\u675f\u65f6\u95f4\n\n\n\u4ecen\u5f00\u59cb\u52301\u679a\u4e3ei\uff0c\u5982\u679c\u5b58\u5728p[j]=i\uff0c\u90a3\u5c31\u8bf4\u660e\u6b64\u65f6\u7684\u6700\u4f18\u89e3\u5fc5\u987b\u9009\u62e9\u4e00\u4e2a\u4efb\u52a1\u6765\u505a\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u679a\u4e3e\u6240\u6709p[j]=i\u7684\u4efb\u52a1\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u627e\u5230\u6700\u5927\u503c\u7684f[i+t[j]]\u8f6c\u79fb\u5230f[i],\u5982\u679c\u4e0d\u5b58\u5728\u4efb\u4f55\u4e00\u4e2a\u4efb\u52a1p[j]=i\uff0c\u90a3\u4e48\u8bf4\u660e\u6b64\u65f6\u7684\u6700\u4f18\u89e3\u53ef\u4ee5\u5077\u61d2\uff0c\u5c31\u76f4\u63a5\u7528f[i+1]+1\u4f5c\u4e3af[i]\u7684\u503c\n\n\n\\*\u4f18\u5316\n\n\u6211\u4eec\u53d1\u73b0\u8f93\u5165\u6570\u636e\u662f\u6839\u636e\u4efb\u52a1\u7684\u5f00\u59cb\u65f6\u95f4\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u6bcf\u6b21\u4f7f\u7528\u7684j\u80af\u5b9a\u4e0d\u4f1a\u5927\u4e8e\u4e0a\u4e00\u6b21\u7684j\uff0c\u4ee4j\u7b49\u4e8e\u6700\u540e\u4e00\u4e2a\u4efb\u52a1\u6bcf\u6b21\u5411\u524d\u9012\u51cf\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u975e\u5e38\u597d\n\n\nPASCAL\u4ee3\u7801\n\n\n```delphi\n\nvar n,m,i,j:longint;\n    p,t,f:array[0..10001] of longint;\n\nfunction max(a,b:longint):longint;\n\nbegin\n\n        if a>b then exit(a)\n\n               else exit(b);\n\nend;\n\nbegin\n\n        readln(n,m);\n\n        for i:=1 to m do readln(p[i],t[i]);\n\n        j:=m;\n\n        for i:=n downto 1 do begin\n\n        if p[j]<>i then f[i]:=f[i+1]+1\n\n                   else\n\n                   while p[j]=i do begin\n\n                        f[i]:=max(f[i+t[j]],f[i]);\n\n                        j:=j-1;\n\n                        end;\n\n                   end;\n\n        writeln(f[1]);\n\nend.\n\n```",
        "postTime": 1446724701,
        "uid": 10356,
        "name": "\u5929\u72d7\u7684\u624b\u5e16",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u6309\u7167\u65f6\u95f4\u8fdb\u884c\u51b3\u7b56\uff0c\u5982\u679c\u5f53\u524d\u65f6\u95f4\u6ca1\u6709\u8981\u5f00\u59cb\u7684\u5de5\u4f5c\uff0c\u5c31\u8fdb\u5165\u4e0b\u4e00\u5206\u949f\uff0c\u540c\u65f6\u7a7a\u95f2\u65f6\u95f4\u52a01\uff0c\u5426\u5219\u76f4\u63a5\u8df3\u8fc7\u5de5\u4f5c\u7684\u90a3\u6bb5\u65f6\u95f4\u8fdb\u5165\u5de5\u4f5c\u7ed3\u675f\u65f6\u95f4\u7684\u4e0b\u4e00\u5206\u949f\u3002\n\n\u56e0\u4e3a\u6570\u636e\u662f\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u597d\u5e8f\u4e86\u7684\uff0c\u6211\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2amap\u628a\u5f00\u59cb\u65f6\u95f4t\u548c\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u5f00\u59cb\u65f6\u95f4\u4e3at\u7684\u5de5\u4f5c\u7684\u4e0b\u6807\u5bf9\u5e94\u8d77\u6765\uff0c\u8fd9\u6837\u53ea\u8981\u5728\u8fd9\u4e2amap\u4e2d\u67e5\u627e\u5c31\u53ef\u4ee5\u786e\u5b9a\u5f53\u524d\u662f\u5426\u6709\u8981\u5f00\u59cb\u7684\u5de5\u4f5c\u4ee5\u53ca\u8fd9\u4e9b\u5de5\u4f5c\u5b58\u653e\u5728\u6570\u7ec4\u4e2d\u7684\u54ea\u4e2a\u4f4d\u7f6e\u3002\n\n```cpp\n\n#include<iostream>\n#include<algorithm>\n#include<map>\n#include<cstring>\nusing namespace std;\nstruct job\n{\n    int start,last;\n};\njob a[10001];\nmap<int,int> m;\nint n,k,b[10001];\nint f(int t)\n{\n    if (t>n) return 0;\n    else if (b[t]!=-1) return b[t];\n    else if (m.find(t)==m.end()) b[t]=f(t+1)+1;\n    else\n    {\n        int pos=(*(m.find(t))).second,ma=0;\n        while (a[pos].start==t)\n        {\n            ma=max(ma,f(t+a[pos].last));\n            pos++;\n        }\n        b[t]=ma;\n    }\n    return b[t];\n}\nint main()\n{\n    cin>>n>>k;\n    for (int i=1;i<=k;i++)\n    {\n        cin>>a[i].start>>a[i].last;\n        if (m.find(a[i].start)==m.end()) m.insert(pair<int,int>(a[i].start,i));\n    }\n    memset(b,255,sizeof(b));\n    cout<<f(1);\n    return 0;\n}\n\n```",
        "postTime": 1427018497,
        "uid": 6210,
        "name": "sqc1999",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u65b0\u624b\u4e0a\u8def\uff0c\u771f\u7684\u662f\u770b\u4e0d\u61c2\u5927\u4f6c\u4eec\u600e\u4e48\u627e\u51fa\u9006\u63a8\u8f6c\u79fb\u7684\u3002\u52c9\u5f3a\u7406\u89e3\u5c31\u662f\uff0c\u5982\u679c\u52a0\u5165\u8be5\u4efb\u52a1\uff0c\u5219\u6e05\u7a7a\u6b64\u4efb\u52a1\u81f3\u4efb\u52a1\u7ed3\u675f\u65f6\u95f4\u5185\u7d2f\u8ba1\u7684\u6478\u9c7c\u65f6\u95f4\uff0c\u53cd\u4e4b\u987a\u63a8\uff0c\u6ca1\u6709\u6478\u9c7c\u65f6\u95f4\u7684\u8bb0\u5f55\uff0c\u65e0\u6cd5\u8f6c\u79fb\u3002\n\n _\u5219\u8be5\u4efb\u52a1\u5c06\u5728\u7b2cP+T-1\u5206\u949f\u7ed3\u675f\u3002_ \u8fd9\u53e5\u8bdd\u662f\u771f\u7684\u5751\u5230\u6211\u4e86\u3002\n \n### \u6838\u5fc3\n\tans[i] = Math.max(ans[i], ans[T[t]]);\n    \n\n------------\n### \u4ee3\u7801\n\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tstatic int N,K;\n\tstatic int[] P = new int[10001];\n\tstatic int[] T = new int[10001];\n\tstatic int[] ans = new int[10010];\n\t\n\tstatic void in() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer token = new StringTokenizer(in.readLine());\n\t\tN = Integer.valueOf(token.nextToken());\n\t\tK = Integer.valueOf(token.nextToken());\n\t\tfor(int i=1; i<=K; i++){\n\t\t\ttoken = new StringTokenizer(in.readLine());\n\t\t\tP[i] = Integer.valueOf(token.nextToken());\n\t\t\tT[i] = Integer.valueOf(token.nextToken()) + P[i];\n\t\t}\t\n\t}\n\tpublic static void main(String[] args) {\n\t\ttry{\n\t\t\tin();\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}\n     \t\t// \u4ee5\u4e0a\u5747\u4e3a\u65e5\u5e38\uff0c\u6b63\u6587\u5728\u4e0b\n\t\tint t=K; // \u5229\u7528\u8fd9\u4e2at\uff0c\u5c31\u4e0d\u9700\u8981\u5f00\u6570\u7ec4\u8bb0\u5f55\u8be5\u65f6\u95f4\u70b9\u662f\u5426\u6709\u4efb\u52a1\u4e86\uff0c\u4e0d\u8fc7\u591a\u4e86\u5757for\n\t\tfor(int i=N; i>=1;i--){\n\t\t\tfor(;P[t]!=i;i--)\n\t\t\t\tans[i] = ans[i+1]+1;\n\t\t\tif(i<1) break;\n\t\t\tfor(;P[t]==i;t--)\n\t\t\t\tans[i] = Math.max(ans[i], ans[T[t]]);\n\t\t}\n\t\tSystem.out.print(ans[1]);\n\t}\n}\n```\n\u58ee\u54c9\u6211\u5927JAVA\uff01~~\u7279\u7801\uff0c\u8f93\u5165\u5c31\u5360\u4e86\u5927\u534a\u4ee3\u7801\uff0cJAVA\u5c31\u662f\u58ee\uff01~~",
        "postTime": 1573393581,
        "uid": 276543,
        "name": "Tgo_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5e94\u5b66\u957f\u8981\u6c42\u5199\u7684DP\uff0c\u4e0d\u5bb9\u6613\u554a\u3002\n\n\u9996\u5148\u5206\u6790\u4e00\u4e0b\u9898\u76ee\uff1a\u5c3c\u514b\u5de5\u4f5c\u4ece1\u5230n\u3002\u82e5\u4ed6\u7a7a\u95f2\uff0c\u5219\u63a5\u4e0b\u6765\u7684\u7b2c\u4e00\u6ce2\u4efb\u52a1\u4ed6\u4e00\u5b9a\u5f97\u63a5\u5176\u4e2d\u4e4b\u4e00\u3002\u800c\u5728\u4ed6\u5de5\u4f5c\u671f\u95f4\uff0c\u5373p\u5230p+t-1\u7684\u65f6\u95f4\u5185\u5f00\u59cb\u7684\u4efb\u52a1\u4ed6\u4e00\u6982\u4e0d\u8003\u8651\uff0c\u4ed6\u7684\u7a7a\u95f2\u65f6\u95f4\u5c31\u662fnext_p-p(\u5dee\u4e0d\u591a\u7406\u89e3\u4e0b\u5c31\u597d\uff0c\u4e0d\u662f\u91cd\u70b9)\u3002\u73b0\u5728\u6c42\u5c3c\u514b\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\u3002\n\n\u6df1\u641c\u6a21\u62df\u6837\u4f8b\uff1a\n\n                0\n       (0)              (0)\n      1\u20142               1\u20146\n       (1)          (1)      (1)\n      4\u201414         8\u201412      8\u20148 \n       (1)          (3)        (2)\n                             11\u201415\n                               (0)\n                               \n\u62ec\u53f7\u5185\u7684\u662f\u8fd9\u671f\u95f4\u7684\u7a7a\u95f2\u65f6\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7b2c\u4e8c\u5206\u652f\u9009\u62e98\u523012\u662f\u4f18\u4e8e8\u52308\u7684\uff0c\u5373\u5b83\u662f\u7531\u5b50\u8282\u70b9\u7684\u503c\u51b3\u5b9a\u7684\uff0c\u53ea\u8981\u6211\u4eec\u6c42\u5f97\u5b83\u7684\u53f6\u8282\u70b9\uff0c\u7136\u540e\u9009\u62e9\u6700\u4f18\u7684\u90a3\u4e00\u6761\u5206\u652f\u5c31\u884c\u3002\u90a3\u4e48f[i],i\u8868\u793a\u5f00\u59cb\u65f6\u95f4\uff0cf[i]\u5c31\u662f\u7b2ci\u5206\u949f\u5f00\u59cb\u7684\u4efb\u52a1\u540e\u9762\u7684\u6700\u4f18\u89e3\u3002\u89e3\u91ca\u7684\u4e0d\u597d\uff0c\u770b\u4ee3\u7801\u6ce8\u89e3\u5427\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define gc ch=getchar()\n#define max(a,b) a>b?a:b\nusing namespace std;\ntemplate <class T>void read(T &s){\n\ts=0;T f=1;char gc;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;gc;}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';gc;}\n\ts*=f;\t\n}\ntemplate <class T>void put(T s){\n\tif(s<0) putchar('-'),s=-s;\n\tif(s>9) put(s/10);\n\tputchar(s%10+'0');\n}\nstruct node{\n\tint f,l;\n}a[10005]; \nint n,k,f[10005],v[10005];\nint main(){\n\tread(n),read(k);\n\tfor(int i=k;i;--i)\n\t\tread(a[i].f),read(a[i].l),a[i].l+=a[i].f-1,v[a[i].f]=1;\n\t//\u4efb\u52a1\uff0cf\u4e3a\u5f00\u59cb\u65f6\u95f4\uff0c\u6c42\u5f97l\u4e3a\u7ed3\u675f\u65f6\u95f4\uff1b\u6ce8\u610f\uff0c\u8fd9\u91cc\u662f\u5012\u7740\u5b58\u7684 \n\tfor(int i=1;i<=k;++i){\n\t\t//\u5148\u6c42\u540e\u9762\u7684\u4efb\u52a1 \n\t\tfor(int j=a[i].l+1;j<=n;++j){\n\t\t//\tf[i]\u7684i\u8868\u793a\u7684\u662f\u5f00\u59cb\u65f6\u95f4\uff0c\u5b83\u7684\u6700\u4f18\u89e3\u4e3a\u5b83\u7ed3\u675f\u540e\u7b2c\u4e00 \n\t\t//\t\u4e2a\u4efb\u52a1\u7684\u6700\u4f18\u89e3\u52a0\u4e0a\u5b83\u4eec\u4e24\u4e2a\u4e4b\u95f4\u7684\u7a7a\u6687\n\t\t\tif(j==n&&!v[j]) \n\t\t\t\tf[a[i].f]=max(f[a[i].f],j-a[i].l+f[j]);\n\t\t\telse \n\t\t\t\tf[a[i].f]=max(f[a[i].f],j-a[i].l-1+f[j]);\n\t\t\tif(v[j]) break;\n\t\t\t//f[j]\u5c31\u662f\u540e\u9762\u6240\u6709\u7684\u6700\u4f18\u89e3\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u8df3\u51fa\u5faa\u73af\u5373\u53ef \n\t\t}\n\t}\n\tput(f[a[k].f]+a[k].f-1);\n\t//\u7b54\u6848\u8fd8\u8981\u52a0\u4e0a\u4e00\u5f00\u59cb\u7684\u7a7a\u6687\u65f6\u95f4 \n}\n```\n",
        "postTime": 1573212526,
        "uid": 209944,
        "name": "\u541b\u7398",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u9898\u76ee\u63cf\u8ff0\n\u5c3c\u514b\u6bcf\u5929\u4e0a\u73ed\u4e4b\u524d\u90fd\u8fde\u63a5\u4e0a\u82f1\u7279\u7f51\uff0c\u63a5\u6536\u4ed6\u7684\u4e0a\u53f8\u53d1\u6765\u7684\u90ae\u4ef6\uff0c\u8fd9\u4e9b\u90ae\u4ef6\u5305\u542b\u4e86\u5c3c\u514b\u4e3b\u7ba1\u7684\u90e8\u95e8\u5f53\u5929\u8981\u5b8c\u6210\u7684\u5168\u90e8\u4efb\u52a1\uff0c\u6bcf\u4e2a\u4efb\u52a1\u7531\u4e00\u4e2a\u5f00\u59cb\u65f6\u523b\u4e0e\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\u6784\u6210\u3002\n\n\u5c3c\u514b\u7684\u4e00\u4e2a\u5de5\u4f5c\u65e5\u4e3aN\u5206\u949f\uff0c\u4ece\u7b2c\u4e00\u5206\u949f\u5f00\u59cb\u5230\u7b2cN\u5206\u949f\u7ed3\u675f\u3002\u5f53\u5c3c\u514b\u5230\u8fbe\u5355\u4f4d\u540e\u4ed6\u5c31\u5f00\u59cb\u5e72\u6d3b\u3002\u5982\u679c\u5728\u540c\u4e00\u65f6\u523b\u6709\u591a\u4e2a\u4efb\u52a1\u9700\u8981\u5b8c\u6210\uff0c\u5c3c\u514b\u53ef\u4ee5\u4efb\u9009\u5176\u4e2d\u7684\u4e00\u4e2a\u6765\u505a\uff0c\u800c\u5176\u4f59\u7684\u5219\u7531\u4ed6\u7684\u540c\u4e8b\u5b8c\u6210\uff0c\u53cd\u4e4b\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\uff0c\u5219\u8be5\u4efb\u52a1\u5fc5\u9700\u7531\u5c3c\u514b\u53bb\u5b8c\u6210\uff0c\u5047\u5982\u67d0\u4e9b\u4efb\u52a1\u5f00\u59cb\u65f6\u523b\u5c3c\u514b\u6b63\u5728\u5de5\u4f5c\uff0c\u5219\u8fd9\u4e9b\u4efb\u52a1\u4e5f\u7531\u5c3c\u514b\u7684\u540c\u4e8b\u5b8c\u6210\u3002\u5982\u679c\u67d0\u4efb\u52a1\u4e8e\u7b2cP\u5206\u949f\u5f00\u59cb\uff0c\u6301\u7eed\u65f6\u95f4\u4e3aT\u5206\u949f\uff0c\u5219\u8be5\u4efb\u52a1\u5c06\u5728\u7b2cP+T-1\u5206\u949f\u7ed3\u675f\u3002\n\n\u5199\u4e00\u4e2a\u7a0b\u5e8f\u8ba1\u7b97\u5c3c\u514b\u5e94\u8be5\u5982\u4f55\u9009\u53d6\u4efb\u52a1\uff0c\u624d\u80fd\u83b7\u5f97\u6700\u5927\u7684\u7a7a\u6687\u65f6\u95f4\u3002\n\n\u8f93\u5165\u683c\u5f0f\n\u8f93\u5165\u6570\u636e\u7b2c\u4e00\u884c\u542b\u4e24\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570N\u548cK(1\u2264N\u226410000\uff0c1\u2264K\u226410000)\uff0cN\u8868\u793a\u5c3c\u514b\u7684\u5de5\u4f5c\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u5206\u949f\uff0cK\u8868\u793a\u4efb\u52a1\u603b\u6570\u3002\n\n\u63a5\u4e0b\u6765\u5171\u6709K\u884c\uff0c\u6bcf\u4e00\u884c\u6709\u4e24\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570P\u548cT\uff0c\u8868\u793a\u8be5\u4efb\u52a1\u4ece\u7b2cP\u5206\u949f\u5f00\u59cb\uff0c\u6301\u7eed\u65f6\u95f4\u4e3aT\u5206\u949f\uff0c\u5176\u4e2d1\u2264P\u2264N\uff0c1\u2264P+T-1\u2264N\u3002\n\n\u8f93\u51fa\u683c\u5f0f\n\u8f93\u51fa\u6587\u4ef6\u4ec5\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5c3c\u514b\u53ef\u80fd\u83b7\u5f97\u7684\u6700\u5927\u7a7a\u6687\u65f6\u95f4\u3002\n\n\u5176\u5b9e\u4e5f\u6ca1\u5565\uff0c\u548c\u697c\u4e0a\u5927\u4f6c\u8bf4\u7684\u4e00\u6837\uff0c\u4e0d\u8fc7\u6211\u4ee3\u7801\u91cc\u7684\nj\u6bd4\u8f83\u7279\u6b8a\uff0c\u5c31\u4ee3\u8868\u5728k\u4e2a\u4efb\u52a1\u4e2d\uff0c\u54ea\u4e2a\u4efb\u52a1\u662f\u6211\u4eec\u5728i\u7684\u65f6\u95f4\u53ef\u4ee5\u9009\u62e9\u7684\u3002\n\u7136\u540e\u8f93\u51faf[1](\u610f\u601d\u662f\u4ece1\u5230n\u7684\u65f6\u95f4\u6700\u4f18\u503c\uff09\uff1b\n\u4ee5\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<bits/stdc++.h>\n#define ll register int\n#define maxs 0x3f3f3f3f\nusing namespace std;\nstruct node{\n\tint a,b;\n}x[10000001];\nbool cmp(node a,node b){\n\treturn a.a>b.a;\n}\nint f[1000001]={0};\nint sm[1000001]={0};\nint main(){\n\t//freopen(\".in\",\"r\",stdin);freopen(\".out\",\"w\",stdout);\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tfor(ll i=1;i<=k;i++)\n\t\tscanf(\"%d%d\",&x[i].a,&x[i].b),sm[x[i].a]++;\n\tsort(x+1,x+1+k,cmp);\n\tfor(ll i=n;i>=1;i--){\n\t\tif(sm[i]==0)\n\t\t\tf[i]=f[i+1]+1;\n\t\telse\n\t\t\tfor(ll j=1;j<=k;j++)\n\t\t\t\tif(x[j].a==i)\n\t\t\t\t\tf[i]=max(f[i],f[i+x[j].b]);\n\t}\n\tprintf(\"%d\",f[1]);\n}\n```\n\u5927\u4f6c\u518d\u89c1~",
        "postTime": 1572275304,
        "uid": 148552,
        "name": "\u6211\u5f88\u4f4e\u8c03",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u8d21\u732e\u4e00\u53d1\u8bb0\u641c+\u6807\u51c6\u5e93multimap\u7684\u9898\u89e3\uff0c\u53ef\u4ee5\u628a\u627e\u4efb\u52a1\u505a\u7684\u5f88\u7b80\u6d01\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nint t, n;\nmultimap<int, int> mmp;\nint f[10010];\nint dfs(int k) //k\u662f\u65f6\u95f4,dfs\u627e\u51fa\u6700\u77ed\u5de5\u4f5c\u65f6\u95f4\n{\n    if (f[k])\n        return f[k];\n    if (k > t)\n        return 0;\n    int ans = inf;\n    for (auto it = mmp.lower_bound(k); it != mmp.upper_bound(k); ++it)\n        ans = min(dfs(it->second) + it->second - it->first, ans);\n    if (ans == inf) //\u6ca1\u6709\u5de5\u4f5c\n        ans = dfs(k + 1);\n    return f[k] = ans;\n}\nint main()\n{\n    cin >> t >> n;\n    for (int i = 1; i <= n; ++i)\n    {\n        int P, T;\n        cin >> P >> T;\n        mmp.insert({P, P + T}); //second\u65f6\u523b\u5de5\u4f5c\u5df2\u7ecf\u7ed3\u675f\n    }\n    cout << t - dfs(1) << endl;\n    return 0;\n}\n```\n\u6807\u51c6\u5e93multimap\u53ef\u4ee5\u50a8\u5b58\u4e00\u5bf9\u591a\u7684\u952e\u503c\u5bf9\uff0c\u9002\u5408\u8fd9\u91cc\u7684\u4e00\u4e2a\u5f00\u59cb\u65f6\u95f4\u53ef\u80fd\u5bf9\u5e94\u4e0d\u540c\u4efb\u52a1\u3002\u53ef\u4ee5\u5229\u7528\u4e0a\u8ff0\u65b9\u5f0f\u6765\u904d\u5386\u4e00\u4e2a\u952e\u5bf9\u5e94\u7684\u503c\u3002\ndfs(k)\u7684\u610f\u4e49\u662f\uff0c\u4fdd\u8bc1\u4e86k\u65f6\u523b\u5728\u505a\u9009\u62e9\u4e4b\u524d\u662f\u81ea\u7531\u65f6\u523b\uff0ck\u65f6\u523b\u53ef\u80fd\u6709\u51e0\u4e2a\u4efb\u52a1\u53ef\u4ee5\u9009\uff0c\u4e5f\u53ef\u80fd\u6ca1\u6709\u4efb\u52a1\uff0c\u5206\u522b\u5904\u7406\u4e4b\u3002return\u65f6\u505a\u4e00\u4e0b\u8bb0\u5fc6\u5316\u5373\u53ef\u3002\n",
        "postTime": 1514095765,
        "uid": 68618,
        "name": "MashPlant",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "f[i]\u8868\u793a\u7531\u65f6\u95f4\u70b9i\u5230\u65f6\u95f4n\u4e4b\u95f4\u6700\u5927\u7a7a\u6687\u65f6\u95f4\n\n\u7ed3\u6784\u4f53\u7531\u5f00\u59cb\u65f6\u95f4\u4ece\u540e\u5f80\u524d\u8fdb\u884c\u6392\u5e8f\n\n\u82e5\u65f6\u95f4\u70b9i\u5904\u6ca1\u6709\u4efb\u52a1,f[i]=f[i+1]+1\n\n\u5982\u679c\u6709\u4efb\u52a1,f[i]=max(f[i],f[i+\u7b2ck\u4e2a\u4efb\u52a1\u7684\u6301\u7eed\u65f6\u95f4])\n\n\u65f6\u95f4\u70b9\u4e3a\u4ece\u540e\u5f80\u524d\u5012\u9000\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint now;\nstruct miss\n{\n    int st;//\u5f00\u59cb\u65f6\u95f4\n    int la;//\u6301\u7eed\u65f6\u95f4\n};\nbool cmp(miss a,miss b)\n{\n    return a.st>b.st;    //\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u7531\u540e\u5411\u524d\u6392\u5e8f\n}\nstruct miss m[10001];\nint mis[10001];//mis[i]\u8868\u793a\u5728\u65f6\u95f4i\u65f6\u5f00\u59cb\u7684\u4efb\u52a1\u6570\nint f[10001];\nint n,k;\nint main()\n{\n    cin>>n>>k;\n    for(int i=1;i<=k;i++)\n    {\n        cin>>m[i].st>>m[i].la;\n        mis[m[i].st]++;//\u7edf\u8ba1\u4efb\u52a1\u6570\n    }\n    sort(m+1,m+1+k,cmp);\n    for(int i=n,now=1;i>=1;i--)\n    {\n        if(!mis[i])//\u82e5\u8be5\u70b9\u6ca1\u6709\u4efb\u52a1\u53ef\u505a\n            f[i]=f[i+1]+1;\n        else\n        {\n            for(int k=1;k<=mis[i];k++,now++)//now\u7528\u6765\u8ba1\u91cf\u7b2c\u51e0\u4e2a\u4efb\u52a1\n            {\n                f[i]=max(f[i],f[i+m[now].la]);\n            }\n        }\n    }\n    cout<<f[1];\n    //system(\"pause\");\n    return 0;    \n}\n```",
        "postTime": 1505478822,
        "uid": 50744,
        "name": "ArgoC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u7ebf\u6027\u52a8\u6001\u89c4\u5212\uff0c\u4ee4f[i]\u4e3a\u7b2ci~T\u7684\u5de5\u4f5c\u65f6\u95f4\u4e2d\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5305\u542b\u5f00\u59cb\u3001\u6301\u7eed\u65f6\u95f4\u7684\u7ed3\u6784\u4f53\u50a8\u5b58\u6bcf\u4e2a\u4efb\u52a1\n\n\u4f46\u4efb\u52a1\u7ed3\u675f\u540e\u7684\u60c5\u51b5\u4e4b\u524d\u6ca1\u8f6c\u79fb\uff0c\u56e0\u6b64\u8981\u5012\u7740\u8f6c\u79fb\u624d\u80fd\u63a8\u51fa\u6240\u6709\u60c5\u51b5\n\n\u5373\u65f6\u95f4\u4eceT~1\n\n\u56e0\u4e3a\u8981\u5012\u63a8\uff0c\u6240\u4ee5\u8981\u5c06\u4efb\u52a1\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4f7ff[i+\u8fd9\u4e2a\u4efb\u52a1\u6301\u7eed\u65f6\u95f4]\u6700\u5927\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nstruct task {\n    int start;//\u4efb\u52a1\u5f00\u59cb\u65f6\u95f4 \n    int last;//\u4efb\u52a1\u6301\u7eed\u65f6\u95f4 \n}t[10001];\nint sch[10001]={0},f[10001];//sch[i]->\u65f6\u95f4\u4e3ai\u65f6\u4efb\u52a1\u6570\u91cf,f[i]->\u7b2ci\u4e2a\u5de5\u4f5c\u65f6\u95f4\u5f00\u59cb\u5230\u6700\u540e\u4e00\u4e2a\u5de5\u4f5c\u65f6\u95f4\u6700\u5927\u7a7a\u95f2\u65f6\u95f4 \n//\u6309\u5f00\u59cb\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f \nbool cmp(task a,task b) {\n    return a.start>b.start;\n}\nint main() {\n    int T,n;//T\u8868\u793a\u5de5\u4f5c\u65f6\u95f4,n\u8868\u793a\u4efb\u52a1\u6570\u91cf\n    cin >> T >> n;\n    for(int i=1;i<=n;i++) {\n        cin >> t[i].start >> t[i].last;\n        sch[t[i].start]++;\n    }\n    sort(t+1,t+n+1,cmp);\n    int now;//\u4ece\u5f00\u59cb\u5230\u73b0\u5728\u6240\u7ecf\u5386\u7684\u4efb\u52a1\u7f16\u53f7 \n    for(int i=T,now=1;i>=1;i--) {\n        if(!sch[i]) f[i]=f[i+1]+1;//\u6ca1\u6709\u4efb\u52a1\u5c31\u5c06\u4e0a\u4e00\u4e2a\u4efb\u52a1\u5f00\u59cb\u65f6\u95f4\u52a01\n        else {\n            //\u4ecesch[i]\u4e2a\u4efb\u52a1\u4e2d\u627e\u4e00\u4e2a\u4efb\u52a1\uff0c\u4f7ff[i+\u8fd9\u4e2a\u4efb\u52a1\u6301\u7eed\u65f6\u95f4]\u6700\u5927 \n            for(int k=1;k<=sch[i];k++,now++) {\n                f[i]=max(f[i],f[i+t[now].last]);\n            }\n        } \n    }\n    cout << f[1] << endl;\n    return 0;\n}\n\n```",
        "postTime": 1505470188,
        "uid": 50747,
        "name": "OsvaldoAsensioLopez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "~~\u505a\u4e86\u4e00\u5929\u7ec8\u4e8eA\u4e86, \u6012\u6c34\u4e00\u6ce2\u9898\u89e3~~\n\n\n- \u628a\u4efb\u52a1\u662f\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f, \u65b9\u4fbf\u8ba1\u7b97\u548c\u8bc1\u660e.\n\n- \u9898\u76ee\u544a\u8bc9\u6211\u4eec\u53ea\u80fd\u5728**\u540c\u4e00\u5f00\u59cb\u65f6\u95f4**\u7684\u4efb\u52a1\u4e2d\u9009\u62e9, \u6240\u4ee5\u5f53\u6211\u4eec\u9009\u62e9\u7684\u65f6\u5019, \u6211\u4eec\u5fc5\u987b\u8003\u5bdf**\u6240\u6709**\u4ee5\u8fd9\u4e00\u65f6\u95f4\u5f00\u59cb\u7684\u4efb\u52a1~~(\u5e9f\u8bdd)~~.\n\n- \u78b0\u5230\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u505a(\u5728\u5f53\u524d\u4efb\u52a1\u7ed3\u675f\u540e\u5f00\u59cb)\u7684\u4efb\u52a1\u5c31\u5fc5\u987b\u505a\u4e86, \u6240\u4ee5\u53ef\u4ee5\u53ea\u5728\u4e00\u7cfb\u5217\u4ee5\u540c\u4e00\u65f6\u95f4\u5f00\u59cb\u7684\u4efb\u52a1\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b58\u50a8dp\u7684\u4fe1\u606f, \u56e0\u4e3a\u5728\u4e4b\u540e\u7684\u641c\u7d22\u4e2d\u662f\u65e0\u6cd5\u5230\u8fbe\u540e\u9762\u8fd9\u4e2a\u65f6\u95f4\u7684\u4efb\u52a1\u7684.(\u5f53\u7136\u5168\u5b58\u4e0a\u4e5f\u53ef\u4ee5A, \u4e0d\u8fc7\u8fd9\u6837\u4ee3\u7801\u77ed\u4e00\u70b9)\n\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <limits>\n\nstruct Job\n{\n    int p;  //!< \u4efb\u52a1\u7684\u5f00\u59cb\u65f6\u95f4\n    int t;  //!< \u4efb\u52a1\u7684\u6301\u7eed\u65f6\u95f4\n    struct comp\n    {\n        //! @bug \u8fd9\u4e2a\u6bd4\u8f83\u51fd\u6570\u5176\u5b9e\u4e0d\u7b26\u5408\u6807\u51c6\u7684\u89c4\u5b9a, \u4f46\u662f\u80fd\u7528\u5c31\u884c\n        bool operator()(const Job& a, const Job& b)\n        {\n            return a.p<b.p;\n        }\n    };\n};\n\nint n, k;\nJob work[10010];\nint dp[10010];\n\n//! @return \u4ece\u4efb\u52a1src\u6216\u4e0e\u5b83\u5f00\u59cb\u65f6\u95f4\u76f8\u540c\u7684\u4efb\u4f55\u4efb\u52a1\u5f00\u59cb, \u80fd\u83b7\u5f97\u7684\u6700\u5c0f\u5de5\u4f5c\u65f6\u95f4\nint cal(int src)\n{\n    // \u65e0\u8111\u67e5\u8868\n    if(dp[src] != std::numeric_limits<int>::max())\n        return dp[src];\n    // \u8fb9\u754c\u60c5\u51b5, \u6b64\u65f6\u5de5\u4f5c\u65f6\u95f4\u603b\u4e3a0\n    if(src == n)\n        return 0;\n    // \u7d22\u5f15, \u53ef\u4ee5\u4e0d\u7528, \u61d2\u5f97\u5220\u4e86\n    int i = src;\n    do\n    {\n        int next = i + 1;\n        // \u627e\u51fa\u5f00\u59cb\u65f6\u95f4\u5927\u4e8e\u5f53\u524d\u4efb\u52a1\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\n        while(work[next].p < work[i].p + work[i].t)\n            ++next;\n        // \u65e0\u8111\u586b\u8868\n        dp[src] = std::min(dp[src], cal(next) + work[i].t);\n        // \u524d\u8fdb\u5230\u4e0b\u4e00\u4e2a\u4efb\u52a1\n        ++i;\n    } while(work[i].p == work[src].p);  // \u8003\u5bdf\u6240\u6709\u5f00\u59cb\u65f6\u95f4\u4e0e\u5f53\u524d\u4efb\u52a1\u76f8\u540c\u7684\u4efb\u52a1\n    return dp[src];\n}\n\nint main(void)\n{\n    std::scanf(\"%d %d\", &n, &k);\n    for(int i = 0; i < k; ++i)\n    {\n        std::scanf(\"%d %d\", &work[i].p, &work[i].t);\n        dp[i] = std::numeric_limits<int>::max();\n    }\n    // \u4eba\u4e3a\u6dfb\u52a0\u4e00\u4e2a\u5f00\u59cb\u65f6\u95f4\u5728\u6240\u6709\u4efb\u52a1\u7ed3\u675f\u65f6\u95f4\u4e4b\u540e\u7684\u4efb\u52a1, \u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u641c\u7d22\u5230\u5b83\u7684\u65f6\u5019\u505c\u6b62\u641c\u7d22\u7ee7\u7eed\u4efb\u52a1\n    work[k] = n+1;\n    std::sort(work, work+k, Job::comp());\n\n    // \u6211\u4eec\u8ba1\u7b97\u51fa\u6765\u7684\u662f\u6700\u5c0f\u5de5\u4f5c\u65f6\u95f4, \u6240\u4ee5\u8981\u7528\u603b\u65f6\u95f4\u51cf\u53bb\u5b83\u5f97\u5230\u6700\u5927\u4f11\u606f\u65f6\u95f4\n    std::printf(\"%d\\n\", n - cal(0));\n\n    return 0;\n}\n```\n",
        "postTime": 1504355839,
        "uid": 42230,
        "name": "91khr",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u5c3c\u514b\u7684\u4efb\u52a1\uff0c\u8c8c\u4f3c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5206\u7ec4\u80cc\u5305\u3002\u6bcf\u4e2a\u65f6\u95f4\u70b9\u5c31\u662f\u4e00\u4e2a\u7ec4\uff0c\u5982\u679c\u8fd9\u4e2a\u7ec4\u91cc\u6709\u4e1c\u897f\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u5904\u7406\uff0c\u6bcf\u4e2a\u7ec4\u53ea\u80fd\u9009\u4e00\u4e2a\uff0c\n\n\u8fd9\u91cc\u4e5f\u662f\u4e00\u6837\uff0c\u540c\u4e00\u4e2a\u65f6\u95f4\u70b9\u5f00\u59cb\u7684\u4efb\u52a1\uff0c\u53ea\u80fd\u9009\u4e00\u4e2a\u8fdb\u884c\uff0c\u8fd9\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u6bcf\u7ec4\u4efb\u52a1\u53ea\u80fd\u9009\u4e00\u4e2a\u6700\u4f18\u89e3\n\n\u7136\u800c\u65f6\u95f4\u8981\u5012\u7740\u6765\uff0c\u539f\u56e0\u5c31\u4e0d\u8bf4\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct abc{\n    int first,last;\n};\nint n,t,ans,have[10100],f[10100];abc s[10100];\nbool cmp(abc x,abc y)\n{\n    return x.first>y.first;\n}\nint main()\n{\n    int j,i,now=1;\n    scanf(\"%d%d\",&t,&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&s[i].first,&s[i].last);\n        have[s[i].first]++;\n    }\n    sort(s+1,s+n+1,cmp);\n    for(i=t;i>=0;i--)\n    {\n        if(!have[i]) f[i]=f[i+1]+1;\n        else \n        for(j=1;j<=have[i];j++,now++)//\u56e0\u4e3as\u6570\u7ec4\u91cc\u9762\u53ea\u6709\u4efb\u52a1\uff0c\u6240\u4ee5now\u5728\u4efb\u52a1\u7684\u65f6\u5019\u5c31++\uff0c\u5e76\u4e14\u56e0\u4e3as\u6570\u7ec4\u5df2\u7ecf\u6392\u4e86\u5e8f\uff0c\u6240\u4ee5\u76f4\u63a5\u7528now\u6765\u9009\u4efb\u52a1\u5c31\u53ef\u4ee5\u9009\u5230\u8981\u9009\u7684\n            if(f[i]<f[s[now].first+s[now].last]) f[i]=f[s[now].first+s[now].last];//\u8fd9\u91cc\u4e00\u5b9a\u4e0d\u8981-1\uff0c\u56e0\u4e3a\u4e0b\u4e00\u6b21\u662f\u4ecef[s[now].first+s[now].last]\u518d\u5f00\u59cb\u7684\uff0c\u6240\u4ee5\u4e0d\u8981-1\uff08\u5176\u5b9e\u6211\u4e5f\u4e0d\u592a\u786e\u5b9a\u662f\u4e0d\u662f\u8fd9\u4e2a\u539f\u56e0\uff0c\uff0c\uff0c\u53cd\u6b63-1\u5c31wa\uff0c\u4e0d-\u5c31AC\uff0c\u53ef\u80fd\u4e5f\u662f\u56e0\u4e3a\u6211\u7684\u7b97\u6cd5\u5728\u67d0\u4e9b\u7ec6\u8282\u4e0a\u4e0d\u592a\u4e00\u6837\uff09\n    //    if(f[i]>ans) ans=f[i];\n    }\n    printf(\"%d\",f[1]);//\u56e0\u4e3a\u6240\u6709\u7684\u503c\u6700\u540e\u90fd\u7d2f\u52a0\u5230f[1]\u4e0a\u4e86\uff0c\u6240\u4ee5\u8f93\u51faf[1]\u800c\u4e0d\u662f\u8ddf\u5e73\u5e38\u4e00\u6837\u8f93\u51faf[n]\n    return 0;\n}\n\n```",
        "postTime": 1504326174,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u5f88\u96be\u5f97\u5f88\u96be\u5f97\u5f88\u96be\u5f97\u7684\uff0c\u4e00\u9053\u533a\u95f4\u52a8\u89c4\u7684\u9898\u80fd\u4e0d\u770b\u9898\u89e3\uff08\u770b\u9898\u89e3\u5199dp\u662f\u4e2a\u4e0d\u597d\u7684\u4e60\u60ef\uff0c\u8bf7\u4e0d\u8981\u5b66\u4e60\u6211(/\u7b11\u54ed/)\uff09\u81ea\u5df1\u63a8\u51fa\u8f6c\u79fb\u65b9\u7a0b\u5f0f\u6765\uff0c\u8fd8\u4e00\u904d\u8fc7\u4e86\n\nps:\u4ee5\u524d\u7684\u9898\u89e3\u52a8\u89c4\u90fd\u5199\u6210\u4e86\u52a8\u5f52\uff0c\u5b9e\u5728\u662f\u5c34\u5c2c\u3002\u3002\u3002\u8bf7\u8c05\u89e3\uff08/\u64e6\u6c57/\uff09\n\n\u90a3\u4e48\u63a8\u7684\u8fc7\u7a0b\u5bf9\u4e8e\u6211\u8fd9\u79cd\u5c0f\u849f\u84bb\u6765\u8bf4\uff0c\u771f\u7684\u5f88\u590d\u6742\u5f88\u590d\u6742\uff0c\u63a8\u4e86\u4e00\u4e0b\u5348\u4e00\u4e2a\u534a\u5c0f\u65f6\uff0c\u53c8\u7801\u4e86\u534a\u4e2a\u5c0f\u65f6\uff0c\u8349\u7a3f\u7eb8A4\u5927\u5c0f\u7684\u5199\u6ee1\u4e86\u597d\u51e0\u5f20\uff0c\u987a\u7740\u9000\u554a\u4e0d\u884c\u53c8\u9006\u7740\u63a8\uff0c\u4e8c\u7ef4\u4e0d\u884c\u964d\u4e00\u7ef4\uff0c\u4ee5\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\u4e0d\u884c\u6539\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff0c\u6298\u817e\u4e86\u597d\u4e00\u4f1a\u7ec8\u4e8e\u627e\u5230\u4e00\u4e2a\u51e0\u8fd1O(n)\u7684\u9ad8\u6548\u53c8\u4e0d\u70b8\u7a7a\u95f4\u7684\u7b97\u6cd5\n\n\n\u597d\u5427\uff0c\u8fdb\u5165\u6b63\u9898\n\n\u9996\u5148\uff0c\u8981\u6ce8\u610f\u7684\u662f\u9898\u76ee\u7684\u65f6\u95f4\uff0c**\u65f6\u95f4\u662f\u4e00\u6bb5**\uff0c\u6240\u4ee5\u65f6\u95f4\u8f74\u4e0a0\u52301\u6307\u7684\u662f\u7b2c\u4e00\u5206\u949f\uff0c\uff0c\u6240\u4ee5\u6211\u4eec\u5206\u6790\u6837\u4f8b\u7684\u65f6\u5019\u8981\u4ece0\u5f00\u59cb\u753b\u65f6\u95f4\u8f74\uff0c\u53d6\u65f6\u95f4\u6bb5\u6765\u5b89\u6392\u5c3c\u514b\u7684\u4efb\u52a1\n\n\u8fd9\u70b9\u660e\u786e\u540e\uff0c\u5c31\u5f88\u5bb9\u6613\u63cf\u8ff0\u5404\u4e2a\u4efb\u52a1\u7684\u8d77\u59cb\u70b9\u548c\u7ed3\u675f\u70b9\u8fd8\u6709\u6301\u7eed\u65f6\u95f4\u4e86\uff0c\u6211\u4eec\u7528\u7ed3\u6784\u4f53\u8868\u793a\u5404\u4e2a\u4efb\u52a1\n\n\u7136\u540e\uff0c\u6700\u91cd\u8981\u7684\u662f>\u5f53\u5728\u4e00\u4e2a\u4efb\u52a1\u8d77\u59cb\u65f6\u5c3c\u514b\u6709\u7a7a\u7684\u8bdd\uff0c\u5c3c\u514b\u5fc5\u987b\u9009\n\n\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u5404\u4e2a\u4efb\u52a1\u7684\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\uff0c\u4ece\u540e\u5f80\u524d\u679a\u4e3e\u5f00\u59cb\u65f6\u95f4\u7684\u8fc7\u7a0b\u4e2d\uff0c\u78b0\u5230\u4e00\u4e2a\u4efb\u52a1\u5c31\u5fc5\u987b\u9009\uff08\u5b9e\u9645\u4e0a\u56e0\u4e3a\u53ea\u6709\u8fd9\u4e00\u79cd\u60c5\u51b5\u6240\u4ee5\u6211\u4eec\u624d\u4ece\u540e\u5f80\u524d\u679a\u4e3e\u5f00\u59cb\u65f6\u95f4\uff09\n\n\u4e8e\u662f\u8f6c\u79fb\u65b9\u7a0b\u5f0f\u7684\u539f\u7406\u5c31\u6e05\u6670\u4e86\uff1a\n\n>\u4ece\u7b2ci\u4e2a\u65f6\u95f4\u70b9\u5230\u7b2cn\u4e2a\u65f6\u95f4\u70b9\u5c3c\u514b\u6700\u5c0f\u7684\u5de5\u4f5c\u65f6\u957f \u4e3a\u9009 \u4ee5\u7b2ci\u4e2a\u65f6\u95f4\u70b9\u4e3a\u8d77\u59cb\u65f6\u95f4\u7684\u4efb\u52a1\u7684\u5de5\u4f5c\u65f6\u95f4 \u52a0\u4e0a\u4ece\u90a3\u4e2a\u4efb\u52a1\u7684\u7ed3\u675f\u65f6\u95f4\u5230n \u7684\u6700\u5c0f\u603b\u5de5\u4f5c\u65f6\u95f4\uff08\u56e0\u4e3a\u4ee5\u540c\u4e00\u70b9\u4e3a\u8d77\u59cb\u65f6\u95f4\u7684\u4efb\u52a1\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\uff0c\u6240\u4ee5\u9009\u6700\u5c0f\uff09\n\n\u90a3\u4e48\u6e05\u695a\u4e86\uff0c\u5c31\u6765\u770b\u4ee3\u7801\u5427\uff08\u8be6\u7ec6\u6ce8\u91ca\uff09\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\nint n,k;\nint min1(int a,int b){return a<b?a:b;}//\u9632\u6b62\u4e00\u4e9b\u7248\u672c\u4e2d\u6ca1\u6709min\uff08\uff09\u51fd\u6570\uff0c\u6240\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e2a\nint read()//\u6709\u4e00\u4e07\u4e2a\u4efb\u52a1\u6240\u4ee5\u8981\u8bfb\u5165\u4f18\u5316\n{\n    char ch=getchar();\n    while(ch<'0'||ch>'9') ch=getchar();\n    int h=0;\n    while(ch<='9'&&ch>='0')\n    {\n        h=h*10+ch-48;\n        ch=getchar();\n    }\n    return h;\n}\nstruct task{\n    int be;\n    int fi;\n}a[10010];//\u7ed3\u6784\u4f53\u5b58\u5404\u4e2a\u4efb\u52a1\u7684\u4fe1\u606f\nint my(const task&a,const task&b)//\u5f00\u59cb\u65f6\u95f4\u665a\u7684\u6392\u524d\u9762 \n{\n    if(a.be>b.be) return 1;\n    if(a.be<b.be) return 0;\n    if(a.fi<b.fi) return 1;//\u5f00\u59cb\u65f6\u95f4\u4e00\u6837\u5219\u7ed3\u675f\u65e9\u6392\u524d\u9762 \n    return 0;\n}\nint f[10001];//f[i][j]\u8868\u793a\u4ece\u7b2ci\u5206\u949f\u5230\u7b2cn\u5206\u949f\u5c3c\u514b\u6700\u5c11\u7684\u5de5\u4f5c\u65f6\u95f4 \nint main()\n{\n    n=read();\n    k=read();\n    for(int i=1;i<=k;i++)\n    {\n        int x,y;\n        x=read();\n        y=read();\n        a[i].be=x-1;\n        a[i].fi=x+y-1;//\u8bb0\u5f55\u5404\u4efb\u52a1\u7684\u5f00\u59cb\u7ed3\u675f\u65f6\u95f4\uff08\u8fd9\u91cc\u6709\u70b9\u7279\u6b8a\uff0c\u4e0d\u8fc7\u4f60\u6a21\u62df\u4e00\u4e0b\u5c31\u660e\u767d\u4e86\uff08\u65f6\u95f4\u70b9\u548c\u65f6\u95f4\u6bb5\u7684\u5dee\u5f02\uff09\uff09 \n    }\n    a[k+1].be=1000000;//\u9632\u6b62\u5728i=0\u65f6\u9677\u5165\u6b7b\u5faa\u73af\n    sort(a+1,a+k+1,my);//\u6392\u5e8f\u51fd\u6570\n    int tt=1;//\u6307\u5411\u4efb\u52a1 \n    for(int i=n-1;i>=0;i--)//\u679a\u4e3e\u5f00\u59cb\u65f6\u95f4 \n    {\n        if(a[tt].be==i)\n        {\n            int mini=10000000;\n            while(a[tt].be==i)//\u679a\u4e3e\u5230\u5f00\u59cb\u65f6\u95f4\u7b49\u4e8ei\u65f6\uff0c\u4e00\u76f4\u628a\u5f00\u59cb\u65f6\u95f4\u7b49\u4e8ei\u7684\u4efb\u52a1\u679a\u4e3e\u5b8c\uff0c\u8fd9\u6837\u624d\u80fd\u627e\u5230\u6700\u5c0f\u503c\n            {\n                mini=min1(mini,a[tt].fi-a[tt].be+f[a[tt].fi]);//\u9047\u5230\u4e86\u4e00\u4e2a\u4efb\u52a1\uff0c\u90a3\u4e48\u5fc5\u987b\u9009 \n                tt++;\n            }\n            f[i]=mini; \n        }\n        else f[i]=f[i+1];//\u6ca1\u6709\u4efb\u52a1\u5c31\u5ef6\u7eed\u4e4b\u524d\u7684\u503c\n    } \n    cout<<n-f[0];//\u6ce8\u610f\u8f93\u51fa\u7684\u662f\u95f2\u6687\u65f6\u95f4\uff0c\u4e0d\u662f\u5de5\u4f5c\u65f6\u95f4\n    return 0;\n}\n```\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86\uff0c\u5176\u5b9e\u8fd8\u662f\u5f88\u5bb9\u6613\u7684\u5427\uff0c\n\u6240\u4ee5\u2014\u2014>\u5343\u4e07\u4e0d\u8981\u770b\u9898\u89e3\u5199dp\n\n\u8fd9\u6837\u771f\u7684\u6ca1\u6709\u63d0\u9ad8\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e00\u5b9a\u8981\u81ea\u5df1\u60f3\n\n\n\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u5728\u4f60\u7ede\u5c3d\u8111\u6c41\u4e5f\u60f3\u4e0d\u51fa\u8fd9\u9053\u9898\u7684\u65f6\u5019\u5bf9\u4f60\u6709\u5e2e\u52a9\uff08/\u8ba4\u771f\u8138/\uff09\uff01\n",
        "postTime": 1500119835,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u7528\u7684\u662f\u50cfdp\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u5f88\u8be1\u5f02\uff0c\u7136\u800c\u53ef\u4ee5A\n\n1.\u82e5\u6b64\u65f6\u65e0\u4efb\u52a1\uff0c\u5219f[i]=max(f[i],f[i-1]+1)\n\n2.\u5426\u5219\uff0c\u4ece\u6b64\u524d\u76841\u4e2a\u72b6\u6001\u8d77\uff0c\u5f80\u540e\u63a8\u5bfc\u5373\u53ef\u3002\n\nf[i+b[p]-1]=max(f[i+b[p]-1],f[i-1]);\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(n)\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define INF -0x7f7f7f7f\nusing namespace std;\nint i,j,n,m=0,p;\nint a[10001],b[10001],f[10001];\nint main()\n{\n    memset(f,INF,sizeof(f)); f[0]=0;\n    scanf(\"%d%d\",&m,&n);\n    for (i=1; i<=n; i++) scanf(\"%d%d\",&a[i],&b[i]);\n    for (i=1; i<=m; i++)\n    {\n        if (a[p+1]!=i) f[i]=max(f[i],f[i-1]+1);\n        while (p<n && a[p+1]==i)\n        {\n            p++;\n            f[i+b[p]-1]=max(f[i+b[p]-1],f[i-1]);\n        }\n    }\n    printf(\"%d\",f[m]);\n    return 0;\n}\n```",
        "postTime": 1475634858,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "dp\u3010i\u3011\u8868\u793a\u4ecei\u5f00\u59cb\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\uff0c\u9006\u5e8f\u63a8dp\uff0c\n\n\n**\u5206\u60c5\u51b5\uff1a **\n\n1\uff1a\u5982\u679c\u6539\u65f6\u95f4\u6ca1\u6709\u5de5\u4f5c\u9700\u8981\u5f00\u59cb\uff0c\u90a3\u4e48\u5f53\u7136\u662f\u8981\u4f11\u606f\u7684\uff0c\u8868\u793a\u73b0\u5728\u4f11\u606f\u4e00\u5206\u949f\uff0cdp\u3010i\u3011=dp\u3010i+1\u3011+1\n\n\n2\uff1a\u5982\u679c\u6709\u9700\u8981\u5f00\u59cb\u7684\uff0c\u90a3\u4e48\u5728\u6240\u6709\u9700\u8981\u5f00\u59cb\u7684\u5de5\u4f5c\u4e2d\u9009\u4e00\u4e2a\u6700\u4f18\u7684\uff08\u5e9f\u8bdd\uff09\uff0cdp\u3010\u4ed6\u4eec\u7684\u672b\u5c3e\u65f6\u95f4+1\u3011\u6700\u5927\u7684\uff0c\u6765\u8868\u793a\u4ed6\u4eec\u5de5\u4f5c\u5b8c\u4e4b\u540e\u6700\u591a\u80fd\u4f11\u606f\u591a\u957f\u65f6\u95f4\uff08\u6ce8\u610f\u6070\u597d\u5de5\u4f5c\u5b8c\u7684\u90a3\u4e00\u5206\u949f\uff0c\u5373\u5de5\u4f5c\u7684\u6700\u540e\u4e00\u5206\u949f\uff0c\u4e0d\u7b97\u4f11\u606f\uff09\u8fd9\u5c31\u662f+1\u7684\u539f\u56e0 \uff0c\u4e3a\u4ec0\u4e48\uff1f\u6211\u4eec\u53ef\u4ee5\u8bbe\u60f3\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u4efb\u52a1\uff0c\u5982\u679c\u6211\u505a\u8fd9\u4e2a\u4efb\u52a1\uff0c\u90a3\u80fd\u5f97\u5230\u7684\u6700\u5927\u7a7a\u6687\u65f6\u95f4\u662f\u591a\u5c11\uff1f\u5c31\u662f\u5de5\u4f5c\u5b8c\u4e4b\u540e\u7684\u6700\u5927\u7a7a\u4f59\u65f6\u95f4\u554a\n\n\n\u4e0d\u8fc7\uff0c\u4e4b\u6240\u4ee5\u8981\u9006\u5411\u63a8\uff0c\u4f60\u60f3\u554a\u3002\u6b63\u5411\u63a8\u7684\u8bdd\uff0c\u524d\u9762\u7684\u9009\u62e9\u4f1a\u5bf9\u540e\u9762\u7684\u9020\u6210\u5f71\u54cd\uff0c\u5e76\u4e14\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u6765\u8bb0\u5f55\u3002\n\n\n\u4e3a\u4ec0\u4e48\u8981\u9006\u5e8fDP\u5462\uff1f\u56e0\u4e3a\u4e0d\u96be\u53d1\u73b0\uff0c\u9009\u62e9\u662f\u5728\u4efb\u52a1\u7684\u5f00\u59cb\uff0c\u4e0d\u662f\u4efb\u52a1\u7684\u7ed3\u675f\uff0c\u8981\u5728\u540c\u4e00\u8d77\u59cb\u70b9\u8f6c\u79fb\u72b6\u6001\uff0c\u5fc5\u5c06\u4ece\u540e\u5f80\u524d\uff0c\u6240\u4ee5\u5c31\u6709\u4e86\u672c\u65b9\u6cd5\u3002\n\n\n\u8be6\u89c1\u8fd9\u91cc\n\n[http://www.cnblogs.com/radiumlrb/p/5792085.html](http://www.cnblogs.com/radiumlrb/p/5792085.html)\n\n\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define inf 0x3f3f3f3f\nusing namespace std;\nint begin[100005],end[100005],f[100005],N,K;\nint main(){\n//    freopen(\"01.txt\",\"r\",stdin);\n    scanf(\"%d%d\",&N,&K);\n    for(int i=1;i<=K;i++){\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        begin[i]=a;end[i]=b;\n    }\n    int point=K;\n    for(int i=N;i>=1;i--){\n        if(begin[point]!=i) f[i]=f[i+1]+1;\n        else{\n            while(i==begin[point]){\n                f[i]=max(f[i],f[i+end[point]]);\n                point--;\n            }\n        }\n    }\n    printf(\"%d\\n\",f[1]);\n    return 0;\n}\n```",
        "postTime": 1472101082,
        "uid": 17333,
        "name": "Radium_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u6700\u5927\u7a7a\u95f2\u65f6\u95f4==\u6700\u5c0f\u6d88\u8017\u65f6\u95f4\u3002\n\nf[i]\u8868\u793a\u4ee5\u7b2ci\u4e2a\u4efb\u52a1\u7ed3\u5c3e\u7684\u5de5\u4f5c\u5e8f\u5217\u7684\u6700\u5c0f\u6d88\u8017\u65f6\u95f4\n\n\u628a\u4efb\u52a1\u6392\u5e8f(\u5f00\u59cb\u65f6\u95f4)\uff0c\u4f7f\u65e0\u5176\u4ed6\u4efb\u52a1\u7684\u65f6\u523b\u5fc5\u987b\u505a\u4e00\u4e2a\u3002\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint f[10010];\nint n,k;\nint b[10010],e[10010];\nint main()\n{\n   [/color][codec ] scanf(\"%d %d\",&n,&k);[/codec ]\n    [/color][codec ]for(int i=1;i<=k;i++)[/codec ]\n       [/color][codec ]scanf(\"%d %d\",&b[i],&e[i]);[/codec ]\n      [/color][codec ] f[n+1]=0;[/codec ]\n   [/color][codec ] int j=k,busy;[/codec ]\n   [/color][codec ] for(int i=n;i>=1;i--)[/codec ]\n    {\n        [/color][codec ]f[i]=0;busy=0;[/codec ]\n    [/color][codec ]    while(b[j]==i)[/codec ]\n        {\n   [/color][codec ]         f[i]=max(f[i],f[i+e[j]]);[/codec ]\n   [/color][codec ]         busy=1;j--;[/codec ]\n        }\n   [/color][codec ]     if(!busy) f[i]=f[i+1]+1;[/codec ]\n   }\n   [/color][codec ] printf(\"%d\\n\",f[1]);[/codec ]\n    return 0;\n}\n```",
        "postTime": 1471321872,
        "uid": 21764,
        "name": "Kal_El",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u8f93\u5165\u6570\u636e\u5df2\u7ecf\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u597d\u5e8f\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u65b9\u4fbf\u5730\u7528\u4e00\u4e2a\u6307\u9488\u4ece\u540e\u5f80\u524d\u904d\u5386\u2026\u2026\n\n```cpp\n\n#include<stdio.h>\nint n,i,j,k,a[10000][2],f[10002],p;\nint main()\n{\n    for(scanf(\"%d%d\",&n,&k);i<k;i++)scanf(\"%d%d\",a[i],a[i]+1);\n    for(i=n,p=k-1;i;i--){\n        if(*a[p]!=i){f[i]=f[i+1]+1;continue;}\n        for(;*a[p]==i;p--)\n            if(f[i+a[p][1]]>f[i])\n                f[i]=f[i+a[p][1]];\n    }\n    printf(\"%d\",f[1]);\n    \n    return 0;\n}\n\n```",
        "postTime": 1441513547,
        "uid": 7487,
        "name": "plazum",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "```cpp\n#include <iostream>  \n#include <cstdlib>  \n#include <cstdio>  \n#include<algorithm>  \nusing namespace std;  \nint n,k,a[10001][3],f[10001];  \nint main()  \n{  \n    cin>>n>>k;  \n    for(int i=1;i<=k;i++)cin>>a[i][1]>>a[i][2];  \n    for(int i=n;i>=1;i--)  \n    { int po=0;                       //}\u4ece\u540e\u5f80\u524d\uff0c\u5224\u65ad\u5728\u8be5\u65f6\u523b\u6709\u6ca1\u6709\u4efb\u52a1\u3002  \n      for(int j=1;j<=k;j++)              \n      {  \n         if(a[j][1]==i) //f[i] \u5982\u679c\u5728i\u65f6\u523b\u5f00\u59cb\u5de5\u4f5c\uff08\u6b64\u65f6\u7a7a\u95f2\uff09\u7684\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\u3002  \n         {po=1;  \n            f[i]=max(f[i],f[i+a[j][2]]);}  \n      }  \n      if(!po)f[i]=f[i+1]+1; //\u8be5i\u65f6\u523b\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u4efb\u52a1 \u7a7a\u95f2\u65f6\u95f4\u591a\u4e00\u70b9  \n    }  \n    cout<<f[1]<<endl;///cout  \n    return 0;  \n}  \n```",
        "postTime": 1428827320,
        "uid": 2220,
        "name": "\u6c38\u5ffb",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u6839\u672c\u6ca1\u6709\u60f3\u51fadp\u7684\u65b9\u6cd5orz\uff0c\u53ea\u80fd\u8822\u8822\u7684\u5199\u4e00\u4e2adijkstra\u6c34\u8fc7\u53bb\n\u5982\u679c\u8003\u8651\u5230\u56fe\u7684\u8bdd\u9898\u76ee\u5c31\u5f88\u7b80\u5355\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u7b97\u7b2c1\u4e2a\u70b9\u5230\u7b2ci\u4e2a\u70b9\u7684\u8def\u5f84\u7684\u957f\u5ea6\u65f6\u8fd9\u4e2a\u8def\u5f84\u4e0d\u80fd\u591f\u5230\u8fbei\uff0c\u5e94\u5f53\u6070\u597d\u5230\u8fbei-1\uff08\u5426\u5219\u5c31\u4e0d\u80fd\u4ece\u70b9i\u51fa\u53d1\uff09\u3002\n```\n#include<iostream>\n#include<stdlib.h>\nusing namespace std;\n#define MAXN 10010\n//dijkstra\nint num=0;//\u70b9\u4e2a\u6570 \nstruct range{\n\tint x;\n\tint y;\n}a[MAXN];//\u4e00\u4e2ax\u5230y\u7684\u533a\u95f4\nint dis[MAXN];//\u5230\u7b2ci\u4e2a\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb \nint point[MAXN]={0};//\u7b2ci\u4e2a\u70b9\u5728\u8f93\u5165\u533a\u95f4\u7684\u4f4d\u7f6e\nint point_p[MAXN]={0}; \nvoid dijkstra(){\n\tint k=0;dis[0]=0;\n\tfor (int i=0;i<=num;++i){\n\t\tk=i;\n\t\tfor (int j=point[i];j<point[i+1];++j){\n\t\t\tfor (;point_p[k]<=a[j].y;++k);\n\t\t\tdis[k]=min(dis[k],dis[i]+a[j].y-a[j].x+1);//\u63d0\u524d\u628ax\u503c\u76f8\u540c\u7684a[i]\u6309y\u6392\u5e8f\uff0c\u51cf\u5c11\u8ba1\u7b97\u6b21\u6570\u3002\n\t\t\t}\n\t\t}\n\t}\nint compare(const void *s,const void *t){\n\tif (((range*)s)->x==((range*)t)->x)return ((range*)s)->y-((range*)t)->y;\n\telse return ((range*)s)->x-((range*)t)->x;\n}//\u7528\u5feb\u6392\u5077\u61d2\nint main(){\n\tint n,k;\n\tcin>>n>>k;\n\tfor (int i=0;i<k;++i)cin>>a[i].x>>a[i].y,a[i].y=a[i].x+a[i].y-1;//\u628a\u8f93\u5165\u8f6c\u5316\u6210\u533a\u95f4\n\tqsort(a,k,sizeof(range),compare);\n\tpoint[0]=0,point_p[0]=a[0].x;\n\tfor (int i=1;i<k;++i){\n\t\tif (a[i].x!=a[i-1].x)point[++num]=i,point_p[num]=a[i].x;//\u8bb0\u4f4f\u7b2ci\u4e2a\u70b9\u7684x\u503c\u548c\u5728\u4efb\u52a1\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n\t}\n\tpoint[num+1]=k,point_p[num+1]=n+1;\n\tfor (int i=0;i<=num+1;++i)dis[i]=MAXN;\n\tdijkstra();\n\tcout<<n-dis[num+1];\n\t\n} \n```",
        "postTime": 1544712420,
        "uid": 10028,
        "name": "Johndoe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u603b\u662f\u6709\u4eba\u8bf4\u8981\u9006\u63a8\u3002\u3002\u3002\u6b63\u63a8\u4e5f\u884c\u554a\n\nf[i]\u8bb0\u5728\u65f6\u95f4\u8f74\u622a\u6b62\u5230i\u7684\u4f4d\u7f6e\uff08\u7b2ci\u5206\u949f\u672b\uff09\u6700\u957f\u7684\u4f11\u606f\u65f6\u95f4\n\n\u663e\u7136\uff0c\u5728\u6ca1\u6709\u5de5\u4f5c\u7684\u65f6\u5019\uff0cf[i+1]=f[i]+1\n\n\u7136\u540e\u8ba8\u8bba\u5de5\u4f5c\u65f6\u7684\u60c5\u51b5\n\n\u5148\u628a\u5de5\u4f5c\u65f6\u95f4\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\n\n**\u8fd9\u91cc\u6709\u4e00\u70b9\u8981\u6ce8\u610f\uff0c\u4ece\u7b2c1\u5206\u949f\u5f00\u59cb\u5de5\u4f5c2\u5206\u949f\uff0c\u5373\u662f\u4ece1min\u521d~2min\u672b \u5c31\u662f 0min~2min**\n\n\u6240\u4ee5\u6211\u4eec\u8f93\u5165\u65f6\uff0c\u8981\u628a\u5f00\u59cb\u65f6\u95f4-1\n\n\u7ed3\u675f\u65f6\u95f4\u5373\u4e3a  \u5f00\u59cb\u65f6\u95f4-1+t\n\n\u5f53\u9047\u5230\u987b\u5de5\u4f5c\u7684\u65f6\u5019\uff0c\u5c31\u76f8\u5f53\u4e8e t0~t\u672b \u6ca1\u6709\u4efb\u4f55\u4f11\u606f\n\n\u5c31\u628af[t\u672b]=max{f[t\u672b],f[t0]}\n\n\u7136\u540e\u63a8\u5230f[n]\u5373\u7b2cn min \u672b\u5373\u53ef\u8f93\u51fa\u7b54\u6848\n\n**\u4f46\u5f53\u6211\u4eec\u5fc5\u987b\u5de5\u4f5c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u662f\u4e0d\u53ef\u80fd\u5b58\u5728\u8be5\u65f6\u95f4\u70b9\u4e0a\u7684\u4f11\u606f\u65f6\u95f4\u7684(\u56e0\u4e3a\u6211\u4eec\u5728\u5de5\u4f5c)\uff0c\u6240\u4ee5\u6211\u628af[0]\u4ee5\u540e\u521d\u59cb\u5316\u4e3a-INF\uff0c\u5f53\u7136\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u4f18\u5316\uff08\u61d2\uff09**\n\n\u8d34\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 10010\n#define INF 0x66ccff\nusing namespace std;\nint f[MAXN],n,k;\nstruct task//s\u5f00\u59cb\u65f6\u95f4,e\u7ed3\u675f\u65f6\u95f4\n{\n    int s,e;\n}x[MAXN];\nint cmp(const void *a,const void *b)\n{\n    return (*(task*)a).s-(*(task*)b).s;\n}\nint main()\n{\n    \n    cin>>n>>k;\n    int t;\n    for(int i=1;i<=n+2;i++)f[i]=-INF;\n    for(int i=0;i<k;i++)//\u8f93\u5165\u5f00\u59cb\u65f6\u95f4\u6301\u7eed\u65f6\u95f4\u5e76\u8f6c\u6362\u4e3a\u7ed3\u675f\u65f6\u95f4\n    {\n        cin>>x[i].s>>t;\n        x[i].s--;\n        x[i].e=x[i].s+t;\n    }\n    qsort(x,k,sizeof(struct task),cmp);//\u6392\u5e8f\n//    for(int i=0;i<k;i++)cout << x[i].s<<'~'<<x[i].e<<endl;\n    \n    for(int i=0,p=0;i<=n;i++) \n    {\n        \n//        printf(\"f[%d]:%d~%d\u5206\u949f\u6700\u591a\u4f11\u606f%d\\n\",i,i,i+1,f[i]);\n//        int flag=0;\n        if(i==x[p].s)//\u904d\u5386\u5f53\u524d\u65f6\u523b\u7684\u5de5\u4f5c\n        {\n//            int min=n;\n            while (i==x[p].s)\n            {\n//                if(x[p].e<min)min=x[p].e;\n                f[x[p].e]=f[x[p].e]>f[i]?f[x[p].e]:f[i];\n                p++;\n            }\n//            i=x[p].e-1;\n            continue;//\u56e0\u4e3a\u6211\u4eec\u53ef\u505a\u5de5\u4f5c\u662f\u5fc5\u505a\u5de5\u4f5c\uff0c\u6240\u4ee5\u8fdb\u884cf[i+1]=f[i]+1\u7684\u5904\u7406\n        }\n        f[i+1]=f[i+1]>(f[i]+1)?f[i+1]:f[i]+1;//\u5904\u7406\u975e\u5de5\u4f5c\u72b6\u6001\n//        printf(\"\u7b2c%d\u5206\u949f\u6700\u591a\u4f11\u606f%d\\n\",i,f[i]);\n    }\n    cout << f[n];\n}\n```\n\u5f53\u7136\u5176\u4e2d\u7684\u6d4b\u8bd5\u8bed\u53e5\u4e5f\u53ef\u4ee5\u62c9\u51fa\u6765\u7528\u7528\n",
        "postTime": 1508935591,
        "uid": 24779,
        "name": "Mother_Dry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u9009\u62e9\u7684\u89e3\u6cd5\u662f\u8bb0\u5fc6\u5316\u641c\u7d22\n\n\u521a\u5f00\u59cb\u770b\u5230\u6b64\u9898\u65f6\uff0c\u753b\u4e86\u4e0b\u65f6\u95f4\u8f74\u540e\u53d1\u73b0\u4f3c\u4e4e\u975e\u5e38\u5bb9\u6613\u641c\u7d22\u4f46\u8003\u8651\u5230\u4e00\u822c\u4e0d\u80fd\u88f8\u641c\uff0c\n\n\u4e8e\u662f\u60f3\u529e\u6cd5\u4f18\u5316\u540e\u6765\u53d1\u73b0\u6709\u7684\u72b6\u6001\u591a\u6b21\u8bbf\u95ee\u4e8e\u662f\u8fdb\u884c\u8bb0\u5fc6\u5316\u3002\n\n\u8bb0\u5fc6\u5316\u662f\u4e2a\u5e38\u89c1\u7684\u4f18\u5316\u3002\n\n\u6709\u5f88\u591aDP\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u6bd4\u8f83\u62bd\u8c61\u800c\u8bb0\u5fc6\u5316\u641c\u7d22\u5374\u907f\u514d\u4e86\u6b64\u7c7b\u95ee\u9898\u3002\n\n\u6ce8\u610f\u641c\u7d22\u65f6\u8981\u9009\u62e9\u6700\u8fd1\u7684\u4efb\u52a1\uff0c\u8df3\u7740\u5bfb\u627e\u662f\u4e2a\u4e25\u91cd\u7684\u9519\u8bef\uff0c\u8fd9\u4e2a\u9519\u8bef\u4f1a\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\uff0c\u4f46\u9664\u4e86\u8fd9\u4e2a\u4e4b\u5916\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u8981\u6ce8\u610f\u7684\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct task{int l,r;}A[10005];            //\u5b9a\u4e49\u4efb\u52a1\u4e3a\u7ed3\u6784\u4f53l,r\u4e3a\u5360\u7528\u65f6\u95f4\u7684\u5168\u95ed\u533a\u95f4 \nint f[10005],n,k;                        //f[i]\u4fdd\u5b58\u7684\u662f\u4ece\u5f00\u59cb\u7b2ci\u4e2a\u4efb\u52a1\u5230\u7ed3\u675f\u6700\u5c0f\u82b1\u8d39\u65f6\u95f4 \nbool cmp(task a,task b){return a.l<b.l;}//\u6392\u5e8f\u65f6\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \nint search(int cur){\n    if(f[cur])return f[cur];            //\u82e5\u8be5\u72b6\u6001\u5df2\u4fdd\u5b58\u76f4\u63a5\u8fd4\u56de\u503c \n    int res=0x7fffffff,limit=0x7fffffff;//\u521d\u59cb\u5316 \n    for(int i=cur+1;i<=k;i++)            //\u5411\u540e\u5bfb\u627e\u4efb\u52a1 \n    if(A[i].l>limit)break;                //\u82e5\u6b64\u4efb\u52a1\u5e76\u975e\u6700\u8fd1\u7684\u76f4\u63a5break \n    else if(A[i].l>A[cur].r)             //\u5bfb\u627e\u7b54\u6848\u5e76\u66f4\u65b0\u6700\u8fd1\u4efb\u52a1\u5f00\u59cb\u65f6\u95f4 \n    res=min(res,search(i)),limit=min(limit,A[i].l);\n    f[cur]=A[cur].r-A[cur].l+1;            //\u66f4\u65b0f[cur]\u6570\u503c\u8fdb\u884c\u8bb0\u5fc6\u5316 \n    if(res!=0x7fffffff)return f[cur]+=res;\n    else return f[cur];\n}\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    A[0].l=1,A[0].r=0;                    //\u521d\u59cb\u5316\u8bbe\u7f6e\u865a\u62df\u70b9\u4e3a\u5f00\u59cb\u72b6\u6001 \n    for(int i=1;i<=k;i++)\n    scanf(\"%d%d\",&A[i].l,&A[i].r),A[i].r+=A[i].l-1; \n    sort(A+1,A+k+1,cmp);\n    search(0);                            //\u5f00\u59cb\u641c\u7d22 \n    printf(\"%d\",n-f[0]);\n    return 0;\n}\n```",
        "postTime": 1507638584,
        "uid": 45556,
        "name": "FFF\u56e2",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\n#define INF 10000+5\ninline void read(int &x)\n{\n    int f=1;x=0;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n    while(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\n    x*=f;\n}\ninline void write(int x)\n{\n     if(x<0) putchar('-'),x=-x;\n     if(x>9) write(x/10);\n     putchar(x%10+'0');\n}\nstruct Edge{\n    int p;\n    int t;\n}edge[INF+1];\nbool cmp(Edge a,Edge b)\n{\n    return a.p > b.p;//\u6309\u5f00\u59cb\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u2014\u2014\u65b9\u4fbf\u4f60\u63a8\u548c\u72b6\u6001\u8f6c\u79fb \n}\nint max(int a,int b)\n{\n    return a>b?a:b; \n}\nint dp[INF+1];//dp[k]\u4e3a\u5728k~n\u65f6\u95f4\u5185\u6700\u5927\u7684\u7a7a\u6687\u65f6\u95f4\u4e3a\u4e86\u4e4b\u540e\u7684\u72b6\u6001\u8f6c\u79fb\u800c\u91cf\u8eab\u8ba2\u9020 \nint sum[INF+1];//\u5728\u65f6\u95f4\u70b9i\u7684\u4efb\u52a1\u6570\u91cf \nint n,k;//\u5de5\u4f5c\u65f6\u95f4\u548c\u4efb\u52a1\u603b\u6570 \nint main() \n{\n    read(n);    read(k);\n    for(int i=1;i<=k;i++){//\u6bcf\u4e2a\u4efb\u52a1 \n        read(edge[i].p),read(edge[i].t);\n        sum[edge[i].p]++;\n    }\n    sort(edge+1,edge+k+1,cmp);\n    for(int time=n,now=1;time>=1;time--)\n        if(!sum[time])//\u65f6\u95f4\u70b9time\u6ca1\u6709\u4efb\u52a1\n            dp[time]=dp[time+1]+1;\n        else\n            for(int i=1;i<=sum[time];i++,now++)//sum\u662f\u7528\u6765\u8ba1\u6570\uff0cnow\u662f\u8f6c\u79fb \n        //\u56e0\u4e3anow\u6839\u636e\u6bcf\u6b21\u8f6c\u79fb\u90fd\u5f80\u540e\u5bf9\u5e94\u6bcf\u4e00\u4e2a\u65f6\u95f4\u70b9\u7684\u6240\u6709\u7269\u54c1\u6240\u4ee5\u7528now\u4ee3\u8868\u7269\u54c1\u5408\u6cd5 \n                dp[time]=max(dp[time],dp[time+edge[now].t]);\n    //\u6ce8\u610f\u5728p+t-1\u5206\u949f\u65f6\u7ed3\u675f\uff0c\u4f46\u662f\u662f\u4e00\u76f4\u6301\u7eed\u5230\u4e86p+t\u7684\u5f00\u59cb\n    //\u800c\u6839\u636e\u6211\u4eec\u7684dp[]\u65b9\u7a0b\u5b9a\u4e49\uff0c\u90a3\u4e48\u91cc\u9762\u5e94\u8be5\u662f\u5f00\u59cb\u7684\u65f6\u95f4 \n    write(dp[1]);\n        return 0; \n}\n```",
        "postTime": 1504105234,
        "uid": 24027,
        "name": "IG_TheShy_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u5341\u5206\uff0c\u5341\u5206\u5f31\u7684\u6211\u60f3\u5230\u4e86\u4e00\u5947\u8469\u7684\u65b9\u6cd5\u3002\u3002\n\n\u9996\u5148\u9884\u5904\u7406\u627e\u51fa\u6bcf\u4e00\u4ef6\u5de5\u4f5c\u4e4b\u524d\u5f00\u59cb\u65f6\u95f4\u4e0d\u4e00\u6837\u7684\u7b2c\u4e00\u4ef6\u5de5\u4f5c\uff0c\u7136\u540e\u636e\u6b64\u9884\u5904\u7406\u627e\u51fa\u6240\u6709\u53ef\u80fd\u5728\u5404\u4ef6\u5de5\u4f5c\u4e4b\u524d\u505a\u7684\u7b2c\u4e00\u4ef6\u5de5\u4f5c\u3002\n\n\u7136\u540e\u636e\u6b64dp\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3af[i] = min(f[i] , f[j] + t[j])\n\ni\u4e3a\u5f53\u524d\u5de5\u4f5c\u5e8f\u53f7\uff0cj\u4e3a\u4e4b\u524d\u53ef\u80fd\u7684\u90a3\u4ef6\u5de5\u4f5c\u7684\u5e8f\u53f7\uff0ct\u4e3a\u5de5\u4f5c\u65f6\u95f4\u3002\n\n\u636e\u6b64\u53ef\u6c42\u5f97\u5de5\u4f5c\u65f6\u95f4\u6700\u5c0f\u503c\uff0c\u7528\u603b\u65f6\u95f4\u51cf\u53bb\u5b83\u5c31\u662f\u7a7a\u95f2\u65f6\u95f4\u6700\u5927\u503c\u4e86\u3002\n\n\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u5f88\u6162\uff0c\u5f88\u6162\uff0c\u5f88\u6162\uff08\u6700\u540e\u4e00\u70b9520ms\uff09\uff0c\u4f46\u6bd5\u7adf\u8fd8\u662f\u53efAC\u7684\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u5199\u5f97\u771f\u7684\u5f88\u4e0d\u7f8e\u89c2\uff0c\u80fd\u4e0d\u770b\u5c31\u4e0d\u770b\u5427= =\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<cstring>\nconst int INF = 100000;\nusing namespace std;\nint befb[10002] , dp[10002];\nvector<int> workc[10002];\nstruct work\n{\n    int bg , t;\n    bool operator <(const work& wo)const\n    {\n        return bg < wo.bg;\n    }\n}works[10002];\nint main()\n{\n    for(int i = 0 ; i <= 10001 ; i++)\n        dp[i] = INF;\n    int n , T;\n    cin>>T>>n;\n    for(int i = 1 ; i <= n ; i++)\n    {\n        cin>>works[i].bg>>works[i].t;\n    }\n    sort(works+1 , works+n+1);\n    works[0].bg = 0;works[0].t = 0;\n    for(int i = 1 ; i <= n ; i++)\n    {\n        if(i > 1 && works[i].bg != works[i-1].bg)\n            befb[i] = works[i-1].bg;\n        else\n            befb[i] = befb[i-1];\n    }\n    for(int i = n ; i > 1 ; i--)\n    {\n        for(int j = i-1 ; j >= 1 ; j--)\n            if(works[j].bg + works[j].t <= works[i].bg && works[j].bg + works[j].t > befb[i])\n                workc[i].push_back(j);\n    }\n    for(int i = 1 ; works[i].bg == works[1].bg ; i++)\n        dp[i] = 0;\n    for(int i = 1 ; i <= n ; i++)\n    {\n        if(workc[i].empty())\n            continue;\n        for(vector<int>::iterator ite = workc[i].begin() ; ite != workc[i].end() ; ite++)\n        {\n            dp[i] = min(dp[i] , dp[*ite] + works[*ite].t);\n        }\n    }\n    int ans = INF;\n    for(int i = 1 ; i <= n ; i++)\n    {\n        if(works[i].bg + works[i].t > works[n].bg )\n            ans = min(ans , dp[i] + works[i].t);\n    }\n    cout<<T-ans;\n    return 0;\n}\n```",
        "postTime": 1495385002,
        "uid": 25746,
        "name": "\u7406\u60f3\u6c14\u4f53",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u65f6\u95f4\u5c31\u662f\u72b6\u6001\u3002\n\n\u6211\u4eec\u4ece\u540e\u5f80\u524d\u679a\u4e3e\u6bcf\u4e00\u4e2a\u65f6\u95f4\uff0cf\u8868\u793a\u4ece\u67d0\u4e2a\u65f6\u95f4\u5230\u7ed3\u675f\u65f6\u95f4\u7684\u6700\u77ed\u5de5\u4f5c\u65f6\u95f4\uff0c\u5c31\u4f1a\u53d1\u73b0\uff1a\n\n\u5982\u679ci\u65f6\u523b\u6ca1\u6709\u4efb\u52a1\uff0cf[i]=f[i+1]\u3002\n\n\u5982\u679ci\u65f6\u523b\u6709\u4efb\u52a1\uff0c\uff0c\u5219\u5fc5\u987b\u9009\u62e9\u4e00\u4e2a\u4efb\u52a1\uff0c\u679a\u4e3e\u6240\u6709\u8be5\u65f6\u523b\u5f00\u59cb\u7684\u6240\u6709\u4efb\u52a1\uff0c\u5bf9\u4e8e\u9009\u62e9\u7684\u6bcf\u4e00\u4e2a\u4efb\u52a1\uff0c\u9700\u8981\u5de5\u4f5c\u7684\u65f6\u95f4\u662f\u5728\u8be5\u4efb\u52a1\u7ed3\u675f\u540e\u9700\u8981\u5de5\u4f5c\u7684\u65f6\u95f4\u548c\u8fdb\u884c\u8be5\u4efb\u52a1\u9700\u8981\u7684\u65f6\u95f4\uff0cf[i]=min(f[end[k]]+f[time[k]]),k\u8868\u793ai\u65f6\u523b\u5f00\u59cb\u7684\u6bcf\u4e00\u4e2a\u4efb\u52a1\u3002\n\n\u7136\u540e\uff0c\u5c31\u662f\u8fd9\u6837\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<climits>\n#include<iomanip>\n#include<vector>\n#include<queue>\nusing namespace std;\nint n,m,sum=0;\nstruct nod{\n    int lon;int next;\n    }rw[10005];\nint h[10005],f[10005];\nvoid add(int x,int y){//\u4fdd\u5b58\u4ee5\u6bcf\u4e00\u4e2a\u65f6\u523b\u4e3a\u5f00\u59cb\u7684\u4efb\u52a1\n    int i;\n    sum++;rw[sum].lon=y;\n    rw[sum].next=h[x];\n    h[x]=sum;\n}\nint main()\n{\n    int i,j,x,y,kl;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;i++){\n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n    }\n    for(i=n;i>=1;i--){\n        if(h[i]==0){f[i]=f[i+1];continue;}//\u5047\u5982\u8fd9\u4e00\u65f6\u523b\u6ca1\u6709\u4efb\u52a1\n        kl=n+1;\n        for(j=h[i];j!=0;j=rw[j].next){//\u5047\u5982\u6709\u4efb\u52a1\n            kl=min(kl,f[rw[j].lon+i]+rw[j].lon);\n        }\n        f[i]=kl;\n    }\n    printf(\"%d\",n-f[1]);\n    return 0;\n}\n```",
        "postTime": 1489498533,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u5e94\u8be5\u6ca1\u4eba\u60f3\u5230\u6211\u8fd9\u4e48\u5947\u8469\u7684\u65b9\u6cd5\u5427\u3002\u3002\u3002\n\n\u6211\u7528\u7684\u662f\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u4f46\u662f\u5b58\u6570\u636e\u7684\u65b9\u6cd5\u6bd4\u8f83\u5947\u8469\uff0c\u662f\u7528\u94fe\u5f0f\u524d\u5411\u661f\u8bb0\u5f55\u67d0\u4e2a\u5728\u6709\u5de5\u4f5c\u5f00\u59cb\u7684\u65f6\u95f4\u70b9\u505a\u4e86\u4ece\u5b83\u5f00\u59cb\u7684\u5de5\u4f5c\u540e\u53ef\u5230\u8fbe\u7684\u65f6\u95f4\u70b9\uff08\u4e0d\u80fd\u8d85\u8fc7N+1\uff09\uff0c\u5982\u679c\u67d0\u4e2a\u65f6\u95f4\u70b9\u6ca1\u6709\u5de5\u4f5c\u5f00\u59cb\uff0c\u5c31\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5b83\u7684\u4e0b\u4e00\u4e2a\u6709\u5de5\u4f5c\u5f00\u59cb\u7684\u65f6\u95f4\u70b9\u3002\u641c\u7d22\u7684\u65f6\u5019\u5982\u679c\u5f53\u524d\u65f6\u95f4\u70b9\u6709\u5de5\u4f5c\u5f00\u59cb\u5c31\u679a\u4e3e\u6bcf\u9879\u5de5\u4f5c\u5e76\u8df3\u5230\u8be5\u5de5\u4f5c\u7ed3\u675f\u7684\u65f6\u95f4\u70b9\uff1b\u5982\u679c\u6ca1\u6709\u5c31\u8df3\u5230\u4e0b\u4e00\u4e2a\u6709\u5de5\u4f5c\u5f00\u59cb\u7684\u65f6\u95f4\u70b9\uff0c\u7a7a\u95f2\u65f6\u95f4+=\u8df3\u8fc7\u7684\u65f6\u957f\u3002\u8fb9\u754c\u6761\u4ef6\u662f\u5f53\u524d\u65f6\u95f4==N+1\u3002\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\nstruct l\n{\n    int to,next;\n}lian[10010];\nint shi,geshu,zhizhen=0,head[10010],xyg[10010],jiyi[10010];\nint max(int a,int b)\n{\n    if(a>b)return a;\n    else return b;\n}\nint min(int a,int b)\n{\n    if(a<b)return a;\n    else return b;\n}\nvoid lsqxx(int from,int to)\n{\n    zhizhen++;\n    lian[zhizhen].to=to;\n    lian[zhizhen].next=head[from];\n    head[from]=zhizhen;\n}\nint search(int sj,int shu)\n{\n    if(sj==shi+1)return shu;\n    if(jiyi[sj]!=0)\n    {\n        if(jiyi[sj]==-1)return shu;\n        else return jiyi[sj]+shu;\n    }\n    int n,lj;\n    if(head[sj]!=0)\n    {\n        for(n=head[sj];n!=0;n=lian[n].next)\n        {\n            lj=lian[n].to;\n            jiyi[sj]=max(jiyi[sj],search(lj,shu)-shu);\n        }\n    }\n    else jiyi[sj]=max(jiyi[sj],search(xyg[sj],shu+xyg[sj]-sj)-shu);\n    if(jiyi[sj]==0)\n    {\n        jiyi[sj]=-1;\n        return shu;\n    }\n    else return jiyi[sj]+shu;\n}\nint main()\n{\n    int n,a,b,daan;\n    scanf(\"%d%d\",&shi,&geshu);\n    for(n=1;n<=geshu;n++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        lsqxx(a,min(a+b,shi+1));\n    }\n    a=shi+1;\n    for(n=shi;n>=1;n--)\n    {\n        if(head[n]!=0)a=n;\n        else xyg[n]=a;\n    }\n    daan=search(1,0);\n    printf(\"%d\",daan);\n    return 0;\n}\n```",
        "postTime": 1479264485,
        "uid": 28328,
        "name": "0x7f7f7f7f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    },
    {
        "content": "\u6211\u7528\u4e86\u4e00\u79cd\u633a\u5947\u8469\u7684\u65b9\u6cd5\uff0c\u7adf\u7136ac\u4e86\n\n1.\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u4f18\u5148\u5bf9\u6240\u6709\u70b9\u8fdb\u884c\u6392\u5e8f\n\n2.\u9884\u5904\u7406\u6bcf\u4e2a\u8d77\u59cb\u65f6\u95f4\u7684\u4e0a\u4e2a\u8d77\u59cb\u65f6\u95f4\uff08\u8981\u6c42\u4e25\u683c\u5c0f\u4e8e\uff09 \uff1alast[]\n\n3.\u6328\u4e2a\u641c\u7d22\u6240\u6709\u7684\u5e97\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u8fdb\u884c\u5faa\u73af\uff0c\u8303\u56f4\u4e3a\u4ed6\u7684\u8d77\u59cb\u65f6\u95f4\u5230\u4ed6\u7684\u4e0a\u4e00\u4e2a\u8d77\u59cb\u65f6\u95f4\uff0c\u8fd9\u671f\u95f4\u5982\u679c\u9047\u5230\u4e86\u67d0\u4e2a\u70b9\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\n\n4.\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1af[m[i].r] = min(f[m[i].r], f[j] + m[i].t);   j\u4e3a\u8ba8\u8bba\u5230\u7684\u7ec8\u6b62\u65f6\u95f4\n\n5.\u6700\u540e\u4ece\u540e\u5f80\u524d\u626bf\u6570\u7ec4\uff0c\u626b\u5230m[k].l\uff08\u5373\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u8d77\u59cb\u65f6\u95f4\uff09\uff0c\u6c42\u51fa\u6700\u5c0f\u503c\uff0c\u7528n\u4e00\u51cf\n\n\u6709\u4e9b\u4ee3\u7801\u7ec6\u8282\u6ca1\u8bf4\uff0c\u770b\u4ee3\u7801\u5427\n\n```cpp\n//luogu 1280 wjz2\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int MAXN = 10000 + 10;\nconst int INF = 0x3f3f3f3f;\nint n, k;\nstruct node\n{\n    int l, t, r;\n} m[MAXN];\nbool cmp(node a, node b)\n{\n    if(a.l != b.l) return a.l < b.l;\n    else return a.r <= b.r;\n}\nint f[MAXN], v[MAXN], last[MAXN], vis[MAXN];\ninline void init()\n{\n    for(int i = 1; i <= k; i++)\n        for(int j = i-1; j >= 0; j--)\n            if(m[j].l != m[i].l) {last[m[i].l] = m[j].l; break;}\n    for(int i = 1; i <= n; i++)\n        f[i] = INF;\n    sort(m+1, m+k+1, cmp); \n    vis[0] = 1;\n}\nint main()\n{\n    cin >> n >> k;\n    for(int i = 1; i <= k; i++)\n    {\n        cin >> m[i].l >> m[i].t;\n        m[i].r = m[i].l + m[i].t - 1;\n    }\n    init();\n    for(int i = 1; i <= k; i++)\n    {\n        int u = m[i].l, v = m[i].r;\n        for(int j = u-1; j >= last[u]; j--)\n            if(vis[j]) f[v] = min(f[v], f[j]+m[i].t);\n        vis[v] = 1;\n    }\n//    for(int i = 1; i <= n; i++)\n//        cout << f[i] << endl;\n    int ans = INF;\n    for(int i = n; i >= m[k].l; i--)\n        if(vis[i]) ans = min(ans, f[i]);\n    cout << n - ans;\n    return 0;\n}\n```\n\n\u52a0\u6cb9\uff01\n",
        "postTime": 1479170098,
        "uid": 20192,
        "name": "wjzcom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1280 \u3010\u5c3c\u514b\u7684\u4efb\u52a1\u3011"
    }
]