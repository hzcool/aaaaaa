[
    {
        "content": "[P6628\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P6628)\r\n\r\n\u795e\u4ed9\u9898\uff0c\u62a2\u4e2a\u7b2c\u4e00\u7bc7\u9898\u89e3\r\n\r\n\u9898\u76ee\u5927\u610f\uff1a\u4e00\u6761\u94fe\u4e0a\u6709 $n$ \u4e2a\u70b9\uff0c\u6709 $m$ \u6761\u8fde\u63a5\u4e24\u4e2a\u70b9\u7684\u7ba1\u9053\uff0c\u6240\u6709\u7ba1\u9053\u5fc5\u987b\u94bb\u4e00\u904d\uff0c\u6c42 $s$ \u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8def\r\n\r\n\u5b9a\u4e49\u4e00\u6761\u8def\u5f84\u4e2d\uff0c\u4e0d\u8d70\u7ba1\u9053\u7684\u90a3\u90e8\u5206\u8def\u5f84\u53eb\u505a\u81ea\u7531\u8def\u5f84\u3002\u7531\u4e8e\u6240\u6709\u7ba1\u9053\u7684\u957f\u5ea6\u548c\u662f\u56fa\u5b9a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u8ba9\u81ea\u7531\u8def\u5f84\u957f\u5ea6\u6700\u5c11\r\n\r\n\u5982\u679c\u6ca1\u6709\u7ba1\u9053\uff0c\u8def\u5f84\u80af\u5b9a\u662f\u4ece $s$ \u5230 $t$ \u7684\u4e00\u6761\u81ea\u7531\u8def\u5f84\u3002\u5047\u8bbe\u73b0\u5728\u6709\u4e00\u6761\u81ea\u7531\u8def\u5f84\u4ece $A$ \u5230 $B$\uff08$A<B$\uff09\uff0c\u6709\u4e00\u6761\u7ba1\u9053\u4ece $C$ \u5230 $D$\uff08$C<D$\uff09\uff0c\u8003\u8651\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a\r\n\r\n- $A<C<B<D$\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8def\u5f84\u53d8\u6210 $A\u2192C-D\u2192B$\uff0c\u6700\u7ec8\u7684\u81ea\u7531\u8def\u5f84\u53d8\u6210 $A$ \u5230 $C$ \u548c $B$ \u5230 $D$\u3002$C<A<D<B$ \u7684\u60c5\u51b5\u540c\u7406\u3002\r\n\r\n- $A<C<D<B$\uff0c\u8fd8\u662f\u628a\u8def\u5f84\u53d8\u6210 $A\u2192C-D\u2192B$\uff0c\u6700\u7ec8\u7684\u81ea\u7531\u8def\u5f84\u8fd8\u662f $A$ \u5230 $C$ \u548c $B$ \u5230 $D$\r\n\r\n- $A<B<C<D$\uff0c\u76f4\u63a5\u5728 $C-D$ \u4e0a\u52a0\u4e00\u6761\u81ea\u7531\u8def\u5f84\u8ba9\u5b83\u53d8\u6210\u4e00\u4e2a\u73af\uff08\u8fd9\u91cc\u5148\u4e0d\u8003\u8651\u56fe\u7684\u8fde\u901a\u6027\u95ee\u9898\uff0c\u4e00\u4e2a\u73af\u6682\u65f6\u53ef\u4ee5\u8ba4\u4e3a\u662f\u72ec\u7acb\u4e8e\u5176\u4ed6\u90e8\u5206\u5b58\u5728\u7684\u3002\u8fde\u901a\u6027\u4f1a\u5728\u540e\u9762\u5904\u7406\uff09\r\n\r\n\u6ce8\u610f\uff1a\u56e0\u4e3a\u662f\u65e0\u5411\u8fb9\uff0c\u800c\u4e14\u4e00\u6761\u8def\u5f84\u4e5f\u53ef\u4ee5\u7ffb\u8f6c\uff0c\u6240\u4ee5\u65b9\u5411\u5e76\u4e0d\u91cd\u8981\r\n\r\n\u6839\u636e\u4e0a\u9762\u51e0\u79cd\u60c5\u51b5\u627e\u89c4\u5f8b\uff0c\u53d1\u73b0\u5728\u539f\u6709\u7684\u81ea\u7531\u8def\u5f84\u4e0a\u52a0\u4e00\u6761\u7ba1\u9053\uff0c\u76f8\u5f53\u4e8e\u628a\u7ba1\u9053\u90a3\u6bb5\u533a\u95f4\u53cd\u8f6c\u3002\u5f53\u7136\u8fd9\u53ea\u662f\u627e\u89c4\u5f8b\uff0c\u5b9e\u9645\u4e0a\u8fd9\u6837\u505a\u662f\u6b63\u786e\u7684\uff0c\u4e0b\u9762\u662f\u8bc1\u660e\uff1a\r\n\r\n\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u6dfb\u52a0\u7ba1\u9053\u5e76\u53cd\u8f6c\u81ea\u7531\u8def\u5f84\u540e\uff0c\u6240\u6709\u7ba1\u9053\u8fb9\u548c\u81ea\u7531\u8fb9\u7ef4\u6301\u4e86\u4e00\u4e2a\u4ece $s$ \u5230 $t$ \u7684\u6b27\u62c9\u8def\uff0c\u56e0\u6b64\u8fd9\u6761\u8def\u5f84\u4e00\u5b9a\u53ef\u884c\u3002\u540c\u65f6\u5b83\u4e00\u5b9a\u662f\u6700\u77ed\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u81ea\u7531\u8fb9\u90fd\u6ca1\u6709\u4ea4\u53c9\u3002\r\n\r\n\u53ea\u4e0d\u8fc7\u5269\u4e0b\u4e00\u4e2a\u5f88\u4e25\u91cd\u7684\u95ee\u9898\uff1a\u4e0a\u9762\u6240\u8bf4\u7684\u201c\u6b27\u62c9\u8def\u201d\u4e0d\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u6b27\u62c9\u8def\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u8def\u5f84\u53ef\u80fd\u8fd8\u6ca1\u8fde\u901a\u5462\uff0c\u53ea\u662f\u6ee1\u8db3\u4e86\u6b27\u62c9\u8def\u5bf9\u70b9\u5ea6\u6570\u7684\u9700\u6c42\u3002\r\n\r\n\u60f3\u8ba9\u8fd9\u5f20\u56fe\u8fde\u901a\uff0c\u9700\u8981\u628a\u73b0\u6709\u7684\u5df2\u7ecf\u8fde\u901a\u7684\u90e8\u5206\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u5728\u4e0a\u9762\u6c42\u6700\u5c0f\u751f\u6210\u6811\u3002\u6613\u5f97\u8ba9\u56fe\u8fde\u901a\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\u957f\u5ea6\u548c\u7684\u4e24\u500d\u3002\r\n\r\n\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u5148\u5904\u7406\u6240\u6709\u7ba1\u9053\uff0c\u5305\u62ec\u5b83\u4eec\u5f62\u6210\u7684\u8fde\u901a\u5757\u548c\u9700\u8981\u7684\u81ea\u7531\u8def\u5f84\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u7ec8\u70b9\u5355\u72ec\u5904\u7406\u3002\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u65f6\u5019\u53ea\u9700\u8981\u52a0\u5165\u6240\u6709\u5fc5\u7ecf\u7684\u8282\u70b9\uff0c\u800c\u56e0\u4e3a\u8fd9\u5f20\u56fe\u4e2d\u4e24\u70b9\u7684\u8ddd\u79bb\u5c31\u662f\u6570\u8f74\u4e0a\u8ddd\u79bb\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u52a0\u5165\u76f8\u90bb\u7684\u5fc5\u7ecf\u70b9\u6784\u6210\u7684\u8fb9\u5c31\u4e00\u5b9a\u80fd\u6c42\u51fa\u6700\u5c0f\u751f\u6210\u6811\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((m+n^2)\\log)$\uff08$\\log$ \u6765\u81ea\u5e76\u67e5\u96c6\u548c\u6c42 mst \u65f6\u7ed9\u8fb9\u6392\u5e8f\uff09\u3002\u4ee3\u7801\u592a\u4e11\u4e86\uff0c\u5c31\u4e0d\u653e\u4e86\u3002",
        "postTime": 1593068203,
        "uid": 90893,
        "name": "\u93e1\u97f3\u30ea\u30f3",
        "ccfLevel": 10,
        "title": "\u3010\u9898\u89e3\u3011[\u7701\u9009\u8054\u8003 2020 B \u5377] \u4e01\u9999\u4e4b\u8def"
    },
    {
        "content": "[P6628 [\u7701\u9009\u8054\u8003 2020 B \u5377] \u4e01\u9999\u4e4b\u8def](https://www.luogu.com.cn/problem/P6628) \n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u6309\u7167\u9898\u76ee\u8981\u6c42\u8d70\u51fa\u7684\u8def\u5f84\u6ee1\u8db3\uff1a\u7ed9\u5b9a $m$ \u6761\u8fb9\u6240\u8fde\u7684\u70b9 $deg \\mod 2=0$ \uff0c\u8d77\u70b9\u548c\u7ec8\u70b9 $deg\\mod 2=1$\u3002\u8fd9\u4e2a\u6027\u8d28\u8ba9\u6211\u4eec\u8054\u60f3\u5230\u6b27\u62c9\u56de\u8def\u3002\n\n\u9996\u5148\u5efa\u51fa\u9898\u76ee\u4e2d\u7ed9\u7684 $m$ \u6761\u8fb9\u548c\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8fb9\uff0c\u7136\u540e\u8d2a\u5fc3\u5730\u628a\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\u548c\u5b83\u7684\u4e0b\u4e00\u4e2a\u70b9\u76f8\u8fde\uff1b\u5982\u679c\u8fd9\u4f1a\u4f7f\u4e0b\u4e00\u4e2a\u70b9\u53d8\u6210\u5947\u70b9\uff0c\u5c31\u7ee7\u7eed\u628a\u4e0b\u4e00\u4e2a\u70b9\u548c\u4e0b\u4e0b\u4e00\u4e2a\u70b9\u76f8\u8fde\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u6837\u5efa\u8fb9\u7684\u4ee3\u4ef7\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\uff0c\u56e0\u4e3a\u65b0\u5efa\u51fa\u7684\u8fb9\u8fb9\u6743\u90fd\u4e3a1\u4e14\u4e92\u4e0d\u76f8\u4ea4\u3002\u8fd9\u6837\u5c31\u6ee1\u8db3\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u5ea6\u6570\u9650\u5236\u3002\n\n\u4f46\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u8fd9\u6837\u5efa\u8fb9\u540e\u56fe\u53ef\u80fd\u4f1a\u4e0d\u8fde\u901a\u3002\u90a3\u4e48\u6211\u4eec\u628a\u5df2\u6709\u7684\u8fde\u901a\u5757\u7528\u5e76\u67e5\u96c6\u7f29\u70b9\uff0c\u7136\u540e\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u8ba9\u56fe\u8fde\u901a\u7684\u6700\u5c0f\u4ee3\u4ef7\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\u5927\u5c0f\u7684\u4e24\u500d\u3002\u603b\u590d\u6742\u5ea6 $O((m+n^2)\\log n)$\n\n\u56e0\u4e3a\u4ee5\u4e0a\u505a\u6cd5\u53ea\u4e0e\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u6709\u5173\uff0c\u6240\u4ee5\u5728\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u771f\u7684\u5efa\u51fa\u9898\u76ee\u7ed9\u5b9a\u7684\u8fb9\uff0c\u53ea\u9700\u8bb0\u5f55\u8fd9\u4e9b\u8fb9\u7ed9\u70b9\u5e26\u6765\u7684\u5ea6\u6570\u5373\u53ef\u3002\n\n\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nnamespace FGF\n{\n\tint n,m,s;\n\tconst int N=2505;\n\tstruct edg{\n\t\tint u,v,w;\n\t\tedg(){};\n\t\tedg(int _u,int _v,int _w):u(_u),v(_v),w(_w){};\n\t};\n\tbool operator <(edg a,edg b)\n\t{\n\t\treturn a.w<b.w;\n\t}\n\tint fa[N],bel[N],sum,du[N];\n\tint find(int x)\n\t{\n\t\treturn x==fa[x]? x:fa[x]=find(fa[x]);\n\t}\n\tvoid work()\n\t{\n\t\tscanf(\"%d%d%d\",&n,&m,&s);\n\t\tfor(int i=1;i<=n;i++)fa[i]=i;\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tint u,v;\n\t\t\tscanf(\"%d%d\",&u,&v);\n\t\t\tdu[u]++,du[v]++;\n\t\t\tsum+=abs(u-v);\n\t\t\tfa[find(u)]=find(v);\n\t\t}\n\t\tfor(int i=1;i<=n;i++)bel[i]=find(i);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(int j=1;j<=n;j++)fa[j]=j;\n\t\t\tdu[s]++,du[i]++;\n\t\t\tfa[find(bel[s])]=find(bel[i]);\n\t\t\tll ans=sum,pre=0;\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif(du[j]&1)\n\t\t\t\t{\n\t\t\t\t\tif(pre)\n\t\t\t\t\t{\n\t\t\t\t\t\tans+=j-pre;\n\t\t\t\t\t\tfor(int k=pre;k<j;k++)\n\t\t\t\t\t\t\tfa[find(bel[k])]=fa[find(bel[j])];\n\t\t\t\t\t\tpre=0;\n\t\t\t\t\t}\n\t\t\t\t\telse pre=j;\n\t\t\t\t}\n\t\t\tvector<edg> g;\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif(du[j])\n\t\t\t\t{\n\t\t\t\t\tif(pre&&find(bel[j])!=find(bel[pre]))\n\t\t\t\t\t\tg.push_back(edg(bel[j],bel[pre],abs(j-pre)));\n\t\t\t\t\tpre=j;\n\t\t\t\t } \n\t\t\tsort(g.begin(),g.end());\n\t\t\tfor(int sz=g.size(),j=0;j<sz;j++)\n\t\t\t\tif(find(g[j].u)!=find(g[j].v))\n\t\t\t\t\tfa[find(g[j].u)]=find(g[j].v),ans+=g[j].w*2;\n\t\t\tdu[s]--,du[i]--;\n\t\t\tprintf(\"%lld \",ans);\n\t\t}\n\t}\n}\nint main()\n{\n\tFGF::work();\n\treturn 0;\n}\n```\n",
        "postTime": 1605579855,
        "uid": 224403,
        "name": "\u6728xx\u6728\u5927",
        "ccfLevel": 9,
        "title": "P6628 [\u7701\u9009\u8054\u8003 2020 B \u5377] \u4e01\u9999\u4e4b\u8def\uff08\u6b27\u62c9\u56de\u8def+\u6700\u5c0f\u751f\u6210\u6811\uff09"
    },
    {
        "content": "\u8003\u8651\u6bcf\u6b21\u8d70\u7684\u8def\u7ebf\uff0c\u5e94\u8be5\u662f\u5fc5\u8d70\u7684\u8fb9\u548c\u81ea\u5df1\u6dfb\u52a0\u7684\u4e00\u4e9b\u8fb9\u7684\"\u6b27\u62c9\u8def\"\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u4e3a\u5947\u70b9\uff0c\u5176\u4ed6\u70b9\u4e3a\u5076\u70b9\uff08\u5148\u8fd9\u6837\u7406\u89e3\uff0c\u6b64\u5904\u6b27\u62c9\u8def\u53ea\u662f\u4e2a\u5e7f\u4e49\u7684\u7406\u89e3\uff0c\u4e0d\u662f\u771f\u6b63\u7684\u6b27\u62c9\u8def\uff09\n\n\u7a0b\u5e8f\u4e2d\u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u5ea6\u6570\u52a0\u4e00\uff0c\u518d\u6309\u987a\u5e8f\u5339\u914d\u76f8\u90bb\u7684\u5947\u70b9\uff0c\u7ed9\u7b54\u6848\u52a0\u4e0a\u8fd9\u6761\u8fb9\uff0c\u8fd9\u6837\u5c31\u7ed3\u675f\u4e86\uff1f\n\n\u8fd8\u6ca1\u5b8c\uff0c\u8fd9\u4e2a\u56fe\u53ea\u662f\u5b9a\u4e49\u4e0a\u6ee1\u8db3\u6b27\u62c9\u8def\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u8fde\u901a\u3002\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u5757\uff0c\u4e4b\u524d\u8fde\u63a5\u7684\u4e24\u5947\u70b9\u4e0e\u4e4b\u95f4\u5076\u70b9\u80fd\u5408\u5e76\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u3002\u6211\u4eec\u5bf9\u6709\u7684\u8fde\u901a\u5757\u4e4b\u95f4\u6c42\u8ddd\u79bb\uff0c\u627e\u51fa\u6700\u5c0f\u751f\u6210\u6811\uff0c\u7ed9\u7b54\u6848\u52a0\u4e0a\u8fb9\u6743\u548c\u7684\u4e24\u500d\uff0c\u663e\u7136\u8fd9\u91cc\u80fd\u6210\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u662f\u7f16\u53f7\u76f8\u90bb\u4e24\u70b9\u95f4\u7684\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5728$O((m+n^2) \\log n)$\u7684\u65f6\u95f4\u5185\u89e3\u51b3\u4e86\u95ee\u9898\n\nUpd on 2020.9.7 \u4ee3\u7801\u8d34\u9519\n\n```cpp\n//\u03bc's forever\n#include <bits/stdc++.h>\n#define ll long long\n#define N 2505\n#define getchar nc\nusing namespace std;\ninline char nc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int read()\n{\n    register int x=0,f=1;register char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    return x*f;\n}\ninline void write(register ll x)\n{\n    if(!x)putchar('0');if(x<0)x=-x,putchar('-');\n    static int sta[20];register int tot=0;\n    while(x)sta[tot++]=x%10,x/=10;\n    while(tot)putchar(sta[--tot]+48);\n}\nint n,m,s,fa[N],in[N];\nvector<int> v[N];\ninline int find(register int x)\n{\n    return x==fa[x]?x:fa[x]=find(fa[x]);\n}\nstruct node{\n    int u,v,w;\n    bool operator < (const node &a) const{\n        return w<a.w;\n    }\n};\nint main()\n{\n    n=read(),m=read(),s=read();\n    ll sum=0;\n    for(register int i=1;i<=n;++i)\n        fa[i]=i;\n    for(register int i=1;i<=m;++i)\n    {\n        int s=read(),t=read();\n        v[s].push_back(t),v[t].push_back(s);\n        sum+=fabs(s-t);\n        fa[find(s)]=find(t);\n    }\n    for(register int i=1;i<=n;++i)\n        in[i]=find(i);\n    for(register int i=1;i<=n;++i)\n    {\n        for(register int j=1;j<=n;++j)\n            fa[j]=j;\n        v[s].push_back(i),v[i].push_back(s);\n        fa[find(in[s])]=find(in[i]);\n        int pre=0;ll ans=sum;\n        for(register int j=1;j<=n;++j)\n            if(v[j].size()&1)\n            {\n                if(pre)\n                {\n                    ans+=j-pre;\n                    for(register int k=pre;k<j;++k)\n                        fa[find(in[k])]=find(in[j]);\n                    pre=0;\n                }\n                else\n                    pre=j;\n            }\n        vector<node> e;\n        for(register int j=1;j<=n;++j)\n            if(v[j].size())\n            {\n                if(pre&&find(in[j])!=find(in[pre]))\n                    e.push_back((node){in[j],in[pre],j-pre});\n                pre=j;\n            }\n        sort(e.begin(),e.end());\n        for(register int j=0;j<e.size();++j)\n            if(find(e[j].u)!=find(e[j].v))\n                fa[find(e[j].u)]=find(e[j].v),ans+=2*e[j].w;\n        write(ans),putchar(' ');\n        v[s].pop_back(),v[i].pop_back();\n    }\n\treturn 0;\n}\n```",
        "postTime": 1593790331,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6628 \u3010[\u7701\u9009\u8054\u8003 2020 B \u5377] \u4e01\u9999\u4e4b\u8def\u3011"
    },
    {
        "content": "\n\n\u611f\u89c9\u8fd9\u9898\u7684\u601d\u8def\u975e\u5e38\u5947\u5999\uff0c\u5c31\u7b97\u4f1a\u505a\u4e86\u4e5f\u5b8c\u5168\u4e0d\u77e5\u9053\u4e3a\u5565\u8981\u8fd9\u4e48\u60f3\u3002\u3002\u3002\n\n## \u9898\u610f\n\n\u6709\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684**\u65e0\u5411**\u5b8c\u5168\u56fe\uff0c\u8fb9 $i\\leftrightarrow j$ \u7684\u8fb9\u6743\u4e3a $|i-j|$\uff0c\u5f3a\u5236\u7ecf\u8fc7\u6307\u5b9a\u7684 $m$ \u6761\u8fb9\uff0c\u6c42\u8d77\u70b9\u4e3a $s$\uff0c\u7ec8\u70b9\u4e3a $i\\in[1,n]$ \u7684\u6700\u77ed\u8def\u5f84\u3002$n\\le 2500,m\\le \\frac{n(n-1)}2$\u3002\n\n## \u601d\u8def\n\n\u8003\u8651\u5728\u4e00\u4e2a**\u53ef\u91cd\u65e0\u5411**\u8fb9\u96c6 $E$\uff0c\u5982\u679c\uff1a\n\n- $\\text{\u5fc5\u987b\u7ecf\u8fc7\u7684}\\ m\\ \\text{\u6761\u8fb9}\\subseteq E$\n- \u5b58\u5728\u4e00\u6761 $s\\leftrightsquigarrow i$ \u7684\u6b27\u62c9\u8def\u5f84\n\n\u90a3\u4e48\u5c31\u6709\u7b26\u5408\u9898\u76ee\u8981\u6c42\u7684\u4e00\u6761\u8def\u5f84\u5b58\u5728\u3002\u7b54\u6848\u5373\u4e3a\u7b26\u5408\u6761\u4ef6\u7684 $\\sum_{i\\in E} w_i$ \u7684\u6700\u5c0f\u503c\u3002\n\n---\n\n\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u5c31\u5148\u628a\u9898\u76ee\u8981\u6c42\u7684 $m$ \u6761\u8fb9\u52a0\u5230 $E$ \u91cc\u9762\uff0c\u8fd9\u6837 $E$ \u5c31\u5929\u7136\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u6761\u4ef6\u3002\n\n\u6b27\u62c9\u8def\u5f84\u4e0d\u592a\u65b9\u4fbf\u641e\uff0c\u6211\u4eec\u4e00\u5f00\u59cb\u5c31\u5f80 $E$ \u4e2d\u52a0\u4e00\u4e2a $s\\leftrightarrow i$\uff0c\u8fd9\u6837\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u5c31\u53d8\u6210\u4e86\u201c\u5b58\u5728\u4e00\u6761\u6b27\u62c9\u56de\u8def\u201d\u3002\n\n---\n\n\u5b58\u5728\u6b27\u62c9\u56de\u8def\u7684\u6761\u4ef6\uff1a\n\n- $2\\mid\\deg(i),\\forall i\\in[1,n]$\n- \u56fe\u8054\u901a\n\n\u4e0b\u9762\u8bf4\u5982\u4f55\u5411 $E$ \u4e2d\u6dfb\u52a0\u82e5\u5e72\u6761\u8fb9\uff0c\u4f7f\u5f97 $E$ \u6ee1\u8db3\u4e0a\u9762\u4e24\u4e2a\u6761\u4ef6\uff0c\u5e76\u4e14\u8ba9\u8fd9\u4e9b\u8fb9\u7684\u8fb9\u6743\u548c\u6700\u5c0f\uff08\u5148\u8bf4\u505a\u6cd5\uff0c\u518d\u5199\u8bc1\u660e\uff09\n\n### \u6062\u590d\u5ea6\u6570\u5947\u5076\u6027\n\n\u628a\u6240\u6709 $2\\nmid\\deg(i)$ \u7684 $i$ \u62ff\u51fa\u6765\uff0c\u6309\u7f16\u53f7\u6392\u5e8f\u3002\u7136\u540e\u628a\u76f8\u90bb\u7684\u5947\u5ea6\u70b9\u4e24\u4e24\u914d\u5bf9\uff08\u7b2c $2k$ \u5c0f\u7684\u548c\u7b2c $2k-1$ \u5c0f\u7684\u914d\u5bf9\uff09\u8fde\u8fb9\uff08\u56fe\u4e2d\u7ea2\u8272\u4e3a\u5947\u5ea6\u70b9\uff0c\u84dd\u8272\u4e3a\u52a0\u7684\u8fb9\uff09\uff1a\n\n![](https://pic.imgdb.cn/item/6221b6955baa1a80ab63abeb.jpg)\n\n> \u6ce8\uff1a\u505a\u6cd5\u4e2d\u6240\u8bf4\u7684\u8fde\u8fb9\u5e76\u4e0d\u662f\u8bf4\u76f4\u63a5\u8fde $u\\leftrightarrow v$\u3002\u800c\u662f\u8fde\uff08\u8fd9\u6837\u8fde\u8fb9\u663e\u7136\u66f4\u4f18\uff09\uff1a\n>\n> $$\n\\begin{aligned}\nu&\\leftrightarrow u+1\\cr\nu+1&\\leftrightarrow u+2\\cr\nu+2&\\leftrightarrow u+3\\cr\n\\vdots \\cr\nv-1&\\leftrightarrow v\n\\end{aligned}\n$$\n\n### \u8054\u901a\u6027\n\n\u5efa\u5b8c\u524d\u6587\u6240\u8ff0\u7684\u8fb9\u4e4b\u540e\uff0c\u56fe\u7f29\u6210\u82e5\u5e72\u8fde\u901a\u5757\u3002\u53ea\u8981\u518d\u52a0\u4e00\u4e9b\u8fb9\uff0c\u628a\u8fd9\u4e9b\u8054\u901a\u5757\u8054\u901a\u8d77\u6765\u5373\u53ef\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u662f\u4e00\u4e2a\u7c7b\u4f3c\u6700\u5c0f\u751f\u6210\u6811\u7684\u4e1c\u897f\uff1a\n\n![](https://pic.imgdb.cn/item/6221bb2c5baa1a80ab6775a2.jpg)\n\n\u628a\u6240\u6709 $\\deg(i)\\neq0$ \u7684 $i$ \u62ff\u51fa\u6765\u6309\u7f16\u53f7\u6392\u5e8f\uff08\u5ea6\u6570\u4e3a 0 \u7684\u70b9\u4e0d\u9700\u8981\u88ab\u8054\u901a\uff09\uff0c\u628a\u76f8\u90bb\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u7684\u8fb9\u62ff\u53bb\u505a Kruskal \u5373\u53ef\u3002\u6240\u6709\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u7684\u8fb9\u90fd\u4f1a\u88ab\u7ecf\u8fc7\u4e24\u6b21\u3002\n\n\u590d\u6742\u5ea6 $O(n^2 \\log n+m)$\u3002\n\n## \u8bc1\u660e\n\n\u4e0b\u8bc1\u4efb\u4f55\u4e00\u7ec4\u6700\u4f18\u89e3 $E^{\\prime}$ \u5fc5\u5b9a\u53ef\u4ee5\u8f6c\u5316\u6210\u8d2a\u5fc3\u65b9\u6cd5\u5f97\u5230\u7684\u89e3 $E$\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u628a\u521d\u59cb\u52a0\u7684\u8fb9\uff08\u9898\u76ee\u8981\u6c42\u7684 $m$ \u6761\u8fb9\u548c $s\\leftrightarrow i$\uff09\u79f0\u4e3a\u9ed1\u8fb9\uff0c\u5176\u4f59\u7684\u8fb9\u53eb\u767d\u8fb9\u3002\n\n### \u5f15\u7406\n\n\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a $E$ \u6ee1\u8db3\uff1a\n\n- $E$ \u5305\u542b\u6307\u5b9a\u7684 $m+1$ \u6761\u9ed1\u8fb9\n- $E$ \u4e2d\u7684\u767d\u8fb9\u8fb9\u6743\u90fd\u4e3a $1$\n- $E$ \u4e2d\u6ca1\u6709\u767d\u8272\u91cd\u8fb9\n- \u5728\u53ea\u8003\u8651 $E$ \u4e2d\u7684\u8fb9\u65f6\uff0c\u6ee1\u8db3 $2\\mid\\deg(i)$\n\n\u6bd4\u8f83\u663e\u7136\uff0c\u8bc1\u660e\u7565\u3002\n\n### \u539f\u7ed3\u8bba\u8bc1\u660e\n\n- \u9996\u5148\uff0c\u628a $E^{\\prime}$ \u6240\u6709\u767d\u8fb9 $u\\leftrightarrow v$ \u90fd\u62c6\u6210\u82e5\u5e72 $i\\leftrightarrow i+1$ \u7684\u8fb9\uff0c\u663e\u7136\u4e0d\u52a3\uff08\u8be6\u89c1\u524d\u6587\uff09\u3002\n- \u7136\u540e\uff0c\u91cd\u590d\u4ee5\u4e0b\u8fc7\u7a0b\uff0c\u76f4\u5230 $E^{\\prime}$ \u4e2d\u4e0d\u5269\u4e0b\u4efb\u4f55\u4e00\u5bf9\u767d\u8272\u91cd\u8fb9\uff1a\n  - \u4ece $E^{\\prime}$ \u627e\u5230\u4e00\u5bf9\u767d\u8272\u91cd\u8fb9\n  - \u628a\u8fd9\u5bf9\u8fb9\u4ece $E^{\\prime}$ \u4e2d\u5220\u9664\n  - \u628a\u8fd9\u6761\u8fb9\u52a0\u5165 $G$ \u4e2d\uff08\u53ea\u52a0\u4e00\u6b21\u5373\u53ef\uff09\n  \n> \u611f\u6027\u7406\u89e3\uff1a\n>\n> - $E$ \u4e2d\u7684\u767d\u8fb9\u5bf9\u5e94**\u6062\u590d\u5ea6\u6570\u5947\u5076\u6027\u8fc7\u7a0b**\u4e2d\u52a0\u7684\u8fb9\n> - $G$ \u4e2d\u7684\u8fb9\u5bf9\u5e94\u505a**\u6700\u5c0f\u751f\u6210\u6811\u8fc7\u7a0b**\u4e2d\u52a0\u7684\u8fb9\n\n\u6b64\u65f6\uff0c\u5982\u679c\u53ea\u8003\u8651 $E^{\\prime}$ \u4e2d\u7684\u8fb9\uff0c\u5fc5\u7136\u6ee1\u8db3 $2\\mid\\deg(i)$\u3002\n\n\u7531\u5f15\u7406\uff0c\u6b64\u65f6 $E^{\\prime}$ \u4e2d\u7684\u8fb9\uff0c\u5fc5\u5b9a\u4e0e**\u6062\u590d\u5b8c\u5ea6\u6570\u5947\u5076\u6027**\u4e4b\u540e\uff0c$E$ \u4e2d\u7684\u8fb9\u76f8\u540c\u3002\n\n$G$ \u4e2d\u7684\u8fb9\u7684\u76ee\u7684\u5c31\u662f\u628a $E^{\\prime}$ \u5f62\u6210\u7684\u8fde\u901a\u5757\u7f29\u5230\u4e00\u8d77\uff0c\u4e0e\u8d2a\u5fc3\u505a\u6cd5\u4e2d\u7684 MST \u662f\u7b49\u4ef7\u7684\u3002\n\n\u8bc1\u6bd5\u3002\n",
        "postTime": 1646399035,
        "uid": 124740,
        "name": "ethan_zhou",
        "ccfLevel": 8,
        "title": "\u3010\u9898\u89e3\u3011\u4e01\u9999\u4e4b\u8def"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6628)\n \n\u8fd9\u4e2a\u9898\u7adf\u7136\u662f B \u5377 Day2T3\uff08~~\u8ba9\u6211\u4eec\u770b\u770b\u4eca\u5e74\u7684\u6eda\u699c~~\uff09\n\n\u611f\u8c22 \u93e1\u97f3\u30ea\u30f3 \u548c Forward_ \u4e24\u4f4d\u795e\u4ed9\u89e3\u7b54\u4e86\u849f\u84bb\u7684\u7591\u60d1\u3002\n\n\u8fdb\u5165\u6b63\u9898\u3002\n\n\u770b\u5230\u7ecf\u8fc7 $m$ \u6761\u8fb9**\u81f3\u5c11\u4e00\u6b21**\u4f1a\u5f88\u719f\u6089\uff0c\u56e0\u4e3a\u4f17\u6240\u5468\u77e5\u5982\u679c\u662f**\u6070\u597d\u4e00\u6b21**\u90a3\u5c31\u662f\u4e2a\u6b27\u62c9\u8def\u9898\u3002\u7136\u540e\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u5b83\u5176\u5b9e\u8fd8\u662f\u6b27\u62c9\u8def\u95ee\u9898\u3002\u53ea\u8981\u628a\u8fd9\u4e2a\u95ee\u9898\u770b\u6210\u81f3\u5c11\u8981\u6dfb\u52a0\u591a\u5c11\u6761\u8fb9\u624d\u4f1a\u51fa\u6b27\u62c9\u8def\u5c31\u884c\u4e86\u3002\u8fd9\u6837\u7684\u8bdd\u4e00\u6761\u5173\u952e\u8fb9\u8d70\u4e86\u4e09\u6b21\u76f8\u5f53\u4e8e\u539f\u57fa\u7840\u6dfb\u52a0\u4e24\u6761\u8fb9\u3002\n\n\u6240\u4ee5\u6211\u4eec\u679a\u4e3e\u7ec8\u70b9 $i$. \u7136\u540e\u6784\u9020\u4e00\u4e2a\u6700\u5c0f\u7684\u56fe\u4f7f\u5f97\u5b58\u5728 $s->i$ \u7684\u6b27\u62c9\u8def\u3002\u8fd9\u4f3c\u4e4e\u5c31\u53ef\u4ee5\u76f4\u63a5\u9488\u5bf9\u6027\u8d28\u641e\u4e86\u3002\u4f46\u662f\u6b27\u62c9\u8def\u5e76\u4e0d\u597d\u641e\u56e0\u4e3a\u6700\u540e\u8981\u5269\u4e0b\u4e24\u4e2a\u5947\u70b9\uff0c\u4e0d\u59a8\u8003\u8651 $i->s$ \u8fde\u865a\u8fb9\uff0c\u8fd9\u6837\u7684\u8bdd\u539f\u6765\u7684\u56de\u8def\u5176\u5b9e\u5c31\u53d8\u6210\u4e86 **$s$ \u4e3a\u8d77\u70b9\u7684\u6b27\u62c9\u56de\u8def**\u3002\u53c8\u56e0\u4e3a\u5982\u679c\u6709\u6b27\u62c9\u56de\u8def\u90a3\u4e48\u4efb\u4f55\u4e00\u4e2a\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u8d77\u70b9\uff0c\u5b9e\u8d28\u4e0a\u5c31\u662f\u8ba9\u8fd9\u4e2a\u56fe\uff08\u5f53\u7136\u5b64\u7acb\u70b9\u6392\u9664\uff09\u7684\u6bcf\u4e2a\u70b9\u5ea6\u6570\u90fd\u4e3a\u5076\u6570\u4e14**\u8fde\u901a**\u3002\u8fd9\u4e2a\u9898\u4f3c\u4e4e\u5927\u5bb6\u90fd\u5f88\u719f\u6089\u4e86\uff08\n\n\u987a\u53e3\u8bf4\u4e00\u53e5\uff0c\u4e00\u822c\u56fe\u4e0a\u8fd9\u4e2a\u95ee\u9898\u4f3c\u4e4e\u4e0d\u662f\u5f88\u53ef\u505a\u3002\u4f46\u662f\u6ce8\u610f\u5230\u9898\u76ee\u7ed9\u7684\u8fb9\u6743 $\\mid i-j \\mid$ \u8fd9\u4e2a\u4e1c\u897f\uff08\u5c24\u5176\u662f\u5728\u56fe\u4e0a\uff0c\u6bd4\u5982\u4f3c\u4e4e\u4f18\u5316\u5efa\u56fe\u6700\u77ed\u8def\u91cc\uff09\u4e00\u822c\u90fd\u6709\u5f88\u5947\u7279\u7684\u6027\u8d28\uff0c\u4e5f\u662f\u672c\u9898\u7684\u5173\u952e\u3002\n\n\u6839\u636e\u6784\u9020\u6b27\u62c9\u56fe\u7684\u5927\u4f17\u5957\u8def\uff08\u8be6\u89c1\uff09\u3002\u6211\u4eec\u4e00\u822c\u540e\u8003\u8651\u8fde\u901a\u6027\u95ee\u9898\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u4e2a\u5f88\u5947\u7279\u7684\u6027\u8d28\uff1a\u5982\u679c\u6211\u4eec\u8fde\u4e86 $(i,j)\\,,i<=j$ \u90a3\u4e48\u5b83\u4e0d\u4f18\u4e8e\u8fde $(i,i+1),(i+1,i+2),...,(j-1,j)$. \u8fd9\u6837\uff0c\u518d\u539f\u6709\u957f\u5ea6\uff0c\u8fd8\u6709 $(i,j)$ \u8fde\u901a\u7684\u57fa\u7840\u4e0a\u8fd8\u8ba9\u66f4\u591a\u70b9\u8fde\u901a\u4e86\u8d77\u6765\uff0c\u540c\u65f6\u4e2d\u95f4\u90a3\u4e9b\u70b9\u56e0\u4e3a\u8fde\u4e24\u6761\u8fb9\u5947\u5076\u6027\u4e0d\u6539\u53d8\u3002\u76f8\u5f53\u4e8e\u5728**\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd**\u7684\u60c5\u51b5\u4e0b\u51cf\u5c11\u4e86\u8fde\u901a\u5757\u6570\u76ee\u51cf\u8f7b\u4e86\u6700\u540e\u8fde\u901a\u5757\u4e4b\u95f4\u8fde\u8fb9\u7684\u96be\u5ea6\u3002\u90a3\u4e48\u8003\u8651\u82e5\u5e72\u4e2a\u5947\u70b9 $a_1,a_2,...,a_n(2\\mid n)$, \u663e\u7136\u6ee1\u8db3\u5ea6\u6570\u8981\u6c42\u7684\u6700\u4f18\u7b56\u7565\u5c31\u662f $[a_1,a_2]$ \u50cf\u521a\u624d\u90a3\u6837\u8fde\u51fa\u4e00\u6761\u94fe\uff0c$[a_3,a_4]$ \u8fde\u4e00\u6761\u94fe.... \uff08\u5f53\u7136\u8fd9\u91cc $a$ \u662f\u6392\u5e8f\u8fc7\u7684\uff09\u3002\n\n\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u6ca1\u6709\u4fdd\u8bc1\u5176\u8fde\u901a\u6027\u3002\u6211\u4eec\u9700\u8981\u4e00\u9897\u751f\u6210\u6811\uff0c\u7136\u540e\u4fdd\u8bc1\u5ea6\u6570\u4e3a\u5076\u6570\u6240\u4ee5\u4e58\u4e8c\u3002\u8fd9\u4e2a\u751f\u6210\u6811\u7684\u6c42\u89e3\u770b\u4f3c\u662f $O(n^2)$ \u5f80\u4e0a\u7684\uff08\u8fb9\u6570\uff09\u3002\u4f46\u662f\u5df2\u7ecf\u8bf4\u660e\u4e86\u53ea\u8fde\u76f8\u90bb\u4e24\u4e2a\u70b9\u5c31\u4e00\u5b9a\u53ef\u4ee5\u641e\u51fa\u4e00\u4e2a\u6700\u4f18\u89e3\u6240\u4ee5\u5176\u5b9e\u53ea\u6709 $n-1$ \u6761\u8fb9\uff0c\u5373 $a$ \u4e2d\u76f8\u90bb\u4e24\u70b9\u3002\n\n\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u5927\u6982\u662f $O(n^2 \\log n)$ \u7684\u3002\n\n\u603b\u7ed3\u4e00\u4e0b trick\uff1a\n\n- \u201c\u81f3\u5c11\u8d70\u4e00\u6b21\u201d \u4f9d\u65e7\u53ef\u4ee5\u8f6c\u6362\u6210\u6784\u9020\u6b27\u62c9\u56fe\n\n- \u6b27\u62c9\u56de\u8def\u8f6c\u6b27\u62c9\u8def\u7684\u6280\u5de7\n\n\uff08\u5269\u4e0b\u7684\u90fd\u662f\u9898\u76ee\u91cc\u7684\u72ec\u7279\u6027\u8d28\u4e86\uff09\n\n\u6709\u4e9b\u7ec6\u8282\u8fd8\u662f\u5f97\u597d\u597d\u5904\u7406\uff0c\u6bd4\u5982 $m$ \u6761\u8fb9\u7684\u5e76\u67e5\u96c6\u5408\u5e76\u4e0d\u9700\u8981\u6bcf\u6b21\u7b97\u7b54\u6848\u90fd\u505a\u4e0d\u7136 T \u98de\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(ll i=(a);i<=(b);i++)\n#define per(i,a,b) for(ll i=(a);i>=(b);i--)\n#define op(x) ((x&1)?x+1:x-1)\n#define odd(x) (x&1)\n#define even(x) (!odd(x))\n#define lc(x) (x<<1)\n#define rc(x) (lc(x)|1)\n#define lowbit(x) (x&-x)\n#define Max(a,b) (a>b?a:b)\n#define Min(a,b) (a<b?a:b)\n#define next Cry_For_theMoon\n#define il inline\n#define pb(x) push_back(x)\n#define is(x) insert(x)\n#define sit set<int>::iterator\n#define mapit map<int,int>::iterator\n#define pi pair<int,int>\n#define ppi pair<int,pi>\n#define pp pair<pi,pi>\n#define fr first\n#define se second\n#define vit vector<int>::iterator\n#define mp(x,y) make_pair(x,y)\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned int uint;\ntypedef double db;\nusing namespace std;\nconst ll MAXN=3010,INF=1e18;\nint n,m,s,u,v;\nint fa[MAXN],sz[MAXN],vis[MAXN],fa2[MAXN];\nll sum;\nil ll getdis(int x,int y){return abs(x-y);}\nint Find(int fa[],int x){if(fa[x]==x)return x;return fa[x]=Find(fa,fa[x]);}\nvoid Merge(int fa[],int x,int y){fa[Find(fa,x)]=Find(fa,y);}\nset<int>S;\nint V[MAXN],size[MAXN],tot;\nstruct Edge{\n\tint u,v,w;\n\tbool operator<(const Edge& e2)const{return w<e2.w;}\n}e[MAXN];\nll solve(set<int> s,int start,int end){\n\t//\u56fe(s)\u4e2d\uff0cstart->end\u7684\u6b27\u62c9\u8def\u5b58\u5728\u7684\u6700\u77ed\u8d21\u732e\n\ttot=0;for(sit it=s.begin();it!=s.end();it++){V[++tot]=*it;}\n\trep(i,1,n)fa2[i]=Find(fa,i),size[i]=sz[i];\n\tll ret=0,pre=0;\n\tsize[start]++;size[end]++;Merge(fa2,start,end);\n\trep(i,1,tot){\n\t\tif(even(size[V[i]]))continue;\n\t\tif(!pre)pre=i;\n\t\telse{\n\t\t\t//V[pre]\u548cV[i]\u8fde\u8fb9 \n\t\t\tret+=getdis(V[pre],V[i]);\n\t\t\trep(k,pre,i)Merge(fa2,V[k],V[i]);\n\t\t\tpre=0;\n\t\t}\n\t}\n\t//\u6c42\u8fde\u901a\u5757mst \n\trep(i,1,tot-1){e[i]=(Edge){V[i],V[i+1],getdis(V[i],V[i+1])};}\n\tsort(e+1,e+tot);\n\trep(i,1,tot-1){\n\t\tint u=e[i].u,v=e[i].v,w=e[i].w;\n\t\tif(Find(fa2,u)!=Find(fa2,v)){\n\t\t\tret+=w*2;\n\t\t\tMerge(fa2,u,v);\n\t\t}\n\t}\n\treturn ret; \n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&s);vis[s]=1;S.is(s);\n\trep(i,1,n)fa[i]=i;\n\trep(i,1,m){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tsz[u]++;sz[v]++;vis[u]=vis[v]=1;S.is(u);S.is(v);\n\t\tMerge(fa,u,v);sum+=getdis(u,v);\n\t}\n\trep(i,1,n){\n\t\tS.is(i);\n\t\t//s->i\u7684\u6700\u77ed\u8ddd\u79bb\n\t\tprintf(\"%lld \",sum+solve(S,s,i));\n\t\tif(!vis[i])S.erase(i);\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1620307654,
        "uid": 340632,
        "name": "Cry_For_theMoon",
        "ccfLevel": 8,
        "title": "\u3010\u7701\u9009\u8054\u8003 2020 B\u5377\u3011\u4e01\u9999\u4e4b\u8def"
    },
    {
        "content": "### \u9898\u5916\u8bdd\n\u8fd9\u4e2a\u9898\u5c31\u662f\u975e\u5e38\u6bd2\u7624\uff0c\u6211\u60f3\u4e86\u4e00\u4e0b\u5348\uff0c\u5199\u4e86\u4e00\u665a\u4e0a\u7ec8\u4e8e\u5c06\u5176 A \u6389\u3002\n### \u9898\u610f\n\u7ed9\u5b9a\u6e90\u70b9\uff0c\u6c42\u6e90\u70b9\u81f3\u6bcf\u4e2a\u70b9\u5fc5\u987b\u7ecf\u8fc7 $m$ \u6761\u8fb9\uff0c\u8fd9 $m$ \u6761\u8fb9\u662f\u7ed9\u5b9a\u7684\uff0c\u6c42\u5b83\u4eec\u7684\u6700\u77ed\u8def\u3002\n### \u601d\u8def\n\u56e0\u4e3a\u8fd9 $m$ \u6761\u8fb9\u662f\u5fc5\u987b\u9009\u7684\uff0c\u6240\u4ee5\u8bf4\u4e00\u5f00\u59cb\u5c31\u53ef\u4ee5\u5c06\u5176\u52a0\u5165\u5e76\u67e5\u96c6\u5185\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u64cd\u4f5c\u3002 \n\n\u7136\u540e\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u4f60\u6700\u540e\u4e00\u5b9a\u662f\u4ece $s$ \u5411 $t$ \u7684\u4e00\u6761\u6b27\u62c9\u8def\u5f84\uff0c\u7136\u540e\u4f60\u5c31\u662f\u8bf4\u5c06 $s$ \u5411 $i$ \u53bb\u8fde\u8fb9\uff0c\u8fd9\u65e0\u7591\u5c31\u5f62\u6210\u4e86\u6b27\u62c9\u56de\u8def\u4e86\uff0c\u7136\u540e\u6211\u4eec\u5c31\u662f\u53bb\u8981\u6784\u9020\u6700\u5c0f\u7684\u6b27\u62c9\u56de\u8def\uff0c\u90a3\u6211\u4eec\u5148\u5c06\u5947\u70b9\u7ed9\u6d88\u6389\uff0c\u6574\u4e2a\u56fe\u5185\u6211\u4eec\u5c06\u76f8\u90bb\u7684\u5947\u70b9\u8fdb\u884c\u8fde\u8fb9\u80af\u5b9a\u662f\u4f18\u7684\uff0c\u987a\u4fbf\u628a\u4e2d\u95f4\u7684\u70b9\u7ed9\u8fde\u4e0a\uff0c\u8fd9\u6837\u4f60\u5408\u5e76\u5230\u4e86\u4e00\u4e2a\u8fde\u901a\u5757\u5185\uff0c\u7136\u540e\u6211\u4eec\u518d\u5bf9\u4e0d\u540c\u7684\u8fde\u901a\u5757\u5185\u8fdb\u884c\u8fde\u8fb9\u5c31\u884c\uff0c\u7136\u540e\u4e5f\u975e\u5e38\u597d\u505a\uff0c\u8dd1\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u5c31\u884c\u3002\n\n### \u7ec6\u8282\n\u8fd9\u9898\u7ec6\u8282\u5f88\u591a\uff0c\u4e5f\u65e0\u6127\u80fd\u653e\u5230\u8054\u5408\u7701\u9009\u6700\u540e\u4e00\u9898\u3002\u7b2c\u4e00\u4e2a\u7ec6\u8282\uff0c\u4e3a\u4ec0\u4e48\u6700\u540e\u8981\u52a0\u8fdb\u6700\u5c0f\u751f\u6210\u6811\u5185\u7684\u8fb9\u6743\u4e58 2\uff0c\u56e0\u4e3a\u662f\u8fd9\u6837\u5b50\u7684\u53ea\u6709\u8fd9\u6837\u624d\u80fd\u6784\u6210\u6b27\u62c9\u56de\u8def\uff0c\u5426\u5219\u662f\u6784\u4e0d\u6210\u7684\uff08\u5947\u70b9\u5fc5\u987b\u6ca1\u6709\uff0c\u82e5\u6709\u7684\u8bdd\uff0c\u5c31\u5fc5\u987b\u6784\u9020\u51fa\u73af\uff0c\u7136\u540e\u4f60\u53d1\u73b0\u6784\u6210\u73af\u5176\u5b9e\u8ddf\u6211\u8fd9\u79cd\u60c5\u51b5\u662f\u4e00\u6837\u7684\uff0c\u5bf9\u4e0d\uff09\u3002\n\n\u6ce8\u610f\u7684\u662f\uff0c\u6700\u540e\u53ea\u8981\u5c3d\u91cf\u4e0d\u9009\u8fde\u901a\u5757\u4e4b\u5916\u7684\u65e0\u610f\u4e49\u7684\u8fb9\uff0c\u6240\u4ee5\u8bf4\u6211\u5c31\u7edf\u8ba1\u4e00\u4e0b\u6240\u6709\u7684\u8fde\u901a\u5757\u5185\u5408\u5e76\u7b54\u6848\u5c31\u884c \u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int maxn=25e2+5;\nstruct node{int from,to,weight;};\nvector<node>G;\nint f[maxn],degree[maxn],n,m,s,u,v,sum,ff[maxn];\nvector<int>edge[maxn],V;\nvoid init(int n){for(int i=1;i<=n;++i) f[i]=i;}\nint findf(int i){return f[i]==i?f[i]:f[i]=findf(f[i]);}\nvoid merge(int i,int j){f[findf(i)]=findf(j);}\nbool cmp(node a,node b){return a.weight<b.weight;}\nsigned main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n    cin>>n>>m>>s;init(n);\n    for(int i=1;i<=m;++i){\n        cin>>u>>v;\n        degree[u]++,degree[v]++;\n        sum+=abs(u-v);//\u52a0\u5165\u7b54\u6848\n        merge(u,v);\n    }\n    degree[s]++;       \n    for(int i=1;i<=n;++i) ff[i]=f[i];//\u5907\u4efd \n    for(int i=1;i<=n;++i){\n        for(int j=1;j<=n;++j) f[j]=ff[j];\n        degree[i]++;\n        int ans=sum,pre=0;V.clear();\n        for(int j=1;j<=n;++j){\n            if(degree[j]) V.push_back(j);//\u4f60\u6700\u540e\u88ab\u8ba1\u7b97\u7684\u80af\u5b9a\u662f\u4e00\u5f00\u59cb\u5c31\u6709\u7684\n        }\n        for(int j=1;j<=n;++j){\n            if(degree[j]&1){\n                if(!pre) pre=j;\n                else{\n                    ans+=(j-pre);//\u6211\u8981\u5bf9\u5b83\u4eec\u8fdb\u884c\u5408\u5e76 \n                    for(int k=pre+1;k<=j;++k) merge(k,k-1);\n                    pre=0;\n                }\n            }\n        }\n        G.clear();\n        for(int j=0;j+1<V.size();++j){\n            if(findf(V[j])!=findf(V[j+1])) {\n                G.push_back((node){V[j],V[j+1],V[j+1]-V[j]});\n            }\n        }\n        sort(G.begin(),G.end(),cmp);\n        for(auto [x,y,z]:G){\n            if(findf(x)!=findf(y)){\n                merge(x,y);ans+=2*z;\n            }\n        }\n        degree[i]--;\n        printf(\"%lld \",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1678542849,
        "uid": 660562,
        "name": "EZ_XHX",
        "ccfLevel": 0,
        "title": "P6628 \u4e01\u9999\u4e4b\u8def \u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u5bf9 $m$ \u6761\u7279\u6b8a\u8fb9\u5efa\u56fe\uff0c\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u4ece\u8fde\u901a\u5757\u5185\u67d0\u4e2a\u70b9\u5f00\u59cb\u8d70\u904d\u8fde\u901a\u5757\u5185\u6240\u6709\u8fb9\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u663e\u7136\uff0c\u5982\u679c\u56fe\u4e2d\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u90a3\u4e48\u6700\u4f18\u65b9\u6848\u5c31\u662f\u6cbf\u7740\u6b27\u62c9\u56de\u8def\u8d70\u4e00\u904d\u3002\n\n\u5982\u679c\u6ca1\u6709\u6b27\u62c9\u8def\u5f84\u5462\uff1f\u6211\u4eec\u53d1\u73b0\u6b64\u65f6\u76f8\u5f53\u4e8e\u6709 $2k$ \u4e2a\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\uff0c\u5176\u4e2d $k>1$\u3002\u5c3d\u7ba1\u6b64\u65f6\u4e0d\u5b58\u5728\u6b27\u62c9\u8def\u5f84\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u4e24\u4e2a\u70b9 $i,j$ \u4e4b\u95f4\u8fdb\u884c \u201c \u8df3\u8dc3 \u201c\uff0c\u9700\u8981\u82b1\u8d39 $|i-j|$ \u7684\u4ee3\u4ef7\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8df3\u8dc3 $k$ \u6b21\uff0c\u5373\u53ef\u5f97\u5230\u4e00\u6761\u6b27\u62c9\u56de\u8def\u3002\n\n\u73b0\u5728\u6211\u4eec\u8981\u7528 $k$ \u6761\u8fb9\u8fde\u4e0a $2k$ \u4e2a\u70b9\uff0c\u4e0d\u8fc7\u56fe\u4e0d\u662f\u4e8c\u5206\u56fe\u3002\u628a\u8fd9 $2k$ \u4e2a\u70b9\u6309\u7167\u7f16\u53f7\u6392\u5e8f\uff0c\u90a3\u4e48\u6700\u4f18\u65b9\u6848\u4e00\u5b9a\u662f\u5c06 $(x_1,x_2),(x_3,x_4),\\cdots,(x_{2k-1},x_{2k})$ \u8fd9\u6837\u4e24\u4e24\u914d\u5bf9\u3002\n\n\u4f3c\u4e4e\u6f0f\u6389\u4e86\u4ec0\u4e48\uff01\u4e3a\u4ec0\u4e48\u4e0d\u53ef\u80fd\u4ece\u67d0\u4e2a\u70b9\u4e0d\u8fdb\u884c\u8df3\u8dc3\uff0c\u800c\u662f\u6cbf\u7740\u67d0\u4e9b\u522b\u7684\u8def\u5f84\u76f4\u63a5\u904d\u5386\u5269\u4e0b\u7684\u8fb9\u5462\uff1f\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u5f20\u56fe\u7684\u6027\u8d28\u975e\u5e38\u597d\uff0c\u5b83\u6ee1\u8db3**\u4efb\u610f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84\u4e0a\u8fb9\u6743\u548c\u76f8\u7b49**\uff01\u56e0\u6b64\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u4e0d\u7ba1\u662f\u4ec0\u4e48\u65b9\u6848\uff0c\u5176\u5b9e\u548c\u6211\u4eec\u7684\u65b9\u6848\u57fa\u672c\u662f\u7b49\u4ef7\u7684\u3002\n\n\u73b0\u5728\u56fe\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u8fde\u901a\u5757\uff0c\u8fd8\u6709\u4ece $s$ \u5f00\u59cb\uff0c\u5230 $i$ \u7ed3\u675f\u7684\u9650\u5236\uff0c\u600e\u4e48\u505a\u5462\uff1f\u7b80\u5355\u601d\u8003\u4e00\u4e0b\uff0c\u53d1\u73b0\u76f8\u5f53\u4e8e\u8981\u52a0\u82e5\u5e72\u8fb9\uff0c\u4f7f\u5f97 $s,i$ \u7684\u5ea6\u6570\u90fd\u53d8\u6210\u5947\u6570\uff0c\u5176\u4ed6\u7684\u5747\u4e3a\u5076\u6570\uff1b\u6211\u4eec\u53ea\u9700\u68c0\u67e5 $s,i$ \u7684\u5ea6\u6570\u7684\u5947\u5076\u6027\uff0c\u636e\u6b64\u5224\u65ad\u662f\u5426\u8981\u5c06 $s,i$ \u52a0\u5165\u5e8f\u5217\u4e00\u8d77\u6392\u5e8f\uff0c\u5373\u53ef\u3002\n\n\u52a0\u5b8c\u8fb9\u4e4b\u540e\u53ef\u80fd\u539f\u56fe\u4ecd\u7136\u4e0d\u8fde\u901a\uff0c\u9996\u5148\u5982\u679c\u6211\u4eec\u65b0\u52a0\u4e86\u4e00\u6761\u8fb9 $(x,y)$\uff0c\u90a3\u4e48\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5728\u4ece $x\\to y$  \u7684\u65f6\u5019\u8df3\u5230\u67d0\u4e2a\u4e2d\u95f4\u70b9\uff0c\u4ece\u8fd9\u91cc\u904d\u5386\u5b83\u7684\u8fde\u901a\u5757\uff0c\u518d\u8fd4\u56de $y$ \u70b9\uff1b\u56e0\u6b64 $(x,x+1),(x+1,x+2),\\cdots,(y-1,y)$ \u8fd9\u4e9b\u8fb9\u90fd\u88ab\u6211\u4eec\u52a0\u4e0a\u4e86\uff1b\u5982\u679c\u6b64\u65f6\u539f\u56fe\u4ecd\u7136\u4e0d\u8fde\u901a\uff0c\u8003\u8651\u6c42\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u4f7f\u56fe\u8054\u901a\uff0c\u5373\u53ef\u3002\u6ce8\u610f\u5230\u6700\u5c0f\u751f\u6210\u6811\u7684\u53ef\u884c\u8fb9\u53ea\u5728\u76f8\u90bb\u7684\u8fde\u901a\u5757\u4e4b\u95f4\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u4ecd\u7136\u6709\u4fdd\u8bc1\u3002\n\n\u4f46\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u53ef\u80fd\u662f\u5728\u5148\u524d\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u7ea6\u675f\u7684\u65f6\u5019\uff0c\u6539\u53d8\u4e00\u4e9b\u65b9\u6848\uff0c\u4f7f\u5176\u6ee1\u8db3\u8fde\u901a\u6027\u7684\u9650\u5236\u5462\uff1f\u8003\u8651\u56db\u4e2a\u70b9 $a<b<c<d$\uff0c\u4e00\u5f00\u59cb\u7684\u65b9\u6848\u662f\u8fde\u8fb9 $(a,b),(c,d)$\uff0c\u5982\u679c\u4e0d\u8fde\u901a\uff0c\u6211\u4eec\u8fd8\u4f1a\u8865\u4e0a\u8fb9 $(b,c)$\uff0c\u4ee3\u4ef7\u662f $b-a+d-c+2(c-b)=d-a+c-b$\uff1b\u5982\u679c\u6539\u53d8\u65b9\u6848\u4e3a $(a,d),(b,c)$\uff0c\u53d1\u73b0\u6b64\u65f6\u7684\u4ee3\u4ef7\u4ecd\u7136\u662f $d-a+c-b$\u3002\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u8fd9\u4e24\u79cd\u65b9\u6848\u672c\u8d28\u662f\u76f8\u540c\u7684\u3002\n\n\u81f3\u6b64\u672c\u9898\u5f97\u5230\u5b8c\u5168\u89e3\u51b3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u663e\u7136\u53ef\u4ee5\u505a\u5230 $O(n^2\\log n+m)$\uff0c\u6ce8\u610f\u5230\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u6743\u4e0d\u8d85\u8fc7 $n$\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u6392\u5e8f\uff0c\u505a\u5230 $O(n^2+m)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\tfor(;(c<'0'||c>'9');c=getchar()){if(c=='-')f=-1;}\n\tfor(;(c>='0'&&c<='9');c=getchar())x=x*10+(c&15);\n\treturn x*f;\n}\n\nconst int mod=998244353;\nint ksm(int x,int y,int p=mod){\n\tint ans=1;\n\tfor(int i=y;i;i>>=1,x=1ll*x*x%p)if(i&1)ans=1ll*ans*x%p;\n\treturn ans%p;\n}\nint inv(int x,int p=mod){return ksm(x,p-2,p)%p;}\nint randint(int l,int r){return rand()*rand()%(r-l+1)+l;}\n\nconst int N=2505;\nconst int M=N*(N-1)/2;\n\nint n,m,fa[N],sz[N],p[N],cnt,Tf[N],Ts[N];\nbool vis[N],In[N];\nint find(int x){return x==fa[x]?x:fa[x]=find(fa[x]);}\nvoid adde(int x,int y){\n\tx=find(x),y=find(y);\n\tif(x==y)return ;\n\tif(sz[x]>sz[y])swap(x,y);sz[y]+=sz[x],fa[x]=y;\n}\n\nint d[N],Mx[N],Mn[N],Now=0,s;\n\npair<int,pair<int,int> >E[M];\n#define fi first\n#define se second\n#define mk make_pair\nbool tmp[N];\nint t[N];\n\nvoid solve(int tar){\n\tint res=Now;\n\tcnt=0;memset(Mx,0,sizeof(Mx)),memset(Mn,63,sizeof(Mn)),memset(d,0,sizeof(d));\n\tmemcpy(Tf,fa,sizeof(Tf)),memcpy(Ts,sz,sizeof(Ts));memset(tmp,0,sizeof(tmp));\n\tfor(int i=1;i<=n;i++)if(vis[i])p[++cnt]=i;assert(cnt%2==0);\n\tint tot=0;\n\tfor(int i=1;i<=cnt;i+=2)res+=p[i+1]-p[i],adde(p[i],p[i+1]),d[p[i]]++,d[p[i+1]]--;\n\tfor(int i=1;i<n;i++)d[i]+=d[i-1];\n\tfor(int i=1;i<n;i++)if(d[i]>0)adde(i,i+1);\n\tfor(int i=1,lst=0;i<=n;i++){\n\t\tif((!In[i])&&(!vis[i])&&(i!=s))continue;\n\t\tif(lst&&find(lst)!=find(i))E[++tot]=mk(i-lst,mk(find(i),find(lst)));\n\t\tlst=i;\n\t}\n\tsort(E+1,E+tot+1);\n\tfor(int i=1;i<=tot;i++){\n\t\tint u=find(E[i].se.fi),v=find(E[i].se.se);\n\t\tif(u==v)continue;\n\t\tres+=E[i].fi+E[i].fi,adde(u,v);\n\t}\n\tcout<<res<<' ';\n\tmemcpy(fa,Tf,sizeof(fa)),memcpy(sz,Ts,sizeof(sz));\n\tmemset(d,0,sizeof(d));\n}\n\nsigned main(void){\n\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.in\",\"r\",stdin);\n\tfreopen(\"out.out\",\"w\",stdout);\n#endif\n\n\tn=read(),m=read(),s=read();\n\tfor(int i=1;i<=n;i++)fa[i]=i,sz[i]=1;\n\tfor(int i=1;i<=m;i++){\n\t\tint u=read(),v=read();In[u]=In[v]=1;\n\t\tvis[u]^=1,vis[v]^=1,adde(u,v);\n\t\tNow+=max(u,v)-min(u,v);\n\t}\n\tfor(int i=1;i<=n;i++)vis[s]^=1,vis[i]^=1,solve(i),vis[s]^=1,vis[i]^=1;\n\tputs(\"\");\n\n\treturn 0;\n}\n\n\n```",
        "postTime": 1677131708,
        "uid": 307453,
        "name": "\u4e91\u6d45\u77e5\u5904",
        "ccfLevel": 6,
        "title": "P6628"
    },
    {
        "content": "[0htoAi](https://www.luogu.com.cn/user/335366) \u7684\u81f3\u7406\u540d\u8a00\uff1a\u770b\u5230\u56fe\u8bba\u9898\u4e0d\u4f1a\u505a\u5c31\u60f3\u60f3\u80fd\u4e0d\u80fd**\u6b27\u62c9\u56de\u8def**\u3002\n\n------------\n\n\u9996\u5148\u53ef\u4ee5\u6ce8\u610f\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\n\n- $u, v$ \u95f4\u7684\u6700\u77ed\u8def\u5c31\u662f $|u - v|$\u3002\n\n\u8bc1\u660e\uff1a\u5728\u4e2d\u95f4\u7ecf\u8fc7\u70b9\u4e0d\u5f71\u54cd\uff0c\u4f46\u5728\u4e24\u8fb9\u7ecf\u8fc7\u70b9\u4f1a\u8ba9\u8def\u5f84\u53d8\u957f\u3002\n\n~~\u4e8e\u662f\u6709\u4e00\u4e2a $O(n^2 2^m)$ \u7684\u72b6\u538b dp\uff0c\u4f46\u662f\u53ea\u80fd\u83b7\u5f97\u9ad8\u8d35\u7684 $50$ \u5206\uff08~~\n\n\u63a5\u4e0b\u6765\u8fd8\u53ef\u4ee5\u6ce8\u610f\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\n\n- \u5f53 $i = s$\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u9700\u8981\u6c42\u51fa\u4e00\u6761\u4ece $s$ \u51fa\u53d1\u4e14\u5305\u542b\u6240\u6709\u5fc5\u7ecf\u8fb9\u7684\u6b27\u62c9\u56de\u8def\u3002\n- \u5f53 $i \\neq s$\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u9700\u8981\u6c42\u51fa\u4e00\u6761\u4ece $s$ \u51fa\u53d1\u3001\u5728\u5012\u6570\u7b2c\u4e8c\u6b65\u5230\u8fbe $i$ \u4e14\u5305\u542b\u6240\u6709\u5fc5\u7ecf\u8fb9\u7684\u6b27\u62c9\u56de\u8def\uff08\u5f53\u7136\u8fd9\u91cc\u56e0\u4e3a\u4e0d\u9700\u8981\u8d70 $i \\to s$ \u6240\u4ee5\u8fd9\u4e00\u6b65\u7684\u8d21\u732e\u5f97\u6254\u6389\uff09\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f**\u8fd9\u91cc\u7684\u6b27\u62c9\u56de\u8def\u4e8b\u5b9e\u4e0a\u662f\u5141\u8bb8\u91cd\u8fb9\u7684**\u3002\n\n\u8003\u8651\u5728 $i \\neq s$ \u65f6\u5c06\u8fb9 $(s, i)$ \u6682\u65f6\u52a0\u5165\u5fc5\u7ecf\u8fb9\uff0c\u5219\u539f\u95ee\u9898\u53d8\u4e3a\uff1a\n\n- \u6709\u82e5\u5e72\u6761\u5fc5\u7ecf\u8fb9\uff0c\u6c42\u4e00\u6761\u4ece $s$ \u51fa\u53d1\u7684\u6700\u77ed\u6b27\u62c9\u56de\u8def\u3002\n\n\u5982\u679c\u53ea\u52a0\u5165\u5fc5\u7ecf\u8fb9\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u70b9\u5ea6\u6570\u5747\u4e3a\u5076\u6570\uff0c\u5219\u6211\u4eec\u53ea\u9700\u8981\u5148\u6293\u51fa\u6240\u6709\u5fc5\u7ecf\u8fb9\u6784\u6210\u7684\u8fde\u901a\u5757\uff0c\u7136\u540e\u6293\u51fa\u4e24\u4e24\u8fde\u901a\u5757\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\uff0c\u6700\u540e\u628a\u6700\u5c0f\u751f\u6210\u6811\u8fb9\u6743\u548c\u4e58 $2$ \u52a0\u5165\u7b54\u6848\u5373\u53ef\u3002\n\n- \u8fd9\u91cc\u7528\u5230\u4e86\u4e00\u4e2a\u5c0f\u7ed3\u8bba\uff1a**\u904d\u5386\u5b8c\u4e00\u5f20\u56fe\u7684\u6700\u5c0f\u4ee3\u4ef7\u5c31\u662f\u5176\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u6743\u548c\u4e58 $2$**\uff0c\u56e0\u4e3a\u6bcf\u6761\u6811\u8fb9\u4f60\u4f1a\u904d\u5386\u4e24\u904d\u3002\n\n\u90a3\u4e24\u4e24\u8fde\u901a\u5757\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u600e\u4e48\u5feb\u901f\u8ba1\u7b97\u5462\uff1f\u8003\u8651\u5c06\u7f16\u53f7\u76f8\u90bb\u7684\u8fde\u901a\u5757\u8fde\u8fb9\uff0c\u5219\u4e24\u4e24\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u4e00\u5b9a\u4f1a\u88ab\u53d6\u5230\uff0c\u540c\u65f6\u8fb9\u6570\u964d\u4e3a $O(n)$\u3002\u6ce8\u610f\u8fd9\u91cc\u201c\u7f16\u53f7\u76f8\u90bb\u201d\u6307\u7684\u662f**\u5728\u4e0e\u5fc5\u7ecf\u8fb9\u6709\u5173\u7684\u524d\u63d0\u4e0b\u7f16\u53f7\u76f8\u90bb**\uff0c\u56e0\u4e3a\u5176\u4ed6\u70b9\u6709\u53ef\u80fd\u6839\u672c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u5728\u4efb\u4f55\u4e00\u6761\u6700\u4f18\u8def\u5f84\u4e0a\uff08\u53c2\u8003\u6837\u4f8b 2\uff09\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u6709\u70b9\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u60c5\u51b5\u3002\u7531\u4e8e\u8fd9\u662f\u65e0\u5411\u56fe\uff0c\u663e\u7136\u53ea\u4f1a\u6709\u5076\u6570\u4e2a\u8fd9\u6837\u7684\u70b9\u3002\u8d2a\u5fc3\u5730\uff0c\u8003\u8651\u5c06\u7f16\u53f7\u76f8\u90bb\u4e14\u5ea6\u6570\u5747\u4e3a\u5947\u6570\u7684\u70b9\u6293\u51fa\u6765\u4e24\u4e24\u914d\u5bf9\uff0c\u5e76\u4e00\u8def\u8fde\u4e0a\u4e2d\u95f4\u6240\u6709\u7684\u70b9\uff0c\u8fd9\u6837\u8def\u5f84\u603b\u957f\u4e0d\u53d8\u4f46\u80fd\u6d89\u53ca\u5230\u66f4\u591a\u7684\u70b9\u663e\u7136\u4e0d\u52a3\u3002\n\nKruskal \u6c42\u6700\u5c0f\u751f\u6210\u6811\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m \\log n + n^2 \\log n)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n\nusing namespace std;\n\ntypedef long long ll;\n\ntypedef struct {\n\tint root[2507];\n\t\n\tinline void init(int n){\n\t\tfor (register int i = 1; i <= n; i++){\n\t\t\troot[i] = i;\n\t\t}\n\t}\n\t\n\tint get_root(int x){\n\t\tif (root[x] == x) return x;\n\t\treturn root[x] = get_root(root[x]);\n\t}\n\t\n\tinline void merge(int x, int y){\n\t\tint root_x = get_root(x), root_y = get_root(y);\n\t\tif (root_x != root_y) root[root_x] = root_y;\n\t}\n} DSU;\n\ntypedef struct Edge_tag {\n\tint start;\n\tint end;\n\tint dis;\n\tEdge_tag(){}\n\tEdge_tag(int start_, int end_, int dis_){\n\t\tstart = start_;\n\t\tend = end_;\n\t\tdis = dis_;\n\t}\n} Edge;\n\nDSU dsu1, dsu2;\nint deg[2507];\nEdge edge[2507];\n\nbool operator <(const Edge a, const Edge b){\n\treturn a.dis < b.dis;\n}\n\ninline int read(){\n\tint ans = 0;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9'){\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9'){\n\t\tans = ans * 10 + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn ans;\n}\n\ninline int kruskal(int n, int m){\n\tint ans = 0;\n\tfor (register int i = 1; i <= m; i++){\n\t\tint x_root = dsu2.get_root(edge[i].start), y_root = dsu2.get_root(edge[i].end);\n\t\tif (x_root != y_root){\n\t\t\tdsu2.root[x_root] = y_root;\n\t\t\tans += edge[i].dis;\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint n = read(), m = read(), s = read();\n\tll sum = 0;\n\tdsu1.init(n);\n\tfor (register int i = 1; i <= m; i++){\n\t\tint u = read(), v = read();\n\t\tdeg[u]++;\n\t\tdeg[v]++;\n\t\tsum += abs(u - v);\n\t\tdsu1.merge(u, v);\n\t}\n\tfor (register int i = 1; i <= n; i++){\n\t\tint val = 0, cnt = 0;\n\t\tdsu2.init(n);\n\t\tdeg[s]++;\n\t\tdeg[i]++;\n\t\tdsu2.merge(dsu1.get_root(s), dsu1.get_root(i));\n\t\tfor (register int j = 1, k = 0; j <= n; j++){\n\t\t\tif (deg[j] % 2 == 1){\n\t\t\t\tif (k == 0){\n\t\t\t\t\tk = j;\n\t\t\t\t} else {\n\t\t\t\t\tval += j - k;\n\t\t\t\t\tfor (register int l = k; l < j; l++){\n\t\t\t\t\t\tdsu2.merge(dsu1.get_root(l), dsu1.get_root(l + 1));\n\t\t\t\t\t}\n\t\t\t\t\tk = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (register int j = 1, k = 0; j <= n; j++){\n\t\t\tif (deg[j] > 0){\n\t\t\t\tif (k != 0) edge[++cnt] = Edge(dsu1.get_root(j), dsu1.get_root(k), abs(j - k));\n\t\t\t\tk = j;\n\t\t\t}\n\t\t}\n\t\tsort(edge + 1, edge + cnt + 1);\n\t\tcout << sum + val + kruskal(n, cnt) * 2 << \" \";\n\t\tdeg[s]--;\n\t\tdeg[i]--;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1679483754,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P6628 \u3010[\u7701\u9009\u8054\u8003 2020 B \u5377] \u4e01\u9999\u4e4b\u8def\u3011"
    },
    {
        "content": "\u795e\u5947\u7684\u56fe\u8bba\u9898\uff0c\u770b\u4e86\u534a\u5929\u9898\u89e3\uff0c\u60f3\u4e86\u534a\u5929\u624d\u4f1a\u3002\n\n----\n\n\u9996\u5148\u7531\u7edd\u5bf9\u503c\u7684\u6027\u8d28\u53ef\u77e5\uff0c$u,v$ \u4e24\u70b9\u76f4\u63a5\u901a\u8fc7\u4e00\u6761\u8fb9\u5230\u8fbe\uff0c\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e $u$ \u5230 $k$\uff0c$k$ \u518d\u5230 $v$ \u7684\u8ddd\u79bb\u548c\u3002\n\n\u9898\u76ee\u4e2d\u8981\u6c42\u7ecf\u8fc7\u7ed9\u5b9a\u7684 $m$ \u6761\u8fb9\u81f3\u5c11\u4e00\u6b21\u3002\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\u65f6\uff0c\u8fd9\u4e2a\u95ee\u9898\u4fbf\u53d8\u6210\u4e86\u6b27\u62c9\u8def\u5f84\u95ee\u9898\u3002\n\n\u6bcf\u6761\u8fb9\u53ef\u4ee5\u7ecf\u8fc7\u81f3\u5c11\u4e00\u6b21\uff0c\u53ef\u4ee5\u89c6\u4e3a\u7ed9\u8fd9\u51e0\u6761\u7ed9\u5b9a\u8fb9\u52a0\u4e0a\u4e00\u5b9a\u6570\u91cf\u7684\u91cd\u8fb9\uff0c\u4f7f\u8fd9\u5f20\u56fe\u6ee1\u8db3\u6709\u4e00\u6761\u4ece\u8d77\u70b9 $s$ \u5230\u7ec8\u70b9 $t$ \u7684\u6b27\u62c9\u8def\u5f84\u3002\n\n\u6b27\u62c9\u8def\u5f84\u6c42\u7684\u65f6\u5019\u4e0d\u592a\u65b9\u4fbf\uff0c\u6211\u4eec\u8003\u8651\u5c06\u8d77\u70b9 $s$ \u548c\u7ec8\u70b9 $t$ \u8fde\u4e0a\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u5c31\u53d8\u6210\u4e86\u6c42\u4e00\u4e2a\u6b27\u62c9\u56de\u8def\u3002\n\n\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u5b58\u5728\u6b27\u62c9\u56de\u8def\u8981\u6c42\u6240\u6709\u70b9\u7684\u5ea6\u6570\u90fd\u662f\u5076\u6570\u3002\n\n\u5f88\u660e\u663e\uff0c\u6211\u4eec\u7684\u56fe\u4e0d\u4e00\u5b9a\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8d2a\u5fc3\u5730\u5c06\u6240\u6709\u7684\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\u8fde\u4e0a\u4e00\u6761\u8fb9\u3002\n\n\u600e\u4e48\u8d2a\u5fc3\uff1f\n\n\u6ce8\u610f\u5230\u5f00\u59cb\u7684\u7edd\u5bf9\u503c\u7684\u6027\u8d28\u3002\u5f53\u6709\u4e09\u4e2a\u70b9 $u,v,w$ \u4e14\u6ee1\u8db3 $u<v<w$ \u7684\u65f6\u5019\uff0c\u6709 $|u-v|+|v-w|=|u-w|$ \u6b64\u65f6 $u$ \u8fde $v$\uff0c$v$ \u8fde $w$ \u4e0e $u$ \u8fde $w$ \u7684\u4ee3\u4ef7\u662f\u76f8\u540c\u7684\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6b64\u65f6\u6211\u4eec\u8054\u901a\u4e86\u4e09\u4e2a\u70b9\uff0c\u6bd4\u4e24\u4e2a\u70b9\u66f4\u4f18\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u6240\u6709\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\uff0c\u5c06\u7f16\u53f7\u76f8\u90bb\u7684\u70b9\u8fde\u8fb9\u5373\u53ef\u3002\n\n\u5982\u679c\u4e0d\u592a\u597d\u7406\u89e3\uff0c\u53ef\u4ee5\u7ed3\u5408\u6837\u4f8b\u548c\u4e0b\u9762\u8fd9\u5f20\u56fe\u6765\u770b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1m4wwhd5.png)\n\n\u9ed1\u8fb9\u662f\u7ed9\u5b9a\u7684 $m$ \u6761\u5fc5\u987b\u7ecf\u8fc7\u7684\u8fb9\uff0c\u7ea2\u8fb9\u662f\u6211\u4eec\u8fde\u4e0a\u7684\u8fb9\u3002\u7eff\u8272\u7684\u6570\u5b57\u662f\u7ed9\u5b9a\u7684\u8fb9\u7684\u8fb9\u6743\uff0c\u68d5\u8272\u7684\u6570\u5b57\u662f\u6211\u4eec\u8fde\u4e0a\u7684\u8fb9\u7684\u8fb9\u6743\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5728\u7ed9\u5b9a\u7684\u5fc5\u987b\u7ecf\u8fc7\u7684\u4e00\u5f20\u56fe\u4e2d\uff0c\u56fe\u4e0d\u4e00\u5b9a\u662f\u8054\u901a\u7684\u3002\n\n\u6211\u4eec\u4f7f\u7528\u5e76\u67e5\u96c6\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u8fde\u901a\u5757\u3002\u6211\u4eec\u8981\u6c42\u6240\u6709\u7684\u4e0d\u540c\u7684\u8fde\u901a\u5757\u76f8\u8054\u901a\u3002\n\n\u5bf9\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u8fde\u901a\u5757\uff0c\u5b83\u4eec\u76f8\u8fde\u7684\u957f\u5ea6\uff0c\u662f\u4e24\u4e2a\u8fde\u901a\u5757\u5185\u70b9\u7684\u6700\u8fd1\u8ddd\u79bb\u3002\u5927\u5bb6\u53ef\u4ee5\u7ed3\u5408\u4e0b\u9762\u8fd9\u5f20\u56fe\u8fdb\u884c\u7406\u89e3\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tz63k1ar.png)\n\n\u5728\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4e24\u4e2a\u8fde\u901a\u5757\u4e4b\u95f4\u76f8\u8fde\u7684\u4ee3\u4ef7\u5c31\u662f\u8282\u70b9 3 \u4e0e\u8282\u70b9 4 \u4e4b\u95f4\u8fb9\u7684\u8fb9\u6743 1\u3002\n\n\u5728\u5b9e\u9645\u7684\u64cd\u4f5c\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u8fde\u901a\u5757\u4e4b\u95f4\u76f8\u8fde\u7684**\u6240\u6709\u4ee3\u4ef7**\u4f5c\u4e3a\u4e24\u4e2a\u8fde\u901a\u5757\u4e4b\u95f4\u7684\u8fb9\u8fdb\u884c\u5b58\u50a8\u3002\n\n\u4f46\u662f\u8fd9\u6837\u64cd\u4f5c\uff0c\u5b58\u50a8\u7684\u8fb9\u6570\u4f1a\u5f88\u5927\u3002\u8fd9\u65f6\u5019\u53c8\u8981\u7528\u5230\u6211\u4eec\u5f00\u59cb\u7684\u7edd\u5bf9\u503c\u6027\u8d28\u4e86\u3002\u6211\u4eec\u4e0d\u9700\u8981\u5c06\u6240\u6709\u7684\u8fde\u901a\u5757\u90fd\u8fde\u4e0a\u8fb9\uff0c\u53ea\u8981\u5c06\u7f16\u53f7\u76f8\u90bb\u7684\u8fde\u901a\u5757\u8fde\u4e0a\u8fb9\u5373\u53ef\u3002\n\n\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u6700\u5c0f\u751f\u6210\u6811\u7684\u5b9a\u4e49\u662f\u56fe\u8fde\u901a\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u6240\u4ee5\u5efa\u5b8c\u56fe\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8dd1\u4e00\u8fb9\u6700\u5c0f\u751f\u6210\u6811\u5373\u53ef\u3002\u6b64\u65f6\u8fb9\u6570\u662f $O(n)$ \u7684\uff0c\u5199\u4e00\u4e2a kruskal \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u540c\u65f6\u6ce8\u610f\u5230\uff0c\u7531\u4e8e\u8fb9\u6743\u7b49\u4e8e\u4e24\u8fb9\u70b9\u7684\u7f16\u53f7\u76f8\u51cf\uff0c\u6240\u4ee5\u56fe\u6240\u6709\u8fb9\u6743\u7684\u6700\u5927\u503c\u662f $n-1$\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u7528 sort\uff0c\u76f4\u63a5 $O(n)$ \u6876\u6392\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u5199\u7684\u65f6\u5019\uff0c$O(n^2)$ \u7684\u6876\u6392\u5199\u6cd5\u6bd4 $O(n^2\\log n)$ \u7684\u5feb\u6392\u5199\u6cd5\u8fd8\u6162\uff0c\u4e25\u91cd\u6000\u7591\u662f vector \u7684\u9505\u3002\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/2ifrnvtp)\u3002",
        "postTime": 1678716253,
        "uid": 358739,
        "name": "BFSDFS123",
        "ccfLevel": 0,
        "title": "dilstlmdq"
    },
    {
        "content": "\u62c6\u8fb9\u9898\u3002\n\n\u7ed9\u5b9a\u7684\u8fb9\u8981\u8d70\u81f3\u5c11\u4e00\u6b21\u3002~~\u6211\u4eec~~\u94a6\u70b9\u8d70\u7684\u6240\u6709\u8fb9\u90fd\u53ea\u8d70\u4e00\u6b21\uff0c\u8d70\u591a\u6b21\u7684\u770b\u4f5c\u5efa\u91cd\u8fb9\u3002\u8fd9\u6837\uff0c\u539f\u9898\u8f6c\u5316\u4e3a $s \\rightsquigarrow t$ \u7684\u6700\u5c0f\u6b27\u62c9\u8def\u5f84\u3002\u6b27\u62c9\u8def\u5f84\u7684\u6027\u8d28\u4e0d\u662f\u5f88\u597d\uff0c\u8003\u8651\u52a0\u5165 $s \\to t$ \u7684\u8fb9\u8f6c\u4e3a**\u6b27\u62c9\u56de\u8def**\u3002\n\n\u6b27\u62c9\u56de\u8def\u6ee1\u8db3\u56fe\u8fde\u901a\uff0c\u4e14\u6bcf\u4e2a\u70b9\u5ea6\u6570\u4e3a\u5076\u6570\u3002\n\n\u76f4\u63a5\u5339\u914d\u5947\u70b9\u5f88\u56f0\u96be\uff0c\u4f46\u662f\u672c\u9898\u6709\u4e00\u4e2a\u4f18\u7f8e\u7684\u6027\u8d28\uff1a$\\left| s \\to t \\right|=|s-t|$\u3002**\u63a8\u8bba\uff1a$\\forall x < y < z,|x\\to z|=|x\\to y| + |y\\to z|$**\u3002 \u8fd9\u6837\uff0c\u4efb\u610f\u4e00\u6761\u957f\u5ea6 $\\gt 1$ \u7684\u8fb9\u90fd\u53ef\u4ee5\u62c6\u6210\u591a\u6761\u957f\u5ea6\u4e3a $1$ \u7684\u8fb9\u3002\u901a\u8fc7\u8c03\u6574\uff0c\u53ef\u4ee5\u628a\u7b54\u6848\u8c03\u4e3a\u4efb\u610f\u957f\u5ea6\u4e3a $1$ \u7684\u8fb9\u4e0d\u76f8\u4ea4\u3001\u4e0d\u5305\u542b\uff0c\u8fd9\u6837\u4e00\u5b9a\u66f4\u4f18\u3002\n\n\u4e8e\u662f\u628a\u5947\u70b9\u4ece\u524d\u5f80\u540e\u4e24\u4e24\u5339\u914d\u5373\u53ef\u3002\n\n\u4f46\u662f\u6b64\u65f6\u8fde\u901a\u6027\u5e76\u672a\u4fdd\u8bc1\u3002\u76f4\u89c2\u7684\u60f3\u6cd5\u662f\uff0c\u5efa\u51fa\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6bcf\u6761\u6811\u8fb9\u5efa\u4e24\u6b21\u3002\u611f\u6027\u7406\u89e3\uff1a\u6bcf\u4e2a\u8fde\u901a\u5757\u90fd\u6709\u6b27\u62c9\u56de\u8def\uff0c\u56e0\u6b64\u4e00\u5b9a\u53ef\u4ee5\u56de\u5230\u539f\u70b9\uff0c\u4e00\u5b9a\u4ece\u539f\u70b9\u8fd4\u56de\u66f4\u4f18\uff0c\u5426\u5219\u4e0d\u5982\u4e00\u5f00\u59cb\u5c31\u6362\u4e00\u4e2a\u6865\u8d70\u3002\n\n\u7136\u800c\u8fde\u901a\u5757\u4e4b\u95f4\u7684\u8fb9\u6570\u4ecd\u7136\u662f\u5de8\u5927\u7684\u3002\u597d\u5728\u53ef\u4ee5\u7ee7\u7eed\u62c6\u8fb9\uff1a\u6839\u636e\u4e0a\u65b9\u63a8\u8bba\uff0c$\\forall u < v < w, u\\to w$ \u53ef\u4ee5\u62c6\u6210 $u\\to v$ \u548c $v \\to w$\uff0c\u8fd9\u6837\u8fb9\u6570\u5c31\u662f $O(n)$ \u7ea7\u522b\uff0c\u53ef\u4ee5\u76f4\u63a5 Kruskal.\n\n\u603b\u590d\u6742\u5ea6 $O(m + n(n \\log n))$\u3002\n\n```cpp\nconst int N = 2505;\nint n, m, s, deg[N];\n\nstruct DSU {\n\tarray<int, N> fa;\n\tint getFa(int p) { return fa[p] == p ? p : fa[p] = getFa(fa[p]); }\n\tvoid merge(int u, int v) {\n\t\tu = getFa(u); v = getFa(v);\n\t\tfa[u] = v;\n\t}\n\tDSU() { U (i, 1, n) fa[i] = i; }\n};\n\nint solve(set<int> &p, DSU &d) {\n\tset<int> q = p;\n\tfor (auto it = q.begin(); it != q.end(); )\n\t\tif (deg[*it] & 1) ++it;\n\t\telse q.erase(it++);\n\t\n\tint ans = 0;\n\tfor (auto it = q.begin(); it != q.end(); ++it, ++it) {\n\t\tint u = *it, v = *next(it);\n\t\tans += abs(u - v);\n\t\tU (i, u + 1, v)\n\t\t\td.merge(i - 1, i);\n\t}\n\t\n\tvector<pair<int, int>> eg;\n\tfor (auto it = ++p.begin(); it != p.end(); ++it) {\n\t\tint u = *prev(it), v = *it;\n\t\teg.emplace_back(u, v);\n\t}\n\tsort(eg.begin(), eg.end(),\n\t\t[](pair<int, int> x, pair<int, int> y)\n\t\t\t{ return abs(x.first - x.second) < abs(y.first - y.second); });\n\t\t\n\tfor (auto [u, v] : eg) {\n\t\tint dis = abs(u - v);\n\t\tu = d.getFa(u); v = d.getFa(v);\n\t\tif (u != v) {\n\t\t\tans += dis * 2;\n\t\t\td.merge(u, v);\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main() {\t\n\trd(n, m, s);\n\t\n\tset<int> pt; // \u6709\u7528\u7684\u70b9\n\tDSU d;\n\tint sum = 0;\n\twhile (m--) {\n\t\tint u, v; rd(u, v);\n\t\t++deg[u]; ++deg[v];\n\t\tpt.insert(u); pt.insert(v);\n\t\td.merge(u, v);\n\t\tsum += abs(v - u);\n\t}\n\t\n\t++deg[s]; pt.insert(s);\n\tU (i, 1, n) {\n\t\tset<int> p = pt; p.insert(i);\n\t\t++deg[i];\n\t\tDSU t = d; t.merge(s, i);\n\t\t\n\t\tint ans = solve(p, t);\n\t\t\n\t\tprintf(\"%d \", ans + sum);\n\t\t--deg[i];\n\t}\n}\n```",
        "postTime": 1674486428,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3] P6628 [\u7701\u9009\u8054\u8003 2020 B \u5377] \u4e01\u9999\u4e4b\u8def"
    },
    {
        "content": "[in Blog](//milk-lemon.blog.luogu.org/notes-EulerPath) & [Problem](//www.luogu.com.cn/problem/P6628)\n\n## \u9898\u76ee\u5927\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a\u6709 $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\u4ee5\u53ca\u4e00\u4e2a\u8d77\u70b9 $s$\u3002\n\n- \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u627e\u51fa\u6700\u77ed\u7684\u4e00\u6761\u4ece $s$ \u5230\u8fd9\u4e2a\u70b9\u7684\u8def\u5f84\u7ecf\u8fc7\u8fd9 $m$ \u6761\u8fb9\uff0c\u8def\u5f84\u4e2d\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9 $i$ \u8d70\u5230\u53e6\u4e00\u4e2a\u70b9 $j$\uff0c\u65e0\u8bba\u662f\u5426\u5728\u7ed9\u5b9a\u7684 $m$ \u6761\u8fb9\u4e2d\uff0c\u8fb9\u6743\u5747\u4e3a $|i-j|$\u3002\n\n- $50\\leq n\\leq 2500,\\ 0\\leq m\\leq\\dbinom n2$\n\n## \u89e3\u9898\u601d\u8def\n\n\u672c\u9898\u4e2d\u8981\u6c42\u6c42\u51fa\u76f8\u540c\u8d77\u70b9\uff0c\u4e0d\u540c\u7ec8\u70b9\u7684\u7ed3\u679c\u3002\u4e0d\u59a8\u5c06\u8d77\u70b9\u548c\u7ec8\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u5c31\u53d8\u6210\u4e86\u6c42\u4e00\u6761\u6b27\u62c9\u56de\u8def\u3002\n\n\u4e3a\u4e86\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u56fe\u4e2d\u5fc5\u987b\u5168\u4e3a\u5076\u70b9\u3002\u6211\u4eec\u8003\u8651\u5c06\u5947\u70b9\u4e24\u4e24\u914d\u5bf9\u8fde\u8fb9\u3002\u7531\u4e8e\u6b64\u9898\u8fb9\u6743\u8bbe\u7f6e\u7684\u7279\u6b8a\u6027\uff0c\u53ef\u4ee5\u4f18\u5148\u8003\u8651\u5c06\u76f8\u90bb\u7684\u5947\u70b9\u8fde\u8fb9\u3002\u5373\u6309\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\uff0c\u7b2c $1$ \u4e2a\u5947\u70b9\u4e0e\u7b2c $2$ \u4e2a\u5947\u70b9\u914d\u5bf9\uff0c\u7b2c $3$ \u4e2a\u5947\u70b9\u4e0e\u7b2c $4$ \u4e2a\u5947\u70b9\u914d\u5bf9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8003\u8651\u5230\u6b27\u62c9\u56de\u8def\u7684\u53e6\u4e00\u4e2a\u5b58\u5728\u6761\u4ef6\u4e3a\u56fe\u662f\u8fde\u901a\u56fe\uff0c\u5c3d\u53ef\u80fd\u5728\u8fde\u8fb9\u7684\u65f6\u5019\u591a\u8fde\u901a\u51e0\u4e2a\u70b9\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u4e3a $u$ \u548c $v$ \u8fde\u8fb9\u65f6\u8f6c\u5316\u6210\u7f16\u53f7\u76f8\u90bb\u7684\u70b9\u8fde\u8fb9\uff08\u4e0d\u59a8\u8bbe $u<v$\uff0c\u5373 $u$ \u4e0e $u+1$ \u8fde\u8fb9\uff0c$u+1$ \u4e0e $u+2$ \u8fde\u8fb9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u76f4\u5230 $v-1$ \u4e0e $v$ \u8fde\u8fb9\u3002\n\n\u4e0b\u9762\u5904\u7406\u4f9d\u7136\u672a\u88ab\u8fde\u901a\u7684\u5757\u3002\u4e0d\u59a8\u5c06\u6bcf\u4e2a\u8fde\u901a\u5757\u89c6\u4e3a\u4e00\u4e2a\u70b9\uff0c\u4e24\u4e2a\u8fde\u901a\u5757\u4e4b\u95f4\u7684\u8fb9\u6743\u4e3a\u8fde\u901a\u8fd9\u4e24\u4e2a\u8fde\u901a\u5757\u6240\u9700\u7684\u6700\u5c0f\u8fb9\u6743\uff0c\u63a5\u7740\u9700\u8981\u6c42\u51fa\u4e00\u79cd\u8fde\u8fb9\u65b9\u5f0f\uff0c\u4f7f\u5f97\u56fe\u8fde\u901a\u4e14\u8fb9\u6743\u603b\u548c\u5c3d\u53ef\u80fd\u5c0f\uff0c\u4e5f\u5c31\u8f6c\u5316\u6210\u4e86\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u95ee\u9898\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6574\u4e2a\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u90fd\u65e0\u9700\u4f7f\u7528\u7ed9\u5b9a\u7684 $m$ \u6761\u8fb9\u7684\u5177\u4f53\u6570\u636e\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4e0d\u8bb0\u5f55\u8fb9\u7684\u4fe1\u606f\uff0c\u53ea\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\uff0c\u518d\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u5757\u7684\u60c5\u51b5\u3002\n\n\u7b97\u6cd5\u4e2d\u4e3a\u5947\u70b9\u914d\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n)$\uff0c\u8fde\u8fb9\u65f6\u867d\u7136\u8981\u4e00\u4e2a\u4e00\u4e2a\u70b9\u8fde\uff0c\u4f46\u662f\u81f3\u591a\u8fde $n-1$ \u6761\u8fb9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e3a $\\Theta(n)$\uff1b\u8fde\u901a\u5757\u4e4b\u95f4\u8fde\u81f3\u591a $n$ \u6761\u8fb9\uff0c\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log n)$\uff0c\u6c42\u6700\u5c0f\u751f\u6210\u6811\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e3a $\\Theta(n)$\u3002\u4e0a\u8ff0\u8fc7\u7a0b\u8981\u5bf9\u6bcf\u4e2a\u7ec8\u70b9\u90fd\u6c42\u4e00\u904d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n^2\\log n)$\u3002\u5728\u8f93\u5165 $m$ \u6761\u8fb9\u7edf\u8ba1\u4fe1\u606f\u65f6\u8fd8\u6709 $\\Theta(m)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u7efc\u4e0a\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n^2\\log n+m)$\u3002\n\n## AC \u4ee3\u7801\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,s;\n\nstruct Edge{\n\tint u,v,w;\n\tinline bool operator<(Edge tmp)const{\n\t\treturn w<tmp.w;\n\t}\n};\nvector<Edge>edge;\n\nint deg[2501];\n\nstruct{\n\tint f[2501];\n\tvoid init(int N){\n\t\tfor(int i=1;i<=N;i++)f[i]=i;\n\t}\n\tint find(int id){\n\t\tif(f[id]!=id)f[id]=find(f[id]);\n\t\treturn f[id];\n\t}\n\tvoid merge(int u,int v){\n\t\tf[find(u)]=find(v);\n\t} \n}a,b;\n\nlong long sum;\n\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&s);\n\ta.init(n);\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tdeg[u]++,deg[v]++;\n\t\ta.merge(u,v);\n\t\tsum+=abs(u-v);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\ta.f[i]=a.find(i);\n\tfor(int i=1;i<=n;i++){\n\t\tb.init(n);\n\t\tdeg[s]++,deg[i]++;\n\t\tb.merge(a.f[s],a.f[i]); // \u8d77\u70b9\u548c\u7ec8\u70b9\u8fde\u8fb9 \n\t\tlong long answer=sum;\n\t\t// \u5c06\u5947\u70b9\u4e24\u8fde\u914d\u5bf9\u8fde\u8fb9 \n\t\tint Last=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(deg[j]&1)\n\t\t\t\tif(Last==0)Last=j;\n\t\t\t\telse{\n\t\t\t\t\tanswer+=abs(j-Last);\n\t\t\t\t\tfor(int k=Last;k<j;k++)\n\t\t\t\t\t\tb.merge(a.f[k],a.f[k+1]);\n\t\t\t\t\tLast=0;\n\t\t\t\t}\n\t\t// \u8fde\u901a\u5757\u4e4b\u95f4\u8fde\u8fb9 \n\t\tedge.clear();\n\t\tLast=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(deg[j]){\n\t\t\t\tif(Last&&b.find(a.f[Last])!=b.find(a.f[j]))\n\t\t\t\t\tedge.push_back({a.f[Last],a.f[j],abs(j-Last)});\n\t\t\t\tLast=j;\n\t\t\t}\n\t\t// \u6c42\u6700\u5c0f\u751f\u6210\u6811 \n\t\tsort(edge.begin(),edge.end());\n\t\tfor(Edge e:edge)\n\t\t\tif(b.find(e.u)!=b.find(e.v)){\n\t\t\t\tb.merge(e.u,e.v);\n\t\t\t\tanswer+=e.w*2;\n\t\t\t}\n\t\tprintf(\"%lld \",answer);\n\t\tdeg[s]--,deg[i]--; \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1655032165,
        "uid": 234641,
        "name": "Milmon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6628 - [\u7701\u9009\u8054\u8003 2020 B \u5377] \u4e01\u9999\u4e4b\u8def"
    }
]