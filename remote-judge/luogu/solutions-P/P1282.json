[
    {
        "content": "DP.\n\n\u9898\u76ee\u8981\u6c42\u7684\u662f\u6700\u5c0f\u5dee\u503c\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u5176\u4e2d\u4e00\u4e2a\u8ba1\u5165\u72b6\u6001\u91cc\u3002\u8bb0\u4ea4\u6362\u6b21\u6570\u597d\u50cf\u4e0d\u592a\u597d\u505a\uff08\u6211\u6ca1\u8bd5\u8fc7\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8bb0\u7684\u662f\u5dee\u503c\u3002\n\n\u4f46\u662f\u5dee\u503c\u662f\u4e00\u4e2a\u7edd\u5bf9\u503c\uff0c\u597d\u50cf\u4e5f\u4e0d\u662f\u5f88\u597d\u8868\u793a\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u6765\u8f6c\u5316\u4e00\u4e0b\u3002\u89c2\u5bdf\u5230\u6bcf\u6b21\u4ea4\u6362\u53ea\u662f\u628a\u4e0a\u4e0b\u4e24\u4e2a\u6570\u4ea4\u6362\uff0c\u6545\u524di\u4e2a\u9aa8\u724c\u4e0a\u4e0b\u4e24\u884c\u6570\u7684\u603b\u548c\u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8bb0\u5f55\u5176\u4e2d\u4e00\u884c\u6570\u5b57\u7684\u548c\u5c31\u53ef\u4ee5\u77e5\u9053\u5dee\u503c\u4e86\u3002\u8fd9\u6837\u72b6\u6001\u5c31\u597d\u8868\u793a\u4e86\u3002\n\nf[i][j]\u8868\u793a\u524di\u4e2a\u6570\u5b57\uff0c\u7b2c\u4e00\u884c\u7684\u6570\u5b57\u548c\u662fj\u65f6\uff0c\u6700\u5c0f\u7684\u4ea4\u6362\u6b21\u6570\u3002\u521d\u59cb\u503c\u6240\u6709f[i][j]\u90fd\u662f\u65e0\u7a77\u5927\uff0cf[1][a[1]]=0\uff0cf[1][b[1]]=1\u3002\uff08a[]\u548cb[]\u5206\u522b\u8868\u793a\u7b2c\u4e00\u884c\u548c\u7b2c\u4e8c\u884c\u7684\u6570\u5b57\uff09\n\n\u8f6c\u79fb\u65f6\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u548c\uff0c\u5171\u67096\\*n\u4e2a\uff0c\u8003\u8651\u5f53\u524d\u4e00\u4e2a\u4ea4\u4e0d\u4ea4\u6362\u5373\u53ef\uff1a\n\n```cpp\nif (j-a[i] >= 0) f[i][j] = min(f[i][j], f[i-1][j-a[i]]);  //\u5f53\u524d\u4e0d\u4ea4\u6362\nif (j-b[i] >= 0) f[i][j] = min(f[i][j], f[i-1][j-b[i]]+1);  //\u5f53\u524d\u4ea4\u6362\n```\n\u6c42\u7b54\u6848\u65f6\u518d\u679a\u4e3e\u4e00\u4e0b\u524dn\u4e2a\u9aa8\u724c\u7b2c\u4e00\u884c\u7684\u548c\u5c31\u597d\u3002\n\n\u8fd9\u6837\u65f6\u95f4\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\u5747\u4e3aO(n\\*n\\*6)\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int N = 1000;\nconst int INF = 1e9;\nint a[N+10], b[N+10], f[N+10][6*N+10];\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int s = 0;\n    for (int i = 1; i <= n; i ++){\n        scanf(\"%d%d\", &a[i], &b[i]);\n        s += a[i] + b[i];\n    }\n    for (int i = 1; i <= n; i ++)\n        for (int j = 0; j <= 6*n; j ++) f[i][j] = INF;\n    f[1][a[1]] = 0; f[1][b[1]] = 1;\n    for (int i = 2; i <= n; i ++)   //DP\uff0c\u89e3\u91ca\u5982\u4e0a\n        for (int j = 0; j <= 6*n; j ++){\n            if (j-a[i] >= 0) f[i][j] = min(f[i][j], f[i-1][j-a[i]]);\n            if (j-b[i] >= 0) f[i][j] = min(f[i][j], f[i-1][j-b[i]]+1);\n        }\n    int minD = INF, minT = INF;  //minD\u662f\u6700\u5c0f\u5dee\u503c\uff0cminT\u662f\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\n    for (int i = 0; i <= s; i ++)\n        if (f[n][i] != INF){\n            if (abs(i-(s-i)) < minD){\n                minD = abs(i-(s-i)); minT = f[n][i];\n            }\n            else if (abs(i-(s-i)) == minD) minT = min(minT, f[n][i]);\n        }\n    printf(\"%d\", minT);\n    return 0;\n}\n```",
        "postTime": 1503895387,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u9047\u89c1\u8fd9\u79cd\u76f4\u63a5\u80cc\u5305\u3002\n\n\n\u80cc\u5305\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f\uff1f\uff1f\n\n\u662f\u6bcf\u4e00\u4e2a\u7269\u54c1\u6216\u52a8\u4f5c\u5bf9\u6240\u6709\u5f53\u524d\u72b6\u6001\u7684\u66f4\u65b0\u3002\n\n\u672c\u9898\u5c31\u662f\u5982\u6b64\uff0c\u7ffb\u4e00\u6b21\u5c31\u628a\u539f\u6765\u7684\u52a0\u7684\u5dee\u503c\u98a0\u5012\u3002\n\n\u5e76\u4e14\uff0c\u672c\u9898\u5f3a\u5236\u5fc5\u987b\u8981\u7528\u6bcf\u4e00\u4e2a\u52a8\u4f5c\uff0c\u6240\u4ee5\u5c31\u5fc5\u987b\uff08\u5373+a-b\u6216+b-a\uff09\u4ece\u524d\u9762\u4e00\u4e2a\u72b6\u6001+\u6539\u53d8\u91cf\u53bb\u66f4\u65b0\n\n\u56e0\u4e3a\u6539\u53d8\u91cf\u6709\u6b63\u6709\u8d1f\uff0c\u6240\u4ee5\u4e0d\u597d\u964d\u4e00\u7ef4\uff0c\n\n\u5176\u5b9e\u53ef\u4ee5\u7528\u6eda\u52a8\u6570\u7ec4\uff0c\u4f46\u4e3a\u4e86\u5077\u61d2         (^\\_^\uff09\uff0c\u5c31\u7528\u4e86\u4e8c\u7ef4\u7684 (^\\_^\uff09\n\n\u5c0f\u5fc3\u8d1f\u6570\u4e0b\u6807\u6570\u7ec4\u8d8a\u754c\uff01\uff01\uff01\uff01\uff01\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint a[1005],b[1005];\nint f[1005][12001];\nconst int N=5000;\nint main()\n{\n    int n,i,j,ans,dis;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%d%d\",&a[i],&b[i]);\n    memset(f,0x7F,sizeof(f));\n    f[0][0+N]=0;\n//\u6838\u5fc3\u4ee3\u7801\u5f00\u59cb\n    for(i=1;i<=n;i++)\n        for(j=-5000;j<=5000;j++)\n        {\n            dis=a[i]-b[i];\n            f[i][j+N]=min(f[i-1][j-dis+N],f[i-1][j+dis+N]+1);\n        }\n//\u6838\u5fc3\u4ee3\u7801\u7ed3\u675f\n    for(i=0;i<=5000;i++)\n    {\n        ans=min(f[n][i+N],f[n][-i+N]);\n        if(ans<=1000)\n        {\n            printf(\"%d\\n\",ans);\n            break;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1504343067,
        "uid": 52527,
        "name": "dj114133643",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "## \u8fd9\u9898~~\u663e\u7136\u662f~~\u8d2a\u5fc3\n\u9898\u89e3\u91cc\u6e05\u4e00\u8272\u7684DP\u4e0d\u60f3\u5199\uff1f\u6ca1\u5173\u7cfb\u6211\u4eec\u53ef\u4ee5\u53d1\u6325\u4eba\u7c7b\u667a\u6167\uff0c\u4f7f\u7528\u4f1f\u5927\u7684\u8d2a\u5fc3QwQ\u3002\n\n\u9898\u76ee\u662f\u6c42\u6700\u5c0f\u65cb\u8f6c\u6b21\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba9\u81ea\u5df1\u6bcf\u6b21\u90fd\u9009\u62e9\u6536\u76ca\u6700\u5927\u7684\u51b3\u7b56\u3002\n\n\u8bfb\u5165\u65f6\u5206\u522b\u8bb0\u5f55\u4e0a\u4e0b\u4e24\u884c\u7684\u548c\uff0c\u6c42\u5b83\u4eec\u7684\u5dee\u503c(\u8bb0\u4e3a$s$)\u3002\u518d\u8bb0\u5f55\u6bcf\u4e2a\u724c\u7684\u4e0a\u4e0b\u70b9\u6570\u4e4b\u5dee(\u5b58\u5165\u6570\u7ec4$a$)\u3002\u7136\u540e\u628a$a$\u6570\u7ec4$sort$\u4e00\u904d\u3002**\u6bcf\u6b21\u9009\u62e9\u8ba9$s$\u7684\u7edd\u5bf9\u503c\u51cf\u5c0f\u6700\u591a\u7684**\u3000\u5c31\u597d\u5566\u3002\n\n$code:$\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint up,down;  //\u5206\u522b\u8bb0\u5f55\u4e0a\u4e0b\u4e24\u884c\u4e4b\u548c\nint ans,n;\nint a[1100];\u3000\u3000//\u8bb0\u5f55\u5355\u4e2a\u724c\u7684\u4e0a\u4e0b\u70b9\u6570\u5dee\nint d[1100];\nint main()\n{\n\tcin>>n;\n    int p,q;\n\tfor(int o=1;o<=n;o++)\n\t{\n\t\tscanf(\"%d%d\",&p,&q);\n\t\ta[o]=p-q;\n\t\tup+=p,down+=q;\n\t}\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u8bfb\u5165\u65f6\u7edf\u8ba1\n\tint s=down-up;\n\tif(s==0)\n\t{cout<<0;return 0;}//\u7279\u5224\u4e00\u4e0b\u4e0d\u9700\u8981\u6539\u7684\n\tsort(a+1,a+1+n);   //\u4f1f\u5927\u7684\u8d2a\u5fc3QwQ\n\tif(s<0)\u3000\u3000\u3000\u3000\u3000//\u5982\u679c\u4e0a\u70b9\u6570\u5927\u4e8e\u4e0b\u70b9\u6570\n\t{\n\t\tfor(int i=n;i>=1;i--)\u3000\u3000//\u4ece\u3000\u4e0a-\u4e0b\u3000\u8f83\u5927\u7684\u5f00\u59cb\u679a\u4e3e\n\t\t{\n\t\t\tif(a[i]>0 && s+a[i]*2<=0)//\u7ffb\u8f6c\u6709\u8d21\u732e\u4e14\u4e0d\u80fd\u7ffb\u8fc7\u5934\n\t\t\t\ts+=(a[i]*2),ans++;//\u66f4\u65b0\uff0c\u8bb0\u5f55\u7b54\u6848\n\t\t\telse continue;\n\t\t}\n\t}\n\tif(s>0)//\u4e0b\u9762\u540c\u7406\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(a[i]<0 && s+a[i]*2>=0)\n\t\t\t\ts+=(a[i]*2),ans++;\n\t\t\telse continue;\n\t\t}\n\t}\n    \tcout<<ans<<endl;\n\treturn 0;\n```\n\n\n\n------------\n\n\u5982\u679c\u60a8\u4ea4\u4e0a\u8fd9\u4efd\u4ee3\u7801\uff0c\u60a8\u5c31\u4f1a\u83b7\u5f9782\u5206\u7684\u597d\u6210\u7ee9(\u9003\n\n\n\u96be\u9053\u662f\u8d2a\u5fc3\u672c\u8eab\u4e0d\u53ef\u89e3\uff1f(~~\u8fd8\u662f\u53bb\u6253DP\u5427~~)\n\n\u7b49\uff0c\u7b49\u4e00\u4e0b\uff01$QAQ$ .\u672c\u849f\u84bb\u603b\u4e0d\u53ef\u80fd\u6d6a\u8d39\u60a8\u7684\u65f6\u95f4\u60a8\u8bf4\u662f\u5427\uff0c\u65e2\u7136\u6765\u4e86\u5c31\u4e0d\u5982\u770b\u5b8c\u5457\u3002\n\n\u6211\u4eec\u7684\u8d2a\u5fc3\u7b56\u7565\u4e4b\u6240\u4ee5\u4e0d\u6210\u529f\uff0c\u662f\u56e0\u4e3a\u6ca1\u8fbe\u5230\u9898\u76ee\u7684\u8981\u6c42\uff1a**\u5728\u4e0a\u4e0b\u5dee\u503c\u6700\u5c0f\u7684\u524d\u63d0\u4e0b**\uff0c\u4f7f\u7ffb\u8f6c\u6b21\u6570\u6700\u5c11\u3002\n\u800c**\u8d2a\u5fc3\u53ea\u80fd\u4fdd\u8bc1\u7ffb\u8f6c\u6b21\u6570\u6700\u5c11\uff0c\u4e0d\u4e00\u5b9a\u80fd\u4f7f\u5dee\u503c\u6700\u5c0f\u54e6**\u3002\n\n\n\u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\n\n\u5047\u8bbe\u7ecf\u8fc7\u4e00\u7cfb\u5217\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u7684$s$(\u5728\u4ee3\u7801\u4e2d\u662f$down-up$) \u4e3a$6$\u3002\n\n\u5bf9\u4e8e\u4e0b\u56fe\u4e2d\u5de6\u8fb9\u7684\u724c\uff0c\u663e\u7136\u4e0d\u80fd\u5355\u72ec\u7ffb\u8f6c\uff0c\u56e0\u4e3a\u5b83\u4f1a\u4ea7\u751f$(1-6)\u00d72=-10$\u7684\u8d21\u732e\uff0c\u8fd9\u6837\u5c31\u4fee\u6539\u4e86$s$\u7684\u7b26\u53f7\uff0c\u4e0d\u7b26\u5408\u6211\u4eec\u7684\u8d2a\u5fc3\u7b56\u7565\u3002\n\n\u4f46\u662f\uff0c\u5c06\u4e0b\u56fe\u4e24\u5f20\u724c\u540c\u65f6\u7ffb\u8f6c\u5462\uff1f\u8d21\u732e\u603b\u503c\u4e3a$-10+4=-6$\uff0c\u6b63\u597d\u4f7f$s=0$ \u4e86\uff01\n![](https://cdn.luogu.com.cn/upload/pic/42528.png )\n\n\u56e0\u6b64\u6211\u4eec\u603b\u7ed3\u51fa\u4e00\u6761\u65b0\u89c4\u5f8b\uff1a**\u53ef\u4ee5\u540c\u65f6\u7ffb\u8f6c\u4e24\u5f20\u5dee\u503c\u7b26\u53f7\u76f8\u53cd\u7684\u724c\u6765\u8ba9$s$\u7684\u7edd\u5bf9\u503c\u51cf\u5c11**\u3002\n\n\u8d2a\u5fc3\u8fc7\u540e,$O(n^2)$ \u66b4\u529b\u626b\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u72ec\u7684\u724c\u662f\u5426\u6709\u724c\u4e0e\u5b83\u914d\u5bf9\u4ea7\u751f\u65b0\u7684\u8d21\u732e\uff0c\u5982\u679c\u80fd\u5c31\u4fdd\u5b58\u3002**\u7136\u540e\u518d\u6b21\u8d2a\u5fc3\uff0c\u9009\u53d6\u8d21\u732e\u6700\u5927\u7684\u724c\u5bf9**\u3002\n\n$code:$\n```cpp\n    int maxn=0;     //\u6bcf\u4e2a\u5355\u72ec\u7684\u724c\u4e5f\u8981\u9009\u548c\u5b83\u914d\u5bf9\u8d21\u732e\u6700\u5927\u7684\uff0c\u8bf4\u767d\u4e86\u8fd8\u662f\u8d2a\u5fc3\n    int k=1;\n    for(int i=1;i<=n;i++)\n    {\n        maxn=0;\n        for(int j=i+1;j<=n;j++)\n        {\n            int c=a[i]+a[j];  //\u914d\u5bf9\n            if(abs(s)>abs(s+(c*2)) && abs(c)>abs(maxn))    //\u5408\u6cd5\uff0c\u4e14\u8d21\u732e\u6700\u5927\n            {\n                d[k]=c;\t\n                maxn=c;\n            }\n        }\n        k++;\n    }\n    sort(d+1,d+k+1);\n    for(int i=k;i>=1;i--)//\u4ece\u8d21\u732e\u5927\u7684\u5f00\u59cb\u626b\n    {\n        if(abs(s)>abs(s+d[i]*2))\n        {\n            ans+=2;//\u6ce8\u610f\u8fd9\u91cc\u662f\uff0b\uff12\uff01\u56e0\u4e3a\u662f\u7ffb\u8f6c\u4e24\u4e2a\u5355\u72ec\u7684\u724c\u4ea7\u751f\u7684\u8d21\u732e\n            s+=d[i]*2;\n        }\n    }\n```\n\u628a**\u4e24\u4efd\u4ee3\u7801\u5408\u5e76\u8d77\u6765**\u5c31\u80fd $AC$ \u5566QwQ.\n\n\u5f88\u4e45\u4ee5\u524d\u5199\u7684\uff0c\u7801\u98ce\u7565\u7a1a\u5ae9~~(\u8bf4\u7684\u597d\u50cf\u73b0\u5728\u4e0d\u662f\u4e00\u6837)~~\u3002\u800c\u4e14\u6bd5\u7adf\u5b98\u65b9\u6b63\u89e3\u662fDP\uff0c\u4e0d\u77e5\u9053\u8d2a\u5fc3\u5bf9\u4e0d\u5bf9\uff0c\n\u5982\u679c\u6709\u95ee\u9898\u6b22\u8fce\u5404\u4f4ddalao\u6765\u6307\u51fa\u6765$hack$\u5566\u3002\n\n### \u8d2a\u5fc3\u4e0d\u4ec5\u80fd\u8fc7\u6837\u4f8b\uff0c\u4e5f\u80fd$AC$\u7684QwQ.\n\n",
        "postTime": 1541556810,
        "uid": 112559,
        "name": "Zerosking",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u6709\u6eda\u52a8\u6570\u7ec4\u7684\u9898\u89e3\u2026\u2026\u54fc\uff0c\u4e3a\u4ec0\u4e48\u6ca1\u6709\u5361\u7a7a\u95f4\u5462qwq\uff01\uff1f\n\n\u9996\u5148\u6211\u4eec\u770b\u8fd9\u4e2a\u9898\uff0c\u662f\u4e2a$dp$\uff0c\u7ebf\u6027\u5355\u9879\u9012\u63a8\u7b2c\u4e00\u7ef4\u597d\u50cf\u5e76\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\u3002\u90a3\u6211\u4eec\u4e0d\u59a8\u8bbe$dp[i][j]$\u8868\u793a\u524d$i$\u4e2a\u7269\u54c1\uff0c\u4e0a\u4e0b\u5dee\u503c\u603b\u548c\u4e3a$j$\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u3002\u90a3\u4e48\u6709\u4e00\u4e2a\u663e\u7136\u7684$init$\u662f\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std ;\nconst int MAXN = 1010, NN = 5050 ; int out ;\nint i, j, k, N, A[MAXN], B[MAXN], dp[MAXN][NN << 1] ;\n\nint main(){\n\tcin >> N ; \n    memset(dp, 0x7f, sizeof(dp)) ;  \n    dp[0][NN] = 0 ;\n    ...........\n   }\n```\n\n\u7136\u540e\u6211\u4eec\u601d\u8003\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b$$dp_{i, j} = min\\{dp_{i, j - a_i+b_i}, dp_{i,j+a_i-b_i}+1 \\}$$\n\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u80cc\u5305\u5427\uff0c\u90a3\u5176\u5b9e\u5c31\u662f\u7531\u7ffb\u6216\u4e0d\u7ffb\u8f6c\u79fb\u8fc7\u6765\u7684\u800c\u5df2\u3002\u8bf6\uff0c\u8fd8\u6709\u4e00\u70b9\uff0c\u7531\u4e8e\u662f\u5dee\u503c\u561b\uff0c\u90a3\u4e48$A[i]-B[i]$\u5728\u524d\u8005\u8fd8\u662f\u5728\u540e\u8005\uff0c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u53e6\u4e00\u4e2a\u65b9\u7a0b\u5f53\u7136\u4e5f\u53ef\u4ee5\u554a\u3002$$dp_{i, j} = min\\{dp_{i, j + a_i-b_i}, dp_{i,j-a_i+b_i}+1 \\}$$\n\n\u4f46\u662f\u6211\u4eec\u8003\u8651\uff0c\u5176\u5b9e\u7b2c\u4e00\u7ef4\u662f\u6ca1\u6709\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u6700\u7ec8\u7684\u72b6\u6001\u662f\u786e\u5b9a\u7684\u5373$dp[n][$ \u4e0d\u786e\u5b9a $]$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6eda\u53bb\u4e00\u7ef4\u3002\u90a3\u4e48\u6700\u7ec8\u7684\u6838\u5fc3\u4ee3\u7801\u5c31\u957f\u8fd9\u4e2a\u6837\uff1a\n\n```cpp\n\tcin >> N ; memset(dp, 0x7f, sizeof(dp)) ;  dp[0][NN] = 0 ;\n\tfor(i = 1; i <= N; i ++) scanf(\"%d%d\", &A[i], &B[i]) ;  \n\tfor(k = i = 1; i <= N; i ++, k ^= 1){\n\t\tmemset(dp[k], 0x7f, sizeof(dp[k])) ; \n\t\tfor(j = -5000; j <= 5000; j ++)\n\t\t\tdp[k][j + NN] = min(dp[k ^ 1][j + A[i] - B[i] + NN], dp[k ^ 1][j - A[i] + B[i] + NN] + 1) ;  ;\n\t}\n```\n\u54b3\u54b3\uff0c\u4e0d\u77e5\u4e3a\u4ec0\u4e48\u8ff7\u604b\u4e0a\u4e86\u538b\u884c$emmm$\u3002\n\n\u90a3\u4e48\uff0c\u7531\u4e8e\u6211\u4eec\u7684\u7b2c\u4e8c\u7ef4$j$\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u524d\u5f80\u540e\u626b\u4e00\u904d\uff0c\u9047\u5230\u5408\u6cd5\u7684\u5c31\u8f93\u51fa\u5373\u53ef\uff08\u5408\u6cd5\uff1a$\\leq1000$\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u81f3\u591a\u4ea4\u6362$1000$\u6b21\uff09\n```cpp\n\tfor(i = 0; i <= 5000; i ++){\n\t\tout = min(dp[N & 1][i + NN], dp[N & 1][-i + NN]) ;\n\t\tif(out <= 1000) { cout << out ; break ;} \n\t}\n```\n\u55ef\uff0c\u6700\u540e\u8d34\u4e00\u6ce2\u6807\u79f0\u5427$qwq$\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std ;\nconst int MAXN = 1010, NN = 5050 ; int out ;\nint i, j, k, N, A[MAXN], B[MAXN], dp[2][NN << 2] ;\n\nint main(){\n\tcin >> N ; memset(dp, 0x7f, sizeof(dp)) ;  dp[0][NN] = 0 ;\n\tfor(i = 1; i <= N; i ++) scanf(\"%d%d\", &A[i], &B[i]) ;  \n\tfor(k = i = 1; i <= N; i ++, k ^= 1){\n\t\tmemset(dp[k], 0x7f, sizeof(dp[k])) ; \n\t\tfor(j = -5000; j <= 5000; j ++)\n\t\t\tdp[k][j + NN] = min(dp[k ^ 1][j + A[i] - B[i] + NN], dp[k ^ 1][j - A[i] + B[i] + NN] + 1) ;  ;\n\t}\n\tfor(i = 0; i <= 5000; i ++){\n\t\tout = min(dp[N & 1][i + NN], dp[N & 1][-i + NN]) ;\n\t\tif(out <= 1000) { cout << out ; break ;} \n\t} return 0 ;\n}\n```\n~~\u4f60\u751a\u81f3\u53ef\u4ee5\u628a\u5b83\u538b\u523015\u884c\uff08\u4eb2\u6d4b\uff09~~",
        "postTime": 1532084309,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u8bb8\u591a\u9898\u89e3\uff0c\u53d1\u73b0\u5f88\u5c11\u7528\u4e00\u7ef4\u6570\u7ec4\u7684\uff0c\u800c\u4e14\u6ca1\u6709\u50cf\u6211\u4e00\u6837\u5199\u7684\uff0c\u90a3\u5c31\u53d1\u7bc7\u9898\u89e3\u5427\n\n## \u65b9\u6cd5\uff1a**DP**\n\n### \u7528$f[i]$ \u4ee3\u8868\u8fbe\u5230$i$\u65f6\u7684\u6700\u5c0f\u65cb\u8f6c\u6b21\u6570\uff0c\u6700\u5f00\u59cb\u7684\u65f6\u5019\u628a$f[0]$\u8bbe\u4e3a$0$\uff0c\u5176\u4ed6\u90fd\u662f\u6781\u5927\u503c\uff0c\u5219\u6709\uff1a\n\n```cpp\nf[i+a1[i]]=f[i]//\u4e0d\u7ffb\u8f6c\nf[i+a2[i]]=f[i]+1;//\u7ffb\u8f6c\nf[i]=MAXN//\u7528\u8fc7\u540e\u5c31\u8bbe\u4e3a\u6781\u5927\u503c\n```\n\n### \u540c\u65f6\uff0c\u7528$sum$\u628a\u548c\u6c42\u51fa\u6765\uff0c\u6700\u540e\u53ea\u8981\u627e\u5230\u6700\u63a5\u8fd1$\\frac{sum}{2}$\u7684$i$\u4e14$f[i]$\u4e0d\u662f\u6781\u5927\u503c\u7684$i$\u5c31\u53ef\u4ee5\u4e86\n\nc++\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 1061109567\nusing namespace std;\n\nconst int M=500000;\nint n,sum;\nint f[M];\n\nint main()\n{\n    memset(f,0x3f,sizeof(f));\n    f[0]=0;\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        sum+=x+y;\n        for (int i=sum;i>=0;i--)//\u8fd9\u91cc\u8981\u5012\u7740\u641c\uff0c\u5426\u5219\u5728\u8fd9\u4e00\u6b21\u88ab\u6539\u53d8\u7684\u6570\u4f1a\u518d\u6b21\u88ab\u641c\u5230\n            if (f[i]!=MAXN)\n            {\n                int k=f[i];//\u8fd9\u53e5\u8bdd\u4e0d\u52a0\u597d\u50cf\u4e5f\u6ca1\u5173\u7cfb\n                f[i+x]=min(f[i+x],k);\n                f[i+y]=min(f[i+y],k+1);\n                f[i]=MAXN;\n            }\n    }\n    int Mid=sum/2;\n    if (sum%2==0)\n        for (int i=0;i<Mid;i++)\n        {\n             int ans=min(f[Mid-i],f[Mid+i]);\n            if(ans!=MAXN)\n            {\n                cout<<ans;\n                return 0;\n            }\n        }\n    else\n        for (int i=1;i<=Mid;i++)\n        {\n            int ans=min(f[Mid-i+1],f[Mid+i]);\n            if(ans!=MAXN)\n            {\n                cout<<ans;\n                return 0;\n            }\n        }\n    //\u8fd9\u91cc\u8981\u5206\u7c7b\u8ba8\u8bba\uff0c\u5426\u5219\u4f1aWA\u4e00\u4e2a\u70b9\n    return 0;\n}\n```",
        "postTime": 1559107821,
        "uid": 141179,
        "name": "pigstd",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "# \u3010\u4e00\u7ef4\u6570\u7ec4\u89e3\u6cd5\u3011emmmm\u8bdd\u4e0d\u591a\u8bf4\u5148\u8d34\u4ee3\u7801\n\n ```\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;//\u603b\u4f53\u4e3a\u80cc\u5305\u95ee\u9898\u601d\u8def\uff1b\n  \nint n;     //\u6211\u4eec\u628a\u4e0a\u4e0b\u4e24\u4e2a\u65b9\u5757\u770b\u6210\u4e00\u7ec4 \uff0c\u5206\u522b\u6c42\u51fasuma-->\u4e0a\u90e8\u603b\u548c\nint suma,sumb;          //\u4ee5\u53casumb \u4e0b\u90e8\u603b\u548c \nint v;                  //\u521d\u59cb\u72b6\u6001\u4e0b\u4e24\u5806\u7684\u5dee  \u6ce8\uff1a\u5177\u6709\u65b9\u5411\u6027 \nbool tryit[100005];\n //tryit[i]             \u80fd\u5426\u4f7f\u4e0a\u4e0b\u4e24\u5806\u7684\u5dee\u4e3ai \nint nowstep[100005];   \n// nowstep[i]   \u4ece\u539f\u59cb\u72b6\u6001\u5230\u4e0a\u4e0b\u4e24\u5806\u901a\u8fc7\u98a0\u5012\u5206\u914d\u5230\u7684\u5dee\u4e3ai \u6240\u9700\u8981\u7684\u6700\u5c0f\u6b65\u6570 \nint mbao[1005]; //\u628a \u5bf9\u6bcf\u4e2a\u9aa8\u724c\uff08\u4e0aand\u4e0b\uff09\u98a0\u5012\u540e\u4ea7\u751f\u7684\u5bf9suma-sumb\u7684\u5dee\u7684\u5f71\u54cd\u770b\u505a\u7269\u54c1\u7684\u4f53\u79ef \nint ass(int v1){return v1>0? v1:-v1;}\nvoid init();//init \u51fd\u6570\u5b8c\u6210\u8bfb\u5165\u548c\u521d\u59cb\u5316\u7684\u8fc7\u7a0b \nint main()\n{   init();  \nfor(int i=n;i>=1;i--)     // \u7531\u4e8embao\u6570\u7ec4\u5df2\u6392\u5e8f\uff0c\u4ece\u5927\u7269\u54c1\u5230\u5c0f\u7269\u54c1\u5faa\u73af \u53ef\u4fdd\u8bc1\u521d\u59cb\u7ed3\u679c\u6b65\u6570\u6700\u5c11 \n  {\n    for(int j=v+100;j>=0;j--)  //\u4e3a\u4ec0\u4e48\u662fv+100 \uff1f \u56e0\u4e3ambao\u6570\u7ec4\u4e2d\u6709\u8d1f\u6570\u60c5\u51b5 \n     {if(tryit[j]==true&&j+mbao[i]<=v+100)//\u4fbf\u53ef\u80fd\u51fa\u73b0 \u4f7f\u83b7\u5229\u5dee\u5148\u5927\u4e8ev\u518d\u51cf\u56de\u6765\u7684\u53ef\u80fd \n     \t{tryit[j+mbao[i]]=true;\n     \t if(nowstep[j+mbao[i]]==0)        //\u5982\u679c\u6b64\u524dj+mbao[i] \u4f4d\u7f6e\u8fd8\u6ca1\u6709\u8fbe\u5230 \n     \t    nowstep[j+mbao[i]]=nowstep[j]+1;\t\n     \t}\t  \n      if(tryit[v]==true)  //\u5982\u679c\u5728\u8fc7\u7a0b\u4e2d v\u4f4d\u7f6e\u88ab\u5e78\u8fd0\u6c42\u51fa\u5219\u7acb\u523b\u8f93\u51fa\u5e76\u7ed3\u675f\u7a0b\u5e8f \n        {\n          printf(\"%d\",nowstep[v]);\n          return 0;\n        }  \n     }\n  }\n     for(int i=v-1;i>=0;i--)   //\u5982\u679c\u5faa\u73af\u7ed3\u675f\u540e\u8fd8\u672a\u5bfb\u627e\u5230\u5229\u76ca\u5dee\u4e3av \u7684\u4f4d\u7f6e                          \n     {                       //\u5219\u4ecev-1\u4f4d\u7f6e\u5f00\u59cb\u54110\u5faa\u73af\uff0c\u76f4\u5230\u5bfb\u627e\u5230\u53ef\u4ee5\u5230\u8fbe\u7684\u4f4d\u7f6e\uff08tryit[i]==true\uff09 \n     \tif(tryit[i]==true)\n     \t {\n     \t \tprintf(\"%d\",nowstep[i]);\n     \t \treturn 0;\n     \t }\n     }\n       printf(\"0\");\n       return 0;\n}\nvoid init()\n{   scanf(\"%d\",&n);\n    for(int a,b,i=1;i<=n;i++)\n    {scanf(\"%d%d\",&a,&b);\n     suma+=a;\n     sumb+=b;\n     mbao[i]=2*(a-b);     //*2  \u662f\u56e0\u4e3a\u98a0\u5012\u4e00\u7ec4\uff0c\u5bf9\u4e0a\u4e0b\u4e24\u5806\u7684\u5dee\u7684\u5f71\u54cd\u662f\u4e0a\u4e0b\u4e24\u4e2a\u65b9\u5757\u6570\u5b57\u5dee\u7684\u4e24\u500d \n    }                     //                                         \uff08\u4e00\u4e2a\u53d8\u5927\u4e00\u4e2a\u53d8\u5c0f \uff09 \n     v=ass(suma-sumb);\n    if(suma-sumb<0)       //\u7edf\u4e00uma-sumb \u4e0e  mbao\u6570\u7ec4\u5185 \u4e0a\u4e0b\u4e24\u4e2a\u65b9\u5757\u7684\u5dee\u7684\u65b9\u5411\u6027 \n     {for(int i=1;i<=n;i++) \n      {\n      \tmbao[i]=-mbao[i];\n      }\t\n     }\n    memset(tryit,false,sizeof(tryit));\n    sort(mbao+1,mbao+n+1); //\u5c06  mbao\u6570\u7ec4\uff08\u50a8\u5b58\u7684\u662f\u6bcf\u7ec4\u4e0a\u4e0b\u5dee\uff09  \u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n    tryit[0]=true;        //\u521d\u59cb\u60c5\u51b5\u4e0b\uff0c\u4f7f\u4e0a\u4e0b\u4e24\u5806\u5206\u914d\u5230\u7684\u5229\u76ca\u4e3a0\u7684\u60c5\u51b5\u662ftrue\u7684\uff1b  \n    nowstep[0]=0;         //\u4e14 \u9700\u8981\u7684 \u6b65\u6570\u4e3a0 \n}\n```\n\n\n\u5199\u5728\u540e\u9762\u7684\u8bdd\uff1a\n1.\u672c\u9898\u4f7f\u7528\u4e00\u7ef4\u6570\u7ec4\u6700\u5927\u7684\u56f0\u96be\u5c31\u662f\u7edf\u4e00\u6bcf\u7ec4\u4e0a\u4e0b\u5dee\u7684\u65b9\u5411\u6027\u4e0e \u539f\u672c\u521d\u59cb\u60c5\u51b5\u4e0b\u6570\u7ec4suma\u4e0esumb\u5dee\u7684\u65b9\u5411\u6027\u7684\u95ee\u9898\u3002\n\n\n2.\u8fd0\u7528\u7c7b\u4f3c01\u80cc\u5305\u4e00\u7ef4\u6570\u7ec4\u6cd5\u7684\u601d\u8def\uff0c\u5e76\u4e14\u5229\u7528\u7269\u54c1\u4ece\u5927\u5230\u5c0f\uff0c\u8003\u8651\u4f4d\u7f6e\u4ece\u540e\u5f80\u524d\u7684\u987a\u5e8f\uff0c\u5229\u7528nowstep\u6570\u7ec4\u66f4\u65b0i\u4f4d\u7f6e\u7684\u6b65\u6570\uff0c\u5229\u7528\u7279\u6b8a\u7684\u987a\u5e8f\u6765\u4fdd\u8bc1\u6700\u4f18\u6027\u3002\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1519633178,
        "uid": 59324,
        "name": "kto_\u5207\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u849f\u84bb\u521a\u521a\u5b66\u4e86\u4e0b\u80cc\u5305\uff0c\u4e8e\u662f\u6765\u6c34\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u95ee\u9898\u7b2c\u4e00\u6b65\u662f\u8981\u628a\u5176\u8f6c\u5316\u4e3a\u80cc\u5305\u6a21\u578b\u3002\u770b\u5230\u6211\u4eec\u53ef\u4ee5\u7ffb\u8f6c\u4e0a\u4e0b\u7684\u9aa8\u724c\uff0c\u4e8e\u662f\u5c31\u63d0\u524d\u628a\u5927\u7684\u70b9\u7ffb\u5230\u4e0a\u9762\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53$a[i]<b[i]$\u65f6\uff0c$w[i]=-1,c[i]=abs(a[i]-b[i])$\n\n\u5f53$a[i]>b[i]$\u65f6,$w[i]=1,c[i]=abs(a[i]-b[i])$.\n\n\u7136\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8bb0\u5f55\u9884\u5904\u7406\u65f6\u7ffb\u8f6c\u7684\u6392\u6570\u7684\u6570\u91cf$(base)$\u3002\u56e0\u4e3a\u7ffb\u52a8\u4e00\u5f20\u724c\u7b49\u4e8e\u6ca1\u7ffb\uff0c\u6240\u4ee5$dp$\u6570\u7ec4\u5fc5\u4f1a\u51fa\u73b0\u8d1f\u6570($w[i]=-1$),\u6211\u4eec\u5f53\u7136\u8fd8\u8981\u628a\u539f\u6765\u7ffb\u8fc7\u7684\u6392\u6570\u52a0\u56de\u6765\u3002\n\n\u518d\u9700\u8981\u4e00\u4e2a$tot$\u53d8\u91cf\u8bb0\u5f55\u80cc\u5305\u4f53\u79ef\uff0c\u4e5f\u5c31\u662f\u4e0a\u4e0b\u70b9\u6570\u4e4b\u5dee\u4e4b\u548c\u3002\u5728\u4e0d\u8d85\u8fc7$tot$\u7684\u6761\u4ef6\u4e0b\uff0c\u4f7f\u5f97\u80cc\u5305\u88c5\u7684\u7269\u54c1\u4f53\u79ef\u6700\u5927\uff0c\u6570\u91cf\u6700\u5c11\u3002\n\n\u8bbe$dp[i][j]$\u662f\u524d$i$\u4ef6\u7269\u54c1\u88c5\u591f$j$\u7684\u4f53\u79ef\u7684\u6700\u5c0f\u6570\u91cf\uff0c\u8bbe$v[i][j]$\u8868\u793a\u5f53\u524d\u524d$i$\u4ef6\u7269\u54c1\u80fd\u4e0d\u80fd\u628a$j$\u7684\u4f53\u79ef\u88c5\u6ee1\u3002\n\n\u6700\u540e\uff0c\u6211\u4eec\u5012\u5e8f\u679a\u4e3e$i$($1<=i<=tot$),\u627e\u5230\u6700\u5927\u7684$i$\uff0c\u4f7f\u5f97\u524dn\u4ef6\u7269\u54c1\u53ef\u4ee5\u88c5\u591f$i$\u7684\u4f53\u79ef\u3002\n\n\u4e8e\u662f\uff0c\u6700\u540e\u7b54\u6848\u662f$base+dp[n][i]$.\n\nCode:\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#define MAXN 100000\nusing namespace std;\nint n,a[MAXN],b[MAXN],c[MAXN],w[MAXN],dp[2000][10000],tot;\nint base,v[2000][10000],cnt; \nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){//\u521d\u59cb\u5316 \n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\t\tif(a[i]>b[i])w[i]=1,tot+=abs(a[i]-b[i]);\n\t\tif(a[i]<b[i])w[i]=-1,tot+=abs(a[i]-b[i]),base++;//\u4e0b\u5927\u4e8e\u4e0a\u624d\u7ffb\u8f6c \n\t\tc[i]=abs(a[i]-b[i])*2;//\u4ef7\u503c\u7b49\u4e8e\u4e0a\u4e0b\u4e4b\u5dee\u7684\u4e24\u500d \n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=tot;j++){\n\t\t\tdp[i][j]=dp[i-1][j];\n\t\t\tv[i][j]=v[i-1][j];//\u5f53\u524d\u72b6\u6001\u7ee7\u627f\u4e0a\u6b21\u72b6\u6001 \n\t\t\tif(v[i-1][j-c[i]]||j-c[i]==0){//\u5982\u679c\u4e0a\u4e00\u6b21\u53ef\u4ee5\u88c5\u6ee1\u4ef7\u503c\u4e3aj\u7684\u7269\u54c1\u6216\u662f\u8fd9\u6b21\u53ef\u4ee5 \n\t\t\t\tif(!v[i][j]){//\u5c06\u5f53\u524d\u72b6\u6001\u6539\u4e3a\u53ef\u4ee5\uff0c\u5e76\u8f6c\u79fb\u72b6\u6001 \n\t\t\t\t\tdp[i][j]=dp[i-1][j-c[i]]+w[i];\n\t\t\t\t\tv[i][j]=1;\n\t\t\t\t}else dp[i][j]=min(dp[i][j],dp[i-1][j-c[i]]+w[i]);//\u5426\u5219\u4e0d\u9700\u8981\u591a\u4f59\u64cd\u4f5c\uff0c\u76f4\u63a5\u8f6c\u79fb\u5373\u53ef \n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=tot;i>=1;i--)if(v[n][i]){cnt=i;break;}//\u627e\u5230\u6700\u5927\u7684\u4f53\u79ef\uff0c\u53ef\u4ee5\u8ba9n\u4ef6\u7269\u54c1\u6b63\u597d\u88c5\u6ee1 \n\tcout<<base+dp[n][cnt]<<endl;//\u7528\u6700\u540e\u7684\u7b54\u6848\u52a0\u4e0a\u4e4b\u524d\u6240\u7ffb\u8f6c\u7684\u7b54\u6848 \n\treturn 0;\n} \n```\n",
        "postTime": 1557498058,
        "uid": 208881,
        "name": "Bitter_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u8fd9\u79cd\u9898\u76ee\u65b9\u6cd5\u5e94\u8be5\u90fd\u662f\u5927\u540c\u5c0f\u5f02\u3002\n\n\u8003\u8651\u4e00\u4e2a\u80cc\u5305\uff0c\n\n\u663e\u7136\u5982\u679c\u6211\u4eec\u76f4\u63a5\u8bbedp[i]\u8868\u793a\u524di\u4e2a\u4f7f\u5dee\u503c\u6700\u5c0f\u6240\u9700\u7684\u6700\u5c11\u7ffb\u8f6c\u6b21\u6570\uff0c\u662f\u5177\u6709\u540e\u6548\u6027\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u76f4\u63a5\u6c42\u6700\u503c\uff0c\u6539\u4e3a\u6c42\u67d0\u4e2a\u503c\u662f\u5426\u53ef\u884c\uff0c\u8fd9\u79cd\u6c42\u6700\u503c\u8f6c\u53d8\u4e3a\u6c42\u53ef\u884c\u6027\u7684\u601d\u60f3\u662f\u975e\u5e38\u5b9e\u7528\u7684\u3002\n\n\u6211\u4eec\u8bbedp[i][j]\u8868\u793a\u524di\u4e2a\u6570\u5b57\u901a\u8fc7\u67d0\u79cd\u65cb\u8f6c\u65b9\u5f0f\u4f7f\u5f97\u5dee\u503c\u4e3aj\uff08\u4e0d\u5e26\u7edd\u5bf9\u503c\uff09\u6240\u9700\u7684\u6700\u5c11\u7ffb\u8f6c\u6b21\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u6700\u7ec8dp\u7ed3\u675f\u540e\u53ea\u9700\u627e\u5230\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u975e\u6b63\u65e0\u7a77\u7684dp\u503c\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n\u8003\u8651\u5177\u4f53\u7684dp\u8fc7\u7a0b\uff08\u4e2a\u4eba\u91c7\u7528\u5237\u8868\u6cd5\uff0c\u586b\u8868\u6cd5\u65b9\u7a0b\u7c7b\u4f3c\uff09\uff1a\n\ndp[i+1][j+b[i]-a[i]]=min(dp[i][j]+1)//\u7ffb\u8f6c\n\ndp[i+1][j+a[i]-b[i]]=min(dp[i][j])//\u4e0d\u7ffb\u8f6c\n\n\u521d\u59cb\u5316\uff1adp[1][b[1]-a[1]]=1,dp[1][a[1]-b[1]]=0.\n\n\u5bf9\u4e8e\u8ba8\u8bba\u4e2d\u51fa\u73b0\u7684\u6781\u7aef\u6570\u636e\uff0c\u4e00\u5b9a\u8981\u628a\u521d\u59cb\u5316\u65b9\u7a0b\u6309\u987a\u5e8f\uff08\u5373=1\u7684\u5728\u4e0a\u9762\uff0c=0\u7684\u5728\u4e0b\u9762,\u8fd9\u6837\u7684\u8bdd\u5982\u679ca[1]=b[1]\u90a3\u4e480\u5c31\u4f1a\u76f4\u63a5\u8986\u76d6\u4e0a\u9762\u76841\uff09\u5199\u5c31\u884c\u4e86\u3002\n\n\u53c8\u56e0\u4e3aCpp\u8bed\u8a00\u4e2d\u6570\u7ec4\u6ca1\u6709\u8d1f\u7684\u4e0b\u6807\uff0c\u6240\u4ee5\u8fd8\u8981\u6570\u7ec4\u5e73\u79fb\u4e00\u4e0b\u3002P\u515a\u53ef\u4ee5\u5077\u7b11\u4e86\u3002\n\n\u81f3\u4e8e\u80cc\u5305\u4e0d\u80fd\u52a0\u6eda\u52a8\u6570\u7ec4\u7684\u8bf4\u6cd5\u7eaf\u5c5eche\uff0cdan\uff0c\u53ea\u662f\u4e00\u4e9b\u4f2adalao\u7684\u4f1a\u800c\u5df2\u3002\n\n\u6eda\u52a8\u6570\u7ec4\u7684\u65b9\u6cd5\u5177\u4f53\u53ef\u89c1\u4ee3\u7801\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\ntemplate<class T>void ChkMin(T &a,T b){if (b<a)a=b;}\nconst int INF=0x3f3f3f3f;\nconst int N=1010;\nint dp[2][20*N],a[N],b[N];//\u6570\u7ec4\u4f7f\u52b2\u5f00\uff0c\u6211\u5c31\u662f\u5f00\u5c0f\u4e86\uff0c\u5148\u662f9\uff0c\u7136\u540e73\uff0c\u7136\u540e91\uff0c\u6700\u540eAC = =\nint n;\nint main(){\n    scanf(\"%d\",&n);\n    int tot=0;\n    for (int i=1;i<=n;i++){\n        scanf(\"%d %d\",&a[i],&b[i]);\n        tot+=abs(a[i]-b[i]);\n    }\n    memset(dp,0x3f,sizeof(dp));\n    dp[1][2*tot-a[1]+b[1]]=1;\n    dp[1][2*tot+a[1]-b[1]]=0;\n    for (int i=1;i<n;i++){\n        int cur=i&1,nxt=cur^1;\n        memset(dp[nxt],0x3f,sizeof(dp[nxt]));\n        for (int j=tot;j<=3*tot;j++)\n            if (dp[cur][j]<INF){\n                ChkMin(dp[nxt][j+b[i+1]-a[i+1]],dp[cur][j]+1);\n                ChkMin(dp[nxt][j+a[i+1]-b[i+1]],dp[cur][j]);\n            }\n    }\n    for (int i=2*tot;i<=3*tot;i++)\n        if (dp[n&1][i]!=INF || dp[n&1][4*tot-i]!=INF){\n            printf(\"%d\",min(dp[n&1][i],dp[n&1][4*tot-i]));\n            break;\n        }\n    return 0;\n}\n```",
        "postTime": 1504614112,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u5176\u5b83\u9898\u89e3\u90fd\u662f\u80cc\u5305\uff08\u8fd8\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7684\uff1f\uff1f\uff09\uff0c\u6211\u4e4b\u524d\u641e\u51fa\u4e00\u4e2a\u795e\u5947\u7684\u65b9\u6cd5\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u8fd9\u662f\u4ec0\u4e48\u65b9\u6cd5\uff0c\u770b\u8d77\u6765\u50cf\u8bb0\u5fc6\u5316\uff0c\u4f46\u662f\u5176\u5b9e\u5e76\u4e0d\u662f\uff0c\u56e0\u4e3a\u6700\u540e\u6211\u76f4\u63a5\u66f4\u6539\u4e86\u5168\u5c40\u53d8\u91cf\u800c\u4e0d\u662f\u9012\u63a8\u51fa\u7ed3\u679c\u3002\u4f9b\u5927\u5bb6\u53c2\u8003\uff08~~\u6279\u5224~~\uff09\u5427,\u8fd9\u91cc\u8d34\u51fa\u6211\u4e4b\u524d\u7684\u89e3\u9898\u62a5\u544a\uff0c\u8f7b\u55b7..\n\n\n\u770b\u8d77\u6765\u662f\u4e2a\u80cc\u5305\u6a21\u578b\uff0c\u6211\u4eec\u5148\u6253\u4e00\u4e0b\u66b4\u641c+\u526a\u679d\u3002\ntot\u8868\u793a\u5f53\u524d\u6240\u6709\u9aa8\u724c\u7684\u548c\uff08\u548c\u7684\u542b\u4e49\u662f\u4e0a\u8fb9\u7684\u548c\u51cf\u4e0b\u9762\u7684\u548c\uff0c\u4e0d\u5e26\u7edd\u5bf9\u503c\uff09\u3002K\u5219\u662f\u8868\u793a\u51b3\u5b9a\u5230\u4e86\u7b2ck\u4e2a\uff0cans\u6307\u7684\u662f\u4e00\u5171\u64cd\u4f5c\u4e86\u591a\u5c11\u6b21\u3002\n\n## Code A\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\nint n,up[1001],down[1001],minn,ANS=99999,dp[10010][1011];\n\nvoid dfs(int tot,int k,int ans){\n   if (dp[tot+5000][k]<=ans)\n      return ;\n   if (k==0){\n      if (abs(tot)==minn)\n         ANS=min(ans,ANS);\n      if (abs(tot)<minn){\n         minn=abs(tot),\n         ANS=ans;\n      }\n      return ;\n   }\n   int temp=tot-up[k]-up[k]+down[k]+down[k];\n   dp[tot+5000][k]=ans,\n   dfs(tot-up[k]-up[k]+down[k]+down[k],k-1,ans+1),\n   dfs(tot,k-1,ans);\n}\n \nint main(){\n   freopen(\"test.in\",\"r\",stdin);\n   freopen(\"test.out\",\"w\",stdout);\n   cin>>n;\n   memset(dp,1,sizeof(dp));\n   int temp=0;\n   for (int i=1;i<=n;i++)\n      cin>>up[i]>>down[i],temp+=up[i]-down[i];\n   minn=abs(temp);\n   dfs(temp,n,0);\n   cout<<ANS<<endl;\n   return 0;\n}\n```\n\n\u60ca\u4eba80\u5206\u3002\u6211\u8fd9\u4e2a\u526a\u679d\u8fd8\u4e0d\u591f\u5f7b\u5e95\uff0c\u5982\u679c\u80e1\u4e71\u8d2a\u5fc3\u4e00\u70b9\uff0c\u8fd8\u53ef\u4ee5\u5728\u5224\u65ad\u4e86tot\u7684\u52a0\u51cf\u8d8b\u52bf\u662f\u7edd\u5bf9\u503c\u53d8\u5927\u8fd8\u662f\u53d8\u5c0f\u518d\u641c\uff0c\u4ee5\u53ca\u5224\u65adtot\u662f\u5947\u6570\u8fd8\u662f\u5076\u6570\u3002\u526a\u679d\u526a\u5f97\u66f4\u6709\u6548,\u901f\u5ea6\u66f4\u5feb\u3002\uff08\u5f53\u7136\uff0c\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\u4e0d\u80fd\u4fdd\u8bc1\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u8d2a\u5fc3\u7684\u6210\u529f\u7387\u8fd8\u662f\u5f88\u5927\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u9aa8\u724c\u4e0a\u4e0b\u98a0\u5012\u4fee\u6539\u7684tot\u76f8\u5bf9\u4e8etot\u6574\u4f53\u5f88\u5c0f\u3002\uff09\n\n\u90a3\u4e48\u8fd9\u9898\u600e\u4e48\u7528\u52a8\u5f52\u5462?\n\n\u4f9d\u636e\u6211\u5df2\u7ecf\u6253\u51fa\u7684\u6df1\u641c\u526a\u679d\u3002\u6211\u60f3\u5230\uff0c\u53ef\u4ee5\u4fdd\u6301tot\u3001k\u7684\u542b\u4e49\u4e0d\u53d8\uff0c\u5220\u53bbans\u8fd9\u4e2a\u51fd\u6570\u53c2\u6570\uff0c\u4f7f\u5176\u53d8\u6210\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u6210\u4e3a\u9012\u63a8\u3002\n\n\u8fd9\u6837\uff0c\u6211\u6253\u51fa\u4e86\u5982\u4e0b\u4ee3\u7801\u3002\n\n## Code B\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint n,up[1001],down[1001],minn=666,dp[11001][1011]; \n\nint dfs(int tot,int k){\n\tif (dp[tot+5000][k]!=-1)\n    \treturn dp[tot+5000][k];\n   \tif (k==0){\n    \tif (abs(tot)>minn)\n        \treturn 9999;\n        else{\n        \tminn=abs(tot);\n            return 0;\n        }\n    }\n    int ans=0;\n    ans=dfs(tot-up[k]-up[k]+down[k]+down[k],k-1)+1;\n   \tans=min(ans,dfs(tot,k-1));\n    return dp[tot+5000][k]=ans;\n}\n\nint main(){\n\tfreopen(\"test.in\",\"r\",stdin);\n\tfreopen(\"test.out\",\"w\",stdout);\n    cin>>n;\n    memset(dp,-1,sizeof(dp));\n    int temp=0;\n    for (int i=1;i<=n;i++)\n        cin>>up[i]>>down[i],temp+=up[i]-down[i];\n   \tint ans=0;\n    ans=dfs(temp,n);\n    cout<<ans<<endl;\n    return 0;\n}\n```\n\n\u8fd9\u662f90\u5206\uff0c\u9519\u5728\u54ea\u91cc\u5462\uff1f\u8fd9\u4e2a\u65b9\u6cd5\u6839\u672c\u975e\u4e3b\u6d41\uff0c\u751a\u81f3\u4e0d\u50cf\u662f\u52a8\u5f52\uff08\u770b\u770b\u52a0\u7c97\u7684\u5b57\u4f53\u90e8\u5206\uff09\u3002\n\n\u56de\u987e\u4e00\u4e0b\u6211\u51fd\u6570\u53c2\u6570\u7684\u5b9a\u4e49\u3002Tot\u8868\u793a\u603b\u7684\u503c\uff0ck\u8868\u793a\u5230\u7b2c\u51e0\u4e2a\u3002\u6ce8\u610f\u5230\uff0c\u7531\u4e8etot\u8868\u793a\u7684\u662f\u603b\u7684\u503c\uff0c\u8fd9\u4e2a\u662f\u4e0d\u5177\u6709\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u7684\uff01\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u4fdd\u8bc1\u7b2c\u4e00\u6b21\u641c\u5230\u7b2ck\u4e2a\u7684\u65f6\u5019tot\u503c\u5c31\u662f\u5168\u5c40\u7684\u7edd\u5bf9\u503c\u6700\u5c0f\uff0c\u800c\u7531\u4e8e\u6211\u7b2c\u4e00\u6b21\u641c\u7684\u65f6\u5019\u5c31\u4f1a\u628adp\u6570\u7ec4\u8986\u76d6\uff0c\u6240\u4ee5\u6211\u4eecdp\u91cc\u5b58\u7684\u503c\u672a\u5fc5\u662f\u5728tot\u7edd\u5bf9\u503c\u6700\u5c0f\u65f6\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\u5982\u679c\u6211\u4eec\u628atot\u8868\u793a\u6210\u5230\u7b2ck\u4e2a\u7684\u503c\uff0c\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u5c31\u6ca1\u6709\u529e\u6cd5\u9012\u5f52\u4e86\uff01\u600e\u4e48\u529e\uff1f\u6211\u4eec\u7684\u76ee\u6807\u662f\u5f62\u6210\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u3002\n\n\u6211\u4eec\u4ecedfs\u7684\u89c4\u5219\u5165\u624b\u3002\u7531\u4e8etot\u8868\u793a\u7684\u662f\u603b\u7684\u503c\uff0c\u53ef\u80fd\u5728\u8fb9\u754c\u524d\u7684\u4e00\u6b21\u66f4\u6539\uff0c\u5c31\u662ftot\u7edd\u5bf9\u503c\u6700\u5c0f\u503c\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u53ef\u80fd\u98a0\u5012\u4e86\u9aa8\u724c\uff0c\u6240\u4ee5tot\u504f\u79bb\u4e86\u771f\u6b63\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u662f\u4e0d\u6b63\u786e\u7684\u3002\u7ecf\u8fc7\u753b\u56fe\uff08\u641c\u7d22\u7684\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u53ea\u8981\u5728\u641c\u4e0b\u53bb\u4e4b\u524d\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e48\u66f4\u6539\u662f\u4e0d\u662f\u80fd\u8ba9tot\u7edd\u5bf9\u503c\u66f4\u5c0f\u5c31\u53ef\u4ee5\u4e86\uff01\u4e00\u5b9a\u53ef\u4ee5\u4e0d\u98a0\u5012\u9aa8\u724c\uff0c\u51b3\u5b9a\u98a0\u5012\u4e4b\u524d\u5224\u65ad\u4e00\u4e0b\u662f\u4e0d\u662f\u80fd\u8fbe\u5230\u66f4\u4f18\u5373\u53ef\u3002\u6211\u4eec\u8fd8\u8981\u6bcf\u6b21\u641c\u7d22\u4e4b\u524d\u66f4\u65b0\u4e00\u4e0b\u5168\u5c40\u6700\u5c0f\u503c\uff0c\u9632\u6b62\u641c\u5230\u6700\u540e\u4e0d\u662ftot\u7edd\u5bf9\u503c\u6700\u5c0f\u503c\u5374\u8ba4\u4e3a\u662f\u3002\u5f53\u7136\uff0c\u8fd9\u4e2a\u66f4\u6539\u6700\u5c0f\u503c\u7684\u6839\u672c\u539f\u56e0\u4ecd\u7136\u662f\u6811\u3002\u8fd9\u4e2a\u72b6\u6001\u8f6c\u79fb\u9700\u8981\u5224\u65ad\uff08\u867d\u7136\u4e0d\u5224\u65ad\u5176\u5b9e\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u53cd\u6b63\u6700\u540e\u90fd\u4e0d\u662f\u6700\u4f18\u89e3\uff09\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e0d\u597d\u5199\u3002\n## Code C\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint n,up[1001],down[1001],minn=666,dp[12001][1011],C[1001];\n\nint dfs(int tot,int k){\n\tif (dp[tot+1000][k]!=-1)\n\t\treturn dp[tot+5000][k];\n\tif (k==0){\n\t\tif (abs(tot)>minn)\n\t\t\treturn 9999;\n\t\telse{\n\t\t\tminn=abs(tot);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tint ans=9999;\n\tminn=min(abs(tot-C[k]*2),min(abs(tot),minn));\n\tif ((tot>0 and C[k]>0) or (tot<0 and C[k]<0))\n\t\tans=dfs(tot-C[k]-C[k],k-1)+1;\n\tans=min(ans,dfs(tot,k-1));\n\treturn dp[tot+5000][k]=ans;\n}\n\nint main(){\n    freopen(\"test.in\",\"r\",stdin);\n\tfreopen(\"test.out\",\"w\",stdout);\n\tcin>>n;\n\tmemset(dp,-1,sizeof(dp));\n\tint temp=0;\n\tfor (int i=1;i<=n;i++)\n\t\tcin>>up[i]>>down[i],temp+=up[i]-down[i],\n\tC[i]=up[i]-down[i];\n    int ans=0;\n\tans=dfs(temp,n);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1541580411,
        "uid": 36399,
        "name": "blackjack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "## # **\u8fd9\u9898\u662f\u6211\u7b2c\u4e00\u4e2a\u81ea\u5df1\u505a\u51fa\u6765\u6ca1\u770b\u9898\u89e3\u7684\u84dd\u9898\uff01\uff01**## \n\u6fc0\u52a8\u7684\u8e66\u8df6\uff0c\u8d76\u7d27\u6765\u53d1\u7bc7\u9898\u89e3~~\u561a\u745f\u561a\u745f~~\n\n------------\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e00\u7ec4\u9aa8\u724c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5355\u72ec\u8ba1\u7b97\u3002\n\n\u8bbe\u8ba1\u72b6\u6001\u4e3af[i][j],\u8868\u793a\u5904\u7406\u5230\u7b2ci\u4e2a\u9aa8\u724c\uff0c\u6240\u6709\u4e0a\u9762\u7684\u6570\u51cf\u53bb\u6240\u6709\u4e0b\u9762\u7684\u6570\u7684\u503c\u4e3aj\u7684\u6700\u5c0f\u65cb\u8f6c\u6b21\u6570\u3002\u56e0\u4e3a\u6bcf\u4e00\u7ec4\u7684\u5dee\u503c\u4e0d\u8d85\u8fc75\uff0c\u6700\u591a\u67091000\u7ec4\u9aa8\u724c\uff0c\u6240\u4ee5j\u7684\u8303\u56f4\u662f-5000~5000\u3002\u5904\u7406\u65f6\u5c06j\u90fd\u52a0\u4e0a5000\uff0c\u6765\u5904\u7406\u8d1f\u6570\u4e0b\u6807~~\u3010\u672c\u6765\u6ca1\u6709\u8003\u8651\u5230\u8fd9\u4e2a\u7adf\u7136\u4e5f\u8fc7\u4e86...\u679c\u7136\u7384\u5b66\u3011~~\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3af[i][j]=min(f[i-1][j-(a[i]-b[i])],f[i-1][j-(b[i]-a[i])]+1); \n\n\u5373\u5982\u679c\u4e0d\u65cb\u8f6c\uff0c\u7b2ci\u7ec4\u9aa8\u724c\u7684\u7ed3\u679c\u662fa[i]-b[i]\uff0c\u6240\u4ee5\u4ecef[i-1][j-(a[i]-b[i])]\u8f6c\u79fb\u8fc7\u6765\uff0c\u7b54\u6848\u4e0d\u52a0\uff0c\u5982\u679c\u65cb\u8f6c\uff0c\u7b2ci\u7ec4\u9aa8\u724c\u7684\u7ed3\u679c\u662fb[i]-a[i]\uff0c\u6240\u4ee5\u4ecef[i-1][j-(b[i]-a[i])]\u8f6c\u79fb\u8fc7\u6765\uff0c\u7b54\u6848+1\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u7edf\u8ba1\u7b54\u6848\u4e86\uff0c\u6309\u7edd\u5bf9\u503c\u4ece\u5c0f\u5230\u5927\u627e\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u6709\u89e3\u7684\u503c\u5c31\u662f\u7b54\u6848\uff0c\u5373\u5dee\u503c\u6700\u5c0f\u65f6\u7684\u7b54\u6848\uff0c\u5982\u679c\u6b63\u8d1f\u540c\u65f6\u6210\u7acb\uff0c\u5c31\u53d6\u6700\u5c0f\u503c\n\n\n\u4e0a\u4ee3\u7801\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint n,ans=1005; \nint a[1005],b[1005];\nint f[1005][10005]; \nint p=5001;\nint main()\n{\n\tmemset(f,0x3f3f3f,sizeof(f));\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i]>>b[i];\n\tf[1][a[1]-b[1]+p]=0;\n\tf[1][b[1]-a[1]+p]=1;\n\tfor(int i=2;i<=n;i++)\n\t  for(int j=-5000;j<=5000;j++)\n\t    f[i][j+p]=min(f[i-1][j-(a[i]-b[i])+p],f[i-1][j-(b[i]-a[i])+p]+1); \n    for(int i=0;i<=5000;i++)\n      if(f[n][i+p]<=1000||f[n][-i+p]<=1000)\n      {\n\t    ans=min(f[n][i+p],f[n][-i+p]);\n\t    break;\n\t  }  \n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1540900358,
        "uid": 27059,
        "name": "\u5317\u65b9\u6709\u5c0f\u4ed9\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "># [$\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c$](https://www.cnblogs.com/qf-breeze/p/10658374.html)\n\n>\u8fd9\u9898\u662f\u4e00\u4e2a$DP$\u9898\n\n\u8bbe$f[i][j]=k$\u8868\u793a\u524di\u5f20\u724c\u6784\u6210\u5206\u503cj\u7684\u6700\u5c0f\u6b21\u6570k\n\n\u8bbe $dis = a[i]-b[i]$\n\n//\u4e0d\u53cd\u8f6c \n$$f[i][j+dis+N]=min(f[i][j+dis+N],f[i-1][j+N]);$$\n\n//\u53cd\u8f6c \n$$f[i][j+dis+N]=min(f[i][j+dis+N],f[i-1][j+N]+1);$$\n\n\u6240\u4ee5\u5f97\u51fa\n\n$$f[i][j+N] = min(f[i-1][j-dis+N] , f[i-1][j+dis+N] + 1) ;$$\n\n>\u53cd\u89c2\u590d\u6742\u5ea6 $O(N^2)$\n>~~\u53cd\u6b63\u80fd\u8fc7\u5c31\u884c\u4e86~~\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(i,j,n) for(register int i=j;i<=n;i++)\n#define Rep(i,j,n) for(register int i=j;i>=n;i--)\n#define low(x) x&(-x)\nusing namespace std ;\ntypedef long long LL ;\nconst int inf = INT_MAX >> 1 ;\ninline LL In() { LL res(0) , f(1) ; register char c ;\n#define gc c = getchar()\n    while(isspace(gc)) ; c == '-' ? f = - 1 , gc : 0 ;\n    while(res = (res << 1) + (res << 3) + (c & 15) , isdigit(gc)) ;\n    return res * f ;\n#undef gc\n}\n\nint n ;\nconst int Size = 1000 + 5 ;\nconst int N = 5000 ;\nint a[Size] , b[Size] ;\nint f[Size][Size * 11] ;\nint ans ;\ninline void Ot() {\n\tn = In() ;\n\trep(i,1,n) a[i] = In() , b[i] = In() ;\n\tmemset(f,0x7f,sizeof(f)) ;\n\tf[0][N] = 0 ;\n\trep(i,1,n) rep(j,-N,N) {\n\t\tint dis = a[i] - b[i] ;\n\t\tf[i][j+N] = min(f[i-1][j-dis+N] , f[i-1][j+dis+N] + 1) ;\n\t}\n\trep(i,0,N) {\n\t\tint ans = min(f[n][N+i] , f[n][N-i]) ;\n\t\tif(ans <= 1000) {\n\t\t\tprintf(\"%d\\n\",ans) ;\n\t\t\treturn ;\n\t\t}\n\t}\n}\nsigned main() {\n//  freopen(\"testdata.txt\",\"w\",stdout) ;\n    return Ot() , 0 ;\n}\n\n```",
        "postTime": 1555133216,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u7b97\u662f\u60f3\u6cd5\u6bd4\u8f83\u7c97\u66b4\u7684\u8bb0\u5fc6\u5316\u641c\u7d22\n\n\u8bbe\u7b2ci\u4e2a\u9aa8\u724c\u4e0a\u534a\u90e8\u5206\u4e3aUP[i],\u4e0b\u534a\u90e8\u5206\u4e3aDOWN[i],\n\n\n\u8003\u8651\u6700\u540e\u4e00\u4e2a\u9aa8\u724cn,\u8981\u6c42\u51fa\u7edd\u5bf9\u503c\u6700\u5c0f\uff08\u5373\u6700\u63a5\u8fd10\uff09\u7684\u6240\u6709\u9aa8\u724c\u4e0a\u4e0b\u4e24\u884c\u7684\u5dee,\u5219: \n\n\u9aa8\u724cn**\u4e0a\u4e0b\u4e24\u4e2a\u6570**\u4e4b\u5dee(\u7ffb\u8f6c\u4e0e\u4e0d\u7ffb\u8f6c\u4e24\u79cd\u60c5\u51b5)\n\n\u52a0\u4e0a \n\n\u524d(n-1)\u4e2a\u9aa8\u724c\u7684**\u4e0a\u4e0b\u4e24\u884c**\u4e4b\u5dee\n\n\u7684\u548c\u8981\u6700\u63a5\u8fd10\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a \u6c42\u6700\u63a5\u8fd1(0 - \u9aa8\u724cn**\u4e0a\u4e0b\u4e24\u4e2a\u6570**\u4e4b\u5dee) \u7684\u524d(n-1)\u4e2a\u9aa8\u724c\u7684**\u4e0a\u4e0b\u4e24\u884c**\u4e4b\u5dee\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528dp(i,j)\u6765\u8868\u793a\u524di\u4e2a\u9aa8\u724c\u6700\u63a5\u8fd1\u6570\u503cj\u7684\u5dee\uff0c\u65b9\u7a0b\u4e3a![](https://cdn.luogu.com.cn/upload/pic/15761.png)\n\n(UD\u8868\u793aUP[i]-DOWN[i],DU\u53cd\u4e4b\uff0cunrot\u4ee3\u8868\u9aa8\u724c\u4e0d\u7ffb\u8f6c\u65f6\u4e0ej\u7684\u5dee\u8ddd\uff0croted\u53cd\u4e4b\uff09\n\n\u4f46\u662f\u6211\u4eec\u8fd8\u8981\u6c42\u6700\u5c0f\u7ffb\u8f6c\u6b21\u6570\uff0c\u6240\u4ee5\u8fd8\u8981\u589e\u52a0\u4e00\u4e2arotCnt\u6570\u7ec4\u6765\u6c42\u6700\u5c0f\u6b21\u6570\uff0c\u5e76\u5728unrot\u548croted\u76f8\u540c\u65f6\u9009\u62e9\u7ffb\u8f6c\u6b21\u6570\u6700\u5c11\u7684\u7b54\u6848\uff09\n\n\u5173\u4e8e\u8d1f\u6570\u4e0b\u6807\uff1a\u53ef\u4ee5\u5c06dp(n,0)\u6362\u6210dp(n,\u865a\u62df\u7684\u96f6),\u8fd9\u6837\u5dee\u5c31\u4f1a\u63a5\u8fd1\u865a\u62df\u7684\u96f6\u800c\u4e0d\u4f1a\u4ea7\u751f\u8d1f\u6570\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n\nconst int maxn = 1010;\n\nint UP[maxn], DOWN[maxn], d[maxn][5000], rotCnt[maxn][5000];\nbool vis[maxn][5000];\nconst int vzero = 2500;\n\nint dp(int i, int j)\n{\n    if (vis[i][j])\n        return d[i][j];\n    if (i == 0)\n        return vzero;\n    vis[i][j] = true;\n    int &ans = d[i][j];\n    int UD = UP[i] - DOWN[i];\n    int DU = DOWN[i] - UP[i];\n    int unrot = abs(j - (UD + dp(i - 1, j - UD)));\n    int roted = abs(j - (DU + dp(i - 1, j - DU)));\n    if (unrot == roted)\n    {\n        if (rotCnt[i - 1][j - UD] < rotCnt[i - 1][j - DU] + 1)\n        {\n            ans = UD + dp(i - 1, j - UD);\n            rotCnt[i][j] = rotCnt[i - 1][j - UD];\n        }\n        else\n        {\n            ans = DU + dp(i - 1, j - DU);\n            rotCnt[i][j] = rotCnt[i - 1][j - DU] + 1;\n        }\n    }\n    else if (unrot < roted)\n    {\n        ans = UD + dp(i - 1, j - UD);\n        rotCnt[i][j] = rotCnt[i - 1][j - UD];\n    }\n    else\n    {\n        ans = DU + dp(i - 1, j - DU);\n        rotCnt[i][j] = rotCnt[i - 1][j - DU] + 1;\n    }\n    return ans;\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++)\n    {\n        scanf(\"%d%d\", &UP[i], &DOWN[i]);\n    }\n    dp(n, vzero);\n    printf(\"%d\\n\", rotCnt[n][vzero]);\n    return 0;\n}\n```",
        "postTime": 1521305927,
        "uid": 51786,
        "name": "ZIXT",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u679a\u4e3e\u53ef\u80fd\u7684\u5dee\u503c\uff08\u7c7b\u4f3c\u4e8e\u4e0d\u7528DP\u505a\u7684\u201c\u88c5\u7bb1\u95ee\u9898\u201d\u7684\u601d\u8def\uff09\uff1b\n\n\u8bbe\u7b2ci\u5f20\u724c\u7684\u5dee\u503c\u4e3acha[i]\uff0c\u521a\u5f00\u59cb\u6709\u4e00\u4e2a\u521d\u59cb\u7684\u5dee\u503csum\uff08\u6240\u6709\u724c\u7684\u4e0a\u9762\u548c\u7684\u51cf\u53bb\u4e0b\u9762\u7684\u548c\uff09\uff0c\u7ffb\u7b2ci\u5f20\u724c\u7684\u65f6\u5019\uff0c\u4e0a\u9762\u7684\u548c\u51cf\u5c11cha[i],\u4e0b\u9762\u7684\u548c\u589e\u52a0cha[i]\uff0c\u6700\u7ec8\u7684\u6548\u679c\u5c31\u662f\u4f7f\u521d\u59cb\u5dee\u503c\u51cf\u5c112\\*cha[i]\uff0c\u7136\u540e\u53ea\u8981\u5f00\u6570\u7ec4chazhi\u679a\u4e3e\u53ef\u80fd\u7684\u5dee\u503c\uff0c\u6700\u540e\u4ece\u5dee\u503c\u4e3a-sum\u5f00\u59cb\u627e\u5c31\u884c\n\n\u679a\u4e3e\u65b9\u6cd5\u770b\u4ee3\u7801\n\n```delphi\n\nvar  n,i,j,sum,x,y:longint;  \n     a,b:array[-5010..5010]of longint;  \n     cha:array[-10..1010]of longint;  \nfunction min(a,b:longint):longint;  \nbegin  \n   if a>b  then exit(b) else exit(a);  \nend;  \nbegin  \n   \n  readln(n);  \n  for i:=1 to n do  \n    begin  \n       read(x,y); cha[i]:=x-y; sum:=sum+cha[i]  \n    end;  \n   x:=5\\*n; y:=-x;  \n   if sum=0 then begin writeln(0);halt end;  \n   for i:=1 to n do  \n    begin  \n       b:=a;     //\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5dee\u503c\u6709\u6b63\u6709\u8d1f\uff0c\u53ef\u80fd\u679a\u4e3e\u4e2d\u8986\u76d6\u4e0a\u4e00\u6b65\u7684\n                  \u6240\u4ee5\u6bcf\u6b21\u5148\u53ea\u5728b\u4e2d\u6539\u53d8\u6570\u503c\uff0c\u7b2ci\u5f20\u724c\u5904\u7406\u5b8c\u540e\u518d\u628aa\u53d8\u6210b\n        for j:=y to x do              //\u679a\u4e3e\u7684\u5dee\u503c\u8303\u56f4\n         if a[j]>0 then    //\u6b65\u6570\u4e0d\u4e3a0\u624d\u505a\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u5dee\u503c\u80fd\u591f\u8fbe\u5230\n         begin             //\u4e0d\u4e3a0\u65f6\u53d6\u6700\u5c0f\u6b65\u6570\n          if b[j-2\\*cha[i]]>0  \n           then b[j-2\\*cha[i]]:=min(b[j-2\\*cha[i]],a[j]+1)  \n          else b[j-2\\*cha[i]]:=a[j]+1;  \n         end;  \n         b[-2\\*cha[i]]:=1;  \n         a:=b;  \n    end;  \n   i:=-sum; j:=i;  \n   while true do  \n    begin  \n       if (a[i]>0)and(a[i]<=a[j]) then  \n        begin  \n          writeln(a[i]);  \n  \n          halt;  \n        end;  \n       if a[j]>0 then begin writeln(a[j]);halt; end;  \n       dec(i); inc(j);  \n    end;  \n     \nend.",
        "postTime": 1433752075,
        "uid": 5729,
        "name": "zls6602488",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "# \u4e00\u7ef4\u6570\u7ec4\u89e3\u6cd5\n**\u6570\u7ec4\u4f5c\u7528**\uff1af[i]\u8868\u793a\u7ecf\u8fc7\u6700\u5c11\u53cd\u8f6c\u6570\u5f97\u5230\u6570\u5b57i\u7684\u6700\u5c0f\u503c\uff0c\u7531\u4e8e\u9898\u76ee\u4e2da,b\u7684\u503c\u4e3a1~6\uff0c\u6240\u4ee5\u8303\u56f4\u4e3a-5000~5000\uff0c\u5f0010000\u7684\u6570\u7ec4\u5373\u53ef\u3002  \ns\u6570\u7ec4\u4e3a\u8be5\u5bf9\u591a\u7c73\u8bfa\u9aa8\u724c\u5bf9\u6574\u4e2a\u5e8f\u5217\u7684\u8d21\u732e\uff0c\u8fd9\u4e2a\u4f5c\u7528\u4e0d\u5927\u3002\n\n------------\n**\u505a\u6cd5\u601d\u8def**\uff1a\u5bf9\u4e8e\u6bcf\u5bf9\u9aa8\u724c\uff0c\u82e5\u53cd\u8f6c\u5c31\u4f1a\u5bf9\u4f7f\u539f\u503c\u53d8\u6210j-s[i]*2\uff08\u8bbej\u4e3a\u539f\u503c\uff09\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u5bf9\u9aa8\u724c\uff0c\u90fd\u53cd\u8f6c\u4e00\u4e0b\uff0c\u7528\u8fd9\u4e2a\u6765\u66f4\u65b0f\u6570\u7ec4\uff0c\u7136\u540e\u5c31\u76f4\u63a5DP\u505a\u3002\n\n\n------------\n**\u4ee3\u7801\u5982\u4e0b**\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint s[1005],f[10005];\nint main()\n{\n    int n,a,b,i,j,x=0;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n      scanf(\"%d%d\",&a,&b),s[i]=a-b,x+=s[i];\n    for(i=0;i<=10000;i++)f[i]=99999999;//\u4e00\u5f00\u59cb\u9ed8\u8ba4\u8981\u53cd\u8f6c\u65e0\u7a77\u591a\u6b21\u5f97\u5230\u503ci\n    f[x+5000]=0;//\u521d\u59cb\u5316\uff0c\u539f\u503c\u4e0d\u9700\u8981\u53cd\u8f6c\uff0c\u6240\u4ee5f[x]=0;\n    for(i=1;i<=n;i++)   //\u679a\u4e3e\u6bcf\u5bf9\u9aa8\u724c\n    {\n      if(s[i]==0)continue;\n      //j\u4e3a\u679a\u4e3e\u54ea\u4e9b\u503c\u662f\u5df2\u7ecf\u5b58\u5728\u7684\uff0c\u518d\u8ba1\u7b97\u53cd\u8f6c\u4e4b\u540e\u5bf9\u65b0\u6570\u5b57\u7684\u8d21\u732e\n      for(j=5000;j>=0;j--)\n      {\n      \tif(f[j]==99999999)continue;\n\t    if((j-s[i]*2)<=10000&&(j-s[i]*2)>=0)\n\t    {\n\t\t  f[j-s[i]*2]=min(f[j]+1,f[j-s[i]*2]);\n\t\t}\n\t  }\n\t  for(j=5000;j<=10000;j++)\n      {\n      \tif(f[j]==99999999)continue;\n\t    if((j-s[i]*2)<=10000&&(j-s[i]*2)>=0)\n\t    {\n\t\t  f[j-s[i]*2]=min(f[j]+1,f[j-s[i]*2]);\n\t\t}\n\t  }\n    }\n    \n    //\u6309\u7167\u9898\u76ee\u8981\u6c42\uff0c\u627e\u51fa\u4e0a\u4e0b\u6392\u9aa8\u724c\u4e4b\u5dee\u7edd\u5bf9\u503c\u6700\u5c0f\uff0c\u4e14\u53cd\u8f6c\u6b21\u6570\u6700\u5c11\uff0c\u5e94\u8be5\u5bb9\u6613\u7406\u89e3\n    int a1,a2;\n    for(i=5000;i>=0;i--)\n      if(f[i]!=99999999){\n\t    a1=i;\n\t    break;\n\t  }\n\tfor(i=5000;i<=10000;i++)\n      if(f[i]!=99999999){\n\t    a2=i;\n\t    break;\n\t  }\n\tif(a1==a2)printf(\"%d\",min(f[a1],f[a2]));\n\telse if(5000-a1<a2-5000)printf(\"%d\",f[a1]);\n\telse printf(\"%d\",f[a2]);\n    return 0;\n}\n```\n\n\n------------\n\u4e3a\u4f55DP\u65f6\u6211\u8981\u7528\u4e24\u5c42for\uff0c\u539f\u56e0\u662f\uff1a\u5bf9\u4e8e0~5000\uff08\u5c31\u662f\u8d1f\u6570\u7684\u60c5\u51b5\uff09\u4e0e5000~10000\uff08\u6b63\u6570\u7684\u60c5\u51b5\uff09\uff0c\u5b83\u4eec\u5bf9\u72b6\u6001\u7684\u8f6c\u79fb\u662f\u4e0d\u4e00\u6837\u7684\uff0cDP\u8981\u7528\u5df2\u77e5\u503c\u66f4\u65b0\u672a\u77e5\u503c\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6b63\u8d1f\u6570\u5faa\u73af\u7684\u72b6\u6001\u8f6c\u79fb\u662f\u8981\u5206\u5f00\u5199\u7684\u3002\uff08\u5e94\u8be5\u4e5f\u5bb9\u6613\u7406\u89e3\u5427\uff09\n**^_^**",
        "postTime": 1533032611,
        "uid": 48573,
        "name": "lsroi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u62b1\u4f4f\u53ef\u7231\u7684\u6211\u81ea\u5df1233\n\n\u672c\u9898\u96be\u5ea6\u867d\u8bf4\u6d1b\u8c37\u5199\u7740\u63d0\u9ad8+\uff0c\u4f46\u5b9e\u8d28\u4e0a\u662f\u6bd4\u8f83\u6c34\u7684\u3002\n\n~~\u867d\u7136\u6211\u8fd8\u662f\u770b\u4e86\u9898\u89e3\u624d\u4f1a\u505a~~\n\n # \u7ec6\u8282\u5728\u4ee3\u7801\u91cc\u89e3\u91ca\uff0c\u4f1a\u8be6\u7ec6\u5199\u4e00\u4e9b\u6211\u81ea\u5df1\u611f\u89c9\u4e0d\u592a\u597d\u61c2\u7684\u5730\u65b9#\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\n//1000\u4e2a\u9aa8\u724c\u6700\u5c0f\u5dee\u4e3a-1000*\uff086-1\uff09=-5000\uff0c\u4e3a\u9632\u6b62\u4e0b\u6807\u8d1f\u6570\u8d8a\u754c\u52a0\u4e0a5010 \nint f[1005][10015];\n//f[i][j]\u8868\u793a\u524di\u4e2a\u9aa8\u724c\u7684\u5dee\u4e3aj-5010\u65f6\u9700\u8981\u7ffb\u724c\u7684\u6b21\u6570 \nint a[1005],b[1005],c[1005];\n//a\u4e3a\u9aa8\u724c\u4e0a\u65b9\u7684\u6570\uff0cb\u4e3a\u9aa8\u724c\u4e0b\u65b9\u7684\u6570\uff0cc\u4e3a\u4e0a\u65b9\u7684\u6570-\u4e0b\u65b9\u7684\u6570\uff08\u5373\u5dee\uff09 \nconst int N=5010;//\u61d2\u5f97\u51995010(\u7b11) \nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\tcin>>a[i]>>b[i],c[i]=a[i]-b[i];\n\t\n\tmemset(f,0x7f,sizeof(f));//f[i][j]=0x7f\u8868\u793a\u65e0\u6cd5\u5728\u524di\u4e2a\u9aa8\u724c\u4f7f\u5dee\u4e3aj \n\tf[0][0+N]=0;//0\u4e2a\u9aa8\u724c\u4e00\u6b21\u90fd\u6ca1\u7ffb\uff0c\u5dee\u4e3a0 \n\t\n\t//dp\u8fc7\u7a0b\uff0c\u5176\u5b9e\u4e3b\u8981\u5c31\u4e00\u884c233 ~~\u6240\u4ee5\u8bf4\u5f88\u6c34\u554a ~~\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=10;j<=10010;j++)//\u753110\u5f00\u59cb\u662f\u56e0\u4e3a\u75311\u5f00\u59cbj-c[i]\u53ef\u80fd\u4e3a\u8d1f \n\t{\n\t\t//\u91cd\u70b9\uff0c\u6572\u9ed1\u677f\n\t\t//\u2460f[i-1][j-c[i]]\u8868\u793a\u524di-1\u4e2a\u9aa8\u724c\u7684\u5dee\u4e3aj-c[i]\uff0c\u800c\u7b2ci\u4e2a\u9aa8\u724c\u7684\u5dee\u4e3ac[i]\uff0c\u6240\u4ee5\u4e0d\u7528\u7ffb\n\t\t//\u2461\u540c\u7406\uff0cf[i-1][j+c[i]]\u8868\u793a\u524di-1\u4e2a\u9aa8\u724c\u7684\u5dee\u4e3aj+c[i]\uff0c\u800c\u7b2ci\u4e2a\u9aa8\u724c\u7684\u5dee\u4e3ac[i]\n\t\t//  \u6240\u4ee5\u9700\u8981\u7ffb\u4e00\u6b21\u540e\u5dee\u4e3a-c[i]\uff0c\u540e\u540c\u2460\u3002\u6240\u4ee5\u9700\u8981+1  \n\t\tf[i][j]=min(f[i-1][j-c[i]],f[i-1][j+c[i]]+1);\n\t}\n\t//\u9009\u62e9\u7b54\u6848 \n\tint ans1=10000,ans2=1000;//ans1\u8868\u793an\u4e2a\u9aa8\u724c\u7684\u5dee\uff0cans2\u8868\u793a\u6700\u5c11\u9700\u8981\u7ffb\u51e0\u6b21\uff08\u5206\u522b\u5bf9\u5e94j\u548cf[n][j]) \n\tfor(int j=10;j<=10010;j++)\n\t{\n\t\tif(f[n][j]<f[0][0])//\u68c0\u67e5\u5dee\u662f\u5426\u53ef\u4ee5\u7b49\u4e8ej -N(\u8fd8\u8bb0\u5f97\u5dee\u52a0\u4e865010\u5417)\uff0c\u5982\u679c\u6709\u505a\u8fc7\u80af\u5b9a\u5c0f\u4e8e\u521d\u59cb\u503c \n\t\t{\n\t\t\tif(fabs(j-N)<=ans1)//\u9898\u76ee\u8981\u6c42\u5dee\u6700\u5c0f \n\t\t\t{\n\t\t\t\tif(fabs(j-N)==ans1)//\u5982\u679c\u5dee\u76f8\u7b49\uff0c\u8868\u793a\u4ece\u8d1f\u7684\u505a\u5230\u6b63\u7684\uff0c\u518d\u505a\u80af\u5b9a\u6bd4\u73b0\u5728\u7684\u5dee\u5927\uff0c\u76f4\u63a5\u9000\u51fa \n\t\t\t\t{\n\t\t\t\t\tans2=min(ans2,f[n][j]);break;\n\t\t\t\t}\n\t\t\t\t//\u66f4\u65b0\u4e24\u4e2aans \n\t\t\t\tans1=fabs(j-N);\n\t\t\t\tans2=f[n][j];\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\t//\u8fd9\u4e2a\u4e5f\u5f88\u91cd\u8981\uff0c\u8f93\u51fa\u6bcf\u4e00\u4e2a\u503c\u53ef\u4ee5\u5e2e\u52a9\u81ea\u5df1\u68c0\u67e5\uff0c\u5f88\u5b9e\u7528\u7684\u6280\u5de7 \n/*\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=5000;j<=5020;j++)\n\tprintf(\"f[%d][%d]=%d\\n\",i,j-5010,f[i][j]);\n*/\t\n\tcout<<ans2;\n\treturn 0;\n}\n```\n\u6211\u611f\u89c9\u6211\u5199\u7684\u597d\u8be6\u7ec6\u554a\uff0c\u4e0b\u6b21\u8981\u5077\u61d2\u4e00\u70b9233",
        "postTime": 1532613831,
        "uid": 80407,
        "name": "\u8001\u5361\u624b\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u5927\u5bb6\u505a\u8fd9\u9898\u90fd\u662f\u7528\u7684DP\uff1f\u8fd9\u8ba9\u6211\u4e0d\u4f1aDP\u7684\u849f\u84bb\u65e0\u5730\u81ea\u5bb9\u554a\u3002\n\n\u90a3\u4e48\uff0c\u5c31\u8ba9\u6211\u6765\u53d1\u7b2c\u4e00\u7bc7BFS(\u662f\u7684\uff0c\u4f60\u6ca1\u770b\u9519)\u9898\u89e3\u5427...~~(\u7ba1\u7406\u5458\u5927\u5927\u6c42\u7ed9\u8fc7\uff0c\u539f\u521b)~~\n\n\u5176\u5b9e\u8fd9\u9898\u5f88\u50cfBFS\u7684\u6a21\u677f\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u5c42\u5c42\u7684\u641c\u4e0b\u53bb\uff0c\u7ffb\u8f6c\u4e00\u6b21\uff0c\u4e24\u6b21\uff0c\u4e09\u6b21\u7b49\u80fd\u4e0d\u80fd\u5f97\u5230\u6700\u5c0f\u503c\u3002\u5f53\u5f97\u5230\u6700\u5c0f\u503c\u7684\u65f6\u5019\u5c31\u76f4\u63a5 ${exit(0)}$ \uff0c\u59a5\u59a5\u7684\u5957\u6a21\u677f\u3002\n\n\u4e0d\u8fc7\u95ee\u9898\u6765\u4e86:\n1. \u7528BFS\u4e07\u4e00TLE\u4e86\u600e\u4e48\u529e\uff1f\n\n- \u6211\u600e\u4e48\u77e5\u9053\u6700\u5c0f\u503c\u662f\u591a\u5c11\uff1f\n\nSolution :\n1. \u526a\u679d\n\n- \u6c42\u51fa\u6700\u5c0f\u503c\n\n~~\u770b\u4e0a\u53bb\u662f\u4e0d\u662f\u4ec0\u4e48\u90fd\u6ca1\u8bf4\uff1f\u5f00\u4e2a\u73a9\u7b11~ ~\uff0c\u5177\u4f53\u65b9\u6cd5\u89c1\u4ee3\u7801\u548c\u6ce8\u91ca~~ \n\n## Code\n\n```cpp\n\n/*     \u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3,\u82e5\u6709\u4e0d\u5f53,\u656c\u8bf7\u6307\u6b63     */\n\n#include \"bits/stdc++.h\"\nusing namespace std;\n\nint n,m,k,sum,p,a[1001],b[1001],dp[6001],s[1001];\nint f[100001],q[100001],h,t,boo[100001],del[10001][1001];\n//a[i],b[i]:\u8f93\u5165\u7684\u70b9\u6570    s[i]:\u4e00\u5f20\u724c\u4e0a\u7684\u70b9\u6570\u5dee\u7684\u7edd\u5bf9\u503c\n//boo[i]:\u6807\u8bb0\u4e0a\u4e0b\u4e4b\u5dee\u4e3ai\u65f6\u662f\u5426\u641c\u7d22\u8fc7\n//(\u56e0\u4e3a\u6c42\u6700\u5c0f\u7ffb\u8f6c,\u6240\u4ee5\u6700\u5148\u5230\u8fbe\u67d0\u4e2a\u72b6\u6001\u7684\u4e00\u5b9a\u662f\u6700\u4f18\u89e3)\n//del[i][j]:\u7b2ci\u4e2a\u72b6\u6001\u65f6\u54ea\u4e9b\u724c\u88ab\u7ffb\u8f6c\u8fc7(\u6bcf\u5f20\u724c\u6700\u591a\u7ffb\u8f6c\u4e00\u904d)\nint push(int x,int o)\n{\n\tif(boo[x+50000]==1)\n\t\treturn 0;\n    //\u82e5\u6b64\u72b6\u6001\u88ab\u641c\u7d22\u8fc7\u5c31\u8fd4\u56de\n    //\u56e0\u4e3a\u03a3s1-\u03a3s2\u53ef\u80fd\u4e3a\u8d1f\u6570,\u6240\u4ee5\u8981\u6574\u4f53\u5411\u53f3\u504f\u79fb,\u907f\u514d\u6570\u7ec4\u4e0b\u6807\u8d8a\u754c(P\u515a\u798f\u97f3)\n    //\u5373\u4f7f\u6781\u7aef\u60c5\u51b51000\u4e2a6-1,\u504f\u79fb5000\u4e5f\u591f\u4e86,\u6211\u624b\u8d31\u591a\u6253\u4e86\u4e2a0\n\tif(del[h][o]==1)\n\t\treturn 0;\n    //\u5982\u679c\u8be5\u72b6\u6001\u65f6\u8fd9\u5f20\u724c\u88ab\u7ffb\u8f6c\u8fc7\u5c31\u8fd4\u56de\n\tboo[x+50000]=1;\n\tif(x==k||x==-k)//\u00b1k:\u5f53\u4e0a\u65b9\u6bd4\u4e0b\u65b9\u591ak\u6216\u5c11k\u65f6\u90fd\u662f\u7b26\u5408\u6761\u4ef6\u7684\n\t{\n\t\tprintf(\"%d\",f[h]);\n\t\texit(0);\n\t}\n\tt++;\n\tfor(int i=1;i<=n;i++)\n\t\tdel[t][i]=del[h][i];\n\tdel[t][o]=1;\n    //\u6807\u8bb0\u6b64\u72b6\u6001\u65f6\u7ffb\u8f6c\u8fc7\u7684\u724c(\u8fd9\u9898\u6570\u636e\u7565\u6c34,\u4e0d\u6807\u8bb0\u4e5f\u53ea\u6709\u4e24\u4e2a\u70b9WA)\n\tq[t]=x;\n\tf[t]=f[h]+1;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\n\t\ts[i]=abs(a[i]-b[i]);\n\t\tp+=a[i]-b[i];\n\t\tif(a[i]>b[i])\n\t\t\ta[i]-=b[i],b[i]=0;\n\t\telse\n\t\t\tb[i]-=a[i],a[i]=0;\n        //\u5c06a[i],b[i]\u5176\u4e2d\u4e00\u4e2a\u7f29\u51cf\u52300\uff0c\u65b9\u4fbf\u6807\u8bb0\n        //\u4e8b\u5b9e\u4e0a,6-3 5-2 4-1 3-0\u7b49\u5dee\u503c\u76f8\u540c\u65f6,\u90fd\u662f\u7b49\u4ef7\u7684\n\t\tsum+=s[i];//\u6c42\u603b\u5dee\u503c\n\t}\n\tm=sum/2;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=m;j>=s[i];j--)\n\t\t\tdp[j]=max(dp[j],dp[j-s[i]]+s[i]);\n\tk=sum-2*dp[m];\n    //\u8fd9\u91cc\u7528\u5230\u4e8601\u80cc\u5305\u7684\u601d\u8def:\u9009\u4e00\u90e8\u5206\u5728\u4e0a\u65b9,\u5269\u4e0b\u7684\u5728\u4e0b\u65b9,\u4e0a\u65b9\u7684\u5f53\u505a\u8981\u9009\u53d6\u7684\u7269\u54c1\n    //\u90a3\u4e48\u5c31\u6709n\u4e2a\u7269\u54c1,\u80cc\u5305\u7684\u603b\u4f53\u79ef\u4e3am=sum/2,\u7269\u54c1\u7684\u4ef7\u503c\u548c\u4f53\u79ef\u90fd\u4e3as[i]\n    //\u5728sum/2\u7684\u4f53\u79ef\u4e2d\u9009\u53d6\u6700\u5927\u4ef7\u503c(\u7c7b\u4f3c\u88c5\u7bb1\u95ee\u9898),\u5219\u9009\u53d6\u4f53\u79ef\u6700\u63a5\u8fd1\u4e8e\u603b\u4f53\u79ef\u7684\u4e00\u534a\u65f6,\u4e24\u4efd\u4f53\u79ef\u7684\u5dee\u6700\u5c0f\n    //\u6240\u4ee5\u6700\u5c0f\u5dee\u503c\u5373\u4e3ak=(sum-dp[m])-dp[m]=sum-2*dp[m]\n\tpush(p,0);//BFS\u6a21\u677f\n\tdo\n\t{\n\t\th++;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(a[i]==0)//\u4e0a\u65b9\u5c0f\u4e8e\u4e0b\u65b9,\u7ffb\u8f6c\u540e\u03a3s1-\u03a3s2\u53d8\u5927\n\t\t\t\tpush(q[h]+2*s[i],i);\n\t\t\telse//\u4e0a\u65b9\u5927\u4e8e\u4e0b\u65b9,\u7ffb\u8f6c\u540e\u03a3s1-\u03a3s2\u53d8\u5c0f\n\t\t\t\tpush(q[h]-2*s[i],i);\n\t}\n\twhile(h<t);\n\treturn 0;\n}\n```\n\n#### \u5199\u5728\u6700\u540e:\n\u5bf9\u4e8e\u53c2\u52a0NOIP\u7684\u9009\u624b,\u5373\u4f7f\u4e0d\u4f1aDP,\u9047\u5230DP\u9898\u4e5f\u4e0d\u8981\u653e\u5f03,\u53bb\u5c1d\u8bd5\u7740\u62ff\u66b4\u529b\u5206,\u5e7f\u641c\u6df1\u641c\u8bb0\u641c\u90fd\u80fd\u62ff\u5230\u90e8\u5206\u5206\u751a\u81f3\u6ee1\u5206(\u50cf\u8fd9\u9898),\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u8981\u653e\u5f03,\u6216\u8bb8\u8fd8\u80fd\u6709\u65b0\u7684\u6536\u83b7\u3002",
        "postTime": 1528787554,
        "uid": 31317,
        "name": "nothingness",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "**\u679a\u4e3e**\n\n\u9898\u89e3\u6e05\u4e00\u8272\u7684DP,\u53ef\u849f\u84bb\u4e0d\u4f1a\u7528DP,\u849f\u84bb\u8868\u793a\u53ea\u4f1a\u7528**\u679a\u4e3e**.\u6ca1\u9519,\u672c\u9898\u679a\u4e3e\u53ef\u4ee5\u5f97**\u6ee1\u5206**.\n\n\u2460\u679a\u4e3e28\u5206\u89e3\u6cd5(\u6ee1\u5206\u7684\u5728\u540e\u9762):\u679a\u4e3e\u6bcf\u4e00\u5f20\u591a\u7c73\u8bfa\u9aa8\u724c\u7684\u98a0\u5012\u60c5\u51b5,\u590d\u6742\u5ea6\u662fO(2^n)\n```cpp\n#include <iostream>\nusing namespace std;\nint n,a[1005],b[1005],min_res=0x7fffffff,ans=0x7fffffff;\nint main(){\n\tcin>>n;\n\n\tfor(int i=0;i<n;i++)cin>>a[i]>>b[i];//cout<<\"---------\";\n\tfor(long long mask=0;mask<(1<<n);mask++){\n\t\tint suma=0,sumb=0,res,k=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t\tif(mask&1<<i)suma+=b[n-i-1],sumb+=a[n-i-1],k++;\n\t\t\telse suma+=a[n-i-1],sumb+=b[n-i-1];\n\t\tres=suma>sumb?suma-sumb:sumb-suma;\n\t\tif(min_res>res)min_res=res,ans=k;\n\t\telse if(min_res==res)ans=min(ans,k);\n\t\t//cout<<res<<\" \"<<k<<endl;\n\t\t//cout<<min_res<<\" \"<<k<<endl;\n\t}\n\tcout<<ans;\n}\n```\n\u2461\u679a\u4e3eAC\u89e3\u6cd5:\u679a\u4e3e\u6240\u6709\u6240\u5f97\u6570\u5b57\n\n\u4e0a\u6570:\u4e00\u4e2a\u591a\u7c73\u8bfa\u9aa8\u724c\u4e2d,\u4e0a\u9762\u90a3\u4e2a\u5c0f\u65b9\u5757\u6240\u8868\u793a\u7684\u6570\u5b57,\u4e0b\u6570:\u540c\u7406;\n\n\u5047\u8bbe\u6709n\u4e2a\u591a\u7c73\u8bfa\u9aa8\u724c,n\u4e2a\u591a\u7c73\u8bfa\u9aa8\u724c\u4e2d\u4e0a\u6570\u5206\u522b\u662fa,b,c......\n\n\u4e0b\u6570\u5206\u522b\u662fA,B,C......\n\nn\u4e2a\u8bfa\u9aa8\u724c\u4e0a\u6570\u4e0e\u4e0b\u6570\u5dee\u4e3an1,n2,n3...\n\n\u5219\u901a\u8fc7\u9898\u610f,\u53ef\u5f97\u4e0b\u5217\u5173\u7cfb:\n\n|S1-S2|=|a+b+c+....-(A+B+C+...)|=|a+b+c+...-A-B-C-...|=|a-A+b-B+c-C+...|=|+n1+n2+n3+...|\n\n\u5982\u679c\u98a0\u5012\u4e86\u7b2c1\u4e2a\u591a\u7c73\u8bfa\u9aa8\u724c\u7684\u987a\u5e8f,\u5219\u76f8\u5f53\u4e8ea-A\u53d8\u6210\u4e86A-a,\u5373n1\u53d8\u6210\u4e86-n1,\n\n\u5982\u679c\u98a0\u5012\u4e86\u7b2ci\u4e2a\u591a\u7c73\u8bfa\u9aa8\u724c\u7684\u987a\u5e8f,\u5219\u76f8\u5f53\u4e8e\u5c06ni\u53d8\u4e3a-ni\n\n\u6700\u7ec8\u53ef\u5c06\u591a\u7c73\u8bfa\u9aa8\u724c\u95ee\u9898\u7b80\u5316\u4e3a\u4e00\u4e2a\u6570\u5b66\u95ee\u9898:\n\n\u6709N\u4e2a\u6570,\u5206\u522b\u4e3a![Alt text](https://cdn.luogu.com.cn/upload/pic/73537.png)\n\n\u7b97\u51fa![Alt text](https://cdn.luogu.com.cn/upload/pic/73738.png)\n\n\u5982\u4f55\u8ba1\u7b97\u5462,\u53ef\u4ee5\u7528\u6876\u53bb\u8bb0\u5f55\u4e0b\u5df2\u7ecf\u5f97\u5230\u7684\u503c,\n\n\u6211\u8fd9\u91cc\u7684\u4ee3\u7801\u7528\u7684\u662fbool dp[i][j],\u6307:\u8fd0\u7b97\u5230\u7b2ci\u4e2a\u6570\u65f6,j\u662f\u5426\u5df2\u7ecf\u5f97\u5230\n\n\u4f8b\u5982\n|\u00b11\u00b11\u00b12|\u7684\u6700\u5c0f\u503c\u5e94\u662f0,\n\ndp[1][1]=1,dp[1][-1]=1\u8868\u793a,\u8fd0\u7b97\u5230\u7b2c\u4e00\u4e2a\u6570\u7684\u60c5\u51b5\u4e0b,1\u548c-1\u90fd\u5df2\u7ecf\u5f97\u5230\u4e86,\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u6570\u662f\u00b11\n\ndp[2][0]=1,dp[2][2]=1,dp[2][-2]=1\u8868\u793a,\u8fd0\u7b97\u5230\u7b2c\u4e8c\u4e2a\u6570\u7684\u60c5\u51b5\u4e0b,0\u5df2\u7ecf\u5f97\u5230(+1-1\u6216-1+1),2\u5df2\u7ecf\u5f97\u5230(+1+1),-2\u5df2\u7ecf\u5f97\u5230(-1-1).\n\n... ...\n\n(\u6876\u6570\u7ec4\u5927\u5c0f\u662f10000,\u56e0\u4e3a\u8be5\u9898\u4e2d\u591a\u7c73\u8bfa\u9aa8\u724c\u6570\u91cf\u6700\u5927\u662f1000,\u6bcf\u4e00\u4e2an\u7684\u6700\u5927\u503c\u662f6-1=5,\u6700\u5c0f\u503c\u662f1-6=-5,\u6240\u4ee5\u8ba1\u7b97\u8fc7\u7a0b\u4e2d,\u503c\u7684\u8303\u56f4\u53ef\u80fd\u5728-5*1000~5\\*1000,\u4e3a\u9632\u6b62\u6570\u7ec4\u8d8a\u754c,\u5219\u503c\u6bcf\u6b21\u8bb0\u5f55\u5728\u6876\u4e2d\u65f6\u8981\u52a0\u4e0a5000,\u53d6\u51fa\u6765\u65f6\u8981\u51cf\u53bb5000,\u8fd9\u4e2a5000\u662fbounds\u5373\u8fb9\u754c)\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528O(N*10000)\u7684\u590d\u6742\u5ea6\u8dd1\u5b8c,\u4f46\u662f\u83b7\u5f97\u662f\u591a\u7c73\u8bfa\u9aa8\u724c|S1-S2|\u7684\u6700\u5c0f\u503c,\u5e76\u4e0d\u662f\u8981\u98a0\u5012\u591a\u5c11\u6b21,\u6240\u4ee5\u6211\u4eec\u8981\u518d\u5f00\u4e00\u4e2adp2\u6570\u7ec4,\u8bb0\u5f55\u98a0\u5012\u591a\u5c11\u6b21.\n\n\u5bf9\u4e8e\u4e0a\u9762\u90a3\u4e2a\u7b80\u5316\u95ee\u9898,\u98a0\u5012\u591a\u5c11\u6b21,\u5176\u5b9e\u5c31\u662f\u5f0f\u5b50\u4e2d\u4f7f\u7528\u7684-\u8d1f\u53f7\u7684\u6570\u91cf.\u4f8b\u5982|\u00b11\u00b11\u00b12|\u7684\u6700\u5c0f\u503c\u5e94\u662f|+1+1-2|=0,\u4f7f\u7528\u4e861\u6b21\u8d1f\u53f7,\u6240\u4ee5\u591a\u7c73\u8bfa\u9aa8\u724c\u6700\u4f18\u98a0\u5012\u6b21\u6570\u662f1.\n\ndp2[i][j]\u6307,\u8fd0\u7b97\u5230\u7b2ci\u4e2a\u6570\u65f6,j\u6570\u7528\u7684\u8d1f\u53f7\u7684\u6b21\u6570,\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u9012\u63a8\u53bb\u5b8c\u6210.\n\n\u6309\u7167\u4e0a\u8ff0\u601d\u8def\u5199\u540e,\u672a\u6ee1\u5206:\n```cpp\n#include <bits/stdc++.h>\n#define bounds 5000\nusing namespace std;\nint n,m[1005],tmp,a,b,dp2[1005][50002],ans=0x7fffffff;\nbool dp[1005][10002],init;\nint main(){\n\t//freopen(\"sample.in\",\"r\",stdin);freopen(\"sample.out\",\"w\",stdout);\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a>>b,m[i]=a-b;\n\tmemset(dp2,0x3f,sizeof(dp2));\n\tdp[1][m[1]+bounds]=dp[1][-m[1]+bounds]=1,dp2[1][m[1]+bounds]=0,dp2[1][-m[1]+bounds]=1;\n\tfor(int i=2;i<=n;i++)\n\t\tfor(int j=-5000;j<=5000;j++)\n\t\t\tif(dp[i-1][j+bounds])\n\t\t\t\tdp[i][j+bounds+m[i]]=dp[i][j+bounds-m[i]]=1,dp2[i][j+bounds-m[i]]=min(dp2[i][j+bounds-m[i]],dp2[i-1][j+bounds]+1),dp2[i][j+bounds+m[i]]=min(dp2[i][j+bounds+m[i]],dp2[i-1][j+bounds]);\n\tfor(int i=-5000;i<=5000;i++)\n\t\tif(dp[n][i+bounds]&&(abs(tmp)>abs(i)||!init))\n\t\t\ttmp=i,init=1;\n\tfor(int i=-5000;i<=5000;i++)\n\t\tif(dp[n][i+bounds]&&abs(i)==abs(tmp))\n\t\t\tans=min(ans,dp2[n][i+bounds]);\n\tcout<<ans;\n}\n```\n\u4e0a\u9762\u90a3\u4e2a\u4ee3\u7801\u8dd1\u51fa\u6765\u5168\u90fd\u662fMLE,\u5185\u5b58\u8d85\u9650,\u4e5f\u5c31\u662f\u8bf4\u8981\u7a7a\u95f4\u4e0a\u8fdb\u884c\u4f18\u5316,\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u6eda\u52a8\u6570\u7ec4\u8fdb\u884c\u7a7a\u95f4\u4f18\u5316,pos\u662f\u6eda\u52a8\u4e0b\u6807\u53d8\u91cf.\n\n```cpp\n#include <bits/stdc++.h>\n#define bounds 5000\nusing namespace std;\nint n,m[1005],tmp,a,b,dp2[3][10002],ans=0x7fffffff;\nbool pos=1,dp[3][10002],init;\nint main(){\n\tfreopen(\"sample.in\",\"r\",stdin);freopen(\"sample2.out\",\"w\",stdout);\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a>>b,m[i]=a-b;//m[i]=a-b\u7684\u64cd\u4f5c\u5c31\u662f\u83b7\u53d6ni\n\tmemset(dp2,0x3f,sizeof(dp2));\n\tdp[1][m[1]+bounds]=dp[1][-m[1]+bounds]=1,dp2[1][m[1]+bounds]=0,dp2[1][-m[1]+bounds]=1;//\u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u6570\u9009\u62e9\u52a0\u53f7\u548c\u8d1f\u53f7(\u98a0\u5012\u548c\u4e0d\u98a0\u5012\u591a\u7c73\u8bfa\u9aa8\u724c)\u76842\u79cd\u60c5\u51b5\n\tfor(int i=2;i<=n;i++,pos=!pos){\n\t\tfor(int j=-5000;j<=5000;j++)\n\t\t\tdp2[pos+1][j+bounds]=0x3f3f3f3f,dp[pos+1][j+bounds]=0;//\u521d\u59cb\u5316\n\t\tfor(int j=-5000;j<=5000;j++)\n\t\t\tif(dp[!pos+1][j+bounds])\n\t\t\t\tdp[pos+1][j+bounds+m[i]]=dp[pos+1][j+bounds-m[i]]=1,dp2[pos+1][j+bounds-m[i]]=min(dp2[pos+1][j+bounds-m[i]],dp2[!pos+1][j+bounds]+1),dp2[pos+1][j+bounds+m[i]]=min(dp2[pos+1][j+bounds+m[i]],dp2[!pos+1][j+bounds]);\n                //\u679a\u4e3e\u5df2\u7ecf\u5f97\u5230\u7684\u6570,\u5f97\u5230\u65b0\u7684\u6570\u5b57,\u8fd9\u91cc\u53ef\u4ee5\u505a\u4e00\u4e9b\u5e38\u6570\u4f18\u5316,\u5c31\u662f\u503c\u4e00\u65e6\u4fee\u6539\u4e86,\u62ff\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u4e00\u4e0b,\u5f53\u53d8\u91cf\u8fbe\u5230\u4e86\u7279\u5b9a\u7684\u503c,\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u51fa\n\t}\n\tfor(int i=-5000;i<=5000;i++)\n\t\tif(dp[!pos+1][i+bounds]&&(abs(tmp)>abs(i)||!init))\n\t\t\ttmp=i,init=1;\n            //\u627emin\u503c\n\tfor(int i=-5000;i<=5000;i++)\n\t\tif(dp[!pos+1][i+bounds]&&abs(i)==abs(tmp))\n\t\t\tans=min(ans,dp2[!pos+1][i+bounds]);\n            //\u6838\u5bf9min\u503c,\u5e76\u5c06\u6700\u5c11\u7684\u98a0\u5012\u6b21\u6570\u8ba1\u5165ans\n       //\u8fd9\u91cc\u5148\u627emin\u503c,\u518d\u6838\u5bf9min\u503c,\u662f\u4e3a\u4e86\u9632\u6b62\u4f8b\u5982+2\u548c-2\u8fd9\u4e24\u79cd\u60c5\u51b5\u5ffd\u7565\u6210\u4e00\u79cd\u60c5\u51b5\u9020\u6210\u7684\u9519\u8bef\n\tcout<<ans;\n}\n```\n\u6ee1\u5206.353ms.\u590d\u6742\u5ea6\u6700\u5927\u662fO(10^(3+4))\u7206\u4e0d\u4e86\n\n",
        "postTime": 1566298317,
        "uid": 109586,
        "name": "SplenD1D",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u7ecf\u5178\u768401\u80cc\u5305\uff0c\u53ea\u662f\u6bcf\u4ef6\u7269\u54c1\u5fc5\u987b\u9009\uff082\u79cd\u65b9\u5f0f\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u67091\u79cd\uff09\n\n1.\u4e0d\u52a0\u7a7a\u95f4\u4f18\u5316\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define INF 0x7f7f7f7f\nusing namespace std;\nint i,j,n,m,tot,ans;\nint a[1001],b[1001];\nint f[1001][6001];\nint main()\n{\n    memset(f,INF,sizeof(f));\n    scanf(\"%d\",&n);\n    for (i=1; i<=n; i++){\n      scanf(\"%d%d\",&a[i],&b[i]);\n      tot+=a[i]+b[i];\n      m+=max(a[i],b[i]);\n    }\n    f[0][0]=0;\n    for (i=1; i<=n; i++)\n    {\n        for (j=m; j>=1; j--)\n        {\n            if (j>=a[i]) f[i][j]=min(f[i][j],f[i-1][j-a[i]]);\n            if (j>=b[i]) f[i][j]=min(f[i][j],f[i-1][j-b[i]]+1);\n        }\n    }\n    int num=tot>>1; //\u4f4d\u8fd0\u7b97\u52a0\u901f\n    for (i=num;;i--)\n    {\n        ans=min(f[n][i],f[n][tot-i]);\n        if (ans<INF){\n            printf(\"%d\",ans);\n            return 0;\n        }\n    }    \n}\n```\n2.\u52a0\u7a7a\u95f4\u4f18\u5316\uff08\u6ce8\u610f\u72b6\u6001\u7684\u8f6c\u79fb\uff09\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define INF 0x7f7f7f7f\nusing namespace std;\nint i,j,n,m,tot,ans;\nint a[1001],b[1001];\nint f[6001];\nint main()\n{\n    memset(f,INF,sizeof(f));\n    scanf(\"%d\",&n);\n    for (i=1; i<=n; i++){\n      scanf(\"%d%d\",&a[i],&b[i]);\n      tot+=a[i]+b[i];\n      m+=max(a[i],b[i]);\n    }\n    f[0]=0;\n    int tmp;\n    for (i=1; i<=n; i++)\n    {\n        for (j=m; j>=0; j--)\n        {\n            tmp=INF; //tmp\u4ee3\u8868\u53d6\u6b64\u7269\u54c1\u66f4\u4f18\u79c0\u7684\u65b9\u5f0f\uff0c\u5e76\u4e14\u5f3a\u5236\u5730\u53d6 \n            if (j>=a[i]) tmp=f[j-a[i]];\n            if (j>=b[i]) tmp=min(tmp,f[j-b[i]]+1);\n            f[j]=tmp;\n        }\n    }\n    int num=tot>>1;\n    for (i=num;;i--)\n    {\n        ans=min(f[i],f[tot-i]);\n        if (ans<INF){\n            printf(\"%d\",ans);\n            return 0;\n        }\n    }    \n}\n```",
        "postTime": 1475583806,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "### \u7531\u4e8e\u6211\u592a\u83dc\uff0c\u8fd9\u9053\u9898\u5361\u4e86\u6211\u597d\u4e45\uff0c\u601d\u8def\u4e0d\u591f\u8fde\u8d2f\uff0cso\u4e00\u8fb9\u5199\u4ee3\u7801\u4e00\u8fb9\u52a0\u6ce8\u91ca\uff0c\u6b7b\u53bb\u6d3b\u6765\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream> \n#include<algorithm> \n#include<cstdio> \n#include<cstdlib>\n#include<cstring> \n#include<queue> \n#include<cmath> \n#define ll long long\nusing namespace std;\n/*\u56e0\u4e3a\u521a\u5b66oi\u4e0d\u4e45\uff0c\u6211\u592a\u83dc\u4e86\uff0c\u770b\u4e86\u597d\u4e45\u624d\u770b\u51fa\u80cc\u5305\uff0c\u7136\u540e\u5361\u4e86n\u4e45 \uff0c\u6211\u592a\u5357\u4e86 \n\u7531\u4e8e\u4e3a\u4e86\u7b26\u5408\u6211\u849f\u84bb\u7684\u8eab\u4efd\uff0c\u6211\u6ca1\u6709\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316~~\uff08\u5176\u5b9e\u662f\u6211\u4e0d\u4f1a\uff09~~*/ \nint n;\nint f[1333][12333];\n/*\u6211\u4e00\u5f00\u59cb\u505a\u7684\u65f6\u5019\u6ca1\u6709\u60f3\u5230\uff0cj\u662f\u6709\u53ef\u80fd\u4e3a\u8d1f\uff0cso\u8981\u52a0\u4e0a5005\u9632\u6b62\u8d8a\u754c \n(12333\u663e\u7136\u662f\u6211\u968f\u4fbf\u6253\u7684) */ \n//f[i][j],i\u8868\u793a\u7b2c\u51e0\u5f20\u591a\u7c73\u8bfa\u9aa8\u724c\uff0cj\u8868\u793aj\u5927\u5c0f\u4e0a\u4e0b\u90e8\u5206\u5dee\uff0c\u663e\u7136f\u4e2d\u5b58\u4e3a\u7ffb\u8f6c\u6b21\u6570 \nint a[23333],b[32222],ab[23333];\n//a[]\u8868\u793a\u4e0a\u90e8\u5206\uff0cb[]\u8868\u793a\u4e0b\u90e8\u5206\uff0cc[]\u8868\u793aa\uff0cb\u7684\u5dee \nint sum;//\u8868\u793a\u4e0a\u4e0b\u9aa8\u724c\u5dee\u6700\u5927\u7684\u60c5\u51b5 \nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&a[i],&b[i]);\n        ab[i]=a[i]-b[i]; \n    }\n    memset(f,0x3f,sizeof(f)); //\u5f53f\u6570\u7ec4\u503c\u4e3a0x3f\u65f6 \uff0c\u8bf4\u660e\u65e0\u6cd5\u5728\u6b64\u60c5\u51b5\u4f7f\u5dee\u4e3aj \n    f[0][5005]=0;//\u6ca1\u7ffb\u4e14\u6ca1\u503c \n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=10010;j++)\n        {\n            //\uff01\uff01\uff01\u8fd9\u91cc\u5f88\u91cd\u8981 \n            if(j>=ab[i]) \n\t\t\tf[i][j]=min(f[i-1][j-ab[i]],f[i-1][j+ab[i]]+1); \n\t\t\t/* f[i-1][j-c[i]]\u8868\u793a\u524di-1\u4e2a\u9aa8\u724c\u7684\u5dee\u4e3aj-c[i]\uff0c\u800c\u7b2ci\u4e2a\u9aa8\u724c\u7684\u5dee\u4e3ac[i]\uff0c\u6240\u4ee5\u4e0d\u7528\u7ffb\n               \u540c\u7406\uff0cf[i-1][j+c[i]]\u8868\u793a\u524di-1\u4e2a\u9aa8\u724c\u7684\u5dee\u4e3aj+c[i]\uff0c\u800c\u7b2ci\u4e2a\u9aa8\u724c\u7684\u5dee\u4e3ac[i]\n               \u6240\u4ee5\u9700\u8981\u7ffb\u4e00\u6b21\u540e\u5dee\u4e3a-c[i]\uff0c\u65b9\u6cd5\u540c\u4e0a\uff0c\u6240\u4ee5\u9700\u8981+1  */ \n        }\n    }\n    int ans=2333333,cnt=23333333;//ans\u8868\u793an\u4e2a\u9aa8\u724c\u7684\u5dee\uff0ccnt\u8868\u793a\u6700\u5c11\u9700\u8981\u7ffb\u51e0\u6b21\uff08\u5206\u522b\u5bf9\u5e94j\u548cf[n][j]) \n    for(int i=1;i<=10010;i++) \n    {\n    \tif(f[n][i]<f[0][0])//\u68c0\u67e5\u5dee\u662f\u5426\u53ef\u4ee5\u7b49\u4e8ej-5005\uff0c\u5982\u679c\u6709\u505a\u8fc7\u80af\u5b9a\u5c0f\u4e8e\u521d\u59cb\u503c \n        {\n            if(abs(i-5005)<=ans)//\u9898\u76ee\u8981\u6c42\u5dee\u6700\u5c0f \n            {\n                if(abs(i-5005)==ans)\n                {\n\t\t\t\t    //\u5982\u679c\u5dee\u76f8\u7b49\uff0c\u90a3\u4e48\u518d\u505a\u80af\u5b9a\u6bd4\u73b0\u5728\u7684\u5dee\u5927\uff0c\u9000\u51fa\u5c31\u5b8c\u4e8b\u4e86 \n                    cnt=min(cnt,f[n][i]);\n\t\t\t\t\tbreak;\n                }\n                ans=abs(i-5005);\n                cnt=f[n][i];               \n            }\n        }\n\t}\n\tprintf(\"%d\",cnt); \n}\n```\n",
        "postTime": 1569595764,
        "uid": 153473,
        "name": "han_lx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u6700\u8fd1\u7ec3\u4e60DP\uff0c\u770b\u5230\u8fd9\u9053\u9898\uff0c\u80cc\u5305\uff1f\n\n\u5728\u535a\u5ba2\u4e2d\u89c2\u770b\u6548\u679c\u66f4\u4f73\uff1a[My blog](https://xciyang.github.io/)\n\n### \u5206\u6790\n\n\u9996\u5148\u770b\u6570\u636e\u8303\u56f4$(N <= 1000, A_i/B_i <= 6)$\uff0c\u90a3\u4e48\u641c\u7d22\u5f53\u7136\u4e0d\u53ef\u80fd\uff0c\u80af\u5b9a\u662f\u8003\u8651\u52a8\u6001\u89c4\u5212\u3002\n\n\u8fd8\u662f\u56de\u5f52\u641c\u7d22\u4e0a\uff0c\u6bd4\u8f83\u597d\u5206\u6790\u3002\u4e00\u4e2a\u724c\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u65cb\u8f6c\u4e0e\u4e0d\u65cb\u8f6c\u3002\u6211\u4eec\u53ea\u9700\u8981\u5148\u627e\u5230\u6700\u5c0f\u5dee\uff0c\u518d\u8003\u8651\u6700\u5c0f\u65cb\u8f6c\u6b21\u6570\u3002\n\n\u518d\u770b\u6570\u636e\u8303\u56f4\uff0c$O(6N^2)$\u4e0d\u4f1a\u8d85\u65f6\u3002\u6211\u4eec\u65e2\u8981\u6c42\u6700\u5c0f\u5dee\u53c8\u8981\u6c42\u6700\u5c0f\u6700\u5c0f\u65cb\u8f6c\u6b21\u6570\uff0c\u53c8\u53ef\u77e5\u6240\u6709\u6570\u7684\u603b\u548c\u662f\u786e\u5b9a\u7684\uff0c\u4e0d\u5982\u5c31\u8bbe\u4e2a\u80cc\u5305\u3002\n\n$F[N(1000)][SUM(6000)]$\u8868\u793a\u5904\u7406\u5230\u7b2cN\u4e2a\u70b9\uff0c\u4e0a\u65b9\u5757\u7684\u548c\u4e3aSUM\u65f6\u6700\u5c0f\u7684\u65cb\u8f6c\u6b21\u6570\u3002\n\n\u4e00\u5f00\u59cb\u9664$F[0]$\u4e3a0\u5916\u90fd\u8d4b\u503c\u4e3a\u65e0\u7a77\u5927\uff0c\u7136\u540e\u8f6c\u79fb$A_i$\u8868\u793a\u4e0a\u65b9\u5757,$B_i$\u8868\u793a\u4e0b\u65b9\u5757\u3002\n\n$$F[N][i] = min(F[N - 1][i - A_i], F[N - 1][i - B_i] + 1)$$\n\n\u7136\u540e\u7531\u4e8e\u6bd4\u8f83\u95f2\uff08\u6015\u8d85\u7a7a\u95f4\uff0c\u7136\u800c\u5e76\u4e0d\u4f1a\uff1f\uff09\u3002\u663e\u7136\uff0c\u53ea\u8981\u8bb0\u5f55N-1\u7684\u72b6\u6001\uff0c\u5c31\u5f00\u4e86\u6eda\u52a8\u6570\u7ec4$F[2][SUM]$\u3002\n\n\u6700\u540e\u5148\u627e\u6700\u5c0f\u5dee\uff0c\u6211\u4eec\u8ba1\u7b97$X = \\lfloor\\frac{SUM}{2} \\rfloor$\u3002\n\n\u5982\u679c$SUM$\u4e3a\u5947\uff0c\u90a3\u4e48\u4e0a\u4e0b\u5dee\u4e0d\u53ef\u80fd\u4e3a0\uff0c\u5e76\u4e14\u4e0a\u65b9\u5757\u548c\u4e3a$X$\u6216$X + 1$\u65f6\u5dee\u90fd\u4e3a1\uff0c\u56e0\u6b64\u518d\u8bbe\u7f6e$Y = X + 1$\u3002\n\n\u5982\u679c$SUM$\u4e3a\u5076\uff0c\u90a3\u4e48\u4e0a\u65b9\u5757\u548c\u4e3a$X$\u65f6\u4e0a\u4e0b\u5dee\u5c31\u4e3a0\uff0c$Y = X$\u3002\n\n\u6211\u4eec\u679a\u4e3e\u4e00\u4e2a\u6570$i$\u4ece0\u5f00\u59cb\uff0c\u4e0d\u65ad\u589e\u5927\uff0c\u8868\u793a\u4e00\u4e2a\u8303\u56f4\uff08\u5927\u6982\u662f\u8fd9\u6837\uff09\u3002\n\n\u5224\u65ad$F[N][X - i]$\u548c$F[N][Y + i]$\u662f\u5426\u6709\u503c\uff0c\u82e5\u6709\u5219\u8f93\u51fa\u5c0f\u7684\u90a3\u4e2a\u3002\n\n### \u4ee3\u7801\n\n\u4ee3\u7801\u8f83\u4e11\uff0c\u63a8\u8350\u81ea\u5df1\u5199\u4ee3\u7801\u3002\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\nusing namespace std;\nint n, a[1005], b[1005], c[1005], f[2][8000], sum;\nint main() {\n\tcin >> n;\n\tfor(int i= 1; i <= n; i++) cin >> a[i] >> b[i], c[i]= a[i] - b[i], sum+= a[i] + b[i];\n\tmemset(f, 0x3f, sizeof(f));\n\tf[0][0]= 0;\n\tfor(int i= 1; i <= n; i++) {\n\t\tfor(int j= 0; j <= sum; j++) f[i & 1][j]= 0x3f3f3f3f;\n\t\tfor(int j= sum; j >= a[i]; j--) f[i & 1][j]= f[(i & 1) ^ 1][j - a[i]];\n\t\tfor(int j= sum; j >= b[i]; j--) f[i & 1][j]= min(f[i & 1][j], f[(i & 1) ^ 1][j - b[i]] + 1);\n\t}\n\tint res= 0x3f3f3f3f, sum1= sum / 2, sum2= sum1 + sum % 2;\n\tfor(int i= 0; i < sum; i++) {\n\t\tif(sum1 + i > n && sum2 - i < 1) break;\n\t\tres= min(f[n & 1][sum1 + i], f[n & 1][sum2 - i]);\n\t\tif(f[n & 1][sum1 + i] != 0x3f3f3f3f || f[n & 1][sum2 - i] != 0x3f3f3f3f) break;\n\t}\n\tcout << res << endl;\n\treturn 0;\n}\n```\n\n### \u540e\u8bb0\n\n\u6211\u7684\u4ee3\u7801\u5fc5\u987b\u5f008000\uff0c\u5982\u679c\u5f008000\u4ee5\u4e0b\u597d\u50cf\u4f1aRE\u3002",
        "postTime": 1568895456,
        "uid": 109815,
        "name": "Ciyang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "####\u591a\u7c73\u8bfa\u9aa8\u724c solution\n\n\u672c\u9898\u80cc\u5305 ~~\u6bd5\u4e1a~~ \u9898\n\n\u6392\u5728\u666e\u53ca\u7ec4DP\uff0c\u96be\u5ea6\u5e94\u8be5\u4e0d\u5927\u3002\n\n\u6307\u9488\u771f\u662f\u597d\u4e1c\u897f\u3002\n\n\u5bf9\u6bcf\u4e2a\u591a\u7c73\u8bfa\u65b9\u5757\uff0c \u663e\u7136\u53ea\u80fd\u9009\u6216\u4e0d\u9009\uff0c\u4fbf\u8f6c\u6362\u6210\u4e86*01\u80cc\u5305*\u95ee\u9898\n\n\u53d1\u73b0\u80cc\u5305\u7684 $val\\in[-5,5]\\cap Z$\uff0c \u5f00\u6876\u8ba1\u6570\uff0c\u4fbf\u8f6c\u6362\u6210\u4e86*\u591a\u91cd\u80cc\u5305*\u95ee\u9898\n\n\u867d\u7136\u672c\u9898\u8303\u56f4\u5c0f\uff0c$O(n^2)$\u53ef\u8fc7\uff0c\u4f46\u6211\u8fd8\u662f\u5199\u4e86\u591a\u91cd\u80cc\u5305\n\n\u4e3b\u8981\u662f\u5bf9\u4e8e\u8d1f\u6570\u7684\u5904\u7406\uff0c\u73b0\u5728\uff0c\u8bf7\u7406\u89e3\u4ee5\u4e0bDP\u57fa\u7840\u5185\u5bb9\uff1a\n\n* \u72b6\u6001\uff1a`f[i][j]\u8868\u793a\u8003\u8651\u524di\u4e2a\u7269\u54c1\uff0cval\u4e3aj\u65f6\uff0c\u80fd\u53d6\u5f97\u7684cost_min`\n\n* \u521d\u6001\uff1a`f[0][sum]=0\uff0c\u5176\u4f59\u8bbe\u4e3ainf \\\\\u521d\u6001\u4e0d\u9700\u8981\u82b1\u8d39=0\uff0csum\u662f\u4e0a\u4e0b\u70b9\u6570\u4e4b\u5dee`\n* \u8f6c\u79fb\uff1a`\u679a\u4e3e\u6bcf\u4e2a\u7269\u54c1\u7684\u4e8c\u8fdb\u5236\u5c55\u5f00`\n\n\u53ef\u4ee5\u770b\u672c\u9898\u7b2c\u4e09\u7bc7\uff08\u76ee\u524d\uff09[dj114133643](https://www.luogu.org/space/show?uid=52527)\u7684\u9898\u89e3\n\n\u8fd9\u91cc\uff0c\u672c\u4eba\u7528\u6eda\u52a8\u6570\u7ec4\u53ef\u4f18\u5316\u7a7a\u95f4\u4e3an\n\n\u81f3\u4e8e\u5bf9\u4e0a\u9762\u9898\u89e3`f[i][j+N]`\uff0c\u8fd9\u91cc\u4e5f\u505a\u4e86\u4f18\u5316\uff0c\u7528\u6307\u9488\u5b9a\u5411\u5bfb\u5740\uff0c\u4e0d\u4ec5\u901f\u5ea6\u5feb\u4e86\uff0c\u4ee3\u7801\u4e5f\u7b80\u6d01\u4e86\u4e0d\u5c11\u3002\n\n\u7b80\u5355\u8bf4\u662f\u628a\u6307\u9488\u6307\u5411\u6570\u7ec4\u4e2d\u95f4\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u53ef\u4ee5\u8fd9\u6837\u8c03\u7528`f[i][j]`\uff0c\u4e0d\u7528\u7ba1$j$\u7684\u6b63\u8d1f\u6027\u4e86\u3002\n\n\u5176\u4ed6\u7684\u5185\u5bb9\uff0c\u4ee3\u7801\u4e2d\u6bd4\u8f83\u8be6\u7ec6\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\u52a0\u4e86\u5b8f\n\n```cpp\n// luogu-judger-enable-o2\n// Etavioxy\n#include<cstdio>\n#include<cctype>\n#define re register\n#define ll long long\n#define il inline\n#define rep(i,s,t) for(re int i=(s);i<=(t);i++)\n#define pt(ch) putchar(ch)\n#define pti(x) printf(\"%d\",x)\n#define ptll(x) printf(\"%lld\",x)\nusing namespace std;\n//c_ints\nil int ci(){\n    re char ch;\n    while(!isdigit(ch=getchar()));\n    re int x=ch^'0';\n    while(isdigit(ch=getchar()))x=(x*10)+(ch^'0');\n    return x;\n}\nenum{N=36000,inf=01777777777};\nint cnt[11],f[2][N];\nint *F[2];\nil void dp(int dis,int cost,bool o){\n    rep(i,-5000,5000) F[o][i]= min(F[o^1][i],F[o^1][i-dis]+cost);\n}\nint main(){\n    //init\n    memset(f,0x3f,sizeof(f));\n    int* Cnt= cnt+5;\n    F[0]= f[0]+18000;\n    F[1]= f[1]+18000;//\u7528ptr\u5b9a\u5411\u5bfb\u5740\n    //read\n    int n= ci();\n    int x,sum= 0;\n    rep(i,1,n) Cnt[ x=ci()-ci() ]++, sum-= x;//\u8bfb\u5165\u5c01\u88c5\n    //dynamic programming\n    F[0][sum]= 0;//\u521d\u6001\n    bool cur= 0;\n    rep(i,-5,5) if( i!=0 ){\n        for(re int j=1;j<=Cnt[i];Cnt[i]-=j,j<<=1)//\u591a\u91cd\u80cc\u5305\n            dp( i*  j   *2 ,    j   ,cur^=1 );\n        if( Cnt[i] )\n            dp( i*Cnt[i]*2 , Cnt[i] ,cur^=1 );//\u6bcf\u6b21dp\u5f00\u59cb\u65f6\u6539\u53d8cur \n    }\n    //answer\n    int ans;\n    rep(i,0,5000)\n        if( (ans=min(F[cur][-i],F[cur][i])) < 1000 ){//\u6b21\u6570\u6700\u5c11\u5dee\u6700\u5c0f\n        \tpti(ans);\n        \treturn 0;\n    \t}\n    //end main\n    return 0;\n}\n```\n\n$luogu:34 ms$\n\n",
        "postTime": 1561937773,
        "uid": 127195,
        "name": "z7z_Eta",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "### # ~~\u601d\u8defDP~~\n\n\u628a\u6bcf\u5bf9\u6570\u6c42\u5dee\uff08\u56e0\u4e3a\u4e0a\u51cf\u4e0b\u7b49\u4e8e\u4e0b\u51cf\u4e0a*-1\uff09\uff0c\u5dee\u503c\u7684\u548c\u5c31\u662f\u4e0a\u526a\u4e0b\u7684\u503c\n\n\u6c42\uff1a\u628a\u90e8\u5206\u6570\uff08\u6570\u5bf9\u7684\u5dee\u503c\uff09\u7ffb\u8f6c\uff08\u4e58-1\uff09\u5f97\u5230\u4e00\u4e2a\u6570\u5217\uff0c\u548c\u7b49\u4e8e\u7b49\u4e8e\u539f\u6765\u4e0a\u526a\u4e0b\u7684\u503c\u4e58-1\n\n# \u91cd\u70b9\u5c31\u662f\u54ea\u4e9b\u6570\u8981\u7ffb\u8f6c\uff08*-1\uff09\uff01\u4e8e\u662f01\u80cc\u5305\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff08j\u5f53\u524d\u6570\uff0ca\u662f\u5f53\u524d\u5dee\u503c\uff09\uff1a\n\n\n```cpp\ndp[j]=min(dp[j],dp[j+2*a]+1)\n```\n\n\u56e0\u4e3a\u4e00\u4e2a\u6570 **\u7ffb\u8f6c\u524d-\u7ffb\u8f6c\u540e=2x\u7ffb\u8f6c\u524d** \uff0c\u6240\u4ee5\u8981x2\n\n\u6ce8\u610f\u4e00\u4e2a\u7ec6\u8282~~\uff08\u4e0d\u6ce8\u610f\u4e5f\u6709\u4e5d\u4e2a\u70b9\uff09~~\uff1a\n\u7531\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u53ef\u77e5\u5f53a<0\u65f6\uff0cj+2* a<j\uff0c\u6240\u4ee5\u53d7\u5c0f\u4e8ej\u7684\u6570\u5f71\u54cd\uff0c\u6240\u4ee5\u8981\u4ece\u5927\u5f80\u5c0f\u66f4\u6539\uff08\u65e0\u540e\u6548\u6027\uff09a>0\u5219\u76f8\u53cd\n\n\u9644\u4ee3\u7801\uff1a\n\n\u7531\u4e8e\u6709\u8d1f\u6570\uff0c\u6240\u4ee5dp\u6570\u7ec4\u5b58\u50a8\u7684\u65f6\u5019\u90fd\u52a0MID\uff0c\u5c06MID\u5b9a\u4e49\u4e3a0\n\n```\n#include <stdio.h>\n#include <string.h>\n\n#define MID 30000\n#define min(a,b) a<b?a:b\n\nint n;\nint a,b;\nint dp[60000];\nint ans = MID;\n\nint main()\n{\n\tmemset(dp, int(0x6f), sizeof(dp));\n\tdp[MID]=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d %d\",&a,&b);\n\t\ta-=b;\n\t\tans-=a;\n\t\tif(a>0){\n\t\t\tfor(int j=MID-6*n;j<MID+6*n;j++){\n\t\t\t\tdp[j]=min(dp[j],dp[j+2*a]+1);\n\t\t\t}\n\t\t}else if(a<0){\n\t\t\tfor(int j=MID+6*n;j>MID-6*n;j--){\n\t\t\t\tdp[j]=min(dp[j],dp[j+2*a]+1);\n\t\t\t}\n\t\t}\n\t}\n\tif(dp[ans]==dp[0]){\n\t\tans=min(dp[ans+1],dp[ans-1]);\n\t}else{\n\t\tans=dp[ans];\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u666e\u53ca134\u5206\u7684\u849f\u84bb\u5949\u4e0a\uff08\u5199\u4e86\u4e09\u5929\uff09",
        "postTime": 1544683712,
        "uid": 105934,
        "name": "MXR612",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "### \u6211\u7684\u601d\u8def\u5f88\u66b4\u529b\uff0c\u55ef\uff0c\u8ddfdalao\u6bd4\u4e0d\u4e86\u3002\n### dp[i]\u8868\u793a\u5230\u72b6\u6001i\u6240\u9700\u8981\u7684\u64cd\u4f5c\u6570\u3002a\uff0cb\u8868\u793a\u50a8\u5b58\u724c\u7684\u6570\u7ec4\u3002\u5047\u5b9a\u6700\u4f18\u89e3\u4ea7\u751f\u5728a,\u5728\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u7269\u54c1\u7684\u6269\u5c55\u4e2d\uff0c\u53ef\u4ee5\u9009\u62e9\u7ffb\u8f6c\u548c\u4e0d\u7ffb\u8f6c\u3002\u5206\u522b\u7528d1\u548cd2\u6765\u505a\u3002\u7136\u540e\u5408\u5e76\u3002\u91cd\u70b9\u662f\u5728\u672c\u8f6e\u8981\u5220\u9664\u4e0a\u4e00\u8f6e\u7684\u72b6\u6001\uff08\u89c1\u6ce8\u91ca\u2460\uff09\uff0c\u56e0\u4e3a\u6bcf\u6b21\u5fc5\u987b\u201c\u9009\u201d\u4e00\u8fb9\u7684\u9aa8\u724c\n### \u9274\u4e8e\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u54ea\u4e2a\u4e00\u9762\u662f\u6700\u4f18\u7684\u9762\uff0c\u6240\u4ee5\u5e94\u8be5\u8ba1\u7b97\u4e24\u6b21(\u89c1\u6ce8\u91ca\u2461)\n```cpp\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nint n;\n\nint min(int a, int b) {\n        return a < b ? a : b;\n}\n\nint mind(int a, int b) {\n        if(a == -1) return b;\n        if(b == -1) return a;\n        return a < b ? a : b;\n}\n\nint dp(int *a, int *b, int half) {\n        int d1[23000], d2[23000];\n        memset(d1, -1, sizeof(d1));\n        memset(d2, -1, sizeof(d2));\n        d1[0] = d2[0] = 0;\n        for(int i = 0; i < n; i++) {\n                for(int j = half; j > -1; --j) {\n                        if(j < a[i] || d1[j-a[i]] == -1) d1[j] = -1;\t\t//\u2460\u5728\u672c\u8f6e\u65e0\u6cd5\u88ab\u5230\u8fbe\u7684\u72b6\u6001\u8bb0\u5f55\u4e3a-1\uff0c\u5220\u9664\u8fd9\u79cd\u72b6\u6001\n                        else d1[j] = d1[j-a[i]];\n                        if(j < b[i] || d2[j-b[i]] == -1) d2[j] = -1;\n                        else d2[j] = d2[j-b[i]] + 1;\n                }\n                for(int j = half; j > -1; --j)\n                        d1[j] = d2[j] = mind(d1[j], d2[j]);\n        }\n        for(int j = half; j > -1; --j)\n                if(d1[j] != -1)\n                        return d1[j];\n}\nint a[13000], b[13000];\nint main() {\n        int sum = 0;\n        scanf(\"%d\", &n);\n        for(int i = 0; i < n; i++) {\n                scanf(\"%d %d\", a+i, b+i);\n                sum += a[i];\n                sum += b[i];\n        }\n        int ans = min(dp(a, b, sum>>1), dp(b, a, sum>>1));\t\t//\u2461\n        printf(\"%d\\n\", ans);\n        return 0;\n}\n\n```",
        "postTime": 1542371417,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u7531\u4e8e\u52a8\u6001\u89c4\u5212\u5b66\u5f97\u4e0d\u597d\uff0c\u9009\u62e9\u4e86\u7b80\u5355\u7684\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u4ee3\u7801\u867d\u7136\u957f\u4e00\u4e9b\uff0c\u4f46\u662f\u975e\u5e38\u597d\u7406\u89e3\u3002\u770b\u5230\u8fd8\u6ca1\u6709\u7c7b\u4f3c\u7684\u9898\u89e3\uff0c\u5c31\u53d1\u51fa\u6765\u4f9b\u5927\u5bb6\u53c2\u8003\u3002\n\n\u5148\u8003\u8651\u4ee5\u4e0b\u903b\u8f91\uff1a\n\n1\u3001\u9aa8\u724c\u6709\u610f\u4e49\u7684\u53ea\u6709\u5dee\u503c\uff0c\u800c\u4e14\u5dee\u503c\u53ea\u6709-5~5\uff0c\u56e0\u6b64\u5f55\u5165\u6570\u636e\u7684\u65f6\u5019\u7528\u6876\u6392\u5e8f\u7684\u65b9\u6cd5\u628a\u5404\u4e2a\u5dee\u503c\u7684\u6570\u91cf\u8bb0\u5f55\u4e0b\u6765\u5373\u53ef\u3002\n\n2\u3001\u6bcf\u4e2a\u9aa8\u724c\u7ffb\u4e00\u6b21\u90fd\u5bf9\u603b\u5dee\u503c\u4ea7\u751f\u672c\u8eab\u5dee\u503c2\u500d\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u5f53\u9aa8\u724c\u5dee\u503c\u4e3a1\u6216\u8005-1\u65f6\uff0c\u5df2\u7ecf\u65e0\u6cd5\u66f4\u63a5\u8fd10\uff0c\u6b64\u65f6\u5e94\u8be5\u7ed3\u675f\u641c\u7d22\u3002\n\n3\u3001\u603b\u5dee\u503c\u4e3a\u6b63\u65f6\uff0c\u53ea\u9700\u8981\u7ffb\u4f7f\u5dee\u503c\u51cf\u5c0f\u76845\u7ec4\u9aa8\u724c\uff0c\u53cd\u4e4b\u4e5f\u662f\u4e00\u6837\u3002\u800c\u4e14\u7ffb\u8fc7\u7684\u724c\u53ef\u4ee5\u53bb\u9664\uff08\u518d\u7ffb\u56de\u6765\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\uff09\u3002\n\n4\u3001\u4ece\u4e00\u4e2a\u65b9\u5411\uff08\u5927\u4e8e0\u6216\u8005\u5c0f\u4e8e0\uff09\u6700\u63a5\u8fd10\uff0c\u4e0d\u7b49\u4e8e\u5c31\u662f\u6700\u4f18\u89e3\uff0c\u8fd8\u8981\u8003\u8651\u8de8\u8fc70\u5230\u53e6\u4e00\u4e2a\u65b9\u5411\u540e\u662f\u5426\u53ef\u4ee5\u6709\u66f4\u63a5\u8fd10\u7684\u89e3\u3002\uff08\u8fd9\u4e00\u6761\u5bf9\u6df1\u641c\u6ca1\u6709\u5b9e\u8d28\u6027\u4f5c\u7528\uff0c\u5374\u662f\u9009\u62e9\u6df1\u641c\u65b9\u6cd5\u7684\u539f\u56e0\uff0c\u6211\u4e00\u5f00\u59cb\u60f3\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u5355\u65b9\u5411\u6c42\u89e3\uff09\n\n5\u3001\u5728\u641c\u7d22\u7684\u6bcf\u4e00\u6b65\uff0c\u90fd\u8981\u66f4\u65b0\u6700\u63a5\u8fd10\u7684\u503c\u548c\u6b65\u6570\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u4f1a\u8d8a\u8d70\u8d8a\u8fdc\u3002\n\n\n\u5176\u4ed6\u5c31\u6ca1\u4ec0\u4e48\u4e86\uff0c\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\nusing namespace std;\n\nint n,ans,nearest,bulk[20],f[10000];\nconst int WY=5000;      //\u9632\u6b62\u6570\u7ec4\u4e0b\u6807\u8d1f\u6570\u7684\u4f4d\u79fb\u503c\n \nvoid calc(int delta,int times)\n{\n\tif(f[delta+WY]>=0 && f[delta+WY]<=times)       //\u5224\u65ad\u5386\u53f2\u503c\u662f\u5426\u5df2\u7ecf\u66f4\u4f18\n\t\treturn;\n\t\n\tif(nearest==abs(delta))             \n\t{\n\t\tif(times<ans) ans=times; //\u8bb0\u5f55\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6700\u4f18\u89e3\n\t}\n\telse if(abs(delta)<nearest)  //\u66f4\u65b0\u6700\u63a5\u8fd10\u7684\u4f4d\u7f6e\n\t{\n\t\tnearest=abs(delta);\n\t\tans=times;\n\t}\n\tf[delta+WY]=times;           //\u8bb0\u4f4f\u5f53\u524d\u503c\n\n\tif(times>n || delta==0 || delta==1 || delta==-1)   //\u5df2\u7ecf\u65e0\u6cd5\u66f4\u52a0\u63a5\u8fd1\uff0c\u5230\u6b64\u4e3a\u6b62\n\t\treturn;\n\t\n\tif(delta >0)  //\u5dee\u503c\u5927\u4e8e0\uff0c\u53ea\u9700\u7ffb5\u4e2a\u6876\u91cc\u7684\u9aa8\u724c\n\t{\n\t\tfor(int i=5;i>=1;i--) \n\t\tif(bulk[i+6]>0)\n\t\t{\n\t\t\tbulk[i+6]--;  //\u7ffb\u4e00\u5f20\u724c\uff0c\u4ece\u6876\u91cc\u53bb\u9664\n\t\t\tcalc(delta-2*i,times+1); //\u6df1\u641c\n\t\t\tbulk[i+6]++;  //\u6062\u590d\n\t\t}\n\t}\n\telse if(delta <0)\n\t{\n\t\tfor(int i=-5;i<=-1;i++) \n\t\tif(bulk[i+6]>0)\n\t\t{\n\t\t\tbulk[i+6]--;\n\t\t\tcalc(delta-2*i,times+1);\n\t\t\tbulk[i+6]++;\n\t\t}\n\t}\n}\nint main()\n{\n\tint up,down,sumup,sumdown,delta;\n\tcin>>n;\n\tsumup=sumdown=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>up>>down;\n\t\tbulk[up-down+6]++;  //\u8fdb\u6876\uff0c\u504f\u79fb6\u907f\u514d\u6570\u7ec4\u4e0b\u6807\u8d1f\u503c\n\t\tsumup+=up;\n\t\tsumdown+=down;\n\t}\n\tdelta=sumup-sumdown;    //\u603b\u5dee\u503c\n\tmemset(f,-1,sizeof(f));\n\tnearest=abs(delta);     //\u8bb0\u5f55\u6700\u63a5\u8fd10\u7684\u4f4d\u7f6e\n\tcalc(delta,0);\n\t\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1523772817,
        "uid": 91689,
        "name": "\u6768\u677e\u701a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "**\u89c2\u8d4f\u9898\u76ee\uff0c\u6211\u4eec\u53d1\u73b0\u539f\u95ee\u9898\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a\u5c06\u8fd92n\u4e2a\u6570\u6bcf\u7ec4\uff08\u5373\u6bcf\u4e2a\u9aa8\u724c\uff09\u62bd\u53d6\u4e00\u4e2a\u653e\u5165\u4e24\u4e2a\u96c6\u5408\u4e4b\u4e00\uff0c**\n\n**\u6c42\u5f62\u6210\u7684\u4e24\u96c6\u5408\u5143\u7d20\u548c\u76f8\u5dee\u6700\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5c0f\u7684\u9aa8\u724c\u53cd\u8f6c\u6b21\u6570\u3002**\n\n**\u6240\u4ee5\u5462\uff0c\u5927\u7c73\u5154\u9996\u5148\u60f3\u51fa\u7684\u662f\u4e00\u4e2a\u8fd9\u6837\u7684\u80cc\u5305:**\n\n**\u7b2c\u4e00\u6b65\u6c42\u51fa\u539f\u6765\u4e24\u4e2a\u6570\u7ec4\u7684\u603b\u548c\u7684\u5dee\u503cDelta\u662f\u591a\u5c11\u3002**\n\n**\u7b2c\u4e8c\u6b65\u8fdb\u884c\u80cc\u5305DP\uff0c\u6bcf\u4e2a\u7269\u54c1\u7684\u8d28\u91cf\u4e3a\uff1aa[i]-b[i]**\n\n**\u8fd9\u6837\u505a\u76f8\u5f53\u4e8e\u662f\u6211\u4eec\u4f01\u56fe\u53bb\u5f25\u8865\u4e24\u4e2a\u6570\u7ec4\u548c\u7684\u5dee\u5f02Delta\u3002**\n\n**\u7b2c\u4e09\u6b65\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u80fd\u591f\u6784\u9020\u51fa\u6765\u7684\u6700\u5c0f\u7684Delta\u5c31\u884c\u5566\u3002**\n\n**\u4f46\u662f\u7531\u4e8e\u7ecf\u9a8c\u4e0d\u8db3\u7b49\u539f\u56e0\uff0c\u5bf9\u8d1f\u6570\u7684\u5904\u7406\u5f88\u7b28\uff08\u989d\uff0c\u540e\u6765\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u52a0\u4e0a\u4e00\u4e2a\u5f88\u5927\u7684N\uff09\uff0c**\n\n**\u53c8WA\u6765WA\u53bb\u7684\uff0c\u6240\u4ee5\u5c31\u81ea\u5df1\u6539\u8fdb\u4e86\u65b9\u6cd5\uff1a**\n\n**\u76f4\u63a5\u8fdb\u884c\u80cc\u5305DP\uff0cf[i][j]\u8868\u793a\u7528\u524di\u4e2a\u9aa8\u724c\u6bcf\u4e2a\u9aa8\u724c\u5176\u4e2d\u4e00\u4e2a\u6570\u80fd\u591f\u6784\u6210j\uff0c\u5982\u679c\u80fd\u591f\u6784\u6210j\uff0c**\n\n**\u90a3\u4e48f[i][j]\u5b58\u50a8\u7684\u5c31\u662f\u6700\u5c0f\u6b65\u6570\uff0c\u5426\u5219\u5b58\u50a8inf\u3002**\n\n**\u6700\u540e\u5c31\u662f\u548c\u4e0a\u6587\u6700\u540e\u4e00\u6b65\u7c7b\u4f3c\uff0c\u627e\u4e00\u4e2a\u6700\u5c0f\u7684Delta\u4e0b\u6700\u5c0f\u7684\u6b65\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837\u505a\u5c31\u597d\u591a\u4e86\u3002**\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\n#define inf 1000000000\n#define S(x) (x[i]^=x[j]^=x[i]^=x[j]) \n#define go(i,a,b) for(int i=a;i<=b;i++)\nint A(int x){return x>0?x:-x;}\nusing namespace std;const int N=1003;\nint n,sum,a,b,f[N][N*10],W=7000,step=inf,D=inf,d;\nint main()\n{\n    scanf(\"%d\",&n);go(i,1,n)\n    {\n        scanf(\"%d%d\",&a,&b);sum+=a+b;go(j,0,W)f[i][j]=inf;\n        if(i==1){f[1][a]=0;f[1][b]=1;continue;}go(j,1,W)\n        j-a>=0?f[i][j]=min(f[i][j],f[i-1][j-a]):1,\n        j-b>=0?f[i][j]=min(f[i][j],f[i-1][j-b]+1):1;\n    }\n    go(j,1,W)if(f[n][j]!=inf)(d=A(sum-j-j))==D?step=min(step,f[n][j]):1,\n    d<D?D=d,step=f[n][j]:1;printf(\"%d\",step);return 0;\n}//Paul_Guderian\n```",
        "postTime": 1505397224,
        "uid": 21093,
        "name": "Paul_Guderian",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u5148\u6c42\u51fa\u6700\u5c0f\u5dee(mini)\uff0c\n\n\u518d\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n\n(\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u7684\u7b97\u6cd5\u3002\u3002\u3002)\n\n\n```delphi\n\nconst p=2000;\n\nvar\n  n,i,x,y,mini,j:longint;\n  a,b:array[1..1000]of longint;\n  c:array[0..5010]of boolean;\n  f1:longint;\n  sum:array[1..1001]of longint;\n  f:array[1..1000,-5000..5000]of longint;\n\nfunction min(x,y:longint):longint;\nbegin\n if x<y then exit(x);\n exit(y);\nend;\n\nfunction try(x,y:longint):longint;\nbegin\n if (y+sum[x]<-mini)and(y<0) or (y-sum[x]>mini)and(y>0) then //y\u4e0d\u80fd\u8fbe\u5230mini\n  exit(p);\n if x=n+1 then exit(0);\n if f[x,y]=p then\n  f[x,y]:=min(try(x+1,y+a[x]),try(x+1,y-a[x])+1);\n exit(f[x,y]);\nend;\n\nfunction cc:longint;\nvar\n j:longint;\nbegin\n c[sum[1]]:=true; //c[j]=true\u8868\u793a\u53ef\u4ee5\u8fbe\u5230\u5dee\u4e3aj\n for i:=1 to n do\n  for j:=0 to sum[1]-2*b[i] do\n   c[j]:=c[j] or c[j+2*b[i]]; //j+2*b[i]\u4e3aa[i]\u4e3a\u6b63\u65f6\u7684(\u5373=b[i])\u603b\u7684\u5dee,j\u4e3aa[i]\u4e3a\u8d1f\u65f6\u7684\n for i:=0 to sum[1] do\n if c[i] then exit(i); //\u6700\u5c0f\nend;\n\nbegin\n  readln(n);\n  for i:=1 to n do\n  begin\n   readln(x,y);\n   a[i]:=x-y; //\u53ea\u7528\u8bb0\u5f55\u5dee\u503c\n   b[i]:=abs(a[i]);\n  end;\n\n  for i:=n downto 1 do\n   sum[i]:=sum[i+1]+b[i];\n\n  mini:=cc;\n  for i:=1 to n do\n   for j:=-sum[1] to sum[1] do\n    f[i,j]:=p;\n  writeln(try(1,0));\nend.\n\n```\n    ",
        "postTime": 1446039684,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "//\u672c\u9898\u4ea6\u53ef\u4ee5\u7528\u80cc\u5305\u89e3\u51b3\uff0cf[i][j]\u8868\u793a\u9009\u62e9\u5230\u7b2ci\u4e2a\u9ab0\u5b50\u7ec4\u65f6\u4e0a\u7ec4\u4e0e\u4e0b\u7ec4\u7684\u5dee\u662fj\u65f6\u6240\u9700\u8981\u6700\u5c11\u7684\u7ffb\u8f6c\u6b21\u6570\uff0c\u56e0\u4e3aC++\u4e0b\u6807\u4e0d\u5141\u8bb8\u8d1f\u6570\uff0c\u53ef\u4ee5\u628aj\u52a0\u4e0a\u4e00\u4e2a\u9002\u5f53\u7684\u503c\u4f7f\u4ed6\u4e0d\u4e3a\u8d1f\n\n```cpp\n\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#define REP(I,start,end) for(int I=start;I<=end;I++)\nusing namespace std;\nint n,a[1001],f[1001][10001];\nint main()\n{\n    scanf(\"%d\",&n);\n    int m=0;\n    REP(i,1,n)\n    {\n        int up,down;\n        scanf(\"%d%d\",&up,&down);\n        a[i]=up-down;//\u4ee4\u4e0a\u7ec4\u6bd4\u4e0b\u7ec4\u591a\u4e3a\u6b63\n        m+=abs(a[i]);//m\u5373\u4e3a\u672c\u7a0b\u5e8f\u6240\u9009\u4e0a\u8ff0\u201c\u9002\u5f53\u7684\u6570\u201d\n    }\n    int m1=m<<1;\n    memset(f,100,sizeof(f));\n    f[0][m]=0;//\u521d\u59cb\u5316\n    REP(i,1,n)\n        REP(j,0,m<<1)\n        {\n            int k=j+a[i];\n            if(k>=0&&k<=m1)\n                f[i][j]=min(f[i][j],f[i-1][k]);//\u4e0d\u7ffb\u8f6c\u7b2ci\u4e2a\u9ab0\u5b50\u7ec4\n            k=j-a[i];\n            if(k>=0&&k<=m1)\n                f[i][j]=min(f[i][j],f[i-1][k]+1);//\u7ffb\u8f6c\u7b2ci\u4e2a\u9ab0\u5b50\u7ec4\n        }\n    REP(i,0,m)//\u4ece\u4e0a\u4e0b\u4e24\u7ec4\u5dee\u6700\u5c0f\u641c\u8d77\n        if(f[n][m+i]<f[0][0]||f[n][m-i]<f[0][0])\n        {\n            printf(\"%d\\n\",min(f[n][m+i],f[n][m-i]));\n            break;\n        }\n    return 0;\n}\n\n```",
        "postTime": 1445501431,
        "uid": 11122,
        "name": "spacetime",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "### \u8fd9\u662f\u4e00\u9053\u5f88\u4e0d\u9519\u7684DP\u9898\uff0c\u5b83\u8003\u5bdf\u4e86\u4e00\u79cd\u5173\u4e8e\u51cf\u5c11\u4e24\u4e2a\u96c6\u5408\u7684\u5dee\u503c\u7684DP\u601d\u60f3\u3002\n***\n**\u9996\u5148\u5f88\u660e\u663e\u7684\u662f\u8fd9\u9053\u9898\u7684\u72b6\u6001\u4e0d\u662f\u90a3\u4e48\u597d\u5199\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u628a\u5b83\u53d8\u4e00\u4e0b\u578b**\n\n**\u53ef\u4ee5\u9690\u9690\u7ea6\u7ea6\u611f\u53d7\u5230\u4e00\u79cd\u8f6c\u79fb\u7684\u611f\u89c9\uff0c\u5c31\u662f\u6211\u5047\u5982\u7ffb\u52a8\u4e86\u4e00\u7ec4\u591a\u7c73\u8bfa\u9aa8\u724c\u7684\u8bdd\uff0c\u6211\u7684f\u4f1a\u52a0\u4e00\uff0c\u540c\u65f6\u53e6\u5916\u4e00\u4e2a\u8868\u793a\u4e0a\u4e0b\u96c6\u5408\u4e4b\u5dee\u91cf\u4f1a\u53d8\u5316\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5730\u65b9\u7684DP\u8f6c\u79fb\u65b9\u7a0b\u4e2d\u95f4\u53ea\u6709\u4e24\u4e2a\u91cf\uff0c\u4e00\u4e2a\u662f\u548c\u5dee\u503c\u76f8\u5173\u7684\u91cf\uff0c\u4e00\u4e2a\u662f\u548c\u53cd\u8f6c\u6b21\u6570\u76f8\u5173\u7684\u91cf\uff0c\u6211\u4eec\u8981\u4f7f\u5f97\u524d\u4e00\u4e2a\u91cf\u8fbe\u5230\u4e00\u4e2a\u6700\u503c\u7684\u65f6\u5019\u5bf9\u5e94\u7684\u540e\u9762\u7684\u4e00\u4e2a\u91cf\u7684\u6700\u5c0f\u503c\u3002**\n\n**\u8fd9\u6837\u5b50\u8bf4\u662f\u5f88\u611f\u6027\u7684\u8bf4\u6cd5\uff0c\u5728\u6362\u79cd\u8bf4\u6cd5\u5c31\u662f\uff1a**\n\n**\u6211\u4eec\u8981\u7528 f [ i ] \u91cc\u9762\u7684 i \u6765\u8868\u793a\u4e0a\u4e0b\u96c6\u5408\u7684\u5dee\u503c\uff0c\u7528 f [ i ] \u8fd9\u4e2a\u6574\u4f53\u6765\u8868\u793a\u7ffb\u52a8\u7684\u6b21\u6570\uff0c\u4f7f\u5f97\u53ef\u4ee5\u53d6\u5230\u7684\u6700\u5927\u7684 i \u5bf9\u5e94\u7684 f [ i ] \u6700\u5c0f\uff0c\u8fd9\u5176\u5b9e\u5c31\u6709\u70b9\u50cf01\u80cc\u5305\u4e86\uff01**\n\n**\u73b0\u5728\u8003\u8651\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u56e0\u4e3a\u4e0a\u4e0b\u4e24\u4e2a\u7ffb\u8f6c\u4f1a\u5e26\u6765\u53d8\u5316\uff0c\u5b83\u4eec\u5355\u72ec\u5b58\u5728\u7684\u65f6\u5019\u662f\u6ca1\u6709\u8003\u8651\u4ef7\u503c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u4e0a\u4e0b\u4e24\u5757\u591a\u7c73\u8bfa\u9aa8\u724c\u770b\u4f5c\u662f\u4e00\u4e2a\u7269\u4f53\uff0c\u5b83\u6240\u5360\u6709\u7684\u4f53\u79ef\uff0c\u5c31\u5e94\u8be5\u662f\u7ffb\u8f6c\u5b83\u4eec\u4e24\u4e2a\u53ef\u4ee5\u5e26\u6765\u7684\u96c6\u5408\u4e4b\u5dee\u51cf\u5c11\u503c\uff0c\u800c\u5b83\u4eec\u4e24\u4e2a\u6240\u4ee3\u8868\u7684\u6574\u4f53\u7684\u91cd\u91cf\u3010\u5c31\u662f\u548c f [ i ] \u540c\u7c7b\u578b\u7684\u91cf\uff0c\u8bf4\u5b83\u662f\u4ec0\u4e48\u90fd\u884c\u3011\u5c31\u662f1.**\n\n**\u8fd9\u65f6\u673a\uff08~~chi~~\uff09\u667a\uff08~~dun~~\uff09\u7684\u6211\u53d1\u73b0\u4e86\u4e0d\u592a\u597d\u7684\u4e00\u4e2a\u5730\u65b9\uff0c\u5c31\u662f\u6211\u7ffb\u8f6c\u4e4b\u540e\u7684\u5e26\u6765\u7684\u8d21\u732e\u3010\u96c6\u5408\u4e4b\u5dee\u51cf\u5c11\u91cf\u3011\u4e0d\u597d\u8868\u793a\uff0c\u56e0\u4e3a\u8fd9\u548c\u6211\u73b0\u5728\u4e0a\u4e0b\u96c6\u5408\u5b70\u5927\u5b70\u5c0f\u662f\u6709\u5173\u7cfb\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u5bf9\u591a\u7c73\u8bfa\u9aa8\u724c\u6240\u8868\u793a\u7684\u4ef7\u503c\u662f\u4f1a\u968f\u7740\u72b6\u6001\u7684\u53d8\u5316\u800c\u53d8\u5316\u7684\uff0c\u8fd9\u5927\u5927\u7684\u8fdd\u80cc\u4e86DP\u7684\u539f\u5219\uff0c\u662f\u4e0d\u53ef\u884c\u7684\uff01\uff01**\n\n**\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u5de7\u5999\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff01\uff1a**\n\n**\u5047\u5982\u6211\u4eec\u4e8b\u5148\u5c31\u8ba9\u6240\u6709\u7684\u591a\u7c73\u8bfa\u9aa8\u724c\u5bf9\u90fd\u7ffb\u5230\u4e0a\u5927\u4e0b\u5c0f\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u6bcf\u4e00\u5bf9\u591a\u7c73\u8bfa\u9aa8\u724c\u5bf9\u5e94\u7684\u4ef7\u503c\u5c31\u662f\u56fa\u5b9a\u7684\u4e86\uff0c\u53ea\u4f1a\u671d\u7740\u51cf\u5c11\u5dee\u503c\u7684\u65b9\u5411\u8fdb\u884c\uff0c\u4e5f\u5c31\u662f\u4e0a\u4e0b\u9aa8\u724c\u70b9\u6570\u4e4b\u5dee\u7684\u4e24\u500d\uff0c\u800c\u8fd9\u4e2a\u80cc\u5305\u7684\u6700\u5927\u503c\u5c31\u662f\u4e0a\u4e0b\u96c6\u5408\u7684\u70b9\u6570\u4e4b\u5dee\uff0c\u6bcf\u5bf9\u9aa8\u724c\u7684\u91cd\u91cf\u662f\u56fa\u5b9a\u7684\uff0c\u5047\u5982\u4e4b\u524d\u672c\u8eab\u5c31\u662f\u4e0a\u5927\u4e0b\u5c0f\u90a3\u4e48\u91cd\u91cf\u5c31\u662f1\uff0c\u53cd\u4e4b\u5c31\u662f-1\uff08\u76f8\u5f53\u4e8e\u5148\u52a0\u4e0a\u4e86\u8fd9\u4e9b\u91cd\u91cf\uff0c\u540e\u6765\u518d\u8f6c\u56de\u53bb\u5c31\u62b5\u6d88\u4e86\uff01\uff09**\n\n**\u6240\u4ee5\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2abase\u4ee3\u8868\u4e00\u5f00\u59cb\u5c31\u628a\u4e0a\u5c0f\u4e0b\u5927\u7684\u60c5\u51b5\u8f6c\u6210\u4e0a\u5927\u4e0b\u5c0f\u7684\u60c5\u51b5\u7684\u6570\u91cf\uff0c\u4ee3\u8868\u6211\u4e4b\u524d\u5c31\u5df2\u7ecf\u6d88\u8017\u7684\u6b65\u6570\uff0c\u7136\u540e\u8dd1\u4e00\u4e2a\u4e25\u683c\u6392\u5217\u7684# \u768401\u80cc\u5305\uff0c\u627e\u5230\u8ddd\u79bb\u80cc\u5305\u5927\u5c0f\u6700\u5c0f\u7684\u6709\u6548\u7684 f [ i ] \u518d\u52a0\u4e0abase\u5c31\u662f\u7b54\u6848\u4e86\uff01**\n\n**\u89e3\u91ca\u4e00\u4e0b\u4e25\u683c\u6392\u5217\u768401\u80cc\u5305\uff1a**\n\n**\u4e00\u822c\u768401\u80cc\u5305\u4e2d f [ i ] [ j ] \u8868\u793a\u7684\u662f\u524d i \u4e2a\u7269\u54c1\u4e2d\u7528\u4f53\u79ef\u4e3a j \u7684\u80cc\u5305\u53ef\u4ee5\u88c5\u4e0b\u7684\u6700\u5927\u4ef7\u503c\uff08\u6700\u5c0f\u91cd\u91cf\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u91cc\u7684 j \u7684\u4f53\u79ef\u662f\u53ef\u4ee5\u4e0d\u88c5\u6ee1\u7684**\n\n**\u800c\u8fd9\u4e2a\u5730\u65b9\u6211\u4eec\u7684\u4f53\u79ef\u5fc5\u987b\u88c5\u7684\u4e25\u4e25\u5b9e\u5b9e\u7684\uff0c\u56e0\u4e3a\u8fd9\u91cc\u7684 f [ i ] [ j ] \u8868\u793a\u7684\u662f\u524d i \u5bf9\u591a\u7c73\u8bfa\u9aa8\u724c\u4e2d \u901a\u8fc7\u7ffb\u8f6c\u4f7f\u5f97\u4e0a\u4e0b\u96c6\u5408\u7684\u5dee\u503c\u51cf\u5c0f\u4e86 j \u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u7ffb\u8f6c\u6b21\u6570\uff01**\n\n**\u4e00\u4e2a\u662f\u80cc\u5305\u53ef\u7a7a\uff0c\u4e00\u4e2a\u662f\u4f7f\u5f97\u5dee\u503c\u6070\u597d\u4e3a**\n\n**\u6240\u4ee5\u4e0b\u9762\u7684DP\u8f6c\u79fb\u7684\u65f6\u5019\u5fc5\u987b\u4fdd\u8bc1\u8f6c\u79fb\u8fc7\u6765\u7684 j \u8981\u4e48\u662f 0 \u8981\u4e48\u662f\u4e00\u4e2a\u5df2\u7ecf\u786e\u5b9a\u4e86\u662f\u4e00\u6b65\u6b65\u8f6c\u79fb\u8fc7\u6765\u7684\u72b6\u6001\uff0c\u800c\u8fd9\u4e2a\u5730\u65b9\u7684\u3010\u786e\u5b9a\u3011\u6211\u4eec\u7528\u4e00\u4e2a full \u6570\u7ec4\u6765\u7ef4\u62a4\uff0c\u8868\u793a\u662f\u4e0d\u662f\u4e00\u4e2a\u88c5\u6ee1\u4e86\u7684\u80cc\u5305\uff01**\n***\n**\u4ee3\u7801\u5982\u4e0b\uff1a**\n```cpp\n#include<bits/stdc++.h>\n#define maxn 10000\nusing namespace std;\nint n,V,base_weight,v[maxn],w[maxn],f[maxn];\nbool full[maxn];\ninline int qr()\n{\n\tint sum=0;\n\tchar j=0;\n\tbool flag=0;\n\twhile(!isdigit(j))\n\t{\n\t\tflag|=j=='-';\n\t\tj=getchar();\n\t}\n\twhile(isdigit(j))\n\t{\n\t\tsum=(sum<<1)+(sum<<3)+(j^48);\n\t\tj=getchar();\n\t}\n\treturn flag? -sum:sum;\n}\ninline void readin()\n{\n\tn=qr();\n\tint a,b;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta=qr();\n\t\tb=qr();\n\t\tif(a>b)\n\t\t{\n\t\t\tv[i]=2*(a-b);\n\t\t\tV+=a-b;\n\t\t\tw[i]=1; \n\t\t}\n\t\telse if(a<b)\n\t\t{\n\t\t\tv[i]=2*(b-a);\n\t\t\tV+=b-a;\n\t\t\tw[i]=-1;\n\t\t\tbase_weight++;\n\t\t}\n\t} \n\tfor(int i=1;i<=V;i++)\n\tf[i]=0x7777777;\n\treturn;\n}\ninline void Solve()\n{\n\tfor(int i=1;i<=n;i++)\n\tif(v[i])\n\tfor(int j=V;j>=v[i];j--)\n\t{\n\t\tif(v[i]==j||full[j-v[i]])\n\t\t{\n\t\t\tfull[j]=1;\n\t\t\tf[j]=min(f[j],f[j-v[i]]+w[i]);\n\t\t}\n\t} \n\treturn;\n}\ninline void print()\n{\n\tfor(int i=V;i>=1;i--)\n\tif(full[i])\n\t{\n\t\tprintf(\"%d\",base_weight+f[i]);\n\t\treturn;\n\t}\n\tprintf(\"%d\",base_weight);\n\treturn;\n}\nint main()\n{\n\treadin();\n\tSolve();\n\tprint();\n\treturn 0;\n}\n```\n",
        "postTime": 1571646283,
        "uid": 117111,
        "name": "BrandonSoong",
        "ccfLevel": 4,
        "title": "P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011\u603b\u7ed3"
    },
    {
        "content": "\u9898\u89e3\u4e0a\u6709\u4e8c\u7ef4\u7684\u89e3\u6cd5\uff0c\u5176\u5b9e\u53ef\u4ee5\u964d\u5230\u4e00\u7ef4\n\n\u5148\u5c06\u5c0f\u7684\u653e\u5728\u4e0a\u9762\uff0c\u8bb0\u5f55\u4e00\u4e0b\u5dee\u503c \n\n\u6bcf\u4e00\u4e2a\u724c\u7684\u4f53\u79ef\u5c31\u53ef\u4ee5\u4f7f \u5dee\u503c\u7684\u4e24\u500d \u770b\u6700\u5927\u80fd\u88c5\u5230\u591a\u5c11\u4f53\u79ef\n\n\u82b1\u8d39\u6700\u5c11\u662f\u591a\u5c11\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\nint n;\nint s;\nconst int maxn=1e4+5;\nint v[maxn];\nint w[maxn];\nint dp[maxn];\nint tot;\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;++i)\n    {\n        int x,y;\n        scanf(\"%d %d\",&x,&y);\n        if(x>y)\n        {\n            s+=x-y;\n            v[i]=2*(x-y);\n            w[i]=1;\n        }\n        else\n        {\n            s+=y-x;\n            v[i]=2*(y-x);\n            w[i]=-1;\n            tot++;\n        }\n    }\n    memset(dp,0x7f,sizeof dp);\n    dp[0]=0;\n    for(int i=1;i<=n;++i)\n    {\n        for(int j=s;j>=v[i];--j)\n        {\n            if(dp[j-v[i]]!=0x7f7f7f7f)\n                dp[j]=min(dp[j],dp[j-v[i]]+w[i]);\n        }\n    }\n    int ans;\n    for(int i=s;i>=0;--i) {\n        if(dp[i]!=0x7f7f7f7f)\n        {\n            ans=i;\n            break;\n        }\n    }\n    printf(\"%d\\n\",dp[ans]+tot);\n    return 0;\n}\n\n```\n",
        "postTime": 1565318133,
        "uid": 177676,
        "name": "upcchenbaorui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "### \u6211\u7684\u601d\u8def\u4f3c\u4e4e\u548c\u5927\u591a\u6570\u4eba\u4e0d\u4e00\u6837~~\uff08\u53ea\u7ffb\u4e86\u524d\u51e0\u9875\u9898\u89e3\uff0c\u6709\u91cd\u590d\u522b\u6253\u6211\uff09~~\n---\n\u8fd9\u9053\u9898\u9898\u89e3\u4e5f\u4e0d\u5c11\u4e86\uff0c\u6211\u5c31\u76f4\u63a5\u8bf4\u505a\u6cd5\u4e86\u3002\n1. \u9884\u5904\u7406\uff1a$a[i]$ \u8868\u793a $i$ \u4f4d\u7f6e\u7684\u9aa8\u724c\u7ffb\u8f6c\u540e\u7684\u5dee\u503c\uff0c\u72b6\u6001\u6570\u7ec4$F[0][0]$\u521d\u59cb\u5316\u4e3a\u6240\u6709\u9aa8\u724c\u4e00\u5f20\u90fd\u6ca1\u7ffb\u8f6c\u65f6\u4e0a\u4e0b\u70b9\u6570\u4e4b\u5dee\uff0c\u5176\u4f59\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927\u3002\n2. \u786e\u8ba4\u72b6\u6001\uff1a$F[i][j]$ \u8868\u793a\u524d $i$ \u9aa8\u724c\u7ffb\u8f6c $j$ \u6b21\u4e0a\u4e0b\u70b9\u6570\u548c\u4e4b\u5dee\u7edd\u5bf9\u503c\u7684\u6700\u5c0f\u503c(\u8bb0\u5f55\u72b6\u6001\u65f6\u4e0d\u80fd\u53d6\u7edd\u5bf9\u503c\uff09\u3002\n3. \u5212\u5206\u9636\u6bb5\uff1a\u5df2\u5904\u7406\u7684\u9aa8\u724c\u4e2a\u6570\u3002\n4. \u8f6c\u79fb\u65b9\u7a0b\uff1a$F[i][j]=F[i-1][j-1]+2*a[i]$ $if(abs(F[i-1][j-1]+2*a[i])<abs(F[i][j]))$\n5. \u76ee\u6807\uff1a$F[N][i]$ \u53d6\u6700\u5c0f\u503c\u65f6 $i$ \u7684\u503c.\n---\n### \u55ef\uff0c\u597d\u50cf\u53ef\u4ee5\u6c34\u8fc7\u8fd9\u9053\u9898\u4e86\u3002\n\n\u5148\u4e0a\u4e2a\u4ee3\u7801\n\n```cpp\n#include<cctype>\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ntemplate<class T>\ninline void read(T &x){\n    x=0; int sign=1; char c;\n    do{c=getchar(); if(c=='-') sign=-1;}while(!isdigit(c));\n    do{x=x*10+c-'0',c=getchar();}while(isdigit(c));\n    x*=sign;\n}\nint n,F[10005],a[1005];\nint main(){\n    read(n);\n    memset(F,0x3f,sizeof(F)); F[0]=0;\n    for(register int i=1;i<=n;++i){\n    \tint x,y; read(x),read(y);\n    \tF[0]+=x-y,a[i]=y-x;\n    }\n    for(register int i=1;i<=n;++i) //\u663e\u7136\u7b2c\u4e00\u7ef4\u53ef\u4ee5\u6a21\u4eff01\u80cc\u5305\uff0c\u76f4\u63a5\u820d\u6389\n    for(register int j=i;j>0;--j) //\u5012\u5e8f\u5faa\u73af\n    if(abs(F[j-1]+2*a[i])<abs(F[j])) F[j]=F[j-1]+2*a[i];\n    int minn=19260817,pos;\n    for(register int i=0;i<=n;++i) if(abs(F[i])<minn)\n    minn=abs(F[i]),pos=i;\n    cout<<pos; \n    return 0;\n}\n```\n---\n### \u8fa3\u4e48\uff0c\u606d\u559c\u4f60\uff0cWA\u4e86\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\n\u4e3a\u5565\u5b50\u561e\uff1f\uff1f\u601d\u8def\u5e94\u8be5\u6ca1\u9519\u554a\u3002\u5176\u5b9e\uff0c\u4ed4\u7ec6\u4e00\u60f3\uff0c\u4f60\u4f1a\u53d1\u73b0\u72b6\u6001\u8f6c\u79fb\u7684\u65f6\u5019\u662f\u6709\u758f\u6f0f\u7684\uff0c\u5047\u8bbe$F[i]$\u7684\u503c\u4e3aX\uff08X>=0\uff09\uff0c\u90a3\u4e48\u5982\u679c\u6709\u4e00\u4e2a-X\u8981\u8f6c\u79fb\u8fc7\u6765\uff0c\u6309\u7167\u4e0a\u9762\u4ee3\u7801\uff0c-X\u7684\u503c\u662f\u4e0d\u4f1a\u8bb0\u5f55\u7684\uff0c\u8fd9\u663e\u7136\u4f1a\u5bfc\u81f4\u6709\u540e\u6548\u6027\uff0c\u90a3\u4e48\u5982\u4f55\u89e3\u51b3\u5462\uff1f\n#### \u5176\u5b9e\u5f88\u7b80\u5355\n\u53ea\u9700\u628a\u6b63\u8d1f\u4e24\u4e2a\u503c\u90fd\u8bb0\u5f55\u4e0b\u6765\u5373\u53ef\uff0c\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\n\n---\n\n```cpp\n#include<cctype>\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ntemplate<class T>\ninline void read(T &x){\n    x=0; int sign=1; char c;\n    do{c=getchar(); if(c=='-') sign=-1;}while(!isdigit(c));\n    do{x=x*10+c-'0',c=getchar();}while(isdigit(c));\n    x*=sign;\n}\nint n,F[1005][2],a[1005];  //\u89c4\u5b9aF[i][0]\u8bb0\u5f55\u6b63\u6574\u6570\uff0cF[i][1]\u8bb0\u5f55\u8d1f\u6570\nint main(){\n    read(n); int temp=0;\n    memset(F,0x3f,sizeof(F));\n    for(register int i=1;i<=n;++i){\n    \tint x,y; read(x),read(y);\n    \ttemp+=x-y,a[i]=y-x;\n\t}\n\tF[0][temp>=0]=temp;\n\tfor(register int i=1;i<=n;++i)\n\tfor(register int j=i;j>0;--j){\n\t\tint pre1=F[j-1][0]+2*a[i],pre2=F[j-1][1]+2*a[i];\n\t\tint d1=pre1>=0,d2=pre2>=0;\n\t\tif(abs(pre1)<=abs(F[j][d1])) F[j][d1]=pre1;\n\t\tif(abs(pre2)<=abs(F[j][d2])) F[j][d2]=pre2;\n\t}\n\tint minn=19260817,pos;\n\tfor(register int i=0;i<=n;++i) if(abs(F[i][0])<minn||abs(F[i][1])<minn)\n\tminn=min(abs(F[i][0]),abs(F[i][1])),pos=i;\n\tcout<<pos; \n    return 0;\n}\n```\n",
        "postTime": 1541171775,
        "uid": 71728,
        "name": "KryptonAu",
        "ccfLevel": 0,
        "title": "P1282 \u591a\u7c73\u8bfa\u9aa8\u724c \u9898\u89e3"
    },
    {
        "content": "- \u5e8f\u5217 DP.\n- \u8003\u8651\u9898\u76ee\u4e2d\u5982\u4f55\u8bc4\u5224\u70b9\u5dee: \u4e0a\u4e0b\u548c\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c.\n- \u6240\u4ee5\u6709\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u72b6\u6001\u8bbe\u8ba1: f[i][j] \u8003\u8651\u5230\u524d i \u4e2a\u6570, \u76ee\u524d\u7684\u5dee\u503c\n\u4e3a j, \u6700\u5c11\u7684\u7ffb\u8f6c\u6b21\u6570\u662f\u591a\u5c11.\n? \u8003\u8651\u72b6\u6001\u8bbe\u8ba1: f[i][j] \u8003\u8651\u5230\u524d i \u4e2a\u6570, \u5df2\u7ecf\u7ffb\u8f6c\u4e86 j \u6b21, \u76ee\u524d\u6700\u5c0f\n\u7684\u5dee\u503c\u662f\u591a\u5c11.\n- \u539f\u72b6\u6001 f[i][j] \u8003\u8651\u5230\u524d i \u4e2a\u6570, \u76ee\u524d\u7684\u5dee\u503c\u4e3a j, \u6700\u5c11\u7684\u7ffb\u8f6c\u6b21\u6570\u662f\n\u591a\u5c11.\n* \u73b0\u72b6\u6001 f[i][j] \u8003\u8651\u5230\u524d i \u4e2a\u6570, \u7b2c\u4e00\u884c\u7684\u603b\u548c\u662f j, \u6700\u5c11\u7684\u7ffb\u8f6c\u6b21\u6570\n\u662f\u591a\u5c11\n\n\n```cpp\n/*\nP1282 \u591a\u7c73\u8bfa\u9aa8\u724c\n\u4ee3\u7801 C++\uff0c0.94KB\n\u63d0\u4ea4\u65f6\u95f4 2018-01-20 17:33:46\n\u8017\u65f6/\u5185\u5b58 148ms, 17199KB\n*/\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int N = 1005;\nconst int M = N * 6;\nconst int INF = 1e9;\n\nint n;\nint a[N], b[N], s;\nint f[N][M]; // f[i][j]\u4ee3\u8868\u8003\u8651\u524di\u5f20\u724c, \u4e0a\u8fb9\u7684\u548c\u4e3aj, \u6700\u5c11\u8981\u7ffb\u591a\u5c11\u5f20\n\nint main()\n{\n    cin >> n, s = 0;\n    for(int i = 1; i <= n; ++ i)\n        cin >> a[i] >> b[i],\n        s = s + a[i] + b[i]; // \u7528s\u6765\u8bb0\u5f55\u603b\u7684\u548c\n\n    for(int i = 1; i <= n+1; ++ i)\n        for(int j = 0; j <= i * 6; ++ j)\n            f[i][j] = INF; // \u521d\u503c\u6700\u5927\u503c\n\n    f[1][0] = 0;\n\n    for(int i = 1; i <= n; ++ i)\n        for(int j = 0; j <= i * 6; ++ j) if(f[i][j] < INF) // INF\u4ee3\u8868\u4e0d\u80fd\u5230\u8fbe\n        {\n            f[i+1][j + a[i]] = min(f[i+1][j + a[i]], f[i][j]); // \u4e0d\u7ffb\n            f[i+1][j + b[i]] = min(f[i+1][j + b[i]], f[i][j] + 1); // \u7ffb\n        }\n\n    int ans = INF, flip = -1;\n    for(int i = 0; i <= n * 6; ++ i)\n        if(f[n+1][i] < INF && abs(s - 2*i) < ans // abs(s - 2*i) \u4e3a\u4e24\u8005\u7684\u5dee\n            || (abs(s - 2*i) == ans && flip > f[n+1][i]))\n            ans = abs(s - 2*i), flip = f[n+1][i]; \n\n    cout << flip << endl;\n\n    return 0;\n}\n```",
        "postTime": 1518668597,
        "uid": 48934,
        "name": "cold_cold",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u65b9\u6cd5\u80af\u5b9a\u662f\u52a8\u6001\u89c4\u5212\uff0c\u7b2c\u4e00\u773c\u770b\u8bbe\u7684\u662fdp[i][j]\u8868\u793a\u524di\u4e2a\u6362\u4e86j\u6b21\u7684\u6700\u5c11\u5dee\uff0c\u6700\u540e\u5012\u7740\u63a8\u56de\u53bb\uff0c\u597d\u50cf\u4e0d\u884c\uff0c\u7136\u540e\u5c31\u7528\u4e86dp[i][j]\u8868\u793a\u524di\u4e2a\u5f53\u524d\u5dee\u503cj\u7684\u6700\u5c0f\u6b21\u6570\uff0c\u9ed8\u8ba4\u662f-1\u3002\n\n\u540e\u6765\u8bc1\u660e\u8fd9\u4e2a\u53ef\u4ee5\uff0c\u4f1a\u9047\u5230\u95ee\u9898\u5c31\u662f\u8d1f\u6570\u4e0b\u6807\uff0c\u4e5f\u597d\u529e\uff0c\u52a0\u4e2a6000\u5c31\uff0c\u628a\u8d1f\u6570\u53d8\u4e3a\u6b63\u6570\uff0c\u8fd9\u91cc\u7531\u4e8e\u6570\u636e\u91cf\u662f1000\uff0c\u6570\u5b57\u6700\u59276\uff0c\u6240\u4ee5\u8bbe\u76846000\uff0c\u53ef\u80fd\u5f00\u5927\u4e86\n\n\u6709\u4e2a\u4f18\u5316\u7a7a\u95f4\u65f6\u95f4\u7684\u65b9\u6cd5\uff0c\u90a3\u5c31\u662f\u5f00\u4e2a\u961f\u5217\u7ef4\u62a4\u5f53\u524d\u5c42\u4e0d\u662f-1\u7684dp[i][j]\u7684\u4e0b\u6807j\uff0c\u521d\u59cb\u653e\u5165\u4e24\u4e2a\u503c\uff0c\u7b2c0\u4e2a\u6570\u7684\u6b63\u8d1f\u5dee\u503c\uff0c\u6bcf\u6b21\u5faa\u73af\u4e00\u904d\u961f\u5217(\u5faa\u73af\u6b21\u6570\u7b49\u4e8e\u5f53\u524d\u7684size)\uff0c\u4ee3\u8868\u904d\u5386\u5f53\u524d\u5c42dp[i]\u6570\u7ec4\u4e2d,\u4e0d\u662f-1\u7684\u6570\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4ece\u961f\u5217\u91cc\u62ff\u51fa\u6765\u7684\u5143\u7d20now\uff1a\n\n\u4e0b\u4e00\u5c42\u6709\u4e24\u4e2a\u8f6c\u79fb\u65b9\u6cd5\uff0cdp[i+1][now+A[i+1].x-A[i+1].y]= dp[i][now]\n\n\u548cdp[i+1][now+A[i+1].y-A[i+1].x]= dp[i][now]+1,\u5f53\u7136\u8fd9\u6bcf\u4e2a\u90fd\u5f97\u5224\u65ad\u662f\u4e0d\u662f-1\uff0c\n\n\u4e0d\u662f-1\u5c31\u8981\u53d6\uff0c\u81ea\u5df1\u548c\u4e0a\u4e00\u4e2a\u6700\u5c0f\u7684\u3002\u540c\u65f6\u5bf9\u4e8e\u662f-1\u7684\u60c5\u51b5\uff0c\u4e0d\u8981\u5fd8\u4e86\u5165\u961f\u5217\n\n\n\u4e0d\u7528dp\u8fd9\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7528\u4e24\u4e2a\u6570\u7ec4\u4e92\u76f8\u8d4b\u503c\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u51cf\u5c11\u5185\u5b58\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n//#include<windows.h>\nusing namespace std;\n#define ll long long\n#define inf 1e-5\nconst int INF=1<<30;\nconst int MAX=6010;\nconst int mod=1e9+7;\n\nstruct v2{\n    int x,y;\n    void sett(int x,int y){\n        this->x=x;\n        this->y=y;\n    }\n    bool operator == (const v2 &t){\n         return (t.x==this->x&&t.y==this->y);\n    }\n};\nv2 A[MAX];\n\nint main(int argc,char *argv[]){\n    int i,j,k,n,cnt,cnt1,cnt2,now,len;\n    cin>>n;\n    for(i=1;i<=n;i++){\n        scanf(\"%d%d\",&A[i].x,&A[i].y);\n    }\n\n    int *a=new int[2*MAX];\n    int *b=new int[2*MAX];\n    memset(a,-1,sizeof(int)*2*MAX);\n    memset(b,-1,sizeof(int)*2*MAX);\n    queue<int>que;\n\n    k=A[1].x-A[1].y+MAX;\n    que.push(k);\n    a[k]=0;\n\n    k=A[1].y-A[1].x+MAX;\n    que.push(k);\n    a[k]=1;\n\n    for(i=1;i<n;i++){\n        len=que.size();\n        for(j=0;j<len;j++){\n            now=que.front();\n            que.pop();\n            k=now+A[i+1].x-A[i+1].y;\n            if(b[k]==-1){\n                b[k]=a[now];\n                que.push(k);\n            }else{\n                b[k]=min(b[k],a[now]);\n            }\n            k=now+A[i+1].y-A[i+1].x;\n            if(b[k]==-1){\n                b[k]=a[now]+1;\n                que.push(k);\n            }else{\n                b[k]=min(b[k],a[now]+1);\n            }\n        }\n        delete a;\n        a=b;\n        b=new int[2*MAX];\n        memset(b,-1,sizeof(int)*2*MAX);\n    }\n    for(i=0;i<MAX;i++){\n        if(a[MAX-i]!=-1){\n            cnt1=a[MAX-i];\n            break;\n        }\n    }\n    for(j=0;j<MAX;j++){\n        if(a[MAX+j]!=-1){\n            cnt2=a[MAX+j];\n            break;\n        }\n    }\n    if(i==j){\n        cnt=min(cnt1,cnt2);\n    }else{\n        cnt=i>j?cnt2:cnt1;\n    }\n    printf(\"%d\\n\",cnt);\nreturn 0;\n}\n\n```",
        "postTime": 1516548530,
        "uid": 73205,
        "name": "v__v",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u7565\u6709\u96be\u5ea6\u7684dp\n\n\u4f8b\u5b50\u7684\u4e0a\u4e0b\u90e8\u5206\u4e4b\u5dee\u662f6+1+1+1-\uff081+5+3+2\uff09=\uff086-1\uff09+\uff081-5\uff09+\uff081-3\uff09+\uff081-2\uff09=-2\uff0c\u800c\u7ffb\u8f6c\u6700\u540e\u4e00\u4e2a\u9aa8\u724c\u540e\uff0c\u4e0a\u4e0b\u4e4b\u5dee\u53d8\u4e3a\uff086-1\uff09+\uff081-5\uff09+\uff081-3\uff09+\uff082-1\uff09=0\u3002\u7531\u6b64\u770b\u51fa\uff0c\u4e00\u4e2a\u9aa8\u724c\u5bf9\u7ffb\u8f6c\u7b56\u7565\u9020\u6210\u5f71\u54cd\u7684\u662f\u4e0a\u4e0b\u4e24\u6570\u4e4b\u5dee\uff0c\u9aa8\u724c\u4e0a\u7684\u6570\u5219\u662f\u6b21\u8981\u7684\u4e86\u3002\u8fd9\u4e48\u4e00\u6765\uff0c\u4fbf\u628a\u9aa8\u724c\u7684\u653e\u7f6e\u72b6\u6001\u75318\u4e2a\u6570\u5b57\u53d8\u4e3a4\u4e2a\uff1a 5    -4    -2    -1\uff0c\u7ffb\u8f6c\u65f6\u53ea\u9700\u53d6\u8be5\u4f4d\u6570\u5b57\u7684\u76f8\u53cd\u6570\u5c31\u884c\u4e86\u3002\n\n\u5728\u672c\u9898\u4e2d\uff0c\u56e0\u4e3a\u5404\u9aa8\u724c\u7684\u7ffb\u8f6c\u987a\u5e8f\u6ca1\u6709\u9650\u5b9a\uff0c\u6240\u4ee5\u4e0d\u80fd\u6309\u9aa8\u724c\u7f16\u53f7\u4f5c\u4e3a\u9636\u6bb5\u6765\u5212\u5206\u3002\u600e\u4e48\u529e\u5462\uff1f\u8003\u8651\u5230\u9690\u542b\u9636\u6bb5\u7c7b\u578b\u7684\u95ee\u9898\u53ef\u4ee5\u6309\u72b6\u6001\u6700\u4f18\u503c\u7684\u5927\u5c0f\u6765\u5212\u5206\u9636\u6bb5\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u4ee5\u9aa8\u724c\u5e8f\u5217\u4e0a\u4e0b\u4e24\u90e8\u5206\u7684\u5dee\u503cI\u4f5c\u4e3a\u72b6\u6001\uff0c\u628a\u8fbe\u5230\u8fd9\u4e00\u72b6\u6001\u7684\u7ffb\u8f6c\u6b65\u6570\u4f5c\u4e3a\u72b6\u6001\u503c\uff0c\u8bb0\u4e3af\uff08I\uff09\u3002\u4fbf\u6709f\uff08I\uff09=min{f\uff08I+j\uff09+1} \uff08-12\u3008=j<=12,j\u4e3a\u5076\u6570\uff0c\u4e14\u8981\u6c42\u5f53\u524d\u72b6\u6001\u6709\u5dee\u503c\u4e3aj/2\u7684\u9aa8\u724c\uff09\u3002\u8fd9\u91cc\uff0cI\u4e0d\u662f\u65e0\u9650\u589e\u5927\u6216\u51cf\u5c0f\uff0c\u5176\u8303\u56f4\u53d6\u51b3\u4e8e\u521d\u59cb\u9aa8\u724c\u5e8f\u5217\u7684\u6570\u5b57\u5dee\u7684\u548c\u7684\u5927\u5c0f\u3002\n\n\u5177\u4f53\u52a8\u6001\u89c4\u5212\u65f6\uff0c\u5982\u4f8b\u9898\uff0c\u6211\u4eec\u4ee5f\uff08-2\uff09=0\u8d77\u6b65\uff0c\u6839\u636e\u9aa8\u724c\u72b6\u6001\uff0c\u8fdb\u884c\u4e00\u6b21\u7ffb\u8f6c\uff0c\u53ef\u5f97\u5230f\uff08-12\uff09=1\uff0cf\uff086\uff09=1\uff0cf\uff082\uff09=1\uff0cf\uff080\uff09=1\uff0c\u7531\u4e8e\u51fa\u73b0\u4e86f\uff080\uff09\uff0c\u56e0\u6b64\u7a0b\u5e8f\u4fbf\u53ef\u4ee5\u7ed3\u675f\uff0c\u5426\u5219\u5c06\u6839\u636e\u56db\u4e2a\u65b0\u72b6\u6001\u7ee7\u7eed\u6269\u5c55\uff0c\u76f4\u81f3\u51fa\u73b0f\uff080\uff09\u6216\u8005\u65e0\u6cd5\u751f\u6210\u65b0\u72b6\u6001\u4e3a\u6b62\u3002\n\n\u6ce8\u610f\uff1a\u5728\u5404\u72b6\u6001\uff0c\u9664\u8bb0\u5f55\u6700\u5c11\u6b65\u6570\u5916\uff0c\u8fd8\u9700\u8bb0\u5f55\u5230\u8fbe\u8fd9\u4e00\u72b6\u6001\u65f6\u5404\u9aa8\u724c\u7684\u653e\u7f6e\u60c5\u51b5\uff1b\u800c\u5f53\u5230\u8fbe\u67d0\u4e00\u72b6\u6001\u53d1\u73b0\u5df2\u8bb0\u5f55\u6709\u4e00\u79cd\u7ffb\u8f6c\u7b56\u7565\u65f6\uff0c\u5219\u53d6\u6b65\u6570\u8f83\u5c0f\u7684\u4e00\u79cd\u3002\n\n------------------------------------\u6211\u662f\u534e\u4e3d\u7684\u5206\u5272\u7ebf----------------------------------\n\n\u9644\u4e0a\u4ee3\u7801\uff08\u52ff\u6284\uff09\n\n\n```cpp\nuses math;\nvar f:array[-10000..10000] of longint;\nn,i,j,sum,suma,sumb:longint;\na,b:array[1..1000] of longint;\nbegin\nassign(input,'domino.in');\nassign(output,'domino.out');\nreset(input);\nrewrite(output);\nreadln(n);\nfor i:=1 to n do readln(a[i],b[i]);\nfor i:=1 to n do suma:=suma+a[i];\nfor i:=1 to n do sumb:=sumb+b[i];\nfor i:=1 to n do sum:=sum+max(a[i],b[i]);\nfillchar(f,sizeof(f),127);\nf[suma-sumb]:=0;\nfor i:=1 to n do\nbegin\nif a[i]>b[i] then\nfor j:=-sum to sum do\nf[j]:=min(f[j],f[j+2*(a[i]-b[i])]+1);\nif a[i]<b[i] then\nfor j:=sum downto -sum do\nf[j]:=min(f[j],f[j+2*(a[i]-b[i])]+1);\nend;\nfor i:=0 to sum do begin\nif f[i]<>f[-10000] then break;\nif f[-i]<>f[-10000] then break;\nend;\nwriteln(min(f[i],f[-i]));\nclose(input);\nclose(output);\nend.\n\n```",
        "postTime": 1499483483,
        "uid": 22400,
        "name": "\u65f6\u5149",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u80cc\u5305\u95ee\u9898\n\n\u6700\u5f00\u59cb\u7684\u601d\u8def\u662ff[i][j][k]\u8868\u793a\u524di\u4e2a\u4e0a\u9762j\u4e2a\u4e0b\u9762k\u4e2a\n\n\u4f46\u662f\u53d1\u73b0j+k\u5373\u603b\u6570\u662f\u4e2a\u5b9a\u503c\n\n\u4f18\u5316\u5230 f[i][j]\n\n\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5f88\u597d\u60f3\u4e86\n\nf[i][j]=min{f[i-1][j],f[i-1][j+up[i]-down[i]]) \u518d\u5faa\u73af\u5904\u7406\u6700\u4f18\u503c \u4ee3\u7801\u5982\u4e0b\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<string>\n#include<cstring>\n#include<cmath>\n#define rep(o,t,k) for(int o=t;o<=k;o++)\nusing namespace std;\nint i,j,k,l,m,n,up,sum,inf,down,u[1200],d[1200],f[1200][20000];\nint main()\n{\n    scanf(\"%d\",&n);\n    rep(i,1,n) \n    {\n        scanf(\"%d%d\",&u[i],&d[i]);\n        up+=u[i];down+=d[i];sum+=u[i]+d[i];\n    }\n    memset(f,62,sizeof(f));inf=f[0][0];\n    f[0][up]=0;\n    rep(i,1,n)\n      rep(j,1,sum)\n      {\n           if(j-u[i]+d[i]<0) continue;\n           f[i][j]=min(f[i-1][j],f[i-1][j+u[i]-d[i]]+1);\n      }\n    int p=99999,step;\n    for(int i=sum;i>=0;i--)\n    {\n        if(abs(sum-i-i)<p&&f[n][i]<inf)\n        {\n            p=abs(sum-i-i);\n            step=f[n][i];\n        }\n    }\n    printf(\"%d\",step);\n    return 0;\n}\n```",
        "postTime": 1484883720,
        "uid": 31088,
        "name": "\u6d41\u661f\u68a6\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u7528hash\\_map\u5b9e\u73b0\uff0c\u4e0d\u7528\u7ea0\u7ed3dp\u7684\u6570\u7ec4\u600e\u4e48\u5f00\uff0c\u7a7a\u95f4\u4e5f\u4e0d\u7528\u7ba1\n\n\u4f46\u662f\u8981\u4f7f\u7528hash\\_map\u9700\u8981using namespace \\_\\_gnu\\_cxx;\u4e0d\u77e5\u9053\u6bd4\u8d5b\u7ed9\u4e0d\u7ed9\u7528\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <string>\n#include <cstdio>\n#include <cctype>\n#include <stack>\n#include <vector>\n#include <cstdlib>\n#include <deque>\n#include <cmath>\n#include <set>\n#include <ext/hash_map>\n#include <map>\nusing namespace std;\nusing namespace __gnu_cxx;\nint main() {\nint n;\ncin>>n;\nhash_map<int,int> m,tmp;\nm[0]=0;\nfor (int i=0;i<n;i++) {\n    int a,b;\n    cin>>a>>b;\n    for (hash_map<int,int>::iterator it=m.begin();it!=m.end();it++) {\n        int first=it->first,d=a-b>0?a-b:b-a;\n        if (m.count(first-2*d)) {\n            if (a-b>0) tmp[first-d]=min(m[first]+1,m[first-2*d]);\n            else tmp[first-d]=min(m[first],m[first-2*d]+1);\n        }\n        else {\n            if (a-b>0) tmp[first-d]=m[first]+1;\n            else tmp[first-d]=m[first];\n        }\n        if (!m.count(first+2*d)) {\n            if (a-b>0) tmp[first+d]=m[first];\n            else tmp[first+d]=m[first]+1;\n        }\n    }\n    m=tmp;\n    tmp.clear();\n}\nfor (int i=0;i<7;i++) {\n    int x=2000,y=2000;\n    if (m.count(i)) x=m[i];\n    if (m.count(-i)) y=m[-i];\n    int ans=min(x,y);\n    if (ans!=2000) {\n        cout<<ans<<endl;\n        break;\n    }\n}\nreturn 0;\n}\n```",
        "postTime": 1483603201,
        "uid": 6262,
        "name": "lieee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u51b3\u7b56\u5f88\u597d\u60f3 \u5bf9\u4e8e\u4e00\u4e2a\u724c \u65e0\u975e\u5c31\u662f\u7ffb\u8f6c\u6216\u8005\u4e0d\u7ffb\u8f6c \u6240\u4ee5\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u4ece\u51b3\u7b56\u5165\u624b\n\n\u8bbef[i][j]=k\u8868\u793a\u524di\u5f20\u724c\u6784\u6210\u5206\u503cj\u7684\u6700\u5c0f\u6b21\u6570k\n\n\u5219\u8f6c\u79fb\u65b9\u7a0b:\n\n```cpp\n  //\u4e0d\u53cd\u8f6c \n  int dif=a[i]-b[i];\n  f[i][j+dif+N]=min(f[i][j+dif+N],f[i-1][j+N]);\n   //\u53cd\u8f6c \n   dif=b[i]-a[i];\n   f[i][j+dif+N]=min(f[i][j+dif+N],f[i-1][j+N]+1);\n```\n\u6ce8\u610f\u8fd9\u91cc\u8981\u52a0\u4e00\u4e2a\u5e38\u6570N(5000\u56e0\u4e3a\u6700\u5927\u76f8\u5dee\u4e0d\u4f1a\u8d85\u8fc7\u8fd9\u4e2a) \u56e0\u4e3a\u5206\u503c\u53ef\u80fd\u4e3a\u8d1f\u6570\n\u5219\u7edf\u8ba1\u7b54\u6848\u5927\u6982\u5c31\u662f\u8fd9\u6837:\n\n```cpp\nfor(int j=N-maxn;j<=maxn+N;j++)\n     if(f[n][j]!=f[0][0])\n     {\n         if(ans>abs(j-N)) ans=abs(j-N),k=f[n][j],p=j;\n         else if(ans==abs(j-N)) k=min(f[n][j],f[n][p]);//\u8003\u8651\u5bf9\u79f0\u60c5\u51b5\n     }\n```\n\u603b\u4ee3\u7801:\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\nconst int N=5000;\nusing namespace std;\nint n,suma=0,sumb=0;\nint a[1010],b[1010];\nint f[1010][5000+5005];\nint ans=0x7f7f7f,k=0,p;\nint main()\n{\n    memset(f,0x7f7f7f,sizeof(f));\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&a[i],&b[i]);\n        suma+=a[i],sumb+=b[i];\n    }\n    f[0][5000]=0;\n    int maxn=5*n;\n    for(int i=1;i<=n;i++)\n     for(int j=-maxn;j<=maxn;j++)\n     {\n         //\u4e0d\u53cd\u8f6c \n        int dif=a[i]-b[i];\n        f[i][j+dif+N]=min(f[i][j+dif+N],f[i-1][j+N]);\n         //\u53cd\u8f6c \n        dif=b[i]-a[i];\n        f[i][j+dif+N]=min(f[i][j+dif+N],f[i-1][j+N]+1);\n     } \n    for(int j=N-maxn;j<=maxn+N;j++)\n     if(f[n][j]!=f[0][0])\n     {\n         if(ans>abs(j-N)) ans=abs(j-N),k=f[n][j],p=j;\n         else if(ans==abs(j-N)) k=min(f[n][j],f[n][p]);\n     }      \n    printf(\"%d\",k); \n    return 0;\n}\n```",
        "postTime": 1478095729,
        "uid": 22060,
        "name": "Memorize",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u9898\u76ee\u5206\u6790\uff1a\u6b64\u9898\u4e00\u773c\u770b\u4e0a\u53bb\uff0c\u50cf\u662f\u4e2a\u80cc\u5305\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u4e5f\u786e\u5b9e\u662f\u80cc\u5305\uff0c\u800c\u4e14\u8fd8\u662f01\u80cc\u5305\u3002\n\n\u4f46\u5728\u7801\u4ee3\u7801\u65f6\u8981\u6ce8\u610f\u4ee5\u4e0b\u4e09\u4e2a\u8981\u70b9\u3002\n\n\n\u8981\u70b9\u4e00\uff1a\u6ce8\u610f\u8003\u8651\u5230\u8d1f\u6570\u60c5\u51b5\uff0c\u4fdd\u7559\u72b6\u6001\u65f6\u6309\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4fdd\u7559\uff0c\u56e0\u4e3a\u662f01\u80cc\u5305\uff0c\u679a\u4e3e\u65f6\u5fc5\u987b\u4fdd\u8bc1\u5355\u8c03\u6027\u3002\u53e6\u5916\u7531\u4e8ec++\u4e0b\u6807\u4e0d\u80fd\u662f\u8d1f\u6570\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\uff08\u6bd4\u5982t\uff09\uff0c\u8bb0\u5f55\u65f6f[i]\u7edf\u4e00\u8bb0\u5f55\u6210f[i+t]\u3002\n\n\n\u8981\u70b9\u4e8c\uff1a\u6ce8\u610f\u66f4\u65b0\u6bd4\u5f53\u524d\u5df2\u8bb0\u5f55\u6700\u5c0f\u503c\u66f4\u5927\u7684\u503c\u3002\u5426\u5219\u7a0b\u5e8f\u5c31\u6210\u4e86\u4e00\u4e2a\u8d2a\u5fc3\u3002\u6bd4\u5982\u4e0d\u7ffb\u8f6c\u7b2c\u4e00\u5757\u65f6\u5dee\u503c\u662f2\uff0c\u7ffb\u8f6c\u7b2c\u4e00\u5757\u80fd\u53d8\u62104\uff0c\u5728\u7ffb\u8f6c\u7b2c\u4e00\u5757\u7684\u57fa\u7840\u4e0a\u7ffb\u8f6c\u7b2c\u4e8c\u5757\u80fd\u4f7f\u5dee\u503c\u53d8\u62100\uff0c\u8fd9\u6837\u7684\u6570\u636e\u5982\u679c\u7528\u8d2a\u5fc3\u5c31\u4e0d\u4f1a\u662f\u6700\u4f18\u89e3\u3002\n\n\n\u8981\u70b9\u4e09\uff1a\u5faa\u73af\u65f6\u8981\u6b63\u8d1f\u6570\u3002\n\n\n```cpp\n\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\nint i,j,k,f[12001],a[1001],n,sum,t,now; \n//now\u8868\u793a\u4e0d\u7ffb\u8f6c\u7684\u5dee\u503c\uff0ca[i]\u8bb0\u5f55\u7b2ci\u5757\u9aa8\u724c\u4e0a\u4e0b\u70b9\u6570\u4e4b\u5dee\uff0cf[i]\u8868\u793a\u8fbe\u5230\u5dee\u503c\u4e3ai-t\u7684\u72b6\u6001\u6240\u9700\u7684\u6700\u5c0f\u6b65\u6570\nint main()\n{\n    scanf(\"%d\",&n);\n    for (i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&j,&k);\n        a[i]=j-k;\n        if (a[i]<0) t-=a[i];\n          else sum+=a[i];\n        now+=a[i];\n    }\n    f[now+t]=1; //\u8fd9\u91cc\u5148\u5c06\u6700\u5c0f\u6b65\u6570\u7edf\u4e00\u8d4b\u4e0a\u4e00\uff0c\u65b9\u4fbf\u5224\u65ad\u8fd9\u4e2a\u72b6\u6001\u662f\u5426\u8fbe\u5230\u8fc7\n    for (i=0;i<n;i++)\n      if (a[i]>0) //\u5206\u60c5\u51b5\u8ba8\u8bba\uff0c\u6b63\u8d1f\u503c\u7684\u679a\u4e3e\u72b6\u6001\u65b9\u5411\u76f8\u53cd\uff0c\u91cd\u8981\uff01\n      {\n        for (j=2*a[i];j<=sum+t;j++)\n          if (f[j]>0&&(f[j-2*a[i]]==0||f[j-2*a[i]]>f[j]+1))\n            f[j-2*a[i]]=f[j]+1;\n//\u5982\u679c\u4e0a\u4e2a\u72b6\u6001\u53ef\u4ee5\u8fbe\u5230\uff0c\u5e76\u4e14\u6ee1\u8db3\u9012\u63a8\u5173\u7cfb\uff08\u4ee5\u524d\u4e0d\u80fd\u8fbe\u5230\u672c\u72b6\u6001\uff0c\u6216\u4ee5\u524d\u8fbe\u5230\u672c\u72b6\u6001\u7684\u7684\u6700\u5c0f\u6b65\u6570\u5c0f\u96e8\u4e0a\u4e2a\u72b6\u6001\u6700\u5c0f\u6b65\u6570+1\uff09\uff0c\u5219\u66f4\u65b0f[f-2*a[i]]\u3002\u6ce8\u610f\u7ffb\u8f6c\u4e00\u6b21\u662f\u6539\u53d82*a[i]\u7684\u5dee\u503c\u3002\n      }\n      else if (a[i]<0)\n      {\n        for (j=sum+t+2*a[i];j>=0;j--) \n          if (f[j]>0&&(f[j-2*a[i]]==0||f[j-2*a[i]]>f[j]+1))\n            f[j-2*a[i]]=f[j]+1;\n      }\n    i=t; j=t;\nwhile (f[i]==0&&f[j]==0) \n//\u4ece\u5dee\u503c\u4e3a0\u5f00\u59cb\u627e\uff0c\u540c\u65f6\u5411\u8d1f\u6570\u548c\u6b63\u6570\u6269\u5c55\uff0c\u76f4\u5230\u8fbe\u5230\u4e00\u4e2a\u53ef\u4ee5\u8fbe\u5230\u7684\u72b6\u6001\uff0c\u8fd9\u4e2a\u72b6\u6001\u5373\u6700\u4f18\u72b6\u6001\uff08\u6700\u5c0f\u5dee\u503c\uff09\n    {\n          i++; j--;\n    }\n    if (f[i]==0) printf(\"%d\",f[j]-1);  //\u56e0\u4e3a\u4e4b\u524d\u7edf\u4e00\u52a0\u4e0a\u4e86\u4e00\uff0c\u6240\u4ee5\u8981\u51cf\u4e00\u8f93\u51fa\n      else if (f[j]==0||f[i]<=f[j]) printf(\"%d\",f[i]-1);\n}\n\n\n```",
        "postTime": 1454133170,
        "uid": 2578,
        "name": "varvar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "\u52a8\u6001\u89c4\u5212\n\na[i]\u8868\u793a\u7b2ci\u679a\u9aa8\u724c\u4e0a\u9762\u7684\u503c\uff0cb[i]\u8868\u793a\u7b2ci\u679a\u9aa8\u724c\u4e0b\u9762\u7684\u503c,f[i]\u8868\u793a\u4ee4\u6240\u6709\u9aa8\u724c\u5dee\u503c\uff08\u4e0a\u51cf\u4e0b\uff09\u4e3ai\u7684\u6700\u5c0f\u7ffb\u8f6c\u6b21\u6570\u3002\n\n\n\u521d\u59cb\u65f6\uff0c\u7edf\u8ba1suma\u548csumb\uff0c\u4ee4f[suma-sumb]=0,\u5176\u4ed6f\u5168\u90e8\u90fd\u4e3a\u4e00\u4e2a\u6781\u5927\u503c\u8868\u793a\u65e0\u6cd5\u505a\u5230\uff0c\u7edf\u8ba1\u51fa\u4e00\u4e2asum=sum(max(a[i],b[i])) (i\u2208[1..n]),\u8fd9\u4e2asum\u5c31\u662f\u6211\u4eec\u53ef\u80fd\u679a\u4e3e\u5230\u7684\u6700\u5927\u5dee\u503c\u3002\n\n\n\u7c7b\u4f3c\u4e8e\u80cc\u5305\uff0c\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u9aa8\u724ci\uff0c\u8c03\u6362\u8fd9\u4e2a\u9aa8\u724c\u5c31\u80fd\u4f7f\u603b\u5dee\u503c\u51cf\u5c112\\*(a[i]-b[i])\uff0c\u679a\u4e3e\u7a7a\u95f4j\u2208[-sum..sum]\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3af[j]=min(f[j],f[j+2\\*(a[i]-b[i])]+1)\n\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u9aa8\u724c\u53ea\u80fd\u7ffb\u8f6c\u4e00\u6b21\uff0c\u6240\u4ee5\u8fd9\u662f\u4e2a01\u80cc\u5305\uff0c\u6211\u4eec\u5728\u679a\u4e3e\u72b6\u6001\u65f6\u8981\u9632\u6b62\u5728\u679a\u4e3e\u540c\u4e00\u4e2ai\u65f6\u7684\u72b6\u6001\u4ea7\u751f\u591a\u6b21\u5f71\u54cd\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u77e5\u9053a[i]-b[i]\u7684\u6b63\u8d1f\u6027\uff0c\u6240\u4ee5\u5c31\u8981\u5206\u4e24\u79cd\u60c5\u51b5\n\n\n1.a[i]-b[i]>0,\u5373j+2\\*(a[i]-b[i])<j,\u90a3\u4e48j\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\n\n2.a[i]-b[i]<0,\u5373j+2\\*(a[i]-b[i])>j,\u90a3\u4e48j\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\n\n\u8fd9\u6837\u5c31\u907f\u514d\u540c\u4e00\u9aa8\u724ci\u679a\u4e3ej\u72b6\u6001\u4e0b\u7684f[j]\u76f8\u4e92\u4ea7\u751f\u5f71\u54cd\n\n\n\u6700\u540e\u7b54\u6848\u5373\u4e3ai\u7684\u503c\u548c0\u6700\u63a5\u8fd1\u4e14f[i]\u6216f[-i]\u53ef\u4ee5\u53d6\u5f97\u7684\u6700\u5c0f\u503cmin(f[i],f[-i])\n\n\nPASCAL\u4ee3\u7801\n\n\n```delphi\n\n    var f:array[-10000..10000] of longint;  \n        n,i,j,sum,suma,sumb:longint;  \n        a,b:array[1..1000] of longint;  \n      \n    function min(a,b:longint):longint;  \n      \n    begin  \n      \n            if a<b then exit(a)  \n      \n                   else exit(b);  \n      \n    end;  \n      \n    begin  \n      \n            readln(n);  \n      \n            for i:=1 to n do readln(a[i],b[i]);  \n      \n            for i:=1 to n do suma:=suma+a[i];  \n      \n            for i:=1 to n do sumb:=sumb+b[i];  \n      \n            for i:=1 to n do sum:=sum+a[i]+b[i]-min(a[i],b[i]);  \n      \n            fillchar(f,sizeof(f),127);  \n      \n            f[suma-sumb]:=0;  \n      \n            for i:=1 to n do begin  \n      \n                if a[i]>b[i] then  \n      \n                for j:=-sum to sum do  \n      \n                f[j]:=min(f[j],f[j+2*(a[i]-b[i])]+1);  \n      \n                if a[i]<b[i] then  \n      \n                for j:=sum downto -sum do  \n      \n                f[j]:=min(f[j],f[j+2*(a[i]-b[i])]+1);  \n      \n                end;  \n      \n            for i:=0 to sum do begin  \n      \n                if f[i]<>f[-10000] then break;  \n      \n                if f[-i]<>f[-10000] then break;  \n      \n                end;  \n      \n            writeln(min(f[i],f[-i]));  \n      \n    end.  \n\n```",
        "postTime": 1446776908,
        "uid": 10356,
        "name": "\u5929\u72d7\u7684\u624b\u5e16",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    },
    {
        "content": "```cpp\n/**\nP1282\n*/\n\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cstdlib>\n\n#include <cmath>\n#include <cctype>\n#include <string>\n#include <cstring>\n\n#include <algorithm>\n#include <queue>\n#include <stack>\n\nusing namespace std;\n#define INF 0x3f3f3f3f\nint card[1010][2];\nint preSum[1010];//\u524d\u5e8f\u548c\u964d\u4e3a\u4e8c\u7ef4\nint N;\nint dp[1010][6010];\nint ans = INF;\nint main()\n{\n    std::ios::sync_with_stdio ( false );\n    cin >> N;\n    memset ( dp, 0x3f, sizeof ( dp ) );\n    for ( int i = 1; i <= N; i++ )\n    {\n        cin >> card[i][0] >> card[i][1];\n        preSum[i] = preSum[i - 1] + card[i][0] + card[i][1];\n    }\n    dp[1][card[1][0]] = 0;\n    dp[1][card[1][1]] = 1;\n    /**\n    \u8f6c\u79fb\u65b9\u7a0b\u5b9a\u4e49\n    f[i][j]=\u524di\u5f20\u724c\u4f7f\u5f97\u4e0a\u4e00\u884c\u70b9\u6570\u4e4b\u548c\u4e3aj\u7684\u6700\u5c0f\u65b9\u6cd5\u6570\n    \u8f6c\u79fb\u65b9\u7a0b:\n    f[i][j]=min{f[i-1][j-card[i][0]],//\u53cd\u8f6c\n                f[i-1][j-card[i][1]]+1}//\u4e0d\u53cd\u8f6c\n    \u53d6\u503c:\n    i<=j<=preSum[i]-i\n    */\n    for ( int i = 2; i <= N; i++ )\n        for ( int j = i; j <= preSum[i] - i; j++ )\n        {\n            if ( j > card[i][0] )\n                dp[i][j] = min ( dp[i][j], dp[i - 1][j - card[i][0]] );\n            if ( j > card[i][1] )\n                dp[i][j] = min ( dp[i][j], dp[i - 1][j - card[i][1]] + 1 );\n        }\n    int curDiff = INF;\n    for ( int j = N; j <= preSum[N] - N; j++ )\n        if ( dp[N][j] != INF && abs ( preSum[N] - 2 * j ) < curDiff )\n        {\n            curDiff = abs ( preSum[N] - 2 * j );\n            ans = dp[N][j];\n        }\n        else if ( dp[N][j] != INF && abs ( preSum[N] - 2 * j ) == curDiff && ans > dp[N][j] )\n            ans = dp[N][j];\n    cout << ans << endl;\n    return 0;\n}\n```",
        "postTime": 1489743297,
        "uid": 20565,
        "name": "wzj423",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1282 \u3010\u591a\u7c73\u8bfa\u9aa8\u724c\u3011"
    }
]