[
    {
        "content": "\u5176\u5b9e\u5199\u5b8c\u540e\u770b\u4e86\u4e00\u4e0b\u522b\u7684\u5927\u4f6c\u7684\u65b9\u6cd5\uff0c\n\n\u597d\u50cf\u8fd8\u6709\u70b9\u9ebb\u70e6\u554a\uff0c\u662f\u6211\u60f3\u5f97\u7b80\u5355\u4e86\u5417\uff1f\uff1f\uff1f\n\n\u6211\u662f\u4e0d\u4f1a\u544a\u8bc9\u4f60\u4eec\u6211WA5\u6b21\u7684\n\n\u5728\u6b21\u63d0\u9192\u4e00\u4e0b\uff0c\u9996\u5148\uff0c\u4f60\u5f97\u770b\u6e05\u695a\u662f\u516b\u4e2a\u70b9\uff08\u5c31\u6211\u6ca1\u770b\u5230\u6253\u6210\u56db\u4e2a\u70b9\u4e86\u5417\uff1f\uff1f\uff1f\uff09\uff0c\u7136\u540e\uff0c\u6ce8\u610f\u67090\uff0c\u522b\u50cf\u621190\u8c03\u534a\u5929\uff08\u5982\u679c\u4f60\u7b2c\u4e8c\u4e2a\u70b9WA\uff0c\u90a3\u4e48\u8bf7\u4ece0\u4e0a\u627e\uff09\n\n\u8fd8\u6709\u6700\u91cd\u8981\u7684\u4e00\u70b9\uff0c\u6ce8\u610f\uff0c\u5982\u679c\u4e00\u4e2a\u6a21\u5757\u9644\u8fd1\u6709\u6bd4\u5b83\u5927\u7684\uff0c\u6709\u6bd4\u5b83\u5c0f\u7684\uff0c\u90a3\u4e48\u5b83\u4e0d\u662f\u5c71\u8c37\uff0c\u4e5f\u4e0d\u662f\u5c71\u5cf0\uff01\uff01\uff01\n\n\u4e3b\u8981\u5c31\u662f\u5224\u65ad\u8fd9\u4e2a\uff0c\u6240\u4ee5\u600e\u4e48\u529e\u5462\uff1f\uff1f\n\n\u5176\u5b9e\u5f88\u597d\u60f3\uff0c\u53ea\u8981\u4e00\u4e2a\u6a21\u5757\u4e2d\u6240\u6709\u7684\u70b9\u5176\u5468\u56f4\u7684\u70b9\u90fd\u7b26\u5408\u6bd4\u8fd9\u4e2a\u6a21\u5757\u5927\u6216\u8005\u6bd4\u8fd9\u4e2a\u6a21\u5757\u5c0f\u5c31\u53ef\u4ee5\u4e86\uff0c\u5224\u5b9a\u6211\u4eec\u53ef\u4ee5\u653e\u5230bfs\u91cc\u9762\n\n\u597d\u5566\u653e\u4ee3\u7801\u5566\uff0c\u4e0d\u8981\u590d\u5236\u54e6\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nstruct Node {\n    int x,y;\n    Node(int i=0,int j=0){\n        x=i;y=j;    \n}\n};\nqueue <Node> q;\nint dx[10]={0,0,1,1,1,-1,-1,-1},dy[10]={1,-1,0,-1,1,0,-1,1},sf,sg,p,n;\nint a[1007][1007],ans;\nbool v[1007][1007],flag;\nvoid bfs(int sx,int sy){\n    int col=a[sx][sy];//\u8bb0\u5f55\u4e00\u4e0b\u677f\u5757\u7684\u989c\u8272\n    q.push(Node(sx,sy));\n    for(int j=0;j<8;j++){//\u8d77\u70b9\u4e5f\u8981\u5224\u5b9a\n        int xx=sx+dx[j];//\u5224\u5b9a\u5468\u56f4\u516b\u4e2a\u70b9\uff0c\u8fd9\u4e3b\u8981\u662f\u6765\u5224\u65ad\u65e2\u4e0d\u662f\u5c71\u5cf0\u4e5f\u4e0d\u662f\u5c71\u8c37\u7684\u60c5\u51b5\n        int yy=sy+dy[j];\n        if(xx>=1&&xx<=n&&yy>=1&&yy<=n&&a[xx][yy]!=col){//\u5982\u679c\u989c\u8272\u4e0d\u540c\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u8fd9\u4e2a\u677f\u5757\u201c\u5468\u56f4\u7684\u70b9\u201d\n                if(p==-1) p=a[xx][yy];//\u5982\u679c\u8fd8\u6ca1\u6709\u627e\u5230\u4e00\u4e2a\u8fd9\u6837\u7684\u70b9\u7684\u8bdd\uff08-1\u662f\u521d\u59cb\u5316\uff09\uff0c\u90a3\u4e48\u76f4\u63a5\u8d4b\u503c\n                else if((p-col>0&&a[xx][yy]-col<0)||(p-col<0&&a[xx][yy]-col>0)) {//\u5982\u679c\u8fd9\u4e2a\u677f\u5757\u5468\u56f4\u51fa\u73b0\u65e2\u6709\u6bd4\u5b83\u5927\uff0c\u53c8\u6709\u6bd4\u5b83\u5c0f\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5b83\u5c31\u4e0d\u662f\u5c71\u5cf0\u6216\u5c71\u8c37\uff0c\u76f4\u63a5\u8d4btrue\n                flag=true;\n                break;\n            }\n    }\n}\n    while(!q.empty()){\n        Node cur=q.front();\n        for(int i=0;i<8;i++){\n            int nx=cur.x+dx[i];\n            int ny=cur.y+dy[i];\n            if(nx>=1&&nx<=n&&ny>=1&&ny<=n&&!v[nx][ny]&&a[nx][ny]==col){\n                v[nx][ny]=true;\n                q.push(Node(nx,ny));\n                if(!flag)//\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u53d1\u73b0\u5b83\u65e2\u4e0d\u662f\u5c71\u5cf0\u53c8\u4e0d\u662f\u5c71\u8c37\u7684\u8bdd\uff0c\u90a3\u4e48\u76f4\u63a5\u6dd8\u6c70\uff0c\u4e00\u5fc3\u704c\u6c34\u5c31\u884c\u4e86\uff0c\u4e0d\u8981\u50bb\u4e4e\u4e4e\u5730\u7ee7\u7eed\u5224\u5b9a\u4e86\n                    for(int j=0;j<8;j++){//\u5224\u5b9a\u548c\u4e0a\u9762\u76f8\u540c\n                        int xx=nx+dx[j];\n                        int yy=ny+dy[j];\n                        if(xx>=1&&xx<=n&&yy>=1&&yy<=n&&a[xx][yy]!=col){\n                            if(p==-1) p=a[xx][yy];\n                            else if((p-col>0&&a[xx][yy]-col<0)||(p-col<0&&a[xx][yy]-col>0)) {\n                                flag=true;\n                                break;\n                            }\n                        }\n                    }\n            }           \n        }\n        q.pop();    \n    }\n    if(flag) return;//\u4e0d\u662f\u5c71\u5cf0\u4e5f\u4e0d\u662f\u5c71\u8c37\u7684\u60c5\u51b5\n    if(p<col) sf++;//\u5982\u679c\u5468\u8fb9\u7684\u70b9\u6bd4\u5b83\u5c0f\uff0c\u5c71\u5cf0\uff0c\u53cd\u4e4b\uff0c\u5c71\u8c37\n    else sg++;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            scanf(\"%d\",&a[i][j]);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            if(!v[i][j]){\n                v[i][j]=true;\n                p=-1;flag=false;//\u521d\u59cbp\u4e3a-1\uff0c\u4ee3\u8868\u8fd8\u6ca1\u627e\u5230\u4e00\u4e2a\u5468\u56f4\u7684\u70b9\uff0cp\u5c31\u662f\u8bb0\u5f55\u5468\u56f4\u7684\u70b9\u7684\uff0c\u53ea\u8981\u53bb\u8bb0\u5f55\u7b2c\u4e00\u4e2a\u70b9\uff0c\u5c31\u80fd\u786e\u5b9a\u5b83\u662f\u5c71\u5cf0\u8fd8\u662f\u5c71\u8c37\uff0c\u6216\u8005\u5565\u4e5f\u4e0d\u662f\n                bfs(i,j);\n                ans++;\n            }   \n    if(ans==1) printf(\"1 1\");//\u6ce8\u610f\u7279\u5224\uff0c\u9898\u76ee\u6709\u8bf4\n    else printf(\"%d %d\",sf,sg);\n    return 0; \n}\n```",
        "postTime": 1536855587,
        "uid": 50412,
        "name": "\u674e\u5c27",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3456 \u3010[POI2007]GRZ-Ridges and Valleys\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u5199\u6df1\u641c \u4ece\u4e00\u4e2a\u6ca1\u641c\u8fc7\u7684\u70b9\u5f00\u59cb\u6df1\u641c\u5468\u56f4\u4e0e\u5b83\u76f8\u90bb\u7684\u540c\u9ad8\u5ea6\u7684\u70b9\n\n\u5e76\u6807\u8bb0\u641c\u8fc7 \u540c\u65f6\u8bb0\u5f55\u8fd9\u4e2a\u533a\u57df\u662f\u8c37\u8fd8\u662f\u5cf0 \u6240\u6709\u9ad8\u5ea6\u76f8\u7b49\u60c5\u51b5\u7279\u5224\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nint n,hei[1010][1010],w;bool g[1010][1010];//w==1\u8c37w==2\u5cf0 \nint mx[9]={0,-1,-1,-1,0,0,1,1,1},a=0,b=0;//a\u4e3a\u5c71\u8c37\u6570 b\u4e3a\u5c71\u5cf0\u6570\nint my[9]={0,-1,0,1,-1,1,-1,0,1};\nvoid search(int posx,int posy)\n{\n    for(int i=1;i<=8;i++)\n    {\n//\u641c\u7d22\u4e0e\u5f53\u524d\u70b9\u76f8\u90bb\u76843~8\u4e2a\u70b9\n        int xx=posx+mx[i],yy=posy+my[i];\n        if(!(xx>=1&&xx<=n&&yy>=1&&yy<=n))\n            continue;\n        if(hei[xx][yy]==hei[posx][posy]&&g[xx][yy]==0)\n            g[xx][yy]=1,search(xx,yy);\n        else if(hei[xx][yy]<hei[posx][posy]&&w==1)\n            w=-1;\n        else if(hei[xx][yy]>hei[posx][posy]&&w==2)\n            w=-1;\n//\u5982\u679c\u8fd9\u4e2a\u533a\u57df\u5468\u56f4\u65e2\u6709\u6bd4\u5b83\u9ad8\u7684\u53c8\u6709\u6bd4\u5b83\u4f4e\u7684 \u5219\u5b83\u4ec0\u4e48\u4e5f\u4e0d\u662f\n//\u4e3a\u4e86\u533a\u5206\u4ec0\u4e48\u90fd\u4e0d\u662f\u7684\u533a\u57df\u4e0e\u6ca1\u786e\u5b9a\u662f\u662f\u5cf0\u8fd8\u662f\u8c37\n// \u524d\u8005\u4e3a-1 \u540e\u8005\u4e3a0\n        else if(w==0)\n        {\n            if(hei[xx][yy]<hei[posx][posy])\n                w=2;\n            if(hei[xx][yy]>hei[posx][posy])\n                w=1;\n        }\n    }\n//\u641c\u5230\u4e0e\u5f53\u524d\u641c\u7d22\u9ad8\u5ea6\u4e0d\u540c\u7684\u70b9 \u6682\u4e14\u6807\u8bb0\u5f53\u524d\u641c\u7d22\u533a\u57df\u662f\u5cf0\u8fd8\u662f\u8c37\n}\nint main()\n{\n    scanf(\"%d\",&n);    \n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            scanf(\"%d\",&hei[i][j]);\n    int x=hei[1][1];    w=1;\n    for(int i=2;i<=n;i++)\n        if(hei[1][i]!=x)\n            w=0;\n    if(w==1)\n        for(int i=2;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                if(hei[i][j]!=x)\n                    w=0;\n    if(w==1)\n    {\n        cout<<\"1 1\";\n        return 0;\n//\u7279\u5224 \u82e5\u6240\u6709\u9ad8\u5ea6\u76f8\u540c \u5219\u5c71\u5cf0\u6570=1 \u5c71\u8c37\u6570=1\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            if(g[i][j]==0)\n            {\n//\u627e\u5230\u4e00\u4e2a\u6ca1\u641c\u8fc7\u7684\u70b9\u5f00\u59cb\u641c\u7d22\n                w=0;\n                g[i][j]=1;\n                search(i,j);\n                if(w==1)\n                    a++;\n                else if(w==2)\n                    b++;\n            }    \n        }    \n    }    \n    printf(\"%d %d\",b,a);\n//\u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n\n```",
        "postTime": 1501049743,
        "uid": 34268,
        "name": "\u91c7\u8587",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3456 \u3010[POI2007]GRZ-Ridges and Valleys\u3011"
    },
    {
        "content": "###  \u65b0\u8bc4\u6d4b\u673a\u540edfs\u4f1a\u7206\u6808\uff01\uff01\uff01 #2 #9 \u70b9\u90fd\u8fc7\u4e0d\u4e86\uff01\u8c03\u4e86\u4e00\u4e0b\u5348\u8fc7\u4e0d\u4e86\u4e00\u76f4RE\uff0c\u53ea\u597d\u8f6cbfs\u4e86\uff0c\u53d1\u73b0\u6ca1\u6709bfs\u7684\u9898\u89e3\u6c34\u4e00\u53d1\uff0c\u6ce8\u91ca\u5728\u4ee3\u7801\u91cc\n\n### \u9898\u610f\u91cc\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u5751\uff0c\u5c31\u662f\u5f53\u524d\u5761\u76f8\u90bb\u5757\u5373\u6709\u9ad8\u7684\u4e5f\u6709\u4f4e\u7684\uff0c\u90a3\u5b83\u662f\u4e00\u4e2a\u5c71\u5761\uff0c\u4e0d\u8ba1\u5165\u7b54\u6848\n\n### bfs\u6c42\u4e00\u4e0b\u8054\u901a\u5757\u5224\u65ad\u7b54\u6848\u662f\u5426\u8d21\u732e\u52a0\u4e00\u4e0b\u5c31\u597d\u4e86\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <queue>\n//\u53ef\u7231\u7684\u5934\u6587\u4ef6\n#define DEBUG(x) std::cerr << #x << \"=\" << x << std::endl\n//DEBUG\u4e13\u7528\nconst int MAXN = 1000 + 10;\n\nint dx[8] = {-1, -1, -1, 0, 0, 1, 1, 1};\nint dy[8] = {-1, 0, 1, -1, 1, -1, 0, 1};\n//8\u8054\u901a\nstruct Node {\n    int x, y;\n};\n//\u7ed3\u6784\u4f53\u5b58\u70b9\nint n, ridge, valley;\nint map[MAXN][MAXN], vis[MAXN][MAXN];\nbool sg, sf;\nstd::queue<Node> q;\n//\u5168\u5c40\u53d8\u91cf\nvoid bfs(int x, int y) {\n    Node start;\t//\u521d\u59cb\u503c\n    start.x = x, start.y = y;\n    vis[x][y] = 1;\n    q.push(start);\n    while (!q.empty()) {\n        Node temp = q.front(); q.pop();\t//\u961f\u9996\n        for (int i = 0; i <= 7; i++) {//\u516b\u65b9\u5411\n            int nx = temp.x + dx[i];\n            int ny = temp.y + dy[i];\n            if (nx < 1 || nx > n || ny < 1 || ny > n) continue;\t//\u8d8a\u754c\n            if (map[nx][ny] == map[temp.x][temp.y] && !vis[nx][ny]) {\t// \u9ad8\u5ea6\u76f8\u7b49\u6253\u4e0a\u6807\u8bb0\u63a5\u7740\u641c\n                vis[nx][ny] = 1;\n                q.push((Node){nx, ny});\n            }\n            else {\t// \u5c71\u5cf0\u5c71\u8c37\u662f\u5426\u6210\u7acb\n                if (map[nx][ny] > map[temp.x][temp.y]) sf = 0;\n                if (map[nx][ny] < map[temp.x][temp.y]) sg = 0;\n            }\n        }\n    }\n}\n\nint main() {\n    scanf(\"%d\", &n);\n    bool flag = 0;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++) {\n            scanf(\"%d\", &map[i][j]);\n            if (map[i][j] != map[1][1]) flag = 1;\n        }\n    if (!flag) {\t// \u5224\u65ad\u662f\u5426\u5168\u90e8\u9ad8\u5ea6\u76f8\u7b49\n        printf(\"1 1\");\n        return 0;\n    }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++) {\n            if (!vis[i][j]) { //\u5982\u679c\u662f\u65b0\u7684\u8054\u901a\u5757\n                sf = 1, sg = 1;\n                bfs(i, j);\n                ridge += sf;\n                valley += sg;\n            }\n        }\n    printf(\"%d %d\\n\", ridge, valley);\n    return 0;\n}\n\n```",
        "postTime": 1535032914,
        "uid": 56887,
        "name": "lhhh",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P3456 \u3010[POI2007]GRZ-Ridges and Valleys\u3011"
    },
    {
        "content": "```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[1001][1001],b[1001][1001],c[9]= {0,0,0,1,1,1,-1,-1,-1},v[9]= {0,1,-1,0,1,-1,0,1,-1},sg,sf,n,i,j;\nint search(int x,int y) {\n    if(x>=1&&x<=n&&y>=1&&y<=n&&b[x][y]!=a[i][j]) { //\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u641c\u8fc7\u6216\u8d85\u51fa\u8fb9\u754c\n        b[x][y]=a[i][j]; //\u6807\u8bb0\u5df2\u7ecf\u641c\u8fc7\n        for(int k=1; k<=8; ++k) if(x+c[k]>=1&&x+c[k]<=n&&y+v[k]>=1&&y+v[k]<=n) { //\u5411\u5468\u56f4\u516b\u4e2a\u65b9\u5411\u641c\u7d22\n                if(a[x+c[k]][y+v[k]]==a[i][j]) {\n                    search(x+c[k],y+v[k]); //\u9ad8\u5ea6\u76f8\u540c\u5219\u89c6\u4e3a\u540c\u4e00\u5757\uff0c\u5f80\u4e0b\u641c\n                } else {\n                    if(a[x+c[k]][y+v[k]]>a[i][j]) sg=1; //\u5982\u679c\u5468\u56f4\u7684\u67d0\u4e00\u4e2a\u5757\u6bd4\u5b83\u9ad8\u5219\u5b83\u53ef\u80fd\u662f\u5c71\u8c37\n                    if(a[x+c[k]][y+v[k]]<a[i][j]) sf=1; //\u5982\u679c\u5468\u56f4\u7684\u67d0\u4e00\u4e2a\u5757\u6bd4\u5b83\u4f4e\u5219\u5b83\u53ef\u80fd\u662f\u5c71\u5cf0\n                }\n            }\n    }\n    return 1;\n}\nint main() {\n    int sfs=0,sgs=0;\n    bool ttt=1;\n    scanf(\"%d\",&n);\n    memset(b,-1,sizeof(b));\n    for(int i=1; i<=n; ++i) for(int j=1; j<=n; ++j) {\n            scanf(\"%d\",&a[i][j]);\n            if(a[i][j]!=a[1][1]) ttt=0;\n        }\n    for(int i=1; i<=n; ++i) for(int j=1; j<=n; ++j)\n            if(ttt) { //\u7279\u5224\uff0c\u6240\u6709\u9ad8\u5ea6\u76f8\u540c\u5219\u5c71\u8c37\u6570=1\uff0c\u5c71\u5cf0\u6570=1\n                printf(\"1 1\");\n                return 0;\n            }\n    for(i=1; i<=n; ++i) for(j=1; j<=n; ++j) {\n            search(i,j);\n            if(sg==1&&sf==0) ++sgs; //\u662f\u5c71\u8c37\u800c\u4e0d\u662f\u5c71\u5cf0\uff0c\u5c71\u8c37\u6570++\n            if(sg==0&&sf==1) ++sfs; //\u662f\u5c71\u5cf0\u800c\u4e0d\u662f\u5c71\u8c37\uff0c\u5c71\u5cf0\u6570++\n            sg=sf=0; //\u8fd8\u539f \n        }\n    printf(\"%d %d\",sfs,sgs);\n    return 0;\n}\n//\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u7ba1\u7406\u5458\u5927\u5927\u6c42\u8fc7\n```",
        "postTime": 1508844699,
        "uid": 47623,
        "name": "ZhouSong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3456 \u3010[POI2007]GRZ-Ridges and Valleys\u3011"
    },
    {
        "content": "\u5199\u7684\u65f6\u5019\uff0c\u603b\u611f\u89c9\u662f\u7ba1\u7406\u5458\u8bbe\u9519\u4e86\u3002\n\n\u8fd9\u662f\u4e00\u9053\u975e\u5e38\u975e\u5e38\u666e\u901a\u7684bfs\u3002\n\n\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6765\u4ed4\u7ec6\u7684\u5206\u6790\u4e00\u4e0b\u3002\n\n-----\n## First\n\n\u5148\u770b\u9898\u5e72\uff0c\u9898\u76ee\u4e2d\u7684\u610f\u601d\u662f\u8f93\u5165\u4e00\u5f20 n * n \u7684\u5730\u56fe\uff0c\u8ba9\u6211\u4eec\u8f93\u51fa\u5730\u56fe\u4e2d\u7684\u5c71\u5cf0\u548c\u5c71\u8c37\u3002\n\n\u9898\u4e2d\u7684\u5c71\u5cf0\u548c\u5c71\u8c37\u5185\u7684\u4efb\u610f\u4e00\u5757\u4e00\u5b9a\u662f\u76f8\u5e73\u7684\u3002\n\u90a3\u4e48\uff0c\u8fd9\u9898\u7684\u76ee\u7684\u4e5f\u5c31\u6e05\u695a\u4e86\u3002\u8fd9\u662f\u4e00\u9053\u641c\u5730\u56fe\u4e2d\u7684\u8fde\u901a\u5757\u7684\u6a21\u677f\u9898\u3002\n\n\u4e0d\u8fc7\u8981\u6ce8\u610f\uff1a\n\t\n    1.\u6bcf\u4e2a\u8fde\u901a\u5757\u4e0d\u4e00\u5b9a\u662f\u5c71\u5cf0\u6216\u5c71\u8c37\uff0c\u4e5f\u53ef\u80fd\u4ec0\u4e48\u4e5f\u4e0d\u662f\u3002\u6211\u4eec\u8981\u53ca\u65f6\u5224\u65ad\u3002\n    \n    2.\u6bcf\u4e00\u6b21\u6269\u5c55\u9700\u8981\u63a2\u7d22\u7684\u70b9\u65f6\uff0c\u8981\u6ce8\u610f\u4e3a8\u4e2a\u65b9\u5411\uff0c\u4ee3\u7801\u5b9e\u73b0\u65f6\u8981\u5c0f\u5fc3\uff0c\u4e0d\u80fd\u601d\u7ef4\u5b9a\u5f0f\u3002\n--------------\n\u5bf9\u4e8e 1. \u6211\u4eec\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u5728\u641c\u8fde\u901a\u5757\u65f6\uff0c\u5982\u679c\u8981\u6269\u5c55\u7684\u5730\u65b9\u4f4e\u4e8e \u6216 \u9ad8\u4e8e\u5f53\u524d\u7684\u4f4d\u7f6e\u65f6\uff0c\u5206\u522b\u7528\u53d8\u91cf\u8bb0\u5f55\uff0c\u4f46\u5e76\u4e0d\u653e\u5165\u641c\u7d22\u961f\u5217\u4e2d\u3002\n\n\u5bf9\u4e8e 2. \u6211\u4eec\u7684\u89e3\u51b3\u529e\u6cd5\u5c31\u8f7b\u677e\u591a\u4e86\uff0c\u53ea\u8981\u5728\u5b9a\u4e49\u65b9\u5411\u6570\u7ec4\u65f6\u6a2a\u7eb5\u5750\u6807\u90fd\u4e3a8\u5c31\u884c\u4e86\n\n------------\n### \u597d\u4e86\uff0c\n\u6211\u4eec\u5df2\u7ecf\u5c06\u9898\u5e72\u4e2d\u7684\u4fe1\u606f\u90fd\u63d0\u53d6\u51fa\u6765\u4e86\uff0c\u7b97\u6cd5\u4e5f\u6e05\u6670\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u4ee3\u7801\u7684\u5b9e\u73b0\u95ee\u9898\u4e86\u3002\n\n\u5728\u4ee3\u7801\u4e2d\u7684\u6ce8\u610f\u70b9\u4e5f\u4f1a\u6807\u51fa\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nint a[10001][10001];\nint dep[10001][10001];//\u8fd9\u4e2a\u6570\u7ec4\u4e3b\u8981\u8868\u660e\u5730\u56fe\u4e2d\u5df2\u7ecf\u8d70\u8fc7\u7684\u4f4d\u7f6e \u5bf9\u4ee3\u7801\u7684\u4f18\u5316\u6709\u5f88\u5927\u5e2e\u52a9 \u4f46\u662f\u8981\u6ce8\u610f \u5728\u6bd4\u8d5b\u4e2d\u524d\u5f80\u4e0d\u8981\u5b9a\u4e49\u8fd9\u4e48\u5927\uff0c\u4f1a\u7206\u7684\uff08~~\u6211\u5df2\u7ecf\u6709\u6df1\u523b\u7684\u4f53\u4f1a\u4e86~~\uff09\nstruct xi{\n\tint x , y;\n}c[1000001];//\u8fd9\u91cc\u7684\u961f\u5217\u4f7f\u7528\u4e00\u4e2astruct\u6765\u8868\u793a\u5f53\u524d\u8981\u641c\u7684\u4f4d\u7f6e\u7684\u6a2a\u7eb5\u5750\u6807\nint h = 1 , t = 1;\n/*\u8fd9\u91cc\u7684\u961f\u5217\u662f\u6211\u624b\u6253\u7684\u4e60\u60ef\u4e86STL\u7684\u5c0f\u4f19\u4f34\u53ef\u80fd\u4f1a\u4e0d\u4e60\u60ef\uff0c\n\u4f46\u662f\u6211\u8fd8\u662f\u8981\u8bf4\u4e00\u58f0 head \u4e3a t \uff0c tail \u4e3a h \uff0c\u5343\u4e07\u4e0d\u8981\u770b\u9519*/\nint ans1 = 0 , ans2 = 0;//\u8868\u793a\u5c71\u5cf0 \u548c \u5c71\u8c37\u7684\u6570\u91cf \nint ax[8] = {-1 , -1 , -1 , 0 , 1 , 1 , 1 , 0};\nint ay[8] = {-1 , 0 , 1 , 1 , 1 , 0 , -1 , -1};//\u65b9\u5411\u6570\u7ec4\u8981\u5c0f\u5fc3\u5b9a\u4e49 \uff0c \u5f04\u6e05\u695a\u5404\u4e2a\u65b9\u5411\nvoid bfs(int x , int y){\n\tint xa = 0 , ya = 0;//\u8868\u793a\u5f53\u524d\u7684\u5e73\u5730\u7684\u5468\u56f4\u662f\u5426\u6709\u4f4e\u5730 \u6216 \u9ad8\u5730\n\th ++;//\u5f53\u4e0a\u4e00\u6b21while\u9000\u51fa\u65f6 \uff0c h == t \uff0c\u6240\u4ee5\u6b64\u65f6\u8981++\n\tc[t].x = x , c[t].y = y;//\u628a\u8d77\u59cb\u4f4d\u7f6e\u9644\u5165\u961f\u5217\u7684\u5934\n\tdo{\n//\t\tcout << c[t].x << \" \" << c[t].y << endl; \n//\t\tdep[c[t].x][c[t].y] = 1;\u68c0\u67e5\u4ee3\u7801 \u53ef\u4ee5\u5ffd\u7565 \u4f46\u662f\u5927\u5bb6\u5728\u6bd4\u8d5b\u4e2d\u7684\u8c03\u8bd5\u4ee3\u7801\u5343\u4e07\u4e0d\u8981\u7559\u4e0b\n\t\tfor(int i = 0;i < 8;i ++){//\u641c8\u4e2a\u65b9\u5411\n\t\t\tint xx = c[t].x + ax[i] , yy = c[t].y + ay[i]; \n\t\t\tif(xx <= 0 || xx > n || yy <= 0 || yy > n)continue;//\u8d8a\u754c\u8df3\u8fc7\n\t\t\tif(a[xx][yy] < a[c[t].x][c[t].y]){//\u8868\u793a\u76ee\u6807\u4f4d\u7f6e\u4f4e\u4e8e\u5f53\u524d\u4f4d\u7f6e \u5373 \u5f53\u524d\u7684\u5e73\u5730\u5468\u56f4\u6709\u4f4e\u5730 \n\t\t\t\txa = 1;\n\t\t\t}\n\t\t\telse if(a[xx][yy] > a[c[t].x][c[t].y]){//\u8868\u793a\u76ee\u6807\u4f4d\u7f6e\u9ad8\u4e8e\u5f53\u524d\u4f4d\u7f6e \u5373 \u5f53\u524d\u7684\u5e73\u5730\u5468\u56f4\u6709\u9ad8\u5730 \n\t\t\t\tya = 1;\n\t\t\t}\n\t\t\tif(dep[xx][yy])continue;//\u8fd9\u91cc\u8981\u6ce8\u610f \u5224\u65ad\u662f\u5426\u641c\u8fc7\u8981\u5728\u5224\u65ad\u76ee\u6807\u4f4d\u7f6e\u4e4b\u540e\u3002\n//\u4e0d\u61c2\u5f97\u5c0f\u4f19\u4f34\u53ef\u4ee5\u8c03\u6362\u4e00\u4e0b\uff0c\u6d4b\u8bd5\u4e00\u4e0b \u4e00\u5b9a\u4f1a\u51fa\u9519\n\t\t\tif(a[xx][yy] == a[c[t].x][c[t].y]){//\u8868\u793a\u76ee\u6807\u4f4d\u7f6e\u7b49\u4e8e\u5f53\u524d\u4f4d\u7f6e \u5373 \u76ee\u6807\u4f4d\u7f6e\u662f\u5f53\u524d\u7684\u5e73\u5730\u7684\u4e00\u90e8\u5206\u53ef\u4ee5\u5165\u961f \n\t\t\t\tc[h].x = xx;\n\t\t\t\tc[h].y = yy;\n\t\t\t\tdep[c[h].x][c[h].y] = 1;\n\t\t\t\th ++;//\u5165\u961f\u64cd\u4f5c\n\t\t\t}\n\t\t}\n//\t\tcout << \" 1 \" << endl;\n\t\tt ++;\n\t}while(h > t);\n\tif(xa == 1){\n\t\tif(ya == 0)//\u8868\u793a\u5f53\u524d\u7684\u5e73\u5730\u5468\u56f4\u90fd\u8f83\u4f4e \u5f53\u524d\u7684\u5e73\u5730\u4e3a\u4e3a\u5c71\u5cf0 \n\t\t{\n\t\t\tans1 ++;\n\t\t}\n\t}\n\telse if(ya == 1){\n//\u8868\u793a\u5f53\u524d\u7684\u5e73\u5730\u5468\u56f4\u90fd\u8f83\u9ad8 \u5f53\u524d\u7684\u5e73\u5730\u4e3a\u5c71\u8c37 \n\t\t\tans2 ++;\n\t}//\u8fd9\u5c31\u662f\u89e3\u51b3\u6ce8\u610f 1. \u7684\u65b9\u6cd5\n\treturn ;\n}\nvoid print(){\n/*\u8fd9\u91cc\u8981\u8bf4\u4e00\u58f0 \u5f53\u6574\u4e2a\u5730\u56fe\u90fd\u4e3a\u540c\u4e00\u9ad8\u5ea6\u65f6 \n\u5b83\u65e2\u662f\u4e00\u4e2a\u5c71\u5cf0 \u4e5f\u662f\u4e00\u4e2a\u5c71\u8c37 \n\u6240\u4ee5\u5728\u8f93\u51fa\u662f\u8981\u628a\u6574\u5f20\u5730\u56fe\u90fd\u904d\u5386\u4e00\u904d*/\n\tif(ans1 || ans2){\n\t\tcout << ans1 << \" \" << ans2 << endl;\n\t\treturn ;\n\t}\n\tint x = 0;\n\tfor(int i = 2;i <= n;i ++)\n\t for(int j = 2;i <= n;i ++){\n\t \tif(a[i][j] != a[i - 1][j])\n\t \tx = 1;\n\t }\n\tfor(int i = 2;i <= n;i ++)\n\tif(a[i][1] != a[i - 1][1])\n\tx = 1;\n\tif(x){\n\t\tcout << ans1 << \" \" << ans2 << endl;\n\t\treturn ;\n\t}\n\tcout << 1 << \" \" << 1 << endl;\n\treturn ;\n}\nint main(){\n//\tfreopen(\"hill.in\" , \"r\" , stdin);\n//\tfreopen(\"hill.out\" , \"w\" , sdtout);\n//\u8003\u8bd5\u7684\u65f6\u5019 freopen\u4e00\u5b9a\u4e0d\u8981\u5fd8\u8bb0\u53d6\u6d88\u6ce8\u91ca\n\tcin >> n;\n\tfor(int i = 1;i <= n;i ++)\n\t for(int j = 1;j <= n;j ++)\n\t cin >> a[i][j];\n\t/*\t\n\tfor(int i = 1;i <= n;i ++){\n\t\tfor(int j = 1;j <= n;j ++)\n\t\tcout << a[i][j] << \" \";\n\t\tcout << endl;\n\t}\n\t*///\u4e2a\u4eba\u4e60\u60ef\n    for(int i = 1;i <= n;i ++)\n\t for(int j = 1;j <= n;j ++)\n\t if(!dep[i][j]){\n//\t cout << i << \" \" << j << endl;\n\t \tdep[i][j] = 1;\n\t \tbfs(i , j);\n\t }\n\tprint(); \n\treturn 0;\n} \n```\n\u4ee5\u4e0a\u4e3a\u5b8c\u6574\u7684\u4ee3\u7801\u3002\n\uff08~~\u5982\u679c\u4f60\u8fd8\u6ca1\u770b\u61c2\uff0c\u5c31\u518d\u770b\u4e00\u904d\u5427\uff01~~\uff09\n\n------\n\n## END\n\n###### \uff08~~\u5199\u7684\u4e0d\u597d\uff0c\u5927\u4f6c\u52ff\u55b7~~\uff09",
        "postTime": 1573916575,
        "uid": 151785,
        "name": "qingfengwuhui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3456 \u3010[POI2007]GRZ-Ridges and Valleys\u3011"
    },
    {
        "content": "\u8d64\u88f8\u88f8\u6ef4bfs\u5416\uff0c\u7ffb\u4e86\u7ffb\u697c\u4e0b\u7684\u5927\u4f6c\u90fd\u52a0\u4e86\u5404\u79cd\u5404\u6837\u7684\u7279\u5224\uff0c\u4f46\u662f\u4f3c\u4e4e\u5e76\u4e0d\u7528\u8fd9\u6837\uff08\u611f\u89c9\u8fd9\u9898\u5e94\u8be5\u662f\u9ec4\uff09\n\n$\\ $\n\n##  \u6838\u5fc3\u601d\u8def\n\n\u600e\u4e48bfs\u60f3\u5fc5\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u6211\u4e5f\u4e0d\u591a\u8d58\u8ff0\uff0c\u5728\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u4e00\u4e0b\u600e\u4e48\u7b80\u5355\u5730\u5224\u65ad\u5c71\u5cf0\u548c\u5c71\u8c37\u3002\u5982\u679c\u4e00\u4e2a\u533a\u57df\u662f\u5c71\u5cf0\uff0c\u90a3\u4e48\u4ed6\u5468\u56f4\u4e00\u5708\u7684\u70b9\u7684\u9ad8\u5ea6\u90fd\u5e94\u8be5\u6bd4\u4ed6\u4f4e\uff1b\u540c\u7406\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u662f\u5c71\u8c37\uff0c\u90a3\u4e2a\u4ed6\u5468\u56f4\u4e00\u5708\u7684\u70b9\u7684\u9ad8\u5ea6\u90fd\u5e94\u8be5\u6bd4\u4ed6\u7684\u9ad8\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u90fd\u6709\u516b\u4e2a\u8054\u901a\u7684\u70b9\uff0c\u5982\u679c\u5b83\u4eec\u7684\u9ad8\u5ea6\u76f8\u7b49\uff0c\u90a3\u4e2a\u5b83\u4eec\u540c\u5c5e\u4e8e\u4e00\u4e2a\u533a\u57df\uff0c\u5165\u961f\u3002**\u5982\u679c\u5468\u56f4\u67d0\u4e00\u4e2a\u70b9\u9ad8\u5ea6\u6bd4\u4ed6\u9ad8\uff0c\u90a3\u4e48\u8fd9\u7247\u533a\u57df\u4e0d\u53ef\u80fd\u662f\u5c71\u5cf0\uff1b\u540c\u7406\uff0c\u5982\u679c\u5468\u56f4\u67d0\u4e00\u4e2a\u70b9\u9ad8\u5ea6\u6bd4\u4ed6\u4f4e\uff0c\u90a3\u4e48\u8fd9\u7247\u533a\u57df\u4e0d\u53ef\u80fd\u662f\u5c71\u8c37**\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u533a\u57df\u90fd\u58f0\u660e\u4e24\u4e2a\u5e03\u5c14\u53d8\u91cf`ifhigh`\u548c`iflow`\uff08\u5206\u522b\u8868\u793a\u662f\u5426\u6709\u66f4\u9ad8\u7684\u3001\u66f4\u77ee\u7684\uff0c\u521d\u503c\u5747\u4e3a1\uff09\uff0c**\u5982\u679c\u76ee\u6807\u70b9\u9ad8\u5ea6\u5c0f\u4e8e\u5f53\u524d\u70b9\uff0c`iflow=0`\uff1b\u5982\u679c\u76ee\u6807\u70b9\u7684\u9ad8\u5ea6\u5927\u4e8e\u5f53\u524d\u70b9\uff0c`ifhigh=1`\u3002**\u5f53\u5bf9\u67d0\u4e00\u4e2a\u533a\u57df\u641c\u7d22\u5b8c\u6210\u4e4b\u540e\uff0c\u5982\u679ciflow\u4e3a1\uff0c\u5219\u5b83\u4e3a\u5c71\u8c37\uff1b\u5982\u679cifhigh\u4e3a1\uff0c\u5219\u5b83\u4e3a\u5c71\u5cf0\n\n\u4e8e\u662f\u9644\u4e0a\u8fd9\u4e00\u90e8\u5206\u7684\u4ee3\u7801\n```cpp\nvoid bfs(int p,int q){\n\tvis[p][q]=1;\n\tqueue<int>x,y;\n\tx.push(p);y.push(q);\n\tbool ifhigh=1,iflow=1;   //\u8d77\u70b9\u521d\u59cb\u5316\n\twhile(!x.empty()){\n\t\trg int xs=x.front();\n\t\trg int ys=y.front();\n\t\tfor(rg int i=0;i<=7;++i){\n\t\t\trg int xf=xs+dx[i];\n\t\t\trg int yf=ys+dy[i];     //\u679a\u4e3e\u8054\u901a\u7684\u76ee\u6807\u70b9\n\t\t\tif(xf>0&&xf<=n&&yf>0&&yf<=n){\n\t\t\t\tif(a[xf][yf]==a[xs][ys]){\n\t\t\t\t\tif(!vis[xf][yf]){\n\t\t\t\t\t\tx.push(xf);y.push(yf);\n\t\t\t\t\t\tvis[xf][yf]=1;        //\u540c\u533a\u57df\u5165\u961f\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(a[xf][yf]<a[xs][ys])iflow=0;  //\u662f\u5426\u6709\u66f4\u4f4e\uff1f\n\t\t\t\tif(a[xf][yf]>a[xs][ys])ifhigh=0; //\u662f\u5426\u6709\u66f4\u9ad8\uff1f\n\t\t\t}\n\t\t}\n\t\tx.pop();y.pop();\n\t}\n\tif(ifhigh)++ans1;\n\tif(iflow)++ans2;    //\u66f4\u65b0\u7b54\u6848\n} \n```\n\n---\n\n\u5b8c\u6574\u4ee3\u7801\uff1f\u81ea\u5df1\u52a8\u624b\uff0c\u4e30\u8863\u8db3\u98df",
        "postTime": 1569919737,
        "uid": 45176,
        "name": "FCBM71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3456 \u3010[POI2007]GRZ-Ridges and Valleys\u3011"
    },
    {
        "content": "#### ~~\u4e00\u5f00\u59cb\u8ba4\u4e3a\u662fdp\uff0c\u540e\u6765\u53c8\u89c9\u5f97\u662fBFS\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\u6253\uff0c\u6240\u4ee5\u6253\u4e86\u4e2aDFS~~\n\n~~\u5b66\u6821\u7684\u4f18\u79c0Window3\u5361\u4e86\u6211\u4e09\u4e2a\u70b9QWQ~~\n\n\u6587\u5316\u8bfe\u671f\u4e2d\u8003\u8bd5\u524dMRYang\u7ed9hszz\u7684oier\u4eec\u6765\u4e86\u51e0\u9053\u9898\u6765\u7f13\u89e3\u4e00\u4e0b\u6587\u5316\u8bfe\u5907\u8003\u7684\u7d27\u5f20\u6c14\u6c1b\uff08QWQ\uff09\n\n~~T1\u5c31\u662f\u8fd9\u9053\u5751\u9898~~\n\n\u9996\u5148\u9644\u4e0a\u6211\u7b2c\u4e00\u6b21\u6253\u7684\u9519\u8bef\u4ee3\u7801QWQ\n\n```cpp\nint main() {\n\tfreopen(\"mpv.in\", \"r\", stdin);\n\tfreopen(\"mpv.out\", \"w\", stdout);\n\tmemset(w, -1, sizeof(w));\n\tn = read();\n\tfor(int i = 1; i <= n; ++i) {\n\t\tfor(int j = 1; j <= n; ++j) {\n\t\t\tw[i][j] = read();\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; ++i) {\n\t\tfor(int j = 1; j <= n; ++j) {\n\t\t\tflag = false;\n\t\t\tif(maxx < w[i][j]) {\n\t\t\t\tmaxx = w[i][j];\n\t\t\t\tfe = 0;\n\t\t\t}\n\t\t\tif(minn > w[i][j]) {\n\t\t\t\tminn = w[i][j];\n\t\t\t\tgu = 0;\n\t\t\t}\n\t\t\tif(maxx == w[i][j] && !mp[i][j]) {\n\t\t\t\tdfs(i, j, 0);\n\t\t\t\tfe++;\n\t\t\t}\n\t\t\tif(minn == w[i][j] && !mp[i][j]) {\n\t\t\t\tdfs(i, j, 0);\n\t\t\t\tgu++;\n\t\t\t}\n\t\t}\n\t}\n\tcout << fe << \" \" << gu;\n\tfclose(stdin); fclose(stdout);\n\treturn 0;\n}\n```\n\n~~\u4ee3\u7801\u4e0d\u5168\uff0c\u6ca1\u6709\u4fdd\u5b58~~\n\n\u8bef\u7684\u601d\u8def\u6d6a\u8d39\u4e86\u6211\u4e00\u4e2a\u591a\u5c0f\u65f6QWQ\n\n\u6ce8\u610f\u662f\u5224\u65ad\u6bd4\u5468\u56f4\u7684\u5c71\u7684\u9ad8\u5ea6\u5927\u6216\u5c0f\n\n\u4e0d\u662f\u6c42\u5168\u90e8\u7684MAX\u548cMIN\u7684\u6570\u91cf \n\nQWQ \n\n\u63a5\u4e0b\u6765\u662fAC\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n\nusing namespace std;\n\nint n;\nll fe, gu, w[1010][1010];\n//fe\u4e3a\u5c71\u5cf0\u603b\u6570 gu\u4e3a\u5c71\u8c37\u603b\u6570 \nll maxx, minn = 1e9;\nbool mp[1010][1010], flag1[1010][1010], flag2[1010][1010], f, g;\n//flag1[]\u8868\u793a\u6bcf\u4e2a\u70b9\u662f\u5426\u4e3a\u5c71\u5cf0\n//flag2[]\u8868\u793a\u6bcf\u4e2a\u70b9\u662f\u5426\u4e3a\u5c71\u8c37\n\n\ninline ll read() {\n\tll w = 0, e = 1;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9') {\n\t\te = ch =='-' ? -1 : 1;\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9') {\n\t\tw = (w << 3) + (w << 1) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn w * e;\n}\n\nvoid dfs(int x, int y, int fl) {\n\tif(mp[x][y]) return;//\u82e5\u5df2\u7ecf\u626b\u8fc7\uff0c\u76f4\u63a5\u8fd4\u56de \n\tmp[x][y] = true;//\u6807\u8bb0 \n\tif(flag1[x][y]) f = true;//\u4e0d\u4e3a\u5c71\u5cf0 \n\tif(flag2[x][y]) g = true;//\u4e0d\u4e3a\u5c71\u8c37 \n\tif(fl != 1 && w[x - 1][y] == w[x][y]) dfs(x - 1, y, 2);//\u4e0a \n\tif(fl != 2 && w[x + 1][y] == w[x][y]) dfs(x + 1, y, 1);//\u4e0b \n\tif(fl != 3 && w[x][y - 1] == w[x][y]) dfs(x, y - 1, 4);//\u5de6 \n\tif(fl != 4 && w[x][y + 1] == w[x][y]) dfs(x, y + 1, 3);//\u53f3 \n\tif(fl != 5 && w[x - 1][y - 1] == w[x][y]) dfs(x - 1, y - 1, 6);//\u5de6\u4e0a \n\tif(fl != 6 && w[x + 1][y + 1] == w[x][y]) dfs(x + 1, y + 1, 5);//\u53f3\u4e0b \n\tif(fl != 7 && w[x + 1][y - 1] == w[x][y]) dfs(x + 1, y - 1, 8);//\u5de6\u4e0b \n\tif(fl != 8 && w[x - 1][y + 1] == w[x][y]) dfs(x - 1, y + 1, 7);//\u53f3\u4e0a \n}\n\nint main() {\n\tfreopen(\"mpv.in\", \"r\", stdin);\n\tfreopen(\"mpv.out\", \"w\", stdout);\n\t/*memset(w, -1, sizeof(w));\n\tn = read();\n\tfor(int i = 1; i <= n; ++i) {\n\t\tfor(int j = 1; j <= n; ++j) {\n\t\t\tw[i][j] = read();\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; ++i) {\n\t\tfor(int j = 1; j <= n; ++j) {\n\t\t\tflag = false;\n\t\t\tif(maxx < w[i][j]) {\n\t\t\t\tmaxx = w[i][j];\n\t\t\t\tfe = 0;\n\t\t\t}\n\t\t\tif(minn > w[i][j]) {\n\t\t\t\tminn = w[i][j];\n\t\t\t\tgu = 0;\n\t\t\t}\n\t\t\tif(maxx == w[i][j] && !mp[i][j]) {\n\t\t\t\tdfs(i, j, 0);\n\t\t\t\tfe++;\n\t\t\t}\n\t\t\tif(minn == w[i][j] && !mp[i][j]) {\n\t\t\t\tdfs(i, j, 0);\n\t\t\t\tgu++;\n\t\t\t}\n\t\t}\n\t}\n\tcout << fe << \" \" << gu;*/\n\t//\u9519\u8bef\u7684\u601d\u8def\u6d6a\u8d39\u4e86\u6211\u4e00\u4e2a\u591a\u5c0f\u65f6QWQ\n\t/*\n\t\t\u6ce8\u610f\u662f\u5224\u65ad\u6bd4\u5468\u56f4\u7684\u5c71\u7684\u9ad8\u5ea6\u5927\u6216\u5c0f\n\t\t\u4e0d\u662f\u6c42\u5168\u90e8\u7684MAX\u548cMIN\u7684\u6570\u91cf \n\t\tQWQ \n\t*/ \n\tmemset(w, -1, sizeof(w));//\u628a\u6240\u6709\u7684\u90fd\u6807\u8bb0\u4e3a-1\u4ee3\u66ff\u7279\u5224 \n\tn = read();\n\tfor(int i = 1; i <= n; ++i) {\n\t\tfor(int j = 1; j <= n; ++j) {\n\t\t\tw[i][j] = read();\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; ++i) {\n\t\tfor(int j = 1; j <= n; ++j) {\n\t\t\tif((w[i][j] > w[i - 1][j] && w[i - 1][j] != -1) || (w[i][j] > w[i + 1][j] && w[i + 1][j] != -1) || (w[i][j] > w[i][j - 1] && w[i][j - 1] != -1) || (w[i][j] > w[i][j + 1] && w[i][j + 1] != -1) || (w[i][j] > w[i - 1][j - 1] && w[i - 1][j - 1] != -1) || (w[i][j] > w[i + 1][j + 1] && w[i + 1][j + 1] != -1) || (w[i][j] > w[i + 1][j - 1] && w[i + 1][j - 1] != -1) || (w[i][j] > w[i - 1][j + 1] && w[i - 1][j + 1] != -1)) flag2[i][j] = true;\n\t\t\t//\u4e00\u5b9a\u8981\u6ce8\u610f\u628a-1\u7684\u9664\u53bb \n\t\t\tif(w[i][j] < w[i - 1][j] || w[i][j] < w[i + 1][j] || w[i][j] < w[i][j - 1] || w[i][j] < w[i][j + 1] || w[i][j] < w[i - 1][j - 1] || w[i][j] < w[i + 1][j + 1] || w[i][j] < w[i + 1][j - 1] || w[i][j] < w[i - 1][j + 1]) flag1[i][j] = true;\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; ++i) {\n\t\tfor(int j = 1; j <= n; ++j) {\n\t\t\tf = g = false;\n\t\t\tif(!mp[i][j]){\n\t\t\t\tdfs(i, j, 0);\n\t\t\t\tif(!f) fe++;\n\t\t\t\tif(!g) gu++;\n\t\t\t}\n\t\t}\n\t}\n\tcout << fe << \" \" << gu << endl;\n\tfclose(stdin); fclose(stdout);\n\treturn 0;\n}\n```\n",
        "postTime": 1572347179,
        "uid": 99982,
        "name": "\u5fa1\u574210027\u53f7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3456 \u3010[POI2007]GRZ-Ridges and Valleys\u3011"
    },
    {
        "content": "\u867d\u7136\u770b\u5230\u4e86\u975e\u5e38\u591a\u601d\u8def\u4e00\u6837\u7684\u9898\u89e3\uff0c\u4f46\u8fd8\u662f\u60f3\u53d1\u4e00\u4e0b\u8fd9\u7bc7\u9898\u89e3\uff0c\u56e0\u4e3a\u60f3\u8bb2\u4e00\u4e9b\u7ec6\u8282\n\n\u5927\u6982\u9898\u610f\uff1a\u5728\u4e00\u4e2a\u7684\u8fde\u901a\u5757\u6240\u6709\u5355\u5143\u683c\u4e2d\uff0c\u6bd4\u56db\u5468\u90fd\u9ad8\u7684\u662f\u5c71\u5cf0\uff0c\u6bd4\u56db\u5468\u4f4e\u7684\u662f\u5c71\u8c37\u3002\n\n\u601d\u8def\uff1a\u66b4\u529bbfs,\u627e\u5230\u6240\u6709\u8054\u901a\u5757\uff0c\u505a\u6807\u8bb0\u3002\n\n\u7ec6\u8282\u7684\u8bdd\u5c31\u770b\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\n#define mk make_pair\n#define gc getchar()\nint n,ansh,ansl; \nint mapp[1010][1010];\nbool vis[1010][1010];\nqueue<pair<int,int> >q; \nconst int dx[8]={1,1,1,-1,-1,-1,0,0},dy[8]={-1,0,1,-1,0,1,-1,1};//\u542c\u8bf4\u5148\u5f80\u641c\u53f3\u8fb9\u66f4\u5feb\ninline int read(){\n\tchar ch=gc;int s=0,f=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=1;ch=gc;}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0',ch=gc;}\n\treturn f*s;\n}\nbool rule(int x,int y){\n\tif(x<1||x>n||y<1||y>n)return 1;\n\treturn 0;\n}\nbool bfs(int pp,int qq){\n\tbool flag=1;\n\tq.push(mk(pp,qq));\n\tvis[pp][qq]=1;\n\twhile(!q.empty()){\n\t\tint x=q.front().first,y=q.front().second;\n\t\tq.pop();\n\t\tfor(int i=0;i<8;i++){\n\t\t\tint nx=x+dx[i],ny=y+dy[i];\n\t\t\tif(rule(nx,ny))continue;//\u4e00\u5b9a\u8981\u5224\u8d8a\u754c\n\t\t\tif(mapp[nx][ny]>mapp[x][y])flag=0;\n        //\u8fd9\u91cc\u4e0d\u8981\u76f4\u63a5return\uff0c\u4f1a\u6302\u6389\uff0c\u4e00\u5b9a\u8981\u8ba9\u4ed6\u641c\u5b8c\uff0c\u627e\u5230\u5b8c\u6574\u8fde\u901a\u5757\n\t\t\telse if(!vis[nx][ny]&&mapp[x][y]==mapp[nx][ny]){\n\t\t\t\tvis[nx][ny]=1;\n\t\t\t\tq.push(mk(nx,ny));\n\t\t\t}\n\t\t}\n\t}\n\tif(flag)return 1;\n\telse return 0;\n}\nbool bfs_(int pp,int qq){\n\tbool flag=1;\n\tq.push(mk(pp,qq));\n\tvis[pp][qq]=1;\n\twhile(!q.empty()){\n\t\tint x=q.front().first,y=q.front().second;\n\t\tq.pop();\n\t\tfor(int i=0;i<8;i++){\n\t\t\tint nx=x+dx[i],ny=y+dy[i];\n\t\t\tif(rule(nx,ny))continue;\n\t\t\tif(mapp[nx][ny]<mapp[x][y])flag=0;\n\t\t\telse if(!vis[nx][ny]&&mapp[x][y]==mapp[nx][ny]){\n\t\t\t\tvis[nx][ny]=1;\n\t\t\t\tq.push(mk(nx,ny));\n\t\t\t}\n\t\t}\n\t}\n\tif(flag)return 1;\n\telse return 0;\n}\nint main(){\n//\tfreopen(\"mountain.in\",\"r\",stdin);\n//\tfreopen(\"mountain.out\",\"w\",stdout);\t\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tmapp[i][j]=read();\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(vis[i][j])continue;\n        //\u4e00\u4e2a\u4f18\u5316\uff0c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u88ab\u5176\u4ed6\u70b9\u641c\u5230\u8fc7\uff0c\u5c31\u4e0d\u641c\uff0c\u56e0\u4e3a\u5df2\u7ecf\u627e\u5230\u4e86\u5b8c\u6574\u8fde\u901a\u5757\n\t\t\twhile(!q.empty())q.pop();\n\t\t\tif(bfs(i,j))ansh++;//puts(\"SS\");\n\t\t}\n\t}\n\tmemset(vis,0,sizeof(vis))//\u53ca\u5f97\u6e05\u7a7a\u6570\u7ec4\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(vis[i][j])continue;\n\t\t\twhile(!q.empty())q.pop();\n\t\t\tif(bfs_(i,j))ansl++;\n\t\t}\n\t}\n\tprintf(\"%d %d\\n\",ansh,ansl);\n\treturn 0;\n}\n```\n",
        "postTime": 1569920306,
        "uid": 129169,
        "name": "sounds_666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3456 \u3010[POI2007]GRZ-Ridges and Valleys\u3011"
    }
]