[
    {
        "content": "\u6c34\u9898\u4e00\u9053\u3002\n\n\u5bf9\u659c\u7387\u8fdb\u884c\u6392\u5e8f\uff0c\u5224\u91cd\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\u7279\u5224\u4e00\u4e0b\u76f4\u7ebf\u4e0e\u5750\u6807\u8f74\u5782\u76f4\u7684\u60c5\u51b5\u3002\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<iostream>\n#include<algorithm> \nusing namespace std;\ndouble a[205],b[205],c[40005];\nint n,ans,cnt;\nint main(){\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++) scanf(\"%lf%lf\",&a[i],&b[i]);\n    for (int i=1;i<n;i++)\n        for (int j=i+1;j<=n;j++)\n            if (a[i]==a[j]) c[++cnt]=0;\n            else if (b[i]==b[j]) c[++cnt]=10000;\n            else c[++cnt]=(a[i]-a[j])/(b[i]-b[j]);\n    sort(c+1,c+cnt+1);\n    ans=1;\n    for (int i=2;i<=cnt;i++)\n        if (c[i]-c[i-1]>1e-10) ans++;\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1486605579,
        "uid": 33736,
        "name": "\u5927\u5934",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2665 \u3010[USACO08FEB]\u8fde\u7ebf\u6e38\u620fGame of Lines\u3011"
    },
    {
        "content": "### \u8fd9\u9053\u9898\u7528\u4e00\u6b21\u51fd\u6570\u53bb\u6c42\u659c\u7387\uff0c\u7136\u540e\u7528map\u5b58\u50a8\u662f\u5426\u6709\u8fd9\u6837\u659c\u7387\u7684\u76f4\u7ebf\uff0c\u5224\u91cd\n### \u8bbe\u4e00\u6b21\u51fd\u6570\u89e3\u6790\u5f0f\u4e3ay=kx+b \u73b0\u5728\u544a\u8bc9\u4f60\u6a2a\u7eb5\u5750\u6807\u53bb\u6c42k\n### y1=k* x1+b , y2=k* x2+b \u5219k=(y1-y2)/(x1-x2)\n### \u7531\u4e8e\u659c\u7387\u4e0d\u4e00\u5b9a\u4e3a\u6574\u578b\u6570\uff0c\u6240\u4ee5 double k=(y1-y2)*1.0/(x1-x2)\n## But! \u5f53x1=x2\u65f6\uff0c\u9664\u6570\u4e3a0\u4f1a\u51fa\u9519\uff0c\u6240\u4ee5\u9700\u8981\u7279\u5224\n## \u4ee3\u7801\u5982\u4e0b\uff1a\n------------\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a[201][2],s;\nmap<double,bool>xl;//\u5f00\u4e00\u4e2a\u4ee5double\u4e3a\u4e0b\u6807\u7684bool\u7c7b\u578b\u6570\u7ec4\ndouble x;\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>a[i][0]>>a[i][1];//\u8f93\u5165\n    for(int i=1;i<n;i++)\n        for(int j=i+1;j<=n;j++){//\u4e24\u4e24\u4e4b\u95f4\u7b97\u659c\u7387\n            if(a[i][0]==a[j][0]) x=10000;//\u7279\u5224\n            else x=(a[i][1]-a[j][1])*1.0/(a[i][0]-a[j][0]);\n            if(!xl[x]) s++,xl[x]=1;//\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u659c\u7387\u7d2f\u52a0\uff0c\u66f4\u65b0\u4e3a\u51fa\u73b0\u8fc7\n        }\n    cout<<s;//\u8f93\u51fa\u603b\u6570\n    return 0;\n}\n```\n",
        "postTime": 1553999066,
        "uid": 89568,
        "name": "hmh13951417981",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2665 \u3010[USACO08FEB]\u8fde\u7ebf\u6e38\u620fGame of Lines\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u65e0\u5e73\u884c\u5373\u65e0\u76f4\u7ebf\u7684\u659c\u7387\u76f8\u540c\u3002\n\n\n\u5c3d\u7ba1\u524d\u51e0\u7bc7\u9898\u89e3\u597d\u50cf\u6bd4\u6211\u7b80\u5355\uff0c\n\n\n\u4f46\u6211\u89c9\u5f97\u6211\u7684\u65b9\u6cd5\u8fd8\u662f~~\u8f83\u7cbe\u786e\u7684~~    ~~\u606c\u4e0d\u77e5\u803b~~\n\n\n\u7528\u4e86\u4e00\u4e2a\u76f8\u5f53\u4e8e\u4e8c\u7ef4\u7684hash\uff0c\u5148\u7ea6\u5206\uff0c\u7528hash\u628a\u6700\u7b80\u5206\u6570\u4e0b\u76f8\u540c\u7684\u5206\u6570\u53bb\u9664\uff0c\n\n\n\u6700\u7ec8\u6709\u51e0\u4e2a\u5c31\u662f\u7b54\u6848ans\u4e86\u3002\n\n\n\u800c\u4e14\u627e\u6700\u7ec8\u4e2a\u6570\u7b54\u6848\u53ef\u4ee5\u653e\u5728\u5224\u91cd\u7684\u8fc7\u7a0b\u4e2d\u89e3\u51b3\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint dx,dy,ddl,dl,dd,ans,a[5000][5000],x[100000],y[100000],i,n,j;\nint gcd(int a,int b)//gcd\u6765\u7ea6\u81f3\u6700\u7b80\u5206\u6570\n{\n        int r=a%b;\n        if (r==0)\n            return b;\n        return gcd(b,r);\n}\nint main()\n{\n        scanf(\"%d\",&n);\n        for (i=1;i<=n;++i)\n            scanf(\"%d%d\",&x[i],&y[i]);\n        for(i=1;i<=n;++i)//\u679a\u4e3e\u8fdb\u884c\u9009\u62e9\u7684\u8fc7\u7a0b\n            {\n                    for (j=1;j<=n;++j)\n                        {\n                                if (i==j)\n                                    continue;        \n                                dx=x[i]-x[j];\n                                dy=y[i]-y[j];\n                                if (dx==0 && dy==0)\n                                    continue;\n                                //\u6ce8\u610f\u5206\u6bcd\u4e0d\u5f97\u4e3a0\uff0c\u6b64\u4e8c\u79cd\u60c5\u51b5\u5355\u72ec\u8ba8\u8bba\n                                if (dx==0)\n                                    {\n                                            if (!dl)\n                                                {\n                                                        dl=1;\n                                                        ans++;\n                                                }\n                                            continue;\n                                    }\n                                if (dy==0)\n                                    {\n                                            if (!ddl)\n                                                {\n                                                        ddl=1;\n                                                        ans++;\n                                                }\n                                            continue;\n                                    }\n                                dd=gcd(dx,dy);\n                                if (!a[dx/dd+2100][dy/dd+2100])\n                                    {\n                                            ans++;\n                                            a[dx/dd+2100][dy/dd+2100]=1;\n                                            //\u7531\u4e8e\u6709\u8d1f\u6570\u5750\u6807\uff0c\n                                           //\u52a0\u4e0a2100\u53ef\u4ee5\u907f\u514dRE\n                                    }\n                        }\n            }\n        printf(\"%d\",ans);\n        return 0;\n}\n```",
        "postTime": 1512308872,
        "uid": 39223,
        "name": "taoran",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2665 \u3010[USACO08FEB]\u8fde\u7ebf\u6e38\u620fGame of Lines\u3011"
    },
    {
        "content": "\u601d\u8def\u8f83\u7b80\u5355\uff0c\u53ef\u4ee5\u4f7f\u7528 `map <double, bool>` \u5b58\u50a8\u659c\u7387\uff08\u56e0\u4e3a\u8ba1\u7b97\u51fa\u659c\u7387\u540e\u7b54\u6848\u53ef\u80fd\u662f\u5c0f\u6570\uff0c\u8981\u7528 `double`\uff09\uff0c\u5e76\u5224\u91cd\uff0c**\u5f53\u9664\u6570 $(x_j - x_i) = 0$ \u65f6\u9700\u8981\u7279\u5224**\u3002\n\n\u659c\u7387\u8ba1\u7b97\u516c\u5f0f\uff1a$(y_j - y_i) \u00f7 (x_j - x_i)$\u3002\n\nCode:\n\n```cpp\n#include <iostream>\n#include <map>//map\u5934\u6587\u4ef6\nusing namespace std;\ndouble N, x[205], y[205], a, ans;\nmap <double, bool> mp;//\u5b9a\u4e49map\nint main(void) {\n\tcin >> N;\n\tfor (int i = 1; i <= N; ++i) {\n\t\tcin >> x[i] >> y[i];//\u8f93\u5165 i \u70b9\u7684\u5750\u6807\n\t}\n\tfor (int i = 1; i < N; ++i) {\n\t\tfor (int j = 1 + i; j <= N; ++j) {\n\t\t\tif (x[j] - x[i] == 0) a = 999999;//\u7279\u5224\n\t\t\telse a = (y[j] - y[i]) / (x[j] - x[i]);//\u8ba1\u7b97\u659c\u7387\n\t\t\tif (mp[a] == false) mp[a] = true, ans++;//\u5224\u91cd\n\t\t}\n\t}\n\tcout << ans << endl;//\u8f93\u51fa\u7b54\u6848\n\treturn 0;\n}\n```",
        "postTime": 1597202756,
        "uid": 205301,
        "name": "Tazuaki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2665 \u3010[USACO08FEB]Game of Lines S\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u7528set\u5c31\u884c\u5427\uff0cset\u81ea\u52a8\u6392\u5e8f\u4e14\u81ea\u52a8\u53bb\u91cd\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define inf 2147483647\nconst ll INF = 0x3f3f3f3f3f3f3f3fll;\n#define ri register int\ntemplate <class T> inline T min(T a, T b, T c)\n{\n    return min(min(a, b), c);\n}\ntemplate <class T> inline T max(T a, T b, T c)\n{\n    return max(max(a, b), c);\n}\ntemplate <class T> inline T min(T a, T b, T c, T d)\n{\n    return min(min(a, b), min(c, d));\n}\ntemplate <class T> inline T max(T a, T b, T c, T d)\n{\n    return max(max(a, b), max(c, d));\n}\n#define pi acos(-1)\n#define me(x, y) memset(x, y, sizeof(x));\n#define For(i, a, b) for (int i = a; i <= b; i++)\n#define FFor(i, a, b) for (int i = a; i >= b; i--)\n#define mp make_pair\n#define pb push_back\nconst int maxn = 100005;\n// name*******************************\nset<double>k;\ndouble x[300],y[300];\nint n;\n// function******************************\n\n//***************************************\nint main()\n{\n    cin>>n;\n    For(i,1,n)\n    {\n        cin>>x[i]>>y[i];\n        For(j,1,i-1)\n        {\n            if(x[i]==x[j])\n                k.insert(inf);\n            else\n                k.insert((y[i]-y[j])/(x[i]-x[j]));\n        }\n    }\n    cout<<k.size();\n    return 0;\n}\n\n```",
        "postTime": 1522141624,
        "uid": 75619,
        "name": "planche",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2665 \u3010[USACO08FEB]\u8fde\u7ebf\u6e38\u620fGame of Lines\u3011"
    },
    {
        "content": "\u53c8\u662f\u4e00\u9053\u6c34\u9898\n\n\n\u505a\u8fd9\u9053\u9898\u9996\u5148\u8981\u660e\u786e\u5e73\u884c\n\n\n\u6240\u8c13\u5e73\u884c\uff0c\u5c31\u662f\u659c\u7387\u76f8\u7b49\n\n\n\u90a3\u5c31\u662f\u6c42\u6240\u6709\u7ebf\u7684\u659c\u7387\n\n\n\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u659c\u7387\n\n\n\u5c31\u662f\u7b54\u6848\n\n\n\u600e\u4e48\u7b97\u659c\u7387\uff1f\n\n\n\u4e0d\u4f1a\u4e0d\u77e5\u9053\u5427\n\n\n\u659c\u7387k=(yi-yj)/(xi-xj)\n\n\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e00\u4e2a\u7ec6\u8282\uff0c\u697c\u4e0b\u4e5f\u63d0\u5230\n\n\n\u4e0d\u8fc7\u53ea\u7528\u7279\u5224\u4e00\u4e2a\n\n\n\u5c31\u662fx\u5750\u6807\u76f8\u540c\u65f6\uff0c\u9632\u6b62\u88ab\u96f6\u9664\n\n\n\u6700\u540e\u53bb\u4e2a\u91cd\n\n\n```cpp\nvar\n    x,y:array[0..10000] of longint;\n    a:array[0..100000] of real;\n    n,i,j,ans,t:longint;\n    flag:boolean;\nprocedure sort(l,r: longint);\n      var\n         i,j: longint;     x,y:real;\n      begin\n         i:=l;\n         j:=r;\n         x:=a[(l+r) div 2];\n         repeat\n           while a[i]<x do\n            inc(i);\n           while x<a[j] do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=a[i];\n                a[i]:=a[j];\n                a[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort(l,j);\n         if i<r then\n           sort(i,r);\n      end;\nbegin\n    readln(n);\n    for i:=1 to n do\n        begin\n            readln(x[i],y[i]);\n            for j:=1 to i-1 do\n                if x[i]=x[j] then  //\u7279\u5224\n                    flag:=true else\n                    begin\n                        inc(t);\n                        a[t]:=(y[i]-y[j])/(x[i]-x[j]); //\u8ba1\u7b97\u659c\u7387\n                    end;\n        end;\n    sort(1,t);\n    a[0]:=a[1]-1;\n    for i:=1 to t do  //\u53bb\u91cd \n        if a[i]<>a[i-1] then\n            inc(ans);\n    writeln(ans+ord(flag));\nend.\n```",
        "postTime": 1508831353,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2665 \u3010[USACO08FEB]\u8fde\u7ebf\u6e38\u620fGame of Lines\u3011"
    },
    {
        "content": "\u8fd9\u9898\u70b9\u6570\u6700\u591a\u53ea\u6709200\u4e2a\n\n\u6240\u4ee5\u662f\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u8fc7\u6ef4\n\n\u53cc\u91cd\u5faa\u73af\u904d\u5386\u6bcf\u4e24\u4e2a\u70b9\u7684\u7ec4\u5408\u751f\u6210\u7684\u76f4\u7ebf\u7684\u659c\u7387\u5373\u53ef\n\n\u81f3\u4e8e\u53bb\u91cd\u7684\u8bdd\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0bstl\u5e93\u91cc\u7684set\n\n\u7528set\\<double>\u4fdd\u5b58\u6240\u6709\u7684\u659c\u7387\n\ninsert\u540c\u6837\u7684\u6570\u636e\u65f6\uff0c\u662f\u4e0d\u4f1a\u4ea7\u751f\u53d8\u5316\u6ef4\n\n\u6700\u540e\u8f93\u51faset.size()\u5373\u53ef\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <set>\nusing namespace std;\n\nset<double> s;\n\nint main() {\n    int i,j,n;\n    cin >> n;\n    double a[n],b[n]; // \u5206\u522b\u4fdd\u5b58\u70b9\u7684x,y\u5750\u6807\n    for (i=0; i<n; i++) cin >> a[i] >> b[i];\n    // \u6ce8\u610f\u9700\u8981\u7279\u5224\u659c\u7387\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\n    for (i=0; i<n; i++)\n        for (j=i+1; j<n; j++)\n            s.insert(a[j]-a[i] == 0 ? 9999999999 : (b[j]-b[i])/(a[j]-a[i]));\n    cout << s.size() << endl;\n}\n```\n\n",
        "postTime": 1585901182,
        "uid": 296830,
        "name": "YuJieSong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2665 \u3010[USACO08FEB]Game of Lines S\u3011"
    },
    {
        "content": "~~\u6c34\u9898~~\uff0cset \u53ef\u4ee5\u81ea\u52a8\u53bb\u91cd\u3002   \nset<...>a;\na.size()\u6307a\u7684\u957f\u5ea6\ta.insert()\u662f\u63d2\u5165\u3002  \n\u4ee3\u7801\u5982\u4e0b\u2014\u2014\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int INF=0x3f3f3f;\nset<double>k;\ndouble x[300],y[300],n;\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>x[i]>>y[i];\n        for(int j=1;j<=i-1;j++)\n        {\n            if(x[i]==x[j])\tk.insert(INF);\n            else\tk.insert((y[i]-y[j])/(x[i]-x[j]));\n        }\n    }\n    cout<<k.size();\n    return 0;\n}\n```",
        "postTime": 1561378097,
        "uid": 99496,
        "name": "\u561f\u561fcqy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2665 \u3010[USACO08FEB]\u8fde\u7ebf\u6e38\u620fGame of Lines\u3011"
    },
    {
        "content": "\u660e\u5929\u8dd1\u8def\u53bb\u51ac\u4ee4\u8425\n\n\u671f\u672b\u8003\u8bd5\u5b8c\u70b8\n\n\u73b0\u5728\u4e00\u4e2a\u4eba\u745f\u745f\u53d1\u6296\u5f97\u5728\u673a\u623f\u5237\u9898\u2026\u2026 \u53ef\u601c\u516e\u516e\n\n\u672c\u9898\u7684\u9898\u610f\u7b80\u8981\u6982\u8ff0\u4e00\u4e0b\uff1a\n\n\u5bf9\u4e8e\u7ed9\u5b9a\u7684n\u4e2a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\uff0c\u6c42\u51fa\u4e24\u4e24\u7ec4\u5408\u7684\u4e0d\u540c\u7684\u659c\u7387\u7684\u603b\u6570\uff1b\n\nset\u8fdb\u884c\u81ea\u52a8\u53bb\u91cd \n\n\u6709\u4e24\u4e2a\u5751\u70b9\u8bf4\u660e\u4e00\u4e0b\uff1a\n\n1.\u6ce8\u610f\u659c\u7387\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\u7684\u7279\u5224 \u96640\u7684\u7ed3\u679c\u597d\u50cf\u662f\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\u2026\u2026\n\n\u659c\u7387\u4e0d\u5b58\u5728\u65f6\u5e94\u8be5\u7b97\u4e00\u6761\u76f4\u7ebf \u6240\u4ee5\u7528pp\u6807\u8bb0\u4e00\u4e0b \u6700\u540e\u8f93\u51fa\u7ed3\u679c\u7684\u65f6\u5019\u52a0\u4e0app\u5373\u53ef\n\n2.\u659c\u7387\u662f\u5c0f\u6570 double \u800c\u8ba1\u7b97\u659c\u7387\u7684\u65f6\u5019\u7528\u7684\u5750\u6807\u503c\u90fd\u662fint \u6240\u4ee5\u9664\u4e0b\u6765\u7684\u7ed3\u679c\u5c31\n\n\u6574\u6570\u2026\u2026 \u4e8e\u662f\u4e4e\u5c31\u7206\u6389\u4e86 qaq \n\n\u6574\u578b\u8ba1\u7b97\u6d6e\u70b9\u578b\u8981\u4e581.0\n\n\u6574\u578b\u8ba1\u7b97\u6d6e\u70b9\u578b\u8981\u4e581.0\n\n\u6574\u578b\u8ba1\u7b97\u6d6e\u70b9\u578b\u8981\u4e581.0\n\n~~\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d~~\n\n\u2192_\u2192\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,pp;\nstruct p{\n    int x,y;\n}a[210];\nset<double> p;\nint main(){\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++) scanf(\"%d%d\",&a[i].x,&a[i].y);\n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=n;j++){\n            if (i==j) continue;\n            if (a[i].x==a[j].x) pp=1;\n                else p.insert(1.0*(a[i].y-a[j].y)/(a[i].x-a[j].x));\n        }\n    printf(\"%d\\n\",p.size()+pp);\n    return 0;\n}\n```\n",
        "postTime": 1548400518,
        "uid": 99460,
        "name": "Hiraeth",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2665 \u3010[USACO08FEB]\u8fde\u7ebf\u6e38\u620fGame of Lines\u3011"
    },
    {
        "content": "\u867d\u7136\u662f\u6c34\u9898\u4f46\u662f\u8fd8\u6709\u503c\u5f97\u6ce8\u610f\u7684\u5730\u65b9\uff0c\n\n\u8fd9\u9053\u9898\u8003\u5bdf\u7684\u679a\u4e3e\u7684\u601d\u60f3\uff0c\u7a0d\u5e26\u5feb\u901f\u6392\u5e8f\u53bb\u91cd\u7684\u601d\u60f3\u3002\n\n\u6240\u4ee5\u6574\u4e2a\u9898\u76ee\u96be\u5ea6\u4e0d\u5927\uff0c\u5361\u6570\u636e\u7684\u70b9\u51e0\u4e4e\u6ca1\u6709\uff0cAC\u4e5f\u662f\u6bd4\u8f83\u5bb9\u6613\u7684 \u3002\n\n\u548c\u697c\u4e0b\u4e00\u6837\uff0c\u601d\u8def\u5c31\u662f\u679a\u4e3e\u6bcf\u4e24\u70b9\u5750\u6807\uff0c\u6c42\u51fa\u659c\u7387k\u5bf9k\u8fdb\u884c\u53bb\u91cd\u6392\u5e8f\uff0c\u5f97\u51fa\u7b54\u6848\u3002\n\n\u5728\u8fd9\u91cc\u6211\u9700\u8981\u63d0\u9192\u5404\u4f4d\u4e09\u70b9\uff1a\n\n- \u4e24\u70b9\u7684x\u5750\u6807\u76f8\u7b49\u7684\u65f6\u5019\uff08\u5982\u679c\u4e0d\u6ce8\u610fk=0\uff09\uff0c\u5373\u5176\u4e0ey\u8f74\u5e73\u884c\uff0c\u4e5f\u8fd8\u662f\u53ef\u4ee5\u753b\u7684\n\n- \u4e24\u70b9\u7684y\u5750\u6807\u76f8\u7b49\u7684\u65f6\u5019\uff08\u5982\u679c\u4e0d\u6ce8\u610fpas\u8981200\uff09\uff0c\u5373\u5176\u4e0ex\u8f74\u5e73\u884c\uff0c\u4e5f\u8fd8\u662f\u53ef\u4ee5\u753b\u7684\n\n- \u4e24\u70b9\u91cd\u5408\u65f6\uff0c\u4e0a\u8ff0\u4e24\u6761\u5747\u5931\u6548\u3002\n\n\u6240\u4ee5\u679a\u4e3e\u9898\u8fd8\u662f\u8981\u8ba4\u771f\u7684\uff0c\u4f46\u662f\uff08\u6570\u636e\u592a\u6c34\uff09\u8c8c\u4f3c\u4e0d\u8003\u8651\u4e0a\u8ff0\u4e09\u70b9\u4e5f\u8fd8\u662f\u80fd\u8fc7\u7684\u3002\n\n\u5f3a\u70c8\u8981\u6c42\u589e\u52a0\u6570\u636e\uff0c\u8fd9\u91cc\u6211\u7ed9\u5404\u4f4d\u51fa\u4e00\u7ec4\u6837\u4f8b\uff1a\n\n```cpp\ninput#11\n8\n1 1\n1 1\n2 1\n2 4\n1 4\n1 6\n4 7\n8 9\noutput#11\n16\n```",
        "postTime": 1503133025,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2665 \u3010[USACO08FEB]\u8fde\u7ebf\u6e38\u620fGame of Lines\u3011"
    }
]