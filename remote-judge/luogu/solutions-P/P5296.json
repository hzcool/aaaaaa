[
    {
        "content": "\u628a\u8fd9\u4e2a\u5f0f\u5b50\u5316\u5f00\u5c31\u76f8\u5f53\u4e8e\n\n$$ (w_1+w_2+\\cdots +w_m)^k = k![z^k]\\prod_{i=1}^m \\mathrm{e}^{w_iz} $$\n\n\u6ce8\u610f\u77e9\u9635\u6811\u5b9a\u7406\u7684\u5185\u5bb9\u6269\u5c55\u4e00\u4e0b\u5b9e\u9645\u4e0a\uff1aLaplacian \u77e9\u9635\u7684\u4e3b\u4f59\u5b50\u5f0f\u7b49\u4e8e $\\sum_T \\prod_{(u, v)\\in T} w(u,v)$\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u591a\u9879\u5f0f\u77e9\u9635 $w(u,v) = \\sum_{i=0}^k \\frac{(wz)^i}{i!}$ \uff0c\u8fd0\u7b97\u65f6\u4ec5\u4fdd\u7559\u81f3\u7b2c $k$ \u6b21\u7136\u540e\u7528\u6c42\u751f\u6210\u6811\u6570\u91cf\u7684\u65b9\u6cd5\u7b97\u884c\u5217\u5f0f\u5c31\u884c\u4e86\u3002\u590d\u6742\u5ea6 $\\Theta(n^3 k^2)$\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cctype>\n\n#include <algorithm>\n#include <random>\n#include <bitset>\n#include <queue>\n#include <functional>\n#include <set>\n#include <map>\n#include <vector>\n#include <chrono>\n#include <iostream>\n#include <limits>\n#include <numeric>\n\n#define LOG(FMT...) fprintf(stderr, FMT)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n// mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nconst int N = 32, P = 998244353;\n\nint n, k;\nint ifac[N], res[N];\nint a[N][N];\nint g[N][N][N];\n\nint norm(int x) { return x >= P ? x - P : x; }\n\nvoid println(int* a, FILE* fp) {\n  for (int i = 0; i < k; ++i)\n    fprintf(fp, \"%d \", a[i]);\n  fprintf(fp, \"%d\\n\", a[k]);\n}\n\nvoid exGcd(int a, int b, int& x, int& y) {\n  if (!b) {\n    x = 1;\n    y = 0;\n    return;\n  }\n  exGcd(b, a % b, y, x);\n  y -= a / b * x;\n}\n\nint inv(int a) {\n  int x, y;\n  exGcd(a, P, x, y);\n  return norm(P + x);\n}\n\nint* mul(int* a, int* b, int* out) {\n  static int tmp[N];\n  memset(tmp, 0, sizeof(tmp));\n  for (int i = 0; i <= k; ++i)\n    for (int j = 0; j <= k - i; ++j)\n      tmp[i + j] = (tmp[i + j] + a[i] * (ll)b[j]) % P;\n  memcpy(out, tmp, sizeof(tmp));\n  return tmp;\n}\n\nint* pinv(int* a, int* out) {\n  static int b[N], tmp[N];\n  memset(tmp, 0, sizeof(tmp));\n  tmp[0] = inv(a[0]);\n  for (int i = 1; i <= k; ++i)\n    b[i] = a[i] * (ll)tmp[0] % P;\n  for (int i = 1; i <= k; ++i)\n    for (int j = 1; j <= i; ++j)\n      tmp[i] = (tmp[i] + (P - b[j]) * (ll)tmp[i - j]) % P;\n  memcpy(out, tmp, sizeof(tmp));\n  return out;\n}\n\nint main() {\n  scanf(\"%d%d\", &n, &k);\n  ifac[1] = 1;\n  for (int x = 2; x <= k; ++x)\n    ifac[x] = -(P / x) * (ll)ifac[P % x] % P + P;\n  ifac[0] = 1;\n  for (int x = 1; x <= k; ++x)\n    ifac[x] = ifac[x - 1] * (ll)ifac[x] % P;\n  for (int i = 1; i <= n; ++i)\n    for (int j = 1; j <= n; ++j)\n      scanf(\"%d\", &a[i][j]);\n  for (int i = 1; i <= n; ++i)\n    for (int j = 1; j < i; ++j) {\n      int pw = 1;\n      for (int t = 0; t <= k; ++t) {\n        int v = pw * (ll)ifac[t] % P;\n        g[i][j][t] = g[j][i][t] = norm(P - v);\n        g[i][i][t] = norm(g[i][i][t] + v);\n        g[j][j][t] = norm(g[j][j][t] + v);\n        pw = pw * (ll)a[i][j] % P;\n      }\n    }\n\n  res[0] = 1;\n  --n;\n  for (int i = 1; i <= n; ++i) {\n    static int cur[N];\n    mul(g[i][i], res, res);\n    pinv(g[i][i], cur);\n    for (int j = n; j >= i; --j)\n      mul(g[i][j], cur, g[i][j]);\n    memset(g[i][i], 0, sizeof(g[i][i]));\n    g[i][i][0] = 1;\n    for (int j = n; j > i; --j) {\n      for (int t = n; t >= i; --t) {\n        mul(g[i][t], g[j][i], cur);\n        for (int l = 0; l <= k; ++l)\n          g[j][t][l] = norm(g[j][t][l] + P - cur[l]);\n      }\n    }\n  }\n  int ans = res[k];\n  for (int i = 1; i <= k; ++i)\n    ans = ans * (ll)i % P;\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n```",
        "postTime": 1554878278,
        "uid": 21423,
        "name": "Elegia",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5296 \u3010[\u5317\u4eac\u7701\u9009\u96c6\u8bad2019]\u751f\u6210\u6811\u8ba1\u6570\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u5b9a\u4e49\u4e00\u68f5\u6811\u7684\u6743\u503c\u4e3a\u6240\u6709\u8fb9\u7684\u6743\u503c\u548c\uff0c\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u56fe\uff0c\u8fb9\u6709\u6743\u503c\uff0c\u6c42\u8fd9\u4e2a\u56fe\u4e2d\u6240\u6709\u751f\u6210\u6811\u6743\u503c\u7684 $k$ \u6b21\u65b9\u548c\u3002\n\n$\\texttt{Data Range:}1\\leq n,k\\leq 30$\n\n### \u9898\u89e3\n\n\u7531\u4e8e\u8fd9\u4e2a\u9898\u9700\u8981\u6c42\u7684\u662f\u6240\u6709\u751f\u6210\u6811\u7684\u6743\u503c\u7684\u548c\uff0c\u800c\u4e00\u4e2a\u751f\u6210\u6811\u7684\u6743\u503c\u662f\u6240\u6709\u8fb9\u7684\u548c\u7684 $k$ \u6b21\u65b9\uff08\u8fd9\u91cc\u91cd\u65b0\u5b9a\u4e49\u4e86\uff09\uff0c\u800c\u4e0d\u662f Matrix-Tree \u677f\u5b50\u9898\u91cc\u9762\u7684\u6240\u6709\u8fb9\u7684\u79ef\uff0c\u8fd9\u5f15\u5bfc\u6211\u4eec\u53bb\u5bfb\u627e\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6c42\u79ef\u7684\u8f6c\u79fb\u3002\n\n\u5047\u8bbe\u73b0\u5728\u9700\u8981\u627e\u4e00\u68f5\u751f\u6210\u6811\uff0c\u5df2\u7ecf\u88ab\u52a0\u5165\u7684\u8fb9\u7684\u6743\u503c\u4e3a $w^k$\uff0c\u5982\u679c\u65b0\u52a0\u8fdb\u6765\u4e00\u6761\u6743\u503c\u4e3a $w_i$ \u7684\u8fb9\uff0c\u5219\u65b0\u7684\u90e8\u5206\u7684\u7b54\u6848\u4e3a $(w+w_i)^k$\uff0c\u7b80\u5355\u62c6\u4e00\u4e0b\u5f97\u5230\n\n$$(w+w_i)^k=\\sum\\limits_{j=0}^{k}\\binom{k}{j}w^jw_i^{k-j}$$\n\n\u6ce8\u610f\u5230\u8fd9\u4e2a\u4e1c\u897f\u662f\u4e8c\u9879\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u5199\u6210\u4e24\u4e2a EGF \u7684\u4e58\u79ef\uff0c\u5373\n\n$$e^{(w+w_i)x}=e^{wx}e^{w_ix}$$\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u5bf9\u4e00\u6761\u6743\u503c\u4e3a $w_i$ \u7684\u8fb9\u6765\u8bf4\uff0c\u91cd\u65b0\u5b9a\u4e49\u5176\u6743\u503c\u4e3a $e^{w_ix}$\uff0c\u90a3\u4e48\u4e00\u68f5\u751f\u6210\u6811\u7684\u6743\u503c\u4e3a\u6240\u6709\u8fb9\u7684\u6743\u503c\u591a\u9879\u5f0f\u7684\u79ef\u4e2d $x^k$ \u7684\u7cfb\u6570\uff0c\u76f8\u5f53\u4e8e\u5c31\u662f\u8ba1\u7b97\u6240\u6709\u8fb9\u7684\u6743\u503c\u591a\u9879\u5f0f\u7684\u79ef\u3002\u8fd9\u4e2a\u6309\u7167\u677f\u5b50\u9898\u6765\u5c31\u884c\u4e86\uff0c\u552f\u4e00\u7684\u4e0d\u540c\u662f\u77e9\u9635\u4e2d\u7684\u5143\u7d20\u53d8\u6210\u4e86\u591a\u9879\u5f0f\u800c\u4e0d\u662f\u6570\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\ntypedef vector<ll> Poly;\nconst ll MAXN=51,MOD=998244353;\nll n,fd,x;\nll fact[MAXN],finv[MAXN];\nPoly mat[MAXN][MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline ll qpow(ll base,ll exponent)\n{\n\tll res=1;\n\twhile(exponent)\n\t{\n\t\tif(exponent&1)\n\t\t{\n\t\t\tres=(li)res*base%MOD;\n\t\t}\n\t\tbase=(li)base*base%MOD,exponent>>=1;\n\t}\n\treturn res;\n}\ninline void setup(ll cnt)\n{\n\tfact[0]=fact[1]=finv[0]=1;\n\tfor(register int i=2;i<=cnt;i++)\n\t{\n\t\tfact[i]=(li)fact[i-1]*i%MOD;\n\t}\n\tfinv[cnt]=qpow(fact[cnt],MOD-2);\n\tfor(register int i=cnt-1;i;i--)\n\t{\n\t\tfinv[i]=(li)finv[i+1]*(i+1)%MOD;\n\t}\n}\ninline void printPoly(Poly f)\n{\n\tfor(register int i:f)\n\t{\n\t\tprintf(\"%d \",i);\n\t}\n}\ninline Poly operator +(const Poly &f,const Poly &g)\n{\n\tPoly res;\n\tres.resize(fd);\n\tfor(register int i=0;i<fd;i++)\n\t{\n\t\tres[i]=(f[i]+g[i])%MOD;\n\t}\n\treturn res;\n}\ninline Poly operator -(const Poly &f,const Poly &g)\n{\n\tPoly res;\n\tres.resize(fd);\n\tfor(register int i=0;i<fd;i++)\n\t{\n\t\tres[i]=(f[i]-g[i]+MOD)%MOD;\n\t}\n\treturn res;\n}\ninline Poly operator *(const Poly &f,const Poly &g)\n{\n\tPoly res;\n\tll r;\n\tres.resize(fd);\n\tfor(register int i=0;i<fd;i++)\n\t{\n\t\tr=0;\n\t\tfor(register int j=0;j<=i;j++)\n\t\t{\n\t\t\tr=(r+(li)f[j]*g[i-j])%MOD;\n\t\t}\n\t\tres[i]=r;\n\t}\n\treturn res;\n}\ninline Poly inv(Poly f)\n{\n\tPoly res;\n\tll r,invl;\n\tres.resize(fd),res[0]=invl=qpow(f[0],MOD-2);\n\tfor(register int i=1;i<fd;i++)\n\t{\n\t\tr=0;\n\t\tfor(register int j=0;j<i;j++)\n\t\t{\n\t\t\tr=(r+(li)res[j]*f[i-j])%MOD;\n\t\t}\n\t\tres[i]=(li)(MOD-r)*invl%MOD;\n\t}\n\treturn res;\n}\ninline Poly exp(ll x)\n{\n\tPoly res;\n\tll cur=1;\n\tres.resize(fd);\n\tfor(register int i=0;i<fd;i++)\n\t{\n\t\tres[i]=(li)cur*finv[i]%MOD,cur=(li)cur*x%MOD;\n\t}\n\treturn res;\n}\ninline void add(ll x,ll y,ll w)\n{\n\tPoly f=exp(w);\n\tmat[x][x]=mat[x][x]+f,mat[y][y]=mat[y][y]+f;\n\tmat[x][y]=mat[x][y]-f,mat[y][x]=mat[y][x]-f;\n}\ninline ll det(ll n,ll kk)\n{\n\tll pivot,sgn=1;\n\tPoly cof,invl,res;\n\tres.resize(fd),res[0]=1;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tpivot=n+1;\n\t\tfor(register int j=i;j<=n;j++)\n\t\t{\n\t\t\tif(mat[j][i][0])\n\t\t\t{\n\t\t\t\tpivot=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(pivot==n+1)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tpivot!=i?swap(mat[pivot],mat[i]),sgn*=-1:1,invl=inv(mat[i][i]);\n\t\tfor(register int j=i+1;j<=n;j++)\n\t\t{\n\t\t\tcof=mat[j][i]*invl;\n\t\t\tfor(register int k=i;k<=n;k++)\n\t\t\t{\n\t\t\t\tmat[j][k]=mat[j][k]-cof*mat[i][k];\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tres=res*mat[i][i];\n\t}\n\treturn sgn==1?res[kk]:(MOD-res[kk])%MOD;\n}\nint main()\n{\n\tn=read(),setup(fd=read()+1);\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tfor(register int j=1;j<=n;j++)\n\t\t{\n\t\t\tmat[i][j].resize(fd);\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tfor(register int j=1;j<=n;j++)\n\t\t{\n\t\t\tx=read(),i<j?add(i,j,x):(void)1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",(li)det(n-1,fd-1)*fact[fd-1]%MOD);\n}\n```\n",
        "postTime": 1612018133,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5296 \u3010[\u5317\u4eac\u7701\u9009\u96c6\u8bad2019]\u751f\u6210\u6811\u8ba1\u6570\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&emsp;&emsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P5296)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&emsp;&emsp;\u8003\u5bdf\u4e00\u4e0b\u77e9\u9635\u6811\u5b9a\u7406\u7684\u57fa\u672c\u5f0f\u5b50\uff1a   \n    \n$$\\sum_T \\prod_{e\\in T} w_e$$    \n     \n&emsp;&emsp;\u8bbe$v(T)$\u4e3a$T$\u7684\u6743\u503c\uff0c\u6211\u4eec\u53d1\u73b0\uff0c$v(T)$\u5e94\u8be5\u662f$T$\u4e2d\u7684\u8fb9\u7684\u201c\u67d0\u79cd\u610f\u4e49\u201d\u4e0b\u7684**\u79ef**\u3002   \n    \n&emsp;&emsp;\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ea\u9700\u8981\u80fd\u591f**\u4fdd\u8bc1$v(T)$\u7684\u8d21\u732e\u53ef\u5206\u5272\uff0c\u4fbf\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5b58\u5728\u57fa\u7840\u56db\u5219\u8fd0\u7b97\u7684\u201c\u7c7b\u578b\u201d\uff0c\u6ee1\u8db3\u8be5\u201c\u7c7b\u578b\u201d\u7684\u79ef\u5c31\u76f8\u5f53\u4e8e\u5408\u5e76\u4e86\u8fb9\u7684\u8d21\u732e**\u3002\u5229\u7528\u8be5\u201c\u7c7b\u578b\u201d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u77e9\u9635\u6811\u5b9a\u7406\u8ba1\u7b97\u6240\u6709\u751f\u6210\u6811\u7684\u8d21\u732e\u3002      \n    \n&emsp;&emsp;\u4f8b\u5982\uff0c\u4e00\u822c\u77e9\u9635\u6811\u5b9a\u7406\uff0c\u5229\u7528\uff08\u5e26\u6a21\uff09\u6574\u6570\u7684\u8fd0\u7b97\u5373\u53ef\uff1b   \n   \n&emsp;&emsp;\u518d\u4f8b\u5982\uff0c\u6c42\u8fb9\u6743\u548c\u7684\u77e9\u9635\u6811\u5b9a\u7406\uff0c\u5229\u7528\u201c\u4e00\u6b21\u51fd\u6570\u201d\u7684\u201c\u79ef\u201d\uff0c\u6211\u4eec\u6c42\u51fa\u4e86\u7cfb\u6570\u7684\u201c\u548c\u201d\u3002   \n   \n&emsp;&emsp;\u5bf9\u4e8e\u6b64\u9898\uff0c\u6211\u4eec\u8003\u8651\u5c06\u201c\u5408\u5e76\u8d21\u732e\u201d\u4f5c\u4e3a\u5207\u5165\u70b9\uff0c\u5373\u8003\u8651\u5df2\u77e5$a^k,b^k$\uff0c\u5982\u4f55\u6c42\u51fa$(a+b)^k$\u3002   \n   \n&emsp;&emsp;\u5f53\u7136\u8fd9\u6837\u6ca1\u6cd5\u505a\uff0c\u6211\u4eec\u8003\u8651\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\u5c55\u5f00\uff1a   \n   \n$$(a+b)^k=\\sum_{i=0}^k\\binom{k}{i}a^ib^{k-i}$$   \n    \n&emsp;&emsp;\u8fd9\u6837\u9700\u8981\u7528\u5230\u8f83\u4f4e\u6b21\u5e42\uff0c\u4e0d\u8fc7\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e0b\u8f83\u4f4e\u6b21\u5e42\uff0c\u5408\u5e76\u65b9\u6cd5\u7c7b\u4f3c\u3002   \n   \n&emsp;&emsp;~~\u4ed4\u7ec6\u89c2\u5bdf\u4f60\u4f1a\u53d1\u73b0\u8fd9\u662f\u6307\u6570\u751f\u6210\u51fd\u6570\u7684\u5377\u79ef\uff0c\u4e0d\u8fc7\u5728\u8fd9\u9053\u9898\u91cc\u9762\u6ca1\u6709\u7528\u3002~~   \n   \n&emsp;&emsp;\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u7528\u957f\u4e3a$k+1$\u7684\u5411\u91cf$\\vec{z}=\\begin{bmatrix}a^0&a^1&a^2&\\dots&a^k\\end{bmatrix}$\u8868\u793a\u8d21\u732e\u5373\u53ef\u3002   \n   \n&emsp;&emsp;\u52a0\u6cd5\u548c\u51cf\u6cd5\uff1a\u4e0d\u518d\u8d58\u8ff0\u3002   \n   \n&emsp;&emsp;\u4e58\u6cd5\uff1a\u201c\u4e8c\u9879\u5f0f\u5377\u79ef\u201d\u3002   \n   \n&emsp;&emsp;\u6c42\u9006\u5143\uff1a\u53ef\u4ee5\u6b21\u6570\u4ece\u4f4e\u5230\u9ad8\u8fdb\u884c\u9012\u63a8\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002   \n   \n&emsp;&emsp;\u5355\u6b21\u4e58\u6cd5$O(k^2)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(n^3k^2)$\u3002   \n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\n\nconst int mod = 998244353;\nconst int MAXN = 35;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\nint C[MAXN][MAXN], invC[MAXN][MAXN];\nint K;\n\nint inv( const int );\nint qkpow( int, int );\nvoid add( int&, const int );\nvoid sub( int&, const int );\n\nstruct vec\n{\n\tint num[MAXN] = {};\n\t\n\t//h(i)=\u00a1\u00c6{j=0...n}f(j)*g(i-j)*C(i,j) \n\t\n\tvec() {}\n\tvec( const int b ) { num[0] = b; }\n\t\n\tint& operator [] ( const int indx ) { return num[indx]; }\n\t\n\tvec inver() const\n\t{\n\t\tvec ret;\n\t\tret[0] = inv( num[0] );\n\t\tfor( int i = 1, tmp ; i <= K ; i ++ )\n\t\t{\n\t\t\ttmp = 0;\n\t\t\tfor( int j = 0 ; j < i ; j ++ )\n\t\t\t\tadd( tmp, 1ll * ret[j] * num[i - j] % mod * C[i][j] % mod );\n\t\t\tret[i] = 1ll * ( mod - tmp ) % mod * ret[0] % mod;\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\tvec operator + ( vec g ) const\n\t{\n\t\tvec ret;\n\t\tfor( int i = 0 ; i <= K ; i ++ )\n\t\t\tadd( ret[i], num[i] ), add( ret[i], g[i] );\n\t\treturn ret;\n\t}\n\t\n\tvec operator - ( vec g ) const \n\t{\n\t\tvec ret;\n\t\tfor( int i = 0 ; i <= K ; i ++ )\n\t\t\tadd( ret[i], num[i] ), sub( ret[i], g[i] );\n\t\treturn ret;\n\t}\n\n\tvec operator * ( vec g ) const \n\t{\n\t\tvec ret;\n\t\tfor( int i = 0 ; i <= K ; i ++ )\n\t\t\tfor( int j = 0 ; j <= i ; j ++ )\n\t\t\t\tadd( ret[i], 1ll * num[j] * g[i - j] % mod * C[i][j] % mod );\n\t\treturn ret;\n\t}\n\t\n\tvec operator / ( vec g ) const { return g * inver(); }\n\tvoid operator += ( vec g ) { *this = *this + g; }\n\tvoid operator -= ( vec g ) { *this = *this - g; }\n\tvoid operator *= ( vec g ) { *this = *this * g; }\n\tvoid operator /= ( vec g ) { *this = *this / g; }\n\n\toperator bool() const \n\t{\n\t\tbool ret = false;\n\t\tfor( int i = 0 ; i <= K ; i ++ )\n\t\t\tret |= num[i]; \n\t\treturn ret; \n\t} \n};\n\nvec D[MAXN][MAXN], G[MAXN][MAXN], Kich[MAXN][MAXN];\nint N;\n\nint qkpow( int base, int indx )\n{\n\tint ret = 1;\n\twhile( indx )\n\t{\n\t\tif( indx & 1 ) ret = 1ll * ret * base % mod;\n\t\tbase = 1ll * base * base % mod, indx >>= 1;\n\t}\n\treturn ret;\n}\n\nint inv( const int a ) { return qkpow( a, mod - 2 ); }\nvoid sub( int &x, const int v ) { x = ( x < v ? x - v + mod : x - v ); }\nvoid add( int &x, const int v ) { x = ( x + v >= mod ? x + v - mod : x + v ); }\n\nint det( vec T[][MAXN], const int n )\n{\n\tvec ans = 1, tmp, inver; int indx;\n\tfor( int i = 1 ; i <= n ; i ++ )\n\t{\n\t\tindx = -1;\n\t\tfor( int j = i ; j <= n ; j ++ )\n\t\t\tif( T[j][i] ) \n\t\t\t{ indx = j; break; }\n\t\tif( indx == -1 ) return 0;\n\t\tif( indx ^ i ) \n\t\t\tfor( int k = 0 ; k <= K ; k ++ )\n\t\t\t\tans[k] = mod - ans[k];\n\t\tstd :: swap( T[i], T[indx] );\n\t\tinver = T[i][i].inver();\n\t\tfor( int j = i + 1 ; j <= n ; j ++ )\n\t\t\tif( T[j][i] )\n\t\t\t{\n\t\t\t\ttmp = T[j][i] * inver;\n\t\t\t\tfor( int k = i ; k <= n ; k ++ )\t\n\t\t\t\t\tT[j][k] -= T[i][k] * tmp;\n\t\t\t}\n\t\tans *= T[i][i];\n\t}\n\treturn ans[K];\n}\n\nint main()\n{\n\tint w;\n\tread( N ), read( K );\n\tfor( int i = 0 ; i <= K ; i ++ )\n\t{\n\t\tC[i][0] = C[i][i] = 1;\n\t\tfor( int j = 1 ; j < i ; j ++ )\n\t\t\tadd( C[i][j], C[i - 1][j] ), add( C[i][j], C[i - 1][j - 1] );\n\t}\n\tint t;\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tfor( int j = 1 ; j <= N ; j ++ )\n\t\t{\n\t\t\tread( w ), t = 1;\n\t\t\tfor( int k = 0 ; k <= K ; k ++ )\n\t\t\t\tG[i][j][k] = t, t = 1ll * t * w % mod;\n\t\t}\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tfor( int j = 1 ; j <= N ; j ++ )\n\t\t\tD[i][i] += G[i][j];\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tfor( int j = 1 ; j <= N ; j ++ )\n\t\t\tKich[i][j] = D[i][j] - G[i][j];\n\twrite( det( Kich, N - 1 ) ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1593842583,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[\u5317\u4eac\u7701\u9009\u96c6\u8bad2019]\u751f\u6210\u6811\u8ba1\u6570"
    },
    {
        "content": "## \u9898\u610f\n\u5b9a\u4e49\u4e00\u68f5\u751f\u6210\u6811\u7684\u6743\u503c\u4e3a\u5176\u8fb9\u6743\u548c\u7684 $k$ \u6b21\u65b9\uff0c\u6c42\u6240\u6709\u751f\u6210\u6811\u7684\u6743\u503c\u4e4b\u548c\u3002\n## \u9898\u89e3\n\u6570\u636e\u8303\u56f4\u5f88\u77e9\u9635\u6811\u3002~~\u88ab\u51fa\u70c2\u7684\u8001\u5957\u8def\u4e86~~\n\n\u6211\u4eec\u7684\u77e9\u9635\u6811\u5b9a\u7406\u53ea\u80fd\u6c42\u6240\u6709\u7684\u79ef\u7684\u548c\uff0c\u56e0\u6b64\u5f3a\u884c\u628a\u548c\u5316\u4e3a\u79ef\u3002\n\n\u53ef\u4ee5\u53d1\u73b0 $(w_1+\\ldots+w_m)^k$ \u76f8\u5f53\u4e8e\u628a $k$ \u4e2a\u4e0d\u540c\u5c0f\u7403\u6d82\u4e0a $\\sum w_i$ \u79cd\u989c\u8272\uff0c$w$ \u79cd\u7684 $\\mathbf{EGF}$ \u662f $e^{wx}$\uff0c\u4e8e\u662f\u5c31\u53d8\u6210 $k![x^n]\\prod_i e^{w_ix}$\u3002\n\n\u5f53\u7136\u5982\u679c\u53d1\u73b0 $k![x^k]e^{(w_1+\\ldots+w_m)x}=(w_1+\\ldots+w_m)^k$ \u5c31\u66f4\u5bb9\u6613\u4e86\u3002\n\n\u4e8e\u662f\u73b0\u5728\u5df2\u7ecf\u662f\u79ef\u7684\u548c\u7684\u5f62\u5f0f\uff0c\u628a\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u5b9a\u4e49\u4e3a $e^{w_ix}$\uff0c\u90a3\u4e48\u6240\u6709\u7684\u751f\u6210\u6811\u7684\u6743\u503c\u79ef\u7684\u548c\u5c31\u662f\u6211\u4eec\u5e0c\u671b\u7684\u751f\u6210\u51fd\u6570\u4e86\uff0c\u5177\u4f53\u5730\uff0c\u5bf9\u4e8e\u4e00\u68f5\u6811 $T$ \u548c\u8fb9\u96c6 $e$\uff1a\n$$\\begin{aligned}\n&\\sum_{T}(w_{e_1}+\\ldots+w_{e_{n-1}})^k\\\\\n=&\\sum_{T}k![x^k]\\prod e^{w_{e_i}x}\\\\\n=&k![x^k]\\sum_{T}\\prod e^{w_{e_i}x}\n\\end{aligned}$$\n\u628a\u591a\u9879\u5f0f\u6254\u8fdb\u77e9\u9635\u8dd1\u9ad8\u65af\u6d88\u5143\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n\u7531\u4e8e $k$ \u5341\u5206\u5c0f\uff0c\u66b4\u529b\u5377\u79ef/\u6c42\u9006\u5373\u53ef\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=35,K=32;\ntemplate<const int mod>\nstruct modint{\n    int x;\n    modint<mod>(int o=0){x=o;}\n    modint<mod> &operator = (int o){return x=o,*this;}\n    modint<mod> &operator +=(modint<mod> o){return x=x+o.x>=mod?x+o.x-mod:x+o.x,*this;}\n    modint<mod> &operator -=(modint<mod> o){return x=x-o.x<0?x-o.x+mod:x-o.x,*this;}\n    modint<mod> &operator *=(modint<mod> o){return x=1ll*x*o.x%mod,*this;}\n    modint<mod> &operator ^=(int b){\n        modint<mod> a=*this,c=1;\n        for(;b;b>>=1,a*=a)if(b&1)c*=a;\n        return x=c.x,*this;\n    }\n    modint<mod> &operator /=(modint<mod> o){return *this *=o^=mod-2;}\n    modint<mod> &operator +=(int o){return x=x+o>=mod?x+o-mod:x+o,*this;}\n    modint<mod> &operator -=(int o){return x=x-o<0?x-o+mod:x-o,*this;}\n    modint<mod> &operator *=(int o){return x=1ll*x*o%mod,*this;}\n    modint<mod> &operator /=(int o){return *this *= ((modint<mod>(o))^=mod-2);}\n\ttemplate<class I>friend modint<mod> operator +(modint<mod> a,I b){return a+=b;}\n    template<class I>friend modint<mod> operator -(modint<mod> a,I b){return a-=b;}\n    template<class I>friend modint<mod> operator *(modint<mod> a,I b){return a*=b;}\n    template<class I>friend modint<mod> operator /(modint<mod> a,I b){return a/=b;}\n    friend modint<mod> operator ^(modint<mod> a,int b){return a^=b;}\n    friend bool operator ==(modint<mod> a,int b){return a.x==b;}\n    friend bool operator !=(modint<mod> a,int b){return a.x!=b;}\n    bool operator ! () {return !x;}\n    modint<mod> operator - () {return x?mod-x:0;}\n\tmodint<mod> &operator++(int){return *this+=1;}\n};\nconst int mod=998244353;\ntypedef modint<mod> mint;\nint n,k=20,w[N][N];\nstruct poly{\n\tmint a[K];\n\tpoly(mint C=0){memset(a,0,sizeof a);a[0]=C;}\n\tmint&operator[](const int x){return a[x];}\n\tpoly inv(){poly c(1/a[0]);for(int i=1;i<=k;i++){for(int j=0;j<i;j++)c[i]-=c[j]*a[i-j];c[i]/=a[0];}return c;}\n\tpoly operator+(poly b)const{poly c;for(int i=0;i<=k;i++)c[i]=a[i]+b[i];return c;}\n\tpoly operator-(poly b)const{poly c;for(int i=0;i<=k;i++)c[i]=a[i]-b[i];return c;}\n\tpoly operator*(poly b)const{poly c;for(int i=0;i<=k;i++)for(int j=0;j<=i;j++)c[i]+=a[j]*b[i-j];return c;}\n\tpoly operator/(poly b)const{return *this*b.inv();}\n\tpoly operator-(){poly c;for(int i=0;i<=k;i++)c[i]=-a[i];return c;}\n\tpoly&operator+=(poly b){return *this=*this+b;}\n\tpoly&operator-=(poly b){return *this=*this-b;}\n\tpoly&operator*=(poly b){return *this=*this*b;}\n\tpoly&operator/=(poly b){return *this=*this/b;}\n}a[N][N];\nmint fac[N],ifac[N];\npoly Exp(mint w){poly A;mint tmp=1;for(int i=0;i<=k;i++,tmp*=w)A[i]=tmp*ifac[i];return A;}\npoly det(int n){\n\tpoly res(1);\n\tfor(int i=1;i<=n;i++){\n\t\tint k=i;\n\t\tfor(int j=i;j<=n;j++)\n\t\t\tif(a[j][i].a[0]!=0)k=j;\n\t\tif(a[k][i].a[0]==0)return poly(0);\n\t\tif(k!=i)swap(a[i],a[k]),res=-res;\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tpoly inv=a[j][i]/a[i][i];\n\t\t\tfor(int l=i;l<=n;l++)\n\t\t\t\ta[j][l]-=a[i][l]*inv;\n\t\t}\n\t\tres*=a[i][i];\n\t}\n\treturn res;\n}\nsigned main(){\n\tfac[0]=ifac[0]=1;for(int i=1;i<N;i++)fac[i]=fac[i-1]*i,ifac[i]=1/fac[i];\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tcin>>w[i][j];\n\t\t\tif(i<j){\n\t\t\t\tpoly tmp=Exp(w[i][j]);\n\t\t\t\ta[i][i]+=tmp;\n\t\t\t\ta[j][j]+=tmp;\n\t\t\t\ta[i][j]-=tmp;\n\t\t\t\ta[j][i]-=tmp;\n\t\t\t}\n\t\t}\n\tcout<<(det(n-1)[k]*fac[k]).x;\n}\n```",
        "postTime": 1617253183,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5296 \u3010[\u5317\u4eac\u7701\u9009\u96c6\u8bad2019]\u751f\u6210\u6811\u8ba1\u6570\u3011"
    },
    {
        "content": "\u5b89\u5229$:$ [\u6742\u9898\u9009\u505a](https://www.luogu.com.cn/blog/s-r-f/liu-yue-qi-yue-za-ti-xuan-zuo)\n\n\u9996\u5148\u6211\u4eec\u6765\u89c2\u5bdf\u4e00\u4e0b\u89c4\u5f8b$.$\n\n\u5f53$k=0$\u65f6\u5c31\u662f\u76f4\u63a5$Matrix-Tree.$\n\n$k=1$\u65f6\u5c31\u662f\u8054\u5408\u7701\u9009\u90a3\u4e2a\u5957\u8def$,$\u662f\u628a\u8fb9\u6743$w$\u53d8\u6210$1+wx.$\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e9b\u5f0f\u5b50\u90fd\u662f$e^{wx},$\u540c\u65f6\u4f60\u4f1a\u53d1\u73b0\u7531\u4e8e\u4e8c\u9879\u5f0f\u5b9a\u7406$,$\u53ef\u4ee5\u8bc1\u660e\u7528$e^{wx}$\u5f53\u8fb9\u6743$,$\u6700\u540e\u53d6\u7b54\u6848\u7684$k$\u6b21\u9879\u7cfb\u6570\u662f\u6b63\u786e\u7684$.$\n\n\u6240\u4ee5\u628a\u8fb9\u6743 $w$ \u53d8\u6210 $e^{wx}$ \u7136\u540e\u6c42\u4e00\u4e0b\u5728 $\\pmod{x^{k+1}}$ \u610f\u4e49\u4e0b\u7684\u884c\u5217\u5f0f\u5373\u53ef $.$\n\n\u56e0\u4e3a $k$ \u6bd4\u8f83\u5c0f $,$ \u6240\u4ee5\u6c42\u9006\u548c\u591a\u9879\u5f0f\u4e58\u6cd5\u53ea\u80fd\u5199$O(k^2)$ $,$ \u76f4\u63a5\u5957$NTT$\u677f\u5b50\u4f1a\u53d8\u6162 $.$\n\n\u590d\u6742\u5ea6 $O(n^3k^2).$\n\n\u4ee3\u7801$:$\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\nconst int N = 32,K = 32,P = 998244353;\ninline int power(int x,LL y){\n\tstatic int r; r = 1; while (y){ if (y&1) r = (LL)r * x % P; x = (LL)x * x % P; y >>= 1; } return r;\n}\nint n,k,d[N][N],fac[505],nfac[505],inv[505];\nstruct Function{\n\tint a[K];\n\tinline void init(int w){ for (int i = 0,r = 1; i <= k; ++i,r = (LL)r * w % P) a[i] = (LL)nfac[i] * r % P; }\n}A[N][N];\n\nFunction operator + (Function F,Function G){\n\tstatic int i; static Function T;\n\tfor (i = 0; i <= k; ++i) T.a[i] = (F.a[i]+G.a[i]>=P)?(F.a[i]+G.a[i]-P):(F.a[i]+G.a[i]);\n\treturn T;\n}\nFunction operator - (Function F,Function G){\n\tstatic int i; static Function T;\n\tfor (i = 0; i <= k; ++i) T.a[i] = (F.a[i]<G.a[i])?(F.a[i]-G.a[i]+P):(F.a[i]-G.a[i]);\n\treturn T;\n}\nFunction operator * (Function F,Function G){\n\tstatic int i,j; static Function T;\n\tfor (i = 0; i <= k; ++i)\n\tfor (T.a[i] = j = 0; j <= i; ++j) T.a[i] = (T.a[i] + (LL)F.a[j] * G.a[i-j]) % P;\n\treturn T;\n}\nFunction Inv(Function A){\n\tstatic int i,j,ret; static Function T;\n\tT.a[0] = power(A.a[0],P-2);\n\tfor (i = 1; i <= k; ++i){\n\t\tfor (ret = 0,j = 0; j < i; ++j) ret = (ret + (LL)T.a[j]*A.a[i-j]) % P;\n\t\tT.a[i] = (LL)(P-ret) * T.a[0] % P;\n\t}\n\treturn T;\n}\n\nFunction det(){\n\tint i,j,k; Function tmp,ans;\n\tans.init(0),ans.a[0] = 1;\n\tfor (i = 2; i <= n; ++i){\n\t\tans = ans * A[i][i]; tmp = Inv(A[i][i]); for (j = i; j <= n; ++j) A[i][j] = A[i][j] * tmp;\n\t\tfor (j = i+1; j <= n; ++j){\n\t\t\ttmp = A[j][i];\n\t\t\tfor (k = i; k <= n; ++k) A[j][k] = A[j][k] - tmp * A[i][k];\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint i,j,x; Function tmp;\n\tfac[0] = nfac[0] = inv[0] = fac[1] = nfac[1] = inv[1] = 1;\n\tfor (i = 2; i <= 500; ++i){\n\t\tfac[i] = (LL)fac[i-1] * i % P;\n\t\tinv[i] = (LL)(P-P/i) * inv[P%i] % P;\n\t\tnfac[i] = (LL)nfac[i-1] * inv[i] % P;\n\t}\n\tcin >> n >> k;\n\tfor (i = 1; i <= n; ++i) for (j = 1; j <= n; ++j){\n\t\tcin >> x; if (i >= j) continue; tmp.init(x);\n\t\tA[i][j] = A[i][j] - tmp,A[j][i] = A[j][i] - tmp;\n\t\tA[i][i] = A[i][i] + tmp,A[j][j] = A[j][j] + tmp;\n\t}\n\tcout << (LL)fac[k] * det().a[k] % P << '\\n';\n\treturn 0;\n}\n```",
        "postTime": 1594119685,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5296 \u3010[\u5317\u4eac\u7701\u9009\u96c6\u8bad2019]\u751f\u6210\u6811\u8ba1\u6570\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u4f7f\u7528\u7ec4\u5408\u610f\u4e49\u7684\uff0c\u8f83\u4e3a\u4e0d\u540c\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u53d1\u73b0 $k$ \u8f83\u5c0f\uff0c\u8003\u8651\u62c6\u8d21\u732e\uff1a\n\n$$\nx^k=\\sum_{i=0}^k\\binom{x}{i}\\begin{Bmatrix}k\\\\i\\end{Bmatrix}i!\n$$\n\n\u90a3\u4e48\u73b0\u5728\u548c\u751f\u6210\u6811\u8d21\u732e\u6709\u5173\u7684\u53ea\u6709 $\\dbinom{x}{i}$ \u4e86\u3002\u7531\u4e8e $\\dbinom{x}{i}=\\dbinom{\\sum w}{i}$\uff0c\u5b83\u7684\u7ec4\u5408\u610f\u4e49\u5c31\u662f\u4ece $\\sum w$ \u4e2a\u7403\u91cc\u9762\u9009 $i$ \u4e2a\u7684\u65b9\u6848\u6570\u3002\n\n\u6ce8\u610f\u5230 $\\dbinom{a+b}{n}=\\sum_{i=0}^n\\dbinom{a}{i}\\dbinom{b}{n-i}$\uff0c\u8fd9\u662f\u4e00\u4e2a\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u5bf9\u6bcf\u6761\u8fb9\u7ef4\u62a4\u4e00\u4e2a\u591a\u9879\u5f0f $F_t(x)=\\sum_{i=0}^k\\dbinom{w_t}{i}x^i$\uff0c\u90a3\u4e48\u5c31\u6709 $[x^i]F_a(x)F_b(x)=\\dbinom{w_a+w_b}{i}x^i$\u3002\n\n\u5957\u7528\u77e9\u9635\u6811\u5b9a\u7406\u6c42\u89e3\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3k^2)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(int i=(a);i<=(b);++i)\n#define Rof(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\nconst int Maxn=30,Mod=998244353;\n\ninline int Pow(int x,int y)\n{\n    int res=1;\n    while(y)\n    {\n        if(y&1) res=1ll*res*x%Mod;\n        x=1ll*x*x%Mod,y>>=1;\n    }\n    return res;\n}\ninline int C(int x,int y)\n{\n    if(x<y) return 0;\n    int a=1; For(i,0,y-1) a=1ll*a*(x-i)%Mod*Pow(i+1,Mod-2)%Mod;\n    return a;\n}\n\nstruct Poly\n{\n    int p[31];\n    inline Poly() {memset(p,0,sizeof(p));}\n    inline int&operator()(int x) {return p[x];}\n    inline Poly(int a) {For(i,0,30) p[i]=C(a,i);}\n    inline Poly Inv()\n    {\n        Poly a; int inv=Pow(p[0],Mod-2); a(0)=inv;\n        For(i,1,30)\n        {\n            int res=0;\n            For(j,0,i-1) res=(res+1ll*a(j)*p[i-j]%Mod)%Mod;\n            a(i)=1ll*inv*(Mod-res)%Mod;\n        }\n        return a;\n    }\n} Zero,One;\ninline Poly operator+(Poly a,Poly b) {For(i,0,30) a(i)=(a(i)+b(i))%Mod; return a;}\ninline Poly operator-(Poly a,Poly b) {For(i,0,30) a(i)=(a(i)-b(i)+Mod)%Mod; return a;}\ninline Poly operator*(Poly a,Poly b) {Poly c; For(i,0,30) For(j,0,i) c(i)=(c(i)+1ll*a(j)*b(i-j)%Mod)%Mod; return c;}\ninline Poly operator/(Poly a,Poly b) {return a*b.Inv();}\ninline bool operator==(Poly a,Poly b) {For(i,0,30) if(a(i)!=b(i)) return false; return true;}\ninline bool operator!=(Poly a,Poly b) {For(i,0,30) if(a(i)!=b(i)) return true; return false;}\n\nint n,m,all,str[Maxn+5][Maxn+5];\nPoly f[Maxn+5][Maxn+5]; int g[Maxn+5][Maxn+5];\n\ninline int Fac(int x) {int res=1; For(i,1,x) res=1ll*res*i%Mod; return res;}\ninline Poly Gauss()\n{\n    Poly res=One;\n    For(i,1,n-1)\n    {\n        int p=i; Poly now;\n        For(j,i+1,n-1) if(f[j][i]!=Zero) {p=j; break;}\n        if(p>i) swap(f[i],f[p]),res=res*(Zero-One);\n        res=res*f[i][i],now=f[i][i].Inv();\n        For(j,i,n-1) f[i][j]=f[i][j]*now;\n        For(j,i+1,n-1)\n        {\n            now=Zero-f[j][i];\n            For(k,i,n-1) f[j][k]=f[j][k]+now*f[i][k];\n        }\n    }\n    return res;\n}\n\nint main()\n{\n    cin>>n>>m; str[0][0]=1,One(0)=1;\n    For(i,1,m) For(j,1,i)\n        str[i][j]=(str[i-1][j-1]+1ll*j*str[i-1][j]%Mod)%Mod;\n    For(i,1,n) For(j,1,n) cin>>g[i][j];\n    For(i,1,n) For(j,1,n) if(i!=j)\n        f[i][j]=Zero-Poly(g[i][j]),f[i][i]=f[i][i]+Poly(g[i][j]);\n    Poly ans=Gauss();\n    For(i,0,30) all=(all+1ll*str[m][i]*Fac(i)%Mod*ans(i)%Mod)%Mod;\n    printf(\"%d\\n\",all);\n    return 0;\n}\n```",
        "postTime": 1672823238,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5296\u3010[\u5317\u4eac\u7701\u9009\u96c6\u8bad2019]\u751f\u6210\u6811\u8ba1\u6570\u3011"
    },
    {
        "content": "2333\u4e3a\u4ec0\u4e48\u6a21\u62df\u8d5b\u653e\u8fd9\u79cd\u9898\u554a\u3002\n\n\u4e4b\u524d\u505a\u5230\u8fc7\u8054\u5408\u7701\u9009\u7684\u9898\uff0c\u90a3\u9898\u53ea\u9700\u8981\u628a\u8fb9\u6743\u53d8\u6210 $1+wx$ \u7136\u540e\u77e9\u9635\u6811\u5c31\u884c\u3002\n\n\n\u5c1d\u8bd5\u7ed9\u8fd9\u4e2a\u4e00\u4e2a\u8fb9\u6743\u3002\n\n\u5982\u679c\u5f53\u524d\u7684\u7b54\u6848\u662f $u$\uff0c\u8981\u52a0\u5165\u7684\u8fb9\u6743\u662f $v$,\u6211\u4eec\u8981\u4f7f\u5f97 $uv$ \u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u7b54\u6848\u3002\n\n\u800c\u663e\u7136\u6211\u4eec\u770b\u5230 $k$ \u6b21\u65b9\u53ef\u4ee5\u8054\u60f3\u5230 $(u+v)^k = \\sum \\binom{k}{i} u^i v^{k-i}$\u3002\n\n$(u+v)^k = \\sum \\frac{k!}{i!(k-i)!} u^i v^{k-i}$\u3002\n\n\u8fdb\u4e00\u6b65\u7684\uff0c\u6211\u4eec\u5c06 $k!$ \u653e\u5230\u5de6\u8fb9\u3002\n\n$\\frac{(u+v)^k}{k!} = \\sum \\frac{u^i v^{k-i}}{i!(k-i)!}$\n\n\n\u6070\u597d\u662f EGF \u7684\u5f62\u5f0f\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4ee4 $w' = e^{w}$\uff0c\u76f4\u63a5\u77e9\u9635\u6811\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int P = 998244353;\nint n, k;\nvector<long long> fact, ifact;\nlong long power(long long x, long long y) {\n long long res = 1;\n while (y) {\n  if (y & 1) {\n   res = res * x % P;\n  }\n  x = x * x % P;\n  y /= 2;\n }\n return res;\n}\nvector<long long> exp(int w) {\n vector<long long> e(k + 1);\n long long p = 1;\n for (int i = 0; i <= k; i++) {\n  e[i] = p * ifact[i] % P;\n  p *= w;\n  p %= P;\n }\n return e;\n}\nvector<long long> operator -(const vector<long long> &a, const vector<long long> &b) {\n vector<long long> c(k + 1);\n for (int i = 0; i <= k; i++) {\n  c[i] = a[i] - b[i];\n  if (c[i] < 0) {\n   c[i] += P;\n  }\n }\n return c;\n}\nvector<long long> operator +(const vector<long long> &a, const vector<long long> &b) {\n vector<long long> c(k + 1);\n for (int i = 0; i <= k; i++) {\n  c[i] = a[i] + b[i];\n  if (c[i] >= P) {\n   c[i] -= P;\n  }\n }\n return c;\n}\nvector<long long> operator *(const vector<long long> &a, const vector<long long> &b) {\n vector<long long> c(k + 1);\n for (int i = 0; i <= k; i++) {\n  for (int j = 0; j <= k - i; j++) {\n   if (i + j <= k) {\n    c[i + j] += a[i] * b[j] % P;\n    if (c[i + j] >= P) {\n     c[i + j] -= P;\n    }\n   }\n  }\n }\n return c;\n}\nvector<long long> inv(const vector<long long> &a) {\n vector<long long> b(k + 1);\n b[0] = power(a[0], P - 2);\n for (int i = 1; i <= k; i++) {\n  for (int j = 0; j < i; j++) {\n   b[i] -= b[j] * a[i - j] % P;\n   if (b[i] < 0) {\n    b[i] += P;\n   }\n  }\n  b[i] = b[i] * b[0] % P;\n }\n return b;\n}\nvector<long long> solve(vector<vector<vector<long long>>> e) {\n int n = (int) e.size();\n bool rev = false;\n for (int i = 0; i < n; i++) {\n  int p = n;\n  for (int j = i; j < n; j++) {\n   if (e[j][i][0]) {\n    p = j;\n    break;\n   }\n  }\n  if (p == n) {\n   return {-1};\n  }\n  if (p != i) {\n   swap(e[i], e[p]);\n   rev = !rev;\n  }\n  auto iv = inv(e[i][i]);\n  for (int j = i + 1; j < n; j++) {\n   auto coef = e[j][i] * iv;\n   for (int k = i; k <= n; k++) {\n    e[j][k] = e[j][k] - coef * e[i][k];\n   }\n  }\n }\n vector<long long> res(k + 1);\n res[0] = 1;\n for (int i = 0; i < n; i++) {\n  res = res * e[i][i];\n }\n if (rev) {\n  for (int i = 0; i < n; i++) {\n   res[i] = P - res[i];\n  }\n }\n return res;\n}\nint main() {\n ios::sync_with_stdio(false);\n cin.tie(NULL);\n cin >> n >> k;\n fact.resize(k + 1);\n ifact.resize(k + 1);\n fact[0] = ifact[0] = 1;\n for (int i = 1; i <= k; i++) {\n  fact[i] = fact[i - 1] * i % P;\n  ifact[i] = power(fact[i], P - 2);\n }\n vector<vector<vector<long long>>> e(n, vector<vector<long long>>(n, vector<long long>(k + 1, 0LL)));\n for (int i = 0; i < n; i++) {\n  for (int j = 0; j < n; j++) {\n   int w;\n   cin >> w;\n   if (i < j) {\n    auto ew = exp(w);\n    e[i][i] = e[i][i] + ew;\n    e[j][j] = e[j][j] + ew;\n    e[i][j] = e[i][j] - ew;\n    e[j][i] = e[j][i] - ew;\n   }\n  }\n }\n e.resize(n - 1);\n auto res = solve(e);\n cout << res[k] * fact[k] % P << \"\\n\";\n return 0;\n}\n```",
        "postTime": 1636958857,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "P5296 [\u5317\u4eac\u7701\u9009\u96c6\u8bad2019]\u751f\u6210\u6811\u8ba1\u6570"
    }
]