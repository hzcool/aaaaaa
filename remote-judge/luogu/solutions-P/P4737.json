[
    {
        "content": "\u6211\u4eec\u9996\u5148\u6c42\u51fa\u6bcf\u4e2a\u6805\u680f\u5b9e\u9645\u5305\u542b\u7684\u725b\u7684\u6570\u91cf\uff08\u4e5f\u5c31\u662f\u4e0d\u7b97\u88ab\u540e\u9762\u7684\u6805\u680f\u5305\u542b\u7684\uff09\u3002\n\n\u4ece\u4e0a\u5f80\u4e0b\u626b\u63cf\u7ebf\uff0c\u5e76\u7528 `set` \u7ef4\u62a4\u6240\u6709\u5f80\u4e0b\u7684\u6805\u680f\u7684\u6a2a\u5750\u6807\u3002\n\n- \u5982\u679c\u5f53\u524d\u70b9\u662f\u725b\uff0c\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684 $x\\geq$ \u5b83\u7684\u6a2a\u5750\u6807\u7684\u6805\u680f\uff0c\u5219\u6700\u7ec8\u8fd9\u4e2a\u6805\u680f\u5305\u542b\u8fd9\u5934\u725b\uff1b\n- \u5982\u679c\u5f53\u524d\u70b9\u662f\u6805\u680f\uff0c\u6211\u4eec\u628a\u5b83\u52a0\u5165 `set` \u4e2d\uff0c\u7136\u540e\u6a21\u62df\u4e00\u904d\u5f80\u5de6\u5ef6\u4f38\u7684\u8fc7\u7a0b\uff0c\u628a\u7f16\u53f7\u6bd4\u5b83\u5927\u7684\u8fde\u7eed\u7684\u4e00\u6bb5\u5220\u6389\u3002\n\n\u63a5\u7740\u6c42\u51fa\u6bcf\u4e2a\u6805\u680f\u52a0\u5165\u65f6\u5305\u542b\u7684\u725b\u7684\u6570\u91cf\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c A \u5305\u542b B\uff0c\u4e14 A \u52a0\u5165\u65f6\u95f4\u6bd4 B \u65e9\uff0c\u90a3\u4e48 B \u7684\u7b54\u6848\u8981\u52a0\u5230 A \u4e2d\u53bb\u3002\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5b9e\u9645\u6784\u6210\u4e00\u4e2a\u6811\u5f62\u5173\u7cfb\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ece\u524d\u5f80\u540e\u626b\uff0c\u7136\u540e\u628a\u7236\u8fb9\u65ad\u6389\uff0c\u8fd9\u6837\u5b50\u626b\u5230\u6bcf\u4e2a\u70b9\u65f6\u5b83\u7684 $size$ \u5c31\u662f\u7b54\u6848\u4e86\u3002\u53ef\u4ee5\u76f4\u63a5 LCT \u7ef4\u62a4\u3002\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d LCT\uff0c\u76f4\u63a5\u5012\u8fc7\u6765\u53d8\u6210\u52a0\u8fb9\uff0c\u5c31\u5f88\u597d\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e86\u3002\n\n```cpp\n// ====================================\n//   author: M_sea\n//   website: https://m-sea-blog.com/\n// ====================================\n#include <bits/stdc++.h>\n#define file(x) freopen(#x\".in\",\"r\",stdin); freopen(#x\".out\",\"w\",stdout)\n#define debug(...) fprintf(stderr,__VA_ARGS__)\nusing namespace std;\ntypedef long long ll;\n\nint read() {\n\tint X=0,w=1; char c=getchar();\n\twhile (c<'0'||c>'9') { if (c=='-') w=-1; c=getchar(); }\n\twhile (c>='0'&&c<='9') X=X*10+c-'0',c=getchar();\n\treturn X*w;\n}\n\nconst int N=600000+10;\n\nint n,m,ans[N],cnt[N],fa[N];\nstruct Point { int x,y,t; } p[N];\nset<pair<int,int>> S;\n\nint f[N];\nint find(int x) { return x==f[x]?x:f[x]=find(f[x]); }\n\nint main() {\n\tn=read();\n\tfor (int i=1;i<=n;++i) p[i]=(Point){read(),read(),0};\n\tm=read();\n\tfor (int i=1;i<=m;++i) p[i+n]=(Point){read(),read(),i};\n\tsort(p+1,p+n+m+1,[](Point a,Point b) {\n\t\treturn a.y!=b.y?a.y>b.y:a.t>b.t;\n\t});\n\tfor (int i=1;i<=n+m;++i) {\n\t\tif (!p[i].t) {\n\t\t\tauto it=S.lower_bound({p[i].x,0});\n\t\t\tif (it!=S.end()) ++cnt[it->second];\n\t\t} else {\n\t\t\tS.insert({p[i].x,p[i].t});\n\t\t\tauto it=S.find({p[i].x,p[i].t});\n\t\t\tif (++it!=S.end()) fa[p[i].t]=it->second;\n\t\t\twhile (1) {\n\t\t\t\tit=S.find({p[i].x,p[i].t});\n\t\t\t\tif (it==S.begin()) break;\n\t\t\t\t--it;\n\t\t\t\tif (it->second>p[i].t) S.erase(it);\n\t\t\t\telse break;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=1;i<=m;++i) f[i]=i;\n\tfor (int i=m;i;--i) {\n\t\tans[i]=cnt[find(i)];\n\t\tif (fa[i]) {\n\t\t\tint x=find(i),y=find(fa[i]);\n\t\t\tf[x]=y,cnt[y]+=cnt[x];\n\t\t}\n\t}\n\tfor (int i=1;i<=m;++i) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1603855330,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4737 \u3010[CERC2017]Buffalo Barricades\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\u7ed9\u51fa\u4e00\u4e2a\u4f8b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hvlg1l88.png)\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u4f8b\u56fe\u601d\u8def\u5982\u4e0b\uff1a\n\n1. \u6bcf\u4e2a\u6805\u680f\u5148\u53ea\u8ba1\u7b97**\u53ea\u88ab\u672c\u8eab\u8986\u76d6\u7684\u70b9**\uff08\u4e0d\u88ab\u4ed6\u7684\u513f\u5b50\u8986\u76d6\uff0c\u4e0b\u9762\u6709\u513f\u5b50\u7684\u5b9a\u4e49\uff09\u3002\u4f8b\u5982\u4e0a\u56fe A \u8986\u76d6\u4e00\u4e2a\u70b9\uff0cB \u548c D \u5404\u8986\u76d6\u4e24\u4e2a\u70b9\uff0cC \u8986\u76d6\u4e00\u4e2a\u70b9\uff08\u600e\u4e48\u8ba1\u7b97\u540e\u9762\u8bb2\uff09\u3002\n\n1. **\u6805\u680f\u5b58\u5728\u5305\u542b\u5173\u7cfb**\uff0cB \u88ab D \u5305\u542b\uff08\u5148\u4e0d\u7ba1 D \u88ab C \u6805\u680f\u6321\u4f4f\u4e86\uff09\uff0cD \u548c C \u90fd\u88ab A \u5305\u542b\uff0c\u5982\u679c\u8ba1\u7b97 A \u5305\u542b\u4e86\u591a\u5c11\u4e2a\u70b9\uff0c\u7b49\u4ef7\u4e8e D \u5305\u542b\u7684 +C \u5305\u542b\u7684+\u53ea\u88ab A \u5305\u542b\u7684\u4e09\u90e8\u5206\u7684\u548c\u3002\u8fd9\u79cd\u5305\u542b\u5173\u7cfb\u5f62\u6210**\u6811**\u7ed3\u6784\uff0c\u6811\u7ed3\u6784\u7528**\u7236\u6307\u9488\u8868\u793a**\u6bd4\u8f83\u65b9\u4fbf\u3002\n\n1. \u6805\u680f\u6709\u65f6\u95f4\u5148\u540e\u5173\u7cfb\uff0cB \u662f D \u7684\u513f\u5b50\uff0c\u4f46\u662f\u56e0\u4e3a B \u5148\u53d1\u751f\uff0cD \u540e\u53d1\u751f\uff0c\u6240\u4ee5 B \u7684\u7b54\u6848**\u4e0d\u80fd\u4f20\u9012\u7d2f\u52a0**\u5230\u7236\u4eb2 D \u4e0a\uff1b\u4e0a\u56fe\u4e2d D \u548c A \u7684\u5148\u540e\u987a\u5e8f\u4ece\u56fe\u4e2d\u5224\u65ad\u4e0d\u51fa\u6765\uff0c\u5982\u679c D \u5148\u53d1\u751f A \u540e\u53d1\u751f\uff0c\u5219 D \u7684\u7b54\u6848\u4e5f\u4e0d\u80fd\u4f20\u9012\u5230\u7236\u4eb2 A \u4e0a\uff0c\u4f46\u662f\u5982\u679c\u662f A \u5148\u53d1\u751f\uff0c\u5219 D \u7684\u7b54\u6848\u9700\u8981\u4f20\u9012\u5230\u7236\u4eb2 A \u4e0a\u3002\u4e5f\u5c31\u662f\u8bf4**\u513f\u5b50\u53d1\u751f\u65f6\u95f4\u9760\u540e\u624d\u4f1a\u5f71\u54cd\u7236\u4eb2\u8282\u70b9**\uff0c\u6240\u4ee5\u5e94\u8be5\u6309\u7167\u53d1\u751f\u987a\u5e8f\u4ece\u540e\u5f80\u524d\u5904\u7406\uff0c\u4f7f\u7528\u5e76\u67e5\u96c6\u3002\n\n1. \u600e\u4e48\u8ba1\u7b97\u6bcf\u4e2a\u6805\u680f\u672c\u8eab\u8986\u76d6\u7684\u70b9\uff08\u4e0d\u88ab\u513f\u5b50\u8986\u76d6\uff09\uff1f\u5148\u5bf9\u6240\u6709\u6805\u680f\u548c\u70b9\u6309\u7167 y \u8f74**\u7531\u5927\u5230\u5c0f**\u6392\u5e8f\u3002\u4e0a\u56fe\u7684 x \u70b9\u80fd\u88ab\u76f4\u63a5\u88ab\u54ea\u4e2a\u6805\u680f\u8986\u76d6\uff1f\u80af\u5b9a\u662f\u88ab\u4ed6\u53f3\u4e0a\u89d2\u7684\u6805\u680f\u8986\u76d6\uff0c\u6240\u4ee5\u7528 set \u7ef4\u62a4**\u5df2\u7ecf\u5904\u7406**\u7684\u6805\u680f\u7684\u6a2a\u5750\u6807\uff0c\u627e\u5230\u4e0e x \u6700\u63a5\u8fd1\u4e14\u6a2a\u5750\u6807\u5927\u4e8e\u7b49\u4e8e x \u70b9\u7684\u6805\u680f D\uff0c\u7136\u540e\u4ee4 $ cnt_{D} $ \u52a01\u3002y \u70b9\u8c8c\u4f3c\u662f\u88ab D \u8986\u76d6\uff0c\u4f46\u662f\u56e0\u4e3a C \u5728 D \u4e4b\u524d\u53d1\u751f\uff0c**\u6240\u4ee5\u5b9e\u9645\u5e94\u8be5\u7b97\u662f\u88ab C \u8986\u76d6**\uff08D \u6bd4 C \u5148\u8fdb\u5165 set\uff0c\u56e0\u4e3a D \u7eb5\u5750\u6807\u5927\u5148\u5904\u7406\uff09\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6b63\u786e\uff0c\u5728\u8ba1\u7b97 C \u6805\u680f\u65f6\uff0c\u628a C \u63d2\u5165 set\uff0c\u5e76\u4e14\u628a set \u4e2d\u6a2a\u5750\u6807\u5c0f\u4e8e C \u4e14\u53d1\u751f\u65f6\u95f4\u5728 C \u4e4b\u540e\u7684\u6805\u680f\u4ece set \u4e2d\u5220\u9664\uff0c\u6240\u4ee5\u628a D \u5220\u9664\u4e86\uff0c\u8fd9\u6837\u5728\u5904\u7406 y \u70b9\u65f6\uff0cset \u4e2d C \u4e0e y \u6700\u63a5\u8fd1\uff0c\u6240\u4ee5 $ cnt_{C} $ \u52a0 1\u3002\n\n\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,fa[600001],cnt[600001],ans[600001],f[600001];\nstruct node\n{\n    int x,y,t;\n}p[600010];\nset<pair<int,int> > s;\nint find(int x)\n{\n    if(x==f[x])return x;\n    else return f[x]=find(f[x]);\n}\nbool cmp(node a,node b)\n{\n    if(a.y!=b.y)return a.y>b.y;\n    else return a.t>b.t;\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>p[i].x>>p[i].y;\n        p[i].t=0;\n    }\n    cin>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>p[i+n].x>>p[i+n].y;\n        p[i+n].t=i;\n    }\n    sort(p+1,p+n+m+1,cmp);\n    for(int i=1;i<=n+m;i++)\n    {\n        if(p[i].t==0)\n        {\n            set<pair<int,int> >::iterator it=s.lower_bound({p[i].x,p[i].t});\n            if(it!=s.end())++cnt[it->second];\n        }\n        else\n        {\n            s.insert({p[i].x,p[i].t});\n            set<pair<int,int> >::iterator it=s.find({p[i].x,p[i].t});\n            if(++it!=s.end())fa[p[i].t]=it->second;\n            while(1)\n            {\n                it=s.find({p[i].x,p[i].t});\n                if(it==s.begin())break;\n                it--;\n                if(it->second>p[i].t)s.erase(it);\n                else break;\n            }\n        }\n    }\n    for(int i=1;i<=m;i++)\n    {\n        f[i]=i;\n    }\n        for(int i=m;i>=1;i--)\n        {\n            ans[i]=cnt[find(i)];\n            if(fa[i])\n            {\n                int x=find(i),y=find(fa[i]);\n                f[x]=y,cnt[y]+=cnt[x];\n            }\n        }\n    for(int i=1;i<=m;i++)\n    {\n        cout<<ans[i]<<endl;\n    }\n    return 0;\n}",
        "postTime": 1638084303,
        "uid": 237437,
        "name": "xxasmcd",
        "ccfLevel": 6,
        "title": "P4737\u9898\u89e3"
    }
]