[
    {
        "content": "~~\u56e0\u4e3a\u662f\u6700\u4f18\u89e3\u5c31\u6765\u5199\u9898\u89e3\u4e86\uff08\u6ed1\u7a3d\uff09~~\n\n------------\n\u4ece\u6570\u636e\u5927\u5c0f\u4e0a\u5206\u6790\uff0c\u8fd9\u9053\u9898\u7684 $n$ \u7684\u5927\u5c0f\u6bd4\u8f83\u5927\uff0c\u4f46\u662f\u56fe\u6848\u7684\u5927\u5c0f\u548c\u56fe\u6848\u4e2a\u6570 $m$ \u90fd\u6bd4\u8f83\u5c0f\uff0c\u8f83\u666e\u904d\u7684\u7b97\u6cd5\u662f\u4f7f\u7528AC\u81ea\u52a8\u673a\u8fdb\u884c\u5b57\u7b26\u5339\u914d\uff0c\u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u54c8\u5e0c\uff0c\u5728\u52a0\u4e0a\u4f18\u5316\u540e\u4e0d\u4ec5\u7a7a\u95f4\u6bd4AC\u81ea\u52a8\u673a\u5c0f\u5f88\u591a\uff0c\u800c\u4e14\u5728\u666e\u904d\u7684\u6d4b\u8bd5\u70b9\u4e2d\u65f6\u95f4\u975e\u5e38\u5feb\uff0c\u6240\u6709\u6d4b\u8bd5\u70b9\u65f6\u95f4\u4e4b\u548c\u53ea\u6709$657ms$\u3002\n\n\u5148\u8003\u8651\u6bd4\u8f83\u6734\u7d20\u7684\u5339\u914d\uff0c\u5373\u5c06 $m$ \u4e2a\u5c0f\u5b57\u7b26\u4e32\u8fdb\u884c\u54c8\u5e0c\uff0c\u518d\u5728\u5927\u5b57\u7b26\u4e32\u4e0a $O(n)$ \u8fdb\u884c\u5339\u914d\uff0c\u7136\u540e\u901a\u8fc7\u5dee\u5206\u6765\u5b9e\u73b0\u5bf9\u80fd\u94fa\u7684\u4f4d\u7f6e\u7684\u8986\u76d6\u3002\n\n\u4f46\u662f\u663e\u7136\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\times m)$ \uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4f18\u5316\u3002\n\n------------\n\u9996\u5148\u4e00\u4e2a\u8f83\u660e\u663e\u7684\u601d\u8def\u662f\u5bf9\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u8fdb\u884c\u5206\u7c7b\uff0c\u5148\u5c06$m$\u4e2a\u54c8\u5e0c\u503c\u9884\u5904\u7406\u51fa\u6765\uff0c\u518d\u6309\u7167\u9996\u5b57\u6bcd\u5206\u522b\u88c5\u5230\u4e0d\u540c\u7684\u6570\u7ec4\u4e2d\uff0c\u5728\u6bcf\u6b21\u8be2\u95ee\u7684\u65f6\u5019\u53ea\u8981\u8be2\u95ee\u9700\u8981\u7684\u9996\u5b57\u6bcd\u7684\u6570\u7ec4\u5373\u53ef\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5ea6\u5c31\u80fd\u51cf\u5c1126\u500d\u3002\n\n------------\n\u8fd9\u6837\u5c31\u5df2\u7ecf\u662f\u7b2c\u4e8c\u4f18\u89e3\u4e86\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u662f\u6700\u5feb\u7684\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u518d\u6bcf\u4e2a\u5927\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u5339\u914d\u65f6\uff0c\u4ece\u957f\u5ea6\u6700\u5927\u7684\u5b57\u7b26\u4e32\u5f00\u59cb\u5339\u914d\uff0c\u8fd9\u6837\u5f53\u6211\u4eec\u5339\u914d\u6210\u529f\u65f6\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u5c31\u6ca1\u6709\u5fc5\u8981\u5728\u5339\u914d\u4e86\u3002\n\n------------\n\u4e8e\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u54c8\u5e0c\u52a0\u5dee\u5206\u52a0\u526a\u679d\u5c31\u80fd\u98de\u5feb\u5730A\u6389\u8fd9\u9053\u9ed1\u9898\u3002\n~~\u0669(\u0e51\u275b\u1d17\u275b\u0e51)\u06f6~~\n\n\u4e0b\u9762\u662f\u6211\u81ea\u5df1\u7684\u4ee3\u7801\u3002\n\nps:\u6211\u4f7f\u7528\u7684\u662f\u5bf9\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u8fdb\u884c\u5206\u7c7b\uff0c\u8fd9\u6837\u80fd\u9632\u6b62\u88ab\u5361\uff0c\u4f7f\u4ee3\u7801\u66f4\u5feb\u3002\n\n------------\n```cpp\n#include<bits/stdc++.h>\n#define un unsigned long long\nusing namespace std;\nconst int N=3e5+5;\nstruct z{\n\tint Len;\n\tun Has;\n} g[30][5005];//\u5c06\u54c8\u5e0c\u503c\u4e0e\u957f\u5ea6\u88c5\u5728\u7ed3\u6784\u4f53\u4e2d\u65b9\u4fbf\u6392\u5e8f\u548c\u8c03\u7528\nint n,m,Len,cnt[30],L[N];\nun f[N],num[N],p;\nchar a[N],s[5005];\nbool cmp(z a,z b){\n\treturn a.Len>b.Len;\n}\nint main(){\n\tscanf(\"%d%s\",&n,&a);\n\tnum[0]=1;\n\tfor(int i=0;i<n;i++)f[i]=f[i-1]*233+a[i],num[i+1]=num[i]*233;\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%s\",&s);\n\t\tLen=strlen(s);\n\t\tint mb=s[Len-1]-'a';//\u6309\u7167\u5c3e\u5b57\u6bcd\u5206\u7c7b\n\t\tp=0;\n\t\tfor(int j=0;j<Len;j++)p=p*233+s[j];\n\t\tg[mb][++cnt[mb]]=(z){Len,p};\n\t}\n\tfor(int i=0;i<26;i++)sort(g[i]+1,g[i]+cnt[i]+1,cmp);\n\tfor(int i=0;i<n;i++){\n\t\tint mb=a[i]-'a';//\u6309\u7167\u5c3e\u5b57\u6bcd\u8fdb\u884c\u67e5\u8be2\n\t\tfor(int j=1;j<=cnt[mb];j++){\n\t\t\tLen=g[mb][j].Len;\n\t\t\tif(i<Len-1)continue;\n\t\t\tif(f[i]-f[i-Len]*num[Len]==g[mb][j].Has){\n\t\t\t\tL[i-Len+1]++,L[i+1]--;//\u5bf9\u8986\u76d6\u533a\u57df\u8fdb\u884c\u5dee\u5206\n\t\t\t\tbreak;//\u5269\u4e0b\u7684\u90fd\u662f\u6bd4\u5f53\u524d\u5b57\u7b26\u4e32\u77ed\u7684\uff0c\u5c31\u7b97\u5339\u914d\u6210\u529f\u5bf9\u7b54\u6848\u4e5f\u6ca1\u6709\u8d21\u732e\uff0c\u53ef\u4ee5\u76f4\u63a5break\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=0;i<n;i++){\n\t\tif(i>0)L[i]+=L[i-1];\n\t\tif(L[i]==0)ans++;\n\t}\n\tcout<<ans;\n}\n```\n",
        "postTime": 1599486121,
        "uid": 253552,
        "name": "\u591c\u4e34",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4595 \u3010[COCI2011-2012#5] POPLOCAVANJE\u3011"
    },
    {
        "content": "[blog](https://ctz45562.github.io/2019/07/09/\u6d1b\u8c37-P4595-\u3010-COCI2011-2012-5-POPLOCAVANJE\u3011/)\n\n\u5361\u7a7a\u95f4\u7684$AC$\u81ea\u52a8\u673a\u677f\u5b50\u9898\u3002\u4e0d\u4f1a\u4ec0\u4e48~~\u5947\u6280\u6deb\u5de7~~\u4e8e\u662f\u9009\u62e9\u4e86\u7ebf\u6027\u7a7a\u95f4\u7684$SAM$\u3002\n\n\u663e\u7136\u8981\u5bf9\u6bcd\u4e32\u9020$SAM$\uff0c\u628a\u6a21\u5f0f\u4e32\u5728$SAM$\u8dd1\u4e00\u904d\u3002\u5982\u679c\u4e00\u4e2a\u6a21\u5f0f\u4e32\u5728\u8282\u70b9$i$\u505c\u4e0b\uff0c\u5b83\u5c31\u80fd\u548c\u6240\u6709\u5c5e\u4e8e$endpos_i$\u7684\u4f4d\u7f6e\u5339\u914d\u3002\n\n\u7ef4\u62a4\u4e00\u4e2a$ma_i$\u8868\u793a\u5728\u8282\u70b9$i$\u505c\u4e0b\u7684\u6700\u957f\u7684\u6a21\u5f0f\u4e32\u957f\u5ea6\u3002\u6bcf\u4e2a\u8282\u70b9\u7ed9\u533a\u95f4$[\\max\\{pos-ma_i+1,1\\},pos] (pos\\in endpos_i)$\u52a0$1$\u3002\u67d0\u4e2a\u4f4d\u7f6e\u5927\u4e8e$0$\u8bf4\u660e\u53ef\u4ee5\u4fee\u8865\uff0c\u5dee\u5206\u5373\u53ef\u3002\n\n\u5f53\u7136\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5bf9\u6bcf\u4e2a\u8282\u70b9\u90fd\u64cd\u4f5c\u3002\u4e00\u4e2a\u70b9\u7684$endpos$\u90fd\u6765\u81ea\u4e8e$parent\\ tree$\u7684\u5b50\u6811\uff0c\u628a$ma$\u63a8\u4e0b\u53bb\u5728\u53f6\u5b50\u7ed3\u70b9\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u4e00\u5f00\u59cb\u5f00\u7684$map$\uff0c\u4e0d\u8fc7\u989d\u5916\u7a7a\u95f4\u5f00\u9500\u4e0d\u5c0f\u8fd8\u662f$M$\u4e86\uff0c\u4e8e\u662f~~\u539a\u989c\u65e0\u803b\u5730~~\u5f00\u6570\u7ec4\u9760\u52a8\u6001\u5185\u5b58$A$\u4e86\u3002\u8981\u6ca1\u6709\u52a8\u6001\u5185\u5b58\u7684\u8bdd\u3002\u3002\u3002\u4e5f\u8bb8\u8981\u624b\u5199\u5e73\u8861\u6811\uff1f\n\n\u4ee3\u7801\uff1a\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <map>\n\n#define maxn 600005\n#define inf 0x3f3f3f3f\n\nusing namespace std;\n\ninline int read(){\n    int x=0,y=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return y?-x:x;\n}\n#define son(x,y) son[x][y]\nint son[maxn][26],fa[maxn],len[maxn],ma[maxn],sum[maxn],pos[maxn],cur[maxn],tax[maxn],all,num,last=1,cnt=1;\nchar s[maxn];\ninline void modify(int l,int r){\n    ++sum[l],--sum[r+1];\n}\nvoid insert(int c){\n    int p=last,ne=last=++cnt;\n    pos[ne]=len[ne]=len[p]+1;\n    while(p&&!son(p,c))son(p,c)=ne,p=fa[p];\n    if(!p)fa[ne]=1;\n    else {\n        int q=son(p,c);\n        if(len[q]==len[p]+1)fa[ne]=q;\n        else {\n            int sp=++cnt;\n            memcpy(son[sp],son[q],sizeof son[q]);\n            len[sp]=len[p]+1,fa[sp]=fa[q],fa[q]=fa[ne]=sp;\n            while(p&&son(p,c)==q)son(p,c)=sp,p=fa[p];\n        }\n    }\n}\nint main(){\n    int n=read(),m,t,node,ans=0;\n    scanf(\"%s\",s+1);\n    for(register int i=1;i<=n;++i)insert(s[i]-'a');\n    for(register int i=1;i<=cnt;++i)++tax[len[i]];\n    for(register int i=1;i<=n;++i)tax[i]+=tax[i-1];\n    for(register int i=1;i<=cnt;++i)cur[tax[len[i]]--]=i;\n    t=read();\n    while(t--){\n        scanf(\"%s\",s+1),m=strlen(s+1),node=1;\n        for(register int i=1;i<=m&&node;++i)node=son(node,s[i]-'a');\n        if(node)ma[node]=max(ma[node],m);\n    }\n    for(register int i=2;i<=cnt;++i){\n        t=cur[i];\n        ma[t]=max(ma[t],ma[fa[t]]);\n        if(ma[t]&&pos[t])modify(max(pos[t]-ma[t]+1,1),pos[t]);\n    }\n    for(register int i=1;i<=n;++i){\n        sum[i]+=sum[i-1];\n        if(!sum[i])++ans;\n    }\n    printf(\"%d\\n\",ans);\n}\n```\n",
        "postTime": 1562049997,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4595 \u3010[COCI2011-2012#5] POPLOCAVANJE\u3011"
    },
    {
        "content": "## Update: 2021/04/13\n\n\u4fee\u6539\u4e86\u4e00\u4e9b\u96be\u53d7\u7684 $\\operatorname{markdown}$ \u8bed\u6cd5\uff0c\u4ee5\u53ca\u4e00\u4e9b\u6392\u7248\u3002\n\n\n## \u9898\u76ee\u5206\u6790\n\n[\u9898\u9762\u63cf\u8ff0](https://www.luogu.com.cn/problem/P4595)\n\n\u901a\u8fc7\u8bfb\u9898\u53ef\u4ee5\u5f97\u77e5\u53ea\u8981\u5c3d\u53ef\u80fd\u7684\u628a\u5730\u7816\u94fa\u4e0a\u53bb\u7136\u540e\u518d\u5728\u7edf\u8ba1\u6ca1\u88ab\u94fa\u76d6\u7684\u957f\u5ea6\u5c31\u662f\u7b54\u6848\uff0c\u6240\u4ee5\u53ea\u8981\u628a\u5730\u7816\u53ef\u4ee5\u94fa\u7684\u533a\u95f4\u627e\u51fa\u6765\uff0c\u7136\u540e\u518d\u7528\u5dee\u5206\u5c31\u53ef\u4ee5\u505a\u5230\uff0c\u5173\u4e8e\u5339\u914d\u5b57\u7b26\u4e32\u6709\u51e0\u79cd\u7b97\u6cd5\uff1a KMP \u3001 AC \u81ea\u52a8\u673a Hash \u8fd8\u6709\u51e0\u79cd\u5176\u4ed6\u7684\u4f46\u662f\u5728\u8fd9\u91cc\u5c31\u53ea\u653e Hash \u4e86\uff08~~\u56e0\u4e3a\u6570\u636e\u8303\u56f4~~\uff09\u3002\n\n## \u60f3\u6cd5\u5b9e\u73b0\n\n\u53ef\u80fd\u5f88\u591a\u4eba\u5bf9\u54c8\u5e0c\u7b97\u6cd5\u6709\u5947\u602a\u7684\u504f\u89c1\u3002\n\n\u4f46\u662f\u8fd9\u786e\u5b9e\u53ef\u4ee5\u505a\u5230\uff0c\u9996\u5148\u6765\u770b\u770b\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u5339\u914d\u3002\n\n```plain\n6\nabcabc\n2\nabca\ncab\n```    \n    \n\u8fd9\u662f\u5176\u4e2d\u7684\u4e00\u4e2a\u6837\u4f8b\u3002\n\n\u9996\u5148\u539f\u5148\u7684\u5730\u9762\u662f `abcabc`\u3002\n    \n    \n\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u4e32\u8f6c\u6210\u6570\u5b57\u4e32 `123123`\u3002\n    \n   \n\u5b83\u5df2\u7ecf\u662f\u4e2a\u6570\u5b57\u4e86\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u628a\u5b83\u5f53\u6210 $prime$ \u8fdb\u5236\u6570\uff08$prime$ \u5e94\u8be5\u662f\u4e00\u4e2a\u5927\u4e8e $26$ \u7684\u8d28\u6570\uff09\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u53ea\u7528\u4e00\u4e2a\u6574\u5f62\u53d8\u91cf\u5c31\u53ef\u4ee5\u628a\u5b83\u7684\u5341\u8fdb\u5236\u6570\u5b58\u4e0b\u6765\u4e86\u3002\n\n$$\\sum_{i = 1}^n a_i \\times prime ^ {n - i +1}$$\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5728\u6837\u4f8b\u4e2d\uff0c\u5f53 $prime$ \u4e3a $31$ \u65f6\u5e94\u8be5\u662f\uff1a\n\n$$1\\times 31^6+2\\times 31^5+3\\times 31^4+1\\times 31^3+2\\times 31^2+3\\times 31^1$$\n\n\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u5b57\u7b26\u4e32\u5411\u6570\u5b57\u7684\u8f6c\u6362\u3002\n\n\u89c2\u5bdf\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u597d\u50cf\u4f1a\u8d85\u51fa\u666e\u901a\u6574\u5f62\u7684\u8303\u56f4\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u4f60\u5e94\u8be5\u6253\u5f00\u4e00\u4e2a Cpp-IDE\uff0c\u7136\u540e\u8f93\u5165\u51e0\u4e2a\u6570\u5b57\u8bd5\u4e00\u4e0b\uff0c\u4e4b\u540e\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff1a**\u540c\u6837\u7684\u6570\u5b57\u4e58\u4ee5\u540c\u6837\u7684\u6570\u5b57\u7684\u7ed3\u679c\uff0c\u65e0\u8bba\u6709\u6ca1\u6709\u8d85\u51fa\u6574\u5f62\u4e0a\u9650\u90fd\u662f\u4e00\u6837\u7684\uff01**\n\n\u5982\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint x=rand()*100000+rand(), y; y=x;\n\tcout<<x<<' '<<y<<endl;\n\tx*=31;\n\tcout<<x<<' '<<y<<endl;\n\ty*=31;\n\tcout<<x<<' '<<y<<endl;\n\treturn 0;\n}\n\n```\n\n\u5728\u7b2c\u4e09\u6b21\u8f93\u51fa\u7684\u6570\u5b57\u8fd8\u90fd\u662f\u4e00\u6837\u7684\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u8bc1\u660e Hash \u662f\u53ef\u884c\u7684\u3002\n\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int prime[2] = {37,31};\nconst int maxn=300005;\nint N,M,Ans;\nint E[maxn],key[3][maxn],pw[3][maxn];\nchar s[maxn];\nint main(){\n\tscanf(\"%d%s\",&N,s+1);\n\tfor(int i=0;i<=1;i++)pw[i][0]=1;\n\tfor(int i=1;i<=N;i++)\n\tfor(int j=0;j<=1;j++){\n\t\tkey[j][i]=key[j][i-1]*prime[j]+s[i];\n\t\tpw [j][i]=pw [j][i-1]*prime[j];\n\t}\n\t//\u6784\u9020\u521d\u59cb\u7684 Hash \u6570\u7ec4\uff0c\u53d6\u53cc\u4e58\u6570\u4e0d\u5bb9\u6613\u649e\u8f66\n\tscanf(\"%d\",&M);\n\tfor(int i=1;i<=M;i++){\n\t\tscanf(\"%s\",s);\n\t\tint l=strlen(s),kp[2]={0,0};\n\t\tfor(int j=0;j<l;j++)\n\t\tfor(int k=0;k<=1;k++) kp[k]=kp[k]*prime[k]+s[j];\n\t\tfor(int j=l;j<=N;j++){\n\t\t\tbool checker = true;\n\t\t\tfor(int k=0;k<=1;k++){\n\t\t\t\tint w=key[k][j]-key[k][j-l]*pw[k][l];\n\t\t\t\tif (w!=kp[k]) checker=false;\n\t\t\t}\n\t\t\tif(checker)E[j-l+1]++,E[j+1]--;\n\t\t}\n\t\t//\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u8ba1\u7b97\n\t}\n\tint now=0;\n\tfor (int i=1;i<=N;i++) now+=E[i],Ans+=(not now);\n\tprintf(\"%d\\n\",Ans);\n\treturn 0;\n}\n```\n\n\u81f3\u6b64\uff0c\u8fd9\u9053\u9898\u89e3\u51b3\u5b8c\u6bd5~~~\n\n\u5b8c\u7ed3\u6492\u82b1",
        "postTime": 1601454396,
        "uid": 189351,
        "name": "wheneveright",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4595 [COCI2011-2012#5] POPLOCAVANJE"
    },
    {
        "content": "\u5361\u5e38+\u5206\u5757+\u5947\u6280\u6deb\u5de7\u80fd\u4f7fAC\u81ea\u52a8\u673a\u901a\u8fc7SAM\u9ed1\u9898\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4595)\n\n\u9996\u5148\u4e0d\u8003\u8651\u7a7a\u95f4\u7684AC\u81ea\u52a8\u673a\u7684\u505a\u6cd5\u975e\u5e38\u597d\u60f3\u5bf9\u5427\uff0c\u628a\u6bcf\u4e2a\u5355\u8bcd\u90fd\u5b58\u597d\uff0c\u5339\u914d\u6bcd\u4e32\uff0c\u6253\u4e0a\u6807\u8bb0\u5373\u53ef\u3002\n\n\u4f46\u662fAC\u81ea\u52a8\u673a\u662f\u5b58\u4e0d\u4e865000*5000\u7684\uff0c\u4f46\u672c\u9898\u8ba8\u8bba\u4e2d\u6709\u5927\u4f6c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u505a\u6cd5\uff0c\u8fc710~30\u4e2a\u5b57\u7b26\u4e32\u6c42\u4e00\u6b21\u7b54\u6848\u5e76\u91cd\u5efaAC\u81ea\u52a8\u673a\u3002\n\n\u4f46\u6211\u89c9\u5f9710~30\u4e2a\u5b57\u7b26\u4e32\u975e\u5e38\u8349\u7387\uff0c\u4e0d\u5982\u5206\u4e2a\u5757\uff0c$\\sqrt m$\u4e2a\u4e32\u4f18\u7f8e\u5427\uff1f\n\n\u90a3\u5c31$\\sqrt m$\u4e2a\u4e32\u6c42\u4e00\u6b21\u7b54\u6848\uff0c\u7a7a\u95f4\u5927\u6982\u57286e5\u5de6\u53f3\u662f\u6bd4\u8f83\u7a33\u7684\u3002\u4f46\u6709\u4e00\u4e2a\u574f\u6d88\u606f\uff0c\u5982\u679c\u4f60AC\u81ea\u52a8\u673a\u66b4\u529b\u8df3fail+\u66b4\u529b\u6253\u6807\u8bb0+\u6ca1\u6709\u4f18\u8d8a\u7684AC\u81ea\u52a8\u673a\u6a21\u677f\u7684\u8bdd\uff0c\u4f60\u5c31\u4f1aT\u6389\u3002\n\n\u73b0\u5728\u6211\u6765\u8bb2\u89e3\u4e00\u4e0b\u4e00\u4e9b\u4f18\u5316\u6280\u5de7\n\n#### \u9884\u5904\u7406fail\u6811\n\n\u9996\u5148\u66b4\u529b\u8df3fail\u662f\u5bf9\u590d\u6742\u5ea6\u5f71\u54cd\u6700\u5927\u7684\uff0c\u6211\u4eec\u7ed9\u6bcf\u4e2a\u70b9\u9644\u4e00\u4e2a\u503ccnt\u8868\u793a\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u5355\u8bcd\u7684\u7ed3\u5c3e\u7684\u8bdd\u90a3\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\uff0c\u5982\u679c\u662f\u591a\u4e2a\u5c31\u662f\u6700\u957f\u7684\u90a3\u4e2a\u7684\u957f\u5ea6\u3002\n\n\u6211\u4eec\u8df3fail\u5b9e\u9645\u4e0a\u662f\u6c42\u8fd9\u4e2a\u70b9\u5230fail\u6811\u6839\u4e2d\u6700\u5927\u7684\u90a3\u4e2acnt\uff0c\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5O(\u6811\u7684\u5927\u5c0f)\u5904\u7406\u51fa\u6765\u3002\n\n\u90a3\u4e48\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5728\u67d0\u70b9\u5230fail\u6811\u6839\u7684\u8def\u5f84\u4e0a\uff0c\u6700\u5927\u7684cnt\u548c\u67d0\u4e2a\u6bd4\u4ed6\u5c0fcnt\u7684\u533a\u95f4\u4e0d\u540c\u600e\u4e48\u529e\uff1f\uff08\u5c31\u662f\u9009\u4e86\u6700\u5927\u7684\u90a3\u4e2acnt\u4f1a\u5bfc\u81f4\u5c0f\u7684cnt\u7684\u533a\u95f4\u8ba1\u7b97\u4e0d\u5230\uff09\n\n\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u60c5\u51b5\uff0c\u56e0\u4e3afail\u662f\u7531\u957f\u7684\u4e32\u6307\u5411\u8ddf\u5f53\u524d\u4e32\u540e\u7f00\u76f8\u540c\u7684\u4e32\uff0c\u4e00\u5b9a\u7531\u957f\u6307\u5411\u77ed\uff0c\u7531\u6bcd\u4e32\u6307\u5411\u5b50\u4e32\uff0c\u800c\u4e14\u5728\u4e00\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\uff0ccnt\u7684\u6700\u5927\u503c\u662f\u9012\u589e\u7684\uff0c**\u6bd4\u6700\u5927\u7684cnt\u5c0f\u7684cnt\u4ee3\u8868\u7684\u4e32\u4e00\u5b9a\u4f5c\u4e3a\u5f53\u524d\u4e32\u7684\u5b50\u4e32\u51fa\u73b0\u8fc7**\uff0c\u6240\u4ee5\u6bd4**\u6700\u5927\u7684cnt\u5c0f\u7684cnt\u4e00\u5b9a\u66fe\u88ab\u4f5c\u4e3a\u6700\u5927\u7684cnt\u8ba1\u7b97\u8fc7**\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u628afail\u6811\u5efa\u51fa\u6765\uff0c\u5bf9\u5176dfs\uff0c\u5339\u914d\u5230\u4e00\u4e2a\u70b9\u65f6O(1)\u5f97\u5230\u4ed6\u5728\u5230fail\u6811\u6839\u8def\u5f84\u4e0a\u6700\u5927\u7684cnt\u3002\n\n#### \u5dee\u5206\u6253\u6807\u8bb0\n\n\u5982\u679c\u4f60\u53ea\u4f1afail\u6811\u800c\u50cf\u4e00\u4e2a\u521a\u5b66OI\u7684\u840c\u65b0\u4e00\u6837\u66b4\u529b\u6253\u6807\u8bb0\u7684\u8bdd\uff0c\u90a3\u4e48\u8bf4\u660e\u4f60\u8ddf\u6211\u4e00\u6837AC\u81ea\u52a8\u673a\u5b66\u50bb\u4e86\uff0c\u8fd9\u4e2atrick\u662f\u6211\u5728\u53ea\u6709\u524d\u9762\u90a3\u4e2a\u4f18\u5316\u800cT\u523085\u5206\u65f6\u5728\u795e\u4ed9@[ZUTTER_](https://www.luogu.org/space/show?uid=50562)\u7684\u4ee3\u7801\u91cc\u627e\u5230\u7684\uff0c\u5979\u66b4\u529b\u8df3fail\u4f46\u7528\u4e86\u8fd9\u4e2a\u4f18\u5316\u6210\u529f\u7684\u6c34\u4e86\u8fc7\u53bb\u3002\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u88ab\u6807\u8bb0\u6253\u591a\u5c11\u6b21\u662f\u7384\u5b66\u7684\uff0c\u5982\u679c\u4f60\u8fd0\u6c14\u4e0d\u597d\u5f88\u53ef\u80fd\u88ab\u5361\u6b7b\uff0c\u6240\u4ee5\u6253\u6807\u8bb0\u7684\u65f6\u5019\u8981\u6539\u6210\u5bf9\u5dee\u5206\u6570\u7ec4\u64cd\u4f5c\uff0c\u5728\u533a\u95f4\u5f00\u5934+1\uff0c\u5728\u533a\u95f4\u7ed3\u5c3e\u540e\u4e00\u4f4d-1\u3002\u6700\u540e\u505a\u4e00\u904d\u524d\u7f00\u548c\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u662f0\u90a3\u4ed6\u4e00\u5b9a\u6ca1\u6709\u88ab\u8986\u76d6\u3002\n\n```c++\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define re register\nusing namespace std;\nstruct node{\n\tint ch[26],cnt,fail;\n}t[600000];\nstruct edge{\n\tint next,to;\n}w[600001];\nchar ch[300001],s[5001]; int m;\nint n,blo,heap,tail,team[600001];\nint bl[5001],o[300001],num,cnt;\nint maxn[600001],head[600001],ans;\ninline void add(int x,int y){\n\tw[++cnt].next=head[x];\n\tw[cnt].to=y; head[x]=cnt;\n}\ninline void insert(char *s){\n\tint u=0,l=strlen(s);\n\tfor (re int i=0; i<l; i++){\n\t\tint a=s[i]-'a';\n\t\tif (!t[u].ch[a]) t[u].ch[a]=++num;\n\t\tu=t[u].ch[a];\n\t}\n\tt[u].cnt=l;\n}\nvoid dfs(int x){\n\tmaxn[x]=max(maxn[x],t[x].cnt);\n\tfor (re int i=head[x]; i; i=w[i].next){\n\t\tmaxn[w[i].to]=maxn[x]; dfs(w[i].to);\n\t}\n}\ninline void build(){\n\theap=tail=1; team[heap]=0;\n\twhile (heap<=tail){\n\t\tint x=team[heap];\n\t\tfor (re int i=0; i<26; i++){\n\t\t\tif (t[x].ch[i]){\n\t\t\t\tteam[++tail]=t[x].ch[i];\n\t\t\t\tif (!x) continue;\n\t\t\t\tt[t[x].ch[i]].fail=t[t[x].fail].ch[i];\n\t\t\t}\n\t\t\telse t[x].ch[i]=t[t[x].fail].ch[i];\n\t\t}\n\t\theap++;\n\t}\n\tmemset(head,0,sizeof(head)); cnt=0;\n\tfor (re int i=1; i<=num; i++) add(t[i].fail,i);\n\tdfs(0);\n}\ninline void change(){\n\tint u=0;\n\tfor (re int i=1; i<=n; i++){\n\t\tint a=ch[i]-'a'; u=t[u].ch[a];\n\t\t// for (re int j=u; j; j=t[j].fail)\n\t\t// \tif (t[j].cnt) o[i+1]-=1,o[i-t[j].cnt+1]+=1;\n\t\to[i+1]-=1; o[i-maxn[u]+1]+=1;\n\t\t// for (re int j=0; j<maxn[u]; j++) o[i-j]=1;\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\tscanf(\"%s\",ch+1);\n\tscanf(\"%d\",&m); blo=sqrt(m); bl[0]=1;\n\tfor (re int i=1; i<=m; i++) bl[i]=(i-1)/blo+1;\n\tfor (re int i=1; i<=m; i++){\n\t\tscanf(\"%s\",s); insert(s);\n\t\tif (bl[i]!=bl[i-1]||i==m){\n\t\t\tbuild(); change();\n\t\t\tfor (re int j=0; j<=num; j++){\n\t\t\t\tt[j].cnt=t[j].fail=maxn[j]=0;\n\t\t\t\tfor (re int k=0; k<26; k++) t[j].ch[k]=0;\n\t\t\t}\n\t\t\tnum=0;// puts(\"ok\");\n\t\t}\n\t}\n\t// for (re int i=1; i<=n; i++) if (!o[i]) ans++;\n\tfor (re int i=1; i<=n; i++){o[i]+=o[i-1]; if (!o[i]) ans++;}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u8fd9\u4efdAC\u81ea\u52a8\u673a\u4ee3\u7801\u5927\u6982\u53ea\u6bd4\u6b63\u89e3\u61621000ms\uff0c\u76ee\u524d\u53ea\u6709\u4e00\u4e2aAC\u81ea\u52a8\u673a\u8dd1\u7684\u6bd4\u6211\u5feb\u3002\n~~\u542c\u8bf4\u8c03\u6574\u5757\u7684\u5927\u5c0f\u80fd\u66f4\u5feb~~",
        "postTime": 1550238635,
        "uid": 63661,
        "name": "Taduro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4595 \u3010[COCI2011-2012#5] POPLOCAVANJE\u3011"
    },
    {
        "content": "### \u57fa\u672c\u5206\u6790\uff1a\n\n\u849f\u84bb\u4e0d\u4f1a KMP\uff0c\u53ea\u4f1a\u54c8\u5e0c\u548c\u5dee\u5206qwq\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u600e\u4e48\u505a\u5427\uff01\n\n1. \u9996\u5148\u6211\u4eec\u53d6\u4e00\u4e2a\u8d28\u6570\uff0c\u4eb2\u6d4b $353$ \u53ef\u8fc7\uff1b\n2. \u7136\u540e\u5b9a\u4e49\u5b57\u7b26\u6570\u7ec4 $a$\u3001$b$ \u4ee3\u8868\u9898\u76ee\u4e2d\u7684 $N$ \u4e2a\u5c0f\u5199\u5b57\u6bcd\u548c $L_i$ \u4e2a\u5c0f\u5199\u5b57\u6bcd\u3002\u5b9a\u4e49\u54c8\u5e0c\u6570\u7ec4 $hsh$ \u548c $353$ \u8fdb\u5236\u6570 $pwr$\uff1b\n3. \u6700\u540e\u5faa\u73af\u6a21\u62df\u5373\u53ef\u3002\n\n---\n\n- \u54c8\u5e0c\u3001\u6c42 $353$ \u8fdb\u5236\u6570\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a\n  \n  \n  ```cpp\n    for(int i=1;i<=n;++i)\n        hsh[i]=hsh[i-1]*bt+a[i],//\u54c8\u5e0c\n        pwr[i]=pwr[i-1]*bt;  //353 \u8fdb\u5236\u6570\n  ```\n  \n  \n  \u5176\u4e2d $bt=353$\u3002\n  \n---\n\n\n- \u5faa\u73af\u8fc7\u7a0b\u5982\u4e0b\uff1a\n  \n  ```cpp\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%s\",b+1);\n\t\tlb=strlen(b+1); //\u8f93\u5165\u5b57\u7b26\u4e32 b\uff0c\u4ece\u4e0b\u6807 1 \u5f00\u59cb\n        h=0;\n        for(int j=1;j<=lb;++j)\n            h=h*bt+b[j];  //\u524d\u7f00\u548c\u6a21\u62df\u5b57\u7b26\u4e32\u8f6c\u6570\u5b57\n\t\tfor(int j=1;j<=n-lb+1;++j)\n\t\t{\n\t\t\tif(hsh[j+lb-1]-hsh[j-1]*pwr[lb]==h)\n                ++vis[j],--vis[j+lb]; //\u5dee\u5206\u8bb0\u5f55\n\t\t}\n\t}\n  ```\n  \n  \u5176\u4e2d $vis$ \u6570\u7ec4\u7528\u4e8e\u5dee\u5206\u3002\u56e0\u4e3a\u662f\u5dee\u5206\u6240\u4ee5\u6700\u540e\u8f93\u51fa\u65f6\u9700\u8981\u5904\u7406\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n  \n  ```cpp\n\tint k=0;\n\tfor(int i=1;i<=n;++i)\n\t    ans+=!(k+=vis[i]);\n  ```\n  \n  \u5176\u4e2d `ans+=!(k+=vis[i])` \u8bed\u53e5\u53ef\u5c55\u5f00\u4e3a\uff1a`k+=vis[i], ans+=!k`\u3002\n  \n---\n \n - \u6700\u540e\u8f93\u51fa\u5373\u53ef\u3002\n \n---\n \n### \u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define bt 353 //\u5c06 bt \u5b9a\u4e49\u4e3a\u8d28\u6570 353\nusing namespace std;\nchar a[300005],b[5005];\nint n,m;\nint lb,ans,hsh[300005],pwr[300005],h;\nint vis[300005];\n// \u5b9a\u4e49\u53d8\u91cf\u3001\u6570\u7ec4\nint main()\n{\n    pwr[0]=1;\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",a+1); //\u8f93\u5165\u5b57\u7b26\u4e32 a\uff0c\u4ece\u4e0b\u6807 1 \u5f00\u59cb\n\tscanf(\"%d\",&m);\n    for(int i=1;i<=n;++i) \n        hsh[i]=hsh[i-1]*bt+a[i], //\u54c8\u5e0c\n        pwr[i]=pwr[i-1]*bt;  //353 \u8fdb\u5236\u6570\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%s\",b+1);\n\t\tlb=strlen(b+1);\n        h=0;\n        for(int j=1;j<=lb;++j)\n            h=h*bt+b[j]; //\u524d\u7f00\u548c\u6a21\u62df\u5b57\u7b26\u4e32\u8f6c\u6570\u5b57\n\t\tfor(int j=1;j<=n-lb+1;++j)\n\t\t{\n\t\t\tif(hsh[j+lb-1]-hsh[j-1]*pwr[lb]==h)\n                ++vis[j],--vis[j+lb];//\u5dee\u5206\u8bb0\u5f55\n\t\t}\n\t}\n\tint k=0;\n\tfor(int i=1;i<=n;++i) //\u5904\u7406\u5dee\u5206\n\t    ans+=!(k+=vis[i]);// \u53ef\u5199\u6210k+=vis[i], ans+=!k\n\tprintf(\"%d\\n\",ans); //\u8f93\u51fa\u7b54\u6848\n\treturn 0;\n}\n```\n\n\u662f\u4e0d\u662f\u5f88\u7b80\u5355\u5462qwq",
        "postTime": 1673404995,
        "uid": 682739,
        "name": "nr0728",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4595 [COCI2011-2012#5] POPLO\u010cAVANJE"
    },
    {
        "content": "\u8003\u8651\u4e00\u4e2a\u6bcd\u4e32\u7684 SAM\n\n\u8003\u8651\u8986\u76d6\u4e00\u4e2a\u5b50\u4e32\u5b9e\u9645\u4e0a\u662f\u8986\u76d6\u6bcd\u4e32\u4e00\u4e2a\u524d\u7f00\u7684\u540e\u7f00\n\n\u5982\u662f\u6211\u4eec\u8003\u8651\u6240\u6709\u5bf9\u5e94\u7684\u201c\u4e00\u4e2a\u524d\u7f00\u7684\u540e\u7f00\u201d,\u5728 SAM \u4e0a\u662f\u5bf9\u5e94\u7740\u82e5\u5e72\u7ed3\u70b9\u3002\u5e76\u4e14\u8fd9\u4e9b\u8282\u70b9\u901a\u8fc7**\u540e\u7f00\u94fe\u63a5**\u6784\u6210\u4e00\u9897\uff08\u539f\u540e\u7f00\u8fde\u63a5\u6811\u7684\u5b50\uff09\u6811\uff0c\u5e76\u4e14\u6811\u6839\u662f \u201c\uff08\u4ece\u524d\u5411\u540e\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u5b50\u4e32\u7684\u672b\u5c3e\uff09\u505a\u7ed3\u5c3e\u7684\u524d\u7f00\u201d\u4ee3\u8868\u7684\u7ed3\u70b9\u3002\n\n\u5f88\u5570\u55e6\u4e86\u3002\u5176\u5b9e\u8fd9\u4e2a\u70b9\u5c31\u662f\u628a\u5339\u914d\u4e32\u4e22\u8fdb\u53bb\u4ece\u6839\u8f6c\u79fb\uff0c\u8f6c\u79fb\u5230\u5339\u914d\u4e32\u672b\u5c3e\u65f6\u5bf9\u5e94\u7684\u7ed3\u70b9\u3002\n\n\u7ed9\u8fd9\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u4e00\u4e2a\u6807\u8bb0\u8868\u793a\u8fd9\u4e2a\u7ed3\u70b9\u5bf9\u5e94\u524d\u7f00\u6700\u957f\u88ab\u8986\u76d6\u4e86\u591a\u5c11\n\n\u6bcf\u6b21\u4e22\u5339\u914d\u4e32\u8fdb\u53bb\u8d70\u5230\u672b\u5c3e\uff0c\u5e76\u66f4\u65b0\u6807\u8bb0\u3002\n\n\u6700\u540e\u5efa\u51fa\u540e\u7f00\u8fde\u63a5\u6811\uff0c\u628a\u6807\u8bb0\u4e0b\u63a8\u5230\u5b50\u6811\u5185\u7684\u6240\u6709\u7ed3\u70b9\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u628a\u6bcd\u4e32\u4e22\u8fdb\u53bb\u8dd1\u4e00\u904d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u7ed3\u70b9\uff0c\u5047\u8bbe\u4f4d\u7f6e\u662f $i$ \uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6807\u8bb0\u503c\u662f $v$ \uff0c\u90a3\u4e48\u6211\u4eec\u8ba9\u7b54\u6848\u6570\u7ec4\u7684 `ans[i-v+1]` .. `ans[i]` \u90fd\u7f6e\u4e3a $1$ \u5373\u53ef\u3002\n\n\u6700\u540e\u626b\u4e00\u904d\u6c42\u5f97\u7b54\u6848\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<iterator>\n#include<algorithm>\n#include<cstdlib>\n#include<map>\n#include<set>\n#include<vector>\n#include<queue>\nusing namespace std;\ntypedef long long ll;\ntypedef ostream_iterator<int> os_iter_int;\n\nint n,m;\nshort ans[300010];\nchar chr[300010],ch2[5010];\n\ntemplate<typename inp_t>\nvoid readx(inp_t& x)\n{\n\tx=0; int k=1; char ch=0;\n\twhile (ch<'0' || ch>'9') { ch=getchar(); if (ch=='-') k=-1; }\n\twhile (ch>='0' && ch<='9') { x=x*10+ch-'0'; ch=getchar(); }\n\tx*=k;\n}\n\nnamespace SAM\n{\n\t#define CH(a,b) node[a].ch[b]\n\t\n\tstruct SAM_Node\n\t{\n\t\tint maxs,ch[27],suf;\n\t\tshort maxm;\n\t\tSAM_Node(){}\n\t}node[600010];\n\tint samsiz=1,end=1;\n\t\n\tvoid Append(int c)\n\t{\n\t\tSAM_Node& now=node[++samsiz]; int pos=end;\n\t\t\n\t\tnow.maxs=node[end].maxs+1; end=samsiz;\n\t\tfor (;pos && !CH(pos,c);pos=node[pos].suf)\n\t\t\tCH(pos,c)=samsiz;\n\t\t\n\t\tif (!pos)\n\t\t\tnow.suf=1;\n\t\telse if (node[pos].maxs+1==node[CH(pos,c)].maxs)\n\t\t\tnow.suf=CH(pos,c);\n\t\telse\n\t\t{\n\t\t\tint pre=CH(pos,c);\n\t\t\tSAM_Node& N=node[++samsiz],& O=node[pre];\n\t\t\t\n\t\t\tcopy(O.ch+1,O.ch+27,N.ch+1);\n\t\t\tN.suf=O.suf; N.maxs=node[pos].maxs+1;\n\t\t\tO.suf=now.suf=samsiz;\n\t\t\t\n\t\t\tfor (int i=pos;CH(i,c)==pre;i=node[i].suf)\n\t\t\t\tCH(i,c)=samsiz;\n\t\t}\n\t}\n\t\n\tstruct ed { int pre,to; } edge[600010];\n\tint at=1,ptr[600010];\n\tvoid Is(int fx,int tx)\n\t{\n\t\tat++;\n\t\tedge[at].pre=ptr[fx];\n\t\tedge[at].to=tx;\n\t\tptr[fx]=at;\n\t}\n\tvoid BuildTree()\n\t{\n\t\tfor (int i=2;i<=samsiz;i++)\n\t\t\tIs(node[i].suf,i);\n\t}\n\t\n\tvoid Match(char* str,short len)\n\t{\n\t\tint now=1;\n\t\tfor (int i=1;i<=len;i++)\n\t\t\tnow=node[now].ch[str[i]-'a'+1];\n\t\tnode[now].maxm=max(node[now].maxm,len);\n\t}\n\t\n\tvoid DFS(int now,short maxv)\n\t{\n\t\tnode[now].maxm=max(node[now].maxm,maxv);\n\t\tfor (int v=ptr[now];v;v=edge[v].pre) \n\t\t\tDFS(edge[v].to,node[now].maxm);\n\t}\n\t\n\tvoid Cover(char* str,int len)\n\t{\n\t\tint now=1;\n\t\tfor (int i=1;i<=len;i++)\n\t\t{\n\t\t\tnow=node[now].ch[str[i]-'a'+1];\n\t\t\tans[i-node[now].maxm+1]+=1;\n\t\t\tans[i+1]-=1;\n\t\t}\n\t\tfor (int i=1;i<=len;i++) ans[i]+=ans[i-1];\n\t}\n\t\n\t#undef CH\n};\n\nint main()\n{\n\treadx(n);\n\tscanf(\"%s\",chr+1);\n\tfor (int i=1;i<=n;i++) SAM::Append(chr[i]-'a'+1);\n\tSAM::BuildTree();\n\t\n\treadx(m);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%s\",ch2+1);\n\t\tint len=strlen(ch2+1);\n\t\tSAM::Match(ch2,len);\n\t}\n\tSAM::DFS(1,0);\n\tSAM::Cover(chr,n);\n\t\n\tint tans=0;\n\tfor (int i=1;i<=n;i++) tans+=(!ans[i]);\n\tprintf(\"%d\\n\",tans);\n}\n```",
        "postTime": 1553667169,
        "uid": 21512,
        "name": "GNAQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4595 \u3010[COCI2011-2012#5] POPLOCAVANJE\u3011"
    },
    {
        "content": "\u636e\u8bf4\u8fd9\u9053\u9898\u5361\u7a7a\u95f4\uff1f\n\n\u4e0d\u5b58\u5728\u7684\uff0c\u62ff$AC$\u81ea\u52a8\u673a\u53bb\u5b58$5000\\times5000$\u7684\u4e32\u80af\u5b9a\u662f\u8981M\u7684\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u957f\u5ea6\u4e3a$n$\u7684\u4e32\u5efa\u4e00\u4e2a$SAM$\uff0c\u8fd9\u6837\u7a7a\u95f4\u5c31\u53ea\u9700\u8981\u4e24\u500d\u7684$3e5$\u4e86\n\n\u4e4b\u540e\u628a\u6bcf\u4e2a\u8f93\u5165\u7684\u4e32\u653e\u5230$SAM$\u4e0a\u5339\u914d\uff0c\u5339\u914d\u5230\u4e86\u5c31\u6253\u66f4\u65b0\u4e00\u4e0b\u8fd9\u4e2a\u8282\u70b9\u7684\u6700\u5927\u5339\u914d\u957f\u5ea6\n\n\u4e4b\u540e\u5728$parent$\u6811\u4e0a\u4f20\u4e00\u4e0b\u8fd9\u4e2a\u6700\u5927\u5339\u914d\u957f\u5ea6\uff0c\u4e00\u904d\u5dee\u5206\u7ef4\u62a4\u5c31\u597d\u4e86\n\n\u7a7a\u95f4\u5b8c\u5168\u4e0d\u5361\uff0c\u5982\u679c\u786c\u8981\u7ee7\u7eed\u5361\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528$map$\u6765\u5b58$SAM$\u90a3\u6837\u7a7a\u95f4\u5c31\u662f\u7ebf\u6027\u7684\uff0c\u4e0d\u9700\u8981\u53bb\u4e58\u4e0a\u90a3\u4e2a\u5b57\u7b26\u96c6\u7684\u5e38\u6570\u4e86\n\n\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#define re register\n#define maxn 600006\n#define LL long long\n#define inf 999999999\ninline int max(int a,int b){return a>b?a:b;}\nint tax[maxn],a[maxn];\nint n,m,cnt=1,lst=1,num,ans;\nint fa[maxn],len[maxn],endpos[maxn],son[maxn][26],mx[maxn];\nint pre[maxn>>1];\nchar S[5005],T[maxn>>1];\ninline void ins(int c,int o)\n{\n    int p=++cnt,f=lst; lst=p;\n    len[p]=len[f]+1,endpos[p]=o;\n    while(f&&!son[f][c]) son[f][c]=p,f=fa[f];\n    if(!f) {fa[p]=1;return;}\n    int x=son[f][c];\n    if(len[f]+1==len[x]) {fa[p]=x;return;}\n    int y=++cnt;\n    len[y]=len[f]+1,fa[y]=fa[x],fa[x]=fa[p]=y;\n    memcpy(son[y],son[x],sizeof(son[x]));\n    while(f&&son[f][c]==x) son[f][c]=y,f=fa[f];\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    scanf(\"%s\",T+1);\n    for(re int i=1;i<=n;i++) ins(T[i]-'a',i);\n    scanf(\"%d\",&m);\n    while(m--)\n    {\n        scanf(\"%s\",S+1);\n        int len=strlen(S+1);\n        int now=1;\n        for(re int i=1;i<=len;i++) {now=son[now][S[i]-'a'];if(!now) break;}\n        if(now)mx[now]=max(mx[now],len);\n    }\n    for(re int i=1;i<=cnt;i++) tax[len[i]]++;\n    for(re int i=1;i<=n;i++) tax[i]+=tax[i-1];\n    for(re int i=1;i<=cnt;i++) a[tax[len[i]]--]=i;\n    for(re int i=1;i<=cnt;i++)\n    {\n        int k=a[i];\n        mx[k]=max(mx[k],mx[fa[k]]);\n        if(mx[k]&&endpos[k]) pre[endpos[k]-mx[k]+1]++,pre[endpos[k]+1]--;\n    }\n    for(re int i=1;i<=n;i++) pre[i]+=pre[i-1];\n    for(re int i=1;i<=n;i++) if(!pre[i]) ++ans;\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1548767464,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4595 \u3010[COCI2011-2012#5] POPLOCAVANJE\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4595)\n\n#### \u524d\u8a00\n\u672c\u849f\u84bb\u5f53\u65f6\u53ea\u5dee\u4e00\u6b65\u4e4b\u9065\u5c31 A \u4e86\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n#### \u601d\u8def\n\u76f4\u63a5\u6a21\u62df\u80af\u5b9a\u4f1a\u8d85\u65f6\uff0c\u53ea\u6709 $60$ \u5206\uff08\u8fd9\u4e2a\u5e94\u8be5\u90fd\u4f1a\u5427\uff09\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u5230\u67e5\u5206\u548c\u54c8\u5e0c\u4f18\u5316\u3002\n\u7528\u54c8\u5e0c\u6700\u597d\u5b9a\u4e49\u4e00\u4e2a\u8d28\u6570\uff0c\u4eb2\u6d4b $233$ \u53ef\u8fc7\uff0c\u54c8\u5e0c\u5982\u4e0b\u3002\n\n```c\nfor(int i = 1;i <= n;i++)\n{\n\tha[i] = ha[i - 1] * bt + a[i];\t//\u54c8\u5e0c\n\tdw[i] = dw[i - 1] * bt; //dw\u662f\u672c\u4eba\u670b\u53cb\uff0c\u8fd9\u91cc\u6700\u597d\u7528 pw\n}\n```\n\u7136\u540e\u518d\u5728\u628a\u66b4\u529b\u4ee3\u7801\u6539\u4e00\u4e0b\uff0c\u5c31 A \u4e86\u3002\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nchar a[300010],b[5010];\nint n,m,lb,bt = 233,v[300001];\nlong long ha[300010],dw[300010],h,ans;\nint main()\n{\n//\tfreopen(\"block.in\",\"r\",stdin);\n//\tfreopen(\"block.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",a + 1);\n\tscanf(\"%d\",&m);\n\tdw[0] = 1;\n\tfor(int i = 1;i <= n;i++)//\u54c8\u5e0c\n\t{\n\t\tha[i] = ha[i - 1] * bt + a[i];\t\n\t\tdw[i] = dw[i - 1] * bt;\n\t}\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tscanf(\"%s\",b + 1);\n\t\tlb = strlen(b + 1);\n\t\th = 0;\n\t\tfor(int k = 1;k <= lb;k++)\n\t\t\th = h * bt + b[k]; //\u524d\u7f00\n\t\tfor(int j = 1;j <= n - lb + 1;j++)\n\t\t{\n\t\t\tif(ha[j + lb - 1] - ha[j - 1] * dw[lb] == h) \n\t\t\t\tv[j]++, v[j + lb]--; //\u5dee\u5206\n\t\t}\n\t}\n\tint o;\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\to += v[i];\n\t\tif(!o) ans++;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n\n\n```\n\n\n",
        "postTime": 1673422430,
        "uid": 704089,
        "name": "kkxacj",
        "ccfLevel": 0,
        "title": "P4595 [COCI2011-2012#5] POPLO\u010cAVANJE"
    },
    {
        "content": "\u672c\u849f\u84bb\u6765\u4ea4\u7b2c\u4e00\u7bc7\u9ed1\u9898\u9898\u89e3\u3002\u3002\u3002\n\n\u7531\u4e8e\u672c\u4eba\u592a\u5f31\uff0c\u4e0d\u4f1a $KMP$ ,\u4e5f\u4e0d\u4f1a $AC$ \u81ea\u52a8\u673a\uff0c\u6240\u4ee5\u672c\u4eba\u53ea\u80fd\u7528\u50bb\u50bb\u7684\u54c8\u5e0c\u554a\uff01\uff01\uff01\n\n\u60f3\u6cd5\uff1a\u6211\u4eec\u5c06\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u8f6c\u6210 $prime$\uff08 $prime$ \u662f\u4e00\u4e2a\u5927\u4e8e $26$ \u7684\u8d28\u6570\uff09\u8fdb\u5236\u6570\uff0c\u4e5f\u5c31\u662f\u7c7b\u4f3c\u4e8e\u5feb\u8bfb\u7684\u539f\u7406\uff0c $x=x*10+ch-'0'$\u3002 \n\n\u5982\u679c $int$ \u7c7b\u578b\u5b58\u4e0d\u4e0b\uff0c\u53d8\u6210\u4e71\u7801\u4e86\uff0c\u90a3\u53c8\u4f1a\u600e\u4e48\u6837\u5462\uff0c\u6211\u628a\u6240\u6709\u7684\u5b57\u7b26\u4e32\u90fd\u8f6c\u6210\u4e71\u7801\uff0c\u53cd\u6b63\u89c4\u5219\u90fd\u662f\u4e00\u6837\u7684\uff0c\u53c8\u6ca1\u5173\u7cfb\u3002\uff08\u8c01\u8ba9\u8fd9\u9053\u9ed1\u9898\u90a3\u4e48\u5751\uff01\uff01\uff01\u6211\u53ea\u80fd\u65e0\u803b\u554a\uff01\uff01\uff01\uff09\n\n\u7136\u540e\u6211\u4eec\u5148\u6309\u7167\u4e71\u7801\u6784\u9020\u4e00\u8d9f\u524d\u7f00\u548c\uff0c\u679a\u4e3e\u4e00\u4e2a\u7ec8\u70b9\uff0c\u7136\u540e\u770b\u4e00\u4e0b\u8fd9\u4e00\u6bb5\u7684\u4e71\u7801\u662f\u5426\u4e0e\u8857\u9053\u5b57\u7b26\u4e32\u7684\u4e71\u7801\u76f8\u7b49\uff0c\u76f8\u7b49\uff0c\u5c31\u6709\u5dee\u5206\u6807\u8bb0\u4e00\u4e0b\u3002\u6700\u540e\u518d\u627e\u4e00\u8d9f\u6ca1\u6709\u5927\u4e8e $0$ \u7684\u503c\u6709\u51e0\u4e2a\uff0c\u5c31\u597d\u4e86\u3002\n\n\u81f3\u4e8e\u8fd9\u4e2a $prime$ \uff0c\u6211\u8bd5\u4e86\u597d\u591a\u6b21\uff0c\u53d1\u73b0\u4e00\u822c\u6765\u8bf4\u662f\u8d28\u6570\u6bd4\u8f83\u597d\u4e00\u70b9\uff0c\u8fd9\u6837\u649e\u8f66\u7684\u6982\u7387\u6bd4\u8f83\u5c0f\u3002\n\n\u672c\u849f\u84bb\u8bed\u6587\u8f83\u5dee\uff0c\u6240\u4ee5\u4ee3\u7801\u4e2d\u8fd8\u4f1a\u6709\u6709\u6ce8\u91ca\u3002\n\n$code$ \uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int prime=37,maxn=300005;\nint n,m,Ans,E[maxn],key[maxn],pw[maxn];\nchar s[maxn];\nint main(){\n    scanf(\"%d%s\",&n,s+1);\n    pw[0]=1;\n    for (int i=1;i<=n;i++){\n       key[i]=key[i-1]*prime+s[i];//\u5236\u9020prime\u8fdb\u5236\u6570\uff0c\u5c31\u7b97\u662f\u4e71\u7801\u4e5f\u6ca1\u5173\u7cfb\uff0c\u56e0\u4e3a\u5176\u4ed6\u5b57\u7b26\u4e32\u4e5f\u662f\u8fd9\u6837\u5904\u7406\u7684 \n       pw [i]=pw [i-1]*prime;\n    }\n    scanf(\"%d\",&m);\n    for (int i=1;i<=m;i++){\n      scanf(\"%s\",s);\n      int l=strlen(s),kp=0;\n      for (int j=0;j<l;j++) kp=kp*prime+s[j];//\u5236\u9020prime\u8fdb\u5236\u6570\n      for (int j=l;j<=n;j++){\n      \tint w=key[j]-key[j-l]*pw[l];//\u6784\u9020\u679a\u4e3e\u4e00\u4e2a\u7ec8\u70b9\uff0c\u90a3\u4e48\u8d77\u70b9\u5c31\u4e3aj-l+1\n        if (w==kp) E[j-l+1]++,E[j+1]--;//\u5982\u679c\u4e71\u7801\u4e00\u6837\uff0c\u5dee\u5206\n\t  }\n    }\n    int now=0;\n    for (int i=1;i<=n;i++) now+=E[i],Ans+=!now;//\u5dee\u5206\uff0c\u6c42\u6362\u4e0d\u4e86\u7684\u74f7\u7816\u6570\n    printf(\"%d\\n\",Ans);\n    return 0;\n}\n```\n",
        "postTime": 1598702757,
        "uid": 370354,
        "name": "yxy666",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4595 \u3010[COCI2011-2012#5] POPLOCAVANJE\u3011"
    }
]