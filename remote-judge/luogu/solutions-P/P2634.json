[
    {
        "content": "\u5176\u5b9e\u6811\u72b6DP\u4e5f\u53ef\u4ee5\u505a\u7684\uff0c\u800c\u4e14\u590d\u6742\u5ea6\u6bd4\u70b9\u5206\u6cbb\u4f4e......\n\n\u6211\u4eec\u5b9a\u4e49 f[x][0,1,2] \u8868\u793a\u5728\u70b9x\u53ca\u5176\u5b50\u6811\u4e2d\uff0c\u8ddd\u79bb\u70b9x\u7684\u8ddd\u79bb\u5728\u6a213\u610f\u4e49\u4e0b\u4e3a0,1,2\u7684\u70b9\u5206\u522b\u6709\u591a\u5c11\u4e2a\u3002\n\n\u8f6c\u79fb\u7684\u8bdd\u76f4\u63a5\u4ece\u5b50\u6811\u52a0\u4e0a\u8fb9\u957f\u8f6c\u79fb\u3002\n\n\u7edf\u8ba1\u7b54\u6848\u65f6\u9700\u8981\u5728\u8f6c\u79fb\u67d0\u4e00\u4e2a\u5b50\u6811\u524d\u8fdb\u884c\u7edf\u8ba1\u3002\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5377\u79ef(\u96fe?\u8bf4\u4eba\u8bdd!)\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u8ba9 \u524d\u9762\u7684\u5b50\u6811\u7684\u70b9\u5230\u70b9x\u7684\u8ddd\u79bb \u4e0e \u5f53\u524d\u5b50\u6811\u4e2d\u7684\u70b9\u5230\u70b9x\u7684\u8ddd\u79bb \u5728\u6a213\u610f\u4e49\u4e0b\u4e3a0\u3002\u56e0\u4e3a\u70b9\u5bf9\u6709\u5e8f\uff0c\u6240\u4ee5\u4e582\u3002\n\n\u521d\u503c\u4e3af[x][0]=1\u3002\u6700\u540e\u7b54\u6848\u52a0\u4e0a \u6bcf\u4e2a\u70b9\u5230\u672c\u8eab\u7684\u65b9\u6848\u4e66(\u5176\u5b9e\u5c31\u662fn) \uff0c \u53bb\u548cn\\*n\u53d6gcd\u5373\u53ef\u3002\n\n\n\u6700\u540e\u4e0a\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cctype>\n#define debug cout\nusing namespace std;\nconst int maxn=2e4+1e2;\n\nint s[maxn],t[maxn<<1],nxt[maxn<<1],l[maxn<<1];\nint f[maxn][3];\nint n,ans,full,g;\n\ninline void addedge(int from,int to,int len)\n{\n    static int cnt = 0;\n    t[++cnt] = to;\n    l[cnt] = len;\n    nxt[cnt] = s[from];\n    s[from] = cnt;\n}\n\ninline int mod(int x)\n{\n    return (x%3+3)%3;\n}\n\ninline int gcd(int x,int y)\n{\n    if( ! ( x && y ) )\n        return x | y;\n    register int t;\n    while( t = x % y )\n        x = y , y = t;\n    return y;\n}\n\ninline void dfs(int pos,int fa)\n{\n    f[pos][0] = 1;\n    for(int at=s[pos];at;at=nxt[at])\n    {\n        if( t[at] == fa )\n            continue;\n        dfs(t[at],pos);\n        for(int i=0;i<3;i++)\n            ans += f[t[at]][i] * f[pos][mod(-i-l[at])] * 2;\n        for(int i=0;i<3;i++)\n            f[pos][mod(i+l[at])] += f[t[at]][i];\n    }\n}\n\ninline int getint()\n{\n    int ret = 0 , fix = 1;\n    char ch = getchar();\n    while( ! isdigit(ch) )\n        fix = ch == '-' ? -1 : fix,\n        ch = getchar();\n    while( isdigit(ch) )\n        ret = ret * 10 + ( ch - '0' ),\n        ch = getchar();\n    return ret * fix;\n}\n\nint main()\n{\n    n = getint();\n    for(int i=1,a,b,l;i<n;i++)\n    {\n        a = getint() , b = getint() , l = getint();\n        addedge(a,b,l);\n        addedge(b,a,l);\n    }\n    \n    dfs(1,-1);\n    \n    ans += n;\n    full = n * n;\n    g = gcd( ans , full );\n    ans /= g , full /= g;\n    \n    printf(\"%d/%d\\n\",ans,full);\n    \n    return 0;\n}\n```",
        "postTime": 1510042629,
        "uid": 31907,
        "name": "cmd2001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2634 \u3010\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u70b9\u5206\u6cbb\u7684\u6a21\u677f\u9898\u3002\n\n\u4f5c\u4e3a\u4e00\u4e2a\u849f\u84bb\uff0c\u6211\u5b66\u4e60\u4e00\u4e2a\u7b97\u6cd5\u90fd\u662f\u4ece\u770b\u56fe\u89e3\u3001\u770b\u4ee3\u7801\u5f00\u59cb\u3002\u4e00\u4e2a\u6a21\u677f\u9898\u662f\u65b0\u624b\u7ec3\u624b\u4e4b\u5904\uff0c\u81ea\u5e94\u6709\u8be6\u7ec6\u7684\u4ee3\u7801\u89e3\u91ca\u8ba9\u4ed6\u4eec\u7406\u89e3\u7a0b\u5e8f\uff0c\u7ee7\u800c\u7406\u89e3\u7b97\u6cd5\u3002~~\u56e0\u800c\u697c\u4e0b\u4ee3\u7801\u7b80\u77ed\u7684\u6ce8\u91ca\u5bf9\u65b0\u624b\u4e0d\u592a\u53cb\u597d~~\n\n\u5728\u4e00\u4e9b\u6811\u4e0a\u8def\u5f84\u95ee\u9898\u4e2d\uff0c\u66b4\u529b\u6c42\u89e3\u65f6\u95f4\u590d\u6742\u5ea6\u8fc7\u9ad8\uff0c\u5f80\u5f80\u9700\u8981\u4e00\u4e9b\u66f4\u4e3a\u9ad8\u6548\u7684\u7b97\u6cd5\uff0c\u70b9\u5206\u6cbb\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\n\n\u3010\u6d41\u7a0b\u3011\n\n1\u3001\u9996\u5148\u9009\u53d6\u4e00\u4e2a\u70b9\uff0c\u628a\u65e0\u6839\u6811\u53d8\u6210\u6709\u6839\u6811\u3002\n\n\u90a3\u4e48\u5982\u4f55\u9009\u70b9\u5462\uff1f    \u2014\u2014\u6811\u578b\u52a8\u89c4\n\n\u56e0\u4e3a\u6811\u662f\u9012\u5f52\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5f53\u7136\u5e0c\u671b\u9012\u5f52\u7684\u5c42\u6570\u6700\u5c0f\u3002\n\n\u6bcf\u6b21\u9009\u53d6\u7684\u70b9\uff0c\u8981\u4fdd\u8bc1\u4e0e\u6b64\u70b9\u76f8\u8fde\u7684\u7ed3\u70b9\u6570\u6700\u591a\u7684\u8fde\u901a\u5757\u7684\u7ed3\u70b9\u6570\u6700\u5c0f\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u70b9\u53eb\u505a\u201c\u91cd\u5fc3\u201d\u3002\n\n\u90a3\u4e48\u627e\u5230\u4e00\u9897\u6811\u7684\u91cd\u5fc3\u6709\u4ee5\u4e0b\u7b97\u6cd5\uff1a\n\n\uff081\uff09dfs\u4e00\u6b21\uff0c\u7b97\u51fa\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u3002\n\n\uff082\uff09\u8bb0\u5f55\u4ee5\u6bcf\u4e2a\u7ed3\u70b9\u4e3a\u6839\u7684\u6700\u5927\u5b50\u6811\u7684\u5927\u5c0f\u3002\n\n\uff083\uff09\u5224\u65ad\uff1a\u5982\u679c\u4ee5\u5f53\u524d\u7ed3\u70b9\u4e3a\u6839\u7684\u6700\u5927\u5b50\u6811\u5927\u5c0f\u6bd4\u5f53\u524d\u6839\u66f4\u4f18\uff0c\u66f4\u65b0\u5f53\u524d\u6839\u3002\n\n2\u3001\u5904\u7406\u8054\u901a\u5757\u4e2d\u901a\u8fc7\u6839\u7ed3\u70b9\u7684\u8def\u5f84\u3002\n\n3\u3001\u6807\u8bb0\u6839\u7ed3\u70b9\uff08\u76f8\u5f53\u4e8e\u5904\u7406\u8fc7\u540e\uff0c\u5c06\u6839\u7ed3\u70b9\u4ece\u5b50\u6811\u4e2d\u5220\u9664\uff09\u3002\n\n4\u3001\u9012\u5f52\u5904\u7406\u4ee5\u5f53\u524d\u70b9\u7684\u513f\u5b50\u4e3a\u6839\u7684\u6bcf\u68f5\u5b50\u6811\u3002\n\n\u672c\u9898\u6838\u5fc3\u601d\u60f3\uff1a\u660e\u663e\u7684\u6811\u4e0a\u7684\u70b9\u5206\u6cbb\uff0c\u5229\u7528\u6570\u7ec4t[]\u8868\u793a\u641c\u5f53\u524d\u6839\u7684\u5b50\u6811\u65f6\uff0c\u5f53\u524d\u5b50\u6811\u4e4b\u524d\u7684\u8def\u5f84\u957fx\u7684\u65b9\u6848\u6570\u3002\u6700\u7ec8\u7b54\u6848\u4e3a\u5f53\u524d\u5b50\u6811\u8def\u5f84\u957fx\u7684\u65b9\u6848\u6570 \\*ans+=g[j]\\*ff[(3-j)%3]\\*2\u3002\n\n\u6ce8\u610f\uff08\uff11\uff0c\uff11\uff09\u5408\u6cd5\uff0c\uff08\uff11\uff0c\uff12\uff09\uff08\uff12\uff0c\uff11\uff09\u7b97\u4e24\u79cd\u3002\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#define fp(i,a,b) for(int i=a;i<=b;i++)\n#define fq(i,a,b) for(int i=a;i>=b;i--)\n#define il inline\n#define re register\n#define ll long long \nusing namespace std;\nconst int N=20005;\nint n,cnt=0,root,sum,ans,t[5],h[N],f[N],son[N]={},d[N]={};\nbool vis[N]={};\nstruct Edge\n{\n    int to,next,w;\n}e[N<<1];\nil int gi()\n{\n   int x=0;\n   short int t=1;\n   char ch=getchar();\n  while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n  if(ch=='-') t=-1,ch=getchar();\n  while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n  return x*t;\n}\nvoid add(int u,int v,int w)\n{\n    e[++cnt]=(Edge){v,h[u],w};h[u]=cnt;\n}\nvoid getdeep(int u,int fa)\n{\n    t[d[u]]++;\n    for(int i=h[u];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa||vis[v]) continue;\n        d[v]=(d[u]+e[i].w)%3;\n        getdeep(v,u);\n    }\n}\nint calc(int u,int v)\n{\n    t[0]=t[1]=t[2]=0;\n    d[u]=v;\n    getdeep(u,0);\n    return t[1]*t[2]*2+t[0]*t[0];\n}\nvoid getroot(int u,int fa)//u\u8868\u793a\u5f53\u524d\u7ed3\u70b9\uff0cfa\u8868\u793au\u7684\u7236\u7ed3\u70b9\n{\n    son[u]=1;\n    f[u]=0;//f\u6570\u7ec4\u8bb0\u5f55\u4ee5u\u4e3a\u6839\u7684\u6700\u5927\u5b50\u6811\u7684\u5927\u5c0f\n    for(int i=h[u];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v!=fa&&!vis[v])//\u907f\u514d\u9677\u5165\u6b7b\u5faa\u73af\n        {\n            getroot(v,u);//\u5f97\u5230\u5b50\u7ed3\u70b9\u4fe1\u606f\n            son[u]+=son[v];//\u8ba1\u7b97u\u7ed3\u70b9\u5927\u5c0f\n            f[u]=max(f[u],son[v]);//\u66f4\u65b0f\u6570\u7ec4\n        }\n    }\n    f[u]=max(f[u],sum-son[u]);//sum\u8868\u793a\u5f53\u524d\u6811\u7684\u5927\u5c0f\uff0c\u56e0\u4e3a\u4ee5x\u4e3a\u6839\u7684\u60c5\u51b5\u8fd8\u8981\u8003\u8651\u4ee5x\u7684\u7236\u4eb2\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u3002\n    if(f[u]<f[root]) root=u;//\u66f4\u65b0\u5f53\u524d\u6839\n}\nvoid solve(int u)\n{\n    ans+=calc(u,0);\n    vis[u]=1;//\u5c06\u5f53\u524d\u70b9\u6807\u8bb0\n    for(int i=h[u];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(vis[v]) continue;\n        ans-=calc(v,e[i].w);\n        root=0;//\u521d\u59cb\u5316\u6839  \n        sum=son[v];//\u521d\u59cb\u5316sum\n        getroot(v,0);//\u627e\u8fde\u901a\u5757\u7684\u6839\n        solve(root);//\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4e2a\u8fde\u901a\u5757\n    }\n}\nint gcd(int a,int b)\n{\n    return (!b)?a:gcd(b,a%b);\n}\nint main()\n{\n    n=gi();\n    fp(i,1,n-1)\n    {\n        int u=gi(),v=gi(),w=gi()%3;\n        add(u,v,w);add(v,u,w);//\u5efa\u6811\n    }\n    sum=f[0]=n;//\u521d\u59cb\u5316sum\u548cf[0]\n    root=0;//\u521d\u59cb\u5316root\n    getroot(1,0);//\u627e\u6839\n    solve(root);//\u70b9\u5206\u6cbb\n    int t=gcd(ans,n*n);\n    printf(\"%d/%d\\n\",ans/t,n*n/t);\n    return 0;\n}\nps:\u849f\u84bb\u521d\u5b66\u6b64\u7b97\u6cd5\uff0c\u5982\u6709\u7591\u95ee\u6216\u9898\u89e3\u6709\u4e0d\u5f53\u4e4b\u5904\u8bf7\u79c1\u4fe1\u6211\u3002\n```",
        "postTime": 1503488712,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2634 \u3010\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "\u5e76\u6ca1\u6709\u53bb\u5bb9\u65a5\u3002\uff08\u53ef\u4ee5\u964d\u4f4e\u4e0d\u5c11\u601d\u7ef4\u590d\u6742\u5ea6\uff09\r\n\r\n\u5728\u4e4b\u524d\u7684\u9898\u89e3\u4e4b\u4e2d\u5e76\u6ca1\u6709\u4eba\u53bb\u89e3\u91ca\u4e3a\u4ec0\u4e48t[0]*t[0]\u4e0d\u9700\u8981\u4e582\u3002\r\n\r\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u66f4\u52a0\u76f4\u89c2\u7684\u5199\u6cd5\uff0c\u5373\u6211\u4eec\u5f00\u4e00\u4e2a\u201c\u6876\u201d\uff0c\u6bcf\u6b21\u6211\u4eec\u628a\u5b50\u6811\u5185\u7684\u7b54\u6848\u4e0e\u6876\u91cc\u7684\u7b54\u6848\u5148\u5408\u5e76\u6765\u66f4\u65b0\u6700\u7ec8\u7684ans\uff0c\u5728\u628a\u8fd9\u4e2a\u5b50\u6811\u91cc\u7684\u7b54\u6848\u4e22\u8fdb\u90a3\u4e2a\u6876\u91cc\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u907f\u514d\u201c\u4e24\u4e2a\u94fe\u6709\u516c\u5171\u90e8\u5206\u201d\u7684\u95ee\u9898\u4e86\u3002\r\n\r\n\u4e8e\u662f\u8f6c\u79fb\u53d8\u5f97\u76f4\u89c2\u4e86\uff1a\r\n\r\n1.\r\n```cpp\r\ntong[0]*now[0]*2 \u4e4b\u524d\u62fc\u51fa\u6765\u76843\u7684\u500d\u6570\u548c\u73b0\u5728\u76843\u7684\u500d\u6570\u62fc\u62103\u7684\u500d\u6570\r\n```\r\n\r\n2.\r\n```cpp\r\ntong[1]*now[2]*2 \u4e4b\u524d\u76841\u548c\u73b0\u5728\u76842\r\n```\r\n\r\n3.\r\n```cpp\r\ntong[2]*now[1]*2 \u4e4b\u524d\u76842\u548c\u73b0\u5728\u76841\r\n```\r\n\r\n4.\r\n```cpp\r\nnow[0]*2 \u6ce8\u610f\u6b64\u5904\u4e00\u6761\u65b0\u7684\u957f\u4e3a3\u7684\u5355\u94fe\u4e5f\u53ef\u4ee5\u4ea7\u751f\u8d21\u732e\r\n```\r\n\r\n5.\r\n```cpp\r\n\tint a=ans+n,b=n*n; \u4e24\u70b9\u91cd\u5408\u6700\u540e\u5355\u7b97\r\n\tint c=__gcd(a,b);algorithm\u81ea\u5e26\u7684\u5947\u5999\u51fd\u6570\uff0c\u61d2\u4e00\u54c8~\r\n\tcout<<a/c<<'/'<<b/c;\r\n```\r\n\r\n\u603b\u4ee3\u7801\u5982\u4e0b\uff1a\r\n\r\n```cpp\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<iostream>\r\n#include<algorithm>\r\nusing namespace std;\r\nconst int N=100000,INF=2147483647;\r\nstatic char buf[100000],*pa,*pd;\r\n#define gc pa==pd&&(pd=(pa=buf)+fread(buf,1,100000,stdin),pa==pd)?EOF:*pa++\r\ninline int read(){\r\n\tregister int x(0);register char c(gc);\r\n\twhile(c>'9'||c<'0')c=gc;\r\n\twhile(c>='0'&&c<='9')x=x*10+(c^48),c=gc;\r\n\treturn x;\r\n}\r\nstruct edge{\r\n\tint to,next,w;\r\n}e[N];\r\nint head[N],tot;\r\ninline void add(int x,int y,int z){\r\n\te[++tot].to=y;e[tot].next=head[x];e[tot].w=z;head[x]=tot;\r\n}\r\nint n,tong[3],now[3],ans,root,sum,siz[N],maxp[N],vis[N],dis[N];\r\nvoid getroot(int u,int fa){\r\n\tsiz[u]=1;\r\n\tmaxp[u]=0;\r\n\tregister int i;\r\n\tfor(i=head[u];i;i=e[i].next)\r\n\t\tif(e[i].to!=fa&&!vis[e[i].to]){\r\n\t\t\tgetroot(e[i].to,u);\r\n\t\t\tsiz[u]+=siz[e[i].to];\r\n\t\t\tmaxp[u]=max(maxp[u],siz[e[i].to]);\t\t\r\n\t\t}\r\n\tmaxp[u]=max(maxp[u],sum-siz[u]);\r\n\tif(maxp[root]>maxp[u])root=u;\r\n}\r\nvoid getdis(int u,int fa){\r\n\tnow[dis[u]%3]++;\r\n\tregister int i;\r\n\tfor(i=head[u];i;i=e[i].next)\r\n\t\tif(!vis[e[i].to]&&e[i].to!=fa)\r\n\t\t\t{\r\n\t\t\tdis[e[i].to]=dis[u]+e[i].w;\r\n\t\t\tgetdis(e[i].to,u);\r\n\t\t}\r\n}\r\ninline void calc(int u){\r\n\tregister int i,j;\r\n\tfor(i=head[u];i;i=e[i].next)\r\n\t\tif(!vis[e[i].to]){\r\n\t\t\tfor(j=0;j<3;j++)now[j]=0;\r\n\t\t\tdis[e[i].to]=e[i].w;\r\n\t\t\tgetdis(e[i].to,u);\r\n\t\t\tans+=tong[0]*now[0]*2+tong[1]*now[2]*2+tong[2]*now[1]*2+now[0]*2;\r\n\t\t\tfor(j=0;j<3;j++)\r\n\t\t\t\ttong[j]+=now[j];\r\n\t\t}\r\n}\r\nvoid solve(int u){\r\n\tvis[u]=1;\r\n\tcalc(u);\r\n\tregister int i;\r\n\tfor(i=0;i<3;i++)tong[i]=0;\r\n\tfor(i=head[u];i;i=e[i].next)\r\n\t\tif(!vis[e[i].to]){\r\n\t\t\tsum=siz[e[i].to];\r\n\t\t\tmaxp[root=0]=INF;\r\n\t\t\tgetroot(e[i].to,0);\r\n\t\t\tsolve(root);\r\n\t\t}\r\n}\r\nint main(){\r\n\tn=read();\r\n\tregister int i,x,y,z;\r\n\tfor(i=1;i<n;i++){\r\n\t\tx=read();y=read();z=read();\r\n\t\tadd(x,y,z);add(y,x,z);\r\n\t}\r\n\tmaxp[root]=sum=n;\r\n\tgetroot(1,0);\r\n\tsolve(root);\r\n\tint a=ans+n,b=n*n;\r\n\tint c=__gcd(a,b);\r\n\tcout<<a/c<<'/'<<b/c;\r\n\treturn 0;\r\n} \r\n```",
        "postTime": 1548558013,
        "uid": 130060,
        "name": "TopCarry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2634 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "\u70b9\u5206\u6cbb\uff0c\u4e00\u79cd\u4f18\u96c5\u7684\u66b4\u529b\n\n\u867d\u7136\u5e26\u4e0a\u4e86\u4e00\u4e2a\u201c\u5206\u6cbb\u201d\u7684\u540d\u79f0\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e2a\u4eba\u611f\u89c9\u548c\u5206\u6cbb\u5173\u7cfb\u4e0d\u5927\u554a\uff1f\n\n~~\u7b97\u4e86\uff0c\u6211\u679c\u7136\u8fd8\u662f\u592a$naive$\u4e86~~\n\n\u505a\u6cd5\uff1a\n\u56e0\u4e3a\u6811\u4e0a\u4efb\u610f\u4e24\u70b9\u7684\u8def\u5f84\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5\u6811\u4e0a\u7684\u8def\u5f84\u603b\u6570\u4e3a$n^2$\u7684\u3002\n\n\u6362\u800c\u8a00\u4e4b\uff0c\u9898\u76ee\u8981\u6211\u4eec\u6c42\u7684\u662f\u8ddd\u79bb\u4e3a$3$\u7684\u500d\u6570\u7684\u70b9\u6709\u591a\u5c11\u4e2a\u3002\n\n\u73b0\u5728\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u70b9$u$\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0$u$\u7684\u5b50\u6811\u4e0a\u7684\u8def\u5f84\u5206\u4e3a\u4e24\u79cd\uff1a\n\n$1.$\u8fc7$u$\u7684\u8def\u5f84\n\n$2.$\u4e0d\u8fc7$u$\u7684\u8def\u5f84\n\n\u6240\u4ee5\u4e00\u6761\u8def\u5f84\u5176\u8981\u4e48\u8fc7$u,$\u8981\u4e48\u4e0d\u8fc7$u$\n\n\u73b0\u5728\u8003\u8651\u8fc7$u$\u7684\u70b9\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u6240\u6709\u8fc7$u$\u7684\u70b9\u7684\u7b54\u6848\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u5730\u53bb\u7edf\u8ba1\u5176\u5b50\u6811\u7684\u70b9\u79bb$u$\u7684\u8ddd\u79bb\uff0c\u8bb0$dis[x]$\u8868\u793a$x$\u5230$u$\u7684\u8ddd\u79bb$\\%3$\u7684\u503c\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6bcf\u9047\u5230\u4e00\u4e2a\u70b9$x$\u5c31\u4ee4$sum[dis[x]\\%3]++$\n\n\u6240\u4ee5\u6bd4\u8f83\u6734\u7d20\u7684\u60f3\u6cd5\u53bb\u7edf\u8ba1\u7b54\u6848\u5c31\u662f\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u6c42\u51fa$u$\u7684\u524d$k$\u68f5\u5b50\u6811\u7684$sum$\uff0c\u7136\u540e\u5bf9\u4e8e\u53e6\u4e00\u68f5\u5b50\u6811\u7684\u70b9$v$\uff0c\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u5730\u53bb\u66f4\u65b0\u524d$k$\u68f5\u5b50\u6811\u7684\u4efb\u610f\u4e00\u6761\u8def\u5f84\u4e0e$v$\u6784\u6210\u7684\u8def\u5f84\u957f\u5ea6\u4e3a$k$\u6709\u591a\u5c11\u4e2a\u3002\n\n\u5199\u6210\u5f0f\u5b50\u5e94\u8be5\u5c31\u6bd4\u8f83\u597d\u61c2\u4e86\uff1f\n\n$$ans[(dis[v] + k)\\%3]+= book[k]*2$$\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u68f5\u6811\u7684\u7b54\u6848\u4e0e\u6211\u4eec\u5982\u4f55\u904d\u5386\u8fd9\u68f5\u6811\u65e0\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u5047\u8bbe\u6c42\u51fa\u4e86$u$\u7684\u7b54\u6848\u540e\uff0c\u7136\u540e\u6211\u4eec\u518d\u53bb\u6c42$u$\u7684\u5404\u68f5\u5b50\u6811\u7684\u7b54\u6848\u3002\n\n\u5f53\u7136\u76f4\u63a5\u8fd9\u6837\u505a\u590d\u6742\u5ea6\u8fd8\u662f$O(N^2)$\u7684\uff08\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u603b\u611f\u89c9\u70b9\u5206\u6cbb\u8fd8\u662f\u66b4\u529b\u7684$QAQ$~~\u53ef\u80fd\u662f\u6211\u592a\u5f31\u4e86~~\uff09\n\n\u56e0\u4e3a\u4e4b\u524d\u8bb2\u8fc7\uff1a\u4e00\u68f5\u6811\u7684\u7b54\u6848\u4e0e\u6211\u4eec\u5982\u4f55\u904d\u5386\u8fd9\u68f5\u6811\u65e0\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8fd9\u9897\u6811\u5f62\u6001\u6ca1\u6709\u6539\u53d8\uff0c\u6240\u5f97\u7684\u7b54\u6848\u8fd8\u662f\u4e00\u6837\u7684\u3002\n\n\u6545\uff0c\u6211\u4eec\u6bcf\u6b21\u4ece\u4e00\u68f5\u6811\u7684\u91cd\u5fc3\u5f00\u59cb\u904d\u5386\uff0c\u7136\u540e\u5904\u7406\u5b8c\u5176\u7b54\u6848\u540e\u4ece\u5176\u5b50\u6811\u7684\u91cd\u5fc3\u904d\u5386\u3002\n\n~~\u636e\u8bf4\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u5c31\u662f$O(NlogN)$\u4e86......\u849f\u84bb\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48~~\n\n\u7136\u540e\u8fd9\u6837\u53ef\u80fd\u662f\u53ef\u4ee5\u8fc7\u8fd9\u9053\u9898\u4e86\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u628a\u4ee3\u7801\u5199\u5f97\u66f4\u7b80\u5355\u70b9\u3002\n\n\u6211\u4eec\u8003\u8651\u5bb9\u65a5\uff1a\n\n\u5047\u8bbe\u6211\u4eec\u6c42\u5f97\u4e86$u$\u7684\u5b50\u6811\u4e2d\u7684\u70b9\uff0c\u79bb$u$\u7684\u8ddd\u79bb$\\%$\u5206\u522b\u4e3a$0,1,2$\u7684\u6570\u4e2a\u6570\u3002\n\n\u4ee4$ans = book[0] * book[0] + book[1] * book[2] * 2$\n\n\u90a3\u4e48$ans$\u8868\u793a\u7684\u662f\u8ddd\u79bb$u$\u957f\u5ea6\u4e3a$3$\u7684\u500d\u6570\u7684\u70b9\u4e24\u4e24\u7ec4\u6210\u7684\u7b54\u6848\u3002\n\n\u90a3\u4e48\u6211\u4eec\u91cd\u590d\u7edf\u8ba1\u4e86\u90a3\u4e9b\u90e8\u5206\u5462\uff1f\u6211\u4eec\u628a\u4e00\u68f5\u5b50\u6811\u91cc\u9762\u7684\u70b9\u8ddd$u$\u8ddd\u79bb\u4e3a$3$\u7684\u500d\u6570\u7684\u70b9\u91cd\u590d\u7edf\u8ba1\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u51cf\u53bb\u5b50\u6811\u7684$ans$\n\n\u6700\u540e\u5f0f\u5b50\u5927\u6982\u5c31\u662f\u8fd9\u6837\uff1a\n\n```cpp\nans += doit(x)//doit\u7edf\u8ba1\u7b54\u6848\n\nfor( \u679a\u4e3ei\u7684\u5b50\u6811 )\n\tans -= doit(v);\n\n```\n\n\u6700\u540e\u662f\u7b80\u6d01\u53ef\u8bfb$($~~\u4e11\u964b\u4e0d\u582a~~$)$\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\nconst int M = 200000 + 5;\n#define il inline\n#define re register\n#define Next( i, u ) for( re int i = head[u]; i; i = e[i].next )\n#define rep( i, s, t ) for( re int i = s; i <= t; ++ i ) \n#define drep( i, t, s ) for( re int i = t; i >= s; -- i )\nstruct E {\n\tint to, next, w;\n}e[M * 2];\nint n, cnt, tot, book[5], ans, sum, rt;\nint head[M], vis[M], dp[M], size[M], dis[M];\n\nint gcd( int a, int b ) {\n\tif( b == 0 ) return a;\n\treturn gcd( b, a % b );\n}\nil void add( int x, int y, int z ) {\n\te[++ cnt] = (E){ y, head[x], z }, head[x] = cnt;\n\te[++ cnt] = (E){ x, head[y], z }, head[y] = cnt;\n}\nil void input() {\n\tn = read();\n\tint x, y, z;\n\tdp[0] = sum = n, rt = 0;\n\trep( i, 1, n - 1 )  x = read(), y = read(), z = read(), add( x, y, z % 3 );\n} \n\nvoid get_rt( int u, int fa ) {\n\tsize[u] = 1, dp[u] = 0;\n\tNext( i, u ) {\n\t\tint v = e[i].to;\n\t\tif( vis[v] || v == fa ) continue;\n\t\tget_rt( v , u );\n\t\tsize[u] += size[v];\n\t\tdp[u] = max( size[v], dp[u] );\n\t}\n\tdp[u] = max( dp[u], sum - size[u] );\n\tif( dp[u] <= dp[rt] ) rt = u;\n}\n\nvoid get_dis( int x, int fa ) {\n\t++ book[dis[x] % 3];\n\tNext( i, x ) {\n\t\tint v = e[i].to;\n\t\tif( vis[v] || v == fa ) continue;\n\t\tdis[v] = ( dis[x] + e[i].w ) % 3;\n\t\tget_dis( v, x );\n\t}\n}\nil int doit( int x, int w ) {\n\tmemset( book, 0, sizeof(book) ), dis[x] = w % 3;\n\tget_dis( x, 0 );\n\treturn book[2] * book[1] * 2 + book[0] * book[0];\n}\n\nil void solve( int u ) {\n\tvis[u] = 1, ans += doit( u, 0 );\n\tNext( i, u ) {\n\t\tint v = e[i].to;\n\t\tif( vis[v] ) continue;\n\t\tans -= doit( v, e[i].w % 3 );\n\t\tdp[0] = n, rt = 0, sum = size[v];\n\t\tget_rt( v, u ), solve( rt );\n\t}\n}\nsigned main()\n{\n\tinput(), get_rt( 1, 0 ), solve( rt );\n\tint k = gcd( ans, n * n );\n\tprintf(\"%d/%d\", ans/k, n * n / k );\n\treturn 0;\n}\n\n```",
        "postTime": 1551966181,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "P2634\u806a\u806a\u53ef\u53ef"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u540d\u849f\u84bb\u800c\u8a00\uff0c\u6a21\u677f\u9898\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u5b83\u80fd\u5e2e\u52a9\u4f60\u5728\u7406\u89e3\u8fd9\u4e2a\u7b97\u6cd5\u7684\u8def\u4e0a\u8fc8\u51fa\u7b2c\u4e00\u6b65\uff0c\u751a\u81f3\u662f\u4e00\u5927\u6b65\n\n\n\u697c\u4e0bdalao\u8bb2\u70b9\u5206\u6cbb\u7684\u6d41\u7a0b\u8bb2\u7684\u975e\u5e38\u597d\uff0c\u4f46\u662f\u5728\u63cf\u8ff0\u8fd9\u9053\u9898\u7684\u5177\u4f53\u7b54\u6848\u7edf\u8ba1\u65b9\u5f0f\u4e0a\u5e76\u4e0d\u662f\u7279\u522b\u6e05\u695a\n\n\n\u56e0\u6b64\u6211\u5c31\u6765\u732e\u4e2a\u62d9\n\n\n### \u3010\u5e7f\u544a\u3011\n\n\u849f\u84bb\u7684blog:\n\n[Dedicatus545](http://www.cnblogs.com/dedicatus545/p/8391928.html)\n\n\n## \u601d\u8def\uff1a\n\n\n\u9898\u76ee\u8981\u6c42\u7edf\u8ba1\u4e66\u4e0a\u8def\u5f84\u4fe1\u606f\uff0c\u60f3\u5230\u6811\u4e0a\u5206\u6cbb\u7b97\u6cd5\n\n\n\u5b9e\u9645\u4e0a\u8fd9\u662f\u4e00\u9053\u70b9\u5206\u6cbb\u88f8\u9898\uff0c\u6211\u5c31\u4e0d\u778eBB\u601d\u8def\u4e86\uff0c\u76f4\u63a5\u4e0a\u505a\u6cd5\u3002\n\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u8bbedis[i]\u4e3a\u5176\u4ed6\u8282\u70b9\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u8ddd\u79bb MOD 3\n\n\n\u90a3\u4e48\u53ef\u4ee5\u8bc1\u660e\uff0c\u4e00\u6761\u7ecf\u8fc7\u8be5\u8282\u70b9\u7684\u5408\u6cd5\u8def\u5f84(i,j)\uff0c( dis[i] + dis[j] ) % 3==0\n\n\n\u56e0\u6b64\u5bf9\u6bcf\u4e2a\u8282\u70b9\u6c42\u51fa\u5176\u5b50\u6811\u5185\u7684dis\uff0c\u7ecf\u8fc7\u8be5\u70b9\u7684\u8def\u5f84\u6570\u5373\u4e3a\uff08dis[i]==1\u7684\u70b9\u6570\uff09\\*\uff08dis[i]==2\u7684\u70b9\u6570\uff09\\*2 + \uff08dis[i]==0\u7684\u70b9\u6570\uff09^2\n\n\n\u9012\u5f52\u6c42\u89e3\n\n\n\u9012\u5f52\u8fdb\u5165\u4e00\u4e2a\u8282\u70b9u\u65f6\uff0cans\u5148\u52a0\u5165calc(u,0)\uff0c\u5373\u4e3a\u4e0a\u8ff0\u6c42\u89e3\u8fc7\u7a0b\uff08dis[u]==0\u5f00\u59cb)\u3002\n\n\n\u6bcf\u4e00\u6b21\u5bf9\u4e8e\u5f53\u524d\u9012\u5f52\u5230\u7684\u8282\u70b9\u7684\u6bcf\u4e00\u68f5\u5b50\u6811\uff0cans\u5148\u51cf\u53bbdis(v,e[i].w)\uff0c\u5373\u4e3a\u4ece(dis[v]==e[i].w)\u5f00\u59cb\uff0c\u4e3a\u7684\u662f\u53bb\u6389\u91cd\u590d\u8ba1\u7b97\u7684\u90e8\u5206\u3002\n\n\n\u6c42\u8fd9\u4e2a\u5b50\u6811\u7684\u91cd\u5fc3\n\n\n\u65b9\u6cd5\uff1a\n\n\n\u9012\u5f52\u8fdb\u5165\u5b50\u6811\u4e2d\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u7edf\u8ba1\u5176\u5b50\u6700\u5927\u7684\u5b50\u6811\u5927\u5c0f\uff08\u5305\u62ec\u8fde\u5411\u5176\u7236\u8282\u70b9\u7684\u90a3\u4e00\u68f5\uff09\n\n\n\u8fd9\u4e2a\u6700\u5927\u503c\u6700\u5c0f\u7684\u8282\u70b9\u5c31\u662f\u6811\u7684\u91cd\u5fc3\u3002\n\n\n\u5982\u679c\u6bcf\u6b21\u4ece\u8fd9\u91cc\u8fdb\u5165\uff0c\u90a3\u4e48\u8fdb\u5165\u7684\u5b50\u6811\u7684size\u4e00\u5b9a\u5c0f\u4e8e\u6574\u68f5\u5f53\u524d\u6811\u7684size\u7684\u4e00\u534a\n\n\n\u8fd9\u6837\u9012\u5f52\u4e0b\u53bb\u6700\u591alog n\u5c42\n\n\n\u6c42\u5b8c\u8fd9\u68f5\u5b50\u6811\u7684\u91cd\u5fc3\u4ee5\u540e\u4ece\u8fd9\u4e2a\u91cd\u5fc3\u9012\u5f52\u8fdb\u5165\uff0c\u6c42\u8be5\u5b50\u6811\u7684\u89e3\n\n\n\u6700\u540eans\u5373\u4e3a\u7b54\u6848\u6570\u76ee\uff08ans\u521d\u59cb\u4e3a0\uff09\n\n\n\n## \u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n\n\n1.\u7b54\u6848\u8981\u7ea6\u5206\n\n2.\u8bb0\u5f97\u8981\u4ece\u6c42\u89e3\u597d\u7684root\u8fdb\u5165\u4e0b\u4e00\u5c42\u9012\u5f52\uff0c\u800c\u4e0d\u662f\u4ece\u8fde\u63a5\u7684\u90a3\u4e2a\u70b9v\uff08\u88ab\u8fd9\u4e2a\u5751\u4e8630min(\u2299\ufe4f\u2299)b\uff09\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nvoid _swap(int &x,int &y){x^=y;y^=x;x^=y;}\nint _max(int x,int y){return (x>y)?x:y;}\ninline int read(){\n    int re=0,flag=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') flag=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n    return re*flag;\n}\nint n,cnt,ans,dis[20010],first[20010],tmp[5],root,siz[20010],son[20010],sum;\nbool vis[20010];\nstruct edge{\n    int to,next,w;\n}a[40010];\ninline void add(int u,int v,int w){\n    a[++cnt]=(edge){v,first[u],w};first[u]=cnt;\n    a[++cnt]=(edge){u,first[v],w};first[v]=cnt;\n}\nint gcd(int x,int y){return (y?gcd(y,x%y):x);};\nvoid getroot(int u,int f){\n    //cout<<\"getroot \"<<u<<\" \"<<f<<\"\\n\";\n    int i,v;\n    siz[u]=1;son[u]=0;\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;\n        if(v==f||vis[v]) continue;\n        getroot(v,u);\n        siz[u]+=siz[v];\n        son[u]=_max(son[u],siz[v]);\n    }\n    son[u]=_max(son[u],sum-siz[u]);//\u7edf\u8ba1\u7236\u4eb2\u8282\u70b9\u7684\u90a3\u68f5\u5b50\u6811\uff0csum\u4e3a\u5f53\u524d\u7684\u6574\u68f5\u5b50\u6811\u7684size\n    //cout<<\"finish getroot \"<<son[u]<<'\\n';\n    if(son[u]<son[root]) root=u;\n}\nvoid gettmp(int u,int f){\n    //cout<<\"gettmp \"<<u<<\" \"<<f<<\"\\n\";\n    int i,v;\n    tmp[dis[u]]++;\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;\n        if(v==f||vis[v]) continue;\n        //cout<<\" to \"<<v<<'\\n';\n        dis[v]=(dis[u]+a[i].w)%3;\n        gettmp(v,u);\n    }\n}\nint calc(int u,int d){//\u5373\u4e3a\u6587\u4e2d\u63cf\u8ff0\u7684calc\n    dis[u]=d%3;tmp[0]=tmp[1]=tmp[2]=0;\n    gettmp(u,0);\n    return tmp[1]*tmp[2]*2+tmp[0]*tmp[0];\n}\nvoid dfs(int u){\n    //cout<<\"dfs \"<<u<<\"\\n\";\n    int i,v;\n    vis[u]=1;ans+=calc(u,0);\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;\n        if(vis[v]) continue;\n        ans-=calc(v,a[i].w);\n        sum=siz[v];root=0;//\u66f4\u65b0root\u548csum\n        getroot(v,u);\n        dfs(root);//\u6ce8\u610f\u8fd9\u91cc\u4e0d\u8981\u5199\u6210dfs(v)\u4e86\uff0c\u624b\u5feb\u5f88\u5bb9\u6613\u5199\u9519\n    }\n}\nint main(){\n    // freopen(\"cckk.in\",\"r\",stdin);\n    // freopen(\"cckk.out\",\"w\",stdout);\n    memset(first,-1,sizeof(first));\n    int i,t1,t2,t3;\n    n=read();\n    for(i=1;i<n;i++){\n        t1=read();t2=read();t3=read();\n        add(t1,t2,t3);\n    }\n    //cout<<\"finish read in\\n\";\n    sum=n;son[0]=n;//\u5c06son[0]\u521d\u59cb\u5316\u4e3a\u6781\u5927\u503c\n    getroot(1,0);\n    dfs(1);\n    int div=gcd(n*n,ans);//\u6ce8\u610f\u7ea6\u5206\n    printf(\"%d/%d\",ans/div,n*n/div);\n}\n```",
        "postTime": 1517379546,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2634 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5e94\u8be5\u662f\u84dd\u7684\u3002\u3002\u3002\u4e0d\u7528\u70b9\u5206\uff0c\u4e0a\u8bfe\u7684\u65f6\u5019\u81ea\u5df1\u63a8\u51fa\u6765\u4e86\u6811\u5f62dp\u3002\n\n\u8003\u8651\u52303\u8fd9\u4e2a\u6570\u975e\u5e38\u5c0f\uff0c\u6a213\u7684\u7ed3\u679c\u53ea\u67090/1/2,\u8003\u8651\u62ff\u4ed6\u5355\u72ec\u505a\u4e00\u7ef4\u72b6\u6001\u3002\u800c\u6982\u7387\u5176\u5b9e\u76f8\u5f53\u4e8e\u65b9\u6848\u6570\u9664\u4ee5\u603b\u65b9\u6848\u6570\n\n\u56e0\u6b64\u53ea\u9700\u8981\u7b97\u51fa\u65b9\u6848\u6570\u5c31\u597d\u3002\n\n\u8bbe$f[i][j]$\u8868\u793a\u4ecei\u7684\u5b50\u6811\u91cc\u4efb\u9009\u4e00\u70b9\u5230$i$\u7684\u8def\u5f84\u957f\u5ea6$\\pmod 3$ \u4e3a$j$\u7684\u65b9\u6848\u6570\n\n\u663e\u7136\u6709\u8f6c\u79fb\uff1a\n\n$$f[i][j]=\\sum_{d\\in i.son}f[d][3\\mod \\{[j+dist(i,d)]\\mod3\\}]$$\n\n\u5199\u7684\u65b9\u4fbf\u4e00\u70b9\u5373\u662f\uff1a\n\n$$f[i][(j+dist(i,d))\\mod 3]+=f[d][j]$$\n\n\u7edf\u8ba1\u7b54\u6848\u53ef\u4ee5\u7528\u4e58\u6cd5\u539f\u7406\u76f8\u4e58\uff0c\u5373\u679a\u4e3e\u4e2d\u8f6c\u70b9\uff0c\u5230\u4e2d\u8f6c\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\u6a213\u4e3a0\u7684\u65b9\u6848\u6570\u76f8\u4e58\n\n\u4f46\u8981\u6ce8\u610f\u662f\u5728dp\u7684\u8fc7\u7a0b\u4e2d\u7edf\u8ba1\u7b54\u6848\uff0c\u4e0b\u6765\u7edf\u8ba1\u4f1a\u9047\u5230\u9009\u62e9\u7684\u4e24\u70b9\u5728\u4e2d\u8f6c\u70b9\u7684\u540c\u4e00\u5b50\u6811\u5185\u7684\u60c5\u51b5\uff0c\u800c\u5728dp\u8fc7\u7a0b\u4e2d\u90a3\u4e00\u90e8\u5206\u8fd8\u6ca1\u7b97\u51fa\u6765\uff0c\u4f46\u662f\u7531\u4e8e$(u,v)$\u548c$(v,u)$\u662f\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u6848\uff0c\u8981\u4e58\u4ee5\u4e8c\uff0c\u4e14$(v,v)$\u8fd9\u79cd\u65b9\u6848\u4e5f\u662f\u5408\u6cd5\u7684\uff0c\u6240\u4ee5\u8fd8\u8981\u52a0\u4e0an\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ninline int read() {\n\tint s = 0, f = 1;\n\tchar ch = getchar();\n\twhile (!isdigit(ch)) f = (ch == '-' ? -1 : 1), ch = getchar();\n\twhile (isdigit(ch)) s = (s << 1) + (s << 3) + (ch & 15), ch = getchar();\n\treturn s * f; \n}\n\nint n, f[20005][3], u, v, w, ans, m;\nvector<int> nxt[20005], val[20005];\n\ninline void dfs(int now, int fa) {\n\tf[now][0] = 1; vector<int> :: iterator iv = val[now].begin();\n\tfor (vector<int> :: iterator it = nxt[now].begin(); it != nxt[now].end(); ++it) {\n\t\tif ((*it) == fa) { ++iv; continue ; }\n\t\tdfs((*it), now);\n\t\tfor (int i = 0; i < 3; ++i)\n\t\t\tans += f[(*it)][i] * f[now][(3 - (((i + (*iv)) % 3 + 3) % 3)) % 3] * 2;\n\t\tfor (int i = 0; i < 3; ++i)\n\t\t\tf[now][((i + (*iv)) % 3 + 3) % 3] += f[(*it)][i];\n\t\t++iv;\n\t}\n}\n\ninline int gcd(int a, int b) {\n\treturn b == 0 ? a : gcd(b, a % b);\n}\n\nint main() {\n\tn = read();\n\tfor (int i = 1; i < n; ++i) {\n\t\tu = read(); v = read(); w = read();\n\t\tnxt[u].push_back(v); val[u].push_back(w);\n\t\tnxt[v].push_back(u); val[v].push_back(w);\n\t} ans = n; dfs(1, -1); m = n * n;\n\tprintf(\"%d/%d\", ans / gcd(ans, m), m / gcd(ans, m));\n\treturn 0;\n} \n```\n",
        "postTime": 1580791288,
        "uid": 98096,
        "name": "Smallbasic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2634 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "\u6709\u4eba\u8bf4\u8fd9\u662f\u6811\u72b6DP\u6a21\u677f\u9898\uff0c\u6709\u4eba\u8bf4\u8fd9\u662f\u70b9\u5206\u6cbb\u6a21\u677f\u9898\n\n\u4f46\u6211\u89c9\u5f97\u8fd9\u662fdsu on tree\u7684\u6a21\u677f\u9898  \n\n~~\u597d\u50cf\u8fd9\u662f\u552f\u4e00\u4e00\u7bc7dsu on tree\u9898\u89e3~~\n\n\u5341\u5206\u7ecf\u5178\u7684\u6811\u4e0a\u8def\u5f84\u7684\u7edf\u8ba1\uff0cdsu on tree\u6bd4\u8f83\u597d\u7406\u89e3\n\n\u800c\u4e14\u590d\u6742\u5ea6\u4e5f\u4e0d\u5fc5\u70b9\u5206\u6cbb\u4f4e\n\n---\n\n#### \u7b97\u6cd5\u601d\u60f3\uff1a\u666e\u901adfs\uff0c\u4f46\u628a\u91cd\u513f\u5b50\u7684\u6570\u636e\u5b58\u4e0b\u6765\uff0c\u6240\u4ee5\u539f\u672c$n^2$\u7684\u7b2c\u4e8c\u5c42$n$\u53ef\u4ee5\u88ab\u4f18\u5316\n\n\u6838\u5fc3\u4ee3\u7801:\n\n\u5176\u4e2dson[pos]\u4e3apos\u7684\u91cd\u513f\u5b50\n\nFor(pos)\u8868\u793a\u904d\u5386pos\u7684\u513f\u5b50\n\n\n\n```cpp\nvoid dfs(int pos,int father,bool heavy)//heavy\u8868\u793a\u662f\u5426\u662f\u7236\u4eb2\u7684\u91cd\u513f\u5b50\n{\n\tFor(pos)//\u904d\u5386\u8f7b\u513f\u5b50 \n\t\tif(to[k]!=father&&to[k]!=son[pos]) \n\t\t\tdfs(to[k],pos,0);\n\tif(son[pos]) dfs(son[pos],pos,1);//\u904d\u5386\u91cd\u513f\u5b50 \n\tFor(pos)//\u8ba1\u7b97\u8f7b\u513f\u5b50\u7684\u8d21\u732e\u503c \n\t{\n\t\tif(to[k]==father||to[k]==son[pos]) continue;\n\t\twork(to[k],pos,1,pos);//\u8be5\u5b50\u6811\u5bf9\u5176\u4ed6\u513f\u5b50\u7684\u8d21\u732e \n\t\twork(to[k],pos,0,pos);//\u628a\u8be5\u513f\u5b50\u7684\u6570\u636e\u5b58\u4e0b\u6765 \n\t}\n\tcal(pos,pos);//\u8ba1\u7b97\u8be5\u70b9 \n\tq[deep[pos]%3]++;//\u8bb0\u5f55\u8be5\u70b9 \n\tif(!heavy)q[0]=q[1]=q[2]=0;//\u5982\u679c\u4e0d\u662f\u7236\u4eb2\u7684\u91cd\u513f\u5b50\uff0c\u6e05\u9664\u6570\u636e \n}\n```\n\u5176\u4e2d\u8ba1\u7b97\u51fd\u6570cal\n~~~cpp\ninline void cal(int pos,int LCA)\n{\n\tint x=(2*deep[LCA]-deep[pos])%3+3;\n\tx=x%3;\n\tans+=q[x];\n}\n\n~~~\n\u904d\u5386\u8ba1\u7b97\u51fd\u6570work\u51fd\u6570\n\n~~~cpp\nvoid work(int pos,int father,bool ca,int LCA)\n{\n\tif(ca) cal(pos,LCA);\n\telse q[deep[pos]%3]++;\n\tFor(pos) \n\t{\n\t\tif(to[k]==father) continue;\n\t\twork(to[k],pos,ca,LCA); \n\t}\n}\n\n~~~\n\n\n\u5b8c\u6574\u4ee3\u7801\n\n~~~cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define For(pos) for(int k=First[pos];k;k=Next[k])\nconst int Maxn=2e4+5;\nint n,First[Maxn],to[Maxn*2],Next[Maxn*2],W[Maxn*2],cnt;\nint son[Maxn],size[Maxn],deep[Maxn];\ninline void add(int z,int y,int w)\n{\n\tNext[++cnt]=First[z];\n\tFirst[z]=cnt;\n\tto[cnt]=y;W[cnt]=w;\n}\nint ans=0,P;\ninline int R()\n{\n\tchar c;int sign=1,res=0;\n\twhile((c=getchar())>'9'||c<'0') if(c=='-') sign=-1;res+=c-'0';\n\twhile((c=getchar())>='0'&&c<='9') res=res*10+c-'0';\n\treturn res*sign;\t\n}\nvoid deal(int pos,int father)\n{\n\tsize[pos]=1;\n\tFor(pos)\n\t{\n\t\tif(to[k]==father) continue;\n\t\tdeep[to[k]]=deep[pos]+W[k]; \n\t\tdeal(to[k],pos);\n\t\tsize[pos]+=size[to[k]];\n\t\tif(size[son[pos]]<size[to[k]]) son[pos]=to[k];\n\t}\n}\nint q[4];\nvoid cal(int pos,int father,int op,int deep)\n{\n\tq[deep%3]++;\n\tif(q[3-deep]) ans+=q[3-deep];\n}\ninline void cal(int pos,int LCA)\n{\n\tint x=(2*deep[LCA]-deep[pos])%3+3;\n\tx=x%3;\n\tans+=q[x];\n}\nvoid work(int pos,int father,bool ca,int LCA)\n{\n\tif(ca) cal(pos,LCA);\n\telse q[deep[pos]%3]++;\n\tFor(pos) \n\t{\n\t\tif(to[k]==father) continue;\n\t\twork(to[k],pos,ca,LCA); \n\t}\n}\nvoid dfs(int pos,int father,bool heavy) \n{\n\tFor(pos)   if(to[k]!=father&&to[k]!=son[pos]) dfs(to[k],pos,0);\n\tif(son[pos]) dfs(son[pos],pos,1); \n\tFor(pos) \n\t{\n\t\tif(to[k]==father||to[k]==son[pos]) continue;\n\t\twork(to[k],pos,1,pos); \n\t\twork(to[k],pos,0,pos); \n\t}\n\tcal(pos,pos); \n\tq[deep[pos]%3]++; \n\tif(!heavy)q[0]=q[1]=q[2]=0; \n}\nint main()\n{\n\tn=R();int a,b,w;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\ta=R();b=R();w=R();\n\t\tadd(a,b,w);\n\t\tadd(b,a,w); \n\t}\n\tdeal(1,0);\n\tdfs(1,0,1);\n\tans=ans*2+n;\n\tint di=n*n;\n\tfor(int i=2;i<=ans;i++)\n\t\twhile(ans%i==0&&di%i==0)\n\t\t{\n\t\t\tans/=i;\n\t\t\tdi/=i;\n\t\t}\n\tif(ans==di) puts(\"1\");\n\telse printf(\"%d/%d\\n\",ans,di);\n} \n~~~",
        "postTime": 1585716907,
        "uid": 220857,
        "name": "\u7d20\u8d28\u73a9\u5bb6\u5b591\u8d85",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2634 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "\u70b9\u5206\u6cbb\u8be6\u89e3\n\n### \u4e00.\u6982\u5ff5\n\n\u200b      \u662f\u5904\u7406\u6811\u4e0a\u8def\u5f84\u7684\u4e00\u4e2a\u6781\u597d\u7684\u65b9\u6cd5\u3002\u5982\u679c\u4f60\u9700\u8981\u5927\u89c4\u6a21\u7684\u5904\u7406\u4e00\u4e9b\u6811\u4e0a\u8def\u5f84\u7684\u95ee\u9898\u65f6\uff0c\u70b9\u5206\u6cbb\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\n\n### \u4e8c.\u5177\u4f53\u601d\u8def\n\n\u200b      \u5927\u591a\u6570\u540c\u5b66\u7684\u66b4\u529b\u505a\u6cd5\u90fd\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u5bf9\uff08u\uff0cv\uff09 \u8fdb\u884cdfs\u6765\u6c42\u89e3\u3002\u4f46\u5176\u5b9e\u5229\u7528\u5206\u6cbb\u8fd9\u4e00\u79cd\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u200b      \u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\u4e0a\u7684\u533a\u95f4\u548c\u7b49\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5206\u6cbb\u6765\u5c06\u539f\u95ee\u9898\u5206\u89e3\u6210\u51e0\u4e2a\u5b50\u95ee\u9898\u6765\u6c42\u89e3\uff0c\u4e4b\u540e\u5728\u4e00\u4e00\u5408\u5e76\u7b54\u6848\u3002\u800c\u5728\u6811\u4e0a\u6211\u4eec\u4e5f\u662f\u53ef\u4ee5\u8fdb\u884c\u8fd9\u4e00\u79cd\u64cd\u4f5c\u7684\u3002\u53ef\u662f\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u5b50\u6811\u7684\u8282\u70b9\u6570\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u4e0d\u80fd\u5355\u5355\u7684\u53d6\u4e2d\u70b9\uff08\u4f60\u544a\u8bc9\u6211\u600e\u4e48\u53d6\uff09\uff0c\u6216\u76f4\u63a5\u53d6\u4e00\u53f7\u5b50\u6811\u3002\uff08\u5206\u6cbb\u7684\u70b9\u7684\u9519\u8bef\u9009\u62e9\u4f1a\u5bfc\u81f4\u65f6\u95f4\u590d\u6742\u5ea6\u5341\u5206\u4e0d\u7a33\u5b9a\uff09\u3002\n\n\u200b     \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5982\u679c\u4f60\u53d6\u4e86\u7b2c\u4e00\u4e2a\u70b9\u7684\u8bdd\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u53d8$O(n)$,\u4f46\u5982\u679c\u6211\u4eec\u53d6\u7684\u70b9\u662f3\u7684\u8bdd\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u662f $O(logn)$\n\n ![](https://cdn.luogu.com.cn/upload/pic/28185.png)\n\n\u200b        \u6240\u4ee5\uff0c\u6211\u4eec\u8981\u5f15\u5165\u4e00\u4e2a\u6982\u5ff5 \u2014\u2014 \u6811\u7684\u91cd\u5fc3\n\n\u200b        \u5b9a\u4e49\uff1a**\u627e\u5230\u4e00\u4e2a\u70b9,\u5176\u6240\u6709\u7684\u5b50\u6811\u4e2d\u6700\u5927\u7684\u5b50\u6811\u8282\u70b9\u6570\u6700\u5c11,\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u662f\u8fd9\u68f5\u6811\u7684\u91cd\u5fc3,\u5220\u53bb\u91cd\u5fc3\u540e\uff0c\u751f\u6210\u7684\u591a\u68f5\u6811\u5c3d\u53ef\u80fd\u5e73\u8861**\n\n\u200b       \u7531\u5b9a\u4e49\u53ef\u77e5\uff0c\u5f53\u6211\u4eec\u9009\u62e9\u6811\u7684\u91cd\u5fc3\u4e3a\u5206\u652f\u70b9\u65f6\uff0c\u662f\u6700\u4f18\u7684\uff08~~\u6211\u6709\u4e2a\u7edd\u5999\u7684\u8bc1\u660e\u53ea\u662f\u8fd9\u91cc\u5199\u4e0d\u4e0b~~\uff09\n\n\u200b       \u597d\u4e86\uff0c\u6c42\u51fa\u4e86\u6811\u7684\u91cd\u5fc3\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6765\u5206\u6cbb\u4e86\uff01\uff01\n\n\u200b      \u5148\u73b0\u7ed9\u51fa\u6c42\u91cd\u5fc3\u7684\u4ee3\u7801\uff0c\u4fbf\u4e8e\u8bfb\u8005\u4f9d\u6b21\u7406\u89e3\n\n   ```cpp\nvoid find(int x,int fa)\n{\n    size[x] = 1; mx[x] = 0;\n    for (int i = head[x]; i ; i = edges[i].net)\n    {\n        edge v = edges[i];\n        if(v.to == fa||vis[v.to] ) continue;//vis\u662f\u4e4b\u540e\u5206\u6cbb\u662f\u8981\u7528\u5230\u7684\n        find(v.to,x);\n        size[x] += size[v.to];\n        chkmax(mx[x],size[v.to]);\n    }\n    chkmax(mx[x],S-size[x]);//S\u4e3a\u6811\u7684\u5927\u5c0f\uff0c\u8bb0\u4f4fx\u7684\u4e0a\u9762\u8981\u7b97\u5165\u7684\n    if(mx[x] < mx[root])\n    {\n        root = x;\n    }\n}\n   ```\n\n\u200b           \u73b0\u5728\u5f00\u59cb\u6211\u4eec\u70b9\u5206\u6cbb\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\u4e86 \u2014\u2014 \u5206\u6cbb\n\n\u200b           \u5206\u6cbb\u4e0d\u592a\u597d\u8bb2\uff0c\u6211\u4eec\u4ece\u4ee3\u7801\u5f00\u59cb\u5206\u6790\n\n ```cpp\nvoid Divid(int x)\n{\n    ans+=solve(x,0);\n    vis[x] = 1;\n    for (int i = head[x];i;i = edges[i].net)\n    {\n        edge v = edges[i];\n        if(vis[v.to]) continue;\n        ans-=solve(v.to,edges[i].cost);\n        S = size[v.to]; root = 0;\n        find(v.to,x);\n        Divid(root);\n    }\n}\n```\n\n1. ans += solve(x,0); \u8fd9\u4e00\u53e5\u7684\u4f5c\u7528\u662f\u5c06\u7b54\u6848\u52a0\u4e0a\u7ecf\u8fc7x\u7684\u8def\u5f84\u7b54\u6848\u3002 \u800c\u8fd9\u4e00\u4e2a0\u662f\u4e3a\u4e86\u89e3\u51b3\u6389\u4e00\u4e9b\uff0c\u6709\u91cd\u590d\u8ba1\u7b97\u7684\u7ed3\u679c\uff1b\uff08\u770b\u4e0d\u61c2\u5148\u5047\u88c5\u6ca1\u6709\u8fd9\u4e2a0\uff09\n2. ans -= solve\uff08v.to,edges[i].cost); \u8fd9\u4e00\u53e5\u662f\u5c06\u5728\u65e2\u7ecf\u8fc7x\u8fd9\u4e2a\u70b9\uff0c\u53c8\u7ecf\u8fc7v.to\u8fd9\u4e00\u4e2a\u70b9\u7684\u8def\u5f84\u6765\u53bb\u91cd\u3002\u56e0\u4e3a\u50cf\u8fd9\u79cd\u8def\u5f84\u4f1a\u5728solve\uff08x,0)\u548csolve(v.to,0)\u4e2d\u90fd\u8ba1\u7b97\u4e00\u6b21\u3002\u800c\u9898\u76ee\u662f\u8981\u6c42\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u5728\u5bb9\u65a5\u65f6\u8981\u521d\u59cb\u5316\u8fd9\u6761\u8fb9\u7684\u957f\u5ea6\u3002\u6240\u4ee5\uff0c\u73b0\u5728\u6709\u6ca1\u6709\u7406\u89e3\u8fd9\u4e2a0\u548cedges[i].cost?\n3. S = size[v.to]; \u73b0\u5728\u6211\u4eec\u8981\u5206\u6cbbv.to\u7684\u8fd9\u4e00\u9897\u5b50\u6811\uff0cSo\uff0c\u53c8\u5c06\u6c42\u91cd\u5fc3\u7684\u6811\u7684\u5927\u5c0f\u6539\u4e3asize[v.to];\n\n \u5230\u6b64\u4e3a\u6b62\uff0c\u70b9\u5206\u6cbb\u5c31\u5728\u8fd9\u91cc\u8bb2\u5b8c\u4e86\uff0csolve\u51fd\u6570\u662f\u770b\u9898\u76ee\u7684\uff0c\u6709\u80fd\u529b\u7684\u540c\u5b66\u53ef\u4ee5\u5207\u4e00\u5207\u8fd9\u4e24\u9053\u9898\uff08\u8fd9\u4e24\u9053\u9898\u4f1a\u5728\u4e0b\u9762\u8fdb\u884c\u8bb2\u89e3\uff09\u3002[luogu\u6a21\u677f\u9898](https://www.luogu.org/problemnew/show/P3806) \u548c[\u806a\u806a\u53ef\u53ef](https://www.luogu.org/problemnew/show/P2634).\n\n\n\n--------------------------------\n\n### \u4e09.\u4f8b\u9898\u5206\u6790\n\n1.luogu\u6a21\u677f\u9898\n\n\u200b       2.\u806a\u806a\u53ef\u53ef\n\n\u200b          \u8fd9\u9053\u9898\u662f\u6765\u6c42\u957f\u5ea6\u88ab3\u6574\u9664\u7684\u8def\u5f84\u6761\u6570\uff0c\u4f46\u5904\u7406\u65b9\u6cd5\u8ddf\u6a21\u677f\u4e0d\u592a\u4e00\u6837\u3002\n\n  \u6211\u4eec\u53ef\u4ee5\u8bbep[0],p[1],p[2]\u4e3a\u96643\u4f59\u6570\u4e3a0,1,2\u7684 \u8def\u5f84\u6761\u6570\u3002\u663e\u7136\u7b54\u6848\u4e3a$p_0^2$ + $p_1 * p_2 * 2$\n\n```cpp\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nint gcd(int x, int y)\n{\n    if(y == 0) return x;\n    return gcd(y,x%y);\n}\ntemplate<class T>\ninline void read(T &a)\n{\n    T s = 0,w = 1;\n    char c = getchar();\n    while(c < '0' || c > '9')\n    {\n        if(c == '-') w = -1;\n        c = getchar();\n    }\n    while(c >= '0' && c <= '9')\n    {\n        s = (s << 1) + (s << 3) + (c ^ 48);\n        c = getchar();\n    }\n    a = s*w;\n}\ntemplate<class T> void chkmax(T &a, T b){a > b? (a = a) : (a = b);}\ntemplate<class T> void chkmin(T &a, T b){a > b ? (a = b):(a = a);}\nint n;\nstruct edge{\n    int from, to,cost,net;\n    edge(int f = 0, int t = 0, int c = 0, int n = 0)\n    {\n        from = f;\n        to = t;\n        cost = c;\n        net = n;\n    }\n}edges[2010101];\nstatic int head[20010],tot;\nvoid add(int x, int y, int z)\n{\n    edges[++tot] = edge(x,y,z,head[x]);\n    head[x] = tot;\n}\nstatic int vis[20010],size[20010],mx[20010],root,S; \nvoid find(int x,int fa)\n{\n    size[x] = 1; mx[x] = 0;\n    for (int i = head[x]; i ; i = edges[i].net)\n    {\n        edge v = edges[i];\n        if(v.to == fa||vis[v.to] ) continue;\n        find(v.to,x);\n        size[x] += size[v.to];\n        chkmax(mx[x],size[v.to]);\n    }\n    chkmax(mx[x],S-size[x]);\n    if(mx[x] < mx[root])\n    {\n        root = x;\n    }\n}\nint dis[20010],a[20010],cnt;\nint ans,p[3];\nvoid get_dis(int x, int fa)\n{\n  //  dis[++cnt] = a[x];\n    p[a[x]%3]++;\n    for (int i = head[x] ;i; i = edges[i].net)\n    {\n        edge v = edges[i];\n        if(v.to == fa ||vis[v.to] ) continue;\n        a[v.to] = a[x]+v.cost;\n        get_dis(v.to,x);\n    }\n}\nint  solve(int x, int len)\n{\n    a[x] = len;\n    //cnt = 0;\n    p[0] = p[1] = p[2] = 0;\n    get_dis(x,0);\n    return (p[0]*p[0] + 2 * p[1] * p[2]);\n}\nvoid Dived(int x)\n{\n    ans+=solve(x,0);\n    vis[x] = 1;\n    for (int i = head[x];i;i = edges[i].net)\n    {\n        edge v = edges[i];\n        if(vis[v.to]) continue;\n        ans-=solve(v.to,edges[i].cost);\n        S = size[v.to]; root = 0;\n        find(v.to,x);\n        Dived(root);\n    }\n}\nint main()\n{\n    //freopen(\"xx.in\",\"r\",stdin);\n    //freopen(\"xx.out\",\"w\",stdout);\n    read(n);\n    for (register int i = 1; i < n; i++)\n    {\n    \tint x,y,z;\n    \tread(x); read(y); read(z);\n    \tz%=3;\n    \tadd(x,y,z);\n    \tadd(y,x,z);\n    }\n    S = n;root = 0; mx[0] = n+1; \n    find(1,0);\n    Dived(root);\n    int pp = gcd(ans,n*n);\n    printf(\"%lld/%lld\\n\",ans/pp,n*n/pp);\n   // std::cerr<<std::clock()<<std::endl;\n    return 0;\n}\n```",
        "postTime": 1552188067,
        "uid": 33339,
        "name": "Zcus",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2634 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73:[\u6233\u8fd9](https://www.cnblogs.com/hbxblog/p/9840188.html)\n\n###**\u9898\u89e3**:\n\n\u8fd9\u9053\u9898\u770b\u8d77\u6765\u5c31\u50cf\u70b9\u5206\u6cbb\u5bf9\u5427.\u6ca1\u9519\u5c31\u662f\u70b9\u5206\u6cbb.\n~~\u4ec0\u4e48\u662f\u70b9\u5206\u6cbb~~\n\u5982\u679c\u4f60\u4e0d\u4f1a\u70b9\u5206\u6cbb,\u53ef\u4ee5\u53bb\u770b\u770b[\u8fd9\u513f](https://www.cnblogs.com/hbxblog/p/9826679.html)\n\n\u73b0\u5728\u770b\u5230\u8fd9\u91cc,\u9996\u5148\u786e\u4fdd\u4f60\u5df2\u7ecf\u4f1a\u4e86\u70b9\u5206\u6cbb,\u5982\u679c\u4e0d\u4f1a\u4f60\u8fd8\u5f80\u4e0b\u770b,\u542c\u4e0d\u61c2\u6982\u4e0d\u8d1f\u8d23~~\u867d\u7136\u4f1a\u4f46\u6ca1\u770b\u61c2\u4e5f\u4e0d\u8d1f\u8d23(\u9003)~~\n\n\n\u70b9\u5206\u6cbb\u9898\u76ee\u5927\u90e8\u5206\u90fd\u662f\u6a21\u677f\u5bf9\u5427.\u53ea\u662fcalc(solve)\u7684\u533a\u522b.\u9996\u5148\u770b\u770b\u66b4\u529b\u7684calc.\u66b4\u529b\u679a\u4e3e\u6240\u6709\u8fb9,\u5728\u5224\u65ad\u662f\u5426\u4e3a3\u7684\u500d\u6570.\n\n\u4f46\u662f\u8fd9\u663e\u7136\u4e0d\u884c\u5bf9\u5427,\u5728\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b.\u53d1\u73b0%3\u7684\u6570\u7684\u53ef\u80fd\u6027\u53ea\u6709\u4e09\u79cd\u60c5\u51b5\n1. %3=0\n2. %3=1\n3. %3=2\n\n\u6240\u4ee5\u60f3\u8981\u4e3a\u4e09\u7684\u500d\u6570\u7684\u8bdd\u6709\u4e24\u79cd\u53ef\u80fd\u6027,0\u548c0\u7684\u7ec4\u548c,1\u548c2\u7684\u7ec4\u5408\u6240\u4ee5\u7b54\u6848\u5c31\u662f`dis[1]*dis[2]*2+dis[0]*dis[0]`\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u8fd9\u4e2a\u51fa\u4ee5\u603b\u65b9\u6848\u6570.\u8bb0\u5f97\u7ea6\u5206.\n\n####\u4ee3\u7801:\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=40001;\nint read() {\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=='-'?f=-1,c=getchar():c=getchar();\n\twhile(c>='0'&&c<='9') x=x*10+c-'0',c=getchar();\n\treturn x*f;\n}\nint n,k;\nint dep[N];\nint f[N];\nint vis[N];\nint siz[N];\nint root;\nstruct node {\n\tint next,to,v;\n} a[N<<1];\nint head[N],cnt,sum;\nvoid add(int x,int y,int c) {\n\ta[++cnt].to=y;\n\ta[cnt].next=head[x];\n\ta[cnt].v=c;\n\thead[x]=cnt;\n}\nvoid findroot(int k,int fa) {\n\tf[k]=0,siz[k]=1;\n\tfor(int i=head[k]; i; i=a[i].next) {\n\t\tint v=a[i].to;\n\t\tif(vis[v]||v==fa)\n\t\t\tcontinue;\n\t\tfindroot(v,k);\n\t\tsiz[k]+=siz[v];\n\t\tf[k]=max(f[k],siz[v]);\n\t}\n\tf[k]=max(f[k],sum-siz[k]);\n\tif(f[k]<f[root])\n\t\troot=k;\n}\nint tot;\nvoid finddep(int k,int fa,int l) {\n\tdep[l]++;\n\tfor(int i=head[k]; i; i=a[i].next) {\n\t\tint v=a[i].to;\n\t\tif(v==fa||vis[v])\n\t\t\tcontinue;\n\t\tfinddep(v,k,(l+a[i].v)%3);\n\t}\n}\nint calc(int k,int L) {\n\ttot=0;\n\tdep[0]=dep[1]=dep[2]=0;\n\tfinddep(k,0,L%3);\n\treturn dep[0]*dep[0]+2*dep[1]*dep[2];\n}\nint js;\nvoid devide(int k) {\n\tvis[k]=1;\n\tjs+=calc(k,0);\n\tfor(int i=head[k]; i; i=a[i].next) {\n\t\tint v=a[i].to;\n\t\tif(vis[v])\n\t\t\tcontinue;\n\t\tjs-=calc(v,a[i].v);\n\t\troot=0,sum=siz[v];\n\t\tfindroot(v,0);\n\t\tdevide(root);\n\t}\n}\nint main() {\n\tint n=read(),x,y,z;\n\tfor (int i=1; i<n; i++)\n\t\tx=read(),y=read(),z=read(),add(x,y,z),add(y,x,z);\n\tsum=f[0]=n;\n\tfindroot(1,0);\n\tdevide(root);\n\tint l=__gcd(js,n*n);\n\tprintf(\"%d/%d\\n\",js/l,n*n/l);\n\treturn 0;\n}\n```",
        "postTime": 1540305669,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2634 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "\u53d1\u4e00\u4e2a\u6811\u5f62DP\u7684\u9898\u89e3\u5427...\u56e0\u4e3a\u6211\u4e0d\u4f1a\u70b9\u5206\u6cbb...\n\n\u8bbe$\\;\\;$Down[pos][0/1/2]$\\;\\;$\u8868\u793a\u5728\u7ed3\u70b9$\\;$i$\\;$\u7684\u5b50\u6811\u5185\uff0c\u5230\u70b9$\\;$i$\\;$\u7684\u8ddd\u79bb$\\;$mod$\\;$3$\\;$\u662f$\\;$0/1/2$\\;$\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$$ Down[pos][j] = \\sum Down[son][k] $$\n\n\u6ee1\u8db3:\n\n$$fa[son] = pos$$\n\n$$(k\\;+\\;val)\\;mod\\;3 = j$$\n\n\u5176\u4e2d$\\;\\;$fa[son]$\\;\\;$\u8868\u793a\u70b9$\\;$son$\\;$\u7684\u7236\u4eb2\u7ed3\u70b9,$\\;$val$\\;$\u8868\u793a\u70b9$\\;$son$\\;$\u5230\u7236\u4eb2\u7ed3\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u8fd9\u4e2a\u8f6c\u79fb\u5e94\u8be5\u662f\u6bd4\u8f83\u663e\u7136\u7684\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5904\u7406\u51fa\u4e86\u5b50\u6811\u5185\u7684\u7b54\u6848\u3002\n\n\u8bbe$\\;\\;$Dp[pos][0/1/2]$\\;\\;$\u8868\u793a\u6574\u4e2a\u6811\u4e2d\uff0c\u5230\u70b9$\\;$pos$\\;$\u7684\u8ddd\u79bb$\\;$mod$\\;$3$\\;$\u662f$\\;$0/1/2$\\;$\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n\u8fd9\u4e2a\u7684\u8f6c\u79fb\u6709\u70b9\u96be\u60f3\uff0c\u6211\u4eec\u8003\u8651\u6362\u6839\u3002\n\n\u5148\u7ed9\u51fa\u8f6c\u79fb\uff1a\n\n\u5bf9\u4e8e\u6839\u7ed3\u70b9,\n\n$$Dp[root][j] = Down[root][j] (j = 0/1/2)$$\n\n\u5bf9\u4e8e\u975e\u6839\u7ed3\u70b9,\n\n$$Dp[son][j] = Dp[pos][k] - Down[son][t] + Down[son][j]$$\n\n\u6ee1\u8db3,\n\n$$fa[son] = pos$$\n\n$$(k\\;+\\;val)\\;mod\\;3 = j$$ \n\n$$(t\\;+\\;val)\\;mod\\;3 = k$$\n\n\u5176\u4e2d$\\;$fa[son]$\\;$\u8868\u793a\u70b9$\\;$son$\\;$\u7684\u7236\u4eb2\u7ed3\u70b9\uff0c$\\;$val$\\;$\u8868\u793a\u70b9$\\;$son$\\;$\u5230\u7236\u4eb2\u7ed3\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u601d\u8003\u8fd9\u4e2a\u8f6c\u79fb\uff0c\u5230\u8fbe\u70b9$\\;$son$\\;$\uff0c\u8ddd\u79bb mod 3 \u662f j \u7684\u70b9\u7684\u4e2a\u6570\uff0c \u5e94\u8be5\u662f\u5230\u8fbe fa[son] \uff0c\u8ddd\u79bb mod 3 \u662f k \u7684\u70b9\u7684\u4e2a\u6570\u3002 \u56e0\u4e3a\u8fd9\u4e9b\u70b9\u7ecf\u8fc7 val \u8fd9\u6761\u8fb9\uff0c \u5230\u8fbe\u70b9 son \u4ee5\u540e\uff0c \u8ddd\u79bb mod 3 \u5c31\u662f j \u3002\n\n\u4f46\u662f\u8003\u8651\u8fd9\u4e9b\u70b9\u4e2d\uff0c\u6709\u4e9b\u70b9\u5728\u70b9 son \u7684\u5b50\u6811\u5185\u90e8\uff0c \u5b83\u4eec\u5df2\u7ecf\u8d70\u8fc7\u4e86 val \u8fd9\u6761\u8fb9 \uff08\u8fd9\u4e9b\u70b9\u7ecf\u8fc7 val \u8fd9\u6761\u8fb9\u5230\u8fbe fa[son] \uff09\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u53bb\u6389\u5b83\u4eec\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u70b9 son \u7684\u5b50\u6811\u5916\u7684\uff0c\u5230\u8fbe\u70b9 son \u8ddd\u79bb mod 3 \u662f j \u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n\u6700\u540e\u5728\u52a0\u4e0a\u70b9 son \u5b50\u6811\u4ee5\u5185\u7684\uff0c \u5230\u8fbe\u70b9 son \uff0c\u8ddd\u79bb mod 3 \u662f j \u7684\u70b9\u7684\u4e2a\u6570\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n~~\u4f3c\u4e4e\u6709\u70b9\u9ebb\u70e6...~~\n\n\u5177\u4f53\u7a0b\u5e8f\u5b9e\u73b0\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\uff0c\u5c31\u4e0d\u4e3e\u6817\u5b50\u5566...\n\n\u4eba\u751f\u7b2c\u4e00\u6b21\u5199LaTeX...\u4e5f\u4e0d\u662f\u5f88\u4f1aMarkdown...\n\n\u6240\u4ee5\u5f88\u4e11\u54e6...\u4e0d\u8981\u4ecb\u610f...\n\n\u8d34\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define MAXN 20010\nusing namespace std;\ntemplate <typename type> inline void Read(type &res) {\n    res = 0; int f = 1; char ch = getchar();\n    for (; !isdigit(ch); ch = getchar()) f = (ch == '-') ? (-1) : (f);\n    for (; isdigit(ch); ch = getchar()) res = res * 10 + ch - '0';\n    res *= f; return;\n}\nint n, tot, ver[MAXN * 2], nxt[MAXN * 2], head[MAXN], len[MAXN * 2], down[MAXN][3], fa[MAXN], dp[MAXN][3];\ninline void Add(int u, int v, int w) {\n    ver[++ tot] = v, len[tot] = w, nxt[tot] = head[u], head[u] = tot;\n    return;\n}\nvoid Dfs(int pos) {\n    down[pos][0] = 1;\n    for (int i = head[pos]; i > 0; i = nxt[i]) {\n        int son = ver[i], val = len[i];\n        if (fa[pos] == son) continue;\n        fa[son] = pos;\n        Dfs(son);\n        for (int j = 0; j < 3; ++ j) down[pos][(j + val) % 3] += down[son][j];\n    }\n    return;\n}\nvoid Dp(int pos) {\n    for (int i = head[pos]; i > 0; i = nxt[i]) {\n        int son = ver[i], val = len[i];\n        if (fa[pos] == son) continue;\n        for (int j = 0; j < 3; ++ j) {\n            int k = (j + 3 - val) % 3, t = (k + 3 - val) % 3;\n//\t\t\t(k + val) % 3 == j, (t + val) % 3 == k\n            dp[son][j] = dp[pos][k] - down[son][t] + down[son][j];\n        }\n        Dp(son);\n    }\n    return;\n}\nint main() {\n    Read(n); tot = 0;\n    memset(nxt, 0, sizeof(nxt));\n    memset(head, 0, sizeof(head));\n    for (int i = 1; i < n; ++ i) {\n        int u, v, w; Read(u), Read(v), Read(w); w %= 3;\n        Add(u, v, w); Add(v, u, w);\n    }\n    memset(down, 0, sizeof(down));\n    memset(fa, 0, sizeof(fa));\n    Dfs(1); \n    for (int j = 0; j < 3; ++ j) dp[1][j] = down[1][j];\n    Dp(1);\n    int res = 0;\n    for (int i = 1; i <= n; ++ i) res += dp[i][0];\n    int gcd = __gcd(res, n * n);\n    cout << res / gcd << \"/\" << n * n / gcd << endl;\n    return 0;\n}\n```",
        "postTime": 1541667908,
        "uid": 72520,
        "name": "\u5170\u4ead\u6155\u96e8",
        "ccfLevel": 0,
        "title": "P2634 \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u8fd9\u9898\u4e3a\u4ec0\u4e48\u8981\u70b9\u5206\u6cbb\u2026\u2026\n\n\u8bb0\u5f55$f[x][0/1/2]$\u8868\u793a$x$\u7684\u5b50\u6811\u4e2d\u7684\u70b9\u5230$x$\u7684\u8ddd\u79bb mod 3 \u5206\u522b\u4e3a0/1/2\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u8fb9\u8f6c\u79fb\u8fb9\u7edf\u8ba1\u5c31\u884c\u4e86\n\n\u8ba1\u7b97\u65f6\u5148\u8ba1\u7b97\u7ec4\u5408\u6570\uff0c\u518d\u7edf\u4e00\u4e582\uff0c\u4e5f\u5c31\u4e0d\u7528\u8ba8\u8bba\u6bcf\u4e2a\u8f6c\u79fb\u65f6\u8981\u4e0d\u8981\u4e582\u7684\u95ee\u9898\u4e86\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define N 20005\n#define ll long long\nusing namespace std;\n\nint head[N],f[N][3],g[3],cnt;\nll ans1=0,ans2;\n\nstruct ed{\n    int v,nxt,w;\n}e[N<<1];\nvoid add(int u,int v,int w){\n    e[++cnt]=(ed){v,head[u],w},head[u]=cnt;\n    e[++cnt]=(ed){u,head[v],w},head[v]=cnt;\n}\nvoid dfs(int x,int fa){\n    f[x][0]=f[x][1]=f[x][2]=0;\n    for(int i=head[x];i;i=e[i].nxt){\n        int to=e[i].v,w=e[i].w;\n        if(to!=fa){\n            dfs(to,x);\n            g[0]=f[to][(3-w)%3],g[1]=f[to][(4-w)%3],g[2]=f[to][(5-w)%3];\n            g[w]++;\n            for(int j=0;j<3;++j)\n                ans1+=1ll*g[j]*f[x][(3-j)%3];\n            ans1+=1ll*g[0];\n            f[x][0]+=g[0],f[x][1]+=g[1],f[x][2]+=g[2]; \n        }\n    }\n}\nll gcd(ll x,ll y){ return x%y?gcd(y,x%y):y; }\n\nint main(){\n    int n,i,a,b,c;scanf(\"%d\",&n);\n    for(i=1;i<n;++i){\n        scanf(\"%d%d%d\",&a,&b,&c);\n        add(a,b,c%3);\n    }\n    ans2=n*n;\n    dfs(1,0);ans1=ans1*2+n;\n    ll p=gcd(ans1,ans2);ans1/=p,ans2/=p;\n    printf(\"%lld/%lld\\n\",ans1,ans2);\n}\n```\n\n\n\n",
        "postTime": 1561706562,
        "uid": 76186,
        "name": "\u5947\u5361",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2634 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "\u8be5\u9898\u5c5e\u4e8e\u70b9\u5206\u6cbb\u7684\u6a21\u677f\u9898\uff0c\u4f46\u5728\u7b54\u6848\u7edf\u8ba1\u4e0a\u8981\u7814\u7a76\u6ce8\u610f\uff1a\n```\nt[1]*t[2]*2+t[0]^2\n```\n\u4f9d\u7167\u4e58\u6cd5\u539f\u7406\uff1a\n\n*2\u610f\u5473\u7740\u59cb\u672b\u8282\u70b9\u76f8\u53cd\u7684\u4e24\u6761\u8def\u5f84\uff0ct[0]^2\u610f\u5473\u7740\u53ef\u9009\u53d6\u7684\u8d77\u70b9\u7ec8\u70b9\u90fd\u6709t[0]\u79cd\u3002\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\nconst int inf=1e9+7;\nconst int MN=20005;\n\nstruct edge{int v,w,next;}G[MN*2];\nint head[MN],cnt=1;\ninline void add(int u,int v,int w){G[cnt]=(edge){v,w,head[u]};head[u]=cnt++;}\n\nint son[MN],d[MN],maxf=inf,root,ans=0,sum,buc[4]/*means a bucket*/;\nbool vis[MN];\nvoid getroot(int x,int fa)\n{\n\tint f=0;son[x]=1;\n\tfor (int i=head[x];i;i=G[i].next)\n\t\tif (!vis[G[i].v]&&G[i].v!=fa)\n\t\t{\n\t\t\tgetroot(G[i].v,x);\n\t\t\tson[x]+=son[G[i].v];\n\t\t\tf=max(f,son[G[i].v]);\n\t\t}\n\tf=max(f,sum-son[x]);\n\tif (maxf>f) maxf=f,root=x;\n}\nvoid getdeep(int x,int fa)\n{\n\tbuc[d[x]%=3]++; //put this sentence here in order to coordinate.\n\tfor (int i=head[x];i;i=G[i].next)\n\t\tif (!vis[G[i].v]&&G[i].v!=fa)\n\t\t{\n\t\t\td[G[i].v]=d[x]+G[i].w;\n\t\t\tgetdeep(G[i].v,x);\n\t\t}\n}\nint cal(int x,int w)\n{\n\td[x]=w;buc[0]=buc[1]=buc[2]=0;\n\tgetdeep(x,0);\n\treturn buc[0]*buc[0]+buc[1]*buc[2]*2;\n}\nvoid solve(int x)\n{\n\tans+=cal(x,0);vis[x]=true;\n\tfor (int i=head[x];i;i=G[i].next)\n\t\tif (!vis[G[i].v])\n\t\t{\n\t\t\tans-=cal(G[i].v,G[i].w);\n\t\t\tmaxf=inf;\n\t\t\tsum=son[G[i].v]; //notice!\n\t\t\tgetroot(G[i].v,0);\n\t\t\tsolve(root);\n\t\t}\n}\n\nint gcd(int a,int b){return a%b!=0?gcd(b,a%b):b;}\nint main()\n{\n\tint n;cin>>n;\n\tfor (int i=1;i<=n-1;++i)\n\t{\n\t\tint x,y,z;cin>>x>>y>>z;\n\t\tadd(x,y,z);add(y,x,z);\n\t}\n\tsum=n;\n\tgetroot(1,0);\n\tsolve(root);\n\tint d=gcd(ans,n*n);\n\tcout<<ans/d<<\"/\"<<n*n/d;\n\treturn 0;\n}\n```",
        "postTime": 1522679121,
        "uid": 31797,
        "name": "iyanhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2634 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "\u8fd9\u53ae\u662f\u70b9\u5206\u6cbb\u7684\u6a21\u677f\u9898\uff0c\u53ea\u9700\u5728calc\u51fd\u6570\u7a0d\u4f5c\u4fee\u6539\u5c31\u884c\u4e86\n\u628at[x]\u8bb0\u4f5c\u662f\u4f59\u6570\u662fx\u7684\u4e2a\u6570\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Max = 20005;\nint n,k;\nstruct Edge{\n    int next,to,w;\n}e[Max<<1];\nint cnt,ans,root,sum;\nint head[Max],size[Max],maxson[Max],Depth[Max],deep[Max],t[10];\nbool vis[Max];\nint gcd(int a,int b){return b==0?a:gcd(b,a%b);}\nvoid Add(int u,int v,int w){\n    e[++cnt].next=head[u];\n    e[cnt].to=v;\n    e[cnt].w=w; \n    head[u]=cnt;\n}\nvoid getroot(int u,int fa){\n    size[u]=1;maxson[u]=0;\n    for(int i=head[u];i;i=e[i].next){\n        int v=e[i].to;\n        if(v==fa||vis[v])continue;\n        getroot(v,u);\n        size[u]+=size[v];\n        maxson[u]=max(maxson[u],size[v]);\n    }\n    maxson[u]=max(maxson[u],sum-size[u]);\n    if(maxson[u]<maxson[root])root=u;\n}\nvoid getdeep(int u,int fa){\n    t[Depth[u]]++;\n    for(int i=head[u];i;i=e[i].next){\n        int v=e[i].to;\n        if(vis[v]||v==fa) continue;\n        Depth[v]=(Depth[u]+e[i].w)%3;\n        getdeep(v,u);\n    }\n}\nint calc(int u,int now){\n    t[0]=t[1]=t[2]=0;\n    Depth[u]=now;\n    getdeep(u,0);\n    return t[0]*t[0]+t[1]*t[2]*2;\n}\nvoid Work(int u){\n    ans+=calc(u,0);\n    vis[u]=1;\n    for(int i=head[u];i;i=e[i].next){\n        int v=e[i].to;\n        if(vis[v]) continue;\n        ans-=calc(v,e[i].w);\n        sum=maxson[v];\n        root=0;\n        getroot(v,root);\n        Work(root);\n    } \n}\nvoid pre(){\n    root=0;cnt=0;ans=0;\n    memset(vis,0,sizeof(vis));\n    memset(head,0,sizeof(head));\n}\nint main(){\n    ios::sync_with_stdio(false);\n    pre();\n    cin>>n;\n    for(int i=1,u,v,w;i<n;i++){\n        cin>>u>>v>>w;\n        Add(u,v,w%3);Add(v,u,w%3); \n    }\n    sum=n;maxson[0]=n;\n    getroot(1,0);\n    Work(root);\n    int all=n*n;\n    int big=gcd(all,ans);\n    cout<<ans/big<<\"/\"<<all/big<<endl;\n    \n    return 0;\n}\n\n```",
        "postTime": 1521862501,
        "uid": 61360,
        "name": "KingBenQi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2634 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "~~\u9996\u5148\u5ba3\u4f20\u4e0b\u81ea\u5df1\u7684\u535a\u5ba2\uff1a[\u3010\u6d1b\u8c37P2634\uff0fBZOJ2152\u3011\u806a\u806a\u53ef\u53ef | ssttkkl&#39;s OI zone](http://ssttkkl.top/posts/Luogu/2018/02/%E3%80%90%E6%B4%9B%E8%B0%B7P2634%EF%BC%8FBZOJ2152%E3%80%91%E8%81%AA%E8%81%AA%E5%8F%AF%E5%8F%AF/)~~\n\n\u7531\u4e8e\u8fd9\u9898\u8981\u7edf\u8ba1\u662f\u6a213\u610f\u4e49\u4e0b\u7684\u957f\u5ea6\uff0c\u5b8c\u5168\u53ef\u4ee5\u7528DP\u505a\u3002\u8bb2\u4e0b\u548c\u697c\u4e0b\u4e0d\u4e00\u6837\u7684DP\u65b9\u6cd5\uff0c\u4e2a\u4eba\u611f\u89c9\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u3002\n\n\u6811\u4e3a\u6709\u6839\u6811\uff0c\u4ee4$f(v,k)$\u8868\u793a$v$\u7684\u6240\u6709\u540e\u4ee3\u8282\u70b9\uff08\u5305\u62ec$v$\uff09\u4e2d\uff0c\u5230$v$\u7684\u8ddd\u79bb\u6a213\u7b49\u4e8e$k$\u7684\u8282\u70b9\u6570\u91cf\u3002\u5bb9\u6613\u5f97\u72b6\u8f6c\u65b9\u7a0b\uff1a\n\n$$f(v,k)=\\sum_{w \\in v.son} f(w,(k-dist_{v,w})\\;\\mathrm{mod}\\;3)$$\n\n\u4ee4$g(v,k)$\u8868\u793a$v$\u4e3a\u6839\u7684\u5b50\u6811\u91cc\uff0c\u7ecf\u8fc7$v$\u7684\u957f\u5ea6\u6a213\u7b49\u4e8e$k$\u7684\u8def\u5f84\u6570\u91cf\uff0c\u6709\u4e0b\u5217\u72b6\u8f6c\u65b9\u7a0b\uff1a\n\n$$g(v,k)=\\sum_{i,j \\in \\mathbb{Z}^+,(i+j)\\;\\mathrm{mod}\\;3=k} f(v,i) \\times f(v,j)$$\n\n\u5176\u5b9e\u5c31\u662f\u5bf9$\\{f(v,0),f(v,1),f(v,2)\\}$\u505a\u6a213\u5377\u79ef\u3002\uff08\u5982\u679c\u770b\u4e0d\u61c2\u8fd9\u53e5\u8bdd\u53ef\u4ee5\u81ea\u884c\u5ffd\u7565\u6389\uff09\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u51fa\u73b0\u91cd\u590d\uff1a\u5bf9\u4e8e$v$\u7684\u4efb\u610f\u4e24\u4e2a\u540e\u4ee3\u8282\u70b9$i,j$\uff0c\u82e5$i$\u4e0e$j$\u7684LCA\u4e0d\u662f$v$\u7684\u8bdd\uff0c$i$\u4e0e$j$\u7684\u8def\u5f84\u5c31\u4e0d\u4f1a\u7ecf\u8fc7$v$\uff0c\u4f46\u662f\u5b83\u4eec\u4e5f\u88ab\u5377\u5230\u4e86\u4e00\u8d77\u3002\u6240\u4ee5\u9700\u8981\u628a$g(v,k)$\u518d\u51cf\u6389$g(w,(k-2 \\cdot dist_{v,w})\\;\\mathrm{mod}\\;3)$\uff0c$w$\u4e3a$v$\u7684\u513f\u5b50\u3002\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u91cc\u7684$g(w,(k-2 \\cdot dist_{v,w})\\;\\mathrm{mod}\\;3)$\u5fc5\u987b\u662f**\u6ca1\u6709\u7ecf\u8fc7\u53bb\u91cd\u7684**\u3002\uff08\u81ea\u5df1\u8111\u8865\u4e00\u4e0b\u5c31\u660e\u767d\u4e86\uff09\n\n\u4e8e\u662f\u5199\u4e24\u4e2aDFS\uff0c\u5206\u522b\u7528\u4f5c\u8ba1\u7b97\u548c\u53bb\u91cd\u3002\n\n\u6700\u540e\u7b54\u6848\u5c31\u662f$\\frac{\\sum_{i=1}^n g(i,0)} {n^2}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u663e\u7136\u662f\u7ebf\u6027\u7684\uff0c\u6bd4\u70b9\u5206\u4e0d\u77e5\u9053\u9ad8\u5230\u54ea\u91cc\u53bb\u4e86\u3002\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u4e3a\u4e86\u65b9\u4fbf\uff0cDP\u7528\u7684\u662f\u586b\u8868\u6cd5\uff09\n\n```cpp\n#include <iostream>\n#define maxn 20005\nusing namespace std;\nint n;\nstruct edge\n{\n    int next, to, weight;\n} edges[maxn * 2];\nint head[maxn];\nvoid addedge(int u, int v, int w)\n{\n    static int ecnt = 0;\n    ecnt++;\n    edges[ecnt].to = v;\n    edges[ecnt].weight = w;\n    edges[ecnt].next = head[u];\n    head[u] = ecnt;\n}\nint f[maxn][3], g[maxn][3];\nvoid dfs1(int v, int fa)\n{\n    f[v][0] = 1;\n    for (int i = head[v]; i; i = edges[i].next)\n    {\n        int w = edges[i].to;\n        if (w != fa)\n        {\n            dfs1(w, v);\n            f[v][edges[i].weight % 3] += f[w][0];\n            f[v][(1 + edges[i].weight) % 3] += f[w][1];\n            f[v][(2 + edges[i].weight) % 3] += f[w][2];\n        }\n    }\n    g[v][0] += f[v][0] * f[v][0] + f[v][1] * f[v][2] * 2;\n    g[v][1] += f[v][2] * f[v][2] + f[v][0] * f[v][1] * 2;\n    g[v][2] += f[v][1] * f[v][1] + f[v][0] * f[v][2] * 2;\n}\nvoid dfs2(int v,int fa)\n{\n    for (int i = head[v]; i; i = edges[i].next)\n    {\n        int w = edges[i].to;\n        if (w != fa)\n        {\n        \tg[v][2 * edges[i].weight % 3] -= g[w][0];\n        \tg[v][(1 + 2 * edges[i].weight) % 3] -= g[w][1];\n        \tg[v][(2 + 2 * edges[i].weight) % 3] -= g[w][2];\n            dfs2(w, v);\n        }\n    }\n}\nint gcd(int a, int b) { return (!b) ? a : gcd(b, a % b); }\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin >> n;\n    int u, v, w;\n    for (int i = 1; i < n; i++)\n    {\n        cin >> u >> v >> w;\n        addedge(u, v, w);\n        addedge(v, u, w);\n    }\n\n    dfs1(1, 0);\n    dfs2(1, 0);\n\n    int ans = 0;\n    for (int i = 1; i <= n; i++)\n        ans += g[i][0];\n    int d = gcd(ans, n * n);\n    cout << ans / d << '/' << n * n / d << endl;\n    return 0;\n}\n```\n",
        "postTime": 1518446640,
        "uid": 22890,
        "name": "huangwenlong",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2634 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "\u70b9\u5206\u6cbb\u7528\u6765\u7edf\u8ba1\u6811\u4e0a\u8def\u5f84\u3002\n\n\n\u70b9\u5206\u6cbb\u7684\u6838\u5fc3\u662f\u5206\u6cbb\u3002\n\n\n\u6211\u4eec\u9009\u4e00\u4e2a\u70b9\uff0c\u7edf\u8ba1\u8fc7\u8be5\u70b9\u7684\u8def\u5f84\u3002\u7136\u540e\u5206\u6cbb\u6bcf\u4e00\u9897\u5b50\u6811\u3002\n\n\n\u6211\u4eec\u5982\u679c\u9009\u62e9\u91cd\u5fc3\u7684\u8bdd\uff0c\u53ef\u4ee5\u8bc1\u660e\uff0c\u6700\u591a\u9012\u5f52logn\u6b21\u3002\n\n\n\u56e0\u4e3a\u9009\u62e9\u91cd\u5fc3\uff0c\u6211\u4eec\u6bcf\u4e00\u6b21\u9012\u5f52\u7684\u5b50\u6811\u8282\u70b9\u6570\u90fd\u8981\u5c0f\u4e8e\u539f\u6811\u7684\u4e00\u534a\uff0c\u6240\u4ee5log\u7ea7\u522b\u3002\n\n\n\u90a3\u4e48\u6211\u4eec\u5982\u679c\u7edf\u8ba1\u8fc7\u4e00\u70b9\u7684\u65f6\u95f4\u662fT(x)\uff0c\u5219\u603b\u65f6\u95f4\u4e3aO\uff08logn\\*T(n)\uff09\n\n    \n```cpp\n    #include<bits/stdc++.h>\n    #define N 20017\n    #define eho(x) for(int i=head[x];i;i=net[i])\n    using namespace std;\n    int t[8];\n    int it,x,y,w,n,ans,sum,siz[N],head[N],vis[N],f[N],net[N<<1],fall[N<<1],tot,cost[N<<1];\n    #define sight(c) ('0'<=c&&c<='9')\n    inline void read(int &x){\n        static char c;\n        for (c=getchar();!sight(c);c=getchar());\n        for (x=0;sight(c);c=getchar())x=x*10+c-48;\n    }\n    int gcd(int x,int y) {\n        if (!y) return x;return gcd(y,x%y);\n    }\n    inline void add(int x,int y,int w){\n        fall[++tot]=y; net[tot]=head[x]; head[x]=tot; cost[tot]=w;\n    } \n    void dfs(int x,int fa){\n        siz[x]=1;eho(x) if (fall[i]^fa&&!vis[fall[i]]) dfs(fall[i],x),siz[x]+=siz[fall[i]];\n    }\n    void dfs2(int x,int fa){\n        f[x]=sum-siz[x];\n        eho(x) if (fall[i]^fa&&!vis[fall[i]]) f[x]=max(f[x],siz[fall[i]]),dfs2(fall[i],x);\n        if (f[it]>f[x]) it=x;\n    }\n    void dfs3(int x,int fa,int to){\n        t[to]++;\n        eho(x) if (fall[i]^fa&&!vis[fall[i]]) dfs3(fall[i],x,(to+cost[i])%3);\n    }\n    int cal(int x,int val) {\n        t[1]=t[2]=t[0]=0;\n        dfs3(x,0,val%3);\n        return t[1]*t[2]*2+t[0]*t[0];\n    }\n    void sol(int pos){\n        dfs(pos,0);sum=siz[pos];it=0;\n        dfs2(pos,0);pos=it;ans+=cal(pos,0);vis[pos]=1;\n        eho(pos)if (!vis[fall[i]]){\n            ans-=cal(fall[i],cost[i]);\n            sol(fall[i]);\n        }\n    }\n    int main () {\n        read(n);\n        for (int i=1;i<n;i++) {\n            read(x),read(y),read(w);w%=3;\n            add(x,y,w); add(y,x,w);}\n        f[0]=n;\n        sol(1);\n        int t=gcd(ans,n*n);\n        printf(\"%d/%d\\n\",ans/t,n*n/t);\n    }\n```\n\u518d\u8bf4\u4e00\u4e2a\u975e\u5e38\u8ff7\u7684\u4e8b\u60c5\uff1a\n\n```cpp\n    void solve(int u)\n    {\n        ans+=calc(u,0);\n        vis[u]=1;//\u5c06\u5f53\u524d\u70b9\u6807\u8bb0\n        for(int i=h[u];i;i=e[i].next)\n        {\n            int v=e[i].to;\n            if(vis[v]) continue;\n            ans-=calc(v,e[i].w);\n            root=0;//\u521d\u59cb\u5316\u6839  \n            sum=son[v];//\u521d\u59cb\u5316sum\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684sum\u4e0d\u4e00\u5b9a\u662f\u5b50\u6811\u7684\u5927\u5c0f\n            getroot(v,0);//\u627e\u8fde\u901a\u5757\u7684\u6839\n            solve(root);//\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4e2a\u8fde\u901a\u5757\n        }\n    }\n```\n\u90a3\u4e48\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6bcf\u6b21\u5206\u51fa\u4e00\u4e2a\u91cd\u5fc3\u540e\uff0c\n\u53ef\u80fd\u6709\u4e00\u9897\u5b50\u6811\u662f\u5411\u4e0a\u7684\uff0c\u4f46\u8fd9\u6837\u5199\u5c31\u7edf\u8ba1\u4e0d\u51fa\u5411\u4e0a\u7684\u90a3\u9897\u5b50\u6811\u7684\u6b63\u786e\u7684\u5927\u5c0f\n\n\uff0c\u4f46\u662f\u6211\u4eec\u7684\u70b9\u5206\u6cbb\u53ea\u662f\u8ddf\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u5173\uff0c\u4e0e\u7b54\u6848\u65e0\u5173\uff0c\u6240\u4ee5\u603b\u662f\u80fd\u8dd1\u51fa\u6b63\u786e\u7684\u7b54\u6848\uff0c\n\n\u800c\u591a\u6b21\u5c1d\u8bd5\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u7528\u5411\u4e0b\u7684\u5b50\u6811\u5927\u5c0f\u6765\u53d6\u4ee3\u771f\u5b9e\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5728\u4e00\u822c\u6570\u636e\u4e0b\u662f\u6ca1\u6709\u5173\u7cfb\u7684\n\n\uff08\u7531\u4e8e\u5411\u4e0a\u7684\u5b50\u6811\u6bcf\u6b21\u90fd\u671f\u671b\u6309\u4e00\u5b9a\u6bd4\u4f8b\u7f29\u5c0f\uff0c\u6240\u4ee5\u8fd8\u662f\u4fdd\u8bc1log\u7ea7\u522b\u7684\u590d\u6742\u5ea6\uff09\u3002\n\n\u4f46\u6211\u4e0d\u77e5\u9053\u4f1a\u4e0d\u4f1a\u5b58\u5728\u7279\u6b8a\u6570\u636e\u4f7f\u8fd9\u79cd\u5199\u6cd5\u9000\u5316\u6210O(N^2)\u3002\uff08\u6709\u5927\u4f6c\u77e5\u9053\u7684\u8bdd\u8bf7\u544a\u8bc9\u6211\uff09\uff0c\n\n\u4f46\u603b\u4e4b\u8fd9\u79cd\u5199\u6cd5\u603b\u662f\u8ba9\u65b0\u5b66\u8005\u5f88\u8ff7\uff08\u6bd4\u5982\u6211\uff09\uff0c\n\n\u6240\u4ee5\u51fa\u6765\u89e3\u91ca\u4e00\u4e0b\u3002\n",
        "postTime": 1515813530,
        "uid": 53193,
        "name": "\u6b87\u96ea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2634 \u3010\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "/\\*\n\u70b9\u5206\u6cbb\u88f8\u9898\n\n\u8bb0\u5f55\u5230\u91cd\u5fc3\u8def\u5f84\u4e2d\u6a21\u4e09==0,1,2\u7684\u8def\u5f84\u6761\u6570 flag[0],flag[1],flag[2]\n\n\u6bcf\u6b21\u7edf\u8ba1\u7b54\u6848\u5c31\u662fflag[1]\\*flag[2]\\*2+flag[0]\\*flag[0]\u3002\n\n\\*/\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define maxn 20010\n#define inf 0x3f3f3f3f\nusing namespace std;\nint n,m,x,y,z,sum,num,cnt,ans,L,root,t;\nint head[maxn],vis[maxn],d[maxn],son[maxn],f[maxn],flag[4];\nstruct node\n{\n    int u,to,w,next;\n}e[maxn<<1];\ninline int read()\n{\n    int x=0,f=1;char c=getchar();\n    while(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\ninline void add(int u,int v,int dis)\n{\n    e[++num].to=v;e[num].next=head[u];\n    e[num].w=dis;head[u]=num;\n}\nint gcd(int a,int b)  {return b==0?a:gcd(b,a%b);}\nvoid get_root(int now,int fa)\n{\n    son[now]=1;f[now]=0;\n    for(int i=head[now];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(v==fa||vis[v]) continue;\n        get_root(v,now);\n        son[now]+=son[v];f[now]=max(f[now],son[v]);\n    }\n    f[now]=max(f[now],sum-son[now]);\n    if(f[now]<f[root]) root=now;\n}\nvoid get_deep(int now,int fa)\n{\n    flag[d[now]]++;\n    for(int i=head[now];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(vis[v]||v==fa)continue;\n        d[v]=(d[now]+e[i].w)%3;\n        get_deep(v,now);\n    }\n}\nint cal(int now,int dis)\n{\n    d[now]=dis;flag[0]=flag[1]=flag[2]=0;\n    get_deep(now,0);\n    return flag[1]*flag[2]*2+flag[0]*flag[0];\n}\nvoid work(int now)\n{\n    ans+=cal(now,0);vis[now]=1;\n    for(int i=head[now];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(vis[v]) continue;\n        ans-=cal(v,e[i].w);\n        root=0;sum=son[v];\n        get_root(v,0);work(root);\n    }\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<n;i++)\n    {\n        x=read();y=read();z=read()%3;\n        add(x,y,z);add(y,x,z);\n    }\n    sum=n;f[0]=n+1;\n    get_root(1,0);\n    work(root);\n    t=gcd(ans,n*n);\n    printf(\"%d/%d\\n\",ans/t,n*n/t);\n    return 0;\n}\n```",
        "postTime": 1496487564,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2634 \u3010\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "\u4e00\u9053\u88f8\u7684**\u6811\u5206\u6cbb**\n\n\u4ee4\u8282\u70b9 i \u5230\u5f53\u524d\u5206\u6cbb\u7684\u8282\u70b9\u7684\u8ddd\u79bb\u4e3a dis[i] \uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u5bf9 [i,j] \uff0c\u6709 (dis[i] + dis[j]) % 3 = 0\n\n\u6211\u4eec\u5c06\u6240\u6709\u70b9\u7684 dis[] \u503c\u5bf9 3 \u53d6\u4f59\uff0c\u7edf\u8ba1\u51fa\u53d6\u4f59\u540e\u7ed3\u679c\u4e3a 0,1,2 \u7684\u4e2a\u6570\uff0c\u8bb0\u4e3a num[0], num[1], num[2]\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u5b50\u6811\u4e2d\u4efb\u610f\u7684\u4e00\u4e2a\u8282\u70b9 i \uff1a\n\n1\uff09dis[i] % 3 = 0 \u65f6\uff1a\u5f53\u524d\u7b26\u5408\u6761\u4ef6\u7684\u70b9\u5bf9\u6570\u4e3a num[0]\uff08\u5373\u540c\u4e3a 3 \u7684\u500d\u6570\uff09\uff1b\n\n2\uff09dis[i] % 3 = 1 \u65f6\uff1a\u5f53\u524d\u7b26\u5408\u6761\u4ef6\u7684\u70b9\u5bf9\u6570\u4e3a num[3 - 1 = 2] \u3002\n\n\uff08\u8bc1\u660e\uff1a\u5c06 dis[i] \u62c6\u6210 3x + 1\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684\u53e6\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb dis[j] \u62c6\u6210 3y + 2\uff0c\u5219\u548c\u4e3a 3x + 1 + 3y + 2 = 3x + 3y + 3 = 3(x + y + 1)\uff0c\u662f 3 \u7684\u500d\u6570\uff09\n\n3\uff09dis[i] % 3 = 2 \u65f6\uff1a\u5f53\u524d\u7b26\u5408\u6761\u4ef6\u7684\u70b9\u5bf9\u6570\u4e3a num[3 - 2 = 1] \u3002\uff08\u8bc1\u660e\u540c\u4e0a\uff09\n\n\u4ee5\u4e0a\u60c5\u51b5\u53ef\u5408\u5e76\u4e3a cnt += (!dis[i] ? num[0] : num[3 - dis[i]])\uff08cnt \u4e3a\u8bb0\u5f55\u7684\u7b54\u6848\uff0cdis[i] \u5df2\u7ecf\u5bf9 3 \u53d6\u4f59\u8fc7\uff09\n\n**\u4ee3\u7801\u5982\u4e0b\uff1a**\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int Maxn = 0x3f3f3f3f;\nconst int N = 2e4 + 5, M = N << 1;\nint T, n, num[3], dis[N], fa[N], lst[N], son[N], sze[N], nxt[M], to[M], cst[M];\nint Ans; bool vis[N];\ntemplate <class T> inline void CkMax(T &a, const T b) {if (a < b) a = b;}\ninline int get()\n{\n    char ch; bool f = false; int res = 0;\n    while (((ch = getchar()) < '0' || ch > '9') && ch != '-');\n    if (ch == '-') f = true;\n     else res = ch - '0';\n    while ((ch = getchar()) >='0' && ch <= '9')\n        res = (res << 3) + (res << 1) + ch - '0';\n    return f? ~res + 1 : res;\n}\ninline void put(int x)\n{\n    if (x < 0)\n      x = ~x + 1, putchar('-');\n    if (x > 9) put(x / 10);\n    putchar(x % 10 + 48);\n}\ninline void add(const int x, const int y, const int z)\n{\n    nxt[++T] = lst[x]; lst[x] = T; to[T] = y; cst[T] = z;\n}\ninline int FindG(const int sv)\n{\n    static int Qn, Q[N];\n    int x, y, mx = n, G;\n    Q[Qn = 1] = sv; fa[sv] = 0;\n    for (int i = 1; i <= Qn; ++i)\n    {\n        sze[x = Q[i]] = 1; son[x] = 0;\n        for (int e = lst[x]; e; e = nxt[e])\n        {\n            if (vis[y = to[e]] || y == fa[x]) continue;\n            Q[++Qn] = y; fa[y] = x;\n        }\n    }\n    for (int i = Qn; i >= 1; --i)\n    {\n        x = Q[i]; y = fa[x]; \n        CkMax(son[x], Qn - sze[x]);\n        if (son[x] < mx) G = x, mx = son[x];\n        if (!y) break; sze[y] += sze[x];\n        CkMax(son[y], sze[x]);\n    }\n    return G;\n}\ninline int Calc(const int sv, const int L)\n{\n    static int Qn, Q[N], d[N]; \n    int x, y, dn = 0;\n    Q[Qn = 1] = sv; dis[sv] = L; fa[sv] = 0;\n    for (int i = 1; i <= Qn; ++i)\n    {\n        d[dn++] = dis[x = Q[i]];\n        for (int e = lst[x]; e; e = nxt[e])\n        {\n            if (vis[y = to[e]] || y == fa[x]) continue;\n            fa[y] = x; dis[y] = dis[x] + cst[e]; Q[++Qn] = y;\n        }\n    }\n    int cnt = 0; memset(num, 0, sizeof(num));\n    for (int i = 0; i < dn; ++i) num[d[i] %= 3]++;\n    for (int i = 0; i < dn; ++i) cnt += (!d[i] ? num[0] : num[3 - d[i]]);\n    return cnt;\n}\ninline void solve(const int x)\n{\n    int G = FindG(x), y;\n    vis[G] = true; Ans += Calc(G, 0);\n    for (int i = lst[G]; i; i = nxt[i])\n     if (!vis[y = to[i]]) Ans -= Calc(y, cst[i]);\n    for (int i = lst[G]; i; i = nxt[i])\n     if (!vis[y = to[i]]) solve(y);\n}\ninline int Gcd(int a, int b)\n{\n    int r = a % b;\n    while (r)\n     a = b, b = r, r = a % b;\n    return b;\n}\nint main()\n{\n    int x, y, z;\n    n = get();\n    for (int i = 1; i < n; ++i)\n    {\n        x = get(); y = get(); z = get() % 3;\n        add(x, y, z); add(y, x, z);\n    }\n    solve(1);\n    int Gc = Gcd(Ans, n *= n);\n    put(Ans / Gc), putchar('/');\n    put(n / Gc), putchar('\\n');\n    return 0;\n}\n\n```",
        "postTime": 1495259174,
        "uid": 17952,
        "name": "Log_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2634 \u3010\u806a\u806a\u53ef\u53ef\u3011"
    },
    {
        "content": "```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<vector>\nusing namespace std;\nconst int INF=99999999;\nconst int MAXN=100010;\nstruct node\n{\n    int next;\n    int to;\n    int w;\n} t[MAXN];\nbool vis[MAXN];\nint head[MAXN],num;\nint siz[MAXN],f[MAXN];\nint lk[4];\nint dis[MAXN];\nint n,Num,rt;\nint ans;\nvoid add(int x,int y,int z)\n{\n    t[ ++num ].next=head[ x ];\n    t[ num ].to=y,t[ num ].w=z;\n    head[ x ]=num;\n}\nvoid Gr(int k,int fa)//\u5bfb\u627e\u6839\u8282\u70b9,\u6839\u8282\u70b9\u6ee1\u8db3\u6700\u5927\u513f\u5b50\u5b50\u6811\u89c4\u6a21\u6700\u5c0f \n{\n    siz[ k ]=1,f[ k ]=0;\n    for(int i=head[ k ],x; i ;i=t[ i ].next)\n    {\n        x=t[ i ].to;\n        if( x!=fa && !vis[ x ] )\n        {\n            Gr( x,k );\n            siz[ k ]+=siz[ x ];//\u5b50\u6811\u89c4\u6a21 \n            f[ k ]=max( f[ k ],siz[ x ] );\n        }\n    }\n    f[ k ]=max( f[ k ],Num-siz[ k ] );\n    if( f[ k ]<f[ rt ] )   rt=k;\n}\nvoid Gd(int k,int fa)//\u83b7\u5f97\u6bcf\u4e2a\u70b9\u5230cal\u4e2d\u7684k\u7684\u8ddd\u79bb\uff0c\u5373rt \n{\n    lk[ dis[ k ] ]++;\n    for(int i=head[ k ],x; i ;i=t[ i ].next)\n    {\n        x=t[ i ].to;\n        if( x!=fa && !vis[ x ] )\n        {\n            dis[ x ]=( dis[ k ]+t[ i ].w )%3;\n            Gd( x,k );\n        }\n    }\n}\nint cal(int k,int w)\n{\n    dis[ k ]=w%3,lk[ 0 ]=lk[ 1 ]=lk[ 2 ]=0;\n    //lk[ 0 ]\u8868\u793a\u5230k\u7684\u8ddd\u79bb%3=0\u7684\u70b9\u7684\u4e2a\u6570,lk[ 1 ]\u8868\u793a\u4f59\u6570\u4e3a1,lk[ 2 ]\u8868\u793a\u4f59\u6570\u4e3a2,\u6240\u4ee5\u8ba1\u7b97\u65b9\u6848\u6570\u65f6,lk[ 0 ]\u5185\u90e8\u89e3\u51b3,lk[ 1 ]\u548clk[ 2 ]\u4e24\u4e24\u642d\u914d \n    Gd( k,0 );\n    return lk[ 0 ]*lk[ 0 ]+2*lk[ 1 ]*lk[ 2 ];\n}\nvoid work(int k)\n{\n    ans+=cal( k,0 ),vis[ k ]=1;\n    for(int i=head[ k ],x; i ;i=t[ i ].next)\n    {\n        x=t[ i ].to;\n        if( !vis[ x ] )\n        {\n            ans-=cal( x,t[ i ].w );\n            Num=siz[ x ],rt=0;\n            Gr( x,0 ),work( rt );\n        }\n    }\n}\nvoid print(int x,int y)\n{\n    int a=x,b=y,cs=x%y;\n    while( cs )\n    {\n        a=b,b=cs,cs=a%b;\n    }\n    printf(\"%d/%d\\n\",x/b,y/b);\n}\nint main()\n{\n    int x,y,z;\n    scanf(\"%d\",&n);\n    for(int i=1; i<=n-1; i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z),z=z%3;\n        add( x,y,z ),add( y,x,z );\n    }\n    f[ 0 ]=INF,Num=n;\n    Gr( 1,0 );\n    work( rt );\n    print( ans,n*n );\n    return 0;\n}\n\n```",
        "postTime": 1500083866,
        "uid": 25098,
        "name": "QJLYH",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2634 \u3010\u806a\u806a\u53ef\u53ef\u3011"
    }
]