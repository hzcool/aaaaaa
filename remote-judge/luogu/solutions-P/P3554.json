[
    {
        "content": "\u53c8\u662f\u4e00\u9053\u6ca1\u770b\u4efb\u4f55\u63d0\u793a\uff08\u5305\u62ec\u6807\u7b7e\uff09\u4e00\u904d\u8fc7\u7684dp\u9898\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n\u9996\u5148\u770b\u51fa $k$ \u5177\u6709\u5355\u8c03\u6027\uff0c\u56e0\u6b64\u91c7\u7528\u4e8c\u5206\u7b54\u6848\u5c06\u6700\u4f18\u6027\u95ee\u9898\u8f6c\u5316\u4e3a\u5224\u5b9a\u6027\u95ee\u9898\u3002\n\n\u5176\u6b21\uff0cB \u4e00\u5b9a\u4e0d\u4f1a\u8d70\u56de\u5934\u8def\u3002\u56e0\u4e3a\u8d70\u56de\u5934\u8def\u5c31\u8bf4\u660e B \u7684\u67d0\u4e00\u6b21\u9009\u62e9\u4e0d\u662f\u6240\u6709\u9009\u62e9\u4e2d\u6700\u4f18\u7684\uff0c\u90a3 B \u4e3a\u5565\u4e0d\u5728\u90a3\u6b21\u9009\u62e9\u65f6\u5c31\u91c7\u53d6\u6700\u4f18\u7b56\u7565\u5462\uff1f\u8d70\u56de\u5934\u8def\u53ea\u4f1a\u591a\u7ed9 A \u67d3\u8272\u7684\u673a\u4f1a\uff0c\u90a3 B \u7684\u80dc\u7b97\u5c31\u66f4\u5c0f\u4e86\u3002\n\n\u65e2\u7136 B \u4e0d\u4f1a\u8d70\u56de\u5934\u8def\uff0c\u90a3\u4e48\u5f53 B \u8d70\u5230\u7ed3\u70b9 $i$ \u65f6\uff0cA \u5fc5\u987b\u5728 B \u505a\u4e0b\u4e00\u6b21\u9009\u62e9\u4e4b\u524d\u628a\u7ed3\u70b9 $i$ \u7684\u6240\u6709\u513f\u5b50\u67d3\u6210\u9ed1\u8272\uff0c\u4e0d\u7136 B  \u4e0b\u4e00\u6b21\u8d70\u7684\u65f6\u5019\u8d70\u5230\u7ed3\u70b9 $i$ \u6ca1\u6765\u5f97\u53ca\u67d3\u6210\u9ed1\u8272\u7684\u513f\u5b50\u5c31\u80dc\u5229\u4e86\u3002\u4f46\u662f\u53ea**\u7528\u4e00\u6b21\u67d3\u8272\u53ef\u80fd\u65e0\u6cd5\u8ba9\u7ed3\u70b9 $i$ \u7684\u6240\u6709\u513f\u5b50\u90fd\u53d8\u6210\u9ed1\u8272**\uff0c\u8fd9\u65f6\u5019\u5c31\u8981\u672a\u96e8\u7ef8\u7f2a\uff0c**\u5728\u4e4b\u524d\u51e0\u6b21\u67d3\u8272\u65f6\u63d0\u524d\u628a\u8fd9\u4e9b\u6ca1\u6cd5\u67d3\u6210\u9ed1\u8272\u7684\u513f\u5b50\u67d3\u6210\u9ed1\u8272**\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5411\u201c\u4e0a\u4e00\u7ea7\u201d\u7533\u8bf7\u652f\u63f4\uff0c\u56e0\u4e3a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u90e8\u5df2\u7ecf\u65e0\u6cd5\u201c\u6d88\u5316\u201d\u6389\u9700\u8981\u67d3\u9ed1\u7684\u7ed3\u70b9\u4e86\u3002\n\n\u90a3\u672a\u96e8\u7ef8\u7f2a\u7684\u65f6\u673a\u53c8\u8be5\u5982\u4f55\u786e\u5b9a\u5462\uff1f\u5047\u8bbe\u5728 B \u8d70\u5230\u7ed3\u70b9 $j$ \u65f6\u6211\u4eec\u53d1\u73b0\u7ed3\u70b9 $j$ \u7684\u513f\u5b50\u6570\u5c0f\u4e8e $k$\uff0c\u4e5f\u5c31\u662f\u8bf4\u67d3\u8272\u7684\u6b21\u6570\u4f1a\u4ea7\u751f\u5269\u4f59\uff0c\u90a3\u6211\u4eec\u5c31\u9700\u8981\u770b\u4e00\u4e0b\u7ed3\u70b9 $j$ \u7684\u513f\u5b50\u91cc\u6709\u6ca1\u6709\u9700\u8981\u652f\u63f4\u7684\uff0c\u628a\u5269\u4f59\u7684\u6b21\u6570\u5206\u914d\u7ed9\u5b83\u4eec\u3002\u5982\u679c\u5269\u4f59\u7684\u6b21\u6570\u4ecd\u7136\u591f\uff0c\u90a3\u5c31\u53c8\u8981\u5411 $j$ \u7684\u201c\u4e0a\u4e00\u7ea7\u201d\u6c42\u63f4\u4e86\u3002\n\n\u4ee4 $f_{i}$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\uff08\u4e0d\u5305\u62ec $i$\uff09\u9700\u8981\u591a\u5c11\u6b21\u6570\u7684\u652f\u63f4\uff0c$f_{i}=cnt_{i}-k+\\sum \\max(f_{p},0)$\u3002 \u5176\u4e2d $cnt_{i}$ \u4e3a $i$ \u7684\u513f\u5b50\u6570\u91cf\uff0c$p$ \u4e3a $i$ \u7684\u513f\u5b50\u7ed3\u70b9\u3002\u5982\u679c $f_{1}\\le 0$\uff0c\u90a3\u4e48\u5f53\u524d\u4e8c\u5206\u5230\u7684 $k$ \u5c31\u662f\u5408\u6cd5\u7684\uff0c\u5426\u5219\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u4e8c\u5206\u7684\u590d\u6742\u5ea6\u4e3a $O(\\log v)$\uff0c$v$ \u4e3a\u503c\u57df\u3002\u4e00\u6b21 $dp$ \u590d\u6742\u5ea6\u4e3a $O(n)$\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log v)$\u3002\u8fd9\u91cc\u6211\u53c8\u5bf9\u503c\u57df\u505a\u4e86\u4e2a\u5c0f\u4f18\u5316\uff0c\u56e0\u4e3a\u7ed3\u70b9 $1$ \u7684\u6240\u6709\u513f\u5b50\u5728\u7b2c\u4e00\u6b21\u67d3\u8272\u4e2d\u4e00\u5b9a\u8981\u5168\u88ab\u67d3\u6210\u9ed1\u8272\u800c\u4e14\u4e0d\u53ef\u80fd\u6709\u652f\u63f4\uff0c\u56e0\u6b64\u4e8c\u5206\u7b54\u6848\u7684\u4e0b\u754c\u53ef\u4ee5\u53d6 $cnt_{1}$\u3002\u540c\u65f6\uff0c\u5982\u679c $a$ \u4e0d\u5c0f\u4e8e\u4efb\u4e00\u7ed3\u70b9\u7684\u513f\u5b50\u6570\u91cf\uff0c\u90a3\u4e48 $k=a$ \u4e00\u5b9a\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u7b54\u6848\uff0c\u4e8c\u5206\u7b54\u6848\u7684\u4e0a\u754c\u53ea\u9700\u8981\u53d6\u5230 $a$\u3002\u52a0\u4e86\u8fd9\u4e2a\u4f18\u5316\u540e\u6211\u7684\u4ee3\u7801\u62ff\u5230\u4e86\u6700\u4f18\u89e3 rk1 /cy\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u7ed9\u4e2a\u8d5e\u518d\u8d70\u5427QAQ\uff0c\u8c22\u8c22\u60a8\uff01\uff09\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#define ll long long\n#define fo(i,x,y) for(int i=x;i<=y;++i)\n#define go(i,x,y) for(int i=x;i>=y;--i)\nusing namespace std;\ninline int read(){ int x=0,fh=1; char ch=getchar(); while(!isdigit(ch)){ if(ch=='-') fh=-1; ch=getchar(); } while(isdigit(ch)){ x=(x<<1)+(x<<3)+ch-'0'; ch=getchar(); } return x*fh; }\n\nconst int N=3e5+5;\nstruct Edge{\n\tint to,next;\n}e[N<<1];\nint f[N],n,head[N],tot,k,son[N];\n\nvoid connect(int x,int y){\n\te[++tot]=(Edge){y,head[x]};\n\thead[x]=tot; \n} \n\nvoid _dfs(int now,int from){\n\tfor(int i=head[now];i;i=e[i].next){\n\t\tint p=e[i].to;\n\t\tif(p==from) continue;\n\t\tson[now]++;\n\t\t_dfs(p,now);\n\t}\n}\n\nvoid dfs(int now,int from){\n\tf[now]=son[now]-k;\n\tfor(int i=head[now];i;i=e[i].next){\n\t\tint p=e[i].to;\n\t\tif(p==from) continue;\n\t\tdfs(p,now);\n\t\tif(f[p]>0) f[now]+=f[p];\n\t}\n}\n\nint main(){\n\tcin>>n;\n\tfo(i,1,n-1){\n\t\tint x=read(),y=read();\n\t\tconnect(x,y);\n\t\tconnect(y,x); \n\t}\n\t_dfs(1,0);\n\tint L=son[1],R=0,ans;\n\tfo(i,1,n) R=max(R,son[i]);\n\twhile(L<=R){\n\t\tk=(L+R)>>1;\n\t\tdfs(1,0);\n\t\tif(f[1]<=0) R=k-1,ans=k;\n\t\telse L=k+1;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n/*\n-------------------------------------------------\n*/\n```\n",
        "postTime": 1610524340,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3554 \u3010[POI2013]LUK-Triumphal arch\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u6240\u6c42\u7684\u503c\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u8986\u76d6\u8303\u56f4\uff0c\u6240\u4ee5\u65e0\u6cd5\u76f4\u63a5\u6c42\u89e3\n\n\u7528\u4e8c\u5206\u8f6c\u5316\u4e3a\u5224\u5b9a\u6027\u95ee\u9898\n\n\u7136\u540e\u5c31\u662f\u6811\u5f62$dp$\u4e86\n\n\u53ef\u4ee5\u770b\u51faB\u4e00\u5b9a\u53ea\u4f1a\u4ece\u6839\u8282\u70b9\u8d70\u5230\u53f6\u5b50\u7ed3\u70b9\uff0c\u4e0d\u4f1a\u8d70\u56de\u5934\u8def\n\n\uff08\u8d70\u56de\u5934\u8def\u76f8\u5f53\u4e8e\u81ea\u5df1\u5565\u4e5f\u6ca1\u5e72\u8fd8\u8ba9A\u591a\u67d3\u4e86\u51e0\u6b21\u8272\uff09\n\n\u8bbe$f[i]$\u8868\u793a\u5728$i$\u7684\u5b50\u6811\u4e2d\uff08\u4e0d\u5305\u62ec$i$\uff09\u8fd8\u9700\u8981\u67d3\u8272\u7684\u6b21\u6570\n\n\u8f6c\u79fb\u5c31\u662f\u6c42\u51fa$i$\u7684\u5b50\u8282\u70b9\u7684$f$\u503c\u603b\u548c\uff0c\u8bb0\u4e3a$sum$\n\n\u7136\u540e$f[i]=max(0,sum+d[i]-mid)$\n\n$d[i]$\u8868\u793a$i$\u7684\u5ea6\u6570\uff08\u4e0d\u5305\u62ec\u5b83\u7684\u7236\u8282\u70b9\uff09\n\n\u6bcf\u4e00\u6b21\u4e8c\u5206\u90fd\u505a\u4e00\u6b21dp\n\n\u5982\u679c$f[1]==0$\uff0c\u5219\u7b54\u6848\u53ef\u884c\n\n\u5173\u4e8e\u6570\u636e\u8303\u56f4\uff1abzoj\u662f3e5\uff0cluogu\u6ca1\u7ed9\uff0c\u4f46\u662f1e5\u53ef\u4ee5\u8fc7\n\n~~\u6211\u5148\u5728luogu\u505a\u7684\u4ea4\u5230bzoj\u8fd8RE\u4e86\u4e00\u53d1~~\n\n```\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#include<algorithm>\n#define reg register\nusing namespace std;\nconst int N=3e5+5;\nstruct node\n{\n\tint to,nxt;\n}edge[N<<1];\nint n,num,head[N],f[N],mid;\ninline int read()\n{\n\tint x=0,w=1;\n\tchar c=getchar();\n\twhile (!isdigit(c)&&c!='-') c=getchar();\n\tif (c=='-') c=getchar(),w=-1;\n\twhile (isdigit(c))\n\t{\n\t\tx=(x<<1)+(x<<3)+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x*w;\n}\ninline void add_edge(int from,int to)\n{\n\tedge[++num]=(node){to,head[from]};\n\thead[from]=num;\n}\nvoid dfs(int k,int fa)\n{\n\tint sum=0;\n\tfor (reg int i=head[k];i;i=edge[i].nxt)\n\t{\n\t\tint v=edge[i].to;\n\t\tif (v==fa) continue;\n\t\tdfs(v,k); sum+=f[v]+1;\n\t}\n\tf[k]=max(sum-mid,0);\n}\nint main()\n{\n\tn=read();\n\tif (n==1) {puts(\"0\"); return 0;}\n\tfor (reg int i=1;i<n;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\tadd_edge(x,y); add_edge(y,x);\n\t}\n\tint l=1,r=n-1,ans=0;\n\twhile (l<=r)\n\t{\n\t\tmemset(f,0,sizeof(f));\n\t\tmid=(l+r)>>1; dfs(1,0);\n\t\tif (!f[1]) ans=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1536500440,
        "uid": 43471,
        "name": "Captain_Paul",
        "ccfLevel": 0,
        "title": "P3554  [POI2013]LUK-Triumphal arch"
    },
    {
        "content": "### \u4e00\u9053\u5f88\u597d\u7684\u7ec3\u6811\u5f62DP\u7684\u9898 \uff0c\u601d\u7ef4\u542b\u91cf\u771f\u7684\u9ad8\n\n\u5148\u6302\u4e0a\u4f53\u9762\u5427\uff1a\n\n\u8ba9\u00b7\u590f\u683c\u4f26\u4f1a\u73a9\u4e00\u4e2a\u53eb\u201c\u51ef\u65cb\u95e8\u201d\u7684\u6e38\u620f\uff1a\u73b0\u5728\u6709\u4e00\u68f5n\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u8868\u793a\u4e00\u4e2a\u56fd\n\n\u5bb6\uff0c1\u53f7\u70b9\u4ee3\u8868\u8fd9\u4e2a\u56fd\u5bb6\u7684\u9996\u90fd \u3002\n\n\u8fd9\u4e2a\u6e38\u620f\u7531\u4e24\u4e2a\u4eba\u4e00\u8d77\u73a9 \u4e00\u4e2a\u73a9\u5bb6\u626e\u6f14\u89c6\u5bdf\u56fd\u5bb6\u7684\u56fd\u738b\uff0c\u53e6\u4e00\u4e2a\u626e\u6f14\u5efa\u7acb\u51ef\u65cb\u95e8\u7684\u5efa\u7b51\u5e08 \u3002\n\n\u4e00\u5f00\u59cb\u53ea\u6709\u9996\u90fd\u6709\u51ef\u65cb\u95e8 \u56fd\u738b\u6bcf\u6b21\u4f1a\u4ece\u5f53\u524d\u6240\u5728\u57ce\u5e02\u79fb\u52a8\u5230\u4e00\u4e2a\u76f8\n\u90bb\u7684\u57ce\u5e02\u3002\n\n\u5728\u56fd\u738b\u6bcf\u6b21\u79fb\u52a8\u524d\uff0c\u5efa\u7b51\u5e08\u53ef\u4ee5\u9009\u62e9\u56fd\u5bb6\u5185\u4efb\u610f\u4e0d\u8d85\u8fc7k\u4e2a\u57ce\u5e02\u5efa\u9020\u51fa\u51ef\u65cb\u95e8\u3002\n\n\u5982\u679c\u5728\u4efb\u610f\u4e00\u4e2a\u65f6\u523b\uff0c\u56fd\u738b\u6240\u5728\u7684\u57ce\u5e02\u6ca1\u6709\u51ef\u65cb\u95e8 \u90a3\u4e48\u56fd\u738b\u4f1a\u5f88\u751f\u6c14\uff0c\u626e\u6f14\n\u5efa\u7b51\u5e08\u7684\u73a9\u5bb6\u5c31\u8f93\u4e86\u3002\n\n\u5982\u679c\u6240\u6709\u7684\u57ce\u5e02\u90fd\u5efa\u7acb\u8d77\u4e86\u51ef\u65cb\u95e8\u800c\u56fd\u738b\u4e00\u76f4\u6ca1\u6709\u8d70\u5230\u6ca1\u6709\u51ef\u65cb\u95e8\u7684\u57ce\u5e02\uff0c\u90a3\u4e48\u5efa\u7b51\u5e08\u5c31\u80dc\u5229\u4e86\u3002\n\nForeseeable\u4e0d\u4f1a\u5efa\u7b51\uff0c\u6240\u4ee5\u4ed6\u626e\u6f14\u56fd\u738b\uff0c\u800c\u8ba9\u00b7\u590f\u683c\u4f26\u5219\u201c\u626e\u6f14\u201d\u5efa\u7b51\u5e08\uff08\u4ed6\u672c\u6765\u5c31\u662f\u5efa\u7b51\u5e08\u4e0d\u9700\u8981\u626e\u6f14\uff09\u3002\n\n\u5bb9\u6613\u53d1\u73b0k\u7684\u5927\u5c0f\u975e\u5e38\u5f71\u54cd\u6e38\u620f\u6709\u8da3\u5ea6\u2026\u2026 \u5982\u679ck\u592a\u5927\uff0c\u90a3\u4e48\u5efa\u7b51\u5e08\u53ef\u4ee5\u5728\u56fd\u738b\u884c\u52a8\u524d\u5c31\u5728\u6240\u6709\u57ce\u5e02\u5efa\u51fa\u51ef\u65cb\u95e8\uff0c\u90a3\u4e48\u56fd\u738b\u5c31\u6ca1\u6709\u80dc\u5229\u7684\u5e0c\u671b\u4e86\uff0c\u8fd9\u6837Foreseeable\u4f1a\u6380\u684c\u4e0d\u73a9\u3002\n\n\u5982\u679ck\u592a\u5c0f\uff0c\u90a3\u4e48Foreseeable\u5f88\u6709\u53ef\u80fd\u4f1a\u53d1\u6325\u81ea\u5df1\u6240\u5269\u65e0\u51e0\u7684\u667a\u5546\u8d70\u5230\u4e00\u4e2a\u6ca1\u6709\u51ef\u65cb\u95e8\u7684\u5730\u65b9  \u8ba9\u00b7\u590f\u683c\u4f26\u60f3\u4eab\u53d7\u8650Foreseeable\u7684\u5feb\u611f \u6240\u4ee5\u4f60\u8981\u5e2e\u4ed6\u786e\u5b9a\u6700\u5c0f\u7684k\uff0c\u4f7f\u5f97\u5728\u8fd9\u4e2a\u6e38\u620f\u4e2d\uff0c\u5982\u679c\u5efa\u7b51\u5e08\u8db3\u591f\u806a\u660e\u7684\u8bdd\uff0c\u5efa\u7b51\u5e08\u5fc5\u80dc\n\n\n\n------------\n\n\u6709\u6ca1\u6709\u53d1\u73b0\u5982\u679c\u770b\u8fd9\u4e2a\u9898\u9762\u5f88\u5bb9\u6613\u53d1\u73b0\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff1f\u6bd5\u7adf\u5728\u9898\u9762\u7684\u672b\u5c3e\u7ed9\u4e86\u4f60\u63d0\u793a\u3002\n\n\u4e8c\u5206\u7b54\u6848log\u7ea7\uff0c\u6570\u636e\u8303\u56f4\u539f\u9898\u662f3e5,\u4e5f\u5c31\u662f\u8fd8\u9700\u8981\u4e00\u4e2aO(n)\u7ea7\u7b97\u6cd5\n\n\u6811\u7684\u8bdd......\u8003\u8651\u6811\u5f62DP\uff0c\u6bd5\u7adf\u5b83\u662fO(n)\u7ea7\u7684\n\n\u5148\u8003\u8651\u9898\u76ee\u4e2d\u8bf4\u4e86\uff0cB\u5f88\u6709\u53ef\u80fd\u4f1a\u53d1\u6325\u81ea\u5df1\u6240\u5269\u65e0\u51e0\u7684\u667a\u5546\n\n\u8fd9\u5176\u5b9e\u5c31\u662f\u53d8\u76f8\u7684\u544a\u8bc9\u6211\u4eecB\u4e00\u5b9a\u4f1a\u5411\u53f6\u5b50\u8282\u70b9\u8d70\uff0c\u4e0d\u4f1a\u5f80\u56de\u8d70\n\n\u56e0\u4e3aB\u8981\u8d62\uff0c\u800c\u8d70\u56de\u5934\u8def\u76f8\u5f53\u4e8e\u81ea\u5df1\u5565\u4e5f\u6ca1\u5e72\u8fd8\u8ba9A\u591a\u67d3\u4e86\u51e0\u6b21\u8272\n\n\u8fd9\u6837\u5f53B\u8d70\u5230\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u5047\u8bbe\u4e4b\u524dA\u5df2\u67d3\u5b8cB\u6240\u4ee5\u7684\u7956\u5148(\u4e0e\u4e4b\u524d\u72b6\u6001\u65e0\u5173)\n\n\u90a3\u4e48\u72b6\u6001\u4fbf\u53ea\u4e0e\u5b83\u7684\u5b50\u6811\u6709\u5173\n\n\u6211\u4eec\u8bbe\u72b6\u6001dp[i]\u4e3a\u5728i\u53f7\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u8fd8\u9700\u8981\u591a\u67d3\u8272\u7684\u70b9\n\n\u8003\u8651\u4e00\u4e0b\uff1a\n\n\u5982\u679ci\u6709m\u4e2a\u513f\u5b50\uff0c\u800cm<k\u7684\u8bdd\uff0c\u6beb\u65e0\u7591\u95eeB\u53ef\u4ee5\u5411\u4e0b\u8d70\n\n\u82e5m>k\u5462\uff1f\u663e\u7136B\u4f1a\u8d70m-k\u4e2d\u7684\u4e00\u4e2a\u9876\u70b9\uff0c\u83b7\u80dc\n\n\u8fd9\u662f\u4e0d\u662f\u8bf4\u53ea\u8981\u6709\u513f\u5b50\u8282\u70b9\u4e2a\u6570>k\u7684\uff0c\u5c31\u4e0d\u884c\u5462...\u663e\u7136\u4e0d\u662f\n\n\u56e0\u4e3aA\u53ef\u4ee5\u5728m<k\u662f\uff0c\u5c06k-m\u4e2a\u591a\u4f59\u8282\u70b9\u5206\u914d\u4e0b\u53bb\n\n\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001\uff0c\u6211\u4eec\u9700\u8981\u540c\u65f6\u8003\u8651\u5b83\u7684\u8d21\u732e\u548c\u4ee3\u4ef7\n\n\u5c31\u53ef\u4ee5\u9012\u5f52\u4ece\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\u627e\n\n\u6bcf\u6b21\u8ba1\u7b97\u4e00\u4e0bi\u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u8282\u70b9\u8fd8\u9700\u8981\u67d3\u8272\uff0c\u5982\u679c\u52a0\u4e0ai\u7684\u8d21\u732e\u8fd8\u662f\u4e0d\u884c\n\n\u7684\u8bdd\uff0c\u5c31\u8bb0\u5f55\u72b6\u6001\uff0c\u548c\u7236\u8282\u70b9\u5408\u5e76\n\n\u53cd\u4e4b\u5982\u679c\u53ef\u884c\u751a\u81f3\u6709\u5269\u4f59\uff0c\u5c31\u8fd4\u56de0\uff0c\u56e0\u4e3a\u65e2\u7136\u6211\u8fd9\u9897\u5b50\u6811\u4e0d\u9700\u8981\u9886\u5bfc\u6279\u94b1\n\n(QAQ)\u5c31\u6ca1\u4ee3\u4ef7\uff0c\u800c\u4e14\u513f\u5b50\u8282\u70b9\u80af\u5b9a\u4e0d\u80fd\u7ed9\u7236\u4eb2\u8282\u70b9\u8d21\u732e\u554a\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u6811\u5f62DP\u7684\u4e00\u5957\u4f53\u7cfb\u5c31\u5df2\u7ecf\u51fa\u6765\u4e86\uff0c\u662f\u4e0d\u662f\u5f88\u795e\u5947\uff1f\uff01\uff01\uff01\n\n\u8fd9\u4e5f\u662f\u6811\u5f62DP\u7684\u5999\u5904\u6240\u5728\uff0c\u548c\u72b6\u538b\u4e0d\u540c\uff0c\u5b83\u66f4\u8003\u5bdf\u601d\u7ef4\u3002\u4f60\u4f1a\u611f\u89c9\u5b8c\u6210\u7684\n\nDFS\u51fd\u6570\u5b8c\u7f8e\u65e0\u7f3a\uff0c\u591a\u4e00\u884c\u90fd\u7d2f\u8d58\uff0c\u601d\u7ef4\u7f8e\u5999(\u9676\u9189)\n\nDFS\u51fd\u6570\uff1a\n\n```cpp\nvoid dfs(int now,int fa,int k){\n\tint sum=0;\n\tfor(int i=head[now];i;i=e[i].next){\n\t\tif(e[i].to==fa) continue;\n\t\tdfs(e[i].to,now,k);\n\t\tsum+=dp[e[i].to]+1;\n\t}\n\tdp[now]=max(sum-k,0);\n}\n```\n\u6700\u540e\u7ed9\u51fa\u4e24\u79cd\u4e8c\u5206\u677f\u5b50\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u633a\u5e38\u89c1\u7684\n\n\u4e00\uff1a\n```cpp\nwhile(l<=r){\n\tint mid=l+((r-l)>>1);\n\tif(check(mid)){\n\t\tans=mid;\n\t\tr=mid-1;\n\t}\n\telse l=mid+1;\n}\n```\n\u6211\u6700\u5f00\u59cb\u7528\u7684\u677f\u5b50\uff0cmid=l+((r-l)>>1)......\u5c31\u662f\u5feb\u4e00\u70b9\u70b9\u9632\u7206int\n\n\u4e8c\uff1a\n```cpp\nwhile(l<r){\n\tint mid=l+((r-l)>>1);\n\tif(check(mid)){\n\t\tans=mid;\n\t\tr=mid;\n\t}\n\telse l=mid+1;\n}\n```\n\u4e00\u6837\u6ca1\u4ec0\u4e48\u533a\u522b\n\n\u867d\u7136\u7b80\u5355\uff0c\u4f46\u662f\u4e0d\u5f97\u4e0d\u8bf4\u4e8c\u5206\u771f\u7684\u5f88\u5bb9\u6613\u6572\u6302...\u843d\u4e2a-1\uff0c+1\uff0c=\u53f7\u4ec0\u4e48\u7684\n\n(\u53ea\u662f\u6211\u6bd4\u8f83\u5f31)\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<memory.h>\nconst int maxn=301000;\nusing namespace std;\nint n,etot,head[maxn],ans,dp[maxn];\nstruct node{\n\tint to,next;\n}e[maxn];\nvoid add(int u,int v){\n\te[++etot].to=v;\n\te[etot].next=head[u];\n\thead[u]=etot;\n}\nvoid dfs(int now,int fa,int k){\n\tint sum=0;\n\tfor(int i=head[now];i;i=e[i].next){\n\t\tif(e[i].to==fa) continue;\n\t\tdfs(e[i].to,now,k);\n\t\tsum+=dp[e[i].to]+1;\n\t}\n\tdp[now]=max(sum-k,0);\n}\nbool check(int k){\n\tdfs(1,0,k);\n\tif(dp[1]==0) return true;\n\telse return false;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tif(n==1){\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tint l=1,r=(1<<30);\n\twhile(l<=r){\n\t\tint mid=l+((r-l)>>1);\n\t\tif(check(mid)){\n\t\t\tans=mid;\n\t\t\tr=mid-1;\n\t\t}\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n} \n```\n## \u6700\u540e\u795d\u5927\u5bb6CSP NOI XXXOI RP++! ! !\n",
        "postTime": 1571926238,
        "uid": 221615,
        "name": "S_S_H",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3554 \u3010[POI2013]LUK-Triumphal arch\u3011"
    },
    {
        "content": "\u4e0d\u61c2\u5f97\u770b\u8fd9\u91cc\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u81ea\u5df1\u5199\u7684\u9898\u89e3\u6bd4\u8f83\u5bb9\u6613\u770b\u61c2  ~~\u53ef\u80fd\u662f\u81ea\u5df1\u6bd4\u8f83\u83dc\u5427~~\n\n**\u601d\u8def\uff1a**\n\n**\u4e8c\u5206+\u6811\u5f62dp**\n\n\u8f93\u5165\u88ab\u5361\u4e86\u4e94\u5206\u949f\u6709\u70b9\u70e6\uff0c\u4e0b\u6b21\u8981\u8bb0\u5f97\u6570\u7684\u8bfb\u8fb9\u53ea\u9700\u8bfb\u5165n-1\u6761\u8fb9\uff08\u4f4e\u7ea7\u9519\u8bef\uff09\n\n**\u4ee3\u7801\u7684\u5173\u952e\u90e8\u5206**\n\n\n```\ninline void dfs(int u,int fa) {\n\tint sum=0;\n\tfor(int i=first[u]; i; i=nxt[i]) {\n\t\tint v=go[i];\n\t\tif(v==fa)continue;\n\t\tdfs(v,u);\n\t\tsum+=f[v]+1;\n\t}\n  f[u]=max(sum-mid,0);\n\n}\n```\n\n\u5173\u4e8e\u8fd9\u4e2a\u65b9\u7a0b\u89e3\u91ca\u4e00\u4e0b\n\n\n```\nf[u]=max(sum-mid,0);\n```\n\n---\n\n\n\u6211\u4eec\u4e0d\u65ad\u641c\u7d22\u53bb\u8fb9\uff0c\u7136\u540e\u56de\u6eaf\u66f4\u65b0\u6bcf\u4e00\u4e2a\u9636\u6bb5\u9700\u8981\u88ab\u67d3\u8272\u7684\u6570\u91cf\uff1b\n\n\u5047\u8bbe\u9700\u8981\u88ab\u67d3\u8272\u7684\u8282\u70b9\u6570\u91cf\u4e0d\u8db3k\uff0c\u5373sum-mid<0,\u90a3\u6211\u4eec\u53d60\uff0c\u539f\u56e0\u662f\u6bcf\u6b21\u67d3\u8272\u7684\u673a\u4f1a\u662f\u4ece\u540e\u5f80\u524d\u63a8\u7684\uff0c\u5373\u4f7f\u4ecd\u7136\u6709\u67d3\u8272\u7684\u673a\u4f1a\u4e5f\u4e0d\u80fd\u66f4\u65b0\u524d\u9762\u7684\u72b6\u6001\uff1b\n\n\u800c\u5982\u679c\u9700\u8981\u67d3\u8272\u7684\u8282\u70b9\u6570\u91cf\u5927\u4e8ek\uff0c\u5373sum-mid>0\uff0c\u90a3\u4e48\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u7d2f\u52a0\u5230\u7236\u4eb2\u8282\u70b9\uff0c\u5728\u56de\u6eaf\u5230\u7236\u4eb2\u8282\u70b9\u7684\u65f6\u5019\u518d\u7edf\u4e00\u5904\u7406\uff0c\u56e0\u4e3a\u5728B\u70b9\u5728\u7236\u4eb2\u65f6\u662f\u53ef\u4ee5\u5bf9\u513f\u5b50\u8282\u70b9\u8fdb\u884c\u67d3\u8272\u7684\uff08\u524d\u63d0\u662fsum-mid>0\uff0c\u5373\u4ecd\u6709\u67d3\u8272\u6b21\u6570\uff09\uff0c\u6b64\u5904\u533a\u522b\u4e8e\u4e0a\u9762\u90a3\u79cd\u60c5\u51b5\uff1b\n\n\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u4e8c\u5206mid\n\n\u5982\u679cf[1]=0\uff0c\u663e\u7136\u662f\u5408\u6cd5\u7684\uff0c\u6211\u4eec\u5c31\u7f29\u5c0fmid\n\n\n\n\n**AC\u4ee3\u7801\u5982\u4e0b\uff1a**\n\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2000005;\nint first[N],nxt[N],go[N],tot,f[N],mid;\nvoid add(int x,int y) {\n\tnxt[++tot]=first[x];\n\tfirst[x]=tot;\n\tgo[tot]=y;\n}\ninline void dfs(int u,int fa) {\n\tint sum=0;\n\tfor(int i=first[u]; i; i=nxt[i]) {\n\t\tint v=go[i];\n\t\tif(v==fa)continue;\n\t\tdfs(v,u);\n\t\tsum+=f[v]+1;\n\t}\n\tf[u]=max(sum-mid,0);\n}\nint main() {\n\tint n;\n\tscanf(\"%d\",&n);\n\tif(n==1)printf(\"0\"),exit(0);\n\tfor(int i=1,x,y; i<n; i++) {\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tint l=1,r=1<<30,ans=0;\n\twhile (l<r) {\n\t\tmemset(f,0,sizeof(f));\n\t\tmid=(l+r)>>1;\n\t\tdfs(1,0);\n\t\tif (!f[1])r=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",r);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1568985112,
        "uid": 111289,
        "name": "Ryan_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3554 \u3010[POI2013]LUK-Triumphal arch\u3011"
    },
    {
        "content": "\u6b64\u9898\u7684\u7b54\u6848k\u5177\u6709\u53ef\u4e8c\u5206\u6027\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848k\uff0c\u7136\u540e\u8dd1\u4e00\u4e2a\u6811\u5f62DP\n\n\u4ee4$dp[i]$\u8868\u793a\u5230\u8282\u70b9$i$\u65f6\u9700\u8981\u518d\u591a\u67d3\u8272\u7684\u70b9\u6570\n\n\u90a3\u4e48\u6709$dp[i]=\\max(\\sum_{fa[j]=i} (dp[j]+1)-k,0)$\n\n\u82e5$dp[1]=0$\u5219\u7b54\u6848k\u53ef\u884c\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=1e5+5;\n\nint n,np;\nint h[MAXN],f[MAXN];\nstruct rpg{\n\tint li,nx;\n}a[MAXN<<1];\n\nvoid add(int ls,int nx)\n{\n\ta[++np]=(rpg){h[ls],nx};h[ls]=np;\n\ta[++np]=(rpg){h[nx],ls};h[nx]=np;\n}\n\nvoid dfs(int x,int fa,int mid)\n{\n\tint sum=0;f[x]=0;\n\tfor(int i=h[x];i;i=a[i].li){\n\t\tif(a[i].nx!=fa){\n\t\t\tdfs(a[i].nx,x,mid);\n\t\t\tsum+=f[a[i].nx]+1;\n\t\t}\n\t}f[x]=max(sum-mid,0);\n\treturn;\n}\n\nbool check(int mid)\n{\n\tint sum=0;f[1]=0;\n\tfor(int i=h[1];i;i=a[i].li){\n\t\tdfs(a[i].nx,1,mid);\n\t\tsum+=f[a[i].nx]+1;\n\t}f[1]=max(sum-mid,0);\n\treturn !f[1];\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);for(int i=1;i<n;++i){int x,y;scanf(\"%d%d\",&x,&y),add(x,y);}\n\tint l=0,r=n;\n\twhile(l<r){\n\t\tint mid=l+r>>1;\n\t\tif(check(mid)) r=mid;\n\t\telse l=mid+1;\n\t}printf(\"%d\\n\",l);\n\treturn 0;\n}\n```",
        "postTime": 1536549085,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3554 \u3010[POI2013]LUK-Triumphal arch\u3011"
    },
    {
        "content": "\u4ed4\u7ec6\u9605\u8bfb\u9898\u9762\u53ef\u4ee5\u53d1\u73b0 B \u53ea\u4f1a\u4ee5\u6700\u4f18\u7b56\u7565\u4ece\u4e0a\u5f80\u4e0b\u8d70\u3002\uff08\u5982\u679c\u6ca1\u53d1\u73b0\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u9898\u9762\uff08\uff1f\uff09\uff09\u6240\u4ee5\u67d3\u8272\u4e00\u5b9a\u662f\u4e00\u5c42\u5c42\u4ece\u4e0a\u5f80\u4e0b\u67d3\u3002\n\n\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u9898\u89c9\u5f97\u662f\u6c42\u4e00\u68f5\u6811\u4e2d\u513f\u5b50\u6700\u591a\u7684\u7ed3\u70b9\u7684\u513f\u5b50\u4e2a\u6570\uff0c\u4ea4\u4e0a\u53bb\u53d1\u73b0\u83b7\u5f97\u4e86 $30pts$ \u7684\u597d\u6210\u7ee9\u3002\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u89e3\u6cd5\u662f\u4e2a\u5b8c\u5168\u9519\u8bef\u7684\u89e3\u6cd5\uff0c\u80fd\u6df7\u4e09\u5341\u5206\u662f\u8981\u6012\u9a82\u51fa\u9898\u4eba\u7684\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u770b\u4e0b\u9762\u8fd9\u7ec4\u6570\u636e\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/udfil50g.png)\n\n\u7b54\u6848\u662f $2$\uff0c\u4f46\u662f\u5982\u679c\u6309\u7167\u4e0a\u9762\u7684\u89e3\u6cd5\u6c42\u51fa\u6765\u662f $3$\u3002\n\n\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u7b54\u6848\u662f\u600e\u4e48\u6765\u7684\u3002\u9996\u5148 A \u628a $2,3$ \u53f7\u7ed3\u70b9\u67d3\u8272\uff0cB \u8d70\u5411 $2$ \u53f7\u8282\u70b9\uff0cA \u628a $4,5$ \u53f7\u7ed3\u70b9\u67d3\u8272\uff0cA \u80dc\u5229\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u53e6\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u4e8b\uff1a\u7ed9\u6bcf\u4e00\u7ed3\u70b9\u7684\u513f\u5b50\u4eec\u67d3\u8272\u65f6**\u5982\u679c\u53ef\u67d3\u8272\u6570\u5927\u4e8e\u8fd9\u4e00\u7ed3\u70b9\u7684\u513f\u5b50\u6570\u5219\u8981\u7ee7\u7eed\u4e0b\u53bb\u7ed9\u513f\u5b50\u7684\u513f\u5b50\u67d3\u8272**\uff0c\u8fd9\u662f\u4e00\u4e2a\u867d\u7136\u5f88\u663e\u7136\u4f46\u662f\u5f88\u5bb9\u6613\u88ab\u5ffd\u7565\u7684\u4e8b\u60c5\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u4ece\u4e0b\u5f80\u4e0a\u7684\u6811\u5f62 dp \u6765\u5224\u65ad\u4e00\u4e2a $k$ \u662f\u5426\u53ef\u884c\uff1a\u8bbe $f_i$ \u8868\u793a $i$ \u7ed3\u70b9\u9700\u8981\u4e0a\u5c42\u7ed3\u70b9\u7684\u591a\u4f59\u67d3\u8272\u7684\u6570\u91cf\uff0c\u5219\u6709 $f_i=tot+\\Sigma f_j-k$\uff0c\u5176\u4e2d $tot$ \u8868\u793a\u4e00\u4e2a\u7ed3\u70b9\u7684\u513f\u5b50\u603b\u6570\u3002\n\n\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u4e00\u4e2a\u7ed3\u70b9\u9700\u8981\u67d3\u8272\u7684\u7ed3\u70b9\u5305\u62ec\u5b83\u81ea\u8eab\u7684\u513f\u5b50\u548c\u5b83\u7684\u5b50\u6811\u4e2d\u9700\u8981\u4e0a\u5c42\u591a\u4f59\u67d3\u8272\u7684\u7ed3\u70b9\u3002\u8fd9\u6837\u5982\u679c\u5bf9\u4e8e\u7ed3\u70b9 $i$ \u6709 $f_i\\leq0$ \u5219\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u5728\u67d3\u8272\u6570\u4e3a $k$ \u65f6\u53ef\u4ee5\u8ba9 A \u80dc\u5229\u3002\u6211\u4eec\u53ea\u9700\u8981\u5bf9 $1$ \u53f7\u7ed3\u70b9\u8fdb\u884c\u5224\u65ad\u5373\u53ef\u3002\n\n\u81f3\u4e8e $k$\uff0c\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0c\u4e0b\u754c\u4e3a $0$\uff08\u5982\u679c\u4f60\u83b7\u5f97\u4e86 $90pts$ \u7684\u597d\u6210\u7ee9\u5e76\u4e14 WA#2 \u90a3\u4e48\u8bf7\u68c0\u67e5\u4f60\u7684\u4e0b\u754c\u662f\u4e0d\u662f\u8bbe\u6210\u4e00\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u68f5\u6811\u53ea\u6709\u6839\u8282\u70b9\u5b83\u662f\u4e0d\u9700\u8981\u67d3\u8272\u7684\uff09\uff0c\u4e0a\u754c\u4e3a $n$\uff08\u663e\u7136 $k=n$ \u65f6\u4e00\u6b21\u67d3\u5b8c\u6574\u68f5\u6811\uff0cA \u4e00\u5b9a\u53ef\u4ee5\u8d62\uff09\u3002\n\nCode \n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\ninline int read() {\n\tint res=0,f=1; char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1; ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {res=res*10+ch-'0'; ch=getchar();}\n\treturn res*f;\n}\nconst int MAXN=300005;\nint n,ecnt,ans;\nint f[MAXN];\nint id[MAXN];\nint head[MAXN];\nint l,r,mid;\nstruct Edge{\n\tint next,to;\n}e[MAXN<<1];\ninline void add(int u,int v) {\n\te[++ecnt].next=head[u];\n\te[ecnt].to=v;\n\thead[u]=ecnt;\n}\ninline void dfs(int x,int fa) {\n\tint tot=0,cnt=0;\n\tfor(register int i=head[x];i;i=e[i].next) {\n\t\tif(e[i].to==fa) continue;\n\t\tdfs(e[i].to,x);\n\t\ttot++;\n\t\tcnt+=f[e[i].to];\n\t}\n\tf[x]=max(0,tot-mid+cnt);\n}\nsigned main() {\n\tn=read();\n\tfor(register int u,v,i=1;i<n;++i) {\n\t\tu=read(); v=read();\n\t\tadd(u,v); add(v,u);\n\t}\n\tl=0; r=n;\n\twhile(l<=r) {\n\t\tmid=(l+r)>>1;\n\t\tdfs(1,0);\n\t\tif(!f[1]) r=mid-1,ans=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1626793359,
        "uid": 149815,
        "name": "Isprime",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3554 \u3010[POI2013]LUK-Triumphal arch\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3554)\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u9898\u7684\u53ef\u884c\u65b9\u6848\u5177\u6709\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u7528 \u4e8c\u5206 + $\\mathcal O(n)$ check \u6765\u5bfb\u627e\u6700\u4f18\u7b54\u6848\n\n\u663e\u7136\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4ece\u6839\u5f80\u4e0b\u8d70\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u5c31\u662f\u4e0d\u9700\u8981\u8003\u8651\u56de\u5934  \n\u56e0\u4e3a\u5728\u56de\u6eaf\u7684\u65f6\u5019\u53ef\u4ee5\u201c\u65e0\u538b\u529b\u201d\u5730\u67d3\u8272\uff0c\u56de\u6eaf\u540e\u518d\u5f80\u4e0b\u8d70 \u80af\u5b9a\u6bd4 \u76f4\u63a5\u5f80\u4e0b\u8d70\u7684\u4ee3\u4ef7\u5c0f\u3002\u6240\u4ee5\uff0c\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u4e86\u6240\u6709\u76f4\u63a5\u5f80\u4e0b\u8d70\u7684\u4ee3\u4ef7\uff0c\u5c31\u5df2\u7ecf\u8986\u76d6\u4e86\u6240\u6709\u7684\u7b54\u6848\u3002\n\n\u8bbe $f_i$ \u8868\u793a $i$ \u7684\u5b50\u6811\u5185\uff08\u4e0d\u5305\u62ec $i$\uff09\u9700\u8981\u7956\u5148\u6765\u67d3\u8272\u7684\u8282\u70b9\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e9b\u8282\u70b9\u5728 B \u8d70\u5230 $i$ \u7684\u7956\u5148\u7684\u65f6\u5019\u5c31\u9700\u8981\u88ab\u67d3\u8272  \n$k$ \u4e3a\u5f53\u524d\u4e8c\u5206\u5230\u7684\uff0c\u4e00\u6b21\u64cd\u4f5c\u53ef\u4ee5\u67d3\u8272\u7684\u8282\u70b9\u4e2a\u6570\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a$f_x=\\lbrace\\sum f_y \\rbrace+d_x-k$  \n\u5176\u4e2d $d_x$ \u4e3a $x$ \u7684\u5b50\u8282\u70b9\u4e2a\u6570\uff0c$y$ \u4e3a $x$ \u7684\u513f\u5b50\n\n\u5728\u6c42\u51fa $f$ \u6570\u7ec4\u540e\uff0c\u5982\u679c $f_1=0$ \u8bf4\u660e\u53ef\u884c\uff0c\u5426\u5219\u4e0d\u53ef\u884c\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int Maxn=300010;\nconst int Maxm=Maxn<<1;\nint nxt[Maxm],to[Maxm];\nint head[Maxn],d[Maxn],f[Maxn];\nint n,val,ans,edgecnt;\ninline int read()\n{\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n    return s*w;\n}\ninline void add(int x,int y)\n{\n    ++edgecnt;\n    nxt[edgecnt]=head[x];\n    to[edgecnt]=y;\n    head[x]=edgecnt;\n}\nvoid dfs(int x,int fa)\n{\n    int tot=d[x]-val;\n    for(int i=head[x];i;i=nxt[i])\n    {\n        int y=to[i];\n        if(y==fa)continue;\n        dfs(y,x),tot+=f[y];\n    }\n    f[x]=max(0,tot);\n}\nbool check()\n{\n    memset(f,0,sizeof(f));\n    dfs(1,0);\n    return f[1]==0;\n}\nint main()\n{\n    // freopen(\"in.txt\",\"r\",stdin);\n    n=read();\n    for(int i=1;i<n;++i)\n    {\n        int x=read(),y=read();\n        add(x,y),add(y,x);\n        ++d[x],++d[y];\n    }\n    for(int i=2;i<=n;++i)\n    --d[i];\n    int l=0,r=n-1;\n    while(l<r)\n    {\n        int mid=(l+r)>>1;val=mid;\n        if(check())r=mid;\n        else l=mid+1;\n    }\n    printf(\"%d\\n\",l);\n    return 0;\n}\n```",
        "postTime": 1610423623,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3554 \u3010[POI2013]LUK-Triumphal arch\u3011"
    },
    {
        "content": "### [$\\texttt{POI-Triumphal arch}$](https://www.luogu.com.cn/problem/P3554)\n\n\u7531\u4e8e\u4e00\u65e6 B \u8fdb\u5165\u4e86\u4e00\u4e2a\u5b50\u6811\uff0c\u90a3\u4e48\u4ed6\u5c31\u4e0d\u4f1a\u51fa\u6765\uff08\u56e0\u4e3a\u4e0d\u4f1a\u514d\u8d39\u8d60\u9001 A \u4e00\u4e2a\u6d82\u8272\u7684\u673a\u4f1a\uff09\u3002\u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u4ecd\u7136\u9002\u7528\u548c\u5b50\u6811\u76f8\u5173\u7684\u6811\u5f62 $dp$\u3002\n\n\u6211\u4eec\u5bf9 $k$ \u8fdb\u884c\u4e8c\u5206\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u5982\u679c B \u8d70\u5230\u4e86 $u$\uff0c\u90a3\u4e48\u5728\u4e0b\u4e00\u6b65\u524d\u5fc5\u987b\u4fdd\u8bc1 $u$ \u7684\u6240\u6709\u513f\u5b50\u8282\u70b9\u90fd\u88ab\u67d3\u8272\u3002\u5b8c\u6210\u67d3\u8272\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\u7b2c\u4e00\u79cd\uff0c\u5728\u4e0b\u4e00\u6b65\u524d\u8d76\u5feb\u628a\u8fd9\u51e0\u4e2a\u70b9\u5168\u90e8\u67d3\u4e0a\uff1b\u7b2c\u4e8c\u79cd\uff0c\u5728 B \u8d70\u5230 $u$ \u524d\u5c31\u67d3\u4e0a\u8fd9\u91cc\u7684\u4e00\u4e9b\u70b9\u3002\u5f53\u7136\uff0c\u5982\u679c\u53ef\u4ee5\u9009\u62e9\u7b2c\u4e00\u79cd\uff0c\u90a3\u4e48\u5c31\u6ca1\u6709\u5fc5\u8981\u9009\u62e9\u7b2c\u4e8c\u79cd\uff0c\u6211\u4eec\u603b\u662f\u5e0c\u671b\u53ef\u4ee5\u72ec\u7acb\u5b8c\u6210\u4efb\u52a1\u7136\u540e\u9020\u798f\u540e\u4eba\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7acb\u72b6\u6001\uff0c\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u9700\u8981\u81ea\u5df1\u7684\u7956\u5148\u63d0\u524d\u67d3\u8272\u591a\u5c11\u8282\u70b9\u624d\u80fd\u8986\u76d6\u4f4f\u6574\u4e2a\u5b50\u6811\u3002\n\n\u6700\u7ec8\u8981\u6c42\u6839\u8282\u70b9\u4e3a $0$\u3002\n\n\u5bf9\u4e8e\u8f6c\u79fb\uff0c\u4e00\u4e2a\u8282\u70b9\u9700\u8981\u7684\uff0c\u5373\u7ed9\u81ea\u5df1\u7684\u513f\u5b50\u8282\u70b9\u67d3\u8272\u6240\u9700\u8981\u7684\u548c\u6765\u81ea\u81ea\u5df1\u513f\u5b50\u5b50\u6811\u7684\u6c42\u52a9\u3002\u56e0\u4e3a\u513f\u5b50\u6ca1\u6cd5\u5e2e\u52a9\u7956\u5148\uff0c\u6240\u4ee5\u5982\u679c\u53d1\u73b0\u81ea\u5df1\u8fd8\u6709\u5f88\u591a\u7a7a\u4f59\u7684\u67d3\u8272\u673a\u4f1a\u6ca1\u7528\u6216\u8005\u6b63\u597d\u7528\u5b8c\uff0c\u90a3\u4e48 $f_u=0$\n\n\u8981\u6ce8\u610f $n=1$ \u65f6\u9700\u8981\u7279\u5224\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=300009;\nvector<int>e[N];\nint f[N];\nint dp(int u,int fa,int k) {\n\tfor(int i=0,v;i<e[u].size();i++)\n\t\tif((v=e[u][i])!=fa) {\n\t\t\tdp(v,u,k);\n\t\t\tf[u]+=(1+f[v]);\n\t\t}\n\tf[u]=max(0,f[u]-k);\n}\nint main() {\n\tint n; scanf(\"%d\",&n);\n\tif(n==1) return puts(\"0\"),0;\n\tfor(int i=1,u,v;i<n;i++) \n\t\tscanf(\"%d%d\",&u,&v),e[u].push_back(v),e[v].push_back(u);\n\tint l=1,r=n-1,k,ans;\n\twhile(l<=r) {\n\t\tk=(l+r)/2;\n\t\tmemset(f,0,sizeof(f)), dp(1,0,k);\n\t\tif(f[1]==0) r=k-1,ans=k;\n\t\telse l=k+1;\n\t} \n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1588914372,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3554 \u3010[POI2013]LUK-Triumphal arch\u3011"
    },
    {
        "content": "\u4e8c\u5206\u7b54\u6848+\u6811\u5f62dp\n\n\u5bf9\u4e8edp\u7684\u8fc7\u7a0b\n\ndp[i]\u8868\u793a\u5f53B\u5728\u70b9i\u65f6\uff0cA\u8981\u63d0\u524d\u67d3\u8272i\u7684\u76f4\u63a5\u513f\u5b50\u4e2d\u7684\u4e2a\u6570\n\nson[i]\u8868\u793ai\u7684\u76f4\u63a5\u513f\u5b50\u4e2a\u6570,j\u662fi\u7684\u76f4\u63a5\u513f\u5b50\n\n\u5219$dp[i]=max(\\sum_{j}dp[j]+son[i]-mid,0)$\n\n\u5982\u679cdp[1]==0 \u6ee1\u8db3\u6761\u4ef6\n\n\u7ee7\u7eed\u4e8c\u5206",
        "postTime": 1544082302,
        "uid": 40780,
        "name": "Forever_Lin",
        "ccfLevel": 0,
        "title": "[POI2013]LUK-Triumphal arch"
    },
    {
        "content": "# \u601d\u8def\n\u9996\u5148\u6211\u4eec\u77e5\u9053B\u4e00\u5b9a\u4e0d\u4f1a\u8d70\u56de\u5934\u8def,\u4ed6\u53ea\u4f1a\u671d\u7740\u53f6\u8282\u70b9\u7684\u65b9\u5411\u8d70\uff0c\u56e0\u4e3a\u4ed6\u5f80\u56de\u8d70\u4e00\u5b9a\u6ca1\u6709\u4ed6\u4e00\u5f00\u59cb\u5c31\u9009\u62e9\u5f80\u56de\u7684\u53e6\u4e00\u6761\u8def\u8d70\u66f4\u4f18\uff0c\u53ea\u4f1a\u8ba9A\u591a\u67d3\u51e0\u4e2a\u9ed1\u70b9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5f53B\u8d70\u5230\u67d0\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6d82\u8be5\u7ed3\u70b9\u7684\u5b50\u6811\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053B\u5e76\u4e0d\u4f1a\u56de\u5934\uff0c\u6240\u4ee5\u8be5\u5b50\u6811\u5916\u7684\u70b9\u4ed6\u4e00\u5b9a\u662f\u8d70\u4e0d\u5230\u7684\u3002\u53ea\u8981\u6211\u4eec\u5c06\u5176\u903c\u6b7b\uff08\u8ba9\u4ed6\u8d70\u5230\u4e00\u4e2a\u6d82\u9ed1\u7684\u53f6\u5b50\u8282\u70b9\u4e0a\u53bb\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6162\u6162\u6765\u6d82\u5176\u4ed6\u7684\u70b9\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u82e5\u76f4\u63a5\u6c42\u6700\u5c0f\u503c\u4e00\u5b9a\u5f88\u56f0\u96be\uff0c\u53ef\u4ee5\u5229\u7528\u4e8c\u5206\uff0c\u5c06\u6700\u4f18\u6027\u95ee\u9898\u53d8\u4e3a\u5b58\u5728\u6027\u95ee\u9898\u3002\n\n\u6211\u4eec\u8003\u8651A\u5931\u8d25\u7684\u539f\u56e0\uff0c\u4e00\u5b9a\u662fB\u8d70\u5230\u4e86\u67d0\u4e00\u4e2a\u8282\u70b9\uff0c\u800c\u8fd9\u6b21\u6d82\u8272\u65e0\u6cd5\u5c06\u5176\u6240\u6709\u7684\u5b50\u8282\u70b9\u5168\u90e8\u67d3\u9ed1\uff08\u56e0\u4e3aB\u4e00\u5b9a\u4f1a\u627e\u90a3\u4e2a\u767d\u70b9\u8d70\uff0c\u7136\u540e\u83b7\u80dc\uff09\uff0c\u90a3\u8fd9\u662f\u5426\u610f\u5473\u7740\u6211\u4eec\u53ea\u8981\u8ba9 $k$ \u5927\u4e8e\u513f\u5b50\u6700\u591a\u7684\u8282\u70b9\u7684\u513f\u5b50\u4e2a\u6570\u5c31\u884c\u4e86\u5462\uff1f\u5176\u5b9e\u5e76\u4e0d\u662f\u7684\u3002\u56e0\u4e3a\u4e4b\u524d\u6d82\u8272\u65f6\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e00\u6b21\u6d82\u8272\u90fd\u4e00\u5b9a\u4f1a\u5c06\u6240\u6709\u7684\u6d82\u8272\u6b21\u6570\u5168\u90e8\u7528\u5b8c\uff0c\u4f1a\u7559\u4e00\u4e9b\u6765\u8ba9\u6211\u4eec\u63d0\u524d\u6d82\u4ee5\u540e\u7684\u70b9\uff0c\u8ba9\u672c\u6765\u65e0\u6cd5\u89e3\u51b3\u7684\u70b9\u4e5f\u80fd\u5f97\u5230\u89e3\u51b3\u3002\u6709\u4f4d\u5927\u4f6c\u7684\u7528\u8bcd\u5f88\u597d\uff0c\u8fd9\u53eb\u505a\u201c\u672a\u96e8\u7ef8\u7f2a\u201d\u3002\n\n\u90a3\u6211\u4eec\u8be5\u5982\u4f55\u5b89\u6392\u8fd9\u4e9b\u673a\u4f1a\u53bb\u5c3d\u53ef\u80fd\u7684\u4fdd\u8bc1\u83b7\u80dc\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u4ee4\u6570\u7ec4 $f[i]$ \u8868\u793a $i$ \u53f7\u70b9\u6240\u9700\u8981\u7684\u63d0\u524d\u6d82\u8272\u7684\u6b21\u6570\uff0c\u5219\u6709\u4ee5\u4e0b\u8f6c\u79fb\u5f0f\uff1a\n$$\nf[i]=\\max(0,child[i]+\\sum{f[v[i]]}-k)\n$$\n\n\u4e0a\u5f0f\u4e2d $child[i]$ \u6307\u8282\u70b9 $i$ \u7684\u513f\u5b50\u4e2a\u6570\u3002$v[i]$ \u6307 $i$ \u7684\u6240\u6709\u513f\u5b50\u3002\n\n\u7b80\u5355\u7406\u89e3\u4e00\u4e0b\uff0c\u5c31\u662f\u5c06\u6bcf\u4e2a\u8282\u70b9\u6d82\u8272\u540e\u591a\u4f59\u7684\u6d82\u8272\u673a\u4f1a\u7ed9\u4ed6\u7684\u513f\u5b50\u3002\n\n\u6ce8\u610f\uff0c\u6709\u4eba\u53ef\u80fd\u4f1a\u4f1a\u95ee\uff08~~\u8fd8\u662f\u8bf4\u53ea\u6709\u6211\u4f1a\u4e0d\u77e5\u9053~~\uff09\uff0cB\u5411\u4e0b\u8d70\u540e\u4e0d\u5c31\u4e0d\u7528\u518d\u8003\u8651\u5176\u4ed6\u7684\u5b50\u6811\u4e86\u5417\uff0c\u4e3a\u4ec0\u4e48\u662f\u53d6\u6240\u6709\u7684\u548c\u5462\uff1f\u56e0\u4e3a\u5728B\u8d70\u8fd9\u4e00\u6b65\u7684\u65f6\u5019\uff0c\u4ed6\u4f1a\u770b\u4f60\u90a3\u4e2a\u5b50\u6811\u7684\u9632\u5b88\u6700\u8584\u5f31\uff08\u6d82\u8272\u5c11\uff09\u7684\u53bb\u8d70\uff0c\u5982\u679c\u4f60\u53ea\u8ba9\u4e00\u4e2a\u5b50\u6811\u7edd\u5bf9\u5b89\u5168\uff0c\u4ed6\u8d70\u5176\u5b83\u7684\u8def\u5c31\u4f1a\u5bfc\u81f4A\u8f93\u6389\u3002\u6728\u6876\u539f\u7406\u5927\u5bb6\u90fd\u61c2\u3002\n\n# Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nint v[300001];\nint nxt[300001];\nint d[300001];\nint children[300001];\nint tot;\ninline void add(int x,int y)\n{\n\tv[++tot]=y;\n\tnxt[tot]=d[x];\n\td[x]=tot;\n\treturn ;\n}\nint f[300001];\nint mid;\ninline void get_children(int now,int last)\n{\n\tfor(int i=d[now];i;i=nxt[i])\n\t{\n\t\tif(v[i]!=last)\n\t\t{\n\t\t\tget_children(v[i],now);\n\t\t\tchildren[now]++;\n\t\t}\n\t}\n\treturn ;\n}\ninline void dfs(int now,int last)\n{\n\tfor(int i=d[now];i;i=nxt[i])\n\t{\n\t\tif(v[i]!=last)\n\t\t{\n\t\t\tdfs(v[i],now);\n\t\t\tf[now]+=f[v[i]];\n\t\t}\n\t}\n\tf[now]=max(f[now]+children[now]-mid,0);\n\treturn ;\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tget_children(1,-1);\n\tint left=0,right=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tright=max(right,children[i]);\n\t}\n\twhile(left<right)\n\t{\n\t\tmid=(left+right)>>1;\n\t\tmemset(f,0,sizeof(f));\n\t\tdfs(1,-1);\n\t\tif(f[1])\n\t\t{\n\t\t    left=mid+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tright=mid;\n\t\t}\n\t}\n\tcout<<left<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1615218812,
        "uid": 73711,
        "name": "HC20050615",
        "ccfLevel": 6,
        "title": "P3554\u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u7ffb\u8bd1\u5f97\u5df2\u7ecf\u5f88\u6e05\u6670\u4e86\u3002\n\n\u6c42\u201c\u8ba9 A \u83b7\u80dc\u7684\u6700\u5c0f\u7684 $k$ \u201d\uff0c\u5bb9\u6613\u60f3\u5230**\u4e8c\u5206\u7b54\u6848**\uff0c\u518d\u7531 $n$ \u7684\u8303\u56f4\u53ef\u4ee5\u8fdb\u4e00\u6b65\u786e\u8ba4\u4e3a $O(n\\log n)$ \u7684\u7b97\u6cd5\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u89e3\u51b3\u5224\u5b9a\u7684\u95ee\u9898\u4e86\u3002\n\n\u8003\u8651\u8fd0\u7528\u8d2a\u5fc3\u601d\u60f3\u626e\u6f14 A \u548c B:\n\n1. B \u5728\u79fb\u52a8\u7684\u65f6\u5019**\u4e00\u5b9a\u4e0d\u4f1a\u8d70\u56de\u5934\u8def**\uff0c\u56e0\u4e3a B \u8d70\u56de\u5934\u8def\u8bf4\u660e\u4e4b\u524d\u51b3\u7b56\u4e0d\u662f\u6700\u4f73\u51b3\u7b56\uff0c\u4e00\u5b9a\u5b58\u5728\u6700\u4f73\u51b3\u7b56\u80fd\u66ff\u6362\u73b0\u6709\u51b3\u7b56\uff08\u697c\u4e0a\u51e0\u7bc7\u4e5f\u90fd\u6709\u63d0\u5230\uff09\uff1b\n\n2. A \u4e00\u5b9a\u4f1a\u4f18\u5148\u8003\u8651\u628a B \u6240\u5728\u8282\u70b9\u7684\u513f\u5b50\u4eec\u6d82\u9ed1\uff08\u56e0\u4e3a\u5982\u679c\u513f\u5b50\u4eec\u6709\u6ca1\u6d82\u9ed1\u7684 B \u63a5\u7740\u5c31\u80fd\u8e29\u4e0a\uff09\uff0c\u7136\u540e\u591a\u4f59\u7684\u201c\u989c\u6599\u201d\u7559\u7ed9 B \u6240\u5728\u8282\u70b9\u7684\u513f\u5b50\u7684\u513f\u5b50\uff0c\u4ee5\u6b64\u7c7b\u63a8\u2026\u2026\u53d1\u73b0\u6211\u4eec\u53ea\u5173\u5fc3\u6bcf\u4e2a\u5b50\u6811\u9700\u8981\u7236\u4eb2\u7684\u591a\u5c11\u652f\u63f4\uff0c\u8fd9\u4e2a\u4fe1\u606f\u662f\u53ef\u4ee5\u81ea\u4f4e\u5411\u4e0a\u9012\u63a8\u7684\uff0c\u6ee1\u8db3\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u6811\u5f62 DP \u5728 $O(n)$ \u65f6\u95f4\u5185\u5224\u5b9a\u3002\n\n\u8bf4\u4e00\u4e0b\u7a0b\u5e8f\u5b9e\u73b0\u7684\u4e3b\u8981\u5751\u70b9\uff1a\n\n1. \u4e8c\u5206\u7b54\u6848\u65f6\u8981\u6ce8\u610f $l$ \u548c $r$ \u7684\u5947\u5076\u6027\u95ee\u9898\uff0c\u5426\u5219\u5bb9\u6613\u5199\u6210\u6b7b\u5faa\u73af\uff1b\n\n2. \u5982\u679c\u4e00\u4e2a\u5b50\u6811\u6240\u9700\u7684\u652f\u63f4\u5c0f\u4e8e $0$\uff0c\u5373\u5b50\u6811\u6709\u591a\u4f59\u7684\u989c\u6599\uff0c\u76f4\u63a5\u6254\u6389\uff0c\u8be5\u5b50\u6811\u7684 $f$ \u503c\u8bbe\u6210 $0$\uff0c\u56e0\u4e3a\u513f\u5b50\u4e0d\u80fd\u652f\u63f4\u7236\u4eb2\uff01\n\n3. $1$ \u53f7\u6839\u8282\u70b9\u5df2\u7ecf\u88ab\u6d82\u9ed1\uff1b\n\n4. \u6ce8\u610f\u4e8c\u5206\u8981\u5de6\u5f00\u53f3\u95ed\uff08\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u5c3d\u91cf\u7f29\u5c0f $k$\uff09\uff1b\n\n5. \u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\u8fb9\u6570\u7ec4\u8981\u5f00 $2$ \u500d\u3002\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n\n#define maxn 300005\n#define INF 0x3f3f3f3f\n\nusing namespace std;\n\nint n,m;\n\nint cnt,head[maxn],nxt[maxn<<1],to[maxn<<1];\nint ans;\nint f[maxn];\n\ninline void add(int u,int v)\n{\n\tnxt[++cnt]=head[u];\n\tto[cnt]=v;\n\thead[u]=cnt;\n}\n\ninline void dp(int x,int fa,int k)\n{\n\tf[x]=-k;\n\tint cnt=0;\n\tfor(int e=head[x];e;e=nxt[e]){\n\t\tint y=to[e];\n\t\tif(y==fa) continue;\n\t\tcnt++;\n\t\tdp(y,x,k);\n\t\tf[x]+=f[y];\n\t}\n\tf[x]+=cnt;\n\tf[x]=max(0,f[x]);\n}\n\ninline bool check(int k)\n{\n\tdp(1,0,k);\n\treturn f[1]<=0;\n}\n\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n-1;i++){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tadd(u,v),add(v,u);\n\t}\n\tint l=1,r=n-1;\n\twhile(l<r){\n\t\tint mid=l+r>>1;\n\t\tif(check(mid)) r=mid;\n\t\telse l=mid+1;\n\t}\n\tcout<<r<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1626007634,
        "uid": 153139,
        "name": "\u98ce\u7fbd\u8dc3",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3554 [POI2013]LUK-Triumphal arch"
    },
    {
        "content": "# LUK-Triumphal arch\n\n~~(\u5b66\u957f\u63a8\u8350\u7684\uff0c\u8bf4\u662f\u597d\u6b3a\u8d1f\u7684\u9898)~~\n\n\u9996\u5148\uff0c\u7b54\u6848$k$\u5177\u6709\u5355\u8c03\u6027\uff0c $k$\u8d8a\u5927, \u6b63\u786e\u7684\u53ef\u80fd\u6027\u8d8a\u5927\uff0c\u6240\u4ee5\u8003\u8651\u4e8c\u5206$k$.\n\n\u7136\u540e\uff0c\u7528\u6811\u5f62DP\u8fdb\u884c\u68c0\u67e5\u3002\n\n1. \u4e00\u5b9a\u8981\u628a$B$ \u6240\u5728\u8282\u70b9\u7684\u6240\u6709\u513f\u5b50\u90fd\u6d82\u4e0a\u8272\u3002\u4f46\u662f\u6709\u65f6\u53ef\u80fd\u65e0\u6cd5\u4e00\u6b21\u8ba9\u8be5\u8282\u70b9\u7684\u513f\u5b50\u5168\u90fd\u6d82\u9ed1\uff0c\u6240\u4ee5\u53ef\u4ee5\u63d0\u524d\u5c06\u90e8\u5206\u70b9\u6d82\u9ed1\u3002\n2. $B$\u4e00\u5b9a\u4e0d\u4f1a\u8d70\u56de\u5934\u8def\uff0c\u7b49\u4e8e\u767d\u7ed9\u4e86$A$\u6d82\u8272\u7684\u673a\u4f1a\u3002\n\n$f[i]$\u8868\u793a\u5728$i$\u7684\u5b50\u6811\u4e2d\uff08\u4e0d\u5305\u62ec$i$\uff09\uff0c\u67d3\u8272$k$\u4e2a\u540e\u8fd8\u9700\u8981\u7684\u67d3\u8272\u6b21\u6570\u3002\n\n$son[i]$\u8868\u793a$i$\u70b9\u513f\u5b50\u7684\u4e2a\u6570\uff0c$sum$\u8868\u793a$f[i$ \u7684\u5b50\u8282\u70b9 $]$ \u7684\u548c\u3002\n\n$f[i] = max(0, sum + son[i] - k)$\n\n\u5bf9\u4e8e\u6bcf\u6b21\u4e8c\u5206$k$\u503c\uff0c\u8fdb\u884c\u4e00\u6b21DP\uff0c\u5982\u679c$f[1] <= 0$,\u8bf4\u660e\u7b54\u6848\u53ef\u884c\u3002\n```c\n#include <cstdio>\n#include <iostream>\n#define orz cout << \"AK IOI\" <<\"\\n\"\n\nusing namespace std;\nconst int maxn = 3e5 + 10;\n\ninline int read()\n{\n\tint x = 0, f = 1;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9') {if(ch == '-') f = -1; ch = getchar();}\n\twhile (ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48);ch = getchar();}\n\treturn x * f;\n}\nint n;\nstruct node{\n\tint u, v, nxt;\n}e[maxn << 1];\nint js, head[maxn];\nvoid add(int u, int v)\n{\n\te[++js] = (node){u, v, head[u]};\n\thead[u] = js;\n}\nint son[maxn], f[maxn];\nvoid dfs(int u, int fa)\n{\n\tfor(int i = head[u]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].v;\n\t\tif(v == fa) continue;\n\t\tson[u]++;\n\t\tdfs(v, u);\n\t}\n}\nvoid dfs2(int u, int fa, int mid)\n{\n\tf[u] = son[u] - mid;\n\tfor(int i = head[u]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].v;\n\t\tif(v == fa) continue;\n\t\tdfs2(v, u, mid);\n\t\tif(f[v] > 0) f[u] += f[v];\n\t}\n}\nint main()\n{\n    //freopen(\".in\",\"r\",stdin); \n    //freopen(\".out\",\"w\",stdout);\n    n = read();\n    for(int i = 1; i < n; i++)\n    {\n    \tint u = read(), v = read();\n    \tadd(u, v), add(v, u);\n\t}\n\tdfs(1, 0);\n\tint l = son[1], r = 0, ans;\n\tfor(int i = 1; i <= n; i++) r = max(r, son[i]);\n\twhile(l <= r)\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tdfs2(1, 0, mid);\n\t\tif(f[1] <= 0) ans = mid, r = mid - 1;\n\t\telse l = mid + 1;\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1619343553,
        "uid": 174685,
        "name": "\u7a0b\u95e8\u7acb\u96ea",
        "ccfLevel": 4,
        "title": "LUK-Triumphal arch \u9898\u89e3"
    },
    {
        "content": "## \u5206\u6790\n\n\u5bf9\u4e8e $A$ \u6765\u8bf4\uff0c\u6700\u574f\u60c5\u51b5\u5373 $B$ \u4e00\u8def\u8d70\u5230\u4ed6\u6700\u4e0d\u597d\u62e6\u4e0b\u7684\u53f6\u5b50\u7ed3\u70b9\uff0c\u56e0\u4e3a $B$ \u4e0d\u53ef\u80fd\u5f80\u56de\u8d70\uff0c\u5426\u5219\u5c31\u6d6a\u8d39\u4e86\uff0c\u4efb $A$ \u5bb0\u5272\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u6765\u8bf4\uff0c $A$ \u9700\u8981\u786e\u4fdd\u4e24\u4e2a\u4e8b\u60c5\uff0c\u4e00\u4e2a\u662f\u4fdd\u4f4f\u5b83\u7684\u6240\u6709\u5b50\u8282\u70b9\uff0c\u4e8c\u662f\u7528\u5269\u4f59\u7684\u529b\u91cf\u53bb\u63d0\u524d\u5904\u7406\u5b83\u7684\u540e\u4ee3\u4eec\u7684\u95ee\u9898\u3002\u6613\u5f97\u8fd9\u662f\u4e00\u4e2a\u6811\u5f62 $DP$ \uff0c\u800c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u5217\u4e3e $A$ \u7684\u529b\u91cf\uff0c\u7136\u540e\u7528\u5b83\u53bb\u89e3\u51b3\u95ee\u9898\uff0c\u5224\u65ad\u662f\u5426\u80fd\u5904\u7406\u3002\n\n\u5bf9\u4e8e $dp$ \u7684\u8f6c\u79fb\u5f0f\uff0c\u6211\u4eec\u901a\u8fc7\u4e0a\u8ff0\u5206\u6790\u53ef\u4ee5\u5f97\u51fa\u5bf9\u4e8e\u67d0\u4e2a\u8282\u70b9\uff0c\u5b83\u5bf9\u7956\u5148\u4eec\u53ea\u6709\u9700\u8981\u5206\u62c5\u548c\u4e0d\u9700\u8981\u4e24\u79cd\u72b6\u6001\uff0c\u4e0d\u4f1a\u53bb\u5e2e\u7956\u5148\u5206\u62c5\uff0c\u56e0\u6b64 $dp$ \u503c\u8981\u4e48\u4e3a0\uff0c\u8981\u4e48\u4e3a\u5b83\u9700\u8981\u7956\u5148\u5e2e\u5fd9\u5206\u62c5\u7684\u529b\u91cf\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6838\u5fc3\u8f6c\u79fb\u5f0f\u3002\n\n```\nsum+=f[v]+1;\n\nf[u]=max(0,sum-mid);\n```\n\n\u6709\u4e86\u8fd9\u4e2a\uff0c\u6700\u540e\u53ea\u8981\u5f97\u5230 $f_1=0$ \uff0c\u5373\u6839\u8282\u70b9\u6709\u8be5\u6761\u4ef6\u5c31\u80fd\u5b8c\u7f8e\u5730\u5904\u7406\u6240\u6709\u8282\u70b9\u7684\u95ee\u9898\uff0c\u4e0d\u9700\u8981\u67d0\u4e2a\u795e\u79d8\u529b\u91cf\u5728\u5e2e\u6839\u8282\u70b9\u5206\u62c5\uff0c\u8bf4\u660e $mid$ \u53ef\u884c\uff0c\u5b58\u5165 $ans$ \u5e76\u66f4\u65b0 $right$ \uff0c\u67e5\u627e\u66f4\u5c0f\u7b54\u6848\uff0c\u5426\u5219\u66f4\u65b0 $left$ \uff0c\u4e0d\u65ad\u7f29\u77ed\uff0c\u5f97\u51fa\u7b54\u6848\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,f[300001],le,ri,mid,ans,head[300001],tot;\nstruct node{//\u90bb\u63a5\u8868 \n\tint to,next;\n}a[600001];\nvoid check(int u,int fr,int k){//\u6df1\u641c \n\tint sum=0;\n\tfor(int i=head[u];i;i=a[i].next){\n\t\tint v=a[i].to;\n\t\tif(v==fr)continue;//\u5224\u65ad\u7236\u8282\u70b9 \n\t\tcheck(v,u,k);\n\t\tsum+=f[v]+1;//\u67d3\u8272\u5b50\u8282\u70b9\uff0c\u5e76\u5e2e\u5fd9\u5206\u62c5 \n\t}\n\tf[u]=max(0,sum-k);//\u5982\u679c\u80fd\u529b\u8d85\u51fa\u9700\u8981\uff0c\u53ea\u8bf4\u660e\u4e0d\u9700\u8981\u7956\u5148\u5e2e\u5fd9\u5206\u62c5\uff0c\u65e0\u6cd5\u505a\u51fa\u66f4\u591a\u8d21\u732e \n}\nvoid read(int &res){\n\tres=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9'){res=(res<<1)+(res<<3)+c-48;c=getchar();}\n}\nvoid add(int q,int m){\n\ta[++tot].to=m;\n\ta[tot].next=head[q];\n\thead[q]=tot;\n}\nint main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tcin>>n;\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tread(x);read(y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tle=0;ri=n;\n\twhile(le<=ri){\n\t\tint mid=(le+ri)>>1;\n\t\tcheck(1,0,mid);\n\t\tif(f[1]==0){//\u53ef\u884c\uff0c\u66f4\u65b0\u7b54\u6848 \n\t\t\tans=mid;\n\t\t\tri=mid-1;\n\t\t}\n\t\telse le=mid+1;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1614000270,
        "uid": 166410,
        "name": "\u6f20\u5bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3554 [POI2013]LUK-Triumphal arch"
    },
    {
        "content": "\u9996\u5148\u5f88\u597d\u60f3\u5230\u7684\u4e00\u70b9\u662f\uff0c\u5982\u679c $k$ \u6ee1\u8db3\u8981\u6c42\uff0c\u90a3\u4e48 $k+1$ \u4e00\u5b9a\u4e5f\u6ee1\u8db3\u8981\u6c42\u3002  \n\u4e8e\u662f\u53ef\u4ee5\u7528\u4e8c\u5206\u7b54\u6848\u6c42\u89e3\u3002  \n\n\u6c42\u4e00\u4e2a\u7b54\u6848 $k$ \u662f\u5426\u53ef\u884c\u9700\u8981\u6811\u5f62DP\u6765\u89e3\u51b3\u3002\n\n\u9996\u5148\u8981\u77e5\u9053\u4e24\u70b9\uff1a\n\n- $A$ \u6bcf\u6b21\u90fd\u8981\u628a $B$ \u5f53\u524d\u8282\u70b9\u7684\u513f\u5b50\u90fd\u67d3\u6389\uff0c\u5426\u5219 $B$ \u627e\u4e00\u4e2a\u767d\u8272\u7684\u513f\u5b50\u5c31\u83b7\u80dc\u4e86\n- $B$ \u4e0d\u4f1a\u8d70\u56de\u5934\u8def\uff0c\u56e0\u4e3a\u8d70\u56de\u5934\u8def\u76f8\u5f53\u4e8e\u5565\u90fd\u6ca1\u5e72\u8fd8\u8ba9 $A$ \u591a\u67d3\u4e86\u4e00\u6b21\u8272\n\n\u8bbe $f_i$ \u8868\u793a $B$ \u5728 $i$ \u7684\u5b50\u6811\u4e2d\uff08\u4e0d\u5305\u62ec $i$\uff09\uff0c\u5f53\u524d\u67d3\u5b8c\u540e\u5269\u4e0b\u7684\u672a\u88ab\u67d3\u8272\u7684\u70b9\u7684\u4e2a\u6570\u3002  \n\u4e3a\u4ec0\u4e48\u4e0d\u5305\u62ec $i$ \u5462\uff1f\u56e0\u4e3a $B$ \u6bcf\u6b21\u90fd\u5fc5\u987b\u8d70\u4e00\u6b65\uff0c\u5c31\u7b97\u5b83\u5728\u70b9 $i$\uff0c\u8d70\u5b8c\u4e00\u6b65\u4e5f\u4f1a\u5230\u5b83\u7684\u5b50\u6811\u4e2d\u3002  \n\u53ef\u4ee5\u63a8\u51fa  \n$$f_i=max(0,(\\sum f_j+1)-k)$$  \n\u5176\u4e2d $j$ \u8868\u793a $i$ \u7684\u5b50\u8282\u70b9\u3002  \n\n\u89e3\u91ca\u4e00\u4e0b\uff1a\u672a\u88ab\u67d3\u8272\u7684\u70b9\u7684\u4e2a\u6570\u81ea\u7136\u662f\u5176\u6240\u6709\u5b50\u6811\u672a\u88ab\u67d3\u8272\u7684\u70b9\u7684\u603b\u548c\uff0c\u56e0\u4e3a $f_j$ \u4e2d\u672a\u5305\u542b $j$\uff0c\u6240\u4ee5\u6709\u4e2a $+1$\u3002\u7136\u540e\uff0c\u6211\u4eec\u518d\u7528\u4e00\u6b21\u67d3\u8272\uff0c\u5c31\u662f $-k$\u3002\u8fd9\u65f6\uff0c\u5982\u679c\u90fd\u67d3\u5b8c\u4e86\uff0c\u751a\u81f3\u8fd8\u4f1a\u591a\u4e00\u4e9b\u70b9\uff08\u4e5f\u5c31\u662f\u5f53\u524d\u67d3\u8272\u5269\u4e0b\u7684\u70b9\u4e0d\u8db3 $k$ \u4e2a\uff09\uff0c$f_i$ \u5c31\u4f1a\u53d8\u4e3a\u8d1f\u6570\uff0c\u6b64\u65f6\u5e94\u8be5\u8ba9\u5b83\u53d8\u6210 $0$\uff0c\u9632\u6b62\u5f71\u54cd\u540e\u9762\u7684\u7b54\u6848\u3002\n\n\u5982\u679c\u8fd9\u4e2a $k$ \u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u6700\u540e $f_1$ \u5c31\u4f1a\u53d8\u6210 $0$\u3002\n\n**code:**\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,l=1,r,mid,f[300005];\nstruct graph\n{\n\tint tot;\n\tint hd[300005];\n\tint nxt[600005],to[600005];\n\tvoid add(int u,int v)\n\t{\n\t\ttot++;\n\t\tnxt[tot]=hd[u];\n\t\thd[u]=tot;\n\t\tto[tot]=v;\n\t\treturn ;\n\t}\n}g;\nvoid dfs(int now,int fa)\n{\n\tf[now]=0;//\u6ce8\u610f\u521d\u59cb\u5316\uff01\n\tfor(int i=g.hd[now];i;i=g.nxt[i])\n\t\tif(g.to[i]!=fa)\n\t\t{\n\t\t\tdfs(g.to[i],now);\n\t\t\tf[now]+=f[g.to[i]]+1;\n\t\t}\n\tf[now]-=mid;\n\tif(f[now]<0) f[now]=0;\n\treturn ;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tg.add(u,v);\n\t\tg.add(v,u);\n\t}\n\tr=n-1;//\u6bcf\u6b21B\u5fc5\u5b9a\u8981\u8d70\u4e00\u6b65\uff0c\u6240\u4ee51\u4e0d\u7528\u67d3\u8272\uff0c\u6240\u4ee5k\u7684\u6700\u5927\u503c\u53ea\u80fd\u662fn-1,\u7b2c\u4e00\u6b65\u4e5f\u5c31\u662f\u9664\u4e861\u5176\u4ed6\u70b9\u90fd\u67d3\u5b8c\uff0cB\u65e0\u8bba\u600e\u4e48\u8d70\u90fd\u4f1a\u8fdb\u9ed1\u8272\uff0c\u518d\u628a1\u67d3\u6389\u5373\u53ef\u3002\n\twhile(l<r)\n\t{\n\t\tmid=(l+r)/2;\n\t\tdfs(1,0);\n\t\tif(f[1]==0) r=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",r);\n\treturn 0;\n}\n```",
        "postTime": 1611753807,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3554 \u3010[POI2013]LUK-Triumphal arch\u3011"
    },
    {
        "content": "# \u9898\u610f\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3554)\n\n# \u5206\u6790\n\n\u5bb9\u6613\u53d1\u73b0\u7b54\u6848$k$\u5177\u6709\u5355\u8c03\u6027\uff0c$k$\u8d8a\u5927\u8d8a\u5bb9\u6613\u6ee1\u8db3\u7b54\u6848\u6b63\u786e\uff0c$k$\u8d8a\u5c0f\u8d8a\u6709\u53ef\u80fd\u9519\u8bef\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4e8c\u5206\u7b54\u6848$k$\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u5224\u65ad\u4e00\u6b21\u67d3$k$\u4e2a\u70b9\u662f\u5426\u53ef\u884c\n\n$tip1:$\u5bb9\u6613\u53d1\u73b0\uff0c$B$\u4e0d\u4f1a\u8d70\u56de\u5934\u8def\uff0c\u56e0\u4e3a\u5982\u679c\u8d70\u4e86\u5728\u56de\u53bb\u4e0d\u5c31\u76f8\u5f53\u4e8e\u767d\u9001$A$\u4e00\u6b21\u67d3\u8272\u673a\u4f1a\n\n\u8003\u8651$dp$\u6765\u68c0\u9a8c\uff1a\n\n\u8bbe\u72b6\u6001$dp[x]$\u8868\u793a$x$\u6240\u4ee5\u5b50\u6811\u5185\uff08\u4e0d\u5305\u62ec$x$\uff09\u9700\u8981\u591a\u5c11\u6b21 **\"\u989d\u5916\"** \u7684\u67d3\u8272\n\n$tip2:$**\"\u989d\u5916\"** \u7684\u5b9a\u4e49\uff1a\u56e0\u4e3a\u6211\u4eec\u8d70\u5230\u5b50\u6811\u4e2d\u672c\u8eab\u6bcf\u4e00\u6b65\u90fd\u662f\u5728\u8f6e\u6b21\u4e2d\u7684\uff0c\u6b64\u65f6$A$\u4e5f\u53ef\u4ee5\u67d3\u8272\uff0c\u8fd9\u91cc\u6307\u7684\u662f\u672c\u8eab\u53ef\u4ee5\u7ed9\u4e88\u7684\u67d3\u8272\u673a\u4f1a\u4e0d\u591f\u4e86\uff0c\u5fc5\u987b **\"\u501f\u7528\"** \u5176\u5b83\u5730\u65b9\u7684\u67d3\u8272\u673a\u4f1a\u7684\u70b9\u7684\u4e2a\u6570\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$\n\\Large dp[x]=max(0,\\sum_{y \\in son[x]} +d[x]\u2212mid)\n$$\n\n\u5176\u4e2d$d[x]$\u662f\u6307$x$\u7684\u5b50\u6811\u4e2a\u6570\uff0c$mid$\u662f\u4e8c\u5206\u51fa\u6765\u7684\u90a3\u4e2a\u7b54\u6848$k$\n\n\u90a3\u4e48$dp$\u5b8c\u4e86\u8fc7\u540e\uff0c\u5982\u679c$dp[1]==0$\uff0c\u90a3\u4e48\u6b64\u65f6\u8fd9\u4e2a$mid$\u5c31\u662f\u53ef\u884c\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u5bfb\u627e\u66f4\u5c0f\u7684\u7b54\u6848$\uff08r=mid\uff09$\uff0c\u5426\u5219\u6211\u4eec\u53ea\u80fd\u5f80\u66f4\u52a3\u5904\u627e$\uff08l=mid\uff09$\n\n$tip3:$\u6b64\u65f6$dp[1]==0$\u7684\u542b\u4e49\uff1a\u6574\u4e2a\u6811\u5f53\u4e2d\u6ca1\u6709\u9700\u8981 **\"\u989d\u5916\"** \u6b65\u6570\u7684\u7ed3\u70b9\uff0c\u800c$1$\u53f7\u7ed3\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u4e0d\u53ef\u80fd\u63a5\u53d7\u5230\u5176\u5b83\u5730\u65b9\u7684 **\"\u5e2e\u52a9\"**\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u6c42\u8fd9\u4e2a\u70b9\u4e0d\u80fd\u6709\u989d\u5916\u7684\u8d21\u732e\n\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x){\n\tx=0;char ch=getchar();bool f=false;\n\twhile(!isdigit(ch)){if(ch=='-'){f=true;}ch=getchar();}\n\twhile(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\tx=f?-x:x;\n\treturn ;\n}\ntemplate <typename T,typename... Args> inline void read(T& t, Args&... args){read(t);read(args...);}\ntemplate <typename T>\ninline void write(T x){\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) write(x/10);\n\tputchar(x%10^48);\n\treturn ;\n}\ntemplate <typename T>\ninline void print(T x){write(x),putchar(' ');}\n#define ll long long\n#define ull unsigned long long\n#define inc(x,y) (x+y>=MOD?x+y-MOD:x+y)\n#define dec(x,y) (x-y<0?x-y+MOD:x-y)\n#define min(x,y) (x<y?x:y)\n#define max(x,y) (x>y?x:y)\nconst int N=3e5+5,M=1e6+5,MOD=1e9+7;\nint n,mid;\nint head[N],nex[M],to[M],idx;\nint dp[N],d[N];\nvoid add(int u,int v){\n\tnex[++idx]=head[u];\n\tto[idx]=v;\n\thead[u]=idx;\n\treturn ;\n}\nvoid dfs(int x,int fa){\n\tdp[x]=0;int sum=0;\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=to[i];\n\t\tif(y==fa) continue;\n\t\tdfs(y,x);\n\t\tsum+=dp[y]+1;\n\t}\n\tdp[x]=max(dp[x],sum-mid);\n\treturn ;\n}\nint main(){\n\tread(n);\n    if(n==1){\n        puts(\"0\");\n        return 0;\n    }\n\tint u,v;\n\tfor(int i=1;i<n;i++){\n\t\tread(u,v);\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tint l=0,r=n;\n\twhile(l+1<r){\n\t\tmid=(l+r)>>1;\n\t\tdfs(1,0);\n\t\tif(dp[1]==0) r=mid;\n\t\telse l=mid;\n\t}\n\twrite(r);\n\tsystem(\"Pause\");\n\treturn 0;\n}\n```",
        "postTime": 1610446549,
        "uid": 130387,
        "name": "_Anchor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3554 \u3010[POI2013]LUK-Triumphal arch\u3011"
    },
    {
        "content": "#### \u9898\u610f\u8865\u5145\n\n+ \u4e8b\u5b9e\u4e0a\uff0c$A$\u6bcf\u6b21\u80fd\u67d3\u7684$k$\u4e2a\u8282\u70b9\u5e76\u4e0d\u4e00\u5b9a\u4e0e$B$\u6240\u5728\u8282\u70b9\u76f8\u90bb\uff0c\u6362\u8a00\u4e4b\uff0c$A$\u53ef\u4ee5\u63d0\u524d\u67d3\u4e00\u4e9b\u8282\u70b9\u4f7f\u5f97$B$\u4ee5\u540e\u8d70\u4e0d\u5230\u3002\n+ \u6570\u636e\u8303\u56f4\uff1a$1 \\leq n \\leq 300000$\n\n#### \u7b97\u6cd5\n\n\u4e8c\u5206\u7b54\u6848 + \u6811\u5f62DP\n\n#### \u601d\u8def\n\n\u4e8c\u5206\u6bcf\u6b21\u67d3\u7684\u8282\u70b9\u4e2a\u6570$k$\uff0c\u518d\u7528\u6811\u5f62DP\u68c0\u67e5\uff1b\n\n\u8bbe$f_u$\u4e3a\u4ee5$u$\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\uff08\u4e0d\u542b$u$\uff09\u5168\u90e8\u67d3\u5b8c**\u9664\u4e86$k$\u4ee5\u5916**\u8fd8\u9700\u8981\u7684\u6b21\u6570\uff0c\u90a3\u4e48\uff1a\n\n$$ f_u = max(\\sum{f_v} \\; +siz_u - k, 0) $$\n\n\u5176\u4e2d\uff0c$siz_u$\u4e3a$u$\u7684\u513f\u5b50\u6570\u91cf\u3002\u6700\u540e\u5f53$f_1 = 0$\u65f6\u5373\u4e3a\u5408\u6cd5\u3002\n\n\u6ce8\u610f\u8981\u4ece\u513f\u5b50\u5f80\u7236\u4eb2\u63a8\uff0c\u8fd9\u6837\u624d\u80fd\u907f\u514d\u4e0d\u77e5\u9053\u5148\u5904\u7406\u54ea\u4e00\u4e2a\u513f\u5b50\u7684\u60c5\u51b5\u3002\n\n**\u4e3a\u4ec0\u4e48\u8d2a\u5fc3\u662f\u9519\u7684\uff1a**\n\n\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\uff1a\u6709\u4e00\u4e2a\u8282\u70b9\u6709\u5927\u91cf\u513f\u5b50\uff0c\u800c\u5b83\u7684\u5144\u5f1f\u8282\u70b9\u4eec\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u663e\u7136\uff0c\u8d2a\u5fc3\u662f\u4e0d\u597d\u5904\u7406\u7684\u3002\n\n#### \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nconst int maxn = 3e5 + 10;\nint n,head[maxn << 1],num;\nstruct Edge{\n    int then,to;\n}e[maxn << 1];\n\nvoid add(int u, int v){e[++num] = (Edge){head[u], v}; head[u] = num;}\n\nint f[maxn];\nvoid DFS(int u, int fa, int ch){\n    int cnt = 0;\n    for(int i = head[u]; i; i = e[i].then){\n        int v = e[i].to;\n        if(v != fa){\n            cnt ++;\n            DFS(v, u, ch);\n            f[u] += f[v];\n        }\n    }\n    f[u] = max(0, f[u] + cnt - ch);\n}\n\nint check(int p){\n    memset(f,0,sizeof(f));\n    DFS(1, 1, p);\n    return (f[1] <= 0);\n}\n\nint main(){\n    scanf(\"%d\", &n);\n    for(int i = 1; i < n; ++ i){\n        int u,v; scanf(\"%d%d\", &u, &v);\n        add(u, v); add(v, u);\n    }\n    int l = 0, r = maxn;\n    while(l <= r){\n        int mid = (l + r) >> 1;\n        if(check(mid)) r = mid - 1;\n        else l = mid + 1;\n    }\n    printf(\"%d\\n\", r + 1);\n    return 0;\n}\n```\n\n**\u798f\u5229\u6570\u636e**\n\n```\n7\n1 2\n1 3\n2 5\n2 6\n7 2\n4 1\nans:3\n```\n\n\n\n\n\n",
        "postTime": 1605228492,
        "uid": 120351,
        "name": "When",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3554 \u3010[POI2013]LUK-Triumphal arch\u3011"
    },
    {
        "content": "\u6570\u636e\u8303\u56f4\u8c8c\u4f3c\u662f $3\\cdot 10^5$\n\n## \u89e3\u6790\n\n\u6211\u4eec\u53d1\u73b0\u5728\u7b2c\u4e00\u6b21\u5230\u8fbe\u53f6\u5b50\u7ed3\u70b9\u524d B \u4e00\u5b9a\u4e0d\u4f1a\u8d70\u56de\u5934\u8def\uff0c\u56e0\u4e3a\u5f53 B \u56de\u5230\u4e4b\u524d\u7684\u67d0\u4e2a\u7ed3\u70b9\u65f6\uff0cA \u4e0b\u4e00\u6b21\u53ef\u4ee5\u67d3\u8272\u7684\u7ed3\u70b9\u6570\u4ecd\u4e3a $k$\uff0c\u6b64\u65f6\u8fd8\u591a\u4e86\u4e00\u5806\u5df2\u7ecf\u88ab\u67d3\u8272\u7684\u70b9\n\n\u6211\u4eec\u8fd8\u53d1\u73b0\uff0c\u82e5 B \u5728\u5230\u8fbe\u53f6\u5b50\u7ed3\u70b9\u524d\u65e0\u6cd5\u83b7\u80dc\uff0c\u5219\u5728\u8fd9\u4e4b\u540e B \u4e5f\u4ecd\u65e7\u65e0\u6cd5\u83b7\u80dc\uff0c\u8bc1\u660e\u65b9\u6cd5\u57fa\u672c\u540c\u4e0a\n\n\u82e5 B \u5728\u7ed3\u70b9 $u$\uff0c\u53ef\u4ee5\u60f3\u5230\u8fd9\u4e00\u6b65 A \u4e00\u5b9a\u8981\u81f3\u5c11\u5c06 $u$ \u7684\u6240\u6709\u513f\u5b50\u8282\u70b9\uff08\u6709\u8fb9\u76f4\u63a5\u76f8\u8fde\uff09\u67d3\u8272\uff1b\u4f46\u67d3\u5b8c\u8272\u540e\u53ef\u80fd\u8fd8\u6709\u591a\u4f59\u7684\u67d3\u8272\u6b21\u6570\u3002\u7531\u4e8e $k$ \u662f\u5168\u5c40\u7684\uff0c\u76f4\u63a5\u505a\u6700\u5c0f\u503c\u53ef\u80fd\u4f1a\u975e\u5e38\u56f0\u96be\uff0c\u56e0\u6b64\u8003\u8651\u4e8c\u5206 $k$ \u4ec5\u68c0\u9a8c\n\n&nbsp;\n\n\u53ef\u80fd\u6709\u4eba\u4f1a\u60f3\u5230\u4e00\u79cd\u9519\u8bef\u7684\u8d2a\u5fc3\u68c0\u9a8c\u6cd5\uff1a\u4f18\u5148\u67d3\u8272\u6df1\u5ea6\u6d45\u7684\u7ed3\u70b9\u3002\u5f53\u6e38\u620f\u5f00\u59cb $t$ \u65f6\u523b\u540e\uff0cA \u4e00\u5171\u6709\u7d2f\u79ef $tk$ \u6b21\u67d3\u8272\u673a\u4f1a\uff0cB \u6700\u591a\u53ea\u80fd\u8d70\u81f3\u6df1\u5ea6\u4e3a $t$ \u7684\u7ed3\u70b9\uff0c\u6b64\u65f6\u68c0\u9a8c\u524d $t$ \u5c42\u7684\u7ed3\u70b9\u662f\u5426\u80fd\u5168\u90e8\u67d3\u8272\u5373\u53ef\n\n\u8fd9\u79cd\u8d2a\u5fc3\u6709\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u53cd\u4f8b\uff1a\n\n```\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n```\n\n\uff08\u5176\u5b9e\u5c31\u662f\u4e00\u9897\u5b8c\u5168\u4e8c\u53c9\u6811\uff09\n\n\u5bf9\u4e8e $k=2$\uff0c\u8d2a\u5fc3\u4f1a\u8ba4\u4e3a\u4e0d\u884c\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u53ef\u4ee5\u7684\n\n\u975e\u5f62\u5f0f\u5316\u7684\u89e3\u91ca\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5f53 B \u8fdb\u5165\u4e00\u9897\u5b50\u6811\u65f6\uff0c\u5c31\u4e0d\u9700\u8981\u8003\u8651\u5b50\u6811\u5916\u7684\u67d3\u8272\u60c5\u51b5\u4e86\n\n&nbsp;\n\n\u4e8e\u662f\u8003\u8651 dp\uff0c\u6211\u4eec\u8bbe $dp(u)$\uff0c\u5176\u542b\u4e49\u4e3a B \u4ece $u$ \u51fa\u53d1\u4e14\u53ea\u80fd\u5f80\u8be5\u5b50\u6811\u5185\u8d70\uff0c\u9700\u8981\u81f3\u5c11\u63d0\u524d\u67d3\u8be5\u5b50\u6811\u5185\u591a\u5c11\u4e2a\u7ed3\u70b9\uff08\u4e14\u5047\u8bbe $u$ \u5df2\u67d3\u8272\uff09\n\n\u81f3\u4e8e\u8f6c\u79fb\uff0c\u7531\u4e8e\u6211\u4eec\u4e0d\u6e05\u695a B \u7a76\u7adf\u4f1a\u5f80\u54ea\u4e2a\u513f\u5b50\u8d70\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u513f\u5b50\u7684\u67d3\u8272\u8981\u6c42\uff1a\n\n$dp(u)=\\sum (dp(v)+1)-k$\uff0c\u5176\u4e2d $v$ \u662f $u$ \u7684\u513f\u5b50\u3002$+1$ \u662f\u56e0\u4e3a\u6211\u4eec\u5047\u8bbe\u51fa\u53d1\u7684\u8fd9\u4e2a\u7ed3\u70b9\u5df2\u7ecf\u67d3\u8272\n\n\u4f46\u6ce8\u610f $dp(u)$ \u6709\u65f6**\u53ef\u80fd\u4e3a\u8d1f\u503c**\uff0c\u8fd9\u65f6\u6211\u4eec\u5e94\u5c06\u5176\u8bbe\u4e3a $0$\u3002\u8fd9\u662f\u56e0\u4e3a\u5176\u5b9e\u9645\u542b\u4e49\u4e3a\uff1a\u6211\u4eec\u8fdb\u5165 $u$ \u5b50\u6811\u540e\u751a\u81f3\u5c11\u67d3\u51e0\u6b21\u8272\u4e5f\u80fd\u6ee1\u8db3\u8981\u6c42\uff1b\u4f46\u8fd9\u5e76\u4e0d\u80fd\u5b9e\u9645\u7ed9\u6211\u4eec\u63d0\u4f9b\u989d\u5916\u7684\u67d3\u8272\u6b21\u6570\n\n## CODE\n\n\u6ce8\u610f\u7b54\u6848\u53ef\u80fd\u4e3a $0$\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing std::min;\nusing std::max;\n\nconst int MAXN =3e5+50;\n\n/*------------------------------Map------------------------------*/\n\nint first[MAXN], tote;\nstruct edge{\n\tint net, to;\n}e[MAXN<<1];\n\ninline void addedge(int u, int v){\n\t++tote;\n\te[tote].to =v, e[tote].net =first[u];\n\tfirst[u] =tote;\n\t++tote;\n\te[tote].to =u, e[tote].net =first[v];\n\tfirst[v] =tote;\n}\n\n/*------------------------------Dfs------------------------------*/\n\nint dp[MAXN];/*\u4ece u \u51fa\u53d1\u4e14\u53ea\u80fd\u5f80\u8be5\u5b50\u6811\u5185\u8d70\uff0c\u9700\u8981\u81f3\u5c11\u67d3\u591a\u5c11\u4e2a\u7ed3\u70b9 ( \u5047\u8bbe u \u5df2\u67d3\u8272 )*/\n\nvoid dfs(int u, int fa, int k){\n\tint sum =0;\n\tfor(int l =first[u]; l; l =e[l].net)\n\t\tif(e[l].to != fa){\n\t\t\tdfs(e[l].to, u, k);\n\t\t\tsum +=dp[e[l].to]+1;\n\t\t}\n\tdp[u] =max(sum-k, 0);/*\u6ce8\u610f\u4e0d\u80fd\u4e3a\u8d1f\u503c*/\n}\n\nbool check(int k){\n\tmemset(dp, 0, sizeof(dp));\n\tdfs(1, 0, k);\n\treturn (dp[1] == 0);\n}\n\n/*------------------------------Main------------------------------*/\n\ninline int read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn x;\n}\n\nint main(){\n\tint n =read();\n\tfor(int i =0; i < n-1; ++i){\n\t\tint u =read(), v =read();\n\t\taddedge(u, v);\n\t}\n\tint l =0, r =n, ans =n;\n\twhile(l <= r){\n\t\tint mid =(l+r)>>1;\n\t\tif(check(mid))\n\t\t\tans =min(ans, mid), r =mid-1;\n\t\telse\n\t\t\tl =mid+1;\n\t}\n\tprintf(\"%d\", ans);\n}\n```",
        "postTime": 1598790789,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3554 \u3010[POI2013]LUK-Triumphal arch\u3011"
    },
    {
        "content": "# P3554 [POI2013]LUK-Triumphal arch \u9898\u89e3\n\n\n## [\u95f4\u9699](https://www.luogu.com.cn/problem/P3554)\n\n## \u77e5\u8bc6\u70b9\n - ## \u6811\u5f62$DP$ , \u4e8c\u5206\u7b54\u6848\n\n## \u5206\u6790\n\n\u9898\u610f\u7ffb\u8bd1\u91cc\u5df2\u7ecf\u5199\u7684\u5f88\u6e05\u695a\u4e86,\u8fd9\u91cc\u5c31\u4e0d\u91cd\u590d\u4e00\u904d\u4e86\n\n\u9996\u5148\u8fd9\u91cc\u7684\u7b54\u6848$k$\u5177\u6709\u53ef\u4e8c\u5206\u6027,\u8003\u8651\u4e8c\u5206\u7b54\u6848\n\n\u5f53$B$\u8d70\u5230\u4e00\u4e2a\u8282\u70b9$u$\u65f6,\u7b2c\u4e00\u6b65\u8981\u505a\u7684\u80af\u5b9a\u662f\u628a$u$\u7684\u513f\u5b50\u5168\u90e8\u90fd\u6d82\u8272\n\n\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u6570\u5927\u4e8e\u5f53\u524d\u7684$k$,\u5219\u65e0\u8bba\u600e\u4e48\u6d82\u90fd\u4f1a\u8f93\n\n\u53cd\u4e4b,\u8bf4\u660e\u9664\u4e86\u6d82\u81ea\u5df1\u7684\u513f\u5b50\u5916\u8fd8\u53ef\u4ee5\"**\u63d0\u524d**\"\u6d82\u5176\u4ed6\u7684\u8282\u70b9\n\n\u8bbe$f[i]$\u4e3a\u4ee5$i$\u6839\u8282\u70b9\u7684\u5b50\u6811\u9700\u8981**\u5176\u7956\u5148\"\u63d0\u524d\"\u67d3\u8272\u591a\u5c11\u4e2a\u70b9\u624d\u80fd\u8986\u76d6\u6574\u4e2a\u5b50\u6811**\n\n\u6613\u5f97\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:$f[u] = max(0  , \\sum f[v]+1-k)$\n\n\u5177\u4f53\u89e3\u91ca$:$\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/i6tgjcmc.png)\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u76f4\u63a5\u4e8c\u5206\u7b54\u6848$k$,\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$k$\u8fdb\u884c$dp$\n\n\u5982\u679c$f[1]$\u4e3a$0$,\u5219\u8bf4\u660e\u53ef\u884c\n\n\u53cd\u4e4b\u8bf4\u660e\u4e0d\u53ef\u884c\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 3e5+10;\nint n;\nstruct e{\n\tint to,next;\n}edge[MAXN<<1];\nint head[MAXN<<1],cnt = 0;\nint f[MAXN];\nvoid add(int u,int v){//\u524d\u5411\u661f\n\tedge[++cnt].to = v;\n\tedge[cnt].next = head[u];\n\thead[u] = cnt;\n}\nvoid dfs(int u,int fa,int k){\n\tint sum = 0;\n\tfor(int i=head[u];i;i=edge[i].next){\n\t\tint v = edge[i].to;\n\t\tif(v==fa) continue;\n\t\tdfs(v,u,k);\n\t\tsum=sum+f[v]+1;//\u8bb0\u5f55\n\t}\n\tf[u] = max(0,sum-k);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n-1;i++){\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tint l = 0,r = 10e10;\n\tint ans = -1;\n\twhile(l<=r){//\u4e8c\u5206\u7b54\u6848\n\t\tmemset(f,0,sizeof(f));\n\t\tint mid = (l+r)>>1;\n\t\tdfs(1,0,mid);//dp\n\t\tif(f[1]==0){//\u5982\u679cf[1]\u4e3a0 \u8bf4\u660e\u53ef\u884c\n\t\t\tans = mid;\n\t\t\tr = mid-1;\n\t\t}\u53cd\u4e4b,\u4e0d\u53ef\u884c\n\t\telse l = mid+1;\n\t}\n\tprintf(\"%d\",ans);\n}\n```\n\n",
        "postTime": 1597914605,
        "uid": 244466,
        "name": "xcxc82",
        "ccfLevel": 0,
        "title": "P3554 [POI2013]LUK-Triumphal arch \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u89c1\u9898\u610f\u7ffb\u8bd1\u3002\n\n## \u9898\u89e3\n\n\u6ca1\u6709\u4ec0\u4e48\u597d\u7684\u65b9\u6cd5\u6c42 $k$ \u7684\u503c\uff0c\u6211\u4eec\u8003\u8651\u4e8c\u5206\u3002\n\n\u8fd9\u4e2a\u4e8c\u5206\u7684\u5355\u8c03\u6027\u662f\u663e\u7136\u7684\uff0c\u8003\u8651\u600e\u4e48\u5224\u65ad\u3002\n\n\u53ef\u4ee5\u901a\u8fc7\u6811\u5f62DP\u7684\u65b9\u5f0f\u6765\u5224\u65ad\u3002\n\n\u8bbe $F_{i}$ \u4e3a\u4ee5 $i$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u6700\u5c11\u8fd8\u9700\u591a\u67d3\u51e0\u4e2a\u8282\u70b9\u53ef\u4ee5\u4f7f\u5f97A\u83b7\u80dc\u3002\n\n\u90a3\u4e48\u5bb9\u6613\u5f97\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$\nF_{u}=\\max\\{\\sum_{v\\in son(u)}(F_{v}+1)-k\\}\n$$\n\n\u5176\u4e2d $k$ \u4e3a\u5f53\u524d\u7684\u4e8c\u5206\u503c\u3002\n\n\u53ef\u77e5\u53ea\u8981 $F_{1}=0$ \u5c31\u662f\u4e00\u4e2a\u53ef\u884c\u65b9\u6848\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int Maxn = 3e5 + 5;\nint n, dp[Maxn];\nvector < int > G[Maxn];\n\nvoid dfs(int x, int fa, int k)\n{\n\tdp[x] = 0;\n\tfor (unsigned i = 0; i < G[x].size(); ++i)\n\t{\n\t\tint y = G[x][i];\n\t\tif (y == fa)\tcontinue;\n\t\tdfs(y, x, k);\n\t\tdp[x] += dp[y] + 1;\n\t}\n\tdp[x] = max(dp[x] - k, 0);\n}\n\nbool Check_Feasic(int x)\n{\n\tdfs(1, 0, x);\n\tif (dp[1] == 0) \treturn 1;\n\telse \treturn 0;\n}\n\nint Binary_Search(int l, int r)\n{\n\tint ans = l;\n\twhile (l <= r)\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tif (Check_Feasic(mid))\tans = mid, r = mid - 1;\n\t\telse\tl = mid + 1;\n\t}\n\treturn ans;\n}\n\nsigned main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i < n; ++i)\n\t{\n\t\tint x, y;\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tG[x].push_back(y);\n\t\tG[y].push_back(x);\n\t}\n\tprintf(\"%d\\n\", Binary_Search(0, n));\n\treturn 0;\n}\n```",
        "postTime": 1594970046,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3554 \u3010[POI2013]LUK-Triumphal arch\u3011"
    }
]