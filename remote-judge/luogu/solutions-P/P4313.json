[
    {
        "content": "**\u9898\u76ee\u80cc\u666f**\n\n2018\u5e746\u67086\u65e5\uff0c\u660e\u5929\u5c31\u662f\u9ad8\u8003\uff0c\u5728\u6b64\u63d0\u524d\u9884\u795d\u5404\u4f4dOIers\u4e0d\u8bba\u6587\u79d1\u751f\uff0c\u7406\u79d1\u751f\u9ad8\u8003\u90fd\u53d6\u5f97\u597d\u6210\u7ee9\uff0c\u6587\u7efc\uff0c\u7406\u7efc\u505a\u7684\u987a\u5fc3\u3002\n\n$QwQ$\uff0c\u53ea\u662f\u5728\u4e0b\u4e00\u4e2a\u5c71\u4e1c\u9ad8\u4e00\u65b0\u751f\uff0c\u53d6\u4ee3\u6587\u7406\u5206\u79d1\u7ea0\u7ed3\u7684\u662f\u516d\u9009\u4e09\u7684 $C^3_6$.\n\n\u6700\u540e\u795d\u613f\u5404\u4f4d\u4f1a\u7684\u90fd\u5bf9\uff0c\u8499\u7684\u90fd\u5bf9\uff0c\u5e76\u9001\u4e0a\u4e00\u53e5\u540d\u8a00\u3002\n\n** _\u7ecf\u5386\u4e86\u8fd9\u4e48\u591a\u75db\u82e6\u7684\u6298\u78e8\uff0c\u53d8\u5f97\u575a\u5f3a\uff0c\u800c\u4e0e\u4e16\u9694\u7edd\u7684\u7075\u9b42\u91cc\u6d88\u901d\uff0c\u4e3a\u4ec0\u4e48\u6211\u67af\u7aed\u7684\u6d3b\u529b\u53c8\u83b7\u5f97\u4e86\u751f\u547d\uff0c\u90a3\u662f\u56e0\u4e3a\u660e\u6717\u7684\u6708\u591c\uff0c\u7d27\u968f\u6f06\u9ed1\u7684\u957f\u591c\uff1b\u90a3\u662f\u56e0\u4e3a\u548c\u7166\u7684\u4e1c\u98ce\uff0c\u79bb\u4e0d\u5f00\u7e41\u679d\u8302\u53f6\uff1b\u90a3\u662f\u56e0\u4e3a\u6625\u5929\u7ec8\u4e8e\u6765\u4e34\uff0c\u51ac\u5929\u7ec8\u4e8e\u8fc7\u53bb\u3002_ **\n\n\t\t\t\t\u2014\u2014\u96e8\u679c\u300a\u770b\uff0c\u4e4c\u4e91\u5c06\u503e\u76c6\u5927\u96e8\u6cfc\u5411\u8fd9\u68f5\u6811\u300b\n\n**\u5fc5\u5907\u77e5\u8bc6**\n\n\u7f51\u7edc\u6d41\u53cadinic\u7b97\u6cd5\n\n\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\n\n**\u9898\u76ee\u5206\u6790**\n\n\u56de\u5f52\u6b63\u9898\u3002\n\n\u8fd9\u4e2a\u9898\u5f88\u660e\u663e\u662f\u4e00\u4e2a\u6700\u5c0f\u5272\u597d\u9898\u3002~~\u4f46\u505a\u7684\u4eba\u600e\u4e48\u8fd9\u4e48\u5c11\uff1f~~\n\n\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u4eba\u89c6\u4f5c\u4e00\u4e2a\u70b9 $i$\uff0c\u89c4\u5b9a\uff1a$i$\u88ab\u5272\u5230$S$\u96c6\u91cc\uff0c\u4ee3\u8868\u8fd9\u4e2a\u4eba\u9009\u6587\uff0c$i$\u88ab\u5272\u5230$T$\u96c6\u91cc\uff0c\u4ee3\u8868\u8fd9\u4e2a\u4eba\u9009\u7406.\n\n\u5c06$S$\u8fde\u5411\u8fd9\u4e2a\u70b9\uff0c\u957f\u5ea6\u4e3aart\uff0c\u5982\u679c\u8be5\u8fb9\u88ab\u5272\uff0c\u5219\u8bf4\u660e\u4e0d\u9009\u6587\uff0c\u4e0d\u80fd\u83b7\u5f97art\u7684\u6536\u76ca\uff0c\u53ef\u5f97\u5230science\u7684\u6536\u76ca\u3002\n\n\u5c06\u8fd9\u4e2a\u70b9\u8fde\u5411$T$\uff0c\u957f\u5ea6\u4e3ascience\uff0c\u5982\u679c\u8be5\u8fb9\u88ab\u5272\uff0c\u5219\u8bf4\u660e\u4e0d\u9009\u7406\uff0c\u4e0d\u80fd\u83b7\u5f97science\u7684\u6536\u76ca\uff0c\u53ef\u5f97\u5230art\u7684\u6536\u76ca\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u540c\u65f6\u9009\u62e9\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u65b0\u5efa\u70b9\u3002\n\n\u5bf9\u4e8e\u51e0\u4e2a\u76f8\u90bb\u7684\u70b9\uff0c\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u70b9\uff0c\u5c06$S$\u8fde\u5411\u8fd9\u4e2a\u70b9\uff0c\u957f\u5ea6\u4e3a\u540c\u65f6\u9009\u6587\u53ef\u83b7\u5f97\u7684\u6536\u76ca\uff0c\u5982\u679c\u8be5\u8fb9\u88ab\u5272\uff0c\u5219\u8bf4\u660e\u8fd9\u4e9b\u4eba\u4e0d\u540c\u65f6\u9009\u6587\uff0c\u4e0d\u80fd\u83b7\u5f97\u540c\u65f6\u9009\u6587\u53ef\u83b7\u5f97\u7684\u6536\u76ca\u3002\n\n\u540c\u6837\uff0c\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u70b9\uff0c\u5c06\u8fd9\u4e2a\u70b9\u8fde\u5411$T$\uff0c\u957f\u5ea6\u4e3a\u540c\u65f6\u9009\u7406\u53ef\u83b7\u5f97\u7684\u6536\u76ca\uff0c\u5982\u679c\u8be5\u8fb9\u88ab\u5272\uff0c\u5219\u8bf4\u660e\u8fd9\u4e9b\u4eba\u4e0d\u540c\u65f6\u9009\u7406\uff0c\u4e0d\u80fd\u83b7\u5f97\u540c\u65f6\u9009\u7406\u53ef\u83b7\u5f97\u7684\u6536\u76ca\uff0c\n\n\u600e\u4e48\u4fdd\u8bc1\u4e0d\u5272\u8fd9\u6761\u8fb9\u5219\u5fc5\u7136\u90fd\u9009\u540c\u6837\u7684\u79d1\u76ee\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u65b0\u5efa\u7684\u70b9\uff0c\u5411\u76f8\u90bb\u7684\u90a3\u51e0\u4e2a\u70b9\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\uff08\u6216\u4ece\u76f8\u90bb\u7684\u90a3\u51e0\u4e2a\u70b9\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u5411\u65b0\u5efa\u7684\u70b9\uff09\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a$inf$\u7684\u8fb9\uff0c\u8fd9\u6837\u7684\u8fb9\u5728\u6700\u5c0f\u5272\u4e2d\u80af\u5b9a\u4e0d\u4f1a\u5b58\u5728\uff0c\u5219\u4fdd\u8bc1\u4e86\u5728\u4ee3\u8868\u5171\u540c\u9009\u62e9\u6536\u76ca\u7684\u8fb9\u4e0d\u88ab\u5272\u65f6\uff08\u5373\u90fd\u9009\u4e00\u4e2a\u79d1\u76ee\uff09\u65b0\u5efa\u7684\u70b9\u4e0e\u76f8\u90bb\u7684\u70b9\u5728\u540c\u4e00\u4e2a\u70b9\u96c6\u3002\u95ee\u9898\u5f97\u4ee5\u89e3\u51b3\u3002\n\n\u901a\u8fc7Dinic\u7b97\u6cd5\u6c42\u5f97\u8be5\u56fe\u7684\u6700\u5c0f\u5272\uff0c\u603b\u6536\u76ca\u51cf\u6700\u5c0f\u5272\u5373\u4e3a\u6700\u5927\u6536\u76ca\u3002\n\n\u8bba\u8bc1\u5b8c\u6bd5\u3002\n\n**\u5efa\u56fe\u65b9\u5f0f**\n\n\u628a\u6bcf\u4e00\u4e2a\u4eba\u89c6\u4f5c\u4e00\u4e2a\u70b9 $i$\u3002\n\n\u5c06$S$\u8fde\u5411\u8fd9\u4e2a\u70b9\uff0c\u957f\u5ea6\u4e3aart\u3002\n\n\u5c06\u8fd9\u4e2a\u70b9\u8fde\u5411$T$\uff0c\u957f\u5ea6\u4e3ascience\u3002\n\n\u65b0\u5efa\u70b9\uff0c\u5c06$S$\u8fde\u5411\u8fd9\u4e2a\u70b9\uff0c\u957f\u5ea6\u4e3a\u540c\u65f6\u9009\u6587\u53ef\u83b7\u5f97\u7684\u6536\u76ca\uff0c\u5e76\u5411\u76f8\u90bb\u7684\u90a3\u51e0\u4e2a\u70b9\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a$inf$\u7684\u8fb9\u3002\n\n\u65b0\u5efa\u70b9\uff0c\u5c06\u8fd9\u4e2a\u70b9\u8fde\u5411$T$\uff0c\u957f\u5ea6\u4e3a\u540c\u65f6\u9009\u7406\u53ef\u83b7\u5f97\u7684\u6536\u76ca\uff0c\u4ece\u76f8\u90bb\u7684\u90a3\u51e0\u4e2a\u70b9\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u5411\u65b0\u5efa\u7684\u70b9\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a$inf$\u7684\u8fb9\u3002\n\n**Code**\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#include <queue>\n#define Maxn 40001<<1\n#define inf (unsigned)-1>>1\nusing namespace std;\n\nint N,M;int S,T,sum,opt;\nconst int dx[6]={0,0,0,-1,1};\nconst int dy[6]={0,-1,1,0,0};\nstruct Edge {\n\tint v,flow,rev;\n};\ninline int read () {\n    int X=0,w=1;char ch=0;\n    while (ch<'0'||ch>'9')\t\t{ if(ch=='-')\tw=-1;ch=getchar(); }\n    while (ch>='0'&&ch<='9')\t{ X=(X<<1)+(X<<3)+ch-'0';ch=getchar(); }\n    return X*w;\n}\nstruct Graph {\n\tvector <Edge> e[Maxn];queue <int> Q;\n\tint level[Maxn];\n\tinline void addedge (int x,int y,int z) {\n\t\te[x].push_back( (Edge){\ty,z,e[y].size() } );\n\t\te[y].push_back( (Edge){\tx,0,e[x].size()-1} );\n\t}\n\tinline bool bfs () {\n\t\tmemset(level,0,sizeof(level));\n\t\tQ.push(S);level[S]=1;\n\t\twhile(!Q.empty()) {\n\t\t\tint u=Q.front();Q.pop();\n\t\t\tfor(int i=0;i<e[u].size();i++) {\n\t\t\t\tint v=e[u][i].v;\n\t\t\t\tif( !level[v] && e[u][i].flow ) {\n\t\t\t\t\tlevel[v]=level[u]+1;\n\t\t\t\t\tQ.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn level[T];\n\t}\n\tint dfs (int x,int maxf) {\n\t\tif( x==T || maxf==0 )   return maxf;\n\t\tint pos=0;\n\t\tfor(int i=0;i<e[x].size();i++) {\n\t\t\tint v=e[x][i].v;\n\t\t\tif( e[x][i].flow && level[v]==level[x]+1) {\n\t\t\t\tint f=dfs(v,min(e[x][i].flow,maxf));\n\t\t\t\te[x][i].flow-=f;\n\t\t\t\te[v][e[x][i].rev].flow+=f;\n\t\t\t\tpos+=f;\n\t\t\t\tmaxf-=f;\n\t\t\t}\n\t\t}\n\t\treturn pos;\n\t}\n\tinline int dinic () {\n\t\tint ans=0;\n\t\twhile(bfs())    ans+=dfs(S,inf);\n\t\treturn ans;\n\t}\n} G ;\ninline int getID (int i,int j) {\n\treturn (i-1)*M+j;\n}\nint main () {\n\tN=read();M=read();S=0;T=N*M+1;opt=N*M+1;\n\tfor(int i=1;i<=N;i++)\n\t\tfor(int j=1;j<=M;j++) {\n\t\t\tint art=read(),id=getID(i,j);\n\t\t\tsum+=art;\n\t\t\tG.addedge(S,id,art);\n\t\t}\n\tfor(int i=1;i<=N;i++)\n\t\tfor(int j=1;j<=M;j++) {\n\t\t\tint science=read(),id=getID(i,j);\n\t\t\tsum+=science;\n\t\t\tG.addedge(id,T,science);\n\t\t}\n\tfor(int i=1;i<=N;i++)\n\t\tfor(int j=1;j<=M;j++) {\n\t\t\tint same_art=read(),id=getID(i,j);opt++;\n\t\t\tsum+=same_art;\n\t\t\tG.addedge(S,opt,same_art);\n\t\t\tG.addedge(opt,id,inf);\n\t\t\tfor(int k=1;k<=4;k++)\n\t\t\t\tif( i+dx[k]>=1 && i+dx[k]<=N && j+dy[k]>=1 && j+dy[k]<=M )\n\t\t\t\t\tG.addedge(opt,getID(i+dx[k],j+dy[k]),inf);\n\t\t}\n\tfor(int i=1;i<=N;i++)\n\t\tfor(int j=1;j<=M;j++) {\n\t\t\tint same_science=read(),id=getID(i,j);opt++;\n\t\t\tsum+=same_science;\n\t\t\tG.addedge(opt,T,same_science);\n\t\t\tG.addedge(id,opt,inf);\n\t\t\tfor(int k=1;k<=4;k++)\n\t\t\t\tif( i+dx[k]>=1 && i+dx[k]<=N && j+dy[k]>=1 && j+dy[k]<=M )\n\t\t\t\t\tG.addedge(getID(i+dx[k],j+dy[k]),opt,inf);\n\t\t}\n\tprintf(\"%d\\n\",sum-G.dinic());\n\treturn 0;\n}\n```",
        "postTime": 1528288664,
        "uid": 47910,
        "name": "\u4e3a\u4eba\u6c11\u670d\u52a1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4313 \u3010\u6587\u7406\u5206\u79d1\u3011"
    },
    {
        "content": "### \u94fe\u63a5[Click Here](https://www.luogu.org/problemnew/show/P4313)\n#### \u8fd9\u4e2a\u9898\u5c31\u662f\u4e2a\u677f\u5b50\u7684\u6700\u5c0f\u5272\u591a\u9009\u4e00\u6a21\u578b\u5566$QwQ$\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u901a\u7528\u7684\u89e3\u6cd5\u3002\n\n#### \u629b\u5f00\u7ec4\u5408\u6536\u76ca\u4e0d\u8c08\uff0c\u8fd9\u4e2a\u9898\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6700\u5c0f\u5272\u6a21\u578b\u3002\u6211\u4eec\u53ea\u9700\u8981\u5efa\u51fa\u6765\u8fd9\u6837\u4e00\u5f20\u56fe\uff0c\u5728\u4e0a\u9762\u8dd1\u6700\u5c0f\u5272\uff0c\u5272\u6389\u7684\u5c31\u662f\u4e0d\u7528\u7684\uff0c\u7559\u4e0b\u6765\u7684\u5c31\u662f\u6700\u5927\u6536\u76ca\u5566~\\(\u2267\u25bd\u2266)/~\uff0c\u662f\u4e0d\u662f\u5f88\u663e\u7136\u5462\uff1f\n\n![](http://images.cnblogs.com/cnblogs_com/maomao9173/1317473/o_cut.JPG)\n\n#### \u5982\u679c\u8981\u8003\u8651\u7ec4\u5408\u6536\u76ca\u7684\u8bdd\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u7ec4\u5408\u6536\u76ca\u5b9e\u4f53\u5316\u6210\u4e00\u4e2a\u70b9\u6765\u8fdb\u884c\u5904\u7406\u3002\u8fd8\u662f\u4e0a\u9762\u90a3\u4e2a\u56fe\uff0c\u6211\u4eec\u5047\u8bbe$2$, $3$\u662f\u4ee5\u548c$1$\u56db\u8fde\u901a\u7684\u4e24\u4e2a\u70b9\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u4e00\u4ef6\u4e8b\u60c5\uff1a\n\n- \u5728$art_1, art_2, art_3$\u4e2d\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u88ab\u5272\u6389\uff08\u4e0d\u9009\uff09\uff0c\u90a3\u4e48$art$\u7684\u7ec4\u5408\u6536\u76ca\u5c31\u540c\u65f6\u88ab\u5272\u6389\u3002\n\n- \u5728$sci_1, sci_2, sci_3$\u4e2d\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u88ab\u5272\u6389\uff08\u4e0d\u9009\uff09\uff0c\u90a3\u4e48$sci$\u7684\u7ec4\u5408\u6536\u76ca\u5c31\u540c\u65f6\u88ab\u5272\u6389\u3002\n\n#### \u6839\u636e\u8fd9\u4e9b\u8981\u6c42\uff0c\u6211\u4eec\u5efa\u51fa\u6765\u4e86\u4e0b\u9762\u8fd9\u6837\u7684\u4e00\u5f20\u56fe\u3002\n\n![](http://images.cnblogs.com/cnblogs_com/maomao9173/1317473/o_flow.JPG)\n\n#### \u5f88\u663e\u7136\uff0c\u8fd9\u5f20\u56fe\u662f\u53ef\u4ee5\u6ee1\u8db3\u4e0a\u9762\u7684\u6027\u8d28\u7684\u3002\u6211\u4eec\u8fd9\u6837\u8fde\u8fb9\u6765\u770b\u4e00\u4e0b\u3002\n\n- $s -> art\\_same(i, j)$&emsp;$flow = art\\_ex[i][j]$ \n\n- $art\\_same(i, j) -> linked\\_nodes$&emsp;$flow = INFF$\n\n#### \u601d\u8003\u4e00\u4e0b\uff0c\u5047\u5982\u6211\u4eec\u5272\u6389\u4e86$art$\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u90a3\u4e48$sci$\u90a3\u8fb9\u4e00\u5b9a\u6709\u5bf9\u5e94\u7684\u8fb9\u6ca1\u6709\u5272\u6389\uff0c\u8fd9\u6837\u6211\u4eec\u7684$art\\_same[1]$\u5c31\u4f1a\u987a\u7740\u6ca1\u6709\u88ab\u5272\u6389\u7684\u8fb9\u6d41\u8d70\u5566$QwQ$(\u4e5f\u5c31\u662f\u8fd8\u662f\u88ab\u5272\u6389\u4e86$QwQ$)\n\n#### \u540c\u7406\uff0c\u7406\u79d1\u90a3\u8fb9\u548c\u66f4\u591a\u70b9\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u56fe\u90fd\u662f\u9002\u7528\u7684\u3002\n\n#### \u5173\u952e\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4ef6\u4e8b\u60c5\uff1a\u5728\u5efa\u56fe\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u51fa\u73b0$art\\_same[i]$\u592a\u5927\u800c\u53e6\u5916\u4e00\u8fb9\u7684\u6d41\u91cf\u592a\u5c0f\uff0c\u65e0\u6cd5\u5b8c\u5168\u5272\u65ad\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8981\u7ed9\u5b83\u52a0\u4e0a\u4e00\u4e2a$INF$\uff0c\u5728\u6700\u540e\u6c42\u548c\u7684\u65f6\u5019\u518d\u51cf\u6389\u3002\u800c\u4e14\u8fd9\u4e2a$INF$\u4e00\u5b9a\u8981\u4f4e\u4e8e$INFF$\u7684\u6570\u91cf\u7ea7\uff0c\u4e2d\u95f4\u7684\u8fb9\u4e00\u5b9a\u8981\u4fdd\u8bc1\u662f\u4e0d\u80fd\u5272\u6389\u7684\uff01\u8fd9\u4e00\u70b9\u76f8\u5f53\u91cd\u8981\u3002\n\n#### \u8fd9\u79cd\u56fe\u662f\u4e00\u79cd\u975e\u5e38\u91cd\u8981\u7684\u6700\u5c0f\u5272\u6a21\u578b\u56fe\uff0c\u4e00\u5b9a\u8981\u4f1a\u554a$QwQ$\n\n```cpp\n#include <bits/stdc++.h>\n#define N 30100\n#define M 480010\n#define int long long\nusing namespace std;\n\nconst int INF = 0x3f3f3f3f;\nconst int INFF = 0x3f3f3f3f3f3f3f3fll;\n\nint n, m, art[105][105], sci[105][105];\nint art_ex[105][105], sci_ex[105][105];\n\nint node (int x, int y) {return (x - 1) * m + y;}\nint same_art (int x, int y) {return n * m * 1 + node (x, y);} \nint same_sci (int x, int y) {return n * m * 2 + node (x, y);}\n\nint mv[5][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\n\nbool in_map (int x, int y) {\n\treturn 1 <= x && x <= n && 1 <= y && y <= m;\n}\n\nint cnt = -1, head[N];\n\nstruct edge {\n\tint nxt, to, f;\n}e[M];\n\nvoid add_edge (int from, int to, int flw) {\n\te[++cnt].nxt = head[from];\n\te[cnt].to = to;\n\te[cnt].f = flw;\n\thead[from] = cnt;\n}\n\nqueue <int> q;\n#define fpop(x) x.front();x.pop()\n\nint cur[N], deep[N];\n\nbool bfs (int s, int t) {\n\tmemcpy (cur, head, sizeof (head));\n\tmemset (deep, 0x3f, sizeof (deep));\n\tdeep[s] = 1; q.push (s);\n\twhile (!q.empty ()) {\n\t\tint u = fpop (q);\n\t\tfor (int i = head[u]; ~i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tif (e[i].f && deep[v] == INFF) {\n\t\t\t\tdeep[v] = deep[u] + 1;\n\t\t\t\tq.push (v);\n\t\t\t}\n\t\t}\n\t}\n\treturn deep[t] != INFF;\n}\n\nint dfs (int u, int t, int lim) {\n\tif (u == t || !lim) {\n\t\treturn lim;\n\t}\n\tint tmp = 0, flow = 0;\n\tfor (int &i = cur[u]; ~i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif (deep[v] == deep[u] + 1) {\n\t\t\ttmp = dfs (v, t, min (lim, e[i].f));\n\t\t\tlim -= tmp;\n\t\t\tflow += tmp;\n\t\t\te[i ^ 0].f -= tmp;\n\t\t\te[i ^ 1].f += tmp;\n\t\t\tif (!lim) break;\n\t\t}\n\t}\n\treturn flow;\n}\n\nint Dinic (int s, int t) {\n\tint min_cut = 0;\n\twhile (bfs (s, t)) {\n\t\tmin_cut += dfs (s, t, INFF);\n\t}\n\treturn min_cut;\n}\n\nsigned main () {\n\tmemset (head, -1, sizeof (head));\n\tcin >> n >> m;\n\tint s = n * m * 3 + 1, t = n * m * 3 + 2;\n\tfor (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) cin >> art[i][j];\n\tfor (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) cin >> sci[i][j];\n\tfor (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) cin >> art_ex[i][j];\n\tfor (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) cin >> sci_ex[i][j];\n\t\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 1; j <= m; ++j) {\n\t\t\tadd_edge (s, node (i, j), art[i][j]); add_edge (node (i, j), s, 0);\n\t\t\tadd_edge (node (i, j), t, sci[i][j]); add_edge (t, node (i, j), 0);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 1; j <= m; ++j) {\n\t\t\tadd_edge (s, same_art (i, j), art_ex[i][j]); add_edge (same_art (i, j), s, 0);\n\t\t\tadd_edge (same_sci (i, j), t, sci_ex[i][j]); add_edge (t, same_sci (i, j), 0);\n\t\t\tfor (int k = 0; k < 5; ++k) {\n\t\t\t\tint tx = i + mv[k][0], ty = j + mv[k][1];\n\t\t\t\tif (in_map (tx, ty)) {\n\t\t\t\t\tadd_edge (same_art (i, j), node (tx, ty), INFF); add_edge (node (tx, ty), same_art (i, j), 0);\n\t\t\t\t\tadd_edge (node (tx, ty), same_sci (i, j), INFF); add_edge (same_sci (i, j), node (tx, ty), 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0;// n * m * INF;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 1; j <= m; ++j) {\n\t\t\tans += art[i][j] + sci[i][j] + art_ex[i][j] + sci_ex[i][j];\n\t\t}\n\t}\n\tcout << ans - Dinic (s, t) << endl;\n} \n```",
        "postTime": 1550324438,
        "uid": 58698,
        "name": "Nativ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4313 \u3010\u6587\u7406\u5206\u79d1\u3011"
    },
    {
        "content": "# P4313 \u3010\u6587\u7406\u5206\u79d1\u3011\n[$\\color{green}{\\text{\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c}}$](https://chen-jia-liang.gitee.io/blog/2020/07/14/%E9%A2%98%E8%A7%A3-P4313-%E3%80%90%E6%96%87%E7%90%86%E5%88%86%E7%A7%91%E3%80%91/)\n## \u9898\u610f\n\u6bcf\u4e2a\u4eba\u9009\u6587\u79d1\u6216\u7406\u79d1\u53ef\u4ee5\u6709\u6ee1\u610f\u503c\uff0c\u51e0\u4e2a\u4eba\u540c\u65f6\u9009\u6587\u79d1\u6216\u7406\u79d1\u4e5f\u53ef\u4ee5\u83b7\u5f97\u6ee1\u610f\u503c\uff0c\u6c42\u6ee1\u610f\u503c\u7684\u6700\u5927\u503c\u3002\n\n~~??\u4e3a\u4ec0\u4e48\u6587\u79d1\u662fart~~\n## \u9898\u89e3\n\u770b\u5230\u8fd9\u7c7b**\u4e8c\u8005\u9009\u5176\u4e00**\u7684\u6a21\u578b\uff0c\u6211\u4eec\u80af\u5b9a\u80fd\u60f3\u5230**\u6700\u5c0f\u5272**\u3002\u9996\u5148\uff0c\u6211\u4eec\u5148\u4ece\u77e9\u9635\u4e2d\u62ff\u51fa\u5c0f\u76c6\u53cb$A$\u548cTA\u7684\u76f8\u90bb\u540c\u5b66$B$\u3001$C$\u3001$D$\u3001$E$\uff0c\u603c\u5230\u56fe\u4e0a\uff0c\u5728\u753b\u4e0a\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u5206\u522b\u4ee3\u8868\u6587\u79d1\u548c\u7406\u79d1\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/k49sl0e3.png)\n\n\u5047\u8bbe\u6ca1\u6709\u989d\u5916\u7684\u5feb\u4e50\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u8fde\u8fb9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/uattarp3.png)\n\n\u5982\u679c\u6211\u4eec\u5272\u53bb\u4e00\u6761\u8fb9\uff0c\u5c31\u4ee3\u8868\u7740\u4e0d\u9009\u6587\u79d1/\u7406\u79d1\uff0c\u82e5\u56fe\u4e0d\u8fde\u901a\uff0c\u5219\u4ee3\u8868\u6bcf\u4e2a\u70b9\u53ea\u4e0e\u6e90\u70b9\u6216\u6c47\u70b9\u8054\u901a\uff0c**\u5373\u6bcf\u4e2a\u4eba\u53ea\u9009\u6587\u79d1\u6216\u7406\u79d1**\u3002\u7136\u540e\u6211\u4eec\u518d\u53bb\u8003\u8651$same$\u503c\uff0c\u663e\u7136\uff0c\u6211\u4eec\u5982\u679c\u9009\u4e86\u4e00\u6761$science$\u7684\u8fb9\uff0c\u5c31\u8981\u628a$same\\ art$\u5220\u6389\uff1b\u540c\u7406\uff0c\u6211\u4eec\u5982\u679c\u9009\u4e86\u4e00\u6761$art$\u7684\u8fb9\uff0c\u5c31\u8981\u628a$same\\ science$\u5220\u6389\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u4e0a\u4e24\u4e2a\u865a\u70b9\uff0c\u8fde\u4e0a\u8fb9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/d2c6o2gz.png)\n\n\u5efa\u5b8c\u4e86\u56fe\u5269\u4e0b\u7684\u4ee3\u7801\u5c31\u7b80\u5355\u4e86\n## \u4ee3\u7801\n```cpp\n#pragma optimize(2)\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace in{\n\tchar buf[1<<21],*p1=buf,*p2=buf;\n\tinline int getc(){\n\t    return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;\n\t}\n\ttemplate <typename T>inline void read(T& t){\n\t    t=0;int f=0;char ch=getc();\n\t    while (!isdigit(ch)){\n\t        if(ch=='-')f = 1;\n\t        ch=getc();\n\t    }\n\t    while(isdigit(ch)){\n   \t    \tt=t*10+ch-48;\n   \t    \tch = getc();\n   \t\t}\n\t\tif(f)t=-t;\n\t}\n\ttemplate <typename T,typename... Args> inline void read(T& t, Args&... args){\n\t    read(t);read(args...);\n\t}\n}\nnamespace out{\n\tchar buffer[1<<21];\n\tint p1=-1;\n\tconst int p2 = (1<<21)-1;\n\tinline void flush() {\n\t\tfwrite(buffer,1,p1+1,stdout),\n\t\tp1=-1;\n\t}\n\tinline void putc(const char &x) {\n\t\tif(p1==p2)flush();\n\t\tbuffer[++p1]=x;\n\t}\n\ttemplate <typename T>void write(T x) {\n\t\tstatic char buf[15];\n\t\tstatic int len=-1;\n\t\tif(x>=0){\n\t\t\tdo{\n    \t\t\tbuf[++len]=x%10+48,x/=10;\n    \t\t}while (x);\n\t\t}else{\n    \t\tputc('-');\n\t\t\tdo {\n    \t\t\tbuf[++len]=-(x%10)+48,x/=10;\n\t\t\t}while(x);\n\t\t}\n\t\twhile (len>=0)\n\t\t\tputc(buf[len]),--len;\n\t}\n}\nconst int maxn=4000010,maxe=100010*2;\nstruct Graph{\n\tstruct node{\n\t\tint v,w,nxt;\n\t}e[maxe<<1];\n\tint head[maxn],cur[maxn],tot;\n\tint dis[maxn];\n\tint s,t;\n\tvoid init(int _s,int _t){s=_s,t=_t;tot=1;memset(head,0,sizeof head);}\n\tGraph(int _s=0,int _t=0){init(_s,_t);}\n\tvoid add(int u,int v,int w){\n\t\t//printf(\"%d %d %d\\n\",u,v,w);\n\t\te[++tot]=(node){v,w,head[u]},head[u]=tot;\n\t\te[++tot]=(node){u,0,head[v]},head[v]=tot;\n\t}\n\t#define v e[i].v\n\tinline bool bfs(){\n\t\tqueue<int>q;\n\t\tmemset(dis,0,sizeof dis);\n\t\tmemcpy(cur,head,sizeof head);\n\t\tdis[s]=1;q.push(s);\n\t\twhile(q.size()){\n\t\t\tint u=q.front();q.pop();\n\t\t\tfor(int i=head[u];i;i=e[i].nxt)\n\t\t\t\tif(!dis[v]&&e[i].w){\n\t\t\t\t\tdis[v]=dis[u]+1,q.push(v);\n\t\t\t\t\tif(v==t)return true;\n\t\t\t\t}\n\t\t}\n\t\treturn  false;\n\t}\n\tint dfs(int u,int flow){\n\t\tif(u==t)return flow;\n\t\tint rest=flow;\n\t\tfor(int i=cur[u];i&&rest;i=e[i].nxt){\n\t\t\tif(dis[v]==dis[u]+1&&e[i].w){\n\t\t\t\tint tmp=dfs(v,min(rest,e[i].w));\n\t\t\t\trest-=tmp,e[i].w-=tmp,e[i^1].w+=tmp;\n\t\t\t}\n\t\t\tcur[u]=i;\n\t\t}\n\t\tif(rest==0)dis[u]=-1;\n\t\treturn flow-rest;\n\t}\n\t#undef v\n\tint dinic(){\n\t\tint ans=0;\n\t\twhile(bfs())\n\t\t\twhile(int sth=dfs(s,2e9))\n\t\t\t\tans+=sth;\n\t\treturn ans;\n\t}\n}G;\nint n,m,x;\nint sum,tot;\nbool check(int x,int y){\n\treturn x<=n&&x>=1&&y<=m&&y>=1;\n}\n#define P(i,j) ((i)-1)*m+(j)\nsigned main(){\n\t//freopen(\"1.in\",\"r\",stdin);\n\tin::read(n,m);\n\ttot=n*m;G.init(0,++tot);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tin::read(x);sum+=x;\n\t\t\tG.add(G.s,P(i,j),x);\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tin::read(x);sum+=x;\n\t\t\tG.add(P(i,j),G.t,x);\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tin::read(x);sum+=x;\n\t\t\tG.add(G.s,++tot,x);\n\t\t\tG.add(tot,P(i,j),1e9);\n\t\t\tif(check(i,j-1))G.add(tot,P(i,j-1),1e9);\n\t\t\tif(check(i,j+1))G.add(tot,P(i,j+1),1e9);\n\t\t\tif(check(i-1,j))G.add(tot,P(i-1,j),1e9);\n\t\t\tif(check(i+1,j))G.add(tot,P(i+1,j),1e9);\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tin::read(x);sum+=x;\n\t\t\tG.add(++tot,G.t,x);\n\t\t\tG.add(P(i,j),tot,1e9);\n\t\t\tif(check(i,j-1))G.add(P(i,j-1),tot,1e9);\n\t\t\tif(check(i,j+1))G.add(P(i,j+1),tot,1e9);\n\t\t\tif(check(i-1,j))G.add(P(i-1,j),tot,1e9);\n\t\t\tif(check(i+1,j))G.add(P(i+1,j),tot,1e9);\n\t\t}\n\tout::write(sum-G.dinic());\n\tout::flush();\n}\n```\n## \u4e3e\u4e00\u53cd\u4e09\n[happiness](https://www.luogu.com.cn/problem/P1646)\n\n[\u5c0fM\u7684\u4f5c\u7269](https://www.luogu.com.cn/problem/P1361)",
        "postTime": 1594706849,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4313 \u3010\u6587\u7406\u5206\u79d1\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4eba\uff0c\u8981\u4e48\u9009\u6587\u79d1\uff0c\u8981\u4e48\u9009\u7406\u79d1\uff0c\u5178\u578b\u7684\u975e\u9ed1\u5373\u767d\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6700\u5c0f\u5272\u6765\u89e3\u51b3\u3002\n\n\u53c8\u56e0\u4e3a\u6700\u5927\u6d41=\u6700\u5c0f\u5272\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u7f51\u7edc\u6d41\u6765\u89e3\u51b3\n\n\u4f46\u662f\u6211\u4eec\u600e\u4e48\u5efa\u8fb9\u5462\uff1f\n\n\u56e0\u4e3a\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u6587\u7406\u5e73\u7b49\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u6587\u79d1\u9760\u8fd1\u6e90\u70b9\uff0c\u7406\u79d1\u9760\u8fd1\u6c47\u70b9\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2asame\u503c\uff0c\u6211\u4eec\u53ea\u8981\u6709\u4e00\u4e2a\u5bf9\u5e94\u70b9\u9009\u4e86\u53e6\u4e00\u4e2a\u79d1\u76ee\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5fc5\u987b\u628asame\u503c\u526a\u6389\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u8be5\u8fb9\u88ab\u5272\uff0c\u5219\u8bf4\u660e\u8fd9\u4e9b\u4eba\u4e0d\u540c\u65f6\u9009\u4e00\u4e2a\u79d1\u76ee\uff0c\u4e0d\u80fd\u83b7\u5f97\u540c\u65f6\u9009\u8fd9\u95e8\u79d1\u76ee\u53ef\u83b7\u5f97\u7684\u6536\u76ca\u3002\n\n\u6211\u4eec\u8fd8\u9700\u8981\u4fdd\u8bc1\u4e0d\u5272\u8fd9\u6761\u8fb9\u5219\u5fc5\u7136\u90fd\u9009\u8fd9\u4e2a\u79d1\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06$(i,j)$\u2019\u5411\u76f8\u90bb\u7684\u90a3\u51e0\u4e2a\u70b9\u5bf9\u5e94\u7684\u8fde\u4e00\u6761\u8fb9\uff0c\u957f\u5ea6\u4e3ainf\n\n\u8fd9\u6761\u8fb9\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u5272\u6389\uff0c\u4e5f\u5c31\u4fdd\u8bc1\u4e86\u5728\u90fd\u9009\u62e9\u76f8\u540c\u79d1\u76ee\u7684\u6536\u76ca\u7684\u8fb9\u4e0d\u88ab\u5272\u65f6\uff0c\u53e6\u4e00\u4e2a\u79d1\u76ee\u7684\u8fb9\u4f1a\u88ab\u5272\u6389\uff08\u4e0d\u7136\u4f1a\u6709\u6d41\u91cf\u4e00\u76f4\u6d41\uff09\u3002\n\n### \u5177\u4f53\u8fde\u8fb9\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\u4ee4S\u96c6\u8868\u793a\u5b66\u6587\uff0cT\u96c6\u8868\u793a\u5b66\u7406\n\n$S$\u5411$(i,j)$\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$art[i][j]$\u7684\u8fb9\n\n$(i,j)$\u5411$T$\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$science[i][j]$\u7684\u8fb9\n\n\u5bf9\u4e8e\u989d\u5916\u6536\u76ca\uff0c\u65b0\u5efa\u4e00\u4e2a\u70b9$(i,j)$\u2019\uff0c\u5411$(i,j)$\u548c\u76f8\u90bb\u56db\u4e2a\u70b9\u5404\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u65e0\u7a77\u7684\u8fb9\n\n$S$\u5411$(i,j)$\u2019\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$same_art[i][j]$\u7684\u8fb9\n\n\u540c\u65f6\u9009\u7406\u79d1\u7684\u989d\u5916\u6536\u76ca\u540c\u7406\n\n\u6bcf\u4e2a\u6700\u5c0f\u5272\u5bf9\u5e94\u4e00\u79cd\u65b9\u6848\n\n\u7b54\u6848\u5c31\u662fsum-\u6700\u5c0f\u5272\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define re register\n#define debug printf(\"Now is Line : %d\\n\",__LINE__)\n#define file(a) freopen(#a\".in\",\"r\",stdin);freopen(#a\".out\",\"w\",stdout)\n#define inf 1234567890 \n#define mod 1000000007\nil int read()\n{\n    re int x=0,f=1;re char c=getchar();\n    while(c<'0'||c>'9') {if(c=='-') f=-1;c=getchar();}\n    while(c>='0'&&c<='9') x=x*10+c-48,c=getchar();\n    return x*f;\n}\n#define maxn 105*105*3\nstruct edge\n{\n    int v,w,next;\n}e[maxn*10];\nint fx[5]={1,-1,0,0,0};\nint fy[5]={0,0,1,-1,0};\nint n,m,head[maxn],cnt=1,S,T,cur[maxn],dep[maxn],sum;\nint art,sci,saa,sas; \nqueue<int>q;\nil void add(int u,int v,int w)\n{\n    e[++cnt]=(edge){v,w,head[u]};\n    head[u]=cnt;\n    e[++cnt]=(edge){u,0,head[v]};\n    head[v]=cnt;\n}\nil void doit(int x,int y)\n{\n    for(re int i=0;i<5;++i)\n    {\n        int nx=x+fx[i],ny=y+fy[i];\n        if(nx<1||ny<1||nx>n||ny>m) continue;\n        add(n*m+(nx-1)*m+ny,(x-1)*m+y,inf);\n        add((x-1)*m+y,2*n*m+(nx-1)*m+ny,inf);\n    }\n}\nil bool bfs()\n{\n    memset(dep,0,sizeof(dep));\n    memcpy(cur,head,sizeof(head));\n    q.push(S); dep[S]=1;\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(re int i=head[u];i;i=e[i].next)\n        {\n            int v=e[i].v;\n            if(!dep[v]&&e[i].w>0)\n            {\n                dep[v]=dep[u]+1;\n                q.push(v);\n            }\n        }\n    }\n    return dep[T]!=0;\n}\nil int dfs(int u,int mi)\n{\n    if(u==T) return mi;\n    int ans=0;\n    for(re int i=cur[u];i;i=e[i].next)\n    {\n        cur[u]=i;\n        int v=e[i].v;\n        if(e[i].w>0&&dep[v]==dep[u]+1)\n        {\n            int low=dfs(v,min(mi,e[i].w));\n            if(low>0)\n            {\n                e[i].w-=low,e[i^1].w+=low;\n                mi-=low; ans+=low;\n            }\n        }\n    }\n    return ans;\n}\nil int dinic()\n{\n    int low,ans=0;\n    while(bfs())\n    {\n        while(low=dfs(S,inf)) ans+=low;\n    }\n    return ans;\n}\nint main()\n{\n    n=read(),m=read(); T=3*n*m+1;\n    for(re int i=1;i<=n;++i) for(re int j=1;j<=m;++j) \n    art=read(),add(S,(i-1)*m+j,art),sum+=art;\n    for(re int i=1;i<=n;++i) for(re int j=1;j<=m;++j) \n    sci=read(),add((i-1)*m+j,T,sci),sum+=sci;\n    for(re int i=1;i<=n;++i) for(re int j=1;j<=m;++j) \n    saa=read(),add(S,n*m+(i-1)*m+j,saa),sum+=saa;\n    for(re int i=1;i<=n;++i) for(re int j=1;j<=m;++j) \n    sas=read(),add(2*n*m+(i-1)*m+j,T,sas),sum+=sas;\n    for(re int i=1;i<=n;++i) for(re int j=1;j<=m;++j) doit(i,j);\n    printf(\"%d\",sum-dinic());\n    return 0;\n}\n```",
        "postTime": 1548681132,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4313 \u3010\u6587\u7406\u5206\u79d1\u3011"
    },
    {
        "content": "# \u9898\u89e3\u2014\u2014P4313 \u6587\u7406\u5206\u79d1\r\n\r\n\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u4f3c\u4e4e\u6ca1\u6709\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u505a\u6cd5\u3002\r\n\r\n\u53d1\u4e00\u7bc7\u9898\u89e3\uff0c\u5e0c\u671b\u7ba1\u7406\u5927\u5927\u80fd\u7ed9\u8fc7\u3002\r\n\r\n\u4e2a\u4eba\u8ba4\u4e3a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u8981\u597d\u7406\u89e3\u4e00\u4e9b\u3002\r\n\r\n## \u524d\u7f6e\u77e5\u8bc6\r\n\r\n\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\r\n\r\n\u5982\u679c\u60a8\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\uff0c\u60a8\u53ef\u4ee5\u53bb\u770b\u770b[P2762 \u592a\u7a7a\u98de\u884c\u8ba1\u5212\u95ee\u9898](https://www.luogu.com.cn/problem/P2762)\r\n\r\n## \u9898\u610f\r\n\r\n\u6709 $n\\times m$ \u4e2a\u4eba\uff0c\u5728\u4e00\u4e2a $n\\times m$ \u7684\u77e9\u9635\u4e2d\u3002\r\n\r\n- \u5982\u679c\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u7684\u540c\u5b66\u9009\u62e9\u4e86\u6587\u79d1\uff0c\u5219\u4ed6\u5c06\u83b7\u5f97 $art_{i,j}$ \u7684\u6ee1\u610f\u503c\uff0c\u5982\u679c\u9009\u62e9\u7406\u79d1\uff0c\u5c06\u5f97\u5230 $science_{i,j}$ \u7684\u6ee1\u610f\u503c\u3002\r\n\r\n- \u5982\u679c\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u7684\u540c\u5b66\u9009\u62e9\u4e86\u6587\u79d1\uff0c\u5e76\u4e14\u4ed6\u76f8\u90bb\u7684\u540c\u5b66\u5168\u90e8\u9009\u62e9\u4e86\u6587\u79d1\uff0c\u5219\u589e\u52a0 $sameart_{i,j}$ \u7684\u6ee1\u610f\u503c\u3002\r\n\r\n- \u5982\u679c\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u7684\u540c\u5b66\u9009\u62e9\u4e86\u7406\u79d1\uff0c\u5e76\u4e14\u4ed6\u76f8\u90bb\u7684\u540c\u5b66\u5168\u90e8\u9009\u62e9\u4e86\u7406\u79d1\uff0c\u5219\u589e\u52a0 $samescience_{i,j}$ \u7684\u6ee1\u610f\u503c\u3002\r\n\r\n\u6c42\u603b\u6ee1\u610f\u503c\u6700\u5927\u53ef\u80fd\u662f\u591a\u5c11\u3002\r\n\r\n## \u601d\u8def\r\n\r\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u8003\u8651\u5148\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u4e00\u4e2a\u8868\u793a\u9009\u62e9\u6587\u79d1\uff0c\u4e00\u4e2a\u8868\u793a\u9009\u62e9\u7406\u79d1\uff0c\u90a3\u4e48\u6307\u5b9a\u4f1a\u9009\u91cd\u3002\r\n\r\n\u4e8e\u662f\uff0c\u6211\u4eec\u5047\u5b9a\u521d\u59cb\u6240\u6709\u4eba\u90fd\u9009\u7684\u6587\u79d1\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651~~\u7b56\u53cd~~\u8ba9\u4e00\u90e8\u5206\u4eba\u9009\u62e9\u7406\u79d1\u3002\r\n\r\n\u8003\u8651\u4e00\u4e2a\u4eba\u4ece\u6587\u79d1\u6539\u6210\u7406\u79d1\u4f1a\u4ea7\u751f\u54ea\u4e9b\u8d21\u732e\u3002\r\n\r\n1. \u9996\u5148\uff0c\u4f1a\u76f4\u63a5\u83b7\u5f97 $science_{i,j}-art_{i,j}$ \u7684\u6536\u76ca\u3002\r\n2. \u5176\u6b21\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u4eba\u672c\u8eab\u4e0d\u518d\u662f\u6587\u79d1\u751f\uff0c\u6240\u4ee5\u4ed6\u81ea\u5df1\u7684 $sameart$ \u6d88\u5931\u3002\r\n3. \u56e0\u4e3a\u8fd9\u4e2a\u4eba\u4e0d\u518d\u9009\u62e9\u6587\u79d1\uff0c\u6240\u4ee5\u4ed6\u5468\u56f4\u7684\u56db\u4e2a\u70b9\u4e0d\u518d\u6ee1\u8db3 $sameart$ \u7684\u751f\u6548\u6761\u4ef6\uff0c\u6240\u4ee5\u8fd9\u4e9b\u70b9\u7684 $sameart$ \u6d88\u5931\u3002\r\n\r\n\u6240\u4ee5\uff0c\u6211\u4eec\u77e5\u9053\u4e86\uff0c\u5982\u679c\u73b0\u5728\u9009\u62e9\u8ba9\u4e00\u4e2a\u4eba\u9009\u62e9\u7406\u79d1\uff0c\u5468\u56f4\u8fd9 $5$ \u4e2a\u70b9\u7684 $sameart$ \u5c31\u4f1a\u6d88\u5931\u3002\r\n\r\n\u7136\u540e\u8003\u8651 $samescience$ \u7684\u8d21\u732e\u3002\r\n\r\n1. \u9996\u5148\uff0c\u6211\u4eec\u4e00\u5b9a\u4f1a\u5f97\u5230 $samescience_{i,j}$ \u7684\u6536\u76ca\u3002\r\n2. \u5176\u6b21\uff0c\u8fd9\u4e2a\u70b9\u9644\u8fd1\u7684\u4e94\u4e2a\u70b9\u90fd\u8981\u9009\u62e9\u7406\u79d1\u3002\r\n\r\n\u4e8e\u662f\uff0c\u6211\u4eec\u8003\u8651\u5c06\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e09\u4e2a\uff1a\r\n\r\n1. \u4ef7\u503c\u4e3a $science_{i,j}-art_{i,j}$ \u7684\u70b9\uff0c\u8868\u793a\u4e00\u4e2a\u4eba\u4ece\u6587\u79d1\u6539\u6210\u7406\u79d1\u53ef\u4ee5\u76f4\u63a5\u83b7\u5f97\u7684\u6536\u76ca\u3002\r\n2. \u4ef7\u503c\u4e3a $-sameart_{i,j}$ \u7684\u70b9\uff0c\u8868\u793a\u5468\u56f4\u51e0\u4e2a\u70b9\u9009\u62e9\u7406\u79d1\u7684\u989d\u5916\u4e8f\u635f\u3002\r\n3. \u4ef7\u503c\u4e3a $samescience_{i,j}$ \u7684\u70b9\uff0c\u8868\u793a\u5468\u56f4\u51e0\u4e2a\u70b9\u90fd\u9009\u62e9\u7406\u79d1\u7684\u989d\u5916\u6536\u76ca\u3002\r\n\r\n\u7136\u540e\u5c31\u53ef\u4ee5\u5957\u7528\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u4e86\r\n\r\n1. \u5982\u679c\u6211\u8981\u9009\u62e9\u4e00\u4e2a\u70b9\u7684 $1$ \u7c7b\u70b9\uff0c\u6211\u5c31\u8981\u9009\u62e9\u5468\u56f4\u8fd9 $5$ \u4e2a\u70b9\u7684 $2$ \u7c7b\u70b9\u3002\r\n2. \u5982\u679c\u6211\u8981\u9009\u62e9\u4e00\u4e2a\u70b9\u7684 $3$ \u7c7b\u70b9\uff0c\u6211\u5c31\u8981\u9009\u62e9\u8fd9\u4e2a\u70b9\u5468\u56f4\u7684 $5$ \u4e2a $1$ \u7c7b\u70b9\u3002\r\n\r\n\u8fd9\u6b63\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u6a21\u578b\u3002\r\n\r\n\u7136\u540e\uff0c\u76f4\u63a5\u5efa\u56fe\u8dd1\u7f51\u7edc\u6d41\u5373\u53ef\u3002\r\n\r\n\u6ce8\u610f\uff0c\u56e0\u4e3a\u6211\u4eec\u8ba1\u7b97\u7684\u662f\u76f8\u5bf9\u4e8e\u5168\u9009\u6587\u79d1\u7684\u8d21\u732e\uff0c\u6240\u4ee5\u5f97\u5230\u7b54\u6848\u540e\u8981\u52a0\u4e0a\u5168\u9009\u6587\u79d1\u7684\u6536\u76ca\u3002\r\n\r\n## \u4ee3\u7801\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\ninline int read(){\r\n\tint ans=0,op=0;\r\n\tchar ch=getchar();\r\n\twhile(ch<'0'||ch>'9'){if(ch=='-')op=1;ch=getchar();}\r\n\twhile(ch>='0'&&ch<='9'){ans=(ans<<3)+(ans<<1)+(ch^48);ch=getchar();}\r\n\tif(op)ans=-ans;\r\n\treturn ans;\r\n}\r\nconst int maxn=110;\r\nconst int maxnode=3e4+10;\r\nconst int dx[]={0,0,1,-1};\r\nconst int dy[]={1,-1,0,0};\r\nconst int inf=0x3f3f3f3f;\r\nint n,m;\r\nint ar[maxn][maxn],sc[maxn][maxn],sa[maxn][maxn],ss[maxn][maxn];\r\nint num[maxn][maxn];//\u6bcf\u4e2a\u70b9\u7684\u7f16\u53f7\r\nint node=0;//\u70b9\u6570\u8ba1\u6570\u5668\r\nint ans=0;//\u5168\u9009\u6587\u79d1\u7684\u7b54\u6848\r\nint s,t;\r\nstruct edge{\r\n\tint u,v,f,nxt;\r\n}e[maxnode<<5];\r\nint fst[maxnode],ce=0;\r\nint dep[maxnode],gap[maxnode];\r\nint maxflow=0;\r\nint ex;\r\nvoid add(int u,int v,int f){\r\n\te[ce]=(edge){u,v,f,fst[u]};\r\n\tfst[u]=ce++;\r\n\te[ce]=(edge){v,u,0,fst[v]};\r\n\tfst[v]=ce++;\r\n}\r\nvoid build(){\r\n\tmemset(fst,-1,sizeof(fst));\r\n\ts=0,t=node*3+1;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tfor(int j=1;j<=m;j++){\r\n\t\t\tint val=sc[i][j]-ar[i][j];//\u6539\u6210\u7406\u79d1\u7684\u76f4\u63a5\u8d21\u732e\r\n\t\t\tif(val>=0)add(s,num[i][j],val),ex+=val;\r\n\t\t\telse add(num[i][j],t,-val);\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tfor(int j=1;j<=m;j++){\r\n\t\t\tadd(num[i][j],num[i][j]+node,inf);\r\n\t\t\tadd(num[i][j]+node,t,sa[i][j]);//\u6539\u6210\u7406\u79d1\u7684\u989d\u5916\u4e8f\u635f\r\n\t\t\tfor(int dir=0;dir<4;dir++){\r\n\t\t\t\tint nx=i+dx[dir],ny=j+dy[dir];\r\n\t\t\t\tif(nx<1||nx>n||ny<1||ny>m)continue;\r\n\t\t\t\tadd(num[i][j],num[nx][ny]+node,inf);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tfor(int j=1;j<=m;j++){\r\n\t\t\tadd(num[i][j]+(node<<1),num[i][j],inf);\r\n\t\t\tadd(s,num[i][j]+(node<<1),ss[i][j]);//\u6539\u6210\u7406\u79d1\u7684\u989d\u5916\u6536\u76ca\r\n\t\t\tex+=ss[i][j];\r\n\t\t\tfor(int dir=0;dir<4;dir++){\r\n\t\t\t\tint nx=i+dx[dir],ny=j+dy[dir];\r\n\t\t\t\tif(nx<1||nx>n||ny<1||ny>m)continue;\r\n\t\t\t\tadd(num[i][j]+(node<<1),num[nx][ny],inf);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\ninline void bfs(){//isap\r\n\tmemset(dep,-1,sizeof(dep));\r\n\tmemset(gap,0,sizeof(gap));\r\n\tqueue<int>q;\r\n\tdep[t]=0;\r\n\tq.push(t);\r\n\twhile(!q.empty()){\r\n\t\tregister int now=q.front();q.pop();\r\n\t\t++gap[dep[now]];\r\n\t\tfor(register int i=fst[now];~i;i=e[i].nxt){\r\n\t\t\tif(e[i^1].f<=0||~dep[e[i].v])continue;\r\n\t\t\tdep[e[i].v]=dep[now]+1;\r\n\t\t\tq.push(e[i].v);\r\n\t\t}\r\n\t}\r\n}\r\ninline int dfs(register int now,int sum){//isap\r\n\tif(now==t||sum==0)return sum;\r\n\tregister int ans=0;\r\n\tfor(register int i=fst[now];~i;i=e[i].nxt){\r\n\t\tif(e[i].f<=0||dep[e[i].v]+1!=dep[now])continue;\r\n\t\tregister int flow=dfs(e[i].v,min(e[i].f,sum));\r\n\t\te[i].f-=flow;\r\n\t\te[i^1].f+=flow;\r\n\t\tsum-=flow;\r\n\t\tans+=flow;\r\n\t\tif(!sum)return ans;\r\n\t}\r\n\tif(!--gap[dep[now]])dep[s]=t+1;\r\n\t++gap[++dep[now]];\r\n\treturn ans;\r\n}\r\ninline int isap(){//isap\r\n\tmaxflow=0;\r\n\tbfs();\r\n\twhile(dep[s]<=t)maxflow+=dfs(s,inf);\r\n\treturn maxflow;\r\n}\r\nsigned main(){\r\n\tn=read(),m=read();\r\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)ar[i][j]=read();\r\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)sc[i][j]=read();\r\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)sa[i][j]=read();\r\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)ss[i][j]=read();\r\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)num[i][j]=++node;\r\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)ans+=ar[i][j];\r\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)ans+=sa[i][j];\r\n\tbuild();//\u5efa\u56fe\r\n\tisap();//isap\u7f51\u7edc\u6d41\r\n\tcout<<ans+ex-maxflow;//\u8ba1\u7b97\u7b54\u6848\u5e76\u8f93\u51fa\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1681004364,
        "uid": 401461,
        "name": "Augury",
        "ccfLevel": 5,
        "title": "\u9898\u89e3\u2014\u2014P4313 \u6587\u7406\u5206\u79d1"
    },
    {
        "content": "\u5b89\u5229\u4e2a\u4eba blog\uff1ahttps://www.cnblogs.com/ET2006/\n\n\u78b0\u5230\u8fd9\u79cd\u975e A \u5373 B \u7684\u7c7b\u578b\u7684\u9898\u76ee\uff0c\u5f53\u7136\u7528\u6700\u5c0f\u5272\u54af\uff01\n\n\u8003\u8651\u8fd9\u6837\u5efa\u56fe\uff1a\n\n1. \u4ece $S$ \u5411\u6bcf\u4e2a\u70b9\u8fde\u5bb9\u91cf\u4e3a $art_{i,j}$ \u7684\u8fb9\uff0c\u82e5\u5272\u6389\u8fd9\u6761\u8fb9\u8868\u793a $i$ \u884c $j$ \u5217\u7684\u4eba\u9009\u62e9\u7406\u79d1\u3002\n2. \u4ece\u6bcf\u4e2a\u70b9\u8fde $T$ \u5bb9\u91cf\u4e3a $science_{i,j}$ \u7684\u8fb9\uff0c\u82e5\u5272\u6389\u8fd9\u6761\u8fb9\u8868\u793a $i$ \u884c $j$ \u5217\u7684\u4eba\u9009\u62e9\u6587\u79d1\u3002\n3. \u5bf9\u4e8e\u6bcf\u4e2a $(i,j)$\uff0c\u65b0\u5efa\u4e00\u4e2a\u70b9 $u1_{i,j}$\uff0c\u8fde\u4e00\u6761\u4ece $S$ \u5230 $u1_{i,j}$\uff0c\u5bb9\u91cf\u4e3a $sameart_{i,j}$ \u7684\u8fb9\uff0c\u5e76\u4ece $u1_{i,j}$ \u5411 $(i,j),(i-1,j),(i,j-1),(i+1,j),(i,j+1)$ \u8fde\u5bb9\u91cf\u4e3a INF \u7684\u8fb9\u3002\u82e5\u5272\u6389 $S$ \u4e0e $u1_{i,j}$ \u4e4b\u95f4\u7684\u8fb9\u8868\u793a\u6ca1\u6709 $sameart_{i,j}$ \u7684\u8d21\u732e\u3002\n4. \u5bf9\u4e8e\u6bcf\u4e2a $(i,j)$\uff0c\u518d\u65b0\u5efa\u4e00\u4e2a\u70b9 $u2_{i,j}$\uff0c\u8fde\u4e00\u6761\u4ece $u2_{i,j}$ \u5230 $T$\uff0c\u5bb9\u91cf\u4e3a $samescinece_{i,j}$ \u7684\u8fb9\uff0c\u5e76\u4ece $(i,j),(i-1,j),(i,j-1),(i+1,j),(i,j+1)$ \u5411 $u2_{i,j}$ \u8fde\u5bb9\u91cf\u4e3a INF \u7684\u8fb9\u3002\u82e5\u5272\u6389 $u2_{i,j}$ \u4e0e $T$ \u4e4b\u95f4\u7684\u8fb9\u8868\u793a\u6ca1\u6709 $samescience_{i,j}$ \u7684\u8d21\u732e\u3002\n\n\u7136\u540e\u62ff\u6240\u6709 $art_{i,j},science_{i,j},sameart_{i,j},samescience_{i,j}$ \u7684\u548c\u51cf\u53bb\u6700\u5c0f\u5272\u5c31\u662f\u7b54\u6848\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\u5176\u5b9e\u5c31\u662f\u6211\u5728\u7f51\u7edc\u6d41\u7684 blog \u4e2d\u201c\u7f51\u7edc\u6d41\u5efa\u56fe\u6280\u5de7\u201d\u4e2d\u7b2c 4 \u70b9\u63d0\u5230\u7684\u60c5\u51b5\u7684\u6269\u5c55\u3002\u6211\u4eec\u8003\u8651\u6700\u6700\u6700\u6700\u7406\u60f3\u7684\u60c5\u51b5\uff0c\u90a3\u5c31\u662f $art_{i,j},science_{i,j},sameart_{i,j},samescience_{i,j}$ \u7684\u8d21\u732e\u5168\u90fd\u88ab\u7d2f\u52a0\u8fdb\u7b54\u6848\u4e2d\u3002\n\n\u4f46\u8fd9\u6837\u663e\u7136\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u8003\u8651\u6211\u4eec\u6700\u5c0f\u5272\u662f\u600e\u6837\u628a\u8fd9\u4e9b\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u6392\u9664\u5728\u5916\u7684\u3002\u9996\u5148\u4e00\u4e2a\u4eba $(i,j)$ \u4e0d\u80fd\u65e2\u9009\u6587\u79d1\u53c8\u9009\u7406\u79d1\u2014\u2014\u5426\u5219\u5c31\u5b58\u5728 $S\\to(i,j)\\to T$ \u7684\u8def\u5f84\u4e86\u3002\u6545 $S\\to (i,j)$ \u4ee5\u53ca $(i,j)\\to T$ \u7684\u8fb9\u5fc5\u987b\u6070\u597d\u4e00\u6761\u88ab\u5272\u6389\u3002\u5176\u6b21\uff0c\u4e5f\u4e0d\u53ef\u80fd\u51fa\u73b0 $sameart_{i,j}$ \u7684\u8d21\u732e\u88ab\u7d2f\u52a0\u8fdb\u7b54\u6848\uff0c\u5374\u5728 $(i,j)$ \u5468\u56f4\u5b58\u5728\u67d0\u4e2a\u4eba $(x,y)$ \u9009\u7406\u79d1\u7684\u60c5\u51b5\u2014\u2014\u5426\u5219\uff0c\u7531\u4e8e $sameart_{i,j}$ \u7684\u8d21\u732e\u88ab\u7d2f\u52a0\u8fdb\u7b54\u6848\uff0c\u6545 $S$ \u4e0e $u1_{i,j}$ \u4e4b\u95f4\u7684\u8fb9\u6ca1\u6709\u88ab\u5272\u6389\uff1b\u7531\u4e8e $(x,y)$ \u9009\u7406\u79d1\uff0c\u6545 $(x,y)$ \u4e0e $T$ \u4e4b\u95f4\u7684\u8fb9\u6ca1\u6709\u88ab\u5272\u6389\u3002\u800c $(x,y)$ \u5728 $(i,j)$ \u5468\u56f4\uff0c\u6545 $u1_{i,j}$ \u4e0e $(x,y)$ \u4e4b\u95f4\u6709\u8fb9\uff0c\u6545\u5b58\u5728 $S\\to u1_{i,j}\\to(x,y)\\to T$ \u7684\u8def\u5f84\uff0c\u4e0d\u7b26\u5408\u6700\u5c0f\u5272\u7684\u5b9a\u4e49\u3002\n\n\u6545\u8fd9\u6837\u8dd1\u6700\u5c0f\u5272\u540e\u8dd1\u51fa\u6765\u7684\u65b9\u6848\u662f\u5408\u6cd5\u7684\u3002\n\n---\n\n\u5230\u8fd9\u91cc\uff0c\u6211\u4e00\u76f4\u6709\u4e2a\u7591\u95ee\uff0c\u60f3\u5fc5\u4e5f\u6709\u4e0d\u5c11\u4eba\u548c\u6211\u6709\u4e00\u6837\u7684\u7591\u95ee\u3002\u90a3\u5c31\u662f\u51fa\u73b0\u67d0\u4e2a $(i,j)$\uff0c\u5b83\u4e0e $S,T$ \u4e4b\u95f4\u7684\u8fb9\u5168\u90fd\u5272\u6389\u4e86\u600e\u4e48\u529e\uff0c\u90a3\u4e0d\u5c31\u7b49\u4ef7\u4e8e $(i,j)$ \u65e2\u4e0d\u9009\u6587\u79d1\u4e5f\u4e0d\u9009\u7406\u79d1\u4e86\u5417\uff1f\n\n\u8fd9\u91cc\u7ed9\u51fa\u89e3\u7b54\uff1a\n\n\u91cd\u65b0\u56de\u987e\u4e00\u4e0b\u5272\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u5bf9\u4e8e\u5272\u7684\u6700\u539f\u59cb\u7684\u5b9a\u4e49\u662f\u5c06 $V$ \u5212\u5206\u6210\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408 $A,B$\uff0c\u4f7f\u5f97 $S\\in A,T\\in B$\u3002\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u5b9a\u4e49\u4e86\u5272\u7684\u6743\u503c\u4e3a $\\sum\\limits_{u\\in A,v\\in B}c(u,v)$\u3002\u800c\u4e0d\u662f\u6240\u8c13\u7684\u5272\u6389\u4e00\u4e9b\u8fb9\uff0c\u4f7f\u5f97 $S$ \u4e0e $T$ \u4e0d\u8fde\u901a\u3002\u5982\u679c\u6309\u7167\u540e\u8005\u7684\u5b9a\u4e49\u6765\u770b\u53ef\u80fd\u4f1a\u51fa\u73b0\u67d0\u4e2a $(i,j)$\uff0c\u5b83\u4e0e $S,T$ \u4e4b\u95f4\u7684\u8fb9\u5168\u90fd\u5272\u6389\uff1b\u4e0d\u8fc7\u6309\u7167\u524d\u8005\u7684\u5b9a\u4e49\u6765\u770b\u662f\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u4e86\u3002\u56e0\u4e3a\u5982\u679c\u5b58\u5728\u67d0\u4e2a $(i,j)$\uff0c\u5b83\u4e0e $S,T$ \u4e4b\u95f4\u7684\u8fb9\u5168\u90fd\u5272\u6389\u4e86\uff0c\u6211\u4eec\u8003\u8651 $(i,j)$ \u7a76\u7adf\u662f\u5c5e\u4e8e\u96c6\u5408 $A$ \u8fd8\u662f\u96c6\u5408 $B$\uff0c\u5982\u679c $(i,j)\\in A$\uff0c\u90a3\u4e48\u5b83\u4e0e $S$ \u7684\u8fb9\u7684\u6743\u503c\u5c31\u4e0d\u4f1a\u88ab\u7d2f\u52a0\u5230\u7b54\u6848\u4e2d\uff1b\u540c\u7406\u5982\u679c $(i,j)\\in B$\uff0c\u90a3\u4e48\u5b83\u4e0e $T$ \u7684\u8fb9\u7684\u6743\u503c\u5c31\u4e0d\u4f1a\u88ab\u7d2f\u52a0\u5230\u7b54\u6848\u4e2d\u3002\u6545\u8fd9\u79cd\u60c5\u51b5\u662f\u4e0d\u4f1a\u51fa\u73b0\u7684\u3002\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5f88\u591a\u4eba\uff08\u5305\u62ec\u6211\uff09\u4f1a\u628a\u5272\u7684\u5b9a\u4e49\u8bef\u89e3\u6210\u540e\u8005\u5462\uff1f\u56e0\u4e3a\u5982\u679c\u6309\u7167\u540e\u8005\u7684\u5b9a\u4e49\u6765\u7406\u89e3\uff0c\u90a3\u6700\u5927\u6d41\u7b49\u4e8e\u6700\u5c0f\u5272\u7684\u5b9a\u7406\u4e5f\u662f\u6210\u7acb\u7684\uff1b\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4f60\u5272\u6389\u4e86\u4e00\u4e2a\u96c6\u5408 $E'\\subseteq E$ \u4e2d\u7684\u8fb9\u4f7f\u5f97 $S$ \u4e0e $T$ \u4e0d\u8fde\u901a\uff0c\u90a3\u4e48 $E'$ \u4e2d\u6240\u6709\u8fb9\u5bb9\u91cf\u4e4b\u548c\u7684\u6700\u5c0f\u503c\u5c31\u7b49\u4e8e\u6700\u5927\u6d41\u3002\n\n\u8bc1\u660e\uff1a\u8bbe $A$ \u4e3a\u5272\u6389 $E'$ \u540e $S$ \u80fd\u5230\u8fbe\u7684\u70b9\u96c6\uff0c$B$ \u4e3a\u5272\u6389 $E'$ \u540e\u80fd\u5230\u8fbe $T$ \u7684\u70b9\u96c6\u3002\u5982\u679c\u5272\u6389 $E'$ \u540e\u5b58\u5728\u67d0\u4e2a\u70b9 $u$ \u65e2\u4e0d\u5c5e\u4e8e $A$ \u4e5f\u4e0d\u5c5e\u4e8e $B$\uff0c\u90a3\u4e48\u628a $u$ \u5f52\u7ea6\u5230 $A$ \u6216 $B$ \u4e2d\u5272\u7684\u6743\u503c\u80af\u5b9a\u4f1a\u66f4\u5c0f\u3002\u5426\u5219\uff0c\u8bbe $W$ \u4e3a\u5272 $A,B$ \u7684\u6743\u503c\uff0c\u663e\u7136 $A,B$ \u4e4b\u95f4\u7684\u8fb9\u80af\u5b9a\u90fd\u5c5e\u4e8e $E'$\uff0c\u5426\u5219 $S$ \u4e0e $T$ \u5c31\u8fde\u901a\u4e86\u3002\u800c $E'$ \u4e2d\u53ef\u80fd\u8fd8\u542b\u6709\u6545 $E'\\text{\u7684\u6743\u503c\u548c}\\leq W$\u3002\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a $E'$ \u90fd\u80fd\u6620\u5c04\u5230\u4e00\u4e2a\u5272 $A,B$ \u4e0a\u5e76\u4e14 $E'$ \u7684\u6743\u503c\u548c\u4e0d\u5c0f\u4e8e\u5272 $A,B$ \u7684\u6743\u503c\u3002\u6545\u539f\u547d\u9898\u6210\u7acb\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\u3002",
        "postTime": 1612271353,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4313 \u3010\u6587\u7406\u5206\u79d1\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u53ef\u4ee5\u4e0e[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P1361)\u4ea7\u751f\u6781\u5927\u7684\u5171\u9e23\u3002\u3002\uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u53cc\u500d\u7ecf\u9a8c\uff09\n\n\u4e00\u5171\u6709 $n\\cdot m$ \u4e2a\u5b66\u751f\uff0c\u6392\u6210\u4e86 $n$ \u884c $m$ \u5217\uff0c\u6bcf\u4e2a\u4eba\u6709\u4e24\u4e2a\u9009\u62e9 $A$ \u548c $B$ \uff0c\u4e14\u5404\u6709\u4e00\u4e2a\u6536\u76ca\u503c\uff0c\u8fd8\u6709\u4e24\u4e2a\u9650\u5236\u6027\u6536\u76ca\u503c\uff0c\u6761\u4ef6\u662f\u56db\u5468\u7684\u4eba\u4e0e\u5176\u7684\u9009\u62e9\u4e00\u81f4\u3002\n\n\u6c42\u6700\u5927\u6536\u76ca\n\n$n,m\\leq 100$ \uff0c\u5355\u4e2a\u6536\u76ca\u503c $\\leq 500$\n\n### solution\n\u4e00\u5171\u5c31\u4e24\u4e2a\u9009\u62e9\uff0c\u201c\u4e8c\u5206\u56fe\u201d\u4e0a\u6700\u5c0f\u5272\u65e0\u7591\u4e86\uff0c\u5de6\u8fb9\u4e00\u6e9c\u5c31\u5b9a\u4e3a\u9009\u62e9 $A$ \uff0c\u53f3\u8fb9\u4e00\u6e9c\u5c31\u5b9a\u4e3a\u9009\u62e9 $B$ \u3002\n\n\u8bbe\u4e00\u4e2a\u6e90\u70b9\uff0c\u4e00\u4e2a\u6c47\u70b9\uff0c\u524d\u4e24\u4e2a\u6536\u76ca\u76f4\u63a5\u52a0\u8fb9\u5c31\u884c\u4e86\u3002\n\n\u540e\u9762\u4e24\u4e2a\u5462\uff1f\n\n\u6839\u636e\u6bcf\u4e00\u4e2a\u9650\u5236\u6027\u6761\u4ef6\uff0c\u56db\u5468\u53ea\u8981\u6709\u4e00\u4e2a\u70b9\u505a\u4e86\u53e6\u4e00\u4e2a\u9009\u62e9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9650\u5236\u6027\u6536\u76ca\u503c\u5c31\u4e00\u5b9a\u4e0d\u80fd\u9009\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e0d\u80fd\u9009\u8be5\u6536\u76ca\u503c\uff0c\u5219\u8bf4\u660e\u5468\u56f4\u8fd9\u56db\u4e2a\u4eba\u6ca1\u6709\u540c\u65f6\u505a\u4e00\u4e2a\u9009\u62e9\u3002\n\n\u6240\u4ee5\uff0c\u82e5\u8981\u9009\u8fd9\u4e2a\u6536\u76ca\u503c\uff0c\u5219\u9700\u8981\u4fdd\u8bc1\u5468\u56f4\u7684\u56db\u4e2a\u4eba\u90fd\u505a\u540c\u6837\u7684\u9009\u62e9\uff0c**\u4e8e\u662f\u5c06\u8be5\u70b9\u5411\u76f8\u90bb\u7684\u90a3\u56db\u4e2a\u70b9\u5bf9\u5e94\u7684\u8fde\u4e00\u6761\u8fb9**\uff0c\u957f\u5ea6\u4e3a $\\infty$ \uff0c\u540c\u65f6\uff0c\u4e3a\u4e86\u4e0d\u4f1a\u4e00\u76f4\u6d41\uff0c\u5c31\u4f1a\u8ba9\u53e6\u4e00\u4e2a\u9009\u62e9\u7684\u7684\u6536\u76ca\u503c\u88ab\u820d\u5f03\u3002\n\n\u4f46\u662f\u5982\u679c\u76f4\u63a5\u8fd9\u4e48\u5efa\u56fe\u4ece\u6d41\u901a\u7684\u89d2\u5ea6\u6765\u770b\u4f1a\u6709\u4e0d\u5c11\u7684\u95ee\u9898\uff0c\u5176\u5b9e\u56e0\u4e3a\u4f1a\u6709\u5f88\u591a\u91cd\u8fb9\uff0c\u4ece\u903b\u8f91\u4e0a\u5c31\u4e0d\u5bf9\u52b2\u3002\n\n\u770b\u5230\u4e0a\u9762\u7684\u9ed1\u4f53\u5b57\uff0c\u95ee\u9898\u5c31\u51fa\u5728\u90a3\u91cc\u3002\n\n\u600e\u4e48\u529e\u5462\uff1f\n\n\u6709\u5bf9\u4e8e\u4e24\u4e2a\u9009\u62e9\u7684\u9650\u5236\u6027\u6536\u76ca\u503c\uff0c\u90a3\u5bf9\u4e8e\u4e48\u6bcf\u4e00\u4e2a\u9009\u62e9\u90fd\u91cd\u65b0\u5efa $n\\cdot m$ \u4e2a\u70b9\u518d\u8fde\u5c31\u884c\u4e86\u3002\n\n\u6700\u5927\u6536\u76ca\u5c31\u662f\u5168\u90e8\u6536\u76ca\u503c\u603b\u548c\u51cf\u53bb\u6700\u5c0f\u5272\u3002\n\n\u597d\u4e86\uff0c\u653e\u4ee3\u7801\u5427\n```cpp\n#include<bits/stdc++.h>\n#define id(i,j) (i-1)*m+j\nusing namespace std;\ntypedef long long ll;\nconst int N=3e4+10,M=3e5+10;\nconst int INF=0x3f3f3f3f;\nconst int xx[]={0,0,0,1,-1},yy[]={0,1,-1,0,0};\nint n,m,s,t,cur[N],gap[N],dep[N],q[N];\n//cur[i]:\u5f53\u524d\u5f27\u4f18\u5316,gap[i]:GAP\u4f18\u5316 \nint fst[N],nxt[M],to[M],val[M],tot=2;\nint ans,nm,mn;\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n\treturn s*w;\n}\ninline void add(int u,int v,int w)\n{\n\tnxt[tot]=fst[u];\n\tto[tot]=v,val[tot]=1ll*w;\n\tfst[u]=tot;++tot;\n\tnxt[tot]=fst[v];\n\tto[tot]=u,val[tot]=0;\n\tfst[v]=tot;++tot;\n}\ninline void bfs()\n{\n\tfor(int i=s;i<=t;++i)\n\tdep[i]=q[i]=gap[i]=0;\n\tint hd=0,tl=1;\n\tdep[t]=1,gap[1]=1;q[tl]=t;\n\t//\u8fd9\u662f\u4ece\u6c47\u70b9\u5f00\u59cb\n\twhile(hd<tl)\n\t{\n\t\tint u=q[++hd];\n\t\tfor(int i=fst[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif(!dep[v])\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\t++gap[dep[v]];\n\t\t\t\tq[++tl]=v;\n\t\t\t}\n\t\t}\n\t}\n}\nll dfs(int u,ll lim)\n{\n\tif(u==t)return lim;\n\tint ans=0,tmp;\n\tfor(int i=cur[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tcur[u]=i;\n\t\tif(dep[v]==dep[u]-1&&val[i])\n\t\t{\n\t\t\ttmp=dfs(v,min(lim,1ll*val[i]));\n\t\t\tval[i]-=tmp,lim-=tmp;\n\t\t\tans+=tmp,val[i^1]+=tmp;\n\t\t\tif(!lim)break;\n\t\t}\n\t}\n\tif((!ans)||lim)\n\t{\n\t\tif(--gap[dep[u]]==0)dep[s]=3*n*m+2;\n\t\t++gap[++dep[u]];\n\t}\n\treturn ans;\n}\ninline ll isap()\n{\n\tll ans=0;\n\tbfs();\n\twhile(dep[s]<=3*n*m+2)\n\t{\n\t\tmemcpy(cur,fst,sizeof(cur));\n\t\tans+=dfs(s,INF);\n\t}\n\treturn ans;\n}\nint main()\n{\n\tn=read(),m=read(),nm=n*m,mn=2*n*m,s=0,t=3*n*m+1;\n\tfor(int i=1;i<=n;++i)for(int j=1;j<=m;++j)for(int k=0;k<5;++k)\n\t{\n\t\tint x=i+xx[k],y=j+yy[k];\n\t\tif(x<1||y<1||x>n||y>m)continue;\n\t\tadd(id(x,y)+nm,id(i,j),INF);\n\t\tadd(id(i,j),id(x,y)+mn,INF);\n\t}\n\tfor(int i=1;i<=n;++i)for(int j=1;j<=m;++j){int art=read();ans+=art,add(s,id(i,j),art);}\n\tfor(int i=1;i<=n;++i)for(int j=1;j<=m;++j){int sci=read();ans+=sci,add(id(i,j),t,sci);}\n\tfor(int i=1;i<=n;++i)for(int j=1;j<=m;++j){int sart=read();ans+=sart,add(s,id(i,j)+nm,sart);}\n\tfor(int i=1;i<=n;++i)for(int j=1;j<=m;++j){int ssci=read();ans+=ssci,add(id(i,j)+mn,t,ssci);}\n\tprintf(\"%d\",ans-isap());\n\treturn 0;\n}\n```\n\u53ea\u6c42\u80fd\u5e2e\u52a9\u5230\u51e0\u4e2a\u4eba\u7f62\u3002\u3002",
        "postTime": 1614866287,
        "uid": 206024,
        "name": "Illusory_dimes",
        "ccfLevel": 7,
        "title": "P4313 \u6587\u7406\u5206\u79d1 \u9898\u89e3"
    },
    {
        "content": "## \u524d\u8a00  ~~\u5e9f\u8bdd~~\n\u7f51\u7edc\u6d41\u8fd9\u73a9\u610f\u5f88\u795e\u5947\uff0c\u5305\u62ec\u4e00\u5806\u4e71\u4e03\u516b\u7cdf\u7684\u4e1c\u897f,\u4ec0\u4e48\u6700\u5927\u6d41\uff0c\u6700\u5c0f\u5272\uff0c\u8d39\u7528\u6d41\uff0c\u6709\u4e0a\u4e0b\u754c\u7684\u7f51\u7edc\u6d41\uff1b\u8fd8\u6709\u5404\u79cd\u7b97\u6cd5\u548c\u5b83\u4eec\u7384\u5b66\u7684\u590d\u6742\u5ea6\uff1b\u66f4\u795e\u5947\u7684\u662f\u80fd\u901a\u8fc7\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u5efa\u8fb9\u65b9\u6cd5\u628a\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\uff0c\u770b\u4f3c\u4e0e\u7f51\u7edc\u6d41\u65e0\u5173\u7684\u9898\u76ee\u641e\u6210\u7f51\u7edc\u6d41\uff0c\u6bd4\u5982\u6b64\u9898\u3002\n## \u9898\u610f\n\u5bf9\u4e00\u4e2a $n\\times m$ \u7684\u77e9\u9635\u67d3\u8272\uff0c\u67d3\u4e00\u79cd\u989c\u8272\u53ef\u4ee5\u5f97\u5230\u4e00\u5b9a\u4ef7\u503c\uff0c\u5f53\u67d0\u4e00\u4e2a\u683c\u5b50\u4e0e\u6240\u6709\u5176\u76f8\u90bb\u7684\u683c\u5b50\u67d3\u540c\u79cd\u8272\u53ef\u4ee5\u5f97\u5230\u4e00\u4e9b\u989d\u5916\u4ef7\u503c\u3002\u6c42\u6700\u5927\u603b\u4ef7\u503c\u3002\n\n\u770b\u4f3c\u4e0e\u7f51\u7edc\u6d41\u6ca1\u5565\u5173\u7cfb\uff0c\u662f\u5427\u3002\n\n## \u5206\u6790\n\u4e8b\u5b9e\u4e0a\uff0c\u6b64\u9898\u8574\u542b\u4e00\u4e2a\u6a21\u578b\uff1a**\u4e8c\u8005\u53d6\u4e00\u5f0f\u95ee\u9898** \u3002\u4ec0\u4e48\u662f\u4e8c\u8005\u53d6\u4e00\u5f0f\u95ee\u9898\uff1f\u5373\u6709\u4e00\u4e9b\u5143\u7d20\uff0c\u628a\u5b83\u4eec\u653e\u5165\u4e24\u4e2a\u96c6\u5408\uff08\u4e00\u4e2a\u5143\u7d20\u53ea\u80fd\u653e\u5165\u4e00\u4e2a\u96c6\u5408\uff09\u4e2d\u80fd\u5206\u522b\u5f97\u5230\u4e00\u5b9a\u4ef7\u503c\uff0c\u6b64\u5916\u5bf9\u4e8e\u4e00\u4e9b\u5143\u7d20\uff0c\u5b83\u4eec\u540c\u65f6\u653e\u5165\u4e00\u4e2a\u96c6\u5408\u8fd8\u80fd\u5f97\u5230\u4e00\u5b9a\u4ef7\u503c\uff0c\u6c42\u6700\u5927\u603b\u4ef7\u503c\u3002\n\n\u4e0e\u6b64\u9898\u662f\u4e0d\u662f\u7c7b\u4f3c\uff1f\u5176\u5b9e\uff0c\u8fd9\u4e2a\u6a21\u578b\u53ef\u4ee5\u7528**\u6700\u5c0f\u5272**\u505a\uff01\u4e3a\u4ec0\u4e48\u5462\uff1f\u5bf9\u4e00\u4e2a\u5143\u7d20\u6765\u8bb2\uff0c\u5b83\u53ea\u80fd\u9009\u4e00\u4e2a\u96c6\u5408\uff0c\u6211\u4eec\u628a\u4e00\u4e2a\u96c6\u5408\uff08\u8bb0\u4e3aA\uff09\u5f04\u6210\u6e90\u70b9\uff0c\u53e6\u4e00\u96c6\u5408\uff08\u8bb0\u4e3aB\uff09\u5f04\u6210\u6c47\u70b9\uff0c\u5143\u7d20\u4e3a\u4e2d\u95f4\u70b9\uff0c\u4ece\u6e90\u70b9\u5411\u5143\u7d20\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\u4ef7\u503c\u7684\u8fb9\uff0c\u4ece\u5143\u7d20\u5411\u6c47\u70b9\u4e5f\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\u4ef7\u503c\u7684\u8fb9\uff0c\u8fd9\u6837\u5272\u4e86\u4e00\u6761\u8fb9\uff08\u8bbe\u4e3aA\uff09\uff0c\u5219\u8868\u793a\u4e0d\u9009A\u96c6\u5408\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/6nwh46r3.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/1imf0apb.png)\n\u90a3\u90a3\u4e9b\u7ec4\u5408\u5462?\u6211\u4eec\u4e3e\u9009\u5165A\u96c6\u5408\u7684\u7ec4\u5408\u7684\u6817\u5b50\uff0c\u4ece\u5b57\u9762\u610f\u601d\u53ef\u5f97\uff0c\u53ea\u6709\u7ec4\u5408\u4e2d\u6240\u6709\u70b9\u4e0e\u6e90\u70b9\u7684\u8fb9\u4e0d\u88ab\u5272\u6389\u624d\u80fd\u5f97\u5230\u4ef7\u503c\uff0c\u6240\u4ee5\u6b64\u65f6\u70b9\u4e0e\u6c47\u70b9\u7684\u8fb9\u90fd\u5272\u6389\u624d\u884c\u3002\u4e8e\u662f\u6839\u636e\u6700\u5c0f\u5272\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u6784\u9020\u51fa\u4e86\u4e00\u79cd\u5efa\u8fb9\u65b9\u6cd5\uff1a\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u4ece\u6e90\u70b9\u5411\u65b0\u8282\u70b9\u5efa\u6d41\u91cf\u4e3a\u4ef7\u503c\u7684\u8fb9\uff0c\u518d\u4ece\u65b0\u8282\u70b9\u5411\u6bcf\u4e2a\u7ec4\u5408\u4e2d\u7684\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u65e0\u7a77\u5927\u7684\u8fb9\uff08\u4e3a\u4ec0\u4e48\u5462\uff0c\u56e0\u4e3a\u9632\u6b62\u5272\u4e86\u8fd9\u6761\u8fb9\u800c\u4e0d\u662f\u8fde\u5411\u6c47\u70b9\u7684\u8fb9\uff09\u5c31\u597d\u4e86\u3002\u9009\u5165B\u96c6\u5408\u7684\u96f7\u540c\u3002\u7136\u540e\u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u5c31\u6c42\u51fa\u6700\u5c0f\u5272\u4e86\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/1trzejjy.png)\n\u4e0d\u7406\u89e3\u7684\u53ef\u4ee5\u7ed3\u5408\u56fe\u6765\u7406\u89e3\u3002\n\n\u6211\u4eec\u6c42\u51fa\u6700\u5c0f\u5272\u540e\uff0c\u5f97\u51fa\u7684\u662f\u4e0d\u8981\u7684\u4ef7\u503c\uff0c\u7528\u603b\u4ef7\u503c\u51cf\u53bb\u6700\u5c0f\u5272\u540e\u7684\u5f97\u5230\u7684\u5c31\u662f\u6700\u5927\u4ef7\u503c\u3002\u6b63\u786e\u6027\u8bc1\u660e\uff1a\u5047\u5982\u6709\u66f4\u5927\u4ef7\u503c\uff0c\u5219\u56fe\u4e2d\u5fc5\u8fd8\u6709\u6b8b\u4f59\u6d41\u91cf\uff0c\u8bf4\u660e\u6709\u5143\u7d20\u8fdb\u4e86\u4e24\u96c6\u5408\uff0c\u9519\u8bef\u3002\n\n\u6b64\u9898\u4e2d\uff0c\u9ed1\u767d\u4e24\u8272\u4e3a\u96c6\u5408\uff0c\u683c\u5b50\u4e3a\u5143\u7d20\uff0c\u6bcf\u7ec4\u76f8\u90bb\u683c\u5b50\u4e3a\u7ec4\u5408\u3002\u677f\u5b50\u5957\u8fdb\u53bb\u5c31\u597d\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1f\u989d\uff0c\u6211\u7684\u4ee3\u7801\u53cd\u6b63\u90fd\u5728 100ms \u4ee5\u5185\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint head[300005],next[8000005],went[8000005],cur[300005],lr[300005],dep[300005],n,m,p,q,len,s,t,cnt,sum;\nint cap[8000005],ans;\nvoid add(int x,int y,int z)\n{\n    next[len]=head[x];\n    head[x]=len;\n    went[len]=y;\n    cap[len]=z;\n    ++len;\n}\nint bfs()\n{\n\tint r=1;\n\tfor(int i=1;i<=cnt+10;i++)\n\t{\n\t\tcur[i]=head[i];\n\t\tdep[i]=0; \n\t} \n\tlr[1]=p;dep[p]=1;\n\tfor(int l=1;l<=r;l++)\n\t{\n\t\tint k=lr[l];\n\t\tfor(int i=head[k];i>=0;i=next[i])\n\t\tif(cap[i]>0&&dep[went[i]]==0)\n\t\t{\n\t\t\tdep[went[i]]=dep[k]+1;\n\t\t\tlr[++r]=went[i]; \n\t\t}\n\t}\n\treturn dep[q];\n}\nint dfs(int x,int y)\n{\n\tif(x==q) return y;\n\tint sum=0;\n\tint i=cur[x];\n\twhile(i>=0)\n\t{\n    \tif(cap[i]>0&&dep[went[i]]>dep[x])\n\t    {\n\t\t    int t=dfs(went[i],min(y,cap[i]));\n\t\t\ty-=t;\n\t\t\tcap[i]-=t;\n\t\t\tcap[i^1]+=t;\n\t\t\tsum+=t;\n\t\t\tif(y==0) return sum;\n\t\t}\n\t\ti=next[i];\n\t\tcur[x]=i;\n    }\n\tif(sum==0) dep[x]=0;\n\treturn sum;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m); \n    p=1;q=2;cnt=2;\n\tfor(int i=1;i<=100001;i++) head[i]=-1;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            ++cnt;sum+=x;\n            add(p,cnt,x);\n            add(cnt,p,0);\n        }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            sum+=x;\n            add(i*m+j-m+2,q,x);\n            add(q,i*m+j-m+2,0);\n        }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            ++cnt;sum+=x;\n            add(p,cnt,x);\n            add(cnt,p,0);\n            add(cnt,i*m+j-m+2,2000000000);\n            add(i*m+j-m+2,cnt,0);\n            if(i<n)\n            {\n                add(cnt,i*m+j+2,2000000000);\n                add(i*m+j+2,cnt,0);\n            }\n            if(i>1)\n            {\n                add(cnt,i*m+j+2-m-m,2000000000);\n                add(i*m+j+2-m-m,cnt,0);\n            }\n            if(j<m)\n            {\n                add(cnt,i*m+j+3-m,2000000000);\n                add(i*m+j+3-m,cnt,0);\n            }\n            if(j>1)\n            {\n                add(cnt,i*m+j+1-m,2000000000);\n                add(i*m+j+1-m,cnt,0);\n            }\n        }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            ++cnt;sum+=x;\n            add(cnt,q,x);\n            add(q,cnt,0);\n            add(i*m+j-m+2,cnt,2000000000);\n            add(cnt,i*m+j-m+2,0);\n            if(i<n)\n            {\n                add(i*m+j+2,cnt,2000000000);\n                add(cnt,i*m+j+2,0);\n            }\n            if(i>1)\n            {\n                add(i*m+j+2-m-m,cnt,2000000000);\n                add(cnt,i*m+j+2-m-m,0);\n            }\n            if(j<m)\n            {\n                add(i*m+j+3-m,cnt,2000000000);\n                add(cnt,i*m+j+3-m,0);\n            }\n            if(j>1)\n            {\n                add(i*m+j+1-m,cnt,2000000000);\n                add(cnt,i*m+j+1-m,0);\n            }\n        }\n\twhile(bfs())\n\t{\n\t\tdep[q]=2000001;\n\t\tint x=p;\n\t\tint y=2000000000;\n\t\tans+=dfs(x,y);\n\t}\n    ans=sum-ans;\n\tcout<<ans;\n}\n\n```",
        "postTime": 1595592047,
        "uid": 112921,
        "name": "zhimao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4313 \u3010\u6587\u7406\u5206\u79d1\u3011"
    },
    {
        "content": "[P4313 \u6587\u7406\u5206\u79d1](https://www.luogu.com.cn/problem/P4313)\n\n\u9898\u610f\uff1a\u7565\n\n\u601d\u8def\uff1a\u5efa\u56fe+\uff08\u6807\u7b7e\u5199\u7684\uff09\u6700\u5c0f\u5272\n\n\u8fd9\u4e2a\u9898\u4e5f\u662f\u975e\u5e38\u660e\u663e\uff0c\u53ef\u4ee5\u7528\u5bb9\u65a5\uff0c\u671f\u671b\u6700\u5927\u503c $ - $ \u6700\u5c0f\u4ee3\u4ef7\u6c42\u51fa\uff08\u4e5f\u5c31\u662f\u8ba9\u6240\u6709\u4eba\u5206\u4e3a\u4e24\u4e2a\u4e0d\u540c\u7684\u96c6\u5408\uff0c\u9700\u8981\u82b1\u8d39\u591a\u5c11\u4ef7\u503c\uff09\n\n\u5efa\u56fe\uff1a\u8fd9\u9053\u9898\u662f\u4e00\u79cd\u975e\u5e38\u7ecf\u5178\u7684\u6a21\u578b\uff0c\u5982\u679c\u4f60\u505a\u8fc7[P1361 \u5c0fM\u7684\u4f5c\u7269](https://www.luogu.com.cn/problem/P1361)\u6216\u8005[P1646 [\u56fd\u5bb6\u96c6\u8bad\u961f]happiness](https://www.luogu.com.cn/problem/P1646)\u4f60\u5c31\u4f1a\u77e5\u9053\uff08\u5f3a\u70c8\u63a8\u8350\u8fd9\u4e24\u9053\uff0c\u5c24\u5176\u662f\u540e\u9762\u90a3\u9053\uff09\n\n\u8bf4\u6b63\u9898\uff0c\u524d\u4e24\u4e2a\u77e9\u9635\uff0c\u4ee3\u8868\u6bcf\u4e2a\u4eba\u7684\u6ee1\u610f\u5ea6\uff0c\u4ee4\u6e90\u70b9\u4e3a\u6587\u79d1\uff0c\u6c47\u70b9\u4e3a\u7406\u79d1\uff08\u5982\u4e0b\u56feqwq\uff09\uff0c\u6bcf\u4e2a\u4eba\u5206\u522b\u5411\u6e90\u70b9\u548c\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u5f53\u524d\u8fd9\u4e2a\u4eba\u7684\u6ee1\u610f\u5ea6\u7684\u8fb9\n\n~~\u8fd9\u91cc\u4f5c\u8005\u5077\u4e2a\u61d2\uff0c\u7ed9\u5927\u5bb6\u753b\u4e00\u4e2a\u5c0f\u6570\u636e~~ \u8bb0\u5f97\u7f51\u7edc\u6d41\u8981\u8fde\u53cd\u5411\u4e3a $ 0 $ \u7684\u8fb9\n\n\u518d\u770b\u540e\u4e24\u4e2a\u77e9\u9635\uff0c\u4e3a\u5468\u56f4\u4e00\u7fa4\u4eba\u5982\u679c\u9009\u540c\u4e00\u79d1\u7684\u989d\u5916\u6ee1\u610f\u503c\uff0c~~\u6839\u636e\u7ecf\u9a8c~~\uff0c\u6211\u4eec\u8981\u5c06\u8fd9\u4e00\u4e9b\u4eba\u8fde\u5728\u4e00\u8d77\uff0c\u4f46\u662f\u600e\u4e48\u4fdd\u8bc1\u4ed6\u4eec\u90fd\u9009\u540c\u4e00\u4e2a\u79d1\u76ee\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u5bb9\u91cf\u4e3a $ \\infty $ \u5373\u53ef\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u77e9\u9635\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4eba\u90fd\u5f00\u4e00\u4e2a\u865a\u62df\u70b9\uff0c\u5411\u5f53\u524d\u70b9\u5468\u56f4\u6240\u6709\u4eba\u5bf9\u5e94\u7684\u8282\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $ \\infty $ \u7684\u8fb9\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u77e9\u9635\uff08\u6587\u79d1\uff09\uff0c\u6e90\u70b9\u5411\u865a\u62df\u70b9\u8fde\u5f53\u524d\u70b9\u6ee1\u610f\u503c\u3002\u5982\u679c\u662f\u7406\u79d1\uff0c\u865a\u62df\u70b9\u5411\u6c47\u70b9\u8fde\u5bb9\u91cf\u4e3a\u5f53\u524d\u70b9\u6ee1\u610f\u503c\uff0c\u6700\u540e\u7528\u671f\u671b\u6700\u5927\u503c  -  \u6700\u5c0f\u5272\u503c\u5373\u53ef\n\n\u4ee3\u7801\u5b9e\u73b0\u96be\u5ea6\u4e0d\u5927\u3002\u8fde\u8fb9\u53ef\u7528\u5e7f\u641c\u4ee5\u7b80\u6d01\u4ee3\u7801\n\n$ Code $\n```cpp\n# include <iostream>\n# include <cstdio>\n# include <queue>\n# include <cstring>\n\nusing namespace std;\n\nconst int N = 2e6 + 5;\nconst int M = 1e7 + 5;\nconst int inf = 0x7fffffff;\nint S , T;\ntypedef struct {\n\tint x , y , z , next;\n}Edge;\nEdge Kikyo[M];\nint E = 1 , elast_Kikyo[N];\nvoid add_Kikyo(int x , int y , int z) {\n\tE ++;\n\tKikyo[E].x = x;\n\tKikyo[E].y = y;\n\tKikyo[E].z = z;\n\tKikyo[E].next = elast_Kikyo[x];\n\telast_Kikyo[x] = E;\n} \nint dis_Kikyo[N] , cnt_Kikyo[N];\nvoid bfs_Kikyo(int kikyo) {\n\tqueue<int> q;\n\tq.push(kikyo);\n\tdis_Kikyo[kikyo] = 0;\n\tcnt_Kikyo[S] = 1;\n\twhile (!q.empty()) {\n\t\tint kikyo_ = q.front();\n\t\tq.pop();\n\t\tfor (int i = elast_Kikyo[kikyo_] ; i ; i = Kikyo[i].next) {\n\t\t\tint Kikyo_ = Kikyo[i].y;\n\t\t\tif (dis_Kikyo[Kikyo_] != -1) continue;\n\t\t\tdis_Kikyo[Kikyo_] = dis_Kikyo[kikyo_] + 1;\n\t\t\tq.push(Kikyo_);\n\t\t\tcnt_Kikyo[dis_Kikyo[Kikyo_]] ++;\n\t\t}\n\t}\n}\nint cur_Kikyo[N];\nint dfs_Kikyo(int u , int flow) {\n\tif (u == T) return flow;\n\tint Kikyo_ = 0 , kikyo_;\n\tfor (int i = cur_Kikyo[u] ; i ; i = Kikyo[i].next) {\n\t\tcur_Kikyo[u] = i;\n\t\tint v = Kikyo[i].y;\n\t\tif (Kikyo[i].z > 0 && dis_Kikyo[u] == dis_Kikyo[v] + 1) {\n\t\t\tkikyo_ = dfs_Kikyo(v , min(flow - Kikyo_ , Kikyo[i].z));\n\t\t\tKikyo[i].z -= kikyo_;\n\t\t\tKikyo[i ^ 1].z += kikyo_;\n\t\t\tKikyo_ += kikyo_;\n\t\t\tif (Kikyo_ == flow) return Kikyo_;\n\t\t}\n\t}\n\tif (dis_Kikyo[S] >= T) return Kikyo_;\n\tcur_Kikyo[u] = elast_Kikyo[u];\n\tif (-- cnt_Kikyo[dis_Kikyo[u]] == 0) dis_Kikyo[S] = T;\n\tcnt_Kikyo[++ dis_Kikyo[u]] ++;\n\treturn Kikyo_;\n}\nint Kikyo_Isap() {\n\tint Kikyo_ = 0;\n\tmemset(cnt_Kikyo , 0 , sizeof cnt_Kikyo);\n\tmemset(dis_Kikyo , -1 , sizeof dis_Kikyo);\n\tbfs_Kikyo(T);\n\tfor (int i = 0 ; i <= T ; i ++) {\n\t\tcur_Kikyo[i] = elast_Kikyo[i];\n\t}\n\twhile (dis_Kikyo[S] < T) Kikyo_ += dfs_Kikyo(S , inf);\n\treturn Kikyo_;\n}\nint n , m;\nint Kikyo_;\nint id_Kikyo(int x , int y) {\n\treturn (x - 1) * m + y;\n}\nint dx[5] = {0 , 1 , 0 , -1 , 0};\nint dy[5] = {0 , 0 , 1 , 0 , -1};\nint sum_Kikyo = 0;\nbool Kikyo_Imap(int x , int y) {\n\tif (x < 1 || y < 1 || x > n || y > m) return false;\n\telse return true; \n}\nint main() {\n\tcin >> n >> m;\n\tS = 0 , T = n * m * 3 + 1;\n\tfor (int i = 1 ; i <= n ; i ++) {\n\t\tfor (int j = 1 ; j <= m ; j ++) {\n\t\t\tscanf(\"%d\" , &Kikyo_);\n\t\t\tsum_Kikyo += Kikyo_;\n\t\t\tadd_Kikyo(S , id_Kikyo(i , j) , Kikyo_);\n\t\t\tadd_Kikyo(id_Kikyo(i , j) , S , 0);\n\t\t}\n\t}\n\tfor (int i = 1 ; i <= n ; i ++) {\n\t\tfor (int j = 1 ; j <= m ; j ++) {\n\t\t\tscanf(\"%d\" , &Kikyo_);\n\t\t\tsum_Kikyo += Kikyo_;\n\t\t\tadd_Kikyo(id_Kikyo(i , j) , T , Kikyo_);\n\t\t\tadd_Kikyo(T , id_Kikyo(i , j) , 0);\n\t\t}\n\t}\n\n\tfor (int i = 1 ; i <= n ; i ++) {\n\t\tfor (int j = 1 ; j <= m ; j ++) {\n\t\t\tscanf(\"%d\" , &Kikyo_);\n\t\t\tsum_Kikyo += Kikyo_;\n\t\t\tadd_Kikyo(S , n * m + id_Kikyo(i , j) , Kikyo_);\n\t\t\tadd_Kikyo(n * m + id_Kikyo(i , j) , S , 0);\n\t\t\tfor (int jk = 0 ; jk < 5 ; jk ++) {\n\t\t\t\tint tx = i + dx[jk];\n\t\t\t\tint ty = j + dy[jk];\n\t\t\t\tif (Kikyo_Imap(tx , ty) == true) {\n\t\t\t\t\tadd_Kikyo(n * m + id_Kikyo(i , j) , id_Kikyo(tx , ty) , inf);\n\t\t\t\t\tadd_Kikyo(id_Kikyo(tx , ty) , n * m + id_Kikyo(i , j) , 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (int i = 1 ; i <= n ; i ++) {\n\t\tfor (int j = 1 ; j <= m ; j ++) {\n\t\t\tscanf(\"%d\" , &Kikyo_);\n\t\t\tsum_Kikyo += Kikyo_;\n\t\t\tadd_Kikyo((n * m << 1) + id_Kikyo(i , j) , T , Kikyo_);\n\t\t\tadd_Kikyo(T , (n * m << 1) + id_Kikyo(i , j) , 0);\n\t\t\tfor (int jk = 0 ; jk < 5 ; jk ++) {\n\t\t\t\tint tx = i + dx[jk];\n\t\t\t\tint ty = j + dy[jk];\n\t\t\t\tif (Kikyo_Imap(tx , ty) == true) {\n\t\t\t\t\tadd_Kikyo(id_Kikyo(tx , ty) , (n * m << 1) + id_Kikyo(i , j) , inf);\n\t\t\t\t\tadd_Kikyo((n * m << 1) + id_Kikyo(i , j) , id_Kikyo(tx , ty) , 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\" , sum_Kikyo - Kikyo_Isap());\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1627890204,
        "uid": 335477,
        "name": "ker_xyxyxyx_xxs",
        "ccfLevel": 0,
        "title": "P4313 \u6587\u7406\u5206\u79d1"
    },
    {
        "content": "## $\\text{Solution:}$\r\n\r\n\u8003\u8651\u8fd9\u79cd\u975e $1$ \u5373 $0$ \u7684\u4e14 $n,m$ \u4e0d\u5927\u7684\u4e00\u822c\u90fd\u662f\u7528\u6240\u6709\u7684\u7b54\u6848\u51cf\u53bb\u6700\u5c0f\u5272\uff0c\u5f97\u5230\u6700\u5927\u7684\u7b54\u6848\u3002\r\n\r\n\u4e0b\u6587\u8d85\u6e90\u7528 $s$ \u8868\u793a\uff0c\u8d85\u6c47\u7528 $t$\u3002\r\n\r\n\u8003\u86511:\r\n\r\n$add(s,(i,j),art_{i,j}),add((i,j),t,science_{i,j})$\r\n\r\n\u5373\u5272\u5f00\u5176\u4e2d\u4e00\u6761\u8fb9\u8868\u793a $(i,j)$ \u4e0d\u5728\u54ea\u4e00\u4e2a\u96c6\u5408\u5f53\u4e2d\u3002\r\n\r\nQ: \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u4e24\u6761\u90fd\u5272\u6216\u8005\u4e0d\u5272\uff1f\r\n\r\nA\uff1a\u4e24\u6761\u90fd\u5272\u7684\u8bdd\u82b1\u8d39\u4e0b\u6765\u663e\u7136\u4e0d\u662f\u6700\u5c0f\u5272\uff0c\u4e0d\u5272\u7684\u8bdd $(s,t)$ \u4ecd\u8054\u901a\u3002\r\n\r\n2,3:\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u5efa\u4e2a\u65b0\u70b9\uff0c\u7136\u540e\u5c06 $(i,j)$ \u8fde $inf$ \u5230\u65b0\u70b9\u4e0a\uff0c\u56e0\u4e3a $inf$ \u6240\u4ee5\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u5272\u3002\u56e0\u4e3a $inf$ \u4e00\u5b9a\u4e0d\u88ab\u5272\uff0c\u4e14\u6211\u4eec\u8981\u8ba9 $(i,j)$ \u76f8\u90bb\u7684\u90fd\u548c\u5b83\u9009\u4e00\u6837\uff0c\u76f4\u63a5 $(i,j)$ \u5411\u76f8\u90bb\u7684\u8fde $inf$ \u5373\u53ef\uff0c\u6ce8\u610f\u4e0b\u6587\u7406\u79d1\u5bf9\u5e94\u5411 $s$ \u4e0e $t$ \u8fde\u8fb9\u3002\r\n\r\n\u6839\u636e\u6700\u5c0f\u5272=\u6700\u5927\u6d41\uff0c\u8dd1\u4e2a dinic \u5373\u53ef\u3002\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\n\r\n#define N 100005\r\n#define M 2000005\r\n#define int long long\r\n#define inf (int)(2e18)\r\n#define ID(X,Y) ((X-1)*m+Y)\r\n\r\nusing namespace std;\r\n\r\nstruct edge {\r\n\tint nex,to,w;\r\n}e[M];\r\n\r\nint head[N],mov[2][4]={{1,-1,0,0},{0,0,1,-1}},cnt=1;\r\nint n,m,s,t,tot,ans;\r\n\r\nint rd() {\r\n\tint f=1,sum=0; char ch=getchar();\r\n\twhile(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}\r\n\twhile(isdigit(ch)) {sum=(sum<<3)+(sum<<1)+ch-'0';ch=getchar();}\r\n\treturn sum*f;\r\n}\r\n\r\nvoid add(int x,int y,int z) {\r\n\te[++cnt]=edge{head[x],y,z};\r\n\thead[x]=cnt;\r\n}\r\n\r\nqueue<int>q;\r\nint chead[N],dis[N];\r\nbool bfs() {\r\n\twhile(!q.empty()) q.pop();\r\n\tfor(int i=1;i<=tot;i++) dis[i]=0,chead[i]=head[i];\r\n\tq.push(s); dis[s]=1;\r\n\twhile(!q.empty()) {\r\n\t\tint x=q.front(); q.pop();\r\n\t\tfor(int i=head[x];i;i=e[i].nex) {\r\n\t\t\tint y=e[i].to;\r\n\t\t\tif(!dis[y]&&e[i].w) {\r\n\t\t\t\tdis[y]=dis[x]+1;\r\n\t\t\t\tq.push(y);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn dis[t];\r\n}\r\n\r\nint solve(int x,int lim) {\r\n\tif(x==t||!lim) return lim;\r\n\tint flow=0,fl;\r\n\t//cout<<x<<\" \"<<s<<\" \"<<t<<endl;\r\n\tfor(int i=chead[x];i&&lim;i=e[i].nex) {\r\n\t\tint y=e[i].to; chead[x]=i;\r\n\t\tif(dis[y]==dis[x]+1&&e[i].w) {\r\n\t\t\tfl=solve(y,min(e[i].w,lim));\r\n\t\t\tflow+=fl; lim-=fl;\r\n\t\t\te[i].w-=fl; e[i^1].w+=fl;\r\n\t\t}\r\n\t}\r\n\treturn flow;\r\n}\r\n\r\nvoid dinic() {\r\n\twhile(bfs()) ans-=solve(s,inf);\r\n}\r\n\r\nsigned main() {\r\n\tint x;\r\n\tn=rd(); m=rd(); tot=n*m; s=++tot; t=++tot;\r\n\tfor(int i=1;i<=n;i++) {\r\n\t\tfor(int j=1;j<=m;j++) {\r\n\t\t\tx=rd();\r\n\t\t\tans+=x;\r\n\t\t\tadd(s,ID(i,j),x); add(ID(i,j),s,0);\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=n;i++) {\r\n\t\tfor(int j=1;j<=m;j++) {\r\n\t\t\tx=rd();\r\n\t\t\tans+=x;\r\n\t\t\tadd(ID(i,j),t,x); add(t,ID(i,j),0);\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=n;i++) {\r\n\t\tfor(int j=1;j<=m;j++) {\r\n\t\t\tx=rd();\r\n\t\t\tans+=x; ++tot;\r\n\t\t\tadd(s,tot,x); add(tot,s,0);\r\n\t\t\tadd(tot,ID(i,j),inf); add(ID(i,j),tot,0);\r\n\t\t\tfor(int k=0;k<4;k++) {\r\n\t\t\t\tint dx=i+mov[0][k],dy=j+mov[1][k];\r\n\t\t\t\tif(dx<1||dx>n||dy<1||dy>m) continue;\r\n\t\t\t\tadd(tot,ID(dx,dy),inf); add(ID(dx,dy),tot,0); \r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=n;i++) {\r\n\t\tfor(int j=1;j<=m;j++) {\r\n\t\t\tx=rd();\r\n\t\t\tans+=x; ++tot;\r\n\t\t\tadd(tot,t,x); add(t,tot,0);\r\n\t\t\tadd(ID(i,j),tot,inf); add(tot,ID(i,j),0);\r\n\t\t\tfor(int k=0;k<4;k++) {\r\n\t\t\t\tint dx=i+mov[0][k],dy=j+mov[1][k];\r\n\t\t\t\tif(dx<1||dx>n||dy<1||dy>m) continue;\r\n\t\t\t\tadd(ID(dx,dy),tot,inf); add(tot,ID(dx,dy),0);  \r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//cout<<ans<<endl;\r\n\tdinic();\r\n\tcout<<ans;\r\n\treturn 0;\r\n}\r\n```\r\n\r\n",
        "postTime": 1624105975,
        "uid": 125901,
        "name": "FxorG",
        "ccfLevel": 7,
        "title": "P4313 \u6587\u7406\u5206\u79d1"
    },
    {
        "content": "## \u524d\u8a00\n\u4eca\u5929\u662f $\\text{2021}$ \u5e74 $\\text{6}$ \u6708 $\\text{5}$ \u65e5\uff0c\u660e\u5929\u5c31\u662f $\\text{2021}$ \u5e74\u9ad8\u8003\u7684\u65e5\u5b50\u4e86\uff0c\u795d\u798f\u5404\u4f4d\u5e94\u5c4a\u9ad8\u8003\u751f\u80fd\u591f\u53d6\u5f97\u4e00\u4e2a\u597d\u7684\u6210\u7ee9\uff0c\u8003\u4e0a\u81ea\u5df1\u5fc3\u4eea\u7684\u5927\u5b66\u3002\n\n## \u6b63\u6587\n### \u521d\u6b65\u601d\u8def\n\u672c\u9898\u662f\u4e00\u9053\u975e\u5e38\u597d\u7684\u6700\u5c0f\u5272\u7f51\u7edc\u6d41\u7ec3\u4e60\u9898\uff0c\u4e00\u4e2a\u4eba\u4e0d\u662f\u9009\u7406\u5c31\u662f\u9009\u6587\uff08\u5f53\u7136\u73b0\u5728\u53ef\u4ee5\u4e09\u52a0\u4e8c\u52a0\u4e00\u5566\uff09\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u9009\u7406\u9009\u6587\u5c31\u662f\u4e00\u4e2a\u7ea6\u675f\u6761\u4ef6\uff0c\u8fd9\u4e2a\u7ea6\u675f\u6761\u4ef6\u53ef\u4ee5\u5e26\u6765\u7684\u8d21\u732e\u6211\u4eec\u662f\u4e0d\u597d\u5904\u7406\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53cd\u8fc7\u6765\u601d\u8003\uff0c\u4e5f\u5c31\u662f\uff0c\u5982\u679c\u8bf4\u8fd9\u4e2a\u4eba\u4e0d\u9009\u6587\uff0c\u90a3\u4e48\u6211\u5c31\u53ef\u4ee5\u51cf\u53bb\u5176\u9009\u6587\u7684\u8d21\u732e\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u56fe\u5efa\u6210\u4e00\u4e2a **\u6700\u5c0f\u5272** \u6a21\u578b\u3002\n\n\u90a3\u4e48\u53e6\u4e00\u4e2a\u4efb\u52a1\u5c31\u662f\u5173\u4e8e\u540c\u684c\u4e4b\u95f4\u7684\u7ea6\u675f\u5173\u7cfb\u600e\u4e48\u6574\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u8bf4\u4e00\u4e2a\u4eba\u9009\u4e86\u6587\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u5176\u9009\u7406\u7684\u8d21\u732e\u662f\u6bd4\u8f83\u4f4e\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6d41\u91cf\u662f\u53ef\u4ee5\u5c06\u9009\u7406\u7684\u4e00\u6761\u8def\u7ed9\u586b\u6ee1\u4f46\u662f\u586b\u4e0d\u6ee1\u9009\u6587\u7684\u8def\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u865a\u62df\u8282\u70b9\u4ee3\u8868\u9009\u6587\u6216\u8005\u9009\u7406\u7684\u60c5\u51b5\u3002\n\n### \u5177\u4f53\u5efa\u56fe\n\n\u6211\u4eec\u5c06\u8d85\u7ea7\u6e90\u70b9\u8fde\u5411\u4e00\u4e2a\u70b9\u8868\u793a\u8fd9\u4e2a\u4eba\u9009\u6587\u7684\u60c5\u51b5\uff0c\u5c06\u4e00\u4e2a\u70b9\u8fde\u5411\u8d85\u7ea7\u6c47\u70b9\u8868\u793a\u8fd9\u4e2a\u4eba\u9009\u7406\u7684\u60c5\u51b5\uff0c\u6d41\u91cf\u9650\u5236\u5c31\u662f\u8fd9\u4e2a\u4eba\u9009\u6587\u6216\u8005\u9009\u7406\u65f6\u5019\u7684\u6ee1\u610f\u503c\u3002\n\n\u5f53\u82e5\u5e72\u4e2a\u4eba\u4e4b\u95f4\u6709\u4e00\u4e2a\u7ea6\u675f\u5173\u7cfb\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u865a\u62df\u8282\u70b9\uff0c\u9009\u6587\u7684\u8bdd\u5c31\u4ece\u8d85\u7ea7\u6e90\u70b9\u8fde\u5411\u6539\u70b9\uff0c\u6d41\u91cf\u4e3a\u8fd9\u4e2a\u7ea6\u675f\u5173\u7cfb\u7684\u6ee1\u610f\u503c\u3002\u9009\u7406\u7684\u60c5\u51b5\u540c\u6837\u3002\n\n## \u4ee3\u7801\n~~~cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 1;\nconst int M = 1e6 + 1;\nconst int INF = 1e9;\nint hd[N],nxt[M],to[M],cap[M],tot = 1;\nint d[N],cur[N];\nconst int tx[] = {1,0,-1,0};\nconst int ty[] = {0,1,0,-1};\nint s,t,n,m;\ninline void add(const int u,const int v,const int z) {nxt[++tot] = hd[u],to[tot] = v,cap[tot] = z,hd[u] = tot;}\ninline void adds(const int u,const int v,const int z) {add(u,v,z),add(v,u,0);}\ninline int id(const int x,const int y) {return (x <= n && y <= m && x && y) ? (x - 1) * m + y : 0;}//\u5728\u8fd9\u91cc\u5224\u65ad\u8d8a\u754c\u7684\u6761\u4ef6\ninline bool BFS() {\n    memset(d,0,sizeof(d));\n    queue<int>Q;Q.push(s),cur[s] = hd[s],d[s] = 1;\n    while(!Q.empty()) {\n        int u = Q.front();Q.pop();\n        for(int eg = hd[u],v = to[eg]; eg; eg = nxt[eg], v = to[eg]) {\n            if(cap[eg] && !d[v]) d[v] = d[u] + 1,cur[v] = hd[v],Q.push(v);\n        }\n    }\n    return d[t];\n}\nint dfs(const int u,const int flow) {\n    if(u == t) return flow;\n    int f = 0;\n    for(int eg = cur[u],v = to[eg]; eg && f < flow; eg = nxt[eg],v = to[eg]) {\n        cur[u] = eg;\n        if(cap[eg] && d[v] == d[u] + 1) {\n            int k = dfs(v,min(cap[eg],flow - f));\n            if(!k) d[v] = -1;\n            f += k,cap[eg] -= k,cap[eg ^ 1] += k;\n        }\n    }\n    return f;\n}\ninline int dinic() {\n    int sum = 0,f = 0;\n    while(BFS()) while(f = dfs(s,INF)) sum += f;\n    return sum;\n}//\u7f51\u7edc\u6d41\nint pcnt = 0,ans = 0;\nint main() {\n    scanf(\"%d%d\",&n,&m);\n    s = 0,t = n * m * 4 + 1,pcnt = n * m;\n    for(int i = 1,x; i <= n; i++) \n    for(int j = 1; j <= m; j++) scanf(\"%d\",&x),adds(s,id(i,j),x),ans += x;//\u5efa\u7acb\u4e0e\u6e90\u70b9\u7684\u6d41\u91cf\n    for(int i = 1,x; i <= n; i++) \n    for(int j = 1; j <= m; j++) scanf(\"%d\",&x),adds(id(i,j),t,x),ans += x;//\u5efa\u7acb\u4e0e\u6c47\u70b9\u7684\u6d41\u91cf\n    for(int i = 1,x; i <= n; i++) \n    for(int j = 1; j <= m; j++) {\n        scanf(\"%d\",&x), ans += x;\n        pcnt++,adds(s,pcnt,x), adds(pcnt,id(i,j),INF);\n        for(int k = 0; k ^ 4; k++) \n        \tif(id(i + tx[k],j + ty[k])) adds(pcnt, id(i + tx[k],j + ty[k]), INF);//\u8868\u793a\u6587\u79d1\u7684\u7ea6\u675f\u5173\u7cfb\n    }\n    for(int i = 1,x; i <= n; i++) \n    for(int j = 1; j <= m; j++) {\n        scanf(\"%d\",&x),ans += x;\n        pcnt++, adds(pcnt,t,x), adds(id(i,j),pcnt,INF);\n        for(int k = 0; k ^ 4; k++) \n        if(id(i + tx[k],j + ty[k])) adds(id(i + tx[k],j + ty[k]), pcnt, INF);//\u8868\u793a\u7406\u79d1\u7684\u7ea6\u675f\u5173\u7cfb\n    }\n    cout << ans - dinic() << endl;//\u603b\u4f53\u7b54\u6848\u51cf\u53bb\u6700\u5c0f\u5272\u5373\u4e3a\u6240\u6c42\n    return 0;\n\n}\n~~~\n## \u9898\u5916\u8bdd\n\u5728\u5224\u65ad\u8fb9\u754c\u6761\u4ef6\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u8bb0\u5f97\u5224\u65ad\u8fb9\u754c\u4e3a 0 \u7684\u60c5\u51b5\uff0c\u4e0d\u7136\u5c31\u4f1a\u50cf\u67d0 MIYA \u4e00\u6837\u72c2\u4ea4\u4e00\u9762~~\u6d6a\u8d39\u8bc4\u6d4b\u8d44\u6e90~~\u3002\n\n## UPDATE\n2021.6.6 \uff1a\u4fee\u6539\u4e86\u4e00\u4e9b\u9519\u5b57\u3002",
        "postTime": 1622879023,
        "uid": 366935,
        "name": "KAMIYA_KINA",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4313 \u6587\u7406\u5206\u79d1"
    },
    {
        "content": "### \u6700\u5c0f\u5272\n[\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.com.cn/problem/P1361)\n\n\u8fd9\u9053\u9898\u8fd0\u7528\u4e86\u6700\u5c0f\u5272\u6700\u5e38\u7528\u7684\u4e00\u79cd\u7528\u6cd5\uff1a**\u96c6\u5408\u5212\u5206**\u3002\n\n\u56e0\u4e3a\u6e90\u6c47\u6700\u5c0f\u5272\u5373\u5c31\u662f\u5c06\u6e90\u6c47\u5212\u5206\u5230\u4e0d\u540c\u7684\u96c6\u5408\uff0c\u90a3\u4e48\u6700\u7b80\u5355\u7684\u5e94\u7528\u5c31\u662f\u6700\u5c0f\u4ee3\u4ef7\u5212\u5206\u96c6\u5408\u4e86\u3002\n\n\u672c\u9898\u4e2d\uff0c\u9898\u610f\u662f\u5c06 $n\\cdot m$ \u4e2a\u5b66\u751f\u5212\u5206\u6587\u7406\u79d1\uff0c\u6bcf\u4eba\u53ea\u80fd\u9009\u4e00\u79d1\u4e14\u9009\u4e0d\u540c\u7684\u79d1\u6709\u4e0d\u540c\u7684\u6536\u76ca\uff0c\u6c42\u6700\u5927\u6536\u76ca\uff0c\u7b26\u5408\u96c6\u5408\u5212\u5206\u7684\u6761\u4ef6\uff0c\u5c31\u7406\u6240\u5f53\u7136\u5730\u60f3\u5230\u4e86\u6700\u5c0f\u5272\u3002\n\n\u81f3\u4e8e\u6c42\u6700\u5927\u6536\u76ca\uff0c\u4e0d\u59a8\u5c31\u5148\u5c06\u6240\u6709\u6536\u76ca\u52a0\u8d77\u6765\uff0c\u518d\u51cf\u53bb\u6700\u5c0f\u4ee3\u4ef7\uff08\u5373\u6700\u5c0f\u5272\uff09\uff0c\u4fbf\u662f\u6700\u5927\u6536\u76ca\u4e86\u3002\n\n\u4f46\u662f\u672c\u9898\u7684\u96be\u70b9\u5728\u4e8e\uff0c\u5982\u679c\u76f8\u90bb\u540c\u5b66\u9009\u4e00\u6837\u7684\uff08\u4ee5\u4e0b\u79f0\u4e3a\u4e00\u4e2a\u7ec4\u5408\uff09\uff0c\u8fd8\u4f1a\u6709\u989d\u5916\u6536\u76ca\u3002\n\n\u4e8e\u662f\u6211\u4eec\u9700\u8981\u52a0\u4e00\u70b9\u9650\u5236\uff0c\u4f7f\u5f97\u6211\u4eec\u5728\u6700\u540e\u6c42\u6700\u5c0f\u5272\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ec4\u5408\uff1a\u8981\u4e48**\u6ee1\u8db3**\u7ec4\u5408\u5185\u7684\u6240\u6709\u6210\u5458\uff0c\u90fd\u5728\u540c\u4e00\u4e2a\u5b50\u96c6\uff08\u5305\u542b\u6e90\u70b9\u7684\u5b50\u96c6 $S$ \u6216\u5305\u542b\u6c47\u70b9\u7684\u5b50\u96c6 $T$\uff09\uff0c\u4e14\u90a3\u6761\u4ee3\u8868\u989d\u5916\u6536\u76ca\u7684\u8fb9**\u4e0d\u4f1a\u88ab\u5272\u6389**\uff1b\u8981\u4e48**\u4e0d\u6ee1\u8db3**\u7ec4\u5408\u5185\u662f\u6240\u6709\u6210\u5458\uff0c\u90fd\u5728\u540c\u4e00\u4e2a\u5b50\u96c6\uff0c\u4e14\u90a3\u6761\u4ee3\u8868\u989d\u5916\u6536\u76ca\u7684\u8fb9**\u88ab\u5272\u6389\u4e86**\u3002\n\n\u4e8e\u662f\u5927\u81f4\u89c1\u56fe\u601d\u8def\u51fa\u6765\u4e86\uff1a\n\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff08\u6bcf\u4e00\u4f4d\u540c\u5b66\uff09$i$\uff1a\n\n\t\u8fde $s\\rightarrow i$ \u5bb9\u91cf\u4e3a $art_i$\uff1b\n\n\t\u8fde $i\\rightarrow t$ \u5bb9\u91cf\u4e3a $science_i$\u3002\n    \n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ec4\u5408 $i$\uff0c\u65b0\u5efa\u4e24\u4e2a\u70b9 $x_i,y_i$\uff1a\n\n\t\u8fde $s\\rightarrow x_i$ \u5bb9\u91cf\u4e3a $same\\_art_i$\uff1b\n    \n   \u8fde $y_i\\rightarrow t$ \u5bb9\u91cf\u4e3a $same\\_science_i$\u3002\n   \n   \u5bf9\u4e8e\u8be5\u7ec4\u5408\u5185\u7684\u6bcf\u4e2a\u70b9\uff08\u5373\u8be5\u70b9+\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u70b9\uff09$j\\in i$\uff1a\n   \n   \u8fde $x_i\\rightarrow j$ \u5bb9\u91cf\u4e3a $+\\infty$\uff1b\n   \n   \u8fde $j\\rightarrow y_i$ \u5bb9\u91cf\u4e3a $+\\infty$\u3002\n \n\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e48\u8fde\u7684\u539f\u56e0\uff1a\n \n\u5982\u679c\u8981 $s\\rightarrow x_i$ \u8fd9\u6761\u8fb9\uff08\u5373\u8981\u8fd9\u4e2a\u7ec4\u5408\u6240\u6709\u540c\u5b66\u90fd\u9009\u6587\u79d1\u7684\u6536\u76ca\uff09\uff0c\u90a3\u4e48\u5c31\u4e0d\u5272\u8fd9\u6761\u8fb9\u3002\u4f46\u662f\uff0c\u53c8\u56e0\u4e3a $x_i$ \u5411\u8fd9\u4e2a\u7ec4\u5408\u5185\u6bcf\u4e2a\u70b9\u90fd\u8fde\u4e86\u4e00\u6761 $+\\infty$ \u7684\u8fb9\uff0c\u6240\u4ee5\u8fd9\u4e9b\u8fb9\u4fbf\u4e0d\u4f1a\u88ab\u5272\u6389\u3002\u90a3\u4e48\u4e3a\u4e86\u9632\u6b62 $s$ \u4e0e $t$ \u8054\u901a\uff0c\u81ea\u7136\u5c31\u4f1a\u5272\u6389\u8fd9\u4e2a\u7ec4\u5408\u5185\u6bcf\u4e2a\u70b9\u4e0e $t$ \u8fde\u7684\u8fb9\uff08\u5373\u90fd\u4e0d\u9009\u7406\u79d1\uff09\u3002\u53cd\u4e4b\u90fd\u9009\u7406\u79d1\u4ea6\u7136\u3002\n\n\u5982\u679c\u653e\u5f03\u8fd9\u4e2a\u7ec4\u5408\uff08\u5373\u8fd9\u4e2a\u7ec4\u5408\u5185\u6bcf\u4e2a\u6210\u5458\u9009\u7684\u79d1**\u4e0d\u90fd\u4e00\u6837**\uff09\uff0c\u90a3\u4e48\u5c31\u4f1a\u5272\u6389 $s\\rightarrow x_i$ \u548c $y_i\\rightarrow t$ \u8fd9\u4e24\u6761\u8fb9\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u8fd9\u4e2a\u7ec4\u5408\u5185\u7684\u6bcf\u4e2a\u70b9\u90fd\u4e92\u76f8\u72ec\u7acb\u4e86\uff0c\u53ef\u4ee5\u4efb\u610f\u9009\u79d1\u3002\n\n**\u6ce8**\uff1a\u4e0d\u80fd\u5c06 $x_i$ \u4e0e $y_i$ \u5408\u5e76\u6210\u4e00\u4e2a\u70b9\u6765\u8fde\u8fb9\uff0c\u8fd9\u6837\u4f1a\u4f7f\u4e0a\u8ff0**\u653e\u5f03\u7ec4\u5408**\u7684\u60c5\u51b5\u65e0\u6cd5\u8fbe\u5230\uff08\u5373\u65e0\u6cd5\u7834\u574f\u7ec4\u5408\u72ec\u7acb\u9009\u62e9\uff09\u3002\n\n### Code\n```cpp\n#include<bits/stdc++.h>\n//#define int long long\n#define pair pair<int,int>\nusing namespace std;\ninline void end()\n{\n\tputs(\"\");\n\tsystem(\"pause\");\n}\ninline int read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9') {if(c=='-') f=-1;c=getchar();}\n\twhile (c>='0'&&c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn x*f;\n}\nconst int N=3e4+4,M=5e5+5;\nint n,m,nm,s,t,ans,Maxflow;\nint first[N],nex[M],to[M],w[M],num=1;\ninline void add(int u,int v,int val)\n{\n\tnex[++num]=first[u];\n\tfirst[u]=num;\n\tto[num]=v;\n\tw[num]=val;\n}\ninline void Add(int u,int v,int val)\n{\n\tadd(u,v,val);\n\tadd(v,u,0);\n}\nnamespace ISAP\n{\n\tint dep[N],gap[N],cur[N];\n\tvoid bfs()\n\t{\n\t\tmemset(dep,-1,sizeof(dep));\n\t\tmemset(gap,0,sizeof(gap));\n\t\tqueue<int> q;\n\t\tq.push(t);\n\t\tdep[t]=0;gap[0]=1;\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tint u=q.front();q.pop();\n\t\t\tfor(int i=first[u];i;i=nex[i])\n\t\t\t{\n\t\t\t\tint v=to[i];\n\t\t\t\tif(dep[v]!=-1) continue;\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tgap[dep[v]]++;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\tinline int dfs(int u,int in)\n\t{\n\t\tif(u==t) return in;\n\t\tint out=0;\n\t\tfor(int i=cur[u];i;i=nex[i])\n\t\t{\n\t\t\tcur[u]=i;\n\t\t\tint v=to[i];\n\t\t\tif(!w[i]||dep[v]!=dep[u]-1) continue;\n\t\t\tint res=dfs(v,min(w[i],in-out));\n\t\t\tw[i]-=res;\n\t\t\tw[i^1]+=res;\n\t\t\tout+=res;\n\t\t\tif(in==out) return out;\n\t\t}\n\t\tgap[dep[u]]--;\n\t\tif(!gap[dep[u]]) dep[s]=3*nm+3;\n\t\tdep[u]++;\n\t\tgap[dep[u]]++;\n\t\treturn out;\n\t}\n\tvoid work()\n\t{\n\t\tbfs();\n\t\twhile(dep[s]<3*nm+2)\n\t\t{\n\t\t\tmemcpy(cur,first,sizeof(first));\n\t\t\tMaxflow+=dfs(s,1e9);\n\t\t}\n\t}\n}\ninline int id(int i,int j){return  (i-1)*m+j;}\nint dx[5]={-1,0,1,0,0},dy[5]={0,-1,0,1,0};\nint main()\n{\n\t//1|nm|nm|nm|1\n        //\u6e90\u70b9|\u6bcf\u4e2a\u7ec4\u5408\"\u9009\u6587\"|\u6bcf\u4e2a\u5ea7\u4f4d|\u6bcf\u4e2a\u7ec4\u5408\"\u9009\u7406\"|\u6c47\u70b9\n\tn=read(),m=read(),nm=n*m;\n\ts=0,t=3*nm+1;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tint val=read();ans+=val;\n\t\t\tAdd(s,id(i,j)+nm,val);//s -> i\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tint val=read();ans+=val;\n\t\t\tAdd(id(i,j)+nm,t,val);//i -> t\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tint val=read();ans+=val;\n\t\t\tAdd(s,id(i,j),val);//s -> x_i\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tint val=read();ans+=val;\n\t\t\tAdd(id(i,j)+2*nm,t,val);//y_i -> t\n\t\t\tfor(int k=0;k<5;++k)\n\t\t\t{\n\t\t\t\tint x=i+dx[k],y=j+dy[k];\n\t\t\t\tif(x<1||y<1||x>n||y>m) continue;\n\t\t\t\tAdd(id(i,j),id(x,y)+nm,1e9);//x_i -> j\n\t\t\t\tAdd(id(x,y)+nm,id(i,j)+2*nm,1e9);//j -> y_i\n\t\t\t}\n\t\t}\n\t}\n\tISAP::work();\n\tprintf(\"%d\",ans-Maxflow);\n\tend();\n\treturn 0;\n}\n```\n",
        "postTime": 1614598922,
        "uid": 205541,
        "name": "Aftglw",
        "ccfLevel": 0,
        "title": "\u6587\u7406\u5206\u79d1 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P4313)\n\n**\u9898\u610f\u7b80\u8ff0**\uff1a\n\n\u6709 $n*m$ \u4e2a\u540c\u5b66\u5206\u79d1\uff0c\u6587\u7406\u79d1\u4f1a\u5f97\u5230\u4e0d\u540c\u6ee1\u610f\u503c\uff0c\u540c\u65f6\u5982\u679c\u5468\u56f4\u540c\u5b66\u5747\u9009\u62e9\u76f8\u540c\u5206\u79d1\uff0c\u4e5f\u4f1a\u5f97\u5230\u4e0d\u540c\u6ee1\u610f\u503c\uff0c\u6c42\u6700\u5927\u6ee1\u610f\u503c\u3002\n\n\n**\u9898\u76ee\u5206\u6790**\uff1a\n\n\u4e00\u770b\u5230\u9898\u5c31\u900f\u7740\u4e00\u80a1\u6d53\u6d53\u7684**\u6700\u5c0f\u5272**\u90a3\u5473\u513f\u3002\n\n\u6309\u7167\u9898\u610f\uff0c\u5c06\u6e90\u70b9\u770b\u4f5c**\u6587\u79d1**\uff0c \u6c47\u70b9\u770b\u4f5c**\u7406\u79d1**\u3002\n\n\n- \u5148\u5c06\u6bcf\u4f4d\u540c\u5b66\u5355\u72ec\u9009\u62e9\u7684\u6ee1\u610f\u503c\u8fdb\u884c\u52a0\u8fb9\u64cd\u4f5c\uff0c\u6ce8\u610f\u65b9\u5411\uff1a\n\n```cpp\nadd(s,pos(i,j),u);\nadd(pos(i,j),t,u);\n\n```\n\n\u7136\u540e\u8003\u8651\u5468\u56f4\u540c\u5b66\u7684\u5f71\u54cd\uff0c\u5148\u5206\u6790\u6587\u79d1\uff0c\u4e0b\u6587\u5c06\u589e\u52a0\u7684\u6ee1\u610f\u503c\u8868\u793a\u4e3a $u$\uff1a\n\n\u56e0\u4e3a\u662f\u56db\u4e2a\u540c\u5b66\u5171\u540c\u5bf9\u7ed3\u679c\u9020\u6210\u5f71\u54cd\uff0c\u53c8\u8981\u4fdd\u8bc1\u4e0d\u4f1a\u5f71\u54cd\u524d\u9762\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u8003\u8651\u62c6\u70b9\uff1a\n\n- \u4ece\u6e90\u70b9\uff08\u9009\u62e9\u6587\u79d1\uff09\u5411\u62c6\u70b9\u8fde\u6709\u5411\u8fb9\uff0c\u8fb9\u6743\u4e3a $u$\uff08\u4fdd\u8bc1\u4e0d\u4f1a\u5f71\u54cd\u524d\u9762\uff09\uff1b\n\n\n- \u4ece\u62c6\u70b9\u5411\u6e90\u70b9\u8fde\u6709\u5411\u8fb9\uff0c\u8fb9\u6743\u4e3a $u$ (\u56e0\u4e3a\u6ee1\u610f\u503c\u662f\u589e\u52a0\u7684\uff0c\u6240\u4ee5\u8981\u53cd\u5411\u5efa\u8fb9\uff0c\u6700\u540e\u7ed3\u679c\u624d\u6709\u53ef\u80fd\u66f4\u5927)\uff1b\n\n- \u4ece\u5468\u56f4\u56db\u4e2a\u70b9\u5411\u62c6\u70b9\u8fde\u6709\u5411\u8fb9\uff0c\u8fb9\u6743\u4e3a\u6b63\u65e0\u7a77 \uff08\u56e0\u4e3a\u4e0d\u786e\u5b9a\u5927\u5c0f\uff0c\u4e14\u540e\u9762\u7684\u8fb9\u4f1a\u9650\u5236\u6d41\u91cf\u5927\u5c0f\u4f7f\u5176\u6ee1\u8db3\u9898\u610f\uff0c\u6240\u4ee5\u76f4\u63a5\u6765\u6781\u5927\u503c\uff09\n\n\n```cpp\nadd(s,cnt,u), add(cnt,pos(i,j),u);\n\nadd(cnt,pos(tx,ty),inf);\n\n```\n\n\u90a3\u4e48\u663e\u800c\u6613\u89c1\u7684\u662f\uff0c\u7406\u79d1\uff08\u6c47\u70b9\uff09\u7684\u8fde\u8fb9\u64cd\u4f5c\u56e0\u4e3a\u7ed3\u70b9\u987a\u5e8f\uff0c\u65b9\u5411\u4e0e\u6587\u79d1\u76f8\u53cd\u3002\n\n\n```cpp\nadd(cnt,t,u), add(pos(i,j),cnt,u);\n\nadd(pos(tx,ty),cnt,inf);\n```\n\n\n\u6700\u540e\uff0c\u5c31\u662f\u6a21\u677f\u6c42\u6700\u5c0f\u5272\u5566\u3002\n\n\n\n**\u5b8c\u6574\u4ee3\u7801**\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\n#define rt register int\n#define int long long\nconst int N = 3e4 + 10,M = 1e6 + 10, inf = 1e10;\nstruct node {\n\tint to,nex;\n}e[M];\nint n,m,s,t,top,ed,sum,cnt,dep[N],head[N],cur[N],tot = 1,f[M],q[N],a[4][2] = {{0,1},{0,-1},{1,0},{-1,0}};\ninline void add(int x,int y,int w) {\n\te[++tot] = (node) {y,head[x]}, f[tot] = w, head[x] = tot;\n\te[++tot] = (node) {x,head[y]}, head[y] = tot; \n}\ninline bool bfs() {\n\tmemset(dep,-1,sizeof(dep));\n\tdep[s] = 0, cur[s] = head[s], q[top = 1] = s; ed = 1;\n\tint now,ver;\n\twhile(top <= ed) {\n\t\tnow = q[top++];\n\t\tfor(rt i = head[now]; i; i = e[i].nex) {\n\t\t\tver = e[i].to;\n\t\t\tif(dep[ver] == -1 && f[i]) {\n\t\t\t\tdep[ver] = dep[now] + 1, cur[ver] = head[ver];\n\t\t\t\tif(ver == t) return 1;\n\t\t\t\tq[++ed] = ver;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\ninline int find(int x,int limit) {\n\tif(x == t) return limit;\n\tint flow = 0, tmp, ver;\n\tfor(rt i = head[x]; i && flow < limit; i = e[i].nex) {\n\t\tver = e[i].to;\n\t\tif(dep[ver] == dep[x] + 1 && f[i]) {\n\t\t\ttmp = find(ver,min(limit - flow,f[i]));\n\t\t\tif(!tmp) dep[ver] = -1;\n\t\t\tf[i] -= tmp, f[i ^ 1] += tmp, flow += tmp; \n\t\t}\n\t}\n\treturn flow;\n}\ninline int dinic() {\n\tint flow;\n\twhile(bfs()) sum -= find(s,inf);\n\treturn sum;\n}\ninline void read(int &x) {\n\tx = 0;int ff = 1;\n\tchar s = getchar();\n\twhile(s < '0' || s > '9') {\n\t\tif(s == '-') ff = -1;\n\t\ts = getchar();\n\t}\n\twhile(s <= '9' && s >= '0') {x = x * 10 + s - '0', s = getchar(); }\n\tx *= ff;\n}\ninline int pos(int x,int y) {\n\treturn m * (x - 1) + y;\n}\nsigned main() {\n\tread(n), read(m);\n\ts = n * m + 1,t = s + 1, cnt = t;\n\tint u,tx,ty;\n\tfor(rt i = 1; i <= n;  i++) {\n\t\tfor(rt j = 1; j <= m; j ++) { \n\t\t\tread(u), sum += u; \n\t\t\tadd(s,pos(i,j),u);\n\t\t}\n\t}\n\tfor(rt i = 1; i <= n;  i++) {\n\t\tfor(rt j = 1; j <= m; j ++) { \n\t\t\tread(u), sum += u;\n\t\t\tadd(pos(i,j),t,u);\n\t\t}\n\t}\n\tfor(rt i = 1; i <= n; i ++) {\n\t\tfor(rt j = 1; j <= m; j ++) {\n\t\t\tread(u), sum += u, cnt++;\n\t\t\tadd(s,cnt,u), add(cnt,pos(i,j),u);\n\t\t\tfor(rt k = 0; k < 4; k ++) {\n\t\t\t\ttx = i + a[k][0], ty = j + a[k][1];\n\t\t\t\tif(tx < 1 || ty < 1 || tx > n || ty > m) continue;\n\t\t\t\tadd(cnt,pos(tx,ty),inf);\n\t\t\t}\n\t\t}\n\t}\n\tfor(rt i = 1; i <= n; i ++) {\n\t\tfor(rt j = 1; j <= m; j ++) {\n\t\t\tread(u), sum += u, cnt++;\n\t\t\tadd(cnt,t,u), add(pos(i,j),cnt,u);\n\t\t\tfor(rt k = 0; k < 4; k ++) {\n\t\t\t\ttx = i + a[k][0], ty = j + a[k][1];\n\t\t\t\tif(tx < 1 || ty < 1 || tx > n || ty > m) continue;\n\t\t\t\tadd(pos(tx,ty),cnt,inf);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",dinic());\n\treturn 0;\n} \n```\n\n",
        "postTime": 1609251386,
        "uid": 140643,
        "name": "crescentic",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4313 \u3010\u6587\u7406\u5206\u79d1\u3011"
    },
    {
        "content": "\u6700\u5c0f\u5272\u5efa\u56fe\u7684\u6bd4\u8f83\u6a21\u677f\u7684\u9898\u76ee\uff0c\u5728\u7701\u9009\u4e2d\u5e94\u8be5\u5c5e\u4e8e\u6bd4\u8f83\u7b7e\u5230\u7c7b\u7684\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u4e0e$S$\u76f8\u8fde\u4e3a\u9009\u6587\u79d1\uff0c\u4ee5$T$\u76f8\u8fde\u4e3a\u9009\u7406\u79d1\u3002\n\n\u90a3\u4e48\u5efa\u56fe\u65b9\u5f0f\u975e\u5e38\u663e\u7136\u3002\n\n\u4ece$S$\u5411\u6bcf\u4e2a\u540c\u5b66\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$\\text{art[i][j]}$\u7684\u8fb9\uff0c\u6bcf\u4e2a\u540c\u5b66\u5411$T$\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$\\text{science[i][j]}$\u7684\u8fb9\u3002\n\n\u5982\u679c\u4e24\u4e2a\u4eba\u540c\u65f6\u9009\u62e9\u6587\u79d1\uff0c\u5219\u53ef\u4ee5\u4ece$S$\u5411\u65b0\u5efa\u7684\u4e00\u4e2a\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$\\text{sameart[i][j]}$\u7684\u8fb9\u3002\n\n\u5982\u679c\u4e24\u4e2a\u4eba\u540c\u65f6\u9009\u62e9\u7406\u79d1\uff0c\u5219\u53ef\u4ee5\u4ece\u65b0\u5efa\u70b9\u5230$T$\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$\\text{samescience[i][j]}$\u7684\u8fb9\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u65b0\u5efa\u70b9\uff0c\u4ece\u76f8\u90bb\u7684\u51e0\u4e2a\u70b9\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u5411\u65b0\u5efa\u7684\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u65e0\u9650\u7684\u8fb9\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u8dd1\u6700\u5927\u6d41\u6c42\u51fa\u6700\u5c0f\u5272\uff0c\u7528\u603b\u6536\u76ca\u51cf\u53bb\u6700\u5c0f\u5272\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <cctype>\n#include <queue>\n\nusing namespace std;\n\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\n\nint n,m; \n\nstruct Max_Flow\n{\n\tconst int INF=1<<28;\n\t\n\tlong long ans=0;\n\t\n\tint first[600005],nxt[600005],tail[600005],e=1,s=0,t,d[100005],r[600005],cur[100005];\n\t\n\tqueue <int> q;\n\t\n\tvoid link(int u,int v,int c)\n\t{\n\t\tnxt[++e]=first[u];\n\t\tfirst[u]=e;\n\t\ttail[e]=v;\n\t\tr[e]=c;\n\t\tnxt[++e]=first[v];\n\t\tfirst[v]=e;\n\t\ttail[e]=u;\n\t\tr[e]=0;\n\t}\n\t\n\tbool BFS()\n\t{\n\t\tq.push(t);\n\t\tmemset(d,0,sizeof(d));\n\t\td[t]=1;\n\t\twhile (!q.empty())\n\t\t{\n\t\t\tint v=q.front();\n\t\t\tq.pop();\n\t\t\tfor (int e=first[v];e;e=nxt[e])\n\t\t\t{\n\t\t\t\tint u=tail[e];\n\t\t\t\tif (d[u]==0 && r[e^1]>0)\n\t\t\t\t{\n\t\t\t\t\td[u]=d[v]+1;\n\t\t\t\t\tq.push(u);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn (d[s]>0);\n\t}\n\t\n\tint DFS(int u,int budget)\n\t{\n\t\tif (u==t)\n\t\t\treturn budget;\n\t\tint res=0;\n\t\tfor (int &e=cur[u];e!=0;e=nxt[e])\n\t\t{\n\t\t\tint v=tail[e];\n\t\t\tif (d[v]+1==d[u] && r[e]>0)\n\t\t\t{\n\t\t\t\tint delta=DFS(v,min(r[e],budget));\n\t\t\t\tres+=delta;\n\t\t\t\tbudget-=delta;\n\t\t\t\tr[e]-=delta;\n\t\t\t\tr[e^1]+=delta;\n\t\t\t\tif (budget==0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\t\n\tinline int Getans()\n\t{\n\t\twhile (BFS())\n\t\t{\n\t\t\tfor (int i=s;i<=t;i++)\n\t\t\t\tcur[i]=first[i];\n\t\t\tans+=DFS(s,INF);\n\t\t}\n\t\treturn ans;\n\t} \n}G;\n\nint id[105][105];\n\nint sum;\n\nconst int dx[]={1,-1,0,0,0};\n\nconst int dy[]={0,0,1,-1,0};\n\nint main()\n{\n\tn=read(),m=read();\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tid[i][j]=(i-1)*m+j;\n\tG.t=3*n*m+1;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tint tmp=read();\n\t\t\tG.link(G.s,id[i][j],tmp);\n\t\t\tsum+=tmp;\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tint tmp=read();\n\t\t\tG.link(id[i][j],G.t,tmp);\n\t\t\tsum+=tmp;\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tint tmp=read();\n\t\t\tG.link(G.s,n*m+id[i][j],tmp);\n\t\t\tsum+=tmp;\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tint tmp=read();\n\t\t\tG.link(2*n*m+id[i][j],G.t,tmp);\n\t\t\tsum+=tmp;\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tfor (int k=0;k<5;k++)\n\t\t\t{\n\t\t\t\tint nx=i+dx[k],ny=j+dy[k];\n\t\t\t\tif (nx<1 || nx>n || ny<1 || ny>m)\n\t\t\t\t\tcontinue;\n\t\t\t\tG.link(n*m+id[nx][ny],id[i][j],G.INF);\n\t\t\t\tG.link(id[i][j],2*n*m+id[nx][ny],G.INF);\n\t\t\t}\n\t\t}\n\tcout << sum-G.Getans() << endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1552215568,
        "uid": 8457,
        "name": "chen_zhe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4313 \u3010\u6587\u7406\u5206\u79d1\u3011"
    },
    {
        "content": "\u975e\u5e38\u795e\u5947\u7684\u7684\u6700\u5c0f\u5272\u6a21\u578b\u3002\n\n\u6b63\u9762\u5efa\u7acb\u6700\u5927\u6d41/\u8d39\u7528\u6d41\u6a21\u578b\u4e0d\u597d\u641e\uff0c\u4e8e\u662f\u8003\u8651\u6700\u5c0f\u5272\uff0c\u53d1\u73b0\u6709\u70b9\u4e1c\u897f\u3002\n\n\u5efa\u7acb\u8d85\u7ea7\u6e90 $S$ \u548c\u8d85\u7ea7\u6c47 $T$\uff0c\u5206\u522b\u4ee3\u8868\u6587\u79d1\u548c\u7406\u79d1\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4eba $i$\uff0c\u4ece $S$ \u5230 $i$ \u8fde\u4e00\u6761\u8fb9\uff0c\u8fb9\u6743\u4e3a\u7b2c $i$ \u4e2a\u4eba\u9009\u62e9\u6587\u79d1\u83b7\u5f97\u7684\u6536\u76ca\u3002\u4ece $i$ \u5230 $T$ \u8fde\u4e00\u6761\u8fb9\uff0c\u8fb9\u6743\u4e3a\u7b2c $i$ \u4e2a\u4eba\u9009\u62e9\u7406\u79d1\u83b7\u5f97\u7684\u6536\u76ca\u3002\n\n\u4ee5\u4e0a\u5b8c\u5168\u662f\u51ed\u76f4\u89c9\u5efa\u51fa\u6765\u7684\u6a21\u578b\uff0c\u8003\u8651\u4e00\u4e0b\u5b83\u662f\u5426\u6b63\u786e\u3002\u663e\u7136\u5982\u679c\u7b2c $i$ \u4e2a\u4eba\u65e2\u9009\u4e86\u6587\u79d1\u53c8\u9009\u4e86\u7406\u79d1\uff0c\u4e00\u5b9a\u5b58\u5728 $S\\rightarrow i\\rightarrow T$ \u8fd9\u6761\u8def\u5f84\u4ece $S$ \u5230\u8fbe $T$\u3002\u56e0\u6b64\u8be5\u6a21\u578b\u6b63\u786e\u3002\n\n\u73b0\u5728\u52a0\u5165\u76f8\u90bb\u7684\u4eba\u540c\u65f6\u9009\u62e9\u6587/\u7406\u79d1\u7684\u6536\u76ca\u3002\u76f4\u63a5\u5728\u8fd9\u4e9b\u70b9\u4e4b\u95f4\u8fde\u8fb9\u975e\u5e38\u4e0d\u597d\u641e\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u65b0\u5efa\u4e00\u4e2a\u70b9 \uff0c\u5047\u8bbe\u8fd9\u4e2a\u4eba\u4e3a $i$\uff0c\u65b0\u5efa\u7684\u70b9\u4e3a $i^{\\prime}$\u3002\u90a3\u4e48\u4ece $i^{\\prime}$  \u5411 $i$ \u4ee5\u53ca\u6240\u6709\u4e0e\u7b2c $i$ \u4e2a\u4eba\u76f8\u90bb\u7684\u4eba\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $\\infty$ \u7684\u8fb9\uff0c\u56e0\u4e3a\u663e\u7136\u8fd9\u4e9b\u8fb9\u4e0d\u53ef\u4ee5\u5272\u6389\u3002\u7136\u540e\u4ece $S$ \u5411 $i^{\\prime}$ \u8fde\u4e00\u6761\u8fb9\uff0c\u8fb9\u6743\u4e3a $i$ \u4e0e\u5b83\u76f8\u90bb\u7684\u4eba\u540c\u65f6\u9009\u6587\u79d1\u7684\u6536\u76ca\u3002\u540c\u7406\uff0c\u4ece $i^{\\prime}$ \u5411 $S$ \u8fde\u4e00\u6761\u8fb9\uff0c\u8fb9\u6743\u4e3a $i$ \u4e0e\u5b83\u76f8\u90bb\u7684\u4eba\u540c\u65f6\u9009\u7406\u79d1\u7684\u6536\u76ca\n\n\u518d\u6b21\u8003\u8651\u65b0\u6a21\u578b\u7684\u6b63\u786e\u6027\u3002\u5047\u8bbe\u6211\u83b7\u5f97\u4e86 $S\\rightarrow i^{\\prime}$ \u8fd9\u6761\u8fb9\u7684\u6536\u76ca\uff0c\u5373\u4e0e $i$ \u76f8\u90bb\u7684\u4eba\u5168\u9009\u4e86\u6587\u79d1\u3002\u90a3\u4e48\u53ea\u8981\u6709\u4e00\u4e2a\u4e0e $i$ \u76f8\u90bb\u7684\u4eba $j$ \u80cc\u53db\u7ec4\u7ec7\uff0c\u9009\u62e9\u4e86\u7406\u79d1\uff0c\u90a3\u4e48\u5c31\u5b58\u5728\u4e00\u6761 $S\\rightarrow i^{\\prime}\\rightarrow j\\rightarrow T$ \u7684\u8def\u5f84\u53ef\u4ee5\u4ece $S$ \u5230\u8fbe $T$\u3002\u56e0\u4e3a\u6839\u636e\u5047\u8bbe\uff0c$S\\rightarrow i^{\\prime}$ \u4ee5\u53ca $j\\rightarrow T$ \u8fd9\u4e24\u6761\u8fb9\u5b58\u5728\uff0c\u800c $i^{\\prime}\\rightarrow j$ \u8fd9\u6761\u8fb9\u53c8\u662f\u4e0d\u53ef\u4ee5\u5272\u6389\u7684\uff08\u8fb9\u6743\u4e3aINF\uff09\uff0c\u6240\u4ee5\u6a21\u578b\u6b63\u786e\u3002\n\n\u628a\u8fb9\u6743\u6362\u6210\u6d41\u91cf\u8dd1 ISAP \u5c31\u884c\u4e86\u3002\u5f53\u7136\u4f60\u8981 Dinic \u4e5f\u53ef\u4ee5~~\u867d\u7136\u8dd1\u5f97\u6162~~\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n\nconst int INF = 1e9;\nconst int dx[] = {-1, 1, 0, 0};\nconst int dy[] = {0, 0, -1, 1};\ninline int min(const int x, const int y) {return x < y ? x : y;}\nstruct Edge {\n\tint to, nxt, cap;\n} e[1000005];\nint head[100005], cur[100005], dep[100005], num[100005], s, t, tot = 1, cnt;\nint ar[105][105], sc[105][105];\nstd::queue<int> Q;\ninline void AddEdge(const int u, const int v, const int cap) {\n\te[++ tot].to = v, e[tot].cap = cap, e[tot].nxt = head[u], head[u] = tot;\n\te[++ tot].to = u, e[tot].cap = 0, e[tot].nxt = head[v], head[v] = tot;\n}\n\nvoid bfs() {\n\tmemcpy(cur, head, sizeof cur);\n\tnum[dep[t] = 1] = 1;\n\tQ.push(t);\n\twhile (Q.size()) {\n\t\tint u(Q.front());\n\t\tQ.pop();\n\t\tfor (int i(head[u]); i; i = e[i].nxt)\n\t\t\tif (!dep[e[i].to]) ++ num[dep[e[i].to] = dep[u] + 1], Q.push(e[i].to);\n\t}\n}\n\nint dfs(const int u, const int flow) {\n\tif (u == t) return flow;\n\tint used(0), tmp(0);\n\tfor (int i(cur[u]); i; i = e[i].nxt) {\n\t\tcur[u] = i;\n\t\tif (e[i].cap && dep[u] - 1 == dep[e[i].to]) {\n\t\t\ttmp = dfs(e[i].to, min(e[i].cap, flow - used));\n\t\t\te[i].cap -= tmp, e[i ^ 1].cap += tmp, used += tmp;\n\t\t\tif (used == flow) return used;\n\t\t}\n\t}\n\tcur[u] = head[u];\n\tif (!(-- num[dep[u]])) dep[s] = cnt + 2;\n\t++ num[++ dep[u]];\n\treturn used;\n}\n\nint ISAP() {\n\tint Maxflow(0);\n\tbfs();\n\twhile (dep[s] <= cnt + 1) Maxflow += dfs(s, INF);\n\treturn Maxflow;\n}\n\nint main()  {\n\tint n, m, ans(0);\n\tscanf(\"%d%d\", &n, &m);\n\ts = 0, t = (cnt = n * m + 1);\n\tfor (int i(1); i <= n; ++ i)\n\tfor (int j(1); j <= m; ++ j) {\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tAddEdge(s, (i - 1) * m + j, x), ans += x;\n\t}\n\tfor (int i(1); i <= n; ++ i)\n\tfor (int j(1); j <= m; ++ j) {\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tAddEdge((i - 1) * m + j, t, x), ans += x;\n\t}\n\tfor (int i(1); i <= n; ++ i)\n\tfor (int j(1); j <= m; ++ j) {\n\t\tint x, u(++ cnt);\n\t\tscanf(\"%d\", &x);\n\t\tAddEdge(s, u, x), ans += x;\n\t\tAddEdge(u, (i - 1) * m + j, INF);\n\t\tfor (int k(0); k <= 3; ++ k) {\n\t\t\tint tx(i + dx[k]), ty(j + dy[k]);\n\t\t\tif (tx < 1 || ty < 1 || n < tx || m < ty) continue;\n\t\t\tAddEdge(u, (tx - 1) * m + ty, INF);\n\t\t}\n\t}\n\tfor (int i(1); i <= n; ++ i)\n\tfor (int j(1); j <= m; ++ j) {\n\t\tint x, u(++ cnt);\n\t\tscanf(\"%d\", &x);\n\t\tAddEdge(u, t, x), ans += x;\n\t\tAddEdge((i - 1) * m + j, u, INF);\n\t\tfor (int k(0); k <= 3; ++ k) {\n\t\t\tint tx(i + dx[k]), ty(j + dy[k]);\n\t\t\tif (tx < 1 || ty < 1 || n < tx || m < ty) continue;\n\t\t\tAddEdge((tx - 1) * m + ty, u, INF);\n\t\t}\n\t}\n\tprintf(\"%d\", ans - ISAP());\n}\n```",
        "postTime": 1619957092,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010P4313 \u6587\u7406\u5206\u79d1\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8cClick here](https://www.cnblogs.com/syzf2222/p/14027767.html)\n\n\u8fd9\u7bc7\u535a\u5ba2\u662f\u6587\u7406\u5206\u79d1\u7684\u9898\u89e3\u66a8\u6700\u5927\u6d41\u5efa\u6a21\u601d\u8def\u7684\u5957\u8def\u6574\u7406\u3002\n\n\u5f88\u591a\u4eba\u770b\u5230\u6700\u5927\u6d41\u7684\u9898\u5c31\u8bf4\u662f\u6700\u5c0f\u5272\u677f\u5b50\u3002\u90a3\u6700\u5c0f\u5272\u5230\u5e95\u6709\u4ec0\u4e48\u610f\u4e49\uff1f\u6211\u88ab\u8fd9\u4e2a\u95ee\u9898\u56f0\u60d1\u4e86\u5f88\u4e45\u3002\n\n\u6211\u4eec\u5230\u5e95\u8981\u53bb\u5272\u4e00\u4e2a\u600e\u6837\u7684\u56fe\uff1f\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u53bb\u5272\u8fd9\u4e2a\u56fe\uff1f\n\n\u505a\u4e86\u4e00\u4e9b\u4e60\u9898\u4e4b\u540e\uff0c\u6211\u5927\u6982\u53d1\u73b0\u4e86\u5982\u4e0b\u7684\u89c4\u5f8b\uff1a\n\n\u6e90\u70b9\u548c\u6c47\u70b9\u8868\u793a\u4e24\u4e2a\u77db\u76fe\u7684\u72b6\u6001\uff0c\u6700\u5c0f\u5272\u7684\u8fc7\u7a0b\u5373\u662f\u627e\u4f7f\u72b6\u6001\u5408\u6cd5\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u5f62\u8c61\u5316\u5730\uff0c\u6211\u4eec\u4ee5\u672c\u9898\u4e3a\u4f8b\u3002\n\n\u663e\u7136\u9898\u4e2d\u7684\u4eba\u4e0d\u53ef\u80fd\u65e2\u9009\u6587\u79d1\u53c8\u9009\u7406\u79d1\uff08\u4e0d\u6392\u9664\u73b0\u5b9e\u751f\u6d3b\u4e2d\u6709\u8fd9\u6837\u7684\u795e\u4ed9\uff09\u3002\n\n\u5219\u6211\u4eec\u5c06\u6700\u7ec8\u548c\u6e90\u70b9$S$\u76f8\u8fde\u7684\u70b9\u8ba4\u4e3a\u662f\u9009\u62e9\u6587\u79d1\uff0c\u7406\u79d1\u540c\u7406\u3002\n\n\u8003\u8651\u5982\u4f55\u8fde\u8fb9\uff1a\n\n\u6bcf\u4e2a\u70b9\u5411\u6e90\u70b9\u8fde\u4e00\u6761\u4ef7\u503c\u4e3a\u4ed6\u9009\u62e9\u6587\u79d1\u7684\u6ee1\u610f\u503c\uff0c\u6c47\u70b9\u540c\u7406\u3002\n\n\u82e5\u8fde\u5411\u6e90\u70b9\u7684\u8fb9\u88ab\u5272\u65ad\uff0c\u5219\u4ee3\u8868\u4ed6\u9009\u62e9\u7406\u79d1\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u53d1\u73b0\u8fd9\u6837\u5efa\u56fe\u4e00\u4e2a\u4eba\u7684\u6587\u79d1\u548c\u7406\u79d1\u603b\u6709\u4e00\u4e2a\u4f1a\u88ab\u5272\u6389\uff0c\u7b26\u5408\u9898\u610f\u3002\n\n\u5bf9\u4e8e$same_{art}[i][j]$\uff0c\u65b0\u5efa\u8282\u70b9$cnt$\uff0c\u8003\u8651\u5b83\u7684\u8981\u6c42\u3002\n\n\u82e5\u8981\u6ee1\u8db3\u5168\u4e3a\u6587\u79d1\uff0c\u5219\u6240\u6709\u7406\u79d1\u7684\u8fb9\u90fd\u8981\u5272\u6389\uff0c\u5426\u5219\u6211\u4eec\u4e5f\u53ef\u4ee5\u5272\u6389\u8fd9\u4e00\u6761\u8fb9\u3002\n\n\u6545\u8fde$S$\u5230$cnt$\u4ef7\u503c\u4e3a$same_{art}[i][j]$\u7684\u8fb9\uff0c\u518d\u4ece$cnt$\u5411$(i,j)$\u548c\u5176\u76f8\u90bb\u70b9\u8fde\u4ef7\u503c\u4e3a$inf$\u7684\u8fb9\u3002\n\n\u5bf9\u4e8e\u7406\u79d1\u7684$same_{science}[i][j]$\u662f\u4e00\u6837\u7684\u9053\u7406\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5c06$S$\u548c$T$\u5177\u8c61\u5316\u4ee5\u540e\uff0c\u6bcf\u4e00\u6761\u8fde\u8fb9\u90fd\u662f\u6709\u610f\u4e49\u7684\uff0c\u8fd9\u6837\u66f4\u6709\u5229\u4e8e\u89e3\u9898\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u4ec5\u4f9b\u53c2\u8003\uff08\u672c\u4eba\u7801\u98ce\u5c31\u90a3\u6837\uff0c\u591a\u591a\u4f53\u8c05\uff09\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define inf 1e9\nconst int N=105;\nconst int maxn=3e5+10;\nint n,m,ans,t,cnt;\nint beg[maxn],nex[maxn],to[maxn],w[maxn],e;\ninline void add(int x,int y,int z){\n\tnex[e]=beg[x];beg[x]=e;\n\tto[e]=y;w[e]=z;e++;\n}\nint dep[maxn];queue<int>q;\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f;\n}\ninline int id(int x,int y){return (x-1)*m+y;}\nint dx[4]={0,0,1,-1};\nint dy[4]={1,-1,0,0};\ninline int bfs(){\n\tmemset(dep,0,sizeof(dep));\n\tdep[0]=1;q.push(0);\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=beg[x];~i;i=nex[i])\n\t\t\tif(w[i]&&!dep[to[i]]){\n\t\t\t\tdep[to[i]]=dep[x]+1;\n\t\t\t\tq.push(to[i]);\n\t\t\t}\n\t}\n\treturn dep[t]!=0;\n}\ninline int dfs(int x,int lim){\n\tif(x==t||!lim)return lim;\n\tint res=0;\n\tfor(int i=beg[x];~i;i=nex[i])\n\t\tif(w[i]&&dep[to[i]]==dep[x]+1){\n\t\t\tint f=dfs(to[i],min(w[i],lim));\n\t\t\tif(!f){dep[to[i]]=-1;continue;}\n\t\t\tlim-=f;res+=f;\n\t\t\tw[i]-=f;w[i^1]+=f;\n\t\t}\n\treturn res;\n}\nint main(){\n\tn=read(),m=read();\n\tmemset(beg,-1,sizeof(beg));\n\tint val;t=cnt=n*m+1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tval=read();ans+=val;\n\t\t\tadd(0,id(i,j),val);add(id(i,j),0,0);\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tval=read();ans+=val;\n\t\t\tadd(id(i,j),t,val);add(t,id(i,j),0);\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tcnt++;val=read();ans+=val;\n\t\t\tadd(0,cnt,val);add(cnt,0,0);\n\t\t\tadd(cnt,id(i,j),inf);add(id(i,j),cnt,0);\n\t\t\tfor(int k=0;k<4;k++){\n\t\t\t\tint x=i+dx[k];int y=j+dy[k];\n\t\t\t\tif(x<1||y<1||x>n||y>m)continue;\n\t\t\t\tadd(cnt,id(x,y),inf);add(id(x,y),cnt,0);\n\t\t\t}\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tcnt++;val=read();ans+=val;\n\t\t\tadd(cnt,t,val);add(t,cnt,0);\n\t\t\tadd(id(i,j),cnt,inf);add(cnt,id(i,j),0);\n\t\t\tfor(int k=0;k<4;k++){\n\t\t\t\tint x=i+dx[k];int y=j+dy[k];\n\t\t\t\tif(x<1||y<1||x>n||y>m)continue;\n\t\t\t\tadd(id(x,y),cnt,inf);add(cnt,id(x,y),0);\n\t\t\t}\n\t\t}\n\twhile(bfs())ans-=dfs(0,inf);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\u6df1\u6df1\u5730\u611f\u5230\u81ea\u5df1\u7684\u5f31\u5c0f\u3002",
        "postTime": 1606143719,
        "uid": 140876,
        "name": "syzf2222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4313 \u3010\u6587\u7406\u5206\u79d1\u3011"
    },
    {
        "content": "[$\\Large\\color{#FFBBFF}\\textit{Tian-Xing's blog}$](https://Tian-Xing.github.io)\n\n------------\n\n# Description\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4313)\n\n------------\n\n# Solution\n\n\u6bcf\u4e2a\u70b9\u53ea\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u4e0d\u662f\u9009\u6587\u79d1\u5c31\u662f\u9009\u7406\u79d1\uff0c\u4ece$S$\u5411\u6bcf\u4e2a\u540c\u5b66\u8fde\u5bb9\u91cf\u4e3a\u9009\u6587\u79d1\u7684\u6ee1\u610f\u503c\u7684\u6709\u5411\u8fb9\uff0c\u4ece\u6bcf\u4e2a\u540c\u5b66\u5411$T$\u8fde\u5bb9\u91cf\u4e3a\u9009\u7406\u79d1\u7684\u6ee1\u610f\u503c\u7684\u6709\u5411\u8fb9\uff0c\u90a3\u4e48\u603b\u7684\u6ee1\u610f\u503c\u51cf\u53bb\u6700\u5c0f\u5272\u5c31\u662f\u7b54\u6848\u3002\n\n\u73b0\u5728\u8003\u8651\u5982\u4f55\u5728\u6240\u6709\u76f8\u90bb\u7684\u540c\u5b66\u9009\u540c\u4e00\u4e2a\u8bfe\u65f6\u589e\u52a0\u6ee1\u610f\u503c\uff0c\u53cd\u8fc7\u6765\u770b\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u76f8\u90bb\u7684\u6709\u4e0d\u9009\u67d0\u4e00\u95e8\u8bfe\u7684\u5c31\u4e0d\u4f1a\u589e\u52a0\u6ee1\u610f\u503c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u540c\u5b66\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u5411\u5979\u8fd8\u6709\u5979\u5468\u56f4\u7684\u6240\u6709\u540c\u5b66\u8fde\u5bb9\u91cf\u4e3a$INF$\u7684\u8fb9\uff0c\u518d\u4ece\u539f\u70b9\u5411\u65b0\u5efa\u7684\u8282\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u8fd9\u4e9b\u540c\u5b66\u5168\u9009\u6587\u79d1\u65f6\u589e\u52a0\u7684\u6ee1\u610f\u503c\u3002\u56e0\u4e3a\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u6240\u4ee5\u5982\u679c\u9009\u4e86\u7406\u79d1\u90a3\u4e48\u6240\u6709\u8ddf$S$\u76f8\u8fde\u7684\u8fb9\u90fd\u5fc5\u987b\u88ab\u5272\u6389\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u8fd9\u4e9b\u76f8\u90bb\u7684\u540c\u5b66\u4e2d\u6709\u4e00\u4eba\u9009\u62e9\u4e86\u7406\u79d1\uff0c\u90a3\u4e48\u4ece$S$\u5230\u8fd9\u4e9b\u540c\u5b66\u7684\u8def\u5f84\u90fd\u5f97\u5272\u6389\u3002\u800c$INF$\u8fb9\u662f\u5272\u4e0d\u4e86\u7684\uff0c\u6240\u4ee5\u53ea\u80fd\u5272\u6389\u65b0\u5efa\u7684\u8282\u70b9\u548c$S$\u4e4b\u95f4\u7684\u8fb9\uff0c\u4e5f\u5c31\u6ee1\u8db3\u4e86\u8981\u6c42\uff0c\u5bf9\u4e8e\u5176\u4ed6\u60c5\u51b5\u540c\u7406\u3002\n\n------------\n\n# Code\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue> \nusing namespace std;\n\nconst int N = 1000050;\nconst int M = 2000050;\nconst int INF = 999999999;\n\nint head[N], num = 1, n, m, s, t, sum, d[N], x, cnt;\n\nstruct Node\n{\n\tint next, to, flow;\n} edge[M * 2];\n\nvoid Addedge(int u, int v, int w)\n{\n\tedge[++num] = (Node){head[u], v, w};\n\thead[u] = num;\n\treturn;\n}\n\nvoid Add(int u, int v, int w)\n{\n\tAddedge(u, v, w);\n\tAddedge(v, u, 0);\n\treturn;\n}\n\nint Id(int a, int b)\n{\n\treturn (a - 1) * m + b;\n} \n\ntemplate <class T>\nvoid Read(T &x)\n{\n\tx = 0; int p = 0; char st = getchar();\n\twhile (st < '0' || st > '9') p = (st == '-'), st = getchar();\n\twhile (st >= '0' && st <= '9') x = (x << 1) + (x << 3) +st - '0', st = getchar();\t\n\tx = p ? -x : x;\n\treturn;\n} \n\ntemplate <class T>\nvoid Put(T x)\n{\n\tif (x < 0) putchar('-'), x = -x;\n\tif (x > 9) Put(x / 10);\n\tputchar(x % 10 + '0');\n\treturn; \n}\n\nbool Bfs()\n{\n    queue<int> q;\n    for (int i = 0; i <= cnt; i++) d[i] = 0;\n    d[s] = 1; q.push(s);\n    while (!q.empty())\n    {\n        int u = q.front(); q.pop();\n        for (int i = head[u]; i; i = edge[i].next)\n            if (!d[edge[i].to] && edge[i].flow)\n            {\n                d[edge[i].to] = d[u] + 1;\n                q.push(edge[i].to);\n                if (edge[i].to == t) return 1;\n            }\n    }\n    return 0;\n}\n\nint Dinic(int x, int flow)\n{\n    if (x == t || !flow) return flow;\n    int rest = flow;\n    for (int i = head[x]; i && rest; i = edge[i].next)\n        if (edge[i].flow && d[edge[i].to] == d[x] + 1)\n        {\n            int v = edge[i].to;\n            int tmp = Dinic(v, min(rest, edge[i].flow));\n            rest -= tmp;\n            edge[i].flow -= tmp;\n            edge[i ^ 1].flow += tmp;\n            if (!tmp) d[v] = 0;\n        }\n    return flow - rest;\n}\n\nint Maxflow()\n{\n\tint maxflow = 0, tmp;\n\twhile (Bfs())\n\t{\n\t\ttmp = Dinic(s, INF);\n\t\tif (tmp) maxflow += tmp;\n\t}\n\treturn maxflow;\n}\n\nint main()\n{\n\tRead(n); Read(m);\n\tt = n * m + 1; cnt = t;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tRead(x);\n\t\t\tAdd(s, Id(i, j), x);\n\t\t\tsum += x;\n\t\t} \n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tRead(x);\n\t\t\tAdd(Id(i, j), t, x);\n\t\t\tsum += x;\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tRead(x);\n\t\t\tsum += x;\n\t\t\tint tmp = ++cnt;\n\t\t\tAdd(s, tmp, x);\n\t\t\tAdd(tmp, Id(i, j), INF);\n\t\t\tif (i + 1 <= n) Add(tmp, Id(i + 1, j), INF);\n\t\t\tif (i - 1 >= 1) Add(tmp, Id(i - 1, j), INF);\n\t\t\tif (j + 1 <= m) Add(tmp, Id(i, j + 1), INF);\n\t\t\tif (j - 1 >= 1) Add(tmp, Id(i, j - 1), INF); \n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tRead(x);\n\t\t\tsum += x;\n\t\t\tint tmp = ++cnt;\n\t\t\tAdd(tmp, t, x);\n\t\t\tAdd(Id(i, j), tmp, INF);\n\t\t\tif (i + 1 <= n) Add(Id(i + 1, j), tmp, INF);\n\t\t\tif (i - 1 >= 1) Add(Id(i - 1, j), tmp, INF);\n\t\t\tif (j + 1 <= m) Add(Id(i, j + 1), tmp, INF);\n\t\t\tif (j - 1 >= 1) Add(Id(i, j - 1), tmp, INF);\n\t\t}\n\tPut(sum - Maxflow());\n\treturn 0;\n}\n```",
        "postTime": 1584186469,
        "uid": 73983,
        "name": "Infiltrator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4313 \u3010\u6587\u7406\u5206\u79d1\u3011"
    },
    {
        "content": "## \u95ee\u9898\u63cf\u8ff0\n\n[BZOJ3894](https://www.lydsy.com/JudgeOnline/problem.php?id=3894)\n\n[LG4313](https://www.luogu.com.cn/problem/P4313)\n\n---\n\n## \u9898\u89e3\n\n\u663e\u7136\u4e00\u4e2a\u4eba\u53ea\u80fd\u9009\u6587/\u7406 -> \u4e00\u4e2a\u4eba\u53ea\u80fd\u5c5e\u4e8e\u6587\uff08S\uff09\u3001\u7406\uff08T\uff09\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\n\n\u53ef\u4ee5\u628a\u9009\u62e9\u6587\u5f97\u5230 $art$ \u7684\u6536\u76ca\u770b\u505a\u9009\u62e9\u6587\u5931\u53bb $science$ \u7684\u6536\u76ca\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u5272\u4e86\u3002\n\n\u8003\u8651\u5982\u4f55\u5904\u7406\u5468\u56f4\u4eba\u90fd\u9009\n\n\u5bf9\u4e8e\u6587\u79d1\uff0c\u518d\u65b0\u5efa\u4e00\u4e2a $(i,j)'$ \uff0c\u4ece S \u5411\u5176\u8fde\u8fb9\uff0c\u6743\u503c\u4e3a $sameart$ \uff0c\u518d\u4ece $(i,j)'$ \u5411 $(i,j)$ \u548c\u5b83\u5468\u56f4\u7684\u56db\u4e2a\u70b9\u8fde\u8fb9\uff0c\u6743\u503c\u4e3aINF\uff0c\u4ee3\u8868\u53ea\u6709\u5f53\u8fd9\u516d\u4e2a\u70b9\u90fd\u5728\u96c6\u5408 $S$ \u91cc\u7684\u65f6\u5019\uff0c\u624d\u80fd\u4e0d\u5272\u6389 S \u5230 $(i,j)'$ \u7684\u8fde\u8fb9\uff0c\u83b7\u5f97\u8fd9\u4e2a\u6536\u76ca\u3002\n\n\u7406\u79d1\u540c\u7406\u3002\n\n---\n\n## $\\mathrm{Code}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int INF=0x3f3f3f3f;\n\nint S,T,n,m;\nint art[507][507],science[507][507];\nint artsame[507][507],sciencesame[507][507];\n\nint Head[500*500*3+100],to[5000007],Next[5000007],w[5000007],tot=1;\n\nvoid addedge(int x,int y,int z){\n\tto[++tot]=y,Next[tot]=Head[x],Head[x]=tot,w[tot]=z;\n}\n\nvoid add(int x,int y,int z){\n\taddedge(x,y,z);addedge(y,x,0);\n}\n\nint d[500*500*3+100];\n\nbool bfs(void){\n\tmemset(d,0,sizeof(d));\n\tqueue<int>q;q.push(S);d[S]=1;\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=Head[x];i;i=Next[i]){\n\t\t\tint y=to[i];\n\t\t\tif(d[y]||!w[i]) continue;\n\t\t\td[y]=d[x]+1;q.push(y);\n\t\t\tif(y==T) return true;\n\t\t}\n\t}\n\treturn false;\n}\n\nint dfs(int x,int flow){\n\tif(x==T) return flow;\n\tint rest=flow;\n\tfor(int i=Head[x];i&&rest;i=Next[i]){\n\t\tint y=to[i];\n\t\tif(d[y]!=d[x]+1||!w[i]) continue;\n\t\tint k=dfs(y,min(rest,w[i]));\n\t\tif(!k) d[y]=0;\n\t\telse w[i]-=k,w[i^1]+=k,rest-=k;\n\t}\n\treturn flow-rest;\n}\n\nint Dinic(void){\n\tint res(0),t;\n\twhile(bfs()){\n\t\twhile(t=dfs(S,INF)) res+=t;\n\t}\n\treturn res;\n}\n\nint total;\nint dx[5]={0,0,1,-1,0};\nint dy[5]={1,-1,0,0,0};\n\nbool check(int x,int y){\n\tif(x>=1&&x<=n&&y>=1&&y<=m) return true;\n\treturn false;\n}\n\nint id(int x,int y,int id){\n\treturn (id-1)*n*m+(x-1)*m+y;\n}\n\nvoid Init(void){\n\tscanf(\"%d%d\",&n,&m);\n\tS=n*m*3+1,T=S+1;\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++){\n\t\tscanf(\"%d\",&art[i][j]);total+=art[i][j];\n\t\tadd(S,id(i,j,1),art[i][j]);\n\t}\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++){\n\t\tscanf(\"%d\",&science[i][j]);total+=science[i][j];\n\t\tadd(id(i,j,1),T,science[i][j]);\n\t}\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++){\n\t\tscanf(\"%d\",&artsame[i][j]);total+=artsame[i][j];\n\t\tadd(S,id(i,j,2),artsame[i][j]);\n\t}\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++){\n\t\tscanf(\"%d\",&sciencesame[i][j]);total+=sciencesame[i][j];\n\t\tadd(id(i,j,3),T,sciencesame[i][j]);\n\t}\n\tfor(int x=1;x<=n;x++){\n\t\tfor(int y=1;y<=m;y++){\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\tint nx=x+dx[i],ny=y+dy[i];\n\t\t\t\tif(!check(nx,ny)) continue;\n\t\t\t\tadd(id(nx,ny,2),id(x,y,1),INF);\n\t\t\t\tadd(id(x,y,1),id(nx,ny,3),INF);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid Work(void){\n\tint maxflow=Dinic();\n\tprintf(\"%d\\n\",total-maxflow);\n}\n\nint main(){\n\tInit();\n\tWork();\n}\n```",
        "postTime": 1579102895,
        "uid": 28910,
        "name": "\u89c8\u904d\u5343\u79cb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4313 \u3010\u6587\u7406\u5206\u79d1\u3011"
    },
    {
        "content": "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**\u5206\u6790\u4e0e\u9898\u89e3\uff1a**\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e0a\u4e00\u9053\u9898\u76ee\uff0c\u628a\u4f5c\u7269\u6539\u6210\u540c\u5b66\uff0c$A$\u8015\u5730\u6539\u4e3a\u6587\u79d1\uff0c$B$\u8015\u5730\u6539\u4e3a\u7406\u79d1\uff0c\u6bcf\u4e00\u4e2a\u7ec4\u5408\u5c31\u662f\u5f53\u524d\u540c\u5b66\u4e0e\u4ed6\u6240\u6709\u76f8\u90bb\u7684\u540c\u5b66\u90fd\u9009\u6587\u79d1\u548c\u7406\u79d1\u3002\u7136\u540e\u5c31\u662f\u5411\u4e0a\u4e00\u9053\u9898\u4e00\u6837\u5efa\u56fe\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```c++\n// luogu-judger-enable-o2\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define N 50000\n#define M 5000000\n#define inf 1000000000\nint n,m,s,t,ans,dis[N],dir1[5]={0,1,-1,0,0},dir2[5]={0,0,0,-1,1};\nint cur[N],head[N],to[M<<1],val[M<<1],nxt[M<<1],idx=1;\nvoid add(int a,int b,int c)\n    {nxt[++idx]=head[a],to[idx]=b,val[idx]=c,head[a]=idx;}\nbool bfs() \n{\n    memset(dis,-1,sizeof dis);\n    queue <int> q;q.push(s),dis[s]=0;\n    while(!q.empty())\n    {\n        int p=q.front();q.pop();\n        if(p==t) return true;\n        for(int i=head[p];i;i=nxt[i])\n            if(val[i]>0&&dis[to[i]]==-1)\n                dis[to[i]]=dis[p]+1,q.push(to[i]);\n    } return false;\n}\nint dfs(int p,int flow)\n{\n    int now,temp=flow;\n    if(p==t) return flow;\n    for(int i=cur[p];i;i=nxt[i])\n        if(val[i]>0&&dis[to[i]]==dis[p]+1)\n        {\n            now=dfs(to[i],min(val[i],temp));\n            if(!now) dis[to[i]]=-1;\n            temp-=now,val[i]-=now,val[i^1]+=now;\n            if(val[i]) cur[p]=i;\n            if(!temp) break;\n        } return flow-temp;\n}\nvoid dinic() {while(bfs()) memcpy(cur,head,sizeof head),ans-=dfs(s,inf);}\nbool in(int x,int y) {return x&&x<=n&&y&&y<=m;}\nint pla(int i,int j) {return (i-1)*m+j;}\nint main()\n{\n    scanf(\"%d%d\",&n,&m),s=n*m*4+1,t=n*m*4+2;\n    for(int i=1;i<=n;i++) for(int j=1;j<=m;j++)\n        add(pla(i,j),pla(i,j)+n*m,inf),add(pla(i,j)+n*m,pla(i,j),0);\n    for(int i=1;i<=n;i++) for(int j=1,a;j<=m;j++) scanf(\"%d\",&a),\n        add(s,pla(i,j),a),add(pla(i,j),s,0),ans+=a;\n    for(int i=1;i<=n;i++) for(int j=1,a;j<=m;j++) scanf(\"%d\",&a),\n        add(pla(i,j)+n*m,t,a),add(t,pla(i,j)+n*m,0),ans+=a;\n    for(int i=1;i<=n;i++) for(int j=1,a;j<=m;j++) { scanf(\"%d\",&a),\n        add(s,pla(i,j)+n*m*2,a),add(pla(i,j)+n*m*2,s,0),ans+=a;\n        for(int k=0;k<=4;k++) if(in(i+dir1[k],j+dir2[k]))\n            add(pla(i,j)+n*m*2,pla(i+dir1[k],j+dir2[k]),inf),\n            add(pla(i+dir1[k],j+dir2[k]),pla(i,j)+n*m*2,0);}\n    for(int i=1;i<=n;i++) for(int j=1,a;j<=m;j++) { scanf(\"%d\",&a),\n        add(pla(i,j)+n*m*3,t,a),add(t,pla(i,j)+n*m*3,0),ans+=a;\n        for(int k=0;k<=4;k++) if(in(i+dir1[k],j+dir2[k]))\n            add(pla(i+dir1[k],j+dir2[k])+n*m,pla(i,j)+n*m*3,inf),\n            add(pla(i,j)+n*m*3,pla(i+dir1[k],j+dir2[k])+n*m,0);}\n    dinic(),printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1545619320,
        "uid": 52851,
        "name": "ysy20021208",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4313 \u3010\u6587\u7406\u5206\u79d1\u3011"
    }
]