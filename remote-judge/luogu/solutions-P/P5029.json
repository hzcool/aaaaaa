[
    {
        "content": "#### 10 Pts\r\n\r\n\u8f93\u51fa 0 \u6216 n \u90fd\u80fd\u5f97\u5230\u5341\u5206\u3002\r\n\r\n#### 0~20 Pts\r\n```\r\nrand()%2 == 1 output(1)\r\nrand()%2 == 0 output(n)\r\n```\r\n#### 20 Pts\r\n\r\n$n = 1$\uff0c\u8003\u8651\u5efa\u51fa\u4e00\u5f20\u56fe\uff0c\u5224\u65ad\u4ece 1 \u53f7\u70b9\u80fd\u5426\u5230 k \u53f7\u70b9\u5373\u53ef\u3002\r\n\r\n#### \u53e6\u5916 10 Pts\r\n\r\n\u4f7f\u7528\u7f51\u7edc\u6d41\uff0c\u66b4\u529b\u5efa\u56fe\uff0c$op = 1$\uff0c\u5efa\u7acb\u4e00\u6761\u4ece $a$ \u5230 $b$ \u7684\u8fb9\uff0c\u8dd1 EK \u5373\u53ef\u3002\r\n\r\n#### \u53e6\u5916 20 Pts\r\n\r\n\u8003\u8651\u65b9\u6848 2 \u548c 3\uff0c\u5efa\u7acb\u4e24\u4e2a\u865a\u62df\u8282\u70b9\uff0c\u8d77\u70b9(\u53ef\u80fd\u6709\u591a\u4e2a)\u5411\u5176\u4e2d\u4e00\u4e2a\u5efa\u7acb\u6d41\u91cf\u4e3a\u65e0\u9650\u5927\u7684\u8fb9\uff0c\u53e6\u4e00\u4e2a\u5411\u7ec8\u70b9(\u53ef\u80fd\u6709\u591a\u4e2a)\u5efa\u7acb\u6d41\u91cf\u4e3a\u65e0\u9650\u5927\u7684\u8fb9\uff0c\u7136\u540e\u4ece\u865a\u62df\u8282\u70b9\u4e00\u4e2a\u5411\u53e6\u4e00\u4e2a\u5efa\u7acb\u6d41\u91cf\u4e3a\u8fd9\u4e2a\u65b9\u6848\u4f7f\u7528\u6b21\u6570\u9650\u5236\u7684\u8fb9\u3002\u7136\u540e\u8dd1 EK \u5373\u53ef\u3002\r\n\r\n#### 70 Pts\r\n\r\n\u4f7f\u7528 Dinic(\u6216\u5176\u4ed6\u66f4\u52a0\u4f18\u79c0\u7684\u7f51\u7edc\u6d41\u7b97\u6cd5)\uff0c\u5176\u4ed6\u5982\u53e6\u5916 20 Pts \u7684\u5efa\u56fe\u65b9\u5f0f\u3002\r\n\r\n#### 100 Pts\r\n\r\n\u8003\u8651\u4e0a\u4e00\u4e2a\u8fde\u8fb9\u65b9\u5f0f\u7684\u74f6\u9888\uff0c\u5c31\u662f\u8fde\u63a5\u7684\u8282\u70b9\u6570\u91cf\u4e3a $n$ \u4e2a\uff0c\u8fd9\u4e0d\u53ef\u4ee5\u63a5\u53d7\u3002\r\n\r\n\u6211\u4eec\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u8fde\u8fb9\uff0c\u8fd9\u6837\u8fde\u63a5\u7684\u8282\u70b9\u6570\u91cf\u4e3a $log(n)$ \u4e2a\uff0c\u7531\u4e8e\u6570\u636e\u968f\u673a\uff0cDinic(\u6216\u5176\u4ed6\u66f4\u52a0\u4f18\u79c0\u7684\u7f51\u7edc\u6d41\u7b97\u6cd5) \u53ef\u4ee5\u8f7b\u677e\u8dd1\u8fc7\u3002",
        "postTime": 1542153270,
        "uid": 25308,
        "name": "Wen_kr",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5029 \u3010T'ill It's Over\u3011"
    },
    {
        "content": "\u51fa\u9898\u4eba\u5df2\u7ecf\u628a\u601d\u8def\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\u2026\u2026\u6211\u5c31\u53ea\u662f\u53d1\u4e00\u4e0b\u4e11\u964b\u7684\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<iostream>\n#define s 0\n#define t 1000001\n#define r(x) ((x<<1)+(k<<2))\n#define c(x) ((x<<1|1)+(k<<2))\nusing namespace std;\n\nint n,m,k,xl,xr,yl,yr,qi,com;\nint nxt[4000100],to[4000100],head[1000100],quan[4000100],gs=1;\nint l[400010],r[400010],cx,d[400010],d2[400010];\nint v[400010],top,ans;\nint ju[1000100];\nqueue<int> q;\n\ninline void lb(int x,int y,int z){\n\tnxt[++gs]=head[x];\n\thead[x]=gs;\n\tto[gs]=y;\n\tquan[gs]=z;\n}\n//d\u5b58\u50a8\u7684\u662f\u8708\u86a3\u5230\u8fbe\u7684\u5149\u660e\u7a0b\u5ea6\u7684\u5927\u5c0f\uff0cd2\u5b58\u50a8\u7684\u662f\u8708\u86a3\u51fa\u53d1\u7684\u5149\u660e\u7a0b\u5ea6\u7684\u5927\u5c0f\nvoid build(int x,int li,int ri){\n\tl[x]=li;r[x]=ri;d[x]=++cx;\n\tif(li!=ri)d2[x]=++cx;\n\telse d2[x]=d[x];\n\tif(li==ri){\n\t\tif(li==1)lb(s,d[x],n),lb(d[x],s,0);\n\t\tif(li==k)lb(d[x],t,n),lb(t,d[x],0);\n\t\treturn;\n\t}\n\tint mid=(li+ri)>>1;\n\tbuild(x<<1,li,mid);build(x<<1|1,mid+1,ri);\n    //\u5411\u81ea\u5df1\u7684\u53f6\u5b50\u8282\u70b9\u8fde\u8fb9\n\tlb(d[x],d[x<<1],0x3f3f3f3f);lb(d[x<<1],d[x],0);\n\tlb(d[x],d[x<<1|1],0x3f3f3f3f);lb(d[x<<1|1],d[x],0);\n\tlb(d2[x<<1],d2[x],0x3f3f3f3f);lb(d2[x],d2[x<<1],0);\n\tlb(d2[x<<1|1],d2[x],0x3f3f3f3f);lb(d2[x],d2[x<<1|1],0);\n}\n\nvoid query(int x,int li,int ri,int *ar){\n\tif(l[x]>ri || r[x]<li)return;\n\tif(l[x]>=li && r[x]<=ri){\n\t\tv[++top]=ar[x];return;\n\t}\n\tquery(x<<1,li,ri,ar);query(x<<1|1,li,ri,ar);\n}\n//dicnic\u7f51\u7edc\u6d41\nint bfs(){\n\tmemset(ju,0,sizeof(ju));\n\tq.push(s);\n\tju[s]=1;\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=head[x];i;i=nxt[i]){\n\t\t\tif(!ju[to[i]] && quan[i]){\n\t\t\t\tju[to[i]]=ju[x]+1;\n\t\t\t\tq.push(to[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn ju[t];\n}\n\nint dfs(int x,int di){\n\tif(x==t)return di;\n\tint si=0;\n\tfor(int i=head[x];i;i=nxt[i]){\n\t\tif(si<di && quan[i] && ju[to[i]]-ju[x]==1){\n\t\t\tint li=dfs(to[i],min(di-si,quan[i]));\n\t\t\tsi+=li;\n\t\t\tquan[i]-=li;\n\t\t\tquan[i^1]+=li;\n\t\t}\n\t}\n\tif(!si)ju[x]=0;\n\treturn si;\n}\n\nint main(){\n\tscanf(\"%d %d %d\",&n,&m,&k);\n\tbuild(1,1,k);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d %d\",&com,&qi);\n\t\tint ci=++cx,ri=++cx;\n\t\tlb(ri,ci,qi);lb(ci,ri,0);\n\t\tswitch(com){\n        //\u5206\u7c7b\u8ba8\u8bba\u51e0\u79cd\u60c5\u51b5\uff0c\u5176\u5b9e\u672c\u8d28\u4e0a\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u5199\u597d\u7b2c\u4e00\u4e2a\u4e4b\u540e\u590d\u5236\u7c98\u8d34\u5373\u53ef\n        //\u6ce8\u610f\u7684\u70b9\u5c31\u662f\u9700\u8981\u628a\u8f93\u5165\u7684\u5927\u5c0f\u548ck\u53d6\u8f83\u5c0f\u503c\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u53ea\u5f00\u5230\u4e86k\n\t\t\tcase 1:{\n\t\t\t\tscanf(\"%d %d\",&xl,&yl);xl=min(xl,k);yl=min(yl,k);\n\t\t\t\tquery(1,xl,xl,d2);\n\t\t\t\twhile(top)lb(v[top],ri,0x3f3f3f3f),lb(ri,v[top--],0);\n\t\t\t\tquery(1,yl,yl,d);\n\t\t\t\twhile(top)lb(ci,v[top],0x3f3f3f3f),lb(v[top--],ci,0);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2:{\n\t\t\t\tscanf(\"%d %d %d\",&xl,&xr,&yl);xl=min(xl,k);yl=min(yl,k);xr=min(xr,k);\n\t\t\t\tquery(1,xl,xr,d2);\n\t\t\t\twhile(top)lb(v[top],ri,0x3f3f3f3f),lb(ri,v[top--],0);\n\t\t\t\tquery(1,yl,yl,d);\n\t\t\t\twhile(top)lb(ci,v[top],0x3f3f3f3f),lb(v[top--],ci,0);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3:{\n\t\t\t\tscanf(\"%d %d %d\",&xl,&yl,&yr);xl=min(xl,k);yl=min(yl,k);yr=min(yr,k);\n\t\t\t\tquery(1,xl,xl,d2);\n\t\t\t\twhile(top)lb(v[top],ri,0x3f3f3f3f),lb(ri,v[top--],0);\n\t\t\t\tquery(1,yl,yr,d);\n\t\t\t\twhile(top)lb(ci,v[top],0x3f3f3f3f),lb(v[top--],ci,0);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 4:{\n\t\t\t\tscanf(\"%d %d %d %d\",&xl,&xr,&yl,&yr);xl=min(xl,k);xr=min(xr,k);yl=min(yl,k);yr=min(yr,k);\n\t\t\t\tquery(1,xl,xr,d2);\n\t\t\t\twhile(top)lb(v[top],ri,0x3f3f3f3f),lb(ri,v[top--],0);\n\t\t\t\tquery(1,yl,yr,d);\n\t\t\t\twhile(top)lb(ci,v[top],0x3f3f3f3f),lb(v[top--],ci,0);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\twhile(bfs()){\n\t\tans+=dfs(s,0x7fffffff);\n\t}\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1542421434,
        "uid": 82611,
        "name": "PurpleWonder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5029 \u3010T'ill It's Over\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u4f18\u5316\u8fde\u8fb9+\u7f51\u7edc\u6d41\u6a21\u677f\u9898\u3002\n\n\u8003\u8651\u4e00\u5f20$k$\u4e2a\u7ed3\u70b9\u7684\u56fe\u3002\u64cd\u4f5c1\u76f4\u63a5\u8fde\u8fb9\uff0c\u64cd\u4f5c2\u30013\u5c31\u679a\u4e3e\u533a\u95f4\u7684\u6bcf\u4e2a\u70b9\u8fde\u8fb9\uff0c\u64cd\u4f5c4\u5c31\u5206\u522b\u679a\u4e3e\u4e24\u4e2a\u533a\u95f4\u7684\u70b9\u8fde\u8fb9\uff0c\u4ee5\u4e0a\u8fb9\u7684\u5bb9\u91cf\u90fd\u8bbe\u4e3a\u76f8\u5e94\u7684$l$\u3002\u7136\u540e\u6e90\u70b9\u5411$1$\u8fde\u8fb9\uff0c$k$\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u90fd\u4e3a$n$\uff0c\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u590d\u6742\u5ea6\u80af\u5b9a\u4e0d\u884c\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u8fde\u8fb9\u3002\n\n\u5f00\u4e24\u68f5\u7ebf\u6bb5\u6811$T_1,T_2$\uff0c$T_1$\u4f53\u73b0\u5916\u90e8\u7ed3\u70b9\u8fde\u5165\u533a\u95f4\uff0c$T_2$\u4f53\u73b0\u533a\u95f4\u8fde\u51fa\u5230\u5916\u90e8\u7ed3\u70b9\u3002$T_1$\u5185\u90e8\u4ece\u4e0a\u5f80\u4e0b\u8fde\u8fb9\uff0c$T_2$\u5185\u90e8\u4ece\u4e0b\u5f80\u4e0a\u8fde\u8fb9\u3002\u6ce8\u610f\u4e24\u68f5\u6811\u7684\u53f6\u5b50\u8282\u70b9\u5e94\u8be5\u5171\u7528\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd94\u79cd\u8fde\u8fb9\u90fd\u7edf\u4e00\u4e3a\u533a\u95f4$[l_1,r_1]$\u5411\u533a\u95f4$[l_2,r_2]$\u8fde\u8fb9\uff0c\u5355\u4e2a\u70b9\u4e5f\u53ef\u4ee5\u770b\u505a\u5de6\u53f3\u7aef\u70b9\u76f8\u7b49\u7684\u533a\u95f4\u3002\u6211\u4eec\u65b0\u5efa\u4e24\u4e2a\u70b9$u,v$\uff0c\u4ece$u$\u5411$v$\u8fde\u8fb9\u5bb9\u91cf\u4e3a$l$\uff0c\u7136\u540e\u5728$T_2$\u4e0a\u4ece\u533a\u95f4$[l_1,r_1]$\u5411$u$\u8fde\u8fb9\uff0c\u5728$T_1$\u4e0a\u4ece$v$\u5411\u533a\u95f4$[l_2,r_2]$\u8fde\u8fb9\uff0c\u8fd9\u4e9b\u8fb9\u5bb9\u91cf\u90fd\u662f$\\infty$\u3002\n\n\u7136\u540e\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u6700\u8fd1\u505a\u4e86\u597d\u51e0\u9053\u8fd9\u79cd\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u7684\u9898\u4e86\uff0c\u6bd4\u5982\u5341\u4e8c\u7701\u8054\u80032019\u5b57\u7b26\u4e32\u95ee\u9898\uff0cSNOI2019\u901a\u4fe1\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\ntemplate <typename T> inline void read(T& x) {\n    int f = 0, c = getchar(); x = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) x = x * 10 + c - 48, c = getchar();\n    if (f) x = -x;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& x, Args&... args) {\n    read(x); read(args...); \n}\ntemplate <typename T> void write(T x) {\n    if (x < 0) x = -x, putchar('-');\n    if (x > 9) write(x / 10);\n    putchar(x % 10 + 48);\n}\ntemplate <typename T> inline void writeln(T x) { write(x); puts(\"\"); }\ntemplate <typename T> inline bool chkmin(T& x, const T& y) { return y < x ? (x = y, true) : false; }\ntemplate <typename T> inline bool chkmax(T& x, const T& y) { return x < y ? (x = y, true) : false; }\n\nconst int maxv = 1e6 + 7, maxe = 2e6 + 7, inf = INT_MAX;\n\nstruct Network {\n    int v[maxe << 1], cap[maxe << 1], flow[maxe << 1], next[maxe << 1], tot;\n    int head[maxv], curr[maxv], height[maxv];\n    int s, t, V;\n    Network() : tot(-1) {}\n    void addedge(int x, int y, int c) {\n        v[++tot] = y; cap[tot] = c; next[tot] = head[x]; head[x] = tot;\n        v[++tot] = x; cap[tot] = 0; next[tot] = head[y]; head[y] = tot;\n    }\n    bool bfs() {\n        static int q[maxv] = {0};\n        int l = 0, r = 1;\n        for (int i = 1; i <= V; ++i) height[i] = 0;\n        height[q[1] = s] = 1;\n        while (l < r) {\n            int x = q[++l];\n            for (int i = head[x]; ~i; i = next[i])\n                if (cap[i] > flow[i] && !height[v[i]])\n                    height[q[++r] = v[i]] = height[x] + 1;\n        }\n        return height[t];\n    }\n    int dfs(int x, int cf) {\n        if (x == t || !cf) return cf;\n        int getf = 0;\n        for (int i = curr[x]; ~i; i = next[i], curr[x] = i)\n            if (cap[i] > flow[i] && height[v[i]] == height[x] + 1) {\n                int nf = dfs(v[i], std::min(cap[i] - flow[i], cf));\n                if (nf) {\n                    flow[i] += nf; flow[i ^ 1] -= nf; getf += nf;\n                    if (!(cf -= nf)) break;\n                }\n            }\n        return getf;\n    }\n    int maxflow() {\n        int ans = 0;\n        while (bfs()) {\n            for (int i = 1; i <= V; ++i) curr[i] = head[i];\n            ans += dfs(s, inf);\n        }\n        return ans;\n    }\n};\nNetwork G;\n\nstruct Node {\n    int lc, rc;\n    Node() : lc(0), rc(0) {}\n};\nNode T[maxv];\nint tot, root1, root2;\nint n, m, K, s, t;\n\ninline int newNode() { G.head[++tot] = -1; return tot; }\n\nvoid build(int &o1, int &o2, int l, int r) {\n    o1 = newNode();\n    o2 = l == r ? o1 : newNode();\n    if (l == r) {\n        if (l == 1) G.addedge(s, o1, n);\n        if (l == K) G.addedge(o1, t, n);\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(T[o1].lc, T[o2].lc, l, mid);\n    build(T[o1].rc, T[o2].rc, mid + 1, r);\n    G.addedge(o1, T[o1].lc, inf);\n    G.addedge(o1, T[o1].rc, inf);\n    G.addedge(T[o2].lc, o2, inf);\n    G.addedge(T[o2].rc, o2, inf);\n}\nvoid link(int o, int lb, int rb, int l, int r, int u, int d) {\n    if (!o || l > rb || r < lb) return;\n    if (l <= lb && r >= rb) {\n        if (d == 1) G.addedge(u, o, inf);\n        else G.addedge(o, u, inf);\n        return;\n    }\n    int mid = (lb + rb) >> 1;\n    link(T[o].lc, lb, mid, l, r, u, d);\n    link(T[o].rc, mid + 1, rb, l, r, u, d);\n}\n\nint main() {\n    read(n, m, K);\n    s = newNode(); t = newNode();\n    G.s = s; G.t = t;\n    build(root1, root2, 1, K);\n    for (int i = 1; i <= m; ++i) {\n        int op, lim; read(op, lim);\n        int from = newNode(), to = newNode();\n        G.addedge(from, to, lim);\n        int l1, r1, l2, r2;\n        if (op == 1) {\n            read(l1, l2);\n            r1 = l1; r2 = l2;\n        } else if (op == 2) {\n            read(l1, r1, l2);\n            r2 = l2;\n        } else if (op == 3) {\n            read(l1, l2, r2);\n            r1 = l1;\n        } else read(l1, r1, l2, r2);\n        link(root1, 1, K, l2, r2, to, 1);\n        link(root2, 1, K, l1, r1, from, 2);\n    }\n    G.V = tot;\n    writeln(G.maxflow());\n    return 0;\n}\n```\n",
        "postTime": 1558191027,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5029 \u3010T'ill It's Over\u3011"
    },
    {
        "content": "> \u7ed9\u4f60n\u4e2a1,\u4f60\u9700\u8981\u5c3d\u53ef\u80fd\u591a\u5730\u628a\u4ed6\u4eec\u53d8\u4e3ak.\n>\n> \u6709m\u79cd\u64cd\u4f5c,\u6bcf\u79cd\u64cd\u4f5c\u90fd\u6709\u4e00\u4e2a\u9650\u5b9a\u6b21\u6570.\n>\n> \u64cd\u4f5c\u67094\u79cd\u7c7b\u578b:\n>\n> 1. $x ~y$ \u628a\u4e00\u4e2ax\u53d8\u4e3ay\n> 2. $x ~y~ a$ \u628a\u4e00\u4e2a$[x,y]$\u5185\u7684\u6570\u53d8\u4e3aa\n> 3. $x~ a ~b$\u628a\u4e00\u4e2ax\u53d8\u4e3a$[a,b]$\u4e2d\u7684\u4e00\u4e2a\u6570.\n> 4. $x ~y~ a~ b$\u628a\u4e00\u4e2a$[x,y]$\u5185\u7684\u6570\u53d8\u4e3a$[a,b]$\u5185\u7684\u4e00\u4e2a\u6570.\n\n\u6211\u4eec\u53ef\u4ee5\u628a4\u4e2d\u7c7b\u578b\u5212\u5f52\u4e3a\u7b2c4\u79cd:$[x,y]->[a,b]$.\n\n\u7136\u540e\u8003\u8651\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9.\n\n\u7ebf\u6bb5\u6811\u5206\u4e24\u68f5,\u4ee3\u8868\u5165\u6811\u548c\u51fa\u6811.\n\n\u5bf9\u4e8e\u5165\u6811,\u7ebf\u6bb5\u6811\u513f\u5b50\u5411\u7236\u4eb2\u8fde\u6709\u5411\u8fb9.\n\n\u5bf9\u4e8e\u51fa\u6811,\u7236\u4eb2\u5411\u513f\u5b50\u8fde\u8fb9.\n\n\n\u6211\u4eec\u5148\u628a\u4ed6\u4eec\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u627e\u5230,\u7136\u540e\u5bf9\u4e8e\u5165,\u6211\u4eec\u628a\u8282\u70b9\u8fde\u5411\u4e00\u4e2a\u65b0\u8282\u70b9$left$,\u5bf9\u4e8e\u51fa,\u6211\u4eec\u7528\u65b0\u8282\u70b9$right$\u8fde\u5411\u5bf9\u5e94\u7ebf\u6bb5\u6811\u8282\u70b9.(\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7528$\\log$\u7684\u7a7a\u95f4\u5b8c\u6210\u4e00\u6b21\u8fde\u63a5)\n\n\u6700\u540e\u8fde$(left,right,limit)$,\u8868\u793a\u9650\u5236\u6b21\u6570.\n\n\u53c8\u56e0\u4e3a\u4e00\u4e2a\u6570\u53ef\u80fd\u6709\u591a\u6b21\u64cd\u4f5c,\u6240\u4ee5\u51fa\u6811\u7684\u53f6\u5b50\u7ed3\u70b9\u5e94\u8be5\u8fde\u56de\u5165\u6811\u7684\u5bf9\u5e94\u8282\u70b9.\n\n\n\u5c0f\u7ec6\u8282:\u5bf9\u4e8e$[1,n]$\u7684\u7ebf\u6bb5\u6811\u67e5\u533a\u95f4\u7684\u8bdd,\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u8282\u70b9**\u51c6\u786e**\u6765\u8bb2\u662f$2\\log n$\u7684,\u6240\u4ee5\u7a7a\u95f4\u8981\u6ce8\u610f\u4e00\u4e0b.\n\n```cpp\n#include<bits/stdc++.h>\n#define gc getchar()\nusing namespace std;\nconst int N=4e5+10,M=N*8,inf=2e9;\ntemplate<class o>void qr(o&x) {\n\tchar c=gc;int f=1;x=0;\n\twhile(!isdigit(c)){if(c=='-')f=-1;c=gc;}\n\twhile(isdigit(c))x=x*10+c-'0',c=gc;\n\tx*=f;\n}\ntemplate<class o>void qw(o x) {\n\tif(x/10)qw(x/10);\n\tputchar(x%10+'0');\n}\ntemplate<class o> void pr1(o x) {\n\tif(x<0)x=-x,putchar('-');\n\tqw(x); putchar(' ');\n}\ntemplate<class o>void pr2(o x) {\n\tif(x<0)x=-x,putchar('-');\n\tqw(x);puts(\"\");\n}\n\nint n,m,kk,st,ed,d[N],ans;\n\n//Dicnic\nstruct edge{int y,next,c;}a[M]; int len=1,last[N],cur[N];\nvoid ins(int x,int y,int z) {a[++len]=(edge){y,last[x],z}; last[x]=len;}\nvoid add(int x,int y,int z) {ins(x,y,z); ins(y,x,0);}\n\nbool bfs() {\n\tmemset(d,0,sizeof d); \n\tstatic int q[N],l,r;\n\tq[l=r=1]=st; d[st]=1;\n\tmemcpy(cur,last,sizeof cur);\n\twhile(l<=r) {\n\t\tint x=q[l++];\n\t\tfor(int k=last[x],y;k;k=a[k].next)\n\t\t\tif(!d[y=a[k].y]&&a[k].c) {\n\t\t\t\td[y]=d[x]+1;\n\t\t\t\tq[++r]=y;\n\t\t\t}\n\t}\n\treturn d[ed];\n}\n\nint dfs(int x,int f) {\n\tif(x==ed) return f;\n\tint s=0,t;\n\tfor(int &k=cur[x],y,z;k;k=a[k].next) {\n\t\ty=a[k].y; z=a[k].c;\n\t\tif(z>0&&d[y]==d[x]+1) {\n\t\t\ts+=t=dfs(y,min(f-s,z));\n\t\t\ta[k].c-=t; a[k^1].c+=t;\n\t\t\tif(s==f) return f;\n\t\t}\n\t}\n\tif(!s) d[x]=0;\n\treturn s;\n}\n\nint dicnic() {\n\tint s=0;\n\twhile(bfs())\n\t\ts+=dfs(st,inf);\n\treturn s;\n}\n\n//Disc/Queries\nstruct rec {\n\tint op,lim,x,y,a,b;\n} q[N];\nint val[N],num;\nvoid disc() {\n\tsort(val+1,val+num+1);\n\tnum=unique(val+1,val+num+1)-(val+1);\n}\nint find(int x) {return lower_bound(val+1,val+num+1,x)-val;}\n\n//Segment Tree\nint cnt;\nstruct Segment_Tree {\n\tint son[2][N],root,id[N];\n\t#define lc son[0][x]\n\t#define rc son[1][x]\n\tvoid bt(int &x,int l,int r,int op) {\n\t\tx=++cnt;\n\t\tif(l==r) {id[l]=x; return ;}\n\t\tint mid=(l+r)/2;\n\t\tbt(lc,l,mid,op);\n\t\tbt(rc,mid+1,r,op);\n\t\tif(op==1) add(lc,x,inf),add(rc,x,inf);\n\t\telse add(x,lc,inf),add(x,rc,inf);\n\t}\n\tint sta[44],top;\n\tvoid ask(int x,int l,int r,int L,int R) {\n\t\tif(L<=l&&r<=R) {sta[++top]=x; return ;}\n\t\tint mid=(l+r)>>1;\n\t\tif(L<=mid) ask(lc,l,mid,L,R);\n\t\tif(mid< R) ask(rc,mid+1,r,L,R);\n\t}\n\tvoid Find(int L,int R) {top=0;ask(root,1,num,L,R);}\n} in,out;//\u5165\u6811,\u51fa\u6811.\n\nint main() {\n\tqr(n); qr(m); qr(kk); if(kk==1) {pr2(n); return 0;}\n\tfor(int i=1;i<=m;i++) {\n\t\tqr(q[i].op); qr(q[i].lim);\n\t\tswitch(q[i].op) {\n\t\t\tcase 1:qr(q[i].x); qr(q[i].a); break;\n\t\t\tcase 2:qr(q[i].x); qr(q[i].y); qr(q[i].a); break;\n\t\t\tcase 3:qr(q[i].x); qr(q[i].a); qr(q[i].b); break;\n\t\t\tcase 4:qr(q[i].x); qr(q[i].y); qr(q[i].a); qr(q[i].b); break;\n\t\t}\n\t\tval[++num]=q[i].x;\n\t\tval[++num]=q[i].y; \n\t\tval[++num]=q[i].a;\n\t\tval[++num]=q[i].b;\n\t}\n\tval[++num]=1; val[++num]=kk; disc();\n\tin.bt(in.root,1,num,1);\n\tout.bt(out.root,1,num,2);\n\tst=in.id[find(1)]; add(out.id[find(kk)],ed=++cnt,n);\n\tfor(int i=1;i<=num;i++) add(out.id[i],in.id[i],inf);\n\tfor(int i=1;i<=m;i++) {\n\t\tint op=q[i].op,t=q[i].lim,x=find(q[i].x),y=q[i].y,l=find(q[i].a),r=q[i].b,left,right;\n\t\tif(op==1) add(in.id[x],out.id[l],t);\n\t\telse if(op==3) {\n\t\t\tout.Find(l,find(r));\n\t\t\tright=++cnt;\n\t\t\tadd(in.id[x],right,t);\n\t\t\tfor(int j=1;j<=out.top;j++) add(right,out.sta[j],t);\n\t\t}\n\t\telse if(op==2) {\n\t\t\tin.Find(x,find(y));\n\t\t\tleft=++cnt;\n\t\t\tadd(left,out.id[l],t);\n\t\t\tfor(int j=1;j<=in.top;j++) add(in.sta[j],left,t);\n\t\t}\n\t\telse {\n\t\t\tleft=++cnt; right=++cnt;\n\t\t\tin.Find(x,find(y));\n\t\t\tout.Find(l,find(r));\n\t\t\tfor(int j=1;j<=in.top;j++) add(in.sta[j],left,t);\n\t\t\tfor(int j=1;j<=out.top;j++) add(right,out.sta[j],t);\n\t\t\tadd(left,right,t);\n\t\t}\n\t}\n\tpr2(dicnic());\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1591314139,
        "uid": 118826,
        "name": "2018LZY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5029 \u3010T'ill It's Over\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6709 $m$ \u4e2a\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5c06\u4e00\u5b9a\u533a\u95f4\u5185\u7684\u6570\u53d8\u6210\u53e6\u4e00\u533a\u95f4\u91cc\u4efb\u610f\u6570\uff0c\u6709\u9650\u5236\u64cd\u4f5c\u6b21\u6570\u3002\u6709\u51e0\u4e2a\u6570\uff0c\u521d\u59cb\u503c\u4e3a $1$\uff0c\u95ee\u6700\u591a\u4f7f\u591a\u5c11\u4e2a\u6570\u53d8\u4e3a $t$\u3002\n\n\u8003\u8651\u6700\u5927\u6d41\uff0c\u6e90\u70b9\u4e3a $1$\uff0c\u6c47\u70b9\u4e3a $k$\u3002\n\n\u8bbe\u67d0\u4e00\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5c06 $[a1,a2]$ \u7684\u6570\u53d8\u6210 $[b1,b2]$ \u7684\u6570\u3002\n\n\u6211\u4eec\u8003\u8651\u5efa\u6a21\u3002\u64cd\u4f5c\u7684\u8bdd\u5c31\u662f\u5c06 $[a1,a2]$ \u6570\u90fd\u5411 $[b1,b2]$ \u91cc\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a\u9650\u5236\u64cd\u4f5c\u6b21\u6570\u7684\u8fb9\u3002\n\n\u90a3\u4e48\u6700\u5927\u6d41\u5c31\u662f\u80fd\u6709\u591a\u5c11\u4e2a\u6570\u80fd\u53d8\u6210 $t$\u3002\n\n\u6bcf\u4e2a\u4f9d\u6b64\u5efa\u8fb9\u662f\u4e0d\u884c\u7684\u3002\n\n\u6211\u4eec\u6a21\u4eff [P6348 [PA2011]Journeys](https://www.luogu.com.cn/problem/P6348) \u4e00\u9898\uff0c\u8003\u8651 DS \u4f18\u5316\u5efa\u56fe\u5373\u53ef\uff0c\u8fd9\u91cc\u7528\u7ebf\u6bb5\u6811\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=4e5+10,M=4e6+10,K=1e5+10;\nconst int inf=1061109567;\nstruct flow {\n\tint n,head[N],nxt[M],ver[M],limit[M],tot=1;\n\tvoid add(int u,int v,int w) {\n\t\tver[++tot]=v; nxt[tot]=head[u]; head[u]=tot; limit[tot]=w;\n\t\tver[++tot]=u; nxt[tot]=head[v]; head[v]=tot; limit[tot]=0;\n\t}\n\tint T,cur[N],dis[N];\n\tint dfs(int u,int res) {\n\t\tif(u==T) return res;\n\t\tint flow=0;\n\t\tfor(int i=cur[u]; i&&res; i=nxt[i]) {\n\t\t\tcur[u]=i;\n\t\t\tint c=min(res,limit[i]),v=ver[i];\n\t\t\tif(dis[u]+1==dis[v]&&c) {\n\t\t\t\tint k=dfs(v,c);\n\t\t\t\tflow+=k; res-=k;\n\t\t\t\tlimit[i]-=k; limit[i^1]+=k;\n\t\t\t}\n\t\t}\n\t\tif(!flow) dis[u]=-1;\n\t\treturn flow;\n\t}\n\tint maxflow(int s,int t) {\n\t\tT=t;\n\t\tint flow=0;\n\t\tfor(; ; ) {\n\t\t\tmemcpy(cur,head,sizeof head);\n\t\t\tmemset(dis,-1,sizeof dis);\n\t\t\tqueue<int> Q;\n\t\t\tQ.push(s); dis[s]=0;\n\t\t\tfor(; Q.size(); ) {\n\t\t\t\tint u=Q.front(); Q.pop();\n\t\t\t\tfor(int i=head[u],v; i; i=nxt[i])\n\t\t\t\t\tif(dis[v=ver[i]]==-1&&limit[i])\n\t\t\t\t\t\tdis[v]=dis[u]+1,Q.push(v);\n\t\t\t}\n\t\t\tif(dis[t]==-1) return flow;\n\t\t\tflow+=dfs(s,inf);\n\t\t}\n\t}\n} g;\nint n,m,k;\nint tot,ls[N],rs[N],rt1,rt2;\nvoid build(int &p1,int &p2,int l,int r) {\n\tif(l==r) return p1=l,p2=l,void();\n\tif(!p1) p1=++tot;\n\tif(!p2) p2=++tot;\n\tint mid=(l+r)/2;\n\tbuild(ls[p1],ls[p2],l,mid); g.add(ls[p1],p1,inf); g.add(p2,ls[p2],inf);\n\tbuild(rs[p1],rs[p2],mid+1,r); g.add(rs[p1],p1,inf); g.add(p2,rs[p2],inf);\n}\nvoid Add(int p,int l,int r,int x,int y,int z,int flag) {\n\tif(x<=l&&r<=y) {\n\t\tif(flag) g.add(p,z,inf);\n\t\telse g.add(z,p,inf);\n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tif(x<=mid) Add(ls[p],l,mid,x,y,z,flag);\n\tif(y>mid) Add(rs[p],mid+1,r,x,y,z,flag);\n}\nint main() {\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\ttot=k;\n\tbuild(rt1,rt2,1,k);\n\tfor(int i=1,op,l,a1,a2,b1,b2; i<=m; i++) {\n\t\tscanf(\"%d%d\",&op,&l);\n\t\tif(op==1) {\n\t\t\tscanf(\"%d%d\",&a1,&b1);\n\t\t\ta2=a1,b2=b1;\n\t\t} else if(op==2) {\n\t\t\tscanf(\"%d%d%d\",&a1,&a2,&b1);\n\t\t\tb2=b1;\n\t\t} else if(op==3) {\n\t\t\tscanf(\"%d%d%d\",&a1,&b1,&b2);\n\t\t\ta2=a1; \n\t\t} else if(op==4) {\n\t\t\tscanf(\"%d%d%d%d\",&a1,&a2,&b1,&b2);\n\t\t}\n\t\tint z1=++tot,z2=++tot;\n\t\tAdd(rt1,1,k,a1,a2,z1,1);\n\t\tAdd(rt2,1,k,b1,b2,z2,0);\n\t\tg.add(z1,z2,l);\n\t}\n\tint ans=g.maxflow(1,k);\n\tprintf(\"%d\\n\",ans>n?n:ans);\n\treturn 0;\n}\n```",
        "postTime": 1683722681,
        "uid": 253936,
        "name": "gaosichensb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5029"
    },
    {
        "content": "[\u535a\u5ba2\u56ed\u67e5\u770b](https://www.cnblogs.com/AIskeleton/p/16313133.html)\n\n> [P5029 T'ill It's Over](https://www.luogu.com.cn/problem/P5029)\n\n> \u7ed9\u5b9a $n$ \u4e2a 1\uff0c\u7528\u8981\u6c42\u7684\u64cd\u4f5c\u4f7f\u5f97\u5176\u4e2d\u5c3d\u53ef\u80fd\u591a\u7684\u6570\u53d8\u6210 $k$\u3002\n> $m$ \u4e2a\u4e0d\u540c\u64cd\u4f5c\uff0c\u5176\u4e2d\u6bcf\u4e2a\u64cd\u4f5c\u6709\u9650\u5b9a\u6b21\u6570 $l$\u3002\n> \u64cd\u4f5c\u5206\u4e3a\u56db\u79cd\u7c7b\u578b\uff1a\n> 1. \u7ed9\u51fa $a,b$\uff0c\u628a\u4e00\u4e2a\u503c\u4e3a $a$ \u7684\u6570\u53d8\u6210 $b$\u3002\n> 2. \u7ed9\u51fa $a_1,a_2,b$\uff0c\u628a\u4e00\u4e2a\u503c\u5728 $\\left[ a_1,a_2 \\right]$ \u8303\u56f4\u5185\u7684\u6570\u53d8\u6210 $b$\u3002\n> 3. \u7ed9\u51fa $a,b_1,b_2$\uff0c\u628a\u4e00\u4e2a\u503c\u4e3a $a$ \u7684\u6570\u53d8\u6210\u5728 $\\left[ b_1,b_2 \\right]$ \u8303\u56f4\u5185\u7684\u4e00\u4e2a\u6570\u3002\n> 4. \u7ed9\u51fa $a_1,a_2,b_1,b_2$\uff0c\u628a\u4e00\u4e2a\u503c\u5728 $\\left[ a_1,a_2 \\right]$ \u8303\u56f4\u5185\u7684\u6570\u53d8\u6210\u5728 $\\left[ b_1,b_2 \\right]$ \u8303\u56f4\u5185\u7684\u4e00\u4e2a\u6570\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u7684\u6700\u4f18\u51b3\u7b56\u76f8\u540c\u3002\n\n\u56e0\u6b64\u53ef\u4ee5\u60f3\u5230\u7f51\u7edc\u6d41\uff0c\u628a $n$ \u4f5c\u4e3a\u6e90\u70b9\u7684\u6d41\u91cf\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5728 $\\left[1,k\\right]$ \u8303\u56f4\u5185\u7684\u503c\u5efa\u4e00\u4e2a\u70b9\uff0c\u5176\u4e2d\u6e90\u70b9\u8fde 1\uff0c\u6c47\u70b9\u8fde $k$\uff0c\u6d41\u91cf\u4e3a $n$\u3002\n\n\u770b\u5230\u6709\u533a\u95f4\u8fde\u8fb9\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u8981\u7528\u5230**\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe**\uff0c\u628a\u6240\u6709\u64cd\u4f5c\u770b\u6210\u662f\u4e24\u4e2a\u533a\u95f4\u7684\u8fde\u8fb9\uff0c\u7136\u540e\u7ebf\u6bb5\u6811\u52a0\u865a\u70b9\u4f18\u5316\u5efa\u8fb9\u5373\u53ef\u3002\n\n\u7ebf\u6bb5\u6811\u7684\u7236\u5b50\u8282\u70b9\u4e4b\u95f4\u8fde\u6d41\u91cf\u65e0\u7a77\u5927\u7684\u8fb9\u3002\n\n\u4e00\u5b9a\u8981\u6ce8\u610f\u662f\u5728 $k$ \u4e0a\u5f00\u7ebf\u6bb5\u6811\u3002\n\n\u70b9\u6570 $O(4\\times k +m)$\uff0c\u8fb9\u6570 $O(m \\log_2 k)$\uff0c\u56e0\u4e3a\u6570\u636e\u968f\u673a\uff0cdinic \u8dd1\u7684\u633a\u5feb\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define MI int m=(l+r)>>1;\nusing namespace std;\nconst int N=1e6,INF=2e9;\nint n,m,k,op,len,ans;\n\nint fir[N<<1],cnt=1;struct E{int v,w,nt;}e[N<<1];\nvoid I(int u,int v,int w=0){e[++cnt]=(E){v,w,fir[u]};fir[u]=cnt;}\nvoid in(int u,int v,int w){I(u,v,w),I(v,u);}\n\nint d[N<<1],cur[N<<1],st,ed;queue <int>q;\nbool bfs(){\n\tfor(int i=st;i<=ed;i++)d[i]=0,cur[i]=fir[i];d[st]=1;q.push(st);\n\twhile(!q.empty()){\n\t\tint u=q.front(),V;q.pop();\n\t\tfor(int i=fir[u];i;i=e[i].nt)\n\t\t\tif(!d[V=e[i].v]&&e[i].w)\n\t\t\t\td[V]=d[u]+1,q.push(V);\n\t}return d[ed];\n}int dfs(int u,int fl){\n\tif(u==ed)return fl;int ans=0,V,re;\n\tfor(int i=cur[u];i;i=e[i].nt){\n\t\tcur[u]=i;if(d[V=e[i].v]==d[u]+1&&e[i].w){\n\t\t\tre=dfs(V,min(fl,e[i].w));\n\t\t\te[i].w-=re,e[i^1].w+=re;fl-=re,ans+=re;\n\t\t\tif(!fl)break;\n\t\t}\n\t}if(!ans)d[u]=0;return ans;\n}void dinic(){while(bfs())ans+=dfs(st,INF);cout<<ans;}\n\nint ls[N<<1],rs[N<<1],c,r1,r2;\nvoid b1(int &p,int l,int r){\n\tif(l==r){p=l;return;}p=++c;MI \n\tb1(ls[p],l,m);b1(rs[p],m+1,r);\n\tin(p,ls[p],INF);in(p,rs[p],INF);\n}void b2(int &p,int l,int r){\n\tif(l==r){p=l;return;}p=++c;MI \n\tb2(ls[p],l,m);b2(rs[p],m+1,r);\n\tin(ls[p],p,INF);in(rs[p],p,INF);\n}void C(int p,int l,int r,int L,int R,int k,bool f){\n\tif(l>=L&&r<=R){in(f?p:k,f?k:p,INF);return;}\n\tMI if(L<=m)C(ls[p],l,m,L,R,k,f);\n\tif(R>m)C(rs[p],m+1,r,L,R,k,f);\n}\n\nint main(){\n\tcin>>n>>m>>k;c=k;b1(r1,1,k);b2(r2,1,k);\n\tfor(int i=1,a,b,x,y,t1,t2;i<=m;i++){\n\t\tcin>>op>>len>>a>>b;t1=++c;t2=++c;\n\t\tif(op==1)C(r2,1,k,a,a,t1,1),C(r1,1,k,b,b,t2,0);\n\t\telse if(op==2)cin>>x,C(r2,1,k,a,b,t1,1),C(r1,1,k,x,x,t2,0);\n\t\telse if(op==3)cin>>x,C(r2,1,k,a,a,t1,1),C(r1,1,k,b,x,t2,0);\n\t\telse cin>>x>>y,C(r2,1,k,a,b,t1,1),C(r1,1,k,x,y,t2,0);\n\t\tin(t1,t2,len);\n\t}ed=c+1;in(st,1,n),in(k,ed,n);dinic();return 0;\n}\n```",
        "postTime": 1653542435,
        "uid": 540715,
        "name": "A_I_Skeleton",
        "ccfLevel": 0,
        "title": "P5029"
    },
    {
        "content": "# \u524d\u8a00\n\u7ebf\u6bb5\u6811+\u7f51\u7edc\u6700\u5927\u6d41\u7684\u5efa\u6a21\u9898\u3002\n\n[\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73](https://www.cnblogs.com/C202202chenkelin/p/14612686.html)\n# \u9898\u76ee\u5927\u610f\n\u6700\u521d\u65f6\u6709 $n$ \u4e2a $1$ \u3002\u7ed9\u5b9a $op$ \u3001 $l$ \uff0c\u5176\u4e2d\uff0c $l$ \u4e3a\u64cd\u4f5c\u6b21\u6570\u4e0a\u9650\u3002\u4f60\u6709\u56db\u4e2a\u64cd\u4f5c\uff1a\n1. \u82e5 $op=1$ \uff0c\u5219\u63a5\u4e0b\u6765\u4e24\u4e2a\u6574\u6570 $a,b$ \uff0c\u8868\u793a\u53ef\u4ee5\u5c06 $a$ \u53d8\u4e3a $b$ \u3002\n2. \u82e5 $op=2$ \uff0c\u5219\u63a5\u4e0b\u6765\u4e09\u4e2a\u6574\u6570 $a_1,a_2,b_1$ \uff0c\u8868\u793a\u53ef\u4ee5\u5c06\u8303\u56f4\u5728 $a_1$ \u5230 $a_2$ \u7684\u4efb\u610f\u7684\u6570\u53d8\u4e3a $b_1$ \u3002\n3. \u82e5 $op=3$ \uff0c\u5219\u63a5\u4e0b\u6765\u4e09\u4e2a\u6574\u6570 $a_1,b_1,b_2$ \uff0c\u8868\u793a\u53ef\u4ee5\u5c06 $a_1$ \u53d8\u4e3a\u8303\u56f4\u5728 $b_1$ \u5230 $b_2$ \u7684\u4efb\u610f\u7684\u6570\u3002\n4. \u82e5 $op=4$ \uff0c\u5219\u63a5\u4e0b\u6765\u56db\u4e2a\u6574\u6570 $a_1,a_2,b_1,b_2$ \uff0c\u8868\u793a\u53ef\u4ee5\u5c06\u8303\u56f4\u5728 $a_1$ \u5230 $a_2$ \u7684\u4efb\u610f\u7684\u6570\u53d8\u4e3a\u8303\u56f4\u5728 $b_1$ \u5230 $b_2$ \u7684\u4efb\u610f\u7684\u6570\u3002\n\n\u95ee\u6700\u540e\u80fd\u6709\u591a\u5c11\u4e2a\u6570\u5b57\u53d8\u4e3a $k$ \uff0c\u5176\u4e2d $1\\leqslant a,b,a1,b1,a2,b2\\leqslant k$ \u3002\n# \u601d\u8def\n\u9996\u5148\u7528\u66b4\u529b\u5efa\u56fe\u8dd1\u7f51\u7edc\u6d41\u3002\u5982\u679c\u770b\u51fa\u4f7f\u7528\u7f51\u7edc\u6d41\uff0c\u5219\u5efa\u56fe\u5c31\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u4e86\u3002\n\n\u628a\u6240\u6709\u5355\u4e2a\u6570\u5b57\u7684\u67e5\u8be2\u90fd\u770b\u4e3a\u4e00\u4e2a\u533a\u95f4\uff0c\u90a3\u4e48\u56db\u4e2a\u64cd\u4f5c\u90fd\u5c06\u662f\u533a\u95f4\u7684\u8fde\u8fb9\u3002\n\n\u4f7f\u7528\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u4e2d\u8f6c\u7ad9\u7684\u4e24\u4e2a\u8282\u70b9\u8bb0\u4e3a $tmp1$ \u548c $tmp2$ \uff0c\u5c06 $a$ \u533a\u95f4\u7684\u6240\u6709\u503c\u8fde\u5411 $tmp1$ \uff0c\u5c06 $tmp2$ \u8fde\u5411 $b$ \u533a\u95f4\u7684\u6240\u6709\u503c\uff0c\u5bb9\u91cf\u4e3a\u65e0\u7a77\u5927\u3002\u5219 $tmp1$ \u5230 $tmp2$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $l$ \u7684\u8fb9\u7528\u6765\u9650\u5236\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u5f97\u51fa\u7b54\u6848\u3002\u66b4\u529b\u5efa\u56fe\u4f2a\u4ee3\u7801\uff1a\n```cpp\nint tot = k;\nint opt, l;\nfor(int i = 1; i <= m; i++) {\n\tscanf(\"%d %d\", &opt, &l);\n\tif(opt == 1) {\n\t\tint a, b;\n\t\tscanf(\"%d %d\", &a, &b);\n\t\tAddedge(a, b, l);\n\t}\n\telse if(opt == 2) {\n\t\tint a1, a2, b1;\n\t\tscanf(\"%d %d %d\", &a1, &a2, &b1);\n\t\tint tmp1 = ++tot;\n\t\tint tmp2 = ++tot;\n\t\tfor(int i = a1; i <= a2; i++)\n\t\t\tAddedge(i, tmp1, INF);\n\t\tAddedge(tmp2, b1, INF);\n\t\tAddedge(tmp1, tmp2, l);\n\t}\n\telse if(opt == 3) {\n\t\tint a1, b1, b2;\n\t\tscanf(\"%d %d %d\", &a1, &b1, &b2);\n\t\tint tmp1 = ++tot;\n\t\tint tmp2 = ++tot;\n\t\tAddedge(a1, tmp1, INF);\n\t\tfor(int i = b1; i <= b2; i++)\n\t\t\tAddedge(tmp2, i, INF);\n\t\tAddedge(tmp1, tmp2, l);\n\t}\n\telse {\n\t\tint a1, a2, b1, b2;\n\t\tscanf(\"%d %d %d %d\", &a1, &a2, &b1, &b2);\n\t\tint tmp1 = ++tot;\n\t\tint tmp2 = ++tot;\n\t\tfor(int i = a1; i <= a2; i++)\n\t\t\tAddedge(i, tmp1, INF);\n\t\tfor(int i = b1; i <= b2; i++)\n\t\t\tAddedge(tmp2, i, INF);\n\t\tAddedge(tmp1, tmp2, l);\n\t}\n}\nt = tot + 1;\nAddedge(s, 1, n);\nAddedge(k, t, INF);\n```\n\u663e\u7136\uff0c\u4e00\u6b21\u64cd\u4f5c\u4f1a\u4ea7\u751f\u6700\u591a $2k+2$ \u6761\u8fb9\uff0c\u5728\u89c2\u5bdf\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\uff0c\u8fc7\u4e0d\u4e86\u3002\u4eb2\u6d4b 50 Pts\u3002\u53ef\u80fd\u662f\u5e38\u6570\u592a\u5927\u3002\u3002\u3002\n\n\u7531\u4e8e\u662f\u533a\u95f4\u64cd\u4f5c\uff0c\u53ef\u4ee5\u60f3\u5230\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u6765\u4f18\u5316\u5efa\u56fe\u3002\n\n\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u5efa\u7acb\u4e24\u9897\u7ebf\u6bb5\u6811\uff0c\u5982\u4e0b\u56fe\u3002\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20210402221307884.png?type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZhY2VfdGhlX0JsYXN0,size_16,color_FFFFFF,t_70#pic_center)\n\n$s$ \u8fde\u5411\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u7684 $[1,1]$ \u533a\u95f4\u7684\u70b9\uff0c\u5bb9\u91cf\u4e3a $n$ \uff0c\u7b2c\u4e8c\u68f5\u7ebf\u6bb5\u6811\u7684 $[k,k]$ \u533a\u95f4\u7684\u70b9\u8fde\u5411 $t$ \uff0c\u5bb9\u91cf\u4e3a\u6781\u5927\u503c\uff0c\u548c\u66b4\u529b\u5dee\u4e0d\u591a\u3002\n\n\u53ef\u4ee5\u628a\u7b2c\u4e8c\u68f5\u6811\u7406\u89e3\u4e3a\u662f\u64cd\u4f5c\u6811\uff0c\u662f\u7528\u6765\u8fdb\u884c\u64cd\u4f5c\u7684\u3002\u7b2c\u4e00\u68f5\u6811\u7684\u513f\u5b50\u8fde\u5411\u81ea\u5df1\u7684\u7236\u4eb2\uff0c\u65b9\u4fbf\u9009\u5b9a\u88ab\u64cd\u4f5c\u524d\u7684\u8303\u56f4\u3002\u7b2c\u4e8c\u68f5\u7684\u7236\u4eb2\u8fde\u5411\u81ea\u5df1\u7684\u513f\u5b50\uff0c\u65b9\u4fbf\u9009\u5b9a\u64cd\u4f5c\u540e\u7684\u8303\u56f4\u3002\u4ee5\u4e0a\u8fb9\u7684\u5bb9\u91cf\u5747\u4e3a\u6781\u5927\u503c\u3002\n\n\u6700\u540e\u7b2c\u4e8c\u68f5\u6811\u7684\u8282\u70b9\u8fde\u5411\u7b2c\u4e00\u68f5\u6811\u7684\u5bf9\u5e94\u70b9\uff0c\u65b9\u4fbf\u64cd\u4f5c\u540e\u88ab\u518d\u6b21\u64cd\u4f5c\u3002\n\n\u6700\u540e\u8dd1\u4e00\u8fb9\u6700\u5927\u6d41 Dinic \uff0c\u5728\u968f\u673a\u56fe\u4e0a Dinic \u666e\u904d\u4f18\u4e8e\u5176\u4ed6 $O(nm\\log(m))$ \u7684\u7b97\u6cd5\u3002\n# Code\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define INF 0x3f3f3f3f\nconst int MAXN = 1e6 + 5;\nconst int MAXM = 5e6 + 5;\nstruct Segment_Tree {\n\tint Left_Section, Right_Section, Data;\n\t#define LC(x) (x << 1)\n\t#define RC(x) (x << 1 | 1)\n\t#define L(x) tree[0][x].Left_Section\n\t#define R(x) tree[0][x].Right_Section\n\t#define D(x, y) tree[y][x].Data\n};\nSegment_Tree tree[2][MAXN];\nstruct Edge { \n\tint Next, To, Cap;\n};\nEdge edge[MAXM << 1];\nint head[MAXM << 1];\nint edgetot = 1;\nint tot;\nint n, m, k, s, t;\nqueue<int> q;\nint dep[MAXN], stt[MAXN];\nint Begin, End;\nvoid Addedge(int x, int y, int z) {\n\tedge[++edgetot].Next = head[x], edge[edgetot].To = y, edge[edgetot].Cap = z, head[x] = edgetot;\n\tedge[++edgetot].Next = head[y], edge[edgetot].To = x, edge[edgetot].Cap = 0, head[y] = edgetot;\n}\nvoid Build(int pos, int l, int r, int flag) {//\u521d\u59cb\u5316\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u4fe1\u606f \n\tD(pos, flag) = ++tot;//\u5f00\u8f9f\u65b0\u7684\u8282\u70b9 \n\tL(pos) = l;//\u521d\u59cb\u5316\u5de6\u533a\u95f4 \n\tR(pos) = r;//\u521d\u59cb\u5316\u53f3\u533a\u95f4 \n\tif(l == r) {\n\t\tif(flag && l == 1)//\u8bb0\u5f55\u5de6\u6811\u76841\u8282\u70b9 \n\t\t\tBegin = D(pos, flag);\n\t\tif(!flag && l == k)//\u8bb0\u5f55\u53f3\u6811\u7684k\u8282\u70b9\n\t\t\tEnd = D(pos, flag);\n\t\tif(!flag)//\u53f3\u6811\u8fde\u5de6\u6811\u7684\u5bf9\u5e94\u8282\u70b9 \n\t\t\tAddedge(D(pos, flag), D(pos, 1 - flag), INF);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tBuild(LC(pos), l, mid, flag);//\u521d\u59cb\u5316 \n\tBuild(RC(pos), mid + 1, r, flag);//\u540c\u4e0a \n\tif(flag) {//\u5de6\u6811\u513f\u5b50\u8fde\u7236\u4eb2 \n\t\tAddedge(D(LC(pos), flag), D(pos, flag), INF);\n\t\tAddedge(D(RC(pos), flag), D(pos, flag), INF);\n\t}\n\telse {//\u53f3\u6811\u7236\u4eb2\u8fde\u513f\u5b50 \n\t\tAddedge(D(pos, flag), D(LC(pos), flag), INF);\n\t\tAddedge(D(pos, flag), D(RC(pos), flag), INF);\n\t}\n}\nvoid Query(int pos, int l, int r, int tmp, int flag) {//\u533a\u95f4\u8fde\u8fb9 \n\tif(l <= L(pos) && R(pos) <= r) {\n\t\tif(flag)\n\t\t\tAddedge(D(pos, flag), tmp, INF);//\u82e5\u662f\u5de6\u6811\u5219\u8fde\u63a5\u4e2d\u8f6c\u7ad9 \n\t\telse\n\t\t\tAddedge(tmp, D(pos, flag), INF);//\u82e5\u662f\u53f3\u6811\u88ab\u4e2d\u8f6c\u7ad9\u8fde\u63a5 \n\t\treturn;\n\t}\n\tif(l <= R(LC(pos)))\n\t\tQuery(LC(pos), l, r, tmp, flag);//\u5904\u7406\u5b50\u6811 \n\tif(r >= L(RC(pos)))\n\t\tQuery(RC(pos), l, r, tmp, flag);//\u540c\u4e0a \n}\nbool bfs() {//Dinic\u677f\u5b50\uff0c\u4e0d\u8be6\u5199 \n\tfor(int i = s; i <= t; i++)\n\t\tdep[i] = 0;\n\tstt[s] = head[s];\n\tdep[s] = 1;\n\tq.push(s);\n\twhile(!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor(int i = head[u]; i; i = edge[i].Next) {\n\t\t\tint v = edge[i].To;\n\t\t\tif(!dep[v] && edge[i].Cap) {\n\t\t\t\tdep[v] = dep[u] + 1;\n\t\t\t\tstt[v] = head[v];\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t] != 0;\n}\nint dfs(int u, int flow) {//\u540c\u4e0a \n\tif(u == t || !flow)\n\t\treturn flow;\n\tint rest = flow;\n\tfor(int i = stt[u]; i && rest; i = edge[i].Next) {\n\t\tstt[u] = i;\n\t\tint v = edge[i].To;\n\t\tif(dep[v] == dep[u] + 1 && edge[i].Cap) {\n\t\t\tint nextflow = dfs(v, min(rest, edge[i].Cap));\n\t\t\tif(!nextflow)\n\t\t\t\tdep[v] = -1;\n\t\t\tedge[i].Cap -= nextflow;\n\t\t\tedge[i ^ 1].Cap += nextflow;\n\t\t\trest -= nextflow;\n\t\t}\n\t}\n\treturn flow - rest;\n}\nint Dinic() {//\u540c\u4e0a \n\tint res = 0;\n\tint flow;\n\twhile(bfs())\n\t\twhile(flow = dfs(s, INF))\n\t\t\tres += flow;\n\treturn res;\n}\nint main() {\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tBuild(1, 1, k, 1); \n\tBuild(1, 1, k, 0);\n\tint opt, l;\n\tfor(int i = 1; i <= m; i++) {\n\t\tscanf(\"%d %d\", &opt, &l);\n\t\tint tmp1 = ++tot;\n\t\tint tmp2 = ++tot;\n\t\tif(opt == 1) {\n\t\t\tint a, b;\n\t\t\tscanf(\"%d %d\", &a, &b);\n\t\t\tQuery(1, a, a, tmp1, 1);\n\t\t\tQuery(1, b, b, tmp2, 0);\n\t\t}\n\t\telse if(opt == 2) {\n\t\t\tint a1, a2, b1;\n\t\t\tscanf(\"%d %d %d\", &a1, &a2, &b1);\n\t\t\tQuery(1, a1, a2, tmp1, 1);\n\t\t\tQuery(1, b1, b1, tmp2, 0);\n\t\t}\n\t\telse if(opt == 3) {\n\t\t\tint a1, b1, b2;\n\t\t\tscanf(\"%d %d %d\", &a1, &b1, &b2);\n\t\t\tQuery(1, a1, a1, tmp1, 1);\n\t\t\tQuery(1, b1, b2, tmp2, 0);\n\t\t}\n\t\telse {\n\t\t\tint a1, a2, b1, b2;\n\t\t\tscanf(\"%d %d %d %d\", &a1, &a2, &b1, &b2);\n\t\t\tQuery(1, a1, a2, tmp1, 1);\n\t\t\tQuery(1, b1, b2, tmp2, 0);\n\t\t}\n\t\tAddedge(tmp1, tmp2, l);\n\t}\n\tt = tot + 1;\n\tAddedge(s, Begin, n);//\u8fde\u63a5\u6e90\u70b9\u5230\u5de6\u68111\u7684\u70b9 \n\tAddedge(End, t, INF);//\u8fde\u63a5\u53f3\u6811k\u7684\u70b9\u5230\u6c47\u70b9 \n\tprintf(\"%d\", Dinic());\n\treturn 0;\n}\n```",
        "postTime": 1617374275,
        "uid": 254733,
        "name": "Night_Bringer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5029 T'ill It's Over"
    }
]