[
    {
        "content": ">\u5728\u592a\u9633\u897f\u659c\u7684\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7f6e\u8eab\u5929\u4e0a\u4e4b\u68ee\u3002\u7b49\u8fd9\u573a\u6218\u4e89\u7ed3\u675f\u4e4b\u540e\uff0c\u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4f17\u4eba\uff0c \u4eba\u4eba\u672c\u7740\u6b63\u4e49\u4e4b\u540d\uff0c\u957f\u5b58\u4e0d\u706d\u7684\u8fc7\u53bb\u3001\u9010\u6e10\u6d88\u901d\u7684\u672a\u6765\u3002\u6211\u56de\u6765\u4e86\uff0c\u7eb5\u4f7f\u65e5\u8584\u897f\u5c71\uff0c\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\uff0c\u6b64\u65f6\u6b64\u523b\u7684\u5149\u8f89\uff0c**\u76fc\u541b\u52ff\u5fd8**\u3002\u2014\u2014\u2014\u2014\u4e16\u754c\u4e0a\u6700\u5e78\u798f\u7684\u5973\u5b69\n\n\u73c2\u6735\u8389\uff0c\u8981\u4e00\u76f4\u5e78\u798f\u54e6\u3002\n\n\u7b2c\u4e00\u9053\u73c2\u6735\u8389\u76f8\u5173 $\\text{Ynoi}$ \u796d\u3002\n\n\u8fd9\u9898\u7684\u96be\u70b9\u9996\u5148\u5728\u8bfb\u9898\u3002\u3002\u3002\u53bb\u91cd\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b50\u5e8f\u5217\u5206\u522b\u53bb\u91cd\uff0c\u6bd4\u5982 $1,2,4,2,2$ \u53bb\u91cd\u4e4b\u540e\u662f $1,2,4$\u3002\u800c\u4e0d\u662f\u6709\u4e24\u4e2a\u5b50\u5e8f\u5217\u5b8c\u5168\u76f8\u540c\u65f6\u53bb\u6389\u5176\u4e2d\u4e00\u4e2a\u3002\n\n\u7136\u540e\u8bfb\u5b8c\u8fd9\u4e2a\u9898\u4e4b\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u662f\u6709\u91cd\u590d\u7684\u5c31\u6d88\u53bb\u53ea\u5269\u4e00\u4e2a\uff0c\u90a3\u4e48\u6bcf\u4e2a\u6570\u5728\u4e00\u4e2a\u5b50\u5e8f\u5217\u4e2d\u53ea\u4f1a\u51fa\u73b0\u4e00\u6b21\u3002\u5047\u8bbe\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a $t$ \u7684\u5e8f\u5217\u4e2d\uff0c\u6570\u5b57 $x$ \u51fa\u73b0\u4e86 $k$ \u6b21\uff0c\u90a3\u4e48\u5b83\u7684\u8d21\u732e\u5c31\u662f $(2^t-2^{n-k})x$\u3002\n\n\u8fd9\u4e2a\u5f0f\u5b50\u7684\u8bc1\u660e\u5c31\u662f\u5bb9\u65a5\uff0c\u6574\u4f53\u51cf\u4e0d\u5408\u6cd5\u3002\u5982\u679c\u4e0d\u9009\u6570 $x$ \u7684\u8bdd\u5c31\u662f\u5269\u4e0b $t-k$ \u4e2a\u968f\u4fbf\u9009\uff0c\u4e5f\u5c31\u662f $2^{t-k}$\u3002\n\n\u5c06\u8fd9\u4e2a\u5f0f\u5b50\u63a8\u51fa\u6765\u4e4b\u540e\u6211\u5c31\u60f3\u76f4\u63a5\u83ab\u961f\u4e86\uff0c\u5374\u5ffd\u7565\u4e86\u4e00\u4e2a\u6700\u5927\u96be\u70b9\uff0c\u90a3\u5c31\u662f\u968f\u7740\u533a\u95f4\u7684\u79fb\u52a8\uff0c\u6211\u4eec\u7684\u533a\u95f4\u957f\u5ea6\u662f\u5728\u4e0d\u65ad\u6539\u53d8\u7684\uff0c\u4e5f\u5c31\u662f $t$ \u5176\u5b9e\u662f\u4e0d\u786e\u5b9a\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5c06\u6240\u6709\u8d21\u732e\u4ee5\u4e00\u79cd\u5f62\u5f0f\u5b58\u50a8\u4e0b\u6765\uff0c\u4ee5\u4fbf\u83ab\u961f\u79fb\u52a8\u533a\u95f4\u540e\u6539\u53d8 $t$ \u4e4b\u540e\u4f7f\u7528\u3002\n\n\u8003\u8651\u4e00\u4e2a\u5728 $\\text{Ynoi}$ \u4e2d\u5e38\u89c1\u7684\u601d\u8def\uff0c\u6839\u53f7\u5206\u6cbb\u3002\n\n\u5f53\u51fa\u73b0\u6b21\u6570 $\\leq \\sqrt n$ \u6b21\u7684\u65f6\u5019\uff0c\u6211\u4eec\u51fa\u73b0\u8bb0\u5f55\u6b21\u6570\uff0c\u5e76\u4e14\u8bb0\u5f55\u51fa\u73b0\u8fd9\u4e2a\u6b21\u6570\u7684\u6570\u7684\u548c\u3002\u7531\u4e8e\u4e58\u6cd5\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u8fd9\u4e9b\u6570\u7ed1\u5728\u4e00\u8d77\u4e58\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\n\n\u5f53\u51fa\u73b0\u6b21\u6570 $> \\sqrt n$ \u6b21\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8bb0\u5f55\u6570\uff0c\u5e76\u4e14\u76f4\u63a5\u7528 $cnt$ \u6570\u7ec4\u6765\u67e5\u770b\u6b21\u6570\u3002\n\n\u5927\u4f53\u601d\u8def\u660e\u786e\u4e86\uff0c\u5269\u4e0b\u51e0\u4e2a\u5c0f\u95ee\u9898\n\n\u6211\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $n\\sqrt n$ \u7684\uff0c\u4f46\u662f\u5982\u679c\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u4f1a\u9000\u5316\u6210 $n\\sqrt n\\log n$\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u6709\u4e24\u4e2a\u4e1c\u897f\u8981\u91cd\u70b9\u8bf4\u4e00\u4e0b\u3002\n\n1.\u7ef4\u62a4\u51fa\u73b0\u6b21\u6570 $> \\sqrt n$ \u7684\u6570\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u8fd9\u82e5\u5e72\u79cd\u6570\u4e2d\uff0c\u53ea\u6709\u4e0d\u5230 $\\sqrt n$ \u4e2a\u6570\u51fa\u73b0\u6b21\u6570**\u6709\u53ef\u80fd** $>\\sqrt n$\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5148\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u5c06\u6240\u6709\u5728\u6574\u4e2a\u5e8f\u5217\u4e2d\u51fa\u73b0\u6b21\u6570 $>\\sqrt n$ \u7684\u6570\u90fd\u5904\u7406\u51fa\u6765\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4e0d\u7ba1\u8fd9\u4e2a\u6570\u5b9e\u9645\u51fa\u73b0\u51e0\u6b21\uff0c\u6211\u53ea\u7ba1\u5b83\u7684\u201c\u5929\u8d4b\u201d\uff0c\u4e5f\u5c31\u662f\u6700\u591a\u51fa\u73b0\u7684\u6b21\u6570\u4f1a\u4e0d\u4f1a\u8d85\u8fc7 $\\sqrt n$\u3002\u5982\u679c\u4f1a\u7684\u8bdd\uff0c\u6211\u5c31\u76f4\u63a5\u901a\u8fc7 $cnt$ \u5904\u7406\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f $n\\sqrt n$\u3002\n\n2.\u5feb\u901f\u67e5\u8be2 $2^t$ \u7684\u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5f88\u660e\u663e\u4e0d\u80fd\u7528\u5feb\u901f\u5e42\uff0c\u5426\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u9000\u5316\u3002\u5206\u6790\u590d\u6742\u5ea6\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u5bb9\u5fcd\u7684\u6700\u5927\u590d\u6742\u5ea6\u662f\u9884\u5904\u7406 $O(\\sqrt n)$\uff0c\u67e5\u8be2 $O(1)$\u3002\u6bd4\u8d77\u67e5\u8be2\u7684 $O(1)$\uff0c\u6211\u4eec\u53d1\u73b0\u9884\u5904\u7406\u7684\u65f6\u95f4\u8f83\u4e3a\u5bbd\u88d5\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5149\u901f\u5e42\uff0c\u5373\u9884\u5904\u7406\u51fa\u6765 $2^0,2^1...,2^{\\sqrt n-1}$ \u4ee5\u53ca $2^{\\sqrt n},2^{2\\sqrt n}...2^{\\sqrt n\\times \\sqrt n}$\u3002\u7136\u540e $O(1)$ \u7ec4\u5408\u76f8\u4e58\u67e5\u8be2\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5176\u4e2d\u7684 $\\sqrt n$ \u5747\u8868\u793a $n$ \u7684\u7b97\u672f\u5e73\u65b9\u6839\u4e0b\u53d6\u6574\u3002\n\n\u7136\u540e\u8fd9\u9898\u4e5f\u6ca1\u5565\u7ec6\u8282\u4e86\uff0c\u53cd\u6b63\u6211\u662f\u7528\u4e86\u5f88\u77ed\u7684\u65f6\u95f4\u4e00\u904d\u5c31\u8fc7\u4e86\u3002\n",
        "postTime": 1613250403,
        "uid": 97136,
        "name": "chenzida",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015] \u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "**2020.1.4 \u66f4\u65b0\uff1a\u4ee3\u7801\u88ab\u4eba hack \u4e86\uff0c\u662f\u5149\u901f\u5e42\u53ea\u5904\u7406\u5230 $\\sqrt{n}$ \u5bfc\u81f4\u5269\u4f59\u90e8\u5206\u672a\u5b9a\u4e49\u7684\u9519\u8bef\uff0c\u5df2\u7ecf\u4fee\u6539\uff0c\u6c42\u518d\u6b21\u5ba1\u6838\u3002**\n\n---\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u4e2d\u6240\u6709\u5b50\u5e8f\u5217\u5206\u522b\u53bb\u91cd\u540e\u7684\u548c \u200a$s\\bmod{p}$ \u7684\u7ed3\u679c\u3002\n\n---\n\n\u4e4d\u4e00\u770b\u597d\u50cf\u4e0d\u592a\u53ef\u505a\uff0c\u4ed4\u7ec6\u5206\u6790\u53d1\u73b0\u6709\u70b9\u89c4\u5f8b\uff1a\n\n**\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a $a$ \u7684\u5e8f\u5217\u4e2d\uff0c\u4e00\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u4e3a $b$\u3002\u5219\u6709 $2^{a-b}$ \u4e2a\u5b50\u5e8f\u5217\u4e0d\u5305\u542b\u8be5\u5143\u7d20\uff0c\u5b83\u7684\u8d21\u732e\u662f $2^a-2^{a-b}$\u3002**\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u6bcf\u4e00\u4e2a\u6570\u7684\u8d21\u732e\u503c\u3002\n\n$10^5$\u3001\u79bb\u7ebf\u3001\u7ef4\u62a4\u6570\u5217\uff0c\u60f3\u5230\u4ec0\u4e48\uff1f\u83ab\u961f\uff01\n\n\u6211\u4eec\u4f7f\u7528**\u83ab\u961f**\u8bb0\u5f55**\u53cc\u5411\u94fe\u8868**\uff08\u5efa\u8bae\u624b\u5199\uff09\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u6570\u5206\u522b\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u4e0b\u6807\u8868\u793a\u6570\uff0c\u5185\u5bb9\u4e3a\u51fa\u73b0\u6b21\u6570\u3002\u5219\u8fd9\u4e2a\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\u5927\u81f4\u5728 $\\sqrt{n}$ \u7ea7\u522b\u3002\u5728\u8df3\u5230\u5f53\u524d\u533a\u95f4\u540e\uff0c\u679a\u4e3e\u7ef4\u62a4\u7684\u94fe\u8868\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20\u5206\u522b\u7b97\u51fa\u8d21\u732e\u503c\u540e\u76f8\u52a0\u5373\u53ef\u3002\n\n\u8fd8\u5269\u4e0b\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u5feb\u901f\u6c42\u51fa $2^k$\uff1f\u666e\u901a\u7684\u5feb\u901f\u5e42\u53ef\u80fd\u505a\u4e0d\u5230\uff0c\u56e0\u4e3a\u5e26\u4e00\u53ea $\\log$\uff0c\u5bb9\u6613\u88ab\u5361\u3002\u679c\u65ad\u9009\u7528**\u5149\u901f\u5e42**\u3002\n\n\u5149\u901f\u5e42\u662f\u4ec0\u4e48\u5462\uff1f\u5c31\u662f\u4e00\u79cd $\\mathcal{O(\\sqrt{n})}$ \u9884\u5904\u7406\u3001$\\mathcal{O(1)}$ \u67e5\u8be2\u7684\uff0c\u6c42\u7279\u5b9a\u5e95\u6570\u7684\u5e42\u7684\u5feb\u901f\u65b9\u6cd5\u3002\u5177\u4f53\u65b9\u6848\u662f\uff1a\u9884\u5904\u7406 $2^1,2^2,\\cdots,2^{\\sqrt{n}}$ \u548c $2^{\\sqrt{n}},2^{2\\times\\sqrt{n}},\\cdots,2^n$\uff0c\u7136\u540e\u6839\u636e\u5546\u548c\u4f59\u6570\u5373\u53ef $\\mathcal{O(1)}$ \u6c42\u51fa\u7ed3\u679c\u3002\n\n---\n\n\u4ee3\u7801\uff1a\n\n```cpp\n//By: Luogu@rui_er(122461)\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N = 1e5+5;\n\nll n, m, a[N], SIZE, cnt[N], s[N], ans[N];\n#define whichBlock(x) (\\\n\t(x-1)/SIZE+1\\\n)\nstruct Query {\n\tll l, r, p, id;\n\tQuery(ll a=0, ll b=0, ll c=0, ll d=0) : l(a), r(b), p(c), id(d) {}\n\t~Query() {}\n\tfriend bool operator < (const Query &a, const Query &b) {\n\t\tll x = whichBlock(a.l), y = whichBlock(b.l);\n\t\tif(x == y) return a.r < b.r;\n\t\treturn x < y;\n\t}\n}q[N];\nstruct myList {\n\tstruct Node {\n\t\tll pre, nxt;\n\t\tNode(ll a=0, ll b=0) : pre(a), nxt(b) {}\n\t\t~Node() {}\n\t}nd[N];\n\tll tot;\n\tmyList(ll a=0) : tot(a) {}\n\t~myList() {}\n\tvoid insert(ll x) {\n\t\tnd[tot].nxt = x;\n\t\tnd[x].pre = tot;\n\t\ttot = x;\n\t}\n\tvoid erase(ll x) {\n\t\tif(x != tot) {\n\t\t\tnd[nd[x].pre].nxt = nd[x].nxt;\n\t\t\tnd[nd[x].nxt].pre = nd[x].pre;\n\t\t}\n\t\telse {\n\t\t\tnd[nd[x].pre].nxt = 0;\n\t\t\ttot = nd[x].pre;\n\t\t}\n\t\tnd[x] = Node();\n\t}\n}lst;\nnamespace qpow {\n\tll pow1[N], pow2[N];\n\tvoid initPow(ll mod) {\n\t\tpow1[0] = pow2[0] = 1;\n\t\tfor(ll i=1;i<=SIZE+5;i++) pow1[i] = pow1[i-1] * 2 % mod;\n\t\tfor(ll i=1;i<=SIZE+5;i++) pow2[i] = pow2[i-1] * pow1[SIZE] % mod;\n\t}\n\tll calc(ll x, ll mod) {return pow1[x%SIZE]*pow2[x/SIZE]%mod;}\n}\nvoid upd(ll x, ll k) {\n\tif(!(s[cnt[a[x]]]-=a[x])) lst.erase(cnt[a[x]]);\n\tif(!s[cnt[a[x]]+=k]) lst.insert(cnt[a[x]]);\n\ts[cnt[a[x]]] += a[x];\n}\n\nint main() {\n\tscanf(\"%lld%lld\", &n, &m);\n\tSIZE = sqrt(n);\n\tfor(ll i=1;i<=n;i++) scanf(\"%lld\", &a[i]);\n\tfor(ll i=1;i<=m;i++) scanf(\"%lld%lld%lld\", &q[i].l, &q[i].r, &q[i].p), q[i].id = i;\n\tsort(q+1, q+1+m);\n\tll l = 1, r = 0;\n\tfor(ll i=1;i<=m;i++) {\n//\t\tprintf(\"QUERY #%d: id=%d l=%d r=%d p=%d\\n\", i, q[i].id, q[i].l, q[i].r, q[i].p);\n\t\tqpow::initPow(q[i].p);\n\t\twhile(l > q[i].l) upd(--l, 1);\n\t\twhile(r < q[i].r) upd(++r, 1);\n\t\twhile(l < q[i].l) upd(l++, -1);\n\t\twhile(r > q[i].r) upd(r--, -1);\n\t\tfor(ll j=lst.nd[0].nxt;j;j=lst.nd[j].nxt) {\n//\t\t\tprintf(\"LIST POSITION: %d\\n\", j);\n\t\t\tll _1 = qpow::calc(r-l+1, q[i].p);\n\t\t\tll _2 = qpow::calc(r-l+1-j, q[i].p);\n\t\t\tll _3 = ((_1 - _2) * s[j] + q[i].p) % q[i].p;\n\t\t\tans[q[i].id] = (ans[q[i].id] + _3 + q[i].p) % q[i].p;\n\t\t}\n\t}\n\tfor(ll i=1;i<=m;i++) printf(\"%lld\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1603462014,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "> \u5728\u592a\u9633\u897f\u659c\u7684\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7f6e\u8eab\u5929\u4e0a\u4e4b\u68ee\u3002\u7b49\u8fd9\u573a\u6218\u4e89\u7ed3\u675f\u4e4b\u540e\uff0c\u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4f17\u4eba\uff0c \u4eba\u4eba\u672c\u7740\u6b63\u4e49\u4e4b\u540d\uff0c\u957f\u5b58\u4e0d\u706d\u7684\u8fc7\u53bb\u3001\u9010\u6e10\u6d88\u901d\u7684\u672a\u6765\u3002\u6211\u56de\u6765\u4e86\uff0c\u7eb5\u4f7f\u65e5\u8584\u897f\u5c71\uff0c\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\uff0c\u6b64\u65f6\u6b64\u523b\u7684\u5149\u8f89\uff0c\u76fc\u541b\u52ff\u5fd8\u3002\u2014\u2014\u2014\u2014\u4e16\u754c\u4e0a\u6700\u5e78\u798f\u7684\u5973\u5b69\n\n\u73c2\u6735\u8389\uff0c\u8981\u6c38\u8fdc\u5e78\u798f\u54e6\u3002\n\n---\n\n\u6211\u4eec\u8003\u8651\u6bcf\u4e2a\u6570\u7684\u8d21\u732e\u3002\u5373\u8be5\u533a\u95f4\u5185\u542b\u6709\u8fd9\u4e2a\u6570\u7684\u5b50\u5e8f\u5217\u4e2a\u6570\u3002\u7528\u8865\u96c6\u8f6c\u5316\u4e3a\u4e0d\u542b\u8fd9\u4e2a\u6570\u7684\u5b50\u5e8f\u5217\u4e2a\u6570\u3002\n\n\u90a3\u4e48\uff0c\u5047\u8bbe\u8fd9\u4e2a\u6570\u5728$[l,r]$\u5185\u51fa\u73b0\u4e86$k$\u6b21\uff0c\u5219\u4e00\u5171\u6709$2^{r-l+1}-2^{r-l+1-k}$\u4e2a\u5b50\u5e8f\u5217**\u5305\u542b**\u8fd9\u4e2a\u6570\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u83ab\u961f\uff0c\u7ef4\u62a4\u6240\u6709\u51fa\u73b0$k$\u6b21\u7684\u4e0d\u540c\u6570\u7684\u548c\uff0c\u7136\u540e\u5305\u542b\u8fd9\u4e9b\u6570\u7684\u5b50\u5e8f\u5217\u4e2a\u6570\u90fd\u76f8\u540c\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u548c\u6765\u8ba1\u7b97\u8d21\u732e\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nm)$~~\uff0c\u975e\u5e38\u4f18\u79c0~~\u3002\n\n\u8003\u8651\u6839\u53f7\u5185\u5206\u7c7b\u8ba8\u8bba\u3002\n\n\u5bf9\u4e8e\u51fa\u73b0\u6b21\u6570\u5927\u4e8e$\\sqrt n$\u7684\u6570\uff0c\u8fd9\u79cd\u6570\u6700\u591a\u4e0d\u5230$\\sqrt n$\u4e2a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u83ab\u961f\uff0c\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570\u5c0f\u4e8e\u7b49\u4e8e$\\sqrt n$\u7684\u6240\u6709\u51fa\u73b0\u6b21\u6570\u4e3a$i$\u7684\u548c$s_i$\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u4e1c\u897f\u6765\u7ef4\u62a4\u6240\u6709\u51fa\u73b0\u6b21\u6570\u5927\u4e8e$\\sqrt n$\u7684\u6570\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u6b21\u8be2\u95ee\u7684\u590d\u6742\u5ea6\u5c31\u662f$O(\\sqrt n)$\u4e86\u3002\n\n\u770b\u4e0a\u53bb\u597d\u50cf\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u5b9e\u9645\u4e0a\u4f60\u4f1a\u53d1\u73b0\u6c422\u7684\u5e42\u6b21\u8fd8\u6709\u4e2a$\\log$\uff0c\u800c\u4e14\u6a21\u6570\u4f1a\u6539\uff0c\u4e0d\u597d\u9884\u5904\u7406\u3002\n\n\u6709\u4e00\u79cd\u5206\u5757$O(\\sqrt n)$\u9884\u5904\u7406\uff0c$O(1)$\u6c42\u5e42\u6b21\u7684\u65b9\u6cd5\uff0c\u5177\u4f53\u5c31\u662f\u6c42\u51fa$2^0,2^1,2^2,\\dots,2^{{\\sqrt n}-1}$\u548c$2^{\\sqrt n},2^{2\\sqrt n},\\dots,2^n$\uff08\u6a21\u610f\u4e49\uff09\uff0c\u7136\u540e\u6bcf\u4e2a\u5e42\u90fd\u5206\u6210\u4e24\u90e8\u5206\u76f8\u4e58\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u91cd\u65b0\u8ba1\u7b97\u4e00\u904d\u5373\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u7528\u4ec0\u4e48\u4e1c\u897f\u6765\u7ef4\u62a4\u51fa\u73b0\u6b21\u6570\u5927\u4e8e$\\sqrt n$\u7684\u6570\u3002\u6211\u7528\u4e86unordered_set\uff0c\u7406\u8bba\u4e0a\u662f\u7ebf\u6027\u7684~~\uff08\u5f53\u7136\u8fd9\u4e2a\u7406\u8bba\u6709\u591a\u53ef\u9760\u5c31\u4e0d\u77e5\u9053\u4e86\uff09~~\u3002\n\n\u8fd9\u6837\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O((n+m)\\sqrt n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n#include<vector>\n#include<unordered_set>\n#ifdef ONLINE_JUDGE\nstruct istream{\n    char buf[23333333],*s;\n    inline istream(){\n        buf[fread(s=buf,1,23333330,stdin)]='\\n';\n        fclose(stdin);\n    }\n    inline istream&operator>>(int&d){\n        d=0;\n        for(;!isdigit(*s);++s);\n        while(isdigit(*s))\n        d=(d<<3)+(d<<1)+(*s++^'0');\n        return*this;\n    }\n}cin;\nstruct ostream{\n    char buf[8000005],*s;\n    inline ostream(){s=buf;}\n    inline ostream&operator<<(int d){\n        if(!d){\n            *s++='0';\n        }else{\n            static int w;\n            for(w=1;w<=d;w*=10);\n            for(;w/=10;d%=w)*s++=d/w^'0';\n        }\n        return*this;\n    }\n    inline ostream&operator<<(const char&c){*s++=c;return*this;}\n    inline void flush(){\n        fwrite(buf,1,s-buf,stdout);\n        s=buf;\n    }\n    inline~ostream(){flush();}\n}cout;\n#else\n#include<iostream>\nusing std::cin;\nusing std::cout;\n#endif\n#define siz 317\n#define N 100005\nint n,m,a[N],buc[N],_2[siz+2],__2[siz+2],out[N];\nlong long bvc[siz+2];\nstd::vector<int>lr;\nstd::unordered_set<int>s;\ninline int pow2(int b,const int&md){\n\tint ret=1,a=2;\n\tfor(;b;b>>=1,a=1LL*a*a%md)\n\tif(b&1)ret=1LL*ret*a%md;\n\treturn ret;\n}\ninline int pw2(int m,const int&md){\n\treturn 1LL*_2[m%siz]*__2[m/siz]%md;\n}\nstruct que{\n\tint l,r,id,md;\n\tinline bool operator<(const que&rhs)const{\n\t\treturn(l/siz!=rhs.l/siz)?(l<rhs.l):(r<rhs.r);\n\t}\n}q[N];\ninline void add(int pos){\n\tconst int val=a[pos];\n\tif(buc[val]>siz)++buc[val];else\n\tif(buc[val]==siz)bvc[buc[val]++]-=lr[val],s.insert(val);else\n\tbvc[buc[val]]-=lr[val],bvc[++buc[val]]+=lr[val];\n}\ninline void del(int pos){\n\tconst int val=a[pos];\n\tif(buc[val]>siz+1)--buc[val];else\n\tif(buc[val]==siz+1)s.erase(val),bvc[--buc[val]]+=lr[val];else\n\tbvc[buc[val]]-=lr[val],bvc[--buc[val]]+=lr[val];\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;lr.push_back(a[i++]))cin>>a[i];\n\tstd::sort(lr.begin(),lr.end());\n\tfor(int i=1;i<=n;++i)a[i]=lower_bound(lr.begin(),lr.end(),a[i])-lr.begin();\n\tfor(int i=1;i<=m;++i)\n\tcin>>q[q[i].id=i].l>>q[i].r>>q[i].md;\n\tstd::sort(q+1,q+m+1);\n\tint l=1,r=0;\n\tfor(int i=1;i<=n;++i)*bvc+=a[i];\n\t*_2=*__2=1;\n\tfor(int i=1;i<=m;++i){\n\t\twhile(r<q[i].r)add(++r);\n\t\twhile(l>q[i].l)add(--l);\n\t\twhile(r>q[i].r)del(r--);\n\t\twhile(l<q[i].l)del(l++);\n\t\tconst int md=q[i].md,len=r-l+1;\n\t\tfor(int j=1;j<siz;++j)\n\t\t_2[j]=2LL*_2[j-1]%md;\n\t\t__2[1]=pow2(siz,md);\n\t\tfor(int j=2;j<=siz;++j)\n\t\t__2[j]=__2[1]*1LL*__2[j-1]%md;\n\t\tint&ans=out[q[i].id];\n\t\tconst int all=pw2(len,md);\n\t\tfor(int j=1;j<=siz;++j)\n\t\t(ans+=1LL*(all-pw2(len-j,md)+md)*bvc[j]%md-md)+=ans>>31&md;\n\t\tfor(int j:s){\n\t\t\t(ans+=1LL*(all-pw2(len-buc[j],md)+md)*lr[j]%md-md)+=ans>>31&md;\n\t\t}\n\t}\n\tfor(int i=1;i<=m;++i)cout<<out[i]<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1544515372,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "> \u6211\u56de\u6765\u4e86\uff0c\u7eb5\u4f7f\u65e5\u8584\u897f\u5c71\uff0c\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\uff0c\u6b64\u65f6\u6b64\u523b\u7684\u5149\u8f89\uff0c_\u76fc\u541b\u52ff\u5fd8_\u3002\n\n\u8fd9\u9053\u9898\u7ed9\u6211\u4eec\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u64cd\u4f5c\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u5185\u6240\u6709\u5b50\u5e8f\u5217\u5206\u522b\u53bb\u91cd\u540e\u7684\u548c\u6a21 $p$\u3002\n\n\u8fd9\u9898\u540c[\u6389\u8fdb\u5154\u5b50\u6d1e](https://www.luogu.com.cn/problem/P4688)\u4e00\u6837\uff0c\u8981\u7528\u5230\u83ab\u961f\u7b97\u6cd5\uff0c\u8fd9\u9898\u6b63\u597d\u53ef\u4ee5\u79bb\u7ebf\uff0c\u5f88\u9002\u5408\u83ab\u961f\uff0c\u518d\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4 $1 \\le n,m,a_i \\le 10^5$\uff0c\u83ab\u961f\u7b97\u6cd5\u76f8\u5f53\u4f18\u8d8a\u3002\n\n\u7ed9\u51fa\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u5148\u5047\u8bbe\u6709\u4e2a\u6570 $j$\uff0c\u4e3a\u67d0\u4e2a\u6570\u5b57\u5728 $[l,r]$ \u533a\u95f4\u5185\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6211\u4eec\u60f3\u8981\u627e\u5230\u5305\u542b\u6b64\u6570\u7684\u5b50\u5e8f\u5217\uff0c\u53ef\u4ee5\u5f97\u51fa\u5b83\u7684\u7ed3\u679c\u4e3a $2^{r-l+1}-2^{r-l+1-j}$\uff08\u76f8\u5f53\u4e8e\u6574\u4e2a\u6570\u5217\u91cc\u7684\u6570\u7684\u4e2a\u6570\u51cf\u53bb\u4e0d\u5305\u542b\u6570\u5b57 $j$ \u7684\u5b50\u5e8f\u5217\u4e2a\u6570\uff09\u3002\n\n\u7528\u8fd9\u4e2a\u516c\u5f0f\uff0c\u6211\u4eec\u6765\u7ef4\u62a4\u51fa\u73b0\u6b21\u6570\u548c\u67d0\u4e2a\u51fa\u73b0\u4e86 $j$ \u6b21\u7684\u6570\u5b57\u4e4b\u548c\uff0c\u7136\u540e $\\times 2^{r-l+1}-2^{r-l+1-j}$ \u5c31\u662f\u5305\u542b\u8fd9\u4e2a\u6570\u7684\u5b50\u5e8f\u5217\u4e2a\u6570\u4e86\u3002\u8fd9\u9898\u4e2d\u7ef4\u62a4\u5efa\u8bae\u4f7f\u7528\u624b\u5199\u53cc\u5411\u94fe\u8868\uff0c\u65f6\u95f4\u8017\u8d39\u5c11\uff0c\u66f4\u5feb\u3002\u53cc\u5411\u94fe\u8868\u53ef\u4ee5\u7528\u524d\u9879\u661f\u5f0f\u5b58\u3002\n\n\u8fd9\u4e2a\u83ab\u961f\u7684\u590d\u6742\u5ea6\u5c31\u662f $O(\\sqrt n)$\n\n\u8fd9\u6837\u4e0b\u6765\uff0c\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\uff1f\n\n\u53ef\u60dc\uff0c\u6211\u4eec\u6ca1\u6709\u5904\u7406\u4e8c\u7684\u5e42\u600e\u4e48\u5f04\u3002\u6211\u4eec\u7528\u4e00\u4e2a\u7384\u5b66\u7684\u5feb\u5e42\u6cd5\uff0c\u4f7f\u7528\u8fd9\u4e2a\u5e42\u6cd5\uff0c\u9700\u8981\u9884\u5904\u7406 $2^1, 2^2, 2^3...$ \u4e00\u76f4\u5230 $2^{\\sqrt n}$ \u4e8c\u7684\u6839\u53f7n\u6b21\u65b9\u4ee5\u53ca $2^{\\sqrt n}, 2^{2*\\sqrt n}...$ \u4e00\u76f4\u5230 $2^n$\u3002\u8fd9\u6837\u590d\u6742\u5ea6\u660e\u663e\u6bd4\u666e\u901a\u5feb\u5e42\u5feb\u5f88\u591a\u3002\n\n\u63d0\u793a\uff1a\n\n- \u9700\u8981\u5f00ll\uff0c\u4e0d\u7136\u4f1aWA\n\n- \u6ce8\u610f\u8981\u53d6\u597d\u6a21\uff0c\u8981\u4e0d\u7136\u4f1a\u6b7b\u7684\u5f88\u60e8\uff0c~~\u6211\u7684\u6a21\u4e00\u76f4\u90fd\u4e0d\u5bf9\uff0c\u76f4\u5230\u6709\u4eba\u544a\u8bc9\u6211\u6211\u624d\u6539\u8fc7\u6765~~\n\n- \u7565\u5fae\u505a\u4e00\u70b9\u5361\u5e38\u5c31\u884c\uff0ccin\u4f18\u5316\u6216\u8005\u5feb\u8bfb\u90fd\u884c\n\n\u4ee3\u7801\uff1a\n\n\n```\n/* by JS\n * P5072 [Ynoi2015]\u76fc\u541b\u52ff\u5fd8\n * \u83ab\u961f */\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\n#define int long long\n\nnamespace IO { //\u5feb\u8bfb\n    const int SIZE = (1 << 20) + 1;\n    char ibuf[SIZE], *iS, *iT, obuf[SIZE], *oS = obuf, *oT = obuf + SIZE - 1;\n    char _st[55];\n    int _qr = 0;\n\n    inline char gc() {\n        return (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, SIZE, stdin), (iS == iT ? EOF : *iS++) : *iS++);\n    }\n\n    inline void qread() {}\n\n    template<class T1, class ...T2>\n    inline void qread(T1 &IEE, T2 &... ls) {\n        register T1 __ = 0, ___ = 1;\n        register char ch;\n        while (!isdigit(ch = gc())) ___ = (ch == '-') ? -___ : ___;\n        do {\n            __ = (__ << 1) + (__ << 3) + (ch ^ 48);\n        } while (isdigit(ch = gc()));\n        __ *= ___;\n        IEE = __;\n        qread(ls...);\n        return;\n    }\n\n    inline void flush() {\n        fwrite(obuf, 1, oS - obuf, stdout);\n        oS = obuf;\n        return;\n    }\n\n    inline void putc_(char _x) {\n        *oS++ = _x;\n        if (oS == oT) flush();\n    }\n\n    inline void qwrite() {}\n\n    template<class T1, class ...T2>\n    inline void qwrite(T1 IEE, T2... ls) {\n        if (!IEE) putc_('0');\n        if (IEE < 0) putc_('-'), IEE = -IEE;\n        while (IEE) _st[++_qr] = IEE % 10 + '0', IEE /= 10;\n        while (_qr) putc_(_st[_qr--]);\n        qwrite(ls...);\n        return;\n    }\n\n    struct Flusher_ {\n        ~Flusher_() { flush(); }\n    } io_flusher;\n}\n\nusing namespace IO;\n\ninline void write(register int x) {\n    if (x == 0) putchar('0');\n    else {\n        register int st[33], tp = 0;\n        while (st[++tp] = x % 10, x /= 10);\n        while (putchar(st[tp] ^ 48), --tp);\n    }\n    putchar('\\n');\n}\n\nconst int MAXN = 100005;\n\nint n, m, block, A[MAXN], zb[MAXN], cnt[MAXN], L = 1, R, res[MAXN], psqt[MAXN], pw[MAXN];\n\n/* block\uff1a\u5757\u957f\n * n,m\uff1a\u9898\u76ee\u4e2d\u7684\u6570\u5b57\n * L,R\uff1a\u5de6\u6307\u9488\u53f3\u6307\u9488\n * a\uff1a\u6e90\u5e8f\u5217 */\n\ninline int getposition(int i) { return (i - 1) / block + 1; }\n\nstruct Node {\n    int l, r, id, p; // p\u662fmod\n\n    friend bool operator<(const Node &a, const Node &b) {\n        if (a.l / block == b.l / block) {\n            return a.r < b.r;\n        }\n        return a.l < b.l;\n    }\n} nodes[MAXN];\n\nstruct LinkList { //\u624b\u5199\u53cc\u5411\u94fe\u8868\n    int next[MAXN], prev[MAXN], head; //\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\u5934\u8282\u70b9\n    inline void add(int a) {\n        prev[a] = 0, next[a] = head;\n        prev[head] = a;\n        head = a;\n    }\n\n    inline void delet(int a) {\n        if (a == head) {\n            int next_ = next[a];\n            prev[next_] = -1;\n            head = next_;\n        } else {\n            int next_ = next[a], prev_ = prev[a];\n            next[prev_] = next_;\n            prev[next_] = prev_;\n        }\n    }\n} LinkedList;\n\ninline void update(int pos, int status) {\n    int val = A[pos];\n    zb[cnt[val]] -= val;\n    if (!zb[cnt[val]]) LinkedList.delet(cnt[val]);\n    cnt[val] += status;\n    if (!zb[cnt[val]]) LinkedList.add(cnt[val]);\n    zb[cnt[val]] += val;\n}\n\ninline int pow2(int x, int MOD) {\n    return 1ll * psqt[x / block] * pw[x % block] % MOD;\n}\n\ninline void initpow(int MOD) {\n    pw[0] = psqt[0] = 1; //\u624b\u5199\u6570\u7ec4\u5f62\u5f0f\u5feb\u5e42\n    for (register int j = 1; j <= block; ++j) {\n        pw[j] = (1ll * pw[j - 1] << 1) % MOD;\n    }\n    for (register int j = 1; j <= block; ++j) {\n        psqt[j] = (1ll * psqt[j - 1] * pw[block]) % MOD;\n    }\n}\n\ninline void solve() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    qread(n, m);\n    for (register int i = 1; i <= n; ++i) {\n        qread(A[i]);\n    }\n    block = sqrt(n);\n    for (register int i = 1; i <= m; ++i) {\n        qread(nodes[i].l, nodes[i].r, nodes[i].p);\n        nodes[i].id = i;\n    }\n    sort(nodes + 1, nodes + m + 1);\n    for (register int i = 1; i <= m; ++i) {\n        register int l = nodes[i].l, r = nodes[i].r, id = nodes[i].id, MOD = nodes[i].p;\n        initpow(MOD);\n        while (L > l) {\n            update(--L, 1);\n        }\n        while (R < r) {\n            update(++R, 1);\n        }\n        while (L < l) {\n            update(L++, -1);\n        }\n        while (R > r) {\n            update(R--, -1);\n        }\n        for (register int j = LinkedList.head; j > 0; j = LinkedList.next[j]) { //\u5b58\u653e\u7b54\u6848\u6570\u7ec4\n            res[id] = (res[id] + zb[j] * ((pow2(r - l + 1, MOD) - pow2(r - l + 1 - j, MOD)) % MOD + MOD) % MOD + MOD) %\n                      MOD; // *\u81f4\u547d\u53d6\u597d\u6a21\n        }\n    }\n    for (register int i = 1; i <= m; ++i) {\n        cout << res[i] << '\\n';\n    }\n}\n\nsigned main() {\n    solve();\n    return 0;\n}\n```\n\n",
        "postTime": 1603463718,
        "uid": 298325,
        "name": "Marshadow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "> \u5728\u592a\u9633\u897f\u659c\u7684\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7f6e\u8eab\u5929\u4e0a\u4e4b\u68ee\u3002\u7b49\u8fd9\u573a\u6218\u4e89\u7ed3\u675f\u4e4b\u540e\uff0c\u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4f17\u4eba\uff0c \u4eba\u4eba\u672c\u7740\u6b63\u4e49\u4e4b\u540d\uff0c\u957f\u5b58\u4e0d\u706d\u7684\u8fc7\u53bb\u3001\u9010\u6e10\u6d88\u901d\u7684\u672a\u6765\u3002\u6211\u56de\u6765\u4e86\uff0c\u7eb5\u4f7f\u65e5\u8584\u897f\u5c71\uff0c\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\uff0c\u6b64\u65f6\u6b64\u523b\u7684\u5149\u8f89\uff0c\u76fc\u541b\u52ff\u5fd8\u3002\u2014\u2014\u2014\u2014\u4e16\u754c\u4e0a\u6700\u5e78\u798f\u7684\u5973\u5b69\n\n\u73c2\u6735\u8389\u6700\u6700\u6700\u6700\u6700\u6700\u6700\u73c2\u7231\u4e86\uff01  \n\u95f2\u8bdd\u5c11\u8bf4\uff0c\u5207\u5165\u6b63\u9898\n\n---\n\u7b2c\u4e00\u9053 Ynoi&400 \u9898\u796d  \n~~\u5bb3\u600e\u4e48\u53c8\u66b4\u9732\u81ea\u5df1\u7684\u83dc\u9e21\u6c34\u5e73\u4e86~~  \n\u663e\u7136\uff0c$1\\le n,m,a_i \\le 10^5$ \u8fd9\u6837\u53cb\u597d\u7684\u6570\u636e\uff0c\u6ca1\u6709\u4fee\u6539\u7684\u826f\u5fc3\u64cd\u4f5c\u548c\u53ef\u4ee5\u79bb\u7ebf\u7684\u75d5\u8ff9\uff0c\u8fd9\u5f88\u663e\u7136\u662f\u4e2a\u83ab\u961f\u3002  \n\u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\u201c\u5b50\u5e8f\u5217\u201d\u201c\u53bb\u91cd\u201d\u8fd9\u4e9b\u4e1c\u4e1c\u4e0d\u597d\u8ba1\u7b97\uff0c\u6211\u4eec\u8f6c\u5316\u6210\u8d21\u732e\u3002  \n\n\u8bbe $[l,r]$ \u8fd9\u4e2a\u533a\u95f4\u5185\u6709\u4e00\u4e2a $x$\uff0c\u8fd9\u4e2a $x$ \u53c8\u51fa\u73b0\u4e86 $k$ \u6b21\uff0c\u6211\u4eec\u6765\u8ba1\u7b97 $x$ \u5bf9\u4e8e $[l,r]$ \u7684\u8d21\u732e\u3002  \n\u5f88\u663e\u7136\uff0c$[l,r]$ \u6709 $2^{r-l+1}$ \u4e2a\u5b50\u5e8f\u5217\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff1a\u9009\u6216\u4e0d\u9009\uff0c\u90a3\u4e48\u4e0d\u5305\u542b $x$ \u7684\u5b50\u5e8f\u5217\u6709\u591a\u5c11\u4e2a\u5462\uff1f\u663e\u7136\u5c31\u6709 $2^{r-l+1-k}$ \u4e2a\uff0c\u7531\u6b64\uff0c\u6211\u4eec\u5c06\u4e24\u4e2a\u76f8\u51cf\u5c31\u80fd\u5f97\u5230\u5305\u542b $x$ \u7684\u5b50\u5e8f\u5217\u4e2a\u6570\uff1a$2^{r-l+1}-2^{r-l+1-k}$ \u5c31\u662f\u5305\u542b $x$ \u7684\u5b50\u5e8f\u5217\u4e2a\u6570\u3002\u6240\u4ee5 $x$ \u7684\u8d21\u732e\u5c31\u662f $x\\times (2^{r-l+1}-2^{r-l+1-k})$\u3002   \n\n---\n\u8bbe $sum_i$ \u4e3a\u51fa\u73b0\u6b21\u6570\u4e3a $i$ \u7684\u548c\uff0c$cnt_i$ \u4e3a $i$ \u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002  \n\u7136\u540e\u6211\u4eec\u9700\u8981\u4e00\u4e2a DS \u6765\u7ef4\u62a4\u4e00\u4e32\u6570\u91cf\uff0c\u8fd9\u4e9b\u6570\u91cf\u4e3a\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u4e2a\u6570\uff0c\u9700\u8981\u652f\u6301\u5feb\u901f\u904d\u5386\uff0c\u63d2\u5165\u548c\u5220\u9664\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u53cc\u5411\u94fe\u8868\u6765\u7ef4\u62a4\u3002  \n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u83ab\u961f\u6765\u7ef4\u62a4\u8fd9\u4e2a $sum_i$\uff0c\u5728\u63d2\u5165\u5220\u9664\u65f6\u7ef4\u62a4\u6570\u91cf\u94fe\u8868\uff0c\u6700\u540e\u904d\u5386\u94fe\u8868\u7136\u540e\u6839\u636e\u4e0a\u9762\u7684\u8d21\u732e\u516c\u5f0f\u76f4\u63a5\u7d2f\u52a0\u5c31\u597d\u4e86~  \n\n---\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u8be5\u9898\u4e2d\u6211\u4eec\u8981\u591a\u6b21\u8ba1\u7b97\u4e8c\u7684\u6b21\u5e42\uff0c\u7136\u800c\u9e45\u5feb\u901f\u5e42\u662f $\\log_2 n$ \u7684\uff0c\u8fd9\u8be5\u600e\u4e48\u529e\uff1f  \n\u9ed1\u79d1\u6280\u5149\u901f\u5e42\u51fa\u73b0\u4e86\uff01  \n\u5149\u901f\u5e42\u662f\u4ec0\u4e48\uff1f\u5c31\u662f\u9884\u5904\u7406 $2^0$ \u5230 $2^{\\sqrt n}$ \u548c $2^{\\sqrt n},2^{2\\times {\\sqrt{n}}},2^{3\\times {\\sqrt{n}}}...2^n$\uff0c\u6bcf\u4e2a\u5e42\u6b21\u6211\u4eec\u90fd\u628a\u5b83\u770b\u6210\u4e24\u4e2a\u90e8\u5206\u76f8\u4e58\u5c31\u53ef\u4ee5 $O(1)$ \u8ba1\u7b97\u5566~\n\n---\n\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u4e8b\u60c5\uff1a  \n**\u80fd\u7528 $a_i+a_i$\uff0c\u4e0d\u7528 $a_i\\times2$**  \n\u5bf9\u4e8e\u6211\u8fd9\u6837\u5e76\u4e0d\u600e\u4e48\u5361\u8fc7\u5e38\u7684\u849f\u84bb\u6765\u8bf4\u8fd9\u5f88\u91cd\u8981\uff0c\u4e0d\u7136\u4e58 2 \u8bd5\u8bd5\u5c31\u901d\u4e16/dk  \n\n---\n\u4e0a\u4ee3\u7801\uff01  \n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#define MAXN 100010\n#define int long long//\u8fd9\u9053\u9898\u7684\u5e38\u6570\u4e0d\u600e\u4e48\u5361\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\nusing namespace std;\nint n,m,len;\nstruct node{//\u83ab\u961f\u8f93\u5165\n\tint l,r,cl,ind,k;\n}in[MAXN];\ninline int read()//\u5feb\u8bfb\n{\n    int ans=0;\n    char ch=getchar();\n    while (ch<'0' || ch>'9') ch=getchar();\n    while (ch>='0' && ch<='9')ans=ans*10+ch-'0',ch=getchar();\n    return ans;\n}\ninline void write(int x)\n{\n    char f[200];\n    int tmp=x>0?x:-x,cnt=0;\n    if(x==0)putchar('0'),putchar('\\n');\n    else{\n    \tif(x<0)putchar('-');\n    \twhile(tmp>0)f[cnt++]=tmp%10+'0',tmp/=10;\n    \twhile(cnt>0)putchar(f[--cnt]);\n    \tputchar('\\n');\n    }\n}\nstruct list{//\u624b\u5199\u53cc\u5411\u94fe\u8868\n\tint pre[MAXN],nxt[MAXN],tot;\n\tvoid insert(int x){nxt[tot]=x,pre[x]=tot,tot=x;}\n\tvoid erase(int x)\n\t{\n\t\tif(x!=tot)nxt[pre[x]]=nxt[x],pre[nxt[x]]=pre[x];\n\t\telse nxt[pre[x]]=0,tot=pre[x];\n\t\tpre[x]=nxt[x]=0;\n\t}\n}ML;\nbool cmp(node &x,node &y)//\u83ab\u5806\u6392\u5e8f\n{\n\treturn ((x.cl!=y.cl)?(x.l<y.l):((x.cl&1)?(x.r<y.r):(x.r>y.r)));\n}\nint sum[MAXN],cnt[MAXN],a[MAXN],p1[MAXN],p2[MAXN],ans[MAXN];\nvoid get(int mod)//\u5149\u901f\u5e42\u9884\u5904\u7406\n{\n\tp1[0]=p2[0]=1;\n\tfor(int p=1;p<=len+7;p++)\n\t\tp1[p]=(p1[p-1]+p1[p-1])%mod;\n\tfor(int p=1;p<=n/len+7;p++)\n\t\tp2[p]=p2[p-1]*p1[len]%mod; \n}\nint Pow(int k,int mod){return p2[k/len]*p1[k%len]%mod;}//\u5149\u901f\u5e42\nvoid add(int qwq)//\u83ab\u961f\u63d2\u5165\n{\n\tsum[cnt[qwq]]-=qwq;\n\tif(!sum[cnt[qwq]])\n\t\tML.erase(cnt[qwq]);\n\tcnt[qwq]++;\n\tif(!sum[cnt[qwq]])\n\t\tML.insert(cnt[qwq]);\n\tsum[cnt[qwq]]+=qwq;\n}\nvoid del(int qwq)//\u83ab\u961f\u5220\u9664\n{\n\tsum[cnt[qwq]]-=qwq;\n\tif(!sum[cnt[qwq]])\n\t\tML.erase(cnt[qwq]);\n\tcnt[qwq]--;\n\tif(!sum[cnt[qwq]])\n\t\tML.insert(cnt[qwq]);\n\tsum[cnt[qwq]]+=qwq;\n}\nsigned main()\n{\n\tn=read(),m=read(); \n\tlen=sqrt(n);\n\tfor(int p=1;p<=n;p++)\n\t\ta[p]=read();\n\tfor(int p=1;p<=m;p++)\n\t{\n\t\tin[p].l=read(),in[p].r=read(),in[p].k=read();\n\t\tin[p].ind=p,in[p].cl=(in[p].l-1)/len+1;\n\t}\n\tsort(in+1,in+m+1,cmp);\n\tint l=1,r=0;\n\tfor(int p=1;p<=m;p++)\n\t{\n\t\tget(in[p].k);\n\t\twhile(l<in[p].l)del(a[l++]);\n\t\twhile(l>in[p].l)add(a[--l]);\n\t\twhile(r<in[p].r)add(a[++r]);\n\t\twhile(r>in[p].r)del(a[r--]); \n\t\tfor(int i=ML.nxt[0];i;i=ML.nxt[i])\n\t\t\tans[in[p].ind]=(ans[in[p].ind]+((sum[i]*(Pow(in[p].r-in[p].l+1,in[p].k)-Pow(in[p].r-in[p].l+1-i,in[p].k)))%in[p].k+in[p].k)%in[p].k+in[p].k)%in[p].k;//\u7136\u540e\u662f\u7edf\u8ba1\u8d21\u732e\uff0c\u8bb0\u5f97\u53d6\u6a21\n\t}\n\tfor(int p=1;p<=m;p++)\n\t\twrite(ans[p]);//\u8f93\u51fa\n}\n```\n**PS\uff1a\u8fd9\u4efd\u4ee3\u7801\u4e0d\u80fd\u4fdd\u8bc1\u968f\u65f6\u968f\u5730\u6bcf\u65f6\u6bcf\u523b\u90fd\u80fd AC \u8fd9\u9053\u9898\uff0c\u56e0\u4e3a\u6700\u957f\u7684\u70b9\u8dd1\u4e86 3s\uff0c\u5f88\u53ef\u80fd\u8bc4\u6d4b\u59ec\u4efb\u52a1\u4e00\u591a\u7136\u540e\u5c31\u70b8\u5f00\u82b1\u4e86**",
        "postTime": 1613305864,
        "uid": 298549,
        "name": "SIXIANG32",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015] \u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "# \u9898\u610f\u7b80\u8ff0\n\n\u4e0d\u770b\u524d\u9762\u7684\u5e9f\u8bdd\u5c31\u662f\u9898\u610f\u7b80\u8ff0\u3002\n\n# \u9898\u89e3\n\n\u8fd9\u662f[\u6570\u636e\u7ed3\u6784\u4e00\u767e\u9898](https://www.luogu.com.cn/blog/161849/post-ji-lie-shuo-ju-jie-gou-yi-bai-ti)\u7684\u7b2c50\u9898\uff08\u4e00\u534a\u4e86\u54e6\uff09\u7684\u7eaa\u5ff5\u9898\u89e3\u3002\n\n\u65e0\u4fee\u6539\u64cd\u4f5c\uff0c\u57fa\u672c\u786e\u5b9a\u5927\u65b9\u5411\u83ab\u961f\u3002\n\n\u8003\u8651\u67e5\u8be2\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u4e00\u4e0b\u3002\u5373\u6c42\u533a\u95f4\u5185\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u7684\u5b50\u5e8f\u5217\u6570\u91cf\u4e3a\uff1a\n\n$$\\sum_{i=0}^{r-l+1}C^{i}_{r-l+1}=2^{r-l+1}$$\n\n\u6bd4\u5982\u4e00\u4e2a\u6570\u5728\u533a\u95f4 $[l,r]$ \u51fa\u73b0\u4e86 $k$ \u6b21\uff0c\u90a3\u4e48\u4e00\u5171\u6709 $2^{r-l+1-k}$ \u4e2a\u5b50\u5e8f\u5217\u4e0d\u5305\u542b\u8fd9\u4e2a\u6570\u3002\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\uff0c\u4ece\u7ec4\u5408\u6570\u7684\u610f\u4e49\u53ef\u77e5\u3002\u90a3\u4e48\u5c31\u6709 $2^{r-l+1}-2^{r-l+1-k}$ \u4e2a\u5b50\u5e8f\u5217\u5305\u542b\u4e86\u8fd9\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u83ab\u961f\u7ef4\u62a4**\u533a\u95f4\u4e2d\u51fa\u73b0\u4e86 $k$ \u6b21\u7684\u6240\u6709\u6570\u7684\u548c**\uff0c\u7136\u540e\u4e58\u4e0a\u4e00\u4e2a  $2^{r-l+1}-2^{r-l+1-k}$ \u5c31\u662f\u5b83\u7684\u8d21\u732e\u4e86\u3002\n\n\u95ee\u9898\u53c8\u6765\u4e86\uff1a\u6bcf\u6b21\u8be2\u95ee\u7684\u6a21\u6570\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u6211\u4eec\u9700\u8981\u6bcf\u6b21\u90fd\u9700\u8981 $\\Theta(n)$ \u5904\u7406\u4e00\u904d2\u7684\u5e42\u3002\n\n\u6709\u6ca1\u6709\u4ec0\u4e48\u65b9\u6cd5\u80fd\u628a\u5904\u7406\u8fd9\u4e2a\u4e1c\u897f\u7684\u590d\u6742\u5ea6\u964d\u5230 $\\Theta(\\sqrt{n})$ \u6216\u4ee5\u4e0b\u5462\uff1f\n\n~~\u5bf9\u6b64SyadouHayami\u8868\u793a\u6211\u4eec\u53ef\u4ee5\u6253\u4e2a\u9ad8\u7cbe\u3002~~\n\n\u65b9\u6cd5\u662f\u6709\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u8be2\u95ee\u90fd\u5904\u7406\u51fa $2^{1},2^{2},\\cdots,2^{\\sqrt{n}}$ \uff0c\u4ee5\u53ca $2^{2\\sqrt{n}},2^{3\\sqrt{n}},\\cdots,2^{n}$\uff0c\u90fd\u53ea\u9700\u8981 $\\Theta(\\sqrt{n})$\u3002\u5f53\u7136\uff0c\u90fd\u662f\u5728\u6a21 $p$ \u7684\u610f\u4e49\u4e0b\u7684\u3002\u6211\u4eec\u5206\u522b\u8bb0\u4e3a`pow1`\u548c`pow2`\u3002\n\n\u90a3\u4e48 $2^{x}\\operatorname{mod}p=(pow1_{x\\operatorname{mod}\\sqrt{n}}\\times pow2_{\\lfloor x\\div\\sqrt{n}\\rfloor})\\operatorname{mod}p$\u3002\n\n\u4e8e\u662f\u5c31\u89e3\u51b3\u95ee\u9898\u4e86\u3002\n\n\u6211\u7684\u4ee3\u7801\u9047\u5230\u4e86\u4e00\u4e0b\u4e24\u4e2a\u7384\u5b66\u95ee\u9898\uff0c\u8d34\u51fa\u6765\u7ed9\u540c\u6837\u60c5\u51b5\u7684\u4eba\u770b\u770b\uff1a\n\n1. \u94fe\u8868\u90e8\u5206\u7684`prev`\u548c`next`\u5982\u679c\u653e\u5728\u7ed3\u6784\u4f53\u91cc\u4f1aT\u3002\n\n2. `pow1`,`pow2`,`sum`,`cnt`\u51e0\u4e2a\u6570\u7ec4\u7684\u5b9a\u4e49\u5982\u679c\u653e\u5728\u6700\u5f00\u5934\u548c`isa`\u4ee5\u53ca`ans`\u4e24\u4e2a\u6570\u7ec4\u4e00\u8d77\u4f1aRE\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\nconst int Maxn = 1e5 + 10;\nconst int Size = 320;\nint n, m, isa[ Maxn ], ans[ Maxn ];\nstruct Query_Node\n{\n\tint l, r, p, id, pos;\n} Q[ Maxn ];\nstruct Linked_List\n{\n\tint tot, prev[ Maxn ], next[ Maxn ];\n\tLinked_List( ) { tot = 0; }\n\n\tvoid insert( int x )\n\t{\n\t\tnext[ tot ] = x;\n\t\tprev[ x ] = tot;\n\t\ttot = x;\n\t}\n\n\tvoid erase( int x )\n\t{\n\t\tif( tot == x )\ttot = prev[ x ];\n\t\telse\n\t\t{\n\t\t\tnext[ prev[ x ] ] = next[ x ];\n\t\t\tprev[ next[ x ] ] = prev[ x ];\n\t\t}\n\t\tprev[ x ] = next[ x ] = 0;\n\t}\n} llt;\n\nbool cmp( Query_Node rhs, Query_Node shr )\n{\n\tif( rhs.pos != shr.pos )\treturn rhs.l < shr.l;\n\telse\treturn rhs.r < shr.r;\n}\n\nint pow1[ Maxn ], pow2[ Maxn ];\nvoid Pare_Two( int p )\n{\n\tpow1[ 0 ] = pow2[ 0 ] = 1;\n\tfor( int i = 1; i <= Size; ++ i ) \tpow1[ i ] = 1ll * 2 * pow1[ i - 1 ] % p;\n\tfor( int i = 1; i <= Size; ++ i )\tpow2[ i ] = 1ll * pow1[ Size ] * pow2[ i - 1 ] % p;\n}\n\nint Get_Two( int x, int p )\n{\n\treturn 1ll * pow1[ x % Size ] * pow2[ x / Size ] % p;\n}\n\nint sum[ Maxn ], cnt[ Maxn ];\nvoid Make_Cont( int x, int f )\n{\n\tint pos = isa[ x ];\n\tsum[ cnt[ pos ] ] -= pos;\n\tif ( ! sum[ cnt[ pos ] ] ) llt.erase( cnt[ pos ] );\n\tif( f == 1 ) ++cnt[ pos ];\n\telse --cnt[ pos ];\n\tif ( ! sum[ cnt[ pos ] ] ) llt.insert( cnt[ pos ] );\n\tsum[ cnt[ pos ] ] += pos;\n}\n\nvoid Contribute( )\n{\n\tint l = 1, r = 0;\n\tfor( int i = 1; i <= m; ++ i )\n\t{\n\t\tPare_Two( Q[ i ].p );\n\t\twhile( l > Q[ i ].l ) Make_Cont( --l, 1 );\n\t\twhile( l < Q[ i ].l ) Make_Cont( l++, 0 );\n\t\twhile( r > Q[ i ].r ) Make_Cont( r--, 0 );\n\t\twhile( r < Q[ i ].r ) Make_Cont( ++r, 1 );\n\t\tfor( int s = llt.next[ 0 ]; s; s = llt.next[ s ] )\n\t\t{\n\t\t\tint val = 1ll * sum[ s ] * ( Get_Two( r - l + 1, Q[ i ].p ) - Get_Two( r - l + 1 - s, Q[ i ].p ) + Q[ i ].p ) % Q[ i ].p;\n\t\t\tans[ Q[ i ].id ] += val;\n\t\t\tans[ Q[ i ].id ] %= Q[ i ].p;\n\t\t}\n\t}\n}\n\nsigned main( )\n{\n\tscanf( \"%d %d\", &n, &m );\n\tfor( int i = 1; i <= n; ++ i )\tscanf( \"%d\", &isa[ i ] );\n\tfor( int i = 1; i <= m; ++ i )\n\t{\n\t\tint l, r, p;\n\t\tscanf( \"%d %d %d\", &l, &r, &p );\n\t\tQ[ i ].l = l, Q[ i ].r = r;\n\t\tQ[ i ].p = p, Q[ i ].id = i;\n\t\tQ[ i ].pos = l / Size;\n\t}\n\tsort( Q + 1, Q + 1 + m, cmp );\n\tContribute( );\n\tfor( int i = 1; i <= m; ++ i )\n\t\tprintf( \"%d\\n\", ans[ i ] );\n\treturn 0;\n}\n```",
        "postTime": 1594041107,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "\u8003\u8651\u4f7f\u7528\u83ab\u961f\u3002\n\n\u8003\u8651\u4e00\u4e2a\u6570 $x$ \u5728\u5f53\u524d\u533a\u95f4\u51fa\u73b0\u4e86 $y$ \u6b21\uff0c\u5047\u8bbe\u533a\u95f4\u957f\u5ea6\u4e3a $len$\uff0c \u90a3\u4e48\u9009\u53d6\u65b9\u6848\u4e2d\u5305\u542b\u5b83\u7684\u65b9\u6848\u6570\u4e3a $2^{len-y}\\times(2^y-1)$\u3002\uff08\u9009\u4e0d\u5305\u542b $x$ \u7684\u65b9\u6848\u6570\u4e3a $2^{len-y}$\uff0c\u5728 $y$ \u4e2a $x$ \u4e2d\u9009\u7684\u65b9\u6848\u6570\u4e3a $2^y$\uff0c \u4f46\u8981\u51cf\u6389\u4e00\u4e2a\u90fd\u4e0d\u9009\u7684\u60c5\u51b5\uff09 \u6b64\u65f6\u7684\u8d21\u732e\u663e\u7136\u662f $x\\times2^{len-y}\\times(2^y-1)$\u3002\n\n\u7528\u83ab\u961f\u7edf\u8ba1\u5f53\u524d\u533a\u95f4\u51fa\u73b0\u6b21\u6570\u4e3a $y$ \u7684\u6570\u7684\u603b\u548c\uff0c\u53d1\u73b0\u4e0d\u540c\u7684 $y$ \u503c\u6700\u591a\u53ea\u6709 $\\sqrt n$ \u4e2a\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u94fe\u8868\u6765\u8bb0\u5f55\u8fd9\u4e2a\u503c\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u7528\u5feb\u901f\u5e42\u590d\u6742\u5ea6\u8f83\u5927\uff0c\u4f46\u5e95\u6570\u59cb\u7ec8\u4e3a $2$\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u5149\u901f\u5e42\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u5148\u5904\u7406\u51fa $2^1,2^2,\\ldots,2^{\\sqrt n}$ \u548c $2^{\\sqrt n},2^{2\\sqrt n},\\ldots,2^n$ \u6a21 $p$ \u610f\u4e49\u4e0b\u7684\u503c\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5e42\u6b21\uff0c\u62c6\u6210\u4e24\u4e2a\u5e42\u4e4b\u79ef\u5373\u53ef\u3002\n\n\u5f53\u7136\uff0c\u8fd8\u8981\u5361\u5e38\u3002\u8ba1\u7b97\u6bcf\u4e2a\u503c\u7684\u8d21\u732e\u7684\u5f0f\u5b50\u53ef\u4ee5\u5316\u4e3a $x\\times(2^{len}-2^{len-y})$\uff0c\u8fd8\u6709\uff0c\u53d6\u6a21\u5f88\u6162\uff0c\u5fc5\u8981\u65f6\u53ef\u4ee5\u5c06\u5b83\u5199\u6210\u51cf\u53bb $p$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int N = 1e5 + 10, sqN = 320;\nint n, m, k, siz, answ, head, last;\nint a[N], ans[N], mp[N], s1[sqN], s2[sqN], ton[N], num[N];\nint mod;\nstruct Query\n{\n    int id, l, r, blo, mod;\n}q[N];\nstruct List\n{\n\tint from, nxt;\n}lst[N];\ninline int read()\n{\n    int x = 0;\n    char ch = getchar();\n    while(ch < '0' || ch > '9') ch = getchar();\n    while(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar();\n    return x;\n}\ninline void write(int x)\n{\n\tif(!x)\n\t{\n\t\tputs(\"0\");\n\t\treturn;\n\t}\n\tint top = 0, st[30];\n\twhile(x)\n\t{\n\t\tst[++top] = x % 10;\n\t\tx /= 10;\n\t}\n\twhile(top) putchar(st[top--] + '0');\n\tputs(\"\");\n\treturn;\n}\nbool cmp(Query a, Query b)\n{\n    return a.blo == b.blo ? ((a.blo & 1) ? a.r < b.r : a.r > b.r) : a.blo < b.blo;\n}\ninline void pre(int len)//\u5149\u901f\u5e42\u9884\u5904\u7406\n{\n    s1[0] = s2[0] = 1;\n    k = sqrt(len);\n    for(register int i = 1; i <= k; ++i)\n\t{\n        s1[i] = (s1[i - 1] << 1ll);\n\t\tif(s1[i] >= mod) s1[i] -= mod;\n\t}\n    for(register int i = 1; i <= len / k; ++i)\n\t{\n\t\tint s = (s2[i - 1] * s1[k]);\n\t\tif(s >= mod) s2[i] = s - (s / mod * mod);\n\t\telse s2[i] = s;\n\t}\n    return;\n}\ninline void ins(int pos)//\u94fe\u8868\u63d2\u5165\n{\n\tlst[pos].from = 0;\n\tlst[pos].nxt = head;\n\tlst[head].from = pos;\n\thead = pos;\n\treturn;\n}\ninline void del(int pos)//\u94fe\u8868\u5220\u9664\n{\n\tif(head == pos) head = lst[pos].nxt;\n\telse\n\t{\n\t\tlst[lst[pos].from].nxt = lst[pos].nxt;\n\t\tlst[lst[pos].nxt].from = lst[pos].from;\n\t}\n\treturn;\n}\ninline void move(int pos, int opt)//\u83ab\u961f\u79fb\u52a8\n{\n\tif(mp[a[pos]])\n\t{\n\t\tton[mp[a[pos]]] -= a[pos];\n\t\tif(!ton[mp[a[pos]]]) del(mp[a[pos]]);\n\t}\n\tmp[a[pos]] += opt;\n\tif(mp[a[pos]])\n\t{\n\t\tif(!ton[mp[a[pos]]]) ins(mp[a[pos]]);\n\t\tton[mp[a[pos]]] += a[pos];\n\t}\n}\ninline int qpow(int x)//\u62c6\u6210\u4e24\u4e2a\u5e42\u6b21\u4e4b\u79ef\n{\n\tint s = s2[x / k] * s1[x % k];\n\tif(s < mod) return s;\n\treturn s - (s / mod * mod);\n}\nsigned main()\n{\n\tn = read(), m = read();\n    siz = sqrt(n);\n    for(register int i = 1; i <= n; ++i)\n        a[i] = read();\n    for(register int i = 1; i <= m; ++i)\n    {\n\t\tq[i].l = read(), q[i].r = read(), q[i].mod = read();\n\t\tq[i].id = i;\n        q[i].blo = (q[i].l - 1) / siz + 1;\n    }\n    sort(q + 1, q + m + 1, cmp);\n    int l = 1, r = 0;\n    for(register int i = 1; i <= m; ++i)\n    {\n        answ = 0;\n        int L = q[i].l, R = q[i].r, len = R - L + 1; mod = q[i].mod;\n        pre(len);\n        while(l > L) move(l - 1, 1), --l;\n        while(r < R) move(r + 1, 1), ++r;\n        while(l < L) move(l, -1), ++l;\n        while(r > R) move(r, -1), --r;\n\t\tregister int s = qpow(len);\n\t\tfor(register int poi = head; poi; poi = lst[poi].nxt)\n\t\t{\n\t\t\tansw += (((ton[poi] % mod) * ((s % mod - qpow(len - poi) % mod + mod) % mod)) % mod);\n\t\t\tif(answ >= mod) answ -= mod;\n\t\t}\n\t\tans[q[i].id] = answ;\n    }\n    for(register int i = 1; i <= m; ++i)\n        write(ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1604473399,
        "uid": 108098,
        "name": "FourteenObsidian",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "## [Ynoi2015]\u76fc\u541b\u52ff\u5fd8\n\n\u8fd9\u662f Ynoi \u4e2d\u4e00\u9053\u76f8\u5bf9\u504f\u6c34\u7684\u9898\u76ee\uff0c\u975e\u5e38\u7b80\u5355\u7684\u83ab\u961f\u3002\n\n\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a $a$ \u7684\u5e8f\u5217\uff0c\u5982\u679c\u67d0\u4e2a\u5143\u7d20\u51fa\u73b0\u4e86 $b$ \u6b21\uff0c\n\n\u6211\u4eec\u90a3\u4e48\u5171\u6709 $2^{a-b}$ \u4e2a\u5b50\u5e8f\u5217\u662f\u4e0d\u5305\u542b\u8fd9\u4e00\u5143\u7d20\u7684\uff0c\n\n\u800c\u5176\u4ed6\u7684\u5b50\u5e8f\u5217\u90fd\u5305\u542b\u8fd9\u4e00\u5143\u7d20\u3002\n\n\u6362\u8a00\u4e4b\uff0c\u8fd9\u4e2a\u5143\u7d20\u7684\u8d21\u732e\u6b21\u6570\u662f $2^a-2^{a-b}$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u94fe\u8868\u6765\u8bb0\u5f55\u4e00\u4e0b**\u533a\u95f4\u8d21\u732e\u5185\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u7684\u6570\u7684\u548c**\u3002\n\n\u663e\u7136\uff0c\u8fd9\u4e2a\u94fe\u8868\u5185\u7684\u5143\u7d20\u4e2a\u6570\u6700\u591a\u662f\u6839\u53f7\u7ea7\u522b\u7684\u3002\n\n\u5bf9\u4e8e $2$ \u7684\u82e5\u5e72\u6b21\u5e42\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa $2^1,2^2\\ldots 2^{\\sqrt n}$ \u4e0e $2^{2\\times \\sqrt n},2^{3\\times \\sqrt n} \\ldots 2^n$\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5 $\\operatorname{O}(1)$ \u5c06\u5176\u6c42\u51fa\u3002\n\n\u83ab\u961f\u7684\u590d\u6742\u5ea6\u662f $\\operatorname{O}(n\\sqrt n)$\uff0c\u8be2\u95ee\u7684\u590d\u6742\u5ea6\u4e3a $\\operatorname{O}(m\\sqrt n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline int read(){\n\tregister int x=0;\n\tregister bool f=0;\n\tregister char c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<3)+(x<<1)+c-48;\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nchar cr[200];int tt;\ninline void print(register int x,register char k='\\n') {\n    if(!x) putchar('0');\n    if(x < 0) putchar('-'),x=-x;\n    while(x) cr[++tt]=x%10+'0',x/=10;\n    while(tt) putchar(cr[tt--]);\n    putchar(k);\n}\nconst int maxn=100005;\nconst int blk=317; \nint n,m;\nint a[maxn],cnt[maxn],bl[maxn];\nint sum[maxn];\nint res[maxn];\nstruct node{\n    int l,r,id,p;\n}q[maxn];\ninline bool cmp(register node a,register node b){\n\treturn bl[a.l]^bl[b.l]?a.l<b.l:bl[a.l]&1?a.r<b.r:a.r>b.r;\n}\nstruct lian{\n\tint nxt,pre;\n}e[maxn];int tl;\ninline void _ins(register int x){\n\te[tl].nxt=x;\n\te[x].pre=tl;\n\ttl=x;\n}\ninline void _del(register int x){\n\tif(x^tl){\n\t\te[e[x].pre].nxt=e[x].nxt;\n\t\te[e[x].nxt].pre=e[x].pre;\n\t}\n\telse{\n\t\ttl=e[x].pre;\n\t}\n\te[x].nxt=e[x].pre=0;\n}\ninline void add(register int x){\n    if(cnt[x]){\n        sum[cnt[x]]-=x;\n        if(!sum[cnt[x]]){\n        \t_del(cnt[x]);\n\t\t}\n    }\n    cnt[x]++;\n    if(!sum[cnt[x]]){\n    \t_ins(cnt[x]);\n\t}\n    sum[cnt[x]]+=x;\n}\ninline void del(register int x){\n    sum[cnt[x]]-=x;\n    if(!sum[cnt[x]]){\n    \t_del(cnt[x]);\n\t}\n    cnt[x]--;\n    if(cnt[x]){\n        if(!sum[cnt[x]]){\n        \t_ins(cnt[x]);\n\t\t}\n        sum[cnt[x]]+=x;\n    }\n}\nint p1[2233],p2[2233],p;\ninline int pw(register int x){\n    return (ll)p1[x%blk]*p2[x/blk]%p;\n}\nsigned main() {\n    n=read();m=read();\n    int g=0,f=1;\n    for(register int i=1;i<=n;i++){\n    \ta[i]=read();\n\t\tbl[i]=f;\n\t\tg++;if(g==blk){\n    \t\tf++;g=0;\n\t\t}\n\t}\n    for(register int i=1;i<=m;i++){\n    \tq[i].l=read();q[i].r=read();q[i].p=read();q[i].id=i;\n\t}\n    sort(q+1,q+m+1,cmp);\n    for(register int i=1,l=1,r=0;i<=m;i++){\n        while(r<q[i].r){\n        \tadd(a[++r]);\n\t\t}\n        while(l>q[i].l){\n        \tadd(a[--l]);\n\t\t}\n        while(r>q[i].r){\n        \tdel(a[r--]);\n\t\t}\n        while(l<q[i].l){\n        \tdel(a[l++]);\n\t\t}\n        p1[0]=p2[0]=1;\n\t\tp=q[i].p;\n        for(register int j=1;j<=blk;j++){\n        \tp1[j]=(ll)p1[j-1]*2%p;\n\t\t}\n        p2[1]=p1[blk];\n        for(register int j=2;j<=blk;j++){\n        \tp2[j]=(ll)p2[j-1]*p2[1]%p;\n\t\t}\n\t\tregister int o=q[i].id;\n    \tfor(int j=e[0].nxt;j;j=e[j].nxt){\n        \tres[o]+=(ll)sum[j]*(pw(q[i].r-q[i].l+1)-pw(q[i].r-q[i].l+1-j))%p;\n        \tres[o]=(res[o]%p+p)%p;\n    \t}\n    }\n    for(register int i=1;i<=n;i++){\n    \tprint(res[i]);\n\t}\n}\n```\n",
        "postTime": 1585901363,
        "uid": 120074,
        "name": "BFqwq",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6709\u6bd2....\u53cd\u6b63\u6211\u7684\u5199\u6cd5\u5e38\u6570\u5de8\u5927  \n\u8bb0$[l,r]$\u4e2d\u51fa\u73b0\u6b21\u6570\u4e3ak\u7684\u6570\u7684\u548c\u4e3a$s[k]$  \n\u5219\u7b54\u6848\u663e\u7136\u4e3a $\\sum{s[k]*(2^{r-l+1}-2^{r-l+1-k})}$  \n\u56e0\u4e3a\u503c\u4e0d\u4e3a0\u7684s[k]\u6700\u591a\u6709$sqrt(n)$\u4e2a\uff0c\u76f4\u63a5\u7528hash\u8868\u7edf\u8ba1\uff0c\u83ab\u961f\u5373\u53ef  \n\u6211\u7684\u505a\u6cd5\u7531\u4e8e\u5e38\u6570\u539f\u56e0\uff0c\u5f97\u5206\u572860~100\u5de6\u53f3  \n\u4ee3\u7801\uff1a\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define reg register\nconst int N=1e5+5;\ntypedef long long ll;\ninline int read(){\n    reg int s=0,f=1;char ch=getchar();\n    while(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}\n    while(isdigit(ch)) s=s*10+ch-'0',ch=getchar();\n    return s*f;\n}\nconst int block=317;\nint n,m;\nint a[N],cnt[N],bel[N];\nunordered_set<int> s2;\nint s[N],ans[N];\nstruct ask{\n    int l,r,id,mod;\n}q[N];\ninline int cmp(const ask & a,const ask & b){\n    return bel[a.l]^bel[b.l] ? bel[a.l]<bel[b.l] : bel[a.l]&1 ? a.r<b.r : a.r>b.r;\n}\ninline void add(int x){\n    if(cnt[x]) {\n        s[cnt[x]]-=x;\n        if(!s[cnt[x]]) s2.erase(cnt[x]);\n    }\n    cnt[x]++;\n    if(!s[cnt[x]]) s2.insert(cnt[x]);\n    s[cnt[x]]+=x;\n}\ninline void del(int x){\n    s[cnt[x]]-=x;\n    if(!s[cnt[x]]) s2.erase(cnt[x]);\n    cnt[x]--;\n    if(cnt[x]){\n        if(!s[cnt[x]]) s2.insert(cnt[x]);\n        s[cnt[x]]+=x;\n    }\n}\nint pw1[N],pw2[N];\ninline ll qpow(int x,int mod){\n    return 1ll*pw1[x%block]*pw2[x/block]%mod;\n}\ninline int calc(int x){\n    reg int ans=0;\n    for(auto it:s2){\n        ans=(ans+s[it]*(qpow(q[x].r-q[x].l+1,q[x].mod)-qpow(q[x].r-q[x].l+1-it,q[x].mod)+q[x].mod)%q[x].mod)%q[x].mod;\n    }\n    return ans;\n}\nint main(){\n    n=read(),m=read();\n    for(reg int i=1;i<=n;i++) a[i]=read();\n    for(reg int i=1;i<=n;i++) bel[i]=(i-1)/block+1;\n    for(reg int i=1;i<=m;i++) q[i].l=read(),q[i].r=read(),q[i].mod=read(),q[i].id=i;\n    sort(q+1,q+m+1,cmp);\n    reg int l=1,r=0;\n    for(reg int i=1;i<=m;i++){\n        for(;r<q[i].r;r++) add(a[r+1]);\n        for(;r>q[i].r;r--) del(a[r]);\n        for(;l<q[i].l;l++) del(a[l]);\n        for(;l>q[i].l;l--) add(a[l-1]);\n        pw1[0]=pw2[0]=1;\n        for(reg int j=1;j<=block;j++) pw1[j]=1ll*pw1[j-1]*2%q[i].mod;\n        pw2[1]=pw1[block];\n        for(reg int j=2;j<=block;j++) pw2[j]=1ll*pw2[j-1]*pw2[1]%q[i].mod;\n        ans[q[i].id]=calc(i);\n    }\n    for(int i=1;i<=n;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n} \n\n```",
        "postTime": 1561562363,
        "uid": 27030,
        "name": "ustze",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "# $\\texttt{Description}$\n\n> \u53ea\u8981\u4e0d\u770b\u73c2\u666e\u90e8\u5206\u5c31\u662f\u6700\u7b80\u6d01\u660e\u4e86\u7684desciption\u3002\n\n# $\\texttt{Solution}$\n\n\u8fd9\u9898\u5927\u6982\u662fYnMO\uff0c\u4e0d\u5361\u5e38\u4e0d\u6bd2\u7624\u4ee3\u7801\u77ed\uff08\uff08\uff08\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u5e8f\u5217\u5206\u522b\u6c42\u548c\u5df2\u7ecf\u65e0\u6cd5\u4f18\u5316\u3002\u8003\u8651\u4e00\u4e2a\u5728\u957f\u5ea6\u4e3a $l$\uff0c\u51fa\u73b0\u4e86 $x$ \u6b21\u7684\u6570\uff0c\u5b83\u4f1a\u961f\u5e8f\u5217\u4ea7\u751f $2^l-2^x$ \u6b21\u8d21\u732e\u3002\u5f0f\u5b50\u7684\u542b\u4e49\u5c31\u662f\u6240\u6709\u60c5\u51b5\u51cf\u53bb\u4e0d\u5305\u542b\u8fd9\u4e2a\u6570\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\u89c2\u5bdf\u9898\u9762\uff0c$10^5$ \u7684\u6570\u636e\u8303\u56f4\u8fd8\u4e0d\u5e26\u4fee\uff0c\u5927\u6982\u7387\u662f\u83ab\u961f\u3002\n\n\u8003\u8651\u7528\u53cc\u5411\u94fe\u8868\u7ef4\u62a4\u8fd9\u4e9b\u6570\uff0c\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u51fa\u73b0\u4e86\u8be5\u8282\u70b9\u5bf9\u5e94\u6b21\u6570\u7684\u6570\u7684\u603b\u548c\u3002\u5177\u4f53\u7684\uff0c\u4ee3\u7801\u4e2d\u58f0\u660e\u4e00\u4e2a`Node`\u7c7b\u578b\u7684\u6570\u7ec4e\uff0c`e[x].s` \u8868\u793a\u51fa\u73b0\u4e86 $x$ \u6b21\u7684\u6570\u7684\u548c\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38\u83ab\u961f\u4e86\u3002\n\n\u554a\u4e0d\u5bf9\uff0c\u5feb\u901f\u51a5\u662f $O(logn)$ \u7684\uff0c\u600e\u4e48\u529e\uff1f\n\n$O(n\\sqrt{n}logn)$ \u8dd1 $10^5$ \uff0c\u4ee5\u5feb\u901f\u51a5\u7684\u5e38\u6570\u597d\u50cf\u53ef\u4ee5rush\u4e00\u6ce2\uff0c\u4f46\u662f\u7b97\u4e0a\u53cc\u5411\u94fe\u8868\u7684\u5e38\u6570\u2026\u2026\u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u4f18\u5316\u5427\uff08\n\n\u8fd9\u9898\u53ef\u4ee5\u8017\u8d39\u8f83\u591a\u7684\u65f6\u95f4\u961f\u5bf9\u6bcf\u4e2a\u6a21\u6570\u7684 $2$ \u7684 $x$ \u6b21\u51a5\u8fdb\u884c\u9884\u5904\u7406\uff0c\u4f46\u662f\u53c8\u4e0d\u8db3\u4ee5\u5904\u7406\u6240\u6709\u51a5\u3002\u518d\u8003\u8651\u5feb\u901f\u51a5\uff0c\u57fa\u4e8e\u8fd9\u6837\u4e00\u4e2a\u5f0f\u5b50\uff1a$2^x=2^{x/2}\\times 2^{x/2}$\u3002\u8fd9\u4e2a\u65f6\u5019\u4e24\u8fb9\u7684\u6570\u53ea\u7f29\u5c0f\u4e86\u4e00\u500d\u3002\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u60f3\u4f20\u8bf4\u4e2d\u7684vEB\u6811\u90a3\u6837\u4ee5\u6839\u53f7\u4e3a\u8de8\u5ea6\u5462\uff1f\u5f0f\u5b50\u53d8\u4e3a $2^x=2^{x/sqrt{x}}\\times 2^{x\\% sqrt{x}}$\u3002**\u90a3\u4e48\uff0c\u9884\u5904\u7406\u6839\u53f7 $n$ \u4ee5\u5185\u7684\u51a5\uff0c\u5c31\u53ef\u4ee5 $O(1)$ \u8ba1\u7b97\u51a5\u4e86\uff01**\n\n\n**\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u7384\u5b66\u7684\u5730\u65b9\uff1a**\n\n\u83ab\u961f\u66f4\u65b0\u7684\u65f6\u5019\uff0c`add,del` \u7684\u987a\u5e8f\u81f3\u5173\u91cd\u8981\uff0c~~\u4e0d\u7136\u4f60\u4f1a\u5411\u6211\u4e00\u6837WA+TLE+RE~~\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jcaiimnd.png)\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt{n})$\uff08$n$ \u4e0e $m$ \u540c\u9636\uff09\u3002\n\n# $\\texttt{Code}$\n\n```cpp\n#include <cstdio> \n#include <cmath>\n#include <algorithm>\n\nint a[100005], ans[100005], cnt[100005], p1[100005], p2[100005], S;\nstruct Node {\n\tint pre, nxt, s;\n} e[100005];\nstruct Question {\n\tint l, r, p, id;\n\tinline bool operator < (const Question a) const {\n\t\tbool t((l - 1) / S + 1 == (a.l - 1) / S + 1);\n\t\treturn t ? (r - 1) / S + 1 < (a.r - 1) / S + 1 : (l - 1) / S + 1 < (a.l - 1) / S + 1;\n\t}\n} q[100005];\n\ninline void insert1(const int x, const int s) {\n\tint n(e[x].nxt);\n\te[n].pre = x + 1, e[x].nxt = x + 1, e[x + 1].s = s;\n\te[x + 1].pre = x, e[x + 1].nxt = n;\n}\ninline void insert2(const int x, const int s) {\n\tint p(e[x].pre);\n\te[p].nxt = x - 1, e[x].pre = x - 1, e[x - 1].s = s;\n\te[x - 1].pre = p, e[x - 1].nxt = x;\n}\ninline void remove(const int x) {\n\te[e[x].pre].nxt = e[x].nxt, e[e[x].nxt].pre = e[x].pre, e[x].nxt = e[x].pre = 0;\n}\ninline void add(const int x) {\n\tint c(cnt[x]);\n\te[c].s -= x;\n\tif (e[c].nxt != c + 1) insert1(c, x);\n\telse e[c + 1].s += x; \n\tif (!e[c].s) remove(c);\n\t++ cnt[x];\n}\ninline void del(const int x) {\n\tint c(cnt[x]);\n\te[c].s -= x;\n\tif (e[c].pre != c - 1 && c > 1) insert2(c, x);\n\telse e[c - 1].s += x;\n\tif (!e[c].s) remove(c);\n\t-- cnt[x];\n}\ninline int qpow(const int x, const int p) {return 1LL * p2[x / S] * p1[x % S] % p;}\n\nint main() {\n\tint n, m, l(1), r(0);\n\tscanf(\"%d%d\", &n, &m);\n\tS = sqrt(n);\n\tfor (int i(1); i <= n; ++ i) scanf(\"%d\", a + i);\n\tfor (int i(1); i <= m; ++ i) scanf(\"%d%d%d\", &q[i].l, &q[i].r, &q[i].p), q[i].id = i;\n\tstd::sort(q + 1, q + m + 1);\n\tfor (int i(1); i <= m; ++ i) {\n\t\twhile (l > q[i].l) add(a[-- l]);\n\t\twhile (r < q[i].r) add(a[++ r]);\n\t\twhile (r > q[i].r) del(a[r --]);\n\t\twhile (l < q[i].l) del(a[l ++]);\n\t\tp1[0] = p2[0] = 1;\n\t\tfor (int j(1); j <= S; ++ j) p1[j] = 2LL * p1[j - 1] % q[i].p;\n\t\tfor (int j(1); j <= S; ++ j) p2[j] = 1LL * p2[j - 1] * p1[S] % q[i].p;\n\t\tfor (int j(e[0].nxt); j; j = e[j].nxt)\n\t\t\tans[q[i].id] = (1LL * ans[q[i].id] + 1LL * e[j].s * (qpow(q[i].r - q[i].l + 1, q[i].p) - qpow(q[i].r - q[i].l + 1 - j, q[i].p)) % q[i].p) % q[i].p;\n\t\tans[q[i].id] = (ans[q[i].id] + q[i].p) % q[i].p;\n\t}\n\tfor (int i(1); i <= m; ++ i) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1617365592,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010P5072 [Ynoi2015] \u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "> \u5728\u592a\u9633\u897f\u659c\u7684\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7f6e\u8eab\u5929\u4e0a\u4e4b\u68ee\u3002\n> \u7b49\u8fd9\u573a\u6218\u4e89\u7ed3\u675f\u540e\uff0c\u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4eba\u4eec\uff0c\u4eba\u4eba\u672c\u7740\u6b63\u4e49\u4e4b\u540d\u3002\n> \u957f\u5b58\u4e0d\u706d\u7684\u8fc7\u53bb\uff0c\u9010\u6e10\u6d88\u901d\u7684\u672a\u6765\u3002\n> \u6211\u56de\u6765\u4e86\uff0c\u7eb5\u4f7f\u65e5\u8584\u897f\u5c71\uff0c\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\uff0c\n> \u6b64\u65f6\u6b64\u523b\u7684\u5149\u8f89\uff0c**\u76fc\u541b\u52ff\u5fd8**\u3002\n> \u2014\u2014\u4e16\u4e0a\u6700\u5e78\u798f\u7684\u5973\u5b69\n\n\n\u73c2\u6735\u8389\uff0c\u8981\u5e78\u798f\u54e6\u3002\n\n****\n\n\u4e3b\u9875AC 1k\u796d\uff08\n\n\u8003\u8651\u4e00\u4e2a\u6570\u5728\u533a\u95f4\u91cc\u9762\u4f1a\u88ab\u7b97\u4e0a\u591a\u5c11\u6b21\u8d21\u732e\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u5168\u90e8\u533a\u95f4\u51cf\u53bb\u5305\u542b\u8fd9\u4e2a\u6570\u7684\u533a\u95f4\uff0c\u5047\u8bbe\u8fd9\u4e2a\u6570\u5728\u8fd9\u6bb5\u533a\u95f4\u91cc\u51fa\u73b0\u4e86 $k$ \u6b21\uff0c\u90a3\u4e48\u8d21\u732e\u5c31\u662f\n\n$2^{r-l+1}-2^{r-l+1-k}$\n\n\u8003\u8651\u4e00\u4e2a~~\u7ecf\u5178~~\u7684\u601d\u60f3\uff0c\u5bf9\u4e8e $\\sqrt n$ \u5206\u7c7b\u8ba8\u8bba\n\n\u5bf9\u4e8e\u6240\u6709 $\\leq \\sqrt n$ \u7684\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u51fa\u73b0\u4e86 $i$ \u6b21\u7684\u6240\u6709\u6570\u7684\u548c\uff0c\u7136\u540e\u4e00\u8d77\u8ba1\u7b97\u8d21\u732e\n\n\u5bf9\u4e8e\u6240\u6709 $> \\sqrt n$ \u7684\u6570\uff0c\u8fd9\u6837\u7684\u6570\u4e0d\u8d85\u8fc7 $\\sqrt n$ \u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u4ed6\u4eec\u5f04\u5230\u4e00\u4e2a\u94fe\u8868\u91cc\u9762\u66b4\u529b\u6c42\u3002\n\n\u5728\u5916\u9762\u5957\u4e00\u4e2a\u83ab\u961f\uff0c\u5c31\u53ef\u4ee5 $\\mathcal O(n\\sqrt n)$ \u641e\u5b9a\u4e86\n\n\u4f46\u662f\u6ce8\u610f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u6bcf\u6b21\u7684\u6a21\u6570\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u9700\u8981\u8dd1\u5feb\u901f\u5e42\uff0c\u4f1a\u591a\u51fa\u6765\u4e00\u4e2a log\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u7528\u5149\u901f\u5e42\u6765\u641e\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u590d\u6742\u5ea6\u4e0d\u4f1a\u70b8\n\n\u4ee3\u7801\u8fd8\u662f\u5f88\u597d\u5199\u7684\uff0c\u6ce8\u610f\u4e0d\u8981\u70b8 int\uff0c\u5176\u4ed6\u5730\u65b9\u5c31\u6ca1\u4ec0\u4e48\u5751\u4e86\uff08\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n# define Rep(i,a,b) for(int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\n\nconst int N=1e5+5;\n\ntemplate<typename T> void read(T &x){\n   x=0;int f=1;\n   char c=getchar();\n   for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n   for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nint n,m,sq;\nint a[N],tim[N];\nll sum[N];\nint pow1[N],pow2[N];\nint head,tail,pre[N],nxt[N];\nint out[N];\nint pos[N];\n\nstruct texas{\n\tint id,l,r,p;\t\n}q[N];\n\nbool cmp(texas x,texas y){\n\tif(pos[x.l]!=pos[y.l])return pos[x.l]<pos[y.l];\n\tif(pos[x.l]&1)return x.r<y.r;\n\telse return x.r>y.r;\t\n}\n\nvoid init(int p){\n\tpow1[0]=1%p;\n\tRep(i,1,sq)pow1[i]=1ll*pow1[i-1]*2%p;\n\tpow2[0]=pow1[0];\n\tRep(i,1,sq)pow2[i]=1ll*pow2[i-1]*pow1[sq]%p;\t\n}\n\nint getpow(int k,int p){\n\tif(k<=0)return 1;\n\treturn 1ll*pow1[k%sq]*pow2[k/sq]%p;\t\n}\n\nvoid insert(int x){\n\tnxt[x]=tail;\n\tpre[x]=pre[tail];\n\tnxt[pre[tail]]=x;\n\tpre[tail]=x;\t\n}\n\nvoid dereto(int x){\n\tnxt[pre[x]]=nxt[x];\n\tpre[nxt[x]]=pre[x];\n\tnxt[x]=pre[x]=0;\t\n}\n\nvoid add(int x){\n\tsum[tim[x]]-=x;\n\ttim[x]++;\n\tsum[tim[x]]+=x;\n\tif(tim[x]==sq+1)insert(x);\n}\n\nvoid del(int x){\n\tsum[tim[x]]-=x;\n\ttim[x]--;\n\tsum[tim[x]]+=x;\n\tif(tim[x]==sq)dereto(x);\t\n}\n\nint main()\n{\n\tread(n),read(m);\n\tRep(i,1,n)read(a[i]);\n\tsq=sqrt(n)+1;\n\tRep(i,1,n)pos[i]=(i-1)/sq+1;\n\tRep(i,1,m)q[i].id=i,read(q[i].l),read(q[i].r),read(q[i].p);\n\tsort(q+1,q+m+1,cmp);\n\thead=n+1,tail=n+2;\n\tnxt[head]=tail;\n\tpre[tail]=head;\n\tRep(i,1,n)sum[0]+=a[i];\n\tfor(int i=1,l=1,r=0;i<=m;i++){\n\t\twhile(l>q[i].l)add(a[--l]);\n\t\twhile(r<q[i].r)add(a[++r]);\n\t\twhile(l<q[i].l)del(a[l++]);\n\t\twhile(r>q[i].r)del(a[r--]);\t\n\t\tinit(q[i].p);\n\t\tint tot=getpow(q[i].r-q[i].l+1,q[i].p);\n\t\tRep(j,1,sq){\n\t\t\tout[q[i].id]+=1ll*sum[j]%q[i].p*(tot-getpow(q[i].r-q[i].l+1-j,q[i].p)+q[i].p)%q[i].p;\n\t\t\tout[q[i].id]%=q[i].p;\t\n\t\t}\n\t\tfor(int it=nxt[head];it!=tail;it=nxt[it]){\n\t\t\tout[q[i].id]+=1ll*it*(tot-getpow(q[i].r-q[i].l+1-tim[it],q[i].p)+q[i].p)%q[i].p;\n\t\t\tout[q[i].id]%=q[i].p;\t\n\t\t}\n\t}\n\tRep(i,1,m)printf(\"%d\\n\",out[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1610798821,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015] \u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5072)\n\n~~\u7b2c\u4e00\u9053 Ynoi \u7eaa\u5ff5\u4e00\u4e0bqwq~~\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u6c42\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u4e2d\u6240\u6709\u5b50\u5e8f\u5217\u5206\u522b\u53bb\u91cd\u540e\u7684\u548c $\\bmod p$\u3002\n\n---\n\n## Sol\n\n\u89c2\u5bdf\u9898\u610f\uff0c\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n1. \u53ef\u79bb\u7ebf\u3002\n\n2. \u6bcf\u6b21\u6a21\u6570\u4e0d\u540c\u3002\n\n3. \u5341\u6709\u516b\u4e5d\u7206 $\\text{int}$\u3002\n\n\u5bf9\u4e8e\u7b2c $1$ \u70b9\uff0c\u5bb9\u6613\u60f3\u5230\u7528**\u83ab\u961f**\u89e3\u51b3\u95ee\u9898\u3002\n\n\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5df2\u7ecf\u5230 $O(n \\sqrt n)$ \u4e86\u3002\uff08\n\n---\n\n\u6211\u4eec\u8003\u8651\u6bcf\u4e00\u4f4d\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u533a\u95f4 $[l,r]$\uff0c\u8003\u8651 $a_i$ \u7684\u8d21\u732e \u3002\uff08$l \\le i \\le r$\uff09\n\n\u8bbe $a_i$ \u5728\u533a\u95f4 $[l,r]$ \u4e2d\u51fa\u73b0 $cnt_{a_i}$ \u6b21\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u4e00\u4e2a\u5143\u7d20\u603b\u6570\u4e3a $k$ \u7684\u96c6\u5408\u7684\u5b50\u96c6\u4e2a\u6570\u4e3a $2^k$ \u4e2a\u3002\n\n\u53ef\u7531 $\\sum\\limits^k_{i=1}\\dbinom{k}{i}=2^k$ \u5f97\u51fa\u7ed3\u8bba\u3002\n\n\u90a3\u4e48\u6211\u4eec\u63a5\u4e0b\u6765\u7b97\u5355\u4e2a\u5143\u7d20\u8d21\u732e\u6709\u4e24\u79cd\u63a8\u5bfc\u65b9\u6cd5\u3002\n\n### Sol 1\n\n\u6211\u4eec\u76f4\u63a5\u4ece\u9009\u5165\u624b\u3002\n\n\u90a3\u4e48\u53ef\u5f97\u8d21\u732e\u5373\u4e3a\u9009\u7684\u4e58\u4e0a\u4e0d\u9009\u7684\u72b6\u6001\u6570\u3002\n\n\u5373 $(2^{cnt_{a_i}}-1)\\times 2^{r-l+1-cnt_{a_i}}$\u3002\n\n\u5176\u4e2d $(2^{cnt_{a_i}}-1)$ \u8868\u793a\u9009\u7684\u975e\u7a7a\u5b50\u96c6\u3002\n\n\u53ef\u5316\u4e3a $2^{r-l+1}-2^{r-l+1-cnt_{a_i}}$\u3002\n\n### Sol 2\n\n\u6211\u4eec\u8f6c\u6362\u4e00\u4e0b\u601d\u8def\uff0c\u4e00\u4e2a\u5b50\u5e8f\u5217\u53ea\u6709\u5305\u542b\u548c\u4e0d\u5305\u542b\u4e24\u79cd\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528\u603b\u6570\u51cf\u53bb\u4e0d\u5305\u542b\u7684\u72b6\u6001\u6570\u3002\n\n\u5373\u76f4\u63a5\u53ef\u5f97 $2^{r-l+1}-2^{r-l+1-cnt_{a_i}}$\u3002\n\n---\n\n\u6211\u4eec\u8003\u8651\u5728\u83ab\u961f\u65f6\u4fdd\u5b58\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u5143\u7d20\u7684\u548c\u3002\n\n\u9700\u8981\u5feb\u901f\u63d2\u5165\uff0c\u5220\u9664\u3002\n\n\u7531\u4e8e\u4e0d\u9700\u8981\u4fdd\u8bc1\u6709\u5e8f\uff0c\u5bb9\u6613\u60f3\u5230**\u53cc\u5411\u94fe\u8868**\u3002\uff08\u5efa\u8bae\u624b\u5199\uff09\n\n$O(1)$ \u65f6\u95f4\u5b8c\u6210\u63d2\u5165\u5220\u9664\u64cd\u4f5c\u3002\n\n---\n\n\u6211\u4eec\u8003\u8651\u6a21\u6570\u4e0d\u540c\uff0c\u5982\u4f55\u8fc5\u901f\u6c42\u51fa $2^k \\bmod p$\n\n\u6211\u4eec\u8003\u8651\u5173\u4e8e $\\sqrt n$ \u5206\u7ec4\u3002\n\n$2^k=2^{\\left\\lfloor\\frac{k}{\\sqrt n}\\right\\rfloor \\times \\sqrt n+k \\bmod \\sqrt n}=2^{\\left\\lfloor\\frac{k}{\\sqrt n}\\right\\rfloor \\times \\sqrt n} \\times 2^{k \\bmod \\sqrt n}$\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa $2^1$\uff0c$2^2$\uff0c$2^3$...$2^{\\sqrt n}$\uff0c$2^{2\\sqrt n}$\uff0c$2^{3\\sqrt n}$...$2^n$ \u53d6\u6a21\u540e\u7684\u503c\u3002\n\n\u5e76\u7528\u4e0a\u9762\u7684\u516c\u5f0f\u8ba1\u7b97\u3002\n\n---\n\n\u90a3\u4e48\uff0c\u4f3c\u4e4e\u95ee\u9898\u89e3\u51b3\u5b8c\u4e86\uff1fqaq\n\n\u4e3a\u4e86\u5361\u5e38\uff0c\u6211\u4eec\u5168\u5199 $\\text{int}$\uff0c\u60f3\u7740\u8fd8\u6709\u53d6\u6a21\u5462\u3002qaq\n\n\u4ea4\u4e00\u53d1\u6837\u4f8b\uff0c\u8fc7\u4e86\u3002\u4ea4\u4e00\u53d1\uff0cWAWAWA\uff0c\u62b1\u7075\u4e86\u3002\uff08\uff08\uff08\n\n\u8fd9\u65f6\u5019\u4f60\u9700\u8981\u5728\u4e00\u4e9b\u53ef\u80fd\u7206\u70b8\u7684\u5730\u65b9\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u6210 $\\text{long long}$\u3002qwq\n\n\u8fd9\u6837\u624d\u53ef\u80fd\u4e0d WA\u3002\uff08\n\n~~\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u77e5\u9053 \u6211\u8c03\u8fd9\u4e2a\u8c03\u4e86 $6$ \u5929\u624d\u53d1\u73b0\u3002~~\n\n\u90a3\u4e48\u4ea4\u4e00\u53d1 A \u4e86qwq\u3002\n\n~~\u4e3a\u5565\u52a0\u4e86\u706b\u8f66\u5934\u6bd4\u4e0d\u52a0\u6162\u554aqaq~~\n\n\u7ed9\u4e2a\u521a\u597d\u80fd\u8fc7\u7684\u4ee3\u7801\u4e3b\u8981\u5728#9\u88ab\u5361\u3002\uff08\n\n```cpp\n/*\n***\n\u8fd8\u8981\u7ee7\u7eed\u52aa\u529b\n\u6210\u4e3a\u4e00\u540d\u70e4\u5495\u5b66\u5bb6\u54e6\n***\n*/\n#include<bits/stdc++.h>\n#define re register int\nusing namespace std;\ntypedef long long ll;\nconst int N=1e5+5;\nint n,m,a[N],len,ans[N],cnt[N],sum[N],l=1,r=0,pw1[N],pw2[N];\nstruct Question{int l,r,p,id,pos;}q[N];\nstruct LINKED_LIST{\n\tstruct Link{int pre,nxt;}lk[N];int cnt;\n\tLINKED_LIST(){cnt=0;}\n\tinline void Insert(int x){\n\t\tlk[cnt].nxt=x;\n\t\tlk[x].pre=cnt;\n\t\tcnt=x;\n\t}\n\tinline void Erase(int x){\n\t\tif(x^cnt){\n\t\t\tlk[lk[x].pre].nxt=lk[x].nxt;\n\t\t\tlk[lk[x].nxt].pre=lk[x].pre;\n\t\t}\n\t\telse cnt=lk[x].pre;\n\t\tlk[x].pre=lk[x].nxt=0;\n\t}\n}qaq;\ntemplate <typename T> inline void rd(T &x){\n\tre fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(int x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\nbool cmp(Question x,Question y){\n\tif(x.pos!=y.pos) return x.pos<y.pos;\n\tif(x.pos&1) return x.r<y.r;\n\treturn x.r>y.r;\n}\ninline void init_pow(int p){\n\tpw1[0]=pw2[0]=1;\n\tfor(re i=1;i<=len;i++) pw1[i]=((ll)1ll*pw1[i-1]*2)%p;\n\tfor(re i=1;i<=len;i++) pw2[i]=((ll)1ll*pw2[i-1]*pw1[len])%p;\n}\ninline int get_pow(int x,int p){return ((ll)pw1[x%len]*pw2[x/len])%p;}\ninline void upd(int x,int op){\n\tsum[cnt[a[x]]]-=a[x];\n\tif(!sum[cnt[a[x]]]) qaq.Erase(cnt[a[x]]);\n\tcnt[a[x]]+=op;\n\tif(!sum[cnt[a[x]]]) qaq.Insert(cnt[a[x]]);\n\tsum[cnt[a[x]]]+=a[x];\n}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);rd(m);\n\tlen=(int)sqrt(n);\n\tfor(re i=1;i<=n;i++) rd(a[i]);\n\tfor(re i=1;i<=m;i++) rd(q[i].l),rd(q[i].r),rd(q[i].p),q[i].id=i,q[i].pos=(q[i].l-1)/len+1;\n\tsort(q+1,q+m+1,cmp);\n\tfor(re i=1;i<=m;i++){\n\t\tinit_pow(q[i].p);\n\t\twhile(l>q[i].l) --l,upd(l,1);\n\t\twhile(r<q[i].r) ++r,upd(r,1);\n\t\twhile(l<q[i].l) upd(l,-1),l++;\n\t\twhile(r>q[i].r) upd(r,-1),r--;\n\t\tfor(re j=qaq.lk[0].nxt;j;j=qaq.lk[j].nxt)\n\t\t\tans[q[i].id]=((ans[q[i].id]+(ll)1ll*sum[j]*(get_pow(r-l+1,q[i].p)-get_pow(r-l+1-j,q[i].p))+q[i].p)%q[i].p+q[i].p)%q[i].p;\n\t}\n\tfor(re i=1;i<=m;i++) wr(ans[i]),puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1597917547,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "[Ynoi2015]\u76fc\u541b\u52ff\u5fd8 \u9898\u89e3 \u83ab\u961f+\u53cc\u5411\u94fe\u8868"
    },
    {
        "content": "\u5361\u5230\u4e86\u6700\u4f18\u89e3QAQ\uff1a<https://www.luogu.com.cn/record/36863427>\n\n\u6b64\u9898\u5e94\u8be5\u901a\u8fc7\u8ba1\u7b97\u8d21\u732e\u7684\u65b9\u5f0f\u6c42\u51fa\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570 $x$\uff0c\u5982\u679c\u4ed6\u5728\u533a\u95f4 $[l,r]$ \u4e2d\u51fa\u73b0\u4e86 $k$ \u6b21\uff0c\u5219\u4ed6\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f $x\\times (2^{r-l+1}-2^{r-l+1-k})$\u3002\n\n\u53ef\u4ee5\u5408\u5e76\u6240\u6709\u51fa\u73b0\u6b21\u6570\u4e3a $k$ \u6b21\u7684\u6570\uff0c\u4ed6\u4eec\u7684\u8d21\u732e\u662f $s_k\\times (2^{r-l+1}-2^{r-l+1-k})$\uff0c$s_k$ \u8868\u793a\u6240\u6709\u51fa\u73b0\u6b21\u6570\u4e3a $k$ \u6b21\u7684\u6570\u7684\u548c\u3002\n\n\u5148\u770b $s_k$ \u600e\u4e48\u8ba1\u7b97\u3002\n\n\u663e\u7136\u7528\u83ab\u961f\u7edf\u8ba1\u3002\u7136\u540e\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u600e\u4e48\u53d6\u51fa\u6240\u6709\u6709\u610f\u4e49\u7684 $k$\u3002\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u652f\u6301\u63d2\u5165\uff0c\u5220\u9664\uff0c\u904d\u5386\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5982\u54c8\u5e0c\u8868\u6216\u94fe\u8868\u3002\u83ab\u961f\u8f6c\u79fb\u65f6\u52a8\u6001\u7684\u7ef4\u62a4\u6240\u6709\u6709\u610f\u4e49\u7684 $k$ \u503c\u3002\n\n\u518d\u770b\u540e\u534a\u90e8\u5206\uff1a$2^{r-l+1}-2^{r-l+1-k}$\u3002\n\n\u8fd9\u4e2a\u91cd\u70b9\u5728\u4e8e\u6c42 $2^n \\mod p$\u3002\u53ef\u4ee5\u4f7f\u7528\u5149\u901f\u5e42\uff0c$O(\\sqrt n)$ \u9884\u5904\u7406 $O(1)$ \u6c42 $2^n \\mod p$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5e73\u8861\u4e86\u590d\u6742\u5ea6\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $n\\sqrt n$\u3002\n\n\u8bb2\u8bb2\u5361\u5e38\u65b9\u6cd5\uff1a\n\n* \u6700\u7b80\u5355\u7684\u4f18\u5316\uff1a\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c`fread`\uff0c`fwrite`\uff08\u4e0d\u8fc7\u5b9e\u6d4b\u7528\u5904\u4e0d\u5927\uff09\n\n* \u7528\u624b\u5199\u94fe\u8868\uff0c\u522b\u7528 `umap`\n\n* \u83ab\u961f\u5947\u5076\u6392\u5e8f\n\n* \u6700\u91cd\u8981\u7684\uff1a\u53d6\u6a21\u4f18\u5316\u3002\n\n\u4f17\u6240\u5468\u77e5\u53d6\u6a21\u7684\u901f\u5ea6\u5f88\u6162\uff0c\u800c\u6b64\u9898\u65e0\u8bba\u662f\u83ab\u961f\u6c42\u89e3\u8fd8\u662f\u5149\u901f\u5e42\u9884\u5904\u7406\u90fd\u8981\u5927\u91cf\u7684\u53d6\u6a21\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u53d6\u6a21\u4f18\u5316\u3002\u5177\u4f53\u89c1\u8fd9\u91cc\uff1a<https://www.luogu.com.cn/problem/P6750>\n\n\u4ee5\u5149\u901f\u5e42\u9884\u5904\u7406\u4e3a\u4f8b\uff1a\n\n```cpp\nvoid init(int len)\n{\n\tint i;\n\tbl=sqrt(len);\n\tksm2[0]=ksm1[0]=1;\n\tfor(i=1;i<=bl+5;i++)\n\t\tksm1[i]=F.reduce(1ll*ksm1[i-1]*2);\n\tfor(i=1;i<=bl+5;i++)\n\t\tksm2[i]=F.reduce(1ll*ksm1[bl]*ksm2[i-1]);\n}\n```\n\n\n\u6700\u540e\uff0c\u795d\u73c2\u6735\u8389\u6c38\u8fdc\u5e78\u798f\u9e2d\uff01",
        "postTime": 1597217231,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "\u5e94\u8be5\u662f Ynoi \u91cc\u9762\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u9053\u3002       \n\n```Welcome home, Chtholly```        \n\n\u9996\u5148\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u610f\u601d\uff0c\u4e0d\u662f\u5f97\u6240\u6709\u7684\u5b50\u5e8f\u5217\u53bb\u91cd\uff0c\u800c\u662f\u5bf9\u5b50\u5e8f\u5217\u91cc\u9762\u7684\u5143\u7d20\u8fdb\u884c\u53bb\u91cd\u7136\u540e\u6c42\u603b\u548c\u2026\u2026\u5728\u8fd9\u91cc\u8bfb\u9519\u9898\u6d6a\u8d39\u4e86 1h \u3002             \n\n\u63a5\u7740\u8fd9\u9053\u9898\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u5f88\u660e\u663e\u5982\u679c\u6211\u4eec\u7684\u5b50\u5e8f\u5217\u91cc\u9762\u6709\u4e00\u4e2a\u5143\u7d20 x \u90a3\u4e48\u8fd9\u4e2a x \u4f1a\u4e14\u53ea\u4f1a\u5bf9\u8fd9\u4e2a\u5b50\u5e8f\u5217\u4ea7\u751f\u4e00\u6b21\u5b83\u81ea\u5df1\u672c\u8eab\u7684\u8d21\u732e\u3002            \n\n\u6709\u4e86\u8fd9\u4e2a\u6761\u4ef6\u6211\u4eec\u5c31\u5f88\u597d\u76f4\u63a5\u63d0\u51fa\u6bcf\u4e2a x \uff0c\u4ee4 t \u4e3a\u5b83\u5728\u67e5\u8be2\u533a\u95f4\u91cc\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7136\u540e\u4ee4\u533a\u95f4\u957f\u4e3a len \uff0cx \u7684\u8d21\u732e\u5c31\u662f $x \\times (2 ^ {len} - 2 ^ {len - t})$ \uff0c$2 ^ {len}$ \u662f\u603b\u7684\u5b50\u5e8f\u5217\u4e2a\u6570\uff0c\u800c $2 ^ {len - t}$ \u5c31\u662f\u4e0d\u5305\u542b x \u7684\u5b50\u5e8f\u5217\uff0c\u7b80\u5355\u6392\u5217\u7ec4\u5408\u3002           \n\n\u7136\u540e\u6211\u4eec\u5f88\u660e\u663e\u53c8\u53ef\u4ee5\u5f88 trick \u7684\u628a\u51fa\u73b0\u6b21\u6570\u63d0\u51fa\u6765\uff0c\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u8fd9\u4e2a\u5f0f\u5b50\u5728\u533a\u95f4\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\u4ec5\u6709\u4e24\u4e2a\u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u8bb0 ```sum[x]``` \u8868\u793a\u5728\u8fd9\u4e2a\u533a\u95f4\u91cc\u51fa\u73b0\u6b21\u6570\u4e3a x \u7684\u5143\u7d20\u4e4b\u548c\uff0c\u90a3\u4e48\u7b54\u6848\u5373\u53ef\u8868\u793a\u4e3a $\\sum sum[x] \\times (2 ^ {len} - 2 ^ {len - t})$ \u3002         \n\n\u6211\u4eec\u4e3a\u4f55\u8981\u628a\u51fa\u73b0\u6b21\u6570\u7ed9\u63d0\u51fa\u6765\u5f53\u53d8\u91cf\uff1f\u56e0\u4e3a\u6211\u4eec\u6b64\u65f6\u53d1\u73b0\u6240\u6709 ```sum[x]``` \u4e2d\u53ea\u6709 ```sum[x]``` \u4e0d\u4f1a $0$ \u624d\u4f1a\u9020\u6210\u8d21\u732e\uff0c\u800c ```sum[x]``` \u4e0d\u4e3a $0$ \u7684 x \u4e2a\u6570\u6700\u52a3\u60c5\u51b5\u4e0b\u5373\u51fa\u73b0\u6b21\u6570\u4e3a $1 , 2 , 3 , 4 \u2026\u2026$ \u7684\u60c5\u51b5\u5168\u90fd\u51fa\u73b0\u8fc7\uff0c\u6700\u52a3\u4e2a\u6570\u4e3a $\\sqrt n$ \uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8bb0\u5f55\u4e00\u4e0b\u6240\u6709\u7684\u975e\u96f6 x \u7136\u540e\u5c31\u53ef\u4ee5\u5728 $O(\\sqrt n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u91cc\u9762\u627e\u51fa\u6765\uff0c\u8fd9\u91cc\u6211\u5199\u7684\u662f\u94fe\u8868\u7ef4\u62a4\u3002                \n\n\u4e4b\u540e\u6211\u4eec\u8981\u4e89\u53d6\u505a\u5230 $O(n \\sqrt n)$ \uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u7684\u6c42\u5e42\u5c31\u53ea\u6709\u6c42 $2$ \u7684\u5e42\u5e76\u4e14\u6307\u6570\u5927\u5c0f\u4e25\u683c\u63a7\u5236\u5728 $100000$ \u4ee5\u5185\uff0c\u6211\u4eec\u5957\u4e00\u4e2a\u5149\u901f\u5e42\u89e3\u51b3\u5373\u53ef\u3002        \n\n~~\u4e0d\u4f1a\u5149\u901f\u5e42\u7684\u540c\u5b66\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u5176\u4ed6\u9898\u89e3\u6bd5\u7adf\u8fd9\u4e0d\u662f\u8fd9\u9053\u9898\u7684\u91cd\u70b9~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define int long long\nconst int Len = 1e5 + 5 , SIZE = 325;\nlong long n,m,p,a[Len],cnt,Point[Len],sum[Len],Cnt[Len];\nlong long qpow[SIZE],sqrtqpow[SIZE],Print[Len],head;\nstruct node\n{\n\tint lst,to;\n\tnode(int xx = 0,int yy = 0){lst = xx , to = yy;}\n}edge[Len];\ninline void add(int x)\n{\n\tedge[x].lst = 0 , edge[head].lst = x;\n\tedge[x].to = head;\n\thead = x;\n}\ninline void del(int x)\n{\n\tif(x == head)\n\t{\n\t\tint next = edge[head].to;\n\t\tedge[x].to = edge[x].lst = 0;\n\t\tedge[next].lst = 0;\n\t\thead = next;\n\t}\n\telse \n\t{\n\t\tint next = edge[x].to , last = edge[x].lst;\n\t\tedge[last].to = next;\n\t\tedge[next].lst = last;\n\t\tedge[x].lst = edge[x].to = 0;\n\t}\n}\nstruct Node\n{\n\tint l,r,idx;\n\tint Mod;\n}Sec[Len];\nint block[Len],t;\nbool cmp(Node x , Node y)\n{\n\tif(block[x.l] ^ block[y.l]) return block[x.l] < block[y.l];\n\treturn x.r < y.r;\n}\nvoid Add(int x)\n{\n\tif(Cnt[a[x]]) sum[Cnt[a[x]]] -= a[x];\n\tif(!sum[Cnt[a[x]]] && Cnt[a[x]]) del(Cnt[a[x]]);\n\tCnt[a[x]] ++;\n\tif(Cnt[a[x]]) sum[Cnt[a[x]]] += a[x];\n\tif(sum[Cnt[a[x]]] == a[x] && Cnt[a[x]]) add(Cnt[a[x]]);\n}\nvoid Sub(int x)\n{\n\tif(Cnt[a[x]]) sum[Cnt[a[x]]] -= a[x];\n\tif(!sum[Cnt[a[x]]] && Cnt[a[x]]) del(Cnt[a[x]]);\n\tCnt[a[x]] --;\n\tif(Cnt[a[x]]) sum[Cnt[a[x]]] += a[x];\n\tif(sum[Cnt[a[x]]] == a[x] && Cnt[a[x]]) add(Cnt[a[x]]);\n}\nsigned main()\n{\n\tscanf(\"%lld %lld\",&n,&m);\n\tt = sqrt(n);\n\tfor(int i = 1 ; i <= n ; i ++) block[i] = (i - 1) / t + 1;\n\tfor(int i = 1 ; i <= n ; i ++) scanf(\"%lld\",&a[i]);\n\tfor(int i = 1 ; i <= m ; i ++) \n\t{\n\t\tscanf(\"%lld %lld %lld\",&Sec[i].l,&Sec[i].r,&Sec[i].Mod);\n\t\tSec[i].idx = i;\n\t}\n\tsort(Sec + 1 , Sec + 1 + m , cmp);\n\tint l = 1 , r = 0;\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\twhile(l > Sec[i].l) Add(-- l);\n\t\twhile(r < Sec[i].r) Add(++ r);\n\t\twhile(l < Sec[i].l) Sub(l ++);\n\t\twhile(r > Sec[i].r) Sub(r --);\n\t\tint len = r - l + 1 , T = sqrt(len);\n\t\tT ++;\n\t\tqpow[0] = 1;\n\t\tfor(int j = 1 ; j <= T ; j ++) qpow[j] = qpow[j - 1] * 2LL % Sec[i].Mod;\n\t\tsqrtqpow[0] = 1;\n\t\tfor(int j = 1 ; j <= T ; j ++) sqrtqpow[j] = sqrtqpow[j - 1] * qpow[T] % Sec[i].Mod;\n\t\tfor(int e = head ; e ; e = edge[e].to)\n\t\t\tPrint[Sec[i].idx] += sum[e] * (sqrtqpow[len / T] * qpow[len % T] % Sec[i].Mod - sqrtqpow[(len - e) / T] * qpow[(len - e) % T] % Sec[i].Mod + Sec[i].Mod) % Sec[i].Mod , Print[Sec[i].idx] %= Sec[i].Mod;\n\t}\n\tfor(int i = 1 ; i <= m ; i ++) printf(\"%lld\\n\",Print[i]);\n\treturn 0;\n}\n```",
        "postTime": 1615814400,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5072 [Ynoi2015] \u76fc\u541b\u52ff\u5fd8"
    },
    {
        "content": "\u8fd9\u662f\u6211\u505a\u7684\u7b2c\u4e00\u9053Ynoi~  \n\n## \u9898\u9762\n\n> \u73c2\u6735\u8389\u7ed9\u4e86\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u4e2d\u6240\u6709\u5b50\u5e8f\u5217\u5206\u522b\u53bb\u91cd\u540e\u7684\u548c \u200a$mod\\ p$\n\n## \u9898\u89e3  \n\n\n\u770b\u4e0a\u53bb\u8fd9\u4e2a\u201c\u53bb\u91cd\u201d \u201c\u5e8f\u5217\u201d\u975e\u5e38\u4e0d\u597d\u5904\u7406\uff0c\u6211\u4eec\u8003\u8651\u8f6c\u6362\u6210\u8d21\u732e  \n\u5982\u679c\u6570$x$\u5728\u533a\u95f4$[l,r]$\u4e2d\u51fa\u73b0\u4e86$k$\u6b21  \n\u90a3\u4e48\u4e0d\u542b$x$\u7684\u6570\u6709$r-l+1-k$\u4e2a\uff0c\u4ea7\u751f\u7684\u5b50\u5e8f\u5217\u6709$2^{r-l+1-k}$\u4e2a  \n\u6240\u4ee5$x$\u7684\u8d21\u732e\u4e3a$x \\cdot (2^{r-l+1}-2^{r-l+1-k})$  \n\u7136\u540e\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002  \n\n\n\u6211\u4eec\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u7136\u540e\u83ab\u961f\u3002  \n\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u5b58\u50a8\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u7684\u6570\u7684\u548c  \n\u8fd9\u91cc\u6211\u7528\u4e86`unordered_set`\u7528\u6765\u50a8\u5b58  \n\n\u52a0\u5165\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u5148\u627e\u5230\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570$cnt$\uff0c\u7136\u540e\u5c06\u51fa\u73b0$cnt$\u6b21\u7684\u6570\u4e4b\u548c\u51cf\u53bb\u8fd9\u4e2a\u6570\u3002  \n\u7136\u540e\u628a\u8fd9\u4e2a\u6570\u52a0\u5165\u51fa\u73b0\u6b21\u6570$cnt+1$\u7684\u5730\u65b9  \n\u5220\u9664\u7684\u65f6\u5019\u7c7b\u4f3c\uff0c\u628a\u8fd9\u4e2a\u6570\u52a0\u5165\u51fa\u73b0\u6b21\u6570$cnt-1$\u7684\u5730\u65b9\u5373\u53ef\u3002  \n\u503c\u57df\u53ea\u6709$1e5$\uff0c\u627e$cnt$\u53ef\u4ee5\u76f4\u63a5\u5f00\u6876\u50a8\u5b58\uff0c\u4e0d\u9700\u8981\u79bb\u6563\u5316\u3002\n\n```cpp\nI void add(int x) \n{\n    if (cnt[a[x]]) \n    { \n        sum[cnt[a[x]]]-=a[x];\n        if (!sum[cnt[a[x]]]) sum2.erase(cnt[a[x]]);\n    }\n    cnt[a[x]]++;\n    if (!sum[cnt[a[x]]]) sum2.insert(cnt[a[x]]);\n    sum[cnt[a[x]]]+=a[x];\n}\nI void del(int x) \n{\n\tsum[cnt[a[x]]]-=a[x];\n\tif (!sum[cnt[a[x]]]) sum2.erase(cnt[a[x]]);\n\tcnt[a[x]]--;\n\tif (!cnt[a[x]])  return;\n    \telse \n    \t{\n\t\tif (!sum[cnt[a[x]]]) sum2.insert(cnt[a[x]]);\n\t\tsum[cnt[a[x]]]+=a[x];\n\t}\n}\n```\n~~\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4ee3\u7801\u4f1a\u53d8\u6210\u8fd9\u4e2a\u6837\u5b50\uff0c\u672c\u5730\u633a\u6b63\u5e38\u7684\uff0c\u6216\u8bb8\u662ftab\u7684\u95ee\u9898~~  \n\u8fd9\u91cc`sum[i]`\u8868\u793a\u51fa\u73b0$i$\u6b21\u7684\u6570\u4e4b\u548c\uff0c`sum2`\u662f\u4e00\u4e2a`unordered_set`\uff0c\u7528\u6765\u5b58\u50a8\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u6b21\u6570\u3002  \n\u7531\u4e8e\u5728\u957f\u5ea6\u4e3a$L$\u7684\u533a\u95f4\u4e2d\u4e0d\u540c\u79cd\u7c7b\u7684\u51fa\u73b0\u6b21\u6570\u4e3a$\\sqrt n$\u4ee5\u5185\uff0c\u6240\u4ee5\u8fd9\u6837\u53ef\u4ee5\u5728\u65f6\u95f4\u5185\u6c42\u51fa\u6240\u6709\u51fa\u73b0\u6b21\u6570\u4ee5\u53ca`sum`\u3002  \n\n\u7136\u540e\u6211\u4eec\u518d\u7528\u5feb\u901f\u5e42\u7b97\u51fa\u7b54\u6848\u3002\n\u7136\u800c\u8fd9\u6837\u662f$O(m\\sqrt n \\log n)$\u7684\uff0c\u4f1aT\u6389\u3002  \n\u90a3\u4e48\u6211\u4eec\u4e0d\u7528\u5feb\u901f\u5e42\uff0c\u7528\u5149\u901f\u5e42\uff0c\u5c31\u80fd\u5feb\u901f\u5f97\u51fa\u7b54\u6848\u4e86\u3002  \n```cpp\nI void Init(int Mod) \n{\n    pow1[0]=pow2[0]=1;\n    for (R int i=1;i<=SIZE;i++) pow1[i]=1LL*pow1[i-1]*2%Mod;\n    pow2[1]=pow1[SIZE];\n    for (R int i=2;i<=SIZE;i++) pow2[i]=1LL*pow2[i-1]*pow2[1]%Mod;\n}\nI int gsm(int x,int Mod) {return pow1[x%SIZE]*pow2[x/SIZE]%Mod;}\n```\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define rd(x) x=read() \n#define wt(x) write(x)\n#define R register\n#define I inline\nusing namespace std;\nconst int N=1e5+5;\nconst int SIZE=317;\nI int read() \n{\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0') {if (ch=='-') f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nI void write(int x)\n{\n    if(x<0){putchar('-');x=-x;}\n    if(x>=10)write(x/10);\n    putchar(x%10+'0');\n}\nint n,m;\nint a[N],cnt[N],block[N];\nint pow1[N],pow2[N];\nunordered_set<int> sum2;\nint sum[N],ans[N];\nstruct Query\n{\n    int l,r,id,mod;\n    bool operator<(const Query& o) const \n    {\n        if (block[l]^block[o.l]) return l<o.l;\n        else if (block[l]&1) return r<o.r;\n        else return r>o.r;\n    }//\u83ab\u961f\u6392\u5e8f\n};\nQuery q[N];\nI void add(int x) \n{\n    if (cnt[a[x]]) \n    { \n        sum[cnt[a[x]]]-=a[x];\n        if (!sum[cnt[a[x]]]) sum2.erase(cnt[a[x]]);\n    }\n    cnt[a[x]]++;\n    if (!sum[cnt[a[x]]]) sum2.insert(cnt[a[x]]);\n    sum[cnt[a[x]]]+=a[x];\n}\nI void del(int x) \n{\n\tsum[cnt[a[x]]]-=a[x];\n\tif (!sum[cnt[a[x]]]) sum2.erase(cnt[a[x]]);\n\tcnt[a[x]]--;\n\tif (!cnt[a[x]])  return;\n    else \n    {\n\t\tif (!sum[cnt[a[x]]]) sum2.insert(cnt[a[x]]);\n\t\tsum[cnt[a[x]]]+=a[x];\n\t}\n}\nI void Init(int Mod) \n{\n    pow1[0]=pow2[0]=1;\n    for (R int i=1;i<=SIZE;i++) pow1[i]=1LL*pow1[i-1]*2%Mod;\n    pow2[1]=pow1[SIZE];\n    for (R int i=2;i<=SIZE;i++) pow2[i]=1LL*pow2[i-1]*pow2[1]%Mod;\n}\nI int gsm(int x,int Mod) {return pow1[x%SIZE]*pow2[x/SIZE]%Mod;}\n\nI int get(int l,int r,int Mod) \n{\n\tint ans=0;\n\tint S=gsm(r-l+1,Mod);\n\tfor (int it:sum2) ans=(ans+sum[it]*(S-gsm(r-l+1-it,Mod)+Mod)%Mod)%Mod;\n\treturn ans%Mod;\n}\n\nsigned main() \n{\n    rd(n);rd(m);\n    for (R int i=1;i<=n;i++) rd(a[i]);\n    for (R int i=1;i<=n;i++) block[i]=(i-1)/SIZE+1;\n    for (R int i=1;i<=m;i++) \n    {\n        rd(q[i].l);\n        rd(q[i].r);\n        rd(q[i].mod);\n        q[i].id=i;\n    }\n    sort(q+1,q+m+1);\n    int l=q[1].l,r=l-1;\n    for (R int i=1;i<=m;i++) \n    {\n        while(l<q[i].l) del(l++);\n        while(l>q[i].l) add(--l);\n        while(r<q[i].r) add(++r);\n        while(r>q[i].r) del(r--);\n        Init(q[i].mod);\n        ans[q[i].id]=get(q[i].l,q[i].r,q[i].mod);\n    }\n    for (R int i=1;i<=m;i++) {wt(ans[i]);putchar('\\n');}\n}\n```\n",
        "postTime": 1605340635,
        "uid": 70132,
        "name": "AsunderSquall",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$ \u548c $m$ \u6b21\u8be2\u95ee\uff0c\u7b2c $i$ \u6b21\u8be2\u95ee\u9700\u8981\u6c42\u51fa $[l_i,r_i]$ \u5185\u6240\u6709\u5b50\u5e8f\u5217\u53bb\u91cd\u4e4b\u540e\u7684\u548c\uff0c\u5bf9 $p_i$ \u53d6\u6a21\u3002\n\n$\\texttt{Data Range:}1\\leq n,m,a_i\\leq 10^5,1\\leq p_i\\leq 10^9$\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13696282.html)\n\n\u4eba\u751f\u7b2c\u4e00\u9053 Ynoi\uff0c\u5199\u7bc7\u9898\u89e3\u796d\u4e4b\u3002\n\n\u6211\u4eec\u4e0e\u5176\u8003\u8651\u67d0\u4e2a\u5b50\u5e8f\u5217\u5305\u542b\u4e86\u54ea\u4e9b\u503c\uff0c\u8fd8\u4e0d\u5982\u770b\u67d0\u4e2a\u503c\u80fd\u8d21\u732e\u5230\u591a\u5c11\u4e2a\u5b50\u5e8f\u5217\u3002\n\n\u7136\u800c\u6b63\u7740\u505a\u4e0d\u597d\u505a\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5b50\u5e8f\u5217\u4e2d\u67d0\u4e2a\u503c\u53ef\u80fd\u51fa\u73b0\u591a\u6b21\uff0c\u6240\u4ee5\u8003\u8651\u53cd\u8fc7\u6765\u770b\u4e00\u4e2a\u503c\u4e0d\u80fd\u8d21\u732e\u5230\u591a\u5c11\u4e2a\u5b50\u5e8f\u5217\uff0c\u518d\u7528\u603b\u7684\u51cf\u53bb\u8fd9\u4e2a\u5b50\u5e8f\u5217\u5c31\u597d\u4e86\u3002\n\n\u8003\u8651\u67d0\u4e00\u4e2a $[l,r]$ \u7684\u8be2\u95ee\uff0c\u5176\u4e2d\u67d0\u4e2a\u6570\u51fa\u73b0\u4e86 $k$ \u6b21\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u7531\u4e0a\u9762\u7684\u5206\u6790\u77e5\u9053\u8fd9\u4e2a\u6570\u5c06\u4f1a\u5bf9 $2^{r-l+1}-2^{r-l+1-k}$ \u4e2a\u5b50\u5e8f\u5217\u4ea7\u751f\u8d21\u732e\u3002\n\n\u540c\u65f6\uff0c\u6ce8\u610f\u5230\u591a\u4e2a\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u7684\u6570\u53ef\u4ee5\u4e00\u8d77\u52a0\u8d77\u6765\u8d21\u732e\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8bbe $b_k$ \u4e3a\u5f53\u524d\u7684\u533a\u95f4\u5185\u51fa\u73b0\u4e86 $k$ \u6b21\u7684\u6240\u6709\u6570\u7684\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e3a\n\n$$\\sum\\limits_{k}b_k\\left(2^{r-l+1}-2^{r-l+1-k}\\right)$$\n\n\u6ce8\u610f\u5230 $b_k$ \u53ef\u4ee5\u4f7f\u7528\u83ab\u961f\u6765\u7ef4\u62a4\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a $O(nm\\log n)$ \u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u8003\u8651\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u679a\u4e3e\u5f88\u591a\u7b49\u4e8e $0$ \u7684 $b_k$\u3002\u6240\u4ee5\u6211\u4eec\u5728\u79fb\u52a8\u533a\u95f4\u7aef\u70b9\u7684\u65f6\u5019\u53ef\u4ee5\u540c\u65f6\u7528\u94fe\u8868\u8bb0\u5f55\u4e00\u4e0b\u6ee1\u8db3 $b_k\\neq 0$ \u7684\u90a3\u4e9b $k$\u3002\n\n\u6ce8\u610f\u5230\u94fe\u8868\u4e2d\u8bb0\u5f55\u7684 $k$ \u662f $O(\\sqrt{n})$ \u7684\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u4e3a $O(m\\sqrt{n}\\log n)$\uff0c\u8fd8\u662f\u4f1a TLE\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u4e2a $\\log$ \u751a\u81f3\u90fd\u53ef\u4ee5\u641e\u6389\uff0c\u8003\u8651\u5206\u5757\u6253\u8868\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u90fd\u9884\u5904\u7406\u4e00\u6b21\uff0c\u56e0\u4e3a\u4e00\u6b21\u9884\u5904\u7406\u662f $O(\\sqrt{n})$ \u7684\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a $O(m\\sqrt{n})$\uff0c\u52a0\u4e0a\u4e00\u4e9b\u57fa\u672c\u7684\u5361\u5e38\u6280\u5de7\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast,unroll-loops\")\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=2e5+51; \nstruct Query{\n\tll l,r,p,id;\n\tinline bool operator <(const Query &rhs)const;\n};\nQuery qry[MAXN];\nll n,qcnt,l,r,p,blockSize,ptrl,ptrr,len,hd;\nli rres;\nll x[MAXN],res[MAXN],cntl[MAXN],sum[MAXN],prv[MAXN],nxt[MAXN];\nll blk[MAXN],pw[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline bool Query::operator <(const Query &rhs)const\n{\n\tif(l/blockSize==rhs.l/blockSize)\n\t{\n\t\treturn l/blockSize==1?r<rhs.r:r>rhs.r;\n\t}\n\treturn l<rhs.l;\n}\ninline void insert(ll x)\n{\n\tprv[x]=0,nxt[x]=hd,prv[hd]=x,hd=x;\n}\ninline void erase(ll x)\n{\n\tif(x==hd)\n\t{\n\t\treturn (void)(hd=nxt[x],prv[nxt[x]]=prv[x]=nxt[x]=0);\n\t}\n\tnxt[prv[x]]=nxt[x],prv[nxt[x]]=prv[x],prv[x]=nxt[x]=0;\n}\ninline void add(ll pos)\n{\n\tif(!(cntl[x[pos]]++))\n\t{\n\t\tsum[1]+=x[pos];\n\t}\n\telse\n\t{\n\t\tsum[cntl[x[pos]]-1]-=x[pos],sum[cntl[x[pos]]]+=x[pos];\n\t}\n\tif(sum[cntl[x[pos]]]==x[pos])\n\t{\n\t\tinsert(cntl[x[pos]]);\n\t}\n\tif(!sum[cntl[x[pos]]-1])\n\t{\n\t\terase(cntl[x[pos]]-1);\n\t}\n}\ninline void del(ll pos)\n{\n\tif(!(--cntl[x[pos]]))\n\t{\n\t\tsum[1]-=x[pos];\n\t}\n\telse\n\t{\n\t\tsum[cntl[x[pos]]+1]-=x[pos],sum[cntl[x[pos]]]+=x[pos];\n\t}\n\tif(sum[cntl[x[pos]]]==x[pos])\n\t{\n\t\tinsert(cntl[x[pos]]);\n\t}\n\tif(!sum[cntl[x[pos]]+1])\n\t{\n\t\terase(cntl[x[pos]]+1);\n\t}\n}\ninline void setup(ll md)\n{\n\tpw[0]=blk[0]=1;\n\tfor(register int i=1;i<=511;i++)\n\t{\n\t\tpw[i]=(pw[i-1]+pw[i-1])%md;\n\t}\n\tblk[1]=(pw[511]+pw[511])%md;\n\tfor(register int i=1;i<=512;i++)\n\t{\n\t\tblk[i]=(li)blk[i-1]*blk[1]%md;\n\t}\n}\ninline ll query(ll x,ll md)\n{\n\treturn (li)blk[x>>9]*pw[x&511]%md;\n}\nint main()\n{\n\tblockSize=sqrt(n=read()),qcnt=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tx[i]=read();\n\t}\n\tfor(register int i=1;i<=qcnt;i++)\n\t{\n\t\tl=read(),r=read(),p=read(),qry[i]=(Query){l,r,p,i};\n\t}\n\tsort(qry+1,qry+qcnt+1),ptrl=1;\n\tfor(register int i=1;i<=qcnt;i++)\n\t{\n\t\twhile(ptrr<qry[i].r)\n\t\t{\n\t\t\tadd(++ptrr);\n\t\t}\n\t\twhile(ptrr>qry[i].r)\n\t\t{\n\t\t\tdel(ptrr--);\n\t\t}\n\t\twhile(ptrl<qry[i].l)\n\t\t{\n\t\t\tdel(ptrl++);\n\t\t}\n\t\twhile(ptrl>qry[i].l)\n\t\t{\n\t\t\tadd(--ptrl);\n\t\t}\n\t\tsetup(p=qry[i].p),len=qry[i].r-qry[i].l+1,rres=0;\n\t\tfor(register int j=hd;j;j=nxt[j])\n\t\t{\n\t\t\trres+=(li)sum[j]*(query(len,p)-query(len-j,p));\n\t\t}\n\t\tres[qry[i].id]=(rres%p+p)%p;\n\t}\n\tfor(register int i=1;i<=qcnt;i++)\n\t{\n\t\tprintf(\"%d\\n\",res[i]);\n\t}\n}\n```",
        "postTime": 1600497490,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "\u4eba\u50bb\u5e38\u6570\u5927\uff0c\u8dd1\u5f97\u8d85\u7ea7\u6162\uff0c\u9b3c\u77e5\u9053\u4e3a\u4ec0\u4e48\n\n\n\n# noteskey\n\n\u53d1\u73b0\u8fd9\u91cc\u53ef\u4ee5\u7528\u83ab\u961f\u505a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570 x \u6765\u8bb2\uff0c\u5982\u679c\u5b83\u5728\u5757 $l$ ~ $r$ \u5185\u51fa\u73b0 k \u6b21\uff0c\u90a3\u4e48\u8d21\u732e\u4e3a $2^{len}-2^{len-k} , len=r-l+1$\uff0c\u4f46\u662f\u7a7a\u95f4\u590d\u6742\u5ea6\u7206\u70b8\uff0c\u6211\u4eec\u9700\u8981\u518d\u6765\u4e2a\u6839\u53f7\u5206\u522b\u5904\u7406\u7684\u4f18\u5316\n\n\u603b\u4e4b\u5c31\u662f\u83ab\u961f\u79bb\u7ebf\u5904\u7406\uff0c\u6bcf\u4e2a\u5757\u5185\u5927\u4e8e $\\sqrt n$ \u548c\u5c0f\u4e8e $\\sqrt n$ \u7684\u5206\u522b\u5904\u7406\uff0c\u7136\u540e update \u7684\u65f6\u5019\u6ce8\u610f\u8f6c\u5316\u5c31\u597d\u4e86\n\n\n\u5bf9\u4e8e 2 \u7684\u5e42\u6b21\u5c31\u662f $O(\\sqrt n)$ \u9884\u5904\u7406 + $O(1)$ \u67e5\u8be2\n\n\n# code\n\n\u603b\u4e4b\u6bd4\u8f83...\u77ed(dl)\u5427\n\n```cpp\n//by Judge\n#include<bits/stdc++.h>\n#define Rg register\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(Rg int i=(a),I=(b)-1;i>I;--i)\n#define bl 317\n#define ll long long\nusing namespace std;\nconst int M=1e5+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int CCF=-1,Z;\ninline void Ot(){fwrite(sr,1,CCF+1,stdout),CCF=-1;}\ninline void print(int x,char chr='\\n'){\n    if(CCF>1<<20)Ot();if(x<0)sr[++CCF]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++CCF]=z[Z],--Z);sr[++CCF]=chr;\n} int n,m,pw1[bl+3],pw2[bl+3]; arr a,buc,ans,pos;\nll bvc[bl+3]; vector<int> lr; unordered_set<int> s;\ninline int qpow(int p,int mod){ // O 1 \u5feb\u901f\u5e42 \n\treturn 1ll*pw1[p%bl]*pw2[p/bl]%mod;\n}\nstruct que{ int l,r,id,md; }q[M];\ninline bool cmp(que& a,que& b){  // \u83ab\u961f cmp  \n\treturn pos[a.l]^pos[b.l]?a.l<b.l:((a.r>b.r)^(pos[a.l]&1));\n}\ninline void ADD(int x){ const int val=a[x];\n\tif(buc[val]>bl) ++buc[val];\n\telse if(buc[val]==bl) bvc[buc[val]++]-=lr[val],s.insert(val);\n\telse bvc[buc[val]]-=lr[val],bvc[++buc[val]]+=lr[val];\n}\ninline void DEL(int x){ const int val=a[x];\n\tif(buc[val]>bl+1) --buc[val];  //\u5728 bl \u4e4b\u5916\u8f6c\u5316\u7684 \n\telse if(buc[val]==bl+1) s.erase(val),bvc[--buc[val]]+=lr[val]; //\u8981\u4ece\u5927\u4e8e bl \u8f6c\u4e3a bl \u4ee5\u5185\u7684 \n\telse bvc[buc[val]]-=lr[val],bvc[--buc[val]]+=lr[val]; //\u5728 bl \u4e4b\u5185\u8f6c\u5316\u7684 \n}\nint main(){ n=read(),m=read(); fp(i,1,n) pos[i]=(i-1)/bl+1;\n\tfp(i,1,n) lr.push_back(a[i]=read()); sort(lr.begin(),lr.end());\n\tfp(i,1,n) a[i]=lower_bound(lr.begin(),lr.end(),a[i])-lr.begin();\n\tfp(i,1,m) q[i].l=read(),q[i].r=read(),q[i].md=read(),q[i].id=i;\n\tsort(q+1,q+1+m,cmp); int l=1,r=0; fp(i,1,n) *bvc+=a[i];\n\t*pw1=*pw2=1; fp(i,1,m){ //\u83ab\u961f\u4e3b\u4f53 \n\t\twhile(r<q[i].r) ADD(++r); while(l>q[i].l) ADD(--l);\n\t\twhile(r>q[i].r) DEL(r--); while(l<q[i].l) DEL(l++);\n\t\tconst int md=q[i].md,len=r-l+1; //\u8ba1\u7b97\u5f53\u524d\u5757\u7684\u7b54\u6848 \n\t\tfp(j,1,bl-1) pw1[j]=pw1[j-1]*2ll%md;\n\t\tpw2[1]=pw1[bl-1]*2ll%md;\n\t\tfp(j,2,bl) pw2[j]=1ll*pw2[1]*pw2[j-1]%md;\n\t\tint& ANS=ans[q[i].id]; const int all=qpow(len,md);\n\t\tfp(j,1,bl) (ANS+=1ll*(all-qpow(len-j,md)+md)*bvc[j]%md-md)+=ANS>>31&md;\n\t\tfor(Rg int j: s) (ANS+=1ll*(all-qpow(len-buc[j],md)+md)*lr[j]%md-md)+=ANS>>31&md;\n\t} fp(i,1,m) print(ans[i]); return Ot(),0;\n}\n```\n\n\n",
        "postTime": 1555286262,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": ">\u3010\u5e78\u597d\u4f60\u5728\u5931\u53bb\u4e00\u5207\u4e4b\u524d\uff0c\u56de\u5230\u4e86\u8fd9\u91cc\u3011\n\n>\u3010\u559c\u60a6\u548c\u60b2\u4f24\u3011\n\n>\u3010\u8fd8\u6709\u559c\u6b22\u67d0\u4e2a\u4eba\u7684\u60c5\u7eea\u3011\n\n>\u3010\u73b0\u5728\u4f9d\u65e7\u8fd8\u6b8b\u5b58\u7740\u4e00\u4e9b\u5427\uff1f\u3011\n\n\u8fd9\u9898\u662f\u4e00\u9053\u504f\u5411\u601d\u7ef4\u7684\u83ab\u961f\u9898\uff0c\u6700\u4e3b\u8981\u7684\u95ee\u9898\u662f\u5c06\u4f20\u7edf\u83ab\u961f\u6a21\u677f\u9898\u4e2d\u7684\u201c\u533a\u95f4 $[l,r]$ \u4e2d\u4e0d\u540c\u7684\u6570\u4e4b\u548c\u201d\u6362\u4e3a\u4e86\u201c\u533a\u95f4\u4e2d\u6bcf\u4e2a\u5b50\u5e8f\u5217\u4e0d\u540c\u7684\u6570\u4e4b\u548c\u201d\uff0c\u663e\u7136\uff0c\u6211\u4eec\u4e0d\u80fd\u5bf9\u6bcf\u4e2a\u5b50\u5e8f\u5217\u5206\u522b\u5904\u7406\uff0c\u90a3\u4e48\u6211\u4eec\u5219\u8003\u8651\u4ece\u6574\u4e2a\u533a\u95f4\u5bf9\u5b50\u5e8f\u5217\u7684\u8d21\u732e\u65b9\u9762\u7740\u624b\n\n\u82e5\u6574\u4e2a\u533a\u95f4\u4e2d\u67d0\u4e2a\u6570 $x$ \u51fa\u73b0\u4e86 $k$ \u6b21\uff0c\u90a3\u4e48\u5b83\u4ea7\u751f\u7684\u8d21\u732e\u4e3a\uff1a\n\n$\\qquad ans=x\\times$\uff08\u5b50\u5e8f\u5217\u4e2a\u6570-\u4e0d\u542b\u8be5\u6570\u7684\u5b50\u5e8f\u5217\u6570\uff09\n\n$\\qquad \\qquad = x\\times(2^{len}-2^{len-k})$\n\n\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e2a\u4e0d\u540c\u7684 $x$ \u8fdb\u884c\u8ba1\u7b97\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u81f3\u5c11\u662f $O(mn)$ \u7ea7\u522b\u7684\uff0c\u4f46\u5982\u679c\u5bf9\u4e8e\u4e0d\u540c\u7684 $k$ \u8ba1\u7b97\uff0c\u5373\u4f7f\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5373\uff1a$n=\\frac{k(k-1)}{2}$\uff0c\u5728\u4f7f\u7528\u53cc\u5411\u94fe\u8868\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u6bcf\u6b21\u67e5\u8be2\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6\u4e3a $O(m\\sqrt{n})$\uff0c\u518d\u5957\u4e0a\u83ab\u961f\u7684 $O(n\\sqrt{n})$\uff0c\u662f\u53ef\u4ee5\u63a5\u53d7 $10^5$ \u7684\u6570\u636e\u91cf\u7684\u3002\n\n\u4f46\u662f\u5728\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u7531\u4e8e\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\uff0c$p$ \u5404\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u65e0\u6cd5\u4e00\u6b21\u9884\u5904\u7406\uff0c\u800c\u6839\u53f7\u7684\u590d\u6742\u5ea6\u8bf4\u660e\u5373\u4f7f\u518d\u5957\u4e0a\u4e00\u4e2a\u5feb\u901f\u5e42\u7684 $O(logn)$ \u4e5f\u5c06\u65e0\u6cd5\u63a5\u53d7\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u4f7f\u7528~~\u6211\u770b\u9898\u89e3\u624d\u77e5\u9053\u7684~~**\u5149\u901f\u5e42**\uff0c\u6211\u4eec\u6ce8\u610f\u5230\uff1a\n\n$\\qquad 2^k = 2^{\\frac{k}{\\sqrt{n}}\\times \\sqrt{n}}=2^{\\lfloor \\frac{k}{\\sqrt{n}}\\rfloor \\times \\sqrt{n}}\\times 2^{k\\ mod\\sqrt{n}}$\n\n\u56e0\u6b64\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u6b21\u8be2\u95ee\u9884\u5904\u7406\u51fa\u4e24\u4e2a\u6570\u7ec4 $pow1,pow2$\uff0c\u5206\u522b\u50a8\u5b58 $2^1,2^2,2^3,...,2^{\\sqrt{n}}$ \u4e0e $2^{\\sqrt{n}}, 2^{2\\sqrt{n}},...,2^n$\uff0c\u90a3\u4e48\u5728\u679a\u4e3e $k$ \u8ba1\u7b97\u65f6\u53ef\u4ee5\u505a\u5230 $O(1)$ \u5f97\u52302\u7684\u6574\u6570\u6b21\u5e42\u53d6\u6a21\u7ed3\u679c\n\n\u5f53\u7136\uff0c\u6700\u540e\u8fd8\u662f\u8981\u8bb0\u5f97\u4f7f\u7528\u4e00\u4e9b~~\u9632\u6bd2\u7624~~\u5361\u5e38 $trick$:\n1.fread\u8bfb\u5165\uff08\u5176\u5b9e\u5e76\u6ca1\u6709\u4f18\u5316\u592a\u591a\uff09\n2.\u624b\u5199\u53cc\u5411\u94fe\u8868\n3.\u5404\u79cd\u4f4d\u8fd0\u7b97\u4f18\u5316\u83ab\u961f\n...\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN = 4e5 + 5;\n\nclass QuickRead\n{\n\npublic:\n    inline char gc()\n    {\n        static const int IN_LEN = 1 << 18 | 1;\n        static char buf[IN_LEN], *s, *t;\n        return (s == t) && (t = (s = buf) + fread(buf, 1, IN_LEN, stdin)), s == t ? -1 : *s++;\n    }\n\n    template <typename _Tp>\n    inline QuickRead & operator >> (_Tp & num)\n    {\n        static char ch, sgn;\n        ch = gc();\n        while (!isdigit(ch))\n        {\n            if (ch == -1)\n                return *this;\n            sgn |= (ch == '-');\n            ch = gc();\n        }\n        num = 0;\n        while (isdigit(ch))\n        {\n            num = (num << 1) + (num << 3) + (ch ^ 48);\n            ch = gc();\n        }\n        sgn && (num = -num);\n        return *this;\n    }\n} qin;\n\nclass LinkList\n{\n\npublic:\n    struct Node {\n        int pre, nxt;\n    } node[MAXN];\n    int las;\n\n    LinkList() { las = 0; }\n    inline void insert(int x)\n    {\n        node[las].nxt = x;\n        node[x].pre = las;\n        las = x;\n    }\n\n    inline void erase(int x)\n    {\n        if (x ^ las)\n        {\n            node[node[x].pre].nxt = node[x].nxt;\n            node[node[x].nxt].pre = node[x].pre;\n        }\n        else las = node[x].pre;\n        node[x].pre = node[x].nxt = 0;\n    }\n} lis;\n\nstruct Ask {\n    int l, r, pos, num;\n    ll p;\n    bool operator < (const Ask & x) const\n    {\n        if (pos != x.pos)\n            return pos < x.pos;\n        else {\n            if (pos & 1)\n                return r < x.r;\n            else return r > x.r;\n        }\n    }\n} query[MAXN];\n\ninline void inc(ll & x, ll y, ll p) { x = (x + y) % p; }\n\nint n, q, len;\nll data[MAXN], ans[MAXN];\nint a[MAXN], cnt[MAXN];\nll sum[MAXN];\npair<int, int> b[MAXN];\n\ninline void add(int num)\n{\n    sum[cnt[num]] -= data[num];\n    if (!sum[cnt[num]])\n        lis.erase(cnt[num]);\n    cnt[num]++;\n    if (!sum[cnt[num]])\n        lis.insert(cnt[num]);\n    sum[cnt[num]] += data[num];\n}\ninline void erase(int num)\n{\n    sum[cnt[num]] -= data[num];\n    if (!sum[cnt[num]])\n        lis.erase(cnt[num]);\n    cnt[num]--;\n    if (!sum[cnt[num]])\n        lis.insert(cnt[num]);\n    sum[cnt[num]] += data[num];\n}\n\nll pow1[MAXN], pow2[MAXN];\n/*  pow1[i] refers to 2^i,\n    pow2[i] refers to 2^(i*sqrt(x)),\n    so that 2^k = 2^[(k/sqrt(x))*sqrt(x)]*2^(k mod sqrt(x))\n*/\ninline void pre_pow(ll p)\n{\n    pow1[0] = 1;\n    for (int i = 1; i <= len; i++)\n        pow1[i] = 1LL * pow1[i - 1] * 2 % p;\n    pow2[0] = 1;\n    for (int i = 1; i <= len; i++)\n        pow2[i] = 1LL * pow2[i - 1] * pow1[len] % p;\n}\ninline ll get_pow(ll k, ll p) { return 1LL * pow2[k / len] * pow1[k % len] % p; }\n\nint main()\n{\n    qin >> n >> q;\n    len = sqrt(n);\n    for (int i = 1; i <= n; i++)\n    {\n        qin >> b[i].first;\n        b[i].second = i;\n    }\n    sort(b + 1, b + n + 1);\n    for (int i = 1, j = 0; i <= n; i++)\n    {\n        if (b[i].first != b[i - 1].first)\n            j++;\n        a[b[i].second] = j;\n        data[j] = (ll)b[i].first;\n    }\n    for (int i = 1; i <= q; i++)\n    {\n        qin >> query[i].l >> query[i].r >> query[i].p;\n        query[i].pos = query[i].l / len;\n        query[i].num = i;\n    }\n    sort(query + 1, query + q + 1);\n    int l = 1, r = 0;\n    for (int i = 1; i <= q; i++)\n    {\n        pre_pow(query[i].p);\n        while (l < query[i].l)\n            erase(a[l++]);\n        while (l > query[i].l)\n            add(a[--l]);\n        while (r < query[i].r)\n            add(a[++r]);\n        while (r > query[i].r)\n            erase(a[r--]);\n        int siz = query[i].r - query[i].l + 1;\n        ll MOD = query[i].p;\n        for (int j = lis.node[0].nxt; j; j = lis.node[j].nxt)\n            inc(ans[query[i].num], sum[j] * (get_pow(siz, MOD) - get_pow(siz - j, MOD) + MOD) % MOD, MOD);\n    }\n    for (int i = 1; i <= q; i++)\n        printf(\"%lld\\n\", ans[i]);\n    return 0;\n}\n```",
        "postTime": 1606657465,
        "uid": 58826,
        "name": "Conless",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "\n[\u672c\u849f\u84bb\u7684blog](https://www.chnxuzhiyuan.cn/2019/11/12/%E3%80%8CYnoi2015%E3%80%8D%E7%9B%BC%E5%90%9B%E5%8B%BF%E5%BF%98-Solution/)\n\n### \u9898\u89e3\n\n\u9996\u5148\u8fd9\u662f\u4e00\u9053Ynoi\u7684\u9898\uff0c\u5e76\u4e14\u6570\u636e\u8303\u56f4\u975e\u5e38\u53cb\u597d\uff0c\u76f4\u63a5\u4e0a\u83ab\u961f\u3002\n\n\u4f46\u662f\u8fd9\u9898\u7684\u6a21\u6570\u5e76\u4e0d\u56fa\u5b9a\uff0c\u8003\u8651\u5982\u4f55\u5904\u7406\u3002\n\n\u9996\u5148\u8003\u8651\u4e00\u4e2a\u6570$x$\uff0c\u5982\u679c\u4ed6\u5728\u533a\u95f4$[L,R]$\u5185\u51fa\u73b0\u4e86$k$\u6b21\uff0c\u90a3\u4e48\u5c31\u4e00\u5171\u6709$2^{R-L+1}-2^{R-L+1-K}$\u4e2a\u5b50\u5e8f\u5217\u5305\u542b$x$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u7684\u6570\u53ef\u4ee5\u4e00\u8d77\u5904\u7406\u3002\n\n\u800c\u4e14\uff0c\u4e0d\u540c\u7684\u51fa\u73b0\u6b21\u6570\u662f$O(\\sqrt{n})$\u7ea7\u522b\u7684\u3002\u8bbe\u51fa\u73b0\u4e86$k$\u6b21\u7684\u6570\u7684\u548c\u4e3a$sum$\uff0c\u90a3\u4e48\u8fd9\u4e9b\u51fa\u73b0\u6b21\u6570\u4e3a$k$\u7684\u6570\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f$sum\\cdot(2^{R-L+1}-2^{R-L+1-K})$\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u83ab\u961f\u6765\u7ef4\u62a4\u6bcf\u4e00\u79cd\u51fa\u73b0\u6b21\u6570\u7684\u6570\u7684\u548c\uff0c\u5e76\u7528\u4e00\u4e2a\u7c7b\u4f3c\u94fe\u8868\u7684\u4e1c\u897f\u6765\u7ef4\u62a4\u5f53\u524d\u5b58\u5728\u7684\u4e0d\u540c\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u8003\u8651\u5982\u4f55\u5728\u6bcf\u6b21\u7684\u6a21\u6570\u53d8\u5316\u4e4b\u540e\u5feb\u901f\u8ba1\u7b97$2^k \\mod p$\u3002\n\n\u53ef\u4ee5\u7528\u4e00\u4e2a\u7c7b\u4f3c\u4e8eBSGS\u7684\u7b97\u6cd5\uff0c\u5148\u5728$O(\\sqrt n)$\u7684\u590d\u6742\u5ea6\u5185\u9884\u5904\u7406\u51fa$2^1,2^2,\\cdots,2^{\\sqrt n} \\mod p$\u4ee5\u53ca$2^{\\sqrt n},2^{2\\sqrt n},\\cdots 2^{n} \\mod p$\u7684\u503c\uff0c\u7136\u540e\u6bcf\u6b21\u5c31\u53ef\u4ee5$O(1)$\u8ba1\u7b97$2^k \\mod p$\u4e86\u3002\n\n\u6240\u4ee5\u5728\u83ab\u961f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u5148\u9884\u5904\u7406$2$\u7684\u5e42\uff0c\u7136\u540e\u66f4\u65b0\u51fa\u73b0\u6b21\u6570\u7684\u4fe1\u606f\uff0c\u518d\u904d\u5386\u6bcf\u79cd\u51fa\u73b0\u6b21\u6570\u8ba1\u7b97\u8d21\u732e\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\sqrt n)$\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ntypedef long long LL;\nconst int maxn=100005;\nint n,m,a[maxn],Area[maxn],S,ans[maxn],nxt[maxn],pre[maxn],til,cnt[maxn],Pow[400][2];LL sum[maxn];\ninline int read()\n{\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){ret=ret*10+ch-'0';ch=getchar();}\n\treturn ret*f;\n}\ninline int QP(int a,int b,int TT)\n{\n\tint ret=1,w=a;\n\twhile(b)\n\t{\n\t\tif(b&1) ret=(LL)ret*w%TT;\n\t\tw=(LL)w*w%TT;b>>=1;\n\t}\n\treturn ret;\n}\nstruct Query\n{\n\tint L,R,p,id;\n\tbool operator < (const Query& b)const{return Area[L]<Area[b.L]||(Area[L]==Area[b.L]&&((Area[L]&1)?R>b.R:R<b.R));}\n}Q[maxn];\ninline void Ins(int x){nxt[til]=x;pre[x]=til;til=x;}\ninline void Del(int x){x==til?til=pre[x]:nxt[pre[x]]=nxt[x],pre[nxt[x]]=pre[x];nxt[x]=pre[x]=0;}\ninline void upt(int x,int del){sum[cnt[x]]-=x;if(!sum[cnt[x]]) Del(cnt[x]);cnt[x]+=del;if(!sum[cnt[x]]) Ins(cnt[x]);sum[cnt[x]]+=x;}\ninline void init(int TT)\n{\n\tPow[0][0]=Pow[0][1]=1;\n\tint ps=QP(2,320,TT);\n\tfor(int i=1;i<=320;i++)\n\t{\n\t\tPow[i][0]=(LL)Pow[i-1][0]*2%TT;\n\t\tPow[i][1]=(LL)Pow[i-1][1]*ps%TT;\n\t}\n}\ninline int CP(int x,int TT){return (LL)Pow[x%320][0]*Pow[x/320][1]%TT;}\ninline void Solve()\n{\n\tint L=1,R=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tinit(Q[i].p);\n\t\twhile(R<Q[i].R) upt(a[++R],1);\n\t\twhile(L>Q[i].L) upt(a[--L],1);\n\t\twhile(R>Q[i].R) upt(a[R--],-1);\n\t\twhile(L<Q[i].L) upt(a[L++],-1);\n\t\tint po=nxt[0];\n\t\twhile(po)\n\t\t{\n\t\t\tans[Q[i].id]=(ans[Q[i].id]+(LL)sum[po]*(CP(R-L+1,Q[i].p)-CP(R-L+1-po,Q[i].p)+Q[i].p)%Q[i].p)%Q[i].p;\n\t\t\tpo=nxt[po];\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read();m=read();S=sqrt(n)+1e-10;\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tfor(int i=1;i<=n;i++) Area[i]=(i-1)/S+1;\n\tfor(int i=1;i<=m;i++){Q[i].L=read();Q[i].R=read();Q[i].p=read();Q[i].id=i;}\n\tsort(Q+1,Q+1+m);Solve();\n\tfor(int i=1;i<=m;i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1581856306,
        "uid": 42392,
        "name": "\u5f90\u81f4\u8fdc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    },
    {
        "content": "> \u5728\u592a\u9633\u897f\u659c\u7684\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7f6e\u8eab\u5929\u4e0a\u4e4b\u68ee\u3002\u7b49\u8fd9\u573a\u6218\u4e89\u7ed3\u675f\u4e4b\u540e\uff0c\u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4f17\u4eba\uff0c \u4eba\u4eba\u672c\u7740\u6b63\u4e49\u4e4b\u540d\uff0c\u957f\u5b58\u4e0d\u706d\u7684\u8fc7\u53bb\u3001\u9010\u6e10\u6d88\u901d\u7684\u672a\u6765\u3002\u6211\u56de\u6765\u4e86\uff0c\u7eb5\u4f7f\u65e5\u8584\u897f\u5c71\uff0c\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\uff0c\u6b64\u65f6\u6b64\u523b\u7684\u5149\u8f89\uff0c\u76fc\u541b\u52ff\u5fd8\u3002\n\n> \u2014\u2014\u2014\u2014\u4e16\u754c\u4e0a\u6700\u5e78\u798f\u7684\u5973\u5b69\n\n\u73c2\u6735\u8389\uff0c\u52a0\u6cb9\u3002\n\n---\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u53ef\u4ee5\u5f97\u5230\u5f88\u5feb\u901f\u5ea6\u7684\u505a\u6cd5\uff0c\u53c2\u8003\u4e86\u6700\u4f18\u89e3\u3002\n\n\u9996\u5148\u8003\u8651\u5b50\u5e8f\u5217\u80af\u5b9a\u662f\u884c\u4e0d\u901a\u7684\uff0c\u56e0\u4e3a\u5b50\u5e8f\u5217\u592a\u591a\u4e86\uff1b\u6240\u4ee5\u53cd\u5411\u8003\u8651\u6bcf\u4e00\u4e2a\u6570\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570$x$\uff0c\u5982\u679c\u5728\u533a\u95f4$[l,r]$\u5185\u51fa\u73b0\u4e86$y$\u6b21\uff1a\n\n\u56e0\u4e3a\u5176\u4ed6\u7684\u6570\u90fd\u53ef\u9009\u53ef\u4e0d\u9009\uff0c\u800c$x$\u5fc5\u987b\u9009\u81f3\u5c11\u4e00\u4e2a\uff0c\u6240\u4ee5\u8d21\u732e\u4e3a$2^{r-l+1-y}\\cdot(2^y-1)=2^{r-l+1}-2^{r-l+1-y}$\u3002\n\n\u4f46\u662f\u819c\u6570\u4e0d\u4e00\u6837\u600e\u4e48\u7834\uff1f\n\n\u6ce8\u610f\u5230\u8d21\u732e\u5206\u4e3a$2^{r-l+1}$\u548c$-2^{r-l+1-y}$\u3002\n\n\u6b64\u65f6\u7b2c\u4e00\u90e8\u5206\u53ef\u4ee5\u5229\u7528$O(\\sqrt N)$\u9884\u5904\u7406$O(1)$\u67e5\u8be2\u7684\u65b9\u5f0f\u6c42\u5b9a\u5e95\u6570\u6b21\u5e42\u3002\n\n\u53c8\u53ef\u4ee5\u89c2\u5bdf\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u51fa\u73b0\u6b21\u6570\u6700\u591a\u53ea\u6709$O(\\sqrt N)$\u79cd\uff0c\u56e0\u4e3a$\\sum\\limits_{i=1}^{\\sqrt N}i=O(N)$\uff0c\u6240\u4ee5\u95ee\u9898\u8f6c\u5316\u4e3a\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u8fd9\u91cc\u5c31\u662f\u8981\u4f18\u5316\u7684\u90e8\u5206\u4e86\uff1a\u5176\u4ed6\u5927\u4f6c\u90fd\u4f7f\u7528unordered_set\u8f7b\u677e\u5730\u8fc7\u6389\u4e86\uff0c\u800c\u6211\u53ea\u80fd\u5361\u523082\u5206\uff08\u4eba\u50bb\u5e38\u6570\u5927\uff09\u3002\n\n\u56e0\u4e3a\u8fd9\u4e2a\u4e1c\u897f\u662f\u65e0\u5e8f\u7684\uff0c\u4e14\u503c\u57df\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u6743\u503c\u4e0a\u7684\u53cc\u5411\u94fe\u8868\u6765\u7ef4\u62a4\u3002\u8fd9\u6837\u53ef\u4ee5\u5b8c\u5168\u629b\u5f03STL\u62d6\u540e\u817f\u7684\u5de8\u5927\u5e38\u6570\u3002\n\n\u603b\u590d\u6742\u5ea6$O(M \\sqrt{N})$\u3002\n\n\u4f46\u662f\u6211\u7684\u89e3\u6cd5\u7684\u901f\u5ea6\u8f83\u6700\u4f18\u89e3\u4ecd\u662f\u76f8\u5dee\u751a\u8fdc\uff0c\u5f00\u6ee1\u6c27\u6c14\u7684\u60c5\u51b5\u4e0b\u6700\u5927\u70b9\u4e5f\u9700\u89812.88s\u3002~~\u8d77\u7801\u80fd\u8fc7~~\n\n```cpp\n#pragma GCC optimize(\"Ofast\",\"-funroll-loops\",\"-fdelete-null-pointer-checks\")\n#pragma GCC target(\"ssse3\",\"sse3\",\"sse2\",\"sse\",\"avx2\",\"avx\")\n//\u5f00\u6ee1\u6c27\u6c14\uff08\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\n//\u4f7f\u7528fread\u4ee5\u83b7\u5f97\u66f4\u5feb\u7684\u901f\u5ea6\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\nconst int S = 317;\nstruct Query {\n\tint l, r, i;\n\tlong long mod;\n};\nint n, q, a[100005], cnt[100005], ans[100005], pow2[320], p2sqrt[320], esum[100005], plc[100005];\nint prv[100005], nxt[100005], hd;\nQuery qry[100005];\n//\u53cc\u5411\u6743\u503c\u94fe\u8868\ninline void AddX(int x) {\n\tprv[x] = 0;\n\tnxt[x] = hd;\n\tprv[hd] = x;\n\thd = x;\n}\n\ninline void DelX(int x) {\n\tif (x == hd) {\n\t\tprv[nxt[x]] = -1;\n\t\thd = nxt[x];\n\t} else {\n\t\tnxt[prv[x]] = nxt[x];\n\t\tprv[nxt[x]] = prv[x];\n\t}\n}\n\n//\u6700\u5feb\u83ab\u961f\u7684\u6bd4\u8f83\u65b9\u5f0f\ninline bool cmp(Query q1, Query q2) {\n\treturn ((plc[q1.l] ^ plc[q2.l]) ? plc[q1.l] < plc[q2.l] : (plc[q1.l] & 1 ? q1.r < q2.r : q2.r < q1.r));\n}\n\n//\u5feb\u8bfb\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0;\n\twhile (c < '0' || c > '9') c = getchar();\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x;\n}\n\ninline void Read() {\n\tn = qread();\n\tq = qread();\n\tfor (register int i = 1;i <= n;i++) a[i] = qread(), plc[i] = (i - 1) / S + 1;\n\tfor (register int i = 1;i <= q;i++) {\n\t\tqry[qry[i].i = i].l = qread(); qry[i].r = qread(); qry[i].mod = qread();\n\t}\n}\n//\u5411\u83ab\u961f\u4e2d\u6dfb\u52a0\u5143\u7d20\ninline void Add(int pos) {\n\tif (cnt[a[pos]]) {\n\t\tesum[cnt[a[pos]]] -= a[pos];\n\t\tif (!esum[cnt[a[pos]]]) DelX(cnt[a[pos]]);\n\t}\n\tcnt[a[pos]]++;\n\tif (!esum[cnt[a[pos]]]) AddX(cnt[a[pos]]);\n\tesum[cnt[a[pos]]] += a[pos];\n}\n//\u4ece\u83ab\u961f\u4e2d\u5220\u9664\u5143\u7d20\ninline void Del(int pos) {\n\tesum[cnt[a[pos]]] -= a[pos];\n\tif (!esum[cnt[a[pos]]]) DelX(cnt[a[pos]]);\n\tcnt[a[pos]]--;\n\tif (cnt[a[pos]]) {\n\t\tif (!esum[cnt[a[pos]]]) AddX(cnt[a[pos]]);\n\t\tesum[cnt[a[pos]]] += a[pos];\n\t}\n}\n//\u6c42\u5feb\u901f\u5e42\ninline long long Power2(int x, int mod) {\n\treturn 1ll * p2sqrt[x / S] * pow2[x % S] % mod;\n}\n\ninline void Solve() {\n\thd = 0;\n\tsort(qry + 1, qry + q + 1, cmp);\n\tregister int l = qry[1].l, r = l - 1;\n\tfor (register int i = 1;i <= q;i++) {\n    \t\t//\u9884\u5904\u7406\u5feb\u901f\u5e42\n\t\tpow2[0] = 1;\n\t\tfor (register int j = 1;j <= S;j++) pow2[j] = (1ll * pow2[j - 1] << 1) % qry[i].mod;\n\t\tp2sqrt[0] = 1;\n\t\tfor (register int j = 1;j <= S;j++) p2sqrt[j] = 1ll * p2sqrt[j - 1] * pow2[S] % qry[i].mod;\n        \t//\u4fee\u6539\u83ab\u961f\n\t\twhile (r < qry[i].r) {\n\t\t\tAdd(++r);\n\t\t}\n\t\twhile (r > qry[i].r) {\n\t\t\tDel(r--);\n\t\t}\n\t\twhile (l < qry[i].l) {\n\t\t\tDel(l++);\n\t\t}\n\t\twhile (l > qry[i].l) {\n\t\t\tAdd(--l);\n\t\t}\n        \t//\u6c42\u7b54\u6848\n\t\tfor (register int j = hd;j;j = nxt[j]) {\n\t\t\tans[qry[i].i] = (ans[qry[i].i] + esum[j] * ((Power2(r - l + 1, qry[i].mod) \n\t\t\t\t- Power2(r - l + 1 - j, qry[i].mod)) % qry[i].mod + qry[i].mod) % qry[i].mod) % qry[i].mod;\n\t\t}\n\t}\n\tfor (register int i = 1;i <= q;i++) printf(\"%d\\n\", ans[i]);\n}\n\nint main() {\n\tRead();\n\tSolve();\n\treturn 0;\n}\n```",
        "postTime": 1581229741,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5072 \u3010[Ynoi2015]\u76fc\u541b\u52ff\u5fd8\u3011"
    }
]