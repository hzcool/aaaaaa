[
    {
        "content": "UPD\uff1a\u4fee\u590d\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u9519\u8bef\u3002\n\n\u63d0\u4f9b\u4e24\u79cd\u6781\u5176\u597d\u5199\u7684\u505a\u6cd5\uff0c\u4ee3\u7801\u957f\u5ea6\u5747 <1k\u3002  \n\u8fd9\u9898\u4e3b\u8981\u96be\u70b9\u5728\u4e8e\u5224\u65ad\u4e00\u4e2a\u5730\u5740\u662f\u5426\u5408\u6cd5\uff0c\u5269\u4e0b\u90e8\u5206\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 `std::map/unordered_map` \u6765\u89e3\u51b3\uff0c\u56e0\u6b64\u4e3b\u8981\u5224\u65ad\u5730\u5740\u662f\u5426\u5408\u6cd5\u3002\n\n\u65b9\u6cd5\u4e00\uff1a  \n\u6ce8\u610f\u5230\u5b57\u7b26\u4e32\u957f\u5ea6 $\\le25$\uff0c\u56e0\u6b64\u4e00\u4e2a\u6570\u5b57\u6700\u957f\u4e3a 17 \u4f4d\uff0c\u53ef\u4ee5\u4f7f\u7528 `long long` \u5b58\u50a8\u3002  \n`std::sscanf(s, \"%lld.%lld.%lld.%lld:%lld\", &a, &b, &c, &d, &port)` \u8868\u793a\u4ece `s` \u4e2d\u8bfb\u5165 `a`\uff0c\u5ffd\u7565\u4e0b\u4e00\u4e2a `.`\uff0c\u8bfb\u5165 `b`\uff0c\u5ffd\u7565\u4e0b\u4e00\u4e2a `.`\u3002\u4ee5\u6b64\u7c7b\u63a8\u3002\u5176\u8fd4\u56de\u503c\u662f\u6210\u529f\u8bfb\u53d6\u7684\u5143\u7d20\u4e2a\u6570\u3002\u56e0\u6b64\u5982\u679c\u8fd4\u56de\u503c\u4e0d\u662f $5$ \u4e00\u5b9a\u4e0d\u5408\u6cd5\u3002\u5982\u679c\u51e0\u4e2a\u503c\u4e0d\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u4e5f\u4e0d\u5408\u6cd5\u3002  \n\u7136\u540e\u8003\u8651\u5904\u7406\u524d\u5bfc 0 \u548c\u540e\u9762\u662f\u5426\u591a\u51fa\u6765\u4e00\u4e9b\u5185\u5bb9\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53cd\u8fc7\u6765\uff0c\u7528\u5f97\u5230\u7684\u7684\u6570\u62fc\u51fa\u5408\u6cd5\u7684\u5730\u5740\uff0c\u7136\u540e\u548c\u539f\u4e32\u6bd4\u8f83\u4e00\u4e0b\u662f\u5426\u5b8c\u5168\u76f8\u540c\u3002\u5982\u679c\u6ca1\u6709\u524d\u5bfc 0 \u4e14\u540e\u9762\u6ca1\u6709\u591a\u4f59\u5185\u5bb9\uff0c\u4e24\u8005\u5e94\u8be5\u5b8c\u5168\u76f8\u540c\u3002\u62fc\u51fa\u5730\u5740\u53ef\u4ee5\u4f7f\u7528 `std::stringstream` \u6216\u8005 `std::to_string` \u6765\u5904\u7406\u3002\u4ee3\u7801\u4f7f\u7528\u4e86 `std::stringstream`\u3002  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nbool Check(string s) {\n  long long a, b, c, d, port;\n  if (sscanf(s.c_str(), \"%lld.%lld.%lld.%lld:%lld\", &a, &b, &c, &d, &port) != 5)  return false;\n  if (a < 0 || a > 255 || b < 0 || b > 255 || c < 0 || c > 255 || d < 0 || d > 255 || port < 0 || port > 65535)  return false;\n  stringstream ss;\n  ss << a << '.' << b << '.' << c << '.' << d << ':' << port;\n  return ss.str() == s;\n}\nmap<string, int> mp;\nstring op, ad;\nint main(int argc, char const *argv[]) {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> op >> ad;\n    if (!Check(ad)) { cout << \"ERR\\n\"; continue; }\n    if (op[0] == 'S') {\n      if (mp[ad]) cout << \"FAIL\\n\";\n      else mp[ad] = i, cout << \"OK\\n\";\n    } else {\n      if (!mp.count(ad)) cout << \"FAIL\\n\";\n      else cout << mp[ad] << '\\n';\n    }\n  }\n  return 0;\n}\n```\n\u65b9\u6cd5\u4e8c\uff1a  \n\u4eca\u5e74\u4f7f\u7528 C++14 \u6807\u51c6\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528 C++11 \u7684 `regex` \u5e93\u3002\u76f4\u63a5\u5199\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u5224\u65ad\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u53c2\u8003\u6d1b\u8c37\u65e5\u62a5\u6216\u8005\u767e\u5ea6\u3002\u6b63\u5219\u5e93\u7684\u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003 [C++ Reference](https://zh.cppreference.com/w/cpp/regex)\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nregex r(\"(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4]\\\\d|25[0-5])\\\\.(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4]\\\\d|25[0-5])\\\\.(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4]\\\\d|25[0-5])\\\\.(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4]\\\\d|25[0-5]):(\\\\d|[1-9]\\\\d{1,3}|[1-5]\\\\d{4}|6[0-4]\\\\d{3}|65[0-4]\\\\d{2}|655[0-2]\\\\d|6553[0-5])\");\nmap<string, int> m;\nstring o, a;\nint main(int argc, char const *argv[]) {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> o >> a;\n    if (!regex_match(a, r)) { cout << \"ERR\\n\"; continue; }\n    if (o[0] == 'S') {\n      if (m[a]) cout << \"FAIL\\n\";\n      else m[a] = i, cout << \"OK\\n\";\n    } else {\n      if (!m.count(a)) cout << \"FAIL\\n\";\n      else cout << m[a] << '\\n';\n    }\n  }\n  return 0;\n}\n```",
        "postTime": 1635852747,
        "uid": 68273,
        "name": "xyf007",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7911 \u3010[CSP-J 2021] \u7f51\u7edc\u8fde\u63a5\u3011"
    },
    {
        "content": "## \u5206\u6790\n\u4e3b\u8981\u95ee\u9898\u4e3a\uff1a\u5224\u65ad\u8fd9\u4e2a\u5730\u5740\u662f\u5426\u5408\u6cd5\u3002\n\n\u53ef\u4ee5\u7528 `sscanf` \u5c1d\u8bd5\u8bfb\u5165\u5f62\u5982 `a.b.c.d:e` \u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u8bfb\u53d6\u7ed3\u679c\u3002\n\n\u5982\u679c\u8bfb\u5230\u7684\u6570\u4e0d\u662f $5$ \u4e2a\uff0c\u80af\u5b9a\u4e0d\u5408\u6cd5\u3002\n\n\u7136\u540e\u518d\u5224\u65ad $a,b,c,d,e$ \u7684\u8303\u56f4\u662f\u5426\u5408\u6cd5\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u518d\u7528 `a.b.c.d:e` \u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4fdd\u5b58\uff0c\u5224\u65ad\u662f\u5426\u8ddf\u539f\u6765\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c\u5373\u53ef\u3002\n\n## \u4f8b\u5b50\n\n\n\u8f93\u5165\u4e00\u4e2a `1.2.3.4:5` \uff0c\u8bfb\u53d6\u7ed3\u679c\u4e3a$a=1$\uff0c$b=2$\uff0c$c=3$\uff0c$d=4$\uff0c$e=5$\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u518d\u6309\u7167 `a.b.c.d:e` \u8fd9\u4e2a\u65b9\u5f0f\u53bb\u4fdd\u5b58\uff0c\u5f97\u5230 `1.2.3.4:5`\uff0c\u8ddf\u539f\u6765\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u5219\u5408\u6cd5\u3002\n\n## \u7279\u6b8a\u60c5\u51b5\n\n\u4f60\u4e5f\u8bb8\u4f1a\u95ee\uff0c\u600e\u4e48\u5224\u65ad\u524d\u5bfc $0$ \u5462\uff1f\n\n\u5176\u5b9e\uff0c\u6211\u4eec\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\n**\u6bd4\u5982\uff1a** \u8f93\u5165\u4e00\u4e2a `01.2.3.4:5` \uff0c\u8bfb\u53d6\u7ed3\u679c\u4e3a $a=1$\uff0c$b=2$\uff0c$c=3$\uff0c$d=4$\uff0c$e=5$\u3002\n\n\u73b0\u5728\u518d\u6309\u7167 `a.b.c.d:e` \u8fd9\u4e2a\u65b9\u5f0f\u53bb\u4fdd\u5b58\uff0c\u5f97\u5230 `1.2.3.4:5` \uff0c\u4f60\u4f1a\u53d1\u73b0\u8ddf\u539f\u6765\u7684\u5b57\u7b26\u4e0d\u5339\u914d\uff0c\u56e0\u4e3a $a$ \u539f\u6765\u662f $01$ \u7684\uff0c\u73b0\u5728\u53d8\u6210\u4e86 $1$ \u3002\n\n\u8fd9\u6837\uff0c\u5c31\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e86\u524d\u5bfc $0$ \u7684\u60c5\u51b5\uff01\n## \u5176\u4ed6\n\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u5408\u6cd5\u5df2\u7ecf\u89e3\u51b3\uff0c\u90a3\u4e48\u600e\u4e48\u52a0\u5165\u5e76\u67e5\u627e\u4e00\u4e2a\u5730\u5740\u5462\uff1f\n\n\u53ef\u4ee5\u7528\u4e00\u4e2a `map` \u89e3\u51b3\uff0c\u5b9a\u4e49\u4e00\u4e2a `map<string,int> vis`\uff0c`string` \u5b58\u5730\u5740\uff0c`int` \u5b58\u4e0b\u6807\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nmap<string,int> vis;\nint n;\nbool check(char s[]){\n\tint a=-1,b=-1,c=-1,d=-1,e=-1;\n\tint t=sscanf(s,\"%d.%d.%d.%d:%d\",&a,&b,&c,&d,&e);//\u5c1d\u8bd5\u8bfb\u5165\uff0c\u4fdd\u5b58\u81f3s\u4e2d\n\tif(t!=5) return 0;//\u6ca1\u67095\u4e2a\u80af\u5b9a\u4e0d\u884c\n\tif(a<0||a>255) return 0;\n\tif(b<0||b>255) return 0;\n\tif(c<0||c>255) return 0;\n\tif(d<0||d>255) return 0;\n\tif(e<0||e>65535) return 0;//\u5224\u65ad\n\tchar s2[35];\n\tsprintf(s2,\"%d.%d.%d.%d:%d\",a,b,c,d,e);//\u4fdd\u5b58\u81f3s2\u4e2d\n\tint lens=strlen(s);//\u63a5\u4e0b\u6765\u5224\u65ads2\u548cs\u662f\u5426\u4e00\u6837\n\tbool ok=0;\n\tfor(int i=0;i<lens;i++){\n\t\tif(s[i]==s2[i]) ok=1;\n\t\telse{\n\t\t\tok=0;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ok;\n}\nint main(){\n//\tfreopen(\"network.in\",\"r\",stdin);\n//\tfreopen(\"network.out\",\"w\",stdout); \n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tchar op[1005],ad[1005];\n\t\tcin>>op>>ad;\n\t\tstring t(ad);\n\t\tif(op[0]=='S'){//\u670d\u52a1\u673a\n\t\t\tif(!check(ad)) cout<<\"ERR\"<<endl;//\u5224\u65ad\u662f\u5426\u5408\u6cd5\n\t\t\telse if(vis.count(t)!=0){//\u4e4b\u524d\u6709\u4e86\uff0c\u8f93\u51faFAIL\n\t\t\t\tcout<<\"FAIL\"<<endl;\n\t\t\t} \n\t\t\telse{\n\t\t\t\tcout<<\"OK\"<<endl;\n\t\t\t\tvis[t]=i;//\u4fdd\u5b58\u7f16\u53f7\n\t\t\t}\n\t\t}\n\t\telse{//\u5ba2\u6237\u673a\n\t\t\tif(!check(ad)){//\u5224\u65ad\u662f\u5426\u5408\u6cd5\n\t\t\t\tcout<<\"ERR\"<<endl; \n\t\t\t}\n\t\t\telse if(vis.count(t)==0){//\u5982\u679c\u4e4b\u524d\u8fd8\u6ca1\u6709\u76f8\u540c\u5730\u5740\u4e32\u7684\u670d\u52a1\u673a\uff0c\u8f93\u51faFAIL\n\t\t\t\tcout<<\"FAIL\"<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout<<vis[ad]<<endl;//\u5426\u5219\u5c31\u662f\u53ef\u4ee5\u8fde\u63a5\uff0c\u8f93\u51fa\u8fde\u63a5\u7f16\u53f7\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1635745121,
        "uid": 411727,
        "name": "stOtue",
        "ccfLevel": 0,
        "title": "P7911 [CSP-J 2021] \u7f51\u7edc\u8fde\u63a5"
    },
    {
        "content": "### \u672c\u9898\u603b\u7ed3\n\n\u8fd9\u4e2a\u9898\u76ee\u6211\u8003\u573a\u4e0a\u662f `wrong` `answer` `65` \u3002 \u9519\u56e0\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u5728\u5224\u65ad `err` \u7684\u65f6\u5019\u5224\u65ad\u9519\u4e86\u51e0\u4e2a\u5730\u65b9:\n\n1.\u524d\u5bfc\u96f6\u3002\n\n2. `.` \u548c `:` \u7684\u987a\u5e8f\u6211\u6ca1\u6709\u5224\u65ad\u3002\n\n3.\u4ed6\u6ca1\u6709\u8f93\u5165\u4efb\u4f55\u6570\u5b57\u7684\u65f6\u5019\uff0c\u6211\u4f1a\u9ed8\u8ba4\u8fd9\u4e9b\u6570\u5b57\u4e3a `0` \u3002\n\n\u6240\u4ee5\u8fd9\u4e2a\u9898\u76ee\u4e00\u5b9a\u8981\u7279\u522b\u6ce8\u610f `err` \u7684\u6761\u4ef6\uff0c\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u4f1a\u628a `err` \u7ed9\u5224\u9519\u3002\u6700\u597d\u8003\u8bd5\u7684\u65f6\u5019\u81ea\u5df1\u5199\u51e0\u4e2a\u6bd2\u7624\u6570\u636e\u6d4b\u8bd5\u4e00\u4e0b\u3002\n\n#### \u672c\u9898\u6b63\u89e3\n\n\u8fd9\u4e2a\u9898\u76ee\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u5224\u65ad `err` \u7684\u8bdd\u5c31\u5168\u51ed\u5927\u5bb6\u7684\u7ec6\u5fc3\uff0c\u8fd9\u91cc\u4e0d\u505a\u8fc7\u591a\u7684\u9610\u8ff0\uff0c\u4e0b\u9762\u7ed9\u5927\u5bb6\u8bf4 `3` \u4e2a\u5ba2\u6237\u673a\u5339\u914d\u670d\u52a1\u673a\u548c\u5224\u65ad\u670d\u52a1\u673a\u662f\u5426\u91cd\u590d\u7684\u65b9\u6cd5\u3002\n\n1.\u76f4\u63a5\u66b4\u529b\uff0c\u5224\u65ad\u4ed6\u4ee5\u524d\u7684\u90a3\u4e9b\u6709\u6ca1\u6709\u548c\u4e00\u6a21\u4e00\u6837\u7684\u5b57\u7b26\u4e32\u3002\n\n2.\u8fd0\u7528 `map` \uff0c\u952e\u7c7b\u578b\u4e3a `string` \u5c31\u53ef\u4ee5\u505a\u4e86\u3002\u5047\u8bbe\u5f53\u524d\u8981\u5224\u65ad\u662f\u5426\u91cd\u590d\u7684\u670d\u52a1\u673a\u7684\u5b57\u7b26\u4e32\u4e3a `s` \u3002\u5982\u679c $map[s]$ \u6709\u503c\uff0c\u5c31\u8bf4\u660e\u4ee5\u524d\u6709\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u8bf4\u660e\u4ee5\u524d\u6ca1\u6709\u8fd9\u4e2a\u5b57\u7b26\u4e32\u3002\u5ba2\u6237\u673a\u5339\u914d\u670d\u52a1\u673a\u65f6\u4e5f\u540c\u6837\u3002\n\n3.\u8fd0\u7528\u5b57\u7b26\u4e32 `hash` \u3002\u5176\u5b9e\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u662f\u5c06\u65b9\u6cd5 `1` \u7ed9\u4f18\u5316\u4e86\u4e00\u4e0b\uff0c\u56e0\u4e3a\u6211\u4eec\u5224\u65ad\u4e24\u4e2a\u5b57\u7b26\u4e32\u5b8c\u5168\u76f8\u7b49\u65f6\uff0c\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u679a\u4e3e\u8fd9\u4e2a\u5b57\u7b26\u4e32\u91cc\u9762\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5f88\u6d6a\u8d39\u65f6\u95f4\uff0c\u867d\u7136\u53ef\u4ee5\u8fc7\uff0c\u4f46\u662f\u6709\u4e00\u4e9b\u6d6a\u8d39\u3002 \u7531\u4e8e\u5224\u65ad `2` \u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 `hash` \u6765\u5224\u65ad\u3002 \u6240\u4ee5\u6211\u4eec\u6bcf\u6709\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u5c31\u628a\u4ed6\u7684 `hash` \u503c\u7ed9\u5b58\u4e0b\u6765\uff0c\u7136\u540e\u5728\u5339\u914d\u6216\u8005\u5224\u65ad\u662f\u5426\u91cd\u590d\u65f6\uff0c\u76f4\u63a5\u5224\u65ad\u4e24\u4e2a `hash` \u503c\u662f\u5426\u76f8\u7b49\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u5728\u8fd9\u91cc\u5c31\u76f4\u63a5\u7ed9\u51fa\u7b2c\u4e00\u79cd\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u7684\u4ee3\u7801\u3002\n\n#### AC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nint tot;\nstring q[10005];\nint ans[10005];\nbool check(string s,int len)\n{\n\tbool flg=0;\n\tint bj1=0,bj2=0;\n\tint cnt=0;\n\tlong long p[105],q[105];//\u6709\u53ef\u80fd\u4e94\u4e2a\u6570\u4e2d\u6709\u7684\u4f1a\u7206int\n\tmemset(p,0,sizeof(p));\n\tfor(int i=0;i<=100;++i)\n\tq[0]=-1;\n\tfor(int i=0;i<len;++i)\n\t{\n\t\tif(bj2==1&&bj1<3)//\u5df2\u7ecf\u51fa\u73b0:\u4f46.\u8fd8\u6ca1\u6709\u51fa\u73b0 \n\t\treturn 0;\n\t\tif(cnt+1<=bj1+bj2)//\u7b26\u53f7\u4e2a\u6570\u548c\u6570\u5b57\u4e2a\u6570\u4e0d\u5339\u914d \n\t\treturn 0;\n\t\tif(s[i]=='0')//\u7279\u5224\u4e00\u4e0b0 \n\t\t{\n\t\t\tif(flg==0)\n\t\t\tcnt++;\n\t\t\tq[cnt]=0;\n\t\t\tif(i>=0)//\u5224\u65ad\u524d\u5bfc0 \n\t\t\t{\n\t\t\t\tif(flg==0&&((s[i-1]<='9'&&s[i-1]>='0')||(s[i+1]<='9'&&s[i+1]>='0')))\n\t\t\t\t{\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(flg==0&&(s[i+1]<='9'&&s[i+1]>='0'))\n\t\t\t\t{\n\t\t\t\t\treturn 0;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\tflg=1;\n\t\t\tp[cnt]*=10;\n\t\t}\n\t\telse if(s[i]=='-')//\u5982\u679c\u6709\u8d1f\u6570 \n\t\treturn 0;\n\t\telse if(s[i]=='.')//\u7279\u5224. \n\t\t{\n\t\t\tbj1++;\n\t\t\tflg=0;\n\t\t}\n\t\telse if(s[i]==':')//\u7279\u5224: \n\t\t{\n\t\t\tbj2++;\n\t\t\tflg=0;\n\t\t}\n\t\telse if(s[i]>='1'&&s[i]<='9')//\u5982\u679c\u662f\u6570\u5b57 \n\t\t{\n\t\t\tif(flg==0)\n\t\t\tcnt++;\n\t\t\tq[cnt]=0;\n\t\t\tp[cnt]=p[cnt]*10+s[i]-'0'; \n\t\t\tflg=1;\n\t\t}\n\t\telse if(s[i]==' ')//\u7279\u5224\u4e00\u4e0b\u7a7a\u683c(\u6ca1\u5fc5\u8981) \n\t\tcontinue;\n\t\telse//\u5982\u679c\u6709\u5176\u4ed6\u5947\u5947\u602a\u602a\u7684\u7b26\u53f7 \n\t\treturn 0;\n\t}\n\tif(p[1]<=255&&p[2]<=255&&p[3]<=255&&p[4]<=255&&p[5]<=65535&&cnt==5&&bj1==3&&bj2==1&&q[1]>=0&&q[2]>=0&&q[3]>=0&&q[4]>=0&&q[5]>=0)//\u5947\u5947\u602a\u602a\u7684\u5224\u65ad \n\treturn 1;\n\telse\n\treturn 0;\n}\nint main()\n{\n// \tfreopen(\"network12.in\",\"r\",stdin);\n// \tfreopen(\"network.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i) \n\t{\n\t\tstring op,s;\n\t\tcin>>op>>s;\n\t\tif(!check(s,s.length()))\n\t\t{\n\t\t\tprintf(\"ERR\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tbool flg=0;\n\t\tif(op==\"Server\")\n\t\t{\n\t\t\t//\u66b4\u529b\u5224\u65ad\u4ee5\u524d\u662f\u5426\u51fa\u73b0\u8fc7 \n\t\t\tfor(int j=1;j<=tot;++j)\n\t\t\t{\n\t\t\t\tif(s==q[j])\n\t\t\t\t{\n\t\t\t\t\tflg=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flg==0)\n\t\t\t{\n\t\t\t\tprintf(\"OK\\n\");\n\t\t\t\tq[++tot]=s;\n\t\t\t\tans[tot]=i;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"FAIL\\n\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//\u66b4\u529b\u5224\u65ad\u6709\u6ca1\u6709\u4e0e\u4e4b\u5339\u914d\u7684 \n\t\t\tfor(int j=1;j<=tot;++j)\n\t\t\t{\n\t\t\t\tif(q[j]==s)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d\\n\",ans[j]);\n\t\t\t\t\tflg=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flg==0)\n\t\t\t{\n\t\t\t\tprintf(\"FAIL\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0; \n}\n```",
        "postTime": 1635830555,
        "uid": 428690,
        "name": "Zhy_never_giveup_jtl",
        "ccfLevel": 0,
        "title": "P7911 \u7f51\u7edc\u8fde\u63a5 \u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u9700\u8981\u7531\u5730\u5740\u4e32\u6620\u5c04\u5230\u8ba1\u7b97\u673a\u7f16\u53f7\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 \n```map```\u3002\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528\u7528\u6cd5\u57fa\u672c\u76f8\u4f3c\u4f46\u67e5\u8be2\u3001\u4fee\u6539\u590d\u6742\u5ea6\u5747\u4e3a $O(1)$ \u7684 ```unordered_map```\uff08\u9700\u8981\u7528\u5230 C++11\uff0c\u82e5\u5728\u672c\u5730\u65e0\u6cd5\u7f16\u8bd1\u5219\u8981\u52a0\u4e0a\u7f16\u8bd1\u9009\u9879\uff09\u3002  \n### \u601d\u8def\n+ \u5148\u5224\u65ad**\u6bcf\u53f0\u8ba1\u7b97\u673a**\u63d0\u4f9b\u7684\u5730\u5740\u4e32\u662f\u5426\u7b26\u5408\u89c4\u8303\uff0c\u82e5\u4e0d\u7b26\u5408\uff0c\u76f4\u63a5\u8f93\u51fa ```ERR```\uff1b\n+ \u5bf9\u4e8e**\u6bcf\u53f0\u670d\u52a1\u5668**\uff08```Server```\uff09\u63d0\u4f9b\u7684\u5730\u5740\u4e32\uff0c\u5148\u5728 ```unordered_map``` \u4e2d\u5bfb\u627e\u8be5\u5730\u5740\u4e32\u662f\u5426\u5df2\u7ecf\u5efa\u7acb\u6620\u5c04\uff08\u5373\u662f\u5426\u5df2\u7ecf\u6709\u670d\u52a1\u5668\u63d0\u4f9b\u76f8\u540c\u5730\u5740\u4e32\u4ee5\u5efa\u7acb\u8fde\u63a5\uff09\uff0c\u82e5\u5df2\u6709\u5219\u8f93\u51fa ```FAIL```\uff0c\u5426\u5219\u5efa\u7acb\u6620\u5c04\u5e76\u8f93\u51fa ```OK```\uff1b\n+ \u5bf9\u4e8e**\u6bcf\u53f0\u5ba2\u6237\u673a** \uff08```Client```\uff09\u63d0\u4f9b\u7684\u5730\u5740\u4e32\uff0c\u5148\u5728```unordered_map``` \u4e2d\u5bfb\u627e\u8be5\u5730\u5740\u4e32\u662f\u5426\u5df2\u7ecf\u5efa\u7acb\u6620\u5c04\uff08\u5373\u662f\u5426\u5df2\u7ecf\u6709\u670d\u52a1\u5668\u63d0\u4f9b\u8be5\u5730\u5740\u4e32\u4ee5\u5efa\u7acb\u8fde\u63a5\uff09\uff0c\u82e5\u5df2\u6709\u5219\u8be5\u5ba2\u6237\u673a\u53ef\u4ee5\u52a0\u5165\u8fde\u63a5\uff0c\u6b64\u65f6\u8f93\u51fa\u5efa\u7acb\u8fde\u63a5\u7684\u670d\u52a1\u5668\u7684\u7f16\u53f7\uff0c\u5426\u5219\u8be5\u5ba2\u6237\u673a\u4e0d\u80fd\u52a0\u5165\u8fde\u63a5\uff0c\u8f93\u51fa ```FAIL```\u3002\n\n\n\u8fd9\u91cc\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b ```unordered_map``` \u3002  \n```unordered_map``` \u672c\u8d28\u4e0a\u5c31\u50cf\u4e00\u4e2a\u6570\u7ec4\uff0c  \n\u53ea\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u952e\u548c\u503c ~~\uff08\u5176\u5b9e\u5c31\u662f\u4e0b\u6807\u4e0e\u5b83\u6240\u5bf9\u5e94\u7684\u5143\u7d20\uff09~~ \u7c7b\u578b\u3002\n```cpp\nunordered_map<string,int> mp;  \n```\n\u8fd9\u6837\u4f60\u5c31\u6709\u4e86\u4e00\u4e2a\u53ef\u4ee5\u7528 string \u7c7b\u578b\u6620\u5c04\u5230 int \u7c7b\u578b\u7684 ```unordered_map``` \u6570\u7ec4 $mp$ \u3002\n```cpp\nmp[\"hello\"] = 532;\n```\n\u8fd9\u610f\u5473\u7740\u5728 $mp$ \u6570\u7ec4\u91cc\uff0c\n$\\mathtt{\"hello\"}$ \u5bf9\u5e94\u7740 $\\mathtt{532}$\n\u3002\n```cpp\nmp.count(\"hello\");\nmp.count(\"world\");\n```\n\u5224\u65ad\u8be5\u5143\u7d20\u4e4b\u524d\u662f\u5426\u5b58\u5728\u6620\u5c04\u3002\n\u8fd4\u56de\u503c\u5206\u522b\u4e3a $\\mathtt{1}$ \u548c $\\mathtt{0}$\u3002   \n```map``` \u7684\u7528\u6cd5\u5219\u4e0e\u5176\u76f8\u4f3c\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u5224\u65ad\u5730\u5740\u4e32\u662f\u5426\u5b58\u5728\u7684\u90e8\u5206\u53ef\u4ee5\u7528 ```unordered_map``` \u89e3\u51b3\uff0c\u90a3\u4e48\u6574\u9053\u9898\u7684\u91cd\u70b9\u5219\u843d\u5728\u4e86\u5982\u4f55\u5224\u65ad\u5730\u5740\u4e32\u662f\u5426\u89c4\u8303\u4e0a\u3002  \n\n\u6211\u4eec\u5148\u5217\u51fa\u5730\u5740\u4e32\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u6240\u6709\u53ef\u80fd\u5f62\u5f0f\u3002\uff08\u4ee5\u4e0b\u5185\u5bb9\u53c2\u8003[\u5e16\u5b50\uff1a\u5386\u53f2\u6700\u5168\u7ea0\u9519](https://www.luogu.com.cn/discuss/375820)\uff09  \n1. \u5f62\u5982 ```a.b.c.d:e```\uff0c\u5176\u4e2d\u6574\u6570 $a,b,c,d,e$ \u6709\u4e00\u4e2a\u6570\u8d85\u8fc7\u9898\u76ee\u7ed9\u5b9a\u7684\u8303\u56f4\uff08\u5373 $0 \\le a,b,c,d \\le 255$ , $0 \\le e \\le 65535$\uff09\uff0c\u6216\u6709\u4e00\u4e2a\u6570\u542b\u6709\u524d\u5bfc 0\u3002   \n\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5982\u4e0b\u7684\u65b9\u6cd5\u4f9d\u6b21\u63d0\u53d6 $a,b,c,d,e$\uff0c\u5e76\u5224\u65ad\u5176\u662f\u5426\u5728\u89c4\u5b9a\u8303\u56f4\u5185\u3002\n```cpp\nbool check(string s)\n{\n    int len = s.length();\n    long long tmp = 0;\n    for(int i=0;i<len;i++)\n    {\n        if(s[i]=='.'||s[i]==':')\n        {\n            if(0<=tmp&&tmp<=255)    //\u5224\u65ada,b,c,d\u662f\u5426\u7b26\u5408\u89c4\u8303\n            {\n                tmp = 0;      //\u6e05\u96f6\n                continue;\n            }\n            else return false;\n        }\n        else if(s[i]<'0'||s[i]>'9') return false;\n        if(i&&!tmp&&s[i-1]=='0') return false;   //\u8fd9\u4e00\u884c\u7528\u6765\u5224\u65ad\u524d\u5bfc0\n        tmp = tmp*10+s[i]-'0';   //\u8bfb\u53d6\u6570\u5b57\n    }\n    if(0<=tmp&&tmp<=65535) return true;    //\u5224\u65ade\u662f\u5426\u7b26\u5408\u89c4\u8303\n    else return false;\n}\n```\n\n\n2. \u5f62\u5982 ```a.b.c:d.e```\uff0c\u5176\u4e2d\u5b57\u7b26 ```.```\u6216 ```:```\u51fa\u73b0\u7684\u987a\u5e8f\u4e0d\u89c4\u8303\u3002  \n\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8ba1\u6570\u5668\u5206\u522b\u8bb0\u5f55 ```.``` \u548c ```:``` \u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5224\u65ad ```:``` \u51fa\u73b0\u65f6\uff0c```.```\u51fa\u73b0\u7684\u6b21\u6570\u662f\u5426\u4e3a 3\u3002\n```cpp\nint cnt1=0,cnt2=0,cnt3=0;\nfor(int i=0;i<len;i++)\n{\n    if(s[i]=='.'||s[i]==':')\n    {\n        if(s[i]=='.') cnt1++;\n        else if(s[i]==':') cnt2++;\n        if(cnt1<3&&cnt2) return false;   //\u51fa\u73b0\u987a\u5e8f\u662f\u5426\u89c4\u8303\n        /*\n            \u5224\u65ada,b,c,d\u7684\u8303\u56f4\u662f\u5426\u89c4\u8303\n        */\n    }\n    else if(s[i]<'0'||s[i]>'9') return false;\n    /*\n        \u5224\u65ad\u524d\u5bfc0 \u4ee5\u53ca\u63d0\u53d6\u6570\u5b57\n    */\n}\n```\n3. \u5f62\u5982 ```a..b.c:e``` \u6216 ```a.b.c:.e```\uff0c\u5176\u4e2d\u5b57\u7b26 ```.``` \u6216 ```:``` \u8fde\u7740\u51fa\u73b0\u3002   \n\u8fd9\u65f6\u5019\u7b26\u53f7\u7684\u6570\u91cf\u7b26\u5408\u89c4\u8303\uff0c\u4f46\u6570\u5b57\u7684\u6570\u91cf\u4e0d\u7b26\u5408\u89c4\u8303\u3002\u53ef\u4ee5\u4eff\u7167\u60c5\u51b52\uff0c\u7528\u8ba1\u6570\u5668\u8bb0\u5f55\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e76\u5728\u6700\u540e\u5224\u65ad\u5b57\u7b26\u548c\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\u662f\u5426\u7b26\u5408\u89c4\u8303\u3002\n\n4. \u5f62\u5982 ```.a.b.c:e``` \u6216 ```a.b.c.d:```\uff0c\u5176\u4e2d\u5b57\u7b26 ```.``` \u6216 ```:``` \u51fa\u73b0\u5728\u5730\u5740\u4e32\u5934\u5c3e\u3002\n\u9488\u5bf9\u5b57\u7b26\u51fa\u73b0\u5728\u5934\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5b57\u7b26\u51fa\u73b0\u65f6\u5224\u65ad\u662f\u5426\u5df2\u6709\u6570\u5b57\u51fa\u73b0\uff1b\u9488\u5bf9\u5b57\u7b26\u51fa\u73b0\u5728\u5c3e\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u7528\u60c5\u51b53\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u3002  \n\n\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u9700\u8981\u52a0\u4e0a\u6570\u5b57\u7684\u8ba1\u6570\u5668\u3002\n```cpp\nint len = s.length();\nlong long tmp = 0;\nint cnt1=0,cnt2=0,cnt3=0;\nfor(int i=0;i<len;i++)\n{\n    if((i==0||(s[i-1]=='.'||s[i-1]==':'))&&s[i]>='0'&&s[i]<='9') cnt3++;   \n    //\u5982\u679c\u5f53\u524d\u4e3a\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u6216\u524d\u4e00\u4e2a\u4e3a\u5b57\u7b26\uff0c\u5e76\u4e14\u8fd9\u4e2a\u4f4d\u7f6e\u4e3a\u6570\u5b57\n    if(s[i]=='.'||s[i]==':')\n    {\n        /*\n            \u7edf\u8ba1\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\n        */\n        if(cnt1<3&&cnt2) return false;    //\u51fa\u73b0\u987a\u5e8f\u662f\u5426\u89c4\u8303\n        if(!cnt3) return false;   //\u5982\u679c\u5b57\u7b26\u5728\u7b2c\u4e00\u4e2a\u6570\u5b57\u524d\u51fa\u73b0\n        /*\n            \u5224\u65ada,b,c,d\u7684\u8303\u56f4\u662f\u5426\u89c4\u8303\n        */\n    }\n    else if(s[i]<'0'||s[i]>'9') return false;\n    /*\n        \u5224\u65ad\u524d\u5bfc0 \u4ee5\u53ca\u63d0\u53d6\u6570\u5b57\n    */\n}\nif(cnt1!=3||cnt2!=1||cnt3!=5) return false;    //\u5224\u65ad\u5b57\u7b26\u3001\u6570\u5b57\u51fa\u73b0\u7684\u6570\u91cf\n/*\n    \u5224\u65ade\u7684\u8303\u56f4\u662f\u5426\u89c4\u8303\n*/\n```\n\n\u5c06\u4e0a\u8ff04\u79cd\u60c5\u51b5\u7684\u89e3\u51b3\u65b9\u6848\u62fc\u5728\u4e00\u8d77\uff0c\u5c31\u5f97\u5230\u5224\u65ad\u5730\u5740\u4e32\u662f\u5426\u89c4\u8303\u7684\u51fd\u6570\u3002\n\n## Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nunordered_map<string,int>address;\nbool check(string s)\n{\n    int len = s.length();\n    long long tmp = 0;\n    int cnt1=0,cnt2=0,cnt3=0;\n    for(int i=0;i<len;i++)\n    {\n        if((i==0||(s[i-1]=='.'||s[i-1]==':'))&&s[i]>='0'&&s[i]<='9') cnt3++;\n        //\u5982\u679c\u5f53\u524d\u4e3a\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u6216\u524d\u4e00\u4e2a\u4e3a\u5b57\u7b26\uff0c\u5e76\u4e14\u8fd9\u4e2a\u4f4d\u7f6e\u4e3a\u6570\u5b57\n        if(s[i]=='.'||s[i]==':')\n        {\n            if(s[i]=='.') cnt1++;\n            else if(s[i]==':') cnt2++;\n            //\u7edf\u8ba1\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\n            if(cnt1<3&&cnt2) return false;    //\u51fa\u73b0\u987a\u5e8f\u662f\u5426\u89c4\u8303\n            if(!cnt3) return false;  //\u5982\u679c\u5b57\u7b26\u5728\u7b2c\u4e00\u4e2a\u6570\u5b57\u524d\u51fa\u73b0\n            if(0<=tmp&&tmp<=255)  //\u5224\u65ada,b,c,d\u7684\u8303\u56f4\u662f\u5426\u89c4\u8303\n            {\n                tmp = 0;\n                continue;\n            }\n            else return false;\n        }\n        else if(s[i]<'0'||s[i]>'9') return false;   //\u51fa\u73b0\u4e86\u5947\u602a\u7684\u5b57\u7b26\n        if(i&&!tmp&&s[i-1]=='0') return false;    //\u5224\u65ad\u524d\u5bfc 0\n        tmp = tmp*10+s[i]-'0';    //\u63d0\u53d6\u6570\u5b57\n    }\n    if(cnt1!=3||cnt2!=1||cnt3!=5) return false;   //\u5b57\u7b26\u548c\u6570\u5b57\u51fa\u73b0\u7684\u6570\u91cf\u662f\u5426\u6b63\u786e\n    if(0<=tmp&&tmp<=65535) return true;   //\u5224\u65ade\u7684\u8303\u56f4\n    else return false;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        string cpt,adr;\n        cin>>cpt>>adr;\n        if(!check(adr)) puts(\"ERR\");   //\u5982\u679c\u5730\u5740\u4e32\u4e0d\u7b26\u5408\u89c4\u8303\n        else if(cpt==\"Server\")\n        {\n            if(address.count(adr)) puts(\"FAIL\");\n            else \n            {\n                address[adr] = i;\n                puts(\"OK\");\n            }\n        }\n        else if(cpt==\"Client\")\n        {\n            if(address.count(adr)) printf(\"%d\\n\",address[adr]);\n            else puts(\"FAIL\");\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1636170605,
        "uid": 320282,
        "name": "\u6211\u548c\u9c7c\u8fc7\u4e0d\u53bb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7911\u3010[CSP-J 2021] \u7f51\u7edc\u8fde\u63a5\u3011"
    },
    {
        "content": "## \u524d\u60c5\u63d0\u8981\n\n\u8003\u573a\u4e0a\u5199\u51fa\u4e86\u8fd9\u9898\u6ee1\u5206\u505a\u6cd5\uff08\u65e0\u8bba\u662f\u6c11\u95f4\u6570\u636e\u8fd8\u662f\u5b98\u65b9\u6570\u636e\uff09\uff0c\u53ef\u60dc\u5c11\u4e86\u4e00\u53e5`return true;`\u9020\u6210 RE\u2026\u2026\uff0c\u4e8e\u662f\u4e00\u7b49\u5956\u53d8\u4e09\u7b49\u5956\uff08\u53ef\u80fd\u538b\u7ebf\u4e8c\u7b49\uff09\uff0cLemon \u8877\u5fc3\u5e0c\u671b\u5927\u5bb6\u4e0d\u518d\u72af\u8fd9\u6837\u7684\u9519\u8bef\u5199\u4e86\u8fd9\u7bc7\u9898\u89e3\u3002\n\n## \u601d\u8def\n\n\u8003\u8651\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u5224\u65ad\u5408\u6cd5\u548c\u8fde\u63a5\u670d\u52a1\u673a\uff08\u6216\u5efa\u7acb\u8fde\u63a5\uff09\u3002\n\n\u7b2c\u4e8c\u4e2a\u90e8\u5206\u53ef\u4ee5\u901a\u8fc7 STL \u7684`map`\u8f7b\u6613\u5b9e\u73b0\uff1a\u4ee5\u5730\u5740\u5b57\u7b26\u4e32\u4f5c\u4e3a\u4e0b\u6807\u5b58\u50a8\u670d\u52a1\u673a\u7f16\u53f7\u5373\u53ef\u3002\n\n\u7b2c\u4e00\u4e2a\u90e8\u5206\u6574\u4f53\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u5c0f\u90e8\u5206\uff1a\u662f\u5426\u7b26\u5408\u7c7b\u4f3c`1.1.1.1:1`\uff0c\u91cc\u9762\u7684\u6570\u662f\u5426\u7b26\u5408\u8303\u56f4\uff0c\u662f\u5426\u542b\u6709\u591a\u4f59\u524d\u5bfc\u96f6\u3002\n\n### 2.1 \u5224\u65ad\u662f\u5426\u7b26\u5408`1.1.1.1:1`\u7684\u5f62\u5f0f\n\n\u4ece\u201c\u662f\u5426\u7b26\u5408\u8fd9\u6837\u7684\u5f62\u5f0f\u201d\u51fa\u53d1\u8003\u8651\uff0c\u628a\u6240\u6709\u7684\u6570\u90fd\u53d8\u6210 $1$\uff0c\u518d\u5224\u65ad\u8f6c\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u662f\u5426\u7c7b\u4f3c`1.1.1.1:1`\u3002\n\n### 2.2 \u5224\u65ad\u6570\u662f\u5426\u7b26\u5408\u8303\u56f4\n\n\u8fd9\u4e00\u90e8\u5206\u9700\u8981\u5224\u65ad\u6570\u662f\u5426\u7b26\u5408\u8303\u56f4\u3002\n\n\u628a\u95ee\u9898\u5206\u6210\u4e24\u90e8\u5206\uff0c`:`\u524d\u4ee5\u53ca`:`\u540e\u3002\u5148\u626b\u4e00\u904d\u5b57\u7b26\u4e32\uff0c\u627e\u51fa`:`\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5bf9\u4e8e`:`\u4e4b\u524d\uff0c\u627e\u5230\u4e00\u4e2a`.`\u5b57\u7b26\u5c31\u5224\u65ad\u4e00\u6b21\u8fd9\u4e2a\u5b57\u7b26\u524d\u7684\u6570\u8303\u56f4\u5408\u4e0d\u5408\u6cd5\u3002**\u6ce8\u610f\uff0c\u5bf9\u4e8e`:`\u524d\u7684\u6700\u540e\u4e00\u4e2a\u6570\uff0c\u56e0\u4e3a\u540e\u9762\u6ca1\u6709`.`\u5b57\u7b26\uff0c\u8981\u7279\u522b\u5224\u65ad\u4e00\u4e0b\u3002**\n\n\u5bf9\u4e8e`:`\u540e\uff0c\u76f4\u63a5\u626b\u4e00\u904d\u518d\u5224\u65ad\u5373\u53ef\u3002\n\n- Warning\uff1a\u56e0\u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\u53ef\u80fd\u6709 $25$ \u4f4d\uff0c\u6240\u4ee5\u53ef\u80fd\u6709\u4e00\u4e2a\u6570\u9ad8\u8fbe $17$ \u4f4d\uff0c\u5b57\u7b26\u4e32\u8f6c\u6570\u7684\u65f6\u5019\u8981\u5f00`long long`\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u8fb9\u626b\u8fb9\u5224\u65ad\u907f\u514d\u6ea2\u51fa\u3002\n\n### 2.3 \u5224\u65ad\u591a\u4f59\u524d\u5bfc\u96f6\n\n\u8003\u8651\u5728\u7b2c\u4e00\u4e2a\u975e $0$ \u6570\u5b57\u51fa\u73b0\u524d\u7684 $0$ \u6570\u5b57\u4e2a\u6570\uff0c\u4e0b\u9762\u8bbe\u8fd9\u4e2a\u4e2a\u6570\u4e3a $sum$\u3002\n\n- \u5f53 $sum=0$ \u65f6\uff0c\u8bf4\u660e\u6ca1\u6709\u524d\u5bfc\u96f6\uff0c\u901a\u8fc7\u3002\n- \u5f53 $sum=1$ \u4e14\u8fd9\u4e2a\u6570\u957f\u5ea6\u4e3a $1$ \u65f6\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6570\u662f $0$\uff0c\u901a\u8fc7\u3002\n- \u5176\u5b83\u60c5\u51b5\u90fd\u4e0d\u901a\u8fc7\u3002\n\n\u6ce8\u610f\u4e3a\u4e86\u5224\u65ad\u8fd9\u4e2a\u6570\u7684\u957f\u5ea6\uff0c\u6211\u4eec\u8981\u5b58\u4e0b\u4e00\u4e2a\u6570\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002\u4e3a\u4e86\u65b9\u4fbf\u5206\u79bb\u6570\uff0c\u53ef\u4ee5\u5728\u539f\u5b57\u7b26\u4e32\u540e\u9762\u52a0\u4e0a\u4e00\u4e2a`.`\u5b57\u7b26\uff0c\u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u4e0d\u662f\u6570\u5b57\u7684\u5b57\u7b26\u5c31\u540e\u79fb\u5b58\u6570\u5f00\u59cb\u4f4d\u7f6e\u7684\u53d8\u91cf\u5e76\u68c0\u67e5\u524d\u9762\u8fd9\u4e2a\u6570\u662f\u5426\u5408\u6cd5\u3002\n\n## \u4ee3\u7801\n\n\u56e0\u4e3a\u8fd9\u4e0b\u9762\u90fd\u5199\u5728\u51fd\u6570\u91cc\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u7406\u89e3 $k$ \u4e3a\u8f93\u5165\u7684\u539f\u5b57\u7b26\u4e32\u3002\n\n### 3.1 \u68c0\u67e5\u5f62\u5f0f\n\n\u5f00\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32\u5b58\u50a8\u7f29\u7565\u6570\u540e\u7684\u7684\u5b57\u7b26\u4e32\u3002\n\n```\nconst string ans=\"1.1.1.1:1\";\nf=\"\";\nbool f2;\nfor(int i=0;i<k.length();i++){\n\tf2=false;\n\twhile(i<k.length()&&k[i]>='0'&&k[i]<='9'){\n\t\tf2=true;//\u5176\u5b9e\u8fd9\u4e2a\u6709\u70b9\u591a\u4f59\u2026\u2026\n\t\ti++;//\u5f53\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u6570\u5b57\u65f6\uff0ci\u5c31\u5411\u540e\u79fb\u52a8\u3002\n\t}\n\tif(f2){\n\t\tf+='1';//\u628a\u6570\u90fd\u7f29\u7565\u62101\n\t}\n\tif(i<k.length()){//\u82e5\u6700\u540e\u662f\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48i\u5c31\u4f1a\u79fb\u52a8\u5230k.length()\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8981\u7279\u5224\u3002\n\t\tf+=k[i];\n\t}\n}\nif(f==ans){//\u5982\u679c\u8f6c\u51fa\u6765\u7684\u4e32\u7b26\u5408\u683c\u5f0f\u5219\u8fd4\u56de\u901a\u8fc7\u3002\n\treturn true;\n}\nreturn false;\n```\n\n\u6ce8\u610f\u8fd9\u91cc $i$ \u53ef\u80fd\u79fb\u52a8\u5230\u5b57\u7b26\u4e32\u5916\uff0c\u8981\u7279\u5224\u3002\n\n### 3.2 \u68c0\u67e5\u6570\u662f\u5426\u5728\u8303\u56f4\u5185\n\n\u5148\u627e\u51fa`:`\u5b57\u7b26\u7684\u4f4d\u7f6e\uff1a\n\n```\nfor(int i=0;i<k.length();i++){\n\tif(k[i]==':'){\n   \t  add=i;\n\t\tbreak;\n\t}\n}\n```\n\n\u518d\u626b\u63cf`:`\u524d\u7684\u90e8\u5206\u628a\u6570\u8f6c\u51fa\u6765\u4f9d\u6b21\u5224\u65ad\uff0c\u6ce8\u610f\u8fd9\u91cc\u5b58\u6570\u7684\u53d8\u91cf\u9700\u8981`long long`\u3002\n\n```\nll sum=0;\nfor(int i=0;i<add;i++){\n\tif(k[i]=='.'){//\u9047\u5230\u70b9\u5b57\u7b26\u5c31\u8981\u68c0\u67e5\n\t\tif(sum>255){\n\t\t\treturn false;\n\t\t}\n\t\tsum=0;\n\t}\n\telse{\n\t\tsum=sum*10+k[i]-'0';//\u57fa\u672c\u7684\u5b57\u7b26\u4e32\u8f6c\u6570\u64cd\u4f5c\n\t}\n}\nif(sum>255){//\u56e0\u4e3a\u6700\u540e\u6ca1\u6709\u70b9\u5b57\u7b26\uff0c\u6240\u4ee5\u5355\u72ec\u68c0\u67e5\u4e00\u6b21\u3002\n\treturn false;\n}\nsum=0;\n```\n\n\u6700\u540e\u7c7b\u6bd4\u521a\u521a\u626b\u63cf\u524d\u534a\u90e8\u5206\u7684\u65b9\u6cd5\uff0c\u626b\u63cf`:`\u540e\u7684\u90e8\u5206\uff1a\n\n```\nfor(int i=add+1;i<k.length();i++){//\u4ece\u5192\u53f7\u5b57\u7b26\u540e\u5f00\u59cb\u626b\u63cf\n\tsum=sum*10+k[i]-'0';\n}\nif(sum>65535){//\u5224\u65ad\n\treturn false;\n}\nreturn true;\n```\n\n### 3.3 \u5224\u65ad\u591a\u4f59\u524d\u5bfc\u96f6\n\n\u5f80\u5b57\u7b26\u4e32\u540e\u9762\u589e\u52a0\u4e00\u4e2a`.`\u5b57\u7b26\u65b9\u4fbf\u5206\u79bb\u6570\uff0c\u5e76\u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u6570\u7684\u5f00\u59cb\u4f4d\u7f6e\u4e3a $0$\uff1a\n```\nstring t=k;\nt+='.';\nint kaishi;\nkaishi=0;\n```\n\u5bf9\u4e8e\u6bcf\u6b21\u9047\u5230\u975e\u6570\u5b57\u7684\u7b26\u53f7\u8fdb\u884c\u4ee5\u4e0b\u5224\u65ad\uff1a\n```\nint sum=0;\nfor(int j=kaishi;j<i;j++){\n\tif(t[j]=='0'){\n   \t  sum++;\n\t}\n\tif(t[j]>='1'&&t[j]<='9'){\n\t\tbreak;\n\t}\n}\nif(kaishi==i-1&&sum==1){\n\tkaishi=i+1;\n\tcontinue;\n}\nif(sum==0){\n\tkaishi=i+1;\n\tcontinue;\n}\nelse{\n\treturn false;\n}\nreturn true;//\u8fd9\u53e5\u4ee3\u7801\uff0c\u4fbf\u662f\u60e8\u6848\u3002\n```\n\u5176\u4e2d $i$ \u662f\u76ee\u524d\u679a\u4e3e\u5230\u7684\u4f4d\u7f6e\uff08\u5373\u975e\u6570\u5b57\u7b26\u53f7\uff09\uff0c\u4ece\u8fd9\u4e2a\u7b26\u53f7\u524d\u90a3\u4e2a\u6570\u7684\u5f00\u59cb\u4f4d\u7f6e\u4f9d\u6b21\u5411\u540e\u679a\u4e3e\uff0c\u7edf\u8ba1\u7b2c\u4e00\u4e2a\u975e $0$ \u6570\u5b57\u51fa\u73b0\u524d $0$ \u7684\u4e2a\u6570\u3002\n\n\u6700\u540e\u6309\u7167\u601d\u8def\u4e2d\u9610\u8ff0\u7684\u65b9\u6cd5\u8fdb\u884c\u5224\u65ad\u3002\u6ce8\u610f\u8981\u8bb0\u5f97\u79fb\u52a8\u5f00\u59cb\u4f4d\u7f6e\u7684\u4e0b\u6807\u5230\u4e0b\u4e00\u4e2a\u6570\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002\n\n### 3.4 \u4e3b\u4f53\u90e8\u5206\n\n```\ncin>>n;\nfor(int i=1;i<=n;i++){\n\tcin>>s;\n\tif(s==fuwu){//\u8fd9\u91cc\u5b9a\u4e49\u4e86\u5e38\u91cf fuwu \u4e3a\"Server\"\u3002\n\t\tcin>>idd;\n\t\t/*\u8fd9\u91cc\u5e94\u8be5\u653e\u4e0a\u521a\u521a\u7684\u6240\u6709\u5224\u65ad\u51fd\u6570*/\n\t\tif(!p.count(idd)){\n\t\t\tp[idd]=i;\n\t\t\tputs(\"OK\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(p.count(idd)){\n\t\t\tputs(\"FAIL\");\n\t\t\tcontinue;\n\t\t}\n\t}\n\telse{\n\t\tcin>>idd;\n\t\t/*\u8fd9\u91cc\u5e94\u8be5\u653e\u4e0a\u521a\u521a\u7684\u6240\u6709\u5224\u65ad\u51fd\u6570*/\n\t\tif(!p.count(idd)){\n\t\t\tputs(\"FAIL\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(p.count(idd)){\n\t\t\tcout<<p[idd]<<endl;\n\t\t\tcontinue;\n\t\t}\n\t}\n}\n```\n\n\u4f7f\u7528\u4e00\u4e2a`map`\uff0c\u4ee5\u5730\u5740\u5b57\u7b26\u4e32\u4f5c\u4e3a\u4e0b\u6807\uff0c\u6620\u5c04\u5230\u670d\u52a1\u673a\u7684\u7f16\u53f7\u4e0a\u5373\u53ef\u3002\n\n## AC \u4ee3\u7801\u53ca\u540e\u8bb0\n\nAC \u4ee3\u7801\u5df2\u7ecf\u5206\u6563\u7ed9\u51fa\uff0c\u6ce8\u610f\u7406\u89e3\u7b2c\u4e00\u3002\n\n[AC \u8bb0\u5f55](https://www.luogu.com.cn/record/61601893)\n\nLemon \u5c31\u8fd9\u6837\u5931\u53bb\u4e86 $100$ \u5206\u3002",
        "postTime": 1635849021,
        "uid": 399150,
        "name": "Shunpower",
        "ccfLevel": 7,
        "title": "P7911 [CSP-J 2021] \u7f51\u7edc\u8fde\u63a5 \u9898\u89e3"
    },
    {
        "content": "\u867d\u7136\u672c\u4eba\u6ca1\u6709\u53c2\u52a0\u4eca\u5e74 $\\text{CSP-J}$\uff0c\u4f46\u662f~~\u6709\u5e78~~\u53c2\u52a0\u4e86 $\\text{CSP-S}$ ~~\uff08\u6302\u5f97\u5f88\u60e8\uff09~~\n\n\u6240\u4ee5\u672c\u849f\u84bb\u5c31\u6765 $\\text{J}$ \u7ec4\u6c34\u7bc7\u9898\u89e3\u4e86\u3002\n\n\u672c\u9898\u4e0d\u96be\uff0c\u6309\u7167\u9898\u610f\u6a21\u62df\u5373\u53ef\u3002\n\n\u5927\u81f4\u601d\u8def\u5c31\u662f\uff1a\n>1. \u8bfb\u5165\u7c7b\u578b\uff08$\\texttt{Server / Client}$\uff09\u4e0e $\\texttt{IP}$\u3002\n>\n>2. \u5224\u65ad $\\texttt{IP}$ \u662f\u5426\u5408\u6cd5\uff1a\u5982\u679c\u4e0d\u5408\u6cd5\uff0c\u8f93\u51fa $\\texttt{ERR}$ \u5e76 `continue`\uff0c\u5426\u5219\u7ee7\u7eed\u3002\n>\n>3. \u5982\u679c\u7c7b\u578b\u662f $\\texttt{Server}$\uff0c\u5219\u5728\u5df2\u8fde\u63a5\u7684 $\\texttt{IP}$ \u4e2d\u67e5\u8be2\u662f\u5426\u5df2\u5b58\u5728\u672c\u6b21\u9700\u8981\u5efa\u7acb\u7684\u8fde\u63a5\uff0c\u5982\u679c\u662f\uff0c\u5219\u8f93\u51fa $\\texttt{FAIL}$\uff0c\u5426\u5219\u8f93\u51fa $\\texttt{OK}$\uff1b\\\n>\u5982\u679c\u7c7b\u578b\u662f $\\texttt{Client}$\uff0c\u5219\u5728\u5df2\u8fde\u63a5\u7684 $\\texttt{IP}$ \u4e2d\u67e5\u8be2\u662f\u5426\u5df2\u5b58\u5728\u672c\u6b21\u9700\u8981\u52a0\u5165\u7684\u8fde\u63a5\uff0c\u5982\u679c\u662f\uff0c\u5219\u8f93\u51fa\u5bf9\u5e94\u7684 $\\texttt{Server}$ \u7684\u7f16\u53f7\uff0c\u5426\u5219\u8f93\u51fa $\\texttt{FAIL}$\u3002\n\n\u5bf9\u4e8e\u5728\u5df2\u5efa\u7acb\u7684\u8fde\u63a5\u4e2d\u8fdb\u884c\u67e5\u8be2\u7684\u64cd\u4f5c\uff0c\u4f7f\u7528 `unordered_map<string, int>` \u6765\u7ef4\u62a4\u5373\u53ef\uff08\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\uff09\u3002\n\n\u5bf9\u4e8e\u5224\u65ad $\\texttt{IP}$ \u662f\u5426\u5408\u6cd5\u7684\u65b9\u6cd5\uff0c\u7531\u4e8e\u672c\u4eba\u592a\u83dc\uff0c\u53ea\u80fd\u5355\u72ec\u5bf9\u6bcf\u79cd\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u8fdb\u884c\u5224\u65ad\uff1a\n\n1. $\\texttt{IP}$ \u7684\u7b2c $1$ \u4e2a\u5b57\u7b26\u4e0d\u4e3a\u6570\u5b57\uff1b\n2. $\\texttt{IP}$ \u7684\u7b2c $1$ \u4e2a\u5b57\u7b26\u4e3a $0$\uff0c\u4e14\u7b2c $2$ \u4e2a\u5b57\u7b26\u4e3a\u6570\u5b57\uff1b\n3. $\\texttt{IP}$ \u7684\u6700\u540e $1$ \u4e2a\u5b57\u7b26\u4e0d\u4e3a\u6570\u5b57\uff1b\n4. $\\texttt{IP}$ \u4e2d\u201c`:`\u201d\u4e4b\u524d\u7684\u201c`.`\u201d\u7684\u4e2a\u6570\u4e0d\u8db3 $3$ \u4e2a\uff1b\n5. $\\texttt{IP}$ \u4e2d\u201c`.`\u201d\u7684\u4e2a\u6570\u4e0d\u4e3a $3$ \u4e2a\uff1b\n6. $\\texttt{IP}$ \u4e2d\u201c`:`\u201d\u7684\u4e2a\u6570\u4e0d\u4e3a $1$ \u4e2a\uff1b\n7. $\\texttt{IP}$ \u4e2d\u67d0\u4e2a\u201c`.`\u201d\u4e4b\u540e\u7684\u7b2c $1$ \u4e2a\u5b57\u7b26\u4e0d\u4e3a\u6570\u5b57\uff1b\n8. $\\texttt{IP}$ \u4e2d\u67d0\u4e2a\u201c`.`\u201d\u4e4b\u540e\u7684\u7b2c $1$ \u4e2a\u5b57\u7b26\u4e3a $0$\uff0c\u4e14\u7b2c $2$ \u4e2a\u5b57\u7b26\u4e3a\u6570\u5b57\uff1b\n9. $\\texttt{IP}$ \u4e2d\u201c`:`\u201d\u4e4b\u540e\u7684\u7b2c $1$ \u4e2a\u5b57\u7b26\u4e0d\u4e3a\u6570\u5b57\uff1b\n10. $\\texttt{IP}$ \u4e2d\u201c`:`\u201d\u4e4b\u540e\u7684\u7b2c $1$ \u4e2a\u5b57\u7b26\u4e3a $0$\uff0c\u4e14\u7b2c $2$ \u4e2a\u5b57\u7b26\u4e3a\u6570\u5b57\uff1b\n11. $\\texttt{IP}$ \u5305\u542b\u9664\u6570\u5b57\uff0c\u201c`.`\u201d\u4e0e\u201c`:`\u201d\u4e4b\u5916\u7684\u5b57\u7b26\uff1b\n12. $\\texttt{IP}$ \u4e2d\u67d0\u4e2a\u6570\u5b57\u8d85\u51fa\u8303\u56f4\u3002\n\n\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u5bf9\u4f60\u6709\u5e2e\u52a9\uff01`_(:3\u300d\u2220)_`\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nunordered_map<string, int> ha;\n\nchar op[9];\n\nstring ip;\n\ninline bool valid(string &ip) {\n\tlong long a = 0, b = 0, c = 0, d = 0, e = 0, len = ip.length(), c1 = 0, c2 = 0; // c1 \u8868\u793a\u201c.\u201d\u7684\u4e2a\u6570\uff0cc2 \u8868\u793a\u201c:\u201d\u7684\u4e2a\u6570 \n\tif (ip[0] < '0' || ip[0] > '9') {\n\t\treturn false;\n\t}\n\tif (ip[0] == '0' && ip[1] >= '0' && ip[1] <= '9') {\n\t\treturn false;\n\t}\n\tif (ip[len - 1] < '0' || ip[len - 1] > '9') {\n\t\treturn false;\n\t}\n\tfor (int i = 0; i < len; i++) {\n\t\tif (ip[i] >= '0' && ip[i] <= '9') {\n\t\t\tif (c1 < 3 && c2) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (c1 == 0) {\n\t\t\t\ta *= 10;\n\t\t\t\ta += ip[i] - '0';\n\t\t\t} else if (c1 == 1) {\n\t\t\t\tb *= 10;\n\t\t\t\tb += ip[i] - '0';\n\t\t\t} else if (c1 == 2) {\n\t\t\t\tc *= 10;\n\t\t\t\tc += ip[i] - '0';\n\t\t\t} else if (c1 == 3) {\n\t\t\t\tif (c2 == 0) {\n\t\t\t\t\td *= 10;\n\t\t\t\t\td += ip[i] - '0';\n\t\t\t\t} else if (c2 == 1) {\n\t\t\t\t\te *= 10;\n\t\t\t\t\te += ip[i] - '0';\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (ip[i] == '.') {\n\t\t\tc1++;\n\t\t\tif (ip[i + 1] < '0' || ip[i + 1] > '9') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (i < len - 2 && ip[i + 1] == '0' && ip[i + 2] >= '0' && ip[i + 2] <= '9') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (ip[i] == ':') {\n\t\t\tc2++;\n\t\t\tif (ip[i + 1] < '0' || ip[i + 1] > '9') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (i < len - 2 && ip[i + 1] == '0' && ip[i + 2] >= '0' && ip[i + 2] <= '9') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn a >= 0 && a <= 255 && b >= 0 && b <= 255 && c >= 0 && c <= 255 && d >= 0 && d <= 255 && e >= 0 && e <= 65535 && c1 == 3 && c2 == 1;\n}\n\nint n;\n\nint main() {\n\tfreopen(\"network.in\", \"r\", stdin);\n\tfreopen(\"network.out\", \"w\", stdout);\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%s\", op);\n\t\tcin >> ip;\n\t\tif (!valid(ip)) {\n\t\t\tputs(\"ERR\");\n\t\t\tcontinue;\n\t\t}\n\t\tif (op[0] == 'S') {\n\t\t\tif (!ha.count(ip)) {\n\t\t\t\tha[ip] = i;\n\t\t\t\tputs(\"OK\");\n\t\t\t} else {\n\t\t\t\tputs(\"FAIL\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (ha.count(ip)) {\n\t\t\t\tprintf(\"%d\\n\", ha[ip]);\n\t\t\t} else {\n\t\t\t\tputs(\"FAIL\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1635946146,
        "uid": 486119,
        "name": "Naptie",
        "ccfLevel": 3,
        "title": "P7911 \u7f51\u7edc\u8fde\u63a5 \u9898\u89e3"
    },
    {
        "content": "\u56e0\u8be5\u52c9\u5f3a\u7b97\u7684\u4e0a\u4e00\u9053\u4e2d\u578b\u6a21\u62df\uff0c\u8003\u573a\u4ee3\u78011.2KB\u591a\u4e00\u70b9\u3002\n\n#### \u5927\u81f4\u601d\u8def STL+\u6a21\u62df\n\n\u7528\u4e00\u4e2amap\u7ef4\u62a4\u4e00\u4e0b\u524d\u9762\u6709\u6ca1\u6709\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u5728\u6765\u6a21\u62df\u5224\u65ad\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5408\u4e0d\u5408\u6cd5\u3002\n\n\u51fa\u9898\u4eba\u5341\u5206\u826f\u5fc3\uff0c\u8be5\u6709\u7684\u60c5\u51b5\u5927\u6837\u4f8b\u91cc\u57fa\u672c\u90fd\u6709\u3002\n\n\u5728\u6a21\u62df\u8fd9\u4e00\u73af\u8282\uff0c\u4ee3\u7801\u5e94\u8be5\u4e0d\u7b97\u957f\uff0c\u4e00\u4e2a\u5faa\u73af\u5d4c\u5957\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\nfor(int j = 1;j <= 5;j++ , x = 0)\n{\n    if(!isdigit(b[y])) { flag = 0; break; }\n    //\u5224\u65ad\u8fd9\u4e00\u4f4d\u662f\u5426\u6709\u6570\u5b57\n    if(b[y] == '0' && (y + 1 < z && isdigit(b[y + 1]))) { flag = 0; break; }\n    for(y;y < z && isdigit(b[y]);y++)\n    {\n        x = x * 10 + (int)(b[y] - '0');\n        if(j <= 4 && x > 255) { flag = 0; break; }\n        if(j == 5 && x > 65535) { flag = 0; break; }\n    }\n    //\u5224\u65ad\u6570\u5b57\u662f\u5426\u5408\u6cd5\n    if(j < 4 && b[y] != '.')  { flag = 0; break; }\n    if(j == 4 && b[y] != ':')  { flag = 0; break; }\n    //\u5224\u65ad\u7b26\u53f7\u662f\u5426\u5408\u6cd5\n    if(j != 5) y++;\n}\n```\n\n\u5982\u679c\u4e0d\u5408\u6cd5\uff0c\u76f4\u63a5\u8f93\u51fa\u201cERR\u201d\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\nif(flag == 0 || y != z)\n{\n    cout << \"ERR\" << endl;\n    continue;\n}\n```\n\n\u6700\u540e\u518d\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u5ba2\u6237\u673a\u548c\u670d\u52a1\u673a\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\nif(a[0] == 'S')\n{\n    if(q[b] == 0) q[b] = i , cout << \"OK\" << endl;\n    else cout << \"FAIL\" << endl;\n}\nelse\n{\n    if(q[b] != 0) cout << q[b] << endl;\n    else cout << \"FAIL\" << endl;\n}\n\n```\n\n#### Code\n\n\u8003\u573a\u4ee3\u7801\uff08\u7801\u98ce\u8f83\u4e11\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nstring a , b;\nmap<string , int> q;\n\nint read()\n{\n\tint asd = 0 , qwe = 1; char zxc;\n\twhile(!isdigit(zxc = getchar())) if(zxc = '-') qwe = -1;\n\twhile(isdigit(zxc)) asd = asd * 10 + (zxc - '0') , zxc = getchar();\n\treturn asd * qwe;\n}\n\nint main()\n{\n//\tfreopen(\"network.in\" , \"r\" , stdin);\n//\tfreopen(\"network.out\" , \"w\" , stdout);\n\tn = read();\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tcin >> a >> b;\n\t\tint x = 0 , y = 0 , flag = 1 , z = b.length();\n\t\tfor(int j = 1;j <= 5;j++ , x = 0)\n\t\t{\n\t\t\tif(!isdigit(b[y])) { flag = 0; break; }\n\t\t\tif(b[y] == '0' && (y + 1 < z && isdigit(b[y + 1]))) { flag = 0; break; }\n\t\t\tfor(y;y < z && isdigit(b[y]);y++)\n\t\t\t{\n\t\t\t\tx = x * 10 + (int)(b[y] - '0');\n\t\t\t\tif(j <= 4 && x > 255) { flag = 0; break; }\n\t\t\t\tif(j == 5 && x > 65535) { flag = 0; break; }\n\t\t\t}\n\t\t\tif(j < 4 && b[y] != '.')  { flag = 0; break; }\n\t\t\tif(j == 4 && b[y] != ':')  { flag = 0; break; }\n\t\t\tif(j != 5) y++;\n\t\t}\n\t\tif(flag == 0 || y != z)\n\t\t{\n\t\t\tcout << \"ERR\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tif(a[0] == 'S')\n\t\t{\n\t\t\tif(q[b] == 0) q[b] = i , cout << \"OK\" << endl;\n\t\t\telse cout << \"FAIL\" << endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(q[b] != 0) cout << q[b] << endl;\n\t\t\telse cout << \"FAIL\" << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1635749210,
        "uid": 320933,
        "name": "Mfeitveer",
        "ccfLevel": 0,
        "title": "P7911 [CSP-J 2021] \u7f51\u7edc\u8fde\u63a5 \u9898\u89e3"
    },
    {
        "content": "\u6b64\u9898\u8003\u5bdf map \u53ca string \u7684\u57fa\u672c\u529f\n\n### \u7b97\u6cd5\uff1a\n\n\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u5b58\u7b54\u6848\uff08\u5373\u6bcf\u53f0\u8ba1\u7b97\u673a\u8fde\u63a5\u72b6\u6001\uff0c\u4ee3\u7801\u5185\u4e3a a\uff09\uff0c\u518d\u5efa\u4e00\u4e2a\u6570\u7ec4 sum \u5b58\u8fde\u63a5\u6210\u529f\u5ba2\u6237\u673a\u6240\u5bf9\u5e94\u7684\u670d\u52a1\u673a\u7f16\u53f7\uff0c\u5bf9\u4e8e\u7b54\u6848\u4fdd\u5b58\u8bb2\u5b8c\u4e86\u3002\n\n\u8f93\u5165\u90e8\u5206\u8f83\u4e3a\u7b80\u5355\uff0c\u6211\u7684\u53d8\u91cf\u540d\u4e5f\u4e0e\u9898\u76ee\u6240\u8ff0\u4e00\u81f4\uff0c\u5c31\u8df3\u8fc7\u3002\n\n\u7136\u540e\u8bb2\u670d\u52a1\u673a\u91cd\u590d\u5730\u5740\uff0c\u548c\u5ba2\u6237\u673a\u8fde\u63a5\u7684\u670d\u52a1\u673a\u7f16\u53f7\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5730\u5740\u5408\u6cd5\u7684\u670d\u52a1\u673a\uff0c\u6211\u4eec\u7528\u4e00\u4e2a map \u5b58\u5b83\u7684\u5730\u5740\u548c\u7f16\u53f7\uff0c\u8bb0\u4e3a\n\n```cpp\nmap<string,int>ss;\n```\n\n\u8fd9\u6837\u670d\u52a1\u673a\u91cd\u590d\u5730\u5740\u7684\u60c5\u51b5\uff0c\u770b\u4e0b\u5730\u5740\u5bf9\u5e94\u7684 map \u662f\u5426\u4e3a 0 \u5c31\u884c\u4e86\u3002\u81f3\u4e8e\u5ba2\u6237\u673a\uff0c\u82e5\u5b83\u5730\u5740\u5408\u6cd5\uff0c\u770b\u4e0b\u5730\u5740\u5bf9\u5e94\u7684 map \u662f\u5426\u4e3a 0\uff0c\u4e3a 0 \u5219\u8fde\u63a5\u5931\u8d25\uff0c\u5426\u5219\u8fde\u63a5\u7684\u670d\u52a1\u673a\u7f16\u53f7\u5c31\u662f ss \u7684\u7b2c\u4e8c\u4e2a\u952e\u503c\u3002\n\n\u5224\u65ad\u5730\u5740\u662f\u5426\u5408\u6cd5\u9700\u8981\u8003\u8651\u7684\u6bd4\u8f83\u591a\uff0c\u653e\u4e0b\u9762\u8bf4\u3002\n\n### \u6ce8\u610f\u70b9\uff1a\n\n~~\u5c31\u662f\u8fd9\u91cc\u5199\u6302\u4e86QAQ~~\n\n1. map \u7b49\u6e05\u7a7a\u3002\n\n1. \u5224\u65ad\u5730\u5740\u5408\u6cd5\u7684\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n\t- \u5730\u5740\u4e0d\u5f97\u51fa\u73b0\u9664\u9898\u76ee\u89c4\u5b9a\u5916\u7684\u5b57\u7b26\u3002\n    \n   - \u5730\u5740**\u5fc5\u987b\u8981\u6709 5 \u4e2a\u6570**\uff08\u6bd4\u5982 ```10..9.7:2``` \u5c31\u4e0d\u884c\uff09\n   \n   - \u5730\u5740\u5fc5\u987b\u542b\u6709 3 \u4e2a ```.``` \u4e0e 1 \u4e2a ```:```\uff0c\u4e14**\u987a\u5e8f\u4e0d\u80fd\u98a0\u5012**\u3002\n   \n   - \u5730\u5740\u7684 5 \u4e2a\u6570\u8981\u7b26\u5408\u9898\u76ee\u89c4\u5b9a\u7684\u6570\u636e\u8303\u56f4\u3002\n   \n   - \u5730\u5740\u7684 5 \u4e2a\u6570\u4e0d\u80fd\u542b\u524d\u5bfc 0\u3002\n\n### Code :\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint n,sum[1005];\nstring a[1005];\nmap<string,int>ss;\nsigned main(){\n    //freopen(\"network.in\",\"r\",stdin);\n    //freopen(\"network.out\",\"w\",stdout);\n    ss.clear();\n    scanf(\"%lld\",&n);\n    for(int iu=1;iu<=n;iu++){\n        a[iu].clear();\n        char op[105],ad[105];\n        int ans=0,w=0,_1=0,_2=0;\n        string sk;//\u7531\u4e8e\u4e24\u4e2a\u5b57\u7b26\u4e32\u7a7a\u4e00\u683c\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u628a\u5b57\u7b26\u4e32\u8f93\u8fdb\u53bb\uff0c\u5c31\u5148\u7528 ad \u8fd9\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u518d\u6539\u6210\u5b57\u7b26\u4e32\u3002\n        sk.clear();\n        scanf(\"%s\",op);\n        scanf(\"%s\",ad);\n        int kf=0,knf=0;\n        for(int i=0;i<strlen(ad);i++){\n            if((i==0&&ad[i]>='0'&&ad[i]<='9')||(!(ad[i-1]>='0'&&ad[i-1]<='9')&&(ad[i]>='0'&&ad[i]<='9')))kf++;//\u8bb0\u5f55\u6570\u5b57\u4e2a\u6570\u3002\n            if(knf==1&&!(ad[i]>='0'&&ad[i]<='9')){\n                kf=999;\n                break;\n            }//\u5224\u65ad 4 \u4e2a\u7279\u6b8a\u7b26\u53f7\u662f\u5426\u6309\u987a\u5e8f\u6392\u5217\u3002\n            if(ad[i]==':')knf=1;\n        }   \n        if(kf!=5){\n            a[iu]+='E';\n            continue;           \n        }\n        for(int i=0;i<strlen(ad);i++){\n            if(ad[i]=='.')_1++;\n            if(ad[i]==':')_2++;\n            if(ad[i]!='.'&&ad[i]!=':'&&!(ad[i]>='0'&&ad[i]<='9')){\n                w=1;\n            }//\u5224\u65ad\u6709\u65e0\u5176\u4ed6\u5b57\u7b26\u51fa\u73b0\uff0c\u53ca\u5224\u65ad\u4e24\u79cd\u7279\u6b8a\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u3002\n            sk+=ad[i];\n        }\n        if(_1!=3||_2!=1||w==1){\n            a[iu]+='E';\n            continue;\n        }\n        for(int i=0;i<strlen(ad);i++){\n            if(ad[i]=='.'||ad[i]==':'){\n                if(ans>=0&&ans<=255){\n                    ans=0;\n                    continue;\n                }\n                else{\n                    w=1;\n                    break;\n                }\n            }//\u5224\u65ad a,b,c,d \u662f\u5426\u5728\u8303\u56f4\u5185\u3002\n            if(i==0||ad[i-1]=='.'||ad[i-1]==':'){\n                if(ad[i]=='0'){\n                    if(i==strlen(ad)-1||ad[i+1]=='.'||ad[i+1]==':'){\n                        ans=0;\n                        continue;\n                    }\n                    else{\n                        w=1;\n                        break;\n                    }\n                }\n            }//\u5224\u65ad\u524d\u5bfc 0.\n            ans=ans*10+ad[i]-48;\n        }\n        if(ans<0||ans>65535||w==1){\n            a[iu]+='E';\n            continue;\n        }//\u5224\u65ad e \u662f\u5426\u5728\u8303\u56f4\u5185\u3002\n        if(op[0]=='S'){\n            if(ss[sk]>0){\n                a[iu]+='F';\n            }\n            else{\n                ss[sk]=iu;\n                a[iu]+='O';\n            }\n        }//\u5224\u65ad\u670d\u52a1\u673a\u8fde\u63a5\u60c5\u51b5\u3002\n        else{\n            if(ss[sk]>0){\n                sum[iu]=ss[sk];\n            }\n            else{\n                a[iu]+='F';\n            }\n        }//\u5224\u65ad\u5ba2\u6237\u673a\u8fde\u63a5\u60c5\u51b5\u3002\n    }\n    for(int i=1;i<=n;i++){\n        if(sum[i]==0){\n            if(a[i][0]=='E')printf(\"ERR\");\n            if(a[i][0]=='F')printf(\"FAIL\");\n            if(a[i][0]=='O')printf(\"OK\");\n        }\n        else printf(\"%lld\",sum[i]);\n        printf(\"\\n\");\n    }//\u8f93\u51fa\u7ed3\u679c\u3002\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n```\n\n",
        "postTime": 1636015298,
        "uid": 128221,
        "name": "BYWYR",
        "ccfLevel": 5,
        "title": "P7911 [CSP-J 2021] \u7f51\u7edc\u8fde\u63a5 \u9898\u89e3"
    },
    {
        "content": "\u5c0f\u578b\u6a21\u62df\u9898\u3002\n\n\u611f\u89c9\u51fa\u9898\u4eba\u633a\u826f\u5fc3\uff0c\u6ca1\u6709\u4ec0\u4e48\u5f88\u5927\u7684\u5751\u70b9\u6216\u8005\u4e0d\u6ce8\u610f\u5c31\u6302\u7684\u5730\u65b9\u3002\n\n\u8fd9\u90fd\u5199\u4e0d\u5bf9\u53ea\u80fd\u8bf4\u660e\u4ee3\u7801\u80fd\u529b\u6709\u5f85\u63d0\u5347\u4e86\u3002\n\n\u9996\u5148\u89c2\u5bdf\u53ef\u77e5\uff0c\u539f\u9898\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\n\n1. \u68c0\u67e5\u4e00\u4e2a\u5730\u5740\u662f\u5426\u5408\u6cd5\uff1b\n2. \u52a0\u5165\u4e00\u4e2a\u5730\u5740\u3002\n\n\u540e\u8005\u53ef\u4ee5\u7528 map \u7ef4\u62a4\uff0c\u662f\u57fa\u7840\u64cd\u4f5c\uff0c\u6240\u4ee5\u5173\u952e\u70b9\u5c31\u843d\u5728\u4e86\u524d\u8005\u4e0a\u3002\n\n\u9996\u5148\u662f\u4e00\u6ce2\u6700\u57fa\u7840\u7684\u5224\u65ad\uff1a\n\n- `.` \u51fa\u73b0 3 \u6b21\uff0c`:` \u51fa\u73b0 1 \u6b21\u3002\n- \u5b83\u4eec\u51fa\u73b0\u7684\u987a\u5e8f\u5fc5\u987b\u662f `.`\u3001`.`\u3001`.`\u3001`:`\u3002\n- \u6ca1\u6709\u522b\u7684\u4ec0\u4e48\u5947\u602a\u5b57\u7b26\uff08\u9664 `0,1,2,3,4,5,6,7,8,9,:,.` \u4e4b\u5916\uff09\u3002\n\n\u7136\u540e\u518d\u6a21\u4eff\u6211\u4eec\u7684\u5feb\u901f\u8bfb\u5165\u5199\u6cd5\uff0c\u8bfb\u5165\u7684\u65f6\u5019\u6ce8\u610f\u5224\u65ad\u4e00\u4e0b\u524d\u5bfc\u96f6\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6ce8\u610f\u5230\u672c\u9898\u6570\u636e\u8303\u56f4\uff0c\u6709\u53ef\u80fd\u67d0\u4e9b\u5199\u6cd5\u9700\u8981\u5f00 long long\uff0c\u4f46\u662f\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u52a8\u6001\u68c0\u9a8c\uff0c\u4e0d\u5408\u7406\u5373\u9000\u51fa\uff0c\u8fd9\u6837\u5c31\u4e0d\u662f\u5f88\u56f0\u96be\uff0c\u4e5f\u4e0d\u9700\u8981\u5f00 long long\u3002\n\n\u8be6\u89c1\u4ee3\u7801\u5b9e\u73b0\u90e8\u5206\u5427\u3002\n\n```cpp\n#include<map>\n#include<cstdio>\n#include<string>\n#include<iostream>\nconst int N=(int)1e3+5;\nstd::map<std::string,int>map;\ninline int in();\ninline bool check(std::string);\nint main(int argc,char**argv){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"7911.in\",\"r\",stdin);\n\tfreopen(\"7911.out\",\"w\",stdout);\n#endif\n\tstd::ios::sync_with_stdio(false);\n\tregister int n=in();\n\tfor(register int i=1;i<=n;++i){\n\t\tstd::string op,ad;\n\t\tstd::cin>>op>>ad;\n\t\tif(!check(ad))std::cout<<\"ERR\\n\";\n\t\telse if(op[0]=='S'){\n\t\t\tif(map.count(ad))\n\t\t\t\tstd::cout<<\"FAIL\\n\";\n\t\t\telse{\n\t\t\t\tmap[ad]=i;\n\t\t\t\tstd::cout<<\"OK\\n\";\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(map.count(ad)){\n\t\t\t\tstd::cout<<map[ad]<<std::endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tstd::cout<<\"FAIL\\n\";\n\t\t\t}\n\t\t}\n\t}\n}\ninline bool check(std::string str){\n\tregister int cnt1=0,cnt2=0;\n\tregister int len=str.size();\n\tfor(register int i=0;i<len;++i){\n\t\tif(str[i]=='.')\n\t\t\t++cnt1;\n\t\tif(str[i]==':')\n\t\t\t++cnt2;\n\t\tif(cnt2==1&&cnt1<3)return 0;\n\t\t// \u5192\u53f7\u5fc5\u987b\u51fa\u73b0\u5728\u70b9\u4e4b\u540e\n\t\tif((str[i]<'0'||str[i]>'9')&&(str[i]!='.')&&(str[i]!=':'))\n\t\t\treturn 0;\n\t\t// \u51fa\u73b0\u4e86\u6211\u4e5f\u4e0d\u77e5\u9053\u662f\u5565\u7684\u5947\u602a\u7b26\u53f7\n\t}\n\tif(cnt1!=3||cnt2!=1)return 0;\n\tint num[5]={-1,-1,-1,-1,-1};\n\tregister int now=0;\n\tstr[len]='.';\n\tfor(register int i=0;i<len;++i){\n\t\tif(num[now]==-1&&(str[i]<'0'||str[i]>'9'))\n\t\t\t// \u975e\u6570\u5b57\n\t\t\treturn 0;\n\t\telse if(num[now]==-1&&(str[i]=='0'&&str[i+1]!='.'&&str[i+1]!=':'))\n\t\t\treturn 0; // \u524d\u5bfc 0\n\t\telse if(str[i]<'0'||str[i]>'9')\n\t\t\t// \u4e00\u4e2a\u65ad\u70b9\n\t\t\t++now;\n\t\telse if(num[now]==-1)\n\t\t\tnum[now]=(str[i]&15);\n\t\telse\n\t\t\tnum[now]=(num[now]<<1)+(num[now]<<3)+(str[i]&15);\n\t\t\t// \u666e\u901a\u6570\u5b57\u8bfb\u5165\n\t\tif(num[now]>65535)return 0;\n\t}\n\tregister bool tp1=(0<=num[0]&&num[0]<=255);\n\tregister bool tp2=(0<=num[1]&&num[1]<=255);\n\tregister bool tp3=(0<=num[2]&&num[2]<=255);\n\tregister bool tp4=(0<=num[3]&&num[3]<=255);\n\tregister bool tp5=(0<=num[4]&&num[4]<=65535);\n\treturn tp1&&tp2&&tp3&&tp4&&tp5;\n}\ninline int in(){\n\tregister int x;\n\tstd::cin>>x;\n\treturn x;\n}\n```",
        "postTime": 1635732551,
        "uid": 50606,
        "name": "\u8a00\u7422\u10d3",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011P7911 [CSP-J 2021] \u7f51\u7edc\u8fde\u63a5"
    },
    {
        "content": "\u4e0d\u662f\uff0c\u4e00\u5e74\u4e00\u9053\u5927\u6a21\u62df\u6709\u610f\u4e49\u5417\u3002\u3002\u3002\n\nJ \u5199\u7684\u6700\u957f\u7684\u4ee3\u7801![](//\u5567.tk/tuu)\n\n## \u505a\u6cd5\n\n\u5927\u6982\u5c31\u662f\uff0c`map` \u8bb0\u5f55\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u670d\u52a1\u5668\u5730\u5740\uff0c\u53ef\u4ee5\u7528 `hash` \u538b\u6210\u4e00\u4e2a `ll`\uff0c\u7136\u540e\u5927\u6982\u5c31\u53ea\u6709\u5224\u5408\u6cd5\u7684\u95ee\u9898\u4e86\u3002\n\n\u4e3b\u8981\u5206\u51e0\u4e2a\u90e8\u5206\uff1a\n\n+ \u6570\u503c\u6709\u6ca1\u6709\u5927\u4e8e $256/65536$\uff1b\n+ `.` \u6216\u8005 `:` \u7684\u4e2a\u6570\u6709\u6ca1\u6709\u8d85\u8fc7\u9650\u5236\uff1b\n+ \u672b\u5c3e\u662f\u4e0d\u662f\u6570\u5b57\uff1b\n\n\u4e4b\u7c7b\u7684\uff0c\u4e3b\u8981\u5c31\u8fd9\u4e9b\u611f\u89c9\u4f1a\u51fa\u9519\u7684\u5730\u65b9\u3002\n\n\u5224\u4f4d\u6570\u76f4\u63a5\u5199\u4e2a\u51fd\u6570 `pop(ll x)` \u5c31\u53ef\u4ee5\u4e86\uff0c\u6ce8\u610f $0$ \u8981\u5360\u4e00\u4f4d\u3002\n\n\u7136\u540e\u53d1\u73b0\u53ef\u80fd\u5b58\u4e0d\u4e0b\u6781\u9650\u60c5\u51b5\u4e0b\u7684\u4e00\u4e2a\u6570 $10^{25}-1$ \u56e0\u6b64\u6700\u597d\u4e00\u65e6\u8d85\u8fc7\u4e86\u76f4\u63a5\u5224\u6389\u3002\n\n## \u4ee3\u7801\n\n\u67d0\u4e9b\u5730\u65b9\u770b\u8d77\u6765\u5199\u7684\u6bd4\u8f83\u7e41\u7410\u3002\u3002\u3002\n\n```\n#include<bits/stdc++.h>\n#define INF 0x3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\ninline ll read(){\n\tll x=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-'0',c=getchar();}\n\treturn x*f;\n}\nll n,a[19],l[19],r[19],tot,qwq,cnt1,cnt2,len,flag=1;\nchar s[100],ad[100];\nll pop(ll x){\n\tif(x==0) return 1;\n\tll ans=0;\n\twhile(x) ans++,x/=10;\n\treturn ans;\n}\nvoid split(){\n\tcnt1=cnt2=0;\n\tmemset(l,0,sizeof(l)),memset(r,0,sizeof(r)),memset(a,0,sizeof(a));\n\tfor(int i=1;i<=len;i++){\n\t\tif(cnt1+cnt2>=5){flag=0;break;}\n\t\tif(cnt2==1&&cnt1<3){flag=0;break;}\n\t\tif(cnt1>3){flag=0;break;}\n\t\tif(cnt2>1){flag=0;break;}\n\t\tif(ad[i]=='.'){\n\t\t\tif(ad[i-1]=='.'||ad[i-1]==':'){flag=0;break;}\n\t\t\tr[cnt1+cnt2+1]=i-1;\n\t\t\tfor(int j=l[cnt1+cnt2+1];j<i;j++){\n\t\t\t\ta[cnt1+cnt2+1]*=10,a[cnt1+cnt2+1]+=ad[j]-'0';\n\t\t\t\tif(a[cnt1+cnt2+1]>=256){flag=0;break;}\n\t\t\t}\n\t\t\tif(flag==0) break;\n\t\t    cnt1++;continue;\n\t\t}\n\t\tif(ad[i]==':'){\n\t\t\tif(ad[i-1]=='.'||ad[i-1]==':'){flag=0;break;}\n\t\t\tr[cnt1+cnt2+1]=i-1;\n\t\t\tfor(int j=l[cnt1+cnt2+1];j<i;j++){\n\t\t\t\ta[cnt1+cnt2+1]*=10,a[cnt1+cnt2+1]+=ad[j]-'0';\n\t\t\t\tif(a[cnt1+cnt2+1]>=256ll){flag=0;break;}\n\t\t\t}\n\t\t\tif(flag==0) break;\n\t\t\tcnt2++;continue;\n\t\t}\n\t\tif(!l[cnt1+cnt2+1]) l[cnt1+cnt2+1]=i;\n\t}\n\tif(flag==0) return;\n\tif(cnt1+cnt2>=5){flag=0;return;}\n\tif(cnt1<3||cnt2<1){flag=0;return;}\n\tif(!isdigit(ad[len])){flag=0;return;}\n\tr[5]=len;\n\tfor(int i=l[5];i<=len;i++){\n\t\ta[5]*=10,a[5]+=ad[i]-'0';\n\t\tif(a[5]>=65536ll){flag=0;break;}\n\t}\n}\nll check(){\n\tflag=1;\n\tsplit();\n\tif(!flag) return 0;\n\tfor(int i=1;i<=5;i++){\n\t\tif(pop(a[i])!=r[i]-l[i]+1){flag=0;break;}\n\t}\n\treturn flag;\n}\nmap<ll,ll> mp;\nint main(){\n\t//freopen(\"network.in\",\"r\",stdin);\n\t//freopen(\"network.out\",\"w\",stdout);\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s%s\",s+1,ad+1);\n\t\tlen=strlen(ad+1);\n\t\tif(s[1]=='S'){\n\t\t\tif(!check()) printf(\"ERR\\n\");\n\t\t\telse{\n\t\t\t\tqwq=0;\n\t\t\t\tqwq=4294967296ll*256ll*a[1]+16777216ll*256ll*a[2]+65536ll*256ll*a[3]+65536ll*a[4]+a[5];\n\t\t\t\tif(mp[qwq]) printf(\"FAIL\\n\");\n\t\t\t\telse mp[qwq]=i,printf(\"OK\\n\");\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(!check()) printf(\"ERR\\n\");\n\t\t\telse{\n\t\t\t\tqwq=0;\n\t\t\t\tqwq=4294967296ll*256ll*a[1]+16777216ll*256ll*a[2]+65536ll*256ll*a[3]+65536ll*a[4]+a[5];\n\t\t\t\tif(mp[qwq]) printf(\"%lld\\n\",mp[qwq]);\n\t\t\t\telse printf(\"FAIL\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1635001755,
        "uid": 278629,
        "name": "Rubidium_Chloride",
        "ccfLevel": 7,
        "title": "\u51fa\u9898\u4eba\u6ca1\u9a6c\u7684\u5927\u6a21\u62df"
    },
    {
        "content": "## 0x01 \u524d\u8a00\n\n\u90fd\u8bf4 CSP-J \u7684 T3 \u6bd4 T4 \u96be\uff0c\u8fd9\u56de\u53ef\u6253\u4e86\u8138\n\n\u4e00\u4e2a\u7b80\u5355\u6a21\u62df\n\n---\n\n## 0x02 \u601d\u8def\n\n\u9898\u610f\u4e0d\u7528\u7b80\u8ff0\u4e86~\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\uff0c\u5224\u65ad\u5408\u6cd5\u662f\u4e2a\u5f88\u91cd\u8981\u7684\u8fc7\u7a0b\uff0c\u5728\u8fd9\u91cc\u5148\u8d34\u4e0b\u4ee3\u7801\uff0c\u8bf7**\u4ed4\u7ec6**\u770b\u6ce8\u91ca\uff1a\n\n```cpp\n\tbool outs(int num, int l=0, int r=256) { return !(l <= num && num < r); }\n\tbool legal(string& s, Net& nt)\n\t{\n\t\tint dt = 0, mh = 0; // dt-> '.' \u7684\u4e2a\u6570\n\t\tnt.p = (s[0] == 'C'); // mh-> ':' \u7684\u4e2a\u6570\n\t\tRep(i, s.size())\n\t\t{\n\t\t\tif(s[i] == '.') ++dt;\n\t\t\tif(s[i] == ':') ++mh;\n\t\t\tif(s[i] == ':' && dt != 3) return 0; // \u5192\u53f7\u653e\u6700\u540e\uff0c\u4e00\u4e2a\u6298\u78e8\u4e86\u6211\u597d\u4e45\u7684\u6570\u636e\uff1a1:2.3.4.5\n\t\t\tif(!isdigit(s[i]) && s[i] != '-') s[i] = ' '; // \u5c06\u975e\u6570\u5b57\u6216\u8d1f\u53f7\u7684\u4e1c\u4e1c\u53d8\u6210\u7a7a\u683c\uff0c\u6709\u52a9\u4e8e\u540e\u9762stringstream\u8bfb\u5165\n\t\t\tif(s[i] == '0' && (!i || s[i-1] == ' ') && isdigit(s[i+1])) // \u524d\u5bfc0\uff0c\u6ce8\u610f 1.2.3.0:4 \u662f\u5408\u6cd5\u7684\n\t\t\t\treturn 0;\n\t\t}\n\t\tif(dt != 3 || mh != 1) return 0; // \u4e2a\u6570\u4e0d\u5bf9\n\t\tstringstream ss(s);\n\t\tif(!(ss >> nt.a >> nt.b >> nt.c >> nt.d >> nt.e)) return 0; // \u5982\u679c\u5c11\u4e8e5\u4e2a\u6570\u4e5f\u4e0d\u5408\u6cd5\n\t\tnt.hashn = nt.e + (nt.d << 16) + (nt.c << 24) + (nt.b << 32) + (nt.a << 40); //hash\u53ef\u4ee5\u8df3\u8fc7\uff0c\u767d\u8d39\u52b2\n\t\treturn !(outs(nt.a) || outs(nt.b) ||\n\t\t\touts(nt.c) || outs(nt.d) || outs(nt.e, 0, 65536)); // \u4e0d\u8d85\u51fa\u8303\u56f4\n\t} // \u8fd9\u51fd\u6570\u8fd8\u6709\u987a\u4fbf\u5904\u7406string\u7684\u529f\u80fd\n```\n\n\u5176\u6b21\uff0c\u5224\u91cd\n\n$ n \\leq 1000$ \uff0c\u53ef\u4ee5\u7b80\u5355\u7528 set \u3002\n\n\u7b2c\u4e09\uff0c\u8bb0\u5f55\u7b2c\u51e0\u53f0\u7535\u8111\n\n\u4e00\u4e2a $id$ \u5b8c\u4e8b\u3002\n\n\u6700\u540e\uff0c\u8bfb\u5165\u7528 getline \u8bfb\u4f1a\u53ea\u8bfb\u5230\u4e2a\u6362\u884c\n\n\u89e3\u51b3\u65b9\u6cd5\uff1a\u5148\u8bfb\u5165\u4e2a\u5b57\u7b26 $c$ \uff0c\u8fd9\u65f6\u8fc7\u6ee4\u6362\u884c\uff0c\u6700\u540e\u518d\u628a $c$ \u63d2\u8fdb string \u91cc\u3002\n\n## 0x03 \u4ee3\u7801\n\n```cpp\n\t#include<bits/stdc++.h>\n\t#define int long long\n\t#define Rep(i, n) for(int i=0; i< n; i++)\n\t#define Rpp(i, n) for(int i=0; i<=n; i++)\n\t#define Pinf 0x3f3f3f3f3f3f3f3fLL\n\t#define Ninf 0xcfcfcfcfcfcfcfcfLL\n\tusing namespace std;\n\t\n\tstruct Net\n\t{\n\t\tint a, b, c, d, e, th;\n\t\tbool p; int hashn;\n\t/*\n \t * a, b, c, d, e \u5982\u9898 \n \t * p=1 -> \u5ba2\u6237\uff0c p=0 -> \u670d\u52a1\n \t * hashn = e + (d << 16) + (c << 24) + (b << 32) + (a << 40)\n \t **/\n\t};\n\n\tset <Net> Set;\n\n\tbool operator== (Net a, Net b) { return a.hashn == b.hashn; }\n\tbool operator< (Net a, Net b) { return a.hashn < b.hashn; }\n  \n\t//legal \u51fd\u6570\u7565\n\n\tsigned main()\n\t{\n\n\t\tint n; cin >> n;\n\t\tRep(i, n)\n\t\t{\n\t\t\tstring s;\n\t\t\tchar c; cin >> c; // \u4e0a\u6587\u63d0\u5230\u7684\u6280\u5de7\n\t\t\tgetline(cin, s);\n\t\t\ts = c + s;\n//\t\t\tcout << s << endl;\n\t\t\tNet nt;\n\t\t\tif(!legal(s, nt)) { cout << \"ERR\\n\"; continue; }\n\t\t\n\t\t\tif(nt.p == 1)\n\t\t\t{\n\t\t\t\tif(Set.count(nt)) // set\u67e5\u627e\n\t\t\t\t\tcout << ((Set.find(nt)) -> th) << '\\n'; // \u7b2c\u51e0\u53f0\u7535\u8111\u7528 th \u8bb0\u5f55\n\t\t\t\telse cout << \"FAIL\\n\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(Set.count(nt)) cout << \"FAIL\\n\";\n\t\t\t\telse { nt.th = i+1; Set.insert(nt); cout << \"OK\\n\"; }\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn 0;\n\t}\n\n```\n\n## 0x04 \u603b\u7ed3\n\n\u4e00\u9053\u5f88\u6c34\u7684\u6a21\u62df\u9898\u3002 CSP \u6700\u6c34 T3 \u3002",
        "postTime": 1634996404,
        "uid": 380730,
        "name": "LKX_Wata",
        "ccfLevel": 7,
        "title": "CSP-J 2021 T3 \u9898\u89e3"
    },
    {
        "content": "**\u601d\u8def\uff1a**\n\n\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u5224\u65ad\u5408\u6cd5\u548c\u8fde\u63a5\u670d\u52a1\u673a\uff08\u6216\u5efa\u7acb\u8fde\u63a5\uff09\u3002\n\n\u7b2c\u4e8c\u4e2a\u90e8\u5206\u53ef\u4ee5\u901a\u8fc7 STL \u91cc\u7684 map \u8f7b\u6613\u5b9e\u73b0\uff1a\u4ee5\u5730\u5740\u5b57\u7b26\u4e32\u4f5c\u4e3a\u4e0b\u6807\u5b58\u50a8\u670d\u52a1\u673a\u7f16\u53f7\u5373\u53ef\u3002\n\n\u7b2c\u4e00\u4e2a\u90e8\u5206\u6574\u4f53\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u5c0f\u90e8\u5206\uff1a\u662f\u5426\u7b26\u5408\u7c7b\u4f3c $1 . 1 . 1 . 1:1$\uff0c\u91cc\u9762\u7684\u6570\u662f\u5426\u7b26\u5408\u8303\u56f4\uff0c\u662f\u5426\u542b\u6709\u591a\u4f59\u524d\u5bfc\u96f6\u3002\n\n**AC\u4ee3\u7801\uff1a**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nmap<string, int> h;\nint f(int x) {  // \u8fd4\u56de\u6570\u5b57\u4f4d\u6570\n    int c = 0;\n    for(; x; x /= 10, c++);\n    return c ? c : 1;\n}\nbool check(string s) {// \u68c0\u9a8c ip \u5730\u5740\u662f\u5426\u5408\u6cd5\n    // \u68c0\u9a8c ip \u5730\u5740\u4e2d\u7684\u6570\u5b57\u4e32\u662f\u5426\u5408\u6cd5\u4ee5\u53ca\u5206\u9694\u7b26\u662f\u5426\u4e3a \"...:\"\n    string tmp;// \u5b58\u50a8\u5206\u9694\u7b26\n    int x = 0, c = 0;// \u6570\u5b57\u4e32\u5bf9\u5e94\u6570\u503c\u548c\u4f4d\u6570\n    for(int i = 0; i < s.size(); i++)// \u68c0\u9a8c\u6570\u5b57\u4e32\u662f\u5426\u5408\u6cd5\n        if(s[i] >= '0' && s[i] <= '9')// \u66f4\u65b0\u6570\u5b57\u4e32\n            x = x * 10 + s[i] - '0', c++;\n        else {\n            if (!c || c > 3 || x > 255 || f(x) != c)// \u4f4d\u6570\u3001\u6570\u503c\u3001\u524d\u5bfc 0 \u4e0d\u5408\u6cd5\n                return 0;\n            tmp += s[i], x = c = 0;\n        }\n    return tmp == \"...:\" && c > 0 && c < 6 && x < 65536 && f(x) == c;// \u68c0\u9a8c\u5206\u9694\u7b26\u548c\u6570\u5b57\u4e32\u662f\u5426\u5408\u6cd5\n}\nint main() {\n    cin >> n;\n    for(int i = 1; i <= n; i++) {\n        string type, ip;\n        cin >> type >> ip;\n        if(!check(ip))// ip \u5730\u5740\u4e0d\u5408\u6cd5\n            cout << \"ERR\" << endl;\n        else if(type == \"Server\")\n            if(h.find(ip) == h.end()) {// \u4e0d\u5b58\u5728 ip \u5730\u5740\u76f8\u540c\u7684\u670d\u52a1\u5668\n                cout << \"OK\" << endl;\n                h[ip] = i;\n            }\n            else// \u5b58\u5728 ip \u5730\u5740\u76f8\u540c\u7684\u670d\u52a1\u5668\n                cout << \"FAIL\" << endl;\n        else {\n            if(h.find(ip) == h.end())// \u4e0d\u5b58\u5728 ip \u5730\u5740\u76f8\u540c\u7684\u670d\u52a1\u5668\n                cout << \"FAIL\" << endl;\n            else// \u5b58\u5728 ip \u5730\u5740\u76f8\u540c\u7684\u670d\u52a1\u5668\n                cout << h[ip] << endl;\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1636270753,
        "uid": 374330,
        "name": "ACACACACACACACACACAC",
        "ccfLevel": 6,
        "title": "P7911"
    },
    {
        "content": "# 0x00 \u601d\u8def\n~~\u59a5\u59a5\u7684\u300a\u9605 \u8bfb \u7406 \u89e3\u300b~~\n\n\u8fd9\u4e48\u957f\u7684\u9898\u9762\u771f\u8ba9\u4eba\u4e0d\u723d\u3002\n\n\u6765\u5427\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u770b\uff0c\u8fd9\u4ee4\u4eba\u4e0d\u723d\u7684\u9898\u9762\u3002\n\n>\u5728\u672c\u95ee\u9898\u4e2d\uff0c\u8ba1\u7b97\u673a\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a\u670d\u52a1\u673a\uff08`Server`\uff09\u548c\u5ba2\u6237\u673a\uff08`Client`\uff09\u3002\n\n>\u9700\u8981\u8fdb\u884c\u7f51\u7edc\u8fde\u63a5\u7684\u8ba1\u7b97\u673a\u5171\u6709 $n$ \u53f0\uff0c\u7f16\u53f7\u4e3a $1 \\sim n$\uff0c\u8fd9\u4e9b\u673a\u5668\u5c06\u6309**\u7f16\u53f7\u9012\u589e**\u7684\u987a\u5e8f\uff0c**\u4f9d\u6b21\u53d1\u8d77\u4e00\u6761**\u5efa\u7acb\u8fde\u63a5\u6216\u52a0\u5165\u8fde\u63a5\u7684\u64cd\u4f5c\u3002\n\n>\u6bcf\u53f0\u673a\u5668\u5728\u5c1d\u8bd5\u5efa\u7acb\u6216\u52a0\u5165\u8fde\u63a5\u65f6\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u5730\u5740\u4e32\u3002**\u670d\u52a1\u673a**\u63d0\u4f9b\u7684\u5730\u5740\u4e32\u8868\u793a\u5b83**\u5c1d\u8bd5\u5efa\u7acb\u8fde\u63a5**\u7684\u5730\u5740\uff0c**\u5ba2\u6237\u673a**\u63d0\u4f9b\u7684\u5730\u5740\u4e32\u8868\u793a\u5b83**\u5c1d\u8bd5\u52a0\u5165\u8fde\u63a5**\u7684\u5730\u5740\u3002\n\n>\u4e00\u4e2a**\u7b26\u5408\u89c4\u8303**\u7684\u5730\u5740\u4e32\u5e94\u5f53\u5177\u6709\u4ee5\u4e0b\u7279\u5f81\uff1a\n\n>1. **\u5fc5\u987b\u5f62\u5982 `a.b.c.d:e` \u7684\u683c\u5f0f**\uff0c\u5176\u4e2d $a, b, c, d, e$ \u5747\u4e3a**\u975e\u8d1f\u6574\u6570**\u3002\n>1. $0 \\le a, b, c, d \\le 255$\uff0c$0 \\le e \\le 65535$\u3002\n>1. $a, b, c, d, e$ \u5747\u4e0d\u80fd\u542b\u6709**\u591a\u4f59\u7684\u524d\u5bfc** $0$\u3002\n\n>\u5728\u672c\u95ee\u9898\u4e2d\uff0c\u6211\u4eec\u5047\u5b9a\u51e1\u662f**\u7b26\u5408\u4e0a\u8ff0\u89c4\u8303**\u7684\u5730\u5740\u4e32**\u5747\u53ef\u53c2\u4e0e**\u6b63\u5e38\u7684\u8fde\u63a5\u2026\u2026**\u5982\u679c\u6709\u4e24\u53f0\u670d\u52a1\u673a\u4f7f\u7528\u76f8\u540c\u7684\u5730\u5740\u4e32**\uff0c**\u540e\u4e00\u53f0**\u5c1d\u8bd5\u5efa\u7acb\u8fde\u63a5\u7684\u670d\u52a1\u673a\u5c06\u4f1a**\u65e0\u6cd5\u6210\u529f\u5efa\u7acb\u8fde\u63a5**\u2026\u2026\u5982\u679c\u67d0\u53f0\u63d0\u4f9b\u7b26\u5408\u89c4\u8303\u7684\u5730\u5740\u7684\u5ba2\u6237\u673a\u5728\u5c1d\u8bd5\u52a0\u5165\u8fde\u63a5\u65f6\uff0c\u4e0e**\u5148\u524d**\u67d0\u53f0\u5df2\u7ecf**\u6210\u529f\u5efa\u7acb\u8fde\u63a5\u7684**\u670d\u52a1\u673a\u63d0\u4f9b\u7684**\u5730\u5740\u4e32\u76f8\u540c**\uff0c\u8fd9\u53f0\u5ba2\u6237\u673a\u5c31\u53ef\u4ee5\u6210\u529f\u52a0\u5165\u8fde\u63a5\uff0c\u5e76\u79f0\u5176\u8fde\u63a5\u5230\u8fd9\u53f0\u670d\u52a1\u673a\uff1b**\u5982\u679c\u627e\u4e0d\u5230**\u8fd9\u6837\u7684\u670d\u52a1\u673a\uff0c\u5219\u8ba4\u4e3a\u8fd9\u53f0\u5ba2\u6237\u673a**\u65e0\u6cd5\u6210\u529f\u52a0\u5165\u8fde\u63a5**\u2026\u2026**\u591a\u53f0\u5ba2\u6237\u673a\u4f7f\u7528\u540c\u6837\u7684\u5730\u5740\u4e32\u7684\u60c5\u51b5\u662f\u88ab\u5141\u8bb8\u7684**\u3002\n\n\u597d\u4e86\uff0c\u8fd9\u5c31\u662f\u90a3~~\u53c8\u81ed\u53c8\u957f\u7684~~\u9898\u9762\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5f88\u660e\u786e\u7684\u4ece\u9898\u9762\u4e2d\u770b\u5230\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u6a21\u62df\u800c\u5df2\u3002\n\n# 0x01 \u884c\u52a8\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6709\u670d\u52a1\u673a\u548c\u5ba2\u6237\u673a\u4e24\u79cd\u673a\u578b\u3002\u4f46\u8fd9\u4e24\u79cd\u673a\u578b\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u7684\u8f93\u51fa\uff1a`ERR`\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f18\u5148\u89e3\u51b3\u8fd9\u79cd\u60c5\u51b5\u3002\n\n## 0x010 ERR\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e00\u79cd\u8f93\u51fa\u662f\u7531\u4e8e\u8f93\u5165\u5b57\u7b26\u4e32\u4e0d\u5408\u6cd5\u800c\u5bfc\u81f4\u7684\u9519\u8bef\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u68c0\u67e5\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u5730\u5740\u4e32\u7684\u683c\u5f0f\uff08`a.b.c.d:e`\uff09\u8fdb\u884c\u68c0\u67e5\u3002\n\n1. \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u5730\u5740\u4e32\u7684**\u6700\u524d\u9762**\u662f\u4e00\u4e2a**\u6570\u5b57**\uff0c\u90a3\u4e48\u5982\u679c\u5728**\u7b2c\u4e00\u4e2a\u6570\u5b57\u524d**\u6211\u4eec\u627e\u5230\u4e86 `.` \u6216 `:`\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u5408\u6cd5\u3002\n2. \u5176\u6b21\uff0c\u53ea\u6709 $3$ \u4e2a `.`\uff0c$1$ \u4e2a`:`\uff0c$5$ \u4e2a\u6570\u5b57\u3002\u82e5\u627e\u5230 `.`\u3001`:`\u3001\u6570\u5b57\u4e2a\u6570\u4e0d\u4e3a $3$\u3001$1$\u3001$5$\uff08~~315\uff0c\u597d\u8036~~\uff09,\u5219\u4e5f\u4e0d\u5408\u6cd5\u3002\n3. \u7b2c\u4e09\uff0c\u6bcf\u4e2a\u6570\u524d\u6ca1\u6709\u524d\u5bfc $0$\u3002\n4. \u8fd8\u6709\uff0c$0 \\le a, b, c, d \\le 255$\uff0c$0 \\le e \\le 65535$\u3002\n5. \u6700\u540e\uff0c`:` \u8981\u662f\u5728\u67d0\u4e2a `.` \u524d\u9762\u51fa\u73b0\u4e86\uff0c\u540c\u6837\u4e0d\u5408\u6cd5\u3002\n\n## code\n```c\nbool check(string ad)\n{\n\tint len=ad.length(),i,point=0,mao=0,num=0,sum;\n\tfor(i=0;i<len;i++)\n\t{\n\t\tsum=-1;\n\t\twhile(ad[i]>='0'&&ad[i]<='9'&&i<=len)\n\t\t{\n\t\t\tif(ad[i]=='0'&&sum==-1&&ad[i+1]>='0'&&ad[i+1]<='9')//\u7b2c3\u6761\n\t\t\t\treturn 0;\n\t\t\tif(sum==-1)\n\t\t\t\tsum=0;\n\t\t\tsum=(sum<<1)+(sum<<3)+(ad[i]^48);\n\t\t\tif(num<4&&sum>255)//\u7b2c4\u6761\n\t\t\t\treturn 0;\n\t\t\tif(num==4&&sum>65535)//\u7b2c4\u6761\n\t\t\t\treturn 0;\n\t\t\ti++;\n\t\t}\n\t\tif(sum!=-1)\n\t\t\tnum++;\n\t\tif(num>5)//\u7b2c2\u6761\n\t\t\treturn 0;\n\t\tif(ad[i]=='.')\n\t\t\tpoint++;\n\t\tif(ad[i]==':')\n\t\t\tmao++;\n\t\tif(point>3||mao>1)//\u7b2c2\u6761\n\t\t\treturn 0;\n\t\tif(point<3&&mao>0)//\u7b2c5\u6761\n\t\t\treturn 0;\n\t\tif((point>0||mao>0)&&num==0)//\u7b2c1\u6761\n\t\t\treturn 0;\n\t\tif(ad[i]!='.'&&ad[i]!=':'&&ad[i]!=0)//\u82e5\u6709\u5176\u4ed6\u7269\u54c1\u4e00\u5f8b\u4e0d\u7b26\u5408\u89c4\u8303\n\t\t\treturn 0;\n\t}\n\tif(point!=3||mao!=1||num!=5)//\u7b2c2\u6761\n\t\treturn 0;\n\treturn 1;\n}\n```\n\n## 0x011 FAIL&OK\uff08Server\uff09\n~~\u5bf9\u4e8e\u5728\u8003\u573a\u4e0a\u6253\u51fa `FATL` \u7684\u9009\u624b\u4eec\u81f4\u4ee5\u6c89\u91cd\u7684\u9ed8\u54c0\u3002~~\n\n\u5bf9\u4e8e\u8fdb\u884c\u8fde\u63a5\u7684\u670d\u52a1\u673a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u6210\u529f\u8fde\u63a5\u7684\u670d\u52a1\u673a\u5168\u90e8\u5b58\u5165\u4e00\u4e2a `string` \u6570\u7ec4\u4e2d\u6216\u5b58\u5165 `map` \u4e2d\uff0c\u5f53\u53c8\u6709\u4e00\u4e2a\u670d\u52a1\u673a\u5c06\u8981\u521b\u5efa\u8fde\u63a5\u65f6\u8fdb\u884c\u904d\u5386\uff0c\u67e5\u770b\u662f\u5426\u6709\u91cd\u590d\uff0c\u82e5\u6709\u91cd\u590d\u5219\u8f93\u51fa `FAIL`,\u65e0\u91cd\u590d\u8f93\u51fa `OK`\u3002\n\n### code\n```c\nif(op[0]=='S')\n\t\t{\n\t\t\tfor(j=0;j<tot;j++)\n\t\t\t{\n\t\t\t\tif(h[j]==ad)\n\t\t\t\t{\n\t\t\t\t\tputs(\"FAIL\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j!=tot)\n\t\t\t\tcontinue;\n\t\t\th[tot++]=ad;//\u8bb0\u5f55\n\t\t\tHad[tot-1]=i;//\u4e3a Client \u505a\u51c6\u5907\n\t\t\tputs(\"OK\");\n\t\t\tcontinue;\n\t\t}\n```\n## 0x012 FAIL&\u7f16\u53f7\uff08Client\uff09\n\u540c\u6837\u5bf9\u4e8e\u6240\u6709\u6210\u529f\u5efa\u7acb\u8fde\u63a5\u7684\u670d\u52a1\u5668\u8fdb\u884c\u67e5\u627e\u3002\u82e5\u6709\u76f8\u540c\u8f93\u51fa\u7f16\u53f7\uff0c\u82e5\u65e0\u76f8\u540c\u8f93\u51fa `FAIL`\u3002\n### code\n```c\nif(op[0]=='C')\n\t\t{\n\t\t\tfor(j=0;j<tot;j++)\n\t\t\t{\n\t\t\t\tif(h[j]==ad)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d\\n\",Had[j]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j!=tot)\n\t\t\t\tcontinue;\n\t\t\tputs(\"FAIL\");\n\t\t}\n```\n# code\n\u4ee3\u7801\u5df2\u7ecf\u96f6\u661f\u7ed9\u51fa\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u91cd\u7ed9\u3002\n\n~~\u5b8c\u7ed3\u6492\u82b1!!~~ <(\uffe3\u02c7\uffe3)/",
        "postTime": 1635562943,
        "uid": 465692,
        "name": "Harry_Hedwig",
        "ccfLevel": 6,
        "title": "P7911 [CSP-J 2021] \u7f51\u7edc\u8fde\u63a5 \u9898\u89e3"
    },
    {
        "content": "Pj \u8003\u8fd9\u4e48\u7b80\u5355\u7684\u5927\u819c\u4f60\u4e5f\u771f\u662f\u592a\u826f\u5fc3\u4e86\u3002\u89c4\u5219\u4e5f\u4e0d\u590d\u6742\uff0c\u548c[\u65f6\u95f4\u590d\u6742\u5ea6](https://www.luogu.com.cn/problem/P3952)\u5b8c\u5168\u4e0d\u80fd\u6bd4\u3002\u3002\u3002  \n\n\u5224\u65ad `ERR` \u7684\u60c5\u51b5\u4e4b\u540e\u7528 `map<string, int>` \u6765\u5b58\u67d0\u4e2a `Server` \u7684 IP \u53f7\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u6709\u4e00\u5b9a\u5e38\u6570\u3002\u91cd\u70b9\u653e\u5728\u5224 `ERR` \u4e0a\u3002\n\n\u6211\u7684\u65b9\u6848\u662f\u5206\u522b\u5224\u6bcf\u4e00\u6bb5\u3002\u201c\u6bb5\u201d\u7684\u5b9a\u4e49\u662f\u88ab\u7b26\u53f7\u5206\u9694\u5f00\u7684\u4f4d\u7f6e\u3002\u8fd9\u91cc\u653e\u4e00\u6bb5\u6838\u5fc3\u4ee3\u7801\uff0c\u65b9\u4fbf\u89e3\u91ca\u3002  \n\n```cpp\nil int nlen(int k)\n{\n\tif (!k) return 1;\n\tint cnt = 0;\n\twhile (k) cnt++, k /= 10;\n\treturn cnt;\n}\n\nil bool gnoc(const string s, int &a, int lst, int &idx, const char op)\n{\n\tint len = s.size();\n\twhile (isdigit(s[idx]))\n\t{\n\t\tif (idx >= len) return false;\n\t\ta = (a << 1) + (a << 3) + (s[idx++] & 15);\n\t\tif (a > 255) return false;\n\t}\n\tif (idx + 1 >= len || s[idx] != op) return false;\n\tif (nlen(a)^(idx - 1 - lst + 1)) return false;\n\treturn true;\n}\n```  \n`nlen(k)` \u5c06\u8fd4\u56de\u4e00\u4e2a\u6570\u7684\u4f4d\u6570\u3002\u6ce8\u610f\u7279\u5224 `0` \u7684\u60c5\u51b5\u3002`gnoc` \u8868\u793a\u4e32 `s` \u4ece `lst` \u5230 `idx` \u8fd9\u4e00\u6bb5\u7684\u6570\u7684\u503c\u662f\u5426\u7b26\u5408\u8981\u6c42\u3001\u8fd9\u4e00\u6bb5\u540e\u9762\u7684\u90a3\u4e00\u4e2a\u7b26\u53f7\u662f\u5426\u4e0e `op` \u76f8\u540c\u3002\u7ec6\u8282\u662f\u5982\u679c\u8fd9\u4e2a\u6570\u7684\u5b9e\u9645\u4f4d\u6570\u4e0e\u8fd9\u4e00\u6bb5\u672c\u6765\u7684\u4f4d\u6570\u4e0d\u540c\uff0c\u8868\u793a\u6709\u524d\u5bfc\u96f6\uff0c\u4e0d\u5408\u8981\u6c42\uff1b\u5982\u679c\u5728\u8fd0\u7b97\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8d85\u51fa\u4e86 225\uff0c\u5c31\u4e0d\u5408\u8981\u6c42\u3002\u5982\u679c\u628a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8303\u56f4\u5f00\u5927\uff0c\u53ea\u80fd\u8fd9\u6837\u907f\u514d\u3002\u5f53\u7136\uff0c\u5f00 `long long` \u4e5f\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u9898\u76ee\u9650\u5236\u4e86\u5b57\u7b26\u4e32\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e 25\uff0c\u5426\u5219\u9664\u4e86\u8fd9\u6837\u505a\u6ca1\u6709\u5176\u4ed6\u65b9\u6cd5\u3002  \n\n\u6700\u540e\u6309\u7167\u8fd9\u4e2a\u601d\u8def\u4e71\u641e\u5c31\u884c\u4e86\u3002   \n\n[AC code \u8bb0\u5f55](https://www.luogu.com.cn/record/61562875)\n\n```cpp\n#include <bits/stdc++.h>\n#define ......\n#typedef ....... // \u4e00\u4e9b\u5f88\u957f\u7684\u7f3a\u7701\u6e90\ntemplate <typename T>\nil void read(T &x) // \u5feb\u8bfb\n\ntemplate <typename T>\nil void write(T x) // \u5feb\u8f93\n\nil int nlen(int k)\n{\n\tif (!k) return 1;\n\tint cnt = 0;\n\twhile (k) cnt++, k /= 10;\n\treturn cnt;\n}\n\nil bool gnoc(const string s, int &a, int lst, int &idx, const char op)\n{\n\tint len = s.size();\n\twhile (isdigit(s[idx]))\n\t{\n\t\tif (idx >= len) return false;\n\t\ta = (a << 1) + (a << 3) + (s[idx++] & 15);\n\t\tif (a > 255) return false;\n\t}\n\tif (idx + 1 >= len || s[idx] != op) return false;\n\tif (nlen(a)^(idx - 1 - lst + 1)) return false;\n\treturn true;\n}\n\nil bool ins(int k, int r)\n{\n\treturn k >= 0 && k <= r;\n}\n\nil bool cper(const string s, int &a, int &b, int &c, int &d, int &e)\n{\n\tint idx = 0, len = s.size();\n\tif (!isdigit(s[0]) || len < 9) return false;\n\tint lst = 0;\n\tif (!gnoc(s, a, lst, idx, '.')) return false;\n\tlst = ++idx;\n\tif (!gnoc(s, b, lst, idx, '.')) return false;\n\tlst = ++idx;\n\tif (!gnoc(s, c, lst, idx, '.')) return false;\n\tlst = ++idx;\n\tif (!gnoc(s, d, lst, idx, ':')) return false;\n\tlst = ++idx;\n\trep1(p, lst, len - 1)\n\t{\n\t\tif (!isdigit(s[p])) return false;\n\t\te = (e << 1) + (e << 3) + (s[p] & 15);\n\t\tif (e > 65535) return false;\n\t}\n\tif (nlen(e)^(len - 1 - lst + 1)) return false;\n\tif (!ins(a, 255) || !ins(b, 255) || !ins(c, 255) || !ins(d, 255) || !ins(e, 65535)) return false;\n\treturn true;\n} // \u8fd9\u4e00\u6bb5\u7684\u5b9e\u73b0\u7565\u663e\u6076\u81ed\uff0c\u662f\u56e0\u4e3a\u8003\u573a\u6015\u9519\u3002\u3002\u3002\nint n, a, b, c, d, e;\nstring op, ad;\nmap <string, int>slk;\n\nint main()\n{\n\tread(n);\n\trep1(i, 1, n)\n\t{\n\t\tcin >> op >> ad;\n\t\ta = b = c = d = e = 0;\n\t\tif (!cper(ad, a, b, c, d, e)) puts(\"ERR\");\n\t\telse if (op == \"Server\")\n\t\t{\n\t\t\tif (slk.count(ad)) puts(\"FAIL\");\n\t\t\telse slk[ad] = i, puts(\"OK\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (slk.count(ad)) write(slk[ad]), ptc('\\n');\n\t\t\telse puts(\"FAIL\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1635905060,
        "uid": 409236,
        "name": "StayAlone",
        "ccfLevel": 6,
        "title": "P7911 [CSP-J 2021] \u7f51\u7edc\u8fde\u63a5"
    },
    {
        "content": "# \u7f51\u7edc\u8fde\u63a5\n\n\u63d0\u4ea4\u5730\u5740\uff1a[\u6d1b\u8c37 Luogu7911](https://www.luogu.com.cn/problem/P7911)\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa $n$ \u53f0\u8ba1\u7b97\u673a\uff0c\u6709\u670d\u52a1\u673a\uff08`Server`\uff09\u548c\u5ba2\u6237\u673a\uff08`Client`\uff09\u3002\n\n\u6bcf\u53f0\u670d\u52a1\u673a\u6302\u8f7d\u4e00\u4e2a IPv4 \u5730\u5740\uff08\u5e26\u7aef\u53e3\uff09\uff0c\u6bcf\u53f0\u5ba2\u6237\u673a\u94fe\u63a5\u4e00\u4e2a\u670d\u52a1\u673a\uff08\u901a\u8fc7 IPv4 \u5730\u5740\uff09\u3002\n\n\u5982\u679c IP \u975e\u6cd5\u8f93\u51fa `ERR`\uff0c\u5982\u679c\u670d\u52a1\u673a\u8981\u6302\u8f7d\u7684 IP \u88ab\u5360\u7528\u6216\u5ba2\u6237\u673a\u8981\u94fe\u63a5\u7684 IP \u4e0d\u662f\u5408\u6cd5\u7684\u670d\u52a1\u673a\u8f93\u51fa `FAIL`\uff0c\u5982\u679c\u670d\u52a1\u673a\u6210\u529f\u6302\u8f7d\u8f93\u51fa `OK`\uff0c\u5982\u679c\u5ba2\u6237\u673a\u6210\u529f\u94fe\u63a5\u8f93\u51fa\u8fde\u63a5\u5230\u7684\u670d\u52a1\u673a\u7f16\u53f7\u3002\n\n## \u5206\u6790\n\n\u6ca1\u6253 J \u7ec4\uff0c\u5199\u9898\u89e3\u539f\u56e0\u662f\u770b\u5230\u8fd9\u7bc7\u535a\u5ba2\uff08\u535a\u5ba2\u5df2\u7ecf\u6ca1\u4e86\uff09\uff0c\u7136\u540e\u53d1\u73b0\u539f\u6765 C++11 \u5c31\u6709\u6b63\u5219\u8868\u8fbe\u5f0f\u4e86~~\u6240\u4ee5\u5c31\u5199\u4e86~~\u3002\n\n\u5df2\u7ecf\u6709\u4e00\u7bc7\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u9898\u89e3\u4e86\uff0c\u4e0d\u8fc7\u4e0d\u662f\u7eaf\u6b63\u5219\u5224\u65ad\u5408\u6cd5\u7684\uff0c\u8fd9\u7bc7\u8bb2\u4e00\u4e0b\u5982\u4f55\u7eaf\u6b63\u5219\u5224\u65ad\u5408\u6cd5\u6027\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5224\u65ad IP \u662f\u5426\u5408\u6cd5\uff0c\u7528\u54c8\u5e0c\u6620\u5c04\u8868\u5339\u914d\u8ba1\u7b97\u673a\u3002\n\n### \u6b63\u5219\u8868\u8fbe\u5f0f\n\n\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u7528\u9014\u5f88\u5e7f\u6cdb\u7684\u5de5\u5177\u3002\n\n\u66f4\u5177\u4f53\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u81ea\u884c\u8c37\u6b4c\uff0c\u9644\u7ef4\u57fa\u94fe\u63a5\uff1a[\u6b63\u5219\u8868\u8fbe\u5f0f](https://zh.wikipedia.org/zh-cn/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F)\u3002\n\n\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u8fd9\u9053\u9898\u7528\u5230\u7684\u3002\n\n\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u6a21\u5f0f\u4e32\u5339\u914d\u6587\u672c\u4e32\u5224\u65ad\u6587\u672c\u4e32\u662f\u5426\u7b26\u5408\u8981\u6c42\u3002\n\n`[0-9]` \u53ef\u4ee5\u5339\u914d\u4e00\u4e2a $0 \\sim 9$ \u7684\u5355\u4e2a\u6570\u5b57\uff0c\u90a3\u4e48 `25[0-5]` \u5219\u53ef\u4ee5\u5339\u914d $250 \\sim 255$\uff0c\u5339\u914d `.` \u65f6\u662f\u9700\u8981\u4f7f\u7528 `\\` \u8f6c\u4e49\u7684\uff08`.` \u8868\u793a\u5339\u914d\u9664 `\\r`\u3001`\\n` \u5916\u7684\u4efb\u4f55\u5355\u4e2a\u5b57\u7b26\uff09\uff0c\u800c `\\` \u53c8\u662f C++ \u4e2d\u7684\u8f6c\u4e49\u5b57\u7b26\uff0c\u6240\u4ee5\u5339\u914d `.` \u9700\u8981 `\\\\.` \u624d\u884c\uff0c`:` \u4e5f\u9700\u8981\u8f6c\u4e49\u3002\n\n\u5982\u679c\u60f3\u8981\u4e24\u4e2a\u5339\u914d\u4e2d\u7684\u4e00\u4e2a\u5462\uff1f\n\n\u7528 `|` \u5373\u53ef\uff0c\u5982 `a|b` \u8868\u793a\u5339\u914d `a` \u6216\u8005 `b`\u3002\n\n\u4f46\u662f\u6ce8\u610f `a|bcd` \u5339\u914d\u7684\u662f `a` \u6216\u8005 `bcd`\uff0c\u90a3\u4e48\u600e\u4e48\u5339\u914d `acd` \u6216 `bcd` \u5462\uff1f\n\n\u52a0\u62ec\u53f7\uff01\u7528 `(a|b)cd` \u5c31\u884c\u4e86\u3002\n\n\u5982\u679c\u60f3\u5339\u914d\u7f6e\u9876\u91cd\u590d\u6b21\u6570\u7684\u67d0\u4e2a\u4e32\u5462\uff1f\n\n\u7528 `(<pattern>){<times>}` \u5373\u53ef\uff0c\u5176\u4e2d `()` \u5c06\u62ec\u53f7\u5185\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u5339\u914d\uff0c`{}` \u8868\u793a\u524d\u4e00\u4e2a\u5b57\u6bcd\u6216\u6574\u4f53\u7684\u5339\u914d\u6b21\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6a21\u5f0f\u4e32\u8868\u793a\u5339\u914d $times$ \u6b21 $pattern$ \u4e32\u3002\n\n\u5339\u914d\u4e00\u6b21\u6216\u4e24\u6b21\uff1f\u7528 `?`\u3002\u4efb\u610f\u6b21\uff1f\u7528 `*`\u3002\n\n\u7efc\u4e0a\uff0cIPv4 \u5730\u5740\u7684\u6a21\u5f0f\u4e32\u5c31\u662f\uff1a\n\n```\n(((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|[0-9])\\\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|[0-9])\\\\:((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9][0-9])|(6[0-4][0-9][0-9][0-9])|([1-5][0-9][0-9][0-9][0-9])|([1-9][0-9][0-9][0-9])|([1-9][0-9][0-9])|([1-9][0-9])|[0-9])\n```\n\n\u90a3\u4e48\u600e\u4e48\u5728 C++ \u4e2d\u4f7f\u7528\uff1f\n\n\u9996\u5148 C++ \u6807\u51c6\u81f3\u5c11\u4e3a C++11.\n\n\u5148\u5305\u542b `<regex>` \u5934\u6587\u4ef6\u3002\n\n\u4f7f\u7528 `std::regex` \u5b9a\u4e49\u4e00\u4e2a\u6a21\u5f0f\u4e32\uff0c\u5982\uff1a\n\n```cpp\nconst std::regex pat(\"C\\\\+\\\\+((98)|(11)|(14)|(17)|(20))\"); // + \u4e5f\u9700\u8981\u8f6c\u4e49\uff0c\u8fd9\u91cc\u4e0d\u8bb2\u4e86\n```\n\n\u7136\u540e\u4f7f\u7528 `std::regex_match()` \u6765\u5339\u914d\uff0c\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u6587\u672c\u4e32\uff0c\u7b2c\u4e8c\u4e2a\u662f\u6a21\u5f0f\u4e32\uff0c\u5982\uff1a\n\n```cpp\nstd::regex_match(\"C++11\", pat);\n```\n\n\u8fd4\u56de\u503c\u4e3a\u5e03\u5c14\u7c7b\u578b\uff0c\u8868\u793a\u662f\u5426\u5339\u914d\u6210\u529f\u3002\n\n\u521a\u624d\u51fd\u6570\u8fd4\u56de\u503c\u5e94\u4e3a `true`\u3002\n\n### \u5339\u914d\u8ba1\u7b97\u673a\n\n\u5148\u5224\u65ad IP \u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u5408\u6cd5\u76f4\u63a5\u8f93\u51fa `ERR` \u7136\u540e\u4e0b\u4e00\u4e2a\u3002\n\n\u7136\u540e\u5224\u65ad\u8ba1\u7b97\u673a\u7c7b\u578b\u3002\n\n\u5bf9\u4e8e\u670d\u52a1\u673a\uff0c\u7528\u54c8\u5e0c\u6620\u5c04\u8868\u67e5\u627e IP \u662f\u5426\u88ab\u5360\u7528\uff0c\u6709\uff0c\u8f93\u51fa `FAIL` \u7136\u540e\u4e0b\u4e00\u4e2a\uff0c\u6ca1\u6709\uff0c\u6620\u5c04\u8868\u7684\u503c\u9644\u4e3a\u7f16\u53f7\uff0c\u8f93\u51fa `OK`\u3002\n\n\u5bf9\u4e8e\u5ba2\u6237\u673a\uff0c\u7528\u54c8\u5e0c\u6620\u5c04\u8868\u67e5\u627e IP \u662f\u5426\u662f\u5408\u6cd5\u670d\u52a1\u673a\uff08\u53ca\u662f\u5426\u6709\u7f16\u53f7\uff09\uff0c\u662f\uff0c\u8f93\u51fa\u7f16\u53f7\uff0c\u5426\uff0c\u8f93\u51fa `FAIL`\u3002\n\n\u7ed3\u675f\u3002\n\n## $\\rm \\color{green}code$\n\n### C++\n\n```cpp\n#include <iostream>\n#include <string>\n#include <unordered_map>\n#include <regex>\nusing namespace std;\nint n;\nunordered_map<string, int> mp;\ninline bool check(const string &ip) {\n    static const regex ippt(\"(((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|[0-9])\\\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|[0-9])\\\\:((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9][0-9])|(6[0-4][0-9][0-9][0-9])|([1-5][0-9][0-9][0-9][0-9])|([1-9][0-9][0-9][0-9])|([1-9][0-9][0-9])|([1-9][0-9])|[0-9])\");\n    return regex_match(ip, ippt);\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    mp[\"Server\"] = 0, mp[\"Client\"] = 1;\n    cin >> n;\n    for (int i = 1; i <= n; ++i) {\n        static string op, ip;\n        static int typ;\n        auto it = mp.end();\n        cin >> op >> ip;\n        if (check(ip)) {\n            typ = mp[op];\n            if (typ == 0) {\n                it = mp.find(ip);\n                if (it == mp.end()) {\n                    mp[ip] = i;\n                    cout <<\"OK\\n\";\n                } else {\n                    cout << \"FAIL\\n\";\n                }\n            } else if (typ == 1) {\n                it = mp.find(ip);\n                if (it == mp.end()) {\n                    cout << \"FAIL\\n\";\n                } else {\n                    cout << it->second << '\\n';\n                }\n            }\n        } else {\n            cout << \"ERR\\n\";\n        }\n    }\n    return 0;\n}\n```\n\n### Python\n\n```python\nimport re\npat = re.compile(r\"^(((((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|[0-9])\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9][0-9])|([1-9][0-9])|[0-9])\\:((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9][0-9])|(6[0-4][0-9][0-9][0-9])|([1-5][0-9][0-9][0-9][0-9])|([1-9][0-9][0-9][0-9])|([1-9][0-9][0-9])|([1-9][0-9])|[0-9])))$\")\ndef check(ip):\n    return not(re.match(pat, ip) == None)\ns = input()\nn = int(s)\nmp = {\"\" : 0}\nfor i in range(n):\n    s = input().split()\n    op = s[0]\n    ip = s[1]\n    # print(re.match(pat, ip))\n    if check(ip):\n        if op == \"Server\":\n            try:\n                mp[ip]\n            except KeyError:\n                mp[ip] = i + 1\n                print(\"OK\")\n            else:\n                print(\"FAIL\")\n        elif op == \"Client\":\n            flag = True\n            try:\n                mp[ip]\n            except KeyError:\n                flag = False\n                print(\"FAIL\")\n            else:\n                print(mp[ip])\n    else:\n        print(\"ERR\")\n```",
        "postTime": 1635772859,
        "uid": 129562,
        "name": "XYY1411",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011\u7f51\u7edc\u8fde\u63a5"
    },
    {
        "content": "## Content\n\u9898\u76ee\u8fc7\u4e8e\u96be\u89e3\u91ca\uff0c\u8bf7\u524d\u5f80\u9898\u9762\u67e5\u770b\u3002\u4ee5\u4e0b\u76f4\u63a5\u7ed9\u51fa\u672c\u9898\u505a\u6cd5\u3002\n## Solution\n\u5165\u95e8\u7ec4 T3 \u5728\u6211\u5370\u8c61\u4e2d\u5411\u6765\u90fd\u4e0d\u662f\u5f88\u5bb9\u6613\u80fd\u505a\u51fa\u6765\u7684\u9898\u76ee\uff0c\u4f46\u662f\u4eca\u5e74\u8fd9\u4e2a T3 \u4e0d\u5f97\u4e0d\u8bf4\u8fd8\u662f\u633a\u597d\u505a\u7684\u3002\n\n\u6211\u4eec\u5148\u4e0d\u59a8\u4ee4\u5b83\u7ed9\u51fa\u7684\u5730\u5740\u4e32\u662f\u5408\u6cd5\u7684\uff0c\u4e5f\u5c31\u662f\u6d4b\u8bd5\u70b9 $1\\sim 11$ \u7684\u7279\u6b8a\u6027\u8d28\uff0c\u6211\u4eec\u76f4\u63a5\u7528\u4e2a map \u6765\u5b58\u50a8\u6bcf\u4e2a\u5730\u5740\u4e32\u662f\u5426\u5df2\u6709\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\uff0c\u5373\u53ef\u89e3\u51b3\u5224\u65ad\u5730\u5740\u4e32\u662f\u5426\u5df2\u7ecf\u5728\u524d\u9762\u6709\u670d\u52a1\u673a\u5efa\u7acb\u8fde\u63a5\u7684\u8fd9\u4e2a\u95ee\u9898\uff0c\u540c\u65f6\u5bf9\u4e8e\u5ba2\u6237\u673a\uff0c\u8fd9\u4e5f\u540c\u6837\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u6709\u5efa\u7acb\u8fde\u63a5\u7684\u670d\u52a1\u673a\u4f9b\u5176\u8fde\u63a5\u3002\n\n\u8fd9\u6837\uff0c\u5224\u65ad\u7ed9\u51fa\u7684\u5730\u5740\u4e32\u662f\u5426\u5408\u6cd5\u5c31\u53d8\u6210\u4e86\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u91cd\u70b9\u89e3\u51b3\u7684\u95ee\u9898\u3002\n\n\u6211\u4eec\u56de\u5230\u9898\u9762\u770b\u770b\u4e0d\u5408\u6cd5\u7684\u5b57\u7b26\u4e32\u53ef\u80fd\u662f\u4ec0\u4e48\u6837\u7684\uff1a\n\n> \u4e0d\u662f\u5f62\u5982 `a.b.c.d:e` \u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\u542b\u6709\u591a\u4e8e $3$ \u4e2a\u5b57\u7b26 `.` \u6216\u591a\u4e8e $1$ \u4e2a\u5b57\u7b26 `:` \u7b49\u60c5\u51b5\u3002\n\n> \u6574\u6570 $a,b,c,d,e$ \u4e2d\u67d0\u4e00\u4e2a\u6216\u591a\u4e2a\u8d85\u51fa\u4e0a\u8ff0\u8303\u56f4\uff08\u5373 $0\\leqslant a,b,c,d\\leqslant 255$\uff0c$0\\leqslant e\\leqslant 65535$\uff09\uff1b\n\n> \u6574\u6570 $a,b,c,d,e$ \u4e2d\u67d0\u4e00\u4e2a\u6216\u591a\u4e2a\u542b\u6709\u591a\u4f59\u7684\u524d\u5bfc $0$\u3002\n\n\u6211\u4eec\u6839\u636e\u6bcf\u4e2a\u7279\u70b9\u5c06\u5176\u8f6c\u5316\u6210\u4ee3\u7801\u8bed\u8a00\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u4e0d\u662f\u5f62\u5982 `a.b.c.d;e` \u683c\u5f0f\u7684\u5730\u5740\u4e32\uff0c\u6211\u4eec\u76f4\u63a5\u626b\u4e00\u904d\u5224\u65ad\u5176\u662f\u5426\u6070\u597d\u6709 $3$ \u4e2a `.` \u548c $1$ \u4e2a `.` \u5373\u53ef\u3002\u540c\u65f6\uff0c\u6211\u4eec\u5c06\u7b2c\u4e00\u4e2a `.` \u524d\u9762\u7684\u90e8\u5206\u3001\u7b2c\u4e00\u4e2a `.` \u548c\u7b2c\u4e8c\u4e2a `.` \u4e4b\u95f4\u7684\u90e8\u5206\u3001\u7b2c\u4e8c\u4e2a `.` \u548c\u7b2c\u4e09\u4e2a `.` \u4e4b\u95f4\u7684\u90e8\u5206\u3001\u7b2c\u4e09\u4e2a `.` \u548c `:` \u4e4b\u95f4\u7684\u90e8\u5206\u3001`:` \u540e\u9762\u7684\u90e8\u5206\u5206\u522b\u63d0\u53d6\u51fa\u6765\uff0c\u5c06\u5b57\u7b26\u4e32\u7684\u8fd9\u4e94\u4e2a\u90e8\u5206\u5206\u522b\u8bb0\u4f5c $s_1,s_2,s_3,s_4,s_5$\u3002\n\n\u4e4b\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $s_i$\uff0c\u6211\u4eec\u9996\u5148\u770b $s_i$ \u7684\u9996\u5b57\u7b26\u662f\u5426\u662f `0`\uff0c\u7136\u540e\u518d\u53bb\u5c06\u5176\u8f6c\u5316\u6210\u6570\u5b57\u3002\u5728**\u8f6c\u6362\u7684\u8fc7\u7a0b**\u4e2d\u6211\u4eec\u9700\u8981\u5224\u65ad\u6570\u5b57\u662f\u5426\u8d85\u51fa\u4e86\u8303\u56f4\uff0c\u4e00\u65e6\u8d85\u51fa\u4e86\u8303\u56f4\u5c31\u76f4\u63a5\u5224\u5b9a\u5176\u4e0d\u5408\u6cd5\u5373\u53ef\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u4e4b\u6240\u4ee5\u5728\u8f6c\u6362\u7684\u8fc7\u7a0b\u4e2d\u5c31\u5224\u65ad\u5176\u662f\u5426\u8d85\u51fa\u8303\u56f4\u662f\u56e0\u4e3a\uff0c\u5982\u679c\u76f4\u63a5\u5168\u90e8\u8f6c\u6362\u5b8c\u518d\u5224\u65ad\uff0c\u5bb9\u6613\u8d85\u51fa\u6570\u636e\u7c7b\u578b\u8303\u56f4\u4ece\u800c\u4f7f\u6700\u7ec8\u7684\u8f6c\u6362\u7ed3\u679c\u4e0d\u51c6\u786e\u3002~~\u5f53\u7136\u5730\u5740\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 $\\sout{25}$\uff0c\u6240\u4ee5\u76f4\u63a5\u7528 `__int128` \u662f\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u7206\u70b8\u7684\uff0c\u4f46\u662f~~\u8fd9\u91cc\u663e\u7136\u4e0d\u5fc5\u8981\u7528\u8fd9\u4e48\u5927\u7684\u6570\u636e\u7c7b\u578b\u53bb\u5224\u65ad\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\u5b57\uff0c\u7528\u4e0a\u8ff0\u65b9\u6cd5\u5373\u53ef\u4ec5\u4f7f\u7528\u666e\u901a\u7684 `int` \u89e3\u51b3\u662f\u5426\u8d85\u51fa\u8303\u56f4\u7684\u95ee\u9898\u800c\u4e0d\u8d85\u51fa\u5176\u672c\u8eab\u6570\u636e\u7c7b\u578b\u8303\u56f4\u3002\n\n\u8fd9\u6837\uff0c\u5224\u65ad\u4e00\u4e2a\u5730\u5740\u4e32\u662f\u5426\u5408\u6cd5\u7684\u8fc7\u7a0b\u5c31\u5168\u90e8\u8bb2\u5b8c\u4e86\u3002\u63a5\u4e0b\u6765\u628a\u4e0a\u9762\u8fd9\u4e9b\u90e8\u5206\u7528\u4ee3\u7801\u5b9e\u73b0\u5373\u53ef\u3002\n## Code\n```cpp\nnamespace Solution {\n\tconst int N = 1007;\n\tint n;\n\tstruct node {string op, ip;}a[N];\n\tmap<string, int> id;\n\t\n\tib chk(string s) {\n\t\tint num = 0, fl = 0, sze = s.size(), p[27] = {0};\n\t\tstring nums[7] = {\"\"};\n\t\ts = \" \" + s;\n\t\tF(int, i, 1, sze) {\n\t\t\tif(s[i] == '.') {\n\t\t\t\tp[++num] = i;\n\t\t\t\tif(num > 3) return 0;\n\t\t\t} else if(s[i] == ':') {\n\t\t\t\tif(!fl) fl = i;\n\t\t\t\telse return 0;\n\t\t\t}\n\t\t}\n\t\tif(num < 3 || !fl) return 0;\n\t\tp[++num] = fl, p[++num] = sze;\n\t\tF(int, i, 1, num) {\n\t\t\tF(int, j, p[i - 1] + 1, p[i] - (i != num)) nums[i] += s[j];\n\t\t\tif((nums[i].size() != 1 && nums[i][0] == '0') || nums[i] == \"\") return 0;\n\t\t\tll x = 0;\n\t\t\tF(int, j, 0, (int)nums[i].size() - 1) {\n\t\t\t\tx = x * 10 + nums[i][j] - '0';\n\t\t\t\tif(x > (i == num ? 65535 : 255)) return 0;\n\t\t\t}\n\t\t}\n\t\treturn 1;\n\t}\n\t\n\tiv Main() {\n\t\tread(n);\n\t\tF(int, i, 1, n) {\n\t\t\tcin >> a[i].op >> a[i].ip;\n\t\t\tif(a[i].op == \"Server\") {\n\t\t\t\tif(!chk(a[i].ip)) puts(\"ERR\");\n\t\t\t\telse if(id[a[i].ip]) puts(\"FAIL\");\n\t\t\t\telse puts(\"OK\"), id[a[i].ip] = i;\n\t\t\t} else {\n\t\t\t\tif(!chk(a[i].ip)) puts(\"ERR\");\n\t\t\t\telse if(!id[a[i].ip]) puts(\"FAIL\");\n\t\t\t\telse println(id[a[i].ip]);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n}\n```",
        "postTime": 1635765362,
        "uid": 112917,
        "name": "Eason_AC",
        "ccfLevel": 6,
        "title": "P7911 [CSP-J 2021] \u7f51\u7edc\u8fde\u63a5"
    },
    {
        "content": "\u6211\u7231\u5927\u6a21\u62df\uff01\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u7ec6\u5fc3\u4e00\u70b9\u5c31\u80fd\u8fc7\uff0c\u8003\u573a\u4e0a\u7ed9\u7684\u5927\u6837\u4f8b\u975e\u5e38\u53cb\u597d\uff0c\u6211\u5c31\u662f\u9760\u5b83\u4e00\u4e2a\u4e00\u4e2a\u627e\u51fa\u9519\u8bef\u7136\u540e\u4fee\u6539\u7684...\u6700\u540e\u6ca1\u60f3\u5230\u6ee1\u5206\u4e86\n\n\u4e00\u4e9b\u5173\u952e\u70b9\uff1a\n\n- \u9664\u4e86\u6570\u5b57\u3001`.` \u548c `:` \u4ee5\u5916\u7684\u5b57\u7b26\n- `.` \u548c `:` \u7684\u51fa\u73b0\u987a\u5e8f\u548c\u6b21\u6570\n- \u6570\u5b57\u7684\u6570\u91cf\n- \u6570\u5b57\u6709\u6ca1\u6709\u524d\u5bfc\u96f6\n- \u6570\u5b57\u6709\u6ca1\u6709\u8d8a\u754c\n- ......\n\n\u89e3\u51b3\u65b9\u6848\uff1a\n\n- \u904d\u5386\u4e00\u904d\u5224\u65ad\n- \u7528\u4e24\u4e2a\u53d8\u91cf\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\uff0c\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a 3 \u7684\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a `.` \u51fa\u73b0\u7684\u4f4d\u7f6e\n- \u3002\u3002\u3002\n- \u4ee3\u7801\u4e2d `checkPrevZero()`\n- \u8fd8\u6ca1\u5c06\u5b57\u7b26\u4e32\u8f6c\u6210\u6570\u5b57\u524d\u53ef\u4ee5\u5148\u5224\u65ad\u8fd9\u6bb5\u6570\u5b57\u957f\u5ea6\u662f\u5426\u5927\u4e8e 3 \u6216 5\uff0c\u8f6c\u5316\u6210\u6570\u5b57\u4e4b\u540e\u518d\u7ec6\u5316\u5224\u65ad\u662f\u5426\u5927\u4e8e 255 \u6216 65535\uff0c\u53ef\u4ee5\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u907f\u514d\u4f7f\u7528 long long \u9632\u6b62\u7206\u70b8\uff08\u8fd9\u4e2a\u5751\u4f3c\u4e4e\u4e5f\u662f\u5927\u6837\u4f8b\u544a\u8bc9\u6211\u7684\uff09\u3002\n\n\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\u6765\u7b80\u5316\u4ee3\u7801\u3002\n\n\u4e0b\u9762\u5949\u4e0a\u539f\u6c41\u539f\u5473\u7684\u8003\u573a\u4ee3\u7801\uff0c\u5177\u4f53\u6ce8\u91ca\u90fd\u5728\u91cc\u9762\uff1a\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\n// \u5224\u65ad\u524d\u5bfc\u96f6\nbool checkPrevZero(const string number) {\n\t// \u5355\u72ec\u4e00\u4e2a 0 \u662f\u4e0d\u7b97\u975e\u6cd5\u7684\u3002\n\tif (number.length() > 1 && number[0] == '0') return true;\n\treturn false;\n}\n// string \u8f6c int\nint strToInt(const string number) {\n\tint t = 0;\n\tfor (int i = 0; i < number.length(); i++) {\n\t\tt *= 10;\n\t\tt += number[i]-'0';\n\t}\n\treturn t;\n}\nbool check(const string addr) {\n\tint cntDot = 0, cntMao = 0; // \u70b9\u7684\u51fa\u73b0\u6b21\u6570\u548c\u5192\u53f7\u7684\u51fa\u73b0\u6b21\u6570\n\tint dotIdx[3], maoIdx;\t// \u70b9\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u5192\u53f7\u51fa\u73b0\u7684\u4f4d\u7f6e\n\tif (!(addr[0] >= '0' && addr[0] <= '9') || !(addr[addr.length()-1] >= '0' && addr[addr.length()-1] <= '9')) return false;\n\tfor (int i = 0; i < addr.length(); i++) {\n\t\tif (addr[i] == '.') {\n\t\t\tif (cntDot > 2) return false;  // \u591a\u4e8e\u4e09\u4e2a\u70b9\n\t\t\tif (!(addr[i-1] >= '0' && addr[i-1] <= '9')) return false;\n\t\t\tcntDot++;\n\t\t\tdotIdx[cntDot-1] = i;\n\t\t} else if (addr[i] == ':') {\n\t\t\tif (cntMao > 1) return false; // \u591a\u4e8e\u4e00\u4e2a\u5192\u53f7\n\t\t\tif (!(addr[i-1] >= '0' && addr[i-1] <= '9')) return false;\n\t\t\tcntMao++;\n\t\t\tmaoIdx = i;\n\t\t} else if (!(addr[i] >= '0' && addr[i] <= '9')) { // \u5565\u4e5f\u4e0d\u662f\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (!(cntDot == 3 && cntMao == 1)) return false; // \u68c0\u67e5\u70b9\u548c\u5192\u53f7\u7684\u6570\u91cf\n\tif (maoIdx < dotIdx[2]) return false; // \u5982\u679c\u5192\u53f7\u7684\u4f4d\u7f6e\u5728\u67d0\u4e00\u4e2a\u70b9\u524d\u9762\n   // \u5206\u79bb\u51fa\u4e94\u4e2a\u6570\u5b57\n\tstring n1 = addr.substr(0, dotIdx[0]),\n\t       n2 = addr.substr(dotIdx[0]+1, dotIdx[1]-dotIdx[0]-1),\n\t       n3 = addr.substr(dotIdx[1]+1, dotIdx[2]-dotIdx[1]-1),\n\t\t   n4 = addr.substr(dotIdx[2]+1, maoIdx-dotIdx[2]-1),\n\t\t   n5 = addr.substr(maoIdx+1, addr.length()-maoIdx-1);\n\t\n\tif (checkPrevZero(n1) || checkPrevZero(n2) || checkPrevZero(n3) || checkPrevZero(n4) || checkPrevZero(n5)) return false; // \u5224\u65ad\u524d\u5bfc\u96f6\n\tif (n1.length() > 3 || n2.length() > 3 || n3.length() > 3 || n4.length() > 3 || n5.length() > 5) return false;  // \u5224\u65ad\u8d8a\u754c\n\tint a = strToInt(n1), b = strToInt(n2), c = strToInt(n3), d = strToInt(n4), e = strToInt(n5);\n\tif (a > 255 || b > 255 || c > 255 || d > 255 || e > 65535) return false;  // \u5224\u65ad\u8d8a\u754c\n\treturn true;\n}\nint serversNum = 0;\nmap<string, int> servers;\nint main()\n{\n\tcin >> n;\n\tstring op, ad;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> op >> ad;\n\t\tif (!check(ad)) {\n\t\t\tcout << \"ERR\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tif (op == \"Server\") {\n\t\t\tif (servers[ad] != 0) {\n\t\t\t\tcout << \"FAIL\\n\";\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tservers[ad] = i+1;\n\t\t\tcout << \"OK\\n\";\n\t\t} else if (op == \"Client\") {\n\t\t\tif (servers[ad] == 0) {\n\t\t\t\tcout << \"FAIL\\n\";\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcout << servers[ad] << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1635745807,
        "uid": 93259,
        "name": "Zirnc",
        "ccfLevel": 5,
        "title": "CSP-2021 T3 \u7f51\u7edc\u8fde\u63a5 \u9898\u89e3"
    },
    {
        "content": "\u706b\u901f\u6765\u4e00\u53d1\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u9898\u89e3\u3002\n\nregex yyds\uff01\n\n----\n\n\u9996\u5148\uff0c\u4f60\u9700\u8981\u77e5\u9053\u6709\u4e2a\u4e1c\u897f\u53eb\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u4e00\u53e5\u8bdd\u5c31\u662f\u5339\u914d\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u5339\u914d\u4e09\u4f4d\u6574\u6570\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- 0\uff1b\n- \u9996\u4f4d\u975e\u96f6\uff0c\u540e\u9762\u4e3a\u4efb\u610f\u6570\u5b57\u3002\n\n\u6b63\u5219\u4e2d\u4f7f\u7528 `[0-9]` \u8868\u793a 0 \u5230 9 \u7684\u4efb\u610f\u5b57\u7b26\uff0c\u800c `{0,2}` \u4ee3\u8868\u51fa\u73b0 0 \u6b21\u5230\u4e24\u6b21\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u6240\u4ee5\u4e24\u4e2a\u89c4\u5219\u5206\u522b\u5c31\u662f\uff1a\n\n- `0`\uff1b\n- `[1-9][0-9]{0,2}`\u3002\n\n\u800c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 `(A|B)` \u4ee3\u8868 `A` \u6216 `B`\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u662f `(0|[1-9][0-9]{0,2})`\u3002\n\n\u7136\u540e\u6211\u4eec\u5728\u4e2d\u95f4\u8981\u52a0\u4e0a\u70b9\uff0c\u4f46 `.` \u662f\u6b63\u5219\u5173\u952e\u5b57\u7b26\uff08\u8868\u793a\u5339\u914d\u6240\u6709\u5b57\u7b26\uff09\uff0c\u9700\u8981\u5728\u524d\u9762\u52a0\u4e0a\u53cd\u659c\u6760\u8f6c\u4e49\uff0c\u53c8\u56e0\u4e3a C/C++ \u7684\u7279\u6027\uff0c\u6240\u4ee5\u8981\u52a0\u4e24\u4e2a\u53cd\u659c\u6760\u3002\n\n\u540c\u65f6\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u53ea\u8981\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u4e32\u5c31\u8ba4\u4e3a\u662f\u5408\u6cd5\u7684\uff0c\u6240\u4ee5\u8981\u52a0\u4e0a\u7279\u6b8a\u5b9a\u4f4d\u7b26\uff1a`^` \u4ee3\u8868\u5b57\u7b26\u4e32\u5f00\u5934\uff0c\uff08\u7f8e\u5143\u7b26\u53f7\uff09\u4ee3\u8868\u5b57\u7b26\u4e32\u7ed3\u5c3e\u3002\u6240\u4ee5\u6700\u7ec8\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u662f\uff08\u5c06\u4eba\u6c11\u5e01\u7b26\u53f7\u53d8\u6210\u7f8e\u5143\u7b26\u53f7\uff09\uff1a\n\n```\n^(0|[1-9][0-9]{0,2})\\.(0|[1-9][0-9]{0,2})\\.(0|[1-9][0-9]{0,2})\\.(0|[1-9][0-9]{0,2}):(0|[1-9][0-9]{0,4})\uffe5\n```\n\n\u7136\u540e\u7528 `regex_match` \u5224\u65ad\u4e00\u4e0b\u57fa\u672c\u683c\u5f0f\uff0c`sscanf` \u8bfb\u51fa\u6bcf\u4e2a\u6570\u5e76\u5224\u65ad\u8fb9\u754c\uff0c\u7136\u540e\u7528 `map` \u5b58\u4e00\u4e0b\u5c31\u505a\u5b8c\u4e86\u3002\n\n```cpp\n#include <regex> // \u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5934\u6587\u4ef6\n#include <cstdio>\n#include <map>\nusing namespace std;\ntypedef long long ll;\n\nconst ll u[] = {1099511627776ll, 4294967296ll, 16777216, 65536, 1};\n\nchar s[30], ty[10];\nmap<ll, int> mp;\n\ninline bool ir(int x, int lim = 255) { return x >= 0 && x <= lim; }\n\nint main()\n{\n\t\n\tregex pat(\"^(0|[1-9][0-9]{0,2})\\\\.(0|[1-9][0-9]{0,2})\\\\.(0|[1-9][0-9]{0,2})\\\\.(0|[1-9][0-9]{0,2}):(0|[1-9][0-9]{0,4})$\");\n\tint n, a, b, c, d, e;\n\tll qid;\n\t\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%s%s\", ty, s);\n\t\tif (!regex_match(s, pat))\n\t\t{\n\t\t\tputs(\"ERR\");\n\t\t\tcontinue;\n\t\t}\n\t\tsscanf(s, \"%d.%d.%d.%d:%d\", &a, &b, &c, &d, &e);\n\t\tif (ir(a) && ir(b) && ir(c) && ir(d) && ir(e, 65535))\n\t\t{\n\t\t\tqid = a*u[0] + b*u[1] + c*u[2] + d*u[3] + e;\n\t\t\tif (mp.find(qid) != mp.end())\n\t\t\t{\n\t\t\t\tif (ty[0] == 'C')\n\t\t\t\t\tprintf(\"%d\\n\", mp[qid]);\n\t\t\t\telse\n\t\t\t\t\tputs(\"FAIL\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (ty[0] == 'C')\n\t\t\t\t\tputs(\"FAIL\");\n\t\t\t\telse\n\t\t\t\t\tmp[qid] = i + 1, puts(\"OK\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tputs(\"ERR\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1635248579,
        "uid": 119491,
        "name": "5ab_juruo",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011[CSP-J 2021] \u7f51\u7edc\u8fde\u63a5"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u6548\u679c](https://www.luogu.com.cn/blog/484076/solution-p7911)\n\n~~\u5f53\u4f5c\u7eaa\u5ff5\u672c\u4eba\u7684\u9996\u6b21 CSP \u4e4b\u65c5,\u53d1\u7bc7\u9898\u89e3\uff0e~~\n\n~~\u8003\u573a\u4e0a\u7531\u4e8e\u4e0d\u4f1a fc,\u6b7b\u5f97\u5f88\u60e8,\u624d 75 \u5206,\u5438\u53d6\u6559\u8bad\u91cd\u6253\u540e,\u7ec8\u4e8e AC \u4e86.~~\n\n\u8fd9\u662f\u4e00\u9053\u5c0f\u6a21\u62df,\u8003\u9a8c map \u53ca string \u7684\u57fa\u672c\u529f(\u6216\u8bb8\u6709\u5176\u4ed6\u505a\u6cd5,\u6211\u4ecb\u7ecd\u7684\u4ec5\u662f\u81ea\u5df1\u7684\u601d\u8def)\uff0e\n\n# \u8fdb\u5165\u6b63\u6587\n\n## \u5927\u81f4\u65b9\u6cd5\uff1a\n\n\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u5b58\u7b54\u6848\uff08\u5373\u6bcf\u53f0\u8ba1\u7b97\u673a\u8fde\u63a5\u72b6\u6001\uff0c\u6211\u7528\u7684\u53d8\u91cf\u540d\u662f yjy\uff0c\u4e0b\u9762\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5c06\u76f4\u63a5\u5199\u6210 yjy\uff09\uff0c\u518d\u5efa\u4e00\u4e2a\u6570\u7ec4 sum \u5b58\u8fde\u63a5\u6210\u529f\u5ba2\u6237\u673a\u6240\u5bf9\u5e94\u7684\u670d\u52a1\u673a\u7f16\u53f7\uff0c\u5bf9\u4e8e\u7b54\u6848\u4fdd\u5b58\u8bb2\u5b8c\u4e86\u3002\n\n\u8f93\u5165\u90e8\u5206\u8f83\u4e3a\u7b80\u5355\uff0c\u6211\u7684\u53d8\u91cf\u540d\u4e5f\u4e0e\u9898\u76ee\u6240\u8ff0\u4e00\u81f4\uff0c\u5c31\u8df3\u8fc7\u3002\n\n\u7136\u540e\u8bb2\u670d\u52a1\u673a\u91cd\u590d\u5730\u5740\uff0c\u548c\u5ba2\u6237\u673a\u8fde\u63a5\u7684\u670d\u52a1\u673a\u7f16\u53f7\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5730\u5740\u5408\u6cd5\u7684\u670d\u52a1\u673a\uff0c\u6211\u4eec\u7528\u4e00\u4e2a map \u5b58\u5b83\u7684\u5730\u5740\u548c\u7f16\u53f7\uff0c\u8bb0\u4e3a \n\n```cpp\nmap<string,int>ss;\n\n```\n\n\u8fd9\u6837\u670d\u52a1\u673a\u91cd\u590d\u5730\u5740\u7684\u60c5\u51b5\uff0c\u770b\u4e0b\u5730\u5740\u5bf9\u5e94\u7684 map \u662f\u5426\u4e3a 0 \u5c31\u884c\u4e86\u3002\u81f3\u4e8e\u5ba2\u6237\u673a\uff0c\u82e5\u5b83\u5730\u5740\u5408\u6cd5\uff0c\u770b\u4e0b\u5730\u5740\u5bf9\u5e94\u7684 map \u662f\u5426\u4e3a 0\uff0c\u4e3a 0 \u5219\u8fde\u63a5\u5931\u8d25\uff0c\u5426\u5219\u8fde\u63a5\u7684\u670d\u52a1\u673a\u7f16\u53f7\u5c31\u662f ss \u7684\u7b2c\u4e8c\u4e2a\u952e\u503c\u3002\n\n\u5224\u65ad\u5730\u5740\u662f\u5426\u5408\u6cd5\u9700\u8981\u8003\u8651\u7684\u6bd4\u8f83\u591a\uff0c\u653e\u4e0b\u9762\u8bf4\u3002\n\n**\u603b\u4f53\u6b65\u9aa4\uff1a**\n\n1. \u5f00\u6570\u7ec4\uff0c\u53d8\u91cf\u3002\n\n2. \u8f93\u5165\u3002\n\n3. \u5224\u65ad\u5730\u5740\u662f\u5426\u5408\u6cd5\u3002\uff08\u91cd\u8981\uff09\n\n4. \u5224\u65ad\u670d\u52a1\u673a\u548c\u5ba2\u6237\u673a\u7684\u5404\u79cd\u60c5\u51b5\u3002\uff08\u8f83\u91cd\u8981\uff09\n\n5. \u8bb0\u5f55\u7b54\u6848\u3002\n\n6. \u8f93\u51fa\u3002\n\n## \u6ce8\u610f\u70b9\uff1a\n\n1. map \u7b49\u6e05\u7a7a\u3002\n\n2. \uff08\u975e\u5e38\u91cd\u8981\uff09\u5224\u65ad\u5730\u5740\u5408\u6cd5\u7684\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n    - \u5730\u5740\u4e0d\u5f97\u51fa\u73b0\u9664\u9898\u76ee\u89c4\u5b9a\u5916\u7684\u5b57\u7b26\u3002\n    \n    - \u5730\u5740**\u5fc5\u987b\u8981\u6709 5 \u4e2a\u6570**\uff08\u6bd4\u5982 ```12..2.6:9``` \u5c31\u4e0d\u884c\uff09\u3002\n    \n    - \u5730\u5740\u5fc5\u987b\u542b\u6709 3 \u4e2a \u201c.\u201d \u4e0e 1 \u4e2a \u201c:\u201d\uff0c\u4e14**\u987a\u5e8f\u4e0d\u80fd\u98a0\u5012**\u3002\n    \n    - \u5730\u5740\u7684 5 \u4e2a\u6570\u8981\u7b26\u5408\u9898\u76ee\u89c4\u5b9a\u7684\u6570\u636e\u8303\u56f4\u3002\n    \n    - \u5730\u5740\u7684 5 \u4e2a\u6570\u4e0d\u80fd\u542b\u524d\u5bfc 0\u3002\n    \n## Code\uff1a\n\n\u524d\u9762\u8bb2\u7684\u5f88\u660e\u786e\uff0c\u4e3b\u8981\u53d8\u91cf\u540d\u4e5f\u8bf4\u4e86\uff0c\u8fd9\u91cc\u7a0d\u5fae\u5199\u5c11\u4e00\u70b9\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint n,sum[1005];\nstring yjy[1005];\nmap<string,int>ss;\nsigned main(){\n\t//freopen(\"network.in\",\"r\",stdin);\n\t//freopen(\"network.out\",\"w\",stdout);\n\tss.clear();\n\tscanf(\"%lld\",&n);\n\tfor(int iu=1;iu<=n;iu++){\n\t\tyjy[iu].clear();\n\t\tchar op[105],ad[105];\n\t\tint ans=0,w=0,_1=0,_2=0;\n\t\tstring sk;//\u7531\u4e8e\u4e24\u4e2a\u5b57\u7b26\u4e32\u7a7a\u4e00\u683c\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u628a\u5b57\u7b26\u4e32\u8f93\u8fdb\u53bb\uff0c\u5c31\u5148\u7528 ad \u8fd9\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u518d\u6539\u6210\u5b57\u7b26\u4e32\u3002\n\t\tsk.clear();\n\t\tscanf(\"%s\",op);\n\t\tscanf(\"%s\",ad);\n\t\tint kf=0,knf=0;\n\t\tfor(int i=0;i<strlen(ad);i++){\n\t\t    if((i==0&&ad[i]>='0'&&ad[i]<='9')||(!(ad[i-1]>='0'&&ad[i-1]<='9')&&(ad[i]>='0'&&ad[i]<='9')))kf++;//\u8bb0\u5f55\u6570\u5b57\u4e2a\u6570\u3002\n\t\t    if(knf==1&&!(ad[i]>='0'&&ad[i]<='9')){\n\t\t        kf=999;\n\t\t        break;\n\t\t    }//\u5224\u65ad 4 \u4e2a\u7279\u6b8a\u7b26\u53f7\u662f\u5426\u6309\u987a\u5e8f\u6392\u5217\u3002\n\t\t    if(ad[i]==':')knf=1;\n\t\t}\t\n\t\tif(kf!=5){\n\t\t\tyjy[iu]+='E';\n\t\t\tcontinue;\t\t    \n\t\t}\n\t\tfor(int i=0;i<strlen(ad);i++){\n\t\t\tif(ad[i]=='.')_1++;\n\t\t\tif(ad[i]==':')_2++;\n\t\t\tif(ad[i]!='.'&&ad[i]!=':'&&!(ad[i]>='0'&&ad[i]<='9')){\n\t\t\t\tw=1;\n\t\t\t}//\u5224\u65ad\u6709\u65e0\u5176\u4ed6\u5b57\u7b26\u51fa\u73b0\uff0c\u53ca\u5224\u65ad\u4e24\u79cd\u7279\u6b8a\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u3002\n\t\t\tsk+=ad[i];\n\t\t}\n\t\tif(_1!=3||_2!=1||w==1){\n\t\t\tyjy[iu]+='E';\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int i=0;i<strlen(ad);i++){\n\t\t\tif(ad[i]=='.'||ad[i]==':'){\n\t\t\t\tif(ans>=0&&ans<=255){\n\t\t\t\t\tans=0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tw=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}//\u5224\u65ad a,b,c,d \u662f\u5426\u5728\u8303\u56f4\u5185\u3002\n\t\t\tif(i==0||ad[i-1]=='.'||ad[i-1]==':'){\n\t\t\t\tif(ad[i]=='0'){\n\t\t\t\t\tif(i==strlen(ad)-1||ad[i+1]=='.'||ad[i+1]==':'){\n\t\t\t\t\t\tans=0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tw=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}//\u5224\u65ad\u524d\u5bfc 0.\n\t\t\tans=ans*10+ad[i]-48;\n\t\t}\n\t\tif(ans<0||ans>65535||w==1){\n\t\t\tyjy[iu]+='E';\n\t\t\tcontinue;\n\t\t}//\u5224\u65ad e \u662f\u5426\u5728\u8303\u56f4\u5185\u3002\n\t\tif(op[0]=='S'){\n\t\t\tif(ss[sk]>0){\n\t\t\t\tyjy[iu]+='F';\n\t\t\t}\n\t\t\telse{\n\t\t\t\tss[sk]=iu;\n\t\t\t\tyjy[iu]+='O';\n\t\t\t}\n\t\t}//\u5224\u65ad\u670d\u52a1\u673a\u8fde\u63a5\u60c5\u51b5\u3002\n\t\telse{\n\t\t\tif(ss[sk]>0){\n\t\t\t\tsum[iu]=ss[sk];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tyjy[iu]+='F';\n\t\t\t}\n\t\t}//\u5224\u65ad\u5ba2\u6237\u673a\u8fde\u63a5\u60c5\u51b5\u3002\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(sum[i]==0){\n\t\t\tif(yjy[i][0]=='E')printf(\"ERR\");\n\t\t\tif(yjy[i][0]=='F')printf(\"FAIL\");\n\t\t\tif(yjy[i][0]=='O')printf(\"OK\");\n\t\t}\n\t\telse printf(\"%lld\",sum[i]);\n\t\tprintf(\"\\n\");\n\t}//\u8f93\u51fa\u7ed3\u679c\u3002\n\t//fclose(stdin);\n\t//fclose(stdout);\n\treturn 0;\n}\n```\n# \u6700\u540e\u7684\u6700\u540e\uff0c\u795d\u5927\u5bb6 CSP 2021 rp++\uff01",
        "postTime": 1635938627,
        "uid": 484076,
        "name": "mcDinic",
        "ccfLevel": 6,
        "title": "P7911 [CSP-J 2021] \u7f51\u7edc\u8fde\u63a5 \u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u592a\u6c34\uff0c\u81f3\u5c11\u672c\u4eba\u8ba4\u4e3a\u4eca\u5e74\u7684\u9898\u6ca1\u6709\u6309\u96be\u5ea6\u6392\u5e8f\u3002\u9996\u5148\u6211\u4eec\u8f93\u5165\u7f51\u5740\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u5b58\u50a8,\u6b64\u5904\u91cd\u70b9\u63d0\u51fa\u4e00\u4e0b\u5224\u65ad `ERR` \u7684\u65b9\u6cd5\uff1a\n- \u9996\u5148\uff0c\u5224\u65ad\u662f\u5426\u6709\u4e24\u4e2a\u76f8\u90bb\u7684\u975e\u6570\u5b57\u7684\u5b57\u7b26\uff0c\u4f8b\u5982 `1..1.1:1`\u3002\n- \u5176\u6b21\uff0c\u6211\u4eec\u5224\u65ad\u5b57\u7b26\u7684\u6570\u91cf\u662f\u5426\u7b26\u5408\u9898\u610f\uff0c\u4f8b\u5982 `1.1.1:1:1`\u3002\n- \u7136\u540e\uff0c\u6211\u4eec\u5224\u65ad\u4e00\u4e0b\u5192\u53f7\u662f\u5426\u5728\u70b9\u53f7\u7684\u540e\u9762\uff0c\u4f8b\u5982 `1.1:1.1.1`\n- \u7d27\u63a5\u7740\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5224\u65ad\u524d\u5bfc\u96f6\u7684\u5b58\u5728\uff0c\u5224\u65ad\u65b9\u6cd5\uff1a\u82e5\u540e\u9762\u662f\u6570\u5b57\u4e14\u524d\u9762\u4e0d\u662f\u6570\u5b57\uff0c\u5c31\u6709\u524d\u5bfc\u96f6\uff0c\u4f8b\u5982 `1.01.1.1:1`\u3002\u4f46\u8981\u6ce8\u610f\u5355\u72ec\u7684\u4e00\u4e2a\u96f6\uff0c\u5373 `1.0.0.0:1`\u3002\n- \u6700\u540e\u8fd8\u6709\u5c31\u662f\u5224\u65ad\u7f51\u5740\u7684\u6570\u5b57\u662f\u5426\u8d85\u51fa\u9650\u5236\uff0c\u7528\u6570\u7ec4\u5b58\u4e0b\u6765\u5373\u53ef\uff0c\u4f8b\u5982 `1.212121.1.1:0`\u3002\n\n*****\n\u6700\u540e\uff0c\u7528 `map` \u7ef4\u62a4\u4e00\u4e0b\u90a3\u4e9b\u7b26\u5408\u8981\u6c42\u7684\u7f51\u5740\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u7136\u540e\u6309\u9898\u610f\u8f93\u51fa\u5373\u53ef\u3002\n### AC Code:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nmap<string,int> vis;//\u5f53\u524d\u7f51\u5740\u662f\u5426\u51fa\u73b0\ninline bool check(char s){\n\treturn s>='0'&&s<='9';\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int j=1;j<=n;j++){\n\t\tstring s,s1;\n\t\tint cnt=0,sum=0,a[5]={},k=0;\n\t\tbool t=0;\n\t\tcin>>s>>s1;\n\t\tfor(int i=0,l=s1.length();i<l;i++){\n\t\t\tif(!check(s1[i])&&i<l-1&&!check(s1[i+1])){\n\t\t\t\tt=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(s1[i]=='.')\n\t\t\t\tcnt++,k++;\n\t\t\telse if(s1[i]==':'){\n\t\t\t\tsum++,k++;\n\t\t\t\tif(cnt<3){\n\t\t\t\t\tt=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if(s1[i]<'0'||s1[i]>'9')\n\t\t\t\tt=1;\n\t\t\telse{\n\t\t\t\tif(s1[i]=='0'){\n\t\t\t\t\tif((check(s1[i-1]))||(!check(s1[i-1])&&!check(s1[i+1])))\n\t\t\t\t\t\ta[k]*=10;\n\t\t\t\t\telse{\n\t\t\t\t\t\tt=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\ta[k]=a[k]*10+s1[i]-'0';\n\t\t\t}\n\t\t\tif(k>4||cnt>3||sum>1||t||(k!=4&&a[k]>255)||a[k]>65535){\n\t\t\t\tt=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(t||k<4){\n\t\t\tputs(\"ERR\");\n\t\t\tcontinue;\n\t\t}//\u5224\u65ad\u7f51\u5740\u662f\u5426\u9519\u8bef\n\t\tif(s[0]=='S'){\n\t\t\tif(vis[s1])\n\t\t\t\tputs(\"FAIL\");\n\t\t\telse{\n\t\t\t\tvis[s1]=j;\n\t\t\t\tputs(\"OK\");\n\t\t\t}\n\t\t} else{\n\t\t\tif(vis[s1])\n\t\t\t\tprintf(\"%d\\n\",vis[s1]);\n\t\t\telse\n\t\t\t\tputs(\"FAIL\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1635486354,
        "uid": 556362,
        "name": "UnnamedOrNamed",
        "ccfLevel": 5,
        "title": "P7911 [CSP-J 2021] \u7f51\u7edc\u8fde\u63a5 \u9898\u89e3"
    },
    {
        "content": "\u9898\u5916\u8bdd\uff1a\u4eca\u5e74\u9898\u592a\u7b80\u5355\u4e86\u5427\u3002\u3002\u3002\u6211\u90fd\u80fd\u963f\u514b\u3002\u3002\u3002\n\nJulian \u51fa\u9898\u4eba\u6765 J \u7ec4\u4e86\u5c5e\u4e8e\u662f\u3010\u6d41\u6c57\u9ec4\u8c46.jpg\u3011\n\n\u5927\u6a21\u62df\uff0c\u96be\u70b9\u5728\u4e8e\u8bfb\u5165\uff0c\u8bfb\u8fdb\u6765\u540e\u7528\u54c8\u5e0c\u548c map \u7ef4\u62a4\u90fd\u884c\uff0c\u6211\u7528\u7684 map\u3002\n\n\u8003\u573a\u4ee3\u7801\uff08\u8bdd\u8bf4\u6211\u662f\u6700\u540e\u51e0\u5206\u949f\u8c03\u5b8c\u4ea4\u4e0a\u53bb\u7684\u3002\u3002\u3002\uff09\uff1a\n```cpp\n#include<stdio.h>\n#include<map>\n#include<ctype.h>\nFILE *in=fopen(\"network.in\",\"r\"),*out=fopen(\"network.out\",\"w\");\nstd::map<unsigned long long,int> MAP;\nint n;char str[100];\nint work(int k){\n\tfgetc(in),fscanf(in,\"%s\",str);\n\tint op=(str[0]=='C');\n\tfgetc(in),fscanf(in,\"%s\",str);\n\tint cnt=0;unsigned long long x=0;\n\tfor(int j=0;;++j){\n\t\tif(!isdigit(str[j])){return 0;}\n\t\tif(str[j]=='0'){\n\t\t\tif(cnt==4){\n\t\t\t\tif(str[j+1]!='\\0'){return 0;}\n\t\t\t}else if(cnt==3){\n\t\t\t\tif(str[j+1]!=':'){return 0;}\n\t\t\t\t++j;++cnt;x<<=8;continue;\n\t\t\t}else{\n\t\t\t\tif(str[j+1]!='.'){return 0;}\n\t\t\t\t++j;++cnt;x<<=8;continue;\n\t\t\t}\n\t\t}\n\t\tunsigned tmp=0;\n\t\tfor(;isdigit(str[j]);++j){\n\t\t\ttmp=(tmp<<1)+(tmp<<3)+(str[j]^48);\n\t\t\tif((cnt==4&&tmp>65535)||(cnt<4&&tmp>255))return 0;\n\t\t}\n\t\tif((cnt==4&&str[j]!='\\0')||(cnt==3&&str[j]!=':')||(cnt<3&&str[j]!='.'))return 0;\n\t\tx=(x<<(cnt>3?16:8))|tmp,++cnt;\n\t\tif(str[j]=='\\0')break;\n\t}\n\tauto ptr=MAP.find(x);\n\tif(op){\n\t\tif(ptr==MAP.end())return 1;\n\t\tfprintf(out,\"%d\\n\",ptr->second);\n\t\treturn 2;\n\t}else{\n\t\tif(ptr!=MAP.end())return 1;\n\t\tfputs(\"OK\\n\",out);\n\t\tMAP.insert({x,k});\n\t\treturn 2;\n\t}\n}\nint main(){\n\tfscanf(in,\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t\tswitch(work(i)){\n\t\t\tcase 0:fputs(\"ERR\\n\",out);break;\n\t\t\tcase 1:fputs(\"FAIL\\n\",out);break;\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1634992840,
        "uid": 203008,
        "name": "toaru",
        "ccfLevel": 5,
        "title": "CSP2021-J T3"
    }
]