[
    {
        "content": "Ps.\u6765\u91cd\u65b0\u53d9\u8ff0\u4e00\u4e0b\u601d\u8defwww\n\n\n\u9996\u5148\u5bf9\u697c\u4e0b\u5404\u4f4ddalao\u81f4\u4ee5\u6df1\u6df1\u7684\u656c\u610f~\u867d\u7136\u5199\u7684\u5f88\u6e05\u695a\u4e86\u6211\u8fd8\u662f\u6ca1\u6709\u770b\u61c2QAQ\u662f\u56e0\u4e3a\u6211\u592a\u8822\u4e86\uff08\u4e5f\u5c31\u6211\u8fd9\u4e48\u7b28\u5566\uff09\n\n\n\u4ee3\u7801\u548c\u601d\u8def\u662f\u7ed3\u5408\u8001\u5e08\u8bb2\u89e3\uff08\u6ca1\u9519\u5c31\u662f\u6211\u4eec\u7684\u8003\u8bd5\u9898QAQ\u5b8c\u7f8e0\u5206\uff09\u8fd8\u6709\u4e00\u697c\u7684Pascal\u5927\u795e\u7ecf\u8fc7\u8bba\u575b\u91cc\u67d0\u4f4d\u795e\u7287\u7684\u7ffb\u8bd1\u540e\u7684c++\u4ee3\u7801\u5199\u51fa\u6765\u7684~\u8868\u793a\u5341\u5206\u7684\u4f69\u670d\u4e24\u4f4ddalaoQWQ\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n**\u9898\u76ee\u8981\u6c42**\n\n\n\u66f4\u6362n\u5f20\u724c\u4e2d\u7684\u67d0\u4e9b\u724c\u4f7f\u5176\u80fd\u591f\u51d1\u6210\u540c\u82b1\u987a\uff0c\u4e14\u4f7f\u6362\u6389\u7684\u724c\u7684\u5f20\u6570\u6700\u5c0f\u3002\n\n\n**\u601d\u8def\u5206\u6790**\n\n\n\u53cd\u5411\u601d\u8003\u4e00\u4e0b\uff0c\u6211\u4eec\u53ea\u8981\u6c42\u80fd\u7ec4\u6210\u7684\u540c\u82b1\u987a\u7684\u6700\u957f\u957f\u5ea6\uff08\u7ec4\u6210\u5f20\u6570\uff09l\uff0c\u518d\u7528n\u51cf\u53bbl\u5373\u53ef\u3002\n\n\n\u600e\u4e48\u6c42l\u5462\uff1f\n\n\n\u5047\u8bbe\u6709\u8fd9\u6837\u4e00\u7ec4\u6837\u4f8b\uff1a\n\n\n6\n\n1 7\n\n2 8\n\n1 9\n\n1 10\n\n2 2\n\n3 5\n\n\u9996\u5148\u6211\u4eec\u8981\u601d\u8003\u540c\u82b1\u987a\u7684\u6027\u8d28\uff1a\u82b1\u8272\u76f8\u540c\u4e14\u6570\u5b57\u8fde\u7eed\u3002\u90a3\u4e48\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4ec0\u4e48\u5462\uff1f\u5927\u591a\u6570\u4eba\u6700\u5148\u60f3\u5230\u7684\u5927\u6982\u662f\u6392\u5e8f\u5427\u3002\u6ca1\u9519\uff0c\u7684\u786e\u9700\u8981\u6392\u5e8f\uff0c\u8fd9\u662f\u505a\u51fa\u8fd9\u9053\u9898\u7684\u4e00\u4e2a\u5341\u5206\u91cd\u8981\u7684\u57fa\u7840\u3002\u4f46\u662f\u540c\u82b1\u987a\u8fd8\u6709\u4e00\u4e2a\u6027\u8d28\u662f\u82b1\u8272\u76f8\u540c\uff0c\u8bf4\u660e\u8fd9\u4e2a\u9898\u6392\u5e8f\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u6392\u5e8f\u3002\u8be5\u600e\u4e48\u6392\u5e8f\u624d\u80fd\u6c42\u51fa\u201c\u989c\u8272\u76f8\u540c\u201d\u7684\u6700\u957f\u5355\u8c03\u9012\u589e\u5e8f\u5217\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6392\u5e8f\u6cd5\u5219rule\uff08\u8be6\u89c1\u4ee3\u7801\uff09\uff0c\u5982\u679c\u4e24\u5f20\u724c\u989c\u8272\u76f8\u540c\uff0c\u5219\u5c06\u5b83\u4eec\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5e8f\uff1b\u5982\u679c\u989c\u8272\u4e0d\u540c\uff0c\u5219\u5c06\u4ed6\u4eec\u7684\u989c\u8272\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\n\u6392\u5e8f\u540e\u6211\u4eec\u5c06\u5f97\u5230\u8fd9\u6837\u4e00\u7ec4\u6570\u636e\uff1a\n\n\n1 7\n\n1 9\n\n1 10\n\n2 2\n\n2 8\n\n3 5\n\u6392\u5b8c\u5e8f\u4e4b\u540e\u6211\u4eec\u662f\u4e0d\u662f\u5c31\u53ef\u4ee5\u5f00\u5f00\u5fc3\u5fc3\u6c42\u6700\u957f\u5e8f\u5217\u4e86\u5462\uff1f\u673a\u667a\u7684\u51fa\u9898\u4eba\u663e\u7136\u4e0d\u4f1a\u8fd9\u4e48\u8f7b\u6613\u653e\u8fc7\u6211\u4eec\uff08233\uff09\uff0cTA\u57cb\u4e86\u4e00\u4e2a\u5751\u5728\u8fd9\u91cc\u9762\uff1a\u53ef\u80fd\u4f1a\u5b58\u5728\u82b1\u8272\u548c\u6570\u503c\u5747\u76f8\u540c\u7684\u6251\u514b\u724c\u3002\u8fd9\u6837\u5c31\u5f71\u54cd\u4e86\u6211\u4eec\u6c42\u6700\u5927\u5e8f\u5217\u957f\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u8981\u901a\u8fc7\u6761\u4ef6\u8bed\u53e5\u6765\u7b5b\u51fa\u8fd9\u4e9b\u724c\u3002\u6211\u4eec\u518d\u7528\u4e00\u4e2a\u6570\u7ec4b[]\u6765\u8bb0\u5f55\u7b5b\u51fa\u91cd\u590d\u724c\u540e\u7684\u6570\u636e\u3002\u8df3\u8fc7\u8fd9\u4e2a\u5751\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6700\u540e\u7684\u5de5\u4f5c\u5566\uff01\u5982\u4f55\u6c42\u6700\u957f\u7684\u5e8f\u5217\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u6240\u6709\u533a\u95f4\uff0c\u6765\u5224\u65ad\u54ea\u4e2a\u533a\u95f4\u957f\u5ea6\u6700\u5927\u4e14\u6ee1\u8db3\u662f\u540c\u8272\u724c&&b[i].y-b[j].y+1<=n\uff08\u8fd9\u4e2a\u5224\u65ad\u6761\u4ef6\u975e\u5e38\u7684\u5173\u952e\uff09\u3002\u8fd9\u4e2a\u6761\u4ef6\u662f\u600e\u4e48\u63a8\u51fa\u7684\u5462\uff1f\u5148\u7406\u89e3b[i].y-b[j].y+1\u7684\u610f\u4e49\uff1a\u5b83\u8868\u793a\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u533a\u95f4\u6709\u51e0\u5f20\u724c\u3002\u5f53\u5b83\u7684\u957f\u5ea6d<=n\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u80fd\u591f\u62ff\u51fa\u8db3\u591f\u7684\u724c\u6765\u66f4\u6362\u8fd9\u4e2a\u533a\u95f4\u4e2d\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u724c\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u51fa\u6700\u5927\u5e8f\u5217\u957f\u5ea6\u5566~\n\n\n\u5e0c\u671b\u6211\u628a\u8fd9\u4e2a\u9898\u7684\u601d\u8def\u53d9\u8ff0\u6e05\u695a\u4e862333~\n\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nint n,cnt=0,ans,temp=0;\nstruct node\n{\n    int x;\n    int y;\n}a[100003],b[100003]; \nbool rule(const node &s1,const node &s2)\n{\n    if(s1.x==s2.x) return s1.y<s2.y;\n//\u8fd9\u91cc\u628a\u540c\u8272\u7684\u6392\u5728\u4e00\u8d77\uff0c\u65b9\u4fbf\u540e\u7eed\u64cd\u4f5c \n    else return s1.x<s2.x;\n} \nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i].x>>a[i].y;\n    }\n    sort(a+1,a+n+1,rule);\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i-1].x!=a[i].x||a[i-1].y!=a[i].y)\n        {\n            b[++cnt]=a[i];\n        } \n        //\u8fd9\u91cc\u6211\u4eec\u901a\u8fc7if\u8bed\u53e5\u6765\u7b5b\u53bb\u540c\u8272\u724c\u4e2d\u6570\u503c\u76f8\u540c\u7684\u724c \n    }\n    for(int i=1;i<=cnt;i++)//\u679a\u4e3e\u533a\u95f4\u53f3\u7aef\u70b9 \n    {\n        temp=0;\n        //\u6ce8\u610f\u6b64\u5904\u4e00\u5b9a\u8981\u5199\u5728\u7b2c\u4e00\u4e2a\u5faa\u73af\u548c\u7b2c\u4e8c\u4e2a\u5faa\u73af\u4e4b\u95f4 \n        for(int j=i;j>=1;j--)//\u679a\u4e3e\u533a\u95f4\u5de6\u7aef\u70b9 \n        {\n            if(b[i].x==b[j].x&&b[i].y-b[j].y+1<=n)\n            //\u5982\u679c\u662f\u540c\u8272\u724c\u5e76\u4e14\u5f20\u6570\u5dee\u5c0f\u4e8e\u7b49\u4e8en\u5219\u4e00\u5b9a\u80fd\u591f\u901a\u8fc7\u6362\u724c\u5b9e\u73b0\u540c\u82b1\u987a \n            {\n                temp++; \n            }\n            else break;//\u4e0d\u7b26\u5408\u6761\u4ef6\u5219\u9000\u51fa \n        }\n        if(temp>ans) ans=temp;//\u53d6\u6240\u6709\u53ef\u884c\u65b9\u6848\u4e2d\u6700\u5927\u503c \n    }\n    cout<<n-ans<<endl; \n    return 0;\n}\n```",
        "postTime": 1503318762,
        "uid": 32529,
        "name": "Merak",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "# [\u9898\u76ee](https://www.luogu.com.cn/problem/P2652)\n\n\n\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u6c42\u6700\u5c11\u66f4\u6362\u591a\u5c11\u5f20\u724c\u5c31\u80fd\u591f\u6ee1\u8db3\u540c\u82b1\u987a\n\n\n\u7136\u540e\u6211\u4eec\u53cd\u5411\u601d\u8003\u4e00\u4e0b\uff1a\u6700\u5c11\u66f4\u6362\u591a\u5c11\u5f20 == \u6700\u591a\u6709\u591a\u5c11\u5f20\u4e0d\u7528\u6362\n\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u540c\u82b1\u987a\u7684\u5b9a\u4e49\uff1a\u6240\u8c13\u540c\u82b1\u987a\uff0c\u5c31\u662f\u6307\u4e00\u4e9b\u6251\u514b\u724c\uff0c\u5b83\u4eec\u82b1\u8272\u76f8\u540c\uff0c\u5e76\u4e14\u6570\u5b57\u8fde\u7eed\n\n\n\u6211\u4eec\u5c31\u4f1a\u53d1\u73b0\u80af\u5b9a\u662f\u5c3d\u53ef\u80fd\u591a\u7684\u4e0d\u52a8\uff08\u800c\u4e14\u6700\u7ec8\u6784\u6210\u7684\u540c\u82b1\u987a\u7684\u8d77\u70b9\u6216\u7ed3\u5c3e\u53ef\u4ee5\u662f\u539f\u6709\u7684\u6251\u514b\u724c\uff09\n\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e\u6bcf\u5f20\u724c\u4f5c\u4e3a\u6784\u6210\u7684\u540c\u82b1\u987a\u7684\u672b\u5c3e(\u5148\u53bb\u91cd)\n\n\n\uff08\u8fd9\u91cc\u7684\u53bb\u91cd\u6307\u7684\u662f\u5c06\u82b1\u8272\u76f8\u540c\uff0c\u6570\u5b57\u76f8\u540c\u7684\u6251\u514b\u724c\u53bb\u6389\uff09\n\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u4e00\u5171\u6709$n$\u5f20\u724c\uff0c\u7136\u540e\u82b1\u8272\u4e3a$a_{i}$\uff0c\u6570\u5b57\u4e3a$b_{i}$\u7684\u724c\u4f5c\u4e3a\u5f53\u524d\u679a\u4e3e\u5230\u7684\u540c\u82b1\u987a\u7684\u672b\u5c3e\n\n\n\u56e0\u4e3a\u679a\u4e3e\u5230\u7684\u6700\u540e\u4e00\u5f20\u6251\u514b\u724c\u7684\u6570\u5b57\u4e3a$b_{i}$\uff0c\u82b1\u8272\u4e3a$a_{i}$\uff0c\u6240\u4ee5\u4ee5\u8fd9\u5f20\u724c\u4e3a\u7ed3\u5c3e\u7684\u540c\u82b1\u987a\u7684\u7b2c\u4e00\u5f20\u724c\u4e00\u5b9a\u662f\u4e00\u5f20\u82b1\u8272\u4e3a$a_{i}$\uff0c\u6570\u5b57\u4e3a$b_{i}-n+1$\u7684\u6251\u514b\u724c\uff08\u6700\u540e\u5f97\u5230\u7684\u540c\u82b1\u987a\uff09\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u6700\u591a\u6709\u591a\u5c11\u5f20\u4e0d\u7528\u66f4\u6362\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8003\u8651\u539f\u6251\u514b\u724c\u4e2d\uff08\u53bb\u91cd\u4e4b\u540e\uff09\u6709\u591a\u5c11\u5f20\u6251\u514b\u724c\uff08\u8bbe\u4e3a$k$\uff09\u6ee1\u8db3\u6761\u4ef6$a_{k} == a_{i}$&&$a_{i}-n+1 \\leq a_{k} \\leq a_{i}$\n\n\n\u4e0a\u8ff0\u60c5\u51b5\u603b\u7ed3\u4e3a\u4e24\u70b9\uff1a\n\n* \u4e0e\u5f53\u524d\u679a\u4e3e\u7684\u7ed3\u5c3e\u82b1\u8272\u4e0d\u540c\u7684\u4e00\u5b9a\u8981\u66f4\u6362\n* \u4e0e\u5f53\u524d\u7ed3\u5c3e\u5982\u679c\u82b1\u8272\u76f8\u540c\uff0c\u4e14\u6570\u5b57 $>$ (\u5f53\u524d\u679a\u4e3e\u5230\u7ed3\u5c3e\u7684\u6251\u514b\u724c\u7684\u6570\u5b57 - n)\uff0c\u5c31\u4e0d\u7528\u66f4\u6362 \n\n\n\n\u6211\u4eec\u5148\u6392\u5e8f\uff0c\u4f7f\u76f8\u540c\u82b1\u8272\u7684\u5728\u4e00\u8d77\uff0c\u5e76\u4e14\u6ee1\u8db3\u76f8\u540c\u82b1\u8272\u7684\u6570\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u7136\u540e\u53ef\u4ee5\u7528$queue$\u7ef4\u62a4,\u9047\u5230\u65b0\u7684\u4e0d\u540c\u7684\u82b1\u8272\u5c31\u6e05\u7a7a\u961f\u5217\uff0c\u5426\u5219\u5c31\u5220\u9664\u961f\u9996\u4e0d\u6ee1\u8db3\u7684\uff0c\u7136\u540e\u5c06\u5f53\u524d\u8fd9\u4e2a\u679a\u4e3e\u5230\u7684\u7ed3\u5c3e\u63d2\u5165\u961f\u5217\uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u4e2a\u6700\u5927\u7684$size$\uff0c\u6700\u540e\u6c42\u5f97\u6700\u5927\u7684\u4e0d\u7528\u66f4\u6362\u7684\u724c\u6570\uff08\u7136\u540e\u7528\u603b\u6392\u6570\u51cf\u53bb\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u4e86\uff09\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, ans, cnt;\nstruct node{\n\tint x, y;\n}a[N], b[N]; \nbool cmp(node op, node opp){\n\tif(op.x == opp.x) return op.y < opp.y;\n\treturn op.x < opp.x;\n}\nqueue<int> q;\nvoid cl(){\n\twhile(!q.empty()) q.pop();\n}\nint main(){\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i ++) scanf(\"%d %d\", &a[i].x, &a[i].y);\n\tsort(a + 1, a + n + 1, cmp);\n\tfor(int i = 1; i <= n; i ++){\n\t\tif(a[i].x == a[i - 1].x && a[i].y == a[i - 1].y) continue;\n\t\tb[++ cnt] = a[i];\t//cout<<cnt<<\"ssddd\\n\";\n\t}\n\n\tfor(int i = 1; i <= cnt; i ++){\n\t\tif(b[i].x != b[i - 1].x) cl();\n\t    while(q.size() && b[i].y - q.front() >= n) q.pop();\n\t\tq.push(b[i].y);\n\t\tans = max(ans, (int)q.size()); \n\t}\n\n\tans = (n - ans);\n\tprintf(\"%d\\n\", ans); \n\tfclose(stdin); fclose(stdout);\n\treturn 0;\n} \n```\n\n\u5b8c\u7f8e\u6492\u82b1\u273f\u273f\u30fd(\u00b0\u25bd\u00b0)\u30ce\u273f",
        "postTime": 1600039099,
        "uid": 93669,
        "name": "Tethys",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "GTY\u5927\u4f6c\u7684\u9898\uff0c\u5df2\u7ecf\u505a\u4e86\u4e24\u904d\u3002\n\n\u7528\u961f\u5217\u7ef4\u62a4\u7684\u8bdd\u5176\u5b9e\u662f\u5f88\u7b80\u5355\u7684\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u5982\u679c\u786e\u5b9a\u4e86\u4e00\u5f20\u724c\u4f5c\u4e3a\u67d0\u540c\u82b1\u987a\u7684\u7ed3\u5c3e\uff0c\u90a3\u4e48\u6574\u4e2a\u540c\u82b1\u987a\u662f\u786e\u5b9a\u7684\uff0c\u5176\u6b21\uff0c\u5982\u679c\u6709n\u5f20\u724c\uff0c\u90a3\u4e48\u6700\u7ec8\u7ec4\u6210\u7684\u540c\u82b1\u987a\u4e00\u5b9a\u6709n\u5f20\uff0c\u53e6\u5916\uff0c\u5bf9\u4e8e\u4e24\u5f20\u5b8c\u5168\u76f8\u540c\u7684\u724c\uff0c\u4e00\u5b9a\u4f1a\u66f4\u6362\u81f3\u5c11\u4e00\u5f20\uff0c\u6709\u4e86\u4ee5\u4e0a\u7ed3\u8bba\uff0c\u601d\u8def\u5c31\u663e\u800c\u6613\u89c1\u4e86\uff0c\u9996\u5148\u5c06\u6240\u6709\u7684\u724c\u6309\u7167\u82b1\u8272\u5206\u5f00\uff0c\u53bb\u91cd\uff0c\u6392\u5e8f\uff0c\u7136\u540e\u5bf9\u4e8e\u76f8\u540c\u7684\u82b1\u8272\uff0c\u7528\u4e00\u4e2a\u961f\u5217\u53bb\u7ef4\u62a4\u4ee5\u6bcf\u4e00\u5f20\u724c\u4f5c\u7ed3\u5c3e\u65f6\u80fd\u5728\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u724c\uff08\u5373\u7ef4\u62a4\u9996\u5c3e\u6307\u9488\uff09\uff0c\u7136\u540e\u7edf\u8ba1\u51fa\u8fd9\u4e9b\u724c\u7684\u6570\u91cf\uff0c\u53d6\u8f83\u5927\u503c\uff0c\u7b54\u6848\u5c31\u662f\u724c\u7684\u603b\u6570\u4e0e\u8fd9\u4e2a\u503c\u5f97\u5dee\u503c\u3002\u8be6\u7ec6\u53ef\u89c1\u6211\u7684\u535a\u5ba2[Youngsc](http://youngscc.github.io/2017/10/10/%E6%B4%9B%E8%B0%B7%20P2652%20%E5%90%8C%E8%8A%B1%E9%A1%BA/)\n",
        "postTime": 1507685530,
        "uid": 36282,
        "name": "Youngsc",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u5176\u4ed6\u9898\u89e3\u91cc\u90fd\u6ca1\u6709\u8bb2\u5230\u7684**\u4e8c\u5206**\u505a\u6cd5\u3002\n\n\u5148\u8bf4\u4e24\u4e2a\u663e\u800c\u6613\u89c1\u7684\u7ed3\u8bba\uff1a\n\n1.\u6700\u5c11\u66f4\u6362\u7684\u724c\u6570=\u603b\u724c\u6570-\u4e0d\u66f4\u6362\u724c\u53ef\u4ee5\u51d1\u6210\u7684\u6700\u957f\u7684\u540c\u82b1\u987a\u7684\u957f\u5ea6\u3002\n\n2.\u5982\u679c\u6709\u591a\u5f20\u724c\u82b1\u8272\u548c\u6570\u503c\u90fd\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u80af\u5b9a\u53ea\u80fd\u7559\u4e0b\u4e00\u5f20\u8fd9\u6837\u7684\u724c\uff0c\u5269\u4e0b\u7684\u5168\u90e8\u90fd\u5f97\u6362\u6389\u3002\n\n\u5bf9\u4e8e1\u8fd9\u91cc\u505a\u4e2a\u89e3\u91ca\uff1a\u201c\u4e0d\u66f4\u6362\u724c\u53ef\u4ee5\u51d1\u6210\u7684\u6700\u957f\u7684\u540c\u82b1\u987a\u201d\u53ef\u4ee5\u4e0d\u7528\u662f\u8fde\u7eed\u7684\uff0c\u4f46\u662f\u9700\u8981\u6ee1\u8db3**\u540c\u82b1\u8272\u5e76\u4e14\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u5c0f\u4e8e\u603b\u724c\u6570**\u3002\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a\u6211\u4eec\u53ef\u4ee5\u628a\u5269\u4e0b\u7684\u9700\u8981\u6362\u6389\u7684\u724c\u6362\u6210\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u4e2d\u95f4\u7684\u90e8\u5206\u6765\u8865\u6210\u4e00\u4e2a\u540c\u82b1\u987a\u3002\u4f8b\u5982\uff1a\u5f53 $N=5$ ,\u724c\u7684\u6570\u5b57\u5206\u522b\u4e3a $1,4,100,200,300$ \uff0c\u5e76\u4e14\u82b1\u8272\u5168\u90e8\u76f8\u540c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a $100$ \u6362\u6210 $2$\uff0c\u628a $200$ \u6362\u6210 $3$\uff0c\u518d\u628a $300$ \u6362\u6210 $5$\uff0c\u6765\u7ec4\u6210\u4e00\u4e2a\u540c\u82b1\u987a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5148\u5c06\u8f93\u5165\u7684\u6570\u7ec4\u4ee5 $a$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c $b$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5bf9\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u8fdb\u884c\u53bb\u91cd\uff08\u6307\u628a\u82b1\u8272\u548c\u6570\u5b57\u90fd\u76f8\u540c\u7684\u724c\u53bb\u6389\uff09\uff0c\u5728\u53bb\u91cd\u7684\u65f6\u5019\u8ba1\u7b97\u53bb\u9664\u4e86\u51e0\u5f20\u724c\uff0c\u5148\u5c06\u5176\u7d2f\u52a0\u5230\u7b54\u6848\u4e2d\u3002\u63a5\u7740\u6211\u4eec\u4ee4 $f_i$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u6700\u957f\u7684\u540c\u82b1\u987a\u3002\u7136\u540e\u6211\u4eec\u4e8c\u5206\u627e\u5230 $i$ \u6240\u5c5e\u7684\u82b1\u8272\u7684\u5de6\u7aef\u70b9 $l$ \uff0c\u518d\u5728\u533a\u95f4 $[l,i]$ \u4e2d\u4e8c\u5206\u4f7f\u5f97 $v_i-v_j+1<=N$ \u7684\u6700\u5c0f\u7684 $j$ \uff08\u5176\u4e2d $v_i$ \u8868\u793a\u7ed3\u70b9 $i$ \u7684\u6570\u5b57\uff09\uff0c $f_i$ \u7684\u503c\u5c31\u662f\u533a\u95f4 $[j,i]$ \u5185\u7684\u5143\u7d20\u4e2a\u6570\uff08\u56e0\u4e3a\u533a\u95f4\u5185\u7684\u6570\u7684\u6570\u5b57\u662f\u9012\u589e\u7684\uff0c\u6240\u4ee5\u5982\u679c $j$ \u53ef\u4ee5\u4e0e $i$ \u51d1\u6210\u540c\u82b1\u987a\uff0c\u90a3\u4e48\u6240\u6709\u5927\u4e8e $j$ \uff0c\u5c0f\u4e8e $i$ \u4f4d\u7f6e\u4e0a\u7684\u6570\u4e5f\u53ef\u4ee5\u4e0e $i$ \u51d1\u6210\u540c\u82b1\u987a\uff09\u3002\n\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4e8c\u5206\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u4ee5\u82b1\u8272\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u6240\u4ee5\u82b1\u8272\u662f\u6709\u5e8f\u7684\uff0c\u53c8\u56e0\u4e3a\u6211\u4eec\u4ee5\u6570\u5b57\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u6240\u4ee5\u5728\u540c\u4e00\u82b1\u8272\u4e2d\uff0c\u4ed6\u4eec\u7684\u6570\u5b57\u53c8\u662f\u6709\u5e8f\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u3002\n\n\u6700\u540e\u6211\u4eec\u7684\u7b54\u6848\u5c31\u662f **\u53bb\u91cd\u540e\u7684\u603b\u724c\u6570 $-$ $f_i$ \u7684\u6700\u5927\u503c $+$ \u91cd\u590d\u7684\u724c\u6570**\u3002\n\nCode\uff1a\n\n```cpp\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<queue>\n#include<algorithm>\n#include<cmath>\n#include<stack>\n#include<iostream>\nusing namespace std;\n\nconst int MAXN=1e5+50;\ntypedef long long LL;\n\nstruct node{\n\tint x;\n\tint y;\n};\n\nint N,f[MAXN],Ans=1,add=0;//add\u8868\u793a\u53bb\u6389\u7684\u724c\u6570\uff0cAns\u8868\u793a\u7b54\u6848 \nint c[MAXN],v[MAXN],cnt=0;//c\u6570\u7ec4\u8868\u793a\u82b1\u8272\uff0cv\u6570\u7ec4\u8868\u793a\u6570\u5b57\uff0ccnt\u8868\u793a\u53bb\u91cd\u540e\u7684\u603b\u724c\u6570 \nnode a[MAXN],b[MAXN];\n\nbool cmp(node a,node b){return a.x!=b.x?a.x<b.x:a.y<b.y;}\n\nvoid Init(){\n\tscanf(\"%d\",&N);\n\tfor(int i=1;i<=N;++i) scanf(\"%d%d\",&a[i].x,&a[i].y);\n}\n\nvoid Solve(){\n\tsort(a+1,a+1+N,cmp);\n\tb[++cnt]=a[1];\n\tfor(int i=2;i<=N;++i){//\u53bb\u91cd \n\t\tif(a[i].x!=a[i-1].x||a[i].y!=a[i-1].y) b[++cnt]=a[i];\n\t\telse ++add;//\u8ba1\u7b97\u91cd\u590d\u7684\u724c\u6570 \n\t}\n\tfor(int i=1;i<=cnt;++i) c[i]=b[i].x,v[i]=b[i].y; \n\tf[1]=1;\n\tfor(int i=2;i<=cnt;++i){\n\t\tint l=lower_bound(c+1,c+i+1,c[i])-c;//\u627e\u5230\u540c\u82b1\u8272\u5de6\u7aef\u70b9 \n\t\tint pos=lower_bound(v+l,v+i,v[i]-N+1)-v;//\u4e8c\u5206\u627e\u5230\u6700\u5c0f\u7684\u53ef\u4ee5\u51d1\u6210\u540c\u82b1\u987a\u7684\u4f4d\u7f6e \n\t\tf[i]=i-pos+1;//\u66f4\u65b0f[i]\u7684\u503c \n\t\tAns=max(Ans,f[i]);//\u53d6\u6700\u5927\u503c \n\t}\n\tAns=cnt-Ans+add;//\u8ba1\u7b97\u771f\u6b63\u7684\u7b54\u6848 \n}\n\nvoid Print(){\n\tcout<<Ans<<endl;\n}\n\nint main()\n{\n\tInit();\n\tSolve();\n\tPrint();\n    return 0;\n}\n```",
        "postTime": 1598788050,
        "uid": 208529,
        "name": "Konnyaku_LXZ",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "//\u697c\u4e0b\u5927\u4f6c\u597d\u50cf\u8bb2\u7528\u961f\u5217\uff0c\u7136\u800c\u6211\u4ec0\u4e48\u90fd\u4e0d\u77e5\u9053\u2026\u2026\n\n\n\n\n```cpp\n//\u624b\u52a8\u6a21\u62df\u4e86\u4e00\u4e0b\uff0c\u5176\u5b9e\u6392\u5e8f\u53ef\u4ee5\u8d77\u5f88\u5927\u4f5c\u7528\n//\u9898\u76ee\u8981\u6c42\u82b1\u8272\u76f8\u540c\uff0c\u6570\u5b57\u8fde\u7eed\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u627e\u4e00\u79cd\u82b1\u8272\uff0c\u5e76\u63d0\u53d6\u51fa\u5176\u4e2d\u4e00\u4e32\u6570\u5b57\u7559\u4e0b\n//\u90a3\u4e9b\u820d\u5f03\u7684\u724c\u6362\u6210\u76f8\u5e94\u82b1\u8272\uff0c\u5e76\u548c\u4e4b\u524d\u7559\u4e0b\u7684\u4e00\u4e32\u6570\u5b57\u51d1\u6210k\uff5e(k+n-1)   \u5171n\u4e2a\n//\u7531\u4e0a\u6587\u53ef\u63a8\u51fa\uff1a\u7559\u4e0b\u7684\u6570\u5b57\u4e2d\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\u4e0d\u80fd\u8d85\u8fc7n-1\uff0c\u5426\u5219\u65e0\u6cd5\u51d1\u51fa\u8fde\u7eed\u7684\u4e00\u4e32\u6570\n//\u90a3\u6211\u4eec\u4fbf\u6392\u5e8f\uff1a\u628a\u82b1\u8272\u76f8\u540c\u7684\u653e\u4e00\u5757\uff0c\u76f8\u540c\u82b1\u8272\u7684\u6570\u5b57\u9012\u589e(\u9012\u51cf\u4e5f\u65e0\u6240\u8c13)\u6392\u5217\uff0c\u53bb\u6389\u91cd\u590d\u7684\u724c\u540e\uff0c\n//\u627e\u4e00\u4e32\u82b1\u8272\u76f8\u540c \u4e14 \u6570\u5b57\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\u4e0d\u8d85\u8fc7n-1 \u7684\u724c\uff0c\n//\u56e0\u4e3a\u6211\u4eec\u8981\u53bb\u6389\u6700\u5c11\u7684\u724c\uff0c\u6240\u4ee5\u5c31\u627e\u5230\uff01\u6700\u957f\uff01\u7684\u4e00\u4e32\u7b26\u5408\u4e0a\u6587\u63cf\u8ff0\u7684\u724c(\u4e5f\u5c31\u662f\u7559\u4e0b\u6700\u591a\u7684\u724c)\n// \u7b54\u6848=n-\u957f\u5ea6   \u5373\u53ef\n//\u8bf7\u522b\u5acc\u5f03\u6211\u7684\u4ee3\u7801\uff08\u7b11\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<string>\n#define rg register\nusing namespace std;\nint n,b[100001][2],result=0;\nstruct pp\n{\n    int a,b;\n}card[100001];\n//      Vv + vV\ninline int read()\n{\n    char q;int save=0,w=1;\n    while(q<'0'||q>'9'){if(q=='-')w=-1;q=getchar();}\n    while(q>='0'&&q<='9')save=save*10+q-'0',q=getchar();\n    return w*save;\n}\ninline bool Cwen(const pp &x,const pp &y)//Cwen\u51fd\u6570\u5c31\u662f\u7528\u5728sort\u91cc\u7684\u5224\u65ad\u51fd\u6570\n{\n    if(x.a==y.a)return x.b<=y.b;//\u82b1\u8272\u76f8\u540c\u65f6\u6309\u6570\u5b57\u5927\u5c0f\u6392\n    else return x.a<y.a;             //\u628a\u82b1\u8272\u76f8\u540c\u7684\u653e\u5230\u4e00\u5768(\u597d\u50cf\u6df7\u8fdb\u4e86\u4ec0\u4e48\u5947\u602a\u7684\u4e1c\u897f)\n}\n//      << + >>\nint main()\n{\n    n=read();\n    rg int i,j;\n    for(i=1;i<=n;++i)\n        card[i].a=read(),card[i].b=read();\n    sort(card+1,card+n+1,Cwen);\n    j=0;               //j\u7528\u6765\u6307b\u6570\u7ec4\n    for(i=1;i<=n;++i)\n    {\n        if(card[i].a!=card[i+1].a || card[i].b!=card[i+1].b)            //\u53bb\u91cd\n            b[++j][0]=card[i].a, b[j][1]=card[i].b;                     //\u8d4b\u8fdbb\u6570\u7ec4\n    }\n    rg int len=j;//\u628ab\u6570\u7ec4\u7684\u957f\u5ea6\u8bb0\u5230len\u91cc\n    for(i=1;i<=len;++i)\n    {\n        int can=0;//can\u8868\u793a\u4ee5i\u4e3a\u7ec8\u70b9\u7684\u4e00\u6bb5\u80fd\u8fbe\u5230\u591a\u957f\n        for(j=i-1;j>=1;--j)\n        {\n            if(b[j][0]==b[i][0] && b[i][1]-b[j][1]<n)\n                can++;\n            else\n                break;//\u4e00\u65e6\u65ad\u4e86\u5c31\u8df3\u51fa\u5faa\u73af\u627e\u4e0b\u4e00\u4e2ai\n        }\n        result=result<can+1?can+1:result;//can+1\u662f\u56e0\u4e3a i\u81ea\u5df1\u8fd9\u5f20\u724c \u5728\u91cc\u5c42\u5faa\u73af\u4e2d\u6ca1\u88ab\u7b97\u8fdb\u53bb\n    }\n    printf(\"%d\\n\",n-result);\n    return 0;\n}\n```\n\u5929\u4f9d\u8d5b\u9ad8\uff01\uff01\uff01\uff01\uff01",
        "postTime": 1510212717,
        "uid": 66512,
        "name": "\u5929\u4f9d\u8d5b\u9ad8\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "\u524d\u9762\u5c45\u7136\u5df2\u7ecf\u6709\u6709\u5c71\u4e1c\u7684\u5927\u5144\u5f1f\u5199\u8fc7\u9898\u89e3\u4e86\u554a \u611f\u4eba\u554a\n\n\n17SD\u590f\u4ee4\u8425\u505a\u5230\u7684+1\n\n\n\u5199\u4e2a\u7b80\u5355\u7684\u9898\u89e3\u597d\u4e86\n\n\n\u603b\u4f53\u6765\u8bf4 \u5047\u5982\u7ed9\u4f60n\u5f20\u724c \u6700\u5c0f\u7684\u724c\u53f7\u4e3a1 \u6700\u5927\u7684\u662fn+233 \u4f60\u60f3\u628a\u4ed6\u4eec\u51d1\u6210\u4e00\u526f\u987a\u5b50\u5f88\u663e\u7136\u662f\u4e0d\u53ef\u80fd\u7684\uff01\n\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u8981\u6362\u724c\n\n\n\u6839\u636e\u8d2a\u5fc3 \u53ea\u8981\u4ed6\u4eec\u7684\u6700\u5927\u724c\u53f7\u5dee<\u603b\u724c\u6570n \u90a3\u4e48\u8fd9\u79cd\u987a\u5b50\u5c31\u662f\u53ef\u4ee5\u7ec4\u8d77\u6765\u7684\uff01\n\n\n\u6240\u4ee5\u8bf4 \u6211\u4eec\u53bb\u91cd\u4ee5\u540e \u627e\u5230\u6bcf\u4e00\u79cd\u82b1\u8272\u7684\u7b26\u5408\u6761\u4ef6\u7684\u6700\u5927\u724c\u53f7\u5dee \u7136\u540e\u5728\u4ed6\u4eec\u4e4b\u95f4\u53d6max\u5c31\u597d\u5566\uff01\n\n\n\u6069\u5c31\u662f\u8fd9\u6837 \u4e0a\u4ee3\u7801\u5427ovo\n\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int mx=200005;\nstruct node{\n    int x,y;\n}e[mx],e1[mx];\nint n,m,k,kk,cnt,ans;\nbool cmp(node a,node b){\n    return a.x==b.x?a.y<b.y:a.x<b.x;\n}\nint main(){\n    scanf(\"%d\",&k);\n    for(int i=1;i<=k;i++) scanf(\"%d%d\",&e1[i].x,&e1[i].y);\n    sort(e1+1,e1+1+k,cmp);\n    for(int i=1;i<=k;i++)\n        if(e1[i].x!=e1[i-1].x || e1[i].y!=e1[i-1].y)\n            e[++cnt]=e1[i];\n    for(int i=1;i<=cnt;i++){\n        kk=1;\n        for(int j=i-1;j>=1;j--)\n            if(e[j].x==e[i].x && e[i].y-e[j].y+1<=k)    kk++;\n            else break;\n        ans=max(ans,kk);\n    }\n    printf(\"%d\",k-ans);\n    return 0;\n}\n```",
        "postTime": 1507637104,
        "uid": 25390,
        "name": "shuri001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "~~\uff08\u5f00\u6c27\u6c14\u4f18\u5316200ms\uff09~~\n\n **\u89e3\u9898\u601d\u8def**\uff1a\u5c06\u724c\u6309\u82b1\u8272\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u82b1\u8272\u4e00\u6837\uff0c\u6309\u6570\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u5bf9\u6392\u5e8f\u540e\u7684\u6bcf\u4e00\u6bb5\u82b1\u8272\u76f8\u540c\u7684\u724c\u8fdb\u884c\u5904\u7406\n\n**\u5904\u7406\u65b9\u5f0f**\uff1a\u679a\u4e3e\u75311\u5230n\u7684\u6bcf\u4e00\u5f20\u724c\uff0c\u8ba1\u7b97\u51fa\u82b1\u8272\u76f8\u540c\u7684\u724c\u4e2d\u6700\u957f\u4e0a\u5347\u5e8f\u5217\u6700\u5927\u503c\n\n\u8ba1\u7b97\u65f6\u82e5\u4e0d\u6ee1\u8db3\u82b1\u8272\u76f8\u540c\u6216\u4e24\u724c\u4e4b\u95f4\u7684\u95f4\u9699\uff08\u5982\uff0c2\u4e0e5\uff0c\u95f4\u9699\u4e3a2\uff083\u4e0e4\u4e3a\u95f4\u9699\uff09\uff09\u5c0f\u4e8e\u7b49\u4e8e\u5e8f\u5217\u4e2d\u5b58\u5728\u7684\u6700\u5927\u95f4\u9699\u7684\u8bdd\u5c31\u66f4\u65b0\u7b54\u6848\n\n\u4e4b\u6240\u4ee5\u8981\u6c42\u95f4\u9699\uff0c\u662f\u56e0\u4e3a\uff0c\u95f4\u9699\u53ef\u4ee5\u9760\u5176\u4ed6\u82b1\u8272\u7684\u6570\u5b57\u6765\u586b\u8865\u8be5\u95f4\u9699\uff08\u7279\u522b\u7684\uff0c\u5bf9\u4e8e\u76f8\u540c\u989c\u8272\u53c8\u76f8\u540c\u6570\u5b57\u7684\u724c\uff0c\u95f4\u9699\u4e3a0\uff0c\u5373\u4e0d\u9700\u8981\u522b\u7684\u724c\u4e0d\u8865\u6765\uff0c\u81ea\u5df1\u8fdb\u884c\u4fee\u6539\uff09\n\n\u6700\u540e\u8f93\u51fa\u7b54\u6848\u7528n\u51cf\u53bb\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927\u4e0a\u5347\u5e8f\u5217\u5373\u53ef\n\n\u8fd9\u5e94\u8be5\u662f\u6b63\u89e3\uff0c\u4e0d\u8fc7\u6211\u5199\u6302\u4e86\uff0c\u867d\u7136\u6709100\u5206~~\u53ef\u80fd\u662f\u6570\u636e\u592a\u6c34\u5427~~\n\n**\u4f8b\u5982\u5982\u4e0b\u60c5\u51b5**\n\n\n```\n6\n1 1\n3 2\n3 7\n3 8\n3 9\n4 7\n```\n\u5f88\u660e\u663e\u7b54\u6848\u662f3\u4f46\u662f\u6211\u5199\u7684AC\u4ee3\u7801\u8f93\u51fa\u7684\u662f4\n\n~~\u806a\u660e\u7edd\u9876~~\u673a\u667a\u7075\u654f\u7684\u6211\u53d1\u73b0\u53ea\u8981\u5bf9\u540c\u8272\u6570\u5b57\u7ef4\u62a4\u4ee3\u4ef7\u6700\u5c11\u7684\u6700\u5927\u4e0a\u5347\u5e8f\u5217\u5c31\u597d\u4e86\uff0c\u7b80\u5355\u63cf\u8ff0\u5c31\u662f\u4e0d\u7ba1\u6761\u4ef6\u76f4\u63a5\u6c42\u51fa\u540c\u79cd\u6570\u5b57\u7684\u6700\u5927\u4e0a\u5347\u5e8f\u5217\u7136\u540e\u4e0d\u65ad\u51cf\u53bb\u76f8\u9694\u6700\u5927\u7684\u70b9\uff0c\u76f4\u5230\u8fbe\u5230\u6761\u4ef6\u4e3a\u6b62\n\n\u4ee3\u7801\u8fd8\u662f\u5f88\u597d\u6539\u7684\u4e0b\u9762\u5c31\u4e0d\u505a\u4fee\u6539\u4e86\uff0c~~\u6bd5\u7adf\u4e5f\u8fc7\u4e86\u9a6c\uff1f\uff01\uff01~~\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct node {\n\tlong long num,col;\n} a[100001];\nlong long n,kinds[100001];\n\nint cmp(node x,node y) {\n\tif(x.col==y.col)return x.num<y.num;\n\treturn x.col<y.col;\n}\nint charge() {\n\tint ans=0;//maxn\n\tint sum=0;\n\tint now=1;\n\tfor(int i=1; i<=n; i++) {\n\t\tif((a[i].col==a[i-1].col)&&(a[i].num-a[i-1].num+sum-1<=n-now-1)) {\n\t\t\tsum+=a[i].num-a[i-1].num-1;\n\t\t\tif(a[i].num!=a[i-1].num)now++;\n\t\t} else {\n\t\t\tans=max(ans,now);\n\t\t\tsum=0;\n\t\t\tnow=1;\n\t\t}\n\n\t}\n\tans=max(ans,now);\n\treturn n-ans;\n}\nint main() {\n\t//memset(u,1,sizeof(u));\n\tscanf(\"%lld\",&n);\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%lld\",&a[i].col);\n\t\tscanf(\"%lld\",&a[i].num);\n\t}\n\tsort(a+1,a+n+1,cmp);\n\tprintf(\"%lld\",charge());\n}\n```\n",
        "postTime": 1564995236,
        "uid": 111289,
        "name": "Ryan_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "\u672c\u9898\u662f\u4e00\u4e2a\u6709\u8da3\uff08\uff1f\uff09\u7684\u601d\u7ef4\u9898\uff0c\u9898\u610f\uff1a\u8981\u66ff\u6362\u5c3d\u91cf\u5c11\u7684\u724c\uff0c\u4f7f\u5f97\u6574\u5957\u724c\u6210\u4e3a\u4e00\u4e2a\u540c\u82b1\u987a\u3002\n\n---\n\n\u601d\u8def\uff1a\u5bb9\u6613\u60f3\u5230\uff0c\u6211\u4eec\u4fdd\u7559\u73b0\u6709\u7684\u6700\u957f\u7684\u4e00\u6761\u540c\u82b1\u987a\uff0c\u5c06\u5269\u4f59\u7684\u724c\u66ff\u6362\u6389\u5373\u53ef\u3002\n\n\u5177\u4f53\u505a\u6cd5\uff1a\n\n- \u8bfb\u5165\u6570\u636e\u5148\u6309\u7167\u82b1\u8272\u3001\u6570\u5b57\u8fdb\u884c\u6392\u5e8f\u548c\u53bb\u91cd\u3002\n- \u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u540c\u82b1\u987a\u7684\u53f3\u7aef\u70b9\u3002\n- \u627e\u5230\u5de6\u4fa7\u53ef\u4ee5\u8fde\u6210\u540c\u82b1\u987a\u7684\u7b2c\u4e00\u5f20\u724c\uff0c\u8ba1\u7b97\u540c\u82b1\u987a\u957f\u5ea6\uff0c\u66f4\u65b0\u6700\u957f\u7684\u957f\u5ea6\u3002\n- \u8ba1\u7b97\u5269\u4f59\u7684\u724c\u7684\u6570\u91cf\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n---\n\n\u4ee3\u7801\uff1a\n\n```cpp\n//By: Luogu@rui_er(122461)\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5+5;\n\nint n, diff, ans;\nstruct Node {\n\tint col, val;\n\tbool operator < (const Node &a) const {\n\t\tif(this->col != a.col) return this->col < a.col;\n\t\treturn this->val < a.val;\n\t}\n\tbool operator == (const Node &a) const {return (this->col == a.col) && (this->val == a.val);}\n\tbool operator != (const Node &a) const {return !(*this == a);}\n\tNode() {}\n\tNode(int a, int b) : col(a), val(b) {}\n\t~Node() {}\n}a[N], b[N];\nint col[N], val[N];\n\nvoid discretization() {\n\tsort(a+1, a+1+n);\n\tb[++diff] = a[1];\n\tfor(int i=2;i<=n;i++) {\n\t\tif(a[i] != a[i-1]) b[++diff] = a[i];\n\t}\n\tfor(int i=1;i<=diff;i++) {\n\t\tcol[i] = b[i].col;\n\t\tval[i] = b[i].val;\n\t}\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d%d\", &a[i].col, &a[i].val);\n\tdiscretization();\n\tfor(int i=2;i<=diff;i++) {\n\t\tint uPos = lower_bound(val+(lower_bound(col+1, col+1+i, col[i])-col), val+i, val[i]-n+1) - val;\n\t\tans = max(ans, i-uPos+1);\n\t}\n\tprintf(\"%d\\n\", n-ans);\n\treturn 0;\n}\n```",
        "postTime": 1598957274,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u4e00\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\uff0c\u5728\u4e00\u6bb5\u957f\u5ea6\u4e3a$n$\u7684\u5927\u533a\u95f4\u4e2d\uff0c\u6700\u5927\u80fd\u627e\u5230\u7684\u51e0\u6bb5\u5c0f\u533a\u95f4\u7684\u957f\u5ea6\u548c\u3002\u7528$n$\u51cf\u53bb\u8fd9\u4e2a\u957f\u5ea6\u548c\uff0c\u5c31\u662f\u9700\u8981\u66f4\u6362\u7684\u724c\u6570\u3002\u4f46\u662f\u8fd9\u6837\u7684\u533a\u95f4\u6709\u5f88\u591a\uff0c\u6240\u4ee5\u90fd\u9700\u8981\u5904\u7406\u3002\u6240\u4ee5\u5148\u79bb\u6563\u5316\uff0c\u82b1\u8272\u76f8\u540c\u624d\u53ef\u4ee5\u770b\u505a\u662f\u540c\u82b1\u987a\uff0c\u7136\u540e\u5982\u679c\u82b1\u8272\u76f8\u540c\u6570\u5b57\u4e5f\u76f8\u540c\u7684\u724c\u662f\u6ca1\u6709\u4efb\u4f55\u7528\u5904\u7684\uff0c\u5982\u679c\u4e0d\u79bb\u6563\u7684\u8bdd\u4f1a\u88ab\u91cd\u590d\u8ba1\u7b97\u3002\u6240\u4ee5\u6309\u7167\u82b1\u8272\u548c\u70b9\u6570\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u79bb\u6563\u5316\u5c06\u76f8\u540c\u7684\u53bb\u9664\uff0c\u7136\u540e\u786e\u5b9a\u53f3\u533a\u95f4\uff0c\u5f80\u5de6\u5c3d\u91cf\u6269\u5c55\uff0c\u8ba1\u7b97\u80fd\u591f\u6269\u5c55\u7684\u4e2a\u6570\u3002\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,tot,cnt;\nstruct rec{\n\tlong long t,d;//t\u662f\u989c\u8272,d\u662f\u503c \n}a[100010];\nbool cmp(rec a,rec b)\n{\n\tif(a.t!=b.t)\n\t\treturn a.t<b.t;\n\treturn a.d<b.d;\n}\nbool operator ==(const rec &a,const rec &b)\n{\n\treturn (a.t==b.t&&a.d==b.d);\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i].t>>a[i].d;\n\tsort(a+1,a+1+n,cmp);\n\tcnt=unique(a+1,a+1+n)-a-1; \n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tint anss=1;\n\t\tfor(int j=1;j<min(n,i);j++)\n\t\t{\n\t\t\tif(a[i].t!=a[i-j].t||a[i].d-n>=a[i-j].d)\n\t\t\t\tbreak;\n\t\t\tanss++;\n\t\t}\n\t\ttot=max(tot,anss);\n\t}\n\tcout<<n-tot;\n\treturn 0;\n} \n```\n",
        "postTime": 1571318461,
        "uid": 67886,
        "name": "\u5730\u8868\u6700\u5f3a\u7537\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "\u4eca\u5929\u8003\u4e86\u8fd9\u9053\u9898qwq\uff0c\u9898\u89e3\u53c2\u8003\u4e86\u8001\u5e08\u7684solution\u3002\n\n$30pts$:\u66b4\u641c\u89e3\u51b3\n\n$60pts$:\u53bb\u91cd+\u8d2a\u5fc3\n\n\u4e0b\u9762\u662f\u6ee1\u5206\u505a\u6cd5\uff1a\n\n\u9996\u5148\uff0c\u80af\u5b9a\u662f\u8981\u6392\u5e8f\u7684\u3002\u6211\u4eec\u6309\u7167\u82b1\u8272\u6392\u5e8f\uff0c\u76f8\u540c\u82b1\u8272\u7684\u6309\u7167\u6570\u5b57\u6392\u5e8f\u3002\u7136\u540e\u5c31\u662f\u53bb\u91cd\uff0c\u7531\u4e8e\u91cd\u590d\u7684\u724c\u65e0\u8bba\u5982\u4f55\u4e5f\u4f1a\u88ab\u66ff\u6362\u6389\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5c06\u5176\u53bb\u91cd\uff0c\u5e76\u8bb0\u5f55\u4e0b\u6b64\u65f6\u7684\u724c\u6570\u3002\n\n\u8003\u8651\u679a\u4e3e\u6bcf\u79cd\u82b1\u8272\u4e2d\uff0c\u4ee5\u6bcf\u4e00\u5f20\u724c\u4f5c\u4e3a\u7ed3\u5c3e\u65f6\u53ef\u80fd\u7684\u5e8f\u5217\uff0c\u53d6\u6700\u5927\u503c\uff0c\u6700\u540e\u7528\u6392\u5e8f\u524d\u7684\u603b\u724c\u6570\u51cf\u53bb\u8fd9\u4e2a\u503c\u5373\u53ef\uff0c\u663e\u7136\u5730\uff0c\u5982\u679c\u5f53\u524d\u724c\u7684\u503c\u4e3a$a$\uff0c$last$\u7684\u503c\u4e3a$b$\uff0c\u5219\u9700\u6ee1\u8db3$a-b+1>m$\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define il inline\n#define re register\n#define tie0 cin.tie(0),cout.tie(0)\n#define fastio ios::sync_with_stdio(false)\n#define File(x) freopen(x\".in\",\"r\",stdin);freopen(x\".out\",\"w\",stdout)\nusing namespace std;\ntypedef long long ll;\n\ntemplate <typename T> inline void read(T &x) {\n\tT f = 1; x = 0; char c;\n    for (c = getchar(); !isdigit(c); c = getchar()) if (c == '-') f = -1;\n    for ( ; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n    x *= f;\n}\n\nstruct card {\n\tint a, b;\n\tbool operator < (const card &x)const{return a < x.a || (a == x.a && b < x.b);}\n\tbool operator == (const card &x)const{return a == x.a && b == x.b;}\n}cd[100003];\n\nint n, last, ans;\n\nint main() {\n\tFile(\"card\");\n\tread(n);\n\tfor (int i = 1; i <= n; ++i) read(cd[i].a), read(cd[i].b);\n\tsort(cd + 1, cd + 1 + n);\n\tint m = n;\n\tn = unique(cd + 1, cd + 1 + n) - (cd + 1);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (i == 1 || cd[i].a != cd[i-1].a) last = i;\n\t\twhile(cd[i].b - cd[last].b + 1 > m) last++;\n\t\tans = max(ans, i - last + 1);\n\t}\n\tprintf(\"%d\", m - ans);\n\treturn 0;\n}\n```",
        "postTime": 1564993642,
        "uid": 201280,
        "name": "\u592a\u9633\u9a91\u58eb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "\u4e3b\u4f53\u601d\u60f3\u4e0b\u9762\u7684\u5927\u795e\u8bf4\u7684\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\uff0c\n\n\u9996\u5148\u5bf9\u4e8e\u82b1\u8272\u548c\u70b9\u6570\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u7684\u5feb\u6392\uff0c\n\n\u7136\u540e\u5173\u4e8e\u6bcf\u4e2a\u82b1\u8272\u8fdb\u884c\u8d2a\u5fc3\uff0c\n\n\u8ba1\u7b97\u51fa\u5728\u540c\u4e00\u4e2a\u540c\u82b1\u987a\u4e2d\u7684\u6700\u5927\u503c\u4e4b\u540e\u7528\u603b\u6570\u51cf\u6389\u3002\n\n\u6574\u7406\u4e86\u4e00\u4efd\u7a0d\u5fae\u7b80\u5355\u4e00\u4e9b\u7684\u4ee3\u7801\uff0c\n\n\u5176\u5b9e\u4ee3\u7801\u4e3b\u4f53\u90e8\u5206\u53ea\u7528\u4e86O(N)\uff0c\u4f46\u662f\u65e0\u5948\u5feb\u6392\u662fO(N logN)\u7684\n\n\u5957\u7528\u4e86\u6211\u6700\u559c\u6b22\u7684\u6ed1\u52a8\u7a97\u53e3\n\n\u5f88\u7b80\u5355\uff0c\u65b0\u624b\u4e5f\u53ef\u4ee5\u8bd5\u7740\u7406\u89e3\u4e00\u4e0b\n\n\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<cstdlib>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define re register\nusing namespace std;\nstruct pok\n{\n    int a,b;\n}s[100005];\nbool cmp(pok a,pok b){return a.a==b.a?a.b<b.b:a.a<b.a;}//\u7ed3\u6784\u4f53\u6392\u5e8f\uff0c\u4ece\u5c0f\u5230\u5927\uff0c\u82b1\u8272\u4f18\u5148 \nint n,ans=0;\nvoid work(int from,int to)\n{\n```\n/\\*\u8fc7\u6ee4\u76f8\u540c\u7684\u724c\uff0c\u5e76\u5f52\u7eb3\u5230\u65b0\u7684\u6570\u7ec4num\u4e2d\\*/\nint num[100005],top=1;//top\u7528\u6765\u8868\u793a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u4e5f\u5c31\u662f\u4e0d\u76f8\u540c\u7684\u724c\u7684\u6570\u91cf\uff09\n\n    num[1]=s[from].b;//\u8f93\u5165\u8d77\u70b9 \n\n    for(re int i=from;i<=to;i++) \n\n        if(s[i].b!=num[top]) num[++top]=s[i].b;//\u76f8\u540c\u7684\u724c\u4f1a\u88ab\u62b9\u6389 \n\n/\\*\u6ed1\u52a8\u7a97\u53e3\uff0c\u4e0d\u4f1a\u8bf7\u81ea\u884c\u767e\u5ea6\uff0c\u8fd9\u662f\u961f\u5217\u7684\u4e00\u79cd\u5f88\u5b9e\u7528\u7684\u5e94\u7528\\*/\n\n```cpp\n    int left=0,right=1;//left\u5728\u5faa\u73af\u7684\u7b2c\u4e00\u6b21\u4f1a+1 \n    while(right<top)//\u7a97\u53e3\u7684\u53f3\u7aef\u70b9\u5982\u679c\u5df2\u7ecf\u5230\u4e86\u7ec8\u70b9\u5c31\u6ca1\u6709\u518d\u641c\u7684\u5fc5\u8981 \n    {\n        left++;//\u8d77\u70b9\u53f3\u79fb \n        while(num[right+1]-num[left]<n and right+1<=top) right++;//\u7ec8\u70b9\u5411\u53f3\u6ed1\u52a8 \n        ans=max(ans,right-left+1);//\u8ba1\u7b97\u7a97\u53e3\u7684\u5c3a\u5bf8 \n    }\n    return;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(re int i=1;i<=n;i++)\n        scanf(\"%d%d\",&s[i].a,&s[i].b);\n    sort(s+1,s+1+n,cmp);\n    int from=1;//\u5f53\u524d\u7684\u82b1\u8272\u7684\u8d77\u70b9\u4f4d\u7f6e \n    for(re int i=2;i<=n;i++)\n        if(s[i].a!=s[from].a)//\u641c\u5230\u65b0\u7684\u82b1\u8272\u7684\u65f6\u5019\uff0c\u8ba1\u7b97\u4e0a\u4e00\u6b21\u7684 \n        {\n            work(from,i-1);//\u5bf9\u4e8e\u6bcf\u79cd\u82b1\u8272\u8fdb\u884c\u4e00\u6b21\u8d2a\u5fc3 \n            from=i;//\u65b0\u7684\u82b1\u8272\u7684\u8d77\u70b9\u4ece\u8fd9\u91cc\u5f00\u59cb \n        }\n    work(from,n);//\u641c\u7d22\u6700\u540e\u4e00\u4e2a\u82b1\u8272\uff08\u56e0\u4e3a\u5faa\u73af\u4e2d\u4e0d\u4f1a\u9047\u5230\uff09 \n    return !printf(\"%d\\n\",n-ans);//ans\u8868\u8fbe\u7684\u662f\u5c5e\u4e8e\u540c\u4e00\u4e2a\u540c\u82b1\u987a\u4e2d\u7684\u6700\u591a\u724c\u6570 \n}\n```",
        "postTime": 1497097944,
        "uid": 23323,
        "name": "\u7528\u6237\u5df2\u6ce8\u9500",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "**\u8d2a\u5fc3**\n\nWA\u4e86\u591a\u6b21\uff0c\u7ec8\u4e8eAC\u4e86\u3010\u4e3b\u8981\u662f\u5361\u5728\u4e00\u4e2a\u5224\u5b9a\u4e0a\u3011\n\n\u8a00\u5f52\u6b63\u4f20\uff0c\u65e2\u7136\u6807\u9898\u662f\u8d2a\u5fc3\uff0c\u90a3\u4e48\u6211\u4eec\u6765\u770b\u770b\u8d2a\u5fc3\u7684\u601d\u8def\uff1a\n\n\\_\u6211\u4eec\u53ea\u8003\u8651\u54ea\u4e9b\u724c\u4e0d\u7528\u6362\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u8981\u6362\u7684\u724c\\_\n\n\n1\u2018\u3010\u770b\u989c\u8272\u3011\u6574\u526f\u724c\u6700\u540e\u8981\u53d8\u6210\u540c\u82b1\u987a\uff0c\u4e00\u5b9a\u662f\u53d8\u6210\u4e00\u79cd\u989c\u8272\uff0c\u90a3\u4e48\u6240\u6709\u4e0d\u662f\u8be5\u989c\u8272\u7684\u724c\u90fd\u8981\u6362\u6389\n\n\n2\u2019\u3010\u770b\u6570\u5b57\u3011\u5bf9\u4e8e\u540c\u4e00\u79cd\u989c\u8272\uff0c\u6309\u6570\u5b57\u8fdb\u884c\u6392\u5e8f\u540e\uff0c\u679a\u4e3ei\u548cj\uff0c\u5bf9\u4e8e\u6bcf\u4e2ai\uff0c\u627e\u5230\u4e00\u4e2a\u6700\u5927\u7684j\uff0c\u4f7f\u5f97j\u5bf9\u5e94\u7684\u6570\u4e0ei\u5bf9\u5e94\u7684\u6570\u76f8\u5dee\u4e0d\u8fc7N\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6570\u90fd\u53ef\u4ee5\u4e0d\u6362\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6570\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u5408\u6cd5\u540c\u82b1\u987a\u7684\u5143\u7d20\uff0c\u8981\u6362\u7684\u5c31\u662f\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6570\u4e4b\u5916\u7684\u6570\n\n\n3\u2019\u770b\u8d77\u6765\u597d\u50cf\u6ca1\u6bdb\u75c5\u4e86\uff0c\u5176\u5b9e\u8fd8\u6709\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u5bf9\u4e8e\u627e\u5230\u7684i~j\u8303\u56f4\u5185\uff0c\u82e5\u5176\u4e2d\u5305\u542b\u6709\u76f8\u540c\u7684\u724c\uff0c\u4e5f\u8981\u6362\u6389\u3010\u8fd9\u5c31\u662f\u6211WA\u4e86\u90a3\u4e48\u591a\u6b21\u7684\u539f\u56e0\u3011\n\n\n>\u5b9e\u73b0\uff1a\n\u7528\u5feb\u6392\u5c06\u6240\u6709\u5143\u7d20\u6392\u5e8f\uff0c\u5148\u8003\u8651\u989c\u8272\u518d\u8003\u8651\u6570\u5b57\u5347\u5e8f\uff0c\u8fd9\u6837\u4e0d\u540c\u7684\u989c\u8272\u5206\u5f00\u4e14\u5728\u540c\u4e00\u4e2a\u989c\u8272\u5185\u5347\u5e8f\u6392\u5217\n\n\u7136\u540e\u7528Two Pointer\u679a\u4e3e\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u4e0d\u65ad\u66f4\u65b0ans\uff0c\u6700\u540e\u8f93\u51fa\n\n\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u4ee3\u7801\uff1a\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int maxn=100005,INF=1000000000;\nint read()                                           //\u8bfb\u5165\u4f18\u5316\n{\n    int out=0;\n    char c=getchar();\n    while(c<48||c>57) c=getchar();\n    while(c>=48&&c<=57)\n    {\n        out=out*10+c-48;\n        c=getchar();\n    }\n    return out;\n}\nclass node                                       //\u5b58\u989c\u8272\u4e0e\u6570\u5b57\n{\n```\npublic:\n\n\n\n```cpp\n        int color,num;\n}puk[maxn];\ninline bool operator < (const node& a,const node& b)\n{\n    if(a.color==b.color) return a.num<b.num;\n    return a.color<b.color;\n}\nint main()\n{\n    int N=read();\n    for(int i=0;i<N;i++)\n    {\n        puk[i].color=read();\n        puk[i].num=read();\n    }\n    sort(puk,puk+N);                           //\u5feb\u6392\n    int ans=INF,same=0;                     //same\u662f\u7d2f\u52a0\u5668\uff0c\u8868\u793a\u5f53\u524d\u8303\u56f4\u5185\u6709\u591a\u5c11\u4e2a\u91cd\u590d\u7684\u724c\n    for(int i=0,j=0;i<N;i++)\n    {\n        same-=(i&&puk[i].num==puk[i-1].num);                  //\u66f4\u65b0\u91cd\u590d\u7684\u6570\u5b57\u5145\u5206\u5229\u7528C++\u771f\u4e3a1\u5047\u4e3a0\u7684\u7279\u6027\n        if(i&&puk[i].color!=puk[i-1].color) same=0;              //\u8fdb\u5165\u4e0b\u4e00\u4e2a\u989c\u8272,\u7d2f\u52a0\u5668\u6e05\u96f6\n        while(j+1<N&&puk[j+1].color==puk[i].color&&puk[j+1].num-puk[i].num<N)  //\u627e\u5230\u6700\u5927\u7684\u6ee1\u8db3\u6761\u4ef6\u7684j\n        {\n            same+=(puk[j].num==puk[j+1].num);                 //\u5224\u65ad\u662f\u5426\u6709\u91cd\u590d\u7684\u724c\n            j++;\n        }\n        ans=min(ans,N-(j-i+1)+same);                                //\u66f4\u65b0ans\n        if(i==j) j++;                                                            //\u5982\u679ci\u5230\u4e86j\u7684\u5730\u65b9\uff0c\u8bf4\u660e\u4e0b\u4e00\u5f20\u724c\u4e0e\u4e4b\u524d\u7684\u724c\u90fd\u4e0d\u80fd\u7ec4\u6210\u540c\u82b1\u987a\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1492930744,
        "uid": 32842,
        "name": "Mychael",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "#\u53cc\u5173\u952e\u5b57\u5feb\u6392\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u6700\u5927\u503c\u4e2d\u7684\u6700\u5c0f\u503c\u5373\u53ef\n\n\u6211\u6587\u4ef6\u6ca1\u5173\uff0c\u8bf7\u4e0d\u8981\u76f4\u63a5\u590d\u5236\u4ee3\u7801\n\n\n```cpp\n**type cardd=record\na,b:longint;\nend;\nvar card,b:array[0..100001] of cardd;\nn,sum,i,j,ans,max:longint;\n procedure sort1(l,r: longint);\n      var\n         i,j,x,p: longint;\n         y:cardd;\n      begin\n         i:=l;\n         j:=r;\n         x:=card[(l+r) div 2].b;\n         p:=card[(l+r) div 2].a;\n         repeat\n           while (card[i].a<p) or ((card[i].a=p) and(card[i].b<x)) do\n            inc(i);\n           while (p<card[j].a) or ((card[j].a=p) and(card[j].b>x))do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=card[i];\n                card[i]:=card[j];\n                card[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort1(l,j);\n         if i<r then\n           sort1(i,r);\n      end;\nbegin\n    assign(input,'card.in'); reset(input);\n    assign(output,'card.ans'); rewrite(output);\n    read(n);\n    for i:=1 to n do\n     read(card[i].a,card[i].b);\n    sort1(1,n);\n    sum:=0;\n    for i:=1 to n do\n    begin\n        if (card[i-1].a<>card[i].a) or(card[i-1].b<>card[i].b) then\n        begin\n            inc(sum);\n            b[sum]:=card[i];\n        end;\n    end;\n    max:=0;\n    for i:=1 to sum do\n    begin\n        ans:=0;\n        for j:=i downto 1 do\n        begin\n            if (b[j].a=b[i].a) and (b[i].b-b[j].b+1<=n) then\n            inc(ans)\n            else break;\n        end;\n        if ans>max then max:=ans;\n    end;\n    writeln(n-max);\n    close(input);\n    close(output);\nend.**\n```",
        "postTime": 1479379721,
        "uid": 19485,
        "name": "scarborough_fair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "\u8d34\u4e00\u4e2a\u4f7f\u7528c++ pair\u3001\u5e93\u51fd\u6570unique\u7684\u7cbe\u7b80\u7248\u672c\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 100000+10;\ntypedef pair<int,int> P;\nP p[MAXN];\nint main()\n{\n    int n; scanf(\"%d\", &n);\n    for (int i = 1; i <= n; ++i)\n        scanf(\"%d%d\",&p[i].first,&p[i].second);\n    sort(p+1,p+1+n);\n    int totCard = unique(p+1,p+n+1)-p-1, sameColour = 1, last_one = 1;\n    for (int i = 1; i <= totCard; ++i)\n    {\n        if (i == 1 || p[i].first != p[i - 1].first) last_one = i;\n        while (p[i].second - p[last_one].second + 1 > n) ++last_one;\n        sameColour = max(sameColour, i - last_one + 1);            \n    }\n    printf(\"%d\\n\", n-sameColour);\n    return 0;\n}\n```",
        "postTime": 1540121049,
        "uid": 18861,
        "name": "joseph_cheung",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u540c\u82b1\u987a\u8981\u82b1\u8272\u76f8\u540c\u5e76\u6570\u503c\u8fde\u7eed\uff0c\u6240\u4ee5\u724c\u8981\u5148\u6392\u5e8f\n\n\n\u56e0\u4e3a\u8981\u8fde\u7eed,\u6240\u4ee5\u6700\u5c0f\u7684\u724c\u548c\u6700\u5927\u7684\u724c\u4e4b\u95f4\u7684\u5dee\u8981\u5c0f\u4e8en(\u5c31\u662f\u7ed9\u4f605\u5f20\u724c\uff0c\u8ba9\u4f60\u6392\u62101,2,3,4,5,6\u662f\u4e0d\u53ef\u80fd\u7684\uff09\n\n\n\u9898\u76ee\u8981\u6c42\u9700\u8981\u6362\u7684\u724c\u6700\u5c11\uff0c\u5c31\u662f\u6ca1\u7528\u7684\u724c\u6700\u5c11\uff0c\u53ea\u8981\u6c42\u6709\u7528\u7684\u724c\u6700\u591a\u5c31\u884c\u4e86\n\n\n\u7528\u4e86\u961f\u5217\uff0c\u628a\u627e\u724c\u7684\u65f6\u5019\u6709\u7528\u7684\u724c\u8bb0\u8fdb\u53bb\n\n\n\u6bcf\u53d6\u5230\u4e00\u5f20\u724c\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\u82b1\u8272\u4e0e\u524d\u4e00\u5f20\u76f8\u540c\uff0c\u6216\u4e0d\u76f8\u540c\u3002\u5982\u679c\u4e0d\u76f8\u540c\uff0c\u5c31\u628a\u961f\u5217\u6e05\u7a7a\uff0c\u628a\u5f53\u524d\u724c\u52a0\u5165\u3002   \u5982\u679c\u82b1\u8272\u76f8\u540c\uff0c\u518d\u6bd4\u8f83\u6570\u503c\uff0c\u5982\u679c\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u5f20\u724c\u662f\u6ca1\u6709\u7528\u7684\u3002\u82b1\u8272\u4e0d\u76f8\u540c\uff0c\u5c31\u4ece\u961f\u5934\u5f00\u59cbpop\uff0c\u76f4\u5230\u5f53\u524d\u6570\u503c\u51cf\u53bb\u961f\u5934\u4e4b\u5dee\u5c0f\u4e8en\u6216\u961f\u5217\u4e3a\u7a7a\u3002\u628a\u5f53\u524d\u724c\u8ba1\u5165\u540e\u5728\u6bd4\u8f83\u7b54\u6848\u3002\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct card{\n    int c,v;\n}a[100005];\nint n,ans;\nqueue<int> b;\n\nbool cmp(card x,card y)\n{\n    if(x.c!=y.c) return x.c<y.c;\n    return x.v<y.v;\n}\n\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    cin>>a[i].c>>a[i].v;\n    sort(a+1,a+n+1,cmp);\n    int j=1;\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i].c!=a[i-1].c)\n        {\n            while(!b.empty())\n            b.pop();\n            b.push(i);\n        }\n        else\n        if(a[i].v!=a[i-1].v)\n        {\n            while(!b.empty() && a[i].v-a[b.front()].v>=n)\n            b.pop();\n            b.push(i); \n        }\n        if(ans<b.size())\n        ans=b.size();\n    }\n    cout<<n-ans;\n    return 0;\n}\n```",
        "postTime": 1509175200,
        "uid": 9290,
        "name": "quantum11",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2652 \u3010\u540c\u82b1\u987a\u3011"
    }
]