[
    {
        "content": "\u5982\u679c\u4e00\u8fb9\u88ab\u51cf\u4e00\u8fb9\u586b\u8865\uff0c\u56e0\u4e3a\u60c5\u51b5\u8f83\u591a\uff0c\u51b3\u7b56\u96be\u4ee5\u5224\u65ad\u3002\r\n\r\n\u5982\u679c\u76f4\u63a5\u4e8c\u5206\u65f6\u95f4\uff0c\u56e0\u4e3a\u67d0\u4e2a\u4f4d\u7f6e\u7684\u96be\u5ea6\u53ef\u80fd\u4e00\u65f6\u88ab\u51cf\u53bb\u8f83\u591a\uff0c\u4e0d\u6ee1\u8db3\u4e8c\u5206\u6027\u8d28\u3002\r\n\r\n\u4ee4\u88ab\u51cf\u53bb\u7684\u65f6\u95f4\u4e3a\u65f6\u95f4\u70b9\uff0c\u8003\u8651\u4e8c\u5206\u88ab\u51cf\u7684\u65f6\u95f4\u70b9\uff0c\u7136\u540e\u5c06\u96be\u5ea6\u5148\u51cf\u53bb\u8981\u51cf\u7684\u503c\uff0c\u56e0\u4e3a\u51cf\u96be\u5ea6\u7684\u51b7\u5374\u65f6\u95f4\u4e0d\u5c0f\u4e8e\u9700\u8981\u52a0\u7684\u6570\u91cf\uff0c\u88ab\u51cf\u7684\u6570\u91cf\u53ef\u4ee5\u7528\u76f8\u540c\u6570\u91cf\u7684\u65f6\u95f4\u586b\u8865\uff0c\u6240\u4ee5\u5f53\u4e00\u4e2a\u65f6\u95f4\u70b9\u53ef\u4ee5\u8fbe\u5230\u76ee\u6807\u65f6\uff0c\u4e0b\u4e00\u4e2a\u65f6\u95f4\u70b9\u5fc5\u7136\u4e5f\u80fd\u8fbe\u5230\u76ee\u6807\u3002\r\n\r\n\u7136\u540e\u5728\u65f6\u95f4\u70b9\u4e0a\u8ba1\u7b97\u51fa\u9700\u8981\u7684\u65f6\u95f4\u3002\u4e8c\u5206\u65f6\u95f4\u70b9\uff0c\u5728\u51cf\u53bb\u751f\u6548\u7684\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u5730\u4ece\u5de6\u5230\u53f3\u5730\u8003\u8651\uff0c\u5f53\u4f4d\u7f6e $i$ \u5c0f\u4e8e $1$ \u65f6\uff0c\u8003\u8651\u8d2a\u5fc3\u5730\u5c06 $[i,i+K-1]$ \u8fd9\u4e2a\u533a\u95f4\u52a0 $1$\uff0c\u53ef\u4ee5\u4f7f\u9700\u8981\u7684\u56de\u5408\u6570\u5c3d\u91cf\u5c0f\u3002\u5f53\u786e\u5b9a\u5c0fB\u6709\u54ea\u4e9b\u64cd\u4f5c\u751f\u6548\u65f6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6c42\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u51c6\u786e\u6700\u5c0f\u65f6\u95f4\uff0c\u82e5\u8fd9\u4e2a\u65f6\u95f4\u5c0f\u4e8e\u4e0b\u4e2a\u65f6\u95f4\u70b9\uff0c\u90a3\u4e48check()\u5c31\u662f\u6709\u6548\u7684\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(N\\ log\\ N)$\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\n#define ll long long\r\n#define MAXN 500205\r\n#define INF 2147483647\r\nusing namespace std;\r\nstruct sth\r\n{\r\n    int w,t;\r\n    sth(){}\r\n    sth(int n1,int n2){w=n1,t=n2;}\r\n}q[MAXN];\r\n    int n,m,k,l,ans;\r\n    int a[MAXN],w[MAXN],x[MAXN],v[MAXN],r[MAXN],b[MAXN],d[MAXN];\r\nint inline read()\r\n{\r\n    int x=0,f=1;char ch=getchar();\r\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\r\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\r\n    return x*f;\r\n}\r\nint cal(int x)\r\n{\r\n    memcpy(b,a,sizeof(a));\r\n    memset(d,0,sizeof(d));\r\n    for (int i=1;i<=x;i++)\r\n        b[::x[i]]-=v[i];\r\n    int tmp=0,step=0,dis;\r\n    for (int i=1;i<=n;i++)\r\n    {\r\n        if (b[i]+tmp<=1)\r\n        {\r\n            dis=1-b[i]-tmp;\r\n            step+=dis;\r\n            d[i]+=dis;\r\n            if (i+k-1<=n)\r\n                d[i+k-1]-=dis;\r\n        }\r\n        tmp+=d[i];\r\n    }\r\n    return max(w[x],step);\r\n}\r\nint main()\r\n{\r\n    n=read(),m=read(),k=read(),l=read();\r\n    for (int i=1;i<=n;i++)\r\n        a[i]=read();\r\n    for (int i=1;i<=l;i++)\r\n        r[i]=read();\r\n    for (int i=1;i<=m;i++)\r\n        w[i]=read(),x[i]=read(),v[i]=read();\r\n    w[0]=0,w[m+1]=INF;\r\n    int le=0,ri=m,mid;\r\n    while (le<=ri)\r\n    {\r\n        mid=le+ri>>1;\r\n        if (cal(mid)<w[mid+1]) ans=mid,ri=mid-1;\r\n        else le=mid+1;\r\n    }\r\n    printf(\"%d\\n\",cal(ans));\r\n    return 0;\r\n}\r\n```",
        "postTime": 1531582332,
        "uid": 9433,
        "name": "FlierKing",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4754 \u3010True Vegetable\u3011"
    },
    {
        "content": "# \u9898\u76ee\uff1aP4754 True Vegetable 2018 \u6d1b\u8c377\u6708\u6708\u8d5b T3\n\n\n------------\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u6a21\u4e00\u6ce2\u51fa\u9898\u4eba[\u3010\u7ba1\u7406\u5458\u3011FlierKing](https://www.luogu.org/space/show?uid=9433)\uff0c\u4ed6\u5728\u767e\u5fd9\u4e4b\u4e2d\u79c1\u4e0b\u4e3a\u6211\u89e3\u7b54\u5173\u4e8e\u6b64\u9898\u7684\u95ee\u9898\uff0c\u8ba9\u6211\u7ec8\u4e8e\u61c2\u4e86\u8fd9\u9898\u7684\u89e3\u6cd5\u3002\u8bdd\u8bf4\u56de\u6765\uff0c\u51fa\u9898\u4eba\u7684\u6708\u8d5b\u9898\u90fd\u5f88\u4e0d\uff08du\uff09\u9519\uff08liu\uff09\uff0c\u5efa\u8bae\u5927\u5bb6\u505a\u4e00\u505a\u3002\u56e0\u4e3a\u6b64\u9898\u7684\u65b9\u6cd5\u6bd4\u8f83\u5355\u4e00\uff0c\u800c\u4e14\u6211\u592a\u5f31\uff0c\u6211\u7684\u4ee3\u7801\uff08\u5f88\u5927\u4e00\u90e8\u5206\uff09\u53c2\u8003\u4e86\u51fa\u9898\u4eba\u7684\u9898\u89e3\uff0c\u4f46\u662f\u5728\u4ee3\u7801\u548c\u601d\u8def\u65b9\u9762\uff0c\u6211\u4f1a\u5c3d\u529b\u8bb2\u7684\u66f4\u52a0\u6e05\u695a\u3002\n\n------------\n\n## \u9898\u76ee\u63cf\u8ff0\n$ \\ \\ \\ \\ \\ \\ \\ \\ $\u5c0fA\u73b0\u5728\u6709 $N$ \u9053\u9898 , \u7f16\u53f7\u4e3a $1$ , $2$ , $...$ , $N$\u3002\u6bcf\u9053\u9898\u7684\u8d77\u59cb\u6bd2\u7624\u7a0b\u5ea6\u4e3a $0$ \u6216 $1$\u3002\u5728\u6bcf\u56de\u5408 \uff0c\u5c0f $A$ \u53ef\u4ee5\u5c06\u7f16\u53f7\u8fde\u7eed\u7684 $K$ \u9053\u9898\u7684\u6bd2\u7624\u7a0b\u5ea6 $+1$ , \u4f46\u5c0f $B$ \u56e0\u4e3a\u672c\u8eab\u6bd4\u8f83\u83dc\uff0c\u4e0d\u662f\u5f88\u613f\u610f\u5c0f $A$ \u51fa\u6bd2\u7624\u9898\uff0c\u6240\u4ee5\u5728 $w_i$\u56de\u5408\u5f00\u59cb\u65f6\u53ef\u4ee5\u5411\u7b2c $x_i$ \u9898\u4f20\u64ad $v_i$ \u70b9\u7684\u83dc\u6c14\uff0c\u4f7f\u5f97\u7b2c $x_i$ \u7684\u6bd2\u7624\u7a0b\u5ea6\u51cf\u5c11 $v_i$ \u70b9\uff08\u51cf\u540e\u53ef\u4ee5\u4e3a\u8d1f\uff09\u3002            \n$ \\ \\ \\ \\ \\ \\ \\ \\ $\u8fd9\u91cc\u6211\u4eec\u5047\u5b9a\u83dc\u662f\u6709\u9650\u7684\uff0c\u5728\u91ca\u653e\u4e86 $v_i$\u70b9\u7684\u83dc\u6c14\u540e\uff0c\u5c0fB\u9700\u8981\u81f3\u5c11 $r_{v_i}$ \u4e2a\u56de\u5408\u4e0d\u80fd\u91ca\u653e\u83dc\u6c14\u3002\u73b0\u5728\u5c0f$A$\u77e5\u9053\u4e86\u5c0f $ B$ \u91ca\u653e\u83dc\u6c14\u7684\u8ba1\u5212\uff0c\u4ed6\u60f3\u77e5\u9053\u4ed6\u81f3\u5c11\u9700\u8981\u591a\u5c11\u4e2a\u56de\u5408\u53ef\u4ee5\u4f7f\u5f97\u6bcf\u9053\u9898\u7684\u6bd2\u7624\u7a0b\u5ea6\u81f3\u5c11\u4e3a $1$ \u3002 \n## \u5206\u6790\n$1$ . \u53cd\u6b63\u770b\u5230\u8fd9\u4e2a\u9898\uff0c\u6211\u6ca1\u6709\u76f4\u63a5\u770b\u51fa\u4e8c\u5206\u6765\uff08\u53ef\u80fd\u662f\u6211\u592a\u6c34\u4e86\uff09\uff0c\u4f46\u662f\u6392\u9664\u4e00\u5207\u53ef\u80fd\u7684\u7b97\u6cd5\uff0c\u6211\u4eec\u8981\u5bfb\u627e\u53ef\u4e8c\u5206\u7684\u53d8\u91cf\uff0c\u4e8c\u5206\u7684\u7406\u7531\u5728\u4e0b\u9762\u7ed9\u51fa\uff0c\u8fd9\u4fbf\u662f\u672c\u4f53\u7684\u7b2c\u4e00\u4e2a\u601d\u7ef4\u96be\u70b9\u3002  \n$2$ . \u89e3\u51b3\u4e86\u601d\u60f3\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bfb\u627e\u7b56\u7565\u5f97\u5230\u6700\u5c0f\u9700\u8981\u7684\u6b65\u9aa4\uff0c\u5c31\u60f3\u5230\u7684\u8d2a\u5fc3\uff0c\u8fd9\u53c8\u662f\u96be\u70b9\u3002\n$3$ . \u8d2a\u5fc3\u7684\u51fd\u6570\u6bd4\u8f83\u96be\u5199\uff08\u5982\u679c\u4f60\u5df2\u7ecf\u88ab$1$\uff0c$2$\u9898\u641e\u8499\u4e86)\uff0c\u63a5\u4e0b\u6765\u6211\u4f1a\u5e26\u5927\u5bb6\u4e00\u8d77\u6a21\u62df\u3002\n## \u89e3\u7b54\n$1$ . \u663e\u7136\uff0c\u56e0\u4e3a\u5c0f $B$ \u540c\u5b66\u5341\u5206\u9634\u9669\uff0c\u4ed6\u4f1a\u7a81\u7136\u5728\u4e00\u4e2a\u65f6\u95f4\u70b9\u653e\u51fa\u5f88\u591a\u83dc\u6c14\uff0c\u5bfc\u81f4\u6bd2\u7624\u7a0b\u5ea6\u77ac\u964d\uff0c\u5f62\u6210\u6ce2\u5f62\uff0c\u4e0d\u6ee1\u8db3\u4e8c\u5206\u7684\u5355\u8c03\u6027\u6027\u8d28\uff1b\u7136\u540e\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u4ece\u6570\u636e\u8303\u56f4$w_i+r_{v_i}\\leq w_{i+1}$(\u85cf\u5f97\u5f88\u5201\uff09\u4e2d\u53c8\u5f97\u77e5\uff0c\u5c0f $B$ \u7684\u64cd\u4f5c\u7684$CD$\u7edd\u5bf9\u4e0d\u4f1a\u77ed\u4e8e\u5c0f $A$ \u586b\u8865\u5c0f $B$ \u8fd9\u6b21\u64cd\u4f5c\u9020\u6210\u7684\u6bd2\u7624\u5ea6\u635f\u5931\u7684\u65f6\u95f4\uff08\u4f60\u6316\u6211 $3$ \u70b9,\u6211\u5c31\u8981\u4e09\u56de\u5408\u8865\u56de\u539f\u6765\u7684\u72b6\u6001 )\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u5f97\u5230\uff1a\u6211\u4eec\u53ef\u4ee5\u5728\u4e0b\u6b21\u5c0f$B$\u64cd\u4f5c\u524d\uff0c\u6211\u4eec\u80fd\u8865\u56de\u6765\uff0c**\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u4e00\u5b9a\u53ef\u4ee5\u6709\u76c8\u4f59**\uff0c\u6ee1\u8db3\u4e8c\u5206\u5355\u8c03\u6761\u4ef6\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u51cf\u53bb\u7684\u65f6\u95f4\u5f53\u4f5c\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u4e8c\u5206\u5b83\uff0c\u8ba1\u7b97\u5176\u6210\u679c\uff0c\u6ee1\u8db3\u5373\u7b54\u6848\u3002**\u8fd8\u9700\u8981\u77e5\u9053\u4e00\u70b9\uff0c\u7531\u4e0a\u65b9\u8bc1\u660e\uff0c\u5f53\u4e00\u4e2a\u65f6\u95f4\u70b9\u53ef\u4ee5\u8fbe\u5230\u76ee\u6807\u65f6\uff0c\u4e0b\u4e00\u4e2a\u65f6\u95f4\u70b9\u5fc5\u7136\u4e5f\u80fd\u8fbe\u5230\u76ee\u6807**\u3002\uff08$by\\ \\ FlierKing$)  \n$2$ . \u4e8c\u5206\u5b8c\u7f8e\u89e3\u51b3\uff0c\u5f00\u59cb\u89e3\u91ca\u8d2a\u5fc3\uff0c\u968f\u65f6\u95f4\uff0c\u6211\u4eec\u4f18\u5148\u9009\u62e9\u4ece\u5c0f $B$ \u52a8\u624b\u7684\u90a3\u4e2a\u9898\u76ee\u5f00\u59cb $K$ \u9898\uff08\u5982\u679c\u5269\u4f59\u7684\u672a\u6ee1\u8db3\u9898\u4e0d\u8db3 $K$\u4e2a\uff0c\u5c31\u5168\u9009\uff09\uff0c\u4e5f\u5c31\u662f $[i,i+K-1]$ \u7684\u533a\u95f4\u52a0 $1$\u3002\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c**\u6211\u4eec\u4e0d\u4f1a\u8fc7\u5ea6\u5411\u4efb\u4f55\u4e00\u9898\u52a0\u5230\u8d85\u8fc7 $1$ \uff0c\u53c8\u80fd\u626b\u8fc7\u6240\u6709\u7684\u9898\u76ee**\uff0c\u975e\u5e38\u7a33\u3002  \n$3$ . \u4e3b\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u8ba1\u7b97 $mid$ \u5bf9\u5e94\u8d2a\u5fc3\u540e\u7684\u6b65\u9aa4\uff0c\u4e0e\u4e0b\u4e00\u6b21\u64cd\u4f5c\u540e\u7684\u635f\u5931\u7684\u65f6\u95f4\u76f8\u6bd4\uff0c\u5982\u679c\u5c0f\u4e8e\uff0c\u5c31\u5c5e\u4e8e\u53ef\u884c\u65b9\u6848\uff0c\u7f29\u5c0f\u4e8c\u5206\u8303\u56f4\u3002  \n$4$ . \u73b0\u5728\u6765\u5230\u6700\u96be\u7684\u90e8\u5206\uff0c\u5b9e\u73b0\u6211\u4eec\u7684\u8d2a\u5fc3\u8ba1\u7b97\u3002\u6211\u4eec\u8ba1\u7b97\u51fa\u8fd9\u65f6\uff0c\u635f\u5931\u4e86\u96be\u5ea6\u540e\u5462\uff0c\u6211\u4eec\u641e\u4e00\u4e2a\u6682\u65f6\u91cf $y$ \u6765\u8bb0\u5f55\u5dee\u503c \uff0c\u4e0b\u6b21\u5229\u7528\uff1b\u5bf9\u4e8e\u635f\u5931\u7684\u65f6\u95f4\u548c\u6309\u7167\u7b56\u7565\u7406\u8bba\u4e0a\u8ba1\u7b97\u7684\u6062\u590d\u65f6\u95f4\u76f8\u6bd4\uff0c\u53d6\u5c0f\u503c\uff0c\u5f97\u5230\u672c\u6b21\u7684\u8ba1\u7b97\u7b54\u6848\u3002  \n\u4e0a\u4ee3\u7801\uff0c\u8ddfFlierKing\u5f88\u50cf\uff0c\u57fa\u672c\u6309\u7167\u4ed6\u7684\u601d\u8def\u7801\u4e86\u4e00\u904d\uff0c\u89c1\u8c05\uff0c\u8d34\u4e0a\u4ed6\u7684[\u535a\u5ba2](https://www.luogu.org/blog/FlierKing/solution-p4754)\u3002  \n```\nstruct node\n{\n  int w,x,v;//\u7528\u7684\u7ed3\u6784\u4f53\uff0c\u5176\u5b9e\u4e0d\u5fc5\u8981\u3002\n}plan[N];\nint n,m,k,l,ans,a[N],r[N],pos=1,need,temp[N],want[N],y;\n//ans->\u8bb0\u5f55\u7b54\u6848\uff0cpos->\u67d0\u4e0b\u6807\uff0cneed->\u5728\u7b56\u7565\u4e0b\u8fd8\u9700\u8981\u7684\u65f6\u95f4\uff0ctemp->\u9700\u8981\u5f15\u7528a\u6570\u7ec4\uff0cwant->\u50a8\u5b58\u53d8\u5316\uff08\u4e0d\u8981\u88ab\u53d8\u91cf\u540d\u8ff7\u60d1\u4e86\uff09\u3002\ninline int cal(int x)\n{\n  memset(want,0,sizeof(want));//\u591a\u6b21\u8ba1\u7b97\uff0c\u6e05\u96f6\u3002\n  for(int i=0;i<=n;i++)temp[i]=a[i];\n  need=y=0,pos=1;//\u4ece\u7b2c\u4e00\u9053\u9898\u5f00\u59cb\u8dd1\u3002\n  for(int i=1;i<=x;i++)temp[plan[i].x]-=plan[i].v;//\u5148\u51cf\u53bb\u635f\u5931\u7684\u70b9\u6570\u3002\n  while(true)\n  {\n    if(pos>n)break;\n    //if(need<plan[x].w)need=plan[x].w;\u5148\u60f3\u8981\u5728\u7ebf\u6bd4\u8f83\u7684\uff0c\u5374\u4f1a\u66f4\u65b0\u9519\u3002\n    if(temp[pos]+y>1)y+=want[pos];//\u5982\u679c\u8865\u56de\u7684\u65f6\u95f4\u540e\u8d85\u4e86\uff0c\u90a3\u4e0d\u592a\u597d\uff0c\u7ed9\u540e\u9762\u3002\n    else\n    {\n      need+=1-(temp[pos]+y),want[pos]+=1-(temp[pos]+y);//\u66f4\u65b0\uff0c\u66f4\u65b0\u3002\n      if(pos+k-1<=n)want[pos+k-1]-=(1-(temp[pos]+y));//\u5269\u4f59\u9898\u6570\u4e0d\u8db3\uff0c\u4e0d\u8981\u6d6a\u8d39\u3002\n      y+=want[pos];//\u4e0b\u6ce2\u518d\u6765\u3002\n    }\n    pos++;\n  }\n  return (need>plan[x].w)?need:plan[x].w;//\u6211\u4eec\u9700\u8981\u9009\u4f18\u4e00\u70b9\u7684\u7b56\u7565\u3002\n}\ninline void binary_search()\n{\n  int L=0,R=m,M=(L+R)/2;\n  while(L<=R)\n  {\n    M=(L+R)/2;\n    if(cal(M)<plan[M+1].w){ans=M;R=M-1;}//\u8fd9\u6b21\u6062\u590d\u65f6\u95f4\u5c0f\u4e8e\u4e0b\u6b21\u635f\u5931\u65f6\u95f4\uff0cnice\u7684\u64cd\u4f5c\uff0c\u7edf\u8ba1\u4e00\u6ce2\u3002\n    else L=M+1;\n  }\n}\nint main()\n{\n  n=read(),m=read(),k=read(),l=read();\n  for(int i=1;i<=n;i++)a[i]=read();\n  for(int i=1;i<=l;i++)r[i]=read();\n  for(int i=1;i<=m;i++)plan[i]=node{read(),read(),read()};\n  plan[0].w=0,plan[m+1].w=inf;//\u52a1\u5fc5\u52a0\u4e0a\u4e8c\u5206\u7684\u8fb9\u754c\uff0c\u6211\u6ca1\u6709\u8fd9\u4e24\u53e5\u8bdd\uff0c\u76f4\u5230\u518d\u7ffb\u9898\u89e3\u624d\u4e86\u89e3\u3002\n  binary_search();\n  printf(\"%d\\n\",cal(ans));//\u7b54\u6848\uff0c\u6700\u540e\u5df2\u7ecf\u6700\u4f18\uff08\u4f46\u8fd8\u662f\u8981\u7b97\u4e00\u7b97\uff09\u3002\n  return 0;\n}\n```\n## \u603b\u7ed3\n$1$ . \u5bf9\u4e8e\u9690\u85cf\u7684\u6bd4\u8f83\u597d\u7684\u4e8c\u5206\u9898\uff0c\u6211\u4eec\u8981\u4e3b\u52a8\u53bb\u5bfb\u6c42\u6761\u4ef6\uff0c\u4f46\u8fd8\u662f\u4e0d\u8981\u5934\u94c1\u3002  \n$2$ . \u73b0\u5728\uff0c\u6211\u8981\u90d1\u91cd\u8868\u660e\uff0c\u53ef\u80fd\u56e0\u4e3a\u6b64\u9898\u7684\u601d\u7ef4\u96be\u5ea6\uff0c\u5728\u4ee3\u7801\u5206\u4eab\u8ba1\u5212\u4e2d\u53d1\u73b0\u4e86\u4e0d\u5c11\u590d\u7c98\u9898\u89e3\uff0c\u51e0\u4eba\u4ee3\u7801\u76f8\u540c\u7b49\u95ee\u9898\uff0c\u53ef\u80fd\u9898\u4e0d\u7b80\u5355\uff0c\u9898\u89e3\u4e0d\u662f\u5f88\u6613\u61c2\uff0c\u4f46\u8bf7\u5c3d\u91cf\u81ea\u5df1\u627e\u65b9\u6cd5\u89e3\u51b3\u95ee\u9898\uff0c\u4e0d\u8981\u4e3a\u5237\u9898\u800c\u5237\u3002  \n\u5e0c\u671b\u5927\u5bb6\u80fd\u7406\u89e3\u6211\u7684\u9898\u89e3\uff08\u5bf9\u51fa\u9898\u4eba\u9898\u89e3\u7684\u8865\u5145\uff09\uff0c\u4e0d\u559c\u52ff\u55b7\uff0c\u8c22\u8c22\u3002",
        "postTime": 1531914613,
        "uid": 60089,
        "name": "Trinity",
        "ccfLevel": 0,
        "title": "P4754 True Vegetable \u9898\u89e3 by HydraNazis"
    },
    {
        "content": "\u56e0\u4e3a\u770b\u9519\u6570\u636e\u8303\u56f4A\u4e865\u5929\u6ca1A\u6389\u7684\u849f\u84bb\u6765\u4e00\u53d1\u9898\u89e3\n\n\u601d\u8def\u548c\u4e24\u4f4d\u5927\u4f6c\u5dee\u4e0d\u591a\n\n\u9996\u5148\u5982\u679c\u9898\u76ee\u4ee4\u4eba\u65e0\u4ece\u4e0b\u624b\uff0c\u5982\u679c\u4e0d\u662f\u6c34\u5e73\u4e0d\u591f\u90a3\u4e48\u591a\u534a\u662f\u4e8c\u5206\n\n\u901a\u8fc7\u6240\u7ed9\u6761\u4ef6\u53ef\u4ee5\u53d1\u73b0\uff0c\u5c0fB\u91ca\u653e\u83dc\u6c14\u540e\u5230\u4e0b\u4e00\u6b21\u91ca\u653e\u4e4b\u524d\uff0c\u5c0fA\u8d77\u7801\u53ef\u4ee5\u628a\u8fd9\u70b9\u635f\u8017\u7684\u6bd2\u7624\u5ea6\u8865\u56de\u6765\u3002\u5047\u5982\u7528\u5c0fB\u91ca\u653e\u83dc\u6c14\u7684\u65f6\u95f4\u70b9\u628a\u65f6\u95f4\u5206\u4e3a\u4e00\u6bb5\u6bb5\u95f4\u9694\uff0c\u90a3\u4e48\u4e00\u65e6\u67d0\u6bb5\u95f4\u9694\u4e2d\u6709\u4e00\u4e2a\u65f6\u95f4\u70b9\u6ee1\u8db3\u6210\u7acb\u6761\u4ef6\uff0c\u90a3\u4e48\u4e4b\u540e\u7684\u95f4\u9694\u4e2d\u5fc5\u6709\u81f3\u5c11\u4e00\u4e2a\u65f6\u95f4\u70b9\u6ee1\u8db3\u6210\u7acb\u6761\u4ef6\uff08\u4e0d\u4e00\u5b9a\u662f\u4e4b\u540e\u6bcf\u65f6\u6bcf\u523b\u90fd\u6ee1\u8db3\uff0c\u56e0\u4e3a\u5c0fB\u53ef\u4ee5\u7a81\u7136\u91ca\u653e\u4e00\u5806\u83dc\u6c14\uff0c\u4f46\u662f\u5c0fA\u4e00\u5b9a\u53ef\u4ee5\u4e00\u70b9\u70b9\u8865\u56de\u6765\uff09\n\n\u7136\u540e\u6211\u7684\u601d\u8def\u662f\u8fd9\u6837\u7684\uff0c\u5982\u679c\u67d0\u6b21\u91ca\u653e\u83dc\u6c14\u524d\u4e00\u523b\u6ee1\u8db3\u6210\u7acb\u6761\u4ef6\uff0c\u90a3\u4e48\u91ca\u653e\u524d\u7684\u8fd9\u6bb5\u65f6\u95f4\u6216\u4e4b\u524d\u7684\u65f6\u95f4\u6bb5\u4e00\u5b9a\u8fbe\u6210\u8fc7\u6761\u4ef6\uff0c\u4e8e\u662f\u53ef\u4ee5\u4e8c\u5206\u5c0fB\u91ca\u653e\u83dc\u6c14\u7684\u65f6\u95f4\u70b9\uff0c\u8ba1\u7b97\u5176\u524d\u4e00\u523b\u662f\u5426\u8fbe\u6210\u6761\u4ef6\u3002\n\n\u600e\u4e48\u5224\u65ad\u662f\u5426\u8fbe\u6210\u6761\u4ef6\u5462\uff1f\u6216\u8005\u8bf4\u9762\u5bf9\u4e00\u4e2a\u6bd2\u7624\u5ea6\u6570\u7ec4\uff0c\u5982\u4f55\u5224\u65ad\u6700\u5c11\u9700\u8981\u51e0\u6b21\u6b21\u533a\u95f4\u52a0\u6cd5\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\u5462\uff1f\u53ef\u4ee5\u7b80\u5355\u7684\u8d2a\u5fc3\uff0c\u9047\u5230\u6bd2\u7624\u5ea6\u4f4e\u4e8e1\u7684\u5c31\u52a0\u4e00\u6b21\u4ee5\u5176\u4e3a\u5de6\u7aef\u70b9\u7684\u533a\u95f4\u52a0\u6cd5\uff0c\u8ba1\u7b97\u6b21\u6570\u5373\u53ef\u3002\uff08\u53e6\u5916\u533a\u95f4\u52a0\u6cd5\u65e0\u9700\u66b4\u529b\u5b9e\u73b0\uff0c\u8bbe\u4e2a\u8bb0\u5f55\u6570\u7ec4\u548c\u7f13\u5b58\u53d8\u91cf\u5c31\u53ef\u4e86\uff0c\u5177\u4f53\u770b\u4ee3\u7801\uff09\n\n\u6211\u7684\u4ee3\u7801\u91cccheck\u662f\u8ba1\u7b97\u67d0\u4e00\u523b\u65f6\uff0c\u6bd4\u4e4b\u524d\u6ee1\u8db3\u6761\u4ef6\u90a3\u4e00\u523b\u591a\u51fa\u51e0\u6b21\u52a0\u6cd5\uff0c\u5982\u679c\u662f\u8d1f\u663e\u7136\u4e0d\u6ee1\u8db3\uff0c\u6b63\u7684\u8bdd\u5c31\u662f\u6b64\u523b\u65f6\u95f4\u70b9\u51cf\u53bb\u591a\u51fa\u6b21\u6570\u5373\u4e3a\u7b54\u6848\n\n\u9644\u4e0a\u849f\u84bb\u7684\u4ee3\u7801\n```\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define N 1000010//\u5c31\u662f\u8fd9\u770b\u9519\u8303\u56f4\u3002\u3002\u3002\u5f00\u4e24\u500d\u4e3a\u4e86\u9632\u6b62add[i+k]\u8d8a\u754c\n#define L 110\nusing namespace std;\nint n, m, k, l, a[N], r[L], w[N], x[N], v[N];\nint le, ri, ans, t;\nint check(int p) {\n\tint b[N], times = w[p] - 1, tmp = 0, add[N];//add[i]\u8bb0\u5f55\u662f\u53f3\u7aef\u70b9\u4e3ai - 1\u7684\u533a\u95f4\u6570\n\tmemcpy(b, a, sizeof(a));\n\tmemset(add, 0, sizeof(add));\n\tfor (int i = 1; i <= p; i++) b[x[i - 1]] -= v[i - 1];//b\u4e3a\u5c0fA\u4e0d\u64cd\u4f5c\u4ec5\u5c0fB\u91ca\u653e\u7684\u7ed3\u679c\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (add[i] > 0) tmp -= add[i];//tmp\u8bb0\u5f55i\u9898\u88ab\u51e0\u4e2a\u52a0\u6cd5\u533a\u95f4\u5305\u62ec\n\t\tif (b[i] + tmp < 1) {\n\t\t\tadd[i + k] = 1 - (b[i] + tmp);\n\t\t\ttimes -= add[i + k];\n\t\t\ttmp = 1 - b[i];\n\t\t}\n\t}\n\treturn times;\n}\nint main() {\n\tscanf(\"%d%d%d%d\", &n, &m, &k, &l);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n\tfor (int i = 1; i <= l; i++) scanf(\"%d\", &r[i]);\n\tfor (int i = 1; i <= m; i++) scanf(\"%d%d%d\", &w[i], &x[i], &v[i]);\n\tw[m + 1] = 0x7f7f7f7f;\n\tle = 1; ri = m + 1;\n\twhile (le <= ri) {\n\t\tint mid = le + ri >> 1, time = check(mid);\n\t\tif (time >= 0) {\n\t\t\tri = mid - 1;\n\t\t\tans = mid;\n\t\t\tt = time;\n\t\t}\n\t\telse le = mid + 1;\n\t}\n\tprintf(\"%d\\n\", w[ans] - t - 1);\n\treturn 0;\n}\n```",
        "postTime": 1532100016,
        "uid": 28642,
        "name": "C2H6O",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4754 \u3010True Vegetable\u3011"
    }
]