[
    {
        "content": "\u8be2\u95ee\u6811\u4e0a$a$\u5230$b$\uff0c$c$\u5230$d$\u7684\u4e24\u6761\u8def\u5f84\u662f\u5426\u76f8\u4ea4  \n\u6211\u4eec\u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c\u76f8\u4ea4\uff0c\u8bb0 $x=lca(a,b)$\uff0c$y=lca(c,d)$\uff0c\u5219\u5fc5\u6709$x$\u5728$c$~$d$\u8def\u5f84\u4e0a\u6216$y$\u5728$a$~$b$\u8def\u5f84\u4e0a  \n\u4e4b\u524d\u7c7b\u4f3c\u7684\u9898\u89e3\u90fd\u6ca1\u6709\u7ed9\u51fa\u8bc1\u660e\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f  \n\u9996\u5148\u6613\u77e5\u4e24\u70b9\u7684lca\u5728\u5176\u8def\u5f84\u4e0a\u3002\u5982\u679c\u8def\u5f84\u76f8\u4ea4\uff0c\u90a3\u4e48$x$\u8981\u4e48\u5728\u76f8\u4ea4\u7684\u8def\u5f84\u4e0a\uff0c\u8981\u4e48\u4e0d\u5728\u3002\u6211\u4eec\u4e0d\u59a8\u8bb0\u76f8\u4ea4\u7684\u90a3\u6bb5\u4e3a$e$~$f$  \n\u5982\u679c\u4e0d\u5728\uff0c\u7531\u5bf9\u79f0\u6027\uff0c\u4e0d\u59a8\u8bbe$x$\u9760\u8fd1$a$\uff0c\u90a3\u4e48\u6709$a$\u5230$x$\u6df1\u5ea6\u9012\u51cf\uff0c$b$\u5230$e$\u3001$e$\u5230$f$\u3001$f$\u5230$x$\u6df1\u5ea6\u9012\u51cf\uff1b\u540c\u6837\uff0c\u80af\u5b9a\u6709$c$\u5230$f$\u3001$d$\u5230$e$\u6df1\u5ea6\u9012\u51cf\uff0c\u7531\u6b64\u53ef\u77e5\uff0c$y$\u5fc5\u5b9a\u4e3a$f$\uff0c\u7531\u6b64\u5f97\u8bc1\uff08\u4ee5\u4e0a\u7684$e$\u3001$f$\u548c$c$\u3001$d$\u7684\u76f8\u5bf9\u4f4d\u7f6e\u662f\u7531\u5bf9\u79f0\u6027\u76f4\u63a5\u8bbe\u7684\uff0c\u6211\u8868\u8fbe\u4e0d\u592a\u597d\uff0c\u5404\u4f4d\u4e0d\u59a8\u753b\u56fe\u7406\u89e3\u4e00\u4e0bqwq\uff09  \n\u5982\u679c\u5728\u7684\u8bdd\u5c31\u66f4\u597d\u8bc1\u4e86\uff0c\u5404\u4f4d\u4e0d\u59a8\u8bd5\u8bd5qwq  \n\u90a3\u4e48\u5982\u4f55\u67e5\u770b\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u4e00\u6761\u8def\u5f84\u4e0a\u5462\uff1f\u6211\u627e\u4e86\u4e00\u4e2a\u6027\u8d28\uff0c\u5373\u987b\u6ee1\u8db3\u8be5\u70b9\u5230\u8def\u5f84\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb\u548c\u7b49\u4e8e\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb\uff0c\u8ddd\u79bb\u7528lca\u548c\u6df1\u5ea6\u5c31\u53ef\u4ee5\u4e86  \n\u4ee3\u7801\u5982\u4e0b\uff0c\u7528\u500d\u589e\u505a\u7684\uff1a\n```cpp\n#include <cstdio>\n#define DEBUG printf(\"Passing [%s] in LINE %d.\\n\", __FUNCTION__, __LINE__);\n#define MAXN 100005\nusing namespace std;\n\nstruct edge {\n    int v, pre;\n} e[MAXN<<1];\nint N, T, fst[MAXN], dep[MAXN], dp[MAXN][18];\nint vis[MAXN], lg[MAXN];\n\ninline int read()\n{\n    register int o = 0;\n    register char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    while (c >='0' && c <='9') o = (o<<3)+(o<<1)+(c&15), c = getchar();\n    return o;\n}\ninline int abs(int x) { return x > 0 ? x : -x; }\ninline int swap(int &x, int &y) { x ^= y ^= x ^= y; }\ninline int addedge(int a, int b, int k)\n{\n    e[k] = (edge){b, fst[a]}, fst[a] = k;\n}\nint build(int k, int d)\n{\n    vis[k] = 1, dep[k] = d;\n    for (register int o=fst[k]; o; o=e[o].pre)\n        if (!vis[e[o].v]) dp[e[o].v][0] = k, build(e[o].v, d+1);\n}\nint prepare(int k)\n{\n    vis[k] = 0;\n    for (register int i=1; i<=lg[dep[k]]; i++)\n    \tdp[k][i] = dp[dp[k][i-1]][i-1];\n    for (register int o=fst[k]; o; o=e[o].pre)\n        if (vis[e[o].v]) prepare(e[o].v);\n}\nint init()\n{\n    N = read(), T = read();\n    for (register int i=1, a, b, c; i<N; i++) {\n        a = read(), b = read();\n        addedge(a, b, i);\n        addedge(b, a, i+N);\n    }\n    build(1, 0);\n    for (register int i=1; i<=N; i++)\n        lg[i] = lg[i-1] + ((1<<(lg[i-1]+1)) == i);\n    prepare(1);\n}\nint lca(int a, int b)\n{\n    if (dep[a] < dep[b]) swap(a, b);\n    while (dep[a] > dep[b]) a = dp[a][lg[dep[a]-dep[b]]];\n    if (a == b) return a;\n    for (register int i=lg[dep[a]]; i>=0; i--) \n    \tif (dp[a][i] != dp[b][i]) a = dp[a][i], b = dp[b][i];\n    return dp[a][0];\n}\ninline int dis(int a, int b)\n{\n    register int c = lca(a, b);\n    return abs(dep[c]-dep[a]) + abs(dep[c]-dep[b]); \n}\nint work()\n{\n    for (register int a, b, c, d, x, y; T; T--)\n    {\n        a = read(), b = read(), c = read(), d = read();\n        x = lca(a, b), y = lca(c, d);\n        if (dis(a, y)+dis(b, y)==dis(a, b) || dis(c, x)+dis(d, x)==dis(c, d)) puts(\"Y\");\n        else puts(\"N\");\n    }\n}\nint main()\n{\n    init();\n    work(); \n}\n```",
        "postTime": 1536412889,
        "uid": 9315,
        "name": "zhyh",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u5176\u5b9e\uff0c\u591a\u753b\u51e0\u4e2a\u56fe\u6a21\u62df\u4e00\u4e0b\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u4e0b\u4e00\u4e2a\u795e\u5947\u7684\u89c4\u5f8b\uff1a\n\n**\u5982\u679c\u4e24\u6761\u8def\u5f84\u76f8\u4ea4\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e00\u6761\u8def\u5f84\u7684LCA\u5728\u53e6\u4e00\u6761\u8def\u5f84\u4e0a**\n\n\u800c\u5224\u65ad\u4e00\u4e2a\u8282\u70b9x\uff0c\u662f\u5426\u5728\u8def\u5f84s-t\u4e0a\u9700\u8981\u6ee1\u8db3\u5982\u4e0b\u51e0\u4e2a\u6761\u4ef6\n\n        - deep[x]>=deep[LCA(s,t)]\n\n        - LCA(s,x)=x\u6216LCA(t,x)=x;\n\n\u6240\u4ee5\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(n log n)\n\n\u4e0b\u9762\u662f\u6811\u5256LCA\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#define MAXN 100000+15 \nusing namespace std;\nvector<int>vec[MAXN];\nint n,q,v,u,a,b,c,d;\nint deep[MAXN],dad[MAXN],size[MAXN],top[MAXN];\nint dfs(int x){\n    size[x]=1;\n    deep[x]=deep[dad[x]]+1;\n    for(int i=0;i<vec[x].size();i++)\n        if(dad[x]!=vec[x][i]){\n            dad[vec[x][i]]=x;\n            dfs(vec[x][i]);\n            size[x]+=size[vec[x][i]]; \n        } \n} \nint dfs1(int x){\n    int t=0;\n    if(!top[x])    top[x]=x;\n    for(int i=0;i<vec[x].size();i++)\n        if(dad[x]!=vec[x][i]&&size[vec[x][i]]>size[t])\n            t=vec[x][i];\n    if(t){\n        top[t]=top[x];\n        dfs1(t);\n    }    \n    for(int i=0;i<vec[x].size();i++)\n        if(dad[x]!=vec[x][i]&&vec[x][i]!=t)\n            dfs1(vec[x][i]);\n}\nint LCA(int x,int y){\n    for(;top[x]!=top[y];){\n        if(deep[top[x]]<deep[top[y]])\n            swap(x,y);\n        x=dad[top[x]];\n    }\n    if(deep[x]>deep[y])    swap(x,y);\n    return x;\n}\nint main(){\n    cin>>n>>q;\n    for(int i=1;i<n;i++){\n        cin>>u>>v;\n        vec[u].push_back(v);\n        vec[v].push_back(u);\n    }\n    dfs(1);\n    dfs1(1);\n    for(int i=1;i<=q;i++){\n        cin>>a>>b>>c>>d;\n        int S=LCA(a,b);\n        int T=LCA(c,d);\n        if(deep[S]<deep[T]){\n            swap(S,T);\n            swap(a,c);\n            swap(b,d);\n        }    \n        if(LCA(S,c)==S||LCA(S,d)==S)    cout<<\"Y\"<<endl;\n        else    cout<<\"N\"<<endl;\n    }\n}\n```",
        "postTime": 1494041512,
        "uid": 21719,
        "name": "\u6ca7\u6f9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "# \u72ec\u7279\u7684\u601d\u8def\n\n\u9898\u610f\uff1a\u73b0\u6709A,B,C,D\u56db\u70b9\uff0c\u5224\u65adA\u5230B\u7684\u6700\u77ed\u8def\u548cC\u5230D\u7684\u6700\u77ed\u8def\u6709\u65e0\u4ea4\u6c47\n\n\u4ee5\u4e0b\u4e3a\u7ed3\u8bba(\u53ef\u4ee5\u5927\u6982\u770b\u4e00\u4e0b\uff0c\u4e86\u89e3\u5927\u6982\u8fc7\u7a0b\uff0c\u4ee5\u4fbf\u66f4\u597d\u7684\u770b\u61c2\u601d\u8def\u8fc7\u7a0b)\n\n>\u5148\u5957\u4e24\u904dlca,\u628aA\u548cB\u7684\uff0cC\u548cD\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u6c42\u51fa\u6765\uff0c\u7136\u540e\u6c42\u51faA\u548cC\uff0cA\u548cD\uff0cB\u548cC\uff0cB\u548cD\u4e2dlca\u6df1\u5ea6\u6700\u5927\u7684\uff0c\u628a\u5f97\u5230\u7684\u6df1\u5ea6\u4e0eA\u548cB\uff0cC\u548cD\u7684lca\u6df1\u5ea6\u4f5c\u6bd4\u8f83\u3002\u5982\u679c\u90fd\u5927\u4e8e\u7b49\u4e8eA\u548cB\uff0cC\u548cD\u7684lca\u6df1\u5ea6\uff0c\u5219\u8f93\u51fa\u201cY\u201d\uff0c\u5426\u5219\u8f93\u51fa\u201cN\u201d\n\n#### \u4e3a\u4ec0\u4e48\u5462\uff1f\n\u5982\u56fe\uff0c\u5728\u6811\u4e2d\uff0cA,B\u7684\u6700\u77ed\u8def\u8d70\u6cd5\u5982\u4e0b\n\n![](https://cdn.luogu.com.cn/upload/pic/55316.png )\n\n\u4eceB\u4e00\u76f4\u5411\u4e0a\u8d70\uff0c\u76f4\u5230\u8d70\u5230K\u70b9\uff0c\u7136\u540e\u5728\u5411\u4e0b\u8d70\uff0c\u76f4\u5230A\u70b9\uff0c\u6211\u4eec\u628a\u9700\u8981\u56de\u5934\u7684K\u70b9\u79f0\u4e3a\n#### \u201c\u56de\u5934\u70b9\u201d\n\u56e0\u4e3a\u6811\u7684\u7279\u6027(\u5411\u4e0a\u7684\u8def\u53ea\u6709\u4e00\u6761)\u6240\u4ee5A\u548cB\u7684\u56de\u5934\u70b9\u5c31\u662flca(A,B),\u800c\u4e14\u8d70\u6cd5\u53ea\u6709\u4e00\u6761\n\n- \u53e6\u5916\uff0c\u5982\u679c\u4e0d\u8d70\u6700\u77ed\u8def\uff0c\u4f60\u5f53\u7136\u53ef\u4ee5\u8d70\u5230X\u70b9\uff0c\u751a\u81f3\u66f4\u4e0a\u9762\u7684\u70b9\uff0c\u4f46\u4f60\u8fd8\u662f\u8981\u56de\u5230K\u70b9\uff0c\u800c\u4e14\u4f60\u6c38\u8fdc\u4e0d\u80fd\u4e0d\u8fc7K\u70b9\u5230\u8fbeA\u70b9\n\n\u73b0\u6709A\uff0cB\uff0cC\uff0c\u4e09\u70b9\uff0cA\uff0cB\u7684\u56de\u5934\u70b9\u662fK\uff0cB\u548cC\u7684\u56de\u5934\u70b9\u662fN\u3002A\u5230C\u7684\u8fc7\u7a0b\u4e2d\uff0c\u56e0\u4e3a\u5411\u4e0a\u7684\u8def\u53ea\u6709\u4e00\u6761\uff0c\u6240\u4ee5\u5982\u679cN\u7684\u6df1\u5ea6\u5c0f\u4e8eK\u7684\u6df1\u5ea6\uff0c\u5219A\u5230\u4e86K\u70b9\u540e\u8fd8\u5c06\u7ee7\u7eed\u5411\u4e0a\u8d70\uff0c\u624d\u80fd\u5230\u8fbeN\u70b9\uff0c\u7136\u540e\u56de\u5934\u5230C\u70b9\u3002\u5982\u679cN\u7684\u6df1\u5ea6\u5927\u4e8eK\u7684\u6df1\u5ea6\uff0c\u5219A\u8fd8\u6ca1\u5230\u8fbeK\u70b9\uff0c\u5c31\u5230\u8fbe\u4e86N\u70b9\uff0c\u53ef\u4ee5\u56de\u5934\u4e86\u3002\n\n- \u6ce8\u610f\u4e00\u70b9\uff1aA\u5230B\u548cA\u5230C\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5fc5\u7136\u6709\u4e00\u6bb5\u662f\u91cd\u5408\u7684\uff0c\u56e0\u4e3a\u51fa\u53d1\u70b9\u4e00\u6837\u3002\u800c\u4e14\u8fd9\u91cd\u5408\u7684\u4e00\u6bb5\u5c31\u662fA->K\u548cN\u4e2d\u6df1\u5ea6\u5c0f\u7684\u90a3\u4e00\u70b9\u3002\n\n\u56de\u5230\u9898\u76ee\uff0c\u7531\u4e8e\u6211\u4eec\u8981\u6c42\u4e24\u6761\u6700\u77ed\u8def\u6709\u6ca1\u6709\u4ea4\u6c47\uff0c\u8f6c\u6362\u4e00\u4e0b\uff0c\u53ef\u4ee5\u6210\u4e3a\u4ee5\u4e0b\u95ee\u9898\n\n> \u6c42\u4efb\u610f\u4e00\u7ec4 \u4e0d\u540c\u7ec4\u7684\u4e24\u70b9(\u5373A\u548cC \u6216A\u548cD \u6216B\u548cC \u6216B\u548cD)\u80fd\u5426\u5728 \u53ea\u80fd\u8d70\u540c\u7ec4\u4e4b\u95f4\u6700\u77ed\u8def\u7684\u60c5\u51b5\u4e0b \u76f8\u4e92\u5230\u8fbe(\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u5462\uff0c\u5404\u4f4d\u53ef\u4ee5\u81ea\u5df1\u753b\u753b\u56fe\uff0c\u72ec\u81ea\u63a2\u7a76\u4e00\u4e0b)\n\n\u4e4b\u524d\u6211\u4eec\u8bb2\u8fc7\u4e09\u70b9\u4e4b\u95f4\u7684\u8def\u7ebf\u89c4\u5f8b\uff0c\u6269\u5927\u5230\u56db\u4e2a\u70b9\u4e5f\u540c\u6837\u9002\u7528\uff0c\u5982\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/55317.png )\n\n\u6211\u4eec\u62ffB\u548cC\u4e3a\u4f8b\uff1a\n\n\u53ef\u4ee5\u77e5\u9053B\u548cC\u7684\u56de\u5934\u70b9\u662f2\uff0c\u56e0\u4e3a2\u7684\u6df1\u5ea6\u7b49\u4e8eA\u548cB\u7684\u56de\u5934\u70b9\u7684\u6df1\u5ea6(\u5927\u4e8e\u7b49\u4e8e\u90fd\u53ef\u4ee5)\uff0c\u6240\u4ee5B\u52302\u7684\u4e4b\u95f4\u7684\u8def\u7a0b\u90fd\u5728A\u548cB\u7684\u6700\u77ed\u8def\u4e0a\u3002\u540c\u74062\uff0c\u7684\u6df1\u5ea6\u5927\u4e8eC\u548cD\u7684\u56de\u5934\u70b9\u7684\u6df1\u5ea6\uff0c\u6240\u4ee5C\u52302\u7684\u4e4b\u95f4\u7684\u8def\u7a0b\u90fd\u5728C\u548cD\u7684\u6700\u77ed\u8def\u4e0a\u3002\u6b64\u65f6\u6ee1\u8db3\u6761\u4ef6\uff0c\u8f93\u51fa\u201cY\u201d\u3002\n\n\u518d\u6765\u770b\u770b\u8fd9\u5e45\u56fe\n\n![](https://cdn.luogu.com.cn/upload/pic/55320.png )\n\n\u6b64\u65f6\uff0cB\u548cC\u7684\u56de\u5934\u70b9\u662f2\uff0c\u56e0\u4e3a2\u7684\u6df1\u5ea6\u5c0f\u4e8eA\u548cB\u7684\u56de\u5934\u70b9\u7684\u6df1\u5ea6\uff0c\u6240\u4ee5B\u5230\u4e86A\u548cB\u7684\u56de\u5934\u70b9\u540e\u4ecd\u7136\u8fd8\u8981\u7ee7\u7eed\u5411\u4e0a\u8d70\u5230B\u548cC\u7684\u56de\u5934\u70b9\uff0c\u8fd9\u65f6A\u548cB\u7684\u56de\u5934\u70b9->B\u548cC\u7684\u56de\u5934\u70b9\u7684\u8fd9\u4e00\u6bb5\u8def\u7a0b\u662f\u4e0d\u80fd\u8d70\u7684\uff0c\u6240\u4ee5B\u4e0d\u80fd\u5230C\u3002\n\n\u56e0\u4e3a\u53ea\u8981\u6ee1\u8db3\u4e00\u7ec4\uff0c\u800c\u4e14\u53ea\u4e0e\u56de\u5934\u70b9\u7684\u6df1\u5ea6\u6709\u5173\uff0c\u6240\u4ee5\u5c31\u50cf\u7ed3\u8bba\u4e2d\u6240\u8bf4\u7684\uff1a\u7136\u540e\u6c42\u51faA\u548cC\uff0cA\u548cD\uff0cB\u548cC\uff0cB\u548cD\u4e2dlca\u6df1\u5ea6\u6700\u5927\u7684\uff0c\u628a\u5b83\u4e0eA\u548cB\uff0cC\u548cD\u7684\u56de\u5934\u70b9\u7684\u6df1\u5ea6\u4f5c\u6bd4\u8f83\uff0c\u5982\u679c\u90fd\u5927\u4e8e\u7b49\u4e8e\uff0c\u5219\u8f93\u51fa\u201cY\u201d\uff0c\u5426\u5219\u8f93\u51fa\u201cN\u201d\u3002\n\n\u89c1\u4ee3\u7801(\u91c7\u7528\u6811\u4e0a\u500d\u589e\u6cd5)\uff1a\n\n```cpp\nstruct qqq{\n    int y,next;\n}a[200001];\n//\u90bb\u63a5\u8868\u5b58\u6811\nint h[100001],d[100001],f[100001][18],v[100001];\n//h\uff1ahead(\u4e0e\u90bb\u63a5\u8868\u76f8\u914d\u961f)\uff0cd\uff1a\u6df1\u5ea6\uff0cf\uff0cv\uff1a\u89c1lca\u6a21\u677f\u4e2d\u7684\u89e3\u91ca\n```\n\u5173\u4e8elca\u7684\u6a21\u677f\uff0c\u672c\u9898\u89e3\u5c31\u4e0d\u518d\u8d58\u8ff0(~~\u5176\u5b9e\u662f\u6211\u61d2~~)\n\n\u5173\u952e\u4ee3\u7801\uff1a\n```cpp\nfor(int i=1;i<=q;i++){\n\tint x1,y1,x2,y2;\n\tscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n\tint lac1=lca(x1,y1),lac2=lca(x2,y2);\n\tint st=max(d[lca(x1,x2)],d[lca(x1,y2)]);\n\t//st\u662f\u5b58\u4e0d\u540c\u7ec4\u7684\u4e24\u70b9(\u5373A\u548cC \u6216A\u548cD \u6216B\u548cC \u6216B\u548cD)\u7684\u6700\u5927\u6df1\u5ea6 \n\tst=max(st,d[lca(y1,x2)]);\n\tst=max(st,d[lca(y1,y2)]);\n\tif(st>=d[lac1]&&st>=d[lac2])cout<<\"Y\"<<endl;\n\telse cout<<\"N\"<<endl;\n} \n```\n\u597d\u4e86\uff0c\u672c\u9898\u89e3\u5c31\u5230\u8fd9\u4e86\uff0c\u4ee3\u7801\u6709\u70b9\u5c11\u5475\uff0c\u4f46\u53ea\u8981\u4f60\u770b\u61c2\u4e86\u524d\u9762\u7684\u601d\u8def\uff0c\u81ea\u7136\u80fd\u77e5\u9053\u4ee3\u7801\u7684\u5b9e\u73b0\u5427\uff0c\u62dc\u62dc\uff01\n",
        "postTime": 1553858516,
        "uid": 104696,
        "name": "\u51c9\u57ce\u7121\u611b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u8bf4\u662f\u6700\u7b80\u5355\u7684\u4e00\u79cd\u89e3\u6cd5\u4e86\n\n## LCA\u52a0\u8def\u5f84\u957f\u5ea6\u5224\u65ad\u4e0d\u7b49\u5f0f\n\n\u6211\u4eec\u5148\u7528lca\u5904\u7406\u6811\u4e0a\u4efb\u610f\u4e24\u70b9\u95f4\u8ddd\u79bb\uff0c\u5373\uff1a\n\n`dis[a]+dis[b]-2*dis[lca(a,b)]`\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u7528\u6570\u5b66\u5f52\u7eb3\uff08\u6216\u8005\u8bf4\u662f\u8bd5\u51fa\u6765\u7684\u5427\uff09\u53d1\u73b0\uff1a\n\n\u5982\u679c**\u4e24\u4e2a\u8d77\u70b9\u7684\u8ddd\u79bb** + **\u4e24\u4e2a\u7ec8\u70b9\u7684\u8ddd\u79bb** >= **\u4e24\u6761\u8def\u5f84\u7684\u957f\u5ea6\u548c**\n\n\u90a3\u4e48\u4e24\u6761\u8def\u5f84\u6709\u4e00\u90e8\u5206\u4e00\u5b9a\u662f**\u91cd\u5408**\u7684\uff08\u6216\u8005\u8bf4\u4e00\u5b9a\u662f**\u5b58\u5728\u516c\u5171\u70b9**\u7684\uff09\n\n\u6216\u8bb8\u4e5f\u53ef\u4ee5\u7528\u5bb9\u65a5\u539f\u7406\u89e3\u91ca~~\uff08\u5176\u5b9e\u600e\u4e48\u8bc1\u660e\u6b63\u786e\u6027\u6211\u4e5f\u6ca1\u60f3\u597d\u2026\u2026\u76f4\u89c2\u611f\u89c9\u5427\uff09~~\n\n\u4e5f\u5c31\u662f`dist(x1,y1)+dist(x2,y2)>=dist(x1,x2)+dist(y1,y2)`\n\n## AC code:\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100010;\nint f[N][25],d[N],dis[N],T,n,m,tot,t,ver[2*N],next[2*N],head[N];\nqueue <int> q;\nvoid add(int x,int y)\n{\n\tver[++tot]=y;\n\tnext[tot]=head[x];\n\thead[x]=tot;\n}\nint lca(int x,int y)\n{\n\tif(d[x]>d[y]) swap(x,y);\n\tfor(int i=t;i>=0;i--) if(d[f[y][i]]>=d[x]) y=f[y][i];\n    if(x==y) return x;\n    for(int i=t;i>=0;i--) if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n    return f[x][0];\n}\nint dist(int a,int b) {return dis[a]+dis[b]-2*dis[lca(a,b)];}//lca\u6c42\u6811\u4e0a\u4e24\u70b9\u8ddd\u79bb\nint main()\n{\n   \tscanf(\"%d%d\",&n,&m);\n   \tt=(int)(log(n)/log(2))+1;\n\tfor(int i=1;i<=n;i++) head[i]=d[i]=0;\n   \tfor(int i=1;i<n;i++)\n   \t{\n   \t\tint x,y;\n     \tscanf(\"%d%d\",&x,&y);\n   \t\tadd(x,y);add(y,x);\n\t}\n\tq.push(1);\n\td[1]=1;\n\twhile(q.size())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=head[x];i;i=next[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tif(d[y]) continue;\n\t\t\td[y]=d[x]+1;\n\t\t\tdis[y]=dis[x]+1;\n\t\t\tf[y][0]=x;\n\t\t\tfor(int j=1;j<=t;j++)\n\t\t\t    f[y][j]=f[f[y][j-1]][j-1];\n\t\t\tq.push(y);\n\t\t}\t\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x1,y1,x2,y2;\n\t\tscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n\t\tif(dist(x1,y1)+dist(x2,y2)>=dist(x1,x2)+dist(y1,y2)) printf(\"Y\\n\");\n\t\telse printf(\"N\\n\");\n    }\t\n\treturn 0;\n}\n\n```",
        "postTime": 1537863149,
        "uid": 74896,
        "name": "Mathison",
        "ccfLevel": 0,
        "title": "P3398 \u4ed3\u9f20\u627esugar\u3010LCA\u3011"
    },
    {
        "content": "# $Description$\n\u6709\u4e00\u9897$n$\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u7ed9\u4f60\u4e24\u6761\u8def\u5f84\u5404\u81ea\u7684\u7aef\u70b9$a->b$\u3001$c->d$\uff0c\u8be2\u95ee\u8fd9\u4e24\u6761\u8def\u5f84\u662f\u5426\u6709\u516c\u5171\u70b9\n\n# $Solution$\n**\u5224\u65ad\u6811\u4e0a\u4e24\u6761\u8def\u5f84\u6709\u65e0\u516c\u5171\u70b9\uff1a\u6c42$LCA$**\n\n\u82e5\u4e24\u6761\u8def\u5f84\u6709\u516c\u5171\u70b9\uff0c\u90a3\u4e48\u5230\u8fbe\u516c\u5171\u70b9\u53ef\u4ee5\u9009\u62e9\u987a\u7740\u94fe\u5f80\u4e0a\u8d70\u6216\u8005\u5f80\u4e0b\u62d0\u8fdb\u53e6\u4e00\u9897\u5b50\u6811\u3002\n\n\u8fdb\u4e00\u6b65\u8bf4\uff0c**\u5411\u4e0a\u8d70\u7684\u8def\u53ea\u6709\u4e00\u6761\uff0c\u4e24\u6761\u94fe\u6709\u516c\u5171\u70b9\u540e\u4e00\u8d77\u5f80\u4e0a\u8d70\u5230\u6700\u540e\u4e00\u4e2a\u516c\u5171\u70b9\u4e00\u5b9a\u6709\u4e00\u6761\u94fe\u7ed3\u675f\u6216\u8005\u662f\u5f80\u4e0b\u62d0**\n\n\u7ed3\u5408\u8fd9\u5f20\u56fe\u770b\u7684\u66f4\u660e\u767d\n![](https://s2.ax1x.com/2019/10/10/uTPcge.png)\n**\u6240\u4ee5\u8bf4\u4e00\u5b9a\u6709\u4e00\u6761\u94fe\u4e24\u7aef\u70b9\u7684$LCA$\u4f4d\u4e8e\u53e6\u4e00\u6761\u94fe\u4e0a\uff0c\u8fd9\u662f\u4e24\u6761\u94fe\u76f8\u4ea4\u7684\u5145\u8981\u6761\u4ef6**\n\n\u8bbe\u8fd9\u4e2a\u70b9\u4e3a$c$\uff0c\u8fd9\u4e2a\u70b9\u4f4d\u4e8e\u7684\u94fe\u7684\u4e24\u4e2a\u7aef\u70b9\u4e3a$a,b$,$a,b$\u7684$LCA$\u4e3a$d$\uff0c$dis(a,d)+dis(d,c)+dis(b,c)=dis(a,b)$\n\n\u6839\u636e\u6811\u4e0a\u8def\u5f84\u53ea\u6709\u4e00\u6761\u7684\u6027\u8d28\uff0c$dis(a,c)+dis(c,b)=dis(a,b)$\n![](https://s2.ax1x.com/2019/10/10/uTPODs.png)\n\u53c8\u56e0\u4e3a\u53ef\u80fd$X$\u94fe\u7684$LCA$\u4f4d\u4e8e$Y$\u94fe\u4e0a\uff0c\u53cd\u8fc7\u6765\u4e5f\u6709\u53ef\u80fd\uff0c\u6240\u4ee5\u4e24\u79cd\u60c5\u51b5\u9a8c\u8bc1\u53d6$or$\u5373\u53ef\n\n# $Code$\n```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#define re register\n#define maxn 200010\n#define ll long long\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1; char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint q,a,b,c,d;\nint tmp1,tmp2,tmp3,n,x,y,vis[maxn],f[maxn][23],lg[maxn],root;\nint cnt,head[maxn],dep[maxn];\nstruct Edge{\n\tint v,nxt;\n}e[maxn<<2];\ninline void add(int u,int v)\n{\n\te[++cnt].v=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nvoid dfs(int now,int fa)\n{\n\tdep[now]=dep[fa]+1;\n\tf[now][0]=fa;\n\tfor(int i=1;(1<<i)<=dep[now];++i)\n\t f[now][i]=f[f[now][i-1]][i-1]; \n\tfor(int i=head[now];i;i=e[i].nxt)\n\t{\n\t\tint ev=e[i].v;\n\t\tif(ev==fa) continue;\n\t\tdfs(ev,now);\n\t}\n}\nint lca(int x,int y)\n{\n\tif(dep[y]>dep[x]) swap(x,y);\n\tfor(re int i=lg[dep[x]-dep[y]];i>=0;--i)\n\t{\n\t\tif(dep[f[x][i]]<dep[y]) continue;\n\t\tx=f[x][i];\n\t}\n\tif(x==y) return x;\n\tfor(re int i=lg[dep[x]-1];i>=0;--i)\n\t{\n\t\tif(f[x][i]==f[y][i]) continue;\n\t\tx=f[x][i],y=f[y][i];\n\t}\n\treturn f[x][0];\n}\nvoid pre()\n{\n\ttmp1=1,tmp2=0;\n\twhile(tmp1<=n)\n\t{\n\t\tlg[tmp1]=tmp2;\n\t\ttmp2++;\n\t\ttmp1*=2;\n\t}\n\tfor(re int i=1;i<=n;++i)\n\t{\n\t\tif(lg[i]) continue;\n\t\tlg[i]=lg[i-1];\n\t}\n}\nint dis(int a,int b)//\u8ba1\u7b97\u4e00\u6761\u94fe\u7684\u957f\u5ea6 \n{\n\tre int c=lca(a,b);\n\treturn abs(dep[a]-dep[c])+abs(dep[b]-dep[c]);\n}\nint main()\n{\n\tn=read(),q=read();\n\tpre();\n\tfor(re int i=1;i<n;++i)\n\t{\n\t\tx=read(),y=read();\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tdfs(1,0);\n\tfor(re int i=1;i<=q;++i)\n\t{\n\t\ta=read(),b=read(),c=read(),d=read();\n\t\ttmp1=lca(a,b);\n\t\ttmp2=lca(c,d);\n\t\tif(dis(a,tmp2)+dis(b,tmp2)==dis(a,b)||dis(c,tmp1)+dis(d,tmp1)==dis(c,d)) printf(\"Y\\n\");\n\t\telse printf(\"N\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1570688916,
        "uid": 127018,
        "name": "ZORO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u500d\u589e\u7684\u9898\u89e3\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u4e0d\u53ef\u80fd\u76f8\u9047\u7684\u60c5\u51b5\u5224\u65ad\u4e00\u4e0b\u3002\u8bbep\u662fa,b\u7684LCA\uff0cq\u662fc,d\u7684LCA\uff0c\u5982\u679c\u8bf4\u4e00\u5bf9\u70b9\u7684LCA\u7684\u6df1\u5ea6\u6bd4\u53e6\u5916\u4e00\u5bf9\u70b9\u4e2d\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u6df1\u5ea6\u90fd\u8981\u6df1\u7684\u8bdd\u5219\u4e0d\u53ef\u80fd\u76f8\u9047\uff0c\u8f93\u51faN\u3002\n\n\u7136\u540e\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u4e0a\u9762\u7684\u6761\u4ef6\u5219\u7ee7\u7eed\u8fdb\u884c\u5224\u65ad\uff0c\u6211\u4eec\u5047\u8bbep\u7684\u6df1\u5ea6\u5927\u4e8eq\u7684\u6df1\u5ea6\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u53ef\u80fd\u76f8\u9047\u7684\u8bdd\uff08a\u6216b\uff09\u4e0e\uff08q\uff09\u7684LCA\u5c31\u662fq\u3002q\u7684\u6df1\u5ea6\u5927\u4e8ep\u7684\u6df1\u5ea6\u7684\u60c5\u51b5\u4ea6\u7136\u3002\u8f93\u51faY\u3002\n\n\u5426\u5219\u8f93\u51faN\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u6700\u5c11\u505a2\u6b21LCA\uff0c\u6700\u591a\u505a4\u6b21\u3002\u8fd8\u662f\u6bd4\u8f83\u5feb\u7684\u3002\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n//\u5934\u6587\u4ef6\nusing namespace std;\n//std\u7a7a\u95f4\u540d\nconst int MAXN=100005,log_n=17;\n//\u5e38\u6570\nvector<int>G[MAXN];\nint n,m,depth[MAXN],parent[log_n+1][MAXN];\n//\u53d8\u91cf\ninline void read(int &n){\n    n=0;\n    char ch=getchar();\n    while(ch<'0' || ch>'9') ch=getchar();\n    do{\n        n=n*10+ch-'0';\n        ch=getchar();\n    }while(ch>='0' && ch<='9');\n    return;\n}\ninline int min(int x,int y){\n    return x<y ? x:y;\n}\nvoid in_data(){\n    read(n);read(m);\n    int u,v;\n    for(int i=1;i<n;i++){\n        read(u);read(v);\n        G[u].push_back(v);\n        G[v].push_back(u);\n    }\n    return;\n}\nvoid dfs(int u,int fa,int dep){\n    depth[u]=dep;parent[0][u]=fa;\n    int v;\n    for(int i=0;i<G[u].size();i++){\n        v=G[u][i];\n        if(v!=fa){\n            dfs(v,u,dep+1);\n        }\n    }\n    return;\n}\nvoid do_before_query(){\n    dfs(1,0,0);\n    for(int i=1;i<=log_n;i++)\n        for(int u=1;u<=n;u++)\n            parent[i][u]=parent[i-1][parent[i-1][u]];\n    return;\n}\nint lca(int u,int v){\n    if(depth[u]>depth[v]) swap(u,v);\n    int tmp=depth[v]-depth[u];\n    for(int i=0;i<=log_n;i++){\n        if((tmp>>i)&1)\n            v=parent[i][v];\n    }\n    if(u==v) return u;\n    for(int i=log_n;i>=0;i--){\n        if(parent[i][u]!=parent[i][v]){\n            u=parent[i][u];\n            v=parent[i][v];\n        }\n    }\n    return parent[0][u];\n}\nvoid solve_query(){\n    do_before_query();\n    int a,b,c,d,p,q;\n    while(m--){\n        read(a);read(b);read(c);read(d);\n        p=lca(a,b);q=lca(c,d);\n        if(depth[p]>depth[c] && depth[p]>depth[d]){\n            putchar('N');\n            putchar('\\n');\n            continue;\n        }\n        if(depth[q]>depth[a] && depth[q]>depth[b]){\n            putchar('N');\n            putchar('\\n');\n            continue;\n        }\n        if(depth[p]>=depth[q]){\n            if(lca(p,c)==p || lca(p,d)==p){\n                putchar('Y');\n                putchar('\\n');\n                continue;\n            }\n        }\n        else{\n            if(lca(q,a)==q || lca(q,b)==q){\n                putchar('Y');\n                putchar('\\n');\n                continue;\n            }\n        }\n        putchar('N');\n        putchar('\\n');\n    }\n    return;\n}\nint main(){\n    in_data();\n    solve_query();\n    return 0;\n}\n```",
        "postTime": 1475931999,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "[${\\color{orange}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/Wendigo/)\n\n[P3398 \u3010\u4ed3\u9f20\u627esugar\u3011](https://www.luogu.org/problem/P3398)\n\n\u9e23\u8c22 @Rem\u00b0  @Oops\uff01\n\n### \u6b64\u9898\u7b97\u6cd5:\u56fe\u8bba+LCA\n\n\u5927\u81f4\u601d\u8def:\n\n>1.$ $\u8f93\u5165\u56fe\uff0c\u901a\u8fc7$dfs$\u5f97\u51fa\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6$dep[]$\uff0c\u5176\u4e2d$dep[1]=1$\u3002\n\n>2.$ $\u6784\u9020\u500d\u589e\u6570\u7ec4$pro[node][lg]$\u5e76\u6572\u597d$LCA$\u7684\u677f\u5b50\u3002\n\n>3.$ $\u5982\u679c\u4e24\u4e2a\u8def\u5f84\u76f8\u4ea4\uff0c\u5219\u5176\u4e2d\u4e00\u6761\u8def\u5f84\u4e24\u4e2a\u7aef\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u5fc5\u987b\u88ab\u53e6\u4e00\u6761\u8def\u5f84\u6240\u7a7f\u8fc7\u3002\n\n![1030-1.jpg](https://i.loli.net/2019/10/30/8fudoY7B4PDyNKm.jpg)\n\n>\u800c\u5982\u679c$dis(from1,to1)+dis(from2,to2)\\geq dis(from1,from2)+dis(to1,to2)$\u5219\u4e0a\u9762\u7ed3\u8bba\u4f1a\u6ee1\u8db3(\u5982\u4e0b\uff0c$dis(x,y)=dep[x]-dep[lca]+dep[y]-dep[lca]$)\u3002\n\n```cpp\nint dis(int x,int y){\n    int mid=lca(x,y);\n    return dep[x]-dep[mid]+dep[y]-dep[mid];\n}\n```\n\n## \u4ee5\u4e0b\u662f\u4ee3\u7801+\u6ce8\u91ca\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+10;\nint n,q,dep[N],\npro[N][20];\nstruct edge{\n    int adj,nex;\n}e[N*2];\nint g[N],top;\nvoid add(int x,int y){\n    e[++top]=(edge){\n        y,g[x]\n    }; g[x]=top;\n} void dfs(int x,int fa,int d){\n    dep[x]=d; pro[x][0]=fa; //\u521d\u59cb\u5316\u6df1\u5ea6\u548c\u7236\u4eb2\n    for(int j=1;j<18;j++)\n        pro[x][j]=pro[pro[x][j-1]][j-1];\n    for(int i=g[x];i;i=e[i].nex){\n        int to=e[i].adj;\n        if(to==fa) continue;\n        dfs(to,x,d+1);\n    }\n} int lca(int x,int y){  //lca\u7684\u677f\u5b50\n//  printf(\"lca(%d,%d)=\",x,y);\n    if(dep[x]<dep[y])\n        swap(x,y);\n    for(int i=17;i>=0;i--)\n        if(dep[pro[x][i]]>=dep[y])\n            x=pro[x][i];\n//  printf(\"%d\\n\",x);\n    if(x==y) return x;\n    for(int i=17;i>=0;i--)\n        if(pro[x][i]!=pro[y][i]){\n            x=pro[x][i];\n            y=pro[y][i];\n        }\n    return pro[x][0];\n} int dis(int x,int y){ //\u6811\u4e0a\u4e24\u70b9\u8ddd\u79bb\n    int mid=lca(x,y);\n    return dep[x]-dep[mid]\n    +dep[y]-dep[mid];\n} int main(){\n    scanf(\"%d%d\",&n,&q);\n    for(int i=1;i<n;i++){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add(x,y); add(y,x);\n    } dfs(1,1,1); //dfs\n    while(q--){\n        int a,b,c,d;\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        if(dis(a,b)+dis(c,d)>=dis(a,c)+dis(b,d))\n            puts(\"Y\"); //\u5224\u65ad\u7b26\u5408\u6761\u4ef6\n        else puts(\"N\");  //\u6ce8\u610f\u5927\u5c0f\u5199\n    } return 0;\n}\n```\n[\u8fd9\u662fWA\u4ee3\u7801](https://www.luogu.org/discuss/show/161296)\n\n\u81f3\u4eca\u4ecd\u4e0d\u77e5\u4e4b\u524d\u4ee3\u7801\u4e3a\u4f55\u9519\u4e86\u3002\n\n\u8c22\u8c22\u5927\u5bb6! !\n",
        "postTime": 1572443943,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "# \u6811\u94fe\u5256\u5206\u53ef\u505a\n> what\uff1f\n\n\u8003\u8651\u6811\u4e0a\u8282\u70b9\u671f\u521d\u4e3a0\uff0c\u5728\u5c0f\u4ed3\u9f20\u4e0e\u4ed6\u670b\u53cb\u7684\u8d77\u6b62\u4f4d\u7f6e\u4e3aa,b,c,d;\n\n\u6211\u5148\u60f360\u5206\u7684\u66b4\u529b\u662f\uff0c\u6253\u4e24\u4e2aDFS\uff0c\u7b2c\u4e00\u904d\u662fa->b\u6253\u6807\u8bb0\uff0c\u7b2c\u4e8c\u904dc->d\u662f\u627e\u6807\u8bb0\uff1b\u5f88\u81ea\u7136\u60f3\u5230\u6811\u4e0a\u95ee\u9898\u533a\u95f4(a,b)\u8d4b1\uff0c\u5728\u53e6\u4e00\u533a\u95f4\u627e\u662f\u5426(c,d)\u4e4b\u95f4\u4e5f\u88ab\u4ed8\u8fc7\u503c\u5373\u4e3a\u76f8\u4ea4\uff1b\n\n\u90a3\u4e48\u5bf9\u4e8e(a,b)\u6253\u4e0a\u6807\u8bb0\uff0c\u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u5462\uff1f\n\n\u663e\u7136\uff0c\u6811\u5256\u662f\u7ef4\u62a4\u8fd9\u6837\u7684\u9ad8\u6548\u6570\u636e\u7ed3\u6784\uff0c\u90a3\u4e48\u5bf9\u4e8e(c,d)\u6211\u4e5f\u6267\u884c\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u7ef4\u62a4\u533a\u95f4\u6700\u5927\uff0c\u5f53(1,n)\u4e2d\u6700\u5927\u503c\u4e3a2\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u88ab\u8986\u76d6\u4e24\u6b21\uff0c\u5373\u4e3a\u76f8\u4ea4\uff1b\n\n### \u90a3\u4e48\u6811\u5256\u7ef4\u62a4\u533a\u95f4\u4fee\u6539\u4e0e\u533a\u95f4\u6700\u5927\u5c31\u884c\uff1atr[1] == 2 \u8868\u76f8\u4ea4\uff1b\n### \u5949\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#define N 300500\nusing namespace std;\n\nint T,n,m;\nint head[N],cnt;\nstruct node {\n\tint nxt,to;\n}e[N];\nint tr[N * 4],lz[N * 4];\nint fa[N],wson[N],dep[N];\nint tpos[N],sz[N],tp[N],tot;\n\ninline void cp(int u,int v) {\n\tcnt ++;\n\te[cnt].to = v;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\n\ninline void dfs1(int u,int f) {\n\tsz[u] = 1;\n\tfor(int i = head[u];i;i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif(v == f) continue;\n\t\tfa[v] = u; dep[v] = dep[u] + 1;\n\t\tdfs1(v,u); sz[u] += sz[v];\n\t\tif(sz[v] > sz[wson[u]]) wson[u] = v;\n\t}\n}\n\ninline void dfs2(int u,int Top) {\n\ttpos[u] = ++ tot;\n\ttp[u] = Top;\n\tif(wson[u]) dfs2(wson[u],Top);\n\tfor(int i = head[u];i;i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif(v == wson[u] || v == fa[u]) continue;\n\t\tdfs2(v,v);\n\t}\n}\n\ninline void Update(int k) {\n\ttr[k] = max(tr[k << 1],tr[k << 1 | 1]);\n}\n\ninline void Pushdn(int k) {\n\tif(lz[k] != 0) {\n\t\ttr[k << 1] += lz[k];\n\t\ttr[k << 1 | 1] += lz[k];\n\t\tlz[k << 1] += lz[k];\n\t\tlz[k << 1 | 1] += lz[k];\n\t\tlz[k] = 0;\n\t}\n}\n\ninline void Change_max(int k,int l,int r,int a,int b,int c) {\n\tif(a <= l && r <= b) {\n\t\ttr[k] += c;\n\t\tlz[k] += c;\n\t\treturn ;\n\t}\n\tPushdn(k);\n\tint mid = (l + r) >> 1;\n\tif(a <= mid) Change_max(k << 1,l,mid,a,b,c);\n\tif(b > mid) Change_max(k << 1 | 1,mid + 1,r,a,b,c);\n\tUpdate(k);\n}\n\ninline void Change(int u,int v,int c) {\n\twhile(tp[u] != tp[v]) {\n\t\tif(dep[tp[u]] < dep[tp[v]]) swap(u,v);\n\t\tChange_max(1,1,n,tpos[tp[u]],tpos[u],c);\n\t\tu = fa[tp[u]];\n\t}\n\tif(tpos[u] > tpos[v]) swap(u,v);\n\tChange_max(1,1,n,tpos[u],tpos[v],c);\n\treturn ;\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i < n;i ++) {\n\t\tint u,v; scanf(\"%d%d\",&u,&v);\n\t\tcp(u,v); cp(v,u);\n\t}\n\tdep[1] = 1,fa[1] = 1;\n\tdfs1(1,-1); dfs2(1,1);\n\tfor(int i = 1;i <= m;i ++) {\n\t\tint a,b,c,d;\n\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t\tChange(a,b,1); Change(c,d,1);\n\t\tif(tr[1] == 2) printf(\"Y\\n\");\n\t\telse printf(\"N\\n\");\n\t\tChange(a,b,-1); Change(c,d,-1);//\u522b\u5fd8\u51cf\u6389\n\t}\n\treturn 0;\n}\n```\n~~~\u60f3\u5230\u4e4b\u540e\u7801\u6a21\u677f\u5c31\u884c~~~~~",
        "postTime": 1569211331,
        "uid": 153839,
        "name": "\u6e05\u8fdc\u5b66\u4f1a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "# \u6c42\u4e24\u6761\u8def\u5f84\u662f\u5426\u6709\u516c\u5171\u70b9\n\u9898\u76ee\u7684\u610f\u601d\u5c31\u662f\u7ed9\u51fa\u6811\u4e0a\u4e24\u6761\u8def\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u8be2\u95ee\u662f\u5426\u6709\u516c\u5171\u70b9\n\n\u901a\u8fc7\u5206\u6790\u9898\u76ee\u53ef\u4ee5\u53d1\u73b0\u4ee5\u4e0b\u51e0\u70b9\uff1a\n1. \u4e00\u6761\u8def\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u7684LCA\u4e00\u5b9a\u662f\u8be5\u6761\u8def\u5f84\u4e0a\u6df1\u5ea6\u6700\u5c0f\u7684\u70b9\n\n2.\u4e24\u4e2a\u8282\u70b9xy\u7684\u8ddd\u79bb=de[x]+de[y]-2*de[lca(x,y)]\n\n3.\u5982\u679c\u4e00\u4e2a\u70b9\u5728\u4e00\u6761\u8def\u5f84\u4e0a\uff0c\u90a3\u4e48\u5b83\u5230\u4e24\u4e2a\u7aef\u70b9\u7684\u8ddd\u79bb\u548c\u7b49\u4e8e\u8fd9\u6bb5\u8def\u5f84\u7684\u957f\u5ea6\n\n4.\u5982\u679c\u4e24\u6761\u8def\u5f84\u76f8\u4ea4\uff0c\u90a3\u4e48\u8fd9\u6df1\u5ea6\u8f83\u5927\u7684LCA\u4e00\u5b9a\u5728\u53e6\u4e00\u6761\u8def\u5f84\u4e0a\n\n\u6bd4\u5982\u6211\u4eec\u770b\u8fd9\u68f5\u6811![](https://cdn.luogu.com.cn/upload/image_hosting/zb9lk2az.png)\n\u6bd4\u5982\u8fd9\u91cc\u6709\u4e00\u6761\u4ece4\u52308\u7684\u8def\u5f84\uff08\u8bbe\u4e3a\u8def\u5f841\uff09\u548c\u4e00\u676111\u52305\u7684\u8def\u5f84\uff08\u8bbe\u4e3a\u8def\u5f842\uff09\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u8def\u5f841\u7684LCA\u4e3a\u8282\u70b92\uff08\u6df1\u5ea62\uff09\uff0c\u8def\u5f842\u7684LCA\u4e3a\u8282\u70b95\uff08\u6df1\u5ea63\uff09\u3002\u53ef\u4ee5\u770b\u5230\u8282\u70b95\u662f\u4e24\u6761\u8def\u5f84\u7684\u4ea4\u70b9\u3002\n\n\u82e5\u628a\u8def\u5f842\u53d8\u4e3a11\u52301\uff0c\u90a3\u4e48\u5b83\u7684LCA\u4e3a1\uff08\u6df1\u5ea61\uff09\uff0c\u6b64\u65f6\u8282\u70b92\u662f\u4e24\u6761\u8def\u5f84\u7684\u4ea4\u70b9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4ee5\u4e0b\u601d\u8def\u8fdb\u884c\u5224\u65ad\n1.\u5199\u500d\u589eLCA\uff0c\u9884\u5904\u7406nlogn\n\n2.\u8bfb\u51654\u4e2a\u8282\u70b9\uff0c\u5206\u522b\u6c42\u51fa\u4e24\u4e2a\u8282\u70b9\u7684LCA\n\n3.\u9009\u62e9LCA\u6df1\u5ea6\u5927\u7684\u8282\u70b9\uff0c\u5224\u65ad\u5b83\u662f\u5426\u5728\u53e6\u5916\u4e24\u4e2a\u8282\u70b9\u6784\u6210\u7684\u8def\u5f84\u4e0a\uff0c\u5982\u679c\u662f\uff0c\u8f93\u51faY\uff0c\u5426\u5219\u8f93\u51faN\n\n\u5355\u6b21\u8be2\u95ee\u590d\u6742\u5ea64*logn\n\n\u5982\u679c\u4e0d\u4f1a\u6c42LCA\u53ef\u4ee5\u53bb\u770b\u6211\u7684\u500d\u589e[LCA\u9898\u89e3](https://www.luogu.com.cn/blog/llzzxx712/solution-sp14932)\n\n\u6700\u540e\uff0c\u9644\u4e0aAC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100002\n#define ml 20\nusing namespace std;\nint to[N*2],ne[N*2],head[N],de[N],anc[N][ml];\nint n,tot,q;\nvoid add(int x,int y){\n\tto[++tot]=y,ne[tot]=head[x],head[x]=tot;\n}\nvoid read(int &x) {\n    int f = 1; x = 0;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')   {if (ch == '-') f = -1; ch = getchar();}\n    while (ch >= '0' && ch <= '9') {x = x * 10 + ch - '0'; ch = getchar();}\n    x *= f;\n}\nvoid dfs(int x,int fa){\n\tde[x]=de[fa]+1,anc[x][0]=fa;\n\tfor(int i=1;i<ml;i++) anc[x][i]=anc[anc[x][i-1]][i-1];\n\tfor(int i=head[x];i;i=ne[i]) if(to[i]!=fa) dfs(to[i],x);\n}\nint getlca(int x,int y){\n\tif(de[x]<de[y]) swap(x,y);\n\tfor(int i=ml-1;i>=0;i--){\n\t\tif(de[anc[x][i]]>=de[y]) x=anc[x][i];\n\t}\n\tif(x==y) return x;\n\tfor(int i=ml-1;i>=0;i--){\n\t\tif(anc[x][i]!=anc[y][i]) x=anc[x][i],y=anc[y][i];\n\t}\n\treturn anc[x][0];\n}\nbool pan(int x,int y,int z){\n\tint a,b,c,xy,yz,xz;\n\ta=getlca(x,z),b=getlca(y,z),c=getlca(x,y);\n\txy=de[x]+de[y]-2*de[c];\n\tyz=de[y]+de[z]-2*de[b];\n\txz=de[x]+de[z]-2*de[a];\n\tif(xz+yz==xy) return 1;\n\treturn 0;\n}\nint main()\n{\n    read(n),read(q);\n    for(int i=1;i<n;i++){\n    \tint x,y;\n    \tread(x),read(y);\n    \tadd(x,y),add(y,x);\n\t}\n\tdfs(1,1);\n\tfor(int i=1;i<=q;i++){\n\t\tint x,y,x1,y1,lcaxy,lcax1y1;\n\t\tread(x),read(y),read(x1),read(y1);\n\t\tlcaxy=getlca(x,y),lcax1y1=getlca(x1,y1);\n\t\tif(de[lcaxy]>de[lcax1y1]){\n\t\t\tif(pan(x1,y1,lcaxy)) printf(\"Y\\n\");\n\t\t\telse printf(\"N\\n\");\n\t\t}\n\t\telse{\n\t\t\tif(pan(x,y,lcax1y1)) printf(\"Y\\n\");\n\t\t\telse printf(\"N\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n\t\n\n```\n\n",
        "postTime": 1575029886,
        "uid": 235658,
        "name": "llzzxx712",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "### \u540c\u6b65\u53d1\u8868\u4e8e[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/zhenglw/p/11003681.html)\n\n\n------------\n\n### \u65e0\u5173:\n\n\n\u7ade\u8d5b\u8bfe\u60f3\u627e\u4e00\u9053\u6c34\u4e00\u70b9\u7684tarjan\u9898\uff0c\u770b\u770b\u8fd9\u4e48\u4e45\u6ca1\u505a\u9898\u624b\u611f\u6709\u6ca1\u6709\u6389...\n\n\u7ed3\u679c\u8fd9\u9898\u8c8c\u4f3c\u4e0d\u662ftarjan\u554a...\u5e94\u8be5\u662f\u88f8\u7684LCA...\u5047\u7684\u6807\u7b7e\uff01\uff01\n\n\u4e00\u904d\u8fc7\u6837\u4f8b+\u4e00\u904dAC\u796d\uff08\u597d\u5427\u8fd9\u4e48\u6c34\u7684\u9898\u4e5f\u6ca1\u5565\u597d\u5f00\u5fc3\u7684\uff09\n\n###  \u9898\u610f\uff1a\n\n\u5927\u6982\u5c31\u662f\u7ed9\u4e00\u68f5\u6811\uff0c\u548c\u4e24\u6761\u8def\u5f84\uff0c\u5224\u65ad\u4e24\u6761\u8def\u5f84\u6709\u65e0\u516c\u5171\u9876\u70b9\u3002\n\n### \u5206\u6790:\n\n\u968f\u4fbf\u753b\u4e00\u68f5\u6811\uff0c\u7136\u540e\u4f1a\u53d1\u73b0\uff0c\u4e24\u6761\u8def\u5f84\u6709\u516c\u5171\u90e8\u5206\u7684\u8bdd\uff0c\u5fc5\u5b9a\u6709\u4e00\u6761\u8def\u5f84\uff08\u7684\u4e24\u4e2a\u7aef\u70b9\uff09\u7684LCA\u5728\u53e6\u4e00\u6761\u8def\u5f84\u4e0a\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u8981\u5224\u65ad\u4e00\u4e2a\u8282\u70b9\u662f\u5426\u5728\u4e00\u6761\u8def\u5f84\u4e0a\u5373\u53ef\n\n\u7136\u540e\u8054\u60f3\u5230\u7edd\u5bf9\u503c\u7684\u51e0\u4f55\u610f\u4e49\uff08\u53cd\u6b63\u6211\u662f\u8fd9\u4e48\u60f3\u5230\u7684...\uff09\u6ee1\u8db3\u4ee5\u4e0b\u89c4\u5f8b\u7684\u624d\u6709\u53ef\u80fd\u6ee1\u8db3\u8282\u70b9lca\u5728\u8def\u5f84a-b\u4e0a\n\n$$dis(lca,a)+dis(lca,b)==dis(a,b)$$\n\n \n\n \u6ce8\u610f:\u8981\u5224\u65ad\u4e24\u6b21\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u662fLCA(a,b)\u5728c-d\u4e0a\uff0c\u4e5f\u6709\u53ef\u80fd\u662fLCA(c,d)\u5728a-b\u4e0a\n\n\u7136\u540e\u6211\u6253\u7684\u6811\u5256LCA\uff0c\u770b\u7740\u4e0d\u723d\u7684\u53ef\u4ee5\u6362\u6210\u81ea\u5df1LCA\u5566\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#define writeln(x)  write(x),puts(\"\")\n#define writep(x)   write(x),putchar(' ')\nusing namespace std;\ninline int read(){\n    int ans=0,f=1;char chr=getchar();\n    while(!isdigit(chr)){if(chr=='-') f=-1;chr=getchar();}\n    while(isdigit(chr)){ans=(ans<<3)+(ans<<1)+chr-48;chr=getchar();}\n    return ans*f;\n}void write(int x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}const int M = 1e5+5;\nint head[M],ver[M<<1],nxt[M<<1],tot,n,m,idx[M],fa[M],son[M],sz[M],tp[M],dep[M];\ninline void add(int x,int y){ver[++tot]=y;nxt[tot]=head[x];head[x]=tot;}\nvoid dfs1(int x,int f){\n    fa[x]=f,dep[x]=dep[f]+1;sz[x]=1;\n    for(int i=head[x];i;i=nxt[i]){\n        if(ver[i]==f) continue;\n        dfs1(ver[i],x);\n        sz[x]+=sz[ver[i]];\n        if(sz[son[x]]<sz[ver[i]]) son[x]=ver[i];\n    }\n}int t;\nvoid dfs2(int x,int topf){\n    tp[x]=topf,idx[x]=++t;\n    if(!son[x]) return;\n    dfs2(son[x],topf);\n    for(int i=head[x];i;i=nxt[i])\n        if(!idx[ver[i]]) dfs2(ver[i],ver[i]);\n}\nint LCA(int x,int y){\n    while(tp[x]!=tp[y]){\n        if(dep[tp[x]]<dep[tp[y]]) swap(x,y);\n        x=fa[tp[x]];\n    }if(dep[x]>dep[y]) swap(x,y);\n    return x;\n}\nint DIS(int x,int y){return dep[x]+dep[y]-2*dep[LCA(x,y)];}\ninline bool check(int a,int b,int c,int d){\n    int x=LCA(a,b);\n    if(DIS(x,c)+DIS(x,d)==DIS(c,d)) return 1;\n    return 0;\n}\nint main(){\n    n=read(),m=read();\n    for(int i=1,x,y;i<n;i++){\n        x=read(),y=read();\n        add(x,y),add(y,x);\n    }dfs1(1,0),dfs2(1,1);\n    while(m--){\n        int a=read(),b=read(),c=read(),d=read();\n        if(check(a,b,c,d)||check(c,d,a,b)) puts(\"Y\");\n        else puts(\"N\");\n    }\n    return 0;\n}\n```\n ",
        "postTime": 1560671996,
        "uid": 9287,
        "name": "LevenKoko",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\n# \u5927\u5bb6\u597d\uff0c\u6211\u662f\u4e2a\u6bd2\u7624\uff0c\u5e76\u6ca1\u6709\u60f3\u5230\u4ec0\u4e48\u4e24\u8def\u5f84\u6709\u91cd\u5408\u5219\u4e24LCA\u662f\u5176\u4e2d\u4e00\u4e2aLCA\u8fd9\u6837\u7684\u795e\u4ed9\u7ed3\u8bba\uff0c\u53ea\u4f1a\u66b4\u529b\u4e0a\u6570\u636e\u7ed3\u6784\u89e3\u51b3\u3002\u4e8e\u662f\u6211\u5c31\u66b4\u529b\u6811\u5256\u7136\u540e\u94fe\u4e0a\u67e5\u8be2\u4fee\u6539\u8fc7\u4e86\u8fd9\u9898\u3002\n\n## Solution\n\n\u8003\u8651\u4e24\u6761\u94fe\u6709\u76f8\u4ea4\u7684\u90e8\u5206\uff0c\u7b49\u4ef7\u4e8e\u628a\u4e00\u6761\u94fe\u67d3\u8272\u4ee5\u540e\uff0c\u67e5\u8be2\u53e6\u4e00\u6761\u94fe\u4e0a\u6709\u6ca1\u6709\u88ab\u67d3\u8272\u7684\u90e8\u5206\u3002\u5982\u679c\u6709\u5219\u6709\u91cd\u5408\uff0c\u5426\u5219\u6ca1\u6709\u3002\n\n\u53d1\u73b0\u67d3\u8272\u53ef\u4ee5\u7b49\u4ef7\u4e8e\u94fe\u4e0a\u6743\u503c+1\uff08\u67e5\u8be2\u521d\u59cb\u6743\u503c\u4e3a0\uff09\uff0c\u67e5\u8be2\u6709\u88ab\u67d3\u8272\u7684\u5219\u7b49\u4ef7\u4e8e\u67e5\u8be2\u94fe\u4e0a\u6700\u5927\u503c\uff0c\u5982\u679c\u4e0d\u4e3a0\u5219\u6709\u4f4d\u7f6e\u88ab\u67d3\u8272\n\n\u6bcf\u6b21\u67e5\u8be2\u5b8c\u540e\u5c06\u7b2c\u4e00\u6761\u94fe\u4e0a\u7684\u6743\u503c-1\uff0c\u53bb\u6389\u8fd9\u6b21\u67e5\u8be2\u7684\u8d21\u732e\uff0c\u5373\u53ef\u505a\u5230\u4e24\u6b21\u67e5\u8be2\u4e92\u4e0d\u5f71\u54cd\u3002\n\n\u4e8e\u662f\u6811\u5256\u4e00\u4e0b\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fb9\u6743\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5341\u5206\u597d\u5199\u3002\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#ifdef ONLINE_JUDGE\n#define freopen(a, b, c)\n#endif\n#define rg register\n#define ci const int\n#define cl const long long\n\ntypedef long long int ll;\n\nnamespace IPT {\n\tconst int L = 1000000;\n\tchar buf[L], *front=buf, *end=buf;\n\tchar GetChar() {\n\t\tif (front == end) {\n\t\t\tend = buf + fread(front = buf, 1, L, stdin);\n\t\t\tif (front == end) return -1;\n\t\t}\n\t\treturn *(front++);\n\t}\n}\n\ntemplate <typename T>\ninline void qr(T &x) {\n\trg char ch = IPT::GetChar(), lst = ' ';\n\twhile ((ch > '9') || (ch < '0')) lst = ch, ch=IPT::GetChar();\n\twhile ((ch >= '0') && (ch <= '9')) x = (x << 1) + (x << 3) + (ch ^ 48), ch = IPT::GetChar();\n\tif (lst == '-') x = -x;\n}\n\ntemplate <typename T>\ninline void ReadDb(T &x) {\n\trg char ch = IPT::GetChar(), lst = ' ';\n\twhile ((ch > '9') || (ch < '0')) lst = ch, ch = IPT::GetChar();\n\twhile ((ch >= '0') && (ch <= '9')) x = x * 10 + (ch ^ 48), ch = IPT::GetChar();\n\tif (ch == '.') {\n\t\tch = IPT::GetChar();\n\t\tdouble base = 1;\n\t\twhile ((ch >= '0') && (ch <= '9')) x += (ch ^ 48) * ((base *= 0.1)), ch = IPT::GetChar();\n\t}\n\tif (lst == '-') x = -x;\n}\n\nnamespace OPT {\n\tchar buf[120];\n}\n\ntemplate <typename T>\ninline void qw(T x, const char aft, const bool pt) {\n\tif (x < 0) {x = -x, putchar('-');}\n\trg int top=0;\n\tdo {OPT::buf[++top] = x % 10 + '0';} while (x /= 10);\n\twhile (top) putchar(OPT::buf[top--]);\n\tif (pt) putchar(aft);\n}\n\nconst int maxn = 100010;\nconst int maxm = 200010;\n\nstruct Edge {\n\tint to, nxt;\n};\nEdge edge[maxm]; int hd[maxn], ecnt = 1;\ninline void cont(ci from, ci to) {\n\tEdge &e = edge[++ecnt];\n\te.to = to; e.nxt = hd[from]; hd[from] = ecnt;\n}\n\nint n, q, vistime;\nint sz[maxn], son[maxn], dfn[maxn], top[maxn], deepth[maxn], fa[maxn];\n\nstruct Tree {\n\tTree *ls, *rs;\n\tint l, r, v, tg;\n\t\n\tinline void make_tag(ci _v) {\n\t\tthis->v += _v;\n\t\tthis->tg += _v;\n\t}\n\t\n\tinline void pushdown() {\n\t\tif (!this->tg) return;\n\t\tif (this->ls) this->ls->make_tag(tg);\n\t\tif (this->rs) this->rs->make_tag(tg);\n\t\tthis->tg = 0;\n\t}\n\t\n\tinline void pushup() {\n\t\tthis->v = this->ls ? (this->rs ? std::max(this->ls->v, this->rs->v) : this->ls->v) : this->rs->v;\n\t}\n};\nTree *pool[maxm], qwq[maxm], *rot;\nint Top;\n\nvoid reading();\nvoid dfs(ci, ci);\nvoid DFS(ci, ci);\nvoid buildpool();\nvoid buildroot();\nvoid build(Tree*, ci, ci);\nvoid change(int, int, ci);\nvoid update(Tree*, ci, ci, ci);\nbool check(int, int);\nint ask(Tree*, ci, ci);\n\nint main() {\n\tfreopen(\"1.in\", \"r\", stdin);\n\tqr(n); qr(q);\n\treading();\n\tdfs(1,0); DFS(1, 1);\n\tbuildpool(); buildroot();\n\tbuild(rot, 1, n);\n\tint a, b, c, d;\n\twhile(q--) {\n\t\ta = b = c = d = 0;\n\t\tqr(a); qr(b); qr(c); qr(d);\n\t\tchange(a, b, 1);\n\t\tif(check(c, d)) puts(\"Y\");\n\t\telse puts(\"N\");\n\t\tchange(a, b, -1);\n\t}\n\treturn 0;\n}\n\nvoid reading() {\n\tint a, b;\n\tfor (rg int i = 1; i < n; ++i) {\n\t\ta = b = 0; qr(a); qr(b);\n\t\tcont(a, b); cont(b, a);\n\t}\n}\n\nvoid dfs(ci u, ci pree) {\n\tdeepth[u] = deepth[fa[u] = edge[pree].to] + 1;\n\tsz[u] = 1;\n\tfor (int i = hd[u]; i; i = edge[i].nxt) if (i != pree) {\n\t\tint &to = edge[i].to;\n\t\tdfs(to, i ^ 1);\n\t\tsz[u] += sz[to];\n\t\tif(sz[to] > sz[son[u]]) son[u] = to;\n\t}\n}\n\nvoid DFS(ci u, ci tp) {\n\tif ((!u) || (dfn[u])) return;\n\tdfn[u] = ++vistime; top[u] = tp;\n\tDFS(son[u], tp);\n\tfor (int i = hd[u]; i; i = edge[i].nxt) {\n\t\tint &to = edge[i].to;\n\t\tDFS(to, to);\n\t}\n}\n\nvoid buildpool() {\n\tfor (rg int i = 0; i < maxm; ++i) pool[i] = qwq + i;\n\tTop = maxm - 1;\n}\n\nvoid buildroot() {\n\trot = pool[Top--];\n}\n\nvoid build(Tree *u, ci l, ci r) {\n\tu->l = l; u->r = r;\n\tif(l == r) return;\n\tint mid = (l + r) >> 1;\n\tif (l <= mid) build(u->ls = pool[Top--], l, mid);\n\tif (mid < r) build(u->rs = pool[Top--], mid + 1, r);\n}\n\nvoid change(int u, int v, ci p) {\n\twhile (top[u] != top[v]) {\n\t\tif (deepth[top[u]] < deepth[top[v]]) std::swap(u, v);\n\t\tupdate(rot, dfn[top[u]], dfn[u], p);\n\t\tu = fa[top[u]];\n\t}\n\tif (deepth[u] < deepth[v]) std::swap(u, v);\n\tupdate(rot, dfn[v], dfn[u], p);\n}\n\nvoid update(Tree *u, ci l, ci r, ci v) {\n\tif ((u->l > r) || (u->r < l)) return;\n\tif ((u->l >= l) && (u->r <= r)) {u->make_tag(v);return;}\n\tu->pushdown();\n\tif (u->ls) update(u->ls, l, r, v);\n\tif (u->rs) update(u->rs, l, r, v);\n\tu->pushup();\n}\n\nbool check(int u, int v) {\n\twhile (top[u] != top[v]) {\n\t\tif (deepth[top[u]] < deepth[top[v]]) std::swap(u, v);\n\t\tif (ask(rot, dfn[top[u]], dfn[u])) return true;\n\t\tu = fa[top[u]];\n\t}\n\tif (deepth[u] < deepth[v]) std::swap(u, v);\n\treturn ask(rot, dfn[v], dfn[u]);\n}\n\nint ask(Tree *u, ci l, ci r) {\n\tif ((u->l > r) || (u->r < l)) return 0;\n\tif ((u->l >= l) && (u->r <= r)) return u->v;\n\tu->pushdown();\n\treturn u->ls ? (u->rs ? std::max(ask(u->ls, l, r), ask(u->rs, l ,r)) : ask(u->ls, l, r)) : ask(u->rs, l, r);\n}\n```\n\n## Summary\n\n### \u6211\u7231\u66b4\u529b\u4e0a\u6570\u636e\u7ed3\u6784\uff01",
        "postTime": 1543929460,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u5173\u4e8e\u8fd9\u9053\u9898\u76ee\n\n\u5f88\u660e\u663e\u7684\u662f\u8981\u6c42\u6700\u8fd1\u516c\u5171\u7956\u5148\n\n\u6c42\u6700\u8fd1\u516c\u5171\u7956\u5148\u5927\u6982\u56db\u79cd\u65b9\u6cd5\n\n1.\u66b4\u529b  \n2.\u500d\u589e  \n3.\u79bb\u7ebftarjan  \n4.\u6811\u94fe\u5256\u5206\n\n\u4e2a\u4eba\u6700\u559c\u6b22\u6811\u5256\u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u7528\u6811\u5256\u4e86\n\n\u9898\u89e3\u91cc\u7528\u6811\u5256dalao\u7684\u6709\u5f88\u591a\n\n\u4f46\u662f\u6211\u8fd8\u662f\u5199\u4e86\u8fd9\u7bc7\u5173\u4e8e\u6811\u5256\u7684\u9898\u89e3\n\n\u539f\u56e0\u662f\u6211\u89c9\u5f97\u9898\u89e3\u91cc\u7684\u6811\u5256\u6211\u53ef\u80fd\u770b\u4e0d\u592a\u660e\u767d\n\nSTL\u4ec0\u4e48\u7684\uff08\u6211\u592a\u5f31\u4e86\n\n\u6240\u4ee5\u53d1\u4e00\u4e2a\u6bd4\u8f83\u6734\u7d20\u4e00\u70b9\u7684\n\n\u5e0c\u671bdalao\u770b\u5230\u4e0d\u8981\u9a82gai\u5416\n\n\u8fd9\u9053\u9898\u76ee\u6700\u6700\u6700\u91cd\u8981\u7684\u662f\u8981\u53d1\u73b0\u4e00\u4e2a\u89c4\u5f8b\uff1a\n\n\uff08\u81f3\u4e8e\u600e\u4e48\u53d1\u73b0\u591a\u753b\u51e0\u4e2a\u56fe\u8bd5\u8bd5~~\u6216\u8005\u770b\u9898\u89e3~~\n\n\u53ea\u8981\u4e24\u6761\u8def\u5f84\u76f8\u4ea4\u7684\u8bdd\uff0c \u90a3\u4e48\u4e00\u6761\u8def\u5f84\u7684lca\u4e00\u5b9a\u5728\u53e6\u4e00\u6761\u8def\u5f84\u4e0a\n\n\u8bc1\u660e\u6211\u5c5e\u5b9e\u4e0d\u4f1a\n\n\u8bdd\u8bf4\u4fe1\u606f\u5b66\u5965\u8d5b\u4e0d\u662f\u4e0d\u9700\u8981\u8bc1\u660e\u561b\uff08\u9003\n\n\u8fd8\u6709\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e2a\u5c0f\u7ec6\u8282\n\n\u662f\u53cc\u5411\u8fb9\n\n```cpp\nadd(u, v), add(v, u);\n```\n\n\u53ef\u80fd\u53ea\u6709\u50cf\u6211\u8fd9\u4e48\u5f31\u7684\u624d\u4f1a\u8c03\u8fd9\u4e48\u4e45\u6ca1\u53d1\u73b0\n\n\u6811\u5256\u4e24\u4e2adfs\n\n\u7b2c\u4e00\u4e2a\u66f4\u65b0dad\u4e0esize\n\n```cpp\nvoid dfs(int now) {\n\tsize[now] = 1;\n\tdeep[now] = deep[dad[now]] + 1;\n\tfor(int i = head[now]; i; i = e[i].next)\n\t\tif(e[i].to != dad[now]) \n\t\t\tdad[e[i].to] = now, dfs(e[i].to), size[now] += size[e[i].to];\n}\n```\n\n\n\u7b2c\u4e8c\u4e2a\u66f4\u65b0top\u94fe\u9876\n\n```cpp\nvoid dfs1(int now) {\n\tint k = 0;\n\tif(!top[now]) top[now] = now;\n\tfor(int i = head[now]; i; i = e[i].next) \n\t\tif(e[i].to != dad[now] && size[e[i].to] > size[k])\n\t\t\tk = e[i].to;\n\tif(k) top[k] = top[now], dfs1(k);\n\tfor(int i = head[now]; i; i = e[i].next)\n\t\tif(e[i].to != dad[now] && e[i].to != k)\n\t\t\tdfs1(e[i].to);\n}\n```\n\n\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u7684\u987a\u5e8f\n\n\u56e0\u4e3a\u66f4\u65b0top\u662f\u9700\u8981\u533a\u5206\u91cd\u94fe\u4e0e\u8f7b\u94fe\u9700\u8981\u7528\u5230size\n\nThe Last\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int N = 100100;\nint n, q, head[N], cnt, dad[N], top[N], size[N], deep[N];\nstruct edge{\n\tint next, to;\n}e[N << 1];\nint read() {\n\tint s = 0, w = 1;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)) {if(ch == '-') w = -1;ch = getchar();}\n\twhile(isdigit(ch)) {s = s * 10 + ch - '0';ch = getchar();}\n\treturn s * w;\n}\nvoid add(int x, int y) {\n\te[++cnt].next = head[x];\n\te[cnt].to = y;\n\thead[x] = cnt;\n}\nvoid dfs(int now) {\n\tsize[now] = 1;\n\tdeep[now] = deep[dad[now]] + 1;\n\tfor(int i = head[now]; i; i = e[i].next)\n\t\tif(e[i].to != dad[now]) \n\t\t\tdad[e[i].to] = now, dfs(e[i].to), size[now] += size[e[i].to];\n}\nvoid dfs1(int now) {\n\tint k = 0;\n\tif(!top[now]) top[now] = now;\n\tfor(int i = head[now]; i; i = e[i].next) \n\t\tif(e[i].to != dad[now] && size[e[i].to] > size[k])\n\t\t\tk = e[i].to;\n\tif(k) top[k] = top[now], dfs1(k);\n\tfor(int i = head[now]; i; i = e[i].next)\n\t\tif(e[i].to != dad[now] && e[i].to != k)\n\t\t\tdfs1(e[i].to);\n}\nint lca(int x, int y) {\n\twhile(top[x] != top[y]) {\n\t\tif(deep[top[x]] < deep[top[y]]) swap(x, y);\n\t\tx = dad[top[x]];\n\t}\n\treturn deep[x] > deep[y] ? y : x;\n}\nint main () {\n\tn = read();q = read();\n\tfor(int i = 1, u, v; i < n; i++) {\n\t\tu = read();v = read();\n\t\tadd(u, v), add(v, u);\n\t} \n\tdfs(1);\n\tdfs1(1);\n\tfor(int i = 1, a, b, c, d; i <= q; i++) {\n\t\ta = read(), b = read(), c = read(), d = read();\n\t\tint fir = max(deep[lca(a, b)], deep[lca(c, d)]);\n\t\tint sec = max(max(deep[lca(a, c)], deep[lca(a, d)]), max(deep[lca(b, c)], deep[lca(b, d)]));\t\t\n\t\tif(sec >= fir) puts(\"Y\");\n\t\telse puts(\"N\");\n\t}\n\treturn 0;\n}\n```\n\u8c22\u8c22\u6536\u770b\uff0c \u795d\u8eab\u4f53\u5065\u5eb7\uff01\n\n\n\n\n\n\n\n",
        "postTime": 1566992895,
        "uid": 147646,
        "name": "lzpclxf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u90fd\u662f\u76f4\u63a5\u4e0a\u7ed3\u8bba\uff1a\u4e24\u70b9$LCA$\u5728\u53e6\u5916\u4e24\u70b9\u8def\u5f84\u4e0a\n\n\n\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u6253\u4e00\u4e2a\u4f18\u96c5\u7684\u66b4\u529b\u2026\u2026\n\n\n\u663e\u7136\u5bf9\u4e8e$a-b$\u7684\u8def\u5f84\uff0c\u76f4\u63a5\u5c06\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u6743\u52a01\n\n\n\u518d\u5bf9\u4e8e$c-d$\u7684\u8def\u5f84\uff0c\u67e5\u8be2\u8def\u5f84\u4e0a\u7684\u70b9\u6743\u548c\uff0c\u5982\u679c\u70b9\u6743\u548c\u4e0d\u4e3a$1$\u5219\u8bf4\u660e\u4e24\u6761\u8def\u5f84\u6709\u4ea4\u96c6\n\n\n\u663e\u7136\u5bf9\u4e8e\u8def\u5f84\u52a0\u548c\u8def\u5f84\u548c\u67e5\u8be2\u6211\u4eec\u76f4\u63a5\u786c\u4e0a\u6811\u94fe\u5256\u5206\u5373\u53ef\n\n\n\u7279\u522b\u6ce8\u610f\u6bcf\u6b21\u67e5\u8be2\u540e\u8981\u5c06$a-b$\u8def\u5f84\u4e0a\u7684\u8fb9\u6743\u6e05\u7a7a\n\n\n\u552f\u4e00\u7684\u7f3a\u70b9\u5c31\u662f\u4ee3\u7801\u6709\u70b9\u957f\u2026\u2026\n\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\n#define rep(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\nint n,q,h[N],tot;\nstruct edge{\n\tint to,nxt;\n}e[N<<1];\nvoid add(int x,int y){\n\te[++tot].nxt=h[x];h[x]=tot;e[tot].to=y;\n}\nint d[N],f[N],tp[N],sz[N],son[N],dfn[N],idx;\nvoid dfs(int x,int fa){\n\tf[x]=fa;d[x]=d[fa]+1;sz[x]=1;\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t  if(e[i].to!=fa){\n\t  \tdfs(e[i].to,x);sz[x]+=sz[e[i].to];\n\t  \tif(sz[e[i].to]>sz[son[x]])son[x]=e[i].to;\n\t  }\n}\nvoid dfs2(int x,int top){\n\ttp[x]=top;dfn[x]=++idx;\n\tif(!son[x])return;\n\tdfs2(son[x],top);\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t  if(e[i].to!=f[x]&&e[i].to!=son[x])\n\t    dfs2(e[i].to,e[i].to);\n}\nstruct node{\n\tint l,r,val,add;\n}a[N<<2];\n#define L a[x].l\n#define R a[x].r\n#define ls (x<<1)\n#define rs (ls|1)\n#define A a[x].add\nvoid build(int x,int l,int r){\n\tL=l;R=r;A=0;a[x].val=0;\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n}\nvoid updata(int x){\n\ta[x].val=a[ls].val+a[rs].val;\n}\nvoid pushup(int x,int val){\n\tA+=val;a[x].val+=(R-L+1)*val;\n}\nvoid down(int x){\n\tif(A){\n\t\tpushup(ls,A);\n\t\tpushup(rs,A);\n\t\tA=0;\n\t}\n}\nint ask(int x,int l,int r){\n\tif(L>=l&&R<=r)return a[x].val;\n\tdown(x);\n\tint mid=(L+R)>>1,sum=0;\n\tif(mid>=l)sum+=ask(ls,l,r);\n\tif(mid<r)sum+=ask(rs,l,r);\n\treturn sum;\n}\nvoid change(int x,int l,int r,int val){\n\tif(L>=l&&R<=r)pushup(x,val);\n\telse{\n\t\tdown(x);\n\t\tint mid=(L+R)>>1;\n\t\tif(mid>=l)change(ls,l,r,val);\n\t\tif(mid<r)change(rs,l,r,val);\n\t\tupdata(x);\n\t}\n}\nvoid treechange(int x,int y,int val){\n\twhile(tp[x]^tp[y]){\n\t\tif(d[tp[x]]<d[tp[y]])swap(x,y);\n\t\tchange(1,dfn[tp[x]],dfn[x],val);\n\t\tx=f[tp[x]];\n\t}\n\tif(d[x]>d[y])swap(x,y);\n\tchange(1,dfn[x],dfn[y],val);\n}\nint treeask(int x,int y){\n\tint sum=0;\n\twhile(tp[x]^tp[y]){\n\t\tif(d[tp[x]]<d[tp[y]])swap(x,y);\n\t\tsum+=ask(1,dfn[tp[x]],dfn[x]);\n\t\tx=f[tp[x]];\n\t}\n\tif(d[x]>d[y])swap(x,y);\n\treturn sum+ask(1,dfn[x],dfn[y]);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&q);\n\trep(i,1,n-1){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tdfs(1,0);dfs2(1,1);build(1,1,n);\n\trep(i,1,q){\n\t\tint u,v,x,y;\n\t\tscanf(\"%d%d%d%d\",&u,&v,&x,&y);\n\t\ttreechange(u,v,1);\n\t\tint val=treeask(x,y);\n\t\tif(val)puts(\"Y\");\n\t\telse puts(\"N\");\n\t\ttreechange(u,v,-1);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1576395267,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u5148\u8bf4\u4e00\u4e0b\u9898\u610f\uff1a\n\n\u5728\u4e00\u9897\u6811\u4e0a\u4e00\u4e2a\u4ed3\u9f20\u4ecea\u8d70\u5230b,\u4e00\u4e2a\u4ed6\u7684\u57fa\u53cb\u4ecec\u8d70\u5230d\u6c42\u4ed6\u4e24\u4e2a\u662f\u4e0d\u662f\u4f1a\u6709\u76f8\u9047\u7684\u5730\u65b9\u3002\n\n\u4e00\u9053\u6c42lca\u7684\u9898\u76ee\u3002\n\n\u8fd9\u9053\u9898\u53ea\u770b\u9898\u76ee\u662f\u5f88\u96be\u627e\u51fa\u89c4\u5f8b\u7684\uff0c\u4f46\u662f\u4e00\u753b\u56fe\u4ed6\u7684\u89c4\u5f8b\u5c31\u5f88\u663e\u7136\u4e86\n\n\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u4e24\u6761\u8def\u5f84\u5982\u679c\u76f8\u4ea4\u90a3\u4e00\u5bf9\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e00\u5b9a\u5728\u53e6\u4e00\u53f0\u7684\u8def\u5f84\u4e0a\n\n\u4e0d\u7136\u5982\u679c\u76f8\u4ea4\u90a3\u5c31\u8fd9\u80fd\u4e24\u6761\u8fb9\u4ea4\u53c9\uff0c\u8fd9\u5728\u6811\u4e2d\u662f\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\n\u5426\u5219\u5c31\u4e0d\u662f\u4e00\u68f5\u6811\n\n\u4f46\u662f\u600e\u4e48\u786e\u5b9a\u8fd9\u5230\u5e95\u662f\u4e0d\u662f\u56de\u76f8\u9047\u7684\u5462\uff1f\n\n\u53ef\u4ee5\u5148\u6c42\u51fa\u4ed3\u9f20\u76ee\u7684\u5730b\u548c\u51fa\u53d1\u70b9a\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148qwq\u548csurger\u7684\n\n\u76ee\u7684\u5730d\u548c\u51fa\u53d1\u70b9c\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148awa \n\n\u7136\u540e\u5206\u522b\u6c42\u51faa\u548cd\uff0ca\u548cc\uff0cb\u548cd\uff0cb\u548cc\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u6765\u548c\n\n\u524d\u9762\u6c42\u51fa\u7684\u4e24\u4e2a\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u6df1\u5ea6\u6bd4\u8f83\u5982\u679c\u6709\u4e00\u4e2a\u8fd9\u4e24\u4e2a\n\n\u6df1\u5ea6\u5c0f\u90a3\u5c31\u662f\u4e0d\u53ef\u884c\u7684\u4e0d\u7136\u5982\u679c\u90fd\u6bd4\u4ed6\u6df1\u5ea6\u6df1\u6216\u8005\u7b49\u4e8e\u7684\u8bdd\n\n\u90a3\u5c31\u662f\u53ef\u80fd\u9047\u89c1\u7684\n\n\u4f46\u662f\u600e\u4e48\u8bc1\u660e\u53ea\u8981\u4ed6\u4eec\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u6df1\u5ea6\u5927\u4e8e\u7b49\u4e8eawa\u548cqwq\n\n\u90a3\u5c31\u662f\u53ef\u884c\u7684\u5462\uff1f\n\n\u8fd9\u4e2a\u5728\u4e09\u514b\u6cb9\u5927\u4f6c\u7684\u535a\u5ba2\u91cc\u9762\u5df2\u7ecf\u8bc1\u660e\u7684\u5f88\u597d\u5566\uff0c\u6211\u5c31\u4e0d\u591a\u8bf4\u4e86\n\u9644\u4e0a\u94fe\u63a5\n## [\u8fd9\u91cc](https://www.luogu.org/blog/I-am-so-low/solution-p3398)\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\nconst int Max = 100005;\nstruct node\n{\n\tint y,ne;\n}a[Max << 1];\nint head[Max];\nint f[Max][22];\nint tot = 0;\nvoid insert(int x,int y)\n{\n\ta[++ tot].y = y;\n\ta[tot].ne = head[x];\n\thead[x] = tot;\n}\nbool use[Max];\nint de[Max];\nvoid dfs(int x)\n{\n\tuse[x] = true;\n\tfor(int i = head[x];i != 0;i = a[i].ne)\n\t{\n\t\tint ii = a[i].y;\n\t\tif(use[ii] == false)\n\t\t{\n\t\t\tf[ii][0] = x;\n\t\t\tde[ii] = de[x] + 1;\n\t\t\tdfs(ii);\n\t\t}\n\t}\n}\n\nint lca(int x,int y)\n{\n\tif(de[x] < de[y])swap(x,y);\n\tfor(int j = 20;j >= 0;j --)\n\t\tif(de[f[x][j]] >= de[y])\n\t\t\tx = f[x][j];\n\tif(x == y)\n\t\treturn x;\n\tfor(int i = 20;i >= 0;i --)\n\t\tif(f[x][i] != f[y][i])\n\t\t\tx = f[x][i],y = f[y][i];\n\treturn f[x][0];\n}\n\nint main()\n{\n\tint n,q;\n\tint x,y;\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i = 1;i < n;++ i)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tinsert(x,y);\n\t\tinsert(y,x);\n\t}\n\tde[1] = 1;\n\tdfs(1);\n\tfor(int j = 1;j <= 20;j ++)\n\t\tfor(int i = 1;i <= n;++ i)\n\t\t\tf[i][j] = f[f[i][j - 1]][j - 1];\n\twhile(q --)\n\t{\n\t\tint aa,bb,cc,dd;\n\t\tscanf(\"%d%d%d%d\",&aa,&bb,&cc,&dd);\n\t\tint ab = lca(aa,bb);\n\t\tint cd = lca(cc,dd);\n\t\t\n\t\t//int ac = lca(aa,cc);\n\t\t//int ad = lca(aa,dd);\n\t\t//int bc = lca(bb,cc);\n\t\t//int bd = lca(bb,dd);\n\t\tint ans = max(de[lca(aa,cc)],de[lca(aa,dd)]);\n\t\tans = max(ans,de[lca(bb,cc)]);\n\t\tans = max(ans,de[lca(bb,dd)]);\n\t\tif(ans >= de[ab] && ans >= de[cd])\n\t\t\tcout<<\"Y\"<<endl;\n\t\telse\n\t\t\tcout<<\"N\"<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1565681702,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398"
    },
    {
        "content": "\u82e5\u7b54\u6848\u4e3a\u201cY\u201d\uff0c\u4f1a\u6709\u4e00\u4e2a\u5341\u5206\u660e\u663e\u7684\u7279\u70b9\uff1a\n\n\u4e00\u6761\u8def\u5f84\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u4f1a\u5728\u53e6\u4e00\u6761\u8def\u5f84\u4e0a\u3002\n\n\u5982\u4ee5\u4e0b\u8fd9\u5e45\u56fe\uff08\u4ecea\u5230c,\u4eceb\u5230d\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/55315.png)\n\n\u4f60\u4f1a\u53d1\u73b0\u5c42\u6570\u8f83\u5927\u90a3\u4e2a\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08b\u4e0ed\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff09\u4f1a\u5728\u53e6\u4e00\u6761\u7684\u8def\u5f84\u4e0a\uff0c\n\n\u5e76\u4e14\u53e6\u4e00\u6761\u7684\u8def\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\uff08a\uff09\u4e0e\u8fd9\u4e2a\u5c42\u6570\u8f83\u5927\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\n\u5c31\u662f\u8fd9\u4e2a\u5c42\u6570\u8f83\u5927\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u672c\u8eab\uff0c\u53e6\u4e00\u4e2a\u7aef\u70b9\uff08c\uff09\u4e0e\u8fd9\u4e2a\u5c42\u6570\u8f83\u5927\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f\u5c42\u6570\u8f83\u4f4e\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08a\u4e0ec\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff09\n\n\u4e0d\u4ec5\u5982\u6b64\u6211\u8fd8\u53d1\u73b0\u4e86\u4e00\u79cd\u7279\u522b\u7684\u201cN\u201d\uff1a\n\n\u5f53a\u548cc\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e0eb\u548cd\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u5171\u5c42\u65f6\uff0c\u82e5\u8fd9\u4e24\u4e2a\u70b9\u4e0d\u76f8\u540c\uff0c\u8fd9\u4e24\u6761\u8def\u5f84\u5c06\u4e0d\u53ef\u80fd\u76f8\u4ea4\u3002\n\n\u5982\u4ee5\u4e0b\u8fd9\u5e45\u56fe\uff08\u4ecea\u5230c,\u4eceb\u5230d\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/55318.png )\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u53ef\u8c13\u4e00\u4e2a\u88f8\u7684LCA\u4e86\u3002\n\n\u6240\u4ee5\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t,num,n,m,x,y,dep[100010],f[100010][30],head[100010];\nstruct Node{\n\tint to,next;\n}a[100000*2+10];\ninline void add(int from,int to){\t//\u52a0\u8fb9 \n\tnum++;\n\ta[num].to=to;\n\ta[num].next=head[from];\n\thead[from]=num;\n}\ninline void dfs(int son,int fa){\t//LCA\u6a21\u677f \n\tdep[son]=dep[fa]+1;\n\tf[son][0]=fa;\n\tfor(int i=1;i<=t;i++){\n\t\tf[son][i]=f[f[son][i-1]][i-1];\n\t}\n\tfor(int i=head[son];i;i=a[i].next){\n\t\tif(a[i].to!=fa)dfs(a[i].to,son);\n\t}\t\n}\ninline int lca(int x,int y){\t\t//LCA\u6a21\u677f\n\tif(dep[x]>dep[y])swap(x,y);\n\tfor(int i=t;i>=0;i--){\n\t\tif(dep[f[y][i]]>=dep[x])y=f[y][i];\n\t}\n\tif(x==y)return x;\n\tfor(int i=t;i>=0;i--){\n\t\tif(f[x][i]!=f[y][i]){\n\t\t\tx=f[x][i];\n\t\t\ty=f[y][i];\n\t\t}\n\t}\n\treturn f[x][0];\n}\nint main(){\n\tcin>>n>>m;\n\tt=log2(n);\n\tfor(int i=1;i<=n-1;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tdfs(1,0);\n\tint xa,xb,ya,yb;\n\tint l,q,w,djd,e,r;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>xa>>xb>>ya>>yb;\n\t\tif(xa==ya||xb==ya||xa==yb||xb==yb){\t//\u6211\u60f3\u8fd9\u4e2a\u5e94\u8be5\u4e0d\u9700\u8981\u89e3\u91ca\u4e86 \n\t\t\tputs(\"Y\");\n\t\t\tcontinue;\n\t\t}\n\t\tint la=lca(xa,xb),lb=lca(ya,yb);\t//\u627e\u6700\u8fd1\u516c\u5171\u7956\u5148 \n\t\tif(la==lb){\t//\u662f\u4e00\u4e2a\u70b9 \n\t\t\tputs(\"Y\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(dep[la]==dep[lb]){//\u4e0d\u540c\u4e00\u4e2a\u70b9\uff0c\u4f46\u540c\u5c42 \n\t\t\tputs(\"N\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(dep[la]>dep[lb]){\t//\u5224\u65ad\u90a3\u4e2a\u5c42\u6570\u66f4\u5927 \n\t\t\tl=la;\t\t\t\t//l\uff1a\u5c42\u6570\u8f83\u5927\u90a3\u4e2a\u6700\u8fd1\u516c\u5171\u7956\u5148 \n\t\t\tq=ya;\t\t\t\t//q:\u53e6\u4e00\u6761\u7684\u8def\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9 \n\t\t\tw=yb;\t\t\t\t//w:\u53e6\u4e00\u4e2a\u7aef\u70b9\n\t\t\tdjd=lb;\t\t\t\t//djd:\u5c42\u6570\u8f83\u4f4e\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\n\t\t}\n\t\telse{\n\t\t\tl=lb;\n\t\t\tq=xa;\n\t\t\tw=xb;\n\t\t\tdjd=la;\n\t\t}\n\t\te=lca(q,l),r=lca(w,l);\n\t\tif((e==l&&r==djd)||(e==djd&&r==l)){\t//\u5224\u65ad \n\t\t\tputs(\"Y\");\n\t\t\tcontinue;\n\t\t}\n\t\tputs(\"N\");\n\t}\n\treturn 0;//\u8c22\u8c22\u89c2\u770b \n}//\u7edd\u5bf9\u539f\u521b \n```\n\u5ba3\u4f20\u4e00\u4f4d\u548c\u6211\u5408\u4f5c\u7684dalao\u7684\u535a\u5ba2\uff1ahttps://www.luogu.org/blog/wangrxgod/\n\n\u53ef\u80fd\u505a\u7684\u6709\u70b9\u96be\u770b\uff0c\u4f46\u4e5f\u5e0c\u671b\u591a\u591a\u5305\u6db5\uff01\uff01\uff01\uff08\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\uff09",
        "postTime": 1553853577,
        "uid": 99247,
        "name": "\u5514\u554a\u5514",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u7528\u901a\u884c\u7684\u6811\u5256\u6a21\u677f\u5c31\u53ef\u4ee5\u505a\u7684\u9898\u76ee\u3002\n\n\u9996\u5148\u5f15\u7528 @A4paper \u7684[\u9898\u89e3](https://www.luogu.org/blog/A4paper/solution-p3398)\uff0c\u6b64\u9898\u89e3\u4f7f\u6211\u66f4\u52a0\u76f4\u89c2\u5730\u7406\u89e3\u4e86\u4e24\u6761\u8def\u5f84\u76f8\u4ea4\u7684\u5145\u8981\u6761\u4ef6\u3002\n\n\u201c\u4ee4 $x = \\mathrm{LCA}(a, b)$\uff0c$y = \\mathrm{LCA}(c, d)$\uff0c\u5219 $c, d$ \u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u5728 $y$ \u7684\u5b50\u6811\u4e0a\uff0c\u5e76\u4e14 $a, b$ \u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u5728 $x$ \u7684\u5b50\u6811\u4e0a\u3002\u201d\n\n\u63a8\u8350\u901a\u8fc7\u753b\u56fe\uff0c\u4ece\u201c\u6df1\u5ea6\u201d\u7684\u89d2\u5ea6\u7406\u89e3\u8fd9\u4e2a\u7ed3\u8bba\u3002\n\n\u5982\u679c\u4e24\u6761\u8def\u5f84\u76f8\u4ea4\uff0c\u5176\u4e2d\u4e00\u6761\u8def\u5f84\u4e24\u4e2a\u70b9 $a, b$ \u7684 LCA $x$\uff0c\u4e00\u5b9a\u5728\u53e6\u4e00\u6761\u8def\u5f84 $c, d$ \u4e0a\uff08\u8def\u5f84 $c, d$ \u7684 LCA \u4e3a $y$\uff09\u3002\uff08\u4e0d\u59a8\u8bbe\u662f\u8fd9\u6837\uff0c\u4e24\u6761\u8def\u4ea4\u6362\u4e00\u4e0b\u4e5f\u662f\u540c\u7406\uff09\n\n\u8fd9\u5c31\u8981\u6c42 $x$ \u5230 $c$ \u548c\u5230 $d$ \u7684\u8ddd\u79bb\u548c\u7b49\u4e8e $c$ \u5230 $d$ \u7684\u8ddd\u79bb\u3002\n\n\u5982\u56fe\u3002\n\n![1.png](https://i.loli.net/2018/11/06/5be08f1ee1a75.png)\n\n![2.png](https://i.loli.net/2018/11/06/5be08f22d525e.png)\n\n![3.png](https://i.loli.net/2018/11/06/5be08f2662f90.png)\n\n\u5728\u6811\u5256\u8fc7\u7a0b\u4e2d\u7684\u7b2c\u4e00\u6b21 DFS \u65f6\uff0c\u628a\u5b57\u6570\u5927\u5c0f size \u6c42\u51fa\u6765\u2014\u2014\u6811\u5256\u6a21\u677f\u7684\u5e38\u89c4\u64cd\u4f5c\u3002\n\n\u7531\u4e8e DFN\uff08DFS \u5e8f\uff09\u5728\u4e00\u4e2a\u5b50\u6811\u5185\u7684\u8fde\u7eed\u6027\uff0c\u5224\u65ad\u70b9 $x$ \u662f\u5426\u5728\u70b9 $y$ \u7684\u5b50\u6811\u91cc\uff0c\u662f\u975e\u5e38\u7b80\u5355\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad $y$ \u7684 DFN \u662f\u5426\u5728 $[\\mathrm{DFN}_x, \\mathrm{DFN}_x + \\mathrm{size}_x)$ \u8fd9\u4e2a\u533a\u95f4\u91cc\uff0c\u4e00\u6b65\u641e\u5b9a\u3002\n\n\u4e8e\u662f\uff0c\u53ea\u9700\u5224\u65ad\u56db\u4e2a\u70b9\uff0c\u5c31\u80fd\u5f97\u51fa\u7b54\u6848\u4e86\u3002\u5177\u4f53\u89c1\u4ee3\u7801\u7684 Query \u4e0e Range \u51fd\u6570\u3002\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n\nconst int MAXN = 100010; \n\nint n, q; \n\nstruct Graph\n{\n    struct Edge\n    {\n        int to; \n        Edge *next; \n        Edge(int to, Edge* next): to(to), next(next) {}\n        ~Edge(void)\n        {\n            if(next != NULL)\n                delete next; \n        }\n    }*head[MAXN]; \n    Graph(int n)\n    {\n        std :: fill(head + 1, head + n + 1, (Edge*)NULL); \n    }\n    ~Graph(void)\n    {\n        for(int i = 1; i <= n; ++i)\n            delete head[i]; \n    }\n    void AddEdges(int u, int v)\n    {\n        head[u] = new Edge(v, head[u]); \n        head[v] = new Edge(u, head[v]); \n    }\n}*G; \n\nnamespace HLD\n{\n    int num; \n    struct Node\n    {\n        int depth, father, son, top, size, DFN; \n    }s[MAXN]; \n    void DFS1(int u, int k)\n    {\n        s[u].depth = k; \n        s[u].size = 1; \n        int v; \n        for(Graph :: Edge *i = G -> head[u]; i != NULL; i = i -> next)\n            if(!s[v = i -> to].size)\n            {\n                DFS1(v, k + 1); \n                s[u].size += s[v].size; \n                s[v].father = u; \n                if(s[v].size > s[s[u].son].size)\n                    s[u].son = v; \n            }\n    }\n    void DFS2(int u, int top)\n    {\n        s[u].top = top; \n        s[u].DFN = ++num; \n        if(s[u].son)\n            DFS2(s[u].son, top); \n        int v; \n        for(Graph :: Edge *i = G -> head[u]; i != NULL; i = i -> next)\n            if(!s[v = i -> to].DFN)\n                DFS2(v, v); \n    }\n    void Init(void)\n    {\n        DFS1(1, 1); \n        DFS2(1, 1); \n    }\n    int LCA(int x, int y)\n    {\n        int a, b; \n        while((a = s[x].top) ^ (b = s[y].top))\n            if(s[a].depth > s[b].depth)\n                x = s[a].father; \n            else\n                y = s[b].father; \n        return s[x].depth < s[y].depth ? x : y; \n    }\n    bool Range(int x, int y)\n    {\n        return s[x].DFN <= s[y].DFN && s[y].DFN < s[x].DFN + s[x].size; \n    }\n    bool Query(int a, int b, int c, int d)\n    {\n        int x = LCA(a, b), y = LCA(c, d); \n        return (Range(x, c) || Range(x, d)) && (Range(y, a) || Range(y, b)); \n    }\n}\n\nint main(void)\n{\n    scanf(\"%d %d\", &n, &q); \n    G = new Graph(n); \n    for(int i = 1, u, v; i < n; ++i)\n    {\n        scanf(\"%d %d\", &u, &v); \n        G -> AddEdges(u, v); \n    }\n    HLD :: Init(); \n    for(int i = 1, a, b, c, d; i <= q; ++i)\n    {\n        scanf(\"%d %d %d %d\", &a, &b, &c, &d); \n        puts(HLD :: Query(a, b, c, d) ? \"Y\" : \"N\"); \n    }\n    return 0; \n}\n```\n\n\u8c22\u8c22\u9605\u8bfbw",
        "postTime": 1541443797,
        "uid": 35851,
        "name": "Capella",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\n\u662f\u6211\u6821\u9a84\u50b2zzq\u5b66\u957f\u7684\u9898\u8036\uff0c\u5f53\u7136\u8981\u6765\u8d21\u732e\u4e00\u7bc7\u9898\u89e3\u54af\u3002\n\n\u6709\u4e00\u4e2a\u975e\u5e38\u6e05\u5947\u7684\u601d\u8def\uff0c\u5229\u7528\u8def\u5f84\u957f\u5ea6\u5904\u7406\u3002\u7ed3\u679c\u53d1\u73b0\u548c\u4f5c\u8005Mathison\u7684\u601d\u8def\u4e00\u6837\u3002\u8fd9\u91cc\u7ed9\u51fa\u6709\u4e00\u70b9\u70b9\u4e25\u8c28\u7684\u8bc1\u660e\uff1a\n\n**\u547d\u9898\uff1a**\n\n**\u6811\u4e0a\u4e24\u6761\u8def\u5f84 A-B C-D \u6709\u4ea4\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53 A->B + C->D \u2265 A->C + B->D\uff08X->Y\u8868\u793aX\u5230Y\u7684\u6700\u77ed\u8def\u5f84\u957f\uff09**\n\n~~\u8bc1\u660e\uff1a\u95ed\u4e0a\u773c\u775b\uff0c\u611f\u53d7\u4e00\u4e0b\uff0c\u554a\uff0c\u662f\u5bf9\u7684\u3002~~\n\n**\u8bc1\u660e\uff08\u53e3\u80e1\uff09\uff1a**\n\n\u4e8b\u5b9e\u4e0a\u624b\u73a9\u51e0\u6b21\u4e5f\u5c31\u5dee\u4e0d\u591a\u53d1\u73b0\u89c4\u5f8b\u4e86\u3002\n\n\u5982\u679c\u6ca1\u6709\u4ea4\u70b9\uff0c\u90a3\u4e48A->C\u5c31\u662fA->LCA(A,B)->LCA(C,D)->C\uff0c\u663e\u7136\u8fdc\u4e86\uff08\u4e24\u4e2a\u7956\u5148\u4e4b\u95f4\u7684\u8def\u662f\u767d\u8dd1\u7684\uff09\u3002B->D\u540c\u7406\u3002\n\n\u5982\u679c\u6709\u4ea4\u70b9/\u4ea4\u6bb5\uff0c\u8bbe\u76f8\u4ea4\u90e8\u5206\u7aef\u70b9\u4e3aP\u548cQ\uff0c\u4ee4\uff1a\n\nA->B = A->P->Q->B\n\n\u5219\n\nC->D = C->P->Q->D\n\n\u6216\n\nC->D = C->Q->P->D\n\n\u5bf9\u4e8e\u4e24\u79cd\u60c5\u51b5\uff0c\u5206\u522b\u6709\uff1a\n\nA->C = A->P->C , B->D = B->Q->D\n\n\u6216\n\nA->C = A->P->Q->C , B->D = B->P->Q->D\n\n\u4e24\u79cd\u60c5\u51b5\u90fd\u6ee1\u8db3\u4e0a\u9762\u7684\u5f0f\u5b50\u3002\n",
        "postTime": 1540041186,
        "uid": 23323,
        "name": "\u7528\u6237\u5df2\u6ce8\u9500",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "**\u89e3\u6cd5\uff1alca**\n\t\n    \n    \u521a\u521a\u8bb2\u8fc7lca\u548c\u6811\u5256  \u53ef\u662f\u6811\u5256\u8fd8\u6ca1\u6709\u4e86\u89e3\u900f\u5f7b\n\t\u53ea\u597d\u7528lca\u6765\u89e3\u8fd9\u9053\u9898\uff08\u5176\u5b9e\u662f\u6811\u5256\u88f8\u9898\u5566\uff0c\u4f1a\u6811\u5256\u7684\u5927\u4f6c\u7565\u8fc7\u54e6\uff09\uff1b\n\t\n    \n    \u8bb2\u8bb2\u6211\u7684lca\u505a\u6cd5\uff08\u500d\u589elca\uff09\n    \u9996\u5148dfs\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\uff08\u4e00\u5f00\u59cb\u7684\u65f6\u5019\uff0c\n    \u6211\u6bcf\u6b21\u90fd\u4f1a\u7edf\u8ba1\u5165\u5ea6\u6765\u5224\u65ad\u54ea\u4e2a\u70b9\u662f\u6839\uff0c\u540e\u6765\u53d1\u73b0\n    \u6ca1\u6709\u5fc5\u8981\uff0c\u76f4\u63a5\u5f3a\u5236\u8ba4\u4e3a1\u662f\u6839\u5c31\u597d\u5566\uff09\uff1b\n    \u7136\u540e\u6211\u4eec\u5c31\u8981\u5bf9\u8fd9\u68f5\u6811\u641e\u70b9\u4e8b\u60c5\u4e86\uff1a\n    \u9996\u5148\uff0c\u5bf9\u4e8e\u7ed9\u51fa\u7684\u4e24\u5bf9\u70b9,\u5982\u679c\u6709\u4e00\u5bf9\u7684lca\u6df1\u5ea6\u6df1\u4e8e\u53e6\u5916\u4e00\u5bf9\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u6df1\u5ea6\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u65e0\u89e3\u7684\uff0c\u76f4\u63a5\u8f93\u51faN\u5c31\u597d\u4e86\n    \u518d\u7136\u540e\uff0c\u901a\u8fc7yy\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u51fa\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6027\u8d28\uff1a\n    \u5982\u679c\u4e24\u6761\u8def\u5f84\u76f8\u4ea4\uff0c\u90a3\u4e48\u4ea4\u70b9\u4e00\u5b9a\u662f\u67d0\u4e00\u7ec4\u70b9\u7684lca\uff1b\u800c\u8fd9\u67d0\u4e00\u7ec4\u70b9\uff0c\u5176lca\u4e00\u5b9a\u6bd4\u53e6\u4e00\u7ec4\u7684lca\u6df1\u5ea6\u8981\u5927\uff1b\uff08\u4e3a\u4ec0\u4e48\u60f3\u5230\u8fd9\u4e2a\u6027\u8d28\uff1f\u5b9e\u5728\u662f\u4e3e\u4e0d\u51fa\u53cd\u4f8b\u5440\uff09\n    \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9ed8\u8ba4\u7b2c\u4e00\u5bf9\u70b9\uff08a\uff0cb\uff09\u7684lca\u7684\u6df1\u5ea6\u8981\u5c0f\n    \u90a3\u4e48\u76f4\u63a5\u5224\u65adc,d\u7684lca\u662f\u5426\u5728a,b\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u5373\u53ef\n    \u600e\u4e48\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u4e0d\u662f\u5728a,b\u4e4b\u95f4\u8def\u5f84\u4e0a\u5462\uff1f\n    \u53ea\u8981a,b\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u4e0ec,d\u7684lca\u7684lca\u662fc,d\u7684lca\u8fd9\u4e2a\u70b9\u5c31\u53ef\u4ee5\u4e86\uff1b\n    emmm \u597d\u50cf\u4e0d\u592a\u597d\u7406\u89e3\n    \u5176\u5b9e\u5c31\u662f\n    ```cpp\n\tif(lca(q1,lca(q2,w2))==lca(q2,w2)||lca(w1,lca(q2,w2))==lca(q2,w2)){\n\t\t\t\tprintf(\"Y\\n\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"N\\n\");\n\t\t\t}\n```\n\t\u8fd9\u4e48\u7b80\u5355\u5566\u3002\u3002\u3002\n    \u8fd8\u662f\u4e0d\u592a\u7406\u89e3\uff1f\u81ea\u5df1\u53bb\u753b\u56fe\u5427\u5c0f\u54e5\u54e5\uff08\u5c0f\u59d0\u59d0\uff09\n    \u5927\u81f4\u601d\u8def\u5c31\u662f\u8fd9\u4e9b\u4e86 \u53c8\u4e0d\u61c2\u7684\u8bf7\u79c1\u4fe1\u6211\u54e6\u3002\u3002\n    \n    \u4ee3\u7801\u5728\u8fd9\u91cc\n    ```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define cq(i,s,n) for(int i=s;i<=n;i++)\nusing namespace std;\nint n,q,x,y,q1,q2,w1,w2;\nstruct edge{\n\tint nxt,to;\n}edge[200005];\nint num;\nint f[200005][31];\nint head[200005],vis[200005],dep[200005];\nvoid add(int from,int to){\n\tedge[++num].nxt=head[from];\n\tedge[num].to=to;\n\thead[from]=num;\n}\n\nvoid dfs(int u,int depth){\n\tvis[u]=1;\n\tdep[u]=depth;\n\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(!vis[v]){\n\t\t\tdfs(v,depth+1);\n\t\t\tf[v][0]=u;\n\t\t}\n\t}\n}\n\nvoid init(){\n\tfor(int i=1;(1<<i)<=n;i++){\n\t\tcq(j,1,n){\n\t\t\tf[j][i]=f[f[j][i-1]][i-1];\n\t\t}\n\t}\n}\n\nint lca(int x,int y){\n\tint l=0;\n\twhile((1<<l)<=n)l++;\n\tl--;\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(int i=20;i>=0;i--){\n\t\tif(dep[y]<=dep[x]-(1<<i))x=f[x][i];\n\t}\n\tif(x==y)return x;\n\tfor(int i=20;i>=0;i--){\n\t\tif(f[x][i]!=f[y][i]){\n\t\t\tx=f[x][i];\n\t\t\ty=f[y][i];\n\t\t}\n\t}\n\treturn f[x][0];\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&q);\n\tcq(i,1,n-1){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tdfs(1,1);\n\tinit();\n\twhile(q--){\n\t\tscanf(\"%d%d%d%d\",&q1,&w1,&q2,&w2);\n\t\tif(dep[lca(q1,w1)]>dep[lca(q2,w2)]){\n\t\t\tswap(q1,q2);\n\t\t\tswap(w1,w2);\n\t\t}\n\t\tif((dep[lca(q1,w1)]>dep[q2]&&dep[lca(q1,w1)]>dep[w2])||(dep[lca(q2,w2)]>dep[q1]&&dep[lca(q2,w2)]>dep[w1]))\n\t\t{\n\t\t\tprintf(\"N\\n\");\n\t\t}\n\t\telse{\n\t\t\tif(lca(q1,lca(q2,w2))==lca(q2,w2)||lca(w1,lca(q2,w2))==lca(q2,w2)){\n\t\t\t\tprintf(\"Y\\n\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"N\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n    ",
        "postTime": 1534164673,
        "uid": 87942,
        "name": "w_x_c_q",
        "ccfLevel": 0,
        "title": "P3398 \u4ed3\u9f20\u627esugar"
    },
    {
        "content": "\u4e00\u9053\u56fe\u8bba\u9898\u3002\u5927\u610f\u5c31\u662f\u7ed9\u4f60\u4e00\u4e2a\u6811\uff0c\u95ee\u4e24\u6761\u6811\u4e0a\u4e24\u70b9\u95f4\u6700\u77ed\u8def\u5f84\u6709\u6ca1\u6709\u4ea4\u70b9\u3002\u770b\u5230\u8fd9\u4e00\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u6811\u5256\uff0c\u5206\u522b\u628a\u4e24\u70b9\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u70b9\u6743+1\uff0c\u7136\u540e\u6c42\u6811\u4e0a\u6709\u6ca1\u6709\u70b9\u6743\u4e0d\u5c0f\u4e8e2\u7684\u70b9\uff0c\u5982\u679c\u6709\u5c31\u8f93\u51faY\u3002\u7136\u540e\u53d1\u73b0\u6709\u591a\u7ec4\u8be2\u95ee\uff0c\u9042GG\u3002\n\n\n\n\u6362\u4e00\u4e2a\u601d\u8def\u3002\u6811\u4e0a\u4e24\u70b9$u,v$\u95f4\u6700\u77ed\u8def\u5f84\u8bb0\u4e3a$(u,v)$\uff0c\u5219$(u,v)$\u4e00\u5b9a\u7ecf\u8fc7\u4e24\u70b9$LCA(u,v)$\u3002\u800c\u5224\u65ad\u4e24\u6761\u8def$(a,b)$\u548c$(c,d)$\u662f\u5426\u6709\u4ea4\u70b9\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u5224\u65ad$LCA(a,b)$\u662f\u4e0d\u662f\u5728$(c,d)$\u4e0a\uff0c\u6216\u8005$LCA(c,d)$\u662f\u4e0d\u662f\u5728$(a,b)$\u4e0a\u3002\u6211\u4eec\u5148\u5206\u522b\u6c42\u51fa$O=LCA(a,b),P=LCA(c,d)$\uff0c\u8bbe$dep[x]$\u8868\u793a$x$\u7684\u6df1\u5ea6\uff0c\u4e14$dep[O]>dep[P]$\uff0c\u90a3\u4e48\u5982\u4e0b\u8fd9\u4e00\u68f5\u6811\uff1a\n\n![](http://wx1.sinaimg.cn/mw690/005KG2V0ly1fzrfu62oo6j30rs0rsgmj.jpg)\n\n\u663e\u7136\uff0c$(c,d)$\u662f\u8fd9\u6837\u7684\uff1a\n\n![](http://wx1.sinaimg.cn/mw690/005KG2V0ly1fzrfueihw4j30ru0rtmxv.jpg)\n\n\u663e\u7136\u53ef\u89c1\uff0c\u5728\u8fd9\u4e2a\u6811\u4e0a\uff0c\u8054\u7cfb\u6811\u7684\u5b9a\u4e49\uff0c\u5f53$O$\u70b9\u5728$P,2,3,c,d$\u65f6\uff0c$(a,b)$\u548c$(c,d)$\u6709\u4ea4\u70b9,\u6b64\u65f6$LCA(O,c)==O$\u6216$LCA(O,d)==O$\u3002\u4e0d\u96be\u5f52\u7eb3\u51fa\uff0c\u6269\u5c55\u5230\u4efb\u4f55\u6811\u4e0a\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u90fd\u662f\u6210\u7acb\u7684\u3002\n\n\n\n\u6839\u636e\u8fd9\u4e9b\u5c31\u4e0d\u96be\u5199\u51fa\u4ee3\u7801\u4e86\u3002\u5b9e\u73b0\u7684\u65f6\u5019\u4f7f\u7528\u6811\u94fe\u5256\u5206LCA\uff0c\u6c42\u89e3\u7684\u65f6\u5019\u8c03\u6574$O$\u548c$P$\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n\n\u5e16\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int N = 100005;\n\ninline int fd() {\n    int x = 0, f = 1; char ch = getchar();\n    while(!isdigit(ch)) {if(ch == '-') f = -f; ch = getchar();}\n    while(isdigit(ch)) {x = x*10+ch-'0'; ch = getchar();}\n    return x*f;\n}\n\nint cnt, n, m;\nint id[N], dep[N], fa[N], siz[N], son[N], top[N];\n\nint head[N], edcnt;\nstruct edge {int to, nxt;} ed[N << 1];\ninline void ADD(int x,int y) {\n    ed[++edcnt].nxt = head[x];\n    head[x] = edcnt;\n    ed[edcnt].to = y;\n}\n\nvoid dfs1(int x,int f,int deep) {\n    dep[x] = deep;\n    fa[x] = f;\n    siz[x] = 1;\n    int maxson = -1;\n    for (int i = head[x]; i; i = ed[i].nxt) {\n        int y = ed[i].to;\n        if (y == f) continue;\n        dfs1(y, x, deep+1);\n        siz[x] += siz[y];\n        if (maxson < siz[y]) {\n            son[x] = y;\n            maxson = siz[y];\n        }\n    }\n}\nvoid dfs2(int x,int topf) {\n    id[x] = ++cnt;\n    top[x] = topf;\n    if (!son[x]) return;\n    dfs2(son[x], topf);\n    for (int i = head[x]; i; i = ed[i].nxt) {\n        int y = ed[i].to;\n        if (y == fa[x] || y == son[x]) continue;\n        dfs2(y, y);\n    }\n}\ninline int LCA(int x,int y) {\n    while (top[x] != top[y]) {\n        if (dep[top[x]] < dep[top[y]]) swap(x, y);\n        x = fa[top[x]];\n    }\n    return dep[x] < dep[y] ? x : y;\n}\n\nint a, b, c, d, O, P;\nint main() {\n    n = fd(); m = fd();\n    for (int i = 1; i < n; ++i) {\n        a = fd(); b = fd();\n        ADD(a, b); ADD(b, a);\n    }\n    dfs1(1, 0, 1);\n    dfs2(1, 1);\n    for (int i = 1; i <= m; ++i) {\n        a = fd(); b = fd(); c = fd(); d = fd();\n        O = LCA(a, b);\n        P = LCA(c, d);\n        if (dep[O] < dep[P]) {\n            swap(O, P); swap(a, c); swap(b, d);\n        }\n        if (LCA(O, c)==O || LCA(O, d)==O) puts(\"Y\");\n        else puts(\"N\");\n    }\n    return 0;\n}\n```\n\n~~\u6811\u5256\u4e00\u65f6\u723d\uff0c\u4e00\u76f4\u6811\u5256\u4e00\u76f4\u723d~~",
        "postTime": 1549042453,
        "uid": 91822,
        "name": "Qglin_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u76f8\u9047<=>\u4e24\u6761\u8def\u5f84\u6709\u4ea4\u70b9\n\n\u90a3\u6837\u7684\u8bdd\u5c31\u76f4\u63a5\u66b4\u529b\u603c\u67d0\u6761\u94fe\u7684\u6743\u503c\u90fd\u4e3a1\uff0c\u7136\u540e\u67e5\u8be2\u53e6\u4e00\u6761\u94fe\u7684\u6743\u503c\u662f\u5426\u67091\u7684\u5730\u65b9\u5c31\u884c\u4e86\n\n\u6811\u5228\u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c\n\n``` cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <vector>\n#include <queue>\n#include <cmath>\n#include <map>\n\n#ifdef ONLINE_JUDGE\n    #define debug\n    void input() {}\n#else\n    #define debug printf(\"passing [%s] in line %d\\n\", __FUNCTION__, __LINE__)\n    void input() {freopen(\"in\", \"r\", stdin);}\n#endif\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N = 200010;\n\nint n, q;\n\nint head[N], rest[N], to[N], tot;\n\nvoid add(int u, int v) {\n    ++ tot;\n    to[tot] = v;\n    rest[tot] = head[u];\n    head[u] = tot;\n}\n\nnamespace segTree {\n    int l[N * 4], r[N * 4], tag[N * 4], sum[N * 4];\n    void build(int id, int cl, int cr) {\n        int cm = (cl + cr) >> 1;\n        id[l] = cl;\n        id[r] = cr;\n        if(cl != cr) {\n            build(id << 1, cl, cm);\n            build(id << 1 | 1, cm + 1, cr);\n        }\n    }\n    void push(int id) {\n        if(id[tag]) {\n            (id << 1)[tag] += id[tag];\n            (id << 1 | 1)[tag] += id[tag];\n            id[sum] += id[tag] * (id[r] - id[l] + 1);\n            id[tag] = 0;\n        }\n    }\n    void update(int id) {\n        push(id), push(id << 1), push(id << 1 | 1);\n        id[sum] = (id << 1)[sum] + (id << 1 | 1)[sum];\n    }\n    void modify(int id, int ql, int qr, int v) {\n        push(id);\n        if(id[l] > qr || id[r] < ql) return;\n        if(ql <= id[l] && id[r] <= qr) id[tag] += v;\n        else {\n            modify(id << 1, ql, qr, v);\n            modify(id << 1 | 1, ql, qr, v);\n            update(id);\n        }\n    }\n    int query(int id, int ql, int qr) {\n        push(id);\n        if(id[l] > qr || id[r] < ql) return 0;\n        if(ql <= id[l] && id[r] <= qr) return id[sum];\n        else return query(id << 1, ql, qr) + query(id << 1 | 1, ql, qr);\n    }\n}\n\nnamespace splitTree {\n    int sz[N], deep[N], top[N], fa[N], son[N], l[N], r[N], cnt;\n    void dfs1(int u) {\n        u[sz] = 1;\n        u[deep] = u[fa][deep] + 1;\n        for(int i = head[u] ; i ; i = rest[i]) {\n            int v = to[i];\n            if(v != u[fa]) {\n                v[fa] = u;\n                dfs1(v);\n                u[sz] += v[sz];\n                if(u[son][sz] < v[sz]) {\n                    u[son] = v;\n                }\n            }\n        }\n    }\n    void dfs2(int u, int tp) {\n        u[top] = tp;\n        u[l] = ++ cnt;\n        if(u[son]) dfs2(u[son], tp);\n        for(int i = head[u] ; i ; i = rest[i]) {\n            int v = to[i];\n            if(v != u[fa] && v != u[son]) {\n                dfs2(v, v);\n            }\n        }\n        u[r] = cnt;\n    }\n    void work() {\n        dfs1(1);\n        dfs2(1, 1);\n        segTree :: build(1, 1, n);\n    }\n}\n\nnamespace solve {\n    using namespace splitTree;\n    using namespace segTree;\n    void add(int u, int v, int val) {\n        while(u[top] != v[top]) {\n            if(u[top][deep] < v[top][deep]) swap(u, v);\n            modify(1, u[top][splitTree :: l], u[splitTree :: l], val);\n            u = u[top][fa];\n        }\n        if(u[deep] > v[deep]) swap(u, v);\n        modify(1, u[splitTree :: l], v[splitTree :: l], val);\n    }\n    bool check(int u, int v) {\n        while(u[top] != v[top]) {\n            if(u[top][deep] < v[top][deep]) swap(u, v);\n            if(query(1, u[top][splitTree :: l], u[splitTree :: l])) return 1;\n            u = u[top][fa];\n        }\n        if(u[deep] > v[deep]) swap(u, v);\n        return query(1, u[splitTree :: l], v[splitTree :: l]);\n    }\n    void work(int u1, int v1, int u2, int v2) {\n        add(u1, v1, 1);\n        if(check(u2, v2)) puts(\"Y\");\n        else puts(\"N\");\n        add(u1, v1, -1);\n    }\n}\n\nint main() {\n    input();\n    scanf(\"%d%d\", &n, &q);\n    for(int i = 1, u, v ; i < n ; ++ i) {\n        scanf(\"%d%d\", &u, &v);\n        add(u, v);\n        add(v, u);\n    }\n    splitTree :: work();\n    for(int i = 1, u1, v1, u2, v2 ; i <= q ; ++ i) {\n        scanf(\"%d%d%d%d\", &u1, &v1, &u2, &v2);\n        solve :: work(u1, v1, u2, v2);\n    }\n}\n```",
        "postTime": 1507546405,
        "uid": 47111,
        "name": "nekko",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problem/P3398)\n\n\u9898\u76ee\u8981\u6c42\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u548c\u53e6\u5916\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u6709\u6ca1\u6709\u516c\u5171\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u524d\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u90fd\u6253\u4e0a\u6807\u8bb0\uff0c\u518d\u67e5\u8be2\u540e\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u662f\u5426\u5b58\u5728\u6807\u8bb0\u5373\u53ef\uff0c\u6bcf\u7ec4\u67e5\u8be2\u5b8c\u6210\u540e\u8bb0\u5f97\u6e05\u7a7a\u4e00\u4e0b\u6807\u8bb0\u3002\u7528\u6811\u94fe\u5256\u5206\u7ef4\u62a4\uff0c\u590d\u6742\u5ea6$O(Nlog^2N)$\u3002\n\n\u4ee3\u7801\uff1a\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 100001\ninline int read(){int x=0;char c=getchar();while(c<'0' || c>'9')c=getchar();while(c>='0' && c<='9')x=(x<<3)+(x<<1)+(c^'0'),c=getchar();return x;}//\u5feb\u8bfb\nint n,q,head[N],cnt1,cnt2,id[N],fa[N],dep[N],top[N],siz[N],son[N];\nstruct sb2//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\n{\n    int a,b;\n}e[N<<1];\nstruct sb\n{\n    int s,la;\n}tre[N<<2];\ninline void add(const int &a,const int &b){e[++cnt1].a=head[a],e[cnt1].b=b,head[a]=cnt1;}\ninline void dfs1(const int &x,const int &y)//\u6811\u5256\u6a21\u677f\n{\n    fa[x]=y;\n    dep[x]=dep[y]+1;\n    siz[x]=1;\n    for(register int i=head[x];i;i=e[i].a)\n    {\n        if(e[i].b==y)continue;\n        dfs1(e[i].b,x);\n        siz[x]+=siz[e[i].b];\n        if(siz[e[i].b]>siz[son[x]])son[x]=e[i].b;\n    }\n}\ninline void dfs2(const int &x,const int &y)\n{\n    top[x]=y;\n    id[x]=++cnt2;\n    if(!son[x])return;\n    dfs2(son[x],y);\n    for(register int i=head[x];i;i=e[i].a)\n    {\n        if(e[i].b==son[x] || e[i].b==fa[x])continue;\n        dfs2(e[i].b,e[i].b);\n    }\n}\ninline void pushdown(int p)//\u7ebf\u6bb5\u6811\u6a21\u677f\n{\n    if(tre[p].la==1)\n    {\n        tre[p<<1].s=tre[p<<1].la=tre[p<<1|1].s=tre[p<<1|1].la=1;tre[p].la=0;\n    }\n    else if(tre[p].la==-1)\n    {\n        tre[p<<1].s=tre[p<<1|1].s=0,tre[p<<1].la=tre[p<<1|1].la=-1;tre[p].la=0;\n    }\n}\ninline void add(int p,int l,int r,int a1,int a2,int a3)\n{\n    if(a1<=l && r<=a2)if(a3==1){tre[p].s=tre[p].la=1;return;}else{tre[p].s=0,tre[p].la=-1;return;}\n    pushdown(p);\n    int mid=l+r>>1;\n    if(mid>=a1)add(p<<1,l,mid,a1,a2,a3);\n    if(mid<a2)add(p<<1|1,mid+1,r,a1,a2,a3);\n    tre[p].s=tre[p<<1].s|tre[p<<1|1].s;\n}\ninline int query(int p,int l,int r,int a1,int a2)//\n{\n    if(a1<=l && r<=a2)return tre[p].s;\n    pushdown(p);\n    int mid=l+r>>1,ans=0;\n    if(mid>=a1)ans=ans || query(p<<1,l,mid,a1,a2);\n    if(mid<a2)ans=ans || query(p<<1|1,mid+1,r,a1,a2);\n    return ans;\n}\nsigned main()\n{\n    n=read(),q=read();\n    for(register int i=1,a,b;i<n;i++)a=read(),b=read(),add(a,b),add(b,a);\n    dfs1(1,0);\n    dfs2(1,1);\n    while(q--)\n    {\n        int x=read(),y=read();\n        bool bb=0;\n        while(top[x]!=top[y])//\u6253\u6807\u673a\n        {\n            if(dep[top[x]]<dep[top[y]])swap(x,y);\n            add(1,1,n,id[top[x]],id[x],1);\n            x=fa[top[x]];\n        }\n        if(dep[x]>dep[y])swap(x,y);\n        add(1,1,n,id[x],id[y],1);\n        x=read(),y=read();\n        while(top[x]!=top[y])//\u67e5\u8be2\u6807\u8bb0\n        {\n            if(dep[top[x]]<dep[top[y]])swap(x,y);\n            bb=bb || query(1,1,n,id[top[x]],id[x]);\n            x=fa[top[x]];\n        }\n        if(dep[x]>dep[y])swap(x,y);\n        bb=bb || query(1,1,n,id[x],id[y]);\n        if(bb)putchar('Y');else putchar('N');\n        putchar('\\n');\n        add(1,1,n,1,n,0);//\u67e5\u8be2\u540e\u8bb0\u5f97\u6e05\u7a7a\u6807\u8bb0\n    }\n}\n```\n![](https://www.luogu.org/images/congratulation.png)",
        "postTime": 1573355721,
        "uid": 60075,
        "name": "pzc2004",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "```\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<string>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1100000;\nint n,m,num=0;\nint d[maxn],next[2*maxn],head[maxn],e[maxn];\nint dep[maxn],anc[maxn][30];\nvoid add(int x,int y)\n{\n     e[++num]=y;\n     next[num]=head[x];\n     head[x]=num;\n}\n//\u94fe\u5f0f\u524d\u5411\u661f \u5b58\u56fe \uff0c\u9700\u5efa\u53cc\u5411\u8fb9 \nvoid dfs(int x,int fa)\n{\n     //fa\u4e3a\u7236\u7ed3\u70b9 \n     dep[x]=dep[fa]+1;\n     //dep\u8bb0\u5f55\u6bcf\u4e2a\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u6df1\u5ea6 \n     d[x]=d[fa]+1;\n     //dep\u8bb0\u5f55\u6bcf\u4e2a\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u8ddd\u79bb \u56e0\u4e3a\u8fd9\u9053\u9898\u8fb9\u6743\u4e3a1\uff0c\u6240\u4ee5\u4e0e\u6df1\u5ea6\u6570\u503c\u76f8\u540c \n     for(int i=1;(1<<i)<=dep[x];i++)\n       anc[x][i]=anc[anc[x][i-1]][i-1];\n     //anc[x][i]\u8bb0\u5f55x\u7684\u7b2c2\u7684i\u6b21\u65b9\u4e2a\u7956\u5148\u70b9 \n     //\u4f8b\u5982anc[x][0]\u4e3ax\u7684\u7b2c2\u76840\u6b21\u65b9\u4e2a\u7956\u5148\u70b9\uff0c\u4e5f\u5c31\u662f\u5b83\u7684\u7236\u7ed3\u70b9 \n     //\u56e0\u4e3ax\u7684\u7956\u5148\u70b9\u6df1\u5ea6\u4e00\u5b9a\u5c0f\u4e8ex\uff0c\u6240\u4ee5(1<<i)<=dep[x]\n     for(int i=head[x];i;i=next[i])\n     {\n       int y=e[i];\n       if(y==fa)\n         continue;\n       anc[y][0]=x;\n       dfs(y,x);\n     }\n}\nint lca(int x,int y)\n{\n    if(dep[x]<dep[y])  swap(x,y);\n    for(int i=20;i>=0;i--)\n      if(dep[anc[x][i]]>=dep[y])\n        x=anc[x][i];\n    if(x==y)\n      return x;\n    for(int i=20;i>=0;i--)\n      if(anc[x][i]!=anc[y][i])\n      {\n        x=anc[x][i];\n        y=anc[y][i];\n      }\n    return anc[x][0];\n}\nint main()\n{\n    //\u5982\u679c\u76f8\u4ea4,\u8bb0k1=lca(a,b),k2=lca(c,d)\n    //\u5219\u5fc5\u6709k1\u5728c~d\u8def\u5f84\u4e0a\u6216k2\u5728a~b\u8def\u5f84\u4e0a\n    //\u5982\u679c\u4e00\u4e2a\u70b9\u5728\u4e00\u6761\u8def\u5f84\u4e0a,\u5219\u6ee1\u8db3\u8be5\u70b9\u5230\u8def\u5f84\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\u7b49\u4e8e\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<n;i++)\n    {\n      int x,y;\n      scanf(\"%d%d\",&x,&y);\n      add(x,y);\n      add(y,x);\n    }\n    dep[0]=0;\n    anc[1][0]=0;\n    dfs(1,0);\n    for(int i=1;i<=m;i++)\n    {\n      int a,b,c,dd;\n      scanf(\"%d%d%d%d\",&a,&b,&c,&dd);\n      int k1=lca(a,b);\n      //k1\u4e3aa,b\u4e24\u7aef\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148 \n      int k2=lca(c,dd);\n      //k2\u4e3ac,dd\u4e24\u7aef\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148 \n      int x1=d[a]+d[b]-2*d[k1];\n      //x1\u4e3aa,b\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb \n      int x2=d[c]+d[dd]-2*d[k2];\n      //x2\u4e3ac,dd\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb\n      int y1=d[a]+d[k2]-2*d[lca(a,k2)]+d[b]+d[k2]-2*d[lca(b,k2)];\n      //y1\u4e3ak2\u5230a,b\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb\u548c \n      int y2=d[c]+d[k1]-2*d[lca(c,k1)]+d[dd]+d[k1]-2*d[lca(dd,k1)];\n      //y2\u4e3ak1\u5230c,dd\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb\u548c \n      if(y1==x1 || y2==x2)//\u5982\u679ck1\u5728a,b\u533a\u95f4\u4e0a \u6216 k2\u5728c,dd\u533a\u95f4\u4e0a\uff0c\u8bf4\u660e\u4e24\u533a\u95f4\u6709\u516c\u5171\u90e8\u5206\uff0c\u5373\u6709\u53ef\u80fd\u76f8\u9047 \n        printf(\"Y\\n\");\n      else\n        printf(\"N\\n\");\n    }\n    system(\"pause\");\n    return 0;\n}\n\n```\n",
        "postTime": 1565408978,
        "uid": 148757,
        "name": "wanxiang_zx",
        "ccfLevel": 0,
        "title": "P3398  \u4ed3\u9f20\u627esugar"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.luogu.org/blog/oldherd/solution-p3398)  \n### \u672c\u9898\u8003\u5bdf\u4e86\u5bf9lca\u7684\u7406\u89e3\uff0c\u5728\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u65b0\u7684\u63a8\u5bfc\u601d\u8def\u3002  \n\u9501\u5b9a\u4e00\u6761\u5b58\u5728\u7684\u516c\u5171\u8def\u5f84\uff0c\u5982\u4e0b\u56fe\u3002  \n![](https://i.loli.net/2019/05/17/5cdeb357eadbd36465.png)  \n\u56fe1  \n\u90a3\u4e48\u8def\u5f84\u7684\u8d77\u59cb\u70b9\u4e00\u5b9a\u5b58\u5728\u4e8e\u8be5\u4e24\u4e2a\u8282\u70b9\u7684\u4e24\u4fa7\u3002  \n\u6211\u4eec\u8bb0x = lca(a, b), y = lca(c, d)\u3002x, y\u5fc5\u5b9a\u662f\u8def\u5f84\u4e0a\u8f83\u9ad8\u7684\u70b9\u3002\u7531\u4e8e\u6811\u7684\u8282\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7236\u4eb2\uff0c\u6545\u5411\u6df1\u5ea6\u8f83\u4f4e\u51fa\u56de\u6eaf\u65f6\u4ec5\u6709\u4e00\u6761\u8def\u5f84\u3002\u5047\u8bbedep[y] > dep[x] (\u6df1\u5ea6)\u3002\u5219\u7c7b\u4f3c\u4e0b\u56fe\u7684\u60c5\u51b5\uff1a  \n![](https://i.loli.net/2019/05/17/5cdeb359efc0081230.png)  \n\u56fe2  \n\u5047\u8bbea, c\u5728\u8fd9\u4e24\u4e2a\u70b9(\u516c\u516c\u8def\u5f84\u7aef\u70b9)\u7684\u4e0b\u65b9\u3002\u5219a, c\u5fc5\u5b9a\u5728\u8def\u5f84\u4e2d\u6df1\u5ea6\u8f83\u5927\u8282\u70b9\u7684\u5b50\u6811\u4e0a,\u5982\u56fe\uff1a  \n![](https://i.loli.net/2019/05/17/5cdeb35bb0bc586669.png)  \n\u56fe3  \n\u7136\u540e\u8865\u5168c, d,\u5982\u56fe\uff1a  \n![](https://i.loli.net/2019/05/17/5cdeb35e9453a62331.png)  \n\u56fe4  \n\u7531\u56fe1\u53ef\u77e5y\u5728x\u5230\u516c\u5171\u8def\u5f84\u7684\u9053\u8def\u4e0a,\u7531\u56fe3\u53ef\u77e5y\u5728a\u5230\u516c\u516c\u8def\u5f84\u7684\u9053\u8def\u4e0a\u3002  \n\u56e0\u800c\u5f97\u51fa\u7ed3\u8bba\uff1a  \ny\u5fc5\u5b9a\u5904\u5728x\u5230a\u7684\u8def\u5f84\u4e0a\u3002  \n\u4ee5\u4e0a\u8bc1\u660e\u7684\u662f\u8be5\u7ed3\u8bba\u7684\u5145\u5206\u6027\uff0c\u5fc5\u8981\u6027\u6bd4\u8f83\u7b80\u5355\uff0c\u8bf7\u81ea\u884c\u601d\u8003\u3002  \n\u4e0a\u8ff0\u7ed3\u8bba\u7b49\u4ef7\u4e8e:  \nlca(x, y) == x && (lca(a, y) == y || lca(b, y) == y)\uff0c dep[x] < dep[y].  \n(\u56e0\u4e3a\u4e0d\u77e5\u9053a, b\u54ea\u4e00\u4e2a\u5728\u6211\u4eec\u9501\u5b9a\u7684\u516c\u5171\u8def\u5f84\u8f83\u6df1\u8282\u70b9\u7684\u5b50\u6811\u4e0a\u6240\u4ee5a, b\u90fd\u8981\u6bd4\u8f83\u4e00\u4e0b)  \n\u9644\u4e0aac\u4ee3\u7801\uff1a  \n```cpp\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nconst int maxn = 100010, maxp = 30;\ninline void swap(int &x, int &y) {\n\tint t = x; x = y; y = t;\n} \n\nint head[maxn], ver[maxn<<1], nex[maxn<<1], tot;\ninline void addedge(int u, int v) {\n\tver[tot] = v; nex[tot] = head[u]; head[u] = tot++;\n}\n\nint fa[maxn][maxp], dep[maxn];\ninline void dfs(int pre, int cur) {\n\tfa[cur][0] = pre; dep[cur] = dep[pre] + 1;\n\tfor(int i = 1; i <= 25; i++) fa[cur][i] = fa[fa[cur][i-1]][i-1];\n\tfor(int i = head[cur]; i != -1; i = nex[i])\n\t\tif(!dep[ver[i]])\n\t\t\tdfs(cur, ver[i]);\n}\n\ninline int lca(int u, int v) {\n\tif(dep[u] > dep[v]) swap(u, v);\n\tfor(int i = 25; i > -1; --i) if(dep[fa[v][i]] >= dep[u]) v = fa[v][i];\n\tif(u == v) return v;\n\tfor(int i = 25; i > -1; --i) if(fa[u][i] != fa[v][i]) u = fa[u][i], v = fa[v][i];\n\treturn fa[u][0];\n}\n\nint main() {\n\tint n, q, u, v, a, b, c, d;\n\tscanf(\"%d %d\", &n, &q);\n\tmemset(head, -1, sizeof(head));\n\tfor(int i = 1; i < n; i++) {\n\t\tscanf(\"%d %d\", &u, &v);\n\t\taddedge(u, v);\n\t\taddedge(v, u);\n\t}\n\tdfs(0, 1);\n\twhile(q--) {\n\t\tscanf(\"%d %d %d %d\", &a, &b, &c, &d);\n\t\tint x = lca(a, b), y = lca(c, d);\n\t\tif(dep[x] > dep[y]) swap(x, y), swap(a, c), swap(b, d);\n\t\tif(lca(x, y) == x && (lca(a, y) == y || lca(b, y) == y)) printf(\"Y\\n\");\n\t\telse printf(\"N\\n\"); \n\t}\n\treturn 0;\n} \n```\n\u6b22\u8fce\u4e92\u76f8\u5173\u6ce8(\u7136\u800c\u5728oi\u754c\u849f\u84bb\u7684\u5708\u5f88\u5c0f)\u3002  \n\u6700\u540e\u518d\u6b21\u5b89\u5229\u4e00\u4e0b[\u849f\u84bb\u7684\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/oldherd/)  \n",
        "postTime": 1558098615,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "~~\u8bf4\u4e86\u5404\u4f4d\u53ef\u80fd\u4e0d\u4fe1\uff0c\u8001\u8872\u5229\u7528tarjan\u7684\u6bd2\u7624\u5c5e\u6027451ms\u5207\u4e86\u8fd9\u4e2a\u5c0f\u4e1c\u897f~~\n\n\u65b9\u6cd5\u548c\u8bf8\u4f4d\u5927\u4f6c\u90fd\u4e00\u6837\uff0c\u552f\u4e00\u548c\u8bf8\u4f4d\u5927\u4f6c\u90fd\u4e0d\u4e00\u6837\u7684\u662f\u8001\u8872\u5199\u7684\u662f\u4e24\u904dtarjan\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#include<stack>\n#include<cmath>\nusing namespace std;\nconst int maxn=1000005;\nstruct node\n{\n    int to,nxt,fr,kl;\n}t[maxn],tl[maxn];\nint x,y,a[maxn],b[maxn],c[maxn],d[maxn],n,m,deep[maxn];\nint to[maxn],nxt[maxn],head[maxn],headl[maxn],tot,totl;\nint headll[maxn],totll,fl[maxn];\nint ans[maxn][3],f[maxn];\nbool p[maxn],ansy[maxn],pl[maxn];\nint read()\n{\n    char z=getchar();\n    int x=0,y=1;\n    while(z<'0'||z>'9'){if(z=='-')y=-1;z=getchar();}\n    while(z>='0'&&z<='9'){x=x*10+z-'0';z=getchar();}\n    return x*y;\n}\nint find(int x)\n{\n    if(f[x]==x)return x;\n    return f[x]=find(f[x]);\n}\nint findl(int x)\n{\n    if(fl[x]==x)return x;\n    return fl[x]=findl(fl[x]);\n}\nvoid add(int x,int y)\n{\n    to[++tot]=y;\n    nxt[tot]=head[x];\n    head[x]=tot;\n}\nvoid addl(int x,int y,int c,int kl)\n{\n    t[++totl].fr=c;\n    t[totl].kl=kl;\n    t[totl].to=y;\n    t[totl].nxt=headl[x];\n    headl[x]=totl;\n}\nvoid addll(int x,int y,int c,int kl)\n{\n    tl[++totll].fr=c;\n    tl[totll].kl=kl;\n    tl[totll].to=y;\n    tl[totll].nxt=headll[x];\n    headll[x]=totll;\n}\nvoid tarjan(int x,int faa,int dep)\n{\n    f[x]=x;deep[x]=dep;\n    for(int i=head[x];i;i=nxt[i])\n    {\n        int g=to[i];\n        if(g==faa)continue;\n        tarjan(g,x,dep+1);f[g]=x;\n    }\n    for(int i=headl[x];i;i=t[i].nxt)\n    {\n        int g=t[i].to;\n        if(f[g])ans[t[i].fr][t[i].kl]=find(g);\n    }\n}\nvoid tarjan2(int x,int faa)\n{\n    fl[x]=x;\n    for(int i=head[x];i;i=nxt[i])\n    {\n        int g=to[i];\n        if(g==faa)continue;\n        tarjan2(g,x);fl[g]=x;\n    }\n    for(int i=headll[x];i;i=tl[i].nxt)\n    {\n        int g=tl[i].to;\n        if(tl[i].kl==1){if(fl[g]&&findl(g)==x)ansy[tl[i].fr]=1;}\n        else if(fl[g]&&findl(g)==g)ansy[tl[i].fr]=1;\n    }\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n-1;i++)\n    {\n        x=read();y=read();add(x,y);add(y,x);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        a[i]=read();b[i]=read();c[i]=read();d[i]=read();\n        addl(a[i],b[i],i,1);addl(b[i],a[i],i,1);\n        addl(c[i],d[i],i,2);addl(d[i],c[i],i,2);\n    }\n    f[1]=1;\n    tarjan(1,0,1);\n    for(int i=1;i<=m;i++)\n    {\n        if(ans[i][1]==ans[i][2])ansy[i]=1;\n        else\n        {\n        \tif(deep[ans[i][1]]>=deep[ans[i][2]])\n        \t{\n            addll(ans[i][1],c[i],i,1);addll(c[i],ans[i][1],i,2);\n            addll(ans[i][1],d[i],i,1);addll(d[i],ans[i][1],i,2);\n        }\n        else\n        {\n        \taddll(ans[i][2],a[i],i,1);addll(a[i],ans[i][2],i,2);\n            addll(ans[i][2],b[i],i,1);addll(b[i],ans[i][2],i,2);\n\t\t}\n        }\n    }\n    fl[1]=1;\n    tarjan2(1,0);\n    for(int i=1;i<=m;i++)if(ansy[i])puts(\"Y\");else puts(\"N\");;\n    return 0;\n}\n```\n",
        "postTime": 1556454752,
        "uid": 121612,
        "name": "\u5728\u60f3Peach",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u849f\u84bb\u505a\u5b8c\u9898\u540e\u770b\u4e86\u4e00\u773c\u9898\u89e3\uff0c\u53d1\u73b0\u6ca1\u4eba\u7528\u6211\u8fd9\u79cd\u65b9\u6cd5\u505a\u7684\uff0c\u4e8e\u662f\u51b3\u5b9a\u5206\u4eab\u4e00\u4e0b\u8fd9\u79cd\u505a\u6cd5\u3002\n\n\u9996\u5148\u8bf4\u660e\uff0c\u6211\u7528\u7684\u6811\u5256\u3002\n\n\u5148\u4e0a\u4ee3\u7801\u4e3a\u656c\uff1a\n\n```cpp\n#include <stdio.h>\n#include <iostream>\nusing namespace std;\n#define MAXN 100005\n\nint n,m,cnt;\nint head[MAXN];\nint FA[MAXN],dep[MAXN],size[MAXN],son[MAXN];\nint Top[MAXN],DFN[MAXN],END[MAXN];\n\nstruct node{\n\tint to,next;\n}map[2*MAXN];\n\nvoid add(int u, int v)\n{\n\tmap[++cnt] = (node){v,head[u]};\n\thead[u] = cnt;\n}\n\nvoid dfs1(int u, int fa)\n{\n\tFA[u] = fa;\tsize[u] = 1;\n\tdep[u] = dep[fa]+1;\n\tfor(int k=head[u];k;k=map[k].next)\n\t{\n\t\tint v = map[k].to;\n\t\tif(v == fa) continue;\n\t\tdfs1(v,u);\n\t\tsize[u] += size[v];\n\t\tif(size[son[u]] < size[v]) son[u] = v;\n\t}\n}\n\nvoid dfs2(int u, int top)\n{\n\tDFN[u] = ++cnt;\n\tTop[u] = top;\tEND[u] = cnt;\n\tif(!son[u]) return;\n\tdfs2(son[u],top);\n\tEND[u] = END[son[u]];\n\tfor(int k=head[u];k;k=map[k].next)\n\t{\n\t\tint v = map[k].to;\n\t\tif(v==FA[u] || v==son[u]) continue;\n\t\tdfs2(v,v);\n\t\tEND[u] = END[v];\n\t}\n}\n\nint LCA(int x, int y)\n{\n\tint nx = Top[x]; int ny = Top[y];\n\twhile(nx != ny)\n\t{\n\t\tif(dep[nx] < dep[ny])\n\t\t{\n\t\t\tswap(nx,ny);\n\t\t\tswap( x, y);\n\t\t}\n\t\tx = FA[nx];\n\t\tnx = Top[x];\n\t}\n\tif(x == y) return x;\n\tif(dep[x] > dep[y]) swap(x,y);\n\treturn x;\n}\n\nint main(void)\n{\n\tcin >> n >> m;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;\tcin >> u >> v;\n\t\tadd(u,v);\tadd(v,u);\n\t}\n\tcnt = 0;\tdfs1(1,0);\tdfs2(1,1);\n\tfor(int j=1;j<=m;j++)\n\t{\n\t\tint a,b,c,d;\n\t\tcin >> a >> b >> c >> d;\n\t\tint t1 = LCA(a,b);\n\t\tint t2 = LCA(c,d);\n\t\tif (((END[t1]>=DFN[c] && DFN[t1]<=DFN[c]) || (END[t1]>=DFN[d] && DFN[t1]<=DFN[d]))\n\t\t && ((END[t2]>=DFN[a] && DFN[t2]<=DFN[a]) || (END[t2]>=DFN[b] && DFN[t2]<=DFN[b])))\n\t\t\t cout << \"Y\\n\";\n\t\telse cout << \"N\\n\";\n\t}\n\treturn 0;\n}\n```\n\n\u5927\u5bb6\u53ef\u80fd\u770b\u5230\u4ee3\u7801\u4e2d\u4e00\u5768\u5224\u65ad\u975e\u5e38\u7684\u5934\u5927\uff0c\u4e0d\u8fc7\u4e0d\u8981\u6025\uff0c\u8ba9\u6211\u4ece\u5934\u8bf4\u8d77\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8bbe $t1  = LCA(a,b)\\ ,\\ t2 = LCA(c,d)$\n\n\u5f88\u591a\u9898\u89e3\u90fd\u63d0\u5230\u4e86\uff0c**\u5982\u679c\u4e24\u6761\u8def\u5f84\u76f8\u4ea4\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e00\u6761\u8def\u5f84\u7684LCA\u5728\u53e6\u4e00\u6761\u8def\u5f84\u4e0a**\uff08\u8fd9\u91cc\u5f15\u7528\u7684 @\u6ca7\u6f9c \u7684\u9898\u89e3\uff0c\u56e0\u4e3a\u4ed6\u603b\u7ed3\u7684\u5f88\u5230\u4f4d\uff09\u3002\u90a3\u4e48\u6211\u4eec\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\u7ee7\u7eed\u8003\u8651\u4e00\u4e0b\uff08\u5f53\u7136\uff0c\u7ed3\u5408\u753b\u56fe\u53e3\u611f\u66f4\u4f73\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7ed3\u8bba\uff1a\n\n$c$ \u6216 $d$ \u5728 $t1$ \u7684\u5b50\u6811\u4e2d \uff0c\u5e76\u4e14\uff0c $a$ \u6216 $b$ \u5728 $t2$ \u7684\u5b50\u6811\u4e2d\u3002\uff08\u4e5f\u6709\u53ef\u80fd $a,b$ \u90fd\u5728 $t2$ \u7684\u5b50\u6811\u4e2d \u6216 $c,d$ \u90fd\u5728 $t1$ \u7684\u5b50\u6811\u4e2d\uff0c\u4e0d\u8fc7\u8fd9\u4e0d\u5f71\u54cd\uff09\uff0c\u90a3\u4e48\uff0c\u6c42\u4e24\u904d $LCA$ \u540e\u53ea\u8981\u5224\u65ad\u8fd9\u56db\u4e2a\u70b9\u4e0e\u5b50\u6811\u7684\u5173\u7cfb\u5c31\u597d\u3002\u600e\u4e48\u5224\u65ad\u5462\uff1f\u7b54\u6848\u662f\u5229\u7528\u6811\u5256\u8bb0\u4e0b\u7684 $DFS$ \u5e8f\uff0c\u5e76\u8bb0\u5f55\u5b50\u6811 $i$ \u4e2d\u7684\u6700\u5927 $DFS$ \u5e8f $END[i]$ \uff08\u53c2\u8003\u4ee3\u7801\u4e2d\u7684 $dfs2()$ \u51fd\u6570\uff09\u7136\u540e\u6bd4\u5927\u5c0f\u5c31\u597d\u4e86\uff08\u53c2\u8003\u90a3\u4e00\u5927\u5768\u5224\u65ad\uff09\n\n\u6c42\u8fc7\u6c42\u8fc7\uff0c\u5b89\u5229[\u535a\u5ba2](https://www.luogu.org/blog/A4paper/)\n",
        "postTime": 1541399329,
        "uid": 47629,
        "name": "A4paper",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u672c\u9898\u57fa\u672c\u601d\u8def\u4e3a\u6570\u5256\u627elca \u6700\u540e\u518d\u6839\u636e\u6df1\u5ea6\u6765\u5224\u65adYes\u8fd8\u662fNo\uff0c\u6700\u540e\u5efa\u8bae\u5927\u5bb6\u7528\u90bb\u63a5\u8868\uff0c\u5c11\u7528\u90bb\u63a5\u77e9\u9635\uff0c\u5e9f\u8bdd\u4e0d\u8bf4\u4e86\uff0c\u8bf7\u5404\u4f4d\u5927\u4f6c\u6b23\u8d4f\u6211\u8fd9\u4f4d\u7ea2\u540d\u849f\u84bb\u7684\u9898\u89e3\uff01\uff01\u4e0a\u4ee3\u7801\uff01\uff01\uff01\n\n\n```cpp\n#include<iostream>\n#include<iomanip>\n#include<algorithm>\n#include<string>\n#include<map>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<cstring>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\nint n,k,i,x,y,xx,yy;\nint ans[300005];\nvector<int>v[300005<<1];\nint a,b,c,d;\nint dep[300005<<1],size[300005<<1],son[300005<<1],fat[300005<<1],top[300005<<1];\nint vis[300005];\nvoid dfs1(int x,int f)\n{\n    fat[x]=f;\n    vis[x]=1;\n    size[x]=1;\n    dep[x]=dep[f]+1;\n    int k;\n    for(k=0;k<v[x].size();++k)\n    {\n        int s=v[x][k];\n        if(vis[s]==0)\n        {\n            dfs1(s,x);\n            size[x]+=size[s];\t\n            if(size[s]>size[son[x]]) son[x]=s;\n        }\t\n    } \n}\nvoid dfs2(int x,int t)\n{\n    top[x]=t;\n    if(son[x]==0) return ;\n    dfs2(son[x],t);\n    int k;\n    for(k=0;k<v[x].size();++k)\n    {\n        if(v[x][k]!=son[x]&&v[x][k]!=fat[x])\n        {\n            dfs2(v[x][k],v[x][k]);\n        }\n    }\n}\nint lca(int x,int y)\n{\n    while(top[x]!=top[y])\n    {\n        if(dep[top[x]]>dep[top[y]]) x=fat[top[x]];\n        else y=fat[top[y]];\n    }\n    if(dep[x]>dep[y]) return y;\n    else return x;\n}\nvoid getdfs(int x)\n{\n    if(son[x]==0) return ;\n    else\n    {\n        int k;\n        for(k=0;k<v[x].size();++k)\n        {\n            if(v[x][k]!=fat[x])\n            {\n                getdfs(v[x][k]);\n                ans[x]+=ans[v[x][k]];\n            }\t\n        }\t\n    } \n}\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(i=1;i<=n-1;++i)\n    {\n        scanf(\"%d%d\",&x,&y);\n        v[x].push_back(y);\n        v[y].push_back(x);\n    }\n    dfs1(1,0);\n    dfs2(1,1);\n    for(i=1;i<=k;++i)\n    {\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        int p1,p2,p3;\n        p1=max(dep[lca(a,b)],dep[lca(c,d)]);\n        p2=max(dep[lca(a,c)],dep[lca(a,d)]);\n        p3=max(dep[lca(b,c)],dep[lca(b,d)]);\n        if(max(p2,p3)>=p1) cout<<\"Y\"<<endl;\n        else cout<<\"N\"<<endl; \n    }\n    return 0;\n}\n```",
        "postTime": 1540382352,
        "uid": 34859,
        "name": "dell20050604",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "```cpp\n//\u4eca\u5929\u8003\u8bd5\u9898T1\u7684\u5355\u7ec4\u6570\u636e\u7248 \n//\u770b\u7740\u8d3c\u773c\u719f \u5c31\u662f\u60f3\u4e0d\u8d77\u548b\u505a\u6765\n//\u8003\u8651\u4e86\u4e00\u4e0b\u7279\u5224\u60c5\u51b5\uff0c\u597d\u9ebb\u70e6\uff0c\u5c31\u5199\u4e86\u4e2a\u6811\u5256\u6253\u6253\u66b4\u529b\uff0c\u7adf\u7136A\u4e862333\n\n//\u9898\u76ee\u5c31\u662f\u8ba9\u7740\u5224\u65ad\u4e24\u6761\u8def\u5f84\u662f\u5426\u6709\u4ea4\n//\u6211\u4eec\u6811\u5256\u5efa\u8d77\u7ebf\u6bb5\u6811\u6765\uff0c\u5c31\u6210\u4e86\u4e00\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u5bf9\u5e94\u533a\u95f4\u662f\u5426\u76f8\u4ea4\u7684\u95ee\u9898\n//\u90a3\u4e48\u6211\u4eec\u5bf9\u5176\u4e2d\u4e00\u4e2a\u4eba\u7684\u8def\u67d3\u8272\uff0c\u53e6\u4e00\u4e2a\u4eba\u53bb\u7ebf\u6bb5\u6811\u7acb\u627e\u5b83\u7684\u8def\u5f84\u4e0a\u662f\u5426\u6709\u88ab\u67d3\u8272\u7684\u70b9\u5c31\u597d\u4e86\n//\u7ebf\u6bb5\u6811\u5728\u4fee\u6539\u7684\u65f6\u5019\u5bf9\u6cbf\u9014\u7684\u8282\u70b9\u67d3\u8272\uff0cflag=1\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u7684\u533a\u95f4\u5185\u6709\u88ab\u67d3\u8272\u7684\u70b9\uff0ctag=1\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u88ab\u5b8c\u5168\u67d3\u8272 \n//\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5982\u679c\u9012\u5f52\u8fc7\u7a0b\u4e2d\u5230\u4e86\u4e00\u4e2atag==col\u7684\u70b9\uff0c\u8bf4\u660e\u80af\u5b9a\u76f8\u4ea4\u4e86\uff0creturn true\n//\u5426\u5219\u7ee7\u7eed\u9012\u5f52\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2atag==col\u7684\u70b9\u6216\u5408\u6cd5\u533a\u95f4\u7684\u70b9 \n//\u5982\u679c\u5f53\u524d\u8282\u70b9flag=1\uff0c\u4e0d\u80fd\u50cftag\u90a3\u6837\u76f4\u63a5return true\uff0c\u56e0\u4e3a\u53ef\u80fd\u88ab\u67d3\u8272\u7684\u90a3\u4e9b\u70b9\u4e0d\u5728\u67e5\u8be2\u533a\u95f4\u5185 \n \n//\u65f6\u95f4\u590d\u6742\u5ea6O(m*log^2n) \u6bd4\u500d\u589e\u591a\u4e00\u4e2alog  \n \n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\ninline int read()\n{\n\tchar c=getchar();int num=0;\n\tfor(;!isdigit(c);c=getchar());\n\tfor(;isdigit(c);c=getchar())\n\t\tnum=num*10+c-'0';\n\treturn num;\n}\n\nconst int N=1e5+5;\n\nint n,m,col;\n\nint head[N],num_edge;\nstruct Node\n{\n    int fa,son;\n    int size,dep,top;\n    int s,t;\n}node[N];\n\nstruct Edge\n{\n    int v,nxt;\n}edge[N<<1];\n\n#define lson tree[root].ls\n#define rson tree[root].rs\nstruct TREE\n{\n    int ls,rs;\n\tint flag,tag;\n}tree[N<<1];\nint now_node,Root;\n\ninline void add_edge(int u,int v)\n{\n    edge[++num_edge].v=v;\n    edge[num_edge].nxt=head[u];\n    head[u]=num_edge;\n}\n\nvoid dfs1(int u)\n{\n    node[u].size=1;\n    node[u].son=0;\n    for(int i=head[u],v;i;i=edge[i].nxt)\n    {\n        v=edge[i].v;\n        if(v==node[u].fa)\n            continue;\n        node[v].fa=u;\n        node[v].dep=node[u].dep+1;\n        dfs1(v);\n        node[u].size+=node[v].size;\n        if(node[v].size>node[node[u].son].size)\n            node[u].son=v;\n    }\n}\n\nint bound;\nvoid dfs2(int u,int top)\n{\n    node[u].top=top;\n    node[u].s=++bound;\n    if(node[u].son)\n    {\n        dfs2(node[u].son,top);\n        for(int i=head[u],v;i;i=edge[i].nxt)\n        {\n            v=edge[i].v;\n            if(v==node[u].fa||v==node[u].son)\n                continue;\n            dfs2(v,v);\n        }\n    }\n    node[u].t=bound;\n}\n\nvoid build(int &root,int l,int r)\n{\n    root=++now_node;\n    tree[root].flag=0;\n    if(l==r)\n    \treturn;\n    int mid=l+r>>1;\n    build(lson,l,mid);\n    build(rson,mid+1,r);\n}\n\nvoid modify(int root,int l,int r,int L,int R)\n{\n\ttree[root].flag=col;\t//\u8fd9\u4e2a\u533a\u95f4\u5185\u6709\u88ab\u67d3\u8272\u7684\u70b9 \n\tif(l==L&&r==R)\n\t{\n\t\ttree[root].tag=col;\t\t//\u6253\u4e0atag\u6807\u8bb0\uff1a\u8fd9\u4e2a\u533a\u95f4\u88ab\u5b8c\u5168\u67d3\u8272 \n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(R<=mid)\n\t\tmodify(lson,l,mid,L,R);\n\telse if(L>mid)\n\t\tmodify(rson,mid+1,r,L,R);\n\telse\n\t\tmodify(lson,l,mid,L,mid),modify(rson,mid+1,r,mid+1,R);\n\treturn;\n}\n\nbool query(int root,int l,int r,int L,int R)\n{\n\tif(tree[root].flag!=col)\t//\u533a\u95f4\u5185\u6ca1\u6709\u88ab\u67d3\u8272\u7684\u70b9 \n\t\treturn false;\n\tif(l==L&&r==R)\t\t//\u627e\u5230\u4e00\u4e2a\u67e5\u8be2\u533a\u95f4 \n\t\treturn true;\n\tif(tree[root].tag==col)\t\t//\u533a\u95f4\u88ab\u5b8c\u5168\u67d3\u8272\u4e86 \n\t\treturn true;\n\tint mid=l+r>>1;\n\tif(R<=mid)\n\t\treturn query(lson,l,mid,L,R);\n\telse if(L>mid)\n\t\treturn query(rson,mid+1,r,L,R);\n\telse\n\t{\n\t\tbool f1=query(lson,l,mid,L,mid);\n\t\tif(f1)\n\t\t\treturn true;\n\t\tbool f2=query(rson,mid+1,r,mid+1,R);\n\t\treturn f2;\n\t}\n}\n\ninline void Modify(int x,int y)\n{\n    int fx=node[x].top,fy=node[y].top;\n    while(fx!=fy)\n    {\n        if(node[fx].dep>node[fy].dep)\n        {\n            modify(Root,1,n,node[fx].s,node[x].s);\n            x=node[fx].fa;\n            fx=node[x].top;\n        }\n        else\n        {\n            modify(Root,1,n,node[fy].s,node[y].s);\n            y=node[fy].fa;\n            fy=node[y].top;\n        }\n    }\n    if(node[x].dep>node[y].dep)\n        modify(Root,1,n,node[y].s,node[x].s);\n    else\n        modify(Root,1,n,node[x].s,node[y].s);\n    return;\n}\n\ninline bool Query(int x,int y)\n{\n    int fx=node[x].top,fy=node[y].top;\n\tbool ans=0;\n    while(fx!=fy)\n    {\n        if(node[fx].dep>node[fy].dep)\n        {\n            ans|=query(Root,1,n,node[fx].s,node[x].s);\n            x=node[fx].fa;\n            fx=node[x].top;\n        }\n        else\n        {\n            ans|=query(Root,1,n,node[fy].s,node[y].s);\n            y=node[fy].fa;\n            fy=node[y].top;\n        }\n        if(ans==1)\n        \treturn true;\n    }\n    if(node[x].dep>node[y].dep)\n        ans|=query(Root,1,n,node[y].s,node[x].s);\n    else\n        ans|=query(Root,1,n,node[x].s,node[y].s);\n    return ans;\n}\n\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1,a,b;i<n;++i)\n\t{\n\t\ta=read(),b=read();\n\t\tadd_edge(a,b);\n\t\tadd_edge(b,a);\n\t}\t\n\tnode[1].dep=0;\n\tdfs1(1);\n\tdfs2(1,1);\n\tbuild(Root,1,n);\n\tfor(int i=1,a,b,c,d;i<=m;++i)\n\t{\n\t\t++col;\n\t\ta=read(),b=read(),c=read(),d=read();\n\t\tModify(a,b);\n\t\tif(Query(c,d))\n\t\t\tputs(\"Y\");\n\t\telse\n\t\t\tputs(\"N\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1537511933,
        "uid": 39886,
        "name": "Drifterming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u5f88\u849f\u7684\u6211\u7528\u7684\u6811\u5256\u3002\u3002\u3002\n\n\u5148\u4fee\u6539\u4ed3\u9f20\u8d70\u8fc7\u7684\u8def\u5f84\n\n\u505a\u4e2a\u6807\u8bb0\n\n\u5728\u67e5\u8be2\u57fa\u53cb\u8d70\u8fc7\u7684\u8def\u5f84\u4e0a\u662f\u5426\u6709\u6807\u8bb0\n\n\u5f00\u59cb\u6211\u7528bool\u6807\u8bb0\u8def\u5f84\n\n\u6bcf\u6b21\u8be2\u95ee\u5c31memset\u6e05\u7a7a\u3002\u3002\u3002\n\n\u7136\u540e\u8d85\u65f6\u4e86~~\u7adf\u7136\u8fd8\u670940\u5206~~\n\n\u4e8e\u662f\u7528int\u6807\u8bb0\n\n\u6bcf\u6b21\u8be2\u95ee++\n\n\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\n\n\u6700\u540e\u770b\u662f\u5426\u76f8\u7b49\u3002\u3002\u3002\n\n\u5c31\u884c\u4e86\n\n\u4f3c\u4e4e\u6bd4\u6211\u5199\uff08chao\uff09\u7684lca\u5feb\u4e9b\n\n```cpp\n# include<iostream>\n# include<cstdio>\n# include<cstring>\n# include<queue>\n#define mid (l+r>>1)\n#define tl (k<<1)\n#define tr (k<<1|1)\n#define ini inline int\n#define inv inline void\nusing namespace std;\nconst int MAX=1e5+1;\nstruct p{\n    int lazy,use;\n}s[MAX<<2];\nstruct q{\n    int x,y;\n}c[MAX<<1];\nint n,m,num,cnt,tot;\nint h[MAX],d[MAX],son[MAX],top[MAX],fa[MAX],id[MAX],siz[MAX];\nini read()\n{\n    int x=0;\n    char ch=getchar();\n    while(!isdigit(ch)) ch=getchar();\n    while(isdigit(ch))\n    {\n        x=x*10+ch-48;\n        ch=getchar();\n    }\n    return x;\n}\ninv add(int x,int y)\n{\n    c[++num].x=h[x];\n    c[num].y=y;\n    h[x]=num;\n}\nvoid dfs(int x,int f)\n{\n    fa[x]=f;\n    d[x]=d[f]+1;\n    siz[x]=1;\n    for(int i=h[x];i;i=c[i].x)\n      {\n          int y=c[i].y;\n          if(y==f) continue;\n          dfs(y,x);\n          siz[x]+=siz[y];\n          if(siz[son[x]]<siz[y])\n          son[x]=y;\n      }\n}\nvoid dfs1(int x,int tp)\n{\n    top[x]=tp;\n    id[x]=++cnt;\n    if(son[x]) dfs1(son[x],tp);\n    for(int i=h[x];i;i=c[i].x)\n      {\n          int y=c[i].y;\n          if(y==fa[x]||y==son[x])\n          continue;\n          dfs1(y,y);\n      }\n}\ninv pus(int k)\n{\n    s[k].use=max(s[tl].use,s[tr].use);\n}\ninv down(int k)\n{\n    int f=s[k].lazy;\n    s[tl].lazy=s[tr].lazy=f;\n    s[tl].use=s[tr].use=f;\n    s[k].lazy=0;\n}\nvoid change(int l,int r,int k,int L,int R,int dis)\n{\n    if(l>R||r<L) return;\n    if(l>=L&&r<=R)\n    {\n        s[k].lazy=s[k].use=dis;\n        return;\n    }\n    if(s[k].lazy) down(k);\n    change(l,mid,tl,L,R,dis);\n    change(mid+1,r,tr,L,R,dis);\n    pus(k);\n}\ninv CHANGE(int x,int y,int dis)\n{\n    while(top[x]!=top[y])\n    {\n        if(d[top[x]]<d[top[y]]) swap(x,y);\n        change(1,n,1,id[top[x]],id[x],dis);\n        x=fa[top[x]];\n    }\n    if(d[x]>d[y]) swap(x,y);\n    change(1,n,1,id[x],id[y],dis);\n}\nint ask(int l,int r,int k,int L,int R)\n{\n    if(l>R||r<L) return 0;\n    if(l>=L&&r<=R)\n    return s[k].use;\n    if(s[k].lazy) down(k);\n    return max(ask(l,mid,tl,L,R),ask(mid+1,r,tr,L,R));\n}\nchar ASK(int x,int y)\n{\n    while(top[x]!=top[y])\n    {\n        if(d[top[x]]<d[top[y]]) swap(x,y);\n        if(ask(1,n,1,id[top[x]],id[x])==tot) return 'Y';\n        x=fa[top[x]];\n    }\n    if(d[x]>d[y]) swap(x,y);\n    if(ask(1,n,1,id[x],id[y])==tot) return 'Y';\n    return 'N';\n}\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<n;i++)\n      {\n          int x=read(),y=read();\n          add(x,y),add(y,x);\n      }\n    dfs(1,0);\n    dfs1(1,1);\n    for(int i=1;i<=m;i++)\n      {\n          int a1=read(),b1=read(),a2=read(),b2=read();\n        CHANGE(a1,b1,++tot);\n        printf(\"%c\\n\",ASK(a2,b2));\n      }\n    return 0;\n}\n```",
        "postTime": 1517289450,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#define rint register int\n#define MAXN 100005\n#define LOGN 17\nusing namespace std;\nint n,q;\nint FA[MAXN+1],Log[MAXN+1],dep[MAXN+1];\nint go[MAXN+1][LOGN+1];\nint lowbit(int x)\n{\n    return x & (-x);\n}\n```\nnamespace QXX\n```cpp\n{\n    int tot=1,head[MAXN+1];\n    struct Edge{\n        int next;\n        int node;\n    }h[MAXN << 1];\n    inline void add(int u,int v)\n    {\n        h[++tot].next = head[u];\n        head[u] = tot;\n        h[tot].node = v;\n    }    \n    inline void dfs(int x,int fa)//fa\u662fx\u7684\u7238\u7238 \n    {\n        for(int i = head[x]; i ;i = h[i].next)\n        {\n            int d = h[i].node;\n            //\u7531\u4e8e\u5b58\u7684\u65e0\u5411\u8fb9\uff0c\u6240\u4ee5\u8fde\u51fa\u53bb\u7684\u70b9\uff0c\u4e0d\u662f\u4ed6\u7684\u7236\u4eb2\u5c31\u662f\u4ed6\u7684\u513f\u5b50 \n            if(d == fa)    continue;//\u662f\u7238\u7238 \n            FA[d] = x;\n            dep[d] = dep[x] + 1;//\u521d\u59cb\u5316FA\u548c\u6df1\u5ea6 \n            dfs(d,x);\n        }\n    }\n};\nusing namespace QXX;\n//\u8bb0 Go[i][j] \u4e3a i \u5f80\u4e0a\u8df3 2^j \u6b65\u6240\u5230\u8fbe\u7684\u8282\u70b9\uff08\u5982\u4e0d\u5b58\u5728\u5219\u8bb0\u4e3a 0\uff09\ninline void Get_ST()\n{\n    for(int i=2;i<=n;i++)\n        Log[i] = Log[i >> 1] + 1;\n    //\u8981\u8bb0\u5f97\u521d\u59cb\u5316\n    for(int i=1;i<=n;i++)\n        go[i][0] = FA[i]; \n    for(int j = 1;(1 << j) < n;j++)//<=\u3000?? \n        for(int i = 1;i <= n;i++)\n            go[i][j] = go[go[i][j-1]][j-1];\n//\u8d85\u8fc7\u754c\u9650\u4e3a0\u6ca1\u6709\u5f71\u54cd\uff1f\uff1f\uff1f    \n}\ninline int LCA(int u,int v)\n{\n    if(dep[u] < dep[v])\n        swap(u,v);//\u8981\u4fdd\u8bc1u\u7684\u6df1\u5ea6\u5927\u4e8ev\u2014\u2014\u5373\u5728\u5b83\u7684\u4e0b\u9762\n    //\u5148\u5904\u7406\u540c\u65f6\u8df3\u5230\u7b49\u6df1\u7ebf \n    /*for(int i = dep[u] - dep[v]; i ;){\n        int temp = lowbit(i);//i & (-i)\n            u = go[u][Log[temp]];\n        i -= temp;\n        //\u7531\u4e8e\u8fd9\u91cc\u540e\u9762[k2]\u4ee3\u8868\u4e4b\u540e\u4f1a\u5c06\u8df3\u4e0a\u4ed6\u76842 ^ k2 \u6b21\u5e03\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5148\u53d6\u4ed6\u7684log\u624d\u80fd\u4fdd\u8bc1\u8df3\u7684\u662f2^k\u5e03 \n    }*/\n    for(int i = dep[u] - dep[v]; i ;i -= (i & -i))\n        u = go[u][Log[i & -i]];\n    if(u == v)//\u7279\u5224\uff0cLCA\u5c31\u662f\u5176\u4e2d\u7684\u4e00\u4e2a\u70b9\n        return u;\n    //\u6ce8\u610f\u8981\u4ece\u5927\u5230\u5c0f\u6765\u679a\u4e3e\u6b65\u6570\n    for(int i = Log[n]; ~i ;i --)\n        if(go[u][i] != go[v][i])//\u8df3\u5230\u7684\u70b9 \n        {\n            u = go[u][i];\n            v = go[v][i];\n        }\n    return go[u][0];\n}\n```\n/\\*\u5b9e\u73b0\u4ece\u4e00\u4e2a\u70b9\u5f80\u4e0a\u8df3 t \u6b65\u7684\u5feb\u901f\u64cd\u4f5c\uff1a\n1\u3001\u6bcf\u6b21\u53d6 t \u7684 lowbit\uff0c\u5373\u53d6 2^k | t \u7684\u6700\u5927\u7684 k\uff0c\u6b64\u65f6 t & -t = 2^k\u3002\n\n2\u3001\u7136\u540e\u628a u \u5f80\u4e0a\u8df3 2^k \u6b65\uff0c\u5373 u = Go[u][Log[t & -t]]\uff0c\u5e76\u4ee4 t -= (t & -t)\u3002\n\n3\u3001\u76f4\u5230 t = 0 \u65f6\u8df3\u6b65\u5b8c\u6210\u3002\n\n\\*/\n```cpp\nint main()\n{\n    scanf(\"%d%d\",&n,&q);\n    for(int i = 1;i <= n -1 ; i++)\n    {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        add(u,v);\n        add(v,u);\n    }\n    dfs(1,0);//\u5f3a\u5236\u8ba4\u4e3a1\u662f\u8d77\u70b9 \n    Get_ST();\n    for(int i=1;i<=q;i++)\n    {\n        int a,b,c,d;\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        int LCA_1 = LCA(a,b);\n        int LCA_2 = LCA(c,d);\n        if(dep[LCA_1] < dep[LCA_2]){\n            swap(a,c);\n                swap(b,d);\n                    swap(LCA_1,LCA_2);//\u7279\u522b\u6ce8\u610fLCA\u4e5f\u4e00\u5b9a\u8981\u8fdb\u884c\u4ea4\u6362\uff01 \n        }    \n        if(LCA(LCA_1,c) == LCA_1 || LCA(LCA_1,d) == LCA_1)//\u5f53\u4e14\u4ec5\u5f53x\u5728(c,d)\u94fe\u4e0a\n            printf(\"Y\\n\");\n        else\n            printf(\"N\\n\"); \n    }\n        return 0;\n}\n```",
        "postTime": 1507009989,
        "uid": 24027,
        "name": "IG_TheShy_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u9996\u5148\u5b89\u5229\u65f6\u95f4\uff1a\u4e2a\u4eba\u535a\u5ba2\uff1a chenguokai.16mb.com \u5907\u7528\u7ad9\uff1a chenguokai.16mb.com\n\n###**\u7b97\u6cd5\uff1a\u500d\u589e\u6c42LCA**\n\n\u9996\u5148\u8fd9\u9898\u76ee\u53ef\u4ee5\u770b\u51fa\u8ddfLCA\u5fc5\u7136\u6709\u5173\u7cfb\uff0c\u4f46\u662f\u5f53\u65f6\u505a\u6708\u8d5b\u65f6\u5e76\u4e0d\u77e5\u9053\u5230\u5e95\u600e\u4e48\u641e\uff08\u6211\u8bf4\u4eca\u5929\u505a\u8fd9\u9053\u9898\u76ee\u65f6\u600e\u4e48\u8fd9\u4e48\u719f\u6089\uff0c\u4e00\u67e5\u8bb0\u5f55\u5f53\u65f6\u6708\u8d5b\u65f6\u505a\u8fc7\u3002\u3002\u3002\u7206\u96f6\u4e86\u3002\u3002\u3002\uff09\u7136\u540e\u5148\u4e0d\u7ba1\u5230\u5e95\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u5148\u628aLCA\u641e\u5b9a\u518d\u8bf4\uff08\u4f17\uff1a\u600e\u4e48\u53ef\u4ee5\u8fd9\u6837\uff01\uff09\u7136\u540e\u5c31\u53ef\u4ee5\u653e\u500d\u589e\u51fa\u6765\u4e86\uff08\u8bdd\u8bf4\u5176\u5b9e\u6211\u4e0d\u613f\u610f\u5199\u500d\u589e\u7684\uff0c\u4f46\u662f\u6bd5\u7adftarjan\u5728\u8fd9\u9053\u9898\u5e76\u4e0d\u600e\u4e48\u597d\u4f7f\u554a\uff09\uff0c\u9996\u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u5f80\u4e0a\u8df32^k\u9ad8\u5ea6\u7684\u8282\u70b9\u662f\u8c01\uff0c\u7136\u540e\u5373\u53ef\u6bcf\u6b21\u4ee5logN\u590d\u6742\u5ea6\u6c42\u51faLCA\u4e86\uff0c\u7136\u540e\u5c31\u8981\u60f3LCA\u5230\u5e95\u548c\u8fd9\u9053\u9898\u6709\u4ec0\u4e48\u5173\u7cfb\u4e86\u3002\u7ecf\u8fc7\u9898\u89e3\u5927\u795e\u7684\u6307\u5f15\uff08\u4f17\uff1a\u7adf\u7136\u770b\u9898\u89e3\uff01\uff09\uff0c\u6211\u53d1\u73b0\u53ea\u8981\u67d0\u4e2aLCA\u7684\u6df1\u5ea6\u5927\u4e8e\u53e6\u4e24\u4e2a\u70b9\u7684\u6df1\u5ea6\u6700\u5927\u503c\uff0c\u5219\u5b83\u600e\u6837\u4e5f\u65e0\u6cd5\u4e0e\u53e6\u4e24\u4e2a\u70b9\u95f4\u7684\u9053\u8def\u6709\u516c\u5171\u8def\u5f84\uff0c\u800c\u5982\u679c\u5176\u4e2d\u4e00\u4e2aLCA\u7684\u6df1\u5ea6\u8f83\u6df1\uff0c\u5c31\u770b\u53e6\u5916\u7684\u4e24\u70b9\u4e0e\u5b83\u7684LCA\u662f\u5426\u662f\u5b83\u672c\u8eab\uff08\u5982\u679c\u4e0d\u662f\u5219\u8bf4\u660e\u8fd9\u4e24\u70b9\u4e0e\u5b83\u65e0\u516c\u5171\u8def\u5f84\uff0c\u81ea\u7136\u66f4\u4e0d\u4f1a\u4e0e\u521d\u59cb\u4f4d\u7f6e\u6709\u516c\u5171\u8def\u5f84\uff09\u3002\u6b64\u5916\u6b64\u9898\u76ee\u6570\u636e\u5f88\u5f3a\uff0c\u500d\u589e\u65f6\u5982\u679c\u5728\u4e24\u70b9\u9ad8\u5ea6\u4e0d\u540c\u65f6\u76f4\u63a5\u4e00\u70b9\u70b9\u5730\u5411\u4e0a\u8df3\u4e5f\u4f1a\u8d85\u65f6\u3002\u3002\u3002\u56e0\u6b64\u5fc5\u987b\u4e5f\u500d\u589e\u5f80\u4e0a\u8df3\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\nusing namespace std;\nint lca1,lca2,n,q,a,b,c,d,aa,bb,deep[100010],fa[100010],rmq[100010][18];\nvector<int>v[100010];\nbool vis[100010];\nstruct rec{\n  int a,b,c,d;\n}Q[100010];\nvoid dfs(int src,int dep){\n  vis[src]=true;\n  deep[src]=dep;\n  for (int i=0;i<v[src].size();++i)\n    if (!vis[v[src][i]]){\n      fa[v[src][i]]=src;\n      dfs(v[src][i],dep+1);\n    }\n}\nint LCA(const int a,const int b){\n  int xx=a,yy=b;\n  if (deep[xx]>deep[yy]){\n    for (int i=17;i>=0;--i){\n      if (rmq[xx][i]==0) continue;\n      if (deep[rmq[xx][i]]>=deep[yy]) xx=rmq[xx][i];\n      if (deep[xx]==deep[yy]) break;\n    }\n  }\n  if (xx==yy) return yy;\n  if (deep[yy]>deep[xx]){\n    for (int i=17;i>=0;--i){\n      if (rmq[yy][i]==0) continue;\n      if (deep[rmq[yy][i]]>=deep[xx]) yy=rmq[yy][i];\n      if (deep[xx]==deep[yy]) break;\n    }\n  }\n  if (xx==yy) return xx;\n  for (int i=17;i>=0;--i){\n    if (rmq[xx][i]==0) continue;\n    if (rmq[xx][i]!=rmq[yy][i]){\n      xx=rmq[xx][i];\n      yy=rmq[yy][i];\n    }\n  }\n  return fa[xx];\n}\ninline int getint(){\n  int i=0;\n  char ch;\n  for (ch=getchar();ch<'0'||ch>'9';ch=getchar());\n  for (;ch>='0'&&ch<='9';ch=getchar()) i=i*10+(ch-48);\n  return i;\n}\nint main(){\n  //scanf(\"%d%d\",&n,&q);\n  n=getint(),q=getint();\n  for (int i=1;i<n;++i){\n    //scanf(\"%d%d\",&aa,&bb);\n    aa=getint(),bb=getint();\n    v[aa].push_back(bb);\n    v[bb].push_back(aa);\n  }\n  for (int i=1;i<=q;++i){\n    Q[i].a=getint(),Q[i].b=getint(),Q[i].c=getint(),Q[i].d=getint();\n    //scanf(\"%d%d%d%d\",&Q[i].a,&Q[i].b,&Q[i].c,&Q[i].d);\n  }\n  memset(vis,0,sizeof(vis));\n  dfs(1,1);\n  for (int i=1;i<=n;++i) rmq[i][0]=fa[i];\n  for (int i=1;i<=17;++i)\n    for (int j=1;j<=n;++j){\n      if (rmq[j][i-1]==0) continue;\n      rmq[j][i]=rmq[rmq[j][i-1]][i-1];\n    }\n  for (int i=1;i<=q;++i){\n    lca1=LCA(Q[i].a,Q[i].b);\n    lca2=LCA(Q[i].c,Q[i].d);\n    if (deep[lca2]>deep[Q[i].a]&&deep[lca2]>deep[Q[i].b]){\n      printf(\"N\\n\");\n    }else if (deep[lca1]>deep[Q[i].c]&&deep[lca2]>deep[Q[i].d]){\n      printf(\"N\\n\");\n    }else{\n      if (deep[lca1]>deep[lca2]){\n        if (LCA(Q[i].c,lca1)==lca1||LCA(Q[i].d,lca1)==lca1){\n          printf(\"Y\\n\");\n        }else{\n          printf(\"N\\n\");\n        }\n      }else{\n        if (LCA(Q[i].a,lca2)==lca2||LCA(Q[i].b,lca2)==lca2){\n          printf(\"Y\\n\");\n        }else{\n          printf(\"N\\n\");\n        }\n      }\n    }\n  }\n  return 0;\n}\n```",
        "postTime": 1478863294,
        "uid": 9508,
        "name": "\u9648\u56fd\u51ef",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u6c42LCA\u88f8\u9898\u3002\u3002\u3002 \u53ef\u4ee5\u7528\u500d\u589e\u6216\u8005tarjan\u6c42 \uff08\u5efa\u8bae\u7528\u500d\u589e\uff0c\u597d\u50cf\u6709\u4eba\u7528tarjanTLE\u4e86\u3002\u3002\u3002\uff09\n\n\u53e6\u5916\u6700\u597d\u5199\u8f93\u5165\u8f93\u51fa\u4f18\u5316\u3002\u3002\u4e0d\u7136\u53ef\u80fd\u4f1a\u6302\u6389\u51e0\u4e2a\u70b9\u3002\u3002\n\n\u601d\u8def\uff1a\u8bbe\u4eceA\u5230B\uff0c\u7ecf\u8fc7\u7684\u6df1\u5ea6\u6700\u5c0f\u7684\u70b9\u4e3aX \u540c\u7406\uff0cC,D\u7684\u4e3aY\n\n\u9898\u76ee\u662f\u4e00\u4e2a\u70b9\u4eceA\u51fa\u53d1\u5230B  \u4e00\u4e2a\u4eceC\u51fa\u53d1\u5230D\n\n\u90a3\u4e48\u4eceA\u5230B\u53ef\u4ee5\u5206\u89e3\u6210 \u5148\u4eceA\u5230X \u518d\u4eceX\u5230B\u3002\u3002\u3002 C\u540c\u7406\n\n\u5047\u8bbe\u80fd\u76f8\u9047 \u90a3\u4e48\n\n\u8981\u4e48\u5728A\u5230X\u7684\u8fc7\u7a0bA,B\u76f8\u9047 \u8981\u4e48\u5728X\u5230B\u7684\u8fc7\u7a0bA,B\u76f8\u9047\n\n\n\u5bf9\u4e8e\u5728A\u5230X\u7684\u8fc7\u7a0b\u76f8\u9047\u7684\u60c5\u51b5 \u53c8\u53ef\u4ee5\u5206\u89e3\u4e3a\uff1a\n\n\u60c5\u51b51\uff1a\n\n\u5728A\u5230X\u7684\u8fc7\u7a0b\u548c C\u5230Y\u7684\u8fc7\u7a0b \u4e2dA,B\u76f8\u9047 \u6b64\u65f6\u76f8\u9047\u70b9\u7684\u6df1\u5ea6\u5fc5\u7136\u5927\u4e8e\u7b49\u4e8eMIN\uff08X\u6df1\u5ea6\uff0cY\u6df1\u5ea6\uff09\n\n\u60c5\u51b52\uff1a\n\n\u5728A\u5230X\u7684\u8fc7\u7a0b\u548c Y\u5230D\u7684\u8fc7\u7a0b \u4e2dA,B\u76f8\u9047 \u6b64\u65f6\u76f8\u9047\u70b9\u7684\u6df1\u5ea6\u5fc5\u7136\u5927\u4e8e\u7b49\u4e8eMIN \uff08X\u6df1\u5ea6\uff0cY\u6df1\u5ea6\uff09\n\n\u53e6\u4e00\u79cd\u60c5\u51b5\u540c\u7406\u3002\u3002\u3002\n\n\u6240\u4ee5\u663e\u7136\u53ea\u8981\u6c42\u51faMIN=min(lca(a,b),lca(c,d));(lca\u8fd4\u56de\u7684\u662f\u4e24\u4e2a\u70b9\u516c\u5171\u7956\u5148\u7684\u6700\u5927\u6df1\u5ea6)\n\n\u5047\u5982lca(a,c) lca(a,d) lca(b,c) lca(b,d) \u4e2d\u6709\u4efb\u610f\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8eMIN \u7684\u8bdd \u90a3\u4e48\u53ef\u4ee5\u76f8\u9047 \u5426\u5219\u4e0d\u80fd\n\n\u500d\u589e\u7684\u7b97\u6cd5\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cctype>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n#include <cmath>\nusing namespace std;\n#define repi(i,a,b) for(int i=a;i<=b;i++)\n#define repd(i,a,b) for(int i=a;i>=b;i--)\n#define debug(x) cout<<#x<<'='<<x<<' '\n#define endl cout<<'\\n'\nconst int MAXN=100001+100;\nint ZS,n,q;\nstruct edge\n{\n    int s,t,next;\n    edge(int s=0,int t=0,int next=0):s(s),t(t),next(next) {}\n};\n\n    int fa[MAXN][30];\n    vector<edge> edges;\n    int head[MAXN],depth[MAXN],root=1;\n    void add(int s,int t)\n    {\n        edges.push_back(edge(s,t,head[s]));\n        head[s]=edges.size()-1;\n        edges.push_back(edge(t,s,head[t]));\n        head[t]=edges.size()-1;\n    }\n    void build(int pre,int u,int dp)\n    {\n//        repi(i,1,n) cout<<depth[i]<<' '; endl;\n        depth[u]=dp;\n        repi(i,1,ZS) fa[u][i]=fa[fa[u][i-1]][i-1];\n        for(int i=head[u];i!=-1;i=edges[i].next)\n        {\n            edge& e=edges[i];\n            if(e.t!=pre)\n            {\n                fa[e.t][0]=u;\n                build(u,e.t,dp+1);\n            }\n        }\n    }\n    int lca(int a,int b)\n    {\n        if(depth[a]>depth[b]) swap(a,b);\n        repd(i,ZS,0) if(depth[a]<=depth[fa[b][i]]) b=fa[b][i];\n        if(a==b) return depth[a];\n        repd(i,ZS,0) if(fa[a][i]!=fa[b][i]) {a=fa[a][i]; b=fa[b][i];}\n        return depth[fa[a][0]];\n    }\n\nint _read()\n{\n    int x=0; char tem;\n    while(!isdigit(tem=getchar()));\n    do{x=(x<<3)+(x<<1); x+=tem-'0';}\n    while(isdigit(tem=getchar()));\n    return x;\n}\n\nint main()\n{\n    memset(head,-1,sizeof(head));\n//    cout<<\"run\";\n//    freopen(\"data.in\",\"r\",stdin);\n    n=_read(); q=_read();\n    ZS=log(n)/log(2)+1;\n    repi(i,1,n-1)\n    {\n        int s,t; s=_read(); t=_read();\n        add(s,t);\n    }\n    repi(i,1,n) fa[i][0]=i;\n    build(root,root,1);\n//    debug(lca(2,2)); debug(depth[2]);\n    repi(i,1,q)\n    {\n        int a,b,c,d;\n        a=_read(); b=_read(); c=_read(); d=_read();\n//        cout<<a<<' '<<b<<' '<<c<<' '<<d<<'\\n';\n        int MAX=max(lca(a,b),lca(c,d));\n//        debug(MAX); debug(lca(a,c)); endl;\n        int TEM1=max(lca(a,c),lca(a,d));\n        int TEM2=max(lca(b,c),lca(b,d));\n        int CMP=max(TEM1,TEM2);\n        if(CMP>=MAX) printf(\"Y\\n\");\n            else printf(\"N\\n\");\n    }\n    return 0;\n}\n\n```",
        "postTime": 1475512661,
        "uid": 11585,
        "name": "\u4f0a\u65af\u5361\u5c14\u7684\u98ce",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3398 \u3010\u4ed3\u9f20\u627esugar\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7ec6\u8282\u592a\u591a\u4e86\uff0c\u611f\u89c9\u975e\u5e38\u6bd2\u7624\uff0c\u82b1\u4e86\u6211\u597d\u957f\u65f6\u95f4\u624d\u8c03\u51fa\u6765\u7684\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002~~\u6211\u592a\u5f31\u4e86QwQ~~\n\n\u597d\uff0c\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u5f00\u59cb\u8bb2\u9898\u3002\n\n\u9996\u5148\uff0c\u4e00\u53e5\u8bdd\u9898\u610f\u3002\u8fd9\u9053\u9898\u8ba9\u6211\u4eec\u6c42\u6811\u4e0a\u4e24\u6761\u8def\u5f84\u662f\u5426\u76f8\u4ea4\u3002\n\n\u5927\u5bb6\u753b\u4e00\u753b\u6811\u4e0a\u7684\u67d0\u4e24\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u5c31\u4f1a\u53d1\u73b0\u5b83\u4eec\u53ef\u80fd\u957f\u8fd9\u6837\n\n![](https://cdn.luogu.com.cn/upload/pic/62506.png )\n\n\u6216\u8005\u8fd9\u6837\n\n![](https://cdn.luogu.com.cn/upload/pic/62506.png )\n\n\u603b\u4e4b\uff0c\u4e00\u6761\u8def\u5f84\u8981\u4e48\u4ece\u4e00\u4e2a\u70b9\u5148\u5411\u4e0a\uff0c\u518d\u5411\u4e0b\u3002\u8981\u4e48\u53ea\u6709\u8fd9\u4e24\u6b65\u4e2d\u7684\u4e00\u6b65\u3002\u800c\u8def\u5f84\u4e0a\u7684\u6700\u9ad8\u70b9\u6070\u6070\u5c31\u662f\u8fd9\u4e24\u4e2a\u70b9\u7684LCA\u3002\n\n\u7531\u6b64\uff0c\u8fd9\u9898\u7528LCA\u7b97\u6cd5\u5e94\u8be5\u662f\u6ca1\u6709\u95ee\u9898\u7684\u4e86\u3002\n\n\u4e8e\u662f\u5f00\u59cb\u6109\u5feb\u5730\u6253\u4ee3\u7801\uff0c\u7ec6\u8282\u5728\u6587\u7ae0\u7684\u672b\u5c3e\u8bf4\u3002\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int MAXN = 100010;\nint head[MAXN], lg2[MAXN], depth[MAXN], fa[MAXN][21];\nint n, q, cnt;\n\nstruct Edge\n{\n\tint to;\n\tint nxt;\n}e[MAXN << 1];\n\nvoid AddEdge (int from, int to)\n{\n\te[++ cnt].to = to;\n\te[cnt].nxt = head[from];\n\thead[from] = cnt;\n}\n\nvoid dfs (int now, int father)\n{\n\tdepth[now] = depth[father] + 1;\n\tfa[now][0] = father;\n\tfor (int i = head[now]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].to;\n\t\tif (v == father)\n\t\t\tcontinue;\n\t\tdfs (v, now);\n\t}\n}\n\nvoid init ()\n{\n\tfor (int i = 2; i <= n; ++ i)\n\t\tlg2[i] = lg2[i - 1] + ((1 << (lg2[i - 1] + 1)) == i);      \t\n\t\n\tdfs (1, 1);\n\tfor (int j = 1; j < 20; ++ j)\n\t\tfor (int i = 1; i <= n; ++ i)\n\t\t\tfa[i][j] = fa[fa[i][j - 1]][j - 1];\n}\n\nint lca (int x, int y)\n{\n\tif (depth[x] > depth[y])\n\t\tswap (x, y);\n\twhile (depth[x] < depth[y])\n\t\ty = fa[y][lg2[depth[y] - depth[x]]];\n\tif (x == y)\n\t\treturn x;\n\t\n\tfor (int i = lg2[depth[x]]; i >= 0; -- i)\n\t\tif (fa[x][i] != fa[y][i])\n\t\t{\n\t\t\tx = fa[x][i];\n\t\t\ty = fa[y][i];\n\t\t}\n\treturn fa[x][0];\n}\n\nint main()\n{\n\tscanf (\"%d%d\", &n, &q);\n\tfor (int i = 1; i < n; ++ i)\n\t{\n\t\tint u, v;\n\t\tscanf (\"%d%d\", &u, &v);\n\t\tAddEdge (u, v);\n\t\tAddEdge (v, u);\n\t}\n\tinit ();\n\tfor (int i = 1; i <= q; ++ i)\n\t{\n\t\tint u1, v1, u2, v2;\n\t\tscanf (\"%d%d%d%d\", &u1, &v1, &u2, &v2);\n\t\tint lca1 = lca (u1, v1), lca2 = lca (u2, v2);\n\t\tif (dis (u2, lca1) + dis (lca1, v2) == dis (u2, v2) || dis (u1, lca2) + dis (v1, lca2) == dis (u1, v1))\n\t\t{\n\t\t\tprintf (\"Y\\n\");\n\t\t}\n\t\telse\n\t\t\tprintf (\"N\\n\");\n\t}\n\treturn 0;\n}\n```\n\n\u8fd9\u9898\u7ec6\u8282\u4e00\u5927\u5806\uff0c\n\n1. \u5bf9\u4e8e\u5224\u65ad\u4e24\u6761\u8def\u5f84\u76f8\u4e0d\u76f8\u4ea4\u7684\u95ee\u9898\uff0c\u5982\u679c\u7528LCA\u76f4\u63a5\u5224\u65ad\u771f\u7684\u6781\u4e3a\u9ebb\u70e6\uff0c\u8fd8\u8981\u5404\u79cd\u8ba8\u8bba\u3002\u3002\u3002\u6211\u8ba8\u8bba\u4e86\u534a\u5929\uff0c\u4ece\u672a\u6539\u53d8\u8fc7\u6211\u7206\u96f6\u7684\u7ed3\u679c\uff08\u53ef\u80fd\u662f\u6211\u592a\u83dc\u4e86\uff09\u3002\u4e8e\u662f\u6211\u5c31\u53c2\u8003\u4e86\u9898\u89e3\u4e2d\u7684\u7528\u8ddd\u79bb\u5224\u65ad\u7684\u65b9\u6cd5\uff0c\u6548\u679c\u663e\u8457\u3002\n\n2. dis\u51fd\u6570\u8fd9\u4e00\u6bb5\u8981\u52a0\u7edd\u5bf9\u503c\uff0c\u5982\u679c\u4e0d\u52a0\u4f1a\u51c9\u51c9\n\n```cpp\nint dis (int p1, int p2)\n{\n\tint p = lca (p1, p2);\n\treturn abs (depth[p1] - depth[p]) + abs (depth[p2] - depth[p]);\n}\n```\n\n3. LCA\u51fd\u6570\u4e2d\u8fd9\u4e00\u53e5\u8bdd i \u8981 >= 0\u3002\n\n```cpp\n\tfor (int i = lg2[depth[x]]; i >= 0; -- i)\n```\n\n\u8fd9\u4e9b\u90fd\u662f\u6211\u66fe\u7ecf\u51c9\u8fc7\u7684\u70b9\uff0c\u5e0c\u671b\u5927\u5bb6\u4e0d\u8981\u72af\u8fd9\u6837\u7684\u9519\u8bef\u3002\n\n\u8fd9\u662f\u6211\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u5356\u4e2a\u840c\u6c42\u7ba1\u7406\u5458\u5927\u5927\u7ed9\u8fc7QwQ",
        "postTime": 1562489852,
        "uid": 59317,
        "name": "legend_life",
        "ccfLevel": 0,
        "title": "P3398 \u4ed3\u9f20\u627esugar \u9898\u89e3"
    }
]