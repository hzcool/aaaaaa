[
    {
        "content": "\u597d\u50cf\u8fd9\u9053\u9898\u5e76\u6ca1\u6709\u5176\u4ed6\u4e24\u7bc7\u9898\u89e3\u8bf4\u7684\u90a3\u4e48\u7b80\u5355\u5427\uff1f\uff1f\uff1f~~\u6216\u8005\u662f\u6211\u592a\u83dc\u4e86~~\n\n\u8003\u8651\u4ee5\u8bf7\u6c42\u4e3a\u70b9\u8fdb\u884c\u5efa\u56fe\uff0c\u5bf9\u6bcf\u4e2a\u8bf7\u6c42\u8fdb\u884c\u62c6\u70b9\uff0c\u62c6\u70b9\u540e\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8fde\u4ef7\u503c\u4e3a$c$\uff0c\u6d41\u91cf\u4e3a$1$\u7684\u8fb9\uff0c\u4ee3\u8868\u7740\u4e00\u4e2a\u8bf7\u6c42\u53ea\u80fd\u6267\u884c\u4e00\u6b21\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u65f6\u95f4\u9650\u5236\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5982\u679c$0$\u65f6\u523b\u53ef\u4ee5\u4ece$0$\u673a\u573a\u98de\u5230\u8be5\u8bf7\u6c42\u7684\u8d77\u70b9\u673a\u573a\uff0c\u90a3\u4e48\u6e90\u70b9\u5411\u8be5\u8bf7\u6c42\u8fde\u4ef7\u503c\u4e3a($-$\u98de\u884c\u8d39\u7528)\uff0c\u6d41\u91cf\u4e3a$INF$\u7684\u8fb9\uff0c\u540c\u7406\uff0c\u82e5\u4e00\u4e2a\u8bf7\u6c42\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u52a0\u4e0a\u5b83\u7684\u7ed3\u675f\u673a\u573a\u98de\u56de$0$\u7684\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8e\u603b\u7684\u65f6\u95f4\u9650\u5236\uff0c\u8be5\u8bf7\u6c42\u5411\u6c47\u70b9\u8fde\u8fb9\u3002\n\n\u4f46\u662f\u6bcf\u6b21\u6267\u884c\u5b8c\u4e00\u4e2a\u8bf7\u6c42\u5e76\u672a\u89c4\u5b9a\u4e00\u5b9a\u8981\u98de\u56de$0$\u673a\u573a\uff0c\u4e5f\u53ef\u4ee5\u98de\u53bb\u5176\u4ed6\u8bf7\u6c42\u7684\u8d77\u70b9\u673a\u573a\uff0c\u6240\u4ee5\u4e24\u4e24\u679a\u4e3e\u8bf7\u6c42\uff0c\u5982\u679c\u6ee1\u8db3\u65f6\u95f4\u6761\u4ef6\u4e5f\u8fdb\u884c\u8fde\u8fb9\u3002\n\n\u6700\u540e\u8003\u8651\u6709$k$\u67b6\u98de\u673a\uff0c\u6240\u4ee5\u518d\u5efa\u4e00\u4e2a\u6e90\u70b9\uff0c\u5411\u539f\u6765\u7684\u6e90\u70b9\u8fde\u8d39\u7528\u4e3a$0$\uff0c\u6d41\u91cf\u4e3a$k$\u7684\u8fb9\u5373\u53ef\u3002\n\n\u6700\u540e\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ts cout<<\"ok\"<<endl\n#define ll long long\n#define hh puts(\"\")\n#define time TTTT\nusing namespace std;\nint n,m,k,tim,t[205][205],w[205][205],head[100005];\nint vis[100005],dis[100005],cnt=1,cost,ans,time,st,ed;\nstruct node{\n    int a,b,s,t,c;\n}q[1005];\nstruct Edge{\n    int v,nx,s,val;\n}e[1000005];\ninline int read(){\n    int ret=0,ff=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') ff=-ff;ch=getchar();}\n    while(isdigit(ch)){ret=(ret<<3)+(ret<<1)+(ch^48);ch=getchar();}\n    return ret*ff;\n}\ninline void add(int x,int y,int val,int s){\n    e[++cnt].v=y;\n    e[cnt].val=val;\n    e[cnt].s=s;\n    e[cnt].nx=head[x];\n    head[x]=cnt;\n}\ninline bool spfa(){\n    for(int i=0;i<=ed;i++) dis[i]=-1e9,vis[i]=0;\n    queue<int> q;\n    dis[st]=0;\n    q.push(st);\n    while(!q.empty()){\n        int now=q.front();\n        q.pop();\n        vis[now]=0;\n        for(int i=head[now];i;i=e[i].nx){\n            int v=e[i].v;\n            if(dis[v]<dis[now]+e[i].val&&e[i].s){\n                dis[v]=dis[now]+e[i].val;\n                if(!vis[v]){\n                    vis[v]=1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    return dis[ed]!=-1e9;\n}\nint dfs(int now,int ma){\n    if(now==ed){\n        ans+=ma;\n        return ma;\n    }\n    vis[now]=time;\n    int used=0,t;\n    for(int i=head[now];i;i=e[i].nx){\n        int v=e[i].v;\n        if((vis[v]!=time||v==ed)&&e[i].s&&dis[v]==dis[now]+e[i].val){\n            if(t=dfs(v,min(ma-used,e[i].s))){\n                e[i].s-=t;\n                e[i^1].s+=t;\n                cost+=t*e[i].val;\n                used+=t;\n                if(used==ma) break;\n            }\n        }\n    }\n    return used;\n}\nsigned main(){\n    n=read(),m=read(),k=read(),tim=read();\n    for(int i=0;i<n;i++)\n        for(int j=0;j<n;j++)\n            t[i][j]=read();\n    for(int i=0;i<n;i++)\n        for(int j=0;j<n;j++)\n            w[i][j]=read();\n    st=m*2+5,ed=m*2+10;\n    for(int i=1;i<=m;i++){\n        q[i].a=read();\n        q[i].b=read();\n        q[i].s=read();\n        q[i].t=read();\n        q[i].c=read();\n    }\n    for(int i=1;i<=m;i++){\n        add(i*2-1,i*2,q[i].c,1);\n        add(i*2,i*2-1,-q[i].c,0);\n        if(q[i].t+t[q[i].b][0]<=tim){\n            add(i*2,ed,-w[q[i].b][0],1e9);\n            add(ed,i*2,w[q[i].b][0],0);\n        }\n        else continue;\n        if(t[0][q[i].a]<=q[i].s){\n            add(st+1,i*2-1,-w[0][q[i].a],1e9);\n            add(i*2-1,st+1,w[0][q[i].a],0);\n        }\n        for(int j=1;j<=m;j++){\n            if(q[i].t+t[q[i].b][q[j].a]<=q[j].s){\n                add(i*2,j*2-1,-w[q[i].b][q[j].a],1e9);\n                add(j*2-1,i*2,w[q[i].b][q[j].a],0);\n            }\n        }\n    }\n    add(st,st+1,0,k);\n    add(st+1,st,0,0);\n    while(spfa()){\n        do{\n            time++;\n            dfs(st,1e9);\n        }while(vis[ed]==time);\n    }\n    printf(\"%d\",cost);\n    return 0;\n}\n```\n",
        "postTime": 1559463422,
        "uid": 27858,
        "name": "ycyaw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4452 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u822a\u73ed\u5b89\u6392\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4452)\n\n\u5410\u69fd\uff1a\u4e3a\u4ec0\u4e48\u5199\u9898\u7684\u4eba\u8fd9\u4e48\u5c11\u5462\uff1f\n\n### 1.\u7b97\u6cd5\n- \u56fe\u8bba\n\n\u98de\u673a\u98de\u6765\u98de\u53bb\uff0c\u53c8\u6709\u8fb9\u6743\uff08\u65f6\u95f4&\u8d39\u7528\uff09\uff0c\u90a3\u5c31\u662f\u56fe\u8bba\u4e86 ~~\uff08\u96fe\uff09~~\n\n- \u7f51\u7edc\u6d41VS\u6700\u957f\u8def\n\n\u6bcf\u4e2a\u6536\u76ca\u4e4b\u95f4\u6709\u9650\u5236\uff0c\u8fd8\u6709\u53ea\u6536\u76ca1\u6b21\u7684\u9650\u5236\uff0c\u4ee5\u53ca\u65f6\u95f4\u7684\u9650\u5236\uff0c\u8fd8\u8981\u6536\u5165\u652f\u51fa\uff0c\u7ea6\u675f\u6761\u4ef6\u591a\uff0c\u7528\u7f51\u7edc\u6d41\u80af\u5b9a\u662f\u5f97\u5fc3\u5e94\u624b\n\n- \u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n\n\u770b\u5230\u6700\u5927\u6536\u76ca\u5c31\u662f\u8d39\u7528\u6d41\u6ca1\u8dd1\u4e86\u5427\n\n\u8865\u5145\uff1a\n\n\u5728\u8fd9\u91cc\u5176\u5b9e\u662f\u6c42\u6700\u5927\u8d39\u7528\uff0c\u4f46\u662fSPFA\u53ef\u4ee5\u5904\u7406\u8d1f\u8fb9\u6743\uff0c\u6240\u4ee5\u5c31\u628a\u82b1\u8d39\u53d8\u6210\u5176\u76f8\u53cd\u6570\uff0c\u7136\u540e\u8dd1\u6700\u77ed\u8def\uff0c\u82b1\u8d39\u518d\u53d6\u8d1f\uff1b\u6216\u8005\u76f4\u63a5\u628aSPFA\u6539\u6210\u6700\u957f\u8def\n### 2.\u5efa\u56fe\n**\u6bd2\u7624\u7f51\u7edc\u6d41\uff0c\u5efa\u6a21\u6700\u6bd2\u7624**\n\n- \u5efa\u6a21\u5bf9\u8c61\uff1a\u70b9\u6216\u8bf7\u6c42\n\n\u5982\u679c\u6309\u7167\u70b9\u6765\u5efa\u8fb9\uff0c\u9700\u8981\u6309\u65f6\u95f4\u5206\u5c42\uff0c\u7136\u540e\u4e00\u540c\u4e71\u641e\uff0c\u4f1a\u663e\u5f97\u6bd4\u8f83\u590d\u6742\n\n\u9009\u62e9\u8bf7\u6c42\u6765\u5efa\u8fb9\uff0c\u5219\u53ea\u9700\u8981\u5173\u6ce8\u8bf7\u6c42\u4e0e\u8bf7\u6c42\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u65f6\u95f4\u4e00\u7ef4\u53ef\u4ee5\u5904\u7406\u6389\uff0c\u663e\u5f97\u66f4\u7b80\u5355\u4e86\uff0c\u90a3\u5bf9\u8c61\u5c31\u662f\u5b83\u4e86\n\n- \u6e90\u70b9\n\n\u5148\u5224\u65ad\u4ece0\u53ef\u4e0d\u53ef\u4ee5\u76f4\u8fbe\u8bf7\u6c42\u7684\u8d77\u70b9\uff0c\u7136\u540e\u5efa\u8fb9\uff0c\u6d41\u91cf$inf$\uff0c\u8d39\u7528$f[0][a]$\n\n\u4f46\u662f\u6211\u4eec\u53c8\u5173\u6ce8\u5230$k$\u67b6\u98de\u673a\u8fd9\u4e2a\u6761\u4ef6\uff0c\u4e0d\u77e5\u9053$k$\u4f1a\u53bb\u90a3\u6761\u8def\uff0c\u6240\u4ee5\u5c31\u518d\u5efa\u4e00\u4e2a\u771f\u6b63\u7684\u6e90\u70b9\uff0c\u5411\u5148\u524d\u7684\u6e90\u70b9\uff08\u8868\u793a\u57fa\u5730\uff09\u5efa\u4e00\u6761\u6d41\u91cf$k$\uff0c\u8d39\u75280\u7684\u8fb9\n\n- \u6c47\u70b9\n\n\u5224\u65ad\u8bf7\u6c42\u7ed3\u675f\u540e\u80fd\u4e0d\u80fd\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u5230\u8fbe\u57fa\u5730\u70b90\uff0c\u7136\u540e\u5efa\u8fb9\uff0c\u6d41\u91cf$inf$\uff0c\u8d39\u7528$f[b][0]$\n\n- \u8bf7\u6c42\u4e4b\u95f4\u7684\u8f6c\u79fb\n\n\u6839\u636e\u8d2a\u5fc3\uff0c\u80fd\u591f\u4e0d\u56de\u57fa\u5730\uff0c\u5c31\u4e0d\u8981\u56de\u53bb\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8003\u8651\u8bf7\u6c42\u4e4b\u95f4\u7684\u8f6c\u79fb\n\n\u90a3\u4e48\u600e\u4e48\u8f6c\u79fb\u5462\uff1f\n\n\u5176\u5b9e\u53ea\u8981$m^2$\u679a\u4e3e\u6bcf\u4e2a\u8bf7\u6c42\u4e4b\u95f4\u80fd\u4e0d\u80fd\u6ee1\u8db3 \u524d\u4e00\u4e2a\u7ed3\u675f\u540e\u6709\u65f6\u95f4\u5230\u8fbe\u540e\u4e00\u4e2a\u7684\u5f00\u59cb\u65f6\u95f4 \u5373\u53ef\n\n\u7136\u540e\u5c31\u8fde\u8fb9 \u6d41\u91cf$inf$\uff0c\u8fb9\u6743$f[b_i][a_j]$\n\n\u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f88\u591a\u9898\u89e3\uff08\u76ee\u524d\u4e3a\u6b62\uff09\u90fd\u6ca1\u6709\u8bf4\u660e\u7684\u662f\uff1a\n\n$$\nt_{ij} <=t_{ik} +t _ {kj} \n$$\n$$\nf_{ij} <=f_{ik} +f _ {kj}\n$$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6570\u636e\u8303\u56f4\u91cc\u9762\u4fdd\u8bc1\u4e86\u6700\u77ed\u8def\n\n\u6211\u89c9\u5f97\u8bf4\u8fd8\u662f\u63d0\u793a\u4e00\u4e0b\u6bd4\u8f83\u597d\uff0c~~\u4e3b\u8981\u662f\u6211\u592a\u83dc\u4e86~~\n\n\u5982\u679c\u6ca1\u6709\u4fdd\u8bc1\uff0c\u90a3\u5c31\u8981\u624b\u52a8\u8dd1\u6700\u77ed\u8def\u4e86\n\n- \u63a7\u5236\u8bf7\u6c42\u7684**\u51c0\u6536\u76ca**\n\n\u5176\u5b9e\u5c31\u662f\u6bcf\u4e2a\u8bf7\u6c42\u53ea\u67091\u6b21\u8d21\u732e\n\n\u8fd9\u4e2a\u5982\u679c\u5728\u5ea7\u7684\u5927\u4f6c\u9898\u76ee\u5199\u591a\u4e86\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u662f\u5957\u8def\u6765\u7740\u7684\n\n\u7ed9\u4e2a[\u5957\u8def\u9898](https://www.luogu.com.cn/problem/P4013)\n\n\u5176\u5b9e\u5c31\u662f\u62c6\u70b9\uff0c\u628a\u4e00\u4e2a\u8bf7\u6c42\u62c6\u6210\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u7136\u540e\u8fde\u4e00\u6761  \u6d41\u91cf1\uff0c\u8d39\u7528$c$ \u7684\u8fb9\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\n\n\u5982\u679c\u4e24\u4e2a\u8bf7\u6c42\u4e4b\u95f4\u53ef\u8f6c\u79fb\uff0c\u90a3\u4e48\u5c31\u4ece\u51fa\u70b9\u8fde\u5411\u5165\u70b9\n\n**\u5b8c\u7ed3\u6492\u82b1**\n\n### 3.\u4ee3\u7801\n\u8fd9\u91cc\u53ea\u7ed9\u51fa\u5efa\u56fe\u4ee3\u7801\uff0c\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u6a21\u677f\u5c31\u4e0d\u8981\u5f71\u54cd~~\u7f8e\u89c2\u5ea6~~\u4e86\n\n\u4e00\u4e9b\u4e0d\u6210\u5927\u95ee\u9898\u7684\u5c31\u5728\u6ce8\u91ca\u91cc\u8bf4\u4e86\n\n```cpp\nvoid add(int u,int v,int w,int f){add_edge(u,v,w,f),add_edge(v,u,0,-f);} \\\\\u61d2\u4eba\u53cd\u5411\u8fb9\u5efa\u56fe\uff0cadd_edge\u5c31\u662f\u90bb\u63a5\u8868\u5efa\u8fb9\u4e86\uff0c\u5927\u5bb6\u90fd\u61c2\u5427\n\nstruct pp{\n\tint a,b,c,s,t;\n}q[maxn];\nint time[maxn][maxn],f[maxn][maxn];\nint main()\n{\n   \tscanf(\"%d%d%d%d\",&n,&m,&k,&T);\n   \ts=0,t=2*m+2;\\\\s\u662f\u771f\u6e90\u70b9\uff0c\u5047\u6e90\u70b9\u662ft-1\n   \tfor(int i=1;i<=n;i++)\n   \t\tfor(int j=1;j<=n;j++)\n   \t\t\tscanf(\"%d\",&time[i][j]);\n   \tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tscanf(\"%d\",&f[i][j]);\n\tfor(int i=1;i<=m;i++) scanf(\"%d%d%d%d%d\",&q[i].a,&q[i].b,&q[i].s,&q[i].t,&q[i].c),q[i].a++,q[i].b++;\\\\\u8bfb\u5165\u70b9\u4ece1\u5f00\u59cb\uff0c\u6240\u4ee5++\n\tfor(int i=1;i<=m;i++) \n\t{\n\t\tadd(i,i+m,1,-q[i].c);\\\\\u53cd\u5411\u8fb9\u4ee3\u7801\u5728\u4e0a\u9762\u54e6\n\t\tif(q[i].t+time[q[i].b][1]<=T) add(i+m,t,inf,f[q[i].b][1]);\n\t\telse continue;\\\\\u90fd\u4e0d\u80fd\u56de\u5bb6\u600e\u4e48\u8fd8\u80fd\u8f6c\u79fb\u5462\n\t\tif(q[i].s>=time[1][q[i].a]) add(t-1,i,inf,f[1][q[i].a]);\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(q[i].t+time[q[i].b][q[j].a]<=q[j].s)\n\t\t\t\tadd(i+m,j,inf,f[q[i].b][q[j].a]),add(i,j,inf,f[q[i].b][q[j].a]);\\\\\u8fd9\u91cc\u591a\u5efa\u4e86\u4e00\u6761\u5165\u70b9\u5230\u5165\u70b9\u7684\u8fb9\uff0c\u4e0d\u52a0\u4e5f\u6ca1\u6709\u95ee\u9898\u7684\n\t}\n\tadd(s,t-1,k,0);\\\\\u63a7\u5236k\u67b6\u98de\u673a\n\tDinic();\\\\\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n\tprintf(\"%d\",-cost);\\\\\u56e0\u4e3a\u662f\u8fb9\u6743\u5168\u90e8\u53d6\u53cd\uff0c\u6240\u4ee5\u7b54\u6848\u4e5f\u8981\u53d6\u53cd\n    return 0;\n } \n```",
        "postTime": 1587563472,
        "uid": 144523,
        "name": "JohnJoeZhu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4452 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u822a\u73ed\u5b89\u6392\u3011"
    },
    {
        "content": "## \u4e00\u3001\u9898\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u70b9\u53ca\u98de\u673a\u5728\u6bcf\u4e24\u70b9\u4e4b\u95f4**\u7a7a\u8f7d**\u822a\u884c\u7684\u65f6\u95f4 $t_{i,j}$ \u53ca\u82b1\u8d39 $f_{i,j}$\uff0c\u6709 $m$ \u4e2a\u8ba2\u5355\uff0c\u6bcf\u4e2a\u8ba2\u5355\u8981\u6c42\u5728 $sx_i$ \u65f6\u523b\u6709\u98de\u673a\u5230\u8fbe $sp_i$\uff0c\u5e76\u4f7f\u6b64\u98de\u673a\u5728 $tx_i$ \u65f6\u523b\u5230\u8fbe $tp_i$\uff0c\u83b7\u5229 $c_i$\u3002\u6709 $k$ \u67b6\u98de\u673a\uff0c\u6bcf\u67b6\u98de\u673a\u4ece $0$ \u65f6\u523b\u5f00\u59cb\u53ef\u4ee5\u4ece $1$ \u53f7\u7ad9\u70b9\u51fa\u53d1\uff0c\u5e76\u5fc5\u987b\u6700\u665a\u5728 $T$ \u65f6\u523b\u56de\u5230 $1$ \u53f7\u7ad9\u70b9\u3002\u6c42**\u6700\u5927\u83b7\u5229**\u3002\n\n**\u6ce8\u610f**\uff1a\u8981**\u5c3d\u53ef\u80fd\u591a**\u5730\u63a5\u8ba2\u5355\uff08\u9898\u5e72\u4e2d\u672a\u8868\u8fbe\u51fa\uff09\u3002\n\n## \u4e8c\u3001\u601d\u8def\n\n\u6211\u4eec\u89c2\u5bdf\u4e00\u67b6\u98de\u673a\u4e00\u5929\u4e2d\u7684\u822a\u7a0b\uff1a\n\n\u5728 $0$ \u65f6\u523b\u4ece $1$ \u53f7\u7ad9\u70b9\uff08\u4e2a\u4eba\u4e60\u60ef\u4ece $1$ \u5f00\u59cb\u6807\u53f7\uff09\u51fa\u53d1\uff0c\u5728\u4e0d\u665a\u4e8e $sx_{i}$ \u65f6\u523b\u5230\u8fbe $sp_i$ \u53f7\u7ad9\u70b9\uff0c\u5728 $tx_i$ \u65f6\u523b\u4ece $tp_i$ \u53f7\u7ad9\u70b9\u51fa\u53d1\uff0c\u5728\u4e0d\u665a\u4e8e $sx_{j}$ \u65f6\u523b\u5230\u8fbe $sp_j$ \u53f7\u7ad9\u70b9\u2026\u2026\u5728 $tx_k$ \u65f6\u523b\u4ece $tp_k$ \u53f7\u7ad9\u70b9\u51fa\u53d1\uff0c\u5728\u4e0d\u665a\u4e8e $T$ \u65f6\u523b\u56de\u5230 $1$ \u53f7\u7ad9\u70b9\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u5728\u5c3d\u53ef\u80fd\u591a\u5730\u63a5\u8ba2\u5355\u7684\u60c5\u51b5\u4e0b\u83b7\u5229\uff08\u6536\u5165\u51cf\u6210\u672c\uff09\u6700\u5927,\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6784\u5efa**\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41**\u6a21\u578b\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8ba2\u5355\u8bbe\u70b9\u3002\u56e0\u4e3a\u4e00\u4e2a\u8ba2\u5355\u53ea\u80fd\u63a5\u4e00\u6b21\uff0c\u6211\u4eec\u5bf9\u5b83\u62c6\u70b9\uff0c\u5165\u70b9\u5411\u51fa\u70b9\u8fde\u5bb9\u91cf\u4e3a $1$\u3001\u8d39\u7528\u4e3a $c_i$ \u7684\u8fb9\u3002\n\n\u5efa\u8fb9\uff1a\n\n+ \u5982\u679c\u4ece $1$ \u53f7\u7ad9\u70b9\u53ef\u4ee5**\u53ca\u65f6**\u5230\u8fbe\u8ba2\u5355 $i$ \u7684\u8d77\u59cb\u7ad9\u70b9 $sx_i$\uff0c\u7531\u6e90\u70b9 $s$ \u5411\u8ba2\u5355 $i$ \u7684\u5165\u70b9\u5efa\u5bb9\u91cf\u4e3a $1$\u3001\u8d39\u7528\u4e3a $-f_{1,sx_i}$ \u7684\u8fb9\uff1b\n\n+ \u5982\u679c\u4ece\u8ba2\u5355 $i$ \u7684\u7ec8\u6b62\u7ad9\u70b9 $tx_i$ \u53ef\u4ee5**\u53ca\u65f6**\u56de\u5230 $1$ \u53f7\u7ad9\u70b9\uff0c\u7531\u8ba2\u5355 $i$ \u7684\u51fa\u70b9\u5411\u6c47\u70b9 $t$ \u5efa\u5bb9\u91cf\u4e3a $1$\u3001\u8d39\u7528\u4e3a $-f_{tx_i,1}$ \u7684\u8fb9\uff1b\n\n+ \u5bf9\u4e8e\u4e24\u4e2a\u8ba2\u5355 $i,j$\uff0c\u5982\u679c\u4ece $tx_i$ \u53ef\u4ee5**\u53ca\u65f6**\u5230\u8fbe $sx_j$\uff0c\u7531\u8ba2\u5355 $i$ \u7684\u51fa\u70b9\u5411\u8ba2\u5355 $j$ \u7684\u5165\u70b9\u5efa\u5bb9\u91cf\u4e3a $1$\u3001\u8d39\u7528\u4e3a $-f_{tx_i,sx_j}$ \u7684\u8fb9\u3002\n\n\u8fd8\u8981\u6ce8\u610f\u4e00\u5171\u6709 $k$ \u67b6\u98de\u673a\uff0c\u5373\u6700\u5927\u6d41\u4e0a\u9650\u4e3a $k$\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u8981\u521b\u5efa**\u771f\u6b63\u7684**\u6e90\u70b9 $s'$\uff0c\u5411\u201c\u6e90\u70b9\u201d $s$ \u5efa\u5bb9\u91cf\u4e3a $k$\u3001\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u8fb9\u6743\u53d6\u53cd\u8dd1**\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41**\u518d\u5bf9\u8d39\u7528\u53d6\u53cd\u5373\u4e3a\u7b54\u6848\u3002\n\n### AC code\n\n```cpp\n//written_by_FTL\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<string>\n#include<map>\n#define ll long long\n#define db double\nusing namespace std;\nconst int N=505;\nint rd(){\n\tint ans=0,f=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')f^=(ch=='-'),ch=getchar();\n\twhile(ch>='0'&&ch<='9')ans=(ans<<3)+(ans<<1)+(ch^48),ch=getchar();\n\tif(f)ans=-ans;\n\treturn ans;\n}\nint n,m,k,u,v,c,s,t,a[205][205],f[205][205],minc;\nint T,sp[N],tp[N],sx[N],tx[N];\nint nd[N],nds[N],tt=1,bk[N],cnt=1;\nint h[N],dis[N],INF=0x3f3f3f3f;\nstruct edge{\n\tint v,w,x,nxt;\n}e[200005];\nvoid add(int u,int v,int w,int x){\n\te[++tt]={v,w,x,nd[u]};\n\tnd[u]=tt;\n}\nvoid adds(int u,int v,int w,int x){//\u5feb\u6377\u5efa\u8fb9\n\tadd(u,v,w,-x),add(v,u,0,x);\n}\nvoid spfa(){\n\tqueue<int>que;\n\tmemset(h,0x3f,sizeof h);\n\tque.push(s);\n\tbk[s]=1,h[s]=0;\n\twhile(!que.empty()){\n\t\tu=que.front();\n\t\tque.pop();\n\t\tbk[u]=0;\n\t\tfor(int i=nd[u];i;i=e[i].nxt){\n\t\t\tv=e[i].v;\n\t\t\tif(e[i].w&&h[v]>h[u]+e[i].x){\n\t\t\t\th[v]=h[u]+e[i].x;\n\t\t\t\tif(bk[v]==0)que.push(v),bk[v]=1;\n\t\t\t}\n\t\t}\n\t}\n}\nstruct node{\n\tint dis,u;\n\tbool operator <(const node &x)const{\n\t\treturn x.dis<dis;\n\t}\t\n};\nbool dij(){\n\tpriority_queue<node>que;\n\tmemset(dis,0x3f,sizeof dis);\n\tdis[s]=0;\n\tque.push({0,s});\n\twhile(!que.empty()){\n\t\tu=que.top().u;\n\t\tque.pop();\n\t\tif(bk[u]==cnt)continue;\n\t\tbk[u]=cnt,nds[u]=nd[u];\n\t\tfor(int i=nd[u];i;i=e[i].nxt){\n\t\t\tv=e[i].v;\n\t\t\tif(e[i].w&&dis[v]>dis[u]+e[i].x+h[u]-h[v]){\n\t\t\t\tdis[v]=dis[u]+e[i].x+h[u]-h[v];\n\t\t\t\tif(bk[v]!=cnt)que.push({dis[v],v});\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t]<INF;\n}\nint dfs(int u,int flw){\n\tif(u==t)return flw;\n\tint ret=0,x;\n\tbk[u]=cnt;\n\tfor(int i=nds[u];i;i=nds[u]){\n\t\tnds[u]=e[i].nxt;\n\t\tint v=e[i].v;\n\t\tif(e[i].w==0||bk[v]==cnt||dis[v]!=dis[u]+e[i].x+h[u]-h[v])continue;\n\t\tx=dfs(v,min(flw,e[i].w));\n\t\tif(x){\n\t\t\tflw-=x,ret+=x;\n\t\t\te[i].w-=x,e[i^1].w+=x;\n\t\t\tminc+=x*e[i].x;\n\t\t\tif(flw==0)break;\n\t\t} \n\t}\n\tbk[u]=0;\n\treturn ret;\n}\nint dinic(){//\u7c7b dinic \u8d39\u7528\u6d41\n\tint flw=0;\n\tspfa();\n\twhile(dij()){\n\t\t++cnt,flw+=dfs(s,INF);\n\t\tfor(int i=1;i<=t;i++)h[i]+=dis[i];\n\t}\n\treturn flw;\n}\nint main(){\n\tn=rd(),m=rd(),k=rd(),T=rd();\n\ts=m+m+1,t=s+2;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)a[i][j]=rd();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)f[i][j]=rd();\n\tadds(s,s+1,k,0);\n\tfor(int i=1;i<=m;i++){\n\t\tsp[i]=rd(),tp[i]=rd(),sx[i]=rd(),tx[i]=rd(),c=rd();\n\t\tsp[i]++,tp[i]++;\n\t\tadds(i,i+m,1,c);//\u62c6\u70b9\n\t\tif(a[1][sp[i]]<=sx[i])adds(s+1,i,1,-f[1][sp[i]]);\n\t\tif(tx[i]+a[tp[i]][1]<=T)adds(i+m,t,1,-f[tp[i]][1]);\n\t\tfor(int j=1;j<i;j++){\n\t\t\tif(tx[i]+a[tp[i]][sp[j]]<=sx[j])adds(i+m,j,1,-f[tp[i]][sp[j]]);\n\t\t\tif(tx[j]+a[tp[j]][sp[i]]<=sx[i])adds(j+m,i,1,-f[tp[j]][sp[i]]);\n\t\t}\n\t}\n\tdinic();\n\tprintf(\"%d\\n\",-minc);\n\treturn 0;\n}\n```\n\n## \u4e09\u3001\u540e\u8bb0\n\n1. \u6ce8\u610f\u98de\u673a\u5728**\u8f7d\u5ba2**\u7684\u65f6\u5019\u662f\u4e0d\u8ba1\u6210\u672c\u7684\uff0c\u4e5f\u4e0d\u7528\u7ba1\u7a7a\u8f7d\u5728\u4e24\u70b9\u4e4b\u95f4\u98de\u884c\u7684\u65f6\u95f4\u662f\u5426\u5927\u4e8e\u8ba2\u5355\u7684\u5b9e\u9645\u65f6\u95f4\u3002\n\n2. \u5bf9\u4e8e\u4efb\u610f $3$ \u70b9 $i,j,k$\uff0c\u6ee1\u8db3 $t_{i,j}\\le t_{i,k}+t_{k,j},f_{i,j}\\le f_{i,k}+f_{k,j}$\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u6761\u4ef6\uff0c\u6b64\u9898\u5c31\u4e0d\u80fd\u8fd9\u6837\u505a\u4e86\u3002\n\n### $\\text{The End.}$",
        "postTime": 1643187192,
        "uid": 346440,
        "name": "FreeTimeLove",
        "ccfLevel": 7,
        "title": "P4452\u3010\u822a\u73ed\u5b89\u6392\u3011"
    },
    {
        "content": "**\u9898\u5916\u8bdd**\n\n  \u7531\u4e8e\u672c\u849f\u84bb\u6570\u636e\u7ed3\u6784\u5df2\u7ecf\u8c03\u5410\u4e86\uff0c\u53ea\u597d\u5199\u9053\u7f51\u7edc\u7624\u6765\u7ec3\u7ec3\u624b\u3002\n\n**\u89c2\u5bdf**\n\n  \u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u9898\u662f\u8981\u627e\u5230\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97\u4e00\u5806\u98de\u673a\u98de\u6765\u98de\u53bb\u7684\u603b\u6536\u76ca\u6700\u5927\uff0c\u90a3\u4e48\u8981\u6ee1\u8db3 $k$ \u8f86\u65e0\u5dee\u522b\u98de\u673a\u7684\u7ea6\u675f\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u53ef\u4ee5\u7528\u6700\u5927\u6d41\u6765\u6ee1\u8db3\u8fd9\u4e2a\u7ea6\u675f\uff0c\u800c\u53c8\u8981\u4f7f\u5f97\u603b\u6536\u76ca\u6700\u5927\uff0c\u81ea\u7136\u5730\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u60f3\u5230**\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41**\u3002\u90a3\u4e48\u8be5\u5982\u4f55\u5efa\u56fe\u5462\uff1f\n\n**\u5efa\u6a21**\n\n**\u9519\u8bef**\u5efa\u6a21\n\n  \u4e0b\u9762\u5148\u7ed9\u5927\u5bb6\u907f\u4e2a\u96f7\uff0c\u521d\u770b\u8fd9\u9053\u9898\u65f6\uff0c\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u4e00\u4e2a\u663e\u7136\u7684\u4f46\u590d\u6742\u5ea6\u4e0d\u592a\u6b63\u786e\u7684\u89e3\u6cd5\uff0c\u5c31\u662f\u6309\u65f6\u95f4\u62c6\u70b9\uff0c\u5c06\u6bcf\u4e2a\u673a\u573a\u7684\u6bcf\u4e2a\u65f6\u95f4\u90fd\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u4f46\u8fd9\u6837\u7684\u8bdd\u70b9\u7684\u4e2a\u6570\u5c31\u8fbe\u5230\u4e86 $200 \\times 300 = 60000$\uff0c\u4e5f\u5c31\u662f $10^4$ \u7ea7\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u592a\u5bb9\u6613\u63a5\u53d7\u7684\u70b9\u6570\uff0c\u5e94\u8be5\u4e5f\u662f\u65e0\u6cd5\u901a\u8fc7\u8fd9\u9053\u9898\u7684\uff08\u6216\u8bb8\u5c0f\u5e38\u6570\u9009\u624b\u53ef\u4ee5\uff1f\uff08bushi\uff09\uff09\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u8fd9\u4e9b\u70b9\u662f\u5426\u90fd\u5fc5\u8981\u3002\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7edd\u5927\u591a\u6570\u7684\u8fd9\u4e9b\u70b9\u90fd\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u4e5f\u5c31\u662f\u5728\u6309\u65f6\u95f4\u5206\u5c42\u65f6\u7684\n```cpp \nadd_edge(i+(t-1)*n,i+t*n,1,0)\n```\n\u8fd9\u4e00\u8fde\u8fb9\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u54ea\u4e9b\u70b9\u65f6\u5fc5\u8981\u7684\u3002\n\n\u4e0b\u9762\u662f**\u6b63\u89e3**\n\n  \uff08\u4e0b\u9762\u7684\u8bf7\u6c42\u7684\u5de6\u53f3\u7aef\u70b9\u8868\u793a\u8be5\u8bf7\u6c42\u7684\u98de\u673a\u7684\u8d77\u70b9\u673a\u573a\u548c\u7ec8\u70b9\u673a\u573a\uff0c$F$ \u8868\u793a\u6d41\u91cf\uff0c$w$ \u8868\u793a\u8d39\u7528\uff0c$q$ \u8868\u793a\u8bf7\u6c42\uff0c$x$ \u8868\u793a\u4e00\u4e2a\u8bf7\u6c42\u7684\u5de6\u7aef\u70b9\uff0c$y$ \u8868\u793a\u4e00\u4e2a\u8bf7\u6c42\u7684\u53f3\u7aef\u70b9\uff0c$c$ \u4e3a\u4e00\u4e2a\u8bf7\u6c42\u7684\u83b7\u5229\uff09\n\n  \u6211\u4eec\u53d1\u73b0\u53ea\u6709\u5728\u8bf7\u6c42\u65f6\u7684\u5de6\u53f3\u7aef\u70b9\u624d\u65f6\u5fc5\u8981\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8003\u8651\u4ee5\u8bf7\u6c42\u4e2d\u7684\u5de6\u53f3\u7aef\u70b9\u4e3a\u7ed3\u70b9\u5efa\u6a21\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u6a21\u62df\u9898\u76ee\u4e2d\u7684\u8981\u6c42\uff0c\u9996\u5148\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6e90\u548c\u4e00\u4e2a\u6c47\u70b9\uff0c\u518d\u5c06\u8d77\u70b9\u770b\u4f5c\u6e90\u70b9\uff0c\u5c06\u8d85\u7ea7\u6e90\u5411\u8d77\u70b9\u8fde\u4e00\u6761 $F = k, w = 0$ \u7684\u8fb9\uff0c\u8868\u793a\u8d77\u70b9\u62e5\u6709 $k$ \u8f86\u98de\u673a\uff0c\u7136\u540e\u82e5\u8d77\u70b9\u80fd\u5728\u5f53\u524d\u8bf7\u6c42 $i$ \u4e2d\u7684\u8d77\u70b9\u65f6\u523b\u4e4b\u524d\u5230\u8fbe\u8be5\u8bf7\u6c42\u5de6\u7aef\u70b9\u65f6\uff0c\u6211\u4eec\u5c06\u8d77\u70b9\u5411\u8be5\u5de6\u7aef\u70b9\u8fde\u4e00\u6761 $F = 1, w = - f_{0,q_i.x}$ \u7684\u8fb9\uff0c\u63a5\u7740\u6211\u4eec\u5c06\u4e00\u4e2a\u8bf7\u6c42\u7684\u5de6\u53f3\u7aef\u70b9\u8fde\u4e00\u6761 $F = 1, w = {q_i.c}$ \u7684\u8fb9\uff0c\u7136\u540e\u82e5\u8be5\u8bf7\u6c42\u7684\u7ec8\u70b9\u65f6\u523b\u52a0\u4e0a\u8be5\u8bf7\u6c42\u53f3\u7aef\u70b9\u5230\u8d77\u70b9\u7684\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8e\u7ed3\u675f\u65f6\u523b\uff0c\u6211\u4eec\u5c06\u8be5\u8bf7\u6c42\u7684\u53f3\u7aef\u70b9\u5411\u6c47\u70b9\u8fde\u4e00\u6761 $F = 1, w = - f_{q_i.y,0}$\u3002\u96be\u9053\u8fd9\u6837\u5c31\u7ed3\u675f\u4e86\u5417\uff1f\u5f53\u7136\u4e0d\u662f\uff0c\u98de\u673a\u5728\u5b8c\u6210\u8bf7\u6c42\u540e\u4e0d\u4ec5\u53ef\u4ee5\u98de\u56de\u8d77\u70b9\uff0c\u4e5f\u53ef\u4ee5\u98de\u5411\u522b\u7684\u673a\u573a\uff0c\u6700\u540e\u6211\u4eec\u679a\u4e3e\u5224\u65ad\u4e00\u4e0b\u5728\u5b8c\u6210\u8bf7\u6c42 $i$ \u540e\u662f\u5426\u80fd\u5728\u8bf7\u6c42 $j$ \u7684\u8d77\u59cb\u65f6\u523b\u4e4b\u524d\u5230\u8fbe\u8bf7\u6c42 $j$\uff0c\u82e5\u53ef\u4ee5\u5230\u8fbe\uff0c\u5219\u5c06\u8bf7\u6c42 $i$ \u7684\u5de6\u7aef\u70b9\u5411 \u8bf7\u6c42 $j$ \u7684\u53f3\u7aef\u70b9\u8fde\u4e00\u6761 $F = 1, w = f_{q_i.y,q_j .x}$ \u7684\u8fb9\u3002\n  \n  \u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u6ee1\u8db3\u4e86\u9898\u76ee\u4e2d\u7684\u6bcf\u4e2a\u7ea6\u675f\uff0c\u8dd1\u4e00\u904d\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n**Tip**\n\n  \u5728\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u4e2d\u6c42\u6700\u957f\u8def\u65f6\uff0c\u6211\u4eec\u5e38\u5e38\u53ef\u4ee5\u5c06\u8fb9\u6743\u7684\u8d39\u7528**\u53d6\u76f8\u53cd\u6570**\uff0c\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u6700\u540e\u7b54\u6848\u518d**\u53d6\u76f8\u53cd\u6570**\u5373\u53ef\u3002\n\n  \u63a5\u4e0b\u6765\u662f\u672c\u849f\u84bb\u4e11\u964b\u7684\u5927\u5e38\u6570\u4ee3\u7801\n  ~~\uff08\u6211\u77e5\u9053\u4f60\u4eec\u53ea\u770b\u8fd9\u4e2a\uff09~~\n  ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int inf=0x3f3f3f3f3f;\ninline int read(){\n\tint x=0,f=1;\n\tchar ch;\n\tdo{\n\t\tch=getchar();\n\t\tif(ch=='-'){\n\t\t\tf=-1;\n\t\t}\n\t}while(!(ch>='0'&&ch<='9'));\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nint n,m,k,E,f[205][205],t[205][205],edgenum=1,head[405],S,SS=1,T,dist[405],now[405],vis[405],ans;//f,t\u4e3a\u9898\u76ee\u4e2d\u6240\u7ed9\uff0cS\u662f\u8d85\u7ea7\u6e90\uff0cSS\u4e3a\u8d77\u70b9\uff0cT\u662f\u6c47\u70b9\nstruct query{\n    int a,b,s,t,c;\n}q[205];\nstruct Edge{\n    int from,to,next,w,f;\n}edge[320005];\nvoid add_edge(int from,int to,int f,int w){\n    edge[++edgenum].from=from;\n    edge[edgenum].next=head[from];\n    edge[edgenum].to=to;\n    edge[edgenum].w=w;\n    edge[edgenum].f=f;\n    head[from]=edgenum;\n    edge[++edgenum].next=head[to];\n    edge[edgenum].from=to;\n    edge[edgenum].to=from;\n    edge[edgenum].f=0;\n    edge[edgenum].w=-w;\n    head[to]=edgenum;\n}//\u8fde\u8fb9\nbool spfa(){\n    for(int i=1;i<=T;++i){\n        vis[i]=0;\n        dist[i]=inf;\n    }\n    queue<int> q;\n    q.push(S);\n    dist[S]=0;\n    while(!q.empty()){\n        int x=q.front();\n        q.pop();\n        vis[x]=0;\n        now[x]=head[x];\n        for(int i=head[x];i;i=edge[i].next){\n            if(edge[i].f){\n                int v=edge[i].to;\n                if(dist[v]>dist[x]+edge[i].w){\n                    dist[v]=dist[x]+edge[i].w;\n                    if(vis[v]){\n                        continue;\n                    }\n                    vis[v]=1;\n                    q.push(v);\n                }\n          }\n        }\n    }\n    return dist[T]<inf;\n}\nint dinic(int x,int flow){\n    if(x==T){\n        return flow;\n    }\n    int used=0,i;\n    vis[x]=1;\n    for(i=now[x];i;i=edge[i].next){\n        if(edge[i].f){\n            int v=edge[i].to;\n            if(vis[v]){\n                continue;\n            }\n            if(dist[v]==dist[x]+edge[i].w){\n                int k=dinic(v,min(flow-used,edge[i].f));\n                if(!k){\n                    continue;\n                }\n                used+=k;\n                edge[i].f-=k;\n                edge[i^1].f+=k;\n                ans+=k*edge[i].w;\n                if(used==flow){\n                    break;\n                }\n            }\n        }\n    }\n    now[x]=i;\n    return used;\n}\n//\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\nsigned main(){\n    n=read();\n    m=read();\n    k=read();\n    E=read();\n    for(int i=1;i<=n;++i){\n        for(int j=1;j<=n;++j){\n            t[i][j]=read();\n        }\n    }\n    for(int i=1;i<=n;++i){\n        for(int j=1;j<=n;++j){\n            f[i][j]=read();\n        }\n    }\n    for(int i=1;i<=m;++i){\n        q[i].a=read()+1;\n        q[i].b=read()+1;\n        q[i].s=read();\n        q[i].t=read();\n        q[i].c=read();\n    }\n    T=(m+1)*2;\n    //\u5efa\u6a21\n    add_edge(S,SS,k,0);\n    for(int i=1;i<=m;++i){\n        int x=q[i].a,y=q[i].b,s=q[i].s,e=q[i].t,c=q[i].c;\n        if(t[1][x]<=s){\n            add_edge(SS,i*2,1,f[1][x]);\n        }\n        if(t[y][1]+e<=E){\n            add_edge(i*2+1,T,1,f[y][1]);\n        }\n        add_edge(i*2,i*2+1,1,-c);\n        for(int j=1;j<=m;++j){\n            int xx=q[j].a,ss=q[j].s;\n            if(i!=j){\n                if(e+t[y][xx]<=ss){\n                    add_edge(i*2+1,j*2,1,f[y][xx]);\n                }\n            }\n        }\n    }\n    while(spfa()){\n        dinic(S,inf);\n    }\n    printf(\"%lld\\n\",-ans);//\u7b54\u6848\u8981\u53d6\u76f8\u53cd\u6570\n    return 0;\n}\n```\n",
        "postTime": 1656646863,
        "uid": 360977,
        "name": "541forever",
        "ccfLevel": 0,
        "title": "P4452 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u822a\u73ed\u5b89\u6392"
    },
    {
        "content": "# P4452 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u822a\u73ed\u5b89\u6392 \n\n## \u9898\u610f\n\n\u6709  $K$ \u67b6\u98de\u673a\uff0c$N$ \u4e2a\u673a\u573a\uff0c\u5176\u4e2d $1$ \u53f7\u4e3a\u57fa\u5730\u673a\u573a\u3002\n\n\u6bcf\u5929 $0$ \u65f6\u523b\uff0c\u98de\u673a\u624d\u53ef\u4ee5\u4ece\u57fa\u5730\u673a\u573a\u8d77\u98de\uff0c\u5e76\u4e14\u4e0d\u665a\u4e8e $T$ \u65f6\u523b\u56de\u5230\u57fa\u5730\u673a\u573a\u3002\n\n\u5bf9\u4e8e $\\forall i, j$\uff0c\u9898\u76ee\u7ed9\u5b9a $t_{i, j}$ \u8868\u793a\u4ece $i$ **\u7a7a\u8f7d**\u98de\u5230 $j$ \u9700\u8981\u7684\u65f6\u95f4\uff0c$f_{i, j}$ \u8868\u793a\u4ece $i$ **\u7a7a\u8f7d**\u98de\u5230 $j$ \u9700\u8981\u7684\u8d39\u7528\u3002\n\n\u6709 $M$ \u4e2a**\u5305\u673a\u8bf7\u6c42**\uff0c\u7ed9\u5b9a $(a, b, s, t, c)$\uff0c\u8868\u793a\u5728 $s$ \u65f6\u523b\u4ece $a$ \u673a\u573a\u8d77\u98de\uff0c\u53ef\u4ee5\u6070\u597d\u5728 $t$ \u65f6\u523b\u5230\u8fbe $b$ \u673a\u573a\uff0c\u51c0\u83b7\u5229 $c$.\n\n\u6ce8\u610f\uff0c\u5305\u673a\u8bf7\u6c42\u7684\u98de\u884c\u65f6\u95f4\u4e3a $(t-s)\\neq t_{a, b}$. \u5305\u673a\u8bf7\u6c42\u7684\u8d39\u7528\u4e3a $-c$\uff0c**\u4e0e $f$ \u4e0d\u540c**\u3002\n\n\u6c42\u6700\u5927\u603b\u6536\u76ca\u3002\n\n## \u5206\u6790\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528\u8d39\u7528\u6d41\u7b97\u6cd5\u3002\n\n\u5bf9\u8bf7\u6c42\u8fdb\u884c\u62c6\u70b9\u3002**\u8d77\u70b9\u5411\u7ec8\u70b9\u8fde\u5bb9\u91cf\u4e3a $1$\uff0c\u4ef7\u503c\u4e3a $c$ \u7684\u8fb9\u3002**\n\n\u7136\u540e\u5904\u7406\u65f6\u95f4\u9650\u5236\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8bf7\u6c42\uff0c\u5982\u679c\uff1a\n\n- **\u53ef\u4ee5\u5728\u8bf7\u6c42\u5f00\u59cb\u4e4b\u524d\uff0c\u4ece\u57fa\u5730\u98de\u5230\u8d77\u70b9\uff1a**\u4ece\u6e90\u70b9\u5411\u8bf7\u6c42\u8d77\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $\\inf$\uff0c\u4ef7\u503c\u4e3a\u5bf9\u5e94\u7684 $-f$.\n\n- **\u53ef\u4ee5\u5728 $T$ \u4e4b\u524d\uff0c\u4ece\u7ec8\u70b9\u98de\u5230\u57fa\u5730\uff1a**\u4ece\u7ec8\u70b9\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $\\inf$\uff0c\u4ef7\u503c\u4e3a\u5bf9\u5e94\u7684 $-f$.\n\n\u53c8\u56e0\u4e3a\u6267\u884c\u8bf7\u6c42\u4e4b\u540e\uff0c\u53ef\u4ee5\u98de\u5230\u522b\u7684\u8bf7\u6c42\u673a\u573a\u3002\u6240\u4ee5**\u4e24\u4e24\u679a\u4e3e\u8bf7\u6c42**\uff0c\u5982\u679c\u4ece\u7ec8\u70b9\u98de\u5230\u53e6\u4e00\u4e2a\u8bf7\u6c42\u7684\u8d77\u70b9**\u6ee1\u8db3\u65f6\u95f4\u6761\u4ef6\uff0c\u5c31\u8fde\u8fb9**\u3002\n\n\u5904\u7406 $k$ \u67b6\u98de\u673a\u3002**\u518d\u5efa\u7acb\u4e00\u4e2a\u6e90\u70b9**\uff0c\u5411\u539f\u6765\u7684\u6e90\u70b9\u8fde\u5bb9\u91cf\u4e3a $k$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u5373\u53ef\u3002\n\n\u8dd1**\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41**\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int MAXN = 408, MAXM = 1e6;\nconst int inf = 0x3f3f3f3f;\nint n, m, k, ed;\nint Tim[MAXN][MAXN], Cos[MAXN][MAXN];\nint S, T;\nstruct Edge{\n    int from, to, nxt, flow, val;\n}edge[MAXM];\nint head[MAXN], e_cnt = 1;\nvoid add(int u, int v, int w, int c) {\n    edge[++e_cnt].from = u;\n    edge[e_cnt].to = v;\n    edge[e_cnt].flow = w;\n    edge[e_cnt].val = c;\n    edge[e_cnt].nxt = head[u];\n    head[u] = e_cnt;\n}\nvoid add_edge(int u, int v, int w, int c) {\n    add(u, v, w, c);\n    add(v, u, 0, -c);\n}\nstruct In{int a, b, s, t, c;} in[MAXN];\nint dis[MAXN], pre[MAXN];\nbool vis[MAXN];\nbool SPFA() {\n    memset(dis, 0x3f, sizeof(dis)); dis[S] = 0;\n    memset(vis, 0, sizeof(vis)); vis[S] = true;\n    memset(pre, 0, sizeof(pre));\n    queue<int> q; q.push(S);\n    while(!q.empty()) {\n        int x = q.front(); q.pop(); vis[x] = false;\n        for(int i = head[x]; i; i = edge[i].nxt) {\n            int v = edge[i].to, flow = edge[i].flow, val = edge[i].val;\n            if(flow && dis[x] + val < dis[v]) {\n                dis[v] = dis[x] + val;\n                pre[v] = i;\n                if(!vis[v]) {\n                    q.push(v); vis[v] = true;\n                }\n            }\n        }\n    }\n    return (pre[T] != 0);\n}\npair<int, int> MCMF() {\n    int flow = 0, cost = 0;\n    while(SPFA()) {\n        int minflow = inf;\n        for(int i = T; i != S; i = edge[pre[i]].from) {\n            minflow = min(minflow, edge[pre[i]].flow);\n        }\n        flow += minflow;\n        for(int i = T; i != S; i = edge[pre[i]].from) {\n            edge[pre[i]].flow -= minflow;\n            edge[pre[i] ^ 1].flow += minflow;\n            cost += edge[pre[i]].val * minflow;\n        }\n    }\n    return make_pair(flow, cost);\n}\nint main() {\n    scanf(\"%d%d%d%d\", &n, &m, &k, &ed);\n    S = 0; T = 2 * m + 2;\n    for(int i = 1; i <= n; i++) {\n        for(int j = 1; j <= n; j++) {\n            scanf(\"%d\", &Tim[i][j]);\n        }\n    }\n    for(int i = 1; i <= n; i++) {\n        for(int j = 1; j <= n; j++) {\n            scanf(\"%d\", &Cos[i][j]);\n        }\n    }\n    add_edge(S, S + 1, k, 0);\n    for(int i = 1; i <= m; i++) scanf(\"%d%d%d%d%d\", &in[i].a, &in[i].b, &in[i].s, &in[i].t, &in[i].c);\n    for(int i = 1; i <= m; i++) {\n        add_edge(i + 1, i + m + 1, 1, -in[i].c);\n        if(in[i].t + Tim[in[i].b + 1][1] <= ed) add_edge(i + m + 1, T, inf, Cos[in[i].b + 1][1]);\n        if(in[i].s - Tim[1][in[i].a + 1] >= 0) add_edge(S + 1, i + 1, inf, Cos[1][in[i].a + 1]);\n        for(int j = 1; j <= m; j++) {\n            if(in[i].t + Tim[in[i].b + 1][in[j].a + 1] <= in[j].s) {\n                add_edge(i + m + 1, j + 1, inf, Cos[in[i].b + 1][in[j].a + 1]);\n            }\n        }\n    }\n    cout << -MCMF().second << endl;\n    return 0;\n}\n```\n\n",
        "postTime": 1626267966,
        "uid": 166535,
        "name": "TonyYin",
        "ccfLevel": 0,
        "title": "P4452 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u822a\u73ed\u5b89\u6392"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4452)\n\n\u867d\u7136\u8fd9\u9898\u662f\u4e2a\u5957\u8def\u7684\u8d39\u7528\u6d41\uff0c\u4f46\u662f\u4f5c\u4e3a\u521a\u5b66\u7f51\u7edc\u6d41\u7684\u849f\u84bb\u8fd8\u662f\u60f3\u4e86\u633a\u4e45\u3002\n\n\u4e00\u5f00\u59cb\u6211\u662f\u60f3\u7684\u5c06\u4e00\u4e2a\u70b9\u6309\u7167\u65f6\u523b\u62c6\u6210 $T$ \u4e2a\u70b9\uff0c\u7136\u800c\u5148\u4e0d\u8bf4\u80fd\u4e0d\u80fd\u505a\uff0c\u5c31\u8fd9\u4e2a\u70b9\u6570\u4e5f\u80fd\u76f4\u63a5\u7206\u70b8\u3002\n\n\u4f46\u662f\u6ce8\u610f\u5230\u8bf7\u6c42\u6570\u5f88\u5c11\uff0c\u628a\u8bf7\u6c42\u770b\u505a\u8fb9\u4f1a\u53d1\u73b0\u505a\u4e0d\u51fa\u6765\u800c\u4e14\u4e5f\u662f\u4e0d\u5408\u7406\u7684\uff0c\u4e8e\u662f\u8003\u8651\u628a\u6bcf\u4e2a\u8bf7\u6c42\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u70b9\u6743\u4e3a  $c_i$\u3002\u56e0\u4e3a\u7f51\u7edc\u6d41\u53ea\u80fd\u5728\u8fb9\u4e0a\u641e\u4e8b\u60c5\uff0c\u6240\u4ee5\u62c6\u4e00\u4e0b\u70b9\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u8fde\u8fb9\u64cd\u4f5c\u3002\u9996\u5148\u5efa\u7acb\u8d85\u7ea7\u6e90 $s$ \u548c\u8d85\u7ea7\u6c47 $t$\uff0c\u5982\u679c\u80fd\u591f\u5728 $s_i$ \u65f6\u523b\u524d\u4ece\u8d77\u70b9\u5230\u8fbe $a_i$ \u5c31\u8fde\u4e00\u6761\u4ece $s$ \u5230\u8fd9\u4e2a\u8bf7\u6c42\u7684\u8fb9\uff0c\u5bb9\u91cf $1\\sim \\infty$ \u4e4b\u95f4\u90fd\u53ef\u4ee5\uff0c\u8d39\u7528\u662f $f[1][a_i]$\n\n\u540c\u7406\uff0c\u5982\u679c\u80fd\u5728 $T$ \u65f6\u523b\u524d\u56de\u5230\u8d77\u70b9\u5c31\u4ece\u8fd9\u4e2a\u8bf7\u6c42\u8fde\u4e00\u6761\u5230 $t$ \u7684\uff0c\u5bb9\u91cf\u5728 $1\\sim \\infty$ \u4e4b\u95f4\u968f\u4fbf\u53d6\uff0c\u8d39\u7528\u4e3a $f[b_i][1]$ \u7684\u8fb9\u3002\n\n\u5bf9\u4e8e\u4e24\u4e2a\u8bf7\u6c42\u4e4b\u95f4\u7684\u8f6c\u79fb\uff0c\u5982\u679c\u80fd\u5728\u5904\u7406\u5b8c $u$ \u8bf7\u6c42\u540e\u7d27\u63a5\u7740\u5904\u7406 $v$ \u8bf7\u6c42\uff0c\u8fde\u4e00\u6761 $u\\rightarrow v$\uff0c\u6d41\u91cf $1\\sim \\infty$ \u4e2d\u968f\u4fbf\u53d6\uff0c\u8d39\u7528\u4e3a $f[b_u][a_v]$ \u7684\u8fb9\u3002\n\n\u5bf9\u8fd9\u4e2a\u56fe\u76f4\u63a5\u8dd1\u4e00\u8fb9\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u628a\u6700\u5c0f\u8d39\u7528\u53d6\u4e2a\u76f8\u53cd\u6570\u5c31\u662f\u7b54\u6848\u3002\n\n\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u8981\u6700\u5927\u6d41\u624d\u662f\u6700\u4f18\u89e3\u5462\uff1f\u5728\u6761\u4ef6\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\uff0c\u6b63\u5e38\u4eba\u90fd\u4f1a\u591a\u6d3e\u51e0\u67b6\u98de\u673a\u51fa\u53bb\uff0c\u54ea\u6015\u4e0d\u4f1a\u8ba9\u7b54\u6848\u66f4\u4f18\u5bf9\u4e0d\u5bf9\u3002\u3002\u3002\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#include <cstdlib>\n\ninline int min(const int x, const int y) {return x < y ? x : y;}\nconst int INF = 1e9;\nstruct Node {int x, y;};\nstruct Edge {\n\tint to, nxt, cap, cost;\n} e[100005];\nint head[505], dis[505], cur[505], f[205][205], tme[205][205], tot = 1, s, t;\nint a[205], b[205], S[205], T[205], c[205];\nbool mark[505], vis[505];\nstd::queue<int> Q;\ninline void AddEdge(const int u, const int v, const int cap, const int cost) {\n\te[++ tot].to = v, e[tot].nxt = head[u], head[u] = tot;\n\te[tot].cap = cap, e[tot].cost = cost;\n\te[++ tot].to = u, e[tot].nxt = head[v], head[v] = tot;\n\te[tot].cap = 0, e[tot].cost = -cost;\n}\n\nbool SPFA() {\n\tmemset(vis, 0, sizeof vis);\n\tmemset(dis, 0x3f, sizeof dis);\n\tmemset(mark, 0, sizeof mark);\n\tmemcpy(cur, head, sizeof cur);\n\tdis[s] = 0;\n\tQ.push(s);\n\twhile (Q.size()) {\n\t\tint u(Q.front());\n\t\tQ.pop();\n\t\tmark[u] = false;\n\t\tfor (int i(head[u]); i; i = e[i].nxt) {\n\t\t\tint v(e[i].to);\n\t\t\tif (e[i].cap && dis[u] + e[i].cost < dis[v]) {\n\t\t\t\tdis[v] = dis[u] + e[i].cost;\n\t\t\t\tif (!mark[v]) Q.push(v), mark[v] = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t] < INF;\n}\n\nint dfs(const int u, const int flow) {\n\tif (u == t) return flow;\n\tvis[u] = true;\n\tint tmp(0), used(0);\n\tfor (int i(cur[u]); i; i = e[i].nxt) {\n\t\tcur[u] = i;\n\t\tif (e[i].cap && dis[u] + e[i].cost == dis[e[i].to] && !vis[e[i].to]) {\n\t\t\tint v(e[i].to);\n\t\t\tif (tmp = dfs(v, min(flow - used, e[i].cap))) {\n\t\t\t\te[i].cap -= tmp, e[i ^ 1].cap += tmp, used += tmp;\n\t\t\t\tif (used == flow) return used;\n\t\t\t}\n\t\t}\n\t}\n\tif (!used) dis[u] = 0;\n\treturn used;\n}\n\nint Dinic() {\n\tint Mincost(0);\n\twhile (SPFA()) Mincost += dis[t] * dfs(s, INF);\n\treturn Mincost;\n}\n\nint main() {\n\tint n, m, k, ed;\n\tscanf(\"%d%d%d%d\", &n, &m, &k, &ed);\n\tfor (int i(1); i <= n; ++ i)\n\tfor (int j(1); j <= n; ++ j) scanf(\"%d\", &tme[i][j]);\n\tfor (int i(1); i <= n; ++ i)\n\tfor (int j(1); j <= n; ++ j) scanf(\"%d\", &f[i][j]);\n\tfor (int i(1); i <= m; ++ i)\n\t\tscanf(\"%d%d%d%d%d\", a + i, b + i, S + i, T + i, c + i), ++ a[i], ++ b[i];\n\ts = 0, t = 2 * m + 2;\n\tfor (int i(1); i <= m; ++ i) {\n\t\tAddEdge(i + 1, i + m + 1, 1, -c[i]);\n\t\tif (tme[1][a[i]] <= S[i]) AddEdge(1, i + 1, 1, f[1][a[i]]);\n\t\tif (T[i] + tme[b[i]][1] <= ed) AddEdge(i + 1 + m, t, 1, f[b[i]][1]);\n\t\tfor (int j(1); j <= m; ++ j)\n\t\t\tif (i != j && T[i] + tme[b[i]][a[j]] <= S[j])\n\t\t\t\tAddEdge(i + m + 1, j + 1, 1, f[b[i]][a[j]]);\n\t}\n\tAddEdge(0, 1, k, 0);\n\tprintf(\"%d\", -Dinic());\n\treturn 0;\n}\n```",
        "postTime": 1619530528,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010P4452 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u822a\u73ed\u5b89\u6392\u3011"
    },
    {
        "content": "## \u7b80\u8981\u9898\u610f\n\u6709 $ n $ \u4e2a\u673a\u573a\uff0c$ m $ \u4e2a\u8ba2\u5355\uff0c$ k $ \u67b6\u98de\u673a\uff0c\u6bcf\u4e2a\u8ba2\u5355\u8981\u6c42\u5728 $ s_i $ \u65f6\u4ece $ a_i $ \u673a\u573a\u51fa\u53d1\uff0c$ t_i $ \u65f6\u5230\u8fbe $ b_i $ \u673a\u573a\uff0c\u53ef\u4ee5\u5f97\u5230 $ c_i $ \u7684\u62a5\u916c\uff0c\u8981\u6c42\u98de\u673a\u5728 $ 0 $ \u65f6\u53ef\u4ee5\u4ece\u57fa\u5730 $ 0 $ \u53f7\u673a\u573a\u51fa\u53d1\uff0c\u5728 $ T $ \u65f6\u56de\u5230 $ 0 $ \u53f7\u673a\u573a\uff0c\u6c42\u6700\u5927\u6536\u76ca\u3002\n## \u89e3\u6cd5\n\u5bf9\u4e8e\u8fd9\u4e2a\u56fe\u5982\u679c\u53ea\u6709\u4e00\u67b6\u98de\u673a\uff0c\u53ef\u4ee5\u60f3\u5230\u5206\u5c42\u56fe\uff0c\u4f46\u662f\u5982\u679c\u7b80\u5355\u5730\u7528\u5206\u5c42\u56fe\u8dd1\u7f51\u7edc\u6d41\uff0c\u590d\u6742\u5ea6\u4f1a\u5403\u4e0d\u6d88\uff08\u867d\u7136\u8dd1\u4e0d\u6ee1\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u8fd8\u662f\u5728\u90a3\u91cc\u7684\uff09\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u65e0\u8bba\u600e\u4e48\u6837\uff0c\u6709\u7528\u7684\u65f6\u95f4\u70b9\u662f\u8fdc\u5c11\u4e8e\u603b\u65f6\u95f4\u7684\uff0c\u800c\u4e14\u9898\u76ee\u4fdd\u8bc1\u4e86\u4e24\u70b9\u4e4b\u95f4\u4e4b\u95f4\u8d70\u662f\u6700\u5feb\u7684\uff0c\u6240\u4ee5\u628a\u6bcf\u4e2a\u8ba2\u5355\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\u62ff\u51fa\u6765\uff0c\u7528\u7c7b\u4f3c\u79bb\u6563\u5316\u7684\u64cd\u4f5c\uff0c\u5728\u8ba2\u5355\u7684\u65f6\u95f4\u8282\u70b9\u4e2d\u5efa\u70b9\uff0c\u4e00\u4e2a\u4efb\u52a1\u8d77\u70b9\u548c\u7ec8\u70b9\u95f4\u5efa\u8fde\u5bb9\u91cf $ 1 $ ,\u8d39\u7528 $ c_i $ \u7684\u8fb9\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u5411\u6e90\u6c47\u70b9\u548c\u53ef\u5230\u8fbe\u7684\u4efb\u52a1\u70b9\u8fde\u5bb9\u91cf\u65e0\u9650\uff0c\u65e0\u8d39\u7528\u7684\u8fb9\uff0c\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u6ce8\u610f\uff1a\u53ea\u8981\u65f6\u95f4\u5141\u8bb8\uff0c\u8ba2\u5355\u4e00\u5b9a\u8981\u63a5\uff0c\u54ea\u6015\u4e8f\u672c\uff1b\u5982\u679c\u6267\u884c\u8ba2\u5355\u662f\u6bd4\u7a7a\u8f7d\u98de\u5f97\u5feb\u4e5f\u662f\u5141\u8bb8\u7684\uff0c\u671f\u95f4\u7684\u98de\u884c\u8d39\u7528\u4e0d\u8ba1\uff0c\u662f\u7eaf\u5229\u6da6\u3002\n``` c\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5,M=1e6+5;\nint n,m,k,T,tt[205][205],f[205][205];\nint ver[M],ne[M],val[M],head[N],tot=1,dis[N],cost[M],incf[N],pre[N];\nint s=0,t,ans;bool vis[N];\nstruct node\n{\n\tint a,b,s,t,c;\n}q[205];\nvoid add(int x,int y,int z,int c)\n{\n\tver[++tot]=y;ne[tot]=head[x];head[x]=tot;val[tot]=z;cost[tot]=c;\n\tver[++tot]=x;ne[tot]=head[y];head[y]=tot;val[tot]=0;cost[tot]=-c;\n}\nbool spfa()\n{\n\tmemset(dis,-0x3f,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(incf,0,sizeof(incf));\n\tqueue<int> q;q.push(t+1);dis[t+1]=0;incf[t+1]=0x3f3f3f3f;\n\twhile(q.size())\n\t{\n\t\tint x=q.front();q.pop();vis[x]=0;\n\t\tfor(int i=head[x];i;i=ne[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tif(!val[i]) continue;\n\t\t\tif(dis[y]<dis[x]+cost[i])\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+cost[i];\n\t\t\t\tincf[y]=min(incf[x],val[i]);\n\t\t\t\tpre[y]=i;\n\t\t\t\tif(!vis[y]) vis[y]=1,q.push(y);\n\t\t\t}\n\t\t}\n\t}\n\tif(incf[t]) return 1;\n\treturn 0;\n}\nvoid update()\n{\n\tint x=t;\n\twhile(x!=t+1)\n\t{\n\t\tint i=pre[x];\n\t\tval[i]-=incf[t];val[i^1]+=incf[t];\n\t\tx=ver[i^1];\n\t}\n\tans+=dis[t]*incf[t];\n}\nint main()\n{\n\tscanf(\"%d%d%d%d\",&n,&m,&k,&T);\n\tfor(int i=0;i<n;i++)\n\t\tfor(int j=0;j<n;j++) scanf(\"%d\",&tt[i][j]);\n\tfor(int i=0;i<n;i++)\n\t\tfor(int j=0;j<n;j++) scanf(\"%d\",&f[i][j]);\n\ts=0;t=2*m+1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d%d%d\",&q[i].a,&q[i].b,&q[i].s,&q[i].t,&q[i].c);\n\t\tif(q[i].t+tt[q[i].b][0]<=T) add(i+m,t,1e9,-f[q[i].b][0]);\n\t\telse continue;\n\t\tif(tt[0][q[i].a]<=q[i].s) add(s,i,1e9,-f[0][q[i].a]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tadd(i,i+m,1,q[i].c);\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(i==j) continue;\n\t\t\tif(q[i].t+tt[q[i].b][q[j].a]<=q[j].s)\n\t\t\t{\n\t\t\t\tadd(i+m,j,1e9,-f[q[i].b][q[j].a]);\n\t\t\t\tadd(i,j,1e9,-f[q[i].b][q[j].a]);\n\t\t\t}\n\t\t}\n\t}\n\tadd(t+1,s,k,0);\n\twhile(spfa()) update();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1664087017,
        "uid": 300710,
        "name": "xuyuansu",
        "ccfLevel": 0,
        "title": "P4452 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u822a\u73ed\u5b89\u6392"
    },
    {
        "content": "\u6807\u51c6\u7684\u8d39\u7528\u6d41\n\u5efa\u8fb9\u8981\u90bb\u4e24\u4e2a\u673a\u573a\u90fd\u8981\u8fde\u8d39\u7528\u4e3ast[i].y\u7684\u8fb9\uff0c\n\u5728\u5224\u65ad\u65f6\u95f4\u662f\u5426\u5141\u8bb8\u7684\u60c5\u51b5\u4e0bm^2\u5efa\u8fb9\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u677f\u5b50\u4e86\n```cpp\n#include<cstdio> \n#include<cstring>  \n#include<algorithm> \n#include<iostream> \n#include<queue> \nusing namespace std; \n#define inf 2<<16 \n#define N 505 \nint tot=2; \nint n,m,k,tim; \nstruct edge{ \n    int next,to,cap,val; \n}G[N*N]; \nstruct node{ \n    int q,w,e,r,y; \n} ST[N<<4]; \nint mcost; \nbool used[N]; \nint head[N],dist[N],prem[N],xb[N],flow[N]; \nvoid addedge(int a,int b,int c,int d) \n{ \n    G[tot].to=b; \n    G[tot].next=head[a]; \n    G[tot].val=d; \n    G[tot].cap=c; \n    head[a]=tot++; \n} \nbool spfa(int o,int t) \n{ \n    memset(used,0,sizeof(used)); \n    memset(xb,-1,sizeof(prem)); \n    memset(dist,0x3f,sizeof(dist)); \n    prem[o]=0,dist[o]=0,flow[o]=inf,used[o]=1; \n    queue<int> Q; \n    Q.push(o); \n    while(!Q.empty()) \n    { \n        int tmp=Q.front(); \n        used[tmp]=0; \n        Q.pop(); \n        for(int i=head[tmp];~i;i=G[i].next) \n        { \n            int tt=G[i].to; \n            if(dist[tt]>dist[tmp]+G[i].val&&G[i].cap) \n            { \n                dist[tt]=dist[tmp]+G[i].val; \n                prem[tt]=tmp; \n                xb[tt]=i; \n                flow[tt]=min(flow[tmp],G[i].cap); \n                if(!used[tt]) \n                used[tt]=1,Q.push(tt); \n            } \n        } \n    } \n     if(dist[t]>=0x3f3f3f3f) \n     return 0; \n     return 1;   \n} \nvoid MCMF(int s,int t) \n{ \n    while(spfa(s,t)) \n    { \n        int k=t; \n        while(k!=s) \n        { \n            G[xb[k]].cap-=flow[t]; \n            G[xb[k]^1].cap+=flow[t]; \n            k=prem[k]; \n        } \n        mcost+=dist[t]*flow[t]; \n    }  \n} \nint x; \nint t[N][N]; \nint c[N][N]; \nint main() \n{ \n    memset(head,-1,sizeof(head)); \n    scanf(\"%d %d %d %d\",&n,&m,&k,&tim); \n   int S=0,T=m*2+2; \n       for(int i=0;i<n;i++) \n        for(int j=0;j<n;j++) \n     scanf(\"%d\",&t[i][j]); \n      for(int i=0;i<n;i++) \n       for(int j=0;j<n;j++) \n       scanf(\"%d\",&c[i][j]); \n     for(int i=1;i<=m;i++) \n  scanf(\"%d %d %d %d %d\",&ST[i].q,&ST[i].w,&ST[i].e,&ST[i].r,&ST[i].y); \n        for(int i=1;i<=m;i++) \n        { \n            addedge(i*2,i*2+1,1,-ST[i].y); \n            addedge(i*2+1,i*2,0,ST[i].y);        \n        for(int j=1;j<=m;j++) \n         if(ST[i].r+t[ST[i].w][ST[j].q]<=ST[j].e) \n    addedge(i*2+1,j*2,inf,c[ST[i].w][ST[j].q]),addedge(j*2,i*2+1,0,-c[ST[i].w][ST[j].q]); \n         if(t[0][ST[i].q]<=ST[i].e)  \n             addedge(S+1,i*2,inf,c[0][ST[i].q]),addedge(i*2,S+1,0,-c[0][ST[i].q]); \n        if(ST[i].r+t[ST[i].w][0]<=tim)  \n         addedge(i*2+1,T,inf,c[ST[i].w][0]),addedge(T,i*2+1,0,-c[ST[i].w][0]);  \n             } \n         addedge(S,S+1,k,0); \n        addedge(S+1,S,0,0); \n       MCMF(S,T); \n    printf(\"%d\",-mcost);              \n}\n```",
        "postTime": 1523883904,
        "uid": 31826,
        "name": "RetrO",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4452 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u822a\u73ed\u5b89\u6392\u3011"
    },
    {
        "content": "\u88f8\u7684\u62c6\u70b9\u4e0e\u8d39\u7528\u6d41\n\n\u4f46\u6211\u6000\u7591\u8fd9\u9053\u9898\u6076\u610f\u8bc4\u5206\uff0c\u600e\u4e48\u8bf4\u4e5f\u5e94\u8be5\u662f\u63d0\u9ad8+/\u7701\u9009-\u5427\uff1f\n\u4ee3\u7801\u653e\u9001\u65f6\u523b\uff1a\n```\n#include <bits/stdc++.h>\n#define res register int\n#define N 1005 \n#define inf 0x3f3f3f3f\nusing namespace std;\nstruct papa{\n\tint w,c,next,to;\n}e[N*N*2]; \nbool vis[N];\nint n,m,k,tim,tot=1,t[N][N],f[N][N],dis[N],d[N],a[N],b[N],st[N],ed[N],earn[N],per[N],maxflow,ans,flow[N];\nqueue<int> q;\ninline int read()\n{\n    int X=0,w=0; char ch=0;\n    while(!isdigit(ch)) {w|=ch=='-';ch=getchar();}\n    while(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n    return w?-X:X;\n}\ninline void add(int x,int y,int we,int cost){\n\te[++tot].next=d[x];\n\td[x]=tot;\n\te[tot].to=y;\n\te[tot].c=cost;\n\te[tot].w=we;\n}\ninline bool spfa(int s,int t){\n\twhile(!q.empty()) q.pop();\n\tmemset(dis,inf,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tq.push(s);\n\tdis[s]=0;\n\tvis[s]=1;\n\tflow[s]=inf;\n\twhile(!q.empty()){\n\t\tint now=q.front();\n\t\tvis[now]=0;\n\t\tq.pop();\n\t\tfor(res i=d[now];i;i=e[i].next)\n\t\t  if(e[i].w&&dis[e[i].to]>dis[now]+e[i].c){\n\t\t  \tdis[e[i].to]=dis[now]+e[i].c;\n\t\t  \tflow[e[i].to]=min(flow[now],e[i].w);\n\t\t  \tper[e[i].to]=i;\n\t\t  \tif(!vis[e[i].to]){\n\t\t  \t\tvis[e[i].to]=1;\n\t\t  \t\tq.push(e[i].to);\n\t\t\t  }\n\t\t  }\n\t}\n\treturn dis[t]!=inf;\n}\ninline void updata(int s,int t){\n\tint x=t;\n\twhile(x!=s){\n\t\tint i=per[x];\n\t\te[i].w-=flow[t];\n\t\te[i^1].w+=flow[t];\n\t\tx=e[i^1].to;\n\t}\n\tmaxflow+=flow[t];\n\tans+=dis[t]*flow[t];\n}\ninline void EK(int s,int t){\n\twhile(spfa(s,t))\n\t  updata(s,t);\n}\nint main(){\n\tn=read(),m=read(),k=read(),tim=read();\n\tfor(res i=0;i<n;i++)\n\t  for(res j=0;j<n;j++)\n\t    t[i][j]=read();\n\tfor(res i=0;i<n;i++)\n\t  for(res j=0;j<n;j++)\n\t    f[i][j]=read();\n\tfor(res i=1;i<=m;i++){a[i]=read(),b[i]=read(),st[i]=read(),ed[i]=read(),earn[i]=read();}\n\tfor(res i=1;i<=m;i++){\n\t\tadd(i<<1,(i<<1)+1,1,-earn[i]);\n\t\tadd((i<<1)+1,i<<1,0,earn[i]);\n\t\tfor(res j=1;j<=m;j++)\n\t\t  if(ed[i]+t[b[i]][a[j]]<=st[j])\n\t\t    add((i<<1)+1,j<<1,inf,f[b[i]][a[j]]),add(j<<1,(i<<1)+1,0,-f[b[i]][a[j]]);\n\t\tif(t[0][a[i]]<=st[i])\n\t\t  add(0+1,i<<1,inf,f[0][a[i]]),add(i<<1,0+1,0,-f[0][a[i]]);\n\t    if(t[b[i]][0]+ed[i]<=tim)\n\t      add((i<<1)+1,(n<<1)+2,inf,f[b[i]][0]),add((n<<1)+2,(i<<1)+1,0,-f[b[i]][0]);\n\t}\n\tadd(0,1,k,0);\n\tadd(1,0,0,0);\n\tEK(0,(n<<1)+2);\n\tprintf(\"%d\",-ans);\n}\n```",
        "postTime": 1530790397,
        "uid": 26848,
        "name": "miaokehao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4452 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u822a\u73ed\u5b89\u6392\u3011"
    }
]