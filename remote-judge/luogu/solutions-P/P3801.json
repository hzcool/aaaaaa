[
    {
        "content": "\n\n1<=n,m<=100000\u2026\u2026\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u5e9f\u4e86\u3002\n\n\u7136\u800c\u518d\u770b\u770b\u8fd9\u4e2a\u9898\uff0c\u8d77\u59cb\u70b9\u6ca1\u6709\u7ea2\u96fe\uff0c\u5c31\u50cf\uff1a\n\n![1ge](http://img.blog.csdn.net/20180111160236988?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfNDEyNTI4OTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n\u4e24\u4e2a\u91cd\u590d\u7684\u4f1a\u62b5\u6d88\uff0c\u4fbf\u662f\u8fd9\u6837\uff1a\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](http://img.blog.csdn.net/20180111160907273?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfNDEyNTI4OTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n\u90a3\u4e48\uff0c\u7ad9\u7684\u4f4d\u7f6e\u53ef\u5426\u5f53\u505a\u62b5\u6d88\u6389\u7684\u5462\uff1f\n\n\u4e0a\u8fb9\u56fe\u4e2d\u7684\u7ea2\u96fe\u6570\u91cf\uff0c\u53ef\u4ee5\u662f\uff1a\n\n\u653e\u8fc7\u7684\u884c\u6570\u00d7\u884c\u957f\u5ea6+\u653e\u8fc7\u7684\u5217\u6570\u00d7\u5217\u957f\u5ea6-\u62b5\u6d88\u5757\u6570\n\n\u884c\u3001\u5217\u7684\u957f\u5ea6\u5c31\u662f\u9898\u4e2dm\uff0cn\uff0c\u62b5\u6d88\u5757\u6570\u5462\uff1f\n\n\n\u5728\u7b97\u884c\u5217\u65f6\uff0c\u6bcf\u4e00\u4e2a\u4ea4\u53c9\u70b9\u662f\u8bb0\u4e86\u4e24\u6b21\u7684\u3002\u56fe\u4e2d\u6709\u591a\u5c11\u4ea4\u53c9\u70b9\u5462\uff1f\u8bb0\u653e\u8fc7\u7684\u884c\u6570x\uff0c\u653e\u8fc7\u7684\u5217\u6570y\uff0c\u6bcf\u884c\u6bcf\u5217\u4ea4\u53c91\u4e2a\uff0c\u62b5\u6d88\u5757\u6570\u5c31\u662f2xy\u3002\n\n\n\u5230\u73b0\u5728\uff0c\u6c42\u51fax\uff0cy\u5c31\u62e5\u6709\u4e86\u4e00\u5207\uff01\n\n\n\u884c\u5217\u6709\u591a\u5c11\uff1f\u533a\u95f4\u6c42\u548c\u3002\u6bcf\u6b21\u653e\u7ea2\u96fe\uff1f\u5355\u70b9\u4fee\u6539\u3002\u6807\u51c6\u7ebf\u6bb5\u6811\u3002\n\n\u5f53\u7ad9\u5728\u653e\u8fc7\u7684\u90a3\u884c\uff08\u5217\uff09\u4e0a\u65f6\uff0c\u6574\u4e00\u884c\u5c31\u6d88\u4e86\u3002\u5728\u4e0a\u56fe\u4e2d\uff0c\u5047\u8bbe\u5728 ( 4 , 3 )\u70b9\u653e\u4e00\u6b21\uff0c\u53d8\u6210\uff1a\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](http://img.blog.csdn.net/20180111163304494?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfNDEyNTI4OTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\u7ad9\u7684\u90a3\u70b9\u672c\u6765\u5c31\u7ea2\uff0c\u653e\u4e00\u4e0b\u4e0d\u5f71\u54cd\u3002\u800c\u539f\u6765\u767d\u7684\u53d8\u7ea2\u4e86\uff0c\u4e0d\u5c31\u662f\u6ca1\u653e\u90a3\u4e00\u884c\u5417\uff01\n\n\u82e5\u662f\u7ad9\u5728\u4ee5\u524d\u7ad9\u8fc7\u7684\u70b9\u4e0a\uff0c\u540c\u6837\u7684\u9053\u7406\u3002\n\n\n\u4fee\u6539\u65f6\u76f4\u63a5\u5f02\u6216\uff0c0\u653911\u65390\u5b8c\u4e8b\u3002\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define now int l,int r,int num\n#define ls l,l+r>>1,num<<1\n#define rs (l+r>>1)+1,r,num<<1|1\nusing namespace std;\nint y[262150],x[262150];\nint x1,y1,x2,y2;\nint n,m,q;\nvoid update(int *a,int num){\n    a[num]=a[num<<1]+a[num<<1|1];\n    }\nvoid change(int *a,int p,now){\n    if(l==r){\n        a[num]^=1;\n        return;\n        }\n    int mid=l+r>>1;\n    if(p<=mid)change(a,p,ls);\n    else change(a,p,rs);\n    update(a,num);\n    }\n\nint que(int *a,int al,int ar,now){\n    if(al<=l&&r<=ar)\n        return a[num];\n    int mid=l+r>>1,ans=0;\n    if(al<=mid)ans+=que(a,al,ar,ls);\n    if(mid<ar)ans+=que(a,al,ar,rs);\n    return ans;\n    }\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&q);\n    while(q--){\n        int cmd;\n        scanf(\"%d\",&cmd);\n        if(cmd==1){\n            int x0,y0;\n            scanf(\"%d%d\",&x0,&y0);\n            change(x,x0,1,n,1);\n            change(y,y0,1,m,1);\n            }\n        else{\n            scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n            long long xx=que(x,x1,x2,1,n,1),\n                      yy=que(y,y1,y2,1,m,1);\n            printf(\"%lld\\n\",xx*(long long)(y2-y1+1)+\n                    yy*(long long)(x2-x1+1)-\n                    (long long)(xx*yy<<1));\n            }\n        }\n    return 0;\n    }\n```\n\u61d2\u5f97\u590d\u5236\u4e00\u904d\u518d\u6539\u4e86\uff0c\u76f4\u63a5\u4f20\u6570\u7ec4\u6307\u9488\u3002\n\n\u8bb0\u5f97\u5f00long long\uff01\u5341\u4e07\u00d7\u5341\u4e07\u7206int\u4e86\uff01\n",
        "postTime": 1515660258,
        "uid": 50053,
        "name": "Hurricane\u3001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u540d\u79f0\u5c31\u7ed9\u4eba\u4e00\u79cd\u6ee1\u6ee1\u76849961\u7684\u611f\u89c9\u600e\u4e48\u56de\u4e8b\u554a\u2026\u2026ob\u6930\u53f6\u592a\u6076\u610f\u4e86\n\n---\n\n> \u5982\u679c\u4e24\u9635\u7ea2\u96fe\u78b0\u649e\uff0c\u5219\u4f1a\u56e0\u4e3a\u5bc6\u5ea6\u8fc7\u5927\u800c\u6c89\u964d\u6d88\u5931\u3002\n\n\u8fd9\u4e00\u53e5\u8bdd\u8ba9\u4eba\u8054\u60f3\u5230\u5f02\u6216\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6b63\u6574\u6570$a$\uff0c$a \\bigoplus a =0$\n\n\u7136\u540e\u6700\u540e\u56e0\u4e3a\u7edf\u8ba1\u7684\u53c8\u662f\u4e2a\u533a\u95f4\u4fe1\u606f\u4ec0\u4e48\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f88\u81ea\u7136\u5730\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u89e3\u51b3\u3002\n\n\u89c2\u5bdf\u5230\u6570\u636e\u8303\u56f4\u662f$10^5$\uff0c\u56e0\u6b64\u4e0d\u80fd\u7528\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff0c\u90a3\u4e48\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5f00\u4e24\u4e2a\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\u3002\u8fd9\u662f\u56e0\u4e3a\u7ea2\u96fe\u7684\u6570\u91cf\u53ef\u4ee5\u7528\u5bb9\u65a5\u539f\u7406\u6c42\u5f97\u3002\u8ba1\u7b97\u65b9\u5f0f\u4e3a\uff1a\u653e\u8fc7\u7684\u884c\u6570$\\times $\u884c\u957f\u5ea6$+$\u653e\u8fc7\u7684\u5217\u6570$\\times $\u5217\u957f\u5ea6$-$\u91cd\u590d\u8ba1\u7b97\u7684\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u76f8\u5f53\u4e8e\u6211\u4eec\u8981\u7528\u4e24\u4e2a\u7ebf\u6bb5\u6811\uff0c\u4e00\u4e2a\u7ef4\u62a4\u884c\u4e0a\u9762\u7684\u7ea2\u96fe\uff0c\u4e00\u4e2a\u7ef4\u62a4\u5217\u4e0a\u9762\u7684\u7ea2\u96fe\u3002\u6bcf\u4e00\u6b21\u4fee\u6539\u5c31\u662f\u628a\u503c$\\bigoplus$ 1\uff0c\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\u533a\u95f4\u6c42\u548c\u7684\u7ebf\u6bb5\u6811\uff0c\u5982\u679c\u5404\u4f4d\u5de8\u4f6c\u9ad8\u5174\u7684\u8bdd\u4e5f\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u89e3\u51b3\u3002\u4e0d\u8fc7\u6211\u6bd4\u8f83\u83dc\u3002\n\n\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u7ebf\u6bb5\u6811\u7684\u529f\u80fd\u57fa\u672c\u4e00\u6837\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c01\u88c5\u5230\u4e00\u4e2astruct\u91cc\u9762\uff0c\u51cf\u5c11\u4e00\u534a\u7684\u4ee3\u7801\u91cf\uff0c\u4f60\u503c\u5f97\u62e5\u6709\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <cctype>\n\nusing namespace std;\n\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\n\nint n,m,q;\n\nstruct segment_tree\n{\n\tstruct treenode\n\t{\n\t\tint l,r;\n\t\tlong long val;\n\t}t[100050<<2];\n\t\n\tinline void build(int id,int l,int r)\n\t{\n\t\tt[id].l=l;\n\t\tt[id].r=r;\n\t\tif (l==r)\n\t\t\treturn;\n\t\tint mid=(l+r)>>1;\n\t\tbuild(id<<1,l,mid);\n\t\tbuild(id<<1|1,mid+1,r);\n\t}\n\t\n\tinline void update(int id,int pos)\n\t{\n\t\tif (t[id].l==t[id].r)\n\t\t{\n\t\t\tt[id].val^=1;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(t[id].l+t[id].r)>>1;\n\t\tif (pos<=mid)\n\t\t\tupdate(id<<1,pos);\n\t\telse\n\t\t\tupdate(id<<1|1,pos);\n\t\tt[id].val=t[id<<1].val+t[id<<1|1].val;\n\t}\n\t\n\tinline long long query(int id,int l,int r)\n\t{\n\t\tif (l==t[id].l && r==t[id].r)\n\t\t\treturn t[id].val;\n\t\tint mid=(t[id].l+t[id].r)>>1;\n\t\tif (r<=mid)\n\t\t\treturn query(id<<1,l,r);\n\t\telse if (l>mid)\n\t\t\treturn query(id<<1|1,l,r);\n\t\telse return query(id<<1,l,mid)+query(id<<1|1,mid+1,r);\n\t}\n\t\n}t1,t2;\n\nint main()\n{\n\tn=read(),m=read(),q=read();\n\tt1.build(1,1,n);\n\tt2.build(1,1,m);\n\twhile (q--)\n\t{\n\t\tint c=read(),x=read(),y=read();\n\t\tif (c==1)\n\t\t{\n\t\t\tt1.update(1,x);\n\t\t\tt2.update(1,y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t#define x1 Syameimaru_Aya\n\t\t\t#define y1 Himekaidou_Hatate\n\t\t\t//\u9632\u6b62\u4e00\u4e9b\u5947\u602a\u7684\u53d8\u91cf\u540d\u5b57\u51b2\u7a81\u3002\u6211\u5c31\u7528\u6211\u8001\u5a46\u7684\u540d\u5b57\u4e86\uff08\u62b1\u8d77\u8bb0\u8005\u7ec4\u5c31\u8dd1\uff09\n\t\t\tint x1=read(),y1=read();\n\t\t\tlong long res1=t1.query(1,x,x1);\n\t\t\tlong long res2=t2.query(1,y,y1);\n\t\t\tprintf(\"%lld\\n\",res1*(y1-y+1-res2)+res2*(x1-x+1-res1));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1543151261,
        "uid": 8457,
        "name": "chen_zhe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "\u697c\u4e0a\u5df2\u7ecf\u8bf4\u5f97\u5f88\u660e\u767d\u4e86\uff0c\u8fd9\u91cc\u63d0\u4f9b\u6811\u72b6\u6570\u7ec4\u7684\u505a\u6cd5\u3002\n\n\u8fd9\u91cc\u7ef4\u62a4\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff08\u4e00\u6a2a\u4e00\u7ad6\uff09\u5bf9\u4e8e\u533a\u95f4\u7ea2\u96fe\u6570\u91cf\u3002\n\n\u540c\u65f6\u5355\u70b9\u4e5f\u8981\u5b58\n\n\u6700\u540e\u7528\u4e00\u4e0b\u5bb9\u65a5\uff0c\u6ce8\u610f\u8981\u5f00long long(10^5 \\* 10^5 > 2^31 - 1)\n\n\n\n\n\n\n    \n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 100005\nint n,m,q;\nint dx[MAXN],dy[MAXN];//\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4 \nint ax[MAXN],ay[MAXN];//\u5355\u70b9\u7684\u5b58\u653e\uff08\u65b9\u4fbf\u4fee\u6539\uff09\nint lowbit(int x)\n{\n    return x&(x^(x-1));\n}\nvoid gai(int *c,int x,int y)//\u5355\u70b9\u4fee\u6539 \n{\n    while(x <= *c)\n    {\n        *(c+x) += y;\n        x += lowbit(x);\n    }\n}\nint qiu(int *c,int x)//\u533a\u95f4\u6c42\u503c \n{\n    int ans = 0;\n    while(x >= 1)\n    {\n        ans += *(c+x);\n        x -= lowbit(x);    \n    }    \n    return ans;\n}\nvoid huan(int x,int y) \n{\n    if(ax[x] == 1)\n    {\n        ax[x] = 0;\n        gai(dx,x,-1);\n    }\n    else\n    {\n        ax[x] = 1;\n        gai(dx,x,1);\n    }\n    if(ay[y] == 1)\n    {\n        ay[y] = 0;\n        gai(dy,y,-1); \n    }\n    else\n    {\n        ay[y] = 1;\n        gai(dy,y,1);\n    }\n}\nlong long suan(int x1,int y1,int x2,int y2)//\u8ba1\u7b97\u6709\u7ea2\u96fe\u7684\u5730\u65b9 \n{\n    int s1 = qiu(dx,x2) - qiu(dx,x1 - 1);\n    int s2 = qiu(dy,y2) - qiu(dy,y1 - 1);\n    long long ans = (long long)s1*(y2-y1+1) + (long long)s2*(x2-x1+1) - s1*s2*2;\n    return ans; \n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&q);\n    int cmd,x,y,x2,y2;\n    dx[0] = n;\n    dy[0] = m; \n    for(int i = 1; i <= q; i ++)\n    {\n        scanf(\"%d\",&cmd);\n        if(cmd == 1)\n        {\n            scanf(\"%d%d\",&x,&y);\n            huan(x,y);\n        }\n        else\n        {\n            scanf(\"%d%d%d%d\",&x,&y,&x2,&y2);\n            cout<<suan(x,y,x2,y2)<<endl;\n        }\n    }\n    return 0;\n } \n\n```",
        "postTime": 1503551644,
        "uid": 17850,
        "name": "ChthollyTree",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5462\u5c31\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811+\u5bb9\u65a5\u539f\u7406\u7684\u9898\uff0c~~\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u6211\u4e5f\u4e0d\u4f1a~~\u8fd9\u4e2a\u9898\u5c31\u662f\u7528\u4e24\u4e2a\u7ebf\u6bb5\u6811\uff0c\u4e00\u9897\u7ebf\u6bb5\u6811\u5c31\u662f\u6c42\u6709\u591a\u5c11\u5217\u88ab\u4fee\u6539\u8fc7\uff0c\u53e6\u4e00\u9897\u7ebf\u6bb5\u6811\u5c31\u662f\u6c42\u6709\u591a\u5c11\u884c\u88ab\u4fee\u6539\u8fc7\uff0c\u6bcf\u6b21\u4fee\u6539\u5c31\u662f\u5c06\u4ed6\u6240\u5728\u7684\u884c\u548c\u5217\u90fd\u4fee\u6539\u4e00\u4e0b\uff0c\u5f53\u8be2\u95ee\u7684\u65f6\u5019\u5c31\u8be2\u95eex1\u5230x2\u7684\u548c\u4e0ey1\u5230y2\u7684\u548c\u7136\u540e\u8fdb\u884c\u5bb9\u65a5\u539f\u7406\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\uff0c\u4ee5\u4e0b\u662f\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nstruct node\n{\n    int l,r;\n    int sum;\n}t1[100001<<6],t2[100001<<6];\n\nvoid pushup1(int tr)\n{\n    t1[tr].sum=t1[tr<<1].sum+t1[tr<<1|1].sum;\n    return;\n}\n\nvoid build1(int l,int r,int tr)\n{\n    t1[tr].l=l;\n    t1[tr].r=r;\n    if(l==r)\n    {\n        t1[tr].sum=0;\n        return;\n    }\n    int mid=l+r>>1;\n    build1(l,mid,tr<<1);\n    build1(mid+1,r,tr<<1|1);\n    pushup1(tr);\n    return;\n}\n\nvoid change1(int l,int r,int tr)\n{\n    if(t1[tr].l==t1[tr].r)\n    {\n        t1[tr].sum^=1;\n        return;\n    }\n    int mid=t1[tr].l+t1[tr].r>>1;\n    if(l<=mid)change1(l,r,tr<<1);\n    else change1(l,r,tr<<1|1);\n    pushup1(tr);\n    return;\n} \n\nint query1(int l,int r,int tr)\n{\n    if(t1[tr].l>=l&&r>=t1[tr].r)\n    {\n        return t1[tr].sum;\n    }\n    int ret=0,mid=t1[tr].l+t1[tr].r>>1;\n    if(l<=mid)ret+=query1(l,r,tr<<1); \n    if(mid<r)ret+=query1(l,r,tr<<1|1);\n    return ret;\n}\n\nvoid pushup2(int tr)\n{\n    t2[tr].sum=t2[tr<<1].sum+t2[tr<<1|1].sum;\n    return;\n}\n\nvoid build2(int l,int r,int tr)\n{\n    t2[tr].l=l;\n    t2[tr].r=r;\n    if(l==r)\n    {\n        t2[tr].sum=0;\n        return;\n    }\n    int mid=l+r>>1;\n    build2(l,mid,tr<<1);\n    build2(mid+1,r,tr<<1|1);\n    pushup2(tr);\n    return;\n}\n\nvoid change2(int l,int r,int tr)\n{\n    if(t2[tr].l==t2[tr].r)\n    {\n        t2[tr].sum^=1;\n        return;\n    }\n    int mid=t2[tr].l+t2[tr].r>>1;\n    if(l<=mid)change2(l,r,tr<<1);\n    else change2(l,r,tr<<1|1);\n    pushup2(tr);\n    return;\n} \n\nint query2(int l,int r,int tr)\n{\n    if(t2[tr].l>=l&&r>=t2[tr].r)\n    {\n        return t2[tr].sum;\n    }\n    int ret=0,mid=t2[tr].l+t2[tr].r>>1;\n    if(l<=mid)ret+=query2(l,r,tr<<1); \n    if(mid<r)ret+=query2(l,r,tr<<1|1);\n    return ret;\n}\nint main()\n{\n    long long n,m,q;\n    cin>>n>>m>>q;\n    build1(1,n,1);\n    build2(1,m,1);\n    for(int i=1;i<=q;i++)\n    {\n        int zb;\n        scanf(\"%d\",&zb);\n        if(zb==1)\n        {\n            long long x,y;\n            cin>>x>>y;\n            //scanf(\"%d%d\",&x,&y);\n            change1(x,x,1);\n            change2(y,y,1);\n        }\n        else\n        {\n            long long x1,x2,y1,y2;\n            cin>>x1>>y1>>x2>>y2;\n            //scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n            long long a1,a2;\n            a1=query1(x1,x2,1);\n            a2=query2(y1,y2,1);\n            cout<<a1*(long long)(y2-y1+1)+a2*(long long)(x2-x1+1)-(long long)(a1*a2<<1)<<endl;\n        }\n    }\n}\n```\n\n\n\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u770b\u8d77\u6765\u5f88\u6613\u61c2\uff0c\u6c42\u8fc7",
        "postTime": 1537838127,
        "uid": 9169,
        "name": "C_Zn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "\u4e24\u68f5\u7ebf\u6bb5\u6811\u5206\u522b\u7ef4\u62a4\u6bcf\u884c\uff0c\u6bcf\u5217\u6709\u6ca1\u6709\u91ca\u653e\u8fc7\u7ea2\u96fe\u3002\n\n\u7531\u4e8e\u4e24\u7247\u7ea2\u96fe\u4f1a\u62b5\u6d88\uff0c\u76f8\u5f53\u4e8e\u6bcf\u6b21\u4fee\u6539\uff0c\u5bf9\u5e94\u884c^=1,\u5bf9\u5e94\u5217^=1\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\uff0c\u8bbe\u884c\u8303\u56f4\u4e3a[l1,r1],\u5217\u8303\u56f4\u4e3a[l2,r2],\u67e5\u8be2\u5230\u91ca\u653e\u8fc7\u7ea2\u96fe\u7684\u884c\u6570\u91cf\u4e3an1,\u91ca\u653e\u8fc7\u7ea2\u96fe\u7684\u5217\u6570\u91cf\u4e3an2\n\n\u5219\u6839\u636e\u5bb9\u65a5\u539f\u7406\uff0c\u7b54\u6848\u4e3an2\\*(r1-l1+1)+n1\\*(r2-l2+1)-n1\\*n2\\*2\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define lson (rt<<1)\n#define rson ((rt<<1)|1)\n#define mid ((l+r)>>1)\nusing namespace std;\nint sumx[400011],sumy[400011];\nint n,m,q,op,px1,py1,px2,py2;\nvoid insx(int rt,int l,int r,int x)\n{\n    if(l==r)\n    {\n        sumx[rt]^=1;\n        return;\n    }\n    if(x<=mid)insx(lson,l,mid,x);\n    else insx(rson,mid+1,r,x);\n    sumx[rt]=sumx[lson]+sumx[rson];\n}\nint quex(int rt,int l,int r,int L,int R)\n{\n    if(L<=l&&r<=R)return sumx[rt];\n    if(mid+1>R)return quex(lson,l,mid,L,R);\n    if(L>mid)return quex(rson,mid+1,r,L,R);\n    return quex(lson,l,mid,L,R)+quex(rson,mid+1,r,L,R);\n}\nvoid insy(int rt,int l,int r,int x)\n{\n    if(l==r)\n    {\n        sumy[rt]^=1;\n        return;\n    }\n    if(x<=mid)insy(lson,l,mid,x);\n    else insy(rson,mid+1,r,x);\n    sumy[rt]=sumy[lson]+sumy[rson];\n}\nint quey(int rt,int l,int r,int L,int R)\n{\n    if(L<=l&&r<=R)return sumy[rt];\n    if(mid+1>R)return quey(lson,l,mid,L,R);\n    if(L>mid)return quey(rson,mid+1,r,L,R);\n    return quey(lson,l,mid,L,R)+quey(rson,mid+1,r,L,R);\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&q);\n    while(q--)\n    {\n        scanf(\"%d%d%d\",&op,&px1,&py1);\n        if (op==1) \n        {\n            insx(1,1,n,px1);\n            insy(1,1,m,py1);\n        }\n        else\n        {\n            scanf(\"%d%d\",&px2,&py2);\n            ll n1=quex(1,1,n,px1,px2),m1=quey(1,1,m,py1,py2);\n            printf(\"%lld\\n\",n1*(ll)(py2-py1+1)+m1*(ll)(px2-px1+1)-n1*m1*2LL);\n        }                     \n    }\n}\n```",
        "postTime": 1496932620,
        "uid": 20322,
        "name": "orangebird",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "\u521a\u5165\u5751\u4e1c\u65b9\uff0c\u53d1\u4e00\u7bc7\u9898\u89e3\uff01\uff08\u611f\u8c22\u7ba1\u7406\u5927\u5927\u767e\u5fd9\u4e4b\u4e2d\u62bd\u65f6\u95f4\u5ba1\u6838\uff01\uff09\n \n\u4e09\u4e2a\u6708\u524d\u3002\u3002\u6211\u4eec\u673a\u623f\u505a\u4e86\u8fd9\u9053\u9898\uff0c\u5f53\u65f6\u8fd8\u6ca1\u6709\u5b66\u6570\u636e\u7ed3\u6784\uff0c\u5f53\u65f6\u6211\u627e\u5230\u4e86\u6b63\u89e3\u7684\u601d\u8def\u3002\u3002\u3002\u4f46\u662f\u6ca1\u6709\u6811\u72b6\u6570\u7ec4\u6216\u8005\u7ebf\u6bb5\u6811\u7684\u8f85\u52a9\uff0c\u6253\u4e86\u534a\u4e2a\u66b4\u529bTvT\u3002\n\n\u5728\u62c6\u5f00\u6a2a\u7eb5\u5750\u6807\u540e\u8fd9\u9053\u300a\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u300b\u53ea\u9700\u8981\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u5c31\u53ef\u4ee5\u628a\u4e00\u4e2a\u533a\u95f4\u5185\u4ea7\u751f\u7684\u8ff7\u96fe\u5b58\u4e0b\u6765\u3002\n\n1.\u5728\u91ca\u653e\u8ff7\u96fe\u540e\uff0c\u628a\u91ca\u653e\u8ff7\u96fe\u7684\u5750\u6807\u5b58\u8fdb\u6811\u72b6\u6570\u7ec4\u3002\n\n2.\u5f53\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u50a8\u5b58\u8fc7\u8ff7\u96fe\uff0c\u5b58\u4e00\u4e2a-1\u62b5\u6d88\u539f\u6765\u7684\u8ff7\u96fe\u3002\n\n3.\u6c42\u7b54\u6848\u65f6\uff0c\u65b9\u7a0b\u4e3a\u7eb5\u5750\u6807\u4e4b\u5dee\u4e58\u6a2a\u7740\u7684\u8ff7\u96fe\u6761\u6570\u52a0\u6a2a\u5750\u6807\u4e4b\u5dee\u4e58\u7eb5\u7740\u7684\u8ff7\u96fe\u6761\u6570\u51cf\u6a2a\u7740\u7684\u8ff7\u96fe\u6761\u6570\u4e58\u7eb5\u7740\u7684\u8ff7\u96fe\u6761\u6570\u4e58\u4e8c\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n\n```cpp\n#define BOLI_LINGMENG\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long int\nll n,m,q,c1[312345],c2[312345],op,x2,y2,x3,y3,a[312345],b[312345];\nll lowbit(ll x) {\n\treturn x&-x;\n}\nvoid add1(ll x,ll y) {\n\tfor(; x<=n; x+=lowbit(x)) c1[x]+=y;\n}\nll ask1(ll x) {\n\tll ret=0;\n\tfor(; x>=1; x-=lowbit(x)) ret+=c1[x];\n\treturn ret;\n}\nvoid add2(ll x,ll y) {\n\tfor(; x<=m; x+=lowbit(x)) c2[x]+=y;\n}\nll ask2(ll x) {\n\tll ret=0;\n\tfor(; x>=1; x-=lowbit(x)) ret+=c2[x];\n\treturn ret;\n}\nint main() {\n\tcin>>n>>m>>q;\n\twhile(q--) {\n\t\tscanf(\"%lld\",&op);\n\t\tif(op==1) {\n\t\t\tscanf(\"%lld%lld\",&x2,&y2);\n\t\t\tif(a[x2]==1) {\n\t\t\t\tadd1(x2,-1);\n\t\t\t} else {\n\t\t\t\tadd1(x2,1);\n\t\t\t}\n\t\t\ta[x2]^=1;\n\t\t\tif(b[y2]==1) {\n\t\t\t\tadd2(y2,-1);\n\t\t\t} else {\n\t\t\t\tadd2(y2,1);\n\t\t\t}\n\t\t\tb[y2]^=1;\n\t\t} else {\n\t\t\tscanf(\"%lld%lld%lld%lld\",&x2,&y2,&x3,&y3);\n\t\t\tprintf(\"%lld\\n\",(x3-x2+1)*(ask2(y3)-ask2(y2-1))+(y3-y2+1)*(ask1(x3)-ask1(x2-1))-(ask2(y3)-ask2(y2-1))*(ask1(x3)-ask1(x2-1))*2);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1603535169,
        "uid": 242235,
        "name": "ITC_\u5929\u6ce0",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "\u611f\u89c9\u8bb8\u591a\u9898\u89e3\u5e76\u6ca1\u6709\u8bb2\u6e05\u695a\u7ebf\u6bb5\u6811\u5728\u5b58\u4ec0\u4e48\u3002\n\n\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u5b58\u7684\u662f\u4e00\u5217\u4e2d\u7684\u88ab\u67d3\u8272\u6570\u91cf\u3002\n\n\u7b2c\u4e8c\u68f5\u5b58\u7684\u662f\u4e00\u884c\u4e2d\u88ab\u67d3\u8272\u6570\u91cf\u3002\n\n\u53e6\u5916\uff0c\u5bf9\u4e8e\u5bb9\u65a5\u539f\u7406\u7684\u63a8\u5bfc\u3002\n\n\u7ed9\u51fa\u4e09\u79cd\u5bb9\u65a5\u7684\u60c5\u51b5\uff1a\n\n$1$\n\n![](https://cdn.luogu.com.cn/upload/pic/53826.png)\n\n\u8be5\u7ec4\u6570\u636e\uff1a\n\n```\n5 5 10\n1 2 3\n1 2 3\n2 1 1 5 5\n```\n\n\u6b64\u5904\u6563\u53d1\u7ea2\u70df\u7684\u70b9\u5728\u540c\u4e00\u884c\u540c\u4e00\u5217\uff0c\u6240\u4ee5\u5168\u90e8\u88ab\u6d88\u9664\u4e86\u3002\n\n\u6240\u4ee5\u6b64\u5904\u8be2\u95ee $1$ $1$ $5$ $5$\n\n\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u7684\u56de\u7b54\u5c31\u662f $0$ \uff0c\u7b2c\u4e8c\u68f5\u4e5f\u662f\u3002\n\n\u7b54\u6848\u5c31\u662f $0$\n\n\u518d\u770b\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\n\n$2$\n\n![](https://cdn.luogu.com.cn/upload/pic/53825.png)\n\n\u8be5\u7ec4\u6570\u636e\uff1a\n\n```\n5 5 10\n1 2 3\n1 4 3\n2 1 1 5 5 \n```\n\n\u6b64\u5904\u4e24\u7684\u53d1\u6563\u7ea2\u70df\u7684\u70b9\u5728\u540c\u4e00\u884c\uff0c\u6240\u4ee5\u5982\u679c\u8be2\u95ee $1$ $1$ $5$ $5$\n\n\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u7684\u56de\u7b54\u5c31\u662f $2$ \uff0c\u7b2c $2$ \u68f5\u5c31\u662f $0$ \u3002\n\n\u6240\u4ee5\u5c31\u6ca1\u6709\u91cd\u590d\u7b97\u7684\u70b9\uff0c\u7b54\u6848\u5c31\u662f \n\n$$( x2-x1+1 ) * query( 1, y, yy ) + ( y2-y1+1 ) * query ( 1, x, xx )$$\n\n$3$\n\n![](https://cdn.luogu.com.cn/upload/pic/53827.png)\n\n\u8be5\u7ec4\u6570\u636e\uff1a\n\n```\n5 5 10\n1 2 3\n1 4 4\n2 1 1 5 5\n```\n\n\u6b64\u5904\u6563\u53d1\u7ea2\u70df\u7684\u70b9\u5728\u4e0d\u540c\u7684\u884c\u5217\uff0c\u662f\u666e\u904d\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u89c2\u5bdf\u88ab\u6d88\u9664\u7684\u70b9\uff0c\u53d1\u73b0\u91cd\u5408\u5230\u4e00\u8d77\u7684\u5c31\u88ab\u6d88\u9664\u4e86\uff0c\u4e5f\u5373\u6709\u51e0\u884c\u91cd\u5408\u5728\u4e00\u8d77\u7684\u70b9\uff0c\u5c31\u88ab\u591a\u7b97\u4e86 $2$ \u6b21\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u70b9\u672c\u8eab\u662f\u6ca1\u6709\u88ab\u67d3\u4e0a\u989c\u8272\u7684\uff0c\u5374\u628a\u5b83\u4eec\u4f5c\u4e3a\u67d3\u4e86\u8272\u7684\u70b9\u7b97\u4e86\u4e24\u6b21\u3002\n\n\u6240\u4ee5\u7b54\u6848\u5c31\u662f\uff1a\n\n$$( x2-x1+1 ) * query( 1, y, yy ) + ( y2-y1+1 ) * query ( 1, x, xx ) - query ( 1, y, yy ) * query ( 1, x, xx ) * 2$$\n\n\u4e5f\u5c31\u77e5\u6653\u4e86\u662f\u5982\u4f55\u5f97\u51fa\u8fd9\u4e2a\u516c\u5f0f\u7684\u3002\n\n\u6700\u540e\uff0c\u653e\u4e0a\u8be2\u95ee\u90e8\u5206\u7684\u4ee3\u7801\uff1a\n\n```cpp\n\t\tswitch ( opt ) {\n\t\t\tcase 1: \n\t\t\t\tx = read(), y = read();\n\t\t\t\tupdate1 ( 1, x, x ); update2 ( 1, y, y ); \n\t\t\t\tbreak;\n\t\t\tcase 2: \n\t\t\t\tx = read(), y = read(), xx = read(), yy = read();\n\t\t\t\tzz = query1 ( 1, x, xx ); zzz = query2 ( 1, y, yy );\n\t\t\t\twln ( zz * ( yy - y + 1 ) + zzz * ( xx - x + 1 ) - ls ( zz * zzz ) );\n\t\t\t\tbreak;\n\t\t}\n```\n\n",
        "postTime": 1552354820,
        "uid": 104379,
        "name": "Cesare",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "## \u6307\u9488\u9898\u89e3\u6765\u4e00\u53d1\uff01\uff01\uff01\n\u5bf9\u4e8e\u8fd9\u9053\u9898\u5b83\u7684\u4fee\u6539\u662f\u8d2f\u7a7f\u7684\uff08\u5c31\u90a3\u4e2a\u610f\u601d\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u7528\u8003\u8651\u4ed6\u5728\u54ea\u4e2a\u4f4d\u7f6e\u8d2f\u7a7f\u4e86\u5c31\u884c\u4e86\uff0c\u6240\u4ee5\u5bf9\u4e8eX\u8f74 Y\u8f74\uff0c\u5206\u522b\u7ef4\u62a4\u4e00\u9897\u7ebf\u6bb5\u6811\u3002\n\n\u4fee\u6539\u65f6\uff0c\u8981\u53d6\u5f02\u6216\uff0c\u56e0\u4e3a\u662f\u53ef\u4ee5\u62b5\u6d88\u7684\u3002\n\n\u4f46\u662f\u67e5\u8be2\u65f6\u600e\u4e48\u529e\u5462\u3002\u3002\u6211\u4eec\u53d1\u73b0\u62b5\u6d88\u7684\u5757\uff08\u5305\u542b\u81ea\u5df1\u7ad9\u7684\u90a3\u4e2a\u5757\uff09\u4e00\u5171\u662f2*x*y\uff08x\u662f\u6a2a\u8f74\u67e5\u8be2\u5230\u7684\u7ea2\u96fe\uff0cy\u662f\u7eb5\u8f74\u67e5\u8be2\u5230\u7684\u7ea2\u96fe\uff09~~\u6ca1\u56fe\uff08\u61d2&&\u53ef\u4ee5\u770b\u5176\u4ed6\u9898\u89e3\uff09\u3002\u3002~~ \u5176\u5b9e\u5c31\u662fx\u8f74y\u8f74\u67e5\u8be2\u4f1a\u91cd\u590d\uff0c\u62b5\u6d88\u7684\u4e5f\u4f1a\u7b97\u4e0a\uff0c\u800c\u8fd9\u4e24\u8005\u6b63\u597d\u76f8\u7b49\uff0c\u52a0\u8d77\u6765\u4e5f\u5c31\u662f2xy\u3002\u7528\u603b\u7684\u4e00\u51cf\u5c31\u884c\u4e86\u3002\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int N = 100010;\ninline int read()\n{\n\tint x = 0 , f = 1;\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\t{if(ch == '-')\tf = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n\treturn x * f;\n}\nint n , m , q;\nstruct Segment_tree\n{\n\t#define mid ((p -> l + p -> r) >> 1)\n\tstruct node\n\t{\n\t\tnode *ls , *rs;\n\t\tint l , r , sum;\n\t\tnode(int l = 0,int r = 0) : l(l) , r(r) {ls = rs = NULL;sum = 0;}\n\t\tinline void up() {sum = ls -> sum + rs -> sum;}\n\t}*root,*beg , pool[N << 3] , *tail;\n\tvoid build(node *&p,int l,int r)\n\t{\n\t\tp = new (tail ++) node(l,r);\n\t\tif(l == r)\treturn ;\n\t\tbuild(p -> ls,l,mid); build(p -> rs,mid+1,r);\n\t}\n\tvoid chenge(node *p,int x)\n\t{\n\t\tif(p -> l == p -> r) return (void)(p -> sum ^= 1);\n\t\tif(x <= mid) chenge(p -> ls,x);\n\t\telse chenge(p -> rs,x);\n\t\tp -> up();\n\t}\n\tint query(node *p,int x,int y)\n\t{\n\t\tif(x <= p -> l && p -> r <= y)\treturn p -> sum;\n\t\tint res = 0;\n\t\tif(x <= mid) res += query(p -> ls,x,y);\n\t\tif(y > mid)\tres += query(p -> rs,x,y);\n\t\treturn res;\n\t}\n\tinline void LOL()\n\t{\n\t\tn = read(); m = read(); q = read();\n\t\tbuild(root,1,m); build(beg,1,n);\n\t\tfor(int i = 1, opt , x , y , l , r , tmp , res;i <= q;i ++)\n\t\t{\n\t\t\topt = read(); x = read(); y = read();\n\t\t\tif(opt & 1) chenge(root,y),chenge(beg,x);\n\t\t\telse \n\t\t\t{\n\t\t\t\tl = read();\n\t\t\t\tr = read();\n\t\t\t\ttmp = query(root,y,r);\n\t\t\t\tres = query(beg,x,l);\n\t\t\t\tprintf(\"%lld\\n\",(long long)tmp * (l - x + 1) + (long long)res * (r - y + 1) - (long long)2 * res * tmp);\n\t\t\t}\n\t\t}\n\t}\n\tSegment_tree() {tail = pool;}\n}CF;\nint main()\n{\n\tCF.LOL();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1568629439,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "## \u95ee\u9898\u63cf\u8ff0\n\n\u7ecf\u8fc7\u4e0a\u6b21\u5931\u8d25\u540e\uff0c\u857e\u7c73\u8389\u4e9a\u51b3\u5b9a\u518d\u6b21\u53d1\u52a8\u7ea2\u96fe\u5f02\u53d8\uff0c\u4f46\u4e3a\u4e86\u9632\u6b62\u88ab\u7075\u68a6\u9000\u6cbb\uff0c\u5979\u51b3\u5b9a\u5c06\u7ea2\u96fe\u4ee5\u5947\u602a\u7684\u9635\u52bf\u91ca\u653e\u3002\n\n\u6211\u4eec\u5c06\u5e7b\u60f3\u4e61\u770b\u505a\u662f\u4e00\u4e2a $n \\times m$ \u7684\u65b9\u683c\u5730\u533a\uff0c\u4e00\u5f00\u59cb\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u5730\u533a\u88ab\u7ea2\u96fe\u906e\u76d6\u3002\u857e\u7c73\u8389\u4e9a\u6bcf\u6b21\u7ad9\u5728\u67d0\u4e00\u4e2a\u5730\u533a\u4e0a\uff0c\u5411\u4e1c\u5357\u897f\u5317\u56db\u4e2a\u65b9\u5411\u5404\u53d1\u51fa\u4e00\u6761\u65e0\u9650\u957f\u7684\u7ea2\u96fe\uff0c\u53ef\u4ee5\u5f71\u54cd\u5230\u6574\u884c/\u6574\u5217\uff0c\u4f46\u4e0d\u4f1a\u5f71\u54cd\u5230\u5979\u6240\u7ad9\u7684\u90a3\u4e2a\u5730\u533a\u3002\u5982\u679c\u4e24\u9635\u7ea2\u96fe\u78b0\u649e\uff0c\u5219\u4f1a\u56e0\u4e3a\u5bc6\u5ea6\u8fc7\u5927\u800c\u6c89\u964d\u6d88\u5931\u3002\u7075\u68a6\u5bdf\u89c9\u5230\u4e86\u8fd9\u6b21\u5f02\u53d8\uff0c\u51b3\u5b9a\u53bb\u89e3\u51b3\u5b83\u3002\u4f46\u5728\u89e3\u51b3\u4e4b\u524d\uff0c\u7075\u68a6\u60f3\u8981\u4e86\u89e3\u4e00\u7247\u8303\u56f4\u7ea2\u96fe\u7684\u5bc6\u5ea6\u3002\u53ef\u4ee5\u7b80\u8ff0\u4e3a\u4e24\u79cd\u64cd\u4f5c:\n\n`1 x y` \u857e\u7c73\u8389\u4e9a\u7ad9\u5728\u5750\u6807 $(x,y)$ \u7684\u4f4d\u7f6e\u5411\u56db\u4e2a\u65b9\u5411\u91ca\u653e\u65e0\u9650\u957f\u7684\u7ea2\u96fe\u3002\n\n`2 x1 y1 x2 y2` \u8be2\u95ee\u5de6\u4e0a\u70b9\u4e3a $(x1,y1)$\uff0c\u53f3\u4e0b\u70b9\u4e3a $(x2,y2)$ \u7684\u77e9\u5f62\u8303\u56f4\u5185\uff0c\u88ab\u7ea2\u96fe\u906e\u76d6\u7684\u5730\u533a\u7684\u6570\u91cf\u3002\n\n---\n\n## \u9898\u89e3\n\n\u8ba4\u4e3a\u7ad9\u7acb\u7684\u5730\u65b9\u4e5f\u662f\u6c89\u964d\u3002\n\n\u7ef4\u62a4\u4e24\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e00\u4e2a\u7ef4\u62a4\u884c\uff0c\u4e00\u4e2a\u7ef4\u62a4\u5217\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff08\u6811\u72b6\u6570\u7ec4\u4e5f\u53ef\u4ee5\uff09\n\n\u8bbe $R,C$ \u5206\u522b\u4ee3\u8868\u884c\u548c\u5217\u88ab\u8986\u76d6\u6570\u91cf\uff0c\u7b54\u6848\u4e3a $ R \\times (y2 - y1 + 1) + C \\times (x2 - x1 + 1) - 2 \\times R \\times C $ \u3002\n\n\u51cf\u53bb\u4e24\u500d $R \\times C$ \u7684\u539f\u56e0\uff1a\u53bb\u6389\u884c\u5217\u7edf\u8ba1\u5404\u4e00\u6b21\u3002\n\n---\n\n## $\\mathrm{Code}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\n\nconst int maxn = 100000 + 7;\nconst int maxm = 200000 + 7;\n\nint n, m, T;\n\ntemplate < typename Tp >\nvoid read(Tp &x) {\n\tx = 0;char ch = 1;int fh = 1;\n\twhile(ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n\tif(ch == '-') fh = -1, ch=getchar();\n\twhile(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar();\n\tx *= fh;\n}\n\nvoid Init(void) {\n\tread(n); read(m); read(T);\n}\n\nstruct Segment_Tree {\n\t#define lfc (x << 1)\n\t#define rgc ((x << 1) | 1)\n\t#define mid ((l + r) >> 1)\n\tint val[maxn << 2];\n\tvoid modify(int x, int l, int r, int pos) {\n\t\tif(l == r) {\n\t\t\tval[x] = 1 - val[x];\n\t\t\treturn ;\n\t\t}\n\t\tif(pos <= mid) modify(lfc, l, mid, pos);\n\t\telse modify(rgc, mid + 1, r, pos);\n\t\tval[x] = val[lfc] + val[rgc];\n\t}\n\tint query(int x, int l, int r, int L, int R) {\n\t\tif(L <= l && r <= R) return val[x];\n\t\tif(r < L || l > R) return 0;\n\t\treturn query(lfc, l, mid, L, R) + query(rgc, mid + 1, r, L, R);\n\t}\n}row, column;\n\n\nvoid operator1(void) {\n\tint x, y;\n\tread(x); read(y);\n\trow.modify(1, 1, n, x);\n\tcolumn.modify(1, 1, m, y);\n}\n\nvoid operator2(void) {\n\tint x1, x2, y1, y2;\n\tread(x1); read(y1); read(x2); read(y2);\n\tint R = row.query(1, 1, n, x1, x2), C = column.query(1, 1, m, y1, y2);\n\tLL ans = (LL)(y2 - y1 + 1) * (LL)R + (x2 - x1 + 1) *(LL)C - (LL)R * (LL)C * 2ll;\n\tprintf(\"%lld\\n\", ans);\n}\n\nvoid Work(void) {\n\twhile(T--) {\n\t\tint op; read(op);\n\t\tif(op == 1) operator1();\n\t\telse operator2();\n\t}\n}\n\nint main(void) {\n\tInit();\n\tWork();\n\treturn 0;\n}\n```\n",
        "postTime": 1585151312,
        "uid": 28910,
        "name": "\u89c8\u904d\u5343\u79cb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "\u9898\u76ee\u770b\u4e0a\u53bb\u662f\u4e8c\u7ef4\u7684\u3002\u7528\u964d\u7ef4\u7684\u601d\u60f3\u53ef\u4ee5\u7528\u4e24\u4e2a\u4e00\u7ef4\u6811\u72b6\u6570\u7ec4\u6765\u505a\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c1\uff0c\u53ef\u89c6\u4e3a\u5c06\u6574\u4e2a $x$ \u5217\u4e0e\u6574\u4e2a $y$ \u884c\u5404\u91ca\u653e\u4e00\u6b21\u7ea2\u96fe\uff08$(x,y)$ \u88ab\u91ca\u653e\u4e24\u6b21\uff0c\u76f8\u5f53\u4e8e\u6ca1\u91ca\u653e\uff09\u3002\u5bf9\u4e8e\u64cd\u4f5c2\uff0c\u53ea\u7528\u77e5\u9053\u4e4b\u524d\u5728 $[x1,x2]$ \u5217\u548c $[y1,y2]$ \u884c\u4e2d\u5404\u91ca\u653e\u4e86\u51e0\u6b21\u7ea2\u96fe\u5373\u53ef\u3002\n\n\u7531\u6b64\uff0c\u53d1\u73b0\u6b64\u9898\u5b9e\u9645\u4e0a\u53ea\u7528\u201c\u5355\u70b9\u4fee\u6539\u201d\u548c\u201c\u533a\u95f4\u67e5\u8be2\u201d\uff0c\u7528\u4e00\u7ef4\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\u9700\u8981\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u5206\u522b\u7ef4\u62a4\u5217\u4e0e\u884c\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(q\\log n)$\u3002\u6bd4\u7ebf\u6bb5\u6811\u5e38\u6570\u66f4\u4f4e\uff0c\u66f4\u7701\u7a7a\u95f4\uff0c\u4ee3\u7801\u8fd8\u66f4\u77ed\uff08\u4e3a\u4ec0\u4e48\u597d\u591a\u9898\u89e3\u90fd\u7528\u7ebf\u6bb5\u6811\uff1f\uff09\u3002\u6df1\u591c\u8bc4\u6d4b+\u8bfb\u5165\u4f18\u5316+\u5438\u6c27\u53ea\u7528 $98ms$ \u7a33\u62ff\u6700\u4f18\u89e3\uff08\u7b2c\u4e8c $124ms$\uff09\u3002\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\n\n- \u5f53\u67d0\u4e00\u5217\uff08\u6216\u884c\uff09\u88ab\u91ca\u653e\u591a\u6b21\u7ea2\u96fe\u65f6\uff0c\u7ea2\u96fe\u4f1a\u6d88\u5931\u3002\u6240\u4ee5\u8981\u518d\u5efa\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u8868\u793a\u6bcf\u5217\u3001\u6bcf\u884c\u6709\u6ca1\u6709\u88ab\u91ca\u653e\u8fc7\u5947\u6570\u6b21\u7ea2\u96fe\u3002\n- \u8be2\u95ee\u7684\u7b54\u6848\u6700\u5927\u4e3a $10^5 \\times 10^5$ \u7206 int\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#define RI register int\nusing namespace std;\nint n,m,q;\nbool mx[100005],my[100005];\nint treex[100005],treey[100005];\ninline int lowbit(RI num){return num&-num;}\nvoid add(int *tree,RI s,RI num){\n\tRI ceil;\n\tif(tree==treex)ceil=n;\n\telse ceil=m;\n\tfor(;s<=ceil;s+=lowbit(s))tree[s]+=num;\n}\nint ask(int *tree,RI s){\n\tRI res=0;\n\tfor(;s;s-=lowbit(s))res+=tree[s];\n\treturn res;\n}\nint read(){\n\tchar ch;RI res=0;\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9'){\n\t\tres=(res<<1)+(res<<3)+ch-'0';\n\t\tch=getchar(); \n\t}\n\treturn res;\n}\nint main(){\n\tn=read();m=read();q=read();\n\twhile(q--){\n\t\tRI op,x,y,x_,y_;\n\t\top=read();x=read();y=read();\n\t\tif(op==1){\n\t\t\tif(mx[x]==false)mx[x]=true,add(treex,x,1);\n\t\t\telse mx[x]=false,add(treex,x,-1);\n\t\t\tif(my[y]==false)my[y]=true,add(treey,y,1);\n\t\t\telse my[y]=false,add(treey,y,-1);\n\t\t}\n\t\telse{\n\t\t\tx_=read();y_=read();\n\t\t\tlong long xnum=ask(treex,x_)-ask(treex,x-1),xx=x_-x+1;\n\t\t\tlong long ynum=ask(treey,y_)-ask(treey,y-1),yy=y_-y+1;\n\t\t\tprintf(\"%lld\\n\",xnum*yy+ynum*xx-xnum*ynum*2);\n\t\t}\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1629508605,
        "uid": 384596,
        "name": "6f21",
        "ccfLevel": 0,
        "title": "P3801\u9898\u89e3"
    },
    {
        "content": "## \u5173\u952e\u4fe1\u606f\n- \u91ca\u653e\u4e00\u6b21\u5360\u9886\u4e00\u6574\u884c\uff0c\u4e00\u6574\u5217\n\n- \u91cd\u590d\u91ca\u653e\u7684\u683c\u5b50\u4f1a\u76f8\u4e92\u62b5\u6d88\n## \u5206\u6790\u9898\u76ee\n\u8fd9\u9898\u4e0d\u5c31\u662f [\u8f66\u7684\u653b\u51fb](https://www.luogu.com.cn/problem/P3913) \u7684\u52a0\u5f3a\u7248\u5417\uff1f\n\n---\n\n\u6b64\u9898\u91cd\u70b9\u5728\u5982\u4f55\u628a\u4e8c\u7ef4\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u7ef4\u95ee\u9898\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u628a\u4e00\u884c\u6216\u4e00\u5217\u770b\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u91ca\u653e\u4e00\u6b21\u5c31\u628a\u5bf9\u5e94\u7684\u884c\u548c\u5217\u7684\u6807\u8bb0\u5f02\u6216 $1$ \uff0c\u8868\u793a\u8fd9\u4e00\u884c\u88ab\u5360\u9886\u6216\u88ab\u91cd\u590d\u91ca\u653e\u7684\u7ea2\u96fe\u6e05\u7a7a\u4e86\u3002\n\n\u8be2\u95ee\u4e5f\u5f88\u597d\u529e\uff0c\u8bbe\u884c\u6807\u8bb0\u4e3a\u5e8f\u5217 $R$\uff0c\u5217\u6807\u8bb0\u4e3a\u5e8f\u5217 $C$\uff0c\u5728\u8303\u56f4\u5185\u6709 $r$ \u884c\uff0c\u6709 $c$ \u5217\u5df2\u88ab\u8986\u76d6\uff0c\u5219 \n$$r=\\sum_{i=x1}^{x2}R_i,c=\\sum_{i=y1}^{y2}C_i$$ \n\u6613\u5f97\uff0c\u8303\u56f4\u5185\u7684\u4ea4\u53c9\u70b9\u4e2a\u6570\u4e3a $r \\times c$\n\n$\\because$ \u6bcf\u6b21\u91ca\u653e\u7ea2\u96fe\u90fd\u662f\u65e0\u9650\u957f\u7684 $\\therefore$ \u8303\u56f4\u5185\u7684\u7eb5\u5411\u7ea2\u96fe\u957f $x2-x1$\uff0c\u6a2a\u5411\u7ea2\u96fe\u5bbd $y2-y1$\n\n$\\therefore$ \u7ed3\u679c\u4e3a $r \\times (y2-y1)+c \\times (x2-x1)-r \\times c \\times 2$\n\n\u8003\u8651\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5355\u70b9\u8d4b\u503c\uff0c\u533a\u95f4\u6c42\u548c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int maxn=100004;\nchar res[maxn*20];\nint n,m,q,cnt,op,r1,c1,r2,c2;\n\ninline void read(int &x){\n\tchar c=getchar();bool f=0;x=0;\n\tfor(;c<'0'||c>'9';c=getchar())\n\t\tif(c=='-')\n\t\t\tf=1;\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=x*10+(c^48);\n\tx=f?-x:x;\n}\n\nvoid save(const LL x){\n\tif(x>9)\n\t\tsave(x/10);\n\tres[++cnt]=x%10+48;\n}\n\nstruct arrt{\n\tprivate:\n\tint _sz,a[maxn],tree[maxn];\n\t\n\tinline void add(int p,int v){\n\t\ta[p]+=v;\n\t\twhile(p<=_sz){\n\t\t\ttree[p]+=v;\n\t\t\tp+=p&-p;\n\t\t}\n\t}\n\t\n\tpublic:\n\tarrt(){ memset(tree,0,sizeof(tree));}\t\n\t\t\n\tvoid setsize(const int &x){ _sz=x;}\n\t\n\tinline int sum(int p){\n\t\tint ret=0;\n\t\twhile(p){\n\t\t\tret+=tree[p];\n\t\t\tp-=p&-p;\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\tinline void update(int p){ add(p,a[p]==0?1:-1);}\n}r,c;\n\nLL query(int r1,int c1,int r2,int c2){\n\tLL cntr=r.sum(r2)-r.sum(r1-1),cntc=c.sum(c2)-c.sum(c1-1);\n\tLL rdis=r2-r1+1,cdis=c2-c1+1;\n\treturn cntr*cdis+cntc*rdis-(cntr*cntc<<1ll);\n}\n\nsigned main(){\n\tread(n),read(m),read(q);\n\tr.setsize(n),c.setsize(m);\n\twhile(q--){\n\t\tread(op),read(r1),read(c1);\n\t\tif(op==1){\n\t\t\tr.update(r1);\n\t\t\tc.update(c1);\n\t\t}\n\t\telse{\n\t\t\tread(r2),read(c2);\n\t\t\tsave(query(r1,c1,r2,c2));\n\t\t\tres[++cnt]='\\n';\n\t\t}\n\t}\n\tfwrite(res+1,1,cnt,stdout);\n\treturn 0;\n}\n```",
        "postTime": 1612407251,
        "uid": 289944,
        "name": "Na2PtCl6",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "\u9996\u5148\u53d1\u73b0\u4e24\u5757\u7ea2\u96fe\u5728\u4e00\u8d77\u4f1a\u6d88\u5931\uff0c\u6240\u4ee5\u4fee\u6539\u65f6\u7684\u7ad9\u7acb\u70b9\u6ca1\u6709\u7ea2\u96fe\u5176\u5b9e\u5c31\u53ef\u4ee5\u7406\u89e3\u6210\u4e00\u884c\u548c\u4e00\u5217\u7684\u4ea4\u70b9\u5904\u7ea2\u96fe\u4f1a\u6d88\u5931\u3002\n\n\u6240\u4ee5\u5176\u5b9e\u4fee\u6539\u64cd\u4f5c\u5c31\u662f\u5bf9\u4e8e\u4e00\u6574\u884c/\u4e00\u6574\u5217\u8fdb\u884c\u4fee\u6539\u3002\u8fd9\u6837\uff0c\u5bb9\u6613\u60f3\u5230\u5bf9\u4e8e\u884c\u548c\u5217\u5206\u5f00\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u5177\u4f53\u5c31\u662f\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4(\u6bd4\u8f83\u597d\u5199)\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u7136\u540e\u4fee\u6539\u7684\u65f6\u5019\u770b\u8fd9\u4e00\u6574\u884c/\u5217\u662f\u53d8\u6210\u6709\u7ea2\u96fe\u8fd8\u662f\u6ca1\u6709\u7ea2\u96fe\uff0c\u4ece\u800c\u51b3\u5b9a\u662f\u8fdb\u884c\u52a0\u4e00\u8fd8\u662f\u51cf\u4e00\u7684\u64cd\u4f5c\u3002\n\n\u7136\u540e\u6bd4\u8f83\u663e\u7136\u7684\uff0c\u67e5\u8be2\u7684\u533a\u95f4\u4e2d\u5982\u679c\u6709 $i$ \u884c $j$ \u5217\u88ab\u7ea2\u96fe\u8986\u76d6\uff0c\u90a3\u4e48\u4f46\u770b\u884c\uff0c\u88ab\u8986\u76d6\u7684\u6709 $i (y_2-y_1+1)$ \u683c\uff0c\u5355\u770b\u5217\u6709 $j (x_2-x_1+1)$ \u683c\uff0c\u4e24\u90e8\u5206\u7684\u4ea4\u96c6\u6709 $ij$ \u683c\uff0c\u8fd9\u90e8\u5206\u5728\u884c\u548c\u5217\u4e2d\u5206\u522b\u88ab\u7b97\u4e86\u4e00\u904d\uff0c\u6240\u4ee5\u51cf\u53bb\u4e24\u500d\u7684\u5b83\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u7b54\u6848\u5c31\u662f $i(y_2-y_1+1)+j (x_2-x_1+1)-2ij$\u3002\n\n\u53d1\u73b0 $i,j$ \u7528\u6811\u72b6\u6570\u7ec4\u6765\u67e5\u8be2\u5373\u53ef\uff0c\u4e8e\u662f\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7684\u88f8\u9898\u3002\n\n\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u5f00long long\u3002\n\ncode(\u524d\u9762\u90e8\u5206\u7701\u7565\uff0cread()\u662f\u5feb\u8bfb):\n```cpp\n#define int long long\nint n, m, q, ln[maxn], lm[maxn], tn[maxn], tm[maxn];\nvoid updn(int x){int k = 0; k = (ln[x] ? -1 : 1), ln[x] ^= 1; for(; x <= n; x += x & (-x))tn[x] += k;}\nvoid updm(int x){int k = 0; k = (lm[x] ? -1 : 1), lm[x] ^= 1; for(; x <= m; x += x & (-x))tm[x] += k;}\nint quen(int x){int res = 0; for(; x; x -= x & (-x))res += tn[x]; return res;}\nint quem(int x){int res = 0; for(; x; x -= x & (-x))res += tm[x]; return res;}\nsigned main(){\n\tn = read(), m = read(), q = read();\n\twhile(q--){\n\t\tint op = read();\n\t\tif(op == 1){\n\t\t\tint x = read(), y = read(); updn(x); updm(y);\n\t\t}else{\n\t\t\tint x1 = read(), y1 = read(), x2 = read(), y2 = read();\n\t\t\tint xx = quen(x2) - quen(x1 - 1), yy = quem(y2) - quem(y1 - 1);\n\t\t\tcout << xx * (y2 - y1 + 1) + yy * (x2 - x1 + 1) - 2 * xx * yy << \"\\n\";\n\t\t}\n\t}\n}\n```",
        "postTime": 1606453670,
        "uid": 209547,
        "name": "infinities",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "$\\ \\ \\ \\ \\ \\ \\ $\u660e\u5929\u5c31 NOI Online\u4e86\uff0c\u5148\u53d1\u7bc7\u9898\u89e3\u6da8\u6da8rp  \n### \u9898\u610f  \n$\\ \\ \\ \\ \\ \\ \\ $\u7ed9\u5b9a\u4e00\u4e2a $n \\times m$ \u7684 $01$ \u77e9\u9635\uff0c\u6709\u4e24\u79cd\u64cd\u4f5c\u3002  \n$\\ \\ \\ \\ \\ \\ \\ $1.\u5bf9\u4e8e\u67d0\u4e2a\u7ed9\u5b9a\u5750\u6807\uff0c\u5c06\u5176\u6240\u5728\u7684\u884c\u3001\u5217\u4e0a\u6240\u6709\u6570\u53d6\u53cd\uff0c\u8be5\u70b9\u4ea6\u53d6\u53cd $2$ \u6b21\u3002  \n$\\ \\ \\ \\ \\ \\ \\ $2.\u67e5\u8be2\u67d0\u4e2a\u4e8c\u7ef4\u533a\u95f4\u5185\u7684\u603b\u548c\u3002  \n\n### \u9898\u89e3  \n$\\ \\ \\ \\ \\ \\ \\ $\u4e0d\u96be\u60f3\u5230\uff0c\u5c06 $0$ \u548c $1$ \u53d6\u53cd\u5176\u5b9e\u5c31\u662f\u5c06 $0$ \u548c $1\\ xor$ \u4e0a $1$\u3002  \n$\\ \\ \\ \\ \\ \\ \\ $\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5bf9\u67d0\u4e2a\u70b9\u53d6\u53cd\u5176\u5b9e\u5c31\u662f\u5c06\u8fd9\u4e2a\u70b9\u6240\u5728\u7684\u884c\u3001\u5217\u8fdb\u884c\u4e00\u6b21\u5f02\u6216\u3002  \n$\\ \\ \\ \\ \\ \\ \\ $\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u53ef\u4ee5\u7528\u4e24\u4e2a\u6570\u7ec4\u8bb0\u5f55\u67d0\u884c\u3001\u5217\u662f\u5426\u88ab\u53d6\u53cd\u8fc7\u3002   \n\n$\\ \\ \\ \\ \\ \\ \\ $\u6211\u4eec\u7b97\u662f\u89e3\u51b3\u4e86\u4fee\u6539\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u67e5\u8be2\u5462\uff1f  \n$\\ \\ \\ \\ \\ \\ \\ $\u6211\u4eec\u6765\u8bd5\u7740\u5206\u6790\u4e00\u4e0b\u3002  \n\n$\\ \\ \\ \\ \\ \\ \\ $![\u7ea2\u8272\u8868\u793a\u7eb5\u5411\u7684\u533a\u57df\uff0c\u84dd\u8272\u8868\u793a\u6a2a\u5411\u7684\u533a\u57df\uff0c\u7d2b\u8272\u8868\u793a\u4e24\u8005\u4ea4\u53c9\u7684\u533a\u57df](https://i.loli.net/2020/03/06/jZLWBuUp24igCJv.png)  \n(\u7ea2\u8272\u8868\u793a\u7eb5\u5411\u7684\u533a\u57df\uff0c\u84dd\u8272\u8868\u793a\u6a2a\u5411\u7684\u533a\u57df\uff0c\u7d2b\u8272\u8868\u793a\u4e24\u8005\u4ea4\u53c9\u7684\u533a\u57df)\n\n$\\ \\ \\ \\ \\ \\ \\ $\u518d\u4e3e\u51e0\u4e2a\u4f8b\u5b50\uff0c\u6216\u8005\u7528\u7b14\u7a0d\u5fae\u753b\u4e00\u753b\uff0c\u6211\u4eec\u5c31\u80fd\u5f97\u5230\u3002  \n\n$$ans=\\texttt{\u4e3a1\u7684\u5217\u6570} \\times \\texttt{\u884c\u6570} + \\texttt{\u4e3a1\u7684\u884c\u6570} \\times \\texttt{\u5217\u6570} -2 \\times \\texttt{\u4e3a1\u7684\u5217\u6570} \\times \\texttt{\u4e3a1\u7684\u884c\u6570}$$  \n\n$\\ \\ \\ \\ \\ \\ \\ \\ $~~(\u7b14\u8005\u60f3\u4e0d\u5230\u6709\u4ec0\u4e48\u5408\u9002\u7684\u53d8\u91cf\u540d\u4e86\u5c31\u5c06\u5c31\u770b\u5427)~~  \n\n$\\ \\ \\ \\ \\ \\ \\ $\u5176\u5b9e\u8fd9\u4e5f\u662f\u5bb9\u65a5\u539f\u7406\uff0c\u8fd9\u5e94\u8be5\u5f88\u597d\u8bc1\u660e\uff0c\u5728\u6b64\u7b14\u8005\u5c31\u6682\u65f6\u4e0d\u8bc1\u660e\u4e86\u3002  \n\n$\\ \\ \\ \\ \\ \\ \\ $\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u60f3\u5230\u8981\u7edf\u8ba1\u4e3a1\u7684\u884c\u6570\u3001\u5217\u6570\uff0c\u5373\u533a\u95f4\u4e4b\u548c\u3002  \n\n$\\ \\ \\ \\ \\ \\ \\ $\u55ef\u00b7\u00b7\u00b7\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u719f\u6089\u7684\u914d\u65b9\u3002  \n\n$\\ \\ \\ \\ \\ \\ \\ $\u7136\u540e\u7528\u7ebf\u6bb5\u6811\uff08\u6216\u8005BIT\u5f00\u4e24\u4e2a\u6570\u7ec4\u8bb0\u5f55\u72b6\u6001\uff09\u7ef4\u62a4\u533a\u95f4\u548c\u4ec0\u4e48\u7684\u677f\u5b50\u5c31\u4e0d\u7528\u8fc7\u591a\u8d58\u8ff0\u4e86\u5427\u3002  \n\n$$\\mathcal{CODE}$$ \n```\n#include <cstdio>\n#include <algorithm>\n#define ls p<<1\n#define rs p<<1|1\n#define lson p<<1,l,mid\n#define rson p<<1|1,mid+1,r\n#define ll long long\nusing namespace std;\nstruct seg{\n\tll tr[400005];\n\tvoid push_up(ll p){tr[p]=tr[ls]+tr[rs];}\n\tvoid update(ll p,ll l,ll r,ll aim)\n\t{\n\t\tif(l==r&&l==aim)\n\t\t{\n\t\t\ttr[p]^=1;\n\t\t\treturn;\n\t\t}\n\t\tll mid=(l+r)>>1;\n\t\tif(aim<=mid) update(lson,aim);\n\t\tif(mid<aim) update(rson,aim);\n\t\tpush_up(p);\n\t}\n\tll query(ll p,ll l,ll r,ll l_x,ll r_x)\n\t{\n\t\tif(l_x<=l&&r<=r_x) return tr[p];\n\t\tll re=0,mid=(l+r)>>1;\n\t\tif(l_x<=mid) re+=query(lson,l_x,r_x);\n\t\tif(mid<r_x) re+=query(rson,l_x,r_x);\n\t\treturn re;\n\t}\n}z,h;\nint main() {\n\tll n,m,q,op,x,y,x1,y1,x2,y2;\n\tscanf(\"%lld %lld %lld\",&n,&m,&q);\n\tfor(ll i=1;i<=q;i++)\n\t{\n\t\tscanf(\"%lld\",&op);\n\t\tif(op==1) \n\t\t{\n\t\t\tscanf(\"%lld %lld\",&x,&y);\n\t\t\th.update(1,1,n,x);\n\t\t\tz.update(1,1,m,y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%lld %lld %lld %lld\",&x1,&y1,&x2,&y2);\n\t\t\tll re1=z.query(1,1,m,y1,y2),re2=h.query(1,1,n,x1,x2);\n\t\t\tprintf(\"%lld\\n\",(x2-x1+1)*re1+(y2-y1+1)*re2-re1*re2*2);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u795d\u5927\u5bb6\u660e\u5929NOI Online\u90fd\u6709\u597d\u6210\u7ee9~  ",
        "postTime": 1583502626,
        "uid": 160701,
        "name": "Azaz\u0435l",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u9898\u8fd8\u4ee5\u4e3a\u662f\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff08\u849f\u84bb\u8868\u793a\u53ea\u662f\u542c\u8bf4\u8fc7\u5e76\u4e0d\u4f1a\u5199\uff09\n\n\u7136\u540e\u770b\u6570\u636e\u8303\u56f4\u2026\u2026$10^5$\n\n\u5148\u60f3$n\\leq 200$\u7684\u6570\u636e\u3002\u8fd9\u4e2a\u6bcf\u6b21\u66b4\u529b\u6539\u66b4\u529b\u67e5\u8be2\u5c31\u884c\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u64cd\u4f5c\u90fd\u662f\u6539\u53d8\u5b8c\u6574\u7684\u4e00\u884c\u548c\u4e00\u5217\uff08\u81ea\u5df1\u7684\u4f4d\u7f6e\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8fd9\u884c\u548c\u8fd9\u5217\u62b5\u6d88\u4e86\uff09\u3002\n\n~~\u8003\u8651\u5c0f\u5b66\u6570\u5b66\u7684\u5957\u8def~~\u3002\u5047\u8bbe\u6211\u4eec\u8981\u67e5\u8be2\u7684\u533a\u95f4\u4e3a`1 1 4 4`\uff0c\u8fdb\u884c\u64cd\u4f5c`1 2 2`\u540e\uff0c\u533a\u95f4\u53d8\u4e3a\n\n$o\\color{blue}x\\color{black}oo$  \n$\\color{blue}xoxx$  \n$o\\color{blue}x\\color{black}oo$  \n$o\\color{blue}x\\color{black}oo$\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u505a\u8fd9\u91cc\u662f\u6539\u53d8\u4e861\u884c\u548c1\u5217\uff08\u4e2d\u95f4\u7684\u62b5\u6d88\u6389\u4e86\uff09\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u4e2d\u95f4\u7684\u5757\u88ab\u7b97\u4e862\u6b21\uff0c\u5e94\u8be5\u51cf\u6389\u3002\n\n\u8fdb\u884c\u64cd\u4f5c`1 4 4`\u540e\uff0c\u533a\u95f4\u53d8\u4e3a\n\n$o\\color{blue}x\\color{black}o\\color{red}x$  \n$\\color{blue}xox\\color{violet}o$  \n$o\\color{blue}x\\color{black}o\\color{red}x$  \n$\\color{red}x\\color{violet}o\\color{red}xo$\n\n\u6ce8\u610f\u7d2b\u8272\u7684\u5730\u65b9\u662f\u591a\u7b97\u7684\uff08\u4e5f\u5305\u62ec`2 2`\u548c`4 4` 2\u4e2a\u4f4d\u7f6e\uff09\n\n\u8bbe\u6539\u53d8\u7684\u884c\u6570\u4e3a$x$\uff0c\u5217\u6570\u4e3a$y$\uff0c\u67e5\u8be2\u7684\u533a\u95f4\u5927\u5c0f\u4e3a$u \\times n$\uff0c\u5219\u7b54\u6848\u4e3a$x\\times m+y\\times n-2\\times x\\times y$\u3002\n\n\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4\u6539\u53d8\u7684\u884c\uff08\u5217\uff09\u6570\u548c\uff0c\u5355\u70b9\u4fee\u6539\uff08\u6bcf\u6b21\u6539\u53d8\u5c31\u662f\u5f02\u6216\uff09\uff0c\u533a\u95f4\u67e5\u8be2\u548c\u3002\n\n\u4ee3\u7801\u5982\u4e0b :\n```\n#include <cstdio>\n#include <cctype>\n#define maxn 100005\n#define ll long long\ninline int read() {\n    int d=0;char ch=getchar();while(!isdigit(ch))ch=getchar();\n    while(isdigit(ch)){d=d*10+ch-48;ch=getchar();}return d;\n}\n\nint n, m, q, op, x, y, u, v;\nll c[maxn<<2], d[maxn<<2]; // c\u4e3a\u884c\uff0cd\u4e3a\u5217\nll xl, yl;\n\n#define lson cur<<1, l, mid\n#define rson cur<<1|1, mid+1, r\n\n// \u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\nvoid modifyc(int cur, int l, int r, int pos) {\n    if(l == r) {c[cur] ^= 1; return;}\n    int mid = (l+r)>>1;\n    if(mid >= pos) modifyc(lson, pos);\n    else modifyc(rson, pos);\n    c[cur] = c[cur<<1] + c[cur<<1|1];\n}\n\nll queryc(int cur, int l, int r, int x, int y) {\n    if(l >= x && r <= y) return c[cur];\n    int mid = (l+r)>>1;\n    ll sum = 0;\n    if(mid >= x) sum += queryc(lson, x, y);\n    if(mid < y) sum += queryc(rson, x, y);\n    return sum;\n}\n\nvoid modifyd(int cur, int l, int r, int pos) {\n    if(l == r) {d[cur] ^= 1; return;}\n    int mid = (l+r)>>1;\n    if(mid >= pos) modifyd(lson, pos);\n    else modifyd(rson, pos);\n    d[cur] = d[cur<<1] + d[cur<<1|1];\n}\n\nll queryd(int cur, int l, int r, int x, int y) {\n    if(l >= x && r <= y) return d[cur];\n    int mid = (l+r)>>1;\n    ll sum = 0;\n    if(mid >= x) sum += queryd(lson, x, y);\n    if(mid < y) sum += queryd(rson, x, y);\n    return sum;\n}\n\nint main() {\n    n = read(), m = read(), q = read();\n    while(q--) {\n        op = read();\n        if(op == 1) {\n            x = read(), y = read();\n            modifyc(1, 1, n, x);\n            modifyd(1, 1, n, y);\n        }\n        else {\n            x = read(), y = read(), u = read(), v = read();\n            xl = queryc(1, 1, n, x, u);\n            yl = queryd(1, 1, n, y, v);\n            printf(\"%lld\\n\", xl*(v-y+1)+yl*(u-x+1)-2*xl*yl);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1543756368,
        "uid": 79017,
        "name": "\u82b1\u91cc\u5fc3\u7231",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3801 \u3010\u7ea2\u8272\u7684\u5e7b\u60f3\u4e61\u3011"
    }
]