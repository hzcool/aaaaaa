[
    {
        "content": "### \u8bf4\u5728\u524d\u9762\u7684\u8bdd\uff1a\n\u5728\u6211\u5199\u8fd9\u7bc7\u9898\u89e3\u65f6\uff0c\u56e0\u4e3a\u6570\u636e~~\u592a\u6c34~~\u95ee\u9898\uff0c\u8fc7\u5ba1\u7684\u591a\u6570\u9898\u89e3\u90fd\u53ef\u4ee5\u88ab Hack\uff0c\u5e26\u6765\u4e86\u8bb8\u591a\u56f0\u6270\u3002\u6240\u4ee5\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u80fd\u7ed9\u5927\u5bb6\u5e26\u6765\u5e2e\u52a9\u3002\n\n\uff08\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c~~Hack~~\u6307\u6b63\uff09\n***\n### \u8fdb\u5165\u6b63\u9898\uff1a\n\u8bfb\u9898\uff0c\u5bb9\u6613\u60f3\u5230\u7684\u662f\u4ee5\u5355\u8bcd\u4e3a\u70b9\uff0c\u901a\u8fc7\u672b\u5b57\u6bcd\u4e0e\u9996\u5b57\u6bcd\u6bd4\u8f83\u6765\u8fde\u8fb9\uff0c\u6700\u540e DFS \u5bfb\u627e\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8bcd\u94fe\u3002\u8fd9\u91cc\u56e0\u4e3a\u8981\u6c42\u201c\u5b57\u5178\u5e8f\u6700\u5c0f\u201d\uff0c\u6240\u4ee5\u8981\u5148\u6392\u5e8f\u3002\n\n\u4f46\u662f\u8fd9\u4e48\u5199\u7684\u7f3a\u70b9\u5c31\u5728\u4e8e\uff0c\u8d77\u59cb\u70b9\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u8981\u6328\u4e2a\u627e\u8d77\u70b9\u5c31\u5341\u5206\u4f4e\u6548\u3002[\u5199\u51fa\u6765\u4e86\u4e5f\u4f1a\u6709\u4e24\u4e2a\u70b9\u8d85\u65f6](https://www.luogu.com.cn/record/35699916)\u3002\n\n\u4e8e\u662f\u60f3\u5230\u9898\u76ee\u6240\u6c42\u8bcd\u94fe\u7684\u7279\u5f81\uff1a\u201c\u5355\u8bcd\u5728\u8bcd\u94fe\u4e2d\u51fa\u73b0\u4e14\u4ec5\u51fa\u73b0\u4e00\u6b21\u201d\u3002\u8054\u60f3\u5230\u6b27\u62c9\u8def\u7684\u7279\u5f81\uff0c\u4e5f\u662f\u7ecf\u8fc7\u56fe\u7684\u6bcf\u4e00\u6761\u8fb9\u4e14\u53ea\u7ecf\u8fc7\u4e00\u6b21\u3002\u6240\u4ee5\u8003\u8651\u6784\u9020\u4e00\u5f20\u56fe\uff0c\u5bfb\u627e\u5176\u6b27\u62c9\u8def\uff08\u8fd9\u91cc\u5305\u62ec\u6b27\u62c9\u901a\u8def\u548c\u6b27\u62c9\u56de\u8def\uff09\u3002\n\n\u6784\u9020\u56fe\u7684\u65f6\u5019\uff0c\u4ee5**\u5355\u8bcd\u4e3a\u6709\u5411\u8fb9\uff0c\u5b57\u6bcd\u4e3a\u9876\u70b9**\u3002\u6bd4\u5982\u5355\u8bcd abc\uff0c\u5c31\u662f\u4ece\u9876\u70b9 a \u6307\u5411\u9876\u70b9 c \u7684\u8fb9\u4e4b\u4e00\u3002\u5f53\u4e00\u4e2a\u5355\u8bcd\u7684\u9996\u672b\u5b57\u6bcd\u76f8\u540c\u65f6\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u81ea\u73af\u3002\u5efa\u56fe\u5b8c\u6bd5\u540e\uff0c\u5148\u5224\u65ad\u662f\u5426\u5b58\u5728\u6b27\u62c9\u8def\uff0c\u518d DFS \u5bfb\u627e\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6b27\u62c9\u8def\u3002\n***\n\u63a5\u4e0b\u6765\u5206\u6790\u4ee3\u7801\uff1a\n\n#### Part 1:\u8bfb\u5165\uff0c\u5efa\u56fe\n\u5728\u5efa\u8fb9\u7684\u540c\u65f6**\u5e76\u67e5\u96c6**\uff0c\u6700\u540e\u5224\u65ad\u96c6\u5408\u4e2a\u6570\u662f\u4e0d\u662f $1$\uff0c\u5373\u5224\u65ad\u6240\u6709\u70b9\u662f\u4e0d\u662f\u90fd\u5728\u4e00\u4e2a\u96c6\u5408\u5185\u3002\u8fd9\u4e5f\u662f\u7b2c\u4e00\u6b21\u5224\u65ad\u6b27\u62c9\u8def\u662f\u5426\u5b58\u5728\u3002\n\n```cpp\n//\u6ce8\u610f\uff1a\u8fd9\u53ea\u662f\u90e8\u5206\u4ee3\u7801\nint n,i,letter[27],in[27],out[27],fa[27],set_count;\nstring s[1002];\nint ch_start,ch_end,stf,edf;\nvector<vector<node> >E;\nbool cmp(string a,string b)\n{\n    return a<b;\n}\nint find(int x)\n{\n    if(fa[x]!=x)return fa[x]=find(fa[x]);\n    return fa[x];\n}\nvoid unionn(int x,int y)\n{\n    fa[y]=x;\n    return;\n}\nstruct node\n{\n    int to,ord;\n    string word;\n};\nint main()\n{\n    cin>>n;\n    E.resize(27);//E\u6570\u7ec4\u5b58\u8fb9\n    for(i=1;i<=n;i++)cin>>s[i];\n    sort(s+1,s+n+1,cmp);//\u6392\u5e8f\n    for(i=1;i<=n;i++)\n    {\n        ch_start=s[i][0]-'a'+1;//\u7b2ci\u4e2a\u8bcd\u7684\u9996\u5b57\u6bcd\n        ch_end=s[i][s[i].length()-1]-'a'+1;//\u7b2ci\u4e2a\u8bcd\u7684\u672b\u5b57\u6bcd\n        out[ch_start]++;//\u9996\u5b57\u6bcd\u51fa\u5ea6\u52a01\n        in[ch_end]++;//\u672b\u5b57\u6bcd\u5165\u5ea6\u52a01\n        if(!letter[ch_start])//\u5982\u679c\u8fd9\u4e2a\u9996\u5b57\u6bcd\uff08\u8282\u70b9\uff09\u6ca1\u6709\u51fa\u73b0\u8fc7\n        {\n            set_count++;//\u96c6\u5408\u6570\u52a01\n            letter[ch_start]=1;//\u6807\u8bb0\u4e00\u4e0b\n            fa[ch_start]=ch_start;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n        }\n        if(!letter[ch_end])//\u540c\u4e0a\n        {\n            set_count++;\n            letter[ch_end]=1;\n            fa[ch_end]=ch_end;\n        }\n        if(ch_start!=ch_end)//\u5982\u679c\u4e0d\u662f\u81ea\u73af\n        {\n            stf=find(ch_start);\n            edf=find(ch_end);\n            //\u627e\u4ee3\u8868\u5143\n            if(stf!=edf)//\u5982\u679c\u4e0d\u5728\u540c\u4e00\u96c6\u5408\u5185\n            {\n                set_count--;//\u96c6\u5408\u6570\u51cf1\n                unionn(stf,edf);\n            }\n        }\n        node tmp;//\u65b0\u5efa\u4e00\u6761\u8fb9\n        tmp.to=ch_end;\n        tmp.ord=i;\n        tmp.word=s[i];\n        E[ch_start].push_back(tmp);//vector\u5b58\u56fe\n    }\n    if(set_count!=1)//\u5982\u679c\u5b58\u5728\u591a\u4e2a\u96c6\u5408\uff08\u8fde\u901a\u5757\uff09\uff0c\u90a3\u4e48\u4e00\u5b9a\u6ca1\u6709\u6b27\u62c9\u8def\n    {\n        cout<<\"***\";\n        return 0;\n    }\n```\n***\n#### Part 2:\u5bfb\u627e\u6b27\u62c9\u8def\u8d77\u59cb\u70b9\n\u6709\u5411\u56fe\u4e2d\u6b27\u62c9\u901a\u8def\u5b58\u5728\u6761\u4ef6\u662f\uff1a\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u70b9\u51fa\u5ea6\u6bd4\u5165\u5ea6\u5927 $1$\uff08\u8d77\u70b9\uff09\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u70b9\u5165\u5ea6\u6bd4\u51fa\u5ea6\u5927 $1$\uff08\u7ec8\u70b9\uff09\uff0c\u5176\u4f59\u70b9\u5165\u5ea6\u7b49\u4e8e\u51fa\u5ea6\u3002\n\n\u6709\u5411\u56fe\u4e2d\u6b27\u62c9\u56de\u8def\u5b58\u5728\u6761\u4ef6\u662f\uff1a\u6240\u6709\u70b9\u5165\u5ea6\u7b49\u4e8e\u51fa\u5ea6\u3002\n\n\u7ed3\u5408\u4e0a\u8ff0\u5224\u5b9a\u65b9\u6cd5\uff0c\u6709\u5982\u4e0b\u4ee3\u7801\uff1a\n```cpp\nint Eular_start,Eular_end;\n//...\n    for(i=1;i<=26;i++)//\u6700\u591a\u53ea\u670926\u4e2a\u70b9\n    {\n        if(!letter[i])continue;//\u5982\u679c\u8fd9\u4e2a\u5b57\u6bcd\u6ca1\u6709\u51fa\u73b0\u5c31\u8df3\u8fc7\n        if(out[i]==in[i]+1)//\u8fd9\u4e2a\u70b9\u51fa\u5ea6\u6bd4\u5165\u5ea6\u59271\n        {\n            if(Eular_start)//\u5982\u679c\u6709\u591a\u4e2a\u8d77\u70b9\uff0c\u90a3\u4e48\u65e0\u89e3\n            {\n                cout<<\"***\";\n                return 0;\n            }\n            Eular_start=i;//\u6807\u8bb0\u8d77\u70b9\n        }\n        else if(in[i]==out[i]+1)//\u540c\u4e0a\n        {\n            if(Eular_end)\n            {\n                cout<<\"***\";\n                return 0;\n            }\n            Eular_end=i;\n        }\n        else if(in[i]==out[i])continue;\n        else\n        {\n            cout<<\"***\";\n            return 0;\n        }\n    }\n    if((Eular_start&&!Eular_end)||(!Eular_start&&Eular_end))//\u5982\u679c\u201c\u6709\u59cb\u65e0\u7ec8\u201d\u6216\u201c\u6709\u7ec8\u65e0\u59cb\u201d\uff0c\u5219\u65e0\u89e3\n    {\n        cout<<\"***\";\n        return 0;\n    }\n    if(!Eular_start)Eular_start=s[1][0]-'a'+1;//\u5982\u679c\u662f\u56de\u8def\uff08\u65e0\u8d77\u70b9\uff09\uff0c\u5219\u9009\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u70b9\u51fa\u53d1\n```\n***\n#### Part 3:DFS\u6c42\u6b27\u62c9\u8def\n\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u51fa\u8fb9\u5df2\u7ecf\u6392\u597d\u4e86\u5e8f\uff0c\u6240\u4ee5\u987a\u5e8f\u904d\u5386\u5373\u53ef\u3002\u5728\u641c\u7d22\u65f6\u987a\u4fbf\u8bb0\u5f55\u7b54\u6848\u3002\n```cpp\nint vis[1002];\nstring res[1002];\nvoid dfs(int st,int now,int pre_edge)//st\u8868\u793a\u8bcd\u94fe\u4e2d\u6709\u51e0\u4e2a\u5355\u8bcd\uff0cnow\u8868\u793a\u73b0\u5728\u5230\u8fbe\u4e86\u54ea\u4e00\u4e2a\u70b9,pre_edge\u8868\u793a\u4e0a\u4e00\u6761\u8fb9\u7684\u5e8f\u53f7\uff0c\u65b9\u4fbf\u56de\u6eaf\n{\n    if(st==n)//\u5982\u679c\u5230\u8fbe\u7ec8\u70b9\n    {\n        for(i=1;i<=n;i++)//\u8f93\u51fa\u7ed3\u679c\n        {\n            cout<<res[i];\n            if(i<n)cout<<\".\";\n        }\n        exit(0);\n    }\n    for(int k=0;k<E[now].size();k++)\n    {\n        if(!vis[E[now][k].ord])//\u5982\u679c\u672a\u88ab\u6807\u8bb0\u8fc7\n        {\n            vis[E[now][k].ord]=1;\n            res[st+1]=E[now][k].word;\n            dfs(st+1,E[now][k].to,E[now][k].ord);\n        }\n    }\n    vis[pre_edge]=0;//\u56de\u6eaf\n    return;\n}\n//...\n    dfs(0,Eular_start,0);//\u4ecePart 2\u4e2d\u627e\u5230\u7684\u8d77\u70b9\u5f00\u59cb\n```\n***\n\uff08\u5b8c\u6574\u4ee3\u7801\u5728[\u8fd9\u91cc](https://www.luogu.com.cn/paste/riovrqa2)\uff09\n",
        "postTime": 1595600892,
        "uid": 205970,
        "name": "loc_equinox",
        "ccfLevel": 0,
        "title": "P1127 \u8bcd\u94fe \u9898\u89e3"
    },
    {
        "content": "updated:2020.10.30\n\n\uff08\u628a\u4e4b\u524d\u7684\u4e00\u4e9b\u660e\u663e\u7684\u9519\u8bef\u6539\u4e86\uff0c\u6211\u679c\u7136\u8fd8\u662f\u5b66\u827a\u4e0d\u7cbe\u3002\u3002\uff09\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\uff1a\u5982\u679c\u5b57\u7b26\u4e32A\u7684\u5c3e\u90e8\u7b49\u4e8e\u5b57\u7b26\u4e32B\u7684\u5934\u90e8\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u6709\u53ef\u80fd\u76f8\u8fde\u7684\u3002\n\n\u6570\u636e\u8303\u56f4\u5e76\u4e0d\u662f\u5f88\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u641c\u7d22\u7684\u7b56\u7565\u3002\n\n\u5173\u952e\u662f\u8981\u627e\u5230\u4e00\u4e2a\u51c6\u786e\u7684\u8d77\u70b9\u6765\u641c\u7d22\n\n\u90a3\u4e48\u8d77\u70b9\u662f\u54ea\u4e2a\u5b57\u7b26\u4e32\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u6765\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\uff1a\u5982\u679c\u5047\u8bbe\u6709\u5b57\u7b26\u4e32abs\u548c\u5b57\u7b26\u4e32sto\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u3002\u4ed6\u4eec\u76f8\u8fde\u540e\u5c31\u662fabs.sto\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e2a\u70b9\u4e24\u8fb9\u7684\u5b57\u6bcd\u4e00\u5b9a\u662f\u76f8\u540c\u7684\u3002\u90a3\u5bf9\u4e8e\u6574\u6761\u94fe\u6765\u8bf4\uff0c\u5982\u679c\u9664\u53bb\u6700\u5de6\u7aef\u548c\u6700\u53f3\u7aef\u7684\u4e24\u4e2a\u5b57\u6bcd\u540e\u3002\u4e2d\u95f4\u7684\u6bcf\u4e2a\u70b9\u4e24\u8fb9\u7684\u5b57\u6bcd\u90fd\u76f8\u540c\uff0c\u4e5f\u5c31\u6709\u4e86\u4ee5\u4e0b\u4e24\u4e2a\u5f88\u91cd\u8981\u7684\u6027\u8d28\uff1a\n#### \uff11\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\u4e00\u5b9a\u662f\u5076\u6570\u6b21\n#### \uff12\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u5728\u5b57\u7b26\u4e32\u9996\u4f4d\u7684\u4e2a\u6570\u4e00\u5b9a\u7b49\u4e8e\u51fa\u73b0\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u4e2a\u6570\uff08\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u70b9\uff0c\u90fd\u80fd\u6ee1\u8db3\u4e0a\u9762\u7684\u6761\u4ef6\uff09\n\n\u73b0\u5728\u5c06\u5de6\u7aef\u548c\u53f3\u7aef\u7684\u4e24\u4e2a\u5b57\u6bcd\u8003\u8651\u8fdb\u53bb\uff0c\u4e00\u5b9a\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e2d\u7684\u4e00\u79cd\n \n \uff11\u5de6\u7aef\u548c\u53f3\u7aef\u7684\u4e24\u4e2a\u5b57\u6bcd\u76f8\u540c\uff0c\u4e0a\u9762\u7684\u4e24\u4e2a\u6027\u8d28\u4ecd\u7136\u6210\u7acb\uff0c\u6b64\u65f6\u6211\u4eec\u5c06\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u8d77\u70b9\u3002\n \n\uff12\u5de6\u7aef\u548c\u53f3\u7aef\u7684\u4e24\u4e2a\u5b57\u7b26\u4e0d\u540c\uff0c\u4e0a\u9762\u4e24\u4e2a\u6027\u8d28\u4e0d\u518d\u6210\u7acb\uff0c\u4f46\u662f\u53c8\u6709\u4e86\u65b0\u7684\u6027\u8d28\uff1a\n\n#### \uff08\uff11\uff09\u4e00\u5b9a\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5176\u51fa\u73b0\u5728\u5b57\u7b26\u4e32\u9996\u4f4d\u7684\u4e2a\u6570\u7b49\u4e8e\u51fa\u73b0\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u4e2a\u6570\uff0b\uff11\uff0c\u8fd9\u4e2a\u5b57\u6bcd\u4e00\u5b9a\u4f5c\u8d77\u70b9\uff08\u8bbe\u4e3ac\uff09\u3002\n#### \uff08\uff12\uff09\u4e00\u5b9a\u8fd8\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5176\u51fa\u73b0\u5728\u5b57\u7b26\u4e32\u9996\u4f4d\u7684\u4e2a\u6570\u7b49\u4e8e\u51fa\u73b0\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u4e2a\u6570\uff0d\uff11\uff0c\u8fd9\u4e2a\u5b57\u6bcd\u4e00\u5b9a\u4f5c\u7ec8\u70b9\uff08\u8bbe\u4e3ad\uff09\u3002\u6211\u4eec\u5728\u4ee5\uff43\u4e3a\u9996\u7684\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u5b57\u5178\u5e8f\u5c0f\u7684\uff0c\u8ba9\u5b83\u4f5c\u4e3a\u8d77\u70b9\u5373\u53ef\u3002\u4f46\u662f\u540c\u65f6\u6211\u4eec\u5f97\u4fdd\u8bc1\u8be5\u5b57\u7b26\u4e32\u7684\u7ec8\u70b9\u4e0d\u4e3ad\uff0c\u6216\u8005\u4ee5d\u4e3a\u7ed3\u5c3e\u7684\u4e2a\u6570\u4e0d\u4e3a\uff11\uff0c\u8981\u52a0\u4e0a\u8fd9\u4e2a\u5224\u65ad\n\n\u73b0\u5728\u6211\u4eec\u5c31\u77e5\u9053\u4e86\u8d77\u70b9start\uff0c\u6211\u4eec\u5c31\u4ece\u8fd9\u91cc\u51fa\u53d1\uff0c\u5f00\u59cb\u641c\u7d22\u3002\n### \u641c\u7d22\u7684\u6ce8\u610f\u4e8b\u9879\uff1a\n#### 1.\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2aflag\u6807\u8bb0\u662f\u5426\u5df2\u7ecf\u627e\u5230\u7b54\u6848\u3002\u7531\u4e8e\u662f\u6309\u5b57\u5178\u5e8f\u641c\u7d22\uff0c\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u7b54\u6848\u4e00\u5b9a\u662f\u6700\u4f18\u7b54\u6848\u3002\u8fd9\u65f6\u5019\u8981\u7acb\u5373return,\u5728\u4e4b\u540e\u7684\u56de\u6eaf\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679cflag==1\uff0c\u4e5f\u8981\u7acb\u5373\u56de\u6eaf\uff0c\u4e0d\u7136\u6709\u53ef\u80fd\u662f\u6b63\u786e\u7b54\u6848\u88ab\u66f4\u6362\u6389\u3002\uff08\u6211\u5c31\u662f\u8fd9\u4e48\u9519\u7684\uff09\n#### 2.\u8bb0\u5f55\u6700\u7ec8\u7b54\u6848\u548c\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u9700\u8981\u5b9a\u4e49\u4e24\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u3002\u4e00\u4e2a\u8d1f\u8d23\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u66f4\u65b0\uff0c\u53e6\u4e00\u4e2a\u8d1f\u8d23\u627e\u5230\u7b54\u6848\u540e\u8f6c\u79fb\u3002\uff08\u8fd9\u6837\u6bd4\u8f83\u4fdd\u9669\uff09\n#### 3.\u5f53\u7136\u8fd8\u9700\u8981\u4e00\u4e2abook[]\u6570\u7ec4\uff0c\u7528\u6765\u5224\u65ad\u5f53\u524d\u7684\u5b57\u7b26\u4e32\u662f\u5426\u5df2\u7ecf\u7528\u8fc7\u3002\u641c\u7d22\u524d\u6807\u8bb0\u6210book[]=1;\u56de\u6eaf\u65f6\u8981\u8bb0\u5f97book[]\u6807\u8bb0\u56de0\uff1b\n#### 4.\u4e00\u5f00\u59cb\u7684\u8d77\u70b9\u4e00\u5b9a\u8981\u5148\u6807\u8bb0book[]=1;\n\n\u7136\u540e\u641c\u7d22\u90e8\u5206\u5c31\u81ea\u7136\u5730\u89e3\u51b3\u5566\uff0c\u6211\u4eec\u7ef4\u62a4\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u8c01\uff0c\n\u5728\u679a\u4e3e\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u65f6\u5019\uff0c\u5982\u679c\u8be5\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u7b26\u7b49\u4e8e\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5c3e\u5b57\u7b26\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5f80\u4e0b\u641c\u3002\n\nAC\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<map>\nusing namespace std;\nconst int maxn=1e5+5;\nstring a[maxn];\nstring ans[maxn];\nstring now[maxn];\nint sum=0;\nint len[maxn];\nint book[maxn];\nmap<char,int> s1,s2;\nint n;\nint flag=0;\nvoid dfs(int last,int step)\n{\n\tif(flag==1)\n\treturn;\n\tif(step==n)\n\t{\n\t\tflag=1;\n\t\tfor(int i=1;i<=sum;i++)\n\t\t{\n\t\t\tans[i]=now[i];\n\t\t}\n\t\treturn;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(book[i]==1)\n\t\tcontinue;\n\t\tif(a[last][a[last].length()-1]==a[i][0])\n\t\t{\n\t\t\tnow[++sum]=a[i];\n\t\t\tbook[i]=1;\n\t\t\tdfs(i,step+1);\n\t\t\tsum--;\n\t\t\tbook[i]=0;\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];\n\t\tlen[i]=a[i].length();\n\t\ts1[a[i][0]]++;\n\t\ts2[a[i][len[i]-1]]++;\n\t}\t\n\tint start=1;\n\tsort(a+1,a+1+n);\n\tchar s,t;\n\tfor(char c='a';c<='z';c++)\n\t{\n\t\tif(abs(s1[c]-s2[c])==1)\n\t\t{\n\t\t\tif(s1[c]-s2[c]==1)\n\t\t\ts=c;\n\t\t\telse\n\t\t\tif(s2[c]-s1[c]==1)\n\t\t\tt=c;\n\t\t}\n\t}\n\tint cnt=s2[t];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i][0]==s && (a[i][len[i]-1]!=t || cnt!=1))\n\t\t{\n\t\t\tstart=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tbook[start]=1;\n\tnow[++sum]=a[start];\n\tdfs(start,1);\n\tif(flag==0)\n\t{\n\t\tprintf(\"***\\n\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(i!=n)\n\t\tcout<<ans[i]<<\".\";\n\t\telse\n\t\tcout<<ans[i];\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1567824295,
        "uid": 114514,
        "name": "zzr8178541919",
        "ccfLevel": 7,
        "title": "\u8bcd\u94fe"
    },
    {
        "content": "\u55ef\u2026\u2026\u5f53\u521d\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c\u65e0\u8111\u5199\u4e86\u4e00\u6ce2\uff08\u4e0d\u5c31\u662f\u5b58\u56fe\u7206\u641c\u561b\uff09\uff0c\u7136\u540ewa\u4e86\u65e0\u6570\u6b21\n\n\u67e5\u9605\u8d44\u6599\u540e\u53d1\u73b0\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\uff1a\n\n\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u5b58\u5728\u6b27\u62c9\u901a\u8def\u7684\u6761\u4ef6\u662f\uff1a\n\n1\uff09\u57fa\u56fe\uff08\u5c31\u662f\u5bf9\u5e94\u7684\u65e0\u5411\u56fe\uff09\u8054\u901a\n\n2\uff09\u53ea\u6709\u4e00\u4e2a\u70b9\u51fa\u5ea6\u6bd4\u5165\u5ea6\u59271\uff0c\u4e00\u4e2a\u70b9\u5165\u5ea6\u6bd4\u51fa\u5ea6\u59271\uff0c\u5176\u4ed6\u4e24\u8005\u76f8\u7b49\uff0c\u8bf6\u5982\u679c\u6240\u6709\u70b9\u5165\u5ea6\u51fa\u5ea6\u90fd\u76f8\u7b49\uff0c\u5c31\u662f\u6b27\u62c9\u56de\u8def\u5566\n\n\u7136\u540e\u56de\u5230\u8fd9\u9898\uff0c\u6bd4\u8f83\u6b63\u7ecf\u7684\u601d\u8def\u5e94\u8be5\u662f\uff1a\n\n1\uff09\u4ee5\u5355\u8bcd\u4e3a\u8fb9\uff0c\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u548c\u672b\u5b57\u6bcd\u4e3a\u70b9\u8fde\u8fb9\uff0c\u6240\u4ee5\u56fe\u81f3\u591a\u670926\u4e2a\u70b9\uff0c\u7edf\u8ba1\u51fa\u73b0\u8fc7\u7684\u70b9\uff08\u5b57\u6bcd\uff09\n\n2\uff09\u5b58\u4e0b\u5bf9\u5e94\u7684\u65e0\u5411\u56fe\uff0c\u968f\u4fbf\u8dd1\u4e00\u4e0b\u5e76\u67e5\u96c6\uff0c\u68c0\u9a8c\u8054\u901a\u5757\u7684\u4e2a\u6570\u662f\u4e0d\u662f1\uff1b\n\n3\uff09\u5efa\u56fe\u7684\u65f6\u5019\u987a\u4fbf\u7edf\u8ba1\u70b9\u7684\u5ea6\u6570\uff0c\u7136\u540e\u5224\u65ad\u662f\u54ea\u79cd\u60c5\u51b5\uff0c\u4e4b\u540e\u9012\u5f52\u6784\u9020\u7b54\u6848\u5c31\u884c\u4e86\u3002\n\n\n\n\n\n```cpp\n#include<iostream>\nusing namespace std;\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<vector>\nconst int maxm = 26;\nconst int maxn = 1010;\nint exist[maxm],set[maxm];\nint find(int x){\n    return set[x]==x ? x : set[x] = find(set[x]);\n}\nstruct edge{\n    int s,t,key;\n    bool operator < (const edge &a){\n        if(s != a.s) return s < a.s;\n        return key < a.key;\n    }\n}e[2*maxn]; int p1,p2;\nvoid add(int a,int b,int k){\n    e[++p1].s=a,e[p1].t=b;\n}\nstring st[maxn],ans[maxn];\nint n,rudu[maxm],chudu[maxm],head=-1,vis[maxn],ptr,flag;\nbool judge(){\n    for(int i = 0;i < maxm;i++) set[i] = i;\n    for(int i = 1;i <= p1;i++){\n        int a = e[i].s,b = e[i].t;\n        int fa = find(a),fb = find(b);\n        if(fa != fb) set[fa] = fb;\n    }\n    int cnt = 0;\n    for(int i = 0;i < maxm;i++)\n        if(exist[i] && set[i]==i)\n            cnt++;\n    if(cnt != 1) return false;\n    return true;\n}\nvoid dfs(int now){\n    for(int i = 1;i <= n;i++)\n        if(st[i][0]-'a'==now && !vis[i]){\n            vis[i] = 1;\n            dfs(st[i][st[i].length()-1]-'a');\n            ans[++ptr] = st[i];\n        }\n}\nint main(){\n    cin>>n;\n    for(int i = 1;i <= n;i++) cin>>st[i];\n    sort(st+1,st+1+n);\n    for(int i = 1;i <= n;i++){\n        int a = st[i][0]-'a',b = st[i][st[i].length()-1]-'a';\n        if(!exist[a]) exist[a]=1; if(!exist[b]) exist[b] = 1;\n        add(a,b,0); add(b,a,0);\n        rudu[b]++,chudu[a]++;\n    }\n    if(!judge()){\n        cout<<\"***\"; return 0;\n    }\n    int cnt = 0;\n    for(int i = 0;i < maxm;i++){\n        if(abs(chudu[i]-rudu[i]) >= 1){\n            cnt++;\n            if(abs(chudu[i]-rudu[i]) > 1){\n                cout<<\"***\"; return 0;\n            }else if(chudu[i]-rudu[i]==1 && head==-1) head = i;\n        }\n    }\n//    cout<<cnt<<\" \"<<head<<endl;\n    if(cnt != 0 && cnt != 2){\n        cout<<\"***\"; return 0;\n    }else if(cnt == 2) dfs(head);\n    else for(int i = 0;i < maxm;i++) if(exist[i]) dfs(i);\n    for(int i = ptr;i >= 1;i--){\n        cout<<ans[i];\n        if(i > 1) cout<<\".\";\n    } \n    return 0;\n}\n```",
        "postTime": 1506786556,
        "uid": 28344,
        "name": "chauchat",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1127 \u3010\u8bcd\u94fe\u3011"
    },
    {
        "content": "### \u9898\u89e3 P1127 \u8bcd\u94fe\n\nUPD 2020.9.4\uff1a\u611f\u8c22 [@\u592a\u9633\u8d77\u665a\u4e86\u5462](https://www.luogu.com.cn/user/178804)\uff0c\u4fee\u6539\u4e86\u4e00\u5904 bug\uff0c\u5e76\u4fee\u6539\u4e86\u6392\u7248\u3002\n\n### \u9898\u610f\n\n\u7ed9\u4f60\u51e0\u4e2a\u5b57\u7b26\u4e32\uff0c\u8ba9\u4f60\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u6392\u5217\u7ec4\u5408\u4e00\u4e0b\uff0c\u4f7f\u5f97\u76f8\u90bb\u7684\u4e24\u4e2a\u5355\u8bcd\u4e2d\u524d\u9762\u4e00\u4e2a\u5355\u8bcd\u7684\u5c3e\u5b57\u6bcd\u7b49\u4e8e\u540e\u9762\u4e00\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u3002\n\n### \u601d\u8def\n\n\u8fd9\u9053\u9898\u80af\u5b9a\u662f\u4e00\u9053**\u641c\u7d22**\u9898\u3002\n\n\u601d\u8def\uff1a\u4ece\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \u5f00\u59cb\uff0c\u6bcf\u6b21\u5728\u8f93\u5165\u7684\u6240\u6709\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u9996\u5b57\u6bcd\u4e0e $s$ \u7684\u5c3e\u5b57\u6bcd\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u7528\u627e\u5230\u7684\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7ee7\u7eed\u641c\u7d22\uff0c\u76f4\u5230\u641c\u7d22\u5230 $n$ \u4e2a\u5b57\u7b26\u4e32\u4e3a\u6b62\u3002\n\n\u300c\u6bcf\u6b21\u5728\u8f93\u5165\u7684\u6240\u6709\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u9996\u5b57\u6bcd\u4e0e $s$ \u7684\u5c3e\u5b57\u6bcd\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u300d\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u5728\u8f93\u5165\u7684\u65f6\u5019\u5c31\u5efa\u56fe\uff0c\u5728\u9996\u3001\u5c3e\u5b57\u6bcd\u76f8\u540c\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u5efa\u7acb\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u641c\u7d22\u7684\u65f6\u5019\u76f4\u63a5\u7528\u5efa\u597d\u7684\u8fd9\u4e9b\u8fb9\u627e\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u4e2a\u641c\u7d22\u5f88\u597d\u505a\uff0c\u5927\u6982\u53ea\u6709\u9ec4\u9898\u7684\u96be\u5ea6\uff0c\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nstd::string a[1001];\nstd::vector<int> e[1001];\n\nfor (int i = 1; i <= n; ++i)\n  std::cin >> a[i];\nstd::sort(a + 1, a + n + 1); // \u5b57\u5178\u5e8f\u6392\u5e8f\uff08\u9898\u76ee\u8981\u6c42\uff09\nfor (int i = 1; i <= n; ++i)\n  for (int j = 1; j <= n; ++j)\n    if (i != j && a[i][a[i].length() - 1] == a[j][0]) // \u5224\u65ad\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u53ef\u4ee5\u76f8\u8fde\uff08\u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5c3e\u5b57\u6bcd\u7b49\u4e8e\u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u6bcd\uff09\n      e[i].push_back(j);\n\nbool used[1001];\n// s: \u5f53\u524d\u5b57\u7b26\u4e32\u7684\u7f16\u53f7\uff08\u6240\u6709\u5b57\u7b26\u4e32\u6309\u5b57\u5178\u5e8f\uff0c\u7f16\u53f7\u5206\u522b\u4e3a 1 \u5230 n\uff09\n// curr: \u5f53\u524d\u5df2\u751f\u6210\u7684\u8bcd\u94fe\u3002\n// count: \u5df2\u67e5\u627e\u5230\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\u3002\nvoid dfs(int s, std::string curr, int count) {\n\tif (count == n) {\n\t\tcurr[curr.length() - 1] = ' '; // \u628a\u6700\u540e\u4e00\u4e2a '.' \u53bb\u6389\u3002\n\t\tstd::cout << curr;\n\t\texit(0);\n\t}\n\tfor (auto i : e[s])\n\t\tif (!used[i]) {\n\t\t\tused[i] = true;\n\t\t\tdfs(i, curr + a[i] + '.', count + 1);\n\t\t\tused[i] = false;\n\t\t}\n}\n```\n\n\u7136\u540e\u7528\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u5355\u8bcd\u8bd5\u4e00\u904d\uff0c\u5982\u679c\u53ef\u4ee5\u5c31\u76f4\u63a5\u8f93\u51fa\u7136\u540e\u7ed3\u675f\u7a0b\u5e8f\u3002\n\n\u8fd9\u79cd\u505a\u6cd5\uff0c\u53ef\u4ee5\u62ff\u5230 $80$ \u5206\u3002\n\n### \u8003\u8651\u4f18\u5316\n\n\u6709\u4e24\u4e2a\u70b9\u70b8\u6389\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8003\u8651\u4f18\u5316\u3002\n\n\u663e\u7136\u300c\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u5355\u8bcd\u8bd5\u4e00\u904d\u300d\u8fd9\u4e2a\u65b9\u6cd5\u6548\u7387\u975e\u5e38\u4f4e\u3002\n\n\u6211\u4eec\u9700\u8981\u7b5b\u9009\u51fa\u4e00\u4e9b\u53ef\u80fd\u4f5c\u4e3a\u8bcd\u94fe\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u8bcd\u3002\n\n\u5982\u4f55\u627e\u5230\u8fd9\u4e2a\u5355\u8bcd\u5462\uff1f\n\n\u89c2\u5bdf\u6837\u4f8b\uff0c\u6211\u4eec\u53d1\u73b0\uff1a\n\n```plain\na----a.a----d.d----g.g----r.r----t.t-----\n```\n\n\u53d1\u73b0 `a` \u4f5c\u4e3a\u8bcd\u94fe\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5b83\u4f5c\u4e3a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u7684\u6b21\u6570\u4e3a $2$\uff08\u5b83\u662f\u5355\u8bcd `aloha` \u548c `arachnid` \u7684\u9996\u5b57\u6bcd\uff09\uff0c\u4f5c\u4e3a\u5355\u8bcd\u7684\u5c3e\u5b57\u6bcd\u7684\u6b21\u6570\u4e3a $1$ \uff08\u5b83\u662f `aloha` \u7684\u5c3e\u5b57\u6bcd\uff09\u3002\u9996\u5b57\u6bcd\u6b21\u6570\u662f\u5c3e\u5b57\u6bcd\u6b21\u6570\u52a0 $1$\u3002\n\n\u518d\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\uff0c\u6216\u8005\u81ea\u5df1\u9020\u51e0\u4e2a\u6837\u4f8b\uff0c**\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5408\u6cd5\u7684\u8bcd\u94fe\uff0c\u5b83\u7684\u9996\u5b57\u6bcd\u5b57\u7b26\uff0c\u5b83\u4f5c\u4e3a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u7684\u6b21\u6570\u6c38\u8fdc\u662f\u5b83\u4f5c\u4e3a\u5355\u8bcd\u5c3e\u5b57\u6bcd\u7684\u6b21\u6570\u52a0\u4e0a $1$\u3002**\n\n\u56e0\u4e3a\u4ece\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u5c3e\u5b57\u6bcd\u5f00\u59cb\u5230\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u7ed3\u675f\uff0c**\u6bcf\u4e2a\u4f5c\u4e3a\u9996\u5b57\u6bcd/\u5c3e\u5b57\u6bcd\u7684\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u90fd\u662f\u5076\u6570\uff08\u6210\u5bf9\u51fa\u73b0\uff09**\uff08\u8fd9\u4e2a\u5e94\u8be5\u5f88\u597d\u7406\u89e3\uff09\u3002\n\n\u7136\u800c\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u591a\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u5b83\u4e0d\u662f\u6210\u5bf9\u51fa\u73b0\u7684\u3002\n\n\u6240\u4ee5\u5c31\u6709\u4e86\u4e0a\u8ff0\u7ed3\u8bba\u3002\n\n\u5f53\u7136\uff0c\u4e5f\u6709\u7279\u6b8a\u60c5\u51b5\uff0c\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u5c3e\u5b57\u6bcd\u548c\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u662f\u4e00\u6837\u7684\uff08\u5373\u53ef\u4ee5\u8fde\u6210\u4e00\u4e2a\u73af\uff09\u3002\u90a3\u4e48\u4ece $1$ \u5f00\u59cb\u5c31\u884c\u4e86\u3002\n\n```cpp\nint ind[1001]; // \u4f5c\u4e3a\u9996\u5b57\u6bcd\u7684\u6b21\u6570\nint rnd[1001]; // \u4f5c\u4e3a\u5c3e\u5b57\u6bcd\u7684\u6b21\u6570\n\n// \u6240\u4ee5\u6267\u884c find() \u524d\u8981\u52a0\u4e0a\u8fd9\u6bb5\uff1a\nfor (int i = 1; i <= n; ++i) {\n  ++ind[a[i][0]];\n  ++rnd[a[i][a[i].length() - 1]];\n}\n\n\nfor (int i = 1; i <= n; ++i)\n  if (ind[a[i][0]] == rnd[a[i][0]] + 1) {\n    used[i] = true;\n    dfs(i, a[i] + '.', 1);\n    used[i] = false;\n  }\nused[1] = true;\ndfs(1, a[1] + '.', 1);\nused[1] = false; // \u4e0d\u884c\uff0c\u5c31\u4ece 1 \u5f00\u59cb\u3002\n```\n\n### \u4ee3\u7801\n\n```cpp\nint n;\nstd::string a[1001];\nstd::vector<int> e[1001];\nint ind[1001];\nint rnd[1001];\nbool used[1001];\n\nvoid dfs(int s, std::string curr, int count) {\n\t// \u4e0e\u4e0d\u4f18\u5316\u65f6\u540c\u6837\u7684 dfs \u4ee3\u7801\u3002\n}\n\nint main() {\n\tstd::cin >> n;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tstd::cin >> a[i];\n\t\t++ind[a[i][0]];\n\t\t++rnd[a[i][a[i].length() - 1]];\n\t}\n\tstd::sort(a + 1, a + n + 1);\n\tfor (int i = 1; i <= n; ++i)\n\t\tfor (int j = 1; j <= n; ++j)\n\t\t\tif (i != j && a[i][a[i].length() - 1] == a[j][0])\n\t\t\t\te[i].push_back(j);\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (ind[a[i][0]] == rnd[a[i][0]] + 1) {\n\t\t\tused[i] = true;\n\t\t\tdfs(i, a[i] + '.', 1);\n\t\t\tused[i] = false;\n\t\t}\n\tused[1] = true;\n\tdfs(1, a[1] + '.', 1);\n\tused[1] = false;\n\tstd::cout << \"***\";\n\treturn 0;\n}\n```\n\n\u8fd9\u5c31\u662f\u8fd9\u7bc7\u9898\u89e3\u7684\u5168\u90e8\u5185\u5bb9\u4e86\uff0c\u8fd9\u4e2a\u89e3\u6cd5\u8fd8\u662f\u548c\u5927\u90e8\u5206\u4e4b\u524d\u7684\u9898\u89e3\u90fd\u4e0d\u4e00\u6837\u7684\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u66f4\u597d\u7406\u89e3\u4e00\u4e9b\u3002",
        "postTime": 1609687972,
        "uid": 357545,
        "name": "CGDGAD",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1127 \u3010\u8bcd\u94fe\u3011"
    },
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u5199\u7684\u4e0d\u597d\u8fd8\u671b\u89c1\u8c05\u3002\n\n\u672c\u849f\u84bb\u770b\u5230\u8fd9\u4e2a\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u6df1\u641c\uff08\u4f3c\u4e4e\u5efa\u4e2a\u56fe\u4f1a\u66f4\u7b80\u5355\uff09\uff0c\u4e3a\u4e86\u51cf\u5c11\u5faa\u73af\u6b21\u6570\uff0c\u9996\u5148\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u5efa\u4e86\u4e00\u4e2a\u6570\u7ec4 start \u6807\u8bb0\u6bcf\u4e2a\u82f1\u6587\u9996\u5b57\u6bcd\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5c06\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u4f5c\u4e3adfs\u8d77\u70b9\uff0c\u518d\u627e\u5230\u6240\u6709\u4ee5\u524d\u4e00\u4e2a\u672b\u5c3e\u5f00\u5934\u7684\u5b57\u7b26\u4e32dfs\u4e0b\u53bb\uff0c\u7136\u540e\u5c31\u5f97\u5230\u4e862\u4e2a\u5927\u5927\u7684TLE\u3002\u6ca1\u9519\uff0c\u4e0d\u662f\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u80fd\u4f5c\u4e3a\u8d77\u70b9\u7684\u3002\n\n\u67e5\u9605\u4e86\u4e00\u70b9\u8d44\u6599\uff0c\u53d1\u73b0\u5982\u679c\u67091\u4e2a\u5b57\u6bcd\u5728\u9996\u4f4d\u51fa\u73b0\u6b21\u6570\u6bd4\u672b\u5c3e\u51fa\u73b0\u6b21\u6570\u591a\u4e00\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b57\u6bcd\u5fc5\u5c06\u662f\u8d77\u59cb\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u6bcd\u3002\u5982\u679c\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u4e2a\u8fd9\u6837\u7684\u5b57\u6bcd\uff0c\u90a3\u4e48\u4e0d\u53ef\u89e3\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u5b57\u6bcd\uff0c\u8bf4\u660e\u5f62\u6210\u4e86Hamilton\u56de\u8def\uff0c\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7684\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u53ef\u4ee5\u505adfs\u8d77\u70b9\u3002\u6700\u540eAC\uff0c\u4ee3\u7801\u5728\u4e0b\u9762\u3002\n\nPS\uff1a\u8fd9\u9053\u9898\u597d\u50cf\u6761\u4ef6\u6709\u70b9\u6c34\uff0c\u6709\u4e9b\u4ee3\u7801\u6709\u95ee\u9898\u4e5f\u80fd\u8fc7\uff0c\u4e0d\u77e5\u9053\u6211\u7684\u4ee3\u7801\u6709\u6ca1\u6709\u95ee\u9898\uff0c\u5e0c\u671b\u8bc4\u8bba\u533a\u5927\u4f6c\u6307\u70b9\u4e00\u4e0b\u3002\n\n\n```\n#include<bits/stdc++.h>\n#define LL long long\nusing namespace std;\nint n; int start[30], s1[30]; \nstring choose[1005]; string s[1005]; bool vis[1005];\n\nvoid dfs(string s_now, int acc){\n\tif(acc == n){\n\t\tfor(int i = 1; i <= n-1; i++){\n\t\t\tcout<<choose[i]<<\".\";\n\t\t}\n\t\tcout<<choose[n];\n\t\texit(0);\n\t\treturn;\t\n\t}\n\tchar c_now = s_now[s_now.length()-1];\n\tfor(int i = start[c_now - 'a']; i; i++){\n\t\tif(s[i][0] != c_now) break;\n\t\tif(vis[i]) continue;\n\t\tchoose[acc+1] = s[i];\n\t\tvis[i] = 1;\n\t\tdfs(s[i], acc+1);\n\t\tvis[i] = 0; \n\t}\n}\nint main(){\n\n\tcin>>n;\n\tfor(int i = 1; i <= n; i++){\n\t\tcin>>s[i];\n\t\ts1[s[i][0]-'a']++;\n\t\ts1[s[i][s[i].length()-1]-'a']--;\n\t\t\n\t}\n\tsort(s+1, s+n+1);\n\t\n\tfor(int i = 1; i <= n; i++){\n\t\tif(start[s[i][0]-'a'] == 0)\n\t\t\tstart[s[i][0]-'a'] = i;\n\t}\n\tint k = 0, h;\n\tfor(int i = 0; i < 26; i++){\n\t\tif(s1[i] == 1) k++, h = i;\n\t\tif(s1[i] == 2 || k == 2) break;\n\t}\n\tif(k == 1){\n\t\tfor(int i = 1; i <= n; i++){\n\t\t\tif(s[i][0] - 'a' == h){\n\t\t\t\tstring s_now = s[i];\n\t\t\t\tchoose[1] = s[i];\n\t\t\t\tvis[i] = 1;\n\t\t\t\tdfs(s_now, 1);\n\t\t\t\tvis[i] = 0;\n\t\t\t}\n\t\t\t\t\t\n\t\t}\n\t}\n\t\n\tif(k == 0){\n\t\tfor(int i = 1; i <= n; i++){\n\t\t\tchoose[1] = s[i];\n\t\t\tvis[i] = 1;\n\t\t\tdfs(s[i], 1);\n\t\t\tvis[i] = 0;\n\t\t}\n\t}\n\tcout<<\"***\";\n} \n```",
        "postTime": 1602230147,
        "uid": 301121,
        "name": "\u8c37\u5955\u52cb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1127 \u3010\u8bcd\u94fe\u3011"
    },
    {
        "content": "1.\u5355\u8bcd\u4f5c\u70b9 \u53ef\u4ee5\u62fc\u5728\u4e00\u8d77\u7684\u5355\u8bcd\u8fde\u8fb9\u3002\n\n2.\u5148\u5bf9\u5355\u8bcd\u6392\u5e8f\uff0c\u52a0\u8fb9\u65f6\u6ce8\u610f\u987a\u5e8f\uff0c\u4f7f\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u6b27\u62c9\u56de\u8def\u5373\u4e3a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\uff0c\u540e\u9762\u76f4\u63a5\u8df3\u51fa\u5c31\u597d\u4e86\u3002\n\n3.dfs\u524d\u521d\u6b65\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6709\u89e3\uff08\u6ce8\u610f\uff0c\u662f\u521d\u6b65\uff01\uff01\uff01\uff09 \u7528\u4e00\u4e9b\u5947\u602a\u7684\u65b9\u6cd5\n\n4.dfs\u540e\uff0c\u82e5\u627e\u5230\u89e3\u5219\u8f93\u51fa\uff0c\u5426\u5219***\u3002\uff08\u56e0\u4e3a\u521d\u6b65\u5224\u65ad\u6709\u89e3\u65f6\u53ef\u80fd\u5c06\u4e00\u4e9b\u65e0\u89e3\u7684\u60c5\u51b5\u653e\u8fc7\u4e86\uff09\n\n\u4ee3\u7801\u5982\u4e0b (\u6d1b\u8c37\u597d\u5751 \u53d6\u6d88\u6d41\u540c\u6b65ios::sync\\_with\\_stdio(false) \u52a0\u4e0a\u4e4b\u540e\u4f1are)\n\n\n\n```cpp\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nconst int N=1010,inf=1<<29;\nint n,len[N],sta[N],cnt[30],top=0;\nint head[N],to[N*N],next[N*N],en;\nbool flag=false,vis[N];\nstring s[N];\nvoid dfs(int u)\n{\n    if (flag) return ;\n    sta[top++]=u;\n    vis[u]=true;\n    int v;\n    for (int i=head[u];i;i=next[i])\n    {\n        v=to[i];\n        if (!vis[v]) dfs(v);\n    }\n    if (top==n) flag=true;\n    else vis[u]=false,--top;\n}\nvoid add_edge(int u,int v){\n    to[++en]=v,next[en]=head[u],head[u]=en;\n}\nint main()\n{\n    //ios::sync_with_stdio(false);\n    cin>>n;\n    for (int i=1;i<=n;i++)\n        cin>>s[i];\n    sort(s+1,s+n+1);\n    for (int i=1;i<=n;i++)\n        len[i]=s[i].size();\n    for (int i=1;i<=n;i++)\n        for (int j=n;j>=1;j--)\n        if (i!=j && s[i][len[i]-1]==s[j][0])\n        add_edge(i,j);\n    for (int i=1;i<=n;i++)\n        cnt[s[i][0]-'a']++,cnt[s[i][len[i]-1]-'a']--;\n    int k=0,h;\n    for (int i=0;i<26;i++){\n        if (cnt[i]==1) k++,h=i;\n        if (cnt[i]==2) k=2;\n        if (k==2) break;\n    }\n    if (k==2) cout<<\"***\\n\";\n    else if (k==1){\n        for (int i=1;i<=n;i++)\n            if (s[i][0]-'a'==h)\n            dfs(i);\n    }\n    else {\n        for (int i=1;i<=n;i++)\n            dfs(i);\n    }\n    if (!flag) {\n        cout<<\"***\\n\";\n        return 0;\n    }\n    cout<<s[sta[0]];\n    for (int i=1;i<top;i++)\n        cout<<'.'<<s[sta[i]];\n    cout<<endl;\n    return 0;\n}\n```",
        "postTime": 1478831493,
        "uid": 13661,
        "name": "y553546436",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1127 \u3010\u8bcd\u94fe\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9898\uff0c\u4e00\u822c\u7684\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f**\u66b4\u529b\u641c\u7d22**\u3002\n\n\u6839\u636e\u6570\u636e\u8303\u56f4\uff0c\u641c\u7d22\u5e94\u8be5\u80fd\u62ff\u5230 $40$ \u5206\u5de6\u53f3\u7684\u6210\u7ee9\u3002\n\n\u4e0b\u9762\u6211\u4eec\u8003\u8651\u6b63\u89e3\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c**\u4e00\u4e2a\u5355\u8bcd\u5728\u8bcd\u94fe\u4e2d\u4e0e\u54ea\u4e9b\u5355\u8bcd\u62fc\u63a5\uff0c\u53ea\u4e0e\u8fd9\u4e2a\u5355\u8bcd\u5f00\u5934\u548c\u672b\u5c3e\u7684\u4e24\u4e2a\u5b57\u7b26\u6709\u5173\uff01**\n\n\u522b\u770b\u8fd9\u4e2a\u6027\u8d28\u5f88\u666e\u901a\uff0c\u8fd9\u6070\u597d\u662f\u6211\u4eec**\u6570\u5b66\u5efa\u6a21**\u7684\u5165\u624b\u70b9\uff01\n\n\u5982\u4f55\u6570\u5b66\u5efa\u6a21\uff1f**\u8003\u8651\u628a\u5355\u8bcd\u5f00\u5934\u5b57\u6bcd\u5411\u5355\u8bcd\u7ed3\u5c3e\u5b57\u6bcd\u8fde\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6709\u5411\u56fe\u3002\u8fd9\u65f6\u5019\u518d\u770b\u9898\u76ee\uff0c\u8fd9\u9898\u5c31\u53d8\u6210\u4e86\u6c42\u6b27\u62c9\u8def\u5f84\u7684\u95ee\u9898\u4e86\u3002**\n\n\u60f3\u5230\u8fd9\u91cc\uff0c\u4f60\u5df2\u7ecf\u6210\u529f\u4e86\u4e00\u534a\u4e86\u3002\u4e0b\u9762\u5f00\u59cb\u8003\u8651\u5224\u65ad\u65e0\u89e3\u548c\u5bfb\u627e\u8def\u5f84\u8d77\u70b9\u7684\u95ee\u9898\u3002\n\n\u5173\u4e8e\u6709\u5411\u56fe\u7684\u6b27\u62c9\u8def\u5f84\u8d77\u70b9\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u6cd5\u5bfb\u627e\uff1a\n\n\u628a\u4e00\u4e2a\u70b9\u7684\u5ea6\u8bb0\u4e3a\u8fd9\u4e2a\u70b9\u7684\u51fa\u5ea6\u51cf\u53bb\u8fd9\u4e2a\u70b9\u7684\u5165\u5ea6\u3002**\u4e00\u4e2a\u6709\u5411\u56fe\u5b58\u5728\u6b27\u62c9\u8def\u5f84\uff0c\u5219\u8fd9\u4e2a\u8def\u5f84\u7684\u8d77\u70b9\u7684\u5ea6\u5fc5\u4e3a $1$,\u7ec8\u70b9\u7684\u5ea6\u5fc5\u4e3a $-1$\uff0c\u5176\u4f59\u70b9\u7684\u5ea6\u4e3a $0$\u3002**\u5982\u679c\u6240\u6709\u70b9\u7684\u5ea6\u90fd\u662f $0$\uff0c\u5219\u53d8\u6210\u6b27\u62c9\u56de\u8def\uff0c\u53ef\u4ee5\u4ece\u4efb\u610f\u70b9\u5f00\u59cb\u641c\u7d22\u3002\n\n\u53e6\u5916\uff0c\u8fd8\u8981\u5224\u65ad\u65e0\u89e3\u3002\u65e0\u89e3\u7684\u60c5\u51b5\u5c31\u662f**\u56fe\u4e0d\u8fde\u901a**\u3002\u6709\u4e00\u4e2a\u5224\u65e0\u89e3\u7684\u7b80\u5355\u65b9\u6cd5\uff1a**\u641c\u7d22\u5b8c\u6210\u540e\uff0c\u5224\u65ad\u662f\u5426\u6240\u6709\u7684\u8fb9\u90fd\u88ab\u641c\u8fc7\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u65e0\u89e3\u3002**\n\n\u53e6\u5916\uff0c\u9898\u76ee\u8981\u6c42\u8981**\u5b57\u5178\u5e8f\u6700\u5c0f**\u7684\u7b54\u6848\u3002\u5bf9\u6b64\uff0c\u53ef\u4ee5\u628a\u8f93\u5165\u7684\u5355\u8bcd\u6392\u5e8f\u540e\u8fde\u8fb9\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u662f\u7528\u8fb9\u94fe\u8868\u5b58\u8fb9\u7684\uff0c\u9700\u8981\u5012\u5e8f\u8fde\u8fb9\uff0c\u624d\u80fd\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\u7136\u540e\u5982\u679c\u9047\u5230\u6b27\u62c9\u56de\u8def\uff0c\u5219\u627e\u5b58\u5728\u7684\u5b57\u6bcd\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5f00\u59cb\u641c\u7d22\u5373\u53ef\u3002\n\n\u90a3\u4e48\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<algorithm>\n#define ll long long\n#define rgt register int\nusing namespace std;\nconst int mxn = 1010;\nstring str[mxn],outans[mxn];\nint tot,lst[30],nxt[mxn],to[mxn],bh[mxn],d[mxn],lans;\nbool use[mxn];\n\ninline void add(int x,int y,int b){\n\ttot++;\n\tto[tot]=y;\n\tbh[tot]=b;   //\u5b58\u8fd9\u6761\u8fb9\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u7f16\u53f7\n\td[x]++;\n\td[y]--;   //\u8ba1\u7b97\u70b9\u5ea6\n\tnxt[tot]=lst[x];\n\tlst[x]=tot;\n}   //\u52a0\u8fb9\u51fd\u6570\n\nvoid dfs(int g){  //\u641c\u7d22\u51fd\u6570\n\tfor(rgt i=lst[g];i;i=nxt[i]){\n\t\tif(!use[bh[i]]){  //\u627e\u5230\u4e00\u6761\u672a\u4f7f\u7528\u7684\u8fb9\n\t\t\tuse[bh[i]]=true;  //\u6807\u8bb0\n\t\t\tdfs(to[i]);\n\t\t\tlans++;  //\u5012\u5e8f\u5b58\u7b54\u6848\n\t\t\toutans[lans]=str[bh[i]];\n\t\t}\n\t}\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tint n,st;\n\tcin>>n;\n\tfor(rgt i=1;i<=n;i++)\n\t\tcin>>str[i];   //\u8bfb\u5165\u6570\u636e\n        \n\tsort(str+1,str+1+n);  //\u6392\u5e8f\n\tst=str[1][0]-'a'+1;  //\u5148\u628a\u5b58\u5728\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u6bcd\u4f5c\u4e3a\u8d77\u70b9\uff0c\u5982\u679c\u662f\u6b27\u62c9\u56de\u8def\uff0c\u5219\u4ece\u8fd9\u4e2a\u8d77\u70b9\u5207\u5165\n    \n\tfor(rgt hd,tl,i=n;i>=1;i--){\n\t\thd=str[i][0]-'a'+1;  //\u9996\u5b57\u6bcd\n\t\ttl=str[i][str[i].size()-1]-'a'+1;  //\u5c3e\u5b57\u6bcd\n\t\tadd(hd,tl,i);  //\u8fde\u8fb9\n\t}  \n    \n\tfor(rgt i=1;i<=26;i++)\n\t\tif(d[i]==1){  //\u662f\u6b27\u62c9\u8def\u5f84\uff0c\u66f4\u65b0\u8d77\u70b9\n\t\t\tst=i;\n\t\t\tbreak;\n\t\t}\n        \n\tdfs(st);\n    \n\tfor(rgt i=1;i<=n;i++)\n\t\tif(!use[i]){\n\t\t\tcout<<\"***\";\n\t\t\treturn 0; \n\t\t} //\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u6240\u6709\u8fb9\uff0c\u65e0\u89e3\n        \n\tfor(rgt i=lans;i>1;i--)\n\t\tcout<<outans[i]<<\".\";\n\tcout<<outans[1];  //\u8f93\u51fa\u7b54\u6848\n    \n\treturn 0;\n}\n```\n",
        "postTime": 1598959314,
        "uid": 57421,
        "name": "fls233666",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1127 \u3010\u8bcd\u94fe\u3011"
    },
    {
        "content": "[**\u9898\u76ee**](https://www.luogu.com.cn/problem/P1127) [**\u535a\u5ba2\u67e5\u770b**](https://www.luogu.com.cn/blog/236807/Solution-luogu-P1127)\n\n\u672c\u6587\u6240\u6d89\u53ca\u4e4b\u5b57\u7b26\u4e32\u6bd4\u8f83\uff0c\u5747\u4e3a\u5b57\u5178\u5e8f\u7684\u6bd4\u8f83\uff1b\u82e5 $a$\uff0c$b$ \u8868\u793a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c$ab$ \u8868\u793a\u5c06\u5979\u4eec\u76f8\u8fde\u800c\u6210\u7684\u5b57\u7b26\u4e32\u3002\n\n\u591a\u9879\u5f0f\u89e3\u6cd5\u5e76\u4e0d\u5bb9\u6613\u60f3\u5230\uff0c\u8003\u8651\u641c\u7d22\u3002\n\n\u6211\u4eec\u53d1\u73b0 `.` \u7684\u5b57\u5178\u5e8f\u6bd4\u5c0f\u5199\u5b57\u6bcd\u5c0f\uff0c\u6240\u4ee5\u82e5 $s_1 < s_2$ \u7684\u5b57\u5178\u5e8f\uff0c\u5219 $s_1.s_2 < s_2.s_1$\u3002\n\n\u8003\u8651\u5c06\u53ef\u4ee5\u76f8\u8fde\u7684\u5b57\u7b26\u4e32\u95f4\u8fde\u8fb9\uff0c\u53d8\u6210\u4e86\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f $[1, n]$ \u7684\u4e00\u4e2a\u6392\u5217 $p$\uff0c\u4f7f\u5f97 $\\forall i \\in \\left[1, n\\right)$\uff0c\u5b58\u5728\u8fb9 $p_i \\rightarrow p_{i + 1}$\u3002\n\n\u88f8\u7684\u641c\u7d22\u53ef\u4ee5\u62ff\u5230 80 \u5206\u7684\u597d\u6210\u7ee9\u3002\u8003\u8651\u4f18\u5316\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5f88\u96be\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u63a7\u5236\u65f6\u95f4\uff0c\u6545\u8003\u8651\u589e\u52a0\u5bf9\u65e0\u89e3\u7684\u5224\u65ad\u4ee5\u53ca\u63a7\u5236\u521d\u59cb\u8282\u70b9\u3002\u5b9a\u4e49 $c_f(x)$ \u8868\u793a\u4ee5\u5b57\u7b26 $x$ \u4e3a\u9996\u5b57\u6bcd\u7684\u5355\u8bcd\u6570\uff0c$c_b(x)$ \u8868\u793a\u4ee5\u5b57\u7b26 $x$ \u4e3a\u672b\u5b57\u6bcd\u7684\u5355\u8bcd\u6570\u3002\u5177\u4f53\u5730\uff0c\u6709\u5982\u4e0b\u51e0\u70b9\uff1a\n\n- \u82e5 $c_f(x) > c_b(x) + 1$\uff0c\u5219\u65e0\u89e3\uff08\u5355\u8bcd\u76f8\u8fde\u5904\u4f1a\u6d88\u6389\u4e00\u7ec4\uff0c\u6700\u540e\u53ef\u4ee5\u5728\u4e32\u9996\u653e\u7f6e\u5355\u8bcd\uff0c\u4f46\u5373\u4f7f\u8fd9\u6837\uff0c\u4e5f\u8fd8\u4f1a\u6709\u591a\u4f59\u7684\u5355\u8bcd\uff09\uff1b\n- \u82e5 $c_b(x) > c_f(x) + 1$\uff0c\u5219\u65e0\u89e3\uff08\u540c\u7406\uff09\uff1b\n- \u82e5 $f$ \u4e3a\u67d0\u4e00\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\uff0c$b$ \u4e3a\u672b\u5b57\u6bcd\uff0c$c_b(f) = 0 \\land c_f(b) = 0 \\land n > 1$\uff0c\u5219\u65e0\u89e3\uff08\u65e0\u6cd5\u8fde\u8fb9\uff09\uff1b\n- \u82e5 $c_f(x) = c_b(x) + 1$\uff0c\u5219\u4e32\u9996\u5b57\u6bcd\u5fc5\u987b\u4e3a $x$\uff1b\n- \u82e5 $c_b(x) = c_f(x) + 1$\uff0c\u5219\u4e32\u672b\u5b57\u6bcd\u5fc5\u987b\u4e3a $x$\uff1b\n- \u5145\u5206\u8003\u8651\u4ee5\u4e0a\u51e0\u70b9\u95f4\u7684\u5f71\u54cd\uff1b\n- *\u5bf9\u56fe\u8fdb\u884c\u4e00\u6b21 Tarjan \u7f29\u70b9\uff1a*\n  - *\u5982\u679c\u6709\u591a\u4e2a\u5165\u5ea6 / \u51fa\u5ea6\u4e3a $0$ \u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5219\u65e0\u89e3\uff1b*\n  - *\u5982\u679c\u62d3\u6251\u5e8f\u4e0d\u552f\u4e00\uff0c\u5219\u65e0\u89e3\uff08\u8003\u8651\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u641c\u7d22\u65f6\uff0c\u8f6c\u6362\u5f3a\u8fde\u901a\u5206\u91cf\u65f6\uff0c\u5fc5\u7136\u7ecf\u8fc7\u6709\u5411\u8fb9\uff0c\u800c\u6211\u4eec\u8981\u641c\u7d22\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u6545\u5fc5\u7136\u6709\u4e00\u6761\u8def\u5f84\u7ecf\u8fc7\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u800c Tarjan \u7f29\u70b9\u540e\u4e0d\u5b58\u5728\u73af\uff0c\u6240\u4ee5\u8fd9\u6761\u8def\u5f84\u4e0a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6392\u5217\u5373\u4e3a\u62d3\u6251\u5e8f\uff1b*\n  - *\u5fc5\u987b\u641c\u7d22\u5b8c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u540e\u518d\u53bb\u641c\u7d22\u53e6\u4e00\u4e2a\u3002*\n\n\u4e0a\u9762\u53ea\u9700\u8981\u6b63\u4f53\u5b57\u5373\u53ef\u901a\u8fc7\u672c\u9898\uff0c\u659c\u4f53\u5b57\u4e3a\u62d3\u5c55\u601d\u8def\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e0b\u3002",
        "postTime": 1596289832,
        "uid": 236807,
        "name": "Mitama",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 \u6d1b\u8c37 P1127"
    },
    {
        "content": "# p1127\uff08dfs+\u6b27\u62c9\u901a\u8def/\u56de\u8def\uff09\n\n***\n\n## 1.\u9898\u76ee\u5206\u6790\n\n\u6211\u4eec\u9700\u8981\u627e\u51fa\u4e00\u6761\u5305\u542b\u6240\u6709\u5355\u8bcd\uff0c\u8fd9\u4e9b\u5355\u8bcd\u5728\u8bcd\u94fe\u4e2d\u51fa\u73b0\u4e14\u4ec5\u51fa\u73b0\u4e00\u6b21\uff0c\u4e14\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u94fe\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u5355\u8bcd\u8fde\u4e00\u6761\u4ece\u9996\u5b57\u6bcd\u6307\u5411\u5c3e\u5b57\u6bcd\u7684\u6709\u5411\u8fb9\uff0c\u5047\u8bbe\u5b58\u5728\u8fd9\u6837\u7684\u4e00\u6761\u94fe\uff0c\u90a3\u4e48\u6211\n\n\u4eec\u6240\u5efa\u6210\u7684\u56fe\u4e2d\u4fbf\u4e00\u5b9a\u5b58\u5728\u6b27\u62c9\u901a\u8def\u6216\u8005\u6b27\u62c9\u56de\u8def\u3002\n\n**\u6b27\u62c9\u901a\u8def** \u4ece\u4e00\u70b9\u51fa\u53d1\uff0c\u53ef\u4ee5\u7ecf\u8fc7\u56fe\u4e2d\u6bcf\u4e00\u6761\u8fb9\u7684\u8def\u5f84\uff0c\u88ab\u79f0\u4f5c\u6b27\u62c9\u901a\u8def\uff0c\u65e0\u5411\u56fe\u4e2d\u6b27\u62c9\n\n\u6b27\u62c9\u901a\u8def\u5b58\u5728\u7684\u6761\u4ef6\uff1a\u82e5\u56fe\u4e2d\u6709\u4e14\u4ec5\u7531\u4e24\u4e2a\u70b9\u7684\u51fa\u5ea6\u4e0d\u7b49\u4e8e\u5165\u5ea6\uff0c\u4e14\u4e00\u70b9\u7684\u51fa\u5ea6=\u5165\u5ea6+1\uff0c\u53e6\u4e00\n\n\u70b9\u7684\u5165\u5ea6=\u51fa\u5ea6+1\uff0c\u5219\u56fe\u4e2d\u5b58\u5728\u6b27\u62c9\u901a\u8def\uff0c\u4e14\u8d77\u70b9\u4e3a\u51fa\u5ea6\u8f83\u5927\u7684\u70b9\uff0c\u7ec8\u70b9\u4e3a\u5165\u5ea6\u8f83\u5927\u7684\u70b9\u3002\n\n**\u6b27\u62c9\u56de\u8def**\uff1a\u4ece\u56fe\u4e2d\u4efb\u610f\u4e00\u70b9\u51fa\u53d1\uff0c\u53ef\u7ecf\u8fc7\u6240\u6709\u8fb9\u4e14\u56de\u5230\u8d77\u70b9\u7684\u8def\u5f84\n\n\u6709\u5411\u56fe\u6b27\u62c9\u56de\u8def\u5224\u65ad\u6761\u4ef6\uff1a\u6240\u6709\u70b9\u7684\u51fa\u5ea6\u7b49\u4e8e\u5165\u8bfb\n\n**\u6ce8\u610f\uff0c\u6b27\u62c9\u56de\u8def\u548c\u901a\u8def\u5b58\u5728\u7684\u5fc5\u8981\u6761\u4ef6\u662f\u57fa\u56fe\u8054\u901a**\n\n\u9996\u5148\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u5efa\u65e0\u5411\u56fe\u800c\u4e0d\u662f\u6709\u5411\u56fe\uff1f\u8003\u8651\u5230\u8bcd\u94fe\u4e0d\u53ef\u53cd\u8f6c(\u5047\u8bbe\u8bcd\u94feab.bc\u5408\u6cd5\uff0c\u90a3\u4e48c\n\nb.ba\u4e0d\u5408\u6cd5)\uff0c\u6240\u4ee5\u53ea\u80fd\u5efa\u6709\u5411\u56fe\n\n\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u8981\u5b58\u5728\u6b27\u62c9\u56de\u8def\u6216\u8005\u901a\u8def\u5462\uff1f\n\n\u5206\u6790\u9898\u76ee\uff0c\u6211\u4eec\u5c06\u5355\u8bcd\u8f6c\u5316\u4e3a\u8fb9\uff0c\u90a3\u4e48\u6240\u6c42\u7684\u8bcd\u94fe\u4e00\u5b9a\u662f\u4e00\u6761\u6b27\u62c9\u901a\u8def\n\n\u6709\u4e86\u8fd9\u4e2a\u524d\u63d0\uff0c\u8fd9\u9053\u9898\u5c31\u5f88\u5bb9\u6613\u89e3\u51b3\u7684\uff0c\n\n\u6211\u4eec\u5c06\u627e\u8bcd\u94fe\u8f6c\u5316\u4e3a\u6709\u5411\u56fe\u627e\u6b27\u62c9\u901a\u8def\n\n\u4f46\u8bcd\u94fe\u7684\u8d77\u70b9\u600e\u4e48\u786e\u5b9a\u5462\uff1f\n\n\u5047\u8bbe\u56fe\u4e2d\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u90a3\u4e48\u4ece\u4efb\u610f\u70b9\u51fa\u53d1\u90fd\u53ef\u4ee5\uff0c\u4f46\u6211\u4eec\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u5fc5\u987b\u4ece\u5b57\u5178\n\n\u5e8f\u6700\u5c0f\u7684\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u51fa\u53d1\n\n\u5047\u8bbe\u56fe\u4e2d\u4ec5\u6709\u6b27\u62c9\u901a\u8def\uff0c\u90a3\u4e48\u53ea\u6709\u4ece\u901a\u8def\u8d77\u70b9\u51fa\u53d1\u624d\u53ef\u7ecf\u8fc7\u6240\u6709\u8fb9\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8bcd\u94fe\uff0c\u6240\u4ee5\u9009\u70b9\u6309\u5b57\u5178\u5e8f\u4ece\u5c0f\u5f00\u59cb\u9009\u5373\u53ef\n\n\u5206\u6790\u5230\u8fd9\uff0c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5199\u51fa\u6765\u4e86\n\n\u5efa\u56fe\u540e\u5148\u901a\u8fc7\u5e76\u67e5\u96c6\u6765\u5224\u662f\u5426\u8fde\u901a\uff0c\u7edf\u8ba1\u51fa\u5ea6\u5165\u5ea6\u5224\u65ad\u56fe\u7684\u7c7b\u578b\uff0c\u627e\u5230\u8d77\u70b9\u6309\u5b57\u5178\u5e8f\u6765dfs\u5373\u53ef\n\u4ee3\u7801\u5982\u4e0b\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<string>\nusing namespace std;\nconst int maxn=1e3+10;\nint n;\nstring st[maxn];\nstruct node{\n\tint s,t;\n}e[maxn];\nint cu[maxn];\nint ru[maxn];\nint fla[maxn];\nint cnt;\nvoid add(int x,int y){\n\tcnt++;\n\te[cnt].s=x;\n\te[cnt].t=y;\n}\nint f[maxn];\nint find(int x){\n\tif(f[x]!=x){\n\t\treturn f[x]=find(f[x]);\n\t}\n\telse\n\t\treturn x;\n}\nint tot;\nbool jud(){\n\tfor(int i=1;i<=26;i++){\n\t\tf[i]=i;\n\t}\n\tfor(int i=1;i<=cnt;i++){\n\t\tint a=e[i].s;\n\t\tint b=e[i].t;\n\t\tint fa = find(a),fb = find(b);\n        if(fa != fb) f[fa] = fb;\n\t}\n\tint cn=0;\n\tfor(int i=1;i<=26;i++){\n\t\tif(fla[i]&&f[i]==i){\n\t\t\tcn++;\n\t\t}\n\t}\n\tif(cn-1!=tot){\n\t\treturn false;\n\t}\n\treturn true;\n}\nint vis[maxn];\nint p;\nint ans[maxn];\nvoid dfs(int now){\n\tfor(int i=1;i<=n;i++){\n\t\tif(st[i][0]-'a'+1==now&&!vis[i]){\n\t\t\tvis[i]=1;\n\t\t\tdfs(st[i][st[i].length()-1]-'a'+1);\n\t\t\tp++;\n\t\t\tans[p]=i;\n\t\t}\n\t}\n\treturn ;\n}\nint main(){\n//\tfreopen(\"a.in\",\"r\",stdin);\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>st[i];\n\t}\n\tint a,b;\n\tsort(st+1,st+1+n);//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u76ee\u7684\u662f\u5728dfs\u8fc7\u7a0b\u4e2d\u5f97\u5230\u6700\u4f18\u89e3 \n\tfor(int i=1;i<=n;i++){\n\t\t//cout<<st[i]<<endl;\n\t\ta=st[i][0]-'a'+1;//\u5f97\u5230\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u5b57\u7b26 \n\t\tb=st[i][st[i].length()-1]-'a'+1;//\u7ec8\u6b62\u5b57\u7b26 \n\t//\tcout<<a<<\" \"<<b<<endl;\n\t\tadd(a,b);\n//\t\tadd(b,a) ;\n\t\tif(!fla[a])\n\t\t\tfla[a]=1;//\u8bb0\u5f55\u8be5\u5b57\u7b26\u662f\u5426\u51fa\u73b0\uff0c\u76ee\u7684\u662f\u5224\u65ad\u8054\u901a \n\t\tif(!fla[b])\n\t\t\tfla[b]=1;\n\t\tcu[a]++;//\u51fa\u5ea6 \n\t\tru[b]++;//\u5165\u5ea6 \n\t}\n//\tcout<<jud();\n\tif(!jud()){\n\t\tcout<<\"***\";\n\t\treturn 0;\n\t}\n\tint s=0;\n\tint t=0;\n\tint to=0;\n\tfor(int i=1;i<=26;i++){\n\t\tif(ru[i]!=cu[i]){\n\t\t\tto++;//\t\n\t\t\tif(cu[i]-ru[i]==1){\n\t\t\t\ts=i;\t\n\t\t\t}\n\t\t\tif(ru[i]-cu[i]==1){\n\t\t\t\tt=i;\n\t\t\t}\n\t\t\t}\n\t\t\telse if(abs(cu[i]-ru[i])>1){\n\t\t\t\tcout<<\"***\";\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif(to==2&&(!s||!t)){\n\t\t\t\tcout<<\"***\";\n\t\t\t\treturn 0;\n\t\t\t}\n\t}\n\tif(to==1||to>2){\n\t\tcout<<\"***\";\n\t\treturn 0;\n\t}\n\tif(s!=0){\n\t\tdfs(s);\n\t}\n\telse{\n\t\tdfs(st[1][0]-'a'+1);\n\t}\n\tfor(int i=p;i>=1;i--){\n\t\tcout<<st[ans[i]];\n\t\tif(i>1)\n\t\t\tcout<<'.';\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1602174650,
        "uid": 250013,
        "name": "keep_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1127 \u3010\u8bcd\u94fe\u3011"
    },
    {
        "content": "### \u4f18\u70b9:\n**\u4e0d\u7528\u7e41\u7410\u5730\u5224\u65ad\u5b58\u5728\u6b27\u62c9\u901a\u8def\u7684\u6761\u4ef6**\n\n**\u4ee3\u7801\u5f88\u5c11**\n\n# **\u601d\u8def:**\n\n\u5efa\u7acb\u5355\u8bcd**\u9996\u5b57\u6bcd\u5230\u5c3e\u5b57\u6bcd\u7684\u8fb9**,\u7136\u540e**\u76f4\u63a5\u8dd1dfs**\u627e\u5230\u4e00\u6761\u80fd**\u8def\u8fc7\u6240\u6709\u8fb9\u7684\u8def\u7ebf**,\u627e\u5230\u5c31**\u76f4\u63a5\u8fd4\u56de**\uff0c\u6cbf\u9014**\u8bb0\u5f55\u4e0b\u7b54\u6848**,\u6700\u540e\u8f93\u51fa\n\n### \u5efa\u8fb9\u7684\u4f8b\u5b50:\n\n _gopher_     \u5efa**g\u6307\u5411r**\u7684\u8fb9,\u6700\u597d\u8f6c\u5316\u4e3a**\u6570\u5b57**\u5efa\n\n### \u5b58\u8fb9\u7684\u65b9\u6cd5:\n\n\u4e00\u4e2astruct\u8bb0\u5f55**\u6bcf\u6761\u8fb9\u7684\u8d77\u70b9\u4e0e\u7ec8\u70b9**,\u518d\u5f00\u4e2astruct\u8bb0\u5f55**\u6bcf\u4e2a\u70b9\u7684\u8fb9**(\u8fd9\u4e2a\u6709\u70b9\u4e0d\u597d\u8bf4,\u5eb7\u5eb7\u4ee3\u7801\u5c31\u61c2\u4e86\u5e94\u8be5)\n\n### \u53ef\u4ee5\u76f4\u63a5dfs\u7684\u7f18\u7531:\n\n\u53ef\u4ee5**\u4f18\u5148\u4ece\u5165\u5ea6!=\u51fa\u5ea6\u7684\u70b9\u5f00\u59cb\u641c**(\u5177\u4f53\u89c1\u6ce8\u91ca)\n\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#include<cstdio>\n#include<string>\n#include<iostream>\n#include<algorithm>\n#define ri register int\n#define u int\n#define NN 30\n#define MM 1005\n#define I  __inline__ __attribute__((always_inline))\nusing namespace std;\nnamespace first{\n\tu T,cnt,id[NN],od[NN];\n\tstring s[MM];\n}\nnamespace dfss{\n    u cnt,b[MM],vt[MM],ans[MM];\n    struct node{\n        u l,r;\n    }a[NN];\n    u dfs(const u &x,const u &k){//\u641c\u7d22\n    \tif(!k)return 1;\n        for(ri i=a[x].l;i<=a[x].r;++i){\n            if(!vt[i]){\n                vt[i]=1;\n                if(dfs(b[i],k-1)){\n                    ans[first::T-k+1]=i;\n                    return 1;\n                }\n                vt[i]=0;\n            }\n        }\n        return 0;\n    }\n}\nnamespace all{\n    using namespace first;\n    using namespace dfss;\n    I void run(const u &i){//\u5224\u65ad\u51fd\u6570\n    \tif(dfs(i,T)){\n            for(ri i=1;i<T;++i)\n                cout<<s[ans[i]]<<\".\";\n            cout<<s[ans[T]];\n            exit(0);\n        }\n\t}\n}\nusing namespace all;\nint main() {\n    cin>>T;\n    for(ri i=1;i<=T;++i)cin>>s[i];\n    sort(s+1,s+T+1),a[s[T][0]-'a'+1].r=T;//\u6392\u5e8f,\u5efa\u8fb9\n    for(ri i=1,f=0;i<=T;++i){\n        string sa=s[i];\n        u l(sa[0]-'a'+1),r(sa[sa.length()-1]-'a'+1);\n        if(l^f)a[f].r=i-1,a[l].l=i,f=l;//\u5efa\u8fb9\n        b[i]=r,++id[r],++od[l];//\u5efa\u8fb9\n    }\n    for(ri i=1;i<=26;++i)//\u4f18\u5148\u641c\u7d22\u5165\u5ea6!=\u51fa\u5ea6\u7684\u70b9\n        if(id[i]^od[i])run(i);\n    for(ri i=1;i<=26;++i)//\u4e0d\u884c\u518d\u641c\u5165\u5ea6==\u51fa\u5ea6\u7684\u70b9\n        if(id[i]==od[i])run(i);\n    printf(\"***\");//\u5b9e\u5728\u4e0d\u884c\u5c31\"***\"\n}\n```\n",
        "postTime": 1561273970,
        "uid": 113183,
        "name": "limi_sanhua",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1127 \u3010\u8bcd\u94fe\u3011"
    },
    {
        "content": "\u76f4\u63a5\u6b27\u62c9\u8def\u5f84,\u4e00\u6b21DFS\u904d\u5386\n\n```delphi\n\nprogram Marris;\ntype\n   sonlink=^node;\n   node=record\n     s:string;\n     next:sonlink;\n   end;\nvar\n   pa,into,outo:array[0..26]of longint;\n   son:array[0..1000]of sonlink;\n   a,ans:array[0..1000]of string;\n   b:array[0..26]of boolean;\n   i,j,n,l,r,t,s,sum,sum1,b1,b2:longint;\n   p:sonlink;\n   bool:boolean;\nprocedure swap(var x,y:string);\nvar\n   t:string;\nbegin\n   t:=x;x:=y;y:=t;\nend;\nprocedure qsort(f,r:longint);\nvar\n   i,j:longint;\n   m:string;\nbegin\n   i:=f;j:=r;\n   m:=a[(f+r) shr 1];\n   repeat\n     while a[i]>m do inc(i);\n     while a[j]<m do dec(j);\n     if i<=j then\n       begin\n         swap(a[i],a[j]);\n         inc(i);dec(J);\n       end;\n   until i>j;\n   if j>f then qsort(f,j);\n   if r>i then qsort(i,r);\nend;\nprocedure print(x:longint);\nvar\n   t:longint;\n   st:string[30];\nbegin\n   while son[x]<>nil do\n     begin\n       st:=son[x]^.s;\n       t:=ord(st[length(st)])-96;\n       son[x]:=son[x]^.next;\n       print(t);\n       inc(s);\n       ans[s]:=st;\n     end;\nend;\nprocedure error;\nbegin\n   writeln('***');\n   close(input);close(output);\n   halt;\nend;\nbegin\n   assign(input,'catenyms.in');reset(input);\n   assign(output,'catenyms.out');rewrite(output);\n\n   readln(n);\n   fillchar(into,sizeof(into),0);\n   fillchar(outo,sizeof(outo),0);\n   fillchar(b,sizeof(b),false);\n   for i:=1 to 26 do pa[i]:=i;\n   for i:=1 to n do\n     begin\n       readln(a[i]);\n       l:=ord(a[i][1])-96;\n       r:=ord(a[i][length(a[i])])-96;\n       b[l]:=true;b[r]:=true;\n       inc(into[l]);inc(outo[r]);\n     end;\n\n   bool:=true;\n   sum:=0;\n   for i:=1 to 26 do\n     if b[i] and (abs(into[i]-outo[i])=1) then inc(sum);\n   if (sum<>0) and (sum<>2) then bool:=false;\n   if not bool then error;\n\n   qsort(1,n);\n   for i:=1 to n do son[i]:=nil;\n   for i:=1 to n do\n     begin\n       t:=ord(a[i][1])-96;\n       new(p);\n         p^.s:=a[i];\n         p^.next:=son[t];son[t]:=p;\n     end;\n   s:=0;\n   if (sum<>0) then\n     for i:=1 to 26 do\n       if into[i]>outo[i] then\n         begin\n           print(i);\n           break;\n         end\n       else\n   else\n     for i:=1 to 26 do\n       if son[i]<>nil then\n         begin\n           print(i);\n           break;\n         end;\n   if s<n then error\n   else\n     for i:=n downto 1 do\n       if i<>1 then\n         write(ans[i],'.')\n       else\n         writeln(ans[i]);\n   close(input);close(output);\nend.\n\n```\uff08pascal\uff09\n",
        "postTime": 1440250621,
        "uid": 4310,
        "name": "\u6df1\u84dd\u8272\u7684\u5b88\u671b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1127 \u3010\u8bcd\u94fe\u3011"
    }
]