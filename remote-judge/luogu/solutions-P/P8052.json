[
    {
        "content": "\u505a\u9898\u80cc\u666f\uff1a\u671f\u672b\u8003\u8bd5\u590d\u4e60\uff0c\u4e0b\u5348\u6709\u4e24\u8282\u81ea\u4e60\u3002\u6211\u548c\u957f\u8001 @Yeegle \u8d81\u81ea\u4e60\u7528\u73ed\u4e0a\u7684\u5e0c\u6c83\u4e00\u4f53\u673a\u6253\u9898\uff0c\u4ee3\u7801\u90fd\u662f\u5728\u4f60\u8c37 IDE \u91cc\u7528\u5c4f\u5e55\u952e\u76d8\u4e00\u70b9\u4e00\u70b9\u7801\u7684\uff0c\u5c31\u8fd9\u8fd8\u80fd\u5207\u4e24\u9053\uff0c\u79bb\u8c31\u3002\n\n\u5c4f\u5e55\u952e\u76d8\u7684\u6548\u7387\u76f8\u5f53\u4f4e\u4e0b\uff0c\u6240\u4ee5\u957f\u8001\u4e3a\u4e86\u538b\u7f29\u7801\u91cf\u60f3\u51fa\u4e86 \u201c \u7528 cmp \u9b54\u6539 sort \u5b9e\u73b0\u5168\u81ea\u52a8\u4ea4\u4e92 \u201d \u7684\u601d\u8def\uff0c\u5728\u6b64\u8868\u793a\u819c\u62dc\u53ca\u611f\u8c22\u3002\n\n\n\n------------\n### \u601d\u8def\n\n\u5b98\u65b9\u7684\u505a\u6cd5\u662f\u5206\u7c7b\u8ba8\u8bba + \u5f52\u5e76\u6392\u5e8f\uff0c\u7801\u91cf\u5bf9\u4e8e\u4e24\u4e2a\u4e00\u4f53\u673a OIer \u800c\u8a00\u76f8\u5f53 EX \u3002\u5f53\u7136\u590d\u6742\u5ea6\u8fd8\u662f\u5f88\u4f18\u79c0\u7684\uff0c\u201c \u5e26\u5de8\u5927\u5e38\u6570 \u201d \u7cfb fAKe \u8a00\u8bba\u3002\n\n\u6211\u4eec\u8003\u8651\u9898\u76ee\u4e2d\u64cd\u4f5c\u7684\u5b9e\u9645\u610f\u4e49\uff0c\u6216\u8005\u7528\u6587\u5316\u8bfe\u8001\u5e08\u7684\u8bdd\u6765\u8bf4\uff0c\u5c31\u662f\uff1a**\u63e3\u6d4b\u51fa\u9898\u4eba\u7684\u610f\u56fe**\u3002\n\n\u9996\u5148\u770b\u5230\u64cd\u4f5c 1 \uff0c \u201c \u7ed9 3 \u4e2a\u6570\uff0c\u5f97\u77e5\u5176\u4e2d\u6392\u540d\u4e2d\u95f4\u7684\u90a3\u4e2a \u201d \uff0c\u4e4d\u770b\u4e4b\u4e0b\u6beb\u65e0\u5934\u7eea\uff0c\u65e2\u4e0d\u80fd\u66b4\u529b\u4e00\u4e2a\u4e00\u4e2a\u6bd4\uff0c\u4e5f\u4e0d\u80fd\u50cf RMQ \u90a3\u6837\u5f97\u77e5\u533a\u95f4\u7684\u6700\u5927\u3002\n\n\u7136\u540e\u770b\u5230\u64cd\u4f5c 2 \uff0c\u8fd9\u4e2a\u64cd\u4f5c\u4e0d\u4ec5\u6709 \u201c 2 \u4e2a\u6570\u4e2d\u5fc5\u987b\u6709\u4e00\u4e2a\u6392\u540d\u7b2c\u4e00 \u201d \u7684\u9650\u5236\uff0c\u800c\u4e14\u53ea\u80fd\u5f97\u77e5\u8c01\u6392\u540d\u7b2c\u4e00\uff0c\u53ef\u6211\u600e\u4e48\u4fdd\u8bc1\u6211\u8fdb\u884c\u8fd9\u4e2a\u64cd\u4f5c\u65f6\uff0c\u4e24\u4e2a\u6570\u91cc\u4e00\u5b9a\u6709\u4e00\u4e2a\u6392\u540d\u7b2c\u4e00\u5462\uff1f\n\n\u2026\u2026 \u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u6392\u540d\u7b2c\u4e00 \u4e00\u5b9a\u53ef\u4ee5\u53ea\u9760\u64cd\u4f5c 1 \u5f97\u5230\uff1f\u5047\u5982\u6211\u505a\u65e0\u6570\u6b21\u64cd\u4f5c 1 \uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\n\n**\u4e00\u5b9a\u4f1a\u6709\u4e24\u4e2a\u6570\u7edd\u5bf9\u4e0d\u4f1a\u51fa\u73b0\u5728\u64cd\u4f5c 1 \u7684\u56de\u7b54\u4e2d\uff0c\u8fd9\u5c31\u662f\u6392\u540d\u7b2c\u4e00\u548c\u6392\u540d\u6700\u540e\u3002** \u56e0\u4e3a \u6392\u540d\u7b2c\u4e00 \u548c \u6392\u540d\u6700\u540e \u65e0\u6cd5\u9760\u540e / \u9760\u524d\u4e8e\u4efb\u4f55\u4e00\u4e2a\u4eba\uff0c\u81ea\u5df1\u4e5f\u4e0d\u884c\u3002\n\n\u90a3\u6211\u4eec\u53ea\u8981\u505a $n-2$ \u6b21\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e24\u4e2a\u4eba\uff1a\u7528\u4e00\u4e2a\u961f\u5217\u5b58\u4e0b\u6240\u6709\u4eba\u7684\u5e8f\u53f7\uff0c\u6bcf\u6b21\u4ece\u961f\u9996\u53d6 3 \u4e2a\u5e8f\u53f7\u51fa\u6765\u5e76\u5c06\u5176\u51fa\u961f\uff0c\u5bf9\u8fd9 3 \u4e2a\u5e8f\u53f7\u6267\u884c\u64cd\u4f5c 1 \u3002\u7136\u540e\u5c06\u9664\u56de\u7b54\u5f97\u5230\u7684\u5e8f\u53f7\u5916\u7684 2 \u4e2a\u5e8f\u53f7\u91cd\u65b0\u5165\u961f\u3002\n\n\u7531\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u90fd\u4f1a\u51fa\u961f\u4e00\u4e2a\u5e8f\u53f7\uff0c\u5728 $n-2$ \u6b21\u64cd\u4f5c\u540e\u961f\u5217\u4e2d\u5c31\u53ea\u5269\u4e0b 2 \u4e2a\u5e8f\u53f7\u4e86\uff0c\u8fd9\u5c31\u662f\u6392\u540d\u6700\u524d\u548c\u6392\u540d\u6700\u540e\u7684\u5e8f\u53f7\u3002\n\n\u63a5\u4e0b\u6765\u53d6\u51fa\u8fd9\u4e24\u4e2a\u5e8f\u53f7\uff0c\u6267\u884c\u64cd\u4f5c 2 \uff0c\u5c31\u5f97\u5230\u4e86\u6392\u540d\u7b2c\u4e00\u3002\u5982\u6b64\uff0c\u64cd\u4f5c 2 \u7269\u5c3d\u5176\u7528\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u6392\u540d\u7b2c\u4e00\u662f\u8c01\uff0c\u7136\u540e\u5462\uff1f\n\n\u6ce8\u610f\u5230 3 \u4e2a\u6570\u4e2d\u6392\u540d\u6700\u524d\u5df2\u7ecf\u786e\u5b9a\u65f6\uff0c \u201c \u56de\u7b54 3 \u4e2a\u6570\u4e2d\u4e2d\u95f4\u90a3\u4e2a \u201d \u5c31\u662f \u201c\u56de\u7b54\u5269\u4e0b 2 \u4e2a\u6570\u4e2d\u6392\u540d\u9760\u524d\u90a3\u4e2a\u3002\u201d\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u6392\u540d\u7b2c\u4e00\u6267\u884c\u64cd\u4f5c 1 \uff0c\u8fd9\u6837\u56de\u7b54\u7684\u5c31\u662f\u5269\u4e0b\u4e24\u4e2a\u6570\u4e2d\u6392\u540d\u9760\u524d\u90a3\u4e2a\u3002\n\n**\u2026\u2026\u90a3\u4e0d\u5c31\u662f\u4e00\u4e2a\u8d64\u88f8\u88f8\u7684\u6bd4\u8f83\u51fd\u6570\u5417\u3002**\n\n\u501f\u52a9\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5199\u6210 cmp \uff0c\u5229\u7528\u5de5\u5177\u4eba sort \u540c\u5b66\u8fdb\u884c \u201c \u5168\u81ea\u52a8\u4ea4\u4e92 \u201d \uff0c\u4ece\u800c\u8282\u7701\u4e0d\u5c11\u7801\u91cf\u3002~~\u8d77\u7801\u5bf9\u4e8e\u4e24\u4e2a\u4e00\u4f53\u673a\u6253\u9898\u4eba\u800c\u8a00\u8db3\u591f\u4e86~~\n\n\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n### \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\n#define ll long long\n#define R read()\nusing namespace std;\ninline ll read() {\n\tll s=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')f*=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\ts=s*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn s*f;\n}\ninline void write(ll x) {\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) write(x/10),x%=10;\n\tputchar('0'+x);\n}//Don't use it for CF.\ninline void wk(ll x){write(x);putchar(' ');}\ninline void we(ll x){write(x);putchar('\\n');}\nll n,a[20005]; \nll i,j,k,b;// b \u4e3a\u901a\u8fc7\u7b2c\u4e00\u8f6e\u64cd\u4f5c 1 \u5f97\u51fa\u7684\u6700\u53d7\u559c\u7231\uff0c\u5176\u4f59\u4e3a\u5de5\u5177\u53d8\u91cf\u3002 \nll x[3];//\u7b2c\u4e00\u8f6e\u64cd\u4f5c 1 \u6700\u540e\u4e00\u6b65\u6240\u7528\u5de5\u5177\u53d8\u91cf \nqueue<ll> q;\nbool cmp(ll l,ll r){//\u7b2c\u4e8c\u8f6e\u64cd\u4f5c 1, \u901a\u8fc7\u9b54\u6539cmp\u5b9e\u73b0sort\u5168\u81ea\u52a8\u4ea4\u4e92\uff08\u4e0d\u662f\uff09 \n    wk(1),wk(b),wk(l),we(r);//\u8f93\u51fa1,b,l,r\u3002\u7531\u4e8eb\u5df2\u77e5\u6700\u53d7\u559c\u7231\uff0c\u56e0\u6b64\u56de\u7b54\u5fc5\u4e3al,r\u4e2d\u66f4\u53d7\u559c\u7231\u7684\u90a3\u4e2a\u3002 \n    fflush(stdout);\n    i=R;\n    return i==l?1:0;\n}\nint main(){\n    n=R;\n    for(i=0;i<n;i++)q.push(i+1);//\u5c06\u6240\u6709\u4eba\u5165\u961f\uff0c\u4e00\u4f1a\u6328\u4e2a\u8e22\u51fa\u6765 \n    \n    for(i=0;i<n-2;i++){\n        wk(1);//\u7b2c\u4e00\u8f6e\u64cd\u4f5c 1 \uff0c\u6b64\u9636\u6bb5\u901a\u8fc7\u64cd\u4f5c 1 \u5c06\u6240\u6709\u4eba\u7b5b\u5f97\u53ea\u5269\u6700\u559c\u6b22\u7684\u548c\u6700\u4e0d\u559c\u6b22\u7684\u3002 \n        for(j=0;j<3;j++){\n        \twk(x[j]=q.front());\n        \tq.pop();\n        }\n        fflush(stdout);\n        k=R;\n        for(j=0;j<3;j++)if(x[j]!=k)q.push(x[j]);//\u5c06\u672a\u88ab\u8f93\u51fa\u7684\u91cd\u65b0\u5165\u961f\u3002\u8fd9\u6837\u4e00\u6765\u4e00\u5b9a\u4f1a\u5269\u4e24\u4e2a\u4ece\u672a\u88ab\u8f93\u51fa\u7684\uff0c\u8fd9\u5c31\u662f\u6700\u5927\u548c\u6700\u5c0f\u3002 \n    }\n\tx[0]=q.front();\n    q.pop();\n    x[1]=q.front();\n    q.pop();//\u628a\u6700\u5927\u6700\u5c0f\u62ce\u51fa\u6765 \n    wk(2),wk(x[0]),wk(x[1]);//\u64cd\u4f5c 2 \uff0c\u63ea\u51fa\u6700\u559c\u6b22\u7684 \n    fflush(stdout);\n    b=R;//\u8fd9\u6837 b \u5c31\u662f\u6700\u559c\u6b22\u7684\u4e86\uff0c\u7136\u540e\u62ff\u53bb\u7ed9 cmp \u5f53\u5de5\u5177\u4eba\u3002 \n    for(i=j=0;i<n;i++)if(i!=b-1)a[j++]=i+1;\n    sort(a,a+n-1,cmp);//\u6392\u5e8f \u00b7\u9b54\u6539 ver\n\t//\u8fd9\u6837\u7528\u8fd9\u79cd\u753b\u98ce\u6e05\u5947\u7684\u5feb\u6392\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u7528\u64cd\u4f5c 1 \u6765\u5f53\u505a\u5927\u5c0f\u6bd4\u8f83\uff0c\u4ece\u800c\u5f97\u5230\u6392\u5217\u3002 \n    wk(3),wk(b);//\u5148\u628a\u6700\u559c\u6b22\u7684\u8f93\u4e86 \n    for(i=0;i<n-1;i++)wk(a[i]);//\u4f9d\u6b21\u8f93\u51fa \n    fflush(stdout);\n    return 0;\n}\n```\n\n\u5751\u70b9\uff1a\u8bb0\u5f97 \n\n```\nfflush(stdout); \n```\n\n\u52b2 \u7206 \u4ea4 \u4e92\n\n\u8d85 \u957f \u8f93 \u51fa\n\n\u8bc4 \u6d4b \u7279 \u6027\n\n\u5f53 \u573a \u8d85 \u65f6",
        "postTime": 1642334173,
        "uid": 93707,
        "name": "Rnfmabj",
        "ccfLevel": 7,
        "title": "P8052 [ZYOI Round1] Truth/\u771f\u5fc3\u8bdd\u5927\u5192\u9669 \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u662f\u672c\u849f\u84bb\u7684\u7b2c $44$ \u7bc7\u9898\u89e3\uff0cP8052\u3002\n\n\u6b64\u524d\u4e00\u76f4\u4ee5\u4e3a\u4ea4\u4e92\u9898\u5f88\u96be\uff0c\u76f4\u5230\u6211\u8fd9\u6b21\u6210\u529f\u505a\u51fa\u4e86\u4e00\u9898\u3002\u5c31\u8fc7\u6765\u5206\u4eab\u4e86\u3002\n\n\u601d\u8def\u5927\u81f4\u4e0e @yeshubo_qwq \u7684\u4ee3\u7801\u662f\u76f8\u4f3c\u7684\u3002\u53ef\u60dc\u8fd9\u4f4d\u5927\u4f6c\u7684\u9898\u89e3\u5e76\u4e0d\u662f\u5f88\u6e05\u6670\u3002\n\n\u9996\u5148\u6765\u5206\u6790**\u771f\u5fc3\u8bdd**\u548c**\u5927\u5192\u9669**\u4e24\u79cd\u64cd\u4f5c\u3002\u4e3a\u7b80\u6d01\u800c\u8a00\uff0c\u6211\u4f7f\u7528\u6211\u4eec\u73ed\u4fd7\u79f0\u7684\u201c\u7b2c\u4e00\u201d\u3001\u201c\u7b2c\u4e8c\u201d\u3001\u201c\u7b2c\u4e09\u201d\u8868\u793a\u559c\u6b22\u7684\u7a0b\u5ea6\u3002\uff08\u61c2\u7684\u90fd\u61c2\uff09\n\n\u6211\u4eec\u77e5\u9053\u771f\u5fc3\u8bdd\u6700\u540e\u8fd4\u56de\u7684\u662f\u7b2c\u4e8c\u5927\u7684\u3002\u6362\u4e2a\u89d2\u5ea6\u60f3\uff0c\u8fd9\u4e2a\u8fd4\u56de\u7684\u53ef\u601c\u866b\u5c31\u4e0d\u662f\u201c\u7b2c\u4e00\u201d\u3002\n\n\u6211\u5efa\u7acb\u4e86\u4e00\u4e2a\u961f\u5217\uff0c\u9996\u5148\u53ef\u4ee5\u628a\u6240\u6709\u4eba\u7684\u7f16\u53f7\u5165\u961f\uff08\u5373\u5faa\u73af $1 \\sim n$\uff09\uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u5934\u4e09\u4e2a\u5143\u7d20\uff0c\u4f9d\u6b21\u5f39\u51fa\uff0c\u518d\u8be2\u95ee\uff0c\u83b7\u53d6\u56de\u7b54\uff0c\u5c06\u5269\u4e0b\u4e24\u4e2a\u5f52\u961f\u3002\n\n\u8fd9\u6837\u5728\u5269\u4f59\u4e09\u4e2a\u65f6\uff0c\u8fdb\u884c\u4e00\u6b21\u771f\u5fc3\u8bdd\uff0c\u5c31\u4f1a\u5269\u4f59\u4e24\u4e2a\u3002\u6211\u4eec\u77e5\u9053\u6bcf\u4e00\u6b21\u6392\u9664\u7684\u65e2\u4e0d\u662f\u8fd9\u4e09\u4e2a\u4e2d\u6700\u4ee4 Percy \u7a00\u996d\u7684\uff0c\u4e5f\u4e0d\u662f\u8fd9\u4e09\u4e2a\u4e2d\u6700\u4ee4 Percy \u638f\u76d0\u7684\u3002\u90a3\u66f4\u4e0d\u53ef\u80fd\u662f\u5168\u4f53\u7684\u6700\u7a00\u996d\u6216\u6700\u638f\u76d0\u7684\u4e86\u3002\u90a3\u8fd9\u4e24\u4e2a\u4f1a\u51fa\u73b0\u5728\u54ea\u91cc\u5462\uff1f\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u5c31\u662f\u5269\u4e0b\u8fd9\u4e24\u4e2a\u3002\n\n\u7136\u540e\u5462\uff1f\u7ecf\u8fc7\u6211\u7684\u63a8\u7406\uff0c\u4f60\u4e00\u5b9a\u60f3\u5230\u8be5\u600e\u4e48\u505a\u4e86\uff1a\u8fdb\u884c\u4e00\u6b21**\u5927\u5192\u9669**\u5224\u65ad\u8fd9\u4e24\u4e2a\u54ea\u4e2a\u662f\u201c\u7b2c\u4e00\u201d\uff0c\u54ea\u4e2a\u662f\u201c\u7b2c $n$\u201d\u3002\uff08\u5373\u6700\u4ee4 Percy \u7a00\u996d\u548c\u6700\u4ee4 Percy \u638f\u76d0\uff09\n\n\u6211\u4eec\u5f97\u5230\u4e86\u201c\u7b2c\u4e00\u201c\u3002\u7136\u540e\u5982\u4f55\u5224\u65ad\u5176\u4f59\u7684\u987a\u5e8f\uff1f\u4f60\u4e5f\u4f1a\u4e00\u4e3e\u53cd\u4e09\u7684\u5bf9\u5427\uff0c\u5224\u65ad\u76f8\u90bb\u4e24\u4e2a\u7f16\u53f7\u7684\u559c\u6b22\u7a0b\u5ea6\u5927\u5c0f\uff0c\u7c7b\u4f3c\u5192\u6ce1\u6392\u5e8f\uff0c\u76f4\u63a5\u7528 `sort` \u4ece\u5927\u5230\u5c0f\u6392\u51fa\u987a\u5e8f\u3002\u8bb0\u5f97\u4e0d\u8981\u6392\u201d\u7b2c\u4e00\u201c\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5176\u4e3a\u7b2c\u4e00\u4e2a\u4e86\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u5751\u70b9\uff1a**\u5927\u5192\u9669\u9700\u8981\u4f7f\u4e24\u4e2a\u53c2\u6570\u6709\u4e00\u4e2a\u662f\u6700\u559c\u6b22\u7684**\u3002\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u7528**\u771f\u5fc3\u8bdd**\uff0c\u4f20\u5165\u201d\u7b2c\u4e00\u201c\uff0c\u548c\u8fd9\u4e24\u4e2a\u7f16\u53f7\u3002\u56e0\u4e3a\u201d\u7b2c\u4e00\u201c\u80af\u5b9a\u662f\u7a00\u996d\u7a0b\u5ea6\u6700\u5927\u7684\uff0c\u6240\u4ee5\u8fd4\u56de\u7684\u5176\u5b9e\u5c31\u662f\u8fd9\u4e24\u4e2a\u7f16\u53f7\u4e2d\u66f4\u7a00\u996d\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u8f93\u51fa\u7684\u662f\u201d\u7b2c\u4e8c\u5927\u201c\u7684\u3002\n\n\u4e0d\u8981\u5fd8\u8bb0\u8be2\u95ee\u3001\u8f93\u51fa\u540e `fflush(stdout);`\uff0c\u4e0d\u7136\u4f60\u7684\u8bc4\u6d4b\u8bb0\u5f55\u5c31\u4f1a \u4e94 \u5f69 \u6591 \u6593 \u3002\uff08[MLE](https://www.luogu.com.cn/user/253738) \u9884\u8b66\uff08\uff09\uff09\n\n\u6700\u540e\u8d34\u4e00\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n;\nqueue <int> devout;\nint cupcake[20001];\nint truelove;\n\nbool meessing(int jiaoyan, int shaobing){ // cmp\n\tcout<<\"1 \"<<truelove<<\" \"<<jiaoyan<<\" \"<<shaobing<<endl; // \u771f\u5fc3\u8bdd\n\tfflush(stdout);\n\tint not_able;\n\tcin>>not_able;\n\treturn not_able==jiaoyan; // \u76f4\u63a5return\u91cc\u9762\u5224\u65ad\n}\n\nint main(){\n\tcin>>n;\n\tfor (int i=1; i<=n; i++) devout.push(i); // \u538b\u5165\n\twhile (devout.size()!=2){\n\t\tfor (int i=1; i<=3; i++) cupcake[i]=devout.front(), devout.pop(); // \u4f9d\u6b21\u5f39\u51fa\u83b7\u53d6\u524d\u4e09\u4e2a\u5143\u7d20\u5e76\u771f\u5fc3\u8bdd\n\t\tcout<<\"1 \"<<cupcake[1]<<\" \"<<cupcake[2]<<\" \"<<cupcake[3]<<endl;\n\t\tfflush(stdout);\n\t\tint secbig;\n\t\tcin>>secbig;\n\t\tfor (int i=1; i<=3; i++) \n\t\t\tif (cupcake[i]!=secbig) devout.push(cupcake[i]); // \u5c06\u6ca1\u6709\u6392\u9664\u7684\u518d\u6b21\u201d\u5ba1\u95ee\u201c\n\t}\n\t\n\tint lovest=devout.front(), hatest; // \u201d\u7b2c\u4e00\u201c\u201d\u7b2cn\u201c\n\tdevout.pop(), hatest=devout.front();\n\tcout<<\"2 \"<<lovest<<\" \"<<hatest<<endl; // \u8be2\u95ee\n\tfflush(stdout);\n\tcin>>truelove; // \u54ce\u5440\u5440\uff0c\u771f\u7231\u554a~~~\n\t\n\tint cur=0;\n\tfor (int i=1; i<=n; i++)\n\t\tif (truelove!=i) cur++, cupcake[cur]=i; // \u8fd9\u91cc\u5c31\u662f\u6392\u9664\u201d\u7b2c\u4e00\u201c\uff0c\u5269\u4e0b\u7684\u6392\u5e8f\n\tsort(cupcake+1, cupcake+cur+1, meessing); // \u6392\u5e8f\uff0c\u76f4\u63a5\u8fd9\u6837\u5c31\u884c\n\t\n\tcout<<\"3 \"<<truelove; // \u8f93\u51fa\n\tfor (int i=1; i<=cur; i++) cout<<\" \"<<cupcake[i]; // \u8f93\u51fa\n\tfflush(stdout); // Do not be \uff23\uff2f\uff2c\uff2f\uff35\uff32\uff26\uff35\uff2c\n\treturn 0;\n}\n```\n\n\u8c22\u8c22\u5927\u5bb6\uff0c\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u80fd\u8ba9\u4f60\u8305\u585e\u987f\u5f00\u3002\u6211\u4ece\u6765\u6ca1\u6709\u8fd9\u4e48\u8ba4\u771f\u5199\u8fc7\u4e00\u7bc7\u9898\u89e3\uff0c\u8fd9\u662f\u7b2c\u4e00\u6b21\u3002",
        "postTime": 1666523340,
        "uid": 341353,
        "name": "_6872_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 #44 P8052\u3010[ZYOI Round1] Truth/\u771f\u5fc3\u8bdd\u5927\u5192\u9669\u3011"
    },
    {
        "content": "## \u601d\u8def\n\u9996\u5148\uff0c\u6c42\u51fa\u6700\u5927\u503c\u3002\n\n\u7528\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff08\u5355\u7aef\u961f\u5217\uff0c\u53cc\u7aef\u961f\u5217\uff0c\u4f18\u5148\u961f\u5217\uff0c\u6808\u7b49\u90fd\u884c\uff0c\u6700\u597d\u7528\u65b9\u4fbf\u5220\u9664\u4e0e\u63d2\u5165\u7684\uff09\uff0c\u628a\u5168\u90e8\u4eba\u653e\u8fdb\u53bb\uff0c\u6bcf\u6b21\u53d6\u51fa\u4e09\u4e2a\u4eba\uff0c\u8fdb\u884c\u771f\u5fc3\u8bdd\u64cd\u4f5c\uff0c\u8fd4\u56de\u7684\u662f\u503c\u7b2c\u4e8c\u5927\u7684\u4eba\uff0c\u90a3\u4e2a\u4eba\u4e00\u5b9a\u4e0d\u662f\u6700\u5927\u7684\uff0c\u628a\u5269\u4e0b\u4e24\u4e2a\u4eba\u653e\u56de\u53bb\u3002\u5982\u6b64\u64cd\u4f5c\uff0c\u6700\u540e\u5269\u4e0b\u4e24\u4e2a\u4eba\u4e00\u5b9a\u662f\u6700\u5927\u7684\u548c\u6700\u5c0f\u7684\uff0c\u8fdb\u884c\u5927\u5192\u9669\u64cd\u4f5c\uff0c\u5373\u53ef\u6c42\u51fa\u6700\u5927\u503c\u3002\n\n\u7136\u540e\uff0c\u771f\u5fc3\u8bdd\u64cd\u4f5c\u5c31\u53d8\u6210\u4e86\u6bd4\u8f83\u5de5\u5177\u3002\n\n\u771f\u5fc3\u8bdd\u64cd\u4f5c\u8be2\u95ee\u6700\u5927\u503c\u548c\u53e6\u5916\u4e24\u4e2a\u4eba\uff0c\u56e0\u4e3a\u6700\u5927\u503c\u4e00\u5b9a\u5728\u4e09\u4e2a\u4eba\u4e2d\u6392\u7b2c\u4e00\uff0c\u6240\u4ee5\u8fd4\u56de\u7684\u5c31\u662f\u53e6\u5916\u4e24\u4e2a\u4eba\u4e2d\u8f83\u5927\u7684\u90a3\u4e2a\u4eba\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u5176\u5199\u6210 cmp\uff0c\u76f4\u63a5 sort \u5b8c\u4e8b\u3002\n\n\u6700\u540e\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint _1(int x,int y,int z){//\u771f\u5fc3\u8bdd\u64cd\u4f5c \n\tprintf(\"1 %d %d %d\\n\",x,y,z);\n\tfflush(stdout);\n\t//\u6ce8\u610f\uff1a\u7a0b\u5e8f\u4e2d\u7684fflush(stdout);\u4e00\u5b9a\u8981\u52a0\uff0c\u5426\u5219\u4f1aTLE\n\tint ans;\n\tscanf(\"%d\",&ans);\n\treturn ans;\n}\nint _2(int x,int y){//\u5927\u5192\u9669\u64cd\u4f5c \n\tprintf(\"2 %d %d\\n\",x,y);\n\tfflush(stdout);\n\tint ans;\n\tscanf(\"%d\",&ans);\n\treturn ans;\n}\nint n,i,x,fir,a[20005];\nqueue <int> p;\nbool cmp(int x,int y){\n\treturn _1(fir,x,y)==x;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\t//\u6c42\u51fa\u6700\u5927\u503c\u5b58\u5165fir \n\tfor(i=1;i<=n;i++)p.push(i);\n\twhile(p.size()>2){\n\t\tfor(i=1;i<=3;i++){a[i]=p.front();p.pop();}\n\t\tx=_1(a[1],a[2],a[3]);\n\t\tfor(i=1;i<=3;i++)\n\t\t\tif(a[i]!=x)p.push(a[i]);\t\t\n\t}\n\tx=p.front();p.pop();\n\tfir=_2(x,p.front());\n\t//\u9664\u4e86\u6700\u5927\u503c\u653e\u8fdb\u6570\u7ec4\u5e76\u7528sort\u8fdb\u884c\u6392\u5e8f \n\tint m=n;n=0;\n\tfor(i=1;i<=m;i++)\n\t\tif(i!=fir)a[++n]=i;\n\tsort(a+1,a+1+n,cmp);\n\t//\u5b8c\u7ed3\u8f93\u51fa\u7b54\u6848 \n\tprintf(\"3 %d\",fir);\n\tfor(i=1;i<=n;i++)printf(\" %d\",a[i]);\n\tfflush(stdout);\n\treturn 0;\n}\n```\n",
        "postTime": 1644159137,
        "uid": 562686,
        "name": "yeshubo_qwq",
        "ccfLevel": 5,
        "title": "P8052 \u9898\u89e3"
    },
    {
        "content": "\u633a\u6709\u610f\u601d\u7684\u4ea4\u4e92\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u627e\u51fa\u6700\u5927\u503c\u3002\u7531\u4e8e\u4e09\u4e2a\u6570\u4e2d\u7684\u7b2c\u4e8c\u5927\u503c\u7edd\u5bf9\u4e0d\u662f\u6700\u5927\u503c\uff0c\u8003\u8651\u4e00\u4e0b\u7b97\u6cd5\u3002\n\n\n0. \u5c06 $1,2,3,...,n$ \u653e\u5165\u4e00\u4e2a\u6808\u3002\n1. \uff08\u6267\u884c $n-2$ \u6b21\uff09\u53d6\u6808\u9876\u4e09\u4e2a\u6570\uff0c\u4f7f\u7528 $1$ \u53f7\u8be2\u95ee\u51fa\u6b21\u5927\u503c\uff0c\u7136\u540e\u8fd9\u4e09\u4e2a\u6570\u4e2d\u4e0d\u662f\u6b21\u5927\u503c\u7684\u4e24\u4e2a\u6570\u5f39\u56de\u961f\u5217\u3002\n2. \uff08\u6267\u884c $1$ \u6b21\uff09\u6b64\u65f6\u6808\u91cc\u8fd8\u5269\u4e24\u4e2a\u6570\uff0c\u5176\u4e2d\u5fc5\u7136\u6709\u4e00\u4e2a\u662f\u6700\u5927\u503c\uff0c\u56e0\u4e3a\u4e4b\u524d\u6392\u51fa\u7684\u90fd\u4e0d\u662f\u6700\u5927\u503c\u3002\u8fdb\u884c $2$ \u53f7\u8be2\u95ee\u5c31\u53ef\u4ee5\u627e\u5230\u6700\u5927\u503c\u3002\n\n\u627e\u5230\u6700\u5927\u503c\u540e\uff0c\u6211\u4eec\u6709\u4ee5\u4e0b\u6bd4\u8f83\u4e24\u4e2a\u6570 $x,y$ \u7684\u65b9\u6cd5\uff1a\n\n\u8be2\u95ee ``1 max x y ``\uff0c\u5176\u4e2d max \u662f\u6700\u5927\u503c\u7684\u7f16\u53f7\u3002\u5982\u679c\u5f97\u51fa\u7ed3\u679c\u662f $x$ \u8bf4\u660e $x$ \u66f4\u5927\uff0c\u5426\u5219 $y$ \u66f4\u5927\u3002\n\n\u65e2\u7136\u6709\u4e86\u6bd4\u8f83\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9009\u53d6\u7a33\u5b9a\u7684 $O(n \\log n)$ \u6392\u5e8f\u7b97\u6cd5\u2014\u2014\u5f52\u5e76\u6392\u5e8f\u89e3\u51b3\u4e86\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u8f83\u4e3a\u7b80\u5355\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll n,maxx;\nstack<ll>stk; ll a[20005],b[20005],cnt;\nbool less_than(ll a,ll b){\n\tcout<<\"1 \"<<maxx<<\" \"<<a<<\" \"<<b<<endl;\n\tll temp; cin>>temp;\n\treturn temp==b; \n} // \u5224\u65ad\nvoid msort(ll l,ll r){\n    if(l==r) return;\n    ll mid=l+r>>1;\n    msort(l,mid),msort(mid+1,r);\n    ll i=l,j=mid+1,now=l;\n    while(i<=mid&&j<=r) b[now++]=less_than(a[i],a[j])?a[i++]:a[j++];\n    while(i<=mid) b[now++]=a[i++];\n    while(j<=r) b[now++]=a[j++];\n    for(ll i=l;i<=r;i++) a[i]=b[i];\n} // \u5f52\u5e76\u6392\u5e8f\u6a21\u677f\nint main(){\n\tcin>>n;\n\tif(n==1){\n\t\tcout<<\"3 1\"<<endl;\n\t\treturn 0;\n\t}// \u7279\u5224 n=1\n\tif(n==2){\n\t\tcout<<\"2 1 2\"<<endl;\n\t\tll temp; cin>>temp;\n\t\tif(temp==2) cout<<\"3 2 1\"<<endl;\n\t\telse cout<<\"3 1 2\"<<endl;\n        return 0;\n\t}// \u7279\u5224 n=2\n\tfor(ll i=1;i<=n;i++) stk.push(i);\n\tfor(ll i=1;i<n-1;i++){\n\t\tll a1=stk.top(); stk.pop();\n\t\tll a2=stk.top(); stk.pop();\n\t\tll a3=stk.top(); stk.pop();\n\t\tcout<<\"1 \"<<a1<<\" \"<<a2<<\" \"<<a3<<endl;\n\t\tll temp; cin>>temp;\n\t\tif(a1!=temp) stk.push(a1);\n\t\tif(a2!=temp) stk.push(a2);\n\t\tif(a3!=temp) stk.push(a3);\n\t}\n\tll no1=stk.top(); stk.pop(); ll no2=stk.top();\n\tcout<<\"2 \"<<no1<<\" \"<<no2<<endl;\n\tll temp; cin>>temp;\n\tif(temp==no1) maxx=no1;\n\telse maxx=no2;\n\t// \u4ee5\u4e0a\u7b97\u6cd5\u627e\u51fa\u6700\u5927\u503c\n\tfor(ll i=1;i<=n;i++) \n\t\tif(i!=maxx) a[++cnt]=i;\n\t// \u62a0\u51fa\u4e0d\u662f\u6700\u5927\u503c\u7684\uff0c\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\n\tmsort(1,cnt);\n    \n\tcout<<\"3 \"<<maxx<<\" \";\n\tfor(ll i=cnt;i>=1;i--) cout<<a[i]<<\" \";\n\tcout<<endl;\n} \n```",
        "postTime": 1642376143,
        "uid": 334727,
        "name": "BreakPlus",
        "ccfLevel": 0,
        "title": "Solution P8052"
    }
]