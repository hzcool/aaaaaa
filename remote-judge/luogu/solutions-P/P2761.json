[
    {
        "content": "\u72b6\u538b + \u6700\u77ed\u8def\u677f\u5b50\u9898\uff08\u4f3c\u4e4e\u4e0d\u72b6\u538b\u90fd\u53ef\u4ee5\u8fc7\uff09\u3002\u4f46\u611f\u89c9\u697c\u4e0b\u7684\u51e0\u4f4d\u90fd\u8bb2\u7684\u4e0d\u662f\u592a\u8be6\u7ec6\uff0c\u4e8e\u662f\u51b3\u5b9a\u8865\u53d1\u4e00\u6ce2\u840c\u65b0\u53cb\u597d\u578b\u9898\u89e3\u3002\u9002\u5408\u8fd8\u6ca1\u6709\u600e\u4e48\u63a5\u89e6\u8fc7\u72b6\u6001\u538b\u7f29\u548c\u72b6\u6001\u6700\u77ed\u8def\u7684\u7ae5\u978b\u4eec\u3002     \n\n\u5982\u679c\u4f60\u8fd8\u4e0d\u719f\u6089\u4f4d\u8fd0\u7b97\u516d\u5927\u8fd0\u7b97\u7b26\uff08`&`,`|`,`~`,`^`,`<<`,`>>`\uff09\uff0c\u53ef\u4ee5\u5148\u81ea\u884c\u767e\u5ea6\u3002\n\n### Step1. \u600e\u4e48\u6700\u77ed\u8def\uff1f\n\n\u8fd9\u9053\u9898\u53ef\u80fd\u548c\u5e73\u5e38\u6211\u4eec\u719f\u77e5\u7684\u6700\u77ed\u8def\u4e0d\u592a\u4e00\u6837\u3002\u8282\u70b9\u4e0d\u662f\u73b0\u6210\u7684\u8282\u70b9\uff0c\u8fb9\u4e0d\u662f\u73b0\u6210\u7684\u8fb9\u3002  \n\n\u90a3\u4e48\u8fd9\u9053\u9898\u4e2d\u7684\u8282\u70b9\u662f\u4ec0\u4e48\u5462\uff1f\u662f\u72b6\u6001\u3002**\u72b6\u6001\u5c31\u662f\u6307bug\u4fee\u590d\u7684\u72b6\u6001**\u3002\u6700\u5f00\u59cb\uff0c\u6240\u6709bug\u90fd\u8fd8\u6ca1\u6709\u88ab\u4fee\u590d\uff0c\u56e0\u6b64\u521d\u59cb\u72b6\u6001\u662f `\u5168\u90e8\u672a\u4fee\u590d` \u3002\u901a\u8fc7\u8fd0\u884c\u67d0\u4e9b\u8865\u4e01\u5305\uff0c\u53ef\u4ee5\u4fee\u590d\u4e00\u4e9bbug\u6216\u8005\u65b0\u589e\u4e00\u4e9bbug\uff0c\u90a3\u4e48\u6b64\u65f6\u7684bug\u4fee\u590d\u72b6\u6001\u5c31\u662f\u5f53\u524d\u72b6\u6001\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u6765\u7ef4\u62a4\u4ece\u521d\u59cb\u72b6\u6001\uff08\u5168bug\uff09\u5230\u5f53\u524d\u72b6\u6001\uff08\u4fee\u590d\u4e86\u67d0\u4e9bbug\uff09 \u7684\u6700\u77ed\u8def\u5f84\u3002   \n\u4f60\u53ef\u80fd\u8fd8\u4f1a\u95ee\uff0c\u6211\u4eec\u600e\u4e48\u52a0\u8fb9\u5462\uff1f\u8fd9\u9053\u9898\u4e0d\u9700\u8981\u52a0\u8fb9\uff0c\u6bcf\u6b21\u53ea\u9700\u8981\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8865\u4e01\u5305\u5373\u53ef\uff08\u7c7b\u4f3c\u4e8e\u5b8c\u5168\u56fe\uff09    \n\u90a3\u8def\u5f84\u957f\u5ea6\u662f\u4ec0\u4e48\u5462\uff1f\u4e0d\u5c31\u662f\u8fd0\u884c\u8865\u4e01\u5305\u7684\u603b\u65f6\u95f4\u5417\u3002    \n\u7ec8\u70b9\u662f\u4ec0\u4e48\u5462\uff1f\u5f88\u663e\u7136\uff0c\u5c31\u662f\u4fee\u590d\u5168\u90e8\u7684Bug\u3002  \n\n### Step2. \u72b6\u6001\u538b\u7f29\n\n\u7531\u4e8e\u4e00\u5171\u6709\u6700\u591a20\u4e2abug\uff0c\u5982\u679c\u6bcf\u4e2abug\u90fd\u6709\u5df2\u7ecf\u4fee\u590d\u548c\u6ca1\u6709\u4fee\u590d\u4e24\u79cd\u72b6\u6001\uff0c\u90a3\u4e48\u6bcf\u6b21\u72b6\u6001\u8f6c\u79fb\u9700\u8981\u4f2020\u4e2a\u53c2\uff0820\u5143\u6570\u7ec4\uff09\u3002\u80fd\u4e0d\u80fd\u628a\u8fd9\u4e00\u8fc7\u7a0b\u4f18\u5316\u52301\u4e2a\u53c2\u6570\u5462\uff1f\u6211\u4eec\u9700\u8981\u72b6\u6001\u538b\u7f29\u3002**\u7531\u4e8e\u5bf9\u4e8e\u6bcf\u4e2abug\u90fd\u53ea\u6709\u4fee\u590d\u6ca1\u4fee\u590d\u4e24\u79cd\u72b6\u6001\uff0c\u6211\u4eec\u4e0d\u59a8\u75280,1\u8868\u793a\uff081\u8868\u793a\u672a\u4fee\u590d\uff0c0\u5df2\u4fee\u590d\uff09\u3002\u5982\u679c\u6211\u4eec\u628a\u8fd920\u4e2a0,1\u4e32\u5728\u4e00\u8d77\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4e32\uff0c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4e32\u4e5f\u5c31\u5bf9\u5e94\u7740\u4e00\u4e2a\u6574\u6570**\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u4e00\u4e2a\u72b6\u6001\u538b\u7f29\u6210\u4e86\u4e00\u4e2a\u6574\u6570(int)  \n\u6211\u4eec\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u5047\u8bbe\u5f53\u524d\u4e00\u79cd\u72b6\u6001\u662f\uff08\u5df2\u4fee\u590dbug12\uff0c\u672a\u4fee\u590dbug3\uff09\uff0c\u90a3\u4e48\u5bf9\u5e94\u768401\u4e32\u5c31\u662f110\uff0c\u8f6c\u5316\u6210\u6574\u6570\u5c31\u662f6\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\uff1a\u521d\u59cb\u7684bug\u5168\u90e8\u672a\u4fee\u590d\u72b6\u6001\u4e3a111\uff0c\u5bf9\u5e947\u3002\u7ed3\u675f\u7684bug\u5168\u90e8\u4fee\u590d\u72b6\u6001\u4e3a000\uff0c\u5bf9\u5e940\u3002\u5c06\u60c5\u51b5\u62d3\u5c55\u5230 $n$ \u4e2abug\uff0c\u90a3\u4e48\u521d\u59cb\u72b6\u6001\u5c31\u662f $2^n-1$\uff0c\u5373`(1<<n)-1`\u3002\u7ed3\u675f\u72b6\u6001\u662f $0$\u3002\n\n### Step3. \u72b6\u6001\u8f6c\u79fb\n\n\u8bf4\u5b8c\u4e86\u538b\u7f29\u518d\u6765\u8bf4\u8bf4\u8f6c\u79fb\u3002\u8f6c\u79fb\u8bf4\u767d\u4e86\u5c31\u662f\u6839\u636e\u5f53\u524d\u7684\u72b6\u6001\uff0c\u8ba1\u7b97\u51fa\u4fee\u590d\u4e86bug\u4e4b\u540e\u7684\u72b6\u6001\u3002\n\n#### \u5224\u65ad\u80fd\u5426\u4f7f\u7528\u4e00\u4e2a\u8865\u4e01\u5305\n\n\u7ffb\u8bd1\u6210\u72b6\u6001\u8bed\u8a00\u5c31\u662f\uff0c\u53ea\u6709\u5f53\u524d\u72b6\u6001\u7684\u67d0\u4e9b\u4f4d\u7f6e\u4e0a\u5168\u90e8\u662f1\uff0c\u67d0\u4e9b\u4f4d\u7f6e\u4e0a\u5168\u90e8\u662f0\uff0c\u624d\u53ef\u4ee5\u8fd0\u884c\u8865\u4e01\u5305\u3002\u5982\u4f55\u8fdb\u884c\u8fd9\u4e00\u5224\u65ad\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u8865\u4e01\u5305\u7684\u4f7f\u7528\u5148\u51b3\u6761\u4ef6\u4e5f\u538b\u7f29\u6210\u4e24\u6761\u72b6\u6001\u3002\u6837\u4f8b\u4e2d\u8865\u4e01\u53053\u7684\u4f7f\u7528\u6761\u4ef6b1\u5c31\u662f`000`=0\uff0cb2\u5c31\u662f`011`=3.\n\n\u8bb0\u5f53\u524d\u72b6\u6001\u4e3ax  \n1.\u5224\u65ad\u662f\u4e0d\u662f\u6240\u6709\u7684b1\u4f4d\u90fd\u662f1\uff1a\u6211\u4eec\u53ef\u4ee5\u628ab1\u4e0ex\u6309\u4f4d\u4e0e\u3002\u5bb9\u6613\u77e5\u9053\uff0c\u5982\u679c\u7684\u5f97\u5230\u7684\u503c\u5c31\u662fb1\u672c\u8eab\uff0c\u90a3\u4e48x\u6240\u6709b1\u4f4d\u4e0a\u90fd\u662f1   \n2.\u5224\u65ad\u662f\u4e0d\u662f\u6240\u6709\u7684b2\u4f4d\u90fd\u662f0\uff1a\u6211\u4eec\u53ef\u4ee5\u628ab1\u4e0ex\u6309\u4f4d\u4e0e\u3002\u5bb9\u6613\u77e5\u9053\uff0c\u5982\u679c\u7684\u5f97\u5230\u7684\u503c\u5c31\u662f0\uff0c\u90a3\u4e48now\u6240\u6709b2\u4f4d\u4e0a\u90fd\u662f0     \n\n\u4ee3\u7801\uff1a\uff08p\u662f\u8865\u4e01\u5305\u7ed3\u6784\u4f53\uff09\n```cpp\n if((x&p[i].b1)==p[i].b1&&(x&p[i].b2)==0) \u6267\u884c\u4e0b\u4e00\u6b65\n ```\n \n #### \u4f7f\u7528\u4e86\u4e00\u4e2a\u8865\u4e01\u4e4b\u540e\u7684\u60c5\u51b5\n \n \u7ffb\u8bd1\u6210\u72b6\u6001\u8bed\u8a00\u5c31\u662f\uff0c\u4f7f\u7528\u4e4b\u540e\u5c06f1\u4f4d\u7f6e\u4e0a\u53d8\u62100,f2\u4f4d\u7f6e\u4e0a\u53d8\u62101\u3002\u6211\u4eec\u8fd8\u662f\u6309\u7167\u4e4b\u524d\u7684\u601d\u8def\uff0c\u5c06f1,f2\u4e5f\u8ba1\u7b97\u6210\u4e24\u4e2a\u72b6\u6001\u3002\u5982\u679c\u9700\u8981\u5c06f2\u4f4d\u7f6e\u53d8\u62101\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u7528\u5f53\u524d\u72b6\u6001\u6216\u4e0af2\u3002\u5982\u679c\u9700\u8981\u5c06f1\u4f4d\u7f6e\u53d8\u62100\uff0c\u6211\u4eec\u53ef\u4ee5\u6216\u4e0a\u4e00\u4e2af1\uff0c\u4f7f\u5f97\u5f53\u524d\u72b6\u6001\u7684\u6240\u6709f1\u4f4d\u7f6e\u90fd\u53d8\u62101\uff0c\u518d\u5f02\u6216\u4e00\u4e2af1\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06f1\u6240\u6709\u4f4d\u7f6e\u53d8\u62100.\n \n \u4ee3\u7801\uff1a\uff08y\u4ee3\u8868\u8fd0\u884c\u8865\u4e01\u5305\u4e4b\u540e\u7684\u72b6\u6001\uff09\n ```cpp\n int y=((x|p[i].f1)|p[i].f2)^p[i].f1;\n ```\n \n ### Step 4. \u8d2f\u7a7f\n \n \u4e3b\u8981\u601d\u8def\u8bb2\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5b8c\u6574\u7684\u4ee3\u7801\u3002\n \n ```cpp\n #include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\n\nstruct pack{int f1,f2,b1,b2,t;}p[505];\nint n,m,fir,minn[1<<22],tag;  //\u7531\u4e8e\u6700\u591a\u67092^20\u79cd\u72b6\u6001\uff0c\u6570\u7ec4\u8981\u5f00\u591f\nqueue<int>q;bool exi[1<<22];\n\ninline void read(int &x){\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\tx=ch^48;ch=getchar();\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n}\n\ninline int gtag(){  //\u624b\u5199\u8bfb\u5165\u53ef\u4ee5\u9632\u6b62\u51fa\u9519\n\tchar ch=getchar();\n\twhile(ch!='+'&&ch!='-'&&ch!='0')ch=getchar();\n\tif(ch=='+')return 1;\n\tif(ch=='-')return 2;\n\treturn 0;\n}\n\nvoid spfa(){  //\u5173\u4e8espfa\uff0c\u5b83\u8fd8\u6ca1\u6b7b\n\tmemset(minn,0x7f,sizeof(minn));\n\tminn[fir]=0;\n\tq.push(fir);\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tfor(int i=1;i<=m;++i)  //\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5305\n\t\t if((x&p[i].b1)==p[i].b1&&(x&p[i].b2)==0){  //\u5224\u65ad\u5148\u51b3\n\t\t \tint y=((x|p[i].f1)|p[i].f2)^p[i].f1;//\u5f97\u5230\u8fd0\u884c\u540e\u72b6\u6001\n\t\t \tif(minn[x]+p[i].t<minn[y]){\n\t\t \t\tminn[y]=minn[x]+p[i].t;\n\t\t \t\tif(!exi[y]){\n\t\t \t\t\tq.push(y);\n\t\t \t\t\texi[y]=true;\n\t\t \t\t}\n\t\t \t}\n\t\t }\n\t\texi[x]=false;\n\t\tq.pop();\n\t}\n}\n\nint main(){\n\tread(n);read(m);\n\tfor(int i=1;i<=m;++i){\n\t\tread(p[i].t);\n\t\tfor(int j=1;j<=n;++j){\n\t\t\ttag=gtag();\n\t\t\tif(tag==1)p[i].b1|=(1<<j-1);  \n\t\t\tif(tag==2)p[i].b2|=(1<<j-1);  //\u5f97\u5230\u6bcf\u4e2a\u8865\u4e01\u5305\u7684\u5148\u51b3\u6761\u4ef6\u4e32\n\t\t}\n\t\tfor(int j=1;j<=n;++j){\n\t\t\ttag=gtag();\n\t\t\tif(tag==1)p[i].f2|=(1<<j-1);\n\t\t\tif(tag==2)p[i].f1|=(1<<j-1);  //\u5f97\u5230\u6bcf\u4e2a\u8865\u4e01\u5305\u8fd0\u884c\u4e4b\u540e\u7684\u72b6\u6001\u4e32\n\t\t}\n\t}\n\tfir=(1<<n)-1;   //\u5f97\u5230\u521d\u59cb\u72b6\u6001\n\tspfa();\n\tif(minn[0]==minn[(1<<22)-1])printf(\"0\");  //\u5982\u679c\u6839\u672c\u5230\u8fbe\u4e0d\u4e86\u76ee\u6807\u72b6\u6001\uff0c\u5c31\u662f\u65e0\u89e3\n\t else printf(\"%d\",minn[0]); \n\treturn 0;\n}\n```\n ",
        "postTime": 1579536025,
        "uid": 45176,
        "name": "FCBM71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "\u4eca\u5929\u5237\u4e86\u51e0\u9053\u7f51\u7edc\u6d4124\u9898\u91cc\u7684\uff0c\u4e5f\u597d\u4e45\u6ca1\u5199\u8fc7\u65e5\u5fd7\uff0c\u5148\u5199\u7bc7\u524d\u51e0\u5929\u7801\u7684[P2761 \u8f6f\u4ef6\u8865\u4e01\u95ee\u9898](https://www.luogu.org/problemnew/show/P2761)\u5427\n\n\n------------\n### \u601d\u8def\u5982\u4e0b\uff1a\n\n1. \u4f4d\u538b\uff08\u4f4d\u8fd0\u7b97\u538b\u7f29\uff09\u8868\u793a\u72b6\u6001\uff0c0\u8868\u793a\u6ca1such bug\uff0c\u53cd\u4e4b1\u8868\u793a\u6709\u3002\n2. \u6211\u7684\u8865\u4e01\u53eb**hero**\uff08\u4e0d\u8981\u5410\u69fd\uff09\uff0c\u7ed3\u6784\u4f53\u91cc\u7684\u53d8\u91cf\u610f\u4e49\u5982\u9898\u3002\n3. \u521d\u59cb\u72b6\u6001\uff08111...)\u66b4\u529b\u6c42\u51fa\uff08\u6211\u77e5\u9053\u53ef\u4ee5\u4e0d\u8fd9\u4e48\u66b4\u529b\uff09\uff1a\n```cpp\nFOR(i,1,n) ST=ST|(1<<i);\n```\n4. \u6253\u4e00\u4e2a\u6700\u77ed\u8def\uff08\u6211\u4e0d\u77e5\u9053\u8fd9\u662fSPFA\u8fd8\u662fDJ...)\uff0c\u8fdb\u884c **~~\u5fae\u8c03~~** \uff1a\n\t\n    1\uff09 \u5224\u5b9a\u5f53\u524d\u72b6\u6001\u662f\u5426\u7b26\u5408hero\u613f\u610f\u62ef\u6551\u7684\u7c7b\u578b\uff1a\n    \n    \u82e5now\u4e3a\uff1a  0110011\n    \n    hero\u8981\u6c42\uff1a  0010010\n    \n    \u5e76\u7684\u7ed3\u679c\u662f\uff1a0010010\n       \n    \u90a3\u4e48\uff0c\u610f\u5473\u7740\u4e0d\u7ba1hero\u76840\u4f4d\uff0c\u800c&\u64cd\u4f5c\u5c31\u662f\u53ea\u8981\u6709\u4e00\u4e2a0\u7ed3\u679c\u5c31\u80af\u5b9a\u662f0\u7684\u4e3b\u3002\u7136\u540e\u7a0d\u5fae\u4e3e\u4e2a\u4f8b\u5b50\u5c31\u80fd\u5f97\u5230\u4e24\u79cd\u60c5\u51b5\u4e86\u3002\n\n\t2\uff09\u5f97\u5230\u7ec8\u70b9\u72b6\u6001\uff1a\n    \n    \u82e5now\u4e3a\uff1a 0110011\n    \n    hero\u53ef\u4ee5\u6d88\u706d\u7684\u662f\uff1a 0010010\n    \n    \u5148\u65e0\u5dee\u522b\u653b\u51fb\uff0c\u7ba1\u4f60\u6709\u6ca1\u6709\uff0c\u90fd\u8ba9\u4f60\u6709\uff1a**now|hero[i].f1**\n    \n    \u518d\u628a\u4ed6\u4eec\u7ed9\u706d\u4e86\uff1a ((now|hero[i].f1)**^hero[i].f1**)\n    \n    \u6700\u540e\u96c1\u8fc7\u7559\u58f0\uff1a ((now|hero[i].f1)^hero[i].f1)**|hero[i].f2**\n5. \u597d\u4e86\uff0c\u5c31\u8fd9\u6837\u4e00\u9053~~\u7f51\u7edc\u6d4124\u9898~~\u5c31\u505a\u5b8c\u4e86\u3002\n\n6. \u4f60\u82e5\u95ee\u6211\u4e3a\u4ec0\u4e48\u6ca1\u6709\u7f51\u7edc\u6d41\uff0c\u6211\u4f1a\u544a\u8bc9\u4f60\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/54940.png )\n\n\n------------\n### CODE\n```cpp\n#include<bits/stdc++.h>\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define Maxn 100\n#define Maxm 100\n#define Maxnum  4000000\n\nusing namespace std;\n\ninline int read(){\n    char c=getchar();int x=0,f=1;\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\n\nint n,m; \nint ST;\n\nstruct debug{\n\tint b1;\n\tint b2;\n\tint f1;\n\tint f2;\n\tint T;\n}hero[Maxm+2];\n\npriority_queue < pair<int,int> > q;\nint dist[Maxnum]; int Hash[Maxnum];\nvoid dj(){\n\tmemset(dist,0x3f,sizeof(dist));\n\tdist[ST]=0;\n\tq.push(make_pair(0,ST));\n\twhile(!q.empty()){\n\t\tint now=q.top().second; q.pop();\n\t\tif(Hash[now]==1) continue;\n\t\tHash[now]=1;\n\t\tFOR(i,1,m){\n\t\t\tif( (hero[i].b1&now)==hero[i].b1 && (hero[i].b2&now)==0 ){\n\t\t\t\tint v=((now|hero[i].f1)^hero[i].f1)|hero[i].f2;\n\t\t\t\tif(dist[now]+hero[i].T<dist[v]){\n\t\t\t\t\tdist[v]=dist[now]+hero[i].T;\n\t\t\t\t\tq.push(make_pair(-dist[v],v));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\t\n\tn=read(); m=read();\n\t\n\tFOR(i,1,n)\n\t\tST=ST|(1<<i);\n\t\n\tFOR(i,1,m){\n\t\thero[i].T=read();\n\t\tstring B,F;\n\t\tcin>>B>>F;\n\t\tFOR(j,0,n-1){\n\t\t\tif(B[j]=='+')\n\t\t\t\thero[i].b1=hero[i].b1|(1<<(j+1));\n\t\t\tif(B[j]=='-')\n\t\t\t\thero[i].b2=hero[i].b2|(1<<(j+1));\n\t\t\tif(F[j]=='+')\n\t\t\t\thero[i].f2=hero[i].f2|(1<<(j+1));\n\t\t\tif(F[j]=='-')\n\t\t\t\thero[i].f1=hero[i].f1|(1<<(j+1));\n\t\t}\n\t}\n\tdj();\n\tif(dist[0]==dist[Maxnum-1])\n\t\tcout<<\"0\";\n\telse\n\t\tcout<<dist[0];\n\n\treturn 0;\n}\n\n```\n\n       \n",
        "postTime": 1553441299,
        "uid": 29304,
        "name": "DYI_ZJZGC",
        "ccfLevel": 0,
        "title": "3.24\u65e5\u5fd7"
    },
    {
        "content": "\u6807\u51c6\u6700\u77ed\u8def\u5efa\u6a21\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u653e\u5728\u7f51\u7edc\u6d4124\uff09\n\n\n-------------\n\u4ee5\u5f53\u524d\u8f6f\u4ef6\u7684\u9519\u8bef\u60c5\u51b5\u4e3a\u8282\u70b9\uff0c\u4ee5\u8865\u4e01\u4e3a\u8fb9\u8dd1\u6700\u77ed\u8def\n\n- \u5bf9\u4e8e\u8282\u70b9\u7684\u8868\u793a\uff0c\u6211\u4eec\u8fdb\u884c\u4e8c\u8fdb\u5236\u538b\u7f29\uff0c\u538b\u7f29\u540e\u7684\u6574\u6570\uff0c\u7b2c$i$\u4f4d\u4e3a1\u8868\u793a\u6709\u7b2c$i$\u4e2a\u9519\u8bef\uff0c\u4e3a0\u5219\u6ca1\u6709\u8be5\u9519\u8bef\n - $S=2^n-1$\n - $T=0$  \n- \u5bf9\u4e8e\u8fb9\n - \u8d77\u70b9\u8981\u6ee1\u8db3\u5305\u542b$b1$\u800c\u4e0d\u5305\u542b$b2$,\u5373$b1    \\ \\ and\\ \\ x=b1$\u548c$b2\\ \\ and \\ \\ x=0$\n - \u6b64\u65f6\u7ec8\u70b9\u4e3a$((x\\ \\ or\\ \\ f1)\\ \\ xor\\ \\ f1)\\ \\ or\\ \\ f2$\n- \u6700\u540e\u8dd1\u6700\u77ed\u8def\uff0c$dijkstra$\u548c$SPFA$\u90fd\u53ef\u4ee5  \n- \u6ce8\u610f\u4e00\u4e0b\uff0c\u56e0\u4e3a\u8fb9\u6570\u8fc7\u591a\uff0c\u53ef\u80fd$>10^8$,\u6240\u4ee5\u6211\u4eec\u4e0d\u4fdd\u5b58\u8fb9\uff0c\u800c\u662f\u5728\u677e\u5f1b\u7684\u540c\u65f6\u5728$m$\u4e2a\u8865\u4e01\u4e2d\u66b4\u529b\u679a\u4e3e\u8fdb\u884c\u8f6c\u79fb\uff0c\u8be6\u89c1\u4ee3\u7801\u7684$SPFA$\u90e8\u5206  \n\n\n```cpp\n\n//\u4ee3\u7801\u4f7f\u7528\u4e86\u5927\u91cf\u4f4d\u8fd0\u7b97\uff0c\u4e0d\u6e05\u695a\u53ef\u4ee5\u5728\u7f51\u4e0a\u67e5\u9605\u76f8\u5173\u8d44\u6599\n#include<bits/stdc++.h>\nusing namespace std;\nint pop=0,n,m,s,t;\nint v[4000000],d[4000000];\nqueue<int>q;\nint b1[1000],b2[1000],f1[1000],f2[1000],xx[1000];\nvoid spfa(){\n//\u521d\u59cb\u5316\n    memset(v,0,sizeof(v));\n    memset(d,0x7f,sizeof(d));\n    d[s]=0;while(q.size())q.pop();\n    q.push(s);\n    while(q.size()){\n        int x=q.front(),y;q.pop();\n        v[x]=0;\n        for(int i=1;i<=m;i++){ \n        //\u679a\u4e3e\u8865\u4e01\n            if((b1[i]&x)==b1[i]&&(b2[i]&x)==0){\n            //\u5224\u65ad\u5f53\u524d\u8282\u70b9\u662f\u5426\u53ef\u4ee5\u505a\u4e3a\u8d77\u70b9\n            \ty=((x|f1[i])^f1[i])|f2[i];\n                //\u6c42\u51fa\u7ec8\u70b9\n                if(d[x]+xx[i]<d[y]){\n                  //spfa\u7684\u677e\u5f1b\u64cd\u4f5c\n                \td[y]=d[x]+xx[i];\n                \tif(!v[y]){\n                \t\tv[y]=1;\n                \t\tq.push(y);\n                    }\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\",d[t]==0x7f7f7f7f?0:d[t]);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    t=0;s=(1<<n)-1;\n    char a[1000],b[1000];\n    for(int i=1;i<=m;i++){   \n    //\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8865\u4e01\u5bf9\u5e94\u7684b1,b2,f1,f2\n        scanf(\"%d%s%s\",&xx[i],a,b);\n        b1[i]=b2[i]=f1[i]=f2[i]=0;\n        for(int j=0;j<n;j++){\n            if(a[j]=='+')\n              b1[i]|=(1<<j);\n            if(a[j]=='-')\n              b2[i]|=(1<<j);\n            if(b[j]=='+')\n              f2[i]|=(1<<j);\n            if(b[j]=='-')\n              f1[i]|=(1<<j);\n        }\n    }\n    spfa();\n    return 0;\n}\n\n```",
        "postTime": 1550220532,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "```\n//\u3002\u3002\u3002\u3002\n//\u7adf\u7136\u662f\u4e2a\u72b6\u538bDP\n//....\u8fd8\u662fspfa\u8f6c\u79fb\n//\u592a\u83dc\u4e86\n\n//\u56e0\u4e3a\u6700\u591a\u53ea\u670920\u4e2a\u8865\u4e01\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a1<<20\u7684\u6570\u7ec4\u6765\u8bb0\u5f55\u6bcf\u4e2a\u75c5\u6bd2\u7684\u72b6\u6001\n//\u4e00\u5f00\u59cb\u6709n\u4e2a\u75c5\u6bd2\uff0c\u4e5f\u5c31\u662f\u8d77\u59cb\u70b9\u662f(1<<n)-1,\u76ee\u6807\u70b9\u5c31\u662f0\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u75c5\u6bd2\u90fd\u6ca1\u6709\n//\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e2a\u8865\u4e01\u7684b1,b2,f1,f2,\n//\u5982\u679c\u8fd9\u4e2a\u8865\u4e01\u53ef\u4ee5\u4fee\u590d\uff0c\u90a3\u5c31b1[]\u548c\u5f53\u524d\u72b6\u6001\u6bcf\u4e00\u4f4d|1\u4e4b\u540e\u8fd8\u662fn\uff0c\u548cb2[] & \u4e4b\u540e==0 \n//\u7136\u540e\u4ea7\u751f\u7684\u5f71\u54cd\u5c31\u662ff1[]\u4e2d\u7684\u4f4d=0\uff0cf2[]\u4e2d\u7684\u4f4d=1 \n\n//\u3002\u3002\u3002\u4fee\u590d\u548c\u6dfb\u52a0\u9519\u8bef\u7684\u65f6\u5019\u4e0d\u80fd\u7528\u51cf\u6cd5\u3002\u3002\u3002\n//\u56e0\u4e3a\u4fee\u590d\u7684\u9519\u8bef\u53ef\u80fd\u5f53\u524d\u72b6\u6001\u91cc\u6ca1\u6709\uff0c\u6216\u8005\u6dfb\u52a0\u7684\u9519\u8bef\u5f53\u524d\u72b6\u6001\u5df2\u7ecf\u6709\u4e86\n//\u53ef\u4ee5\u8ba9f1\u548cnow & \u4e00\u4e0b=tmp\uff0c\u627e\u51fa\u54ea\u4e9b\u75c5\u6bd2\u662f\u8fd9\u4e2a\u8865\u4e01\u53ef\u4ee5\u4fee\u590d\u7684\uff0c\u7136\u540e\u518d\u8ba9now^=tmp\uff0c\u8fd9\u6837\u5c31\u628a\u4fee\u590d\u7684\u75c5\u6bd2\u53d8\u6210\u4e860 \n//\u6dfb\u52a0\u75c5\u6bd2\u7684\u8bdd\u76f4\u63a5\u8ba9now|=f2\u5c31\u53ef\u4ee5\u4e86 \n\n//....\u8fd8\u662f\u4e0d\u5bf9\uff0c40\u5206\u4e86\uff0c\u591a\u5f97\u4e8620\u5206\u3002\u3002\u3002\n//judge\u51fd\u6570\u91cc\u8981\u52a0\u62ec\u53f7\u3002\u3002\n//\u4f18\u5148\u7ea7\u771ftnd \n\n \n\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n\nconst int N=21;\nconst int M=105;\n\nint n,m,S;\nint tim[M];\nint b1[M],b2[M],f1[M],f2[M];\nint dis[1<<N];\nbool vis[1<<N];\n\nbool judge(int sta,int id)\n{\n\tif((b1[id]|sta)!=sta)\n\t\treturn false;\n\tif(b2[id]&sta)\n\t\treturn false;\n\treturn true;\n}\n\nvoid spfa()\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tqueue<int> que;\n\tque.push(S),dis[S]=0;\n\tint now,x;\n\twhile(!que.empty())\n\t{\n\t\tnow=que.front(),que.pop();\n\t\tfor(int i=1;i<=m;++i)\n\t\t{\n\t\t\tif(!judge(now,i))\n\t\t\t\tcontinue;\n\t\t\tx=now^(now&f1[i]);\n\t\t\tx|=f2[i];\n\t\t\tif(dis[x]>dis[now]+tim[i])\n\t\t\t{\n\t\t\t\tdis[x]=dis[now]+tim[i];\n\t\t\t\tif(!vis[x])\n\t\t\t\t{\n\t\t\t\t\tque.push(x);\n\t\t\t\t\tvis[x]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvis[now]=0;\n\t}\n}\n\nchar s[M];\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tS=1<<n,--S;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%d\",tim+i);\n\t\tscanf(\"%s\",s);\n\t\tfor(int j=0;j<n;++j)\n\t\t{\n\t\t\tif(s[j]=='+')\t//1<<j\u5c31\u662f\u7b2c\u51e0\u4e2a\u9519\u8bef\uff0c+=\u5c31\u662f\u628a\u90a3\u4f4d\u53d8\u62101 \n\t\t\t\tb1[i]+=1<<j;\n\t\t\telse if(s[j]=='-')\n\t\t\t\tb2[i]+=1<<j;\n\t\t}\n\t\tscanf(\"%s\",s);\n\t\tfor(int j=0;j<n;++j)\n\t\t{\n\t\t\tif(s[j]=='-')\n\t\t\t\tf1[i]+=1<<j;\n\t\t\telse if(s[j]=='+')\n\t\t\t\tf2[i]+=1<<j;\n\t\t}\n\t}\n\tspfa();\n\tif(dis[0]==0x3f3f3f3f)\n\t\tprintf(\"0\");\n\telse\n\t\tprintf(\"%d\",dis[0]);\n\treturn 0;\n}\n```",
        "postTime": 1524899760,
        "uid": 39886,
        "name": "Drifterming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "# \u6d1b\u8c37P2761\u9898\u89e3\n\n## \u9898\u76ee\u5927\u610f\n\n\u6709 n \u4e2a bug\uff0cm \u4e2a\u8865\u4e01\uff0c\u6bcf\u4e2a\u8865\u4e01\u53ef\u4ee5\u7528\u5f53\u4e14\u4ec5\u5f53\u76ee\u524d\u5305\u542b\u6240\u6709\u5728\u96c6\u5408 B1 \u4e2d\u7684 bug \u800c\u4e14\u4e0d\u5305\u542b\u4efb\u610f\u7684\u5728\u96c6\u5408 B2 \u4e2d\u7684 bug\uff0c\u4f7f\u7528\u540e\u53ef\u4ee5\u628a\u96c6\u5408 F1 \u4e2d\u7684 bug \u4fee\u597d\uff0c\u5e76\u65b0\u589e\u96c6\u5408 F2 \u7684 bug\u3002\u6bcf\u4e2a\u8865\u4e01\u6709\u4e2a\u7528\u65f6\uff0c\u6c42\u6700\u77ed\u7684\u4fee\u590d\u6240\u6709 bug \u7684 \u65f6\u95f4\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u770b\u5230**\u5982\u6b64\u5c0f\u7684\u6570\u636e\u8303\u56f4**\u548c bug \u7684\u72b6\u6001\u53ea\u6709**\u4fee\u590d\u548c\u672a\u4fee\u590d**\uff0c\u8fd9\u9898\u4e5d\u6210\u5c31\u662f\u7528\u7684\u72b6\u6001\u538b\u7f29\u4e86\u3002\n\n### first\uff0c\u4ec0\u4e48\u662f\u72b6\u6001\u538b\u7f29\uff1f\n\n\u72b6\u6001\u538b\u7f29\u80fd\u628a\u5f88\u591a\u7ef4\u7684\u72b6\u6001\u538b\u7f29\u6210\u4e00\u4e2a\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n\u6709\u4e00\u4e2a\u4e94\u4e2a\u7ef4\u5ea6\u7684\u6570\u7ec4 f[2][2][2][2][2]\uff0c\u6bcf\u4e00\u4f4d\u90fd\u662f0\u548c1\u3002\u8fd9\u6837\u5904\u7406\u65f6\u4f1a\u5f88\u9ebb\u70e6\uff0c\u9700\u8981\u7ec6\u7ec6\u8003\u8651\u6bcf\u4e00\u7ef4\u72b6\u6001\u3002\u7b49\u4e00\u4e0b\uff0c0\u548c1\uff1f\u8fd9\u4e0d\u5c31\u662f\u4e8c\u8fdb\u5236\u5417\uff1f\u4e8e\u662f\u5c31\u8003\u8651\u628a\u6bcf\u4e00\u7ef4\u90fd\u8f6c\u5316\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4e0a\u7684\u4e00\u4f4d\u3002\u6bd4\u5982 f[1][0][1][0][0] \u8fd9\u4e2a\u72b6\u6001\uff0c\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210 f[2^4+2^2] = f[20]\u3002\u8fd9\u5c31\u662f\u72b6\u6001\u538b\u7f29\u3002\n\n\u6700\u540e\u8fd9\u4e2a\u6570\u7ec4\u4f1a\u88ab\u538b\u7f29\u6210\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4 f[32]\u3002\n\n\u5728\u9898\u76ee\u4e2d\u5c31\u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a bug \u5f53\u505a\u4e00\u4e2a\u72b6\u6001\u5e76\u538b\u7f29\u6210\u4e00\u4e2a\u6570 S\u3002\n\n\u538b\u7f29\u5b8c\u540e\u5982\u4f55\u5904\u7406\u6bcf\u4e2a\u8865\u4e01\u5305\u80fd\u5426\u4f7f\u7528\u548c\u4f7f\u7528\u540e\u7684\u72b6\u6001\u5462\uff1f\n\n- \u5982\u4f55\u5224\u65ad\u80fd\u5426\u4f7f\u7528\n\n1. \u53ea\u8981 B1 \u6709\u7684\uff0c\u90fd\u5fc5\u987b\u6709\uff1a(S&B1)==B1\u3002\n\n1. \u53ea\u8981 B2 \u6709\u7684\uff0c\u90fd\u4e0d\u80fd\u6709\uff1a(S&B2)==0\u3002\n\n(S&B1)==B1&&(S&B2)==0\n\n- \u4f7f\u7528\u540e\u662f\u4ec0\u4e48\u72b6\u6001\n\n1. \u6d88\u706d\u6389 F1 \u6709\u7684 \u8003\u8651\u5230\u65e0\u8bba\u8fd9\u4e2a bug \u8fd8\u5728\u4e0d\u5728\uff0c\u6700\u540e\u90fd\u4e00\u5b9a\u4e0d\u5728\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u628a F1 \u5185\u7684 bug \u52a0\u4e0a\uff1aS|F1\u3002\u518d\u628a F1 \u5185\u7684 bug \u5168\u90e8\u6d88\u706d\uff1a(S|F1)^F1\u3002\n\n1. \u52a0\u4e0a F2 \u6709\u7684\uff1a((S|F1)^F1)F2\u3002\n\n### second\uff0c\u538b\u7f29\u5b8c\u72b6\u6001\u540e\u600e\u4e48\u505a\u5462\uff1f\n\n\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u7528\u8865\u4e01\u5305\u5728 bug \u7684\u72b6\u6001\u4e2d\u8f6c\u5316\u4e86\uff0c\u800c\u4e14\u9898\u76ee\u6c42\u7684\u662f\u6700\u77ed\u65f6\u95f4\u3002\u53ef\u4ee5\u628a bug \u7684\u72b6\u6001\u5f53\u505a\u70b9\uff0c\u8865\u4e01\u5305\u5f53\u505a\u8fb9\uff0c\u8fb9\u6743\u4e3a\u6240\u9700\u65f6\u95f4\uff0c\u8d77\u70b9\u4e3a bug \u5168\u90e8\u5b58\u5728\uff0c\u7ec8\u70b9\u4e3a bug \u5168\u90e8\u6d88\u706d\u3002\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5373\u53ef\u3002~~SPFA\u672a\u6b7b\uff01~~\n\n### third\uff0c\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nstruct node//\u8865\u4e01\u5305 \n{\n\tint t,b1,b2,f1,f2;\n}a[101];\nint dis[1<<20],n,m;\nvoid spfa()\n{\n\tfor(int i=0;i<(1<<n)-1;i++)\n\t{\n\t\tdis[i]=1e9;\n\t}\n\tqueue<int> q;\n\tq.push((1<<n)-1);\n\tbool vis[1<<20]={0};\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tvis[u]=0;\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tint t=a[i].t,b1=a[i].b1,b2=a[i].b2,f1=a[i].f1,f2=a[i].f2;\n\t\t\tif((u&b1)==b1&&(u&b2)==0)//\u80fd\u5426\u4f7f\u7528\u8865\u4e01\u5305 \n\t\t\t{\n\t\t\t\tint v=((u|f1)^f1)|f2;//\u4f7f\u7528\u8865\u4e01\u5305\u540e\u7684\u72b6\u6001 \n\t\t\t\tif(dis[u]+t<dis[v])\n\t\t\t\t{\n\t\t\t\t\tdis[v]=dis[u]+t;\n\t\t\t\t\tif(!vis[v])\n\t\t\t\t\t{\n\t\t\t\t\t\tq.push(v);\n\t\t\t\t\t\tvis[v]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} \nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint t,b1=0,b2=0,f1=0,f2=0;\n\t\tchar b[21],f[21];\n\t\tscanf(\"%d%s%s\",&t,b,f);\n\t\tfor(int j=0;j<n;j++)//\u5bf9B1,B2,F1,F2\u8fdb\u884c\u72b6\u6001\u538b\u7f29 \n\t\t{\n\t\t\tb1*=2;\n\t\t\tb2*=2;\n\t\t\tf1*=2;\n\t\t\tf2*=2;\n\t\t\tif(b[j]=='+')\n\t\t\t{\n\t\t\t\tb1++;\n\t\t\t}\n\t\t\tif(b[j]=='-')\n\t\t\t{\n\t\t\t\tb2++;\n\t\t\t}\n\t\t\tif(f[j]=='-')\n\t\t\t{\n\t\t\t\tf1++;\n\t\t\t}\n\t\t\tif(f[j]=='+')\n\t\t\t{\n\t\t\t\tf2++;\n\t\t\t}\n\t\t}\n\t\ta[i]=(node){t,b1,b2,f1,f2};\n\t}\n\tspfa();//\u8fd9\u9898\u5c45\u7136\u4e0d\u5361SPFA \n\tif(dis[0]==1e9)\n\t{\n\t\tprintf(\"0\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\",dis[0]);\n\t}\n\treturn 0;\n}\n```\n\u5230\u8fd9\u91cc\uff0c\u8fd9\u9053\u9898\u5c31\u88ab AC \u4e86\u3002\n\n\u8c22\u8c22\u89c2\u770b\u3002",
        "postTime": 1595906027,
        "uid": 241520,
        "name": "fanglong",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "# \u4e0d\u8981\u88ab\u6807\u7b7e\u7ed9\u9a97\u4e86\uff01\uff01\n### \u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u9053\u72b6\u538bdp\u7684\u9898\u76ee\n\n\u5f53\u6211\u4eec\u770b\u5230n\u7684\u6570\u636e\u8303\u56f4\u662f1~20\u7684\u65f6\u5019\uff0c\u81ea\u7136\u800c\u7136\u5c31\u60f3\u5230\u4e86\u7528\u4e00\u4e2a20\u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\u6765\u8868\u793a\u67d0\u4e2a\u60c5\u51b5\u7684\u72b6\u6001\n\n\u800c\u6211\u4eec\u518d\u5b9a\u775b\u4e00\u770b\uff0c\u8981\u6c42\u8017\u65f6\u6700\u5c11\u7684\u65b9\u6848\uff0c\u800c\u4e14\u6bcf\u4e00\u4e2a\u8865\u4e01\u7684\u65f6\u95f4\u90fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u80af\u5b9a\uff0c\u8981\u7528\u6700\u77ed\u8def\u8f6c\u79fb\u72b6\u6001\ndij\u548cspfa\u597d\u50cf\u90fd\u662f\u53ef\u4ee5\u7684 ~~\u5982\u679c\u4f60\u60f3\u7528floyd\u7684\u8bdd\u6211\u4e5f\u4e0d\u963b\u6b62\u4f60~~\n\n\u4e0d\u59a8\u75281\u6765\u8868\u793a\u6709bug\uff0c0\u8868\u793a\u6728\u5f97bug\n\n\u90a3\u4e48\u4e00\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u5e94\u8be5\u5168\u90fd\u662fbug\uff0c\u4e5f\u5c31\u662f111....11\uff0c\u800c\u6211\u4eec\u662f\u60f3\u8981\u8ba9\u8fd9\u4e2a\u7a0b\u5e8f\u5b8c\u5168\u6ca1\u6709Bug\uff0c\u4e5f\u5c31\u662f000....00\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u786e\u5b9a\u4e86\u8d77\u70b9\u548c\u7ec8\u70b9\n\n\u6211\u4eec\u5728\u8f93\u5165\u6bcf\u4e00\u4e2a\u8865\u4e01\u7684\u65f6\u5019\uff0c\u90fd\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u79cd\u72b6\u6001\uff08\u4e00\u4e2afor\u5faa\u73af\uff0c\u4ece000...\u5230111...\uff09\u80fd\u5426\u4f7f\u7528\u8fd9\u4e2a\u8865\u4e01\n\n\u5177\u4f53\u65b9\u6cd5\u8be6\u89c1\u4ee3\u7801\n\n\u5982\u679c\u53ef\u4ee5\u7528\u7684\u8bdd\u518d\u7b97\u51fa\u4f7f\u7528\u8865\u4e01\u540e\u7684\u72b6\u6001\uff0c\u8fde\u4e00\u6761\u8fb9\uff0c\u957f\u5ea6\u5373\u4e3a\u8865\u4e01\u7684\u8017\u65f6\n\n\u5728\u8fde\u5b8c\u6240\u6709\u7684\u8fb9\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u7b97\u51fa\u6700\u77ed\u7528\u65f6\u4e86\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<queue>\nusing namespace std;\ninline int R(){//\u5feb\u8bfb \n    int r=0;char c=getchar();\n    while(!isdigit(c)) c=getchar();\n    while(isdigit(c)) r=(r<<1)+(r<<3)+(c^48),c=getchar();\n    return r;\n}\nstruct hhhh{\n    int num,dis;\n    friend bool operator < (hhhh a,hhhh b){\n        return a.dis>b.dis;\n    }\n};\npriority_queue <hhhh> q;\nstruct node{\n    int t,f1,f2,b1,b2;\n}bd[101];//\u5206\u522b\u4ee3\u8868\u7740\u7528\u65f6\uff0c\u9898\u76ee\u4e2d\u7684f1,f2,b1,b2 \nbool visit[1048575];\nint n,m,s,dis[1048575],e;\ninline void dijkstra(int start){//dij\n    hhhh hhh;\n    for(int i=0;i<=s;i++) dis[i]=0x7fffffff;\n    hhh.dis=0;hhh.num=start;\n    q.push(hhh);\n    dis[start]=0;\n    while(!q.empty()){\n        hhhh u=q.top();\n        q.pop();\n        if(visit[u.num]) continue;\n        visit[u.num]=true;\n        for(int i=1;i<=m;i++){\n            if(((u.num^(bd[i].b1))&bd[i].b1) || (u.num&bd[i].b2)) continue;\n            int k=u.num;\n            k=(k^bd[i].f1)&k;\n            k=k|bd[i].f2;\n            if(dis[k]>dis[u.num]+bd[i].t){\n                dis[k]=dis[u.num]+bd[i].t;\n                if(!visit[k]){\n                    hhh.dis=dis[k];\n                    hhh.num=k;\n                    q.push(hhh);\n                }\n            }\n        }\n        visit[u.num]=false;\n    }\n    return ;\n}\nint main(){\n    n=R();m=R();\n    for(int i=0;i<n;i++)\n    s+=(1<<i);\n    for(int i=1;i<=m;i++){\n        bd[i].t=R();\n        scanf(\" \");\n        for(int j=1;j<=n;j++){\n            char c=getchar();\n            bd[i].b1=bd[i].b1*2+(c=='+');\n            bd[i].b2=bd[i].b2*2+(c=='-');\n        }\n        scanf(\" \");\n        for(int j=1;j<=n;j++){\n            char c=getchar();\n            bd[i].f1=bd[i].f1*2+(c=='-');\n            bd[i].f2=bd[i].f2*2+(c=='+');\n        }\n    }\n    dijkstra(s);\n    if(dis[e]==0x7fffffff) printf(\"0\");\n    else printf(\"%d\",dis[e]);\n    return 0;\n}\n```\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5224\u65ad\u80fd\u5426\u4f7f\u7528\u7684\u65f6\u5019\u4e0d\u8981\u4f7f\u7528!\uff0c\u6362\u6210\u5f02\u6216\u5427\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5728\u5f00\u5934\u88651 ~~\u5728\u8fd9\u91cc\u5361\u4e86\u534a\u5929~~\n\n\u6700\u540e\u795d\u613f\u5927\u5bb6 ~~\u8f7b\u677e~~ ac",
        "postTime": 1555134782,
        "uid": 93838,
        "name": "Hongse_Fox",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8\uff1aP2761\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898](https://www.luogu.com.cn/problem/P2761)\n\n\u9898\u610f\u7b80\u5316\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2an\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u521d\u59cb\u72b6\u6001\u4e3a1\u3002\n\n\u5171\u6709m\u79cd\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u7b2ci\u79cd\u64cd\u4f5c\u9700\u8981\u6ee1\u8db3\u5173\u4e8eB1[ i ]\u7684\u5143\u7d20 \u90fd\u4e3a1\uff0c\u5173\u4e8eB2[ i ]\u7684\u5143\u7d20 \u90fd\u4e3a0\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06\u5f53\u524d\u6570\u7ec4\u91cc\u6240\u6709\u7684\u5173\u4e8eF1[ i ]\u7684\u5143\u7d20\u53d8\u4e3a0\uff0cF2[ i ]\u53d8\u4e3a1\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u64cd\u4f5c\u7684\u4ee3\u4ef7\u4e3at[ i ]\u3002\n\n\u8be2\u95ee\u5c06\u521d\u59cb\u72b6\u6001\u5168\u53d8\u62100\u7684\u6700\u5c11\u6b65\u9aa4\u64cd\u4f5c\u6570\u3002\n\n\u901a\u8fc7\u9898\u76ee\u63cf\u8ff0\u4e2d\u7684\u6700\u5c11\u64cd\u4f5c\u6570\uff0c\u548c\u9898\u76ee\u4e2d\u5bf9\u72b6\u6001\u53d8\u5316\u7684\u63cf\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u72b6\u6001\uff08\u521d\u59cb\u72b6\u6001\u9664\u5916\uff09\uff0c\u90fd\u5fc5\u5b9a\u7531\u67d0\u4e00\u79cd\u72b6\u6001\u8f6c\u5316\u800c\u6765\uff0c\u800c\u7531\u4e8e\u9898\u76ee\u7684\u8f6c\u5316\u6761\u4ef6\u5404\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u65e0\u6cd5\u91c7\u7528DP\u7684\u65b9\u7a0b\u6765\u8ba1\u7b97\uff0c\u90a3\u4e48\u8fd8\u6709\u4ec0\u4e48\u53ef\u4ee5\u5feb\u901f\u6c42\u51fa\u72b6\u6001\u8f6c\u5316\u7684\u6700\u5c0f\u4ee3\u4ef7\u7b97\u6cd5\u5417\uff1f\n\n\u6240\u4ee5\u6211\u4eec\u627e\u5230\u4e86\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u72b6\u6001\uff0c\u5c31\u53ef\u4ee5\u5c06\u5176\u5f53\u505a\u4e00\u4e2a\u56fe\u4e2d\u7684\u7ed3\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u64cd\u4f5c\uff0c\u5f53\u505a\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u72b6\u6001\u6570\u5c31\u662f\u7ed3\u70b9\u6570\uff0c\u4e5f\u5c31\u662f2\u00b2\u00ba\u79cd\u72b6\u6001\uff0c\u7531\u4e8e\u6bcf\u79cd\u64cd\u4f5c\u53ef\u4ee5\u6709\u65e0\u6570\u6b21\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ed3\u70b9\uff0c\u90fd\u6709m\u6761\u4ee5\u5176\u5ef6\u4f38\u51fa\u7684\u8fb9\u3002\n\n\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528Dijkstra\u7684\u5806\u4f18\u5316\uff0c\u518d\u7b97\u4e0a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u7ec4\u5143\u7d20\u548c\u8fb9\u6570\u7684\u6a21\u62df\uff0c\u7531\u4e8e\u9700\u8981\u6ee1\u8db3\u9898\u76ee\u4e2d\u7684\u9650\u5236\u6761\u4ef6\uff08\u7b97\u7684\u4e0d\u597d\u8bf7\u89c1\u8c05\uff09\uff0c\u6240\u4ee5\u5c06m\u5ffd\u7565\u6389\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u5927\u7ea6\u662fO\uff08\uff082\u207f\uff09*n*log\uff082\u207f\uff09\uff09=O\uff082\u207f*n\u00b2\uff09\uff0c\u8fd9\u5f88\u660e\u663e\u662f\u4f1a\u8d85\u65f6\u3002\n\n\u7531\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20\u53ea\u67090\u548c1\uff0c\u5e76\u4e14n<=20\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u6bcf\u4e00\u4f4d\u538b\u6210\u4e00\u4e2a\u5341\u8fdb\u5236\u8868\u793a\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662fO\uff082\u207f*n\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,cost[105],b1[105],b2[105],f1[105],f2[105],len,dis[1050005];\nbool vis[1050005];\nstring tempa,tempb;\nstruct node{\n\tint siz,num;\n\tbool operator <(const node&x)const{\n\t\treturn x.num<num;\n\t}\n};\ninline void Dijkstra(){\n\tpriority_queue<node>Q;\n\tQ.push((node){len,0});\n\tdis[len]=0;\n\twhile(!Q.empty()){\n\t\tnode temp=Q.top();\n\t\tQ.pop();\n\t\tint x=temp.siz,tempp=0;\n\t\tif(vis[x])continue;\n\t\tvis[x]=true;\n\t\tfor(register int i=1;i<=m;++i){\n\t\t\tif((x&b1[i])==b1[i]&&!(x&b2[i])){\n\t\t\t\ttempp=(((x|f1[i])^f1[i])|f2[i]);\n\t\t\t\tif(dis[tempp]>dis[x]+cost[i]){\n\t\t\t\t\tdis[tempp]=dis[x]+cost[i];\n\t\t\t\t\tif(!vis[tempp]){\n\t\t\t\t\t\tQ.push((node){tempp,dis[tempp]});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[0]!=dis[1050000])cout<<dis[0]<<endl;\n\telse cout<<0<<endl;\n}\nint main(){\n\tcin>>n>>m;\n\tfor(register int i=1;i<=m;++i){\n\t\tcin>>cost[i]>>tempa>>tempb;\n\t\tfor(register int j=0;j<n;++j){\n\t\t\tif(tempa[j]=='+')b1[i]=b1[i]+(1<<(n-j-1));\n\t\t\telse if(tempa[j]=='-')b2[i]=b2[i]+(1<<(n-j-1));\n\t\t\tif(tempb[j]=='-')f1[i]=f1[i]+(1<<(n-j-1));\n\t\t\telse if(tempb[j]=='+')f2[i]=f2[i]+(1<<(n-j-1));\n\t\t}\n\t}\n\tlen=(1<<n)-1;\n\tmemset(dis,0x3f,sizeof(dis));\n\tDijkstra();\n\treturn 0;\n}\n```\n",
        "postTime": 1577854061,
        "uid": 85514,
        "name": "\u4e07\u4e07\u6ca1\u60f3\u5230",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2761 \u8f6f\u4ef6\u8865\u4e01\u95ee\u9898"
    },
    {
        "content": "\u770b\u4e86\u4e0b\u5927\u90e8\u5206\u5927\u4f6c\u9898\u89e3\u90fd\u662f\u7528\u7684SPFA\n\n\u5176\u5b9e\u53ef\u4ee5\u7528\u4e00\u4e0b\u88f8\u7684\u5e7f\u641c\uff08\u6ce8\u610f\u8981\u7528\u4f18\u5148\u961f\u5217\uff09+\u72b6\u6001\u538b\u7f29\n\n# \u9884\u5907\u77e5\u8bc6\n## \u4f4d\u8fd0\u7b97\n\n\u6309\u4f4d\u4e0e\t&\t\uff1a\u5168\u4e00\u5219\u4e00\uff0c\u5426\u5219\u4e3a\u96f6\n\n\u6309\u4f4d\u6216\t|\t\uff1a\u6709\u4e00\u5219\u4e00\uff0c\u5426\u5219\u4e3a\u96f6\n\n\u6309\u4f4d\u53d6\u53cd\t~\uff1a\t\u662f\u96f6\u5219\u4e00\uff0c\u662f\u4e00\u5219\u96f6\n\n\u6309\u4f4d\u5f02\u6216\t^\t\uff1a\u4e0d\u540c\u5219\u4e00\uff0c\u76f8\u540c\u5219\u96f6\n\n\u79fb\u4f4d\t>>\u548c<<\t\uff1a\u5411\u53f3\u3001\u5411\u5de6\u79fb\u4f4d\n\n\n------------\n## \u5e38\u7528\u8fd0\u7b97\n\n\u96c6\u5408\u53d6\u5e76(Set union)\nA | B\n\n\u96c6\u5408\u53d6\u4ea4(Set intersection)\nA & B\n\n\u96c6\u5408\u76f8\u51cf(Set subtraction)\nA & ~B\n\n\u96c6\u5408\u53d6\u53cd(Set negation)\n^ A\n\n\u7f6e\u4f4d(Set bit)\nA |= 1 << bit//\u51cf\u4e0d\u51cf\u4e00\u770b\u5b9e\u9645\u60c5\u51b5\n\n\u6e05\u4f4d(Clear bit)\nA &= ~(1 << bit)\n\n\u6d4b\u4f4d(Test bit)\n(A & (1 << bit)) != 0 \u6216\u8005 \n(A >> bit & 1) != 0\n\n\n\n------------\n\n## \u5176\u5b83\u8fd0\u7b97\n\u53d6\u6700\u540e\u4e00\u4e2a\u975e0\u4f4d(Extracting every last bit)\n```cpp\nA & -A \u6216\u8005\nA & ~(A-1)\n```\n\n\n\u7edf\u8ba1\u975e0\u4f4d(Counting out the bits)\n```cpp\nFor (; A; A -= A & -A) ++cnt;\n```\n\n\u53d6\u6240\u6709\u5b50\u96c6(All the subsets)\n```cpp\nX = A\nWhile (X) X = (X - 1) & A\n```\n\n\n~~\u8fd9\u4e2a\u9898\u5173\u7cfb\u597d\u590d\u6742\u5440\uff0c\u4e00\u5b9a\u8981\u6253\u6ce8\u91ca\uff0c\u514d\u5f97\u6df7\u6dc6QAQ~~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m;\nchar a;\nint t[100+5],b1[1<<20],b2[1<<20],f1[1<<20],f2[1<<20];//t\u8868\u793a\u65f6\u95f4\uff0cb1,b2,f1,f2\u5982\u9898\nbool visit[1<<20];\nstruct node{\n\tint now,step;//now\u8868\u793a\u5f53\u524d\u72b6\u6001\uff0cstep\u8868\u793a\u7528\u65f6\n    bool operator < (const node &a) const {  \n        return step>a.step;//\u6700\u5c0f\u503c\u4f18\u5148\uff08\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u5728\u4f18\u5148\u5bf9\u5217\u4e2d\u6309\u7167step\uff08\u65f6\u95f4\uff09\u6392\u5e8f\uff09\n    }  \n}start;\n\nvoid BFS()\n{\n\tpriority_queue<node> q;\n\tq.push(start);\n\twhile(!q.empty())\n\t{\n\t\tnode k=q.top();\n\t\tq.pop();\n\t\tif(k.now==0)\n\t\t{\n\t\t\tprintf(\"%d\\n\",k.step);\n\t\t\treturn;\n\t\t}\n\t\tif(visit[k.now]) continue;//\u91cd\u590d\u7684\u72b6\u6001\u6ca1\u6709\u610f\u4e49\n\t\tvisit[k.now]=true;\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tif( (k.now|b1[i])!=k.now || (k.now&~b2[i])!=k.now ) continue;\n\t\t\tnode newn=k;\n\t\t\tnewn.now&=(~f1[i]);\n\t\t\tnewn.now|=f2[i];\n\t\t\tnewn.step+=t[i];//\u5404\u79cd\u82b1\u91cc\u80e1\u54e8\u7684\u4f4d\u8fd0\u7b97\uff0c\u5982\u9898\u610f\uff0c\u597d\u597d\u7406\u89e3\n\t\t\tq.push(newn);\n\t\t}\n\t}\n\tprintf(\"0\\n\");//\u961f\u5217\u7a7a\u4e86\u8fd8\u6ca1\u6709\u7ed3\u679c\u72b6\u6001\uff0c\u90a3\u5c31\u65e0\u89e3\n\treturn;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",t+i);\n\t\tscanf(\" \");\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%c\",&a);\n\t\t\tif(a=='+') b1[i]|=(1<<(j-1));//\u4ec5\u5f53\u8f6f\u4ef6\u5305\u542b B1[i]\u4e2d\u7684\u6240\u6709\u9519\u8bef\n\t\t\telse if(a=='-') b2[i]|=(1<<(j-1));//\u800c\u4e0d\u5305\u542b B2[i]\u4e2d\u7684\u4efb\u4f55\u9519\u8bef\u65f6\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\u8865\u4e01 i\n\t\t}\n\t\tscanf(\" \");\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%c\",&a);\n\t\t\tif(a=='-') f1[i]|=(1<<(j-1));//\u8865\u4e01 i \u5c06\u4fee\u590d\u8f6f\u4ef6\u4e2d\u7684\u67d0\u4e9b\u9519\u8bef F1[i]\n\t\t\telse if(a=='+') f2[i]|=(1<<(j-1));//\u800c\u540c\u65f6\u52a0\u5165\u53e6\u4e00\u4e9b\u9519\u8bef F2[i]\uff08\u5efa\u8bae\u6253\u4e2a\u6ce8\u91ca\uff0c\u514d\u5f97\u628a\u81ea\u5df1\u7ed5\u6655\u4e86\uff09\n\t\t}\n\t}\n\tstart.now=(1<<n)-1;\n\tstart.step=0;\n\tBFS();\n\treturn 0;\n}\n```\n _**********~~\uff08\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01SPFA\u5df2\u6b7b\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff09~~**********_ ",
        "postTime": 1572056864,
        "uid": 224358,
        "name": "\u6e05\u5e73\u4e50",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "##By Bartholomew\n\n----\n\n##\u9898\u610f:\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f6f\u4ef6,\u6709\u7279\u5b9a\u7684\u4f7f\u7528\u65b9\u6cd5,\u7b80\u5355\u6765\u8bf4,\u5c31\u662f\n**\u8f6f\u4ef6\u53ea\u6709\u5fc5\u987b\u6709\u67d0\u4e9b\u6f0f\u6d1e\u4f46\u662f\u6709\u6ca1\u6709\u67d0\u4e00\u4e9b\u6f0f\u6d1e\u7684\u65f6\u5019\u624d\u4f1a\u6709\u7528**\n**\u5728\u4f7f\u7528\u8865\u4e01\u7684\u540c\u65f6,\u4f1a\u6d88\u53bb\u67d0\u4e00\u4e9b\u6f0f\u6d1e,\u4f46\u662f\u540c\u65f6\u4e5f\u4f1a\u5f15\u5165\u67d0\u4e9b\u6f0f\u6d1e**\n**\u4e00\u5f00\u59cb\u6709 n \u4e2a\u6f0f\u6d1e**\n\u8f93\u5165\u7684\u662f $n$ \u548c $m$ ,\u5c31\u662f\u6709$m$\u4e2a\u8865\u4e01(\u6bcf\u4e2a\u8865\u4e01\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528)\n\u6bcf $m$ \u884c\u4f1a\u6709$2$\u4e2a\u5b57\u7b26\u4e32:\n\u7b2c 1 \u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u5982\u679c\u7b2c k \u4e2a\u5b57\u7b26 $b_k$ \u4e3a\u201c+\u201d\uff0c\u5219\u8868\u793a\u7b2c k \u4e2a\u9519\u8bef\u5c5e\u4e8e $B1[i]$\uff0c\u82e5\u4e3a\u201c-\u201d\uff0c\u5219\u8868\u793a\u7b2c k \u4e2a\u9519\u8bef\u5c5e\u4e8e $B21[i]$\uff0c\u82e5\u4e3a\u201c0\u201d\uff0c\u5219\u7b2c $k$\u4e2a\u9519\u8bef\u65e2\u4e0d\u5c5e\u4e8e $B1[i]$\u4e5f\u4e0d\u5c5e\u4e8e $B2[i]$\uff0c\u5373\u8f6f\u4ef6\u4e2d\u662f\u5426\u5305\u542b\u7b2c $k$ \u4e2a\u9519\u8bef\u5e76\u4e0d\u5f71\u54cd\u8865\u4e01 $i$ \u7684\u53ef\u7528\u6027\u3002\n\n\u7b2c 2 \u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u5982\u679c\u7b2c k \u4e2a\u5b57\u7b26 $b_k$\u4e3a\u201c-\u201d\uff0c\u5219\u8868\u793a\u7b2c k \u4e2a\u9519\u8bef\u5c5e\u4e8e $F1[i]$\uff0c\u82e5\u4e3a\u201c+\u201d\uff0c\u5219\u8868\u793a\u7b2c k \u4e2a\u9519\u8bef\u5c5e\u4e8e $F2[i]$\uff0c\u82e5\u4e3a\u201c0\u201d\uff0c\u5219\u7b2c $k$ \u4e2a\u9519\u8bef\u65e2\u4e0d\u5c5e\u4e8e $F1[i]$\u4e5f\u4e0d\u5c5e\u4e8e $F2[i]$\uff0c\u5373\u8f6f\u4ef6\u4e2d\u662f\u5426\u5305\u542b\u7b2c $k$ \u4e2a\u9519\u8bef\u4e0d\u4f1a\u56e0\u4f7f\u7528\u8865\u4e01$i$ \u800c\u6539\u53d8\u3002\n##\u5206\u6790:\n\u5176\u5b9e\u8fd9\u9053\u9898\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48$\u662f\u7f51\u7edc\u6d41 24 \u9898,\u5176\u5b9e\u5c31\u662f\u72b6\u6001\u538b\u7f29DP$\n$\u6211\u4eec\u7528 mark \u8868\u793a01\u5206\u522b\u8868\u793a\u662f\u5426\u8fd8\u6709\u75c5\u6bd2,\u800cdp[mark] \u8868\u793a \u6700\u5c0f\u4ee3\u4ef7!$\n\u90a3\u4e48\u8fd9\u9053\u9898\u597d\u50cf\u6709\u540e\u6548\u6027,\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528$SPFA$\u6765\u8dd1\n\n###\u4f4d\u8fd0\u7b97:\n\u8003\u9a8c\u5927\u5bb6\u7684\u5176\u5b9e\u5c31\u662f\u4f4d\u8fd0\u7b97\u7684\u80fd\u529b:\n\u6211\u4eec\u6709\u4e00\u4e2a \nmask_have[i]:=\u8868\u793a\u5fc5\u987b\u6709\u54ea\u4e00\u4e9b\u75c5\u6bd2\nmask_not[i]:=\u8868\u793a\u5fc5\u987b\u6ca1\u6709\u90a3\u4e9b\u75c5\u6bd2\n\u90a3\u4e48\u6211\u4eec\u5224\u65ad\u53ea\u8981 \n\u8fd9\u6837:\n\n```\n// \"~\" \u5c31\u662f\u53d6\u53cd\u7684\u6807\u8bb0,\u5373\u4e8c\u8fdb\u5236\u7684 0 -> 1 , 1 -> 0\nif((mask_not[i] & (~stand)) != mask_not[i]) continue;\nif((mask_have[i] & stand ) != mask_have[i]) continue;\n```\n\n\n##\u4ee3\u7801:\n\n```\n#pragma GCC optimize(3)\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <iostream>\n#include <queue>\n#define N 25\n#define M 115\n#define INF 0x3f3f3f3f\n#define P pair<int,int>\nusing namespace std;\n\nint n, m, a[M], b[M], c[M], dp[1 << (N - 2)], mask_have[M], mask_not[M];\nint vis[1 << (N - 2)], kill[M], bring[M];\nchar s1[M][N], s2[M][N];\nstd::queue<P> G;\n\ninline void init(int x)\n{\n    for(register int i = n - 1; i >= 0; --i)\n    {\n        switch(s1[x][i])\n        {\n        \tcase '+': mask_have[x] |= 1 << i; break;\n        \tcase '-': mask_not[x] |= 1 << i; break;\n        }\n        switch(s2[x][i])\n        {\n         \tcase '+': bring[x] |= 1 << i; break;\n        \tcase '-': kill[x] |= 1 << i; break;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    memset(b, 0, sizeof b);\n    memset(c, 0, sizeof c);\n    for(register int i = 1; i <= m; ++i)\n    {\n        scanf(\"%d%s%s\", a + i, s1[i], s2[i]);\n        init(i);\n    }\n    memset(dp, INF , sizeof dp);\n    dp[(1 << n) - 1] = 0; vis[(1 << n) - 1] =  1;\n    G.push(P( (1 << n) - 1 , 0)); \n    while( !G.empty() )\n    {\n        P now = G.front(); G.pop();\n        int stand = now.first;\n        vis[stand] = 0;\n        for(register int i = 1; i <= m; ++i)\n        {\n        \tif((mask_not[i] & (~stand)) != mask_not[i]) continue;\n        \tif((mask_have[i] & stand ) != mask_have[i]) continue;\n        \tint to = (stand & (~kill[i])) | bring[i];\n        \tif(dp[to] <= dp[stand] + a[i]) continue;\n        \tdp[to] = dp[stand] + a[i];\n        \tif(!vis[to]) \n        \t{\n        \t\tvis[to] = true;\n        \t\tG.push(P(to , dp[to]));\n        \t} \n        }\n    }\n    printf(\"%d\\n\", dp[0] == INF ? 0 : dp[0]);\n    return 0;\n}\n```",
        "postTime": 1522061168,
        "uid": 50047,
        "name": "Bartholomew",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "### \u3010\u9898\u76ee\u5927\u610f\u3011\n- \u6709n\u4e2a\u6f0f\u6d1e\uff0c\u6709m\u4e2a\u8865\u4e01\uff0c\u6bcf\u4e2a\u8865\u4e01\u6709\u4f7f\u7528\u7684\u8981\u6c42\uff0c\u800c\u4e14\u8fd8\u6709\u4f7f\u7528\u540e\u4f1a\u589e\u52a0\u4e00\u4e9b\u6f0f\u6d1e\u6216\u51cf\u5c11\u4e00\u4e9b\u6f0f\u6d1e\u3002\n- **n<=20**\n\n### \u3010\u89e3\u9898\u601d\u8def\u3011\n- \u770b\u770b\u6570\u636e\u8303\u56f4\u5c31\u77e5\u9053\u672c\u9898\u4e0e\u7f51\u7edc\u6d41\u6ca1\u6709\u592a\u5927\u5173\u7cfb\u3002\u3002\u3002\n- \u4f7f\u7528\u72b6\u6001\u538b\u7f29\uff0c\u628a\u6bcf\u4e2a\u6f0f\u6d1e\u7684\u60c5\u51b5\u538b\u7f29\u6210\u4e8c\u8fdb\u5236\u3002\n- \u8dd1SPFA\uff0c\u6ce8\u610f\u662f\u5426\u7b26\u5408\u4f7f\u7528\u8981\u6c42\uff0c\u7136\u540e\u6c42\u51fa\u6253\u8865\u4e01\u540e\u7684\u72b6\u6001\u3002\u6ce8\u610f\uff1a\n\t1. \u8981\u5224\u65ad\u53bb\u6389\u7684\u6f0f\u6d1e\u662f\u5426\u672c\u6765\u5c31\u4e0d\u5b58\u5728\n    1. \u8981\u5224\u65ad\u589e\u52a0\u7684\u6f0f\u6d1e\u662f\u5426\u672c\u6765\u5c31\u5b58\u5728\n\n### \u3010\u53c2\u8003\u7a0b\u5e8f\u3011\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n\n#define INF 0x3f3f3f3f\n#define st (((1<<n)-1))\nconst int MAX=(1<<20)+10;\nint dis[MAX],t[105];\nint n,m;\nbool vis[MAX],b1[105][25],b2[105][25],f1[105][25],f2[105][25];\nqueue < int > q;\nvoid SPFA()\n{\n\tmemset(dis,INF,sizeof dis);\n\tdis[st]=0;\n\tq.push(st);\n\twhile (!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tvis[u]=false;\n\t\tfor (int i=1;i<=m;i++)\n\t\t{\n\t\t\tint OK=true;\n\t\t\tfor (int j=0;j<n;j++)\n\t\t\t\tif (((u&(1<<j))&&b2[i][j]) || (!(u&(1<<j)))&&b1[i][j])\n\t\t\t\t{\n\t\t\t\t\tOK=false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif (!OK) continue;\n\t\t\tint v=u;\n\t\t\tfor (int j=0;j<n;j++)\n\t\t\t\tif (f1[i][j])\n\t\t\t\t\tv-=v&(1<<j);//\u5224\u65ad\u6f0f\u6d1e\u662f\u5426\u5b58\u5728\n\t\t\t\telse\n\t\t\t\tif (f2[i][j])\n\t\t\t\t\tv|=(1<<j);//\u5224\u65ad\u6f0f\u6d1e\u662f\u5426\u5b58\u5728\n\t\t\tif (dis[u]+t[i]<dis[v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+t[i];\n\t\t\t\tif (!vis[v])\n\t\t\t\t{\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tvis[v]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tchar a[105],b[105];\n\t\tscanf(\"%d%s%s\",&t[i],a,b);\n\t\tfor (int j=0;j<n;j++)\n\t\t{\n\t\t\tif (a[j]=='+')\n\t\t\t\tb1[i][j]=1;\n\t\t\telse\n\t\t\tif (a[j]=='-')\n\t\t\t\tb2[i][j]=1;\n\t\t\t\n\t\t\tif (b[j]=='-')\n\t\t\t\tf1[i][j]=1;\n\t\t\telse\n\t\t\tif (b[j]=='+')\n\t\t\t\tf2[i][j]=1;\n\t\t}\n\t}\n\tSPFA();\n\tprintf(\"%d\",dis[0]==INF?0:dis[0]);\n\treturn 0;\n}\n```",
        "postTime": 1532779541,
        "uid": 12349,
        "name": "FREEH",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "\u8003\u8651N<=15,\u663e\u7136\u53ef\u4ee5\u4e8c\u8fdb\u5236\u50a8\u5b58\u72b6\u6001\uff0c\u628a\u5b83\u4eec\u505a\u6210\u5355\u5143\u56fe\u8dd1\u6700\u77ed\u8def\n\n\u9700\u8981\u6ce8\u610f\u4e09\u79cd\u4f4d\u8fd0\u7b97\u53ca\u5176\u4f18\u5148\u7ea7\n\n\u800c\u4e14\u4e0d\u5fc5\u8981\u6309\u7167\u5148\u5efa\u56fe\uff0c\u518d\u8dd1\u6700\u77ed\u8def\u7684\u4e00\u822c\u60f3\u6cd5\n\n\u53ef\u4ee5\u8fb9\u5efa\u56fe\u8fb9\u677e\u5f1b\n\n\n                    \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m,head,tail;\nstruct node{\n    int yes,no,del,add,cost;\n}patch[101];\nint st[100000],dist[100000];\nbool visit[100000];\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int j=1;j<=m;j++)\n    {\n        char str1[20],str2[20];\n        scanf(\"%d%s%s\",&patch[j].cost,str1,str2);\n        for(int i=0;i<n;i++)\n        {\n            if(str1[i]=='+') patch[j].yes^=(1<<(n-i-1));\n            if(str1[i]=='-') patch[j].no^=(1<<(n-i-1));\n            if(str2[i]=='+') patch[j].add^=(1<<(n-i-1));\n            if(str2[i]=='-') patch[j].del^=(1<<(n-i-1));\n        }\n    }\n    memset(dist,0x7f7f7f7f,sizeof(dist));\n    st[++tail]=(1<<n)-1;\n    visit[(1<<n)-1]=1;\n    dist[st[tail]]=0;\n    while(head<tail)\n    {\n        int now=st[++head];\n        //visit[now]=0;//\u6b64\u5904\u60f3\u4e00\u60f3\u6ce8\u91ca\u7684\u539f\u56e0\n        for(int i=1;i<=m;i++)\n        {\n                //if((now&patch[i].no==0)&&(now&patch[i].yes==patch[i].yes))//\u9b54\u6027\u90e8\u5206 \uff0c\u4e0e\u8f6c\u5b58abc\u8981\u8868\u8fbe\u7684\u610f\u601d\u4e00\u76f4\uff0c\u4f46\u662f\u8fdb\u4e0d\u4e86if\n            int a=now&patch[i].no;\n            int b=now&patch[i].yes;\n            int c=patch[i].yes;    \n            if((a==0)&&(b==c))\n            {\n                st[++tail]=(((now|patch[i].del)^patch[i].del)|patch[i].add);\n                if(visit[st[tail]])\n                {\n                    if(dist[now]+patch[i].cost<dist[st[tail]])\n                    {\n                        dist[st[tail]]=dist[now]+patch[i].cost;\n                    }\n                    else\n                    {\n                        tail--;\n                    }\n                }\n                else\n                {\n                    dist[st[tail]]=dist[now]+patch[i].cost;\n                    visit[st[tail]]=1;\n                }\n            }\n        }\n    }\n    if(dist[0]==0x7f7f7f7f) dist[0]=0;\n    printf(\"%d\\n\",dist[0]);\n    return 0;\n}\n```",
        "postTime": 1502172948,
        "uid": 25110,
        "name": "wenake",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "\u597d\u5427 \u5176\u5b9e\u8fd9\u9053\u9898\u4e0d\u7b97\u7f51\u7edc\u6d41\u5427...\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6570\u636e\u5f88\u5c0f \u4e8e\u662f\u53ef\u4ee5\u72b6\u6001\u538b\u7f29 0\u8868\u793a\u6b63\u786e 1\u8868\u793a\u9519\u8bef\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e8c\u8fdb\u5236\u8fdb\u884c\u5224\u65ad\u548c\u8f6c\u79fb \u7531\u4e8e\u6709\u73af \u6240\u4ee5\u4e0d\u80fd\u7528dp \u7528\u662fspfa\u5373\u53ef\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#define in unsigned int \nusing namespace std;\nint n,m,t,qhead,qtail,fr,ed;\nint queue[5000100],dis[2000100];\nchar s1[300],s2[300];\nbool vis[2000100];\nstruct node{\n    in b1,b2,f1,f2;\n    int t;\n}e[300];\nvoid spfa()\n{\n    memset(vis,false,sizeof(vis));\n    memset(dis,0x7f7f7f,sizeof(dis));\n    qhead=qtail=dis[fr]=0;\n    queue[++qtail]=fr;vis[fr]=true;\n    while(qhead<qtail)\n    {\n        int p=queue[++qhead];vis[p]=false;\n        for(int i=1;i<=m;i++)//\u76f4\u63a5\u5efa\u8fb9\u5b58\u4e0d\u4e0b \u6240\u4ee5\u5c31\u76f4\u63a5\u679a\u4e3e\u6240\u6709\u60c5\u51b5\u4e86 \n        {\n            in b1=e[i].b1;in b2=e[i].b2;\n            in f1=e[i].f1;in f2=e[i].f2;\n            //int x=(p&(~f1))|f2; \n            int x=p^(f1&p)|f2;\n            if(b1==(b1&p) && !(b2&p))\n            if(dis[x]>dis[p]+e[i].t)\n            {\n                dis[x]=dis[p]+e[i].t;\n                if(!vis[x]) queue[++qtail]=x,vis[x]=true;\n            }        \n        }\n    }\n    if(dis[ed]==dis[fr+1]) printf(\"0\");\n    else printf(\"%d\",dis[ed]);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);fr=(1<<n)-1,ed=0;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%s%s\",&t,s1,s2);e[i].t=t;\n        for(int k=0;k<n;k++)\n        {\n            if(s1[k]=='+') e[i].b1=e[i].b1|(1<<k);\n            if(s1[k]=='-') e[i].b2=e[i].b2|(1<<k);\n        }\n        for(int k=0;k<n;k++)\n        {\n            if(s2[k]=='-') e[i].f1=e[i].f1|(1<<k);\n            if(s2[k]=='+') e[i].f2=e[i].f2|(1<<k);\n        }\n    }\n    spfa();\n    return 0;\n}\n```",
        "postTime": 1486704034,
        "uid": 22060,
        "name": "Memorize",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e0d\u96be\u7684w.\u7528\u4e8c\u8fdb\u5236\u4fdd\u5b58\u72b6\u6001\uff0c\u6bcf\u8bfb\u5165\u4e00\u7ec4\u6570\u636e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u72b6\u6001\u5229\u7528\u4f4d\u8fd0\u7b97\u8ba1\u7b97\u51fa\u5b83\u80fd\u5426\u8f6c\u79fb,\u80fd\u8f6c\u79fb\u5230\u4ec0\u4e48\u72b6\u6001\uff0c\u7136\u540e\u5806\u4f18\u5316dijkstra/spfa\u5c31\u53ef\u4ee5\u4e86w.\n\n```cpp\n\n#include <algorithm>  \n#include <vector>  \n#include <queue>  \n#include <iostream>  \n#include <cstring>  \n#include <stack>  \n#define show(x) cout << #x << '=' << x << '\\n';  \nusing namespace std;  \ntypedef int ll;  //no need to use long long\nconst ll INF=0x3f3f3f3f;  \nconst int maxn = (1 << 15) + 10;  \nstruct edge{  \n    int from,to;  \n    int dist;  \n    int next;  \n};  \nstruct heapnode{  \n    ll d,u;  \n    bool operator < (const heapnode rhs) const{  \n        return d>rhs.d;  \n    }  \n};  \nstruct graph{  \n    ll n,m;  \n    edge* e;  \n    ll* first;  \n    ll* d;  \n    ll* p;  \n    bool* done;  \n    void init(ll n){  \n        this->n=n;  \n        m=0;  \n        e=new edge[maxn*100];  \n        first=new ll[maxn];  \n        d=new ll[maxn];  \n        p=new ll[maxn];  \n        done=new bool[maxn];  \n        memset(first,-1,maxn*sizeof(ll));  \n    }  \n    void addedge(ll from,ll to,ll dist){  \n        e[++m]=(edge){from,to,dist,first[from]};  \n        first[from]=m;  \n    }  \n    void dijkstra(ll s){  \n        priority_queue<heapnode> q;  \n        memset(d,0x3f,maxn*sizeof(ll));  \n        d[s]=0;  \n        memset(done,0,maxn*sizeof(bool));  \n        memset(p,0,maxn*sizeof(ll));  \n        q.push((heapnode){0,s});  \n        while(!q.empty()){  \n            ll u=q.top().u;  \n            q.pop();  \n            if (done[u])  \n                continue;  \n            done[u]=true;  \n            //prllf(\"u=%d\\n\",u);  \n            ll i=first[u];  \n            while (i!=-1){  \n                if (d[u]+e[i].dist<d[e[i].to]){  \n                    d[e[i].to]=d[u]+e[i].dist;  \n                    p[e[i].to]=u;  \n                    q.push((heapnode){d[e[i].to],e[i].to});  \n                }  \n                i=e[i].next;  \n            }  \n        }  \n    }  \n    void printstp(ll u,ll v){  \n        dijkstra(u);  \n        //prllf(\"dijkstra ended\\n\");  \n        if (!p[v]){  \n            printf(\"-1\");  \n            return;  \n        }  \n        stack<ll> stp;  \n        ll t=v;  \n        while (t!=0){  \n            stp.push(t);  \n            t=p[t];  \n        }  \n        while (!stp.empty()){  \n            printf(\"%I64d \",stp.top());  \n            stp.pop();  \n        }  \n    }  \n};  \nint main(){  \n    graph* solver=new graph;  \n    int n,m,i,j,k;  \n    cin >> n >> m;  \n    solver->init(1 << n);  \n    for(i=1;i<=m;i++){  \n        char a[16],b[16];  \n        int dis;  \n        cin >> dis;  \n        for(j=0;j<n;j++){  \n            cin >> a[j];  \n        }  \n        for(j=0;j<n;j++){  \n            cin >> b[j];  \n        }  \n        //show(dis);  \n        for(j=0;j<solver->n;j++){  \n            int t=j;  \n            int flag=1;  \n            for(k=0;k<n;k++){  //check if we can apply this fix on this state\n                switch (a[k]){  \n                    case '0':continue;  \n                    case '+':flag=j&(1 << k);break;  \n                    case '-':flag=!(j&(1 << k));break;  \n                }  \n                if(!flag)  \n                    break;  \n            }  \n            if (!flag)  \n                continue;  \n            for(k=0;k<n;k++){  //compute the state after applying\n                switch (b[k]){  \n                    case '0':continue;  \n                    case '+':t=t|(1 << k);break;  \n                    case '-':t=t&(~(1 << k));break;  \n                }  \n            }  \n            if (t==j)  \n                continue;  \n            //show(j);  \n            //show(t);  \n            solver->addedge(j,t,dis);  \n        }  \n    }  \n    solver->dijkstra(solver->n-1);  \n    if(solver->d[0]>=INF)  \n        cout << 0;  \n    else  \n        cout << solver->d[0];  \n}  \n\n```",
        "postTime": 1439049930,
        "uid": 3720,
        "name": "q234rty",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "SPFA+\u4f4d\u8fd0\u7b97\n\n\u5367\u69fd\u6211\u4f4d\u8fd0\u7b97\u8c03\u8bd5\u4e86\u534a\u5929\n\n\u4ee5\u4e0b\u5185\u5bb9\u8bf7\u81ea\u884c\u7406\u89e3\uff0c\u770b\u4e0d\u61c2\u8bf7\u8865\u5e7f\u641c\u3001\u56fe\u8bba\u548c\u57fa\u7840\u4f4d\u8fd0\u7b97\n\n\u9996\u5148\uff0c\n\n```cpp\n   1 1 0 0\n   1 0 1 0\n\nB+ 0 0 1 0  //\u53732  //\u539f1 1 0 1\uff0c\u65e0\u6cd5\u7528\u4e8c\u8fdb\u5236\u5b9e\u73b0\uff0c\u6240\u4ee5\u4f4d\u53cd\nB- 1 0 0 0  //\u53738  //\u539f0 1 1 1\uff0c\u65e0\u6cd5\u7528\u4e8c\u8fdb\u5236\u5b9e\u73b0\uff0c\u6240\u4ee5\u4f4d\u53cd\n\nF+ 1 1 1 0  //\u537314\nF- 0 1 0 0  //\u53734\n```\n\u7136\u540e\uff0c\n\n```cpp\n//\u5e7f\u641c\u6c42\u4f4d\u8fd0\u7b97\n#include<cstdio>\nusing namespace std;\n\nint f[16],q[16]={12};\nchar g[16];\n\nvoid d(int t) {if(f[t]!=12) d(f[t]);putchar(g[t]);}\n\nint main()\n{\n    for(int a=0,b=1,t;a<b;++a)\n    {\n      t=q[a]&10;if(!f[t]) {g[t]='&';f[q[b++]=t]=q[a];}\n      t=q[a]|10;if(!f[t]) {g[t]='|';f[q[b++]=t]=q[a];}\n      t=q[a]^10;if(!f[t]) {g[t]='^';f[q[b++]=t]=q[a];}\n    }\n    d(2);putchar(10);\n    d(8);putchar(10);\n    d(14);putchar(10);\n    d(4);putchar(10);\n    return 0;\n}\n/*\n\u7ed3\u679c\uff1a\n&^  //B+  //and xor\n&   //B-  //and\n|   //F+  //or\n|^  //F-  //or  xor\n*/\n```\n\u6700\u540e\uff0c\n\n```cpp\n#include<cstdio>\nusing namespace std;\n\nint n,m,p[100],bp[100],bq[100],fp[100],fq[100],q[32769],l[32768],r;\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);q[0]=r=(1<<n)-1;l[r]=1;\n    for(int i=0;i<m;++i)\n    {\n      scanf(\"%d \",p+i);bp[i]=bq[i]=r;\n      for(int j=0;j<n;++j)\n      {\n        char ch=getchar();\n        if(ch=='+') bp[i]-=1<<j;else if(ch=='-') bq[i]-=1<<j;\n      }\n      getchar();\n      for(int j=0;j<n;++j)\n      {\n        char ch=getchar();\n        if(ch=='+') fp[i]+=1<<j;else if(ch=='-') fq[i]+=1<<j;\n      }\n    }\n    for(int f1=0,f2=1;f1!=f2;++f1)\n      for(int i=0;i<m;++i)\n        if(((q[f1]&bp[i]^bp[i])|(q[f1]&bq[i]))==r)\n        {\n          q[f2]=(q[f1]|fq[i])^fq[i]|fp[i];\n          if((!l[q[f2]])||((l[q[f1]]+p[i])<l[q[f2]])) {l[q[f2]]=l[q[f1]]+p[i];++f2;}\n        }\n    printf(\"%d\",l[0]?(l[0]-1):0);\n    return 0;\n}\n```",
        "postTime": 1393039643,
        "uid": 173,
        "name": "cxy004",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "\u54ea\u91cc\u662f\u4ec0\u4e48\u7f51\u7edc\u6d41\u554a...\u5206\u660e\u662f\u72b6\u538b\u52a0\u6700\u77ed\u8def\n\n\u770b\u6570\u636e\u8303\u56f4\uff1an <= 20\uff0c\u60f3\u5230\u628a\u6bcf\u79cd\u4fee\u590d\u72b6\u6001\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\uff0c\u4f5c\u4e3a\u6700\u77ed\u8def\u7684\u72b6\u6001\uff0c\u5c06\u8865\u4e01\u4f5c\u4e3a\u8fb9\uff0c\u8dd1\u6700\u77ed\u8def\u5373\u53ef\n\n\u770b\u5230\u4e0b\u9762\u51e0\u7bc7\u9898\u89e3\u5224\u65ad\u5408\u6cd5\u7684\u65b9\u5f0f\u90fd\u662f\u9010\u4f4d\u627e\uff0c\u6211\u89c9\u5f97\u8fd9\u6837\u6709\u70b9\u513f\u9ebb\u70e6\uff0c\u6211\u7684\u610f\u89c1\u5982\u4e0b\uff1a\n\n\u5bf9\u4e8e\u5f53\u524d\u72b6\u6001u\uff0c\u5224\u65adu\u662f\u5426\u5305\u542bb1[i] : u & b1[i] == b1[i]\n\n\t\t\t\tu\u662f\u5426\u4e0d\u5305\u542bb2[i] : u & b2[i] == 0\n                \n                u -> v: v = ((u | f1[i]) ^ f1[i]) | f2[i]\n \n ```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#include<queue>\n#include<vector>\nusing namespace std;\nconst int maxn = 20;\nconst int maxm = 105;\ninline int read()\n{\n  int ans = 0,op = 1;\n  char ch = getchar();\n  while(ch < '0' || ch > '9')\n    {\n      if(ch == '-') op = -1;\n      ch = getchar();\n    }\n  while(ch >= '0' && ch <= '9')\n    {\n      (ans *= 10) += ch - '0';\n      ch = getchar();\n    }\n  return ans * op;\n}\nint n,m;\nint dis[1 << maxn];\nbool vis[1 << maxn];\nint b1[maxm],b2[maxm],f1[maxm],f2[maxm],a[maxm];\nvoid spfa()\n{\n  memset(dis,0x3f,sizeof(dis));\n  queue<int> q;\n  q.push((1 << n) - 1);\n  dis[(1 << n) - 1] = 0;\n  while(q.size())\n     {\n      int u = q.front();\n      q.pop();\n      vis[u] = 0;\n      for(int i = 1;i <= m;i++)\n\t{\n\t  if((b1[i] & u) != b1[i] || b2[i] & u) continue;\n\t  int v = ((u | f1[i]) ^ f1[i]) | f2[i];\n\t  if(dis[v] > dis[u] + a[i])\n\t    {\n\t      dis[v] = dis[u] + a[i];\n\t      if(!vis[v])\n\t\t{\n\t\t  vis[v] = 1;\n\t\t  q.push(v);\n\t\t}\n\t    }\n\t}\n    }\n}\t        \nint main()\n{\n  n = read(),m = read();\n  for(int i = 1;i <= m;i++)\n    {\n      a[i] = read();\n      char b[maxn + 5];\n      scanf(\"%s\",b + 1);\n      for(int j = 1;j <= m;j++)\n\t{\n\t  if(b[j] == '+') b1[i] += 1 << (j - 1);\n\t  if(b[j] == '-') b2[i] += 1 << (j - 1);\n\t}\n      scanf(\"%s\",b + 1);\n      for(int j = 1;j <= m;j++)\n\t{\n\t  if(b[j] == '+') f2[i] += 1 << (j - 1);\n\t  if(b[j] == '-') f1[i] += 1 << (j - 1);\n\t}\n    }\n  spfa();\n  if(dis[0] != 0x3f3f3f3f) printf(\"%d\",dis[0]);\n  else printf(\"0\");\n}\n```",
        "postTime": 1544230759,
        "uid": 86721,
        "name": "L_M_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    },
    {
        "content": "2018\u5e743\u67084\u65e510:26:33\n\u6d1b\u8c37P2761\n1.\u8003\u8651\u5230\u6240\u6709\u7684\u9519\u8bef\u53ea\u6709\u201c\u4fee\u590d\uff0c\u672a\u4fee\u590d\u201d\u4e24\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u53ef\u4ee5\u75280,1\u6807\u8bb0\u538b\u7f29\u72b6\u6001\uff0c\u91c7\u7528\u4f4d\u8fd0\u7b97\u51cf\u5c11\u65f6\u7a7a\u6d6a\u8d39\u3002\n  \u53c8\u8003\u8651\u5230\u6709\u4fee\u590d\u65f6\u95f4\u7684\u5173\u7cfb\uff0c\u5c06\u65f6\u95f4\u62bd\u8c61\u6210\u8fb9\uff0c\u5c06\u72b6\u6001\u62bd\u8c61\u4e3a\u70b9\uff08\u8bbe\u4fee\u590d\u4e3a0\uff0c\u672a\u4fee\u590d\u4e3a1\uff09\u6700\u540e\u4ece(1<<n)-1\u5f00\u59cb\u5bfb\u627e\u52300\u7684\u6700\u77ed\u8def\uff0cSPFA\u4e00\u8fb9\u5efa\u56fe\u4e00\u8fb9\u677e\u5f1b\u5373\u53ef\u3002\n\n2.\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\uff0c\u96be\u70b9\u5728\u4e8e\u5bf9\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u4ee5\u53ca\u4f4d\u8fd0\u7b97\u7ec4\u5408\u5224\u65ad\u7684\u5904\u7406\u3002\n\u9996\u5148\uff0c\u72b6\u6001\u8981\u8868\u793a\uff08\u89c1\u524d\uff09\uff1b\n\u5176\u6b21\uff0c\u8865\u4e01b\uff0cf\u8981\u8868\u793a\u3002\n\u6700\u521d\u8003\u8651\u7528\u4e24\u4e2a\u6570\u6765\u8868\u793ab\uff0cf\uff0c\u53d1\u73b0\u53d7\u201c\u4e0d\u52a8\u9519\u8bef\u201d\u5f71\u54cd\uff0c\u65e0\u6cd5\u8f6c\u79fb\u8fd0\u7b97\u3002\u6545\u91c7\u7528\u56db\u4e2a\u6570\u8bb0\u5f55\uff0cb+\uff0cb-\uff0cf+,f-\u3002\u518d\u63a8\u5012\u51fa\u4f4d\u8fd0\u7b97\u5224\u65ad\u65b9\u5f0f\uff0c\u4ee5\u53ca\u8f6c\u79fb\u65b9\u5f0f\u5373\u53ef\u3002\n\n\u6700\u7ec8\u4f4d\u8fd0\u7b97\u65b9\u5f0f\uff1a\n\t\u5224\u65ad\uff1ab+\uff1a\uff08\u539f\u72b6\u6001~\uff09&bp\u4e3a0\u53ef\u4ee5\u901a\u8fc7\n    \t  b-\uff1a&\u4e3a0\u53ef\u4ee5\u901a\u8fc7\n    \u8f6c\u79fb\uff08\u66f4\u65b0\uff09f+\uff1a|\n    \t\t  f-\uff1a\uff08fj\u53d6\u53cd\uff09&\u539f\u72b6\u6001\n\n\u53e6\uff1ab+b-f+f-\u5b9a\u4e49\u6bd4\u8f83\u7e41\u7410\uff0c\u5229\u7528\u8349\u7a3f\u7eb8\u7801\u4e0a\u6761\u4ef6\u601d\u8def\u6bd4\u8f83\u7701\u4e8b\u3002\n\n\u9644\u4ee3\u7801\uff1a\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint hd=1,tl=0;\nint q[1050000];\nbool vis[1050000];\nint dis[1050000];\nstruct repair{\n    int t;\n    int bp,bj,fp,fj;\n}bu[111];\nint main()\n{\n    char kk[23];\n    char h;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d \",&bu[i].t);\n        for(int j=1;j<=n;j++)\n        {\n            h=getchar();\n            if(h=='+') bu[i].bp+=1<<(n-j);\n            if(h=='-') bu[i].bj+=1<<(n-j);\n        }\n        h=getchar();\n        for(int j=1;j<=n;j++)\n        {\n            h=getchar();\n            if(h=='+') bu[i].fp+=1<<(n-j);\n            if(h=='-') bu[i].fj+=1<<(n-j);\n        }\n    }\n    //for(int i=1;i<=m;i++)\n     //cout<<bu[i].t<<\" \"<<bu[i].bp<<\" \"<<bu[i].bj<<\" \"<<bu[i].fp<<\" \"<<bu[i].fj<<endl;\n    //cout<<endl; \n    q[++tl]=(1<<n)-1;\n    memset(dis,0x3f3f3f3f,sizeof dis);\n    dis[(1<<n)-1]=0;\n    while(hd<=tl)\n    {\n        int zhuang=q[hd];hd++;vis[zhuang]=0;\n        //cout<<zhuang<<\" \"<<dis[zhuang]<<endl;\n        for(int i=1;i<=m;i++)\n        {\n            if(((~zhuang)&bu[i].bp)!=0) continue;\n            if((zhuang&bu[i].bj)!=0) continue;\n            //cout<<\"panduan \"<<i<<\" && \"<<zhuang<<\" == \"<<(zhuang&bu[i].bj)<<endl;\n            int tt=(zhuang|bu[i].fp);\n            tt=(tt&(~bu[i].fj));\n            if(dis[tt]>dis[zhuang]+bu[i].t)\n            {\n                \n                dis[tt]=dis[zhuang]+bu[i].t;\n                //cout<<\"gengxin  \"<<i<<\" -> \"<<tt<<\" \"<<dis[tt]<<endl;\n                if(!vis[tt])\n                {\n                    vis[tt]=1;\n                    q[++tl]=tt;\n                }\t\t\t\n            }\n        }\n    }\n    if(dis[0]==0x3f3f3f3f) printf(\"0\");\n    else printf(\"%d\",dis[0]);\n    return 0;\n}\n```\n\u603b\u7ed3\uff1a\u4f4d\u8fd0\u7b97\u4e00\u5b9a\u8981\u81ea\u5df1\u624b\u52a8\u8003\u8651\uff0c\u8c01\u90fd\u53ef\u4ee5\u770b\u61c2\uff0c\u4f46\u662f\u6709\u65f6\u5019\u4e0d\u5bb9\u6613\u60f3\u3002",
        "postTime": 1520130347,
        "uid": 56672,
        "name": "\u67ab\u6797\u665a",
        "ccfLevel": 9,
        "title": "\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\uff08SPFA+\u4f4d\u8fd0\u7b97\uff09"
    },
    {
        "content": "```delphi\nconst nn=1048576; mm=100000;  \nvar a,b,c,d,t,r:array[0..100] of longint;  \n    i,m,n,tot:longint;  \n    g:array[0..nn] of longint;  \n    p,t1:array[0..mm] of longint;  \n  \n    procedure readin;  \n      var i,j:longint;  \n          ch:char;  \n          st:string;  \n        begin  \n            readln(n,m);  \n            r[0]:=1;  \n            for i:=1 to n do r[i]:=r[i-1]*2;  \n            for i:=1 to m do  \n              begin  \n                read(t[i]);  \n                st:='';  \n                ch:=' ';  \n                while ch=' ' do read(ch);  \n                st:=st+ch;  \n                for j:=1 to n-1 do  \n                  begin  \n                    read(ch);  \n                    st:=st+ch;  \n                  end;  \n                for j:=1 to n do  \n                  begin  \n                    if st[j]='+' then a[i]:=a[i]+r[n-j];  \n                    if st[j]='0' then b[i]:=b[i]+r[n-j];  \n                  end;  \n  \n                st:='';  \n                ch:=' ';  \n                while ch=' ' do read(ch);  \n                st:=st+ch;  \n                for j:=1 to n-1 do  \n                  begin  \n                    read(ch);  \n                    st:=st+ch;  \n                  end;  \n                for j:=1 to n do  \n                 begin  \n                   if st[j]='+' then c[i]:=c[i]+r[n-j];  \n                   if st[j]<>'-' then d[i]:=d[i]+r[n-j];  \n                 end;  \n                readln;  \n              end;  \n        end;  \n  \n    procedure  work;  \n     var i,j,x:longint;  \n         k:integer;  \n  \n     begin  \n       x:=r[n]-1; p[0]:=x;  \n       i:=0; j:=0;  \n         while i<=j do  \n           begin  \n             for k:=1 to m do  \n             if ((a[k] xor p[i]) and b[k])=(a[k] xor p[i])  then  \n               begin  \n                 x:=(p[i] or c[k]) and d[k];  \n                 if (g[x]=0) or (g[x]>t[k]+t1[i]) then  \n                   begin  \n                     inc(j);  \n                     p[j]:=x;  \n                     g[x]:=t[k]+t1[i];  \n                     t1[j]:=g[x];  \n                   end  \n               end;  \n             inc(i);  \n           end;  \n     end;  \n  \n    procedure writein;  \n      begin  \n        if g[0]<>0 then writeln(g[0]) else writeln(0);  \n  \n      end;  \n  \n    begin  \n      readin;  \n      work;  \n      writein;  \n    end. \n```",
        "postTime": 1380952809,
        "uid": 1056,
        "name": "\u82f1\u660e\u795e\u6b66\u7684\u718a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2761 \u3010\u8f6f\u4ef6\u8865\u4e01\u95ee\u9898\u3011"
    }
]