[
    {
        "content": "~~dls\u51fa\u7684\u795e\u9898~~\n\n\u8003\u8651\u683c\u5b50\u4e2d\u586b\u6570\u5bf9\u9650\u5236\u6761\u4ef6\u7684\u5f71\u54cd\u3002\n\n\u6bcf\u4e2a\u683c\u5b50\u586b\u6570\u53ea\u4f1a\u5bf91\u884c1\u5217\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u6240\u4ee5\u628a\u884c\u9650\u5236\u3001\u5217\u9650\u5236\u5206\u522b\u4f5c\u4e3a\u70b9\uff0c\u683c\u5b50\u4e3a\u8fb9\uff0c\u5c31\u6709\u4e86\u4e00\u5f20\u4e8c\u5206\u56fe\u3002\n\n\u6211\u4eec\u9700\u8981\u9650\u5b9a\u6743\u503c\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u6070\u7b49\u4e8e\u5b83\u6240\u6709\u8fb9\u7684\u8fb9\u6743\u7684\u5f02\u6216\u548c\u3002\n\n\u8003\u8651\u6c42\u51fa\u4e00\u68f5\u751f\u6210\u6811\uff0c\u5269\u4e0b\u7684\u8fb9\u5148\u8bbe\u5176\u5168\u4e3a0\u3002\n\n\u663e\u7136\uff0c\u6bcf\u6761\u8fb9\u7684\u6743\u53ef\u4ee5\u4e00\u904ddfs\u63a8\u51fa\u6765\u3002\u518d\u5224\u65ad\u4e0b\u5408\u6cd5\u6027\u3001\u6709\u65e0\u76f8\u540c\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u975e\u6811\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u968f\u673a\u7ed9\u5b9a\u4e00\u4e2a\u6743\u503c\uff0c\u7136\u540e\u4fee\u6539\u4e00\u4e0b\u70b9\u6743\uff0c\u518ddfs\u5373\u53ef\uff08~~\u968f\u673a\u51fa\u6765\u5982\u679c\u76f8\u540c\u7684\u8bdd\u7a9d\u4e5f\u6ca1\u529e\u6cd5\u4e86QAQ~~\uff09\u3002\n\n\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\uff1a\u586b\u7684\u683c\u5b50\u53ef\u80fd\u6ca1\u6709\u884c\u9650\u5236\u6216\u6ca1\u6709\u5217\u9650\u5236\u3002\n\n\u90a3\u5148\u968f\u673a\u7ed9\u4e00\u4e2a\u6743\u503c\uff0c\u7136\u540e\u518d\u8dd1\u3002\u6700\u540e\u5982\u679c\u7b54\u6848\u4e0d\u5408\u6cd5\uff0c\u53ef\u4ee5\u4fee\u6539\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u9650\u5236\u7684\u683c\u5b50\u586b\u7684\u6570\u6765\u4f7f\u7b54\u6848\u5408\u6cd5\u3002\n\n\u4ee3\u7801\u5de8\u4e11\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(Tn^3)$\uff0c\u53ef\u4ee5\u5199\u5f97\u66f4\u4f18\u7684QAQ\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<utility>\n#include<unordered_set>\n#include<cstring>\n#define N 500\n#define LoveLive unsigned long long\nconst LoveLive lim=(1uLL<<60)-1;\nstruct istream{\n\ttemplate<typename T>\n\t\tinline istream&operator>>(T&d){\n\t\t\tstatic int c;\n\t\t\twhile(!isdigit(c=getchar()));\n\t\t\tfor(d=0;isdigit(c);c=getchar())\n\t\t\t\td=(d<<3)+(d<<1)+(c^'0');\n\t\t\treturn*this;\n\t\t}\n}cin;\nint T_,n,m,kind[N][N];\nint cc,cnt,fa[N*N];\nint g[N][N];\nLoveLive dis[N*N],r[N*N],dot[N*N],V[N*N];\nstd::pair<int,int>pr[N][N];\nint find(int x){return x==fa[x]?x:fa[x]=find(fa[x]);}\nstruct edge{\n\tint u,v;\n\tbool b;\n}e[N*N];\nstruct random{\n\tLoveLive seed;\n\tinline void srand(LoveLive s){\n\t\tseed=s;\n\t}\n\tinline LoveLive operator()(){return(((seed*=37)+=7)*=19260817)^=31;}\n}Rand;\n#define rand Rand\nstruct Tree{\n\tstruct EDGE{\n\t\tint to,nxt,id;\n\t}e[N*N<<2];\n\tint cnt,head[N*N<<1];\n\tinline void init(){\n\t\tmemset(head,0,sizeof head);\n\t\tcnt=0;\n\t}\n\tinline void addedge(int u,int v,int id){\n\t\te[++cnt]=(EDGE){v,head[u],id};\n\t\thead[u]=cnt;\n\t\te[++cnt]=(EDGE){u,head[v],id};\n\t\thead[v]=cnt;\n\t}\n\tvoid dfs(int now,int pre){\n\t\tfor(int i=head[now];i;i=e[i].nxt)\n\t\tif(e[i].to!=pre){\n\t\t\tdfs(e[i].to,now);\n\t\t\tdis[e[i].id]=r[e[i].to]^dot[e[i].to];\n\t\t\tdot[now]^=dis[e[i].id];\n\t\t}\n\t}\n}T;\nint main(){\n\trand.srand(79877863023177851LL);\n\tfor(cin>>T_;T_--;){\n\t\tcin>>n>>m;\n\t\tmemset(kind,0,sizeof kind);\n\t\tmemset(g,0,sizeof g);\n\t\tmemset(dot,0,sizeof dot);\n\t\tmemset(dis,0,sizeof dis);\n\t\tT.init();\n\t\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\tcin>>kind[i][j];\n\t\tcc=0;\n\t\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tpr[i][j]=std::make_pair(0,0);\n\t\t\tif(kind[i][j]==1||kind[i][j]==3)cin>>r[pr[i][j].first=++cc];\n\t\t\tif(kind[i][j]==2||kind[i][j]==3)cin>>r[pr[i][j].second=++cc];\n\t\t}\n\t\tcnt=0;\n\t\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\tif(kind[i][j]==4){\n\t\t\tif(pr[i-1][j].first&&!pr[i][j].first)pr[i][j].first=pr[i-1][j].first;\n\t\t\tif(pr[i][j-1].second&&!pr[i][j].second)pr[i][j].second=pr[i][j-1].second;\n\t\t}\n\t\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\tif(kind[i][j]==4){\n\t\t\te[g[i][j]=++cnt]=(edge){pr[i][j].first,pr[i][j].second,0};\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tfor(int j=1;j<=m;++j)\n\t\t\tif(kind[i][j]==4){\n\t\t\t\tif(pr[i][j].first==0||pr[i][j].second==0){\n\t\t\t\t\te[g[i][j]].b=1;\n\t\t\t\t\tdis[g[i][j]]=rand()%lim+1;\n\t\t\t\t}\n\t\t\t\tif(!pr[i][j].first&&pr[i][j].second){\n\t\t\t\t\tdot[pr[i][j].second]^=dis[g[i][j]];\n\t\t\t\t}else\n\t\t\t\tif(pr[i][j].first&&!pr[i][j].second){\n\t\t\t\t\tdot[pr[i][j].first]^=dis[g[i][j]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=cc;++i)fa[i]=i;\n\t\tfor(int i=1;i<=cnt;++i)\n\t\tif(e[i].u&&e[i].v&&find(e[i].u)!=find(e[i].v)){\n\t\t\tT.addedge(e[i].u,e[i].v,i);\n\t\t\tfa[find(e[i].v)]=e[i].u;\n\t\t\te[i].b=1;\n\t\t}\n\t\tfor(int i=1;i<=cnt;++i)if(!e[i].b){\n\t\t\tdis[i]=rand()%lim+1;\n\t\t\tdot[e[i].u]^=dis[i];\n\t\t\tdot[e[i].v]^=dis[i];\n\t\t}\n\t\tT.dfs(1,1);\n\t\tbool ok=1;\n\t\tmemset(V,0,sizeof V);\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tfor(int j=1;j<=m;++j)\n\t\t\tif(kind[i][j]==4){\n\t\t\t\tif(pr[i][j].first)V[pr[i][j].first]^=dis[g[i][j]];\n\t\t\t\tif(pr[i][j].second)V[pr[i][j].second]^=dis[g[i][j]];\n\t\t\t}\n\t\t}\n\t\tfor(int x=1;x<=cc&&ok;++x)\n\t\tif(V[x]!=r[x]){\n\t\t\tbool yes=0;\n\t\t\tfor(int i=1;i<=n&&!yes;++i){\n\t\t\t\tfor(int j=1;j<=m&&!yes;++j)\n\t\t\t\tif(kind[i][j]==4)\n\t\t\t\tif(pr[i][j].first==x&&!pr[i][j].second||pr[i][j].second==x&&!pr[i][j].first){\n\t\t\t\t\tdis[g[i][j]]^=V[x]^r[x];\n\t\t\t\t\tyes=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tok&=yes;\n\t\t}\n\t\tstatic std::unordered_set<LoveLive>st;\n\t\tst.clear();\n\t\tfor(int i=1;i<=cnt&&ok;++i)\n\t\tif(!dis[i]||st.count(dis[i]))ok=0;else st.insert(dis[i]);\n\t\tif(ok){\n\t\t\tfor(int i=1;i<=n;++i){\n\t\t\t\tfor(int j=1;j<=m;++j)if(g[i][j])printf(\"%llu \",dis[g[i][j]]);\n\t\t\t\tputchar('\\n');\n\t\t\t}\n\t\t}else puts(\"-1\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1542443511,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4487 \u3010[BJWC2018]Cross sum\u3011"
    }
]