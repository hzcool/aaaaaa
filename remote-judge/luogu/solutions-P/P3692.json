[
    {
        "content": "\u5f00\u59cb\u5199\u9898\u89e3\u5c31\u505c\u4e0d\u4e0b\u6765\u4e86orz\n\n\u8fd9\u662f\u672c\u849f\u84bb\u7684\u7b2c\u5341\u4e8c\u7bc7\u9898\u89e3\uff0c\u4f9d\u65e7\u662f\u849f\u84bb\u7684\u5e03\u661f\u7684\u753b\u98ceqwq.dalao\u53ef\u4ee5\u81ea\u884c\u8df3\u8fc7\u6211\u5570\u5570\u55e6\u55e6\u7684\u5206\u6790.\n\n---\n\u770b\u5230\u9898\u9762~~\uff08\u6807\u7b7e\uff09~~\u7684\u7b2c\u4e00\u773c\uff0c\u6211\u5c31\u77e5\u9053\uff0c\u8fd9\u662f\u4e00\u9053\u6a21\u62df\u9898\uff0c\u6240\u4ee5\u672c\u9898\u6700\u6700\u6700\u57fa\u7840\u7684\u601d\u8def\u5728\u4e8e\uff0c\u5c06\u9898\u76ee\u6240\u6709\u63cf\u8ff0\u7684\u64cd\u4f5c\u76f4\u63a5\u6a21\u62df\u51fa\u6765\u3002\n\n\u56e0\u4e3a\u8fd9\u9053\u9898\u76ee\u5f88\u660e\u663e\u53ef\u4ee5\u770b\u5f97\u51fa\u6765\u662f\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\u7684\u6a21\u62df\uff0c\u5206\u522b\u662f\u5224\u65ad\u8003\u53f7\uff0c\u5224\u65ad\u5377\u5b50\uff0c\u4ee5\u53ca\u6700\u540e\u7684\u8ba1\u7b97\u5f97\u5206\uff0c\u6240\u4ee5\u6211\u7684\u60f3\u6cd5\u662f**\u5229\u7528\u51fd\u6570\u8fdb\u884c\u5206\u5757\u7684\u5904\u7406**\uff0c\u8fd9\u6837\u5b50\u4ee3\u7801\u53ef\u8bfb\u6027\u4f1a\u66f4\u5f3a\uff0c\u540c\u65f6\u8c03\u8bd5\u8d77\u6765\u4e5f\u4f1a\u66f4\u52a0\u7684\u65b9\u4fbf\u3002\n\n#### Step1\uff1a\u6a21\u62df\u5224\u65ad\u8003\u53f7\n\u56e0\u4e3a\u6240\u6709\u8003\u53f7\u8bfb\u5165\u65f6**\u6ca1\u6709\u7a7a\u683c**\uff0c\u540c\u65f6**\u8003\u53f7\u7684\u4f4d\u6570\u5df2\u77e5\u4e3a16\u4f4d**\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5229\u7528\u5faa\u73af\u8fdb\u884c\u8bfb\u5165\uff0c\u5728\u8bfb\u5165\u7684\u540c\u65f6\u5728\u7ebf\u8fdb\u884c\u8003\u53f72\u8fdb\u5236\u4e0e10\u8fdb\u5236\u7684\u8f6c\u6362\uff0c\u5177\u4f53\u7684\u8f6c\u6362\u5f0f\u5b50\u662f\u5f53\u7b2ci\u4f4d\u4e3a1\u7684\u65f6\u5019**id+=pow(2,16-i);**\n\nps\uff1a\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e0d\u80fd\u4f7f\u7528\u6574\u578b\u8bfb\u5165\uff0c\u6bcf\u6b21\u8bfb\u5165\u7684\u662f\u4e00\u4e2achar\u5b57\u7b26\u3002\u6bcf\u4e00\u6b21\u5728\u8bfb\u5165\u8fd9\u4e2a\u8003\u53f7\u4e4b\u524d\u9700\u8981\u5c06id\u521d\u59cb\u5316\u4e3a0\uff01\uff01\uff01\uff08\u6211\u56e0\u4e3a\u8fd9\u4e2a\u8fde\u6837\u4f8b\u90fd\u6ca1\u6709\u8fc7orz\uff09\n\n\u6838\u5fc3\u8f6c\u6362\u4ee3\u7801\u5b9e\u73b0\uff1a(c\u662f\u4e00\u4e2a\u5b57\u7b26)\n```cpp\n\tfor(int i = 1;i<=16;i++){\n\t\tcin >> c;\n\t\tif(c-'0' == 1) id += pow(2,16-i);\n\t}\n```\n\n\u7136\u540e\u5c31\u5224\u65ad\u4e00\u4e0bid\u662f\u4e0d\u662f\u5728\u5408\u6cd5\u8303\u56f4\u4e4b\u5185\u5c31ok\u4e86\n\n#### Step2\uff1a\u6a21\u62df\u5224\u65ad\u8bd5\u5377\n\u8fd9\u4e00\u6b65\u7684\u6a21\u62df\u5c31\u662f\u6bd4\u8f83\u8f7b\u677e\u6109\u5feb\u4e86\uff0c\u6839\u636e\u4e0a\u4e00\u6b65\u8bfb\u5165\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u5224\u65ad\u662fA\u5377\u8fd8\u662fB\u5377\uff0c\u7528\u5b57\u7b26\u4e32\u8bfb\u5165\u7136\u540e\u76f4\u63a5\u628a\u4e24\u79cd\u60c5\u51b5\u5217\u51fa\u6765\u5224\u65ad\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6838\u5fc3\u5224\u65ad\u4ee3\u7801\u5b9e\u73b0\uff1a\uff08qwq\u662f\u6307\u8bfb\u5165\u7684\u586b\u6d82\u5b57\u7b26\uff0cg\u6307\u8003\u53f7\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff09\n```cpp\n\tif((g == '1'&&qwq == \"01\")||(g == '0'&&qwq == \"10\")) printf(\"Type Correct\\n\");\n\telse printf(\"Type Incorrect\\n\");\n```\n\n#### Step3\uff1a\u6a21\u62df\u6279\u6539\u8bd5\u5377\n\u8fd9\u4e2a\u9898\u76ee\u4e2d\u6700\u4e3a\u590d\u6742\u7684\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u6a21\u62df\uff0c\u6709\u4ee5\u4e0b\u51e0\u4e2a\u70b9\u503c\u5f97\u601d\u8003\uff1a\n\n- \u5982\u4f55\u50a8\u5b58\u6807\u51c6\u7b54\u6848\n- \u5982\u4f55\u5224\u65ad\u8bfb\u5165\u7684\u586b\u6d82\u662f\u5426\u662f\u6807\u51c6\u7b54\u6848\n- \u5982\u4f55\u8ba1\u7b97\u5206\u6570\n\n\u4e0b\u9762\u4e00\u4e2a\u4e00\u4e2a\u6765\u4e3a\u5927\u5bb6\u8bb2\u89e3\u3002\n\n\u7b2c\u4e00\u4e2a\u662f\u6807\u51c6\u7b54\u6848\u7684\u5b58\u50a8\u3002\u56e0\u4e3a\u6807\u51c6\u7b54\u6848\u5728\u8fdb\u884c\u8bfb\u5165\u65f6\u8bfb\u5165\u7684\u662f\u5b57\u7b26\u800c\u4e0d\u662f\u586b\u6d82\u768401\u4e32\uff0c\u4e3a\u4e86\u540e\u9762\u5224\u65ad\u65b9\u4fbf\u6211\u5728\u8bfb\u5165\u5b83\u4eec\u65f6\u5c31\u5c06\u5b83\u4eec**\u8f6c\u5316\u4e3a01\u4e32\u5b58\u5165\u4e00\u4e2astring\u4e2d**\uff0c\u5c31\u50cf\u8fd9\u6837\uff1a\n```cpp\n\tif(w[i] == 'A') s[i+1] = A;\n\telse if(w[i] == 'B') s[i+1] = B;\n\telse if(w[i] == 'C') s[i+1] = C;\n\telse s[i+1] = D;\n```\n\u5f53\u7136ABCD\u56db\u4e2a\u662f\u63d0\u524d\u8f6c\u5316\u597d\u7684\u56db\u4e2astring\n\n\u63a5\u4e0b\u6765\u662f\u5bf9\u8bfb\u5165\u7684\u5224\u65ad\u4ee5\u53ca\u5206\u6570\u8ba1\u7b97\uff0c\u540c\u6837\u662f\u76f4\u63a5\u5229\u7528string\u8bfb\u5165\uff0c\u7136\u540e\u5224\u65ad\u5b83\u548c\u5bf9\u5e94\u9898\u76ee\u6807\u51c6\u7b54\u6848\u7684\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\u76f4\u63a5\u51cf\u53bb\u672c\u9898\u7684\u5206\u503c\uff0c\u5c31\u50cf\u8fd9\u6837\uff1a\n```cpp\n\tfor(int i = 1;i<=n;i++){\n\t\tcin >> qwq;\n\t\tif(qwq != s[i]) markk -= point;\n\t}\n```\n\n\u6700\u540e\u76f4\u63a5\u8f93\u51fa\u5206\u503c\u5c31\u53ef\u4ee5\u4e86\n\n---\n\u4ee5\u4e0a\u5c31\u662f\u5bf9\u4e8e\u672c\u9898\u7b97\u6cd5\u601d\u8def\u7684\u4e00\u4e2a\u8bb2\u89e3\u3002\n### BUT\n\u672c\u9898\u6700\u6700\u6700\u5927\u7684\u5751\u70b9\u4e0d\u662f\u7b97\u6cd5\uff0c\u800c\u662fwindows\u548clinux\u7684\u4e00\u4e9b\u7b26\u53f7\uff08\u6bd4\u5982\u6362\u884c\u7b26\uff0cscanf\u8bfb\u5165\u683c\u5f0f\u4e4b\u7c7b\uff09\u7684\u4e0d\u517c\u5bb9\uff0c\u6211\u5728\u672c\u5730\u6210\u529f\u7684\u8fc7\u4e86\u7092\u9e21\u591a\u7684\u6837\u4f8b\uff0c\u4e0b\u8f7d\u7684\u6570\u636e\u4e5f\u5b8c\u7f8e\u7684\u901a\u8fc7\uff0c\u4f46\u662f\u4f9d\u65e7\u4e0d\u505c\u7684WA~~\uff08\u72060\uff09~~\n\n\u6709\u8bb0\u5f55\u622a\u56fe\u4e3a\u8bc1\uff1a\n![orz](https://cdn.luogu.com.cn/upload/pic/32295.png)\n\u6700\u540e\u6211\u628a**\u6240\u6709\u7684cout << endl\u5168\u90e8\u90fd\u6362\u6210\u4e86\\n\uff0c\u540c\u65f6\u5c06\u6240\u6709\u7684scanf\u5168\u90e8\u90fd\u6362\u6210\u4e86cin\uff0c\u53bb\u6389\u4e86\u6240\u6709\u7684gets**\uff0c\u6211\u7ec8\u4e8e\u6210\u529f\u4e86\u2026\u2026\n\n\u4e0b\u9762\u8d34\u4e0a\u4ee3\u7801\uff0c\u4e0a\u9762\u6709\u4ee3\u7801\u8bb2\u89e3\u4e0d\u591f\u8be6\u7ec6\u7684\u8bf7\u53c2\u8003\u4ee3\u7801\u6ce8\u91ca\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t,n;\nchar w[55];//\u6807\u51c6\u7b54\u6848\u5b57\u7b26\u5b58\u50a8\nstring s[55];//\u6807\u51c6\u7b54\u6848\u8f6c\u6362\u540e\u5b57\u7b26\u4e32\u5b58\u50a8\nstring A = \"1000\";\nstring B = \"0100\";\nstring C = \"0010\";\nstring D = \"0001\";//\u56db\u4e2a\u63d0\u524d\u8f6c\u6362\u597d\u7684\u586b\u6d82\u5b57\u7b26\u4e32\nbool flg = true;//flg\u662f\u4e00\u4e2a\u6807\u8bb0\uff0c\u7528\u6765\u6307\u660e\u8fd9\u4e2a\u4eba\u662f\u5426\u9700\u8981\u7ee7\u7eed\u5904\u7406\u4e0b\u9762\u7684\u8bd5\u5377\nchar c;\nint id;\nstring qwq;\ndouble markk,point;//\u5206\u6570\uff0c\u4ee5\u53ca\u6bcf\u4e00\u9898\u7684\u5206\u503c\nvoid typ(){\n\tid = 0;//\u521d\u59cb\u5316id\uff01\u8fd9\u4e2a\u8d85\u91cd\u8981\u7684\n\tfor(int i = 1;i<=16;i++){\n\t\tcin >> c;\n\t\tif(c-'0' == 1) id += pow(2,16-i);\n\t}\n\tif(id >= 1&&id<=10000) printf(\"ID: %d\\n\",id);\n\telse {\n\t\tprintf(\"Wrong ID\\n\");\n\t\tflg = false;//\u5982\u679c\u8fd9\u4e2a\u8003\u53f7\u4e0d\u5408\u6cd5\uff0c\u6807\u8bb0\u4e00\u4e0b\n\t}\n\treturn;\n}\nvoid check(char g){\n\tcin >> qwq;\n\tif(flg == false) return;\n\telse {\n\t\tif((g == '1'&&qwq == \"01\")||(g == '0'&&qwq == \"10\")) printf(\"Type Correct\\n\");\n\t\telse printf(\"Type Incorrect\\n\");\n\t}\n\treturn;\n}\nvoid pas(){\n\tmarkk = 100.00;//\u521d\u59cb\u5316\u6bcf\u4e00\u4e2a\u4eba\u7684\u5206\u6570\n\tfor(int i = 1;i<=n;i++){\n\t\tcin >> qwq;\n\t\tif(qwq != s[i]) markk -= point;\n\t}\n\tif(flg == false)return;\n\tprintf(\"%.1lf\\n\",markk);//\u8f93\u51fa\u683c\u5f0f\u8981\u6ce8\u610f\u554a\n}\nint main(){\n\tstd::ios::sync_with_stdio(false);//\u8ba9cin\u548cscanf\u4e00\u6837\u5feb\u7684\u795e\u5668~\n\tcin >> t >> n;\n\tcin >> w;\n\tfor(int i = 0;i<n;i++){\n\t\tif(w[i] == 'A') s[i+1] = A;\n\t\telse if(w[i] == 'B') s[i+1] = B;\n\t\telse if(w[i] == 'C') s[i+1] = C;\n\t\telse s[i+1] = D;\n\t}\n\tpoint = 100.00/n;//\u6c42\u6bcf\u9898\u5206\u503c \n\tfor(int i = 1;i<=t;i++){\n\t\tflg = true;//\u521d\u59cb\u5316\u8fd9\u5f20\u8bd5\u5377\u7684\u72b6\u6001\n\t\ttyp();//\u5224\u65ad\u8003\u53f7\u5408\u6cd5\u6027\n\t\tcheck(c);//\u56e0\u4e3ac\u662f\u5168\u5c40\u53d8\u91cf\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f20\n\t\tpas();//\u8003\u8bd5\u6210\u7ee9\n\t\tprintf(\"\\n\");//\u5343\u4e07\u4e0d\u80fd\u5fd8\u4e86\u8fd9\u91cc\u6709\u4e00\u4e2a\u6362\u884c\uff01\n\t}\n\treturn 0;\n}\n```\n---\n\u4e00\u9053~~\u7b80\u5355~~\u6709\u8da3\u7684\u6a21\u62df\u9898\u5c31\u8fd9\u6837\u5b8c\u7f8eAC\u4e86\uff01\u5f53\u7136\u8fd9\u9053\u9898\u7684\u6a21\u62df\u601d\u8def\u786e\u5b9e\u975e\u5e38\u6e05\u6670\u660e\u4e86\u662f\u4e00\u9053\u5b8c\u7f8e\u7684\u7ec3\u4e60\u9898~\n\n\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u5bf9\u5927\u5bb6\u80fd\u6709\u6240\u5e2e\u52a9\u3002\n\n\u800c\u4e14\u65e2\u7136\u90fd\u770b\u5230\u8fd9\u91cc\u4e86\uff0c\u70b9\u4e2a\u8d5e\u518d\u8d70\u884c\u4e0d(\u2256\u203f\u2256)\u2727",
        "postTime": 1536414337,
        "uid": 36363,
        "name": "SLYZ_0120",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3692 \u3010\u590f\u5e7b\u7684\u8003\u8bd5\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5f88\u7b80\u5355\u554a\uff0c\u4ee3\u7801\u4e5f\u6ca1\u6709\u5fc5\u8981\u5199\u90a3\u4e48\u957f\n\n\u5c31\u662f\u6309\u9898\u76ee\u8bf4\u7684\u6a21\u62df\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,ans[55];//ans[i]\u4e3a\u7b2ci\u9898\u7684\u6b63\u786e\u5e8f\u53f7\uff080\uff0c1\uff0c2\uff0c3\uff09\nstring s;\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n>>m>>s;\n    for (int i=0;i<m;i++)ans[i]=s[i]-'A';//\u8bfb\u5165\u6807\u51c6\u7b54\u6848\n    while (n--){\n        double cnt=0;\n        int kh=0;\n        cin>>s;\n        for (int i=15;i>=0;i--)kh+=(s[i]-'0')*pow(2,15-i);//\u7b97\u8003\u53f7\n        bool khzq=kh>=1&&kh<=10000;//\u68c0\u67e5\u662f\u5426\u5408\u6cd5\n        if (!khzq){\n            for (int i=0;i<=m;i++)cin>>s;\n            printf (\"Wrong ID\\n\\n\");continue;//\u4e0d\u5408\u6cd5\n        }\n        cin>>s;\n        if (s[0]==s[1])s[kh&1]='0';//\u5982\u679c\u4e24\u4e2a\u90fd\u586b\u4e86\u6216\u8005\u4e24\u4e2a\u90fd\u6ca1\u586b\uff0c\u8ba9\u5b83\u53d8\u6210\u9519\u8bef\n        //\u4e0d\u96be\u53d1\u73b0\u8003\u53f7%2\u5c31\u662f\u6700\u540e\u4e00\u4f4d\uff0c\u56e0\u4e3a2\u7684\u65b9\u51a5\u90fd\u662f\u5076\u7684\n        printf (\"ID: %d\\nType %s\\n\",kh,s[kh&1]-'0'?\"Correct\":\"Incorrect\");//\u8f93\u51faID\u548c\u662f\u5426\u6b63\u786e\n        for (int i=0;i<m;i++){\n            cin>>s;\n            bool ok=0,f=0;\n            for (int j=0;j<4;j++)if (s[j]-'0'&&ok)f=1;//\u5982\u679c\u586b\u4e86\u4e24\u4e2a\n            else if (s[j]-'0')ok=1;//\u5982\u679c\u586b\u4e86\n            if (ok&&!f&&s[ans[i]]-'0')cnt+=100.0/m;//\u53ea\u586b\u4e86\u4e00\u4e2a\u4e14\u586b\u7684\u662f\u5bf9\u7684\n        }\n        printf (\"%.1f\\n\\n\",cnt);//\u8f93\u51fa\n    }\n    return 0;\n}\n\n```",
        "postTime": 1526196993,
        "uid": 39863,
        "name": "\u5f15\u9886\u5929\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3692 \u3010\u590f\u5e7b\u7684\u8003\u8bd5\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u751a\u81f3\u6000\u7591\u81ea\u5df1\u8fde\u4e2a\u666e\u53ca-\u7684\u9898\u76ee\u90fd\u505a\u4e0d\u51fa\u6765\u4e86\u3002\u3002\u3002~~\u7136\u800c\u8fd8\u662f\u505a\u51fa\u6765\u4e86~~\n\n---\n\n\u4e00\u9053\u5751\u70b9\u591a\u591a\u7684\u5927\u6a21\u62df\u9898\u76ee\u3002\n\n\u9996\u5148\u5c31\u662f\u8fd9\u9053\u9898\u76ee\u7279\u6709\u7684`cout<<endl`\u7684\u95ee\u9898\uff0c\u4e0d\u8fc7\u672c\u4eba\u4eb2\u6d4b\u53d1\u73b0\u597d\u50cf\u8fd9\u9053\u9898\u76ee\u4e0e\\n\u5728Windows\u548cLinux\u7684\u517c\u5bb9\u6027\u6ca1\u6709\u592a\u5927\u7684\u5173\u7cfb\uff0c\u7528\\n\u4e5f\u80fd\u8fc7\u5f97\u53bb\u672c\u9898\u3002\n\n\u7136\u540e\u5f00\u59cb\u76d8\u70b9\u8fd9\u9053\u9898\u76ee\u6240\u6709\u7684\u8fc7\u7a0b\u3002\n\n$Step~1$\uff1a\u8f93\u5165\n\n\u8f93\u5165$T,n$\u5012\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\n\n\u5173\u952e\u662f\u4e4b\u540e\u8f93\u5165\u6b63\u786e\u7b54\u6848\u4ee5\u53ca\u8003\u53f7\uff0c\u8003\u5377\u7c7b\u578b\u548c\u6bcf\u9898\u7684\u586b\u6d82\u7b54\u6848\u7684\u60c5\u51b5\u3002\u9996\u5148\u662f\u8f93\u5165\u6b63\u786e\u7b54\u6848\uff0c\u7528\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u4fdd\u5b58\uff0c\u7136\u540e\u7528`scanf(\"%s\", ...)`\u8bfb\u5165\u5c31\u53ef\u4ee5\u4e86\uff08\u4e0d\u8fc7\u8981\u6ce8\u610f\u4e0b\u6807\uff01\u8fd9\u4e2a\u5728AC\u4ee3\u7801\u91cc\u4f1a\u6709\u5448\u73b0\uff09\u3002\n\n\u7136\u540e\u8003\u53f7\uff0c\u76f4\u63a5\u5b9a\u4e49\u4e00\u4e2a\u5927\u5c0f\u4e3a17\u7684\u6570\u7ec4\uff0c\u7136\u540e\u7528`scanf(\"%1d\", ...)`\u8bfb\u5165\u3002\n\n\u63a5\u7740\u662f\u8003\u5377\u7c7b\u578b\uff0c\u4e5f\u7528\u540c\u6837\u65b9\u6cd5\u8f93\u5165\u3002\n\n\u6700\u540e\u662f\u7b54\u6848\u586b\u6d82\uff0c\u540c\u6837\u65b9\u6cd5\u8f93\u5165\u4e0d\u5570\u55e6\u3002\n\n$Step~2$\uff1a\u5904\u7406\u6570\u636e\n\n\u6211\u4eec\u53d1\u73b0\u8003\u53f7\u7684\u8303\u56f4\u5728\u5341\u8fdb\u5236\u4e0b\u76841\u523010000\u3002\u7136\u800c\u5728\u8fd9\u91cc\u8f93\u5165\u7684\u662f\u4e8c\u8fdb\u5236\u3002\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u7528\u7535\u8111\u81ea\u5e26\u7684\u8ba1\u7b97\u5668\u67e5\u4e00\u4e0b\uff0c\u53d1\u73b010000\u5728\u4e8c\u8fdb\u5236\u4e0b\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ti51lc6y.png)\n\n\u6211\u4eec\u53d1\u73b0\u5b83\u53ea\u670914\u4f4d\u6570\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u8fd9\u6837\u4e00\u4e2a\u7279\u5224\uff1a\u53ea\u8981\u572816\u4f4d\u4e8c\u8fdb\u5236\u7684\u7b2c1\u30012\u4f4d\u4e2d\u6709\u6570\uff0c\u8fd9\u4e2a\u8003\u53f7\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u90a3\u4e48\u4e00\u822c\u60c5\u51b5\u600e\u4e48\u5f04\u5462\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u901a\u8fc7\u4f4d\u8fd0\u7b97\u5f97\u5230\u5176\u5341\u8fdb\u5236\u5373\u53ef\u3002\n\n\u6bd4\u5982\u8bf4$(1000010000)_2=1*2^9+1*2^4=528$\u3002\n\n\u6240\u4ee5\u8003\u53f7\u5c31\u8fd9\u4e48\u5904\u7406\u5b8c\u4e86\u3002\u63a5\u4e0b\u6765\u5224\u65ad\u5c31\u65e0\u9700\u518d\u8bb2\u4e86\uff0c\u4e00\u6ce2if-else\u641e\u5b9a\u3002\n\n\u7136\u540e\u662f\u8003\u5377\u7c7b\u578b\u3002\u56e0\u4e3a\u5728\u9898\u76ee\u4e2d\uff0c0\u8868\u793aA\u5377\uff0c1\u8868\u793aB\u5377\u3002\u6240\u4ee5\uff0c\u53ea\u8981\u6bd4\u5bf9\u4e00\u4e0b\u662f\u5426\u586b\u6d82\u4e14\u4ec5\u586b\u6d82\u4e86\u6b63\u786e\u7684\u8003\u5377\u7c7b\u578b\u5c31\u884c\u4e86\u3002\u5177\u4f53\u5c31\u662f\uff1a\u5982\u679c\u6839\u636e\u8003\u597d\u5f97\u51fa\u662f$A$\u5377\uff0c\u4e14\u8bd5\u5377\u7c7b\u578b\u680f\u53ea\u586b\u6d82\u4e86$A$\u5377\u8fd9\u4e2a\u7c7b\u578b\uff0c\u5c31\u662f$Type~Correct$\uff0c\u6216\u8005\u5f97\u51fa\u662f$B$\u5377\uff0c\u4e14\u8bd5\u5377\u7c7b\u578b\u680f\u53ea\u586b\u6d82\u4e86$B$\u5377\u8fd9\u4e2a\u7c7b\u578b\uff0c\u4e5f\u662f$Type~Correct$\u3002\u5426\u5219\u5168\u90e8\u90fd\u662f$Type~Incorrect$\u3002\n\n\u6700\u540e\u662f\u8003\u8bd5\u7b54\u6848\u3002\u6211\u4eec\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u5eb7\u6258\u5c55\u5f00\u7684\u65b9\u5f0f\uff0c\u5c06\u6bcf\u4e2a\u586b\u6d82\u6570\u636e\u8f6c\u5316\u4e3a\u4e00\u79cd\u72b6\u6001\uff0c\u6bd4\u5982\u6211\u4eec\u53d1\u73b0$1000$\u5bf9\u5e94\u7684\u662f$A$\u8fd9\u4e2a\u7b54\u6848\uff0c\u6240\u4ee5\u5c06\u8fd9\u4e2a\u586b\u6d82\u60c5\u51b5\u8f6c\u6362\u6210$1000$\u8fd9\u4e2a\u6570\u3002\n\n$Step~3$\uff1a\u89e3\u51b3\u95ee\u9898\n\n\u9996\u5148\u8003\u53f7\uff0c\u6309\u7167\u4e0a\u9762\u7684\u5904\u7406\u65b9\u6cd5\u5224\u65ad\u3002\n\n\u7136\u540e\u8003\u5377\u7c7b\u578b\u4e5f\u662f\u5982\u6b64\u3002\n\n\u6700\u540e\u662f\u8003\u8bd5\u7b54\u6848\u3002\u6ce8\u610f\uff0c\u5728\u672c\u4eba\u7684\u4ee3\u7801\u4e2d\uff0c\u6b63\u89e3\u7b54\u6848\u7684\u9898\u76ee\u4e0b\u6807\u662f$0,1,2,...,n-1$\uff0c\u7136\u800c\u8003\u751f\u7b54\u6848\u7684\u9898\u76ee\u4e0b\u6807\u662f$1,2,3,...n$\u3002\u6240\u4ee5\u9700\u8981\u6ce8\u610f\u4e00\u4e00\u6bd4\u5bf9\u3002\u8fd8\u6709\uff0c\u56e0\u4e3a\u672c\u9898\u4e2d\uff0c\u9ed8\u8ba4\u6ee1\u5206\u662f$100$\u5206\uff0c\u6240\u4ee5\u6bcf\u9898\u79ef\u5206\u76f4\u63a5\u53d6\u5e73\u5747\u503c\uff0c\u6700\u597d\u7528$double$\u5b58\u50a8\uff08\u7cbe\u5ea6\u9ad8\u4e9b\uff09\u3002\n\n\u5176\u4ed6\u5c31\u6ca1\u5565\u597d\u8bb2\u4e86\u3002\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u4e2a\u9898\u76ee\u771f\u5fc3\u662f\u4e2a\u7eaf\u6a21\u62df\u9898\u76ee\uff0c\u4e0d\u8fc7\u5f88\u591a\u7ec6\u8282\u3002\u795d\u5927\u5bb6\u5237\u9898\u6109\u5feb\uff01\n\n\u6700\u540e\u6765\u8d34\u4e0a\u6b63\u89e3\u4ee3\u7801~\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <iostream>\n#include <cmath>\nusing namespace std;\n\ninline int read() {\n\tint f = 1, x = 0;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') {\n\t\tif(c == '-')\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9') {\n\t\tx = x * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\nint T, n;\ndouble per;\nchar correct[57];\nstruct node {\n\tint id[17], A, B, ans[57][5], note[57];\n}a[1007];\n\nint main() {\n\tT = read(), n = read();\n\tper = 100.0 / (n * 1.0);\n\tscanf(\"%s\\n\", correct);\n// \tprintf(\"%.1lf\\n\", per);\n\tfor(int i = 1; i <= T; ++i) {\n\t\tint flag = 0, sum = 0;\n\t\tfor(int j = 1; j <= 16; ++j) {\n\t\t\tscanf(\"%1d\", &a[i].id[j]);\n\t\t\tif((j == 1 || j == 2) && a[i].id[j])\tflag = 1;\n\t\t\telse {\n//\t\t\t\tprintf(\"%d \", 16 - j);\n\t\t\t\tsum += a[i].id[j] * (int)pow(2, 16 - j);\n//\t\t\t\tprintf(\"%d\\n\", sum);\n\t\t\t}\n\t\t}\n\t\tif(sum < 1 || sum > 10000)\tflag = 1;\n\t\tscanf(\"%1d%1d\", &a[i].A, &a[i].B);\n\t\tfor(int j = 1; j <= n; ++j)\n\t\t\tfor(int k = 1; k <= 4; ++k) {\n\t\t\t\tscanf(\"%1d\", &a[i].ans[j][k]);\n\t\t\t\ta[i].note[j] = a[i].note[j] * 10 + a[i].ans[j][k];\n\t\t\t}\n\t\tif(flag) {\n\t\t\tputs(\"Wrong ID\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"ID: %d\\n\", sum);\n\t\tif((!a[i].id[16] && a[i].A && !a[i].B) || (a[i].id[16] && !a[i].A && a[i].B))\n\t\t\tputs(\"Type Correct\");\n\t\telse\n\t\t\tputs(\"Type Incorrect\");\t\n\t\tflag = 0; double num = 0.0;\n\t\tfor(int j = 1; j <= n; ++j) {\n\t\t\tflag = 0;\n//\t\t\tprintf(\"%d %c\\n\", a[i].note[j], correct[j - 1]);\n\t\t\tif(a[i].note[j] == 1000 && correct[j - 1] == 'A')\t\tnum++;\n\t\t\telse if(a[i].note[j] == 100 && correct[j - 1] == 'B')\tnum++;\n\t\t\telse if(a[i].note[j] == 10 && correct[j - 1] == 'C')\tnum++;\n\t\t\telse if(a[i].note[j] == 1 && correct[j - 1] == 'D')\t\tnum++; \n\t\t}\n\t\tnum *= per;\n\t\tprintf(\"%.1lf\\n\\n\", num);\n\t}\n\treturn 0;\n}\n```\n\n\u4f60\u770b\u5f97\u8fd9\u4e48\u8ba4\u771f\uff0c\u4e0d\u5148\u70b9\u4e2a\u8d5e\u518d\u8d70\u561b\uff1f",
        "postTime": 1571045012,
        "uid": 183771,
        "name": "Eason_AC2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3692 \u3010\u590f\u5e7b\u7684\u8003\u8bd5\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053\u6a21\u62df\uff0c\u4f46\u662f\uff0c\u5b9e\u5728\u662f\u592a\u9ebb\u70e6\uff01\n\n\u9996\u5148\u4e0a\u5934\u6587\u4ef6\u548c\u5176\u4ed6\u4e00\u4e9b\u4e1c\u897f\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\n```\n\u5b9a\u4e49\u51fd\u6570chk_number(),\u7528\u4e8e\u5224\u65ad\u8003\u53f7\u662f\u5426\u5408\u6cd5\u3002\n```cpp\nbool chk_number(string a){\n\tint total=0;\n\tint k=15;\n\tfor(int i=0;i<=15;i++) {\n\t\tif(a[i]=='1') total+=pow(2,k);\n\t\tk--;\n\t}\n\tif(total>=1&&total<=10000) return 1;\n\telse return 0;\n}\n```\n\u5b9a\u4e49\u51fd\u6570sum_number(),\u7528\u4e8e\u8ba1\u7b97\u8003\u53f7\u662f\u591a\u5c11\u3002\n```cpp\nint sum_number(string a){\n\tint total=0;\n\tint k=0;\n\tfor(int i=15;i>=0;i--) {\n\t\tif(a[i]=='1') total+=pow(2,k);\n\t\tk++;\n\t}\n\treturn total;\n}\n```\n\u5b9a\u4e49\u51fd\u6570chk_paper()\uff0c\u7528\u4e8e\u5224\u65ad\u8bd5\u5377\u7c7b\u578b\u586b\u6d82\u4e0e\u8003\u53f7\u662f\u5426\u5bf9\u5e94\u3002\n```cpp\nbool chk_paper(string a,string b){\n\tif(b==\"11\") return 0;\n\tif(b==\"00\") return 0;\n\tif(a[15]=='1'){\n\t\tif(b==\"01\") return 1;\n\t\tif(b==\"10\") return 0;\n\t}\n\tif(a[15]=='0'){\n\t\tif(b==\"01\") return 0;\n\t\tif(b==\"10\") return 1;\n\t}\n}\n```\n\u5b9a\u4e49\u51fd\u6570check()\uff0c\u7528\u4e8e\u5224\u65ad\u7b54\u6848\u662f\u5426\u6b63\u786e\u3002\n```cpp\nbool check(char a,string b){\n\tif(a=='A'){\n\t\tif(b==\"1000\") return 1;\n\t\telse return 0;\n\t}\n\tif(a=='B'){\n\t\tif(b==\"0100\") return 1;\n\t\telse return 0;\n\t}\n\tif(a=='C'){\n\t\tif(b==\"0010\") return 1;\n\t\telse return 0;\n\t}\n\tif(a=='D'){\n\t\tif(b==\"0001\") return 1;\n\t\telse return 0;\n\t}\n}\n```\n\u5b9a\u4e49\u7ed3\u6784\u4f53note\uff0c\u7528\u6765\u50a8\u5b58\u5b66\u751f\u4fe1\u606f\u3002\n```cpp\nstruct note{\n\tstring uid;\n\tstring kind;\n\tstring hd[51];\n\tint zf;\n};\n```\n\u6838\u5fc3\u4ee3\u7801\u90e8\u5206\uff1a\n```cpp\nint main(){\n\tint T,n;\n\tnote student[1001];\n\tchar ans[51];\n\tscanf(\"%d%d\",&T,&n);\n\tfor(int i=1;i<=n;i++)\n\tcin>>ans[i];\n\tfor(int i=1;i<=T;i++){\n\t\tcin>>student[i].uid;\n\t\tcin>>student[i].kind;\n\t\tstudent[i].zf=0;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tcin>>student[i].hd[j];\n\t\t\tif(check(ans[j],student[i].hd[j]))//\u8ba1\u7b97\u6b63\u786e\u7684\u9898\u7684\u4e2a\u6570\n\t\t\tstudent[i].zf++;\n\t\t}\n\t}\n\tfor(int i=1;i<=T;i++){\n\t\tif(chk_number(student[i].uid)){//\u5224\u65ad\u662f\u5426\u8003\u53f7\u5408\u6cd5\uff0c\u5982\u679c\u5408\u6cd5\uff0c\u5219\u8f93\u51fa\n\t\t\tprintf(\"ID: %d\",sum_number(student[i].uid));\n\t\t\tcout<<endl;\n\t\t}\n\t\telse{//\u5982\u679c\u4e0d\u5408\u6cd5\uff0c\u76f4\u63a5\u8df3\u8fc7\u4e0b\u9762\u90e8\u5206\n\t\t\tprintf(\"Wrong ID\");\n\t\t\tcout<<endl;\n\t\t\tgoto exit; \n\t\t}\n\t\tif(chk_paper(student[i].uid,student[i].kind)){//\u5224\u65ad\u8bd5\u5377\u7c7b\u578b\u586b\u6d82\u4e0e\u8003\u53f7\u662f\u5426\u5bf9\u5e94\u3002\n\t\t\tprintf(\"Type Correct\");\n\t\t\tcout<<endl;\n\t\t}\n\t\telse{\n\t\t\tprintf(\"Type Incorrect\");\n\t\t\tcout<<endl;\n\t\t}\n\t\tprintf(\"%.1f\",student[i].zf*100/float(n));//\u8ba1\u7b97\u5206\u6570\n\t\tcout<<endl;\n\t\texit:\n\t\tcout<<endl;\n\t}\n\treturn 0;//\u7ed3\u675f\n}\n```",
        "postTime": 1526196210,
        "uid": 96570,
        "name": "RiverFun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3692 \u3010\u590f\u5e7b\u7684\u8003\u8bd5\u3011"
    },
    {
        "content": "[\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/jasonying/luogu-p3692-xia-huan-di-kao-shi) [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3692)\n\n---\n### \u9898\u76ee\u5206\u6790\n\u8fd9\u662f\u4e00\u9053\u5f88\u7b80\u5355\u7684\u6a21\u62df ~~\uff0c\u4f46\u662f\u6211\u5f04\u4e86\u4e00\u4e2d\u5348\u4ea4\u4e86\u5341\u51e0\u6b21\u624dAC~~\uff0c\u96be\u70b9~~\u4e0d~~\u662f\u9898\u76ee\u590d\u6742~~\u800c\u662f\u4e0d\u8981\u6655\u8fc7\u53bb~~\uff0c\u76f4\u63a5\u66b4\u529b\u3002\n\n### \u77e5\u8bc6\u70b9\n1. \u4e8c\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\n\n\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\uff0c\u5c31\u662f\u6a21\u62df\u5c0f\u5965\u4e2d\u4e8c\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\u3002\n```cpp\n    getline(cin,s);\n    for(int i=0;i<s.size();i++){\n        if(s[i]=='1')num+=pow(2,16-i);\n    }\n```\n2. \u8f93\u51fa ans \u5e76\u4fdd\u7559\u5c0f\u6570\u70b9\u540ex\u4f4d\n\n\u65b9\u6cd5\u4e00\uff1a```cout<<fixed<<setprecision(x)<<ans<<endl;```\n\n\u65b9\u6cd5\u4e8c\uff1a```printf(\"%.xf\",ans);```\n### \u4ee3\u7801\n### Step1 \u68c0\u67e5\u8003\u53f7\u7684\u586b\u5199\u662f\u5426\u51c6\u786e\n\u8fd9\u4e00\u6b65\u4e3b\u8981\u7684\u64cd\u4f5c\u5c31\u662f\u5c06\u4e8c\u8fdb\u5236\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\uff0c\u5728\u524d\u9762\u5df2\u7ecf\u6709\u6240\u4ecb\u7ecd\uff0c\u4ee3\u7801\u4e2d\u6709\u4e9b\u8bed\u53e5\u7684\u601d\u8def\u6bd4\u8f83\u795e\u5947\uff0c\u6211\u4f1a\u5728\u6ce8\u91ca\u4e2d\u8fdb\u884c\u89e3\u91ca\u3002\n```cpp\nbool ID(){\n    for(int i=1;i<=16;i++){//\u4e8c\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\n        cin>>c;\n        if(c=='1')id+=pow(2,16-i);\n    }\n\tif(id>=1&&id<=10000){//\u5982\u679c\u5728\u8303\u56f4\u4e4b\u5185\n\t\tcout<<\"ID: \"<<id<<endl;//\u8f93\u51fa\n\t\treturn true;//\u8003\u53f7\u6b63\u786e\uff0c\u8fd4\u56de\n\t}\n\tcout<<\"Wrong ID\"<<endl<<endl;//\u8f93\u51fa\n\tfor(int i=1;i<=2+4*n;i++)cin>>cc;//\u8bfb\u5165\u5269\u4f59\u76842+4*n\u4e2a\u5b57\u7b26\n\treturn false;//\u8003\u53f7\u9519\u8bef\uff0c\u8fd4\u56de\n}\n```\n### Step2 \u68c0\u67e5\u8bd5\u5377\u7c7b\u578b\u662f\u5426\u6b63\u786e\n\u8fd9\u4e00\u6b65\u4e3b\u8981\u662f\u5224\u65ad\u8003\u53f7\u6700\u540e\u4e00\u4f4d\u4e0e\u8003\u751f\u7684\u586b\u6d82\u662f\u5426\u5339\u914d\uff0c\u5bf9\u5e94\u8868\u5982\u4e0b\uff1a\n\n| \u8003\u53f7\u6700\u540e\u4e00\u4f4d | \u8003\u751f\u586b\u6d82 | \u8bd5\u5377\u7c7b\u578b |\n| :-: | :-: | :-: |\n| 0 | 10 | A\n| 1 | 01 | B\n\u4e0a\u7a0b\u5e8f\uff1a\n```cpp\nvoid type(){\n    cin>>cc>>ccc;//\u8f93\u5165\u4e24\u4f4d\u5b57\u7b26\n    if(c=='1'&&cc!='1'&&ccc=='1'||c=='0'&&cc!='0'&&ccc=='0')cout<<\"Type Correct\"<<endl;//\u7c7b\u578b\u6b63\u786e\uff0c\u8f93\u51fa\n    else cout<<\"Type Incorrect\"<<endl;//\u7c7b\u578b\u9519\u8bef\uff0c\u8f93\u51fa\n    return;//\u8fd4\u56de\n}\n```\n### Step3 \u7ed9\u5355\u9009\u9898\u6253\u5206\n\u8fd9\u4e00\u6b65\u5c31\u662f\u7edf\u8ba1\u6b63\u786e\u7684\u9898\u76ee\u6570\u91cf\u5e76\u8ba1\u7b97\u5206\u6570\uff0c\u6b63\u786e\u9009\u9879\u4e0e\u8003\u751f\u586b\u6d82\u5bf9\u5e94\u8868\u5982\u4e0b\uff1a\n\n| \u9009\u9879 | \u6b63\u786e\u586b\u6d82 | \u5bf9\u5e94\u7684\u6574\u6570 |\n| :-: | :-: | :-: |\n| A | 1000 | 1000\n| B | 0100 | 100\n| C | 0010 | 10\n| D | 0001 | 1\n```cpp\nvoid answer(){\n    for(int i=0,m;i<n;i++){//\u5faa\u73af\u5224\u65ad\u6b63\u786e\n        cin>>m;//\u4ee5\u6574\u6570\u7c7b\u578b\u8f93\u5165\u8003\u751f\u7b54\u6848\n        if(m==1&&ans[i]=='D'||m==10&&ans[i]=='C'||m==100&&ans[i]=='B'||m==1000&&ans[i]=='A')crct++;//\u5224\u65ad\uff0c\u6b63\u786e\u9898\u76ee\u6570\u91cf\u52a0\u4e00\n    }\n    cout<<fixed<<setprecision(1)<<100.0*crct/n<<endl;//\u8f93\u51fa\u7b54\u6848\uff0c\u6ce8\u610f\u4e00\u5b9a\u8981\u7528100.0\uff0c\u4e0d\u7136\u4f1a\u8f93\u51fa\u6574\u6570\n    return;//\u8fd4\u56de\n}\n```\n### \u4e3b\u7a0b\u5e8f\n\u4ee5\u4e0a\u5c31\u662f\u4e09\u4e2a\u6b65\u9aa4\uff0c\u6211\u5bf9\u5176\u8fdb\u884c\u4e86\u6a21\u5757\u5316\u5904\u7406\uff0c\u8fd9\u6837\u4e3b\u7a0b\u5e8f\u8c03\u7528\u4f1a\u6bd4\u8f83\u65b9\u4fbf\uff0c\u4e3b\u7a0b\u5e8f\u5982\u4e0b\uff1a\n```cpp\nint main(){\n    cin>>T>>n;//\u8f93\u5165\n    for(int i=0;i<n;i++)cin>>ans[i];//\u8f93\u5165\u6b63\u786e\u7b54\u6848\n    for(int i=0;i<T;i++){\n    \tcrct=0;//\u6e05\u7a7a\u6b63\u786e\u9898\u76ee\u6570\u91cf\n        id=0;//\u6e05\u7a7a\u5341\u8fdb\u5236\u8003\u53f7\n        if(!ID())continue;//\u5982\u679c\u8003\u53f7\u9519\u8bef\uff0c\u4e0d\u9700\u8981\u8fdb\u4e00\u6b65\u5904\u7406\n        type();//\u8bd5\u5377\u7c7b\u578b\n        answer();//\u68c0\u67e5\u7b54\u6848\n        cout<<endl;//\u6362\u884c\u522b\u5fd8\u4e86\n    }\n    return 0;\n}\n```\n### \u5b8c\u6574\u7a0b\u5e8f\uff08\u65e0\u6ce8\u91ca\uff09\n```cpp\n#include<bits/stdc++.h>\n#define N 59\nusing namespace std;\nint T,n,id,crct;\nchar c,cc,ccc,ans[N];\nbool ID(){\n    for(int i=1;i<=16;i++){\n\tcin>>c;\n\tif(c=='1')id+=pow(2,16-i);\n    }\n    if(id>=1&&id<=10000){\n\tcout<<\"ID: \"<<id<<endl;\n\treturn true;\n    }\n    cout<<\"Wrong ID\"<<endl<<endl;\n    for(int i=1;i<=2+4*n;i++)cin>>cc;\n    return false;\n}\nvoid type(){\n    cin>>cc>>ccc;\n    if(c=='1'&&cc!='1'&&ccc=='1'||c=='0'&&cc!='0'&&ccc=='0')cout<<\"Type Correct\"<<endl;\n    else cout<<\"Type Incorrect\"<<endl;\n    return;\n}\nvoid answer(){\n    for(int i=0,m;i<n;i++){\n        cin>>m;\n        if(m==1&&ans[i]=='D'||m==10&&ans[i]=='C'||m==100&&ans[i]=='B'||m==1000&&ans[i]=='A')crct++;\n    }\n    cout<<fixed<<setprecision(1)<<100.0*crct/n<<endl;\n    return;\n}\nint main(){\n    cin>>T>>n;\n    for(int i=0;i<n;i++)cin>>ans[i];\n    for(int i=0;i<T;i++){\n        crct=0;\n        id=0;\n        if(!ID())continue;\n        type();\n        answer();\n        cout<<endl;\n    }\n    return 0;\n}\n```\n### \u7ed3\u8bed\n\u4e0d\u96be\uff0c\u4f46\u662f\u8981\u6ce8\u610f**\u7ec6\u8282**\n\n\u4ee5\u4e0a\u662f\u672c\u849f\u84bb\u7684\u7b2c\u4e09\u7bc7\u9898\u89e3\uff0c\u524d\u4e24\u7bc7\u90fd\u56e0\u4e3a\u9898\u89e3\u592a\u591a\u4ea4\u4e0d\u4e0a\u53bb\uff0c\u65e2\u7136dalao\u4eec\u770b\u5230\u8fd9\u4e86\uff0c\u7ed9\u4e2a\u8d5e\u5427qwq\n\n-----\n### update\n- 2020.4.11 \u4fee\u590d\u4e86\u90e8\u5206\u4ee3\u7801\u7684\u7f29\u8fdb\u95ee\u9898\n\n- 2020.4.11 \u4fee\u590d\u4e86\u6587\u672b\u591a\u51fa\u4e00\u6761\u5206\u5272\u7ebf\u7684\u95ee\u9898\n\n- 2020.4.11 \u5728\u6587\u9996\u589e\u52a0\u4e86\u4e00\u6761\u5206\u5272\u7ebf",
        "postTime": 1586498149,
        "uid": 290524,
        "name": "Jasonying",
        "ccfLevel": 5,
        "title": "luogu P3692 \u590f\u5e7b\u7684\u8003\u8bd5"
    },
    {
        "content": "\u661f\u91ce\u7528\u4e86~~\u82b1\u91cc\u80e1\u54e8\u7684~~**\u9762\u5411\u5bf9\u8c61**\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\u4e86\u8fd9\u9053\u9898  \n\u9996\u5148\u662f\u8003\u751f\u4fe1\u606f  \n```C++\nclass Id {\npublic:\n\tenum TestType {\n\t\tA, B, WRONG\n\t};\n\n\texplicit Id(const std::string &id) {\n\t\tstd::stringstream stream(id);\n\t\tconst char *charArr = id.c_str();\n\t\tself.id = static_cast<int>(std::strtol(charArr, (char **) (charArr + id.size()), 2));\n\t\tself.testType = *(--id.cend()) - '0' ? B : A;\n\t}\n\n\texplicit Id(const int &id, const TestType &type) : id(id), testType(type) {}\n\n\tinline auto getId() -> int { return id; }\n\n\tinline auto getType() -> TestType { return testType; };\n\nprivate:\n\tint id;\n\tTestType testType;\n\n};\n```\n~~\u8fd9\u4ec0\u4e48\u9ad8\u4eae\u3002\u3002\u3002~~  \n\n\u53cd\u6b63\u5c31\u662f\u4e00\u5806\u82b1\u91cc\u80e1\u54e8\u7684\u4e1c\u897f...  \n\u63a5\u4e0b\u6765\u662f\u5355\u9009\u7b54\u6848\n```C++\nclass SingleAnswer {\nprivate:\n\tenum Answer {\n\t\tA, B, C, D, WRONG\n\t};\n\tAnswer ans;\n\npublic:\n\texplicit SingleAnswer() : ans(WRONG) {}\n\n\texplicit SingleAnswer(const char &ans) {\n\t\tswitch (ans) {\n\t\t\tcase 'A':\n\t\t\t\tself.ans = A;\n\t\t\t\tbreak;\n\t\t\tcase 'B':\n\t\t\t\tself.ans = B;\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tself.ans = C;\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\tself.ans = D;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tself.ans = WRONG;\n\t\t}\n\t}\n\n\texplicit SingleAnswer(const std::string &str) {\n\t\tif (str.size() != 4) throw \"Error\";\n\t\tif (str == \"1000\") ans = A;\n\t\telse if (str == \"0100\") ans = B;\n\t\telse if (str == \"0010\") ans = C;\n\t\telse if (str == \"0001\") ans = D;\n\t\telse ans = WRONG;\n\t}\n\n\tauto operator==(const SingleAnswer &ans) -> bool const {\n\t\treturn self.ans == ans.ans;\n\t}\n};\n```\n\u8fd9\u91cc\u5c31\u4e0d\u600e\u4e48\u82b1\u91cc\u80e1\u54e8\u4e86  \n\u6700\u540e\u662f\u51e0\u4e2a\u8bfb\u53d6\u7684\u51fd\u6570  \n```C++\n//\u8bfb\u53d6 \u8003\u751f\u4fe1\u606f\nauto readId() -> const Id {\n\tstd::string id;\n\tstd::cin >> id;\n\treturn Id(id);\n}\n\n//\u8bfb\u53d6 \u8003\u5377\u7c7b\u578b\nauto readType() -> const Id::TestType {\n\tint type;\n\tstd::cin >> type;\n\n\tif (type == 10) return Id::A;\n\telse if (type == 1) return Id::B;\n\telse return Id::WRONG;\n}\n\n//\u8bfb\u53d6 \u6b63\u786e\u7b54\u6848\nauto readAnswers() -> const std::vector<SingleAnswer> {\n\tstd::string answers;\n\tstd::cin >> answers;\n\tstd::vector<SingleAnswer> ans;\n\tfor (auto c : answers) {\n\t\tans.emplace_back(c);\n\t}\n\n\treturn ans;\n}\n\n//\u8bfb\u53d6 \u8003\u751f\u7b54\u6848\nauto readInputAnswer(const int &answerCount) -> const std::vector<SingleAnswer> {\n\tstd::vector<SingleAnswer> answers;\n\tfor (int i = 0; i < answerCount; ++i) {\n\t\tstd::string ans;\n\t\tstd::cin >> ans;\n\n\t\tanswers.emplace_back(ans);\n\t}\n\n\treturn answers;\n}\n```\n\u6700\u540e\u5c31\u662f `main` \u51fd\u6570  \n```C++\nauto main(int argc, char *argv[]) -> int {\n\tint ansCount, ansLength;\n\tstd::cin >> ansCount >> ansLength;\t\t//\u5148\u8bfb\u53d6 \u8bd5\u5377\u6570\u91cf \u548c \u7b54\u6848\u4e2a\u6570\n\n\tauto ans = readAnswers();\t\t//\u8bfb\u53d6\u6b63\u786e\u7b54\u6848\n\n\tfor (int i = 0; i < ansCount; ++i) {\n\t\tauto id = readId();\t\t//\u83b7\u53d6\u8003\u751f\u4fe1\u606f\n\t\tauto type = readType(); //\u83b7\u53d6\u8003\u5377\u7c7b\u578b\n\t\tauto inputAnswers = readInputAnswer(ansLength); //\u83b7\u53d6\u8003\u751f\u7b54\u6848\n        //\u672c\u6765\u83b7\u53d6\u8003\u751f\u7b54\u6848\u661f\u91ce\u662f\u9009\u62e9\u653e\u5230\u4e0b\u9762\u53bb\u7684, \u7ed3\u679c\u53d1\u73b0, \u5373\u4f7fid\u9519\u8bef\u4e5f\u8fd8\u662f\u8981\u7ee7\u7eed\u8bfb\u53d6\u7b54\u6848\n\n\t\tif (id.getId() == 0 || id.getId() > 10000) {\t//\u5224\u65adid\u533a\u95f4\n\t\t\tstd::cout << \"Wrong ID\" << std::endl << std::endl;\n\t\t\tcontinue;\n\t\t} else std::cout << \"ID: \" << id.getId() << std::endl;\n\t\tstd::cout\t//\u5224\u65ad\u8003\u5377\u7c7b\u578b\n\t\t\t\t<< \"Type \"\n\t\t\t\t<< (id.getType() == type ? \"Correct\" : \"Incorrect\")\n\t\t\t\t<< std::endl;\n\n\t\tint correctCount = 0;\t//\u6b63\u786e\u6570\n\t\tauto ansIt = ans.cbegin();\t//\u53c2\u8003\u7b54\u6848\u7684\u8fed\u4ee3\u5668\n\n\t\tfor (auto inputAnswer : inputAnswers) {\n\t\t\tcorrectCount += inputAnswer == *ansIt++;\n\t\t}\n\n\t\t//\u8f93\u51fa\n\t\tprintf(\"%.1f\\n\\n\", 100.0 / ansLength * correctCount);\n\t}\n\n\treturn 0;\n}\n```\n\u9009\u62e9~~\u82b1\u91cc\u80e1\u54e8\u7684~~**\u9762\u5411\u5bf9\u8c61**\u5b9e\u73b0\u4e3b\u8981\u8fd8\u662f\u4e3a\u4e86\u7ef4\u62a4\u548c\u6269\u5c55\u6027  \n\u4e5f\u4e0d\u77e5\u9053\u5237\u4e2a\u6c34\u9898\u8981\u5565\u7ef4\u62a4\u548c\u6269\u5c55...",
        "postTime": 1535226272,
        "uid": 124166,
        "name": "HoshinoTented",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3692 \u3010\u590f\u5e7b\u7684\u8003\u8bd5\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5e76\u4e0d\u96be\uff0c\u4e3b\u8981\u662f\u7531\u8010\u5fc3\u5427\n\n\u6309\u7167\u9898\u76ee\u8981\u6c42\u4e00\u70b9\u4e00\u70b9\u7684\u505a\u5f88\u5bb9\u6613\u7684\u3002\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\u3002\n\n# \u4ee3\u7801 \u6709\u8be6\u89e3\n```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\uff0c\u90fd\u61c2\u5f97\u3002\nusing namespace std;\nint T,n,dn[100],sum=0,abc;//dn[]\u91cc\u9762\u5b58\u6b63\u786e\u7b54\u6848 sum\u4e3a\u6b63\u786e\u7684\u6570\u91cf abc\u4e3a\u540c\u5b66\u9009\u7684\u7b54\u6848\ndouble ans=0;//\u5206\u6570\nint ID(){//\u8fdb\u884cID\u7684\u8fdb\u5236\u8f6c\u6362\uff0c\u987a\u5e26\u5224\u65ad\u8bd5\u5377\u7c7b\u578b\u662f\u5426\u6b63\u786e\u3002\n\tstring s;//\u7528\u5b57\u7b26\u4e32\u5b58\u4e8c\u8fdb\u5236ID\u3002\n   int id=0,a;//id\u4e3a\u5341\u8fdb\u5236id,a\u4e3a\u8bd5\u9898\u7c7b\u578b\u3002\n\tcin >> s;\n\tfor (int i = 0; i < s.size(); i++) //\u5c06\u4e8c\u8fdb\u5236\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u3002\n\t\tid += (s[i]-'0') * pow(2, s.size() - i - 1);\n\tif(id>10000||id<1){//\u5224\u65adID\u662f\u5426\u6b63\u786e\u3002\n\t\tcout<<\"Wrong ID\\n\\n\";//\u4e24\u4e2a\u6362\u884c\u3002\n\t\tfor(int i=0;i<n+1;i++)\n\t\t\tcin>>a;//ID\u9519\u8bef,\u628a\u4e0b\u9762\u7684\u8f93\u8fdb\u6765\uff0c\u4e3a\u4e86\u4e0d\u5f71\u54cd\u4e0b\u4e00\u4e2a\u540c\u5b66\u7684\u7b54\u6848\u3002\n\t\treturn 0;//\u8fd4\u56de0\uff0c\u7ed3\u675f\u8fd9\u6b21ID\u5224\u65ad\u3002\n\t}\n\tcout << \"ID: \" << id << endl;//ID\u6b63\u786e\u5c31\u8f93\u51fa\uff0c:\u540e\u9762\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u6ce8\u610f\u3002\n\tcin>>a;//\u8f93\u5165\u8bd5\u9898\u7c7b\u578b\u3002\n\tif(a==0||a==11||id%2!=a%2){//\u8bd5\u9898\u7c7b\u578ba\u4e0d\u80fd\u4e3a00\u6216\u800511\uff0ca\u4e2a\u4f4d\u548cID\u4e2a\u4f4d\u76f8\u540c\uff08\u540c\u4e3a0\u62161\uff09\u624d\u6b63\u786e\u3002\u5c31\u662f\u8bf4a\u548c\u5341\u8fdb\u5236id\u540c\u4e3a\u5947\u6570\u6216\u540c\u4e3a\u5076\u6570\u624d\u6b63\u786e\u3002\n\t\tcout<<\"Type Incorrect\\n\";//\u9519\u8bef\u8f93\u51fa\u8fd9\u4e2a\u3002\n\t}else\tcout<<\"Type Correct\\n\";//\u6b63\u786e\u8f93\u51fa\u8fd9\u4e2a\u3002\n\treturn 1;//ID\u6b63\u786e\u8fd4\u56de1\u3002\n}\nint main()\n{\n\tcin>>T>>n;//T\u662f\u540c\u5b66\u7684\u8bd5\u5377\u7b54\u6848\u4e2a\u6570\uff0cn\u662f\u8bd5\u5377\u9898\u76ee\u4e2a\u6570\u3002\n\tchar c;//\u6682\u65f6\u5b58\u50a8\u6b63\u786e\u7b54\u6848\u3002\n\tfor(int i=0;i<n;i++){\n\t\tcin>>c;\n\t\tif(c=='A') dn[i]=1000;//\u7b54\u6848\u662fA\u5c31\u662f1000\u3002\n\t\telse if(c=='B') dn[i]=100;//\u7b54\u6848B\u662f0100\u3002\n\t\telse if(c=='C') dn[i]=10; //\u7b54\u6848C\u662f0010\u3002\n\t\telse if(c=='D') dn[i]=1;  //\u7b54\u6848D\u662f0001\u3002\t\t\n\t}\n\twhile(T--){\n\t\tif(!ID())//\u8fd4\u56de0\u5c31\u7ed3\u675f\u672c\u6b21\u5faa\u73af\u8fdb\u884c\u4e0b\u4e00\u6b21\u5faa\u73af\u3002\n\t\t\tcontinue;\n\t\tsum=0;ans=0;//\u91cd\u65b0\u8d4b\u503c\u4e3a0\u3002\n\t\tfor(int i=0;i<n;i++){\n\t\t\tcin>>abc;//\u4ee5\u6574\u6570\u5f62\u5f0f\u8f93\u5165\uff0c\u6570\u5b57\u81ea\u52a8\u53bb\u6389\u5f00\u5934\u7684\u96f6\u3002\n\t\t\tif(abc==dn[i])//\u5224\u65ad\u76f8\u7b49\uff0csum\u81ea\u589e1\u3002\n\t\t\t\tsum++;\n\t\t}\n\t\tans=(double)sum/n*100;//\u6839\u636e\u7b54\u5bf9\u9898\u6570\u548c\u603b\u9898\u6570\u7b97\u51fa\u5f97\u5206\u3002\n\t\tprintf(\"%0.1f\\n\\n\",ans);//\u8f93\u51fa\u5206\u6570\uff0c\u4e24\u4e2a\u6362\u884c\u3002\n\t}\n\treturn 0;\n } \n```\n## \u7ed3\u675f\u3002",
        "postTime": 1583247843,
        "uid": 226030,
        "name": "HDawn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3692 \u3010\u590f\u5e7b\u7684\u8003\u8bd5\u3011"
    },
    {
        "content": "\u4e00\u9053\u5e76\u4e0d\u592a\u96be\u7684\u6a21\u62df\uff0c\u8003\u5bdf\u9762\u5e7f\uff0c\u601d\u8def\u4e0d\u96be\uff0c\u4ee3\u7801\u91cf\u7a0d\u9ad8\uff0c\u4ee3\u7801\u96be\u5ea6\u4e00\u822c\u3002\n\n\u8bb2\u89e3\u5728\u4ee3\u7801\u7684\u6ce8\u91ca\u4e2d\u3002\n\nCode\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<string>\nusing namespace std;\nconst int pow2x[16]={1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768};\n//\u5c062\u7684n\u6b21\u5e42\u7528\u4e00\u4e2aconst\u8868\u793a\u51fa\u6765\uff0c\u907f\u514d\u6bcf\u6b21\u8c03\u7528pow\u51fd\u6570\u8d39\u65f6\n//\u89c2\u5bdf\u6837\u4f8b\u53ef\u53d1\u73b0\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6570\u6700\u591a16\u4f4d\uff0c\u56e0\u6b64\u6211\u4eec\u6253\u8868\u6253\u52302^15=32768\u5373\u53ef\nstring r[51];\nint bin_to_dec(string b)//\u4e8c\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\n{   int len=b.size(),d=0;\n    for(int i=len-1;i>=0;i--)\n      d+=(b[i]-'0')*pow2x[len-i-1];//b[i]-'0'\u4e3a\u8fd9\u4e00\u4f4d\u4e0a\u7684\u6570\u5b57\n    return d;}\nint main()\n{\n    int t,n,i;\n    string ans,num,type;\n    double sc=0.0;\n    cin>>t>>n>>ans;//ans\u4e3a\u6b63\u786e\u7b54\u6848\n    const double basic_sc=100.0/n;//\u7b54\u5bf9\u4e00\u9053\u9898\u6240\u52a0\u7684\u5206\u6570\n    while(t--)//t\u7ec4\u6570\u636e\n    {   cin>>num>>type;\n        int id=bin_to_dec(num);//\u5c06\u8003\u8bd5\u53f7\u8f6c\u6362\u4e3a10\u8fdb\u5236\n        for(i=1;i<=n;i++) cin>>r[i];//\u8003\u751f\u7684\u4f5c\u7b54\n        if(id>10000||id<1) //\u5982\u679c\u8003\u53f7\u4e0d\u5bf9\n        {   cout<<\"Wrong ID\"<<endl<<endl;continue;}//\u76f4\u63a5\u8f93\u51fa\u8d70\u6389\n        //\u6ce8\u610f\u8fd9\u91cc\u8981\u6709\u4e24\u4e2a\u6362\u884c\uff01\uff01\uff01\u672c\u4eba\u5728\u8fd9\u91cc\u88ab\u5751\u4e86\u597d\u4e45\n        cout<<\"ID: \"<<id<<endl;//\u8f93\u51fa\u8003\u53f7\n        int len=num.size();\n        if(num[len-1]=='0')//\u8bd5\u5377\u7c7b\u578b\u7684\u5904\u7406\n        {   if(type==\"10\") cout<<\"Type Correct\"<<endl;\n            else cout<<\"Type Incorrect\"<<endl;}\n        else if(num[len-1]=='1')\n        {   if(type==\"01\") cout<<\"Type Correct\"<<endl;\n            else cout<<\"Type Incorrect\"<<endl;}\n        for(i=1;i<=n;i++)//\u6bd4\u5bf9\u7b54\u6848\n        {   if(ans[i-1]=='A')\n            {   if(r[i]==\"1000\") sc+=basic_sc;}\n            else if(ans[i-1]=='B')\n            {   if(r[i]==\"0100\") sc+=basic_sc;}\n            else if(ans[i-1]=='C')\n            {   if(r[i]==\"0010\") sc+=basic_sc;}\n            else if(ans[i-1]=='D')\n            {   if(r[i]==\"0001\") sc+=basic_sc;}}\n        printf(\"%.1lf\\n\\n\",sc);//\u4fdd\u7559\u4e00\u4f4d\u5c0f\u6570\u8f93\u51fa\uff0c\u540c\u6837\u8981\u5e26\u4e24\u4e2a\u6362\u884c\n        sc=0.0;}//\u6e05\u7a7a\u7d2f\u52a0\u7684\u6210\u7ee9\uff0c\u5904\u7406\u4e0b\u4e00\u4f4d\u8003\u751f\n}\n```",
        "postTime": 1566198517,
        "uid": 59995,
        "name": "\u53cd\u6bd4\u4f8b\u51fd\u6570",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3692 \u3010\u590f\u5e7b\u7684\u8003\u8bd5\u3011"
    },
    {
        "content": "\u4e00\u9053\u7eaf\u7eaf\u7684\u6a21\u62df\u3002\n\n\u601d\u8def\u4e0d\u96be\uff0c\u4e3b\u8981\u770b\u4ee3\u7801\u5b9e\u73b0\u3002\n\n\u00b7\u00b7\u00b7\n\n\n\n```cpp\nvar c:char;\n    s:string;\n    a,score:real;\n    ans:array[1..50] of longint;\n    i,j,t1,t2,t,n,l:longint;\n    sum:int64;\n    k:qword;\nprocedure justread(x:longint);//ID\u6709\u95ee\u9898\uff0c\u76f4\u63a5\u8bfb\u5165\nvar i:longint;\n    p:ansistring;\nbegin\n  for i:=1 to x do readln(p);\nend;\nfunction id(s:int64):int64;//2\u8fdb\u5236\u8f6c10\u8fdb\u5236\nvar i,k:longint;\n    l:int64;\nbegin\n  k:=1;\n  l:=s;id:=0;\n  for i:=1 to 16 do\n    begin\n      id:=id+(l mod 10)*k;\n      l:=l div 10;\n      k:=k shl 1;\n    end;\nend;\nbegin\n  readln(t,n);\n  for i:=1 to n do\n    begin\n      read(c);\n      case c of\n        'A':ans[i]:=1000;//\u76f4\u63a5\u4f7f\u7528\uff0c\u66f4\u52a0\u65b9\u4fbf\n        'B':ans[i]:=0100;\n        'C':ans[i]:=0010;\n        'D':ans[i]:=0001;\n      end;\n    end;\n  a:=100/n;\n  for i:=1 to t do\n    begin\n      readln(sum);\n      if sum mod 10=1 then t1:=01 //\u8bd5\u5377\u7c7b\u578b\n      else t1:=10;\n      sum:=id(sum);\n      if not ((sum>=1) and (sum<=10000)) then //\u5224\u65adID\n        begin\n          justread(n+1);\n          writeln('Wrong ID');\n          writeln;\n          continue;\n        end;\n      writeln('ID: ',sum);\n      readln(t2); //\u8bd5\u5377\u7c7b\u578b\n      if t2=t1 then writeln('Type Correct')\n      else writeln('Type Incorrect');\n      score:=0;\n      for j:=1 to n do //\u7b97\u5206\n        begin\n          readln(t2);\n          if t2=ans[j] then score:=score+a;\n        end;\n      writeln(score:0:1);\n      writeln;\n    end;\nend.\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1496579193,
        "uid": 22075,
        "name": "\u6237\u5c71\u9999\u6f84",
        "ccfLevel": 0,
        "title": "\u6d1b\u8c37P3692 [PUB1]\u590f\u5e7b\u7684\u8003\u8bd5"
    },
    {
        "content": "\u5355\u7eaf\u7684\u6a21\u62df\uff0c\u6ca1\u6709\u4ec0\u4e48\u53ef\u8bf4\u7684\n\n\u7528\u7ed3\u6784\u4f53(\u7c7b)\u6765\u4fdd\u5b58\u6570\u636e\u53ef\u4fdd\u8bc1\u4ee3\u7801\u7684\u6709\u5e8f\u6027\u548c\u7b80\u6d01\u6027\n\n\u8fd9\u91cc\u7528\u4e86\u4e00\u4e2a\u5f88\u6162\u7684\u51fd\u6570ReadChar\u6765\u8bfb\u53d6\u5355\u4e2a\u5b57\u7b26\n\n\n\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#define WE    \"Wrong ID\\n\"\n#define TE    \"Type Incorrect\\n\"\n#define TA    \"Type Correct\\n\"\n#define IA    \"ID: %d\\n\"\nchar ReadChar()\n{\n    char c=getchar();\n    while(c<'0'||c>'9')\n        c=getchar();\n    return c;\n}\n```\nclass Paper\n```cpp\n{\n    int ID;\n    int Tp;\n    char Asw[60];\n    void ReadID();\n    void ReadType();\n    char ReadSolo();\n    void ReadAnsw();\n    int IsID();\n    int IsType();\n    int GetRight(char*);\n```\npublic:\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n    void Judge();\n};\nint N,T;\nchar True[60];\nvoid Paper::ReadID()\n{\n    ID=0;\n    int wi,ad=1<<15;\n    char c;\n    for(wi=1;wi<=16;++wi)\n    {    \n        ID+=(ReadChar()-'0')*ad;\n        ad/=2;\n    }\n}\nvoid Paper::ReadType()\n{\n    char ya,yb;\n    ya=ReadChar();\n    yb=ReadChar();\n    if(ya=='1')\n        if(yb=='1')\n            Tp=2;\n        else Tp=0;\n    else if(yb=='1')\n        Tp=1;\n        else Tp=2;            \n}\nchar Paper::ReadSolo()\n{\n    int rn=0;\n    int rd[5];\n    int wi;\n    for(wi=1;wi<=4;++wi)\n    {    \n        rd[wi]=ReadChar()-'0';\n        rn+=rd[wi];\n    }\n    if(rn!=1)return 'Z';\n    if(rd[1])return 'A';\n    if(rd[2])return 'B';\n    if(rd[3])return 'C';\n    if(rd[4])return 'D';\n    return 'Z';\n}\nvoid Paper::ReadAnsw()\n{\n    int wi;\n    for(wi=0;wi<N;++wi)\n        Asw[wi]=ReadSolo();\n}\nint Paper::IsID()\n{\n    return ID>=1&&ID<=10000;\n}\nint Paper::IsType()\n{\n    return (ID%2)==Tp;\n}\nint Paper::GetRight(char*Rit)\n{\n    int rt=0,wi;\n    for(wi=0;wi<N;++wi)\n        if(Rit[wi]==Asw[wi])\n            ++rt;\n    return rt;\n}\nint ft;\nvoid Paper::Judge()\n{\n    if(ft)putchar(10);\n    ++ft;\n    ReadID();\n    ReadType();\n    ReadAnsw();\n    if(!IsID())\n    {\n        printf(WE);\n        return;\n    }\n    printf(IA,ID);\n    if(!IsType())\n        printf(TE);\n    else\n        printf(TA);\n    int yn=GetRight(True);\n    printf(\"%.1lf\\n\",100.0*yn/N);\n}\nPaper Man[11000];\nvoid Input()\n{\n    scanf(\"%d %d\",&T,&N);\n    scanf(\"%s\",True);\n}\nvoid AC()\n{\n    int wi;\n    for(wi=1;wi<=T;++wi)\n        Man[wi].Judge();\n}\nint main()\n{\n    Input();\n    AC();\n    return 0;\n}\n\n```",
        "postTime": 1494948881,
        "uid": 25508,
        "name": "Night_Aurora",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3692 \u3010[PUB1]\u590f\u5e7b\u7684\u8003\u8bd5\u3011"
    },
    {
        "content": "~~\u8fd9\u9898\u524d\u4e24\u6b21\u63d0\u4ea4\u7eaf\u5c5e\u6c99\u96d5\uff0c\u7b2c\u4e00\u6b21too short on line 31\uff0c\u539f\u6765\u662fWrong ID\u591a\u8f93\u51fa\u4e00\u4e2a\u6362\u884c\uff0c\u7b2c\u4e8c\u6b21emmm...freopen\u5fd8\u6ce8\u91ca\u4e86\u3002\u3002\u3002~~\n\n# \u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<map>\n#include<list>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define in inline\n#define ri register int\nusing namespace std;\nint n,m,id,score;//score\u5728\u8fd9\u91cc\u5f53\u505a\u5bf9\u4e86\u51e0\u9053\u9898 \nchar akking[10100],blxs[10100];//std\u548c\u7206\u96f6\u9009\u624b\uff08\u6211\u53bb\uff0cstd\u662f\u5173\u952e\u5b57\uff0c\u7528ak\u738b\u4ee3\u66ff\u5427\uff09 \nbool flag;\nin int slowpower(int x,int y){\n\tint p=1;\n\tif(!x) return 0;\n\tfor(ri i=1;i<=y-1;i++)\n\t\tp*=2;\n\treturn p;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%s\",akking+1);\n\tfor(ri i=1;i<=n;i++){\n\t\tid=score=0;//\u8fd9\u4e2a\u4eba\u7684id\u548cscore\u6e05\u7a7a \n\t\tflag=false;//Wrong ID\u6ca1\u6709\u6210\u7ee9 \n\t\tscanf(\"%s\",blxs+1);\n\t\tfor(ri j=1;j<=16;j++)\n\t\t\tblxs[j]-='0';\n\t\tfor(ri j=1;j<=16;j++)//\u5feb\u901f\u5e42\u6765\u8ba1\u7b97\u4e8c\u8fdb\u5236 \n\t\t\tid+=slowpower(blxs[j],16-j+1);//\u5feb\u901f\u5e42\u5199\u5472\u4e86\uff08\u5212\u6389\uff09\uff0c\u540e\u6765\u53d1\u73b0\u7528pow\u4e5f\u5472\uff0c\uff08\u5212\u6389\uff09\uff0c\u540e\u6765\u53ef\u4ee5\u53d1\u73b0\u53ef\u4ee5\u7528blxs[i]*(pow(16-i+1,2)) \n\t\tif((id>=1)&&(id<=10000)&&(!flag)) printf(\"ID: %d\\n\",id);\n\t\telse{\n\t\t\tprintf(\"Wrong ID\\n\");\n\t\t\tflag=true;//\u672c\u6765\u7528\u7684continue\u53d1\u73b0\u8fd8\u8981\u8bfb\u5165emmm \n\t\t}\n\t\tscanf(\"%s\",blxs+1);//\u91cd\u65b0\u5229\u7528\u7206\u96f6\u9009\u624b\u6765\u5b58\u8003\u8bd5\u7c7b\u578b\n\t\tfor(ri j=1;j<=2;j++)\n\t\t\tblxs[j]-='0';\n\t\tif(!flag){\n\t\t\tif(!blxs[16]){//\u6700\u540e\u4e00\u4f4d\u8fd8\u6ca1\u6709\u8986\u76d6\uff08\u6700\u540e\u4e00\u4f4d\u662f0\uff09 \n\t\t\t\tif((blxs[1])&&(!blxs[2])) printf(\"Type Correct\\n\");//10\u5373\u4e3a\u586b\u6d82\u6b63\u786e \n\t\t\t\telse printf(\"Type Incorrect\\n\");//\u9519\u8bef \n\t\t\t} \n\t\t\tif(blxs[16]){//\u540c\u7406\uff08\u6700\u540e\u4e00\u4f4d\u662f1\uff09 \n\t\t\t\tif((!blxs[1])&&(blxs[2])) printf(\"Type Correct\\n\");//01\u5373\u4e3a\u586b\u6d82\u6b63\u786e \n\t\t\t\telse printf(\"Type Incorrect\\n\");//\u9519\u8bef \n\t\t\t}\n\t\t} \n\t\tfor(ri j=1;j<=m;j++){//akking\u4e2a\u6570\u5373\u4e3a\u9898\u76ee\u4e2a\u6570\n\t\t\tscanf(\"%s\",blxs+1);//\u518d\u6b21\u91cd\u65b0\u5229\u7528\u7206\u96f6\u9009\u624b\u6765\u5b58\u9009\u9879\n\t\t\tif(flag) continue; \n\t\t\tfor(ri k=1;k<=4;k++)\n\t\t\t\tblxs[k]-='0';\n\t\t\tif(akking[j]=='A') if((blxs[1])&&(!blxs[2])&&(!blxs[3])&&(!blxs[4])) score++;//\u6709\u4e14\u53ea\u6709A\uff081000\uff09 \n\t\t\tif(akking[j]=='B') if((!blxs[1])&&(blxs[2])&&(!blxs[3])&&(!blxs[4])) score++;//\u6709\u4e14\u53ea\u6709B\uff080100\uff09\n\t\t\tif(akking[j]=='C') if((!blxs[1])&&(!blxs[2])&&(blxs[3])&&(!blxs[4])) score++;//\u6709\u4e14\u53ea\u6709C\uff080010\uff09\n\t\t\tif(akking[j]=='D') if((!blxs[1])&&(!blxs[2])&&(!blxs[3])&&(blxs[4])) score++;//\u6709\u4e14\u53ea\u6709D\uff080001\uff09\n\t\t} \n\t\tif(!flag) printf(\"%.1lf\\n\\n\",100.0*score/m);//\u4e24\u4e2a\u6362\u884c \n\t\telse putchar('\\n');\n\t}\n\treturn ~~(0-0);\n}\n\n\n```",
        "postTime": 1536492613,
        "uid": 90610,
        "name": "\u4faf\u4f73\u660a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3692 \u3010\u590f\u5e7b\u7684\u8003\u8bd5\u3011"
    }
]