[
    {
        "content": "\u5927\u6982\u662f\u5168\u7f51\u7b2c\u4e00\u7bc7\u7528 PGF \u505a\u7684\u9898\u89e3\uff1f\u4e5f\u987a\u4fbf\u666e\u53ca\u4e00\u4e0b PGF \u77e5\u8bc6\u5427\u3002\n\n\u5176\u5b9e\u6211\u5199\u8fd9\u9898\u65f6\u7684\u96be\u70b9\uff0c\u5b8c\u5168\u5728\u4e8e\u5b9e\u73b0\u300c\u9ad8\u7cbe\u5ea6 gcd\u300d+\u300c\u9ad8\u7cbe\u5ea6\u9664\u4ee5\u9ad8\u7cbe\u5ea6\u300d+\u300c\u7b2c\u4e00\u6b21\u5199\u538b\u4f4d\u9ad8\u7cbe\u300d+\u300c\u6781\u9650\u5361\u5e38\u4e0a\u9762\u300d\u2026\u2026\n\n\u4e0a\u9762\u662f\u9898\u5916\u8bdd\uff0c\u4e0b\u9762\u662f\u6b63\u6587\u3002\n\n_____\n\n# \u6982\u7387\u578b\u751f\u6210\u51fd\u6570\n\n\u6982\u7387\u578b\u751f\u6210\u51fd\u6570\u672c\u8d28\u4e0a\u5c31\u662f\u666e\u901a\u578b\u751f\u6210\u51fd\u6570\uff0c\u53ea\u4e0d\u8fc7\u591a\u4e86\u4e00\u4e2a\u5bf9\u5e94\u5173\u7cfb\u3002\n\n\u5373\uff0c\u5982\u679c\u5bf9\u4e8e\u67d0\u4e2a\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf $X\\in\\mathbb Z$ \uff0c\u5b58\u5728\u6570\u5217 $\\{a_n\\}$ \u6ee1\u8db3 $\\Pr(X=i)=a_i$ \uff0c\u90a3\u4e48\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf $X$ \u7684 **\u6982\u7387\u578b\u751f\u6210\u51fd\u6570$(\\mathbf{PGF})$** \u4e3a\n\n$$\\mathscr{F}(z)=\\sum_{i=0}^{\\infty} \\Pr(X=i) z^i$$\n\n\u90a3\u4e48\u9996\u5148\u6709\n\n$$\\mathscr{F}(1)=\\sum_{i=0}^{\\infty}[z^i]\\mathscr{F}(z)=1$$\n\n\u540c\u65f6\u6839\u636e\u671f\u671b\u7684\u5b9a\u4e49\n\n$$E(X)=\\sum_{i=0}^{\\infty}i\\Pr(X=i)$$\n\n\u53ef\u4ee5\u77e5\u9053\u671f\u671b\u5c31\u662f $\\mathscr{F}$ \u7684\u4e00\u9636\u5bfc\u6570\u7cfb\u6570\u548c\uff0c\u5373\n\n$$E(X)=\\sum_{i=0}^{\\infty}[z^i]\\dfrac{\\mathrm{d}}{\\mathrm{d} z}\\mathscr{F}(z)$$\n\n\u90a3\u4e48\u540c\u65f6\u6839\u636e\u65b9\u5dee\u7684\u5b9a\u4e49\u4ee5\u53ca\u671f\u671b\u7684\u7ebf\u6027\u6027\u53ef\u4ee5\u5f97\u5230\n\n$$\\mathsf{Var}(X)=E\\left((X-E(X))^{2}\\right)=E\\left(X^{2}-2\\cdot X \\cdot E(X)+E(X)^{2}\\right)=E\\left(X^{2}\\right)-E(X)^{2}$$\n\n\u4ece\u800c\u6709 \n\n$$\\mathsf{Var}(X)=\\sum_{i=0}^{\\infty}[z^i]\\left(\\dfrac{\\mathrm{d^2}}{\\mathrm{d} z^2}\\mathscr{F}(z)+\\dfrac{\\mathrm{d}}{\\mathrm{d} z}\\mathscr{F}(z)-\\left(\\dfrac{\\mathrm{d}}{\\mathrm{d} z}\\mathscr{F}(z)\\right)^2\\right)$$\n\n\u662f\u56e0\u4e3a\n\n$$E(X^2)=\\sum_{i=0}^{\\infty}i^2\\cdot \\Pr(X=i)=\\sum_{i=0}^{\\infty}i\\cdot (i-1)\\cdot \\Pr(X=i)+\\sum_{i=0}^{\\infty}i\\cdot \\Pr(X=i)$$\n\n\u53ef\u4ee5\u77e5\u9053\u524d\u9762\u4e00\u9879\u662f\u4e8c\u9636\u5bfc\uff0c\u540e\u9762\u4e00\u9879\u662f\u4e00\u9636\u5bfc\u3002\n\n\u7136\u540e\u2026\u7136\u540e\u5c31\u53ef\u4ee5\u505a\u9898\u4e86(\u5012)\u3002\n\n# ZJOI2013 \u629b\u786c\u5e01\n\n> \u7ed9\u51fa\u4e00\u4e2a\u4e24\u9762\u7684\u5747\u5300\u9ab0\u5b50\uff0c\u6b63\u9762\u548c\u53cd\u9762\u7684\u6982\u7387\u5206\u522b\u662f $\\frac{a}{b}$ \u548c $1-\\frac{a}{b}$ \u3002\u5e76\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 $01$ \u5e8f\u5217 $A$ \u3002\n>\n> \u540c\u65f6\u6709\u4e00\u4e2a\u4e00\u5f00\u59cb\u4e3a\u7a7a\u7684\u5e8f\u5217\u3002\u6bcf\u6b21\u63b7\u9ab0\u5b50\uff0c\u5982\u679c\u662f\u53cd\u9762\uff0c\u5c31\u5728\u5f53\u524d\u5e8f\u5217\u672b\u5c3e\u5199\u4e00\u4e2a $1$ \uff0c\u5426\u5219\u5199\u4e00\u4e2a $0$ \uff0c\u5982\u679c\u53d1\u73b0\u6b64\u65f6\u5e8f\u5217\u4e2d\u6070\u597d\u6709\u4e00\u4e2a\u8fde\u7eed\u5b50\u4e32\u662f $A$ \u5219\u505c\u6b62\u3002\u6c42\u671f\u671b\u591a\u5c11\u6b21\u624d\u4f1a\u505c\u6b62\u64cd\u4f5c\u3002\n>\n> \u6211\u8ba4\u4e3a\u5408\u7406\u7684\u6570\u636e\u8303\u56f4\uff1a$1\\leq n\\leq 10^6$\uff0c\u6982\u7387\u5bf9 $998244353$ \u53d6\u6a21\u3002\n>\n> ZJOI2013 \u7684\u6570\u636e\u8303\u56f4\uff1a$1\\leq n\\leq 10^3$ \u8f93\u51fa\u786e\u5207\u6982\u7387\u5e76\u4fdd\u7559**\u65e2\u7ea6\u5206\u6570\u5f62\u5f0f**\u3002\n\n\u8003\u8651\u8bbe $f_i$ \u8868\u793a\u6254\u4e86 $i$ \u6b21\u9ab0\u5b50\u4e4b\u540e\u6070\u597d\u505c\u6b62\u7684\u6982\u7387\uff0c$g_i$ \u8868\u793a\u6254\u4e86 $i$ \u6b21\u9ab0\u5b50\u4e4b\u540e\u4ecd\u672a\u7ed3\u675f\u7684\u6982\u7387\u3002\u540c\u65f6\u8003\u8651\u5bf9\u8fd9\u4e24\u4e2a\u4e1c\u897f\u5efa\u7acb PGF\uff0c\u5206\u522b\u4e3a $\\mathscr{F,G}$\uff0c \u90a3\u4e48\u6709\u65b9\u7a0b\uff1a\n\n$$\\mathscr F(z)+\\mathscr G(z)=z\\cdot \\mathscr G(z)+1\\qquad (1)$$\n\n\u5176\u610f\u4e49\u662f\uff0c\u6254\u4e86\u4e00\u6b21\u4e4b\u540e\uff0c\u8981\u4e48\u7ed3\u675f\u8981\u4e48\u4e0d\u7ed3\u675f\uff0c$\\mathscr G$ \u53f3\u79fb\u4e00\u4f4d\u53ef\u4ee5\u770b\u4f5c\u662f $g_{i-1}$ \u3002\u540c\u65f6\u8fd8\u6709\n\n$$\\mathscr G(z)\\cdot \\Pr(A[1...n])=\\sum_{i=1}^n \\mathscr{F}(z)\\cdot \\Pr(A[i+1...n])\\cdot \\zeta(i)\\qquad (2)$$\n\n\u5176\u610f\u4e49\u662f\uff0c\u8003\u8651\u5728\u73b0\u5728\u7684\u4e32\u540e\u9762\u63a5\u4e00\u4e2a\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u8fc7\u7a0b\u76f4\u63a5\u7ed3\u675f\u7684\u4e32\uff0c\u4e5f\u5c31\u662f\u63a5\u4e00\u4e2a $A$\uff0c$\\Pr(s[1...n])$ \u8868\u793a\u4e32 $s$ \u51fa\u73b0\u7684\u6982\u7387\uff0c\u90a3\u4e48\u53ef\u4ee5\u77e5\u9053\u7b49\u5f0f\u5de6\u8fb9\u7684\u542b\u4e49\u662f\u300c\u4e00\u5b9a\u53ef\u4ee5\u7ed3\u675f\u300d\uff1b\u7b49\u5f0f\u53f3\u8fb9\u5219\u662f\u8003\u8651\u53ef\u80fd\u4f1a\u5b58\u5728\u6ca1\u6709\u52a0\u6ee1 $n$ \u4e2a\u3001\u53ea\u52a0\u4e86\u524d $i$ \u4e2a\u5b57\u7b26\u5c31\u7ed3\u675f\u7684\u60c5\u51b5\uff0c\u591a\u4e58\u4e00\u4e2a $\\Pr(A[i+1...n])$ \u672c\u8eab\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u53ea\u662f\u4e3a\u4e86\u6784\u9020\u51fa\u7b49\u5f0f\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e24\u8fb9\u90fd\u94a6\u5b9a\u6254\u4e86 $n$ \u6b21\u2014\u2014\u53d1\u73b0\u8fd9\u79cd\u60c5\u51b5\u8981\u662f\u60f3\u8981\u51fa\u73b0\uff0c\u5c31\u5fc5\u987b\u6ee1\u8db3 $A[1...i]$ \u662f $A$ \u7684\u4e00\u4e2a $\\sf border$ \uff0c\u6240\u4ee5 $\\zeta(i)=[A[1...i]\\in\\mathbf{Border}]$ .\n\n\u4e4b\u540e\u8003\u8651\u5982\u4f55\u6d88\u5143\u3002\u9996\u5148\u5bf9 $(1)$ \u5f0f\u6c42\u5bfc\u53ef\u4ee5\u5f97\u5230\n\n$$\\dfrac{\\mathrm{d}}{\\mathrm{d} z}\\mathscr{F}(z)+\\dfrac{\\mathrm{d}}{\\mathrm{d} z}\\mathscr{G}(z)=\\dfrac{\\mathrm{d}}{\\mathrm{d} z}\\mathscr{G}(z)\\cdot z+\\mathscr{G}(z)\\cdot 1$$\n\n\u4e5f\u5c31\u662f\u53ef\u4ee5\u77e5\u9053 \n\n$$\\dfrac{\\mathrm{d}}{\\mathrm{d} z}\\mathscr{F}(z)=\\mathscr{G}(z)$$\n\n\u540c\u65f6\u5bf9\u4e8e $(2)$ \u5f0f\uff0c\u5c06 $z=1$ \u4ee3\u5165\u53ef\u4ee5\u5f97\u5230\n\n$$\\mathscr{G}(1)\\cdot \\Pr(A[1...n]) =\\sum_{i=1}^n\\mathscr{F}(1)\\cdot \\zeta(i)\\cdot \\Pr(A[i+1...n])$$\n\n\u56e0\u4e3a $\\mathscr{F}(1)=1$ \uff0c\u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\n\n$$\\mathscr{G}(1)=\\dfrac{\\sum_{i=1}^n \\zeta(i)\\cdot \\Pr(A[i+1...n])}{\\Pr(A[1...n])}$$\n\n\u7136\u540e\u6839\u636e\n\n$$E(X)=\\dfrac{\\mathrm{d}}{\\mathrm{d} z}\\mathscr{F}(1)$$\n\n\u53d1\u73b0\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n\u4f46\u662f\u6ce8\u610f\u672c\u9898\u8981\u6c42\u4ee5\u65e2\u7ea6\u5206\u6570\u7684\u5f62\u5f0f\u4fdd\u7559\u7cbe\u786e\u503c\u3002\u56e0\u4e3a\u6211\u597d\u4e45\u597d\u4e45\u6ca1\u5199\u8fc7\u9ad8\u7cbe\u5ea6\u4e86\uff0c\u4e8e\u662f\u5c31\u60f3\u501f\u6b64\u673a\u4f1a\u5c01\u88c5\u4e00\u4e2a\u6a21\u677f\u3002\u7136\u540e\u2026\u7136\u540e\u5c31\u5199\u4e86\u5feb $7h+$\u3002\u6ce8\u610f\u5230\u7531\u4e8e\u8981\u6c42\u65e2\u7ea6\u5206\u6570\uff0c\u6240\u4ee5\u8981\u5199\u9ad8\u7cbe\u5ea6gcd\uff0c\u5199\u6cd5\u53ef\u4ee5\u501f\u9274 `[SDOI2009]Super GCD` \uff0c\u540c\u65f6\u8fd8\u8981\u5199\u9ad8\u7cbe\u9664\u9ad8\u7cbe\uff0c\u4e2a\u4eba\u6ca1\u6709\u627e\u5230\u4ec0\u4e48\u597d\u65b9\u6cd5\uff0c\u4e8e\u662f\u5c31\u5199\u7684\u4e8c\u5206\uff0c\u590d\u6742\u5ea6\u5927\u6982\u662f $L^2\\log V$ \u7684\u6837\u5b50\u3002\n\n\u7136\u540e\u590d\u6742\u5ea6\u4f3c\u4e4e\u662f $n\\cdot L^2\\log V$ \uff0c\u5e76\u4e0d\u53ef\u4ee5\u8fc7\uff0c\u4e8e\u662f\u8003\u8651\u526a\u679d+\u5361\u5e38\uff1a\n\n0\u3001\u2026\u9ad8\u7cbe\u5ea6\u538b\u4f4d\u662f\u5fc5\u8981\u7684\u5427\uff1f\u8fd9\u8fb9\u6211\u9009\u62e9\u538b $8$ \u4f4d\uff0c\u56e0\u4e3a\u53d1\u73b0 $10^3\\cdot 10^{16}$ \u6070\u597d\u5361\u5230\u4e86 `long long` \u7684\u4e0a\u754c\u3002\n\n1\u3001\u53d1\u73b0\u4e8c\u5206\u65f6\u5de6\u53f3\u8fb9\u754c\u53ef\u4ee5\u7f29\u77ed\u5f88\u591a\uff0c\u5373 $l,r$ \u90fd\u81f3\u591a\u548c $V / \\gcd$ \u7684\u957f\u5ea6\u76f8\u5dee $1$ \uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u8fd9\u4e2a\u6765\u786e\u5b9a\u8fb9\u754c\u3002\u4eb2\u6d4b\u53ef\u4ee5\u5feb\u5927\u6982 $6$ \u500d\u5de6\u53f3(\u4f46\u662f\u8fd8\u662f T\uff0c\u6781\u9650\u6570\u636e\u5927\u6982\u8981\u8dd1 $4s+$) \u3002\n\n2\u3001\u53d1\u73b0\u8ba1\u7b97\u7b54\u6848\u65f6\uff0c\u5c55\u5f00\u540e\u5b58\u5728\u5f88\u591a\u516c\u56e0\u5f0f\u3002\u4e8e\u662f\u53ef\u4ee5\u63d0\u53d6\u516c\u56e0\u5f0f\u4e4b\u540e\u518d\u8ba1\u7b97\u3002\u4eb2\u6d4b\u53ef\u4ee5\u5feb $4$ \u500d\u5de6\u53f3\u3002\n\n\u7136\u540e\u2026\u5927\u6982\u5c31\u8fc7\u4e86\u3002\u4e2d\u95f4\u5199\u4e86\u5f88\u4e45\u7684\u539f\u56e0\u5728\u4e8e\uff0c\u6211\u672c\u6765\u60f3\u5c1d\u8bd5 FFT\uff0c\u540e\u6765\u53d1\u73b0\u81ea\u5df1\u6ca1\u6709\u5c01\u88c5\u597d\u7684 FFT\u2026\u56e7\u2026\u5199\u4e86\u534a\u5929\u53d1\u73b0\u81ea\u5df1 FFT \u7684\u5e38\u6570\u8fd8\u4e0d\u5982\u538b\u4f4d\u5feb\u2026\u7136\u540e\u5c31\u6ca1\u6709\u7136\u540e\u4e86\u3002\n\n\u4e8e\u662f\u6700\u540e\u4ee3\u7801 $11k$ \u5de6\u53f3\u2026\u5982\u679c\u60f3\u7684\u8bdd\u53ef\u4ee5\u53bb[\u8fd9\u91cc](https://www.luogu.com.cn/blog/pks-LOVING/dai-ma-cun-dang)\u83b7\u53d6\u4ee3\u7801\u3002\n\n\n\n\n\n",
        "postTime": 1588581742,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u4ee5\u300cZJOI2013 \u629b\u77f3\u5b50\u300d\u4e3a\u5f15\u5b50\uff0c\u6d45\u8c08\u4e00\u7c7b\u6982\u7387\u578b\u751f\u6210\u51fd\u6570\u7684\u5e94\u7528(\u90e8\u5206)"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P3334)\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a~~\u81ea\u8ba4\u4e3a\u5f88\u7b80\u5355\u7684~~\u505a\u6cd5\u3002\n\n\u4e00\u9053\u957f\u5f97\u5f88\u50cf\u7684\u9898[P4548 [CTSC2006]\u6b4c\u5531\u738b\u56fd](https://www.luogu.com.cn/problem/P4548)\u3002\n\n\u7136\u540e\u6709\u4e00\u4e2a[\u6709\u8da3\u7684\u7406\u8bba](https://www.zhihu.com/question/330408241/answer/777567811)\u3002\n\n\u56e0\u4e3a\u8fd9\u9053\u9898\u91cc\u786c\u5e01\u51fa\u6b63\u53cd\u9762\u7684\u6982\u7387\u662f\u4e0d\u7b49\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u8d4c\u573a\u7684\u8d54\u7387\u6539\u4e00\u4e0b\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6b63\u9762\u7684\u6982\u7387\u662f $\\frac{1}{3}$\uff0c\u53cd\u9762\u7684\u6982\u7387\u662f $\\frac{2}{3}$\uff0c\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u8d4c\u5f92\u7528 $x$ \u5143\u538b\u4e86\u6b63\u9762\uff0c\u90a3\u4e48\u5982\u679c\u5b83\u8d4c\u5bf9\u4e86\u5c06\u83b7\u5f97 $3x$ \u5143\uff0c\u5982\u679c\u538b\u53cd\u9762\u8d4c\u5bf9\u4e86\u5c06\u83b7\u5f97 $\\frac{3}{2} x$ \u5143\u3002\n\n\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684\u8fd9\u4e2a\u8d4c\u535a\u8fd8\u662f\u201c\u516c\u5e73\u201d\u7684\u3002\n\n\u518d\u53d9\u8ff0\u4e00\u4e0b\u6211\u4eec\u5f00\u8d4c\u573a\u7684\u8fc7\u7a0b\uff1a\n\n\u5047\u8bbe\u5f53\u524d\u7684\u6307\u5b9a\u5e8f\u5217\u662f $ S=\\{ 1,0,0,1,0,0,1 \\} $\u3002\uff08\u8bbe 1 \u4e3a\u6b63\u9762 0 \u4e3a\u53cd\u9762\uff09\n\n\u6bcf\u65f6\u523b\u4f1a\u8fdb\u6765\u4e00\u4f4d\u5e26\u7740 $1$ \u5143\u94b1\u7684\u8d4c\u5f92\uff0c\u4ed6\u4f1a\u628a\u81ea\u5df1\u7684\u5168\u90e8\u94b1\u8d22\u538b\u5728 $S_1$ \u4e0a\uff0c\u5982\u679c\u538b\u4e2d\u4e86\u518d\u5728\u4e0b\u4e00\u4e2a\u65f6\u95f4\u5355\u4f4d\u628a\u628a\u5168\u90e8\u7684\u94b1\u538b\u5728 $S_2$ \u4e0a\u2026\u2026\u76f4\u5230\u4e00\u6b21\u538b\u9519\u4e86\u9000\u573a\u6216\u4e00\u76f4\u538b\u5230 $S$ \u6700\u540e\u4e00\u4f4d\u5927\u80dc\u79bb\u573a\u3002\n\n\u5047\u8bbe\u73b0\u5728\u7b2c $N$ \u4f4d\u8d4c\u5f92\u7b2c\u4e00\u4e2a\u5b8c\u6210\u4e86\u76f4\u5230 $S$ \u7684\u6700\u540e\u4e00\u4f4d\u5168\u90e8\u538b\u4e2d\u7684\u6210\u5c31\uff0c\u5728\u8fd9\u65f6\u6211\u4eec\u5173\u95ed\u8d4c\u573a\uff0c\u601d\u8003\u4e00\u4e0b\u4e00\u5171\u4f1a\u6709\u591a\u5c11\u8d4c\u5f92\u5e26\u7740\u591a\u5c11\u94b1\u79bb\u5f00\u8d4c\u573a\u3002\n\n\u7b2c $N$ \u4f4d\u5e26\u7740 $3^3 \\times (\\frac{2}{3})^4$ \u5143\u79bb\u573a\u3002\n\n\u7b2c $N+3$ \u4f4d\u5e26\u7740 $ 3^2 \\times (\\frac{2}{3})^2 $ \u5143\u79bb\u573a\u3002\uff08\u4ed6\u5728\u538b $S_1$ \u65f6\u7b2c $N$ \u540d\u8d4c\u5f92\u6b63\u597d\u5728\u538b $S_4$\uff0c\u800c $S_{[1,4]}$ \u548c $S_{[4,7]}$ \u662f\u76f8\u7b49\u7684\uff09\n\n\u7b2c $N+6$ \u4e3a\u5e26\u7740 $ 3 $ \u5143\u79bb\u573a\u3002\uff08$S_{[1,1]}$ \u548c $S_{[7,7]}$ \u76f8\u7b49\uff09\n\n\u770b\u5230\u8fd9\u4f60\u5e94\u8be5\u5df2\u7ecf\u60f3\u5230\u7528 KMP \u6765\u5339\u914d\u6ee1\u8db3$S_{[1,a]} =S_{[N-a+1,N]} $ \u7684 $a$ \u4e86\u3002\uff08\u8bbe\u5e8f\u5217\u957f\u5ea6\u4e3a $N$\uff09\n\n\u6211\u4eec\u7684\u8d4c\u573a\u5e94\u8be5\u662f\u4e0d\u4e8f\u4e0d\u8d5a\u7684\uff0c\u800c\u4e00\u5171\u6709 $ 3^3 \\times  (\\frac{2}{3})^4 + 3^2 \\times (\\frac{2}{3})^2 + 3$ \u5143\u88ab\u5e26\u4e86\u51fa\u53bb\uff0c\u90a3\u4e48\u4e5f\u5e94\u8be5\u6709\u8fd9\u4e48\u591a\u94b1\u88ab\u5e26\u8fdb\u6765\u3002\n\n\u800c\u6bcf\u65f6\u523b\u90fd\u4f1a\u6709 $1$ \u5143\u94b1\u88ab\u5e26\u8fdb\u6765\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u671f\u671b\u5c31\u662f $ 3^3 \\times  (\\frac{2}{3})^4 + 3^2 \\times (\\frac{2}{3})^2 + 3$ \u3002\n\n\u56e0\u4e3a\u7b54\u6848\u8981\u4fdd\u7559\u5206\u6570\uff0c\u6240\u4ee5\u522b\u5fd8\u4e86\u5199\u9ad8\u7cbe~~\u5c5e\u5b9e\u6bd2\u7624~~\u3002\n\ntips\uff1a\u56e0\u4e3a\u6240\u6709\u7684\u5206\u5b50\u5206\u6bcd\u90fd\u662f 100 \u4ee5\u5185\u7684\u6570\u4e58\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u5316\u7b80\u65f6\u4e0d\u7528\u53bb\u6c42 $\\gcd$\uff0c\u53ea\u8981\u7528 $[1,100]$ \u4e4b\u95f4\u7684\u6570\u53bb\u8bd5\u9664\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define int long long\nusing namespace std;\nconst int MAXN = 2e3 + 50;\nconst int base = 100000000;\ninline int gcd(int x, int y)\n{\n    if (!y)\n        return x;\n    return gcd(y, x % y);\n}\nstruct pp\n{\n    int a[MAXN];\n    int siz;\n    void pushup()\n    {\n        for (int i = 0; i < siz; ++i)\n            if (a[i] >= base)\n            {\n                a[i + 1] += a[i] / base;\n                a[i] %= base;\n                if (i == siz - 1)\n                    siz++;\n            }\n    }\n    void pushdown()\n    {\n        for (int i = siz - 1; i; --i)\n        {\n            if (a[i])\n                break;\n            siz--;\n        }\n    }\n    void print()\n    {\n        printf(\"%lld\", a[siz - 1]);\n        for (int i = siz - 2; i >= 0; --i)\n        {\n            printf(\"%08lld\", a[i]);\n        }\n    }\n};\npp operator+(pp a, pp b)\n{\n    if (a.siz < b.siz)\n        swap(a, b);\n    for (int i = 0; i < a.siz; ++i)\n        a.a[i] += b.a[i];\n    a.pushup();\n    return a;\n}\npp operator-(pp a, pp b)\n{\n    int siz = max(a.siz, b.siz);\n    for (int i = 0; i < siz; ++i)\n        a.a[i] -= b.a[i];\n    for (int i = 0; i < siz; ++i)\n        if (a.a[i] < 0)\n        {\n            a.a[i] += base;\n            a.a[i + 1]--;\n        }\n    a.pushdown();\n    return a;\n}\npp operator*(pp a, pp b)\n{\n    pp c;\n    memset(c.a, 0, sizeof(c.a));\n    c.siz = a.siz + b.siz;\n    for (int i = 0; i < a.siz; ++i)\n        for (int j = 0; j < b.siz; ++j)\n            c.a[i + j] += a.a[i] * b.a[j];\n    c.pushup();\n    c.pushdown();\n    return c;\n}\npp operator*(pp a, int b)\n{\n    for (int i = 0; i < a.siz - 1; ++i)\n        a.a[i] *= b;\n    a.pushup();\n    return a;\n}\npp operator/(pp a, int b)\n{\n    pp c;\n    memset(c.a, 0, sizeof(c.a));\n    c.siz = a.siz;\n    int now = 0;\n    for (int i = a.siz - 1; i >= 0; --i)\n    {\n        now = now * base + a.a[i];\n        if (now >= b)\n        {\n            c.a[i] = now / b;\n            now %= b;\n        }\n    }\n    c.pushdown();\n    return c;\n}\nint operator%(pp a, int b)\n{\n    int now = 0;\n    for (int i = a.siz - 1; i >= 0; --i)\n    {\n        now = now * base + a.a[i];\n        if (now >= b)\n            now %= b;\n    }\n    return now;\n}\nstruct node\n{\n    pp a, b;\n    void simp()\n    {\n        for (int i = 2; i <= 100; ++i)\n        {\n            // a.print();\n            // cout << \" \";\n            // b.print();\n            // cout << i << \":\";\n            // cout << a % i << \" \" << b % i << endl;\n            while (!(a % i) && !(b % i))\n            {\n                // cout << i << \":\";\n                // a.print();\n                // cout << \"*\";\n                // b.print();\n                // cout << endl;\n                a = a / i;\n                b = b / i;\n            }\n        }\n    }\n    node(){}\n    node(int x, int y)\n    {\n        memset(a.a, 0, sizeof(a.a));\n        memset(b.a, 0, sizeof(b.a));\n        // cout << x << \" \" << y << \" ---\" << endl;\n        a.a[0] = x;\n        b.a[0] = y;\n        a.siz = 1;\n        b.siz = 1;\n        // cout << \"--\" << endl;\n        simp();\n    }\n    void print()\n    {\n        a.print();\n        putchar('/');\n        b.print();\n        putchar('\\n');\n    }\n};\nnode operator+(node x, node y)\n{\n    node c;\n    c.a = x.a * y.b + y.a * x.b;\n    c.b = y.b * x.b;\n    c.simp();\n    return c;\n}\nnode operator*(node x, node y)\n{\n    node c;\n    c.a = x.a * y.a;\n    c.b = x.b * y.b;\n    c.simp();\n    return c;\n}\nint N;\nnode p1, p2, n1, n2;\nnode pren[MAXN];\nchar s[MAXN];\nint nxt[MAXN];\nsigned main()\n{\n    int t1, t2;\n    scanf(\"%lld%lld\", &t1, &t2);\n    n1 = node(t2, t1);\n    n2 = node(t2, t2 - t1);\n    // n1.print();\n    // n2.print();\n    // cout << \"---\" << endl;\n    scanf(\"%s\", s + 1);\n    N = strlen(s + 1);\n    for (int i = 2, j = 0; i <= N; ++i)\n    {\n        while (j && s[j + 1] != s[i])\n            j = nxt[j];\n        if (s[j + 1] == s[i])\n            ++j;\n        nxt[i] = j;\n    }\n    // cout << \"--\" << endl;\n    pren[0] = node(1, 1);\n    for (int i = 1; i <= N; ++i)\n    {\n        if (s[i] == 'H')\n            pren[i] = pren[i - 1] * n1;\n        else\n            pren[i] = pren[i - 1] * n2;\n        // pren[i].print();\n    }\n    node ans = node(0, 1);\n    for (int i = N; i; i = nxt[i])\n        ans = ans + pren[i];\n    ans.print();\n    return 0;\n}\n```\n",
        "postTime": 1616594175,
        "uid": 63743,
        "name": "DrBit",
        "ccfLevel": 6,
        "title": "P3334 [ZJOI2013]\u629b\u786c\u5e01 \uff08\u6982\u7387+\u9785\u8bba+\u9ad8\u7cbe\uff09"
    },
    {
        "content": "\u4ee4 $dp_i$ \u8868\u793a\u73b0\u5728\u629b\u51fa\u7684\u5e8f\u5217\u4e0e $S$ \u7684\u7684\u524d $i-1$ \u4e2a\u5339\u914d\uff0c\u60f3\u8981\u629b\u5230\u6709 $i$ \u4e2a\u5339\u914d\u7684\u671f\u671b\u6b65\u6570\u3002$p_{i,0}$ \u8868\u793a\u629b\u4e00\u6b21\u7b49\u4e8e $S_i$ \u7684\u6982\u7387\uff0c$p_{i,1}$ \u8868\u793a\u629b\u4e00\u6b21\u4e0d\u7b49\u4e8e $S_i$ \u7684\u6982\u7387\u3002\n\n\u8f6c\u79fb\u8003\u8651\u8ba8\u8bba\u8fd9\u4e00\u6b21\u629b\u51fa\u7684\u7ed3\u679c\u662f\u5426\u4e0e $S_i$ \u76f8\u7b49\u3002\n\n\u5982\u679c\u76f8\u7b49\uff1a\u671f\u671b\u6b65\u6570 $1$\uff0c\u6982\u7387 $p_{i,0}$\u3002\n\n\u5982\u679c\u4e0d\u7b49\uff1a\n\n\u90a3\u4e48\u73b0\u5728\u629b\u51fa\u7684\u7ed3\u679c\u7684\u4e00\u4e2a\u540e\u7f00\u53ef\u80fd\u4e0e $S$ \u7684\u4e00\u4e2a\u957f\u4e3a $len_i$ \u7684\u524d\u7f00\u76f8\u7b49\uff0c\u53ef\u4ee5\u628a\u76ee\u524d\u72b6\u6001\u5f53\u6210\u629b\u5bf9\u4e86 $len_i$ \u4e2a\u53bb\u8f6c\u79fb\u3002\u671f\u671b\u6b65\u6570 $(\\sum\\limits_{k=len_i+1}^{i}dp_k)+1$\uff0c\u6982\u7387 $p_{i,1}$\u3002\n\n\u53ef\u4ee5\u5f97\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$dp_i=p_{i,0}+p_{i,1}\\times((\\sum\\limits_{k=len_i+1}^{i}dp_k)+1)$$\n\n\u628a $dp_i$ \u5168\u90e8\u79fb\u5230\u5de6\u8fb9\uff1a\n\n$$p_{i,0}\\times dp_i=p_{i,0}+p_{i,1}\\times((\\sum\\limits_{k=len_i+1}^{i-1}dp_k)+1)$$\n\n\u628a $p_{i,0}$ \u518d\u9664\u8fc7\u53bb\uff0c\u7528\u524d\u7f00\u548c\u7ef4\u62a4\u5373\u53ef\u3002\n\n$len_i$ \u5bb9\u6613\u7528 KMP \u5728 $O(|S|^2)$ \u7684\u65f6\u95f4\u6c42\u51fa\u3002\n\n\u4f46\u662f\u8fd9\u9898\u8981\u8f93\u51fa\u5206\u6570\uff0c\u5206\u5b50\u548c\u5206\u6bcd\u9700\u8981\u9ad8\u7cbe\u5ea6\u5b58\u50a8\uff0c\u9700\u8981\u652f\u6301\u9ad8\u7cbe $\\gcd$\u3001\u9ad8\u7cbe\u9664\u3002\n\n\u7136\u540e\u53d1\u73b0 $dp$ \u7684\u5206\u6bcd\u6bcf\u6b21\u53ea\u4f1a\u4e58 $a,b-a,b$ \u4e2d\u7684\u4e00\u4e2a\uff0c\u4e8e\u662f\u4e0d\u7528\u5199 $\\gcd$ \u4e86\uff0c\u76f4\u63a5\u4e00\u4e2a\u4e2a\u8bd5\u9664\u3002\u8bd5\u9664 $x$ \u65f6\u76f4\u63a5\u9664 $x^3$\uff0c\u8fd9\u6837\u666e\u901a\u9ad8\u7cbe\u5c31\u80fd\u8dd1\u8fc7\u53bb\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(|S|^3)$\uff0c\u4f46\u662f\u5361\u5e38\u540e\u80fd\u8fc7\u3002[\u4ee3\u7801](https://www.luogu.com.cn/paste/ze9p65dj)\u3002",
        "postTime": 1678082318,
        "uid": 431487,
        "name": "_zdc_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3334"
    },
    {
        "content": "\u60f3\u8d77\u6765\u5728\u51c6\u5907 NOIP2017 \u7684\u65f6\u5019\u770b\u8fc7\u8fd9\u4e2a\u9898\u4f46\u662f\u6ca1\u6709\u5199\uff0c\u521a\u597d\u6700\u8fd1\u5728\u505a dp \u9898\uff0c\u5c31\u62ff\u6765\u7ec3\u4e00\u4e0b\uff0c\u7ed3\u679c\u9ad8\u7cbe\u5ea6\u90e8\u5206\u7684\u4e00\u4e9b\u5c0f\u9519\u8bef\u8c03\u4e86\u6211\u4e00\u4e07\u5e74\u2026\u2026\n\n????\n\n\n\n\u9898\u89e3\n\u542c\u8bf4\u8fd9\u4e00\u7c7b\u968f\u673a\u6e38\u8d70\u7684\u8fc7\u7a0b\u6709\u4e00\u4e2a\u540d\u5b57\u53eb\u505a \u201c\u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b\u201d\uff0c\uff0c\uff0c\n\n\u56e0\u4e3a\u662f\u8981\u6c42\u51fa\u73b0\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u8003\u8651 KMP \u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 $i$ \u53ef\u4ee5\u8f6c\u79fb\u5230 $i+1$ \u548c $fail_{i+1}$.\n\n\u8bbe $f_i$ \u8868\u793a\u5df2\u7ecf\u5339\u914d\u5230\u4e86 $i$\uff0c\u671f\u671b\u629b\u51e0\u6b21\u3002\u90a3\u4e48\u5f97\u5230\u8f6c\u79fb\uff1a\n\nf_{i+1}=left{ begin{array}{lr} f_i+1+qcdot(f_{i+1}-f_{fail_{i+1}}) &amp; s_{i+1}=H \\ f_i+1+pcdot(f_{i+1}-f_{fail_{i+1}}) &amp; s_{i+1}=T end{array} right.\n\n\u79fb\u4e00\u4e0b\u9879\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f6c\u79fb\u4e86\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u610f\u4e49\u662f\u628a\u4e0b\u4e00\u4f4d\u5339\u914d\u7684\u60c5\u51b5\u8ddf\u4e0b\u4e00\u4f4d\u5931\u914d\u3001\u5e76\u4e14\u4ece $fail_{i+1}$ \u8d70\u5230 $i+1$ \u7684\u671f\u671b\u5408\u8d77\u6765\u3002\u636e\u8bf4\u53ef\u4ee5\u7528\u9ad8\u65af\u6d88\u5143\u5f97\u5230\u8fd9\u4e2a\u65b9\u7a0b\u3002\u5176\u5b9e\u8fd9\u4e2a\u65b9\u7a0b\u548c\u9898\u76ee\u91cc\u7ed9\u7684\u65b9\u7a0b\u975e\u5e38\u50cf\uff0c\u4e0d\u8fc7\u770b\u4e86 Manchery \u7684\u9898\u89e3\u624d\u77e5\u9053\u539f\u6765\u662f\u8981\u7528\u9ad8\u65af\u6d88\u5143\u6c42\u89e3\u7684\u3002\n```\n#define N 1010\nusing namespace std;\ntypedef long long ll;\n\ntemplate <class > inline void read(& x) {\n  x = 0; char ch = getchar(); int f = 1;\n  for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;\n  for (; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n  x *= f;\n}\n\ninline void read(char *s) {\n  char ch = getchar();\n  for (; !(ch == 'H' || ch == 'T'); ch = getchar());\n  for (; ch == 'H' || ch == 'T'; *(++s) = ch, ch = getchar());\n  *(++s) = 0;\n}\n\nint a, b, n, fail[N], nxtH[N], nxtT[N];\nchar s[N];\n\ninline void get_fail() {\n  int j = 0; fail[1] = 0;\n  for (int i = 2; i <= n; ++i) {\n    while (j && s[i] != s[j + 1]) j = fail[j];\n    if (s[i] == s[j + 1]) ++j;\n    fail[i] = j;\n  }\n}\n\nstruct BigInt {\n  const int BASE = 1e8;\n  ll a[N];\n  int   len;\n\n  BigInt() { memset(a, 0, sizeof(a)); len = 0; }\n  BigInt(int x) {\n    memset(a, 0, sizeof(a)); len = 0;\n    if (x == 0) len = 1;\n    for (; x; x /= BASE) a[++len] = x % BASE;\n  }\n  BigInt &operator=(BigInt x) { memcpy(a, x.a, sizeof(x.a)); len = x.len; return *this; }\n\n  inline void print() {\n    if (len == 0 || (len == 1 && a[1] == 0)) { putchar('0'); return; }\n    printf(\"%lld\", a[len]);\n    for (int i = len - 1; i; --i) printf(\"%08lld\", a[i]);\n  }\n\n  BigInt operator+(const BigInt &x) {\n    BigInt ret; ret.len = max(len, x.len);\n    for (int i = 1; i <= ret.len; ++i)\n      ret.a[i] += a[i] + x.a[i], ret.a[i + 1] += ret.a[i] / BASE, ret.a[i] %= BASE;\n    if (ret.a[ret.len + 1]) ++ret.len;\n    return ret;\n  }\n\n  BigInt operator-(const BigInt &x) {\n    BigInt ret; memcpy(ret.a, a, sizeof(ret.a)); ret.len = len;\n    for (int i = 1; i <= len; ++i) {\n      ret.a[i] -= x.a[i];\n      if (ret.a[i] < 0) --ret.a[i + 1], ret.a[i] += BASE;\n    }\n    while (ret.len && !ret.a[ret.len]) --ret.len;\n    return ret;\n  }\n\n  BigInt operator*(const BigInt &x) {\n    BigInt ret;\n    for (int i = 1; i <= len; ++i)\n      for (int j = 1; j <= x.len; ++j)\n    ret.a[i + j - 1] += a[i] * x.a[j], ret.a[i + j] += ret.a[i + j - 1] / BASE, ret.a[i + j - 1] %= BASE;\n    ret.len = max(0, len + x.len - 1);\n    if (ret.a[len + x.len]) ++ret.len;\n    return ret;\n  }\n\n  BigInt operator*(int x) {\n    BigInt ret;\n    for (int i = 1; i <= len; ++i) ret.a[i] += a[i] * x, ret.a[i + 1] += ret.a[i] / BASE, ret.a[i] %= BASE;\n    ret.len = len;\n    if (ret.a[ret.len + 1]) ++ret.len;\n    return ret;\n  }\n\n  BigInt operator/(int x) {\n    BigInt ret;\n    ll tmp = 0;\n    for (int i = len; i; --i) tmp = tmp * BASE + a[i], ret.a[i] = tmp / x, tmp %= x;\n    ret.len = len;\n    if (ret.len && !ret.a[ret.len]) --ret.len;\n    return ret;\n  }\n\n  ll operator%(int x) {\n    BigInt tmp;\n    ll ret = 0;\n    for (int i = len; i; --i) ret = ret * BASE + a[i], tmp.a[i] = ret / x, ret %= x;\n    return ret;\n  }\n};\n\nstruct frac {\n  BigInt a, b;\n  frac() { a = BigInt(0), b = BigInt(1); }\n  frac(int a, int b) : a(a), b(b) { simplify(); }\n  frac(BigInt _a, BigInt _b) { a = _a, b = _b; }\n\n  inline void print() { a.print(), putchar('/'), b.print(), putchar('n'); }\n  inline void simplify() { for (int i = 2; i <= 100; ++i) for (; a % i == 0 && b % i == 0; a = a / i, b = b / i); }\n  friend frac operator+(frac A, frac B) { return frac(A.a * B.b + A.b * B.a, A.b * B.b); }\n  friend frac operator-(frac A, frac B) { return frac(A.a * B.b - A.b * B.a, A.b * B.b); }\n  friend frac operator*(frac A, frac B) { return frac(A.a * B.a, A.b * B.b); }\n  friend frac operator/(frac A, frac B) { return frac(A.a * B.b, A.b * B.a); }\n} p, q, f[N];\n\nint main() {\n  read(a), read(b), read(s), n = strlen(s + 1), get_fail();\n  p = frac(a, b), q = frac(b - a, b);\n  if (s[1] == 'H') nxtH[1] = 2, nxtT[1] = 1;\n  else nxtH[1] = 1, nxtT[1] = 2;\n  for (int i = 2; i <= n; ++i)\n    if (s[i] == 'H') nxtH[i] = i + 1, nxtT[i] = nxtT[fail[i - 1] + 1];\n    else nxtT[i] = i + 1, nxtH[i] = nxtH[fail[i - 1] + 1];\n  for (int i = 1; i <= n; ++i) {\n    if (s[i] == 'H') f[i + 1] = (f[i] + frac(1, 1) - q * f[nxtT[i]]) / p;\n    else f[i + 1] = (f[i] + frac(1, 1) - p * f[nxtH[i]]) / q;\n    f[i + 1].simplify();\n  }\n  f[n + 1].simplify(), f[n + 1].print();\n  return 0;\n}\n```",
        "postTime": 1635168717,
        "uid": 316623,
        "name": "2019jd12",
        "ccfLevel": 0,
        "title": "\u9898\u89e3P3334\u629b\u786c\u5e01"
    }
]