[
    {
        "content": "\u611f\u89c9\u5e76\u4e0d\u7528\u7279\u610f\u53bb\u5361\u5e38\u554a\uff0c\u53ea\u8981\u4e0d\u6ee5\u7528memset\u5c31\u80fd\u8f7b\u677e\u5730\u8dd1\u5f88\u5feb\u4e86\n\n\u8fd8\u6709\u8bdd\u8bf4\u867d\u7136\u8fd9\u662f\u9053\u6a21\u677f\u9898\uff0c\u4f46\u6211\u89c9\u5f97[AT1219 \u6b74\u53f2\u306e\u7814\u7a76](https://www.luogu.com.cn/problem/AT1219)\u53ef\u80fd\u624d\u662f\u66f4\u591a\u4eba\u7684\u56de\u6eda\u83ab\u961f\u6a21\u677f\u9898\n\n---\n\n### \u9898\u89e3\uff1a\n\n\u4f20\u7edf\u83ab\u961f\u4f17\u6240\u5468\u77e5\u6709\u4e24\u4e2a\u64cd\u4f5c\uff1a\u589e\u548c\u51cf\n\n\u589e\u7684\u64cd\u4f5c\u4e00\u822c\u60c5\u51b5\u4e0b\u90fd\u662f\u597d\u505a\u7684\uff0c\u4f46\u51cf\u5c31\u4e0d\u4e00\u5b9a\u4e86\n\n\u4f8b\u5982\u672c\u9898\uff0c\u60f3\u8981\u5220\u6700\u5de6\u8fb9\u754c\u7684\u8bdd\uff0c\u5c31\u8981\u77e5\u9053\u6b21\u5de6\u8fb9\u754c\uff0c\u7136\u540e\u53c8\u4f9d\u6b21\u7c7b\u63a8\uff0c\u8fd9\u5c31\u4e0d\u662f\u201c\u4f18\u96c5\u7684\u66b4\u529b\u201d\u4e86\n\n\u800c\u56de\u6eda\u83ab\u961f\u5c31\u662f\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\u7684\u5229\u5668\uff0c\u5927\u81f4\u601d\u60f3\u662f\u5229\u7528\u66f4\u591a\u7684\u589e\u64cd\u4f5c\u4ee3\u66ff\u51cf\u64cd\u4f5c\n\n\u4e5f\u5c31\u662f\u6211\u4eec\u73b0\u5728\u8981\u6784\u9020\u51fa\u4e00\u79cd\u65b9\u6848\uff0c\u590d\u6742\u5ea6\u6709\u4fdd\u969c\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u5f97l\u6307\u9488\u548cr\u6307\u9488\u90fd\u80fd\uff08\u5c3d\u91cf\uff09\u4e00\u76f4\u5f80\u81ea\u5df1\u7684\u6b63\u65b9\u5411\u8d70\n\nr\u6307\u9488\u5f88\u597d\u89e3\u51b3\uff0c\u6392\u5e8f\u65f6\u5c06\u8be2\u95ee\u7684r\u8fb9\u754c\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5c31\u597d\u4e86\n\nl\u6307\u9488\u5462\uff0c\u8fd0\u7528\u5206\u5757\u7684\u601d\u60f3\u6211\u4eec\u53ef\u4ee5\u5c06l\u8fb9\u754c\u5728\u540c\u4e00\u5757\u4e2d\u7684\u8be2\u95ee\u6392\u5e8f\u6392\u5728\u4e00\u8d77\u4ee5\u4fbf\u4e00\u8d77\u5904\u7406\uff0c\u5177\u4f53\u7684\u5904\u7406\u65b9\u6cd5\u5c31\u662f\u4e0d\u65ad\u5730\u5c06l\u6307\u9488\u62c9\u56de\u5757\u7684\u53f3\u8fb9\u754c\uff0c\u62c9\u5230\u8be2\u95ee\u7684\u4f4d\u7f6e\uff0c\u62c9\u56de\u5757\u7684\u53f3\u8fb9\u754c\uff0c\u62c9\u5230\u8be2\u95ee\u7684\u4f4d\u7f6e\u3002\u3002\u3002\n\n\u7a0d\u5fae\u603b\u7ed3\u4e00\u4e0b\uff1a\u5206\u5757\u83ab\u961f\u5c31\u662f\u5c06\u5de6\u8fb9\u754c\u5728\u540c\u4e00\u5757\u4e2d\u7684\u8be2\u95ee\u653e\u5728\u4e00\u8d77\u5904\u7406\uff0cr\u6307\u9488\u53ef\u4ee5\u901a\u8fc7\u6392\u5e8f\u5b9e\u73b0\u5355\u8c03\u79fb\u52a8\uff0c\u800cl\u6307\u9488\u53ef\u4ee5\u4e0d\u65ad\u5730\u62c9\u56de\u5f53\u524d\u5757\u7684\u53f3\u8fb9\uff0c\u518d\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u5355\u8c03\u5730\u5411\u5de6\u79fb\u52a8\uff08\u8111\u8865\u53cd\u590d\u6a2a\u8df3\uff09\uff0c\u7531\u4e8e\u5757\u7684\u5927\u5c0f\u662f\u6839\u53f7\u7684\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u6b21\u8be2\u95ee\uff0cl\u6307\u9488\u7684\u79fb\u52a8\u59cb\u7ec8\u4e0d\u4f1a\u8d85\u8fc7\u6839\u53f7\u6b21\u3002\u53e6\u5916\u6709\u4e9b\u8be2\u95ee\u53ef\u80fd\u5de6\u53f3\u8fb9\u754c\u662f\u5728\u540c\u4e00\u5757\u4e2d\u7684\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u66b4\u529b\u904d\u5386\u4e00\u904d\uff0c\u53cd\u6b63\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u6839\u53f7\u561b\n\n---\n\n\u8ba9\u6211\u4eec\u6765\u770b\u4e0b\u8fd9\u9053\u9898\u7684\u5177\u4f53\u60c5\u51b5\uff1a\n\n\u6211\u4eec\u8bb0\u5de6\u6307\u9488\u4e3a$l$\uff0c\u53f3\u6307\u9488\u4e3a$r$\uff0c\u5f53\u524d\u5757\u7684\u53f3\u8fb9\u754c\uff08\u5206\u754c\u7ebf\uff09\u4e3a$mid$\uff0c$[l,mid]$\u4e3a\u5de6\u533a\u95f4\uff0c$[mid,r]$\u4e3a\u53f3\u533a\u95f4\n\n\u7136\u540e\u7b54\u6848\u4f1a\u6709\u4e09\u79cd\u60c5\u51b5\u51fa\u73b0\uff1a\n\n1. \u7b54\u6848\u5b8c\u5168\u5728\u5de6\u533a\u95f4\u4e2d\n\n1. \u7b54\u6848\u5b8c\u5168\u5728\u53f3\u533a\u95f4\u4e2d\n\n1. \u7b54\u6848\u4e00\u90e8\u5206\u5728\u5de6\u533a\u95f4\u4e2d\uff0c\u4e00\u90e8\u5206\u5728\u53f3\u533a\u95f4\u4e2d\n\n\u6ce8\u610f\u5230\u7b54\u6848\u7684\u53f3\u7aef\u70b9\u662f\u5355\u8c03\u7684\uff0c\u56e0\u6b64\u53d6\u4e2amax\u5373\u53ef\uff0c\u4e0e\u5f53\u524d\u626b\u5230\u7684\u4e0b\u6807\u51cf\u4e00\u51cf\u5c31\u89e3\u51b3\u4e86\u60c5\u51b51\u548c3\n\n\u5bf9\u4e8e\u60c5\u51b52\uff0c\u6211\u4eec\u8981\u989d\u5916\u8bb0\u5f55\u4e00\u4e2a\u503c\uff0c\u8bb0\u5f55\u4e00\u4e2a\u6570\u5728\u53f3\u533a\u95f4\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n\u5047\u5982max\u4e5f\u5728\u53f3\u533a\u95f4\u4e2d\uff0c\u51cf\u4e00\u51cf\uff0c\u5c31\u5f97\u5230\u4e86\u60c5\u51b52\u7684\u7b54\u6848\n\n---\n\n\u7136\u540e\u7b80\u5355\u8bb2\u4e00\u4e0b\u6e05\u7a7a\u6876\u7684\u65b9\u6cd5\n\n\u7528\u66b4\u529b\u7684memset\u80af\u5b9a\u662f\u4e0d\u4f18\u79c0\u7684\uff0c\u56e0\u4e3a\u6709\u8bb8\u591a\u5197\u4f59\u64cd\u4f5c\uff08\u4ed6\u90fd\u6ca1\u8d4b\u8fc7\u503c\uff0c\u4f60\u4e3a\u5565\u8981\u6e05\u7a7a\uff1f\uff09\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u4e9b\u5197\u4f59\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u4e0b\u6211\u4eec\u66fe\u7ecf\u5bf9\u54ea\u4e9b\u6876\u505a\u8fc7\u4fee\u6539\uff0c\u6700\u540e\u5728\u904d\u5386\u4e0b\u8fd9\u4e2a\u6570\u7ec4\u5c06\u90a3\u4e9b\u66fe\u7ecf\u88ab\u4fee\u6539\u8fc7\u7684\u6876\u8d4b\u56de0\u5c31\u597d\u4e86\uff0c\u800c\u8bb0\u5f55\u6570\u7ec4\u7684\u6e05\u7a7a\u53ea\u8981$O(1)$\u5c31\u597d\u4e86\n\n---\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<class t> inline t read(t &x){\n\tchar c=getchar();bool f=0;x=0;\n\twhile(!isdigit(c)) f|=c=='-',c=getchar();\n\twhile(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\tif(f) x=-x;return x;\n}\ntemplate<class t> inline void write(t x){\n\tif(x<0) putchar('-'),write(-x);\n\telse{if(x>9) write(x/10);putchar('0'+x%10);}\n}\n\nconst int N=2e5+5;\nint un,n,m,a[N],ANS[N],ma[N],b[N],bn,num[N],st[N],cn,clear[N];\n//\u53d8\u91cf\u7684\u89e3\u91ca\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u90fd\u6709\u54e6\uff01\uff01\uff01\nstruct que{\n\tint l,r,i;\n\tinline bool operator < (const que &nt) const {\n\t\treturn (b[l]^b[nt.l])?b[l]<b[nt.l]:r<nt.r; //\u5148\u6309\u5de6\u8fb9\u754c\u6240\u5728\u5757\u6392\uff0c\u76f8\u540c\u65f6\u518d\u6309\u53f3\u8fb9\u754c\u6392\n\t}\n}q[N];\n\ninline int max(const int &x,const int &y){\n\treturn x>y?x:y;\n}\n\nint calc(int l,int r){ //\u66b4\u529b\u626b\u4e00\u904d\n\tint last[N],res=0;\n\tfor(int i=l;i<=r;i++) last[a[i]]=0; //\u8bb0\u5f55\u6bcf\u4e2a\u6570\u6700\u65e9\u51fa\u73b0\u7684\u4f4d\u7f6e\n\tfor(int i=l;i<=r;i++) if(!last[a[i]]) last[a[i]]=i; else res=max(res,i-last[a[i]]);\n\treturn res;\n}\n\nsigned main(){\n\tread(n);\n\tint len=sqrt(n); //\u5757\u957f\n\tfor(int i=1;i<=n;i++) num[i]=read(a[i]),b[i]=(i-1)/len+1; //b\u8bb0\u5f55\u6bcf\u4e2a\u4e0b\u6807\u662f\u5728\u54ea\u4e2a\u5757\u4e2d\u7684\n\tbn=b[n]; //\u5757\u6570\n\tsort(num+1,num+1+n);\n\tun=unique(num+1,num+1+n)-num-1;\n\tfor(int i=1;i<=n;i++) a[i]=lower_bound(num+1,num+1+un,a[i])-num; //\u6b63\u5e38\u7684\u79bb\u6563\u64cd\u4f5c\n\tread(m);\n\tfor(int i=1;i<=m;i++){\n\t\tread(q[i].l);read(q[i].r);\n\t\tq[i].i=i;\n\t}\n\tsort(q+1,q+1+m); //\u8be2\u95ee\u6392\u5e8f\n\tfor(int i=1,j=1;j<=bn;j++){ //i\u679a\u4e3e\u8be2\u95ee,j\u679a\u4e3e\u8be2\u95ee\u7684\u5de6\u8fb9\u754c\u6240\u5728\u5757\n\t\tint br=min(n,j*len),l=br+1,r=l-1,ans=0; //br\u662f\u5f53\u524d\u5757\u7684\u53f3\u8fb9\u754c\n\t\tcn=0; //\u6e05\u7a7a\u8bb0\u5f55\u6570\u7ec4\u7684\u6307\u9488\n\t\tfor(;b[q[i].l]==j;i++){ //\u679a\u4e3e\u5f53\u524d\u5757\u5185\u7684\u8be2\u95ee\n\t\t\tif(b[q[i].r]==j){ //\u5982\u679c\u5de6\u53f3\u8fb9\u754c\u90fd\u5728\u540c\u4e00\u5757\u5185\u5185\u5c31\u66b4\u529b\u505a\n\t\t\t\tANS[q[i].i]=calc(q[i].l,q[i].r);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\twhile(r<q[i].r){\n\t\t\t\tr++;\n\t\t\t\tma[a[r]]=r; //\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\n\t\t\t\tif(!st[a[r]]) st[a[r]]=r,clear[++cn]=a[r]; //st\u662f\u6700\u65e9\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0cclear\u662f\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\uff0c\u7528\u6765\u6e05\u7a7a\u6570\u5b57\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\n\t\t\t\tans=max(ans,r-st[a[r]]); //\u60c5\u51b52\n\t\t\t}\n\t\t\tint tp=ans; //\u5148\u4fdd\u5b58\u4e00\u4e0b\uff0c\u56e0\u4e3a\u53f3\u533a\u95f4\u7684\u8d21\u732e\u4e0d\u4f1a\u88ab\u5237\u65b0\uff0c\u4f46\u5de6\u533a\u95f4\u7684\u4f1a\n\t\t\twhile(l>q[i].l){\n\t\t\t\tl--;\n\t\t\t\tif(ma[a[l]]) ans=max(ans,ma[a[l]]-l);\n\t\t\t\telse ma[a[l]]=l; //\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\u53ef\u80fd\u5728\u5de6\u533a\u95f4\u4e2d\n\t\t\t}\n\t\t\tANS[q[i].i]=ans;\n\t\t\twhile(l<=br){\n\t\t\t\tif(ma[a[l]]==l) ma[a[l]]=0; //\u53bb\u6389\u5de6\u533a\u95f4\u7684\u8d21\u732e\n\t\t\t\tl++;\n\t\t\t}\n\t\t\tans=tp; //\u53bb\u6389\u5f53\u524d\u5de6\u533a\u95f4\u7684\u8d21\u732e\n\t\t}\n\t\tfor(int i=1;i<=cn;i++) ma[clear[i]]=st[clear[i]]=0; //\u6839\u636e\u8bb0\u5f55\u6570\u7ec4\u6e05\u7a7a\u6bcf\u4e2a\u6570\u51fa\u73b0\u4f4d\u7f6e\u7684\u5404\u79cd\u4fe1\u606f\n\t}\n\tfor(int i=1;i<=m;i++) write(ANS[i]),puts(\"\");\n}\n```",
        "postTime": 1578901368,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5906 \u3010\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f\u3011"
    },
    {
        "content": "## \u56de\u6eda\u83ab\u961f\n\u8c22\u9080\uff0c\u4eba\u5728\u673a\u623f\uff0c\u521a\u88ab\u673a\u60e8\u3002\n\n\u4f60\u662f\u5426\u5728\u5904\u7406\u83ab\u961f\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u5019\u7ecf\u5e38\u5934\u75bc\uff0c\u56e0\u4e3a\u6709\u7684\u5220\u9664\u64cd\u4f5c\u5220\u6389\u4e4b\u540e\u5c31\u66f4\u65b0\u7b54\u6848\uff0c\u5982\u679c\u4f60\u628a\u5b83\u6539\u6210\u6b21\u5927\uff0c\u90a3\u4e48\u4f60\u4f1a\u53d1\u73b0\u6539\u6210\u6b21\u5927\u4e4b\u540e\u518d\u5220\u9664\u53c8\u9700\u8981\u6b21\u6b21\u5927......\n\n\u5047\u4f7f\u5982\u679c\u4f60\u5403\u4e86\u96c4\u5fc3\u8c79\u5b50\u80c6\u5f00\u6ee1\u7a7a\u95f4\u6765\u5b58\uff0c\u4e0d\u8bf4\u8fd9\u6837\u770b\u7740\u5f88\u9e2d\u513f\u8822\uff0c\u7a7a\u95f4\u76f4\u63a5\u53d8\u6210\u5e73\u65b9\u7ea7\u522b\uff0c\u65f6\u95f4\u66f4\u4e0d\u8bf4\u4e86\u3002\u6839\u636e\u83ab\u961f\u7684\u6392\u5e8f\u7279\u6027\uff0c\u4e0d\u77e5\u9053\u662f\u8c01\u53cd\u6b63\u662f\u4e2a\u4eba\u641e\u4e86\u8fd9\u4e2a\u4f1a\u6eda\u7684\u4e0d\u5220\u9664\u83ab\u961f\u3002\n\n\u5047\u5982\u4f60\u4e5f\u8ddf\u6211\u4e00\u6837\u4e0d\u4f1a\u8ba9\u83ab\u961f\u6eda\uff0c\u90a3\u4e48\u5c31\u8ba9\u6211\u8ddf\u4f60\u4e00\u8d77\u6765\u5b66\u4e60\u5982\u4f55\u8ba9\u8fd9\u4e2a\u83ab\u961f~~\u6eda\u8d77\u6765~~\u3002\n\n\u6211\u4e0d\u4f1a\u53eb\u5b83\u201c\u4e0d\u5220\u9664\u83ab\u961f\u201d,\u800c\u662f\u4f1a\u53eb\u5b83\u201c\u80fd\u5c11\u5220\u70b9\u5c31\u5220\u70b9\u83ab\u961f\u201d\u3002\u56e0\u4e3a\u8fd9\u4e2a\u7b97\u6cd5\u540d\u5b57\u6d89\u5acc\u6b3a\u9a97\uff0c\u5f88\u591a\u65f6\u5019\u6211\u4eec\u90fd\u662f\u5c3d\u53ef\u80fd\u51cf\u5c11\u5220\u9664\u64cd\u4f5c,\u4ee5\u66f4\u591a\u7684\u6e05\u7a7a\uff0c\u589e\u52a0\u64cd\u4f5c\uff0c\u8ba9\u8fde\u7eed\u5de5\u4f5c\u7684\u83ab\u961f\u6709\u4e86\u5598\u6c14\u7684\u673a\u4f1a\uff0c\u80fd\u91cd\u65b0\u5904\u7406\u4e00\u7ec4\u4e00\u7ec4\u7684\u8be2\u95ee\u800c\u4e0d\u662f\u4e00\u76f4\u5220\u5220\u5220\u6765\u5904\u7406\u6240\u6709\u7684\u8be2\u95ee\u3002~~\u5582\u83ab\u961f\u4f60\u8981\u4e0d\u8981\u8fd9\u4e48\u4e0d\u6301\u4e45~~\u3002\u8fd9\u6837\u4e0b\u6765\u5220\u9664\u64cd\u4f5c\u4f1a\u53d8\u5f97\u6ca1\u90a3\u4e48\u590d\u6742\uff0c\u80fd\u8ba9\u4f60\u66f4\u65b9\u4fbf\u7684\u5b9e\u73b0\u3002\n\n\u90a3\u4e48\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u5462\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2ymq1itl.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u770b\u4e00\u770b\u8fd9\u4e2a\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5c0f\u7684\u56fe\u6765\u60f3\u4e00\u60f3\u4f60\u4e4b\u524d\u5199\u8fc7\u7684\u83ab\u961f\uff0c\u5bf9\u4e8e\u83ab\u961f\u4e00\u4e2a\u4e00\u4e2a\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u4f1a\u8ba9 ```L R``` \u6307\u9488\u4e0d\u65ad\u5730\u79fb\u52a8\uff0c\u5728\u6bcf\u4e2a\u8be2\u95ee\u4e4b\u95f4\u53cd\u590d\u6a2a\u8df3\uff0c\u52a0\u4ee5\u4e0d\u65ad\u7684\u5220\u9664\uff0c\u6dfb\u52a0\u64cd\u4f5c\u6765\u5f97\u51fa\u7b54\u6848\u3002\n\n\u7136\u540e\u4e3a\u4e86\u907f\u514d\u5220\u9664\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u4e00\u60f3\u80fd\u4e0d\u80fd\u627e\u5230\u51e0\u4e2a\u4e3a\u4e00\u7ec4\u7684\u8be2\u95ee\u4e2d\u7684\u4e00\u4e2a\u516c\u5171\u7684\u7ebf\u6bb5\uff0c\u6bcf\u6b21\u5c31\u8ba9\u8fd9\u4e2a\u516c\u5171\u7ebf\u6bb5\u7684 ```L R``` \u5206\u522b\u5411\u5de6\u53f3\u79fb\u52a8\u6765\u548c\u8be2\u95ee\u7684\u5de6\u53f3\u7aef\u70b9\u91cd\u5408\u6765\u5f97\u51fa\u7b54\u6848\uff0c\u800c\u4e0d\u662f\u5220\u8fc7\u6765\u5220\u8fc7\u53bb\u3002\n\n\u8fd9\u4e2a\u601d\u8def\u5c31\u662f\u56de\u6eda\u83ab\u961f\u7684\u6838\u5fc3\u601d\u8def\u3002\n\n\u53ef\u80fd\u4f60\u6ca1\u6709\u5f88\u597d\u5730\u7406\u89e3\uff0c\u518d\u7ed9\u4f60\u4e00\u7ec4\u6709\u5e8f\u7684\u6570\u636e\u7684\u51e0\u5f20\u56fe\u6765\u6f14\u793a\u8fd9\u4e2a\u5904\u7406\u8fc7\u7a0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ubxn8tkr.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n![](https://cdn.luogu.com.cn/upload/image_hosting/zhul5rx0.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n![](https://cdn.luogu.com.cn/upload/image_hosting/au01t7u8.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u4f60\u5c31\u4f1a\u53d1\u73b0\uff0c\u54c7\u54e6\uff0c\u5c45\u7136\u662f\u8fd9\u4e48\u6e05\u6670\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7ee7\u7eed\u60f3\uff0c\u600e\u4e48\u5904\u7406\u51e0\u4e2a\u4ea4\u53c9\uff0c\u5e76\u4e0d\u90a3\u4e48\u6709\u5e8f\u7684\u8be2\u95ee\u5462\uff1f\n\n\u8bbe\u5de6\u7aef\u70b9\u5728\u4e00\u4e2a\u5757\u4ee5\u5185\u7684\u6240\u6709\u8be2\u95ee\u6784\u6210\u4e00\u7ec4\u8be2\u95ee\u3002\n\n\u6839\u636e\u83ab\u961f\u6392\u5e8f\u540e\u7684\u4e00\u7ec4\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\u662f\u6709\u5e8f\u7684\uff0c\u5c31\u5148\u4e0d\u7ba1\u53f3\u7aef\u70b9\u4e86\u3002\n\n\u7136\u540e\u53ef\u77e5\u5bf9\u4e8e\u8fd9\u4e00\u7ec4\u8be2\u95ee\uff0c\u5b83\u4eec\u7684\u5de6\u7aef\u70b9\u65e0\u5e8f\uff0c\u4f46\u662f\u90fd\u5728\u540c\u4e00\u4e2a\u5757\u4ee5\u5185\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u50cf\u8fd9\u6837\u6765\u505a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lak8gebm.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n![](https://cdn.luogu.com.cn/upload/image_hosting/dv0csqst.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n![](https://cdn.luogu.com.cn/upload/image_hosting/iwu10m78.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u6211\u4eec\u53ef\u4ee5\u8ba9 ```L``` \u505c\u7559\u5728\u8fd9\u7ec4\u8be2\u95ee\u5de6\u7aef\u70b9\u6240\u5728\u5757\u7684\u6700\u53f3\u65b9\uff0c ```R``` \u4e0d\u65ad\u7684\u5411\u53f3\u79fb\u52a8\u5904\u7406\u8be2\u95ee\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u5c31\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u4e34\u65f6\u6307\u9488 ```p``` \u548c\u4e00\u5957\u65b0\u7684\u4e34\u65f6\u6570\u7ec4\u4eceL\u5f00\u59cb\u5411\u5de6\u79fb\u52a8\u5904\u7406\u8be2\u95ee\uff0c```L``` \u4e0d\u53d8\uff0c ```p``` \u5904\u7406\u5b8c\u4e8b\u540e\u5c31\u56de\u6765\uff0c\u56de\u6765\u7684\u8def\u4e0a\u987a\u624b\u628a\u6765\u65f6\u5b58\u7684\u4e34\u65f6\u6570\u7ec4\u6e05\u7a7a\u3002\n\n\u56fe\u4e2d\u9ec4\u8272\u533a\u95f4\u5c31\u662f ```p``` \u5904\u7406\u7684\u533a\u57df\uff0c\u5269\u4f59\u6709\u8272\u533a\u57df\u7684\u90fd\u662f ```R``` \u5904\u7406\u7684(\u6ce8\u610f\u4e0a\u56fe\u4e2dR\u5e76\u975e\u6bcf\u6b21\u90fd\u56de\u5230 ```L``` \u8fd9\u91cc\uff0c\u800c\u662f\u4ece\u4e0a\u4e00\u6b21 ```R``` \u7684\u4f4d\u7f6e\u5f00\u59cb\u79fb\u52a8\uff0c\u8fd9\u91cc\u53ef\u80fd\u8ba9\u60a8\u4ea7\u751f\u7406\u89e3\u8bef\u5dee)\u3002\n\n\u800c\u6bcf\u6362\u6210\u53e6\u5916\u4e00\u7ec4\u8be2\u95ee\u7684\u65f6\u5019\u8bf7\u7a7a\u6570\u7ec4\uff0c\u91cd\u65b0\u8bbe\u5b9a ```L,R``` \u5c31\u884c\u4e86\uff0c\u8fd9\u5c31\u662f\u56de\u6eda\u83ab\u961f\u4e86\u3002\n\n\u4ee3\u7801\u7684\u6ce8\u91ca\u4e5f\u5199\u4e86\u5f88\u591a:\n\n```\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst int maxn=2e5+10;\n//\u4ee5\u4e0b\u662f\u53d8\u91cf\u8868 \nint n,m,len;\n//len\u662f\u5757\u7684\u5927\u5c0f \nint a[maxn],b[maxn];\n//a:\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\n//b:block\u7b80\u5199,\u8868\u793a\u7ed9\u5b9a\u4e0b\u6807\u5bf9\u5e94\u7684\u5757 \nint R[maxn]; \n//\u6bcf\u4e2a\u5757\u7684\u53f3\u7aef \nint ans[maxn];\n//\u79bb\u7ebf\u64cd\u4f5c\u7528\u6765\u5b58\u50a8\u7b54\u6848 \nint st[maxn],ed[maxn],ed2[maxn];\n//\u5f97\u51fa\u7b54\u6848\u65f6\u9700\u8981\u7528\u5230\u7684\u6876\n//\u4ee3\u8868\u610f\u4e49\u5206\u522b\u4e3a\u5728\u7ed9\u5b9a\u8303\u56f4\u5185: \n//\u5143\u7d20\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\n//\u5143\u7d20\u51fa\u73b0\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\n//\u5728\u6bcf\u7ec4\u8be2\u95ee\u7684\u516c\u5171\u8d77\u70b9(\u67d0\u4e2a\u5757\u7684\u53f3\u7aef)\u524d\u7684\u4e00\u6bb5\u4e2d,\u5143\u7d20\u51fa\u73b0\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e \ninline int read()\n{\n\tint num=0;\n\tchar ch=getchar();\n\twhile(ch>57||ch<48)ch=getchar();\n\tdo num=(num<<1)+(num<<3)+(ch^48),ch=getchar(); while(ch>47&&ch<58);\n\treturn num;\n}\nstruct lsh\n{int id,x;}tmp[maxn];\nbool lsh_cmp(lsh x,lsh y)\n{return x.x<y.x;}\n//\u79bb\u6563\u5316 \nstruct query\n{int l,r,id;}q[maxn];\nbool query_cmp(query x,query y)\n{return (b[x.l]==b[y.l])?x.r<y.r:b[x.l]<b[y.l];}\n//\u5b58\u50a8\u8be2\u95ee\u4ee5\u53ca\u628a\u8be2\u95ee\u6392\u5e8f \nvoid datain()//\u8bfb\u5165\u5e76\u5904\u7406\u4e00\u90e8\u5206\u6570\u636e \n{\n\tn=read();\n\tlen=sqrt(n); \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ttmp[i].x=read();\n\t\ttmp[i].id=i;\n\t\tb[i]=(i-1)/len+1;\n\t}\n\tfor(int i=1;i<=b[n];i++)//\u5904\u7406\u51fa\u6bcf\u4e2a\u5757\u7684\u53f3\u7aef \n\tR[i]=(i==b[n])?n:len*i;//\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u53f3\u7aef\uff01 \n\tm=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tq[i].l=read();q[i].r=read();\n\t\tq[i].id=i;\n\t}\n\tsort(q+1,q+m+1,query_cmp);\n}\nvoid lsh() \n{\n\tsort(tmp+1,tmp+n+1,lsh_cmp);//\u6392\u5e8f\u7136\u540e\u79bb\u6563\u5316\u5566 \n\tint pre=-1,cnt=0;//\u559c\u6b22\u7684\u79bb\u6563\u5316\u5199\u6cd5 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(tmp[i].x!=pre)cnt++;\n\t\ta[tmp[i].id]=cnt;//\u6295\u5c04\u56de\u53bb,\u8ba9a[1]~a[n]\u53d8\u6210\u79bb\u6563\u5316\u6570\u7ec4 \n\t\tpre=tmp[i].x;\n\t}\n}\nvoid work()//\u5f00\u59cb\u5904\u7406\u8be2\u95ee \n{\n\tint block=0,tmp1=0,l=0,r=0;\n\t//block:\u5757,\u4ee3\u8868\u4e0a\u6b21\u8be2\u95ee\u5de6\u7aef\u70b9\u5728\u54ea\u4e2a\u5757\n\t//\u5982\u679c\u5757\u4e00\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e0a\u6b21\u7559\u4e0b\u6765\u7684\u8fdb\u7a0b \n\t//\u4e0d\u4e00\u6837\u5c31\u820d\u5f03\u4e0a\u6b21\u7684\u8fdb\u7a0b,\u5168\u90e8\u63a8\u7ffb\n\t//tmp1:\u5728\u516c\u5171L\u5230\u4e0a\u4e00\u6b21\u8be2\u95eeR\u65f6\u5f97\u51fa\u7684\u7b54\u6848\n\t//l:\u516c\u5171L\n\t//r:\u4e0a\u4e00\u6b21\u8be2\u95ee\u7684R \n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(b[q[i].l]==b[q[i].r])\n\t\t//\u5982\u679c\u662f\u540c\u4e00\u4e2a\u5757\u5c31\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86 \n\t\t//\u4f60\u7684\u83ab\u961f\u6280\u5de7\u5168\u90e8\u6728\u5927,\u8fd8\u4e0d\u5982\u66b4\u529b\u6c42\u89e3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u9000\u5316 \n\t\t{\n\t\t\ttmp1=0;\n\t\t\tfor(int j=q[i].l;j<=q[i].r;j++)st[a[j]]=0;\n\t\t\t//\u4f60\u53ea\u9700\u8981\u7528\u5230st\uff0c\u5c31\u53ea\u6e05\u7a7ast\n\t\t\t//\u8bf6\u4f60\u53ef\u80fd\u4f1a\u60f3:st\u6e05\u7a7a\u4e86,l,r\u6ca1\u52a8,\u90a3\u540e\u9762\u6c42\u89e3\u4e0d\u5c31\u4e71\u5957\u4e86\uff1f \u4f1a\u4e0d\u4f1a\u8c03\u7528\u5230\u9519\u8bef\u7684st \n\t\t\t//\u4e0d\u4f1a\u7684\n\t\t\t//\u4f60\u60f3\u4e00\u60f3\uff0c\u8be2\u95ee\u5de6\u53f3\u7aef\u70b9\u53d8\u6210\u5728\u4e00\u4e2a\u5757\u65f6,\u662f\u4ec0\u4e48\u65f6\u5019\n\t\t\t//\u662f\u5de6\u7aef\u70b9\u6240\u5728\u5757\u5df2\u7ecf\u4e0d\u540c\u4e8e\u4e4b\u524d\u7684\u5757\u7684\u65f6\u5019\u554a! \n\t\t\t//\u662f\u4f60\u524d\u9762\u6c42\u51fa\u7684tmp1,st,ed\u5df2\u7ecf\u5931\u53bb\u5229\u7528\u4ef7\u503c\u7684\u65f6\u5019\u554a! \n\t\t\t//\u80af\u5b9a\u540e\u9762\u9700\u8981\u6e05\u7a7a(\u6448\u5f03)\u4e4b\u524d\u7684\u6570\u7ec4\uff0c\u5f00\u59cb\u89e3\u65b0\u4e00\u7ec4\u7684\u8be2\u95ee\n\t\t\t//\u90a3\u4e48\u4e4b\u540e\u7684l,r,st,\u80af\u5b9a\u4f1a\u6e05\u7a7a\u6389 \n\t\t\t//\u603b\u800c\u8a00\u4e4b\uff1a\u6211\u8fd9\u91cc\u6e05\u7a7ast,\u6839\u672c\u5c31\u4e0d\u5f71\u54cd\u4e4b\u540e\u554a\u54c8\u54c8\u54c8\u54c8\u54c8\u53cd\u6b63\u90fd\u4f1a\u6e05\u7a7a \n\t\t\t//\u542c\u4e0d\u61c2\u5c31\u7b97\u4e86... \n\t\t\tfor(int j=q[i].l;j<=q[i].r;j++)\n\t\t\t{\t\t\n\t\t\t\tif(!st[a[j]])st[a[j]]=j;\n\t\t\t\ttmp1=max(tmp1,j-st[a[j]]);\n\t\t\t}\n\t\t\tfor(int j=q[i].l;j<=q[i].r;j++)st[a[j]]=0;\n\t\t\tans[q[i].id]=tmp1;\n\t\t\tcontinue ;\n\t\t}\n\t\t//\u8981\u5f00\u59cb\u6b63\u5e38\u6c42\u89e3\u4e86 \n\t\tint now=b[q[i].l];//\u5148\u8bb0\u5f55\u4e0b\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\uff0c\u5077\u61d2\u55f7 \n\t\tif(block!=now)//\u5de6\u7aef\u70b9\u6240\u5728\u5757\u53d1\u751f\u53d8\u5316\u4e86 \n\t\t{\n\t\t\ttmp1=0;\n\t\t\tfor(int j=l;j<=r;j++)st[a[j]]=ed[a[j]]=0;//\u4e4b\u524d\u6c42\u89e3\u7684\u73a9\u610f\u513f\u90fd\u4e0d\u8981\u4e86,\u8fd9\u91cc\u6ca1\u7528 \n\t\t\t//\u4ece\u5934\u5f00\u59cb\u7b97 \n\t\t\tl=R[now];\n\t\t\tr=l-1;//\u83ab\u961f\u7ec6\u8282\uff1a\u8bb0\u5f97r=l-1\uff1b \n\t\t\tblock=now;//\u66f4\u65b0\u6240\u5728\u5757 \n\t\t}\n\t\twhile(r<q[i].r)\n\t\t{\n\t\t\tr++;\n\t\t\tif(!st[a[r]])st[a[r]]=r;//st(start:\u5143\u7d20\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e)\u53ea\u9700\u8981\u66f4\u65b0\u4e00\u6b21 \n\t\t\ted[a[r]]=r;//\u4ece\u524d\u79fb\u5411\u540e,ed(end:\u5143\u7d20\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e)\u8981\u4e00\u76f4\u66f4\u65b0 \n\t\t\ttmp1=max(tmp1,r-st[a[r]]);//\u66f4\u65b0\u7b54\u6848 \n\t\t}\n\t\t//\u516c\u5171\u5de6\u7aef\u70b9\u5230r\u7684\u7b54\u6848\u5904\u7406\u51fa\u6765\u4e86,\u4f60\u8fd8\u8bb0\u5f97\u524d\u9762\u7684\u6709\u4e00\u5c0f\u7aef\u8fd8\u6ca1\u6709\u7b97\u5417 \n\t\tint p=l,tmp2=0;\n\t\twhile(q[i].l<p)\n\t\t{\n\t\t\tp--;\n\t\t\tif(!ed2[a[p]])ed2[a[p]]=p;//\u4ece\u540e\u5411\u524d\u79fb\u52a8,ed\u66f4\u65b0\u4e00\u6b21\u5c31\u591f\u4e86\u55f7 \n\t\t\t//\u9632\u6b62\u60f3\u600e\u4e48\u64a4\u56de\u60f3\u51fa\u8111\u819c\u708e,\u76f4\u63a5\u5f00\u4e2a\u4e34\u65f6\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u65b0\u7684ed\u5c31\u884c \n\t\t\ttmp2=max(tmp2,max(ed[a[p]],ed2[a[p]])-p);//\u7ec6\u8282:\u8bb0\u5f97\u53d6\u4e2amax,\u4f60\u516c\u5171\u5de6\u7aef\u70b9\u53f3\u8fb9\u4e5f\u53ef\u80fd\u51fa\u73b0\u8fd9\u4e2a\u5143\u7d20 \n\t\t}\n\t\twhile(p<l)//\u7b97\u5b8c\u4e86\u5c31\u64a4\u56de \n\t\t{\n\t\t\ted2[a[p]]=0;\n\t\t\tp++;\n\t\t}\n\t\tans[q[i].id]=max(tmp2,tmp1);//\u5728\u516c\u5171\u5de6\u7aef\u70b9\u5de6\u53f3\u7b54\u6848\u4e2d\u53d6\u4e2amax \n\t}\n}\nint main()\n{\n\tdatain(); \n\tlsh();\n\twork();\n\tfor(int i=1;i<=m;i++)printf(\"%d\\n\",ans[i]);\n}\n```\n",
        "postTime": 1602062548,
        "uid": 246785,
        "name": "\u9614\u7761\u738b\u5b50",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5906 \u3010\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f&\u4e0d\u5220\u9664\u83ab\u961f\u3011"
    },
    {
        "content": "\u8bb2\u9053\u7406\u8fd9\u9898\u5176\u5b9e\u4e0d\u7528\u56de\u6eda\u83ab\u961f(\n\n\u4f7f\u7528\u666e\u901a\u83ab\u961f\u7ef4\u62a4\u6bcf\u79cd\u989c\u8272\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\uff0c\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u540c\u989c\u8272\u524d\u9a71\u540e\u7ee7\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u83ab\u961f\u8f6c\u79fb.\n\n\u7136\u540e\u8003\u8651\u67e5\u8be2\uff0c\u6709$O(m\\sqrt{n})$\u6b21\u63d2\u5165\u5220\u9664\u548c$O(m)$\u6b21\u8be2\u95ee\u6700\u5927\u503c\uff0c\u503c\u57df\u5206\u5757\u5373\u53ef.\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<vector>\nusing namespace std;\nconst int N=6e5;\nint n,m,s[N],ss[N],bl[N],blo,a[N],cur[N],tmp[N],ans[N],pre[N],nxt[N];\npair<int,int>w[N];\nstruct Q{int l,r,id;}q[N];\nint cmp(const Q &a,const Q &b){return bl[a.l]==bl[b.l]?((bl[a.l]&1)?a.r<b.r:a.r>b.r):a.l<b.l;}\nvoid upd(int x,int w){s[x]+=w,ss[bl[x]]+=w;}\nint query()//\u503c\u57df\u5206\u5757\n{\n\tfor(int i=bl[n];i>=1;i--)\n\t\tif(ss[i])\n\t\t{\n\t\t\tint L=(i-1)*blo,R=min(n,i*blo);\n\t\t\tfor(int j=R;j>L;j--)if(s[j])return j;\n\t\t}\n\treturn 0;\n}\nvoid addr(int i)\n{\n\tint x=a[i];\n\tif(!w[x].first){w[x].first=w[x].second=i;return;}\n\tupd(w[x].second-w[x].first,-1);\n\tw[x].second=i;\n\tupd(w[x].second-w[x].first,1);\n}\nvoid addl(int i)\n{\n\tint x=a[i];\n\tif(!w[x].first){w[x].first=w[x].second=i;return;}\n\tupd(w[x].second-w[x].first,-1);\n\tw[x].first=i;\n\tupd(w[x].second-w[x].first,1);\n}\nvoid dell(int i)\n{\n\tint x=a[i];\n\tif(w[x].first==w[x].second){w[x].first=w[x].second=0;return;}\n\tupd(w[x].second-w[x].first,-1);\n\tw[x].first=nxt[w[x].first];\n\tupd(w[x].second-w[x].first,1);\n}\nvoid delr(int i)\n{\n\tint x=a[i];\n\tif(w[x].first==w[x].second){w[x].first=w[x].second=0;return;}\n\tupd(w[x].second-w[x].first,-1);\n\tw[x].second=pre[w[x].second];\n\tupd(w[x].second-w[x].first,1);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",a+i),tmp[i]=a[i];\n\tsort(tmp+1,tmp+n+1);for(int i=1;i<=n;i++)a[i]=lower_bound(tmp+1,tmp+n+1,a[i])-tmp;\n\tfor(int i=1;i<=n;i++)pre[i]=cur[a[i]],cur[a[i]]=i;\n\tfor(int i=1;i<=n;i++)cur[i]=n+1;\n\tfor(int i=n;i>=1;i--)nxt[i]=cur[a[i]],cur[a[i]]=i;\n\tblo=sqrt(n);for(int i=1;i<=n;i++)bl[i]=(i-1)/blo+1;\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)scanf(\"%d%d\",&q[i].l,&q[i].r),q[i].id=i;\n\tsort(q+1,q+m+1,cmp);\n\tint l=1,r=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\twhile(r<q[i].r)addr(++r);\n\t\twhile(l>q[i].l)addl(--l);\n\t\twhile(r>q[i].r)delr(r--);\n\t\twhile(l<q[i].l)dell(l++);\n\t\tans[q[i].id]=query();\n\t}\n\tfor(int i=1;i<=m;i++)printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n\u4e0d\u8fc7\u8dd1\u5f97\u6ca1\u6709\u56de\u6eda\u83ab\u961f\u5feb(",
        "postTime": 1580625711,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5906 \u3010\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f\u3011"
    },
    {
        "content": "- ## \u5410\u69fd\n\n  \u4e4b\u524d\u53ea\u662f\u77e5\u9053\u56de\u6eda\u83ab\u961f\uff0c\u65e0\u610f\u95f4\u53d1\u73b0\u6709\u8fd9\u4e48\u4e00\u9053\u6a21\u677f\u9898\uff0c\u5c31\u6765\u505a\u4e00\u505a\u3002~~\u7531\u4e8e\u601d\u60f3\u4e0d\u591f\u6210\u719f\uff0c\u5e76\u4e14\u6ca1\u6709\u7801\u8fc7\u7c7b\u4f3c\u7684\u4ee3\u7801\uff0c\u63d0\u4ea4\u5dee\u70b9\u5c31\u5237\u5c4f\u4e86\u3002~~\n\n  \u611f\u89c9\u8fd9\u9053\u9898\u6709\u70b9\u5361\u5e38\uff0c~~\u53ef\u80fd\u662f\u672c\u4eba\u5e38\u6570\u592a\u5927\u4e86\u3002~~\n\n- ## \u524d\u7f6e\u77e5\u8bc6\n\n  \u83ab\u961f\u3002\n\n- ## \u9898\u89e3\n\n  \u6211\u4eec\u8003\u8651\u666e\u901a\u83ab\u961f\u4fee\u6539\u7684\u65f6\u5019\uff0c\u4f1a\u5b58\u5728\u4e00\u4e9b\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u7206\u70b8\u7684\u60c5\u51b5\u3002\u800c\u8fd9\u4e9b\u64cd\u4f5c\u5f80\u5f80\u53ea\u5b58\u5728\u4e00\u79cd\uff0c\u5373\u6dfb\u52a0\u5bb9\u6613\u5220\u9664\u96be\uff0c\u6216\u8005\u5220\u9664\u5bb9\u6613\u6dfb\u52a0\u96be\u3002~~\u6dfb\u52a0\u5bb9\u6613\u5220\u9664\u5bb9\u6613\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u83ab\u961f\u4e0d\u5c31\u597d\u4e86\u4e48\uff08\u5149\u901f\u9003\uff09~~\u3002\n\n  \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u8003\u8651\u6dfb\u52a0\u5bb9\u6613\u5220\u9664\u96be\u7684\u60c5\u51b5\u3002\uff08\u56e0\u4e3a\u672c\u9898\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\uff09\u3002\n\n  \u90a3\u4e48\u6211\u4eec\u53ea\u8ba9\u4ed6\u6dfb\u52a0\u3002\u5c31\u662f\uff0c\u53ea\u8ba9\u5de6\u7aef\u70b9\u5f80\u5de6\u626b\uff0c\u53f3\u7aef\u70b9\u5f80\u53f3\u626b\u3002\n\n  \u8fd8\u662f\u8ddf\u666e\u901a\u83ab\u961f\u4e00\u6837\uff0c\u628a\u8be2\u95ee\u79bb\u7ebf\uff0c\u7136\u540e\u8fd8\u662f\u6309\u7167\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u6392\u5e8f\uff0c\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u76f8\u540c\u7684\uff0c\u6309\u7167\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$n\\sqrt n$\u3002\n\n  \u90a3\u4e48\u5177\u4f53\u7684\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u5206\u6210\u4e24\u79cd\uff1a\n\n  1. \u5982\u679c\u8fd9\u4e2a\u8be2\u95ee\u7684\u5de6\u53f3\u7aef\u70b9\u5728\u540c\u4e00\u4e2a\u5757\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u626b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u9000\u5316\u3002\n  2. \u4e0d\u5728\u540c\u4e00\u4e2a\u5757\u7684\uff0c\u6839\u636e\u4e4b\u524d\u7684\u6392\u5e8f\uff0c\u4fdd\u8bc1\u4e86\u5de6\u7aef\u70b9\u4e3a\u540c\u4e00\u4e2a\u5757\u65f6\u53f3\u7aef\u70b9\u7684\u5355\u8c03\u9012\u589e\uff0c\u8fd9\u65f6\u6211\u4eec\u53ea\u9700\u8981\u8ba9\u5de6\u7aef\u70b9\u53ef\u4ee5\u4e00\u76f4\u5f80\u5de6\u626b\u3002\u600e\u4e48\u505a\u5462\uff1f\u66b4\u529b\u4e00\u70b9\uff0c\u6bcf\u6b21\u628a\u5de6\u7aef\u70b9\u8d4b\u6210\u6240\u5728\u5757\u7684\u53f3\u7aef\u70b9+1\uff0c\u7136\u540e\u4e00\u76f4\u5f80\u5de6\u626b\uff0c\u5355\u6b21\u626b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\sqrt n$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u53ef\u4ee5\u4fdd\u8bc1\uff0c~~\u53ef\u80fd\u5e38\u6570\u4f1a\u53d8\u5927~~\u3002\n\n- ## \u4ee3\u7801\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u8fd9\u6837\u505a\u5c31\u53ef\u4ee5\u4e86\u3002\u8d34\u4e0a\u4e11\u964b\u7684\u4ee3\u7801\uff08\u7b2c\u4e00\u6b21\u5199\uff0c\u663e\u5f97\u4ee3\u7801\u6709\u4e9b\u9752\u6da9\uff0c\u4e3a\u4e86\u5361\u5e38\u8fd8\u5199\u4e86fread\u548cfwrite\uff09\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#include <cmath>\ntypedef long long ll;\nnamespace IO\n{\n\tchar buf[1 << 20 |1] , *f1 = buf , *f2 = buf , pbuf[1 << 24 | 1] , *f3 = pbuf , sta[1 << 10 | 1];\n\t#define gc() ((f1 == f2) && (f2 = (f1 = buf) + fread(buf,1,sizeof buf,stdin),f1 == f2) ? EOF : *f1 ++)\n\t#define gt() getchar()\n\tinline int read()\n\t{\n\t\tint x = 0 , f = 1;\tchar ch = gc();\n\t\twhile(ch < '0' || ch > '9')\t{if(ch == '-')\tf = -1; ch = gc();}\n\t\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = gc();}\n\t\treturn x * f;\n\t}\n\tinline void write(int x)\n\t{\n\t\tif(!x) return (void)(*f3 ++ = 48 , *f3 ++ = '\\n');\n\t\tif(x < 0) *f3 ++ = '-' , x = ~x + 1;\n\t\tchar *top = sta;\n\t\twhile(x) *top ++ = x % 10 + 48 , x /= 10;\n\t\twhile(top != sta) *f3 ++ = *-- top;\n\t\t*f3 ++ = '\\n';\n\t}\n\t#define flush() fwrite(pbuf,1,f3 - pbuf,stdout)\n\ttemplate <class T> inline T max(T a,T b) { return a > b ? a : b;}\n\ttemplate <class T> inline T min(T a,T b) { return a < b ? a : b;}\n\ttemplate <class T> inline void swap(T &a,T &b) { T t = a; a = b; b = t;}\n\ttemplate <class T> inline T abs(T a) { return a < 0 ? -a : a;}\n}\nusing namespace IO;\nconst int N = 2e5 + 5 , inf = 2e9;\nint n , m , cnt , len , res , ansl , ansr , ans;\nint a[N] , b[N] , pos[N] , pre[N] , nxt[N] , Ans[N] , L[N] , R[N] , Pre[N] , Nxt[N];\nstruct Query \n{ \n\tint l , r , id;\n\tfriend bool operator < (const Query &a,const Query &b) { return pos[a.l] < pos[b.l] || (pos[a.l] == pos[b.l] && a.r < b.r);}\n} e[N];\ninline void clear(int l,int r) \n{\n\tfor(int i = l;i <= r;i ++) Pre[a[i]] = inf , Nxt[a[i]] = 0; res = 0;\n}\ninline void The_Same(int l,int r)\n{\n\tfor(int i = l;i <= r;i ++)\n\t{\n\t\tPre[a[i]] = min(Pre[a[i]],i);\n\t\tNxt[a[i]] = max(Nxt[a[i]],i);\n\t\tres = max(res,Nxt[a[i]] - Pre[a[i]]);\n\t}\n}\ninline void add(int x,int &res)\n{\n\tpre[a[x]] = min(pre[a[x]],x);\n\tnxt[a[x]] = max(nxt[a[x]],x);\n\tres = max(res,nxt[a[x]] - pre[a[x]]);\n}\ninline void clearl(int l,int r)\n{\n\tfor(int i = l;i <= r;i ++) pre[a[i]] = Pre[a[i]] , nxt[a[i]] = Nxt[a[i]];\n\tansl = 0;\n}\ninline void clearr(int l,int r)\n{\n\tfor(int i = l;i <= r;i ++) pre[a[i]] = inf , nxt[a[i]] = 0; \n\tansr = 0;\n}\ninline void Give(int l,int r)\n{\n\tfor(int i = l;i <= r;i ++) Pre[a[i]] = pre[a[i]] , Nxt[a[i]] = nxt[a[i]]; \n\tansl = 0;\n}\nint main()\n{\n\tn = read(); len = sqrt(n);\n\tfor(int i = 1 ; i <= n ; i ++) b[i] = a[i] = read() , pos[i] = (i - 1) / len + 1 , L[i] = inf;\n\tstd::sort(b + 1,b + 1 + n);\n\tcnt = std::unique(b + 1,b + 1 + n) - b - 1;\n\tfor(int i = 1 ; i <= n ; i ++) a[i] = std::lower_bound(b + 1,b + 1 + cnt,a[i]) - b , L[pos[i]] = min(L[pos[i]],i) , R[pos[i]] = max(R[pos[i]],i) , Pre[i] = pre[i] = inf;\n\tm = read();\n\tfor(int i = 1 ; i <= m ; i ++) e[i].l = read() , e[i].r = read() , e[i].id = i;\n\tstd::sort(e + 1,e + 1 + m); e[0].l = 0; R[0] = inf;\n\tfor(int i = 1 , l , r = 0; i <= m ; i ++)\n\t{\n\t\tif(pos[e[i].l] != pos[e[i - 1].l]) clearr(R[pos[e[i - 1].l]] + 1,r) , l = R[pos[e[i].l]] + 1 , r = R[pos[e[i].l]];\n\t\tif(pos[e[i].l] == pos[e[i].r]) clear(e[i].l,e[i].r) , The_Same(e[i].l,e[i].r) , Ans[e[i].id] = res;\n\t\telse\n\t\t{\n\t\t\tl = R[pos[e[i].l]] + 1;\n\t\t\twhile(r < e[i].r) add(++ r,ansr);\n\t\t\tGive(e[i].l,R[pos[e[i].l]]);\n\t\t\twhile(l > e[i].l) add(-- l,ansl);\n\t\t\tAns[e[i].id] = max(ansl,ansr);\n\t\t\tclearl(e[i].l,R[pos[e[i].l]]);\n\t\t}\n\t}\n\tfor(int i = 1;i <= m;i ++) write(Ans[i]);\n\tflush();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1578659002,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5906 \u3010\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u4e4b\u524d\u7814\u7a76\u600e\u4e48\u7528\u83ab\u961f\u641e\u533a\u95f4\u4f17\u6570\uff0c\u4e5f\u5c31\u662f\u533a\u95f4\u7f29\u5c0f\u96be\u4ee5\u66f4\u65b0\u7684\u95ee\u9898\u65f6\u81ea\u5df1\u53d1\u660e\u4e86\u51fa\u6765\uff0c\u4e5f\u5c31\u662f\u65e0\u5220\u9664\u83ab\u961f\u3002\u4eca\u5929\u624d\u77e5\u9053\u8fd9\u4e1c\u897f\u7684\u5b66\u540d\u53eb\u505a\u56de\u6eda\u83ab\u961f\uff0c\u770b\u6765\u6211\u8fd8\u662f\u8bfb\u4e66\u5c11\u2026\u2026\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n\u83ab\u961f\u7b97\u6cd5\n\n\u65e2\u7136\u662f\u4e2a\u6a21\u677f\u9898\u90a3\u6211\u8fd8\u662f\u8bb2\u4e00\u4e0b\u666e\u901a\u7684\u83ab\u961f\u3002\n\n\u83ab\u961f\u89e3\u51b3\u7684\u662f**\u9700\u8981\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u6570\u5728\u533a\u95f4\u5185\u7684\u4fe1\u606f**\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f**\u9700\u8981\u201c\u5f00\u6876\u201d**\u7684\u4e00\u7c7b\u95ee\u9898\u3002\n\n\u6bd4\u5982\u4e00\u4e2a\u7b80\u5355\u7684\u95ee\u9898\uff1a\u533a\u95f4\u5185\u51fa\u73b0\u4e86\u591a\u5c11\u79cd\u6570\u5b57\u3002\n\n\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4`cnt[i]`\uff0c\u8bb0\u5f55$i$\u51fa\u73b0\u7684\u6b21\u6570\u3002\u663e\u7136\uff0c\u6211\u4eec\u5982\u679c\u5df2\u7ecf\u5f97\u5230\u4e86$[l, r]$\u7684`cnt`\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5$O(1)$\u5f97\u5230$[l, r + 1]$\u3001$[l, r - 1]$\u3001$[l + 1, r]$\u3001$[l - 1, r]$\u7684`cnt`\u6570\u7ec4\uff0c\u53ea\u9700\u8981\u5c06\u53d8\u5316\u7684\u6570`++`\u6216`--`\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5982\u679c\u8fd9\u6837\u7684\u8bdd\uff0c\u4e24\u6b21\u8be2\u95ee\u4e4b\u95f4\uff0c\u7aef\u70b9\u79fb\u52a8\u7684\u590d\u6742\u5ea6\u6700\u574f$O(n)$\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5408\u7406\u5b89\u6392\u8be2\u95ee\u7684\u987a\u5e8f\uff0c\u4f18\u5316\u590d\u6742\u5ea6\u3002\n\n\u6211\u4eec\u628a\u957f\u5ea6\u4e3a$n$\u7684\u8fd9\u4e2a\u5e8f\u5217\u5e73\u5747\u5206\u4e3a$\\sqrt n$\u5757\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e9b\u5757\u5bf9\u8be2\u95ee\u6392\u5e8f\u3002\u5177\u4f53\u64cd\u4f5c\u662f\u8fd9\u6837\u7684\uff1a\n\n1. \u5982\u679c\u4e24\u4e2a\u8be2\u95ee\u7684\u5de6\u7aef\u70b9$l$\u4e0d\u5728\u540c\u4e00\u4e2a\u5757\u5185\uff0c\u90a3\u4e48\u8ba9\u5de6\u7aef\u70b9\u7684\u5757\u7f16\u53f7\u5c0f\u7684\u5728\u524d\u9762\u3002\n\n2. \u5982\u679c\u4e24\u4e2a\u8be2\u95ee\u7684\u5de6\u7aef\u70b9$l$\u5728\u540c\u4e00\u4e2a\u5757\u5185\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u4e2a\u5757\u7684\u7f16\u53f7\u4e3a\u5947\u6570\uff0c\u8ba9\u53f3\u7aef\u70b9\u964d\u5e8f\uff0c\u5426\u5219\u8ba9\u53f3\u7aef\u70b9\u5347\u5e8f\u3002\n\n\u8fd9\u6837\uff0c\u5b83\u7684\u603b\u590d\u6742\u5ea6\u662f$n \\sqrt n$\u7684\uff0c\u8bc1\u660e\u5f88\u663e\u7136\uff0c\u76f4\u63a5\u7406\u89e3\u4e00\u4e0b\u3002\n\n1. \u5de6\u7aef\u70b9\u8981\u4e48\u5728\u540c\u4e00\u4e2a\u5757\u5de6\u53f3\u6e9c\u8fbe\uff0c\u8981\u4e48\u5c31\u4f1a\u4e32\u5230\u76f8\u90bb\u7684\u5757\uff0c\u6bcf\u6b21\u590d\u6742\u5ea6$O(\\sqrt n)$\n\n2. \u5bf9\u4e8e\u5de6\u7aef\u70b9\u5728\u540c\u4e00\u4e2a\u5757\u5185\u7684\u8be2\u95ee\uff0c\u53f3\u7aef\u70b9\u7684\u79fb\u52a8\u662f\u5355\u5411\u7684\u3002\u7531\u4e8e\u6211\u4eec\u53ea\u6709$\\sqrt n$\u5757\uff0c\u6240\u4ee5\u53f3\u7aef\u70b9\u53ea\u4f1a\u904d\u5386$\\sqrt n$\u6b21\u6574\u4e2a\u5e8f\u5217\uff0c\u603b\u590d\u6742\u5ea6$O(n \\sqrt n)$\n\n## \u672c\u9898\u89e3\u6cd5\n\n\u8fd9\u9053\u9898\u6211\u4eec\u6cbf\u7528\u521a\u624d\u7684\u83ab\u961f\u601d\u8def\uff0c\u5f00\u6876\u5b58\u50a8\u5f53\u524d\u533a\u95f4\u6bcf\u4e00\u4e2a\u6570\u6700\u5927\u7684\u4e0b\u6807\u548c\u6700\u5c0f\u7684\u4e0b\u6807\u3002\n\n\u5f53\u6211\u4eec`l--`\u6216\u8005`r++`\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u66f4\u65b0\u8fd9\u4e2a\u6570\u7ec4\uff0c\u53d6`min`/`max`\u5c31\u53ef\u4ee5\u4e86\n\n\u4f46\u662f\u5f53\u6211\u4eec`l++`\u6216\u8005`r--`\u7684\u65f6\u5019\uff0c\u6211\u4eec\u96be\u4ee5\u53bb\u6389\u5b83\u7684\u8d21\u732e\uff0c\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u6b21\u5927\u7684\u8d21\u732e\u662f\u8c01\uff0c\u6216\u8005\u662f\u8fd9\u4e2a\u8d21\u732e\u51fa\u73b0\u4e86\u51e0\u6b21\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u9700\u8981\u7528\u4e00\u4e9b\u6280\u5de7\uff0c\u8ba9\u8fd9\u4e2a\u533a\u95f4\u53ea\u4f1a\u6269\u5927\uff0c\u4e0d\u4f1a\u7f29\u5c0f\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u628a\u666e\u901a\u83ab\u961f\u7684\u7b2c\u4e8c\u6761\u6539\u4e00\u4e0b\uff1a\u5de6\u7aef\u70b9\u5728\u540c\u4e00\u4e2a\u5757\u5185\uff0c\u53f3\u7aef\u70b9\u5347\u5e8f\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5728\u540c\u4e00\u4e2a\u5757\u5185\u53f3\u7aef\u70b9\u53ea\u4f1a\u9020\u6210\u533a\u95f4\u6269\u5927\u3002\u867d\u7136\u5728\u5de6\u7aef\u70b9\u6765\u5230\u65b0\u7684\u5757\u65f6\u9700\u8981\u4e00\u8def\u8dd1\u56de\u6765\uff08\u5176\u5b9e\u65e0\u5220\u9664\u83ab\u961f\u5e76\u4e0d\u4f1a\uff09\uff0c\u5e38\u6570$\\times 2$\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u5f71\u54cd\u590d\u6742\u5ea6\u3002\n\n\u6211\u4eec\u8003\u8651\u8bb0\u5f55$nowr = r$\uff0c$nowl = \\text{\u5757\u7684\u53f3\u7aef\u70b9}$\u7684\u7b54\u6848\uff0c\u4e34\u65f6\u5b58\u50a8\u4e0b\u6765\u3002\u6bcf\u6b21\u5de6\u7aef\u70b9\u53ea\u5f80\u5de6\u632a\uff0c\u66f4\u65b0\u6876\uff0c\u56de\u7b54\u5b8c\u95ee\u9898\u518d\u632a\u56de\u6765\uff0c\u5220\u9664\u6876\u4e2d\u8d21\u732e\uff0c\u518d\u628a\u7b54\u6848\u66ff\u6362\u56de\u521a\u521a\u4e34\u65f6\u5b58\u50a8\u7684\u7b54\u6848\u3002\u867d\u7136\u5e38\u6570$\\times 2$\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u5f71\u54cd\u590d\u6742\u5ea6\u3002\n\n\u5177\u4f53\u600e\u4e48\u505a\u53ef\u4ee5\u770b\u4ee3\u7801\u5b9e\u73b0\u3002\n\n## \u4ee3\u7801\n\n\u8fd9\u9898\u6bd4\u8f83\u5361\u5e38\uff0c\u6240\u4ee5\u7528\u4e86`umap`\u548c\u5feb\u8bfb\u2026\u2026\n\n\u9700\u8981\u79bb\u6563\u5316\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <map>\n#include <tr1/unordered_map>\n#include <cmath>\n\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 4e5 + 5;\n\nint gc() {\n\tstatic char buf[100000], *p1 = buf, *p2 = buf;\n\treturn (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2)) ? EOF : *p1++;\n\t//return getchar();\n}\n\nint geti() {\n    char ch = gc();\n    int f = 1, x = 0;\n\twhile (ch < '0' || ch > '9') f = (ch == '-' ? -1 : 1), ch = gc();\n\twhile (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = gc();\n\treturn f * x;\n}\n\nvoid wri(int x) {\n\tif (x > 9) wri(x / 10);\n    putchar(x % 10 + '0');\n}\n\nint n, m, N;\nint a[MAXN];\nint b[MAXN];\ntr1::unordered_map<int, int> ref;\n\nstruct Query{\n\tint l, r, id;\n};\n\nQuery qs[MAXN];\nint ans[MAXN];\nint min1[MAXN], min2[MAXN], max1[MAXN], max2[MAXN], min3[MAXN], max3[MAXN];\nint res1, res2, res3;\nint block, blo[MAXN];\n\nint Comp(Query a, Query b) {\n\tif (blo[a.l] != blo[b.l]) return a.l < b.l;\n    return a.r < b.r;\n}\n\nvoid Prework() {\n\tfor (int i = 1; i <= n; i++) b[i] = a[i];\n\tsort(b + 1, b + n + 1);\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (!ref[b[i]]) ref[b[i]] = ++N;\n\t}\n\tfor (int i = 1; i <= n; i++) b[i] = ref[a[i]];\n\t//------\n\tblock = sqrt(n);\n\tfor (int i = 1; i <= n; i++) blo[i] = (i - 1) / block + 1;\n}\n\nvoid AddR(int i) {\n\tmin2[b[i]] = min1[b[i]] = min(min1[b[i]], i);\n\tmax2[b[i]] = max1[b[i]] = max(max1[b[i]], i);\n\tres2 = res1 = max(res1, max1[b[i]] - min1[b[i]]);\n}\n\nvoid AddL(int i) {\n\tmin2[b[i]] = min(min2[b[i]], i);\n\tmax2[b[i]] = max(max2[b[i]], i);\n\tres2 = max(res2, max2[b[i]] - min2[b[i]]);\n}\n\nvoid Del(int i) {\n\tmin2[b[i]] = min1[b[i]];\n\tmax2[b[i]] = max1[b[i]];\n\tres2 = res1;\n}\n\nvoid CaptainMo() {\n\tint nl = 1, nr = 0, nb = 0, nbr = 0;\n\tmemset(min1, 0x3f, sizeof(min1));\n\tmemset(min2, 0x3f, sizeof(min2));\n\tmemset(min3, 0x3f, sizeof(min3));\n\tsort(qs + 1, qs + m + 1, Comp);\n\tfor (int i = 1; i <= m; i++) {\n\t\tint l = qs[i].l, r = qs[i].r, id = qs[i].id;\n\t\tif (blo[r] - blo[l] < 2) {\n\t\t\tfor (int j = l; j <= r; j++) {\n\t\t\t\tmin3[b[j]] = min(min3[b[j]], j);\n\t\t\t\tmax3[b[j]] = max(max3[b[j]], j);\n\t\t\t\tres3 = max(res3, max3[b[j]] - min3[b[j]]);\n\t\t\t}\n\t\t\tans[id] = res3;\n\t\t\tfor (int j = l; j <= r; j++) min3[b[j]] = INF, max3[b[j]] = 0;\n\t\t\tres3 = 0;\n\t\t\tcontinue;\n\t\t}\n\t\tif (blo[l] != nb) {\n\t\t\tfor (int j = 1; j <= N; j++) {\n\t\t\t\tmin1[j] = INF;\n\t\t\t\tmin2[j] = INF;\n\t\t\t\tmax1[j] = 0;\n\t\t\t\tmax2[j] = 0;\n\t\t\t}\n\t\t\tres1 = res2 = 0;\n\t\t\tnb = blo[l];\n\t\t\tnbr = min(nb * block, n);\n\t\t\tnr = nbr;\n\t\t\tnl = nr + 1;\n\t\t}\n\t\twhile (nr < r) AddR(++nr);\n\t\twhile (nl > l) AddL(--nl);\n\t\tans[id] = res2;\n\t\twhile (nl <= nbr) Del(nl++);\n\t\tres2 = res1;\n\t}\n}\n\nint main() {\n    n = geti();\n\tfor (int i = 1; i <= n; i++) a[i] = geti();\n\tm = geti();\n\tfor (int i = 1; i <= m; i++) {\n\t\tqs[i].id = i;\n\t\tqs[i].l = geti(); qs[i].r = geti();\n\t}\n\tPrework();\n\tCaptainMo();\n\tfor (int i = 1; i <= m; i++) {\n\t\tprintf(\"%d\\n\", ans[i]);\n\t\t//wri(ans[i]);\n\t\t//putchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1578733504,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5906 \u3010\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f\u3011"
    },
    {
        "content": "\u56de\u6eda\u83ab\u961f\u3002\u3002\u5176\u5b9e\u4e0d\u7b97\u5565\u5f88\u725b\u903c\u7684\u9ed1\u79d1\u6280\u5427\u3002   \n\n\u672c\u6587\u7684\u5b97\u65e8\u662f\u7528\u7b80\u6d01\u7684\u8bed\u8a00\u5c06\u56de\u6eda\u83ab\u961f\u8bb2\u7684\u900f\u5f7b\uff0c\u5e0c\u671b\u5927\u5bb6\u770b\u5b8c\u8fd9\u7bc7\u9898\u89e3\u80fd\u641e\u660e\u767d\u56de\u6eda\u83ab\u961f\u3002   \n\n\u548c\u666e\u901a\u7684\u83ab\u961f\u4e00\u6837\uff0c\u56de\u6eda\u83ab\u961f\u7684\u7b2c\u4e00\u6b65\u81ea\u7136\u5c31\u662f\u6392\u5e8f\u3002  \n\n\u6211\u4eec\u5bf9\u6240\u6709\u8be2\u95ee\u6309\u7167\u4e00\u4e0b\u89c4\u5219\u6392\u5e8f\uff1a    \n\n- \u82e5\u5de6\u7aef\u70b9\u6240\u5c5e\u5757\u7684\u7f16\u53f7\u4e0d\u76f8\u540c\uff0c\u5219\u6309\u5de6\u7aef\u70b9\u6240\u5c5e\u5757\u7684\u7f16\u53f7\u8f83\u5c0f\u7684\u6392\u5728\u524d\u9762\u3002   \n\n- \u82e5\u5de6\u7aef\u70b9\u6240\u5c5e\u5757\u7684\u7f16\u53f7\u76f8\u901a\uff0c\u5219\u8ba9\u53f3\u7aef\u70b9\u5c0f\u7684\u6392\u5728\u524d\u9762\u3002 \n\n\u63a5\u7740\u5c31\u662f\u56de\u6eda\u83ab\u961f\u7b97\u6cd5\u7684\u6838\u5fc3\uff1a  \n\n\u6211\u4eec\u679a\u4e3e\u5f53\u524d\u5904\u7406\u7684\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u7684\u5757\u7684\u7f16\u53f7\uff0c\n\n\u5982\u679c\u73b0\u5728\u7684\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\u4e5f\u5728\u8fd9\u4e2a\u5757\u5185\uff0c\u76f4\u63a5\u66b4\u529b\u505a\u5c31\u597d\u4e86\u3002 \n\n\u5426\u5219\u6211\u4eec\u8bbe\u5f53\u524d\u8be2\u95ee\u662f $[l1,r1]$\uff0c\u4e0b\u4e00\u4e2a\u8be2\u95ee\u662f$[l2,r2]$\uff0c\u5f53\u524d\u5757\u7684\u5de6\u7aef\u70b9\u662f $bl$\uff0c\u53f3\u7aef\u70b9\u662f $br$\u3002 \n\n\u56e0\u4e3a\u7ecf\u8fc7\u4e86\u6392\u5e8f\uff0c\u6240\u4ee5\u5c31\u662f\u8fd9\u6837\u7684\u60c5\u51b5\u3002  \n\n```\n|..|..|....bl l1, l2\uff08l2 \u4e0d\u4e00\u5b9a\u5728 l1 \u540e\u9762\uff09 br ...  r1 ... r2 |...|...... \n```\n\u6211\u4eec\u8bbe\u4e00\u4e2a\u83ab\u961f\u6307\u9488 $p$\uff0c$p$ \u7684\u521d\u59cb\u503c\u662f $br$\uff0c\u56e0\u4e3a\u4fdd\u8bc1\u4e86\u53f3\u7aef\u70b9\u5347\u5e8f\uff0c\u6240\u4ee5\u5230\u7b2c\u4e8c\u4e2a\u8be2\u95ee\u7684\u65f6\u5019\u4e00\u5b9a\u5305\u542b\u4e86 $[br,r1]$ \u8fd9\u6bb5\u4fe1\u606f\uff0c$p$ \u6307\u9488\u76f4\u63a5\u5f80\u53f3\u79fb\u76f4\u5230 $r2$ \u5c31\u597d\u4e86\u3002   \n\n\u540c\u65f6\u8fd8\u6709\u524d\u534a\u6bb5\u4fe1\u606f\u5c31\u662f $[l,br]$ \u8fd9\u4e00\u6bb5\uff0c\u6211\u4eec\u6bcf\u6b21\u8bbe\u4e00\u4e2a\u6307\u9488 $p1$\uff0c\u521d\u59cb\u503c\u4e3a $br$\uff0c\u4e00\u76f4\u79fb\u52a8\u5230 $l$\uff0c\u63a5\u7740\u628a\u8fd9\u6bb5\u8d21\u732e\u52a0\u4e0a\uff0c\u518d\u91cd\u65b0\u79fb\u52a8\u56de $br$ \u628a\u8fd9\u6bb5\u8d21\u732e\u64a4\u9500\u6389\u5c31\u597d\u4e86\u3002  \n\n\u5982\u679c\u5757\u957f\u662f $\\sqrt{n}$ \u7684\u8bdd\u6574\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u7684\u662f $O(n\\sqrt{n})$\uff0c\u8fd9\u91cc\u7b80\u8981\u8bc1\u660e\u4e00\u4e0b\uff1a  \n\n\u56e0\u4e3a\u6709 $\\sqrt{n}$ \u4e2a\u5757\uff0c\u6240\u4ee5\u679a\u4e3e\u5de6\u7aef\u70b9\u662f $O\\sqrt{n}$ \u7684\u3002    \n\n\u7136\u540e\u4e00\u76f4\u8d70\u76f8\u5f53\u4e8e $O(n)$, \u4ece $br$ \u8d70\u56de\u8be2\u95ee\u5de6\u7aef\u70b9\u5728\u4e00\u4e2a\u5757\u5185\uff0c\u662f $O(\\sqrt{n})$ \u7684\u3002  \n\n\u7efc\u5408\u4e00\u4e0b\u5c31\u662f $O(n \\sqrt{n})$\u3002 \n\n\u53e6\u5916\u6b64\u9898\u8f7b\u5fae\u5361\u5e38\uff0c\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\u5c31\u662f\u628a\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u6570\u5355\u72ec\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u4e0b\u6765\uff0c\u6e05\u7a7a\u7684\u65f6\u5019\u6e05\u7a7a\u8fd9\u4e2a\u6570\u7ec4\u91cc\u7684\u6570\u5c31\u884c\u4e86\uff0c\u5b9e\u6d4b\u98de\u5feb\u3002  \n\n",
        "postTime": 1585145715,
        "uid": 133509,
        "name": "KazamiHina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5906 \u3010\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f&\u4e0d\u5220\u9664\u83ab\u961f\u3011"
    },
    {
        "content": "\u545c\u547c\u547c\u8fd9\u4e2a\u56de\u6eda\u83ab\u961f\u5927\u6982\u662f\u4e00\u79cd\u6b63\u96be\u5219\u53cd\u7684\u601d\u8def\uff0c\u5982\u679c\u9047\u5230\u6bd4\u8f83\u6bd2\u7624\u7684\u5220\u9664\u7684\u8bdd\uff0c\u8981\u4e0d\u5c31\u51cf\u5c11\u5220\u9664\u7684\u6b21\u6570\uff0c\u8981\u4e0d\u5c31\u628a\u5220\u9664\u6539\u6210\u63d2\u5165\n\n\u6070\u597d\u8fd9\u9053\u9898\u90fd\u7528\u4e86\uff0c\u867d\u7136\u5957\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u83ab\u961f\u6bd4\u8f83\u597d\u505a\uff08\u53ef\u60dc\u6709\u4e2a$log$\uff09\uff0c\u53ef\u662f\u8fd9\u9053\u9898\u5df2\u7ecf\u5199\u4e86\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f&\u4e0d\u5220\u9664\u83ab\u961f\uff0c\u6240\u4ee5\u6211\u4eec\u81f3\u5c11\u5f97\u7528\u83ab\u961f\n\n\u9996\u5148\u4e00\u770b\u5c31\u77e5\u9053\u7528$st,ed$\u4e24\u4e2a\u6876\uff0c\u6bcf\u6b21\u90fd\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u5728$[l,r]$(\u8868\u793a\u5f53\u524d\u95ee\u9898\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e)\u3002\n\n\u4f46\u662f\u5982\u679c\u5957\u666e\u901a\u7684\u5957\u4e00\u4e2a\u83ab\u961f\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e1c\u897f\u53ef\u4ee5\u505a\u5230$O(1)$\u4fee\u6539\uff0c\u4f46\u662f\u4f3c\u505a\u4e0d\u5230O(1)\u64a4\u9500\uff08\u9664\u975e\u5f00\u5927\u7a7a\u95f4\u5b58\u4e0b\u6765\uff09\n\n\u539f\u6765\u7684\u83ab\u961f\u662f\u5de6\u7aef\u70b9\u5728\u6bcf$\\sqrt{m}$\u533a\u95f4\u5185\u7684\u95ee\u9898\u6392\u5e8f,\u6240\u4ee5\u8fd9\u4e9b\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u90fd\u5728\u4e00\u4e2a\u5757\u5185\u90e8\uff0c\u53f3\u7aef\u70b9\u5219\u662f\u6309$r$\u5347\u5e8f\u6392\u5e8f\uff08\u4e0d\u7ba1\u5947\u5076\u6027\u4f18\u5316\uff09\uff0c\u53ef\u89c1\u5bf9\u53f3\u7aef\u70b9\u53ef\u4ee5\u505a\u5230\u6ca1\u6709\u5220\u9664\u64cd\u4f5c\uff0c\u4f46\u662f\u5de6\u7aef\u70b9\u5219\u4e0d\u7136\uff0c\u51b5\u4e14\u5de6\u7aef\u70b9\u53ea\u6709$\\sqrt{m}$\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u5bf9\u5de6\u7aef\u70b9\u4e5f\u53ef\u4ee5\u505a\u5230\u6ca1\u6709\u63d2\u5165\u64cd\u4f5c\uff0c\u90a3\u5c31\u662f\u6bcf\u6b21\u4ece\u8fd9\u4e2a\u5757\u7684\u6700\u53f3\u8fb9\u5f80\u5de6\u79fb\uff0c\u6bcf\u6b21\u5411\u5de6\u4e4b\u540e\u8981\u8fd8\u539f\u5c31\u884c\u4e86\u3002\n\n\u53ef\u4ee5\u770b\u89c1\u6bcf\u4e2a\u5757\u5185\u7684\u8be2\u95ee\u6700\u591a\u5411\u53f3$\\sqrt{m}$\u6b21\n\n\u6bcf\u4e2a\u8be2\u95ee\u6700\u591a\u5411\u5de6\u8d70$\\sqrt{m}$\u6b21\n\n\u590d\u6742\u5ea6\u8fd8\u662f$O(n\\sqrt{m})$\n\n\u9664\u6b64\u4e4b\u5916\u672c\u9898\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u8981\u6ce8\u610f\uff0c\u5199\u5728\u4ee3\u7801\u6ce8\u91ca\u4e0a\u4e86\n\n```cpp\n#include<touwenjian.h>\n\nusing namespace std;\n\nconst int maxn=502000;//\u7528\u4e0d\u5230\u8fd9\u4e48\u591a\u7684\u7a7a\u95f4\n\nint n,m;\nint st[maxn],ed[maxn],looker[maxn],lok[maxn],a[maxn],b[maxn];\nint ans;\nint bj[maxn];\nint len,cnt;\nint aans[maxn];\n\nstruct que{\n\tint l,r,bh;\n}q[maxn];\n\nint cmp(que aa,que bb)\n{\n\tif((aa.l-1)/len==(bb.l-1)/len) return aa.r<bb.r;\n\treturn aa.l<bb.l;\n}\n\nint tst[maxn],ted[maxn],tlooker[maxn],tcnt;\n\nint bl(int l,int r) //\u8fd9\u4e1c\u897f\u5f97\u5355\u72ec\u5f00\u4e00\u5957\u53d8\u91cf\u6765\n{\n\tint i,ans=0;\n\tfor(i=l;i<=r;i++)\n\t{\n\t\tif(!tst[a[i]]) tst[a[i]]=i;\n\t\tted[a[i]]=max(ted[a[i]],i); ans=max(ted[a[i]]-tst[a[i]],ans); tlooker[++tcnt]=a[i]; \n\t}\n\tfor(i=1;i<=tcnt;i++) tst[tlooker[i]]=ted[tlooker[i]]=0,tlooker[i]=0;\n\ttcnt=0;\n\treturn ans;\n}\n\ninline void addr(int x)  //\u53f3\u7aef\u70b9\u53ea\u6709\u63d2\u5165\uff0c\u56e0\u6b64\u53ef\u4ee5\u4fdd\u7559\n{\n\tif(!st[a[x]]) st[a[x]]=x; \n\ted[a[x]]=max(ed[a[x]],x); ans=max(ed[a[x]]-st[a[x]],ans); looker[++cnt]=a[x];\n}\n\ninline void addl(int x) //\u5de6\u7aef\u70b9\u6bcf\u6b21\u90fd\u8981\u6e05\u7a7a\uff0c\u9664\u4e86\u5224\u65ad\u7b54\u6848\u5728\u5de6\u8fb9\u8fd9\u4e2a\u5757\u7684\u60c5\u51b5\u6682\u65f6\u7528\u4e00\u7528ed\u6570\u7ec4\uff08\u4e4b\u540e\u4e5f\u8981\u6e05\u7a7a\uff09\uff0c\u5176\u4ed6\u90fd\u4e0d\u80fd\u52a8\u3002\n{\n\tif(!ed[a[x]]) ed[a[x]]=x;\n\telse ans=max(ans,ed[a[x]]-x);\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tregister int i,j;\n\tcin>>n;\n\tlen=sqrt(n);\n\tfor(i=1;i<=n;i++) cin>>a[i],b[i]=a[i];\n\tsort(b+1,b+n+1); int tot=unique(b+1,b+n+1)-b-1;\n\tfor(i=1;i<=n;i++) a[i]=lower_bound(b+1,b+tot+1,a[i])-b;\n\tcin>>m;\n\tfor(i=1;i<=m;i++) cin>>q[i].l>>q[i].r,q[i].bh=i;\n\tsort(q+1,q+m+1,cmp);\n\ti=1;\n\tfor(j=1;j<=(n-1)/len+1;j++)\n\t{\n\t\tans=0;\n\t\tint baspla=min(len*j,n);\n\t\tint l=baspla+1,r=baspla;\n\t\tfor(;(q[i].l-1)/len+1==j&&i<=m;i++) //\u4e00\u5b9a\u8981\u52a0\u4e0ai<=m\u7684\u5224\u65ad\n\t\t{\n\t\t\tif((q[i].l-1)/len==(q[i].r-1)/len) aans[q[i].bh]=bl(q[i].l,q[i].r);\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile(q[i].r>r) addr(++r); //\u83ab\u961f\u57fa\u672c\u64cd\u4f5c\n\t\t\t\tint rigans=ans;\n\t\t\t\twhile(q[i].l<l) addl(--l);\n\t\t\t\twhile(l<=baspla) { if(ed[a[l]]<=baspla) ed[a[l]]=0; l++;}\n\t\t\t\taans[q[i].bh]=ans; \n\t\t\t\tans=rigans;\n\t\t\t}\n\t\t}\n\t\tfor(int k=1;k<=cnt;k++) st[looker[k]]=ed[looker[k]]=0,looker[k]=0;\n        //\u8bb0\u5f97\u6e05\u7a7a\n\t\tcnt=0;\n\t}\n\tfor(i=1;i<=m;i++) cout<<aans[i]<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1594112420,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5906 \u3010\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f&\u4e0d\u5220\u9664\u83ab\u961f\u3011"
    },
    {
        "content": "[P5906 \u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f&\u4e0d\u5220\u9664\u83ab\u961f](https://www.luogu.com.cn/problem/P5906)\u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://zybuluo.com/xiaoziyao/note/1717187)\n\n## \u9898\u610f\n\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a$n$\u7684\u5e8f\u5217$a$\uff0c$m$\u6b21\u8be2\u95ee\uff0c\u6c42\u533a\u95f4$[l,r]$\u5185\u76f8\u540c\u7684\u6570\u7684\u6700\u8fdc\u95f4\u9694\u8ddd\u79bb\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684\u8ddd\u79bb\u6307\u4e0b\u6807\u5dee\u7684\u7edd\u5bf9\u503c\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\leqslant n,m\\leqslant 2\\cdot 10^5$\u3002\n\n## \u5206\u6790\n\u8fd9\u662f\u4e00\u9053\u56de\u6eda\u83ab\u961f\u7684\u7ec6\u8282\u9898\uff08\u5927\u90e8\u5206OIer\u7684\u56de\u6eda\u83ab\u961f\u5165\u95e8\u9898\u4e3a[AT1219 \u6b74\u53f2\u306e\u7814\u7a76](https://www.luogu.com.cn/problem/AT1219)\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6211\u5c31\u6ca1\u6709\u5bf9\u56de\u6eda\u83ab\u961f\u7684\u8bb2\u89e3\u4e86\uff09\uff0c\u809d\u4e86\u5f88\u4e45\uff0c\u5982\u679c\u4e0d\u4f1a\u56de\u6eda\u83ab\u961f\u7684\u4eba\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u7bc7\u9898\u89e3\u3002\n\n\u5728\u56de\u6eda\u83ab\u961f\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u4e0b\u4e24\u4e2a\u9884\u5904\u7406\n\u5206\u5757\uff1a\n```\nt=sqrt(n);\nfor(i=1;i<=t;i++)\n\tl[i]=r[i-1]+1,r[i]=i*t;\nif(r[t]<n)\n\tt++,l[t]=r[t-1]+1,r[t]=n;\nfor(i=1;i<=t;i++)\n\tfor(j=l[i];j<=r[i];j++)\n\t\tpos[j]=i;\n```\n\u6ce8\uff1a\u8fd9\u91cc$t$\u6307\u5757\u6570\uff0c$l$\u6307\u5757\u7684\u5de6\u8fb9\u754c\uff0c$r$\u6307\u5757\u7684\u53f3\u8fb9\u754c\uff0c$pos$\u6307\u5f53\u524d\u4f4d\u7f6e\u6240\u5728\u7684\u5757\u3002\n\n\u79bb\u6563\u5316\uff1a\n```\nstruct number{\n\tint pos,val;\n}num[maxn];\ninline int cmp1(number a,number b){\n\treturn a.val<b.val;\n}\nfor(i=1;i<=n;i++)\n\tscanf(\"%d\",&num[i].val),num[i].pos=i;\nsort(num+1,num+1+n,cmp1);\ntot=0;\nfor(i=1;i<=n;i++){\n\tif(i==1||num[i-1].val!=num[i].val)\n\t\ttot++;\n\ta[num[i].pos]=tot;\n}\n```\n\u8fd9\u91cc\u7684\u79bb\u6563\u5316\u6211\u5199\u7684\u65b9\u6cd5\u6709\u70b9\u4e0d\u4e00\u6837\uff0c\u4f46\u610f\u601d\u5f88\u5bb9\u6613\u61c2\uff0c\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff08$num$\u662f\u79bb\u6563\u5316\u7684\u6570\u7ec4\uff0c$a$\u662f\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\uff0c$tot$\u662f\u5e2e\u52a9\u79bb\u6563\u5316\u7684\u8ba1\u6570\u5668\uff09\u3002\n\n\u7136\u540e\u662f$\\text{add}$\u51fd\u6570\uff0c\u5373\u66b4\u529b\u5728\u533a\u95f4\u4e2d\u52a0\u5165\u8fd9\u4e2a\u6570\uff0c\u66f4\u65b0\u7b54\u6848\uff1a\n```\ninline void add(int x){\n\tst[a[x]]=min(st[a[x]],x),ed[a[x]]=max(ed[a[x]],x);\n\tnow=max(now,ed[a[x]]-st[a[x]]);\n}\n```\n\n\u6211\u4eec\u6309\u7167\u56de\u6eda\u83ab\u961f\u7684\u677f\u5b50\uff0c\u53ef\u4ee5\u628a\u83ab\u961f\u62c6\u6210\u56db\u4e2a\u90e8\u5206\uff1a\n1.\u5728\u540c\u4e00\u4e2a\u5757\u4e2d\u7684\u66b4\u529b\uff1a\u8fd9\u4e2a\u5f88\u5bb9\u6613\u5199\uff1a\n```\nif(pos[qx]==pos[qy]){\n    for(j=qx;j<=qy;j++)\n\t\ttmpst[a[j]]=inf,tmped[a[j]]=-inf;\n\tfor(j=qx;j<=qy;j++){\n\t\ttmpst[a[j]]=min(tmpst[a[j]],j),tmped[a[j]]=max(tmped[a[j]],j);\n\t\ttmpn=max(tmpn,tmped[a[j]]-tmpst[a[j]]);\n\t}\n\tans[qi]=tmpn;\n\tcontinue;\n}\n```\n2.\u6362\u5757\uff1a\u8fd9\u91cc\u7684\u6362\u5757\u53ef\u4ee5\u76f4\u63a5\u5c06\u7a7a\u533a\u95f4\u653e\u5728$r_{pos[x]}$\u7684\u4f4d\u7f6e\uff0c\u5373\u5f53\u524d\u8be2\u95ee\u7684\u5de6\u8fb9\u754c\u6240\u5728\u5757\u7684\u53f3\u8fb9\u754c\uff0c\u8bb0\u5f97\u8981\u628a$st$\u6570\u7ec4\u7f6e\u6781\u5927\u503c\uff0c$ed$\u6570\u7ec4\u7f6e\u6781\u5c0f\u503c\uff0c\u56e0\u4e3a\u6362\u5757\u64cd\u4f5c\u53ea\u6709$\\sqrt{n}$\u6b21\uff0c\u56e0\u6b64\u66b4\u529b\u6e05\u96f6\u603b\u4f53\u662f$O(n\\sqrt{n})$\u7684\uff08$st$\u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u5728\u533a\u95f4\u4e2d\u5f00\u59cb\u7684\u4f4d\u7f6e\uff0c$ed$\u8bb0\u5f55\u7ed3\u675f\u7684\u4f4d\u7f6e\uff09\u3002\n```\nif(pos[qx]!=lst){\n\tx=r[pos[qx]]+1,y=r[pos[qx]];\n\tnow=0,lst=pos[qx];\n\tfor(j=1;j<=tot;j++)\n\t\tst[j]=inf,ed[j]=-inf;\n}\n```\n3.\u53f3\u533a\u95f4\u6269\u5f20\uff0c\u5f88\u5bb9\u6613\u5199\u51fa\u4ee3\u7801\uff1a\n```\nwhile(y<qy)\n\ty++,add(y);\n```\n4.\u8bb0\u5f55\u5f53\u524d\u7684\u7b54\u6848\uff0c\u66f4\u65b0\u5f53\u524d\u533a\u95f4\u7b54\u6848\uff0c\u518d\u7528\u4e4b\u524d\u7684\u7b54\u6848\u8986\u76d6\u5f53\u524d\u7684\u7b54\u6848\uff08$tmpst$\u548c$tmped$\u662f\u8bb0\u5f55\u5de6\u53f3\u533a\u95f4\u7684\u6570\u7ec4\uff0c$tmpn$\u8bb0\u5f55\u7b54\u6848\uff0c$tmpx$\u8bb0\u5f55\u4e4b\u524d\u7684\u5de6\u533a\u95f4\uff09\uff0c\u4f46\u662f\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u70b9\u9ad8\uff0c\u56e0\u4e3a\u6e05\u96f6\u64cd\u4f5c\u6700\u52a3$O(n)$\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u4f1a\u9ad8\u8fbe$O(nm)$\u3002\n```\ntmpn=now,tmpx=x;\nfor(j=qx;j<=qy;j++)\n\ttmpst[a[j]]=st[a[j]],tmped[a[j]]=ed[a[j]];\nwhile(x>qx)\n\tx--,add(x);\nans[qi]=now,now=tmpn,x=tmpx;\nfor(j=qx;j<=qy;j++)\n\tst[a[j]]=tmpst[a[j]],ed[a[j]]=tmped[a[j]];\n```\n\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u83b7\u5f97$15pts$\u7684\u9ad8\u5206\uff01\n\n\u8003\u8651\u4f18\u5316\uff0c\u53d1\u73b0\u8986\u76d6\u6570\u7ec4\u592a\u9ebb\u70e6\u4e86\uff0c\u76f4\u63a5\u5728$tmpst$\u4e0e$tmped$\u4e0a\u4fee\u6539\u53ef\u4ee5\u7701\u53bb\u4e00\u4e2a\u5faa\u73af\uff08\u4f46\u53ea\u80fd\u4f18\u5316\u4e00\u4e9b\u5e38\u6570\uff09\u3002\n\n\u6211\u4eec\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u6539\u4e3a\uff1a\n```\nwhile(y<qy)\n\ty++,add(y);\ntmpn=now,tmpx=x;\nfor(j=qx;j<=qy;j++)\n\ttmpst[a[j]]=st[a[j]],tmped[a[j]]=ed[a[j]];\nwhile(x>qx)\n\tx--,tmpadd(x);\nans[qi]=now,now=tmpn,x=tmpx;\n```\n\u7136\u540e\u589e\u52a0\u4e00\u4e2a$\\text{tmpadd}$\u51fd\u6570\uff1a\n```\ninline void tmpadd(int x){\n\ttmpst[a[x]]=min(tmpst[a[x]],x),tmped[a[x]]=max(tmped[a[x]],x);\n\tnow=max(now,tmped[a[x]]-tmpst[a[x]]);\n}\n```\n\u5206\u6570\uff1a$65pts$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u74f6\u9888\u8fd8\u662f\u5728\u8bb0\u5f55$tmpst$\u4e0e$tmped$\u4e0a\uff0c\u6211\u4eec\u4f1a\u8bb0\u5f55\u5f88\u591a\u4e0d\u4f1a\u4fee\u6539\u5230\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u5c0f$trick$\uff1a\u65f6\u95f4\u6233+$vis$\u6570\u7ec4\u4f18\u5316\uff0c\u8fd9\u4e2a\u4f18\u5316\u53ef\u4ee5\u9002\u7528\u4e8e\u5f88\u591a\u91cd\u7f6e\u6570\u7ec4\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u74f6\u9888\u7684\u9898\u76ee\u3002\n\n\u5177\u4f53\u64cd\u4f5c\uff1a\u6bcf\u6b21\u5faa\u73af\u5f00\u59cb\u65f6$stp$\u52a0\u4e00\uff08$stp$\u6307\u65f6\u95f4\u6233\uff09\uff0c\u7136\u540e\u76f4\u63a5\u5220\u53bb\u4e0a\u9762\u4ee3\u7801\u7684\u5faa\u73af\u7f6e$tmpst$\u548c$tmped$\u90e8\u5206\uff0c\u7ee7\u7eed\u4fee\u6539$\\text{tmpadd}$\u51fd\u6570\uff1a\n```\ninline void tmpadd(int x){\n\tif(vis[a[x]]!=stp)\n\t\tvis[a[x]]=stp,tmpst[a[x]]=st[a[x]],tmped[a[x]]=ed[a[x]];\n\ttmpst[a[x]]=min(tmpst[a[x]],x),tmped[a[x]]=max(tmped[a[x]],x);\n\tnow=max(now,tmped[a[x]]-tmpst[a[x]]);\n}\n```\n\u5927\u610f\u5c31\u662f\u5982\u679c\u8fd9\u4e2a\u70b9\u5728\u5f53\u524d\u65f6\u95f4\u6233\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u5c31\u7ed9$tmpst$\u548c$tmped$\u8d4b\u503c\uff0c\u5e76\u8bb0\u5f55$vis$\u6570\u7ec4\uff0c\u7531\u4e8e$x$\u6bcf\u6b21\u56de\u6eda\u90fd\u4f1a\u5230\u5f53\u524d\u5757\u7684\u53f3\u8fb9\u754c\u52a0\u4e00\u4f4d\u7f6e\uff0c\u56e0\u6b64$x$\u5230$qx$\u7684\u8ddd\u79bb\u6700\u591a\u662f$\\sqrt{n}$\uff0c\u56e0\u6b64\u6bcf\u6b21\u8be2\u95ee\u6700\u591a\u8fdb\u884c$\\sqrt{n}$\u6b21$\\text{tmpadd}$\u64cd\u4f5c\uff0c\u8fd9\u6837$tmpst$\u548c$tmped$\u7684\u8d4b\u503c\u5c31\u53d8\u4e3a\u4e86$O(\\sqrt{n})$\uff0c\u5373\u6574\u4f53\u8d4b\u503c\u7684\u590d\u6742\u5ea6\u964d\u5230\u4e86$O(m\\sqrt{n})$\u3002\n\n\u603b\u4f53\u590d\u6742\u5ea6$O(n\\sqrt{n})$\uff08\u8fd9\u91cc\u9ed8\u8ba4$n,m$\u540c\u9636\uff0c\u4e8b\u5b9e\u4e5f\u5982\u6b64\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\n## \u4ee3\u7801\n```\n#include<stdio.h>\n#include<math.h>\n#include<algorithm>\n#define inf 1000000000\nusing namespace std;\nconst int maxn=200005,maxm=200005;\nint i,j,k,m,n,t,tot,x,y,now,lst,stp;\nint a[maxn],ans[maxm],l[maxn],r[maxn],pos[maxn],st[maxn],ed[maxn],tmpst[maxn],tmped[maxn],vis[maxn];\nstruct number{\n\tint pos,val;\n}num[maxn];\nstruct question{\n\tint x,y,id;\n}q[maxm];\ninline int cmp1(number a,number b){\n\treturn a.val<b.val;\n}\ninline int cmp2(question a,question b){\n\treturn pos[a.x]^pos[b.x]? a.x<b.x:a.y<b.y; \n}\ninline void add(int x){\n\tst[a[x]]=min(st[a[x]],x),ed[a[x]]=max(ed[a[x]],x);\n\tnow=max(now,ed[a[x]]-st[a[x]]);\n}\ninline void tmpadd(int x){\n\tif(vis[a[x]]!=stp)\n\t\tvis[a[x]]=stp,tmpst[a[x]]=st[a[x]],tmped[a[x]]=ed[a[x]];\n\ttmpst[a[x]]=min(tmpst[a[x]],x),tmped[a[x]]=max(tmped[a[x]],x);\n\tnow=max(now,tmped[a[x]]-tmpst[a[x]]);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tt=sqrt(n);\n\tfor(i=1;i<=t;i++)\n\t\tl[i]=r[i-1]+1,r[i]=i*t;\n\tif(r[t]<n)\n\t\tt++,l[t]=r[t-1]+1,r[t]=n;\n\tfor(i=1;i<=t;i++)\n\t\tfor(j=l[i];j<=r[i];j++)\n\t\t\tpos[j]=i;\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&num[i].val),num[i].pos=i;\n\tsort(num+1,num+1+n,cmp1);\n\ttot=0;\n\tfor(i=1;i<=n;i++){\n\t\tif(i==1||num[i-1].val!=num[i].val)\n\t\t\ttot++;\n\t\ta[num[i].pos]=tot;\n\t}\n\tscanf(\"%d\",&m);\n\tfor(i=1;i<=m;i++)\n\t\tscanf(\"%d%d\",&q[i].x,&q[i].y),q[i].id=i;\n\tsort(q+1,q+1+m,cmp2);\n\tx=1,y=0,now=0,lst=0;\n\tfor(i=1;i<=m;i++){\n\t\tstp++;\n\t\tint qx=q[i].x,qy=q[i].y,qi=q[i].id,tmpn=0,tmpx;\n\t\tif(pos[qx]==pos[qy]){\n\t\t\tfor(j=qx;j<=qy;j++)\n\t\t\t\ttmpst[a[j]]=inf,tmped[a[j]]=-inf;\n\t\t\tfor(j=qx;j<=qy;j++){\n\t\t\t\ttmpst[a[j]]=min(tmpst[a[j]],j),tmped[a[j]]=max(tmped[a[j]],j);\n\t\t\t\ttmpn=max(tmpn,tmped[a[j]]-tmpst[a[j]]);\n\t\t\t}\n\t\t\tans[qi]=tmpn;\n\t\t\tcontinue;\n\t\t}\n\t\tif(pos[qx]!=lst){\n\t\t\tx=r[pos[qx]]+1,y=r[pos[qx]];\n\t\t\tnow=0,lst=pos[qx];\n\t\t\tfor(j=1;j<=tot;j++)\n\t\t\t\tst[j]=inf,ed[j]=-inf;\n\t\t}\n\t\twhile(y<qy)\n\t\t\ty++,add(y);\n\t\ttmpn=now,tmpx=x;\n\t\twhile(x>qx)\n\t\t\tx--,tmpadd(x);\n\t\tans[qi]=now,now=tmpn,x=tmpx;\n\t}\n\tfor(i=1;i<=m;i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1592661190,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5906 \u3010\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f&\u4e0d\u5220\u9664\u83ab\u961f\u3011"
    },
    {
        "content": "\u5148\u63a8\u8350\u4e00\u4e2a\u5b66\u4e60\u83ab\u961f\u7684\u535a\u5ba2\n\n\u6ca1\u5b66\u56de\u6eda\u83ab\u961f\u53ef\u4ee5\u770b\u770b\u601d\u60f3\uff0c\u653e\u94fe\u63a5\uff1a [\u83ab\u961f\u7b97\u6cd5\u2014\u2014\u4ece\u5165\u95e8\u5230\u9ed1\u9898](https://www.cnblogs.com/WAMonster/p/10118934.html)\n\n\u672c\u4eba\u5c31\u662f\u5728\u90a3\u91cc\u5b66\u7684QAQ\uff0c\u89c9\u5f97\u8bb2\u7684\u633a\u597d\u7684\u3002\n\n\n#### \u672c\u5f31\u5f31\u5f00\u4e864\u4e2a\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u4fe1\u606f\n\nnow\u8bb0\u5f55\u5f53\u524d\u7684\u7b54\u6848\n\n\u5148\u5bf9\u539f\u6570\u7ec4\u79bb\u6563\u5316\uff0ctyp[i]\n\nmil[typ[i]]-> \u5de6\u7aef\u70b9\u626b\u5230\u7684typ[i]\u8fd9\u4e2a\u6570\u7684\u6700\u5c0f\u5750\u6807\n\nmal[typ[i]]-> \u5de6\u7aef\u70b9\u626b\u5230\u7684typ[i]\u8fd9\u4e2a\u6570\u7684\u6700\u5927\u5750\u6807\n\nmir[typ[i]]-> \u53f3\u7aef\u70b9\u626b\u5230\u7684typ[i]\u8fd9\u4e2a\u6570\u7684\u6700\u5c0f\u5750\u6807\n\nmar[typ[i]]-> \u53f3\u7aef\u70b9\u626b\u5230\u7684typ[i]\u8fd9\u4e2a\u6570\u7684\u6700\u5927\u5750\u6807\n\n\u5148\u5bf9\u8fd9\u56db\u4e2a\u6570\u7ec4\u521d\u59cb\u5316\n\n\u53ef\u4ee5\u53d1\u73b0\n\n### \u53f3\u7aef\u70b9\u6bcf\u6b21\u626b\u5230\u4e00\u4e2a\u6570\uff0c\n\n\u7528\u5f53\u524d\u70b9\u7684\u5750\u6807 i \u66f4\u65b0mir[typ[i]]\u548c mar[typ[i]],\n\n\u518d\u7528(mar[typ[i]]-mir[typ[i]])\u66f4\u65b0now\u3002\n\n### \u5de6\u7aef\u70b9\u6bcf\u6b21\u626b\u5230\u4e00\u4e2a\u6570\uff0c\n\n\u7528\u5f53\u524d\u70b9\u7684\u5750\u6807 i \u66f4\u65b0mil[typ[i]]\u548c mal[typ[i]],\n\n\u518d\u7528(mar[typ[i]]-mil[typ[i]])\u548c(mal[typ[i]]-mil[typ[i]])\u53d6\u8f83\u5927\u503c\u66f4\u65b0now\u3002\n\n### Tip:\n\n\u56e0\u4e3a\u53ef\u80fd\u53f3\u7aef\u70b9\u6ca1\u6709\u626b\u5230\u5f53\u524dtyp[i]\u8fd9\u4e2a\u6570\u5373\u53f3\u8fb9\u6ca1\u6709\u8fd9\u4e2a\u6570\uff0c\n\n\u6240\u4ee5\u8fd8\u8981\u7528(mal[typ[i]]-mil[typ[i]])\u6765\u66f4\u65b0\u3002\n\n#### \u6700\u540e\n\u56e0\u4e3a\u56de\u6eda\u83ab\u961f\u6bcf\u6b21\u5de6\u7aef\u70b9\u505a\u5b8c\u540e\u8981\u8fd8\u539f\uff0c\n\n\u56e0\u6b64\u66f4\u65b0\u7684mil[typ[i]]\u548cmal[typ[i]]\u662f\u8981\u521d\u59cb\u5316\u7684\uff0c\n\n\u540c\u7406\uff0c\u5728\u505a\u5b8c\u6bcf\u4e00\u5757\u7684\u64cd\u4f5c\u65f6\uff0c\u56e0\u4e3a\u53f3\u7aef\u70b9\u4e5f\u8981\u8fd8\u539f\uff0c\n\n\u6240\u4ee5\u5728\u5916\u9762\u7684\u5faa\u73af\u91cc\u8981\u628amar[typ[i]]\u548cmir[typ[i]]\u4e5f\u8981\u521d\u59cb\u5316\u3002\n\n### \u6ce8\u610f\uff01\uff01\uff1a\n\u5faa\u73af\u4e2d\u5343\u4e07\u4e0d\u8981\u7528memset\u521d\u59cb\u5316\uff0c\u5e38\u6570\u7206\u70b8\uff01\n\n\u4e0d\u7528memset\u7684\u64cd\u4f5c\u5f88\u597d\u5b9e\u73b0\uff0c\n\n\u5de6\u7aef\u70b9\u8fb9\u8fd8\u539f\u8fb9\u521d\u59cb\u5316\uff0c\n\n\u53f3\u7aef\u70b9\u5728\u5185\u90e8\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u4ece\u521d\u59cb\u4f4d\u7f6e\u4e00\u76f4\u5faa\u73af\u5230\u521a\u505a\u5b8c\u7684\u6700\u540e\u4e00\u4e2a\u8be2\u95ee\u7684\u53f3\u7aef\u70b9.\n\n\u7136\u540e\u5c31\u5b8c\u7f8eAC\u4e86\u2026\u2026\n\n```cpp\n//P5906 \u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int maxn=200040;\nint L[maxn],R[maxn],pos[maxn],t,inp[maxn],n,m,len,typ[maxn],ans[maxn];\nint mil[maxn],mal[maxn],mir[maxn],mar[maxn];\nstruct query{\n    int l,r,id;\n}ask[maxn];\nbool cmp(query a,query b){\n    return (pos[a.l]^pos[b.l])?pos[a.l]<pos[b.l]:a.r<b.r;\n} //\u5bf9\u8be2\u95ee\u7684\u6392\u5e8f \nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&typ[i]),inp[i]=typ[i];\n//                          \u79bb\u6563\u5316 \n    sort(inp+1,inp+n+1);\n    len=unique(inp+1,inp+1+n)-inp-1;\n    for(int i=1;i<=n;i++) typ[i]=lower_bound(inp+1,inp+1+len,typ[i])-inp;\n//                          \u5206\u5757\n    t=sqrt(n);\n    for(int i=1;i<=t;i++) L[i]=(i-1)*t+1,R[i]=i*t;\n    if(R[t]<n) t++,L[t]=R[t-1]+1,R[t]=n;\n    for(int i=1;i<=t;i++) \n        for(int j=L[i];j<=R[i];j++)\n            pos[j]=i;\n//                          \u5904\u7406\u8be2\u95ee\u4fe1\u606f \n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n        scanf(\"%d%d\",&ask[i].l,&ask[i].r),ask[i].id=i;\n    sort(ask+1,ask+m+1,cmp);\n    int p=1;\n//                          \u521d\u59cb\u5316 \n    memset(mil,0x3f3f3f,sizeof mil);\n    memset(mal,0,sizeof mal);\n    memset(mar,0,sizeof mar);\n    memset(mir,0x3f3f3f,sizeof mir);\n//                          \u5904\u7406\u8be2\u95ee \n    for(int k=1;k<=t;k++){\n        int l=R[k]+1,r=R[k]; //\u5de6\u53f3\u7aef\u70b9\u8d77\u59cb\u4f4d\u7f6e \n        int now=0;\n        for(;pos[ask[p].l]==k;p++){\n            int ql=ask[p].l,qr=ask[p].r;\n            int tmp;\n            if(pos[ql]==pos[qr]){ //\u5f53\u5de6\u53f3\u7aef\u70b9\u5728\u540c\u4e00\u4e2a\u5757\u5185\uff0c\u66b4\u529b\u5904\u7406Orz \n                tmp=0;\n                for(int i=ql;i<=qr;i++){\n                    mil[typ[i]]=min(mil[typ[i]],i);\n                    mal[typ[i]]=max(mal[typ[i]],i);\n                    tmp=max(tmp,mal[typ[i]]-mil[typ[i]]);\n                }\n                ans[ask[p].id]=tmp;\n                for(int i=ql;i<=qr;i++) mil[typ[i]]=0x3f3f3f,mal[typ[i]]=0;\n                continue;\n            }\n            while(r<qr){ //\u79fb\u52a8\u53f3\u7aef\u70b9 \n                r++;\n                mir[typ[r]]=min(mir[typ[r]],r);\n                mar[typ[r]]=max(mar[typ[r]],r);\n                now=max(now,mar[typ[r]]-mir[typ[r]]);\n            }\n            tmp=now; //\u4e3a\u540e\u9762\u7684\u5de6\u7aef\u70b9\u521d\u59cb\u5316\u7528 \n            while(l>ql){ //\u79fb\u52a8\u5de6\u7aef\u70b9 \n                --l; \n                mil[typ[l]]=min(mil[typ[l]],l);\n                mal[typ[l]]=max(mal[typ[l]],l);\n                now=max(now,max(mal[typ[l]]-mil[typ[l]],mar[typ[l]]-mil[typ[l]])); //\u6ce8\u610f\u6bd4\u8f83\u4e24\u4e2a\uff01 \n            }\n            ans[ask[p].id]=now; //\u8bb0\u5f55\u7b54\u6848 \n            while(l<R[k]+1){ //\u5de6\u7aef\u70b9\u8fd8\u539f \n                mil[typ[l]]=0x3f3f3f;\n                mal[typ[l]]=0;\n                l++;\n            }\n            now=tmp; //\u8fd8\u539f\u5230\u53ea\u79fb\u52a8\u53f3\u7aef\u70b9\u7684\u7b54\u6848\uff0c\u5373\u5904\u7406\u5de6\u7aef\u70b9\u8fd8\u539f\u540e\u7684\u540e\u6548\u6027 \n        }\n        for(int i=R[k]+1;i<=ask[p-1].r;i++) mir[typ[i]]=0x3f3f3f,mar[typ[i]]=0;\n        //\u53f3\u7aef\u70b9\u8fd8\u539f ask[p-1].r\u5c31\u662f\u521a\u521a\u53f3\u7aef\u70b9\u626b\u5230\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002 \n    }\n    for(int i=1;i<=m;i++) printf(\"%d\\n\",ans[i]);  \n    return 0; //\u5b8c\u7ed3\u6492\u82b1\uff01QwQ \n}\n```\n\n\u6700\u540e\u8fd8\u662f\u63a8\u8350\u5bf9\u83ab\u961f\u4e0d\u719f\u6089\u7684Older\u770b\u770b\u4e0a\u9762\u5206\u4eab\u7684\u94fe\u63a5\uff0c\u771f\u5fc3\u633a\u597d\u7684\uff08\u4e0d\u662f\u6211\u7684\u535a\u5ba2\uff09.",
        "postTime": 1582603574,
        "uid": 291139,
        "name": "TinG\u96ea\u4e4b\u4e0b",
        "ccfLevel": 5,
        "title": "P5906 \u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f"
    },
    {
        "content": "\u9996\u5148\uff0c\u5bf9\u4e8e\u4e0d\u77e5\u9053\u56de\u6eda\u83ab\u961f\u7684\u7ae5\u978b\u4eec\uff0c\u8fd9\u7bc7\u9898\u89e3\u5bf9\u4f60\u4eec\u5e76\u6ca1\u6709\u5e2e\u52a9\uff0c\u8bf7\u7ffb\u9605\u522b\u7684\u9898\u89e3\u3002\n\n\u7136\u540e\uff0c\u8fd9\u9053\u9898\u53ef\u4ee5\u786e\u5b9a\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6570\u6700\u5148\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0e\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5904\u7406\u7b54\u6848\u5c31\u53ef\u4ee5\u76f4\u63a5\u4e24\u4e2a\u6570\u76f8\u51cf\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u5feb\u4e50\u5730\u52a0\u5165\u4e00\u4e2a\u503c\uff1a\n\n```cpp\nfir[num[x]]=min(fir[num[x]],x);\nlas[num[x]]=max(las[num[x]],x);\n// fir\u8868\u793a\u6700\u5148\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0clas\u8868\u793a\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0cnum\u662f\u79bb\u6563\u5316\u7684\u503c\n```\n\n\u4f46\u662f\u5220\u9664\u4f1a\u5f88\u4e0d\u597d\u64cd\u4f5c\uff0c\u5e94\u4e3a\u5047\u8bbe\u4f60\u5220\u9664\u4e86\u4e00\u4e2a\u6700\u5c0f\u503c\uff0c\u4f60\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6b21\u5c0f\u503c\uff0c\u4f46\u5982\u679c\u4f60\u53c8\u628a\u5b83\u5220\u9664\u4e86\uff0c\u90a3\u5c31\u8981\u4e00\u4e2a\u6b21\u6b21\u5c0f\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u5220\u9664\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8981\u8bf7\u51fa\u6211\u4eec\u4eca\u5929\u7684\u4e3b\u89d2\uff1a\u56de\u6eda\u83ab\u961f\uff08\u4e0d\u5220\u9664\u83ab\u961f\uff09\u3002\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u9700\u8981\u60f3\u5230\u4e00\u4e2a\u95ee\u9898\uff1a\u56de\u6eda\u83ab\u961f\u4e5f\u7684\u5de6\u6307\u9488\u9700\u8981\u5f80\u56de\u6eda\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u7684\u503c\u5c31\u5f88\u4e0d\u597d\u7ef4\u62a4\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u628a\u5b83\u8bb0\u4e0b\u6765\uff0c\u4f46\u95ee\u9898\u53c8\u53cc\u53d2\u53d5\u6765\u4e86\uff1a\u600e\u4e48\u8bb0\u4e0b\u6765\uff1f\n\n\u7136\u800c\u6211\u5e76\u4e0d\u4f1a\u8bb0\uff0c\u4e8e\u662f\u6211\u5c31\u60f3\u51fa\u6765\u4e86\u4e00\u4e2a\u6cd5\u5b50\uff1a\u6211\u4eec\u5e72\u8106\u4e0d\u66f4\u65b0\u3002\n\n\u6211\u4eec\u53f3\u6307\u9488\u5f80\u53f3\u79fb\u52a8\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8fd8\u662f\u66f4\u65b0\u6700\u5de6\u503c\u4e0e\u6700\u53f3\u503c\uff0c\u800c\u5de6\u6307\u9488\u5f80\u5de6\u79fb\u65f6\uff0c\u5c31\u4e0d\u66f4\u65b0\u6700\u5de6\u503c\u4e86\uff0c\u800c\u662f\u53ea\u66f4\u65b0\u6700\u53f3\u503c\u3002\u800c\u6700\u5de6\u503c\u6211\u4eec\u76f4\u63a5\u7528\u5f53\u524d\u8fd9\u6570\uff0c\u5e94\u4e3a\u5f53\u524d\u8fd9\u4e2a\u6570\u5df2\u7ecf\u662f\u6211\u4eec\u5904\u7406\u7684\u533a\u95f4\u7684\u6700\u5de6\u8fb9\u4e86\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u5f97\u5230\uff1a\n\n```cpp\nvoid JR(int x,int &Max,bool pd){\n\tcnt[num[x]]++;\n\tif(pd==1){\n\t\tfir[num[x]]=min(fir[num[x]],x);\n\t\tlas[num[x]]=max(las[num[x]],x);\n\t\tMax=max(Max,las[num[x]]-fir[num[x]]);\n\t}\n\telse{\n\t\tlas[num[x]]=max(las[num[x]],x);\n\t\tMax=max(Max,las[num[x]]-x);\n\t}\n}\n// pd\u4e3a1\u8868\u793a\u53f3\u6307\u9488\u53f3\u79fb\uff0c\u4e3a0\u8868\u793a\u5de6\u6307\u9488\u5de6\u79fb\u3002\n```\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff1a\u56de\u6eda\u6700\u5927\u503c\u600e\u4e48\u529e\uff1f\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8bb0\u4e00\u4e2acnt\u6570\u7ec4\uff0c\u8868\u793a\u666e\u901a\u83ab\u961f\u7684cnt\uff1a\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\u6240\u4ee5\u5f53\u56de\u6eda\u7684\u65f6\u5019\uff0c\u5982\u679c\u6211\u4eec\u628a\u4e00\u4e2a\u6570\u5220\u5b8c\u4e86\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u4e2a\u6570\u7684\u6700\u53f3\u503c\u7f6e\u4e3a0\uff0c\u4e0d\u7136\u6211\u4eec\u5c31\u4e0d\u7528\u7ba1\u4ed6\uff0c\u5e94\u4e3a\u4ed6\u53f3\u8fb9\u8fd8\u6709\u76f8\u540c\u503c\uff0c\u8fd9\u4e9b\u76f8\u540c\u503c\u7684\u4f4d\u7f6e\u80af\u5b9a\u6bd4\u4ed6\u9760\u53f3\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u4e50\u5730AC\u4e86\u3002\n\n\u6700\u540e\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,pos[200100],num[200100],cnt[200100];\nint fir[200100],las[200100],fir1[200100],las1[200100];\nint L[200100],R[200100],ans[200100];\nmap<int,int>ma;\nstruct node{\n\tint l,r,id;\n\tbool operator <(node qwq)const{//\u636e\u8bf4\u8fd9\u4e2a\u6bd4cmp\u51fd\u6570\u8981\u5feb\n\t\treturn (pos[l]==pos[qwq.l]?r<qwq.r:pos[l]<pos[qwq.l]);\n\t}\n}que[200100];\nvoid LSH(){//\u79bb\u6563\u5316\n\tint sum=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(ma[num[i]]==0){\n\t\t\tsum++;\n\t\t\tma[num[i]]=sum;\n\t\t}\n\t\tnum[i]=ma[num[i]];\n\t}\n}\nvoid FK(){//\u5206\u5757\n\tint B=sqrt(n),T=n/B;\n\tfor(int i=1;i<=T;i++){\n\t\tL[i]=R[i-1]+1;\n\t\tR[i]=min(i*B,n);\n\t}\n\tfor(int i=1;i<=T;i++){\n\t\tfor(int j=L[i];j<=R[i];j++){\n\t\t\tpos[j]=i;\n\t\t}\n\t}\n}\nvoid HG(int x){//\u56de\u6eda\n\tcnt[num[x]]--;\n\tif(cnt[num[x]]==0){\n\t\tlas[num[x]]=0;\n\t}\n}\nvoid JR(int x,int &Max,bool pd){//\u52a0\u5165\n\tcnt[num[x]]++;\n\tif(pd==1){\n\t\tfir[num[x]]=min(fir[num[x]],x);\n\t\tlas[num[x]]=max(las[num[x]],x);\n\t\tMax=max(Max,las[num[x]]-fir[num[x]]);\n\t}\n\telse{\n\t\tlas[num[x]]=max(las[num[x]],x);\n\t\tMax=max(Max,las[num[x]]-x);\n\t}\n}\nsigned main(){\n\tmemset(fir,0x3f,sizeof(fir));\n\tmemset(fir1,0x3f,sizeof(fir1));\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&num[i]);\n\t}\n\tcin>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%lld%lld\",&que[i].l,&que[i].r);\n\t\tque[i].id=i;\n\t}\n\tLSH();\n\tFK();\n\tsort(que+1,que+1+m);\n\tint maxi=0,r=0,l=1,last=0;\n\tfor(int i=1;i<=m;i++){\n\t\tint ql=que[i].l,qr=que[i].r;\n\t\tif(pos[ql]==pos[qr]){//\u5f53\u5de6\u53f3\u503c\u5728\u540c\u4e00\u5757\u4e2d\u65f6\uff0c\u66b4\u529b\u5904\u7406\u5373\u53ef\n\t\t\tint tmp=0;\n\t\t\tfor(int j=ql;j<=qr;j++){\n\t\t\t\tfir1[num[j]]=min(fir1[num[j]],j);\n\t\t\t\tlas1[num[j]]=max(las1[num[j]],j);\n\t\t\t}\n\t\t\tfor(int j=ql;j<=qr;j++){\n\t\t\t\ttmp=max(tmp,las1[num[j]]-fir1[num[j]]);\n\t\t\t}\n\t\t\tfor(int j=ql;j<=qr;j++){\n\t\t\t\tfir1[num[j]]=0x3f3f3f3f;\n\t\t\t\tlas1[num[j]]=0;\n\t\t\t}\n\t\t\tans[que[i].id]=tmp;\n\t\t}\n\t\telse{\n\t\t\tif(pos[ql]!=last){\n\t\t\t\tmemset(las,0,sizeof(las));//\u66b4\u529bmemset\n\t\t\t\tmemset(fir,0x3f,sizeof(fir));\n\t\t\t\tmemset(cnt,0,sizeof(cnt));\n\t\t\t\tl=R[pos[ql]]+1;\n\t\t\t\tr=R[pos[ql]];\n\t\t\t\tmaxi=0;\n\t\t\t\tlast=pos[ql];\n\t\t\t}\n\t\t\twhile(r<qr){\n\t\t\t\tr++;\n\t\t\t\tJR(r,maxi,1);\n\t\t\t}\n\t\t\tint tmp=maxi,mark=l;\n\t\t\twhile(mark>ql){\n\t\t\t\tmark--;\n\t\t\t\tJR(mark,tmp,0);\n\t\t\t}\n\t\t\twhile(mark<l){\n\t\t\t\tHG(mark);\n\t\t\t\tmark++;\n\t\t\t}\n\t\t\tans[que[i].id]=tmp;\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tprintf(\"%lld\\n\",ans[i]);\n\t}\n\treturn 0;//\u6b22\u4e50\u5730return 0;\n}\n```",
        "postTime": 1592660111,
        "uid": 90176,
        "name": "xixiup",
        "ccfLevel": 0,
        "title": "P5906\u9898\u89e3"
    },
    {
        "content": "~~\u809d\u4e86\u4e00\u5929\u7ec8\u4e8e\u5361\u8fc7\u53bb\u4e86~~\n\n\u9996\u5148\uff0c\u9047\u5230\u8fd9\u79cd\u8981\u4f60\u7ef4\u62a4\u5f88\u8be1\u5f02\u7684\u4e1c\u897f\u7684\u9898\u76ee\uff0c\u5b9e\u5728\u60f3\u4e0d\u5230\u7528\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\uff0c\u4e00\u822c\u5c31\u60f3\u5230\u83ab\u961f\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u76f4\u63a5$O(nm)$\u7684\u626b\u4e00\u904d\u80af\u5b9a\u662f\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u597d\u3002\u4ed4\u7ec6\u601d\u7d22\u4e00\u756a\uff0c\u53d1\u73b0\u8fd9\u7c7b\u9898\u76ee\u533a\u95f4\u6269\u5927\u4e00\u4e2a\u6570/\u7f29\u5c0f\u4e00\u4e2a\u6570\u7684\u590d\u6742\u5ea6\u4e00\u822c\u662f$O(1)$\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u641e\u4e24\u4e2a\u6307\u9488\u53cd\u590d\u6a2a\u8df3\uff0c\u53bb\u201c\u9501\u5b9a\u201d\u67e5\u8be2\u533a\u95f4\u3002\n\n\u4f46\u662f\u8fd9\u6837\u5176\u5b9e\u4e5f\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u539f\u5e8f\u5217\u5206\u5757\uff0c\u518d\u628a\u6240\u6709\u8be2\u95ee\u6392\u4e2a\u5e8f\uff0c\u5de6\u7aef\u70b9\u5728\u4e00\u4e2a\u5757\u5c31\u53f3\u7aef\u70b9\u5347\u5e8f\uff0c\u5426\u5219\u5de6\u7aef\u70b9\u5347\u5e8f\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u5bf9\u4e8e\u53f3\u7aef\u70b9\uff0c\u4ed6\u4eec\u7684\u5de6\u7aef\u70b9\u90fd\u5728\u4e00\u4e2a\u5757\u5185\uff0c\u800c\u4ed6\u4eec\u53c8\u662f\u9012\u589e\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\u6700\u591a\u904d\u5386\u6574\u4e2a\u5e8f\u5217\uff0c\u8fd9\u5c31\u662f$O(\\frac{n^2}{S})$\uff0c\u800c\u5bf9\u4e8e\u5de6\u7aef\u70b9\uff0c\u4ed6\u6700\u591a\u5728\u5757\u5185\u5de6\u53f3\u6a2a\u8df3\uff0c\u6216\u8005\u8fdb\u5165\u4e0b\u4e00\u4e2a\u5757\uff0c\u6240\u4ee5\u6bcf\u6b21\u6700\u591a\u79fb\u52a8\u4e00\u4e2a\u5757\u957f\uff0c\u8fd9\u6837\u5c31\u662f$O(mS)$\uff0c\u4ee4\u5757\u957f\u4e3a$\\sqrt n$\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a$O(n\\sqrt n)$\u7684\u4f18\u79c0\u79bb\u7ebf\u7b97\u6cd5\u3002\n\n\u8fd9\u65f6\u56de\u5230\u8fd9\u4e2a\u9898\u76ee\uff0c\u53d1\u73b0\u4e00\u4e2a\u5f88\u4e25\u8083\u7684\u95ee\u9898\uff1a\u628a\u4e00\u4e2a\u6570\u52a0\u5165\u5e8f\u5217\u5f88\u5bb9\u6613\u4fee\u6539\uff0c\u4f46\u662f\u5220\u9664\u51fa\u53bb\u5c31\u4e0d\u662f\u5f88\u597d\u529e\u4e86\u3002\u7c7b\u4f3c\u7684\uff0c\u8fd8\u6709\u4e00\u4e9b\u5173\u4e8e\u4f17\u6570\u3001\u6700\u5927\u503c\u7684\u95ee\u9898\u3002\u4e8e\u662f\u6211\u4eec\u5728\u83ab\u961f\u7684\u57fa\u7840\u4e0a\u7a0d\u52a0\u4fee\u6539\uff0c\u8ba9\u4ed6\u201c\u53ea\u52a0\u4e0d\u51cf\u201d\u3002\n\n\u8fd9\u65f6\u5019\uff0c\u5728\u83ab\u961f\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u5206\u522b\u5904\u7406\u6bcf\u4e00\u4e2a\u5757\u91cc\u7684\u8be2\u95ee\u3002\u5bf9\u4e8e\u8be2\u95ee\u533a\u95f4\u5c0f\u4e8e\u5757\u957f\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u8ba1\u7b97\u3002\u6bcf\u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u5757\uff0c\u5148\u628a\u83ab\u961f\u7684\u5de6\u6307\u9488\u548c\u53f3\u6307\u9488\u90fd\u79fb\u5230\u5f53\u524d\u5757\u7684\u53f3\u7aef\u70b9\u3002\u6211\u4eec\u5148\u5c06\u53f3\u6307\u9488\u79fb\u52a8\uff0c\u518d\u8bb0\u5f55\u4e0b\u5f53\u524d\u7684\u4fe1\u606f\uff0c\u7ee7\u800c\u79fb\u52a8\u5de6\u6307\u9488\uff0c\u5f97\u5230\u6b64\u8be2\u95ee\u7684\u7b54\u6848\u540e\u628a\u5de6\u6307\u9488\u79fb\u56de\u53bb\uff0c\u628a\u521a\u521a\u8bb0\u5f55\u7684\u4fe1\u606f\u590d\u539f\uff0c~~\u5927\u3000\u5bb6\u3000\u5c31\u3000\u5f53\u3000\u65e0\u3000\u4e8b\u3000\u53d1\u3000\u751f~~\u3002\u8fd9\u5c31\u662f\u56de\u6eda\u83ab\u961f\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u4f60\u4f1a\u53d1\u73b0\u5de6\u7aef\u70b9\u53ea\u4f1a\u5411\u5de6\u79fb\u52a8\uff0c\u800c\u53f3\u7aef\u70b9\u53ea\u4f1a\u5411\u53f3\u79fb\u52a8\uff0c\u8fd9\u5c31\u4fdd\u8bc1\u4e86\u8be2\u95ee\u533a\u95f4\u201c\u53ea\u52a0\u4e0d\u51cf\u201d\u3002\u7c7b\u4f3c\u4e8e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6613\u77e5\u56de\u6eda\u83ab\u961f\u7684\u590d\u6742\u5ea6\u4e5f\u662f$O(n\\sqrt n)$\uff0c\u53ea\u4e0d\u8fc7\u5e38\u6570\u7565\u5927\u3002\n\n\u518d\u56de\u5230\u8fd9\u4e2a\u9898\u76ee\uff0c\u6211\u5174\u9ad8\u91c7\u70c8\u7684\u4ea4\u4e86\u4e00\u53d1\uff0c\u7136\u540e\u5c31$T$\u6210$65Pts$\u4e86\u3002\u3002\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u5361\u5e38\uff0c\u6bd4\u5982\u7384\u5b66\u8c03\u5757\u957f\u5566\uff0c\u624b\u6253$min$ $\nmax$\u5566\uff0c\u51cf\u5c11\u91cd\u7f6e\u6570\u7ec4\u6b21\u6570\u5566\u4ec0\u4e48\u7684\uff0c\u7136\u540e\u7ecf\u8fc7\u8270\u82e6\u5353\u7edd\u7684\u594b\u6597\u5c31\u8fc7\u4e86\u3002\n\ncode:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define il inline\nusing namespace std;\nil int read(){\n\tint w=0;\n\tbool s=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\ts=(c=='-');\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tw=w*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s?-w:w;\n}\nconst int N=200005,inf=1<<30;\nint n,m,k,a[N],A[N];\nint size,blk,bel[N],L[N],R[N],ans[N];\nstruct Query{\n\tint l,r,id;\n\til friend bool operator < (Query a,Query b){\n\t\tif(bel[a.l]==bel[b.l]){\n\t\t\treturn a.r<b.r;\n\t\t}\n\t\telse{\n\t\t\treturn a.l<b.l;\n\t\t}\n\t}\n};\nQuery q[N];\nint al[N],ar[N],Al[N],Ar[N],aL[N],aR[N],tmp,rev;\nil int min(int a,int b){\n\treturn a<b?a:b;\n}\nil int max(int a,int b){\n\treturn a>b?a:b;\n}\nil int BF(int le,int ri){\n\tfor(int i=le;i<=ri;i++){\n\t\taL[a[i]]=inf;\n\t\taR[a[i]]=0;\n\t}\n\tint res=0;\n\tfor(int i=le;i<=ri;i++){\n\t\taL[a[i]]=min(aL[a[i]],i);\n\t\taR[a[i]]=i;\n\t\tres=max(res,aR[a[i]]-aL[a[i]]);\n\t}\n\treturn res;\n}\nvoid radd(int x){\n\tal[a[x]]=min(al[a[x]],x);\n\tar[a[x]]=x;\n\ttmp=max(tmp,ar[a[x]]-al[a[x]]);\n}\nvoid ladd(int x){\n\tal[a[x]]=x;\n\tar[a[x]]=max(ar[a[x]],x);\n\ttmp=max(tmp,ar[a[x]]-al[a[x]]);\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t\tA[i]=a[i];\n\t}\n\tsort(A+1,A+1+n);\n\tk=unique(A+1,A+1+n)-A-1;\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=lower_bound(A+1,A+1+k,a[i])-A;\n\t}\n\tsize=3*(int)sqrt(n)/4;\n\tblk=n/size;\n\tfor(int i=1;i<=blk;i++){\n\t\tL[i]=R[i-1]+1;\n\t\tR[i]=L[i]+size-1;\n\t}\n\tif(R[blk]<n){\n\t\tblk++;\n\t\tL[blk]=L[blk-1]+1;\n\t\tR[blk]=n;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tbel[i]=(i-1)/size+1;\n\t}\n\tm=read();\n\tfor(int i=1;i<=m;i++){\n\t\tq[i].l=read(),q[i].r=read();\n\t\tq[i].id=i;\n\t}\n\tsort(q+1,q+1+m);\n\tint w=1,le=0,ri=0;\n\tfor(int t=1;t<=blk;t++){\n\t\tri=R[t];\n\t\ttmp=0;\n\t\tfor(int i=1;i<=k;i++){\n\t\t\tal[i]=inf;\n\t\t\tar[i]=0;\n\t\t}\n\t\twhile(bel[q[w].l]==t){\n\t\t\tle=R[t]+1;\n\t\t\tif(q[w].r-q[w].l<=size){\n\t\t\t\tans[q[w].id]=BF(q[w].l,q[w].r);\n\t\t\t\tw++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\twhile(ri<q[w].r){\n\t\t\t\tradd(++ri);\n\t\t\t}\n\t\t\trev=tmp;\n\t\t\tfor(int i=q[w].l;i<=R[t];i++){\n\t\t\t\tAl[a[i]]=al[a[i]];\n\t\t\t\tAr[a[i]]=ar[a[i]];\n\t\t\t}\n\t\t\twhile(le>q[w].l){\n\t\t\t\tladd(--le);\n\t\t\t}\n\t\t\tans[q[w].id]=tmp;\n\t\t\ttmp=rev;\n\t\t\tw++;\n\t\t\tfor(int i=le;i<=R[t];i++){\n\t\t\t\tal[a[i]]=Al[a[i]];\n\t\t\t\tar[a[i]]=Ar[a[i]];\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```\nGL~",
        "postTime": 1578792123,
        "uid": 178864,
        "name": "LordLeft",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5906 \u3010\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f\u3011"
    },
    {
        "content": "\u6211\u83dc\u7684\u53ef\u601c\uff0c\u56de\u6eda\u83ab\u961f\u8fd9\u73a9\u610f\u8fd8\u4f1aWA\u5f88\u591a\u6b21\u3002\n\n\n[~~\u518d\u63a8\u9500\u4e00\u9053\u9898\u76ee~~](https://www.cnblogs.com/Isaunoya/p/11751147.html)\n\n\u5b9a\u4e49 $q_i$ \u662f\u8be2\u95ee\n\n\u56de\u6eda\u83ab\u961f\u7684\u505a\u6cd5\u5927\u6982\u5c31\u662f:\n\n\u6309\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u6392\u5e8f \u5982\u679c\u76f8\u540c \u6309\u53f3\u7aef\u70b9\u6392\u5e8f\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u6c42\u89e3\u3002\u5f04\u4e2a\u53f3\u6307\u9488\u5728\u5757\u7684\u6700\u53f3\u8fb9\u3002\n\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b \u5982\u679c\u5de6\u53f3\u6307\u9488\u5171\u5904\u4e00\u4e2a\u5757\u5185 \u76f4\u63a5\u66b4\u529b \u5c31\u662f\u6839\u53f7\u7ea7\u522b\u7684\n\u5982\u679c\u4e0d\u5728\u4e00\u4e2a\u5757\u5185 \u7531\u4e8e\u53f3\u7aef\u70b9\u662f\u9012\u589e\u7684 \u8003\u8651\u79fb\u52a8\u53f3\u7aef\u70b9\n\u5de6\u8fb9\u7684\u8d21\u732e\u76f4\u63a5\u4ece $q[i].l$ ~ \u5757\u7684\u6700\u53f3\u8fb9 \u66b4\u529b\u5c31\u884c\u4e86\n\u7531\u4e8e\u4e0d\u80fd\u5220\u9664\uff0c\u6bcf\u6b21\u8bb0\u5f55\u4e4b\u524d\u7684\u72b6\u6001\uff0c\u7136\u540e\u590d\u5236\u4e00\u904d\uff0c\u518d\u64cd\u4f5c\uff0c\u6700\u540e\u56de\u5f52\u72b6\u6001\uff0c\u6ca1\u4e86\u3002\n\n\n\u6613\u8bc1\u590d\u6742\u5ea6\uff1a\n\u5bf9\u4e8e\u6574\u5757\u7684\u8be2\u95ee \u4e00\u5171\u6709 $\\sqrt n$ \u4e2a\u5757 \u53f3\u7aef\u70b9\u6bcf\u6b21\u90fd\u662f\u5f53\u524d\u5757\u7684\u53f3\u7aef\u70b9 \u6240\u4ee5\u6700\u591a\u79fb\u52a8 $n$\u7684\u957f\u5ea6\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee \u8003\u8651\u5de6\u8fb9\u7684\u7aef\u70b9 \u7531\u4e8e\u6309\u5de6\u7aef\u70b9\u6392\u5e8f \u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u6700\u591a\u76f8\u5dee $\\sqrt n$ \u7684\u957f\u5ea6\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230 $O(n\\sqrt n + q\\sqrt n)$ \u4e86\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u968f\u4fbf\u641e\u5c31\u53ef\u4ee5\u4e86\u3002\n~~\u8fd8\u6709\uff0c40pts\u7684\u80fd\u4e0d\u80fd\u52a0\u5f3a\u6570\u636e\u554a\uff08~~\n\n$\\texttt{code}$:\n\n```cpp\n// by Isaunoya\n#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i, x, y) for (register int i = (x); i <= (y); ++i)\n#define Rep(i, x, y) for (register int i = (x); i >= (y); --i)\nconst int _ = 1 << 21;\nstruct I {\n  char fin[_], *p1 = fin, *p2 = fin;\n  inline char gc() {\n    return (p1 == p2) && (p2 = (p1 = fin) + fread(fin, 1, _, stdin), p1 == p2) ? EOF : *p1++;\n  }\n  inline I& operator>>(int& x) {\n    bool sign = 1;\n    char c = 0;\n    while (c < 48) ((c = gc()) == 45) && (sign = 0);\n    x = (c & 15);\n    while ((c = gc()) > 47) x = (x << 1) + (x << 3) + (c & 15);\n    x = sign ? x : -x;\n    return *this;\n  }\n  inline I& operator>>(double& x) {\n    bool sign = 1;\n    char c = 0;\n    while (c < 48) ((c = gc()) == 45) && (sign = 0);\n    x = (c - 48);\n    while ((c = gc()) > 47) x = x * 10 + (c - 48);\n    if (c == '.') {\n      double d = 1.0;\n      while ((c = gc()) > 47) d = d * 0.1, x = x + (d * (c - 48));\n    }\n    x = sign ? x : -x;\n    return *this;\n  }\n  inline I& operator>>(char& x) {\n    do\n      x = gc();\n    while (isspace(x));\n    return *this;\n  }\n  inline I& operator>>(string& s) {\n    s = \"\";\n    char c = gc();\n    while (isspace(c)) c = gc();\n    while (!isspace(c) && c != EOF) s += c, c = gc();\n    return *this;\n  }\n} in;\nstruct O {\n  char st[100], fout[_];\n  signed stk = 0, top = 0;\n  inline void flush() { fwrite(fout, 1, top, stdout), fflush(stdout), top = 0; }\n  inline O& operator<<(int x) {\n    if (top > (1 << 20)) flush();\n    if (x < 0) fout[top++] = 45, x = -x;\n    do\n      st[++stk] = x % 10 ^ 48, x /= 10;\n    while (x);\n    while (stk) fout[top++] = st[stk--];\n    return *this;\n  }\n  inline O& operator<<(char x) {\n    fout[top++] = x;\n    return *this;\n  }\n  inline O& operator<<(string s) {\n    if (top > (1 << 20)) flush();\n    for (char x : s) fout[top++] = x;\n    return *this;\n  }\n} out;\n#define pb emplace_back\n#define fir first\n#define sec second\ntemplate <class T>\ninline void cmax(T& x, const T& y) {\n  (x < y) && (x = y);\n}\ntemplate <class T>\ninline void cmin(T& x, const T& y) {\n  (x > y) && (x = y);\n}\nconst int maxn = 2e5 + 10;\nint S, n, m;\nstruct Que {\n  int l, r, id;\n} q[maxn];\nint a[maxn], b[maxn], bl[maxn], Ans[maxn], fir[maxn], las[maxn], Fir[maxn], Las[maxn];\ninline int calc(int l, int r) {\n  rep(i, l, r) Fir[a[i]] = 1e9, Las[a[i]] = 0;\n  int ans = 0;\n  rep(i, l, r) {\n    cmin(Fir[a[i]], i), cmax(Las[a[i]], i);\n    cmax(ans, Las[a[i]] - Fir[a[i]]);\n  }\n  return ans;\n}\nint now = 1, ansl = 0, ansr = 0;\ninline void add(const int& x, int& ans) {\n  cmin(fir[a[x]], x), cmax(las[a[x]], x), cmax(ans, las[a[x]] - fir[a[x]]);\n}\ninline int max(const int& x, const int& y) { return x > y ? x : y; }\ninline void solve(const int& id) {\n  int qr = id * S;\n  cmin(qr, n), ansr = 0;\n  rep(i, (id - 1) * S + 1, n) fir[a[i]] = 1e9, las[a[i]] = 0;\n  register int pr = qr;\n  for (; bl[q[now].l] == id; ++now) {\n    if (bl[q[now].l] == bl[q[now].r]) {\n      Ans[q[now].id] = calc(q[now].l, q[now].r);\n      continue;\n    }\n    while (pr < q[now].r) add(++pr, ansr);\n    rep(i, q[now].l, qr) Fir[a[i]] = fir[a[i]], Las[a[i]] = las[a[i]];\n    ansl = 0;\n    Rep(i, qr, q[now].l) add(i, ansl);\n    Ans[q[now].id] = max(ansl, ansr), ansl = 0;\n    rep(i, q[now].l, qr) fir[a[i]] = Fir[a[i]], las[a[i]] = Las[a[i]];\n  }\n}\nsigned main() {\n#ifdef _WIN64\n  freopen(\"testdata.in\", \"r\", stdin);\n#endif\n  in >> n, S = sqrt(n * 0.9);\n  rep(i, 1, n) in >> a[i];\n  rep(i, 1, n) b[i] = a[i], bl[i] = (i - 1) / S + 1;\n  sort(b + 1, b + n + 1, [](const int& x, const int& y) { return x < y; });\n  int len = unique(b + 1, b + n + 1) - b - 1;\n  rep(i, 1, n) a[i] = lower_bound(b + 1, b + len + 1, a[i]) - b;\n  rep(i, 1, n) Fir[i] = fir[i] = 1e9;\n  in >> m;\n  rep(i, 1, m) { in >> q[i].l >> q[i].r, q[i].id = i; }\n  sort(q + 1, q + m + 1, [](const Que& x, const Que& y) {\n    if (bl[x.l] ^ bl[y.l]) return bl[x.l] < bl[y.l];\n    return x.r < y.r;\n  });\n  rep(i, 1, bl[n]) solve(i);\n  rep(i, 1, m) out << Ans[i] << '\\n';\n  return out.flush(), 0;\n}\n```",
        "postTime": 1578748771,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5906 \u3010\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5906)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u8be2\u95ee\u533a\u95f4 $[l,r]$ \u4e2d\u76f8\u540c\u7684\u6570\u7684\u6700\u8fdc\u95f4\u9694\u8ddd\u79bb\u3002\n\n## Sol\n\n### \u56de\u6eda\u83ab\u961f\n\n\u663e\u7136\uff0c\u7531\u540d\u5b57\u5f97\uff0c\u56de\u6eda\u83ab\u961f\u8fd8\u662f\u8981\u7528\u83ab\u961f\u7684\u57fa\u672c\u601d\u60f3\u3002\n\n\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u666e\u901a\u83ab\u961f\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\n\u8fd9\u79cd\u65b9\u5f0f\u4e3b\u8981\u7528\u4e8e\u53ef\u79bb\u7ebf\u67e5\u8be2\uff0c\u5176\u4e2d\u63d2\u5165\u5220\u9664\u64cd\u4f5c\u4e2d\u4e00\u79cd\u65b9\u4fbf\u4e00\u79cd\u590d\u6742\u751a\u81f3\u4e0d\u53ef\u505a\u7684\u60c5\u51b5\u3002\n\n\u65e2\u7136\u4e00\u79cd\u7b80\u5355\u4e00\u79cd\u9ebb\u70e6\uff0c\u6211\u4eec\u80af\u5b9a\u9009\u7528\u7b80\u5355\u7684\u597dqwq\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c3d\u91cf\u5168\u7528\u7b80\u5355\u7684\u3002\n\n#### \u4ee5\u4e0b\u5185\u5bb9\u9ed8\u8ba4\u63d2\u5165\u64cd\u4f5c\u7b80\u5355\uff0c\u53cd\u4e4b\u7c7b\u4f3c\u3002\n\n\u6392\u5e8f\u65b9\u5f0f\u4e0e\u539f\u5148\u7c7b\u4f3c\u3002\n\n\u7b2c\u4e00\u5173\u952e\u5b57 \u5de6\u7aef\u70b9\u6240\u5728\u5757\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57 \u53f3\u7aef\u70b9\u9012\u589e\u3002\n\n\u8fd9\u6837\u5f53\u5de6\u7aef\u70b9\u5728\u540c\u4e00\u5757\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u53f3\u7aef\u70b9\u53ea\u6709\u63d2\u5165\u64cd\u4f5c\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u5de6\u7aef\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u4e00\u4e2a\u5f88\u66b4\u529b\u7684\u64cd\u4f5c\u2014\u2014\u6bcf\u6b21\u64cd\u4f5c\u5b8c\u56de\u6eda\u81f3\u5f53\u524d\u5757\u53f3\u7aef\u70b9\uff0c\u5373\u4ece\u5757\u53f3\u7aef\u70b9\u6269\u5c55\u5230\u8be2\u95ee\u5de6\u7aef\u70b9\uff0c\u518d\u5c06\u5de6\u7aef\u70b9**\u8fd8\u539f\u56de\u5757\u53f3\u7aef\u70b9**\u3002\n\n\u8fd9\u662f\u56de\u6eda\u83ab\u961f\u7684\u6838\u5fc3\u64cd\u4f5c\u3002\n\n\u5f53\u7136\u6211\u4eec\u8fd8\u8981\u8003\u8651\u8be2\u95ee\u53f3\u7aef\u70b9\u5728\u5de6\u7aef\u70b9\u540c\u4e00\u5757\u5185\u7684\u60c5\u51b5\u3002\n\n\u8fd9\u79cd\u60c5\u51b5\u76f4\u63a5\u66b4\u529b\u8dd1\u5373\u53ef\uff0c\u590d\u6742\u5ea6\u4e0e\u62d3\u5c55\u76f8\u540c\u3002\n\n\u8fd9\u6837\u4e00\u6b21\u66b4\u529b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(\\sqrt n \\times k)$ \uff08$k$ \u662f\u4e00\u6b21\u589e\u91cf\u6240\u9700\u65f6\u95f4\uff09\n\n\u540c\u6837\u5bf9\u4e8e\u83ab\u961f\u62d3\u5c55\u6211\u4eec\u77e5\u9053\u662f $O(n\\sqrt n \\times k)$\n\n\u82e5 $n$ \u6b21\u66b4\u529b\u4e5f\u76f8\u7b49\u3002\n\n\u6240\u4ee5\u56de\u6eda\u83ab\u961f\u590d\u6742\u5ea6\u5373 $O(n\\sqrt n\\times k)$\n\n---\n\n\u5bf9\u4e8e\u672c\u9898\uff0c\u6bcf\u6b21\u8dd1\u5b8c\u4e00\u7ec4\u5757\u65f6\uff0c\u4f60\u8fd8\u8981\u6e05\u9664\u75d5\u8ff9\u3002\n\n\u5efa\u8bae\u62ff\u4e00\u4e2a\u4e1c\u897f\u8bb0\u5f55\u5df2\u4f7f\u7528\u7684\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u53ea\u9700\u6e05\u7406\u8fd9\u4e9b\u5373\u53ef\u3002\n\n\u53ef\u4ee5\u51cf\u5c0f\u5e38\u6570\u3002\n\n---\n\n\u4ee3\u7801\u3002\n\n```cpp\n/*\n***\n\u8fd8\u8981\u7ee7\u7eed\u52aa\u529b\n\u6210\u4e3a\u4e00\u540d\u70e4\u5495\u5b66\u5bb6\u54e6\n***\n*/\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=2e5+5;\nint n,m,a[N],len,l,r,sum,vst[N],cnt,ans[N],lst[N],nxt[N],lsh[N],qaq,qwq;\nstruct Question{int l,r,id,pos;}q[N];\ntemplate <typename T> void rd(T &x){\n\tint fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(int x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\nbool cmp(Question x,Question y){\n\tif(x.pos!=y.pos) return x.pos<y.pos;\n\treturn x.r<y.r;\n}\nint solve(int l,int r){\n\tint up[N]={0},tot=0;\n\tfor(int i=l;i<=r;++i){if(!up[a[i]]) up[a[i]]=i;tot=max(tot,i-up[a[i]]);}\n\treturn tot;\n}\nvoid update(int x,int op){\n\tif(op==1){\n\t\tnxt[a[x]]=x;\n\t\tif(!lst[a[x]]) lst[a[x]]=x,vst[++cnt]=x;\n\t\tsum=max(sum,x-lst[a[x]]);\n\t}\n\telse{if(!nxt[a[x]]) nxt[a[x]]=x;sum=max(sum,nxt[a[x]]-x);}\n}\nvoid erase(int x){if(nxt[a[x]]==x) nxt[a[x]]=0;}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);len=(int)sqrt(n);\n\tfor(int i=1;i<=n;++i) rd(a[i]),lsh[i]=a[i];\n\trd(m);\n\tfor(int i=1;i<=m;++i) rd(q[i].l),rd(q[i].r),q[i].id=i,q[i].pos=(q[i].l-1)/len+1;\n\tsort(lsh+1,lsh+n+1);\n\tqaq=unique(lsh+1,lsh+n+1)-lsh-1;\n\tfor(int i=1;i<=n;++i) a[i]=lower_bound(lsh+1,lsh+qaq+1,a[i])-lsh;\n\tsort(q+1,q+m+1,cmp);\n\tfor(int i=1,j=1;j<=(n-1)/len+1;++j){\n\t\tfor(int k=1;k<=cnt;++k) lst[a[vst[k]]]=nxt[a[vst[k]]]=0;\n\t\tint br=min(j*len,n);l=br+1,r=br,sum=cnt=0;\n\t\twhile(q[i].pos==j){\n\t\t\tif(q[i].r<=br){\n\t\t\t\tans[q[i].id]=solve(q[i].l,q[i].r);++i;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\twhile(r<q[i].r) ++r,update(r,1);\n\t\t\tqwq=sum;\n\t\t\twhile(l>q[i].l) --l,update(l,-1);\n\t\t\tans[q[i].id]=sum;\n\t\t\twhile(l<=br) erase(l),l++;\n\t\t\tsum=qwq;++i;\n\t\t}\n\t}\n\tfor(int i=1;i<=m;++i) wr(ans[i]),puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1598010860,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f&\u4e0d\u5220\u9664\u83ab\u961f \u9898\u89e3"
    },
    {
        "content": "### [\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P5906)\n\n------------\n#### \u5173\u4e8e\u56de\u6eda\u83ab\u961f\n~~\u4f60\u9700\u8981\u5148\u5b66\u4f1a\u83ab\u961f~~,\u6211\u4eec\u505a**\u9759\u6001\u533a\u95f4\u95ee\u9898**\u65f6\u6709\u65f6\u5019\u4f1a\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\n> \u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u4f60\u9700\u8981\u7ef4\u62a4\u5e8f\u5217\u7684\u67d0\u4e2a\u4e1c\u897f\uff0c\u4f46\u662f\u5bf9\u4e8e\u8fd9\u4e2a\u4e1c\u897f\uff0c\u6bcf\u6b21\u52a0\u5165\u5f88\u597d\u7ef4\u62a4\uff0c\u4f46\u5220\u9664\u5f88\u96be\u7ef4\u62a4\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u56de\u6eda\u83ab\u961f\u4e86\n\n#### \u5177\u4f53\u5b9e\u73b0\n>> 1. \u5c06\u5e8f\u5217\u4ee5\u5de6\u7aef\u70b9\u7684\u5757\u7684\u4e0b\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u8bcd\uff0c\u53f3\u7aef\u70b9\u7684\u4e0b\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u8bcd\u6392\u5e8f\uff08\u6ce8\u610f\u4e0d\u8981\u7528\u83ab\u961f\u7684\u5947\u5076\u6392\u5e8f\u4f18\u5316\uff09\n>> 2. \u6392\u5e8f\u540e\uff0c\u5bf9\u4e8e\u8be2\u95ee $[ql,qr]$ \u5982\u679c $block[ql]=block[qr] $ \u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u4ece $l$ \u5230 $r$,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(\\sqrt n)$\n>> 3. \u5982\u679c $l$ \u79fb\u52a8\u5230\u4e86\u4e0b\u4e00\u4e2a\u5757\uff0c\u6211\u4eec\u5bf9 $l,r$ \u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5c06 $l$ \u8f6c\u79fb\u4e3a $R[block[l]]+1$ ,\u5c06 $r$ \u8f6c\u79fb\u4e3a $R[block[r]]$ \n>> 4. \u6211\u4eec\u5148\u5c06 $r$ \u53f3\u79fb\u81f3 $qr$ \u5e76\u52a0\u5165\u671f\u95f4\u6bcf\u4e00\u4e2a\u6570\uff0c\u518d\u5c06 $l$ \u5de6\u79fb\u81f3 $ql$ \u5e76\u52a0\u5165\n>> 5. \u6700\u540e\u518d\u5c06 $l$ \u56de\u6eda\u56de\u521d\u59cb\u5316\u65f6\u7684\u4f4d\u7f6e\n>> 6. \u663e\u800c\u6613\u89c1\uff0c\u590d\u6742\u5ea6\u4e3a$O(m\\sqrt n)$\n\n#### \u5173\u4e8e\u672c\u9898\n\n\u5728\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u7684\u662f\u4e24\u4e2a\u503c\u76f8\u540c\u7684\u70b9\u7684\u6700\u8fdc\u8ddd\u79bb\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7b54\u6848\u533a\u95f4\u603b\u5171\u6709\u4e09\u79cd\u60c5\u51b5:\n>> 1. \u5168\u5728\u53f3\u533a\u95f4\n>> 2. \u5168\u5728\u5de6\u533a\u95f4\n>> 3. \u6a2a\u8de8\u4e2d\u70b9(\u521d\u59cb\u5316\u65f6\u7684 $l$ )\n\n\u5bf9\u4e8e 2,3 \u4e24\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u503c\u8bb0\u5f55\u4e00\u4e2a\u6700\u5927\u4e0b\u6807\uff0c\u518d\u6bcf\u6b21\u76f8\u51cf\u5373\u53ef\uff1b\u800c\u5bf9\u4e8e\u7b2c 1 \u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5219\u5355\u72ec\u8bb0\u5f55\u4e00\u4e2a\u53f3\u533a\u95f4\u6700\u5c0f\u4e0b\u6807\u5373\u53ef\n\n#### \u4e00\u4e9b\u7ec6\u8282\n\n\u5bf9\u4e8e\u6bcf\u6b21\u56de\u6eda/\u521d\u59cb\u5316\uff0c\u6211\u4eec\u4e0d\u7528memset\u6e05\u7a7a\u6570\u7ec4(\u4e8b\u5b9e\u4e0a\u8fd9\u6837\u4f1a\u8d85\u65f6)\uff0c\u800c\u662f\u76f4\u63a5\u5728\u79fb\u52a8\u65f6\u5224\u65ad\u5f53\u524d\u70b9\u662f\u5426\u4e3a\u6700\u5927/\u6700\u5c0f\u4e0b\u6807\u6765\u8fdb\u884c\u6e05\u7a7a\n$$\n\\large\\text{Talk is cheap , show you the code}\n$$\n```cpp\n#include<touwenjian.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=200005;\nconst int inf=0x3f3f3f3f;\nint n,m,a[maxn],b[maxn];\nint block[maxn],R[maxn];\nint ans[maxn],ma[maxn],mi[maxn];\nstruct question\n{\n\tint l,r,id;\n}q[maxn];\n\ninline void read(int &num)\n{\n\tint sign=1;\n\tchar c;\n\twhile((c=getchar())<'0'||c>'9')\n\t\tif(c=='-')sign=-1;\n\tnum=c-'0';\n\twhile((c=getchar())>='0'&&c<='9')\n\t\tnum=(num<<1)+(num<<3)+c-'0';\n\tnum*=sign;\n}\n\nbool cmp(const question &x,const question &y)\n{\n\treturn block[x.l]^block[y.l]?block[x.l]<block[y.l]:x.r<y.r;\n}\n\nsigned main(void)\n{\n\tfreopen(\"text.in\",\"r\",stdin);\n\tread(n);\n\tfor(register int i=1;i<=n;++i)read(a[i]),b[i]=a[i];\n\tsort(b+1,b+1+n);\n\tint M=unique(b+1,b+1+n)-b-1;\n\tfor(register int i=1;i<=n;++i)a[i]=lower_bound(b+1,b+1+M,a[i])-b;\n\tint len=sqrt(n);\n\tfor(register int i=1;i<=n;++i)block[i]=(i-1)/len+1;\n\tfor(register int i=1;i<=len+1;++i)R[i]=min(i*len,n);\n\tread(m);\n\tfor(register int i=1;i<=m;++i)read(q[i].l),read(q[i].r),q[i].id=i;\n\tsort(q+1,q+1+m,cmp);\n\tint l=0,r=0,lastblock=0;\n\tint temp;\n\tfor(register int i=1;i<=m;++i)\n\t{\n\t\tif(block[q[i].l]==block[q[i].r])\n\t\t{\n\t\t\ttemp=0;\n\t\t\tfor(register int j=q[i].r;j>=q[i].l;--j)ma[a[j]]=0;\n\t\t\tfor(register int j=q[i].r;j>=q[i].l;--j)\n\t\t\t\tif(!ma[a[j]])ma[a[j]]=j;\n\t\t\t\telse temp=max(temp,ma[a[j]]-j);\n\t\t\tfor(register int j=q[i].r;j>=q[i].l;--j)ma[a[j]]=0;\n\t\t\tans[q[i].id]=temp;\n\t\t\tcontinue;\n\t\t}\n\t\tif(lastblock^block[q[i].l])\n\t\t{\n\t\t\twhile(r>R[block[q[i].l]])\n\t\t\t{\n\t\t\t\tma[a[r]]=0,mi[a[r]]=0;\n\t\t\t\t--r;\n\t\t\t}\n\t\t\twhile(l<R[block[q[i].l]]+1)\n\t\t\t{\n\t\t\t\tma[a[l]]=0,mi[a[l]]=0;\n\t\t\t\t++l;\n\t\t\t}\n\t\t\tr=l-1;\n\t\t\tlastblock=block[q[i].l];\n\t\t\ttemp=0;\n\t\t}\n\t\twhile(r<q[i].r)\n\t\t{\n\t\t\t++r;\n\t\t\tif(!mi[a[r]])mi[a[r]]=r,ma[a[r]]=r;\n\t\t\telse ma[a[r]]=r,temp=max(temp,r-mi[a[r]]);\n\t\t}\n\t\tint _l=l,res=temp;\n\t\twhile(_l>q[i].l)\n\t\t{\n\t\t\t--_l;\n\t\t\tif(!ma[a[_l]])ma[a[_l]]=_l;\n\t\t\telse res=max(res,ma[a[_l]]-_l);\n\t\t}\n\t\tans[q[i].id]=res;\n\t\twhile(_l<l)\n\t\t{\n\t\t\tif(ma[a[_l]]==_l)ma[a[_l]]=0;\n\t\t\t++_l;\n\t\t}\n\t}\n\tfor(register int i=1;i<=m;++i)printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1594115354,
        "uid": 224229,
        "name": "Caicz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5906 \u3010\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f&\u4e0d\u5220\u9664\u83ab\u961f\u3011"
    },
    {
        "content": "\u521a\u5b66\u56de\u6eda\u83ab\u961f\uff0c\u6765\u7bc7\u9898\u89e3\u3002\n\n---\n\n\u8fd9\u9898\u548c\u53e6\u4e00\u9053\u56de\u6eda\u83ab\u961f\u677f\u5b50\u9898 [AT1219 \u6b74\u53f2\u306e\u7814\u7a76](https://atcoder.jp/contests/joisc2014/tasks/joisc2014_c) \u76f8\u6bd4\uff0c\u63d2\u5165\u5220\u9664\u64cd\u4f5c\u8981\u66f4\u590d\u6742\u4e00\u70b9\uff0c\u56e0\u4e3a\u4e00\u4e2a\u6570\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0d\u53ef\u5dee\u5206\uff0c\u800c\u90a3\u9053\u9898\u53ea\u9700\u8981\u8bb0\u5f55\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5728\u5de6\u53f3\u7aef\u70b9\u63d2\u5165\u5220\u9664\u7684\u64cd\u4f5c\u6ca1\u6709\u533a\u522b\uff0c\u800c\u4e14\u7ec6\u8282\u8981\u5c11\uff0c\u6253\u8d77\u6765\u66f4\u7b80\u5355\u4e00\u4e9b\u3002\n\n---\n\n### \u9898\u89e3\n\n\u7531\u4e8e\u5220\u9664\u4e0d\u597d\u66f4\u65b0\u7b54\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u5c3d\u91cf\u8ba9\u5de6\u53f3\u7aef\u70b9\u53ea\u589e\u4e0d\u51cf\u3002\n\n\u5c06\u8be2\u95ee\u8fdb\u884c\u6392\u5e8f\uff1a\u5982\u679c $l$ \u5728\u540c\u4e00\u4e2a\u5757\u4e2d\uff0c\u5219\u6309\u7167 $r$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5426\u5219\u6309\u7167 $l$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u5728 $l$ \u5728\u540c\u4e00\u4e2a\u5757\u65f6\uff0c $r$ \u6307\u9488\u53ea\u5411\u53f3\u6269\u5c55\u3002\n\n\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u8be2\u95ee\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u4e3a $lasB$ \uff0c\u5757 $lasB$ \u7684\u53f3\u8fb9\u754c\u4e3a $R$\uff0c\u6b63\u5728\u5904\u7406\u7684\u8be2\u95ee\u7684\u5de6\u53f3\u7aef\u70b9\u5206\u522b\u4e3a $l,r$\uff0c\u5219\u5904\u7406\u8be2\u95ee\u65f6\u6709\u51e0\u79cd\u4e0d\u540c\u7684\u60c5\u51b5\uff1a\n\n1. $l,r$ \u5747\u5728 $lasB$ \u4e2d\u3002\n\n2. $l,r$ \u5747\u5927\u4e8e $R$\u3002\n\n3. $l$ \u5c0f\u4e8e $R$ \uff0c $r$ \u5927\u4e8e $R$\u3002\n\n\u5bf9\u4e8e\u7b2c1\u79cd\u60c5\u51b5\uff0c\u66b4\u529b\u6c42\u89e3\u3002\n\n\u5bf9\u4e8e\u7b2c2\u79cd\u60c5\u51b5\uff0c\u5c06 $lasB$ \u8d4b\u503c\u4e3a $l$ \u6240\u5728\u5757\u7684\u7f16\u53f7\uff0c\u5e76\u4e14\u5c06\u5de6\u53f3\u6307\u9488\u5206\u522b\u79fb\u52a8\u5230 $R+1,R$ \u4e0a\uff0c\u5219\u6b64\u65f6\u53d8\u4e3a\u7b2c3\u79cd\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u7b2c3\u79cd\u60c5\u51b5\uff0c\u5c06\u53f3\u6307\u9488\u79fb\u52a8\u5230 $r$ \u5904\uff0c\u8bbe\u4e00\u4e2a\u4e34\u65f6\u6307\u9488\u5904\u7406\u533a\u95f4 $[R+1,r] \\bigcup [l,R]$\u7684\u6570\u636e\uff08\u5b9e\u73b0\u89c1\u4ee3\u7801\uff09\u3002\n\n\u8fd9\u6837\u641e\u4e00\u641e\u5c31\u8fc7\u4e86\u8fd9\u9053\u9898\u3002\n\n---\n\nCode\uff1a\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\n#define maxn 200005\n#define BN 400//\u5757\u957f\n#define Rint register int\nusing namespace std;\ntypedef long long lxl;\nconst int INF=1<<30;\n\ninline lxl read()\n{\n\tlxl x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\nint n,m,a[maxn],b[maxn],ans[maxn];\nint fir[maxn],las[maxn];//\u5b58\u653e[R+1,r]\u5185\u7684\u6570\u636e\nint _fir[maxn],_las[maxn];//\u5b58\u653e[l,R]\u5185\u7684\u6570\u636e\nint L[maxn],R[maxn],pos[maxn];\n\nstruct ques\n{\n\tint l,r,id;\n\tbool operator <(const ques &x)const\n\t{\n\t\tif(pos[l]!=pos[x.l]) return pos[l]<pos[x.l];\n\t\treturn r<x.r;\n\t}\n}querys[maxn];\n\ninline void init()\n{\n\tint tot=n/BN;\n\tfor(Rint i=1;i<=tot;++i)\n\t{\n\t\tL[i]=(i-1)*BN+1;\n\t\tR[i]=i*BN;\n\t}\n\tif(R[tot]<n)\n\t{\n\t\t++tot;\n\t\tL[tot]=R[tot-1]+1;\n\t\tR[tot]=n;\n\t}\n\tfor(Rint i=1;i<=tot;++i)\n\t\tfor(Rint j=L[i];j<=R[i];++j) pos[j]=i;\n}\n\ninline void Add_R(int i,int &Ans)\n{\n\tfir[a[i]]=min(fir[a[i]],i);\n\tlas[a[i]]=max(las[a[i]],i);\n\tAns=max(Ans,las[a[i]]-fir[a[i]]);\n}\n\ninline void Add_L(int i,int &Ans)\n{\n\t_fir[a[i]]=min(fir[a[i]],min(_fir[a[i]],i));\n\t_las[a[i]]=max(las[a[i]],max(_las[a[i]],i));//\u8fd9\u91cc\u8981\u4ece[R+1,r]\u4e2d\u7ee7\u627f\u6570\u636e\n\tAns=max(Ans,_las[a[i]]-_fir[a[i]]);\n}\n//\u63d2\u5165\n\ninline void Del_R(int i)\n{\n\tfir[a[i]]=INF;\n\tlas[a[i]]=-INF;\n}\n\ninline void Del_L(int i)\n{\n\t_fir[a[i]]=INF;\n\t_las[a[i]]=-INF;\n}\n//\u5220\u9664\n\nint main()\n{\n\t//freopen(\"P5906.in\",\"r\",stdin);\n\tn=read();\n\tfor(Rint i=1;i<=n;++i)\n\t\ta[i]=b[i]=read();\n\tinit();\n\tsort(b+1,b+n+1);\n\tint t=unique(b+1,b+n+1)-b-1;\n\tfor(Rint i=1;i<=n;++i)\n\t\ta[i]=lower_bound(b+1,b+t+1,a[i])-b;\n\tfor(Rint i=1;i<=t;++i)\n\t\tfir[i]=_fir[i]=INF,las[i]=_las[i]=-INF;\n\tm=read();\n\tfor(Rint i=1;i<=m;++i)\n\t\tquerys[i].l=read(),querys[i].r=read(),querys[i].id=i;\n\tsort(querys+1,querys+m+1);\n\tfor(int i=1,las_B=0,Ans=0,Tmp,l=1,r=0,_l;i<=m;++i)\n\t{\n\t\tques &q=querys[i];\n\t\tif(pos[q.l]!=las_B)\n\t\t{\n\t\t\tlas_B=pos[q.l];\n\t\t\twhile(r>R[las_B]) Del_R(r--);\n\t\t\twhile(l<R[las_B]+1) Del_R(l++);\n\t\t\tl=(r=R[las_B])+1;\n\t\t\tAns=0;\n\t\t}\n\t\tif(pos[q.l]==pos[q.r])\n\t\t{\n\t\t\tfor(Rint j=q.l;j<=q.r;++j) Add_L(j,ans[q.id]);\n\t\t\tfor(Rint j=q.l;j<=q.r;++j) Del_L(j);\n\t\t\tcontinue;\n\t\t}\n\t\twhile(r<q.r) Add_R(++r,Ans);\n\t\t_l=l;\n\t\tTmp=Ans;\n\t\twhile(_l>q.l) Add_L(--_l,Tmp);//\u5904\u7406[l,R]\u5185\u7684\u6570\u636e\n\t\tans[q.id]=Tmp;\n\t\twhile(_l<l) Del_L(_l++);//\u56de\u6eda\n\t}\n\tfor(Rint i=1;i<=m;++i)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1594089303,
        "uid": 224236,
        "name": "GoPoux4",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5906 \u3010\u3010\u6a21\u677f\u3011\u56de\u6eda\u83ab\u961f&\u4e0d\u5220\u9664\u83ab\u961f\u3011"
    },
    {
        "content": "\u57fa\u5efa\u7b2c\u5341\u56db\u7bc7\n\n\u56de\u6eda\u83ab\u961f\u7684\u4e3b\u8981\u601d\u60f3\u662f\u5229\u7528\u66f4\u591a\u7684\u589e\u52a0\u64cd\u4f5c(r++\u548cl--)\u4ee3\u66ff\u51cf\u5c11\u64cd\u4f5c(r--\u548cl++)\u3002\n\n\u5177\u4f53\u6b65\u9aa4\u5c31\u662f\n- \u7b2c\u4e00\u5173\u952e\u5b57\u6309\u5de6\u7aef\u70b9\u7684\u5757\u6392\u5e8f\uff0c\u7b2c\u4e8c\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\n\n- \u679a\u4e3e\u6bcf\u4e00\u4e2a\u5757\uff0c\u5f53\u67d0\u4e2a\u67e5\u8be2\u5de6\u7aef\u70b9\u5728\u8fd9\u5757\u65f6\n1. \u5982\u679c\u53f3\u7aef\u70b9\u4e5f\u5728\u6b64\u5757\u4e2d\uff0c\u66b4\u529b\u4fee\u6539\n2. \u5982\u679c\u53f3\u7aef\u70b9\u4e0d\u5728\u6b64\u5757\uff0c\u4e0d\u65ad\u5bf9$r$\u5411\u53f3\u505a\u589e\u64cd\u4f5c\uff0c\u76f4\u5230\u78b0\u5230\u53f3\u7aef\u70b9\u3002\u6b64\u65f6\u662f\u5f88\u5bb9\u6613\u66f4\u65b0\u7684\n3. \u5148\u628a$l$\u8c03\u5230\u8fd9\u4e2a\u5757\u7684\u6700\u53f3\u8fb9\uff0c\u7136\u540e\u5bf9$l$\u5f80\u5de6\u505a\u589e\u64cd\u4f5c\uff0c\u76f4\u5230\u78b0\u5230\u5de6\u7aef\u70b9\u3002\n\n\u590d\u6742\u5ea6\u7684\u8bdd\n\n1. \u66b4\u529b\u4fee\u6539\u662f$O(logN)$\uff0c\u8003\u8651$M$\u4e2a\u8be2\u95ee\u4e0e$O(logN)$\u4e2a\u5757\uff0c\u7531\u4e8e\u53ea\u8ddf$M$\u6709\u5173\u7684\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f$O(MlogN)$\n2. \u5411\u53f3\u505a\u589e\u64cd\u4f5c\u662f$O(N)$\uff0c\u8003\u8651$M$\u4e2a\u8be2\u95ee\u4e0e$O(logN)$\u4e2a\u5757\uff0c\u7531\u4e8e\u5411\u53f3\u64cd\u4f5c\u53ef\u4ee5\u89e3\u51b3\u6240\u6709\u5f53\u524d\u5de6\u7aef\u70b9\u5728\u4e00\u4e2a\u5757\u4e2d\u60c5\u51b5\uff0c\u663e\u7136\u5de6\u7aef\u70b9\u5c3d\u91cf\u5206\u6563\u590d\u6742\u5ea6\u66f4\u5927\uff0c\u800c\u6700\u591a\u6709$O(logN)$\u4e2a\u5757\u3002\u6240\u4ee5\u590d\u6742\u5ea6\u4e0e\u5757\u6570\u6709\u5173\uff0c$O(NlogN)$\n3. \u5411\u5de6\u662f$O(logN)$\uff0c\u7531\u4e8e\u5b83\u4e0e\u5411\u53f3\u662f\u5404\u81ea\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u663e\u7136\u6bd4\u5411\u53f3\u66f4\u4f4e\u3002\n\n\u4ee3\u7801\u53c2\u8003[yuzhechuan\u795e\u4ed9](https://www.luogu.com.cn/user/65735)\n\n\u4f46\u662f\u6211\u5e76\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\n\nfor(;b[q[i].l]==j;i++)\n\n\u8fd9\u53e5\u6539\u6210while\u540e\u5c31\u4e0d\u884c\u4e86\u3002\u3002\n\n[P5906](https://www.luogu.com.cn/problem/P5906)\n\n$$Code$$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint read(){\n\tint x=0;bool f=0;char ch=getchar();\n\twhile(!isdigit(ch))f|=ch=='-',ch=getchar();\n\twhile(isdigit(ch))x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn f?-x:x;\n}\n\nvoid write(int x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>9)write(x/10);\n\tputchar(48+x%10);\n}\n\nvoid writeln(int x){write(x);putchar('\\n');}\nvoid writebl(int x){write(x);putchar(' ');}\n\n#define I inline\n#define R register\n\nconst int maxn = 2e5+5;\n\nint b[maxn],a[maxn],Ans[maxn],num[maxn],st[maxn],clear[maxn],la[maxn],n,m,un,cn,bn;\n\nstruct que{int l,r,id;}q[maxn];\nI bool cmp(que x,que y){return (b[x.l]^b[y.l])?b[x.l]<b[y.l]:x.r<y.r;}\n\nint calc(int l,int r){\n\tint last[maxn],res=0;\n\tfor(R int i=l;i<=r;++i)last[a[i]]=0;\n\tfor(R int i=l;i<=r;++i)\n\t\tif(!last[a[i]])last[a[i]]=i;\n\t\telse res=max(res,i-last[a[i]]);\n\treturn res;\n} \n\nint main(){\n\tn=read();int len=sqrt(n);\n\t\n\tfor(R int i=1;i<=n;++i)\n\t\tnum[i]=a[i]=read(),b[i]=(i-1)/len+1;bn=b[n];\n\t\t\n\tsort(num+1,num+n+1);un=unique(num+1,num+n+1)-num-1;\t\n\tfor(R int i=1;i<=n;++i)\n\t\ta[i]=lower_bound(num+1,num+un+1,a[i])-num;\n\t\t\n\tm=read();\n\tfor(R int i=1;i<=m;++i)\n\t\tq[i].l=read(),q[i].r=read(),q[i].id=i;\n\tsort(q+1,q+m+1,cmp);\n\t\n\tR int i,j;\n\tfor(i=1,j=1;j<=bn;++j){\n\t\tint br=min(n,j*len),l=br+1,r=l-1,ans=0;\n\t\tcn=0;\n\t\tfor(;b[q[i].l]==j;i++){\n\t\t\tif(b[q[i].r]==j){Ans[q[i].id]=calc(q[i].l,q[i].r);continue;}\n\t\t\twhile(r<q[i].r){\n\t\t\t\tr++;la[a[r]]=r;\n\t\t\t\tif(!st[a[r]])st[a[r]]=r,clear[++cn]=a[r];\n\t\t\t\tans=max(ans,r-st[a[r]]);\n\t\t\t}\n\t\t\tint res=ans;\n\t\t\twhile(l>q[i].l){\n\t\t\t\tl--;if(la[a[l]])ans=max(ans,la[a[l]]-l);\n\t\t\t\telse la[a[l]]=l;\n\t\t\t}\n\t\t\tAns[q[i].id]=ans;\n\t\t\twhile(l<=br){if(la[a[l]]==l)la[a[l]]=0;l++;}\n\t\t\tans=res;\n\t\t}\n\t\tfor(R int k=1;k<=cn;++k)la[clear[k]]=st[clear[k]]=0;\n\t}\n\t\n\tfor(R int i=1;i<=m;++i)writeln(Ans[i]);\n}\n\n\n\n\n\n\n```\n\n\n\n",
        "postTime": 1583296813,
        "uid": 87031,
        "name": "Immortal_Bird",
        "ccfLevel": 0,
        "title": "\u56de\u6eda\u83ab\u961f\u5c0f\u7ed3"
    }
]