[
    {
        "content": "### \u505a\u6cd5\uff1a\n\n\u9996\u5148\u628a\u6240\u6709\u5361\u8f66\u7684\u6240\u6709\u62d0\u70b9\u5408\u5728\u4e00\u8d77\uff0c\u6309\u8fbe\u5230\u7684\u65f6\u95f4\u6392\u5e8f\u3002\n\n\u628a\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u627e\u5230\u4e24\u5361\u8f66\u4e2d\u62d0\u70b9\u8f83\u5c11\u8005\uff0c\u7ed1\u5b9a\u5728\u8be5\u8f66\u4e0a\u3002\u5bf9\u4e8e\u91cd\u590d\u7684\u8be2\u95ee\uff0c\u76f4\u63a5\u8bb0\u5fc6\u5316\u5224\u6389\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u4efb\u610f\u4e00\u8f66\u7684\u4e24\u62d0\u70b9\u4e4b\u95f4\u4e24\u8f66\u6700\u591a\u76f8\u9047\u4e00\u6b21\uff0c\u5e76\u4e14\u5728\u8fd9\u9053\u9898\u76ee\u4e2d\u4e0d\u5b58\u5728\u8ffd\u53ca\u3002\n\n\u5728\u88ab\u7ed1\u5b9a\u8f66\u7684\u4e24\u62d0\u70b9\u4e4b\u95f4\uff0c\u6211\u4eec\u753b\u51fa\u539f\u8be2\u95ee\u7684\u4e24\u8f86\u8f66\u7684 x-t \u56fe\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u88ab\u7ed1\u5b9a\u8f66\u7684\u56fe\u50cf\u4e00\u5b9a\u662f\u4e00\u6761\u5355\u8c03\u76f4\u7ebf\uff0c\u800c\u53e6\u4e00\u8f66\u7684\u56fe\u50cf\u662f\u5206\u6bb5\u5355\u8c03\u7684\u6298\u7ebf\u3002\uff08\u56fe\u6765\u6e90\uff1aMr_Wu \u624b\u7ed8\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/c0w67kxf.png)\n\n\u90a3\u4e48\u5982\u679c\u8fd9\u4e24\u8f86\u8f66\u6709\u4ea4\uff0c\u5c31\u53ea\u80fd\u662f\u4e24\u8f86\u8f66\u7684\u76f8\u5bf9\u5de6\u53f3\u5173\u7cfb\u5728\u4e24\u62d0\u70b9\u5904\u4e0d\u540c\u3002\n\n\u53c8\u8003\u8651\uff0c\u6bcf\u4e2a\u8be2\u95ee\u53ea\u4f1a\u8003\u8651\u88ab\u7ed1\u5b9a\u8f66\u7684\u6240\u6709\u62d0\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5f97\u51fa\u5f53\u524d\u8fd9\u4e2a\u62d0\u70b9\u5904\u8be2\u95ee\u7684\u4e24\u8f66\u7684\u5de6\u53f3\u5173\u7cfb\u65f6\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u5173\u7cfb\u8fde\u5e26\u5b58\u5728\u8be2\u95ee\u4e0a\u3002\u8fd9\u6837\uff0c\u5728\u5230\u8fbe\u7ed1\u5b9a\u8f66\u7684\u4e0b\u4e00\u4e2a\u62d0\u70b9\u65f6\uff0c\u5c31\u5bb9\u6613\u5224\u65ad\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u679a\u4e3e\u6240\u6709\u62d0\u70b9\uff0c\u52a8\u6001\u8bbe\u5b9a\u4e00\u8f86\u8f66\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u6bcf\u679a\u4e3e\u5230\u4e00\u4e2a\u62d0\u70b9\uff0c\u679a\u4e3e\u548c\u62d0\u70b9\u6240\u5c5e\u8f66\u7ed1\u5b9a\u7684\u6240\u6709\u8be2\u95ee\uff0c\u5904\u7406\u5373\u53ef\u3002\n\n\u53e6\u5916\uff0c\u5bf9\u4e8e\u5728\u5230\u8fbe\u67d0\u4e00\u62d0\u70b9\u524d\u9664\u7ed1\u5b9a\u8f66\u4ee5\u5916\u7684\u53e6\u4e00\u8f86\u8be2\u95ee\u8f66\u6d88\u5931\u7684\u60c5\u51b5\uff0c\u4e5f\u662f\u6709\u53ef\u80fd\u76f8\u9047\u7684\u3002\u5904\u7406\u6bd4\u8f83\u6076\u5fc3\uff0c\u9700\u8981\u7279\u5224\u3002\uff08\u5e76\u4e14\u6837\u4f8b\u91cc\u9762\u6ca1\u6709\u8fd9\u4e2a\u60c5\u51b5\uff0c\u5982\u679c\u4f60\u6837\u4f8b\u5168\u8fc7\u5374 wa \u58f0\u4e00\u7247\uff0c\u53ef\u4ee5\u770b\u770b\u662f\u4e0d\u662f\u8fd9\u4e2a\u539f\u56e0\uff09\n\n### \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1a\n\n\u8003\u8651\u53ef\u80fd\u53d1\u751f\u7684\u6240\u6709\u8be2\u95ee\u4ee5\u53ca\u5176\u5bf9\u5e94\u7ed1\u5b9a\u7684\u5361\u8f66\u8def\u5f84\u957f\u5ea6\u3002\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u540e\u524d $q$ \u9879\u548c\u5c31\u662f\u6700\u5927\u679a\u4e3e\u590d\u6742\u5ea6\u3002\n\n\u6211\u4eec\u4ee4\u6bcf\u8f86\u5361\u8f66\u7684\u8def\u5f84\u957f\u5ea6\u4ece\u5927\u5230\u5c0f\u4e3a $k_1,k_2,\\cdots,k_n$\u3002\n\n\u90a3\u4e48\u6700\u5927\u7684\u679a\u4e3e\u590d\u6742\u5ea6\u663e\u7136\u4e3a $1 * k_2 + 2 * k_3 + \\cdots$\uff08\u7cfb\u6570\u548c\u4e3a $q$\uff09\n\n\u968f\u610f\u653e\u7f29\u7b80\u5316\u4e00\u4e0b\uff0c\u4ee4\u4e0a\u8ff0\u5f0f\u5b50\u6ca1\u6709\u5305\u542b\u7684 $k_i = 0$\uff0c\u5e76\u5047\u5b9a\u5f0f\u5b50\u5373\u4e3a $\\sum_{i=1}^x i * k_i$ \u7684\u5f62\u5f0f\u3002\n\n\u57fa\u4e8e\u7b49\u5dee\u6570\u5217\u6c42\u548c\u516c\u5f0f\uff0c\u53ef\u5f97 $x$ \u5728 $\\sqrt{q}$ \u7ea7\u522b\u3002\u4e0d\u59a8\u4ee4 $x=\\sqrt{q}$\u3002\n\n\u90a3\u6211\u4eec\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\n\n\u5df2\u77e5 $\\sum_{i=1}^{\\sqrt{q}} k_i = k$\uff0c\u6c42 $\\max \\{ \\sum_{i=1}^{\\sqrt{q}} i * k_i \\}$\u3002 \n\n\u6839\u636e\u5927\u5c0f\u5173\u7cfb\uff0c\u6613\u5f97 $k_i \\leq \\frac{k}{i}$\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6 $O (k \\sqrt{q})$\u3002\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <map>\n#include <vector>\nusing namespace std;\nconst int N=1e5+1,K=3e5+1;\nstruct status\n{\n\tint pos,dir,ised;\n\tlong long clk;\n} st[N];\nstruct turn\n{\n\tint pos,bel,ised;\n\tlong long clk;\n\tturn(int pos=0,int bel=0,int ised=0,long long clk=0):\n\t\tpos(pos),bel(bel),ised(ised),clk(clk){}\n} p[K];\nint ans[N],len[N],tl,link[N];\nstruct query\n{\n\tint x,y,aso;\n\tquery(int x=0,int y=0,int aso=0):\n\t\tx(x),y(y),aso(aso){}\n} q[N];\nvector<int> qry[N];\nmap<pair<int,int>,int> mem;\ninline int cmp(turn a,turn b){return a.clk<b.clk;}\nint main()\n{\n\tint n,m,i,j;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tlong long tmp=0;\n\t\tint bef;\n\t\tscanf(\"%d\",&len[i]);\n\t\tfor(j=1;j<=len[i];j++)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(j==1) st[i].pos=x;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(j==2) st[i].dir=(x>bef);\n\t\t\t\ttmp+=max(bef,x)-min(bef,x);\n\t\t\t\tp[++tl]=turn(x,i,j==len[i],tmp);\n\t\t\t}\n\t\t\tbef=x;\n\t\t}\n\t}\n\tsort(p+1,p+tl+1,cmp);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(len[x]>len[y]||(len[x]==len[y]&&x>y)) swap(x,y);\n\t\tif(mem.count(make_pair(x,y))) link[i]=mem[make_pair(x,y)];\n\t\telse\n\t\t{\n\t\t\tmem[make_pair(x,y)]=i;\n\t\t\tq[i]=query(x,y,st[x].pos>st[y].pos);\n\t\t\tqry[x].push_back(i);\n\t\t}\n\t}\n\tfor(i=1;i<=tl;i++)\n\t{\n\t\tint now=p[i].bel,siz=qry[now].size();\n\t\tfor(j=0;j<siz;j++)\n\t\t{\n\t\t\tint tmp=q[qry[now][j]].y,fnpos1=p[i].pos,fnpos2=st[tmp].pos;\n\t\t\tif(q[qry[now][j]].aso==-1) continue;\n\t\t\tint delta=p[i].clk-st[tmp].clk;\n\t\t\tif(st[tmp].ised)\n\t\t\t{\n\t\t\t\tif(st[now].dir) fnpos1-=delta;\n\t\t\t\telse fnpos1+=delta;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(st[tmp].dir) fnpos2+=delta;\n\t\t\t\telse fnpos2-=delta;\n\t\t\t}\n\t\t\tif(q[qry[now][j]].aso^(fnpos1>fnpos2)) ans[qry[now][j]]++;\n\t\t\tif(st[tmp].ised) q[qry[now][j]].aso=-1;\n\t\t\telse q[qry[now][j]].aso=(fnpos1>fnpos2);\n\t\t}\n\t\tst[now].pos=p[i].pos,st[now].dir^=1;\n\t\tst[now].clk=p[i].clk,st[now].ised=p[i].ised;\n\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tif(link[i]) printf(\"%d\\n\",ans[link[i]]);\n\t\telse printf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1579945891,
        "uid": 103732,
        "name": "smarthehe",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4811 \u3010[COCI 2014/2015 #3]KAMIONI\u3011"
    },
    {
        "content": "\u96be\u5f97\u7684\u6ca1\u4eba\u505a\u7684\u6c34\u7d2b\u9898\u3002\u3002\n\n\u6211\u7684\u505a\u6cd5\uff1a\n\n\u9996\u5148\u6211\u4eec\u5e94\u8be5\u5c06\u6bcf\u4e00\u8f86\u8f66\u7684\u8f6c\u6298\u70b9\u6309\u7167\u53d1\u751f\u65f6\u95f4\u6765\u6392\u5e8f\u3002\u5c06\u6240\u6709\u4e0d\u91cd\u590d\u7684\u67e5\u8be2\u90fd\u4fdd\u5b58\u5728\u62d0\u70b9\u5c11\u7684\u90a3\u4e2a\u7684\u540d\u4e0b\u3002\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u62d0\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002 \n\n\u8fd9\u91cc\u662f\u5b98\u65b9\u9898\u89e3\uff1a\n\n1. \u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u8f86\u8f66\u7684\u6bcf\u4e00\u4e2a\u8f6c\u6298\u70b9\uff0c\u4ee5\u53ca\u65b9\u5411\uff0c\u5e76\u4e14\u6309\u7167\u65f6\u95f4\u6392\u5e8f\u3002\n\n2. \u5bf9\u4e8e\u5361\u8f66i\uff0c\u7ed1\u5b9a\u4e0e\u5b83\u6709\u67e5\u8be2\u5173\u7cfb\u7684\u5361\u8f66\uff0c\u4fdd\u5b58\u7684\u65f6\u5019\u4fdd\u8bc1i\u7684\u8f6c\u6298\u70b9\u8981\u5c0f\u4e8e\u4e0e\u5b83\u7ed1\u5b9a\u7684\u5176\u4ed6\u5361\u8f66\u3002\u663e\u7136\uff0c\u5982\u679ci\u7684\u8f6c\u6298\u70b9\u5927\u4e8e\u67d0\u4e00\u8f86\u5361\u8f66\uff0c\u5b83\u4f1a\u88ab\u53e6\u5916\u4e00\u8f86\u5361\u8f66\u7ed1\u5b9a\u3002\u7528\u8fd9\u4e2a\u53bb\u4f18\u5316\u524d\u9762\u80fd\u8fc7\u4e00\u534a\u70b9\u7684\u4ee3\u7801\u3002\u2018\n\n3. \u53d6\u51fa\u4e00\u4e2a\u8f6c\u6298\u70b9\uff0c\u5904\u7406\u4e0e\u5bf9\u5e94\u7684\u5361\u8f66\u6709\u67e5\u8be2\u5173\u7cfb\u7684\u5361\u8f66\u3002\n\n\u7a0b\u5e8f\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long llint;\ntypedef pair<int, int> pii;\nconst int MAXN = 300100;\n\nenum { LEFT = -1, ABDUCTED, RIGHT };\n\nstruct event {\n    int truck_id;\n    int x, direction;\n    llint time;\n};\n\nstruct query {\n    int truck_id, was_left, query_id;\n};\n\nstruct truck {\n    int k;\n    int x, direction;\n    llint time;\n    vector<query> queries;\n};\n\ntruck trucks[MAXN];\nint ans[MAXN];\n\nvoid apply_event(const event &e) {\n    trucks[e.truck_id].x = e.x;\n    trucks[e.truck_id].direction = e.direction;\n    trucks[e.truck_id].time = e.time;\n}\n\nint check_is_left(const truck &a, const truck &b, llint prev_time, int prev_direction) {\n    if (b.direction == ABDUCTED && prev_time >= b.time)\n        return ABDUCTED;\n    int b_pos, a_pos;\n    if (b.direction == ABDUCTED) {\n        b_pos = b.x;\n        a_pos = (a.time - b.time) * (-prev_direction) + a.x;\n    } else {\n        a_pos = a.x;\n        b_pos = (a.time - b.time) * b.direction + b.x;\n    }\n    assert(b_pos != a_pos);\n    if (b_pos < a_pos)\n        return LEFT;\n    return RIGHT;\n}\n\nvoid solve_query(const truck &t, query &q, llint prev_time, int prev_direction) {\n    int is_left = check_is_left(t, trucks[q.truck_id], prev_time, prev_direction);\n    ans[q.query_id] += (q.was_left * is_left == -1);\n    q.was_left = is_left;\n}\n\nbool cmp(const event &a, const event &b) {\n    if (a.time != b.time)\n        return a.time < b.time;\n    return a.direction > b.direction;\n}\n\nint main() {\n    int n, m;\n    vector<event> events;\n    map<pii, vector<int>> same_queries;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; ++i) {\n        int x;\n        llint sum_time = 0;\n        scanf(\"%d%d\", &trucks[i].k, &x);\n        for (int j = 0; j < trucks[i].k - 1; ++j) {\n            int new_x;\n            scanf(\"%d\", &new_x);\n            event e = { i, x, x < new_x ? RIGHT : LEFT, sum_time };\n            if (j == 0) {\n                apply_event(e);\n            } else {\n                events.push_back(e);\n            }\n            sum_time += abs(x - new_x);\n            x = new_x;\n        }\n        event e = { i, x, ABDUCTED, sum_time };\n        events.push_back(e);\n    }\n    for (int i = 0; i < m; ++i) {\n        int a, b;\n        scanf(\"%d%d\", &a, &b);\n        --a;\n        --b;\n        if (a > b)\n            swap(a, b);\n        same_queries[{ a, b }].push_back(i);\n        if ((int)same_queries[{ a, b }].size() > 1)\n            continue;\n        if (trucks[a].k > trucks[b].k)\n            swap(a, b);\n        trucks[a].queries.push_back({ b, trucks[b].x < trucks[a].x ? LEFT : RIGHT, i });\n    }\n    sort(events.begin(), events.end(), cmp);\n    for (const event &e : events) {\n        llint prev_time = trucks[e.truck_id].time;\n        int prev_direction = trucks[e.truck_id].direction;\n        apply_event(e);\n        for (query &q : trucks[e.truck_id].queries)\n            solve_query(trucks[e.truck_id], q, prev_time, prev_direction);\n    }\n    for (auto queries : same_queries) {\n        int res = ans[queries.second[0]];\n        for (int t : queries.second) ans[t] = res;\n    }\n    for (int i = 0; i < m; ++i) printf(\"%d\\n\", ans[i]);\n    return 0;\n}\n```",
        "postTime": 1548248966,
        "uid": 119553,
        "name": "rEdWhitE_uMbrElla",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4811 \u3010[COCI 2014/2015 #3]KAMIONI\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u9053\u9898\u60f3\u5230\u66b4\u529b\u601d\u8def\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u3002\n\n\u53ea\u8981\u6211\u4eec\u53d1\u73b0\u4e86\u4e24\u8f86\u8f66\u5982\u679c\u4e00\u4e2a\u79fb\u52a8\u4e4b\u540e\u76f8\u5bf9\u4f4d\u7f6e\u53d8\u5316\uff0c\u5c31\u662f\u53d1\u751f\u4e86\u76f8\u9047\u3002\n\n\u6211\u4eec\u7528\u8fd9\u4e2a\u601d\u8def\u66b4\u529b\u6a21\u62df\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u5c31\u53ef\u4ee5\u7684\u523068\u5206\u3002\n\n\u7531\u4e8e\u6211\u4eec\u5f97\u523068\u5206\u8fd9\u79cd\u8f83\u591a\u7684\u5206\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u6b63\u89e3\u662f\u5426\u662f\u6709\u8fd9\u79cd\u65b9\u6cd5\u4f18\u5316\u51fa\u6765\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u4e2d\u8bf4\u5230\u6bcf\u4e00\u8f86\u8f66\u7684\u901f\u5ea6\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u662f\u8bf4\u660e\u4e24\u8f86\u8f66\u7684\u65b9\u5411\u76f8\u540c\u65f6\u662f\u4e0d\u53ef\u80fd\u76f8\u9047\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u539f\u6765\u7684\u679a\u4e3e\u4e00\u4e2a\u8be2\u95ee\u4e2d\u7684\u4e24\u8f86\u8f66\u8f6c\u5316\u4e3a\u679a\u4e3e\u4e00\u8f86\u8f66\uff0c\u56e0\u4e3a\u8fd9\u8f86\u88ab\u6211\u4eec\u9009\u5b9a\u7684\u8f66\u5728\u6bcf\u4e00\u6bb5\u79fb\u52a8\u4e4b\u4e2d\u53ea\u80fd\u4e0e\u53e6\u4e00\u8f86\u8f66\u76f8\u9047\u4e00\u6b21\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4e3a\u4e86\u83b7\u5f97\u6700\u597d\u7684\u6548\u679c\uff0c\u6211\u4eec\u80af\u5b9a\u8981\u9009\u62e9\u8f6c\u6298\u70b9\u6700\u5c11\u7684\u8f66\u4f5c\u4e3a\u4e2d\u5fc3\u8f66\u8f86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u80dc\u4e00\u7b79\u7684\u79bb\u7ebf\u5904\u7406\uff0c\u5c06\u6240\u6709\u4ee5a\u8f66\u4e3a\u4e2d\u5fc3\u8f66\u8f86\u7684\u8f66\u7edf\u4e00\u50a8\u5b58\u8d77\u6765\uff0c\u4e00\u8d77\u5904\u7406\u3002\n\n\u4ee5\u4e0a\u8bf4\u7684\u8fd9\u4e9b\u5728\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\uff0c\u800c\u4e14\u4e5f\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u3002\n\n\u4f46\u662f\u7531\u4e8e\u5b98\u65b9\u9898\u89e3\u7684\u4ee3\u7801\u5b9e\u5728\u662f~~\u4e0d\u53ef\u9605\u8bfb~~\u6211\u592a\u5072\u4e86\uff0c\u800c\u5176\u4ed6\u4eba\u5199\u7684\u4ee3\u7801\u4e5f~~\u6666\u6da9\u96be\u61c2~~\u6211\u592a\u5072\u4e86\u3002\n\n\u6240\u4ee5\u6211\u5728\u4e0b\u9762\u9644\u4e0a\u4e00\u4efd\u8be6\u7ec6\u6ce8\u91ca\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 300010\n#define ll long long\n#define PII pair<int,int>\n\n//\u8fd9\u4e00\u4e2a\u7ed3\u6784\u4f53\u8bb0\u5f55\u573a\u4e0a\u6240\u6709\u7684\u8fd0\u52a8 \nstruct event{\n\tint id,p,dir;\n\t//id->car_index\n\t//p->start_place\n\t//dir->direction \n\tll timee;\n\t//timee->start_time\n\t\n\t//\n\tbool operator <(const event &A)const{\n\t\tif(timee!=A.timee)return timee<A.timee;\n\t\treturn dir>A.dir;\n\t}\n\t\n\t\n\tevent(){};\n\tevent(int a,int b,int c,ll d){\n\t\tid=a,p=b,dir=c,timee=d;\n\t}\n};\n\n\n//hash_part\n//\u4e3a\u4e86\u6392\u9664\u51fa\u9898\u4eba\u51fa\u5f88\u591a\u7ec4\u76f8\u540c\u7684\u5927\u8be2\u95ee\u5361\u6211\u4eec\u3002\n//\u6211\u4eec\u5c06\u6240\u6709\u7684\u76f8\u540c\u8be2\u95eehash\u50a8\u5b58\u8d77\u6765\uff0c\u9632\u6b62\u91cd\u590d\u8ba1\u7b97 \nint h[1000000];//h(i)->hash\u503c\u4e3ai\u7684\u8be2\u95ee\u51fa\u73b0\u6b21\u6570 \nPII hsh[1000000];//hsh(i)->hash\u503c\u4e3ai\u8868\u793a\u7684\u8be2\u95ee\u7ec4\u5408 \nint hshit(PII t){\n\tint p=1ll*(t.second-t.first)*t.first*791224%1000000;\n\t//\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8981\u6c42\u7684\u5361\u8f66\u7ec4\u5408\u90fd\u5c06\u5176hash \n\twhile(h[p]&&hsh[p]!=t)p=(p+1)%1000000;\n\t++h[p];\n\thsh[p]=t;\n\t//\u5982\u679c\u51fa\u73b0\u8fc7\uff1a\u6b21\u6570\u52a0\u4e00\uff0c\u5bf9\u4e8ehsh\u662f\u6ca1\u6709\u5f71\u54cd\u7684\n\t//\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u8fc7\u5c31\u65b0\u5efa\u8282\u70b9 \n\treturn p;\n}\n\n//\u8fd9\u4e2a\u7ed3\u6784\u4f53\u8bb0\u5f55\u6bcf\u4e2a\u8be2\u95ee\u7684\u4e24\u4e2a\u8f86\u8f66\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff1a\n// was_left=1->a\u5728b\u5de6\u8fb9 \n// was_left=0->a\u5728b\u53f3\u8fb9 \nstruct Ask{\n\tint id,was_left,qid;\n\tAsk(){}\n\tAsk(int a,int b,int c){\n\t\tid=a;was_left=b;qid=c;\n\t}\n};\n\n//\u8fd9\u4e2a\u6570\u7ec4\u6d89\u53ca\u6211\u4eec\u8fd9\u9053\u9898\u7684\u4e00\u4e2a\u4f18\u5316\uff1a\n//\u6211\u4eec\u5c06\u8f6c\u6298\u70b9\u4e2a\u6570\u5927\u4e8ea\u70b9\u7684\u70b9\u90fd\u4e0ea\u70b9\u540c\u65f6\u5904\u7406-> Adj\n//\u8fd8\u6709\u4e00\u4e2a\u4f18\u5316\u662f\u91cd\u590d\u51fa\u73b0\u7684\u8be2\u95ee\u7edf\u4e00\u5904\u7406 ->hs\nstruct List{\n\tint id,num;\n\tvector<int> idx;\n\tList *next;\n\tList(){\n\t\tnext=NULL;\n\t\tid=num=-1;\n\t}\n}*Adj[N],*hs[1000000];\n\n//\u8fd9\u4e2a\u6570\u7ec4\u50a8\u5b58\u7684\u5c31\u662f\u6bcf\u4e2a\u5361\u8f66\u7684\u4fe1\u606f\uff0c\u4f4d\u7f6e \nstruct truck{\n\tint k,p,dir;\n\t//k->\u8f6c\u6298\u70b9\u6570\u91cf\n\t//p->now_place\n\t//dir->direction \n\tll timee;\n\t//timee->\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u5df2\u7ecf\u6d88\u8017\u4e86\u7684\u65f6\u95f4 \n\tvector<Ask> asks;\n\t//\u6240\u6709\u8981\u4ee5\u8fd9\u8f86\u5361\u8f66\u4e3a\u4e2d\u5fc3\u8f66\u7684\u7684\u8be2\u95ee\u90fd\u5b58\u5165asks\u91cc\u4e00\u5e76\u5904\u7406 \n}trucks[N];\n\n\ninline void read(int &n){\n\tn=0;char op=getchar();\n\twhile(!isdigit(op)){op=getchar();}\n\twhile(isdigit(op)){n=(n<<1)+(n<<3)+(op^48);op=getchar();}\n}\nint n,m;\n\n//\u8bb0\u5f55\u5361\u8f66\u7684\u6bcf\u4e00\u6b21\u79fb\u52a8 \nvoid init(event &e){\n\ttrucks[e.id].p=e.p;\n\ttrucks[e.id].dir=e.dir;\n\ttrucks[e.id].timee=e.timee;\n}\n\n//\u6267\u884c\u884c\u52a8 \ninline int check(const truck &a,const truck &b,ll pretime,int predir){\n\t//\u5728\u6267\u884c\u8fd9\u4e2a\u884c\u52a8\u65f6b\u8f66\u5df2\u7ecf\u5230\u8fbe\u76ee\u7684\u5730\u4e86 \n\tif(!b.dir&&pretime>=b.timee){\n\t\treturn 0;\n\t}\n\t\n\tint b_pos,a_pos;\n\t//\u4e0b\u9762\u7684\u64cd\u4f5c\u6211\u7528\u4f2a\u4ee3\u7801\u89e3\u91ca\uff1a\n\t//if(b\u8f66\u671d\u5de6\u8d70)\n\t//\t \u76f4\u63a5\u8ba9b\u8f66\u5230\u8fd9\u6b21\u884c\u52a8\u7684\u76ee\u7684\u5730\n\t//\t \u8ba1\u7b97b\u8f66\u79fb\u52a8\u7684\u65f6\u95f4\uff0ca\u8f66\u6309\u7167a\u8f66\u7684\u65b9\u5411\u79fb\u52a8\u76f8\u540c\u65f6\u95f4\n\t//else\n\t//\t \u76f4\u63a5\u8ba9a\u8f66\u5230\u8fd9\u6b21\u884c\u52a8\u7684\u76ee\u7684\u5730\n\t// \t \u8ba1\u7b97a\u8f66\u79fb\u52a8\u7684\u65f6\u95f4\uff0cb\u8f66\u6309\u7167b\u8f66\u7684\u65b9\u5411\u79fb\u52a8\u76f8\u540c\u65f6\u95f4 \n\tif(!b.dir){\n\t\tb_pos=b.p;\n\t\ta_pos=(a.timee-b.timee)*(-predir)+a.p;\n\t}\n\telse {\n\t\ta_pos=a.p;\n\t\tb_pos=(a.timee-b.timee)*b.dir+b.p;\n\t}\n\treturn b_pos<a_pos? -1:1;\n}\nint ans[N];\n\n//\u8fd9\u4e2a\u51fd\u6570\u662f\u786e\u8ba4\u8fd9\u4e24\u8f86\u8f66\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u662f\u5426\u76f8\u9047 \nvoid solve(const truck &t,Ask &q,ll pretime,int predir){\n\t//is_left\uff1a\u5728\u6267\u884c\u8fd9\u4e2a\u884c\u52a8\u540e\u4e24\u8f86\u8f66\u7684\u76f8\u5bf9\u4f4d\u7f6e \n\tint is_left=check(t,trucks[q.id],pretime,predir);\n\t//\u5982\u679c\u8fd9\u4e24\u8f86\u8f66\u7684\u76f8\u5bf9\u4f4d\u7f6e\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u5c31\u662f\u76f8\u9047 \n\tans[q.qid]+=(q.was_left*is_left==-1);\n\t//\u540c\u6b65\u66f4\u65b0\u76f8\u5bf9\u4f4d\u7f6e \n\tq.was_left=is_left;\n}\n\n\nint main(){\n\tvector<event> events;\n\tread(n);read(m);\n\tint x,newx;\n\t//\u8fd9\u4e24\u4e2a\u6570\u8bb0\u5f55\u8fd9\u4e00\u6b21\u4f4d\u7f6e\u548c\u4e0a\u4e00\u6b21\u4f4d\u7f6e\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u5904\u7406\n\t//\u79fb\u52a8\u65b9\u5411 \n\tll tsum;\n\t//\u8fd9\u4e00\u8f86\u5361\u8f66\u5904\u7406\u5230\u8fd9\u4e2a\u79fb\u52a8\u65f6\u5df2\u7ecf\u4f7f\u7528\u7684\u65f6\u95f4 \n\tevent e;\n\tfor(int i=0;i<n;++i){\n\t\ttsum=0; \n\t\tread(trucks[i].k);read(x);\n\t\tfor(int j=0;j<trucks[i].k-1;++j){\n\t\t\tread(newx);\n\t\t\te=event(i,x,x<newx?1:-1,tsum);\n\t\t\t\n\t\t\tif(!j)init(e);\n\t\t\t//\u8bb0\u5f55\u6bcf\u8f86\u8f66\u7684\u51fa\u53d1\u70b9 \n\t\t\t\n\t\t\telse events.push_back(e);\n\t\t\ttsum+=abs(x-newx);\n\t\t\tx=newx;\n\t\t}\n\t\te=event(i,x,0,tsum);\n\t\tevents.push_back(e); \n\t} \n\t\n\tint a,b;\n\tfor(int i=0;i<m;++i){\n\t\tread(a);read(b);\n\t\ta--;b--;\n\t\tif(a>b)swap(a,b);\n\t\tint t=hshit(make_pair(a,b));\n\t\t//\u6211\u5c06\u4e0b\u8ff0\u64cd\u4f5c\u7528\u4f2a\u4ee3\u7801\u89e3\u91ca\u4e00\u4e0b\n\t\t//if(\u8fd9\u4e0d\u662f(a,b)\u8be2\u95ee\u7ec4\u7b2c\u4e00\u6b21\u51fa\u73b0)\n\t\t//\t\t\u5c06(a,b)\u8be2\u95ee\u7ec4\u51fa\u73b0\u7684\u6b21\u6570+1\n\t\t//\t\t\u8bb0\u5f55(a,b)\u8be2\u95ee\u7ec4\u51fa\u73b0\u7684id\n\t\t//else \n\t\t//\t if(a\u8d27\u8f66\u7b2c\u4e00\u6b21\u5f53\u4e2d\u5fc3\u8f66\u8f86)\n\t\t//\t\t \u65b0\u5efa\u4e00\u4e2a\u8282\u70b9p\u8fde\u5230a\u70b9\u4e0a\n\t\t//\t\t \u8bb0\u5f55\u8be2\u95ee(a,b)\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\n\t\t//   else\n\t\t//\t\t \u4ecd\u7136\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9p\u8fde\u5230a\u4e0a\n\t\t//\t\t \u8bb0\u5f55\u8bbf\u95ee(a,b)\u7684\u51fa\u73b0 \n\t\tif(h[t]>1){\n\t\t\ths[t]->num++;\n\t\t\ths[t]->idx.push_back(i);\n\t\t\tcontinue;\n\t\t}\n\t\telse {\n\t\t\tif(!Adj[a]){\n\t\t\t\tAdj[a]=new List();\n\t\t\t\tAdj[a]->num=1;\n\t\t\t\tAdj[a]->id=b;\n\t\t\t\ths[t]=Adj[a];\n\t\t\t\ths[t]->idx.push_back(i);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tList *p=new List();\n\t\t\t\tp->next=Adj[a]->next;\n\t\t\t\tp->id=b;\n\t\t\t\tp->num=1;\n\t\t\t\tAdj[a]->next=p;\n\t\t\t\ths[t]=p;\n\t\t\t\ths[t]->idx.push_back(i);\n\t\t\t}\n\t\t}\n\t\t//\u8bb0\u5f55\u5173\u4e8ea\u5361\u8f66\u7684\u8be2\u95ee \n\t\tif(trucks[a].k>trucks[b].k)swap(a,b);\n\t\ttrucks[a].asks.push_back(Ask(b,trucks[b].p<trucks[a].p?-1:1,i));\n\t}\n\t\n\t//\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u884c\u52a8\uff0c\u6309\u7167\u65f6\u95f4\u53d1\u5c55\u987a\u5e8f\u8fdb\u884c \n\tsort(events.begin(),events.end());\n\t\n\tfor(int i=0;i<events.size();++i){\n\t\te=events[i];\n\t\tll prev_time=trucks[e.id].timee;\n\t\tint prev_dir=trucks[e.id].dir;\n\t\tinit(e);\n\t\t//\u8fd9\u91cc\u5c31\u662f\u5bf9\u4e8e\u4ee5e.id\u4e3a\u4e2d\u5fc3\u8f66\u8f86\u7684\u8be2\u95ee\u7ec4\u4e00\u5e76\u5904\u7406 \n\t\tfor(int j=0;j<trucks[e.id].asks.size();++j){\n\t\t\tAsk &q=trucks[e.id].asks[j];\n\t\t\tsolve(trucks[e.id],q,prev_time,prev_dir);\n\t\t}\n\t}\n\tint sz;\n\t//\u5176\u5b9e\u6211\u4eec\u5728\u4e0a\u9762\u53ea\u5904\u7406\u4e86\u6bcf\u4e2a\u4e2d\u5fc3\u8f66\u7684\u7b2c\u4e00\u4e2a\u8be2\u95ee\n\t//\u6211\u4eec\u5728\u4e0b\u9762\u5c06\u6240\u6709\u7684\u4e2d\u5fc3\u70b9\u76f8\u540c\u7684\u8be2\u95ee\u7edf\u4e00\u7b54\u6848 \n\tfor(int i=0;i<n;++i){\n\t\tfor(List *p=Adj[i];p;p=p->next){\n\t\t\tsz=p->idx.size();\n\t\t\tfor(int j=1;j<sz;++j){\n\t\t\t\tans[p->idx[j]]=ans[p->idx[0]];\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<m;++i){\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1599467715,
        "uid": 226447,
        "name": "\u54c8\u6492\u5404\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4811 \u3010[COCI 2014/2015 #3]KAMIONI\u3011"
    }
]