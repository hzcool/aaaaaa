[
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff08\uff1f](https://zhangyiming.tech/39)\n\n__solution__ :\n\n\n\u5728 WC2021 Day 1 \u665a\u4e0a\u542c\u4e86\u201c\u8c03\u6574\u7b97\u6cd5\u201d\uff0c\u611f\u89c9\u5f88\u795e\u4ed9\uff0c\u800c\u6821\u5185 OJ \u53ea\u6709\u4e00\u9053\u4e00\u822c\u56fe\u6700\u5927\u5339\u914d\u7684\u9898\uff0c\u4e8e\u662f\u5c31\u5199\u4e86\u4e00\u4e0b\u3002\n\n\u5efa\u56fe\u7684\u65b9\u6cd5\u8fd9\u91cc\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u5176\u4ed6\u9898\u89e3\u90fd\u6709\uff0c\u5c31\u662f\u628a\u4e00\u4e2a\u7b50\u5b50\u62c6\u6210\u4e09\u4e2a\u70b9\u7136\u540e\u4e92\u76f8\u8fde\u8fb9\u3002\n\n\u81f3\u4e8e\u201d\u8c03\u6574\u7b97\u6cd5\u201c\u5c31\u662f\u8bb0\u5f55\u4e00\u4e2a\u4e00\u5f00\u59cb\u4e3a\u7a7a\u7684\u5339\u914d\uff0c\u6bcf\u4e00\u6b21\u968f\u673a\u4e00\u4e2a\u6ca1\u6709\u5339\u914d\u7684\u70b9\u5e76\u679a\u4e3e\u51fa\u8fb9\uff0c\u5982\u679c\u4e5f\u6709\u6ca1\u6709\u5339\u914d\u7684\u70b9\u5c31\u5339\u914d\u4e0a\u5e76`ans`++\uff0c\u5426\u5219\u968f\u673a\u4e00\u4e2a\u70b9\u62c6\u6389\u539f\u6765\u7684\u5339\u914d\u5e76\u4e0e\u73b0\u5728\u7684\u70b9\u5339\u914d\u3002\n\n\u6211\u662f\u8fdb\u884c\u4e86`4e5`\u6b21\u4e0a\u8ff0\u7684\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u51fa\u6700\u5927\u5339\u914d\u7684\u5927\u5c0f\u4e86\uff08[darkbzoj](https://darkbzoj.tk/submission/108070)\uff09,\u4f46\u8fd9\u6837\u6c42\u51fa\u7684\u65b9\u6848\u4e0d\u4e00\u5b9a `1~n` \u90fd\u662f\u5339\u914d\u70b9\uff0c\u6240\u4ee5\u6211\u60f3\u51fa\u4e86\u4e00\u79cd\u5947\u602a\u7684\u505a\u6cd5\uff0c\u5c31\u662f\u6bcf\u6b21\u968f\u673a\u70b9\u7684\u65f6\u5019\u5982\u679c\u6709\u672a\u5339\u914d\u7684`1~n`\u7684\u70b9\u5c31\u4f18\u5148\u9009\uff0c\u7136\u540e\u83ab\u540d\u5176\u5999\u5c31\u5bf9\u4e86\uff08\n\n~~\u7136\u540e\u597d\u50cf\u5728\u6240\u6709OJ\u90fd\u662f\u6700\u6162\u89e3~~\n\n__code__ :\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint T, n, m, e, vis_num, num, head[1000000], nxt[1000000], to[1000000], cnt,\n    vis[1000000], v[1000000], out[1000000], i;\nvoid add(int a, int b) { nxt[++cnt] = head[a], to[cnt] = b, head[a] = cnt; }\nvoid link(int a, int b) {\n  vis[vis[a]] = vis[vis[b]] = 0, vis[a] = b, vis[b] = a;\n}\nint main() {\n  cin >> T;\n  while (T--) {\n    cnt = vis_num = 0;\n    memset(vis, 0, sizeof(vis));\n    memset(head, 0, sizeof(head));\n    memset(out, 0, sizeof(out));\n    cin >> n >> m >> e;\n    for (int i = 1; i <= e; i++) {\n      int u, v;\n      cin >> u >> v;\n      int s = n + (v - 1) * 3;\n      add(s + 2, u), add(u, s + 3), add(s + 3, u), add(u, s + 2), add(u, s + 1),\n          add(s + 1, u);\n    }\n    for (int i = 1; i <= m; i++) {\n      int s = n + (i - 1) * 3;\n      add(s + 2, s + 3), add(s + 3, s + 2), add(s + 1, s + 2),\n          add(s + 3, s + 1), add(s + 2, s + 1), add(s + 1, s + 3);\n    }\n    int tot = n + m * 3, ans = 0, _ = 1;\n    while (++_ <= 200000 || !out[1]) {\n      for (num = 0, i = 1; i <= tot; i++)\n        if (!vis[i]) v[++num] = i;\n      if (!num) break;\n      int now = v[1] <= n ? v[1] : v[rand() % num + 1];\n      vis_num += now <= n, num = 0;\n      for (i = head[now]; i; i = nxt[i]) {\n        if (!vis[to[i]]) {\n          ans++;\n          link(now, to[i]);\n          if (to[i] <= n) vis_num++;\n          goto ed;\n        } else\n          v[++num] = to[i];\n      }\n      {\n        int to = v[rand() % num + 1];\n        vis_num -= (vis[to] <= n);\n        link(now, to);\n      }\n    ed:\n      if (vis_num == n) memcpy(out, vis, sizeof(int) * (tot + 1));\n    }\n    cout << ans - n << endl;\n    for (i = 1; i <= n; i++) {\n      cout << (out[i] - n - 1) / 3 + 1 << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n```",
        "postTime": 1612253303,
        "uid": 350415,
        "name": "swiftqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4258 \u3010[WC2016]\u6311\u6218NPC\u3011"
    },
    {
        "content": "$\\huge\\mathcal{Description}$\n\n\u6709 $n$ \u4e2a\u7403\u548c $m$ \u4e2a\u7b50\u5b50\u3002\n\n\u6bcf\u4e2a\u7b50\u91cc\u6700\u591a\u80fd\u88c5\u4e09\u4e2a\u3002\u5982\u679c\u4e00\u4e2a\u7b50\u5b50\u5185\u6709\u4e0d\u8d85\u8fc7 $1$ \u4e2a\u7403\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u8fd9\u6837\u7684\u7b50\u5b50\u4e3a**\u534a\u7a7a**\u7684\u3002\n\n**\u6bcf\u4e2a\u7403\u90fd\u5fc5\u987b\u653e\u8fdb\u4e00\u4e2a\u7b50\u5b50\u4e2d**\u3002\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u7403\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u5373\u80fd\u653e\u8fdb\u54ea\u4e2a\u7b50\u91cc\u3002\n\n\u73b0\u8981\u6c42\u534a\u7a7a\u7684\u7b50\u6700\u591a\u6709\u51e0\u4e2a\uff0c\u5e76\u8f93\u51fa\u65b9\u6848\u3002\n\n~~\u5c0f I \u6d45\u7b11\uff1a\u201c\u6240\u4ee5\uff0c\u7b49\u6211\u9886\u56fe\u7075\u5956\u5427\uff01\u201d~~\n\n$\\huge\\mathcal{Solution}$\n\n\u673a\u623f\u5927\u4f6c\u4ecb\u7ecd\u7684\u4e00\u9053\u9898 ~~\u521a\u5b66\u7684\u5e26\u82b1\u6811\uff0c\u4f46\u53d1\u73b0\u57fa\u672c\u627e\u4e0d\u5230\u9898~~\n\n\u9996\u5148\uff0c\u6bcf\u4e2a\u7b50\u91cc\u6700\u591a\u653e\u4e09\u4e2a\u7403\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u7b50\u62c6\u6210\u4e09\u4e2a\u70b9\uff0c\u518d\u628a\u6bcf\u4e2a\u7403\u4f5c\u4e3a\u4e00\u4e2a\u70b9\u3002\u8fd9\u6837\uff0c\u7528\u6211\u4eec\u6700\u7ec8\u5f97\u51fa\u7684\u65b9\u6848\u6784\u6210\u7684\u56fe\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u4e00\u5b9a\u90fd\u4e0d\u4f1a\u8d85\u8fc71\n\n\u8fd9\u5c31\u4e0e**\u4e00\u822c\u56fe\u7684\u6700\u5927\u5339\u914d**\u76f8\u4f3c\uff0c\u4f46\u6211\u4eec\u663e\u7136\u4e0d\u80fd\u76f4\u63a5\u8dd1\u4e00\u904d\u5e26\u82b1\u6811\u3002\u56e0\u4e3a\u88c5\u6709\u4e00\u4e2a\u7403\u4ee5\u4e0a\u7684\u7b50\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002~~\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u64cd\u4f5c\u4e00\u4e0b~~\n\n**\u6709\u4e00\u79cd\u5f88\u5999\u7684\u60f3\u6cd5\u5c31\u662f\uff0c \u5728\u6bcf\u4e2a\u7b50\u62c6\u51fa\u7684\u4e09\u4e2a\u70b9\u4e4b\u95f4\u4e92\u76f8\u8fde\u8fb9\u3002**$\\mathcal{Why?}$\n\n\u6211\u4eec\u4f9d\u6b21\u8fdb\u884c\u8003\u8651\n\n- \u975e\u534a\u7a7a\u7684\u7b50\u5b50(\u5373\u88c5\u6709 $2$ \u6216 $3$ \u4e2a\u7403)\u3002\u4ed6\u4eec\u5bf9\u7b54\u6848\u4f5c\u51fa\u7684\u8d21\u732e\u662f\u65e0\u610f\u4e49\u7684\uff0c\u6240\u4ee5\u8981\u51cf\u53bb\u3002\u800c\u4ed6\u4eec\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u5c31\u662f\u88c5\u6709\u7684\u7403\u6570\u3002\n\n- \u88c5\u6709 $1$ \u4e2a\u7403\u7684\u7b50\u5b50\u3002\u4ed6\u4eec\u5bf9\u7b54\u6848\u5e94\u4f5c\u51fa $1$ \u7684\u8d21\u732e\u3002\u4f46\u7531\u4e8e\u7b50\u7684\u4e09\u4e2a\u70b9\u4e4b\u95f4\u6709\u8fde\u8fb9\uff0c\u6240\u4ee5\u4ed6\u4eec\u5bf9\u5f53\u524d\u7b54\u6848(\u5373\u5e26\u82b1\u6811\u8dd1\u51fa\u6765\u7684\u7ed3\u679c)\u8d21\u732e\u662f $2$\u3002\u6240\u4ee5\u51cf $1$\u3002\n\n- \u7a7a\u7684\u7b50\u3002\u4ed6\u4eec\u5bf9\u7b54\u6848\u5e94\u4f5c\u51fa $1$ \u7684\u8d21\u732e\u3002\u4f46\u7531\u4e8e\u7b50\u7684\u4e09\u4e2a\u70b9\u4e4b\u95f4\u6709\u8fde\u8fb9\uff0c\u6240\u4ee5\u4ed6\u4eec\u5bf9\u5f53\u524d\u7b54\u6848\u7684\u8d21\u732e\u662f $1$\u3002\u6240\u4ee5\u4e0d\u53d8\u3002\n\n\u5f52\u7eb3\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5f97\u5230\uff0c**\u4e00\u4e2a\u7b50\u5185\u88c5\u6709\u591a\u5c11\u7403\uff0c\u4ed6\u5c31\u5bf9\u6700\u7ec8\u7b54\u6848\u9020\u6210\u4e86\u591a\u5c11\u5f71\u54cd\u3002**\n\n\u7531\u4e8e\u6bcf\u4e2a\u7403\u90fd\u5fc5\u987b\u653e\u5165\u4e00\u4e2a\u7b50\u5b50, \u6240\u4ee5\uff0c\u6700\u7ec8\u7b54\u6848\u5c31\u7b49\u4e8e\u5e26\u82b1\u6811\u8dd1\u51fa\u6765\u7684\u7b54\u6848\u51cf\u53bb $n$\u3002\n\n$\\huge\\mathcal{Code}$\n\n```cpp\n//\u5197\u957f\u7684\u4ee3\u7801\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <queue>\ntemplate <typename Tp>\ninline void read(Tp &x) {\n    x = 0;\n    bool f = true; char ch = getchar();\n    for ( ; ch < '0' || ch > '9'; ch = getchar()) f ^= ch == '-';\n    for ( ; ch >= '0' && ch <= '9'; ch = getchar()) x = x * 10 + (ch ^ 48);\n    x = f ? x : -x;\n}\n\nconst int N = 1005, M = 2e5 + 7;\n\nint head[N], cnt = 0;\n\nstruct edge {\n    int to, next;\n};\nedge e[M << 1];\n\ninline void add_edge(int x, int y) {\n    e[++cnt] = (edge) {y, head[x]}, head[x] = cnt;\n}\n\nint fa[N], pre[N], f[N], tic[N], tim = 0, m, vis[N];\nstd::queue <int> q;\n\ninline int father(int x) {\n    return fa[x] == x ? x : fa[x] = father(fa[x]);\n}\n\ninline void shrink(int x, int y, int top) {\n    while (father(x) != top) {\n        pre[x] = y, y = f[x];\n        if (vis[y] == 2) vis[y] = 1, q.push(y);\n        if (father(x) == x) fa[x] = top;\n        if (father(y) == y) fa[y] = top;\n        x = pre[y];\n    }\n}\n\ninline int LCA(int x, int y) {\n    ++tim;\n    while (1) {\n        x = father(x);\n        if (tic[x] == tim) return x;\n        else tic[x] = tim, x = pre[f[x]]; \n        std::swap(x, y);\n    }\n}\n\ninline bool match(int s) {\n    for (int i = 1; i <= m; ++i) fa[i] = i;\n    std::fill(pre + 1, pre + m + 1, 0);\n    std::fill(vis + 1, vis + m + 1, 0);\n    while (q.size()) q.pop();\n    vis[s] = 1, q.push(s);\n    while (q.size()) {\n        int x = q.front();\n        q.pop();\n        for (int i = head[x]; i; i = e[i].next) {\n            int v = e[i].to;\n            if (vis[v] == 2 || father(x) == father(v)) continue;\n            if (!vis[v]) {\n                vis[v] = 2, pre[v] = x;\n                if (!f[v]) {\n                    for (int cur = v, last; cur; cur = last) {\n                        last = f[pre[cur]];\n                        f[pre[cur]] = cur, f[cur] = pre[cur];\n                    }\n                    return true;\n                }\n                vis[f[v]] = 1, q.push(f[v]);\n            }\n            else if (vis[v] == 1) {\n                int lca = LCA(x, v);\n                shrink(x, v, lca);\n                shrink(v, x, lca);\n            }\n        }\n    }\n    return false;\n}\n\nint main() {\n    int T;\n    read(T);\n    while (T--) {\n        int n, E;\n        read(n), read(m), read(E);\n        cnt = tim = 0;\n        std::fill(head + 1, head + n + 3 * m + 1, 0);\n        std::fill(f + 1, f + n + 3 * m + 1, 0);\n        std::fill(tic + 1, tic + n + 3 * m + 1, 0);\n        for (int i = 1; i <= E; ++i) {\n            int x, y;\n            read(x), read(y);\n            int z = n + (y - 1) * 3;\n            add_edge(x, z + 1), add_edge(z + 1, x);\n            add_edge(x, z + 2), add_edge(z + 2, x);\n            add_edge(x, z + 3), add_edge(z + 3, x);\n        }\n        for (int i = 1; i <= m; ++i) {\n            int x = n + (i - 1) * 3;\n            add_edge(x + 1, x + 2), add_edge(x + 2, x + 1);\n            add_edge(x + 1, x + 3), add_edge(x + 3, x + 1);\n            add_edge(x + 2, x + 3), add_edge(x + 3, x + 2);\n        }\n        int ans = -n;\n        m = m * 3 + n;\n        for (int i = 1; i <= m; ++i) ans += (!f[i] && match(i));\n        printf(\"%d\\n\", ans);\n        for (int i = 1; i <= n; ++i) printf(\"%d%c\", (f[i] - n - 1) / 3 + 1, \" \\n\"[i == n]);\n    }\n    return 0;\n}\n```\n\n\n\n$\\huge\\mathcal{CSP2019}$ $\\huge\\color{red}\\mathcal{R}\\huge\\color{yellow}\\mathcal{P} \\color{orange}++$",
        "postTime": 1569588236,
        "uid": 47751,
        "name": "Crossing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4258 \u3010[WC2016]\u6311\u6218NPC\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u9053\u9898\u5b8c\u5168\u4e0d\u662f NPC\uff0c\u7f51\u4e0a\u53ef\u4ee5\u641c\u5230\u5f53\u5e74\u51ac\u4ee4\u8425\u5bf9\u4e8e\u8fd9\u4e00\u70b9\u7684\u89e3\u91ca\u3002\n\n\u622a\u6b62\u81f3 2021.8.4 \u6700\u4f18\u89e3 get\u221a\n\n## \u9898\u76ee\u5927\u610f\n\u6709 $n$ \u4e2a\u7403\uff0c\u7528\u6574\u6570 $1\\sim n$ \u7f16\u53f7\u3002\u8fd8\u6709 $m$ \u4e2a\u7b50\u5b50\uff0c\u7528\u6574\u6570 $1\\sim m$ \u7f16\u53f7\u3002\u6bcf\u4e2a\u7b50\u5b50\u6700\u591a\u80fd\u88c5 $3$ \u4e2a\u7403\u3002\n\n\u6bcf\u4e2a\u7403\u53ea\u80fd\u653e\u8fdb\u7279\u5b9a\u7684\u7b50\u5b50\u4e2d\u3002 \u5177\u4f53\u6709 $e$ \u4e2a\u6761\u4ef6\uff0c\u7b2c $i$ \u4e2a\u6761\u4ef6\u7528\u4e24\u4e2a\u6574\u6570 $v_i$ \u548c $u_i$ \u63cf\u8ff0\uff0c\u8868\u793a\u7f16\u53f7\u4e3a $v_i$ \u7684\u7403\u53ef\u4ee5\u653e\u8fdb\u7f16\u53f7\u4e3a $u_i$ \u7684\u7b50\u5b50\u4e2d\u3002\n\n\u6bcf\u4e2a\u7403\u90fd\u5fc5\u987b\u653e\u8fdb\u4e00\u4e2a\u7b50\u5b50\u4e2d\u3002\u5982\u679c\u4e00\u4e2a\u7b50\u5b50\u5185\u6709\u4e0d\u8d85\u8fc7 $1$ \u4e2a\u7403\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u8fd9\u6837\u7684\u7b50\u5b50\u4e3a\u534a\u7a7a\u7684\u3002\n\n\u6c42\u534a\u7a7a\u7684\u7b50\u5b50\u6700\u591a\u6709\u591a\u5c11\u4e2a\uff0c\u4ee5\u53ca\u5728\u6700\u4f18\u65b9\u6848\u4e2d\uff0c \u6bcf\u4e2a\u7403\u5206\u522b\u653e\u5728\u54ea\u4e2a\u7b50\u5b50\u4e2d\u3002\n\n## \u5927\u4f53\u601d\u8def\n\u9996\u5148\uff0c\u7531\u4e8e\u6bcf\u4e2a\u7b50\u5b50\u53ef\u4ee5\u653e\u6700\u591a\u4e09\u4e2a\u7403\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u5c06\u6bcf\u4e2a\u4ee3\u8868\u7b50\u7684\u70b9\u62c6\u6210\u4e09\u4e2a\u70b9\uff0c\u7136\u540e\u7531 $v_i$ \u5411\u8fd9\u4e09\u4e2a\u70b9\u4f9d\u6b21\u8fde\u4e00\u6761\u65e0\u5411\u8fb9\u3002\u5bf9\u4e8e\u8fd9\u7c7b\u9898\u76ee\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u6700\u5927\u5339\u914d\u95ee\u9898\u3002\n\n\u7136\u800c\uff0c\u7531\u4e8e\u9898\u76ee\u6c42\u7684\u662f\u534a\u7a7a\u7684\u7b50\u5b50\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7b50\u5b50\u7684\u4e09\u4e2a\u70b9\uff0c\u5982\u679c\u4e09\u4e2a\u70b9\u5747\u662f\u5339\u914d\u70b9\u5219\u8981\u51cf\u53bb $3$\uff0c\u82e5\u6709\u4e24\u4e2a\u70b9\u662f\u5339\u914d\u70b9\u5219\u8981\u51cf\u53bb $2$\uff0c\u82e5\u53ea\u6709\u4e00\u4e2a\u5339\u914d\u70b9\u5219\u4e0d\u7528\u51cf\u53bb\u3002\u8fd9\u6837\uff0c\u6bcf\u79cd\u60c5\u51b5\u9700\u8981\u88ab\u5dee\u522b\u5bf9\u5f85\uff0c\u8f83\u4e3a\u9ebb\u70e6\u3002\n\n\u8003\u8651\u5c06\u6bcf\u4e2a\u7b50\u5b50\u62c6\u6210\u7684\u4e09\u4e2a\u70b9\u4e4b\u95f4\u8fde\u8fb9\uff0c\u6210\u4e3a\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\u7136\u540e\uff0c\u6574\u5f20\u56fe\u662f\u4e00\u5f20\u4e00\u822c\u7684\u65e0\u5411\u56fe\uff0c\u4f7f\u7528\u5e26\u82b1\u6811\u7b97\u6cd5\u6c42\u89e3\u4e00\u822c\u56fe\u6700\u5927\u5339\u914d\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/rni8yeb9.png)\n\n\u6b64\u65f6\uff0c\u5bf9\u4e8e\u5982\u4e0a\u56fe\u6240\u793a\u7684\u53ea\u6709\u4e00\u4e2a\u5339\u914d\u70b9\u7684\u60c5\u51b5\uff0c$(2,3)$ \u4e5f\u6784\u6210\u4e86\u4e00\u7ec4\u5339\u914d\uff0c\u663e\u7136\u8fd9\u4e00\u7ec4\u5339\u914d\u4e5f\u5fc5\u987b\u5220\u53bb\uff0c\u6240\u4ee5\u5f53\u6709\u4e00\u4e2a\u5339\u914d\u70b9\u65f6\u7b54\u6848\u9700\u8981\u51cf\u4e00\u3002\n\n\u8fd9\u6837\uff0c\u5bf9\u4e8e\u6709 $i$ \u4e2a\u70b9\u7684\u5339\u914d\uff0c\u7b54\u6848\u9700\u8981\u51cf\u53bb $i$\uff0c\u800c\u9898\u76ee\u4fdd\u8bc1\u6240\u6709\u7403\u90fd\u80fd\u653e\u5165\uff0c\u6240\u4ee5 $\\sum i=n$\uff0c\u4ece\u6c42\u5f97\u7684\u6700\u5927\u5339\u914d\u51cf\u53bb $n$ \u5373\u53ef\u3002\u81f3\u4e8e\u65b9\u6848\u8f93\u51fa\uff0c\u6ce8\u610f\u8fd8\u539f $match$ \u6570\u7ec4\u6240\u5bf9\u5e94\u7684\u70b9\u7684\u7f16\u53f7\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cstring>\nusing namespace std;\n#define rep(ii,aa,bb) for(re int ii = aa; ii <= bb; ii++)\n#define Rep(ii,aa,bb) for(re int ii = aa; ii >= bb; ii--)\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> PII;\ntypedef double db;\nconst int maxn = 1e3 + 5;\nnamespace IO_ReadWrite {\n\t#define re register\n\t#define gg (p1 == p2 && (p2 = (p1 = _buf) + fread(_buf, 1, 1<<21, stdin), p1 == p2) ? EOF :*p1++)\n\tchar _buf[1<<21], *p1 = _buf, *p2 = _buf;\n\ttemplate <typename T>\n\tinline void read(T &x){\n\t\tx = 0; re T f=1; re char c = gg;\n\t\twhile(c > 57 || c < 48){if(c == '-') f = -1;c = gg;}\n\t\twhile(c >= 48 &&c <= 57){x = (x<<1) + (x<<3) + (c^48);c = gg;}\n\t\tx *= f;return;\n\t}\n\tinline void ReadChar(char &c){\n\t\tc = gg;\n\t\twhile(!isalpha(c)) c = gg;\n\t}\n\ttemplate <typename T>\n\tinline void write(T x){\n\t\tif(x < 0) putchar('-'), x = -x;\n\t\tif(x > 9) write(x/10);\n\t\tputchar('0' + x % 10);\n\t}\n\ttemplate <typename T>\n\tinline void writeln(T x){write(x); putchar('\\n');}\n}\nusing namespace IO_ReadWrite;\nint hd[maxn], ver[200005], nxt[200005], tot;\nint n, m, e;\ninline void add(int u, int v) {\n\tver[++tot] = v; nxt[tot] = hd[u]; hd[u] = tot;\n\tver[++tot] = u; nxt[tot] = hd[v]; hd[v] = tot;\n}\nint fa[maxn], pre[maxn], match[maxn], vis[maxn], dfn[maxn], timer;\nqueue <int> q;\nint ans;\ninline int find(int k) {\n\treturn k == fa[k] ? k : fa[k] = find(fa[k]);\n}\ninline int lca(int u, int v) {\n\tu = find(u), v = find(v);\n\ttimer ++;\n\twhile(dfn[u] != timer) {\n\t\tdfn[u] = timer;\n\t\tu = find(pre[match[u]]);\n\t\tif(v) u ^= v ^= u ^= v;\n\t}\n\treturn u;\n}\ninline void blossom(int x, int y, int z) {\n\twhile(find(x) != z) {\n\t\tpre[x] = y; y = match[x];\n\t\tif(vis[y] == 2) {\n\t\t\tvis[y] = 1;\n\t\t\tq.push(y);\n\t\t}\n\t\tif(find(x) == x) fa[x] = z;\n\t\tif(find(y) == y) fa[y] = z;\n\t\tx = pre[y];\n\t}\n}\ninline bool bfs(int s) {\n\tif(2 * (ans + 1) > n + 3 * m) return 0;\n\trep(i, 1, m * 3 + n) fa[i] = i, pre[i] = vis[i] = 0;\n\twhile(!q.empty()) q.pop();\n\tq.push(s); vis[s] = 1;\n\twhile(!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor(int i = hd[u]; i; i = nxt[i]) {\n\t\t\tint v = ver[i];\n\t\t\tif(find(u) == find(v) || vis[v] == 2) continue;\n\t\t\tif(vis[v] == 0) {\n\t\t\t\tvis[v] = 2, pre[v] = u;\n\t\t\t\tif(!match[v]) {\n\t\t\t\tfor(int x = v, lst; x; x = lst)\n\t\t\t\t\tlst = match[pre[x]],\n\t\t\t\t\tmatch[x] = pre[x], \n\t\t\t\t\tmatch[pre[x]] = x;\n\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tvis[match[v]] = 1; q.push(match[v]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint w = lca(u, v);\n\t\t\t\tblossom(u, v, w); blossom(v, u, w);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint T;\nint main () {\n\tread(T);\n\twhile(T --) {\n\t\tread(n); read(m); read(e);\n\t\ttot = timer = ans = 0;\n\t\tmemset(match, 0, sizeof match);\n\t\tmemset(dfn, 0, sizeof dfn);\n\t\tmemset(hd, 0, sizeof hd);\n\t\trep(i, 1, e) {\n\t\t\tint u, v;\n\t\t\tread(v); read(u);\n\t\t\tadd(v, u + n);\n\t\t\tadd(v, u + n + m);\n\t\t\tadd(v, u + n + m + m);// \u62c6\u70b9\n\t\t}\n\t\trep(i, 1, m) {\n\t\t\tadd(i + n, i + n + m);\n\t\t\tadd(i + n, i + n + m + m);\n\t\t\tadd(i + n + m, i + n + m + m);//\u4e09\u4e2a\u70b9\u4e4b\u95f4\u8fde\u8fb9\n\t\t}\n\t\trep(i, 1, (m + m + m + n)) \n\t\t\tif(!match[i]) ans += bfs(i);\n\t\twriteln(ans - n);\n\t\trep(i, 1, n) write((match[i] - n - 1) % m + 1), putchar(' ');\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1628076733,
        "uid": 279197,
        "name": "Mars_Dingdang",
        "ccfLevel": 6,
        "title": "P4258 \u6311\u6218NPC"
    },
    {
        "content": "\u8fd9\u9898\u8fd8\u662f\u5f88\u5999\u7684\n\n\u6211\u6765\u53d1\u9898\u89e3\u7684\u4e3b\u8981\u76ee\u7684\u5c31\u662f\u53d1\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u5e26\u82b1\u6811\u7684\u4ee3\u7801\n\n\u6211\u7684\u53c8\u6ca1\u538b\u884c\uff0c\u8fd8\u6bd4\u8f83\u77ed\uff0c\u611f\u89c9\u6bd4\u8f83\u597d\u770b\n\n\u8fd9\u9898\u5927\u6982\u5c31\u662f\u8003\u8651\u5982\u4f55\u8ba9\u7b50\u4f53\u73b0\u51fa\u5b83\u7684\u4ef7\u503c\n\n\u9996\u5148\u6bcf\u4e2a\u7b50\u62c6\u6210\u4e09\u4e2a\u70b9\uff0c\u5206\u522b\u4ee3\u8868\u4e09\u4e2a\u7a7a\u4f4d\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u7403\u53ef\u4ee5\u653e\u5165\u6846\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u6211\u4eec\u8fde\u4e09\u6761\u8fb9\n\n\u6700\u540e\u518d\u6bcf\u4e2a\u7b50\u7684\u4e09\u4e2a\u70b9\u4e4b\u95f4\u4e92\u76f8\u8fde\u8fb9\n\n\u5982\u4e0b\u56fe\u6240\u793a\uff1a\uff08\u56fe\u662f\u697c\u4e0b\u7684\uff09\n\n![](https://huhaoo.coding.me/2018/03/04/luogu4258WC2016\u6311\u6218NPC/2.png)\n\n\u8fd9\u6837\u6765\u4e2a\u5e26\u82b1\u6811\u5c31\u505a\u51fa\u6765\u4e86\n\n\u5f53\u7136\u6700\u540e\u7b54\u6848\u8981-n\n\n\u800c\u4e14\u8f93\u51fa\u65b9\u6848\u6ce8\u610f\u4e00\u4e0b\n\n\u8fd8\u6709\u8fb9\u8868\u5f00\u591f\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#define LL long long\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=' ';\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x*f;\n}\nconst int N=605,M=5e5;\nint tot,cnt,top,sum;\nint head[M],to[M],Next[M];\ninline void addedge(int x,int y){to[++tot]=y;Next[tot]=head[x];head[x]=tot;}\ninline void ins(int x,int y){addedge(x,y);addedge(y,x);}\nint f[N],vis[N],pre[N],nxt[N],q[N],s[N];\ninline int find(int x){return f[x]==x?x:f[x]=find(f[x]);}\ninline int lca(int x,int y){\n    for(cnt++,x=find(x),y=find(y);;swap(x,y))\n        if(x){\n            if(vis[x]==cnt)return x;\n            vis[x]=cnt;\n            x=find(pre[nxt[x]]);\n        }\n}\ninline void blossom(int x,int y,int flower){\n    while(find(x)!=flower){\n        pre[x]=y;\n        if(s[nxt[x]]==1)s[q[++top]=nxt[x]]=0;\n        if(f[x]==x)f[x]=flower;\n        if(f[nxt[x]]==nxt[x])f[nxt[x]]=flower;\n        y=nxt[x];\n        x=pre[y];\n    }\n}\ninline int match(int st){\n    for(int i=1;i<=sum;++i)f[i]=i;\n    memset(s,-1,sizeof(s));\n    s[q[top=1]=st]=0;int x;\n    for(int l=1;l<=top;++l)\n        for(int i=head[x=q[l]];i;i=Next[i]){\n            int u=to[i];\n            if(s[u]==-1){\n                pre[u]=x;\n                s[u]=1;\n                if(!nxt[u]){\n                    for(int v=x,lst;v;u=lst,v=pre[u])\n                        lst=nxt[v],nxt[v]=u,nxt[u]=v;\n                    return 1;\n                }\n                s[q[++top]=nxt[u]]=0;\n            }\n            else if(!s[u] && find(x)!=find(u)){\n                int flower=lca(x,u);\n                blossom(u,x,flower);\n                blossom(x,u,flower);\n            }\n        }\n    return 0;\n}\ninline int solve(){\n    int ans=0;\n    for(int i=1;i<=sum;++i)if(!nxt[i])ans+=match(i);\n    return ans;\n}\nint T,n,m,E;\nint main(){\n    T=read();\n    for(int s=1;s<=T;++s){\n        n=read();m=read();E=read();\n        sum=n+m*3;tot=0;cnt=0;\n        memset(head,0,sizeof(head));\n        memset(nxt,0,sizeof(nxt));\n        memset(pre,0,sizeof(pre));\n        memset(vis,0,sizeof(vis));\n        for(int i=1;i<=E;++i){\n            int u=read(),v=read();\n            ins(u,n+v);\n            ins(u,n+m+v);\n            ins(u,n+(m<<1)+v);\n        }\n        for(int i=1;i<=m;++i){\n            ins(n+i,n+m+i);\n            ins(n+i,n+(m<<1)+i);\n            ins(n+m+i,n+(m<<1)+i);\n        }\n        printf(\"%d\\n\",solve()-n);\n        for(int i=1;i<=n;++i)printf(\"%d \",(nxt[i]-n-1)%m+1);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1520585770,
        "uid": 39505,
        "name": "\u73ab\u8475\u4e4b\u8776",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4258 \u3010[WC2016]\u6311\u6218NPC\u3011"
    },
    {
        "content": "\u4e0d\u5f97\u4e0d\u8bf4\u662f\u4e00\u9053\u5f88\u5de7\u5999\u7684\u9898\u76ee\uff0c\u800c\u4e14\u7ed3\u8bba\u4e5f\u6bd4\u8f83\u597d\u731c~~\u81f3\u5c11\u6211\u731c\u4e86\u4e00\u4f1a\u513f\u5c31\u731c\u51fa\u6765\u4e86\u7ed3\u679c\u4e0d\u4f1a\u8bc1\u2026\u2026~~      \n\n\u6211\u4eec\u4e00\u6253\u5f00\u8fd9\u9053\u9898\uff0c\u8bf6~~\u7f51\u7edc\u6d41~~\u3002       \n\n\u4e0d\u8fc7\u5f88\u7cdf\u7cd5\u7684\u662f\u6211\u4eec\u5efa\u4e0d\u51fa\u6765\u8fd9\u4e2a\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8fd9\u9053\u9898\u7684\u4e00\u4e2a\u660e\u663e\u63d0\u793a\uff1a\u6700\u5927\u5339\u914d\u3002      \n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u7b50\u5b50\u62c6\u6210\u4e09\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u7b50\u5b50\u7684\u4e09\u4e2a\u70b9\u4e4b\u95f4\u4e92\u76f8\u8fde\u8fb9\uff0c\u6bcf\u6761\u8fb9\u7684\u7403\u5411\u5bf9\u5e94\u7684\u7b50\u5b50\u7684\u4e09\u4e2a\u62c6\u70b9\u8fde\u8fb9\u3002      \n\n\u63a5\u7740\u8003\u8651\u6bcf\u4e2a\u7b50\u5b50\u7684\u60c5\u51b5\uff1a     \n\n- \u5982\u679c\u4e0e\u7403\u7684\u5339\u914d\u4e3a $0$ \uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $1$ \uff0c\u521a\u597d\u5185\u90e8\u8fde\u63a5\u7684\u51e0\u4e2a\u7b50\u5b50\u53ef\u4ee5\u505a\u4e00\u4e2a\u8d21\u732e\u4e3a $1$ \u7684\u7b54\u6848\u3002     \n- \u5982\u679c\u4e0e\u7403\u7684\u5339\u914d\u4e3a $1$ \uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $1$ \uff0c\u6b64\u65f6\u7531\u4e8e\u5185\u90e8\u8fde\u63a5\u53c8\u4f1a\u4ea7\u751f\u4e3a $1$ \u7684\u8d21\u732e\uff0c\u6240\u4ee5\u603b\u7684\u8d21\u732e\u4e3a $2$ \uff0c\u51cf\u53bb\u7403\u7684\u8d21\u732e $1$ \u5373\u53ef\u5f97\u5230\u6b63\u786e\u7b54\u6848\u3002    \n- \u5982\u679c\u4e0e\u7403\u7684\u5339\u914d\u4e3a $2$ \uff0c\u90a3\u4e48\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $0$ \uff0c\u7531\u4e8e\u6b64\u65f6\u5185\u90e8\u8fde\u63a5\u6ca1\u6709\u8d21\u732e\uff0c\u6240\u4ee5\u603b\u7684\u8d21\u732e\u4e3a $2$ \uff0c\u51cf\u53bb\u7403\u7684\u5339\u914d\u4e3a $2$ \u5373\u53ef\u5f97\u5230\u6b63\u786e\u7b54\u6848\u3002    - \u4e0e\u7403\u7684\u5339\u914d\u4e3a $3$ \u7684\u60c5\u51b5\u5982\u5339\u914d\u6570\u4e3a $2$ \u7684\u60c5\u51b5\u3002     \n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u628a\u6211\u4eec\u8ba1\u7b97\u4e00\u822c\u56fe\u7684\u6700\u5927\u5339\u914d\uff0c\u51cf\u53bb\u653e\u8fdb\u7403\u4ea7\u751f\u7684\u8d21\u732e\u5373\u53ef\uff0c\u800c\u6211\u4eec\u6240\u6709\u7403\u90fd\u5fc5\u987b\u653e\u4e00\u6b21\uff0c\u5373\u51cf\u53bb $n$ \u5373\u53ef\u3002       \n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f\u4e00\u822c\u56fe\u6700\u5927\u5339\u914d\uff0c\u56e0\u4e3a\u8fd9\u6837\u5efa\u56fe\u80af\u5b9a\u6709\u5947\u73af\u554a\u2026\u2026\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int Len = 100005 , M = 100005;\nqueue<int> q;\ninline int read() {\n    char ch = getchar();\n    int x = 0, f = 1;\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while ('0' <= ch && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\ninline void write(int x) {\n    if (x < 0)\n        putchar('-'), x = -x;\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\nint n,m,e,cnt,tot,head[Len],fa[Len],flo[Len],match[Len],pre[Len],vis[Len],ans;\nstruct node\n{\n\tint next,to;\n}edge[M << 1];\nvoid add(int from,int to)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\ninline int findSet(int x){return fa[x] == x ? fa[x] : fa[x] = findSet(fa[x]);}\ninline int LCA(int x,int y)\n{\n\tfor(++ tot , x = findSet(x) , y = findSet(y) ; flo[x] != tot ; )\n\t{\n\t\tflo[x] = tot;\n\t\tx = findSet(pre[match[x]]);\n\t\tif(y) swap(x , y);\n\t}\n\treturn x;\n}\ninline void blossom(int x,int y,int rt)\n{\n\twhile(findSet(x) != rt)\n\t{\n\t\tpre[x] = y , y = match[x];\n\t\tif(vis[y] == 2) vis[y] = 1 , q.push(y);\n\t\tif(findSet(x) == x) fa[x] = rt;\n\t\tif(findSet(y) == y) fa[y] = rt;\n\t\tx = pre[y];\n\t}\n}\ninline int aug(int x)\n{\n\tif((ans + 1) * 2 > (n + m * 3)) return 0;\n\tfor(int i = 1 ; i <= n + m * 3; i ++) fa[i] = i , vis[i] = pre[i] = 0;\n\twhile(!q.empty()) q.pop();\n\tq.push(x) ; vis[x] = 1;\n\twhile(!q.empty())\n\t{\n\t\tint p = q.front() ; q.pop() ;\n\t\tfor(int e = head[p] , rt ; e ; e = edge[e].next)\n\t\t{\n\t\t\tint to = edge[e].to;\n\t\t\tif(findSet(p) == findSet(to) || vis[to] == 2) continue;\n\t\t\tif(!vis[to])\n\t\t\t{\n\t\t\t\tvis[to] = 2 , pre[to] = p;\n\t\t\t\tif(!match[to])//\u627e\u589e\u5e7f\u8def\n\t\t\t\t{\n\t\t\t\t\tfor(int v = to , lst ; v ; v = lst){lst = match[pre[v]] , match[v] = pre[v] , match[pre[v]] = v;}\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif(match[to]) vis[match[to]] = 1 , q.push(match[to]); \n\t\t\t}\n\t\t\telse blossom(p , to , rt = LCA(p , to)) , blossom(to , p , rt);\n\t\t}\n\t}\n\treturn 0;\n}\ninline int GOTO(int x)\n{\n\tint z = x - n;\n\tif(z % 3 == 0) return z / 3;\n\treturn z / 3 + 1;\n}\nint main()\n{\n\tint T;T = read();\n\twhile(T --)\n\t{\n\t\tmemset(head , 0 , sizeof head) ; cnt = tot = 0;\n\t\tmemset(fa , 0 , sizeof fa);memset(flo , 0 , sizeof flo);memset(match , 0 , sizeof match);memset(pre , 0 , sizeof pre);\n\t\tmemset(vis , 0 , sizeof vis);\n\t\tn = read() , m = read() , e = read();\n\t\tfor(int i = 1 ; i <= m ; i ++) \n\t\t{\n\t\t\tint num = n + (i - 1) * 3;\n\t\t\tadd(num + 1 , num + 2) , add(num + 2 , num + 1);\n\t\t\tadd(num + 1 , num + 3) , add(num + 3 , num + 1);\n\t\t\tadd(num + 2 , num + 3) , add(num + 3 , num + 2); \n\t\t}\n\t\tfor(int i = 1 ; i <= e ; i ++) \n\t\t{\n\t\t\tint x,y;x = read() , y = read();int num = n + (y - 1) * 3;\n\t\t\tadd(x , num + 1) , add(num + 1 , x);\n\t\t\tadd(x , num + 2) , add(num + 2 , x);\n\t\t\tadd(x , num + 3) , add(num + 3 , x); \n\t\t}\n\t\tans = -n;\n\t\tfor(int i = 1 ; i <= n + m * 3 ; i ++) if(!match[i]) ans += aug(i);\n\t\twrite(ans) , putchar('\\n');\n\t\tfor(int i = 1 ; i <= n; i ++) write(GOTO(match[i])) , putchar(' ');\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1610541537,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4258 \u3010[WC2016]\u6311\u6218NPC\u3011"
    },
    {
        "content": "\u8bfb\u9898\uff0c\u53d1\u73b0\u6709\u4e00\u4e2a\u9650\u5236\u6761\u4ef6\uff1a\n\n> \u4fdd\u8bc1\u81f3\u5c11\u6709\u4e00\u79cd\u5408\u6cd5\u65b9\u6848\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u7403\u90fd\u653e\u8fdb\u4e86\u7b50\u5b50\uff0c\u4e14\u6bcf\u4e2a\u7b50\u5b50\u5185\u7403\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 $3$\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u6240\u6709\u7403\u4e00\u5b9a\u80fd\u548c\u67d0\u4e00\u4e2a\u7b50\u5b50\u5339\u914d\u3002\n\n\u8003\u8651\u5c06\u8fd9\u9053\u9898\u8ddf\u5339\u914d\u626f\u4e0a\u5173\u7cfb\u3002\u663e\u7136\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u6240\u6709\u7403\u4e00\u5b9a\u80fd\u548c\u67d0\u4e00\u4e2a\u7b50\u5b50\u5339\u914d\uff0c\u6240\u4ee5\u8bf4\u5bf9\u4e8e\u7b54\u6848\u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u4e00\u5b9a\u8981\u5728 $m$ \u4e2a\u7b50\u5b50\u6240\u4ee3\u8868\u7684\u70b9\u96c6\u53ca\u8fb9\u96c6\u5185\u8fdb\u884c\u5904\u7406\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u7b50\u5b50\u53ea\u80fd\u653e\u4e09\u4e2a\u7403\uff0c\u5e76\u4e14\u53ea\u6709\u653e $0$ \u6216 $1$ \u4e2a\u7403\u7684\u7b50\u5b50\u624d\u80fd\u7ed9\u51fa\u8d21\u732e\u3002\u4e8e\u662f\u5c06\u4e00\u4e2a\u7b50\u5b50\u62c6\u6210 $3$ \u4e2a\u70b9\uff0c\u4e00\u4e2a\u7b50\u5b50\u5185\u7684\u4e09\u4e2a\u70b9\u4e24\u4e24\u8fde\u8fb9\u3002\n\n\u8fd9\u6837\u505a\u7684\u610f\u4e49\u662f\uff0c\u6211\u4eec\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e86\u5728\u7403\u80fd\u548c\u7b50\u5b50\u5339\u914d\u4e0b\u7684\u60c5\u51b5\uff0c\u5177\u4f53\u72b6\u51b5\u5177\u4f53\u5206\u6790\uff1a\n\n- \u5982\u679c\u7b50\u5b50\u4ee3\u8868\u7684\u70b9\u88ab $0$ \u4e2a\u7403\u5339\u914d\uff1a\u8fd9\u4e09\u4e2a\u70b9\u5185\u90e8\u5339\u914d\uff0c\u7b54\u6848\u8d21\u732e\u4e3a $1$\uff1b   \n- \u5982\u679c\u7b50\u5b50\u4ee3\u8868\u7684\u70b9\u88ab $1$ \u4e2a\u7403\u5339\u914d\uff1a\u672a\u88ab\u5339\u914d\u7684\u4e24\u4e2a\u70b9\u5339\u914d\uff0c\u7b54\u6848\u8d21\u732e\u4e3a $1$\uff1b   \n- \u5426\u5219\uff0c\u4e0d\u80fd\u591f\u627e\u5230\u66f4\u591a\u7684\u5339\u914d\uff0c\u7b54\u6848\u8d21\u732e\u4e3a $0$\u3002\n\n\u4e8e\u662f\u76f4\u63a5\u5efa\u8fb9\u5373\u53ef\u3002\u56e0\u4e3a\u56fe\u4e2d\u6709\u5947\u73af\uff0c\u56e0\u6b64\u4e3a\u4e00\u822c\u56fe\u6700\u5927\u5339\u914d\uff0c\u7528\u5e26\u82b1\u6811\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002**\u6ce8\u610f\uff0c\u56e0\u4e3a\u8981\u8f93\u51fa\u65b9\u6848\uff0c\u6240\u4ee5\u8981\u5148\u5339\u914d\u7403\u6240\u5bf9\u5e94\u7684\u70b9\uff0c\u5426\u5219\u65b9\u6848\u4f1a\u51fa\u73b0\u95ee\u9898**\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct UnionFindSet{\n\tint fa[1005];\n\tvoid makeSet(int up){for(int i=0;i<=up;++i)\tfa[i]=i;}\n\tint findSet(int x)\n\t{\n\t\tif(x==fa[x])\treturn x;\n\t\treturn fa[x]=findSet(fa[x]);\n\t}\n\tvoid unionSet(int x,int y)\n\t{\n\t\tint xx=findSet(x),yy=findSet(y);\n\t\tif(xx==yy)\treturn ;\n\t\tfa[xx]=yy;\n\t}\n}ufs;\nvector<int> G[1005];\nint n,m,match[1005],pre[1005],vis[1005],bel[1005],flw,e,clc[1005];\nqueue<int> Q;\nint LCA(int u,int v)\n{\n\t++flw;\n\twhile(bel[u]!=flw)\n\t{\n\t\tbel[u]=flw;\n\t\tu=ufs.findSet(pre[match[u]]);\n\t\tif(v)\tswap(u,v);\n\t}\n\treturn u;\n}\nvoid Blossom(int u,int v,int x)\n{\n\twhile(ufs.findSet(u)!=x)\n\t{\n\t\tpre[u]=v;\n\t\tv=match[u];\n\t\tif(vis[v]==2)\tvis[v]=1,Q.push(v);\n\t\tif(ufs.findSet(u)==u)\tufs.fa[u]=x;\n\t\tif(ufs.findSet(v)==v)\tufs.fa[v]=x;\n\t\tu=pre[v];\n\t}\n}\nbool Aug(int S)\n{\n\twhile(!Q.empty())\tQ.pop();\n\tmemset(vis,0,sizeof vis);\n\tmemset(pre,0,sizeof pre);\n\tufs.makeSet(3*m+n);\n\tQ.push(S);\n\tvis[S]=1;\n\twhile(!Q.empty())\n\t{\n\t\tint now=Q.front();\n\t\tQ.pop();\n\t\tfor(unsigned int i=0;i<G[now].size();++i)\n\t\t{\n\t\t\tint to=G[now][i];\n\t\t\tif(ufs.findSet(now)==ufs.findSet(to) || vis[to]==2)\tcontinue;\n\t\t\tif(!vis[to])\n\t\t\t{\n\t\t\t\tvis[to]=2;\n\t\t\t\tpre[to]=now;\n\t\t\t\tif(!match[to])\n\t\t\t\t{\n\t\t\t\t\tint lst=0;\n\t\t\t\t\tfor(int x=to;x;x=lst)\tlst=match[pre[x]],match[x]=pre[x],match[pre[x]]=x;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvis[match[to]]=1;\n\t\t\t\tQ.push(match[to]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint x=LCA(now,to);\n\t\t\t\tBlossom(now,to,x);\n\t\t\t\tBlossom(to,now,x);\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T-->0)\n\t{\n\t\tmemset(G,0,sizeof G);\n\t\tmemset(match,0,sizeof match);\n\t\tmemset(bel,0,sizeof bel);\n\t\tmemset(clc,0,sizeof clc);\n\t\tflw=0;\n\t\tscanf(\"%d %d %d\",&n,&m,&e);\n\t\tfor(int i=1;i<=e;++i)\n\t\t{\n\t\t\tint v,u;\n\t\t\tscanf(\"%d %d\",&v,&u);\n\t\t\tG[v+m+m+m].push_back(u);\n\t\t\tG[v+m+m+m].push_back(u+m);\n\t\t\tG[v+m+m+m].push_back(u+m+m);\n\t\t\tG[u].push_back(v+m+m+m);\n\t\t\tG[u+m].push_back(v+m+m+m);\n\t\t\tG[u+m+m].push_back(v+m+m+m);\n\t\t}\n\t\tfor(int i=1;i<=m;++i)\n\t\t{\n\t\t\tG[i].push_back(i+m);\n\t\t\tG[i+m].push_back(i+m+m);\n\t\t\tG[i].push_back(i+m+m);\n\t\t\tG[i+m].push_back(i);\n\t\t\tG[i+m+m].push_back(i+m);\n\t\t\tG[i+m+m].push_back(i);\n\t\t}\n\t\tint ans=0;\n\t\tfor(int i=3*m+n;i;--i)\tans+=(!match[i] && Aug(i));\n\t\tprintf(\"%d\\n\",ans-n);\n\t\tfor(int i=3*m+1;i<=3*m+n;++i)\tprintf(\"%d \",(match[i]-1)%m+1);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1610530941,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4258 \u3010[WC2016]\u6311\u6218NPC\u3011"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\n\n\u5148\u58f0\u660e\u4e00\u4e0b\uff1a\u6b64\u9898\u4e0d\u662f NPC\u3002\u6bd5\u7adf\u51fa\u9898\u4eba\u8fd8\u4e0d\u81f3\u4e8e\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u7206\u5207 NPC \u95ee\u9898\u3002\n\n\u4e00\u79cd\u4e0d\u6b63\u786e\u7684\u6700\u521d\u60f3\u6cd5\uff1a\u628a\u6bcf\u4e2a\u7b50\u62c6\u6210 $3$ \u4e2a\u70b9 $u_i,u_i+m,u_i+2 \\times m$\uff0c\u6240\u6709 $v_i$ \u5411 $u_i$ \u62c6\u540e\u7684\u4e09\u4e2a\u70b9\u8fde\u8fb9\uff0c\u8dd1\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u3002\n\n```\nhack:\nInput:\n1\n2 2 3\n1 1\n2 1\n2 2\nOutput:\n2\n1 2\n```\n\n\u5728\u8fd9\u91cc\u53ef\u80fd\u4f1a\u56e0\u4e3a\u8fb9\u7684\u904d\u5386\u987a\u5e8f\u95ee\u9898\u800c\u5148\u8dd1\u8fb9 $(2,1)$ \u800c\u5bfc\u81f4\u7b54\u6848\u53d8\u6210 $1$\u3002\n\n\u90a3\u4e48\u63a5\u7740\u5c31\u662f\u8fd9\u9053\u9898\u5947\u7279\u7684\u5efa\u56fe\u65b9\u5f0f\u4e86\u3002\u4e0d\u59a8\u5728\u4e0a\u8ff0\u7684\u5efa\u56fe\u65b9\u5f0f\u4e3a\u57fa\u7840\u7684\u60c5\u51b5\u4e0b\u628a\u6240\u6709\u7684 $u,u+m,u+2 \\times m$ \u4e24\u4e24\u4e4b\u95f4\u8fde\u8fb9\uff0c\u7136\u540e\u8dd1\u4e00\u822c\u56fe\u7684\u6700\u5927\u5339\u914d\uff08\u6539\u4e3a\u4e00\u822c\u56fe\u7684\u539f\u56e0\uff1a\u524d\u9762\u4e09\u4e2a\u70b9\u7684\u4e24\u4e24\u8fde\u8fb9\u4f1a\u5f62\u6210\u5947\u73af\uff09\uff0c\u6700\u540e\u7b54\u6848\u5c31\u662f\u6700\u5927\u5339\u914d\u6570 $-n$\u3002\n\n\u6765\u8bc1\u660e\u4e00\u4e0b\u8fd9\u4e2a\u7ed3\u8bba\u3002\n\n\u5bf9\u6240\u6709\u7684 $u_i,u_i+m,u_i+2\\times m$ \u5206 $4$ \u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n1. \u5176\u4e2d\u6709 $0$ \u4e2a\u5339\u914d\u70b9\u3002\n\n\t\u672c\u6765\u7684\u8d21\u732e\u5e94\u8be5\u662f $1$\u3002\u5185\u90e8\u70b9\u5fc5\u7136\u6070\u597d\u6709\u4e00\u7ec4\u5339\u914d\u3002\u51cf\u53bb\u5339\u914d\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5373\u7b49\u4e8e\u51cf\u53bb $0$\uff0c\u6240\u4ee5\u8d21\u732e\u8fd8\u662f $1$\u3002\n2. \u6709 $1$ \u4e2a\u3002\n\n\t\u672c\u6765\u7684\u8d21\u732e\u5e94\u8be5\u662f $1$\u3002\u4f1a\u53d1\u73b0\u5185\u90e8\u5fc5\u7136\u6709\u4e00\u7ec4\u5339\u914d\uff0c\u548c\u90a3\u4e00\u4e2a\u5339\u914d\u70b9\u6240\u5904\u7684\u5339\u914d\u4e00\u52a0\uff0c\u8d21\u732e\u4e3a $2$\u3002\u6240\u4ee5\u591a\u51fa\u6765 $1$\uff0c\u521a\u597d\u662f\u51cf\u53bb\u5339\u914d\u70b9\u4e2a\u6570\u3002\n3. \u6709 $2$ \u4e2a\u3002\n\n\t\u672c\u6765\u7684\u8d21\u732e\u5e94\u8be5\u662f $0$\u3002\u6ce8\u610f\u5230\u4e09\u4e2a\u70b9\u4e0d\u53ef\u80fd\u518d\u51fa\u73b0\u5185\u90e8\u5339\u914d\u7684\u60c5\u51b5\u4e86\uff0c\u6240\u4ee5\u521a\u597d\u51cf\u53bb\u5339\u914d\u70b9\u4e2a\u6570\u3002\n4. \u6709 $3$ \u4e2a\u3002\n\n\t\u548c $2$ \u4e2a\u7684\u60c5\u51b5\u540c\u7406\u3002\n    \n\u6240\u4ee5\u5bf9\u4e8e\u4efb\u610f\u4e00\u7ec4\u201c\u6bcf\u4e2a\u7403\u90fd\u653e\u5728\u4e00\u4e2a\u6846\u4e2d\u201d\u7684\u5339\u914d\uff0c\u62ff\u5339\u914d\u6570 $-n$ \u4e00\u5b9a\u7b49\u4e8e\u7b54\u6848\u3002\u4e3a\u4e86\u4f7f\u7b54\u6848\u6700\u5927\uff0c\u5f53\u7136\u662f\u53d6\u6700\u5927\u5339\u914d\u4e86\u3002\u4e14\u6c42\u6700\u5927\u5339\u914d\u65f6\u6211\u4eec\u4f18\u5148\u5bf9\u7403\u8fdb\u884c\u589e\u5e7f\uff0c\u7136\u540e\u518d\u5bf9\u6846\u5b50\u6240\u8868\u793a\u7684\u70b9\u8fdb\u884c\u589e\u5e7f\u3002\u8fd9\u6837\u4fbf\u53ef\u4fdd\u8bc1\u201c\u6bcf\u4e2a\u7403\u90fd\u653e\u5728\u4e00\u4e2a\u6846\u4e2d\u201d\u3002\n\n### \u4ee3\u7801\n\n\u7ed9\u4e2a\u8fd9\u9053\u9898\u7684\u91cd\u70b9\u90e8\u5206\uff08\u5efa\u56fe\u7684\u90e8\u5206\uff09\uff1a\n\n```cpp\n//\u8f93\u5165+\u5efa\u8fb9\nscanf(\"%d%d%d\", &n, &m, &e);\nfor(int i = 1; i <= m; i++){\n\tAdd(i + n, i + m + n), Add(i + m + n, i + n);\n   Add(i + n, i + 2 * m + n), Add(i + 2 * m + n, i + n);\n   Add(i + m + n, i + 2 * m + n), Add(i + 2 * m + n, i + m + n);\n}\nfor(int i = 1; i <= e; i++){\n\tint v, u; scanf(\"%d%d\", &v, &u);\n\tAdd(v, u + n)\uff0c Add(v, u + m + n), Add(v, u + 2 * m + n);\n\tAdd(u + n, v), Add(u + m + n, v), Add(u + 2 * m + n, v);\n}\n\n//\u4e4b\u540e\u8dd1\u4e00\u822c\u56fe\u7684\u6700\u5927\u5339\u914d\n```",
        "postTime": 1684934259,
        "uid": 341946,
        "name": "zac2010",
        "ccfLevel": 7,
        "title": "P4258 [WC2016]\u6311\u6218NPC \u9898\u89e3"
    },
    {
        "content": "## P4258 [WC2016]\u6311\u6218NPC\n\n~~\u5c0f I \u6d45\u7b11\uff1a\u201c\u6240\u4ee5\uff0c\u7b49\u6211\u9886\u56fe\u7075\u5956\u5427\uff01\u201d~~\n\n\u6bcf\u4e2a\u7b50\u80fd\u88c5\u4e09\u4e2a\uff1f\u90a3\u6211\u628a\u5b83\u62c6\u6210\u4e09\u4e2a\u7b50\uff0c\u6bcf\u4e2a\u7b50\u5c31\u53ea\u80fd\u88c5\u4e00\u4e2a\u4e86\u3002\n\u7403\u548c\u7b50\u7684\u5bf9\u5e94\u5173\u7cfb\u53ef\u4ee5\u62bd\u8c61\u4e3a\u8fb9\u3002\u628a\u7403\u653e\u8fdb\u7b50\u53ef\u4ee5\u770b\u6210\u4e24\u4e24\u5339\u914d\u3002\n\n\u4f46\u662f\u73b0\u5728\u8981\u8003\u8651\u7684\u662f\u600e\u6837\u505a\u5230\u6ee1\u8db3\u201c\u4e00\u4e2a\u7b50\u5b50(\u8fd9\u91cc\u6307\u7684\u662f\u9898\u9762\u91cc\u7684\u7b50)\u5185\u6709\u4e0d\u8d85\u8fc7 $1$ \u4e2a\u7403\u201d\u8fd9\u4e2a\u9650\u5236\u6761\u4ef6\u3002\n\n\u89c2\u5bdf\u62c6\u51fa\u7684\u70b9\u6211\u4eec\u53d1\u73b0\uff0c**\u5bf9\u4e8e\u4e00\u4e2a\u4e09\u4e2a\u70b9\u7684\u5947\u73af\uff0c\u8981\u4e48\u5c31\u6ca1\u6709\u5339\u914d\uff0c\u8981\u4e48\u53ea\u6709\u4e00\u4e2a\u5339\u914d\uff0c\u53e6\u5916\u5355\u51fa\u4e00\u4e2a\u70b9\u5411\u5916\u5339\u914d\u3002**\n\n\u6240\u4ee5\u6211\u4eec\u628a\u4e00\u4e2a\u7b50\u62c6\u51fa\u7684\u4e09\u4e2a\u70b9\u4e92\u76f8\u8fde\u8fb9\uff0c\u7b97\u51fa\u6700\u5927\u5339\u914d\u6570\u540e $-n$ \u5c31\u884c\u3002\n\n\u7136\u540e\u5c31\u662f\u5728\u4e00\u4e2a\u6709 $n+3m$ \u4e2a\u70b9\u7684\u56fe\u4e0a\u8dd1\u5e26\u82b1\u6811\u3002\n\n\u62c6\u70b9\u65b9\u6cd5\u56e0\u4eba\u800c\u5f02\uff0c\u6211\u8fd9\u91cc\u9009\u62e9\u4e86 $+m$ \u7684\u500d\u6570\n\n**\u591a\u6d4b\u8bb0\u5f97\u6e05\u7a7a\u9700\u8981\u6e05\u7a7a\u7684\u6570\u7ec4\uff01\uff01\uff01**\n\ncode\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e6+10;\n#define rg register\ninline int read()\n{\n\trg int x=0,w=1;\n\trg char ch=getchar();\n\tif(ch=='-') w=-1,ch=getchar();\n\twhile((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n\twhile(ch<='9'&&ch>='0') x=(x<<3)+(x<<1)+(ch-'0'),ch=getchar();\n\treturn x*w;\n}\nint head[N],ver[N],nxt[N],tot;\nvoid add(int x,int y)\n{\n\tver[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\nint fa[N];\nint find(int x)\n{\n\tint x_root=x;\n\twhile(fa[x_root]!=x_root) x_root=fa[x_root];\n\twhile(x!=x_root)\n\t{\n\t\tint tmp=fa[x];\n\t\tfa[x]=x_root; x=tmp;\n\t}\n\treturn x_root;\n}\nint match[N],pre[N];\nint vis[N],dfn[N],tim=0;\nint n,m,e,sum=0;\n\nint lca(int x,int y)\n{\n\t++tim;\n\tx=find(x);y=find(y);\n\twhile(tim!=dfn[x])\n\t{\n\t\tdfn[x]=tim;\n\t\tx=find(pre[match[x]]);\n\t\tif(y) swap(x,y);\n\t}\n\treturn x;\n}\n\nqueue<int> q;\nvoid blossom(int x,int y,int w)\n{\n\twhile(find(x)!=w)\n\t{\n\t\tpre[x]=y; y=match[x];\n\t\tif(vis[y]==2) vis[y]=1,q.push(y);\n\t\tif(find(x)==x) fa[x]=w;\n\t\tif(find(y)==y) fa[y]=w;\n\t\tx=pre[y];\n\t}\n}\n\nbool solve(int s)\n{\n\tfor(rg int i=1;i<=sum;++i) fa[i]=i,vis[i]=pre[i]=0;\n\twhile(!q.empty()) q.pop();\n\n\tq.push(s);\n\tvis[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[x];i;i=nxt[i])\n\t\t{\n\t\t\tint y=ver[i];\n\n\t\t\tif(find(x)==find(y)||vis[y]==2) continue;\n\t\t\tif(!vis[y])\n\t\t\t{\n\t\t\t\tvis[y]=2; pre[y]=x;\n\t\t\t\tif(!match[y])\n\t\t\t\t{\n\t\t\t\t\tfor(int k=y,p;k;k=p)\n\t\t\t\t\t\tp=match[pre[k]],match[k]=pre[k],match[pre[k]]=k;\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tvis[match[y]]=1,q.push(match[y]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint w=lca(x,y);\n\t\t\t\tblossom(x,y,w);\n\t\t\t\tblossom(y,x,w);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\ninline void add_(int x,int y)\n{\n\tadd(x,y);add(y,x);\n}\nint main()\n{\n\tint T=read();\n\twhile(T--)\n\t{\n\t\tmemset(head,0,sizeof head);\n\t\tmemset(match,0,sizeof match);\n\t\tmemset(pre,0,sizeof pre);\n\t\tmemset(vis,0,sizeof vis);\n\t\tn=read(),m=read(),e=read();\n\t\t/*1-n\u4e3a\u5404\u4e2a\u7403\u4ee3\u8868\u7684\u70b9\u7684\u7f16\u53f7,n-n+3m\u662f\u7b50\u4ee3\u8868\u70b9\u7684\u7f16\u53f7*/\n\t\tsum=n+3*m;\n\t\tfor(int i=1;i<=e;i++)\n\t\t{\n\t\t\tint x,y;\n\t\t\tx=read(),y=read();\n\t\t\tadd_(x,n+y);\n\t\t\tadd_(x,n+m+y);\n\t\t\tadd_(x,n+(m<<1)+y);\n\t\t}\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tadd_(n+i,n+m+i);\n\t\t\tadd_(n+m+i,n+(m<<1)+i);\n\t\t\tadd_(n+i,n+(m<<1)+i);\n\t\t}\n\t\tint res=0;\n\t\tfor(int i=1;i<=sum;i++)\n\t\t\tif(!match[i]) res+=solve(i);\n\t\tprintf(\"%d\\n\",res-n);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tprintf(\"%d \",(match[i]-n-1)%m+1);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1611991245,
        "uid": 278259,
        "name": "RemiliaScarlet\u25ce",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4258 \u3010[WC2016]\u6311\u6218NPC\u3011"
    },
    {
        "content": "```cpp\n#include<stdio.h>\n#include<string.h>\nint h[610],to[200010],nex[200010],q[200010],fa[610],type[610],pre[610],match[610],tm[610],M,n,head,tail;\nvoid add(int a,int b){\n    M++;\n    to[M]=b;\n    nex[M]=h[a];\n    h[a]=M;\n}\nvoid insert(int x,int y){\n    add(x,y);\n    add(y,x);\n}\nvoid swap(int&a,int&b){a^=b^=a^=b;}\nint get(int x){return(fa[x]==x)?x:(fa[x]=get(fa[x]));}\nint lca(int x,int y){\n    M++;\n    while(1){\n        if(x){\n            x=get(x);\n            if(tm[x]==M)return x;\n            tm[x]=M;\n            x=pre[match[x]];\n        }\n        swap(x,y);\n    }\n}\nvoid blossom(int x,int y,int p){\n    while(get(x)!=p){\n        pre[x]=y;\n        y=match[x];\n        if(type[y]==2){\n            type[y]=1;\n            tail++;\n            q[tail]=y;\n        }\n        if(fa[x]==x)fa[x]=p;\n        if(fa[y]==y)fa[y]=p;\n        x=pre[y];\n    }\n}\nint bfs(int x){\n    int i,now,las;\n    for(i=1;i<=n;i++)fa[i]=i;\n    memset(pre,0,sizeof(pre));\n    memset(type,0,sizeof(type));\n    head=tail=1;\n    q[1]=x;\n    type[x]=1;\n    while(head<=tail){\n        x=q[head];\n        head++;\n        for(i=h[x];i;i=nex[i]){\n            if(type[to[i]]==2||get(to[i])==get(x))continue;\n            if(type[to[i]]==0){\n                type[to[i]]=2;\n                pre[to[i]]=x;\n                if(match[to[i]]==0){\n                    now=to[i];\n                    while(now){\n                        las=match[pre[now]];\n                        match[now]=pre[now];\n                        match[pre[now]]=now;\n                        now=las;\n                    }\n                    return 1;\n                }\n                type[match[to[i]]]=1;\n                tail++;\n                q[tail]=match[to[i]];\n            }else{\n                now=lca(x,to[i]);\n                blossom(x,to[i],now);\n                blossom(to[i],x,now);\n            }\n        }\n    }\n    return 0;\n}\nint main(){\n    int T,n,m,e,i,x,y;\n    scanf(\"%d\",&T);\n    while(T--){\n        memset(h,0,sizeof(h));\n        memset(match,0,sizeof(match));\n        memset(tm,0,sizeof(tm));\n        M=0;\n        scanf(\"%d%d%d\",&n,&m,&e);\n        for(i=1;i<=m;i++){\n            insert(i*3-2,i*3-1);\n            insert(i*3-1,i*3);\n            insert(i*3,i*3-2);\n        }\n        while(e--){\n            scanf(\"%d%d\",&x,&y);\n            insert(x+m*3,y*3-2);\n            insert(x+m*3,y*3-1);\n            insert(x+m*3,y*3);\n        }\n        ::n=m*3+n;\n        x=M=0;\n        for(i=::n;i>0;i--){\n            if(match[i]==0)x+=bfs(i);\n        }\n        printf(\"%d\\n\",x-n);\n        for(i=3*m+1;i<=::n;i++)printf(\"%d \",(match[i]-1)/3+1);\n    }\n}\n```",
        "postTime": 1538871270,
        "uid": 104320,
        "name": "\u03b6\u0e31\u0361\u273f\u8c22\u4ea6\u51e1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4258 \u3010[WC2016]\u6311\u6218NPC\u3011"
    }
]