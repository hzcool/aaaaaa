[
    {
        "content": "\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u4e00\u4e2a$O(n\\log_2n)$\u7684\u7b97\u6cd5\n\n\u867d\u7136\u5bf9\u4e8e\u8fd9\u9053\u9898$O(n^2\\log_2n)$\u66b4\u529b\u679a\u4e3e\u6839\u5df2\u7ecf\u53ef\u4ee5$AC$\u4e86\uff0c\u4f46**\u4f18\u5316\u662f\u65e0\u6b62\u5883\u7684**\n\n\u9996\u5148\u53ef\u4ee5\u60f3\u51fa\u8fd9\u9053\u9898\u5bf9\u4e8e\u4e00\u4e2a\u786e\u5b9a\u7684\u6839\u7684$dp$\n\n\u518d\u4ee5\u4efb\u610f\u70b9$root$\u4e3a\u4e3b\u6839\u524d\u63d0\u4e0b\n\n\u6211\u4eec\u8bbe$f_{i}$\u8868\u793a\u4ee5$i$\u4e3a\u6839**\u4e0d\u8ba1\u7b97\u6839\u88ab\u4f20\u9012\u5230\u6d88\u606f\u65f6\u95f4,\u628a\u6d88\u606f\u4f20\u5230$i$\u4e3a\u6839\u7684\u5b50\u6811**\u7684\u6700\u77ed\u65f6\u95f4\n\n\u5f53$i$\u7684\u5b50\u6811\u5747\u88ab\u8ba1\u7b97\u5b8c\u6bd5\u65f6\n\n$\\displaystyle{f_i=\\max_{j\\in son_i}}\\{f_j+order_j\\}$\n\n\u5176\u4e2d$order_j$\u8868\u793a$j$\u662f$i$\u7684\u5b69\u5b50\u4e2d\u7b2c$order_j$\u4e2a\u9009\u7684\uff0c\u4e5f\u5c31\u662f\u4ed6\u5728$i$\u6536\u5230\u6d88\u606f\u540e\u7b2c$order_j$\u4e2a\u65f6\u95f4\u6536\u5230\u6d88\u606f\u7684\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u8d2a\u5fc3\uff0c\u6211\u4eec\u8ba9$f_j$\u503c\u5927\u7684\u5148\u4f20\n\n\u5355\u6b21\u590d\u6742\u5ea6$O(n\\log_2n)$\n\n\u4f46\u8fd9\u6837\u505a\u9700\u8981\u679a\u4e3e\u6839\uff0c\u6700\u7ec8\u590d\u6742\u5ea6$O(n^2\\log_2n)$\n\n\u74f6\u9888\u5728\u4e8e\u4ec0\u4e48,\u4ed4\u7ec6\u601d\u8003\u6211\u4eec\u4f1a\u53d1\u73b0\u5176\u5b9e\u662f**\u6211\u4eec\u786e\u5b9a\u4e86\u5411\u201c\u4e0b\u201d\u4f20\u7684\u987a\u5e8f\uff0c\u800c\u56e0\u6b64\u5f88\u591a\u5b50\u6811\u7684\u4fe1\u606f\u5728\u4e0d\u540c\u7684\u6839\u4e0b\u5b9e\u9645\u4e0a\u662f\u4e00\u6837\u7684**\n\n\u4ec0\u4e48\u610f\u601d\uff0c\u6211\u4eec\u770b\u4e00\u4e0b\u8fd9\u5e45\u56fe\n\n![graph.png](https://i.loli.net/2019/08/22/uhWxZiXpgz7VFeD.png)\n\n\u5728$fa$,$i$,$brother1$,$brother2$\u4f5c\u6839\u7684\u65f6\u5019,\u4ee5$j$\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5f62\u6001\u6ca1\u6709\u4e00\u70b9\u6539\u53d8\n\n\u6211\u4eec\u6709\u6ca1\u6709\u529e\u6cd5\u4e00\u6b21\u8ba1\u7b97\u8fd9\u4e9b\u4fe1\u606f\u5462\n\n\u6709\u7684\uff0c\u90a3\u5c31\u662f\u6240\u8c13\u7684**\u4e8c\u6b21\u626b\u63cf\u4e0e\u6362\u6839\u6cd5**\n\n\u5728\u674e\u715c\u4e1c\u7684\u4e66\u91cc\u4ecb\u7ecd\u4e86\u8fd9\u4e2a\u7b97\u6cd5\u5e76\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u9898\uff0c\u4f46\u8fd9\u4e2a\u4f8b\u9898\u4f1a\u66f4\u4e3a\u590d\u6742\u4e00\u4e9b\n\n\u6211\u5148\u91cd\u590d\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\u6d41\u7a0b\n- \u4e00\u6b21**\u6811\u5f62dp**,\u6c42\u51fa\u6bcf\u4e2a\u70b9\u4ee5$root$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u4fe1\u606f$down$\n- \u4e00\u6b21**DFS**\u6c42\u51fa\u6bcf\u4e2a\u70b9\u4ee5$root$\u4e3a\u6839\u6765\u81ea\u7236\u4eb2\u7684\u4fe1\u606f$up$,\u540c\u65f6\u5408\u5e76$up$\u548c$down$\n\n\u6211\u4eec\u7528\u8fd9\u9053\u9898\u6765\u770b\u5982\u4f55\u5b9e\u73b0\n\n\u5bf9\u4e8e$down$\u90e8\u5206\u662f\u7c7b\u4f3c\u7684\n\n\u8bbe$down_{i}$\u8868\u793a**\u4e0d\u8ba1\u7b97\u6839\u88ab\u4f20\u9012\u5230\u6d88\u606f\u65f6\u95f4,\u628a\u6d88\u606f\u4f20\u5230$i$\u4e3a\u6839\u7684\u5b50\u6811**\u7684\u6700\u77ed\u65f6\u95f4\n\n\u6211\u4eec\u5728\u8ba1\u7b97\u5b8c\u4e86$i$\u7684\u513f\u5b50$j$\u540e\u6765\u66f4\u65b0$i$\n\n$\\displaystyle{down_i=\\max_{j\\in son_i}}\\{down_j+order_j\\}$\n\n$order$\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u6392\u5e8f\u5f97\u5230\n\n```cpp\ninline void tree_dp(re int x){\n\tre int i,y,res=0;re vector<int> son;\n\tfor(i=h[x];i;i=e[i].next){\n\t\ty=e[i].to;\n\t\ttree_dp(y);\n\t\tson.push_back(dpson[y]);\n\t}\n\tsort(son.begin(),son.end(),cmp);\n\tfor(i=0;i<(int)son.size();++i)res=max(res,son[i]+i+1);\n\tdpson[x]=res;\n}\n```\n\n\u800c\u5bf9\u4e8e$up$\u90e8\u5206\n\n\u8bbe$up_{i}$\u8868\u793a**\u4e0d\u8ba1\u7b97\u6839\u88ab\u4f20\u9012\u5230\u6d88\u606f\u65f6\u95f4,\u628a\u6d88\u606f\u4f20\u5230\u9664\u4e86$i$\u4e3a\u6839\u7684\u5b50\u6811\u7684\u8282\u70b9**\u7684\u6700\u77ed\u65f6\u95f4\n\n\u53ef\u80fd\u5f88\u96be\u7406\u89e3\uff0c\u6211\u4eec\u7528\u4e00\u5f20\u56fe\u6765\u5c55\u793a\n\n![upanddown.png](https://i.loli.net/2019/08/22/GOwKhgEe9qmdTya.png)\n\n\u53ef\u4ee5\u5f62\u8c61\u7684\u7406\u89e3\u4e3a$down$\u5bf9\u5e94\u7684\u90e8\u5206\u662f\u5728\u6709\u6839\u60c5\u51b5\u4e0b\u5411\u201c\u4e0b\u201d\u7684\u5f88\u591a\u652f\u5b50\u6811,\u800c$up$\u5bf9\u5e94\u7684\u90e8\u5206\u662f\u5411\u201c\u4e0a\u201d\u7684\u90a3\u4e00\u652f\n\n\u6211\u4eec\u5728\u8ba1\u7b97\u5b8c\u4e86$j$\u7684\u7236\u4eb2$i$\u540e\u6765\u66f4\u65b0$j$\n\n$\\displaystyle{up_j=\\max\\{up_i+order'_i~,\\max_{k\\in son_i\\vee k\\ne j}}~\\{down_k~+~order'_k\\}~\\}$\n\n\u7528\u8fd9\u5e45\u56fe\u7406\u89e3\u4e00\u4e0b,$up_j$\u4fdd\u5b58\u7684\u662f\u6765\u81ea\u7236\u4eb2$i$\u7684\u4e00\u652f,\u5176\u4e2d\u5305\u542b\u4e86\u4ed6\u7236\u4eb2\u7684\u7236\u4eb2\u90a3\u4e00\u652f$up_j$,\u4e5f\u5305\u542b\u4e86$i$\u7684\u7236\u4eb2\u9664\u4e86$i$\u7684\u5176\u4ed6\u513f\u5b50\u652f\n\n![upandup.png](https://i.loli.net/2019/08/22/RVHoL4eAlr9PSz3.png)\n\n\u6ce8\u610f\u4e00\u4e0b:\u4e3a\u4e86\u5904\u7406\u65b9\u4fbf\uff0c\u6211\u4eec\u5e76\u4e0d\u4e00\u5f00\u59cb\u663e\u5f0f\u53bb\u6389$i$\u7684\u513f\u5b50$j$,\u800c\u662f\u5427$down_k$\u548c$up_i$\u52a0\u8fdb\u53bb\u6392\u5e8f,\u5728\u9700\u8981\u6c42\u51fa$up_j$\u65f6\u6211\u4eec\u4e8c\u5206\u67e5\u627e$j$\u7684\u4f4d\u7f6e,\u5e76\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u540e\u9762\u7684\u4f4d\u7f6e\u7684$order$\u503c\u51cf\u4e00\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u5047\u8bbe\u4e2d\uff0c\u9009$j$\u5b9e\u9645\u4e0a\u662f\u82b1\u4e86\u4e00\u4e2a\u65f6\u95f4\u7684\uff0c\u4f46\u5b9e\u9645\u5e76\u6ca1\u6709.\u5b9e\u9645\u64cd\u4f5c\u4e0a\u53ef\u4ee5\u5229\u7528\u524d\u7f00\u548c\u540e\u7f00$\\max$\u6765\u5b9e\u73b0\n\n```\ninline void change_root(re int x){\n\tre int i,y,pos;re vector<int> son;\n\tfor(i=h[x];i;i=e[i].next){y=e[i].to;son.push_back(dpson[y]);}if(fa[x])son.push_back(dpfa[x]);\n\tsort(son.begin(),son.end(),cmp);\n\tfor(i=0;i<(int)son.size();++i)t[i]=son[i]+i+1;\n\t*maxl=t[0];for(i=1;i<(int)son.size();++i)maxl[i]=max(maxl[i-1],t[i]);\n\tmaxr[son.size()-1]=t[son.size()-1];for(i=son.size()-2;i>=0;--i)maxr[i]=max(maxr[i+1],t[i]);\n\treverse(son.begin(),son.end());\n\tfor(i=h[x];i;i=e[i].next){\n\t\ty=e[i].to;\n\t\tpos=lower_bound(son.begin(),son.end(),dpson[y])-son.begin();pos=son.size()-pos-1;\n\t\tif(!pos)dpfa[y]=max(0,maxr[1]-1);\n\t\telse if(pos==(int)son.size()-1)dpfa[y]=max(0,maxl[pos-1]);\n\t\tdpfa[y]=max(maxl[pos-1],maxr[pos+1]-1); \n\t}\n\tdp[x]=maxl[son.size()-1];for(i=h[x];i;i=e[i].next){y=e[i].to;change_root(y);} \n}\n```\n\n\n\n\u5176\u4ed6\u7ec6\u8282\u6bd4\u5982\u8fb9\u754c\u4ec0\u4e48\u7684\u9700\u8981\u505a\u4e86\u624d\u77e5\u9053\n\n```cpp\n#include<bits/stdc++.h>\n#define N 200005\n#define re register\n#define INF 0x3f3f3f3f\nusing namespace std;\nstruct read{\n\tchar buf[1<<25],*opt;\n\tread():opt(buf){buf[fread(buf,1,sizeof buf,stdin)]=0;}\n\ttemplate<typename _int>\n\toperator _int(){\n\t\t_int res=0,flag=1;\n\t\twhile(*opt<48&&*opt!='-')++opt;\n\t\tif(*opt=='-'){flag=-1;++opt;}\n\t\twhile(*opt>32)res=(res<<1)+(res<<3)+(*opt++)-48;\n\t\treturn res*flag;\n\t}\n}it;\ninline char cmp(re int x,re int y){return y<x;}\nstruct Edge{int to,next;}e[N<<1];\nint n,cnt,h[N],t[N],dpson[N],dpfa[N],maxl[N],maxr[N],fa[N],dp[N],ans=INF,Ans[N];\ninline void AddEdge(re int x,re int y){e[++cnt]=(Edge){y,h[x]};h[x]=cnt;}\ninline void tree_dp(re int x){\n\tre int i,y,res=0;re vector<int> son;\n\tfor(i=h[x];i;i=e[i].next){\n\t\ty=e[i].to;\n\t\ttree_dp(y);\n\t\tson.push_back(dpson[y]);\n\t}\n\tsort(son.begin(),son.end(),cmp);\n\tfor(i=0;i<(int)son.size();++i)res=max(res,son[i]+i+1);\n\tdpson[x]=res;\n}\ninline void change_root(re int x){\n\tre int i,y,pos;re vector<int> son;\n\tfor(i=h[x];i;i=e[i].next){y=e[i].to;son.push_back(dpson[y]);}if(fa[x])son.push_back(dpfa[x]);\n\tsort(son.begin(),son.end(),cmp);\n\tfor(i=0;i<(int)son.size();++i)t[i]=son[i]+i+1;\n\t*maxl=t[0];for(i=1;i<(int)son.size();++i)maxl[i]=max(maxl[i-1],t[i]);\n\tmaxr[son.size()-1]=t[son.size()-1];for(i=son.size()-2;i>=0;--i)maxr[i]=max(maxr[i+1],t[i]);\n\treverse(son.begin(),son.end());\n\tfor(i=h[x];i;i=e[i].next){\n\t\ty=e[i].to;\n\t\tpos=lower_bound(son.begin(),son.end(),dpson[y])-son.begin();pos=son.size()-pos-1;\n\t\tif(!pos)dpfa[y]=max(0,maxr[1]-1);\n\t\telse if(pos==(int)son.size()-1)dpfa[y]=max(0,maxl[pos-1]);\n\t\telse dpfa[y]=max(maxl[pos-1],maxr[pos+1]-1); \n\t}\n\tdp[x]=maxl[son.size()-1];for(i=h[x];i;i=e[i].next){y=e[i].to;change_root(y);} \n}\nint main(void){\n\tn=it;\n\tre int i;\n\tfor(i=2;i<=n;++i){fa[i]=it;AddEdge(fa[i],i);}\n\ttree_dp(1);change_root(1);\n\tfor(i=1;i<=n;++i)if(dp[i]<ans){ans=dp[i];Ans[*Ans=1]=i;}else if(ans==dp[i])Ans[++*Ans]=i;\n\tprintf(\"%d\\n\",ans+1);\n\tfor(i=1;i<=*Ans;++i)printf(\"%d \",Ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1566469056,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u7bc7\u590d\u6742\u5ea6\u4f18\u79c0\u7684\u505a\u6cd5\uff0c\u968f\u624b\u4e00\u4ea4 rank3 \uff0c\u5e76\u4e14\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\u6613\u61c2\u3002\n\n---\n\n\u9898\u76ee\uff1a[\u6d88\u606f\u4f20\u9012](https://www.luogu.com.cn/problem/P2018) \u3002\n\n\u9996\u5148\u770b\u5230\u9898\u76ee\u4e0d\u96be\u60f3\u5230\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u6839\u8fdb\u884cDP\uff0c\u65b9\u7a0b\u5982\u4e0b\n\n$$ f_i = \\max _{j \\in son_i} {\\{f_j + order_j\\}} $$ \n\n\n\u5176\u4e2d $order $ \u8868\u793a\u9009\u62e9\u7684\u987a\u5e8f\u4e3a $1,2,3,4......$ \u3002\n\n\u5728\u6b64\u76f4\u63a5\u8d2a\u5fc3\u8ba9\u6700\u5927\u7684 $f_j$ \u5339\u914d\u6700\u5c0f\u7684 $order_j$ \u5373\u53ef\u3002\n\n\u8fd9\u6837\u76f4\u63a5\u505a\u6811\u5f62DP\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2 \\log  \\ n ) $ \u7684\uff0c\u4f46\u5e76\u4e0d\u662f\u672c\u9898\u7684\u6700\u4f18\u89e3\u3002\uff08\u5f53\u7136\u5e94\u4e3a\u672c\u9898\u7684 $n \\leq 1000$\uff0c\u8fd9\u6837\u7684\u7b97\u6cd5\u53ef\u4ee5\u901a\u8fc7\uff09\u3002\n\n---\n\n\u8003\u8651\u5982\u4f55\u4f18\u5316\uff1a\n\n\u6211\u4eec\u82e5\u4ed4\u7ec6\u601d\u8003\u4e0a\u9762\u7684DP\u8fc7\u7a0b\u4e0d\u96be\u53d1\u73b0\uff1a\u82e5\u5bf9\u4e8e $a \\not= b$ \u6709 $a$ \u505a\u6839\u548c $b$ \u505a\u6839\u65f6\u7684 $son_x $ \u76f8\u540c \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u62ff\u7b2c\u4e00\u6b21\u8ba1\u7b97\u51fa\u6765\u7684 $f_x$ \u76f4\u63a5\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u51cf\u5c11\u8bb8\u591a\u8fd0\u7b97\u91cf\u3002\n\n\u5177\u4f53\u5316\u4e0a\u9762\u7684\u8fc7\u7a0b\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u76f8\u540c\u7684 $son_x$ \u4ed6\u4eec\u90fd\u4f1a\u5bf9\u5e94\u76f8\u540c\u7684 $father_x$ \uff0c\u53ef\u4ee5\u7528 $dp[x][father_x]$ \u7eaa\u5f55\u7b54\u6848\uff0c \u8fd9\u6837\u8bb0\u5fc6\u5316\u641c\u7d22\u5c31\u5b8c\u6210\u4e86\u3002\n\n\u4f46\u662f\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0d\u591f\u4f18\uff0c\u6211\u4eec\u628a $dp[x][father_x] $ \u7528 $father_x$ \u8fde\u5411 $x$ \u7684\u5355\u5411\u8fb9\u4ee3\u66ff\uff0c\u8fd9\u6837\u7a7a\u95f4\u53ea\u8981\u5f00 $O(n)$ \u5373\u53ef\u3002\n\n\u6765**\u5927\u81f4**\u7b97\u4e00\u4e0b\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n\u7b2c\u4e00\u6b21DP\u65f6\u53ef\u4ee5\u628a $n-1$ \u6761\u8fb9\u7684DP\u503c\u7eaa\u5f55\uff0c\u663e\u7136\u4e00\u6b21DP\u7684\u590d\u6742\u5ea6\u662f $O(n \\log n)$ \uff0c\u7136\u800c\u6211\u4eec\u53ea\u6709 $2n-2$ \u6761\u5355\u5411\u53d8\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u5927\u6982\u76f8\u5f53\u4e8e\u4e24\u6b21\u7684\u7b2c\u4e00\u6b21DP\uff0c\u590d\u6742\u5ea6\u4ecd\u7136\u662f $O(n \\log n)$\u3002\n\n---\n\n\u6211\u81ea\u8ba4\u4e3a\u6211\u7684\u4ee3\u7801\u6bd4\u4e00\u4e9b\u9898\u89e3\u5199\u7684\u7b80\u6d01\u6e05\u6670\uff0c\u5f53\u7136\u901f\u5ea6\u4e5f\u53ef\u4ee5\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int Maxn=1e3+5;\ninline int max(int a,int b){return a>b?a:b;}\ninline int R()\n{\n    char c;int res,sign=1;\n    while((c=getchar())>'9'||c<'0') if(c=='-') sign=-1;res=c-'0';\n    while((c=getchar())>='0'&&c<='9') res=res*10+c-'0';\n    return res*sign;\n}\nint n,m,First[Maxn],to[Maxn*2],Next[Maxn*2],dp[Maxn*2],cnt,ans[Maxn],M=1<<30,num;\ninline void add(int z,int y)\n{\n    Next[++cnt]=First[z];\n    First[z]=cnt;\n    to[cnt]=y;\n}\nint dfs(int pos,int father ,int fr)\n{\n    if(fr&&dp[fr]) return dp[fr];\n    int res=0;\n    priority_queue<int>q;\n    for(int k=First[pos];k;k=Next[k])\n    {\n        if(to[k]==father) continue;\n        q.push(dfs(to[k],pos,k));\n    }\n    for(int i=1;!q.empty();i++,q.pop())\n    res=max(res,q.top()+i);\n    return dp[fr]=res;\n}\nint main()\n{\n    n=R();\n    int x;\n    for(int i=2;i<=n;i++)\n    {\n        x=R();\n        add(i,x);\n        add(x,i);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        ans[i]=dfs(i,0,0);\n        if(ans[i]<M)\n            M=ans[i];\n    }\n    printf(\"%d\\n\",M);\n    for(int i=1;i<=n;i++)\n    if(ans[i]==M) printf(\"%d \",i);\n    return 0;\n}\n```\n\n",
        "postTime": 1603936728,
        "uid": 220857,
        "name": "\u7d20\u8d28\u73a9\u5bb6\u5b591\u8d85",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u4eba\u751f\u7b2c\u4e00\u6b21\u9760\u81ea\u5df1\u62ff\u5230\u6700\u4f18\u89e3\uff08\u4f30\u8ba1\u53ea\u662f\u6682\u65f6\u7684\uff09\n\u5176\u5b9e\u8fd9\u4e00\u9898\u6709\u4e00\u4e2a\u7b80\u5355\u800c\u9ad8\u6548\u7684\u4f18\u5316\u8c8c\u4f3c\u5df2\u6709\u9898\u89e3\u6ca1\u6709\u63d0\u5230\u3002**\u6211\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u662f\u8bb2\u8fd9\u4e2a\u4f18\u5316**\uff0c\u81f3\u4e8e\u6838\u5fc3\u601d\u8def\u5219\u548c\u5df2\u6709\u9898\u89e3\u5927\u540c\u5c0f\u5f02\u3002\u53ef\u4ee5\u53c2\u8003\u5176\u4ed6\u4f18\u79c0\u9898\u89e3\uff0c\u6211\u5c31\u4e0d\u505a\u8d58\u8ff0\u4e86\uff0c**\u8bf7\u52a1\u5fc5\u7406\u89e3\u4e86\u6807\u51c6\u7b97\u6cd5\u540e\u518d\u770b\u6b64\u9898\u89e3**\n\n\u8fdb\u5165\u6b63\u9898\uff0c\u6211\u4eec\u5148\u770b\u770b\u666e\u901a\u7684\u505a\u6cd5\uff0c\u5f00\u4e00\u4e2a\u4e00\u7ef4dp\u6570\u7ec4\uff0c\u679a\u4e3e\u6839\u8282\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u6839\u8282\u70b9\u901a\u8fc7dp\u6c42\u5f53\u524d\u8282\u70b9\u4e3a\u51fa\u53d1\u70b9\u65f6\u4f20\u64ad\u5b8c\u6210\u7684\u6700\u5c0f\u503c,\u6bcf\u6b21\u51fa\u53d1\u70b9\u5373\u6839\u8282\u70b9\u8f6c\u79fb\u65f6\u90fd\u5c06dp\u6570\u7ec4\u6e05\u96f6\u91cd\u65b0\u5f00\u59cb\u3002\u4f46\u5176\u5b9e\u6bcf\u6b21\u4ee5\u6839\u8282\u70b9\u8ba1\u7b97\u540e\u7684\u4e00\u4e9b\u8ba1\u7b97\u7ed3\u679c\u5bf9\u4e4b\u540e\u7684\u8fd0\u7b97\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u628a\u8fd9\u4e9b\u7ed3\u679c\u5229\u7528\u8d77\u6765\uff0c\u8fd9\u91cc\u5c31\u8981\u8fd0\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u601d\u60f3\u4e86\u3002\n\n\u5982\u4f55\u5229\u7528\uff1f\n\n\u62ff\u51fa\u8349\u7a3f\u7eb8\uff0c\u753b\u4e00\u68f5\u6811\u5982\u4e0b\uff1a\n1->2,3; 2->4,5; 3->6\n\n\u8fd9\u662f\u628a1\u5f53\u6210\u6839\u7684\u60c5\u51b5\uff0c\u518d\u753b\u4e00\u68f5\u6811\uff1a\n3->1,6; 1->2; 2->4,5\n\n\u663e\u7136\u8fd9\u662f\u540c\u4e00\u68f5\u6811\uff0c\u53ea\u662f\u6839\u4e0d\u540c\uff0c\u5728\u5e38\u89c4\u89e3\u6cd5\u4e2d\u7684\u4f5c\u7528\u662f\u5206\u522b\u6c42\u51fa\u4ece1\u548c3\u51fa\u53d1\u7684\u6700\u5c0f\u503c\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u8fd9\u4e24\u68f5\u6811\u4e2d\uff0cdp[2]\u76f8\u7b49\uff0c\u56e0\u4e3a\u4ed6\u4eec\u90fd\u8868\u793a\u540c\u4e00\u9897\u5b50\u6811\uff0c\u4f53\u73b0\u5728\u8fd9\u4e24\u68f5\u6811\u4e2d2\u7684\u7236\u4eb2\u90fd\u662f1\uff0c\u8fd9\u5c31\u662f\u7a81\u7834\u53e3\u3002\n\n\u6211\u4eec\u628a\u72b6\u6001\u52a0\u4e00\u7ef4\uff0c\u53d8\u6210dp[i][fa] (\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u8840\u8d5a\u4e0d\u4e8f)\uff0c\u8868\u793a\u4ee5i\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u904d\u5386\u5b8c\u6210\u7684\u6700\u5c0f\u503c\uff0c\u800cfa\u503c\u662f\u6839\u8282\u70b9i\u7684\u7236\u4eb2\uff0c\uff08\u82e5i\u662f\u6574\u68f5\u6811\u7684\u6839\uff0c\u90a3\u4e48fa=0\uff09\uff0c\u90a3\u4e48\u8fd9\u6837\u5728\u4ee5\u4e0d\u540c\u6839\u8282\u70b9\u904d\u5386\u6811\u7684\u65f6\u5019\uff0c\u82e5\u4ee5\u8282\u70b9i\u4e3a\u6839\u7684\u5b50\u6811\u4e0e\u4e4b\u524d\u8ba1\u7b97\u8fc7\u7684\u4ee5i\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u76f8\u540c\uff0c\u5373i\u7684\u7236\u4eb2\u76f8\u540c\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u3002\n\n\u7528\u6587\u5b57\u63cf\u8ff0\u7684\u786e\u62bd\u8c61\uff0c\u770b\u4ee3\u7801\u5427\uff0c\u5982\u679c\u4f60\u7406\u89e3\u4e86\u5e38\u89c4\u89e3\u6cd5\u60f3\u5fc5\u4f60\u53ef\u4ee5\u8f7b\u6613\u770b\u61c2:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1010;\nint fst[N],nxt[N*2],u[N*2],v[N*2];\nint n,cnt;\nint dp[N][N];\ninline int read() {\n    int ans=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch)) {if(ch=='-') f=-1; ch=getchar();}\n    while(isdigit(ch)) {ans=ans*10+ch-48; ch=getchar();}\n    return ans*f;\n}\nvoid add(int uu,int vv) {\n    u[++cnt]=uu; v[cnt]=vv;\n    nxt[cnt]=fst[uu];\n    fst[uu]=cnt;\n}\nint dfs(int uu,int fa) {\n    if(dp[uu][fa]) return dp[uu][fa];//\u4f18\u5316\u7684\u6838\u5fc3\n    int gg=0,a[N];\n    for(int k=fst[uu];k;k=nxt[k]) {\t\t\n        if(v[k]==fa) continue;\n        a[++gg]=dfs(v[k],uu);\n    }\n    if(gg) {\n        sort(a+1,a+1+gg);\n        for(int i=1;i<=gg;i++) dp[uu][fa]=max(dp[uu][fa],a[i]+gg-i+1);\n    } else dp[uu][fa]=1;\n    return dp[uu][fa];\n}\nint main() {\n    n=read();\n    for(int i=2;i<=n;i++) {\n        int uu=read();\n        add(uu,i); add(i,uu);\n    }\n    int ans=INT_MAX;\n    for(int i=1;i<=n;i++) ans=min(ans,dfs(i,0));\n    printf(\"%d\\n\",ans);\n    for(int i=1;i<=n;i++) if(dp[i][0]==ans) printf(\"%d \",i);\n    return 0;\n}\n```\n\n",
        "postTime": 1524368719,
        "uid": 22840,
        "name": "\u5218\u5907",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\n\u7a81\u7136\u89c9\u5f97\u4ee5\u524d\u5199\u7684\u53ef\u80fd\u6709\u70b9\u4e0d\u592a\u6e05\u6670\uff0c\u4fee\u6539\u4e00\u4e0b\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u9009\u4e86\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u6839\u4e4b\u540e\uff0c\u6240\u6709\u5269\u4e0b\u7684\u8282\u70b9\u90fd\u76f8\u5f53\u4e8e\u5b83\u7684\u513f\u5b50\u3002\u56e0\u4e3a\u4e0a\u5c5e\u548c\u4e0b\u5c5e\u6ca1\u6709\u672c\u8d28\u533a\u522b\uff0c\u53ea\u662f\u9650\u5236\u4e86\u8fd9\u662f\u4e00\u68f5\u6811\u800c\u5df2\u3002\u6240\u4ee5\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u80fd\u5411\u4e0b\u4f20\u9012\u6d88\u606f\u3002\n\n\u7531\u4e8en\u5f88\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u8ba1\u7b97\u5176\u65f6\u95f4\u82b1\u8d39\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u5bf9\u4e8e\u7ed9\u70b9\u8282\u70b9\u6c42\u82b1\u8d39\u65f6\u95f4\u3002\n\n\u6211\u4eec\u8bbef[x]\u8868\u793a\u5f53x\u8fd9\u4e2a\u8282\u70b9\u5f97\u5230\u6d88\u606f\u540e\uff0c\u8fd8\u9700\u8981\u81f3\u5c11\u82b1\u8d39\u591a\u5c11\u65f6\u95f4\u53ef\u4ee5\u4f7f\u5f97\u4ee5x\u4e3aroot\u7684\u5b50\u6811\u5168\u90e8\u5f97\u77e5\u6d88\u606f\u3002\n\n\u901a\u8fc7\u89c2\u5bdf\uff0c\u663e\u7136\u6211\u4eec\u4f1a\u53d1\u73b0\u5148\u4f20\u7ed9\u82b1\u8d39\u65f6\u95f4\u591a\u7684\u4eba(f[x]\u6700\u5927\u7684\u4eba)\u66f4\u52a0\u5408\u7b97\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u7684\u907f\u514d\u4e00\u4e2a\u4eba\u8fd8\u5728\u8f9b\u82e6\u7684\u4f20\u9012\u4fe1\u606f\uff0c\u53e6\u4e00\u4e2a\u4eba\u5374\u60a0\u95f2\u7684\u559d\u4e0b\u5348\u8336\uff08\u96fe\uff09\u7684\u5c40\u9762\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u90fd\u8bb0\u5f55\u4e0b\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\u800c\u8a00\uff0c\u5b83\u7684\u6240\u6709\u5b50\u8282\u70b9\u7684\u65f6\u957f\uff0c\n\n\u5e76\u5bf9\u5176\u6392\u5e8f\uff0c\u6392\u5e8f\u540e\u5148\u4f20\u7ed9\u8017\u65f6\u6700\u591a\u7684\u4eba\uff0c\u4f46\u8fd9\u6837\u4f20\u9012\u4e86\u4e4b\u540e\uff0c\u7531\u4e8e\u8017\u65f6\u6700\u591a\u7684\u4eba\u6700\u5148\u88ab\u4f20\u9012\uff0c\n\n\u90a3\u4e48\u8fd9\u4e2a\u672c\u5e94\u8017\u65f6\u6700\u591a\u7684\u4eba\u5c31\u4e0d\u4e00\u5b9a\u8fd8\u662f\u8017\u65f6\u6700\u591a\u7684\u4eba\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5206\u522b\u8ba1\u7b97\u6240\u6709\u5b50\u8282\u70b9\u7684\u8017\u65f6\uff0c\u5e76\u53d6max\u8ba1\u5165ans\u3002\n\n\u6700\u540edp\u6570\u7ec4\u5373\u4ee3\u8868\u4e00\u65e6\u8fd9\u4e2a\u8282\u70b9\u5f97\u77e5\u6d88\u606f\uff0c\u8981\u591a\u4e45\u624d\u53ef\u4ee5\u628a\u6d88\u606f\u4f20\u7ed9\n\u6240\u6709\u5176\u4ed6\u7684\u4eba\uff08\u9664\u4e86\u4f20\u7ed9\u5b83\u7684\u90a3\u4e2a\u4eba\uff09,\u5373\u5b8c\u6210\u4efb\u52a1\u3002\u6811\u7684\u7ed3\u6784\u4fdd\u8bc1\u4e86\u5176\u6b63\u786e\u6027\n\nwhy\u662fans=min(son[i]+cnt-i+1)?\n\n\u56e0\u4e3a\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u53c8\u56e0\u4e3a\u662f\u4f18\u5148\u5927\u7684\n\ncnt-i\u5373\u4e3a\u8fd8\u6709\u591a\u5c11\u4e2a\u624d\u80fd\u5230\u5b83\uff0c\u7136\u540e+1\u662f\u56e0\u4e3a\u9ad8\u65af\u8fd9\u4e2a\u70b9\u4fe1\u606f\u9700\u89811\u7684\u65f6\u95f4\u3002\n\nson[i]\u5219\u662f\u52a0\u4e0a\u81ea\u8eab\u7684\u65f6\u95f4\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define AC 1100\n#define ACway 2500\n#define R register int\n#define D printf(\"line in %d\\n\",__LINE__);\n/*\u975e\u5e38\u5999\u7684\u6811\u5f62DP\uff1a\u7531\u4e8en\u5f88\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u8ba1\u7b97\u5176\u65f6\u95f4\u82b1\u8d39\n\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u5bf9\u4e8e\u7ed9\u70b9\u8282\u70b9\u6c42\u82b1\u8d39\u65f6\u95f4\u3002\n\u901a\u8fc7\u89c2\u5bdf\uff0c\u663e\u7136\u6211\u4eec\u4f1a\u53d1\u73b0\u5148\u4f20\u7ed9\u82b1\u8d39\u65f6\u95f4\u591a\u7684\u4eba\u66f4\u52a0\u5408\u7b97\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u7684\u907f\u514d\n\u4e00\u4e2a\u4eba\u8fd8\u5728\u8f9b\u82e6\u7684\u4f20\u9012\u4fe1\u606f\uff0c\u53e6\u4e00\u4e2a\u4eba\u5374\u60a0\u95f2\u7684\u559d\u4e0b\u5348\u8336\uff08\u96fe\uff09\u7684\u5c40\u9762\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u90fd\u8bb0\u5f55\u4e0b\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\u800c\u8a00\uff0c\u5b83\u7684\u6240\u6709\u5b50\u8282\u70b9\u7684\u65f6\u957f\uff0c\n\u5e76\u5bf9\u5176\u6392\u5e8f\uff0c\u6392\u5e8f\u540e\u5148\u4f20\u7ed9\u8017\u65f6\u6700\u591a\u7684\u4eba\uff0c\u4f46\u8fd9\u6837\u4f20\u9012\u4e86\u4e4b\u540e\uff0c\u7531\u4e8e\u8017\u65f6\u6700\u591a\u7684\u4eba\u6700\u5148\u88ab\u4f20\u9012\uff0c\n\u90a3\u4e48\u8fd9\u4e2a\u672c\u5e94\u8017\u65f6\u6700\u591a\u7684\u4eba\u5c31\u4e0d\u4e00\u5b9a\u8fd8\u662f\u8017\u65f6\u6700\u591a\u7684\u4eba\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5206\u522b\u8ba1\u7b97\u6240\u6709\u5b50\u8282\u70b9\n\u7684\u8017\u65f6\uff0c\u5e76\u53d6max\u8ba1\u5165ans\uff0c\u6700\u540edp\u6570\u7ec4\u5373\u4ee3\u8868\u4e00\u65e6\u8fd9\u4e2a\u8282\u70b9\u5f97\u77e5\u6d88\u606f\uff0c\u8981\u591a\u4e45\u624d\u53ef\u4ee5\u628a\u6d88\u606f\u4f20\u7ed9\n\u6240\u6709\u5176\u4ed6\u7684\u4eba\uff08\u9664\u4e86\u4f20\u7ed9\u5b83\u7684\u90a3\u4e2a\u4eba\uff09,\u5373\u5b8c\u6210\u4efb\u52a1\u3002\u6811\u7684\u7ed3\u6784\u4fdd\u8bc1\u4e86\u5176\u6b63\u786e\u6027\nwhy\u662fans=min(son[i]+cnt-i+1)?\n\u56e0\u4e3a\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u53c8\u56e0\u4e3a\u662f\u4f18\u5148\u5927\u7684\ncnt-i\u5373\u4e3a\u8fd8\u6709\u591a\u5c11\u4e2a\u624d\u80fd\u5230\u5b83\uff0c\u7136\u540e+1\u662f\u56e0\u4e3a\u9ad8\u65af\u8fd9\u4e2a\u70b9\u4fe1\u606f\u9700\u89811\u7684\u65f6\u95f4\u3002\nson[i]\u5219\u662f\u52a0\u4e0a\u81ea\u8eab\u7684\u65f6\u95f4\n*/\nint n;\nint Head[AC],Next[ACway],date[ACway],tot;\nint ans[AC],minn=INT_MAX,f[AC];//use\u7528\u6765\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50(DFS\u4e2d\u4e34\u65f6\u5b58\u50a8)\ninline int read()\n{\n    int x=0;char c;\n    while(isspace(c=getchar()));\n    while(c>='0' && c<='9')x=x*10+c-'0',c=getchar();\n    return x;\n}\n\ninline void add(int f,int w)\n{\n    date[++tot]=w , Next[tot]=Head[f] , Head[f]=tot;\n    date[++tot]=f , Next[tot]=Head[w] , Head[w]=tot; \n}\t\n\nvoid upmax(int &a,int b)\n{\n    if(b>a)a=b;\n}\n\nvoid upmin(int &a,int b)\n{\n    if(b<a)a=b;\n}\n\nvoid DFS(int x,int fa)\n{\n    R now;\n    int cnt=0,son[AC];//\u5f00\u5728DFS\u91cc\u9762\u66f4\u52a0\u65b9\u4fbf\uff1f\n    for(R i=Head[x]; i ;i=Next[i])//\u679a\u4e3e\u5b50\u8282\u70b9\n    {\n        now=date[i];\n        if(now!=fa)//\u5982\u679c\u4e0d\u662f\u7236\u4eb2\uff0c\u5373\u4e3a\u513f\u5b50\n        {\n            DFS(now,x);\n            son[++cnt]=f[now];\n        }\n    }\n    sort(son+1,son+cnt+1);\n    for(R i=1;i<=cnt;i++) upmax(f[x],son[i]+cnt-i+1);\n}\n\nvoid pre()\n{\n    R a;\n    n=read();\n    for(R i=2;i<=n;i++)\n    {\n        a=read();//\u8bfb\u5165i\u7684\u4e0a\u7ea7\n        add(a,i);\n    }\n}\n\nvoid work()\n{\n    for(R i=1;i<n;i++)//\u679a\u4e3e\u7b2c\u4e00\u4e2a\u8282\u70b9\n    {\n        memset(f,0,sizeof(f));\n        DFS(i,0);\n        ans[i]=f[i];//ans[i]\u5b58\u4ee5i\u4e3a\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u6700\u5c0f\u8017\u65f6\n        upmin(minn,ans[i]);\n    }\n    printf(\"%d\\n\",minn+1);//\u8fd8\u5305\u62ec\u544a\u8bc9\u522b\u4eba\u7684\u65f6\u95f4\n    for(R i=1;i<=n;i++) \n        if(ans[i]==minn) printf(\"%d \",i);\n}\n\nint main()\n{\n//\tfreopen(\"in.in\",\"r\",stdin);\n    pre();\n    work();\n//\tfclose(stdin);\n    return 0;\n}\n\n```\n",
        "postTime": 1520079498,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "#### 1.\u601d\u8def\n \n \u4e00\u9053\u6811\u5f62DP\u7684\u9898\uff0c\u6211\u4eec\u901a\u8fc7\u679a\u4e3e\u6839\u7ed3\u70b9\u6c42\u89e3\u3002\u8bbe $f[i]$ \u4e3a\u4ee5 $i$ \u4e3a\u6839\u8282\u70b9\u6d88\u606f\u4f20\u64ad\u7684\u6700\u5feb\u65f6\u95f4\u3002$f[i]$ \u7b49\u4e8e\u5176\u5b50\u6811\u6d88\u606f\u4f20\u64ad\u7684\u6700\u5feb\u65f6\u95f4 $f[to]$ \u52a0\u4e0a\u8282\u70b9 $i$ \u628a\u6d88\u606f\u4f20\u5230\u7ed3\u70b9 $to$ \u7684\u7528\u65f6 $d_{to}$ \u7684\u6700\u5927\u503c\u3002\u5373\uff1a   \n $f[i]=\\max(f[i],f[to]+d_{to})$   \n \u521d\u59cb\u5316\uff1a $f[k]=0$ ( $k$ \u4e3a\u53f6\u8282\u70b9\uff09       \n \u6bcf\u4e2a\u7ed3\u70b9\u6bcf\u5206\u949f\u53ea\u80fd\u4f20\u64ad\u4e00\u6761\u6d88\u606f\uff0c\u600e\u6ca1\u5b89\u6392\u7ed3\u70b9 $i$ \u7ed9\u5b50\u7ed3\u70b9\u4f20\u64ad\u7684\u987a\u5e8f\u5462\uff1f\u8fd0\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u5148\u4f20\u64ad\u7ed9\u4f20\u64ad\u65f6\u95f4\u591a\u7684\u5b50\u7ed3\u70b9\uff0c\u5728\u4f20\u64ad\u7ed9\u4f20\u64ad\u65f6\u95f4\u5c11\u7684\u5b50\u8282\u70b9\uff0c\u4ee5\u6b64\u6765\u8282\u7ea6\u65f6\u95f4\uff0c\u6c42\u5230\u6700\u4f18\u89e3\u3002   \n \n **\u6ce8\u610f\uff1a\u7531\u4e8e\u82b1\u4e86\u4e00\u5206\u949f\u65f6\u95f4\u5c06\u6d88\u606f\u4f20\u7ed9\u6839\u8282\u70b9\uff0c\u6240\u4ee5\u6700\u540e\u7b54\u6848\u8981\u52a0 $1$ \u3002**\n#### 2.\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint cnt,n,anst=0x7fffffff,f[1005],ans[1005],h[2005];\nbool v[1005];\nstruct edge{int n,t;}e[2005];  //\u524d\u5411\u661f \nvoid add(int x,int y) {\n\te[++cnt].t=y;\n\te[cnt].n=h[x];\n\th[x]=cnt;\n}\nvoid dp(int x) {\n\tint d[1005]={0},y;\n\tv[x]=1;  //\u6807\u8bb0x\u5df2\u8bbf\u95ee \n\tfor(int i=h[x];i;i=e[i].n) {\n\t\ty=e[i].t;\n\t\tif(!v[y]) {\n\t\t\tdp(y);  //\u8ba1\u7b97\u5b50\u7ed3\u70b9 \n\t\t\td[++d[0]]=f[y];\n\t\t}\n\t}\n\tsort(d+1,d+d[0]+1);  \n\t//\u5c06x\u7684\u5b50\u7ed3\u70b9\u7684\u4f20\u64ad\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n\tfor(int i=1;i<=d[0];i++)f[x]=max(f[x],d[i]+d[0]-i+1);\n} \nint main() {\n\tcin>>n;\n\tfor(int i=2;i<=n;i++) {\n\t\tint x;\n\t\tcin>>x;\n\t\tadd(i,x);\n\t\tadd(x,i);\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tmemset(f,0,sizeof(f));\n\t\tmemset(v,0,sizeof(v));  //\u6bcf\u6b21\u679a\u4e3e\u521d\u59cb\u5316 \n\t\tdp(i);\n\t\tif(anst>f[i]) {\n\t\t\tanst=f[i];\n\t\t\tans[0]=0;\n\t\t\tans[++ans[0]]=i;  \n\t\t}else if(anst==f[i])ans[++ans[0]]=i;  \n\t\t//\u66f4\u65b0\u6700\u5feb\u4f20\u64ad\u65f6\u95f4\u5e76\u8bb0\u5f55\u6839\u7ed3\u70b9 \n\t}\n\tcout<<anst+1<<endl;  //\u7b54\u6848\u8981\u52a01 \n\tfor(int i=1;i<=ans[0];i++)cout<<ans[i]<<\" \";\n\treturn 0;\n}\n```\n\n\n ",
        "postTime": 1626609334,
        "uid": 452511,
        "name": "zwh2008",
        "ccfLevel": 0,
        "title": "P2018\u6d88\u606f\u4f20\u9012"
    },
    {
        "content": "\u867d\u7136\u8fd9\u9053\u9898\u7684\u6570\u636e\u53ea\u67091000\uff0c\u7528\u679a\u4e3e\u6839\u8282\u70b9\u7684\u65b9\u5f0f\u5c31\u53ef\u4ee5\u505a\u51fa\u6765\uff0c\u4f46\u662f\uff0c~~\u4e3a\u4e86\u88c5X~~\u4e3a\u4e86\u8bad\u7ec3\u81ea\u5df1\uff0c\u679a\u4e3e\u6839\u8282\u70b9\u7684$O(n^2\\log_2n)$\u6211\u662f\u4e0d\u4f1a\u6ee1\u8db3\u7684\uff0c\u6211\u8981\u5c1d\u8bd5\u66f4\u5feb\u7684\u65b9\u6cd5\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u679a\u4e3e\u6839\u8282\u70b9\uff0c\u7528\u6811\u5f62DP\u53bb\u505a\u3002~~\u8981\u4f60\u8bf4\uff01~~\n\n\u90a3\u7528\u6811\u5f62DP\u8be5\u600e\u4e48\u505a\u5462\uff1f\u9996\u5148\u5bf9\u4e8e\u4e00\u68f5\u6811\u7684\u6839\u8282\u70b9\uff0c\u8ba9\u4ed6\u6765\u4f20\u9012\u6d88\u606f\u7684\u6700\u77ed\u65f6\u95f4\u6709\u591a\u957f\u5462\uff1f\u5047\u8bbe\u4ed6\u7684\u513f\u5b50\u5206\u522b\u662f$ k_1 $\uff0c$ k_2 $\uff0c$ k_3 $\u2026\u2026$ k_m $\uff0c\u7136\u540e\u6211\u4eec\u6839\u636e\u8d2a\u5fc3\u7684\u539f\u5219\uff0c\u5c31\u53ef\u4ee5\u8ba9\u4f20\u9012\u65f6\u95f4\u66f4\u957f\u7684\u8282\u70b9\u5148\u4f20\uff0c\u65f6\u95f4\u77ed\u7684\u540e\u4f20\uff0c\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f\n```cpp\nf[i]=max(f[i],f[kj]+j);\n```\n\u5176\u4e2d\uff0cj\u662f\u5728\u6240\u6709\u513f\u5b50\u9700\u8981\u7684\u7684\u65f6\u95f4\u6392\u5e8f\u4e4b\u540e\u7684\u4e0b\u6807\u3002\n\n\u8be5\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\ninline void D1(int fa)\n{\n\tif(!h[fa]){p[fa]=1;return;}int i;vector<int>a;\n\tfor(i=h[fa];i;i=e[i].nx)D1(e[i].to),a.ph(f1[e[i].to]);\n\tf1[fa]=st(a);//\u8fd9\u91cc\u7684st\u51fd\u6570\u653e\u5728\u6700\u540e\u5728\u7ed9\u5927\u5bb6\uff0c\u5176\u5b9e\u662f\u56e0\u4e3a\u6211\u61d2\u5f97\u591a\u5199\u51e0\u6b21\n}\n```\n\u6211\u4eec\u518d\u56de\u8fc7\u5934\u6765\u60f3\u5047\u5982\u8be5\u70b9\u4e0d\u662f\u6839\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u5c31\u662f\u8bf4\u5b83\u591a\u4e86\u4e00\u6761\u7238\u7238\u7684\u8fb9\u3002\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u4ed6\u7238\u7238\u5f53\u505a\u513f\u5b50\uff0c\u7136\u540e\u50cf\u4e0a\u9762\u90a3\u6837\u53bb\u63a8\u771f\u6b63\u7684$ f_i $\u3002\u4e0d\u8fc7\u8fd9\u68f5\u6811\u662f\u6709\u6839\u6811\uff0c\u5e76\u4e14\u660e\u786e\u4e86\u7236\u5b50\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u4e24\u79cd\u9009\u62e9\uff1a\n\n1. \u5efa\u8fb9\u7684\u65f6\u5019\u5efa\u53cc\u8fb9\u3002\n\n2. \u8ba1\u7b97\u7684\u65f6\u5019\u201c\u5c4f\u853d\u201d\u6389\u672c\u8eab\u7684\u8282\u70b9\u3002\n\n\u56e0\u4e3a\u672c\u4eba\u7684\u4e60\u60ef\uff0c\u4f7f\u7528\u7684\u662f\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u3002\u8be5\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\ninline void D2(int fa)\n{\n\tint i;vector<int>a;\n\tif(fa!=1)//\u8bb0\u5f97\u8981\u7279\u5224\uff0c\u4e0d\u7136\u2026\u2026\u4e0d\u7136\u4e5f\u4e0d\u4f1a\u600e\u6837\u7684\u5566~\n\t{\n\t\tfor(i=h[f[fa]];i;i=e[i].nx)if(e[i].to!=fa)\n\t\ta.ph(p[e[i].to]);a.ph(f2[f[fa]]);f2[fa]=st(a);\n\t\ta.clear();a.ph(f2[fa]);//\u8bb0\u5f97\u6e05\u7a7a\uff0c\u8fd8\u8981\u8bb0\u5f97\u52a0\u5165f2[fa]\n\t}for(i=h[fa];i;i=e[i].nx)D2(e[i].to),a.ph(f2[e[i].to]);\n\tf3[fa]=st(a);\n}\n```\n\u6700\u7ec8\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#define ph push_back//\u8fd9\u4e2a\u662f\u56e0\u4e3apush_back\u6210\u5458\u51fd\u6570\u56e0\u4e3a\u8981\u591a\u6b21\u4f7f\u7528\uff0c\u6240\u4ee5\u5077\u61d2\u6253\u4e86\u4e2a\u5b8f\u5b9a\u4e49\uff0c\u4e0d\u7136\u6211\u4e5f\u6ca1\u529e\u6cd5\u538b\u884c\n#include<algorithm>\n#include<iostream>\n#include<vector>\nusing namespace std;\nint n,h[3005],f[3005],f1[3005],f2[3005],f3[3005];\ninline bool cmp(const int&a,const int&b){return a>b;}\nclass Edge{public:int to,nx;}e[3000];\ninline int st(vector<int>a)//st\u51fd\u6570\u5176\u5b9e\u5c31\u662f\u7ed9\u5728\u96c6\u5408\u5185\u7684\u5143\u7d20\u6392\u5e8f\uff0c\u7136\u540e\u5c31\u662f\u8f6c\u79fb\u65b9\u7a0b\n{\n\tint mx=0,i;sort(a.begin(),a.end(),cmp);\n\tfor(i=0;i<a.size();++i)mx=max(mx,a[i]+i);return ++mx;\n}\ninline void D1(int fa)\n{\n\tif(!h[fa]){f1[fa]=1;return;}//\u8fb9\u754c\u6761\u4ef6\uff01\u4e00\u5b9a\u8981\u6ce8\u610f\uff01\n   int i;vector<int>a;\n\tfor(i=h[fa];i;i=e[i].nx)D1(e[i].to),a.ph(f1[e[i].to]);\n\tf1[fa]=st(a);\n}\ninline void D2(int fa)\n{\n\tint i;vector<int>a;\n\tif(fa!=1)\n\t{\n\t\tfor(i=h[f[fa]];i;i=e[i].nx)if(e[i].to!=fa)\n\t\ta.ph(f1[e[i].to]);a.ph(f2[f[fa]]);f2[fa]=st(a);\n\t\ta.clear();a.ph(f2[fa]);\n\t}\n\tfor(i=h[fa];i;i=e[i].nx)D2(e[i].to),a.ph(f1[e[i].to]);\n\tf3[fa]=st(a);\n}\nint main()\n{\n\tint i=2;vector<int>a;\n\tcin>>n;\n\tfor(;i<=n;++i)cin>>f[i],e[i-1]={i,h[f[i]]},h[f[i]]=i-1;\n\tD1(1);D2(1);a.ph(1);//\u7b2c\u4e00\u4e2a\u4e00\u5b9a\u8981\u5148\u585e\u8fdb\u53bb\uff0c\u4e0d\u7136\u7684\u8bdd\u4f1aRE\n\tfor(i=2;i<=n;++i)if(f3[i]<f3[a[0]])a.clear(),a.ph(i);\n\telse if(f3[i]==f3[a[0]])a.ph(i);//\u8fd9\u91cc\u6bd4\u8f83\u7684\u90e8\u5206\u4e00\u5b9a\u8981\u770b\u61c2\n\tsort(a.begin(),a.end());cout<<f3[a[0]]<<\"\\n\";//\u5176\u5b9e\u6211\u5728\u6253\u8fd9\u6bb5\u4ee3\u7801\u7684\u65f6\u5019\u56e0\u4e3a\u628a\u9898\u770b\u9519\u4e86\u800c\u8bef\u6253\u6210cout<<a.size();\u2026\u2026\n\tfor(i=0;i<a.size();++i)cout<<a[i]<<\" \";\n}\n```",
        "postTime": 1582729729,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u6811\u8bba DP P2018\u9898\u89e3"
    },
    {
        "content": "##### \u6811\u5f62DP=dfs+dp=\u8bb0\u5fc6\u5316\n\n\n\u601d\u8def\uff1an\u6b21dfs\uff0c\u5206\u522b\u627e\u4ecei\u5f00\u59cb\u4f20\u6d88\u606f\u7684\u7ed3\u679c\uff0cdfs\u65f6\u8fdb\u884c\u4f18\u5316\uff08\u4e3b\u8981\u7528\u5230\u4e86\u8d2a\u5fc3\u7684\u601d\u60f3\uff09\n\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1adp[u]=max(dp[u],dp[v]+i-1)\n\n\n\u4e0b\u4ef6\u4ee3\u7801\uff1a\n\n\n```cpp\nvoid dfs(int x,int fa){\n\tint p[3005];\n\tp[0]=0;\n\tfor(int i=0;i<c[x].size();i++){\n\t\tif(c[x][i]==fa)continue;\n\t\tdfs(c[x][i],x);\n\t\tp[++p[0]]=f[c[x][i]];\n\t}\n\tsort(p+1,p+p[0]+1);\n\tfor(int i=1;i<=p[0];i++)f[x]=max(f[x],p[i]+p[0]-i+1);\n}\n```\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int>c[3005];\nint n,minn=0x7fffffff,f[3005],ans[3005];\nvoid dfs(int x,int fa){\n\tint p[3005];\n\tp[0]=0;\n\tfor(int i=0;i<c[x].size();i++){\n\t\tif(c[x][i]==fa)continue;\n\t\tdfs(c[x][i],x);\n\t\tp[++p[0]]=f[c[x][i]];\n\t}\n\tsort(p+1,p+p[0]+1);\n\tfor(int i=1;i<=p[0];i++)f[x]=max(f[x],p[i]+p[0]-i+1);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tint a;\n\tfor(int i=2;i<=n;i++)scanf(\"%d\",&a),c[a].push_back(i),c[i].push_back(a);\n\tfor(int i=1;i<=n;i++){\n\t\tmemset(f,0,sizeof(f));\n\t\tdfs(i,0);\n\t\tans[i]=f[i];\n\t\tminn=min(minn,ans[i]);\n\t}\n\tprintf(\"%d\\n\",minn+1);\n\tfor(int i=1;i<=n;i++)if(ans[i]==minn)printf(\"%d \",i);\n\treturn 0;\n}\n```\n\n\u5c0f\u8d34\u58eb\uff1a\u6570\u7ec4p\u4e0d\u80fd\u5f00\u6210\u5168\u5c40\u53d8\u91cf\uff0810\u5206\u900f\u5fc3\u51c9\uff09\uff0c\u56e0\u4e3a\u5f00\u6210\u5168\u5c40\u540e\u4e0b\u4e00\u6b21\u7684dfs\u4f1a\u5f71\u54cd\u7ed3\u679c\u3002",
        "postTime": 1563868099,
        "uid": 88137,
        "name": "greenheadstrange",
        "ccfLevel": 7,
        "title": "\u6811\u5f62DP P2018 \u6d88\u606f\u4f20\u9012"
    },
    {
        "content": "\u7531\u4e8e\u6839\u662f\u4e0d\u4e00\u5b9a\u7684 \u6240\u4ee5\u9700\u8981\u904d\u5386\u6240\u6709\u70b9 \u4f5c\u4e3a\u6839\n\n\u8bbedp[i]\u662f\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u4f20\u904d\u5b83\u6240\u6709\u5b50\u6811\u9700\u8981\u7684\u6700\u5c11\u65f6\u95f4\n\ndp[i]\u53d6\u51b3\u4e8e\u82b1\u8d39\u65f6\u95f4\u6700\u591a\u7684\u90a3\u9897\u5b50\u6811\uff08\u5f53\u7136\u8fd8\u8981\u52a0\u4e0a\u6bcf\u6b21\u4e00\u79d2\u7684\u4f20\u9012\u65f6\u95f4\uff09 \u4e0d\u8fc7\u4e5f\u4e0d\u662f\u4e00\u5b9a\u7684 \u4e07\u4e00\u8bdd\u8d39\u65f6\u95f4\u6700\u591a\u7684\u548c\u6b21\u591a(\u6216\u8005\u7b2c\u4e09\u591a \u7b2c\u56db\u591a....)\u7684\u53ea\u5dee\u4e86\u4e00\u79d2\u4e4b\u7c7b\u7684\u60c5\u51b5\u4e5f\u4f1a\u51fa\u73b0 \u6240\u4ee5\u9700\u8981\u904d\u5386\u6240\u6709\u7684\u513f\u5b50~\n\n\u65b9\u7a0b\uff1adp[i]=max{dp[i.son]+i.son.number(\u4f20\u9012\u65f6\u95f4)}\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3005;\nint n,tot,first[N],dp[N],son[N],cnt,ans=0,num;\nstruct Edge\n{\n\tint to,next;\n}edge[N*10];\ninline void addedge(int x,int y)\n{\n\ttot++;\n\tedge[tot].to=y;\n\tedge[tot].next=first[x];\n\tfirst[x]=tot;\n}\ninline bool cmp(const int &a,const int &b)\n{\n\treturn a>b;\n}\ninline void dfs(int now,int fa)\n{\n\tfor(int u=first[now];u;u=edge[u].next)\n\t{\n\t\tint vis=edge[u].to;\n\t\tif(vis==fa)\tcontinue;\n\t\tdfs(vis,now); \n\t}\n\tint cnt=0;\n\tfor(int u=first[now];u;u=edge[u].next)\n\t{\n\t\tint vis=edge[u].to;\n\t\tif(vis==fa)\tcontinue;\n\t\tson[++cnt]=dp[vis];\n\t}\n\tsort(son+1,son+cnt+1);\n\tint ret=0;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tret=max(ret,son[i]+cnt-i); \n\t}\n\tdp[now]=ret+1;\t//\u52a01\u662f\u56e0\u4e3a\u4ed4\u7ec6\u770b\u4e86\u6837\u4f8b\u540e\u53d1\u73b0\u9ed8\u8ba4\u65f6\u95f4\u662f\u4ece\u4e00\u79d2\u5f00\u59cb\u7684orz \n}\nvector <int> con;\nint main()\n{\n\tcin>>n;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tint x;\n\t\tcin>>x;\n\t\taddedge(i,x);\n\t\taddedge(x,i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdfs(i,0);\n\t\tint tmp=dp[i];\n\t\tif(!ans||tmp<ans)\n\t\t{\n\t\t\tans=tmp;\n\t\t\tcon.clear();\n\t\t\tcon.push_back(i);\n\t\t} \n\t\telse if(tmp==ans)\tcon.push_back(i);\n\t}\n\tcout<<ans<<endl;\n\tfor(int i=0;i<con.size();i++)\tcout<<con[i]<<\" \";\n\treturn 0;\n}\n```",
        "postTime": 1531643986,
        "uid": 60299,
        "name": "Patrickpwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u611f\u8c22\u697c\u4e0b\u5927\u4f6c\u7ed9\u7684\u601d\u8def\uff1a\uff08\u6211\u662f\u4e00\u53f0\u590d\u8bfb\u673a\uff0c\u6211\u6765\u590d\u8ff0\u4e00\u4e0b\u5927\u4f6c\u7684\u601d\u60f3\uff09\u3002\n\u9898\u610f\uff1a\u6bcf\u4e2a\u65f6\u523b\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u4e0e\u81ea\u5df1\u76f8\u90bb\u7684\u8282\u70b9\u8bbf\u95ee\uff0c\u73b0\u5728\u95ee\u6700\u5f00\u59cb\u9009\u51e0\u53f7\u624d\u80fd\u82b1\u8d39\u6700\u5c0f\u7684\u65f6\u95f4\u3002\u9898\u76ee\u7ed9\u7684\u6811\u662f\u4e00\u68f5\u65e0\u6839\u6811\uff0c\u6bcf\u6b21\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u4e0a\u4e00\u7ea7\u8282\u70b9\u6216\u8005\u4e0b\u4e00\u7ea7\u8282\u70b9\u3002\u4f60\u628a\u76f4\u63a5\u4e0a\u4e00\u7ea7\u548c\u4e0b\u4e00\u7ea7\u653e\u5230\u65e0\u6839\u6811\u4e0a\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u4ec0\u4e48\u4e0a\u4e0b\u7ea7\u5c31\u4e0d\u91cd\u8981\u76f4\u63a5\u5ffd\u89c6\u4e86\u628a\u3002\u6839\u8282\u70b9root\u6709\u4e09\u4e2a\u5b69\u5b50\u8282\u70b9a,b,c;\u90a3\u4e48root\u8282\u70b9\u8be5\u5148\u4f20\u9012\u7ed9\u8c01\u5462\uff08\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u6bcf\u4e2a\u65f6\u523b\u53ea\u80fd\u4f20\u9012\u5230\u76f8\u90bb\u7684\u4e00\u4e2a\u8282\u70b9\uff09\uff1f\u5f53\u7136\u662f\u7ed9\u82b1\u65f6\u95f4\u6700\u591a\u7684\u5b69\u5b50\u4e86\u3002\u6bd4\u5982\u8bf4a\u8981\u5168\u90e8\u8bbf\u95ee\u5b8c\u81ea\u5df1\u7684\u5b50\u6811\u9700\u8981a3\u4e2a\u65f6\u95f4\uff0cb\u89818\u4e2a\uff0cc\u89814\u4e2a\u3002\u80af\u5b9a\u5148\u7ed9b\u4f20\u9012\u554a\u3002root\u4f55\u65f6\u8bbf\u95ee\u5b8c\u5168\u90e8\u5b50\u8282\u70b9\u662f\u7531\u5b50\u8282\u70b9adc\u4e09\u8005\u7684\u6700\u5927\u503c\u51b3\u5b9a\u7684\u3002\u6240\u4ee5\u6bcf\u4e00\u6b21\u6211\u4eec\u7ed9\u5b50\u8282\u70b9\u6392\u4e2a\u5e8f\uff0c\u7531\u5927\u5230\u5c0f\u3002\u65f6\u95f4\u5206\u914d\u662f\u4e00\u4e2a\u5355\u8c03\u589e\u5e8f\u5217\uff0c\u5b50\u8282\u70b9\u5e8f\u5217\u662f\u4e00\u4e2a\u975e\u51cf\u5e8f\u5217\u3002\u4e09\u4e2a\u5b50\u8282\u70b9\uff0c\u5f00\u59cb\u65f6\u95f4\u5206\u522b\u4e3a1 2 3\uff0c\u90a3\u4e48\u4ed6\u4eec\u5404\u81ea\u7684\u5b8c\u6210\u65f6\u95f4\u4e3a1+8,2+4,3+3\u3002root\u9700\u8981\u53d6\u5f97\u5c31\u662f\u4ed6\u4eec\u7684\u6700\u5927\u503c\uff0c\u5c31\u662f1+8\u4e86\u3002\n\u7b54\u6848\u8f93\u51fa\u7684\u65f6\u5019\u7b2c\u4e00\u95ee\u8981\u52a01.\uff08\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\uff0c\u518d\u95ee\u5c31\u81ea\u6740\u3002\uff09\n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 1005\n#define mod 100000000\n#define INF 0x3f3f3f3f\nusing namespace std;\n\nint n;\nvector<int> G[MAXN];\nbool vis[MAXN];\nint dp[MAXN];\n\nbool cmp(int a,int b)\n{\n    return a>b;\n}\n\nint dfs(int root)\n{\n    vis[root]=true;\n    int maxn=0;\n    int Q[MAXN],cnt=0;                          //\u5f00\u4e00\u4e2a\u961f\u5217\u8fdb\u884c\u6392\u5e8f\n    for(int i=0;i<G[root].size();i++)\n    {\n        int v=G[root][i];\n        if(vis[v])\n            continue;\n        Q[++cnt]=dfs(v);\n    }\n    if(cnt==0)\n        return 0;\n    sort(Q+1,Q+1+cnt,cmp);\n    for(int i=1;i<=cnt;i++)\n        maxn=max(maxn,Q[i]+i);            //\u6211\u4eec\u5148\u628a\u6d88\u606f\u4f20\u9012\u7ed9\u82b1\u8d39\u65f6\u95f4\u6700\u591a\u7684\u4eba\n    return maxn;                                     //\u6211\u4eec\u53d1\u73b0\u65f6\u95f4\u5e8f\u5217\u662f\u4e00\u4e2a\u5355\u8c03\u589e\u5e8f\u5217\uff0c\u513f\u5b50\u8282\u70b9\u4fe1\u606f\u6392\u5e8f\u540e\u662f\u975e\u51cf\u5e8f\u5217\uff0c\u6240\u4ee5\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\n}\n\nvoid solve()\n{\n    int minn=INF;\n    for(int i=1;i<=n;i++)\n    {\n        memset(vis,false,sizeof(vis));\n        dp[i]=dfs(i);\n        minn=min(minn,dp[i]);\n    }\n    printf(\"%d\\n\",minn+1);\n    for(int i=1;i<=n;i++)\n    {\n        if(dp[i]==minn)\n            printf(\"%d \",i);\n    }\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    int fa;\n    for(int i=2;i<=n;i++)\n    {\n        scanf(\"%d\",&fa);                      //i\u53f7\u8282\u70b9\u7684\u76f4\u63a5\u4e0a\u7ea7\u4e3afa\uff0c\u90a3\u4e48fa\u548ci\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\n        G[fa].push_back(i);\n        G[i].push_back(fa);\n    }\n    solve();\n    return 0;\n}\n\n```\n",
        "postTime": 1572014688,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "p\u515a\uff1b\n\n\u4e3a\u4ec0\u4e48\u8981\u6811\u5f62dp\uff0c\u66b4\u529b\u6a21\u62df\u4e5f\u53ef\u4ee5\u8fc7\u5440\uff01\n\n\na\u6570\u7ec4--\u90bb\u63a5\u8868\n\nb\u6570\u7ec4--\u50a8\u5b58\u4ecei\u5f00\u59cb\u6269\u6563\u7684\u89e3\n\nd\uff0ce\u6570\u7ec4--\u7ed9c\u6570\u7ec4\u6392\u5e8f\u7528\u7684\n\nc\u6570\u7ec4--\u5f53\u524d\u8282\u70b9\u5411\u5176\u4ed6\u8282\u70b9\u6269\u6563\u6240\u5f97\u89e3\n\nf\u51fd\u6570--\u6c42\u5f53k\u8282\u70b9\u7531n\u8282\u70b9\u6269\u6563\u6240\u5f97\u65f6\uff0c\u5411\u4e0b\u6269\u6563\u7684\u6700\u4f18\u89e3\n\n\n\u5047\u5b9ai\u4e3a\u539f\u70b9\uff0c\u8c03\u7528f\u51fd\u6570\u6c42\u89e3\n\n\u6bcf\u4e2a\u70b9\u90fd\u6709\u8bb8\u591a\u70b9\u8981\u6269\u6563\uff0c\u6839\u636e\u8d2a\u5fc3\u7684\u539f\u5219\uff0c\u4f18\u5148\u5411\u8017\u65f6\u66f4\u591a\u7684\u70b9\u5148\u6269\u6563\uff0c\u6240\u4ee5\u5728\u51fd\u6570\u4e2d\u5148\u6c42\u5f53\u524d\u8282\u70b9\u80fd\u6269\u6563\u7684\u5404\u4e2a\u8282\u70b9\u5411\u4e0b\u6269\u6563\u6240\u9700\u7684\u65f6\u95f4\uff0c\u518d\u63a8\u5bfc\u5f53\u524d\u8282\u70b9\u5411\u4e0b\u6269\u6563\u6240\u9700\u7684\u65f6\u95f4\n\n\n\n```cpp\nuses math;\nvar\n  a:array [0..1001,0..1001] of longint;\n  b,d,e:array [0..1001] of longint;\n  n,i,k,min:longint;\nprocedure p(l,r:longint);\nvar\n  i,j,m,k:longint;\nbegin\n  if l=r then exit;\n  m:=(l+r) div 2;\n  p(l,m);\n  p(m+1,r);\n  i:=l;\n  j:=m+1;\n  k:=l;\n  while (i<=m)and(j<=r) do\n    if d[i]<d[j] then\n    begin\n      e[k]:=d[i];\n      inc(i);\n      inc(k);\n    end\n      else\n    begin\n      e[k]:=d[j];\n      inc(j);\n      inc(k);\n    end;\n  while i<=m do\n    begin\n      e[k]:=d[i];\n      inc(i);\n      inc(k);\n    end;\n  while j<=r do\n    begin\n      e[k]:=d[j];\n      inc(j);\n      inc(k);\n    end;\n  for k:=l to r do d[k]:=e[k];\nend;\nfunction f(k,n:longint):longint;\nvar\n  c:array [0..1001] of longint;\n  i,j,l,r,m:longint;\nbegin\n  if (n<>0)and(a[k,0]=1) then exit(1);\n  l:=0;\n  i:=0;\n  for j:=1 to a[k,0] do\n    if a[k,j]<>n then\n    begin\n      inc(i);\n      c[i]:=f(a[k,j],k);\n    end;\n  for i:=1 to i do d[i]:=c[i];\n  p(1,i);\n  for j:=i downto 1 do\n    if l<d[j]+i-j then l:=d[j]+i-j;\n  f:=l+1;\nend;\nbegin\n  read(n);\n  for i:=2 to n do\n  begin\n    read(k);\n    inc(a[i,0]);\n    a[i,a[i,0]]:=k;\n    inc(a[k,0]);\n    a[k,a[k,0]]:=i;\n  end;\n  min:=maxlongint div 3;\n  for i:=1 to n do\n  begin\n    b[i]:=f(i,0);\n    if min>b[i] then min:=b[i];\n  end;\n  writeln(min);\n  for i:=1 to n do\n    if b[i]=min then write(i,' ');\n  close(input);\n  close(output);\nend.\n\u4ee3\u7801\u8f83\u957f\uff0c\u672c\u4eba\u849f\u84bb\uff0c\u795e\u7287\u52ff\u55b7\uff01\uff01\uff01\n```",
        "postTime": 1503481306,
        "uid": 20506,
        "name": "\u65b9\u65b9\u5c0f\u9017\u903c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "# \u6d1b\u8c37 P2018 \u6d88\u606f\u4f20\u9012\n\n## \u9898\u76ee\u5206\u6790\n\n> \u8d2a\u5fc3+\u6811\u5f62DP\n\n\u672c\u6765\u8fd8\u4ee5\u4e3a\u8981\u5927\u8d39\u5468\u6298\u5730\u6362\u6839\uff0c\u7136\u540e\u53d1\u73b0 $n$ \u5f88\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5 $O(n^2\\log n)$ \u679a\u4e3e\u3002\n\n\u679a\u4e3e\u6bcf\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6839\uff0c\u7528 $f_x$ \u8868\u793a\u8d70\u5b8c\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u82b1\u8d39\u7684\u6700\u5c0f\u65f6\u95f4\u3002 \n\n\u90a3\u4e48\u5982\u4f55\u66f4\u65b0\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u7528\u5230\u8d2a\u5fc3\u7684\u601d\u60f3\u4e86\u3002\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u4e86 $x$ \u7684\u513f\u5b50\u4e2a\u6570 $tot$ \u4ee5\u53ca\u6240\u6709\u513f\u5b50 $to$ \u7684 $f$ \u503c\u3002\u90a3\u4e48 $x$ \u5fc5\u5b9a\u8981\u628a\u4fe1\u606f\u4f20\u7ed9\u6bcf\u4e00\u4e2a\u513f\u5b50\uff0c\u6240\u4ee5\u8981\u5c3d\u91cf\u65e9\u5730\u628a\u4fe1\u606f\u4f20\u7ed9 $f$ \u503c\u8f83\u5927\u7684\u513f\u5b50\uff0c\u56e0\u6b64\u8981\u628a\u6240\u6709\u513f\u5b50\u7684 $f$ \u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5e76\u5f97\u51fa\u5982\u4e0b DP \u65b9\u7a0b\uff1a\n\n$$f_{x}=\\max\\limits_{i=1}^{tot}(f_{to}+i)$$\n\n\u6700\u540e\u7684\u7b54\u6848\u9700\u8981\u52a0 $1$\uff0c\u56e0\u4e3a\u6700\u5f00\u59cb\u8981\u82b1\u8d39 $1$ \u7684\u65f6\u95f4\u628a\u6d88\u606f\u4f20\u64ad\u5230\u6839\u8282\u70b9\u3002\n\n\u8ba1\u7b97\u51fa\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u6839\u7684\u7b54\u6848\u4e4b\u540e\u53d6\u6700\u5c0f\u503c\uff0c\u518d\u626b\u63cf\u4e00\u904d\u627e\u53ef\u4ee5\u4f5c\u4e3a\u6839\u7684\u70b9\u5373\u53ef\u3002\n\n## \u7279\u522b\u6ce8\u610f\n\n\u5728\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u65f6\uff0c\u9700\u8981\u8bb0\u5f55\u6240\u6709\u513f\u5b50\u7684 $f$ \u503c\uff0c\u5982\u679c\u8981\u5b9a\u4e49\u4e34\u65f6\u6570\u7ec4\u53ea\u80fd\u5728\u51fd\u6570\u5185\u5b9a\u4e49\uff0c\u56e0\u4e3a\u5728\u63a5\u4e0b\u6765\u7684 dfs \u8fc7\u7a0b\u4e2d\u53c8\u7528\u5230\u4e86\u6b64\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7684\u503c\u4f1a\u56e0\u6b64\u53d1\u751f\u6539\u53d8\uff0c\u6240\u4ee5\u4e0d\u80fd\u5728\u5916\u9762\u5b9a\u4e49\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int A = 1e3 + 11;\nconst int B = 1e6 + 11;\nconst int mod = 1e9 + 7;\nconst int inf = 0x3f3f3f3f;\n\ninline int read() {\n  char c = getchar();\n  int x = 0, f = 1;\n  for ( ; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n  for ( ; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n  return x * f;\n}\n\nstruct node { int to, nxt; } e[A << 1];\nint n, ans[A], f[A], head[A], cnt = 0, res = inf; \n\ninline void add(int from, int to) {\n  e[++cnt].to = to;\n  e[cnt].nxt = head[from];\n  head[from] = cnt;\n}\n\nbool cmp(int x, int y) {\n  return x > y;\n}\n\ninline void dfs(int x, int fa) {\n  int tot = 0, b[1000] = {0};\n  \n  for (int i = head[x]; i; i = e[i].nxt) {\n    int to = e[i].to;\n    if (to == fa) continue;\n    dfs(to, x);\n    b[++tot] = f[to];\n  }\n  sort(b + 1, b + 1 + tot, cmp);\n  for (int i = 1; i <= tot; i++) \n    f[x] = max(f[x], b[i] + i);\n}\n\nint main() {\n  n = read();\n  for (int i = 2; i <= n; i++) {\n    int x = read();\n    add(x, i), add(i, x);\n  }\n  for (int i = 1; i <= n; i++) {\n    memset(f, 0, sizeof(f));\n    dfs(i, 0);\n    res = min(f[i], res);\n    ans[i] = f[i];\n  }\n  cout << res + 1 << '\\n';\n  for (int i = 1; i <= n; i++) \n    if (ans[i] == res) cout << i << \" \";\n  puts(\"\");\n  return 0;\n}\n```\n\n",
        "postTime": 1605521284,
        "uid": 198323,
        "name": "loceaner",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u6811\u5f62dp\n\n\u601d\u8def\uff1a\u679a\u4e3e\u7b2c\u4e00\u4e2a\u653e\u7684\u4f4d\u7f6e\uff0cdfs\u9012\u5f52\u5904\u7406\u51fa\u5f53\u524d\u8282\u70b9u\u7684\u5b50\u8282\u70b9v\u9700\u8981\u7684\u4f20\u9012\u65f6\u95f4\uff0c\u7136\u540e\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5bf9\u4e8e\u4f20\u9012\u65f6\u95f4\u957f\u7684\u8282\u70b9\uff0c\u5c31\u5148\u4f20\u9012\u7ed9\u5b83\u3002\n\n\n\n```cpp\n//P2018 \u6d88\u606f\u4f20\u9012\n#include<iostream>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#define ll long long\n#define fo(i,j,k) for(int i=j;i<=k;i++)\nusing namespace std;\nconst int mxn=1005;\nvector <int> f[mxn];\nint n,x,mx=1e8;\nint ans[mxn],dp[mxn],du[mxn];\ninline void dfs(int u,int fa)\n{\n    if(fa && du[u]==1) \n      return;\n    int tmp[mxn],cnt=0;\n    for(int i=0;i<f[u].size();i++)\n    {\n        int v=f[u][i];\n        if(v==fa) continue;\n        dfs(v,u);\n        tmp[++cnt]=dp[v];\n    }\n    sort(tmp+1,tmp+cnt+1);\n    fo(i,1,cnt) dp[u]=max(dp[u],tmp[i]+cnt-i+1);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    fo(i,2,n)\n    {\n        scanf(\"%d\",&x);\n        f[x].push_back(i);\n        f[i].push_back(x);\n    }\n    fo(i,1,n)\n    {\n        memset(dp,0,sizeof dp);\n        dfs(i,0);\n        ans[i]=dp[i];\n        mx=min(mx,ans[i]);\n    }\n    printf(\"%d\\n\",mx+1);\n    fo(i,1,n) if(ans[i]==mx) printf(\"%d \",i);\n    printf(\"\\n\");\n    return 0;\n}\n```",
        "postTime": 1478660321,
        "uid": 19075,
        "name": "panda_eater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "# \u6d88\u606f\u4f20\u9012\n\n## \u94fe\u63a5\uff1a\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/P2018)\n\n[\u535a\u5ba2\u56ed](https://www.cnblogs.com/GJY-JURUO/p/15008540.html)\n\n## \u9898\u76ee\u5927\u610f\uff1a\n\n\u4e00\u4e2a\u70b9\u5728\u67d0\u4e00\u79d2\u53ef\u5411\u76f8\u90bb\u8282\u70b9\u6269\u6563\uff0c\u95ee\u54ea\u4e9b\u8282\u70b9\u5f00\u59cb\u6269\u6563\u80fd\u6700\u5feb\u591a\u5c11\u79d2\u5c06\u6240\u6709\u8282\u70b9\u5168\u90e8\u8986\u76d6\u3002\n\n## \u601d\u8def\uff1a\n\n\u5148\u60f3\u66b4\u529b\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6c42\u51fa $f_i$ \u8868\u793a\u4ece\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6269\u6563\u5230 $i$\uff0c\u6700\u957f\u82b1\u8d39\u7684\u65f6\u95f4\u3002\u5219\u6709\uff1a\n\n$$f_u=\\max_{v\\in\\mathrm{son}(x)}\\{f_v+\\mathrm{order}_v\\}$$\n\n\u5176\u4e2d $\\mathrm{order}_v$ \u8868\u793a $u$ \u6269\u6563\u5230 $v$ \u7684\u987a\u5e8f\uff0c\u53ef\u4ee5\u8d2a\u5fc3\u6392\u5e8f\u6c42\u51fa\u3002\u7136\u540e\u6bcf\u4e2a\u70b9\u90fd\u4f5c\u4e3a\u6839\u7b97\u4e00\u904d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n^2\\log n)$\u3002\n\n\u4f46\u662f\u5982\u679c\u66b4\u529b\u7b97\u6cd5\uff0c\u5f88\u591a\u72b6\u6001\u90fd\u91cd\u590d\u7b97\u4e86\uff1a\n\n![](https://img2020.cnblogs.com/blog/1748322/202107/1748322-20210713212334207-1424913332.png)\n\n\u5982\u56fe\uff0c\u4e24\u4e2a\u7070\u70b9\u4f5c\u6839\uff0c\u4e0e\u6df1\u7070\u70b9\u7684 $f_i$ \u65e0\u5173\u3002\n\n\u5219\u8bbe $g_i$ \u8868\u793a\u4ece\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811**\u5916**\u6269\u6563\u5230 $i$\uff0c\u6700\u957f\u82b1\u8d39\u7684\u65f6\u95f4\uff1a\n\n![](https://img2020.cnblogs.com/blog/1748322/202107/1748322-20210713211619371-203522207.png)\n\n\u5982\u56fe\uff0c\u9ed1\u6846\u5185\u5219\u8868\u793a\u4e3a\u7070\u70b9\u7684 $g_i$\u3002\u5219\u6709\uff1a\n\n$$g_u=\\max_{k=\\mathrm{fa}(x)}(g_k+\\mathrm{order}_k,\\max_{v\\in\\mathrm{son}(k),v\\ne u}\\{f_v+\\mathrm{order}_v\\})$$\n\n\u5b9e\u73b0\u65f6\u5efa\u8bae\u7531\u5f53\u524d\u8282\u70b9\u63a8\u51fa\u5b50\u8282\u70b9\u7684 $g_i$\u3002\n\n\u7edf\u8ba1\u7b54\u6848\u65f6\u5c31\u5728\u6392 $\\mathrm{order}_i$ \u65f6\u987a\u4fbf\u627e\u5230\u6700\u5927\u7684\u5373\u53ef\u3002\n",
        "postTime": 1626183222,
        "uid": 80695,
        "name": "Jayun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u8fde\u63a5\uff0c\u7ed9\u70b9\u70b9\u51fb\u91cf\u5427\uff01\uff01\uff01](https://blog.csdn.net/qq_43804974/article/details/104336166)\n\n\u9996\u5148\uff0c\u672c\u505a\u6cd5\u548c\u5176\u4ed6\u7684O(N^2logn)\u505a\u6cd5\u662f\u5b8c\u5168\u4e0d\u4e00\u6837\u7684\uff0c\u90a3\u79cd\u505a\u6cd5\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u6211\u8bf4\u4e00\u4e0b\u6211\u7684\u505a\u6cd5\uff0c~~*\u611fjio\u662fO(Nlogn)\uff0c\u4e0d\u592a\u4f1a\u7b97*~~ \n\n\u9996\u5148\u601d\u8003\u5982\u4f55\u83b7\u5f97\u6bcf\u4e00\u70b9\u8981\u5982\u4f55\u77e5\u9053\u7531\u5f53\u524d\u70b9\u51fa\u53d1\u7684\u7b54\u6848\u662f\u4ec0\u4e48\uff1f\u5bf9\u4e8e\u7edd\u5927\u90e8\u5206\u70b9\uff0c\u90fd\u6709\u7236\u4eb2\u8282\u70b9\u548c\u513f\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u90fd\u662f\u8fd9\u4e48\u6289\u62e9\u8d70\u7684\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ukbu093u.png)\n\n\u8fd9\u91cc\u5148\u4e0d\u770bnow\u70b9\uff0c\u770b\u8282\u70b91\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u4eba\u4ece\u8282\u70b91\u5f00\u59cb\u8981\u600e\u4e48\u8d70\u5462\uff1f\u5c31\u662f\u82b14\u6b21\u65f6\u95f4\uff0c \u5206\u522b\u8d704\u8df3\u8367\u5149\u7b14\u7684\u8def\u5f84\u5bf9\u5427\uff0c\u7136\u540e\u5c31\u6ca1\u8282\u70b91\u4ec0\u4e48\u4e8b\u60c5\u4e86\uff0c\u63a5\u4e0b\u6765\u7684\u8def\u8981\u9760\u5176\u4ed6\u70b9\u4ed6\u4eec\u81ea\u5df1\u53bb\u8d70\u3002\n\n\u6211\u4eec\u5047\u8bbe**f[i]\u4e3a\u4ecei\u70b9\u5f00\u59cb\u5f80\u4e0b\u8d70\u5b8c\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u65f6\u95f4**\uff0c\n**g[i]\u4e3a\u4ecei\u70b9\u5f00\u59cb\u5f80\u4e0a\u8d70\u5b8c\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u65f6\u95f4**\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e0a\u56fe\u800c\u8a00\uff0c\u8981\u83b7\u5f97\u8282\u70b91\u7684\u7b54\u6848\u5c31\u9700\u8981\u83b7\u53d6f\u6570\u7ec4\u548cg\u6570\u7ec4\u3002\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u5982\u4f55\u5f97\u51fa\u8fd9\u4e24\u4e2a\u4e1c\u897f\u3002\n\u5148\u601d\u8003f[i]\u600e\u4e48\u83b7\u5f97\uff0cf[i]\u662f\u5f80\u4e0b\u8d70\u7684\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u65f6\u95f4\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2ai\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4ed6\u6240\u6709\u7684\u513f\u5b50f[z]\u53bb\u8fdb\u884c\u6392\u5e8f\uff01\uff01\n\n\u7136\u540e\u4ecef[z]\u6bd4\u8f83\u5927\u7684\u8fd9\u4e2a\u513f\u5b50\u8282\u70b9\u5148\u8d70\uff0c\u5728\u8d70\u5176\u4ed6\u7684\uff0c\u4ece\u5927\u5230\u5c0f\u8d70\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8d70\u5462\uff1f\u8fd9\u662f\u7528\u4e86\u4e2a\u8d2a\u5fc3\u7684\u505a\u6cd5\uff01\uff01\uff01\n\n\u4ece\u4e00\u4e2a\u70b9\u8981\u8d70\u7684\u6b65\u6570\u591a\uff0c\u90a3\u4e48\u4f60\u5148\u8d70\u4ed6\u5c31\u53ef\u4ee5\u6bd4\u8f83\u5feb\u7684\u5b8c\u6210\u561b\uff0c\u6240\u4ee5\u6392\u4e2a\u5e8f\u540e\u8d2a\u5fc3\u7684\u62ff\u5c31\u597d\u4e86\uff0c\u7b2c\u4e00\u4e2a\u62ff\u7684\u5c31\u52a00\uff0c\u7b2c\u4e8c\u4e2a\u62ff\u7684\u5c31\u52a01\uff08\u56e0\u4e3a\u8981\u591a\u82b1\u989d\u5916\u7684\u65f6\u95f4\u624d\u80fd\u8d70\u8fd9\u6761\u8def\u7ebf\u662f\u4e0d\u662f\uff09\uff0c\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u6700\u540e\u53d6\u4e00\u4e2amax\uff0c\u4e00\u4e2a\u70b9\u7684\u5b8c\u6210\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u6700\u6162\u7684\u90a3\u4e2a\u65f6\u95f4\u3002\nf[i] = max(f[son] + v)\n\n\u4e0b\u4e00\u6b65\u662f\u8003\u8651g[i],\u601d\u8003\u4e00\u4e0bg[i]\u600e\u4e48\u6765\u7684\u8fd8\u662f\u8fd9\u4e2a\u56fe\n![](https://cdn.luogu.com.cn/upload/image_hosting/ukbu093u.png)\n\n\u73b0\u5728\u6211\u4eec\u770bnow\u70b9\uff0c\u8981\u7b97g[now]\u5c31\u662f\u8981\u7b97now\u70b9\u5f80\u4e0a\u8981\u591a\u4e45\u624d\u80fd\u8986\u76d6\u5168\u90e8\uff0c\u6240\u4ee5\u7c7b\u6bd4f\u6570\u7ec4\u7684\u6392\u5e8f\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u5bf9\n\n1 - 2\uff0c1 - 3\uff0c 1 - 4\n\n\u8fd9\u4e9b\u8fb9\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u8ba1\u7b97\u9644\u52a0\u6743\u503c\u53d6max\uff0c\u8fd9\u4e9b\u90fd\u548cf\u4e00\u6837\uff0c\u53ea\u662f\u4e0d\u540c\u7684\u662f1-now\u8fd9\u6761\u8fb9\u7684\u5fc5\u5b9a\u8981\u5148\u8d70\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u53ea\u6709\u4e00\u4e2a\u7236\u4eb2\u561b.\n\n\u4f60\u5f80\u4e0a\u8d70\u5c31\u53ea\u4f1a\u8d70\u8fd9\u6761\u8def\uff0c\u7136\u540e\u8d70\u5230now\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u5c31\u51fa\u73b0\u4e86\u5206\u652f\uff0c\u4f60\u5c31\u9700\u8981\u5bf9\u8fd9\u4e9b\u5206\u652f\u53bb\u8fdb\u884c\u8fdb\u884c\u6392\u5e8f\u64cd\u4f5c\u53d6max\u5c31\u53ef\u4ee5\u5f97\u5230g\u5566\n\n\n\u5728\u8fd9\u4e2a\u56fe\u91cc\u9762\uff0c\u5c31\u662f\u6bd4\u8f83g[2], f[3],f[4]\u7684\u5927\u5c0f\uff0c\u8fd9\u4e9b\u4f60\u770b\u662f\u4e0d\u662f\u6211\u4eec\u5728\u4e4b\u524d\u90fd\u7b97\u51fa\u6765\u4e86\u5462\u3002\n\n\u6700\u540e\u7b54\u6848\u4ec0\u4e48\u7b97?\u5217\u4e3ef[i]\u548cg[i]\u7684\u884c\u8d70\u987a\u5e8f\u53bb\u5f97\u7b54\u6848\u5417\uff1f\n\u5f88\u9057\u61be\u6211\u4eec\u4e0d\u80fd\u7b80\u5355\u7c97\u66b4\u7684\u7528\u8fd9\u4e2a\uff0c\u5728\u4ee3\u7801\u91cc\u9762\u4e5f\u6709\u6ce8\u91ca\u8bf4\u4e0d\u80fd\u90a3\u4e48\u5199\u3002\n\n\n\u8fd9\u6837\u5c31\u662f\u5bf9\u4e8e\u5148\u8d70\u4e0b\u9762\u5168\u90e8\u8d70\u5b8c\u5728\u8d70\u4e0a\u9762\u6216\u8005\u5148\u8d70\u4e0a\u9762\u5728\u8d70\u4e0b\u9762\uff0c\u8fd9\u6837\u5b50\u4f1awa\u4e00\u4e2a\u70b9\uff08\u5c31\u662f\u4ed6\u6570\u636e\u6c34\u624dAC\u8fd9\u4e48\u591a\uff09\uff0c\u4f60\u53ef\u80fd\u662f\u5148\u5728\u4e0b\u9762\u8d70\u4e00\u4e24\u6761\u8fb9\uff0c \u5728\u8d70\u4e0a\u9762\uff0c\u5728\u7ee7\u7eed\u8d70\u4e0b\u9762\uff0c \u6240\u4ee5\u8fd8\u9700\u8981\u5bf9\u4e8e\u8be5\u70b9\u8fde\u7740\u7684\u6240\u6709\u8fb9\u8fdb\u884c\u4e00\u6b21\u6392\u5e8f\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n\u5bf9\u4e8e\u4e0a\u9762\u90a3\u4e2a\u56fe\uff0c\u8981\u7b97\u8282\u70b91\uff0c\u5c31\u662f\u5bf9g[2],f[3],f[now],f[4]\u53bb\u6392\u5e8f\u7b97\u6743\u503c\u5c31\u597d\u4e86\u3002\n\n\n\u8fd9\u6837\u603b\u6765\u8bf4\u662f\u5c31\u662f\u8dd1\u4e24\u904ddfs\u5c31\u53ef\u4ee5\u51fa\u7b54\u6848\u62c9\u3002\u611f\u89c9\u5c31\u662fnlogn\uff0c\u5982\u679c\u4e0d\u662f\u8bf7\u6559\u6211\u7b97~\u6700\u540e\u4ee3\u7801\u65b9\u9762\u4e0d\u5f00O2\u662f\u8dd1\u4e8648ms\uff0c\u5f00\u4e86o2\u662f\u8dd1\u4e8633ms\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst long long max_ = 5000 + 7;\nint read() {\n\tint s = 0, f = 1;\n\tchar ch = getchar();\n\twhile (ch<'0' || ch>'9') {\n\t\tif (ch == '-')\n\t\t\tf = -1;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0'&&ch <= '9') {\n\t\ts = s * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn s * f;\n}\nbool cmp(int a, int b) {\n\treturn a > b;\n}\nint temp[max_], tn = 0, n, f[max_], g[max_], father[max_], value[max_];\nvector<int> xian[max_];\nvoid dfs(int now, int fa) {\n\tfather[now] = fa;\n\t//\u7b97i\u5f80\u4e0b\u9700\u8981\u591a\u5c11\u624d\u53ef\u4ee5\u4f20\u9012\u5b8c\u6240\u6709\u4eba\n\tfor (int i = 0; i < xian[now].size(); i++) {\n\t\tint to = xian[now][i];\n\t\tif (to == fa)continue;\n\t\tdfs(to, now);\n\t}\n\ttn = 0;\n\tfor (int i = 0; i < xian[now].size(); i++) {\n\t\tint to = xian[now][i];\n\t\tif (to == fa)continue;\n\t\ttemp[++tn] = f[to];\n\t}\n\tsort(temp + 1, temp + 1 + tn, cmp);\n\tint v = 0;\n\tfor (int i = 1, j = 1; i <= tn; j++, i++) {\n\t\tv = max(v, temp[i] + j);\n\t}\n\tf[now] = v;\n}\nvoid dfs2(int now, int fa) {\n\ttn = 0;\n\t//\u9996\u5148\u82b1\u8d391\u7684\u4ef7\u503c\u5230\u8fbe\u7236\u4eb2\u8282\u70b9\uff0c\u7136\u540e\u5224\u65ad\u4ece\u7236\u4eb2\u8282\u70b9\u5f80\u54ea\u91cc\u8d70\n\tif (father[fa])\n\t\ttemp[++tn] = g[fa];\n\tfor (int i = 0; i < xian[fa].size(); i++) {\n\t\tint to = xian[fa][i];\n\t\tif (to == father[fa] || to == now)continue;\n\t\ttemp[++tn] = f[to] + 1;\n\t}\n\tsort(temp + 1, temp + 1 + tn, cmp);\n\tint v = 0;\n\tfor (int i = 1, j = 0; i <= tn; j++, i++) {\n\t\tv = max(v, temp[i] + j);\n\t}\n\tg[now] = v; if (now != 1)g[now]++;\n\tfor (int i = 0; i < xian[now].size(); i++) {\n\t\tint to = xian[now][i];\n\t\tif (to == fa)continue;\n\t\tdfs2(to, now);\n\t}\n}\nint main() {\n\tn = read();\n\tfor (int i = 2; i <= n; i++) {\n\t\tint a = read();\n\t\txian[a].push_back(i);\n\t\txian[i].push_back(a);\n\t}\n\tdfs(1, 0);\n\tdfs2(1, 0);\n\tint ans = f[1];\n\tvalue[1] = f[1];\n\tfor (int i = 2; i <= n; i++) {\n\t/*\tvalue[i] = max(max(f[i], g[i]), min(f[i], g[i]) + 1);\u8fd9\u662f\u9519\u8bef\u7684\uff01\uff01\n\t\tans = min(ans, value[i]);*/\n\t\ttn = 0;\n\t\ttemp[++tn] = g[i] - 1;\n\t\tfor (int j = 0; j < xian[i].size(); j++) {\n\t\t\tint to = xian[i][j];\n\t\t\tif (to == father[i])continue;\n\t\t\ttemp[++tn] = f[to];\n\t\t}\n\t\tsort(temp + 1, temp + 1 + tn, cmp);\n\t\tint v = 0;\n\t\tfor (int x = 1, j = 1; x <= tn; j++, x++) {\n\t\t\tv = max(v, temp[x] + j);\n\t\t}\n\t\tvalue[i] = v;\n\t\tans = min(ans, value[i]);\n\t}\n\tcout << ans + 1 << endl;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (value[i] == ans) {\n\t\t\tcout << i << \" \";\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1581810793,
        "uid": 156874,
        "name": "Boxxxxxx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u5f88\u57fa\u672c\u7684\u4e00\u9053\u6811\u5f62DP\u7684\u6a21\u677f\u9898\n\n\u53ea\u8981\u5bf9\u6bcf\u4e2a\u70b9\u8bb0\u5fc6\u5316\u641c\u7d22\u5373\u53ef\n\n\u641c\u5b8c\u6bcf\u4e2a\u5b50\u8282\u70b9\uff0c\u6392\u5e8f\u540e\uff0c\u5c06\u8981\u82b1\u65f6\u95f4\u6700\u591a\u7684\u8282\u70b9\u5148\u8fd0\u884c\n\n\u53d6\u6700\u540e\u8fd0\u884c\u65f6\u95f4\u7684\u6700\u5927\u503c\n\n\u4eba\u50bb\u5e38\u6570\u5927\n\n\u8dd1\u4e8641ms\n\n```cpp\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<time.h>\n#include<queue>\n#include<stack>\n#define M 10100\n#define inf 0x3f3f3f3f\n#define LL long long\nusing namespace std;\nint n,dp[1100][1100],head[M],cnt,ans[M],minx=inf;\nstruct edge{\n\tint next,to;\n}e[M];\nvoid add(int a,int b)\n{\n\te[++cnt].next=head[a];\n\te[cnt].to=b;\n\thead[a]=cnt;\n}\nint read()\n{\n\tint f=1;char s=getchar();int x=0;\n\twhile (!('0'<=s&&s<='9'))\n\t{\n\t\tif (s=='-')\n\t\t\tf=-1;\n\t\ts=getchar();\n\t}\n\twhile ('0'<=s&&s<='9')\n\t{\n\t\tx=(x<<3)+(x<<1)+(s^48);\n\t\ts=getchar(); \n\t}\n\tx*=f;\n\treturn x;\n}\nvoid dfs(int now,int fa)\n{\n\tint tmp[M],cnte=0,maxx=0;\n\tif(dp[now][fa])\n\t{\n\t\treturn;\n\t}\n\tfor (int i=head[now];i;i=e[i].next)\n\t{\n\t\tif (e[i].to==fa)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tdfs(e[i].to,now);\n\t\ttmp[++cnte]=dp[e[i].to][now];\n\t}\n\tsort(tmp+1,tmp+cnte+1,greater<int>());\n\tfor (int i=1;i<=cnte;i++)\n\t{\n\t\ttmp[i]+=i;\n\t\tmaxx=max(maxx,tmp[i]);\n\t}\n\tdp[now][fa]=maxx;\n}\nint main()\n{\n\tn=read();\n\tfor (int i=2;i<=n;i++)\n\t{\n\t\tint r=read();\n\t\tadd(i,r);\n\t\tadd(r,i);\n\t}\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tdfs(i,0);\n\t\tif (dp[i][0]<minx)\n\t\t{\n\t\t\tans[0]=0;\n\t\t\tminx=dp[i][0];\n\t\t}\n\t\tif (minx==dp[i][0])\n\t\t{\n\t\t\tans[++ans[0]]=i;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",minx+1);\n\tfor (int i=1;i<=ans[0];i++)\n\t{\n\t\tprintf(\"%d \",ans[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1567581572,
        "uid": 78290,
        "name": "Polaris_Dane",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\n\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u535a\u5ba2\uff0c\u8fd9\u91cc\u9605\u8bfb\u4f53\u9a8c\u66f4\u597d\n[\u535a\u5ba2\u4f20\u9001\u95e8](https://www.cnblogs.com/ifmyt/p/9638724.html)\n\n# \u6d88\u606f\u4f20\u9012\n\n## \u89e3\u9898\u601d\u8def\n\u4e00\u5f00\u59cb\u600e\u4e48\u89c9\u5f97\u90a3\u4e48\u96be\uff0c\u540e\u6765\u7a0d\u5fae\u4e00\u95eemjt\u5927\u4f6c\u600e\u4e48\u90a3\u4e48\u7b80\u5355\uff1f\n\u610f\u601d\u5c31\u662f\u4f60\u9009\u4e00\u4e2a\u4eba\u8fdb\u884c\u6d88\u606f\u4f20\u9012\uff0c\u7136\u540e\u6c42\u6700\u5c11\u65f6\u95f4\u3002\n\n\u6240\u4ee5\u6bcf\u4e2a\u70b9\u90fd\u6709\u5f53\u6839\u8282\u70b9\u7684\u673a\u4f1a\uff0c\u904d\u5386\u6839\u8282\u70b9\u3002\n\u7136\u540e\u5c31\u662f\u513f\u5b50\u8282\u70b9\u7684\u95ee\u9898\u4e86\uff0c\u7136\u540e\u5c31\u7528\u5230\u4e86\u8d2a\u5fc3\u601d\u60f3\u3002\n\u56e0\u4e3a\u4f60\u8981\u5148\u544a\u8bc9\u82b1\u8d39\u65f6\u95f4\u957f\u7684\u5457\uff0c\u7136\u540e\u518d\u544a\u8bc9\u65f6\u95f4\u77ed\u7684\u3002\n\u7136\u540e\u5c31\u662f\u5f88\u7b80\u5355\u7684\u6811\u5f62dp\u4e86\uff0c\u8f6c\u79fb\u65b9\u7a0b$$dp[u]=max(dp[u],dp[v]+i-1)$$\n\n## \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\nint n;\nstruct edge\n{\n    int next,to;\n}e[2000];\nint head[2000],tot,dp[2000],ins[2000];\nvoid add(int x,int y){\n    e[++tot].next = head[x];\n    head[x] = tot;\n    e[tot].to = y;\n}\nbool cmp(int x,int y){\n    return x>y;\n}\nint minn=0x7fffffff,a[1001];\nvoid dfs(int x,int f){\n    int b[550] = {0},cnt = 0;\n    for(int i=head[x];i;i=e[i].next){\n        int v=e[i].to;\n        if(v==f)continue;\n        dfs(v,x);\n        b[++cnt]=dp[v];\n    }\n    sort(b+1,b+1+cnt,cmp);\n    for(int i=1;i<=cnt;i++)\n        dp[x]=max(dp[x],b[i]+i-1);\n    dp[x] += 1;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=2;i<=n;i++){\n        int a;\n        scanf(\"%d\",&a);\n        add(a,i);\n        add(i,a);\n    }\n    for(int i=1;i<=n;i++){\n        memset(dp,0,sizeof(dp));\n        dfs(i,0);\n        minn=min(minn,dp[i]);\n        ins[i]=dp[i];\n    }\n    printf(\"%d\\n\",minn);\n    for(int i=1;i<=n;i++)if(minn==ins[i])printf(\"%d \",i);\n}\n```",
        "postTime": 1536881765,
        "uid": 78228,
        "name": "\u6211\u6ca1\u6709\u5c0f\u767d",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2018 \u3010\u6d88\u606f\u4f20\u9012\u3011"
    }
]