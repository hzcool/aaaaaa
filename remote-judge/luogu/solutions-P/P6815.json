[
    {
        "content": "[P6815 [PA2009]Cakes](https://www.luogu.com.cn/problem/P6815)\n\n\u9898\u76ee\u76f4\u63a5\u70b9\u51fa\u4e09\u5143\u73af\u4e86\uff0c\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u3002\n\n\u5b9a\u4e49\uff1a\u4e09\u5143\u73af\u662f\u6307\u5bf9\u4e8e\u56fe\u4e0a\u7684\u4e09\u4e2a\u70b9\uff0c\u4e24\u4e24\u70b9\u4e4b\u95f4\u90fd\u76f4\u63a5\u6709\u8fb9\u76f8\u8fde\uff0c\u8fd9\u4e09\u4e2a\u70b9\u7ec4\u6210\u7684\u73af\u5c31\u662f\u4e09\u5143\u73af\u3002\n\n\u4e09\u5143\u73af\u7684\u8ba1\u6570\u65b9\u6cd5\uff1a\u8bb0\u5f55\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8fb9\u5c06\u5b83\u5b9a\u5411\u3002\u5bf9\u4e8e\u4e00\u6761\u8fb9\uff0c\u5c06\u5ea6\u6570\u5927\u7684\u70b9\u6307\u5411\u5ea6\u6570\u5c0f\u7684\u70b9\uff0c\u5982\u679c\u5ea6\u6570\u76f8\u540c\u5c31\u5c06\u7f16\u53f7\u5c0f\u7684\u70b9\u6307\u5411\u7f16\u53f7\u5927\u7684\u70b9\u3002\u8ba1\u6570\u65f6\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9  x  \u679a\u4e3e\u5b83\u7684\u51fa\u8fb9\uff0c\u5e76\u5c06\u51fa\u8fb9\u6307\u5411\u7684\u70b9  y  \u6253\u6807\u8bb0\uff0c\u5bf9\u4e8e\u6240\u6709\u51fa\u8fb9\u6307\u5411\u7684\u70b9  y  \u518d\u679a\u4e3e\u51fa\u8fb9\uff0c\u5982\u679c\u8fd9\u4e2a\u51fa\u8fb9\u6307\u5411\u7684\u70b9  z  \u88ab\u6253\u4e86\u6807\u8bb0\uff0c\u90a3\u4e48  x,y,z  \u5c31\u7ec4\u6210\u4e86\u4e00\u4e2a\u4e09\u5143\u73af\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $ O(m \\cdot \\sqrt{m}) $\u3002\n\n\u6027\u8d28\uff1a\n\n1\u3001\u8fd9\u4e00\u5b9a\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u3002\n\n2\u3001\u6bcf\u4e2a\u4e09\u5143\u73af\u53ea\u4f1a\u88ab\u7edf\u8ba1\u4e00\u6b21\u3002\n\n~~\uff08\u600e\u4e48\u8bc1\u660e\u8bf7\u81ea\u5df1\u601d\u8003\uff09~~\n\n\u8fd9\u4e2a\u9898\u76f4\u63a5\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u8ba1\u7b97\u5373\u53ef\u3002\n\n\n# AC 100pts Code\n```cpp\n\n# include <iostream>\n# include <cstdio>\n# include <vector>\nusing namespace std;\nstatic char buf[1000000],*p1=buf,*p2=buf,obuf[1000000],*p3=obuf;\n#define getchar() p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++\n#define putchar(x) (p3-obuf<1000000)?(*p3++=x):(fwrite(obuf,p3-obuf,1,stdout),p3=obuf,*p3++=x)\ntemplate<typename item>\ninline void read(register item &x)\n{\n    x=0;register char c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n}\nstatic char cc[10000];\ntemplate<typename item>\ninline void print(register item x)\n{ \n\tregister long long len=0;\n\twhile(x)cc[len++]=x%10+'0',x/=10;\n\twhile(len--)putchar(cc[len]);\n}\nconst int maxn = 2e6 + 5;\ntypedef long long ll;\nll ans = 0;\nint n , m;\nint w[maxn];\ntypedef struct {\n\tint x , y;\n}ed;\ned N[maxn];\nint x , y;\n\nvector<int> g[maxn];\nint deg[maxn];\nint mark[maxn];\nint main() {\n    read(n);\n    read(m);\n\tfor (int i = 1 ; i <= n ; i ++) {\n\t\tread(w[i]);\n\t}\n\tfor (int i = 1 ; i <= m ; i ++) {\n\t\tread(x);\n\t\tread(y);\n\t\tdeg[x] ++;\n\t\tdeg[y] ++;\n\t\tN[i].x = x;\n\t\tN[i].y = y;\n\t}\n\tfor (int i = 1 ; i <= m ; i ++) {\n\t\tint x = N[i].x , y = N[i].y;\n\t\tif (deg[x] > deg[y] || (deg[x] == deg[y] && x < y)) swap(x , y);\n\t\tg[x].push_back(y);\n\t}\n\t\n\tfor (int x = 1 ; x <= n ; x ++) {\n\t\tfor (int i = 0 ; i < g[x].size() ; i ++) {\n\t\t\tmark[g[x][i]] = x;\n\t\t}\n\t\tfor (int i = 0 ; i < g[x].size() ; i ++) {\n\t\t    int e = g[x][i];\n\t\t    for (int j = 0 ; j < g[e].size() ; j ++) {\n\t\t        int endd = g[e][j];\n\t\t        if (mark[endd] == x) ans += max(w[x] , max(w[e] , w[endd]));\n\t\t    }\n\t\t}\n\t}\n\tprintf(\"%lld\\n\" , ans);\n\tfwrite(obuf,p3-obuf,1,stdout);\n\treturn 0;\n}\n```\n",
        "postTime": 1626271174,
        "uid": 335477,
        "name": "ker_xyxyxyx_xxs",
        "ccfLevel": 0,
        "title": "P6815 [PA2009]Cakes"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u56fe\uff0c\u70b9 $i$ \u6709\u6743\u503c $a_i$\uff0c\u4e00\u4e2a\u4e09\u5143\u73af $(i,j,k)$ \u7684\u8d21\u732e\u4e3a $\\max(a_i,a_j,a_k)$\uff0c\u6c42\u6240\u6709\u4e09\u5143\u73af\u7684\u8d21\u732e\u4e4b\u548c\u3002\n\n$\\texttt{Data Range:}1\\leq n\\leq 10^5,1\\leq m\\leq 3\\times 10^5$\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13618318.html)\n\n\u6240\u8c13\u7684\u4e09\u5143\u73af\u8ba1\u6570\u5176\u5b9e\u5c31\u662f\u4e2a\u4f18\u96c5\u7684\u66b4\u529b\u3002\n\n\u8003\u8651\u5c06\u539f\u56fe\u7684\u8fb9\u5b9a\u5411\uff1a\u5ea6\u6570\u5927\u7684\u8fde\u5411\u5ea6\u6570\u5c0f\u7684\uff0c\u5ea6\u6570\u4e00\u6837\u5219\u7f16\u53f7\u5927\u7684\u8fde\u5411\u7f16\u53f7\u5c0f\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u56fe\u6709\u4e00\u4e9b\u7279\u6b8a\u6027\u8d28\uff1a\n\n- \u7531\u4e8e\u4e25\u683c\u89c4\u5b9a\u4e86\u8fde\u8fb9\u7684\u65b9\u5411\uff0c\u6240\u4ee5\u8fd9\u4e2a\u56fe\u662f\u4e2a DAG\u3002\n\n- \u5982\u679c\u4e00\u4e2a\u70b9\u5728\u539f\u56fe\u4e2d\u5ea6\u6570\u5927\u4e8e $\\sqrt{m}$\uff0c\u6ce8\u610f\u5230\u8fd9\u4e2a\u70b9\u53ea\u80fd\u5411\u539f\u56fe\u4e0d\u5c0f\u4e8e\u5b83\u7684\u70b9\u8fde\u8fb9\uff0c\u800c\u4e14\u539f\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u4e4b\u548c\u662f $O(m)$\uff0c\u6240\u4ee5\u8fd9\u4e2a\u70b9\u5728\u65b0\u56fe\u4e0a\u7684\u51fa\u5ea6\u4e3a $O(\\sqrt{m})$\u3002\n\n- \u5982\u679c\u4e00\u4e2a\u70b9\u5728\u539f\u56fe\u4e2d\u5ea6\u6570\u4e0d\u5927\u4e8e $\\sqrt{m}$\uff0c\u7531\u4e8e\u65b0\u56fe\u4e2d\u7684\u51fa\u5ea6\u4e0d\u53ef\u80fd\u6bd4\u539f\u56fe\u8fd8\u5927\uff0c\u6240\u4ee5\u8fd9\u4e2a\u70b9\u5728\u65b0\u56fe\u4e0a\u7684\u51fa\u5ea6\u4e3a $O(\\sqrt{m})$\u3002\n\n\u6240\u4ee5\u5efa\u5b8c\u56fe\u4e4b\u540e\u66b4\u529b\u679a\u4e3e\u5373\u53ef\uff0c\u56e0\u4e3a\u51fa\u5ea6\u4e3a $O(\\sqrt{m})$ \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6253\u6807\u8bb0\u7684\u65b9\u6cd5\u5feb\u901f\u67e5\u8be2\u4e00\u4e2a\u70b9\u80fd\u4e0d\u80fd\u76f4\u63a5\u5230\u8fbe\u53e6\u4e00\u4e2a\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\sqrt{m})$\u3002\n\n\u6ce8\u610f\u4e00\u4e0b\u6570\u4e09\u5143\u73af\u7684\u65f6\u5019\u7528\u90bb\u63a5\u8868\u5b58\u65b0\u56fe\u7531\u4e8e\u5185\u5b58\u8bbf\u95ee\u4e0d\u8fde\u7eed\u6240\u4ee5\u6ca1 vector \u5b58\u56fe\u8dd1\u5f97\u5feb\uff0c\u5728\u8fd9\u9898\u7684\u76f4\u63a5\u540e\u679c\u5c31\u662f\u88ab\u5361\u5e38\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=3e5+51; \nll n,m;\nli res;\nvector<ll>g[MAXN];\nll vis[MAXN],deg[MAXN],from[MAXN],to[MAXN],w[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tw[i]=read();\n\t}\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tdeg[from[i]=read()]++,deg[to[i]=read()]++;\n\t}\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tif(deg[from[i]]>deg[to[i]]||(deg[from[i]]==deg[to[i]]&&from[i]>to[i]))\n\t\t{\n\t\t\tswap(from[i],to[i]);\n\t\t}\n\t\tg[from[i]].emplace_back(to[i]);\n\t}\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tfor(register int j:g[i])\n\t\t{\n\t\t\tvis[j]=1;\n\t\t}\n\t\tfor(register int j:g[i])\n\t\t{\n\t\t\tfor(register int k:g[j])\n\t\t\t{\n\t\t\t\tres+=vis[k]*max(w[i],max(w[j],w[k]));\n\t\t\t}\n\t\t} \n\t\tfor(register int j:g[i])\n\t\t{\n\t\t\tvis[j]=0;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",res);\n}\n```",
        "postTime": 1599290221,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6815 \u3010[PA2009]Cakes\u3011"
    },
    {
        "content": "\u5148\u7ed9\u51e0\u4e2a\u5173\u4e8e\u4e09\u5143\u73af\uff08\u4e09\u4e2a\u70b9\u7531\u4e09\u6761\u8fb9\u4e92\u76f8\u8fde\u63a5\uff09\u7684\u7ed3\u8bba\uff1a  \n\u8fd9\u91cc\u5c31\u8bf4\u4e00\u79cd\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u5b9a\u5411\u6cd5\u5427  \n\u6211\u4eec\u5148\u62ff\u5230\u7684\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u628a\u5b83\u53d8\u6210\u6709\u5411\u56fe\uff0c\u8fd9\u6837\u66f4\u65b9\u4fbf\u8ba8\u8bba  \n\u7136\u540e\u6211\u4eec\u7ed9\u6bcf\u6761\u65e0\u5411\u8fb9\u5b9a\u5411\uff0c\u6211\u4eec\u89c4\u5b9a\u6bcf\u4e00\u6761\u8fb9\u8fb9\u7684\u65b9\u5411\u7531\u5ea6\u6570\u8f83\u5c0f\u7684\u8282\u70b9\u6307\u5411\u8f83\u5927\u7684\u8282\u70b9\uff0c\u82e5\u5ea6\u6570\u76f8\u540c\uff0c\u5219\u7531\u5927\u7f16\u53f7\u8282\u70b9\u6307\u5411\u5c0f\u7f16\u53f7\u8282\u70b9\uff08\u5ea6\u6570\u90fd\u4e3a\u65e0\u5411\u56fe\u4e2d\u7684\u5ea6\u6570\uff0c\u5c31\u662f\u8fd9\u4e2a\u70b9\u88ab\u591a\u5c11\u8fb9\u6240\u8fde\uff09  \n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cd\u8bc1\u6cd5\uff0c\u8bc1\u660e\u4ee5\u4e0b\u4e24\u4e2a\u7ed3\u8bba\uff0c\u5f88\u597d\u8bc1\u660e\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u5c31\u4e0d\u8bc1\u660e\u4e86\uff0c\u76f4\u63a5\u7ed9\u7ed3\u8bba\uff1a  \n1.\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u6570\u90fd\u4e0d\u5927\u4e8e$\\sqrt m$\uff08 $m$ \u4e3a\u8fb9\u6570\uff09  \n2.\u65b0\u7684\u6709\u5411\u56fe\u4e00\u5b9a\u662f\u6709\u5411\u65e0\u73af\u56fe  \n\n\u597d\u77e5\u9053\u8fd9\u90fd\u4e9b\u5176\u5b9e\u5c31\u662f\u7528\u6765\u8bc1\u660e\u590d\u6742\u5ea6\u7684\uff0c\u5177\u4f53\u7684\u89e3\u6cd5\u53ea\u5efa\u7acb\u4e8e\u53d8\u6210\u6709\u5411\u56fe\u5c31\u53ef\u4ee5\u4e86    \n\u597d\uff0c\u73b0\u5728\u5982\u679c\u6211\u4eec\u7528\u66b4\u529b\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u600e\u4e48\u66b4\u529b\uff0c\u60f3\u4e00\u60f3  \n\u9009\u4e2a\u70b9\uff0c\u7136\u540e\u4ed6\u53ef\u4ee5\u5230\u8fbe\u4e00\u4e9b\u70b9\uff0c\u5982\u679c\u8fd9\u4e9b\u70b9\u7531\u4e24\u4e2a\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\uff0c\u5219\u4e00\u5b9a\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e09\u5143\u73af  \n\u5176\u5b9e\u8fd9\u9898\u4e5f\u662f\u8fd9\u4e2a\u601d\u8def  \n\u7528\u7c7b\u4f3c\u4e8e\u67d3\u8272\u7684\u601d\u8def\u5427\uff08\u4e0d\u662f\u4e8c\u5206\u56fe\uff01\uff01\uff01\uff09\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9 $p$ \u628a\u5b83\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u7684\u989c\u8272\u90fd\u67d3\u6210 $p$ \u5982\u679c\u6709\u88ab\u6807\u8bb0\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u4e5f\u6709\u4e00\u6761\u8fb9\u5219\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e09\u4e2a\u70b9\u7ec4\u6210\u4e86\u4e00\u4e2a\u4e09\u5143\u73af\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u7b97\u8d21\u732e\u76f8\u52a0\u5c31\u53ef\u4ee5\u4e86  \n\n\u597d\u50cf\u5f88\u591a\u4eba\u8bf4\u94fe\u5f0f\u524d\u5411\u661f\u4f1a\u88ab\u5361\u6389\uff1f\uff1f\uff1f\u5176\u5b9e\u7406\u8bba\u4e0a\u662f\u8fd9\u6837\u7684\uff0c\u56e0\u4e3a\u5185\u5b58\u8bbf\u95ee\u4e0d\u8fde\u7eed\u561b\uff0c\u4f46\u662f\u8fd9\u9898\u5f00 $O2$ \u5c31\u53ef\u4ee5\u8fc7\u4e86\uff0c\u5f53\u7136 $vector$ \u4e5f\u662f\u975e\u5e38\u597d\u800c\u4e14\u5f88\u5b9e\u7528\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u6211\u5efa\u8bae\u8fd8\u662f\u591a\u7528\u94fe\u5f0f\u5b58\u5427\uff0c\u56e0\u4e3a\u6bd4\u8f83\u65b9\u4fbf\u548c\u666e\u904d\u7684\u56fe\u8bba\u6811\u8bba\u90fd\u5b9e\u7528\uff0c\u5177\u4f53\u9898\u76ee\u5177\u4f53\u5206\u6790\u5427  \n\u4ee3\u7801\u5982\u4e0b\uff1a  \n$1.$\u524d\u5411\u661f\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<vector>\n#define ll long long\nusing namespace std;\nconst int N=500010;\ninline int read()\n{\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-') f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0',c=getchar();}\n    return x*f;\n}\nint n,m;\nstruct lxh{int from,to;}b[N];\nstruct MS{int to,next;}e[N];\nint elast[N],k;\nvoid add(int x,int y)\n{\n\te[++k].to=y;\n\te[k].next=elast[x];\n\telast[x]=k;\n}\nint du[N],color[N];\nint a[N];\nll ans;\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tb[i].from=read(),b[i].to=read();\n\t\tdu[b[i].from]++,du[b[i].to]++;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=b[i].from,y=b[i].to;\n\t\tif(du[x]<du[y]||(du[x]==du[y]&&x<y))swap(x,y);\n\t\tadd(x,y);\t\n\t}\n\tfor(int p=1;p<=n;p++)\n\t{\n\t\tfor(int i=elast[p];i;i=e[i].next)color[e[i].to]=p;\n\t\tfor(int i=elast[p];i;i=e[i].next)\n\t\t\tfor(int j=elast[e[i].to];j;j=e[j].next)\n\t\t\t\tif(color[e[j].to]==p)ans+=max(a[p],max(a[e[i].to],a[e[j].to]));\n\t}\n\tprintf(\"%lld\",ans);\t\n}\n```\n\n$2. $ $vector$  \n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<vector>\n#define ll long long\nusing namespace std;\nconst int N=500010;\ninline int read()\n{\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-') f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0',c=getchar();}\n    return x*f;\n}\nint n,m;\nstruct lxh{int from,to;}b[N];\nvector<int>e[N];\nint du[N],color[N];\nint a[N];\nll ans;\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&b[i].from,&b[i].to);\n\t\tdu[b[i].from]++,du[b[i].to]++;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=b[i].from,y=b[i].to;\n\t\tif(du[x]<du[y]||(du[x]==du[y]&&x<y))swap(x,y);\n\t\te[x].push_back(y);\n\t}\n\tfor(int p=1;p<=n;p++)\n\t{\n\t\tfor(int i=0;i<e[p].size();i++)color[e[p][i]]=p;\n\t\tfor(int i=0;i<e[p].size();i++)\n\t\t\tfor(int j=0;j<e[e[p][i]].size();j++)\n\t\t\t\tif(color[e[e[p][i]][j]]==p)ans+=max(a[p],max(a[e[p][i]],a[e[e[p][i]][j]]));\n\t}\n\tprintf(\"%lld\",ans);\n}\n```\n",
        "postTime": 1626270824,
        "uid": 247269,
        "name": "MSqwq",
        "ccfLevel": 0,
        "title": "[PA2009]Cakes"
    },
    {
        "content": "## \u9898\u610f\n\u8ba1\u7b97\u6240\u6709\u4e09\u5143\u73af\u7684\u8d21\u732e\u3002[$QWQ$](https://www.luogu.com.cn/blog/xzc/solution-p6815)\n## \u5206\u6790\n\u8003\u8651\u8fb9\u5b9a\u5411\u3002\u5ea6\u6570\u5927\u7684\u70b9\u8fde\u5411\u5ea6\u6570\u5c0f\u7684\uff0c\u5982\u679c\u5ea6\u6570\u76f8\u540c\u90a3\u4e48\u7f16\u53f7\u5927\u7684\u8fde\u5411\u7f16\u53f7\u5c0f\u7684\u3002\u8003\u8651\u8fd9\u6837\u4e4b\u540e\u6709\u4ec0\u4e48\u7279\u6b8a\u6027\u8d28\u3002\n\n- \u65b0\u56fe\u4e00\u5b9a\u662f $DAG$ \uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u662f\u6709\u5927\u5c0f\u5173\u7cfb\u7684\uff0c\u53ea\u6709\u53ef\u80fd\u5927\u7684\u8fde\u5411\u5c0f\u7684\u3002\n\n- \u5982\u679c\u4e00\u4e2a\u70b9\u7684\u51fa\u5ea6\u5927\u4e8e $\\sqrt{m}$ \uff0c\u90a3\u4e48\u6700\u591a\u53ea\u6709 $\\sqrt{m}$ \u4e2a\u8282\u70b9\u6307\u5411\u5b83\u3002\n\n- \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u51fa\u5ea6\u5c0f\u4e8e $\\sqrt{m}$ \uff0c\u90a3\u4e48\u6700\u591a\u53ea\u6709 $n$ \u4e2a\u8282\u70b9\u6307\u5411\u5b83\u3002\n\n\u90a3\u4e48\u679a\u4e3e\u4e09\u5143\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4e3a $O(m\\times \\sqrt{m})$ \uff0c\u800c\u4e14\u679a\u4e3e\u7684\u4e09\u5143\u73af\u4e0d\u91cd\u4e0d\u6f0f\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 260000;\nint read() {\n\tint x=0,f=0;char ch=getchar();\n\twhile(!isdigit(ch)) {if(ch=='-')f=1;ch=getchar();}\n\twhile(isdigit(ch)) {x=x*10+ch-'0';ch=getchar();}\n\treturn f?-x:x;\n}\nvector<int> G[N];\nint e[N][2],n,m,val[N],du[N],vis[N];\nint main()\n{\n\tn = read();m = read();\n\tfor(int i = 1;i <= n;i++) val[i] = read();\n\tfor(int i = 1;i <= m;i++) {\n\t\te[i][0] = read();e[i][1] = read();\n\t\tdu[e[i][0]] ++;du[e[i][1]] ++;\n\t}\n\tfor(int i = 1;i <= m;i++) {\n\t\tif(du[e[i][0]] < du[e[i][1]]||(du[e[i][0]]==du[e[i][1]] && e[i][1]>e[i][0])) swap(e[i][0],e[i][1]);\n\t\tG[e[i][0]].push_back(e[i][1]);\n\t}\n\tlong long ans = 0;\n\tfor(int x = 1;x <= n;x++){\n\t\tfor(auto y: G[x]) vis[y] = x;\n\t\tfor(auto y: G[x]) {\n\t\t\tfor(auto z:G[y]){\n\t\t\t\tif(vis[z] == x)\n\t\t\t\tans += max(val[x],max(val[y],val[z]));\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1599139427,
        "uid": 227824,
        "name": "JK_LOVER",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6815 \u3010[PA2009]Cakes\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7565\u5fae\u5361\u5e38\uff0c\u5982\u679c\u4f7f\u7528\u90bb\u63a5\u94fe\u8868\u50a8\u5b58\u4f1a\u4e0d\u5982\u7528 $\\rm vector$ \u5b58\u56fe\uff0c\u56e0\u4e3a\u7528\u90bb\u63a5\u94fe\u8868\u5b58\u56fe\u4f1a\u5bfc\u81f4\u5185\u5b58\u8bbf\u95ee\u4e0d\u8fde\u7eed\u3002\u4f46\u6211\u4eec\u77e5\u9053 $\\verb!O2!$ \u4f18\u5316\u53ef\u4ee5\u4f18\u5316\u6389\u8fd9\u4e2a\u95ee\u9898\uff0c\u6240\u4ee5\u5f00 $\\verb!O2!$ \u4e4b\u540e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n# \u9898\u76ee\u5927\u610f\n\n\u4e00\u4e2a\u6709 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u70b9\u6743 $a$\u3002\n\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u4e09\u5143\u73af $(i,j,k)(i\\lt j\\lt k)$\uff0c\u5b83\u7684\u8d21\u732e\u4e3a $\\max \\{a_i,a_j,a_k\\}$\u3002\n\n\u6c42\u6240\u6709\u4e09\u5143\u73af\u7684\u8d21\u732e\u548c\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u600e\u4e48\u5feb\u901f\u627e\u5230\u4e09\u5143\u73af\uff1f\n\n\u8003\u8651\u7ed9\u6240\u6709\u8fb9\u4e00\u4e2a\u65b9\u5411\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u8fde\u8fb9\u89c4\u5219\uff08\u4ee4 $deg[i]$ \u8868\u793a $i$ \u7684\u5ea6\uff09\uff1a\n\n\u8fde\u8fb9 $u\\to v$ \u5f53\u4e14\u4ec5\u5f53\n\n+ $deg[u]\\lt deg[v]$\n\n+ $deg[u]=deg[v]$ \u4e14 $u\\lt v$\n\n\u901a\u8fc7\u8fd9\u6837\u7684\u89c4\u5219\u8fde\u51fa\u6765\u56fe $G$\uff0c\u8003\u8651\u8fb9 $(u,v)$\uff0c\u82e5\u6709 $(v,w)$ \u548c $(u,w)$ \u5219\u4e00\u5b9a\u6709\u4e09\u5143\u73af\u3002\u5177\u4f53\u5730\uff0c\u53ef\u4ee5\u5148\u628a $u$ \u7684\u6240\u6709\u51fa\u8fb9\u6240\u6307\u5411\u7684\u70b9\u6253\u4e0a\u6807\u8bb0\uff0c\u8fd9\u6837\u4ece $v$ \u5f00\u59cb\u679a\u4e3e\u65f6\u5c31\u80fd\u591f\u5feb\u901f\u5224\u65ad\u662f\u5426\u5b58\u5728\u8fb9 $(u,w)$ \u4e86\u3002\u5728\u56fe $G$ \u4e2d\u8dd1\u539f\u672c\u7684\u6734\u7d20\u7b97\u6cd5\u5373\u53ef\u3002\n\n~~\u8fd9\u4e0d\u8fd8\u662f $\\mathcal{O(n^3)}$ \u7684\uff1f~~\n\n\u5947\u5999\u7684\u662f\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O(m\\sqrt{m})}$ \u7684\uff01\uff01\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9 $(u,v)$\uff0c\u5b83\u5bf9\u590d\u6742\u5ea6\u9020\u6210\u7684\u8d21\u732e\u662f $out[v]$\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u5373\u4e3a $\\sum\\limits out[v]$\uff0c$out_v$ \u662f\u70b9 $v$ \u7684\u51fa\u5ea6\u3002\n\n\u5f53 $v$ \u5728\u539f\u56fe\uff08\u65e0\u5411\u56fe\uff09\u4e0a\u7684\u5ea6\u6570\u4e0d\u5927\u4e8e $\\sqrt m$ \u65f6\uff0c\u65b0\u56fe\u6bcf\u4e2a\u8282\u70b9\u7684\u51fa\u5ea6\u4e0d\u53ef\u80fd\u5c0f\u4e8e\u539f\u56fe\u7684\u5ea6\u6570\uff0c\u6240\u4ee5 $out_v$ \u4e0d\u4f1a\u8d85\u8fc7 $\\sqrt{m}$\u3002\n\n\u5f53 $v$ \u5728\u539f\u56fe\u4e0a\u7684\u5ea6\u6570\u5927\u4e8e $\\sqrt m$ \u65f6\uff0c\u5b83\u53ea\u80fd\u5411\u539f\u56fe\u4e2d\u5ea6\u6570\u4e0d\u5c0f\u4e8e\u5b83\u7684\u70b9\u8fde\u8fb9\uff0c\u53c8\u56e0\u4e3a\u539f\u56fe\u4e2d\u6240\u6709\u7684\u70b9\u7684\u5ea6\u6570\u548c\u4e3a $m$\uff0c\u6240\u4ee5\u539f\u56fe\u4e2d\u5ea6\u6570\u5927\u4e8e $\\sqrt m$ \u7684\u70b9\u53ea\u6709 $\\sqrt m$ \u4e2a\u3002\u56e0\u6b64 $v$ \u7684\u51fa\u8fb9\u53ea\u6709 $\\sqrt m$ \u6761\uff0c\u4e5f\u5373 $out_v = \\sqrt m$\u3002\n\n\u7efc\u4e0a\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O(m\\sqrt{m})}$\u3002\n\n-------------\n\u6240\u4ee5\u627e\u5230\u6240\u6709\u4e09\u5143\u73af\u540e\u6734\u7d20\u7edf\u8ba1\u5373\u53ef\u3002\n\n# \u4ee3\u7801\n\n```cpp\n// Problem: P6815 [PA2009]Cakes\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P6815\n// Memory Limit: 128 MB\n// Time Limit: 1000 ms\n// Date:2022-06-07 05:47\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <cmath>\n#define enter putchar(10)\n#define debug(c,que) std::cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) std::cout << arr[i] << w;\n#define speed_up() std::ios::sync_with_stdio(false),std::cin.tie(0),std::cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define stop return(0)\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\tif(x < 0) x += mod;\n\treturn x % mod;\n}\nnamespace Newstd {\n\tchar buf[1 << 21],*p1 = buf,*p2 = buf;\n\tinline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++;\n\t}\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getc();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\n\nconst int INF = 0x3f3f3f3f;\nconst int N = 1e5 + 5,M = 2.5e5 + 5;\nstruct Graph {\n\tint v,nxt;\n} gra[M];\nint head[N],val[N],deg[N],fr[M],to[M],vistime[N];\nint n,m,idx;\ninline void add(int u,int v) {\n\tgra[++ idx] = (Graph){v,head[u]},head[u] = idx;\n}\nint main(void) {\n\tn = read(),m = read();\n\tfor (register int i = 1;i <= n; ++ i) val[i] = read();\n\tfor (register int i = 1;i <= m; ++ i) {\n\t\tfr[i] = read(),to[i] = read();\n\t\tdeg[fr[i]] ++,deg[to[i]] ++;\n\t}\n\tfor (register int i = 1;i <= m; ++ i) {\n\t\tif (deg[fr[i]] > deg[to[i]] || (deg[fr[i]] == deg[to[i]] && fr[i] > to[i])) std::swap(fr[i],to[i]);\n\t\tadd(fr[i],to[i]);\n\t}\n\tlong long ans = 0;\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tfor (register int j = head[i];j;j = gra[j].nxt) {\n\t\t\tint v = gra[j].v;\n\t\t\tvistime[v] = i;\n\t\t}\n\t\tfor (register int j = head[i];j;j = gra[j].nxt) {\n\t\t\tint v = gra[j].v;\n\t\t\tfor (register int k = head[v];k;k = gra[k].nxt) {\n\t\t\t\tint w = gra[k].v;\n\t\t\t\tif (vistime[w] == i) {\n\t\t\t\t\tans += std::max(val[i],std::max(val[v],val[w]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1654554372,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "P6815 [PA2009]Cakes"
    },
    {
        "content": "\u4e00\u9053\u4e09\u5143\u73af\u8ba1\u6570\u7684\u88f8\u9898\n\n\u6309\u7167\u5957\u8def\u628a\u65e0\u5411\u8fb9\u8f6c\u5316\u6210\u4ece\u5ea6\u6570\u5927\u7684\u70b9\u6307\u5411\u5ea6\u6570\u5c0f\u7684\u70b9\u7684\u6709\u5411\u8fb9\u3002\n\n\u6309\u6743\u503c\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u679a\u4e3e\u8d77\u59cb\u70b9\uff0c\u679a\u4e3e\u76f8\u8fde\u7684\u70b9\uff0c\u5982\u679c\u5176\u51fa\u5ea6\u5c0f\u4e8e$\\sqrt m$\uff0c\u90a3\u4e48\u679a\u4e3e\u4e0e\u5176\u76f8\u8fde\u7684\u70b9\u3002\n\n\u5224\u65ad\u662f\u5426\u548c\u8d77\u59cb\u70b9\u76f8\u8fde\uff0c\u82e5\u4ecd\u7136\u4e0e\u8d77\u59cb\u70b9\u76f8\u8fde\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e09\u5143\u73af\uff0c\u7edf\u8ba1\u7b54\u6848\u5230ans\u4e2d\u5373\u53ef\u3002\n\n\u5426\u5219\uff0c\u679a\u4e3e\u8d77\u59cb\u70b9\u76f8\u8fde\u7684\u70b9\uff0c\u5224\u65ad\u662f\u5426\u548c\u679a\u4e3e\u70b9\u76f8\u8fde\u5373\u53ef\u3002 \n\n```cpp\n#include<cstdio>\n#include<map>\n#include<vector>\n#define N 100005\nusing namespace std;\nint n,m,a[N],ex[N*3];\nint ey[N*3],d[N],v[N];\nvector<int>p[N];\ninline int read() {\n\tint s=0,f=0;\n\tchar ch=getchar();\n\twhile(ch<48||ch>57)f=(ch=='-'),ch=getchar();\n\twhile(ch>47&&ch<58)s=(s<<1)+(s<<3)+(ch^48),ch=getchar();\n\treturn f?-s:s;\n}\ninline void print(int x) {\n\tif(x>9)print(x/10);\n\tputchar(x%10^48);\n}\nint Max(int x,int y) {\n\treturn x>y?x:y;\n}\nbool Cmp(int x,int y) {\n\treturn d[x]==d[y]?x>y:d[x]>d[y];\n}\nint main() {\n\tn=read(),m=read();\n\tfor(int i=1; i<=n; ++i)a[i]=read();\n\tfor(int i=1,x,y; i<=m; ++i)\n\t\tex[i]=read(),ey[i]=read(),++d[ex[i]],++d[ey[i]];\n\tfor(int i=1; i<=m; ++i) {\n\t\tif(Cmp(ex[i],ey[i]))p[ex[i]].push_back(ey[i]);\n\t\telse p[ey[i]].push_back(ex[i]);\n\t}\n\tlong long ans=0;\n\tfor(int i=1,y,z; i<=n; ++i) {\n\t\tfor(int j=0; j<p[i].size(); ++j)v[y=p[i][j]]=(a[y]>a[i])?a[y]:a[i];\n\t\tfor(int j=0; j<p[i].size(); ++j)\n\t\t\tfor(int k=p[y=p[i][j]].size()-1; ~k; --k)\n\t\t\t\tif(v[z=p[y][k]])ans+=v[z]>a[y]?v[z]:a[y];\n\t\tfor(int j=0; j<p[i].size(); ++j)v[p[i][j]]=0;\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1599120636,
        "uid": 112569,
        "name": "Time_tears",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6815 \u3010[PA2009]Cakes\u3011"
    }
]