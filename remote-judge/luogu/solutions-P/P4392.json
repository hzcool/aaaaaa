[
    {
        "content": "### \u8d85\u7ea7\u6811\u72b6\u6570\u7ec4\n\n\n------------\n\n\u5bf9\u4e8e\u5927\u90e8\u5206oier\u6765\u8bf4\uff0c\u7801\u7ebf\u6bb5\u6811\u662f\u4e00\u4ef6\u5341\u5206\u56f0\u96be\u7684\u4e8b\u60c5\uff0c\u5bf9\u4e8e\u8fd9\u4e00\u4e2aOB\u7684\u7b97\u6cd5\u53c8\u4e0d\u5f97\u4e0d\u53bb\u5b66\u4e60\n\n\u800c\u5bf9\u4e8e\u53e6\u4e00\u79cd\u53cb\u597d\u7684\u6811\u5f62\u7ed3\u6784\u2014\u2014\u6811\u72b6\u6570\u7ec4\u5c31\u7279\u522b\u597d\u7801\uff0c\u53ef\u60dc\u7684\u662f\u53ea\u80fd\u53bb\u6c42\u533a\u95f4\u7684\u548c\uff0c\u4ee5\u53ca\u5355\u70b9\u4fee\u6539\n\n\u771f\u7684\u662f\u8fd9\u6837\u5417\uff1f\u6811\u72b6\u6570\u7ec4\u4e0d\u662f\u4ec0\u4e48\u9e21\u808b\uff0c\u5176\u5b9e\u53ef\u4ee5\u548c\u7ebf\u6bb5\u6811\u6709\u4e00\u6837\u7684\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u533a\u95f4\u7684\u6700\u5927\u6700\u5c0f\uff0c\u662f\u53ef\u4ee5\u624b\u52a8\u7ef4\u62a4\u7684\n\n```\nvoid add(int p,int x)//\u6dfb\u52a0\u4e00\u4e2a\u6570\uff08\u4e0d\u80fd\u4fee\u6539\uff09\n{\n    for(;p<=n;p+=p&(-p))\n    {\n        c[p].mx=max(c[p].mx,x);//\u7ef4\u62a4\u533a\u95f4\u7684\u6700\u5927\u4ee5\u53ca\u6700\u5c0f\n        c[p].mn=min(c[p].mn,x);\n    }\n}\n```\n\u4e4b\u540e\u6c42\u548c\u5c31\u597d\u4e86\n```\nbool sum(int l,int r)\n{\n    int mx=-0x7f7f7f7f,mn=0x7f7f7f7f;\n    while(l<=r)\n    {\n        for(;r-(r&(-r))>=l;r-=r&(-r))//\u6807\u914d\n        {\n            mx=max(c[r].mx,mx);\n            mn=min(c[r].mn,mn);\n        }\n        mx=max(mx,a[r]);\n        mn=min(mn,a[r]);\n        r--;//\u4e0d\u662f\u6240\u6709\u533a\u95f4\u90fd\u5df2\u5904\u7406\uff0c\u6240\u4ee5\u4f1a\u591a\u6b21\u7ef4\u62a4\n    }\n    if(abs(mx-mn)<=ci)\n    return true;\n    return false;\n}\n```\na\u4e0b\u8fd9\u5230\u9898\u76ee\u53ea\u9700\u8981\u4e0a\u8ff0\u4e24\u4e2a\u64cd\u4f5c\n\n\u4e0b\u9762ac\u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct tree{\n    int mx=-0x7f7f7f7f,mn=0x7f7f7f7f,a;\n}c[1100101];\nint n,m,ci,ans[1000001],a[1000001],cnt;\nvoid add(int p,int x)\n{\n    for(;p<=n;p+=p&(-p))\n    {\n        c[p].mx=max(c[p].mx,x);\n        c[p].mn=min(c[p].mn,x);\n    }\n}\nbool sum(int l,int r)\n{\n    int mx=-0x7f7f7f7f,mn=0x7f7f7f7f;\n    while(l<=r)\n    {\n        for(;r-(r&(-r))>=l;r-=r&(-r))\n        {\n            mx=max(c[r].mx,mx);\n            mn=min(c[r].mn,mn);\n        }\n        mx=max(mx,a[r]);\n        mn=min(mn,a[r]);\n        r--;\n    }\n    if(abs(mx-mn)<=ci)\n    return true;\n    return false;\n}\nint main()\n{\n    //freopen(\"in.txt\",\"r\",stdin);\n    scanf(\"%d%d%d\",&n,&m,&ci);\n    for(int i=1;i<=n;i++)\n    {\n        int x;\n        scanf(\"%d\",&a[i]);\n        add(i,a[i]);\n    }\n    for(int i=1;i<=n-m+1;i++)\n    {\n        if(sum(i,i+m-1))\n        ans[++cnt]=i;\n    }\n    for(int i=1;i<=cnt;i++)\n    {\n        printf(\"%d\\n\",ans[i]);\n    }\n    if(cnt==0)\n    cout<<\"NONE\";\n}\n```\n\u5176\u5b9e\u600e\u4e48\u505a\u7684\u539f\u56e0\uff0c\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\u7684\u7ef4\u62a4\u64cd\u4f5c\u5c31\u53ef\u4ee5\u77e5\u9053\n\n\u5176\u5b9e\u6211\u4eec\u8fd8\u53ef\u4ee5\u8fdb\u884c\u533a\u95f4\u4fee\u6539\u4ee5\u53ca\u67e5\u8be2\n```\nvoid add(int c[],int p,int x)\n{\n    while(p<=n)\n    {\n        c[p]+=x;\n        p+=p&(-p);\n    }\n}\nvoid modify(int l,int r,int x)//\u533a\u95f4\u4fee\u6539\uff08l\u2014\u2014r\u7684\u6bcf\u4e00\u4e2a\u6570\u52a0\u4e0ax\uff09\n{\n    add(d1,l,x);\n    add(d1,r+1,-x);\n    add(d2,l,x*(l-1));\n    add(d2,r+1,-x*r);\n}\nint sum_(int c[],int p)\n{\n    int s=0;\n    while(p)\n    {\n        s+=c[p];\n        p-=p&(-p);\n    }\n    return s;\n}\nint query(int l,int r)//\u533a\u95f4\u6c42\u548c\uff08l\u2014\u2014r\uff09\n{\n    return r*sum_(d1,r)-sum_(d2,r)-((l-1)*sum_(d1,l-1)-sum_(d2,l-1));//\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff08huaji\uff09\n}\n```\n\u90a3\u4e48\u6211\u4eec\u5c31\u7528\u7b80\u5355\u6613\u61c2\u7684\u6811\u72b6\u6570\u7ec4\u4ee3\u66ff\u4e86\u7ebf\u6bb5\u6811\uff0c\u7531\u4e8e\u4ee3\u7801\u91cf\u5c11\uff0c\u8ba4\u771f\u601d\u8003\u4e00\u4e24\u5206\u949f\u5c31\u53ef\u4ee5\u5f97\u51fa\u539f\u56e0\u7684\u4ee3\u7801\uff0c\u5c31\u4e0d\u591a\u52a0\u9610\u8ff0\n\n\u5728\u8003\u573a\u4e0a\uff0c\u9762\u5bf9\u529f\u80fd\u6781\u5ea6\u5168\u9762\u7684\u7ebf\u6bb5\u6811O\uff08Ologn\uff09\uff0c\u4ee5\u53ca\u4ee3\u7801\u91cf\u5c11\u7684\u6811\u72b6\u6570\u7ec4O\uff08nlognlogn\uff09\uff0c\u52a0\u4ee5\u6743\u8861\n\n\u5176\u5b9e\u60f3\u8981\u8be6\u7ec6\u89e3\u91ca\uff0c\u53ef\u4ee5\u53bb\u770b\u6d1b\u8c37\u65e5\u62a522\u671f\uff0c\u6709\u8bf4\u660e\u548c\u56fe\u7684",
        "postTime": 1541201847,
        "uid": 104704,
        "name": "\u7530\u5927\u5751",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "\u9898\u76ee\u7684\u610f\u601d\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u957f\u4e3a$m$\u7684\u5e8f\u5217\uff0c\u627e\u51fa\u8fd9\u4e9b\u5e8f\u5217\u4e2d\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u503c\u4e0d\u8d85\u8fc7$c$\u7684\uff0c\u5e76\u8f93\u51fa\u5b83\u4eec\u7684\u8d77\u59cb\u4f4d\u7f6e\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u627e\u6bcf\u4e2a\u533a\u95f4\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\u7684\u5dee\u503c\uff0c\u7528\u6a21\u62df\u7edd\u5bf9\u4e0d\u884c\uff0c\u6240\u4ee5\u8003\u8651\u4f7f\u7528\u5355\u8c03\u961f\u5217\u6765\u627e\u51fa\u6bcf\u4e2a$m$\u957f\u5e8f\u5217\u7684\u6700\u5927\u6700\u5c0f\u503c\n\n\u7528\u4e24\u4e2a\u961f\u5217$q1$\u548c$q2$\uff0c\u6765\u50a8\u5b58\u6bcf\u4e2a\u4ece\u5de6\u5f80\u53f3\u957f\u5ea6\u4e3a$m$\u7684\u91c7\u6837\u5e8f\u5217\u4e2d\u7684\u6700\u5927\u503c\u4ee5\u53ca\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\uff0c\u540c\u6b65\u76f8\u51cf\u6765\u770b\u770b\u6709\u6ca1\u6709\u8d85\u8fc7$c$\u7684\u503c\uff0c\u6ce8\u610f\u8f93\u51fa\u7684\u662f\u8d77\u59cb\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u987a\u4fbf\u89e3\u91ca\u4e00\u4e0b\uff0c\u961f\u5217\u91cc\u5b58\u7684\u662f\u4f4d\u7f6e\uff0c\u65b9\u4fbf\u64cd\u4f5c\u3002\n\n\u6240\u8bf4\u7684\u4ece\u5de6\u5f80\u53f3\u7684$m$\u957f\u5e8f\u5217\u662f\u6307\uff1a\n$a_1$\u5230$a_m$\uff0c$a_2$\u5230$a_{m+1}$...$a_{n-m+1}$\u5230$a_n$(\u8fd9\u6837\u81ea\u5df1\u770b\u4e5f\u53ef\u4ee5\u61c2\u5f97)\n\n\u5177\u4f53\u64cd\u4f5c\u4ee3\u7801\u53ef\u89c1\n\n```cpp\n#include<cstdio>\n#define MAXN 1000001\nusing namespace std;\nbool p;\nint n,m,c,dui1[MAXN],dui2[MAXN],a[MAXN],heada=1,taila=0,headb=1,tailb=0;\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&c);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\twhile(heada<=taila&&dui1[heada]+m<=i){\n\t\t\theada++;\n\t\t}//\u8fd9\u91cc\u7684\u4e24\u4e2awhile\u7684\u610f\u601d\u662f\u5982\u679c\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u4e0d\u5728\u6240\u8981\u5bfb\u627e\u6700\u5927\u503c\u7684\u5e8f\u5217\u5f53\u4e2d\uff0c\u5c31\u628a\u5b83\u8e22\u51fa\u53bb,\u53cd\u6b63\u662f\u4ece\u5de6\u5f80\u53f3\u627e\u5417\n\t\twhile(headb<=tailb&&dui2[headb]+m<=i){\n\t\t\theadb++;\n\t\t} \n\t\twhile(heada<=taila&&a[i]>a[dui1[taila]]){\n\t\t\ttaila--;\n\t\t} //\u8fd9\u91cc\u7684\u4e24\u4e2awhile\u80fd\u591f\u51cf\u5c0f\u65f6\u95f4\u590d\u6742\u5ea6,\u5148\u628a\u5df2\u7ecf\u6bd4\u8981\u63d2\u5165\u7684\u5c0f\u6216\u5927\u8e22\u51fa\u53bb\t\t\n        dui1[++taila]=i;\n\t\twhile(headb<=tailb&&a[i]<a[dui2[tailb]]){\n\t\t\ttailb--;\n\t\t} \n\t\tdui2[++tailb]=i;\n\t\tif(i>=m){\n\t\t\tif(a[dui1[heada]]-a[dui2[headb]]<=c){\n\t\t\t\tprintf(\"%d\\n\",i-m+1);\n\t\t\t\tp=true;\n\t\t\t}\n\t\t}\n\t}\n\tif(!p) printf(\"NONE\");\n\treturn 0;\n}\n```",
        "postTime": 1526537520,
        "uid": 38035,
        "name": "Uni_Tune",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "# ST\u8868 \u9759\u6001\u533a\u95f4\u6700\u503c\u95ee\u9898\n\n## \u7ffb\u4e86\u7ffb\u9898\u89e3\uff0c\u53d1\u73b0\u90fd\u662f\u4ec0\u4e48\u8d85\u7ea7\u6811\u72b6\u6570\u7ec4\uff0c\u5355\u8c03\u961f\u5217\u4ec0\u4e48\u7684\uff0c\u849f\u84bb\u8868\u793a\u4e0d\u4f1a\n\n## \u800c\u7ebf\u6bb5\u6811\u7565\u663e\u9ebb\u70e6\n\n## \u6709\u4eba\u5199ST\u8868\u4f46\u56e0\u4e3a\u7a7a\u95f4\u95ee\u9898MLE\n\n## \u6211\u6765\u4e00\u6ce2ST\u8868\uff0896MB\uff09\n\n\u4e0d\u4f1aST\u8868\u5199\u4e00\u4e0b [\u6a21\u677f\u9898](https://www.luogu.org/problemnew/show/P3865)\n\n\u5176\u5b9eST\u8868\u5e76\u4e0d\u96be\n\n\u7801\u98ce\u7565\u4e11\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,c,lm,flag,a[1000100],po[12]={1};\n//lm:log2(m) po[i]:2^i flag:\u662f\u5426\u6709\u6709\u89e3\u7684,\u4e3a0\u5219\u8f93\u51faNONE \nint f1[1000100][12],f2[1000100][12];//\u6700\u5927\u503c \u6700\u5c0f\u503c \n//\u6709\u4e9b\u4eba\u5f00f[n][log2(n)]\u5728\u8fd9\u91ccMLE\u4e86,\u5b9e\u9645\u4e0a\u5f00f[n][log2(m)]\u5373\u53ef \n//f\u6570\u7ec4\u7b2c\u4e8c\u7ef4\u662flog2(\u533a\u95f4\u957f\u5ea6),\u8fd9\u9053\u9898m<=10000 \ninline int gint()//\u5feb\u8bfb(\u5176\u5b9e\u8fd9\u9898\u6709\u6ca1\u6709\u65e0\u6240\u8c13) \n{\n    int s=0,w=1;char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {s=(s<<1)+(s<<3)+(ch^48);ch=getchar();}\n    return s*w;\n}\nint main()\n{\n    n=gint();m=gint();c=gint();lm=log(m)/log(2);\n\tfor(int i=1;i<=n;i++) a[i]=gint(),f1[i][0]=f2[i][0]=a[i];//\u521d\u59cb\u503c \n    for(int i=1;i<=lm;i++) po[i]=po[i-1]<<1;//\u521d\u59cb\u5316 \n    for(int j=1;j<=lm;j++) for(int i=1;i<=n-po[j]+1;i++)//nlogn\u5904\u7406\u6700\u5927\u503c \n\t\tf1[i][j]=max(f1[i][j-1],f1[i+po[j-1]][j-1]);\n    for(int j=1;j<=lm;j++) for(int i=1;i<=n-po[j]+1;i++)//nlogn\u5904\u7406\u6700\u5c0f\u503c \n\t\tf2[i][j]=min(f2[i][j-1],f2[i+po[j-1]][j-1]);\n\tfor(int i=1;i<=n-m+1;i++)//i<=n-m+1\u5f88\u5173\u952e \n\t\tif(max(f1[i][lm],f1[i+m-po[lm]][lm])//[i,i+m-1]\u7684\u6700\u5927\u503c \n\t\t-min(f2[i][lm],f2[i+m-po[lm]][lm])<=c)//[i,i+m-1]\u7684\u6700\u5c0f\u503c \n\t\t\tprintf(\"%d\\n\",i),flag=1;\n\tif(!flag) puts(\"NONE\");//\u8bb0\u5f97\u65e0\u89e3\u8f93\u51faNONE \n    return 0;\n}\n```\n## ST\u8868\u6bd5\u7adf\u53ef\u4ee5O\uff08nlogn\uff09\u5904\u7406 O\uff081\uff09\u67e5\u8be2\uff0c\u662f\u4e00\u79cd\u89e3\u51b3\u9759\u6001\u533a\u95f4\u6700\u503c\u5f97\u4f18\u79c0\u6570\u636e\u7ed3\u6784\n\u6c42\u7ba1\u7406\u7ed9\u901a\u8fc7 \u8c22\u8c22",
        "postTime": 1556772453,
        "uid": 121563,
        "name": "\u5149\u660e\u6b63\u5927",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "\u6b64\u9898\u4e3a\u9002\u5408\u7ebf\u6bb5\u6811\u65b0\u624b\u5e94\u7528\u7684\u9898\u76ee\u3002\n\n---------\n\n### \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a $n$ \u4e2a\u6570\uff0c\u6bcf\u6b21\u53d6\u8fde\u7eed\u7684 $m$ \u4e2a\u6570\uff0c\u5982\u679c\u8fd9 $m$ \u4e2a\u6570\u7684\u91cc\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u4e4b\u5dee\u5c0f\u4e8e\u7b49\u4e8e $c$\uff0c\u8f93\u51fa\u7b2c\u4e00\u4e2a\u6570\u5728\u539f\u6570\u5217\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u7b26\u5408\u7684\uff0c\u8f93\u51fa`NONE`\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u5bf9\u4e8e\u672c\u9898\u89e3\uff0c\u4f60\u9700\u8981\u7684**\u524d\u7f6e\u77e5\u8bc6**\uff1a\u7ebf\u6bb5\u6811\u5165\u95e8\u3002\u8fd9\u91cc\u4e0d\u518d\u8fc7\u591a\u8bb2\u89e3\u7ebf\u6bb5\u6811\u7684\u5177\u4f53\u7ec6\u8282\u3002\n\n\u5f88\u660e\u663e\u7684\u7ef4\u62a4**\u533a\u95f4\u6700\u5927\u6700\u5c0f\u503c**\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u8f7b\u677e\u5207\u6389\u3002\n\n\u6211\u4eec\u53ea\u9700\u7528\u7ebf\u6bb5\u6811\u5206\u522b\u7ef4\u62a4\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5373\u53ef\u3002\u7ed3\u6784\u4f53\u5185\u5f00\u4e24\u4e2a\u53d8\u91cf\u5b58\u503c\u5373\u53ef\u3002\n\n\u800c\u4e14\u672c\u9898\u5e76\u4e0d\u9700\u8981\u4fee\u6539\u5e8f\u5217\uff0c\u5927\u5927\u8282\u7701\u4e86\u7ebf\u6bb5\u6811\u7684\u7801\u91cf\u3002\n\n\u6bcf\u6b21\u7ef4\u62a4\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6a21\u677f\u7ebf\u6bb5\u6811\u7684\u52a0\u548c\u64cd\u4f5c\u53d8\u6210`max()`\u6216\u8005`min()`\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u53ea\u8981\u4e0d\u662f**\u5e38\u6570**\u5de8\u5927\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u9644\u6ce8\uff1a\u8003\u573a\u4e0a\u9047\u5230 $10^6$ \u7ea7\u522b\u7684\u6570\u636e\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u6b63\u89e3\u4e3a**\u7ebf\u6027\u505a\u6cd5**\u3002\u4f46\u7531\u4e8e\u5b9e\u9645\u8fd0\u884c\u6548\u7387\u603b\u662f\u66f4\u4f18\uff0c\u5bfc\u81f4\u5f88\u591a\u65f6\u5019\u90fd\u662f\u53ef\u4ee5\u7528 $O(n \\log n)$ \u7b97\u6cd5\u901a\u8fc7\u7684\u3002\n\n### \u5176\u4ed6\u505a\u6cd5\n\n\u4ee5\u4e0b\u5217\u4e3e\u7684\u505a\u6cd5\u53ef\u4ee5\u5728\u5176\u5b83\u9898\u89e3\u627e\u5230\u3002\u8fd0\u884c\u6548\u7387\u548c\u4ee3\u7801\u96be\u5ea6\u5404\u4e0d\u76f8\u540c\u3002\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u90fd\u6253\u4e00\u904d\u3002\n\n- \u5355\u8c03\u961f\u5217\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n- ST \u8868\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\u8bf7\u6ce8\u610f**\u7a7a\u95f4**\u3002\n\n- \u6539\u8fdb\u540e\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n### \u5b9e\u73b0\u7ec6\u8282\n\n- \u8bf7\u6ce8\u610f\u5e38\u6570\u4f18\u5316\uff0c\u5e76\u91c7\u7528\u8f83\u5feb\u7684\u8bfb\u5165\u65b9\u5f0f\u3002\n\n- \u522b\u5fd8\u4e86\u8f93\u51fa`NONE`\u3002\n\n- \u679a\u4e3e\u5b50\u5e8f\u5217\u65f6\u6ce8\u610f\u8fb9\u754c\u3002\n\n### \u53c2\u8003\u4ee3\u7801\n\n\u5f53\u7136\u5b58\u5728\u5176\u4ed6\u66f4\u7b80\u77ed\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\u76f4\u63a5\u4e0a\u6a21\u677f\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<climits>\n#include<algorithm>\nusing namespace std;\n\ntypedef const int cint;\ncint MAXN=1e6+5;\nint n,m,c;\nint a[MAXN];\nstruct node\n{\n\tint l,r,minv,maxv;//minv\u4fdd\u5b58\u533a\u95f4\u6700\u5c0f\u503c\uff0cmaxv\u4fdd\u5b58\u533a\u95f4\u6700\u5927\u503c\n}tree[MAXN<<2];\n\nvoid build(cint now,cint l,cint r)//\u6a21\u677f\n{\n\ttree[now].l=l;tree[now].r=r;\n\tif(l==r)\n\t{\n\t\ttree[now].minv=tree[now].maxv=a[l];\n\t\treturn;\n\t}\n\tcint mid=(l+r)>>1,lson=now<<1,rson=now<<1|1;\n\tbuild(lson,l,mid);\n\tbuild(rson,mid+1,r);\n    \ttree[now].maxv=max(tree[lson].maxv,tree[rson].maxv);//\u7ef4\u62a4\u6700\u5927\u503c\n\ttree[now].minv=min(tree[lson].minv,tree[rson].minv);//\u7ef4\u62a4\u6700\u5c0f\u503c\n}\n\nint query_min(cint now,cint l,cint r)//\u67e5\u8be2\u533a\u95f4\u6700\u5c0f\u503c\n{\n\tif(l<=tree[now].l && tree[now].r<=r)\n\t return tree[now].minv;\n\tcint mid=(tree[now].l+tree[now].r)>>1,lson=now<<1,rson=now<<1|1;\n\tint ans=INT_MAX;\n\tif(l<=mid)\tans=min(ans,query_min(lson,l,r));\n\tif(mid<r)\tans=min(ans,query_min(rson,l,r));\n\treturn ans;\n}\n\nint query_max(cint now,cint l,cint r)//\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\n{\n\tif(l<=tree[now].l && tree[now].r<=r)\n\t return tree[now].maxv;\n\tcint mid=(tree[now].l+tree[now].r)>>1,lson=now<<1,rson=now<<1|1;\n\tint ans=INT_MIN;\n\tif(l<=mid)\tans=max(ans,query_max(lson,l,r));\n\tif(mid<r)\tans=max(ans,query_max(rson,l,r));\n\treturn ans;\n}\n\nvoid input(void)\n{\n\tcin>>n>>m>>c;\n\tfor(int i=1;i<=n;i++)\n\t cin>>a[i];\n}\n\nvoid solve(void)\n{\n\tbuild(1,1,n);\n\tbool f=false;//\u6807\u8bb0\u662f\u5426\u9700\u8981\u8f93\u51faNONE\n\tfor(int i=1;i+m-1<=n;i++)//\u6ce8\u610f\u8fb9\u754c\n\t if(query_max(1,i,i+m-1)-query_min(1,i,i+m-1)<=c)\n\t {\n\t \tcout<<i<<endl;\n\t\tf=true;\n\t }\n\tif(!f)\n\t puts(\"NONE\");\n}\n\nint main()\n{\n\tios_base::sync_with_stdio(false);//\u4f18\u5316\u8f93\u5165\u901f\u5ea6\n\tinput();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1583394737,
        "uid": 80049,
        "name": "Hexarhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problem/P4392)\n\u770b\u9898\u89e3\u91cc\u7684\u7ebf\u6bb5\u6811\u8ddf\u6211\u67d0\u4e9b\u5730\u65b9\u4e0d\u4e00\u6837\u54c7\n\n#####\u5176\u5b9e\u4e0d\u7528\u53e6\u5f00\u4e00\u4e2a\u6570\u7ec4\u7684\uff0c\u4f1a\u6d6a\u8d39\u7a7a\u95f4\uff01\n\n\u5176\u5b9e\u5199\u6570\u636e\u7ed3\u6784\u7684\u9898\u8fd8\u662f\u6bd4\u8f83\u7684\u4ee4\u6211\u5f00\u5fc3\u7684~~\u56e0\u4e3a\u4e0d\u7528\u8111\u5b50~~\n\n\u600e\u4e48\u5224\u65ad\u8fd9\u9898\u662f\u8981\u5199\u7ebf\u6bb5\u6811\u7684\uff1f\n$1$.~~\u66b4\u529b\u53ea\u80fd\u62ff50\u5206~~\n\n$2$.~~\u8fd9\u9898\u662f\u4e2a\u7eff\u9898~~\n\n$3$.\u770b\u6570\u636e\u8303\u56f4\n\n\u4f17\u6240\u5468\u77e5\u7ebf\u6bb5\u6811\u6709\u533a\u95f4\u67e5\u8be2\u7684\u529f\u80fd\uff0c\u800c\u6211\u4eec\u6b63\u9700\u8981\u4ed6\u65f6\u95f4\u590d\u6742\u5ea6\u662f$log$\u7684\uff0c\u5f88\u591a$oier$\u4e0d\u613f\u610f\u7801\u7ebf\u6bb5\u6811\u89c9\u5f97\u5f88\u7e41\u7410\uff0c\u4f46\u6211\u4e2a\u4eba\u8fd8\u662f\u6bd4\u8f83\u559c\u6b22\u7ebf\u6bb5\u6811\u7684\uff0c\u89c9\u5f97\u5f88\u597d\u7406\u89e3\uff0c\u53ef\u80fd\u662f\u8fd9\u7c7b\u7684\u9898\u505a\u7684\u4e0d\u5c11\u7684\u539f\u56e0\u3002\n\n######\u5efa\u6811\u8fc7\u7a0b\uff1a\n\u9898\u89e3\u91cc\u4e00\u822c\u90fd\u662f\u8fd9\u6837\u7684\uff1a\n```cpp\n for(int i=1;i<=n;++i) a[i]=read();\n build(1,1,n);\n```\n\u5176\u5b9e\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\n```cpp\nbuild(1, 1, n);\n```\n\u5728\u7ebf\u6bb5\u6811\u7684\u5efa\u6811\u8fc7\u7a0b\u91cc\u7684\u65f6\u5019\u8fb9\u5efa\u8fb9\u8f93\u5165\uff0c\u51cf\u5c11\u5185\u5b58\u7684\u4f7f\u7528\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u5df2\u7ecf\u8981\u5f00\u56db\u500d\u7a7a\u95f4\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5c3d\u91cf\u5c11\u5f00\u5185\u5b58\n\u76f8\u5e94\u7684\u5efa\u6811\u65f6\u5e94\u8be5\uff1a\n```cpp\n\ttr[k].l = ll, tr[k].r = rr;\n\tif(ll == rr) {tr[k].w = read();tr[k].maxn = tr[k].minn = tr[k].w;return;}\n\tint mid = (ll + rr) >> 1;\n\tbuild(lson, ll, mid);\n\tbuild(rson, mid + 1, rr);\n\ttr[k].minn = min(tr[lson].minn, tr[rson].minn);\n\ttr[k].maxn = max(tr[lson].maxn, tr[rson].maxn);\n}\n```\n\u5176\u5b9e\u6211\u7684\u8fd9\u4e2a\u7ed3\u6784\u4f53\u91cc\u7684w\u53d8\u91cf\u5b8c\u5168\u53ef\u4ee5\u7701\u6389\uff0c\u76f4\u63a5\u5c31\n```cpp\nif(ll == rr) {tr[k].maxn = tr[k].minn = read();return;}\n```\n\u5c31\u597d\uff0c\u4f46\u662f\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\u6211\u52a0\u4e0a\u4e86\u3002\n\n\u9898\u89e3\u91cc\u7684\u67e5\u8be2\u51fd\u6570\u4e5f\u548c\u6211\u7684\u4e0d\u4e00\u6837\u554a\uff0c\u6709\u5f88\u591a\u5197\u6742\u7684\u8bed\u53e5\u5b8c\u5168\u53ef\u4ee5\u5220\u6389\u7684\n```cpp\nvoid ask_query(int k, int x, int y) {\n\tif(tr[k].l >= x && tr[k].r <= y) {minx = min(minx, tr[k].minn);maxx = max(maxx, tr[k].maxn);return;}\n\tint mid = (tr[k].l + tr[k].r) >> 1;\n\tif(x <= mid) ask_query(lson, x, y);\n\tif(y > mid) ask_query(rson, x, y);\n}\n```\n\u8fd9\u6837\u5199\u591a\u4e48\u7684\u7b80\u5355\u53c8\u660e\u4e86\u554a\uff0c\u5728\u8be2\u95ee\u51fd\u6570\u540e\u8fb9\u518d\u52a0\u8bed\u53e5\uff0c\u770b\u7740\u771f\u5fc3\u4e0d\u597d\u53d7\n\nThe Last:\n```cpp\n#include <cstdio>\n#include <iostream>\n#define lson k << 1\n#define rson k << 1 | 1\nusing namespace std;\nconst int N = 2000000;\nint n, m, c, minx, maxx;\nbool flag;\nstruct node{\n\tint l, r, minn, maxn, w;\n}tr[N << 2];\nint read() {\n\tint s = 0, w = 1;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)) {if(ch == '-') w = -1;ch = getchar();}\n\twhile(isdigit(ch)) {s = s * 10 + ch - '0';ch = getchar();}\n\treturn s * w;\n}\nvoid build(int k, int ll, int rr) {\n\ttr[k].l = ll, tr[k].r = rr;\n\tif(ll == rr) {tr[k].w = read();tr[k].maxn = tr[k].minn = tr[k].w;return;}\n\tint mid = (ll + rr) >> 1;\n\tbuild(lson, ll, mid);\n\tbuild(rson, mid + 1, rr);\n\ttr[k].minn = min(tr[lson].minn, tr[rson].minn);\n\ttr[k].maxn = max(tr[lson].maxn, tr[rson].maxn);\n}\nvoid ask_query(int k, int x, int y) {\n\tif(tr[k].l >= x && tr[k].r <= y) {minx = min(minx, tr[k].minn);maxx = max(maxx, tr[k].maxn);return;}\n\tint mid = (tr[k].l + tr[k].r) >> 1;\n\tif(x <= mid) ask_query(lson, x, y);\n\tif(y > mid) ask_query(rson, x, y);\n}\nint main() {\n\tn = read(), m = read(), c = read();\n\tbuild(1, 1, n);\n\tfor(int i = 1; i + m - 1 <= n; i++) {\n\t\tminx = 0x3f3f3f3f, maxx = -0x3f3f3f3f;\n\t\task_query(1, i, i + m - 1);\n\t\tif(maxx - minx <= c)\n\t\t\tprintf(\"%d\\n\", i), flag = 1;\t\n\t}\n\tif(!flag) printf(\"NONE\\n\");\n\treturn 0;\n}\n```\n\u8c22\u8c22\u6536\u770b\uff0c\u4f4f\u8eab\u4f53\u5065\u5eb7\uff01\n\n\n",
        "postTime": 1571214035,
        "uid": 147646,
        "name": "lzpclxf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/P4392)\n\n\u597d\u591a\u4eba\u7528\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u5199\u7684\u8fd9\u9053\u9898\uff0c\u8c8c\u4f3c\u6b63\u89e3\u4e5f\u662f,~~\u800c\u849f\u84bb\u6211\u5374\u4e0d\u4f1a~~\n\n### \u601d\u8def\uff1a\n\n\u770b\u5230**\u6700\u5927\u503c**\u548c**\u6700\u5c0f\u503c**\u53c8\u770b\u5230**m\u4e2a\u91c7\u6837\u7684\u5e8f\u5217**\uff0c\u8fd9\u9053\u9898\u5e94\u8be5\u53ef\u4ee5\u7528 $ST$ \u8868\u505a\u5427\uff0c\u56e0\u4e3a $ST$ \u8868\u7684\u7279\u70b9\u5c31\u662f\u5b58\u50a8\u548c\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\n\n\u4e0d\u4f1a $ST$ \u8868\u7684\u6765\u8fd9\u91cc[\u6a21\u677fST\u8868](https://www.luogu.com.cn/problem/P3865)\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n*log_2n)$ \u521a\u597d\u53ef\u4ee5\u9669\u8fc7\u8fd9\u9053\u9898\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u4e5f\u53ef\u4ee5\u5361\u8fc7\u53bb\uff0c\u53ea\u8981\u5408\u7406\u5206\u914d\u6570\u7ec4\u7a7a\u95f4\n\n### Code\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1001000;\nint a,b,c,mx[N][16],mn[N][16];//\u6570\u7ec4\u53ef\u4ee5\u8fd9\u4e48\u5f00\nbool q;\ninline int r() {//\u5feb\u8bfb \n\tchar ch=getchar();\n\tint f1=0,f2=1;\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-') f2=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') f1=(f1<<3)+(f1<<1)+(ch^48),ch=getchar();\n\treturn f1*f2;\n}\ninline int fx(int l,int r) {//\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c \n\tint p=log2(r-l+1);\n\treturn max(mx[l][p],mx[r-(1<<p)+1][p]);\n}\ninline int fm(int l,int r) {//\u67e5\u8be2\u533a\u95f4\u6700\u5c0f\u503c \n\tint p=log2(r-l+1);\n\treturn min(mn[l][p],mn[r-(1<<p)+1][p]);\n}\nint main() {\n\ta=r();\n\tb=r();\n\tc=r();\n\tfor(int i=1; i<=a; i++)\n\t\tmx[i][0]=mn[i][0]=r();\n\tfor(int l=1; l<=15; l++)//\u7ef4\u62a4\u4e24\u4e2aST\u8868 \n\t\tfor(int i=1; i<=a; i++) {\n\t\t\tmx[i][l]=max(mx[i][l-1],mx[i+(1<<(l-1))][l-1]);\n\t\t\tmn[i][l]=min(mn[i][l-1],mn[i+(1<<(l-1))][l-1]);\n\t\t}\n\tfor(int i=1; i<=a-b+1; i++) {//O(N)\u626b\u4e00\u904d\u8fdb\u884c\u5224\u65ad \n\t\tint Mx=fx(i,i+b-1),Mn=fm(i,i+b-1);\n\t\tif(Mx-Mn<=c) {\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\tq=1;\n\t\t}\n\t}\n\tif(!q)\n\tputs(\"NONE\");//\u4e00\u5b9a\u4e0d\u8981\u5fd8\u4e86NONE\u8981\u8f93\u51fa \n\treturn 0;\n}\n```\n\n#### [$\\color{blue}\\text{My Blog}$](https://www.luogu.com.cn/blog/184549/)",
        "postTime": 1580521833,
        "uid": 184549,
        "name": "RedreamMer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "\u6c42\u4e00\u6bb5\u9759\u6001\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c\u2026\u2026\n\n\u8fd9\u4e0d\u5c31\u662fST\u8868**\u88f8\u9898**\u5417\uff1f\uff1f\uff1f\n\n\u7136\u800c\u4e8b\u60c5\u5e76\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\uff0cST\u8868\u600e\u4e48\u8c03\u6700\u540e\u4e00\u4e2a\u70b9\u5c31\u662fMLE\uff0c\u5b9e\u5728\u662fF*\\*k\u3002\n\n\u6162\u7740\uff0c\u6211\u4eec\u67e5\u8be2\u7684\u533a\u95f4\u957f\u5ea6\u4e3am\uff0c\u4e5f\u5c31\u662f\u8bf4\u6839\u672c\u7528\u4e0d\u5230\u67e5\u8be2\u957f\u5ea6\u4e3an\u7684\u533a\u95f4\uff0c\u90a3\u4e48\u6211\u4eecST\u8868\u7684\u7b2c\u4e8c\u7ef4\u8fd8\u9700\u8981\u5f00\u5230$log2(n)$\u90a3\u4e48\u5927\u4e48\uff1f\u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u7b2c\u4e8c\u7ef4\u53ea\u9700\u8981\u5f00\u5230$log2(m)$\u89c4\u6a21\uff0c\u5176\u4ed6\u5c31\u662f\u4e00\u4e2aST\u8868\u677f\u5b50\u5566\u3002\n\n\u4ee3\u7801\u8d34\u4e00\u4e0b\u3002\n```cpp\n#include<cstdio>\n#include<cmath>\n#define max(a,b) (a>b?a:b)\n#define min(a,b) (a<b?a:b)\nusing namespace std;\nint n,m,c,a[1000005],stg[1000005][12],stl[1000005][12];\nbool flag=1;\nint diff(int l,int r){\n    int k=log2(r-l+1);//\u627e\u5230\u4e0d\u5927\u4e8e\u533a\u95f4\u957f\u5ea6\u7684\u6700\u5c0f2^k\n    return max(stg[l][k],stg[r-(1<<k)+1][k])-min(stl[l][k],stl[r-(1<<k)+1][k]);\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&c);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n        stg[i][0]=stl[i][0]=a[i];//\u521d\u59cb\u5316\n    }\n    for(int j=1;1<<j<=m;j++)\n        for(int i=1;i-1+(1<<j)<=n;i++){\n            stg[i][j]=max(stg[i][j-1],stg[i+(1<<j-1)][j-1]);\n            stl[i][j]=min(stl[i][j-1],stl[i+(1<<j-1)][j-1]);\n        }//\u9012\u63a8\u5bfc\u51faST\u8868\uff0c\u590d\u6742\u5ea6\u5341\u5206\u4f18\u79c0\uff0c\u521d\u59cb\u5316O(nlogn)\uff0c\u67e5\u8be2O(1)\u3002\n    for(int i=1;i+m-1<=n;i++)//(\u5728\u8fd9\u9898\u91cc\u9762\u590d\u6742\u5ea6\u662fO(nlogm))\n        if(diff(i,i+m-1)<=c){\n            flag=0;//\u63a8\u5012\u65d7\u5b50\n            printf(\"%d\\n\",i);\n        }\n    if(flag)\n        printf(\"NONE\");\n}\n```",
        "postTime": 1573719259,
        "uid": 251723,
        "name": "Schwarzkopf_Henkal",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "# \u597d\u5427\u4eca\u5929\u8fd9\u9898\u6539\u4e86\u4e09\u79cd\u7b97\u6cd5\u7ec8\u4e8e\u8fc7\u6389\u4e86\uff0c\u4e8e\u662f\u6765\u6c34\u4e2a\u9898\u89e3\n\n\u521a\u5f00\u59cb\u7528\u66b4\u529b\u4f1a\u83ab\u540dWA\u548cTLE\uff0c\u4e8e\u662f\u6253\u4e86\u4e2a\u7ebf\u6bb5\u6811\u3002\n\n\u7ebf\u6bb5\u6811\u4e5f\u83ab\u540dWA\u52a0OLE\uff1f\uff1f\n\n\u7ee7\u7eed\u6253\u4e00\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u8fd8\u662fWA\u52a0OLE\n\n\u597d\u5427\u7ee7\u7eed\u56de\u53bb\u4fee\u6539\u7ebf\u6bb5\u6811\n\n## \u4ee3\u7801\n```\n#include<iostream>\nusing namespace std;\nconst int INF=2147483647;\ninline int read()\n{\n    int x=0;\n    char c=getchar();\n    bool flag=0;\n    while(c<'0'||c>'9'){if(c=='-')flag=1;   c=getchar();}\n    while(c>='0'&&c<='9'){x=(x+(x<<2)<<1)+c-'0';c=getchar();}\n    return flag?-x:x;\n}\nint a[1000005];\nint n,m,c;\nstruct node{int l,r,maxn,minn;}tree[4000005];\nvoid build(int p,int l,int r)\n{\n    tree[p].l=l,tree[p].r=r;\n    if(l==r){tree[p].maxn=a[l];tree[p].minn=a[l];return;}\n    int mid=(l+r)>>1;\n    build(p<<1,l,mid);\n    build(p<<1|1,mid+1,r);\n    tree[p].maxn=max(tree[p<<1].maxn,tree[p<<1|1].maxn);\n    tree[p].minn=min(tree[p<<1].minn,tree[p<<1|1].minn);\n}\nbool ask(int p,int l,int r)\n{\n    //if(tree[p].l==tree[p].r) return 0;\n    if(l<=tree[p].l&&r>=tree[p].r) \n    {return (tree[p].maxn-tree[p].minn)>c?0:1;}\n    int mid=(tree[p].l+tree[p].r)>>1;\n    if(l<=mid) if(ask(p<<1,l,r)) return 1;\n    if(r>mid) if(ask(p<<1|1,l,r)) return 1;\n    return 0;\n}\nint main()\n{\n    n=read(),m=read(),c=read();\n    for(int i=1;i<=n;++i) a[i]=read();\n    build(1,1,n);\n    bool flag=1;\n    for(int i=1;i+m-1<=n;++i)\n    {\n        //cout<<i<<\" \"<<i+m-1<<endl;\n        //cout<<ask(1,i,i+m-1)<<\" \"<<123123<<endl;\n        if(ask(1,i,i+m-1))\n        {\n            cout<<i<<endl;\n            flag=1;\n        }\n    }\n    if(!flag) cout<<\"NONE\"<<endl;\n    return 0;\n}\n```\n\u7ed3\u679c\u83ab\u540dWA\u52a0OLE0\u5206\n\n\u540e\u6765\u81ea\u5df1\u6a21\u62df\u4e00\u904d\uff0c\u53d1\u73b0\n\n\n![](https://i.loli.net/2018/08/22/5b7cca2b56d17.png)\n\n\uff08\u624b\u52a8\u753b\u56fe\uff0c\u4e11\uff0c\u5bf9\u5f3a\u8feb\u75c7\u8868\u793a\u62b1\u6b49\uff09\n\n\u5982\u679c\u8fd9\u4e48\u505a\u7684\u8bdd\n\n\u4e3b\u8981\u770bask\u51fd\u6570\n```\nbool ask(int p,int l,int r)\n{\n    //if(tree[p].l==tree[p].r) return 0;\n    if(l<=tree[p].l&&r>=tree[p].r) \n    {return (tree[p].maxn-tree[p].minn)>c?0:1;}\n    int mid=(tree[p].l+tree[p].r)>>1;\n    if(l<=mid) if(ask(p<<1,l,r)) return 1;\n    if(r>mid) if(ask(p<<1|1,l,r)) return 1;\n    return 0;\n}\n```\n\u7684\u786e\uff0c\u5982\u679c\u4e24\u4e2a\u6570\uff08\u5047\u8bbe\u4e3a2,3\uff09\n\u90a3\u4e48\u5404\u81ea\u4e3a\uff082,2\uff09\uff083,3\uff09\u65f6\u5fc5\u5b9a\u8fd4\u56de1\n\n\u56e0\u4e3a\u65e0\u8bba\u5982\u4f55\u7ed3\u679c\u90fd\u662f0\n\n\u53c8\u56e0\u4e3a\u7ebf\u6bb5\u6811\u7684\u641c\u7d22\u6027\u8d28\u548c\u849f\u84bb\u6211\u7684\u5783\u573e\u4ee3\u7801\uff0c\u5bfc\u81f4\u53ea\u8981\u641c\u5230\u53f6\u5b50\u8282\u70b9\u5c31\u4f1a\u8fd4\u56de1\uff0c\u6240\u4ee5\u9519\u8bef\n\n### \u6b63\u89e3\u4ee3\u7801\n```\n#include<iostream>\nusing namespace std;\nconst int INF=2147483647;\ninline int read()\n{\n    int x=0;\n    char c=getchar();\n    bool flag=0;\n    while(c<'0'||c>'9'){if(c=='-')flag=1;   c=getchar();}\n    while(c>='0'&&c<='9'){x=(x+(x<<2)<<1)+c-'0';c=getchar();}\n    return flag?-x:x;\n}\nint a[1000005];\nint n,m,c;\nstruct node{int l,r,maxn,minn;}tree[4000005];\nstruct nod{int maxn,minn;};\nvoid build(int p,int l,int r)\n{\n    tree[p].l=l,tree[p].r=r;\n    if(l==r){tree[p].maxn=a[l];tree[p].minn=a[l];return;}\n    int mid=(l+r)>>1;\n    build(p<<1,l,mid);\n    build(p<<1|1,mid+1,r);\n    tree[p].maxn=max(tree[p<<1].maxn,tree[p<<1|1].maxn);\n    tree[p].minn=min(tree[p<<1].minn,tree[p<<1|1].minn);\n}\nnod ask(int p,int l,int r)\n{\n    if(l<=tree[p].l&&r>=tree[p].r)\n    {nod x;x.maxn=tree[p].maxn,x.minn=tree[p].minn;return x;}\n    int mid=(tree[p].l+tree[p].r)>>1;\n    nod x;\n    int maxn=-INF,minn=INF;\n    if(l<=mid) x=ask(p<<1,l,r),maxn=max(maxn,x.maxn),minn=min(minn,x.minn);\n    if(r>mid) x=ask(p<<1|1,l,r),maxn=max(maxn,x.maxn),minn=min(minn,x.minn);\n    x.maxn=maxn,x.minn=minn;\n    return x;\n}\nint main()\n{\n    n=read(),m=read(),c=read();\n    for(int i=1;i<=n;++i) a[i]=read();\n    build(1,1,n);\n    bool flag=0;\n    for(int i=1;i+m-1<=n;++i)\n    {\n        nod x=ask(1,i,i+m-1);\n        if(x.maxn-x.minn<=c)\n        {\n            printf(\"%d\\n\",i);\n            flag=1;\n        }\n    }\n    if(!flag) cout<<\"NONE\"<<endl;\n    return 0;\n}\n```\n\u7531\u4e8e\u849f\u84bb\u6211\u4ee3\u7801\u8fc7\u4e8e\u4e11\u964b\uff0c\u5728\u4e0b\u9762\u5f00\u59cb\u6b63\u89c4\u8bb2\u89e3\n\nbuild\u51fd\u6570\u5c31\u662f\u57fa\u672c\u7684\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u5c31\u770b\u770b\u5427\n\n\u4e3b\u51fd\u6570\u5927\u6982\u4e5f\u90fd\u80fd\u770b\u5f97\u61c2\uff0c\u6211\u4e3b\u8981\u8bb2\u4e00\u4e0b\u6211\u7684ask\u51fd\u6570\n\n\u9996\u5148\uff0c\u5982\u679c\u641c\u7d22\u5230\u4e00\u6bb5\u5b8c\u5168\u8986\u76d6\u7684\u533a\u95f4\uff0c\u8fd4\u56de\u6781\u503c\n\n\u5982\u679c\u4e0e\u5de6\u8fb9\u533a\u95f4\u6709\u4ea4\u96c6\uff0c\u90a3\u4e48\u641c\u7d22\u5de6\u8fb9\u533a\u95f4\n\n\u540c\u7406\uff0c\u641c\u7d22\u53f3\u8fb9\u533a\u95f4\n\n\u6700\u540e\u8fd4\u56de\uff0c\u8ba9\u4e3b\u51fd\u6570\u81ea\u5df1\u8fdb\u884c\u5224\u65ad\n\n\u8fd9\u9898\u867d\u7136\u4e0d\u96be\u4f46\u662f\u5bf9\u4e8e\u849f\u84bb\u6211\u6765\u8bf4\u8fd8\u662f\u975e\u5e38\u6709\u8da3\u7684\n\n\u5e0c\u671b\u5927\u5bb6\u591a\u591a\u6307\u6559\uff01",
        "postTime": 1534905399,
        "uid": 41887,
        "name": "Shikita",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "$f(x) = min\\{a[k]\\}, k \\in [x-m+1, x]$  \n\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u4f18\u5316\u7684\u9012\u63a8(dp)\u3002  \n\u82e5$i \\leqslant j \\&\\& a[i] \\geqslant a[i] $\u663e\u7136\u662f\u65e0\u6548\u7684,\u4f18\u52bf\u53ea\u6709\u6570\u503c\u66f4\u5c0f\u6216\u8005\u4e0b\u6807\u66f4\u9760\u540e(\u56e0\u4e3a\u9012\u63a8\u5de6\u8fb9\u754c\u5728\u5411\u53f3\u7f29\u5c0f)\u3002  \n\u6240\u4ee5\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u5373\u53ef\u3002  \n$max$\u540c\u7406\u3002  \n\u590d\u6742\u5ea6$O(n)$\n```cpp\n#include <cstdio>\n#include <queue>\n\nusing namespace std;\n\nconst int N = 1234567;\nstruct node{\n\tint x, v;\n\tnode() {}\n\tnode(int X, int V) :x(X), v(V) {}\n};\ndeque<node> qmin, qmax;\n\nint main() {\n\tint n, m, c, tmp, flg = 1;\n\tscanf(\"%d %d %d\", &n, &m, &c);\n\tfor(int i = 1; i <= m-1; ++i) {\n\t\tscanf(\"%d\", &tmp);\n\t\twhile(!qmin.empty()) {\n\t\t\tif(qmin.back().v >= tmp) qmin.pop_back();\n\t\t\telse break;\n\t\t}\n\t\tqmin.push_back(node(i, tmp));\n\t\twhile(!qmax.empty()) {\n\t\t\tif(qmax.back().v <= tmp) qmax.pop_back();\n\t\t\telse break;\n\t\t}\n\t\tqmax.push_back(node(i, tmp));\n\t}\n\tfor(int i = m; i <= n; ++i) {\n\t\tscanf(\"%d\", &tmp);\n\t\twhile(!qmin.empty()) {\n\t\t\tif(qmin.back().v >= tmp) qmin.pop_back();\n\t\t\telse break;\n\t\t}\n\t\tqmin.push_back(node(i, tmp));\n\t\twhile(!qmax.empty()) {\n\t\t\tif(qmax.back().v <= tmp) qmax.pop_back();\n\t\t\telse break;\n\t\t}\n\t\tqmax.push_back(node(i, tmp)); \n\t\twhile(qmin.front().x < i-m+1) qmin.pop_front();\n\t\twhile(qmax.front().x < i-m+1) qmax.pop_front();\n\t\tif(qmax.front().v - qmin.front().v <= c) {\n\t\t\tprintf(\"%d\\n\", i-m+1);\n\t\t\tflg = 0;\n\t\t}\n\t}\n\tif(flg) {\n\t\tprintf(\"NONE\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1573103410,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "[\u5355\u8c03\u961f\u5217\u4f18\u5316\u9012\u63a8(1D/1D)]\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "\u5148\u8003\u8651ST\u8868$\\Theta(nlogn+n)$\uff0c\u7136\u540e\u6700\u540e\u4e00\u4e2a\u70b9\u5b8c\u7f8eMLE\n\n\u601d\u8def\u662f\u5efa\u8868\uff0c\u7136\u540e\u679a\u4e3e\u8d77\u70b9$\\Theta(1)$\u6c42\u6700\u5927\u503c\u3002\n\n\u9644MLE\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nint ai[1000005];\nint maxi[21][1000005];\nint mini[21][1000005];\n\nint main()\n{\n    int n,m,c;\n    scanf(\"%d%d%d\",&n,&m,&c);\n    for(int i=1; i<=n; ++i)\n    {\n        scanf(\"%d\",ai+i);\n    }\n    \n    int logn = 31-__builtin_clz(n);\n    for(int i=1; i<=n; ++i)\n    {\n        maxi[0][i] = mini[0][i] = ai[i];\n    }\n    for(int i=1; i<=logn; ++i)\n    {\n        for(int j=1; j<=n-(1<<i)+1; ++j)\n        {\n            maxi[i][j] = max(maxi[i-1][j],maxi[i-1][j+(1<<(i-1))]);\n            mini[i][j] = min(mini[i-1][j],mini[i-1][j+(1<<(i-1))]);\n        }\n    }\n    \n    int ansn = 0;\n    int logm = 31-__builtin_clz(m);\n    for(int i=1; i<=n-m+1; ++i)\n    {\n        if(max(maxi[logm][i],maxi[logm][i+m-(1<<logm)]) - min(mini[logm][i],mini[logm][i+m-(1<<logm)]) <= c)\n        {\n            printf(\"%d\\n\",i);\n            ++ansn;\n        }\n    }\n    \n    if(!ansn)\n    {\n        printf(\"NONE\");\n    }\n}\n```\n\n\u65e2\u7136ST\u8868MLE\u4e86\uff0c\u5c31\u8003\u8651\u7a7a\u95f4\u6d88\u8017$\\Theta(n)$\u7684\u5355\u8c03\u961f\u5217\u3002\n\n\u5355\u8c03\u961f\u5217\u8bb2\u89e3\u89c1[P1886\u6ed1\u52a8\u7a97\u53e3](https://www.luogu.org/problemnew/show/P1886)\u3002\uff08\u987a\u4fbf\u635e\u4e2a\u53cc\u500d\u7ecf\u9a8c\uff09\n\n\u9644AC\u4ee3\u7801\n\n```cpp\n#include <cstdio>\nusing namespace std;\n\nint ai[1000005]; \nint maxq[1000005];\nint minq[1000005];\n\nint main()\n{\n\tint n,m,c;\n\tscanf(\"%d%d%d\",&n,&m,&c);\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tscanf(\"%d\",ai+i);\n\t}\n\t\n\tint ahead = 0;\n\tint atill = 1;\n\tint ihead = 0;\n\tint itill = 1;\n\t\n\tint ansn = 0;\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\twhile(ahead>=atill && ai[maxq[ahead]]<=ai[i])\n\t\t{\n\t\t\t--ahead;\n\t\t}\n\t\t++ahead;\n\t\tmaxq[ahead] = i;\n\t\t\n\t\twhile(ihead>=itill && ai[minq[ihead]]>=ai[i])\n\t\t{\n\t\t\t--ihead;\n\t\t}\n\t\t++ihead;\n\t\tminq[ihead] = i;\n\t\t\n\t\tif(maxq[atill] <= i-m)\n\t\t{\n\t\t\t++atill;\n\t\t}\n\t\tif(minq[itill] <= i-m)\n\t\t{\n\t\t\t++itill;\n\t\t}\n\t\t\n\t\tif(i >= m)\n\t\t{\n\t\t\tif(ai[maxq[atill]]-ai[minq[itill]] <= c)\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",i-m+1);\n\t\t\t\t++ansn;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(!ansn)\n\t{\n\t\tprintf(\"NONE\");\n\t}\n}\n```",
        "postTime": 1563510191,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.org/problemnew/show/P4392)\n\n------------\n\n### \u9898\u76ee\u5927\u610f\uff1a\n\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u5217 a \u3002\u6c42\u5728\u957f\u5ea6\u4e3a m \u7684\u8fde\u7eed\u5b50\u6570\u5217\u4e2d\uff0c\u6709\u591a\u5c11\u4e2a\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\u5c0f\u4e8e\u7b49\u4e8e c\u3002\n\n### \u66b4\u529b\u505a\u6cd5\n\n#### \uff08\u4ee5\u4e0b\u505a\u6cd5\u7531 [U19533 KagurazakaKano](https://www.luogu.org/space/show?uid=19533) \u63d0\u4f9b\uff09\n\n```cpp\n#include <cstdio>\n#include <set> \n#include <queue>\n\nconst int MAXN = 1000005;\n\nusing namespace std;\n\nint n,m,c,a[1000005];\n\nint maxn = -10005, minn = 10005;\n\nset<int> q;\n\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&c);\n    for(int i = 1; i <= n; i++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(int i = 1; i <= n - m + 1; i++){\n        for(int j = i; j <= i + m - 1; j++){\n            maxn = max(maxn,a[j]);\n            minn = min(minn,a[j]);\n        }\n        if(maxn - minn <= c){\n            printf(\"%d\\n\",i);\n        }\n        maxn = -10005;\n        minn = 10005;\n    }\n    return 0;\n}\n```\n\n\u5b9e\u6d4b 40 \u5206\uff0c\u52a0 O2 \u4f18\u5316\u5206\u6570\u4e0d\u53d8\uff0cRE \u53d8 TLE\u3002\n\n[\u6d4b\u8bd5\u8be6\u60c5](https://www.luogu.org/record/show?rid=9283148)\n\n------------\n\n\n### \u6ee1\u5206\u505a\u6cd5\n\n\u7ebf\u6bb5\u6811\u6c42\u6700\u5927\u6700\u5c0f\u503c\u3002\u672c\u9898\u4e2d\u7684\u58f0\u97f3\u5728\u8bb0\u5f55\u540e\u6ca1\u6709\u6539\u53d8\uff0c\u6240\u4ee5\u53ea\u9700\u8fdb\u884c\u5efa\u6811\u8fc7\u7a0b\u4e2d\u7684\u8d4b\u503c\uff08\u5c11\u5199\u4e00\u4e2a\u51fd\u6570\uff09\u3002\n\n\u672c\u5904\u4f7f\u7528 Segtree \u4e2d\u7684 minn \u548c maxn \u8bb0\u5f55\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u3002\n\n\u5bb9\u6613\u51fa\u9519\u7684\u5730\u65b9\u662f Query \u7684\u8fd4\u56de\u503c\u4e0d\u80fd\u76f4\u63a5\u8d4b\u503c\uff0c\u5e94\u5206\u522b\u7528 min \u548c max \u5224\u65ad\u3002\u8fd8\u6709\u5c31\u662f\u5982\u679c\u4ece\u5934\u5230\u5c3e\u4e00\u76f4\u6ca1\u6709\u590d\u5408\u6761\u4ef6\u7684\u6570\u5217\u5219\u8f93\u51fa NONE \uff08\u7a0b\u5e8f\u4e2d\u4f7f\u7528 con \u5224\u65ad\uff09\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\nconst int SIZE=1000005;\nstruct Segtree{\n    int l,r,maxn,minn;\n}t[SIZE<<2];\nint a[SIZE],n,m,c,Queryminn,Querymaxn,ans;\nbool con=false;//false \u4ee3\u8868\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\nvoid PushUp(int id){//\u4e0a\u63a8\uff0c\u5c06\u6b64\u533a\u95f4\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\u8d4b\u4e3a\u4e0b\u4e24\u4e2a\u533a\u57df\u7684\u3002\n    t[id].maxn=max(t[id<<1].maxn,t[id<<1|1].maxn);\n    t[id].minn=min(t[id<<1].minn,t[id<<1|1].minn);\n}\nvoid Build(int id,int l,int r){//\u5efa\u6811\n    t[id].l=l;t[id].r=r;\n    if(l==r){\n        t[id].maxn=a[l];t[id].minn=a[l];//\u5355\u4e2a\u503c\u65f6 maxn \u548c minn \u76f8\u7b49\n    }\n    else{\n        int mid=(t[id].l+t[id].r)>>1;\n        Build(id<<1,l,mid);\n        Build(id<<1|1,mid+1,r);\n        PushUp(id);//\u4e0a\u63a8\u5199\u5728\u6700\u540e\n    }\n}\nvoid Query(int id,int l,int r){\n    if(t[id].l==l&&t[id].r==r){\n    \t//\u6ce8\u610f\u4e0d\u80fd\u76f4\u63a5\u8d4b\u503c\n        Queryminn=min(Queryminn,t[id].minn);\n        Querymaxn=max(Querymaxn,t[id].maxn);\n    }\n    else{\n        int mid=(t[id].l+t[id].r)>>1;\n        if(r<=mid) Query(id<<1,l,r);\n        else{\n            if(l>mid) Query(id<<1|1,l,r);\n            else{\n                Query(id<<1,l,mid);\n                Query(id<<1|1,mid+1,r); \n            }\n        }\n    }\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&c);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    Build(1,1,n);\n    for(int i=1;i<=n-m+1;i++){\n    \t//Query\u7684\u8fd4\u56de\u503c\u9700\u8981\u8d4b\u521d\u503c\n        Querymaxn=-1<<30;Queryminn=1<<30;\n        Query(1,i,i+m-1);\n        ans=Querymaxn-Queryminn;\n        if(ans<=c){\n            con=true;\n            printf(\"%d\\n\",i);\n        }\n    }\n    if(con==false) printf(\"NONE\\n\");\n    return 0;\n} \n```\n\n[\u6d4b\u8bd5\u8be6\u60c5](https://www.luogu.org/record/show?rid=9284868)\n\n\u5f53\u7136\u5566\uff0c\u5355\u8c03\u961f\u5217\u4e5f\u80fd\u505aQAQ\n",
        "postTime": 1533370694,
        "uid": 52428,
        "name": "Jameswood",
        "ccfLevel": 0,
        "title": "P4392 [BOI2007]Sound \u9759\u97f3\u95ee\u9898"
    },
    {
        "content": "#### \u8fd9\u9053\u9898\u5c31\u662f\u6c42\u533a\u95f4max,\u533a\u95f4min\uff0c\u7136\u540e\u548cc\u6bd4\u8f83\u5c31\u597d\n\u4e00\u5f00\u59cb\u7528\u7684**RMQ**\uff0c\u4e0d\u4f1aRMQ\u7684\u9614\u4ee5\u770b\u4e00\u4e0b[\u8fd9\u4e2a\u535a\u5ba2](https://blog.csdn.net/qq_41311604/article/details/79900893)\uff08\u4e0d\u662f\u6211\u7684\uff09\nRMQ\u4ee3\u7801\u5982\u4e0b\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\n#define rep(x,a,b) for(int x=(a);x<=(b);x++)\n#define per(x,a,b) for(int x=(a);x>=(b);x--)\n#define mem(x) memset(x,0,sizeof(x))\n\nconst int A=1e6+1;\nint N,M,C,f;\nint rl[19][A],rs[19][A];\n\nint lg(int x)\n{\n\tint p=0;\n\twhile(x)\n\t\tp++,x>>=1;\n\treturn p;\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcin>>N>>M>>C;\n\trep(i,1,N) cin>>rs[0][i],rl[0][i]=rs[0][i];\n\tint maxl=lg(N)-1;\n\trep(l,1,maxl)\n\t\trep(i,1,N-(1<<l)+1)\n\t\t{\n\t\t\trl[l][i]=max(rl[l-1][i],rl[l-1][i+(1<<(l-1))]);\n\t\t\trs[l][i]=min(rs[l-1][i],rs[l-1][i+(1<<(l-1))]);\n\t\t}\n\trep(i,1,N-M+1)\n\t{\n\t\tint l=lg(M)-1;\n\t\tint ansl=max(rl[l][i],rl[l][(i+M-1)-(1<<l)+1]);\n\t\tint anss=min(rs[l][i],rs[l][(i+M-1)-(1<<l)+1]);\n\t\tif((ansl-anss)<=C) f=1,cout<<i<<endl; \n\t}\n\tif(!f) cout<<\"NONE\";\n\treturn 0;\n}\n\n```\n\n\u7136\u540e\u65e0\u8bba\u600e\u4e48\u6539\uff0c\u7b2c\u5341\u4e2a\u70b9\u90fd\u4f1aMLE\uff0c\u6539\u4e86\u597d\u4e45\u540e\u4e0d\u5f97\u4e0d\u653e\u5f03\n\u7136\u540e\u9009\u62e9\u4e86**\u7ebf\u6bb5\u6811**\uff01\n\n\u9996\u5148\u662f\u5efa\u6811\n```\nvoid bld(LL nw,LL l,LL r)\n{\n\tll[nw]=l,rr[nw]=r;\n\tif(l==r) {mx[nw]=mn[nw]=a[l];return;}\n\tLL md=(l+r)>>1;\n\tbld(nw<<1,l,md);\n\tbld(nw<<1|1,md+1,r);\n\tupd(nw);\n}\n```\nmx,mn\u5206\u522b\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u6700\u5c0f\u503c\n\nupdate \u5373\u5c0f\u533a\u95f4max min\u5408\u5e76\u5165\u5927\u533a\u95f4\n```\nvoid upd(LL nw)\n{\n\tmx[nw]=max(mx[nw<<1],mx[nw<<1|1]);\n\tmn[nw]=min(mn[nw<<1],mn[nw<<1|1]);\n}\n```\n\n\u67e5\u8be2\uff0c\u5982\u679c\u67e5\u8be2\u7684\u8303\u56f4\u5728nw\u8303\u56f4\u5185\uff0c\u5c31\u9700\u8981\u66f4\u65b0\u6700\u5927\u6700\u5c0f\u503c\uff0c\u4e0e\u533a\u95f4\u6c42\u548c\u76f8\u4f3c\n```\nvoid quy(LL nw,LL x,LL y)\n{\n\tif(ll[nw]>=x&&rr[nw]<=y)\n\t{\n\t\tmaxx=max(maxx,mx[nw]);\n\t\tminn=min(minn,mn[nw]);\n\t\treturn;\n\t}\n\tLL md=(ll[nw]+rr[nw])>>1;\n\tif(x<=md) quy(nw<<1,x,y);\n\tif(y>md) quy(nw<<1|1,x,y);\n}\n```\n\n\u6700\u540e\u5b8c\u6574AC\u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\n#define rep(x,a,b) for(LL x=(a);x<=(b);x++)\n#define per(x,a,b) for(LL x=(a);x>=(b);x--)\n#define mem(x) memset(x,0,sizeof(x))\n\nconst int A=5e6+10;\nLL N,M,C,f;\nLL mx[A],mn[A],ll[A],rr[A]; \nLL a[A];\nLL maxx,minn;\n\nvoid upd(LL nw)\n{\n\tmx[nw]=max(mx[nw<<1],mx[nw<<1|1]);\n\tmn[nw]=min(mn[nw<<1],mn[nw<<1|1]);\n}\n\nvoid bld(LL nw,LL l,LL r)\n{\n\tll[nw]=l,rr[nw]=r;\n\tif(l==r) {mx[nw]=mn[nw]=a[l];return;}\n\tLL md=(l+r)>>1;\n\tbld(nw<<1,l,md);\n\tbld(nw<<1|1,md+1,r);\n\tupd(nw);\n}\n\nvoid quy(LL nw,LL x,LL y)\n{\n\tif(ll[nw]>=x&&rr[nw]<=y)\n\t{\n\t\tmaxx=max(maxx,mx[nw]);\n\t\tminn=min(minn,mn[nw]);\n\t\treturn;\n\t}\n\tLL md=(ll[nw]+rr[nw])>>1;\n\tif(x<=md) quy(nw<<1,x,y);\n\tif(y>md) quy(nw<<1|1,x,y);\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL); \n\tcin>>N>>M>>C;\n\trep(i,1,N) cin>>a[i]; \n\tbld(1,1,N);\n\trep(i,1,N-M+1)\n\t{\n\t\tmaxx=0;\n\t\tminn=0x7fffffff;\n\t\tquy(1,i,i+M-1);\n\t\tif((maxx-minn)<=C) f=1,cout<<i<<endl;\n\t}\n\tif(!f) cout<<\"NONE\";\n\treturn 0;\n}\n\n```\n### \u5343\u4e07\u4e0d\u8981\u5fd8\u4e86maxx minn\u521d\u503c\u548cNONE\u8f93\u51fa\n",
        "postTime": 1570095658,
        "uid": 218628,
        "name": "\u8c2d\u4e4b\u8354",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u4e5f\u5c31\u662f\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3am\u7684\u533a\u95f4\u5185\u627e\u6700\u5927\u503c\u51cf\u53bb\u6700\u5c0f\u503c\u8981\u5c0f\u4e8e\u7b49\u4e8ec\u3002\u90a3\u4e48\u76f4\u63a5\u4f7f\u7528RMQ\u5904\u7406\u5c31\u5b8c\u4e8b\u513f\u4e86\uff0c\u4e0d\u8fc7\u5e94\u8be5\u662f\u6570\u636e\u592a\u6c34\u3002\u672c\u6765\u6570\u7ec4\u8981\u5f00maxn[1000000][22]\u624d\u884c\uff0c\u56e0\u4e3an\u6700\u5927\u67091000000\uff0c\u6240\u4ee52^21\u5927\u7ea6\u4e3a1000000\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u7206\u5185\u5b58\u4e86\uff0c\u53ea\u80fd\u5f97\u523090\u3002\u5934\u94c1\u628a22\u6539\u6210\u4e8615.\u5c45\u7136\u8fc7\u4e86\u3002RMQ\u6a21\u677f\u3002\n\n```c\n#include<stdio.h>\n#include<math.h>\n#include<iostream>\n#include<algorithm>\n#define MAXN  1000005\nusing namespace std;\n\nint maxn[MAXN][25];\nint minn[MAXN][25];\nint n,m,c;\n\nvoid RMQ_init()\n{\n    for(int i=1;(1<<i)<=n;i++)\n    {\n        for(int j=0;(j+(1<<i))-1<n;j++)\n        {\n            maxn[j][i]=max(maxn[j][i-1],maxn[j+(1<<(i-1))][i-1]);\n            minn[j][i]=min(minn[j][i-1],minn[j+(1<<(i-1))][i-1]);\n        }\n    }\n}\n\nint RMQ_query(int L,int R,int d)\n{\n    int log=0;\n    while((1<<(log+1))<=(R-L+1))\n          log++;\n    if(d==1)\n        return max(maxn[L][log],maxn[R-(1<<log)+1][log]);\n    return min(minn[L][log],minn[R-(1<<log)+1][log]);\n}\n\nint main()\n{\n    scanf(\"%d %d %d\",&n,&m,&c);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&maxn[i][0]);\n        minn[i][0]=maxn[i][0];\n    }\n    RMQ_init();\n    bool ok=true;\n    for(int i=0;i+m-1<n;i++)\n    {\n        int L=i;\n        int R=i+m-1;\n        if(RMQ_query(L,R,1)-RMQ_query(L,R,0)==c)\n        {\n            printf(\"%d\\n\",i+1);\n            ok=false;\n        }\n    }\n    if(ok)\n        printf(\"NONE\\n\");\n    return 0;\n}\n\n```\n",
        "postTime": 1568608825,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "\u5199\u5b8c\u7ffb\u7ffb\u9898\u89e3\u53d1\u73b0\u4e00\u4e2aST\u8868 MLE\u7684\u8dd1\u53bb\u5199\u5355\u8c03\u961f\u5217\u4e86\n\n\u5176\u5b9eST\u8868\u662f\u53ef\u4ee5\u82b1\u5f0fAC\u7684\n\n---\n\n\u5148\u6765\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bST\u8868\n\nST\u8868\u662f\u7528\u6765\u89e3\u51b3\u533a\u95f4\u6700\u503c\u95ee\u9898\u7684\n\n\u6211\u4eec\u628a\u533a\u95f4\u6700\u503c\u60f3\u6210\u533a\u95f4DP\n\n\u8003\u8651\u6700\u5927\u503c\n\n\u7528$dp[i][j]$\u8868\u793a\u533a\u95f4$[i,j]$\u7684\u6700\u5927\u503c\u3002\n\n\u663e\u800c\u6613\u89c1\uff0c\u6709$dp[i][j]=max(dp[i][j-1],a[i])$(\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$)\n\n\u6211\u4eec\u91c7\u7528\u500d\u589e\u601d\u60f3\uff0c\u7528$dp[i][j]$\u8868\u793a\u4ee5$i$\u4e3a\u8d77\u70b9\uff0c\u957f\u5ea6\u4e3a$2^j$\u7684\u533a\u95f4\u6700\u5927\u503c\uff0c\n\n\u6c42\u89e3\u65f6\u5206\u6210\u4e24\u4e2a\u533a\u95f4$[i,i+2^j-1-1],[i+2^j-1,i+2^j+1]$\n\n\u6709$dp[i][j]=max(dp[i][j-1],dp[i+2^j-1][j-1])$\n\n\u7531\u4e8e\u957f\u5ea6\u4e3a$2^j$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(nlogn)$\n\n\u4ee5\u4e0a\u662f\u9884\u5904\u7406\u90e8\u5206\u3002\n\n\u5b9e\u9645\u67e5\u8be2\u65f6\uff0c\u6211\u4eec\u9700\u8981\u6c42\u89e3\u4e00\u4e2a\u4efb\u610f\u7684\u533a\u95f4\uff0c\n\n\u800c\u4e0a\u9762\u7684\u9884\u5904\u7406\u53ea\u80fd\u6c42\u51fa\u957f\u5ea6\u4e3a$2^j$\u7684\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u6211\u4eec\u5229\u7528\u4e00\u4e0b\u4e00\u4e2a\u5c0f\u6027\u8d28\uff1a\n\n\u6700\u503c\u662f\u53ef\u4ee5\u7531\u76f8\u4ea4\u6027\u7684\n\n\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u8981\u628a\u5f85\u67e5\u8be2\u7684\u533a\u95f4\uff0c\u8f6c\u5316\u6210\u4e24\u4e2a\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u7684\u533a\u95f4\u3002\n\n\u627e\u51fa\u6700\u5927\u7684$2^k<=len$\u7684$k$\uff0c\u5176\u4e2d$len=r-l+1$\u4e3a\u533a\u95f4\u957f\u5ea6\uff0c\n\n\u53d6\u533a\u95f4$[l,l+2k-1],[r-2k+1,r]$\u4e3a\u4e24\u4e2a\u5c0f\u533a\u95f4\uff0c\u663e\u7136\u6ee1\u8db3\u4e14\u80fd\u627e\u5230\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(1)$\n\n---\n\n\u672c\u9898\u8981\u6c42\u5bf9\u4e8e\u6bcf\u4e2a\u957f\u4e3a$m$\u7684\u5e8f\u5217\uff0c\u627e\u51fa\u8fd9\u4e9b\u5e8f\u5217\u4e2d\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u503c\u4e0d\u8d85\u8fc7$c$\n\n\u8003\u8651\u5230ST\u8868\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u6709\u70b9\u9ad8\uff0c\u9ad8\u8fbe$O(nlogn)$\n\n\u4e8e\u662f\u5728\u6b64\u9898\u4e2d\u4f1aMLE\n\n\u63a5\u4e0b\u6765\u4ecb\u7ecd\u82b1\u5f0fAC\u505a\u6cd5\uff1a\n\n\u6211\u4eec\u6545\u610f\u628a\u7a7a\u95f4\u5f00\u5c0f\n\n\u5f00\u5230$N*15$\u7684\u7a7a\u95f4\n\n\u8fd8\u662f\u4e00\u6837\u7684\u505a\u6cd5\n\n\u66b4\u529b\u641c\u7d22\u5c31\u901a\u8fc7\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(nlogn)(n*15)$\n\ncode:\n\n```\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"Ofast\")\n#include<bits/stdc++.h>\n\n#define rd(x) x=read() \n\n#define N 1000001\n#define M 16\n\nusing namespace std;\n\nint n,m,c;\nint a[N][M],b[N][M];\n\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n\ninline void write(int x)\n{\n    if(x<0){putchar('-');x=-x;}\n    if(x>=10)write(x/10);\n    putchar(x%10+'0');\n}\n\ninline int query(int l,int r,int f)\n{\n\tint k=log2(r-l+1);\n\tif(f)return max(a[l][k],a[r-(1<<k)+1][k]);\n\telse return min(b[l][k],b[r-(1<<k)+1][k]);\n}\n\nint main()\n{\n\trd(n),rd(m),rd(c);\n\tfor(int i=1;i<=n;i++)rd(a[i][0]),b[i][0]=a[i][0];\n\tfor(int j=1;j<=15;j++)\n        for(int i=1;i+(1<<j)-1<=n;i++)\n            a[i][j]=max(a[i][j-1],a[i+(1<<(j-1))][j-1]),\n            b[i][j]=min(b[i][j-1],b[i+(1<<(j-1))][j-1]);\n    bool ok=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint j=i+m-1;\n\t\tif(j>n)break;\n\t\tif(query(i,j,1)-query(i,j,0)<=c)\n\t\t\tprintf(\"%d\\n\",i),ok=1;\n\t}\n\tif(!ok)cout<<\"NONE\"<<endl;\n\t\n\treturn 0;\n}\n```\n\n\u53e6\u5916\u90e8\u5206\u5185\u5bb9\u6458\u81ea[Link](https://www.cnblogs.com/Robin20050901/p/10311438.html)\n\n\u535a\u4e3b\u662f\u540c\u4e00\u4e2a\u4eba\n\n---\n\n\u603b\u7ed3\uff1a\u4e71\u641e\u662f\u53ef\u4ee5AC\u7684",
        "postTime": 1566644898,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "~~\u81ea\u4ece\u672c\u849f\u84bb\u5b66\u4e86\u7ebf\u6bb5\u6811\u4e4b\u540e\u5c31\u6765\u5f00\u5fc3\u5730\u6c34\u5404\u79cd\u6a21\u677f\u9898~~\n\n## \u9898\u76ee\u5927\u610f\n \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6c42\u5728\u6bcf\u4e00\u4e2a\u957f\u5ea6\u4e3am\u7684\u5e8f\u5217\u4e2d\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u4e0d\u8d85\u8fc7c\u3002\u5982\u679c\u6709\uff0c\u8f93\u51fa\u8fd9\u4e2a\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\n \n \u4ee5\u6837\u4f8b\u4e3a\u4f8b\u5b50\uff0c\u5219\u6709\uff1a\n \n ```cpp\nm=2 c=0   \n        0 1 1 2 3 2 2\ncase 1:[0,1] 1-0<=0 \u4e0d\u6210\u7acb\ncase 2:  [1,1] 1-1<=0 \u6210\u7acb,\u8f93\u51fa\u8fd9\u4e2a\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e2\ncase 3:    [1,2] 2-1<=0 \u4e0d\u6210\u7acb\ncase 4:      [2,3] 3-2<=0 \u4e0d\u6210\u7acb\ncase 5:        [3,2] 3-2<=0 \u4e0d\u6210\u7acb\ncase 6:          [2,2] 2=2<=0 \u6210\u7acb,\u8f93\u51fa\u8fd9\u4e2a\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e6\n```\n\u7136\u540e\u5c31\u662f\u4e00\u9053\u7ebf\u6bb5\u6811~~\u6a21\u677f~~\u9898\u4e86\n\n23333333\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000005\ntypedef long long ll;\nstruct Segment_Tree{\n    ll l,r,val,w;\n}tree[N<<2];\nll n,m,c,input[N];\nbool flag;\ninline int read(){\n    ll x=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch)){\n        if(ch=='-')\n         f=-f;\n        ch=getchar();\n    }\n    while(isdigit(ch)){\n        x=(x<<3)+(x<<1)+(ch^48);\n        ch=getchar();\n    }\n    return x*f;\n}\ninline void build(ll index,ll l,ll r){\n    tree[index].l=l;\n    tree[index].r=r;\n    if(l==r){\n        tree[index].val=tree[index].w=input[l];\n        return;\n    }\n    ll mid=l+r>>1;\n    build(index<<1,l,mid);\n    build(index<<1|1,mid+1,r);\n    tree[index].val=std::min(tree[index<<1].val,tree[index<<1|1].val);\n    tree[index].w=std::max(tree[index<<1].w,tree[index<<1|1].w);\n}\nll ask1(ll index,ll l,ll r){\n    if(l<=tree[index].l&&r>=tree[index].r)\n     return tree[index].val;\n    ll mid=tree[index].l+tree[index].r>>1,ans=INT_MAX;\n    if(l<=mid)\n     ans=std::min(ans,ask1(index<<1,l,r));\n    if(r>mid)\n     ans=std::min(ans,ask1(index<<1|1,l,r));\n    return ans;\n}\nll ask2(ll index,ll l,ll r){\n    if(l<=tree[index].l&&r>=tree[index].r)\n     return tree[index].w;\n    ll mid=tree[index].l+tree[index].r>>1,ans=-INT_MAX;\n    if(l<=mid)\n     ans=std::max(ans,ask2(index<<1,l,r));\n    if(r>mid)\n     ans=std::max(ans,ask2(index<<1|1,l,r));\n    return ans;\n}\nint main(){\n    n=read(),m=read(),c=read();\n    for(register int i=1;i<=n;++i)\n     input[i]=read();\n    build(1,1,n);\n    for(register int i=1;i<=n-m+1;++i){\n        ll a=ask1(1,i,i+m-1);\n        ll b=ask2(1,i,i+m-1);\n        if(b-a<=c){\n            printf(\"%d\\n\",i);\n            flag=true;\n        }\n    }\n    if(!flag)\n     puts(\"NONE\");\n    return 0;\n}\n```\n\u89e3\u91ca\u4e00\u4e0b\u4ee3\u7801\n\nbuild\u5c31\u662f\u666e\u901a\u7684\u5efa\u6811\u5916\u52a0\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\n\nask1\u8fd4\u56de\u533a\u95f4\u6700\u5c0f\u503c\n\nask2\u8fd4\u56de\u533a\u95f4\u6700\u5927\u503c\n\n\u5728main\u51fd\u6570\u91cc\u679a\u4e3e\u5224\u65ad\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u6ee1\u8db3\u6761\u4ef6\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u6c34\u8fc7\u4e862333333",
        "postTime": 1558953707,
        "uid": 157603,
        "name": "\u5343\u53cd\u7530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    },
    {
        "content": "\u533a\u95f4\u6700\u5927\u548c\u6700\u5c0f\u67e5\u8be2\n\n\u672c\u9898\u8fd8\u662f\u9759\u6001\u533a\u95f4\n\n\u5f88\u660e\u663e\u4e00\u4e2aST\u8868\u561b\n\n\u53ef\u60dc\u53ea\u670990\u5206\u2026\n\n~~\u6211\u53ea\u4f1a\u5361\u5e38\u554a \u6ca1\u6709\u6559\u6211\u600e\u4e48\u5361MLE\u2026~~\n\nST\u8868\u662f\u4e2a\u5f88\u4f18\u79c0\u7684\u7b97\u6cd5\uff01\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nint n,m,c,flag,a[1000005],f1[1000005][32],f2[1000005][32];\n//len=r-l+1 \nvoid ST_prework(){\n\tint t=log(n)/log(2);\n\tfor (int j=1;j<=t;j++)\n\t\tfor (int i=1;i<=n-(1<<j)+1;i++){\n\t\tf1[i][j]=max(f1[i][j-1],f1[i+(1<<(j-1))][j-1]);\n\t\tf2[i][j]=min(f2[i][j-1],f2[i+(1<<(j-1))][j-1]);  \t\t\n\t}\n} \nint ST_query(int l,int r){\n\tint k=log(r-l+1)/log(2);\n\treturn max(f1[l][k],f1[r-(1<<k)+1][k])-min(f2[l][k],f2[r-(1<<k)+1][k]);//\u5de6\u7aef\u70b9\u8986\u76d6\u533a\u95f4 \u53f3\u7aef\u70b9\u8986\u76d6\u533a\u95f4 \n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&c);\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tf1[i][0]=a[i];\n\t\tf2[i][0]=a[i];\n\t}\n\tST_prework();\n\tfor (int i=1;i<=n-m+1;i++)\n\t\tif (ST_query(i,i+m-1)<=c) {\n\t\t\tflag++;\n\t\t\tprintf(\"%d\\n\",i);\n\t\t}\n\tif (!flag) printf(\"NONE\");\n\treturn 0;\n}\n```\n",
        "postTime": 1554812202,
        "uid": 99460,
        "name": "Hiraeth",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4392 \u3010[BOI2007]Sound \u9759\u97f3\u95ee\u9898\u3011"
    }
]