[
    {
        "content": "**HNOI2010 D2T1 \u7eaf\u8d2a\u5fc3**~~+\u535a\u5f08\u8bba~~\uff08\u4e0d\u4f1a\u535a\u5f08\u8bba\u7167\u6837\u53ef\u4ee5\u505a\uff09\n\n\u7b97\u6cd5\u96be\u5ea6\u666e\u53ca\uff08\u5c0f\u5b66\u5965\u6570\uff09\n\n\u7f16\u7a0b\u96be\u5ea6\u7701\u9009\n\n**\u8ba1\u7b97\u65b9\u6cd5\uff1a**\n\n\u56e0\u4e3a\u77f3\u5b50\u603b\u6570\u56fa\u5b9a\uff0c\u95ee\u9898\u53ef\u4ee5\u8f6c\u6362\u4e3a\uff08\u5148\u624b\u53d6\u5f97\u7684\u603b\u77f3\u5b50\u6570-\u540e\u624b\u53d6\u5f97\u7684\u603b\u77f3\u5b50\u6570\uff09\u7684\u5dee\u6700\u5927\u662f\u591a\u5c11\u3002\n\n\u7528\u5df2\u6709\u76840\u5c06\u6570\u5217\u5206\u6210\u591a\u4e2a\u5b50\u4e32\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5b50\u4e32\u54ea\u4e9b\u77f3\u5b50\u60c5\u51b5\u4e0d\u4f1a\u53d7\u5176\u4f59\u5b50\u4e32\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u5b50\u4e32\u5148\u5355\u72ec\u5904\u7406\uff0c\u518d\u8d2a\u5fc3\u9009\u62e9\u3002\n\n**\u8d2a\u5fc3\u7b56\u7565\uff1a**\n\n\u5bf9\u4e8e\u6240\u6709\u4e0d\u542b0\u8fde\u7eed\u4e09\u4e2a\u6570a1,a2,a3\uff0c\u5982\u679ca2>a1\u4e14a2>a3\uff0c\u552f\u4e00\u60c5\u51b5\u662f\u4e00\u4e2a\u4eba\u53d6a1\u548ca3\uff0c\u53e6\u4e00\u4e2a\u4eba\u53d6a2\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u4e09\u4e2a\u6570\u5408\u5e76\u4e3aa1+a3-a2\u3002\n\n\u5148\u5c06\u6574\u4e2a\u6570\u5217\u505a\u4e0a\u9762\u7684\u5904\u7406\uff0c\u76f4\u81f3\u6ca1\u6709\u53ef\u4ee5\u5408\u5e76\u7684\u6570\u4e3a\u6b62\u3002\n\n\u5904\u7406\u5b8c\u540e\uff0c\u6bcf\u4e00\u4e2a\u5b50\u4e32\u53ea\u4f1a\u6709V\u5b57\u5f62\u3001\u5355\u8c03\u9012\u589e\u3001\u5355\u8c03\u9012\u51cf\u4e09\u79cd\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u4e2d\u95f4\u7684\u5b50\u4e32\uff08\u5373\u4e24\u8fb9\u90fd\u53ef\u4ee5\u53d6\uff09\uff0c\u76f4\u63a5\u8d2a\u5fc3\u53d6\u5373\u53ef\uff0c\u6240\u4ee5\u5c06\u5904\u7406\u540e\u6240\u6709\u7684\u77f3\u5b50\u5806\u6392\u5e8f\uff0c\u53cc\u65b9\u4ece\u6700\u5927\u7684\u5f00\u59cb\u8f6e\u6d41\u53d6\u5373\u53ef\uff08\u6613\u8bc1\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5bf9\u4e8e\u4efb\u4f55\u4e00\u5806\u77f3\u5b50\uff0c\u53d6\u7684\u65f6\u5019\u81f3\u5c11\u6709\u4e00\u8fb9\u4e3a\u7a7a\uff09\u3002\n\n\u5bf9\u4e8e\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5b50\u4e32\uff08\u5373\u53ea\u6709\u4e00\u8fb9\u53ef\u4ee5\u53d6\uff09\uff0c\u5f00\u5934\u5355\u8c03\u4e0a\u5347\u548c\u7ed3\u5c3e\u5355\u8c03\u4e0b\u964d\u7684\u90e8\u5206\uff0c\u53d6\u5f97\u65f6\u5019\u4e0d\u53d7\u5f71\u54cd\uff0c\u548c\u4e2d\u95f4\u7684\u5b50\u4e32\u4e00\u6837\u5904\u7406\u5373\u53ef\u3002\u5176\u4f59\u9700\u8981\u7279\u6b8a\u5904\u7406\uff08\u8fd9\u5957\u9898\u6700\u590d\u6742\u7684\u5730\u65b9\uff09\u3002\n\n**\u7279\u6b8a\u5904\u7406\uff1a**\n\n\u8fd9\u91cc\u4ee5\u5f00\u5934\u4e3a\u4f8b\uff0c\u7ed3\u5c3e\u53cd\u8fc7\u6765\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u5355\u8c03\u4e0b\u964d\u7684\u90e8\u5206\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u76f4\u63a5\u5ffd\u7565\u3002\n\n\u5982\u679c\u662f\u5076\u6570\u5806\u77f3\u5b50\uff0c\u5148\u53d6\u8005\u80af\u5b9a\u662f\u4e0d\u5229\u7684\uff0c\u6240\u4ee5\u53cc\u65b9\u90fd\u4e0d\u613f\u610f\u5148\u53d6\uff0c\u800c\u4e14\u5373\u4f7f\u4e0d\u53d6\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u5806\u77f3\u5b50\u3002\u6240\u4ee5\u76f4\u63a5\u8f6e\u5230\u6700\u540e\uff0c\u6839\u636e\u53d6\u5f97\u6b21\u6570\u53ef\u4ee5\u7b97\u51fa\u54ea\u65b9\u5fc5\u987b\u8981\u53d6\u3002\n\n\u5982\u679c\u662f\u5947\u6570\u5806\u77f3\u5b50\uff0c\u60c5\u51b5\u5c31\u5f88\u591a\u4e86\uff0c\u4f46\u6709\u4e00\u79cd\u7b80\u5355\u7684\u5904\u7406\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5355\u8c03\u4e0a\u5347\u548c\u5355\u8c03\u4e0b\u964d\u4ea4\u6c47\u5904\u7684\u77f3\u5b50\u5806\u80af\u5b9a\u5b58\u5728\uff08\u5982\u679c\u53ea\u6709\u5355\u8c03\u4e0b\u964d\uff0c\u5c31\u7279\u6307\u6700\u540e\u4e00\u5806\uff09\uff0c\u4e14\u4f7f\u7528\u4e24\u79cd\u5904\u7406\u65b9\u6cd5\u7686\u6b63\u786e\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u53d6\u820d\u4f7f\u5355\u8c03\u4e0b\u964d\u90e8\u5206\u4e3a\u5076\u6570\u5806\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6\uff1a**\n\n\u8ba1\u7b97\u90e8\u5206\u662fO(n)\uff0c\u4f46\u56e0\u4e3a\u9700\u8981\u6392\u5e8f\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(nlogn)\u3002\n\n**\u8c03\u8bd5\u6570\u636e\uff1a**\n\n\u8fd9\u4e2a\u6570\u636e\u4e0d\u662f\u6700\u7ec8\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u662f\u6211\u81ea\u5df1\u751f\u6210\u7528\u6765\u5bf9\u62cd\u7684\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\n\n\u8f93\u5165\uff1a\n\n10\n\n8042 6816 9577 4242 7198 1422 0 2363 3427 3927\n\n\u8f93\u51fa\uff1a\n\n30857 16157\n\n\n**\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u770b\u4e0d\u61c2\u53ef\u4ee5\u79c1\u4fe1\u6211\u3002**\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std; \nlong long a,b,c,d,e,f,g,h,r,s,i,m,n,x[2000000]={0},w[2000000]={0};\nint main()\n{\nscanf(\"%lld\",&a);\nc=0;\nd=0;\nn=0;\ng=1;\nfor(i=1;i<=a;i++)\n{\n\tscanf(\"%lld\",&b);\n\td+=b;\n\tif(b>0)\n\t{\n\t\tc++;\n\t\tx[c]=b;\n\t\twhile((c>2)&&(x[c-1]>x[c])&&(x[c-1]>x[c-2]))\n\t\t{\n\t\t\tx[c-2]=x[c]+x[c-2]-x[c-1];\n\t\t\tc-=2;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(g==1)\n\t\t{\n\t\t\tr=1;\n\t\t\tif(c>0)\n\t\t\t{\n\t\t\t\tf=x[1];\n\t\t\t\tm=2;\n\t\t\t\twhile((m<=c)&&(x[m-1]>=x[m]))\n\t\t\t\t{\n\t\t\t\t\tf=-f;\n\t\t\t\t\tf+=x[m];\n\t\t\t\t\tr^=1;\n\t\t\t\t\tm++;\n\t\t\t\t}\n\t\t\t\tif(r==1)\n\t\t\t\t{\n\t\t\t\t\tm--;\n\t\t\t\t\tf-=x[m];\n\t\t\t\t\tf=-f;\n\t\t\t\t\tif(m>1) r=0;\n\t\t\t\t}\n\t\t\t\tfor(;m<=c;m++)\n\t\t\t\t{\n\t\t\t\t\tn++;\n\t\t\t\t\tw[n]=x[m];\n\t\t\t\t}\n\t\t\t}\n\t\t\tg=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(m=1;m<=c;m++)\n\t\t\t{\n\t\t\t\tn++;\n\t\t\t\tw[n]=x[m];\n\t\t\t}\n\t\t}\n\t\tc=0;\n\t}\n}\ns=1;\nif(c>0)\n{\n\tg=x[c];\n\tm=c;\n\twhile((c>1)&&(x[c]>=x[c-1]))\n\t{\n\t\tg=-g;\n\t\tg+=x[c-1];\n\t\tc--;\n\t\ts^=1;\n\t}\n\tif(s==1)\n\t{\n\t\tg-=x[c];\n\t\tg=-g;\n\t\tc++;\n\t\tif(c<=n) s=0;\n\t}\n\tfor(m=1;m<c;m++)\n\t{\n\t\tn++;\n\t\tw[n]=x[m];\n\t}\n}\nsort(w+1,w+n+1);\nh=0;\nfor(m=n;m>=1;m-=2)\n{\n\th=h+w[m]-w[m-1];\n}\nif(r==0)\n{\n\tif(n%2==0) h+=f;\n\telse h-=f;\n}\nif(s==0)\n{\n\tif(n%2==0) h+=g;\n\telse h-=g;\n}\nprintf(\"%lld %lld\\n\",(d+h)/2,(d-h)/2);\n}\n```",
        "postTime": 1519785276,
        "uid": 20909,
        "name": "\u9a6c\u5fc5\u8fb0",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3210 \u3010[HNOI2010]STONE \u53d6\u77f3\u5934\u6e38\u620f\u3011"
    },
    {
        "content": "\u8003\u8651\u5230\u5148\u624b\u548c\u540e\u624b\u90fd\u4f7f\u7528\u6700\u4f18\u7b56\u7565\uff0c\u6240\u4ee5\u53ef\u4ee5\u50cf\u5bf9\u6297\u641c\u7d22\u4e00\u6837\uff0c\u8bbe $val$ \u4e3a\u5148\u624b\u6536\u76ca\u51cf\u53bb\u540e\u624b\u6536\u76ca\u7684\u503c\u3002\u90a3\u4e48\u5148\u624b\u60f3\u8ba9 $val$ \u5c3d\u53ef\u80fd\u5927\uff0c\u540e\u624b\u60f3\u8ba9 $val$ \u5c3d\u53ef\u80fd\u5c0f\u3002\n\n\u7ee7\u7eed\u5206\u6790\u9898\u76ee\u6027\u8d28\uff0c\u53d1\u73b0\u53d6\u77f3\u5b50\u7684\u8fc7\u7a0b\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e24\u7aef\u5206\u522b\u6709\u4e00\u4e2a\u6808\uff0c\u53ef\u4ee5\u4ece\u6808\u9876\u53d6\u77f3\u5b50\uff0c\u4e2d\u95f4\u6709\u82e5\u5e72\u4e2a\u53cc\u7aef\u961f\u5217\uff0c\u53ef\u4ee5\u4ece\u5176\u4e24\u7aef\u53d6\u77f3\u5b50\u3002\n\n\u5982\u679c\u53d6\u4e00\u4e2a\u4f4d\u7f6e\u540e\uff0c\u63a5\u4e0b\u6765\u7684\u4f4d\u7f6e\u6bd4\u521a\u624d\u53d6\u7684\u90a3\u4e2a\u4f4d\u7f6e\u6743\u503c\u5c0f\uff0c\u4e5f\u5c31\u662f\u4ece\u9009\u62e9\u65b9\u5411\u5f00\u59cb\u6743\u503c\u662f\u9012\u51cf\u7684\uff0c\u6bcf\u6b21\u51b3\u7b56\u80af\u5b9a\u90fd\u662f\u53d6\u5f53\u524d\u5c40\u9762\u6743\u503c\u6700\u5927\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u4e0d\u4fdd\u8bc1\u9012\u51cf\uff0c\u5c31\u6709\u53ef\u80fd\u53d6\u5b8c\u4e00\u4e2a\u4f4d\u7f6e\u540e\uff0c\u4f7f\u5f97\u4e00\u4e2a\u6743\u503c\u66f4\u5927\u7684\u4f4d\u7f6e\u53ef\u4ee5\u53d6\uff0c\u8fd9\u65f6\u6309\u6700\u5927\u503c\u51b3\u7b56\u5c31\u6709\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u3002\n\n\u5bf9\u4e8e $a_{i-1},a_i,a_{i+1}$\uff0c\u82e5\u5176\u6ee1\u8db3 $a_i \\geqslant a_{i-1},a_i \\geqslant a_{i+1}$\uff0c\u5f53\u4e00\u6b21\u51b3\u7b56\u9009 $a_{i-1}$ \u6700\u4f18\u65f6\uff0c\u5148\u624b\u9009 $a_{i-1}$\uff0c\u5176\u540e\u624b\u4e00\u5b9a\u4f1a\u63a5\u7740\u9009 $a_i$\uff0c\u7136\u540e\u5148\u624b\u4f1a\u63a5\u7740\u9009 $a_{i+1}$\u3002\u9009 $a_{i-1}$ \u65f6\uff0c\u5f53\u524d\u5c40\u9762\u4e00\u5b9a\u6ca1\u6709\u6bd4 $a_{i-1}$ \u66f4\u597d\u7684\u9009\u62e9\uff0c\u800c $a_i$ \u6bd4 $a_{i-1}$ \u66f4\u4f18\uff0c\u6240\u4ee5\u540e\u624b\u4e00\u5b9a\u9009 $a_i$\uff0c\u56e0\u4e3a\u4e4b\u524d  $a_{i-1}$ \u662f\u6700\u4f18\u7684\u9009\u62e9\uff0c\u6240\u4ee5\u5148\u624b\u4f1a\u63a5\u7740\u9009 $a_{i+1}$\u3002\u56e0\u6b64\u628a $a_{i-1},a_i,a_{i+1}$ \u5bf9 $val$ \u7684\u8d21\u732e\u770b\u4f5c\u6574\u4f53\uff0c\u5c06\u5176\u5408\u5e76\u4e3a\u4e00\u4e2a\u6743\u503c\u4e3a $a_{i-1}+a_{i+1}-a_i$ \u7684\u77f3\u5b50\u3002\n\n\u5408\u5e76\u5b8c\u540e\u6240\u6709\u7684\u6743\u503c\u60c5\u51b5\u53ea\u5b58\u5728\u9012\u589e\uff0c\u9012\u51cf\u548c\u4e0b\u51f9\u7684\u60c5\u51b5\u4e86\uff0c\u8fd9\u4e09\u4e2a\u60c5\u51b5\u5bf9\u4e8e\u53cc\u7aef\u961f\u5217\u90fd\u662f\u53ef\u4ee5\u5355\u8c03\u7684\u4ece\u5927\u5230\u5c0f\u9009\uff0c\u5bf9\u4e8e\u4ece\u6808\u9876\u65b9\u5411\u5f00\u59cb\u9012\u51cf\u7684\u6808\u7684\u90e8\u5206\u4f4d\u7f6e\uff0c\u4e5f\u662f\u53ef\u4ee5\u5355\u8c03\u7684\u4ece\u5927\u5230\u5c0f\u9009\uff0c\u8fd9\u4e9b\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u76f4\u63a5\u6392\u5e8f\u540e\u5148\u540e\u624b\u4e00\u4e2a\u4e00\u4e2a\u9009\u4e86\u3002\n\n\u800c\u5bf9\u4e8e\u4ece\u6808\u9876\u65b9\u5411\u5f00\u59cb\u9012\u589e\u7684\u6808\u7684\u90e8\u5206\u4f4d\u7f6e\uff0c\u4e00\u5b9a\u662f\u6700\u540e\u624d\u5f00\u59cb\u9009\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u51b3\u7b56\u4e00\u5b9a\u662f\u52a3\u4e8e\u5176\u4ed6\u51b3\u7b56\uff0c\u63d0\u524d\u5904\u7406\u51fa\u5176\u9009\u62e9\u7684\u7ed3\u679c\uff0c\u6700\u540e\u6839\u636e\u5148\u540e\u624b\u7684\u60c5\u51b5\u5206\u914d\u5373\u53ef\u3002\n\n\u5408\u5e76\u5220\u9664\u64cd\u4f5c\u53ef\u4ee5\u7528\u94fe\u8868\u6765\u5b9e\u73b0\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 2000010\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nll n,sum,val,s,L,R,tot;\nll l[maxn],r[maxn],v[maxn];\nbool tag[maxn];\nbool cmp(const ll &a,const ll &b)\n{\n    return a>b;\n}\nint main()\n{\n    read(n),r[0]=1,l[n+1]=n;\n    for(int i=1;i<=n;++i)\n        read(v[i]),sum+=v[i],l[i]=i-1,r[i]=i+1,tag[i]=(v[i]!=0);\n    for(int i=3;i<=n;i=r[i])\n        while(tag[l[l[i]]]&&tag[l[i]]&&tag[i]&&v[l[i]]>=v[l[l[i]]]&&v[l[i]]>=v[i])\n            v[i]=v[l[l[i]]]+v[i]-v[l[i]],r[l[l[l[i]]]]=i,l[i]=l[l[l[i]]];\n    L=r[0],R=l[n+1];\n    while(v[L]>=v[r[L]]&&tag[L]&&tag[r[L]]) s+=v[r[L]]-v[L],L=r[r[L]];\n    while(v[R]>=v[l[R]]&&tag[R]&&tag[l[R]]) s+=v[l[R]]-v[R],R=l[l[R]];\n    for(int i=L;i<=R;i=r[i])\n        if(tag[i])\n            v[++tot]=v[i];\n    sort(v+1,v+tot+1,cmp),v[++tot]=s;\n    for(int i=1;i<=tot;++i)\n    {\n        if(i&1) val+=v[i];\n        else val-=v[i];\n    }\n    printf(\"%lld %lld\",(sum+val)/2,(sum-val)/2);\n    return 0;\n}\n```",
        "postTime": 1594718289,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3210 \u3010[HNOI2010]\u53d6\u77f3\u5934\u6e38\u620f\u3011"
    },
    {
        "content": "\u611f\u8c22\u5de8\u635eYCB orz\n\n\u90e8\u5206\u5185\u5bb9\u6765\u81eaGuessYCB\u535a\u5ba2\n\n\n  \u9898\u76ee\u7684\u610f\u601d\u662f\uff1a\u7ed9\u4e24\u4e2a\u6808\u548c\u4e00\u4e9b\u53cc\u7aef\u961f\u5217\uff0c\u95ee\u5148\u540e\u624b\u6700\u4f18\u65b9\u6848\u4e0b\u7684\u53d6\u503c\u3002\n  \n  \u56e0\u4e3a\u603b\u4ef7\u503c\u5df2\u7ecf\u786e\u5b9a\uff0c\u90a3\u4e48\u5148\u624b\u7684\u76ee\u6807\u662f\u4f7f\u5f97\u81ea\u5df1\u4e0e\u5bf9\u65b9\u7684\u5dee\u503c\u5c3d\u53ef\u80fd\u5927\uff0c\u540e\u624b\u7684\u76ee\u6807\u65f6\u5c3d\u53ef\u80fd\u5c0f\n  \n  \u5148\u770b\u6808\uff0c\u6808\u7684\u53d6\u503c\u5176\u5b9e\u662f\u56fa\u5b9a\u4e86\u7684\u3002\n  \n  \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6808\uff0c\u5982\u679c\u662f\u5355\u8c03\u4e0b\u964d\n  \n  \u4f8b\u5982\u5de6\u8fb9\u7684\u6808 \u82e5\u6709ai<ai-1<ai-2\n  \n  \u90a3\u4e48\u5f53\u524d\u53d6\u5148\u624b\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\n  \n  \u56e0\u4e3a\u540e\u624b\u53d6\u5230\u7684ai\u4e00\u5b9a\u5927\u4e8eai-1\n  \n  \u5982\u679c\u5bf9\u4e8e\u6808\u5355\u8c03\u4e0a\u5347\n  \n  \u90a3\u4e48\u5f53\u524d\u53d6\u540e\u624b\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\n  \n  \u5bf9\u4e8e\u6ca1\u6709\u5355\u8c03\u5173\u7cfb\u7684\u53d8\u5316\n  \n  \u5982\u679c\u662fai-1<ai>ai+1\u8fd9\u79cd\u60c5\u51b5\n  \n  \u90a3\u4e48\u6b64\u65f6\u7684\u5148\u624b\u4e0e\u540e\u624b\u7684\u6536\u76ca\u5dee\u5176\u5b9e\u662f\u786e\u5b9a\u4e86\u7684\n  \n  \u5148\u624b\u5148\u53d6\u65c1\u8fb9\u4e24\u4e2a\u70b9\u4e2d\u7684\u4e00\u4e2a\uff0c\u540e\u624b\u4e00\u5b9a\u53d6\u4e2d\u95f4\u6700\u4f18\n  \n  \u5148\u624b\u518d\u53d6\u53e6\u5916\u4e00\u4e2a\n  \n  \u8fd9\u6837\u7684\u53d6\u6cd5\u5bf9\u4e8e\u4e2d\u95f4\u7684\u961f\u5217\u53ef\u884c\uff0c\u5bf9\u4e8e\u4e24\u8fb9\u7684\u6808\u4e5f\u662f\u53ef\u884c\u7684\n  \n  \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u4e09\u4e2a\u5408\u5e76\u4e3a\u4e00\u4e2a\n  \n  \u5373anew=ai\u22121+ai+1\u2212ai\n  \n  \u8fd9\u6837\u628a\u6240\u6709\u7684\u4e0a\u51f8\u5173\u7cfb\u5168\u90e8\u5408\u5e76\u5b8c\u4e4b\u540e\uff0c\u5927\u6982\u6574\u4e2a\u56fe\u957f\u8fd9\u4e2a\u6837\u5b50\n\n  \u6bcf\u4e00\u5757\u4e00\u5b9a\u662f\u5f00\u53e3\u5411\u4e0a\u7684\u4e8c\u6b21\u51fd\u6570\u5f62\u72b6\n  \n  \u5bf9\u4e8e\u4e2d\u95f4\u7684\u961f\u5217\uff0c\u6700\u4f18\u4e00\u5b9a\u53ef\u4ee5\u7acb\u523b\u53d6\u5230\n  \n  \u4e3a\u4ec0\u4e48\u5462\uff0c\u56e0\u4e3a\u4e24\u8fb9\u6700\u5927\u4e2d\u95f4\u6700\u5c0f\uff0c\u5f53\u524d\u5148\u624b\u4e00\u5b9a\u4f1a\u53d6\u4e24\u8fb9\uff0c\u800c\u4e24\u8fb9\u53c8\u662f\u5408\u6cd5\u7684\n  \n  \u5bf9\u4e8e\u5de6\u53f3\u4e24\u4e2a\u6808\u7684\u9760\u8fd1\u91cc\u9762\u7684\u6bb5\u4e5f\u662f\u5408\u6cd5\u7684\u60c5\u51b5\n  \n  \u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e9b\u77f3\u5934\u6392\u5e8f\u540e\u8d2a\u5fc3\u9009\u5c31\u53ef\u4ee5\u4e86\n  \n  \u5bf9\u4e8e\u6808\u5355\u8c03\u9760\u8fd1\u5916\u9762\u7684\u6bb5\uff0c\u8fdb\u884c\u76f8\u90bb\u4e24\u4e24\u914d\u5bf9\n  \n  \u65e0\u6cd5\u914d\u5bf9\u7684\u9760\u5185\u5355\u9879\u548c\u4e4b\u524d\u7684\u77f3\u5934\u4e00\u8d77\u6392\u5e8f\n  \n  \u8fd9\u6837\u4fdd\u8bc1\u662f\u6700\u4f18\u7684\n  \n  \u56e0\u4e3a\u6ca1\u6709\u4eba\u613f\u610f\u7b2c\u4e00\u4e2a\u5f00\u59cb\u9009\u90a3\u4e24\u6bb5\n  \n  \u6240\u4ee5\u5728\u4e2d\u95f4\u5168\u90e8\u9009\u5b8c\u540e\uff0c\u5224\u65ad\u5947\u5076\u6027\u76f4\u63a5\u7b97\u8d21\u732e\u5c31\u597d\u4e86\n  \n  \u9644\u4ee3\u7801\n  \n  \n```\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<stack>\n#define il inline\n#define rg register\n#define ll long long\n#define ld long double\n#define inf 2147483647000\n#define mod 998244353\n#define N 1000001\nusing namespace std;\nll n,op,Qcnt,Gcnt;\nll tot,now,fir,ans,w[N],Q[N],G[N];\nll A[N],Acnt,B[N],Bcnt;\nil void re(rg int &x);\nil void Re(rg ll &x);\nint main(){\n    Re(n),G[0]=-inf;\n    for(rg int i=1;i<=n;++i)\n        Re(w[i]),tot+=w[i];\n    for(rg int i=1;i<=n;++i){\n        if(w[i]){\n            G[++Gcnt]=w[i],w[i]=0;\n            if(Gcnt>=3)\n                while(G[Gcnt]<=G[Gcnt-1]&&G[Gcnt-1]>=G[Gcnt-2]){\n                    G[Gcnt-2]=G[Gcnt]+G[Gcnt-2]-G[Gcnt-1];\n                    Gcnt-=2;\n                    if(Gcnt<=2)break;\n                }\n        }\n        else break;\n    }\n    for(op=Gcnt;op>=1;--op){\n        if(G[op]>=G[op-1])\n            Q[++Qcnt]=G[op];\n        else break;\n    }\n    for(rg int i=1;i+1<=op;i+=2)\n        A[++Acnt]+=G[i+1]-G[i];\n    if(op&1)Q[++Qcnt]=G[op];\n//\u9884\u5904\u7406\u524d\u9762\n    Gcnt=0;\n    for(rg int i=n;i>=1;--i){\n        if(w[i]){\n            G[++Gcnt]=w[i],w[i]=0;\n            if(Gcnt>=3)\n                while(G[Gcnt]<=G[Gcnt-1]&&G[Gcnt-1]>=G[Gcnt-2]){\n                    G[Gcnt-2]=G[Gcnt]+G[Gcnt-2]-G[Gcnt-1];\n                    Gcnt-=2;\n                    if(Gcnt<=2)break;\n                }\n        }\n        else break;\n    }\n    for(op=Gcnt;op>=1;--op){\n        if(G[op]>=G[op-1])\n            Q[++Qcnt]=G[op];\n        else break;\n    }\n    for(rg int i=1;i+1<=op;i+=2)\n        B[++Bcnt]+=G[i+1]-G[i];\n    if(op&1)Q[++Qcnt]=G[op];\n//\u9884\u5904\u7406\u540e\u9762\n    Gcnt=0;\n    for(rg int i=1;i<=n;++i){\n        if(w[i]){\n            G[++Gcnt]=w[i];\n            if(Gcnt>=3)\n                while(G[Gcnt]<=G[Gcnt-1]&&G[Gcnt-1]>=G[Gcnt-2]){\n                    G[Gcnt-2]=G[Gcnt]+G[Gcnt-2]-G[Gcnt-1];\n                    Gcnt-=2;\n                    if(Gcnt<=2)break;\n                }\n        }\n        else while(Gcnt)Q[++Qcnt]=G[Gcnt--];\n    }\n    sort(Q+1,Q+Qcnt+1),op=1;\n    for(rg int i=Qcnt;i>=1;--i)\n        ans+=op*Q[i],op*=-1;\n    ll AA=0,BB=0;\n    for(rg int i=1;i<=Acnt;++i)\n        AA+=A[i];//,cout<<A[i]<<' ';\n    for(rg int i=1;i<=Bcnt;++i)\n        BB+=B[i];//,cout<<B[i]<<' ';\n//\tcout<<endl;\n//\tcout<<ans<<' '<<AA<<' '<<BB<<endl;\n    if(Qcnt&1)ans-=(AA+BB);\n    else ans+=(AA+BB);\n    printf(\"%lld %lld\\n\",(tot+ans)>>1,(tot-ans)>>1);\n    return 0;\n}\nil void re(rg int &x){\n    x=0;rg int w=1;char c=getchar();\n    while((c<'0'||c>'9')&&c!='-')c=getchar();\n    if(c=='-')w=-1,c=getchar();\n    while(c>='0'&&c<='9')x=(x<<3)+(x<<1)+c-'0',c=getchar();\n    x*=w;\n}\nil void Re(rg ll &x){\n    x=0;rg int w=1;char c=getchar();\n    while((c<'0'||c>'9')&&c!='-')c=getchar();\n    if(c=='-')w=-1,c=getchar();\n    while(c>='0'&&c<='9')x=(x<<3)+(x<<1)+c-'0',c=getchar();\n    x*=w;\n}\n```\n",
        "postTime": 1531800048,
        "uid": 66915,
        "name": "Tyher",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3210 \u3010[HNOI2010]\u53d6\u77f3\u5934\u6e38\u620f\u3011"
    },
    {
        "content": "### \u9898\u610f\n>\u7ed9\u4f60$2$\u4e2a\u6808\u548c\u82e5\u5e72\u4e2a\u53cc\u7aef\u961f\u5217,\u6808\u53ea\u53ef\u4ee5\u5728\u6808\u9876\u53d6\uff0c\u53cc\u7aef\u961f\u5217\u53ef\u4ee5\u4e24\u7aef\u53d6\uff0c\u4e24\u4eba\u8f6e\u6d41\u53d6\uff0c\u53d6\u6700\u591a\u8005\u80dc\uff0c\u6c42\u6700\u540e\u4e24\u4eba\u53d6\u7684\u6570\u548c\n\n### Solution\n\n\u9996\u5148\u4e24\u4e2a\u4e8b\u60c5:\u5bb9\u5668\u95f4\u987a\u5e8f\u65e0\u5173,\u5168\u5c40\u6700\u4f18\u89e3\u6cd5\u5373\u6b65\u9aa4\u95f4\u5dee\u503c\u5c40\u90e8\u6700\u4f18\u89e3\u6cd5\n\n\u8003\u8651\u4e00\u4e2a\u961f\u5217\u5355\u8c03/\u5355\u8c37\uff0c\u4e00\u4e2a\u6808**\u6709\u5411**\u5355\u8c03\u65f6\uff0c\u5c31\u6709\u6ce8\u5b9a\u7b56\u7565\n\n\u6211\u4eec\u5c31\u5148\u8fd9\u6837\u53d6\u5b8c\uff0c\u7136\u540e\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u975e\u5355\u8c03/\u5355\u8c37\u7684\u60c5\u51b5\u4e00\u5b9a\u5305\u542b\n\n$A,B,C$,\u5176\u4e2d$A\\leqslant B,C\\leqslant B$\n\n\u9996\u5148\u6613\u8bc1\u660e\u8fd9\u6837\u7684\u72b6\u6001\u5d4c\u5957\u540e\u4e0e\u89e3\u51b3\u987a\u5e8f\u65e0\u5173\uff0c\u7136\u540e\u5373\u4e00\u5b9a\u843d\u5230\u5b64\u96f6\u96f6\u53ea\u5269\u4e0b\n\u8fd9\u4e09\u4e2a\u6570\u7ed3\u5c40\n\n\u8003\u8651\u5176\u7b56\u7565\u4e5f\u552f\u4e00,\u5148\u624b\u53d6\u5b8c$A/C$,\u540e\u624b\u5fc5\u5b9a\u4e3a\u4e86\u4f7f\u8fd9\u4e00\u8f6e\u4f18\u52bf\u6700\u5927(\u4e0b\u4e00(\u534a)\u8f6e\u4e0d\u4f1a\u5b58\u5728\u52a3\u52bf)\u800c\u9009$B$,\u4e8e\u662f\u5148\u624b\u53ea\u80fd\u9009$C/A$\n\n\u56e0\u6b64\u8fd9\u4e2a\u72b6\u6001\u7b49\u4ef7\u4e8e\u7ed9\u5f53\u524d\u5148\u624b\u8d21\u732e$A+C-B$\u7684\u503c\n\n\u56e0\u6b64\u6211\u4eec\u8fed\u4ee3\u505a\u628a\u6ce8\u5b9a\u7b56\u7565\u7684\u6c42\u5b8c\u7136\u540e\u6253\u5305\u8fd9\u6837\u4e09\u5143\u7ec4\u60c5\u51b5\n\n\u76f4\u5230\u53ea\u5269\u4e0b\u4e24\u7aef**\u53cd\u5411**\u5355\u8c03\u7684\u6808\u90e8\u5206\u65f6\u8f6e\u6309\u5927\u5c0f\u6d41\u53d6\u5373\u53ef\n\n\u53cc\u5411\u94fe\u8868\u7ef4\u62a4\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define N 1000001\nusing namespace std;\n#define G if(++ip==ie)if(fread(ip=ibuf,1,LL,stdin))\nconst int LL=1<<19;\nchar ibuf[LL],*ie=ibuf+LL,*ip=ie-1;\ninline char nc(void){G;return *ip;}\n#define getchar nc\ninline int read(void){\n\tre char opt;re int flag=1,res=0;\n\twhile((opt=getchar())<'0')if(opt=='-')flag=-1;\n\twhile(opt>='0'){res=(res<<3)+(res<<1)+opt-'0';opt=getchar();}\n\treturn res*flag;\n}\ntypedef long long ll;\nint n,l[N],r[N],top,L,R,num;\nbool emp[N];\nll a[N],st[N],sum,dlt;\ninline void Del(re int x){emp[x]=1,l[r[x]]=l[x],r[l[x]]=r[x];}\nint main(void){\n\tre char flag;re int i,tmp;n=read();\n\tfor(i=1;i<=n;++i)emp[i]=!(a[i]=read()),sum+=a[i],r[i]=i+1,l[i]=i-1,num+=!emp[i];\n\tr[0]=L=1,l[n+1]=R=n,flag=1;\n\twhile(flag&&L<R){\n\t\tflag=0;\n\t\tif(!emp[L]&&!emp[r[L]]&&a[L]>=a[r[L]]){\n           \tdlt+=(num&1)?a[L]-a[r[L]]:a[r[L]]-a[L];\n            tmp=r[r[L]],Del(r[L]),Del(L),L=tmp,flag=1;\n        }\n        if(!emp[R]&&!emp[l[R]]&&a[R]>=a[l[R]]){\n            dlt+=(num&1)?a[R]-a[l[R]]:a[l[R]]-a[R];\n            tmp=l[l[R]],Del(l[R]),Del(R),R=tmp,flag=1;\n        }\n        for(i=L;i<=R;++i)if(!emp[i]&&l[i]&&r[i]<=n&&!emp[l[i]]&&!emp[r[i]]&&a[i]>=a[l[i]]&&a[i]>=a[r[i]]){\n        \ta[i]=a[l[i]]+a[r[i]]-a[i];\n            if(l[i]==L)L=i;if(r[i]==R)R=i;Del(l[i]),Del(r[i]);\n\t\t\tflag=1;\n\t\t}\n\t}\n\tfor(i=1;i<=n;++i)if(!emp[i])st[++top]=a[i];\n\tsort(st+1,st+top+1),reverse(st+1,st+top+1);\n\tfor(i=1;i<=top;++i)dlt+=(i&1)?st[i]:-st[i];\n\tprintf(\"%lld %lld\\n\",(sum+dlt)>>1,(sum-dlt)>>1);\n\treturn 0;\n}\n```",
        "postTime": 1596254149,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3210 \u3010[HNOI2010]\u53d6\u77f3\u5934\u6e38\u620f\u3011"
    }
]