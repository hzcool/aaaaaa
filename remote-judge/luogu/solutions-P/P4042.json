[
    {
        "content": "## \u5173\u4e8e\u601d\u8def\uff1a\n\n1.\u6740\u6b7b\u4e00\u4e2a\u9b54\u7269\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u8ba9\u5979\u5f53\u573a\u53bb\u4e16\u548c\u6740\u6b7b\u5979\u7684\u6240\u6709\u4ea7\u7269\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6bd4\u8f83 \u819c\u6cd5 \u548c \u666e\u653b+\u6d88\u706d\u4ea7\u7269 \u7684\u6d88\u8017\u7136\u540e\u533a\u6700\u5c11\u7684\u5c31\u591f\u4e86\u3002\n\n\u542c\u8d77\u6765\u662f\u4e0d\u662f\u5f88\u50cfdp\uff0c\u4f46\u662f\uff01 \u8fd9\u9898\u53ef\u80fd\u6709\u6b63\u73af\u5e76\u4e0d\u6ee1\u8db3\u6709\u540e\u6548\u6027\u539f\u5219\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u6362\u6761\u601d\u8def\uff0c\u6211\u4eec\u5047\u8bbe\u6740\u6b7b ** a ** \u4f1a\u4ea7\u751f **b** \u548c **c** ,\u90a3\u4e48\u5c31\u5f88\u5bb9\u6613\u770b\u51fa **a** \u5230 **b**\uff0c **a** \u5230 **c** \u4e4b\u95f4\u53ef\u4ee5\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u73b0\u5728\u6211\u4eec\u5c31\u6765\u8ba8\u8bba\u4e00\u4e0b\u600e\u4e48\u6740\u6b7b\u9b54\u7269**\uff1a**\n\n\u5bf9\u5355\u4e2a\u9b54\u7269 **a** \u6bd4\u8f83 \u9b54\u6cd5\uff08a\uff09 \u548c \u666e\u653b\uff08a\uff09 \u5373\u53ef\n\n\u5bf9\u8def\u5f84 a->b \u6bd4\u8f83 \u9b54\u6cd5\uff08a\uff09\u548c \u666e\u653b\uff08a\uff09+min\uff08\u9b54\u6cd5\uff08b\uff09\uff0c\u666e\u653b\uff08b\uff09\uff09\n\n\u73b0\u5728\u6211\u4eec\u5c31\u5f88\u660e\u663e\u7684\u770b\u51fa\u4e86\uff0c\u8fd9\u5c31\u5f88\u50cfspfa\u7684\u677e\u5f1b\u64cd\u4f5c\u3002\u6211\u4eec\u5f00\u59cb\u8003\u8651spfa\u8dd1\u6700\u77ed\u8def\u7684\u505a\u6cd5\u3002\n\n\u4f46\u95ee\u9898\u5728\u4e8e\uff0c\u5f53\u6211\u4eec\u5728\u4f7f\u7528\u201c\u6700\u77ed\u8def\u5f84\u201d\u6765\u89e3\u51b3\u9898\u76ee\u7684\u65f6\u5019\uff0c\u4e00\u822c\u90fd\u662f\u5df2\u77e5\u8d77\u70b9\uff0c\u7ec8\u70b9\u3002\u7136\u540e\u518d\u53bb\u8dd1spfa\uff0c\u5bfb\u627e\u8fd9\u4e2a\u503c\u7684\u5927\u5c0f\u3002\u8fd9\u9053\u95ee\u9898\u5374\u662f\u4f60\u53ea\u77e5\u9053\u8d77\u70b9\uff0c\u8def\u4e0a\u7684\u4efb\u4f55\u4e00\u4e2a\u5730\u65b9\u90fd\u6709\u53ef\u80fd\u662f\u7ec8\u70b9\uff0c\u4e5f\u6709\u53ef\u80fd\u4e0d\u662f\u7ec8\u70b9\u3002 \u5176\u6b21\uff0c\u6211\u4eec\u8981\u6c42\u7684\u4e5f\u4e0d\u662f\u6700\u77ed\u8def\u5f84\uff0c\u800c\u662f\u7b80\u5355\u7684 \u6d88\u706d1\u53f7\u9b54\u7269\u7684\u5f00\u9500\u5927 \u8fd8\u662f \u6d88\u706d\u5979\u548c\u5979\u7684\u4ea7\u7269\u5f00\u9500\u5927\u3002\n\n\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u800c\u8a00\uff0c\u6211\u4eec\u9700\u8981\u9012\u5f52\u5bfb\u627e\u3002\u5355\u53ef\u4ee5\u770b\u51fa\u5176\u4e2d\u7684\u8bb0\u5fc6\u6027\uff0c\u52a8\u6001\u89c4\u5212\u7684\u601d\u60f3\u3002\u5982\u679c\u6211\u4eec\u4ece\u8fd9\u4e2a\u56fe\u6700\u5916\u9762\u5f00\u59cb\u770b\u8d77\uff0c\u4e00\u5c42\u4e00\u5c42\u5f80\u91cc\u8ba1\u7b97\u6d88\u706d\u602a\u7269\u7684\u5f00\u9500\uff0c\u81ea\u7136\u800c\u7136\u9898\u76ee\u5c31\u89e3\u51b3\u4e86\n\n\u4f46\u662f\uff0c\u4e0e\u666e\u901a\u7b80\u5355DP\u4e0d\u540c\u7684\u662f\uff0c\u53ef\u80fd\u6709\u73af\u7684\u5b58\u5728\n\u4f46\u4e8b\u5b9e\u4e0a\u4f3c\u4e4e\u5e76\u4e0d\u7528\u62c5\u5fc3\u3002\u4e0d\u59a8\u4ee4\u6bcf\u4e2a\u70b9\u7684\u521d\u503c\u90fd\u7b49\u4e8e \u9b54\u6cd5\u51fb\u6740\u7684\u6d88\u8017 \uff0c\u5728spfa\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u8fb9\u7684\u677e\u5f1b\u90fd\u662f\u4f9d\u9760\u8ddd\u79bb\u7684\u3002\u81ea\u7136\uff0c\u6b63\u73af\u7684\u4ea7\u751f\u5fc5\u5b9a\u4f1a\u5927\u4e8e\u6700\u77ed\u8ddd\u79bb\uff0c\u6709\u5f97\u4fdd\u8bc1\u3002\n\n\u51ed\u4ec0\u4e48\u4fdd\u8bc1\u4f60\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u8ba1\u7b97\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff1f\u7b54\u6848\u662f\u4e0d\u80fd\u4fdd\u8bc1\uff01\u6240\u4ee5\u4e0d\u5982\u5e72\u8106\u5c31\u628a\u6240\u6709\u70b9\u4e00\u5f00\u59cb\u5c31\u653e\u5728\u961f\u5217\u91cc\u3002 \n\n\u90a3\u4e48\u600e\u4e48\u4fdd\u8bc1\u961f\u5217\u7684\u987a\u5e8f\u4e00\u5b9a\u80fd\u51fa\u6700\u4f18\u89e3\uff1f\u4e0d\u80fd\u4fdd\u8bc1\uff01\u6240\u4ee5\u4e0d\u5982\u5e72\u8106\u6bcf\u6b21\u4e00\u65e6\u66f4\u65b0\u6210\u529f\uff0c\u5c31\u628a\u7236\u8282\u70b9\u518d\u6b21\u5165\u961f\u5217\uff08\u53ea\u53ef\u80fd\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff09\u3002\n\n### \u4ee5\u4e0a\u3002\n\n\n------------\n\n# code\n\n```\n#include<queue>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define maxn 201000\n#define inf 0x3f3f3f3f\n#define int long long\n#define IN inline\n#define re register\nusing namespace std;\nint a[maxn],dis[maxn],vis[maxn]; \nint n;\nvector<int> head[maxn],to[maxn];\nIN int read(){\n    int x=0,sign=1;\n    char c=getchar();\n    while(c>'9'||c<'0'){\n        if(c=='-') sign=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return x*sign;\n}\nIN void add(int u ,int v){head[u].push_back(v);to[v].push_back(u);}\nIN void spfa(){\n\tqueue<int> q;\n\tfor(re int i=1;i<=n;++i) q.push(i),vis[i]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();vis[u]=0;\n\t\tlong long temp=a[u];\n\t\tfor(re int i=0;i<head[u].size();++i) temp+=dis[head[u][i]];\n\t\tif(temp>=dis[u]) continue;\n\t\tdis[u]=temp;\n\t\tfor(re int i=0;i<to[u].size();++i){\n\t\t\tif(!vis[to[u][i]]){\n\t\t\t\tvis[to[u][i]]=1;\n\t\t\t\tq.push(to[u][i]);\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main(){\n\tn=read();\n\tint x=0;\n\tfor(re int i=1;i<=n;++i){\n\t\tint num=0;\n\t\ta[i]=read(),dis[i]=read(),x=read();\n\t\twhile(x--){\n\t\t\tnum=read();\n\t\t\tadd(i,num);\n\t\t}\n\t}\n\tspfa();\n\tprintf(\"%lld\",dis[1]);\n\treturn 0;\n}\n```",
        "postTime": 1542355758,
        "uid": 111961,
        "name": "D_14134",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    },
    {
        "content": "### \u8fd9\u9053\u9898\u662f\u4e00\u9053spfa\u53d8\u5f62\u9898\uff0c\u5177\u4f53\u8003\u5bdf\u5bf9spfa\u7684\u6df1\u5165\u7406\u89e3\nspfa\u672c\u8eab\u662f\u5bf9Bellman-ford\u7b97\u6cd5\u7684\u4f18\u5316\u3002\u5728Bellman-Ford\u7b97\u6cd5\u4e2d\uff0cn\u8f6e\u626b\u63cf\u6bcf\u4e00\u6761\u8fb9\u770b\u4e00\u770b\u5404\u4e2a\u70b9\u6709\u6ca1\u6709\u5e0c\u671b\u88ab\u677e\u5f1b\u3002  \nspfa\u4e4b\u6240\u4ee5\u80fd\u7528\u6765\u5904\u7406Bellman-ford\u5e76\u8fdb\u884c\u4f18\u5316\uff0c\u5176\u539f\u56e0\u662f\u5728Bellman-ford\u4e2d\uff0c\u6bcf\u4e00\u8f6e\u626b\u63cf\u7684\u8fb9\u6709\u5f88\u591a\u90fd\u6ca1\u6709\u53ef\u80fd\u66f4\u65b0\u5176\u5b83\u70b9\u3002spfa\u6307\u51fa\uff0c\u5f53\u4e00\u6761\u8fb9\u6709\u5e0c\u671b\u66f4\u65b0\u5b83\u7684\u4e00\u4e2a\u7aef\u70b9\u7684\u6700\u77ed\u8def\u503c\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u53e6\u4e00\u4e2a\u7aef\u70b9\u7684\u6700\u77ed\u8def\u503c\u88ab\u66f4\u65b0\u8fc7\u3002spfa\u4f7f\u7528\u4e00\u4e2a\u961f\u5217\u4fdd\u7559\u8fd9\u4e9b**\u53ef\u80fd\u88ab\u66f4\u65b0\u7684\u4fe1\u606f**\uff0c\u901a\u5e38\uff0cspfa\u5728\u961f\u5217\u4e2d\u4fdd\u5b58\u7684\u66f4\u65b0\u4fe1\u606f\u7684\u610f\u4e49\u662f\"**\u8fd9\u4e2a\u70b9\u88ab\u66f4\u65b0\u8fc7\uff0c\u56e0\u800c\u6709\u53ef\u80fd\u901a\u8fc7\u4e0e\u5b83\u8fde\u63a5\u7684\u8fb9\u66f4\u65b0\u8fd9\u4e9b\u8fb9\u7684\u5176\u5b83\u7aef\u70b9**\"\u3002\u76f4\u5230\u961f\u5217\u4e3a\u7a7a\uff0c\u6b64\u5c40\u9762\u8868\u793a\"**\u6ca1\u6709\u4e00\u4e2a\u7ed3\u70b9\u53ef\u80fd\u66f4\u65b0\u5176\u5b83\u7684\u7ed3\u70b9**\"\u3002  \n\u8fd9\u6837\u4fdd\u5b58\u66f4\u65b0\u4fe1\u606f\u7684\u539f\u56e0\u662f\u56e0\u4e3a\uff0c\u5728**\u901a\u5e38\u60c5\u51b5**\u4e0b\uff0c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u901a\u8fc7\u4e0e\u5b83\u76f8\u8fde\u7684\u8fb9\u66f4\u65b0\u5176\u5b83\u70b9\uff0c\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684\u66f4\u65b0\u5219\u662f\u53ef\u80fd\u7531\u591a\u4e2a\u901a\u8fc7\u8fb9\u8fde\u5411\u5b83\u7684\u7ed3\u70b9\u51b3\u5b9a\uff0c\u5373**\u4e00\u5bf9\u591a\u7684\u66f4\u65b0**\u3002\u5373\u56e0\u800c\u6211\u4eec\u4fdd\u5b58\u7684\u4fe1\u606f\u662f\"\u53ef\u80fd\u66f4\u65b0\u5176\u4ed6\u591a\u4e2a\u70b9\u7684\u70b9\"\u800c\u4e0d\u662f\"\u53ef\u80fd\u88ab\u5176\u4ed6\u70b9\u66f4\u65b0\u7684\u70b9\"\u56e0\u4e3a\u8fd9\u6837\u505a\u66f4\u65b9\u4fbf\u3002(\u60f3\u4e00\u60f3\uff0c\u7528\u524d\u8005\u5219\u51fa\u961f\u4e00\u4e2a\u7ed3\u70b9\u626b\u63cf\u66f4\u65b0\u53ef\u4ee5\u5c06\u6240\u6709\u7531\u6b64\u7ed3\u70b9\u88ab\u66f4\u65b0\u9020\u6210\u7684\u53ef\u80fd\u88ab\u66f4\u65b0\u7684\u7ed3\u70b9\u7684\u6539\u53d8\u60c5\u51b5\u5168\u90e8\u89e3\u51b3\uff0c\u800c\u5bf9\u4e8e\u540e\u8005\uff0c\u4e00\u4e2a\u7ed3\u70b9\u7684\u66f4\u65b0\u5c06\u6240\u6709\u8fde\u5411\u5b83\u7684\u7ed3\u70b9\u5165\u961f\uff0c\u5219\u5f53\u8fd9\u4e9b\u7ed3\u70b9\u51fa\u961f\u7684\u65f6\u5019\uff0c\u9700\u8981\u626b\u63cf\u5b83\u7684\u6240\u6709\u524d\u9a71\u6765\u51b3\u5b9a\u7ed3\u679c\uff0c\u540e\u8005\u7684\u590d\u6742\u5ea6\u663e\u7136\u6bd4\u524d\u8005\u9ad8\u5f88\u591a\uff0c\u76f8\u5f53\u4e8en^2\u548cn\u7684\u533a\u522b)\u3002  \n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u7ea6\u5b9a\u82e5\u4e00\u4e2a\u9b54\u5934\u7269\u7406\u653b\u51fb\u6253\u51fa\u82e5\u5e72\u9b54\u5934\uff0c\u5219\u524d\u8005\u6210\u4e3a\u540e\u8005\u7684\u7236\u9b54\u5934\uff0c\u540e\u8005\u6210\u4e3a\u524d\u8005\u7684\u5b50\u9b54\u5934\u3002\u7ea6\u5b9a\u67d0\u4e2a\u70b9(\u6216\u9b54\u5934)\u7684\u53d6\u503c\u662f\u6740\u6b7b\u8be5\u70b9\u5bf9\u5e94\u9b54\u5934\u6240\u9700\u82b1\u8d39\u7684\u76ee\u524d\u6700\u4f18\u4ee3\u4ef7\u3002\u7ea6\u5b9a\u67d0\u9b54\u5934\u7684\u9b54\u6740\u503c\u4e3a\u7528\u9b54\u6cd5\u653b\u51fb\u6740\u6b7b\u8be5\u9b54\u5934\u7684\u9b54\u6cd5\u653b\u51fb\u7684\u6d88\u8017\u3002  \n\u5728\u672c\u9898\u4e2d\uff0c\u4e00\u4e2a\u70b9(\u7236\u9b54\u5934)\u7684\u53d6\u503c(\u5373\u6740\u6b7b\u6700\u4f18\u89e3)\u53d6\u51b3\u4e8e\u591a\u4e2a\u70b9(\u5b50\u9b54\u5934)\u7684\u53d6\u503c\uff0c\u4e5f\u5c31\u662f\u552f\u4e00\u4e00\u7ec4\u786e\u5b9a\u7684\u5b50\u9b54\u5934(\u548c\u5176\u7236\u9b54\u5934\u7684\u9b54\u6740\u4e00\u8d77)\u51b3\u5b9a\u4e86\u5176\u7236\u9b54\u5934\u7684\u51fb\u6740\u53d6\u503c\uff0c\u5373**\u591a\u5bf9\u4e00\u7684\u5173\u7cfb**\u3002\u56e0\u800c\u8981\u4fdd\u7559**\u66f4\u65b0\u4fe1\u606f**\uff0c\u7528\u4fdd\u7559\"\u6709\u5e0c\u671b\u88ab\u5b83\u5bf9\u5e94\u7684\u5b50\u9b54\u5934\u7ec4\u66f4\u65b0\u7684\u9b54\u5934\"(\u5373\u7b2c\u4e09\u6bb5\u4e2d\u8bf4\u7684\u7b2c\u4e8c\u79cd\u4fdd\u7559\u65b9\u5f0f)\u7684\u65b9\u5f0f\u663e\u7136\u66f4\u65b9\u4fbf\u3002  \n\u5177\u4f53\u5730\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53ef\u80fd\u88ab\u66f4\u65b0\u7684\u70b9\u626b\u63cf\u5176\u6240\u6709\u5b50\u9b54\u5934\u7684\u53d6\u503c\u76f8\u52a0\u518d\u52a0\u4e0a\u5176\u7269\u7406\u653b\u51fb\u770b\u770b\u80fd\u5426\u66f4\u65b0\uff0c\u82e5\u80fd\u66f4\u65b0\uff0c\u5219\u5c06\u5176\u6240\u6709\u7684\u7236\u9b54\u5934\u5165\u961f\u8868\u793a\u5b83\u4eec\u4e5f\u6709\u5e0c\u671b\u88ab\u66f4\u65b0\u3002\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u672c\u9898\u8003\u67e5\u5bf9spfa\u672c\u8d28\u7684\u7406\u89e3\uff0c\u5373\u7528\"\u53ef\u80fd\u88ab\u66f4\u65b0\u7684\u4fe1\u606f\"\u4f18\u5316\u5904\u7406\u3002\u800c\u8bbe\u8ba1\u53ef\u80fd\u88ab\u66f4\u65b0\u7684\u4fe1\u606f\u7684\u4fdd\u5b58\u65b9\u5f0f\u662f\u672c\u9898\u8bbe\u8ba1\u7684\u91cd\u70b9\u3002  \n\u672c\u9898\u4e2d\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff0c\u4f8b\u5982\uff0c\u5728\u5f00\u59cbspfa\u65f6\u6211\u4eec\u5c06\u5168\u90e8\u7684\u7ed3\u70b9\u8d4b\u503c\u4e3a\u5b83\u4eec\u7684\u9b54\u6740\u503c\u3002\u4f60\u53ef\u4ee5\u5c06\u4e4b\u7406\u89e3\u4e3a\uff0c\u5728\u5f00\u59cb\u5c40\u9762\u4e0b\uff0c\u6240\u6709\u7684\u7ed3\u70b9\u5747\u6709\u5e0c\u671b\u88ab\u66f4\u65b0\u3002(\u53ea\u662f\u6709\u5e0c\u671b\u3002\u5728\u8fd9\u91cc\u63d0\u5230\u7684\u6709\u65e0\u5e0c\u671b\u7684\u5224\u5b9a\u5c31\u50cf\u662fA*\u7b97\u6cd5\u4e2d\u7684\u4f30\u4ef7\u51fd\u6570\u90a3\u6837\uff0c\u5728\u5f00\u5c40\u72b6\u6001\u4e0b\u6211\u4eec\u6ca1\u6709\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u56e0\u800c\u5c06\u6240\u6709\u7ed3\u70b9\"\u4f30\"\u6210\u6709\u5e0c\u671b\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6b63\u786e\u6027)\u3002\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u5728\u5f00\u59cb\u7684\u90a3\u4e00\u77ac\u95f4\uff0c\u5b83\u4eec\u539f\u6765\u7684\u53d6\u503c\u662finf\uff0c\u7136\u540e\u5747\u88ab\u66f4\u65b0\u4e3a\u5176\u9b54\u6740\u503c\uff0c\u56e0\u800c\u8fd9\u4e9b(\u5373\u6240\u6709\u70b9)\u7684\u540e\u7ee7\u5747\u6709\u53ef\u80fd\u88ab\u66f4\u65b0\uff0c\u5047\u8bbe\u56fe\u8054\u901a\uff0c\u90a3\u4e48\u6240\u6709\u70b9\u7684\u540e\u7ee7\u6784\u6210\u7684\u96c6\u5408\u5e94\u5f53\u5305\u542b\u6240\u6709\u70b9(\u4e0d\u8fde\u901a\u5219\u5305\u542b\u90e8\u5206\u70b9\uff0c\u4f9d\u7136\u5bf9\u6b63\u786e\u6027\u6ca1\u6709\u4ec0\u4e48\u5e72\u6270)\u3002  \n\u6e29\u99a8\u63d0\u793a\uff1a\u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00long long\u89c1\u7956\u5b97\u3002  \n\u6700\u540e\u9644\u4e0a\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\nlong long pa[200010], d[200010];\nint head[200100], ver[1000010], nex[1000010], hf[200010], vf[1000010], nf[1000010], inq[200010], tot, tt, n;\n\nqueue<int> q;\n\ninline void add(int u, int v) {\n    ver[tot] = v; nex[tot] = head[u]; head[u] = tot++;\n}\n\ninline void addf(int u, int v) {\n    vf[tt] = v; nf[tt] = hf[u]; hf[u] = tt++;\n}\n\nvoid spfa() {\n    for(int i = 1; i <= n; i++) q.push(i);\n    memset(inq, 1, sizeof(inq));\n    while(!q.empty()) {\n        int cur = q.front(); q.pop(); inq[cur] = 0;\n        long long rs = pa[cur];\n        for(int i = head[cur]; i != -1; i = nex[i]) rs += d[ver[i]];\n        if(d[cur] > rs) {\n            d[cur] = rs;\n            for(int i = hf[cur]; i != -1; i = nf[i])\n                if(!inq[vf[i]]) inq[vf[i]] = 1, q.push(vf[i]);\n        }\n    }\n}\n\nint main() {\n    int r, mos;\n    long long s, k;\n    scanf(\"%d\", &n);\n    memset(head, -1, sizeof(head)); memset(hf, -1, sizeof(hf));\n    for(int i = 1; i <= n; i++) {\n        scanf(\"%lld %lld %d\", &s, &k, &r);\n        d[i] = k; pa[i] = s;\n        while(r--) {\n            scanf(\"%d\", &mos);\n            add(i, mos); addf(mos, i);\n        }\n    }\n    spfa();\n    printf(\"%lld\\n\", d[1]);\n    return 0;\n}\n```\n\u6b22\u8fce\u4e92\u76f8\u5173\u6ce8(\u7136\u800c\u5728oi\u754c\u849f\u84bb\u7684\u5708\u5f88\u5c0f)\u3002  \n\u6700\u540e\u5b89\u5229\u4e00\u4e0b[\u849f\u84bb\u7684\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/oldherd/)",
        "postTime": 1552126068,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    },
    {
        "content": "~~\u600e\u4e48\u90fd\u662fSpfa\u554a~~\n\n~~\u4e07\u4e00\u6302\u4e86\u600e\u4e48\u529e~~\n\n~~\u867d\u7136\u6211\u4e5f\u4e0d\u77e5\u9053\u8fd9\u79cd\u5efa\u6a21\u8dd1spfa\u5230\u5e95\u4f1a\u600e\u4e48\u6837~~\n\n\u6211\u4eec\u8003\u8651\u8bb0$dp[i]$\u8868\u793a\u7b2c$i$\u4e2a\u602a\u7269\u88ab\u6d88\u706d\u7684\u4ee3\u4ef7\n\n\u663e\u7136\u6709\u76f4\u63a5\u8dd1$dp$\u5b83\u4f1a\u6709\u540e\u6548\u6027\n\n\u8f83\u4e3a\u5e38\u89c1\u7684\u53d6\u6d88$dp$\u540e\u6548\u6027\u7684\u65b9\u6cd5\u662f\u6309\u7167\u67d0\u4e2a\u503c\u6392\u5e8f\n\n\u5728\u8fd9\u9053\u9898\u4e2d\u5c31\u662f\u6309\u7167$dp$\u503c\u6392\u5e8f\n\n\u6211\u4eec\u5148\u8003\u8651$dp$\u7684\u8f6c\u79fb\u5f0f\uff1a\n\n$$dp_i=\\min(K_i,S_i+\\sum_{j=1}^{R_i}dp_{v_j})$$\n\n\u4e8e\u662f\u663e\u7136\u6709\uff1a\n\n$dp_i$\u80fd\u4ece\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\u8f6c\u79fb\u5f53\u4e14\u4ec5\u5f53\u5bf9\u4e8e\u4efb\u610f\u7684$dp_{v_j}$\u6709$dp_{v_j}<dp_i$\n\n\u4e8e\u662f\u6211\u4eec\u5bf9$dp$\u503c\u5efa\u4e00\u4e2a\u5806\uff0c\u4ee4\u6bcf\u4e2a\u70b9\u7684\u521d\u59cb$dp$\u503c\u4e3a$K_i$\uff0c\u7136\u540e\u6bcf\u6b21\u5f39\u51fa\u4e00\u4e2a$dp$\u503c\u4ee4\u5176\u53bb\u66f4\u65b0\u5176\u4ed6\u7684$dp$\u503c\u5373\u53ef\n\n\u5982\u679c\u88ab\u66f4\u65b0\u7684$dp$\u503c\u5df2\u7ecf\u66f4\u65b0\u5b8c\u4e86\uff0c\u5c31\u628a\u5b83\u52a0\u5165\u5806\u5185\u5373\u53ef\n\n\u5982\u679c\u5176\u9700\u8981\u66f4\u65b0\u7684$dp$\u503c\u5df2\u7ecf\u88ab\u5f39\u51fa\uff0c\u90a3\u4e48\u663e\u7136\u6709\u90a3\u4e2a$dp$\u503c\u5c0f\u4e8e\u5f53\u524d$dp$\u503c\u6240\u4ee5\u66f4\u65b0\u65e0\u7528\n\n\u590d\u6742\u5ea6$O(n\\log n+\\sum R_i)$\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define re register\n#define int long long\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\nconst int N = 2e5 + 5 ; \nconst int M = 1e6 + 5 ; \nint n, s[N], K[N], dp[N], vis[N], ans[N], R[N] ;\nvector<int> mp[N] ; \nstruct node {\n\tint id, w ; \n\tbool operator < ( const node& x ) const {\n\t\treturn w > x.w ; \n\t}\n};\npriority_queue<node> q ; \nsigned main()\n{\n\tn = read() ; int x, siz ; \n\trep( i, 1, n ) \t{\n\t\ts[i] = read(), K[i] = read(), R[i] = read() ;\n\t\trep( j, 1, R[i] ) x = read(), mp[x].push_back(i) ; \n\t\tq.push((node){ i, K[i] }), dp[i] = s[i] ;\n\t}\n\twhile( !q.empty() ) {\n\t\tint u = q.top().id, w = q.top().w ; q.pop() ; \n\t\tif( vis[u] ) continue ; \n\t\tvis[u] = 1, ans[u] = w, siz = mp[u].size() - 1 ; \n\t\trep( i, 0, siz ) {\n\t\t\tint v = mp[u][i] ; \n\t\t\tif( vis[v] || dp[v] > K[v] ) continue ; \n\t\t\tR[v] --, dp[v] += w ;\n\t\t\tif( R[v] == 0 ) q.push((node){ v, dp[v] }) ;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", ans[1] ) ;\n\treturn 0;\n}\n```\n~~\u8fd9\u4e2a\u505a\u6cd5\u7684\u672c\u8d28\u548cDij\u662f\u4e00\u6837\u7684~~",
        "postTime": 1567221164,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u8bb2\u4e00\u4e2a\u590d\u6742\u5ea6\u53ea\u6709$O(nlogn+\\sum r_i)$\u7684$dijkstra$\u505a\u6cd5\n\n\u4e5f\u5c31\u662f\u8bf4\u8fd9\u9898$\\sum r_i$\u53ef\u4ee5\u51fa\u5230$10^7$\uff0c~~\u800c\u4e14\u53ef\u4ee5\u5361\u6389spfa~~\n\n\u6709\u4eba\u8981\u8bf4$dijkstra$\u590d\u6742\u5ea6\u4e0d\u662f$O(mlogm)$\u7684\u5417\uff1f\u4f46\u662f\u8fd9\u9898\u6211\u7684\u505a\u6cd5\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u5165\u961f$O(1)$\u6b21\uff0c\u6240\u4ee5$m$\u662f\u4e0d\u5e26$log$\u7684\uff0c\u5177\u4f53\u539f\u56e0\u5f80\u4e0b\u770b\u3002\n\n\n\u9996\u5148\u5927\u5bb6\u8981\u5f04\u61c2\u8fd9\u9898spfa\u505a\u6cd5\u7684\u677e\u5f1b\u8fc7\u7a0b\uff08\u53ef\u4ee5\u53c2\u8003\u5176\u5b83\u9898\u89e3\uff09\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u677e\u5f1b\u8fc7\u7a0b\u662f\u6ee1\u8db3\u8d2a\u5fc3\u6027\u8d28\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u5728\u5f53\u524d\u6240\u6709\u8fd8\u5728\u88ab\u677e\u5f1b\u7684\u70b9\u4e2d\u662f\u6700\u5c0f\u7684\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u4e0d\u4f1a\u518d\u88ab\u677e\u5f1b\u4e86\uff0c\u5b83\u7684\u503c\u5c31\u53ef\u4ee5\u76f4\u63a5\u786e\u5b9a\u4e0b\u6765\uff08\u53ef\u4ee5\u7c7b\u6bd4$dijkstra$\u6700\u77ed\u8def\u8fc7\u7a0b\uff09\u3002\n\n\n\u800c\u4e14\u6211\u4eec\u8fd8\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u5728\u4e0d\u8003\u8651\u6cd5\u672f\u653b\u51fb\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u70b9\u7684\u503c\u53ea\u4f1a\u5728\u5b83\u7684\u51fa\u8fb9\uff08\u5373\u6253\u6b7b\u5b83\u4f1a\u53d8\u51fa\u7684\u6240\u6709\u602a\u517d\uff09\u90fd\u88ab\u786e\u5b9a\u4e0b\u6765\u540e\u624d\u4f1a\u88ab\u786e\u5b9a\uff0c\u56e0\u4e3a\u5b83\u7684\u503c\u4e00\u5b9a\u5927\u4e8e\u5b83\u7684\u6240\u6709\u51fa\u8fb9\u7684\u503c\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5b83\u7684\u6240\u6709\u51fa\u8fb9\u90fd\u786e\u5b9a\u540e\u518d\u628a\u5b83\u653e\u5165\u5806\u4e2d\uff0c\u8fd9\u6837\u6bcf\u4e2a\u70b9\u5c31\u53ea\u4f1a\u5165\u5806\u4e00\u6b21\u4e86\u3002\n\n\n\u53e6\u5916\u6211\u4eec\u8fd8\u8981\u628a\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u4f7f\u7528\u6cd5\u672f\u653b\u51fb\u6d88\u8017\u7684\u4f53\u529b\u503c\u4f5c\u4e3adis\u7684\u521d\u59cb\u503c\uff0c\u4e00\u5f00\u59cb\u628a\u6bcf\u4e2a\u70b9\u90fd\u52a0\u5165\u5806\u4e2d\u3002\n\n\n\u8bb2\u5f97\u53ef\u80fd\u4e0d\u6e05\u695a\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 200007\n#define M 2000007\n#define ll long long\nconst ll inf=1e18;\nint hd[N],pre[M],to[M],num,deg[N];\nll dis[N],sum[N];\nstruct str\n{\n\tint v;\n\tll d;\n};\nbool operator <(str a,str b)\n{\n\treturn a.d>b.d;\n}\npriority_queue<str> q;\nbool vis[N];\nvoid dijs()\n{\n\twhile(!q.empty())\n\t{\n\t\tint v=q.top().v;q.pop();\n\t\tif(vis[v])continue;\n\t\tvis[v]=1;\n\t\tfor(int i=hd[v];i;i=pre[i])\n\t\t{\n\t\t\tint u=to[i];\n\t\t\tdeg[u]--;\n\t\t\tsum[u]=min(inf,sum[u]+dis[v]);\n\t\t\tif(!deg[u])\n\t\t\t{\n\t\t\t\tif(sum[u]<dis[u])\n\t\t\t\t{\n\t\t\t\t\tdis[u]=sum[u];\n\t\t\t\t\tq.push({u,dis[u]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid adde(int x,int y)\n{\n\tnum++;pre[num]=hd[x];hd[x]=num;to[num]=y;\n}\nint main()\n{\n\t//freopen(\"data.in\",\"r\",stdin);\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint m,x;\n\t\tscanf(\"%lld%lld%d\",&sum[i],&dis[i],&m); \n\t\tq.push({i,dis[i]}); \n\t\tdeg[i]=m;\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tadde(x,i);\n\t\t}\n\t}\n\tdijs();\n\tprintf(\"%lld\\n\",dis[1]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1573616297,
        "uid": 100806,
        "name": "lyyi2003",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u6709 $n$ \u79cd\u602a\u517d\uff0c\u6bcf\u79cd\u602a\u517d\u53ef\u4ee5\u7528\u666e\u653b\u6253\u6b7b\uff0c\u4ee3\u4ef7\u4e3a $s_i$ \uff0c\u6b7b\u540e\u4f1a\u4ea7\u751f $r_i$ \u4e2a\u602a\u517d\uff0c\u79cd\u7c7b\u7ed9\u5b9a\uff1b\u4e5f\u53ef\u7528\u6cd5\u672f\u6253\u6b7b\uff0c\u4ee3\u4ef7\u4e3a $k_i$ \uff0c\u6b7b\u540e\u4e0d\u4ea7\u751f\u602a\u517d\u3002\u4e00\u5f00\u59cb\u53ea\u6709\u4e00\u53ea\u7f16\u53f7\u4e3a $1$ \u7684\u602a\u517d\uff0c\u6c42\u6d88\u706d\u6240\u6709\u602a\u517d\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n$2\\le n\\le 2\\times 10^5,1\\le r_i,\\sum r_i\\le 10^6,1\\le k_i,s_i\\le 5\\times 10^{14}$\n\n## \u89e3\u9898\u601d\u8def\n\n~~\u7528 SPFA \u7684\u771f\u7684\u4e0d\u6015\u88ab\u5361\u5417\uff1f~~\n\n~~\u7528 SPFA \u7684\u9898\u89e3\u91cc\u6ca1\u6709\u4e00\u4e2a\u6562\u5206\u6790\u590d\u6742\u5ea6\u7684~~\n\n\u6709\u4e00\u4e2a\u771f\u6b63\u7684\u6700\u77ed\u8def\u505a\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sum r_i \\log_2 n)$ \u3002\n\n\u51fb\u8d25\u5355\u4e2a\u67d0\u79cd\u602a\u7269\u6709\u4e24\u79cd\u529e\u6cd5\uff1a\u4e00\u79cd\u662f\u76f4\u63a5\u7528\u6cd5\u672f\u6740\u6b7b\uff0c\u4ee3\u4ef7\u4e3a $k_i$ \uff1b\u4e00\u79cd\u662f\u7528\u666e\u653b\u6740\u6b7b\uff0c\u6700\u5c0f\u4ee3\u4ef7\u4e3a $s_i$ \u52a0\u4e0a\u51fb\u8d25\u6b7b\u540e\u4ea7\u751f\u7684\u602a\u7269\u7684\u4ee3\u4ef7\u548c\u3002\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e2d\uff0c\u51fb\u8d25\u6b7b\u540e\u4ea7\u751f\u7684\u602a\u7269\u662f **\u540e\u7f6e\u6761\u4ef6** \u3002\n\nDijkstra \u7b97\u6cd5\u5efa\u7acb\u5728\u6ca1\u6709\u8d1f\u6743\u8fb9\u7684\u56fe\u4e0a\u3002\u521d\u59cb\u65f6\u53ea\u6709\u6e90\u70b9\u5728\u5df2\u77e5\u96c6\u5408\u4e2d\uff0c\u6bcf\u6b21\u627e\u5230\u4e0d\u5728\u5df2\u77e5\u96c6\u5408\u4e2d\u5230\u6e90\u70b9\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\uff0c\u5c06\u5176\u52a0\u5165\u5df2\u77e5\u96c6\u5408\uff0c\u66f4\u65b0\u5176\u51fa\u8fb9\u3002\n\n\u672c\u9898\u4e2d $s_i,k_i>0$ \uff0c\u8003\u8651\u7528 Dijkstra \u7b97\u6cd5\u8ba1\u7b97\u51fa\u51fb\u8d25\u6bcf\u79cd\u602a\u7269\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u8003\u8651\u5230\u540e\u7f6e\u6761\u4ef6\u4e0d\u597d\u5904\u7406\uff0c\u53ef\u4ee5\u5c06\u540e\u7f6e\u6761\u4ef6\u6539\u4e3a **\u5148\u51b3\u6761\u4ef6** \u3002\n\n\u7c7b\u6bd4 Dijkstra \u7b97\u6cd5\uff0c\u6bcf\u6b21\u6211\u4eec\u5c06\u4f7f\u7528\u6cd5\u672f\u4e0e\u4f7f\u7528\u666e\u653b\u4e24\u79cd\u7684\u6700\u5c0f\u4ee3\u4ef7\u6bd4\u8f83\uff0c\u9009\u53d6\u4ee3\u4ef7\u66f4\u5c0f\u7684\u52a0\u5165\u5df2\u77e5\u96c6\u5408\u3002\u77e5\u9053\u666e\u653b\u7684\u4ee3\u4ef7\uff0c\u5f53\u4e14\u4ec5\u5f53\u77e5\u9053\u6240\u6709\u5148\u51b3\u6761\u4ef6\u7684\u4ee3\u4ef7\u3002\u5f53\u4e0d\u77e5\u9053\u4e00\u4e2a\u602a\u7269\u7684\u5148\u51b3\u6761\u4ef6\u7684\u4ee3\u4ef7\u65f6\uff0c\u7531\u4e8e $s_i>0$ \uff0c\u7528\u666e\u653b\u6740\u6b7b\u5f53\u524d\u602a\u7269\u7684\u4ee3\u4ef7\u4e00\u5b9a\u5927\u4e8e\u51fb\u6740\u67d0\u4e2a\u5148\u51b3\u6761\u4ef6\u7684\u4ee3\u4ef7\uff0c\u4e0d\u6ee1\u8db3 Dijkstra \u7684\u6d41\u7a0b\u3002\n\n\u6bd4\u8f83\u4f7f\u7528\u666e\u653b\u6740\u6b7b\u602a\u7269\uff0c\u8981\u6709\u4e24\u4e2a\u5173\u952e\u5b57\uff0c\u4e00\u4e2a\u662f\u662f\u5426\u5269\u4f59\u4f4d\u7f6e\u7684\u5148\u51b3\u6761\u4ef6\uff0c\u4e00\u4e2a\u662f\u5df2\u77e5\u7684\u5148\u51b3\u6761\u4ef6\u7684\u4ee3\u4ef7\u548c\u52a0\u4e0a $s_i$ \u3002\u6bcf\u6b21\u6211\u4eec\u627e\u5230\u5728\u5173\u952e\u5b57\u6761\u4ef6\u4e0b\u6700\u4f18\u7684\u602a\u7269\uff0c\u5c06\u6740\u6b7b\u8be5\u602a\u7269\u7684\u4ee3\u4ef7\u8bbe\u4e3a $s_i$ \u52a0\u5148\u51b3\u6761\u4ef6\u548c $k_i$ \u7684\u6700\u5c0f\u503c\uff0c\u66f4\u65b0\u6240\u6709\u51fa\u8fb9\u3002\u5982\u679c\u6700\u4f18\u7684\u602a\u7269\u4ecd\u6709\u672a\u77e5\u7684\u5148\u51b3\u6761\u4ef6\uff0c\u5219\u9009\u62e9\u5f53\u524d $k_i$ \u6700\u6700\u5c0f\u7684\u602a\u7269\uff0c\u5c06\u8be5\u602a\u7269\u7684\u4ee3\u4ef7\u8bbe\u4e3a $k_i$ \uff0c\u518d\u66f4\u65b0\u6240\u6709\u51fa\u8fb9\u3002\n\n\u66f4\u65b0 $x$ \u7684\u6240\u6709\u51fa\u8fb9\u65f6\uff0c\u66f4\u65b0\u7684\u662f\u4ee5 $x$ \u4e3a\u5148\u51b3\u6761\u4ef6\u7684\u6240\u6709\u7684\u70b9\u3002\u82e5 $x$ \u4e3a $y$ \u7684\u5148\u51b3\u6761\u4ef6\uff0c\u66f4\u65b0\u65f6\u4ee4 $y$ \u5269\u4f59\u7684\u672a\u77e5\u5148\u51b3\u6761\u4ef6 $-1$ \uff0c\u5df2\u77e5\u6761\u4ef6\u7684\u548c $+dist[x]$ \u3002\n\n\u73b0\u5728\u8981\u5b9e\u73b0\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u5b9e\u73b0\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n1.  \u66f4\u65b0 **\u4efb\u610f** \u4e00\u4e2a\u5143\u7d20\u7684\u503c\uff1b\n\n2.  \u627e\u5230\u503c\u6700\u5c0f\u7684\u5143\u7d20\uff1b\n\n3.  \u5220\u9664\u503c\u6700\u5c0f\u7684\u5143\u7d20\u3002\n\n\n\u6b64\u65f6\u666e\u901a\u7684\u5806\u65e0\u6cd5\u80dc\u4efb\uff0c\u53ef\u4ee5\u4f7f\u7528\u5de6\u504f\u6811\u6216\u5e73\u8861\u6811\u5b9e\u73b0\uff0c\u5355\u6b21\u4ee5\u4e0a\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\log_2 n)$ \u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u52a0\u5165\u5df2\u77e5\u96c6\u5408\u4e00\u6b21\uff0c\u6bcf\u4e2a\u5148\u51b3\u6761\u4ef6\u53ea\u4f1a\u88ab\u66f4\u65b0\u4e00\u6b21\uff0c\u6240\u4ee5\u6b64\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sum r_i \\log_2 n)$ \u3002\n\n## \u53c2\u8003\u5b9e\u73b0\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n#define int long long \nconst int maxn=200010;\nconst int maxm=2000010;\nint n,v,r,a,cur,h[maxm],nxt[maxm],p[maxm],dist[maxn],rnk[maxn];\nbool tf[maxn];\nvoid add_edge(int x,int y)\n{\n\tcur++;\n\tnxt[cur]=h[x];\n\th[x]=cur;\n\tp[cur]=y;\n}\nstruct node\n{\n\tint id,k;\n\tbool operator<(node x){return k<x.k;}\n}s[maxn];\nstruct Leftist_Tree\n{\n\tstruct node2\n\t{\n\t\tint id,sum,res;\n\t\tbool operator<(node2 x){return res==x.res?sum<x.sum:res<x.res;}\n\t}q[maxn];\n\tint rt,fa[maxn],lc[maxn],rc[maxn],dist[maxn];\n\tvoid pushup(int x)\n\t{\n\t\tif(!x)return;\n\t\tif(dist[lc[x]]<dist[rc[x]])swap(lc[x],rc[x]),dist[x]=dist[rc[x]]+1,pushup(fa[x]);\n\t\tdist[x]=dist[rc[x]]+1;\n\t}\n\tint merge(int x,int y)\n\t{\n\t\tif(!x||!y)return x+y;\n\t\tif(q[y]<q[x])swap(x,y);\n\t\trc[x]=merge(rc[x],y);fa[rc[x]]=x;\n\t\tif(dist[lc[x]]<dist[rc[x]])swap(lc[x],rc[x]);\n\t\tdist[x]=dist[rc[x]]+1;\n\t\treturn x;\n\t}\n\tvoid delt(int x)\n\t{\n\t\tif(x==rt)rt=merge(lc[x],rc[x]),fa[rt]=0,lc[x]=rc[x]=dist[x]=0;\n\t\telse\n\t\t{\n\t\t\tint t=fa[x];\n\t\t\tif(x==lc[t])lc[t]=merge(lc[x],rc[x]),fa[lc[t]]=t;\n\t\t\telse rc[t]=merge(lc[x],rc[x]),fa[rc[t]]=t;\n\t\t\tpushup(t);\n\t\t\tlc[x]=rc[x]=dist[x]=0;\n\t\t}\n\t}\n}st;\nmain()\n{\n\tst.dist[0]=-1;\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&v,&s[i].k,&r);s[i].id=i;\n\t\tst.q[i]={i,v,r};st.rt=st.merge(st.rt,i);st.fa[st.rt]=0;\n\t\twhile(r--)scanf(\"%lld\",&a),add_edge(a,i);\n\t}\n\tsort(s+1,s+n+1);\n\tfor(int i=1;i<=n;i++)rnk[s[i].id]=i;\n\tfor(int i=1;i<=n;i++)if(!tf[s[i].id])\n\t{\n\t\tdist[s[i].id]=s[i].k;tf[s[i].id]=true;st.delt(s[i].id);\n\t\tfor(int j=h[s[i].id];j;j=nxt[j])if(!tf[p[j]])\n\t\t{\n\t\t\tst.delt(p[j]);\n\t\t\tst.q[p[j]].res--;\n\t\t\tif(st.q[p[j]].sum<=s[rnk[p[j]]].k)st.q[p[j]].sum+=dist[s[i].id];\n\t\t\tst.rt=st.merge(st.rt,p[j]);st.fa[st.rt]=0;\n\t\t}\n\t\twhile(1)\n\t\t{\n\t\t\tint minn=st.rt;\n\t\t\tif(minn==0||st.q[minn].res)break;\n\t\t\tdist[minn]=min(s[rnk[minn]].k,st.q[minn].sum);tf[minn]=true;st.delt(minn);\n\t\t\tfor(int j=h[minn];j;j=nxt[j])if(!tf[p[j]])\n\t\t\t{\n\t\t\t\tst.delt(p[j]);\n\t\t\t\tst.q[p[j]].res--;\n\t\t\t\tif(st.q[p[j]].sum<=s[rnk[p[j]]].k)st.q[p[j]].sum+=dist[minn];\n\t\t\t\tst.rt=st.merge(st.rt,p[j]);st.fa[st.rt]=0;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",dist[1]);\n\treturn 0;\n}\n```",
        "postTime": 1568536804,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9898\u770b\u4f3cDP\u53ef\u505a\uff0c\u7136\u800c\u53ef\u80fd\u6709\u73af\uff0c\u6709\u540e\u6548\u6027\n\n\u8bbe\u6d88\u706d\u7b2ci\u4e2a\u602a\u7269\u6700\u5c11\u82b1\u8d39$d[i]$\u7684\u9b54\u529b\uff0c\u5219$d[i]=\\max(k[i],s[i]+\\sum d[r[i][j]])$;\n\n(\u50cf\u4e0d\u50cf\u6700\u77ed\u8def\u7684\u677e\u5f1b\u64cd\u4f5c?)\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u53c2\u8003Dijkstra\u7b97\u6cd5\uff0c\u5c06$d[i]$\u8d4b\u521d\u503c\u4e3a$k[i]$\u5b58\u5165\u5806\u4e2d\uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u6700\u5c0f\u503c\uff0c\u628a\u5b83\u4f1a\u5f71\u54cd\u5230\u7684$d[i]$\u5168\u90e8\u8fdb\u884c\u201c\u677e\u5f1b\u64cd\u4f5c\u201d\n\n\u7136\u800c\uff0c\u5149\u8fd9\u6837\u505a\u4e0d\u4ec5\u4f1aTLE\uff0c\u8fd8\u4f1aWA\n\nTLE\u56e0\u4e3a\u677e\u5f1b\u662f$O(n)$\u7684\uff0c\u603b\u590d\u6742\u5ea6\u4e3a$O(n^2logn)$\n\n\u4e0d\u77e5\u600e\u4e48\uff0c\u5982\u679c\u628a\u641c\u8fc7\u7684\u76f4\u63a5continue\uff0c\u4f1aWA\u51e0\u4e2a\u70b9\uff0c\u53ea\u597d\u628aDijkstra\u6362\u6210SPFA+\u5806\u4f18\u5316\uff0c\u53c8\u6162\u4e86\u5f88\u591a\n\n\u6240\u4ee5\uff0c\u8981\u52a0\u51e0\u4e2a\u5c0f\u4f18\u5316\uff1a\n\n1. $d[i]$\u6539\u4e00\u6b21\u5c31\u8981\u677e\u5f1b\u4e00\u6b21\uff0c\u592a\u6162\uff0c\u6211\u4eec\u53ef\u4ee5\u5b66\u4e60\u62d3\u6251\u6392\u5e8f\uff0c\u5c06\u51fa\u5ea6\u8bb0\u4e0b\uff0c\u7b49\u67d0\u4e00\u7ed3\u70b9\u6307\u5411\u7684\u6240\u6709$d$\u90fd\u8fbe\u5230\u6700\u5c0f\u518d\u677e\u5f1b\n\n2. \u867d\u4e0d\u80fd\u7528Dijkstra\u4f46\u662f\u53ef\u4ee5\u5224\u65ad\u5806\u4e2d\u662f\u5426\u5b58\u7684\u662f\u6700\u4f18\u89e3\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u53ef\u4ee5continue\n\nCode:\n```cpp\n#include<stdio.h>\n#include<queue>\n#include<iostream>\nusing namespace std;\nconst int N=200005;\nint n,head[N],Next[1000005],adj[1000005],m,i,p,j,v,rhead[N],rNext[1000005],radj[1000005],point[N],vis[N];\nlong long s[N],d[N];\nstruct str{\n    int d,p;\n};\npriority_queue<str> q;\nbool operator <(str a,str b)\n{\n    return a.d>b.d;\n}\nvoid Push(int u,int v)\n{\n    Next[++p]=head[u];\n    head[u]=p;\n    adj[p]=v;\n    rNext[p]=rhead[v];\n    rhead[v]=p;\n    radj[p]=u;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%lld %lld %d\",&s[i],&d[i],&m);\n        for(j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&v);\n            Push(i,v);\n        }\n        point[i]=m;\n        q.push((str){d[i],i});\n    }\n    while(!q.empty())\n    {\n        str x=q.top();\n        q.pop();\n        if(x.d>d[x.p])\n            continue;\n        for(i=rhead[x.p];i!=0;i=rNext[i])\n        {\n            int t=radj[i];\n            if(vis[x.p]==0)\n                point[t]--;\n            if(point[t]<=0)\n            {\n                long long su=s[t];\n                for(j=head[t];j!=0;j=Next[j])\n                    su+=d[adj[j]];\n                if(d[t]>su)\n                {\n                    d[t]=su;\n                    q.push((str){d[t],t});\n                }\n            }\n        }\n        vis[x.p]=0;\n    }\n    printf(\"%lld\",d[1]);\n}\n```\n\nUPD\uff1a\n\n\u73b0\u5728\u770b\u8fd9\u4e2a\u4ee3\u7801\u611f\u89c9\u5f53\u65f6\u597dsimple\u554a~~~\n\n\u4ee5\u4e0b\u662f\u771f\u505a\u6cd5\uff1a\n\n\u6211\u4eec\u679a\u4e3e\u6cd5\u672f\u503c\u6700\u5c0f\u7684\uff0c\u663e\u7136\u6211\u4eec\u4e00\u5b9a\u7528\u6cd5\u672f\u53bb\u5e72\u6389\n\n\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u5806\uff0c\u6bcf\u6b21\u6211\u4eec\u786e\u5b9a\u4e00\u4e2a\u602a\u517d\u8981\u6740\u6b7b\u5b83\u7684\u6700\u5c0f\u4f53\u529b\u503c\u4e4b\u540e\uff0c\u6211\u4eec\u7528\u5b83\u53bb\u677e\u5f1b\u6240\u6709\u7528\u666e\u901a\u653b\u51fb\u540e\u53ef\u4ee5\u5206\u88c2\u51fa\u5b83\u7684\u602a\u517d\n\n\u8fd9\u6837\u6211\u4eec\u6bcf\u6b21\u53d6\u51fa\u5806\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u663e\u7136\u5b83\u7684\u503c\u5c31\u662f\u5b83\u7684\u771f\u5b9e\u503c\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u4e25\u683c$O(nlogn)$",
        "postTime": 1517325616,
        "uid": 13185,
        "name": "\u53cc\u7ba1\u8367\u5149\u706f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\u9996\u5148\u4ece$DP$\u89d2\u5ea6\u5206\u6790\u8fd9\u9898, \u7528$d[i]$\u8868\u793a\u6740\u6b7b\u602a\u7269$i$\u6240\u9700\u7684\u6700\u4f4e\u82b1\u8d39, $k[i]$\u4e3a\u819c\u6cd5\u6740\u6b7b$i$\u6240\u9700\u7684\u82b1\u8d39, $s[i]$\u4e3a\u7ad9\u64b8\u6240\u9700\u7684\u82b1\u8d39, $e[i][j]$\u4e3a\u64b8\u6b7b\u602a\u7269$i$\u540e\u4ea7\u751f\u7684\u7b2c$j$\u4e2a\u602a\u7269, \u90a3\u4e48\u6211\u4eec\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b  \n$d[i]=min(k[i],s[i]+\\displaystyle \\sum^{R[i]}_{j=1}{d[e[i][j]]})$  \n\u4f46\u662f\u8fd9\u6837\u505a\u6709\u4e00\u4e2a\u660e\u663e\u7684$Bug$\uff0c\u4e07\u4e00\u64b8\u6b7b\u7684\u602a\u7269\u53c8\u80fd\u76f4\u63a5(\u6216\u95f4\u63a5)\u4ea7\u751f\u5b83\u81ea\u8eab\uff0c\u9012\u5f52\u5c31\u4f1a\u9677\u5165\u6b7b\u5faa\u73af\uff0c\u4e5f\u5c31\u662f\u6709\u73af\uff0c\u65e0\u6cd5\u7528$DP$\u89e3\u51b3  \n\u4e8e\u662f\u4f60~~\u4e0d\u5c0f\u5fc3~~\u5730\u70b9\u5f00\u4e86\u7b97\u6cd5\u6807\u7b7e\uff0c\u6ee1\u8138\u61f5\u903c\u7684\u4f60\u770b\u89c1\u4e86$SPFA$, \u4e8e\u662f\u5c1d\u8bd5\u5f00\u59cb\u5efa\u6a21\uff0c\u53ef\u600e\u4e48\u4e5f\u60f3\u4e0d\u5230\u8be5\u600e\u4e48\u8fde\u8fb9\uff0c\u8be5\u600e\u4e48\u8dd1\u6700\u77ed\u8def\n~~\u597d\u5427\uff0c\u8fd9\u5176\u5b9e\u662f\u6211\u7684\u7ecf\u5386~~\n\n### \u6b63\u8a00\n```\n  (SPFA)\u591a\u89c1\u4e8e\u6700\u5927(\u5c0f)\u95ee\u9898\u4e2d,\u5728\u6c42\u89e3\u662f\u4f1a\u53d1\u73b0\u5b58\u5728\u73af,\u5176\u6a21\u578b\u662f\u5e26\u73af\u7684\u56fe.\u5176\u7279\u70b9\u662f\u8282\u70b9\u95f4\u6ca1\u6709\u76f8\u4e92\u4f9d\u8d56\u5173\u7cfb,\u800c\u4e14\u5176\u6700\u4f18\u503c\u7684\u4f20\u9012\u4e0d\u4f1a\u4ea7\u751f\u540e\u6548\u6027,\u5927\u90fd\u6ee1\u8db3\u6700\u539f\u59cb\u7684\u4e09\u89d2\u4e0d\u7b49\u5f0f.\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u7684\u6700\u77ed\u8def\u7684\u65b9\u6cd5\u901a\u8fc7\u8f83\u4f18\u89e3\u4e4b\u95f4\u7684\u76f8\u4e92\u6bd4\u8f83,\u76f8\u4e92\u8ddf\u65b0\u6765\u5f97\u51fa\u5168\u90e8\u8282\u70b9\u7684\u6700\u4f18\u89e3\n                                     --<<\u4e00\u672c\u901a>>\n```\n\u597d\u4e86,\u76f8\u4fe1\u6709\u4e86\u8fd9\u53e5\u8bdd,\u806a\u660e\u7684\u4f60\u5c31\u4e00\u5b9a\u53ef\u4ee5\u89e3\u51b3$Ta$\u4e86 \n\n---\n**\u5f53\u6211\u4eec\u66f4\u65b0$i$\u65f6,\u6211\u4eec\u4e5f\u5e94\u8be5\u5c06\u64b8\u6b7b\u540e\u80fd\u4ea7\u751f$i$\u7684\u602a\u7269\u585e\u5165\u961f\u5217\u4e2d\u8fdb\u884c\u66f4\u65b0,\u56e0\u4e3a\u5176\u7236\u8282\u70b9\u53ef\u80fd\u4f1a\u53d7\u5f71\u54cd\u88ab\u66f4\u65b0\uff0c\u6240\u4ee5\u5e94\u8be5\u53cd\u5411\u5efa\u8fb9\uff0c\u5982\u6b64\u8fed\u4ee3\u540e\uff0c\u5c31\u80fd\u5f97\u5230\u6700\u4f18\u89e3**  \n\u4e0d\u61c2\u7684\u8bdd\u8be6\u89c1$code$\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\n\nconst int maxn = 200000 + 10;\nconst int maxm = 1000000 + 10;\nint n;\n\nstruct edge {\n    int v,next;\n}e[maxm],fe[maxm];\n//f\u524d\u7f00\u4ee3\u8868\u53cd\u5411\u8fb9\u76f8\u5173\n\nint head[maxn],fhead[maxn];\nlong long d[maxn],s[maxn];\nbool inp[maxn];\nint en,fen;\n\ninline void add(int u,int v) {\n    e[++en].next=head[u];\n    e[en].v=v; head[u]=en;\n}\n\ninline void fadd(int u,int v) {\n    fe[++fen].next=fhead[u];\n    fe[fen].v=v; fhead[u]=fen;\n}\n\nqueue<int>q;\nlong long SPFA() {\n    for(int i=1;i<=n;i++) q.push(i);\n    //\u5148\u5168\u90e8\u585e\u5165\u961f\u5217,\u521d\u59cb\u503c\u4e3a\u819c\u6cd5\u8d39\u7528\n    //\u901a\u8fc7\u6bd4\u8f83\u5f97\u5230\u8f83\u4f18\u89e3,\u76f4\u81f3\u6700\u4f18\u89e3\n    while(!q.empty()) {\n        int u=q.front(); q.pop();\n        inp[u]=true;\n        long long res=s[u];\n        for(int i=head[u];i;i=e[i].next)\n            res+=d[e[i].v];\n        if(res<d[u]) {\n        //\u6bd4\u8f83\u5b50\u8282\u70b9\u4e0e\u81ea\u8eab\u7684\u8d39\u7528\n            d[u]=res;\n            for(int i=fhead[u];i;i=fe[i].next) if(inp[fe[i].v]) {\n            //\u5c06\u5176\u7236\u8282\u70b9\u585e\u5165\u961f\u5217\u518d\u66f4\u65b0\n                q.push(fe[i].v); inp[fe[i].v]=false;\n            }\n        }\n    }\n    return d[1];\n    //d[i]\u5c31\u8868\u793a\u5b8c\u5168\u6740\u6b7b\u4e00\u53eai\u7684\u6700\u4f4e\u8d39\u7528\n}\n\ntemplate<typename T>\ninline void read(T &a) {\n    int c; a=0;\n    while((a=getchar()-'0')) if(a>=0&&a<=9) break;\n    while((c=getchar())) {\n        if(c<'0'||c>'9') break;\n        a=(a<<3)+(a<<1)+c-'0';\n    }\n}\n\nint main() {\n    int r,v;\n    read(n);\n    for(int i=1;i<=n;i++) {\n        read(s[i]); read(d[i]); read(r);\n        for(int j=0;j<r;j++) {\n            read(v); add(i,v); fadd(v,i);\n        }\n    }\n    printf(\"%lld\\n\",SPFA());\n    return 0;\n}\n```\n",
        "postTime": 1556793384,
        "uid": 125925,
        "name": "zl_just",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problem/P4042)\n\n\u601d\u535a\u8d2a\u5fc3\u9898\u5199\u4e86\u4e00\u4e2a\u534a\u5c0f\u65f6\u6ca1\u6551\u4e86\uff0c\u6211\u4e5f\u6ca1\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a$spfa$\u6765\u554a\n\n\u8bbe$dp_i$\u8868\u793a\u5f7b\u5e95\u5e72\u6389\u7b2c$i$\u53ea\u602a\u7269\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u7684\u4e8b\u60c5\uff0c\u5c31\u662f\u5bf9\u4e8e$k_i$\u503c\u6700\u5c0f\u7684\u602a\u7269\u6ee1\u8db3$dp_i=k_i$\n\n\u975e\u5e38\u597d\u7406\u89e3\uff0c\u53cd\u6b63\u5230\u6700\u540e\u90fd\u8981\u5e72\u6389\u8fd9\u4e2a\u602a\u7269\uff0c\u4f55\u5fc5\u518d\u628a\u5b83\u5e72\u6210\u522b\u7684\u602a\u7269\n\n\u4e8e\u662f\u6211\u4eec\u6309\u7167$k_i$\u7684\u503c\u5148\u6392\u5e8f\u4e00\u4e0b\uff0c\u53e6\u5916\u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806\n\n\u5982\u679c\u5806\u91cc\u6ca1\u6709\u70b9\u6216\u8005\u5806\u9876\u7684$dp$\u503c\u6bd4\u5f53\u524d\u7684$k$\u8981\u5927\uff0c\u6211\u4eec\u76f4\u63a5\u4ee4\u5f53\u524d\u5f53\u524d$k_i$\u503c\u6700\u5c0f\u7684\u70b9$i$\u7684$dp_i=k_i$\uff0c\u4e4b\u540e\u904d\u5386\u6240\u6709\u80fd\u5230\u8fbe\u70b9$i$\u7684\u70b9$v$\uff0c\u4ee4$s_v+=dp_i$\uff0c\u5982\u679c\u53d1\u73b0\u70b9$v$\u7684\u6240\u6709\u51fa\u8fb9\u90fd\u88ab\u904d\u5386\u4e86\u4e00\u904d\uff0c\u6211\u4eec\u5c31\u4ee4$dp_v=\\min(s_v,k_v)$\uff0c\u540c\u65f6\u628a\u8fd9\u4e2a\u70b9\u52a0\u5165\u5806\u4e2d\n\n\u5982\u679c\u5806\u91cc\u6709\u70b9\u4e14\u5806\u9876\u7684$dp$\u5c0f\u4e8e\u4e8e\u5f53\u524d$k$\uff0c\u5c31\u76f4\u63a5\u62ff\u5806\u9876\u6765\u66f4\u65b0\n\n\u8003\u8651\u8fd9\u4e2a\u505a\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u663e\u7136\u5f53\u524d\u5806\u4e2d\u6ca1\u6709\u8282\u70b9\u7684\u65f6\u5019\uff0c\u56fe\u4e2d\u4efb\u610f\u4e00\u4e2a\u70b9\u4e0d\u53ef\u80fd\u53ea\u5206\u89e3\u6210\u5df2\u7ecf\u5904\u7406\u597d$dp_i$\u7684\u70b9\uff0c\u4e8e\u662f\u6211\u4eec\u5fc5\u987b\u5f15\u5165\u5269\u4e0b\u7684$k$\u503c\u6700\u5c0f\u7684\u70b9\n\n\u6216\u8005\u628a\u5806\u4e2d\u6ca1\u6709\u70b9\u7684\u60c5\u51b5\u89c6\u4e3a\u521d\u59cb\u60c5\u51b5\uff0c\u53ef\u80fd\u8fd9\u6837\u66f4\u597d\u7406\u89e3\n\n\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define re register\n#define LL long long\n#define mp std::make_pair\n#define min(a, b) ((a) < (b) ? (a) : (b))\nconst int maxn = 2e5 + 5;\nstruct E {\n    int v, nxt;\n} e[1000005];\nLL dp[maxn], s[maxn], w[maxn];\nint head[maxn], vis[maxn], c[maxn], p[maxn];\nint n, num, top;\ninline LL read() {\n    LL x = 0;\n    char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    while (c >= '0' && c <= '9') x = (x << 3ll) + (x << 1ll) + c - 48, c = getchar();\n    return x;\n}\ntypedef std::pair<LL, int> pii;\nstd::priority_queue<pii, std::vector<pii>, std::greater<pii> > q;\ninline int cmp(int a, int b) { return s[a] < s[b]; }\ninline void del(int x) {\n    vis[x] = 1;\n    for (re int i = head[x]; i; i = e[i].nxt) {\n        if (vis[e[i].v])\n            continue;\n        w[e[i].v] += dp[x];\n        c[e[i].v]--;\n        if (!c[e[i].v])\n            vis[e[i].v] = 1, dp[e[i].v] = min(w[e[i].v], s[e[i].v]), q.push(mp(dp[e[i].v], e[i].v));\n    }\n}\ninline void add(int x, int y) {\n    e[++num].v = y;\n    e[num].nxt = head[x];\n    head[x] = num;\n}\nint main() {\n    n = read();\n    for (re int x, i = 1; i <= n; i++) {\n        w[i] = read(), s[i] = read(), c[i] = read();\n        for (re int j = 1; j <= c[i]; j++) x = read(), add(x, i);\n    }\n    for (re int i = 1; i <= n; i++) p[i] = i;\n    std::sort(p + 1, p + n + 1, cmp);\n    int now = 1, tot = 0;\n    while (tot < n) {\n        while (vis[p[now]]) ++now;\n        if (!q.empty() && (q.top().first < s[p[now]] || now > n))\n            tot++, del(q.top().second), q.pop();\n        else\n            tot++, dp[p[now]] = s[p[now]], del(p[now++]);\n    }\n    printf(\"%lld\\n\", dp[1]);\n    return 0;\n}\n\n```\n",
        "postTime": 1564754142,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\n\u6709$n$\u4e2a\u602a\u7269\uff0c\u53ef\u4ee5\u6d88\u8017$k$\u7684\u4ee3\u4ef7\u6d88\u706d\u4e00\u4e2a\u602a\u7269\u6216\u8005\u6d88\u8017$s$\u7684\u4ee3\u4ef7\u5c06\u5b83\u53d8\u6210\u53e6\u5916\u4e00\u4e2a\u6216\u591a\u4e2a\u65b0\u7684\u602a\u7269\uff0c\u6c42\u6d88\u706d\u602a\u7269$1$\u7684\u6700\u5c0f\u4ee3\u4ef7\n\n\n## \u601d\u8def\n\n\n\u8fd9\u51e0\u5929\u505a\u7684\u7b2c\u4e00\u9053\u81ea\u5df1\u80fdyy\u51fa\u6765\u7684\u9898\u2026\u2026\n\n\u770b\u8d77\u6765\u50cf\u662f\u4e2aDP\uff0c\u8ba4\u771f\u601d\u8003\u4e00\u4f1a\u513f\u4e5f\u4e0d\u96be\u60f3\u5230\u53ef\u4ee5\u8bbe\u8ba1\u5982\u4e0b\u72b6\u6001\n\n\u8bbe$f[i]$\u4e3a\u6d88\u706d$i$\u6240\u9700\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u90a3\u4e48\u6709\n\n$$f[i]=\\min(f[i], s[i]+\\sum\\limits_{to_i} f[to_i])$$\n\n\u5176\u4e2d$to$\u8868\u793a$i$\u70b9\u7684\u540e\u7ee7\n\n\u56e0\u4e3a$f$\u7684\u8f6c\u79fb\u4e4b\u95f4\u76f8\u4e92\u5e72\u6d89\uff0c\u6240\u4ee5\u7528\u6700\u77ed\u8def\u5904\u7406\n\n\u5148\u5efa\u53cc\u5411\u8fb9\uff0c\u65b9\u4fbf\u4e4b\u540e\u8f6c\u79fb\uff0c\u7136\u540e\u7528$\\texttt{SPFA}$\uff08~~\u5b83\u6b7b\u4e86~~\u6c42\"\u591a\u6e90\"\u6700\u77ed\u8def\u5c31\u597d\u4e86\n\n\u56e0\u4e3a\u4e0d\u77e5\u9053\u4e00\u5f00\u59cb\u5e94\u8be5\u6253\u54ea\u4e2a\u602a\u7269\uff0c\u6240\u4ee5\u5e72\u8106\u5168\u90fd\u5165\u961f\u3001\u5168\u90e8\u66f4\u65b0\u5c31\u597d\u4e86\n\n$ps:$\u4e24\u5e74$\\text{OI}$\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00$long\\ long$\u89c1\u7956\u5b97\n\n## \u4ee3\u7801\n\n```cpp\n/*\nAuthor:Loceaner\n*/\n#include <queue>\n#include <cmath>\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define int long long\nusing namespace std;\n\nconst int A = 2e5 + 11;\nconst int B = 1e6 + 11;\nconst int mod = 1e9 + 7;\nconst int inf = 0x3f3f3f3f;\n\ninline int read() {\n  char c = getchar(); int x = 0, f = 1;\n  for ( ; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n  for ( ; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n  return x * f;\n}\n\nqueue <int> Q;\nvector <int> v1[A], v2[A];\nint n, m, ord[A], mag[A]/*\u9898\u76ee\u4e2d\u6240\u7ed9\u7684s[i],k[i]*/, vis[A];\n\ninline void ZDL() {\n  for (int i = 1; i <= n; i++) Q.push(i), vis[i] = 1;\n  while (!Q.empty()) {\n    int x = Q.front(); Q.pop(), vis[x] = 0;\n    int res = ord[x];\n    for (int i = 0; i < (int)v1[x].size(); i++) res += mag[v1[x][i]];\n    if (res < mag[x]) {\n      mag[x] = res;\n      for (int i = 0; i < (int)v2[x].size(); i++)\n        if (!vis[v2[x][i]]) Q.push(v2[x][i]), vis[v2[x][i]] = 1;\n    }\n  }\n}\n\nsigned main() {\n  n = read();\n  for (int i = 1, k; i <= n; i++) {\n    ord[i] = read(), mag[i] = read(), k = read();\n    while (k--) {\n      int x = read();\n      v1[i].push_back(x), v2[x].push_back(i);\n    }\n  }\n  ZDL();\n  cout << mag[1] << '\\n';\n  return 0;\n}\n```\n\n",
        "postTime": 1594034867,
        "uid": 198323,
        "name": "loceaner",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u7528\u5230\u4e86spfa\u7684\u601d\u60f3\n\n~~\u4f46\u5176\u5b9e\u5e76\u4e0d\u80fd\u7b97\u662fspfa~~\n\n\n\n\u5927\u4f53\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\n\n1\uff1a\u5bf9\u4e8e\u4ece\u4e00\u53f7\u8282\u70b9\uff0c\u6211\u4eec\u628a\u4ed6\u538b\u5165\u6808\uff0c\u7136\u540e\u8be5\u8282\u70b9\u666e\u901a\u653b\u51fb\u548c1\u53f7\u8282\u70b9\u80fd\u5230\u8fbe\u70b9\u6cd5\u672f\u4f24\u5bb3\u7684\u6743\u503c\u603b\u548c\u53bb\u66f4\u65b0dis[i]\u7684\u503c\u3002\n\n2\uff1a\u5982\u679c\u66f4\u65b0\u4e86\uff0c\u6211\u4eec\u5c31\u5e94\u5f53\u53bb\u60f3\uff1a\u8be5\u8282\u70b9\u7684\u6743\u503c\u66f4\u65b0\u4e4b\u540e\u80fd\u5230\u8fbe\u8be5\u8282\u70b9\u7684\u8282\u70b9\u663e\u7136\u7b54\u6848\u4e5f\u4f1a\u8fdb\u884c\u66f4\u65b0\uff0c\u6b64\u65f6\u6211\u4eec\u5c31\u628a\u8fd9\u4e9b\u80fd\u5230\u8fbe\u8be5\u8282\u70b9\u7684\u8282\u70b9\u538b\u5165\u6808\u8fdb\u884c\u66f4\u65b0\u3002\n3\uff1a\u53cd\u590d\u66f4\u65b0\uff0c\u76f4\u5230\u8be5\u8282\u70b9\u7684\u503c\u4e0d\u80fd\u7ee7\u7eed\u66f4\u65b0\u4e3a\u6b62\u3002\n\n \u5bf9\u4e8e\u8be5\u8282\u70b9\u80fd\u5230\u8fbe\u7684\u7684\u70b9\uff0c\u6211\u4eec\u7528\u90bb\u63a5\u8868\u5b58\u56fe\u5373\u53ef\u5b9e\u73b0\u3002\n \u5bf9\u4e8e\u5230\u8fbe\u8be5\u8282\u70b9\u7684\u70b91\uff0c\u6211\u4eec\u5f00\u53e6\u4e00\u4e2a\u90bb\u63a5\u8868\u53cd\u5411\u5efa\u8fb9\u5373\u53ef\u5b9e\u73b0\n \n\u90a3\u4e48\u8fd9\u6837\u5c31\u7ed3\u675f\u4e86\u5417\uff1f\n\n\u663e\u7136\u5e76\u6ca1\u6709\uff0c\u8fd9\u6837\u4f1a\u59a5\u59a5wa\u6389\u3002\n\u4e3a\u4ec0\u4e48?\u6211\u4eec\u6765\u770b\u8fd9\u7ec4\u6570\u636e\n```cpp\n4\n4 27 3 2 3 2\n3 5 1 2\n1 99999 2 4 2\n5 6 1 2\n```\n~~\uff08\u5f53\u65f6\u6211\u7528\u8fd9\u7ec4\u6570\u636e\u628a\u81ea\u5df1hack\u6389\u4e86\uff0c\u975e\u5e38\u81ea\u95ed\uff09~~ \n\n\u6211\u4eec\u6a21\u62df\u4e00\u4e0b\u4e0a\u8ff0\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u53d1\u73b0\u5f53\u4e00\u53f7\u8282\u70b9\u66f4\u65b0\u5230\u4e09\u53f7\u8282\u70b9\u65f6\uff0c\u4e0d\u4f1a\u518d\u7ee7\u7eed\u66f4\u65b0\uff0c\u56e0\u4e3a\u4e09\u53f7\u8282\u70b9\u7684\u6cd5\u672f\u4f24\u5bb3\u8fc7\u9ad8\uff0c\u4e4b\u540e\u5e76\u6ca1\u6709\u8282\u70b9\u88ab\u4e09\u53f7\u8282\u70b9\u66f4\u65b0\u3002\n\n\n\u6211\u4eec\u53d1\u73b0\u4e0a\u8ff0\u8fc7\u7a0b\u5e76\u6ca1\u6709\u8003\u8651\u5230\u6240\u6709\u7684\u60c5\u51b5 \u3002\n\n\u90a3\u4e48\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u7684\u8282\u70b9\u538b\u5165\u4e00\u4e2a\u6808\u91cc\uff0c\u6bcf\u6b21\u53d6\u51fa\u4e00\u4e2a\u66f4\u65b0\u7b54\u6848\u3002\n\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6f0f\u6389\u6240\u6709\u7684\u60c5\u51b5\u3002 \n\n\u6211\u4eec\u60ca\u5947\u7684\u53d1\u73b0\u5373\u4f7f\u6211\u4eec\u90fd\u538b\u5230\u4e00\u4e2a\u6808\u91cc\u5e76\u4e0d\u4f1a\u5f15\u53d1\u51b2\u7a81\uff0c\u56e0\u4e3a\u6bcf\u6b21\u66f4\u65b0\u4e4b\u540e\u5168\u5c40dis[i]\u90fd\u4f1a\u968f\u4e4b\u66f4\u65b0\n### \u6240\u4ee5\u6211\u4eec\u5f00\u4e00\u4e2a\u6808\uff0c\u5f00\u59cb\u628a\u6240\u6709\u8282\u70b9\u5168\u90e8\u538b\u5165\u6808\u4e2d\uff0c\u5b9a\u4e49dis\u3010i\u3011\u7684\u521d\u59cb\u503c\u4e3a\u8be5\u8282\u70b9\u7684\u6cd5\u672f\u4f24\u5bb3\uff0c\u4f9d\u6b21\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u8fdb\u884c\u66f4\u65b0\u5373\u53ef\u3002\n\n\u5f53\u7136\u8981\u6ce8\u610f\u5f00long long\n\u9644\u4ee3\u7801 \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<stack>\n#include<queue>\n#define int long long\n#define ss 1000600\nusing namespace std;\ninline int read(){\n\tint x(0),f(1);char c(getchar());\n\tfor(;!isdigit(c);c=getchar()) c=='-'?f=-1:1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0';\n\treturn x*f;\n}\n\nstruct  oo{\n\tint next,to;\n}e[ss*4],e2[ss];\n\nint head[ss],cnt(0),dis[ss],head2[ss],cnt2(0),a[ss],n;\nbool b[ss];\n\nvoid add(int x,int y){\n\te[++cnt].to=y;\n\te[cnt].next=head[x];\n    head[x]=cnt;\n}\n\nvoid add2(int x,int y){\n\te2[++cnt2].to=y;\n\te2[cnt2].next=head2[x];\n\thead2[x]=cnt2;\n}\n\n\nvoid spfa(){\n\tstack<int >q;\n\tfor(register int i=1;i<=n;i++) q.push(i),b[i]=1;\n\twhile(q.size()){\n\t\tint u(q.top());\n\t\tq.pop();\n\t\tint diss(0);b[u]=0;\n\t\tfor(register int i=head[u];i;i=e[i].next) diss+=dis[e[i].to];\n\t\tdiss+=a[u];\n\t\tif(dis[u]<=diss) continue;\n\t\tdis[u]=diss;\n\t\tfor(register int i=head2[u];i;i=e2[i].next){\n\t\t\tint y=e2[i].to;\n\t\t\t//printf(\"%d %d\\n\",u,y);\n\t\t\tif(b[y]) continue;\n\t\t\tb[y]=1;q.push(y);\n\t\t}\n\t}\n}\n\n\nmain(){\n\tn=(read());\n\tfor(register int i=1;i<=n;i++){\n\t\ta[i]=read();dis[i]=read();\n\t\tint x(read());\n\t\twhile(x--){\n\t\t\tint y=read();\n\t\t\tadd(i,y);\n\t\t\tadd2(y,i);\n\t\t}\n\t}\n\t\n\t\n\tspfa();\n\t\n\t\n\tprintf(\"%lld\\n\",dis[1]);\n\t\n\t\n}\n```\n\n",
        "postTime": 1564714422,
        "uid": 124591,
        "name": "\u7d2b\u85af\u5e03\u4e01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    },
    {
        "content": "[\u9898\u76ee\u5927\u610f](https://www.luogu.org/problemnew/show/P4042)\n\n\u6211\u4eec\u5b9a\u4e49dis[i]\u4ee3\u8868\u5b8c\u5168\u6740\u6b7bi\u53f7\u602a\u517d\u7684\u6700\u5c0f\u4f53\u529b\u503c\u82b1\u8d39\uff0c\u90a3\u4e48\u521d\u59cb\u503c\u90fd\u662f\u6cd5\u672f\u653b\u51fb\u7684\u82b1\u8d39\u3002\n\n\u90a3\u4e48\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f\uff1adis[i]=min(magic[i],common[i]+\u2211son:(dis[i]))\n\n\u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\u76f4\u63a5\u641edp\u7684\u8bdd\u662f\u6709\u540e\u6548\u6027\u7684\uff0c\u6bd4\u5982\uff1a1-->2-->1\u90a3\u4e48\u5c31\u4f1a\u9677\u5165\u6b7b\u5faa\u73af\n\n\u4f46\u662f\u6211\u4eec\u60ca\u5947\u7684\u53d1\u73b0\u8fd9\u4e2a\u597d\u50cf\u548cSPFA\u7684\u677e\u5f1b\u64cd\u4f5c\u6709\u4e00\u4e9b\u76f8\u50cf\uff0c\u6240\u4ee5\u6211\u4eec\u6539\u53d8\u601d\u8def\uff0c\u8dd1\u4e00\u904dSPFA\n\n\u7531\u4e8e\u4ece\u8d77\u70b9\u5f00\u59cb\u8dd1\u7b49\u4e8e\u76f4\u63a5\u6bd4\u8f83\u513f\u5b50\u8282\u70b9\u7684\u9b54\u6cd5\u8d39\u7528\uff0c\u663e\u7136\u662f\u9519\u8bef\u7684\uff0c\u6240\u4ee5\u5c06\u6240\u6709\u70b9\u5168\u90e8\u538b\u5165\u961f\u5217\u4e2d\u8fdb\u884c\u8003\u8651\n\n\u5e76\u4e14\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u8282\u70b9\u88ab\u8003\u8651\u8fc7\u4e4b\u540e\uff0c\u7236\u8282\u70b9\u4e5f\u4f1a\u53d7\u5f71\u54cd\uff0c\u6240\u4ee5\u4e5f\u8981\u91cd\u65b0\u51b3\u7b56\u4e00\u6b21\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u770b\u4f5c\u662fSPFA\u7684\u590d\u6742\u5ea6\u4e0a\u52a0\u4e00\u4e2a\u5c0f\u5e38\u6570\uff0c\u5177\u4f53\u4e0d\u4f1a\u8bc1\uff0c\u6ce8\u610f\u5e38\u6570\u4f18\u5316\n\n\u6700\u540e\uff0c\u9644\u4e0a\u672c\u9898\u4ee3\u7801\uff1a\uff08\u81ea\u52a8\u7701\u7565\u5934\u6587\u4ef6\uff09\n\n```cpp\nil LL read()\n{\n    reg LL w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') ch=getchar();\n    while(ch>='0'&&ch<='9') \n    {\n        w=(w<<3)+(w<<1)+ch-'0';\n        ch=getchar();\n    }\n    return w;\n}\nstruct EDGE\n{\n    int to,nxt;\n};\nEDGE edge[maxm+5],rev[maxm + 5];\nint n,cnt;\nLL dis[maxn+5],c[maxn+5];\nint head[maxn+5];\nbool vis[maxn+5];\nqueue<int>q;\n\nil void add(int x,int y)\n{\n    edge[++cnt].to=y;\n    edge[cnt].nxt=head[x];\n    head[x]=cnt;\n}\nint fir[maxn + 5],alloc;\nil void addrev(int u,int v)\n{\n    rev[++alloc].nxt = fir[u];\n    fir[u] = alloc;\n    rev[alloc].to = v;\n}\nil void SPFA()\n{\n    UF(i,1,n) q.push(i),vis[i]=1;\n    while(!q.empty())\n    {\n        reg int s=q.front();\n        reg LL res=c[s];\n        vis[s]=0,q.pop();\n        for(reg int i=head[s]; i; i=edge[i].nxt) res+=dis[edge[i].to];\n        if(res<dis[s])\n        {\n            dis[s]=res;\n            for(reg int i=fir[s];i;i=rev[i].nxt) if(vis[rev[i].to]==0) q.push(rev[i].to),vis[rev[i].to]=1;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    UF(i,1,n)\n    {\n        c[i] = read(),dis[i] = read();\n        int z;\n        scanf(\"%d\",&z);\n        UF(j,1,z)\n        {\n            int k;\n            scanf(\"%d\",&k);\n            add(i,k);\n            addrev(k,i);\n        }\n    }\n    SPFA();\n    printf(\"%lld\\n\",dis[1]);\n    return 0;\n}",
        "postTime": 1558155370,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    },
    {
        "content": "> [\u9a91\u58eb\u6e38\u620f](https://www.luogu.org/problemnew/show/P4042) \u6709 $n$ \u79cd\u602a\u517d\u3002\u6bcf\u79cd\u602a\u517d\u666e\u901a\u653b\u51fb\u6216\u6cd5\u672f\u653b\u51fb\u9700\u82e5\u5e72\u4f53\u529b\u3002\u6cd5\u672f\u653b\u51fb\u4f1a\u5f7b\u5e95\u6740\u6b7b\u602a\u517d\uff0c\u666e\u901a\u653b\u51fb\u4f1a\u4f7f\u5f97\u602a\u517d\u53d8\u6210\u53e6\u51e0\u79cd\u602a\u517d\uff08\u53ef\u80fd\u6709\u73af\uff0c\u751a\u81f3\u53ef\u80fd\u81ea\u73af\uff09\u3002\u73b0\u6709\u4e00\u53ea 1 \u53f7\u602a\u517d\uff0c\u8f93\u51fa\u5f7b\u5e95\u6740\u6b7b\u602a\u517d\u7684\u6700\u5c0f\u4f53\u529b\u3002\n\n**\u6700\u77ed\u8def\u3002**\u660e\u663e\u7684\u56fe\u8bba\u95ee\u9898\uff0c~~\u867d\u7136\u9996\u6b21\u770b\u5230\u6b64\u9898\u65f6\u521a\u5b66\u5b8c\u8bed\u6cd5\uff0c\u7136\u540e TLE + RE~~\u3002\n\n\u53ef\u4ee5\u7528 Dijkstra\uff0c\u7531\u4e8e\u6bcf\u4e2a\u70b9\u5f71\u54cd\u5165\u5ea6\uff0c\u66f4\u65b0\u65f6\u626b\u4e00\u904d\u9006\u56fe\u9010\u4e2a\u66f4\u65b0\u3002\u6b64\u5904**\u4e0d\u80fd\u4fdd\u8bc1\u521d\u6b21\u51fa\u5806\u5df2\u6700\u4f18**\uff0c\u56e0\u6b64\u4e0d\u80fd\u53ea\u51fa\u5806\u4e00\u6b21\u3002\u4e3a\u907f\u514d\u5806\u5185\u91cd\u590d\u5143\u7d20\u91cd\u590d\u5904\u7406\uff0c\u6211\u4eec\u8bb0\u5f55\u5165\u5806\u6743\u503c\uff0c\u82e5\u51fa\u5806\u5143\u7d20\u4e4b\u5165\u5806\u6743\u503c\u975e\u5176\u5f53\u524d\u6700\u4f18\u6743\u503c\uff0c\u5219\u8df3\u8fc7\u3002\u4e00\u4e2a\u8282\u70b9\u4e4b\u6bcf\u4e2a\u51fa\u5ea6\u90fd\u4f1a\u4f7f\u8282\u70b9\u66f4\u65b0\u4e00\u6b21\uff0c\u4e3a\u51cf\u5c11\u66f4\u65b0\u6b21\u6570\uff0c\u6211\u4eec\u8bb0\u5f55 `wiat[i]` \u6570\u7ec4\uff08`wait` \u8c8c\u4f3c\u662f\u5173\u952e\u5b57\uff09\u4ee3\u8868\u80fd\u66f4\u65b0\u8282\u70b9 `i` \u4e4b\u6700\u540e\u8282\u70b9\uff0c\u7b49\u5230 `wiat[i]` \u70b9\u51fa\u5806\u65f6\u518d\u66f4\u65b0 `i`\u3002\n\n\u4ee5\u4e0b\u4ee3\u7801\uff0c\u7531\u4e8e\u7f79\u60a3 STL \u4f9d\u8d56\u75c7\uff0c\u53ea\u80fd\u5438\u6c27\u3002\u624b\u5199\u6570\u6784\u4f1a\u6bd4\u8f83\u5feb\u3002\n\n``` c++\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <utility>\n#include <functional>\n#include <algorithm>\n#include <queue>\n#include <vector>\n#define Add push_back\n#define Pad(a, b) push(std::make_pair(a, b))\n\ntypedef long long int LINT;\ntypedef std::pair<LINT, int> PLI;\nconst int MAXN = 200001;\nint n, wiat[MAXN]; LINT s[MAXN], k[MAXN];\nstd::vector<int> g1[MAXN], g2[MAXN];\nstd::priority_queue<PLI, std::vector<PLI>, std::greater<PLI> > q;\n\nint main() {\n  scanf(\"%d\", &n);\n  for(int i = 1; i <= n; i++) {\n    int r, ip; scanf(\"%lld%lld%d\", s + i, k + i, &r);\n    q.Pad(k[i], i);\n    while(r--) { scanf(\"%d\", &ip); g1[i].Add(ip); g2[ip].Add(i); }\n  }\n\n  while(!q.empty()) {\n    LINT tr = q.top().first; int cur = q.top().second; q.pop();\n    if(tr > k[cur]) continue;\n    for(auto i: g2[cur]) if(!wiat[i] || wiat[i] == cur) {\n      LINT now = s[i]; for(auto j: g1[i]) now += k[j];\n      if(now < k[i]) {\n        k[i] = now, q.Pad(now, i);\n        for(auto j: g2[i]) wiat[j] = i;\n      }\n    }\n  }\n\n  printf(\"%lld\\n\", k[1]);\n  return 0;\n}\n```",
        "postTime": 1534215040,
        "uid": 70578,
        "name": "\u7269\u7075",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    },
    {
        "content": "\u94fe\u63a5\uff1ahttps://www.luogu.com.cn/problem/P4042\n\n\u9898\u76ee\u63cf\u8ff0:\u5bf9\u4e8e\u4e00\u4e2a\u602a\u7269$i$\uff0c\u53ef\u4ee5\u82b1\u8d39$c_{i}$\u7684\u4ee3\u4ef7\u5c06\u5176\u53d8\u4e3a\u4e00\u4e2a\u602a\u7269\u96c6\u5408\uff0c\u6216\u82b1\u8d39$c2_{i}$\u7684\u4ee3\u4ef7\u6d88\u706d\u4ed6\u3002\u6c42\u6d88\u706d\u602a\u7269$1$\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u9898\u89e3\uff1a\u7531\u4e8e\u8fd9\u91cc\u6d89\u53ca\u5230\u4e86\u53d8\u5316\u7684\u4f20\u9012\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u539f\u95ee\u9898\u62bd\u8c61\u4e3a\u4e00\u4e2a\u56fe\uff0c\u6bcf\u4e00\u4e2a\u70b9\u5b83\u53ef\u4ee5\u82b1\u8d39$c2_{i}$\u7684\u4ee3\u4ef7\u5230\u8fbe\u4e00\u4e2a\u6b7b\u4ea1\u8282\u70b9\u6216\u82b1\u8d39$c_{i}$\u7684\u4ee3\u4ef7\u5230\u8fbe\u4e00\u4e2a\u70b9\u96c6\u3002\n\n\u7531\u4e8e\u8fd9\u4e2a\u70b9\u96c6\u65e0\u6cd5\u88ab\u76f4\u63a5\u8868\u793a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u4ed6\u5316\u4e3a\u6c42\u70b9\u96c6\u7684\u6700\u5c0f\u6d88\u706d\u4ee3\u4ef7\u4e4b\u548c$+$$c_{i}$\uff0c\u76f4\u63a5\u6d88\u706d\u4e5f\u5c31\u662f\u53ef\u4ee5\u5c06$i$\u7684\u6700\u5c0f\u6d88\u706d\u4ee3\u4ef7\u5316\u4e3a$c2_{i}$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06$dijkstra$\u7a0d\u5fae\u6539\u6539\uff0c\u5c06\u6240\u6709\u70b9\u7684$dis$\u521d\u59cb\u5316\u4e3a$c2_{i}$\uff0c\u6bcf\u4e00\u6b21\u5c06\u8f6c\u79fb\u53d8\u4e3a\u6c42\u96c6\u7684\u6700\u5c0f\u6d88\u706d\u4ee3\u4ef7\u4e4b\u548c$+$$c_{i}$\uff0c\u4e5f\u50cf$dijkstra$\u90a3\u6837\u8dd1\u5c31\u884c\u4e86\u3002\n\n```\n#include<iostream>\n#include<queue>\n#include<cstdio>\nusing namespace std;\nstruct node\n{\n\tlong long v,nxt,data;\n\tbool vis;\n};\nnode edge[2000001];\nstruct reads\n{\n\tlong long num,data;\n\tbool operator < (const reads &a)const\n\t{\n\t\treturn data>a.data;\n\t}\n};\nlong long dis[200001],dis2[200001];\nint len,head[200001],n,in[200001],cnt[200001];\nbool used[200001];\npriority_queue<reads>q;\nreads tmp;\nreads make_reads(int x,long long y)\n{\n\ttmp.num=x;\n\ttmp.data=y;\n\treturn tmp;\n}\nvoid add(int x,int y,long long z)\n{\n\tedge[++len].v=y;\n\tedge[len].data=z;\n\tedge[len].nxt=head[x];\n\thead[x]=len;\n\treturn;\n}\nvoid dijkstra()\n{\n\tint top;\n\twhile (!q.empty())\n\t{\n\t\ttop=q.top().num;\n\t\tq.pop();\n\t\tif (used[top])\n\t\t\tcontinue;\n\t\tused[top]=1;\n\t\tfor (int i=head[top];i>0;i=edge[i].nxt)\n\t\t{\n\t\t\tif (!edge[i].vis&&cnt[edge[i].v]==in[edge[i].v]-1&&dis[edge[i].v]>dis2[edge[i].v]+dis[top]+edge[i].data)\n\t\t\t{\n\t\t\t\tedge[i].vis=1;\n\t\t\t\tcnt[edge[i].v]++;\n\t\t\t\tdis[edge[i].v]=dis2[edge[i].v]+dis[top]+edge[i].data;\n\t\t\t\tq.push(make_reads(edge[i].v,dis[edge[i].v]));\n\t\t\t}\n\t\t\tif (!edge[i].vis&&cnt[edge[i].v]<in[edge[i].v]-1)\n\t\t\t{\n\t\t\t\tedge[i].vis=1;\n\t\t\t\tcnt[edge[i].v]++;\n\t\t\t\tdis2[edge[i].v]=dis2[edge[i].v]+dis[top];\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint main()\n{\n\tlong long x,y,z,w;\n\tscanf(\"%lld\",&n);\n\tfor (int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\twhile (z--)\n\t\t{\n\t\t\tcin>>w;\n\t\t\tadd(w,i,x);\n\t\t\tin[i]++;\n\t\t}\n\t\tdis[i]=y;\n\t}\n\tfor (int i=1;i<=n;++i)\n\t\tq.push(make_reads(i,dis[i]));\n\tdijkstra(); \n\tprintf(\"%lld\\n\",dis[1]);\n\treturn 0;\n}",
        "postTime": 1581995737,
        "uid": 148025,
        "name": "zhouhuanyi",
        "ccfLevel": 9,
        "title": "[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f"
    },
    {
        "content": "~~\u968f\u673a\u8df3\u9898\u3002\u3002\u3002\u53d1\u73b0\u6709\u70b9\u50cf\u4f73\u4f73\u7684\u9b54\u6cd5\u836f\u6c34\u4e4b\u7c7b\u7684\u3002\u3002\u4e8e\u662f\u79d2\u5207\u3002\u3002~~\n\n#### SPFA\n\n\uff08\u8c8c\u4f3c\u6ca1\u6709\u8fea\u6770\u65af\u7279\u62c9\u597d\u5199\u3002\u3002\u3002\uff09\n\n\u5148\u628a\u6240\u6709\u70b9\u5165\u961f\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\n\n\u677e\u5f1b\u6210\u529f\u628a\u6240\u6709\u80fd\u5f71\u54cd\u5230\u7684\u70b9\u518d\u5165\u961f\uff08\u5165\u961f\u65f6\u5224\u91cd\uff09\n\n\u628a\u9b54\u6cd5\u653b\u51fb\u770b\u505adis\u6570\u7ec4\uff08\u56e0\u4e3a\u80fd\u591f\u76f4\u63a5\u5230\u8fbe\uff09\n\n\u628a\u7269\u7406\u653b\u51fb\u770b\u505a\u4ece\u5176\u4ed6\u70b9\u8fc7\u6765\u7684\u4ee3\u4ef7\n\n~~\u505a\u9898\u4e0d\u5982\u770b\u9898\u89e3\uff0c\u770b\u9898\u89e3\u4e0d\u5982\u6284\u4ee3\u7801\uff08\u8bef\uff09\uff08\u624b\u52a8\u6ed1\u7a3d\uff09~~\n\n\u8fd9\u9898\u8981\u5f00long long\u3002\u3002\u3002\n\n\u5efa\u8bae\u4e0d\u4f1aSPFA\u7684\u4eb2\u8fdb\u4f20\u9001\u95e8\u261e[\u4e0d\u7a33\u5b9a\u4f20\u9001\u95e8](https://www.baidu.com/s?ie=UTF-8&wd=spfa)\n\n\u4ee3\u7801\u7ecf\u8fc7\u7279\u6b8a\u5904\u7406\uff0cCtrl+C/V\u8005\u614e\u7528\u261e[\u7070\u8272\u4e16\u754c   \u68d5\u8272\u4e16\u754c  \u7ea2\u8272\u4e16\u754c](https://www.luogu.org/space/show?uid=61634&myuid=85715&follow=1)\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nlong long n,A[200010],M[200010],R[200010],head1[200010],head2[200010],k1,k2,ans;\nstruct edge\n{\n\tlong long to,next;\n} ed1[1000010],ed2[1000010];\nvoid adde1(long long u,long long v){ ed1[++k1].to=v;ed1[k1].next=head1[u];head1[u]=k1;}//\u53ef\u4ee5\u4ece\u8fd9\u4e9b\u70b9\u8f6c\u79fb \nvoid adde2(long long u,long long v){ ed2[++k2].to=v;ed2[k2].next=head2[u];head2[u]=k2;}//\u4f1a\u5f71\u54cd\u8fd9\u4e9b\u70b9 \nqueue<long long> q;\nbool ins[200010];\nvoid spfa()\n{\n\tfor(long long i=1;i<=n;i++) q.push(i),ins[i]=1;\n\twhile(!q.empty())\n\t{\n\t\tlong long u=q.front();q.pop();ins[u]=0;\n\t\tlong long sum=0;\n\t\tfor(long long i=head1[u];i;i=ed1[i].next)\n\t\t{\n\t\t\tlong long v=ed1[i].to;\n\t\t\tsum+=M[v];\n\t\t}\n\t\tsum+=A[u];\n\t\tif(sum<M[u])\n\t\t{\n\t\t\tM[u]=sum;\n\t\t\tfor(long long i=head2[u];i;i=ed2[i].next)\n\t\t\t{\n\t\t\t\tlong long v=ed2[i].to;\n\t\t\t\tif(!ins[v])\n\t\t\t\t{\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tins[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(long long i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&A[i],&M[i],&R[i]);\n\t\tfor(long long j=1;j<=R[i];j++)\n\t\t{\n\t\t\tlong long x;\n\t\t\tscanf(\"%lld\",&x);\n\t\t\tadde1(i,x);adde2(x,i);\n\t\t}\n\t}\n\tspfa();\n\tprintf(\"%lld\",M[1]);\n\treturn 0;\n}\n```",
        "postTime": 1537930190,
        "uid": 61634,
        "name": "\u5f20\u666f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4042 \u3010[AHOI2014/JSOI2014]\u9a91\u58eb\u6e38\u620f\u3011"
    }
]