[
    {
        "content": "\u8003\u8651\u5bf9\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u5206\u522b\u8ba1\u7b97\u8d21\u732e\u3002\u8bbe$cnt_k$\u8868\u793a\u5f02\u6216\u548c\u7684$2^k$\u4f4d\u4e3a$1$\u7684\u5b50\u96c6\u6570\u91cf\uff0c\u90a3\u4e48\u4ee4$n$\u8868\u793a\u5168\u96c6\u5927\u5c0f\uff0c$m_k$\u8868\u793a$2^k$\u4f4d\u4e3a$1$\u7684\u6570\u6709\u51e0\u4e2a\u3002\u663e\u7136\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u96c6\u5e94\u6070\u597d\u5305\u542b\u5947\u6570\u4e2a$2^k$\u4f4d\u4e3a$1$\u7684\u6570\uff0c\u5176\u5b83\u968f\u610f\u3002\u4e8e\u662f\u6709\uff1a\n\n$$cnt_k=2^{n-m_k}\\times\\sum_{i=1}^{\\left\\lfloor\\frac{m_k}{2}\\right\\rfloor}\\binom{m_k}{2i-1}=2^{n-m_k}\\times2^{m_k-1}=2^{n-1}$$\n\n\u7279\u522b\u5730\uff0c\u5f53$m_k=0$\u65f6\uff0c$cnt_k=0$\n\n\u611f\u89c9\u4f3c\u4e4e\u7b80\u6d01\u7684\u6709\u70b9\u51fa\u4e4e\u610f\u6599\uff1f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u662f\u5426\u6709\u8d21\u732e\uff0c\u53ea\u548c$m$\u662f\u5426\u4e3a$0$\u6709\u5173\uff01\n\n\u4e8e\u662f\uff0c\u4e00\u4e2a\u96c6\u5408\u7684\u5b50\u5f02\u548c\u5c31\u662f\uff1a$2^{n-1}\\times\\sum\\limits_{i=0}^k[m_i>0]2^i$\u3002\u4e0d\u96be\u770b\u51fa\u8fd9\u4e2a\u6c42\u548c\u8fd0\u7b97\u5b9e\u9645\u4e0a\u662f\u5728\u8ba1\u7b97\u6240\u6709\u6570\u7684\u4e8c\u8fdb\u5236\u6216\uff0c\u6240\u4ee5\u8be5\u5f0f\u53ef\u5199\u4f5c\uff1a$2^{n-1}\\times orsum$\n\n\u597d\u4e86\uff0c\u73b0\u5728\u8be2\u95ee\u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u53ea\u8981\u6c42\u51fa\u8def\u5f84\u4e0a\u70b9\u7684\u6570\u91cf\u4ee5\u53ca\u70b9\u6743\u6216\u5c31\u884c\u3002\u73b0\u5728\u8003\u8651\u4fee\u6539\n\n\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e86\u4e00\u4e2a\u96c6\u5408\u7684\u4e0e\u3001\u6216\uff0c\u73b0\u5728\u8fd9\u4e2a\u96c6\u5408\u6240\u6709\u6570\u8981\u5f02\u6216$c$\u3002\u90a3\u4e48\uff0c\u4ee4$\\cup_k$\u3001$\\cap_k$\u3001$c_k$\u5206\u522b\u8868\u793a\u6216\u7684$2^k$\u4f4d\u3001\u4e0e\u7684$2^k$\u4f4d\u3001$c$\u7684$2^k$\u4f4d\uff0c\u5219\u4e0d\u96be\u5f97\u51fa\uff1a\n\n$$\\cup_{k[c_k==1]}'=\\begin{cases}1&\\cap_k==0\\\\0&\\cap_k==1\\end{cases},\\qquad\\cap_{k[c_k==1]}'=\\begin{cases}1&\\cup_k==0\\\\0&\\cup_k==1\\end{cases}$$\n\n\u8fdb\u800c\u5f97\u5230\uff1a\n\n$$\\cup'=(\\cup\\;\\&\\;\\sim c)\\;|\\;(c\\;\\&\\;\\sim\\cap)$$\n\n$$\\cap'=(\\cap\\;\\&\\;\\sim c)\\;|\\;(c\\;\\&\\;\\sim\\cup)$$\n\n\u6240\u4ee5\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u8def\u5f84\u4e0e\u3001\u8def\u5f84\u6216\u3002\u6811\u5256\u5957\u7ebf\u6bb5\u6811\u5373\u53ef\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int ha=1e9+7;\nconst int N=200010;\nunsigned sand[N<<2],sor[N<<2],lazy[N<<2];\nint dfn[N],idx[N],dfc=0;\nint fa[N],hson[N],top[N];\nint dep[N],siz[N];\nvector<int> g[N];\nint n,m,val[N],pw2[N];\n\nvoid update(int o,unsigned c)\n{\n    unsigned a=sor[o],b=sand[o];\n    sor[o]=(a&~c)|(c&~b);\n    sand[o]=(b&~c)|(c&~a);\n    lazy[o]^=c;\n}\n\nvoid pushdown(int o)\n{\n    if(!lazy[o]) return;\n    update(o<<1,lazy[o]);\n    update(o<<1|1,lazy[o]);\n    lazy[o]=0;\n}\n\nvoid build(int o,int l,int r)\n{\n    if(l==r){sand[o]=sor[o]=val[idx[l]];return;}\n    int mid=(l+r)/2;\n    build(o<<1,l,mid);\n    build(o<<1|1,mid+1,r);\n    sand[o]=sand[o<<1]&sand[o<<1|1];\n    sor[o]=sor[o<<1]|sor[o<<1|1];\n}\n\nvoid cxor(int o,int l,int r,int nl,int nr,unsigned c)\n{\n    if(l>=nl&&r<=nr){update(o,c);return;}\n    int mid=(l+r)/2;pushdown(o);\n    if(nl<=mid) cxor(o<<1,l,mid,nl,nr,c);\n    if(nr>mid) cxor(o<<1|1,mid+1,r,nl,nr,c);\n    sand[o]=sand[o<<1]&sand[o<<1|1];\n    sor[o]=sor[o<<1]|sor[o<<1|1];\n}\n\nunsigned qor(int o,int l,int r,int nl,int nr)\n{\n    if(l>=nl&&r<=nr) return sor[o];\n    int mid=(l+r)/2;unsigned res=0;pushdown(o);\n    if(nl<=mid) res|=qor(o<<1,l,mid,nl,nr);\n    if(nr>mid) res|=qor(o<<1|1,mid+1,r,nl,nr);\n    return res;\n}\n\nvoid dfs1(int u)\n{\n    siz[u]=1;\n    for(int v : g[u])\n    {\n        if(v==fa[u]) continue;\n        dep[v]=dep[u]+1;\n        fa[v]=u;dfs1(v);\n        siz[u]+=siz[v];\n        if(siz[v]>siz[hson[u]]) hson[u]=v;\n    }\n}\n\nvoid dfs2(int u,int tp)\n{\n    top[u]=tp;\n    idx[dfn[u]=++dfc]=u;\n    if(hson[u]) dfs2(hson[u],tp);\n    for(int v : g[u])\n        if(v!=fa[u]&&v!=hson[u])\n            dfs2(v,v);\n}\n\nvoid pathxor(int u,int v,unsigned c)\n{\n    while(top[u]!=top[v])\n    {\n        if(dep[top[u]]<dep[top[v]]) swap(u,v);\n        cxor(1,1,n,dfn[top[u]],dfn[u],c);\n        u=fa[top[u]];\n    }\n    if(dep[u]>dep[v]) swap(u,v);\n    cxor(1,1,n,dfn[u],dfn[v],c);\n}\n\nint query(int u,int v)\n{\n    unsigned orsum=0,cnt=0;\n    while(top[u]!=top[v])\n    {\n        if(dep[top[u]]<dep[top[v]]) swap(u,v);\n        orsum|=qor(1,1,n,dfn[top[u]],dfn[u]);\n        cnt+=dfn[u]-dfn[top[u]]+1;\n        u=fa[top[u]];\n    }\n    if(dep[u]>dep[v]) swap(u,v);\n    orsum|=qor(1,1,n,dfn[u],dfn[v]);\n    cnt+=dfn[v]-dfn[u]+1;\n    return 1ll*orsum*pw2[cnt-1]%ha;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    pw2[0]=1;\n    for(int i=1;i<=n;i++)\n        pw2[i]=(pw2[i-1]<<1)%ha;;\n    for(int i=1,u,v;i<n;i++)\n    {\n        scanf(\"%d%d\",&u,&v);\n        g[u].emplace_back(v);\n        g[v].emplace_back(u);\n    }\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",val+i);\n    dfs1(1);dfs2(1,1);\n    build(1,1,n);\n    int opt,u,v;unsigned c;\n    while(m--)\n    {\n        scanf(\"%d%d%u\",&opt,&u,&v);\n        if(opt==1) printf(\"%d\\n\",query(u,v));\n        else scanf(\"%u\",&c),pathxor(u,v,c);\n    }\n    return 0;\n}\n```",
        "postTime": 1550461366,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5127 \u3010\u5b50\u5f02\u548c\u3011"
    },
    {
        "content": "[\u9898\u76ee\u63cf\u8ff0](https://www.luogu.com.cn/problem/P5127)\n\n[~~\u6216\u8bb8~~\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://geiz-revive.github.io/)\n\n\u5bf9\u4e8e\u672c\u9898\u6765\u8bf4\u5f88\u5bb9\u6613\u60f3\u5230\u62c6\u4f4d\u53bb\u7ef4\u62a4\uff0c\u6bcf\u4e00\u4f4d\u7684\u8d21\u732e\u4e3a$[x_k>0]2^{n-1}$\uff0c\u5176\u4e2d$x_k$\u8868\u793a\u7b2c$k$\u4f4d\u7684$1$\u7684\u4e2a\u6570\uff0c$2^{n-1}$\u53ef\u4ee5\u8fd9\u6837\u8003\u8651\uff1a\n\n    \u5bf9\u4e8e\u7b2ck\u4e2a\u5143\u7d20\u53ef\u4ee5\u9009\u62e9\u9009\u6216\u4e0d\u9009\uff08\u7531\u5f02\u6216\u7684\u6027\u8d28\u53ef\u77e5\uff0c\u5947\u6570\u4e2a\u4e3a\u9009\uff0c\u5076\u6570\u4e2a\u4e3a\u4e0d\u9009\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u770b\u505a\u9009\u6216\u4e0d\u9009\u4e24\u79cd\u60c5\u51b5\uff09\uff0c\u5176\u4ed6\u5143\u7d20\u4efb\u610f\uff0c\u5176\u4ed6\u5143\u7d20\u5171\u6709n-1\u4e2a\uff0c\u5f53\u9009\u7b2ck\u4e2a\u5143\u7d20\u65f6\uff0c\u8d21\u732e\u4e3a2\u7684n-1\u6b21\u65b9\uff0c\u4e0d\u9009\u65f6\u6ca1\u6709\u8d21\u732e\u3002\n\n\u4f46\u662f\u62c6\u4f4d\u590d\u6742\u5ea6\u8fc7\u9ad8\uff0c\u6811\u5256\u662f$\\Theta(n\\log^2n \\log val)$\u7684\uff0c$LCT$\u662f$\\Theta(n\\log n\\log val)$\u7684~~\u548c\u66b4\u529b\u4e00\u4e2a\u5206~~\uff0c\u6211\u4eec\u8981\u8003\u8651\u66f4\u9ad8\u6548\u7684\u505a\u6cd5\u3002\n\n\u8bbe\u96c6\u5408\u4e2d\u6709$n$\u4e2a\u5143\u7d20\uff0c\u5219$\\sum\\limits_{k=1}^n[x_k>0]2^k$\u5c31\u662f\u8be5\u96c6\u5408\u7684\u6216\u548c\uff0c\u90a3\u4e48\u8be5\u96c6\u5408\u7684\u5b50\u5f02\u548c\u5c31\u662f$2^{n-1}*orsum$\n\n\u73b0\u5728\u5df2\u7ecf\u53ef\u4ee5\u5b8c\u6210\u8be2\u95ee\u4e86\uff0c\u53ea\u9700\u8981\u9884\u5904\u7406$2$\u7684\u6b21\u5e42\u518d\u7ef4\u62a4\u4e00\u4e0b\u6216\u548c\u5373\u53ef\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u4fee\u6539\u3002\n\u6211\u4eec\u4e0d\u59a8\u8bbe\u8981\u5f02\u6216\u7684\u6570\u4e3a$val$\uff1a\n\n* $orsum'=orsum\\And$~$val$  $|$ ~$andsum\\And val$\n* $andsum'=andsum\\And$~$val$  $|$ ~$orsum\\And val$\n\n\u4f9d\u7136\u662f\u901a\u8fc7\u62c6\u4f4d\u5f97\u5230\n\n\u539f\u56e0\uff1a\u5148\u8003\u8651\u4e3a\u4ec0\u4e48\u8981\u5f15\u5165\u4e0e\u548c\n\n* \u8bbe\u5f53\u524d$val_k=1$\uff0c\u5219\u5f53\u96c6\u5408\u4e2d\u6240\u6709\u6570\u7b2c$k$\u4f4d\u90fd\u4e3a$1$\u65f6\uff0c\u5b83\u4eec\u90fd\u5f02\u6216\u4e0a$val_k$\u624d\u80fd\u4f7f\u96c6\u5408\u4e2d\u6240\u6709\u6570\u7b2c$k$\u4f4d\u90fd\u4e3a$0$\uff0c\u5f53\u96c6\u5408\u4e2d\u6709\u6570\u7684\u7b2c$k$\u4f4d\u4e3a$0$\u65f6\uff0c\u5219\u5f02\u6216\u5b8c\u4ee5\u540e\u8fd8\u6709\u6570\u7684\u7b2c$k$\u4f4d\u4e3a$1$\uff0c\u5373\u6216\u548c\u4e3a$1$\u3002\n\n\u518d\u8003\u8651\u6216\u548c\u4fee\u6539\u65f6\u53e6\u4e00\u79cd\u60c5\u51b5\n\n* \u5f53$val_k=0$\u65f6\uff0c\u4e00\u4e2a\u6570\u5f02\u6216$0$\u8fd8\u662f\u5b83\u672c\u8eab\uff0c\u6240\u4ee5\u76f4\u63a5\u662f\u539f\u6765\u7684\u503c\u3002\n\n\u4e0e\u548c\u7684\u7ef4\u62a4\u4e0e\u6216\u548c\u540c\u7406\uff0c\u6700\u7ec8\u6211\u4eec\u505a\u5230\u4e86\u53bb\u6389$\\log val$\uff0c\u8fbe\u5230\u4e86\u6811\u5256$\\Theta(n\\log^2 n)$\uff0c$LCT\\ \\Theta(n\\log n)$\u7684\u4f18\u79c0\u590d\u6742\u5ea6.(\u6811\u5256\u600e\u4e48\u8dd1\u7684\u8fd9\u4e48\u5feb\u554a\n\n$\\Large Code :$\n```cpp\nstruct node {\n\tint fa, child[2], w, orsum, andsum, tag, size;\n\tbool filp;\n} t[200001];\nconst int p = 1e9 + 7;\n//\u5f53\u5f02\u6216\u4e0ac\u65f6\uff0c\u5047\u8bbec\u5f53\u524d\u4f4d\u4e3a1\uff0c\u5f53\u524d\u4f4d\u4e0e\u548c\u4e3a1\u5219\u65b0\u7684\u6216\u548c\u5f53\u524d\u4f4d\u4e3a0\uff0c\u5f53\u524d\u4f4d\u6216\u548c\u4e3a1\u5219\u65b0\u7684\u4e0e\u548c\u5f53\u524d\u4f4d\u4e3a0\ninl void upd(int x) {\n\tt[x].orsum = t[ls(x)].orsum | t[rs(x)].orsum | t[x].w;\n\tt[x].andsum = t[x].w, t[x].size = t[ls(x)].size + t[rs(x)].size + 1;\n\tif (ls(x)) t[x].andsum &= t[ls(x)].andsum;\n\tif (rs(x)) t[x].andsum &= t[rs(x)].andsum;\n}\ninl bool poi(int x) { return rs(fa(x)) == x; }\ninl bool nroot(int x) { return ls(fa(x)) == x || rs(fa(x)) == x; }\ninl void rotate(int x) {\n\tre f = fa(x), gf = fa(f), fs = poi(x), gfs = poi(f), s = son(x, fs ^ 1);\n\tif (nroot(f)) son(gf, gfs) = x;\n\tson(x, fs ^ 1) = f, son(f, fs) = s;\n\tif (s) fa(s) = f;\n\tfa(x) = gf, fa(f) = x, upd(f);\n}\ninl void reverse(int x) { swap(ls(x), rs(x)), t[x].filp ^= 1; }\ninl void xxor(int x, int val) {\n\tre a = t[x].andsum, b = t[x].orsum;\n\tt[x].andsum = (a & ~val) | (~b & val);\n\tt[x].orsum = (~a & val) | (b & ~val);\n\tt[x].w ^= val, t[x].tag ^= val;\n}\ninl void pushdown(int x) {\n\tif (t[x].filp) {\n\t\tif (ls(x)) reverse(ls(x));\n\t\tif (rs(x)) reverse(rs(x));\n\t\tt[x].filp = 0;\n\t}\n\tif (t[x].tag) {\n\t\tif (ls(x)) xxor(ls(x), t[x].tag);\n\t\tif (rs(x)) xxor(rs(x), t[x].tag);\n\t\tt[x].tag = 0;\n\t}\n}\ninl void push(int x) {\n\tif (nroot(x)) push(fa(x));\n\tpushdown(x);\n}\ninl void splay(int x) {\n\tpush(x);\n\twhile (nroot(x)) {\n\t\tif (nroot(fa(x))) poi(x) == poi(fa(x)) ? rotate(fa(x)) : rotate(x);\n\t\trotate(x);\n\t}\n\tupd(x);\n}\ninl void access(int x) {\n\tfor (re i = 0; x; x = fa(i = x)) splay(x), rs(x) = i, upd(x);\n}\ninl void makeroot(int x) { access(x), splay(x), reverse(x); }\ninl void split(int x, int y) { makeroot(y), access(x), splay(x); }\nint pw[200001];\nstruct edge {\n\tint next, to;\n} e[400001];\nint head[200001], tot;\ninl void add(int x, int y) {\n\te[++tot] = edge{ head[x], y }, head[x] = tot;\n\te[++tot] = edge{ head[y], x }, head[y] = tot;\n}\ninl void dfs(int x, int f) {\n\tfor (re i = head[x]; i; i = e[i].next) {\n\t\tif (f != e[i].to) fa(e[i].to) = x, dfs(e[i].to, x);\n\t}\n}\nsigned main() {\n\tre n = read<int>(), m = read<int>(), x, y, w, op;\n\tpw[0] = 1;\n\tfor (re i = 1; i < n; i++) x = read<int>(), y = read<int>(), add(x, y);\n\tfor (re i = 1; i <= n; i++) pw[i] = (pw[i - 1] << 1) % p, t[i].w = read<int>();\n\tdfs(1, 0);\n\twhile (m--) {\n\t\top = read<int>(), x = read<int>(), y = read<int>(), split(x, y);\n\t\tif (op == 1) {\n\t\t\tprintf(\"%d\\n\", 1ll * t[x].orsum * pw[t[x].size - 1] % p);\n\t\t}\n\t\telse {\n\t\t\tw = read<int>(), xxor(x, w);\n\t\t}\n\t}\n}\n```",
        "postTime": 1578822368,
        "uid": 110271,
        "name": "Genius_Z",
        "ccfLevel": 0,
        "title": "P5127 \u5b50\u5f02\u548c"
    },
    {
        "content": "[\u770b\u8fd9\u4e2a](https://www.luogu.com.cn/blog/Isaunoya/solution-p5390)\n\n\u7136\u540e\u5c31\u4f1a\u505a\u4e86\u3002\n\u6811\u94fe\u5256\u5206\u7ebf\u6bb5\u6811\u6216\uff0c\u7136\u540eqpow\u4e00\u4e0b\u5c31\u505a\u5b8c\u4e86\u3002",
        "postTime": 1600761977,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5127 \u3010\u5b50\u5f02\u548c\u3011"
    }
]