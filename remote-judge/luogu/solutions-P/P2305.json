[
    {
        "content": "\u65b0\u505a\u6cd5\uff1a\u7ebf\u6bb5\u6811\u5957\u674e\u8d85\u6811+\u51fa\u6808\u5e8f\u3002\n\n$O(n^2)$ \u7684 dp \u65b9\u7a0b\uff1a$f_i=\\min(f_j+(d_i-d_j)p_i+q_i)$\uff0c\u5176\u4e2d $j$ \u4e3a $i$ \u7684\u7956\u5148\uff0c\u4e14 $d_i-d_j\\leq l_i$\u3002\u521d\u59cb\u503c $f_1=0$\u3002\n\n\u5f0f\u5b50\u62c6\u5f00\uff1a$f_i=d_ip_i+q_i+\\min(-d_jp_i+f_j)$\u3002\n\n\u8bbe $y=f_i-d_ip_i-q_i$\uff0c$k=-d_j$\uff0c$x=p_i$\uff0c$b=f_j$\uff0c\u5219\u6709 $y=\\min(kx+b)$\u3002\n\n\u6570\u636e\u7c7b\u578b $t=0$ \u65f6\uff0c\u663e\u7136\u662f\u674e\u8d85\u6811\u6a21\u677f\u9898\u3002\n\n$t=1$ \u65f6\uff0c\u8fb9 dfs \u8fb9\u5904\u7406\uff0c\u5f53\u79bb\u5f00\u4e00\u4e2a\u7ed3\u70b9\u65f6\u9700\u8981\u64a4\u9500\u5bf9\u5e94\u7684\u76f4\u7ebf\u3002\u548c\u7ef4\u62a4\u51f8\u58f3\u76f8\u6bd4\uff0c\u674e\u8d85\u6811\u7684\u4f18\u52bf\u5728\u4e8e\u65b9\u4fbf\u64a4\u9500\uff08\u53ef\u6301\u4e45\u5316\u6216\u8005\u7528\u6808\u8bb0\u5f55\u4fee\u6539\u64cd\u4f5c\uff09\u3002\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $O(n\\log n)$\u3002\n\n$t=2$ \u65f6\uff0c\u6709\u4e86 $l$ \u7684\u9650\u5236\uff0c\u9700\u8981\u652f\u6301\u533a\u95f4\u67e5\u8be2\uff0c\u8003\u8651\u6811\u5957\u6811\uff0c\u6bcf\u6b21\u5728 $\\log n$ \u68f5\u674e\u8d85\u6811\u4e0a\u4fee\u6539\u548c\u67e5\u8be2\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c\u7a7a\u95f4 $O(n\\log n)$\u3002\n\n\u4e3a\u4ec0\u4e48\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0d\u662f $O(n\\log^2n)$\uff1f\u674e\u8d85\u6811\u4e0e\u4e00\u822c\u7684\u7ebf\u6bb5\u6811\u4e0d\u540c\uff0c\u4fe1\u606f\u53ef\u4ee5\u5728\u975e\u53f6\u5b50\u7ed3\u70b9\u4fdd\u5b58\uff0c\u56e0\u6b64\u52a8\u6001\u5f00\u70b9\u7684\u674e\u8d85\u6811\u7a7a\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u505a\u5230 $O(n)$\u3002\u5177\u4f53\u65b9\u6cd5\u662f\u6bcf\u6b21\u63d2\u5165\u76f4\u7ebf\u65f6\u9047\u5230\u7a7a\u7ed3\u70b9\u5c31 return\uff0c\u8fd9\u6837\u6bcf\u6b21\u53ea\u4f1a\u65b0\u5efa\u4e00\u4e2a\u7ed3\u70b9\u3002\u603b\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u5373\u4e3a $O(n\\log n)$\u3002\n\n$t=3$ \u65f6\uff0c\u76f4\u63a5\u7ed3\u5408 $t=1$ \u548c $2$ \u7684\u505a\u6cd5\uff0c\u7ebf\u6bb5\u6811\u5957\u53ef\u64a4\u9500\u674e\u8d85\u6811\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $O(n\\log^2n)$\uff0c\u5361\u7a7a\u95f4\u540e\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u6709\u6ca1\u6709\u4e0d\u9700\u8981\u5361\u7a7a\u95f4\u7684\u505a\u6cd5\uff1f\u7a7a\u95f4\u74f6\u9888\u662f\u674e\u8d85\u6811\u7684\u64a4\u9500\u3002\u6ce8\u610f\u5230\u8981\u505a\u7684\u64cd\u4f5c\u662f\u6811\u94fe\u67e5\u8be2\u6700\u5c0f\u503c\uff0c \u53ef\u4ee5\u6811\u94fe\u5256\u5206\u5957\u7ebf\u6bb5\u6811\u5957\u674e\u8d85\u6811\uff0c\u5c31\u4e0d\u9700\u8981\u64a4\u9500\u4e86\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(\\log n)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^3n)$\uff0c\u4f46\u5e38\u6570\u5f88\u5c0f\uff0c\u53ef\u4ee5\u901a\u8fc7\uff08\u5c1d\u8bd5\u6784\u9020\u4e86\u5361\u6811\u5256\u7684\u6570\u636e\u6548\u679c\u5e76\u4e0d\u7406\u60f3\uff0c\u800c\u4e14\u8fd9\u4e2a\u505a\u6cd5\u5728 uoj \u4e5f\u53ef\u4ee5\u901a\u8fc7\uff09\u3002\n\n\u66f4\u597d\u7684\u505a\u6cd5\u662f\u5229\u7528**\u51fa\u6808\u5e8f**\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u7ed3\u70b9\u79bb\u5f00 dfs \u7684\u987a\u5e8f\u3002\u76f4\u63a5\u5728\u70b9 $i$ \u53ca\u5176\u6700\u8fdc\u7684\u6ee1\u8db3 $d_i-d_j\\leq l_i$ \u7684\u7956\u5148 $j$ \u7684\u51fa\u6808\u5e8f\u5bf9\u5e94\u7684\u533a\u95f4\u4e0a\u67e5\u8be2\u3002\u5bb9\u6613\u53d1\u73b0\u533a\u95f4\u5185\u4e0d\u5728 $i$ \u548c $j$ \u7684\u8def\u5f84\u4e0a\u7684\u70b9\u90fd\u672a\u88ab\u8bbf\u95ee\u5230\uff0c\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u3002\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u6811\u94fe\u5256\u5206\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\nupd\uff1a\u674e\u8d85\u6811\u7684\u4f18\u52bf\u5728\u4e8e\u65b9\u4fbf\u64a4\u9500~~\u4ee5\u53ca\u7801\u91cf\u5c0f~~\uff0c\u800c\u6700\u7ec8\u7684\u505a\u6cd5\u5e76\u6ca1\u6709\u7528\u5230\u64a4\u9500\u3002\u56e0\u6b64\u5176\u4ed6\u9898\u89e3\u7684\u6811\u5256+\u7ebf\u6bb5\u6811+\u51f8\u58f3\u4e0a\u4e8c\u5206\u7684\u505a\u6cd5\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u5f0f\u4f18\u5316\u5230 $O(n\\log^2n)$\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N=2e5+3,M=4e6+3;\nint rt[N*3],n,he[N],ne[N],p[N],o[N],t[M],lc[M],rc[M],c[N],id,u,v,w,m;\nll s[N],q[N],l[N],d[N],f[N],a[N],b[N];\n#define g(t,x) (a[t]*(x)+b[t])\nvoid tupd(int&k,int l,int r){//\u674e\u8d85\u6811\u63d2\u5165\u76f4\u7ebf\uff08\u52a8\u6001\u5f00\u70b9\uff09\n\tif(k){\n\t\tint m=l+r>>1;\n\t\tif(g(w,m)<g(t[k],m))swap(w,t[k]);\n\t\tif(l<r)a[w]<a[t[k]]?tupd(rc[k],m+1,r):tupd(lc[k],l,m);\n\t}else t[k=++id]=w;\n}\nll tqry(int k,int l,int r){//\u674e\u8d85\u6811\u67e5\u8be2\u6700\u5c0f\u503c\n\tif(!k)return 1e18;\n\tint m=l+r>>1;\n\treturn min(g(t[k],w),w>m?tqry(rc[k],m+1,r):tqry(lc[k],l,m));\n}\nvoid upd(int k,int l,int r){//\u5916\u5c42\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\n\tw=v,tupd(rt[k],0,1e6);\n\tif(l==r)return;\n\tint m=l+r>>1;\n\tu>m?upd(k*2+1,m+1,r):upd(k*2,l,m);\n}\nll qry(int k,int l,int r){//\u5916\u5c42\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u8be2\n\tif(u<=l&&r<=v)return tqry(rt[k],0,1e6);\n\tint m=l+r>>1;\n\treturn u>m?qry(k*2+1,m+1,r):(m<v?min(qry(k*2,l,m),qry(k*2+1,m+1,r)):qry(k*2,l,m));\n}\nvoid pre(int x){//\u9884\u5904\u7406\u51fa\u6808\u5e8f\n\tfor(int i=he[x];i;i=ne[i])pre(i);\n\to[x]=++id;\n}\nvoid dfs(int x){\n\ta[x]=-d[m],b[x]=f[x],u=o[v=c[m]=x],upd(1,1,n);\n\tfor(int i=he[x];i;i=ne[i]){\n\t\t++m,d[m]=d[m-1]+s[i],u=o[i],v=o[c[lower_bound(d,d+m,d[m]-l[i])-d]];\n\t\tw=p[i],f[i]=qry(1,1,n)+d[m]*w+q[i],dfs(i),--m;\n\t}\n}\nint main(){\n\tint i,j;\n\tscanf(\"%d%*d\",&n);\n\tfor(i=2;i<=n;++i)scanf(\"%d%lld%d%lld%lld\",&j,s+i,p+i,q+i,l+i),ne[i]=he[j],he[j]=i;\n\tpre(1),id=0,dfs(1);\n\tfor(i=2;i<=n;++i)printf(\"%lld\\n\",f[i]);\n\treturn 0;\n}\n```",
        "postTime": 1602207620,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2305 \u3010[NOI2014]\u8d2d\u7968\u3011"
    },
    {
        "content": "\u7ed9\u4e2a\u6211blog\u7684\u94fe\u63a5\uff0c<https://miaomiao1220.github.io/2017/05/NOI2014%E8%B4%AD%E7%A5%A8/>\n\n\u770b\u8fd9\u9898\u6ca1\u6709\u9898\u89e3\u7684\u4efd\u4e0a\u3002\u3002\u6c42\u7ba1\u7406\u5458\u5927\u5927\u7ed9\u8fc7\uff0c\u56e0\u4e3a\u6570\u5b66\u516c\u5f0f\u590d\u5236\u8fc7\u6765\u592a\u9ebb\u70e6\u4e86\u3002\u3002\u6211\u7684blog\u4e2d\u5e94\u8be5\u662f\u8bb2\u7684\u5f88\u6e05\u695a\u7684\n",
        "postTime": 1506957721,
        "uid": 8925,
        "name": "miaowey",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2305 \u3010\u8d2d\u7968 \u3011"
    },
    {
        "content": "\u5728\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73\uff1a[https://www.cnblogs.com/PinkRabbit/p/10471910.html](https://www.cnblogs.com/PinkRabbit/p/10471910.html)\u3002\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u6709\u4e00\u68f5\u4ee5 $1$ \u53f7\u8282\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u5e26\u8fb9\u6743\u7684\u6811\u3002\n\n\u9664\u4e86 $1$ \u53f7\u8282\u70b9\u7684\u6240\u6709\u8282\u70b9\u4e0a\u90fd\u6709\u4eba\u9700\u8981\u5750\u8f66\u5230\u8fbe $1$ \u53f7\u8282\u70b9\u3002\n\n\u9664\u4e86 $1$ \u53f7\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709 $5$ \u4e2a\u53c2\u6570 $f_u,s_u,p_u,q_u,l_u$\u3002\n\n$f_u$ \u8868\u793a $u$ \u53f7\u70b9\u7684\u7236\u4eb2\uff0c$s_u$ \u8868\u793a $u$ \u53f7\u70b9\u4e0e\u7236\u4eb2\u4e4b\u95f4\u7684\u8fb9\u7684\u6743\u503c\uff0c$p,q,l$ \u4e3a\u8f66\u7968\u53c2\u6570\u3002\n\n\u5b9a\u4e49\u4e24\u4e2a\u8282\u70b9 $u$ \u548c $v$ \u4e4b\u95f4\u7684\u8ddd\u79bb $dis_{u,v}$ \u4e3a $u$ \u548c $v$ \u5728\u6811\u4e0a\u7684\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u8fb9\u6743\u4e4b\u548c\u3002\n\n\u4ece\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u53ef\u4ee5\u5750\u8f66\u5230\u8fbe\u8282\u70b9 $v$ \u5f53\u4e14\u4ec5\u5f53 $dis_{u,v}\\le l_u$\uff0c\u4e14\u9700\u8981\u82b1\u8d39 $dis_{u,v}\\times p_u+q_u$ \u7684\u4ee3\u4ef7\u3002\n\n\u95ee\u9664\u4e86 $1$ \u53f7\u8282\u70b9\u7684\u6bcf\u4e2a\u8282\u70b9\u5750\u8f66\u5230 $1$ \u53f7\u8282\u70b9\u9700\u8981\u82b1\u8d39\u7684\u6700\u5c0f\u603b\u4ee3\u4ef7\u3002\n\n$1\\le n\\le 2\\times 10^5$\uff0c\u4fdd\u8bc1\u8f93\u5165\u7684\u6240\u6709\u6570\u90fd\u662f\u975e\u8d1f\u6574\u6570\uff0c$l_u\\ge s_u$\uff0c\u4fdd\u8bc1\u7b54\u6848\u5728 `long long` \u8303\u56f4\u5185\u3002\n\n### \u9898\u89e3\uff1a\n\n\u8003\u8651\u6811\u5f62 DP\uff0c\u4ee4 $\\mathrm{f}[u]$ \u4e3a $u$ \u5230 $1$ \u7684\u6700\u5c0f\u603b\u4ee3\u4ef7\uff0c$\\mathrm{dis}[u]$ \u4e3a $1$ \u53f7\u8282\u70b9\u5230 $u$ \u53f7\u8282\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u5219\u6709 $\\mathrm{f}[u]=\\min\\limits_{v\\in anc_u\\:\\&\\:\\mathrm{dis}[u]-\\mathrm{dis}[v]\\le l_u}(\\mathrm{f}[v]+(\\mathrm{dis}[u]-\\mathrm{dis}[v])\\times p_u+q_u)$\u3002\n\n\u4ee4 $b_u=\\mathrm{dis}[u]\\times p_u+q_u$\uff0c\u5219\u6709\uff1a\n\n$$\\mathrm{f}[u]=b_u+\\min\\limits_{v\\in anc_u\\:\\&\\:\\mathrm{dis}[u]-\\mathrm{dis}[v]\\le l_u}(\\mathrm{f}[v]-\\mathrm{dis}[v]\\times p_u)$$\n\n\u89c2\u5bdf\u5f0f\u5b50\uff0c\u53d1\u73b0 $v$ \u5fc5\u987b\u662f\u7d27\u63a5\u7740 $u$ \u5f80\u4e0a\u4e00\u6bb5\u8fde\u7eed\u7684\u7956\u5148\uff0c\u800c\u8f6c\u79fb\u7684\u65b9\u5f0f\u662f\u7b80\u5355\u7684\u52a0\u6743\u503c\u53d6 $\\min$\u3002\n\n\u8fd9\u63d0\u793a\u6211\u4eec\u8003\u8651\u659c\u7387\u4f18\u5316\uff0c\u8003\u8651\u4e24\u4e2a\u5408\u6cd5\u8f6c\u79fb\u70b9 $j$ \u548c $k$\uff0c\u6bd4\u8f83 $j$ \u548c $k$ \u8f6c\u79fb\u7684\u4f18\u52a3\uff1a\n\n$$\\begin{aligned}\\mathrm{f}[j]-\\mathrm{dis}[j]\\times p_u&\\Leftrightarrow\\mathrm{f}[k]-\\mathrm{dis}[k]\\times p_u\\\\\\mathrm{f}[k]-\\mathrm{f}[j]&\\Leftrightarrow(\\mathrm{dis}[k]-\\mathrm{dis}[j])\\times p_u\\end{aligned}$$\n\n\u53d1\u73b0\u5df2\u7ecf\u6709\u4e86\u659c\u7387\u7684\u8868\u8fbe\u5f0f\uff0c$x$ \u5750\u6807\u662f $\\mathrm{dis}$\uff0c$y$ \u5750\u6807\u662f $\\mathrm{f}$\u3002\u5047\u8bbe $\\mathrm{dis}[j]<\\mathrm{dis}[k]$\uff0c\u5219\u51b3\u7b56 $j$ \u6bd4 $k$ \u4f18\u5f53\u4e14\u4ec5\u5f53\uff1a\n\n$$\\begin{aligned}\\mathrm{f}[j]-\\mathrm{dis}[j]\\times p_u&<\\mathrm{f}[k]-\\mathrm{dis}[k]\\times p_u\\\\\\mathrm{f}[k]-\\mathrm{f}[j]&>(\\mathrm{dis}[k]-\\mathrm{dis}[j])\\times p_u\\\\\\frac{\\mathrm{f}[k]-\\mathrm{f}[j]}{\\mathrm{dis}[k]-\\mathrm{dis}[j]}&>p_u\\end{aligned}$$\n\n\u5373\u70b9 $(\\mathrm{dis}[j],\\mathrm{f}[j])$ \u548c\u70b9 $(\\mathrm{dis}[k],\\mathrm{f}[k])$ \u4e4b\u95f4\u7684\u7ebf\u6bb5\u7684\u659c\u7387\u5927\u4e8e $p_u$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u4e00\u4e2a\u5408\u6cd5\u70b9\u7684\u4e0b\u51f8\u58f3\uff0c\u8fd9\u6837\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684 $p_u$ \u5728\u51f8\u58f3\u4e0a\u4e8c\u5206\u5f97\u5230\u51b3\u7b56\u70b9\u3002\n\n\u4f46\u662f\u8fd9\u6837\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u77e5\u9053\u5408\u6cd5\u7684\u51b3\u7b56\u70b9\u662f $u$ \u7684\u8fd1\u51e0\u5c42\u7956\u5148\uff0c\u5373 $u$ \u5230\u7956\u5148\u7684\u94fe\u4e0a $\\mathrm{dis}$ \u8f83\u5927\u7684\u8282\u70b9\uff0c\u5b83\u4eec\u5bf9\u5e94\u7684\u70b9\u4e5f\u662f\u9760\u53f3\u7684\u3002\n\n![](https://i.loli.net/2019/03/04/5c7cf62878f64.bmp)\n\n\u8003\u8651\u8fd9\u5f20\u56fe\uff0c\u5047\u8bbe A \u70b9\u662f\u975e\u6cd5\u8f6c\u79fb\u70b9\uff0c\u800c B\u3001C\u3001D \u90fd\u662f\u5408\u6cd5\u8f6c\u79fb\u70b9\uff0c\u6b64\u65f6\u7ef4\u62a4\u7684\u51f8\u58f3\u5e76\u4e0d\u5305\u542b B\uff0c\u7136\u800c B \u53ef\u80fd\u662f\u6700\u4f18\u51b3\u7b56\u70b9\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u4e00\u6bb5\u540e\u7f00\u4e2d\u7684\u6700\u4f18\u8f6c\u79fb\u70b9\uff0c\u7136\u800c\u6211\u4eec\u53c8\u4e0d\u80fd\u7ef4\u62a4\u6240\u6709\u540e\u7f00\u7684\u51f8\u58f3\uff0c\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u6709\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\uff1a\u7ef4\u62a4\u4e00\u4e9b\u533a\u95f4\u4e2d\u7684\u51f8\u58f3\uff0c\u67e5\u8be2\u65f6\u9009\u62e9\u4e00\u4e9b\u533a\u95f4\u7684\u5e76\u6070\u597d\u7b49\u4e8e\u9700\u8981\u7684\u540e\u7f00\uff0c\u5728\u6bcf\u4e2a\u533a\u95f4\u5185\u5206\u522b\u67e5\u8be2\u6700\u4f18\u51b3\u7b56\u5e76\u66f4\u65b0\u3002\n\n\u8fd9\u63d0\u793a\u6211\u4eec\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u540e\u7f00\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u5957\u5355\u8c03\u6808\u3002  \n\u8fd9\u6837\u82b1\u8d39\u7684\u7a7a\u95f4\u662f $\\Theta(n\\log n)$ \u7684\uff0c\u4fee\u6539\u65f6\u95f4 $\\mathcal{O}(\\log n)$\uff0c\u67e5\u8be2\u65f6\u95f4 $\\mathcal{O}(\\log^2 n)$\u3002\n\n\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u9700\u8981\u5904\u7406\u7684\u4e0d\u662f\u5e8f\u5217\u4e0a\u800c\u662f\u6811\u4e0a\u7684\u8f6c\u79fb\uff0c\u8fd9\u5e76\u4e0d\u96be\u5b9e\u73b0\uff0c\u6211\u4eec\u7ef4\u62a4\u53ef\u64a4\u9500\u5355\u8c03\u6808\uff0c\u5728\u56de\u6eaf\u7684\u65f6\u5019\u64a4\u9500\u8fd9\u6b21\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u5173\u4e8e\u53ef\u64a4\u9500\u5355\u8c03\u6808\uff0c\u8003\u8651\u5355\u8c03\u6808\u7684\u6bcf\u4e00\u6b21\u64cd\u4f5c\u53ea\u4f1a\u66f4\u6539\u6808\u9876\u6307\u9488\u4ee5\u53ca\u6808\u9876\u4f4d\u7f6e\u7684\u503c\uff0c\u6211\u4eec\u7ef4\u62a4\u5386\u53f2\u6bcf\u4e00\u6b21\u64cd\u4f5c\u539f\u5148\u7684\u6808\u9876\u6307\u9488\u4ee5\u53ca\u6808\u9876\u4f4d\u7f6e\u539f\u6765\u7684\u503c\u5373\u53ef\u5b9e\u73b0\u64a4\u9500\u64cd\u4f5c\uff0c\u8fd9\u6837\u63d2\u5165\u548c\u64a4\u9500\u5747\u662f $\\Theta(1)$ \u7684\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n\ntypedef long long LL;\nconst int MN = 200005;\nconst int MS = 2100005;\nconst LL Inf = 0x7fffffffffffffff;\n\nint N, faz[MN];\nstd::vector<int> G[MN];\nLL wgh[MN], dep[MN], dis[MN], p[MN], q[MN], b[MN], len[MN];\nLL stds[MN], tds;\nLL f[MN], *X = dis, *Y = f;\ninline double Slope(int i, int j) {\n\treturn X[i] == X[j] ? 1e60 : (double)(Y[j] - Y[i]) / (X[j] - X[i]);\n}\n\nint stkp[MS], valp[MS], tpp[MS];\nint *istk[MN], *ival[MN], *itp[MN], it[MN];\ninline void Push(int id, int u) {\n\tint t = it[id], tp = itp[id][t], *stk = istk[id];\n\twhile (tp > 0 && Slope(stk[tp - 1], stk[tp]) >= Slope(stk[tp], u)) --tp;\n\t++t, ival[id][t] = stk[itp[id][t] = ++tp], stk[tp] = u, it[id] = t;\n}\ninline void Pop(int id) {\n\tistk[id][itp[id][it[id]]] = ival[id][it[id]];\n\t--it[id];\n}\ninline int chk(int id, LL slp) {\n\tint t = it[id], tp = itp[id][t], *stk = istk[id];\n\tif (!~tp) return -1;\n\tint lb = 0, rb = tp - 1, x = tp, mid;\n\twhile (lb <= rb) {\n\t\tmid = (lb + rb) >> 1;\n\t\tif (Slope(stk[mid], stk[mid + 1]) <= slp) lb = mid + 1;\n\t\telse x = mid, rb = mid - 1;\n\t}\n\treturn stk[x];\n}\ninline void PushAll(int i, int u) { for (; i <= N; i += i & -i) Push(i, u); }\ninline void PopAll(int i) { for (; i <= N; i += i & -i) Pop(i); }\ninline void GetDp(int u) {\n\tf[u] = Inf;\n\tint i = std::lower_bound(stds + 1, stds + tds + 1, dis[u] - len[u]) - stds;\n\tfor (i = N - i + 1; i; i -= i & -i) {\n\t\tint v = chk(i, p[u]);\n\t\tif (~v) f[u] = std::min(f[u], f[v] - dis[v] * p[u] + b[u]);\n\t}\n}\n\nvoid DFS(int u) {\n\tdep[u] = dep[faz[u]] + 1;\n\tdis[u] = dis[faz[u]] + wgh[u];\n\tstds[++tds] = dis[u];\n\tb[u] = dis[u] * p[u] + q[u];\n\tGetDp(u);\n\tPushAll(N - dep[u], u);\n\tfor (auto v : G[u]) DFS(v);\n\tPopAll(N - dep[u]);\n\t--tds;\n}\n\nint main() {\n\tscanf(\"%d%*d\", &N);\n\tistk[1] = stkp, itp[1] = tpp, ival[1] = valp, itp[1][it[1] = 0] = -1;\n\tfor (int i = 2; i <= N; ++i) {\n\t\tint lenl = ((i - 1) & (1 - i)) + 1;\n\t\tistk[i] = istk[i - 1] + lenl;\n\t\titp[i] = itp[i - 1] + lenl;\n\t\tival[i] = ival[i - 1] + lenl;\n\t\titp[i][it[i] = 0] = -1;\n\t}\n\tfor (int i = 2; i <= N; ++i) {\n\t\tscanf(\"%d%lld%lld%lld%lld\", &faz[i], &wgh[i], &p[i], &q[i], &len[i]);\n\t\tG[faz[i]].push_back(i);\n\t}\n\tPushAll(N, 1), stds[tds = 1] = 0;\n\tfor (auto u : G[1]) DFS(u);\n\tfor (int i = 2; i <= N; ++i) printf(\"%lld\\n\", f[i]);\n\treturn 0;\n}\n```",
        "postTime": 1551695153,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2305 \u3010[NOI2014]\u8d2d\u7968 \u3011"
    },
    {
        "content": "[\u4f60\u771f\u7684\u4e0d\u60f3\u6253\u5f00\u770b\u770b\u5417](https://blog.csdn.net/litble/article/details/80632055)\n\nDP\u65b9\u7a0b\u663e\u7136\uff1a$f_i=min(f_j+(dis_i-dis_j)*p_i+q_i)$\uff0cdis\u662f\u6839\u5230\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u5047\u8bbej\u7684\u6df1\u5ea6\u6bd4k\u5927\u4e14j\u8fd9\u4e2a\u51b3\u7b56\u6bd4k\u66f4\u4f18\uff0c\u90a3\u4e48\u5c31\u6709\uff1a\n\n$$f_j+d_ip_i-d_jp_i+q_i<f_k+d_ip_i-d_kp_i+q_i$$\n\n$$\\frac{f_j-f_k}{d_j-d_k}<p_i$$\n\n\u8bb0\u8fd9\u4e2a\u659c\u7387\u5f0f\u4e3a$slop(j,k)$\uff0c\u5982\u679c\u5b58\u5728i\u7684\u6df1\u5ea6\u5927\u4e8ej\uff0cj\u7684\u6df1\u5ea6\u5927\u4e8ek\u4e14$slop(i,j)<slop(j,k)$\uff0c\u90a3\u4e48j\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\u51b3\u7b56\u3002\uff08\u56e0\u4e3a\u5982\u679c$p_i>slop(j,k)$\uff0c\u5219i\u6bd4\u8f83\u4f18\uff0c\u5426\u5219k\u6bd4\u8f83\u4f18\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u4e0a\u51f8\u58f3\u3002\n\n\u8003\u8651\u7528**\u70b9\u5206\u6cbb**\u6765\u5b9e\u73b0\u6811\u4e0a\u659c\u7387\u4f18\u5316\uff0c\u5047\u8bbe\u5f53\u524d\u5728\u5904\u7406\u4e00\u4e2a\u4ee5now\u4e3a\u6839\u7684\u5b50\u6811\u3002\n\n1.\u627e\u5230\u91cd\u5fc3x\u3002\n\n2.\u9012\u5f52\u5904\u7406\u5305\u542bnow\u7684\u90a3\u4e2a\u8fde\u901a\u5757\u5e26\u4e0ax\n\n3.\u5c06\u5b50\u6811x\u4e2d\uff0c\u9664x\u4ee5\u5916\u7684\u70b9\uff0c\u6309\u7167\u5176\u4e00\u8d9f\u8f66\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u5c0f\u6df1\u5ea6\uff0c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\n\n4.\u4f9d\u6b21\u5904\u7406\u8fd9\u4e9b\u70b9\uff0c\u6bcf\u6b21\u628a\u65b0\u7684\u53ef\u4ee5\u4e00\u8d9f\u8f66\u5230\u8fbe\u7684\u70b9\u52a0\u5165\u51f8\u58f3\u4e2d\uff0c\u5355\u8c03\u6808\u7ef4\u62a4\u4e00\u4e0b\u3002\u7136\u540e\u4e8c\u5206\u7b54\u6848\u5bfb\u627e\u5f53\u524d\u8fd9\u4e2a\u70b9\u7684\u6700\u4f18\u51b3\u7b56\u3002\n\n5.\u9012\u5f52\u5904\u7406x\u7684\u5b50\u6811\u3002\n\n\u590d\u6742\u5ea6\u662f$O(nlog^2n)$\u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nLL read() {\n\tLL q=0;char ch=' ';\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') q=q*10+(LL)(ch-'0'),ch=getchar();\n\treturn q;\n}\n#define RI register int\ntypedef double db;\nconst int N=200005;\nint tot,n,t,rt,mx,js;\nint h[N],ne[N],to[N],fa[N],sz[N],vis[N],P[N];\nLL w[N],p[N],q[N],l[N],dis[N],f[N];\n\nint st[N],top;db sl[N];\ndb slope(int x,int y) {return (db)(f[y]-f[x])/(db)(dis[y]-dis[x]);}\nvoid ins(int x) {\n\twhile(top>=2&&sl[top-1]<=slope(st[top],x)) --top;\n\tst[++top]=x,sl[top]=-1e18,sl[top-1]=slope(st[top-1],st[top]);\n}\nint query(db num) {\n\tint l=1,r=top,mid,re;\n\twhile(l<=r) {\n\t\tmid=(l+r)>>1;\n\t\tif(sl[mid]<=num) re=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\treturn st[re];\n}\n\nvoid getrt(int x,int SZ) {\n\tsz[x]=1;int bl=0;\n\tfor(RI i=h[x];i;i=ne[i])\n\t\tif(!vis[to[i]])\n\t\t\tgetrt(to[i],SZ),sz[x]+=sz[to[i]],bl=max(bl,sz[to[i]]);\n\tbl=max(bl,SZ-sz[x]);\n\tif(bl<=mx) rt=x,mx=bl;\n}\nvoid dfs(int x) {\n\tP[++js]=x;\n\tfor(RI i=h[x];i;i=ne[i]) if(!vis[to[i]]) dfs(to[i]);\n}\nbool cmp(int x,int y) {return dis[x]-l[x]>dis[y]-l[y];}\nvoid work(int now,int SZ) {\n\tif(SZ==1) return;\n\tmx=1e9,getrt(now,SZ);int x=rt,kmx=mx;\n\tfor(RI i=h[x];i;i=ne[i]) vis[to[i]]=1,SZ-=sz[to[i]];\n\twork(now,SZ);\n\tjs=0;for(RI i=h[x];i;i=ne[i]) dfs(to[i]);\n\tsort(P+1,P+1+js,cmp);\n\t\n\tint j=x;top=0;\n\tfor(RI i=1;i<=js;++i) {\n\t\tint y=P[i];\n\t\twhile(j!=fa[now]&&dis[j]>=dis[y]-l[y]) ins(j),j=fa[j];\n\t\tif(top) {\n\t\t\tint k=query(p[y]);\n\t\t\tf[y]=min(f[y],f[k]+(dis[y]-dis[k])*p[y]+q[y]);\n\t\t}\n\t}\n\tfor(RI i=h[x];i;i=ne[i]) work(to[i],sz[to[i]]);\n}\n\nvoid add(int x,int y,int z) {to[++tot]=y,ne[tot]=h[x],h[x]=tot,w[tot]=z;}\nvoid getdis(int x)\n\t{for(RI i=h[x];i;i=ne[i]) dis[to[i]]=dis[x]+w[i],getdis(to[i]);}\nint main()\n{\n\tint z;n=read(),t=read();\n\tfor(RI i=2;i<=n;++i) {\n\t\tfa[i]=read(),z=read(),add(fa[i],i,z);\n\t\tp[i]=read(),q[i]=read(),l[i]=read(),f[i]=LLONG_MAX;\n\t}\n\tgetdis(1);work(1,n);\n\tfor(RI i=2;i<=n;++i) printf(\"%lld\\n\",f[i]);\n    return 0;\n}\n```\n",
        "postTime": 1528520487,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2305 \u3010[NOI2014]\u8d2d\u7968 \u3011"
    },
    {
        "content": "\u5f88\u4e45\u4e4b\u524d\u8bf4\u8981\u6478\u4e00\u4e0b\u8fd9\u9898\u7684\u56db\u79cd\u505a\u6cd5\u7136\u540e\u5199\u4e00\u4e0b\u8fd9\u4e2a\u4e1c\u897f\uff0c\u7136\u540e\u7701\u9009\u53d8\u6210\u9884\u5907\u5f79\u9009\u624b\u4e86\uff0c\u5c31\u5495\u6389\u4e86\u3002\u73b0\u5728\u6765\u5199\u4e00\u4e0b\u3002\n\n------------\n\u5173\u4e8e\u6b64\u9898\u7684 dp \u90e8\u5206\uff0c\u5e94\u8be5\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u5e76\u4e14\u5df2\u7ecf\u88ab\u8bb2\u70c2\u4e86\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\u90a3\u4e48\u6839\u636e\u6df1\u5ea6\u7684\u5355\u8c03\u6027\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u7528 cdq \u5206\u6cbb\u52a0\u5355\u8c03\u6808\u6765\u4f18\u5316\u5e8f\u5217\u4e0a\u7684\u95ee\u9898\u3002\n\n\u5bf9\u4e8e\u6811\u4e0a\u7684\u60c5\u51b5\uff0c\u80fd\u591f\u5bf9\u4e00\u4e2a\u70b9\u4ea7\u751f\u8d21\u732e\u7684\u70b9\u662f\u5b83\u7684\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u7956\u5148\u3002\u5173\u4e8e\u5982\u4f55\u628a\u5e8f\u5217\u7684\u505a\u6cd5\u62d3\u5c55\u5230\u6811\u4e0a\uff0c\u6211\u76ee\u524d\u5df2\u77e5\u56db\u79cd\u505a\u6cd5\uff1a\n## \u70b9\u5206\u6cbb\n\u6709\u6839\u6811\u70b9\u5206\u662f\u4e00\u4e2a\u975e\u5e38\u795e\u5947\u7684\u6280\u5de7\u3002\u5b83\u7684\u4e3b\u8981\u6b65\u9aa4\u5927\u81f4\u4e3a\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6709\u6839\u6811\u9996\u5148\u627e\u5230\u91cd\u5fc3\uff0c\u7136\u540e\u9012\u5f52\u5904\u7406\u91cd\u5fc3\u4e0a\u65b9\u7684\u90a3\u4e2a\u5b50\u6811\uff0c\u518d\u8ba1\u7b97\u91cd\u5fc3\u5230\u5f53\u524d\u6839\u8fd9\u6761\u8def\u5f84\u5bf9\u4ee5\u91cd\u5fc3\u4e3a\u6839\u7684\u5b50\u6811\u7684\u8d21\u732e\uff0c\u518d\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u8d21\u732e\u90fd\u53ef\u4ee5\u88ab\u8ba1\u7b97\u5230\uff0c\u5e76\u4e14\u8ba1\u7b97\u4e00\u4e2a\u70b9\u7684\u8d21\u732e\u65f6\u5b83\u7684 dp \u503c\u4e00\u5b9a\u5df2\u7ecf\u8ba1\u7b97\u597d\u3002\u5b9e\u73b0\u65f6\u9700\u8981\u6ce8\u610f\u4e00\u4e9b\u8fb9\u754c\u95ee\u9898\u3002\n\n\u4e00\u6b21\u5206\u6cbb\u7684\u8ba1\u7b97\u8d21\u732e\u90e8\u5206\u662f $O(n\\log n)$ \u65f6\u95f4\uff0c\u6839\u636e\u4e3b\u5b9a\u7406\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$\u3002\n## \u6811\u5256\n\u70b9\u5206\uff0c\u8fb9\u5206\uff0c\u94fe\u5206\u4e09\u79cd\u5206\u6cbb\u6ca1\u6709\u672c\u8d28\u533a\u522b\uff0c\u56e0\u6b64\u80fd\u591f\u70b9\u5206\u7684\u9898\u7406\u8bba\u4e0a\u5fc5\u53ef\u4ee5\u6811\u5256\u3002\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u6811\u5256\u5316\u6811\u4e3a\u94fe\uff0c\u7136\u540e\u76f4\u63a5\u5957\u7528\u5e8f\u5217\u7684\u505a\u6cd5\u3002\u4f46\u662f\u5e8f\u5217\u7684\u505a\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u5df2\u7ecf\u4e3a $O(n\\log^2n)$\uff0c\u76f4\u63a5\u4e0a\u6811\u5256\u590d\u6742\u5ea6\u4f1a\u8fbe\u5230 3log\u3002\u5177\u4f53\u6765\u8bb2\uff0c\u6211\u4eec\u9700\u8981\u505a\u82e5\u5e72\u6b21\u94fe\u4e0a\u7684 cdq \u5206\u6cbb\uff0c\u5171\u8ba1 $O(n)$ \u4e2a\u5143\u7d20\u548c $O(n\\log n)$ \u6b21\u8be2\u95ee\u3002\u867d\u7136\u56e0\u4e3a\u6570\u636e\u5361\u4e0d\u6ee1\u800c\u53ef\u4ee5\u901a\u8fc7\uff0c\u4f46\u6211\u4eec\u4e0d\u80fd\u6ee1\u8db3\u4e8e\u6b64\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u6211\u66fe\u7ecf\u53d1\u73b0\u8fc7\u4e00\u4e2a\u5e38\u7528\u7684\u6811\u5256 trick\uff0c\u53ef\u4ee5\u7528\u4e8e\u5f88\u591a\u6811\u5256\u9898\u5c24\u5176\u662f\u4f18\u5316\u5efa\u56fe\u7684\u780d log\uff0c\u4f46\u81f3\u4eca\u53ea\u5728\u4e00\u7bc7\u535a\u5ba2\u91cc\u770b\u5230\u8fc7\u8fd9\u4e2a trick\u3002\u8003\u8651\u4e00\u4e0b\u6211\u4eec\u7528\u6811\u5256\u5bf9\u4e00\u4e2a\u8def\u5f84\u8fdb\u884c\u5256\u5206\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5b83\u5b9e\u9645\u4e0a\u88ab\u5256\u5206\u6210\u4e86\u82e5\u5e72\u6761\u91cd\u94fe\u7684\u524d\u7f00\u548c\u4e00\u6761\u91cd\u94fe\u7684\u4e00\u4e2a\u53ef\u80fd\u4e0d\u662f\u524d\u7f00\u7684\u533a\u95f4\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u524d\u7f00\uff0c\u6211\u4eec\u53ef\u4ee5\u62ce\u51fa\u6765\u5355\u72ec\u5904\u7406\uff0c\u53ea\u9700\u5bf9\u6bcf\u6761\u91cd\u94fe\u505a\u4e00\u6b21\u626b\u63cf\u7ebf\uff0c\u7ef4\u62a4\u5355\u8c03\u6808\u5e76\u4e8c\u5206\u5373\u53ef\u3002\u524d\u7f00\u7684\u8be2\u95ee\u6709 $O(n\\log n)$ \u4e2a\uff0c\u6bcf\u6b21\u9700 $O(\\log n)$ \u65f6\u95f4\u3002\u800c cdq \u5206\u6cbb\u7684\u533a\u95f4\u8be2\u95ee\u964d\u5230\u4e86 $O(n)$ \u4e2a\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230\u4e86 $O(n\\log^2n)$\u3002\n\n\u5b9e\u73b0\u65b9\u9762\uff0c\u53ef\u4ee5\u4f7f\u7528\u6700\u76f4\u89c2\u7684\u65b9\u5f0f\uff0c\u5148\u4e00\u6b21\u9884\u5904\u7406\u628a\u6bcf\u4e2a\u70b9\u6302\u5230\u5b83\u7684\u7956\u5148\u4e0a\u9762\u53bb\u505a\u626b\u63cf\u7ebf\u548c\u5206\u6cbb\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728\u5904\u7406\u5230\u94fe\u65f6\u8ba1\u7b97\u8fd9\u6761\u94fe\u5bf9\u5b50\u6811\u7684\u8d21\u732e\uff0c\u8fd9\u6837\u5c31\u5199\u6210\u4e86\u4e3a\u4eba\u719f\u77e5\u7684\u9759\u6001\u94fe\u5206\u5373 dsu on tree \u7684\u5f62\u5f0f\u3002\n## \u6811\u72b6\u6570\u7ec4\n\u8003\u8651\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5355\u8c03\u6808\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u6bcf\u6b21\u4fee\u6539\u7684\u590d\u6742\u5ea6\u662f\u5747\u644a $O(\\log n)$\uff0c\u67e5\u8be2\u662f $O(\\log^2n)$\u3002\u4f46\u662f\u8fd9\u91cc\u662f\u6811\u4e0a\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u652f\u6301\u64a4\u9500\u64cd\u4f5c\u3002\n\n\u6bcf\u6b21\u5bf9\u6808\u7684\u4fee\u6539\uff0c\u6211\u4eec\u53ef\u4ee5\u82b1\u8d39 $O(\\log n)$ \u65f6\u95f4\u4e8c\u5206\u51fa\u8981\u5f39\u5230\u54ea\u91cc\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u4e0d\u4f9d\u8d56\u4e8e\u5747\u644a\u4e86\u3002\u7136\u540e\u6211\u4eec\u8003\u8651\u628a\u5355\u8c03\u6808\u53ef\u64a4\u9500\u5316\u3002\u6bcf\u6b21\u4fee\u6539\u53ea\u6539\u53d8\u4e86\u6808\u9876\u4f4d\u7f6e\u548c\u6808\u9876\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u5f00\u4e00\u4e2a\u6808\u8bb0\u5f55\u6bcf\u6b21\u6539\u53d8\u524d\u7684\u6808\u9876\u5143\u7d20\uff0c\u64a4\u9500\u65f6\u76f4\u63a5\u6539\u56de\u53bb\u5c31\u884c\u4e86\u3002\n\n\u5982\u679c\u4f7f\u7528\u7ebf\u6bb5\u6811\u5957\u5355\u8c03\u6808\uff0c\u672c\u8d28\u662f\u76f8\u540c\u7684\u3002\n\n------------\n\u4ee5\u4e0a\u4e09\u79cd\u89e3\u6cd5\uff0c\u867d\u7136\u770b\u4f3c\u4e0d\u540c\uff0c\u4f46\u6838\u5fc3\u601d\u60f3\u662f\u4e00\u81f4\u7684\uff1a\u5373\u662f\u628a\u6811\u4e0a\u7684\u95ee\u9898\u5256\u5206\u5230\u5e8f\u5217\u4e0a\uff0c\u628a\u6811\u4e0a\u7684\u8def\u5f84\u5256\u5206\u6210\u94fe\u3002\u81f3\u4e8e\u4e09\u79cd\u4e0d\u540c\u7684\u505a\u6cd5\uff0c\u53ea\u662f\u7528\u4e0d\u540c\u7684\u5f62\u5f0f\u6765\u4fdd\u8bc1\u590d\u6742\u5ea6\u800c\u5df2\u3002\u4f46\u6811\u72b6\u6570\u7ec4\u5957\u5355\u8c03\u6808\u7684\u89e3\u6cd5\u4e0e\u4e24\u79cd\u5206\u6cbb\u53c8\u6709\u6240\u4e0d\u540c\uff0c\u4e24\u79cd\u5206\u6cbb\u628a\u95ee\u9898\u5316\u4e3a\u4e86 $O(n)$ \u6761\u4e92\u4e0d\u76f8\u4ea4\u94fe\u4e0a\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u9759\u6001\u89e3\u51b3\uff0c\u4f46\u6811\u72b6\u6570\u7ec4\u5728\u5904\u7406\u4e0d\u540c\u70b9\u65f6\u5256\u5206\u51fa\u7684\u94fe\u662f\u53ef\u80fd\u76f8\u4ea4\u7684\uff0c\u662f\u4e00\u4e2a\u52a8\u6001\u7684\u95ee\u9898\u3002\n\n\u90a3\u4e48\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u6709\u6ca1\u6709\u4ece\u53e6\u4e00\u6761\u8def\u5f84\u89e3\u51b3\u95ee\u9898\u7684\u505a\u6cd5\u5462\uff1f\n## \u51fa\u6808\u5e8f\n\u76f4\u63a5\u7ed9\u7ed3\u8bba\uff1a\u8fdb\u884c\u4e00\u6b21 dfs\uff0c\u5728\u6bcf\u4e2a\u70b9\u88ab\u8bbf\u95ee\u5b8c\u65f6\u8bb0\u5f55\u65f6\u95f4\u6233\u3002dp \u65f6\u6309\u8fd9\u4e2a\u987a\u5e8f\u8fdb\u884c dfs\uff0c\u5982\u679c\u5f53\u524d\u70b9\u4e3a $u$\uff0c\u5bf9\u5b83\u4ea7\u751f\u8d21\u732e\u7684\u6700\u6d45\u7684\u7956\u5148\u4e3a $v$\uff0c\u90a3\u4e48\u76f4\u63a5\u5728 $u$ \u548c $v$ \u7684\u65f6\u95f4\u6233\u4e4b\u95f4\u8fdb\u884c\u67e5\u8be2\u5373\u53ef\u3002\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u4e0d\u4f1a\u6d89\u53ca\u5230\u6ca1\u6709\u88ab\u8ba1\u7b97\u8fc7\u7684\u70b9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8fd8\u662f\u9700\u8981\u5c06\u5e8f\u5217\u4e0a\u7684\u505a\u6cd5\u52a8\u6001\u5316\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u5957\u5355\u8c03\u6808\u5373\u53ef\u3002\n\n**upd**\uff1a\u63d2\u5165\u7684\u987a\u5e8f\u4e0d\u5355\u8c03\uff0c\u6240\u4ee5\u4e0d\u592a\u80fd\u5355\u8c03\u6808\uff0c\u4f46\u662f\u53ef\u4ee5\u674e\u8d85\u6811\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u7684\u601d\u60f3\u5c31\u548c\u4e0a\u9762\u4e0d\u4e00\u6837\u4e86\u3002\u5b83\u4e0d\u662f\u5c06\u8def\u5f84\u5256\u6210\u82e5\u5e72\u94fe\uff0c\u800c\u662f\u76f4\u63a5\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u628a\u6811\u62cd\u5230\u5e8f\u5217\u4e0a\u53bb\u800c\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u5de7\u5999\uff0c\u5728\u8bb8\u591a\u53ea\u6d89\u53ca\u4ece\u4e0a\u5f80\u4e0b\u7684\u8def\u5f84\u7684\u9898\u53ef\u4ee5\u7528\u5230\u3002\n\n------------\n\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u628a\u6240\u6709\u5355\u8c03\u6808\u6362\u6210\u674e\u8d85\u6811\uff0c\u672c\u8d28\u662f\u76f8\u540c\u7684\u3002\n\n\u4e0b\u9762\u4e0a\u6811\u5256\u7248\u672c\u7684\u4ee3\u7801\uff0c\u5f88\u4e45\u4ee5\u524d\u5199\u7684\u53ef\u80fd\u6709\u70b9\u4e11\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ninline ll readint(){\n\tll x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)&&c!='-') c=getchar();\n\tif(c=='-'){\n\t\tf=1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nconst int maxn=2e5+5;\nint n,p[maxn];\nll s[maxn],q[maxn],lv[maxn];\nvector<int> ch[maxn];\nint fa[maxn],size[maxn],hson[maxn];\nll d[maxn];\nvoid dfs1(int u){\n\tif(u!=1) d[u]=d[fa[u]]+s[u];\n\tsize[u]=1;\n\tfor(int v:ch[u]){\n\t\tfa[v]=u;\n\t\tdfs1(v);\n\t\tsize[u]+=size[v];\n\t\tif(size[v]>size[hson[u]]) hson[u]=v;\n\t}\n}\nint pos[maxn],top[maxn],bot[maxn];\nvector<int> f;\nvoid dfs2(int u){\n\tpos[u]=f.size();\n\tf.push_back(u);\n\tif(!hson[u]){\n\t\tbot[u]=u;\n\t\treturn;\n\t}\n\ttop[hson[u]]=top[u];\n\tdfs2(hson[u]);\n\tbot[u]=bot[hson[u]];\n\tfor(int v:ch[u]){\n\t\tif(v==hson[u]) continue;\n\t\ttop[v]=v;\n\t\tdfs2(v);\n\t}\n}\nll dp[maxn];\nvector<int> q1[maxn],q2[maxn];\nint st[maxn],tp;\ndouble slope(int x,int y){\n\treturn 1.0*(dp[y]-dp[x])/(d[y]-d[x]);\n}\nvoid solve(int l,int r){\n\tif(l==r){\n\t\tfor(int i:q1[f[r]]) dp[i]=min(dp[i],dp[f[r]]+p[i]*(d[i]-d[f[r]])+q[i]);\n\t\treturn;\n\t}\n\tint mid=l+(r-l)/2;\n\tsolve(l,mid);\n\tvector<int> tmp;\n\tfor(int i=mid+1;i<=r;i++) for(int j:q1[f[i]]) tmp.push_back(j);\n\tsort(tmp.begin(),tmp.end(),[](int a,int b){\n\t\treturn d[a]-lv[a]>d[b]-lv[b];\n\t});\n\tint cur=0;\n\ttp=0;\n\twhile(cur<(int)tmp.size()&&d[tmp[cur]]-lv[tmp[cur]]>d[f[mid]]) cur++;\n\tfor(int i=mid;i>=l;i--){\n\t\twhile(tp>1&&slope(f[i],st[tp-1])>=slope(f[i],st[tp-2])) tp--;\n\t\tst[tp++]=f[i];\n\t\twhile(cur<(int)tmp.size()&&(i==l||d[tmp[cur]]-lv[tmp[cur]]>d[f[i-1]])){\n\t\t\tint x=tmp[cur++],l=0,r=tp-1;\n\t\t\twhile(l<r){\n\t\t\t\tint mid=l+(r-l+1)/2;\n\t\t\t\tif(slope(st[mid],st[mid-1])<p[x]) r=mid-1;\n\t\t\t\telse l=mid;\n\t\t\t}\n\t\t\tdp[x]=min(dp[x],dp[st[r]]+p[x]*(d[x]-d[st[r]])+q[x]);\n\t\t}\n\t}\n\tsolve(mid+1,r);\n}\nvoid dfs3(int u){\n\tif(top[u]==u){\n\t\tsolve(pos[u],pos[bot[u]]);\n\t\ttp=0;\n\t\tfor(int i=pos[u];i<=pos[bot[u]];i++){\n\t\t\twhile(tp>1&&slope(st[tp-1],f[i])<=slope(st[tp-2],f[i])) tp--;\n\t\t\tst[tp++]=f[i];\n\t\t\tfor(int j:q2[f[i]]){\n\t\t\t\tint l=0,r=tp-1;\n\t\t\t\twhile(l<r){\n\t\t\t\t\tint mid=l+(r-l)/2;\n\t\t\t\t\tif(slope(st[mid],st[mid+1])<p[j]) l=mid+1;\n\t\t\t\t\telse r=mid;\n\t\t\t\t}\n\t\t\t\tdp[j]=min(dp[j],dp[st[r]]+p[j]*(d[j]-d[st[r]])+q[j]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int v:ch[u]) dfs3(v);\n}\nconst ll inf=9e18;\nint main(){\n\t#ifdef LOCAL\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n\t#endif\n\tn=readint();\n\treadint();\n\tfor(int i=2;i<=n;i++){\n\t\tch[fa[i]=readint()].push_back(i);\n\t\ts[i]=readint();\n\t\tp[i]=readint();\n\t\tq[i]=readint();\n\t\tlv[i]=readint();\n\t}\n\tdfs1(1);\n\ttop[1]=1;\n\tdfs2(1);\n\tfor(int i=2;i<=n;i++){\n\t\tint u=fa[i];\n\t\twhile(top[u]!=1&&d[i]-d[fa[top[u]]]<=lv[i]){\n\t\t\tq2[u].push_back(i);\n\t\t\tu=fa[top[u]];\n\t\t}\n\t\tq1[u].push_back(i);\n\t}\n\tfor(int i=2;i<=n;i++) dp[i]=inf;\n\tdfs3(1);\n\tfor(int i=2;i<=n;i++) printf(\"%lld\\n\",dp[i]);\n\treturn 0;\n}\n```",
        "postTime": 1621616100,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u5173\u4e8e\u3010\u300cNOI2014\u300d\u8d2d\u7968\u3011\u7684\u4e00\u4e9b\u601d\u8003"
    },
    {
        "content": "\n\n\u6807\u7b7e: CDQ \u5206\u6cbb, \u70b9\u5206\u6cbb, \u659c\u7387\u4f18\u5316.\n\n#### Part 1\n\n\u5148\u8003\u8651\u94fe\u4e0a\u65e0\u8ddd\u79bb\u9650\u5236\u7684\u505a\u6cd5, \u8bbe $f_u$ \u8868\u793a $u$ \u70b9\u7684\u7b54\u6848, \u5bb9\u6613\u5f97\u5230\u8f6c\u79fb\u5f0f: $f_u=\\min_v\\{f_v+(dis_u-dis_v)\\times p_u+q_u\\}$, \u5176\u4e2d $dis_u$ \u8868\u793a $u$ \u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb.\n\n\u5bf9\u8f6c\u79fb\u5f0f\u7a0d\u52a0\u53d8\u5f62, \u5bb9\u6613\u5f97\u5230\u4e00\u4e2a\u53ef\u4ee5\u659c\u7387\u4f18\u5316\u7684\u5f62\u5f0f: $f_u=\\min_v\\{f_v-dis_v\\times p_u+dis_u\\times p_u+q_u\\}$ , \u5355\u8c03\u6808\u7ef4\u62a4, \u4ece\u6839\u5411\u4e0b\u6c42\u7b54\u6848.\n\n### Part 2\n\n\u52a0\u4e0a\u8ddd\u79bb\u9650\u5236, \u4ecd\u7136\u8003\u8651\u94fe\u7684\u505a\u6cd5, \u6ce8\u610f\u5230\u53ef\u4ee5\u8f6c\u79fb\u5230\u67d0\u4e2a\u70b9\u7684\u8303\u56f4(\u5373\u80fd\u5230\u8fbe\u7684\u6df1\u5ea6\u6700\u4f4e\u7684\u7956\u5148)\u5e76\u4e0d\u5177\u6709\u5355\u8c03\u6027, \u9700\u8981\u60f3\u529e\u6cd5\u6765\u5904\u7406\u4e00\u4e0b(\u663e\u7136\u8fd9\u91cc\u76f4\u63a5\u5728\u51f8\u5305\u4e0a\u4e8c\u5206\u662f\u9519\u8bef\u7684).\n\n\u4e00\u4e2a\u505a\u6cd5\u662f\u4f7f\u7528 CDQ \u5206\u6cbb, \u5148\u9012\u5f52\u5904\u7406\u4e0a\u534a\u90e8\u5206(\u6df1\u5ea6\u6d45\u7684\u4e00\u534a)\u7684\u7b54\u6848, \u5c06\u4e0b\u534a\u90e8\u5206(\u6df1\u5ea6\u6df1\u7684\u4e00\u534a)\u6309 **\u80fd\u5230\u8fbe\u7684\u6df1\u5ea6\u6700\u4f4e\u7684\u7956\u5148\u7684\u6df1\u5ea6** \u4ece\u5927\u5230\u5c0f\u6392\u5e8f(\u5373\u8303\u56f4\u7531\u5c0f\u5230\u5927)\u4f9d\u6b21\u5904\u7406, \u6bcf\u6b21\u628a\u53ef\u4ee5\u67e5\u8be2\u5230\u7684\u4f4d\u7f6e\u7684\u6240\u6709\u70b9\u52a0\u5165\u5355\u8c03\u6808, \u5728\u51f8\u5305\u4e0a\u4e8c\u5206\u627e\u6700\u4f18\u4f4d\u7f6e\u5c31\u597d\u4e86.\n\n### Part 3\n\n`\u51fa\u6bd2\u7624\u9898\u7684\u6700\u597d\u65b9\u6cd5\u5c31\u662f\u628a\u5e8f\u5217(\u94fe)\u4e0a\u7684\u95ee\u9898\u653e\u5230\u6811\u4e0a, \u628a\u6811\u4e0a\u7684\u95ee\u9898\u653e\u5230\u4ed9\u4eba\u638c\u4e0a` \n\n\u5f15\u7528\u8fd9\u53e5\u8bdd\u5e76\u4e0d\u662f\u6211\u60f3\u8bf4\u8fd9\u9053\u9898\u6bd2\u7624, \u800c\u662f\u60f3\u8868\u8fbe\u6811\u4e0a\u95ee\u9898\u786e\u5b9e\u901a\u5e38\u9700\u8981\u6211\u4eec\u66f4\u6df1\u5165\u7684\u601d\u8003, \u8fd9\u9053\u9898\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5f97\u5230\u4e00\u4e2a\u5341\u5206\u81ea\u7136\u7684\u60f3\u6cd5: \u94fe\u4e0a\u6309\u533a\u95f4\u5206\u6cbb, \u6811\u4e0a\u5c31\u4e0a\u70b9\u5206\u6cbb.\n\n\u4e8b\u5b9e\u4e0a\u70b9\u5206\u6cbb\u7684\u60f3\u6cd5\u662f\u6b63\u786e\u7684, \u5904\u7406\u4e00\u4e2a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u65f6, \u6211\u4eec\u5148\u627e\u5230\u5b50\u6811\u7684\u91cd\u5fc3 $root$ , \u5904\u7406\u4ee5 $root$ \u4e3a\u6839\u7684\u5b50\u6811\u4ee5\u5916\u7684\u90e8\u5206(\u53ef\u4ee5\u8ba4\u4e3a\u662f $root$ \u4ee5\u4e0a\u7684\u90e8\u5206), \u7136\u540e\u5904\u7406 $root$ \u6240\u6709\u7236\u4eb2\u5bf9 $root$ \u5b50\u6811\u5185\u6240\u6709\u70b9\u7684\u8d21\u732e\u5c31\u597d\u4e86.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log^2n)$, \u5176\u4e2d\u70b9\u5206\u6cbb\u4e00\u4e2a $\\log$, \u5728\u51f8\u5305\u4e0a\u4e8c\u5206\u4e00\u4e2a $\\log$ .\n\n\u4ee3\u7801\u5b9e\u73b0\u633a\u7b80\u5355\u7684.\n\n```cpp\n\n#include <bits/stdc++.h>\nusing namespace std;\nlong long read();\n\nint n, num;\nint fa[200005];\nlong long s[200005], x[200005], y[200005], l[200005];\n\nvector<int> e[200005];\nvoid add(int f, int t) { e[f].push_back(t); }\n\nint root, tot;\nint vis[200005], sz[200005], mx[200005];\nvoid dfs1(int u) {\n    sz[u] = 1, mx[u] = 0;\n    for (int i = e[u].size() - 1, v; i >= 0; --i)\n        if (!vis[v = e[u][i]])\n            dfs1(v), sz[u] += sz[v], mx[u] = max(mx[u], sz[v]);\n    if (root < 0 || max(mx[u], tot - sz[u]) < max(mx[root], tot - sz[root]))\n        root = u;\n    return;\n}\n\nstruct P {\n    long long x, y;\n    P operator-(P a) { return (P){x - a.x, y - a.y}; }\n} st1[200005], st2[200005];\nint top1, top2;\n\nlong long d[200005];\nvoid dfs2(int u) {\n    if (l[u] - d[u] > 0) st1[++top1] = (P){l[u] - d[u], u};\n    for (int i = e[u].size() - 1, v; i >= 0; --i)\n        if (!vis[v = e[u][i]]) d[v] = d[u] + s[v], dfs2(v);\n}\n\nbool cmp(P a, P b) { return a.x < b.x; }\n\nlong long f[200005];\n\ndouble slope(P a, P b) { return (double)(a.y - b.y) / (a.x - b.x); }\n\ndouble sl[200005];\nvoid ins(P a) {\n    while (top2 > 1 && slope(a, st2[top2]) <= sl[top2]) --top2;\n    st2[++top2] = a;\n    sl[top2] = top2 > 1 ? slope(st2[top2], st2[top2 - 1]) : -1e18;\n}\n\nlong long qry(long long k) {\n    int l = 1, r = top2;\n    long long rt = 0;\n    while (l <= r) {\n        int mid = l + r >> 1;\n        if (sl[mid] <= k) {\n            rt = st2[mid].y - st2[mid].x * k, l = mid + 1;\n        } else\n            r = mid - 1;\n    }\n    return rt;\n}\n\nvoid work(int u) {\n    root = -1, dfs1(u), vis[root] = 1;\n    int trt = root;\n    if (trt != u) tot = tot - sz[trt], work(u);\n    int v = trt;\n    long long dis = 0;\n\n    top1 = top2 = d[trt] = 0, dfs2(trt);\n    sort(st1 + 1, st1 + 1 + top1, cmp);\n    for (int i = 1; i <= top1; ++i) {\n        long long lim = st1[i].x;\n        int w = st1[i].y;\n        while (v != fa[u] && dis + s[v] <= lim && fa[v])\n            ins((P){(dis += s[v]), f[fa[v]]}), v = fa[v];\n        if (top2) f[w] = min(f[w], qry(-x[w]) + d[w] * x[w] + y[w]);\n    }\n\n    for (int i = e[trt].size() - 1; i >= 0; --i)\n        if (!vis[v = e[trt][i]]) tot = sz[v], work(v);\n}\n\nint main() {\n    n = read(), num = read();\n    for (int i = 2; i <= n; ++i) {\n        fa[i] = read(), s[i] = read(), x[i] = read(), y[i] = read();\n        l[i] = read(), add(fa[i], i), f[i] = 1000000000000000000ll;\n    }\n\n    tot = n, vis[0] = 1, work(1);\n\n    for (int i = 2; i <= n; ++i) printf(\"%lld\\n\", f[i]);\n    return 0;\n}\n\nlong long read() {\n    long long x = 0;\n    char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x;\n}\n\n```\n\n\n",
        "postTime": 1573567926,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2305 \u3010[NOI2014]\u8d2d\u7968 \u3011"
    },
    {
        "content": "\u65b0\u505a\u6cd5\uff1a\u7ebf\u6bb5\u6811\u5957\u5355\u8c03\u6808 + DFS \u5e8f\u3002\n\n\u9996\u5148 DP \u65b9\u7a0b\u662f\u663e\u7136\u7684\uff1a\u8bbe $dp_i$ \u4e3a $i\\rightsquigarrow 1$ \u7684\u8def\u5f84\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u6709\u65b9\u7a0b\uff1a\n\n$$dp_i=\\min_{j\\in\\text{Anc}(i),d_i-d_j\\leq l_i}dp_j+p_j(d_i-d_j)+q_j$$\n\n\u5176\u4e2d $\\text{Anc}(i)$ \u8868\u793a $i$ \u8282\u70b9\u6240\u6709\u7956\u5148\u6784\u6210\u7684\u96c6\u5408\uff1b$d_i$ \u8868\u793a $i$ \u7684\u6df1\u5ea6\u3002\n\n\u76f4\u63a5 DP \u53ef\u4ee5\u83b7\u5f97 $31$ \u5206\u7684\u9ad8\u5206\u3002\n\n\u53d1\u73b0\u8f6c\u79fb\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u4e14\u5f0f\u5b50\u4e2d\u5b58\u5728 $i$ \u548c $j$ \u7684\u4ea4\u53c9\u9879\uff0c\u6545\u8003\u8651\u659c\u7387\u4f18\u5316\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5148\u8003\u8651\u94fe\u7684\u60c5\u51b5\u3002\n\n\u5bf9\u65b9\u7a0b\u8fdb\u884c\u5957\u8def\u53d8\u5f62\uff1a\n\n$$dp_u-p_ud_u-q_u+p_ud_v=dp_v$$\n\n\u5de6\u4fa7\u8981\u5c3d\u91cf\u5c0f\uff0c\u5373\u8981\u6c42\u4f7f\u7528\u4e00\u6761\u659c\u7387\u4e3a $p_u$ \u7684\u76f4\u7ebf\u5f97\u5230\u6700\u5c0f\u659c\u7387\uff0c\u6545\u8bbe $X=d$\uff0c$Y=dp$\uff0c\u5efa\u7acb\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u5e76\u7ef4\u62a4\u53f3\u4e0b\u51f8\u5305\u3002\u7531\u4e8e $p$ \u65e0\u5355\u8c03\u6027\uff0c\u800c $d$ \u6709\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u7528\u5355\u8c03\u6808 + \u4e8c\u5206\u7ef4\u62a4\u3002\n\n\u7136\u540e\u4f60\u6109\u5feb\u5730\u8ba4\u4e3a\u4f60\u505a\u5b8c\u4e86\u7ed3\u679c\u53d1\u73b0\u8fd8\u6709\u4e00\u4e2a $l_i$ \u7684\u9650\u5236\u2026\u2026\n\n\u5728\u6ca1\u6709 $l_i$ \u9650\u5236\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 $1$ \u4e2a\u5355\u8c03\u6808\u3002\u52a0\u4e0a\u8fd9\u4e2a\u9650\u5236\uff0c\u76f8\u5f53\u4e8e\u7531\u5168\u5c40\u8be2\u95ee\u53d8\u6210\u4e86\u533a\u95f4\u8be2\u95ee\uff0c\u6240\u4ee5\u5728\u5916\u9762\u5957\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5c31 ok \u4e86\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u95ee\u9898\u662f\u6811\u4e0a\u7684\uff0c\u90a3\u4e48\u600e\u4e48\u505a\u5462\uff1f\n\n\u76f4\u63a5\u53ef\u64a4\u9500\uff1f\u5e38\u6570\u5927\u8fd8\u96be\u5199\u2026\u2026\n\n\u5957\u4e2a\u6811\u94fe\u5256\u5206\uff1f\u590d\u6742\u5ea6 3log\u2026\u2026\n\n\u8003\u8651\u51fa\u6808\u5e8f\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u4e00\u4e2a\u8282\u70b9\u7684 DFS **\u8fd4\u56de** \u7684\u65f6\u5019\u8bb0\u5f55\u65f6\u95f4 $T_i$\u3002\u7136\u540e\u91cd\u65b0 DFS\uff0c\u5982\u679c $u$ \u4e00\u6b65\u80fd\u5230\u7956\u5148 $v$\uff0c\u5219\u6b64\u65f6\u76f4\u63a5\u67e5\u8be2 $[T_u,T_v]$ \u5c31\u662f\u5bf9\u7684\u3002\u539f\u56e0\u662f\u533a\u95f4\u4e2d\u4e0d\u5728\u8def\u5f84\u4e0a\u7684\u70b9\u4e00\u5b9a\u4ecd\u7136\u6ca1\u6709\u88ab DP \u5230\u3002\n\n\u8fd9\u90e8\u5206\u5efa\u8bae\u81ea\u5df1\u753b\u4e2a\u6811\u6a21\u62df\u4e00\u904d\uff0c\u5c31\u53ef\u4ee5\u7406\u89e3\u4e86\u3002\n\n\u90a3\u4e48\u5728\u8fd9\u4e2a\u51fa\u6808\u5e8f\u4e0a\u9762\u5e94\u7528\u539f\u6765\u7684\u505a\u6cd5\uff0c\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u4e0d\u9700\u8981\u64a4\u9500\u7684 $O(n\\log^2n)$ \u505a\u6cd5\u3002\n\n\u90a3\u4e48\u8fd9\u9898\u5c31\u505a\u5b8c\u5566~\n\n~~\u611f\u89c9\u4ece\u8fd9\u4e2a\u9898\u53ef\u4ee5\u6539\u51fa\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\u659c\u7387\u4f18\u5316\uff08~~\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <stack>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline long long qread() {\n\tregister char c = getchar();\n\tregister long long x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline long long Abs(const long long& x) {return (x > 0 ? x : -x);}\ninline long long Max(const long long& x, const long long& y) {return (x > y ? x : y);}\ninline long long Min(const long long& x, const long long& y) {return (x < y ? x : y);}\n\nconst int N = 200005;\nstruct Edge {\n\tint to, nxt;\n\tlong long len;\n\tEdge() {\n\t\tnxt = -1;\n\t}\n};\nEdge e[N];\nint n, hd[N], pnt;\nlong long p[N], q[N], l[N], dep[N], dp[N], pst[N], _time, fa[N][25];\n\ninline long long X(int i) {return dep[i];}\ninline long long Y(int i) {return dp[i];}\n\ninline long double Slope(int j1, int j2) {\n\treturn (long double)(Y(j1) - Y(j2)) / (long double)(X(j1) - X(j2));\n}\n\nstruct Stack {\n\tvector <int> vc;\n\tinline void Ins(int i) {\n\t\twhile (vc.size() > 1 && Slope(vc[vc.size() - 2], vc[vc.size() - 1]) > Slope(vc[vc.size() - 1], i)) vc.pop_back();\n\t\tvc.push_back(i);\n\t}\n\tinline int Query(int p) {\n\t\tif (vc.size() == 0) return 0;\n\t\tint l = -1, r = vc.size() - 1;\n\t\twhile (l < r - 1) {\n\t\t\tint mid = l + r >> 1;\n\t\t\tif (Slope(vc[mid], vc[mid + 1]) < p) l = mid;\n\t\t\telse r = mid;  \n\t\t}\n\t\treturn vc[r];\n\t}\n};\nstruct Segtree {\n\tStack nd[N << 2];\n\tinline void Ins(int p, int pl, int pr, int idx, int v) {\n\t\tnd[p].Ins(v);\n\t\tif (pl == pr) return;\n\t\tint mid = pl + pr >> 1;\n\t\tif (idx <= mid) Ins(p << 1, pl, mid, idx, v);\n\t\telse Ins(p << 1 | 1, mid + 1, pr, idx, v);\n\t}\n\tinline long long Query(int sp, int pl, int pr, int l, int r, int u) {\n\t\tif (pl == l && pr == r) {\n\t\t\tint idx = nd[sp].Query(p[u]);\n\t\t\treturn dp[idx] + p[u] * (dep[u] - dep[idx]) + q[u];\n\t\t}\n\t\tint mid = pl + pr >> 1;\n\t\tif (mid >= r) return Query(sp << 1, pl, mid, l, r, u);\n\t\telse if (mid + 1 <= l) return Query(sp << 1 | 1, mid + 1, pr, l, r, u);\n\t\telse return Min(Query(sp << 1, pl, mid, l, mid, u), Query(sp << 1 | 1, mid + 1, pr, mid + 1, r, u));\n\t}\n};\nSegtree sgt;\n\ninline void AddEdge(int u, int v, long long w) {\n\te[++pnt].to = v;\n\te[pnt].len = w;\n\te[pnt].nxt = hd[u];\n\thd[u] = pnt;\n}\n\ninline void Read() {\n\tn = qread(); qread();\n\tfor (int i = 2;i <= n;i++) {\n\t\tlong long s;\n\t\tfa[i][0] = qread(); s = qread(); p[i] = qread(); q[i] = qread(); l[i] = qread();\n\t\tAddEdge(fa[i][0], i, s);\n\t}\n}\n\ninline void Dfs1(int u) {\n\tfor (int i = hd[u];~i;i = e[i].nxt) {\n\t\tdep[e[i].to] = dep[u] + e[i].len;\n\t\tDfs1(e[i].to);\n\t}\n\tpst[u] = ++_time;\n}\n\ninline void Prefix() {\n\tfor (int j = 1;j <= 20;j++) {\n\t\tfor (int i = 1;i <= n;i++) fa[i][j] = fa[fa[i][j - 1]][j - 1];\n\t}\n}\n\ninline int Up(int u, long long dis) {\n\tfor (int k = 20;k >= 0;k--) {\n\t\tif (fa[u][k] && dep[u] - dep[fa[u][k]] <= dis) {\n\t\t\tdis -= dep[u] - dep[fa[u][k]];\n\t\t\tu = fa[u][k];\n\t\t}\n\t}\n\treturn u;\n}\n\ninline void Dfs2(int u) {\n\tif (u != 1) {\n\t\tint v = Up(u, l[u]);\n\t\tdp[u] = sgt.Query(1, 1, n, pst[u], pst[v], u);\n\t}\n\tsgt.Ins(1, 1, n, pst[u], u);\n\tfor (int i = hd[u];~i;i = e[i].nxt) Dfs2(e[i].to);\n}\n\nint main() {\n\tmemset(hd, -1, sizeof(hd));\n\tRead();\n\tDfs1(1);\n\tPrefix();\n\tmemset(dp, 0x3f, sizeof(dp));\n\tdp[1] = 0;\n\tDfs2(1);\n\tfor (int i = 2;i <= n;i++) printf(\"%lld\\n\", dp[i]);\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1610028033,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2305 \u3010[NOI2014] \u8d2d\u7968\u3011"
    },
    {
        "content": "\u9996\u5148\u9898\u76ee\u7ed9\u7684\u5f0f\u5b50\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8f6c\u5316\u4e3a\u659c\u7387\u4f18\u5316\u7684\u5f0f\u5b50\uff0c\u56e0\u4e3a\u5176\u4ed6\u9898\u89e3\u628a\u5f0f\u5b50\u5199\u4e86\u5f88\u591a\u904d\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5199\u4e86\u3002\n\n$O(N\\log ^2 N)$\uff1a\n\ndfs\u6574\u68f5\u6811\uff0c\u7ef4\u62a4dfs\u6808\u5185\u7684\u6570\u636e\u7ed3\u6784\u3002\u4f7f\u7528\u4e8c\u8fdb\u5236\u5206\u7ec4\u7ef4\u62a4\u51f8\u5305\u6765\u652f\u6301\u70b9\u7684\u63d2\u5165\u548c\u5220\u9664\u3002\u56e0\u4e3a\u8981\u652f\u6301\u5220\u9664\uff0c\u7c7b\u6bd4\u5206\u5757\uff0c\u4e0d\u7ef4\u62a4\u4e8c\u8fdb\u5236\u5206\u7ec4\u7684\u6bcf\u4e00\u7ea7\u7684\u6700\u540e\u4e00\u7ec4\uff0c\u8fd9\u6837\u8981\u60f3\u8ba9\u4e00\u4e2a\u5927\u5c0f\u4e3a$2^k$\u7684\u7ec4\u5931\u6548\uff0c\u5fc5\u987b\u5220\u9664$2^k$\u4e2a\u5143\u7d20\u624d\u884c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u4fdd\u8bc1\u3002\n\n\u4e8c\u8fdb\u5236\u5206\u7ec4\u6700\u597d\u5b9e\u73b0\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u7ebf\u6bb5\u6811\uff0c\u5f53\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u7684size\u6ee1\u4e86\u4e4b\u540e\u6211\u4eec\u518d\u53bb\u66f4\u65b0\u5b83\u7684\u4fe1\u606f\u3002**\u4e3a\u4e86\u4f7f\u6811\u957f\u5f97\u6bd4\u8f83\u5747\u5300\uff0c\u6211\u4eec\u8981\u4f7f\u7ebf\u6bb5\u6811\u7684\u957f\u5ea6\u4e3a2\u7684\u6574\u6b21\u5e42**\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5728\u524d\u9762$\\log$\u4e2a\u7ec4\u91cc\u5206\u522b\u4e8c\u5206\uff0c\u603b\u590d\u6742\u5ea6$\\log^2$\u3002\n\n~~\u8fd9\u4e48\u96be\u4ee5\u5b9e\u73b0\u7684\u4ee3\u7801\u6211\u624d\u4e0d\u4f1a\u5199\uff01~~\n\n\u4e3a\u4ec0\u4e48\u5199\u8d77\u6765\u6bd43\u4e2alog\u7684\u8fd8\u6162\uff01\uff1f\u53ef\u80fd\u662f\u5e38\u6570\u592a\u5927\u4e86\u5427\u3002\n\n```cpp\n#define N 200005\nint n;\nint v[N],nx[N],head[N],cnte;\nLL w[N],path[N];\nil void adde(int uu,int vv,LL ww)\n{\n    v[++cnte]=vv,nx[cnte]=head[uu],w[cnte]=ww,head[uu]=cnte;\n}\nint fa[N][18]; // max 2^17\nint dep[N],mxd;\nLL P[N],Q[N],L[N],f[N];\nvoid pfs(int x,int f)\n{\n    fa[x][0]=f,dep[x]=dep[f]+1;\n    mxd=max(dep[x],mxd);\n    for(ri i=1; i<=17&&fa[x][i-1]; ++i) fa[x][i]=fa[fa[x][i-1]][i-1];\n    for(ri i=head[x]; i; i=nx[i])\n    {\n        path[v[i]]=path[x]+w[i];\n        pfs(v[i],x);\n    }\n}\nconst int rt=1;\nconst LL inf=1ll<<62;\nint len=1,ys[N*2];\nnamespace seg\n{\n\n#define M N*8\n#define ls (x<<1)\n#define rs (x<<1|1)\n#define gm int mid((l+r)/2)\nvector<int>tre[M];\nint bel[M],num[M],siz[M];\nbool hv[M];\nint cnt[25];\nint tmp[N];\nvoid build(int x,int l,int r)\n{\n    num[x]=++tmp[bel[x]=ys[r-l+1]];\n    if(l==r)\n    {\n        tre[x].resize(1);\n        return;\n    }\n    gm;\n    build(ls,l,mid), build(rs,mid+1,r);\n}\nvoid upd(int x,int l,int r,int p,int k)\n{\n    if(++siz[x]==r-l+1) ++cnt[bel[x]];\n    if(l==r)\n    {\n        tre[x][0]=k;\n        hv[x]=1;\n        return;\n    }\n    gm;\n    if(p<=mid) upd(ls,l,mid,p,k);\n    else upd(rs,mid+1,r,p,k);\n}\nvoid del(int x,int l,int r,int p)\n{\n    hv[x]=0;\n    if(--siz[x]==r-l) --cnt[bel[x]];\n    if(l==r) return;\n    gm;\n    if(p<=mid) del(ls,l,mid,p);\n    else del(rs,mid+1,r,p);\n}\nbool cross(LL x1,LL y1,LL x2,LL y2)\n{\n    return (double)x1*y2>=(double)x2*y1;\n}\n#define X(i) (path[i])\n#define Y(i) (f[i])\nvoid merge(vector<int> &a,const vector<int> &l,const vector<int> &r)\n{\n    int tp=0;\n    for(auto i:l) tmp[++tp]=i;\n    for(auto i:r)\n    {\n        while(tp>1&&cross(X(i)-X(tmp[tp-1]),Y(i)-Y(tmp[tp-1]),X(tmp[tp])-X(tmp[tp-1]),Y(tmp[tp])-Y(tmp[tp-1])))\n            --tp;\n        tmp[++tp]=i;\n    }\n    a.resize(tp);\n    for(ri i=1; i<=tp; ++i) a[i-1]=tmp[i];\n}\nvoid work(int x,int l,int r)\n{\n    if(hv[x]) return;\n    gm;\n    work(ls,l,mid), work(rs,mid+1,r);\n    merge(tre[x],tre[ls],tre[rs]);\n    hv[x]=1;\n}\nLL calc(int y,int x)\n{\n    return f[y]+P[x]*(path[x]-path[y])+Q[x];\n}\nLL erfen(const vector<int> &a,int x)\n{\n    int l=0,r=size(a)-2;\n    LL ans=calc(a.back(),x),K=P[x];\n    while(l<=r)\n    {\n        gm;\n        ans=min(calc(a[mid],x),ans);\n        if(cross(1,K,X(a[mid+1])-X(a[mid]),Y(a[mid+1])-Y(a[mid]))) r=mid-1;\n        else l=mid+1;\n    }\n    return ans;\n}\nLL query(int x,int l,int r,int ql,int qr,int k)\n{\n    gm;\n    if(ql<=l&&r<=qr)\n    {\n        if(!hv[x])\n        {\n            if(num[x]<cnt[bel[x]])\n            {\n                work(x,l,r);\n                return erfen(tre[x],k);\n            }\n            else return min(query(ls,l,mid,ql,qr,k),query(rs,mid+1,r,ql,qr,k));\n        }\n        else return erfen(tre[x],k);\n    }\n    LL ans=inf;\n    if(ql<=mid) ans=query(ls,l,mid,ql,qr,k);\n    if(qr>mid) ans=min(query(rs,mid+1,r,ql,qr,k),ans);\n    return ans;\n}\n\n}\nLL calc(int x)\n{\n    int y=x,z=fa[x][0];\n    for(ri i=17; i>=0; --i) if(fa[y][i]&&path[x]-path[fa[y][i]]<=L[x]) y=fa[y][i];\n    return seg::query(rt,1,len,dep[y],dep[z],x);\n}\nvoid dfs(int x)\n{\n    if(x!=1) f[x]=calc(x);\n    seg::upd(rt,1,len,dep[x],x);\n    for(ri i=head[x]; i; i=nx[i])\n        dfs(v[i]);\n    seg::del(rt,1,len,dep[x]);\n}\nvoid solve()\n{\n    pfs(1,0);\n    for(ri i=1; len<mxd; len<<=1,++i) ys[len]=i;\n    seg::build(rt,1,len);\n    dfs(1);\n}\nsigned main()\n{\n#ifdef M207\n    freopen(\"in.in\",\"r\",stdin);\n    // freopen(\"out.out\",\"w\",stdout);\n#endif\n    LL wst;\n    in(n),in(wst);\n    for(ri i=2,a; i<=n; ++i)\n    {\n        in(a),in(wst),in(P[i]),in(Q[i]),in(L[i]);\n        adde(a,i,wst);\n    }\n    solve();\n    for(ri i=2; i<=n; ++i) out(f[i]);\n    return 0;\n}\n```\n\n------------------\n\n$O(N\\log^3 N)$\n\n\u8fd9\u9053\u9898\u7684\u96be\u70b9\u5c31\u5728\u4e8e\u8981\u5220\u9664\u70b9\uff0c\u4f46\u662f\u6211\u4eec**\u628a\u6811\u8fdb\u884c\u6811\u94fe\u5256\u5206\uff0c\u8fd9\u6837\u64cd\u4f5c\u5c31\u53ea\u5269\u4e0b\u63d2\u5165\u4e86\uff01**\n\n\u8bf4\u4e00\u4e9b\u5c0f\u7ec6\u8282\u5427\uff1a\n\n1. \u6811\u5256\u7684\u7ebf\u6bb5\u6811\uff0c\u53ea\u6709\u5f53size\u6ee1\u4e86\u624d\u6c42\u4e00\u904d\u51f8\u5305\uff0c\u5f52\u5e76\u4e24\u4e2a\u5b50\u6811\u7684\u51f8\u5305\uff0c\u8fd9\u6837\u5e38\u6570\u5c0f\u3002\n\n2. \u6811\u5256\u7684\u7ebf\u6bb5\u6811\uff0c\u5982\u679c\u5b83\u7684\u533a\u95f4\u8de8\u8fc7\u4e86\u4e24\u6761\u91cd\u94fe\uff0c\u5c31\u4e0d\u7528\u7ef4\u62a4\u5b83\u4e86\n\n\u6ce8\u610f\uff08\u4e2a\u4eba\u72af\u7684\u9519\u8bef\uff09\uff1a\n\n1. \u554a\u554a\u554a\u7ef4\u62a4\u7684\u662f\u53f3\u4e0b\u51f8\u5305-Thanks to zky\n\n2. \u5728\u627e\u5230\u6700\u6d45\u7684\u7956\u5148\u65f6\uff0c\u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u500d\u589e\u5427\n\n3. \u53c9\u79ef\u4f1a\u7206long long\uff0c\u7528double\n\n\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u6ce8\u91ca\u6389\u7684\u662f\u4e09\u5206\uff0c\u6ca1\u6709\u6ce8\u91ca\u6389\u7684\u662f\u4e8c\u5206\uff0c\u90fd\u5bf9\u3002\n\n~~\u4eba\u50bb\u5e38\u6570\u5927\u7684\u4ee3\u7801\uff1a~~\n\n```cpp\n#define N 200005\nconst LL inf=1ll<<62;\nint n;\nint v[N],nx[N],head[N],cnte;\nLL w[N];\nil void adde(int uu,int vv,LL ww)\n{\n    v[++cnte]=vv,w[cnte]=ww,nx[cnte]=head[uu],head[uu]=cnte;\n}\nLL P[N],Q[N],L[N],f[N];\nint dfn[N],ot[N],dk,ys[N],sz[N],hsn[N],fa[N],top[N];\nint b[N][18]; // max 2^17\nLL path[N];\nvoid dfs(int x,int f)\n{\n    fa[x]=f,sz[x]=1;\n    b[x][0]=f;\n    for(ri i=1; i<=17&&b[x][i-1]; ++i) b[x][i]=b[b[x][i-1]][i-1];\n    for(ri i=head[x]; i; i=nx[i])\n    {\n        path[v[i]]=path[x]+w[i];\n        dfs(v[i],x);\n        sz[x]+=sz[v[i]];\n        if(sz[v[i]]>sz[hsn[x]]) hsn[x]=v[i];\n    }\n}\nconst int rt=1;\nnamespace seg\n{\n\n#define M N*4\n#define ls (x<<1)\n#define rs (x<<1|1)\n#define gm int mid((l+r)/2)\n#define X(i) (path[i])\n#define Y(i) (f[i])\nvector<int>bao[M];\nint st[N],tp;\nil bool cross(LL x1,LL y1,LL x2,LL y2)\n{\n    return (double)y1*x2<(double)y2*x1;\n}\nvoid build(vector<int> &a,vector<int> &l,vector<int> &r)\n{\n    tp=0;\n    for(ri i=0; i<size(l); ++i) st[++tp]=l[i];\n    for(auto i:r)\n    {\n        while(tp>1&&cross(X(i)-X(st[tp-1]),Y(i)-Y(st[tp-1]),X(st[tp])-X(st[tp-1]),Y(st[tp])-Y(st[tp-1])))\n            --tp;\n        st[++tp]=i;\n    }\n    a.resize(tp);\n    for(ri i=1; i<=tp; ++i) a[i-1]=st[i];\n}\nLL calc(int a,int b)\n{\n    return f[a]+P[b]*(path[b]-path[a])+Q[b];\n}\nLL calc(vector<int> &a,int p)\n{\n    LL ans=inf;\n    int l=0,r=size(a)-1;\n    // while(r-l>3)\n    // {\n    //     int lm=l+(r-l)/3,rm=r-(r-l)/3;\n    //     LL vl=calc(a[lm],p),vr=calc(a[rm],p);\n    //     if(vl<=vr) r=rm;\n    //     else l=lm;\n    // }\n    // for(ri i=l; i<=r; ++i) ans=min(calc(a[i],p),ans);\n    LL k=P[p];\n    while(l<=r)\n    {\n        int mid=(l+r)/2;\n        ans=min(calc(a[mid],p),ans);\n        if(mid==size(a)-1) r=mid-1;\n        else if(cross(X(a[mid+1])-X(a[mid]),Y(a[mid+1])-Y(a[mid]),1,k)) l=mid+1;\n        else r=mid-1;\n    }\n    return ans;\n}\nbool bj[M];\nvoid updbj(int x,int l,int r,int ql,int qr)\n{\n    if(ql<=l&&r<=qr) bj[x]=1;\n    if(l==r) return;\n    gm;\n    if(ql<=mid) updbj(ls,l,mid,ql,qr);\n    if(qr>mid) updbj(rs,mid+1,r,ql,qr);\n}\nint sz[M];\nvoid upd(int x,int l,int r,int p,int k)\n{\n    ++sz[x];\n    if(l==r)\n    {\n        bao[x].pb(k);\n        return;\n    }\n    gm;\n    if(p<=mid) upd(ls,l,mid,p,k);\n    else upd(rs,mid+1,r,p,k);\n    if(bj[x]&&sz[x]==r-l+1)\n        build(bao[x],bao[ls],bao[rs]);\n}\nLL query(int x,int l,int r,int ql,int qr,int k)\n{\n    if(ql<=l&&r<=qr)\n    {\n        return calc(bao[x],k);\n    }\n    LL ans=inf; gm;\n    if(ql<=mid) ans=query(ls,l,mid,ql,qr,k);\n    if(qr>mid) ans=min(query(rs,mid+1,r,ql,qr,k),ans);\n    return ans;\n}\n\n}\nvoid efs(int x,int tp)\n{\n    ys[dfn[x]=++dk]=x;\n    top[x]=tp;\n    if(hsn[x])\n    {\n        efs(hsn[x],tp);\n        for(ri i=head[x]; i; i=nx[i])\n            if(v[i]!=hsn[x]) efs(v[i],v[i]);\n    }\n    else seg::updbj(rt,1,n,dfn[top[x]],dfn[x]);\n    ot[x]=dk;\n}\nLL calc(int x)\n{\n    int y=x,z=b[x][0];\n    for(ri i=17; i>=0; --i)\n        if(b[y][i]&&path[x]-path[b[y][i]]<=L[x]) y=b[y][i];\n    LL ans=inf;\n    while(top[z]!=top[y])\n    {\n        ans=min(seg::query(rt,1,n,dfn[top[z]],dfn[z],x),ans);\n        z=fa[top[z]];\n    }\n    ans=min(seg::query(rt,1,n,dfn[y],dfn[z],x),ans);\n    return ans;\n}\nvoid dfs(int x)\n{\n    if(x!=1) f[x]=calc(x);\n    seg::upd(rt,1,n,dfn[x],x);\n    for(ri i=head[x]; i; i=nx[i])\n        dfs(v[i]);\n}\nvoid solve()\n{\n    path[0]=-1;\n    dfs(1,0);\n    efs(1,1);\n    dfs(1);\n}\nsigned main()\n{\n#ifdef M207\n    freopen(\"in.in\",\"r\",stdin);\n    // freopen(\"out.out\",\"w\",stdout);\n#endif\n    LL wst;\n    in(n),in(wst);\n    for(ri i=2,a; i<=n; ++i)\n    {\n        in(a),in(wst), adde(a,i,wst);\n        in(P[i]),in(Q[i]),in(L[i]);\n    }\n    solve();\n    for(ri i=2; i<=n; ++i) out(f[i]);\n    return 0;\n}\n```",
        "postTime": 1545272374,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u6811\u5256+\u7ebf\u6bb5\u6811+\u51f8\u5305+\u4e8c\u5206/\u4e09\u5206-[NOI2014]\u8d2d\u7968-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u9996\u5148\u8fd9\u9898\u768430\u5206dp\u975e\u5e38\u663e\u7136\n$$ f_i = min(f_j + (dis_i - dis_j) * p_i + q_i) $$\n\u7136\u540e\u5c31\u975e\u5e38\u5bb9\u6613\u7684\u53d1\u73b0\u8fd9\u663e\u7136\u662f\u4e2a\u659c\u7387\u4f18\u5316\u3002\u90a3\u4e48\u95ee\u9898\u53c8\u6765\u4e86\uff0c$p[i]$\u7684\u53d8\u5316\u662f\u6ca1\u6709\u89c4\u5f8b\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u9700\u8981\u6c42\u7684\u6700\u6709\u659c\u7387\u4e5f\u90fd\u4e0d\u4e00\u6837\uff0c\u56e0\u6b64\u53ea\u597d\u7ef4\u62a4\u4e00\u4e0b\u51f8\u5305\uff0c\u4f60\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u6216\u8005\u70b9\u5206\u6cbb\u4e4b\u7c7b\u7684\u3002\u6211\u7528\u7684\u662fcdq\u5206\u6cbb+\u70b9\u5206\u6cbb\u3002\n```\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#include<cstring>\n#define MaxN 200010\n\ntypedef long long LL;\n\nconst LL INF = 0x7fffffffffffffff;\n\nstruct edge {LL u, v; LL w; LL next;} e[MaxN];\nstruct point {\n\tLL x, y;\n\tLL operator * (const point &rhs) const {\n\t\treturn x * rhs.y - y * rhs.x;\n\t}\n\tpoint operator - (const point &rhs) const {\n\t\treturn (point) {x - rhs.x, y - rhs.y};\n\t}\n} pnt[MaxN];\n\nLL head[MaxN], tot, n, t, fa[MaxN], maxn[MaxN], siz[MaxN];\nLL vis[MaxN], root, sum, sta[MaxN], top, cntq;\nLL dis[MaxN], d[MaxN], p[MaxN], l[MaxN], q[MaxN];\n\ninline LL read() {\n\tLL x = 0, f = 1; char c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n\tfor (; isdigit(c); c = getchar()) x = x * 10 + c - '0';\n\treturn x * f; \n}\n\nvoid addEdge(LL x, LL y, LL z) {\n\te[++tot] = (edge) {x, y, z, head[x]};\n\thead[x] = tot;\n}\n\nvoid getDistance(LL x) {\n\tfor (LL i = head[x]; i; i = e[i].next) {\n\t\tLL y = e[i].v;\n\t\tdis[y] = dis[x] + e[i].w;\n\t\tgetDistance(y);\n\t}\n}\n\nvoid getRoot(LL x) {\n\tsiz[x] = 1; maxn[x] = 0;\n\tfor (LL i = head[x]; i; i = e[i].next) {\n\t\tLL y = e[i].v;\n\t\tif (!vis[y]) {\n\t\t\tgetRoot(y);\n\t\t\tmaxn[x] = std::max(maxn[x], siz[y]);\n\t\t\tsiz[x] += siz[y];\n\t\t}\n\t}\n\tmaxn[x] = std::max(maxn[x], sum - siz[x]);\n\tif (maxn[x] < maxn[root]) root = x;\n}\n\nbool cmp(LL x, LL y) {\n\treturn dis[x] - l[x] > dis[y] - l[y];\n}\n\nvoid dfs(LL x) {\n\tsta[++top] = x;\n\tfor (LL i = head[x]; i; i = e[i].next) {\n\t\tLL y = e[i].v;\n\t\tif (!vis[y]) dfs(y);\n\t}\n}\n\ninline LL getAns(LL x, point poi) {\n\treturn poi.y + (dis[x] - poi.x) * p[x] + q[x];\n}\n\ndouble getSlope(point poi) {\n\treturn (double) poi.y / poi.x;\n}\n\nvoid solveQuery(LL x) {\n\tLL ans = INF;\n\tLL l = 1, r = cntq;\n\twhile (l + 2 < r) {\n\t\tLL mid1 = l + (r - l) / 3;\n\t\tLL mid2 = mid1 + (r - mid1) / 2;\n\t\tLL ans1 = getAns(x, pnt[mid1]);\n\t\tLL ans2 = getAns(x, pnt[mid2]);\n\t\tif (ans1 < ans2) r = mid2;\n\t\telse l = mid1;\n\t}\n\tfor (LL i = l; i <= r; ++i)\n\t\tans = std::min(ans, getAns(x, pnt[i]));\n\td[x] = std::min(d[x], ans);\n}\n\nvoid solve(LL rt) {\n\troot = 0; getRoot(rt);\n\tLL x = root; vis[x] = 1;\n\tif (x != rt) {\n\t\tsum = siz[rt] - siz[x];\n\t\tsolve(rt);\n\t\ttop = 0; dfs(x);\n\t\tstd::sort(sta + 1, sta + top + 1, cmp);\n\t\tLL now = fa[x], j = 1;\n\t\tcntq = 0;\n\t\tpnt[++cntq] = (point) {dis[now], d[now]};\n\t\twhile (j <= top && dis[sta[j]] - dis[now] > l[sta[j]]) ++j;\n\t\tfor (LL i = j; i <= top; ++i) {\n\t\t\twhile (now != rt && dis[sta[i]] - dis[fa[now]] <= l[sta[i]]) {\n\t\t\t\tnow = fa[now];\n\t\t\t\tpoint tp = (point) {dis[now], d[now]};\n\t\t\t\twhile (cntq > 1 && getSlope(pnt[cntq]-pnt[cntq - 1]) < getSlope(tp - pnt[cntq])) --cntq;\n\t\t\t\tpnt[++cntq] = tp;\n\t\t\t}\n\t\t\tsolveQuery(sta[i]);\n\t\t}\n \t}\n \telse top = 0, dfs(x);\n \tfor (LL i = 1; i <= top; ++i)\n \t\tif (dis[sta[i]] - dis[x] <= l[sta[i]]) \n \t\t\td[sta[i]] = std::min(d[sta[i]], getAns(sta[i], (point) {dis[x], d[x]}));\n \tfor (LL i = head[x]; i; i = e[i].next) {\n \t\tLL y = e[i].v;\n \t\tif (!vis[y]) sum = siz[y], solve(y);\n\t }\t\n}\n\nint main() {\n\tscanf(\"%d %d\", &n, &t);\n\tmemset(d, 0x3f, sizeof d);\n\td[1] = 0;\n\tLL w;\n\tfor (LL i = 2; i <= n; ++i) {\n\t\tscanf(\"%d %lld %lld %lld %lld\", &fa[i], &w, &p[i], &q[i], &l[i]);\n\t\taddEdge(fa[i], i, w);\n\t}\n\tgetDistance(1);\n\tmaxn[0] = 0x7fffffff, sum = n, root = 0;\n\tsolve(1);\n\tfor (LL i = 2; i <= n; ++i) printf(\"%lld\\n\", d[i]);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1540727963,
        "uid": 68510,
        "name": "fallenangel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2305 \u3010[NOI2014]\u8d2d\u7968 \u3011"
    },
    {
        "content": "~~\u4e09\u4e2alog\u53ea\u7528\u4e861800ms\u6211\u4e5f\u5f88\u9707\u60ca~~\n\n\u9996\u5148\u8003\u8651\u94fe\u4e0a\u7684$dp$\uff0c$dp[i]=\\min\\limits_{dis[i]-dis[j]\\leq lim[i]}(P[i]\\times (dis[i]-dis[j])+Q[i]+dp[j])$\n\n\u5178\u578b\u7684\u659c\u7387\u4f18\u5316\uff0c\u62ff\u659c\u7387\u4e3a$P[i]$\u7684\u76f4\u7ebf\u53bb\u5207$(dis[j],dp[j])$\u5f97\u5230\u7684\u6700\u5c0f\u622a\u8ddd\u3002\n\n\u5982\u679c\u4e0d\u8003\u8651$lim[i]$\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u4e00\u4e2a\u4e0b\u51f8\u58f3\uff0c\u4e09\u5206\u51f8\u58f3\u627e\u6781\u503c\u3002\n\n\u52a0\u4e0a$lim[i]$\u7684\u9650\u5236\u540e\uff0c\u6709\u4e00\u4e2a\u66b4\u529b\u7684\u505a\u6cd5\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u7684\u4e0b\u51f8\u58f3\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u5c31\u591a\u4e86\u4e00\u4e2a$log$\u3002\n\n\u7136\u540e\u6269\u5c55\u5230\u6811\u4e0a\u7684\u505a\u6cd5\u7528\u6811\u5256\uff0c\u7136\u540e\u590d\u6742\u5ea6\u518d\u52a0\u4e00\u4e2a$log$\u3002\n\n\u6700\u540e\u590d\u6742\u5ea6\u5c31\u662f$O(nlog^3n)$\uff0c\u7528\u4e86\u4e00\u7247$STL$\uff0c\u8fd9\u79cd\u590d\u6742\u5ea6\u8fd8\u80fd\u8dd1$1800ms$\u3002  \n\n~~\u8fd8\u662f\u633a\u4f18\u79c0\u7684~~\n\nupd\uff1a\u88abAnoxiacxy\u540a\u6253\uff0c\u5c11\u4e2a\u7b49\u53f7\u3002~~\u6570\u636e\u592a\u5f31\u4e86\u3002~~\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define ll long long\n#define ls x << 1\n#define rs x << 1 | 1\n#define eb emplace_back\n#define pb pop_back\n#define db double\nconst int MAX = 210033;\nconst ll inf = (1ll << 63) - 1;\nstruct Point\n{\n\tll x, y;\n\tPoint() {}\n\tPoint(ll a, ll b) { x = a, y = b; }\n\tfriend Point operator - (Point a, Point b) { return Point(a.x - b.x, a.y - b.y); }\n\tfriend ll operator * (Point a, Point b) { return a.x * b.y - a.y * b.x; }\n};\nstruct edge\n{\n\tint to; ll w;\n\tedge() {}\n\tedge(int a, ll b) { to = a, w = b; }\n};\nvector<edge> e[MAX];\nvector<Point> h[MAX << 2];\nint n, cnt_dfn;\nint dfn[MAX], top[MAX], inv[MAX], siz[MAX], fa[MAX], que[MAX];\nll ans[MAX], P[MAX], Q[MAX], lim[MAX], dis[MAX];\nvoid dfs1(int u)\n{\n\tsiz[u] = 1;\n\tfor (auto v : e[u])\n\t{\n\t\tdis[v.to] = dis[u] + v.w;\n\t\tdfs1(v.to);\n\t\tsiz[u] += siz[v.to];\n\t}\n}\nvoid dfs2(int u, int tp)\n{\n\tint big = 0;\n\ttop[u] = tp, dfn[u] = ++cnt_dfn, inv[cnt_dfn] = u;\n\tfor (auto v : e[u])\n\t\tif (siz[v.to] > siz[big])\n\t\t\tbig = v.to;\n\tif (!big) return;\n\tdfs2(big, tp);\n\tfor (auto v : e[u])\n\t\tif (v.to != big)\n\t\t\tdfs2(v.to, v.to);\n}\nvoid bfs()\n{\n\tint head, tail;\n\tque[head = tail = 1] = 1;\n\twhile (head <= tail)\n\t{\n\t\tint u = que[head++];\n\t\tfor (auto v : e[u])\n\t\t\tque[++tail] = v.to;\n\t}\n}\nvoid update(int x, int l, int r, int p, Point c)\n{\n\tint siz = 0;\n\twhile ((siz = h[x].size()) > 1 && (c - h[x][siz - 2]) * (h[x][siz - 1] - h[x][siz - 2]) > 0)\n\t\th[x].pb();\n\th[x].eb(c);\n\tif (l >= r) return;\n\tint mid = (l + r) >> 1;\n\tif (p <= mid) update(ls, l, mid, p, c);\n\telse update(rs, mid + 1, r, p, c);\n}\nll query(int x, int l, int r, int L, int R, int id)\n{\n\tll Ans = inf;\n\tif (L <= l && r <= R)\n\t{\n\t\tint lx = 0, rx = h[x].size() - 1;\n\t\twhile (rx - lx > 3)\n\t\t{\n\t\t\tint m1 = lx + (rx - lx) / 3, m2 = rx - (rx - lx) / 3;\n\t\t\tll v1 = P[id] * (dis[id] - h[x][m1].x) + h[x][m1].y;\n\t\t\tll v2 = P[id] * (dis[id] - h[x][m2].x) + h[x][m2].y;\n\t\t\tif (v1 <= v2) rx = m2;\n\t\t\telse lx = m1;\n\t\t}\n\t\tfor (int i = lx; i <= rx; i++)\n\t\t\tAns = min(Ans, P[id] * (dis[id] - h[x][i].x) + h[x][i].y + Q[id]);\n\t\treturn Ans;\n\t}\n\tint mid = (l + r) >> 1;\n\tif (L <= mid) Ans = min(Ans, query(ls, l, mid, L, R, id));\n\tif (R > mid) Ans = min(Ans, query(rs, mid + 1, r, L, R, id));\n\treturn Ans;\n}\nvoid calc(int L, int R, int id)\n{\n\tll Ans = inf;\n\twhile (dis[top[R]] > dis[L])\n\t{\n\t\tAns = min(Ans, query(1, 1, n, dfn[top[R]], dfn[R], id));\n\t\tR = fa[top[R]];\n\t}\n\tAns = min(Ans, query(1, 1, n, dfn[L], dfn[R], id));\n\tans[id] = Ans;\n\tupdate(1, 1, n, dfn[id], Point(dis[id], ans[id]));\n}\nmain()\n{\n\tscanf(\"%lld%lld\", &n, &fa[MAX - 1]);\n\tfor (int i = 2; i <= n; i++)\n\t{\n\t\tll w;\n\t\tscanf(\"%lld%lld%lld%lld%lld\", &fa[i], &w, &P[i], &Q[i], &lim[i]);\n\t\te[fa[i]].eb(edge(i, w));\n\t}\n\tdfs1(1), dfs2(1, 1), bfs();\n\tupdate(1, 1, n, 1, Point(0, 0));\n\tfor (int i = 2; i <= n; i++)\n\t{\n\t\tint anc = que[i], dist = dis[anc] - lim[anc];\n\t\tanc = fa[anc];\n\t\twhile (anc > 1 && dis[fa[top[anc]]] >= dist)\n\t\t\tanc = fa[top[anc]];\n\t\tif (anc > 1)\n\t\t{\n\t\t\tint l = dfn[top[anc]], r = dfn[anc];\n\t\t\twhile (l <= r)\n\t\t\t{\n\t\t\t\tint mid = (l + r) >> 1;\n\t\t\t\tif (dis[inv[mid]] >= dist)\n\t\t\t\t\tanc = inv[mid], r = mid - 1;\n\t\t\t\telse l = mid + 1;\n\t\t\t}\n\t\t}\n\t\telse anc = 1;\n\t\tcalc(anc, fa[que[i]], que[i]);\n\t}\n\tfor (int i = 2; i <= n; i++)\n\t\tprintf(\"%lld\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1521599625,
        "uid": 37070,
        "name": "Ameyax",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2305 \u3010[NOI2014]\u8d2d\u7968 \u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u7ef4\u62a4\u53ef\u6301\u4e45\u5316\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u51f8\u5305\n\n\u8bbedp[i] \u8868\u793ai\u53f7\u70b9\u5230\u6839\u8282\u70b9\u7684\u6700\u5c11\u82b1\u8d39\n\ndis[i] \u8868\u793a \u70b9i\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\n\ndp[i]= min { \uff08dis[i]-dis[j]\uff09* P[i] + Q[i] + dp[j] }   j\u662fi\u7684\u7956\u5148\u4e14dis[i]-dis[j]<=L[i]\n\n\u5373 dp[i]+dis[j]*P[i]=dp[j]+dis[i]*P[i]+Q[i]\n\n\u659c\u7387\u4f18\u5316\uff0cdp[i]=\u659c\u7387\u4e3aP[i] \u7684\u76f4\u7ebf \u622a\uff08dis[j],dp[j]\uff09\u6240\u5f97\u7684\u622a\u8ddd\u6700\u5c0f\u503c\n\n\u5982\u679c\u4e0d\u8003\u8651L[i] \u7684\u9650\u5236\uff1a\n\n\u90a3\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u53ef\u6301\u4e45\u5316\u7684\u5355\u8c03\u961f\u5217\u7ef4\u62a4 \u6839\u8282\u70b9\u5230\u5f53\u524d\u70b9\u7684\u8def\u5f84\u4e0a\u6240\u6709\u7684\u70b9\u6784\u6210\u7684\u4e0b\u51f8\u58f3\n\n\n\u8003\u8651\u5982\u4f55\u53bb\u9664\u5144\u5f1f\u8282\u70b9\u7684\u5b50\u6811\u5bf9\u5355\u8c03\u961f\u5217\u7684\u5f71\u54cd\n\n\n\u5373\u5728\u4e00\u4e2a\u8282\u70b9\u9000\u51fadfs\u65f6\uff0c\u5c06\u5355\u8c03\u961f\u5217\u6062\u590d\u4e3a\u8fd9\u4e2a\u8282\u70b9\u5f00\u59cbdfs\u7684\u60c5\u51b5\n\n\u5934\u6307\u9488\uff1a\u5934\u6307\u9488\u7684\u524d\u79fb\u4e0d\u4f1a\u6d89\u53ca\u5355\u8c03\u961f\u5217\u5143\u7d20\u7684\u4fee\u6539\uff0c\u56e0\u4e3a\u4ece\u6839\u5f80\u4e0b\u8d70\u4e0d\u80fd\u4fdd\u8bc1\u659c\u7387\u5355\u8c03\uff0c\u6240\u4ee5\u5934\u6307\u9488\u4e0d\u80fd\u51fa\u961f\uff0c\u9700\u8981\u4e8c\u5206\u627e\u5230\u6700\u5c0f\u7684 \u659c\u7387>P[i] \u7684\u70b9\u6765\u66f4\u65b0dp[i]\n\n\u5c3e\u6307\u9488\uff1a\u5c3e\u6307\u9488\u7684\u524d\u79fb\u4f1a\u6d89\u53ca\u5230\u5355\u8c03\u961f\u5217\u5143\u7d20\u7684\u66ff\u6362\uff0c\u4f46\u66ff\u6362\u53ea\u4f1a\u66ff\u6362\u4e00\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u8bb0\u5f55\u4e0b \u66ff\u6362\u7684\u662f\u8c01\uff0c\u539f\u6765\u7684\u5c3e\u6307\u9488\u662f\u8c01\uff0c\u9000\u51fa\u7684\u65f6\u5019\u6062\u590d\u5373\u53ef\n\n\u52a0\u4e0aL[i]\u7684\u9650\u5236\uff1a\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u82e5\u7ebf\u6bb5\u6811\u8282\u70b9\u7684\u533a\u95f4\u4e3a[l,r]\uff0c\u90a3\u8fd9\u4e2a\u8282\u70b9\u7ef4\u62a4\u7684\u662f\u5f53\u524d\u94fe\u4e0a  \u6df1\u5ea6\u4e3a[l,r]\u7684\u70b9\u6784\u6210\u7684\u51f8\u5305\n\n\u5373\u7531\u539f\u6765\u7684\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u53d8\u6210\u7ef4\u62a4nlogn\u4e2a\u5355\u8c03\u961f\u5217\n\n\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e00\u4e2avector\uff1f \u5149\u5f00nlogn\u4e2avector\u5c31TLE\u4e86\u5427\n\n\u5f00\u4e00\u4e2anlogn\u7684\u6570\u7ec4v\u5b58\u50a8\u6574\u6761\u94fe\u4e0a\u51f8\u5305\u5185\u7684\u70b9\n\n\u5728\u5efa\u6811\u7684\u65f6\u5019\uff0c\u6309\u8282\u70b9\u7684\u987a\u5e8f\u7ed9\u5934\u6307\u9488\u5206\u4e00\u4e2a\u4f4d\u7f6ex\uff0c\u82e5\u8282\u70b9\u7684\u5927\u5c0f\u4e3ay\uff0c\n\n\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7ef4\u62a4\u7684\u5355\u8c03\u961f\u5217 \u4e2d\u7684\u70b9\u4f1a\u51fa\u73b0\u5728v\u6570\u7ec4\u7684[x,x+y-1]\u4f4d\u7f6e\n\n\u8fd9\u6837\u7ebf\u6bb5\u6811\u5185\u53ea\u9700\u8981\u5b58\u50a8\u5355\u8c03\u961f\u5217\u7684\u5934\u5c3e\u6307\u9488\u5373\u53ef\n\n```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\n#define N 200001\n\ntypedef long long LL;\n\nint n;\nint P[N];\nLL Q[N],L[N];\n\nint front[N],to[N],nxt[N],tot;\nLL val[N];\n\nstruct node\n{\n\tint head,tail;\n}tr[N<<2];\nint v[N*19];\n\nint sum;\n\nLL dep[N],dis[N];\nLL dp[N];\n\nint re_t[N][19],re_w[N][19];\n\ntemplate<typename T>\nvoid read(T &x)\n{\n\tx=0; char c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)) { x=x*10+c-'0'; c=getchar(); }\n}\n\nvoid add(int u,int v,LL w)\n{\n\tto[++tot]=v; nxt[tot]=front[u]; front[u]=tot; val[tot]=w;\n}\n\nvoid build(int k,int l,int r)\n{\n\ttr[k].head=sum+1;\n\ttr[k].tail=tr[k].head;\n\tsum+=r-l+1;\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tbuild(k<<1,l,mid);\n\tbuild(k<<1|1,mid+1,r);\n}\n\ninline double slope(int i,int j)\n{\n\treturn 1.0*(dp[j]-dp[i])/(dis[j]-dis[i]);\n}\n\nint find_ans(int k,int p)\n{\n\tint l=tr[k].head;\n\tint r=tr[k].tail-1;\n\tif(l==r) return v[l];\n\tr--;\n\tint mid,tmp=-1;\n\twhile(l<=r)\n\t{\n\t\tmid=l+r>>1;\n\t\tif(p<slope(v[mid],v[mid+1])) tmp=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tif(tmp==-1) return v[tr[k].tail-1];\n\treturn v[tmp];\n}\t\n\nint query(int k,int l,int r,int opl,int opr,int p)\n{\n\tif(l>=opl && r<=opr) return find_ans(k,p);\n\tint mid=l+r>>1;\n\tif(opr<=mid) return query(k<<1,l,mid,opl,opr,p);\n\telse if(opl>mid) return query(k<<1|1,mid+1,r,opl,opr,p);\n\telse\n\t{\n\t\tint t1=query(k<<1,l,mid,opl,opr,p);\n\t\tint t2=query(k<<1|1,mid+1,r,opl,opr,p);\n\t\tif(p<slope(t1,t2)) return t1;\n\t\treturn t2;\n\t}\n}\t\n\nint find(int r,LL lim)\n{\n\tint l=1;\n\tint tmp,mid;\n\twhile(l<=r)\n\t{\n\t\tmid=l+r>>1;\n\t\tif(dep[mid]>=lim) tmp=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\treturn tmp;\n}\n\nint in_queue(int k,int j)\n{\n\tif(tr[k].head==tr[k].tail) return tr[k].head;\n\tint l=tr[k].head,r=tr[k].tail-2,tmp=-1,mid;\n\twhile(l<=r)\n\t{\n\t\tmid=l+r>>1;\n\t\tif(slope(v[mid],v[mid+1])>slope(v[mid],j)) tmp=mid+1,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tif(tmp==-1) return tr[k].tail;\n\treturn tmp;\n}\n\nvoid insert(int k,int l,int r,int x,int w,int d)\n{\n\tint pos=in_queue(k,w);\n\tre_t[w][d]=tr[k].tail;\n\tre_w[w][d]=v[pos];\n\tv[pos]=w;\n\ttr[k].tail=pos+1;\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tif(x<=mid) insert(k<<1,l,mid,x,w,d+1);\n\telse insert(k<<1|1,mid+1,r,x,w,d+1);\n}\n\nvoid del(int k,int l,int r,int x,int w,int d)\n{\n\tv[tr[k].tail-1]=re_w[w][d];\n\ttr[k].tail=re_t[w][d];\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tif(x<=mid) del(k<<1,l,mid,x,w,d+1);\n\telse del(k<<1|1,mid+1,r,x,w,d+1);\n}\n\nvoid dfs(int x,int d)\n{\n\tif(x!=1)\n\t{\n\t\tLL lim=dis[x]-L[x];\n\t\tint j=query(1,1,n,find(d-1,lim),d-1,P[x]);\t\n\t\tdp[x]=(dis[x]-dis[j])*P[x]+Q[x]+dp[j];\n\t}\n\tinsert(1,1,n,d,x,1);\n\tfor(int i=front[x];i;i=nxt[i])\n\t{\n\t\tdis[to[i]]=dis[x]+val[i];\n\t\tdep[d+1]=dep[d]+val[i];\n\t\tdfs(to[i],d+1);\n\t}\n\tdel(1,1,n,d,x,1);\n}\n\nint main()\n{\n\tint t;\n\tread(n); read(t);\n\tint f; LL s;\n\tfor(int i=2;i<=n;++i)\n\t{\n\t\tread(f); read(s); read(P[i]); read(Q[i]); read(L[i]);\n\t\tadd(f,i,s);\n\t}\n\tsum=0; build(1,1,n);\n\tinsert(1,1,n,1,1,1);\n\tdfs(1,1);\n\tfor(int i=2;i<=n;++i) cout<<dp[i]<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1519551615,
        "uid": 21351,
        "name": "xuxinyu",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2305 \u3010[NOI2014]\u8d2d\u7968 \u3011"
    },
    {
        "content": "\u8003\u8651\u6811\u5f62 dp\uff0c\u8bbe $dp_i$ \u4e3a $i$ \u8282\u70b9\u5230 SZ \u5e02\u7684\u6700\u5c0f\u8d39\u7528\uff0c$dis_i$ \u4e3a SZ \u5e02\u5230 $i$ \u8282\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u663e\u7136\u521d\u59cb\u5316 $dp_1=0$\uff0c\u7136\u540e $dis_i$ \u53ef\u4ee5\u63d0\u524d\u9884\u5904\u7406\u51fa\u6765\u3002\n\n\u7136\u540e\u6709 $dp_u=\\min(dp_v+(dis_u-dis_v)\\times p_u+q_u)$\u3002\uff08$v$ \u4e3a $u$ \u7684\u7956\u5148\uff0c$dis_u-dis_v\\leq l_u$\uff09\u3002\n\n\u62c6\u5f00\u6765\uff1a$dp_u=dis_u\\times p_u+q_u+\\min(-dis_v\\times p_u+dp_v)$\u3002\n\n\u53d1\u73b0\u62c6\u51fa\u6765\u8ddf $v$ \u6709\u5173\u7cfb\u7684\u53ea\u6709 $-dis_v\\times p_u+dp_v$\u3002\n\n\u7136\u540e\u770b\u5230\u8fd9\u4e2a\u4e1c\u897f\u5c31\u8054\u60f3\u5230\u659c\u7387\u4f18\u5316\u3002\n\n\u90a3\u4e48\u601d\u8def\u5c31\u663e\u800c\u6613\u89c1\u4e86\uff1a\u5148\u5bf9\u539f\u6811\u8fdb\u884c\u6811\u5256\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $i$ \u7ef4\u62a4\u4e00\u6761\u76f4\u7ebf $f_i(x)=-dis_i\\times x+dp_i$\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e9b\u76f4\u7ebf\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u5f00\u4e00\u4e2a ```vector```\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bc1\u660e\u7ebf\u6bb5\u6811\u603b\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n)$\uff0c\u56e0\u4e3a\u6bcf\u4e00\u5c42\u53ea\u6709 $n$ \u6761\u76f4\u7ebf\uff0c\u4e00\u5171\u6709 $\\log n$ \u5c42\u3002\n\n\u7136\u540e\u8981\u4e0d\u65ad\u63d2\u5165\u4e00\u4e9b\u76f4\u7ebf\uff0c\u518d\u7528\u7c7b\u4f3c\u534a\u5e73\u9762\u4ea4\u7684\u65b9\u6cd5\u7ef4\u62a4\u4e0b\u51f8\u58f3\u3002\n\n\u81f3\u4e8e $l$ \u7684\u9650\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u7528\u500d\u589e\u6c42\u51fa\u6765\u6bcf\u4e00\u4e2a\u70b9\u6700\u8fdc\u80fd\u8df3\u5230\u54ea\u4e2a\u70b9\u3002\n\n\u987a\u4fbf\u518d\u63a8\u8350\u4e00\u9053\u7c7b\u4f3c\u7684\u597d\u9898\uff1a\u9676\u9676\u7684\u96be\u98982\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u6709\u8be6\u7ec6\u6ce8\u91ca\uff09\n\n```cpp\n#include<bits/stdc++.h>\n\n#define LN 18\n#define N 200010\n#define ll long long\n#define INF 0x7fffffffffffffff\n\nusing namespace std;\n\nstruct Point\n{\n\tdouble x,y;\n\tPoint(){};\n\tPoint(double xx,double yy){x=xx,y=yy;}\n};\n\nstruct Line\n{\n\tll k,b;//\u76f4\u7ebf\u7684\u659c\u7387\u3001\u622a\u8ddd\n\tLine(){};\n\tLine(ll kk,ll bb){k=kk,b=bb;}\n\tll get(ll x)\n\t{\n\t\treturn k*x+b;\n\t}\n};\n\nPoint intersection(Line a,Line b)//\u4e24\u76f4\u7ebf\u6c42\u4ea4\u70b9\n{\n\tdouble x=1.0*(b.b-a.b)/(a.k-b.k);\n\tdouble y=1.0*a.k*x+a.b;\n\treturn Point(x,y);\n}\n\nbool onright(Point a,Line l)//\u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u8fd9\u6761\u76f4\u7ebf\u7684\u4e0a\u65b9\n{\n\treturn 1.0*l.k*a.x-a.y+l.b<=0;\n}\n\nint n,subtask;\nint cnt,head[N],nxt[N],to[N];\nint tot,size[N],d[N],son[N],id[N],rk[N],top[N],farest[N];\nint fa[N][LN];\nll p[N],q[N],limit[N],dis[N],w[N],dp[N],sum[N][LN];//\u6709\u5f88\u591a\u5730\u65b9\u8981\u5f00long long\uff0c\u6ce8\u610f\n\nvector<Line>line[N<<2];\n\nvoid adde(int u,int v,ll wi)\n{\n\tto[++cnt]=v;\n\tw[cnt]=wi;\n\tnxt[cnt]=head[u];\n\thead[u]=cnt;\n}\n\nvoid dfs(int u)\n{\n\tsize[u]=1;\n\tfor(int i=1;i<=17;i++)\n\t{\n\t\tfa[u][i]=fa[fa[u][i-1]][i-1];\n\t\tsum[u][i]=sum[u][i-1]+sum[fa[u][i-1]][i-1];\n\t}\n\tint now=u;\n\tfor(int i=17;i>=0;i--)//\u500d\u589e\u9884\u5904\u7406\u6700\u8fdc\u80fd\u8df3\u5230\u54ea\u4e2a\u70b9\n\t{\n\t\tif(fa[now][i]&&limit[u]>=sum[now][i])\n\t\t{\n\t\t\tlimit[u]-=sum[now][i];\n\t\t\tnow=fa[now][i];\n\t\t}\n\t}\n\tfarest[u]=now;\n\tfor(int i=head[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n        d[v]=d[u]+1;\n\t\tdis[v]=dis[u]+w[i];\n\t\tsum[v][0]=w[i];\n\t\tdfs(v);\n\t\tsize[u]+=size[v];\n\t\tif(size[v]>size[son[u]]) son[u]=v;\n\t}\n}\n\nvoid dfs1(int u,int tp)\n{\n\ttop[u]=tp;\n\tid[u]=++tot;\n\trk[tot]=u;\n\tif(son[u]) dfs1(son[u],tp);\n\tfor(int i=head[u];i;i=nxt[i])\n\t\tif(to[i]!=son[u])\n\t\t\tdfs1(to[i],to[i]);\n}\n\nvoid half(int k,Line tmp)//\u63d2\u5165\u65b0\u76f4\u7ebf\n{\n\tint size=line[k].size();\n\twhile(size>=2&&onright(intersection(line[k][size-2],line[k][size-1]),tmp))//\u8bb0\u5f97\u52a0size>=2\n\t{\n\t\tsize--;\n\t\tline[k].pop_back();\n\t}\n\tline[k].push_back(tmp);\n}\n\nvoid insert(int k,int l,int r,int qx,Line tmp)\n{\n\thalf(k,tmp);\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tif(qx<=mid) insert(k<<1,l,mid,qx,tmp);\n\telse insert(k<<1|1,mid+1,r,qx,tmp);\n}\n\nll query(int k,int l,int r,int ql,int qr,ll x)\n{\n\tif(ql<=l&&r<=qr)\n\t{\n\t\tint siz=line[k].size()-1,L=0,R=siz,ans;\n\t\twhile(L<=R)//\u4e8c\u5206\u679a\u4e3ex\u5728\u54ea\u6761\u76f4\u7ebf\u4e0a\n\t\t{\n\t\t\tint mid=(L+R)>>1;\n\t\t\tdouble lp=mid>0?intersection(line[k][mid-1],line[k][mid]).x:-INF;//\u7b97\u51fa\u76f4\u7ebfmid\u4e0e\u76f4\u7ebfmid-1\u7684\u4ea4\u70b9\n\t\t\tdouble rp=mid<siz?intersection(line[k][mid],line[k][mid+1]).x:INF;//\u7b97\u51fa\u76f4\u7ebfmid\u4e0e\u76f4\u7ebfmid+1\u7684\u4ea4\u70b9\n\t\t\tif(lp<=x&&x<=rp)\n\t\t\t{\n\t\t\t\tans=mid;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(x<lp) R=mid-1;\n\t\t\telse L=mid+1;\n\t\t}\n\t\treturn line[k][ans].get(x);//\u5c06x\u4ee3\u5165\u5f97\u5230y\u503c\n\t}\n\tint mid=(l+r)>>1;\n\tll ans=INF;\n\tif(ql<=mid) ans=min(ans,query(k<<1,l,mid,ql,qr,x));\n\tif(qr>mid) ans=min(ans,query(k<<1|1,mid+1,r,ql,qr,x));\n\treturn ans;\n}\n\nvoid solve(int u)\n{\n\tinsert(1,1,n,id[u],Line(-dis[u],dp[u]));//\u5c06\u76f4\u7ebf\u63d2\u5165\u7ebf\u6bb5\u6811\u5185\n\tfor(int i=head[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i],a=u,b=farest[v];\n\t\tll ans=INF;\n\t\twhile(top[a]!=top[b])//\u6811\u5256\u6c42dp\n\t\t{\n\t\t\tans=min(ans,query(1,1,n,id[top[a]],id[a],p[v]));\n\t\t\ta=fa[top[a]][0];\n\t\t}\n\t\tans=min(ans,query(1,1,n,id[b],id[a],p[v]));\n\t\tdp[v]=ans+dis[v]*p[v]+q[v];\n\t\tsolve(v);\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&subtask);\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tll w;\n\t\tscanf(\"%d%lld%lld%lld%lld\",&fa[i][0],&w,&p[i],&q[i],&limit[i]);\n\t\tadde(fa[i][0],i,w);\n\t}\n\tdfs(1);\n\tdfs1(1,1);\n\tsolve(1);\n\tfor(int i=2;i<=n;i++)\n\t\tprintf(\"%lld\\n\",dp[i]);\n\treturn 0;\n}\n```",
        "postTime": 1595138047,
        "uid": 118318,
        "name": "ez_lcw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2305 \u3010[NOI2014]\u8d2d\u7968\u3011"
    },
    {
        "content": "[P2305 [NOI2014]\u8d2d\u7968](https://www.luogu.com.cn/problem/P2305)  \n\n\u53ef\u4ee5\u7b80\u5355\u7684\u5217\u51fa$dp$\u65b9\u7a0b\uff1a  \n\u8bbe$f_u$\u4e3a\u4ece$u$\u70b9\u5230$1$\u53f7\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\u3002 \n\n$f_u=f_t+p_u*(dep[u]-dep[t])+q_u$\u3002  \n\n\u5f88\u660e\u663e\u662f\u659c\u7387\u4f18\u5316\uff0c\u4f46\u662f\u6709\u9650\u5236$l_u$\u7684\u9650\u5236\u3002  \n\n\u56e0\u4e3a$l_u$\u4e0d\u5355\u8c03\uff0c\u80af\u5b9a\u4e0d\u80fd\u7528\u5355\u8c03\u961f\u5217\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5\u5728\u4e0a\u9762\u4e8c\u5206\uff0c\u5176\u4ed6\u7684\u9898\u89e3\u4e5f\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\u3002  \n\n\u5199\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u662f\u4e3a\u4e86\u8bf4\u660e\u8fd9\u6837\u4e00\u4e2a\u5730\u65b9\uff1a\u518d\u7528\u6570\u636e\u7ed3\u6784\uff08\u7ebf\u6bb5\u6811/\u6811\u72b6\u6570\u7ec4\uff09\u7ef4\u62a4\u533a\u95f4\u51f8\u5305\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u76f4\u63a5\u66b4\u529b\u63d2\u5165\u3002\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u90fd\u53ef\u4ee5\u628a\u524d\u9762\u7684\u6240\u6709\u70b9\u90fd\u5220\u6389\u3002\u6bcf\u6b21\u63d2\u5165\u7684\u6700\u9ad8\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n)$\u7684(\u53ef\u4ee5\u7528\u957f\u94fe\u52a0\u83ca\u82b1\u56fe\u5361\u6389)\u3002    \n\n\u4f46\u662f\u8fd9\u9898\u5e76\u6ca1\u6709\u5361\uff0c\u6240\u4ee5\u66b4\u529b\u63d2\u5165\u7684\u4e5f\u53ef\u4ee5\u8fc7\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u4e0d\u5bf9\u3002  \n\n\u5728\u4ee3\u7801\u4e0a\u6765\u8bf4\uff0c\u5c31\u662f\u4e0d\u53ef\u4ee5\u8fd9\u6837\uff1a  \n\u4e0b\u9762\u7684$t[x]$\u8868\u793a$x$\u7ef4\u62a4\u533a\u95f4\u7684\u51f8\u5305\uff08\u4e0b\u6807\u4ece$0$\u5f00\u59cb\uff09\uff0c$siz[x]$\u8868\u793a$x$\u51f8\u5305\u7684\u5b9e\u9645\u70b9\u6570\u3002\n```cpp\nwhile(siz[x]>1 && xielv(t[x][siz[x]-2],t[x][siz[x]-1])>xielv(t[x][siz[x]-1],u))siz[x]--;\n```  \n\u8981\u7528\u4e8c\u5206\u6216\u8005\u500d\u589e\u63d2\u5165\u3002  \n\n\u4e5f\u5c31\u662f\u8fd9\u6837\uff1a  \n\n```cpp\nint l=0,r=siz[x];\nwhile(l<r)\n{\n\tint mid=l+r>>1;\n\tif(mid>0 && xielv(t[x][mid],u)<xielv(t[x][mid-1],t[x][mid]))r=mid;\n\telse l = mid+1;\n}\n```\n\u4ee3\u7801\u592a\u4e11\u5c31\u4e0d\u653e\u4e86\uff0c\u60f3\u8981\u9a8c\u8bc1\u81ea\u5df1\u65f6\u95f4\u590d\u6742\u5ea6\u7684\uff0cuoj\u4e0a\u4e5f\u6709hack\u6570\u636e\u3002\n\n",
        "postTime": 1606439256,
        "uid": 13197,
        "name": "zhendelan",
        "ccfLevel": 7,
        "title": "P2305 [NOI2014]\u8d2d\u7968"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u4f53\u73b0\u4e86OI\u9898\u7684\u5f88\u591a\u9898\u7684\u51fa\u9898\u601d\u8def\uff0c\u4e00\u4e2a\u95ee\u9898\u53ef\u4ee5\u5728\u5e8f\u5217\u8f7b\u677e\u89e3\u51b3\uff0c\u5c31\u628a\u5b83\u62ff\u5230\u6811\u4e0a\u6765\u51fa\u9898\u3002\n\n\u8fd9\u9898\u6240\u6709\u6570\u636e\u70b9\u90fd\u9700\u8981\u5f00long long\uff0c\u8981\u4e0d\u7136\u8bfb\u5165\u5c31\u8dea\u4e86\u3002\n\n\u7b97\u6cd5\u4e00\uff1a\u5bf9\u4e8e1-3\u4e2a\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529bdp\u7684\u53bb\u505a\uff0c\u6c42\u6bcf\u4e2a\u70b9\u7684dp\u503c\u65f6\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u4ed6\u7684\u7956\u5148\u53bb\u66f4\u65b0\uff0c\u590d\u6742\u5ea6O($n ^ 2$)\uff0c\u671f\u671b\u5f97\u520630\u5206\uff0c\u9002\u5408\u4e8e\u8003\u8bd5\u7684\u65f6\u5019\u5b9e\u5728\u6ca1\u6709\u65f6\u95f4\u7684\u65f6\u5019\u53bb\u5199\uff0c\u6216\u8005\u7528\u4f5c\u5bf9\u62cd\u7684\u66b4\u529b\u3002\n\n\u7b97\u6cd5\u4e8c\uff1a\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u662f\u4e00\u4e2a$1D/1D$\u7684dp,\u89c2\u5bdf\u5f0f\u5b50\u53d1\u73b0\u53ef\u4ee5\u659c\u7387\u4f18\u5316\u3002\n\n$t = 0 / t = 2$\u65f6\uff0c\u8fd9\u662f\u4e00\u4e2a\u5e8f\u5217\u4e0a\u7684\u95ee\u9898\uff0c\u800c\u5f53$t = 0$\u65f6\u662f\u4e00\u4e2a\u659c\u7387\u4f18\u5316\u677f\u5b50\u9898\u3002\n\n$t =  2$\u65f6, \u8fd9\u4e2a$l[i]$\u7684\u9650\u5236\uff0c\u5c31\u611f\u89c9\u6709\u70b9\u50cf\u5355\u8c03\u961f\u5217\u4f18\u5316\u548c\u659c\u7387\u4f18\u5316\u7684\u7ed3\u5408\u4f53\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u79bb\u6563\u5316\u52a0\u674e\u8d85\u7ebf\u6bb5\u6811\u6216\u8005\u7ebf\u6bb5\u6811\u7ef4\u62a4\u51f8\u5305\u89e3\u51b3\uff0c\u590d\u6742\u5ea6O($n\\log ^ 2n$)\u3002\n\n\u7b97\u6cd5\u4e8c\u7ed3\u5408\u7b97\u6cd5\u4e00\u671f\u671b\u5f97\u520650\u5206\u3002\n\n\u7b97\u6cd5\u4e09\uff1a\u5982\u679c\u53ea\u60f3\u5230\u4e86\u674e\u8d85\u7ebf\u6bb5\u6811\uff0c\u5e8f\u5217\u4e0a\u95ee\u9898\u867d\u7136\u53ef\u4ee5\u89e3\u51b3\uff0c\u4f46\u662f\u62ff\u5230\u6811\u4e0a\uff0c\u53ef\u80fd\u5c31\u9700\u8981\u53ef\u6301\u4e45\u5316\u4e86\u3002\u6211\u4e2a\u4eba\u5e76\u4e0d\u77e5\u9053\u5982\u4f55\u53ef\u6301\u4e45\u5316\u7684\u674e\u8d85\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u8fd8\u662f\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u51f8\u5305\u89e3\u51b3\u3002\n\n\u5bf9\u4e8e$t = 1$\u7684\u70b9\uff0c\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u66f4\u65b0\u4ed6\u5b50\u6811\u5185\u7684\u70b9\uff0c\u5bf9\u6811\u8fdb\u884c\u6811\u5256\uff0c\u5904\u7406\u5b8c\u67d0\u4e2a\u70b9\u540e\uff0c\u5bf9\u5b83\u5b50\u6811\u5185\u7684\u70b9\u7ef4\u62a4\u7684\u51f8\u5305\u91cc\u63d2\u5165\u8fd9\u4e2a\u70b9\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6O($n\\log n$)\uff0c\u7ed3\u5408\u4e0a\u8ff0\u7b97\u6cd5\u671f\u671b\u5f97\u520680\u5206\u3002\n\n\u7b97\u6cd5\u56db\uff1a\u6211\u4eec\u4e4b\u524d\u7684\u601d\u8def\uff0c\u5927\u591a\u6570\u662f\u7528\u7956\u5148\u53bb\u66f4\u65b0\u540e\u4ee3\uff0c\u4e0d\u8fc7\u56e0\u4e3a\u6709\u4e86$l[i]$\u8fd9\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u5bf9\u4e4b\u540e\u7684\u70b9\u7684\u8d21\u732e\u533a\u95f4\u5c31\u5f88\u96be\u52a0\u4ee5\u8ba1\u7b97\u4e86\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u6811\u4e0a\u5f88\u5e38\u89c1\u7684\u6280\u5de7\uff0c\u4e00\u4e2a\u70b9\u5411\u4e0b\u8d70L\u6df1\u5ea6\u7684\u94fe\u6709\u5f88\u591a\uff0c\u5411\u4e0a\u8d70L\u6df1\u5ea6\u7684\u94fe\u53ea\u6709\u4e00\u4e2a\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u70b9\u53bb\u627e\u7956\u5148\u8981\u8d21\u732e\u4ee3\u66ff\u7956\u5148\u53bb\u66f4\u65b0\u540e\u4ee3\u3002\u7528\u6811\u5256+\u7ebf\u6bb5\u6811\u7ef4\u62a4\u51f8\u5305\u5373\u53ef\u5b9e\u73b0\u3002\u590d\u6742\u5ea6O($n\\log ^3n$)\uff0c\u671f\u671b\u5f97\u5206100\u5206\u3002\n\n\u7b97\u6cd5\u56db\u8fd9\u4e2a\u65b9\u6cd5\u57282014\u5e74\u4f30\u8ba1\u662f\u8fc7\u4e0d\u53bb\u7684\uff0c\u56e0\u4e3a\u90a3\u4e2a\u65f6\u5019\u7684\u673a\u5668\u8dd1\u5f97\u5f88\u6162\uff0c\u4e0d\u8fc7\u5728\u4eca\u5929\u53ea\u8981\u4f60\u5e38\u6570\u6b63\u5e38\uff0c\u5c31\u80fd\u901a\u8fc7\u3002\n\n\u5341\u5206\u597d\u5199\uff0c\u6ca1\u6709\u4efb\u4f55\u7ec6\u8282\uff0c\u627e\u7956\u5148\u66f4\u65b0\u7684\u65f6\u5019\u9700\u8981\u500d\u589e\u4e00\u4e0b\u4f30\u8ba1\u4e5f\u4e0d\u662f\u4ec0\u4e48\u96be\u70b9\u3002\n\n\u987a\u9053\u8bf4\u4e00\u4e0b\uff0c\u6709\u4e00\u7bc7\u9898\u89e3\u8ba4\u4e3a\uff0c\u4e00\u4e2a\u7ebf\u6bb5\u6811\u533a\u95f4\u5982\u679c\u7ef4\u62a4\u4e0d\u662f\u4e00\u6761\u94fe\u5c31\u4e0d\u80fd\u63d2\u5165\u70b9\u3002\u8fd9\u4e2a\u65f6\u5019\u4e0d\u63d2\u5165\u80af\u5b9a\u6ca1\u6709\u95ee\u9898\uff0c\u4e0d\u8fc7\u4f60\u63d2\u5165\u4e86\uff0c\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u67e5\u8be2\u8fd9\u4e2a\u533a\u95f4\u3002\u66b4\u529b\u63d2\u5165\uff0c\u80fd\u66f4\u597d\u5199\u4e00\u4e9b\uff0c\u53ef\u80fd\u5e38\u6570\u56e0\u6b64\u7565\u5927\u4e00\u4e9b\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 200005\n#define maxt 800005\n#define int long long\n#define inf 2003518617518617ll\n#define Fol(i, j, n) for(register int i = j ; i >= n ; --i)\n#define For(i, j, n) for(register int i = j ; i <= n ; ++i)\nint n, t, tot, l[maxn], p[maxn], q[maxn], w[maxn], dp[maxn]; \nint fa[maxn], dep[maxn], dfn[maxn], siz[maxn], top[maxn], mson[maxn], up[maxn][22];\nvector<int>E[maxn];\nstruct Point{\n\tint x, y;\n\tPoint(int xx = 0, int yy = 0){ x = xx, y = yy; }\n};\nvector<Point>c[maxt];\n//\u7ebf\u6bb5\u6811\u7ef4\u62a4\u51f8\u5305 \n#define ls x << 1\n#define rs x << 1 | 1\n#define mid (l + r >> 1)\ninline double K(Point a, Point b){ return (double)(b.y - a.y) / (b.x - a.x); }\ninline int Query(int x, int ll, int rr, int k){\n\tint l = 0, r = (int)c[x].size() - 2, ans = c[x][r + 1].x * k + c[x][r + 1].y;\n\twhile(l <= r){\n\t\tans = min(ans, c[x][mid].x * k + c[x][mid].y);\n\t\tif(K(c[x][mid], c[x][mid + 1]) <= k) l = mid + 1;\n\t\telse r = mid - 1;\n\t}\n\treturn ans;\n}\ninline int query(int x, int l, int r, int ql, int qr, int k){\n\tif(ql <= l && r <= qr) return Query(x, l, r, k); \n\tint sum = inf;\n\tif(ql <= mid) sum = min(sum, query(ls, l, mid, ql, qr, k));\n\tif(qr > mid) sum = min(sum, query(rs, mid + 1, r, ql, qr, k));\n\treturn sum;\n}\ninline void add(int x, int l, int r, Point y){\n\tfor( ; c[x].size() > 1 ; c[x].pop_back()){\n\t\tint n = (int)c[x].size() - 1;\n\t\tPoint a = c[x][n], b = c[x][n - 1];\n\t\tif(K(b, y) > K(b, a)) break;\n\t}\n\tc[x].push_back(y); \n}\ninline void insert(int x, int l, int r, int pos, Point y){\n\tadd(x, l, r, y);\n\tif(l == r) return ;\n\tpos <= mid ? insert(ls, l, mid, pos, y) : insert(rs, mid + 1, r, pos, y);\n}\n//\u6811\u5256 \ninline void dfs(int x){\n\tsiz[x] = 1, dep[x] = dep[fa[x]] + w[x], up[x][0] = fa[x];\n\tFor(i, 1, 20) up[x][i] = up[up[x][i - 1]][i - 1]; \n\tfor(auto i : E[x]){\n\t\tif(siz[i]) continue;\n\t\tdfs(i), siz[x] += siz[i];\n\t\tif(siz[i] > siz[mson[x]]) mson[x] = i;\n\t}\t\n}\ninline void dfs(int x, int tp){\n\ttop[x] = tp, dfn[x] = ++tot;\n\tif(mson[x]) dfs(mson[x], tp);\n\tfor(auto i : E[x]) if(!dfn[i]) dfs(i, i);\n}\n// dp \ninline int query(int x, int L){\n\tFol(i, 20, 0) if(dep[up[x][i]] >= L) x = up[x][i];\n\treturn x;\n}\ninline int Query(int x, int y, int k){\n\tint ans = inf;\n\twhile(top[x] ^ top[y]) ans = min(ans, query(1, 1, n, dfn[top[x]], dfn[x], k)), x = fa[top[x]];\n\treturn min(ans, query(1, 1, n, dfn[y], dfn[x], k));\n}\ninline void solve(int x){\n\tif(x ^ 1) dp[x] = Query(fa[x], query(x, dep[x] - l[x]), -p[x]) + dep[x] * p[x] + q[x];\n\tinsert(1, 1, n, dfn[x], Point(dep[x], dp[x]));\n\tfor(auto i : E[x]) solve(i);\n}\n//\u4e3b\u51fd\u6570 \nsigned main(){\n\tscanf(\"%lld %lld\", &n, &t);\n\tFor(i, 2, n) scanf(\"%lld %lld %lld %lld %lld\", &fa[i], &w[i], &p[i], &q[i], &l[i]), E[fa[i]].push_back(i);\n\tdfs(1), dfs(1, 1), dep[0] = -inf, solve(1);\n\tFor(i, 2, n) printf(\"%lld\\n\", dp[i]); \n\treturn 0;\n} \n```",
        "postTime": 1586598057,
        "uid": 163980,
        "name": "\u884c\u541f\u5578\u4e5d\u5dde",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2305 \u3010[NOI2014]\u8d2d\u7968 \u3011"
    },
    {
        "content": "\u611f\u8c22$stO\\space i207M\\space Orz$\u795e\u7287\u6559\u6211\u7684\u5e26\u64a4\u9500\u4e8c\u8fdb\u5236\u5206\u7ec4\uff01\u8fd9\u91cc\u5177\u4f53\u8bb2\u4e00\u4e0b\u5982\u4f55\u5b9e\u73b0\u3002\n\n\u5c31\u662f\u8fd9\u9898\u4e00\u773c\u770b\u4e0a\u53bb\u662f\u4e2adp\u5bf9\u5427\uff0c\u6211\u4eec\u628adp\u5f0f\u5b50\u5199\u51fa\u6765\uff1a\n\n$dp[i]=min\\{dp[j]+q_i+p_i(deep_i-deep_j)\\}$\n\n\u7136\u540e\u8fd9\u73a9\u610f\u662f\u4e2a\u5178\u578b\u7684\u80fd\u659c\u7387\u4f18\u5316\u7684\u5f0f\u5b50\u5bf9\u5427\uff0c\u5c31\u662f\u8fd9\u6837\uff1a\n\n$dp[j]=p_ideep_j+(dp[i]-q_i-p_ideep_i)$\n\n\u4e8e\u662f\u6bcf\u4e2a\u51b3\u7b56\u70b9$j$\u90fd\u80fd\u8868\u793a\u4e3a\u4e00\u4e2a\u70b9$(dp[j],deep_j)$\uff0c\u6211\u4eec\u6bcf\u4e2a\u70b9\u7684\u51b3\u7b56\u533a\u95f4\u662f\u4ed6\u7238\u7238\u5230\u67d0\u4e2a\u7956\u5148\u7684\u4e00\u6761\u94fe\uff0c\u5bb9\u6613\u60f3\u5230\u6211\u4eec\u80fd\u5728dfs\u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u4e2a\u6808\u5b58\u4ed6\u5230\u7956\u5148\u7684\u4e00\u6761\u94fe\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6808\u4e0a\u7684\u51b3\u7b56\u533a\u95f4\u7ed9\u4ed6\u4e8c\u5206\u51fa\u6765\u3002\u7136\u540e\u6211\u4eec\u5728\u7eb8\u4e0a\u753b\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u4e0b\u51f8\u58f3\uff0c\u7136\u540e\u8981\u5728\u4e0b\u51f8\u58f3\u4e0a\u4e8c\u5206\u3002\n\n\u7136\u540e\u6211\u4eec\u8981\u6c42dp\uff0c\u90a3\u5c31\u8981\u628a\u5bf9\u5e94\u51b3\u7b56\u533a\u95f4\u91cc\u7684\u4e0b\u51f8\u58f3\u6c42\u51fa\u6765\uff0c\u4e5f\u5c31\u662f\u6808\u7684\u8fd9\u6bb5\u533a\u95f4\u3002\u6211\u4eecdfs\u7684\u65f6\u5019\u4e0d\u662f\u4e0d\u65ad\u5728\u6808\u4e0a\u8fdb\u884cpush\u3001pop\u70b9\u5417\uff1f\u90a3\u4e48\u54b1\u4eec\u5c31\u80fd\u628a\u6c42\u7b54\u6848\u7684\u8fc7\u7a0b\u8f6c\u5316\u4e3a\u8fd9\u4e2a\u5f62\u5f0f\uff1a\n\n1.\u5728\u5e8f\u5217\u6700\u540e\u63d2\u5165\u4e00\u4e2a\u70b9\u3002\n\n2.\u5220\u9664\u5e8f\u5217\u7ed3\u5c3e\u7684\u70b9\u3002\n\n3.\u6c42\u5e8f\u5217\u7684\u4e00\u6bb5\u533a\u95f4\u5185\u70b9\u6784\u6210\u7684\u7684\u51f8\u5305\u5e76\u5728\u8fd9\u4e2a\u51f8\u5305\u4e0a\u4e8c\u5206\u659c\u7387\u6c42\u7b54\u6848\uff0c\u5f3a\u5236\u5728\u7ebf\u3002\n\n\u5b9e\u9645\u4e0a\u5bf9\u4e8e\u90a3\u4e2a\u8be2\u95ee3\u6211\u4eec\u5e94\u8be5\u77e5\u9053\uff0c\u65e2\u7136\u662f\u6c42\u6700\u5927\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6c42\u7b54\u6848\u7684\u8fc7\u7a0b\u53ef\u4ee5\u770b\u505a\u662f\u4e92\u76f8\u72ec\u7acb\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5e76\u4e0d\u7528\u76f4\u63a5\u641e\u51fa\u6574\u4e2a\u8be2\u95ee\u533a\u95f4\u7684\u51f8\u5305\uff0c\u800c\u662f\u53ef\u4ee5\u62c6\u6210\u51e0\u6bb5\u533a\u95f4\u5206\u522b\u6c42\u51f8\u5305\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u6ca1\u6709pop\u7684\u65f6\u5019\u548b\u505a\uff0c\u54b1\u4eec\u662f\u4e0d\u65ad\u7684\u8fdb\u884c\u5f3a\u5236\u5728\u7ebf\u7684push\u7684\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u5b83\u8fdb\u884c**\u4e8c\u8fdb\u5236\u5206\u7ec4**\uff0c\u5c31\u662f\u6211\u4eec\u4e00\u5f00\u59cb\u6709\u4e00\u68f5\u5927\u5c0f\u4e3a$n$\u7684\u7a7a\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u6211\u4eec\u4e0d\u65ad\u7684\u5f80\u540e\u9762\u63d2\u5165\u70b9\uff0c\u5f53\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u8282\u70b9\u5df2\u7ecf\u63d2\u6ee1\u7684\u8bdd\u5c31\u5728\u8fd9\u4e2a\u4e0a\u9762\u8fdb\u884c\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u5206\u6cbb\u4e00\u6837\u7684\u66b4\u529b\uff0c\u628a\u8fd9\u6bb5\u533a\u95f4\u7684\u51f8\u5305$O(n)$\u6c42\u51fa\u5e76\u7528vector\u5b58\u5728\u8fd9\u4e2a\u8282\u70b9\u4e0a\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u5c31\u884c\u4e86\u3002\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u66b4\u529b\u603b\u5171\u53ea\u4f1a\u505a$O(nlogn)$\u6b21\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u662f$O(nlogn)$\u7684\u3002\n\n\u90a3\u4e48\u6709\u4e86pop\u5462\uff1f\u597d\u50cf\u76f4\u63a5\u8fd9\u4e48\u505a\u7684\u8bdd\u590d\u6742\u5ea6\u5c31\u4e0d\u5bf9\u4e86\uff0c\u56e0\u4e3a\u53ef\u80fd\u591a\u6b21\u8fdb\u884cpop\u548cpush\u7136\u540e\u4f1a\u88ab\u5361\u6210$O(n^2)$\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u628apush\u64cd\u4f5c\u6539\u4e00\u4e0b\uff1a\u6211\u4eec\u5e76\u4e0d\u628a\u6240\u6709\u6ee1\u7684\u8282\u70b9\u90fd\u66b4\u529b\u7ef4\u62a4\uff0c\u800c\u662f\u5bf9**\u6bcf\u4e00\u5c42**\u6211\u4eec\u4e0d\u7ef4\u62a4\u6700\u540e\u4e00\u4e2a\u6ee1\u4e86\u7684\u8282\u70b9\u3002\u6211\u4eec\u53d1\u73b0\u5982\u679c\u5220\u9664$2^k$\u6b21\u624d\u4f1a\u653e\u5f03\u6389\u4e00\u4e2a\u5927\u5c0f\u4e3a$2^k$\u7684\u8282\u70b9\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u5bf9\u4e86\u3002\u6ce8\u610f\u7279\u5224\u53f6\u5b50\u8282\u70b9\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u91cc\u6709\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u7ec6\u8282\uff0c\u4e8c\u8fdb\u5236\u5206\u7ec4\u5728\u7406\u8bba\u4e0a\u672c\u6765\u662f**\u4e24\u5757\u76f8\u540c\u5c31\u5408\u5e76**\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u7528\u521d\u59cb\u4e3a\u7a7a\u7684\u7ebf\u6bb5\u6811\u6765\u652f\u6301\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u4f46\u662f\u4e00\u822c\u7684\u7ebf\u6bb5\u6811\u7684\u4e24\u4e2a\u513f\u5b50\u7684\u5927\u5c0f\u53ef\u80fd\u4f1a\u76f8\u5dee1\uff0c\u8fd9\u5c31\u5bfc\u81f4\u6211\u4eec\u4f7f\u7528\u5206\u5c42\u7ef4\u62a4\u7684\u7b56\u7565\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u8ba9\u4e00\u4e2a\u53f6\u5b50\u548c\u975e\u53f6\u5b50\u5904\u4e8e\u540c\u4e00\u5c42\u5c31\u4f1a\u51fa\u9519\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u50cfFFT\u90a3\u6837\u5f00\u4e00\u4e2a\u5927\u5c0f\u4e3a2\u7684\u6574\u6b21\u5e42\u7684\u7ebf\u6bb5\u6811\u8fd9\u6837\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u65f6\u95f4\u590d\u6742\u5ea6$O(nlog^2n)$\uff0c\u4f46\u662f\u56e0\u4e3a\u90a3\u4e2a\u5e26\u5220\u9664\u7684\u4e8c\u8fdb\u5236\u5206\u7ec4\u7684\u5e38\u6570\u8f83\u5927\u6240\u4ee5\u8dd1\u7684\u751a\u81f3\u4e0d\u5982$O(nlog^3n)$\u7684\u6811\u5256\u5feb\u2026\u2026\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#define ll long long\nusing namespace std;\nnamespace ywy{\n\tinline ll get(){\n\t\tll n=0;char c;while((c=getchar())||23333){\n\t\t\tif(c>='0'&&c<='9')break;if(c=='-')goto s;\n\t\t}n=c-'0';while((c=getchar())||23333){\n\t\t\tif(c>='0'&&c<='9')n=n*10+c-'0';else return(n);\n\t\t}s:while((c=getchar())||23333){\n\t\t\tif(c>='0'&&c<='9')n=n*10-c+'0';else return(n);\n\t\t}\n\t}\n\ttypedef struct _b{\n\t\tint dest;int nxt;ll len;\n\t}bian;\n\tbian memchi[400001];\n\tint gn=1,heads[200001];\n\tll ps[200001],qs[200001],deep[200001];\n\tinline void add(int s,int t,ll l){\n\t\tmemchi[gn].dest=t;memchi[gn].len=l;memchi[gn].nxt=heads[s];heads[s]=gn;gn++;\n\t}\n\tint lef[800001],rgh[800001],size[800001],dep[800001],pid[800001];\n\tunsigned char bv[800001];\n\ttypedef struct _pt{\n\t\tll x;ll y;_pt(){x=0;y=0;}_pt(ll i,ll j){x=i;y=j;}\n\t}pt;\n\tvector<pt> tubao[800001];\n\tpt pts[200001],stk[200001];\n\tint dl[800001],dr[800001];\n\tinline void united(int tree){\n\t\tbv[tree]=1;tubao[tree].clear();\n\t\tregister int sp=0;for(register int i=dl[tree];i<=dr[tree];i++){\n\t\t\twhile(sp>1&&(double)(stk[sp-1].x-stk[sp-2].x)*(double)(pts[i].y-stk[sp-2].y)-(double)(stk[sp-1].y-stk[sp-2].y)*(double)(pts[i].x-stk[sp-2].x)<=0)sp--;\n\t\t\tstk[sp]=pts[i];sp++;\n\t\t}\n\t\tfor(register int i=0;i<sp;i++)tubao[tree].push_back(stk[i]);\n\t}\n\tint gnn=1;vector<int> trees[40];\n\tint build(int l,int r,int deep){\n\t\tint tree=gnn;gnn++;dep[tree]=deep;\n\t\tpid[tree]=trees[deep].size();\n\t\ttrees[deep].push_back(tree);\n\t\tdl[tree]=l;dr[tree]=r;\n\t\tif(l==r)return(tree);int mid=(l+r)>>1;\n\t\tlef[tree]=build(l,mid,deep+1);\n\t\trgh[tree]=build(mid+1,r,deep+1);return(tree);\n\t}\n\tvoid insert(int l,int r,int tree,int pos,pt num){\n\t\tsize[tree]++;if(l==r){\n\t\t\tbv[tree]=1;pts[l]=num;tubao[tree].clear();\n\t\t\ttubao[tree].push_back(num);return;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(pos<=mid)insert(l,mid,lef[tree],pos,num);\n\t\telse insert(mid+1,r,rgh[tree],pos,num);\n\t\tif(size[tree]==r-l+1){\n\t\t\tif(pid[tree])united(trees[dep[tree]][pid[tree]-1]);\n\t\t}\n\t}\n\tvoid del(int l,int r,int tree,int pos){\n\t\tsize[tree]--;if(l==r){\n\t\t\tbv[tree]=0;return;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(pos<=mid)del(l,mid,lef[tree],pos);\n\t\telse del(mid+1,r,rgh[tree],pos);\n\t\tif(size[tree]==r-l&&pid[tree]){\n\t\t\tbv[trees[dep[tree]][pid[tree]-1]]=0;\n\t\t}\n\t}\n\tll dp[200001]\uff1b \n\tll query(int rl,int rr,int l,int r,int tree,int pos){\n\t\tif(rl==l&&rr==r&&bv[tree]){\n\t\t\tint ans=tubao[tree].size()-1,_l=0,_r=tubao[tree].size()-2;\n\t\t\twhile(_l<=_r){\n\t\t\t\tint mid=(_l+_r)>>1;\n\t\t\t\tif(ps[pos]*(tubao[tree][mid+1].x-tubao[tree][mid].x)<tubao[tree][mid+1].y-tubao[tree][mid].y)ans=mid,_r=mid-1;else _l=mid+1;\n\t\t\t}\n\t\t\tif(ans<0)return(12345678909876543ll);\n\t\t\treturn(tubao[tree][ans].y-ps[pos]*tubao[tree][ans].x+qs[pos]+ps[pos]*deep[pos]);\n\t\t}\n\t\tif(l==r)return(12345678909076543ll)\uff1b \n\t\tint mid=(l+r)>>1;\n\t\tif(rl>mid)return(query(rl,rr,mid+1,r,rgh[tree],pos));\n\t\tif(rr<=mid)return(query(rl,rr,l,mid,lef[tree],pos));\n\t\treturn(min(query(rl,mid,l,mid,lef[tree],pos),query(mid+1,rr,mid+1,r,rgh[tree],pos)));\n\t}\n\tint sp=1;int N;ll lim[200001];int stak[200001];\n\tvoid dfs(int pt){\n\t\tif(pt!=1){\n\t\t\tint ans=1,l=1,r=sp-1;\n\t\t\twhile(l<=r){\n\t\t\t\tint mid=(l+r)>>1;\n\t\t\t\tif(deep[pt]-deep[stak[mid]]<=lim[pt])ans=mid,r=mid-1;else l=mid+1;\n\t\t\t}\n\t\t\tdp[pt]=query(ans,sp-1,1,N,1,pt);\n\t\t}\n\t\tstak[sp]=pt;\n\t\tinsert(1,N,1,sp,_pt(deep[pt],dp[pt]));sp++;\n\t\tfor(register int i=heads[pt];i;i=memchi[i].nxt){\n\t\t\tdeep[memchi[i].dest]=deep[pt]+memchi[i].len;dfs(memchi[i].dest);\n\t\t}\n\t\tsp--;del(1,N,1,sp);\n\t}\n\tvoid print(ll num){\n\t\tif(num>=10)print(num/10);putchar(num%10+'0');\n\t}\n\tvoid ywymain(){\n\t\tmemset(dp,0x7f,sizeof(dp));dp[1]=0;int n=get();get();\n\t\tN=1;\n\t\twhile(N<=n)N<<=1;\n\t\tfor(register int i=2;i<=n;i++){\n\t\t\tint fa=get();ll s=get();add(fa,i,s);ps[i]=get();qs[i]=get();lim[i]=get();\n\t\t}\n\t\tbuild(1,N,0);dfs(1);\n\t\tfor(register int i=2;i<=n;i++)print(dp[i]),putchar('\\n');\n\t}\n}\nint main(){\n\tywy::ywymain();return(0);\n}\n```",
        "postTime": 1545385518,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2305 \u3010[NOI2014]\u8d2d\u7968 \u3011"
    },
    {
        "content": "\u4e24\u4e2a\u6211\u4e0d\u4f1a\u7684\u4e1c\u897f\u52a0\u5728\u4e86\u4e00\u8d77\uff0c\u4e8e\u662f\u5199\u7bc7\u9898\u89e3\n\n\u9996\u5148\u6839\u636e\u5f0f\u5b50\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u659c\u7387\u4f18\u5316\n\n$$f[i]=Min\\left\\{ f[j]+(dis[j]-dis[k])\u00b7p[i]+q[i] \\right\\},dis[j]-dis[i]<=l[i] $$\n\n\n\u7136\u540e\u5c31\u662f\u5904\u7406\u6811\u7ed3\u6784\u7684\u95ee\u9898\u4e86\n\n\n\uff08\u8fd9\u4e0d\u5c31\u662f\u6811\u4e0a\u641e\u4e8b\u60c5\u4e48\uff09\n\n\n\u65e2\u7136\u8fd9\u4e2a\u4e1c\u897f\u662f\u8def\u5f84\u957f\u76f8\u5173\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u70b9\u5206\u54af\uff1f\n\n\u7136\u9e45\u70b9\u5206\u4e5f\u4e0d\u662f\u90a3\u4e48\u7684\u968f\u4fbf\uff0c\u987a\u5e8f\u3001\u7ec6\u8282\u7b49\u65b9\u9762\u90fd\u8981\u6ce8\u610f\n\n\u518d\u7136\u540e\uff0c\u4ee3\u7801\u6709\u70b9\u957f\u3002\u3002\u3002\u800c\u4e14\u6709\u70b9\u96be\u8c03\n\n\n\u8be6\u60c5\u770b\u4ee3\u7801\uff1a\n\n\n````cpp\n//by Judge\n#include<bits/stdc++.h>\n#define db double\n#define fp(i,a,b) for(int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(int i=(a),I=(b)-1;i>I;--i)\n#define go(G,u) for(int i=G.head[u],v=G.e[i].to;i;v=G.e[i=G.e[i].nxt].to)\n#define ll long long\nusing namespace std;\nconst int inf=1e9+7;\nconst int M=2e5+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ntemplate<class T>inline bool cmax(T& a,T b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T& a,T b){return a>b?a=b,1:0;}\ninline ll read(){ ll x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ninline void print(ll x,char chr='\\n'){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]=chr;\n} int n,tot,root,top,js; arr vis,siz,mx,stk,fa,st;\nll w[M],p[M],q[M],l[M],dis[M],f[M]; db sl[M];\nstruct Gr{ int pat,head[M];\n\tstruct Edge{ int to,val,nxt; }e[M<<1];\n\tinline void add(int u,int v,int w){\n\t\te[++pat]={v,w,head[u]},head[u]=pat;\n\t}\n}G;\ninline db slop(int x,int y){return (db)(f[y]-f[x])/(dis[y]-dis[x]);} //\u659c\u7387\ninline void insert(int x){ for(;top>=2&&sl[top-1]<=slop(st[top],x);--top); //\u63d2\u5165\u70b9\n\tst[++top]=x,sl[top]=-1e18,sl[top-1]=slop(st[top-1],st[top]);\n} \ninline int query(db num){ //\u5355\u8c03\u6808\u91cc\u4e8c\u5206\u659c\u7387\n\tint l=1,r=top,mid;\n\tfor(;l<=r;) mid=l+r>>1,\n\t\tsl[mid]<=num?r=mid-1:l=mid+1;\n\treturn st[l];\n}\nbool cmp(int x,int y){ return dis[x]-l[x]>dis[y]-l[y]; } //\u6309\u6df1\u5ea6\u6392\nvoid get_root(int u){ siz[u]=1,mx[u]=0; //\u677f\u5b50\n\tgo(G,u) if(!vis[v]) get_root(v),\n\t\tsiz[u]+=siz[v],cmax(mx[u],siz[v]);\n\tcmax(mx[u],tot-siz[u]); if(mx[u]<=mx[root]) root=u;\n}\nvoid dfs(int u){ stk[++js]=u; //\u6240\u6709\u70b9\u5165\u6808\n\tgo(G,u) if(!vis[v]) dfs(v);\n}\nvoid solv(int u){ if(tot==1) return ;\n\tint now=u; root=0,get_root(u),u=root;\n\tgo(G,u) vis[v]=1,tot-=siz[v];\n\tsolv(now),js=0; go(G,u) dfs(v); \n\t//\u8fd9\u91cc\u662f\u5148\u5904\u7406\u4e86\u5f53\u524d\u70b9\u7684\u7236\u4eb2\u90a3\u8fb9\uff0c\n\t//\u4e5f\u5c31\u662f\u8bf4\u5c06 f u \u5904\u7406\u4e86\u51fa\u6765 \n\tsort(stk+1,stk+1+js,cmp);\n\tint j=u,y,k; top=0;\n\tfp(i,1,js){ y=stk[i];\n\t\tfor(;j^fa[now]&&dis[j]>=dis[y]-l[y];)\n\t\t\tinsert(j),j=fa[j];\n\t\tif(top) k=query(p[y]),\n\t\t\tcmin(f[y],f[k]+(dis[y]-dis[k])*p[y]+q[y]);\n\t}\n\tgo(G,u) root=0,tot=siz[v],solv(v);\n}\nint main(){ int z,t; n=read(),t=read();\n\tfp(i,2,n) fa[i]=read(),\n\t\tz=read(),G.add(fa[i],i,z),\n\t\tdis[i]=dis[fa[i]]+z,\n\t\tp[i]=read(),q[i]=read(),\n\t\tl[i]=read(),f[i]=1e18+7;\n\ttot=mx[0]=n,solv(1);\n\tfp(i,2,n) print(f[i]);\n\treturn Ot(),0;\n}\n```",
        "postTime": 1552732035,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2305 \u3010[NOI2014]\u8d2d\u7968 \u3011"
    }
]