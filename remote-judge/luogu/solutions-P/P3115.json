[
    {
        "content": "\u849f\u84bb\u5f88\u83dc\uff0c\u8bf7\u89c1\u8c05\u3002\n\n\u9898\u76ee\u4e0d\u662f**\u7279\u522b\u3001\u7279\u522b\u3001\u7279\u522b**\u590d\u6742\u3002\u6709\u4e00\u70b9\u8981\u89e3\u91ca\u4e00\u4e0b\u3002\n\n_\"\u8f93\u51fa\u53ea\u6709\u4e00\u884c\u3002 \u8f93\u51faBessie\u65c5\u884c\u6700\u5c11\u8981\u82b1\u7684\u94b1\u4ee5\u53ca\u5728\u6b64\u57fa\u7840\u4e0a\u6700\u5c11\u7684\u82b1\u8d39\uff08\u4e2d\u95f4\u7528\u7a7a\u683c\u9694\u5f00\uff09\u3002\u5982\u679cBessie\u4e0d\u80fd\u4ece\u5979\u7684\u519c\u573a\u5230\u8fbe\u5979\u7684\u76ee\u7684\u5730\uff0c\u5219\u76f4\u63a5\u8f93\u51fa-1\"_ \n \n\"\u5728\u6b64\u57fa\u7840\u4e0a\u6700\u5c11\u7684\u82b1\u8d39\"\u662f\u6307\uff1a**\u5728\u82b1\u7684\u94b1\u6700\u5c11\u65f6\uff0c\u7ecf\u8fc7\u7684\u57ce\u5e02\u6700\u5c11\u3002**  ~~\u8fd9\u662f\u552f\u4e00\u6bd4\u8f83\u7ed5\u7684\u5730\u65b9\u3002~~\n \n## \u6b65\u5165\u6b63\u9898\n \n\u5206\u6790\uff1a\n \n1.\u5efa\u56fe: \u6b64\u9898\u4e2d\u6bcf\u4e2a\u822a\u7ebf\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\u91cf<=100\uff0c \u56e0\u6b64\uff0c\u679a\u4e3e\u8d77\u70b9\u57ce\u5e02\u548c\u7ec8\u70b9\u57ce\u5e02\uff0c\u66b4\u529b\u5efa\u56fe\u5373\u53ef\u3002\n\nPS: \u82e5\u6bcf\u4e2a\u822a\u7ebf\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\u91cf\u7ecf\u8fc7\u7684\u57ce\u5e02\u8f83\u591a(\u5982<=100000)\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u201c\u4e2d\u8f6c\u70b9\u201d\u7684\u601d\u60f3\u3002\u5373\uff0c\u5bf9\u4e8e\u822a\u7ebf\u4e2d\u7684\u6240\u6709\u57ce\u5e02$t [1],t[2],.....t[n],$\u65b0\u5efa\u4e00\u4e2a\u70b9$x$\uff0c\u4ece$t[1],t[2]......t[n-1]$\u5efa\u7acb\u5230$x$\u7684\u8fb9\uff08\u6743\u4e3a\u9898\u4e2d\u7ed9\u5b9a\u7684$cost$\uff09\uff0c\u5728\u4ece$x$\u5efa\u7acb\u5230$t[2],t[3]......t[n]$\u7684\u8fb9\uff08\u6743\u4e3a$0$\uff09\uff0c\u5373\u53ef\u4f7f\u5176\u4e2d\u4efb\u610f\u4e00\u70b9\u5230\u53e6\u4e00\u70b9\u7684\u8ddd\u79bb\u548c\u4e3a$cost$,\u4f46\u76f8\u6bd4\u800c\u8a00\u8282\u7ea6\u4e86\u4e0d\u5c11\u7a7a\u95f4\uff08**\u5982\u679c\u5b58\u8fb9\u7684\u8bdd**\uff09\u3002\n\n2.\u6c42\u6700\u77ed\u8def\u3002**\u7167\u7740SPFA\u6a21\u677f\u6253\u5373\u53ef\uff0c\u4e0d\u9700\u4f18\u5316\u3002**\n\n\u8be6\u89c1\u4ee5\u4e0b\u4ee3\u7801\u3002\n\n```cpp\n// luogu-judger-enable-o2\n//\u5438\u4e2a\u6c27\u6c14(...)\n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\n//\u4ee5\u4e0b\u4e3afread(\u4e8c\u8fdb\u5236\u8bfb\u5165)\u6a21\u677f\uff0c\u5b9e\u6d4b\u76f8\u5bf9\u4e8egetchar\u5e94\u8be5\u5feb\u70b9\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){\n    return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?EOF:*A++;\n}\ntemplate<typename qRead>\ninline void qr(qRead &s){\n    char c=gc(); s=0;\n    for(;c<'0'||c>'9';c=gc());\n    for(;c>='0'&&c<='9';c=gc())\n        s=(s<<1)+(s<<3)+(c^48);\n}\n\ntypedef long long ll;\nconst int N=1005,M=105;\nstruct edge{\n    int len,cnt;\n}Edge[N][N];//\u90bb\u63a5\u77e9\u9635\uff0c\u672c\u9898\u8fb9\u8f83\u591a\uff0c\u4e0d\u5b9c\u7528\u90bb\u63a5\u8868\nint City[N],t[M],n,m,i,j,u,v,a,b;\nll Dis[N];//\u6700\u77ed\u8ddd\u79bb\nbool Inq[N];\n\nvoid SPFA(int s){\n//\u6a21\u677f\n    for(i=1;i<=n;++i){\n        Dis[i]=1e18; City[i]=1e9;\n    }\n    queue<int> q;\n    q.push(s); Inq[s]=1;\n    Dis[s]=0; City[s]=0;\n    ll x; int y;\n    while(!q.empty()){\n        u=q.front(); q.pop(); Inq[u]=0;\n        for(v=1;v<=n;++v){//\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u50a8\uff0c\u90a3\u4e48\u5c31\u8981\u679a\u4e3e\u70b9\n            if(Edge[u][v].len<1e9){//\u5982\u679c\u6709\u8fb9\u7684\u8bdd\n                x=Dis[u]+Edge[u][v].len;\n                y=City[u]+Edge[u][v].cnt;\n                if(x<Dis[v]){\n                    Dis[v]=x;\n                    City[v]=y;\n                    if(!Inq[v]){\n                        q.push(v); Inq[v]=1;\n                    }\n                }\n                else if(x==Dis[v] && y<City[v])//\u540c\u65f6\u4f7f\u57ce\u5e02\u6570\u91cf\u6700\u5c0f\n                    City[v]=y;\n            }\n        }\n    }\n}\n\nint main(){\n    qr(a); qr(b); qr(m);\n    int x,y;\n    for(i=1;i<N;++i){\n        for(j=1;j<N;++j)\n            Edge[i][j].len=Edge[i][j].cnt=1e9;\n    }\n    while(m--){\n        qr(x); qr(y);\n        for(i=1;i<=y;++i){\n            qr(t[i]);\n            n=t[i]>n?t[i]:n;\n        }\n        for(i=1;i<y;++i){\n            for(j=i+1;j<=y;++j){\n                if(x<Edge[t[i]][t[j]].len){//\u9632\u6b62\u6709\u91cd\u8fb9\n                    Edge[t[i]][t[j]].len=x;\n                    Edge[t[i]][t[j]].cnt=j-i;\n                }\n                else if(x==Edge[t[i]][t[j]].len && j-i<Edge[t[i]][t[j]].cnt)\n                    Edge[t[i]][t[j]].cnt=j-i;\n            }\n        }\n    }\n    SPFA(a);\n    //\u8f93\u51fa\n    if(Dis[b]<1e18)\n        printf(\"%lld %d\\n\",Dis[b],City[b]);\n    else\n        puts(\"-1 -1\");\n    return 0;\n}\n```\n//\u8c22\u8c22\u89c2\u770b\u849f\u84bb\u7684\u4ee3\u7801\u3002\n\n//\u7ba1\u7406\u5458dalao\u6c42\u901a\u8fc7",
        "postTime": 1546749553,
        "uid": 51198,
        "name": "bits",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3115 \u3010[USACO15JAN]\u725b\u8def\u7ebfCow Routing\u3011"
    },
    {
        "content": "### P3115 [USACO15JAN]Cow Routing S\u9898\u89e3\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3115)\n\n#### 1. \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60 $n$ \u6761\u8def\u7ebf\uff0c\u53ef\u4ee5\u4ece\u8fd9\u6761\u8def\u7ebf\u4e0a\u4efb\u610f\u4e00\u70b9\u51fa\u53d1\uff0c\u4efb\u610f\u4e00\u70b9\u7ed3\u675f\u3002\u65e0\u8bba\u8d70\u8fc7\u51e0\u4e2a\u57ce\u5e02\uff0c\u82b1\u8d39\u90fd\u662f $w_i$\uff0c\u95ee\u4ece\u70b9 $A$ \u5230\u70b9 $B$ \u82b1\u8d39\u6700\u5c11\u4ee5\u53ca\u82b1\u8d39\u6700\u5c11\u524d\u63d0\u4e0a\u6700\u5c11\u8d70**\u51e0\u4e2a**\u57ce\u5e02\uff0c\u82e5\u4e0d\u80fd\u5230\u8fbe\uff0c\u5219\u8f93\u51fa $-1$\u3002\n\n#### 2. \u5206\u6790\n\n\u5176\u5b9e\u5c31\u662f\u4e00\u9053 dijkstra \u7684\u53d8\u5f62\uff0c\u4f46\u662f\u662f\u53cc\u5173\u952e\u5b57\u7684\u3002\u5efa\u8fb9\u65f6\u4ece\u4e00\u6761\u8def\u5f84\u4ece\u524d\u81f3\u540e\u4e24\u4e24\u5efa\u8fb9\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u6700\u5c11\u8d70\u8fc7\u57ce\u5e02\u7684\u6570\u91cf\u53ea\u4e0e\u6700\u5c11\u82b1\u8d39\u4e0a\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ee5\u6700\u5c11\u82b1\u8d39\u4e3a\u5173\u952e\u5b57\u6765\u8dd1\u4e00\u904d dijkstra \u518d\u66f4\u65b0\u6700\u5c11\u8d70\u8fc7\u57ce\u5e02\u7684\u6570\u91cf\u5373\u53ef\uff08\u4e0d\u4f1a dijkstra \u770b[\u8fd9\u91cc](https://www.luogu.com.cn/blog/zhujunyiyyds/zui-duan-lu-xue-xi-bi-ji)\uff09\u3002\n\n#### 3. \u6ce8\u610f\u4e8b\u9879\n\n\u5176\u5b9e\u6211\u5f53\u65f6\u505a\u9898\u7684\u5927\u81f4\u601d\u8def\u6ca1\u6709\u95ee\u9898\uff0c\u53ea\u4e0d\u8fc7\u6ca1\u770b\u6570\u636e\u8303\u56f4\uff0c\u4e0d\u662f\u6570\u7ec4\u5f00\u5927\uff08MLE\uff09\u4e86\u5c31\u662f\u5c0f\u4e86\uff08RE)\u3002\u6211\u5728\u8fd9\u91cc\u63d0\u9192\u5927\u5bb6\uff0c\u505a\u9898\u4e4b\u524d\uff0c\u5148\u770b\u6570\u636e\u8303\u56f4\uff0c\u786e\u5b9a\u597d\u4e86\u6570\u7ec4\u5927\u5c0f\uff0c\u518d\u5199\u4ee3\u7801\u3002\n\n\u6709 $N$ \u6761\u822a\u7ebf\uff0c\u4e14 $1 \\leq N \\leq 1000$\uff0c\u6bcf\u6761\u822a\u7ebf\u6700\u591a\u5305\u542b $100$ \u4e2a\u57ce\u5e02\uff0c\u6bcf\u6761\u8def\u7ebf\u4e2d\u7684\u57ce\u5e02\u4ece\u524d\u81f3\u540e\u4e24\u4e24\u5efa\u8fb9\uff0c\u6700\u591a\u5efa $N \\times \\sum_{i=1}^{k - 1} \\ i$ \u6761\u8def\u7ebf\uff0c\u4ee3\u5165 $n$\u3001$k$\uff0c\u6700\u591a\u5efa $4950000$ \u6761\u8fb9\u3002\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u8bb0\u5f97\u7279\u5224\uff0c\u8d39\u7528\u76f8\u7b49\uff0c\u8def\u5f84\u957f\u5ea6\u8981\u53d6\u6700\u5c0f\u503c\u3002\u6700\u540e\u8bb0\u5f97\u5f00 ```long long```\u3002\n\n\n#### 4. Code\n\n```c\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1005, MAXM = 4950005; //\u6700\u591a\u70b9\u6570\uff0c\u6700\u591a\u8fb9\u6570\nconst long long INF = 4557430888798830399; //\u521d\u59cb\u5316\u4e00\u4e2a\u6781\u5927\u503c\uff0c\u8fd9\u91cc\u8981\u7528long long\n\nint st, fi, n, idx; //\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u70b9\u7684\u6570\u91cf\uff0c\u8fb9\u7684\u6570\u91cf \nlong long dis[MAXN][2], head[MAXN]; //dis[i][0]\u4e3a\u8d77\u70b9\u5230\u70b9i\u6700\u5c11\u8d39\u7528\uff0cdis[i][1]\u4e3a\u6700\u5c11\u8d39\u7528\u4e0b\u7684\u6700\u77ed\u8def\u5f84 \nstruct Edge{int nxt, to, w, c;}edge[MAXM]; //\u4e0b\u4e00\u6761\u8fb9\uff0c\u5230\u8fbe\u7684\u70b9\uff0c\u8d39\u7528\uff0c\u8def\u5f84\u957f\u5ea6 \nstruct Node{long long x, w;}; //\u7f16\u53f7\uff0c\u6700\u5c11\u82b1\u8d39 \nbool operator < (const Node &a, const Node &b) {return a.w > b.w;} //\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \nbool vis[MAXN];\npriority_queue <Node> q;\n\nvoid add (int from, int to, int w, int c) //\u5efa\u8fb9 \n{\n    edge[++idx].nxt = head[from];edge[idx].to = to;edge[idx].w = w;edge[idx].c = c;\n    head[from] = idx;\n}\n\nvoid init ()\n{\n    memset (head, -1, sizeof (head));\n    memset (dis, 0x3f, sizeof (dis));\n    scanf (\"%d%d%d\", &st, &fi, &n);\n    for (int i = 1; i <= n; i++)\n    {\n        int k, w;\n        long long v[105];\n        scanf (\"%d%d\", &w, &k);\n        for (int j = 1; j <= k; j++)    scanf (\"%lld\", &v[j]);\n        //\u4ece\u524d\u81f3\u540e\u5efa\u8fb9 \n        for (int x = 1; x <= k; x++)\n        for (int y = x + 1; y <= k; y++)    add (v[x], v[y], w, y - x); //\u5efa\u4e00\u6761\u8fde\u63a5v[x]\u3001v[y]\u8d39\u7528\u4e3aw\u8def\u5f84\u957f\u4e3ay - x\u7684\u8fb9 \n    }\n}\n\n//\u5806\u4f18\u5316dijkstra\nvoid dijkstar (int s)\n{\n    dis[s][0] = dis[s][1] = 0;\n    q.push (Node {s, 0});\n    while (!q.empty ())\n    {\n        Node cur = q.top ();\n        q.pop ();\n        if (vis[cur.x]) continue;\n        vis[cur.x] = 1;\n        for (int i = head[cur.x]; i != -1; i = edge[i].nxt)\n        {\n            int to = edge[i].to;\n            if (dis[to][0] > dis[cur.x][0] + edge[i].w) //\u82e5\u6709\u66f4\u5c0f\u7684\u82b1\u8d39\uff0c\u5219\u66f4\u65b0 \n            {\n                dis[to][0] = dis[cur.x][0] + edge[i].w;\n                dis[to][1] = dis[cur.x][1] + edge[i].c;\n                if (vis[to])    continue;\n                q.push (Node {to, dis[to][0]}); //\u5165\u961f\u662f\u5165\u7f16\u53f7\u548c\u82b1\u8d39 \n            }\n            if (dis[to][0] == dis[cur.x][0] + edge[i].w) //\u8bb0\u5f97\u7279\u5224\u8d39\u7528\u7b49\u4e8e\u7684\u60c5\u51b5 \n            {\n                dis[to][1] = min (dis[to][1], dis[cur.x][1] + edge[i].c);//\u8d39\u7528\u7b49\u4e8e\u53d6\u8def\u5f84\u957f\u5ea6\u5c0f\u7684 \n                if (vis[to])    continue;\n                q.push (Node {to, dis[to][0]});\n            }\n        }\n    }\n}\n\nvoid output ()\n{\n    if (dis[fi][0] == INF)  printf (\"-1 -1\"); //\u4e0d\u80fd\u5230\u8fbe \n    else                    printf (\"%lld %lld\", dis[fi][0], dis[fi][1]);\n}\n\nint main ()\n{\n    init ();        //\u8f93\u5165 \n    dijkstar (st);  //\u6700\u77ed\u8def \n    output ();      //\u8f93\u51fa \n    return 0;\n}\n```\n\n\n#### 5. \u603b\u7ed3\n\n1. \u62ff\u5230\u4e00\u4e2a\u9898\uff0c\u5148\u4ed4\u7ec6\u8bfb\u9898\u76ee\uff0c\u7279\u522b\u662f**\u8f93\u5165\u8f93\u51fa**\uff08\u6709\u6ca1\u6709\u6362\u884c\u4e4b\u7c7b\uff09\u548c**\u6570\u636e\u8303\u56f4**\u3002\n2. \u5206\u6790\u51fa\u9898\u76ee\u7684**\u7279\u6b8a\u60c5\u51b5**\u3002",
        "postTime": 1661583453,
        "uid": 571546,
        "name": "qiutianqwq",
        "ccfLevel": 0,
        "title": "P3115 [USACO15JAN]Cow Routing S\u9898\u89e3"
    },
    {
        "content": "[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3115)\n## \u601d\u8def\n\u5f88\u660e\u663e\u7684\u6700\u77ed\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 SPFA \u6765\u505a\u3002\n\n1.\u5efa\u8fb9\uff1a\u56e0\u4e3a\u8fd9\u9898\u8303\u56f4\u5f88\u5c0f\uff0c\u53ea\u6709 $100$\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u7136\u540e\u7528 struct \u548c vector \u5b58\u8fb9\u3002\n\n2.\u7528 SPFA \u6c42\u6700\u77ed\u8def\uff1a\u4e0e\u6700\u666e\u901a\u7684 SPFA \u76f8\u6bd4\u8f83\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u8fd9\u9898\u9700\u8981\u6211\u4eec\u591a\u5f00\u4e00\u4e2a\u6570\u7ec4\u7528\u6765\u5b58\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,s1,s2,i,j,k,x,z,e[1010],f2[1010],d[1010],inf;\nlong long f[1010];\nstruct node{\n\tint x,y,z;\n\t//x\u5b58\u7ec8\u70b9\uff0cy\u5b58\u8d39\u7528\uff0cz\u5b58\u8ddd\u79bb \n};\nvector<node>a[1010];//\u4e0b\u6807\u5373\u8d77\u70b9 \nnode t;\nqueue<int>q;\nint main(){\n    scanf(\"%d%d%d\",&s1,&s2,&m);\n    for(i=1;i<=m;i++){\n        scanf(\"%d%d\",&z,&n);t.y=z;\n        for(j=1;j<=n;j++)scanf(\"%d\",&d[j]);\n        for(j=1;j<n;j++)\n            for(k=j+1;k<=n;k++)\n                t.x=d[k],t.z=k-j,a[d[j]].push_back(t);//\u5b58\u8fb9 \n    }\n    memset(f,127,sizeof(f));//\u8d39\u7528\u521d\u59cb\u5316\u6700\u5927\u503c \n    memset(f2,127,sizeof(f2));//\u57ce\u5e02\u6570\u91cf\u521d\u59cb\u5316\u6700\u5927\u503c\n    inf=f[0];\n    f[s1]=0;f2[s1]=0;\n    q.push(s1);e[s1]=1;\n    while(!q.empty()){//SPFA\u6a21\u677f \n        x=q.front();\n        for(i=0;i<a[x].size();i++){\n            z=a[x][i].x;\n            if(f[x]+a[x][i].y<f[z]||(f[x]+a[x][i].y==f[z]&&f2[x]+a[x][i].z<f2[z])){\n                f[z]=f[x]+a[x][i].y;f2[z]=f2[x]+a[x][i].z;\n                if(!e[z])//\u961f\u5217\u4e2d\u5df2\u6709\uff0c\u4e0d\u9700\u8981\u91cd\u590d\u8fdb\u5165 \n\t\t\t\t\tq.push(z),e[z]=1;\n            }\n        }\n        q.pop();e[x]=0;\n    }\n    if(f[s2]==inf||f2[s2]==inf)printf(\"-1 -1\");//\u4e0d\u80fd\u5230\u8fbe \n    else printf(\"%lld %d\",f[s2],f2[s2]);\n    return 0;\n}\n```",
        "postTime": 1639220327,
        "uid": 562686,
        "name": "yeshubo_qwq",
        "ccfLevel": 5,
        "title": "P3115 \u9898\u89e3"
    },
    {
        "content": "#### -1.\u524d\u7f6e\u77e5\u8bc6\n\n\u6700\u77ed\u8def\uff0c\u56fe\u8bba\n\n#### 0.\u5927\u4f53\u601d\u8def\n\n\u5bf9\u6bcf\u6761\u822a\u7ebf\u8fdb\u884c**\u5efa\u8fb9**\u5904\u7406\uff0c\u540c\u65f6\u8bb0\u5f55\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u57ce\u5e02\u6570(\u8fd9\u91cc\u9898\u76ee\u4e2d\u7684\u7ecf\u8fc7\u591a\u5c11\u57ce\u5e02\u6307\u4ece$u$\u5230$v$**\u4e0d\u5305\u62ec\u9996/\u5c3e**\u7684\u57ce\u5e02\u6570)\uff0c\u7136\u540e\u8dd1$Dijkstra$\u5373\u53ef\n\n#### 1.\u5efa\u8fb9\n\n\u672c\u9898\u7531\u4e8e\u8fb9\u6570\u8f83\u591a\uff0c\u91c7\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\u8f83\u4e3a\u5408\u9002\u3002\n\n\u5b9a\u4e49$cost[i][j]$\u8868\u793a\u4ece$i$\u5230$j$\u7684\u6700\u5c11\u8d39\u7528\uff0c$to[i][j]$\u8868\u793a**\u5728\u8d39\u7528\u6700\u5c11\u7684\u60c5\u51b5\u4e0b**\u4ece$i$\u5230$j$\u6240\u7ecf\u8fc7\u7684\u6700\u5c11\u57ce\u5e02\u6570\n\n\u5047\u8bbe\u4e00\u6761\u822a\u7ebf\u7684\u8d39\u7528\u662f$money$,\u6709$len$\u4e2a\u57ce\u5e02\uff0c\u5bf9\u5e94\u7684\u7f16\u53f7\u5206\u522b\u4e3a$x_{1},x_{2},\u00b7\u00b7\u00b7,x_{len}$\n\n\u9996\u5148\u8981\u660e\u786e\u4e00\u4e2a\u5e38\u8bc6\u6027\u95ee\u9898\uff1a\u5728\u4e00\u6761\u822a\u7ebf\u4e0a\uff0c\u4e00\u4e2a\u57ce\u5e02**\u4e0d\u80fd\u98de\u5230\u5b83\u4e4b\u524d\u7684\u57ce\u5e02**\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u663e\u7136\u7684\u5efa\u8fb9\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u4e00\u6761\u822a\u7ebf\u7684$x_{i}$\uff0c\u5411$x_{j}(i<j<=len)$\u5efa\u4e00\u6761\u957f\u5ea6\u4e3a$money$\u7684\u8fb9\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e4b\u524d$cost[i][j]$\u5df2\u8d4b\u503c\uff0c\u5219\n\n- \u5982\u679c$money<cost[i][j]$\uff0c\u9700\u8981\u66f4\u65b0$cost[i][j],to[i][j]$\n\n- \u5982\u679c$money=cost[i][j]$\uff0c\u5219\u5982\u679c$i$\u5230$j$\u4e4b\u95f4\u7684\u57ce\u5e02\u6570$<to[i][j]$\uff0c\u66f4\u65b0$to[i][j]$\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u6ee1\u8db3**\u5728\u82b1\u8d39\u6700\u5c11\u7684\u60c5\u51b5\u4e0b**\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\u6700\u5c11\n\n\n#### 2.Dijkstra\n\n\u5b9a\u4e49$c[i]$\u4e3a\u8d77\u70b9\u5230$i$\u7684\u6700\u5c11\u82b1\u8d39\uff0c$ans[i]$\u4e3a\u8d77\u70b9\u5230$i$\u4e4b\u95f4\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\n\n\u5047\u8bbe\u5f53\u524d\u4ece\u57ce\u5e02$k$\u5f00\u59cb\u62d3\u5c55\u3002\n\n\u5982\u679c$k$\u4e0e\u67d0\u4e2a\u57ce\u5e02$i$\u6709\u8fde\u8fb9$cost[k][i]$\uff0c\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4\u4e4b\u524d\u5efa\u8fb9\u7684\u65b9\u6cd5\u8fdb\u884c\u66f4\u65b0\u3002\n\n\n- \u5982\u679c$c[k]+cost[k][i]<c[i]$\uff0c\u66f4\u65b0$c[i],ans[i]$\n\n- \u5982\u679c$c[k]+cost[k][i]=c[i]$\uff0c\u5982\u679c$ans[k]+to[k][i]<ans[i]$\uff0c\u66f4\u65b0$ans[i]$\n\n\u5176\u4e2d$ans[i]$\u7684\u66f4\u65b0\u662f\u6307$ans[i]=ans[k]+to[k][i]$\n\n\u6839\u636e\u5b9a\u4e49\uff0c$ans[i]$\u8868\u793a\u8d77\u70b9\u5230$i$\u7684\u57ce\u5e02\u6570\uff0c$ans[k]$\u8868\u793a\u8d77\u70b9\u5230$k$\u7684\u57ce\u5e02\u6570\uff0c$to[k][i]$\u8868\u793a$k$\u5230$i$\u4e4b\u95f4\u7684\u57ce\u5e02\u6570\uff0c\u6240\u4ee5\u5f88\u660e\u663e\u6709$ans[i]=ans[k]+to[k][i]$\n\n\n#### 3.Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint read()//\u5feb\u8bfb\n{\n        int sum = 0, f = 1;\n        char c = getchar();\n        while(c < '0' or c > '9')\n        {\n                if(c == '-') f = -1;\n                c = getchar();\n        }\n        while(c >= '0' and c <= '9')\n        {\n                sum = (sum << 1) + (sum << 3) + c - '0';\n                c = getchar();\n        }\n        return sum * f;\n}\n\nint a, b, n, len, maxn;\nint cost[1010][1010], x[10010], to[1010][1010], money, ans[1010];\nunsigned long long c[1010];//\u522b\u5fd8\u4e86\u5f00long long\npriority_queue<pair <long long, int> > q;\nbool vis[1010];\n\nvoid Dijkstra()//\u5806\u4f18\u5316Dij\n{\n        for(int i = 1; i <= maxn; i++) c[i] = LONG_LONG_MAX;\n        c[a] = 0;\n        q.push(make_pair(0, a));\n        while(!q.empty())\n        {\n                int k = q.top().second;\n                q.pop();\n                if(vis[k]) continue;\n                vis[k] = 1;\n                for(int i = 1; i <= maxn; i++)\n                        if(cost[k][i] != 1e9 + 10)//\u6709\u8fde\u8fb9\n                        {\n                                if(c[i] > c[k] + cost[k][i])\n                                {\n                                        c[i] = c[k] + cost[k][i];\n                                        ans[i] = ans[k] + to[k][i];\n                                        q.push(make_pair(-c[i], i));\n                                }\n                                else\n                                {\n                                        if(c[i] == c[k] + cost[k][i])\n                                        {\n                                                if(ans[i] > ans[k] + to[k][i]) ans[i] = ans[k] + to[k][i];\n                                        }\n                                }\n                        }\n        }\n}\n\nint main()\n{\n        for(int i = 1; i <= 1010; i++)\n                for(int j = 1; j <= 1010; j++)\n                        cost[i][j] = 1e9 + 10;//\u8d4b\u521d\u503c\n        memset(to, 127, sizeof(to));//\u8d4b\u521d\u503c\n        a = read(), b = read(), n = read();\n        //\u5efa\u8fb9\n        for(int i = 1; i <= n; i++)\n        {\n                money = read(), len = read();\n                for(int j = 1; j <= len; j++)\n                        x[j] = read(), maxn = max(maxn, x[j]);\n                for(int j = 1; j <= len; j++)\n                {\n                        for(int k = j + 1; k <= len; k++)\n                        {\n                                if(cost[x[j]][x[k]] > money)\n                                        cost[x[j]][x[k]] = money, to[x[j]][x[k]] = k - j;//k-j\u5c31\u662fj\u5230k\u4e4b\u95f4\u7684\u57ce\u5e02\u6570\uff08\u4e0d\u5305\u542b\u9996\u5c3e\uff09\n                                else\n                                if(cost[x[j]][x[k]] == money)\n                                {\n                                        if(k - j < to[x[j]][x[k]])\n                                        {\n                                                to[x[j]][x[k]] = k - j;\n                                        }\n                                }\n                        }\n                }\n        }\n\n        Dijkstra();\n\n        if(c[b] != LONG_LONG_MAX)//\u5224\u65ad\u662f\u5426\u80fd\u5230\u8fbe\n        {\n                printf(\"%lld %d\", c[b], ans[b]);\n        }\n        else\n        {\n                printf(\"-1 -1\");\n        }\n        return 0;\n}\n\n```\n",
        "postTime": 1576073165,
        "uid": 110649,
        "name": "WKAHPM",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3115 \u3010[USACO15JAN]\u725b\u8def\u7ebfCow Routing\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\r\n\r\n\u9898\u76ee\u53ef\u4ee5\u5212\u5206\u4e3a\u4e24\u4e2a\u95ee\u9898\uff1a\r\n\r\n\u95ee\u9898 1 \u5230\u8fbe\u7ec8\u70b9\u6700\u5c11\u94b1\u6570\u3002\r\n\r\n\u95ee\u9898 2 \u5728\u95ee\u9898 1 \u57fa\u7840\u4e0a\u6700\u5c11\u9700\u8981\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\u91cf\u3002\uff08\u9898\u9762\u4f3c\u4e4e\u9519\u4e86\uff09\r\n\r\n----\r\n\r\n\u5bf9\u4e8e\u6bcf\u4e00\u6761\u822a\u7ebf\u4e0a\u7684\u7ed3\u70b9 $i$\uff0c\u8fd9\u6761\u822a\u7ebf\u4e0a\u5728 $i$ \u4e4b\u524d\u7684\u7ed3\u70b9\uff0c\u90fd\u6709\u6709\u5411\u8fb9\u6307\u5411\u7ed3\u70b9 $i$\u3002\u6bcf\u4e00\u6761\u6709\u5411\u8fb9\u7684\u8fb9\u6743\u662f\u8fd9\u6761\u822a\u7ebf\u7684 $cost$\u3002\r\n\r\n\u7528 $dis$ \u6570\u7ec4\u8bb0\u5f55\u6700\u5c11\u4ef7\u683c\uff0c$dis_i$ \u8868\u793a\u5230\u8fbe\u7ed3\u70b9 $i$ \u6700\u5c11\u9700\u8981\u7684\u94b1\u3002\r\n\r\n\u672c\u9898\u53ef\u4ee5\u4f7f\u7528 **SPFA**\uff08Shortest Path Faster Algorithm\uff09\uff0c\u7528\u961f\u5217\u6765\u7ef4\u62a4\u54ea\u4e9b\u7ed3\u70b9\u53ef\u80fd\u4f1a\u5f15\u8d77\u66f4\u4f18\u7684\u7ed3\u679c\uff0c\u5c31\u80fd\u53ea\u8bbf\u95ee\u5fc5\u8981\u7684\u8fb9\u4e86\u3002\r\n\r\n```cpp\r\nvoid spfa(int start)\r\n{\r\n\tmemset(dis, 999999, sizeof(dis));\r\n\tdis[start] = 0; // \u521d\u59cb\u7ed3\u70b9\u8bbe\u4e3a0\r\n\tq.push(start); \r\n\twhile(!q.empty())\r\n\t{\r\n\t\tint x = q.front();\r\n\t\tq.pop();\r\n\t\tfor(int i = 0;i < g[x].size();i++)\r\n\t\t{\r\n\t\t\tif(dis[g[x][i]] > dis[x] + w[x][i]) // \u5982\u679c\u6709\u53ef\u80fd\u7684\u677e\u5f1b\u64cd\u4f5c\uff0c\u5219\u5c06\u6b64\u7ed3\u70b9\u5165\u961f\r\n\t\t\t{\r\n\t\t\t\tdis[g[x][i]] = dis[x] + w[x][i];\r\n\t\t\t\tq.push(g[x][i]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n----\r\n\r\n\u5728\u95ee\u9898 1 \u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u8981\u5c3d\u53ef\u80fd\u7684\u8ba9\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\u5c11\u3002\r\n\r\n\u5f88\u7b80\u5355\uff0c\u5efa\u4e00\u4e2a vector\uff0c\u5728\u5efa\u56fe\u7684\u65f6\u5019\uff0c\u7ed9\u6bcf\u4e00\u6761\u8fb9\u518d\u52a0\u4e00\u4e2a\u53c2\u6570 $st$\u3002\u5bf9\u4e8e\u7ed3\u70b9 $i$ \u548c \u540c\u4e00\u6761\u822a\u7ebf\u4e0a\u3001\u5728 $i$ \u4e4b\u540e\u7684\u7ed3\u70b9 $j$\uff0c\u7531 $i$ \u6307\u5411 $j$ \u7684\u6709\u5411\u8fb9\u7684 $st$ \u4e3a $j - i$\u3002\r\n\r\n\u518d\u52a0\u4e00\u4e2a\u6570\u7ec4 $step$ \u7ef4\u62a4\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u5728\u82b1\u8d39\u6700\u5c11\u7684\u65f6\u5019\u6700\u5c11\u9700\u8981\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\u91cf\u3002\r\n\r\n```cpp\r\nif(dis[g[x][i]] > dis[x] + w[x][i])\r\n{\r\n\tdis[g[x][i]] = dis[x] + w[x][i];\r\n\tq.push(g[x][i]);\r\n}\r\nelse if(dis[g[x][i]] == dis[x] + w[x][i]) // \u5bf9\u4e8estep\u7684\u677e\u5f1b\u64cd\u4f5c\r\n{\r\n\tif(step[g[x][i]] > step[x] + st[x][i])\r\n\t{\r\n\t\tstep[g[x][i]] = step[x] + st[x][i];\r\n\t\tq.push(g[x][i]); vis[g[x][i]] = 1;\r\n\t}\r\n}\r\n\r\n```\r\n\r\n\u5728\u5165\u961f\u64cd\u4f5c\u65f6\uff0c\u52a0\u4e0a\u4e00\u4e2a\u5224\u65ad\uff08\u5982\u4e0a\uff09\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\r\n\r\n\u6ce8\u610f\u8f93\u51fa`-1`\u7684\u60c5\u51b5\uff0c\u6b64\u5904\u6211\u7528\u7684\u662f\u5e03\u5c14\u6570\u7ec4 $vis$ \u8bb0\u5f55\u3002\r\n\r\n\r\n------------\r\n\r\n\u6700\u7ec8\u4ee3\u7801\u5982\u4e0b\uff1a\r\n\r\n```cpp\r\n#include<cstdio>\r\n#include<iostream>\r\n#include<algorithm>\r\n#include<queue>\r\n#include<cstring>\r\n#include<vector>\r\nusing namespace std;\r\n\r\nvector<int> g[1010];\r\nvector<int> w[1010];\r\nvector<int> st[1010];\r\nlong long dis[1010];\r\nint step[1010];\r\nint city[1010];\r\nbool vis[1010];\r\nqueue<int> q;\r\n\r\nvoid spfa(int start)\r\n{\r\n\tmemset(dis, 999999, sizeof(dis));\r\n\tmemset(vis, 0, sizeof(vis));\r\n\tdis[start] = 0;\r\n\tq.push(start);\r\n\twhile(!q.empty())\r\n\t{\r\n\t\tint x = q.front();\r\n\t\tq.pop();\r\n\t\tfor(int i = 0;i < g[x].size();i++)\r\n\t\t{\r\n\t\t\tif(dis[g[x][i]] > dis[x] + w[x][i])\r\n\t\t\t{\r\n\t\t\t\tdis[g[x][i]] = dis[x] + w[x][i];\r\n\t\t\t\tstep[g[x][i]] = step[x] + st[x][i];\r\n\t\t\t\tq.push(g[x][i]);\r\n\t\t\t\tvis[g[x][i]] = 1;\r\n\t\t\t}\r\n\t\t\telse if(dis[g[x][i]] == dis[x] + w[x][i])\r\n\t\t\t{\r\n\t\t\t\tif(step[g[x][i]] > step[x] + st[x][i])\r\n\t\t\t\t{\r\n\t\t\t\t\tstep[g[x][i]] = step[x] + st[x][i];\r\n\t\t\t\t\tq.push(g[x][i]); vis[g[x][i]] = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tint s, t, n;\r\n\tcin >> s >> t >> n;\r\n\tfor(int i = 1;i <= n;i++)\r\n\t{\r\n\t\tint cost, nn;\r\n\t\tscanf(\"%d%d\", &cost, &nn);\r\n\t\tfor(int j = 1;j <= nn;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &city[j]);\r\n\t\t}\r\n\t\tfor(int j = 1;j <= nn;j++) // \u5efa\u56fe\r\n\t\t{\r\n\t\t\tfor(int k = j + 1;k <= nn;k++)\r\n\t\t\t{\r\n\t\t\t\tg[city[j]].push_back(city[k]);\r\n\t\t\t\tw[city[j]].push_back(cost);\r\n\t\t\t\tst[city[j]].push_back(k - j);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tspfa(s);\r\n\tif(!vis[t])\r\n    \tcout << -1 << \" \" << -1;\r\n\telse\r\n    \tcout << dis[t] << \" \" << step[t];\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1676708206,
        "uid": 531036,
        "name": "\u849f\u84bbIvan",
        "ccfLevel": 5,
        "title": "P3115 \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\n\n\u6211\u8ba4\u4e3a\u6709\u5fc5\u8981\u89e3\u91ca\u4e00\u4e0b\u9898\u610f\u3002\n\n\u4ece $A$ \u57ce\u5e02\u5f00\u59cb\uff0c\u8981\u8d70\u5230 $B$ \u57ce\u5e02\u3002\u6709 $n$ \u67b6\u98de\u673a\uff0c\u6bcf\u67b6\u98de\u673a\u90fd\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u822a\u7ebf\u4e14\u662f\u5355\u5411\u7684\u3002\u800c\u4e14\uff0c\u4f60\u53ef\u4ee5\u5728\u4e00\u67b6\u98de\u673a\u7684\u822a\u7ebf\u9014\u4e2d\u4efb\u610f\u4e00\u4e2a\u57ce\u5e02\u4e0b\u98de\u673a\uff0c\u4f46\u65e0\u8bba\u4f60\u505a\u4e86\u591a\u4e45\uff0c\u4f60\u603b\u662f\u9700\u8981\u82b1\u8d39\u5168\u7a0b\u7684\u4ef7\u683c\u3002\n\n\u822a\u73ed\u4fe1\u606f\u8bb0\u5f55\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n\u7b2c\u4e00\u884c\u822a\u73ed\u7684\u82b1\u8d39 $\\text{cost}$ \u548c\u822a\u7ebf\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\u91cf $m$\u3002\n\n\u63a5\u4e0b\u6765 $m$ \u4e2a\u6574\u6570\uff0c\u8868\u793a\u7ecf\u8fc7\u7684\u6240\u6709\u57ce\u5e02\u3002\n\n\u6c42\u51fa\u4ece $A$ \u5230 $B$ \u6700\u5c11\u82b1\u8d39\u7684\u8def\u7ebf\u3002\u5e76\u4e14 **\u5728\u6b64\u57fa\u7840\u4e0a** \u6700\u5c11\u7ecf\u8fc7\u591a\u5c11\u57ce\u5e02\u3002\n\n### \u601d\u8def\n\n\u5f88\u7b80\u5355\u7684\u6700\u77ed\u8def\u7684\u4e00\u9053\u9898\u3002\u5176\u5b9e\u5e76\u6ca1\u6709\u90a3\u4e48\u590d\u6742\u3002\n\n\u9996\u5148\u6211\u4eec\u8981\u641e\u5b9a\u5efa\u56fe\uff0c\u8fd9\u91cc\u6211\u7528\u4e00\u4e2a\u50a8\u5b58\u7ed3\u6784\u4f53\u7684 $\\text{vector}$ \u6765\u5b58\u56fe\u3002\n\n\u5982\u679c\u7ed3\u6784\u4f53\u91cc\u9762\u4ec5\u4ec5\u5b58\u8fb9\u7684\u53e6\u4e00\u70b9\u662f\u4e0d\u591f\u7684\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u50a8\u5b58\u5f53\u524d\u7ed3\u70b9\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\u91cf $\\text{dis}$\u3002\n\n```cpp\nstruct edge {\n    int v, c, dis;\n};\nvector<edge> g[maxn];\n```\n\n\u6211\u6765\u8bf4\u4e00\u4e0b\u5b58\u56fe\u65b9\u5f0f\uff0c\u5bf9\u4e8e\u7ecf\u8fc7\u7684\u6bcf\u4e2a\u57ce\u5e02 $a_1,a_2,\\cdots,a_n$\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u5728 $a_i$ \u548c $a_j$ \u5efa\u4e00\u6761\u8fb9\uff08$i<j$\uff09\uff0c\u5176\u4e2d\u5c06 $\\text{dis}$ \u4fee\u6539\u4e3a $j-i$\uff0c\u8868\u793a\u7ecf\u8fc7\u4e86 $j-i$ \u4e2a\u57ce\u5e02\u3002\n\n\u8fd9\u4e2a\u5f88\u597d\u6a21\u62df\uff0c\u968f\u4fbf\u5199\u5199\u5c31\u53ef\u4ee5\u5199\u51fa\u6765\u4e86\u3002\n\n```cpp\nfor (int i = 1; i <= m; i++) {\n    int c, n;\n    cin >> c >> n;\n    edge tmp;\n    tmp.c = c;\n    for (int j = 1; j <= n; j++) {\n        cin >> a[j];\n    }\n    for (int j = 1; j < n; j++) {\n        for (int k = j + 1; k <= n; k++) {\n            tmp.v = a[k];\n            tmp.dis = k - j;\n            g[a[j]].push_back(tmp);\n        }\n    }\n}\n```\n\n\u7136\u540e\u6211\u4eec\u8981\u8dd1 spfa\u3002\u4f46\u662f\uff0c\u5982\u4f55\u7ef4\u62a4\u6700\u5c11\u7ecf\u8fc7\u7684\u57ce\u5e02\u5462\uff1f\u5f53 spfa \u6bcf\u6b21\u641c\u7d22\u5230\u4e00\u4e2a\u65b0\u7684\u70b9\u7684\u65f6\u5019\uff0c\u540c\u65f6\u5224\u65ad\u662f\u5426\u82b1\u8d39\u66f4\u5c11\uff0c\u6216\u8005\u662f **\u82b1\u8d39\u76f8\u540c\u4e14\u7ecf\u8fc7\u57ce\u5e02\u6700\u77ed**\u3002\u5982\u679c\u53ea\u8981\u5176\u4e2d\u6709\u4e00\u4e2a\u6761\u4ef6\u6210\u7acb\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u8fdb\u884c\u66f4\u65b0\u3002\n\n\u7531\u4e8e\u6211\u4eec\u9700\u8981\u5206\u5f00\u50a8\u5b58\u6700\u5c11\u82b1\u8d39\u548c\u6700\u5c11\u7ecf\u8fc7\u57ce\u5e02\uff0c\u6240\u4ee5\u6211\u7528 $\\text{cost}$ \u6570\u7ec4\u50a8\u5b58\u6700\u5c11\u82b1\u8d39\uff0c$\\text{sum}$ \u50a8\u5b58\u6700\u5c11\u7ecf\u8fc7\u57ce\u5e02\u3002\u5176\u4ed6\u7684\u90fd\u4e0e\u666e\u901a spfa \u65e0\u5f02\u3002\n\n```cpp\nvoid spfa(int s) {\n    memset(cost, 127, sizeof(cost));\n    memset(sum, 127, sizeof(sum));\n    inf = cost[0];\n    cost[s] = sum[s] = 0;\n    q.push(s);\n    in_queue[s] = true;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        in_queue[u] = false;\n        for (int i = 0; i < g[u].size(); i++) {\n            int v = g[u][i].v;\n            if (cost[v] > cost[u] + g[u][i].c ||\n                (cost[v] == cost[u] + g[u][i].c &&\n                 sum[u] + g[u][i].dis < sum[v])) {\n                cost[v] = cost[u] + g[u][i].c;\n                sum[v] = sum[u] + g[u][i].dis;\n                if (!in_queue[v]) {\n                    q.push(v);\n                    in_queue[v] = true;\n                }\n            }\n        }\n    }\n    return;\n}\n```\n\n\u6700\u540e\u5224\u65ad\u7ec8\u70b9\u7684 $\\text{cost}$ \u6216\u8005 $\\text{sum}$ \u662f\u5426\u662f\u7b49\u4e8e $\\text{inf}$ \u7684\uff0c\u5982\u679c\u662f\u7684\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa $\\texttt{-1 -1}$\uff0c\u5426\u5219\u76f4\u63a5\u8f93\u51fa\u3002\n\n\u8bb0\u5f97\u8981\u5f00 long long\uff0c\u9898\u76ee\u4e2d\u8bf4\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <cstring>\n#include <iostream>\n#include <queue>\n#include <vector>\nusing namespace std;\n\n#define int long long\n\nconst int maxn = 1010;\n\nstruct edge {\n    int v, c, dis;\n};\nvector<edge> g[maxn];\n\nqueue<int> q;\nint a[maxn];\nint cost[maxn], sum[maxn];\nbool in_queue[maxn];\nint inf;\n\nvoid spfa(int s) {\n    memset(cost, 127, sizeof(cost));\n    memset(sum, 127, sizeof(sum));\n    inf = cost[0];\n    cost[s] = sum[s] = 0;\n    q.push(s);\n    in_queue[s] = true;\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        in_queue[u] = false;\n        for (int i = 0; i < g[u].size(); i++) {\n            int v = g[u][i].v;\n            if (cost[v] > cost[u] + g[u][i].c ||\n                (cost[v] == cost[u] + g[u][i].c &&\n                 sum[u] + g[u][i].dis < sum[v])) {\n                cost[v] = cost[u] + g[u][i].c;\n                sum[v] = sum[u] + g[u][i].dis;\n                if (!in_queue[v]) {\n                    q.push(v);\n                    in_queue[v] = true;\n                }\n            }\n        }\n    }\n    return;\n}\n\nsigned main() {\n    int s, t, m;\n    cin >> s >> t >> m;\n    for (int i = 1; i <= m; i++) {\n        int c, n;\n        cin >> c >> n;\n        edge tmp;\n        tmp.c = c;\n        for (int j = 1; j <= n; j++) {\n            cin >> a[j];\n        }\n        for (int j = 1; j < n; j++) {\n            for (int k = j + 1; k <= n; k++) {\n                tmp.v = a[k];\n                tmp.dis = k - j;\n                g[a[j]].push_back(tmp);\n            }\n        }\n    }\n    spfa(s);\n    if (cost[t] == inf || sum[t] == inf) {\n        cout << -1 << ' ' << -1 << endl;\n    } else {\n        cout << cost[t] << ' ' << sum[t] << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1646053052,
        "uid": 670262,
        "name": "Cerisier",
        "ccfLevel": 0,
        "title": "P3115 [USACO15JAN]Cow Routing S \u9898\u89e3"
    },
    {
        "content": "\n\n------------\n[\u9898\u9762](https://www.luogu.com.cn/problem/P3115)\n\n\u9898\u76ee\u5927\u610f\uff1a\n------------\n\u7ed9\u4f60\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u5e76\u7ed9\u51fa\u8bb8\u591a\u6761**\u4ece\u524d\u5f80\u540e**\u4e92\u76f8\u80fd\u5230\u8fbe\u7684\u8fb9\uff0c\u6c42\u51fa\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u548c\u4e58\u5750\u98de\u673a\u7684\u6b21\u6570\uff08\u5230\u8fbe\u4e00\u4e2a\u57ce\u5e02\u7b97\u4e00\u6b21~~\u672c\u849f\u84bb\u4e00\u5f00\u59cb\u6ca1\u770b\u6e05\u9898\u76ee\uff0c\u6c42\u4e86\u822a\u73ed\u6570~~\uff09\u3002\n\n------------\n\u601d\u8def\n------------\n\u5982\u679c\u6bcf\u4e00\u6b21\u8bfb\u5165\u8fdb\u7684\u822a\u73ed\u5305\u542b\u57ce\u5e02\u6570\u4e3a $n$\u3002\n\n\u5219\u5148\u628a\u8bfb\u5165\u8fdb\u6765\u7684\u822a\u73ed\u90fd\u505a $n*(n-1)/2$ \u6b21\u5efa\u8fb9\uff0c\n\u7136\u540e\u5c31\u662f\u6c42\u6700\u77ed\u8def\u4e0e\u4e58\u5750\u98de\u673a\u7684\u6b21\u6570\u4e86\u3002\n\n\u5728\u6b64\u786e\u5b9a\u4e0b\u90bb\u63a5\u8868\u5e94\u8be5\u5f00\u591a\u5927\uff0c\u56e0\u4e3a $n$ \u6700\u5927\u4e3a $100$\uff0c\u6240\u4ee5\u4e00\u6b21\u6700\u591a\u80fd\u5efa $4950$\uff0c\u800c\u6700\u591a\u6709 $1000$ \u4e2a\u822a\u73ed\uff0c\u56e0\u6b64\u5e94\u8be5\u518d $4950$ \u7684\u57fa\u7840\u4e0a\u4e58 $1000$\uff0c\u6545\u5e94\u5f00\u5230 $4950000$\u3002\n\n\u7531\u4e8e\u6b64\u9898\u6ca1\u6709\u51fa\u73b0\u8d1f\u73af\u60c5\u51b5\uff0c\u56e0\u6b64\u7acb\u523b\u51b3\u5b9a\u6253 Dijkstra\u3002\n\n\u5f53\u7136\u666e\u901a\u7684 Dijkstra \u663e\u7136\u53ea\u80fd\u5904\u7406\u6700\u77ed\u8def\u95ee\u9898\uff0c\u65e0\u6cd5\u89e3\u51b3\u4e58\u5750\u98de\u673a\u7684\u6b21\u6570\u7684\u95ee\u9898\uff0c\u56e0\u6b64\u6211\u4eec\u5e94\u8be5\u591a\u5f00\u4e00\u4e2a\u6570\u7ec4 $tim[i]$ \u5b58\u6b21\u6570\uff0c\u5e76\u5728\u90bb\u63a5\u8868\u4e2d\u52a0\u4e00\u4e2a\u53d8\u91cf\u5b58\u8be5\u8fb9\u7684\u6b21\u6570\u7684\u53d8\u91cf $tim$\u3002\n\n\u5047\u8bbe\u6b63\u5728\u505a $start$ \u8fd9\u4e2a\u70b9\uff0c$to$ \u4e3a\u904d\u5386\u7684\u70b9\uff0c$dis[i]$ \u5b58\u50a8\u6700\u5c11\u82b1\u8d39\uff0c$e[i]$ \u4e3a\u90bb\u63a5\u8868\u3002\n\n- \u5982\u679c $dis[to]>dis[start]+e[i].dis$\uff0c\u628a $dis[to]$ \u8d4b\u503c\u4e3a $dis[start]+e[i].dis$\uff0c$tim[to]$ \u4e5f\u53d8\u4e3a $tim[start]+e[i].tim$\n- \u5982\u679c $dis[to]==dis[start]+e[i].dis$\uff0c\u5219 $tim[to]=min(tim[to],tim[start]+e[i].tim)$\n\n------------\n\n**AC code**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=4950001,NN=1001;\nint cnt,n,i,j,k,h[NN],vis[NN],tim[NN],A,B,N,v,a[101];\nlong long dis[NN];\nstruct Node{int dis,to,nex,tim;}e[M];\nvoid add(int x,int y,int v,int tim){//\u90bb\u63a5\u8868\n\te[++cnt].dis=v;\n\te[cnt].to=y;\n\te[cnt].nex=h[x];\n\te[cnt].tim=tim;\n\th[x]=cnt;\n}\npriority_queue<pair<long long,int> ,vector<pair<long long,int> > ,greater<pair<long long,int> > > q;//pair\u6309\u7167\u7b2c1\u4e2a\u5173\u952e\u5b57\u6392\u5e8f\nvoid Dijkstra(int x){//\u5806\u4f18\u5316+Dijkstra\n\tint start,to,i;\n\tmemset(dis,127,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(tim,0,sizeof(tim));\n\tq.push(make_pair(0,x));dis[x]=0;\n\twhile(!q.empty()){\n\t\tstart=q.top().second;//\u53d6\u51fa\u5f00\u59cb\u8282\u70b9\n\t\tq.pop();\n\t\tif(vis[start])continue;//\u5982\u679c\u5df2\u7ecf\u505a\u8fc7\u4e86\u5c31\u6362\u4e0b\u4e00\u4e2a\n\t\tvis[start]=1;//\u628a\u5f00\u59cb\u8282\u70b9\u8d4b\u503c\u4e3a\u505a\u8fc7\n\t\tfor(i=h[start];i;i=e[i].nex){\n\t\t\tto=e[i].to;\n\t\t\tif(dis[to]>dis[start]+e[i].dis){\n\t\t\t\tdis[to]=dis[start]+e[i].dis;tim[to]=tim[start]+e[i].tim;\n\t\t\t\tif(!vis[to])q.push(make_pair(dis[to],to));\n\t\t\t}\n\t\t\telse if(dis[to]==dis[start]+e[i].dis)tim[to]=min(tim[to],tim[start]+e[i].tim);\n\t\t}\n\t}\n}\nvoid read(int &x){//\u5feb\u8bfb\n\tx=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n}\nsigned main(){\n\tread(A);read(B);read(N);\n\tfor(i=1;i<=N;i++){\n\t\tread(v);read(n);\n\t\tfor(j=1;j<=n;j++)read(a[j]);\n\t\tfor(j=1;j<n;j++)//\u5efa\u8fb9\n\t\t\tfor(k=j+1;k<=n;k++)\n\t\t\t\tadd(a[j],a[k],v,k-j);\n\t}\n\tDijkstra(A);\n\tdis[B]==dis[0]?printf(\"-1 -1\\n\"):printf(\"%lld %lld\\n\",dis[B],tim[B]);//\u5224\u65ad\u5982\u679cdis[B]\u6ca1\u6709\u66f4\u65b0\u8fc7\u5c31\u8f93\u51fa2\u4e2a-1\n}\n```\n------------\n\u5728\u5355\u6e90\u975e\u8d1f\u6743\u6700\u77ed\u8def\u95ee\u9898\u4e2d\uff0cDijkstra \u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$ \u662f\u8f83\u4e3a\u7a33\u5b9a\u7684\uff0c\u4e0d\u50cf SPFA\uff0c\u9762\u5bf9\u4e00\u4e9b\u6570\u636e\u53ef\u80fd\u4f1a\u88ab\u5361\u6389\u3002\n\n\u800c\u5f53 Dijkstra \u5728\u7ecf\u8fc7\u5806\u4f18\u540e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5219\u4f1a\u53d8\u4e3a $O((n+m)log_2n)$\uff0c\u76f8\u6bd4\u4e0e\u539f\u6765\u5c31\u663e\u5f97\u975e\u5e38\u53ef\u89c2\u4e86\n\u3002\n\u56e0\u6b64\u672c\u849f\u84bb\u5728\u6b64\u5f3a\u70c8\u63a8\u8350\u4e0d\u4f1a Dijkstra \u7684\u4eba\u53bb\u5b66\u4e60\u4e00\u4e0b Dijkstra\u3002\n\n[\u5165\u95e8\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P3371)\n\n[\u5806\u4f18\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P4779)\n\n\u5176\u4f59\u9898\u76ee\u53ef\u4ee5\u641c\u7d22\u6807\u7b7e**\u6700\u77ed\u8def**\u6216**Dijkstra**\u3002\n\n------------\n# The End.",
        "postTime": 1640266810,
        "uid": 352390,
        "name": "a_grain",
        "ccfLevel": 0,
        "title": "P3115\u7684\u9898\u89e3"
    },
    {
        "content": "# \u89e3\u9898\u601d\u8def\uff1a\n\n\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053\u88f8\u7684\u6700\u77ed\u8def\u677f\u5b50\u9898\u554a\uff01\n\n\u4e0d\u8fc7\u5c31\u662f\u6362\u4e86\u4e00\u4e0b\u5efa\u8fb9\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u6761\u822a\u7ebf\u4e2d\u6bcf\u4e00\u4e2a\u57ce\u5e02\u548c\u5728\u822a\u7ebf\u4e2d\u987a\u5e8f\u5728\u5176\u540e\u7684\u6bcf\u4e00\u4e2a\u57ce\u5e02\u6709\u4e00\u6761\u8fb9\uff0c\u8fb9\u6743\u5df2\u7ed9\uff0c\u7ecf\u8fc7\u57ce\u5e02\u6570\u91cf\u4e5f\u5f88\u597d\u7b97\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u4f7f\u7528\u54ea\u79cd\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u53d1\u73b0 $n\\le1000$ \uff01 $\\Theta(n^2)$ \u7684\u666e\u901aDijkstra\u7b97\u6cd5\u5373\u53ef\u901a\u8fc7\u3002\n\n\u6700\u540e\u63d0\u4f9b\u4e00\u4e2a\u76f8\u5bf9\u53ef\u80fd\u6bd4\u5176\u4ed6\u9898\u89e3\u77ed\u4e00\u4e9b\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n\nusing namespace std;\nusing LL = long long;\nusing pii = pair<pair<int, int>, int>;\n\nconst int kMaxN = 1001;\n\nint n, A, B, p, m;\nbool b[kMaxN];\n\nstruct node {\n  LL d = 1LL << 60;//\u6700\u77ed\u8def\u957f\u5ea6\n  bool b;\n  int hd = 1 << 30;//\u6700\u5c0f\u7ecf\u8fc7\u57ce\u5e02\u6570\n  vector<pii>e;//\u8fd9\u4e2a\u5730\u65b9\u6211\u76f4\u63a5\u7528\u4e86pair\uff0c\u5206\u522b\u5b58\u8def\u5f84\u957f\u5ea6\uff0c\u7ecf\u8fc7\u57ce\u5e02\u6570\u548c\u8def\u5f84\u7ec8\u70b9\n}a[kMaxN];\n\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(NULL), cout.tie(NULL);//\u61d2\u4eba\u5feb\u8bfb\u5feb\u5199\n  cin >> A >> B >> m;\n  for (int i = 1, v, w, c[101]; i <= m; i++) {\n    cin >> v >> w;\n    for (int j = 1; j <= w; j++) {\n      cin >> c[j];\n      if (!b[c[j]]) {//\u8fd9\u4e2a\u5730\u65b9\u7b97\u7684\u662f\u57ce\u5e02\u7684\u6570\u91cf\n        n++, b[c[j]] = 1;\n      }\n    }\n    for (int j = 1; j < w; j++) {//\u6211\u5e76\u6ca1\u6709\u53bb\u91cd\u8fb9\uff0c\u56e0\u4e3a\u6ca1\u6709\u5fc5\u8981\uff0c\u4e0d\u5f71\u54cd\u7b97\u6cd5\u6b63\u786e\u6027\n      for (int k = j + 1; k <= w; k++) {\n        a[c[j]].e.push_back({{v, k - j}, c[k]});\n      }//\u679a\u4e3e\u6bcf\u4e00\u5bf9\u57ce\u5e02\u8fde\u8fb9\n    }\n  }\n  a[A].d = a[A].hd = 0;\n  for (int i = 1; i <= n; i++) {//\u6734\u7d20dij\n    p = 0;\n    for (int j = 1; j <= n; j++) {\n      if (!a[j].b && (!p || a[p].d > a[j].d || (a[p].d == a[j].d && a[p].hd > a[j].hd))) {\n        p = j;\n      }\n    }\n    if (!p) {\n      break;\n    }\n    a[p].b = 1;\n    for (pii j : a[p].e) {\n      if ((a[p].d + j.first.first) < a[j.second].d || \n      ((a[p].d + j.first.first) == a[j.second].d && (a[p].hd + j.first.second) < a[j.second].hd)) {//\u6ce8\u610f\u662f\u53cc\u5173\u952e\u5b57\n        a[j.second].d = a[p].d + j.first.first, a[j.second].hd = a[p].hd + j.first.second;\n      }\n    }\n  }\n  cout << (a[B].d == (1LL << 60) ? -1 : a[B].d) << \" \" << (a[B].hd == (1 << 30) ? -1 : a[B].hd) << \"\\n\";//\u5224\u65e0\u89e3\n  return 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1\u3002",
        "postTime": 1628758479,
        "uid": 203317,
        "name": "Parat_rooper",
        "ccfLevel": 0,
        "title": "P3115\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u95ee\u9898\u3002\n\n\u6ce8\u610f\u662f\u8981\u6c42\u7684\u662f\u6700\u77ed\u8ddd\u79bb\u8fd8\u6709\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\uff0c\u4e0d\u5305\u62ec\u8d77\u70b9\u3002\n\n\u8fd9\u91cc\u9700\u8981\u628a\u6bcf\u4e2a\u98de\u673a\u7684\u8def\u7ebf\u8f6c\u5316\u4e3a\u8fb9\uff0c\u6ce8\u610f\u5230\u8fd9\u91cc\u53ef\u80fd\u6709\u91cd\u8fb9\uff0c\u4f46\u5982\u679c\u4e0d\u5904\u7406\u91cd\u8fb9\u7684\u8bdd\uff0c\u5c31\u6709$10^7$\u6761\u8fb9\uff0c\u8fb9\u6570\u660e\u663e\u592a\u5927\u4e86\u3002\u4f46\u5982\u679c\u5904\u7406\u91cd\u8fb9\u7684\u8bdd\u5c31\u4f1a\u5c11\u5f88\u591a\u3002\u65e2\u7136\u8981\u5904\u7406\u91cd\u8fb9\uff0c\u6211\u4eec\u5e72\u8106\u5c31\u62ff\u90bb\u63a5\u77e9\u9635\u5b58\uff0c\u7136\u540e\u8dd1$O(n^2)$\u7684dij\uff08\u662f\u4e0d\u662f\u6709\u76f4\u63a5\u5b66\u5806\u4f18\u5316\u7684\uff0c\u6734\u7d20\u6ca1\u5b66\u7684\uff1f[\u770b\u8fd9](https://blog.csdn.net/Mr_Kingk/article/details/100175811)\uff09\u3002\n\n\u7531\u4e8e\u8981\u8003\u8651\u57ce\u5e02\u6570\uff0c\u6240\u4ee5\u6bcf\u6b21\u627e\u6700\u5c0f\u7684\u65f6\u5019\u5982\u679c$dis$\u4e00\u6837\u5c31\u8981\u6bd4\u4e00\u4e0b\u57ce\u5e02\u6570\uff0c\u54ea\u4e2a\u5c11\u5c31\u53d6\u54ea\u4e2a\u3002\u6ce8\u610f\u6bcf\u6b21\u66f4\u65b0\u4e5f\u8981\u66f4\u65b0\u57ce\u5e02\u6570\u3002\n\n\u6700\u540e\u8981\u6ce8\u610f2\u70b9\uff1a\n1. \u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00ll\u89c1\u7956\u5b97\uff01\n2. \u6ce8\u610f\u4e0d\u80fd\u5230\u8fbe\u8f93\u51fa-1\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<algorithm>\nusing namespace std;\nconst int NR=1e3+5;\nconst int MR=1e5+5;\nconst int INF=0x3f3f3f3f;\ntypedef long long LL;\ninline int read()\n{\n\tint x=0;\n\tint bei=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\t\tbei=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*=bei;\n}\nLL g[NR][NR];\nint cnt[NR][NR];\nint a[105];\nLL dis[NR];\nint city[NR];\nbool book[NR];\nint n=1000;\nvoid dij(int s)\n{\n\tmemset(dis,0x3f3f,sizeof(dis));\n\tmemset(city,0x3f,sizeof(city));\n\tdis[s]=0;\n\tcity[s]=0;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tLL minn=0x3f3f3f3f3f3f3f3f;\n\t\tint ci=INF;\n\t\tint mini;\n\t\tfor(int j=1;j<=n;++j)\n\t\t{\n\t\t\tif(book[j])\n\t\t\t\tcontinue;\n\t\t\tif(dis[j]<minn)\n\t\t\t\tminn=dis[j],ci=city[j],mini=j;\n\t\t\telse if(dis[j]==minn&&ci>city[j])\n\t\t\t\tci=city[j],mini=j;\n\t\t}\n\t\tbook[mini]=1;\n\t\tfor(int j=1;j<=n;++j)\n\t\t{\n\t\t\tif(dis[j]>minn+g[mini][j])\n\t\t\t\tdis[j]=minn+g[mini][j],city[j]=ci+cnt[mini][j];\n\t\t\telse if(dis[j]==minn+g[mini][j]&&city[j]>ci+cnt[mini][j])\n\t\t\t\tcity[j]=ci+cnt[mini][j];\n\t\t}\n\t}\n}\nint main()\n{\n\tint s=read(),t=read(),N=read();\n\tmemset(g,0x3f3f,sizeof(g));\n\tfor(int i=1;i<=N;++i)\n\t{\n\t\tint co=read(),ci=read();\n\t\tfor(int i=1;i<=ci;++i)\n\t\t\ta[i]=read();\n\t\tfor(int i=1;i<=ci;++i)\n\t\t\tfor(int j=i+1;j<=ci;++j)\n\t\t\t{\n\t\t\t\tif(g[a[i]][a[j]]>co)\n\t\t\t\t\tg[a[i]][a[j]]=co,cnt[a[i]][a[j]]=j-i;\n\t\t\t\telse if(g[i][j]==co)\n\t\t\t\t\tcnt[a[i]][a[j]]=min(cnt[a[i]][a[j]],j-i);\n\t\t\t}\n\t}\n\tdij(s);\n\tif(dis[t]==0x3f3f3f3f3f3f3f3f)\n\t\tdis[t]=city[t]=-1;\n\tprintf(\"%lld %d\",dis[t],city[t]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1592051234,
        "uid": 173840,
        "name": "\u5c0f\u6050",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3115 \u3010[USACO15JAN]Cow Routing S\u3011"
    },
    {
        "content": "## Sol ##\n\n[blog\u98df\u7528](http://www.caolaoshi.men/index.php/archives/usaco15jan-cowrout.html)\n\n\u54c7\uff0c\u7b2c\u4e00\u6b21\u5199\u90bb\u63a5\u77e9\u9635\u7684$dij$\uff01\uff01\uff01\u4ee5\u524d\u90fd\u662f\u7528\u90bb\u63a5\u8868\u5b58\u7684\uff0c\u8fd9\u6b21\u4e0d\u592a\u4e00\u6837\uff0c**\u56e0\u4e3a\u8fb9\u6bd4\u8f83\u591a\uff0c\u90bb\u63a5\u8868\u7684\u8bdd\u8981\u5f00\u7684\u7a7a\u95f4\u5f88\u5927\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u867d\u7136\u8fb9\u5f88\u591a\uff0c\u4f46\u662f\u70b9\u5f88\u5c11\uff0c\u6240\u4ee5\u8003\u8651\u7528\u90bb\u63a5\u77e9\u9635\u6765\u505a\u3002**\n\n\u5bf9\u4e8e\u56fe\u7684\u5b58\u50a8\uff0c\u6bcf\u4e00\u4e2a\u70b9\u90fd\u4f1a\u5230\u5b83\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u6709\u4e00\u6761\u957f\u5ea6\u4e3a\u8be5\u822a\u73ed\u82b1\u8d39\u7684\u8def\u5f84\uff0c**\u4f46\u662f\u80af\u5b9a\u4f1a\u6709\u91cd\u590d\u7684\u8def\u5f84\uff0c\u6240\u4ee5\u6211\u4eec\u53d6\u4e00\u4e0b\u91cd\u590d\u8def\u5f84\u4e2d\u6700\u77ed\u7684\u90a3\u6761\u5c31\u597d\u4e86**\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u8fd8\u8bf4\u8981\u7ecf\u8fc7\u7684\u57ce\u5e02\u6700\u5c11\uff0c\u6240\u4ee5\u5462\uff0c\u6211\u8fd9\u91cc\u5efa\u56fe\u5176\u5b9e\u8fd8\u662f\u4e0d\u592a\u4e25\u8c28\u7684\uff0c\u56e0\u4e3a\u5efa\u56fe\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u51fa\u73b0\u957f\u5ea6\u76f8\u7b49\u4f46\u662f\u7ecf\u8fc7\u7684\u57ce\u5e02\u6bd4\u8f83\u5c11\uff0c\u6211\u4eec\u4e5f\u8981\u66f4\u65b0\u4e00\u6b21\u3002\n\n\u7136\u540e\uff0c\u5c31\u662f\u4e00\u4e2a\u53cc\u5173\u952e\u503c\u7684$dij$\uff0c\u4e0d\u77e5\u9053\u4e3a\u561b\u9898\u89e3\u4e2d\u90fd\u7528\u7684$spfa$\uff0c$dij$\u5f88\u96be\u5199\u5417\uff1f\uff1f\uff1f\u4e0e\u5f80\u5e38\u4e0d\u592a\u4e00\u6837\u7684\u662f\uff0c\u5728\u66f4\u65b0\u7b54\u6848\u7684\u65f6\u5019\uff0c**\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u5c31\u662f\u4e0a\u9762\u8bf4\u7684\uff1a\u5c3d\u91cf\u9009\u8def\u5f84\u6bd4\u8f83\u77ed\u7684\uff0c\u5982\u679c\u8def\u5f84\u76f8\u7b49\uff0c\u9009\u7ecf\u8fc7\u70b9\u5c11\u7684\u3002**\u7528\u4f18\u5148\u961f\u5217\u52a0\u4ee5\u7ef4\u62a4\uff0c\u6700\u540e\u5982\u679c\u76ee\u7684\u5730\u7684\u8ddd\u79bb\u6ca1\u6709\u88ab\u66f4\u65b0\uff0c\u5c31\u8bf4\u660e\u5230\u4e0d\u4e86\uff0c\u5c31\u8f93\u51fa-1\u4ec0\u4e48\u7684\u5c31\u597d\u4e86\u3002\n\n## Code ##\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<algorithm>\nusing namespace std;\n\nstruct Road {\n\tlong long num , len , city;\n\tRoad(long long nn , long long dd , long long ss) {\n\t\tnum = nn , len = dd , city = ss;\n\t}\n\tbool operator < (const Road &a) const {\n\t\treturn (len > a.len) || (len == a.len && city > a.city);\n\t}\n};\nlong long dis[1005] , city[1005];\nlong long s , t , n , road[105] , maxx , map[1005][1005] , ci[1005][1005];\n\nlong long max(long long a , long long b) {\n\treturn a>b?a:b;\n}\n\nvoid dij(long long s) {\n\tmemset(dis , 0x3f , sizeof(dis));\n\tmemset(city , 0x3f , sizeof(city));\n\tpriority_queue<Road>q;\n\tdis[s] = city[s] = 0;\n\tq.push(Road(s,dis[s],city[s]));\n\twhile(!q.empty()) {\n\t\tRoad u = q.top();\n\t\tq.pop();\n\t\tif(u.len != dis[u.num] || u.city != city[u.num])\n\t\t\tcontinue;\n\t\tfor(int i=1; i<=maxx; i++)\n\t\t\tif(dis[u.num]+map[u.num][i] < dis[i] || (dis[u.num]+map[u.num][i] == dis[i] && city[u.num]+ci[u.num][i] < city[i])) {\n\t\t\t\tdis[i] = dis[u.num] + map[u.num][i];\n\t\t\t\tcity[i] = city[u.num] + ci[u.num][i];\n\t\t\t\tq.push(Road(i , dis[i] , city[i]));\n\t\t\t}\n\t}\n}\n\nint main() {\n\tmemset(map , 0x3f , sizeof(map));\n\tmemset(ci , 0x3f , sizeof(ci));\n\tscanf(\"%lld%lld%lld\",&s,&t,&n);\n\tfor(long long i=1; i<=n; i++) {\n\t\tlong long x , y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tfor(long long j=1; j<=y; j++) {\n\t\t\tscanf(\"%lld\",&road[j]);\n\t\t\tmaxx = max(maxx ,road[j]);\n\t\t}\n\t\tfor(long long j=1; j<=y; j++)\n\t\t\tfor(long long k=j+1; k<=y; k++)\n\t\t\t\tif(x < map[road[j]][road[k]]) {\n\t\t\t\t\tmap[road[j]][road[k]] = x;\n\t\t\t\t\tci[road[j]][road[k]] = k-j;\n\t\t\t\t}\t\n\t}\n\tdij(s);\n\tif(dis[t] == dis[0])\n\t\tprintf(\"-1 -1\");\n\telse\n\t\tprintf(\"%lld %lld\",dis[t],city[t]);\n\treturn 0;\n}\n```\n\n\n  [1]: https://www.luogu.org/problemnew/show/P3115",
        "postTime": 1535098136,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3115 \u3010[USACO15JAN]\u725b\u8def\u7ebfCow Routing\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u82e5\u5e72\u6761\u822a\u7ebf\uff0c\u6bcf\u6761\u822a\u7ebf\u4e0a\u4efb\u4e24\u70b9\u4e4b\u95f4\u7684\u82b1\u8d39\u76f8\u7b49\u3002\u6c42 $1$ \u70b9\u5230 $n$ \u70b9\u7684\u6700\u77ed\u8def\uff08\u7b2c\u4e00\u4f18\u5148\u4e3a\u82b1\u8d39\uff0c\u7b2c\u4e8c\u4f18\u5148\u4e3a\u4e58\u5750\u98de\u673a\u6570\uff09\u3002\n\n## \u601d\u8def\n\n\u5efa\u8fb9\u540e\u8dd1\u6700\u77ed\u8def\uff0c\u56e0\u4e3a\u6709\u4f18\u5148\u5ea6\u95ee\u9898\uff0c\u6240\u4ee5\u53ef\u4ee5\u91cd\u8f7d\u4e00\u4e0b\u5c0f\u4e8e\u53f7\uff08\u6211\u6ca1\u6709\u91cd\u8f7d\uff0c\u7528\u4e00\u4e2a ~~\u5f88\u957f\u7684~~ `if` \u5c31\u6709\u540c\u6837\u6548\u679c\uff09\u3002\n\n\u6709\u91cd\u8fb9\uff0c\u7ee7\u800c\u90bb\u63a5\u8868\u4e0d\u592a\u80fd\u7528\uff0c\u56e0\u4e3a `vector` \u4e0d\u592a\u80fd\u5224\u91cd\u7f16\uff1b\u6240\u4ee5\u8fd9\u9053\u9898\u5b9e\u9645\u4e0a\u662f**\u90bb\u63a5\u77e9\u9635\u7684\u6700\u77ed\u8def**\u3002\n\n\u6709\u91cd\u8fb9\uff0c\u90a3\u4e48\u90bb\u63a5\u77e9\u9635\u5c31\u8981\u5b58\u6700\u4f18\u7684\uff0c\u5c31\u53ef\u4ee5\u7528\u4e0a\u9762\u8bf4\u7684\u957f `if` \u89e3\u51b3\uff0c\u5728\u6700\u77ed\u8def\u66f4\u65b0 `dis` \u4e2d\u4e5f\u6709\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002\n\n```cpp\n// w[i][j] \u8868\u793a i \u5230 j \u7684\u82b1\u8d39\uff0cs[i][j] \u8868\u793a i \u5230 j \u7684\u4e58\u5750\u98de\u673a\u6570\n// \u5982\u679c\u7b2c\u4e00\u4f18\u5148 w \u66f4\u5c0f\uff0c\u6216\u8005 w \u4e00\u6837\u5e76\u4e14 s \u66f4\u5c0f\uff0c\u5c31\u66f4\u65b0\nif (w[t[x]][t[y]] > tw || (w[t[x]][t[y]] == tw && s[t[x]][t[y]] > y - x))  \n\tw[t[x]][t[y]] = tw, s[t[x]][t[y]] = y - x;\n```\n\n\u56e0\u4e3a\u6709\u4e00\u4e2a\u53d6\u66f4\u5c0f\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u5728\u5efa\u8fb9\u548c\u6700\u77ed\u8def\u4e4b\u524d\u8981 `memset`\u3002\n\n$d1_{i}$ \u8868\u793a $1$ \u53f7\u70b9\u5230 $i$ \u53f7\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u540c\u7406 $d2_{i}$ \u8868\u793a $1$ \u53f7\u70b9\u5230 $i$ \u53f7\u70b9\u7684\u6700\u5c0f\u4e58\u5750\u98de\u673a\u6570\u3002\n\n## AC Code\n\n\u8fd9\u91cc\u59d1\u4e14\u5148\u7528 SPFA \u5b9e\u73b0 ~~\uff08\u4e0d\u4f1a\u88ab\u5361\uff09~~\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint a, b, n, n2;\nint t[1010];\nlong long d1[1010], d2[1010];\nbool vis[1010];\nint w[1010][1010], s[1010][1010];\n\nvoid spfa()\n{\n\tmemset(d1, 0x3f, sizeof(d1));\n\tmemset(d2, 0x3f, sizeof(d2));\n\tmemset(vis, false, sizeof(vis));\n\td1[a] = 0, d2[a] = 0;\n\tqueue<int> q;\n\tq.push(a);\n\tvis[a] = true;\n\twhile (!q.empty())\n\t{\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tvis[u] = false;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t{\n\t\t\tif (w[u][i] > 1e9) continue;\n\t\t\tif (d1[u] + w[u][i] < d1[i] || (d1[u] + w[u][i] == d1[i] && d2[u] + s[u][i] < d2[i]))\n\t\t\t{\n\t\t\t\td1[i] = d1[u] + w[u][i];\n\t\t\t\td2[i] = d2[u] + s[u][i];\n\t\t\t\tif (!vis[i])\n\t\t\t\t{\n\t\t\t\t\tq.push(i);\n\t\t\t\t\tvis[i] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tcin >> a >> b >> n2;\n\tmemset(w, 0x3f, sizeof(w));\n\tmemset(s, 0x3f, sizeof(s));\n\tfor (int i = 1; i <= n2; i++)\n\t{\n\t\tint tw, m;\n\t\tcin >> tw >> m;\n\t\tfor (int j = 1; j <= m; j++) \n\t\t{\n\t\t\tcin >> t[j];\n\t\t\tn = max(n, t[j]);\n\t\t}\n\t\tfor (int x = 1; x < m; x++)\n\t\t\tfor (int y = x + 1; y <= m; y++)\n\t\t\t\tif (w[t[x]][t[y]] > tw || (w[t[x]][t[y]] == tw && s[t[x]][t[y]] > y - x))  \n\t\t\t\t    w[t[x]][t[y]] = tw, s[t[x]][t[y]] = y - x;\n\t}\n\tspfa();\n\tif (d1[b] > 1e18) cout << \"-1 -1\\n\";\n\telse cout << d1[b] << \" \" << d2[b] << endl;\n\treturn 0;\n}\n```",
        "postTime": 1678499819,
        "uid": 548203,
        "name": "KK_lang",
        "ccfLevel": 5,
        "title": "P3115 \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u5b9a $N$ \u6761\u8def\u7ebf\u53ca\u5176\u8d39\u7528\uff0c\u6c42\u4ece $A$ \u5230 $B$ \u7684\u6700\u5c0f\u8d39\u7528\uff0c\u4ee5\u53ca\u5728\u6700\u5c0f\u8d39\u7528\u524d\u63d0\u4e0b\uff0c\u6700\u5c11\u7ecf\u8fc7\u7684\u8fb9\u7684\u6570\u91cf\u3002\n## \u601d\u8def\n\u6bcf\u6761\u7ebf\u8def\u4f7f\u5f97\u7ebf\u8def\u4e0a\u7684\u4e00\u4e9b\u70b9\u5bf9\u53ef\u4ee5\u4e92\u8fbe\uff0c\u5e76\u4e14\u4ee3\u4ef7\u4e3a\u7ebf\u8def\u8d39\u7528\uff0c\u8fb9\u7684\u6570\u91cf\u4e3a\u70b9\u5bf9\u5728\u7ebf\u8def\u4e2d\u7684\u8ddd\u79bb\u3002\u7531\u6b64\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u5f20\u56fe\uff0c\u8981\u6c42\u7684\u5c31\u662f $A$ \u5230 $B$ \u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u7531\u4e8e\u70b9\u6570\u3001\u7ebf\u8def\u6570\u91cf\u90fd\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u7ebf\u8def\u4e2d\u7684\u70b9\u5bf9\u6784\u56fe\uff0c\u7136\u540e\u7528 Dijkstra \u7b97\u6cd5\u6c42\u6700\u77ed\u8def\u5373\u53ef\u3002\n## \u590d\u6742\u5ea6\n\u4ee4\u70b9\u6570\u4e3a $O(M)$\uff0c\u672c\u9898\u4e2d $M = 1000$\u3002\n\n\u4ee4\u7ebf\u8def\u957f\u5ea6\u4e3a $O(L)$\uff0c\u672c\u9898\u4e2d $L = 100$\u3002\n### \u65f6\u95f4\n\u7ebf\u8def\u6570\u91cf $O(N)$\uff0c\u679a\u4e3e\u70b9\u5bf9\u6784\u56fe $O(L^2)$\uff0c\u603b\u5171 $O(NL^2)$\u3002\u6c42\u6700\u77ed\u8def $O(M^2)$\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(NL^2+M^2)$\u3002\n### \u7a7a\u95f4\n\u8bb0\u5f55\u90bb\u63a5\u77e9\u9635 $O(M^2)$\u3002\u8bb0\u5f55\u7ebf\u8def $O(M)$\u3002\u603b\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(M^2)$\u3002\n## CODE\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing LL = long long;\nusing Pil = pair<LL, int>;  // \u8ddd\u79bb\u3001\u8fb9\u6570\nconst int kMaxN = 1001;\nconst LL kInf = 1e18;\nPil l[kMaxN][kMaxN], d[kMaxN];\nint q[kMaxN], a, b, c, n, m;\nint main() {\n  fill(l[0], l[kMaxN], (Pil){kInf, 0});  // \u521d\u59cb\u5316\u90bb\u63a5\u77e9\u9635\n  cin >> a >> b >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> c >> m;\n    for (int j = 1; j <= m; j++) {\n      cin >> q[j];\n      for (int k = 1; k < j; k++) {                      // \u679a\u4e3e\u822a\u7ebf\u4e0a\u9760\u524d\u7684\u70b9\n        l[q[k]][q[j]] = min(l[q[k]][q[j]], {c, j - k});  // \u66f4\u65b0\u822a\u7ebf\u4e0a\u4e24\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n      }\n    }\n  }\n  fill(q, q + kMaxN, 0), fill(d, d + kMaxN, (Pil){kInf, 0});  // \u521d\u59cb\u5316\u6807\u8bb0\u6570\u7ec4\u548c\u8ddd\u79bb\u6570\u7ec4\n  d[a] = {0, 0};                                              // \u521d\u59cb\u5316\u8d77\u70b9\u8ddd\u79bb\n  for (int i = 1; i < kMaxN; i++) {\n    int p = 0;\n    for (int j = 1; j < kMaxN; j++) {  // \u5bfb\u627e\u8ddd\u79bb\u6700\u8fd1\u7684\u70b9\n      if (!q[j] && (!p || d[j] < d[p])) {\n        p = j;\n      }\n    }\n    q[p] = 1;                          // \u6807\u8bb0\u5230\u8fbe\n    for (int j = 1; j < kMaxN; j++) {  // \u66f4\u65b0\u5176\u4ed6\u70b9\u7684\u8ddd\u79bb\n      d[j] = min(d[j], {d[p].first + l[p][j].first, d[p].second + l[p][j].second});\n    }\n  }\n  if (d[b].first == kInf) {\n    cout << \"-1 -1\";\n  } else {\n    cout << d[b].first << \" \" << d[b].second;\n  }\n  return 0;\n}\n```",
        "postTime": 1661065103,
        "uid": 444534,
        "name": "\u54c8\u58eb\u5947\u61a8\u61a8",
        "ccfLevel": 5,
        "title": "P3115 [USACO15JAN]Cow Routing S"
    },
    {
        "content": "\u4ecb\u7ecd\u4e00\u79cd\u6bd4\u8f83\u4f18\u79c0\u7684\u90bb\u63a5\u8868\u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u7531\u4e8e\u9898\u76ee\u4e2d\u4f7f\u7528\u53cc\u5173\u952e\u5b57\u6700\u77ed\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u5c06\u5176\u53d8\u6210\u5355\u5173\u952e\u5b57\uff1a\n\n- \u5c06 $(a_i,b_i)$ \u7528 $a_ic+b_i$ \u66ff\u6362\uff0c\u5176\u4e2d $c>\\max b_i$\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u53cc\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u53c8\u51cf\u5c11\u4ee3\u7801\u96be\u5ea6\u3002\u5728\u5b9e\u9645\u7684\u6d4b\u8bd5\u4e2d $c$ \u53d6\u5230 $1000$ \u5373\u53ef\u3002\n\n\u6211\u4eec\u6765\u8003\u8651\u5177\u4f53\u6784\u9020\u3002\u6839\u636e\u9898\u610f\uff0c\u6bcf\u4e00\u73ed\u822a\u73ed\u9700\u8981\u4e00\u5b9a\u7684\u82b1\u8d39\uff08\u4e0b\u6587\u7528 $w_i$ \u8868\u793a\uff09\u201c\u4e0a\u8f66\u201d\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u57ce\u5e02\u53c8\u9700\u8981 $1$ \u7684\uff0c\u6211\u4eec\u5bb9\u6613\u60f3\u5230\u6784\u9020\u5206\u5c42\u56fe\uff0c\u6bcf\u4e00\u6761\u822a\u73ed\u4e00\u6761\uff0c\u5177\u4f53\u65b9\u6848\u4e3a\uff1a\n\n1. \u5bf9\u4e8e\u7b2c $i$ \u822a\u73ed\u4e0a\u7684\u6240\u6709\u70b9\uff0c\u6784\u9020\u4e00\u4e2a\u865a\u70b9\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u7a7a\u4e2d\u8d8a\u8fc7\u4e86\u8fd9\u4e2a\u57ce\u5e02\uff09\uff1b\n2. \u6bcf\u4e2a\u70b9\u5411\u5176\u5bf9\u5e94\u865a\u70b9\u8fde\u6743\u503c\u4e3a $w_ic$ \u7684\u8fb9\uff0c\u865a\u70b9\u5411\u5176\u8fde\u6743\u503c\u4e3a $0$ \u7684\u8fb9\uff1b\n3. \u76f8\u90bb\u4e24\u4e2a\u865a\u70b9\u8fde\u6743\u503c\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u6839\u636e\u4e0a\u9762\u7684\u6280\u5de7\u548c\u6784\u9020\uff0c\u8fd9\u6837\u7684\u65b9\u6cd5\u4e00\u5b9a\u53ef\u4ee5\u8fbe\u6210\u8981\u6c42\u3002\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u4e2a\u70b9\u53ef\u80fd\u5bf9\u5e94\u4e0d\u540c\u7684\u865a\u70b9\uff0c\u56e0\u4e3a\u822a\u73ed\u95f4\u662f\u72ec\u7acb\u7684\u3002\n\n\u5206\u6790\u4e00\u4e0b\uff0c\u53ef\u4ee5\u5f97\u5230\u8fb9\u6570\u4e0e\u70b9\u6570\u90fd\u662f $\\mathcal{O}(\\sum a_i)$\uff08$a_i$ \u4e3a\u7b2c $i$ \u73ed\u822a\u73ed\u7ecf\u8fc7\u7684\u57ce\u5e02\u6570\uff09\uff0c\u5373\u4f7f\u5728\u57ce\u5e02\u5f88\u591a\u7684\u65f6\u5019\u4e5f\u80fd\u8dd1\u5f97\u6bd4\u8f83\u5feb\u3002\n\nCode\uff1a\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <queue>\nusing namespace std;\n\ntypedef long long ll;\nconstexpr int max_n = 1000, max_a = 100, max_m = max_n*max_a * 3, max_nd = max_n + max_a * max_n;\nconst ll INF = 0x3f3f3f3f3f3f3f3fll, max_c = 1000;\n\nstruct node\n{\n\tint id;\n\tll vl;\n\tnode(int _i = 0, ll _v = 0) : id(_i), vl(_v) { }\n\t\n\tbool operator<(const node& n) const\n\t{\n\t\treturn vl > n.vl;\n\t}\n};\npriority_queue<node> pq;\n\nint hd[max_nd], des[max_m], nxt[max_m], e_cnt = 0, n_cnt = max_n;\nll val[max_m], dis[max_nd];\nbool vis[max_nd] = {};\n\ninline ll my_min(ll a, ll b) { return (a < b)? a:b; }\ninline int my_max(int a, int b) { return (a > b)? a:b; }\n\nvoid add_edge(int s, int t, ll v) // \u90bb\u63a5\u8868\u5b58\u56fe\u52a0\u8fb9\n{\n\tdes[e_cnt] = t, val[e_cnt] = v;\n\tnxt[e_cnt] = hd[s], hd[s] = e_cnt++;\n}\n\nint main()\n{\n\tmemset(hd, -1, sizeof hd);\n\tmemset(dis, 0x3f, sizeof dis);\n\t\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\t\n\tint s, t, n;\n\tll tc;\n\tnode cur;\n\t\n\tcin >> s >> t >> n;\n\ts--, t--;\n\tfor (int ii = 0, tn; ii < n; ii++) // \u8f93\u5165\u822a\u73ed\n\t{\n\t\tcin >> tc >> tn;\n\t\tfor (int i = 0, tp = -1, pt; i < tn; i++)\n\t\t{\n\t\t\tcin >> pt, pt--;\n\t\t\tadd_edge(pt, n_cnt, tc * max_c); // \u4e0e\u865a\u70b9\u8fde\u8fb9\n\t\t\tadd_edge(n_cnt, pt, 0);\n\t\t\t\n\t\t\tif (tp != -1)\n\t\t\t\tadd_edge(n_cnt - 1, n_cnt, 1); // \u76f8\u90bb\u865a\u70b9\u8fde\u8fb9\n\t\t\ttp = pt, n_cnt++;\n\t\t}\n\t}\n\n\tdis[s] = 0;\n\tpq.emplace(s, 0);\n\t\n\twhile (!pq.empty()) // \u6700\u77ed\u8def\uff0c\u8fd9\u91cc\u7528 dijkstra\n\t{\n\t\tcur = pq.top();\n\t\tpq.pop();\n\t\t\n\t\tif (!vis[cur.id])\n\t\t{\n\t\t\tvis[cur.id] = true;\n\t\t\tfor (int p = hd[cur.id]; p != -1; p = nxt[p])\n\t\t\t\tif (dis[des[p]] > dis[cur.id] + val[p])\n\t\t\t\t{\n\t\t\t\t\tdis[des[p]] = dis[cur.id] + val[p];\n\t\t\t\t\tpq.emplace(des[p], dis[des[p]]);\n\t\t\t\t}\n\t\t}\n\t}\n\t\n\tif (dis[t] == INF) // \u7279\u5224\u65e0\u89e3\n\t\tcout << \"-1 -1\" << endl;\n\telse\n\t\tcout << dis[t] / max_c << \" \" << dis[t] % max_c << endl;\n\t\n\treturn 0;\n}\n```",
        "postTime": 1626707064,
        "uid": 119491,
        "name": "5ab_juruo",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P3115 [USACO15JAN]Cow Routing S"
    },
    {
        "content": "\u9996\u5148\u5148\u8ddf\u5927\u5bb6\u8bf4\u660e\u4e00\u4e0b\uff0c\u9898\u76ee\u89e3\u91ca\u53ef\u80fd\u6709\u4e00\u70b9\u4e0d\u6e05\u6670\uff0c\u9898\u76ee\u8bf4\u7684\u6700\u5c0f\u4e58\u5750\u98de\u673a\u7684\u6b21\u6570\uff0c\u5c31\u662f\u76f8\u5f53\u4e8e\u7ecf\u8fc7\u6700\u5c11\u7684\u57ce\u5e02\n\n\u6240\u4ee5\uff0c\u9898\u76ee\u5c31\u662f\u8ba9\u6211\u4eec\u8f93\u51fa\u6700\u5c0f\u82b1\u8d39\uff0c\u4ee5\u53ca\u5728\u6b64\u57fa\u7840\u4e0a\u7ecf\u8fc7\u6700\u5c11\u7684\u57ce\u5e02\n\n\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\uff0c$N \\leq 1000$,\u6240\u4ee5\u663e\u7136\u4e0d\u80fd\u91c7\u7528$floyd$\u7b97\u6cd5\n\n\u9898\u76ee\u4e2d\u8ba9\u6211\u4eec\u6c42\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u6211\u4eec\u53ef\u4ee5\u62bd\u8c61\u6210\u4e00\u4e2a\u4e00\u4e2a\u6700\u77ed\u8def\u95ee\u9898\uff0c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6700\u5c0f\u82b1\u8d39\n\n\u9898\u76ee\u4e2d\u8fd8\u6709\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u5c31\u662f\u7ecf\u8fc7\u6700\u5c0f\u7684\u57ce\u5e02\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u4f5c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u628a\u6700\u5c0f\u82b1\u8d39\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5373\u53ef\n\n\u8dd1\u6700\u77ed\u8def\u4ece\u8d77\u70b9\u5f00\u59cb\u8dd1\uff0c\u4e00\u76f4\u5230\u7ec8\u70b9\n\n\u8fd8\u6709\u4e00\u4e2a\u8981\u6ce8\u610f\u5230\u70b9\uff1a\u6700\u77ed\u8def\u7684\u503c\u8981\u5f00$long long$\uff0c\u521d\u503c\u8981\u8d4b\u4e00\u4e2a\u6781\u5927\u503c\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define inf 0x3f\nusing namespace std;\ninline int read()\n{\n\tint x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile (!isdigit(c))\n\t\t  f|=(c=='-'),c=getchar();\n\twhile (isdigit(c))\n\t\t  x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn f?-x:x;\n}\nvoid write(int x) {\n    if(x<0) {\n        putchar('-');\n        x=-x;\n    }\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint n,m;\nint s,t;\nint g[1010][1010];\nint dis[10010],ride[10010];\nbool vis[10010];\nint tot[1010][1010];\nint e[10010];\npriority_queue<pair<int,int> ,vector<pair<int,int> >,greater<pair<int,int> > >p;\ninline void dij(){\n\tfor(register int i=1;i<=n;++i)\t\n\t\tdis[i]=1000000000000;\n\tdis[s]=0;\n\tp.push({0,s});\n\twhile(!p.empty())\n\t\t{\n\t\t\tint tmp1,tmp2;\n\t\t\ttmp1=p.top().first;\n\t\t\ttmp2=p.top().second;\n\t\t\tp.pop();\n\t\t\tif(vis[tmp2])\n\t\t\t\tcontinue;\n\t\t\tvis[tmp2]=1;\n\t\t\tfor(register int i=1;i<=n;++i)\n\t\t\t\t{\n\t\t\t\t\tif(g[tmp2][i]==inf)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif(dis[tmp2]+g[tmp2][i]<dis[i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdis[i]=dis[tmp2]+g[tmp2][i];\n\t\t\t\t\t\t\tride[i]=ride[tmp2]+tot[tmp2][i];\n\t\t\t\t\t\t\tp.push({dis[i],i});\n\t\t\t\t\t\t}\n\t\t\t\t\tif(dis[tmp2]+g[tmp2][i]==dis[i] && ride[tmp2]+tot[tmp2][i]<ride[i])\n\t\t\t\t\t\tride[i]=ride[tmp2]+tot[tmp2][i];\n\t\t\t\t}\n\t\t}\n}\nsigned main(){\n\tmemset(g,inf,sizeof(g));\n\tmemset(tot,inf,sizeof(tot));\n\ts=read();\n\tt=read();\n\tm=read();\n\twhile(m--)\n\t\t{\n\t\t\tint cost;\n\t\t\tint pop;\n\t\t\tcost=read();\n\t\t\tpop=read();\n\t\t\tfor(register int i=1;i<=pop;++i)\n\t\t\t\t{\n\t\t\t\t\te[i]=read();\n\t\t\t\t\tn=max(n,e[i]);\n\t\t\t\t}\n\t\t\tfor(register int i=1;i<=pop;++i)\n\t\t\t\tfor(register int j=i+1;j<=pop;++j)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(g[e[i]][e[j]]>cost)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tg[e[i]][e[j]]=cost;\n\t\t\t\t\t\t\t\ttot[e[i]][e[j]]=j-i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(g[e[i]][e[j]]==cost)\n\t\t\t\t\t\t\ttot[e[i]][e[j]]=max(tot[e[i]][e[j]],j-i);\n\t\t\t\t\t}\n\t\t}\n\tdij();\n\tif(dis[t]==1000000000000)\n\t\t{\n\t\t\twrite(-1);\n\t\t\tputchar(' ');\n\t\t\twrite(-1);\n\t\t\treturn 0;\n\t\t}\n\twrite(dis[t]);\n\tputchar(' ');\n\twrite(ride[t]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1612363503,
        "uid": 193541,
        "name": "\u7f9a\u7f8aWANG",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3115 \u3010[USACO15JAN]Cow Routing S\u3011"
    },
    {
        "content": "\u8fd9\u4e48\u7b80\u5355\u7684\u9898\u600e\u4e48\u5c31\u8fd9\u4e48\u70b9\u70b9\u4ebaA\uff1f\u5927\u5bb6\u90fd\u4e0d\u559c\u6b22\u5237USACO\u6708\u8d5b\uff1f\n\n\u3010\u601d\u8def\u3011\n\n\u4e00\u773c\u5c31\u5e94\u8be5\u770b\u51fa\u662f\u4e2a\u65e0\u8111\u7684\u53cc\u5173\u952e\u503c\u6700\u77ed\u8def\u554a\uff0c\u76f4\u63a5\u88f8\u7684SPFA\uff0c\u4e00\u8fb9\u8dd1\u4e00\u8fb9\u8bb0\u5f55\u5e76\u66f4\u65b0\u4e24\u4e2a\u8981\u6c42\u7684\u5173\u952e\u503c\u3002\u6700\u540e\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5355\u6e90\u6700\u77ed\u8def\u7684\u6a21\u677f\u9898\uff0c\u53ea\u4e0d\u8fc7\u52a0\u4e86\u4e00\u4e2a\u5224\u65ad\u5230\u8fbe\u6b64\u6700\u77ed\u8def\u5f84\u7684\u7ecf\u8fc7\u6700\u5c11\u8282\u70b9\u6570\u800c\u5df2\uff0c\u4f46\u5e76\u65e0\u96be\u5ea6\u3002\n\n\u3010\u4ee3\u7801\u3011\n\n\n\n\n```cpp\n#include<iostream>\n#include<fstream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<vector>\n#include<queue>\n#include<deque>\n#include<utility>\n#include<map>\n#include<set>\n#include<cmath>\n#include<cstdlib>\n#include<ctime>\n#include<functional>\n#include<sstream>\n#include<cstring>\n#include<bitset>\n#include<stack>\nusing namespace std;\nint s,e,n,m,mx=-1;\nlong long val;\nint a[105];\nlong long dis[1005];\nint cnt[1005];\nlong long v[1005][1005];\nbool in_queue[1005];\nqueue<int>q;\nint kkk[1005][1005];\nvoid spfa()\n{\n    for(int i=1;i<=mx;i++)dis[i]=1e18;\n    dis[s]=0;\n    q.push(s);\n    in_queue[s]=1;\n    while(!q.empty())\n    {\n        int t=q.front();\n        in_queue[t]=0;\n        q.pop();\n        for(int i=1;i<=mx;i++)\n        {\n            if(dis[i]>dis[t]+v[t][i])\n            {\n                dis[i]=dis[t]+v[t][i];\n                cnt[i]=cnt[t]+kkk[t][i];\n                if(!in_queue[i])\n                {\n                    in_queue[i]=1;\n                    q.push(i);\n                }\n            }\n            else if(dis[i]==dis[t]+v[t][i])if(cnt[t]+kkk[t][i]<cnt[i])cnt[i]=cnt[t]+kkk[t][i];\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&s,&e,&n);\n    memset(v,0x3f,sizeof(v));\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld%d\",&val,&m);\n        for(int j=1;j<=m;j++){scanf(\"%d\",&a[j]);mx=max(mx,a[j]);}\n        for(int j=1;j<=m;j++)\n        {\n            for(int k=j+1;k<=m;k++)\n            {\n                if(val<v[a[j]][a[k]])  \n                {  \n                    v[a[j]][a[k]]=val;\n                    kkk[a[j]][a[k]]=k-j;  \n                }\n                else if(val==v[a[j]][a[k]] && k-j<kkk[a[j]][a[k]])\n                {\n                    kkk[a[j]][a[k]]=k-j;\n                }\n            }\n        }\n    }\n    spfa();\n    if(dis[e]==1e18)\n    {\n        printf(\"-1 -1\\n\");\n        return 0;\n    }\n    else\n    {\n        printf(\"%lld %d\\n\",dis[e],cnt[e]);\n        return 0;\n    }\n}\n```",
        "postTime": 1479393423,
        "uid": 16817,
        "name": "winmt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3115 \u3010[USACO15JAN]\u725b\u8def\u7ebfCow Routing\u3011"
    }
]