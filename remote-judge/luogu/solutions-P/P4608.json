[
    {
        "content": "### \u5e8f\u5217\u81ea\u52a8\u673a\uff1a\n\n\u662f\u4e00\u4e2a\u5904\u7406\u5b50\u5e8f\u5217\u7684\u81ea\u52a8\u673a\u3002\u5c31\u8fd9\u6837\u3002\n\n\u5efa\u9020\uff1a\uff08By\u732b\u8001\u5e08\uff1aimmoralCO\u732b\uff09\n\n```cpp\ns[]\nnext[][26]\nmemset(next[n], -1, 26<<2);\nfor(int i = n; i; --i) {\n    memcpy(next[i - 1], next[i], 26 << 2);\n    next[i - 1][s[i] - 'a'] = i;\n}\n```\n\nnxt[][]\u6570\u7ec4\u5c31\u662f\u7b2c\u51e0\u4e2a\u4f4d\u7f6e\uff0c\u5e8f\u53f7\u4e3a\u51e0\u7684\u51fa\u8fb9\u8fde\u63a5\u5230\u7b2c\u51e0\u4e2a\u4f4d\u7f6e\uff08\u4f4d\u7f6e\u662f\u5bf9\u5e94\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e\uff0c\u5176\u5b9e\u5e76\u6ca1\u7528\uff09\n\n\u5927\u6982\u539f\u7406\u5c31\u662f\u6bcf\u5f53\u8981\u5faa\u73af\u5230\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5c31\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u8fde\u901a\u6027\u8d4b\u503c\u7ed9\u4e0a\u4e00\u4e2a\u8282\u70b9\u7f16\u53f7\uff0c\uff08\u53ef\u4ee5\u7406\u89e3\uff0cn\u4e2a\u5b57\u7b26\uff0c\u5176\u5b9e\u662fn\u6761\u8fb9\uff0c\u6700\u591a\u6709n+1\u4e2a\u8282\u70b9\u5728\u4e24\u8fb9\uff09\n\n\u7136\u540e\u5904\u7406\u65b0\u6765\u7684\u5b57\u7b26i\u5bf9\u4e8ei-1\u53f7\u4f4d\u7f6e\u8fde\u901a\u6027\u7684\u5f71\u54cd\uff0c\u90a3\u4e48\uff0c\n\n\u7f16\u53f7\u4ece0~n\uff0c\u5176\u4e2d0\u53f7\u70b9\u5c31\u662f\u6839\uff0cdfs\u4ece0\u5f00\u59cb\u3002\n\n\uff08\u4e0d\u4f1a\u7684\u8bdd\uff0c\u624b\u52a8\u6a21\u62df\u5c31\u597d\u4e86\uff09\n\n\u53d1\u73b0\uff0c\u5f53\u5b50\u5e8f\u5217\u4e2d\u6709\u91cd\u590d\u5143\u7d20\u7684\u65f6\u5019\uff0cnxt[i-1][s[i]-'a']=i\u4e00\u53e5\u53ef\u4ee5\u5c06\u8fd9\u79cd\u60c5\u51b5\u8986\u76d6\u6389\u3002\n\n\u7531\u4e8e\u8fd9\u4e9b0~n\u53f7\u8282\u70b9\u53ef\u4ee5\u91cd\u590d\u5230\u8fbe\uff0c\u5f53\u7136\u6700\u7ec8\u5230\u4e86n\u53f7\u70b9\u5c31\u662f\u8fb9\u754c\u4e86\u3002\n\n\u6240\u4ee5dfs\u6ca1\u6709\u95ee\u9898\u3002\u800c\u4e14\u5927\u5927\u8282\u7701\u4e86\u7a7a\u95f4\u3002\n\n \n\n\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u7528\u6709\u9650\u7684O(\u957f\u5ea6*|S|\uff09\u7684\u7a7a\u95f4\uff0c\u6765\u5efa\u9020\u8fd9\u68f5\u6811\u3002\n\n\u53d1\u73b0\uff0c\u8fd9\u68f5\u6811\u597d\u50cftrie\u554a~\uff01\uff01\uff01\uff01\n\n\u5176\u5b9e\u5dee\u4e0d\u591a\uff0c\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u4e00\u4e2a\u5b50\u4e32\u3002\n\n \n\n\u64cd\u4f5c\u4e5f\u5c31\u548ctrie\u5dee\u4e0d\u591a\u4e86\u3002\n\n### \u57fa\u672c\u64cd\u4f5c\uff1a\n\n1.\u53ef\u4ee5\u7edf\u8ba1\u4e00\u4e2a\u4e32\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\n\n\u5e8f\u5217\u81ea\u52a8\u673a\u4e0a\u53ef\u4ee5\u662f\u4e00\u68f5\u6811\uff0c\u6811\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u8fb9\u6240\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u5c31\u662f\u6240\u6709\u7684\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u3002\n\ndfs\u6811\u4e0a\u626b\u4e00\u904d\u5c31\u597d\u4e86\u3002\n\n \n\n2.\u53ef\u4ee5\u67e5\u627e\u4e00\u4e2a\u5b50\u5e8f\u5217\u662f\u5426\u5728\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u8fc7\u3002\n\n\u663e\u7136\uff0cdfs\u5c31\u53ef\u4ee5\u3002\n\n \n\n3.\u4e5f\u53ef\u4ee5\u4e24\u4e2a\u5e8f\u5217\u81ea\u52a8\u673a\u4e00\u8d77dfs\uff0c\u627e\u5230\u6240\u6709\u516c\u5171\u5b50\u5e8f\u5217\u3002\n\n\u5c31\u6bd4\u5982\u8bf4\u8fd9\u4e2a\u9898\uff1a\n\n\uff08\u771f**\u00b7**\u5e8f\u5217\u81ea\u52a8\u673a\u677f\u5b50\u9898\uff09\n\n \n### [FJOI2016]\u6240\u6709\u516c\u5171\u5b50\u5e8f\u5217\u95ee\u9898\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u8fd9\u4e24\u4e2a\u4e32\u7684\u6240\u6709\u516c\u5171\u5b50\u5e8f\u5217\u3002\n\n\u5f53\u8f93\u5165\u7684\u53c2\u91cfk=1\u7684\u65f6\u5019\uff0c\u6309\u7167\u5b57\u5178\u5e8f\u8f93\u51fa\u8fd9\u4e9b\u5b50\u5e8f\u5217\uff0c\u5e76\u8f93\u51fa\u4e2a\u6570\u3002\n\n\u5f53\u8f93\u5165\u7684\u53c2\u91cfk=0\u7684\u65f6\u5019\uff0c\u8f93\u51fa\u4e2a\u6570\u5c31\u53ef\u4ee5\u3002\n\n\u6ce8\u610f\uff0c\u7a7a\u5b57\u7b26\u4e32\u4e5f\u662f\u4e00\u4e2a\u516c\u5171\u5b50\u5e8f\u5217\u3002\n\n#### \u5206\u6790\uff1a\n\n\u88f8\u88f8\u88f8\u88f8\u7684\u5e8f\u5217\u81ea\u52a8\u673a\u3002\n\n\u5f00\u4e24\u4e2a\u81ea\u52a8\u673a\uff0c\u76f4\u63a5\u540c\u65f6\u8dd1dfs\u5c31\u53ef\u4ee5\u3002\n\n\u5bf9\u4e8ek=1\uff0c\u5c31\u8981\u5148\u8d70a\uff0c\u518d\u8d70z\uff0c\u6761\u4ef6\u662f\u4e24\u4e2a\u90fd\u53ef\u4ee5\u8d70\uff0c\u4e00\u904d\u7528\u4e00\u4e2a\u6808\u4e00\u6837\u7684\u5b57\u7b26\u4e32\u8bb0\u5f55\u5b57\u7b26\u4e32\u3002\u8fdb\u5165\u5faa\u73af\u5c31\u8f93\u51fa\u5373\u53ef\u3002\u5e76\u4e14\u8bb0\u5f55\u603b\u6570\u3002\n\n\u5bf9\u4e8ek=0\uff0c\u540c\u7406\u3002\n\n\u8bf6\uff0c\u600e\u4e48\u6211\u7684long long\u51fa\u4e86\u8d1f\u6570\u5462\uff1f\uff1f\n\n\u56e0\u4e3a\u8981\u9ad8\u7cbe\u3002\n\n\u8bf6\uff0c\u600e\u4e48\u6211\u7684\u9ad8\u7cbeMLE\u4e86\u5462\uff1f\uff1f\uff1f\uff1f\n\n\u56e0\u4e3a\u8981\u538b\u4f4d\u9ad8\u7cbe\u3002\n\nhttps://www.cnblogs.com/Miracevin/p/9031691.html\n\n\u4f46\u662f\u8fd9\u4e2a\u7248\u672c\u592a\u5f31\u4e86\uff0c\u5f88\u4e45\u4ee5\u524d\u5199\u7684\u3002\n\n\u6240\u4ee5\uff0c\u7528\u7ed3\u6784\u4f53\u5b9e\u73b0\u5c31\u6bd4\u8f83\u65b9\u4fbf\u4e86\u3002\u7ed3\u6784\u4f53\u5185\u7f6e\u51fd\u6570\u3002\n\n\u652f\u6301\uff1a\u9ad8\u7cbe\u52a0\u4f4e\u7cbe\uff08\u56e0\u4e3a\u8981\u8d4b\u521d\u503c1\uff08\u5176\u5b9e\u76f4\u63a5\u8d4b\u503c\u4e5f\u53ef\u4ee5\uff09\uff09\uff0c\u9ad8\u7cbe\u52a0\u9ad8\u7cbe\uff0c\u538b\u4f4d\u9ad8\u7cbe\u7684\u8f93\u51fa\u3002\n\n\u6ca1\u4e86\u3002\n\n\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll mod=1e9;\nconst int N=3020;\nconst int L=58;\nconst int K=25;\nint nxt1[N][L],nxt2[N][L];\nchar sta[N];\nint top=-1;\nll ans;\nint la,lb,k;\nchar a[N],b[N];\nstruct Big{//\u538b\u4f4d\u7ed3\u6784\u4f53 \n    int cur;\n    ll *s;\n    void init(){\n        s=new long long[20];\n        for(int i=0;i<20;i++) s[i]=0;\n        cur=0;\n    }\n    void put(){\n        printf(\"%lld\",s[cur]);\n        for(int i=cur-1;i>=0;i--) printf(\"%09lld\",s[i]);\n    }\n    void add(ll k){\n        s[0]+=k;\n        int i=0;\n        while(s[i]>=mod) s[i+1]+=s[i]/mod,s[i++]%=mod;\n        while(s[cur+1]) cur++;\n    }\n    void Add(const Big& o){\n        ll i,r=max(cur,o.cur);\n        for(int i=0;i<=r;i++){\n            s[i]+=o.s[i];\n            if(s[i]>=mod) s[i+1]+=s[i]/mod,s[i]%=mod;\n        }\n        cur=min(r+3,19ll);while(cur&&s[cur]==0) cur--;\n    }\n}dp[N][N];\nbool vis[N][N];\nvoid build1(){//\u5efa\u9020\u5e8f\u5217\u81ea\u52a8\u673a \n    memset(nxt1[la],-1,sizeof nxt1[la]);\n    for(int i=la;i;i--){\n        memcpy(nxt1[i-1],nxt1[i],sizeof nxt1[i]);\n        nxt1[i-1][a[i]-'A']=i;\n    }\n}\nvoid build2(){\n    memset(nxt2[lb],-1,sizeof nxt2[lb]);\n    for(int i=lb;i;i--){\n        memcpy(nxt2[i-1],nxt2[i],sizeof nxt2[i]);\n        nxt2[i-1][b[i]-'A']=i;\n    }\n}\nvoid dfs2(int x,int y){//dfs \n    if(vis[x][y]) return;\n    vis[x][y]=1;\n    dp[x][y].init();\n    dp[x][y].add(1);\n    for(int i=0;i<=57;i++){\n        if(nxt1[x][i]!=-1&&nxt2[y][i]!=-1) {\n        dfs2(nxt1[x][i],nxt2[y][i]);\n        dp[x][y].Add(dp[nxt1[x][i]][nxt2[y][i]]);\n        }\n    }\n}\nll dfs1(int x,int y){\n    printf(\"%s\\n\",sta);\n    ll cnt=1;\n    for(int i=0;i<=57;i++){\n        if(nxt1[x][i]!=-1&&nxt2[y][i]!=-1) {\n        sta[++top]=i+'A';\n        cnt+=dfs1(nxt1[x][i],nxt2[y][i]);\n        sta[top--]=' ';\n        }\n    }\n    return cnt;\n}\nint main()\n{\n    scanf(\"%d%d\",&la,&lb);\n    scanf(\"%s\",a+1);scanf(\"%s\",b+1);    \n    scanf(\"%d\",&k);\n    build1();build2();\n    if(k==1) {    \n    dfs1(0,0);\n    }\n    dfs2(0,0);\n    dp[0][0].put();\n    return 0;\n}\n```\n\n ",
        "postTime": 1528723821,
        "uid": 56672,
        "name": "\u67ab\u6797\u665a",
        "ccfLevel": 9,
        "title": "\u5e8f\u5217\u81ea\u52a8\u673a\u2014\u2014\u6240\u6709\u516c\u5171\u5b50\u5e8f\u5217\u95ee\u9898"
    },
    {
        "content": "~~n,m\u4e0d\u8981\u6253\u53cd~~\n\n~~\u4e0d\u9519\uff0c\u81ea\u5df1\u641e\u51fa\u6765\u4e86~~\n\n\u770b\u9898\u89e3\u90fd\u662f\u65e0\u6cd5\u6eda\u52a8\u6570\u7ec4\u7684\u538b\u4f4d\u9ad8\u7cbe\uff0c\u7ed9\u4e00\u4e2a\u53ef\u4ee5**\u6eda\u52a8\u6570\u7ec4**\u7684DP\u3002\n\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u4e8c\u7ef4$dp[i][j]$\u8868\u793a\u6070\u597d\u9009\u62e9\u4e86i\u548cj\uff1a\n\n$$dp[i][j]=1+\\sum _w dp[nxt[i][w]][nxt'[j][w]];a[i]=b[j]$$\n\n\u4f46\u662f\u52a0\u4e0a\u9ad8\u7cbe\u5ea6\u4e4b\u540e\uff0c\u8fd9\u9053\u9898\u4f1a\u70b8\u7a7a\u95f4\uff0c\u600e\u4e48\u529e\uff1f\uff08\u538b\u4f4d\n\n\u6211\u4eec\u6539\u8fdb\u4e00\u4e0b\u72b6\u6001\uff0c$dp[i][j]$\u8868\u793a\u7b2c\u4e8c\u4e2a\u4e32\u6070\u597d\u9009\u4e86j\uff0c\u7b2c\u4e00\u4e2a\u4e32\u9009\u4e86$\\le i$\u7684\u4f4d\u7f6e\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u6709\u4e24\u79cd\uff0c\u6211\u4eec\u8fd8\u662f\u5fc5\u987b\u8d2a\u5fc3\u5730\u5339\u914d\uff0c\u624d\u80fd\u4fdd\u8bc1\u53ea\u8ba1\u6570\u4e00\u6b21\uff1a\n\n1. \u5982\u679c$a[i]=b[j]$\uff1a\n\n$$dp[i][j]=1+\\sum_w dp[i-1][nxt'[j][w]]$$\n\n\u679a\u4e3e\u4e0b\u4e00\u4e2a\u662f\u4ec0\u4e48\u3002\n\n2. \u5426\u5219\uff1a\n\n$$dp[i][j]=dp[i-1][j]$$\n\n\u5ffd\u7565\u6389i\u5373\u53ef\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u505a\u6cd5\u66f4\u4f18\u79c0\u5462\uff1f\u56e0\u4e3a\u8fd9\u4e2a\u505a\u6cd5\u53ef\u4ee5\u6269\u5c55\u5230**LCIS**\u8ba1\u6570\u4e14\u5b57\u7b26\u96c6\u5f88\u5927\u4e14\u5361\u7a7a\u95f4\u7684\u60c5\u51b5\u3002\n\n~~\u7531\u4e8e\u6ca1\u6709\u538b\u4f4d\u5bfc\u81f4\u5e38\u6570\u5f88\u5927\u7684\u4ee3\u7801\uff1a~~\n\n```cpp\n#define N 3015\nil int ha(const char c)\n{\n\tif(c<='Z') return c-'A';\n\treturn c-'a'+26;\n}\nstruct XL\n{\n\tchar s[N];\n\tint n,nxt[N][52];\n\tvoid init()\n\t{\n\t\tscanf(\"%s\",s+1); n=strlen(s+1);\n\t\tfor(ri i=n-1; i>=0; --i)\n\t\t{\n\t\t\tmemcpy(nxt[i],nxt[i+1],sizeof nxt[i]);\n\t\t\tnxt[i][ha(s[i+1])]=i+1;\n\t\t}\n\t}\n} A,B;\nint typ;\nint cnt;\nint d[N],dep;\nvoid dfs(int x,int y)\n{\n\tif(typ)\n\t{\n\t\tfor(ri i=1; i<=dep; ++i) putchar(d[i]<26?d[i]+'A':d[i]-26+'a');\n\t\tenter;\n\t}\n\t++cnt;\n\tfor(ri i=0; i<52; ++i) if(A.nxt[x][i]&&B.nxt[y][i])\n\t\t{\n\t\t\td[++dep]=i;\n\t\t\tdfs(A.nxt[x][i],B.nxt[y][i]);\n\t\t\t--dep;\n\t\t}\n}\n#define MXLEN 200\nstruct Bigint\n{\n\tint num[MXLEN],sz;\n\tBigint(int x = 0)\n\t{\n\t\tmem(num,0),sz=0;\n\t\twhile(x) num[++sz]=x%10,x/=10;\n\t}\n\tint &operator[](const int x) {return num[x];}\n\tconst int &operator[](const int x) const {return num[x];}\n\tvoid operator*=(const Bigint &x)\n\t{\n\t\tstatic int tmp[MXLEN]; clr(tmp+1,tmp+1+sz+x.sz);\n\t\tfor (ri i=1; i<=sz; ++i)\n\t\t\tfor(ri j=1; j<=x.sz; ++j) tmp[i+j-1]+=num[i]*x[j];\n\t\tsz+=x.sz;\n\t\tfor(ri i=1; i<=sz; ++i)\n\t\t{\n\t\t\ttmp[i+1]+=tmp[i]/10;\n\t\t\ttmp[i]%=10;\n\t\t}\n\t\twhile(sz&&tmp[sz]==0) --sz;\n\t\tfor(ri i=1; i<=sz; ++i) num[i]=tmp[i];\n\t}\n\tBigint operator*(const Bigint &x) const\n\t{\n\t\tBigint res=*this; res*=x;\n\t\treturn res;\n\t}\n\tvoid operator*=(const int x)  // positive\n\t{\n\t\tfor(ri i=1; i<=sz; ++i) num[i]*=x;\n\t\tsz+=10;\n\t\tfor(ri i=1; i<=sz; ++i)\n\t\t{\n\t\t\tnum[i+1]+=num[i]/10;\n\t\t\tnum[i]%=10;\n\t\t}\n\t\twhile(sz&&num[sz]==0) --sz;\n\t}\n\tBigint operator*(const int x) const\n\t{\n\t\tBigint res=*this; res*=x;\n\t\treturn res;\n\t}\n\tvoid operator+=(const Bigint &x)\n\t{\n\t\tfor (ri i=1,t; i<=x.sz; ++i)\n\t\t{\n\t\t\tt=num[i]+x[i];\n\t\t\tnum[i]=t%10;\n\t\t\tnum[i+1]+=t/10;\n\t\t}\n\t\tsz=max(sz,x.sz); while(num[sz+1]) ++sz;\n\t}\n\tBigint operator+(const Bigint &x) const\n\t{\n\t\tBigint res=*this; res+=x;\n\t\treturn res;\n\t}\n\tvoid read()\n\t{\n\t\tstatic char tc[MXLEN];\n\t\tscanf(\"%s\", tc+1); sz=strlen(tc+1);\n\t\tfor(ri i=1; i<=sz; ++i) num[i]=tc[sz-i+1]-'0';\n\t}\n\tvoid print() const\n\t{\n\t\tint t=max(sz,1);\n\t\tfor(ri i=t; i>=1; --i) putchar('0'+num[i]); enter;\n\t}\n};\nint n,m;\nBigint _dp[2][N],ans;\nvoid solve()\n{\n\tauto f=_dp[0],g=_dp[1];\n\tfor(ri i=n; i>=1; --i)\n\t{\n\t\tswap(f,g); memset(f,0,sizeof _dp[0]);\n\t\tfor(ri j=m; j>=1; --j)\n\t\t\tif(A.s[i]==B.s[j])\n\t\t\t{\n\t\t\t\tf[j]+=1;\n\t\t\t\tfor(ri k=0; k<52; ++k)\n\t\t\t\t\tif(B.nxt[j][k]) f[j]+=g[B.nxt[j][k]];\n\t\t\t}\n\t\t\telse f[j]=g[j];\n\t}\n\tans+=1;\n\tfor(ri k=0; k<52; ++k)\n\t\tif(B.nxt[0][k]) ans+=f[B.nxt[0][k]];\n\tans.print();\n}\nsigned main()\n{\n#ifdef M207\n\tfreopen(\"in.in\",\"r\",stdin);\n\t// freopen(\"ot.out\",\"w\",stdout);\n#endif\n\tin(n,m);\n\tA.init(),B.init();\n\tin(typ);\n\tif(typ) {dfs(0,0); out(cnt);}\n\telse solve();\n\treturn 0;\n}\n```\n",
        "postTime": 1557276232,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "[FJOI2016]\u6240\u6709\u516c\u5171\u5b50\u5e8f\u5217\u95ee\u9898-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u5b50\u5e8f\u5217\u81ea\u52a8\u673a + $DP.$      \n\u9996\u5148\u5efa\u7acb$A$\u4e32\u548c$B$\u4e32\u7684\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\u3002   \n\u4ee4$f[i][j]$  \u8868\u793a\u4ece$A$\u4e32\u4e2d\u7b2c$i$\u4e2a\u5b57\u7b26$A_i$\u5f00\u59cb,\u4ece$B$\u4e32\u4e2d\u7b2c$j$\u4e2a\u5b57\u7b26$B_j$\u5f00\u59cb\u7684\u516c\u5171\u5b50\u5e8f\u5217\u4e2a\u6570\u3002      \n\u663e\u7136\u6709$f[i][j] =$ $\\Sigma f[Nxt[i][k]][Nxt[j][k]]. $  \n\u5982\u679c\u4e0d\u8003\u8651\u7b54\u6848\u7684\u8303\u56f4\uff0c\u90a3\u5c31\u662f$O(nm|S|)$\u7684\u590d\u6742\u5ea6,\u4f46\u662f\u5f88\u96be\u8fbe\u5230\u4e0a\u754c\u3002  \n\u7b54\u6848\u5f88\u5927\uff0c\u800c\u4e14\u8981\u8f93\u51fa\uff0c\u90a3\u5c31\u53ea\u80fd\u8003\u8651\u9ad8\u7cbe\u5ea6\u3002   \n\u4e00\u5171\u6709$O(nm)$\u4e2a\u72b6\u6001\uff0c\u666e\u901a\u9ad8\u7cbe\u4f1a$MLE$,\u538b\u4f4d\u9ad8\u7cbe\u5373\u53ef($18$\u4f4d\u538b\u5230\u4e00\u4e2a$long long$\u91cc\u53ef\u8fd8\u884c)\u3002\n\n\u63d0\u9192\u4e00\u4e0b$70$\u5206\u7684\u540c\u5b66\u4eec\uff0c\u5f53$k = 1$\u65f6,\u7b54\u6848\u4e2d\u5e94\u5f53\u8f93\u51fa\u7a7a\u4e32,**\u4e0d\u7528\u628a\u7a7a\u4e32\u5224\u6389**\u3002\n\n\u4ee3\u7801:\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\ninline int read(){\n    int x = 0,f = 1; char c = getchar();\n    while (c != EOF && !isdigit(c)) {if (c == '-') f = -1;c = getchar();}\n    while (isdigit(c)) {x = x * 10 + c - '0';c = getchar();}\n    return x * f;\n}\ninline int Get(){\n\tchar c = getchar();\n\twhile (!isalpha(c)) c = getchar();\n\treturn c;\n}\n\nconst int N = 3020,M = 3020;\n\nLL p = 1e18,w = 18;\nstruct Bignum{\n\tLL *a; short int n;\n\tinline void init(){ a = new LL[10],memset(a,0,sizeof(a)),n = 0,a[0] = 1;}\n\tinline void write(){\n\t\tprintf(\"%lld\",a[n]);\n\t\tfor (int i = n - 1; i >= 0; i--) printf(\"%0*lld\",w,a[i]);\n\t\tputchar('\\n');\n\t}\n\tinline void add(Bignum x){\n\t\tn = max(n,x.n);\n\t\tfor (int i = 0; i <= n; ++i){\n\t\t\ta[i] += x.a[i];\n\t\t\tif (a[i] >= p) a[i+1] += a[i] / p,a[i] %= p;\n\t\t}\n\t\twhile (a[n+1]) ++n;\n\t}\n}f[N][M];\n\nint t[256],ff[256];\n\nint n,a[N],m,b[M],k,Ne1[N][52],Ne2[M][52];\n\nint st[N],top;\n\nvoid dfs(int x,int y){\n\tfor (int i = 1; i <= top; ++i) putchar(ff[st[i]]); putchar('\\n');\n\tfor (int i = 0,px,py; i < 52; ++i)\n\t\tif ((px = Ne1[x][i]) && (py = Ne2[y][i])) st[++top] = i,dfs(px,py),--top;\n}\nbool vis[N][M];\nvoid dp(int x,int y){\n\tif (vis[x][y]) return;\n\tvis[x][y] = 1;\n\tf[x][y].init();\n\tfor (int i = 0,px,py; i < 52; ++i)\n\t\tif ((px = Ne1[x][i]) && (py = Ne2[y][i])) dp(px,py),f[x][y].add(f[px][py]);\n}\n\nint main(){\n\tint i,j;\n\tfor (i = 0; i < 26; ++i) t[i + 'a'] = 26 + i,ff[26 + i] = i + 'a';\n\tfor (i = 0; i < 26; ++i) t[i + 'A'] = i,ff[i] = i + 'A';\n\t\n\tn = read(),m = read();\n\tfor (i = 1; i <= n; ++i) a[i] = t[Get()];\n\tfor (i = 1; i <= m; ++i) b[i] = t[Get()];\n\tk = read();\n\t\n\tfor (j = 0; j < 52; ++j) Ne1[n][j] = 0;\n\tfor (i = n-1; i >= 0; --i)\n\tfor (j = 0; j < 52; ++j) Ne1[i][j] = (a[i+1] == j) ? i+1 : Ne1[i+1][j];\n\t\n\tfor (j = 0; j < 52; ++j) Ne2[m][j] = 0;\n\tfor (i = m-1; i >= 0; --i)\n\tfor (j = 0; j < 52; ++j) Ne2[i][j] = (b[i+1] == j) ? i+1 : Ne2[i+1][j];\n\t\n\tif (k) dfs(0,0);\n\tdp(0,0),f[0][0].write();\n    return 0;\n}\n```",
        "postTime": 1555124748,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4608 \u3010[FJOI2016]\u6240\u6709\u516c\u5171\u5b50\u5e8f\u5217\u95ee\u9898\u3011"
    },
    {
        "content": "~~\u4e0d\u6127\u662fFJOI~~\u3002\n\n\u660e\u663e\u7684\uff0c\u8fd9\u662f\u9053\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\u677f\u5b50\u9898\uff0c\u8003\u8651\u5efa\u7acb $X$ \u548c $Y$ \u7684\u5b50\u5e8f\u5217\u81ea\u52a8\u673a $ch1$ \u548c $ch2$\u3002\u8bbe $f_{i,j}$ \u8868\u793a\u5728 $ch1$ \u4e2d\u4ee5 $i$ \u5f00\u59cb\uff0c\u5728 $ch2$ \u4e2d\u4ee5 $j$ \u5f00\u59cb\u7684\u516c\u5171\u5b50\u5e8f\u5217\u6570\u3002\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f_{i,j}=1+\\sum_{c\\in S}f_{ch1_{i,c},ch2_{j,c}}(ch1_{i,c}\\ne 0,ch2_{j,c}\\ne 0)$$\n\n\u5176\u4e2d $S$ \u4e3a\u5b57\u7b26\u96c6\u5305\u542b $a\\dots z$ \u548c $A\\dots Z$\u3002\n\n\u76f4\u63a5 DP \u5373\u53ef\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u95ee\u7206\u641c\u8f93\u51fa\u6240\u6709\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\u76f4\u63a5\u8bb0\u5fc6\u5316\u641c\u7d22\u5373\u53ef\uff0c\u6ce8\u610f\u7a7a\u4e32\u4e5f\u7b97\u516c\u5171\u5b50\u5e8f\u5217\uff01\u8fd8\u9700\u8981\u538b\u4f4d\u9ad8\u7cbe\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconst int N=3333;\nconst int MOD=1e9;\nstruct BigInt{//\u538b\u4f4d\u9ad8\u7cbe\u662f\u501f\u9274\u5176\u4ed6\u9898\u89e3\u7684\u3002\n  ll *s;\n  int c;\n  void init(){\n    s=new ll[20];\n    for(int i=0; i<20; i++)\n      s[i]=0;\n    c=0;\n  }\n  void out(char ch='\\n'){\n    printf(\"%lld\", s[c]);\n    for(int i=c-1; i>=0; i--)\n      printf(\"%09lld\", s[i]);\n    putchar(ch);\n  }\n  void add(int x){\n    s[0]+=x;\n    int i=0;\n    while(s[i]>=MOD)s[i+1]+=s[i]/MOD, s[i]%=MOD, i++;\n    while(s[c+1])c++;\n  }\n  void add(const BigInt &x){\n    int r=max(c, x.c);\n    for(int i=0; i<=r; i++){\n      s[i]+=x.s[i];\n      if(s[i]>=MOD) s[i+1]+=s[i]/MOD, s[i]%=MOD;\n    }\n    c=min(19, r+1);\n    while(c&&s[c]==0)c--;\n  }\n}f[N][N];\nstruct ZXLZDJ{\n  int ch[N][58];\n  void build(char *s, int Len){\n    for(int i=Len; i; i--){\n      for(int j=0; j<58; j++) ch[i-1][j]=ch[i][j];\n      ch[i-1][s[i]-'A']=i;\n    }\n  }\n  int* operator [] (const int &i){return ch[i];}\n}A,B;\nbool vis[N][N];\nchar s1[N], s2[N]; int n, m, op;\nvoid dfs(int u, int v){\n  if(vis[u][v])return;\n  vis[u][v]=1;\n  f[u][v].init();\n  f[u][v].add(1);\n  for(int i=0; i<58; i++){\n    if(!A[u][i]||!B[v][i])continue;\n    dfs(A[u][i], B[v][i]);\n    f[u][v].add(f[A[u][i]][B[v][i]]);\n  }\n}\nchar ans[N];\nvoid _dfs(int u, int v, int tt){\n  ans[tt]='\\0';\n  printf(\"%s\\n\", ans+1);\n  for(int i=0; i<58; i++){\n    if(A[u][i]==0||B[v][i]==0)continue;\n    ans[tt]=i+'A';\n    _dfs(A[u][i], B[v][i], tt+1);\n  }\n}\nint main(){\n  scanf(\"%d %d\", &n, &m);\n  scanf(\" %s\", s1+1);\n  scanf(\" %s\", s2+1);\n  scanf(\"%d\", &op);\n  A.build(s1, n);\n  B.build(s2, m);\n  if(op) _dfs(0, 0, 1);\n  dfs(0, 0);\n  f[0][0].out();\n  return 0;\n}\n```",
        "postTime": 1683637377,
        "uid": 740607,
        "name": "__ODT__",
        "ccfLevel": 0,
        "title": "P4608"
    }
]