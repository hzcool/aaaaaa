[
    {
        "content": "\u9996\u5148\u5206\u6790\u4e00\u4e0b\u9898\u76ee\uff0cl,r\u8fd9\u4e48\u5927\u5f88\u663e\u7136\u5c31\u662f\u8981\u79bb\u6563\u5316\u4e86\u3002\n\n\u63a5\u7740\u6211\u4eec\u53c8\u6ce8\u610f\u5230\u9898\u76ee\u8981\u6c42\u7684\u7b54\u6848\u8ddf\u201c\u6700\u5927\u201d\uff0c\u201c\u6700\u5c0f\u201d\u6709\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4f1a\u8054\u60f3\u5230\u5355\u8c03\u6027\u3002\n\n\u65e2\u7136\u662f\u8ddf\u533a\u95f4\u957f\u5ea6\u6709\u5173\uff0c\u90a3\u6211\u4eec\u4e0d\u59a8\u5c31\u5148\u6309\u533a\u95f4\u957f\u5ea6\u6392\u4e2a\u5e8f\u597d\u4e86\uff0c\u53cd\u6b63\u8fd9\u6837\u5b50\u5e76\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\n\n\n\u7136\u540e\u6211\u4eec\u601d\u8003\u4e00\u79cd\u6700\u6734\u7d20\u7684\u505a\u6cd5\uff0c\u90a3\u5c31\u662f\u6309\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u9010\u4e00\u52a0\u5165\u533a\u95f4\uff0c\u7136\u540e\u770b\u770b\u662f\u5426\u6709   \u4e00\u4e2a\u70b9\u7684\u88ab\u8986\u76d6\u6b21\u6570>=m\u3002\n\n\u5982\u679c\u6709\u7684\u8bdd\u90a3\u5c31\u7edf\u8ba1\u4e00\u4e0b\u7b54\u6848\uff0c\u7136\u540e\u5c06\u524d\u9762\u52a0\u5165\u7684\u6309\u987a\u5e8f\u5220\u6389\uff0c\u76f4\u5230<m\u3002\n\n\u91cd\u590d\u4e0a\u8bc9\u7684\u8fc7\u7a0b\u3002\n\n\u5f88\u663e\u7136\u8fd9\u5229\u7528\u4e86\u5c3a\u53d6\u6cd5\u7684\u601d\u60f3\u3002\n\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u662f\u6211\u4eec\u5982\u4f55\u5feb\u901f\u5730\u5f97\u77e5\u662f\u5426\u6709   \u4e00\u4e2a\u70b9\u7684\u88ab\u8986\u76d6\u6b21\u6570>=m\u3002\n\n\u90a3\u5c31\u5f88\u663e\u7136\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\u5c31\u597d\u4e86\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u6210\u529f\u89e3\u51b3\u3002\n\n\n\n\n\n\n\n\n\n    \n    \n    \n\n    \n    \n    \n    \n    \n\n\n        \n        \n        \n    \n    \n        \n    \n    \n    \n            \n            \n        \n        \n            \n            \n        \n    \n    \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#include<stack>\n#include<queue>\nusing namespace std;\nconst int maxn=501000;\nconst int INF=1e9;\nstruct Point{\n    int val,ord;\n}p[maxn*4];\nstruct Data{\n    int len,ord;\n}a[maxn*4];\nint L[maxn*2],R[maxn*2],n,m,Right,cur=0;\nint tree[maxn*8],add[maxn*8];\nbool Cmp1(Point x1,Point x2){\n    if(x1.val<x2.val)return true;\n    return false;\n}\nbool Cmp2(Data x1,Data x2){\n    if(x1.len<x2.len)return true;\n    return false;\n}\nvoid Down(int rt,int l,int r){\n    if(!add[rt])return;\n    int ls=rt*2,rs=rt*2+1;\n    tree[ls]+=add[rt];\n    tree[rs]+=add[rt];\n    add[ls]+=add[rt];\n    add[rs]+=add[rt];\n    add[rt]=0;\n    return;\n}\nvoid Update(int rt,int l,int r,int x,int y,int val){\n    if(x>r||y<l)return;\n    if(x<=l&&y>=r){\n        tree[rt]+=val;\n        add[rt]+=val;\n        return;\n    }\n    int mid=(l+r)/2;\n    Down(rt,l,r);\n    Update(rt*2,l,mid,x,y,val);\n    Update(rt*2+1,mid+1,r,x,y,val);\n    tree[rt]=max(tree[rt*2],tree[rt*2+1]);\n    return;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        a[i].len=v-u;\n        a[i].ord=i;\n        cur++;\n        p[cur].val=u;\n        p[cur].ord=i;\n        cur++;\n        p[cur].val=v;\n        p[cur].ord=i;\n    }\n    sort(p+1,p+cur+1,Cmp1);\n    int num=0;\n    p[0].val=-1;\n    for(int i=1;i<=cur;i++){\n        if(p[i].val!=p[i-1].val)\n        num++;\n        int u=p[i].ord;\n        if(!L[u])\n        L[u]=num;\n        else R[u]=num;\n    }\n    Right=num;\n    sort(a+1,a+n+1,Cmp2);\n    int ans=INF,le=0,ri=0;\n    while(true){\n        while(tree[1]<m&&ri<=n){\n            ri++;\n            int u=a[ri].ord,v=L[u],w=R[u];\n            Update(1,1,Right,v,w,1);\n        }\n        if(tree[1]<m)break;\n        while(tree[1]>=m&&le<=n){\n            le++;\n            int u=a[le].ord,v=L[u],w=R[u];\n            Update(1,1,Right,v,w,-1);\n        }\n        ans=min(ans,a[ri].len-a[le].len);\n    }\n    if(ans==INF)printf(\"-1\\n\");\n    else\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1473934627,
        "uid": 5680,
        "name": "\u4e0a\u8fdb\u7684z\u541b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1712 \u3010\u533a\u95f4\u3011"
    },
    {
        "content": "\uff08\u91cd\u65b0\u4fee\u6539\u4e86\u7a3f\u5b50\uff0c\u8c03\u6574\u4e86\u683c\u5f0f\uff09\n\n\u6700\u8fd1\u5728\u7ec3\u7ebf\u6bb5\u6811\u548c\u79bb\u6563\u5316\uff0c\u5c31\u98de\u5230\u8fd9\u9898\u4e86\u3002\n\n\u5e73\u5fc3\u800c\u8bba\uff0c\u8fd9\u9053\u9898\u4f5c\u4e3aNOI T1 \u662f\u9001\u5206\u7684\uff0c\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u6700\u591a\u5f53tg\u7684D2T2\u3002\n\n\u9898\u89e3\u5927\u540c\u5c0f\u5f02\uff0c\u90fd\u662f\u8bf4\u5f00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u628al\uff0cr\u6392\u5e8f\uff0c\u7528\u5c3a\u53d6\u6cd5\u641e\u3002\n\n\u6bd5\u7adf\u53ea\u8981\u7ef4\u62a4\u5355\u70b9\u8986\u76d6\u6570\uff0c\u8fd8\u662f\u5f88\u5e38\u89c1\u7684\uff1b\u800c\u5c3a\u53d6\u6cd5\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u5fc5\u592a\u5728\u610f\uff0c\u5c31\u662f\u6307\u518d\u5411\u524d\u6269\u5c55\u65f6\uff0c\u4e0d\u65ad\u6839\u636e\u72b6\u6001\uff08\u5373\u4e0em\u5927\u5c0f\u5173\u7cfb\uff09\u8fdb\u884c\u52a8\u6001\u6536\u5c3e\u8c03\u6574\uff08\u5c31\u50cf\u4e00\u4e2a\u5c3a\u5b50\u5f80\u524d\u79fb\u4e00\u6837\uff09\uff0c\u5176\u5b9e\u7b14\u8005\u505a\u9898\u65f6\u4e5f\u6ca1\u60f3\u8fd9\u4e48\u591a\uff0c\u5c31\u628a\u5b83\u7801\u51fa\u6765\u4e86\uff0c\u540e\u6765\u624d\u77e5\u9053\u662f\u4f20\u8bf4\u4e2d\u7684\u5c3a\u53d6\u6cd5\u3002\n\n\u4f46\u662f\u8fd9\u9053\u9898\u4e5f\u662f\u6709\u5751\u70b9\u7684\u3002\u90a3\u6211\u5c31\u6765\u8bb2\u70b9\u5176\u4ed6\u9898\u89e3\u4e2d\u6ca1\u6709\u8bf4\u7684\u5751\u70b9\u5427\u3002\n\ncase1\uff1a\n\nleni = ri - li ([li ~ ri]) \u8fd9\u70b9\u9898\u76ee\u6761\u4ef6\u4e2d\u8bb2\u5230\u4e86\uff0c\u53ef\u6211\u773c\u778e\u52a0\u4e861\uff0c\u6211\u76f8\u4fe1\u4e5f\u6709\u540c\u5fd7\u4f1a\u641e\u9519\uff08\u867d\u7136\u597d\u50cf\u4e0d\u5f71\u54cd\u6392\u5e8f\uff0c\u6700\u540e\u4ea4\u4e0a\u53bb\u4e5f\u80fdAC\uff09\n\ncase2\uff1a\n\n\u79bb\u6563\u5316\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u6700\u5927\u7684bug\u662f\u7a7a\u95f4\uff0c\u5f00\u4e0d\u4e0b4e9\u5c31\u8001\u8001\u5b9e\u5b9eunique.\n\n\u6211\u79bb\u6563\u5316\u7b2c\u4e00\u904d\u90fd\u5199\u9519\u4e86\uff1a\n\n#### \u9519\u8bef\u8303\u4f8b\n\n```cpp\na[i].l = lower_bound(uni + 1, uni + tot + 1, a[i].l) - (uni + 1);\na[i].r = lower_bound(uni + 1, uni + tot + 1, a[i].r) - (uni + 1);\n```\n\n#### \u6b63\u786e\u5199\u6cd5\n\n```cpp\na[i].l = lower_bound(uni + 1, uni + tot + 1, a[i].l) - uni;\na[i].r = lower_bound(uni + 1, uni + tot + 1, a[i].r) - uni;\n```\n\ncase3:\n\n\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u4ebaquery\u5199\u590d\u6742\u4e86\uff0c\u5c31\u662ftmax[1]\u9e2d\uff01\uff01\uff01\n\n~~\u6211\u662f\u4e0d\u4f1a\u544a\u8bc9\u4f60\uff0c\u4e0a\u9762\u7684\u5751\u6211\u57fa\u672c\u90fd\u6389\u4e86~~\n\nLast\uff0c but not the least!\n\n#### CODE\uff1a\n\n```cpp\n//Program written by Liu Zhaozhou ~~~\n#include <bits/stdc++.h>\n#include <algorithm>\n#include <queue>\n#include <set>\n#include <vector>\n#include <deque>\n#include <string>\n\n#define lowbit(x) x & -x\n\n#pragma GCC optimize(3)\n\nusing namespace std;\n\nnamespace Base {\ninline char gc(void)\n{\n\tstatic char buf[100000], *p1 = buf, *p2 = buf;\n\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1++;\n}\n\n#define gc() getchar()\n\ntemplate <class T> inline void read(T &x)\n{\n\tT flag = 1; x = 0; register char ch = gc();\n\tfor (; !isdigit(ch); ch = gc()) if (ch == '-') flag = -1;\n\tfor (; isdigit(ch); ch = gc()) x = (x << 1) + (x << 3) + (ch & 15);\n\tx *= flag; return;\n}\n\ntemplate <class T> inline void write(T x) {\n\tif (x < 0) putchar('-'), x = -x;\n\tregister T y = 1; int len = 1;\n\tfor (; y <= x / 10; y *= 10) ++len;\n\tfor (; len; --len, x %= y, y /= 10) putchar(x / y + 48);\n}\n\ntemplate <class T> inline void writeln(T x) {write(x); puts(\"\");}\ntemplate <class T> inline void writeln(T x, char c) {write(x); putchar(c);}\ntemplate <class T> inline void writeln(char c, T x) {putchar(c); write(x);}\n\ntemplate <class T> inline void chkmax(T &x, const T y) {x > y ? x = x : x = y;}\ntemplate <class T> inline void chkmin(T &x, const T y) {x < y ? x = x : x = y;}\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\n\n#define Ms(arr, opt) memset(arr, opt, sizeof(arr))\n#define Mp(x, y) make_pair(x, y)\n\ninline void file(string str) {\n\tfreopen((str + \".in\").c_str(), \"r\", stdin);\n\tfreopen((str + \".out\").c_str(), \"w\", stdout);\n}\n}\n\nusing namespace Base;\n\nenum {\n\tMaxn = 5000005\n};\n\nclass RMQ_SegmentTree {\npublic:\n\tint tmax[Maxn << 2 | 1], tag[Maxn << 2 | 1];\n\t\n\tinline void pushup(int pos) {\n\t\ttmax[pos] = max(tmax[pos << 1], tmax[pos << 1 | 1]);\n\t}\n\t\n\tinline void add(int pos, int val) {\n\t\ttag[pos] += val; tmax[pos] += val;\n\t}\n\t\n\tinline void pushdown(int pos) {\n\t\tif (tag[pos]) {\n\t\t\tadd(pos << 1, tag[pos]);\n\t\t\tadd(pos << 1 | 1, tag[pos]);\n\t\t\ttag[pos] = 0; return;\n\t\t}\n\t}\n\t\n\tinline void build(int pos, int l, int r) {\n\t\ttag[pos] = tmax[pos] = 0;\n\t\tif (l == r) return;\n\t\tint mid = l + r >> 1;\n\t\tbuild(pos << 1, l, mid);\n\t\tbuild(pos << 1 | 1, mid + 1, r);\n\t}\n\t\n\tinline void modify(int pos, int l, int r, int L, int R, int val)\n\t{\n\t\tif (L > r || R < l) return;\n\t\tif (L <= l && R >= r) {add(pos, val); return;}\n\t\tpushdown(pos); int mid = l + r >> 1;\n\t\tif (L <= mid) modify(pos << 1, l, mid, L, R, val);\n\t\tif (R > mid) modify(pos << 1 | 1, mid + 1, r, L, R, val);\n\t\tpushup(pos);\n\t}\n\t\n\tinline int query_all(void) {return tmax[1];}\n} sgt;\n\nclass State {\npublic:\n\tint l, r, length;\n\tinline void setup(int _l, int _r) {\n\t\tl = _l, r = _r; length = r - l;\n\t}\n\tinline bool operator < (const State&opt)\n\tconst {\n\t\treturn length < opt.length;\n\t}\n} a[Maxn];\n\nint uni[Maxn], n, m, tot = 0;\n\nsigned main(void) {\n\t//file(\"\");\n\tread(n), read(m);\n\tfor (int i = 1, u, v; i <= n; i++) {\n\t\tread(u); read(v); a[i].setup(u, v);\n\t\tuni[++tot] = u; uni[++tot] = v;\n\t}\n\t\n\tsort(a + 1, a + n + 1);\n\tsort(uni + 1, uni + tot + 1);\n\ttot = unique(uni + 1, uni + tot + 1) - (uni + 1);\n\t\n\tfor (int i = 1; i <= n; i++) {\n\t\ta[i].l = lower_bound(uni + 1, uni + tot + 1, a[i].l) - uni;\n\t\ta[i].r = lower_bound(uni + 1, uni + tot + 1, a[i].r) - uni;\n\t}\n\t\n\tint tmpl = 1, ret = INT_MAX;\n\tsgt.build(1, 1, tot);\n\t\n\tfor (int i = 1; i <= n; i++) {\n\t\tsgt.modify(1, 1, tot, a[i].l, a[i].r, 1);\n\t\twhile (sgt.query_all() >= m) {\n\t\t\tchkmin(ret, a[i].length - a[tmpl].length);\n\t\t\tsgt.modify(1, 1, tot, a[tmpl].l, a[tmpl].r, -1);\n\t\t\ttmpl++;\n\t\t}\n\t}\n\t\n\tif (ret == INT_MAX) puts(\"-1\");\n\telse writeln(ret);\n\treturn 0;\n}\n\n/**/\n\n\n```\n\n~~\u7b14\u8005\u6e05\u5947\u4fca\u79c0\u7684\u4ee3\u7801\u7adf\u7136\u8fdb\u4e86\u524d\u4e94\u9875\uff01\uff01\uff01~~\n\n\u5199\u7801\u4e0d\u6613\uff0c\u8c22\u8c22\u5179\u78c1\uff01",
        "postTime": 1562491046,
        "uid": 50925,
        "name": "EternalEpic",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1712 \u3010[NOI2016]\u533a\u95f4\u3011"
    },
    {
        "content": "\u9996\u5148\u79bb\u6563\u5316\uff0810^9\u7ebf\u6bb5\u6811\u3002\u3002\u3002\uff09\n\n\u6309\u7167\u957f\u5ea6\uff08\u79bb\u6563\u524d\uff09\u6392\u5e8f\u4ee5\u540e\u80af\u5b9a\u4e00\u6bb5\u4e00\u6bb5\u53d6\uff0c\u4e8e\u662f\u53cc\u6307\u9488\n\n\u6bcf\u79fb\u52a8\u4e00\u6b21\u6307\u9488\u90fd\u662flogn\u7684\u7ebf\u6bb5\u6811\u4e0a\u7684\u4fee\u6539\n\n\u67e5\u8be2\u6700\u5927\u503c\u76f4\u63a5\u770b\u6811\u9876\n\n= =\u6807\u8bb0\u4e0b\u4f20\u7684\u4ec0\u4e48\u5fc3\u6001\uff0c\u663e\u7136\u53ef\u4ee5\u6c38\u4e45\u5316\uff0c\u53c8\u77ed\u53c8\u597d\u5199\u53c8\u5feb\n\n\n```cpp\n#include <bits/stdc++.h>\n#define mid (l+r>>1)\nusing namespace std;\nint n,m,ans=2100000000,l,r,ad[4000001],ma[4000001],p[4000001];\nstruct qj{ int l,r;} a[500001];\nbool operator<(qj a,qj b){ return (a.r-a.l)<(b.r-b.l);}\ninline int sum(int l,int r){ return p[a[r].r]-p[a[r].l]-p[a[l].r]+p[a[l].l];}\nvoid add(int now,int l,int r,int x,int y,int z)\n{\n    if(l==x && r==y)\n    {\n        ad[now]+=z;ma[now]+=z;\n        return;\n    }\n    if(x<=mid) add(now*2,l,mid,x,min(mid,y),z);\n    if(y>mid) add(now*2+1,mid+1,r,max(x,mid+1),y,z);\n    ma[now]=max(ma[now*2],ma[now*2+1])+ad[now];\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",&a[i].l,&a[i].r),p[i*2-1]=a[i].l,p[i*2]=a[i].r;\n    int N=2*n;sort(p+1,p+N+1);N=unique(p+1,p+N+1)-p-1;\n    sort(a+1,a+n+1);\n    for(int i=1;i<=n;i++)\n        a[i].l=lower_bound(p+1,p+N+1,a[i].l)-p,\n        a[i].r=lower_bound(p+1,p+N+1,a[i].r)-p;\n    for(l=1,r=0;l<=n;add(1,1,N,a[l].l,a[l].r,-1),l++)\n    {\n        while(r<n && ma[1]<m)\n            ++r,add(1,1,N,a[r].l,a[r].r,1);\n        if(r==n && ma[1]<m) break;\n        ans=min(ans,sum(l,r));        \n    }\n    printf(\"%d\\n\",(ans==2100000000)?-1:ans);\n    return 0;\n}\n```",
        "postTime": 1479214228,
        "uid": 885,
        "name": "wanglichao1121",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1712 \u3010\u533a\u95f4\u3011"
    },
    {
        "content": "\u5148\u6309\u7167\u957f\u5ea6\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u6dfb\u52a0\u533a\u95f4\u3002\u4ec0\u4e48\u662f\u6dfb\u52a0\uff1f\u8bbe\u8fd9\u4e2a\u533a\u95f4\u662f$[l,r]$\uff0c\u6dfb\u52a0\u5c31\u662f\u628a$a_l,a_{l+1},a_{l+2},{...},a_{r}$\u90fd\u52a0\u4e0a$1$\uff0c\u5176\u4e2d$a_i$\u8868\u793a\u7b2c$i$\u4e2a\u4f4d\u7f6e\u88ab\u51e0\u4e2a\u533a\u95f4\u8986\u76d6\u3002\u62ff\u8d70\u4e00\u4e2a\u533a\u95f4\u7684\u542b\u4e49\u5c31\u662f\u628a\u5b83\u4eec\u90fd\u51cf$1$\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5f88\u663e\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u5982\u679c\u5728\u6dfb\u52a0\u5230\u4e00\u4e2a\u533a\u95f4 $i$ \u65f6\uff0c\u6709\u4e00\u4e2a\u70b9\u88ab\u533a\u95f4\u8986\u76d6\u4e86$M$\u6b21\uff0c\u90a3\u4e48\u5148\u66f4\u65b0\u7b54\u6848\uff0c\u518d\u628a\u524d\u9762\u7684\u52a0\u5165\u8fc7\u7684\u533a\u95f4\u4e00\u76f4\u62ff\u76f4\u5230\u6ca1\u6709\u4e00\u4e2a\u70b9\u88ab\u8986\u76d6$M$\u6b21\u3002\u5982\u4f55\u5224\u65ad\u6709\u6ca1\u6709\u70b9\u88ab\u8986\u76d6$M$\u6b21\uff1f\u56e0\u4e3a\u662f\u4e00\u4e2a\u4e00\u4e2a\u533a\u95f4\u52a0\u7684\uff0c\u6240\u4ee5\u53ea\u7528\u7ef4\u62a4\u4e00\u4e2a$a_i$\u7684\u6700\u5927\u503c\uff0c\u770b\u4ed6\u662f\u5426$=M$\u5c31\u884c\u4e86\u3002\n\n\u4ec0\u4e48\u53eb**\u518d\u628a\u524d\u9762\u7684\u52a0\u5165\u8fc7\u7684\u533a\u95f4\u4e00\u76f4\u62ff\u76f4\u5230\u6ca1\u6709\u4e00\u4e2a\u70b9\u88ab\u8986\u76d6$M$\u6b21**\uff1f\n\n\u6bd4\u5982\u4f60\u4e00\u76f4\u6dfb\u52a0\u533a\u95f4\u5230\u7b2c$5$\u4e2a\uff0c\u6b64\u65f6\u6709\u4e00\u4e2a\u70b9\u88ab\u8986\u76d6\u4e86$M$\u6b21\u3002\u8fd9\u65f6\u4f60\u5c31\u5c06\u7b2c\u4e00\u4e2a\u533a\u95f4\u62ff\u51fa\uff0c\u5982\u679c\u6b64\u65f6\u4f9d\u7136\u6709\u6709\u4e00\u4e2a\u70b9\u88ab\u8986\u76d6\u4e86$M$\u6b21\uff0c\u90a3\u4e48\u4f60\u5c31\u62ff\u8d70\u7b2c\u4e8c\u4e2a...\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u597d\u6bd4\u4e00\u4e2a\u961f\u5217\uff0c\u53ef\u4ee5\u4ece\u540e\u9762\u6dfb\u52a0\u533a\u95f4\u8fbe\u5230\u4e00\u4e2a\u70b9\u88ab\u8986\u76d6\u4e86$M$\u6b21\uff1b\u4ece\u524d\u9762\u5f39\u51fa\u533a\u95f4\u76f4\u5230\u6ca1\u6709\u4e00\u4e2a\u70b9\u88ab\u8986\u76d6\u4e86$M$\u6b21\u3002\n\n\u5dee\u4e0d\u591a\u5c31\u662f\u8fd9\u6837\uff0c\u8fd8\u6709\u6ce8\u610f\u4e00\u4e0b$l_i,r_i \\leq 10^9$\uff0c\u5f00\u7ebf\u6bb5\u6811\u662f\u8981\u79bb\u6563\u5316\u7684\u3002\u4e0a\u4ee3\u7801\uff1a \n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n\nconst int MAXN = 1000500;\nint N, M, l[MAXN], r[MAXN], lid[MAXN], rid[MAXN], cnt;\nstruct node {\n    int left, right, Max, lazy;\n    node *ch[2];\n}pool[MAXN * 3], *root; \nstruct xianduan {\n    int len, l, r;\n    bool operator < (const xianduan& a) const {\n        return len < a.len;\n    }\n}b[MAXN];\nstruct getin {\n    int d, lid, rid, nid;\n    bool operator < (const getin &a) const {\n        return d < a.d;\n    } \n}a[MAXN * 2];\ninline void pushdown(node *r) {\n    if(!r->lazy) return ;\n    r->Max += r->lazy;\n    if(r->ch[0]) r->ch[0]->lazy += r->lazy;\n    if(r->ch[1]) r->ch[1]->lazy += r->lazy;\n    r->lazy = 0;\n}\ninline void pushup(node *r) {\n    r->Max = max(r->ch[0]->Max, r->ch[1]->Max);\n}\ninline void build(node *r, int left, int right) {\n    r->left = left, r->right = right;\n    if(left == right) return ;\n    int mid = (left + right) / 2;\n    node *lson = &pool[++cnt], *rson = &pool[++cnt];\n    r->ch[0] = lson, r->ch[1] = rson;\n    build(lson, left, mid); build(rson, mid + 1, right);\n}\ninline\u3000void\u3000change(node *r, int left, int right, int d) {\n    if(r->left == left && r->right == right) {\n        r->lazy += d; return ;\n    }\u3000\u3000\u3000\u3000\n    pushdown(r);\n    if(r->ch[0]->right >= right) change(r->ch[0], left, right, d);\u3000\u3000\u3000\u3000\n    else if(r->ch[1]->left <= left) change(r->ch[1], left, right, d);\u3000\u3000\u3000\u3000\u3000\n    else change(r->ch[0], left, r->ch[0]->right, d), change(r->ch[1], r->ch[1]->left, right, d);\n    pushdown(r->ch[0]), pushdown(r->ch[1]), pushup(r);\n}\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\nint main()\u3000 {\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n    root = &pool[0];\n    scanf(\"%d%d\", &N, &M);\n    for(int\u3000i\u3000=\u30001; i <= N; i++) {\n    \tscanf(\"%d%d\", &l[i], &r[i]);\n    \ta[2 * i -\u30001].d = l[i], a[2 * i - 1].lid = i, a[2 * i - 1].rid = -1;\u3000\n    \ta[2 * i].d = r[i], a[2 * i].lid = -1, a[2 * i].rid\u3000= i;\u3000\n    }\u3000\n    sort(a + 1, a\u3000+\u30002 * N + 1);\u3000\n    a[0].d = -1;\u3000\n    for(int i = 1; i <= 2 * N; i++) {\u3000\n        if(a[i].d == a[i - 1].d) a[i].nid = a[i - 1].nid;\n        else a[i].nid = a[i - 1].nid + 1;\u3000\n        if(a[i].lid != -1) lid[a[i].lid] = a[i].nid; \n        else rid[a[i].rid] = a[i].nid;\u3000\n    }\u3000\n    build(root, 1, a[2 * N].nid);\n    for(int i = 1; i <= N; i++) {\n        b[i].len = r[i] - l[i], b[i].l = lid[i], b[i].r = rid[i];\n    }\n    sort(b + 1, b + N + 1);\n    int last =\u30001, ans = 2147483647;\n    for(int i = 1; i <= N; i++) {\n        change(root, b[i].l, b[i].r, 1);\n        while(root->Max == M) {\n            change(root, b[last].l, b[last].r, -1);\n            ans = min(ans, b[i].len - b[last].len);\n            last++;\n        }\u3000\u3000\n    }\u3000\n    if(ans == 2147483647) ans = -1;\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n\u4e0d\u8981\u8bd5\u56fe\u63d0\u4ea4\u6211\u7684\u4ee3\u7801\uff0c\u4f60\u4f1a\u56e0\u4e3a\u4e00\u4e9b\u5947\u602a\u7684\u7a7a\u683c\u82b1\u5f0fCE\u7684\u3002\n\n",
        "postTime": 1529842825,
        "uid": 54745,
        "name": "Gypsophila",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1712 \u3010[NOI2016]\u533a\u95f4\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u80af\u5b9a\u77e5\u9053\uff0c\u5982\u679c\u8981\u6dfb\u52a0\u4e00\u4e2a\u533a\u95f4\u7684\u8bdd\u80af\u5b9a\u662f\u533a\u95f4\u52a0\u7684\uff0c\u90a3\u6211\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u5c31\u662f\u627e\u5230\u88ab\u8986\u76d6m\u6b21\u4ee5\u4e0a\u7684\u70b9\uff0c\u540c\u65f6\u5728\u8986\u76d6\u7684\u65f6\u5019\u8bb0\u4e0b\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u6700\u5927\u548c\u6700\u5c0f\u7684\u533a\u95f4\u3002\n\n\u7136\u800c\u8fd9\u4e2a\u7b97\u6cd5\u5f88\u96be\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u70b9\u5728\u7684\u6700\u5927\u548c\u6700\u5c0f\u7684\u533a\u95f4\u96be\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u90a3\u6211\u4eec\u6362\u4e00\u4e2a\u505a\u6cd5\uff0c\u679a\u4e3e\u80fd\u6784\u6210\u7b54\u6848\u7684\u533a\u95f4\uff0c\uff0c\u8fd9\u662f\u4e2aN2\u7684\u6b65\u9aa4\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\u7b54\u6848\uff0c\u6211\u4eec\u5148\u5bf9\u533a\u95f4\u6309\u957f\u5ea6\u6392\u4e2a\u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e00\u4e2aN2 log N\u7684\u7b97\u6cd5\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4f18\u5316\uff0c\u60f3\u4e00\u4e0b\u524d\u9762\u90a3\u4e2a\u7b97\u6cd5\u6709\u4ec0\u4e48\u6d6a\u8d39\u7684\u5730\u65b9\uff1f\n\n\u5047\u8bbe\u6211\u4eec\u5728\u4ece\u7b2ci\u4e2a\u533a\u95f4\u9009\u8d77\uff0c\u4e00\u76f4\u9009\u4e86j\u4e2a\u533a\u95f4\uff0c\u6b64\u65f6\u7b26\u5408\u8981\u6c42\u4e86\uff0c\u6211\u4eec\u9009\u5b8c\u6536\u5de5\uff0c\u7ebf\u6bb5\u6811\u6e05\u96f6\u3002\n\n\u5230\u4e86\u7b2ci+1\u4e2a\u533a\u95f4\uff0c\u597d\u50cf\u4e5f\u81f3\u5c11\u8981\u9009\u5230\u7b2cj\u4e2a\u533a\u95f4\uff0c\u8fd9\u4e48\u4e00\u770b\uff0c\u6211\u4eec\u53ea\u8981\u628a\u7b2ci\u4e2a\u533a\u95f4\u5220\u4e86\u5c31\u597d\u4e86\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(N)\u3002\uff08\u6709\u70b9\u50cf\u6ed1\u52a8\u7a97\u53e3\uff1f\uff09\n\n\u8fd9\u6837\u5927\u6982\u5c31\u5b8c\u4e86\u5417\uff0c\u8fd8\u6709\u51e0\u4e2a\u5c0f\u95ee\u9898\u3002\n\nQ\uff1a\u600e\u4e48\u5224\u65ad\u662f\u5426\u6709\u70b9\u88ab\u8986\u76d6\u4e86m\u6b21\uff1f\n\nA\uff1a\u8fd9\u4e2a\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6700\u5927\u503c\uff0c\u8fd9\u6837\u53ea\u8981\u770b\u6839\u8282\u70b9\u5c31\u597d\u4e86\uff0c\u90fd\u4e0d\u7528\u5199\u67e5\u8be2\u51fd\u6570\u3002\n\nQ\uff1a\u4e3a\u4ec0\u4e48\u4f60\u6ca1\u6709\u8bf4\u79bb\u6563\u5316\u548c\u53bb\u91cd\uff1f\n\nA\uff1a\u8fd9\u3002\u3002\u3002\u6709\u4eba\u4f1a\u5fd8\u5417\uff1f\n\nPS:\u4ee3\u7801\u91cc\u8fd8\u6709\u70b9\u6ce8\u91ca\n\n```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define ll long long\n#define re register\n#ifdef ONLINE_JUDGE\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){if(A==B){B=(A=ss)+fread(ss,1,1<<17,stdin);if(A==B)return EOF;}return*A++;}\ntemplate<class T>inline void read(T&x){\n    static char c;static int y;\n    for(c=gc(),x=0,y=1;c<48||57<c;c=gc())if(c=='-')y=-1;\n    for(;48<=c&&c<=57;c=gc())x=((x+(x<<2))<<1)+(c^'0');\n    x*=y;\n}\n#else\nvoid read(ll&x){scanf(\"%lld\",&x);}\n#endif\t\t//\u4e0a\u9762\u662f\u8bfb\u4f18\nusing namespace std;\nstruct node{\n\tll l,r,z;\n}qg[500001];\nll a[1500010],sum[4000010],ad[4000010];\t\t//\u7531\u4e8e\u4e00\u4e2a\u533a\u95f4\u6709\u4e24\u4e2a\u70b9\uff0c\u6240\u4ee5\u6700\u574f\u60c5\u51b5\u8981\u5f00\u516b\u500d\u6570\u7ec4\nll n,m,tail,head,ans,size,minn,maxn;\ninline bool cmp(node c,node d){\n\treturn c.z<d.z;\n}\ninline void pushdown(ll rt){\n\tif (ad[rt]){\n\t\tsum[rt<<1]+=ad[rt];\n\t\tsum[rt<<1|1]+=ad[rt];\n\t\tad[rt<<1]+=ad[rt];\n\t\tad[rt<<1|1]+=ad[rt];\n\t\tad[rt]=0;\n\t}\n}\nvoid update(ll rt,ll l,ll r,ll x,ll y,ll k){\n\tif (x>r||l>y) return;\n\tif (x<=l&&r<=y){\n\t\tad[rt]+=k;\n\t\tsum[rt]+=k;\n\t\treturn;\n\t}\n\tpushdown(rt);\n\tll mid=(l+r)>>1;\n\tupdate(rt<<1,l,mid,x,y,k);\n\tupdate(rt<<1|1,mid+1,r,x,y,k);\n\tsum[rt]=max(sum[rt<<1],sum[rt<<1|1]);\n}\nint main(){\n\tll x,y;\n\tread(n); read(m);\n\tfor (re int i=1; i<=n; i++){\n\t\tread(x); read(y);\n\t\ta[i*2]=x; a[i*2+1]=y;\n\t\tqg[i].l=x; qg[i].r=y; qg[i].z=y-x;\n\t}\n\tsort(a+1,a+n*2+2);\t\t\t\t\t // \u5148\u6392\u5e8f\n\tsize=unique(a+1,a+n*2+1)-(a+1);\t\t//\u518d\u53bb\u91cd\n\tsort(qg+1,qg+n+1,cmp);\n\tfor (re int i=1; i<=n; i++){\n\t\tqg[i].l=lower_bound(a+1,a+size+1,qg[i].l)-a;\t//\u627e\u5230\u533a\u95f4i\u53ef\u4fee\u6539\u7684\u8303\u56f4\n\t\tqg[i].r=lower_bound(a+1,a+size+1,qg[i].r)-a;\n\t\tminn=min(minn,qg[i].l); maxn=max(maxn,qg[i].r);\t//\u8fd9\u4e2a\u662f\u7ebf\u6bb5\u6811\u7684\u603b\u8303\u56f4\n\t}\n\thead=0; tail=0;\n\tans=1e9;\n\twhile (tail<n){\n\t\twhile (sum[1]<m&&tail<=n){\t\t//\u5165\u961f\u77e5\u9053\u7b26\u5408\u6761\u4ef6\n\t\ttail++; update(1,minn,maxn,qg[tail].l,qg[tail].r,1);}\n\t\tif (sum[1]<m) break;\n\t\twhile (sum[1]>=m&&tail>=head){\t//\u4e3a\u4fdd\u8bc1\u7b54\u6848\u6700\u4f18\u51fa\u961f\u65e0\u7528\u7684\u5143\u7d20\n\t\thead++; update(1,minn,maxn,qg[head].l,qg[head].r,-1);}\n\t\tans=min(ans,qg[tail].z-qg[head].z);\n\t}\n\tif (ans==1e9) ans=-1;\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1535286821,
        "uid": 63661,
        "name": "Taduro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1712 \u3010[NOI2016]\u533a\u95f4\u3011"
    },
    {
        "content": "\u8ddf[\u8fde\u73af\u75c5\u539f\u4f53](https://www.luogu.org/problemnew/show/P4230)\u633a\u50cf\u7684\u3002\n\n\u628a\u533a\u95f4\u6309\u957f\u5ea6\u6392\u5e8f\uff0c\u7aef\u70b9\u79bb\u6563\u5316\u3002\n\n\u56e0\u4e3a\u8981\u82b1\u8d39\u6700\u5c0f\uff0c\u6240\u4ee5\u6309\u957f\u5ea6\u6392\u5e8f\u4e4b\u540e\uff0c\u6700\u4f18\u65b9\u6848\u4e00\u5b9a\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4$[L_l,R_l],[L_{l+1},R_{l+1}],...,[L_r,R_r]$\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684$l$\uff0c\u5982\u679c\u7b2c$l$\u4e2a\u533a\u95f4\u5230\u7b2c$r$\u4e2a\u533a\u95f4\u6784\u6210\u4e86\u4e00\u4e2a\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f$r'>r$\uff0c\u7b2c$l$\u4e2a\u533a\u95f4\u5230\u7b2c$r'$\u4e2a\u533a\u95f4\u4e00\u5b9a\u4e5f\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u5e76\u4e14\u82b1\u8d39\u4e00\u5b9a\u6bd4$l$\u5230$r$\u7684\u82b1\u8d39\u5927\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a$l$\uff0c\u627e\u51fa\u6700\u5c0f\u7684$r$\u4f7f\u5f97\u9009\u62e9$l$\u4e2a\u533a\u95f4\u5230\u7b2c$r$\u4e2a\u533a\u95f4\u662f\u5408\u6cd5\u7684\uff0c\u7136\u540e\u66f4\u65b0\u7b54\u6848\u3002\n\n\u540c\u65f6\u6ce8\u610f\u5230\u91cd\u8981\u6027\u8d28\uff1a\u5f53$l$\u9012\u589e\u7684\u65f6\u5019\uff0c\u6700\u5c0f\u7684$r$\u5355\u8c03\u4e0d\u51cf\u3002\n\n\u4e8e\u662f\u4f7f\u7528\u7ecf\u5178\u7684\u53cc\u6307\u9488\uff08\u7c7b\u4f3c\u4e8e\u5355\u8c03\u961f\u5217\u6216\u8005\u4e5f\u53ef\u80fd\u662f\u5c31\u662f\u5355\u8c03\u961f\u5217\uff09\u626b\u4e00\u904d\u5373\u53ef\u3002\n\n\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u65b9\u6848\u662f\u5426\u5408\u6cd5\uff1f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4\u4e0a\u7684\u6bcf\u4e2a\u70b9\u88ab\u8986\u76d6\u4e86\u591a\u5c11\u6b21\u4ee5\u53ca\u8986\u76d6\u6b21\u6570\u6700\u5927\u503c\u3002\n\n\u590d\u6742\u5ea6\uff1a\u6bcf\u4e2a\u5143\u7d20\u81f3\u591a\u88ab\u4e24\u4e2a\u6307\u9488\u5404\u626b\u4e00\u6b21\uff0c\u6bcf\u6b21\u626b\u5230\u90fd\u8981\u8c03\u7528\u4e00\u6b21\u7ebf\u6bb5\u6811\u4e0a\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u590d\u6742\u5ea6$O(nlog_{2}n)$\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\ntemplate <typename T> inline void read(T& t) {\n    int f = 0, c = getchar(); t = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) t = t * 10 + c - 48, c = getchar();\n    if (f) t = -t;\n}\n#if __cplusplus >= 201103L\ntemplate <typename T, typename... Args>\ninline void read(T& t, Args&... args) {\n    read(t); read(args...);\n}\n#else\ntemplate <typename T1, typename T2>\ninline void read(T1& t1, T2& t2) { read(t1); read(t2); }\ntemplate <typename T1, typename T2, typename T3>\ninline void read(T1& t1, T2& t2, T3& t3) { read(t1, t2); read(t3); }\ntemplate <typename T1, typename T2, typename T3, typename T4>\ninline void read(T1& t1, T2& t2, T3& t3, T4& t4) { read(t1, t2, t3); read(t4); }\ntemplate <typename T1, typename T2, typename T3, typename T4, typename T5>\ninline void read(T1& t1, T2& t2, T3& t3, T4& t4, T5& t5) { read(t1, t2, t3, t4); read(t5); }\n#endif\t// C++11\n\n#ifdef WIN32\n#define LLIO \"%I64d\"\n#else\n#define LLIO \"%lld\"\n#endif\t// WIN32 long long\n#define rep(I, A, B) for (int I = (A); I <= (B); ++I)\n#define rrep(I, A, B) for (int I = (A); I >= (B); --I)\n#define erep(I, X) for (int I = head[X]; I; I = next[I])\n\nconst int maxn = 5e5 + 207, inf = INT_MAX;\nint mx[maxn << 3], delta[maxn << 3];\nint tmp[maxn << 1];\nstruct Range {\n    int le, rg, len;\n    Range(int l, int r) : le(l), rg(r), len(r - l) {}\n    Range() : le(0), rg(0), len(0) {}\n};\nRange ran[maxn];\nint n, m, all;\n\ninline bool operator<(const Range& lhs, const Range& rhs) {\n    return lhs.len < rhs.len;\n}\n\ninline void upd(int curr) {\n    mx[curr] = std::max(mx[curr << 1], mx[curr << 1 | 1]);\n}\ninline void pd(int curr, int lb, int rb) {\n    if (delta[curr]) {\n        int &d = delta[curr];\n        delta[curr << 1] += d; delta[curr << 1 | 1] += d;\n        mx[curr << 1] += d; mx[curr << 1 | 1] += d; d = 0;\n    }\n}\nvoid mdf(int curr, int lb, int rb, int l, int r, int d) {\n    if (l > rb || r < lb) return;\n    if (l <= lb && r >= rb) {\n        delta[curr] += d; mx[curr] += d; return;\n    }\n    pd(curr, lb, rb);\n    int mid = (lb + rb) >> 1;\n    mdf(curr << 1, lb, mid, l, r, d);\n    mdf(curr << 1 | 1, mid + 1, rb, l, r, d);\n    upd(curr);\n}\n\nint main() {\n    read(n, m);\n    rep(i, 1, n) {\n        int l, r; read(l, r);\n        ran[i] = Range(l, r);\n        tmp[++all] = l; tmp[++all] = r;\n    }\n    std::sort(tmp + 1, tmp + all + 1);\n    all = std::unique(tmp + 1, tmp + all + 1) - (tmp + 1);\n    rep(i, 1, n) {\n        ran[i].le = std::lower_bound(tmp + 1, tmp + all + 1, ran[i].le) - tmp;\n        ran[i].rg = std::lower_bound(tmp + 1, tmp + all + 1, ran[i].rg) - tmp;\n    }\n    std::sort(ran + 1, ran + n + 1);\n    int ans = inf;\n    for (int l = 1, r = 0; l <= n; ++l) {\n        bool found = 0;\n        while (r < n) {\n            ++r; mdf(1, 1, all, ran[r].le, ran[r].rg, 1);\n            if (mx[1] >= m) { found = 1; break; }\n        }\n        if (found) {\n            ans = std::min(ans, ran[r].len - ran[l].len);\n            mdf(1, 1, all, ran[r].le, ran[r].rg, -1); --r;\n        } else break;\n        mdf(1, 1, all, ran[l].le, ran[l].rg, -1);\n    }\n    printf(\"%d\\n\", ans < inf ? ans : -1);\n    return 0;\n}\n```\n\n\u8fde\u73af\u75c5\u539f\u4f53\u90a3\u9898\u5c31\u662f\u628a\u8fd9\u91cc\u7684\u7ebf\u6bb5\u6811\u6362\u6210\u4e86$lct$\u800c\u5df2\u3002",
        "postTime": 1537724217,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1712 \u3010[NOI2016]\u533a\u95f4\u3011"
    },
    {
        "content": "\u533a\u95f4\u8fd9\u9053\u9898\u76ee\u662f\u4e00\u9053\u5f88\u597d\u7684\u9898\u3002\n\n\u672c\u9898\u5173\u952e\u5728\u4e8e\u601d\u7ef4\u7684\u96be\u5ea6\uff0c\u60f3\u5230\u4e86\u6b63\u786e\u7684\u505a\u6cd5\uff0c\u5b9e\u73b0\u8d77\u6765\u5e76\u4e0d\u96be\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8bb2\u4e00\u8bb2\u505a\u6cd5\u3002\n\n\u50cf\u8fd9\u4e00\u7c7b\u533a\u95f4\u8986\u76d6\u7684\u95ee\u9898\u90fd\u662f\u6709\u7ae0\u53ef\u5faa\u7684\u3002\u6211\u4eec\u770b\u5230\u8981\u6c42\u7684\u662f\u6700\u5927\u533a\u95f4\u957f\u5ea6\u51cf\u53bb\u6700\u5c0f\u7684\u533a\u95f4\u957f\u5ea6\u3002\u4ece\u800c\u6211\u4eec\u81ea\u7136\u5730\u60f3\u5230\u8981\u5148\u7ed9\u4ed6\u4eec\u6309\u7167\u533a\u95f4\u957f\u5ea6\u6392\u4e00\u4e2a\u5e8f\u3002\n\n\u7136\u540e\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u679a\u4e3e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u628a\u8986\u76d6\u5230\u7684\u6bcf\u4e00\u4e2a\u70b9\u7684\u6b21\u6570\u7edf\u8ba1\u51fa\u6765\u3002\n\u5982\u679c\u6211\u4eec\u53d1\u73b0\u6b64\u523b\u6709\u4e00\u4e2a\u70b9\u7684\u4e2a\u6570\u5927\u4e8e\u4e86m\uff0c\u90a3\u4e48\u8bf4\u660e\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u3002\u628a\u8fd9\u4e2a\u7b54\u6848\u66f4\u65b0\u3002\u7136\u540e\u518d\u4ece\u524d\u9762\u5220\u533a\u95f4\uff0c\u76f4\u5230\u8fd9\u4e2a\u4e2a\u6570\u5c0f\u4e8em\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u5982\u679c\u5f53\u524d\u627e\u5230\u4e86\u4e00\u4e2a\u7b54\u6848\u3002\u90a3\u4e48\u6b64\u65f6\u7684\u533a\u95f4\u80fd\u591f\u6210\u4e00\u4e2a\u89e3\u3002\u5982\u679c\u73b0\u5728\u4e0d\u4ece\u524d\u5f80\u540e\u66f4\u65b0\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u4e4b\u540e\u53c8\u4f1a\u53d1\u73b0\u53e6\u5916\u4e00\u4e2a\u89e3\uff0c\u4f46\u8fd9\u4e2a\u89e3\u5f62\u6210\u7684\u957f\u5ea6\u80af\u5b9a\u4e0d\u6bd4\u524d\u4e00\u4e2a\u533a\u95f4\u5f62\u6210\u7684\u957f\u5ea6\u66f4\u4f18\u3002\u6240\u4ee5\u6211\u4eec\u628a\u524d\u9762\u7684\u5411\u540e\u63a8\uff0c\u53c8\u5f97\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u8d77\u70b9\u3002\u800c\u5982\u679c\u5411\u540e\u63a8\u6ca1\u6709\u63a8\u5230\u5c0f\u4e8em\uff0c\u90a3\u4e48\u4e4b\u540e\u7684\u6700\u597d\u533a\u95f4\u4ecd\u7136\u4f1a\u662f\n\u524d\u4e00\u4e2a\u533a\u95f4\n\n\u4ece\u800c\u8fd9\u6837\u5728\u4e0d\u65ad\u7684\u66f4\u65b0\u4e2d\u80fd\u5f97\u5230\u6700\u597d\u7684\u7b54\u6848\u3002\n\u627e\u8fd9\u6837\u7684\u503c\u7531\u4e8e\u662f\u4e0b\u6807\u9012\u589e\u7684\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662fO\uff08\u80fd\u8fc7\uff09\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int maxn=500005;\nconst int INF=1e9;\nint n,m;\nint cnt=0;\nstruct vode\n{\n\tint len;\n\tint id;\n}a[maxn*4];\nstruct node\n{\n\tint val;\n\tint id;\n}p[maxn*4];\nbool cmp1(node x,node y)\n{\n\treturn x.val<y.val;\n}\nint l[maxn*2];\nint r[maxn*2];\nbool cmp2(vode x,vode y)\n{\n\treturn x.len<y.len;\n}\nint tree[maxn*8];\nint add[maxn*8];\nvoid down(int root,int l,int r)\n{\n\tif(!add[root])\n\treturn;\n\ttree[root*2]+=add[root];\n\ttree[root*2+1]+=add[root];\n\tadd[root*2]+=add[root];\n\tadd[root*2+1]+=add[root];\n\tadd[root]=0;\n}//\u7ebf\u6bb5\u6811\u7684\u61d2\u6807\u8bb0\u4e0b\u4f20 \n\nvoid update(int root,int l,int r,int x,int y,int val)\n{\n\tif(x>r || y<l)\n\treturn;\n\tif(x<=l && y>=r)\n\t{\n\t\ttree[root]+=val;\n\t\tadd[root]+=val;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tdown(root,l,r);\n\tupdate(root*2,l,mid,x,y,val);\n\tupdate(root*2+1,mid+1,r,x,y,val);\n\ttree[root]=max(tree[root*2],tree[root*2+1]);\n\treturn;\n}//\u66f4\u65b0\u90e8\u5206 \n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\ta[i].len=y-x;\n\t\ta[i].id=i;\n\t\tcnt++;\n\t\tp[cnt].val=x;\n\t\tp[cnt].id=i;\n\t\tcnt++;\n\t\tp[cnt].val=y;\n\t\tp[cnt].id=i;\n\t}\n\tsort(p+1,p+1+cnt,cmp1);\n\tint tot=0;\n\tp[0].val=-1;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tif(p[i].val!=p[i-1].val)\n\t\t{\n\t\t\ttot++;\n\t\t}//\u79bb\u6563\u5316 \n\t\tint point=p[i].id;\n\t\tif(!l[point])\n\t\tl[point]=tot;\n\t\telse\n\t\tr[point]=tot;\n\t}\n\t//\u524d\u9762\u662f\u9884\u5904\u7406\u90e8\u5206\uff0c\u4ee5\u53ca\u79bb\u6563\u5316\u3002 \n\tint Right=tot;\n\tsort(a+1,a+1+n,cmp2);\n\tint ans=INF;\n\tint L=0;\n\tint R=0;\n\t//\u63a5\u4e0b\u6765\u5c31\u662f\u4ece\u5de6\u5f80\u53f3\u679a\u4e3e\n\t//\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 \n\twhile(true)\n\t{\n\t\twhile(tree[1]<m && R<=n)\n\t\t{\n\t\t\tR++;\n\t\t\tint u=a[R].id;\n\t\t\tint v=l[u];\n\t\t\tint w=r[u];\n\t\t\tupdate(1,1,Right,v,w,1);\n\t\t}//\u8fd9\u91cc\u662f\u52a0\u5165\u90e8\u5206\uff0c\u52a0\u5165\u5c31\u628a\u533a\u95f4\u52a0\u5165\u7ebf\u6bb5\u6811\u4e2d \n\t\tif(tree[1]<m)\n\t\tbreak;//\u6761\u4ef6\u6210\u7acb\u65f6\u76f4\u63a5\u9000 \n\t\twhile(tree[1]>=m && L<=n)\n\t\t{\n\t\t\tL++;\n\t\t\tint u=a[L].id;\n\t\t\tint v=l[u];\n\t\t\tint w=r[u];\n\t\t\tupdate(1,1,Right,v,w,-1);\n\t\t}//\u8fd9\u91cc\u662f\u5220\u9664\u90e8\u5206\uff0c\u5220\u53bb\u4e00\u4e2a\u533a\u95f4\u76f8\u5f53\u4e8e\u5c31\u662f\u628a\n\t\t//\u8fd9\u4e2a\u533a\u95f4\u7684\u6570\u90fd\u51cf\u53bb1\u3002\n\t\t//\u4e00\u6837\u7684\u9053\u7406 \n\t\tans=min(ans,a[R].len-a[L].len);\n\t\t//\u66f4\u65b0ans\u7684\u503c \n\t}\n\tif(ans==INF)\n\t{\n\t\tprintf(\"-1\\n\");\n\t}\n\telse\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n} \n```\n\n\n\n\n\n",
        "postTime": 1571740756,
        "uid": 114514,
        "name": "zzr8178541919",
        "ccfLevel": 7,
        "title": "\u533a\u95f4"
    },
    {
        "content": "##[\u6233\u6211\u83b7\u5f97\u66f4\u597d\u89c2\u770b\u6548\u679c](https://www.cnblogs.com/zhenglw/p/9519162.html)\n\u8fd9\u9053\u9898\u4f5c\u4e3aNOI\u7684\u9898\u76ee\u8fd8\u7b97\u662f~~\u6bd4\u8f83\u6c34\u7684~~\uff08\u867d\u7136\u662f\u7b2c\u4e00\u9898\uff09 \n\u8fd9\u9053\u9898\u662f\u533a\u95f4\u64cd\u4f5c\uff0c~~\u4e0d\u96be\u770b\u51fa~~\u53ef\u4ee5\u7528**\u7ebf\u6bb5\u6811**\u505a\n##\u3010\u601d\u8def\u5206\u6790\u3011 \n\u7531\u4e8e\u6570\u636e\u5f88\u5927\uff0c\u6211\u4eec\u5148\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u7136\u540e\u6309\u533a\u95f4\u957f\u5ea6\u6392\u5e8f\u5e76\u5efa\u4e00\u68f5\u7a7a\u6811(\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u91cd\u5408\u90e8\u5206\u6700\u5927\u503c)\n\u6839\u636e\u8be5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u7ed3\u679c \uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053t[1].sum\u8bb0\u5f55\u7684\u662f\u5f53\u524d\u5404\u6761\u7ebf\u6bb5\u91cd\u5408\u7684\u6700\u5927\u503c\uff0c\u53ea\u8981t[1].sum\u5927\u4e8em\u5c31\u7b26\u5408\u9898\u76ee\u8981\u6c42\u4e86\n\u63a5\u7740\u6211\u4eec\u91c7\u7528\u5c3a\u53d6\u6cd5,\u5c31\u662f\u641e\u4e24\u4e2a\u6307\u9488\uff0c**\u4e00\u90e8\u5206**\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u964d\u5230 O(n)\u5e76\u628a\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u4eceO(n^2) \u964d\u5230\u4e86O(nlogn) \n\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u6765\u6c42\u6700\u5c0f\u82b1\u8d39,\u6211\u4eec\u5148\u5c06\u6392\u5e8f\u597d\u7684\u7ebf\u6bb5\u4e00\u6bb5\u4e00\u6bb5\u4e22\u5230\u7ebf\u6bb5\u6811\u91cc\uff0c\u5f53t[i].sum>=m\u65f6\uff0c\u6211\u4eec\u5c06\u4ece\u5934\u5f00\u59cb\u4e00\u6bb5\u4e00\u6bb5\u5220\u6389\uff0c\u76f4\u5230\u4e0d\u6ee1\u8db3\u6761\u4ef6\n\u5728\u6b64\u64cd\u4f5c\u540c\u65f6\uff0c\u6211\u4eec\u7ef4\u62a4ans\u6700\u5c0f\u503c \n\u5177\u4f53\u89c1\u4ee3\u7801\uff1a \n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define M 5000005\nusing namespace std;\ninline int read(){\n\tchar chr = getchar();\tint f = 1,ans = 0;\n\twhile(!isdigit(chr)) {if(chr == '-') f = -1;chr = getchar();}\n\twhile(isdigit(chr))  {ans = ans * 10;ans += chr - '0';chr = getchar();}\n\treturn ans* f ;\n}\nvoid write(int x){\n\tif(x < 0) putchar('-'),x=-x;\n\tif(x > 9) write(x / 10);\n\tputchar(x % 10 + '0');\n}\nint n,m,c[M<<2],tot=0;\nstruct segment{int l,r,len;}a[M<<2]; //\u8f93\u5165\u4fe1\u606f\nstruct node{int l,r,sum,lazy;int mid(){return l + r >> 1;} }t[M<<2];//\u7ebf\u6bb5\u6811\u4fe1\u606f\nbool cmp(const segment &a,const segment &b){return a.len<b.len;\t}//\u6392\u5e8f\nvoid push_down(int i){//\u4fe1\u606f\u4e0b\u4f20\n\tif(t[i].lazy){\n\t\tt[i << 1].lazy += t[i].lazy;\n\t\tt[i << 1 | 1].lazy += t[i].lazy;\n\t\tt[i << 1].sum += t[i].lazy;\n\t\tt[i << 1 | 1].sum += t[i].lazy;\n\t\tt[i].lazy = 0;\n\t}\n}\nvoid push_up(int i){//\u4fe1\u606f\u4e0a\u4f20\n\tt[i].sum = max(t[i << 1].sum,t[i << 1 | 1].sum);\n}\nvoid build(int i,int l,int r){\n\tt[i].l = l, t[i].r = r;\n\tif(l == r)\treturn;\n\tint m = t[i].mid();\n\tbuild(i << 1,l,m);\n\tbuild(i << 1 | 1,m+1,r);\n}//\u5efa\u6811\nvoid updata(int i,int l,int r, int v){\n\tif(l <= t[i].l && t[i].r <= r){\tt[i].lazy += v;\tt[i].sum += v;\treturn;\t}\n\tint m = t[i].mid();\n\tpush_down(i);\n\tif(l <= m) updata(i << 1, l, r, v);\n\tif(r > m)  updata(i << 1 | 1, l, r, v);\n\tpush_up(i);\n}//\u8282\u70b9\u66f4\u65b0\nint main(){\t\n\tn = read();\n\tm = read();\n\tfor(int i = 1;i <= n;i++)\n\t\ta[i].l = read(),a[i].r = read(),a[i].len = a[i].r-a[i].l,c[++tot] = a[i].l,c[++tot] = a[i].r,c[++tot] = a[i].r + 1;\n\tsort(a + 1,a + n + 1,cmp);\tsort(c + 1,c + tot + 1);\ttot=unique(c + 1,c + tot + 1) - c - 1;//\u53bb\u91cd \n\tint minl = 0x3f3f3f3f,maxr = -0x3f3f3f3f;\n\tfor(int i = 1;i <=n ;i++)\n\t\ta[i].l = lower_bound(c + 1,c + tot + 1 ,a[i].l) -c,minl = min(minl,a[i].l),\n\t\ta[i].r = lower_bound(c + 1,c + tot+ 1 ,a[i].r) -c,maxr = max(maxr,a[i].r);\n\t\t//\u9636\u6bb51\u3001\u8bfb\u5165\u3001\u6392\u5e8f\u5904\u7406\u3001\u79bb\u6563\u5316\t\n\tint l = 1,ans = 0x3f3f3f3f;\n\tbuild(1,minl,maxr);\n\tfor(int i = 1 ;i <= n;i++){\n        updata(1, a[i].l, a[i].r, 1);\n        while(t[1].sum >= m){\n            ans=min(a[i].len - a[l].len,ans);\n            updata(1, a[l].l, a[l].r, -1);        \n            l++;\n        }\n    }//\u9636\u6bb52 \u5c3a\u53d6\u6cd5\u6c42\u51fa\u6700\u5c0f\u82b1\u8d39\n    if(ans == 0x3f3f3f3f) write(-1);\n    else\twrite(ans);//\u8f93\u51fa\n\treturn 0;\n}\n```",
        "postTime": 1534930466,
        "uid": 9287,
        "name": "LevenKoko",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1712 \u3010[NOI2016]\u533a\u95f4\u3011"
    },
    {
        "content": "## \u7b97\u6cd5\u4e00\n\n\u9996\u5148\u5f53\u6211\u4eec\u786e\u5b9a\u8981\u53d6\u7684\u533a\u95f4\u82b1\u8d39\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u90a3\u4e48\u82b1\u8d39\u5728\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u4e4b\u95f4\u7684\u533a\u95f4\u6211\u4eec\u90fd\u53ef\u4ee5\u53d6\uff0c\u7136\u540e\u53ea\u8981\u5224\u65ad\u4e00\u4e0b\uff0c\u662f\u5426\u6709\u4e00\u4e2a\u70b9\u88ab\u81f3\u5c11m\u4e2a\u533a\u95f4\u8986\u76d6\u5c31\u884c\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u5148\u6309\u7167\u82b1\u8d39\u7ed9\u8fd9\u4e9b\u533a\u95f4\u6392\u4e2a\u5e8f\u3002\n\n\u7136\u540e\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u4e8c\u5206\u7b54\u6848\u3002\n\ncheck\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u533a\u95f4\u82b1\u8d39\u662f\u6709\u5e8f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u533a\u95f4\u626b\u4e0b\u53bb\uff0c\u6bcf\u6b21\u5230\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\u65f6\uff0c\u5c31\u628a\u5f53\u524d\u533a\u95f4\u7684\u82b1\u8d39\u5b9a\u4e3a\u6700\u5927\u503c\uff0c\u90a3\u4e48\u82b1\u8d39<\u5f53\u524d\u533a\u95f4-mid\u7684\u533a\u95f4\u5f39\u51fa\uff0c\u7136\u540e\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6709\u4e00\u4e2a\u70b9\u88ab\u81f3\u5c11m\u4e2a\u533a\u95f4\u8986\u76d6\u3002\n\n\u6211\u4eec\u7528\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u662f\u5426\u6709\u4e00\u4e2a\u70b9\u88ab\u81f3\u5c11m\u4e2a\u533a\u95f4\u8986\u76d6\u5c31\u884c\u4e86\u3002\n\n\u56e0\u4e3al\u548cr\u5f88\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u79bb\u6563\u4e0b\uff0c\u8fd9\u4e48\u7ebf\u6bb5\u6811\u5c31\u4e0d\u7528\u52a8\u6001\u5f00\u70b9\u4e86\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u533a\u95f4\u53ea\u4f1a\u88ab\u64cd\u4f5c\u4e24\u6b21(\u52a0\u5165\u4e00\u6b21\uff0c\u5f39\u51fa\u4e00\u6b21)\uff0c\u6240\u4ee5check\u7684\u590d\u6742\u5ea6\u662f$O(n log n)$\uff0c\u518d\u52a0\u4e0a\u4e8c\u5206\uff0c\u6700\u7ec8\u590d\u6742\u5ea6\u5c31\u662f$O(nlogn^2)$\u3002\n\n\u9884\u8ba1\u5f97\u5206:80\n\n~~\u8fd9\u5927\u6982\u5c31\u662f\u5f53\u5e74\u7684\u66b4\u529b\u5206\u628a~~\n\n```\n// by zykykyk\n#include<cstdio>\n#include<ctime>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<string>\n#include<cstring>\n#define rg register\n#define il inline\n#define vd void\n#define ll long long\n#define N 500010\n#define For(i,x,y) for (rg int i=(x);i<=(y);i++)\n#define Dow(i,x,y) for (rg int i=(x);i>=(y);i--)\n#define cross(i,k) for (rg int i=first[k];i;i=last[i])\nusing namespace std;\nil ll max(ll x,ll y){return x>y?x:y;}\nil ll min(ll x,ll y){return x<y?x:y;}\nil ll read(){\n    ll x=0;int ch=getchar(),f=1;\n    while (!isdigit(ch)&&(ch!='-')&&(ch!=EOF)) ch=getchar();\n    if (ch=='-'){f=-1;ch=getchar();}\n    while (isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n    return x*f;\n}\nstruct node{\n    int l,r,v;\n}a[N];\nstruct Node{\n    int v,id;\n    bool flag;\n}c[N<<1];\nint n,m,cnt,tot;\nil bool cmp(node a,node b){return a.v<b.v;}\nil bool Cmp(Node a,Node b){return a.v<b.v;}\nil vd init(){\n    n=read(),m=read();\n    For(i,1,n) a[i].l=read(),a[i].r=read(),a[i].v=a[i].r-a[i].l;\n    sort(a+1,a+1+n,cmp);\n    For(i,1,n) c[++cnt]=(Node){a[i].l,i,0},c[++cnt]=(Node){a[i].r,i,1};\n    sort(c+1,c+1+cnt,Cmp);\n    c[0].v=-1;\n    For(i,1,cnt){\n        if (c[i].v!=c[i-1].v) tot++;\n        c[i].flag?a[c[i].id].r=tot:a[c[i].id].l=tot;\n    }\n}\n\nint v[N*2*8],lazy[N*2*8];\nil vd push_down(int u){\n    if (lazy[u]){\n        lazy[u<<1]+=lazy[u],lazy[u<<1^1]+=lazy[u];\n        v[u<<1]+=lazy[u],v[u<<1^1]+=lazy[u];\n        lazy[u]=0;\n    }\n}\nil vd update(int u,int l,int r,int ql,int qr,int x){\n    if (l>=ql&&r<=qr){\n        v[u]+=x,lazy[u]+=x;\n        push_down(u);\n        return;\n    }\n    int mid=l+r>>1;push_down(u);\n    if (qr<=mid) update(u<<1,l,mid,ql,qr,x);\n    else if (ql>mid) update(u<<1^1,mid+1,r,ql,qr,x);\n    else update(u<<1,l,mid,ql,qr,x),update(u<<1^1,mid+1,r,ql,qr,x);\n    v[u]=max(v[u<<1],v[u<<1^1]);\n}\n\nint l,r,mid,ans;\nil bool check(int x){\n    int last=1;\n    For(i,1,n){\n        while (a[i].v-a[last].v>x) update(1,1,tot,a[last].l,a[last].r,-1),last++;\n        update(1,1,tot,a[i].l,a[i].r,1);\n        if (v[1]>=m){\n            For(j,last,i) update(1,1,tot,a[j].l,a[j].r,-1);\n            return 1;\n        }\n    }\n    For(i,last,n) update(1,1,tot,a[i].l,a[i].r,-1);\n    return 0;\n}\nil vd Work(){\n    l=0,r=a[n].v,ans=-1;\n    while (l<=r){\n        mid=l+r>>1;\n        if (check(mid)) r=mid-1,ans=mid;\n            else l=mid+1; \n    }\n    printf(\"%d\",ans);\n}\n\nint main(){\n    init(),Work();\n}\n```\n\n## \u7b97\u6cd5\u4e8c\n\n\u8003\u8651\u600e\u4e48\u628a\u5916\u9762\u90a3\u5c42\u4e8c\u5206\u53bb\u6389\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u4e2amid\u662f\u5426\u6210\u7acb\uff0c\u5373\u662f\u5426\u6709\u4e00\u6bb5\u7f16\u53f7\u8fde\u7eed\u7684\u533a\u95f4\u662f\u5426\u6709\u4e2a\u4e00\u70b9\u88ab\u81f3\u5c11m\u4e2a\u533a\u95f4\u8986\u76d6\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4f9d\u65e7\u73b0\u5728\u4e00\u4e2a\u4e00\u4e2a\u626b\u533a\u95f4\uff0c\u8bb0\u4e00\u4e2a\u53d8\u91cflast\u8868\u793a\u5f53\u524d\u5728\u7ebf\u6bb5\u6811\u91cc\u7684\u662f\u7b2clast\u4e2a\u533a\u95f4\u5230\u5f53\u524d\u533a\u95f4\uff0c\u7136\u540e\u5c31\u662f\u4e0d\u65ad\u5224\u65ad\u5f53\u524d\u662f\u5426\u6709\u4e00\u4e2a\u70b9\u81f3\u5c11\u88abm\u4e2a\u533a\u95f4\u8986\u76d6\uff0c\u518d\u4e0d\u65ad\u628a\u7f16\u53f7\u4e3alast\u7684\u533a\u95f4\u5f39\u51fa\u7ebf\u6bb5\u6811\uff0c\u5728\u5f39\u51fa\u8fc7\u7a0b\u4e2d\uff0c\u53d6\u5f53\u524d\u533a\u95f4\u82b1\u8d39-last\u533a\u95f4\u7684\u82b1\u8d39\u7684\u6700\u5c0f\u503c\u5c31\u884c\u4e86\u3002\n\n\u6bcf\u4e2a\u533a\u95f4\u53ea\u4f1a\u52a0\u5165\u4e00\u6b21\u548c\u5f39\u51fa\u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f$O(n log n)$\u7684\u3002\n\n\u9884\u8ba1\u5f97\u5206:100\n\n```\n//by zykykyk\n#include<cstdio>\n#include<ctime>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<string>\n#include<cstring>\n#define rg register\n#define il inline\n#define vd void\n#define ll long long\n#define N 500010\n#define For(i,x,y) for (rg int i=(x);i<=(y);i++)\n#define Dow(i,x,y) for (rg int i=(x);i>=(y);i--)\n#define cross(i,k) for (rg int i=first[k];i;i=last[i])\nusing namespace std;\nil ll max(ll x,ll y){return x>y?x:y;}\nil ll min(ll x,ll y){return x<y?x:y;}\nil ll read(){\n    ll x=0;int ch=getchar(),f=1;\n    while (!isdigit(ch)&&(ch!='-')&&(ch!=EOF)) ch=getchar();\n    if (ch=='-'){f=-1;ch=getchar();}\n    while (isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n    return x*f;\n}\nstruct node{\n    int l,r,v;\n}a[N];\nstruct Node{\n    int v,id;\n    bool flag;\n}c[N<<1];\nint n,m,cnt,tot;\nil bool cmp(node a,node b){return a.v==b.v?a.l<b.l:a.v<b.v;}\nil bool Cmp(Node a,Node b){return a.v<b.v;}\nil vd init(){\n    n=read(),m=read();\n    For(i,1,n) a[i].l=read(),a[i].r=read(),a[i].v=a[i].r-a[i].l;\n    sort(a+1,a+1+n,cmp);\n    For(i,1,n) c[++cnt]=(Node){a[i].l,i,0},c[++cnt]=(Node){a[i].r,i,1};\n    sort(c+1,c+1+cnt,Cmp);\n    c[0].v=-1;\n    For(i,1,cnt){\n        if (c[i].v!=c[i-1].v) tot++;\n        c[i].flag?a[c[i].id].r=tot:a[c[i].id].l=tot;\n    }\n}\n\nint v[N*2*8],lazy[N*2*8];\nil vd push_down(int u){\n    if (lazy[u]){\n        lazy[u<<1]+=lazy[u],lazy[u<<1^1]+=lazy[u];\n        v[u<<1]+=lazy[u],v[u<<1^1]+=lazy[u];\n        lazy[u]=0;\n    }\n}\nil vd update(int u,int l,int r,int ql,int qr,int x){\n    if (l>=ql&&r<=qr){\n        v[u]+=x,lazy[u]+=x;\n        push_down(u);\n        return;\n    }\n    int mid=l+r>>1;push_down(u);\n    if (qr<=mid) update(u<<1,l,mid,ql,qr,x);\n    else if (ql>mid) update(u<<1^1,mid+1,r,ql,qr,x);\n    else update(u<<1,l,mid,ql,qr,x),update(u<<1^1,mid+1,r,ql,qr,x);\n    v[u]=max(v[u<<1],v[u<<1^1]);\n}\n\nint last,ans;\nil vd Work(){\n    last=1,ans=1e9;\n    For(i,1,n){\n    \tupdate(1,1,tot,a[i].l,a[i].r,1);\n    \twhile (v[1]>=m){\n    \t\tupdate(1,1,tot,a[last].l,a[last].r,-1);\n            ans=min(ans,a[i].v-a[last].v),last++;\n        }\n    }\n    if (ans==1e9) printf(\"-1\");\n    \telse printf(\"%d\",ans);\n}\n\nint main(){\n    init(),Work();\n}\n```",
        "postTime": 1523767829,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1712 \u3010[NOI2016]\u533a\u95f4\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\uff1a\nNOI DAY2 T1 \u5dee\u4e0d\u591a\u662f\u9001\u5206\u7684\uff0c\u7136\u800c\u5bf9\u4e8e\u6211\u8fd9\u79cd\u849f\u84bb\u800c\u8a00\uff0c\u5c0f\u7ec6\u8282\u5374\u9519\u4e86\u4e0d\u5c11\uff0c\u601d\u8def\u5012\u662f\u4e0d\u96be\u3002\n###  \u90e8\u5206 \u5206 \u5206\u6790\n#### 1.\u6700\u6700\u6700\u66b4\u529b\u7684\u601d\u8def\uff1a\n\u76f4\u63a5DFS\u6df1\u641c\uff0c\u5728\u6df1\u641c\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u7ef4\u62a4\u533a\u95f4\u548c\u66f4\u6539\u7b54\u6848\u7684\u64cd\u4f5c\n\u603b\u7684\u590d\u6742\u5ea6\u4e3aO(C(n,m)) \u671f\u671b 30\uff08\u5b9e\u9645\u4e0aBZOJ\u53ea\u5f97\u4e8625\uff0cT\u7684\u539f\u56e0\u4e0d\u77e5\u9053\u4e3a\u5565\u3002\n#### 2.\u5c06\u6700\u4f18\u5316\u95ee\u9898\u8f6c\u5316\u4e3a\u679a\u4e3e\u7b54\u6848\u5224\u65ad\u95ee\u9898\uff1a\n\u6211\u4eec\u6ce8\u610f\u5230\u603b\u7684\u82b1\u8d39\u5927\u5c0f\u53ea\u8ddf \u6700\u957f\u7684\u957f\u5ea6\u548c\u6700\u77ed\u7684\u957f\u5ea6\u6709\u5173\u7cfb\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5c06\u957f\u5ea6\u6392\u5e8f \u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6700\u77ed\u533a\u95f4 \u7136\u540e\u5728\u8fd9\u4e2a\u6700\u5c0f\u533a\u95f4\u7684\u524d\u63d0\u4e0b\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u957f\u533a\u95f4\uff0c\u5224\u65ad\u5f53\u524d\u7684\u8fd9\u4e9b\u533a\u95f4\u662f\u4e0d\u662f\u5408\u6cd5\u65b9\u6848\u3002\n\n\n\u5f53\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u5408\u6cd5\u65b9\u6848\u65f6  \u6211\u4eec\u5c31\u53ef\u4ee5\u4e0d\u7528\u679a\u4e3e\u4e86\u3002\n\n\u5224\u65ad\u7684\u65b9\u6cd5\u662f\u79bb\u6563\u5316\u533a\u95f4\u540e\u66b4\u529b\u67d3\u8272\u5224\u65ad \n\n\u679a\u4e3e+\u67d3\u8272 = $O(N^2)$\n\n\u5224\u65ad\u5408\u6cd5\u65b9\u6848 = $O(N^2)$\n\n\u603b\u590d\u6742\u5ea6=$O(N^4)$\n\n\u7136\u800c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6bcf\u6b21\u4ece\u5934\u5230\u5c3e\u91cd\u65b0\u67d3\u8272 \u53ef\u4ee5\u5229\u7528\u524d\u9762\u7684\u67d3\u8272\u4fe1\u606f \n\n\u90a3\u4e48\u5c31\u53d8\u6210\u4e86 $O(N^3)$\n\n\u671f\u671b 45(\u671f\u671b==\u5b9e\u9645\n#### 3.\u5bf92\u7684\u4f18\u5316\n\u6211\u4eec\u53d1\u73b0\u82e5\u60f3\u65b9\u6848\u5408\u6cd5\uff0c\u679a\u4e3e\u7684\u957f\u5ea6\u5fc5\u7136\u662f\u9012\u589e\u7684\u3002\n\n\u679a\u4e3e\u957f\u533a\u95f4\u65f6\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u5355\u8c03\u6027\uff0c\u6bcf\u6b21\u4ece\u4e0a\u6b21\u7684\u679a\u4e3e\u7684\u533a\u95f4\u5f00\u59cb\uff0c\u8fd9\u6837\u53ef\u4ee5\u505a\u5230\u5747\u644a$O(N)$\n\n\u603b\u590d\u6742\u5ea6=$O(N^2)$\n\n\u671f\u671b 60(\u671f\u671b==\u5b9e\u9645\n\n### \u6b63\u89e3\u5206\u6790\uff1a\n\u57283\u7684\u57fa\u7840\u4e0a\u4f18\u5316 \u5bf9\u4e8e\u679a\u4e3e\u5df2\u7ecf\u4e0d\u53ef\u80fd\u4f18\u5316\u4e86\uff0c\u6211\u4eec\u53ea\u80fd\u5728\u67d3\u8272\u4e0b\u624b\n\n\u53d1\u73b0\u6bcf\u6b21\u66f4\u6539\u7684\u662f\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u6240\u6709\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539 \n\n\u8fd9\u6837\u67d3\u8272\u5c31\u53d8\u6210\u4e86$O(logN)$\n\n\u603b\u590d\u6742\u5ea6=$O(NlogN)$\n\n## \u9898\u76ee\u94fe\u63a5\uff1a\n\u6309\u7167\u8bc4\u6d4b\u901f\u5ea6\u6392\u5e8f\n[Luogu](https://www.luogu.org/problemnew/show/P1712)\n\n[UOJ](http://uoj.ac/problem/222)\n\n[COGS](http://cogs.pro:8080/cogs/problem/problem.php?pid=2406)\n\n[BZOJ](http://www.lydsy.com/JudgeOnline/problem.php?id=4653)\n\n\u5410\u69fdBZOJ\u8fd9\u901f\u5ea6\uff0c\u987a\u4fbf\u6211\u5199\u7684\u4e11\u7ebf\u6bb5\u6811\u5c45\u7136\u5728COGS rank 4\uff08\u53ef\u80fd\u662f\u505a\u7684\u4eba\u6bd4\u8f83\u5c11\n## Ac Code\uff1a\n \n```\n#include <cstdio>\n#include <algorithm>\n#include <iostream>\n#define il inline\nusing namespace std;\nconst int maxm=510000;\nconst int inf=0x7fffffff;\nstruct tree{\n\tint maxi,adi;\n};\ntree t[maxm*8];\nil void update(int o){t[o].maxi=max(t[(o<<1)].maxi,t[(o<<1)|1].maxi);}\nil int read()\n{\n\tint w=1,x=0;\n\tchar ch=0;\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-') w=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=(x<<3)+(x<<1)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*w;\n}\nil void mark(int o,int v){t[o].adi+=v,t[o].maxi+=v;}\nil void pushdown(int o)\n{\n   if(t[o].adi)\n   {\n   \t mark((o<<1),t[o].adi);\n   \t mark((o<<1)|1,t[o].adi);\n   \t t[o].adi=0;\n   }\t\n}\nvoid change(int o,int l,int r,int ql,int qr,int num)\n{\n    if(ql<=l&&qr>=r)\n    {\n        mark(o,num);\n        return;\n    }\n    pushdown(o);\n    int mid=(l+r)>>1;\n    if(ql<=mid) change((o<<1),l,mid,ql,qr,num);\n    if(qr>mid) change((o<<1)|1,mid+1,r,ql,qr,num);\n    update(o);\n}\nint val[maxm*2+100],cnt;\nstruct node{\n\tint l,r,len;\n};\nnode opt[maxm];\nbool comp(node x,node y)\n{\n\treturn x.len<y.len;\n}\nint main()\n{\n\t//freopen(\"interval.in\",\"r\",stdin);\n\t//freopen(\"interval.out\",\"w\",stdout);\n\tint n,m;\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t    opt[i].l=read(),opt[i].r=read();\n\t\topt[i].len=(opt[i].r-opt[i].l+1);\n\t\tval[++cnt]=opt[i].l,val[++cnt]=opt[i].r;\n\t}\n\tsort(val+1,val+cnt+1);\n\tint x=unique(val+1,val+cnt+1)-val-1;\n\tsort(opt+1,opt+n+1,comp);\n\tint ml=1e8,mr=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\topt[i].l=lower_bound(val+1,val+x+1,opt[i].l)-val;\n\t\topt[i].r=lower_bound(val+1,val+x+1,opt[i].r)-val;\n\t\tml=min(opt[i].l,ml),mr=max(opt[i].r,mr);\n\t}\n\tint ans=inf;\n\tint nowl=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n        change(1,ml,mr,opt[i].l,opt[i].r,1);\n        //printf(\"%d %d %d\\n\",t[1].maxi,m,t[1].maxi==m);\n        while(t[1].maxi>=m)\n\t\t{\n            ans=min(opt[i].len-opt[nowl].len,ans);\n            change(1,ml,mr,opt[nowl].l,opt[nowl].r,-1);\n            nowl++;\n        }\n    }\n\tif(ans==inf) ans=-1;\n\treturn printf(\"%d\\n\",ans)*0;\n}\n```\n",
        "postTime": 1522745537,
        "uid": 19842,
        "name": "\u534a\u4ed9\u80e1\u5c0f\u6843",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1712 \u3010[NOI2016]\u533a\u95f4\u3011"
    },
    {
        "content": "# **\u5c3a\u53d6\u6cd5 + \u7ebf\u6bb5\u6811\u4f18\u5316**\n[\u9898\u76ee\u4f20\u9001\u5668](https://www.luogu.org/problemnew/show/P1712)\n\n------------\n####  \u4e0b\u9762\u8fdb\u5165\u6b63\u9898 \uff1a \n         \u5bf9\u524d\u51e0\u4e2a\u70b9 \u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u66b4\u529b\u679a\u4e3e \u9009\u62e9\u533a\u95f4\u7684\u65b9\u6848 \u66b4\u529b\u7ed9\u6bcf\u4e2a\u70b9\u7684\u6743\u503c+1 \uff0c \n   \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(2^n*(m/2*n+1)   )   ~~\u5e94\u8be5\u6709\u9519~~\n   \n \u770b\u8d77\u6765\u8fd9\u4e2a\u7b97\u6cd5\u5f88\u6ca1\u7528 ~~\u4e5f\u7684\u786e\u5f88\u6ca1\u7528~~ \n \n####  \u4f46\u6bcf\u4e00\u4e2a\u6210\u529f\u7684\u7b97\u6cd5\u90fd\u662f\u6709\u4e00\u4e2a\u4e0d\u6210\u529f\u7684\u4ee3\u7801\u4f18\u5316\u800c\u6765\n\n\u8fd9\u4e2a\u7b97\u6cd5\u4e5f\u6709\u5f88\u5927\u7684\u4f18\u5316\u7a7a\u95f4 \uff1a\n\n1. \u6211\u4eec\u53ef\u4ee5\u770b\u5230 \u65f6\u95f4\u590d\u6742\u5ea6 \u4e2d \u201c2^n\u201d \u662f\u4e00\u4e2a\u5f88\u96be\u53d7\u7684\u9879 \n\n     \u6211\u4eec\u9996\u5148\u8003\u5f55\u6d88\u53bb\u5b83\n     \n     \u5bf9\u6b64 \uff0c \u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u5c3a\u53d6\u6cd5 ~~\u4e0d\u77e5\u9053\u5c3a\u53d6\u6cd5\u7684\u81ea\u884c\u89e3\u51b3~~\n     \n     \u7531\u4e8e \u6bcf\u4e2a\u533a\u95f4\u5bf9\u7b54\u6848\u7684\u8d21\u732e \u4ec5\u4e0e\u5b83\u7684\u957f\u5ea6\u6709\u5173 \uff0c \u4e0e\u5176\u4ed6\u4e00\u5207\u65e0\u5173\n     \n     \u6240\u4ee5 \uff0c \u6211\u4eec\u53ef\u4ee5 \u628a\u6bcf\u4e00\u4e2a\u533a\u95f4 \u6309\u957f\u5ea6 \u8fdb\u884c\u6392\u5e8f\n     \n     \u8fd9\u6837\u7684\u8bdd \uff0c \u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c \u5c3a\u53d6\u6cd5 \u4e86\n     \n     \u8bbe \u201c\u5c3a\u201d \u7684\u5de6\u7aef\u70b9 \u4e3a L \uff0c\u53f3\u7aef\u70b9 \u4e3a R \n     \n     \n    -  L  \u548c R \u6700\u521d \u90fd\u4e3a 1 \uff08\u5047\u8bbe\u6211\u4eec\u9009\u4e86\u957f\u5ea6\u6700\u5c0f\u7684\u533a\u95f4\uff09\n    - R \u4e0d\u65ad \u5411\u53f3 \u6269\u5c55 \uff0c \u6bcf\u6269\u5c55\u4e00\u4e2a\u533a\u95f4 \u5c31\u628a\u8fd9\u4e2a\u533a\u95f4\u8986\u76d6\u7684\u70b9\u7684\u70b9\u6743+1\uff0c\u7ef4\u62a4\u4e00\u4e2a\u70b9\u6743\u6700\u5927\u7684\u70b9\n    - \u5f53   \u70b9\u6743\u6700\u5927\u7684\u70b9\u7684\u70b9\u6743>m \u65f6 \uff0c \u66f4\u65b0\u7b54\u6848 L++\n    - \u5c3a\u53d6\u6cd5 \u5230 R>n \u65f6 \u7ed3\u675f\n   \n2. \u66b4\u529b\u7ed9 \u6bcf\u4e00\u4e2a\u70b9\u7684\u70b9\u6743+1 \u662f\u5f88\u8d39\u65f6\u95f4\u7684 ~~\u732a\u90fd\u77e5\u9053~~\n\n   \u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u4f18\u5316 \n   \n   \u7ebf\u6bb5\u6811 \u5728\u672c\u9898\u7684\u4f18\u70b9 \u6709\u4e24\u4e2a\u65b9\u9762\uff1a\n   \n           1. \u52a0\u901f \u533a\u95f4\u70b9\u6743+1 \uff08 \u533a\u95f4+ \u64cd\u4f5c\uff09\n           2. \u7ef4\u62a4 \u5f53\u524d\u70b9\u6743\u6700\u5927\u70b9 \u7684 \u70b9\u6743\n   \n   \u6709\u4e86\u8fd9\u7ebf\u6bb5\u6811 \uff0c \u65f6\u95f4\u590d\u6742\u5ea6 \u5c31\u80fd \u518d \u4e0b\u964d\u4e00\u4e2a\u6863\u6b21\n   \n   \u6210\u4e3a \u6211\u4eec\u53ef\u4ee5\u63a5\u53d7 \u7684 \u590d\u6742\u5ea6\n   \n## \u8bb2\u5f97\u5e94\u8be5\u591f\u6e05\u695a\u4e86  \u4e0a\u4ee3\u7801\uff01\uff01\uff01\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#define MAXN 500005\nusing namespace std;\nint n,m,cnt,v[3*MAXN];\nint ans=2100000000;\nstruct node\n{\n\tint l,r,len;\n}f[MAXN];\nstruct Tree\n{\n\tint l,r;\n\tint val;\n\tint add;\n}tree[10*MAXN];\nbool cmp(const node k,const node t)\n{\n\treturn k.len<t.len;\n}\nvoid push(int now)\n{\n   tree[now*2].add+=tree[now].add;\n   tree[now*2].val+=tree[now].add;\n   tree[now*2+1].val+=tree[now].add;\n   tree[now*2+1].add+=tree[now].add;\n   tree[now].add=0;\n}\nvoid build(int l,int r,int now)\n{\n\ttree[now].l=l;\n\ttree[now].r=r;\n\ttree[now].add=0;\n\tif (l==r)\n\t{\n\t\ttree[now].val=0;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,now*2);\n\tbuild(mid+1,r,now*2+1);\n\ttree[now].val=max(tree[now*2].val,\n                          tree[now*2+1].val);\n\treturn;\n}\nvoid change(int now,int l,int r,int k)\n{\n    if(tree[now].l==l && tree[now].r==r)\n    {\n        tree[now].add+=k;\n        tree[now].val+=k;\n        return;\n    }\n    push(now);\n    int mid=(tree[now].l+tree[now].r)>>1;\n    if (r<=mid) change(now*2,l,r,k);\n    if (l>mid) change(now*2+1,l,r,k);\n    if (l<=mid && r>mid)\n    {\n    \tchange(now*2,l,mid,k);                                change(now*2+1,mid+1,r,k);\n    }\n    tree[now].val=max(tree[now*2].val,\n                      tree[now*2+1].val);\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d %d\",&f[i].l,&f[i].r);\n\t\tf[i].len=f[i].r-f[i].l+1;\n\t\tv[++cnt]=f[i].l;\n\t\tv[++cnt]=f[i].r;\n\t}\n\tsort(v+1,v+cnt+1);\n\tint x=unique(v+1,v+cnt+1)-(v+1);\n\tfor (int i=1;i<=n;i++)\n\t{\n\t      f[i].l=lower_bound(v+1,v+x+1,f[i].l)-v;               f[i].r=lower_bound(v+1,v+x+1,f[i].r)-v;\n\t}\n\tbuild(1,x+100,1);\n\tsort(f+1,f+n+1,cmp);\n\tint now=1;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tchange(1,f[i].l,f[i].r,1);\n\t\twhile (tree[1].val>=m && now<=i) \n\t\t{\n\t\t     ans=min(ans,f[i].len-f[now].len);\n\t\t     change(1,f[now].l,f[now].r,-1);\t\t     now++;\n\t\t}\n\t}\n\tif (ans!=2100000000) printf(\"%d\\n\",ans);\n        else puts(\"-1\");\n\treturn 0;\n}\n```\n\n ",
        "postTime": 1563966357,
        "uid": 118846,
        "name": "maowuyou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1712 \u3010[NOI2016]\u533a\u95f4\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P1712)\n\n### \u9898\u76ee\u5927\u610f\uff1a\n\t\u7ed9\u4f60N\u4e2a\u533a\u95f4\uff0c\u9009\u51faM\u4e2a\uff0c\n    \u4f7f\u8fd9m\u4e2a\u533a\u95f4\u5171\u540c\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e14\u4f7f\u91cc\u9762\u533a\u95f4\u957f\u5ea6\u6700\u957f\u51cf\t\n    \u533a\u95f4\u957f\u5ea6\u6700\u77ed\u6700\u5c0f\n\n\n### solution:\n\n\u7ebf\u6bb5\u6811 + \u5c3a\u53d6\u6cd5\n\n\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230\u5bf9\u4e8e\u8fd9\u4e2a\u533a\u95f4\u8986\u76d6\u4e86\uff0c\u5c31\u662f\u8ba9\u533a\u95f4\u4e2d\u7684\u6bcf\u4e2a\u70b9\u52a01\uff0c\u90a3\u5c31\u662f\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\n\n\u90a3\u4e48\u8fd9\u65f6\u5019\u5c31\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u5c31\u662f\u533a\u95f4\u672b\u5c3e\u53ef\u80fd\u5f88\u5927\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u7528\u5230\u79bb\u6563\u5316\uff1a\n\n\u663e\u7136\u8fd9\u9053\u9898\u53ea\u5173\u5fc3\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u548c\u533a\u95f4\u4e4b\u95f4\u7684\u76f8\u4e92\u5305\u542b\u5173\u7cfb\u3002\u56e0\u6b64\u53ef\u4ee5\u9884\u5148\u628a\u957f\u5ea6\u8bb0\u5f55\u4e0b\u6765\uff0c\u628a\u51fa\u73b0\u8fc7\u7684\u6570\u6309\u6570\u503c\u6392\u5e8f\u3002\n\u6ce8\u610f\u91cd\u590d\u7684\u6570\u3002\u3002\u3002\n```cpp\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tl[i]=read(),r[i]=read();\n\t\ts[i].len=r[i]-l[i];s[i].num=i;//\u8bb0\u5f55\u957f\u5ea6 \n\t\t++cnt;\n\t\tb[cnt].num=i;b[cnt].val=l[i];b[cnt].bz=0;\n\t\t++cnt;\n\t\tb[cnt].num=i;b[cnt].val=r[i];b[cnt].bz=1;\n\t}\n\tsort(b+1,b+cnt+1);//\u79bb\u6563\u5316\n\tint q=0;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tif(b[i].val!=b[i-1].val) q++;//\u5982\u679c\u6709\u91cd\u590d\u5f97\u8981\t\t\t\t\t\t\t\t\t\t\u8d4b\u6210\u4e00\u4e2a\u503c\n\t\tif(b[i].bz==0)\n\t\tl[b[i].num]=q;\n\t\telse\n\t\tr[b[i].num]=q;\n\t}\n    for(int i=1;i<=n;i++)\n\t{\n\t\ts[i].l=l[s[i].num];\n\t\ts[i].r=r[s[i].num];\n\t}//\u6700\u540e\u4ee3\u56de\u53bb\n```\n\n\u79bb\u6563\u5316\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u600e\u4e48\u505a\uff1f\n\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u5f53\u524d\u7684\u6700\u5927\u503c\u5c0f\u4e8e\u4e86M\uff0c\u663e\u7136\u6211\u4eec\u9700\u8981\u591a\u52a0\u533a\u95f4\uff0c\u800c\u5df2\u7ecf\u5927\u4e8e\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u51cf\u5c11\u533a\u95f4\u6765\u5b9e\u73b0\u66f4\u6709\u7684\u89e3\u3002\n\u663e\u7136\u8fd9\u548c\u5c3a\u53d6\u6cd5\u7684\u601d\u60f3\u4e00\u6837\uff0c\u5373\u9009\u53d6\u533a\u95f4\u6709\u4e00\u5b9a\u89c4\u5f8b\uff0c\u6216\u8005\u8bf4\u6240\u9009\u53d6\u7684\u533a\u95f4\u6709\u4e00\u5b9a\u7684\u53d8\u5316\u8d8b\u52bf\u7684\u60c5\u51b5\u65f6\uff0c\u6b65\u6b65\u63a8\u8fdb\uff0c\u653e\u7f29\u3002\u3002\u3002\n\n\u7136\u540e\u53d1\u73b0\u6211\u4eec\u8981\u7ef4\u62a4\u6700\u5c0f\u957f\u5ea6\uff0c\u663e\u7136\u5c31\u6309\u957f\u5ea6\u6392\u5e8f\uff0c\u518d\u5c3a\u53d6\u6cd5\u3002\u3002\n\u51cf\u533a\u95f4\u65f6\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4-1\uff0c\u52a0\u533a\u95f4\u65f6\u7ef4\u62a4\u533a\u95f4+1\uff0c\u6700\u540e\u76f4\u63a5\u67e5\u8be2\u6811\u9876\u3002\u3002\u3002\n\n\u5148\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAXN = 500000 +10;\n\nconst int inf = 1<<30;\n\ninline long long read()\n{\n    int f=1,x=0;\n    char ch;\n    do\n    {\n        ch=getchar();\n        if(ch=='-') f=-1;\n    }while(ch<'0'||ch>'9');\n    do\n    {\n        x=(x<<1)+(x<<3)+ch-'0';\n        ch=getchar();\n    }while(ch>='0'&&ch<='9');\n    return f*x;\n}\n\ninline int Max(int a,int b)\n{\n\tif(a>=b) return a;\n\telse return b; \n}\n\nint n,m;\n\nint l[MAXN],r[MAXN];\n\nstruct stick\n{\n\tint len;\n\tint l;\n\tint r;\n\tint num;\n\tfriend bool operator < (stick a1,stick a2)\n\t{\n\t\treturn a1.len<a2.len;\n\t}\n}s[MAXN*4]; \n\nstruct node\n{\n\tint num;\n\tint val;\n\tbool bz;\n\tfriend bool operator < (node a1,node a2)\n\t{\n\t\treturn a1.val<a2.val;\n\t}\n};\n\nint cnt =0;\n\nnode b[MAXN*4];\n\nstruct stree\n{\n\tint l;\n\tint r;\n\tint maxv;\n\tinline int mid()\n\t{\n\t\treturn (l+r)>>1;\n\t}\n}tree[MAXN * 8];\n\n#define lc o<<1\n#define rc o<<1|1 \n\ninline void build(int o,int l,int r)\n{\n\ttree[o].l=l,tree[o].r=r;\n\tif(l==r) tree[o].maxv=0;\n\telse\n\t{\n\t\tint mid=tree[o].mid();\n\t\tbuild(lc,l,mid);\n\t\tbuild(rc,mid+1,r);\n\t\ttree[o].maxv=Max(tree[lc].maxv,tree[rc].maxv);\n\t\treturn;\n\t}\n} \n\nint add[MAXN * 8];\n\ninline void pushup(int o)\n{\n\tadd[lc]+=add[o];\n\tadd[rc]+=add[o];\n\ttree[lc].maxv+=add[o];\n\ttree[rc].maxv+=add[o];\n\tadd[o]=0;\n}\n\ninline void update(int o,int x,int y,int w)\n{\n\tint l=tree[o].l,r=tree[o].r;\n\tif(r<x||l>y) return;\n\tif(x<=l&&y>=r)\n\t{\n\t\tadd[o]+=w;\n\t\ttree[o].maxv+=w;\n\t\treturn;\n\t}\n\telse\n\t{\n\t\tpushup(o);\n\t\tupdate(lc,x,y,w);\n\t\tupdate(rc,x,y,w);\n\t\ttree[o].maxv=Max(tree[lc].maxv,tree[rc].maxv);\n\t}\n}\n\nint ans=1<<30;\n\nint main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tl[i]=read(),r[i]=read();\n\t\ts[i].len=r[i]-l[i];s[i].num=i; \n\t\t++cnt;\n\t\tb[cnt].num=i;b[cnt].val=l[i];b[cnt].bz=0;\n\t\t++cnt;\n\t\tb[cnt].num=i;b[cnt].val=r[i];b[cnt].bz=1;\n\t}\n\tsort(b+1,b+cnt+1);\n\tint q=0;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tif(b[i].val!=b[i-1].val) q++;\n\t\tif(b[i].bz==0)\n\t\tl[b[i].num]=q;\n\t\telse\n\t\tr[b[i].num]=q;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ts[i].l=l[s[i].num];\n\t\ts[i].r=r[s[i].num];\n\t}\n\tbuild(1,1,q);\n\tsort(s+1,s+n+1);\n\tint li=0,ri=0;\n\twhile(1)\n\t{\n\t\twhile(tree[1].maxv<m&&ri<=n)\n\t\t{\n\t\t\tri++; \n\t\t\tupdate(1,s[ri].l,s[ri].r,1);\n\t\t}\n\t\tif(tree[1].maxv<m) break;\n\t\twhile(tree[1].maxv>=m&&li<=ri)\n\t\t{\n\t\t\tli++; \n\t\t\tupdate(1,s[li].l,s[li].r,-1);\n\t\t\n\t\t} \n\t\t\tans=min(ans,s[ri].len-s[li].len);\n\t}\n\tif(ans==inf)\n\t{\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```\n\n### \u5f69\u86cb\n\n1.\u7b2c\u4e00\u6b21\u5199\u7684\u65f6\u5019\u628a\u5efa\u6811\u7684\u4e00\u4e2aL\u5199\u6210\u4e861...\n\u7136\u540e\u5168RE\uff0c\u7136\u540e\u975e\u5e38\u667a\u969c\u7684\u8ba4\u4e3a\u662f\u6570\u7ec4\u5f00\u5c0f\u4e86\uff0c\u7136\u540e\u975e\u5e38\u667a\u969c\u7684\u53c8\u4ea4\u4e86\u51e0\u6b21\u3002\u3002\u3002\n2.\u7b2c\u4e8c\u4e2a\u9519\u662f\u79bb\u6563\u5316\u540e\u5fd8\u4e86\u8fd9\u4e00\u6b65\u3002\u3002\u3002\n```cpp\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ts[i].l=l[s[i].num];\n\t\ts[i].r=r[s[i].num];\n\t}\n```\n3.\u6709\u4e00\u6b21\u5728\u8003\u8bd5\u65f6\u505a\u8fc7\u8fd9\u9053\u9898\uff0c\u5f53\u65f6\u5f88naive\u7684\u5199\u7684\u7eaf\u6a21\u62df\uff0c\u56e0\u4e3a\u6839\u672c\u6ca1\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u6a21\u62df\u52a0\u6811\u72b6\u6570\u7ec4\u62ff\u4e8650\u5206\uff0c\u5176\u4ed6\u4eba\u90fd\u62ff\u4e8660\u5206QwQ\n\u6a21\u62df\u4ee3\u7801\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n\n\nusing namespace std;\n\nconst int inf = 1<<30;\n\nint n,m;\n\nstruct node\n{\n    int l,r;\n    inline friend bool operator < (node a,node b)\n    {\n        return a.l<b.l;\n        }\n};node t[100000+ 10];\n\ninline int read()\n{\n    int f=1,x=0;\n    char ch;\n    do\n    {\n        ch=getchar();\n        if(ch=='-') f=-1;\n    }while(ch<'0'||ch>'9');\n    do\n    {\n        \n        x=(x<<3)+(x<<1)+ch-'0';\n        ch=getchar();\n    }while(ch>='0'&&ch<='9');\n    return f*x;\n}\n\nint minn,maxn;\nint ans=inf;\n\nint b[500010];\n\nint c[500001];\nint lb(int x){return x&-x;};\ninline void change(int a,int b)\n{\n    if(a)\n    { \n    while(a<=maxn)\n    {\n        c[a]+=b;\n        a+=lb(a);\n    }\n    }\n}\ninline int g_sum(int x)\n{\n    int re=0;\n    while(x>=1)\n    {\n        re+=c[x];\n        x-=lb(x);\n    }\n    return re;\n}\n\nbool boo;\n\nint main()\n{\n    n=read();\n    minn=inf;\n    m=read();\n    for(int i=1;i<=n;i++)\n    {\n        t[i].l=read(),t[i].r=read();\n        minn=min(minn,t[i].l);\n        maxn=max(maxn,t[i].r);\n        change(t[i].l,1);\n        change(t[i].r+1,-1);\n    }\n    sort(t+1,t+n+1);\n    for(register int i=minn;i<=maxn;i++)\n    {\n        if(g_sum(i)>=m)\n        {\n            boo=true;\n        int num=0;\n        int maxx=0,minx=inf;\n        for(register int j=1;j<=n;j++)\n        {\n            if(i>=t[j].l&&i<=t[j].r)\n            {\n                num++;\n            //\tcout<<b[num]<<endl;\n                b[num]=t[j].r-t[j].l;\n            }\n            if(t[j].l>i) break;\n        }\n        \n    \n            sort(b+1,b+num+1);\n            int xiao = inf;\n            for(register int i=1;i<=num-m+1;i++)\n            {\n                if(b[i+m-1]-b[i]<xiao)\n                    xiao=b[i+m-1]-b[i];\n            }\n            ans=min(ans,xiao);\n        /*\tfor(int i=1;i<=num;i++)\n            {\n                cout<<b[i]<<\" \"<<endl;\n            }*/\n    \n    }\n    }\n    if(ans!=inf)\n    cout<<ans<<endl;\n    else cout<<-1<<endl;\n}\n\n```\n\u5c3a\u53d6\u6cd5\u9898\u76ee\uff1aPOJ 3061\n",
        "postTime": 1518571441,
        "uid": 37408,
        "name": "Randyhoads",
        "ccfLevel": 7,
        "title": "\u6d1b\u8c37P1712 [NOI2016]\u533a\u95f4"
    },
    {
        "content": "\u5176\u5b9e\u5df2\u7ecf\u6709\u5f88\u591a\u4eba\u90fd\u5199\u4e86\u8fd9\u9053\u9898\u76ee\u7684\u9898\u89e3\uff0c\u5e76\u4e14\u601d\u8def\u90fd\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u6b64\u9898\u662f\u6211\u4e3a\u6570\u4e0d\u591a\u6ca1\u770b\u9898\u89e3\u505a\u51fa\u7684\u7d2b\u9898\uff0c\u6240\u4ee5\u8fd8\u662f\u5199\u4e86\u8fd9\u7bc7\u9898\u89e3\u3002\n\n------------\n\n\n\u8fd9\u9053\u9898\u76ee\u7684\u5173\u952e\u5728\u4e8e\u60f3\u6e05\u695a\u600e\u6837\u7684 M \u4e2a\u533a\u95f4\u8986\u76d6\u82b1\u8d39\u662f\u6700\u5c0f\u7684\u3002\n\n\u800c\u4e14\u5f88\u660e\u663e\u8fd9\u4e2a\u82b1\u8d39\u53ea\u548c\u8fd9 M \u4e2a\u533a\u95f4\u4e2d\u957f\u5ea6\u6700\u5927\u548c\u6700\u5c0f\u7684\u533a\u95f4\u6709\u5173\u3002\n\n\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u6709\u5f88\u591a\u4e2a\u533a\u95f4\uff0c\u8981\u5728\u5176\u4e2d\u9009 M \u4e2a\u4f7f\u533a\u95f4\u957f\u5ea6\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u6700\u5c0f\uff0c\u6211\u4eec\u80af\u5b9a\u4f1a\u9009\u51fa\u957f\u5ea6\u6392\u540d\u8fde\u7eed\u7684 M \u4e2a\u3002\u56e0\u4e3a\u5982\u679c\u4e0d\u662f\u8fde\u7eed\u7684\u8bdd\uff0c\u80af\u5b9a\u4f1a\u8ba9\u6700\u5c0f\u503c\u66f4\u5c0f\u6216\u6700\u5927\u503c\u66f4\u5927\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u8fd9 N \u4e2a\u533a\u95f4\u6309\u533a\u95f4\u957f\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u800c\u4e14\u56e0\u4e3a l \u548c r \u6bd4\u8f83\u5927\uff0c\u5728\u6392\u5b8c\u5e8f\u4e4b\u540e\u8fd8\u8981\u5bf9\u5b83\u8fdb\u884c\u79bb\u6563\u5316\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4e00\u4e2a\u4e2a\u5730\u5c06\u533a\u95f4\u8986\u76d6\u4e0a\u53bb\uff0c\u5f53\u6709\u4e00\u4e2a\u70b9\u88ab\u8986\u76d6\u4e86 M \u6b21\uff0c\u5c31\u66f4\u65b0\u7b54\u6848\uff0c\u5e76\u5c06\u6700\u5148\u8986\u76d6\u7684\u533a\u95f4\u6d88\u9664\u3002\n\n\u8fd9\u4e2a\u5f88\u660e\u663e\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\uff0c\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6700\u5927\u503c\uff0c\u800c\u4e14\u53ea\u6709\u533a\u95f4\u4fee\u6539\u7684\u64cd\u4f5c\uff0c\u8986\u76d6\u65f6\u5728\u8be5\u533a\u95f4\u6574\u4f53 +1\uff0c\u6d88\u9664\u4e00\u4e2a\u533a\u95f4\u65f6\u5728\u8be5\u533a\u95f4\u6574\u4f53 -1 \uff0c\u8be2\u95ee\u6700\u5927\u8986\u76d6\u6b21\u6570\u53ea\u8981\u8be2\u95ee\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5176\u4e2d\u8fd8\u4f1a\u6709\u4e00\u4e9b\u7ec6\u8282\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u8bf4\uff1a\n\n- \u7ebf\u6bb5\u6811\u6570\u7ec4\u7684\u7a7a\u95f4\u8981\u5f00 N \u7684 8 \u500d\u3002\n\n- \u4fee\u6539\u65f6\u533a\u95f4\u5e94\u8be5\u662f [ 1 , 2*n ] \uff0c\u800c\u4e0d\u662f [ 1 , n ]\u3002\n\n- \u533a\u95f4\u957f\u5ea6\u8981\u5728\u79bb\u6563\u5316\u4e4b\u524d\u5c31\u8ba1\u7b97\u597d\n\n\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u53ef\u4ee5\u770b\u6211\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int N = 500000 + 10;\nconst int M = 200000 + 10;\n\ninline int read()\n{\n\tint res=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')res=(res<<1)+(res<<3)+(ch^48),ch=getchar();\n\treturn res;\n}\n\nstruct section{\n\tint l,r,len;\n\tbool operator <(const section x)const\n\t{\n\t\treturn len<x.len;\n\t}\n}sec[N];\n\nstruct Tree{\n\tint max,lazy;\n}t[N<<3];\n#define lson pos<<1\n#define rson pos<<1|1\n#define mid ((l+r)>>1)\t\nvoid pushdown(int pos)\n{\n\tif(!t[pos].lazy)\n\t\treturn ;\n\tt[lson].max+=t[pos].lazy;\n\tt[rson].max+=t[pos].lazy;\n\tt[lson].lazy+=t[pos].lazy;\n\tt[rson].lazy+=t[pos].lazy;\n\tt[pos].lazy=0;\n}\n#define max(x,y) (x)>(y)?(x):(y)\n#define min(x,y) (y==-1)?(x):((x)<(y)?(x):(y))\nvoid change(int pos,int l,int r,int L,int R,int k)\n{\n\tif(l>=L&&r<=R)\n\t{\n\t\tt[pos].lazy+=k,t[pos].max+=k;\n\t\treturn ;\n\t}\n\tpushdown(pos);\n\tif(L<=mid)\n\t\tchange(lson,l,mid,L,R,k);\n\tif(R>mid)\n\t\tchange(rson,mid+1,r,L,R,k);\n\tt[pos].max=max(t[lson].max,t[rson].max);\n}\n\nint n,m,a[N<<1],cnt,tt,ans=-1;\n\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1,l,r;i<=n;i++)\n\t\tl=read(),r=read(),sec[i]=(section){l,r,r-l+1},a[++cnt]=l,a[++cnt]=r;\n\tsort(a+1,a+cnt+1),sort(sec+1,sec+n+1);\n\tfor(int i=1;i<=n;i++)\n\t\tsec[i].l=lower_bound(a+1,a+cnt+1,sec[i].l)-a,\n\t\tsec[i].r=lower_bound(a+1,a+cnt+1,sec[i].r)-a;//\u5c06\u533a\u95f4\u79bb\u6563\u5316\n\ttt=n;//tt\u8bb0\u5f55\u5f53\u524d\u9009\u62e9\u7684\u533a\u95f4\u4e2d\u6700\u5148\u8986\u76d6\u7684\u533a\u95f4\u7f16\u53f7\uff0c\u4e5f\u5c31\u662f\u533a\u95f4\u957f\u5ea6\u6700\u5927\u7684\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\twhile(t[1].max>=m&&tt>i)\n\t\t{\n\t\t\tchange(1,1,cnt,sec[tt].l,sec[tt].r,-1),tt--;\n\t\t\tif(t[1].max>=m)\n\t\t\t\tans=min(sec[tt].len-sec[i].len,ans);\n\t\t}\n\t\tchange(1,1,cnt,sec[i].l,sec[i].r,1);\n\t\tif(t[1].max>=m)\n\t\t\tans=min(sec[tt].len-sec[i].len,ans);//\u8fd9\u662f\u5b8f\u5b9a\u4e49\u4e0b\u7684 min\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1579162254,
        "uid": 236021,
        "name": "C_\u65ed",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1712 \u3010[NOI2016]\u533a\u95f4\u3011"
    },
    {
        "content": "\u9996\u5148\u770b\u770b\u66b4\u529b\u5206\uff0c\u6211\u4eec\u6700\u7b80\u5355\u7684\u60f3\u6cd5\u5c31\u662f\u5c06\u6240\u6709\u70b9\u88ab\u8986\u76d6\u7684\u6b21\u6570\u7edf\u8ba1\u51fa\u6765\uff0c\u7136\u540e\u5c06\u6240\u6709\u51fa\u73b0\u6b21\u6570$\\ge m$\u7684\u70b9\u90fd\u62ff\u51fa\u6765\uff0c\u7136\u540e\u679a\u4e3e\u8fd9\u4e9b\u70b9\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u5c06\u6240\u6709\u8986\u76d6\u4e86\u4ed6\u7684\u533a\u95f4\u90fd\u627e\u51fa\u6765\uff0c\u7136\u540e\u6392\u4e00\u4e0b\u5e8f\u3002\u90a3\u4e48\u663e\u7136\uff0c\u8fde\u7eed\u7684\u4e00\u6bb5\u5b83\u7684\u5dee\u503c\u6700\u5c0f\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u8fd9\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\u5f00\u59cb\u7684\u90a3\u4e00\u4e2a\u533a\u95f4\u53d6\u54ea\u4e00\u4e2a\u5c31\u597d\u4e86\uff0c\u7136\u540e\u66f4\u65b0\u7b54\u6848\u3002\u7136\u540e\u663e\u7136\u6211\u4eec\u4e4b\u524d\u7edf\u8ba1\u4e00\u4e2a\u70b9\u88ab\u8986\u76d6\u7684\u6b21\u6570\u6211\u4eec\u53ef\u4ee5\u7528\u5dee\u5206\u6765\u89e3\u51b3\u3002\n\n~~\u867d\u7136\u6211\u4e0d\u77e5\u9053\u4e3a\u5565\u662f45pts~~\n\n**Code:**\n\n```cpp\n/*Program from Luvwgyx*/\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nconst int inf=1e9;\nconst int maxn=5e5+10;\nstruct node{int x,y,len;}a[maxn],q[maxn];\nint tot,cnt,pos[maxn],sum[maxn];\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nvoid print(int x){\n    if(x<0)putchar('-'),x=-x;\n    if(x>9)print(x/10);\n    putchar(x%10+'0');\n}\nvoid write(int x){print(x);puts(\"\");}\nbool cmp(node x,node y){return x.len==y.len?x.x==y.x?x.y<y.y:x.x<y.x:x.len<y.len;}\nint main(){\n    int n=read(),m=read(),ans=inf;\n    for(int i=1;i<=n;i++){\n        a[i].x=read(),a[i].y=read();a[i].len=a[i].y-a[i].x;\n        sum[a[i].x]++;sum[a[i].y+1]--;\n    }for(int i=1;i<=100000;i++)sum[i]+=sum[i-1];\n    for(int i=1;i<=100000;i++)if(sum[i]>=m)pos[++tot]=i;\n    if(!tot){puts(\"-1\");return 0;}\n    for(int i=1;i<=tot;i++){\n        cnt=0;\n        for(int j=1;j<=n;j++)if(a[j].x<=pos[i]&&pos[i]<=a[j].y)q[++cnt]=a[j];\n        sort(q+1,q+cnt+1,cmp);\n        for(int j=1;j<=cnt-m;j++)ans=min(ans,q[j+m-1].len-q[j].len);\n    }write(ans);\n    return 0;\n}\n```\n\n\u6211\u4eec\u770b\u5b8c\u90e8\u5206\u5206\u4e4b\u540e\uff0c\u53d1\u73b0\u6211\u4eec\u590d\u6742\u5ea6\u4e0a\u7684\u5c40\u9650\u5c31\u5728\u4e8e\u627e\u51fa\u6211\u4eec\u6ee1\u8db3\u6761\u4ef6\u7684\u7ebf\u6bb5\u4e0a\u9762\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u5728\u679a\u4e3e\u8fde\u7eed$m$\u6761\u7ebf\u6bb5\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u4e2d\u95f4\u6709\u4e00\u5927\u6bb5\u662f\u6ca1\u6709\u53d8\u5316\u7684\u3002\u6240\u4ee5\u6211\u4eec\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7528\u4e00\u4e2a\u652f\u6301\u5feb\u901f\u6dfb\u52a0\u5220\u9664\u7684\u6570\u636e\u7ed3\u6784\u6765\u5b8c\u6210\u8fd9\u4e2a\u64cd\u4f5c\u3002\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u5c06\u8fd9\u4e9b\u7ebf\u6bb5\u5b58\u4e0b\u6765\u5c31\u597d\u4e86\uff0c\u679a\u4e3e\u7684\u8fc7\u7a0b\u4e2d\u52a0\u70b9\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u6307\u9488\u4ece\u5de6\u5f80\u53f3\u6307\u6765\u5220\u9664\u70b9\uff0c\u5f53\u7136\u5efa\u7ebf\u6bb5\u6811\u662f\u8981\u79bb\u6563\u5316\u7684...\n\n\u5177\u4f53\u770b\u4ee3\u7801\u5427...\n\n**Code:**\n\n```cpp\n/*Program from Luvwgyx*/\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int inf=1e9;\nconst int maxn=5e5+10;\nint tot,link[maxn<<1];\nstruct node{int x,y,len;}a[maxn];\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nvoid print(int x){\n    if(x<0)putchar('-'),x=-x;\n    if(x>9)print(x/10);\n    putchar(x%10+'0');\n}\nvoid write(int x){print(x);puts(\"\");}\nstruct Segment_Tree{\n    struct Seg{int w,f;}tree[maxn<<3];\n    void down(int k){\n        if(tree[k].f){\n            tree[k<<1].w+=tree[k].f;tree[k<<1|1].w+=tree[k].f;\n            tree[k<<1].f+=tree[k].f;tree[k<<1|1].f+=tree[k].f;\n            tree[k].f=0;\n        }\n    }\n    void update(int k){tree[k].w=max(tree[k<<1].w,tree[k<<1|1].w);}\n    void change(int k,int l,int r,int x,int y,int v){\n        if(x<=l&&r<=y){tree[k].w+=v;tree[k].f+=v;return ;}\n        down(k);int mid=(l+r)>>1;\n        if(x<=mid)change(k<<1,l,mid,x,y,v);\n        if(mid<y)change(k<<1|1,mid+1,r,x,y,v);\n        update(k);\n    }\n}T;\nbool cmp(node x,node y){return x.len<y.len;}\nint main(){\n    int n=read(),m=read();\n    for(int i=1;i<=n;i++){\n        a[i].x=read();a[i].y=read();\n        a[i].len=(a[i].y-a[i].x+1);\n        link[++tot]=a[i].x;link[++tot]=a[i].y;\n    }sort(a+1,a+n+1,cmp);sort(link+1,link+tot+1);\n    tot=unique(link+1,link+tot+1)-link-1;int l=inf,r=0;\n    for(int i=1;i<=n;i++){\n        a[i].x=lower_bound(link+1,link+tot+1,a[i].x)-link;\n        a[i].y=lower_bound(link+1,link+tot+1,a[i].y)-link;\n        l=min(l,a[i].x);r=max(r,a[i].y);\n    }int ans=inf,now=1;\n    for(int i=1;i<=n;i++){\n        T.change(1,l,r,a[i].x,a[i].y,1);\n        while(T.tree[1].w>=m){\n            ans=min(ans,a[i].len-a[now].len);\n            T.change(1,l,r,a[now].x,a[now].y,-1);\n            now++;\n        }\n    }if(ans==inf)puts(\"-1\");else write(ans);\n    return 0;\n}\n```",
        "postTime": 1545739209,
        "uid": 43012,
        "name": "Luvwgyx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1712 \u3010[NOI2016]\u533a\u95f4\u3011"
    },
    {
        "content": "\u53d1\u73b0\u81ea\u5df1\u7684\u79bb\u6563\u5316\u59ff\u52bf\u4e00\u76f4\u6709\u95ee\u9898\n\n\u4eca\u5929\u7ec8\u4e8e\u638c\u63e1\u4e86\u6b63\u786e\u7684\u59ff\u52bf\n\n~~\u867d\u7136\u8fd9\u5e76\u4e0d\u80fd\u963b\u6321\u6211noip\u9000\u5f79\u7206\u96f6\u7684\u5386\u53f2\u8fdb\u7a0b~~\n\n\u8fd8\u662f\u5148\u6765\u770b\u770b\u79bb\u6563\u5316\u600e\u4e48\u5199\u5427\uff0c\u6211\u4ee5\u524d\u90fd\u662f\u8fd9\u4e48\u5199\u7684\n\n```\nfor(std::set<int>::iterator it=s.begin();it!=s.end();it++)\n\tma[*it]=++tot;\n```\n\n\u8fd9\u662f\u4f7f\u7528$set+map$\u7684\u79bb\u6563\u5316\uff0c\u4f46\u662f\u663e\u7136\u5de8\u5927\u7684\u5e38\u6570\u662f\u6781\u5927\u7684\u52a3\u52bf\n\n\u6b63\u786e\u7684\u64cd\u4f5c\u5e94\u8be5\u662f\u8fd9\u4e2a\u6837\u5b50\n\n```cpp\nstd::sort(a+1,a+n+1)\nint tot=unique(a+1,a+n+1)-a-1;\nfor(re int i=1;i<=tot;i++)\n\tma[a[i]]=i;\n```\n\n$unique$\u80fd\u5c06\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u53bb\u91cd\uff0c\u8fd4\u56de\u503c\u662f\u53bb\u91cd\u4e4b\u540e\u7684\u5c3e\u5730\u5740\uff0c\u51cf\u53bb\u9996\u5730\u5740\u5c31\u53ef\u4ee5\u5f97\u5230\u53bb\u91cd\u4e4b\u540e\u7684\u6570\u91cf\u4e86\n\n\u4e4b\u540e\u518d\u6765\u770b\u8fd9\u9053\u9898\uff0c\u4e5f\u662f\u4e00\u9053\u975e\u5e38\u795e\u7684\u9898\n\n\u8fd9\u9053\u9898\u544a\u8bc9\u6211\u4eec\u66b4\u529b\u901a\u5411\u9519\u8bef\u7684\u89e3\uff0c\u9519\u8bef\u7684\u89e3\u5f80\u5f80\u8ddf\u6b63\u89e3\u5f88\u63a5\u8fd1\u4e86\n\n\u9996\u5148$O(n^2logn)$\u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\u7684\u505a\u6cd5\uff0c\u6211\u4eec**\u5148\u5c06\u6240\u6709\u7684\u533a\u95f4\u6309\u7167\u957f\u5ea6\u6392\u5e8f**\uff0c\u4e4b\u540e\u6211\u4eec**\u5b9a\u4f4f\u4e00\u4e2a\u533a\u95f4\u4f5c\u4e3a\u957f\u5ea6\u6700\u5c0f\u7684\u533a\u95f4**\uff0c\u5f3a\u884c\u5957\u7528\u7ebf\u6bb5\u6811\u66b4\u529b\u8986\u76d6\u4e4b\u540e\u7684\u6bd4\u5b83\u5927\u7684\u533a\u95f4\uff0c\u76f4\u5230\u8fd9\u4e2a\u533a\u95f4\u6709\u4e00\u4e2a\u70b9\u88ab\u8986\u76d6\u4e86$m$\u6b21\uff0c\u90a3\u4e48\u6700\u540e\u8986\u76d6\u4e0a\u53bb\u7684\u533a\u95f4\u7684\u957f\u5ea6\u51cf\u53bb\u5b9a\u4f4f\u7684\u6700\u5c0f\u503c\u5c31\u662f\u7b54\u6848\u4e86\n\n\u5bf9\u6240\u6709\u7684\u7b54\u6848\u53d6\u4e00\u4e2a$min$\u5c31\u597d\u4e86\n\n\u8fd9\u6837\u662f\u663e\u7136\u4e0d\u884c\u7684\u5440\uff0c\u6211\u4eec\u5f97\u60f3\u4e2a\u529e\u6cd5\n\n\u4e8e\u662f\u6211\u5c31\u60f3\u51fa\u6765\u4e00\u79cd\u663e\u7136\u9519\u8bef\u7684\u505a\u6cd5\n\n\u6211\u5927\u80c6\u7684\u731c\u6d4b\u7b54\u6848\u662f\u5355\u8c03\u7684\n\n~~\u5c11\u5e74\u8c01\u7ed9\u4f60\u7684\u52c7\u6c14~~\n\n\u4e8e\u662f\u8fd9\u4e2a\u663e\u7136\u9519\u8bef\u7684\u505a\u6cd5\u662f\u8fd9\u6837\u7684\uff0c\u5148\u5c06\u6700\u77ed\u7684\u533a\u95f4\u4e00\u76f4\u8986\u76d6\uff0c\u76f4\u5230\u8986\u76d6\u5230\u7b26\u5408\u6761\u4ef6\u4e3a\u6b62\uff0c\u4e4b\u540e\u7531\u4e8e\u6240\u8c13\u7684\"\u7b54\u6848\u5355\u8c03\"\uff0c\u90a3\u4e48\u4f7f\u4e0b\u4e00\u4e2a\u6b21\u77ed\u7684\u533a\u95f4\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u4e00\u5b9a\u5728\u524d\u9762\u7684\u7b54\u6848\u7684\u540e\u9762\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u5747\u644a\u4e0b\u6765\u662f\u5bf9\u7684\n\n\u7b54\u6848\u5355\u8c03\u5f88\u6709\u9053\u7406\uff0c\u4f46\u662f\u51c9\u51c9\u4e86\n\n\u5f88\u5bb9\u6613\u5c31\u80fd\u627e\u5230\u53cd\u4f8b\u4e86\n\n\u6211\u4eec\u518d\u8986\u76d6\u7b2c\u4e00\u4e2a\u6700\u77ed\u7684\u533a\u95f4\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u6211\u4eec\u53ea\u662f\u5728\u5224\u65ad\u6700\u77ed\u7684\u533a\u95f4\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u6240\u4ee5\u53ef\u80fd\u8fd9\u4e2a\u65f6\u5019\u4e4b\u540e\u7684\u67d0\u4e2a\u533a\u95f4\u5c31\u7a81\u7136\u6ee1\u8db3\u6761\u4ef6\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b54\u6848\u663e\u7136\u4e0d\u662f\u5355\u8c03\u7684\n\n\u4f46\u662f\u8fd9\u4e2a\u9519\u8bef\u7684\u601d\u8def\u548c\u6b63\u89e3\u5df2\u7ecf\u975e\u5e38\u63a5\u8fd1\u4e86\uff0c\u5dee\u522b\u53ea\u6709\u4e00\u70b9\uff0c**\u6211\u4eec\u5224\u65ad\u7684\u65f6\u5019\u5224\u65ad\u7684\u4e0d\u662f\u6700\u77ed\u7684\u533a\u95f4\u662f\u5426\u7b26\u5408\u6761\u4ef6\uff0c\u800c\u662f\u5224\u65ad\u6574\u4e2a\u533a\u95f4\u5185\u662f\u5426\u6709\u70b9\u88ab\u8986\u76d6\u4e86$m$\u6b21**\n\n\u8fd9\u6709\u4ec0\u4e48\u9053\u7406\u5462\uff0c\u5176\u5b9e\u8054\u60f3\u4e00\u4e0b\u5c3a\u53d6\u6cd5\uff0c\u548c\u5c3a\u53d6\u6cd5\u5dee\u4e0d\u591a\n\n\u6211\u4eec\u4ece\u6700\u77ed\u7684\u533a\u95f4\u5f00\u59cb\u8986\u76d6\uff0c\u53ef\u80fd\u8986\u76d6\u7684\u8fc7\u7a0b\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u5e76\u6ca1\u6709\u6765\u81ea\u5f53\u524d\u7684\u533a\u95f4\uff0c\u4f46\u662f\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u76f4\u63a5\u7528\u5f53\u524d\u7684\u533a\u95f4\u4f5c\u4e3a\u6700\u5c0f\u7684\u533a\u95f4\u5c31\u884c\u4e86\uff0c\u8fd9\u6837\u663e\u7136\u53ea\u4f1a\u5bfc\u81f4\u7b54\u6848\u504f\u5927\uff0c\u800c\u771f\u6b63\u7684\u6700\u5c0f\u533a\u95f4\u6211\u4eec\u5728\u540e\u9762\u4e5f\u4f1a\u53d6\u5230\n\n\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cstring>\n#include<set>\n#include<algorithm>\n#include<map>\n#define maxn 500005\n#define re register\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\nstd::set<int> s;\nstd::map<int,int> ma;\nstruct node\n{\n\tint ll,rr,len;\n\tint L,R;\n}a[maxn];\nint b[maxn<<1];\nint n,m,N;\nint ans=19999999999;\nint l[4000005],r[4000005],d[4000005],tag[4000005];\ninline int read()\n{\n\tchar c=getchar();\n\tint x=0;\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9')\n\t  x=(x<<3)+(x<<1)+c-48,c=getchar();\n\treturn x;\n}\ninline int cmp(node K,node M)\n{\n\treturn K.len<M.len;\n}\nvoid build(int x,int y,int i)\n{\n\tl[i]=x;\n\tr[i]=y;\n\tif(x==y) return;\n\tint mid=x+y>>1;\n\tbuild(x,mid,i<<1),build(mid+1,y,i<<1|1);\n}\ninline void pushdown(int i)\n{\n\tif(!tag[i]) return;\n\ttag[i<<1]+=tag[i];\n\ttag[i<<1|1]+=tag[i];\n\td[i<<1|1]+=tag[i];\n\td[i<<1]+=tag[i];\n\ttag[i]=0;\n}\nvoid change(int x,int y,int v,int i)\n{\n\tif(x<=l[i]&&y>=r[i])\n\t{\n\t\td[i]+=v;\n\t\ttag[i]+=v;\n\t\treturn;\n\t}\n\tpushdown(i);\n\tint mid=l[i]+r[i]>>1;\n\tif(y<=mid) change(x,y,v,i<<1);\n\telse if(x>mid) change(x,y,v,i<<1|1);\n\telse change(x,y,v,i<<1),change(x,y,v,i<<1|1);\n\td[i]=max(d[i<<1],d[i<<1|1]);\n}\nint main()\n{\n\tn=read();\n\tm=read();\n\tfor(re int i=1;i<=n;i++)\n\t\ta[i].ll=read(),a[i].rr=read(),a[i].len=a[i].rr-a[i].ll,b[++N]=a[i].ll,b[++N]=a[i].rr;\n\tstd::sort(a+1,a+n+1,cmp);\n\tstd::sort(b+1,b+N+1);\n\tint tot=std::unique(b+1,b+N+1)-b-1;\n\tfor(re int i=1;i<=tot;i++)\n\t\tma[b[i]]=i;\n\tbuild(1,tot,1);\n\tfor(re int i=1;i<=n;i++) a[i].L=ma[a[i].ll],a[i].R=ma[a[i].rr];\n\tint now=-1;\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tchange(a[i].L,a[i].R,1,1);\n\t\tif(d[1]==m)\n\t\t{\n\t\t\tans=a[i].len-a[1].len;\n\t\t\tnow=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(now==-1)\n\t{\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tfor(re int i=2;i<=n;i++)\n\t{\n\t\tchange(a[i-1].L,a[i-1].R,-1,1);\n\t\twhile(d[1]<m) \n\t\t{\n\t\t\tif(now==n) \n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",ans);\n\t\t\t\treturn 0;\n\t\t\t} \n\t\t\tnow++;\n\t\t\tchange(a[now].L,a[now].R,1,1);\n\t\t}\n\t\tans=min(ans,a[now].len-a[i].len);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1535525757,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1712 \u3010[NOI2016]\u533a\u95f4\u3011"
    },
    {
        "content": "\u5047\u5982\u7b54\u6848\u662f\u957f\u5ea6l-r\uff0c\u6211\u4eec\u4e0d\u59a8\u8d2a\u5fc3\u5730\u8ba4\u4e3a\u6240\u6709\u957f\u5ea6l-r\u4e4b\u95f4\u90fd\u52a0\u5165\u4e86\u9009\u62e9\u3002\n\n\u6240\u4ee5\u6309\u957f\u5ea6\u6392\u5e8f\u540e\u7528\u53cc\u6307\u9488\u6765\u505a\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f53\u524d\u6700\u5927\u3002\n\n\u800c\u6211\u6700\u60f3\u8bf4\u7684\u662f\n\nzkw\u662f\u89e3\u51b3 \u533a\u95f4\u52a0 \u4e0e \u53ef\u81ea\u4e0b\u5411\u4e0a\u7684\u7ef4\u62a4\u7684\u503c(\u8fd9\u9898\u662f\u6700\u5927) \u7684\u5229\u5668\uff01\n\n\u53ef\u89c1\u4ee3\u7801add\u90e8\u5206\uff0c\u81ea\u5df1\u753b\u4e00\u4e0b\u56fe\u5c31\u80fd\u61c2\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint max(int x,int y)\n{\n    return x>y?x:y;\n}\nvoid chmin(int &x,int y)\n{\n    if (x>y) x=y;\n}\n\n#define N (500000+5)\nstruct ZKW\n{\n    int a,max;\n    void add(int w)\n    {\n        a+=w;max+=w;\n    }\n};\nZKW a[N*2*3];int d;\n//\u56e0\u4e3ac++\u4f4d\u8fd0\u7b97\u7684\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u592a\u4f4e\uff0c\u90fd\u8981\u6253\u62ec\u53f7\uff0c\u9ebb\u70e6\u800c\u4e14\u6613\u9519\u3002\u6240\u4ee5\u6211\u90fd\u7528define\u6765\u4ee3\u66ff\n#define FL (l>>1)//\u7238\u7238\n#define SL (l^1)//\u5144\u5f1f\n#define DL (l&1)//\u662f\u53f3\u513f\u5b50or\u5de6\n#define FR (r>>1)\n#define SR (r^1)\n#define DR (r&1)\nvoid add(int l,int r,int w)\n{\n    l+=d;r+=d;\n    a[l].add(w);\n    if (l!=r)\n    {\n        a[r].add(w);\n        while (SL!=r)\n        {\n            if (!DL) a[SL].add(w);\n            if (DR)  a[SR].add(w);\n            a[FL].max=max(a[l].max,a[SL].max)+a[FL].a;\n            a[FR].max=max(a[r].max,a[SR].max)+a[FR].a;\n            l=FL;r=FR;\n        }\n    }\n    while (FL)\n    {\n      a[FL].max=max(a[l].max,a[SL].max)+a[FL].a;\n      l=FL;\n    }\n}\n\nstruct segment\n{\n    int l,r,len;\n};\nsegment s[N];\nbool len_xiao(const segment &x,const segment &y)\n{\n    return x.len<y.len;\n}\n\nint *dy[N<<1],k,top,now;\nbool xiao(const int *x,const int *y)\n{\n    return *x<*y;\n}\n\nint main()\n{ freopen(\"1.in\",\"r\",stdin);\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    int i;\n    for (i=1;i<=n;++i) \n    {\n        scanf(\"%d%d\",&s[i].l,&s[i].r);\n        s[i].len=s[i].r-s[i].l;\n        dy[++k]=&s[i].l;dy[++k]=&s[i].r;\n    }\n    \n    sort(dy+1,dy+k+1,xiao);\n    now=*dy[1];top=*dy[1]=1;\n    for (i=2;i<=k;++i)\n    {\n        if (*dy[i]>now) {now=*dy[i];++top; }\n        *dy[i]=top;\n    }\n    for (d=1;d<top;d<<=1);d-=1;\n    \n    sort(s+1,s+n+1,len_xiao);\n    int l=0,r=1,ans=1<<30;//l\u662f\u5df2\u7ecf\u51cf\u4e86\u7684\uff0cr\u662f\u5df2\u7ecf\u52a0\u4e86\u7684\n    add(s[1].l,s[1].r,1);\n    while (r<=n)\n    {\n        while (a[1].max<m&&r<n) {++r;add(s[r].l,s[r].r,1);}\n        if (a[1].max<m) break;\n        while (a[1].max>=m) {++l;add(s[l].l,s[l].r,-1);}\n        chmin(ans,s[r].len-s[l].len);\n    }\n    \n    if (ans==1<<30) printf(\"%d\",-1);\n    else printf(\"%d\",ans);\n}\n```",
        "postTime": 1478693049,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1712 \u3010\u533a\u95f4\u3011"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u9898\u610f\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\uff0c\u5c31\u4e0d\u518d\u8bf4\u4e86\n\n## \u9898\u89e3\n\n\u6211\u4eec\u9996\u5148\u8003\u8651\u600e\u4e48\u53bb\u9009\u62e9\u8fd9 $M$ \u4e2a\u533a\u95f4\u624d\u80fd\u4f7f\u5f97\u6700\u7ec8\u7684\u82b1\u8d39\u6700\u5c0f\u3002\n\n\u4e0d\u96be\u60f3\u5230\u6211\u4eec\u9700\u8981\u5c3d\u91cf\u9009\u62e9 **\u957f\u5ea6\u5c3d\u91cf\u9760\u8fd1** \u7684 $M$ \u4e2a\u533a\u95f4\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u6211\u4eec\u9700\u8981\u6309\u7167\u533a\u95f4\u7684\u957f\u5ea6\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u539f\u56e0\u5f88\u663e\u7136\uff0c\u6211\u4eec\u5982\u679c\u9009\u62e9\u7684\u533a\u95f4\u7684\u957f\u5ea6\u4e0d\u9760\u8fd1\uff0c\u90a3\u4e48\u5c31\u4f1a\u9020\u6210\u6700\u5c0f\u7684\u533a\u95f4\u957f\u5ea6\u53d8\u5c0f\uff0c\u6700\u5927\u7684\u533a\u95f4\u957f\u5ea6\u53d8\u5927\u3002\u7136\u800c\u7b54\u6848\u5c31\u662f\u957f\u5ea6\u6700\u5927\u7684\u533a\u95f4\u548c\u957f\u5ea6\u6700\u5c0f\u7684\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8ba9\u8fd9\u4e24\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\u5c3d\u91cf\u9760\u8fd1\u3002\n\n\u6392\u5b8c\u5e8f\u540e\u6211\u4eec\u5c31\u4f9d\u6b21\u628a\u6bcf\u4e2a\u533a\u95f4\u52a0\u5165\u5230\u7b54\u6848\u6240\u5728\u7684\u96c6\u5408\u91cc\u3002\n\n\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $A$\uff0c\u6bcf\u5f53\u6211\u4eec\u52a0\u5165\u4e00\u4e2a\u533a\u95f4 $[l_{i},r_{i}]$\uff0c\u5c31\u4ee4 $A_{l_{i}},A_{l_{i}+1},\\cdots,A_{r_{i}}$ \u5168\u90e8\u52a0\u4e00\u3002\u5982\u679c\u5b58\u5728\u67d0\u4e00\u4e2a $A_{p}$ \u4f7f\u5f97 $M\\le A_{p}$\uff0c\u6211\u4eec\u5c31\u66f4\u65b0\u7b54\u6848\uff0c\u5e76\u4e14\u5220\u9664\u6700\u5148\u52a0\u5165\u8fdb\u6765\u7684\u533a\u95f4\uff0c\u4e5f\u5c31\u662f\u4ee4 $A_{l_{i}},A_{l_{i}+1},\\cdots,A_{r_{i}}$ \u5168\u90e8\u51cf\u4e00\u3002\n\n\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n1. \u8981\u79bb\u6563\u5316\uff08\u5e9f\u8bdd\n\n2. \u7ebf\u6bb5\u6811\u5f008\u500d\uff08\u6bcf\u4e2a\u533a\u95f4\u6709\u4e24\u4e2a\u7aef\u70b9\n\n3. \u6ca1\u4e86\n\n##### [\u6084\u6084\u5b89\u5229\u535a\u5ba2](http://boringhacker.github.io/)\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\nconst int SIZE = 500000 + 5;\nint MAX[SIZE << 3];\nint mark[SIZE << 3];\nvector < int > disc;\nint n, m, holyans = -1;\nstruct interval {\n\tint l, r;\n\tint len;\n\tinterval(){}\n\tinterval(int L, int R, int S) : l(L), r(R), len(S){}\n\tbool operator < (const interval& rhs) const {\n\t\treturn len < rhs.len;\n\t}\n} seg[SIZE];\n#define ls (k << 1)\n#define rs (k << 1 | 1)\n#define mid ((l + r) >> 1)\n\n#define pushdown(k) \t\t\t\\\n\tif (mark[k]) {\t\t\t\t\\\n\t\tMAX[ls] += mark[k];\t\t\\\n\t\tMAX[rs] += mark[k];\t\t\\\n\t\tmark[ls] += mark[k];\t\\\n\t\tmark[rs] += mark[k];\t\\\n\t\tmark[k] = 0;\t\t\t\\\n\t}\n\n#define pushup(k) MAX[k] = max(MAX[ls], MAX[rs])\n#define GetID(x) (lower_bound(disc.begin(), disc.end(), x) - disc.begin() + 1)\n\nvoid modify(int k, int l, int r, int x, int y, int v) {\n\tif (l >= x && r <= y) mark[k] += v, MAX[k] += v;\n\telse {\n\t\tpushdown(k);\n\t\tif (mid >= x) modify(ls, l, mid, x, y, v);\n\t\tif (mid < y) modify(rs, mid + 1, r, x, y, v);\n\t\tpushup(k);\n\t}\n}\n\nvoid discretization() {\n\tfor (int i = 1; i <= n; ++i) disc.push_back(seg[i].l), disc.push_back(seg[i].r);\n\tsort(disc.begin(), disc.end());\n\tsort(seg + 1, seg + 1 + n);\n\tdisc.erase(unique(disc.begin(), disc.end()), disc.end());\n\tfor (int i = 1; i <= n; ++i) seg[i].l = GetID(seg[i].l), seg[i].r = GetID(seg[i].r);\n}\n\nsigned main() {\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i = 1, x, y; i <= n; ++i) scanf(\"%d %d\", &x, &y), seg[i] = interval(x, y, y - x + 1);\n\tdiscretization();\n\tint size = disc.size();\n\tint max_id = n;\n\tfor (int i = n; i >= 1; --i) {\n\t\twhile (MAX[1] >= m && max_id > i) {\n\t\t\tmodify(1, 1, size, seg[max_id].l, seg[max_id].r, -1);\n\t\t\t--max_id;\n\t\t\tif (MAX[1] >= m) {\n\t\t\t\tif (~holyans) holyans = min(holyans, seg[max_id].len - seg[i].len);\n\t\t\t\telse holyans = seg[max_id].len - seg[i].len;\n\t\t\t}\n\t\t}\n\t\tmodify(1, 1, size, seg[i].l, seg[i].r, 1);\n\t\tif (MAX[1] >= m) {\n\t\t\tif (~holyans) holyans = min(holyans, seg[max_id].len - seg[i].len);\n\t\t\telse holyans = seg[max_id].len - seg[i].len;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", holyans);\n\treturn 0;\n}\n```",
        "postTime": 1582957888,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1712 \u3010[NOI2016]\u533a\u95f4\u3011"
    }
]