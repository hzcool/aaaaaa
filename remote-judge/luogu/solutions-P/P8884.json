[
    {
        "content": "# \u9898\u89e3 - \u68cb\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u51fa\u9898\u4eba\u89c9\u5f97\u81ea\u5df1\u5199\u5f97\u6bd4\u8f83\u660e\u767d\uff0c\u6240\u4ee5\u4e0d\u60f3\u518d\u52a0\u7b80\u8ff0\u3002\n\n## \u90e8\u5206\u5206 1\n\n\u53ea\u662f\u89c9\u5f97\u5927\u90e8\u5206\u7684\u66b4\u529b\u90fd\u5e94\u8be5\u8dd1\u5f97\u8fc7\uff0c\u7ed9\u70b9\u66b4\u529b\u5206\u3002\u4f9d\u7167\u9898\u610f\u6a21\u62df\u80fd\u8fc7\u5427\u3002\n\n## \u90e8\u5206\u5206 2\n\n\u4e0b\u6587\u79f0\u4e00\u4e2a\u4f4d\u7f6e $(x,y)$ \u4e3a\u5947\u6570\u4f4d\u7f6e\uff0c\u5f53\u4e14\u4ec5\u5f53 $x+y\\equiv 1\\pmod 2$\uff0c\u5076\u6570\u4f4d\u7f6e\u5219\u76f8\u5bf9\uff0c$x+y\\equiv 0\\pmod 2$\u3002\n\n\u6211\u4eec\u8003\u8651\u4efb\u610f\u4e24\u4e2a\u5076\u6570\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u6709\u68cb\u5b50\uff0c\u53e6\u4e00\u4e2a\u662f\u7a7a\u4f4d\uff0c\u90a3\u4e48\u7ecf\u8fc7\u4e00\u4e9b\u79fb\u52a8\uff0c\u53e6\u4e00\u4e2a\u7a7a\u4f4d\u5fc5\u7136\u53ef\u8fbe\u3002\n\n\u9996\u5148\u5982\u679c\u8def\u5f84\u4e0a\u6ca1\u6709\u70b9\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e00\u6761\u8def\u5f84\uff0c\u8fd9\u4e2a\u4e0d\u60f3\u89e3\u91ca\u4e86\u3002\n\n\u5982\u679c\u8def\u5f84\u4e0a\u4f1a\u88ab\u963b\u9694\uff0c\u90a3\u4e48\u53ea\u8981\u8ba9\u963b\u9694\u7684\u90a3\u4e2a\u70b9\u79fb\u8fc7\u53bb\u5c31\u53ef\u4ee5\u4e86\uff0c\u7b49\u4ef7\u3002\n\n\u8fd9\u542f\u793a\u6211\u4eec\u5206\u5947\u5076\u5224\u65ad\u3002\n\n## \u90e8\u5206\u5206 3\n\n\u8fd9\u4e00\u90e8\u5206\u90fd\u662f\u5b50\u77e9\u9635\u5185\u7a7a\u95f4\u4e0d\u662f\u5f88\u591f\u7684\u63d0\u793a\u3002\n\n\u8fd9\u542f\u793a\u6211\u4eec\u65e2\u8981\u8003\u8651\u68cb\u5b50\u591f\u4e0d\u591f\uff0c\u8fd8\u8981\u8003\u8651\u7a7a\u4f4d\u591f\u4e0d\u591f\u3002\n\n## \u6b63\u89e3\n\n~~\u8fd9\u6837\u4e00\u770b\uff0c\u597d\u50cf\u4e0a\u9762\u7684\u90e8\u5206\u5206\u90fd\u4e0d\u662f\u771f\u7684\u5728\u7ed9\u5206\uff0c\u53ea\u662f\u7ed9\u4e00\u70b9\u601d\u8003\u7684\u63d0\u793a\u3002~~\n\n\u7ed3\u8bba\uff1a\u770b**\u5947\u6570\u4f4d\u7f6e\u7684\u68cb\u3001\u5947\u6570\u4f4d\u7f6e\u7684\u7a7a\u3001\u5076\u6570\u4f4d\u7f6e\u7684\u68cb\u3001\u5076\u6570\u4f4d\u7f6e\u7684\u7a7a\u591f\u4e0d\u591f**\u3002\n\n\u5bf9\u4e8e\u5982\u4f55\u8ba1\u7b97\u5947\u6570/\u5076\u6570\u4f4d\u7f6e\u7684\u603b\u91cf\uff1a\n\n- **\u5f53\u6709\u4efb\u610f\u4e00\u7ef4\u957f\u4e3a\u5076\u6570\u7684\u65f6\u5019**\uff1a\u663e\u7136\u5947\u5076\u6570\u4f4d\u7f6e\u76f8\u7b49\uff08\u8003\u8651\u8fd9\u4e00\u7ef4\u76f8\u90bb\u4e24\u884c/\u5217\u4e24\u4e24\u914d\u5bf9\u4e92\u8865\uff09\uff0c\u603b\u4f4d\u7f6e\u9664\u4ee5\u4e8c\u5373\u4e3a\u6bcf\u4e00\u79cd\u7684\u6570\u76ee\u3002\n\n- **\u5f53\u4e24\u7ef4\u90fd\u957f\u4e3a\u5947\u6570\u7684\u65f6\u5019**\uff1a\u8003\u8651\u4e24\u7ef4\u957f\u5ea6\u540c\u65f6 $\\bmod\\ 2$\uff08\u4e24\u4e24\u914d\u5bf9\u4e92\u8865\uff09\uff0c\u53d1\u73b0\u53ea\u53ef\u80fd\u4e00\u79cd\u6bd4\u53e6\u4e00\u79cd\u521a\u597d\u591a $1$ \u4e2a\uff0c\u8fd9\u4e00\u4e2a\u5c31\u662f\u4efb\u610f\u4e00\u4e2a\u89d2\u7684\u5947\u5076\u3002\n\n\u7efc\u4e0a\uff0c\u5982\u679c\u4e24\u7ef4 $n,m$ \u90fd\u4e3a\u5947\u6570\uff0c\u5de6\u4e0a\u89d2\u4e3a\u5947\u6570\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5947\u6570\u4f4d\u7f6e\u6570\u5c31\u662f $\\lceil\\frac{nm}{2}\\rceil$\uff0c\u5076\u6570\u4f4d\u7f6e\u6570\u5373\u4e3a $\\lfloor\\frac{nm}{2}\\rfloor$\uff1b\u5426\u5219\uff0c\u5947\u6570\u4f4d\u7f6e\u6570\u662f $\\lfloor\\frac{nm}{2}\\rfloor$\uff0c\u5076\u6570\u4f4d\u7f6e\u6570\u662f $\\lceil\\frac{nm}{2}\\rceil$\u3002\n\n\u90a3\u4e48\u4e0a\u8ff0\u56db\u4e2a\u53d8\u91cf\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5b50\u77e9\u9635\u90fd\u53ef\u4ee5 $O(1)$ \u6c42\u51fa\u3002\u6700\u540e\u65f6\u95f4\u590d\u6742\u5ea6 $O(C+\\sum p)$\u3002\n\n~~std \u7528\u7684\u662f `iostream`\uff0c\u8dd1\u5f97\u5f88\u5feb\uff0c\u6709\u4eba\u4f1a\u88ab\u5361\u5e38\u5417\uff1f~~\n\n~~\u8bb0\u5f97\u5f00 `long long`\u3002~~\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nll N, M, C, C0, C1, Q, R0, R1;\n\nint main() {\n  cin >> N >> M >> C;\n  for (int a(0), b(0); C--;) {\n    cin >> a >> b;\n    if ((a + b) & 1)\n      ++C1;\n    else\n      ++C0;\n  }\n  R0 = ceil(N / 2.0 * M) - C0; // \u5076\u6570\u7a7a\u6709\u591a\u5c11\u3002\u6ce8\u610f\u5de6\u4e0a\u89d2\u5fc5\u4e3a\u5076\u6570\u7a7a\n  R1 = floor(N / 2.0 * M) - C1; // \u5947\u6570\u7a7a\u6709\u591a\u5c11\n  cin >> Q;\n  for (ll x1(0), y1(0), x2(0), y2(0), p(0), c0(0), c1(0), r0(0), r1(0); Q--;) {\n    cin >> x1 >> y1 >> x2 >> y2 >> p;\n    c0 = c1 = 0;\n    for (int c(0), d(0); p--;) {\n      cin >> c >> d;\n      if ((c + d) & 1)\n        ++c1;\n      else\n        ++c0;\n    }\n    r0 = ceil((x2 - x1 + 1) / 2.0 * (y2 - y1 + 1)) - c0; // \u5b50\u77e9\u9635\u5185\u5076\u6570\u7a7a\n    r1 = floor((x2 - x1 + 1) / 2.0 * (y2 - y1 + 1)) - c1; // \u5b50\u77e9\u9635\u5185\u5947\u6570\u7a7a\n    if ((x2 - x1 + 1) & 1 && (y2 - y1 + 1) & 1 && (x1 + y1) & 1) { // \u5206\u4e24\u7c7b\u8ba8\u8bba\n      r0 = floor((x2 - x1 + 1) / 2.0 * (y2 - y1 + 1)) - c0;\n      r1 = ceil((x2 - x1 + 1) / 2.0 * (y2 - y1 + 1)) - c1;\n    }\n    cout << ((C0 >= c0 && C1 >= c1 && R0 >= r0 && R1 >= r1) ? \"YES\" : \"NO\") // \u53ea\u8981\u56db\u4e2a\u53d8\u91cf\u90fd\u662f\u591f\u7684\uff0c\u5c31\u53ef\u4ee5\u79fb\n         << endl;\n  }\n  return 0;\n}\n```\n",
        "postTime": 1668859943,
        "uid": 819829,
        "name": "lOIAKME",
        "ccfLevel": 0,
        "title": "\u3010JEOI-R1\u3011\u68cb"
    },
    {
        "content": "\u5bf9\u68cb\u76d8\u8fdb\u884c\u4e00\u4e2a\u8272\u7684\u67d3\u3002\u5982\u679c\u6a2a\u7eb5\u5750\u6807\u548c\u4e3a\u5076\u6570\u5219\u67d3\u767d\u5426\u5219\u67d3\u9ed1\u3002\n\n\u5728\u9ed1\u8272\u683c\u5b50\u4e0a\u7684\u68cb\u5b50\u53ea\u80fd\u8d70\u5230\u9ed1\u8272\u683c\u5b50\u4e0a\uff0c\u5728\u767d\u8272\u683c\u5b50\u4e0a\u7684\u68cb\u5b50\u53ea\u80fd\u8d70\u5230\u767d\u8272\u683c\u5b50\u4e0a\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b50\u77e9\u9635\uff0c\u5176\u4e2d\u9700\u8981\u7684\u9ed1\u68cb\u5b50\u4e2a\u6570\u548c\u767d\u68cb\u5b50\u4e2a\u6570\u9700\u8981\u5c0f\u4e8e\u7b49\u4e8e\u5404\u81ea\u7684\u603b\u4e2a\u6570\u3002\u7a7a\u7740\u7684\u9ed1\u683c\u5b50\u548c\u767d\u683c\u5b50\u6570\u91cf\u4e5f\u8981\u7b97\u51fa\u6765\u8fdb\u884c\u6bd4\u8f83\u3002\n\n\u4ee3\u7801\u5bb9\u6613\u5b9e\u73b0\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n\nusing namespace std;\n\nint n, m, c, q;\nint t0, t1;\nint a0, a1, b0, b1;\nint s0, s1;\nint c0, c1, d0, d1;\n\nsigned main() {\n    cin >> n >> m >> c;\n    t0 = (n * m & 1 ? (n * m + 1) >> 1 : n * m >> 1);\n    t1 = (n * m & 1 ? (n * m - 1) >> 1 : n * m >> 1);\n    while (c--) {\n        int x, y;\n        cin >> x >> y;\n        a0 += !  !  !  !  !  !  !(x + y & 1);\n        a1 += ! ! ! ! ! ! ! ! ! !(x + y & 1);\n    }\n    b0 = t0 - a0, b1 = t1 - a1;\n    cin >> q;\n    while (q--) {\n        int x0, y0, x1, y1, p, h, w;\n        cin >> x0 >> y0 >> x1 >> y1 >> p;\n        h = x1 - x0 + 1, w = y1 - y0 + 1;\n        s0 = (h * w & 1 ? h * w + (x0 + y0 & 1 ? -1 : 1) >> 1 : h * w >> 1);\n        s1 = (h * w & 1 ? h * w + (x0 + y0 & 1 ? 1 : -1) >> 1 : h * w >> 1);\n        c0 = c1 = d0 = d1 = 0;\n        while (p--) {\n            int x, y;\n            cin >> x >> y;\n            c0 += !  !  !  !  !  !  !(x + y & 1);\n            c1 += ! ! ! ! ! ! ! ! ! !(x + y & 1);\n        }\n        d0 = s0 - c0;\n        d1 = s1 - c1;\n        puts(c0 <= a0 && c1 <= a1 && d0 <= b0 && d1 <= b1 ? \"YES\" : \"NO\");\n    }\n    return 0;\n}\n```",
        "postTime": 1670640238,
        "uid": 362750,
        "name": "TernaryTree",
        "ccfLevel": 0,
        "title": "JEOI R1 \u68cb \u9898\u89e3"
    }
]