[
    {
        "content": "### \u9898\u610f\n\n- \u6211\u4eec\u628a\u98df\u7269\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\uff0c\u719f\u7684\u4e3a $S_1$\uff0c\u4e0d\u719f\u4e3a $S_2$\u3002\n- $Add_0$\u200b\u200b\uff1a\u5728\u96c6\u5408 $S_2$\u200b\u200b \u4e2d\u52a0\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u6b64\u5143\u7d20\u5728\u7ecf\u8fc7 $t_{id}$\u200b\u200b \u65f6\u95f4\u540e\u4f1a\u81ea\u52a8\u52a0\u5165 $S_1$\u200b\u200b\uff0c\u4e14\u5728 $S_2$\u200b\u200b \u4e2d\u6d88\u5931\u3002\n- $Ask_1$\uff1a\u8be2\u95ee $S_1$ \u4e2d\u5143\u7d20\u7684\u6700\u5c0f\u7f16\u53f7\uff0c\u82e5 $S_1 = \\varnothing$ \uff0c\u5219\u8f93\u51fa `Yazid is angry.`\u3002\n- $Ask_2$\uff1a\u8be2\u95ee\u67d0\u4e2a\u7279\u5b9a\u7f16\u53f7\u7684\u98df\u7269\u5b58\u5728\u4e8e $S_1$ \u4e2d\uff0c\u82e5\u5b58\u5728\uff0c\u8f93\u51fa `Succeeded! `\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u67e5\u8be2 $S_2$ \u4e2d\u662f\u5426\u5b58\u5728\u8be5\u5143\u7d20\uff0c\u82e5\u5b58\u5728\uff0c\u8f93\u51fa\u8be5\u5143\u7d20\u8fd8\u9700\u591a\u957f\u65f6\u95f4\u52a0\u5165\u96c6\u5408 $S_1$ \u4e2d\uff0c\u82e5 $S_2$ \u4e2d\u4e5f\u4e0d\u5b58\u5728\u8be5\u5143\u7d20\uff0c\u5219\u8f93\u51fa `YJQQQAQ is angry.`\u3002\n- $Ask_3$\u200b\uff1a\u67e5\u8be2\u96c6\u5408 $S_1$\u200b \u4e2d $[l,r]$ \u5185\u5171\u6709\u591a\u5c11\u5143\u7d20\u3002\n\n### \u5206\u6790\n\n- \u63d0\u4f9b\u601d\u8def\uff1a\u6811\u72b6\u6570\u7ec4+\u4e24\u4e2a\u4f18\u5148\u961f\u5217+\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\uff08\u53ef\u80fd~~\u6709\u70b9~~\u5341\u5206\u9ebb\u70e6\uff09\u3002\n- \u9996\u5148\u9488\u5bf9 $Ask_3$ \u6211\u4eec\u81ea\u7136\u53ef\u4ee5\u60f3\u5230\u6811\u72b6\u6570\u7ec4\u3002\n- \u63a5\u4e0b\u6765\u6211\u4eec\u60f3\u5982\u4f55\u7ef4\u62a4 $Add_0$\u3001$Ask_1$\u3001$Ask_2$\u3001$S_1$\u3001$S_2$\u3002\n- \u53ef\u4ee5\u60f3\u5230\uff0c\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4 $S_2$\u200b\uff0c\u5728\u6bcf\u6b21\u67e5\u8be2\u524d\u5c06\u961f\u5217\u4e2d\u7684\u5143\u7d20\u653e\u8fdb $S_1$\u200b \u7684\u4f18\u5148\u961f\u5217\u3002\n- \u8fd9\u91cc\u7684\u4e24\u4e2a\u4f18\u5148\u961f\u5217\u6392\u5e8f\u7684\u5173\u952e\u5b57\u4e0d\u540c\uff0c$S_1$ \u7684\u4f18\u5148\u961f\u5217\uff0c\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a\u7f16\u53f7\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6210\u719f\uff0c$S_2$ \u7684\u4f18\u5148\u961f\u5217\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a\u6210\u719f\u65f6\u95f4\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u8d2a\u5fc3\u7684\u5224\u65ad\u662f\u5426\u6210\u719f\n- \u5bf9\u4e8e $Add_0$ \u6211\u4eec\u76f4\u63a5\u6a21\u62df\u5373\u53ef\uff0c\u7528 `deque` \u6765\u7ef4\u62a4\u7f16\u53f7\u7684\u4fe1\u606f\uff0c\u5e76\u6ce8\u610f\u66f4\u65b0\u6811\u72b6\u6570\u7ec4\u3002\n- \u5bf9\u4e8e $Ask_1$ \u6211\u4eec\u67e5\u8be2 $S_1$\u200b \u6240\u5bf9\u5e94\u7684\u4f18\u5148\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff0c\u82e5\u4e0d\u4e3a\u7a7a\uff0c\u8f93\u51fa\u961f\u9996\u5373\u53ef\u3002\n- \u5bf9\u4e8e $Ask_2$\u200b \u6211\u4eec\u67e5\u8be2\u7f16\u53f7\u5bf9\u5e94\u7684 `deque` \u662f\u5426\u4e3a\u7a7a\uff0c\u76f4\u63a5\u6a21\u62df\u5373\u53ef\uff0c\u6ce8\u610f\u8fd0\u7528**\u61d2\u60f0\u5220\u9664\u6cd5**\u66f4\u65b0\u4f18\u5148\u961f\u5217\uff08\u4e0d\u61c2\u7684\u53ef\u4ee5\u770b `Dijkstra` \u7684\u9898\u89e3\uff0c[\u8fd9\u8fb9\u8bf7](https://www.luogu.com.cn/problem/solution/P4779)\uff09\u3002\n- \u5bf9\u4e8e $Ask_3$ \u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u76f4\u63a5\u5e72\u788e\u5373\u53ef\u3002\n\n### \u5410\u69fd\n\n> \u600e\u4e48\u4f1a\u6709\u5361\u7a7a\u95f4\u8fd9\u6863\u5b50\u7834\u4e8b.jpg\n>\n> \u539f\u6765\u662f\u6211\u5199\u6302\u4e86.jpg\n>\n> \u5173\u4e8e\u4e00\u4e2a\u9898\u4ea4\u4e864\u9875\u8fd9\u6863\u5b50\u7834\u4e8b\n\n### Code\n\n```cpp\nconst int maxn = 1e5 + 1;\n\nint n, tot, a[maxn];\nbool vis[500001];\n\nclass Tree_Array {\n    private:\n        int t[maxn];\n        \n        inline int lowbit(int x) {\n            return x & (-x);\n        }\n    \n    public:\n        \n        inline void init() {\n            memset(t, 0, sizeof(t));\n        }\n\n        inline void Add(int pos, int v) {\n            while(pos <= n)\n                t[pos] += v, pos += lowbit(pos);\n        }\n\n        inline int Ask(int pos) {\n            int res = 0;\n            while(pos)\n                res += t[pos], pos -= lowbit(pos);\n            return res;\n        }\n};\n\nTree_Array T;\n\nclass Node {\n    public:\n        int id, nid, tm;\n        inline friend bool operator < (const Node &a, const Node &b) {\n            if(a.id == b.id)\n                return a.tm > b.tm;\n            else\n                return a.id > b.id;\n        }\n        Node() {}\n        Node(int i, int i1, int t) : id(i), nid(i1), tm(t) {}\n};\n\nclass Node1 {\n    public:\n        int id, nid, tm;\n        inline friend bool operator < (const Node1 &a, const Node1 &b) {\n            if(a.tm == b.tm)\n                return a.id > b.id;\n            else\n                return a.tm > b.tm;\n        }\n        Node1() {}\n        Node1(int i, int i1, int t) : id(i), nid(i1), tm(t) {}\n};\n\nclass Node2 {\n    public:\n        int nid, tm;\n        Node2() {}\n        Node2(int i1, int t) : nid(i1), tm(t) {}\n};\n\npriority_queue <Node> Q1;\npriority_queue <Node1> Q2;\n\ndeque <Node2> v[maxn];\n\ninline void init() {\n    tot = 0;\n    memset(vis, 0, sizeof(vis));\n    while(!Q1.empty())\n        Q1.pop();\n    while(!Q2.empty())\n        Q2.pop();\n    for(int i = 1; i < maxn; ++i)\n    \twhile(!v[i].empty())\n    \t\tv[i].pop_front();\n    T.init();\n}\nsigned main() {\n    int ss = read();\n    while(ss--) {\n        init();\n        n = read();\n        for(int i = 1; i <= n; ++i)\n            a[i] = read();\n        int Qs = read();\n        for(int i = 1, id; i <= Qs; ++i) {\n            int t = read(), opt = read();\n            while(!Q2.empty() and Q2.top().tm <= t) {\n                Node1 x = Q2.top();\n                Q2.pop();\n                if(vis[x.nid])\n                    continue;\n                Node pp;\n                pp.id = x.id, pp.nid = x.nid, pp.tm = x.tm;\n                Q1.push(pp);\n                T.Add(x.id, 1);\n            }\n\n            if(opt == 0) {\n                id = read();\n                Q2.push(Node1(id, ++tot, a[id] + t));\n                v[id].push_back(Node2(tot, a[id] + t));\n            }\n\n            if(opt == 1) {\n                if(Q1.empty())\n                    puts(\"Yazid is angry.\");\n                else {\n                    Node x;\n                    x.id = -1;\n                    while(!Q1.empty()) {\n                        x = Q1.top();\n                        Q1.pop();\n                        if(vis[x.nid])\n                            continue;\n                        break;\n                    }\n                    if(x.id == -1 or v[x.id].empty() or vis[x.nid])\n                        puts(\"Yazid is angry.\");\n                    else {\n                        T.Add(x.id, -1);\n                        v[x.id].pop_front();\n                        vis[x.nid] = true;\n                        printf(\"%d\\n\", x.id);\n                    }\n                }\n            }\n\n            if(opt == 2) {\n                id = read();\n                if(v[id].empty())\n                    puts(\"YJQQQAQ is angry.\");\n                else {\n                    deque <Node2> :: iterator it = v[id].begin();\n                    Node2 x = *it;\n                    if(x.tm > t)\n                        printf(\"%d\\n\", x.tm - t);\n                    else {\n                        vis[x.nid] = true;\n                        T.Add(id, -1);\n                        v[id].pop_front();\n                        puts(\"Succeeded!\");\n                    }\n                }\n            }\n\n            if(opt == 3) {\n                int l = read(), r = read();\n                printf(\"%d\\n\", T.Ask(r) - T.Ask(l - 1));\n            }\n        }\n    }\n\n\tinit();\n\n    #ifndef ONLINE_JUDGE\n        getchar();\n    #endif\n    return 0;\n}\n```\n\n",
        "postTime": 1628586703,
        "uid": 383204,
        "name": "Areka6219",
        "ccfLevel": 0,
        "title": "P4032 solution"
    },
    {
        "content": "\u6b64\u9898\u53ef\u4ee5$\\Large\\text{\u7ebf\u6bb5\u6811+\u4f18\u5148\u961f\u5217}$\u89e3\u51b3\u3002\n\n\u9996\u5148\u770b\u7b2c\u4e00\u95ee\uff0c\u6211\u4eec\u8003\u8651\u5f00\u4e09\u4e2a\u4f18\u5148\u961f\u5217\uff1a\n\n* $\\sf {q1[i]}$\uff0c\u7528\u4e8e\u5b58\u50a8\u98df\u7269$\\sf i$\u7684\u6210\u719f\u65f6\u95f4\n\n* $\\sf {q2[i]}$\uff0c\u7528\u4e8e\u5b58\u50a8\u6210\u719f\u65f6\u95f4\u5c0f\u4e8e$\\sf i$\u7684\u98df\u7269\n\n* \u5bf9\u6bcf\u4e2a\u98df\u7269\u5f00\u4e00\u4e2a$\\sf {e[i]}$\uff0c\u7528\u4e8e\u5b58\u50a8\u5176\u6210\u719f\u65f6\u95f4\n\n\u63a5\u4e0b\u6765\u628a\u7ebf\u6bb5\u6811\u7f16\u53f7\u4e3ai\u7684\u4f4d\u7f6e\u81ea\u589e1\u5c31\u597d\u3002\n\n\u7b2c\u4e8c\u95ee\uff0c\u6309\u7167\u7f16\u53f7\u6700\u5c0f\u7684\u987a\u5e8f\u627e\u6210\u719f\u98df\u54c1\uff0c\u8fd9\u65f6\u5019\u53d6\u51fa$\\sf {q2[i]}$\u4f7f\u7528\u5373\u53ef\uff0c\u4fee\u6539\u66f4\u65b0\u7ebf\u6bb5\u6811\u3002\n\n\u7b2c\u4e09\u95ee\uff0c\u67e5\u627e\u6307\u5b9a\u7f16\u53f7\u98df\u7269\uff0c\u76f4\u63a5\u67e5\u627e$\\sf {e[i]}$\uff0c\u4e0d\u6210\u719f\u8f93\u51fa\u8ddd\u79bb\u6210\u719f\u7684\u65f6\u95f4\uff0c\u5373$\\sf \\text{e[i]-\u5f53\u524d\u65f6\u95f4}$\u3002\n\n\u7b2c\u56db\u95ee\uff0c\u67e5\u8be2\u533a\u95f4\u5185\u6210\u719f\u98df\u7269\u4e2a\u6570\uff0c\u7528\u7ebf\u6bb5\u6811\u7edf\u8ba1\u5373\u53ef\uff0c\u4e0a\u9762\u6bcf\u6b21\u53d6\u51fa\u64cd\u4f5c\u65f6\u5df2\u7ecf\u66f4\u65b0\u8fc7\uff0c\u76f4\u63a5\u627e\u5c31\u884c\u4e86\u3002\n\n\u4e0a\u4ee3\u7801(\u9644\u6ce8\u91ca)\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\nusing namespace std;\nint read()\n{\n\tint num=0;\n\tint flg=1;\n\tchar c=getchar();\n\twhile(!isdigit(c))\n\t{\n\t\tif(c=='-')\n\t\t{\n\t\t\tflg=-1;\n\t\t}\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\n\t{\n\t\tnum=(num<<1)+(num<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn num*flg;\n}\nint seg[400002];//\u7ebf\u6bb5\u6811\nint n,qst;//\u98df\u6750\u4e2a\u6570\uff0c\u8be2\u95ee\u6b21\u6570\nint s[100005];//\u98df\u6750\u6210\u719f\u6240\u9700\u65f6\u95f4\nint rest[100005];\n\npriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > >q1;\npriority_queue<int,vector<int>,greater<int> >q2,e[100005];\n//q1,q2,e\nvoid modify(int nd,int l,int r,int x,int y)\n{\n\tseg[nd]+=y;\n\tif(l==r)\n\t{\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x<=mid)\n\t{\n\t\tmodify(ls(nd),l,mid,x,y);\n\t}\n\telse\n\t{\n\t\tmodify(rs(nd),mid+1,r,x,y);\n\t}\n}//\u7ebf\u6bb5\u6811\u4fee\u6539\nint query(int nd,int l,int r,int x,int y)\n{\n\tif(l==x&&r==y)\n\t{\n\t\treturn seg[nd];\n\t}\n\tint mid=(l+r)>>1;\n\tif(y<=mid)\n\t{\n\t\treturn query(ls(nd),l,mid,x,y);\n\t}\n\telse if(x>mid)\n\t{\n\t\treturn query(rs(nd),mid+1,r,x,y);\n\t}\n\telse\n\t{\n\t\treturn query(ls(nd),l,mid,x,mid)+query(rs(nd),mid+1,r,mid+1,y);\n\t}\n}//\u7ebf\u6bb5\u6811\u6c42\u548c\nvoid solve()\n{\n\tn=read();\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\ts[i]=read();\n\t}\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\trest[i]=0;\n\t}\n\tfor (int i=1; i<=400001; i++)\n\t{\n\t\tseg[i]=0;\n\t}\n\twhile (!q1.empty())\n\t{\n\t\tq1.pop();\n\t}\n\twhile (!q2.empty())\n\t{\n\t\tq2.pop();\n\t}\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\twhile (!e[i].empty())\n\t\t{\n\t\t\te[i].pop();\n\t\t}\n\t}//\u9f9f\u901f\u6e05\u7a7a\n\tqst=read();\n\twhile (qst--)\n\t{\n\t\tint tim=read(),op=read();\n\t\twhile (!q1.empty()&&q1.top().first<=tim)\n\t\t{\n\t\t\tq2.push(q1.top().second);\n\t\t\tmodify(1,1,n,q1.top().second,1);\n\t\t\tq1.pop();\n\t\t}\n\t\tif(op==0)\n\t\t{\n\t\t\tint u=read();\n\t\t\tq1.push(make_pair(tim+s[u],u));\n\t\t\te[u].push(tim+s[u]);\n\t\t}//\u95ee1\n\t\telse if(op==1)\n\t\t{\n\t\t\twhile (!q2.empty()&&rest[q2.top()])\n\t\t\t{\n\t\t\t\trest[q2.top()]--;\n\t\t\t\tq2.pop();\n\t\t\t}\n\t\t\tif(q2.empty())\n\t\t\t{\n\t\t\t\tprintf(\"Yazid is angry.\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",q2.top());\n\t\t\t\tmodify(1,1,n,q2.top(),-1);\n\t\t\t\te[q2.top()].pop();\n\t\t\t\tq2.pop();\n\t\t\t}\n\t\t}//\u95ee2\n\t\telse if(op==2)\n\t\t{\n\t\t\tint u=read();\n\t\t\tif(e[u].empty())\n\t\t\t{\n\t\t\t\tprintf(\"YJQQQAQ is angry.\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(e[u].top()<=tim)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"Succeeded!\\n\");\n\t\t\t\t\tmodify(1,1,n,u,-1);\n\t\t\t\t\trest[u]++;\n\t\t\t\t\te[u].pop();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d\\n\",e[u].top()-tim);\n\t\t\t\t}\n\t\t\t}\n\t\t}//\u95ee3\n\t\telse\n\t\t{\n\t\t\tint l=read();\n\t\t\tint r=read();\n\t\t\tprintf(\"%d\\n\",query(1,1,n,l,r));\n\t\t}//\u95ee4\n\t}\n}\nint main()\n{\n\tint first_fan=read();\n\twhile (first_fan--)\n\t{\n\t\tsolve();//\u591a\u7ec4\u6570\u636e\n\t}\n}\n```\n\n\u8fd8\u6709\u4e00\u4ef6\u4e8b\uff1a\u8fd9\u9898\u65f6\u95f4\u5361\u5f97\u677e\uff0c\u7a7a\u95f4\u5361\u5f97\u7d27\uff0c\u6240\u4ee5\u5f00\u6570\u7ec4\u4e0d\u8981\u592a\u8c6a\u8fc8\u4e86\u2026\u2026",
        "postTime": 1556938954,
        "uid": 126484,
        "name": "first_fan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4032 \u3010[Code+#2]\u706b\u9505\u76db\u5bb4\u3011"
    },
    {
        "content": "\u65e0\u8bed\u4e86\uff0c\u770b\u5230\u8eab\u8fb9\u7684\u5946\u4f6c\u4e00\u4e2a\u4e2a\u7528SPLAY\u505a\uff0c\u6211\u4e00\u4e2a\u5c0f\u849f\u84bb\u53ea\u4f1a\u6253\u6253\u66b4\u529b\u4e86\uff0c\u53ef\u662f\u4e0d\u77e5\u9053\u662f\u6570\u636e\u592a\u6c34\u8fd8\u662f\u548b\u6ef4\uff0c\u5c31\u8fd9\u4e48\u8fc7\u6389\u4e86= =\uff0c\u6211\u4e5f\u7b97\u662f\u9189\u4e86\uff0c\u800c\u4e14\u8dd1\u5f97\u98de\u5feb\u3002\u3002\u3002\n\u8bf4\u4e00\u4e0b\u505a\u6cd5\u5427\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u98df\u7269\u5f00\u4e2aPQ\uff0c\u7136\u540e\u6240\u6709\u98df\u7269\u4e00\u8d77\u5f00\u4e2aPQ\uff0c\u4f46\u662f\u6240\u6709\u98df\u7269\u7684PQ\u4e0d\u4ec5\u5b58\u7740\u719f\u7684\u65f6\u95f4\u8fd8\u5b58\u7740\u90a3\u4e2a\u719f\u4e86\uff0c\u7136\u540e\u6bcf\u6b21\u64cd\u4f5c\u5c31\u5148\u628a\u5927\u7684PQ\u4e2d\u719f\u7684\u98df\u7269\u7ed9T\u6389\uff0c\u540c\u65f6\u628a\u90a3\u79cd\u98df\u7269\u7684PQ\u4e5fT\u6389\uff0c\u7136\u540e\u63d2\u5230\u6811\u72b6\u6570\u7ec4\u91cc\u9762\u3002\n\u5bf9\u4e8e\u64cd\u4f5c0\uff0c\u5411\u4e24\u4e2aPQ\u91cc\u9762\u63d2\u5165\u5143\u7d20\u5373\u53ef\uff1b\n\u5bf9\u4e8e\u64cd\u4f5c1\uff0c\u5728\u6811\u72b6\u6570\u7ec4\u91cc\u9762\u627e\u5c31\u597d\u4e86\uff1b\n\u5bf9\u4e8e\u64cd\u4f5c2\uff0c\u5728\u5c0f\u7684PQ\u91cc\u9762\u627e\u5c31\u597d\u4e86\uff1b\n\u5bf9\u4e8e\u64cd\u4f5c3\uff0c\u5728\u6811\u72b6\u6570\u7ec4\u91cc\u627e\u5c31\u597d\u4e86\uff1b\n\u5207\u8bb0\uff0c\u6bcf\u6b21\u64cd\u4f5c\u90fd\u8981\u66f4\u65b0PQ\u4f7f\u6240\u6709PQ\u91cc\u9762\u7684\u98df\u7269\u90fd\u662f\u6ca1\u719f\u7684\uff0c\u540c\u65f6\u66f4\u65b0\u6811\u72b6\u6570\u7ec4\uff0c\u4f7f\u6240\u6709\u719f\u4e86\u7684\u98df\u7269\u90fd\u5728\u6811\u72b6\u6570\u7ec4\u91cc\u9762\uff0c\u8fd9\u6837\u5c31\u641e\u597d\u4e86\u3002\u3002\u3002\n\u770b\u770b\u4ed6\u4eec\u90a3\u4e9b6k+\u7684\u4ee3\u7801\uff0c\u5c0f\u849f\u84bb\u5728\u5bd2\u98ce\u4e2d\u745f\u745f\u53d1\u6296\u3001\u3001\u3001\n```cpp\n#include<bits/stdc++.h>\n#define maxn 100005\n#define inf 1000000\n#define lb(x) x&-x\nusing namespace std;\nint n,q,t,id,l,r,op,tim[maxn],shu[maxn];\nint f[maxn];\nint read()\n{\n\tint lin = 0;\n\tchar x = getchar();\n\twhile(x < '0' || x > '9') x = getchar();\n\twhile(x >= '0' && x <= '9')\n\t{\n\t\tlin = lin * 10 + x - '0';\n\t\tx = getchar();\n\t}\n\treturn lin;\n}\nvoid update(int pos,int val)\n{\n\twhile(pos < maxn)\n\t{\n\t\tf[pos] += val;\n\t\tpos += lb(pos);\n\t}\n}\nint get(int pos)\n{\n\tint ans = 0;\n\twhile(pos)\n\t{\n\t\tans += f[pos];\n\t\tpos -= lb(pos);\n\t}\n\treturn ans;\n}\npriority_queue <pair<int,int>, vector<pair<int, int> >, greater<pair<int, int> > > que;\npriority_queue <int, vector<int>, greater<int> > s[maxn],shou;\nint main(){\n\tint tt;\n\tcin >> tt;\n\twhile(tt--)\n\t{\n\t\tmemset(f,0,sizeof(f));\n\t\tmemset(shu,0,sizeof(shu));\n\t\tn = read();\n\t\tfor(int i = 1; i <= n; i++) tim[i] = read();\n\t\twhile(que.size()) que.pop();\n\t\twhile(shou.size()) shou.pop();\n\t\tfor(int i = 0; i <= n; i++)\n\t\t\twhile(s[i].size())\n\t\t\t\ts[i].pop();\n\t\tq = read();\n//\t\tprintf(\"+++++++++++++++++++++\\n%d\\n++++++++++++++++++++++\\n\",q);\n\t\twhile(q)\n\t\t{\n\t\t\tq--;\n//\t\tprintf(\"+++++++++++++++++++++\\n%d\\n++++++++++++++++++++++\\n\",q);\n\t\t\tt = read();\n\t\t\top = read();\n\t\t\tif(op == 0)\n\t\t\t{\n\t\t\t\tid = read();\n\t\t\t\ts[id].push(t + tim[id]);\n\t\t\t\tque.push(make_pair(t + tim[id],id));\n\t\t\t}\n\t\t\tif(op == 1)\n\t\t\t{\n\t\t\t\twhile(que.size() && que.top().first <= t)\n\t\t\t\t{\n\t\t\t\t\tshou.push(que.top().second);\n\t\t\t\t\tshu[que.top().second]++;\n\t\t\t\t\tupdate(que.top().second,1);\n\t\t\t\t\ts[que.top().second].pop();\n\t\t\t\t\tque.pop();\n\t\t\t\t}\n\t\t\t\tif(!get(maxn - 1)) \tprintf(\"Yazid is angry.\\n\");\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twhile(!shu[shou.top()]) shou.pop();\n\t\t\t\t\tint ans = shou.top();\n\t\t\t\t\tshou.pop();\n\t\t\t\t\tshu[ans]--;\n\t\t\t\t\tupdate(ans,-1);\n\t\t\t\t\tprintf(\"%d\\n\",ans);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(op == 2)\n\t\t\t{\n\t\t\t\twhile(que.size() && que.top().first <= t)\n\t\t\t\t{\n\t\t\t\t\tshou.push(que.top().second);\n\t\t\t\t\tupdate(que.top().second,1);\n\t\t\t\t\ts[que.top().second].pop();\n\t\t\t\t\tshu[que.top().second]++;\n\t\t\t\t\tque.pop();\n\t\t\t\t}\n\t\t\t\tid = read();\n\t\t\t\tif(!shu[id])\n\t\t\t\t{\n\t\t\t\t\tif(s[id].size())\n\t\t\t\t\t{\n\t\t\t\t\t\tprintf(\"%d\\n\",s[id].top() - t);\n\t\t\t\t\t}\n\t\t\t\t\telse printf(\"YJQQQAQ is angry.\\n\");\n\t\t\t\t}\n\t\t\t\telse if(shu[id])\n\t\t\t\t{\n\t\t\t\t\t--shu[id];\n\t\t\t\t\tprintf(\"Succeeded!\\n\");\n\t\t\t\t\tupdate(id,-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(op == 3)\n\t\t\t{\n\t\t\t\tl = read();\n\t\t\t\tr = read();\n\t\t\t\twhile(que.size() && que.top().first <= t)\n\t\t\t\t{\t\t\n\t\t\t\t\tshou.push(que.top().second);\n\t\t\t\t\tshu[que.top().second]++;\n\t\t\t\t\tupdate(que.top().second,1);\n\t\t\t\t\ts[que.top().second].pop();\n\t\t\t\t\tque.pop();\n\t\t\t\t}\n\t\t\t\tint ans = get(r) - get(l - 1);\n\t\t\t\tprintf(\"%d\\n\",ans);\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1519889013,
        "uid": 48421,
        "name": "cc123321",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4032 \u3010\u300cCodePlus 2017 12 \u6708\u8d5b\u300d\u706b\u9505\u76db\u5bb4\u3011"
    },
    {
        "content": "\u4e22\u4e00\u4e0b[\u535a\u5ba2](https://www.zgz233.xyz/2017/12/26/bzoj-5132-codeplus2017%E5%B9%B412%E6%9C%88%E7%81%AB%E9%94%85%E7%9B%9B%E5%AE%B4/ \"\u535a\u5ba2\")\u94fe\n\n\u8003\u8651\u5206\u522b\u7ef4\u62a4\u719f\u4e86\u7684\u548c\u6ca1\u719f\u7684\u98df\u7269\uff0c\u5bf9\u4e8e\u719f\u4e86\u7684\uff0c\u7528\u4e00\u4e2a\u8d44\u8bcd\u4e8c\u5206\u548c\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6c42\u548c\u7684\u6570\u636e\u7ed3\u6784\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u96c5\u7684\u5b9e\u73b0\uff0c\u8be6\u89c1\u4ee3\u7801\uff0c\u4e00\u770b\u5c31\u61c2\u4e86\u3002\n\n\u5bf9\u4e8e\u6ca1\u719f\u7684\uff0c\u7528\u4e00\u4e2a\u5806\u8f7b\u6613\u4e00\u8d77\u7ef4\u62a4\u6389\uff0c\u6bcf\u6b21\u7f6e\u5165\u719f\u4e86\u7684\u76f4\u5230\u65f6\u95f4\u8d76\u4e0a\u5f53\u524d\u65f6\u95f4\u4f4d\u7f6e\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\u67d0\u79cd\u98df\u7269\u6700\u63a5\u8fd1\u719f\u7684\u64cd\u4f5c\uff0c\u6734\u7d20\u7684\u60f3\u6cd5\u7528\u4e00\u68f5\u5e73\u8861\u6811\u5373\u53ef\u3002\n\n\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\u5220\u9664\u64cd\u4f5c\u53ea\u6709\u6700\u503c\u5220\u9664\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u7528\u5806\u7ef4\u62a4\uff0c\u8fd9\u6837\u7684\u8bdd\u5185\u5916\u6570\u636e\u7ed3\u6784\u5e38\u6570\u90fd\u5f88\u5c0f\uff0c\u8dd1\u7684\u98de\u8d77\u3002\n\n```cpp\n    #include <cmath>\n    #include <queue>\n    #include <cstdio>\n    #include <iomanip>\n    #include <cstdlib>\n    #include <cstring>\n    #include <iostream>\n    #include <algorithm>\n    #define N 100010\n    #define M 500010\n    #define ll long long\n    using namespace std;\n    char xB[1<<15],*xS=xB,*xT=xB;\n    #define getchar() (xS==xT&&(xT=(xS=xB)+fread(xB,1,1<<15,stdin),xS==xT)?0:*xS++)\n    inline int read()\n    {\n        int x=0,f=1;char ch=getchar();\n        while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n        while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n        return x*f;\n    }\n    int n,m;\n    int bin[17];\n```\nnamespace bit\n\n```cpp\n    {\n        int c[N];\n        void clear()\n        {memset(c,0,sizeof(c));}\n        void add(int x,int v)\n        {\n            for(;x<=n;x+=x&(-x))\n            c[x]+=v;\n        }\n        int ask(int x)\n        {\n            int ret=0;\n            for(;x;x-=x&(-x))\n            ret+=c[x];\n            return ret;\n        }\n        int upper_bound(int v)\n        {\n            int x=0,sum=0;\n            for(int i=16;i>=0;i--)\n            if(x+bin[i]<=n&&sum+c[bin[i]+x]<=v)sum+=c[x+=bin[i]];\n            return x;\n        }\n    }\n    #define fi first\n    #define se second\n    typedef pair<int,int> pr;//done_time idx\n    priority_queue<int,vector<int>,greater<int> > buc[N];\n    priority_queue<pr,vector<pr>,greater<pr> > q;\n    int s[N];\n    int T;\n    int main()\n    {\n        T=read();bin[0]=1;\n        for(int i=1;i<=16;i++)bin[i]=bin[i-1]<<1;\n        while(T--)\n        {\n            n=read();\n            for(int i=1;i<=n;i++)s[i]=read();\n            m=read();\n            while(m--)\n            {\n                int tim=read(),opt=read();\n                while(!q.empty()&&q.top().fi<=tim)\n                {\n                    buc[q.top().se].pop();\n                    bit::add(q.top().se,1);\n                    q.pop();\n                }\n                if(opt==0)\n                {\n                    int x=read();\n                    q.push(make_pair(tim+s[x],x));\n                    buc[x].push(tim);\n                }\n                else if(opt==1)\n                {\n                    int idx=bit::upper_bound(0);\n                    if(idx==n)puts(\"Yazid is angry.\");\n                    else printf(\"%d\\n\",idx+1),bit::add(idx+1,-1);\n                }\n                else if(opt==2)\n                {\n                    int idx=read();\n                    int sum=bit::ask(idx)-bit::ask(idx-1);\n                    if(sum)bit::add(idx,-1),puts(\"Succeeded!\");\n                    else if(!buc[idx].empty())printf(\"%d\\n\",s[idx]-(tim-buc[idx].top()));\n                    else puts(\"YJQQQAQ is angry.\");\n                }\n                else\n                {\n                    int L=read(),R=read();\n                    printf(\"%d\\n\",bit::ask(R)-bit::ask(L-1));\n                }\n            }\n            while(!q.empty())q.pop();\n            for(int i=1;i<=n;i++)\n            while(!buc[i].empty())buc[i].pop();\n            bit::clear();\n        }\n    }\n\n```",
        "postTime": 1515765088,
        "uid": 30459,
        "name": "\u6d88\u5931\u7684\u6d77\u5cb8\u7ebf",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4032 \u3010\u300cCodePlus 2017 12 \u6708\u8d5b\u300d\u706b\u9505\u76db\u5bb4\u3011"
    },
    {
        "content": "# \u89e3\u9898\u601d\u8def\n\u8fd9\u9898\u4e00\u5171\u4e09\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u4ece\u6700\u7b80\u5355\u7684\u7b2c\u4e09\u4e2a\u8be2\u95ee\u5f00\u59cb\u5206\u6790\n## \u7b2c\u4e09\u4e2a\u8be2\u95ee\n\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\uff08\u6811\u72b6\u6570\u7ec4\uff09\u6765\u7ef4\u62a4\u6240\u6709\u5df2\u7ecf\u719f\u7684\u98df\u7269\uff0c**\u6bcf\u6b21\u8be2\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08logn\uff09**\n## \u7b2c\u4e00\u4e2a\u8be2\u95ee\n\u7531\u4e8e\u6211\u4eec\u5728\u505a\u7b2c\u4e09\u95ee\u65f6\u5efa\u7acb\u4e00\u9897\u7ebf\u6bb5\u6811\uff08\u6811\u72b6\u6570\u7ec4\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\uff1a\n\u82e5\u6574\u4e2a\u533a\u95f4\u7684\u548c\u4e3a0\uff0c\u5219\u6ca1\u6709\u98df\u7269\u3002\n\u82e5\u6709\u98df\u7269\uff0c\u5219\uff1a\n\u7528\u4e8c\u5206\u6765\u627e\u51fa\u6709\u503c\u4f46\u6700\u5c0f\u7684\u70b9\uff08\u5de6\u53f3\u7aef\u70b9\u76f8\u540c\u7684\u533a\u95f4\uff09\uff0c\u8be5\u70b9\u5c31\u662f\u6240\u6c42\u7684\u98df\u7269\u7f16\u53f7\uff0c\u6bcf\u6b21\u8be2\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08\uff08logn\uff09^2\uff09\uff0c\u7136\u540e\u5c06\u8be5\u70b9\u51cf\u4e00,\u590d\u6742\u5ea6O(1)\uff0c\u6240\u4ee5\uff0c**\u8fd9\u6b65\u603b\u7684\u590d\u6742\u5ea6\u4e3aO\uff08\uff08logn\uff09^2\uff09**\n## \u7b2c\u4e8c\u4e2a\u8be2\u95ee\n\u6211\u4eec\u7ed9\u6bcf\u4e00\u4e2a\u98df\u7269\u5efa\u4e00\u4e2a\u961f\u5217\uff08\u56e0\u4e3a\u540c\u4e00\u79cd\u98df\u7269\u716e\u719f\u82b1\u7684\u65f6\u95f4\u76f8\u540c\uff0c\u6240\u4ee5\u8d8a\u665a\u5165\u961f\uff0c\u716e\u719f\u7684\u65f6\u95f4\u5c31\u8d8a\u665a\uff09\uff0c\u6bcf\u6b21\u8be2\u95ee\u65f6\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u6ca1\u6709\u98df\u7269\uff0c\u5982\u679c\u961f\u5217\u6700\u524d\u9762\u7684\u5143\u7d20\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\uff0c\u5219\u6210\u529f\uff0c\u5426\u5219\uff0c\u5219\u7528\u961f\u5217\u6700\u524d\u9762\u7684\u5143\u7d20\u51cf\u53bb\u5f53\u524d\u65f6\u95f4\uff0c\u5373\u4e3a\u8fd8\u9700\u7b49\u5f85\u7684\u65f6\u95f4\uff0c\u590d\u6742\u5ea6O(1)\n## \u4e00\u4e8c\u95ee\u76f8\u4e92\u5f71\u54cd\u95ee\u9898\n\u7531\u4e8e\u62ff\u8d70\u98df\u7269\u5bf9\u4e00\u4e8c\u95ee\u90fd\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u7b2c\u4e00\u95ee\u5220\u9664\u65f6\uff0c\u8981\u628a\u7528\u4e8e\u7b2c\u4e8c\u95ee\u7684\u961f\u5217\u5143\u7d20\u51fa\u961f\uff0c\u540c\u6837\uff0c\u5728\u7b2c\u4e8c\u95ee\u5220\u9664\u65f6\uff0c\u8981\u628a\u7528\u4e8e\u7b2c\u4e00\u4e09\u95ee\u7684\u7ebf\u6bb5\u6811\u66f4\u65b0\uff0c**\u6240\u4ee5\u7b2c\u4e8c\u95ee\u7684\u590d\u6742\u5ea6\u53d8\u4e3aO(logn)**\n## \u52a0\u5165\u65b0\u7684\u98df\u7269\u6240\u9700\u7684\u64cd\u4f5c\n\u6bcf\u6b21\u52a0\u5165\u65b0\u7684\u98df\u7269\uff0c\u6211\u4eec\u5c06\u8be5\u98df\u7269\u716e\u719f\u7684\u65f6\u95f4\u52a0\u5165\u8be5\u98df\u7269\u7684\u961f\u5217\u4e2d\uff0c**\u6ce8\u610f\uff1a\u4e0d\u8981\u66f4\u65b0\u7ebf\u6bb5\u6811\uff0c\u53ea\u6709\u98df\u7269\u716e\u719f\u65f6\u624d\u66f4\u65b0\u7ebf\u6bb5\u6811**\n## \u5728\u6bcf\u4e00\u6b65\u4e4b\u524d\u7684\u64cd\u4f5c\n\u6839\u636e\u73b0\u5728\u7684\u65f6\u95f4\uff0c\u628a\u6240\u6709\u5df2\u7ecf\u716e\u719f\u7684\u98df\u7269\u52a0\u5165\u5bf9\u5e94\u7684\u961f\u5217\u548c\u7ebf\u6bb5\u6811\u4e2d\n# \u6ce8\u610f\u4e8b\u9879\n\u6ce8\u610f\u6e05\u7a7a\u6570\u636e\uff0c\u9632\u6b62\u5f71\u54cd\u5230\u4e0b\u4e00\u7ec4\u6570\u636e\uff01\uff01\uff01\n# \u4ee3\u7801\u5b9e\u73b0\n\n```\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<vector>\n#include<cstdio>\nusing namespace std;\nint n;\nconst int mx=101010;\ninline int Read(){\n\tint x=0;\n\tchar c=getchar();\n\twhile(c>'9'||c<'0')c=getchar();\n\twhile(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n\treturn x;\n}\nqueue<int>food[mx];\nint q_num;//\u8be2\u95ee\u603b\u6570 \nint cost[mx];//\u6bcf\u79cd\u98df\u7269\u9700\u8981\u7684\u65f6\u95f4 \n#define lowbit(i) i&-i\nint tree[mx];\nvoid change(int pos,int k){//pos\u4f4d\u7f6e+k \n\twhile(pos<=n){\n\t\ttree[pos]+=k;\n\t\tpos+=lowbit(pos);\n\t}\n}\nint query(int pos){//\u67e5\u8be2\u5230pos\u4e3a\u6b62\u6709\u591a\u5c11\u4e2a\u98df\u7269 \n\tint ans=0;\n\twhile(pos>=1){\n\t\tans+=tree[pos];\n\t\tpos-=lowbit(pos);\n\t}\n\treturn ans;\n}\nstruct FOOD{//\u98df\u7269 \n\tint t;//\u716e\u719f\u65f6\u95f4 \n\tint pos;//\u98df\u7269\u7f16\u53f7\n}; \nstruct cmp1{\n\tbool operator () (const FOOD &a,const FOOD &b)const{\n\t\treturn a.t>b.t;//\u6309\u7167\u7ed3\u675f\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392 \n\t}\n};\npriority_queue<FOOD,vector<FOOD>,cmp1>f1;//\u98df\u7269\nvoid query_1(){//\u7b2c\u4e00\u4e2a\u95ee\u9898\uff1a\u62ff\u51fa\u7f16\u53f7\u6700\u5c0f\u7684\u98df\u7269 \n\tif(!query(n)){//\u6ca1\u6709\u4efb\u4f55\u98df\u7269 \n\t\tprintf(\"Yazid is angry.\\n\");\n\t\treturn;\n\t}\n\tint l=1,r=n,mid=(l+r)>>1;\n\twhile(l<r){\n\t\tif(query(mid)-query(l-1))r=mid;\n\t\telse l=mid+1;\n\t\tmid=(l+r)>>1;\n\t}\n\tprintf(\"%d\\n\",mid);\n\tfood[mid].pop();//\u98df\u7269\u51fa\u5806 \n\tchange(mid,-1);\n\treturn;\n}\nvoid query_2(int pos,int t){//\u7b2c\u4e8c\u95ee\uff0cpos\u98df\u7269\u662f\u5426\u6709\u719f\u7684\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u6700\u5feb\u719f\u7684\u8fd8\u8981\u591a\u4e45 \n\tif(food[pos].empty()){//\u6ca1\u6709\u8be5\u98df\u7269 \n\t\tprintf(\"YJQQQAQ is angry.\\n\");\n\t\treturn;\n\t}\n\tint tp=food[pos].front();\n\tif(tp<=t){//\u719f\u4e86 \n\t\tprintf(\"Succeeded!\\n\");\n\t\tfood[pos].pop();//\u4ece\u5806\u4e2d\u5220\u9664\u8be5\u98df\u7269 \n\t\tchange(pos,-1);//\u4ece\u6811\u72b6\u6570\u7ec4\u4e2d\u5220\u9664\u8be5\u98df\u7269 \n\t\treturn;\n\t}\n\telse{\n\t\tprintf(\"%d\\n\",tp-t);\n\t\treturn;\n\t}\n}\nvoid query_3(int l,int r){//\u7b2c\u4e09\u4e2a\u95ee\u9898\uff1a\u67e5\u8be2[l,r]\u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u98df\u7269 \n\tprintf(\"%d\\n\",query(r)-query(l-1));\n\treturn;\n}\nint main(){\n\tint T=Read();\n\twhile(T--){\n\t\tq_num=0;\n\t\tn=Read();\n\t\tfor(int i=1;i<=n;++i)cost[i]=Read();\n\t\tint num=Read();\n\t\tfor(int i=1;i<=num;++i){\n\t\t\tint t=Read();\n\t\t\tint opt=Read();\n\t\t\tif(!f1.empty()){\n\t\t\t\tFOOD tp=f1.top();\n\t\t\t\twhile(tp.t<=t){\n\t\t\t\t\tf1.pop();\n\t\t\t\t\tchange(tp.pos,1);\n\t\t\t\t\tif(f1.empty())break;\n\t\t\t\t\ttp=f1.top();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(opt==0){\n\t\t\t\tint pos=Read();\n\t\t\t\tFOOD a;\n\t\t\t\ta.pos=pos;\n\t\t\t\ta.t=t+cost[pos];\n\t\t\t\tf1.push(a);\n\t\t\t\tfood[pos].push(t+cost[pos]);\n\t\t\t}\n\t\t\telse if(opt==1){\n\t\t\t\tquery_1();\n\t\t\t}\n\t\t\telse if(opt==2){\n\t\t\t\tint pos=Read();\n\t\t\t\tquery_2(pos,t);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tint l=Read(),r=Read();\n\t\t\t\tquery_3(l,r);\n\t\t\t}\n\t\t}\n\t\t//\u6e05\u9664\u6570\u636e\uff0c\u4e3a\u4e0b\u4e00\u7ec4\u6570\u636e\u505a\u51c6\u5907 \n\t\tmemset(tree,0,sizeof(tree));\n\t\twhile(!f1.empty())f1.pop();\n\t\tfor(int i=1;i<=n;i++)while(!food[i].empty())food[i].pop();//\u6e05\u7a7a\u961f\u5217\n\t}\n\treturn 0;\n} \n```\n\n\u56e0\u4e3a\u592a\u61d2\u6240\u4ee5\u7528\u4e86\u4f18\u5148\u961f\u5217\u548c\u6811\u72b6\u6570\u7ec4\uff0c\u4f60\u4eec\u53ef\u4ee5\u7528\u624b\u5199\u5806\u548c\u7ebf\u6bb5\u6811",
        "postTime": 1604042724,
        "uid": 28088,
        "name": "\u94b1\u9038\u51e1",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4032 \u3010[Code+#2]\u706b\u9505\u76db\u5bb4\u3011"
    },
    {
        "content": "\u79bb\u7ebf\u8bfb\u5165\u64cd\u4f5c\uff0c\u6309\u65f6\u95f4\u6392\u5e8f\n\n\u5206\u522b\u5f00\u4e24\u4e2asplay\u7ef4\u62a4\u716e\u719f\u7684\uff08T[0]\uff09\u548c\u52a0\u5165\u4f46\u672a\u716e\u719f\u7684\uff08T[1]\uff09\u98df\u7269\uff0c\u5173\u952e\u5b57\u90fd\u4e3at\n\n\u5176\u4e2dT[1]\u8981\u5728\u6bcf\u4e2a\u7ed3\u70b9\u6309\u716e\u719f\u7684\u65f6\u95f4\uff08t+s[i]\uff09\u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806\uff08\u8fd9\u91cc\u76f4\u63a5\u7528stl\u7684\u4f18\u5148\u961f\u5217\uff09\n\n\u64cd\u4f5c0\u53ef\u4ee5\u5206\u89e3\u4e3a\uff1at\u65f6\u523b\u5c06\u98df\u7269\u63d2\u5165T[1]\uff1bt+s[i]\u65f6\u523b\u5c06\u98df\u7269\u4eceT[1]\u5220\u9664,\u5c06\u98df\u7269\u63d2\u5165T[0]\n\n\u64cd\u4f5c1\uff1a\u627eT[0]\u6700\u5c0f\u503c\uff0c\u5220\u9664\uff1b\u82e5T[0]\u7a7a\u5219angry\n\n\u64cd\u4f5c2\uff1a\u627eT[0]\u4e2did\u4e3ak\u7684\u98df\u7269\uff0c\u5220\u9664\uff1b\u4e0d\u5b58\u5728\u65f6\u627eT[1]\u4e2did\u4e3ak\u7684\u7ed3\u70b9\uff0c\u8f93\u51fa\u5806\u9876\u5143\u7d20-\u5f53\u524d\u65f6\u95f4\uff1b\u4e0d\u5b58\u5728\u8be5\u7ed3\u70b9\u5219angry\n\n\u64cd\u4f5c3\uff1asplay\u51faT[0]\u5bf9\u5e94\u533a\u95f4\uff0c\u8fd4\u56desize\n\n\nps1\uff1a\u5199\u4e2asplay\u8c03\u4e86\u534a\u5929\uff0c\u6700\u540e\u53d1\u73b0\u5176\u5b9e\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u3002\u3002\n\nps2\uff1a\u5343\u4e07\u4e0d\u8981\u548c\u6211\u4e00\u6837\u624b\u8d31\u628a\u4f18\u5148\u961f\u5217\u585e\u8fdb\u7ed3\u6784\u4f53\uff0c\u4e24\u4e2a\u6811\u4e00\u8d77\u5f00\uff0c\u5426\u5219\u4f1a\u6709\u5947\u602a\u7684RE\uff08\u4f3c\u4e4e\u662f\u4f18\u5148\u961f\u5217\u6709\u6570\u91cf\u9650\u5236\uff1f\u4e0d\u662f\u5f88\u61c2\uff09\n\nps3\uff1a\u6709\u591a\u7ec4\u6570\u636e\uff0c\u8bb0\u5f97\u521d\u59cb\u5316\uff08\u5305\u62ec\u6e05\u7a7a\u4f18\u5148\u961f\u5217\uff09\n\n\n\u4ee3\u7801\uff1a\n\n\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n```cpp\n    #include <iostream>\n    #include <cstdio>\n    #include <cstring>\n    #include <algorithm>\n    #include <queue>\n    using namespace std;\n    const int maxn=100010;\n    const int maxq=500010;\n    const int INF=0x7fffffff;\n    int dT,n,Q,s[maxn],ans[maxq];\n    inline int read(){\n        int ret=0,sign=1;\n        char ch=getchar();\n        while(ch<'0'||ch>'9') {if(ch=='-') sign=-1; ch=getchar();}\n        while(ch>='0'&&ch<='9') {ret=ret*10+ch-'0'; ch=getchar();}\n        return ret*sign;\n    }\n    int Acnt,Ccnt;\n    struct cmd{\n        int no,t,op,x,y;\n    }A[2][maxq],C[maxq];\n    bool cmp(cmd a,cmd b){return a.t<b.t;}\n    priority_queue <int,vector<int>,greater<int> > pq[maxq];\n    int root[2],Tcnt[2];\n    struct node{\n        int fa,son[2],cnt,size,val;\n        node(){}\n        node(int _fa,int lson,int rson,int _val){fa=_fa,son[0]=lson,son[1]=rson,cnt=size=1,val=_val;}\n    }T[2][maxq];\n    inline int get(int Tn,int u){return T[Tn][T[Tn][u].fa].son[1]==u;}\n    inline void pushup(int Tn,int u){T[Tn][u].size=T[Tn][u].cnt+T[Tn][T[Tn][u].son[0]].size+T[Tn][T[Tn][u].son[1]].size;}\n    inline void rotate(int Tn,int u){\n        int v=T[Tn][u].fa,rela=get(Tn,u);\n        if(T[Tn][v].fa) T[Tn][T[Tn][v].fa].son[get(Tn,v)]=u;\n        T[Tn][u].fa=T[Tn][v].fa;\n        if(T[Tn][u].son[rela^1]) T[Tn][T[Tn][u].son[rela^1]].fa=v;\n        T[Tn][v].son[rela]=T[Tn][u].son[rela^1];\n        T[Tn][u].son[rela^1]=v,T[Tn][v].fa=u;\n        pushup(Tn,v),pushup(Tn,u);\n    }\n    inline void splay(int Tn,int u,int final){\n        while(T[Tn][u].fa!=final){\n            int v=T[Tn][u].fa;\n            if(T[Tn][v].fa!=final) rotate(Tn,get(Tn,u)==get(Tn,v)?v:v);\n            rotate(Tn,u);\n        }\n        if(final==0) root[Tn]=u;\n    }\n    inline void ins(int Tn,int x,int t=0){\n        if(!root[Tn]){\n            T[Tn][++Tcnt[Tn]]=node(0,0,0,x);\n            if(Tn) pq[Tcnt[Tn]].push(t);\n            root[Tn]=Tcnt[Tn];\n            return;\n        }\n        int u=root[Tn],v=0;\n        while(1){\n            if(!u) {T[Tn][++Tcnt[Tn]]=node(v,0,0,x),u=Tcnt[Tn],T[Tn][v].son[x>T[Tn][v].val]=u; break;}\n            else if(x==T[Tn][u].val) {++T[Tn][u].cnt,++T[Tn][u].size; break;}\n            else if(x<T[Tn][u].val) v=u,u=T[Tn][u].son[0];\n            else v=u,u=T[Tn][u].son[1];\n        }\n        if(Tn) pq[u].push(t);\n        splay(Tn,u,0);\n    }\n    inline int find(int Tn,int u,int x,int final){\n        while(1){\n            if(x==T[Tn][u].val) break;\n            else if(x<T[Tn][u].val) u=T[Tn][u].son[0];\n            else u=T[Tn][u].son[1];\n        }\n        splay(Tn,u,final);\n        return u;\n    }\n    inline void del(int Tn,int x,int tar=0){\n        int u;\n        if(tar) splay(Tn,tar,0),u=tar;\n        else u=find(Tn,root[Tn],x,0);\n        if(Tn) pq[u].pop();\n        if(T[Tn][u].cnt>1) --T[Tn][u].cnt,--T[Tn][u].size;\n        else if(!T[Tn][u].son[0]||!T[Tn][u].son[1]){\n            int v=T[Tn][u].son[0]!=0?T[Tn][u].son[0]:T[Tn][u].son[1];\n            T[Tn][v].fa=0,root[Tn]=v;\n        }\n        else{\n            int v=T[Tn][u].son[0];\n            while(T[Tn][v].son[1]) v=T[Tn][v].son[1];\n            splay(Tn,v,0);\n            T[Tn][T[Tn][u].son[1]].fa=v,T[Tn][v].son[1]=T[Tn][u].son[1];\n            pushup(Tn,v);\n        }\n    }\n    inline int query1(){\n        int u,ret;\n        find(0,root[0],0,0),u=find(0,root[0],INF,root[0]),u=T[0][u].son[0];\n        if(!u) return -1;\n        while(T[0][u].son[0]) u=T[0][u].son[0];\n        ret=T[0][u].val;\n        del(0,0,u);\n        return ret;\n    }\n    inline int query2(int x){\n        int u=root[0],fail=0;\n        while(1){\n            if(!u) {fail=1; break;}\n            else if(x==T[0][u].val) break;\n            else if(x<T[0][u].val) u=T[0][u].son[0];\n            else u=T[0][u].son[1];\n        }\n        if(!fail){\n            del(0,0,u);\n            return -2;\n        }\n        u=root[1],fail=0;\n        while(1){\n            if(!u) {fail=1; break;}\n            else if(x==T[1][u].val) break;\n            else if(x<T[1][u].val) u=T[1][u].son[0];\n            else u=T[1][u].son[1];\n        }\n        if(!fail) return pq[u].top();\n        return -3;\n    }\n    inline int pre(int x){\n        int u,ret;\n        ins(0,x);\n        u=T[0][root[0]].son[0];\n        while(T[0][u].son[1]) u=T[0][u].son[1];\n        ret=T[0][u].val;\n        del(0,x);\n        return ret;\n    }\n    inline int nxt(int x){\n        int u,ret;\n        ins(0,x);\n        u=T[0][root[0]].son[1];\n        while(T[0][u].son[0]) u=T[0][u].son[0];\n        ret=T[0][u].val;\n        del(0,x);\n        return ret;\n    }\n    inline int query3(int l,int r){\n        int u;\n        l=pre(l),r=nxt(r);\n        find(0,root[0],l,0),u=find(0,root[0],r,root[0]),u=T[0][u].son[0];\n        return T[0][u].size;\n    }\n    int main(){\n        dT=read();\n        for(int i=1;i<=dT;i++){\n            for(int j=1;j<=Tcnt[1];j++)\n                while(!pq[j].empty()) pq[j].pop();\n            Acnt=Ccnt=0;\n            root[0]=Tcnt[0]=root[1]=Tcnt[1]=0;\n            n=read();\n            for(int j=1;j<=n;j++)\n                s[j]=read();\n            Q=read();\n            int t,op,x,y=0;\n            for(int j=1;j<=Q;j++){\n                t=read(),op=read();\n                if(op==0||op==2) x=read();\n                else if(op==3) x=read(),y=read();\n                if(op==0){\n                    ++Acnt;\n                    A[0][Acnt]=(cmd){Acnt,t,op,x,0};\n                    A[1][Acnt]=(cmd){Acnt,t+s[x],op,x,0};\n                }\n                else C[++Ccnt]=(cmd){Ccnt,t,op,x,y};\n            }\n            sort(A[0]+1,A[0]+Acnt+1,cmp);\n            sort(A[1]+1,A[1]+Acnt+1,cmp);\n            sort(C+1,C+Ccnt+1,cmp);\n            ins(0,0),ins(0,INF);//\u4e3asplay\u533a\u95f4\u64cd\u4f5c\u65b9\u4fbf\u989d\u5916\u52a0\u4e24\u4e2a\u7ed3\u70b9\n            int p0=1,p1=1;\n            for(int j=1;j<=Ccnt;j++){\n                while(A[0][p0].t<=C[j].t&&p0<=Acnt) ins(1,A[0][p0].x,A[0][p0].t+s[A[0][p0].x]),++p0;\n                while(A[1][p1].t<=C[j].t&&p1<=Acnt) del(1,A[1][p1].x),ins(0,A[1][p1].x),++p1;\n                if(C[j].op==1) ans[C[j].no]=query1();\n                else if(C[j].op==2) {ans[C[j].no]=query2(C[j].x); if(ans[C[j].no]>0) ans[C[j].no]-=C[j].t;}\n                else ans[C[j].no]=query3(C[j].x,C[j].y);\n            }\n            for(int j=1;j<=Ccnt;j++){\n                if(ans[j]>=0) printf(\"%d\\n\",ans[j]);\n                else if(ans[j]==-1) printf(\"Yazid is angry.\\n\");\n                else if(ans[j]==-2) printf(\"Succeeded!\\n\");\n                else printf(\"YJQQQAQ is angry.\\n\");\n            }\n        }\n        return 0;\n    }\n\n```",
        "postTime": 1516080839,
        "uid": 32837,
        "name": "hhz6830975",
        "ccfLevel": 0,
        "title": "P4032 \u300cCodePlus 2017 12 \u6708\u8d5b\u300d\u706b\u9505\u76db\u5bb4\uff08splay+\u5806\uff09"
    },
    {
        "content": "### \u6811\u72b6\u6570\u7ec4+\u4f18\u5148\u961f\u5217\n\u6211\u628a\u8be2\u95ee\u4e0e\u64cd\u4f5c\u62c6\u5f00\u6765\u8bb2\u3002\n#### \u64cd\u4f5c\n\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u8fd9\u79cd\u7269\u54c1\u7684\u4e2a\u6570\uff0c\u4f46\u6b64\u65f6\u4e0d\u5e94\u52a0\u4e00\uff0c\u800c\u662f\u5e94\u5728\u67d0\u6b21\u8be2\u95ee\u7684\u65f6\u95f4\u5927\u4e8e\u6b64\u6b21\u98df\u7269\u7684\u716e\u719f\u65f6\u95f4\u65f6\u52a0\u4e00\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5728\u6bcf\u6b21\u8be2\u95ee\u524d\u5904\u7406\u6811\u72b6\u6570\u7ec4\u3002\u540c\u65f6\u6211\u4eec\u628a\u8fd9\u4e2a\u716e\u719f\u7684\u65f6\u95f4\u653e\u8fdb\u4f18\u5148\u961f\u5217\u4e2d\uff0c\u7528\u5c0f\u6839\u5806\uff0c\u4f5c\u7528\u540e\u9762\u8bf4\u3002\n#### \u8be2\u95ee\u4e00\n\u6211\u4eec\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u4e8c\u5206\uff0c\u6b64\u65f6\u7684\u5355\u8c03\u6027\u662f\u4e2a\u6570\u8d8a\u591a\uff0c\u548c\u8d8a\u5927\uff0c\u6211\u4eec\u627e\u5230\u7b2c\u4e00\u4e2a\u548c\u4e0d\u4e3a\u96f6\u7684\u70b9\uff0c\u8fd9\u4e2a\u70b9\u5373\u4e3a\u6700\u4f18\u7684\u70b9\uff0c\u8fd9\u91cc\u6211\u7528\u4e86\u4e00\u79cd\u597d\u5199\u7684\u500d\u589e\uff0c\u6ca1\u7528\u4e8c\u5206\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb\u5b66\u4e60\u8fd9\u79cd\u5199\u6cd5\u3002\n#### \u8be2\u95ee\u4e8c\n\u6211\u4eec\u7528\u4f18\u5148\u961f\u5217\u6765\u8bbf\u95ee\uff0c\u5982\u679c $id$ \u5bf9\u5e94\u7684\u4f18\u5148\u961f\u5217\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u4e3a\u96f6\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa\u5806\u9876\u3002\u5426\u5219\u53d6\u51fa\u5806\u9876\uff0c\u8f93\u51fa\u6b64\u65f6\u7684\u65f6\u95f4\u4e0e\u5806\u9876\u7684\u5dee\uff0c\u56e0\u4e3a\u6211\u4eec\u7528\u7684\u662f\u5c0f\u6839\u5806\uff0c\u53d6\u51fa\u7684\u521a\u597d\u662f\u9505\u5185\u5b58\u5728\u65f6\u95f4\u6700\u957f\u7684\u98df\u7269\u3002\n#### \u8be2\u95ee\u4e09\n\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint t,n,a[100001],v[100001],m,c[100001][2];\npriority_queue<int,vector<int>,greater<int> >q[100001];\npriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > >z;\nvoid add(int x,int k)\n{\n\tfor(int i=x;i<=n;i+=i&-i)\n\t\ta[i]+=k;\n}\nint find(int x)\n{\n\tint ans=0;\n\tfor(int i=x;i;i-=i&-i)\n\t\tans+=a[i];\n\treturn ans;\n}\nsigned main()\n{\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\tmemset(a,0,sizeof(a));\n\t\tscanf(\"%lld\",&n);\n\t\tmemset(c,0,sizeof(c));\n\t\tfor(int i=1;i<=n;i++)\n\t\t\twhile(!q[i].empty())\n\t\t\t\tq[i].pop();\n\t\twhile(!z.empty())\n\t\t\tz.pop();\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tscanf(\"%lld\",&v[i]);\n\t\tscanf(\"%lld\",&m);\t\t\n\t\twhile(m--)\n\t\t{\n\t\t\tint op,id,l,r,t;\n\t\t\tscanf(\"%lld%lld\",&t,&op);\n\t\t\twhile(!z.empty()&&z.top().first<=t)\n\t\t\t{\n\t\t\t\tadd(z.top().second,1);\n\t\t\t\tz.pop();\n\t\t\t}\n\t\t\tif(op==0)\n\t\t\t{\n\t\t\t\tscanf(\"%lld\",&id);\n\t\t\t\tq[id].push(t+v[id]);\n\t\t\t\tz.push(pair<int,int>(t+v[id],id));\n\t\t\t}\n\t\t\tif(op==1)\n\t\t\t{\n\t\t\t\tint ans=0;\n\t\t\t\tif(!find(n))\n\t\t\t\t\tprintf(\"Yazid is angry.\\n\");\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor(int i=(1<<17);i;i>>=1)//\u500d\u589e\u5199\u6cd5\n\t\t\t\t\t\tif(ans+i<=n&&!find(ans+i))\n\t\t\t\t\t\t\tans+=i;\n\t\t\t\t\tans++;\n\t\t\t\t\tprintf(\"%lld\\n\",ans);\n\t\t\t\t\tadd(ans,-1);\n\t\t\t\t\tq[ans].pop();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tif(op==2)\n\t\t\t{\n\t\t\t\tscanf(\"%lld\",&id);\n\t\t\t\tif(q[id].empty())\n\t\t\t\t\tprintf(\"YJQQQAQ is angry.\\n\");\n\t\t\t\telse\n\t\t\t\tif(!q[id].empty()&&q[id].top()<=t)\n\t\t\t\t{\n\t\t\t\t\tq[id].pop();\n\t\t\t\t\tadd(id,-1);\n\t\t\t\t\tprintf(\"Succeeded!\\n\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tprintf(\"%lld\\n\",q[id].top()-t);\n\t\t\t}\n\t\t\tif(op==3)\n\t\t\t{\n\t\t\t\tscanf(\"%lld%lld\",&l,&r);\n\t\t\t\tprintf(\"%lld\\n\",find(r)-find(l-1));\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1626142557,
        "uid": 437795,
        "name": "wanggiaoxing",
        "ccfLevel": 7,
        "title": "P4032"
    }
]