[
    {
        "content": "### \u8fd9\u9053\u9898\u73b0\u5728\u8fd8\u6ca1\u6709C++\u7684\u5206\u5757\u9898\u89e3\uff0c~~\u5c0f\u849f\u84bb\u5c31\u6765\u6c34\u4e00\u53d1\u5427qwq~~\n\n\u53ef\u80fd\u662f\u6570\u636e\u6bd4\u8f83\u5f31\u7684\u539f\u56e0\uff0c\u8fd9\u9898\u7684\u5206\u5757\u8dd1\u7684\u98de\u5feb\uff0c\u5c0f\u849f\u84bb\u76ee\u524d\u662f\u8fd9\u9053\u9898\u7684rank1\uff08\u9a6c\u4e0a\u5c31\u8981\u88ab\u8d85\u8fc7\u53bb\u4e86\u5404\u4f4ddalao\u624b\u4e0b\u7559\u60c5QAQ\uff09\n\n\u5c0f\u849f\u84bb\u5c31\u9ed8\u8ba4\u770b\u5230\u8fd9\u91cc\u7684dalao\u90fd\u4f1a\u5206\u5757\u4e86\uff0c\u4e0d\u4f1a\u5206\u5757\u7684\u53ef\u4ee5\u53bb[hzwer\u5927\u795e\u7684\u6570\u5217\u5206\u5757\u4e5d\u8bb2](http://hzwer.com/8053.html)\u53bb\u5b66\u4e60\u4e00\u4e0bqwq\uff0c\u4e2a\u4eba\u611f\u89c9\u8bb2\u7684\u53ef\u4ee5\u8bf4\u662f\u5f88\u68d2\u4e86\n\n**\u8fdb\u5165\u6b63\u9898\uff0c\u628a\u957f\u5ea6\u4e3an\u7684\u6570\u5217\u5206\u6210\u6839\u53f7n\u4e2a\u5757\uff0c\u4fee\u6539\u7684\u65f6\u5019\u5bf9\u4e8e\u6563\u5757\u76f4\u63a5\u66b4\u529b\u4fee\u6539\uff0c\u6574\u5757\u628atag\u6570\u7ec4\u5f02\u6216\u4e00\u4e0b1\u5c31\u884c\u4e86\uff08\u4fee\u6539\u6b21\u6570\u4e3a\u5076\u6570\u5219\u706f\u7684\u5f00\u5173\u60c5\u51b5\u4e0d\u53d8\uff09\u3002**\n\n**\u4f46\u53ea\u8fd9\u6837\u7684\u8bdd\u67e5\u8be2\u7684\u65f6\u5019\u4e0d\u597d\u67e5\u6574\u5757\uff0c\u6240\u4ee5\u8fd8\u8981\u7ef4\u62a4\u4e00\u4e2aans\u6570\u7ec4\uff0c\u7528\u4e8e\u4fdd\u5b58\u5757\u5185\u76ee\u524d\u5f00\u7740\u7684\u706f\u7684\u6570\u91cf\u3002\u6563\u5757\u4fee\u6539\u7684\u65f6\u5019\u597d\u7ef4\u62a4\uff0c\u81f3\u4e8e\u6574\u5757\uff0c\u4fee\u6539\u7684\u65f6\u5019\u628aans\u53d8\u4e3a **\u5757\u7684\u5927\u5c0f\u51cf\u53bbans** \u5c31\u884c\u4e86\u3002**\n\n**\u8fd9\u6837\u4e00\u6765\u67e5\u8be2\u7684\u65f6\u5019\u4e5f\u5f88\u7b80\u5355\u4e86\uff0c\u6563\u5757\u76f4\u63a5\u66b4\u529b\u53bb\u67e5\uff0c\u6574\u5757\u7684\u7b54\u6848\u5c31\u662f\u6211\u4eec\u7ef4\u62a4\u7684ans qwq**\n\n\u76f8\u4fe1\u5404\u4f4ddalao\u770b\u5230\u8fd9\u91cc\u5df2\u7ecf\u4e86\u7136\u4e8e\u80f8\u4e86\uff0c\u90a3\u4e48\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#define maxn 100010\n#define re register\n#define FOR(i,l,r) for(re int i=l;i<=r;i++)\nusing namespace std;\n\nint a[maxn],b[maxn],tag[maxn],ans[maxn];\nint n,m,c,r,t,x,y,z,sq;\n\ninline char nc(){  //\u5feb\u7684\u4e00\u6279\u7684fread\u5feb\u8bfb\n\tstatic char buf[100000],*p1=buf,*p2=buf; \n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++; \n}\ninline int _read(){\n\tchar ch=nc();\n\tint sum=0; \n\twhile(!(ch>='0'&&ch<='9'))ch=nc(); \n\twhile(ch>='0'&&ch<='9')sum=sum*10+ch-48,ch=nc(); \n\treturn sum; \n} \n\ninline void out(re int a){\n    if(a>=10)out(a/10);\n    putchar(a%10+'0');\n}\n\nvoid change(int x,int y){ //\u4fee\u6539\u64cd\u4f5c\n\tFOR(i,x,min(y,b[x]*sq)){//\u6563\u5757\u76f4\u63a5\u4fee\u6539\n\t\tans[b[x]]-=(a[i]^tag[b[x]]);  //\u7ef4\u62a4ans\u6570\u7ec4\n\t\ta[i]^=1;\n\t\tans[b[x]]+=(a[i]^tag[b[x]]);\n\t}\n\tif(b[x]!=b[y])\n\t  FOR(i,(b[y]-1)*sq+1,y){\n\t  \tans[b[y]]-=(a[i]^tag[b[y]]);\n\t  \ta[i]^=1;\n\t  \tans[b[y]]+=(a[i]^tag[b[y]]);\n\t  }\n\tFOR(i,b[x]+1,b[y]-1){ //\u6574\u5757\u4fee\u6539tag\uff0c\u7ef4\u62a4ans\u6570\u7ec4\n\t\ttag[i]^=1;\n\t\tans[i]=sq-ans[i];\n\t}\n}\n\nint query(int x,int y){ //\u67e5\u8be2\u64cd\u4f5c\n\tre int res=0;\n\tFOR(i,x,min(y,b[x]*sq))  //\u6563\u5757\u76f4\u63a5\u67e5\u8be2\n\t  res+=(a[i]^tag[b[x]]);\n\tif(b[x]!=b[y]) \n\t  FOR(i,(b[y]-1)*sq+1,y)\n\t    res+=(a[i]^tag[b[y]]);\n    FOR(i,b[x]+1,b[y]-1)\n      res+=ans[i];  //\u6574\u5757\u52a0\u4e0a\u7ef4\u62a4\u7684ans\n    return res;\n}\n\nint main(){\n\tn=_read(),m=_read();\n\tsq=sqrt(n); //\u5206\u5757\u5927\u5c0f\u9ed8\u8ba4\u4e3a\u6839\u53f7n\uff0c\u4fee\u6539\u4e5f\u8bb8\u80fd\u53d8\u5f97\u66f4\u5feb\n\tFOR(i,1,n)\n\t  b[i]=(i-1)/sq+1; //\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u5757\n\tFOR(i,1,m){\n\t\tt=_read(),x=_read(),y=_read();\n\t\tif(t==0){\n\t\t\tchange(x,y);\n\t\t}\n\t\telse{\n\t\t\tout(query(x,y));\n\t\t\tputs(\"\");\n\t\t}\n\t}\n    return 0;//\u529f\u5fb7\u5706\u6ee1\u3002\n}\n```\n**\u6700\u540e\u795d\u5927\u5bb6NOIP RP++\uff01**\n",
        "postTime": 1538811276,
        "uid": 66965,
        "name": "Juan_feng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\n\u5927\u4f6c\u4eec\u7684\u53d8\u91cf\u770b\u8d77\u6765\u90fd\u597d\u5197\u6742\uff0c\u8fd8\u4e00\u76f4\u8bf4\u7b80\u5355\uff0c\u8bf4\u771f\u7684\u5bf9\u4e8e\u849f\u84bb\u6765\u8bf4\uff0c\u8fd9\u4e2a\u9898\u771f\u7684\u4e0d\u7b97\u7b80\u5355\uff0c\u672c\u849f\u84bb\u770b\u7740\u9898\u89e3\uff0c\u82e6\u82e6\u94bb\u78143\u4e2a\u5c0f\u65f6\uff0c\u624dAC\u3002\n\n\u4e0b\u9762\u8ba9\u6211\u7ad9\u5728\u849f\u84bb\u7684\u89d2\u5ea6\u8bb2\u89e3\u4e00\u4e0b\u8fd9\u9053\u6240\u8c13\u7684\u201c\u677f\u5b50\u201d\u9898\u3002\n\n\u5f88\u591a\u4eba\u8bf4\u8fd9\u5f88\u7b80\u5355\u770b\u51fa\u6765\u662f\u7ebf\u6bb5\u6811\uff0c\u90a3\u4e48\u7b80\u5355\u662f\u6307\u4ec0\u4e48\u5462\uff1f\n\n\u6211\u4eec\u8bf4\uff0c**\u4e00\u822c\u9898\u76ee\u6d89\u53ca\u5230\u533a\u95f4\u4fee\u6539\u4ee5\u53ca\u533a\u95f4\u67e5\u8be2**\u7684\u4e00\u822c\u91c7\u7528\u5206\u5757\u548c\u7ebf\u6bb5\u6811\u7684\u601d\u60f3\uff0c\u5e0c\u671b\u5927\u5bb6\u53ef\u4ee5\u94ed\u8bb0\u3002\n\n\n------------\n\u4e0b\u9762\u5f00\u59cb\u672c\u9898\u8bb2\u89e3\u3002\n\n\u8fd9\u9053\u9898\u7684\u6574\u4f53\u601d\u8def\u5c31\u662f\u7528\u67d0\u4e00\u533a\u95f4\u7684\u957f\u5ea6\u51cf\u53bb\u8fd9\u4e2a\u533a\u95f4\u7684\u4eae\u706f\u6570\u76ee\u5c31\u662f\u8fd9\u4e2a\u533a\u95f4\u5728\u4e00\u6b21\u4fee\u6539\u4e2d\u6240\u9700\u8981\u6253\u5f00\u706f\u7684\u6570\u76ee\uff0c\u90a3\u4e48\u6253\u5f00\u706f\u7684\u6570\u76ee\u53d8\u4e86\uff0c\u81ea\u7136\u4f1a\u5e26\u52a8\u8fd9\u4e2a\u533a\u95f4sum\u7684\u6539\u53d8\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7236\u4eb2\u548c\u513f\u5b50\u7684sum\u503c\u3002\n\n\u7b80\u5355\u7684\u8bf4tag\u51fd\u6570\u4e3b\u8981\u662f\u7ef4\u62a4\u513f\u5b50\u7684sum\u503c\uff0c\u81f3\u4e8e\u4ed6\u4eec\u7684\u61d2\u6807\u8bb0\u6211\u4e4b\u540e\u4f1a\u5728\u4ee3\u7801\u91cc\u5177\u4f53\u89e3\u91ca\u3002\n\n\n**\u61d2\u6807\u8bb0\u5728\u6b64\u9898\u4e2d\u4e3b\u8981\u6307\u8fd9\u4e2a\u533a\u95f4\u662f\u5426\u9700\u8981\u66f4\u6539**\u8fd9\u662f\u672c\u9898\u91cd\u70b9\u4f46\u6070\u6070\u4e2a\u4e2a\u9898\u89e3\u5de7\u5999\u7684\u907f\u8fc7\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u9898\u76ee\u4e2d\u51fd\u6570\u4e2d\u7684return\u662f\u672c\u9898\u6240\u7528\u7684\u6700\u5c11\u7684return\uff0c\u4e0d\u80fd\u5220\u4e00\u4e2a\uff0c\u81f3\u4e8e\u539f\u56e0\u53ef\u4ee5\u81ea\u5df1\u601d\u8003\u3002\n\n\u8bdd\u4e0d\u591a\u8bf4\u770b\u4ee3\u7801\u3002\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000001;\nint ans,n,m,a,b,c;\nstruct tree\n{\n\tint l,r,sum,add;\n}t[maxn];\ninline void build(int u,int x,int y)\n{\n    t[u].l=x;\n\tt[u].r=y;\n\tif(x==y)\n\t{\n\t\tt[u].sum=0;//\u9898\u76ee\u8bf4\u6bcf\u4e2a\u706f\u90fd\u662f\u5173\u7740\u7684\u3002\n\t\treturn ;\n\t}\n\tint mid=(x+y)>>1;\n\tbuild(u*2,x,mid);build(u*2+1,mid+1,y);\n}//\u5efa\u6811\u4e0d\u9700\u8981\u8fc7\u591a\u89e3\u91ca\u5427\uff1f\ninline void tag(int u)\n{\n\tif(t[u].add==0)return;//\u5982\u679c\u8fd9\u4e2a\u7236\u4eb2\u4e0d\u9700\u8981\u66f4\u6539\u8fd8\u9700\u8981\u513f\u5b50\u4ec0\u4e48\u4e8b\u60c5\u5462\uff1f\n    //\u5982\u679c\u770b\u4e0d\u61c2\u8fd9\u53e5\u7684\u8bdd\uff0c\u4e00\u5b9a\u8981\u8010\u5fc3\u5f80\u4e0b\u770b\u3002\n\tt[u*2].sum=t[u*2].r-t[u*2].l+1-t[u*2].sum;\n\tt[u*2+1].sum=t[u*2+1].r-t[u*2+1].l+1-t[u*2+1].sum;//\u7ef4\u62a4\u513f\u5b50\u7684sum\u503c\u3002\n\tif(t[u*2].add==0)//\u5982\u679c\u5de6\u513f\u5b50\u6ca1\u6709\u61d2\u6807\u8bb0\u7684\u8bdd\n\tt[u*2].add=1;//\u90a3\u4e48\u4ed6\u73b0\u5728\u6709\u4e86\u61d2\u6807\u8bb0\uff0c\n    //\u4e5f\u5c31\u662f\u5b83\u73b0\u5728\u9700\u8981\u4fee\u6539\u533a\u95f4\u5185\u7684\u503c\u4e86\u3002\n\telse t[u*2].add=0;//\u5982\u679c\u6709\u61d2\u6807\u8bb0\u7684\u8bdd\uff0c\u90a3\u4e48\u5b83\u73b0\u5728\u4e0d\u7528\u52a8\u4e86\n    //\u56e0\u4e3a\u8fd9\u4e2a\u505a\u513f\u5b50\u8fde\u7740\u88ab\u4fee\u6539\u4e86\u4e24\u6b21\uff0c\n    //\u6839\u636e\u9898\u610f\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u706f\u88ab\u5f00\u4e86\u4e00\u6b21\uff0c\u53c8\u88ab\u5173\u4e86\u4e00\u6b21\uff0c\n    //\u662f\u4e0d\u662f\u76f8\u5f53\u4e8e\u6700\u521d\u7684\u5f62\u6001\uff1f\n\tif(t[u*2+1].add==0)\n\tt[u*2+1].add=1;\n\telse t[u*2+1].add=0;//\u8fd9\u4e2a\u662f\u5904\u7406\u53f3\u513f\u5b50\u7684\uff0c\u89e3\u91ca\u540c\u4e0a\u3002\n\tt[u].add=0;//\u6ce8\u610f\u8fdb\u884c\u8fd9\u90e8\u7684\u65f6\u5019\n    //\u5de6\u53f3\u513f\u5b50\u7684\u7236\u4eb2\u5df2\u7ecf\u88ab\u4fee\u6539\u8fc7\u4e86\n    //\u6240\u4ee5\u7236\u4eb2\u7684\u61d2\u6807\u8bb0\u8981\u5f520\uff0c\u4e5f\u5c31\u662f\u8bf4\u7236\u4eb2\u73b0\u5728\u4e0d\u9700\u8981\u66f4\u6539\u3002\n}\ninline void change(int u,int l,int r)\n{\n\tif(l<=t[u].l&&t[u].r<=r)\n\t{\n\t\tt[u].sum=t[u].r-t[u].l+1-t[u].sum;\n\t\tif(t[u].add==0)\n\t\tt[u].add=1;\n\t\telse \n\t\tt[u].add=0;\n\t\treturn ;//\u8fd9\u4e2a\u5730\u65b9\u8ddf\u4e0a\u9762\u89e3\u91ca\u76f8\u540c\u3002\n\t}\n\ttag(u);\n    //\u6b64\u65f6\uff0c\u533a\u95f4\u6ca1\u6709\u8986\u76d6\u7236\u4eb2\uff0c\u90a3\u4e48\u68c0\u67e5\u4e00\u4e0b\u8fd9\u4e2a\u7236\u4eb2\u7528\u6539\u4e0d\u7528\n    //\u5982\u679c\u7236\u4eb2\u7528\u6539\u7684\u8bdd\uff0c\u90a3\u4e48\u7531\u4e8e\u6211\u4eec\u4e4b\u540e\u9700\u8981\u7528\u5230\u5b83\u7684\u513f\u5b50\n    //\u5e76\u4e14\u6211\u4eec\u8981\u6539\u7684\u533a\u95f4\u6ca1\u6709\u8986\u76d6\u7236\u4eb2\uff0c\u6240\u4ee5\u73b0\u5728\u8981\u4fee\u6539\u513f\u5b50\u4e86\u3002\n\tint mid=(t[u].l+t[u].r)>>1;\n\tif(a<=mid)change(u*2,l,r);\n\tif(b>mid)change(u*2+1,l,r);\n    //\u6b64\u5904\u4e00\u5b9a\u662fa<=mid,b>mid\u8fd9\u4e2a\u4ed4\u7ec6\u60f3\u60f3\u5427\u3002\n\tt[u].sum=t[u*2].sum+t[u*2+1].sum;\n}\ninline int ask(int u,int l,int r)\n{\n\tif(l<=t[u].l&&r>=t[u].r)return t[u].sum;\n\ttag(u);\n\tint mid=(t[u].l+t[u].r)/2;\n\tint ans=0;\n\tif(a<=mid)ans+=ask(u*2,l,r);\n\tif(b>mid)ans+=ask(u*2+1,l,r);\n\treturn ans;\n}//\u8fd9\u4e2a\u5730\u65b9\u662f\u677f\u5b50\u3002\nint main()\n{\n\tcin>>n>>m;\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>c>>a>>b;\n\t\tif(c==0)\n\t\tchange(1,a,b);\n\t\telse\n\t\tcout<<ask(1,a,b)<<endl;\n\t}\n\treturn 0;\n}//\u5b8c\u7f8e\u7ed3\u675f\u3002\n```\n\u5e0c\u671b\u672c\u7bc7\u9898\u89e3\u53ef\u4ee5\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\uff01\n\u795d\u5927\u5bb6ak noip\n\n\u5e0c\u671b\u7ba1\u7406\u54e5\u54e5\u901a\u8fc7\u3002\n",
        "postTime": 1559833533,
        "uid": 169973,
        "name": "\u4e00\u628a\u4e36\u62b1\u4f4f\u946b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u7ebf\u6bb5\u6811\u975e\u5e38\u6df3\u6734\uff0c\u51e0\u4e4e\u5c31\u662f\u6a21\u677f\u9898\u4e86\n\n\u8fd9\u9053\u63d0\u4e0d\u7528\u697c\u4e0b\u90a3\u4e48\u9ebb\u70e6\uff0c\u53ea\u8981\u5728\u4e0b\u63a8\u7684\u65f6\u5019\u7528\u603b\u6570-\u539f\u6570=\u66f4\u65b0\u540e\u7684\u4eae\u70b9\u6570\n\n\u5f00tree\u53d8\u91cf\uff0c\u5b58\u5f53\u524d\u7ebf\u6bb5\u4e0a0\u548c1\u7684\u6570\u91cf\uff0c\u6bcf\u6b21\u52a8\u5f00\u5173\u5c31\u662fswap\u4e00\u4e0b0\u548c1\u7684\u6570\u91cf\uff0c\u7edf\u8ba1\u65f6\u7528\u7d2f\u52a0\u5373\u53ef\n\n\u4e0a\u4ee3\u7801\uff1a\n\n>>\u673a\u667a\u7684\u5730\u65b9\u5c31\u5728\u8fd9\u91cc\uff01\uff01\uff01\u53d6\u53cd\n```cpp\n#include <cstdio>\nint n,m;\nint tree[400000],lazy[400000]; >>\u4e00\u4e2a\u662fsum\u4e00\u4e2a\u662f\u61d2\u60f0\u6807\u8bb0\ninline int read() >>\u8bfb\u5165\u4f18\u5316\n{\n    int x=0; char ch=getchar();\n    while (ch<'0' || ch>'9') ch=getchar();\n    while (ch>='0' && ch<='9')\n    {\n        x=(x<<3)+(x<<1)+ch-48; ch=getchar();\n    }\n    return x;\n}\ninline void write(int x) >>\u8f93\u51fa\u4f18\u5316\n{\n     if(x<0) putchar('-'),x=-x;\n     if(x>9) write(x/10);\n     putchar(x%10+'0');\n}\ninline void push_up(int root) >>\u53ea\u8981\u7528\u603b\u548c\u5373\u53ef\n{\n    tree[root]=tree[root<<1]+tree[root<<1|1];\n}\ninline void push_down(int root,int l,int r)\n{\n    if (lazy[root]==0) return;\n    lazy[root<<1]^=1; lazy[root<<1|1]^=1;\n    int mid=(l+r)>>1;\n    tree[root<<1]=(mid-l+1)-tree[root<<1];\n    tree[root<<1|1]=(r-mid)-tree[root<<1|1];\n    lazy[root]=0; \u591a\u5feb\u597d\u7701\n}\nvoid update(int l,int r,int root,int L,int R) >>\u6a21\u7248\n{ //printf(\"%d %d\\n\",l,r);\n    if (L<=l && r<=R)\n    {\n        tree[root]=(r-l+1)-tree[root]; //\u53d6\u53cd \n        lazy[root]^=1; return;\n    }\n    push_down(root,l,r);\n    int mid=(l+r)>>1;\n    if (L<=mid) update(l,mid,root<<1,L,R);\n    if (mid<R) update(mid+1,r,root<<1|1,L,R);\n    push_up(root);\n}\nint query(int l,int r,int root,int L,int R) >>\u6a21\u677f\n{\n    if (L<=l && r<=R) return tree[root];\n    push_down(root,l,r);\n    int a=0,b=0,mid=(l+r)>>1;\n    if (L<=mid) a=query(l,mid,root<<1,L,R);\n    if (mid<R) b=query(mid+1,r,root<<1|1,L,R);\n    return a+b;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    int op,x,y;\n    while (m--)\n    {\n        op=read();\n        x=read(); y=read();\n        if (op==0)\n            update(1,n,1,x,y);\n          else\n            write(query(1,n,1,x,y)),putchar('\\n');\n    }\n}\n```",
        "postTime": 1505120220,
        "uid": 22841,
        "name": "Right",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\u7ba1\u7406\u5458\u5927\u5927\u6211\u53ea\u662f\u4fee\u6539\u4e00\u4e0b\u548b\u5c31\u4e0d\u901a\u8fc7\u561e\n    \n\u9ebb\u70e6\u7ba1\u7406\u5458\u653e\u6761\u751f\u8def\u561b\n    \n\u672c\u9898\u5c31\u662f\u7ebf\u6bb5\u6811\u88f8\u9898\n\n\u672c\u9898\u7528t[i].sum\u8868\u793a\u533a\u95f4\u5185\u5f00\u7740\u7684\u706f\u7684\u6570\u91cf\u3002\n\n\u7136\u540e\u8fdb\u884c\u5efa\u6811\u3001\u67e5\u8be2\u3001\u4fee\u6539\u5c31\u53ef\u4ee5\u4e86\u3002\n\n~~\u4ee3\u7801\u4ee5\u4e0b~~\n\n\n\n\t------------\n\n\n\t#include<cstdio>\n\t#include<iostream>\n\t#include<cstring>\n\t#include<algorithm>\n\t#include<cmath>\n\tusing namespace std;\n\tint n,m,k,x,y;\n\tstruct tree\n\t{ \n\t\tint l,r,ad,sum; \n\t};\n\ttree t[400010];\n\tinline int read()//\u5feb\u8bfb\n\t{\n\t\tchar ch=getchar(); \n\t\tint x=0,f=1;\n\t\twhile(ch<'0'||ch>'9')\n\t\t{\n   \t\t\t if(ch=='-')\n        \t\tf=-1;\n    \t\tch=getchar();\n\t\t}\n\t\twhile('0'<=ch&&ch<='9')\n\t\t{\n\t\t\tx=x*10+ch-'0';\n\t\t\tch=getchar();\n\t\t}\n\t\treturn x*f;\n\t}\n\tint found(int p)\n\t{\n\t\tif(p==1)\n\t\t\treturn 0;\n\t\treturn 1;\n\t}\n\tvoid spread(int p)//\u6807\u8bb0\u4f20\u9012\n\t{\n\t\tif(!t[p].ad)\n\t    \treturn;\n\t\tint f=p<<1;\n\t\tt[f].sum=t[f].r-t[f].l+1-t[f].sum;//\u4fee\u6539\n\t\tt[f+1].sum=t[f+1].r-t[f+1].l+1-t[f+1].sum;\n\t\tt[f+1].ad=found(t[f+1].ad);//\u4f20\u9012\n\t\tt[f].ad=found(t[f].ad);\n\t\tt[p].ad=0;//\u8bb0\u5f97\u5220\u9664\u6807\u8bb0\n\t\treturn ;  \n\t}\n\tvoid build(int p,int l,int r)//\u5efa\u6811\n\t{\n\t\tt[p].l=l;t[p].r=r;\n\t\tif(l==r)\n\t\t{\n\t\t\tt[p].sum=0;//\u5173\u706f\u72b6\u6001\n    \t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1,fir=p<<1;\n\t\tbuild(fir,l,mid);\n\t\tbuild(fir+1,mid+1,r);\n\t\treturn ; \n\t} \n    void change(int p,int l,int r)//\u66f4\u6539\n\t{\n\t\tif(l<=t[p].l&&r>=t[p].r)//\u5982\u679c\u8986\u76d6\n\t\t{\n    \t\tt[p].sum=t[p].r-t[p].l+1-t[p].sum;//\u66f4\u6539\u540e\u7684\u4eae\u706f\u6570\n    \t\tt[p].ad=found(t[p].ad);//\u6807\u8bb0\n    \treturn;\n\t\t}\n\t\tspread(p);\n\t\tint mid=(t[p].l+t[p].r)>>1,fir=p<<1;\n\t\tif(x<=mid) \n    \t\tchange(fir,l,r);\n\t\tif(y>mid) \n    \t\tchange(fir+1,l,r);\n\t\tt[p].sum=t[fir].sum+t[fir+1].sum;\n\t\treturn ; \n\t} \n    int query(int p,int l,int r)//\u67e5\u627e\n\t{\n\t\tif(l<=t[p].l&&r>=t[p].r)//\u540c\u7406\n    \t\treturn t[p].sum;\n\t\tspread(p);\n        int mid=(t[p].l+t[p].r)>>1;\n\t\tint tot=0,fir=p<<1;\n\t\tif(x<=mid)\n    \t\ttot+=query(fir,x,y);\n\t\tif(y>mid)\n    \t\ttot+=query(fir+1,x,y);\n\t\treturn tot;//\u603b\u548c       \n\t}\n\tint main()\n\t{\n\t\tn=read();m=read();\n\t\tbuild(1,1,n);\n\t\twhile(m--)\n\t\t{\n    \t\tk=read();x=read();y=read();\n    \t\tif(k==0)\n        \t\tchange(1,x,y);\n\t\t\telse\n        \t\tprintf(\"%d\\n\",query(1,x,y));\n\t\t}\n\t\treturn 0;\n\t}",
        "postTime": 1532606597,
        "uid": 56564,
        "name": "\u7b2c\u4e00\u7eff\u8005\u5965\u6258",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "## \u8fd9\u9505\u662f\u672c\u849f\u84bb\u5728luogu\u4e0a\u5199\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u6c42\u7ba1\u7406\u5458\u7ed9\u901a\u8fc7~~~\n\n\u9996\u5148\u6211\u5728~~\u5212\u6c34~~\u65f6\u7a81\u7136\u60f3\u505a\u4e00\u9053\u5206\u5757\u7684\u9898\uff0c\u7136\u540e\u5c31\u70b9\u5f00\u4e86\u8fd9\u9053\u9898\u5eb7\u5eb7\n\u4e00\u8bfb\u9898\u53d1\u73b0\u8fd9\u4e0d\u662f\u7ebf\u6bb5\u6811\u88f8\u9898\uff1f\uff1f\u4f46\u6211\u4e0d\u80fd\u8fd9\uff08fang\uff09\u6837\uff08ge\uff09\uff0c\u6240\u4ee5\u5c31\u6253\u4e86\u4e00\u4e2a\u5206\u5757\u3002\u5bf9\u4e8e\u5206\u5757\u800c\u8a00\u4e5f\u662f\u6bd4\u8f83\u6c34\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u987a\u5e26\u590d\u4e60\u4e00\u4e0b\u5206\u5757\u3002\n### \u6982\u5ff5\uff1a\n- \u533a\u95f4\uff1a\u6570\u5217\u4e2d\u8fde\u7eed\u4e00\u6bb5\u7684\u5143\u7d20\n- \u533a\u95f4\u64cd\u4f5c\uff1a\u5c06\u67d0\u4e2a\u533a\u95f4[a,b]\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u67d0\u79cd\u6539\u52a8\u7684\u64cd\u4f5c\n- \u5757\uff1a\u6211\u4eec\u5c06\u6570\u5217\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u4e0d\u76f8\u4ea4\u7684\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u79f0\u4e3a\u4e00\u4e2a\u5757\n- \u6574\u5757\uff1a\u5728\u4e00\u4e2a\u533a\u95f4\u64cd\u4f5c\u65f6\uff0c\u5b8c\u6574\u5305\u542b\u4e8e\u533a\u95f4\u7684\u5757\n- \u4e0d\u5b8c\u6574\u7684\u5757\uff1a\u5728\u4e00\u4e2a\u533a\u95f4\u64cd\u4f5c\u65f6\uff0c\u53ea\u6709\u90e8\u5206\u5305\u542b\u4e8e\u533a\u95f4\u7684\u5757\uff0c\u5373\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u6240\u5728\u7684\u4e24\u4e2a\u5757\n\n### \u5206\u5757\u662f\u600e\u4e48\u64cd\u4f5c\uff1f\n- \u5c06\u8fde\u7eedx\u4e2a\u5143\u7d20\u5206\u4e3a\u4e00\u4e2a\u5757\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u64cd\u4f5c[L,R]\uff0c\u4e00\u5b9a\u662f\u4e2d\u95f4\u5305\u542b\u4e86\u82e5\u5e72\u5b8c\u6574\u5757\uff0c\u4e24\u8fb9\u5269\u4f59\u4e0d\u8d85\u8fc72x\u4e2a\u4f4d\u7f6e\uff0c\u5373\u201c[L,K*X],[K*X+1,(K+1)*X]\u2026[K2*Z+1,R]\u201d\u8fd9\u79cd\u5f62\u5f0f\n- \u5bf9\u4e8e\u5b8c\u6574\u5757\u53ef\u4ee5\u7edf\u4e00\u5904\u7406\uff0c\u5982\u679c\u53ef\u4ee5\u505a\u5230O(1),\u65f6\u95f4\u590d\u6742\u5ea6O(n/x)\n- \u5bf9\u4e8e\u5269\u4f59\u76842x\u4e2a\u70b9\uff0c\u53ef\u4ee5\u66b4\u529b\u5904\u7406O(x)\n- \u5f53x\uff1dsqrt(n)\u65f6\uff0c\u6bcf\u6b21\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230\u6700\u4f4eO(sqrt(n))\n- \u82e5\u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\u7684\u4efb\u610f\u4e00\u79cd\u9700\u8981\u591a\u4e00\u4e2alog\u7684\u590d\u6742\u5ea6\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u5757\u7684\u5927\u5c0f\u6765\u4f7f\u5f97\u6bcf\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u53d8\u4e3aO(sqrt(nlogn))\n\n\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u628a\u4e00\u4e2a\u5e8f\u5217\u5212\u5206\u6210\u51e0\u6bb5\uff0c\u6bcf\u6bb5\u7684\u5305\u542bsqrt(n)\u4e2a\u5143\u7d20\uff08\u6839\u636e\u5177\u4f53\u7684\u9898\u800c\u5b9a\uff09\u3002\u5f53\u7136\uff0c\u5bf9\u4e8e\u6574\u5757\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\uff0c\u53ef\u4ee5\u60f3\u6210\u7ebf\u6bb5\u6811\u7684\u6253lazy\uff0c\u7136\u540e\u4e0d\u5b8c\u6574\u7684\u5757\u968f\u4fbf\u641e\u641e\u5c31\u53ef\u4ee5\u4e86\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u5982\u679c\u5408\u5e76\u6bd4\u8f83\u590d\u6742\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u7528\u5206\u5757\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst int N=1e5+10;\nint n,m,v[N],sum[N],lzy[N],bel[N],bol,x,y;\ninline void add(int a,int b)\n{\n\tregister int i;\n\tfor(i=a;i<=min(b,bel[a]*bol);++i) sum[bel[a]]+= v[i]==0?1:-1,v[i]^=1;\n\tif(bel[a]!=bel[b]) for(i=(bel[b]-1)*bol+1;i<=b;++i) sum[bel[i]]+= v[i]==0?1:-1,v[i]^=1;\n\tfor(i=bel[a]+1;i<bel[b];++i) lzy[i]+=1; \n}\ninline int query(int a,int b)\n{\n\tint ans=0;\n\tregister int i;\n\tfor(i=a;i<=min(b,bel[a]*bol);++i) \n\t{\n\t\tif(lzy[bel[a]]%2==0) ans+=v[i];\n\t\telse ans+= (v[i]^1);\n\t}\n\tif(bel[a]!=bel[b]) \n\t{\n\t\tfor(i=(bel[b]-1)*bol+1;i<=b;++i)\n\t\t{\n\t\t\tif(lzy[bel[b]]%2==0) ans+=v[i];\n\t\t\telse ans+= (v[i]^1);\n\t\t}\n\t}\n\tfor(i=bel[a]+1;i<bel[b];++i) \n\t{\n\t\tif(lzy[i]%2==0) ans+=sum[i];\n\t\telse ans+= bol-sum[i];\n\t}\n\treturn ans;\n}\nint main()\n{\n\tregister int i;\n\tscanf(\"%d%d\",&n,&m);bol=sqrt(n);\n\tfor(i=1;i<=n;++i) bel[i]=(i-1)/bol+1;\n\tfor(i=1;i<=m;++i) \n\t{\n        int ooo;\n\t\tscanf(\"%d%d%d\",&ooo,&x,&y);\t\t\n\t\tif(ooo==0) add(x,y);\n\t\telse printf(\"%d\\n\",query(x,y));\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1569919684,
        "uid": 88588,
        "name": "Hello\uff0cyearning",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\u6c34\u9898\uff0c\u4e0d\u77e5\u9053\u54ea\u6765\u7684\u7701\u9009\u96be\u5ea6   \n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c  \n\n\u8fd9\u91cc\u6211\u7528\u4e86\u4e2a\u5c0f\u6280\u5de7\uff1a   \n\u5f00\u7684\u706f\u5173\u4e86\uff0c\u5173\u7684\u706f\u5f00\u4e86\uff0c\u706f\u7684\u603b\u6570\u4e0d\u53d8    \n\u53ea\u662f\u628a\u8fd9\u4e24\u8005\u6570\u91cf\u4ea4\u6362\u4e0b   \n\n\u4f8b\u5982\uff1a    1 0 1 0 1 1    \n\u5f00\u7740\u7684\u706f\u7684\u6570\u91cf\uff1a4     \n\u5173\u7740\u7684\u706f\u7684\u6570\u91cf\uff1a2\n\n\u64cd\u4f5c\u4e00\u6b21\u540e\uff1a   0 1 0 1 0 0   \n\u5f00\u7740\u7684\u706f\u7684\u6570\u91cf\uff1a2     \n\u5173\u7740\u7684\u706f\u7684\u6570\u91cf\uff1a4\n\n\u5c31\u662f\u628a2\u548c4\u4ea4\u6362\u4e0b\uff0c\u4f3c\u4e4e\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\n     \n     \n\n      \n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define SIZE 1000030\nusing namespace std;\n\nstruct SegmentTree {\n\tint l, r;\n\tint l0, l1, add; \n    // l0 \u8868\u793a \u5173\u7740\u7684\u706f\u7684\u6570\u91cf\uff0c \n    // l1 \u8868\u793a \u4eae\u7740\u7684\u706f\u7684\u6570\u91cf \n} t[SIZE * 4];\nint n, m, opt, x, y;\n\nvoid build(int p, int l, int r) {//\u5efa\u6811 \n\tt[p].l = l;    t[p].r = r;\n\tif (l == r) {\n\t\tt[p].l0++;\n\t\treturn ;\n\t}\n\tint mid = (l + r) / 2;\n\tbuild(p<<1, l, mid); \n\tbuild(p<<1|1, mid + 1, r);\n\tt[p].l0 = t[p<<1].l0 + t[p<<1|1].l0;\n}\ninline void spread(int p) {//\u6253\u6807\u8bb0 \n\tif (t[p].add == 0) return ;\n\tswap(t[p<<1].l0, t[p<<1].l1);  //\u4ea4\u6362\n\tswap(t[p<<1|1].l0, t[p<<1|1].l1);\n\tt[p<<1].add ^= 1;  //\u5f00\u5173\u706f\u5c31\u76f8\u5f53\u4e8e ^ \u4e00\u4e0b \n\tt[p<<1|1].add ^= 1;\n\tt[p].add = 0;\n}\ninline void change(int p, int l, int r) {\n\t//\u5f00\u5173\u706f\uff0c\u7ebf\u6bb5\u6811\u677f\u5b50 \n\tif (t[p].l >= l && t[p].r <= r) {\n\t\tt[p].add ^= 1;\n\t\tswap(t[p].l0, t[p].l1);\n\t\treturn ;\n\t}\n\tspread(p);\n\tint mid = (t[p].l + t[p].r) / 2;\n\tif (l <= mid) change(p<<1, l, r);\n\tif (mid < r) change(p<<1|1, l, r);\n\tt[p].l0 = t[p<<1].l0 + t[p<<1|1].l0;\n\tt[p].l1 = t[p<<1].l1 + t[p<<1|1].l1;\n}\nint ask(int p, int l, int r) { \n\t//\u67e5\u8be2\u5f00\u7740\u7684\u706f\u7684\u6570\u91cf \n\tif (t[p].l >= l && t[p].r <= r) \n\t\treturn t[p].l1;\n\tspread(p);\n\tint mid = (t[p].l + t[p].r) / 2, sum = 0;\n\tif (l <= mid) sum += ask(p<<1, l, r);\n\tif (mid < r) sum += ask(p<<1|1, l, r);\n\treturn sum;\n}\ninline void solve() {\n\tscanf (\"%d%d\", &n, &m);\n\tbuild(1, 1, n);\n\tfor (int i = 1; i <= m; ++i) {\n\t\tscanf (\"%d%d%d\", &opt, &x, &y);\n\t\tif (opt == 0) \n\t\t\tchange(1, x, y);\n\t\telse \n\t\t\tprintf(\"%d\\n\", ask(1, x, y));\n\t}\n}\nint main() {\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1538795985,
        "uid": 69495,
        "name": "marTixx",
        "ccfLevel": 0,
        "title": "P3870 [TJOI2009]\u5f00\u5173"
    },
    {
        "content": "## \u6307\u9488\u9898\u89e3\u6765\u4e00\u53d1\uff01\uff01\uff01\n\u8fd9\u9053\u9898\u5f88\u7b80\u5355\uff0c\u4e00\u773c\u5207\u3002\n\n\u6211\u4eec\u8003\u8651\u533a\u95f4\u5f02\u6216\u4ee5\u540e\uff0c\u8fd9\u4e2a\u533a\u95f41\u7684\u4e2a\u6570\u5c31\u53d8\u4e3a\u4e86len - \u539f\u6765\u7684\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e\u6807\u8bb0\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53d6\u5f02\u6216\u6765\u7ef4\u62a4\u5c31\u884c\u4e86\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int N = 200020;\ninline int read()\n{\n\tint x = 0 , f = 1;\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\t{if(ch == '-')\tf = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n\treturn x * f;\n}\nint n , m;\nchar s[N];\nstruct Segment_tree\n{\n\t#define mid ((p -> l + p -> r) >> 1)\n\tstruct node\n\t{\n\t\tnode *ls , *rs;\n\t\tint l , r , sum , tag;\n\t\tnode (int l = 0,int r = 0) : l(l) , r(r) {sum = tag = 0;}\n\t\tinline int len() {return r - l + 1;}\n\t\tinline void up() {sum = ls -> sum + rs -> sum;}\n\t\tinline void down() \n\t\t{\n\t\t\tif(tag)\n\t\t\t{\n\t\t\t\tls -> tag ^= 1;\n\t\t\t\trs -> tag ^= 1;\n\t\t\t\ttag = 0;\n\t\t\t\tls -> sum = ls -> len() - ls -> sum;\n\t\t\t\trs -> sum = rs -> len() - rs -> sum;\n\t\t\t}\n\t\t}\n\t}*root , pool[N] , *tail;\n\tvoid build(node *&p,int l,int r)\n\t{\n\t\tp = new (tail ++)node(l,r);\n\t\tif(l == r)\treturn;\n\t\tbuild(p -> ls,l,mid);\n\t\tbuild(p -> rs,mid+1,r);\n\t\tp -> up();\n\t}\n\tvoid chenge(node *p,int x,int y)\n\t{\n\t\tif(x <= p -> l && p -> r <= y)\t\n\t\t{\n\t\t\tp -> tag ^= 1;\n\t\t\tp -> sum = p -> len() - p -> sum;\n\t\t\treturn;\n\t\t}\n\t\tif(p -> tag)\tp -> down();\n\t\tif(x <= mid) chenge(p -> ls,x,y);\n\t\tif(y > mid)\tchenge(p -> rs,x,y);\n\t\tp -> up();\n\t}\n\tint query(node *p,int x,int y)\n\t{\n\t\tif(x <= p -> l && p -> r <= y)\treturn p -> sum;\n\t\tif(p -> tag)\tp -> down();\n\t\tint res = 0;\n\t\tif(x <= mid)\tres += query(p -> ls,x,y);\n\t\tif(y > mid)\t\tres += query(p -> rs,x,y);\n\t\treturn res;\n\t}\n\tinline void LOL()\n\t{\n\t\tn = read(); m = read();\n\t\tbuild(root,1,n);\n\t\tfor(int i = 1 , opt , l , r;i <= m;i ++)\n\t\t{\n\t\t\topt = read(); l = read(); r = read();\n\t\t\tif(opt & 1)\tprintf(\"%d\\n\",query(root,l,r));\n\t\t\telse chenge(root,l,r);\n\t\t}\n\t}\n\tSegment_tree() {tail = pool;}\n}CF;\nint main()\n{\n\tCF.LOL();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1568625461,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": ">\u4f17\u6240\u5468\u77e5\u5f88\u591a\u4e8b\u60c5\u5206\u5757\u80fd\u505a\u7ebf\u6bb5\u6811\u4e5f\u80fd\u505a\uff08\u5c31\u662f\u7ebf\u6bb5\u6811\u70e6\u4e00\u70b9\uff09\n\n\n\n>\u6240\u4ee5\u7684\u8bdd \u6211~~\u4e0d\u4f1a\u5206\u5757~~\n\n\n>emmm \u6570\u636e\u7ed3\u6784\u771f\u5b9e\u96be\u6253\u554aqwq\n\n\n>\u5176\u5b9e\u8fd9\u9898\u5c31\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u677f\u5b50\u9898\u3002 \u6ce8\u610f\u5f00\u5173\u706f \u4ee5\u53ca\u6807\u8bb0\n\n\n>\u5173\u706f\u64cd\u4f5c\u5176\u5b9e\u5c31\u662f ^= 1 \u7edf\u8ba1\u548c\u7684\u8bdd\u5c31\u662f\u4e24\u4e2a\u5b50\u6811\u5f80\u4e0a\u4f20\u9012\u503c\n\n>\u8dd1\u7684\u633a\u6162\u7684 $420ms$ \n\n>$Code$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std ;\ntypedef long long LL ;\ninline LL rd() { register LL x = 0 , f = 1 ; register char c ;\n#define gc c = getchar()\n    while(isspace(gc)) ;\n    if(c == '-') f = -1 , gc ;\n    while(x = (x<<1) + (x<<3) + (c&15) , isdigit(gc)) ;\n    return x * f ;\n#undef gc\n}\n\nconst int inf = INT_MAX >> 1 ;\n\nconst int N = 100000 + 30 ;\n\nint n , m ;\nstruct Tree {\n\tint Left , Right ;\n\tint cnt1 , cnt2 ;\n\tint Add ; \n} tree[N << 2] ; \n#define l(x) x << 1 \n#define r(x) x << 1 | 1\n\ninline void Build(int l , int r , int p) {\n\ttree[p].Left = l ; tree[p].Right = r ;\n\tif(l == r) { tree[p].cnt1 ++ ; return ; }\n\tint mid = l + r >> 1 ;\n\tBuild(l , mid , l(p)) ; Build(mid + 1 , r , r(p)) ;\n\ttree[p].cnt1 = tree[l(p)].cnt1 + tree[r(p)].cnt1 ;\n}\n\ninline void Lazy(int p) {\n\tif(tree[p].Add == 0) return ;\n\tswap(tree[l(p)].cnt1 , tree[l(p)].cnt2) ;\n\tswap(tree[r(p)].cnt1 , tree[r(p)].cnt2) ;\n\ttree[l(p)].Add ^= 1 ; tree[r(p)].Add ^= 1 ;\n\ttree[p].Add = 0 ;\n}\n\ninline void Change(int l , int r , int p) {\n\tif(tree[p].Left >= l and tree[p].Right <= r) {\n\t\ttree[p].Add ^= 1 ;\n\t\tswap(tree[p].cnt1 , tree[p].cnt2) ;\n\t\treturn ;\n\t}\n\tLazy(p) ;\n\tint mid = tree[p].Left + tree[p].Right >> 1 ;\n\tif(l <= mid) Change(l , r , l(p)) ;\n\tif(mid < r) Change(l , r , r(p)) ;\n\ttree[p].cnt1 = tree[l(p)].cnt1 + tree[r(p)].cnt1 ; \n\ttree[p].cnt2 = tree[l(p)].cnt2 + tree[r(p)].cnt2 ;  \n}\n\ninline int Query(int l , int r , int p) {\n\tif(tree[p].Left >= l and tree[p].Right <= r) return tree[p].cnt2 ;\n\tLazy(p) ;\n\tint mid = tree[p].Left + tree[p].Right >> 1 ; int sum = 0 ;\n\tif(l <= mid) sum += Query(l , r , l(p)) ;\n\tif(mid < r) sum += Query(l , r , r(p)) ;\n\treturn sum ; \n}\n\nsigned main() {\n\tn = rd() , m = rd() ;\n\tBuild(1 , n , 1) ;\n\tfor(register int i=1;i<=m;i++) {\n\t\tint opt = rd() , x = rd() , y = rd() ;\n\t\tif(opt == 0) Change(x , y , 1) ;\n\t\telse printf(\"%d\\n\" , Query(x , y , 1)) ;\n\t}\n\treturn 0 ;\n}\n\n```",
        "postTime": 1557660843,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\u9996\u5148\u5927\u81f4\u8bb2\u4e00\u4e0b\u4e00\u4e9b\u9898\u610f\uff1a\n\n\u6709\u4e00\u4e2a\u6570\u5217\uff0c\u4f60\u8981\u7ef4\u62a4\u4ee5\u4e0b\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n1.\u5bf9\u4e00\u6bb5\u533a\u95f4\u8fdb\u884c\u4ea6\u6216\u64cd\u4f5c\n\n2.\u6c42\u4e00\u6bb5\u533a\u95f4\u548c\n\n------------\n\u611f\u89c9\u548c\u7ebf\u6bb5\u6811\u5f88\u50cf\uff0c\u6240\u4ee5\u5c31\u8003\u8651\u7ebf\u6bb5\u6811\n\n\u7531\u4e8e\u6211\u5341\u5206\u83dc\uff0c\u53ea\u4f1a\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u6240\u4ee5\u53ea\u80fd\u7528\u533a\u95f4\u548c\u53bb\u5199\n\n\u9996\u5148\uff0c\u67e5\u8be2\u6ca1\u6709\u4efb\u4f55\u53d8\u52a8\uff0c\u5c31\u662f\u7ef4\u62a4\u533a\u95f4\u548c\n\n\u7136\u540e\uff0c\u518d\u662f\u4fee\u6539\uff0c\u5bf9\u4e8e\u533a\u95f4\u53bb\u4ea6\u6216\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u7531\u4e8e\u53ea\u67090,1\uff0c\u6240\u4ee5\u53ea\u8981\u62ff\u533a\u95f4\u957f\u5ea6-\u539f\u6765\u7684\u533a\u95f4\u548c\u5c31\u597d\uff0c\u7136\u540e\u628a\u4ea6\u6216\u64cd\u4f5c\u7528\u61d2\u6807\u8bb0\u4e0b\u7a7f\uff0c\u5bf9\u4e8e\u61d2\u6807\u8bb0\uff0c\u4ea6\u6216\u4e24\u6b21\u5c31\u662f\u6ca1\u4ea6\u6216\uff0c\u6240\u4ee5\u53ea\u8981\u628a\u5947\u6570\u6b21\u7684\u61d2\u6807\u8bb0\u6309\u4e0a\u89c4\u5219\u64cd\u4f5c\u5373\u53ef\n\n\n\n------------\nAC\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5+5;\nint n,m,a[N];\nstruct tree\n{\n\tint l,r,w,lz;\n}p[4*N];\nvoid build(int x,int l,int r) //\u5efa\u6811\n{\n\tp[x].l=l;\n\tp[x].r=r;\n\tif(l==r)\n\t{\n\t\tp[x].w=a[l];\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(2*x,l,mid);\n\tbuild(2*x+1,mid+1,r);\n\tp[x].w=p[x*2].w+p[x*2+1].w;\n}\nvoid xg(int x) //\u5355\u70b9\u4fee\u6539\n{\n\tp[x].w=p[x].r-p[x].l+1-p[x].w;\n\tp[x].lz^=1;\n}\nvoid dlz(int x) //\u4e0b\u7a7flazy\n{\n\tif(p[x].lz)\n\t{\n\t\txg(x<<1);\n\t\txg(x<<1|1);\n\t\tp[x].lz=0;\n\t}\n}\nvoid add(int x,int l,int r) //\u533a\u95f4\u4fee\u6539\n{\n\tif(l<=p[x].l&&p[x].r<=r)\n\t{\n\t\txg(x);\n\t\treturn ;\n\t}\n\tdlz(x);\n\tint mid=(p[x].l+p[x].r)>>1;\n\tif(l<=mid) add(x*2,l,r);\n\tif(r>mid) add(x*2+1,l,r);\n\tp[x].w=p[x*2].w+p[x*2+1].w;\n}\nint ask(int x,int l,int r) //\u533a\u95f4\u67e5\u8be2\n{\n\tif(l<=p[x].l&&p[x].r<=r)\n\t{\n\t\treturn p[x].w;\n\t}\n\tdlz(x);\n\tint mid=(p[x].l+p[x].r)>>1;\n\tint sum=0;\n\tif(l<=mid) sum+=ask(x*2,l,r);\n\tif(r>mid) sum+=ask(x*2+1,l,r);\n\treturn sum;\n}\nint main()\n{\n\tcin>>n>>m;\n\tbuild(1,1,n);\n\twhile(m--)\n\t{\n\t\tint c,l,r;\n\t\tscanf(\"%d%d%d\",&c,&l,&r);\n\t\tif(c) printf(\"%d\\n\",ask(1,l,r));\n\t\telse add(1,l,r);\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1569808942,
        "uid": 11392,
        "name": "shenbear",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "## \u4ee3\u7801\u7b80\u77ed\u7684\u5206\u5757\n~~\u4ece@Owen_codeisking dalao\u5904\u5b66\u4f1a\u5206\u5757\uff08\u611f\u8c22\u5e76\u819c\u62dcdalao\uff09~~           \n\u8fd9\u9053\u9898\u662f\u6211\u7b2c$3$\u6b21\u7528c++\u505a\u5206\u5757\u4e86~~\u8f6c\u8bed\u8a00\u7684\u60b2\u54c0~~\uff0c\u53d1\u73b0\u77ed\u8fc7\u4e86\u67d0\u4e00\u4e2a\u9898\u89e3\uff0c\u6240\u4ee5\u62ff\u51fa\u6765\u548c\u5927\u5bb6\u5b66\u4e60\u5b66\u4e60\u3002\u3002\u3002     \n#### \u5206\u5757\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f\u628a\u6570\u5217\u5206\u6210\u597d\u51e0\u6bb5\uff0c\u7136\u540e\u5206\u5757\u64cd\u4f5c\u3002\u5176\u5b9e\u4ee3\u7801\u601d\u8def\u5c31\u662f\u8fd9\u6837\uff0c\u81f3\u4e8e\u5206\u5757\u7684\u5199\u6cd5\u6211\u5c31\u4e0d\u591a\u505a\u4ecb\u7ecd\u4e86\uff0cdalao\u4eec\u5e94\u8be5\u90fd\u4f1a\u5427\u3002\u3002\u3002~~\u521d\u4e00\u849f\u84bb\u5728dalao\u4e4b\u95f4\u745f\u745f\u53d1\u6296~~         \n\u5f53\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u4f18\u65f6\uff0c\u4e3a$\\sqrt{n}$,\u7136\u540e\u64cd\u4f5c\u5373\u53ef\u3002     \n\u8fc7\u4e86\u8fd9\u9053\u9898\uff0c\u8fd8\u53ef\u4ee5\u53bb\u8bd5\u8bd5LOJ\u6570\u5217\u5206\u5757$1-9$~~\u76f8\u4fe1\u4f60\u80fdAK~~\n\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nll L[100010],R[100010],add[100010],a[100010],pos[100010];\nvoid change(int b,int c){\n    int p=pos[b],q=pos[c];\n    if(p==q){\n        for(int i=b;i<=c;i++){\n            a[i]=(a[i]+1)%2;\n        }\n    } else\n    {\n        for(int i=p+1;i<=q-1;i++) add[i]++;\n        for(int i=b;i<=R[p];i++) a[i]=(a[i]+1)%2;\n        for(int i=L[q];i<=c;i++) a[i]=(a[i]+1)%2;\n    }\n}\nint find(int b,int c){\n    ll ans=0;\n    for(int i=b;i<=c;i++){\n        if ((a[i]+add[pos[i]])%2==1){\n            ans++;\n        }\n    }\n    return ans;\n}\nint main(){\n    ll n,m;\n    memset(a,0,sizeof(a));\n    scanf(\"%lld%lld\",&n,&m);\n    int t=sqrt(n);\n    for(int i=1;i<=t;i++){\n        L[i]=(i-1)*t+1;R[i]=i*t;\n    }\n    if (R[t]<n){\n        t++;L[t]=R[t-1]+1;R[t]=n;\n    }\n    for(int i=1;i<=t;i++){\n        for(int j=L[i];j<=R[i];j++){\n            pos[j]=i;\n        }\n    }\n    for(int i=1;i<=m;i++){\n        ll kkk,b,c;\n        scanf(\"%lld%lld%lld\",&kkk,&b,&c);\n        if(kkk==0){\n            change(b,c);\n        } else\n        {\n            printf(\"%d\\n\",find(b,c));\n        }\n    }\n    return 0;\n}\n```\n\u5982\u679c\u4f60\u7684\u8fd0\u6c14\u597d\uff0c\u4f60\u5c31\u80fd\u4e0d\u5f00$O_{2}$\u6c34\u8fc7~~\u4f46\u662f\u597d\u50cf\u8fd8\u662f\u8981\u5f00\u7684~~          \n\u795d\u5404\u4f4dAC\u6109\u5feb",
        "postTime": 1545395312,
        "uid": 36349,
        "name": "\u82b1\u843d\u4e36\u5bb8\u661f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u6709\u533a\u95f4\u53d6\u53cd\uff0c\u548c\u533a\u95f4\u6c42\u548c\u64cd\u4f5c\u3002\u8f93\u51fa\u6bcf\u4e00\u6b21\u6c42\u548c\u8be2\u95ee\u7684\u7b54\u6848\n\n\u8fd9\u5e94\u8be5\u7b97\u7684\u4e0a\u662f\u4e00\u9053\u6a21\u677f\u7684\u5206\u5757\u9898\u4e86\uff0c\u5199\u5b8c\u540e\u611f\u89c9\u5206\u5757\u6bd4\u7ebf\u6bb5\u6811\u7b80\u5355\u597d\u591a  \n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u5e8f\u5217\u5206\u6210 $\\sqrt{n}$ \u5757\uff0c\u4fdd\u8bc1\u6700\u4f18\u5316\u590d\u6742\u7684\n\u7ef4\u62a4\u56db\u4e2a\u6570\u7ec4 $a[],sum[],tag[],id[]$ \u5206\u522b\u8868\u793a\u6bcf\u76cf\u706f\u7684\u72b6\u6001\uff0c\u6bcf\u4e2a\u5757\u4e2d\u5f00\u7740\u7684\u706f\u6570\u603b\u548c\uff0c\u6bcf\u5757\u662f\u5426\u53d6\u53cd\uff0c\u548c\u6bcf\u76cf\u706f\u5c5e\u4e8e\u7684\u5757\u7684\u7f16\u53f7\n\n\u6bcf\u4e00\u6b21\u533a\u95f4 \u8be2\u95ee/\u4fee\u6539\uff0c\u5bf9\u4e8e\u4e0d\u6574\u5757\u7684\u90e8\u5206\uff0c\u76f4\u63a5\u4fee\u6539\u5b83\u7684 $a[]$ \u6570\u7ec4  \n\u5bf9\u4e8e\u6574\u5757\u7684\uff0c\u6211\u4eec\u76f4\u63a5\u6253\u4e0a\u6807\u8bb0\u5e76\u66f4 $sum[]$ \u6570\u7ec4\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\nusing namespace std;\nconst int Maxn=100000+10,inf=0x3f3f3f3f;\nint n,m,len;\nint id[Maxn],sum[Maxn],a[Maxn],tag[Maxn];\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\nvoid modify(int l,int r)\n{\n\tint limit=min(id[l]*len,r);\n\tfor(int i=l;i<=limit;++i)\n\t{\n\t\tsum[id[i]]-=(a[i]^tag[id[i]]); //\u51cf\u53bb\u4e4b\u524d\u4ed6\u5bf9\u6240\u5728\u7684\u5757\u505a\u7684\u8d21\u732e\n\t\ta[i]^=1;  // \u53d6\u53cd\n\t\tsum[id[i]]+=(a[i]^tag[id[i]]);  // \u52a0\u4e0a\u53d6\u53cd\u540e\u5bf9\u6240\u5728\u7684\u5757\u505a\u7684\u8d21\u732e\n\t}\n\tif(id[l]!=id[r])\n\t{\n\t\tfor(int i=(id[r]-1)*len+1;i<=r;++i)\n\t\t{\n\t\t\tsum[id[i]]-=(a[i]^tag[id[i]]);\n\t\t\ta[i]^=1;\n\t\t\tsum[id[i]]+=(a[i]^tag[id[i]]);\n\t\t}\n\t}\n\tfor(int i=id[l]+1;i<=id[r]-1;++i)\n\t{\n\t\ttag[i]^=1;\n\t\tsum[i]=len-sum[i];\n\t}\n}\nint query(int l,int r)  // \u4e0e\u4e0a\u540c\u7406\n{\n\tint limit=min(id[l]*len,r);\n\tint ret=0;\n\tfor(int i=l;i<=limit;++i)\n\tret+=(a[i]^tag[id[i]]);\n\t\n\tif(id[l]!=id[r])\n\t{\n\t\tfor(int i=(id[r]-1)*len+1;i<=r;++i)\n\t\tret+=(a[i]^tag[id[i]]);\n\t}\n\tfor(int i=id[l]+1;i<=id[r]-1;++i)\n\tret+=sum[i];\n\treturn ret;\n}\nint main()\n{\n\t//freopen(\"in.txt\",\"r\",stdin);\n\tn=read(),m=read();\n\tlen=sqrt(n);\n\tfor(int i=1;i<=n;++i)\n\tid[i]=(i-1)/len+1;\n\t\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tbool opt=read();\n\t\tint l=read(),r=read();\n\t\t\n\t\tif(!opt)modify(l,r);\n\t\telse printf(\"%d\\n\",query(l,r));\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1577243601,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "#### \u6765\u4e00\u6ce2\u7ebf\u6bb5\u6811\u677f\u5b50\u505a\u6cd5\n   \u9996\u5148\u770b\u5230\u9898\u76ee\uff0c\u4e00\u6b21\u5c06\u7b49\u5168\u90e8\u6539\u53d8\u539f\u6765\u7684\u72b6\u6001\uff0c\u5b66\u8fc7\u72b6\u6001\u538b\u7f29 ~~\uff08\u6216\u5176\u4ed6\u4e00\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u4e1c\u897f\uff09~~ \u7684\u540c\u5b66\u4eec\u90fd\u77e5\u9053\uff0c\u53ef\u4ee5\u7528**\u53d6\u53cd**\u641e\u5b9a\uff0c\u7b26\u53f7^\uff0c\u7167\u6837\u7528\u4e00\u4e2a\u6570\u7ec4ad\u8fdb\u884c\u7ef4\u62a4\u3002\u5982\u679c\u957f\u5ea6\u4e3aL\uff0c\u6709l\u4e2a\u706f\u5f00\u4e86\uff0c\u5219\u6709L-l\u4e2a\u706f\u706d\u4e86\uff0c\u6240\u4ee5\u7ef4\u62a4\u65f6\uff0c\u53ef\u4ee4********s[i]=L-s[i]********  \u6709\u70b9\u7ed5\uff0c\u6ca1\u5173\u7cfb\uff0c\u6162\u6162\u7406\u89e3\uff0c\u540e\u9762\u4e3b\u8981\u5c31\u662f\u6253\u677f\u5b50\uff0c\u5904\u7406\u597d\u7ec6\u8282\n   \n   \u4ee3\u7801\u53d8\u91cf\u8bf4\u660e\uff1as \u76f8\u5f53\u4e8esum\uff0c\u7ebf\u6bb5\u6811\u6570\u7ec4\n   \n                ad \u7528\u4e8e\u7ef4\u62a4\n   \u4ee3\u7801\u65f6\u95f4\n   \n    \n\n------------\n```cpp\n//\u5f00\u4e3a1 \u6697\u4e3a0\n#include<bits/stdc++.h>\n#define new_  s[k]=s[k<<1]+s[k<<1|1];  //\u66f4\u65b0\nusing namespace std;\nconst int M=200000+10;\nint n,m,a,x,y;\nint ad[4*M],s[4*M],sa[M];\nchar sr[M];\nint read() \n{\n    char ch=getchar(); \n\tint r=0,f=1;\n    while(ch<'0'||ch>'9') \n\t{\n        if(ch=='-') f=-1;\n        ch=getchar();\n    } \n\twhile('0'<=ch&&ch<='9') \n\t{\n        r=r*10+ch-'0';\n        ch=getchar();\n    } \n\treturn r*f;\n}\nvoid build(int k,int l,int r)//\u5efa\u6811\n{\n\tif(l==r)\n\t{\n\t\ts[k]=sa[l];\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tbuild(k<<1,l,mid);\n\tbuild(k<<1|1,mid+1,r);\n\tnew_; \n}\nvoid push(int k,int L)//\u6807\u8bb0\u4e0b\u653e\n{\n\tif(ad[k])\n\t{\n\t\tad[k<<1]^=1;\n\t\tad[k<<1|1]^=1;\n\t\ts[k<<1]=(L-(L>>1))-s[k<<1];\n\t\ts[k<<1|1]=(L>>1)-s[k<<1|1];\n\t\tad[k]=0;\n\t}\n}\nvoid xor_(int k,int l,int r)//\u53d6\u53cd\uff08\u5173\u706f\u5f00\u706f\u64cd\u4f5c\uff09\n{\n\tif(x<=l&&y>=r)\n\t{\n\t\tad[k]^=1;\n\t\ts[k]=(r-l+1)-s[k];\n\t\treturn ;\n\t}\n\tpush(k,r-l+1);\n\tint mid=l+r>>1;\n\tif(x<=mid) xor_(k<<1,l,mid);\n\tif(y>mid) xor_(k<<1|1,mid+1,r);\n\tnew_;\n}\nint query(int k,int l,int r)//\u8be2\u95ee\u67e5\u627e\n{\n\tif(x<=l&&y>=r) return s[k];\n\tpush(k,r-l+1);\n\tint mid=l+r>>1;\n\tint cnt=0;\n\tif(x<=mid) cnt+=query(k<<1,l,mid);\n\tif(y>mid) cnt+=query(k<<1|1,mid+1,r);\n\tnew_;\n\treturn cnt;\n}\nint main()\n{\n\tn=read();\n\tm=read();\n\tfor(int i=1;i<=n;i++) sa[i]=0;\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\ta=read(),x=read(),y=read();\n\t\tif(a==0) xor_(1,1,n);\n\t\tif(a==1) printf(\"%d\\n\",query(1,1,n));\n\t}\n\treturn 0;\n} \n```\n\u63a8\u8350\u4e24\u9053\u597d\u9898\u7ed9\u5927\u5bb6\uff0c\u5dee\u4e0d\u591a\uff0c\u6709\u4e00\u9898\u7a0d\u5fae\u6539\u4e00\u4e0b\u5c31AC\n\n[\u5149\u5f00\u5173Light Switching](https://www.luogu.com.cn/problem/P2846)\n\n[XOR\u7684\u827a\u672f](https://www.luogu.com.cn/problem/P2574)\n",
        "postTime": 1581857183,
        "uid": 173239,
        "name": "\u9ec4\u6c5d\u9e4f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u9053\u9898\u7684\u5f00\u5173\u706f\u672c\u8d28\u4e0a\u5c31\u662f\u533a\u95f4\u53cd\u8f6c,\u7136\u540e\u5c31\u53ef\u4ee5\u7528(\u9b54\u6539)\u7ebf\u6bb5\u6811\u7ef4\u62a4.\n\n\u5047\u8bbe\u6709\u4e24\u9897\u7ebf\u6bb5\u6811\u5206\u522b\u957f\u6210\u8fd9\u4e2a\u6837\u5b50,\u5de6\u8fb9\u90a3\u4e00\u9897\u5b58\u7684\u5c31\u662f\u521d\u59cb\u72b6\u6001(\u5168\u90e8\u5173\u95ed).\n![](https://i.loli.net/2019/11/07/YlN5wfMikneEVb1.png)\n\u73b0\u5728\u8981\u4fee\u6539\u533a\u95f4,\u6bd4\u5982 $[2,5]$ (\u56fe\u4e2d\u9ec4\u8272\u90e8\u5206),\u90a3\u4e48\u53ea\u8981\u4e0e\u53f3\u8fb9\u90a3\u68f5\u6811\u7684\u5bf9\u5e94\u4f4d\u7f6e\u4ea4\u6362(\u56fe\u4e2d\u7eff\u8272\u90e8\u5206)\u5c31\u53ef\u4ee5\u4e86.  \n\u6240\u4ee5\u53ea\u8981\u5efa\u4e24\u9897\u7ebf\u6bb5\u6811,\u8868\u793a\u6bcf\u4e00\u4e2a\u533a\u95f4\u521d\u59cb\u72b6\u6001\u548c\u53cd\u8f6c\u540e\u72b6\u6001,\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u4fdd\u5b58\u5b83\u7684\u5de6\u53f3\u513f\u5b50,\u7136\u540e\u5728\u66f4\u65b0\u6574\u4e2a\u533a\u95f4\u65f6\u8c03\u6362\u5de6\u53f3\u513f\u5b50(\u6bd4\u5982\u4f8b\u5b50\u4e2d\u53ea\u9700\u8981\u4ea4\u6362\u8fb9\u6846\u52a0\u7c97\u7684\u8282\u70b9)\u5373\u53ef.\u4ee3\u7801\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u7a0b\u5e8f.\n\n```cpp\n#include <algorithm>\n#include <cstdio>\nusing namespace std;\n\nint n,m,a=1,b,c,r0,r1=1,s[800005],ls[800005],rs[800005];\n\nvoid build(int lp,int rp,int p0,int p1) {\n\tif (lp==rp) {s[p0]=0; s[p1]=1; return;}\n\tls[p0]=++a; ls[p1]=++a;\n\trs[p0]=++a; rs[p1]=++a; int mp=(lp+rp)>>1;\n\tbuild(lp,mp,ls[p0],ls[p1]);\n\tbuild(mp+1,rp,rs[p0],rs[p1]);\n\ts[p0]=s[ls[p0]]+s[rs[p0]];\n\ts[p1]=s[ls[p1]]+s[rs[p1]];\n}\n\nvoid update(int ul,int ur,int lp,int rp,int p0,int p1) {\n\tif (lp>rp) return; int mp=(lp+rp)>>1;\n\tif (ul<=lp&&mp<=ur) swap(ls[p0],ls[p1]);\n\telse if (ul<=mp) update(ul,ur,lp,mp,ls[p0],ls[p1]);\n\tif (ul<mp+2&&rp<=ur) swap(rs[p0],rs[p1]);\n\telse if (mp<ur) update(ul,ur,mp+1,rp,rs[p0],rs[p1]);\n\ts[p0]=s[ls[p0]]+s[rs[p0]];\n\ts[p1]=s[ls[p1]]+s[rs[p1]];\n}\n\nint getsum(int gl,int gr,int lp,int rp,int p0) {\n\tif (gl<=lp&&rp<=gr) return s[p0];\n\tint mp=(lp+rp)>>1,ret=0;\n\tif (gl<=mp) ret+=getsum(gl,gr,lp,mp,ls[p0]);\n\tif (mp<gr) ret+=getsum(gl,gr,mp+1,rp,rs[p0]); return ret;\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&m); build(1,n,r0,r1);\n\twhile (m--) {\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tif (a) printf(\"%d\\n\",getsum(b,c,1,n,r0));\n\t\telse {\n\t\t\tif (b==1&&c==n) swap(r0,r1);\n\t\t\telse update(b,c,1,n,r0,r1);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1573134312,
        "uid": 54189,
        "name": "konjacq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n\u8bdd\u8bf4\u5206\u5757\u7684\u590d\u6742\u5ea6\u4e0d\u662f $O(n\\sqrt{n})$ \u5417\uff0c\u4e3a\u6bdb\u5f00 $O2$ \u5206\u5757\u8dd1\u7684\u6bd4\u6211\u7684\u7ebf\u6bb5\u6811\u5feb\u3002\u3002\u3002\n\n# Solution\n\n## \u89e3\u6cd5\u4e00\uff1a\u7ebf\u6bb5\u6811\n\n\u8fd9\u4e2a\u533a\u95f4\u7ffb\u8f6c\u53ef\u4ee5\u770b\u6210\u662f\u5bf9\u6bcf\u4e2a\u6570\u5f02\u6216\u4e00\u4e0b\u3002\n\n\u6240\u4ee5\u5bf9\u6bcf\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u7ffb\u8f6c\u4e86\u4e00\u6b21\uff0c\u5b83\u7684\u8d21\u732e\u5c31\u53d8\u6210\u4e86 $len-ans$ \u3002\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u5185 $1$ \u7684\u603b\u6570\uff0c\u61d2\u6807\u8bb0\u6539\u4e3a\u5f02\u6216\u5373\u53ef\u3002\n\n## \u89e3\u6cd5\u4e8c\uff1a\u5206\u5757\n\n\u5148\u5c06\u6574\u4e2a\u5e8f\u5217\u5206\u4e3a $\\sqrt{n}$ \u5757\uff0c\u6309\u7167\u5206\u5757**\u5927\u6bb5\u7ef4\u62a4\uff0c\u5c40\u90e8\u6734\u7d20**\u7684\u601d\u60f3\uff0c\u6211\u4eec\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u4fee\u6539\u548c\u67e5\u8be2\u3002\n\n\u4fee\u6539\uff1a\n\n\u200b\t\t\u8bb0\u5f55\u4e00\u4e2a $inv$ \u6570\u7ec4\uff0c\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u88ab\u7ffb\u8f6c\u4e86\u51e0\u6b21\u3002\n\n\u200b\t\t\u5bf9\u4e8e\u5927\u6bb5\u7684\u533a\u95f4\uff0c\u6211\u4eec\u76f4\u63a5\u5c06 $ans$ \u53d8\u4e3a $sz-ans$ \uff0c\u5176\u4e2d $sz$ \u4e3a\u5757\u7684\u5927\u5c0f\u3002\n\n\u200b\t\t\u5bf9\u4e8e\u5f00\u5934\u548c\u672b\u5c3e\u90e8\u5206\uff0c\u66b4\u529b\u7ef4\u62a4\u3002\n\n\u200b\t\t\u5148\u5224\u65ad\u5f53\u524d\u4f4d\u7f6e\u7684\u6570\u7ffb\u8f6c\u4e86 $inv$ \u6b21\u4e4b\u540e\u662f\u5426\u4e3a $1$ \uff0c\u5982\u679c\u662f\uff0c\u5c31\u5c06\u8be5\u6bb5\u7684\u7b54\u6848\u51cf $1$ \uff0c\u5426\u5219\u5c31\u52a0 $1$ \u3002\n\n\u67e5\u8be2\uff1a\n\n\u200b\t\t\u5bf9\u4e8e\u5927\u7684\u533a\u95f4\uff0c\u6211\u4eec\u76f4\u63a5\u8c03\u7528\u7b54\u6848\u3002\n\n\u200b\t\t\u5bf9\u4e8e\u5f00\u5934\u548c\u672b\u5c3e\u90e8\u5206\uff0c\u66b4\u529b\u7ef4\u62a4\uff0c\u5177\u4f53\u65b9\u6cd5\u548c\u4fee\u6539\u7c7b\u4f3c\u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il print(T x){\n\tif(x/10) print(x/10);\n\tputchar(x%10+'0');\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(1ll*res*bas)%mod;\n\t\tbas=(1ll*bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 1e5+5;\nint n,m,opt,x,y;\n// \u5206\u5757\nint ans[320],sz,inv[320],val[MAXN];\nil updata(int x,int y){\n\tri p=(x+sz-1)/sz,q=(y+sz-1)/sz;\n\tif(p==q){\n\t\tfor(ri i=x;i<=y;++i) ans[p]-=val[i]^inv[p],val[i]^=1,ans[p]+=val[i]^inv[p];\n\t\treturn ;\n\t}\n\tfor(ri i=p+1;i<=q-1;++i) inv[i]^=1,ans[i]=sz-ans[i];\n\tfor(ri i=x;i<=sz*p;++i) ans[p]-=val[i]^inv[p],val[i]^=1,ans[p]+=val[i]^inv[p];\n\tfor(ri i=(q-1)*sz+1;i<=y;++i) ans[q]-=val[i]^inv[q],val[i]^=1,ans[q]+=val[i]^inv[q];\n}\nit query(int x,int y){\n\tri p=(x+sz-1)/sz,q=(y+sz-1)/sz,res=0;\n\tif(p==q){\n\t\tfor(ri i=x;i<=y;++i) res+=val[i]^inv[p];\n\t\treturn res;\n\t}\n\tfor(ri i=p+1;i<=q-1;++i) res+=ans[i];\n\tfor(ri i=x;i<=sz*p;++i) res+=val[i]^inv[p];\n\tfor(ri i=(q-1)*sz+1;i<=y;++i) res+=val[i]^inv[q];\n\treturn res;\n}\n/* \u7ebf\u6bb5\u6811\nstruct Seg_Tree{\n\tint sum,tag;\n}T[MAXN<<2];\n#define lc (cur<<1)\n#define rc (cur<<1|1)\nil pushup(int cur){T[cur].sum=T[lc].sum+T[rc].sum;}\nil pushdown(int cur,int l,int r){\n\tif(!T[cur].tag) return ;\n\tT[lc].tag^=T[cur].tag;\n\tT[rc].tag^=T[cur].tag;\n\tT[lc].sum=mid-l+1-T[lc].sum;\n\tT[rc].sum=r-mid-T[rc].sum;\n\tT[cur].tag=0;\n}\nil updata(int cur,int l,int r,int L,int R){\n\tif(l>=L&&r<=R) T[cur].tag^=1,T[cur].sum=r-l+1-T[cur].sum;\n\telse{\n\t\tpushdown(cur,l,r);\n\t\tif(mid>=L) updata(lc,l,mid,L,R);\n\t\tif(R>mid) updata(rc,mid+1,r,L,R);\n\t\tpushup(cur);\n\t}\n}\nit query(int cur,int l,int r,int L,int R){\n\tif(l>=L&&r<=R) return T[cur].sum;\n\tpushdown(cur,l,r);ri res=0;\n\tif(mid>=L) res+=query(lc,l,mid,L,R);\n\tif(R>mid) res+=query(rc,mid+1,r,L,R);\n\treturn res;\n}\n*/\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n),read(m);\n\t/* \u7ebf\u6bb5\u6811\n\tfor(ri i=1;i<=m;++i){\n\t\tread(opt),read(x),read(y);\n\t\tif(opt==0) updata(1,1,n,x,y);\n\t\telse print(query(1,1,n,x,y)),puts(\"\");\n\t}\n\t*/\n\t// \u5206\u5757\n\tsz=sqrt(n);\n\tfor(ri i=1;i<=m;++i){\n\t\tread(opt),read(x),read(y);\n\t\tif(opt==0) updata(x,y);\n\t\telse print(query(x,y)),puts(\"\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1567394978,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "P3870 [TJOI2009]\u5f00\u5173 \u9898\u89e3"
    },
    {
        "content": "\u65b0\u4eba\u521a\u5b66\u7ebf\u6bb5\u6811\uff0c\u505a\u5b8c\u8fd9\u9053\u9898\u5bf9\u7ebf\u6bb5\u6811\u7684\u8ba4\u8bc6\u66f4\u6df1\u4e86\uff0c\u5199\u4e00\u7bc7\u7eaa\u5ff5\u4e00\u4e0b~\n\u7ebf\u6bb5\u6811\u6700\u91cd\u8981\u7684\u662f\u5bf9$lazy\\_tag$\u7684\u7406\u89e3\u3002\n### \u61d2\u6807\u8bb0\u8bb0\u5f55\u7684\u662f\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\u7684\u72b6\u6001\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u9898\u8f6c\u5316\u4e3a\uff1a\n\n**\u6709\u4e00\u6bb5\u521d\u59cb\u5168\u4e3a$0$\u7684\u533a\u95f4\uff0c\u5206\u522b\u6267\u884c\u5c06\u4e00\u6bb5\u533a\u95f4$[l,r]$\u4e2d\u7684$0$\u53d8\u6210$1$\uff0c$1$\u53d8\u6210$0$\uff0c\u6216\u8005\u6c42\u4e00\u6bb5\u533a\u95f4$[l,r]$\u4e2d$1$\u7684\u4e2a\u6570\u3002**\n\n\u4e8e\u662f\u9898\u76ee\u77ac\u95f4\u7b80\u5355\u4e86\u4e0d\u5c11\uff08\u4e0d\u7528\u5efa\u6811\u4e86~\uff09\u3002\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u533a\u95f4\u6bcf\u64cd\u4f5c\u4e24\u6b21\u5c31\u76f8\u5f53\u4e8e\u6ca1\u6709\u64cd\u4f5c\uff08\u56e0\u4e3a\u628a\u706f\u5173\u4e86\u518d\u6253\u5f00\u76f8\u5f53\u4e8e\u6ca1\u5173\u706f\uff09\uff0c\u6240\u4ee5\u8fd9\u4e2a\u61d2\u6807\u8bb0\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff1a**\u6709\u64cd\u4f5c**\u548c**\u6ca1\u64cd\u4f5c**\uff0c\u66f4\u65b0\u61d2\u6807\u8bb0\u7684\u65f6\u5019\u53ea\u8981\u5c06\u5f53\u524d\u72b6\u6001\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u72b6\u6001\u5c31\u884c\u4e86\u3002\n\n### \u6ce8\u610f\n$0.$\u62ec\u53f7\u91cc\u7684\u4e1c\u897f\u662f\u4ee3\u7801\u4e2d\u5bf9\u5e94\u7684\u51fd\u6570\u3002\n#### $1.$\u66f4\u65b0$(update())$\u7684\u65f6\u5019\u5148\u4e0b\u4f20\u6807\u8bb0\uff0c\u4f20\u5b8c\u4e4b\u540e\u5728\u5f53\u524d\u533a\u95f4\u4e2d\u7684\u64cd\u4f5c\u548c\u8fd9\u4e2a\u6807\u8bb0\u5c31\u6ca1\u6709\u5173\u7cfb\u4e86!\n#### $2.$\u4fee\u6539$(u())$\u65f6\uff0c\u53ea\u6709\u6807\u8bb0\u662f\u6709\u4fee\u6539\u7684\u65f6\u5019\u624d\u4fee\u6539\uff0c\u4fee\u6539\u65f6\u53ea\u9700$ans[k]=(r-l+1)-ans[k]$\u5373\u53ef\uff0c\u8fd9\u4e2a\u5c31\u76f8\u5f53\u4e8e\u5c06\u533a\u95f4\u4e2d\u7684$0$\uff0c$1$\u4e92\u6362\uff0c\u7136\u540e\u6e05\u7a7a\u6807\u8bb0\u3002\n#### $3.$\u67e5\u8be2\u65f6\u9996\u5148\u8fd8\u662f\u8981\u4e0b\u4f20\u6807\u8bb0\uff0c\u4f20\u5b8c\u4e4b\u540e\u5728\u5f53\u524d\u533a\u95f4\u4e2d\u7684\u64cd\u4f5c\u548c\u8fd9\u4e2a\u6807\u8bb0\u5c31\u6ca1\u6709\u5173\u7cfb\u4e86!  \n  \n\u4e0a\u4ee3\u7801\u54af~\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N=100003;\nint n,m,tag[N<<2],ans[N<<2];\n\ninline void getint(int &x){\n\tx=0;char ch;\n\tdo{ch=getchar();}while(!isdigit(ch));\n\twhile(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0',ch=getchar();}\n}\n\ninline int ls(int x){return x<<1;}\ninline int rs(int x){return x<<1|1;}\ninline void u(int &x){x=(x==1?0:1);}\ninline void push_up(int k){ans[k]=ans[ls(k)]+ans[rs(k)];}\ninline void f(int k,int l,int r){\n\tu(tag[k]),ans[k]=(r-l+1)-ans[k];\n}\n\ninline void push_down(int k,int l,int r){\n\tif(!tag[k])\treturn;\n\tint mid=(l+r)>>1;\n\tf(ls(k),l,mid);\n\tf(rs(k),mid+1,r);\n\ttag[k]=0;\n}\n\ninline void update(int k,int l,int r,int x,int y){\n\tif(l>=x&&r<=y){\n\t\tu(tag[k]),ans[k]=(r-l+1)-ans[k];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tpush_down(k,l,r);\n\tif(x<=mid) update(ls(k),l,mid,x,y);\n\tif(y>mid) update(rs(k),mid+1,r,x,y);\n\tpush_up(k);\n}\n\ninline int query(int k,int l,int r,int x,int y){\n\tint ret=0;\n\tif(l>=x&&r<=y)\treturn ans[k];\n\tint mid=(l+r)>>1;\n\tpush_down(k,l,r);\n\tif(x<=mid) ret+=query(ls(k),l,mid,x,y);\n\tif(y>mid) ret+=query(rs(k),mid+1,r,x,y);\n\treturn ret;\n}\n\nint main(){\n\tgetint(n),getint(m);\n\tfor(int i=1;i<=m;++i){\n\t\tint c,a,b;\n\t\tgetint(c),getint(a),getint(b);\n\t\tif(!c)\tupdate(1,1,n,a,b);\n\t\telse printf(\"%d\\n\",query(1,1,n,a,b));\n\t}\t\n\treturn 0;\n}\n```",
        "postTime": 1554991738,
        "uid": 136822,
        "name": "\u5eb7\u5e08\u5085",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\n\u8fd9\u9053\u9898\u8fd8\u53ef\u4ee5\u5de7\u5999\u7684\u7528\u6700\u539f\u59cb\u7684\u533a\u95f4\u4e58\u6cd5\u533a\u95f4\u6c42\u548c\u7684\u7ebf\u6bb5\u6811\u89e3\u51b3\u3002\n\n\u9996\u5148\u8003\u8651\u64cd\u4f5c\u5f00\u5173\u4e24\u6b21\u540e\uff0c\u7b49\u4e8e\u6ca1\u6709\u64cd\u4f5c\u3002\n\n\u4ec0\u4e48\u4e1c\u897f\u64cd\u4f5c\u4e24\u6b21\u4ee5\u540e\u7b49\u4e8e\u6ca1\u64cd\u4f5c\u5462\uff1f\u806a\u660e\u7684\u4f60\u4e00\u5b9a\u4f1a\u60f3\u5230xor\n\n\u4e8b\u5b9e\u4e0a\u5f88\u7b80\u5355\u554a\uff0c\u4e58\u8d1f\u4e00\u5c31\u662f\u4e24\u6b21\u7b49\u4e8e\u6ca1\u6709\u554a\uff01\n\n\u6240\u4ee5\u706d\u7684\u6807\u8bb0\u4e3a-1\uff0c\u4eae\u7684\u6807\u8bb0\u4e3a1\uff0c\u64cd\u4f5c\u7684\u65f6\u5019\u76f4\u63a5\u533a\u95f4\u4e58\u8d1f\u4e00\u5c31\u597d\u4e86\uff01\n\n\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u6c42\u548c\u7684\u65f6\u5019\u4eae\u7684\u548c\u706d\u7684\u4e5f\u4f1a\u4e24\u4e24\u62b5\u6d88\u554a\uff0c\u600e\u4e48\u529e\u561e\uff1f\n\n\u7136\u800c\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u533a\u95f4\u4e00\u5171\u6709\u51e0\u4e2a\u706f\u554a\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u7ec4\n\n\u2235 \u4eae + \u706d = \u533a\u95f4\u957f\u5ea6\uff08B-A+1\uff09\n\n  \u4eae - \u706d = \u533a\u95f4\u548c\uff08sum(A,B)\uff09\n\n\u2234 \u4eae = \uff08 sum(A,B) + B - A + 1 \uff09 / 2\n\n\u7136\u540e\u5c31\u53d8\u6210\u5f7b\u5f7b\u5e95\u5e95\u7684\u5f31\u5316\u7ebf\u6bb5\u68112\u6a21\u677f\u4e86\n\n```\n#include <cstdio>\n\nusing namespace std;\n\ninline int Min( int A , int B ) { return A < B ? A : B ; }\ninline int Max( int A , int B ) { return A > B ? A : B ; }\ninline int Readin() {\n\t\n\tregister int K = 0 ;\n\tregister char C = getchar() ;\n\t\n\tfor( ; C < '0' or C > '9' ; C = getchar() ) ;\n\tfor( ; C >= '0' and C <= '9' ; C = getchar() )\n\t\tK = ( K << 1 ) + ( K << 3 ) + C - '0' ;\n\t\n\treturn K ;\n\t\n}\n\nint N ;\n\nint Tree[800005] , Tag[800005] , L[800005] , R[800005] , Nods ;\n\nvoid Build( int Nod , int A , int B ) {\n\t\n\tL[Nod] = A ;\n\tR[Nod] = B ;\n\tTag[Nod] = 1 ;\n\tTree[Nod] = A - B - 1 ;\n\t\n\tif( A == B ) return;\n\t\n\tBuild( Nod << 1 , A , ( A + B ) >> 1 ) ;\n\tBuild( Nod << 1 | 1 , ( ( A + B ) >> 1 ) + 1 , B ) ;\n\t\n\treturn;\n\t\n}\n\nvoid Down( int Nod ) {\n\t\n\tTag[Nod] = 1 ;\n\t\n\tif( Nod >= N ) return;\n\t\n\tTree[Nod<<1] *= -1 ;\n\tTag[Nod<<1] *= -1 ;\n\tTree[Nod<<1|1] *= -1 ;\n\tTag[Nod<<1|1] *= -1 ;\n\t\n\treturn;\n\t\n}\n\nint Sum( int Nod , int A , int B ) {\n\t\n\tif( L[Nod] > B or R[Nod] < A )\n\t\treturn 0 ;\n\t\n\tif( Tag[Nod] == -1 )\n\t\tDown(Nod) ;\n\t\n\tif( L[Nod] == A and R[Nod] == B )\n\t\treturn Tree[Nod] ;\n\t\n\treturn Sum( Nod << 1 , A , Min( B , R[Nod<<1] ) ) + \n\t\t   Sum( Nod << 1 | 1 , Max( A , L[Nod<<1|1] ) , B ) ;\n\t\n}\n\nvoid Que( int Nod , int A , int B ) {\n\t\n\tif( L[Nod] > B or R[Nod] < A )\n\t\treturn;\n\t\n\tif( Tag[Nod] == -1 )\n\t\tDown(Nod) ;\n\t\n\tif( L[Nod] == A and R[Nod] == B ) {\n\t\tTree[Nod] *= -1 ;\n\t\tTag[Nod] = -1 ;\n\t\treturn;\n\t}\n\t\n\tQue( Nod << 1 , A , Min( B , R[Nod<<1] ) ) ;\n\tQue( Nod << 1 | 1 , Max( A , L[Nod<<1|1] ) , B ) ;\n\t\n\tTree[Nod] = Tree[Nod<<1] + Tree[Nod<<1|1] ;\n\t\n\treturn;\n\t\n}\n\nint main() {\n\t\n\tN = Readin() ;\n\t\n\tfor(register int i = 1 ; i < N ; )\n\t\tif( ( i<<= 1 ) >= N )\n\t\t\tNods = ( ( N = i ) << 1 ) - 1 ;\n\t\n\tBuild( 1 , 1 , N ) ;\n\t\n\tfor(register int M = Readin() ; M-- ; ) {\n\t\tregister int C = Readin() , A = Readin() , B = Readin() ;\n\t\tif(C) printf(\"%d\\n\", ( Sum( 1 , A , B ) + B - A + 1 ) >> 1 ) ;\n\t\telse Que( 1 , A , B ) ;\n\t}\n\t\n\t\n\treturn 0 ;\n\t\n} \n// liang - mie = sum\n// liang + mie = b - a + 1\n// liang = ( sum + b - a + 1 ) / 2\n```\n\n\u6ce8\u610f\uff01\u56e0\u4e3a\u672c\u9898\u5177\u6709\u4e00\u4e9b\u7279\u6b8a\u6027\u8d28\uff08\u6bd4\u5982tag\u53ea\u4f1a\u662f\u00b11\u7b49\u7b49\uff09\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u4ee3\u7801\u5e76\u4e0d\u662f\u6807\u51c6\u7684\u7ebf\u6bb5\u6811\uff01\u7ebf\u6bb5\u6811\u521d\u5b66\u8005\u8bf7\u770b\u5176\u4ed6dalao\u7684\u4ee3\u7801\u3002",
        "postTime": 1537281501,
        "uid": 23323,
        "name": "\u7528\u6237\u5df2\u6ce8\u9500",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "#### \u4f5c\u4e3a\u4e00\u4e2a\u4eceP2574 XOR\u7684\u827a\u672f\u8fc7\u6765\u7684\u540c\u5b66\uff0c\u7a0d\u5fae\u770b\u4e86\u770b\u9898\u9762\u540e\u8868\u793a\u76f8\u5f53\u7684\u6fc0\u52a8\uff0c\n### ~~\u8fd9\u4e0d\u662f\u539f\u9898\u5417~~\n### \u73b0\u5728\u8ba9\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u9898\u610f\uff0c\u4e00\u4e2a\u5927\u7684\u533a\u95f4\uff0c\u521d\u59cb\u503c\u5168\u4e3a0\uff0c\u5f00\u706f\u89c6\u4e3a1,0\u548c1\u7684\u8f6c\u6362\u7528\u5f02\u6216\u5c31\u53ef\u4ee5\u5f88\u597d\u5730\u5b9e\u73b0\u4e86\uff0c\u73b0\u5728\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c1\u3001\u652f\u6301\u533a\u95f4\u91cc\u9762\u6bcf\u4e00\u4e2a\u6570\u5f02\u62161. 2\u3001\u67e5\u8be2\u533a\u95f4\u4e2d\u6709\u591a\u5c11\u4e2a1........\u770b\u5230\u8fd9\uff0c\u5e94\u8be5\u80fd\u731c\u5230\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\u4e86\u5427\uff0c\u4e0d\u4f1a\u7684\u8bf7\u51fa\u95e8\u53f3\u8f6c\u6a21\u677f\u9898\n```\n#include<bits/stdc++.h>\nusing namespace std;\nlong long add[500010],st[500010],a[500010],n,m;//add\u6570\u7ec4\u4e3alazy tag,st\u6570\u7ec4\u4e3a\u7ebf\u6bb5\u6811\ninline long long read(){\n\tlong long w=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tw=(w<<3)+(w<<1)+ch-48;\n\t\tch=getchar();\n\t}\n\treturn w*f;\n}//\u5feb\u8bfb\u7684\u677f\uff08\u6211\u77e5\u9053\u6211\u7684\u76f8\u5f53\u4e11\uff09\ninline int ls(int p){\n\treturn p<<1;\n}\ninline int rs(int p){\n\treturn p<<1|1;\n}//\u5de6\u513f\u5b50\u53f3\u513f\u5b50\ninline void push_up(int p){\n\tst[p]=st[ls(p)]+st[rs(p)];\n\treturn;\n}//\u5411\u4e0a\u66f4\u65b0\ninline void build(int p,int l,int r){\n\tif(l==r) {\n\t\tst[p]=a[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(ls(p),l,mid);\n\tbuild(rs(p),mid+1,r);\n\tpush_up(p);\n\treturn;\n}//\u5efa\u6811\ninline void push_down(int p,int l,int r){\n\tif(add[p]){\n\t\tint len=r-l+1;\n\t\tadd[ls(p)]^=1;\n\t\tadd[rs(p)]^=1;\n\t\tst[ls(p)]=(len-(len>>1))-st[ls(p)];\n\t\tst[rs(p)]=(len>>1)-st[rs(p)];\n\t\tadd[p]=0;\n\t}\n\treturn;\n}\ninline void update(int nl,int nr,int l,int r,int p){\n\tif(nl<=l&&nr>=r){\n\t\tadd[p]^=1;//\u5f00\u5173\u706f\u89c6\u4e3a\u5f02\u6216\n\t\tst[p]=r-l+1-st[p];//\u4e00\u4e2a\u533a\u95f4\u5185\uff0c\u533a\u95f4\u957f\u5ea6\u4e3alen\uff0c\u6709n\u4e2a1\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709len-n\u4e2a0\n\t\treturn;\n\t}\n\tpush_down(p,l,r);//\u4e0b\u79fblazy tag\n\tint mid=(l+r)>>1;\n\tif(nl<=mid) update(nl,nr,l,mid,ls(p));\n\tif(nr>mid) update(nl,nr,mid+1,r,rs(p));\n\tpush_up(p);\n}//\u5c06lazt tag\u5411\u4e0b\u66f4\u65b0\ninline long long query(int nl,int nr,int l,int r,int p){\n\tif(nl<=l&&nr>=r){\n\t\treturn st[p];\n\t}\n\tlong long sum=0;\n\tpush_down(p,l,r);\n\tint mid=(l+r)>>1;\n\tif(nl<=mid) sum+=query(nl,nr,l,mid,ls(p));\n\tif(nr>mid) sum+=query(nl,nr,mid+1,r,rs(p));\n\treturn sum;//\u8be2\u95ee\u8fd9\u4e2a\u7684\u8bdd\u53ea\u8981\u662f\u5199\u8fc7\u7ebf\u6bb5\u6811\u7684\u5e94\u8be5\u662f\u6ca1\u95ee\u9898\u7684\u5427\n}\nint main(){\n\tn=read();\n\tm=read();\n\tint i,j,k;\n\tfor(i=1;i<=n;i++){\n\t\ta[i]=0;\n\t}\n\tbuild(1,1,n);\n\twhile(m--){\n\t\tint type,x,y;\n\t\ttype=read();\n\t\tx=read();\n\t\ty=read();\n\t\tif(type==0) update(x,y,1,n,1);\n\t\tif(type==1){\n\t\t\tlong long ans=query(x,y,1,n,1);\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}\n\t}\n\treturn 0;//\u62dc\u62dc\u4e86\u7a0b\u5e8f\n}\n```\n## \u6700\u540e\u4e00\u4e2a\u5f69\u86cb\uff0c\u505a\u4e86\u8fd9\u4e2a\u518d\u53bb\u505aP2574 XOR\u7684\u827a\u672f\uff0c\u7edd\u5bf9\u5f88\u5feb\u4e50\uff0c~~\u4e00\u4efd\u4ee3\u7801\uff0c\u4e24\u4efd\u7ecf\u9a8c~~",
        "postTime": 1537192853,
        "uid": 106035,
        "name": "\u6e29\u8bcd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u9898\u5c31\u76f4\u63a5\u60f3\u5230\u4e86\u7ebf\u6bb5\u6811\n\u4e8e\u662f\u4fbf\u6253\u4e86\u4e0b\u9762\u8fd9\u6bb5\u7a0b\u5e8f\uff08\u4e0d\u5efa\u6811\u4f1a\u6bd4\u8f83\u77ed\uff09\n\u4f46\u662f\u4ed4\u7ec6\u4e00\u770b\u4ed6\u7684\u6570\u636e\u8303\u56f4\u6211\u4eec\u8fd8\u662f\u9700\u8981\u4e00\u4e9b\u4f18\u5316\n\u5f53\u7136\u672c\u4eba\u5f88\u61d2\u4ea4\u7ed9\u4f60\u4eec\u53bb\u4fee\u6539\n\u5f00\u4e00\u4e2a\u61d2\u6807\u8bb0\u4e0d\u7528\u6bcf\u6b21\u4fee\u6539\n\u9700\u8981\u65f6\u518d\u4fee\u6539\uff0c\u53ef\u4ee5\u9009\u62e9\u5b58\u653e\u91cd\u590d\u6b21\u6570\u7136\u540e\u5230\u67e5\u8be2\u65f6\u518d\u53bb\u5224\u65ad\u82e5\u662f\u5947\u6570\u6b21\u5219\u662f\u4fee\u6539\u6210\u4e3a\u5173\u5076\u6570\u5219\u662f\u4e0d\u53d8\n\u8fd8\u6709\u4e00\u79cdtag\u53ef\u4ee5\u5b58\u5e03\u5c14\u578b\u7136\u540e\u8fdb\u884c\u67e5\u8be2\u65f6\u4e0b\u653e\u5c31\u53ef\u4ee5\u4e86\nchange\u662f\u4fee\u6539\nfind\u662f\u67e5\u8be2\n\u53ef\u4ee5\u591a\u4e00\u4e2aupdata\u4e0b\u653e\n```pascal\nprogram exl;\nvar mm:array[1..400005]of longint;\n n,m,s,e,ans,p,j,i:longint;\n procedure change(k,l,r,x,y:longint);\n var mid:longint;\n begin\n if (r<x)or(l>y) then  exit;\n if (l>=x)and(r<=y)and(l=r)\n then begin\n mm[k]:=1-mm[k];\n exit;\n end;\n if (l>=x)and(r<=y)\n then begin\n mm[k]:=r-l+1-mm[k];\n end;\n mid:=(l+r)div 2;\n change(k*2,l,mid,x,y);\n change(k*2+1,mid+1,r,x,y);\n mm[k]:=mm[k*2]+mm[k*2+1];\n end;\nprocedure find(k,l,r,x,y:longint);\nvar mid:longint;\nbegin\nif (r<x)or(l>y) then exit;\nif (l>=x)and(r<=y) then begin\nans:=ans+mm[k];\nexit;\nend;\nmid:=(l+r)div 2;\n find(k*2,l,mid,x,y);\n find(k*2+1,mid+1,r,x,y);\nend;\nbegin\nassign(input,'c.in');\nassign(output,'c.out');\nreset(input);\nrewrite(output);\nreadln(n,m);\nfor i:=1 to m do\nbegin\nreadln(p,s,e);\nif p=0 then change(1,1,n,s,e);\nif p=1 then begin ans:=0; find(1,1,n,s,e);\nwriteln(ans);\nend;\nend;\nclose(input);\nclose(output);\nend.\n\n```",
        "postTime": 1532607271,
        "uid": 114490,
        "name": "\u545c\u545c\u545cexit\u53bb\u6b7b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\u9898\u89e3\u533a\u7684\u89e3\u6cd5\u4e0d\u662f\u7279\u522b\u5168\u9762\uff0c\u8865\u5145\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u53cd\u8f6c\u64cd\u4f5c\u5c31\u662f\u628a0\u53d8\u62101\uff0c\u628a1\u53d8\u62100\uff0c\u6240\u4ee5\u540c\u65f6\u8bb0\u5f55sum1\u548csum0\uff0c\u53cd\u8f6c\u65f6\u76f4\u63a5swap\u4ea4\u6362\u5c31\u53ef\u4ee5\u4e86\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define re register\n#define MAXN 200001\n#define inf 200001\n#define ll long long\n#define ls rt<<1\n#define rs rt<<1|1\n#define mid (l+r>>1)\nusing namespace std;\nint sum1[MAXN<<1],sum0[MAXN<<1],n,m;\nint rev[MAXN<<1];\ninline void pushup(int rt){sum0[rt]=sum0[ls]+sum0[rs];sum1[rt]=sum1[ls]+sum1[rs];}\ninline void pushdown(int l,int r,int rt)\n{\n\tif(rev[rt]){\n\t\trev[ls]^=1;rev[rs]^=1;\n\t\tswap(sum0[ls],sum1[ls]);\n\t\tswap(sum1[rs],sum0[rs]);\n\t\trev[rt]=0;\n\t}\n}\nvoid build(int l,int r,int rt)\n{\n\tif(l==r){\n\t\tsum0[rt]=1;\n\t\treturn;\n\t}\n\tbuild(l,mid,ls);\n\tbuild(mid+1,r,rs);\n\tpushup(rt);\n}\nvoid update(int L,int R,int l,int r,int rt)\n{\n\tif(L<=l&&R>=r){\n\t\trev[rt]^=1;\n\t\tswap(sum0[rt],sum1[rt]);\n\t\treturn;\n\t}\n\tpushdown(l,r,rt);\n\tif(L<=mid) update(L,R,l,mid,ls);\n\tif(R>mid) update(L,R,mid+1,r,rs);\n\tpushup(rt);\n}\nint query(int L,int R,int l,int r,int rt)\n{\n\tif(L<=l&&R>=r){\n\t\treturn sum1[rt];\n\t}\n\tint ans=0;\n\tpushdown(l,r,rt);\n\tif(L<=mid) ans=query(L,R,l,mid,ls);\n\tif(R>mid) ans+=query(L,R,mid+1,r,rs);\n\treturn ans;\n}\ninline int read()\n{\n\tint x=0,c=1;\n\tchar ch=' ';\n\twhile((ch<'0'||ch>'9')){\n\t\tif(ch=='-') c*=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*c;\n}\nint main()\n{\n\tn=read();m=read();\n\tbuild(1,n,1);\n\tfor(re int i=1;i<=m;i++){\n\t\tint x,y,fl;\n\t\tfl=read(),x=read(),y=read();\n\t\tif(fl==0) update(x,y,1,n,1);\n\t\telse printf(\"%d\\n\", query(x,y,1,n,1));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1531032105,
        "uid": 49223,
        "name": "Victorique",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u6211\u5c31\u662f\u8981\u7528\u7ebf\u6bb5\u6811\uff08\u4e0d\u7ba1\u4f60\u4eec\u7528\u5565\uff09\uff0c\u4e4b\u524d\u7f51\u8d5b\u51fa\u4e86\u8fd9\u4e2a\u9898\u76ee\uff0c\u5f53\u65f6\u5c31\u662f\u8fd9\u4e2a\u9898\u76ee\u3002\u7136\u540e\u5185\u5b58\u5f00\u5c0f\u4e86\u5c31\u6bb5\u9519\u8bef\uff0c\u5f00\u5927\u4e86\u5c31ml\u6c14\u6b7b\u4e2a\u4eba\u3002\u4eca\u5929\u5c45\u7136\u4e00\u53d1\u8fc7\u4e86\u3002\u3002\u3002\u3002\n\u601d\u8def\uff1a\u7528seet\u3010\u3011\u6570\u7ec4\u6765\u6807\u8bb0\u533a\u95f4\u3002\u6bcf\u6b21\u5c06\u6807\u8bb0\u4e0b\u653e\u7684\u65f6\u5019\u4e5f\u5f97\u628a\u4e0b\u653e\u7684\u533a\u95f4\u7ed9\u66f4\u65b0\u4e86\u3002sum\u3010\u3011\u6570\u7ec4\u7531seet\u3010\u3011\u6570\u7ec4\u6765\u4ece\u65b0\u8ba1\u7b97\u3002\u6700\u91cd\u8981\u7684\u662f\u5728\u67e5\u8be2\u7684\u65f6\u5019\u522b\u73a9\u4e86\u4e0b\u653e\u6807\u8bb0\u5c31\u597d\u4e86\u3002\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\uff08\u81ea\u8ba4\u4e3a\u7801\u98ce\u8fd8\u884c\uff0c\u80fd\u770b\u5f97\u61c2\uff09\u3002\n```c\n\n#include<bits/stdc++.h>\n#define MAXN 200005\nusing namespace std;\n\nint seet[MAXN],sum[MAXN];\nint p,q,_sum;\n\nvoid maintain(int o) //\u91cd\u65b0\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u7684\u706f\u7684\u6570\u91cf\n{\n    int Lc=o<<1;\n    int Rc=o<<1|1;\n    sum[o]=sum[Lc]+sum[Rc];\n}\n\nvoid pushdown(int o,int L,int R)  //\u4e0b\u653e\u6807\u8bb0\n{\n    int Lc=o<<1;\n    int Rc=o<<1|1;\n    if(seet[o])                 //\u88ab\u6807\u8bb0\u5c31\u4e0b\u653e\uff0c\u6ca1\u6807\u8bb0\u5c31\u4e0d\u7528\u7ba1\n    {\n        seet[Lc]^=1;\n        seet[Rc]^=1;\n        seet[o]=0;\n        int mid=(L+R)/2;\n        sum[Lc]=(mid-L+1)-sum[Lc];  //\u4e00\u5b9a\u8981\u91cd\u65b0\u8ba1\u7b97\u4e00\u904d\u4e0b\u653e\u5230\u7684\u533a\u95f4\u7684\u503c\n        sum[Rc]=(R-mid)-sum[Rc];\n    }\n}\n\nvoid update(int o,int L,int R)     //\u8fdb\u884c\u66f4\u65b0\n{\n    if(L>=p&&R<=q)\n    {\n        seet[o]^=1;\n        sum[o]=(R-L+1)-sum[o];   //\u91cd\u65b0\u8ba1\u7b97\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\n        return ;\n    }\n    int mid=(L+R)/2;\n    pushdown(o,L,R);              //\u4e0b\u653e\u8282\u70b9\n    if(p<=mid)\n        update(o<<1,L,mid);\n    if(q>mid)\n        update(o<<1|1,mid+1,R);\n    maintain(o);                //\u91cd\u65b0\u8ba1\u7b97\u8fd9\u4e2a\u8282\u70b9\u4fe1\u606f\n}\n\nvoid query(int o,int L,int R)    //\u8fdb\u884c\u67e5\u8be2\n{\n    if(L>=p&&R<=q)\n    {\n        _sum+=sum[o];\n        return ;\n    }\n    int mid=(L+R)/2;\n    pushdown(o,L,R);          //\u4e0b\u653e\u8282\u70b9\n    if(p<=mid)\n        query(o<<1,L,mid);\n    if(q>mid)\n        query(o<<1|1,mid+1,R);\n}\n\nint n,m;\nint op;\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d %d %d\",&op,&p,&q);\n        if(op==0)\n        {\n            update(1,1,n);\n        }\n        else if(op==1)\n        {\n            _sum=0;\n            query(1,1,n);\n            printf(\"%d\\n\",_sum);\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1571114774,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "~~\u84dd\u9898\u771f\u7684\u5f88\u7b80\u5355~~\n\n\u8fd9\u9053\u9898\u4e00\u770b\u5c31\u662f\u7ebf\u6bb5\u6811\u88f8\u9898\n\n\u4f46\u6211\u5f31\u554a\uff0c\u6211\u4e0d\u4f1a\u7ebf\u6bb5\u6811QAQ\n\n\u6240\u4ee5\u5148\u66b4\u529b\u9a97\u4e00\u70b9\u5206\u6570\n\n\u66b4\u529b\u660e\u663e\u662fO\uff08mn\uff09\u7684\uff0c\u6240\u4ee5\u6309\u5e38\u7406\u6765\u8bf4\u80af\u5b9a\u8fc7\u4e0d\u4e86\n\n\u4f46\u662f\u6211\u6709\u4e07\u80fd\u7684register\u52a0\u5feb\u8bfb\u5feb\u5199\u4f18\u5316\uff0c\u5f00O2AC\n\n\u5177\u4f53\u8fc7\u7a0b\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u4e0a\u4ee3\u7801\u5427\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\ninline int read()\n{\n\tchar c=getchar();int x=0;bool f=0;\n\twhile(c<'0'||c>'9') {if(c=='-') f=1;c=getchar();}\n\twhile(c>='0'&&c<='9') {x=x*10+c-'0';c=getchar();}\n\tif(f) x=-x;\n\treturn x; \n}//\u5feb\u8bfb\ninline void write(int x)\n{\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>=10) write(x/10);\n\tputchar(x%10+'0');\n}//\u5feb\u5199\nbool a[100001];\nint main()\n{\n\tint n=read(),m=read();\n\tfor(int re i=1;i<=m;i++)//register \u4f18\u5316\n\t{\n\t\tint x=read(),l=read(),r=read();\n\t\tif(x==0)\n\t\t{\n\t\t\tfor(int re j=l;j<=r;j++)\n\t\t\ta[j]=!a[j];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tint num=0;\n\t\t\tfor(int re j=l;j<=r;j++)\n\t\t\tif(a[j]) num++;\n\t\t\twrite(num);puts(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\u628aj++\u548ci++\u6539++i\u548c++j\u66f4\u5feb\uff0c\u987a\u5e26\u4e00\u63d0\uff0c\u673a\u623f\u91cc\u6709\u4e2a\u4e0d\u5f00O2\u66b4\u529b\u8fc7\u7684\u5927\u4f6c\uff0c%%%%%",
        "postTime": 1569757796,
        "uid": 210579,
        "name": "\u7231\u6ed1\u7a3d\u7684\u849f\u84bb",
        "ccfLevel": 4,
        "title": "\u5173\u4e8e\u66b4\u529b\u8fc7\u84dd\u9898\u7684\u4e00\u4e9b\u601d\u8def"
    },
    {
        "content": "~~\u636e\u8bf4\u8fd9\u9898\u597d\u50cf\u6709\u516d\u500d\u7ecf\u9a8c~~\n\n\u6211\u4eec\u7b80\u5355\u5206\u6790\u4e00\u4e0b\n\n\u6211\u4eec\u4ee4\u706f\u5173\u7740\u7684\u65f6\u5019\u662f0\uff0c\u5f00\u7740\u7684\u65f6\u5019\u662f1\n\n\u521d\u59cb\u6240\u6709\u6570\u90fd\u662f0\n\n\u9898\u76ee\u8981\u6c42\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff0c\u4e00\u79cd\u662f\u533a\u95f4\u5f02\u62161\uff0c\u8fd8\u6709\u4e00\u79cd\u662f\u533a\u95f4\u67e5\u8be21\u7684\u4e2a\u6570\n\n\u8003\u8651\u5230\u6240\u6709\u6570\u4e2d\u53ea\u67090\u548c1\n\n\u6240\u4ee5\u67e5\u8be2\u53ef\u4ee5\u6539\u4e3a\u67e5\u8be2\u533a\u95f4\u548c\n\n\u533a\u95f4\u5f02\u62161\u4e5f\u53ef\u4ee5\u4ece\u533a\u95f4\u548c\u7684\u89d2\u5ea6\u53d6\u8003\u8651\u95ee\u9898\n\n---\n\n\u5047\u8bbe\u6211\u4eec\u539f\u6765\u6709$k$\u4e2a1\uff0c\u533a\u95f4\u957f\u5ea6\u4e3a$l$\n\n\u73b0\u5728\u5c31\u6709$l-k$\u4e2a1\n\n\u6240\u4ee5$sum_{now}=l-sum_{pre}$\n\n\u6807\u8bb0\u4e0b\u4f20\u4e5f\u53ef\u4ee5\u7ef4\u62a4\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u7ef4\u62a4\u4e00\u9897\u7ebf\u6bb5\u6811\u7684\u65f6\u95f4$O(nlogn)$\n\ncode:\n\n```\n#include<bits/stdc++.h>\n\n#define rd(x) x=read()\n#define N 200005 \n \nusing namespace std;\n\nint n,m;\nstruct T{\n\tint l,r,mid,v,tag;\n}t[N<<2];\n\ninline int read()\n{\n    int f=1,x=0;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n    while(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\n    return x*f;\n}\n\nvoid pushdown(int rt,int len)\n{\n\tif(t[rt].tag)\n    {\n        t[rt<<1].tag^=1; \n        t[rt<<1|1].tag^=1;\n        t[rt<<1].v=(len-(len>>1))-t[rt<<1].v;\n        t[rt<<1|1].v=(len>>1)-t[rt<<1|1].v;\n        t[rt].tag=0;\n    }\n}\n\nvoid build(int rt,int l,int r)\n{\n\tint mid=(l+r)>>1;\n\tt[rt].l=l,t[rt].r=r,t[rt].mid=mid,t[rt].tag=0;\n\tif(l==r)\n\t{\n\t\tt[rt].v=0;\n\t\treturn;\n\t}\n\tbuild(rt<<1,l,mid);\n\tbuild(rt<<1|1,mid+1,r);\n\tt[rt].v=t[rt<<1].v+t[rt<<1|1].v;\n}\n\nvoid update(int rt,int l,int r)\n{\n    if(l<=t[rt].l&&t[rt].r<=r)\n    {\n        t[rt].tag^=1;     \n        t[rt].v=t[rt].r-t[rt].l+1-t[rt].v;    \n        return;\n    }\n    pushdown(rt,t[rt].r-t[rt].l+1);\n    if(l<=t[rt].mid)update(rt<<1,l,r);    \n    if(t[rt].mid<r)update(rt<<1|1,l,r);        \n    t[rt].v=t[rt<<1].v+t[rt<<1|1].v; \n}\nint query(int rt,int l,int r)\n{\n    if(l<=t[rt].l&&t[rt].r<=r)return t[rt].v;\n    pushdown(rt,t[rt].r-t[rt].l+1);\n    int sum=0;\n    if(l<=t[rt].mid)sum+=query(rt<<1,l,r); \n    if(t[rt].mid<r)sum+=query(rt<<1|1,l,r);        \n    return sum;\n}\n\nint main()\n{\n\trd(n),rd(m);\n\tbuild(1,1,n);\n\twhile(m--)\n\t{\n\t\tint opt,l,r;\n\t\trd(opt),rd(l),rd(r);\n\t\tif(opt)printf(\"%d\\n\",query(1,l,r));\n\t\telse update(1,l,r);\t\n\t}\n\t\n\treturn 0;\n}\n\n```",
        "postTime": 1565836815,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "# \u5206\u5757\u9898\u89e3\n\u9898\u610f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u5f00\u59cb\u5206\u6790\u505a\u6cd5\u3002\n\n\u5c06\u706f\u5206\u5757\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5757\uff0c\u7ef4\u62a4\u4e24\u4e2a\u6570\u503c$f,sum$\n\n$f(bool):$\u8fd9\u4e2a\u5757\u6709\u6ca1\u6709\u53d6\u53cd\n\n\u6709\u4e86$f$\uff0c\u6211\u4eec\u5c31\u907f\u514d\u8fd9\u4e2a\u5757\u4e4b\u524d\u6574\u5757\u4fee\u6539\u540e\u6709\u9700\u8981\u66b4\u529b\u4fee\u6539\u90e8\u5206\u7684\u5c34\u5c2c\uff0c\u56e0\u4e3a\u76f4\u63a5\u7167\u5e38\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n$sum(int):$\u5728\u4f7f\u7528\u4e86$f$\u7684\u60c5\u51b5\u4e0b\u8fd9\u4e2a\u5757\u6709\u591a\u5c11\u4e2a\u5f00\u7740\u7684\u706f\u3002\n\n\u4fee\u6539\u7684\u65f6\u5019\u6574\u5757\u76f4\u63a5\u4fee\u6539$f$\uff0c\u5757\u90e8\u5206\u66b4\u529b\u5c31\u4fee\u6539$sum$\u548c$a$\u3002\n\n\u8be2\u95ee\u5c31\u6839\u636e$f$\u8fdb\u884c(\u7cbe\u795e)\u53d6\u53cd\u4e4b\u540e\u6574\u5757\u7528$sum$\u7edf\u8ba1\uff0c\u90e8\u5206\u76f4\u63a5\u66b4\u529b\u3002\n\n# $code$\n```cpp\n#include<cstdio>\n#include<cmath>\n#define pos(x) (x-1)/sq+1\n#define N 100010\n#define T 500\nusing namespace std;\nint n,m,l,r,x,sq,t;\nbool a[N],f[T];\nint L[T],R[T],sum[T];\nvoid ycl()\n{\n\tsq=t=sqrt(n);\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\tL[i]=(i-1)*t+1;\n\t\tR[i]=i*t;\n\t}\n\tif(R[t]<n) t++,L[t]=R[t-1]+1,R[t]=n;\n}\nvoid change(int l,int r)\n{\n\tint q=pos(l),p=pos(r);\n\tif(q==p){\n\t\tfor(int i=l;i<=r;i++)\n\t\t\tsum[p]+=1-a[i]*2,a[i]=!a[i];\n\t}\n\telse\n\t{\n\t\tfor(int i=q+1;i<=p-1;i++)\n\t\t  \tf[i]=!f[i];\n\t\tfor(int i=l;i<=R[q];i++)\n\t\t\tsum[q]+=1-a[i]*2,a[i]=!a[i];\n\t\tfor(int i=L[p];i<=r;i++)\n\t\t\tsum[p]+=1-a[i]*2,a[i]=!a[i];\n\t}\n}\nint ask(int l,int r)\n{\n\tint ans=0;\n\tint q=pos(l),p=pos(r);\n\tif(q==p){\n\t\tfor(int i=l;i<=r;i++)\n\t\t  ans+=a[i];\n\t\tif(f[p]) return r-l+1-ans;\n\t\treturn ans;\n\t}\n\telse\n\t{\n\t\tfor(int i=q+1;i<=p-1;i++)\n\t\t    if(f[i]) ans+=R[i]-L[i]+1-sum[i];\n\t\t    else ans+=sum[i];\n\t\tint k=0;\n\t\tfor(int i=l;i<=R[q];i++)\n\t\t\tk+=a[i];\n\t\tif(f[q]) ans+=R[q]-l+1-k;\n\t\telse ans+=k;\n\t\tk=0;\n\t\tfor(int i=L[p];i<=r;i++)\n\t\t\tk+=a[i];\n\t\tif(f[p]) ans+=r-L[p]+1-k;\n\t\telse ans+=k;\n\t}\n\treturn ans;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tycl();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&l,&r);\n\t\tif(x) printf(\"%d\\n\",ask(l,r));\n\t\telse change(l,r);\n\t}\n}\n```",
        "postTime": 1544187156,
        "uid": 52918,
        "name": "QuantAsk",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "## \u5176\u5b9e\u8be5\u9898\u4e3a\u4e00\u9053\u8fd8\u4e0d\u9519\u7684\u5206\u5757\u5165\u95e8\u7ec3\u624b\u9898\n[\u6211\u7684\u5206\u5757\u81ea\u5b66\u7b14\u8bb0](http://note.youdao.com/noteshare?id=55f00476c6d20a54c743909fe271fac7)\n\n\u6211\u4eec\u53ea\u9700\u8981\u67e5\u8be2\u8be5\u70b9\u88ab\u64cd\u4f5c\u8fc7\u5947\u6570\u6b21\u8fd8\u662f\u5076\u6570\u6b21\u5c31\u53ef\u4ee5\u5224\u65ad\u5f53\u524d\u7684\u72b6\u6001,\u8fd9\u4fbf\u662f\u8be5\u9898\u6838\u5fc3\u601d\u60f3,\u73b0\u5728\u6211\u4eec\u5b9a\u4e49add\u4e3a\u589e\u91cf\u6807\u8bb0,sum\u4e3a\u8be5\u533a\u95f4\u5185\u4e3a\u5947\u6570\u7684\u5143\u7d20\u4e2a\u6570\n\n\u73b0\u5728,\u6211\u4eec\u5c06\u6838\u5fc3\u8fdb\u884c\u5206\u5757\u5904\u7406:\n>1:l,r\u5728\u540c\u4e00\u533a\u95f4,\u90a3\u4e48\u53ea\u8981\u8003\u8651\u533a\u95f4\u7684\u589e\u91cf\u6807\u8bb0\u548c\u8be5\u70b9\u64cd\u4f5c\u6b21\u6570\u548c\u662f\u5426\u4e3a\u5947\u6570,\u5373:\nadd[p]+a[i]\n\n>2:l,r\u4e0d\u5728\u540c\u4e00\u533a\u95f4,\u88ab\u5b8c\u6574\u5305\u542b\u7684\u533a\u95f4\u5c31\u5224\u65adadd\u662f\u5426\u4e3a\u5947\u6570,\u5982\u679c\u662f,\u90a3\u4e48\u7b54\u6848\u589e\u52a0\u533a\u95f4(\u5143\u7d20\u6570-sum),\u5426\u5219\u589e\u52a0sum;(\u5947\u6570+\u5947\u6570=\u5076\u6570,\u8fd9\u5f88\u663e\u7136)\n\n>\u4e0d\u88ab\u5b8c\u5168\u5305\u542b\u7684,\u6309\u71671\u5904\u7406\n\n\u5982\u679c\u89c9\u5f97\u6211\u8bed\u8a00\u96be\u61c2,\u90a3\u4e48\u8bf7\u770b\u4ee3\u7801:\n```\n#include<bits/stdc++.h>\nusing namespace std ;\n\nint n,m;\nint L[100086],R[100086];//\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\nint pos[100086];//\u6bcf\u4e2a\u70b9\u5c5e\u4e8e\u7684\u533a\u95f4\nint a[100086],add[100086],sum[100086];\n\ninline int read()\n{\n\tregister int res=0,flag=1;\n\tregister char ch=getchar();\n\twhile(!isdigit(ch))\n\t{\n\t\tif(ch=='-')\n\t\t{\n\t\t\tflag=-1;\n\t\t}\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))\n\t{\n\t\tres=(res<<3)+(res<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn res*flag;\n}\n\ninline void work(register int l,register int r)//\u533a\u95f4\u5185\u64cd\u4f5c\n{\n\tregister int p=pos[l],q=pos[r];\n\tif(p==q)\n\t{\n\t\tfor(register int i=l;i<=r;++i)\n\t\t{\n\t\t\ta[i]++;\n\t\t}\n\t\tfor(register int i=l;i<=r;++i)\n\t\t{\n\t\t\tif(a[i]%2)\n\t\t\t{\n\t\t\t\tsum[p]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum[p]--;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor(register int i=p+1;i<=q-1;++i)\n\t\t{\n\t\t\tadd[i]++;\n\t\t}\n\t\tfor(register int i=l;i<=R[p];++i)\n\t\t{\n\t\t\ta[i]++;\n\t\t}\n\t\tfor(register int i=l;i<=R[p];++i)\n\t\t{\n\t\t\tif(a[i]%2)\n\t\t\t{\n\t\t\t\tsum[p]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum[p]--;\n\t\t\t}\n\t\t}\n\t\tfor(register int i=L[q];i<=r;++i)\n\t\t{\n\t\t\ta[i]++;\n\t\t}\n\t\tfor(register int i=L[q];i<=r;++i)\n\t\t{\n\t\t\tif(a[i]%2)\n\t\t\t{\n\t\t\t\tsum[q]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum[q]--;\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void find(register int l,register int r)//\u67e5\u8be2\n{\n\tregister int p=pos[l],q=pos[r];\n\tregister long long ans=0;\n\tif(p==q)\n\t{\n\t\tfor(register int i=l;i<=r;++i)\n\t\t{\n\t\t\tif((add[p]+a[i])%2)\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t\treturn ;\n\t}\n\telse\n\t{\n\t\tfor(register int i=p+1;i<=q-1;++i)\n\t\t{\n\t\t\tif(add[i]%2)\n\t\t\t{\n\t\t\t\tans+=(R[i]-L[i]+1-sum[i]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans+=sum[i];\n\t\t\t}\n\t\t}\n\t\tfor(register int i=l;i<=R[p];++i)\n\t\t{\n\t\t\tif((a[i]+add[p])%2)\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tfor(register int i=L[q];i<=r;++i)\n\t\t{\n\t\t\tif((a[i]+add[q])%2)\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t\treturn ;\n\t}\n}\n\nint main()\n{\n\tn=read();\n\tm=read();\n\tregister int t=sqrt(n);\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\tL[i]=(i-1)*t+1;\n\t\tR[i]=i*t;\n\t}\n\tif(R[t]<n)\n\t{\n\t\tt++;\n\t\tL[t]=R[t-1]+1;\n\t\tR[t]=n;\n\t}//\u6784\u5efa\u5206\u5757\n\tfor(register int i=1;i<=t;++i)\n\t{\n\t\tfor(register int j=L[i];j<=R[i];++j)\n\t\t{\n\t\t\tpos[j]=i;\n\t\t}\n\t}//\u521d\u59cb\u5316\u6bcf\u4e2a\u70b9\u6240\u5728\u533a\u95f4\n\tfor(register int i=1;i<=m;++i)\n\t{\n\t\tregister int c,x,b;\n\t\tc=read();\n\t\tx=read();\n\t\tb=read();\n\t\tif(c==0)\n\t\t{\n\t\t\twork(x,b);\n\t\t}\n\t\tif(c==1)\n\t\t{\n\t\t\tfind(x,b);\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1543843695,
        "uid": 109821,
        "name": "ALSaoBen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\u90fd\u662f\u5927\u4f6c\uff0c\u533a\u95f4\u4fee\u6539\u7684\u7ebf\u6bb5\u6811\u968f\u4fbf\u5199\u5199\uff0c\u6211\u592a\u849f\u84bb\u4e86\uff0c\u5f04\u4e0d\u61c2\u7ebf\u6bb5\u6811\u7684lazy\u6570\u7ec4\u600e\u4e48\u7528\uff0c\u6240\u4ee5\u53ea\u80fd\u5199\u5206\u5757\u6765\u8fc7\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(N\u221aN)\n\n\u5206\u5757\u5176\u5b9e\u4e5f\u662f\u4e00\u79cd\u66b4\u529b\uff0c\u4f46\u662f\u4e00\u79cd\u5f88\u4f18\u79c0\u7684\u66b4\u529b\uff0c\u5b83\u7684\u4e3b\u8981\u601d\u60f3\u662f\u5427\u6839\u53f7N\u5206\u4e3a\u4e00\u5757\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8981\u5904\u7406\u7684\u533a\u95f4\uff0c\u5b83\u5c06\u4e2d\u95f4\u8de8\u8fc7\u5f97\u5757\u76f4\u63a5\u52a0\u4e0a\u61d2\u6807\u8bb0\uff0c\u5bf9\u4e8e\u4e24\u8fb9\u591a\u51fa\u6765\u7684\u5143\u7d20\u76f4\u63a5\u66b4\u529b\u5904\u7406\u3002\u8fd9\u9898\u64cd\u4f5c1\u64cd\u4f5c2\u90fd\u662f\u8fd9\u6837\u7684\n\n\u8be6\u7ec6\u89e3\u91ca\u89c1\u6211\u7684\u4ee3\u7801(**P\u515a\u798f\u5229\uff01\uff01\uff01**)\n```\nvar\n  a1,a2,a3:longint;\n  ans,tot,block,i,j,m,n,k,p:longint;\n  flag,l,r,point,key:array[0..100005]of longint;\n  a:array[0..100005]of boolean;\nprocedure down(t:longint);//\u5c06\u61d2\u6570\u7ec4\u4e0b\u653e\uff0c\u6e05\u96f6\nvar\n  i:longint;\nbegin\n  for i:=l[t] to r[t] do\n    begin\n      if a[i]=true then dec(key[t])\n      else inc(key[t]);\n      a[i]:=not(a[i]);\n    end;\n  flag[t]:=0;\nend;\nbegin\n  readln(n,m); block:=trunc(sqrt(n)); tot:=0;\n  fillchar(a,sizeof(a),false);\n  for i:=1 to n do\n    begin\n      if i mod block=1 then\n        begin\n          inc(tot); l[tot]:=i;\n        end;\n      if i mod block=0 then\n        r[tot]:=i;\n      point[i]:=tot;\n    end;//l,r\u6570\u7ec4\u662f\u8fd9\u4e2a\u5757\u5de6\u53f3\u8fb9\u754c\u662f\u4ec0\u4e48,point\u6570\u7ec4\u6307\u8fd9\u4e2a\u4f4d\u7f6e\u5c5e\u4e8e\u54ea\u4e2a\u5757\n  if r[tot]=0 then r[tot]:=n;\n  {for i:=1 to tot do\n    writeln(l[i],' ',r[i]);\n  writeln(block);         }\n  for p:=1 to m do\n    begin\n      readln(a1,a2,a3);\n      if a1=0 then\n        begin\n          if point[a2]=point[a3] then//\u5982\u679c\u8981\u5904\u7406\u7684\u533a\u95f4\u5728\u4e00\u4e2a\u5757\u91cc\n            begin\n              if flag[point[a2]] mod 2=1 then\n                down(point[a2]);//\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u88ab\u5173\u5f00\u4e86\u5947\u6570\u6b21\u5c31\u8981\u53d8\n              for i:=a2 to a3 do//\u76f4\u63a5\u66b4\u529b\u4fee\u6539\n                begin\n                  if a[i]=false then\n                    begin a[i]:=true; inc(key[point[a2]]); end\n                  else\n                    begin a[i]:=false; dec(key[point[a2]]); end;\n                end;\n            end\n          else\n            begin\n              if flag[point[a2]] mod 2=1 then//\u5904\u7406\u5de6\u8fb9\u591a\u51fa\u7684\u5143\u7d20\n                down(point[a2]);\n              for i:=a2 to r[point[a2]] do//\u5904\u7406\u5de6\u8fb9\u591a\u51fa\u7684\u5143\u7d20\n                begin\n                  if a[i]=false then\n                    begin a[i]:=true; inc(key[point[a2]]); end\n                  else\n                    begin a[i]:=false; dec(key[point[a2]]); end;\n                end;\n\n              for i:=point[a2]+1 to point[a3]-1 do//\u7ed9\u4e2d\u95f4\u8de8\u8fc7\u5f97\u5757\u76f4\u63a5\u6253\u4e0a\u61d2\u6807\u8bb0\n                inc(flag[i]);\n\n              if flag[point[a3]] mod 2=1 then//\u5904\u7406\u53f3\u8fb9\u591a\u51fa\u7684\u5143\u7d20\n                down(point[a3]);\n              for i:=l[point[a3]] to a3 do//\u5904\u7406\u53f3\u8fb9\u591a\u51fa\u7684\u5143\u7d20\n                begin\n                  if a[i]=false then\n                    begin a[i]:=true; inc(key[point[a3]]); end\n                  else\n                    begin a[i]:=false; dec(key[point[a3]]); end;\n                end;\n            end;\n        end\n      else\n        begin\n          ans:=0;\n          if point[a2]=point[a3] then//\u5728\u4e00\u4e2a\u5757\u91cc\u66b4\u529b\u6c42\u89e3\n            begin\n              if flag[point[a2]] mod 2=1 then\n                down(point[a2]);\n              for i:=a2 to a3 do\n                if a[i]=true then\n                  inc(ans);\n              writeln(ans);\n            end\n          else\n            begin\n              if flag[point[a2]] mod 2=1 then//\u66b4\u529b\u6c42\u89e3\u5de6\u53f3\u8fb9\u591a\u4f59\u5143\u7d20\n                down(point[a2]);\n              for i:=a2 to r[point[a2]] do\n                if a[i]=true then\n                  inc(ans);\n              if flag[point[a3]] mod 2=1 then\n                down(point[a3]);\n              for i:=l[point[a3]] to a3 do\n                if a[i]=true then\n                  inc(ans);\n              for i:=point[a2]+1 to point[a3]-1 do\n              //\u4e2d\u95f4\u8de8\u8fc7\u5f97\u5757\u5982\u679c\u4e0d\u9700\u8981\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u662fkey\u503c\uff0c\n              //\u5982\u679c\u8981\u4fee\u6539\uff0c\u5c31\u662f\u6574\u4e2a\u957f\u5ea6\u51cf\u53bbkey\u503c\uff0c\u8fd9\u91cc\u4e0d\u9700\u8981\u4e0b\u653e\u61d2\u6807\u8bb0\n                if flag[i] mod 2=0 then\n                  ans:=ans+key[i]\n                else\n                  ans:=ans+(r[i]-l[i]+1)-key[i];\n              writeln(ans); \n            end;\n        end;\n    end;\nend.\n```\n**\u5404\u4f4d\u5927\u4f6c\u7ed9\u4e2a\u8d5e\u5427(\u53ef\u601c\u7684\u840c\u65b0)**",
        "postTime": 1532091426,
        "uid": 39488,
        "name": "\u56af\u5440\u56af\u5440",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\u53c8\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u3002\u3002\u3002\n\n\u672c\u9898\u5176\u5b9e\u662f\u4e00\u9053\u88f8\u9898\u3002\u3002\u3002\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e2a\u96be\u5ea6\u6807\u7b7e\u3002\n\n\u601d\u8def\u5f88\u660e\u663e\uff0c\u7528tree[i].val\u8868\u793a\u533a\u95f4\u5185\u5f00\u7740\u7684\u706f\u7684\u6570\u91cf\u3002\n\n\u7136\u540e\u5e38\u89c4\u64cd\u4f5c\uff08\u5efa\u6811\u3001\u67e5\u8be2\u3001\u4fee\u6539\uff09\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6700\u540e\uff1alazy tag\u662f\u4e2a\u597d\u4e1c\u897f\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#define lson pos << 1\n#define rson pos << 1 | 1\nusing namespace std;\n\nconst int maxn = 100100;\n\nint n, m, c, a, b;\n\nstruct node {\n    int l,r;\n    int val;          \n    int lazy;\n} tree[maxn << 2];\n\ninline void Pushup(int pos) {\n    tree[pos].val = tree[lson].val + tree[rson].val;\n}\n\nvoid Pushdown(int pos) {\n    if(tree[pos].lazy) {\n        tree[lson].lazy ^= 1; \n        tree[rson].lazy ^= 1;\n        tree[lson].val = tree[lson].len() - tree[lson].val;\n        tree[rson].val = tree[rson].len() - tree[rson].val;\n        tree[pos].lazy = 0;\n    }\n}\n\nvoid Build(int l, int r, int pos) {  \n    tree[pos].l = l;\n    tree[pos].r = r;\n    tree[pos].val = 0;\n    if(l == r) return ;\n    int mid = (l + r) >> 1;\n    Build(l, mid, lson);\n    Build(mid + 1, r, rson);\n}\n\nvoid Update(int l, int r, int pos) {\n    if(l <= tree[pos].l && tree[pos].r <= r) {\n        tree[pos].val = tree[pos].len() - tree[pos].val;\n        tree[pos].lazy ^= 1;\n        return ;\n    }\n    Pushdown(pos);\n    int mid = tree[pos].mid();\n    if(l <= mid) Update(l, r, lson);\n    if(r > mid) Update(l, r, rson);\n    Pushup(pos);\n}\n\nint Query(int l, int r, int pos) {\n    if(l <= tree[pos].l && tree[pos].r <= r) {\n        return tree[pos].val;\n    }\n    Pushdown(pos);\n    int mid = tree[pos].mid();\n\tint ans = 0;\n    if(l <= mid)  ans += Query(l, r, lson);\n    if(r > mid)   ans += Query(l, r, rson);\n    return ans;\n}\n\nint main() {\n\tcin >> n >> m;\n    Build(1, n, 1);\n    while(m--) {\n    \tcin >> c >> a >> b;\n        if(c == 0) {\n            Update(a, b, 1);\n        } else {\n        \tcout << Query(a, b, 1) << endl;\n        }\n    }\n}\n```\n\n\u8bdd\u8bf4\u56de\u6765\u3002\u3002\u3002\u8fd9\u9053\u9898\u597d\u50cf\u5728\u6d1b\u8c37\u4e0a\u6709\u4e0d\u77e5\u4e00\u9053\u91cd\u9898\uff0c\u53ef\u4ee5n\u500d\u7ecf\u9a8c\u4e86\uff01\uff01",
        "postTime": 1526056172,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "\u53ef\u601c\u7684\u6211\u6628\u5929\u56e0\u4e3a\u8fd9\u4e2a\u4e00\u770b\u662f\u7ebf\u6bb5\u6811\uff0c\u5c31\u76f4\u63a5\u6309\u7167\u67d3\u8272\u6765\u505a\u4e86\uff0c\u5176\u5b9e\u5e94\u8be5\u53d6\u53cd\uff0c\u8ba1\u7b97\u6570\u76ee\u7684\u65f6\u5019\u5e94\u8be5\u7528\u6574\u4f53\uff0c\u51cf\u53bb\u5f53\u524d\u7684\u6570\u76ee\n\ntree[x].f\u8868\u793a\u662f\u5426\u8986\u76d6\u7684\u6807\u8bb0false \u8868\u793a\u8fd8\u6ca1\u6709\u4e0b\u653e\u9700\u8981\u4e0b\u653e\uff0ctrue\u8868\u793a\u4e0b\u653e\u8fc7\u4e86 \u5b9e\u9645\u4e0a\u4e0b\u653e\u7684\u5e94\u8be5\u90fd\u662f\u53cd\u8f6c\u64cd\u4f5c\u800c\u4e0d\u662f\u67d3\u8272\u64cd\u4f5c\u00a0 \u4e00\u5b9a\u8981^1\u56e0\u4e3a\u6211\u6709\u53ef\u80fd\u5bf9\u8fd9\u4e00\u6bb5\u53cd\u590d\u4fee\u6539\u00a0 \u5047\u5982\u518d\u5bf9\u5f53\u524d\u76f8\u540c\u4e00\u6bb5\u5c31\u884c\u64cd\u4f5c\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u4e0b\u653e\u4e86\uff0c\u4e0b\u653e\u7b54\u6848\u53cd\u800c\u9519\u8bef\n\n```cpp\n#include<cstdio>\n#define N 110000\ninline int read(){\n    int x=0;char ch=getchar();\n    while (ch<'0'||ch>'9') ch=getchar();\n    while (ch<='9'&&ch>='0') {x=x*10+ch-'0';ch=getchar();}\n    return x;\n}\nstruct node{\n    bool f;int num,l,r,left,right;\n}tree[N<<2];\nint cnt=0;\nvoid build(int &x,int l,int r){\n    x=++cnt;tree[x].l=l;tree[x].r=r;tree[x].f=true;\n    if (l==r){\n        tree[x].num=tree[x].left=tree[x].right=0;\n        return ;\n    }    \n    int mid=(l+r)>>1;\n    build(tree[x].left,l,mid);build(tree[x].right,mid+1,r);\n}\ninline void pushdown(int x){\n    int l1=tree[x].left,r1=tree[x].right;\n//    tree[l1].f=tree[r1].f=false;\n    tree[l1].f^=1;tree[r1].f^=1;\n    tree[l1].num=tree[l1].r-tree[l1].l+1-tree[l1].num;\n    tree[r1].num=tree[r1].r-tree[r1].l+1-tree[r1].num;\n    tree[x].f=true;\n}\ninline int query(int x,int l,int r){\n    if (l<=tree[x].l&&r>=tree[x].r)return tree[x].num;\n    if (tree[x].f==false) pushdown(x);\n    int mid=(tree[x].l+tree[x].r)>>1;\n    int ans1=0,ans2=0;\n    if (l<=mid) ans1=query(tree[x].left,l,r);\n    if (r>mid) ans2=query(tree[x].right,l,r);\n    return ans1+ans2;\n}\n\ninline void updata(int x){\n    tree[x].num=tree[tree[x].left].num+tree[tree[x].right].num;\n}\ninline void change(int x,int l,int r){\n    if (l<=tree[x].l&&r>=tree[x].r){\n         tree[x].f^=1;\n         tree[x].num=tree[x].r-tree[x].l+1-tree[x].num;\n        return;\n    }\n    if (tree[x].f==false) pushdown(x);\n    int mid=(tree[x].l+tree[x].r)>>1;\n    if (l<=mid) change(tree[x].left,l,r);\n    if (r>mid)    change(tree[x].right,l,r);\n    updata(x);\n}\nint n,m,root,op,a,b;\nvoid print(int x){\n    if (tree[x].left) print(tree[x].left);\n    printf(\"%d %d\\n\",tree[x].l,tree[x].r);\n    if (tree[x].right) print(tree[x].right);\n}\nint main(){\n    //freopen(\"3870.in\",\"r\",stdin);\n//    freopen(\"3870.out\",\"w\",stdout);\n    n=read();m=read();build(root,1,n);\n//    print(root);\n    for (int i=1;i<=m;++i){\n        op=read();a=read();b=read();\n        if (op) printf(\"%d\\n\",query(root,a,b));\n        else change(root,a,b); \n    //    printf(\"%d\\n\",tree[root].num);\n    }\n    \n    return 0;\n}\n```\n<http://elijahqi.win> \u849f\u84bb\u7684\u5c0fblog\n",
        "postTime": 1502933873,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    },
    {
        "content": "# \u6807\u51c6\u7384\u5b66\u5206\u5757\n\n#### \u65f6\u95f4\u590d\u6742\u5ea6O(\u7384\u5b66)\n\n\u5206\u5757\u5927\u5bb6\u5e94\u8be5\u90fd\u660e\u660e\u767d\u767d\uff0c\u674e\u715c\u4e1c\u4e0a\u9762\u8bb2\u5f97\u5f88\u6e05\u695a\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u628a\u6240\u6709\u7684\u706f\u5206\u6210\u82e5\u5e72\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7\u230a\u221aN\u230b\u7684\u6bb5\uff0c\u5176\u4e2d\u7b2c i \u6bb5\u5de6\u7aef\u70b9\u4e3a (i-1)\u230a\u221aN\u230b+1 ,\u53f3\u7aef\u70b9\u4e3a min(i\u230a\u221aN\u230b,N)\u3002\n\n\u53e6\u5916\uff0c\u9884\u5904\u7406\u5904\u6570\u7ec4 sum \uff0c\u5176\u4e2d sum[i] \u8868\u793a\u7b2c i \u6bb5\u7684\u533a\u95f4\u548c\u3002\u8bbe add[i] \u8868\u793a\u7b2c i \u6bb5\u7684\u201c\u53d8\u5316\u6807\u8bb0\u201d\uff08\u4e3a 1 \u5219\u8868\u793a\u6574\u6bb5\u90fd\u6539\u53d8\u8fc7\uff0c\u4e3a 0 \u5219\u8868\u793a\u6ca1\u6709\u53d8\u5316\uff09\uff0c\u8d77\u521d add[i] = 0.\n\n\u5bf9\u4e8e\u6307\u4ee4\u201c0 a b\u201d\uff1a\n\n\t1.\u82e5 l \u4e0e r \u540c\u65f6\u5904\u4e8e\u7b2c i \u6bb5\u5185\uff0c\u5219\u76f4\u63a5\u628a A[l],A[l+1],\u2026,A[r] \u90fd\u52a0 d \uff0c\u540c\u65f6\u5148\u6e05\u96f6 sum[i] \u518d\u91cd\u65b0\u8ba1\u7b97 sum[i] \u7684\u503c\u3002\n    \n   2.\u5426\u5219\uff0c\u8bbe l \u5904\u4e8e\u7b2c p \u6bb5\uff0c r \u5904\u4e8e\u7b2c q \u6bb5\u3002\n   \n   \uff081\uff09\u5bf9\u4e8e i \u2208[p+1,q-1]\uff0c\u4ee4 add[i]^=1\u3002\n   \n   \uff082\uff09\u5bf9\u4e8e\u5f00\u5934\u3001\u501f\u5c3e\u4e0d\u8db3\u4e00\u6574\u6bb5\u7684\u4e24\u90e8\u5206\uff0c\u6309\u7167\u4e0e\u7b2c1\u4e2d\u60c5\u51b5\u76f8\u540c\u7684\u65b9\u6cd5\u6734\u7d20\u5730\u66f4\u65b0\u3002\n\n\u5bf9\u4e8e\u6307\u4ee4\u201c1 a b\u201d\uff1a\n\t\n    1.\u82e5 l \u4e0e r \u540c\u65f6\u5904\u4e8e\u7b2c i \u6bb5\u5185\uff0c\u5bf9\u4e8ei\u2208[l,r]\uff0ca[i]^add[l]\u7684\u548c\u5c31\u662f\u7b54\u6848\u3002\n    \n    2.\u5426\u5219\uff0c\u8bbe l \u5904\u4e8e\u7b2c p \u6bb5\uff0c r \u5904\u4e8e\u7b2c q \u6bb5\uff0c\u521d\u59cb\u5316 ans=0 \u3002\n    \n    \uff081\uff09\u5bf9\u4e8e i \u2208[p+1,q-1]\uff0cans+=sum[i]\u3002\n    \uff082\uff09\u5bf9\u4e8e\u5f00\u5934\u3001\u501f\u5c3e\u4e0d\u8db3\u4e00\u6574\u6bb5\u7684\u4e24\u90e8\u5206\uff0c\u6309\u7167\u4e0e\u7b2c1\u4e2d\u60c5\u51b5\u76f8\u540c\u7684\u65b9\u6cd5\u6734\u7d20\u5730\u7d2f\u52a0\u3002\n    \n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO((N+Q)*\u221aN)\u3002\n\n~~\u6ce8\uff1a\u5927\u90fd\u6765\u81ea\u674e\u715c\u4e1c~~\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint sum[100001],a[100001],add[100001],pos[100001];\nint flag;\nvoid change(int l,int r)//\u66f4\u6539\u64cd\u4f5c \n{\n\tint p=pos[l],q=pos[r];\n\tfor(int i=l;i<=min(r,p*flag);i++)\n\t{\n\t\tsum[p]-=a[i]^add[p];\n\t\ta[i]^=1;\n\t\tsum[p]+=a[i]^add[p];\n\t}//\u5de6\u8fb9\u4e0d\u8db3\u4e00\u6574\u6bb5\u90e8\u5206 \n\tif(p!=q)//\u53f3\u8fb9\u4e0d\u8db3\u4e00\u6574\u6bb5\u90e8\u5206\n\t\tfor(int i=(q-1)*flag+1;i<=r;i++)\n\t\t{\n\t\t\tsum[q]-=a[i]^add[q];\n\t\t\ta[i]^=1;\n\t\t\tsum[q]+=a[i]^add[q];\n\t\t}\n\tfor(int i=p+1;i<=q-1;i++)\n\t{\n\t\tadd[i]^=1;\n\t\tsum[i]=flag-sum[i];\n\t}\n}\nint ask(int l,int r)\n{\n\tint ans=0;\n\tint p=pos[l],q=pos[r];\n\tfor(int i=l;i<=min(r,p*flag);i++)\n\t\tans+=a[i]^add[p];//\u5de6\u8fb9\u4e0d\u8db3\u4e00\u6574\u6bb5\u90e8\u5206\n\tif(p!=q)//\u53f3\u8fb9\u4e0d\u8db3\u4e00\u6574\u6bb5\u90e8\u5206\n\t\tfor(int i=(q-1)*flag+1;i<=r;i++)\n\t\t\tans+=a[i]^add[q];\n\tfor(int i=p+1;i<=q-1;i++)\n\t\tans+=sum[i];\n\treturn ans;\n}\nint main()\n{\n\tint n,m;\n\tint a,b,c;\n\tscanf(\"%d%d\",&n,&m);\n\tflag=sqrt(n);//\u221aN \n\tfor(int i=1;i<=n;i++)\n\t\tpos[i]=(i-1)/flag+1;//\u521d\u59cb\u5316 \n\twhile(m--)\n\t{\n\t\tscanf(\"%d%d%d\",&c,&a,&b);\n\t\tif(c)cout<<ask(a,b)<<endl;\n\t\telse change(a,b);\n\t}\n\treturn 0;\n}\n```\n\u770b\u4e0d\u61c2\u7684\u79c1\u4fe1\u6211\u54e6~\n\n\u6700\u8fd1\u5b66\u4e60\u538b\u529b\u6709\u70b9\u5927\uff0c\u56e0\u4e3a\u8111\u62bd\u6253\u9519\u7684\u9898\u89e3\u9887\u591a\uff0c\u5e0c\u671b\u5927\u5bb6\u591a\u591a\u5305\u6db5",
        "postTime": 1551946257,
        "uid": 93488,
        "name": "Porsche",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3870 \u3010[TJOI2009]\u5f00\u5173\u3011"
    }
]