[
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u81ea\u5df1\u770b\u53bb...\n\n\n\u9898\u89e3\uff1a\u505a\u4e86\u4e00\u4e0b\u5348...\u672c\u849f\u84bb\u7acb\u5fd7\u8981\u5199\u5168\u7f51\u6700\u8be6\u7ec6\u7684\u9898\u89e3\u3002\u256d(\u256f^\u2570)\u256e\n\n\n\nbegin....\n\n\u66b4\u529b70\u5206\u3002\u53ef\u4ee5\u8ba9\u7a7a\u683c\u5b50\u5230\u5904\u4e71\u8d70\uff0c\u53ea\u8981\u67d0\u4e2a\u72b6\u6001\u7684\u6307\u5b9a\u683c\u5b50\u5230\u76ee\u6807\u683c\u5b50\uff0c\u90a3\u4e48\u6b64\u65f6\u7684\n\n\n\u6b65\u6570\u5c31\u662f\u6700\u5c0f\u7684\u5566\u3002\n\n\nps\uff1a\u4e00\u5f00\u59cb\u6211\u5199\u7684bfs...\u5199\u5230\u4e00\u534a\u4e0d\u4f1a\u8bb0\u5f55\u72b6\u6001..\u540e\u6765\u770b\u9898\u89e3\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u7a7a\u683c\u5b50\u548c\u6307\u5b9a\u68cb\u5b50\n\n\n\u7684\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u5566\u3002\u5176\u4ed6\u7684\u68cb\u5b50\u90fd\u4e0d\u53d8\u3002\u66b4\u529b\u4ee3\u7801\u540e\u9762\u4f1a\u7ed9\u51fa\u3002\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5462\u5c31\u662fq\u6b21\u8be2\u95ee\uff0c\u52a0\u4e0a\u7a7a\u683c\u5b50\u548c\u6307\u5b9a\u683c\u5b50\u7684\u4f4d\u7f6e\u5c31\u662fO(q(nm)^2)\u3002\n\n\n\u6b63\u89e3\u5462..emmm...\u7ec4\u7ec7\u4e00\u4e0b\u8bed\u8a00...orz...\n\n\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u5728\u4e00\u5f20\u56fe\u4e0a\u8fdb\u884cq\u6b21\u8be2\u95ee..\u6bcf\u6b21\u90fd\u8fdb\u884cbfs\uff0c\u90a3\u4e5f\u592a\u6d6a\u8d39\u65f6\u95f4\u4e86 \u3002\n\n\n\u800c\u4e14\uff0c\u8d2a\u5fc3\u7684\u60f3\uff0c\u8981\u60f3\u8ba9\u6307\u5b9a\u68cb\u5b50\u5230\u76ee\u6807\u4f4d\u7f6e\uff0c\u4e00\u5b9a\u8981\u8ba9\u7a7a\u683c\u5b50\u5230\u6307\u5b9a\u68cb\u5b50\u5468\u56f4\u5427\u3002\u6240\u4ee5\u5728\u4e00\u5806\n\n\n\u6307\u5b9a\u68cb\u5b50\u548c\u7a7a\u683c\u5b50\u7684\u72b6\u6001\u4e2d\uff0c\u53ea\u6709\u7a7a\u683c\u5b50\u5728\u6307\u5b9a\u68cb\u5b50\u56db\u5468\u7684\u72b6\u6001\u662f\u6709\u7528\u7684\u3002\u6240\u4ee5\u6211\u4eec\u628a\u8fd9\u4e9b\u72b6\u6001\n\n\n\u7ed9\u62bd\u79bb\u51fa\u6765\u3002\n\n\n\u6709\u7528\u72b6\u6001\uff1a\u7a7a\u683c\u5b50\u5728\u6307\u5b9a\u68cb\u5b50\u7684\u4e0a\u4e0b\u5de6\u53f3\u3002\n\n\n\u6709\u7528\u72b6\u6001\u7684\u540e\u7ee7\u72b6\u6001\uff1a\n\n\n(1)\u672c\u6765\u7a7a\u683c\u5b50\u5728\u6307\u5b9a\u68cb\u5b50\u4e0a\u4e0b\u5de6\u53f3\u7684\u72b6\u6001\u7684\u540e\u7ee7\u53ef\u4ee5\u662f\u7a7a\u683c\u5b50\u8fd8\u662f\u5728\u68cb\u5b50\u7684\u4e0a\u4e0b\u5de6\u53f3\uff0c\n\n\n\u4e5f\u5c31\u662f\u7a7a\u683c\u5b50\u56f4\u7740\u6307\u5b9a\u683c\u5b50\u8f6c\u3002\n\n\n\u8fd9\u4e2a\u6b65\u6570\u7528bfs\u8ba1\u7b97\u3002\n\n\n(2)\u672c\u6765\u7a7a\u683c\u5b50\u5728\u6307\u5b9a\u68cb\u5b50\u4e0a\u4e0b\u5de6\u53f3\u7684\u540e\u7ee7\u72b6\u6001\u662f\u7a7a\u683c\u5b50\u4e0e\u6307\u5b9a\u68cb\u5b50\u4ea4\u6362\u4e86\u4f4d\u7f6e\u3002\u6b65\u6570\u4e3a1\u3002\n\n\n\u8bb0\u5f55\u72b6\u6001\uff1a\u6211\u4eec\u77e5\u9053\u4e86\u8fd9\u4e9b\u72b6\u6001\u600e\u4e48\u8bb0\u5f55\u5462\uff1f\n\n\n\u5c31\u662f\u7ed9\u68cb\u76d8\u91cd\u65b0\u6807\u53f7\u3002\u4e0d\u662fn\\*m\u7684\u68cb\u76d8\u4ece\u7b2c\u4e00\u884c\u5230\u6700\u540e\u4e00\u884c1.2.3.4.5...\u3002\u800c\u662f\u5bf9\u72b6\u6001\u8fdb\u884c\u6807\u53f7\u3002\n\n\n\u5bf9\u4e8e\u67d0\u4e2a\u68cb\u5b50\uff0c\u5047\u8bbe\u5230\u5b83\u7684\u6807\u53f7\u4e3ak\uff0c\u90a3\u4e48\u5047\u8bbe\u5b83\u4e3a\u6307\u5b9a\u68cb\u5b50\u7684\u4f4d\u7f6e\uff0c\u5f53\u7a7a\u683c\u5b50\u5728\u5b83\u4e0a\u9762\u65f6\uff0c\u8fd9\u4e2a\n\n\n\u72b6\u6001\u4e3ak+1,\u4e0b\u9762\u65f6k+2..\u5de6\u8fb9k+3,\u53f3\u8fb9k+4,\u518d\u4e0b\u4e00\u4e2a\u68cb\u5b50\uff0c\u5f53\u7a7a\u683c\u5b50\u5728\u5b83\u4e0a\u9762\u65f6k+5\uff0c\u4e0b\u9762\u65f6k+6..\n\n\n\u5148\u7406\u89e3\u6807\u53f7\u662f\u600e\u6837\u7684\uff0c\u540e\u9762\u518d\u8be6\u7ec6\u8bb2\u600e\u6837\u6807\u53f7\u3002\n\n\n\u8ba9\u72b6\u6001\u8fde\u7eed\uff1a\u4e0a\u9762\u7684\u4e8b\u60c5\u5e72\u5b8c\u6211\u4eec\u5f97\u5230\u7684\u53ea\u662f\uff0c\u5982\u679c\u5f53\u524d\u683c\u5b50\u662f\u6307\u5b9a\u683c\u5b50\uff0c\u7a7a\u683c\u5b50\u5728\u5b83\u7684\u4e0a/\u4e0b/\u5de6/\u53f3/\n\n\n\u7136\u540e\u53bb\u5b83\u4e0a/\u4e0b/\u5de6/\u53f3\u7684\u6b65\u6570\u6216\u7a7a\u683c\u5b50\u4e0e\u5b83\u4ea4\u6362\u7684\u6b65\u6570\u3002\u4f46\u662f\u8fd9\u4e9b\u72b6\u6001\u662f\u4e0d\u8fde\u7eed\u7684\u3002\u6240\u4ee5\u6211\u4eec\u8981\u7528\u8fb9\u628a\u5b83\u8fde\u8d77\u6765\u3002\n\n\n\u5c31\u5f62\u6210\u56fe\u5566\u3002\u4f60\u5c31\u4f1a\u5f97\u5230\u4e0b\u9762\u8fd9\u4e48\u4e00\u5768\u4e1c\u897f\u3002\n\n\n![](http://images2017.cnblogs.com/blog/1131150/201710/1131150-20171018195659193-1736575467.png)\n\n\n\u5f53\u7136\u8fd9\u5f20\u56fe\u8fd8\u6ca1\u753b\u5b8c\uff0c\u4e0d\u662f\u4e4b\u524d\u8bf4\u72b6\u6001\u4e0d\u8fde\u7eed\u4e48?\u6211\u8fd8\u6ca1\u6709\u753b\u4e0a\u7a7a\u683c\u5b50\u548c\u6307\u5b9a\u68cb\u5b50\u4ea4\u6362\u4f4d\u7f6e\u7684\u7ebf\u5462\u3002\n\n\n![](http://images2017.cnblogs.com/blog/1131150/201710/1131150-20171018200106599-893977429.png)\n\n\n\u7136\u540e\u56fe\u5c31\u8fde\u901a\u4e86...\n\n\n\u7136\u540e\u8dd1spfa\u6c42\u6700\u77ed\u8def\u5f84...\n\n\n\u53ea\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u7ec8\u70b9\u4e00\u5b9a\u5728\u56fe\u4e0a\u4e86\uff0c\u4f46\u662f\u8d77\u70b9\u53ef\u80fd\u4e0e\u56fe\u9694\u7edd\u3002\n\n\n\u9996\u5148\u7ec8\u70b9\u72b6\u6001\u662f\u4ec0\u4e48\uff0c\u5c31\u662f\u7a7a\u683c\u5b50\u5728tx,ty\u56db\u5468\u3002\u6240\u4ee5\u4e00\u5b9a\u5728\u56fe\u4e0a\u3002\n\n\n\u4f46\u662f\u53ef\u80fd\u8d77\u70b9sx,sy\u5468\u56f4\u6ca1\u6709\u7a7a\u683c\u5b50\uff0c\u6240\u4ee5\u5148\u8ba9\u7a7a\u767d\u683c\u5230\u6307\u5b9a\u683c\u5468\u56f4\uff0c\u7136\u540e\u6211\u4eec\u5c31\u6c42\u51fa\n\n\n\u7a7a\u767d\u683c\u5230\u6307\u5b9a\u683c\u5468\u56f4\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u8fd8\u662fbfs\u3002\n\n\n\u597d\u3002\u73b0\u5728\u7406\u4e00\u4e0b\u601d\u8def\u3002\n\n\n\u7531\u4e8e\u53ea\u6709\u5f53\u7a7a\u767d\u683c\u5728\u6307\u5b9a\u683c\u5468\u56f4\u72b6\u6001\u624d\u6709\u7528\uff0c\u6211\u4eec\u8981\u62bd\u79bb\u51fa\u6709\u7528\u72b6\u6001\u3002\n\n\n\u5bf9\u4e8e\u6307\u5b9a\u68cb\u5b50\u53ef\u80fd\u5f85\u5f97\u5730\u65b9\u90fd\u62bd\u79bb\u72b6\u6001\u5e76\u8ba1\u7b97\u51fa\u540e\u7ee7\u72b6\u6001\u30020,1,2,3\uff0c\u8868\u793a\u7a7a\u767d\u683c\u5230\u6307\u5b9a\u683c\u7684\u65b9\u5411\uff0c\u4e0b\u9762\u8be6\u7ec6\u8bb2\u3002\n\n\n\n```cpp\n    for(int i=1;i<=n;i++)\n     for(int j=1;j<=m;j++)\n      if(map[i][j]){\n          if(map[i-1][j])bfs(i-1,j,i,j,0);\n          if(map[i][j+1])bfs(i,j+1,i,j,1);\n          if(map[i+1][j])bfs(i+1,j,i,j,2);\n          if(map[i][j-1])bfs(i,j-1,i,j,3);\n      }\n```\n\u6807\u53f7 0 1 2 3\u8868\u793a\u7a7a\u683c\u5b50\u5728\u6307\u5b9a\u68cb\u5b50\u7684\u4e0a\u53f3\u4e0b\u5de6\uff0c\u8fd9\u6837\u65b9\u4fbf\u7ed9\u72b6\u6001\u6807\u53f7\u3002\n\n\u800c\u4e14\u5728\u5199mx[4]={...}\uff0cmy[4]={...}\u4e5f\u8981\u5bf9\u5e94\u4e0a\u53f3\u4e0b\u5de6\u3002\n\n\n\u4e5f\u65b9\u4fbf\u8fde\u63a5\u7a7a\u683c\u5b50\u548c\u6307\u5b9a\u683c\u5b50\u4ea4\u6362\u4f4d\u7f6e\u65f6\u7684\u8fb9\uff0c\u770b\u4e0b\u9762\u4ee3\u7801\u3002\n\n\n\u6784\u56fe\u3002\u76ee\u7684\u662f\u8ba9\u72b6\u6001\u8fde\u7eed\uff0c\u8ba9\u72b6\u6001\u79f0\u4e3a\u70b9\uff0c\u8fb9\u6743\u4e3a\u72b6\u6001\u8f6c\u79fb\u7684\u6b65\u6570\uff0c\u5c31\u662f\u4e0a\u9762\u7684\u56fe\u4e0a\u8fde\u7684\u8fb9\u3002\n\n\n\n\n\n```cpp\npre_dis[x][y]\u8868\u793a\u7a7a\u683c\u5b50\u5230(x,y)\u7684\u6700\u5c0f\u6b65\u6570\u3002\nvoid bfs(int ex,int ey,int sx,int sy,int d){\n    memset(pre_dis,-1,sizeof(pre_dis));\n    pre_dis[ex][ey]=0;pre_dis[sx][sy]=1;\n    Node now,nxt;now.x=ex;now.y=ey;\n    while(!q.empty())q.pop();\n    q.push(now);\n    while(!q.empty()){\n        now=q.front();q.pop();\n        int x=now.x,y=now.y;\n        for(int i=0;i<4;i++){\n            int xx=x+mx[i],yy=y+my[i];\n            if(xx<1||xx>n||yy<1||yy>m||!map[xx][yy]||pre_dis[xx][yy]!=-1)continue;\n            pre_dis[xx][yy]=pre_dis[x][y]+1;\n            nxt.x=xx;nxt.y=yy;\n            q.push(nxt);    \n        }\n    }\n    if(d==4)return;\n    int id=get_id(sx,sy);\n    for(int i=0;i<4;i++)\n     if(pre_dis[sx+mx[i]][sy+my[i]]>0)\n       add(id+d,id+i,pre_dis[sx+mx[i]][sy+my[i]]);\n    add(id+d,get_id(ex,ey)+(d+2)%4,1); //\u8fd9\u662f\u8ba9\u7a7a\u683c\u548c\u6307\u5b9a\u683c\u4ea4\u63620123\u6807\u53f7\u7684\u5999\u5904\n}\n```\nspfa\u6700\u77ed\u8def \u8d77\u70b9\u53ef\u80fd\u4e0d\u5728\u56fe\u4e2d\uff0c\u518d\u8dd1bfs\u8fde\u8fb9\u3002\n\n\u6700\u540e\u7684\u76ee\u6807\u72b6\u6001\u5c31\u662f\u6307\u5b9a\u68cb\u5b50\u5728tx,ty\uff0c\u7136\u540e\u679a\u4e3e\u7a7a\u683c\u5b50\u5728tx,ty\u7684\u4e0a\u4e0b\u5de6\u53f3\u6c42\u6700\u5c0f\u3002\n\n\n\u4ee3\u7801\u5c31\u4e0d\u7ed9\u4e86\u3002\n",
        "postTime": 1508330613,
        "uid": 49431,
        "name": "xun\u85b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "###**\u601d\u8def:**\n\n\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u505a\u8fd9\u9898:\n\n\u2460\u7075\u6d3b\u6539\u53d8\u72b6\u6001\u8868\u793a\u65b9\u6cd5\uff0c\u6574\u5408\u65e0\u7528\u72b6\u6001\uff0c\u51cf\u5c11\u65e0\u7528\u72b6\u6001\n\n\u2461\u5c06\u72b6\u6001\u62bd\u79bb\uff0c\u6784\u56fe\uff0c\u8f6c\u5316\u4e3a\u56fe\u8bba\u95ee\u9898\n\n**\u6545:\u6b63\u786e\u7684\u6b65\u9aa4\u4e3a**\n\n\u7b2c\u4e00\u6b65\uff0c\u62bd\u79bb\u6709\u7528\u72b6\u6001\n\n\u7b2c\u4e8c\u6b65\uff0c\u6709\u7528\u72b6\u6001\u4e0e\u6709\u7528\u7684\u540e\u7ee7\u72b6\u6001 \u8fde\u8fb9\u6784\u56fe\uff0c\n\n\u8fb9\u6743\u4e3a\uff1a\u7531\u6709\u7528\u72b6\u6001 \u5230 \u540e\u7ee7\u72b6\u6001 \u6240\u9700\u7684\u6700\u5c0f\u6b65\u6570\n\n\u7b2c\u4e09\u6b65\uff0c\u521d\u59cb\u72b6\u6001 \u5230 \u76ee\u6807\u72b6\u6001 \uff0c\u8dd1\u6700\u77ed\u8def\uff08\u6700\u597d\u662f\u8dd1spfa\uff09\n\n###**\u6280\u5de7:**\n\n\u6211\u4eec\u53ef\u4ee5\u75280,1,2,3\u5206\u522b\u8868\u793a\u7a7a\u767d\u683c\u5728\u6307\u5b9a\u683c\u7684\u4e0a\u53f3\u4e0b\u5de6\n\n\u72b6\u6001=\uff08\uff08\u884c\u53f7-1\uff09\\*\u5217\u6570+\uff08\u5217\u53f7-1\uff09\uff09\\*4+ 0/1/2/3\n\nint numbers(int i,int j) { return (i-1)\\*m+j-1<<2; } \u72b6\u6001=number(x,y)+0/1/2/3\n\n\u5176\u5b9e\u6240\u6709\u7f51\u683c\u56fe\u4e2d\u7684\u72b6\u6001\u90fd\u53ef\u4ee5\u91c7\u53d6\u7c7b\u4f3c\u7684\u65b9\u6cd5\n\n\u72b6\u6001\u7f16\u53f7= \u56fe\u4e2d\u7f16\u53f7\\* S+ x \uff0cx\u2208[0\uff0cS) S=\u6bcf\u79cd\u7f16\u53f7\u72b6\u6001\u6570\n\n\u6240\u4ee5\u5728\u5b9a\u4e49dx\u6570\u7ec4\u8ddfdy\u6570\u7ec4\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u4e00\u4e00\u5bf9\u5e94!!!\n\n###**\u5751\u70b9:**\n\n\u2460\u5982\u4e0a\u6280\u5de7\u6240\u8ff0\uff1a\n\n\u5728\u5b9a\u4e49dx\u6570\u7ec4\u8ddfdy\u6570\u7ec4\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u4e00\u4e00\u5bf9\u5e94!!!\u4e0d\u7136\u5f88\u5403\u4e8f...\n\n\u2461\u5199n,m\u5343\u4e07\u4e0d\u8981\u5199\u53cd\u4e86...\u5199\u53cd\u4e86\u5f88\u5c34\u5c2c,\u8bfb\u4e0d\u8fdb\u53bb...\u867d\u7136\u662f\u53ef\u4ee5\u68c0\u67e5\u51fa\u6765,\u4e0d\u8fc7\u8fd9\u4e2a\u771f\u7684\u5f88\u81f4\u547d!!!!\n\n\u2462\u5728\u8fdb\u884c\u8fde\u8fb9\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u8fd8\u6709\u7b2c\u56db\u79cd\u540e\u7ee7\u72b6\u6001\uff1a\n\n\u5c31\u662f\u7a7a\u767d\u683c\u4e0e\u6307\u5b9a\u683c\u7684\u4f4d\u7f6e\u4e92\u6362\n\n\u6211\u4f7f\u7528\u7684\u662f\u4e0a\u53f3\u4e0b\u5de6\u8fd9\u6837\u7684dx\uff0cdy\uff0c\u6240\u4ee5\u7b2c\u56db\u79cd\u72b6\u6001\u7684\u8f6c\u6362\u5c31\u7b80\u5355\u7684\u53d8\u4e3a{\u7a7a\u767d\u683c\u7684numbers+\uff08d+2\uff09%4}  ps\uff1ad\u662f\u679a\u4e3e\u7684\u521d\u59cb\u72b6\u6001\u7a7a\u767d\u683c\u76f8\u5bf9\u4e8e\u6307\u5b9a\u683c\u7684\u65b9\u5411\u3002\n\n\u9664\u6b64\u4e4b\u5916\u7684\u72b6\u6001\u7528\u6307\u5b9a\u683c\u7684numbers+d\u5373\u53ef\n\n###**\u4ee3\u7801:**\n\n\u56e0\u4e3a\u6211\uff08sa\uff09\u7ec6\uff08fu\uff09\u5fc3\uff08fu\uff09\u7684\u6572\u4e86\u597d\u591a\u6ce8\u91ca\uff0c\u5feb\u5938\u6211\u5feb\u5938\u6211=w=\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n#define INF 0x7fffffff\nusing namespace std;\n\nconst int Maxt = 32;\nconst int Maxn = 3610;\nconst int Maxm = Maxn * 5;\nint n,m,p;\nbool a[Maxt][Maxt],vis[Maxn];\nint dx[4] = {-1,0,1, 0},\n    dy[4] = { 0,1,0,-1};\nint predis[Maxt][Maxt],dis[Maxn];\n\nstruct game {\n    int next,to,w;\n}e[Maxm];\nint top,head[Maxn];\nvoid add(int u,int v,int val) {\n    top++;\n    e[top].to=v;\n    e[top].w=val;\n    e[top].next=head[u];\n    head[u]=top;\n}\n\nstruct start {\n    int x,y;\n} nxt,cur;\nqueue<start>q;\nqueue<int>que;\n\nint numbers(int i,int j) {\n    /*\n    \u56e0\u4e3a\u56fa\u5b9a\u4e00\u4e2a\u6307\u5b9a\u5757\u4e4b\u540e\u7684\u72b6\u6001\u5bf9\u5e94\u77405\u79cd\u72b6\u6001,\n    \u90fd\u662f\u4e0d\u540c\u7684\u72b6\u6001,\u6240\u4ee5\u8981\u5f005\u500d,\u5373\u5fc5\u987b\u7f16\u53f7\u591a\u7f16 \n    */\n    j--; ///\u4ece0\u5f00\u59cb\u7f16\u53f7 \n    return (i-1)*m+j<<2;\n//  return (i-1)*m+j<<2;\n    ///\u5982\u679c\u50cf\u8fd9\u6837\u4ece1\u5f00\u59cb\u7f16\u53f7\u7684\u8bdd,\u6211\u4eec\u7684\u5b58\u56fe\u7684struct game e\u6570\u7ec4\u5c31\u9700\u8981\u591a\u5f005\u4e2a\u7a7a\u95f4!!!\u6240\u4ee5\u8fd8\u662f\u6700\u597d\u4ece0\u7f16\u53f7\u597d \n}\n\nvoid bfs(int ex,int ey,int px,int py,int d) {\n    int cx,cy,nx,ny; \n    memset(predis,-1,sizeof(predis));\n    /*\n        predis\u6570\u7ec4\u8868\u793a\u5565\u5462??? \n        \u5176\u5b9e\u7b80\u5355\u6765\u8bf4\u5c31\u662f:\n        \u56fa\u5b9a\u6307\u5b9a\u5757,\u7a7a\u767d\u5757\u5728\u6307\u5b9a\u5757\u7684\u5176\u4e2d\u4e00\u4e2a\u65b9\u5411\n        \u7136\u540e\u518d\u7531\u8fd9\u4e2a\u72b6\u6001\u5230\u5176\u4ed6\u72b6\u6001\u7684\u6700\u77ed\u8def\n        \u6ca1\u9519!\u50a8\u5b58\u7684\u5c31\u662f\u6700\u77ed\u8def\u7684\u8ddd\u79bb!!! \n        \u5176\u4ed6\u72b6\u6001\u662f\u6307:\n        \u56fa\u5b9a\u4e86\u6307\u5b9a\u5757\u4e4b\u540e,\u7a7a\u767d\u5757\u5728\u6307\u5b9a\u5757\u7684\u53e6\u5916\u4e09\u4e2a\u65b9\u5411\n    */\n    ///\u6307\u5b9a\u683c  \n    predis[px][py]=1;\n    ///\u7a7a\u767d\u683c\n    predis[ex][ey]=0;\n    ///bfs\u5f53\u524d\u7a7a\u767d\u683c\u79fb\u52a8\u5230\u6bcf\u4e2a\u70b9\u6240\u9700\u8981\u7684\u6b65\u6570 \n    cur.x=ex,cur.y=ey;\n    q.push(cur);\n    while(!q.empty()) {\n        cur=q.front();\n        q.pop();\n        cx=cur.x,cy=cur.y;\n        for(int i=0; i<4; ++i) {\n            nx=cur.x+dx[i],ny=cur.y+dy[i];\n            if(a[nx][ny] && predis[nx][ny]==-1) {\n                predis[nx][ny]=predis[cx][cy]+1;\n                nxt.x=nx,nxt.y=ny;\n                q.push(nxt);\n            }\n        }\n    }\n    ///\u5982\u521a\u624d\u6240\u8ff0 \n    if(d==8) return;\n    int tmp=numbers(px,py);\n    for(int i=0; i<4; ++i) {\n        int x=px+dx[i],y=py+dy[i];\n        if(predis[x][y]>0)\n        /*\n        \u56e0\u4e3a\u5728\u4e4b\u524d\u5df2\u7ecf\u628apredis[ex][ey]\u8d4b\u503c\u4e3a0,\n        \u6240\u4ee5\u8fd9\u4e2a\u6761\u4ef6\u5c31\u662f\u76f8\u5f53\u4e8e\u5f53\u524d\u679a\u4e3e\u7684\u8fd9\u4e2a\u6307\u5b9a\u5757\u4e0e\u7a7a\u767d\u5757\u7684\u72b6\u6001,\n        \u4e0e\u5b83\u7684\u540e\u7ee7\u72b6\u6001\u8fdb\u884c\u8fde\u8fb9 \n        */\n            /*----------\u8fd9\u91cc\u91cd\u8981----------*/ \n            add(tmp+d,tmp+i,predis[x][y]);\n            /*----------\u771f\u7684\u91cd\u8981----------*/\n    }\n    /*\n    \u6700\u540e\u4e00\u79cd\u540e\u7ee7\u72b6\u6001\u662f\u6307\u5b9a\u683c\u4e0e\u7a7a\u767d\u683c\u4ea4\u6362\u4f4d\u7f6e\n    \u56e0\u4e3a\u89c4\u5b9a\u76840123\u662f\u4e0a\u53f3\u4e0b\u5de6,\u6240\u4ee5(d+2)%4\u53ef\u4ee5\u76f4\u63a5\u8f6c\u5316\u4e3a\u5bf9\u9762\u7684\u65b9\u5411\n    \u4ea4\u6362\u76f8\u5f53\u4e8e\u8d70\u4e00\u6b65,\u6240\u4ee5\u8fb9\u6743\u4e3a1 \n    */\n    add(tmp+d,numbers(ex,ey)+(d+2)%4,1);\n}\n\nvoid spfa(int sx,int sy) {\n    int tmp;\n    memset(dis,-1,sizeof(dis));\n    for(int i=0; i<4; ++i) {\n        int x=sx+dx[i],y=sy+dy[i];\n        if(predis[x][y]!=-1) {\n            tmp=numbers(sx,sy)+i;\n            dis[tmp]=predis[x][y];\n            que.push(tmp);\n        }\n    }\n    int u;\n    while(!que.empty()) {\n        u=que.front();\n        que.pop();\n        vis[u]=false;\n        for(int i=head[u]; i; i=e[i].next) {\n            int v=e[i].to;\n            if(dis[v]==-1 || dis[v]>dis[u]+e[i].w) {\n                dis[v]=dis[u]+e[i].w;\n                if(!vis[v]) {\n                    vis[v]=true;\n                    que.push(v);\n                }\n            }\n        }\n    }\n} \n\nint main() {\n    scanf(\"%d%d%d\",&n,&m,&p);\n    ///\u679a\u4e3e\u5e76\u56fa\u5b9a\u6307\u5b9a\u683c \n    for(int i=1; i<=n; ++i)\n        for(int j=1; j<=m; ++j)\n            scanf(\"%d\",&a[i][j]);\n    for(int i=1; i<=n; ++i)\n        for(int j=1; j<=m; ++j)\n            if(a[i][j]) {\n                ///\u679a\u4e3e\u56fa\u5b9a\u7a7a\u767d\u683c,\u4e0a,\u53f3,\u4e0b,\u5de6(\u987a\u65f6\u9488\u65cb\u8f6c,\u65b9\u4fbf\u8fdb\u884c\u8f6c\u6362) \n                ///bfs\u5728\u56fa\u5b9a\u6307\u5b9a\u683c\u4e0e\u7a7a\u767d\u683c\u76845\u79cd\u72b6\u6001 \n                if(a[i-1][j]) bfs(i-1,j,i,j,0); \n                if(a[i][j+1]) bfs(i,j+1,i,j,1);\n                if(a[i+1][j]) bfs(i+1,j,i,j,2);\n                if(a[i][j-1]) bfs(i,j-1,i,j,3);\n            }\n    /*\n    \u7a7a\u767d\u683c\uff1aex,ey \n    \u6307\u5b9a\u683c\u7684\u521d\u59cb\u4f4d\u7f6e\uff1asx,sy \n    \u76ee\u6807\u4f4d\u7f6e\uff1atx,ty \n    */\n    int ex,ey,sx,sy,tx,ty,ans;\n    while(p--) {\n        scanf(\"%d%d%d%d%d%d\",&ex,&ey,&sx,&sy,&tx,&ty);\n        if(sx==tx && sy==ty) {\n            printf(\"0\\n\");\n            continue;\n        }\n        /*-----------\u6700\u540e\u4e00\u6b21bfs-----------*/\n        /*\n        \u56e0\u4e3a\u6211\u4eec\u662f\u76f4\u63a5\u679a\u4e3e\u7a7a\u767d\u5feb\u4e0e\u6307\u5b9a\u5757\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u72b6\u6001,\n        \u4f46\u662f\u4ed6\u4eec\u5176\u5b9e\u6709\u53ef\u80fd\u521d\u59cb\u72b6\u6001\u5e76\u6ca1\u6709\u8fde\u63a5,\n        \u6240\u4ee5\u5f3a\u884c\u5c06\u5979\u4eec\u8fdb\u884c\u8fde\u63a5,\n        \u4f46\u662f\u4e0d\u5728\u56fe\u4e2d\u8fdb\u884c\u8fde\u8fb9,\n        \u6240\u4ee5\u968f\u4fbf\u5f04\u4e2ad,\u5982\u679cbfd\u4e4b\u540e\u8981\u5efa\u8fb9\u4e86,\n        \u82e5\u662f\u80e1\u4e71\u641e\u7684\u8fd9\u4e2ad,\u76f4\u63a5return\u5373\u53ef \n        */ \n        bfs(ex,ey,sx,sy,8);\n        ///\u666e\u2642\u901a\u2640\u7684spfa,\u8dd1\u6700\u77ed\u8def \n        spfa(sx,sy);\n        ans=INF;\n        ///\u5c06\u76ee\u6807\u4f4d\u7f6e\u8fdb\u884c\u7f16\u53f7 \n        int tmp=numbers(tx,ty);\n        for(int i=0; i<4; ++i)\n            ///+i\u662f\u7a7a\u767d\u5757\u7684\u72b6\u6001\u65b9\u5411\n            if(dis[tmp+i]!=-1) \n                ///\u5f80\u5c0f\u91cc\u9762\u66f4\u65b0 \n                ans=min(ans,dis[tmp+i]);\n        if(ans==INF)\n            ans=-1;\n        printf(\"%d\\n\",ans); \n    }\n    return 0;\n}\n```",
        "postTime": 1502502579,
        "uid": 39034,
        "name": "\u957f\u5b89\u5fc6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "### \u6d1b\u8c37P1979 \u534e\u5bb9\u9053 \u9898\u89e3\n\n#####  \u8ddd\u79bbNOIP2018\u8fd8\u67097\u5929qwq\u5199\u7bc7\u9898\u89e3\u79ef\u6512\u4e0b\u4eba\u54c1\n##### \uff08\u7b2c\u4e00\u6b21\u5199\u7d2b\u9898\u9898\u89e3\u8fd8\u6709\u4e9b\u5c0f\u6fc0\u52a8\uff09\n\n**\u4e00\u4e9b\u8bf4\u660e**\n\n1\u3001\u672c\u9898\u89e3\u4e0e\u4ee3\u7801\u4e2d\u76840/1/2/3\u5206\u522b\u4ee3\u8868\u4e0a/\u4e0b/\u5de6/\u53f3\n\n2\u3001\u4e3a\u4e86\u6e05\u6670\u8868\u8ff0\uff0c\u9898\u89e3\u4e2d\u8bb0\u76ee\u6807\u68cb\u5b50\uff08\u9898\u76ee\u4e2d\u7684 $SX,SY$ \uff09\u4e3a $B$ \uff0c\u76ee\u6807\u683c\u5b50\uff08\u9898\u76ee\u4e2d\u7684 $TX,TY$ \u4e3a \uff09$C$\uff0c\u7a7a\u767d\u683c\u4e3a$E$\n\n\n\u3010\u601d\u8def\u5206\u6790\u3011\n\u5982\u51e0\u4f4ddalao\u6240\u8bf4\uff0c\u8fd9\u9053\u9898\u7684\u5efa\u56fe\u5c31\u662f\u628a\u53ef\u884c\u7684\u72b6\u6001\u8fde\u8fb9\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u6211\u7528 $ ok[i][j][0/1/2/3] $\u8868\u793a $B$\u4f4d\u4e8e\u70b9$(i,j)$\u65f6\uff0c\u56db\u4e2a\u65b9\u5411\u662f\u5426\u53ef\u80fd\u6709\u7a7a\u767d\u683c\uff08\u5148\u4e0d\u8003\u8651\u6bcf\u7ec4\u8be2\u95ee\u4e2d\u7a7a\u767d\u683c\u662f\u5426\u53ef\u4ee5\u5230\u8fbe\uff0c\u53ea\u8003\u8651\u8be5\u683c\u5b50\u662f\u5426\u4e3a\u56fa\u5b9a\u683c\uff0c\u6216\u8d8a\u754c\u3002\uff09\n\n\u6b64\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n//\u5224\u65ad\u54ea\u4e9b\u72b6\u6001\u662f\u5408\u6cd5\u7684 \n\tfor(int i=1;i<=n;i++)//\u7a7a\u767d\u683c\u5728\u68cb\u5b50\u4e0a\u4e0b\u5de6\u53f3 \n\tfor(int j=1;j<=m;j++){\n\t\tif(!mapp[i][j])continue;//\u4e0d\u53ef\u80fd\u6709\u6b64\u72b6\u6001 \n\t\tfor(int k=0;k<4;k++)//\u56db\u4e2a\u65b9\u5411 \n\t\tif(judge(i+xx[k],j+yy[k]))ok[i][j][k]=1;\n\t\t}\n```\njudge\u51fd\u6570\u7528\u6765\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u767d\u683c\u6216\u8d8a\u754c\uff1a\n```\nbool judge(int ax,int ay){\n\tif(ax<=0||ax>n||ay<=0||ay>m)return 0;//\u8fb9\u754c \n\treturn mapp[ax][ay];\n}\n```\n\u4e3a\u4e86\u5efa\u56fe\u65b9\u4fbf\uff0c\u6211\u5c06\u72b6\u6001\u5b58\u5230\u4e00\u7ef4\u6570\u7ec4\u91cc\uff1a\n\u683c\u5b50\u7684\u7f16\u53f7\uff1a\u4ece\u4e0a\u5230\u4e0b\u4ece\u5de6\u5230\u53f3\u7f16\n\n$e.g.$\n- 1 2 3 4\n- 5 6 7 8\n- \u2026\u2026\n\n\u72b6\u6001\u7684\u7f16\u53f7\uff1a$e.g.$ \n\n1\u53f7\u683c\u5b50\u7684\u56db\u4e2a\u72b6\u6001\u7f16\u53f7\u4e3a0123 \n\n\u4e8e\u662f\u5f97\u5230\u5982\u4e0b\u7f16\u53f7\u51fd\u6570\uff1a\n```\nint getnum(int ax,int ay,int t){\n\treturn ((ax-1)*m+ay)*4-(4-t);\n}//t=0/1/2/3\n```\n\u7531\u4e8e$q$\u7ec4\u8be2\u95ee\u7684\u5730\u56fe\u60c5\u51b5\u662f\u76f8\u540c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5efa\u56fe\u3002\n\n\u4ec0\u4e48\u6837\u7684\u4e24\u4e2a\u72b6\u6001\u53ef\u4ee5\u8fde\u8fb9\u5462\uff1f\n\n\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff1a\n\n**\u00b7\u7a7a\u767d\u683c\u5b50\u7ed5\u7740$B$\u4e0a\u4e0b\u5de6\u53f3\u4e71\u8f6c**\n\n\u53ef\u4ee5\u7528bfs\u6c42\u51fa\u4e71\u8f6c\u6700\u5c11\u591a\u5c11\u6b21\u53ef\u4ee5\u4ece\u4e0a\u8f6c\u5230\u4e0b\uff0c\u4ece\u5de6\u8f6c\u5230\u53f3...\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e71\u8f6c\u65f6$B$\u662f\u4e0d\u80fd\u52a8\u7684\uff01\uff01\uff01\uff08\u8fd9\u4e2a\u5730\u65b9\u5361\u4e86\u597d\u4e45QAQ\uff09\n\n**\u00b7\u7a7a\u767d\u683c\u5b50\u548c$B$\u4ea4\u6362\u4f4d\u7f6e**\n\n\u5fc5\u987b\u4fdd\u8bc1\u4e24\u4e2a\u72b6\u6001\u90fd\u5b58\u5728\u3002\n\n\u8fde\u4e0a\u8ddd\u79bb\u4e3a1\u7684\u8fb9\u5373\u53ef\u3002\n```\nint bfs(int dx,int dy,int sx,int sy,int tx,int ty){//\u7a7a\u767d\u683c\u5b50\u4e71\u8f6c\u7684\u6700\u5c0f\u6b21\u6570 \n\t//(sx,sy)\u51fa\u53d1\u5230(tx,ty)\uff0c\u4e0d\u80fd\u7ecf\u8fc7(dx,dy)\n\tqueue<white>q;\n\tmemset(vis,0,sizeof vis);\n\twhite st;st.x=sx;st.y=sy;\n\tst.step=0;vis[sx][sy]=1;\n\tq.push(st);\n\twhile(!q.empty()){\n\t\twhite noww=q.front();\n\t\tq.pop();\n\t\tif(noww.x==tx&&noww.y==ty)//\u5230\u8fbe\u76ee\u6807\u683c\u5b50 \n\t\treturn noww.step;\n\t\tfor(int i=0;i<4;i++){//\u56db\u4e2a\u65b9\u5411\u4e71\u8f6c \n\t\t\tif(judge(noww.x+xx[i],noww.y+yy[i])){//\u5982\u679c\u5408\u6cd5 \n\t\t\t\tif(vis[noww.x+xx[i]][noww.y+yy[i]])continue;//\u6b63\u5728\u8bbf\u95ee \n\t\t\t\tif(noww.x+xx[i]==dx&&noww.y+yy[i]==dy)continue;//\u4e0d\u80fd\u78b0\u5230\u76ee\u6807\u68cb\u5b50 \n\t\t\t\twhite nxt;\n\t\t\t\tnxt.x=noww.x+xx[i];\n\t\t\t\tnxt.y=noww.y+yy[i];\n\t\t\t\tnxt.step=noww.step+1;\n\t\t\t\tq.push(nxt);vis[noww.x+xx[i]][noww.y+yy[i]]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn inf;//\u5230\u4e0d\u4e86 \n}\n```\n#### \u68cb\u5b50\u4e0d\u52a8\uff0c\u7a7a\u767d\u683c\u4e71\u8f6c\u7684\u60c5\u51b5 \uff1a\n\n```\n    for(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n    for(int k=0;k<4;k++)\n\tfor(int l=k+1;l<4;l++){\n\t\tif(ok[i][j][k]&&ok[i][j][l]){//\u5fc5\u987b\u90fd\u8981\u5408\u6cd5 \n\t\t\tint aa=getnum(i,j,k);\n\t\t\tint bb=getnum(i,j,l);\n\t\t\tint cc=bfs(i,j,i+xx[k],j+yy[k],i+xx[l],j+yy[l]);\n\t\t\tif(cc==inf)continue;\n\t\t\tadd(aa,bb,cc);add(bb,aa,cc);\n\t\t}\n\t}\n```\nqwq\n```\n\tfor(int i=1;i<=n;i++)//\u7a7a\u767d\u4e0e\u76ee\u6807\u68cb\u5b50\u5de6\u53f3\u4e92\u6362 \n\tfor(int j=1;j<m;j++){\n\t\tif(ok[i][j][3]&&ok[i][j+1][2]){ //\u6ce8\u610f\u8c01\u5de6\u8c01\u53f3\n\t\t\tint aa=getnum(i,j,3);//\u522b\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684orz\n\t\t\tint bb=getnum(i,j+1,2);\n\t\t\tadd(aa,bb,1);add(bb,aa,1);\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++)//\u4e0a\u4e0b\u4e92\u6362 \n\tfor(int j=1;j<=m;j++){\n\t\tif(ok[i][j][1]&&ok[i+1][j][0]){\n\t\t\tint aa=getnum(i,j,1);\n\t\t\tint bb=getnum(i+1,j,0);\n\t\t\tadd(aa,bb,1);add(bb,aa,1);\n\t\t}\n\t}\n```\n\n\u8fd9\u6837\u6211\u4eec\u7684\u521d\u59cb\u5316\u5c31\u5b8c\u6210\u5566\uff01\n\uff08\u52a0\u8fb9\u7684\u64cd\u4f5c\u5c31\u548c\u666e\u901a\u56fe\u8bba\u4e00\u6837\u4e86w\uff09\n\n\n#### \u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u8be2\u95ee\uff0c\u5148\u7279\u5224\u4e00\u4e0b\uff1a\n\n```\nwhile(q--){\n\t\tscanf(\"%d%d%d%d%d%d\",&ex,&ey,&bx,&by,&cx,&cy);\n\t\tif(bx==cx&&by==cy){\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(!mapp[cx][cy]){\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(!mapp[bx][by]){\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\twork();\n\t}\n```\n\n#### \u7136\u540e\u8003\u8651\uff0c\u600e\u6837\u628a\u4e00\u5f00\u59cb\u7684\u72b6\u6001\u8f6c\u79fb\u5230\u56fe\u4e0a\u5462\uff1f\n\n\u56e0\u4e3a\u56fe\u4e0a\u53ea\u5b58\u5728\u7a7a\u767d\u683c\u4e0e$B$ \u76f8\u90bb\u7684\u72b6\u51b5\uff0cso\u66b4\u529b\u5c1d\u8bd5\u8ba9\u7a7a\u767d\u683c\u8dd1\u5230$B$\u7684\u56db\u4e2a\u65b9\u5411\u5c31\u597d\u5566\n```\n    for(int i=0;i<4;i++){//\u7a7a\u767d\u8d70\u5230\u76ee\u6807\u68cb\u5b50\u65c1\u8fb9 \n\t\tif(judge(bx+xx[i],by+yy[i])){//\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u8d70 \n\t\t\tint nw=bfs(bx,by,ex,ey,bx+xx[i],by+yy[i]);\n\t\t\tif(nw==inf)continue;//\u8d70\u4e0d\u5230 \n\t\t\tint nq=getnum(bx,by,i);\n\t\t\td[nq]=nw;\n\t\t\tQ.push(nq);\n\t\t\tviss[nq]=1;\n\t\t}\n\t}\n```\n#### \u7136\u540e\uff0c\u6109\u5feb\u5730\u8dd1SPFA\n\n```\n    while(!Q.empty()){\n\t\tint noww=Q.front();Q.pop();viss[noww]=0;\n\t\tfor(int j=head[noww];j;j=b[j].nxt){\n\t\t\tint vv=b[j].to;\n\t\t\tif(d[vv]>d[noww]+b[j].dis){\n\t\t\t\td[vv]=d[noww]+b[j].dis;\n\t\t\t\tif(!viss[vv])Q.push(vv),viss[vv]=1;\n\t\t\t}\n\t\t}\n\t}\n```\n#### \u6700\u540e\uff0c\u6109\u5feb\u5730\u68c0\u67e5\u662f\u5426\u80fd\u5230$C$\n```\n    int ans=inf;\n\tfor(int i=0;i<4;i++){\n\t\tint qaq=getnum(cx,cy,i);\n\t\tans=min(ans,d[qaq]);\n\t}\n\tif(ans==inf)puts(\"-1\");\n\telse printf(\"%d\\n\",ans);\n```\n\n## \u8d34\u65e0\u6ce8\u91ca\u4ee3\u7801QWQ\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=35;\nconst int inf=99999999;\nint n,m,q,ex,ey,bx,by,cx,cy;\nbool mapp[MAXN][MAXN];\nint xx[4]={-1,1,0,0};\nint yy[4]={0,0,-1,1};\nint getnum(int ax,int ay,int t){\n\treturn ((ax-1)*m+ay)*4-(4-t);\n} \nstruct white{\n\tint x,y;\n\tint step;\n};\nbool judge(int ax,int ay){\n\tif(ax<=0||ax>n||ay<=0||ay>m)return 0;\n\treturn mapp[ax][ay];\n}\nbool vis[MAXN][MAXN];\nint bfs(int dx,int dy,int sx,int sy,int tx,int ty){\n\tqueue<white>q;\n\tmemset(vis,0,sizeof vis);\n\twhite st;st.x=sx;st.y=sy;\n\tst.step=0;vis[sx][sy]=1;\n\tq.push(st);\n\twhile(!q.empty()){\n\t\twhite noww=q.front();\n\t\tq.pop();\n\t\tif(noww.x==tx&&noww.y==ty)\n\t\treturn noww.step;\n\t\tfor(int i=0;i<4;i++){\n\t\t\tif(judge(noww.x+xx[i],noww.y+yy[i])){\n\t\t\t\tif(vis[noww.x+xx[i]][noww.y+yy[i]])continue;\n\t\t\t\tif(noww.x+xx[i]==dx&&noww.y+yy[i]==dy)continue; \n\t\t\t\twhite nxt;\n\t\t\t\tnxt.x=noww.x+xx[i];\n\t\t\t\tnxt.y=noww.y+yy[i];\n\t\t\t\tnxt.step=noww.step+1;\n\t\t\t\tq.push(nxt);vis[noww.x+xx[i]][noww.y+yy[i]]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn inf;\n}\nstruct edge{\n\tint to,nxt,dis;\n}b[5005];\nint head[5005],tot;\nvoid add(int u,int v,int w){\n\tb[++tot].to=v;b[tot].nxt=head[u];\n\tb[tot].dis=w;head[u]=tot;\n}\nbool ok[MAXN][MAXN][5];\nvoid init(){\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++){\n\t\tif(!mapp[i][j])continue;\n\t\tfor(int k=0;k<4;k++)\n\t\tif(judge(i+xx[k],j+yy[k]))ok[i][j][k]=1;\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n    for(int k=0;k<4;k++)\n\tfor(int l=k+1;l<4;l++){\n\t\tif(ok[i][j][k]&&ok[i][j][l]){\n\t\t\tint aa=getnum(i,j,k);\n\t\t\tint bb=getnum(i,j,l);\n\t\t\tint cc=bfs(i,j,i+xx[k],j+yy[k],i+xx[l],j+yy[l]);\n\t\t\tif(cc==inf)continue;\n\t\t\tadd(aa,bb,cc);add(bb,aa,cc);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<m;j++){\n\t\tif(ok[i][j][3]&&ok[i][j+1][2]){ \n\t\t\tint aa=getnum(i,j,3);\n\t\t\tint bb=getnum(i,j+1,2);\n\t\t\tadd(aa,bb,1);add(bb,aa,1);\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++)\n\tfor(int j=1;j<=m;j++){\n\t\tif(ok[i][j][1]&&ok[i+1][j][0]){\n\t\t\tint aa=getnum(i,j,1);\n\t\t\tint bb=getnum(i+1,j,0);\n\t\t\tadd(aa,bb,1);add(bb,aa,1);\n\t\t}\n\t}\n}\nqueue<int>Q;\nbool viss[5005];\nint d[5005];\nvoid work(){\n\tmemset(d,128/3,sizeof d);\n\tmemset(viss,0,sizeof viss);\n\tfor(int i=0;i<4;i++){\n\t\tif(judge(bx+xx[i],by+yy[i])){\n\t\t\tint nw=bfs(bx,by,ex,ey,bx+xx[i],by+yy[i]);\n\t\t\tif(nw==inf)continue; \n\t\t\tint nq=getnum(bx,by,i);\n\t\t\td[nq]=nw;\n\t\t\tQ.push(nq);\n\t\t\tviss[nq]=1;\n\t\t}\n\t}\n\twhile(!Q.empty()){\n\t\tint noww=Q.front();Q.pop();viss[noww]=0;\n\t\tfor(int j=head[noww];j;j=b[j].nxt){\n\t\t\tint vv=b[j].to;\n\t\t\tif(d[vv]>d[noww]+b[j].dis){\n\t\t\t\td[vv]=d[noww]+b[j].dis;\n\t\t\t\tif(!viss[vv])Q.push(vv),viss[vv]=1;\n\t\t\t}\n\t\t}\n\t}\n\tint ans=inf;\n\tfor(int i=0;i<4;i++){\n\t\tint qaq=getnum(cx,cy,i);\n\t\tans=min(ans,d[qaq]);\n\t}\n\tif(ans==inf)puts(\"-1\");\n\telse printf(\"%d\\n\",ans);\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)cin>>mapp[i][j];\n\tinit();\n\twhile(q--){\n\t\tscanf(\"%d%d%d%d%d%d\",&ex,&ey,&bx,&by,&cx,&cy);\n\t\tif(bx==cx&&by==cy){\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(!mapp[cx][cy]){\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(!mapp[bx][by]){\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\twork();\n\t}\n\treturn 0;\n}\n\n```\n# \u5b8c\u7ed3\u6492\u82b1\uff01\uff01\uff01\n\n##  _by   Erutsiom _ \n",
        "postTime": 1541316215,
        "uid": 64539,
        "name": "Erutsiom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6ca1\u6709\u4eba\u53d1dfs\uff0c\u53d1\u4e2a\u9898\u89e3\n\n\n\u7531\u4e8e\u4e0d\u592a\u4f1a\u6253bfs\uff0c\u8fd9\u9898\u7528\u7684dfs\u3002\n\n\n\u901a\u8fc7\u8fd9\u9053\u9898\u8fd8\u662f\u5b66\u5230\u4e86\u86ee\u591a\u7684\u4e1c\u897f\u7684\u3002\n\n\n\u9996\u5148\uff0c\u778e\u6253\u4e00\u6c14\uff08dfs + \u6807\u8bb0\u8d70\u8fc7\u7684\u70b9\uff0940\u5206\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int X[] = {0,1,0,-1};\nconst int Y[] = {1,0,-1,0}; \nint m,n,ex,ey,a,b,c,d,ans,used[45][45][45][45],ma[50][50],q;\nbool can(int x,int y)\n{\n    if(x < 1||x > n) return false;\n    if(y < 1||y > m) return false;\n    if(!ma[x][y]) return false;\n    return true;\n}\nvoid dfs(int kx,int ky,int sx,int sy,int cnt)\n{\n    if(cnt >= ans) return;\n    if(sx == ex&&sy == ey) {ans = cnt;return;}\n    if(used[kx][ky][sx][sy] <= cnt) return;\n    used[kx][ky][sx][sy] = cnt;\n    for(int i = 0;i < 4;i ++)\n    {\n        int x = kx + X[i],y = ky + Y[i];\n        if(can(x,y))\n        {\n            if(x == sx&&y == sy) dfs(x,y,kx,ky,cnt+1);\n            else dfs(x,y,sx,sy,cnt+1);\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d %d %d\",&n,&m,&q);\n    for(int i = 1;i <= n;i ++)\n        for(int j = 1;j <= m;j ++)\n            scanf(\"%d\",&ma[i][j]);\n    for(int i = 1;i <= q;i ++)\n    {\n        memset(used,0x3f,sizeof(used));ans = 1e6;\n        scanf(\"%d %d %d %d %d %d\",&a,&b,&c,&d,&ex,&ey);\n        dfs(a,b,c,d,0);\n        if(ans == 1e6) puts(\"-1\");\n        else printf(\"%d\\n\",ans);\n    }\n}\n```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n\u7136\u540e\u53d1\u73b0\u8fd9\u4e2a\u9898\u6ca1\u6709\u529e\u6cd5\u526a\u679d\uff0c\u5982\u679c\u4e0d\u6807\u8bb0\u8def\u7ebf\u4f1a\u6b7b\u5faa\u73af\uff0c\u5982\u679c\u6807\u8bb0\u5c31\u6ca1\u6709\u529e\u6cd5\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n\n\n\u7136\u540e\u4ed4\u7ec6\u89c2\u5bdf\u4e86\u4e4b\u524d\u7684\u7a0b\u5e8f\uff0c\u53d1\u73b0\u6bcf\u4e00\u6b21\u8d77\u70b9\u8d70\u4e86\u4e00\u6b65\uff0c\u7a7a\u4f4d\u5c31\u8981\u8dd1\u5b8c\u6574\u5f20\u56fe\uff0c\u800c\u6211\u4eec\u7684\u76ee\u7684\u662f\u8ba9\u8d77\u70b9\u79fb\u52a8\u5230\u7ec8\u70b9\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8ba9\u8d77\u70b9\u79fb\u52a8\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n\u8fc7\u7a0b\u4e3a\uff0c\u7a7a\u683c\u79fb\u52a8\u5230\u8d77\u70b9\u7684\u65c1\u8fb9\uff0c\u8d77\u70b9\u542f\u52a8\u5230\u7a7a\u683c\uff0c\u5e76\u4e14\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u7a7a\u683c\u4e0d\u80fd\u7ecf\u8fc7\u8d77\u70b9\u3002\n\n\n\u6240\u4ee5\u6211\u4eec\u8981\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u8ba1\u7b97\u4ecea \u70b9\u5230b\u70b9\u4e0d\u7ecf\u8fc7c\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u8fd9\u4e2a\u9884\u5904\u7406\u7684\u590d\u6742\u5ea6\u662fO\uff08n^6\uff09\u7684\uff0c\u8fd9\u6837\u4f1a\u8d85\u65f6\u3002\n\n\n\u6211\u4eec\u518d\u8003\u8651\u4e00\u4e0b\uff0c\u8d77\u70b9\u548c\u8d77\u70b9\u5c06\u8981\u79fb\u52a8\u7684\u4f4d\u7f6e\u4e00\u5b9a\u662f\u6328\u7740\u7684\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5904\u7406\u67d0\u4e00\u4e2a\u70b9\u4e0d\u7ecf\u8fc7\u4e0a\u4e0b\u5de6\u53f34\u70b9\u7136\u540e\u53cd\u5411\u627e\u4ece\u8d77\u70b9\u5c06\u8981\u79fb\u52a8\u7684\u70b9\u4e0d\u7ecf\u8fc7\u8d77\u70b9\u5230\u7a7a\u683c\u7684\u4f4d\u7f6e\uff084\\*n^4\uff09\u3002\n\n\n85\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```cpp\n#include<iostream> \n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int X[] = {0,1,0,-1};\nconst int Y[] = {1,0,-1,0}; \nint n,m,g,ma[35][35],dis[35][35][35][35][5],used[35][35],ans,a,b,c,d,ex,ey,vis[35][35][35][35]; \nstruct zt\n{\n    int x,y;\n};\nqueue<zt>q;\nbool can(int x,int y)\n{\n    if(x < 1||x > n) return false;\n    if(y < 1||y > m) return false;\n    if(!ma[x][y]) return false;\n    return true;\n}\nvoid spfa(int x,int y,int nx,int ny,int ji)\n{\n    while(!q.empty())   q.pop();\n    memset(used,0,sizeof(used));\n    q.push((zt){x,y});\n    dis[x][y][x][y][ji] = 0;\n    while(!q.empty())\n    {\n        zt u = q.front();q.pop();\n        used[u.x][u.y] = 0;\n        for(int i = 0;i < 4;i ++)\n        {\n            int x1 = u.x + X[i],y1 = u.y + Y[i];\n            if(can(x1,y1)&&(x1 != nx||y1 != ny))\n            {\n                if(dis[x][y][x1][y1][ji] > dis[x][y][u.x][u.y][ji] + 1)\n                {\n                    dis[x][y][x1][y1][ji] = dis[x][y][u.x][u.y][ji] + 1;\n                    if(!used[x1][y1])\n                    {\n                        q.push((zt){x1,y1});\n                        used[x1][y1] = 1;\n                    }\n                }\n            }\n        }\n    }\n}\nvoid dfs(int kx,int ky,int sx,int sy,int cnt)\n{\n    if(cnt >= ans) return;\n    if(sx == ex&&sy == ey) {ans = cnt;return;}\n    if(vis[sx][sy][kx][ky] <= cnt) return;\n    vis[sx][sy][kx][ky] = cnt;\n    for(int i = 0;i < 4;i ++)\n    {\n        int x = sx + X[i],y = sy + Y[i];\n        if(can(x,y))\n            dfs(sx,sy,x,y,cnt+dis[x][y][kx][ky][(i+2)%4]+1);\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&g);\n    for(int i = 1;i <= n;i ++)\n        for(int j = 1;j <= m;j ++)\n            scanf(\"%d\",&ma[i][j]);\n    memset(dis,0x3f,sizeof(dis));\n    for(int i = 1;i <= n;i ++)\n        for(int j = 1;j <= m;j ++)\n        {\n            if(!ma[i][j]) continue;\n            for(int k = 0;k < 4;k ++)\n            {\n                a = i + X[k],b = j + Y[k];\n                if(can(a,b)) spfa(i,j,a,b,k);\n            }\n        }\n    for(int i = 1;i <= g;i ++)\n    {\n        memset(vis,0x3f,sizeof(vis));ans = 1e6;\n        scanf(\"%d%d%d%d%d%d\",&a,&b,&c,&d,&ex,&ey);\n        dfs(a,b,c,d,0);\n        if(ans == 1e6) puts(\"-1\");\n        else printf(\"%d\\n\",ans);\n    }\n}\n```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n\u7136\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\u5c06\u6570\u7ec4vis\u8d4b\u4e3a\u6781\u5927\u503c\u7684\u590d\u6742\u5ea6\u662f\uff08500\\*35^4 = 750312500\uff09\u3002\n\n\u8fd9\u6837\u5bf9\u4e8e\u540e\u9762\u7684\u70b9\uff0c\u5355\u662f\u521d\u59cb\u5316\u5c31\u4e0d\u591f\u7528\u4e86\u3002\n\n\n\u6211\u4eec\u518d\u89c2\u5bdf\u4e00\u4e0b\uff0c\u53d1\u73b0\u9664\u672a\u5f00\u59cb\u79fb\u52a8\u65f6\uff0c\u7a7a\u4f4d\u4e00\u5b9a\u5728\u8d77\u70b9\u56db\u5468\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u8981\u5f00\u4e00\u4e2a\u5927\u5c0f\u4e3a5\u7684\u6570\u7ec4\u4ee3\u66ff\u5c31\u53ef\u4ee5\u3002\u8fd9\u6837\u521d\u59cb\u5316\u4e3a\uff08500 \\* 35^2 \\* 5 = 3062500\uff09\u3002\n\n\u8fd9\u6837\u505a\u540e\u4f1a\u670990\u5206\u3002\n\n\n\u8fd9\u91cc\u518d\u5f15\u5165\u4e00\u4e2a\u4e1c\u897f\u2014\u2014\u542f\u53d1\u5f0f\u641c\u7d22\u3002\n\n\n\u542f\u53d1\u5f0f\u641c\u7d22\u4f1a\u6781\u5927\u5730\u51cf\u5c11\u91cd\u590d\u7ecf\u8fc7\u7684\u8def\u5f84\u4ece\u800c\u63d0\u9ad8dfs\u7684\u6548\u7387\u3002\u7b80\u5355\u8bf4\u6211\u4eec\u4f18\u5148\u66f4\u65b0\u4ed8\u51fa\u4ee3\u4ef7\u6bd4\u8f83\u5c0f\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u8fd9\u4e2a\u72b6\u6001\u5c31\u5f88\u96be\u88ab\u518d\u6b21\u66f4\u65b0\uff0c\u4ece\u800c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u6b65\u9aa4\u3002\n\nAC\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<iostream> \n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int X[] = {0,1,0,-1};\nconst int Y[] = {1,0,-1,0}; \nint n,m,g,ma[35][35],dis[35][35][35][35][5],used[35][35],ans,a,b,c,d,ex,ey,vis[35][35][5]; \nstruct zt\n{\n    int x,y;\n};\nqueue<zt>q;\nbool can(int x,int y)\n{\n    if(x < 1||x > n) return false;\n    if(y < 1||y > m) return false;\n    if(!ma[x][y]) return false;\n    return true;\n}\nvoid spfa(int x,int y,int nx,int ny,int ji)\n{\n    while(!q.empty())   q.pop();\n    memset(used,0,sizeof(used));\n    q.push((zt){x,y});\n    dis[x][y][x][y][ji] = 0;\n    while(!q.empty())\n    {\n        zt u = q.front();q.pop();\n        used[u.x][u.y] = 0;\n        for(int i = 0;i < 4;i ++)\n        {\n            int x1 = u.x + X[i],y1 = u.y + Y[i];\n            if(can(x1,y1)&&(x1 != nx||y1 != ny))\n            {\n                if(dis[x][y][x1][y1][ji] > dis[x][y][u.x][u.y][ji] + 1)\n                {\n                    dis[x][y][x1][y1][ji] = dis[x][y][u.x][u.y][ji] + 1;\n                    if(!used[x1][y1])\n                    {\n                        q.push((zt){x1,y1});\n                        used[x1][y1] = 1;\n                    }\n                }\n            }\n        }\n    }\n}\nvoid dfs(int kx,int ky,int sx,int sy,int cnt,int k)\n{\n    if(cnt >= ans) return;\n    if(sx == ex&&sy == ey) {ans = cnt;return;}\n    if(vis[sx][sy][k] <= cnt) return;\n    vis[sx][sy][k] = cnt;\n    int used2[4] = {0,0,0,0},ji,lu;\n    for(int i = 0;i < 4;i ++)\n    {\n        lu = 1e6;\n        for(int j = 0;j < 4;j ++)\n        {\n            int x = sx + X[j],y = sy + Y[j];\n            if(can(x,y)&&lu > dis[x][y][kx][ky][(j+2)%4]&&!used2[j])\n                lu = dis[x][y][kx][ky][(j+2)%4],ji = j;\n        }\n        if(lu != 1e6)\n        {\n            int x = sx + X[ji],y = sy + Y[ji];used2[ji] = 1;\n            dfs(sx,sy,x,y,cnt+dis[x][y][kx][ky][(ji+2)%4]+1,(ji+2)%4);\n        }   \n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&g);\n    for(int i = 1;i <= n;i ++)\n        for(int j = 1;j <= m;j ++)\n            scanf(\"%d\",&ma[i][j]);\n    memset(dis,0x3f,sizeof(dis));\n    for(int i = 1;i <= n;i ++)\n        for(int j = 1;j <= m;j ++)\n        {\n            if(!ma[i][j]) continue;\n            for(int k = 0;k < 4;k ++)\n            {\n                a = i + X[k],b = j + Y[k];\n                if(can(a,b)) spfa(i,j,a,b,k);\n            }\n        }\n    for(int i = 1;i <= g;i ++)\n    {\n        memset(vis,0x3f,sizeof(vis));ans = 1e6;\n        scanf(\"%d%d%d%d%d%d\",&a,&b,&c,&d,&ex,&ey);\n        dfs(a,b,c,d,0,4);\n        if(ans == 1e6) puts(\"-1\");\n        else printf(\"%d\\n\",ans);\n    }\n}\n```",
        "postTime": 1509362264,
        "uid": 27207,
        "name": "loi_wzhd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "//\u6ce8\u610f\u8fd9\u91cc\u8bb2\u7684\u662fA\\*\u7b97\u6cd5\uff0c\u5982\u679c\u6ca1\u5b66\u8fc7A\\*\u7684\u7ae5\u978b\u8bf7\u81ea\u884c\u767e\u5ea6\u4e00\u4e0b\u54e6\uff5e\n\n\n//\u5148\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u535a\u5ba2\u5427=\uffe3\u03c9\uffe3=\uff1a[https://www.k-xzy.xyz/archives/2849](https://www.k-xzy.xyz/archives/2849)\n\n\n# \u9898\u89e3\n\n\u8c8c\u4f3c\u7f51\u4e0a\u9898\u89e3\u4e3b\u8981\u90fd\u662fbfs+spfa\u3002\u3002\u3002\n\n\n\u8be6\u89c1lible\u7684\u9898\u89e3\uff1a[[\u6233\u8fd9\u91cc\uff5e]](http://blog.csdn.net/litble/article/details/78204837)\n\n\n\u8fd9\u79cd\u505a\u6cd5\u592a\u5f3a\u5566Orz%%%%%%%\u849f\u84bb\u6211\u5b8c\u5168\u60f3\u4e0d\u5230\u554a\uff01\uff01\uff01\n\n\n\u6211\u8bb0\u5f97\u5f88\u4e45\u4ee5\u524d\u6211\u5c31\u5237\u8fd9\u9898\u4e86\uff0c\u5f53\u65f6\u4e00\u773c\u770b\u8fc7\u53bb\u2014\u2014A\\*\u5457\uff01\u7b80\u76f4\u548c\u516b\u6570\u7801\u95ee\u9898\u4e00\u6a21\u4e00\u6837\uff01\n\n\n\u71c3\u9e45\uff0c\u5f53\u65f6\u7684\u6211\u592anaive\uff0c\u5199\u7684hash\u51fd\u6570\u4e5f\u662ftoo young\u3002\u8fd9\u9898\u6709\u591a\u7ec4\u6570\u636e\uff0c\u5149\u6e05\u7a7a\u54c8\u5e0c\u8868\u90fdTLE\u4e86\u3002\n\n\n\u6700\u8fd1\u5237NOIP\u5386\u5e74\u9898\u76ee\u53d1\u73b0\u4e86\u8fd9\u4e2a\u53ea\u62ff\u4e8650\u5206\u7684\u9898\uff0c\u4e8e\u662f\u5f00\u59cb\u91cd\u65b0\u5199\u3002\n\n\n## \u597d\uff01\u73b0\u5728\u8fdb\u5165\u6b63\u9898\u4e86\uff01\n\n## 0. \u4e00\u4e9b\u91cd\u8981\u7684\u4e1c\u897f\n\n- \u663e\u7136\uff0c\u5982\u679c\u6211\u4eec\u8981\u79fb\u52a8\u6307\u5b9a\u68cb\u5b50\uff0c\u90a3\u4e48\u5fc5\u987b\u6ee1\u8db3\u7a7a\u683c\u5728\u5176\u65c1\u8fb9\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\n\n- \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u5f00\u59cb\u7684\u65f6\u5019\u8dd1bfs\u8ba1\u7b97\u8ba9\u7a7a\u683c\u79fb\u52a8\u5230\u6307\u5b9a\u68cb\u5b50\u65c1\u8fb9\u7684\u4ee3\u4ef7\u662f\u591a\u5c11\u3002\n\n- \u6211\u4eec\u8bbe$dis(x1,y1,x2,y2,d)$\u4e3a\u5f53\u7a7a\u683c\u5728\u4f4d\u7f6e$(x1,y1)$\uff0c\u6307\u5b9a\u68cb\u5b50\u5728$(x2,y2)$\uff0c\u628a\u7a7a\u683c\u79fb\u52a8\u5230\u6307\u5b9a\u68cb\u5b50\u7684\u65b9\u4f4dd\u7684\u4ee3\u4ef7\u3002\n\n- \u6211\u4eec\u75280\u8868\u793a\u4e0b\u65b9\uff0c1\u8868\u793a\u4e0a\u65b9\uff0c2\u8868\u793a\u5de6\u65b9\uff0c3\u8868\u793a\u53f3\u65b9\n\n- \u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa$dis(i-1,j,i,j,d),dis(i+1,j,i,j,d),dis(i,j-1,i,j,d),dis(i,j+1,i,j,d),d\\in [0,4]$\uff0c\u5373\u5904\u7406\u51fa\u5bf9\u4e8e\u6307\u5b9a\u68cb\u5b50\u6240\u5728\u7684\u4f4d\u7f6e$i,j$\uff0c\u7a7a\u683c\u5728\u5b83\u7684\u4e0a\u3001\u4e0b\u3001\u5de6\u6216\u53f3\u65f6\uff0c\u5c06\u7a7a\u683c\u79fb\u52a8\u5230\u6307\u5b9a\u68cb\u5b50\u7684\u4e0a\u3001\u4e0b\u3001\u5de6\u548c\u53f3\u7684\u4ee3\u4ef7\u3002\u8fd9\u6837\u65b9\u4fbf\u5feb\u901f\u5730\u8fdb\u884c\u72b6\u6001\u7684\u6269\u5c55\u3002\n\n\n\n## 1. \u4f30\u4ef7\u51fd\u6570$h(n)$\n\n\u6211\u53d6\u7684\u4f30\u4ef7\u51fd\u6570\u5c31\u662f\u6700\u666e\u901a\u7684\u4f30\u4ef7\u51fd\u6570\u2014\u2014\u6307\u5b9a\u68cb\u5b50\u5230\u76ee\u6807\u4f4d\u7f6e\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u4f5c\u4f30\u4ef7\u51fd\u6570\u503c\u3002\n\n\n## 2. \u5b9e\u9645\u4ee3\u4ef7\u51fd\u6570$g(n)$\n\n\u5373\u5f53\u524d\u72b6\u6001\u5df2\u7ecf\u79fb\u52a8\u4e86\u591a\u5c11\u6b65\u3002\n\n\n## 3. OPEN\u8868\n\n\u5c31\u662f\u5f04\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff08priority\\_queue\uff09\u3002\u6839\u636e\u6bcf\u4e2a\u72b6\u6001\u7684\u4f30\u4ef7\u51fd\u6570$h(n)$\u4e0e\u5b9e\u9645\u4ee3\u4ef7\u51fd\u6570$g(n)$\u7684\u548c\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u7684\u3002\n\n\n## 4. Hash\u8868\n\n\u4e3a\u4e86\u5224\u91cd\u6211\u4eec\u9700\u8981\u4e00\u4e2aHash\u8868\u6765\u6392\u9664\u6ca1\u7528\u7684\u72b6\u6001\u3002\n\n\n\u6211\u4eec\u8bbe\u4e00\u4e2a\u72b6\u6001\u4e3astate\uff0cstate.h\u8868\u793a\u5f53\u524d\u72b6\u6001\u4e2d\u6307\u5b9a\u68cb\u5b50\u6240\u5728\u7684\u884c\u6570\uff0cstate.w\u8868\u793a\u5f53\u524d\u72b6\u6001\u4e2d\u6307\u5b9a\u68cb\u5b50\u6240\u5728\u7684\u5217\u6570\uff0cstate.d\u8868\u793a\u7a7a\u683c\u5728\u6307\u5b9a\u68cb\u5b50\u7684\u65b9\u4f4d\uff080\u62161\u62162\u62163\uff09\u3002\n\n\n\u90a3\u4e48\u6211\u4eec\u8ba9$hash\\_table(state.d,state.h,state.w)=min\\{g(state)\\}$\n\n\nhash\\_table\u6307\u7684\u662f\u54c8\u5e0c\u6570\u7ec4\uff0cg\u8868\u793a\u5b9e\u9645\u4ee3\u4ef7\u51fd\u6570\n\n\n\u8fd9\u91cc\u7684\u54c8\u5e0c\u8868\u6620\u5c04\u51fa\u6765\u7684\u4e0d\u80fd\u4f7fbool\u578b\uff08\u5373\u662f\u5426\u8bbf\u95ee\u8fc7\uff09\uff0c\u800c\u5e94\u8be5\u662fint\u578b\uff0c\u4fdd\u5b58\u5b9e\u9645\u4ee3\u4ef7\u51fd\u6570\u7684\u503c\u3002\n\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u7684\u4f30\u4ef7\u51fd\u6570\u53ea\u662f\u4e2a\u201c\u4f30\u8ba1\u503c\u201d\uff0c\u5b58\u5728\u8bef\u5dee\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8fdb\u884c\u7c7b\u4f3c\u4e8espfa\u7684\u201c\u677e\u5f1b\u201d\u64cd\u4f5c\u3002\u5373\u53ef\u80fd\u6709\u4e24\u4e2a\u72b6\u6001\uff0c\u5b83\u4eec\u7684\u884c\u6570\u3001\u5217\u6570\u3001\u65b9\u4f4d\u90fd\u76f8\u540c\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u4f30\u4ef7\u51fd\u6570\u4e5f\u4e00\u5b9a\u76f8\u540c\u3002\u4f46\u662f\u53ef\u80fd\u5b58\u5728\u5b83\u4eec\u7684\u5b9e\u9645\u4ee3\u4ef7\u51fd\u6570\u4e0d\u540c\u3002\u5f53\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u663e\u7136\u662f\u5b9e\u9645\u4ee3\u4ef7\u51fd\u6570\u5c0f\u7684\u90a3\u4e2a\u66f4\u4f18\uff0c\u800c\u53e6\u4e00\u4e2a\u4e5f\u5c31\u4e0d\u7528\u8003\u8651\u4e86\u3002\n\n\n\u6240\u4ee5\u5982\u679c\u6211\u4eec\u76f4\u63a5\u7528bool\u578b\u6765hash\u884c\u6570\u3001\u5217\u6570\u3001\u65b9\u5411\u7684\u8bdd\uff0c\u5c31\u65e0\u6cd5\u5224\u65ad\u54ea\u4e2a\u7684\u82b1\u8d39\u66f4\u5c0f\uff0c\u662f\u5426\u5e94\u8be5\u5c06\u5f53\u524d\u72b6\u6001\u52a0\u5165\u4f18\u5148\u961f\u5217\u4e86\u3002\n\n\n\u7b49\u4e8ehash\\_table\u4e2d\u5b58\u7684\u662f\u6bcf\u4e2a\u72b6\u6001\u6700\u5c0f\u7684\u5b9e\u9645\u4ee3\u4ef7\uff08\u5982\u679c\u6ca1\u51fa\u73b0\u67d0\u4e2a\u72b6\u6001\u5219\u4e3a\u65e0\u9650\u5927\uff09\u3002\n\n\n\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u72b6\u6001\u4e4b\u524d\u51fa\u73b0\u8fc7\u4e86\uff0c\u4f46\u662f\u5b83\u7684\u5b9e\u9645\u4ee3\u4ef7\u66f4\u5c0f\uff0c\u90a3\u5c31\u66f4\u65b0hash\\_table\u4e2d\u8fd9\u4e2a\u72b6\u6001\u7684\u6700\u5c0f\u503c\uff0c\u5e76\u5c06\u8fd9\u4e2a\u72b6\u6001\u52a0\u5165\u4f18\u5148\u961f\u5217\u3002\n\n\n## 5. \u5177\u4f53\u5b9e\u73b0\n\n1. \u8bfb\u5165\u4e00\u4e2a01\u77e9\u9635\u540e\u8fdb\u884cbfs\u9884\u5904\u7406\n\n2. \u8bfb\u5165\u7a7a\u683c\u4f4d\u7f6e\u3001\u8d77\u70b9\u4f4d\u7f6e\u3001\u7ec8\u70b9\u4f4d\u7f6e\u3002\u5c06\u201c\u628a\u7a7a\u683c\u79fb\u52a8\u5230\u8d77\u70b9\u7684\u65c1\u8fb9\u201d\u540e\u7684\u72b6\u6001\u52a0\u5165OPEN\u8868\uff08\u4f18\u5148\u961f\u5217\uff09\u4e2d\u3002\n\n3. \u5f53OPEN\u8868\u4e0d\u4e3a\u7a7a\uff1a\n\n- \u53d6\u51faOPEN\u8868\u4e2d\u6700\u4f18\u7684\u72b6\u6001\u3002\n\n- \u6269\u5c55\u72b6\u6001\uff08\u5c06\u7a7a\u683c\u79fb\u52a8\u5230\u6307\u5b9a\u68cb\u5b50\u7684\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u65b9\u6216\u4ea4\u6362\u7a7a\u683c\u4e0e\u6307\u5b9a\u68cb\u5b50\u7684\u4f4d\u7f6e\uff09\n\n- \u5bf9\u4e8e\u6bcf\u79cd\u6269\u5c55\u51fa\u6765\u7684\u72b6\u6001\uff0c\u53bbhash\\_table\u91cc\u67e5\u5bf9\u5e94\u7684\u503c\u3002\u5982\u679c\u67e5\u51fa\u6765\u7684\u503c\u6bd4\u5f53\u524d\u72b6\u6001\u7684\u5b9e\u9645\u4ee3\u4ef7\u5927\uff0c\u5c31\u628a\u5f53\u524d\u72b6\u6001\u653e\u5230OPEN\u8868\u4e2d\uff0c\u5e76\u4e14\u66f4\u65b0hash\\_table\u4e2d\u5bf9\u5e94\u7684\u503c\u3002\n\n- \u5982\u679c\u67d0\u4e2a\u65f6\u523b\u53d1\u73b0\u5f53\u524d\u72b6\u6001\u4e2d\u6307\u5b9a\u68cb\u5b50\u7684\u4f4d\u7f6e\u7b49\u4e8e\u7ec8\u70b9\u4f4d\u7f6e\uff0c\u76f4\u63a5\u8f93\u51fa\u8fd9\u4e2a\u72b6\u6001\u7684\u5b9e\u9645\u4ee3\u4ef7\u5373\u53ef\u3002\n\n4. \u5982\u679cOPEN\u8868\u7a7a\u4e86\u800c\u4e14\u8fd8\u6ca1\u627e\u5230\u7b54\u6848\u5219\u8bef\u89e3\uff0c\u8f93\u51fa-1\u3002\n\n\n## 6. \u6ce8\u610f\u4e8b\u9879\n\n- \u6e05\u7a7ahash\\_table\n\n- \u5982\u679c\u8d77\u70b9\u7b49\u4e8e\u7ec8\u70b9\u76f4\u63a5\u8f93\u51fa0\n\n- \u6ce8\u610f\u5e38\u6570\u95ee\u9898\uff08\u96fe\uff09\n\n\n## 7. \u8fa3\u9e21\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<typename _Tp>inline void IN(_Tp&dig)\n{\n    char c;dig=0;\n    while(c=getchar(),!isdigit(c));\n    while(isdigit(c))dig=dig*10+c-'0',c=getchar();\n}\nint n,m,q,mp[35][35],ex,ey,sx,sy,tx,ty,tmp[35][35],dis[35][35][35][35][4],htab[10][35][35];\nbool vis[35][35];\nstruct P{int h,w;}dirc[4]={{-1,0},{1,0},{0,-1},{0,1}};\nstruct ST\n{\n    int h,w,d,G,H;\n    bool operator < (const ST another)const{return G+H>another.G+another.H;}\n};\nqueue<P> que;\npriority_queue<ST> pq;\ninline int H(int h,int w){return abs(h-tx)+abs(w-ty);}\ninline void bfs(int x1,int y1,int x2,int y2)\n{\n    memset(tmp,0,sizeof(tmp)),memset(vis,0,sizeof(vis));\n    que.push((P){x1,y1}),vis[x1][y1]=1;\n    for(int i=0;i<4;i++)dis[x1][y1][x2][y2][i]=-1;\n    while(!que.empty())\n    {\n        P F=que.front(),nxt;que.pop();\n        for(int i=0;i<4;i++)\n        {\n            if(F.h-dirc[i].h==x2&&F.w-dirc[i].w==y2)dis[x1][y1][x2][y2][i]=tmp[F.h][F.w];\n            nxt.h=F.h+dirc[i].h,nxt.w=F.w+dirc[i].w;\n            if(nxt.h<1||nxt.h>n||nxt.w<1||nxt.w>m)continue;\n            if(vis[nxt.h][nxt.w]||!mp[nxt.h][nxt.w]||(nxt.h==x2&&nxt.w==y2))continue;\n            tmp[nxt.h][nxt.w]=tmp[F.h][F.w]+1;\n            que.push(nxt),vis[nxt.h][nxt.w]=1;\n        }\n    }\n}\nint main()\n{\n    IN(n),IN(m),IN(q);\n    for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)IN(mp[i][j]);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)if(mp[i][j])\n            for(int k=0;k<4;k++)if(mp[i+dirc[k].h][j+dirc[k].w])\n                    bfs(i+dirc[k].h,j+dirc[k].w,i,j);\n    while(q--)\n    {\n        memset(htab,127,sizeof(htab));\n        while(!pq.empty())pq.pop();\n        IN(ex),IN(ey),IN(sx),IN(sy),IN(tx),IN(ty),bfs(ex,ey,sx,sy);\n        if(sx==tx&&sy==ty){printf(\"0\\n\");goto end;}\n        for(int i=0;i<4;i++)\n            if(dis[ex][ey][sx][sy][i]!=-1)\n            {\n                ST nxt=(ST){sx,sy,i,dis[ex][ey][sx][sy][i],H(sx,sy)};\n                pq.push(nxt),htab[nxt.d][nxt.h][nxt.w]=dis[ex][ey][sx][sy][i];\n            }\n        while(!pq.empty())\n        {\n            ST F=pq.top();pq.pop();\n            if(F.h==tx&&F.w==ty){printf(\"%d\\n\",F.G);goto end;}\n            int eh=F.h+dirc[F.d].h,ew=F.w+dirc[F.d].w;\n            for(int i=0;i<4;i++)\n                if(dis[eh][ew][F.h][F.w][i]!=-1)\n                {\n                    ST nxt=(ST){F.h,F.w,i,F.G+dis[eh][ew][F.h][F.w][i],F.H};\n                    if(htab[nxt.d][nxt.h][nxt.w]>F.G+dis[eh][ew][F.h][F.w][i])\n                        pq.push(nxt),htab[nxt.d][nxt.h][nxt.w]=F.G+dis[eh][ew][F.h][F.w][i];\n                }\n            ST nxt=(ST){eh,ew,F.d^1,F.G+1,H(eh,ew)};\n            if(htab[nxt.d][nxt.h][nxt.w]>F.G+1)\n                pq.push(nxt),htab[nxt.d][nxt.h][nxt.w]=F.G+1;\n        }\n        printf(\"-1\\n\");\n        end:continue;\n    }\n    return 0;\n}\n```",
        "postTime": 1508403969,
        "uid": 22388,
        "name": "XZYQvQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/P1979)\n\n\u9898\u5916\u8bdd\uff1a\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u7684BFS\u7528std:queue\u5199\u5c31\u4f1a\u6302= =\n\n\u4f60\u4ee5\u4e3a\u6211\u662f\u66b4\u641c\uff1f\u5176\u5b9e\u6211\u662f\u6700\u77ed\u8def\u54d2~\n\n\u4e00\u5f00\u59cb\u5f3a\u884c\u66b4\u641c\uff0c\u6700\u540e\u53d1\u73b0\u600e\u4e48\u90fd\u4f18\u5316\u4e0d\u8fc7\u53bb=\u3002= \u3002\u66b4\u641c\u7684\u601d\u8def\u5c31\u662f\u628a\u6574\u5f20\u56fe\u901a\u8fc7\u7a7a\u767d\u5757\u548c\u7279\u6b8a\u5757\u62bd\u8c61\u6210\u4e00\u4e2a\u72b6\u6001\uff0c\u6bcf\u6b21\u7531\u7a7a\u767d\u5757\u5411\u56db\u5468\u6269\u5c55\uff0c\u4f46\u662f\u8fd9\u9898\u8be2\u95ee\u592a\u591a\u4e86\uff0c\u56e0\u4e3a\u4f60\u7684\u72b6\u6001\u662f\u7528\u4e24\u4e2a\u5757\u7684\u5750\u6807\u8868\u793a\u7684\uff0cBFS\u5355\u6b21\u5c31\u6709$O(n^2m^2)$\u7684\u590d\u6742\u5ea6\uff0c\u52a0\u4e0a$500$\u6b21\u8be2\u95ee\u5c31\u6302\u6389\u4e86\u3002\n\n\u5982\u4f55\u4f18\u5316\u5462\uff1f\u65e2\u7136\u90fd\u60f3\u5230\u901a\u8fc7\u4e24\u4e2a\u5757\u6765\u8868\u793a\u72b6\u6001\u4e86\uff0c\u6211\u4eec\u4e0d\u59a8\u505a\u7684\u5f7b\u5e95\u4e00\u70b9\uff0c\u76f4\u63a5\u9884\u5904\u7406\u72b6\u6001\u5efa\u56fe\uff0c\u5f53\u6210\u56fe\u8bba\u7684\u6700\u77ed\u8def\u6765\u505a\u3002\u5982\u679c\u9884\u5904\u7406\u51fa\u7684\u72b6\u6001\u6570\u91cf\u53ef\u4ee5\u63a5\u53d7\uff0c\u90a3\u4e48~~\u5c31\u7b97\u662f\u90a3\u4e2a\u6b7b\u6389\u7684\u6700\u77ed\u8def\u7b97\u6cd5\u4e5f~~\u5c31\u6ca1\u5565\u95ee\u9898\u3002\n\n\u8fd9\u6837\u4ee5\u6765\u3002\u9996\u5148\u72b6\u6001\u91cf\u4e0d\u80fd\u592a\u5927\uff0c\u4f46\u662f\u72b6\u6001\u53c8\u5fc5\u987b\u540c\u65f6\u5177\u6709\u7a7a\u767d\u5757\u548c\u7279\u6b8a\u5757\u7684\u4fe1\u606f\u3002\u6211\u4eec\u53d1\u73b0\u5f53\u4e24\u4e2a\u5757\u76f8\u90bb\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528$node[i][j][k]$\u8868\u793a\u7279\u6b8a\u5757\u5728$(i,j)$\uff0c\u7a7a\u767d\u5757\u5728\u5b83\u7684$k$\u65b9\u5411\uff0c\u8fd9\u6837\u65e2\u50a8\u5b58\u4e86\u4e24\u4e2a\u5757\u7684\u4fe1\u606f\uff0c\u72b6\u6001\u53ea\u6709$nm$\u7ea7\u522b\u3002\u6211\u4eec\u73b0\u5728\u5c31\u8981\u628a\u8fd9\u4e9b\u72b6\u6001\u8fde\u63a5\u8d77\u6765\uff0c\u4e5f\u5c31\u662f\u9884\u5904\u7406\u4e24\u4e2a\u72b6\u6001\u95f4\u7684\u79fb\u52a8\u6b21\u6570\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u7528\u4e0aBFS\u4e86\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5f53\u7a7a\u767d\u5757\u4e0e\u7279\u6b8a\u5757\u76f8\u90bb\u65f6\uff0c\u8981\u5411\u4e00\u4e2a\u65b9\u5411\u79fb\u52a8\u7279\u6b8a\u5757\uff0c\u5176\u5b9e\u662f\u901a\u8fc7\u201c\u79fb\u52a8\u201d\u7a7a\u767d\u5757\u4f7f\u5f97\u539f\u6765\u5728\u90a3\u4e2a\u65b9\u5411\u7684\u68cb\u5b50\u79fb\u5f00\uff0c\u6700\u540e\u518d\u628a\u7279\u6b8a\u5757\u79fb\u8fc7\u53bb(\u5e94\u8be5\u90fd\u73a9\u8fc7\u534e\u5bb9\u9053\u5427\uff0c\u6ca1\u6709\u5148\u53bb\u73a9\u73a9=\u3002=)\u3002\u6240\u4ee5\u6211\u4eec\u8bbe$dis[i][j][k][h]$\u8868\u793a\u7279\u6b8a\u5757\u5728$(i,j)$\uff0c\u7a7a\u767d\u5757\u5728\u5b83\u7684$k$\u65b9\u5411\uff0c\u901a\u8fc7\u79fb\u52a8\u4f7f\u5f97\u7279\u6b8a\u5757\u5411$h$\u65b9\u5411\u79fb\u52a8\u7684\u6700\u5c0f\u8ddd\u79bb\u3002\u8fd9\u91cc\u53ef\u4ee5\u7528BFS\u6c42\u51fa\u8ddd\u79bb\uff0c\u6ce8\u610f\u7279\u6b8a\u5757\u79fb\u52a8\u90a3\u4e00\u4e0b\u4e5f\u8981\u8ba1\u7b97\u8fdb\u53bb\u3002\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u72b6\u6001\u8fde\u8fb9\u4e86\uff0c\u8fd9\u91cc\u5982\u679c\u4f60\u7a0d\u5fae\u6ce8\u610f\u4e00\u4e0b\u4f60\u7684$move$\u6570\u7ec4\u7684\u987a\u5e8f\u5c31\u53ef\u4ee5\u7528\u5f02\u6216\u5f88\u65b9\u4fbf\u5730\u5904\u7406\u4e86\uff0c\u5f53\u7136\u4f60\u811a\u52a8\u5199\u4e00\u4e0b$if$\u4e5f\u53ef\u4ee5=\u3002=\u3002\u6574\u4e2a\u9884\u5904\u7406\u7684\u590d\u6742\u5ea6\u4e3a$O(n^2m^2)$\n\n\u7ec8\u4e8e\u8be5\u6c42\u89e3\u8fa3\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u7684\u72b6\u6001\u90fd\u662f\u7a7a\u767d\u5757\u4e0e\u7279\u6b8a\u5757\u76f8\u90bb\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u65b0\u5f00\u4e24\u4e2a\u8282\u70b9\u8868\u793a\u521d\u59cb\u72b6\u6001\u548c\u6700\u7ec8\u72b6\u6001\uff0c\u7136\u540e\u6211\u4eec\u7528BFS\u9884\u5904\u7406\u4e00\u4e0b\u7a7a\u767d\u5757\u79fb\u52a8\u5230\u7279\u6b8a\u5757\u8eab\u8fb9\u7684\u8ddd\u79bb\uff0c\u4ece\u521d\u59cb\u72b6\u6001\u5411\u8fd9\u4e9b\u72b6\u6001\u8fde\u5904\u7406\u51fa\u7684\u8ddd\u79bb\u7684\u8fb9\u3002\u518d\u8ba9\u6700\u7ec8\u72b6\u6001\u5411\u5468\u56f4\u8fde\u96f6\u8fb9\uff0c\u4fdd\u8bc1\u521d\u59cb\u72b6\u6001\u548c\u6700\u7ec8\u72b6\u6001\u8054\u901a\uff0c\u8fd9\u4e2a\u65f6\u5019\u968f\u4fbf\u54ea\u4e2a\u6700\u77ed\u8def\u7b97\u6cd5\u8dd1\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u6211\u7528\u67d0\u4e2a\u53ef\u601c\u7684\u65e5\u5e38\u88ab\u5361\u7684\u6b7b\u6389\u7684\u7b97\u6cd5\u6c34\u8fc7\u53bb\u4e86=\u3002=\n\n```cpp\n//std::queue \u4e0d\u77e5\u9053\u4e3a\u5565\u53c8\u6302\u4e86\u3002\u3002\u3002\n#include<queue> \n#include<cstdio> \n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=50,inf=0x3f3f3f3f;\nstruct a{int x,y;}qs[400000]; \nint mov[4][2]={{1,0},{-1,0},{0,1},{0,-1}};\nint mapp[N][N],node[N][N][4],inq[4*N*N];\nint temp[N][N],dis[N][N][4][4],diss[4*N*N];\nint p[4*N*N],noww[16*N*N],goal[16*N*N],val[16*N*N];\nint n,m,q,f,b,cnt,num,t1,t2,t3,t4,t5,t6,s,t,tep,p1,p2;\nqueue<int> qx; \nbool ok(int xx,int yy)\n{\n    return xx>=1&&xx<=n&&yy>=1&&yy<=m&&mapp[xx][yy];\n}\nvoid link(int f,int t,int v)\n{\n    noww[++cnt]=p[f],p[f]=cnt;\n    goal[cnt]=t,val[cnt]=v;\n}\nint GET_DIS(int sx,int sy,int ex,int ey)\n{\n    if(sx==ex&&sy==ey) return 0;\n    memset(temp,-1,sizeof temp);\n    temp[sx][sy]=0,qs[f=b=0]=(a){sx,sy};\n    while(f<=b)\n    {\n        int tx=qs[f].x,ty=qs[f].y;\n        for(int i=0;i<4;i++)\n        {\n            int nx=tx+mov[i][0],ny=ty+mov[i][1];\n            if(ok(nx,ny)&&temp[nx][ny]==-1)\n            {\n                temp[nx][ny]=temp[tx][ty]+1; qs[++b]=(a){nx,ny};\n                if(nx==ex&&ny==ey) return temp[nx][ny];\n            }\n        }\n        f++;\n    } \n    return inf;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&q);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&mapp[i][j]);\n            for(int k=0;k<4;k++)\n                node[i][j][k]=++num;\n        }\n    memset(dis,0x3f,sizeof dis);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(mapp[i][j])\n            {\n                mapp[i][j]=0;\n                for(int k=0;k<4;k++)\n                    if(ok(t1=i+mov[k][0],t2=j+mov[k][1]))\n                        for(int h=0;h<4;h++)\n                            if(ok(t3=i+mov[h][0],t4=j+mov[h][1]))\n                                dis[i][j][k][h]=GET_DIS(t1,t2,t3,t4)+1;\n                mapp[i][j]=1;\n            }  \n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            for(int k=0;k<4;k++)\n                for(int h=0;h<4;h++)\n                    if(dis[i][j][k][h]<inf)\n                        link(node[i][j][k],node[i+mov[h][0]][j+mov[h][1]][h^1],dis[i][j][k][h]);\n    while(q--)\n    {\n        scanf(\"%d%d%d%d%d%d\",&t1,&t2,&t3,&t4,&t5,&t6);\n        if(t3==t5&&t4==t6) {printf(\"0\\n\");continue;} \n        s=++num; t=++num;\n        mapp[t3][t4]=0;\n        for(int i=0;i<4;i++)\n            if(mapp[p1=t3+mov[i][0]][p2=t4+mov[i][1]])\n                if((tep=GET_DIS(t1,t2,p1,p2))<inf) link(s,node[t3][t4][i],tep);\n        mapp[t3][t4]=1;\n        for(int i=0;i<4;i++)\n            if(mapp[t5+mov[i][0]][t6+mov[i][1]]) link(node[t5][t6][i],t,0);\n        memset(diss,0x3f,sizeof diss),diss[s]=0; qx.push(s),inq[s]=1; \n        while(!qx.empty())\n        {\n            int tn=qx.front();\n            qx.pop(); inq[tn]=0;\n            for(int i=p[tn];i;i=noww[i])\n                if(diss[goal[i]]>diss[tn]+val[i])\n                {\n                     diss[goal[i]]=diss[tn]+val[i];\n                     if(!inq[goal[i]]) qx.push(goal[i]),inq[goal[i]]=1;\n                }\n        }\n        diss[t]==inf?printf(\"-1\\n\"):printf(\"%d\\n\",diss[t]);\n    }\n    return 0;\n} \n```",
        "postTime": 1533951412,
        "uid": 56967,
        "name": "ydnhaha",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\uff1aNOIP 2013 \u534e\u5bb9\u9053----BFS\uff0c\u6700\u77ed\u8def"
    },
    {
        "content": "\u7ec8\u4e8eA\u4e86\uff0c\u91cd\u6784\u4ee3\u7801\\*3 \u3002\u3002\u3002\n\n\u770b\u5230\u8fd9\u9898\n\n\u9996\u5148\u601d\u8def\uff1a$dfs$\n\n$dfs$\u80af\u5b9a\u8d85\u65f6\u5427\uff0c\u8fd8\u6709\u5176\u4ed6\u601d\u8def\u5417\uff1f\n\n\u2026\u2026\n\u2026\u2026\n\u2026\u2026\n\n\u6ca1\u4e86\n\n--------\n\n\u6211\u770b\u5230\u8fd9\u9898\u7684\u601d\u8def\u5c31\u662f\u7206\u641c\u2026\u2026\uff08\u4f46\u4f3c\u4e4e\u66b4\u529b\u80fd\u5f97$70$\u5206\uff1fqwq\uff09\n\n\u53d1\u73b0\u601d\u8def\n\n\u56e0\u4e3a\u53ea\u6709\u7a7a\u767d\u5757\u5230\u4e86\u94a6\u5b9a\u5757\u65c1\u8fb9\n\n\u94a6\u5b9a\u5757\u624d\u6709\u53ef\u80fd\u5230\u8fbe\u6307\u5b9a\u533a\u57df\uff08\u73a9\u8fc7\u534e\u5bb9\u9053\u5427\uff1f\uff09\n\n\u6240\u4ee5\u5148\u5904\u7406\u51fa\u7a7a\u767d\u5757\u5230\u94a6\u5b9a\u5757\u65c1\u8fb9\u7684\u6700\u77ed\u65f6\u95f4\uff08\u6ce8\u610f\u662f\u65c1\u8fb9\uff01\u56e0\u4e3a\u5b83\u5230\u8fbe\u94a6\u5b9a\u5757\u5c31\u662f\u5b83\u5e26\u94a6\u5b9a\u5757\u8dd1\u4e86\uff09\n\n\u7136\u540e$dfs$\u8ba9\u7a7a\u767d\u5757\u5e26\u94a6\u5b9a\u5757\u6ee1\u56fexjb\u8dd1\n\n\u8fd9\u80af\u5b9a\u8fd8\u662f\u8d85\u65f6\u554a\u2026\u2026\n\n\u53d1\u73b0\u53ef\u4ee5\u5904\u7406\u51fa\u53ef\u79fb\u52a8\u7684\u5757\u5230\u5176\u4ed6\u53ef\u79fb\u52a8\u5757\u7684\u6700\u77ed\u8ddd\u79bb\n\n\u660e\u663e\u53ef\u4ee5\u7528\u6700\u77ed\u8def\uff08\u660e\u663e\u5417\uff1f\uff09,\u5c06\u4e24\u4e2a\u76f8\u90bb\u7684\u53ef\u79fb\u5757\u94fe\u63a5\u4e00\u6761\u8fb9\n\n\u7136\u540e$SPFA$\n\n\u4e00\u4e2a\u53ef\u79fb\u5757\u79fb\u52a8\u5230\u67d0\u4f4d\u7f6e\u7684\u82b1\u8d39\u6b65\u6570\u662f\u7a7a\u683c\u4e0d\u7ecf\u8fc7\u94a6\u5b9a\u5757\u5230\u8fbe\u6b64\u4f4d\u7f6e\u65b9\u5411\u82b1\u8d39\u65f6\u95f4\u7136\u540e$+1$\uff08\u5c31\u662f\u79fb\u5b8c\u7a7a\u683c\u518d\u79fb\u94a6\u5b9a\u5757\uff09\n\n\u5904\u7406\u51fa\u6765\u518d$dfs$\u5c31\u5feb\u4e86\u5f88\u591a\n\n\u6ce8\u610f\u94a6\u5b9a\u5757\u53ef\u80fd\u4e00\u5f00\u59cb\u5c31\u5728\u94a6\u5b9a\u533a\u57df\n\n\u4ee3\u7801\uff1a\n\n```cpp\n# include<iostream>\n# include<cstdio>\n# include<cstring>\n# include<queue>\n# define inv inline void\n# define ini inline int\n# define is isdigit(ch)\n# define ge getchar()\nusing namespace std;\nstruct o{\n    int x,y,dis;\n};\nint n,m,g,s1,s2,e1,e2,t1,t2,num,tot,minn;\nint mv1[4]={0,0,1,-1};\nint mv2[4]={1,-1,0,0};\nint to[5],en1[5],en2[5],pay[5],h[901];\nint d[31][31][31][31][4];\nbool use[31][31],vis[31][31],see[31][31],tp[31][31];\nbool ll[31][31][31][31];\nini read()\n{\n    int x=0;\n    char ch=ge;\n    while(!is)\n    ch=ge;\n    while(is)\n    {\n        x=x*10+ch-48;\n        ch=ge;\n    }\n    return x;\n}\ninv spfa(int x,int y,int k)\n{\n    queue<o>q;\n    d[x][y][x][y][k]=0;\n    q.push((o){x,y,0});\n    while(!q.empty())\n    {\n        o t=q.front();\n        q.pop();\n        see[t.x][t.y]=0;\n        for(int i=0;i<4;i++)\n          {\n              int xxx=t.x+mv1[i],yyy=t.y+mv2[i];\n              if(use[xxx][yyy]&&d[x][y][xxx][yyy][k]>d[x][y][t.x][t.y][k]+ll[t.x][t.y][xxx][yyy]&&ll[t.x][t.y][xxx][yyy])\n              {\n                  d[x][y][xxx][yyy][k]=d[x][y][t.x][t.y][k]+ll[t.x][t.y][xxx][yyy];\n                  if(!see[xxx][yyy])\n                  {\n                      see[xxx][yyy]=1;\n                      q.push((o){xxx,yyy,0});\n                }\n            }\n          }\n    }\n}\ninv bfs()\n{\n    queue<o>q;\n    q.push((o){e1,e2,0});\n    vis[e1][e2]=0;\n    while(!q.empty())\n    {\n        o t=q.front();\n        q.pop();\n        for(int i=0;i<4;i++)\n          {\n              int xx=t.x+mv1[i],yy=t.y+mv2[i];\n              if(vis[xx][yy])\n            if(xx==s1&&yy==s2)\n              {\n                  tot++;\n                  to[tot]=i;\n                  en1[tot]=t.x;\n                  en2[tot]=t.y;\n                  pay[tot]=t.dis;\n            }\n              else\n              {\n                  vis[xx][yy]=0;\n                  q.push((o){xx,yy,t.dis+1});\n            }\n          }\n    }\n}\ninv dfs(int x,int y,int fa1,int fa2,int go,int tott)\n{\n    if(tott>=minn) return;\n    if(x==t1&&y==t2)\n    {\n        minn=tott;\n        return;\n    }\n    use[x][y]=0;\n    for(int i=0;i<4;i++)\n      {\n          int xx=x+mv1[i],yy=y+mv2[i];\n          if(d[fa1][fa2][xx][yy][go]<1e5&&use[xx][yy]&&!tp[xx][yy])\n          {\n              tp[xx][yy]=1;\n              dfs(xx,yy,x,y,i,tott+d[fa1][fa2][xx][yy][go]+1);\n              tp[xx][yy]=0;\n        }\n      }\n    use[x][y]=1;\n}\nint main()\n{\n    memset(d,1,sizeof(d));\n    n=read(),m=read(),g=read();\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        use[i][j]=read();\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n       for(int k=0;k<4;k++)\n         {\n             int xx=i+mv1[k],yy=j+mv2[k];\n             if(use[xx][yy])\n             {\n                 ll[xx][yy][i][j]=1;\n                 ll[i][j][xx][yy]=1;\n            }\n         }\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        for(int k=0;k<4;k++)\n          {\n              int xx=i+mv1[k],yy=j+mv2[k];\n             if(use[i][j]&&use[xx][yy])\n             {\n                 use[xx][yy]=0;\n                 spfa(i,j,k);\n                 use[xx][yy]=1;\n            }\n          }\n    while(g--)\n    {\n        tot=0;\n        for(int i=1;i<=n;i++)\n          for(int j=1;j<=m;j++)\n            vis[i][j]=use[i][j];\n        e1=read(),e2=read(),s1=read(),s2=read(),t1=read(),t2=read();\n        if(s1==t1&&s2==t2)\n        {\n            printf(\"0\\n\");\n            continue;\n        }\n        bfs();\n        if(!tot)\n        {\n            printf(\"-1\\n\");\n            continue;\n        }\n        minn=9999999;\n        for(int i=1;i<=tot;i++)\n          dfs(s1,s2,en1[i],en2[i],to[i],pay[i]);\n        printf(\"%d\\n\",(minn==9999999)?-1:minn);\n    }\n    return 0;\n}\n```",
        "postTime": 1509156227,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "~~\u7b2c\u4e00\u6b21\u53d1\u7d2b\u9898\u9898\u89e3\uff0c\u5c45\u7136\u5728\u53d1\u5e03\u524d\u592a\u6fc0\u52a8\uff0c\u628a\u521a\u5199\u597d\u7684\u8fd8\u6ca1\u53d1\u5e03\u7684\u9898\u89e3\u4e00\u4e2aCtrl+A\u548cBackspace\u5168\u5220\u4e86\u3002\uff08\u6240\u4ee5\u8fd9\u662f\u4e8c\u7a3f\uff09~~\n\n\n\n## \u524d\u7f6e\uff1a\n\n\u505a\u672c\u9898\u4e00\u5b9a\u8981\u6709\u7684\u4e00\u4e9b\u601d\u60f3\uff1a\n\n1\u3001\u4ece\u7b80\u601d\u60f3\uff1a \u6a21\u62df\u767d\u683c\u5b50\u7684\u79fb\u52a8\uff0c\u800c\u5343\u4e07\u4e0d\u8981\u60f3\u8fd9\u53bb\u6a21\u62df\u4f17\u68cb\u5b50\u7684\u79fb\u52a8\u3002\u8fd9\u6837\u4f1a\u7b80\u5355\u5f88\u591a\uff0c\u5426\u5219\u4f1as\u7684\u5f88\u60e8\u3002\n\n2\u3001\u8f6c\u6362\u601d\u60f3\uff08\u4e07\u7269\u7686\u6709\u5176\u5bf9\u7acb\u9762\uff09\uff1a\u9898\u76ee\u4e2d\u7ed9\u7684\u89c4\u5219\uff0c\u662f\u68cb\u5b50\u53ef\u4ee5\u79fb\u52a8\u5230\u767d\u8272\u683c\u5b50\u4e0a\u3002\u6211\u4eec\u5c06\u5176\u5171\u8f6d\u4e00\u4e0b\uff1a\n\n\u767d\u8272\u683c\u5b50\u53ef\u4ee5\u79fb\u52a8\u5230\u68cb\u5b50\u4e0a\uff0c\u6216\u8005\u8bf4\uff0c\u767d\u8272\u683c\u5b50\u53ef\u4ee5\u548c\u68cb\u5b50\u4ea4\u6362\u4f4d\u7f6e\u3002\n\n3\u3001\u767d\u8272\u683c\u5b50\u6c38\u8fdc\u53ea\u6709\u4e00\u4e2a\u3002\uff08\u770b\u4f3c\u662f\u5e9f\u8bdd\u7684\u5927\u5b9e\u8bdd\uff09\n\n4\u3001\u4e60\u60ef\u628a\u8d77\u70b9\u53eb\u505ax\uff0c\u7ec8\u70b9\u53eb\u4f5cht\n\n### \u66b4\u529b\u90a3\u4e9b\u4e8b\uff1a\n\n\u66b4\u529b\u4e0d\u96be\u5b9e\u73b0\uff0c\u5c31\u662f\u4ee4\u7a7a\u767d\u683c\u5b50\u5230\u5904\u79fb\u52a8\uff0c\u7136\u540e\u4e0d\u65ad\u5bf9ans\u53d6min\u5c31\u597d\u4e86\u3002\u522b\u7684\u9898\u89e3\u6709\u5f88\u591a\u8be6\u7ec6\u4ecb\u7ecd\uff0c\n\n\u5728\u6b64\u4e0d\u8fc7\u591a\u8d58\u8ff0\u3002\n\n## \u601d\u8def\u83b7\u53d6\uff1a\n--------------------------------------\n\n#### First,\u4ece\u9898\u76ee\u57fa\u672c\u7684\u4fe1\u606f\u5165\u624b\u3002\n\n\u5982\u4f55\u624d\u80fd\u4ee4\u6211\u4eec\u7684\u76ee\u6807\u68cb\u5b50\u79fb\u52a8\uff1f\n\n\u7a0d\u4f5c\u601d\u8003\u3002\u3002\u3002\u3002\u3002\u3002\u5f53\u7136\u662f\u8ba9\u7a7a\u767d\u683c\u5b50\u5728\u76ee\u6807\u65d7\u5b50\u65c1\u8fb9\u554a\uff01\uff01\n\n\u4e00\u4e2a\u8981\u70b9get\u3002\n\nSecond, \u5bf9\u767d\u8272\u683c\u5b50\u5168\u5c40\u7684\u79fb\u52a8\u8fdb\u884c\u8bd5\u9a8c\uff1a\n\n\u53d1\u73b0\uff0c\u767d\u8272\u683c\u5b50\u7684\u79fb\u52a8\u53ef\u4ee5\u5927\u81f4\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a\u4e0d\u987e\u4e00\u5207\u79fb\u5411\u76ee\u6807\u68cb\u5b50\uff0c\u7136\u540e\u5728\u68cb\u5b50\u5468\u56f4\u6253\u8f6c\uff08\u56e0\u4e3a\u8fd9\u6837\u624d\u53ef\u4ee5\u6b65\u6570\u6700\u5c11\uff09\n\n#### \u3060\u304b\u3089\uff08So\uff09\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u7684\u5bf9\u8c61\uff0c\u81ea\u7136\u5c31\u6765\u5230\u4e86\u7b2c\u4e8c\u9636\u6bb5\u4e0a\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c**\u65e0\u8bba\u68cb\u5b50\u5728\u54ea\u4e2a\u5750\u6807\u4e0a\uff0c\u767d\u8272\u683c\u5b50\u6c38\u8fdc\u90fd\u53ea\u4f1a\u6709\u56db\u79cd\u60c5\u51b5\uff1a\u4e0a\uff0c\u4e0b\uff0c\u5de6\uff0c\u53f3\u3002**\n\n\u79fb\u52a8\u540e\u5462\uff1f    \u53d1\u73b0\uff1a  \u4ece\u4e00\u6b21\u79fb\u52a8\u5230\u4e0b\u4e00\u6b21\u79fb\u52a8\uff0c\u767d\u8272\u683c\u5b50\u548c\u68cb\u5b50\u53ea\u4f1a\u51fa\u73b0\u4e24\u5927\u7c7b\u79fb\u52a8\uff1a\n\n**1\u3001\u767d\u8272\u683c\u5b50\u8fd8\u5728\u68cb\u5b50\u5468\u56f4\uff0c\u53ea\u4e0d\u8fc7\u662f\u4e0a\u4e0b\u5de6\u53f3\u968f\u673a\u53d8\u4e86\u3002**\n\n**2\u3001\u767d\u8272\u683c\u5b50\u76f4\u63a5\u548c\u68cb\u5b50\u4f4d\u7f6e\u8fdb\u884c\u4e86\u4ea4\u6362\u3002**\n\n\u518d\u770b\u9898\u76ee\u8981\u6c42\uff1a\u6700\u77ed\u8def\u5f84\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u7528BFS\uff0c\u6c42\u51fa\u767d\u8272\u683c\u5b50\u4ece\u4e0a\u4e00\u6b21\u4f4d\u7f6e\u79fb\u52a8\u5230\u76ee\u524d\u4f4d\u7f6e\u7684\u8ddd\u79bb\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6b65\u6570\u5f88\u660e\u663e\u662f1.\n\n\u53c8\u4e00\u4e2a\u8981\u70b9get.\n\n#### \u73b0\u5728\u8003\u8651\uff0c\u5982\u4f55\u5bf9\u6211\u4eec\u7684\u72b6\u6001\u8fdb\u884c\u8bb0\u5f55\uff1f\n\n\u8003\u8651\u7528\u4e09\u7ef4\u6570\u7ec4ok[x][y][k] \uff08\u5750\u6807x\uff0cy + \u72b6\u6001\u7f16\u53f7k\uff09\u8bb0\u5f55\u3002 \uff08\u5176\u4e2dk\uff1ak = 0,1,2,3\uff0c\u5206\u522b\u5bf9\u5e94\u4e0a\u4e0b\u5de6\u53f3\u5373\u53ef\uff09\n\n\u6700\u540e\uff0c\u518d\u770b\u4e00\u4e0b\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\uff1a\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u6c42\u51fa\uff08\u4ee5\u68cb\u5b50\u4e3a\u4e2d\u5fc3\uff09\u6240\u6709\u5750\u6807\u5230\u76f8\u90bb\u5750\u6807\u7684\u6b65\u6570\u3002\n\n## #\uff01\uff01\uff01\u5173\u7cfb\u5982\u6b64\u5bc6\u96c6\uff0c\u4f55\u4e0d\u8003\u8651\u5efa\u56fe\u5462\uff1f\n\n\u5982\u679c\u5c06\u6240\u6709\u7684\u72b6\u6001\u770b\u505a\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u4ed6\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684\u8fb9\u6743\u5c31\u662f\u4ed6\u4eec\u7684\u6b65\u6570\u3002\u5982\u679c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u56fe\u8fdb\u884cSPFA\u5462\uff1f\n\n#### \u5728\u90a3\u4e00\u4e32dist\u4e2d\uff0c\u6211\u4eec\u8981\u6c42\u7684\u8ddd\u79bb\uff0c\u4e0d\u6b63\u662f\u7ec8\u70b9ht\u5468\u56f4\u76844\u4e2a\u72b6\u6001\u5bf9\u5e94\u7684dist\u5417\uff01\uff08\u53d6min\uff0c\u5e9f\u8bdd\uff09\n\n\u91cd\u5927\u8981\u70b9get\uff01\uff01\n\nAt last, \u5982\u4f55\u5bf9\u8fd9\u4e9b\u72b6\u6001\u8fdb\u884c\u7f16\u53f7\uff0c\u8dd1SPFA\uff1f\u4e0d\u80fd\u76f4\u63a5\u7528\u4e09\u7ef4\u6570\u7ec4\u5efa\u56fe\u554a\uff01\n\n**\u4f60\u9700\u8981\u4e00\u4e2a\u516c\u5f0f\uff1a((x - 1) * m + y) * 4 - (4 - k);**\n\n\u81f3\u6b64\uff0c\u8fd9\u9053\u9898\u4e5f\u662f\u88ab\u6211\u4eec\u653b\u9677\u4e86\u3002\n\n \n\n## \u540e\u7f6e\uff1a\n\n1\u3001\u4e00\u5b9a\u8981\u6ce8\u610f\u4ee3\u7801\u4e2d\u7684\u7ec6\u8282\u64cd\u4f5c(\u7279\u522b\u662fBFS\u8dd1\u72b6\u6001\u7684\u65f6\u5019\uff09\n\n2\u3001k\u5bf9\u5e94\u7684\u72b6\u6001\u53ef\u5343\u4e07\u4e0d\u80fd\u5fd8\u5440\uff0c\u5bf9\u5e94\u9519\u4e86\u540e\u679c\u5f88\u4e25\u91cd\u5440\uff01\n\n \n\n# \u7801\u529b\u5168\u5f00\uff01\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 50\n#define N2 5005\n#define isdigit(c) ((c)>='0'&&(c)<='9')\n#define INF (~0u>>1)\nconst int orz = 0;\n\ninline int read(){\n\tint x = 0, s = 1;\n\tchar c = getchar();\n\twhile(!isdigit(c)){\n\t\tif(c == '-') s = -1;\n\t\tc = getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx = (x << 1) + (x << 3) + (c ^ '0');\n\t\tc = getchar();\n\t}\n\treturn x * s;\n}\n\nbool ma[N][N], vis[N][N];\nint fx[4] = {-1, 1, 0, 0};\nint fy[4] = {0, 0, -1, 1};\nint n, m, ex, ey, sx, sy, htx, hty;\n\ninline bool judge(int x, int y){\n\tif(x < 1 || y < 1 || x > n || y > m)return 0;\n\treturn ma[x][y] ;\n}\n\ninline int getnum(int x, int y, int t){\n    return ((x - 1) * m + y) * 4 - (4 - t);\n} \n\nstruct data{\n\tint x ,y;\n\tint step; /*\u5b58\u50a8\u6bcf\u4e2a\u5750\u6807\u7684\u4fe1\u606f*/\n};\n/* sx,sy\u662f\u5426\u53ef\u4ee5\u5230\u8fbehtx, hty?*/\nint bfs(int dx, int dy, int sx, int sy, int htx, int hty){ \n\tqueue <data> q;                   /*\u6a21\u62df\u53ef\u79fb\u52a8\u683c\u5b50\u7684\u79fb\u52a8*/\n\tmemset(vis, 0, sizeof(vis));\n\tq.push((data){sx, sy, 0});\n\tvis[sx][sy] = 1; /*\u4ece\u8d77\u70b9\u5f00\u59cb*/\n\twhile(!q.empty()){\n\t\tdata now = q.front();\n\t\tq.pop();\n\t\tint x = now.x, y = now.y, step = now.step;\n\t\tif(x == htx && y == hty){\n\t\t\treturn now.step;   /*\u5982\u679c\u5230\u8fbe\u7ec8\u70b9*/\n\t\t}\n\t\tfor(int i = 0;i < 4; i++){\n\t\t\tint l = x + fx[i], r = y + fy[i];\n\t\t\tif(judge(l, r)){\n\t\t\t\tif(vis[l][r] || (l == dx && r == dy))continue; /*\u5982\u679c\u65b0\u70b9\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u6216\u8005\u7b49\u4e8e\u73b0\u5728\u7684*/\n\t\t\t\tq.push((data){l, r, step + 1});\n\t\t\t\tvis[l][r] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn INF;        /*\u4e24\u4e2a\u70b9\u4e0d\u80fd\u4e92\u76f8\u5230\u8fbe*/\n}\n\nstruct node{\n\tint u, v, w;\n\tint next;\n} t[N2];\nint f[N2];\n\nint bian = 0;\nvoid add(int u, int v, int w){\n\tt[++bian].u = u;\n\tt[bian].v = v;\n\tt[bian].w = w;\n\tt[bian].next = f[u];\n\tf[u] = bian;\n\treturn ;\n}\n\n/*\u9884\u5904\u7406\uff0c \u627e\u51fa\u6240\u6709\u53ef\u884c\u72b6\u6001*/\n\nbool ok[N][N][5];\nvoid prepare(){     \n\tfor(int i = 1;i <= n; i++)\n\t\tfor(int j = 1;j <= m; j++)\n\t\t\tif(ma[i][j])\n\t\t\t\tfor(int k = 0;k < 4; k++)\n\t\t\t\t\tif(judge(i+fx[k], j+fy[k]))\n\t\t\t\t\t\tok[i][j][k] = 1;\n\tfor(int i = 1;i <= n; i++)    /*\u7a7a\u767d\u683c\u5b50\u56f4\u7ed5\u68cb\u5b50\u65cb\u8f6c\u65f6*/\n\t\tfor(int j = 1;j <= m; j++)\n\t\t\tfor(int k = 0;k < 4; k++)\n\t\t\t\tfor(int l = k + 1; l < 4; l++)  /*\u679a\u4e3e\u4e0d\u540c\u7684\u65b9\u5411*/\n\t\t\t\t\tif(ok[i][j][k] && ok[i][j][l]){\n\t\t\t\t\t\tint a = getnum(i, j, k), b = getnum(i, j, l);\n\t\t\t\t\t\tint c = bfs(i, j, i + fx[k], j + fy[k], i + fx[l], j + fy[l]);\n\t\t\t\t\t\tif(c != INF){     /*\u72b6\u6001\u4e4b\u95f4\u662f\u5426\u53ef\u8fbe*/\n\t\t\t\t\t\t\tadd(a, b, c);\n\t\t\t\t\t\t\tadd(b, a, c);\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\tfor(int i = 1;i <= n; i++)  /*\u7a7a\u767d\u683c\u5b50\u548c\u68cb\u5b50\u4ea4\u6362\u4f4d\u7f6e*/ \n\t\tfor(int j = 1;j <= m; j++){\n\t\t\tif(ok[i][j][3] && ok[i][j+1][2]){\n\t\t\t\tint a = getnum(i, j, 3);     /*\u51e0\u79cd\u5c0f\u60c5\u51b5*/\n\t\t\t\tint b = getnum(i, j+1, 2);\n\t\t\t\tadd(a, b, 1);\n\t\t\t\tadd(b, a, 1); \n\t\t\t}\n\t\t}\n\tfor(int i = 1;i <= n; i++)\n\t\tfor(int j = 1;j <= m; j++){\n\t\t\tif(ok[i][j][1] && ok[i+1][j][0]){\n\t\t\t\tint a = getnum(i, j, 1);\n\t\t\t\tint b = getnum(i+1, j, 0);\n\t\t\t\tadd(a, b, 1);\n\t\t\t\tadd(b, a, 1);\n\t\t\t}\n\t\t}\n\treturn ;\n} \n\n/*\u8fdb\u884c\u6700\u77ed\u8def\u6c42\u89e3*/ \n\nqueue <int> q;\nbool viss[N2];\nint d[N2];\n\nint spfa(){\n\tmemset(d, 127, sizeof(d));\n\tmemset(viss, 0, sizeof(viss));\n\tint flag = d[2333]; /*\u4e4b\u540e\u5224\u65ad\u7528\u7684*/\n\tfor(int i = 0;i < 4; i++){   /*\u5148\u5bf9\u8d77\u70b9\u8fdb\u884c\u9009\u53d6*/\n\t\tint l = sx + fx[i], r = sy + fy[i];\n\t\tif(judge(l, r)){\n\t\t\tint temp = bfs(sx, sy, ex, ey, l, r); /*ex,ey \u662f\u5426\u53ef\u4ee5\u5230\u8fbe l,r? */\n\t\t\tif(temp != INF){\n\t\t\t\tint snum = getnum(sx, sy, i);\n\t\t\t\tviss[snum] = 1;\n\t\t\t\tq.push(snum);\n\t\t\t\td[snum] = temp;\n\t\t\t}\n\t\t}\n\t}\n\twhile(!q.empty()){   /*\u6c42\u6240\u6709\u72b6\u6001\u95f4\u7684\u6700\u77ed\u8def*/\n\t\tint now = q.front(); q.pop();\n\t\tviss[now] = 0;\n\t\tfor(int i = f[now]; i;i = t[i].next){\n\t\t\tint u = t[i].u, v = t[i].v, w = t[i].w;\n\t\t\tif(d[v] > d[u] + w){\n\t\t\t\td[v] = d[u] + w;\n\t\t\t\tif(!viss[v]){\n\t\t\t\t\tviss[v] = 1;\n\t\t\t\t\tq.push(v); \n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\tint ans = INF;\n\tfor(int i = 0; i < 4; i++){\n\t\tint num = getnum(htx, hty, i);\n\t\tans = min(ans, d[num]);\n\t}\n\treturn ans == flag ? -1 : ans;\n}\n\nint main(){\n//\tfreopen(\"hh.txt\", \"r\", stdin);\n\tn = read(), m = read();\n\tint T = read();\n\tfor(int i = 1;i <= n; i++)\n\t\tfor(int j = 1;j <= m; j++)\n\t\t\tma[i][j] = read();\n\tprepare();\n\twhile(T--){  /*e: \u7a7a\u767d  s: \u8d77\u70b9  ht:  \u7ec8\u70b9*/\n\t\tex = read(), ey = read(), sx = read(), sy = read(), htx = read(), hty = read();\n\t\tif(sx == htx && sy == hty){  /*\u7279\u5224*/\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(!ma[htx][hty] || !ma[sx][sy]){ /*\u5982\u679c\u8d77\u70b9\u7ec8\u70b9\u6839\u672c\u4e0d\u5728\u56fe\u5185*/\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"%d\\n\", spfa());\n\t}\n\treturn orz; /*\u5411\u5927\u4f6c\u52bf\u529b\u4f4e\u5934 \u540c\u65f6\u62dc\u4e00\u4e0bCCf\u6c42AC*/\n}\n```\n\n\n[~~\uff08\u6253\u4e8c\u7a3f\u53ef\u771f\u7d2f\uff0c\u505a\u4e2a\u535a\u5ba2\u5e7f\u544a\u5457\uff08\u6ed1\u7a3d\uff09\uff09~~](https://www.cnblogs.com/wondering-world/p/12723169.html)",
        "postTime": 1587135976,
        "uid": 234224,
        "name": "\u9752\u9e1f_Blue_Bird",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011\u601d\u8def\u9898"
    },
    {
        "content": "\u8fd9\u662fNOIP2013\u7684Day2T2  \n\u8003\u8651\u66b4\u529b\u505a\u6cd5\uff0c\u5219\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95eebfs\uff0c\u8fd9\u6837\u5f88\u660e\u663e\u4f1a\u8d85\u65f6  \n\u5982\u4f55\u4f18\u5316\u5462  \n\u8003\u8651\u6709\u7528\u7684\u72b6\u6001  \n\u53ea\u6709\u5f53\u7a7a\u767d\u5757\u5230\u4e86\u6307\u5b9a\u5757\u7684\u56db\u5468\uff0c\u5b83\u624d\u53ef\u4ee5\u5e26\u7740\u6307\u5b9a\u5757\u79fb\u52a8  \n\u4ece\u8fd9\u4e00\u4e2a\u72b6\u6001\u53ef\u4ee5\u8f6c\u79fb\u5230\u56db\u79cd\u72b6\u6001\uff0c\u5206\u522b\u662f\u7a7a\u767d\u5757\u5230\u4e86\u6307\u5b9a\u5757\u7684\u5176\u4ed6\u4e09\u4e2a\u65b9\u5411\u4ee5\u53ca\u7a7a\u767d\u5757\u4e0e\u6307\u5b9a\u5757\u4ea4\u6362\u4f4d\u7f6e  \n\u8fd9\u6837\u5c31\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u95ee\u9898\uff0c\u53ef\u4ee5\u7528spfa\u89e3\u51b3\u4e86  \n\u81f3\u4e8e\u7a7a\u767d\u5757\u5230\u5176\u4ed6\u4e09\u4e2a\u65b9\u5411\u7684\u8ddd\u79bb\uff0c\u53ef\u4ee5\u5411bfs\u9884\u5904\u7406\u51fa\u6765\uff0c\u76f4\u63a5\u4e0e\u5904\u7406\u51fa\u6bcf\u4e2a\u5757\u6bcf\u4e2a\u65b9\u5411\u4e0a\u6709\u7a7a\u767d\u5757\u7684\u60c5\u51b5\u7136\u540e\u8fde\u8fb9  \n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u8fdb\u884cspfa  \n\u8fd8\u6709\u5c31\u662f\u5f00\u59cb\u65f6\u7a7a\u767d\u5757\u4e0d\u4e00\u5b9a\u5728\u6307\u5b9a\u5757\u5468\u56f4  \n\u8fd9\u65f6\u5019\u5c31\u8981bfs\u5904\u7406\u51fa\u7a7a\u767d\u5757\u5230\u6307\u5b9a\u5757\u5468\u56f4\u6240\u9700\u7684\u6b65\u6570  \n\u6700\u540e\u7edf\u8ba1\u65f6\u53d6\u7a7a\u767d\u5757\u5728\u76ee\u6807\u5757\u7684\u56db\u4e2a\u65b9\u5411\u65f6\u8ddd\u79bb\u6700\u77ed\u7684\u5c31\u662f\u4e86  \nCode:\n```cpp\n#include <algorithm>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\n#define LL long long\n#define P pair<int, int>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &t)\n{\n    int f = 0, c = getchar();\n    t = 0;\n    while (!isdigit(c))\n        f |= c == '-', c = getchar();\n    while (isdigit(c))\n        t = t * 10 + c - 48, c = getchar();\n    if (f)\n        t = -t;\n}\ntemplate <typename T, typename... Args>\ninline void read(T &t, Args &... args)\n{\n    read(t);\n    read(args...);\n}\nconst int maxn = 32;\nconst int dx[4] = {-1, 0, 1, 0};\nconst int dy[4] = {0, 1, 0, -1};\nint n, m, q;\nint predis[maxn][maxn];\nint dis[maxn * maxn * 5];\nint vis[maxn * maxn * 5];\nint a[maxn][maxn];\nstruct Edge\n{\n    int from, to, weight;\n    Edge(int u, int v, int w) : from(u), to(v), weight(w) {}\n};\nstruct Point\n{\n    int x, y;\n    Point(int x,int y):x(x),y(y){}\n};\nvector<Edge> G[maxn * maxn * 5];\nvoid ae(int u, int v, int w)\n{\n    G[u].push_back(Edge(u, v, w));\n}\nint num(int x, int y)\n{\n    y--;\n    return (x - 1) * m + y << 2;//\u5c06xy\u5750\u6807\u8868\u793a\u6210\u4e00\u4e2a\u6574\u6570\n}\nvoid bfs(int ex, int ey, int px, int py, int d)//\u7a7a\u767d\u5757\u4e3aex\uff0cey\uff0c\u6307\u5b9a\u5757\u4e3apx\uff0cpy\uff0c\u7a7a\u767d\u5757\u5728\u6307\u5b9a\u5757\u7684d\u65b9\u5411\u4e0a\n{\n    memset(predis, -1, sizeof(predis));\n    predis[px][py] = 1;//\u7531\u4e8e\u6307\u5b9a\u5757\u4e0d\u80fd\u52a8\u6240\u4ee5\u8ddd\u79bb\u76f4\u63a5\u8d4b1\u9632\u6b62bfs\u65f6\u88ab\u8bbf\u95ee\u5230\n    predis[ex][ey] = 0;\n    queue<Point> q;\n    q.push(Point(ex, ey));\n    while (!q.empty())\n    {\n        Point cur = q.front();\n        q.pop();\n        int cx = cur.x, cy = cur.y;\n        for (int i = 0; i < 4; i++)\n        {\n            int nx = cx + dx[i];\n            int ny = cy + dy[i];\n            if (a[nx][ny] && predis[nx][ny] == -1)\n            {\n                predis[nx][ny] = predis[cx][cy] + 1;\n                q.push(Point(nx, ny));\n            }\n        }\n    }\n    if (d == 233)//\u7528\u4e8e\u5728\u505aspfa\u524d\u7684dfs\uff0c\u4e0d\u7528\u52a0\u8fb9\n        return;\n    int tmp = num(px, py);\n    for (int i = 0; i < 4; i++)\n    {\n        int nx = px + dx[i];\n        int ny = py + dy[i];\n        if (predis[nx][ny] > 0)\n        {\n            ae(tmp + d, tmp + i, predis[nx][ny]);//\u7a7a\u767d\u5757\u79fb\u52a8\u5230\u6307\u5b9a\u5757\u7684\u5176\u4ed6\u4e09\u4e2a\u65b9\u5411\u7684\u8ddd\u79bb\uff0c\u8fd9\u91cc\u5e76\u6ca1\u6709\u5224\u4ea7\u751f\u5b50\u73af\uff0c\u4f46\u5176\u5b9e\u6ca1\u6709\u5173\u7cfb\n        }\n    }\n    ae(tmp + d, num(ex, ey) + (d + 2) % 4, 1);//\u6307\u5b9a\u5757\u4e0e\u7a7a\u767d\u5757\u4ea4\u6362\uff0c\u7528\u4e86\u4e00\u70b9\u9a9a\u64cd\u4f5c\n}\nvoid spfa(int sx, int sy)//\u7b80\u5355\u7684spfa\uff0c\u4ecesx\uff0csy\u51fa\u53d1\n{\n    memset(dis, -1, sizeof(dis));\n    queue<int> q;\n    for (int i = 0; i < 4; i++)\n    {\n        int nx = sx + dx[i], ny = sy + dy[i];\n        if (predis[nx][ny] != -1)\n        {\n            int tmp = num(sx, sy) + i;\n            dis[tmp] = predis[nx][ny];\n            q.push(tmp);\n        }\n    }\n    while (!q.empty())\n    {\n        int u = q.front();\n        q.pop();\n        vis[u] = false;\n        for (int i = 0; i < G[u].size(); i++)\n        {\n            Edge &e = G[u][i];\n            if (dis[e.to] == -1 || dis[e.to] > dis[u] + e.weight)\n            {\n                dis[e.to] = dis[u] + e.weight;\n                if (!vis[e.to])\n                {\n                    vis[e.to] = true;\n                    q.push(e.to);\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    read(n, m, q);\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= m; j++)\n        {\n            read(a[i][j]);\n        }\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= m; j++)\n        {\n            if (a[i][j])\n            {\n                if (a[i - 1][j])\n                    bfs(i - 1, j, i, j, 0);\n                if (a[i][j + 1])\n                    bfs(i, j + 1, i, j, 1);\n                if (a[i + 1][j])\n                    bfs(i + 1, j, i, j, 2);\n                if (a[i][j - 1])\n                    bfs(i, j - 1, i, j, 3);\n              //\u9884\u5904\u7406\u8fde\u8fb9\n            }\n        }\n    }\n    int ex,ey,sx,sy,tx,ty,ans;\n    while(q--){\n        read(ex, ey, sx, sy, tx, ty);\n        if(sx==tx && sy==ty){\n            puts(\"0\");\n            continue;\n        }\n        bfs(ex, ey, sx, sy, 233);//\u5148\u8dd1spfa\u6c42\u51fa\u7a7a\u767d\u5757\u5230\u6307\u5b9a\u5757\u56db\u5468\u7684\u8ddd\u79bb\n        spfa(sx,sy);\n        ans = INT_MAX;\n        int tmp = num(tx, ty);\n        for(int i=0;i<4;i++){\n            if(dis[tmp+i]!=-1){\n                ans = min(ans, dis[tmp + i]);//\u679a\u4e3e\u5230\u76ee\u6807\u5757\u7684\u56db\u4e2a\u65b9\u5411\u53d6\u6700\u5c0f\n            }\n        }\n        if(ans==INT_MAX)\n            puts(\"-1\");\n        else \n            printf(\"%d\\n\", ans);\n    }\n}\n``` \n\u8bf4\u5728\u540e\u9762  \n\u8fd9\u9898\u771f\u96be\u6253",
        "postTime": 1540472011,
        "uid": 31228,
        "name": "ciwomuli",
        "ccfLevel": 0,
        "title": "P1979\u534e\u5bb9\u9053"
    },
    {
        "content": "~~\u8fd9\u9053\u9898\u592atm\u6bd2\u7624\u4e86~~\n\n\n------------\n\u5199\u66b4\u529bbfs\uff0c\u8bb0\u5f55\u7a7a\u683c\u4f4d\u7f6e\u548c\u76ee\u6807\u8282\u70b9\u8d77\u59cb\u4f4d\u7f6e~~\uff0c\u4f60\u80fd\u62ff70\u5206~~\u3002\n\n\u6211\u4eec\u6765\u8003\u8651\u6b63\u89e3\u3002\n\n**\uff081\uff09\uff1a**\u8fd9\u79cd\u79fb\u52a8\u683c\u5b50\u7684\u5e38\u89c4\u5957\u8def\uff0c\u628a\u4e00\u4e2a\u683c\u5b50\u79fb\u5230\u7ec8\u70b9\uff0c\u5c31\u662f\u5148\u628a\u7a7a\u683c\u79fb\u5230\u683c\u5b50\u7684\u8d77\u59cb\u4f4d\u7f6e\u65c1\uff0c\u518d\u628a\u7a7a\u683c\u548c\u76ee\u6807\u683c\u5b50\u4e0d\u65ad\u6253\u5305\u79fb\u5230\u7ec8\u70b9\u90a3\uff0c\u7a7a\u683c\u53ef\u80fd\u7684\u6700\u7ec8\u4f4d\u7f6e\u662f\u7ec8\u70b9\u7684\u56db\u89d2\u3002\n\n**\uff082\uff09\uff1a**\u6839\u636e\uff081\uff09\uff0c\u5bf9\u4e8e\u628a\u7a7a\u683c\u79fb\u5230\u8d77\u59cb\u4f4d\u7f6e\u65c1\uff0c\u6211\u4eec\u53ef\u4ee5\u7528bfs\u6765\u505a\u3002\u5173\u952e\u662f\u4e4b\u540e\u7a7a\u683c\u548c\u76ee\u6807\u683c\u5b50\u7684\u8fd0\u52a8\uff0c\u8fd9\u600e\u4e48\u8003\u8651\u5462\uff1f**\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u76ee\u6807\u683c\u5b50\u6bcf\u4e00\u6b65\u7684\u79fb\u52a8\u72b6\u6001\uff0c\u5728\u8fd9\u4e2a\u72b6\u6001\u5f00\u59cb\u65f6\u7a7a\u683c\u5728\u5b83\u7684\u65c1\u8fb9\uff0c\u7ed3\u675f\u65f6\u7a7a\u683c\u5728\u5b83\u4e0a\u4e0b\u5de6\u53f3\u7684\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5728\u8fd9\u4e2a\u72b6\u6001\u4e2d\u7a7a\u683c\u53ef\u80fd\u79fb\u52a8\u4e86\u5f88\u591a\u6b21\u3002\u6240\u4ee5\u76ee\u6807\u683c\u5b50\u5411\u56db\u4e2a\u65b9\u5411\u7684\u79fb\u52a8\uff0c\u7b49\u4ef7\u4e8e\u5b83\u4e0e\u8d77\u59cb\u72b6\u6001\u65f6\u7a7a\u683c\u4f4d\u7f6e\u7684\u4ea4\u6362\uff0c\u6216\u8005\u628a\u7a7a\u683c\u79fb\u52a8\u5230\u5176\u4f59\u4f4d\u7f6e\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u7528bfs\u8bb0\u5f55\u7a7a\u683c\u5728\u4e0d\u7ecf\u8fc7\u5f53\u524d\u72b6\u6001\u76ee\u6807\u683c\u5b50\u7684\u524d\u63d0\u4e0b\u79fb\u52a8\u5230\u76ee\u6807\u683c\u5b50\u65c1\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u6bcf\u6b21\u5efa\u4e24\u79cd\u8fb9\uff1a\u76ee\u6807\u683c\u5b50\u4e0e\u7a7a\u683c\u8d77\u59cb\u4f4d\u7f6e\u4ea4\u6362\uff0c\u8fb9\u6743\u4e3a1\uff1b\u7a7a\u683c\u8d77\u59cb\u4f4d\u7f6e\u4e0e\u7a7a\u683c\u6700\u7ec8\u4f4d\u7f6e\uff0c\u8fb9\u6743\u4e3a\u79fb\u52a8\u5230\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002**\n\n**\uff083\uff09\uff1a**\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u6211\u4eec\u53ea\u8981\u5148bfs\u4e00\u904d\uff0c\u518d\u8dd1\u4e00\u6b21spfa\u5c31\u884c\u4e86\u3002\n\n\u6ce8\u610f\u4e24\u4e2a\u70b9\uff1a**\u8bb0\u5f55\u7684\u6700\u77ed\u8ddd\u79bb\u662f\u7a7a\u683c\u7684\u79fb\u52a8\u8ddd\u79bb\uff1b\u7a7a\u683c\u5728\u72b6\u6001\u5185\u79fb\u52a8\u65f6\u4e0d\u80fd\u7ecf\u8fc7\u76ee\u6807\u683c\u5b50\u3002**\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<cstring>\n#include<cmath>\n#include<queue>\nusing namespace std;\nint n,m,q,tot;\nint mp[33][33],dis[33][33],qx[1010],qy[1010];\nint dx[5]={-1,1,0,0},dy[5]={0,0,-1,1};\nint head[4010],ver[40010],next[40010],edge[40010];\nint d[4010],v[4010];\nvoid add(int x,int y,int z){\n\tver[++tot]=y;edge[tot]=z;next[tot]=head[x];head[x]=tot;\n}\nvoid bfs(int sx,int sy,int bx,int by,int fx){\n\tint h=1,t=1;\n\tmemset(dis,0,sizeof(dis));\n\tqx[h]=sx;qy[h]=sy;dis[sx][sy]=1;\n\twhile(h<=t){\n\t\tint x=qx[h],y=qy[h];\n\t\tfor(int i=0;i<4;i++){\n\t\t\tint tx=x+dx[i],ty=y+dy[i];\n\t\t\tif(mp[tx][ty]&&!dis[tx][ty]&&(tx!=bx||ty!=by)){\n\t\t\t\tdis[tx][ty]=dis[x][y]+1;qx[++t]=tx;qy[t]=ty;\n\t\t\t}\n\t\t}\n\t\th++;\n\t}\n\tif(fx==4) return;\n\tfor(int i=0;i<4;i++){\n\t\tint tx=bx+dx[i],ty=by+dy[i];\n\t\tif((tx!=sx||ty!=sy)&&dis[tx][ty]){\n\t\t\tadd(bx*120+by*4+fx,bx*120+by*4+i,dis[tx][ty]-1);\n\t\t}  \n\t}\n\tadd(bx*120+by*4+fx,sx*120+sy*4+fx^1,1);\n}\nvoid spfa(int sx,int sy){\n\tqueue<int> q;\n\tfor(int i=0;i<=4005;i++) d[i]=1e7,v[i]=0;\n\tfor(int i=0;i<=3;i++){\n\t\tint tx=sx+dx[i],ty=sy+dy[i];\n\t\tif(dis[tx][ty]) d[sx*120+sy*4+i]=dis[tx][ty]-1,q.push(sx*120+sy*4+i),v[sx*120+sy*4+i]=1;\n\t}\n\twhile(q.size()){\n\t\tint x=q.front();q.pop();\n\t\tv[x]=0;\n\t\tfor(int i=head[x];i;i=next[i]){\n\t\t\tint y=ver[i],z=edge[i];\n\t\t\tif(d[y]>d[x]+z){\n\t\t\t\td[y]=d[x]+z;\n\t\t\t\tif(!v[y]) v[y]=1,q.push(y);\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tscanf(\"%d\",&mp[i][j]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(!mp[i][j]) continue;\n\t\t\tif(mp[i-1][j]) bfs(i-1,j,i,j,0);\n\t\t\tif(mp[i+1][j]) bfs(i+1,j,i,j,1);\n\t\t\tif(mp[i][j-1]) bfs(i,j-1,i,j,2);\n\t\t\tif(mp[i][j+1]) bfs(i,j+1,i,j,3);\n\t\t}\n\t}\n\twhile(q--){\n\t\tint mx,my,sx,sy,bx,by;\n\t\tscanf(\"%d%d%d%d%d%d\",&mx,&my,&sx,&sy,&bx,&by);\n\t\tif(sx==bx&&sy==by){printf(\"0\\n\");continue;}\n\t\tbfs(mx,my,sx,sy,4);spfa(sx,sy);int ans=1e7;\n\t\tfor(int i=0;i<=3;i++){\n\t\t\tans=min(ans,d[bx*120+by*4+i]);\n\t\t}\n\t\tif(ans<1e7) printf(\"%d\\n\",ans);\n\t\telse printf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1540599610,
        "uid": 53032,
        "name": "\u5c0f\u5858\u7a7a\u660e",
        "ccfLevel": 0,
        "title": "P1979 \u534e\u5bb9\u9053"
    },
    {
        "content": "# \u5bbd\u641c\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5f00\u4e00\u4e2a\u56db\u7ef4\u6570\u7ec4`used[i][j][k][l]`\u8868\u793a\u6307\u5b9a\u70b9\u5728(i, j),\u7a7a\u683c\u5728(j, k)\u662f\u5426\u8d70\u8fc7\uff0c\u6bcf\u6b21\u8ba9\u7a7a\u683c\u4e0a\u4e0b\u5de6\u53f3\u8d70\uff0c\u9047\u5230\u6307\u5b9a\u65d7\u5b50\u5c31\u6539\u53d8\u65d7\u5b50\u4f4d\u7f6e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(qn^4)$\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4efd70\u5206\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint mp[31][31];\nstruct hehe{\n    int x, y, dx, dy, step;\n};\nbool used[31][31][31][31];\nint mx[] = {0, 0, 1, 0, -1};\nint my[] = {0, 1, 0, -1, 0};\nint main()\n{\n    int n, m, T;\n    cin >> n >> m >> T;\n    for(int i = 1; i <= n; i++)\n    {\n        for(int j = 1; j <= m; j++)\n            cin >> mp[i][j];\n    }\n    while(T--)\n    {\n        bool fl = 0;\n        queue<hehe>q;\n        memset(used, 0, sizeof(used));\n        int qx, qy, zx, zy, kx, ky;\n        cin >> qx >> qy >> zx >> zy >> kx >> ky;\n        hehe now;\n        now.dx = qx;\n        now.dy = qy;\n        now.x = zx;\n        now.y = zy;\n        now.step = 0;\n        used[qx][qy][zx][zy] = 1;\n        q.push(now);\n        while(q.size())\n        {\n            now = q.front();\n            q.pop();\n            int x = now.x, y = now.y, xx = now.dx, yy = now.dy;\n            if(x == kx && y == ky)\n            {\n                fl = 1;\n                cout << now.step << endl;\n                break;\n            }\n            for(int i = 1; i <= 4; i++)\n            {\n                int xxx = xx + mx[i], yyy = yy + my[i];\n                if(xxx > n || yyy > m || xxx < 1 || yyy < 1) continue;\n                int qwq = x, qaq = y;\n                if(x == xxx && y == yyy) qwq = xx, qaq = yy;\n                if(mp[xxx][yyy] && !used[xxx][yyy][qwq][qaq])\n                {\n                    used[xxx][yyy][qwq][qaq] = 1;\n                    hehe nxt;\n                    nxt.x = qwq;\n                    nxt.y = qaq;\n                    nxt.dx = xxx;\n                    nxt.dy = yyy;\n                    nxt.step = now.step + 1;\n                    q.push(nxt);\n                }\n            }\n        }\n        if(!fl)\n        {\n            cout << -1 << endl;\n        }\n    }\n}\n```\n\n[![BJ8dun.png](https://s1.ax1x.com/2020/10/29/BJ8dun.png)](https://imgchr.com/i/BJ8dun)\n\n\u63a5\u4e0b\u6765\u624d\u662f\u8fd9\u7bc7\u9898\u89e3\u7684\u91cd\u70b9\uff1a\n\n# \u5982\u4f55\u5361\u5e38\n\n### O2\u4f18\u5316+\u5173\u95ed\u6d41\u540c\u6b65\n```cpp\n#pragma GCC optimize(2)\n```\n\u4e0a\u9762\u7684\u8bed\u53e5\u662f\u5f00\u542fO2\u4f18\u5316\n\n\u867d\u7136\u5728\u4f60\u8c37\u4e0d\u8ba9\u5728\u7a0b\u5e8f\u4e2d\u81ea\u5df1\u5199\n\n\u4f46\u662f\u53ef\u4ee5\u624b\u52a8\u5f00\u554a\uff09\n\n-------\n\n```cpp\nios::sync_with_stdio(false);\n```\n\u8fd9\u53e5\u8bdd\u662f\u5173\u95ed`cin`\u3001`cout`\u7684\u6d41\u540c\u6b65\n\n\u539f\u7406\u5927\u6982\u662f\u8ba9`cin`\u3001`cout`\u6267\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u53e6\u5f00\u7f13\u5b58\n\n\u4f1a\u8ba9`cin`\u3001`cout`\u8dd1\u5f97\u6bd4`scanf`\u3001`printf`\u90fd\u5feb\n\n------\n\n\u52a0\u4e0a\u8fd9\u4e24\u53e5\u8bdd\uff0c\u6210\u529f\u62ff\u5230\u4e86\u53e6\u591610\u5206\uff1a\n\n[![BJGzLR.png](https://s1.ax1x.com/2020/10/29/BJGzLR.png)](https://imgchr.com/i/BJGzLR)\n\n### \u5faa\u73af\u5c55\u5f00\n\n\u5b9a\u775b\u4e00\u770b\uff1a\u5636\uff0c#7#8\u88ab\u4f18\u5316\u5230\u4e86\u53ef\u89c2\u6d4b\u7684TLE\u4e4b\u5185\uff081.20s\u4ee5\u5185\uff09\n\n\u60f3\u60f3\u4e4b\u524d\u770b\u8fc7\u4e00\u4e2a\u795e\u4ed9\u5361\u5e38~~\u6bd2\u7624~~\u9898[P4604 [WC2017]\u6311\u6218](https://www.luogu.com.cn/problem/P4604)\n\n\u5176\u4e2d\u4e00\u4e2a\u57fa\u672c\u64cd\u4f5c\u5c31\u662f\u201c\u5faa\u73af\u5c55\u5f00\u201d\n\n\u5177\u4f53\u4e00\u70b9\uff1a\n\n\u4ee5\u4e0b\u4ee3\u7801\n```cpp\nfor(int i = 1; i <= 4; i++)\n{\n\tint xxx = xx + mx[i], yyy = yy + my[i];\n\tif(xxx > n || yyy > m || xxx < 1 || yyy < 1) continue;\n\tint qwq = x, qaq = y;\n\tif(x == xxx && y == yyy) qwq = xx, qaq = yy;\n\tif(mp[xxx][yyy] && !used[xxx][yyy][qwq][qaq])\n\t{\n\t\tused[xxx][yyy][qwq][qaq] = 1;\n\t\thehe nxt;\n\t\tnxt.x = qwq;\n\t\tnxt.y = qaq;\n\t\tnxt.dx = xxx;\n\t\tnxt.dy = yyy;\n\t\tnxt.step = now.step + 1;\n\t\tq.push(nxt);\n\t}\n}\n```\n\u5c06\u5176\u5faa\u73af\u5c55\u5f00\u540e\u53d8\u6210\u8fd9\u6837\uff1a\n\n```cpp\nint i = 1;\nint xxx = xx + mx[i], yyy = yy + my[i];\nif(xxx > n || yyy > m || xxx < 1 || yyy < 1) goto s1;\nqwq = x, qaq = y;\nif(x == xxx && y == yyy) qwq = xx, qaq = yy;\nif(mp[xxx][yyy] && !used[xxx][yyy][qwq][qaq])\n{\n    used[xxx][yyy][qwq][qaq] = 1;\n    hehe nxt;\n    nxt.x = qwq;\n    nxt.y = qaq;\n    nxt.dx = xxx;\n    nxt.dy = yyy;\n    nxt.step = now.step + 1;\n    q.push(nxt);\n}\ns1: i++;\nxxx = xx + mx[i], yyy = yy + my[i];\nif(xxx > n || yyy > m || xxx < 1 || yyy < 1) goto s2;\nqwq = x, qaq = y;\nif(x == xxx && y == yyy) qwq = xx, qaq = yy;\nif(mp[xxx][yyy] && !used[xxx][yyy][qwq][qaq])\n{\n    used[xxx][yyy][qwq][qaq] = 1;\n    hehe nxt;\n    nxt.x = qwq;\n    nxt.y = qaq;\n    nxt.dx = xxx;\n    nxt.dy = yyy;\n    nxt.step = now.step + 1;\n    q.push(nxt);\n}\ns2: i++;\nxxx = xx + mx[i], yyy = yy + my[i];\nif(xxx > n || yyy > m || xxx < 1 || yyy < 1) goto s3;\nqwq = x, qaq = y;\nif(x == xxx && y == yyy) qwq = xx, qaq = yy;\nif(mp[xxx][yyy] && !used[xxx][yyy][qwq][qaq])\n{\n    used[xxx][yyy][qwq][qaq] = 1;\n    hehe nxt;\n    nxt.x = qwq;\n    nxt.y = qaq;\n    nxt.dx = xxx;\n    nxt.dy = yyy;\n    nxt.step = now.step + 1;\n    q.push(nxt);\n}\ns3: i++;\nxxx = xx + mx[i], yyy = yy + my[i];\nif(xxx > n || yyy > m || xxx < 1 || yyy < 1) continue;\nqwq = x, qaq = y;\nif(x == xxx && y == yyy) qwq = xx, qaq = yy;\nif(mp[xxx][yyy] && !used[xxx][yyy][qwq][qaq])\n{\n    used[xxx][yyy][qwq][qaq] = 1;\n    hehe nxt;\n    nxt.x = qwq;\n    nxt.y = qaq;\n    nxt.dx = xxx;\n    nxt.dy = yyy;\n    nxt.step = now.step + 1;\n    q.push(nxt);\n}\n```\n\u8fd9\u6837\u53ef\u4ee5\u4f18\u5316\u5e38\u6570\u2014\u2014\u56e0\u4e3a\u8fd9\u4e2a\u5faa\u73af\u6bcf\u6b21bfs\u65b0\u8282\u70b9\u7684\u65f6\u5019\u90fd\u8981\u505a\u4e00\u6b21\uff0c\u8fd9\u6837\u7406\u8bba\u4e0a\u76f8\u5f53\u4e8e\u4f18\u5316\u4e86$10^8$\u7ea7\u522b\u7684\u5e38\u6570\u2014\u2014\u867d\u7136\u8fbe\u4e0d\u5230\n\n\u4f46\u662f\u6548\u679c\u4f9d\u7136\u5f88\u660e\u663e\uff1a\n\n[![BJamI1.png](https://s1.ax1x.com/2020/10/29/BJamI1.png)](https://imgchr.com/i/BJamI1)\n\n\u597d\uff0c#7#8\u5df2\u7ecf\u57280.01\u7ea7\u522b\u4e86\uff01#11#13\u4e5f\u4f18\u5316\u5230\u53ef\u89c6\u8303\u56f4\u5185\u4e86\uff01\n\n### \u4f18\u5316\u6389`i++`\u548cmove\u6570\u7ec4\n\n\u8fd9\u4e24\u4e2a\u5fae\u4e0d\u8db3\u9053\u7684\u4e1c\u897f\u8db3\u4ee5\u5361\u6389\u96f6\u70b9\u51e0\u79d2\u7684\u65f6\u95f4\uff0c\u751a\u81f3\u66f4\u591a\u3002\n\n\u53d8\u6210\uff1a\n```cpp\nint xxx = xx + 1, yyy = yy + 0;\ns1:\nxxx = xx + 0, yyy = yy + 1;\n...\ns2:\nxxx = xx - 1, yyy = yy + 0;\n...\ns3:\nxxx = xx + 0, yyy = yy - 1;\n...\n```\n\n[![BJdL7j.png](https://s1.ax1x.com/2020/10/29/BJdL7j.png)](https://imgchr.com/i/BJdL7j)\n\n\u597d\u8036\uff01\u591a\u8fc7\u4e86\u4e24\u4e2a\u70b9\uff01\u987a\u4fbf\u628a#11#13\u4f18\u5316\u6210\u4e86\u4e2a\u4f4d\u6570\u7684\u6beb\u79d2\u7ea7\uff01\n\n### \u6700\u540e\uff0c\u53bb\u6389`goto`\n\n\u82e6\u601d\u51a5\u60f3\u4e86\u597d\u4e45\uff0c\u60f3\u8d77\u5728`goto`\u8eab\u4e0a\u8fd8\u6709\u4e00\u4e2a\u5e38\u6570\n\n\u4e8e\u662f\u628a\u5224\u65ad\u53bb\u6389\u2014\u2014\u56e0\u4e3a\u5728\u7b2c0\u884c\u3001\u7b2c0\u5217\u3001\u7b2cn+1\u884c\u3001\u7b2cm+1\u5217\u90fd\u662f\u96f6\n\n\u5c06`goto`\u4f18\u5316\u6389\u4e86\n\n```cpp\nif(xxx > n || yyy > m || xxx < 1 || yyy < 1) goto s1;\n...\n```\n\u53bb\u6389\u3002\n\n[![BJBltA.png](https://s1.ax1x.com/2020/10/29/BJBltA.png)](https://imgchr.com/i/BJBltA)\n\n\n\u60ca\u9669AC\u3002\n\n\n## \u6700\u7ec8\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint mp[31][31];\nstruct hehe{\n    int x, y, dx, dy, step;\n};\nbool used[31][31][31][31];\nint main()\n{\n    ios::sync_with_stdio(false);\n    int n, m, T;\n    cin >> n >> m >> T;\n    for(register int i = 1; i <= n; i++)\n    {\n        for(register int j = 1; j <= m; j++)\n            cin >> mp[i][j];\n    }\n    while(T--)\n    {\n        bool fl = 0;\n        queue<hehe>q;\n        memset(used, 0, sizeof(used));\n        int qx, qy, zx, zy, kx, ky;\n        cin >> qx >> qy >> zx >> zy >> kx >> ky;\n        hehe now;\n        now.dx = qx;\n        now.dy = qy;\n        now.x = zx;\n        now.y = zy;\n        now.step = 0;\n        used[qx][qy][zx][zy] = 1;\n        q.push(now);\n        while(q.size())\n        {\n            now = q.front();\n            q.pop();\n            int x = now.x, y = now.y, xx = now.dx, yy = now.dy;\n            if(x == kx && y == ky)\n            {\n                fl = 1;\n                cout << now.step << endl;\n                break;\n            }\n            int qwq, qaq;\n                int xxx = xx + 1, yyy = yy + 0;\n                if(xxx < n || yyy < m || xxx > 1 || yyy > 1)\n                {\n                qwq = x, qaq = y;\n                if(x == xxx && y == yyy) qwq = xx, qaq = yy;\n                if(mp[xxx][yyy] && !used[xxx][yyy][qwq][qaq])\n                {\n                    used[xxx][yyy][qwq][qaq] = 1;\n                    hehe nxt;\n                    nxt.x = qwq;\n                    nxt.y = qaq;\n                    nxt.dx = xxx;\n                    nxt.dy = yyy;\n                    nxt.step = now.step + 1;\n                    q.push(nxt);\n                }\n            }\n                xxx = xx + 0, yyy = yy + 1;\n                if(xxx < n || yyy < m || xxx > 1 || yyy > 1)\n                {\n                qwq = x, qaq = y;\n                if(x == xxx && y == yyy) qwq = xx, qaq = yy;\n                if(mp[xxx][yyy] && !used[xxx][yyy][qwq][qaq])\n                {\n                    used[xxx][yyy][qwq][qaq] = 1;\n                    hehe nxt;\n                    nxt.x = qwq;\n                    nxt.y = qaq;\n                    nxt.dx = xxx;\n                    nxt.dy = yyy;\n                    nxt.step = now.step + 1;\n                    q.push(nxt);\n                }\n            }\n                xxx = xx - 1, yyy = yy + 0;\n                if(xxx < n || yyy < m || xxx > 1 || yyy > 1)\n                {\n                    qwq = x, qaq = y;\n                    if(x == xxx && y == yyy) qwq = xx, qaq = yy;\n                    if(mp[xxx][yyy] && !used[xxx][yyy][qwq][qaq])\n                    {\n                        used[xxx][yyy][qwq][qaq] = 1;\n                        hehe nxt;\n                        nxt.x = qwq;\n                        nxt.y = qaq;\n                        nxt.dx = xxx;\n                        nxt.dy = yyy;\n                        nxt.step = now.step + 1;\n                        q.push(nxt);\n                    }\n                }\n                xxx = xx + 0, yyy = yy - 1;\n                if(xxx < n || yyy < m || xxx > 1 || yyy > 1)\n                {\n                qwq = x, qaq = y;\n                if(x == xxx && y == yyy) qwq = xx, qaq = yy;\n                if(mp[xxx][yyy] && !used[xxx][yyy][qwq][qaq])\n                {\n                    used[xxx][yyy][qwq][qaq] = 1;\n                    hehe nxt;\n                    nxt.x = qwq;\n                    nxt.y = qaq;\n                    nxt.dx = xxx;\n                    nxt.dy = yyy;\n                    nxt.step = now.step + 1;\n                    q.push(nxt);\n                }\n                }\n        }\n        if(!fl)\n        {\n            cout << -1 << endl;\n        }\n    }\n}\n```\n#### P.S.:\n\n\n[![BJBz9I.png](https://s1.ax1x.com/2020/10/29/BJBz9I.png)](https://imgchr.com/i/BJBz9I)\n\n[![BJDOMV.png](https://s1.ax1x.com/2020/10/29/BJDOMV.png)](https://imgchr.com/i/BJDOMV)\n\n[![BJr3sf.jpg](https://s1.ax1x.com/2020/10/29/BJr3sf.jpg)](https://imgchr.com/i/BJr3sf)\n\n[![BJrYdg.png](https://s1.ax1x.com/2020/10/29/BJrYdg.png)](https://imgchr.com/i/BJrYdg)",
        "postTime": 1603972527,
        "uid": 75954,
        "name": "AuCloud",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.cnblogs.com/lyttt/p/11831400.html)\n\n\u770b\u5230\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u76f4\u63a5\u4e0a$bfs$\u5566\uff0c\u4e5f\u6ca1\u6709\u60f3\u5230\u4ec0\u4e48\u66f4\u52a0\u4f18\u79c0\u7684\u7b97\u6cd5\u3002\n\u7136\u540e\u5c31\u662f$15$\u5206\u949f\u6253\u4e86$70$\u5206\uff0c\u6709\u70b9\u9707\u60ca\uff0c\u7eaf\u66b4\u529b\u8bf6\uff0c\u8fd9\u4e48\u591a\u767d\u7ed9\u5206\u561b\uff0c\u592a\u5212\u7b97\u4e86\uff0c\u8fd9\u53ef\u662f$D2T3$\u8bf6\u3002\n\n\n------------\n\n\n\u5207\u5165\u6b63\u9898\uff1a\n\n\u7eaf\u66b4\u529b\u7684$bfs$\u4f1a\u8d85\u65f6\uff0c\u662f\u56e0\u4e3a\u641c\u7d22\u4e86\u5f88\u591a\u65e0\u7528\u72b6\u6001\uff1a\u771f\u6b63\u6709\u7528\u7684\u72b6\u6001\u5176\u5b9e\u662f\u8d77\u70b9\u683c\u5b50\u8d70\u7684\u72b6\u6001\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u7528\u641c\u7d22\u65b9\u4fbf\u8f6c\u79fb\u7684\u5374\u662f\u7a7a\u767d\u683c\u5b50\uff0c\u56e0\u4e3a\u9898\u76ee\u7684\u89c4\u5219\u662f\u7a7a\u767d\u683c\u5b50\u53ef\u4ee5\u79fb\u52a8\uff08\u76f8\u5f53\u4e8e\u548c\u65c1\u8fb9\u7684\u683c\u5b50\u4ea4\u6362\u4f4d\u7f6e\uff09\u3002\n\n\u53ea\u6709\u8d77\u70b9\u683c\u5b50\u5728\u7a7a\u767d\u683c\u5b50\u56db\u5468\u8d77\u70b9\u683c\u5b50\u624d\u80fd\u52a8\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u5c3d\u91cf\u8ba9\u7a7a\u767d\u683c\u5b50\u5f80\u8d77\u70b9\u683c\u5b50\u5468\u56f4\u8dd1\uff0c\u800c\u4e0d\u662f\u6beb\u65e0\u76ee\u7684\u5730\u4e71\u8dd1\uff0c\u7a7a\u767d\u683c\u5b50\u5728\u4e71\u8dd1\u7684\u65f6\u5019\u5b9e\u9645\u4e0a\u62d3\u5c55\u4e86\u5f88\u591a\u65e0\u7528\u8282\u70b9\u3002\n\n\u90a3\u4e48\uff0c\u5c31\u5148\u7528\u4e00\u4e2a$bfs$\u9884\u5904\u7406\u51fa\u7a7a\u767d\u683c\u5b50\u5230\u8fbe\u8d77\u70b9\u683c\u5b50\u56db\u5468\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u518d\u4ece\u56db\u5468\u5206\u522b\u5f00\u59cb\u8d70\uff0c\u53d6\u6700\u5c0f\u7684\u3002\n\n\u4ece\u56db\u5468\u5f00\u59cb\u8d70\u7684\u65f6\u5019\u8fd8\u662f\u4e0d\u8003\u8651\u66b4\u641c\uff08\u4f1a\u4ea7\u751f\u591a\u4f59\u72b6\u6001\uff09\uff0c\u6211\u4eec\u53ea\u7ba1\u6709\u7528\u7684\u72b6\u6001\u3002\u8fd8\u662f\u8fd9\u4e2a\u9053\u7406\uff1a\u8d77\u70b9\u683c\u5b50\u662f\u8981\u4f9d\u6258\u4e8e\u7a7a\u767d\u683c\u5b50\u624d\u80fd\u591f\u79fb\u52a8\u7684\uff0c\u6240\u4ee5\u72b6\u6001\u8981\u4fdd\u6301\u7a7a\u767d\u683c\u5b50\u4e00\u76f4\u5728\u8d77\u70b9\u683c\u5b50\u56db\u5468\u3002\n\n\u90a3\u4e48\u5b9a\u4e49\u72b6\u6001$(i,j,k)$\u8868\u793a\u8d77\u70b9\u683c\u5b50\u7684\u5750\u6807\u4e3a$(i,j)$\uff0c\u7a7a\u767d\u683c\u5b50\u5728\u5b83\u7684$k$\u65b9\u5411\uff08\u4e5f\u5373\u662f\u5750\u6807\u4e3a$(i+dx[k],j+dy[k])$\uff09\u3002\n\n\u8003\u8651\u8f6c\u79fb\u5230\u540e\u7ee7\u72b6\u6001\uff1a\n\n1.\u53ef\u4ee5\u662f\u8d77\u70b9\u683c\u5b50\u901a\u8fc7\u7a7a\u767d\u683c\u5b50\u8fdb\u884c\u79fb\u52a8\uff08\u5c31\u662f\u4fe9\u683c\u5b50\u4ea4\u6362\u4f4d\u7f6e\uff09\n\n2.\u53ef\u4ee5\u662f\u7a7a\u767d\u683c\u5b50\u5728\u8d77\u70b9\u683c\u5b50\u56db\u5468\u79fb\u52a8\uff0c\u53ef\u4ee5\u770b\u6210\u8f6c\u65b9\u5411\u3002\u5982\u679c\u53ea\u7528\u4e0a\u9762\u90a3\u79cd\u8f6c\u79fb\uff0c\u4e5f\u5c31\u662f\u7528\u8d77\u70b9\u683c\u5b50\u81ea\u5df1\u6362\u65b9\u5411\uff0c\u53ef\u80fd\u6ca1\u90a3\u4e48\u4f18\u79c0\uff0c\u56e0\u4e3a\u6362\u6765\u6362\u53bb\u8981\u7ed5\u4e00\u7ed5 \u3002\u800c\u4e14\u8d77\u70b9\u683c\u5b50\u6709\u53ef\u80fd\u4f1a\u8dd1\u5230\u4e00\u4e2a\u79bb\u7ec8\u70b9\u7684\u5730\u65b9\u53bb\u4e86\uff0c\u66f4\u4e0d\u4f18\u3002\u800c\u53ea\u52a8\u7a7a\u767d\u683c\u5b50\u53ef\u80fd\u4f1a\u4f18\u79c0\u4e00\u4e9b \u56e0\u4e3a\u7a7a\u767d\u683c\u5b50\u6700\u4f18(\u5230\u5904\u90fd\u662f\u6d3b\u52a8\u683c\u5b50)\u53ea\u7528\u8d702~4\u6b65\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u591a\u7ec4\u6570\u636e\uff0c\u68cb\u76d8\u7684\u5f62\u72b6\u662f\u6ca1\u6709\u6539\u53d8\u7684\uff0c\u6240\u4ee5\u5927\u6982\u53ef\u4ee5\u9884\u5904\u7406\u4e00\u4e0b\u7136\u540e\u518d\u8be2\u95ee\u3002\n\n\u600e\u4e48\u9884\u5904\u7406\u5462\uff1f\u6709\u4e00\u4e2a\u6bd4\u8f83\u5b9e\u7528\u7684\u6280\u5de7\uff0c\u5c31\u662f\u628a\u72b6\u6001\u5f53\u6210\u56fe\u7684\u8282\u70b9\uff0c\u72b6\u6001\u4e4b\u95f4\u8f6c\u79fb\u7684\u4ee3\u4ef7\u5f53\u505a\u8fb9\u6743\uff0c\u7136\u540e\u6c42\u4ece\u4e00\u4e2a\u72b6\u6001\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u7684\u6700\u5c0f\u6b65\u6570\u5c31\u662f\u4ece\u4e00\u4e2a\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5566\uff08\u5176\u5b9e\u672c\u6765$bfs$\u4e5f\u548c\u6700\u77ed\u8def\u6709\u5173\u7cfb\uff08\u5f3a\u884c\u6cbe\u8fb9\uff09\uff09\n\n\u6240\u4ee5\u53ea\u9700\u8981\u5904\u7406\u51fa\u4e00\u4e9b\u53ef\u884c\u72b6\u6001\uff08\u53ef\u4ee5\u5c06\u4ed6\u4eec\u7f16\u53f7\uff0c\u4ee5\u4fbf\u8fdb\u884c\u6700\u77ed\u8def\uff09\uff0c\u7136\u540e\u7528\u4e0a\u9762\u7684\u4e24\u79cd\u8f6c\u79fb\u5173\u7cfb\u8fde\u8fb9\uff1a\u5bf9\u4e8e\u7b2c\u4e00\u79cd\uff0c\u8fb9\u6743\u5c31\u662f$1$\uff0c\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\uff0c\u8fb9\u6743\u5c31\u662f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\uff08\u53ef\u4ee5$bfs$\u9884\u5904\u7406\uff0c\u6b64\u65f6\u7684\u6700\u77ed\u8def\u76f8\u5f53\u4e8e\u8fb9\u6743\u4e3a$1$\uff09\u3002\u7531\u4e8e\u8fb9\u6743\u4e0d\u662f\u5168\u4e3a$1$\uff0c\u4e0d\u80fd\u7528$bfs$\uff0c\u8981\u5199\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u53ea\u8981\u4e0d\u662f$floyd$\uff0c\u968f\u4fbf\u5199\u54ea\u4e2a\u90fd\u53ef\u4ee5\u7684\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u6c42\u51fa\u7a7a\u767d\u683c\u5b50\u4e0d\u7ecf\u8fc7\u8d77\u70b9\u683c\u5b50\uff08\u5982\u679c\u7ecf\u8fc7\uff0c\u8d77\u70b9\u683c\u5b50\u4f4d\u7f6e\u5c31\u53d8\u5566\uff09\u5230\u8d77\u70b9\u683c\u5b50\u56db\u5468\u7684\u6700\u77ed\u8ddd\u79bb(\u53ef$bfs$)\uff0c\u518d\u4ece\u90a3\u56db\u4e2a\u72b6\u6001\u51fa\u53d1\uff08\u53ef\u4ee5\u540c\u65f6\u538b\u8fdb\u53bb\u7684\uff0c\u56e0\u4e3a\u7b54\u6848\u6ca1\u6709\u53e0\u52a0\u90e8\u5206\uff0c\u90fd\u662f\u4e00\u76f4\u4e0d\u505c\u66f4\u65b0\u6700\u77ed\u8ddd\u79bb\uff0c\u76f8\u5f53\u4e8e\u53d6$min$\uff09\uff0c\u8dd1\u5230\u7ec8\u70b9\u683c\u5b50\u3002\u7ec8\u70b9\u683c\u5b50\u7684\u56db\u4e2a\u72b6\u6001\u90fd\u53ef\u4ee5\uff0c\u53d6$min$\u5c31\u662f\u7b54\u6848\u3002\n\n\u679c\u7136\u5427\uff0c\u8fd8\u662f\u66b4\u529b\u597d\u5199\uff0c\u6b63\u89e3\u8c03\u4e86\u4e00\u4e2a\u4e0b\u5348\uff0c\u8003\u8bd5\u7684\u65f6\u5019\u5199\u66b4\u529b\u771f\u7684\u592a\u5212\u7b97\u4e86\u3002\n\n\n\u66b4\u529b\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<cstring>\n#include<queue>\n#include<map>\n#include<iostream>\n#include<cmath>\nusing namespace std;\n#define ll long long\n#define INF 0x3f3f3f3f\n#define N 35\nint rd()\n{\n    int f=1,s=0;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-') f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){s=(s<<3)+(s<<1)+(c^48);c=getchar();}\n    return f*s;\n}\nstruct node{\n    int mx,my,nx,ny;//\u7a7a\u683c\u7684\u4f4d\u7f6e\uff0c\u521d\u59cb\u68cb\u5b50\u73b0\u5728\u7684\u4f4d\u7f6e\n    int stp;//\u6b65\u6570 \n};\nint n,m,q;\nint mp[N][N];\nint ex,ey,sx,sy,tx,ty;\nqueue<node>Q;\nconst int dx[]={1,-1,0,0},dy[]={0,0,1,-1};\nbool vis[N][N][N][N];\nbool check(int xx,int yy)\n{\n    if(xx<0||xx>n||yy<0||yy>m||mp[xx][yy]==0) return 0;\n    return 1;\n}\nint main() \n{\n    n=rd(),m=rd(),q=rd();\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            mp[i][j]=rd();\n    while(q--)\n    {\n        ex=rd(),ey=rd(),sx=rd(),sy=rd(),tx=rd(),ty=rd();\n        if(sx==tx&&sy==ty)\n        {//\u4e0b\u9762\u6751\u7b54\u6848\u662f\u5728\u62d3\u5c55\u8282\u70b9\u4e4b\u540e\u5b58 \u6240\u4ee5\u8fd9\u91cc\u8981\u7279\u5224 \n            puts(\"0\");//\u5982\u679c\u53d6\u51fa\u65f6\u5b58\u7b54\u6848\u5c31\u4e0d\u7528\u7279\u5224(\u597d\u50cf\u4e5f\u4e0d\u7528break\u5f88\u591a\u5c42\u4e86 \n            continue; \n        }\n        memset(vis,0,sizeof(vis));\n        bool flag=0;\n        while(!Q.empty()) Q.pop();\n        node s;s.mx=ex,s.my=ey,s.nx=sx,s.ny=sy,s.stp=0;\n        vis[ex][ey][sx][sy]=1;\n        Q.push(s);\n        while(!Q.empty())\n        {\n            s=Q.front();Q.pop();\n            for(int i=0;i<4;i++)\n            {\n                node nxt;\n                nxt.mx=s.mx+dx[i],nxt.my=s.my+dy[i];\n                if(!check(nxt.mx,nxt.my)) continue;\n                if(nxt.mx==s.nx&&nxt.my==s.ny) nxt.nx=s.mx,nxt.ny=s.my;\n                else nxt.nx=s.nx,nxt.ny=s.ny;\n                nxt.stp=s.stp+1;\n                if(nxt.nx==tx&&nxt.ny==ty)\n                {\n                    flag=1;\n                    printf(\"%d\\n\",nxt.stp);\n                    break;\n                }\n                if(vis[nxt.mx][nxt.my][nxt.nx][nxt.ny]) continue;\n                Q.push(nxt);\n                vis[nxt.mx][nxt.my][nxt.nx][nxt.ny]=1;\n            }\n            if(flag) break;\n        }\n        if(flag) continue;\n        else puts(\"-1\");\n    }\n    return 0;\n}\n\nCode\n```\n\n\u6ee1\u5206\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<cstring>\n#include<queue>\n#include<map>\n#include<iostream>\nusing namespace std;\n#define ll long long\n#define INF 0x3f3f3f3f\n#define N 35\nint rd()\n{\n\tint f=1,s=0;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){s=(s<<3)+(s<<1)+(c^48);c=getchar();}\n\treturn f*s;\n}\nconst int dx[]={1,-1,0,0},dy[]={0,0,1,-1};\n//\u4e0b\u4e0a\u53f3\u5de6 \nint n,m,q;\nint mp[N][N];\nint ex,ey,sx,sy,tx,ty;\nint cnt[N][N][5];\nbool check(int xx,int yy)\n{\n\tif(xx<=0||xx>n||yy<=0||yy>m||mp[xx][yy]==0) return 0;\n\treturn 1;\n}\nint tot;\nstruct node{\n\tint x,y,stp/*\u5e7f\u641c\u7684\u65f6\u5019\u7528 \u5b58\u6b65\u6570*/;\n};\nbool vis[N][N],mark[N*N]/*spfa\u7684\u6807\u8bb0\u6570\u7ec4*/;\nvector<pair<int,int> >G[N*N];\nvoid add(int u,int v,int w)\n{\n\tG[u].push_back(make_pair(v,w));\n}\nint bfs(int ax,int ay,int bx,int by,int cx,int cy)\n{//a\u5230b\u4e0d\u7ecf\u8fc7\u70b9c\u7684\u6700\u77ed\u8ddd\u79bb \n\tif(ax==bx&&ay==by) return 0;//\u8d77\u70b9\u5c31\u662f\u7ec8\u70b9\n\tmemset(vis,0,sizeof(vis)); \n\tqueue<node>Q;\n\twhile(!Q.empty()) Q.pop();\n\tnode s;s.x=ax,s.y=ay,s.stp=0;\n\tQ.push(s);\n\tvis[ax][ay]=1;\n\twhile(!Q.empty())\n\t{\n\t\tnode now=Q.front();Q.pop();\n\t\tif(now.x==bx&&now.y==by) return now.stp;\n\t\tfor(int i=0;i<4;i++)\n\t\t{\n\t\t\tnode nxt;\n\t\t\tnxt.x=now.x+dx[i],nxt.y=now.y+dy[i];\n\t\t\tif(!check(nxt.x,nxt.y)) continue;\n\t\t\tif(nxt.x==cx&&nxt.y==cy) continue;\n\t\t\tif(vis[nxt.x][nxt.y]) continue;\n\t\t\tnxt.stp=now.stp+1;\n\t\t\tQ.push(nxt);\n\t\t\tvis[nxt.x][nxt.y]=1;\n\t\t}\n\t}\n\treturn INF;//\u4e0d\u80fd\u5230\u8fbe \n}\nvoid Init()\n{\n\t//cnt\u5b58\u72b6\u6001\u6807\u53f7 spfa\u7684\u65f6\u5019\u662f\u628a\u70b9\u770b\u6210\u72b6\u6001 \u7528\u8fb9\u6765\u8868\u793a\u72b6\u6001\u7684\u8f6c\u79fb \n\t//[i][j][k]\u662f\u8868\u793a\u5f00\u59cb\u7684\u90a3\u4e2a\u70b9\u7684\u5750\u6807\u662f(i,j) \u7a7a\u683c\u5728\u5b83\u7684k\u65b9\u5411 \n\ttot=0;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tfor(int k=0;k<4;k++)\n\t\t\t\tif(mp[i][j]&&check(i+dx[k],j+dy[k]))\n\t\t\t\t\tcnt[i][j][k]=++tot;//\u7ed9\u72b6\u6001\u6807\u53f7 \u6ca1\u6709\u6807\u53f7\u7684\u5c31\u662f\u4e0d\u53ef\u884c\u7684\u72b6\u6001 \n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tfor(int k=0;k<4;k++)\n\t\t\t\tif(cnt[i][j][k])\n\t\t\t\t{\n\t\t\t\t\tint tmp;\n\t\t\t\t\tif(k==0) tmp=1;\n\t\t\t\t\tif(k==1) tmp=0;\n\t\t\t\t\tif(k==2) tmp=3;\n\t\t\t\t\tif(k==3) tmp=2;\n\t\t\t\t\tadd(cnt[i][j][k],cnt[i+dx[k]][j+dy[k]][tmp],1);\n\t\t\t\t\t//\u8fde\u5355\u5411\u8fb9\u5c31\u53ef\u4ee5\u4e86 \u540e\u9762\u4f1a\u904d\u5386\u5230\u65c1\u8fb9\u72b6\u6001\u8fde\u56de\u6765\u7684\n\t\t\t\t\t//\u4ea4\u6362\u7a7a\u767d\u683c\u5b50\u548c\u8d77\u70b9\u683c\u5b50 \u53ea\u9700\u8981\u4e00\u6b65  \n\t\t\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tfor(int k=0;k<4;k++)\n\t\t\t\tfor(int p=0;p<4;p++)//\u679a\u4e3e\u8d77\u70b9\u683c\u5b50\u76f8\u90bb\u4e00\u5708\u7684\u4e24\u4e2a\u683c\u5b50 \n\t\t\t\t\tif(k!=p&&cnt[i][j][k]&&cnt[i][j][p])\n\t\t\t\t\t\tadd(cnt[i][j][k],cnt[i][j][p],bfs(i+dx[k],j+dy[k],i+dx[p],j+dy[p],i,j));\n\t//\u53ef\u4ee5\u8d77\u70b9\u683c\u5b50\u4e0d\u52a8 \u800c\u7a7a\u767d\u683c\u5b50\u7ed5\u7740\u5b83\u8f6c(\u6362\u65b9\u5411)\n\t//\u5982\u679c\u7528\u8d77\u70b9\u683c\u5b50\u81ea\u5df1\u6362\u65b9\u5411 \u53ef\u80fd\u6ca1\u90a3\u4e48\u4f18\u79c0\u56e0\u4e3a\u8981\u7ed5\u4e00\u7ed5 \n\t//\u800c\u4e14\u8d77\u70b9\u683c\u5b50\u6709\u53ef\u80fd\u4f1a\u8dd1\u5230\u4e00\u4e2a\u79bb\u7ec8\u70b9\u7684\u5730\u65b9\u53bb\u4e86 \u66f4\u4e0d\u4f18 \n\t//\u800c\u53ea\u52a8\u7a7a\u767d\u683c\u5b50\u53ef\u80fd\u4f1a\u4f18\u79c0\u4e00\u4e9b \u56e0\u4e3a\u7a7a\u767d\u683c\u5b50\u6700\u4f18(\u5230\u5904\u90fd\u662f\u6d3b\u52a8\u683c\u5b50)\u53ea\u7528\u8d702~4\u6b65 \n\t\n\t//\u7ecf\u8fc7\u5176\u4ed6\u683c\u5b50\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd \u56e0\u4e3a\u90fd\u662f1 \u53ea\u662f\u7a7a\u767d\u683c\u5b50\u53d8\u4e86\u800c\u5df2\n\t//\u800c\u7ecf\u8fc7\u8d77\u70b9\u683c\u5b50\u5219\u4f1a\u6539\u53d8\u8d77\u70b9\u683c\u5b50\u7684\u5750\u6807 \n}\nint dis[N*N];\nint spfa()\n{\n\tqueue<int>Q;\n\twhile(!Q.empty()) Q.pop();\n\tif(sx==tx&&sy==ty) return 0;\n\tmemset(dis,INF,sizeof(dis));\n\tmemset(mark,0,sizeof(mark));\n\tfor(int k=0;k<4;k++)\n\t{//\u7a7a\u683c\u5148\u8d70\u5230\u8d77\u70b9\u7684\u56db\u5468 \u521d\u59cb\u72b6\u6001 \u4ee5\u7a7a\u683c\u4ece\u8d77\u70b9\u56db\u5468\u5f00\u59cb \n\t\tif(cnt[sx][sy][k])\n\t\t{\n\t\t\tdis[cnt[sx][sy][k]]=bfs(ex,ey,sx+dx[k],sy+dy[k],sx,sy);\n\t\t\tQ.push(cnt[sx][sy][k]);\n\t\t\tmark[cnt[sx][sy][k]]=1; \n\t\t}\n\t}\n\twhile(!Q.empty())\n\t{\n\t\tint u=Q.front();Q.pop();\n\t\tmark[u]=0;\n\t\tfor(int i=0;i<G[u].size();i++)\n\t\t{\n\t\t\tint v=G[u][i].first,w=G[u][i].second;\n\t\t\tif(dis[v]>dis[u]+w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tif(!mark[v])\n\t\t\t\t{\n\t\t\t\t\tQ.push(v);\n\t\t\t\t\tmark[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t//\u7a7a\u683c\u5728\u54ea\u91cc\u4e0d\u7528\u7ba1 \u8d77\u70b9\u683c\u5b50\u5230\u4e86\u5c31\u53ef\u4ee5 \n\t//\u4ece\u7a7a\u683c\u5728\u8d77\u70b9\u683c\u5b50\u56db\u5468\u968f\u4fbf\u54ea\u4e2a\u5730\u65b9\u7684\u72b6\u6001\u5230\u7a7a\u683c\u5728\u7ec8\u70b9\u683c\u5b50\u56db\u5468\u968f\u4fbf\u54ea\u4e2a\u5730\u65b9\u7684\u72b6\u6001\n\tint res=INF;\n\tfor(int k=0;k<4;k++)\n\t\tif(cnt[tx][ty][k])\n\t\t\tres=min(res,dis[cnt[tx][ty][k]]);\n\tif(res==INF) return -1;//\u8d70\u4e0d\u5230\n\treturn res; \t\n}\nint main() \n{\n\tn=rd(),m=rd(),q=rd();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tmp[i][j]=rd();\n\tInit();\n\twhile(q--)\n\t{\n\t\tex=rd(),ey=rd(),sx=rd(),sy=rd(),tx=rd(),ty=rd();\n\t\tprintf(\"%d\\n\",spfa());\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1573385001,
        "uid": 41165,
        "name": "Starlight_Glimmer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u4e00\u4e2a\u6bd4\u8f83\u6709\u96be\u5ea6\u7684\u56fe\u8bba+\u641c\u7d22\u9898\u3002\n\n\u5f53\u7136\u90e8\u5206\u5206\u8fd8\u662f\u5f88\u597d\u62ff\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8dd1\u4e00\u4e2a\u6bd4\u8f83\u88f8\u7684\u641c\u7d22\uff0c\u8bb0\u5f55\u7a7a\u767d\u683c\u5b50\u73b0\u5728\u7684\u4f4d\u7f6e\u3001\u8d77\u59cb\u70b9\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6a21\u62df\u9898\u610f\u8dd1\u641c\u7d22\u3002\u7a7a\u767d\u683c\u5b50\u56db\u9762\u641c\u7d22\uff0c\u5982\u679c\u53ef\u4ee5\u8d70\u7684\u8bdd\u5c31\u7ee7\u7eed\u5f80\u524d\u8d70\uff0c\u5982\u679c\u9047\u5230\u8d77\u59cb\u70b9\u7684\u8bdd\u5c31\u628a\u5b83\u548c\u8d77\u59cb\u70b9\u7684\u4f4d\u7f6e\u76f8\u4ea4\u6362\u3002\n\n\u6211\u5199\u4e11\u4e86......\u53ea\u670950\u5206,\u5176\u4ed6\u7684\u5927\u4f6c\u8bf4\u66b4\u529b\u5e94\u8be5\u662f\u670970\u5206\u7684......\uff08\u4ee5\u4e0b\u662f\u4ee3\u7801\uff0c\u6846\u67b6\u6765\u81easoul_M\uff09\uff0c\u5176\u5b9e\u6309\u7167bfs\u7684\u7279\u6027\u9047\u5230\u7b2c\u4e00\u4e2a\u7b54\u6848\u5c31\u5e94\u8be5\u7ed3\u675f\u4e86\u7684\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5199return\u5c31WA\u6389\u4e86\u3002\u3002\u3002\u5982\u679c\u6709\u54ea\u4e2adalao\u77e5\u9053\u8bf7\u79c1\u4fe1\u6211\u8c22\u8c22\u3002qwq\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<cmath>\nusing namespace std;\nint n,m,Q;\nint ex,ey,sx,sy,tx,ty,ans;\nstruct Node{int x1,y1,x2,y2,sum;};\nint a[50][50],f[50][50][50][50];\nint move_x[5]={0,0,1,-1};\nint move_y[5]={-1,1,0,0};\nqueue<Node>q;\ninline void bfs(){\n    q.push((Node){ex,ey,sx,sy,0});\n    while(!q.empty()){\n        Node now=q.front();\n        q.pop();\n        int x1=now.x1;\n        int y1=now.y1;\n        int x2=now.x2;\n        int y2=now.y2;\n        int sum=now.sum;\n        if(sum>ans) continue;\n    \tif(f[x1][y1][x2][y2]<sum) continue;\n    \tf[x1][y1][x2][y2]=sum;\n    \tif((x2==tx) && (y2==ty)){\n            ans=min(ans,sum);\n            continue;\n    \t}\n    \tfor(register int i=0;i<4;i++) \n    \t{\n    \t\tint cur_x1=x1+move_x[i];\n    \t\tint cur_y1=y1+move_y[i];\n    \t\tif(!a[cur_x1][cur_y1]||!a[x2][y2]) continue;\n    \t\tif(cur_x1<1||cur_x1>n||x2<1||x2>n) continue;\n    \t\tif(cur_y1<1||cur_y1>m||y2<1||y2>m) continue;\n    \t\tif(cur_x1==x2&&cur_y1==y2)\n    \t\t{\n                q.push((Node){x2,y2,x1,y1,sum+1});\n                continue;\n            }\n            q.push((Node){cur_x1,cur_y1,x2,y2,sum+1});\n        }\n    \t\n    }\n}\nint main(){\n\n    scanf(\"%d%d%d\",&n,&m,&Q);\n    for(register int i=1;i<=n;i++)\n        for(register int j=1;j<=m;j++) \n            scanf(\"%d\",&a[i][j]);\n    while(Q--)\n    {\n        ans=0x3f3f3f3f;\n        memset(f,0x3f,sizeof(f));\n        scanf(\"%d%d%d%d%d%d\",&ex,&ey,&sx,&sy,&tx,&ty);\n        f[ex][ey][sx][sy]=0;\n        bfs();\n        if(ans==0x3f3f3f3f) ans=-1;\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```\n~~\uff08imone dalao:\"\u66b4\u529b\u660e\u660e\u670980\u5206\u7684\u597d\u4e0d\u597d\uff01\uff01\uff09~~\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u6b63\u89e3\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e4b\u6240\u4ee5\u4f1aT\uff0c\u539f\u56e0\u662f\u6211\u4eec\u4f7f\u7528\u4e86\u8fc7\u591a\u65e0\u7528\u7684\u72b6\u6001\uff08\u4e5f\u5c31\u662f\u8ba9\u7a7a\u767d\u683c\u5b50\u5728\u56fe\u4e0a\u778e\u8dd1\uff09\u3002\u4f46\u662f\u6211\u4eec\u9700\u8981\u7684\u72b6\u6001\u5176\u5b9e\u4e0d\u591a\u3002\u4e3a\u4e86\u80fd\u8ba9\u7a7a\u767d\u683c\u5b50\u63a8\u7740\u8d77\u59cb\u70b9\u8dd1\uff0c\u7a7a\u767d\u683c\u5b50\u662f\u5fc5\u987b\u5728\u8d77\u59cb\u70b9\u65c1\u8fb9\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u5c31\u77e5\u9053\u4ec0\u4e48\u662f\u6709\u7528\u72b6\u6001\u4e86\uff1a\u5373\u5728\u8d77\u59cb\u70b9\u5468\u56f4\uff08\u5373\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\uff09\u3002\u72b6\u6001\u7684\u8f6c\u79fb\u5462\uff1f\u2014\u2014\u8fd9\u4e2a\u5206\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u4ece\u8d77\u59cb\u70b9\u5468\u56f4\u8f6c\u79fb\u5230\u5468\u56f4\u7684\u53e6\u5916\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u6b65\u6570\u53ef\u4ee5\u7528\u4e00\u4e2abfs\u8ba1\u7b97\uff0c\u53e6\u5916\u4e00\u79cd\u662f\u548c\u8d77\u59cb\u70b9\u4ea4\u6362\u4f4d\u7f6e\uff0c\u6b65\u6570\u5f88\u663e\u7136\u662f1\u3002\n\n\u63a5\u4e0b\u6765\u7684\u96be\u70b9\u662f\u5982\u4f55\u8bb0\u5f55\u72b6\u6001\u3002\u56e0\u4e3a\u6211\u4eec\u628a\u8d77\u59cb\u70b9\u5728\u68cb\u76d8\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u548c\u5b83\u4e0a\u4e0b\u5de6\u53f3\u7684\u60c5\u51b5\u90fd\u62bd\u79bb\u51fa\u6765\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a$cnt$\u6570\u7ec4\uff0c$cnt[i][j][k]$\u8868\u793a**\u8d77\u59cb\u70b9\u5728(i,j)\u7684\u4f4d\u7f6e\uff0c\u7a7a\u767d\u683c\u5b50\u5728\u5b83\u5468\u56f4\u7684k(\u4ece0\u52303\u7f16\u53f7\uff09\u4f4d\u7f6e**\u3002\n\n\u4e4b\u540e\u5c31\u662f\u540e\u7ee7\u72b6\u6001\u7684\u8f6c\u79fb\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u901a\u8fc7\u8fde\u8fb9\u7684\u65b9\u5f0f\uff0c\u628a\u5408\u6cd5\u72b6\u6001\u548c\u5b83\u7684\u540e\u7ee7\u72b6\u6001\u8fde\u8d77\u6765\uff0c\u8fd9\u6837\u72b6\u6001\u5c31\u6709\u4f20\u9012\u6027\u548c\u8fde\u7eed\u6027\u4e86\u3002\n\n\u5177\u4f53\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u8fd9\u5f20\u56fe\u6765\u7406\u89e3\uff1a  \n\u56fe\u4e2d\u6a21\u62df\u7684\u662f\u76ee\u6807\u8282\u70b9\u548c\u7a7a\u683c\uff08\u5047\u8bbe\u7a7a\u683c\u5728\u76ee\u6807\u8282\u70b9\u7684\u5de6\u8fb9\uff09\u8fdb\u884c\u4ea4\u6362\uff08\u4ece\u7eff\u8272\u72b6\u6001\u8f6c\u79fb\u5230\u9ec4\u8272\u72b6\u6001\uff09\u3002\n![](https://i.loli.net/2018/10/11/5bbf6a74ba8f4.png)\n\u6309\u7167\u4e0a\u9762\u7684\u8bf4\u6cd5\uff0c\u76ee\u6807\u8282\u70b9\u548c\u5b83\u5468\u56f4\u7684\u72b6\u6001\u662f\u6709\u957f\u5ea6\u4e3a1\u7684\u6709\u5411\u8fb9\u7684\uff0c\u5b83\u7684\u5468\u56f4\u72b6\u6001\u4e4b\u95f4\u4e5f\u662f\u6709bfs\u51fa\u7684\u957f\u5ea6\u7684\u6709\u5411\u8fb9\u7684\u3002\n\n\u6211\u4eec\u6613\u77e5\u9ec4\u8272\u201c\u6362\u540e\u8282\u70b9\u201d\u548c\u7eff\u8272\u7684\u201c\u76ee\u6807\u8282\u70b9\u7684\u5de6\u9762\u201d\u7684\u5750\u6807\u5176\u5b9e\u662f\u4e00\u6837\u7684\uff0c\u7eff\u8272\u7684\u201c\u76ee\u6807\u8282\u70b9\u201d\u548c\u9ec4\u8272\u7684\u201c\u6362\u540e\u8282\u70b9\u7684\u53f3\u9762\u201d\u5750\u6807\u4e5f\u662f\u4e00\u6837\u7684\u3002\u4f46\u8981\u6ce8\u610f\u7684\u662f\u5b83\u4eec\u8bb0\u5f55\u7684\u72b6\u6001\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u56fe\u8fd8\u4e0d\u662f\u8fde\u901a\u7684\u3002\u4ea4\u6362\u4e86\u7a7a\u683c\u4e0e\u8d77\u59cb\u70b9\u7684\u4f4d\u7f6e\u540e\uff0c\u6309\u7167\u4e0a\u56fe\u5c31\u662f\u5c06\u7eff\u8272\u7684\u201c\u76ee\u6807\u8282\u70b9\u7684\u5de6\u9762\u201d\u548c\u9ec4\u8272\u7684\u201c\u6362\u540e\u8282\u70b9\u7684\u53f3\u9762\u201d\u8fde\u4e00\u6761\u6709\u5411\u8fb9\u3002\n\n\u8fde\u5b8c\u8fb9\u4e4b\u540espfa\u8dd1\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u4e86\u3002\u3002\u3002  \n\n\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u5c31\u662f\u53ef\u80fd\u5f00\u59cb\u7a7a\u767d\u683c\u5b50\u548c\u8d77\u59cb\u70b9\u4f4d\u7f6e\u79bb\u5f97\u5f88\u5927\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u7a7a\u767d\u683c\u5b50\u63a8\u7740\u8d77\u59cb\u70b9\u79fb\u52a8\uff0c\u6240\u4ee5\u6211\u4eec\u5f00\u59cb\u8981\u628a\u7a7a\u767d\u5404\u81ea\u79fb\u52a8\u5230\u8d77\u59cb\u70b9\u5468\u56f4\u3002\uff08\u4e5f\u5c31\u662f\u4e0a\u4e0b\u5de6\u53f3\uff09\u8fd9\u4e2a\u7528bfs\u6c42\u6700\u5c11\u6b65\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u79fb\u52a8\u5230\u7a7a\u767d\u683c\u5b50\u5468\u56f4\u5c31\u8d77\u70b9\u5230\u7ec8\u70b9\u8fde\u901a\u4e86\uff0c\u76f4\u63a5\u6700\u77ed\u8def\u8dd1\u4e00\u904d\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6700\u540e\u6211\u4eec\u628a$cnt[endx][endy][k](0<=k<=3)$\u7684\u6700\u5c0f\u503c\u8bb0\u4e3aans\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<cmath>\n#include<algorithm>\n#define MAXN 1234\nusing namespace std;\nint n,m,q,edge_number,tot,ans=0x3f3f3f3f;\nint a[40][40],head[MAXN*MAXN+10],dis[MAXN*MAXN+10],done[MAXN*MAXN+10];\nint vis[40][40],cnt[40][40][5];\nint move_x[5]={1,-1,0,0};\nint move_y[5]={0,0,1,-1};\nstruct Edge{int nxt,to,dis;}edge[MAXN*MAXN+10];\nstruct Node{int x,y,len;};\ninline void add(int from,int to,int dis)\n{\n    edge[++edge_number].dis=dis;\n    edge[edge_number].nxt=head[from];\n    edge[edge_number].to=to;\n    head[from]=edge_number;\n}\ninline int bfs(int ax,int ay,int bx,int by,int cx,int cy)\n{\n    if(ax==bx&&ay==by) return 0;\n    memset(vis,0,sizeof(vis));\n    queue<Node>q;\n    q.push((Node){ax,ay,0});\n    vis[ax][ay]=1;\n    while(!q.empty())\n    {\n        Node cur=q.front();\n        q.pop();\n        if(cur.x==bx&&cur.y==by) return cur.len;\n        for(int i=0;i<4;i++)\n        {\n            int x=cur.x+move_x[i];\n            int y=cur.y+move_y[i];\n            if(x<1||x>n||y<1||y>m) continue;\n            if(x==cx&&y==cy) continue;\n            if(vis[x][y]||!a[x][y]) continue;\n            q.push((Node){x,y,cur.len+1});\n            vis[x][y]=1;\n            \n        }\n    }\t\n    return 0x3f3f3f3f;\n}\ninline int spfa(int ax,int ay,int bx,int by,int cx,int cy)\n{\n    queue<int>q;\n    if(bx==cx&&by==cy) return 0;\n    memset(dis,0x3f,sizeof(dis));\n    for(int k=0;k<4;k++)\n    {\n        if(cnt[bx][by][k])\n        {\n            dis[cnt[bx][by][k]]=bfs(ax,ay,bx+move_x[k],by+move_y[k],bx,by);\n            q.push(cnt[bx][by][k]);\n            done[cnt[bx][by][k]]=1;\n        }\n    }\n    while(!q.empty())\n    {\n        int u=q.front(); q.pop(); done[u]=0;\n        for(int i=head[u];i;i=edge[i].nxt)\n        {\n            int v=edge[i].to;\n            if(dis[v]>dis[u]+edge[i].dis)\n            {\n                dis[v]=dis[u]+edge[i].dis;\n                if(!done[v])\n                {\n                    q.push(v);\n                    done[v]=1;\n                }\n            }\n        }\n    }\n    for(int k=0;k<4;k++)\n        if(cnt[cx][cy][k])\n            ans=min(ans,dis[cnt[cx][cy][k]]);\n    if(ans==0x3f3f3f3f) return -1;\n    else return ans;\n}\ninline void init()\n{\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            for(int k=0;k<4;k++)\n                if(a[i][j]&&a[i+move_x[k]][j+move_y[k]])\n                    cnt[i][j][k]=++tot; \n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            for(int k=0;k<4;k++)\n                if(cnt[i][j][k])\n                    add(cnt[i][j][k],cnt[i+move_x[k]][j+move_y[k]][k^1],1);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            for(int k=0;k<4;k++)\n                for(int p=0;p<4;p++)\n                 if(k!=p&&cnt[i][j][k]&&cnt[i][j][p])\n                 \tadd(cnt[i][j][k],cnt[i][j][p],bfs(i+move_x[k],j+move_y[k],i+move_x[p],j+move_y[p],i,j));\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&q);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            scanf(\"%d\",&a[i][j]);\n    init();\n    while(q--)\n    {\n        int blank_x,blank_y,st_x,st_y,end_x,end_y;\n        ans=0x3f3f3f3f;\n        scanf(\"%d%d%d%d%d%d\",&blank_x,&blank_y,&st_x,&st_y,&end_x,&end_y);\n        printf(\"%d\\n\",spfa(blank_x,blank_y,st_x,st_y,end_x,end_y));\n    }\n    return 0;\n} \n```",
        "postTime": 1539298966,
        "uid": 107488,
        "name": "\u98ce\u6d54\u51cc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u6b63\u89e3\u6bd4\u8f83\u96be\u60f3\uff0c\u6b63\u5e38\u4eba\u770b\u5230\u8fd9\u9898\u53ef\u80fd\u90fd\u4f1a\u5728\u641c\u7d22\u526a\u679d\u7684~~\u4e0d\u5f52~~\u8def\u4e0a\u8d8a\u8d70\u8d8a\u8fdc\u3002\n\n\u5982\u679c\u91c7\u7528\u641c\u7d22\u7684\u7b56\u7565\uff0c\u6bcf\u6b21\u9700\u8981\u8bb0\u5f55\u4e0b\u68cb\u76d8\u7684\u5b8c\u6574\u72b6\u6001\uff0c\u72b6\u6001\u6570\u91cf\u548c\u8f6c\u79fb\u6570\u91cf\u8fc7\u4e8e\u5e9e\u5927\uff0c\u4ee5\u81f4\u4e8e\u65e0\u6cd5\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u6c42\u89e3\u3002\n\n\u89c2\u5bdf\u5230\u68cb\u76d8\u4e2d\u7684\u975e\u969c\u788d\u4f4d\u7f6e\u53ea\u53ef\u80fd\u6709\u7a7a\u683c\u3001\u666e\u901a\u68cb\u5b50\u6216\u76ee\u6807\u68cb\u5b50\u4e09\u79cd\u53ef\u80fd\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u786e\u5b9a\u76ee\u6807\u68cb\u5b50\u548c\u7a7a\u683c\u7684\u4f4d\u7f6e\uff0c\u5c31\u53ef\u4ee5\u5c06\u6574\u5f20\u68cb\u76d8\u7684\u72b6\u6001\u786e\u5b9a\u4e0b\u6765\u3002\n\n\u663e\u7136\uff0c\u5982\u679c\u60f3\u8981\u632a\u52a8\u76ee\u6807\u68cb\u5b50\uff0c\u5219\u76ee\u6807\u68cb\u5b50\u7684\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u4e4b\u4e00\u5fc5\u987b\u4e3a\u7a7a\u683c\u3002\u53ef\u4ee5\u5b9a\u4e49\u72b6\u6001\u4e3a\u4e09\u5143\u7ec4 $(x,y,d)$ \uff0c\u8868\u793a\u76ee\u6807\u68cb\u5b50\u4f4d\u4e8e $(x,y)$ \uff0c\u5e76\u4e14\u5176 $d(0\\le d\\le 3)$ \u65b9\u5411\u4e3a\u7a7a\u683c\u3002\n\n\u5047\u8bbe\u4f4d\u4e8e $(x1,y1)$ \u7684\u76ee\u6807\u68cb\u5b50\u5411 $d1$ \u65b9\u5411\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\u540e\u5230\u8fbe $(x2,y2)$ \uff0c\u4e0d\u96be\u53d1\u73b0\u72b6\u6001 $(x1,y1,d1)$ \u53ef\u4ee5\u8f6c\u79fb\u5230\u72b6\u6001 $(x2,y2,d2)$\u3002\u800c\u6b64\u6b21\u8f6c\u79fb\u9700\u8981\u7684\u4ee3\u4ef7\uff0c\u5373\u4e3a\u5c06\u7a7a\u683c\u4ece\u539f\u59cb\u4f4d\u7f6e\u79fb\u52a8\u5230 $(x2,y2)$ \u7684 $d2$ \u65b9\u5411\u6240\u9700\u7684\u6700\u5c0f\u6b65\u6570\u3002\u8fd9\u91cc\u53ef\u4ee5\u7528 bfs \u6c42\u89e3\u3002\uff08\u6ce8\u610f\u969c\u788d\u65b9\u5757\u548c $(x2,y2)$ \u4f4d\u7f6e\u662f\u4e0d\u53ef\u4ee5\u7ecf\u8fc7\u7684\uff09\n\n\u5c06\u6bcf\u4e2a\u72b6\u6001 $(x,y,d)$ \u62bd\u8c61\u4e3a\u8282\u70b9\uff0c\u53ef\u4ee5\u8f6c\u79fb\u7684\u72b6\u6001\u4e4b\u95f4\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u8fb9\u6743\u5373\u4e3a\u8f6c\u79fb\u7684\u6700\u5c0f\u6b65\u6570\u3002\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u8ba1\u7b97\u51fa\u62bd\u8c61\u540e\u7684\u56fe\u4e2d\u6700\u77ed\u8def\u5f84\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u7565\u4e11\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define id(x, y, d) ((x - 1) * M + y) + N * M * (d)\n\nconst int INF = 0x3f3f3f3f;\n\nstruct Edge {\n\tint v, w;\n\tEdge(int v, int w): v(v), w(w) {}\n};\nvector<Edge> G[35 * 35 * 5];\nint nx[] = {0, -1, 0, 1};\nint ny[] = {-1, 0, 1, 0};\nint N, M, Q;\nint h[35][35];\nint t[35][35];\nbool vis[35][35];\n\nvoid getdis(int x, int y, int px, int py) {\n\tmemset(t, 0x3f, sizeof(t));\n\tmemset(vis, 0, sizeof(vis));\n\tif (h[x][y] == 0) return;\n\tqueue<pair<int, int> > q;\n\tt[x][y] = 1, vis[x][y] = 1;\n\tq.push(make_pair(x, y));\n\twhile (q.size()) {\n\t\tint ux = q.front().first, uy = q.front().second;\n\t\tq.pop();\n\t\tfor (int d = 0; d <= 3; ++d) {\n\t\t\tint tx = ux + nx[d], ty = uy + ny[d];\n\t\t\tif (tx < 1 || tx > N || ty < 1 || ty > M) continue;\n\t\t\tif (tx == px && ty == py) continue;\n\t\t\tif (h[tx][ty] == 0 || vis[tx][ty]) continue;\n\t\t\tt[tx][ty] = t[ux][uy] + 1;\n\t\t\tq.push(make_pair(tx, ty));\n\t\t\tvis[tx][ty] = 1;\n\t\t}\n\t}\n}\n\ninline void AddEdge(int u, int v, int w) {\n\tG[u].push_back(Edge(v, w));\n}\n\nbool v[35 * 35 * 5];\nint d[35 * 35 * 5];\n\nvoid Dijkstra(int S) {\n\tmemset(v, 0, sizeof(v));\n\tmemset(d, 0x3f, sizeof(d));\n\td[S] = 0;\n\tpriority_queue<pair<int, int> > q;\n\tq.push(make_pair(0, S));\n\twhile (q.size()) {\n\t\tint u = q.top().second;\n\t\tq.pop();\n\t\tif (v[u]) continue;\n\t\tv[u] = 1;\n\t\tfor (vector<Edge>::iterator it = G[u].begin(); it != G[u].end(); it++) {\n\t\t\tint v = it->v, w = it->w;\n\t\t\tif (d[u] + w < d[v]) {\n\t\t\t\td[v] = d[u] + w;\n\t\t\t\tq.push(make_pair(-d[v], v));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d%d\", &N, &M, &Q);\n\tfor (int i = 1; i <= N; ++i)\n\t\tfor (int j = 1; j <= M; ++j)\n\t\t\tscanf(\"%d\", &h[i][j]);\n\tfor (int x = 1; x <= N; ++x) {\n\t\tfor (int y = 1; y <= M; ++y) {\n\t\t\tif (h[x][y] == 0) continue;\n\t\t\tfor (int d = 0; d <= 3; ++d) {\n\t\t\t\tint tx = x + nx[d], ty = y + ny[d];\n\t\t\t\tif (tx < 1 || tx > N || ty < 1 || ty > M) continue;\n\t\t\t\tif (h[tx][ty] == 0) continue;\n\t\t\t\tgetdis(x, y, tx, ty);\n\t\t\t\tfor (int d2 = 0; d2 <= 3; ++d2) {\n\t\t\t\t\tint tx2 = tx + nx[d2], ty2 = ty + ny[d2];\n\t\t\t\t\tif (tx2 < 1 || tx2 > N || ty2 < 1 || ty2 > M) continue;\n\t\t\t\t\tif (t[tx2][ty2] >= INF) continue;\n\t\t\t\t\tAddEdge(id(x, y, d), id(tx, ty, d2), t[tx2][ty2]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\twhile (Q--) {\n\t\tint ex, ey, sx, sy, tx, ty;\n\t\tscanf(\"%d%d%d%d%d%d\", &ex, &ey, &sx, &sy, &tx, &ty);\n        if (sx == tx && sy == ty) {\n            puts(\"0\");\n            continue;\n        }\n\t\tgetdis(ex, ey, sx, sy);\n\t\tint ans = INF;\n\t\tfor (int d1 = 0; d1 <= 3; ++d1) {\n\t\t\tint fx = sx + nx[d1], fy = sy + ny[d1];\n\t\t\tif (fx < 1 || fx > N || fy < 1 || fy > M) continue;\n\t\t\tif (t[fx][fy] >= INF) continue;\n\t\t\tint cur = INF;\n\t\t\tDijkstra(id(sx, sy, d1));\n\t\t\tfor (int d2 = 0; d2 <= 3; ++d2)\n\t\t\t\tcur = min(cur, d[id(tx, ty, d2)]);\n\t\t\tcur += t[fx][fy] - 1;\n\t\t\tans = min(ans, cur);\n\t\t}\n\t\tif (ans >= INF) puts(\"-1\");\n\t\telse printf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1568820025,
        "uid": 116851,
        "name": "_\u98ce\u4f11\u4f4f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "**\u7eaf\u5c5e\u7384\u5b66\u505a\u6cd5\uff0c\u8981\u5b66\u6b63\u89e3\u7684\u8bf7\u8df3\u8fc7\u8fd9\u7bc7**\n\n\u6709\u4e00\u6b21\u96c6\u8bad\u6a21\u62df\u8d5b\uff0c\u76f4\u63a5\u62ff\u4e86NOIp\u539f\u9898\u5377\u5f53\u8bd5\u5377\u3002\u6211\u770b\u5230\u8fd9\u9053\u9898\uff0c\u5c31\u6253\u4e86\u4e2a\u7eafBFS\u66b4\u529b\uff0c\u4ea4\u6d1b\u8c3760\u5206\uff0c\u7ed3\u679c\u771f\u6b63\u8bc4\u6d4b\u7684\u65f6\u5019\u6211\u4ee5\u6700\u540e\u4e00\u4e2a\u70b9`1.000s`\u7684\u65f6\u95f4\u83b7\u5f97\u4e86100\u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u4e8e\u662f\u6211\u610f\u8bc6\u5230\u8fd9\u53ef\u4ee5\u662f\u4e00\u9053**\u5361\u5e38\u7ec3\u4e60\u9898**\u3002\u6240\u8c13\u5361\u5e38\uff0c\u5c31\u662f\u901a\u8fc7\u4f18\u5316\u590d\u6742\u5ea6\u4e2d\u7684\u5e38\u6570\u56e0\u5b50\u4f7f\u539f\u672c\u8d85\u51fa\u65f6\u95f4\u6216\u7a7a\u95f4\u9650\u5236\uff08\u672c\u9898\u662f\u65f6\u95f4\uff09\u7684\u7b97\u6cd5\u80fd\u901a\u8fc7\u3002\n\n### \u666e\u901a\u66b4\u529b\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728\u641c\u7d22\u65f6\u7528\u4e0b\u9762\u7684\u7684\u7ed3\u6784\u6765\u5b58\u50a8\u72b6\u6001\uff1a\n\n```cpp\nstruct Status{\n    int ex,ey,sx,sy;\n    // ex,ey\u662f\u7a7a\u683c\u7684\u4f4d\u7f6e\uff0csx,sy\u662f\u5f53\u524d\u7eff\u8272\u68cb\u5b50\u7684\u4f4d\u7f6e\u3002\n    signed step;\n    // \u8bb0\u5f55\u6b65\u9aa4\u6570\n    inline signed toInt() {\n        return (ex<<15)|(ey<<10)|(sx<<5)|sy;\n    }\n    // \u4f7f\u7528\u8fd9\u4e2atoInt\u51fd\u6570\uff0c\u53ef\u4ee5\u5c06\u5f53\u524d\u72b6\u6001\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6574\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5224\u91cd\u3002\n    // \u7531\u4e8en\u548cm\u53ea\u670930\uff0c\u663e\u7136\u752832\u505a\u8fdb\u5236\u975e\u5e38\u597d\u3002\u4e0d\u96be\u8bc1\u660e\u53ea\u9700\u4e00\u4e2a1048576\u5927\u5c0f\u7684\u6570\u7ec4\n}\n```\n\n\u641c\u7d22\u65f6\u6211\u4eec\u679a\u4e3e\u7a7a\u767d\u683c\u5b50\u5468\u8fb9\u76844\u4e2a\u683c\u5b50\uff0c\u5e76\u8003\u8651\u5c06\u7a7a\u767d\u683c\u5b50\u79fb\u52a8\u5230\u8fd94\u4e2a\u683c\u5b50\uff08\u5373\uff0c\u5c06\u8fd9\u4e2a\u68cb\u5b50\u79fb\u5230\u7a7a\u767d\u683c\u5b50\u4e2d\uff09\u3002\n\n\u5982\u679c\u679a\u4e3e\u5230\u7684\u5468\u8fb9\u7684\u683c\u5b50\u5750\u6807\u662f`(sx,sy)`\uff0c\u90a3\u4e48\u8981\u4ea4\u6362`sx\u548cex`\uff0c`sy\u548cey`\u3002\u5426\u5219\u53ea\u9700\u79fb\u52a8`ex`\u548c`ey`\u5373\u53ef\u3002\n\n\u7136\u540ebfs\u5c31\u5f88\u5bb9\u6613\u5199\u51fa\u6765\u4e86\u3002\u8fd9\u662f\u6211\u4eec\u6700\u521d\u7684\u7eaf\u66b4\u529b\u7248\u672c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,q;\nint a[31][31];\n\nstruct Status{\n    int ex,ey,sx,sy;\n    int step;\n    Status() {\n    }\n    Status(int _ex,int _ey,int _sx,int _sy):\n        ex(_ex),ey(_ey),sx(_sx),sy(_sy)\n    {\n        \n    }\n    \n    int toInt() {\n        return\n            ex*31*31*31+\n            ey*31*31+\n            sx*31+\n            sy;\n    }\n}que[810010]; //\u6570\u7ec4\u6a21\u62df\u961f\u5217\nint tx,ty;\nint h,t; //\u9996\u5c3e\u4e0b\u6807\nbool vis[1048576];\n\n//\u5b9a\u4e49\u201c\u76f8\u90bb\u76844\u4e2a\u683c\u5b50\u201d\u76f8\u5bf9\u5f53\u524d\u683c\u5b50\u7684\u4f4d\u7f6e\nint dx[4]={0,0,1,-1};\nint dy[4]={1,-1,0,0};\n\nint bfs() {\n    while(h<t) {\n        h++;\n        if(que[h].sx==tx && que[h].sy==ty) {\n            return que[h].step;\n        }\n        for(int i=0;i<4;i++) {\n            int ex2=que[h].ex+dx[i];\n            int ey2=que[h].ey+dy[i];\n            if(ex2<1 || ex2>n || ey2<1 || ey2>m) continue;\n            if(a[ex2][ey2]==0) continue;\n            Status tmp;\n            tmp.ex=ex2;\n            tmp.ey=ey2;\n            tmp.sx=que[h].sx;\n            tmp.sy=que[h].sy;\n            tmp.step=que[h].step+1;\n            if(ex2==que[h].sx && ey2==que[h].sy) {\n                tmp.sx=que[h].ex;\n                tmp.sy=que[h].ey;\n            }\n            if(vis[tmp.toInt()]) continue;\n            vis[tmp.toInt()]=1;\n            t++;\n            que[t]=tmp;\n            if(que[t].sx==tx && que[t].sy==ty) {\n                return que[t].step;\n            }\n        }\n    }\n    return -1;\n}\n\nint main() {\n    //freopen(\"puzzle.in\",\"r\",stdin);\n    //freopen(\"puzzle.out\",\"w\",stdout);\n    \n    scanf(\"%d%d%d\",&n,&m,&q);\n    \n    for(int i=1;i<=n;i++) {\n        for(int j=1;j<=m;j++) {\n            cin>>a[i][j];\n        }\n    }\n    \n    for(int i=1;i<=q;i++) {\n        scanf(\"%d%d%d%d%d%d\",\n            &que[1].ex,&que[1].ey,&que[1].sx,&que[1].sy,\n            &tx,&ty);\n        que[1].step=0;\n        h=0;\n        t=1;\n        for(int i=0;i<=1048575;i++) {\n            vis[i]=0;\n        }\n        printf(\"%d\\n\",bfs());\n    }\n}\n\n```\n\n\u8fd9\u4e2a\u7a0b\u5e8f\u80fd\u591f\u83b7\u5f9760\u5206\u7684\u6210\u7ee9\u3002\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u8fdb\u884c\u4e00\u6b21`bfs`\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^2m^2)$\uff0c\u56e0\u4e3a\u6700\u591a\u6709$n^2m^2$\u79cd\u72b6\u6001\uff0c\u6b64\u65f6\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$30^4$\uff0c\u5373$810000$\u3002\u518d\u4e58\u4e0a$q=500$\uff0c\u5c31\u662f$4,0500,0000\u202c$\u3002\u518d\u52a0\u4e0a`bfs`\u6709\u8f83\u5927\u7684\u5e38\u6570\uff0c\u4e0d\u6b7b\u5c31\u602a\u3002\n\n\u4f46\u662f\u663e\u7136$4,0500,0000\u202c$\u662f\u8dd1\u4e0d\u6ee1\u7684\uff0c\u56e0\u6b64\u53ea\u9700\u4f18\u5316\u4e00\u4e0b\u5e38\u6570\uff0c\u5c31\u80fd\u83b7\u5f97\u66f4\u597d\u7684\u6210\u7ee9\u3002\n\n### \u8fdb\u884c\u5e38\u6570\u4f18\u5316\n\n\u4ed4\u7ec6\u89c2\u5bdf\u7a0b\u5e8f\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5f88\u591a\u5730\u65b9\u53ef\u4ee5\u4f18\u5316\u5e38\u6570\u3002\n\n**\u624b\u52a8O3+Ofast**\n\n```cpp\n%:pragma GCC optimize(\"inline,Ofast\",3)\n\u6216\n#pragma GCC optimize(\"inline,Ofast\",3)\n```\n\n\u4e00\u5b9a\u8981\u52a0\u8f7d\u5934\u6587\u4ef6\u524d\u9762\uff01\n\n**\u907f\u514d\u521d\u59cb\u5316\u6e05\u7a7avis\u6570\u7ec4**\n\n\u663e\u7136vis\u6570\u7ec4\u5f88\u5927\uff0c\u6e05\u7a7a\u6d6a\u8d39\u65f6\u95f4\u3002\n\n\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u5f53\u524d\u5728\u8fdb\u884c\u7b2c\u51e0\u6b21`BFS`\u3002\u5982\u679cvis\u6570\u7ec4\u4e2d\u7684\u503c\u7b49\u4e8e\u5f53\u524d\u6b21\u6570\uff0c\u624d\u8ba4\u4e3a\u8fd9\u4e2a\u72b6\u6001\u51fa\u73b0\u8fc7\u3002\u540c\u6837\uff0c\u6807\u8bb0`vis`\u65f6\u6807\u8bb0\u4e3a\u5f53\u524d\u6b21\u6570\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e0d\u6e05\u7a7avis\u6570\u7ec4\u3002\n\n**\u4f7f\u7528\u5feb\u8bfb\u5feb\u5199\u3002**\n\n```cpp\ninline void read(int &ret) {\n    ret=0;\n    register char c=getchar();\n    while(!isdigit(c)) c=getchar();\n    while(isdigit(c)) {ret=ret*10+(c-'0');c=getchar();}\n}\n\nvoid __write(signed x) {\n    if(!x) return;\n    __write(x/10);\n    putchar('0'+x%10);\n}\n\ninline void write(const signed &x,char e='\\0') {\n    if(x>0) __write(x);\n    else if(x==0) putchar('0');\n    else {putchar('-');__write(-x);}\n    if(e) putchar(e);\n}\n\n\u4e3b\u7a0b\u5e8f\u4e2d\uff1a\nread(n);read(m);read(q);\nwrite(bfs(),'\\n');\n\u7b49\u7b49...\n```\n\n**\u4f7f\u7528\u6307\u9488\u6765\u5b8c\u6210\u961f\u5217\u64cd\u4f5c**\n\n\u5b9e\u9645\u4e0a\uff0c\u6307\u9488\u6bd4\u6570\u7ec4\u4e0b\u6807\u8bbf\u95ee\u66f4\u5feb\u3002\u5047\u8bbe\u6709\u4e00\u4e2a`int`\u6570\u7ec4`arr`\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488`int *ptr = arr`\uff0c\u6b64\u65f6`ptr`\u6307\u5411`arr[0]`\uff0c`ptr+1`\u6307\u5411`arr[1]`\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n```cpp\n\u53d6\u503c\uff1a\ncout<<(*ptr)<<endl;\n\n\u8d4b\u503c\uff1a\n(*ptr) = 25\n\n\u5047\u8bbeptr\u6307\u5411\u7684\u662fStatus\u7c7b\u578b\uff0c\u5bf9\u5176step\u8d4b\u503c\u548c\u53d6\u503c\nptr->size = 12\ncout<<(ptr->size)<<endl\n```\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u961f\u5217\u7684\u9996\u5c3e\u4e0b\u6807\u53d8\u6210\u9996\u5c3e\u6307\u9488\u3002\u90a3\u4e48\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528`++h`\uff0c`++t`\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u961f\u5217\u6a21\u62df\u3002\n\n**\u52a0register, inline**\n\n`inline`\u53ef\u4ee5\u7528\u5728\u975e\u9012\u5f52\u51fd\u6570\u7684\u7c7b\u578b\u524d\uff0c\u9632\u6b62\u4e0d\u5fc5\u8981\u7684\u8fdb\u6808\u64cd\u4f5c\u3002\n\n`register`\u53ef\u4ee5\u7528\u5728\u5c40\u90e8\u53d8\u91cf\u7684\u7c7b\u578b\u524d\uff0c\u8fd9\u6837\u53ef\u4ee5\u5b9a\u4e49\u5c06\u53d8\u91cf\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c\u52a0\u5feb\u8bbf\u95ee\u901f\u5ea6\u3002\u4f46\u662f\u5bc4\u5b58\u5668\u5bb9\u91cf\u5c0f\uff0c\u4e0d\u5b9c\u4f7f\u7528\u592a\u591aregister\uff0c\u5426\u5219\u7cfb\u7edf\u4f1a\u82b1\u65f6\u95f4\u5c06\u8f83\u65e9\u5b9a\u4e49\u7684\u5143\u7d20\u6254\u51fa\u5bc4\u5b58\u5668\uff0c\u653e\u5165\u5185\u5b58\uff0c\u9020\u6210\u8d1f\u4f18\u5316\u3002\n\n**\u4fee\u6539dx, dy\u6570\u7ec4\uff0c\u9632\u6b62\u641c\u7d22\u65f6\u5355\u6b65\u56de\u9000**\n\n\u6211\u4eec\u6ce8\u610f\u5230\uff0cBFS\u6269\u5c55\uff08\u8f6c\u79fb\uff09\u90e8\u5206\u5e38\u6570\u8f83\u5927\n\n```\nint dx[4]={0,1,-1,0};\nint dy[4]={-1,0,0,1};\n```\n\n\u8fd9\u6837\u5b9a\u4e49\u7684`dx,dy`\u6709\u4e2a\u6027\u8d28\uff0c\u5373\uff0cdx\u548cdy\u4e2d\u5206\u522b\u53d6\u4e0b\u6807\u76f8\u52a0\u7b49\u4e8e3\u7684\u4e24\u4e2a\u5143\u7d20\uff0c\u76f8\u52a0\u5fc5\u7b49\u4e8e0\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7ed9`Status`\u7ed3\u6784\u6dfb\u52a0\u4e00\u4e2a\u5c5e\u6027`tp`\uff0c\u5373\uff0c\u4e0a\u6b21\u4f7f\u7528\u7684`dx\u548cdy`\u4e2d\u7684\u54ea\u4e2a\u5143\u7d20\u3002\n\n\u4e0b\u4e00\u6b21\u6269\u5c55\u65f6\uff0c\u82e5\u679a\u4e3e\u7684`i`\u4e0e\u4e0a\u6b21\u7684`tp`\u76f8\u52a0\u5f973\uff0c\u8bf4\u660e\u8fd9\u6837\u6269\u5c55\u5fc5\u5c06\u9000\u56de\u5230\u4e0a\u4e00\u4e2a\u72b6\u6001\u3002\u663e\u7136\u8fd9\u4e2a\u72b6\u6001\u662f\u6ca1\u7528\u7684\uff08\u5224\u91cd\u65f6\u4f1a`continue`\u6389\uff09\n\n\u5bf9\u4e8e\u521d\u59cb\u5316\uff0c\u53ea\u9700\u521d\u59cb\u5316`tp=-1`\u5373\u53ef\uff08\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55`i`\u4f1a\u4e0e`-1`\u76f8\u52a0\u4e3a3\uff09\n\n\u6700\u540e\u7684\u4ee3\u7801\u957f\u8fd9\u6837\n\n```cpp\n// status: [status_undefined]\n// oj:     [luogu]\n%:pragma GCC optimize(\"inline,Ofast\",3)\n#include<stdio.h>\n#include<ctype.h>\n#define int short // short\u5361\u5e38\n\nint n,m,q;\nint a[31][31];\n\nstruct Status{\n    int ex,ey,sx,sy;\n    signed step; // \u6b65\u9aa4\u6570\u7b49\u5730\u65b9\u4e0d\u53ef\u4ee5\u4f7f\u7528short\uff0c\u53ef\u80fd\u4f1a\u7206\n    int tp;\n    inline signed toInt() { \n        return (ex<<15)|(ey<<10)|(sx<<5)|sy;\n    }\n}que[810010];\nint tx,ty;\nStatus *h,*t; //\u7528\u6307\u9488\nint vis[1048576];\nint vis_t=0;\n\nint dx[4]={0,1,-1,0};\nint dy[4]={-1,0,0,1};\n\ninline signed bfs() {\n    ++vis_t;\n    while(h!=t) {\n        ++h;\n        if(h->sx==tx && h->sy==ty) {\n            return h->step;\n        }\n        for(register int i=0;i<4;i++) {\n            if(i+h->tp==3) continue; //\u76f8\u52a0\u7b49\u4e8e3\u7684\u4f18\u5316\n            register int ex2=h->ex+dx[i];\n            register int ey2=h->ey+dy[i];\n            if(ex2<1 || ex2>n || ey2<1 || ey2>m) continue;\n            if(!a[ex2][ey2]) continue;\n            ++t;\n            t->ex=ex2;\n            t->ey=ey2;\n            t->sx=h->sx;\n            t->sy=h->sy;\n            if(ex2==h->sx && ey2==h->sy) {\n                t->sx=h->ex;\n                t->sy=h->ey;\n            }\n            register signed _t=t->toInt();\n            if(vis[_t]==vis_t) {--t;continue;}\n            t->step=h->step+1;\n            t->tp=i;\n            vis[_t]=vis_t;\n            if(t->sx==tx && t->sy==ty) {\n                return t->step;\n            }\n        }\n    }\n    return -1;\n}\n\ninline void read(int &ret) {\n    ret=0;\n    register char c=getchar();\n    while(!isdigit(c)) c=getchar();\n    while(isdigit(c)) {ret=ret*10+(c-'0');c=getchar();}\n}\n\nvoid __write(signed x) {\n    if(!x) return;\n    __write(x/10);\n    putchar('0'+x%10);\n}\n\ninline void write(const signed &x,char e='\\0') {\n    if(x>0) __write(x);\n    else if(x==0) putchar('0');\n    else {putchar('-');__write(-x);}\n    if(e) putchar(e);\n}\n\nsigned main() {\n    read(n);read(m);read(q);\n    \n    for(int i=1;i<=n;i++) {\n        register int *tt = a[i];\n        for(int j=1;j<=m;j++) {\n            ++tt;\n            read(*tt);\n        }\n    }\n    \n    t=que+1;\n    t->tp = -1;\n    t->step = 0; // \u65e0\u9700\u6bcf\u6b21\u521d\u59cb\u5316\u7684\u4e1c\u897f\u653e\u5230\u5faa\u73af\u5916\n    for(register int i=1;i<=q;i++) {\n        h=que;\n        t=que+1;\n        read(t->ex);read(t->ey);read(t->sx);read(t->sy);\n        read(tx);read(ty);\n        write(bfs(),'\\n');\n    }\n}\n\n```\n",
        "postTime": 1567338434,
        "uid": 49067,
        "name": "\u53f6ID",
        "ccfLevel": 7,
        "title": "\u3010\u6d1b\u8c37\u9898\u89e3\u3011P1979 \u534e\u5bb9\u9053"
    },
    {
        "content": "### \u6d1b\u8c37P1979 \u534e\u5bb9\u9053 \u9898\u89e3\n\n#####  \u8ddd\u79bbNOIP2018\u8fd8\u67097\u5929qwq\u5199\u7bc7\u9898\u89e3\u79ef\u6512\u4e0b\u4eba\u54c1\n##### \uff08\u7b2c\u4e00\u6b21\u5199\u7d2b\u9898\u9898\u89e3\u8fd8\u6709\u4e9b\u5c0f\u6fc0\u52a8\uff09\n\n**\u4e00\u4e9b\u8bf4\u660e**\n\n1\u3001\u672c\u9898\u89e3\u4e0e\u4ee3\u7801\u4e2d\u76840/1/2/3\u5206\u522b\u4ee3\u8868\u4e0a/\u4e0b/\u5de6/\u53f3\n\n2\u3001\u4e3a\u4e86\u6e05\u6670\u8868\u8ff0\uff0c\u9898\u89e3\u4e2d\u8bb0\u76ee\u6807\u68cb\u5b50\uff08\u9898\u76ee\u4e2d\u7684 $SX,SY$ \uff09\u4e3a $B$ \uff0c\u76ee\u6807\u683c\u5b50\uff08\u9898\u76ee\u4e2d\u7684 $TX,TY$ \u4e3a \uff09$C$\uff0c\u7a7a\u767d\u683c\u4e3a$E$\n\n\n\u3010\u601d\u8def\u5206\u6790\u3011\n\u5982\u51e0\u4f4ddalao\u6240\u8bf4\uff0c\u8fd9\u9053\u9898\u7684\u5efa\u56fe\u5c31\u662f\u628a\u53ef\u884c\u7684\u72b6\u6001\u8fde\u8fb9\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u6211\u7528 $ ok[i][j][0/1/2/3] $\u8868\u793a $B$\u4f4d\u4e8e\u70b9$(i,j)$\u65f6\uff0c\u56db\u4e2a\u65b9\u5411\u662f\u5426\u53ef\u80fd\u6709\u7a7a\u767d\u683c\uff08\u5148\u4e0d\u8003\u8651\u6bcf\u7ec4\u8be2\u95ee\u4e2d\u7a7a\u767d\u683c\u662f\u5426\u53ef\u4ee5\u5230\u8fbe\uff0c\u53ea\u8003\u8651\u8be5\u683c\u5b50\u662f\u5426\u4e3a\u56fa\u5b9a\u683c\uff0c\u6216\u8d8a\u754c\u3002\uff09\n\n\u6b64\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n//\u5224\u65ad\u54ea\u4e9b\u72b6\u6001\u662f\u5408\u6cd5\u7684 \n\tfor(int i=1;i<=n;i++)//\u7a7a\u767d\u683c\u5728\u68cb\u5b50\u4e0a\u4e0b\u5de6\u53f3 \n\tfor(int j=1;j<=m;j++){\n\t\tif(!mapp[i][j])continue;//\u4e0d\u53ef\u80fd\u6709\u6b64\u72b6\u6001 \n\t\tfor(int k=0;k<4;k++)//\u56db\u4e2a\u65b9\u5411 \n\t\tif(judge(i+xx[k],j+yy[k]))ok[i][j][k]=1;\n\t\t}\n```\njudge\u51fd\u6570\u7528\u6765\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u767d\u683c\u6216\u8d8a\u754c\uff1a\n```\nbool judge(int ax,int ay){\n\tif(ax<=0||ax>n||ay<=0||ay>m)return 0;//\u8fb9\u754c \n\treturn mapp[ax][ay];\n}\n```\n\u4e3a\u4e86\u5efa\u56fe\u65b9\u4fbf\uff0c\u6211\u5c06\u72b6\u6001\u5b58\u5230\u4e00\u7ef4\u6570\u7ec4\u91cc\uff1a\n\u683c\u5b50\u7684\u7f16\u53f7\uff1a\u4ece\u4e0a\u5230\u4e0b\u4ece\u5de6\u5230\u53f3\u7f16\n\n$e.g.$\n- 1 2 3 4\n- 5 6 7 8\n- \u2026\u2026\n\n\u72b6\u6001\u7684\u7f16\u53f7\uff1a$e.g.$ \n\n1\u53f7\u683c\u5b50\u7684\u56db\u4e2a\u72b6\u6001\u7f16\u53f7\u4e3a0123 \n\n\u4e8e\u662f\u5f97\u5230\u5982\u4e0b\u7f16\u53f7\u51fd\u6570\uff1a\n```\nint getnum(int ax,int ay,int t){\n\treturn ((ax-1)*m+ay)*4-(4-t);\n}//t=0/1/2/3\n```\n\u7531\u4e8e$q$\u7ec4\u8be2\u95ee\u7684\u5730\u56fe\u60c5\u51b5\u662f\u76f8\u540c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5efa\u56fe\u3002\n\n\u4ec0\u4e48\u6837\u7684\u4e24\u4e2a\u72b6\u6001\u53ef\u4ee5\u8fde\u8fb9\u5462\uff1f\n\n\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff1a\n\n**\u00b7\u7a7a\u767d\u683c\u5b50\u7ed5\u7740$B$\u4e0a\u4e0b\u5de6\u53f3\u4e71\u8f6c**\n\n\u53ef\u4ee5\u7528bfs\u6c42\u51fa\u4e71\u8f6c\u6700\u5c11\u591a\u5c11\u6b21\u53ef\u4ee5\u4ece\u4e0a\u8f6c\u5230\u4e0b\uff0c\u4ece\u5de6\u8f6c\u5230\u53f3...\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e71\u8f6c\u65f6$B$\u662f\u4e0d\u80fd\u52a8\u7684\uff01\uff01\uff01\uff08\u8fd9\u4e2a\u5730\u65b9\u5361\u4e86\u597d\u4e45QAQ\uff09\n\n**\u00b7\u7a7a\u767d\u683c\u5b50\u548c$B$\u4ea4\u6362\u4f4d\u7f6e**\n\n\u5fc5\u987b\u4fdd\u8bc1\u4e24\u4e2a\u72b6\u6001\u90fd\u5b58\u5728\u3002\n\n\u8fde\u4e0a\u8ddd\u79bb\u4e3a1\u7684\u8fb9\u5373\u53ef\u3002\n```\nint bfs(int dx,int dy,int sx,int sy,int tx,int ty){//\u7a7a\u767d\u683c\u5b50\u4e71\u8f6c\u7684\u6700\u5c0f\u6b21\u6570 \n\t//(sx,sy)\u51fa\u53d1\u5230(tx,ty)\uff0c\u4e0d\u80fd\u7ecf\u8fc7(dx,dy)\n\tqueue<white>q;\n\tmemset(vis,0,sizeof vis);\n\twhite st;st.x=sx;st.y=sy;\n\tst.step=0;vis[sx][sy]=1;\n\tq.push(st);\n\twhile(!q.empty()){\n\t\twhite noww=q.front();\n\t\tq.pop();\n\t\tif(noww.x==tx&&noww.y==ty)//\u5230\u8fbe\u76ee\u6807\u683c\u5b50 \n\t\treturn noww.step;\n\t\tfor(int i=0;i<4;i++){//\u56db\u4e2a\u65b9\u5411\u4e71\u8f6c \n\t\t\tif(judge(noww.x+xx[i],noww.y+yy[i])){//\u5982\u679c\u5408\u6cd5 \n\t\t\t\tif(vis[noww.x+xx[i]][noww.y+yy[i]])continue;//\u6b63\u5728\u8bbf\u95ee \n\t\t\t\tif(noww.x+xx[i]==dx&&noww.y+yy[i]==dy)continue;//\u4e0d\u80fd\u78b0\u5230\u76ee\u6807\u68cb\u5b50 \n\t\t\t\twhite nxt;\n\t\t\t\tnxt.x=noww.x+xx[i];\n\t\t\t\tnxt.y=noww.y+yy[i];\n\t\t\t\tnxt.step=noww.step+1;\n\t\t\t\tq.push(nxt);vis[noww.x+xx[i]][noww.y+yy[i]]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn inf;//\u5230\u4e0d\u4e86 \n}\n```\n#### \u68cb\u5b50\u4e0d\u52a8\uff0c\u7a7a\u767d\u683c\u4e71\u8f6c\u7684\u60c5\u51b5 \uff1a\n\n```\n    for(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n    for(int k=0;k<4;k++)\n\tfor(int l=k+1;l<4;l++){\n\t\tif(ok[i][j][k]&&ok[i][j][l]){//\u5fc5\u987b\u90fd\u8981\u5408\u6cd5 \n\t\t\tint aa=getnum(i,j,k);\n\t\t\tint bb=getnum(i,j,l);\n\t\t\tint cc=bfs(i,j,i+xx[k],j+yy[k],i+xx[l],j+yy[l]);\n\t\t\tif(cc==inf)continue;\n\t\t\tadd(aa,bb,cc);add(bb,aa,cc);\n\t\t}\n\t}\n```\nqwq\n```\n\tfor(int i=1;i<=n;i++)//\u7a7a\u767d\u4e0e\u76ee\u6807\u68cb\u5b50\u5de6\u53f3\u4e92\u6362 \n\tfor(int j=1;j<m;j++){\n\t\tif(ok[i][j][3]&&ok[i][j+1][2]){ //\u6ce8\u610f\u8c01\u5de6\u8c01\u53f3\n\t\t\tint aa=getnum(i,j,3);//\u522b\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684orz\n\t\t\tint bb=getnum(i,j+1,2);\n\t\t\tadd(aa,bb,1);add(bb,aa,1);\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++)//\u4e0a\u4e0b\u4e92\u6362 \n\tfor(int j=1;j<=m;j++){\n\t\tif(ok[i][j][1]&&ok[i+1][j][0]){\n\t\t\tint aa=getnum(i,j,1);\n\t\t\tint bb=getnum(i+1,j,0);\n\t\t\tadd(aa,bb,1);add(bb,aa,1);\n\t\t}\n\t}\n```\n\n\u8fd9\u6837\u6211\u4eec\u7684\u521d\u59cb\u5316\u5c31\u5b8c\u6210\u5566\uff01\n\uff08\u52a0\u8fb9\u7684\u64cd\u4f5c\u5c31\u548c\u666e\u901a\u56fe\u8bba\u4e00\u6837\u4e86w\uff09\n\n\n#### \u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u8be2\u95ee\uff0c\u5148\u7279\u5224\u4e00\u4e0b\uff1a\n\n```\nwhile(q--){\n\t\tscanf(\"%d%d%d%d%d%d\",&ex,&ey,&bx,&by,&cx,&cy);\n\t\tif(bx==cx&&by==cy){\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(!mapp[cx][cy]){\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(!mapp[bx][by]){\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\twork();\n\t}\n```\n\n#### \u7136\u540e\u8003\u8651\uff0c\u600e\u6837\u628a\u4e00\u5f00\u59cb\u7684\u72b6\u6001\u8f6c\u79fb\u5230\u56fe\u4e0a\u5462\uff1f\n\n\u56e0\u4e3a\u56fe\u4e0a\u53ea\u5b58\u5728\u7a7a\u767d\u683c\u4e0e$B$ \u76f8\u90bb\u7684\u72b6\u51b5\uff0cso\u66b4\u529b\u5c1d\u8bd5\u8ba9\u7a7a\u767d\u683c\u8dd1\u5230$B$\u7684\u56db\u4e2a\u65b9\u5411\u5c31\u597d\u5566\n```\n    for(int i=0;i<4;i++){//\u7a7a\u767d\u8d70\u5230\u76ee\u6807\u68cb\u5b50\u65c1\u8fb9 \n\t\tif(judge(bx+xx[i],by+yy[i])){//\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u8d70 \n\t\t\tint nw=bfs(bx,by,ex,ey,bx+xx[i],by+yy[i]);\n\t\t\tif(nw==inf)continue;//\u8d70\u4e0d\u5230 \n\t\t\tint nq=getnum(bx,by,i);\n\t\t\td[nq]=nw;\n\t\t\tQ.push(nq);\n\t\t\tviss[nq]=1;\n\t\t}\n\t}\n```\n#### \u7136\u540e\uff0c\u6109\u5feb\u5730\u8dd1SPFA\n\n```\n    while(!Q.empty()){\n\t\tint noww=Q.front();Q.pop();viss[noww]=0;\n\t\tfor(int j=head[noww];j;j=b[j].nxt){\n\t\t\tint vv=b[j].to;\n\t\t\tif(d[vv]>d[noww]+b[j].dis){\n\t\t\t\td[vv]=d[noww]+b[j].dis;\n\t\t\t\tif(!viss[vv])Q.push(vv),viss[vv]=1;\n\t\t\t}\n\t\t}\n\t}\n```\n#### \u6700\u540e\uff0c\u6109\u5feb\u5730\u68c0\u67e5\u662f\u5426\u80fd\u5230$C$\n```\n    int ans=inf;\n\tfor(int i=0;i<4;i++){\n\t\tint qaq=getnum(cx,cy,i);\n\t\tans=min(ans,d[qaq]);\n\t}\n\tif(ans==inf)puts(\"-1\");\n\telse printf(\"%d\\n\",ans);\n```\n\n## \u8d34\u65e0\u6ce8\u91ca\u4ee3\u7801QWQ\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=35;\nconst int inf=99999999;\nint n,m,q,ex,ey,bx,by,cx,cy;\nbool mapp[MAXN][MAXN];\nint xx[4]={-1,1,0,0};\nint yy[4]={0,0,-1,1};\nint getnum(int ax,int ay,int t){\n\treturn ((ax-1)*m+ay)*4-(4-t);\n} \nstruct white{\n\tint x,y;\n\tint step;\n};\nbool judge(int ax,int ay){\n\tif(ax<=0||ax>n||ay<=0||ay>m)return 0;\n\treturn mapp[ax][ay];\n}\nbool vis[MAXN][MAXN];\nint bfs(int dx,int dy,int sx,int sy,int tx,int ty){\n\tqueue<white>q;\n\tmemset(vis,0,sizeof vis);\n\twhite st;st.x=sx;st.y=sy;\n\tst.step=0;vis[sx][sy]=1;\n\tq.push(st);\n\twhile(!q.empty()){\n\t\twhite noww=q.front();\n\t\tq.pop();\n\t\tif(noww.x==tx&&noww.y==ty)\n\t\treturn noww.step;\n\t\tfor(int i=0;i<4;i++){\n\t\t\tif(judge(noww.x+xx[i],noww.y+yy[i])){\n\t\t\t\tif(vis[noww.x+xx[i]][noww.y+yy[i]])continue;\n\t\t\t\tif(noww.x+xx[i]==dx&&noww.y+yy[i]==dy)continue; \n\t\t\t\twhite nxt;\n\t\t\t\tnxt.x=noww.x+xx[i];\n\t\t\t\tnxt.y=noww.y+yy[i];\n\t\t\t\tnxt.step=noww.step+1;\n\t\t\t\tq.push(nxt);vis[noww.x+xx[i]][noww.y+yy[i]]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn inf;\n}\nstruct edge{\n\tint to,nxt,dis;\n}b[5005];\nint head[5005],tot;\nvoid add(int u,int v,int w){\n\tb[++tot].to=v;b[tot].nxt=head[u];\n\tb[tot].dis=w;head[u]=tot;\n}\nbool ok[MAXN][MAXN][5];\nvoid init(){\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++){\n\t\tif(!mapp[i][j])continue;\n\t\tfor(int k=0;k<4;k++)\n\t\tif(judge(i+xx[k],j+yy[k]))ok[i][j][k]=1;\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n    for(int k=0;k<4;k++)\n\tfor(int l=k+1;l<4;l++){\n\t\tif(ok[i][j][k]&&ok[i][j][l]){\n\t\t\tint aa=getnum(i,j,k);\n\t\t\tint bb=getnum(i,j,l);\n\t\t\tint cc=bfs(i,j,i+xx[k],j+yy[k],i+xx[l],j+yy[l]);\n\t\t\tif(cc==inf)continue;\n\t\t\tadd(aa,bb,cc);add(bb,aa,cc);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<m;j++){\n\t\tif(ok[i][j][3]&&ok[i][j+1][2]){ \n\t\t\tint aa=getnum(i,j,3);\n\t\t\tint bb=getnum(i,j+1,2);\n\t\t\tadd(aa,bb,1);add(bb,aa,1);\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++)\n\tfor(int j=1;j<=m;j++){\n\t\tif(ok[i][j][1]&&ok[i+1][j][0]){\n\t\t\tint aa=getnum(i,j,1);\n\t\t\tint bb=getnum(i+1,j,0);\n\t\t\tadd(aa,bb,1);add(bb,aa,1);\n\t\t}\n\t}\n}\nqueue<int>Q;\nbool viss[5005];\nint d[5005];\nvoid work(){\n\tmemset(d,128/3,sizeof d);\n\tmemset(viss,0,sizeof viss);\n\tfor(int i=0;i<4;i++){\n\t\tif(judge(bx+xx[i],by+yy[i])){\n\t\t\tint nw=bfs(bx,by,ex,ey,bx+xx[i],by+yy[i]);\n\t\t\tif(nw==inf)continue; \n\t\t\tint nq=getnum(bx,by,i);\n\t\t\td[nq]=nw;\n\t\t\tQ.push(nq);\n\t\t\tviss[nq]=1;\n\t\t}\n\t}\n\twhile(!Q.empty()){\n\t\tint noww=Q.front();Q.pop();viss[noww]=0;\n\t\tfor(int j=head[noww];j;j=b[j].nxt){\n\t\t\tint vv=b[j].to;\n\t\t\tif(d[vv]>d[noww]+b[j].dis){\n\t\t\t\td[vv]=d[noww]+b[j].dis;\n\t\t\t\tif(!viss[vv])Q.push(vv),viss[vv]=1;\n\t\t\t}\n\t\t}\n\t}\n\tint ans=inf;\n\tfor(int i=0;i<4;i++){\n\t\tint qaq=getnum(cx,cy,i);\n\t\tans=min(ans,d[qaq]);\n\t}\n\tif(ans==inf)puts(\"-1\");\n\telse printf(\"%d\\n\",ans);\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)cin>>mapp[i][j];\n\tinit();\n\twhile(q--){\n\t\tscanf(\"%d%d%d%d%d%d\",&ex,&ey,&bx,&by,&cx,&cy);\n\t\tif(bx==cx&&by==cy){\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(!mapp[cx][cy]){\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(!mapp[bx][by]){\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\twork();\n\t}\n\treturn 0;\n}\n\n```\n# \u5b8c\u7ed3\u6492\u82b1\uff01\uff01\uff01\n\n##  _by   Erutsiom _ \n",
        "postTime": 1541126195,
        "uid": 64539,
        "name": "Erutsiom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "\u7384\u5b66\u7684\u641c\u7d22\u4e0e\u5efa\u56fe...\n\n\u9996\u5148\u7ecf\u8fc7\u5206\u6790\uff0c\u53ef\u4ee5\u5f97\u51fa\u51e0\u4e2a\u7ed3\u8bba\uff1a\n\n\u2460.\u79fb\u52a8\u68cb\u5b50\u7b49\u4ef7\u4e8e\u79fb\u52a8\u7a7a\u683c\n\n\u539f\u56e0\uff1a\u5982\u679c\u4e00\u4e2a\u68cb\u5b50\u53ef\u4ee5\u79fb\u52a8\uff0c\u90a3\u4e48\u8fd9\u4e2a\u68cb\u5b50\u4e00\u5b9a\u662f\u548c\u65c1\u8fb9\u7684\u7a7a\u683c\u4ea4\u6362\u4e86\u4f4d\u7f6e\uff0c\u6240\u4ee5\u4e5f\u5c31\u76f8\u5f53\u4e8e\u662f\u79fb\u52a8\u7a7a\u683c\n\n\u2461.\u6709\u4ef7\u503c\u7684\u56fe\u7684\u72b6\u6001\u662f\u6709\u9650\u7684\n\n\u539f\u56e0\uff1a\u6211\u4eec\u7684\u76ee\u6807\u662f\u628a\u8d77\u59cb\u68cb\u5b50\u79fb\u5230\u7ed3\u675f\u4f4d\u7f6e\u4e0a\uff0c\u90a3\u4e48\u5982\u679c\u80fd\u591f\u79fb\u52a8\u8d77\u59cb\u68cb\u5b50\uff0c\u4e00\u5b9a\u662f\u628a\u7a7a\u683c\u79fb\u5230\u4e86\u8d77\u59cb\u4f4d\u7f6e\u65c1\u8fb9\uff0c\u90a3\u4e48\u6839\u636e\u7ed3\u8bba\u2460\uff0c\u6211\u4eec\u53ea\u9700\u628a\u8fd9\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230\u7a7a\u683c\u5b50\u5728\u76ee\u6807\u4f4d\u7f6e\u9644\u8fd1\u5c31\u5b8c\u6210\u4efb\u52a1\u4e86\uff01\n\n\u90a3\u4e48\u6839\u636e\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u72b6\u6001num[i][j][k]\uff0c\u8868\u793a\u7a7a\u683c\u5728\u70b9(i,j)\u7684\u54ea\u4e00\u65b9\u5411\uff08\u7b2c\u4e09\u7ef4\u7528\u56db\u4e2a\u6570\u5b57\u4ee3\u8868\u4e0a\u4e0b\u5de6\u53f3\uff09\n\n\u8fd9\u4e2a\u72b6\u6001\u6570\u662f\u5f88\u5c11\u7684\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ea\u9700\u8003\u8651\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bd4\u5982\u6211\u4eec\u60f3\u4ece\u67d0\u4e00\u72b6\u6001num[i][j][k]\u8f6c\u79fb\u5230\u53e6\u4e00\u72b6\u6001num[i][j]k`]\uff08\u6ce8\u610fi,j\u4e0d\u53d8\uff09\uff0c\u90a3\u4e48\u9996\u5148\uff0c\u70b9i,j\u4e0d\u80fd\u52a8\uff0c\u8fd9\u6837\u8fdb\u884c\u4e00\u4e2abfs\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u4ee3\u4ef7\uff0c\u7136\u540e\u628a\u8fd9\u4e24\u4e2a\u72b6\u6001\u8fde\u8fb9\n\n\u5f53\u7136\uff0c\u4e5f\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u76f4\u63a5\u4ea4\u6362\u7a7a\u683c\u548ci,j\uff0c\u4f46\u8fd9\u6837\u5c31\u662f\u7531\u72b6\u6001num[i][j][k]\u53d8\u6210\u4e86\u72b6\u6001num[i'][j'][k']\uff0c\u5176\u4e2di' j'\u662f\u8fd9\u4e2a\u70b9\u5468\u56f4\u7684\u4e09\u4e2a\u70b9\uff08\u663e\u7136\u8981\u9664\u6389\u7a7a\u683c\uff09\uff0c\u800ck'\u662f\u8fd9\u4e2a\u70b9i,j\u76f8\u5bf9\u4e8e\u539f\u4e09\u4e2a\u70b9\u7684\u4f4d\u7f6e\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\uff0c\u8fd9\u6837\u7684\u4ee3\u4ef7\u662f1\uff0c\u540c\u6837\u8fde\u8fb9\u5373\u53ef\n\n\u6700\u540e\u5bf9\u6240\u6709\u72b6\u6001\u8dd1\u4e00\u904d\u6700\u77ed\u8defspfa\uff0c\u8981\u6c42\u521d\u59cb\u72b6\u6001\u662f\u7a7a\u683c\u5728\u8d77\u70b9\u56db\u5468\uff0c\u901a\u8fc7bfs\u6c42\u51fa\u521d\u503c\uff0c\u7ec8\u6b62\u72b6\u6001\u662f\u7a7a\u683c\u5728\u7ec8\u70b9\u56db\u5468\uff0c\u901a\u8fc7\u6700\u77ed\u8def\u7531\u521d\u72b6\u6001\u66f4\u65b0\u5373\u53ef\n\n\u6ce8\u610f\u5982\u679c\u6700\u77ed\u8def\u59cb\u7ec8\u4e3a\u6b63\u65e0\u7a77\u5373\u4e3a\u65e0\u89e3\n\n\u4e0a\u4ee3\u7801\uff08\u81ea\u8ba4\u4e3a\u5168\u7ad9\u6700\u597d\u770b\uff0c0\u538b\u884c\uff09\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <stack>\nusing namespace std;\nstruct Edge\n{\n    int next;\n    int to;\n    int val;\n}edge[300005];\nint head[3005];\nint cnt=1;\nstruct node\n{\n    int x,y,d;\n};\nvoid init()\n{\n    memset(head,-1,sizeof(head));\n    cnt=1;\n}\nvoid add(int l,int r,int w)\n{\n    edge[cnt].next=head[l];\n    edge[cnt].to=r;\n    edge[cnt].val=w;\n    head[l]=cnt++;\n}\nint n,m,q;\nint maps[35][35];\nint dir[4][2]={{1,0},{-1,0},{0,1},{0,-1}};\nint num[35][35][4];\nbool flag[35][35];\nint dis[50005];\nint sx,sy,ex,ey,bx,by;\nint bfs(int stx,int sty,int edx,int edy,int rtx,int rty)\n{\n    if(stx==edx&&sty==edy)\n    {\n        return 0;\n    }\n    memset(flag,0,sizeof(flag));\n    queue <node> M;\n    node u0;\n    u0.x=stx;\n    u0.y=sty;\n    u0.d=0;\n    M.push(u0);\n    while(!M.empty())\n    {\n        node u=M.front();\n        M.pop();\n        int x=u.x;\n        int y=u.y;\n        int d=u.d;\n        for(int i=0;i<=3;i++)\n        {\n            int xx=x+dir[i][0];\n            int yy=y+dir[i][1];\n            if(!maps[xx][yy])\n            {\n                continue;\n            }\n            if(xx==rtx&&yy==rty)\n            {\n                continue;\n            }\n            if(flag[xx][yy])\n            {\n                continue;\n            }\n            if(xx==edx&&yy==edy)\n            {\n                return d+1;\n            }\n            flag[xx][yy]=1;\n            node tt;\n            tt.x=xx;\n            tt.y=yy;\n            tt.d=d+1;\n            M.push(tt);\n        }\n    }\n    return 0x3f3f3f3f;\n}\nint spfa()\n{\n    if(sx==ex&&sy==ey)\n    {\n        return 0;\n    }\n    memset(dis,0x3f,sizeof(dis));\n    queue <int> M;\n    for(int i=0;i<=3;i++)\n    {\n        int x=sx+dir[i][0];\n        int y=sy+dir[i][1];\n        if(num[sx][sy][i])\n        {\n            dis[num[sx][sy][i]]=bfs(bx,by,x,y,sx,sy);\n            M.push(num[sx][sy][i]);\n        }\n    }\n    while(!M.empty())\n    {\n        int u=M.front();\n        M.pop();\n        for(int i=head[u];i!=-1;i=edge[i].next)\n        {\n            int to=edge[i].to;\n            if(dis[to]>dis[u]+edge[i].val)\n            {\n                dis[to]=dis[u]+edge[i].val;\n                M.push(to);\n            }\n        }\n    }\n    int ans=0x3f3f3f3f;\n    for(int i=0;i<=3;i++)\n    {\n        if(num[ex][ey][i])\n        {\n            ans=min(ans,dis[num[ex][ey][i]]);\n        }\n    }\n    if(ans==0x3f3f3f3f)\n    {\n        return -1;\n    }else\n    {\n        return ans;\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&q);\n    init();\n    int tot=0;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&maps[i][j]);\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            for(int k=0;k<=3;k++)\n            {\n                int x=i+dir[k][0];\n                int y=j+dir[k][1];\n                if(maps[i][j]&&maps[x][y])\n                {\n                    num[i][j][k]=++tot;\n                }\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            for(int k=0;k<=3;k++)\n            {\n                if(num[i][j][k])\n                {\n                    int x=i+dir[k][0];\n                    int y=j+dir[k][1];\n                    add(num[i][j][k],num[x][y][k^1],1);//\u4ea4\u6362\u7a7a\u70b9\u548c\u65c1\u8fb9\u7684\u70b9 \n                }\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            for(int k=0;k<=3;k++)\n            {\n                for(int t=0;t<=3;t++)\n                {\n                    if(k!=t&&num[i][j][k]&&num[i][j][t])\n                    {\n                        int x1=i+dir[k][0];\n                        int y1=j+dir[k][1];\n                        int x2=i+dir[t][0];\n                        int y2=j+dir[t][1];\n                        add(num[i][j][k],num[i][j][t],bfs(x1,y1,x2,y2,i,j));\n                    }\n                }\n            }\n        }\n    }\n    while(q--)\n    {\n        scanf(\"%d%d%d%d%d%d\",&bx,&by,&sx,&sy,&ex,&ey);\n        printf(\"%d\\n\",spfa());\n    }\n    return 0;\n}\n```",
        "postTime": 1534581338,
        "uid": 66905,
        "name": "leozhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "**\u5176\u5b9e\u7528\u4e2a~~\u8bb0\u5fc6\u5316\u66b4\u641c~~\u5c31OK\u5566\u3002**\n\n\u4e3b\u8981\u601d\u8def\u5c31\u662f**\u6bcf\u8d70\u4e00\u683c\u4e4b\u524d\u641c\u7d22\u767d\u70b9\u5230\u5468\u56f4\u7684\u6700\u77ed\u8ddd\u79bb**\u5c31OK\u3002\n\n\u6bd4\u5982\u8981\u5411\u4e0a\u8d70\uff0c\u5c31~~dfs~~\u4e00\u4e0b\u767d\u70b9\u5230\u5411\u4e0a\u8d70\u7684\u90a3\u4e2a\u70b9\u7684**\u6700\u77ed\u8ddd\u79bb**\uff0c\u7136\u540e\u518d\u6267\u884c\u5411\u4e0a\u8d70\u7684\n\n\u64cd\u4f5c\uff0c\u767d\u70b9\u4e5f\u81ea\u7136\u800c\u7136\u7684\u53d8\u6210\u4e86\u8fd9\u4e2a\u70b9\u539f\u6765\u7684\u4f4d\u7f6e\u3002\n\n\u56e0\u4e3a\u5728\u6c42\u89e3\u767d\u70b9\u5230\u5468\u56f4\u7684\u8ddd\u79bb\u7684\u65f6\u5019\uff0c\u5f53\u524d\u70b9\u5e94\u8be5\u662f\u88ab\u770b\u505a\u4e0d\u53ef\u52a8\u70b9\uff0c\u6240\u4ee5\u5c31**\u9700\u89816\u7ef4\u6765\u8bb0\u5fc6\u5316\u641c\u7d22**\uff0c\u4f46\u662f\u5f88\u660e\u663e\u5f00\u6570\u7ec4\u5b58\u65e0\u8bba\u5982\u4f55\u90fd\u8981\u7206\u70b8\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u60f3\u5230**STL\u7684map**\u4e86\uff01\uff01\uff01\n\n\u6240\u4ee5\u6211\u5c31\u51b3\u5b9a\u7528map\u5957map\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u5982\u679c\u76f4\u63a5\u7eafmap\u5957map\u7684\u8bdd\u4f1aTLE\uff08~~\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684~~\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528**\u4e00\u90e8\u5206\u5f00\u6570\u7ec4\uff0c\u4e00\u90e8\u5206\u5f00map**\uff0c\u7136\u540e\u6109\u5feb\u7684A\u9898= =\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<map>\n\nusing namespace std;\n\nbool maps[40][40];\n\nstruct Point {\n    int x,y;\n    Point(int x,int y) {\n        this->x = x;\n        this->y = y;\n    }\n    Point(){\n        \n    }\n    \n    bool operator==(Point other) const {\n        return x==other.x&&y==other.y;\n    }\n};\n\nPoint w,start,target;\n\nint dir[4][2] = {{1,0},{-1,0},{0,1},{0,-1}};\n\n//\u5c31\u662f\u4f60\u5566\uff01\uff01\uff01\nmap< int,map< int,map< int,int> > > pre[31][31][31];\n\nint n,m;\n\nbool visited[40][40];\n\nbool visited2[40][40];\n\nbool check(int x,int y) {\n    if (x>=1&&y>=1&&x<=n&&y<=m&&maps[x][y]&&!visited[x][y])\n        return true;\n    return false;\n}\n\nbool check2(int x,int y) {\n    if (x>=1&&y>=1&&x<=n&&y<=m&&maps[x][y]&&!visited2[x][y])\n        return true;\n    return false;\n}\n\nint tans = 0x7f7f7f7f;\n\nvoid dfs(Point p,Point t,int step) {\n    visited[p.x][p.y] = true;\n    if (step>=tans){\n        visited[p.x][p.y] = false;\n        return;\n    } \n    if (p==t){\n        tans = step;\n        visited[p.x][p.y] = false;\n        return;\n    }\n    for (int i = 0;i<4;i++) {\n        int dx = dir[i][0] + p.x;\n        int dy = dir[i][1] + p.y;\n        if (check(dx,dy))\n            dfs(Point(dx,dy),t,step+1);\n    }\n    visited[p.x][p.y] = false;\n}\n\nint dfs1(Point p,Point t,Point miss) {\n//\u8bb0\u5fc6\u5316\u641c\u7d22\u90e8\u5206\n    if (pre[p.x][p.y][t.x][t.y][miss.x][miss.y])\n        return pre[p.x][p.y][t.x][t.y][miss.x][miss.y];\n    tans = 0x7f7f7f7f;\n    maps[miss.x][miss.y] = 0;\n    dfs(p,t,0);\n    maps[miss.x][miss.y] = 1;\n    pre[p.x][p.y][t.x][t.y][miss.x][miss.y] = tans;\n    return tans;\n} \n\nint ans = 0x7f7f7f7f;\n\nvoid dfs2(Point w,Point p,Point t,int step) {\n    visited2[p.x][p.y] = true;\n    if (step>=ans){\n        visited2[p.x][p.y] = false;\n        return;\n    } \n    if (p == t){ \n        ans = step;\n        visited2[p.x][p.y] = false;\n        return;\n    } \n    for (int i = 0;i<4;i++) {\n        int dx = dir[i][0] + p.x;\n        int dy = dir[i][1] + p.y;\n        if (check2(dx,dy)){\n            int tt = dfs1(w,Point(dx,dy),p);\n            if (tt == 0x7f7f7f7f)\n                continue;\n            dfs2(p,Point(dx,dy),t,1+tt+step);\n        }\n    }\n    visited2[p.x][p.y] = false;\n}\n\nvoid dfsall() {\n    for (int i = 0;i<4;i++) {\n        int dx = dir[i][0] + start.x;\n        int dy = dir[i][1] + start.y;\n        if (check(dx,dy)){\n            int tt = dfs1(w,Point(dx,dy),start);\n            if (tans!=0x7f7f7f7f)\n                dfs2(start,Point(dx,dy),target,1+tt);\n        } \n    }\n}\n\nvoid read(int&x) {\n    x = 0;\n    char c = getchar();\n    while (c<'0'||c>'9')\n        c = getchar();\n    while (c<='9'&&c>='0') {\n        x = x *10+c-'0';\n        c = getchar();\n    }\n}\n\nint main() {\n    int q;\n    read(n);\n    read(m);\n    read(q);\n    for (int i = 1;i<=n;i++)\n        for (int j = 1;j<=m;j++)\n            cin>>maps[i][j];\n    while (q--) {\n        ans = 0x7f7f7f7f;\n        int x,y;\n        read(x);\n        read(y);\n        w = Point(x,y);\n        read(x);\n        read(y);\n        start = Point(x,y);\n        read(x);\n        read(y);\n        target = Point(x,y);\n        dfs2(w,start,target,0);\n        if (ans == 0x7f7f7f7f)\n            cout<<-1<<endl;\n        else cout<<ans<<endl;\n    }\n}\n```",
        "postTime": 1533970945,
        "uid": 88347,
        "name": "sumijie",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "\u76f4\u5165\u4e3b\u9898\uff0c\u6b63\u89e3\u4e0d\u597d\u60f3\uff0c\u5148\u8bf4\u4e00\u4e0b\u66b4\u529b\u5427\uff0cbfs\u670970\u5206\u53ef\u62ff\u3002\n\n\u4e00\u4e2a\u56db\u7ef4\u6570\u7ec4\uff0c[ex][ey][sx][sy],\u524d\u4e24\u7ef4\u4ee3\u8868\u73b0\u5728\u7a7a\u767d\u5757\u7684\u4f4d\u7f6e\uff0c\u540e\u4e24\u7ef4\u4ee3\u8868\u76ee\u6807\u683c\u5b50\u7684\u4f4d\u7f6e\uff0cif(sx==tx&&sy==ty) return \u5373\u53ef\u3002\u5176\u5b9e\u5c31\u662fbfs\u4e71\u641e\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8be6\u89c1\u4ee3\u7801\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#include <queue>\nusing namespace std;\nconst int M=35;\nint n,m,t;\nint exe,eye,sxs,sys,tx,ty;\nint a[M][M],xx[4]={0,0,1,-1},yy[4]={1,-1,0,0};\nbool vis[M][M][M][M];\nstruct DATE{int ex,ey,sx,sy,d;};\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nint bfs(){\n    queue<DATE> pq;\n    pq.push((DATE){exe,eye,sxs,sys,0});\n    vis[exe][eye][sxs][sys]=1;\n    while(!pq.empty()){\n        int ex=pq.front().ex,ey=pq.front().ey,sx=pq.front().sx,sy=pq.front().sy,d=pq.front().d;pq.pop();\n        for(int i=0;i<4;i++){\n            int nx=ex+xx[i],ny=ey+yy[i];\n            if(nx<1||nx>n||ny<1||ny>m||!a[nx][ny]) continue;\n            if(nx==sx&&ny==sy){\n                if(vis[nx][ny][ex][ey]) continue;\n                if(ex==tx&&ey==ty) return d+1;\n                else {pq.push((DATE){nx,ny,ex,ey,d+1});vis[nx][ny][ex][ey]=1;}\n            }else{\n                if(vis[nx][ny][sx][sy]) continue;\n                pq.push((DATE){nx,ny,sx,sy,d+1});vis[nx][ny][sx][sy]=1;\n            }\n        }\n    }\n    return -1;\n}\nint main(){\n    n=read();m=read();t=read();\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            a[i][j]=read();\n    while(t--){\n        memset(vis,0,sizeof(vis));\n        exe=read();eye=read();sxs=read();sys=read();tx=read();ty=read();\n        printf(\"%d\\n\",(sxs==tx&&sys==ty)?0:bfs());\n    }\n    return 0;\n}\n```\n\u63a5\u4e0b\u6765\u5c31\u662f\u6b63\u89e3\u4e86\uff0c\u6709\u6ca1\u6709\u4e00\u79cd\u83ab\u540d\u7684\u51b2\u52a8\uff01\uff01\uff01\n\u56e0\u4e3a\u6709\u5982\u6b64\u591a\u7ec4\u8be2\u95ee\uff0c\u6240\u4ee5\u4e00\u904d\u904d\u7684bfs\u4e00\u5b9a\u4f1atle,\u4f46\u6bcf\u6b21\u56fe\u662f\u786e\u5b9a\u7684\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u5176\u9884\u5904\u7406\u3002\n\n\u6709\u8fd9\u4e48\u51e0\u4e2a\u6570\u7ec4\uff0cmov[x][y][k][g]!\u4e00\u5b9a\u4e0d\u8981\u5199\u6210move(\u53c8\u662f\u4fdd\u7559\u5b57)!\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684\u5b83\u4ee3\u8868(x,y)\u7684k\u65b9\u5411\u4e0a\u662f\u7a7a\u767d\u683c\uff0c\u8981\u628a\u5b83\u79fb\u52a8\u5230g\u65b9\u5411\u4e0a\u7684\u6700\u5c11\u6b65\u6570\uff0c\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0cbfs\u5373\u53ef\n\n\u8003\u8651\u5efa\u56fe\u8dd1spfa\uff0c\u518d\u6765\u4e00\u4e2a\u6570\u7ec4id[x][y][k],\u5b83\u4ee3\u8868(x,y)\u7684k\u65b9\u5411\u4e0a\u6709\u4e00\u4e2a\u7a7a\u683c\u8fd9\u4e2a\u72b6\u6001\u3002\u8bbe0\uff0c1\uff0c2\uff0c3\u5206\u522b\u4ee3\u8868\u4e0b\uff0c\u4e0a\uff0c\u5de6\uff0c\u53f3\u3002\u90a3\u4e48id[x][y][0]\u8f6c\u79fb\u5230id[x+1][y][1]\u7684\u6b65\u6570\u5c31\u662fmov[x][y][0][1],\u4ee5\u6b64\u7c7b\u63a8\uff0c\u641e\u4e2a\u90bb\u63a5\u8868\uff0c\u6bcf\u4e2a\u683c\u90fd\u52a0\u8fdb\u53bb\u56fe\u5c31\u5efa\u5b8c\u4e86\u3002\n\n\u4ee5\u4e0a\u662f\u9884\u5904\u7406\u8fc7\u7a0b\n\n\u7136\u540e\u628a\u8be2\u95ee\u8bfb\u5165\uff0c\u5148\u628a\u628a\u7a7a\u767d\u683c\u94fa\u5230sx\uff0csy\u4e0a\u4e0b\u5de6\u53f3\u7684\u6b65\u6570\u5168\u641e\u51fa\u6765\uff0c\u5f53\u7136\u662f\u7528bfs\uff0c\u7136\u540e\u628a\u8fd94\u4e2a\u72b6\u6001\u653e\u5165\u961f\u5217\uff0c\u8dd1\u4e00\u904d\u6700\u666e\u901a\u7684spfa\u5373\u53ef\uff0c\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\nconst int M=35;\nconst int N=35*35*20;\nint n,m,q,h,t,num,js,ex,ey,sx,sy,tx,ty,ans;\nint a[M][M],p[N],id[M][M][4],head[N],mov[M][M][4][4],dis[N],dx[4]={-1,1,0,0},dy[4]={0,0,-1,1};\nbool flag[M][M],vis[N];\nstruct DATE{int fr,to,w,last;}date[N];\nstruct Q{int x,y,d;}pq[N];\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\ninline void add(int x,int y,int z){\n    date[++num]=(DATE){x,y,z,head[x]};\n    head[x]=num;\n}\nvoid spfa(){\n    ex=read();ey=read();sx=read();sy=read();tx=read();ty=read();\n    if(sx==tx&&sy==ty) {printf(\"0\\n\");return ;}\n    memset(dis,0x3f,sizeof(dis));memset(flag,0,sizeof(flag));\n    h=0,t=1;\n    pq[t].x=ex,pq[t].y=ey,pq[t].d=0;flag[ex][ey]=1;\n    while(h<t){\n        int nnx=pq[++h].x,nny=pq[h].y,d=pq[h].d;\n        for(int s=0;s<4;s++){\n            int xx=nnx+dx[s],yy=nny+dy[s];\n            if(!a[xx][yy]||flag[xx][yy]) continue;\n            if(xx==sx&&yy==sy){\n                if(s==0) {dis[id[sx][sy][1]]=min(dis[id[sx][sy][1]],d);continue;}\n                if(s==1) {dis[id[sx][sy][0]]=min(dis[id[sx][sy][0]],d);continue;}\n                if(s==2) {dis[id[sx][sy][3]]=min(dis[id[sx][sy][3]],d);continue;}\n                if(s==3) {dis[id[sx][sy][2]]=min(dis[id[sx][sy][2]],d);continue;}\n            }\n            pq[++t].x=xx,pq[t].y=yy,pq[t].d=d+1;flag[xx][yy]=1;\n        }\n    }\n    h=0,t=0;memset(vis,0,sizeof(vis));\n    p[++t]=id[sx][sy][0];vis[id[sx][sy][0]]=1;\n    p[++t]=id[sx][sy][1];vis[id[sx][sy][1]]=1;\n    p[++t]=id[sx][sy][2];vis[id[sx][sy][2]]=1;\n    p[++t]=id[sx][sy][3];vis[id[sx][sy][3]]=1;\n    while(h<t){\n        int now=p[++h];vis[now]=0;\n        for(int i=head[now];i;i=date[i].last){\n            int to=date[i].to,w=date[i].w;\n            if(dis[to]>dis[now]+w){\n                dis[to]=dis[now]+w;\n                if(!vis[to]){\n                    p[++t]=to;\n                    vis[to]=1;\n                }\n            }\n        }\n    }\n    ans=dis[0];\n    int ans0=dis[id[tx][ty][0]],ans1=dis[id[tx][ty][1]],ans2=dis[id[tx][ty][2]],ans3=dis[id[tx][ty][3]];\n    ans=min(min(ans0,ans1),min(ans2,ans3));\n    if(ans==dis[0]) printf(\"-1\\n\");\n    else printf(\"%d\\n\",ans);\n}\nint main(){\n    n=read();m=read();q=read();\n    memset(mov,0x3f,sizeof mov );\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            a[i][j]=read();\n            if(a[i][j]){\n                id[i][j][0]=++js;id[i][j][1]=++js;\n                id[i][j][2]=++js;id[i][j][3]=++js;\n            }\n        }\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(!a[i][j]) continue;\n            for(int k=0;k<4;k++){\n                int nx=i+dx[k],ny=j+dy[k];\n                if(!a[nx][ny]) continue;\n                for(int g=0;g<4;g++){\n                    int fx=i+dx[g],fy=j+dy[g];\n                    if(!a[fx][fy]) continue;\n                    if(nx==fx&&ny==fy) {mov[i][j][k][g]=1;continue;}\n                    memset(flag,0,sizeof(flag));\n                    flag[nx][ny]=1;h=0,t=1;\n                    flag[i][j]=1;\n                    pq[t].x=nx,pq[t].y=ny,pq[t].d=1;\n                    bool tag=0;\n                    while(h<t){\n                        if(tag) break;\n                        int nnx=pq[++h].x,nny=pq[h].y,d=pq[h].d;\n                        for(int s=0;s<4;s++){\n                            int xx=nnx+dx[s],yy=nny+dy[s];\n                            if(!a[xx][yy]||flag[xx][yy]) continue;\n                            if(xx==fx&&yy==fy) {mov[i][j][k][g]=d+1;tag=1;break;}\n                            else pq[++t].x=xx,pq[t].y=yy,pq[t].d=d+1;flag[xx][yy]=1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(!a[i][j]) continue;\n            for(int k=0;k<4;k++){\n                int nx=i+dx[k],ny=j+dy[k];\n                if(!a[nx][ny]) continue;\n                for(int g=0;g<4;g++){\n                    int fx=i+dx[g],fy=j+dy[g];\n                    if(!a[fx][fy]) continue;\n                    if(g==0) add(id[i][j][k],id[fx][fy][1],mov[i][j][k][g]);\n                    if(g==1) add(id[i][j][k],id[fx][fy][0],mov[i][j][k][g]);\n                    if(g==2) add(id[i][j][k],id[fx][fy][3],mov[i][j][k][g]);\n                    if(g==3) add(id[i][j][k],id[fx][fy][2],mov[i][j][k][g]);\n                }\n            }\n        }\n    }\n    while(q--) spfa();\n    return 0; \n}\n\n```",
        "postTime": 1506258861,
        "uid": 49369,
        "name": "TWorstO_DK",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u9898\u5b9e\u5728\u662f\u5999\u54c9\uff0c\u5999\u5728\u5982\u4f55\u53bb\u6389\u5197\u4f59\u72b6\u6001\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u9664\u4e86\u7a7a\u4f4d\u548c\u7279\u6b8a\u4f4d\u5176\u4ed6\u90fd\u662f\u672c\u8d28\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u5bb9\u6613\u8bbe\u51fa\u72b6\u6001$f_{i,j,x,y}$\u8868\u793a\u4f7f\u7279\u6b8a\u4f4d\u5750\u6807\u4e3a$(i,j)$\uff0c\u7a7a\u4f4d\u5750\u6807\u4e3a$(x,y)$\u7684\u6700\u5c11\u65f6\u95f4\uff0c\u8be5$dp$\u53ef\u4ee5\u4f7f\u7528$dfs$\u6216$bfs$\u8f6c\u79fb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^2m^2)$\u3002\n\u8fc7\u4e0d\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u600e\u4e48\u53bb\u6389\u5197\u4f59\u72b6\u6001\u3002\u53ea\u6709\u5f53\u7a7a\u4f4d\u5728\u7279\u6b8a\u4f4d\u7684\u4e0a\u4e0b\u5de6\u53f3\u65f6\uff0c\u7279\u6b8a\u4f4d\u624d\u80fd\u79fb\u52a8\uff0c\u800c\u7a7a\u4f4d\u662f\u53ef\u4ee5\u968f\u610f\u79fb\u52a8\u7684\uff0c\u90a3\u5f53\u7a7a\u4f4d\u5728\u7279\u6b8a\u4f4d\u4e0a\u4e0b\u5de6\u53f3\u65f6\uff0c\u6211\u4eec\u968f\u610f\u628a\u7a7a\u4f4d\u79fb\u8d70\u80af\u5b9a\u662f\u4e0d\u4f18\u7684\u3002\u90a3\u6211\u4eec\u5c31\u4e0d\u628a\u5b83\u79fb\u8d70\uff0c\u7a7a\u4f4d\u7684\u5750\u6807\u53ea\u53ef\u80fd\u5728\u56db\u4e2a\u5730\u65b9\uff0c\u90a3\u5c31\u662f\u7279\u6b8a\u4f4d\u7684\u4e0a\u4e0b\u5de6\u53f3\u3002\n\n\u6545\u72b6\u6001\u53d8\u4e3a$f_{i,j,k},k\\in[0,3]$\uff0c$k$\u8868\u793a\u7a7a\u4f4d\u6240\u5728\u65b9\u5411\u3002\n\n\u521d\u59cb\u72b6\u6001\u53ef\u4ee5\u5148\u7528$bfs$\u9884\u5904\u7406\u51fa\u3002\u8fd9\u6837\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u79fb\u4ee3\u4ef7\u5e76\u4e0d\u76f8\u7b49\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u518d\u4f7f\u7528$bfs$\u8f6c\u79fb\uff0c\u7531\u4e8e\u8f6c\u79fb\u8fb9\u8f83\u5c11\uff0c\u4f7f\u7528$spfa$\u8f6c\u79fb\uff0c\u53ef\u4ee5\u505a\u5230\u63a5\u8fd1$O(nm)$\u7684\u590d\u6742\u5ea6\u3002\n\n\u535a\u5ba2\u5185\u98df\u7528\u66f4\u4f73\uff1a[P1979 [NOIP2013 \u63d0\u9ad8\u7ec4] \u534e\u5bb9\u9053](https://blog.csdn.net/Z_Y_S_/article/details/112728446)",
        "postTime": 1610849141,
        "uid": 111475,
        "name": "doctorZ_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1979 \u3010[NOIP2013 \u63d0\u9ad8\u7ec4] \u534e\u5bb9\u9053\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problem/P1979)  \n _\u8bf4\u5728\u524d\u9762\uff1a_ \u9996\u5148\u8fd9\u9053\u9898\u6bd4\u8f83\u5197\u6742\uff0c\u5982\u679c\u56e0\u4e3a\u60a8\u4e0d\u592a\u63a5\u53d7\u6211\u7684\u7801\u98ce/\u8868\u8fbe\u65b9\u5f0f\u800c\u5e26\u6765\u4e86\u4e0d\u592a\u597d\u7684\u9605\u8bfb\u6548\u679c\uff0c\u6211\u5411\u60a8\u9053\u6b49\uff08\u97a0\u8eac  \n\n\u9898\u9762\u8bf7\u6233\u94fe\u63a5\uff0c\u8bf7\u60a8\u5728\u786e\u4fdd\u5bf9\u8fd9\u9053\u9898\u76ee\u7684\u80cc\u666f\u548c\u505a\u8fd9\u9053\u9898\u7684\u5927\u81f4\u65b9\u5411\u6709\u4e86\u4e00\u5b9a\u7684\u638c\u63e1\u540e\uff0c\u518d\u98df\u7528\u8fd9\u7bc7\u535a\u5ba2\uff0c\u4ee5\u786e\u4fdd\u8f83\u597d\u7684\u9605\u8bfb\u6548\u679c  \n\n\u9664\u53bb\u591a\u6b21\u8be2\u95ee\u4e0d\u8c08\uff0c\u8fd9\u9053\u9898\u5927\u81f4\u7684\u6846\u67b6\u662f\u975e\u5e38\u660e\u663e\u7684\u641c\u7d22\u3002\u4f46\u662f\u867d\u7136\u662f\u591a\u6b21\u8be2\u95ee\uff0c\u68cb\u76d8\u7684\u72b6\u6001\u662f\u4e0d\u4f1a\u53d8\u7684\uff0c\u5e76\u4e14\u53ea\u6709\u90e8\u5206\u7684\u4f4d\u7f6e\u662f\u771f\u6b63\u6709\u4ef7\u503c\u7684\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u8003\u8651\u56fe\u8bba\u5efa\u6a21\uff0c\u5728\u8fd9\u4e9b\u6709\u4ef7\u503c\u7684\u72b6\u6001\u4e0a\u8dd1\u4ece\u7ec8\u6001\u5230\u672b\u6001\u7684\u6700\u77ed\u8def\u3002\u56e0\u4e3a\u68cb\u5b50\u8981\u79fb\u52a8\u7684\u65f6\u5019\uff0c\u7a7a\u767d\u5757\u4e00\u5b9a\u8981\u79fb\u5230\u5b83\u7684\u5468\u56f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e3a\u8fd9\u79cd\u5468\u56f4\u7684\u4f4d\u7f6e\u7f16\u53f7\u3002$f[x][y][i]$\u8868\u793a\u5728\u70b9$(x, y)$\u7684\u65b9\u5411$i(0\\le i \\le 3)$\u4e0a\u7684\u4f4d\u7f6e\u7684\u7f16\u53f7\u3002\u8fd9\u91cc\u6211\u4eec\u6709\u4e24\u4e2a\u6570\u7ec4\u8868\u793a\u65b9\u5411\u7684\u504f\u79fb\u91cf\uff0c\u4e0d\u540c\u7684$i$\u5206\u522b\u914d\u5bf9\u5de6\u3001\u53f3\u3001\u4e0a\u3001\u4e0b\uff1a$dx[4]={0, 0, -1, 1},dy[4]={-1, 1, 0, 0}$\u3002\u8fd9\u6837\u7f16\u53f7\u7684\u597d\u5904\u662f\uff0c$i \\ xor\\ 1$\u5373\u53ef\u8868\u793a\u76f8\u53cd\u7684\u65b9\u5411  \n\n\u70b9\u5efa\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u600e\u4e48\u8fde\u8fb9\u3002\u663e\u7136\u7684\u4e00\u70b9\u662f\uff0c\u4e3a\u4e86\u4f7f\u76ee\u6807\u68cb\u5b50\u66f4\u5feb\u5730\u524d\u8fdb\uff0c\u7a7a\u767d\u683c\u79fb\u52a8\u5230\u68cb\u5b50\u65c1\u7684\u8def\u4e0a\u4e0d\u5e94\u8be5\u4e0e\u68cb\u5b50\u53d1\u751f\u4ea4\u6362\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5728\u68cb\u5b50\u65c1\u8fb9\u7684\u7a7a\u767d\u683c\uff0c\u5b83\u6709\u4ee5\u4e0b\u7684\u9009\u62e9\uff1a  \n1. \u7ed5\u5230\u68cb\u5b50\u7684\u53e6\u4e00\u4e2a\u65b9\u5411\u4e0a\uff0c\u4f7f\u5f97\u68cb\u5b50\u5411\u8be5\u65b9\u5411\u524d\u8fdb\uff0c\u5373:$f[x][y][i]\\to f[x][y][j](i\\not= j) $  \n2. \u76f4\u63a5\u548c\u68cb\u5b50\u4ea4\u6362\u4f4d\u7f6e\uff0c\u8ba9\u68cb\u5b50\u5411\u539f\u672c\u7684\u7a7a\u767d\u683c\u7684\u65b9\u5411\u524d\u8fdb\uff0c\u5373:$f[x][y][i]\\to f[x+dx[i]][y+dy[i]][i \\ xor \\ 1]$  \n\n\u7531\u4e8e\u7b2c\u4e00\u79cd\u9009\u62e9\u4e0d\u80fd\u53d7\u5230\u5404\u79cd\u5143\u7d20\u9650\u5236\uff0c\u6240\u4ee5\u9700\u8981bfs\u6765\u786e\u5b9a\u8fb9\u6743\u3002\u4f5c\u5b8c\u8fd9\u4e9b\u9884\u5904\u7406\u4e4b\u540e\uff0c\u8fd9\u4e9b\u70b9\u4e4b\u95f4\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u56fe\u8bba\u6a21\u578b\u3002\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u5bf9\u79fb\u52a8\u7684\u68cb\u5b50\u5468\u56f4\u76844\u4e2a\u4f4d\u7f6e\u505a\u4e00\u6b21bfs\uff0c\u5f97\u5230\u8ba9\u7a7a\u767d\u683c\uff08\u5728\u4e0d\u79fb\u52a8\u8be5\u68cb\u5b50\u7684\u60c5\u51b5\u4e0b\uff09\u79fb\u52a8\u5230\u68cb\u5b50\u56db\u5468\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u518d\u628a\u8fd9\u56db\u4e2a\u521d\u72b6\u6001\u538b\u5165\u961f\u5217\u4e2d\uff0c\u8dd1\u4e00\u904d$SPFA$\uff0c\u6700\u540e\u679a\u4e3e\u672b\u72b6\u6001\u53d6\u4e00\u4e2a$dis$\u7684$min$\u5c31\u662f\u7b54\u6848\u4e86  \n\n\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\uff1a\n1. \u8d77\u70b9\u548c\u7ec8\u70b9\u76f8\u540c\u65f6\u8bb0\u5f97\u7279\u5224  \n2. \u6b63\u786e\u4f30\u8ba1\u6a21\u578b\u4e2d\u6700\u591a\u4f1a\u6709\u591a\u5c11\u4e2a\u70b9\u6765\u5f00\u6570\u7ec4\n\n\u5177\u4f53\u8bf7\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\uff1a  \n```cpp\n//\u4ecemain\u5f00\u59cb\u770b\n#include <cstdio>\n#include <cstring>\nconst int maxn=50;\nconst int maxm=1000000;\nconst int INF=0x3f3f3f3f;\nint a[maxn][maxn],f[maxn][maxn][4];\nint dx[4]={0, 0, 1, -1},dy[4]={1, -1, 0, 0};\nint head[maxn*maxn*4],to[maxm],nxt[maxm],val[maxm];\nint dis[maxn*maxn];\nint cnt,tot;\nint n,m,Q;\nbool vis[maxn][maxn],inq[maxn*maxn];\nstruct node\n{\n\tint x,y,w;\n\tnode() {}\n\tnode(int a,int b,int c) {x=a,y=b,w=c;}\n};\nstruct Queue\n{\n\tint l,r;\n\tnode a[maxn*maxn];\n\tQueue() {l=1,r=0;}\n\tvoid push(node x) {a[++r]=x;}\n\tvoid pop() {l++;}\n\tnode front() {return a[l];}\n\tbool empty() {return l>r;}\n};//\u8fd9\u4e24\u4e2a\u624b\u5199\u961f\u5217\u5206\u522b\u7ed9bfs\u548cSPFA\u7528= =\uff0c\u76f4\u63a5\u7528STL\u4e5f\u5dee\u4e0d\u591a\u7684\nstruct Que\n{\n\tint l,r;\n\tint a[maxn*maxn];\n\tQue() {l=1,r=0;}\n\tvoid push(int x) {a[++r]=x;}\n\tvoid pop() {l++;}\n\tint front() {return a[l];}\n\tbool empty() {return l>r;}\n};\n\nint min(int x,int y) {return x<y?x:y;}\nbool valid(int x,int y) {return a[x][y];}\nvoid add(int u,int v,int w)\n{\n\tnxt[++tot]=head[u];\n\thead[u]=tot;\n\tto[tot]=v;\n\tval[tot]=w;\n}\nint bfs(int target_x,int target_y,int sx,int sy,int tx,int ty)\n{\n\tif (sx==tx&&sy==ty)\n\t\treturn 0;\n\tmemset(vis, 0, sizeof(vis));\n\tQueue q;\n\tvis[sx][sy]=1;\n\tvis[target_x][target_y]=1;//\u7279\u6b8a\u6807\u8bb0\u4e00\u4e0b\uff0c\u5c31\u5f53\u4f5c\u8d70\u8fc7\u4e86\uff0c\u53cd\u6b63\u4e0d\u80fd\u8d70\n\tq.push(node(sx, sy, 0));\n\twhile(!q.empty())\n\t{\n\t\tint ux=q.front().x,uy=q.front().y,uw=q.front().w;\n\t\tq.pop();\n\t\tfor (int i=0;i<4;i++)\n\t\t{\n\t\t\tint vx=ux+dx[i],vy=uy+dy[i];\n\t\t\tif (!valid(vx, vy)||vis[vx][vy])\n\t\t\t\tcontinue;\n\t\t\tif (vx==tx&&vy==ty)\n\t\t\t\treturn uw+1;\n\t\t\tvis[vx][vy]=1;\n\t\t\tq.push(node(vx, vy, uw+1));\n\t\t}\n\t}\n\treturn INF;\n}\nint SPFA(int ex,int ey,int sx,int sy,int tx,int ty)\n{\n\tif (sx==tx&&sy==ty)//\u7279\u5224\u4e00\u4e0b\n\t\treturn 0;\n\tmemset(dis, 0x3f, sizeof(dis));\n\tmemset(inq, 0, sizeof(inq));\n\tQue q;\n\tfor (int i=0;i<4;i++)\n\t{\n\t\tint vx=sx+dx[i],vy=sy+dy[i];\n\t\tif (!valid(vx, vy))\n\t\t\tcontinue;\n\t\tdis[f[sx][sy][i]]=bfs(sx, sy, ex, ey, vx, vy);\n\t\tq.push(f[sx][sy][i]);\n\t\tinq[f[sx][sy][i]]=1;\n\t}\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tinq[u]=0;\n\t\tfor (int i=head[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif (dis[v]>dis[u]+val[i])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+val[i];\n\t\t\t\tif (!inq[v])\n\t\t\t\t\tinq[v]=1,q.push(v);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=INF;\n\tfor (int i=0;i<4;i++)\n\t\tans=min(ans, dis[f[tx][ty][i]]); \n\treturn ans==INF?-1:ans;\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&Q);\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\n\tfor (int x=1;x<=n;x++)\n\t\tfor (int y=1;y<=m;y++)\n\t\t\tfor (int i=0;i<4;i++)\n\t\t\t{\n\t\t\t\tint vx=x+dx[i],vy=y+dy[i];\n\t\t\t\tif (!valid(vx, vy))\n\t\t\t\t\tcontinue;\n\t\t\t\tf[x][y][i]=++cnt;//\u7ed9\u6709\u7528\u72b6\u6001\u7f16\u53f7 \n\t\t\t}\n            \n\tfor (int x=1;x<=n;x++)\n\t\tfor (int y=1;y<=m;y++)\n\t\t\tfor (int i=0;i<4;i++)\n\t\t\t\tfor (int j=0;j<4;j++)\n\t\t\t\t{\n\t\t\t\t\tif (i==j||!valid(x+dx[i], y+dy[i])||!valid(x+dx[j], y+dy[j]))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tadd(f[x][y][i], f[x][y][j], bfs(x, y, x+dx[i], y+dy[i], x+dx[j], y+dy[j]));\n\t\t\t\t}//\u9009\u62e91\n                \n\tfor (int x=1;x<=n;x++)\n\t\tfor (int y=1;y<=m;y++)\n\t\t\tfor (int i=0;i<4;i++)\n\t\t\t{\n\t\t\t\tif (!valid(x+dx[i], y+dy[i]))\n\t\t\t\t\tcontinue;\n\t\t\t\tadd(f[x][y][i], f[x+dx[i]][y+dy[i]][i^1], 1);//\u9009\u62e92\uff0c\u4ea4\u6362\u7a7a\u767d\u683c\u4e0e\u68cb\u5b50\u7684\u4f4d\u7f6e\uff0c\u5c06\u8fd9\u4e24\u4e2a\u72b6\u6001\u8fde\u8fb9 \n\t\t\t}\n\t\n\twhile(Q--)\n\t{\n\t\tint ex,ey,sx,sy,tx,ty;\n\t\tscanf(\"%d%d%d%d%d%d\",&ex,&ey,&sx,&sy,&tx,&ty);\n\t\tprintf(\"%d\\n\",SPFA(ex, ey, sx, sy, tx, ty)); \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1572941551,
        "uid": 111528,
        "name": "hkr04",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 noip2013 \u534e\u5bb9\u9053"
    },
    {
        "content": "## \u4e00\u3001\u9898\u76ee\n\n[\u70b9\u6b64\u770b\u9898](https://www.luogu.org/problem/P1979)\n\n## \u4e8c\u3001\u89e3\u6cd5\n\u8003\u8651\u7206\u641c\uff0c\u53ef\u4ee5\u76f4\u63a5\u79fb\u52a8\u7a7a\u767d\u683c\uff0c\u636e\u8bf4\u53ef\u4ee5\u79fb\u52a8\u7a7a\u767d\u683c\u3002\n\n\u7206\u641c\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8017\u65f6\u5462\uff1f\u56e0\u4e3a\u7206\u641c\u6269\u5c55\u4e86\u5f88\u591a\u65e0\u7528\u7684\u72b6\u6001\uff0c\u5176\u5b9e\u7a7a\u767d\u683c\u4e0d\u5728\u6307\u5b9a\u68cb\u5b50\u7684\u5468\u56f4\u7684\u72b6\u6001\u662f\u65e0\u7528\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u6027\u7684\u6269\u5c55\u7a7a\u767d\u683c\u5728\u6307\u5b9a\u68cb\u5b50\u65c1\u8fb9\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u5c31\u8fbe\u5230\u4e86\u51cf\u5c11\u641c\u7d22\u8303\u56f4\u7684\u6548\u679c\u3002\n\n\u7531\u4e8e\u79fb\u52a8\u5230\u6307\u5b9a\u68cb\u5b50\u7684\u5468\u56f4\u7684\u72b6\u6001\u4e0d\u662f\u8fde\u7eed\u7684\uff08$bfs$\u96be\u4ee5\u505a\u5230\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u56fe\u8bba\u7684\u65b9\u5f0f\u6765\u5199\uff0c\u7531\u4e8e\u8981\u70b9\u5b9e\u5728\u5f88\u591a\uff0c\u6587\u5b57\u8868\u8fbe\u51fa\u6765\u592a\u96be\u4e86\uff0c\u53ef\u4ee5\u770b\u6211\u6709\u6ce8\u91ca\u7684\u4ee3\u7801\uff1a\n\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int MAXN = 5005;\nconst int inf = 0x3f3f3f3f;\nint read()\n{\n\tint x=0,flag=1;char c;\n\twhile((c=getchar())<'0' || c>'9') if(c=='-') flag=-1;\n\twhile(c>='0' && c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn x*flag;\n}\nint n,m,q,tot,num,f[MAXN],pre[MAXN],dis[MAXN],id[35][35][4];\nint dx[4]={1,-1},dy[4]={0,0,1,-1};\nbool mp[35][35],vis[35][35];\nstruct edge\n{\n\tint v,c,next;\n}e[MAXN*40];\nstruct node\n{\n\tint x,y,c;\n};\nstruct data\n{\n\tint u,c;\n\tbool operator < (const data &B) const\n\t{\n\t\treturn c>B.c;\n\t}\n};\nvoid add_edge(int u,int v,int c)\n{\n\te[++tot]=edge{v,c,f[u]},f[u]=tot;\n}\nint check(int x,int y)\n{\n\treturn x>=1 && x<=n && y>=1 && y<=m && mp[x][y]; \n}\nint get_dis(int bx,int by,int ex,int ey)//\u7528bfs\u641e\u51fa\u8def\u5f84\u957f\u5ea6 \n{\n\tmemset(vis,0,sizeof vis);\n\tqueue<node> q;\n\tq.push(node{bx,by,0});\n\tvis[bx][by]=1;\n\twhile(!q.empty())\n\t{\n\t\tnode t=q.front();\n\t\tq.pop();\n\t\tif(t.x==ex && t.y==ey) return t.c;\n\t\tfor(int i=0;i<4;i++)\n\t\t{\n\t\t\tint tx=t.x+dx[i],ty=t.y+dy[i];\n\t\t\tif(check(tx,ty) && !vis[tx][ty])\n\t\t\t{\n\t\t\t\tvis[tx][ty]=1;\n\t\t\t\tq.push(node{tx,ty,t.c+1});\n\t\t\t}\n\t\t}\n\t}\n\treturn inf;\n}\nint main()\n{\n\tn=read();m=read();q=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tmp[i][j]=read();\n\t\t\tfor(int k=0;k<4;k++)\n\t\t\t\tid[i][j][k]=++num;//\u6211\u4eec\u628a\u7a7a\u767d\u683c\u5728\u6bcf\u4e2a\u70b9\u7684\u4e0a\u4e0b\u5de6\u53f3\u72b6\u6001\u5206\u522b\u7f16\u53f7\uff08\u5bf9\u53ef\u884c\u7684\u72b6\u6001\u7f16\u53f7\uff09\u3002 \n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(mp[i][j])\n\t\t\t{//\u679a\u4e3e\u53ef\u884c\u70b9\uff0c\u5bf9\u7a7a\u767d\u683c\u5bf9\u4e8e\u5f53\u524d\u70b9\u65b9\u5411\u7684\u6539\u53d8\u5efa\u8fb9 \n\t\t\t\tmp[i][j]=0;//\u7a7a\u767d\u683c\u4e0d\u80fd\u7ecf\u8fc7\u5f53\u524d\u70b9 \n\t\t\t\tint t1=0,t2=0,t3=0,t4=0,tmp=0;\n\t\t\t\tfor(int k=0;k<4;k++)//\u679a\u4e3e\u7a7a\u767d\u683c\u5bf9\u4e8e\u5f53\u524d\u70b9\u7684\u539f\u65b9\u5411 \n\t\t\t\t\tif(check(t1=i+dx[k],t2=j+dy[k]))\n\t\t\t\t\t\tfor(int l=0;l<4;l++)//\u679a\u4e3e\u6539\u53d8\u540e\u7684\u65b9\u5411\uff08\u53ef\u91cd\u590d\uff09 \n\t\t\t\t\t\t\tif(check(t3=i+dx[l],t4=j+dy[l]))//\u8981\u4fdd\u8bc1\u4e24\u4e2a\u65b9\u5411\u5747\u53ef\u884c \n\t\t\t\t\t\t\t\tif((tmp=get_dis(t1,t2,t3,t4))<inf)//\u5224\u65ad\u7a7a\u767d\u683c\u79fb\u52a8\u7ecf\u8fc7\u7684\u8ddd\u79bb\uff0c\u8981\u80fd\u5230\u8fbe\u624d\u5efa\u8fb9 \n\t\t\t\t\t\t\t\t\tadd_edge(id[i][j][k],id[t3][t4][l^1],tmp+1);\n\t\t\t\t\t\t\t\t\t//\u6539\u53d8\u65b9\u5411\u540e\u9644\u5e26\u8d70\u4e00\u6b65\uff08\u4ed4\u7ec6\u60f3\u60f3\uff0c\u4e0d\u4f1a\u88ab\u5361\u6210\u53ea\u6539\u53d8\u65b9\u5411\uff09\uff0c\u5efa\u5355\u5411\u8fb9\uff0c\u6ce8\u610f\u5f02\u6216\u8868\u793a\u76f8\u53cd\u7684\u65b9\u5411 \n\t\t\t\tmp[i][j]=1;//\u6062\u590d\u539f\u72b6\u6001 \n\t\t\t}\n\twhile(q--)\n\t{\n\t\tint t1=read(),t2=read(),t3=read(),t4=read(),t5=read(),t6=read(),s=++num,t=++num;\n\t\t//\u65b0\u5efa\u4e24\u4e2a\u865a\u70b9\uff08\u8d77\u70b9\u548c\u7ec8\u70b9\uff09 \n\t\tif(t3==t5 && t4==t6)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tmp[t3][t4]=0;//\u6ce8\u610f\u8fd8\u662f\u4e0d\u80fd\u7ecf\u8fc7\u6307\u5b9a\u70b9 \n\t\tfor(int i=0;i<4;i++)\n\t\t\tif(mp[t3+dx[i]][t4+dy[i]])//\u628a\u8d77\u70b9\u548c\u53ef\u884c\u7684\u540e\u7ee7\u70b9\u8fde\u8fb9\uff0c\u5c06\u7a7a\u767d\u683c\u641e\u5230\u6307\u5b9a\u70b9\u7684\u5468\u56f4 \n\t\t\t\tadd_edge(s,id[t3][t4][i],get_dis(t1,t2,t3+dx[i],t4+dy[i]));\n\t\tmp[t3][t4]=1;\n\t\tfor(int i=0;i<4;i++)\n\t\t\tif(mp[t5+dx[i]][t6+dy[i]])//\u7ec8\u70b9\u72b6\u6001\u4e3a\u6307\u5b9a\u70b9\uff08\u7a7a\u767d\u683c\u53ef\u5728\u5176\u56db\u4e2a\u65b9\u5411\uff09\u7684\u72b6\u6001\uff0c\u4e0d\u9700\u8981\u82b1\u8d39 \n\t\t\t\tadd_edge(id[t5][t6][i],t,0);\n\t\tmemset(dis,0x3f,sizeof dis);\n\t\tpriority_queue<data> q;\n\t\tdis[s]=0;\n\t\tq.push(data{s,0});\n\t\twhile(!q.empty())//\u5bf9\u5efa\u597d\u7684\u56fe\u8dd1\u6700\u77ed\u8def \n\t\t{\n\t\t\tdata t=q.top();\n\t\t\tq.pop();\n\t\t\tfor(int i=f[t.u];i;i=e[i].next)\n\t\t\t{\n\t\t\t\tint v=e[i].v,c=e[i].c;\n\t\t\t\tif(dis[v]>dis[t.u]+c)\n\t\t\t\t{\n\t\t\t\t\tdis[v]=dis[t.u]+c;\n\t\t\t\t\tq.push(data{v,dis[v]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dis[t]==inf)\n\t\t\tputs(\"-1\");\n\t\telse\n\t\t\tprintf(\"%d\\n\",dis[t]);\n\t}\n}\n```\n",
        "postTime": 1570436272,
        "uid": 128239,
        "name": "C20203030",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "\u6211\u4eec\u5728\u8bfb\u5165\u4e4b\u540e\uff0c\u5148\u9884\u5904\u7406\u4e00\u4e2a`tt`\u6570\u7ec4(transport time)\u3002`tt[i][j][d1][d2]`\u8868\u793a\u5728\u4e0d\u7ecf\u8fc7`(i,j)`\u7684\u60c5\u51b5\uff0c\u7a7a\u767d\u5757\u4ece`(i,j)`\u7684`d1`\u65b9\u5411\u8f6c\u79fb\u5230`(i,j)`\u7684`d2`\u65b9\u5411\u9700\u8981\u7684\u65f6\u95f4\u3002\u9884\u5904\u7406tt\u6570\u7ec4\u53ea\u9700\u8981\u679a\u4e3ei,j,d1,d2\uff0c\u6bcf\u6b21\u679a\u4e3ei\u548cj\u7684\u65f6\u5019\u6682\u65f6\u5730\u628ai\u548cj\u5f53\u505a\u4e0d\u53ef\u79fb\u52a8\u7684\u65b9\u5757\uff0c\u7136\u540e\u8ba1\u7b97\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u5750\u6807\uff0cbfs\u6c42\u8ddd\u79bb\u5373\u53ef\u3002\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2m^2)$\u3002\u8be6\u89c1\u7a0b\u5e8f\u5185\u7684`prework()`\n\n\u5728`work()`\u51fd\u6570\u4e2d\u6211\u4eec\u4f7f\u7528\u4eba\u89c1\u4eba\u7231\uff0c\u82b1\u89c1\u82b1\u5f00\u8f66\u89c1\u8f66\u7206\u80ce\u7684\u5b89\u5168\u900f\u5f7b\u6e05\u771f\u4eba\u54c1\u7684dijkstra\u7b97\u6cd5\u3002\u6ce8\u610fdijkstra\u7b97\u6cd5\u53ef\u4ee5\u5904\u7406\u591a\u6e90\u6700\u77ed\u8def\uff08\u6ce8\u610f\u8fd9\u91cc\u7684\u591a\u6e90\u6700\u77ed\u8def\u548cfloyed\u7684\u591a\u6e90\u6700\u77ed\u8def\u4e0d\u662f\u540c\u4e00\u4e2a\u6982\u5ff5\uff0c\u8fd9\u91cc\u7684\u591a\u6e90\u6700\u77ed\u8def\u5c31\u662f\u53ef\u4ee5\u9009\u53d6\u591a\u4e2a\u8d77\u70b9\u5f00\u59cb\u8d70\u8def\uff09\u6211\u4eec\u8fd9\u91cc\u8dd1\u6700\u77ed\u8def\u7684\u56fe\u4e2d\uff0c\u6bcf\u4e2a\u9876\u70b9\u662f\u4e00\u4e2a\u72b6\u6001`[x][y][d]`\uff0c\u8868\u793a\u5f53\u524d\u7684\u6307\u5b9a\u53ef\u79fb\u52a8\u5757\u5728`(x,y)`\uff0c\u7a7a\u767d\u5757\u5728\u4ed6\u7684`d`\u65b9\u5411\u3002\u521d\u59cb\u72b6\u6001\u67094\u4e2a\uff0c\u4e00\u5f00\u59cb\u6211\u4eec\u8ba9\u7a7a\u767d\u5757\u79fb\u52a8\u5230\u6307\u5b9a\u7684\u53ef\u79fb\u52a8\u5757\u76844\u4e2a\u65b9\u5411\uff0c\u7528bfs\u6c42\u51fa\u8ddd\u79bb\uff0c\u6ce8\u610f\u8981\u628a\u6307\u5b9a\u53ef\u79fb\u52a8\u5757\u6807\u8bb0\u4e3a\u4e0d\u53ef\u79fb\u52a8\u3002\u8fb9\u662f\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u79fb\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u5f53\u524d\u6307\u5b9a\u53ef\u79fb\u52a8\u5757\u8981\u79fb\u52a8\u5230\u4ed6\u7684\u90a3\u4e2a\u65b9\u5411\uff0c\u76f4\u63a5\u4ece`tt`\u6570\u7ec4\u83b7\u53d6\u7a7a\u767d\u5757\u5728\u4e0d\u7ecf\u8fc7\u6307\u5b9a\u53ef\u79fb\u52a8\u5757\u65f6\u79fb\u52a8\u5230\u90a3\u4e2a\u65b9\u5411\u9700\u8981\u7684\u65f6\u95f4\uff0c\u7136\u540e\u518d\u8ba9\u6307\u5b9a\u53ef\u79fb\u52a8\u5757\u79fb\u52a8\u5230\u7a7a\u767d\u5757\u7684\u4f4d\u7f6e\u3002\u8dd1\u5b8cdij\u540e\u679a\u4e3e\u6240\u67094\u4e2a\u7ec8\u70b9\u72b6\u6001\u7528dis\u66f4\u65b0\u7b54\u6848\u8f93\u51fa\u3002\n\n\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2m^2+nm\\log(nm)q)$\n\n```cpp\n#include <bits/stdc++.h>\n#define inf 0x3f3f3f3f\nusing namespace std;\n\n//\u65b9\u5411\u6570\u7ec4 \nconst int dx[] = {0, 0, 1, -1}, dy[] = {1, -1, 0, 0};\n\n//mp\u662f\u8bfb\u5165\u7684\u5730\u56fe\uff0ctt[i][j][d1][d2]\u662f\u4e0d\u7ecf\u8fc7(i,j)\u7684\u60c5\u51b5\u4e0b\uff0c(i,j)\u7684d1\u65b9\u5411\u8f6c\u79fb\u5230 (i,j)\u7684d2\u65b9\u5411\u7684\u6700\u77ed\u8ddd\u79bb\n//d\u662f\u5e7f\u641c\u6c42\u8ddd\u79bb\u7528\u5230\u7684d\u6570\u7ec4\uff0cdi\u662fdijkstra\u65f6\u7528\u5230\u7684d\u6570\u7ec4 v\u662fdijkstra\u65f6\u7528\u5230\u7684\u6807\u8bb0\u6570\u7ec4 \nint mp[32][32], tt[32][32][4][4], d[32][32], di[32][32][4];\nbool v[32][32][4];\nint n, m, q;//\u5982\u9898 \n\n//dijkstra\u8fc7\u7a0b\u4e2d\u7528\u5230\u7684\u72b6\u6001\u7ed3\u6784\u4f53 \nstruct st\n{\n\tint x, y, d, dis;\n\tst(int x = 0, int y = 0, int d = 0, int dis = 0) : x(x), y(y), d(d), dis(dis)\n\t{\n\t\t//\u6784\u9020\u51fd\u6570 \n\t}\n\tfriend bool operator>(const st &a, const st &b);\n};\n\n//\u83b7\u53d6\u5f53\u524d\u65b9\u5411\u4e0edir\u76f8\u53cd\u7684\u65b9\u5411 \nint rev(int dir)\n{\n//\tprintf(\"(%d,%d) - > (%d,%d)\\n\", dx[dir], dy[dir], dx[dir ^ 1], dy[dir ^ 1]);\n\treturn dir ^ 1;\n}\n\n//\u56e0\u4e3a\u8981\u4f7f\u7528\u5c0f\u6839\u5806\uff0c\u6240\u4ee5\u8fd9\u91cc\u91cd\u8f7d\u4e86\u5927\u4e8e\u53f7 \nbool operator>(const st &a, const st &b)\n{\n\treturn a.dis > b.dis;\n}\n\n//\u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u5408\u6cd5(\u662f\u5426\u80fd\u591f\u8d70\u5230) \nbool valid(int x, int y)\n{\n    return x >= 1 && x <= n && y >= 1 && y <= m && mp[x][y] == 1;\n}\n\n//\u5229\u7528bfs\u7b97\u6cd5\u6c42\u51fa(x1,y1)\u5230(x2,y2)\u7684\u8ddd\u79bb \nint dis(int x1, int y1, int x2, int y2)\n{\n//\tprintf(\"\u6c42\u51fa(%d,%d)\u5230(%d,%d)\u7684\u8ddd\u79bb\\n\", x1, y1, x2, y2); \n    if(x1 == x2 && y1 == y2)\n        return 0;\n    memset(d, 0x3f, sizeof(d));\n    queue<int> qx, qy;//\u961f\u5217 \n    qx.push(x1);\n    qy.push(y1);\n    d[x1][y1] = 0;\n    while (!qx.empty())\n    {\n        int x = qx.front(), y = qy.front();\n        qx.pop();\n        qy.pop();\n        for (int i = 0; i <= 3; i++)\n        {\n            int nx = x + dx[i], ny = y + dy[i];\n            if(valid(nx, ny) && d[nx][ny] >= inf)//\u5f53\u524d\u65b9\u5757\u5408\u6cd5\u4e14\u6ca1\u6709\u88ab\u641c\u7d22 \n            {\n                d[nx][ny] = d[x][y] + 1;\n                if(nx == x2 && ny == y2)//\u5230\u4e86\u7ec8\u70b9 \n                {\n//                \tprintf(\"(%d,%d)\u5230(%d,%d)\u7684\u8ddd\u79bb\u4e3a%d\\n\", x1, y1, x2, y2, d[nx][ny]); \n                    return d[nx][ny];\n                }\n                qx.push(nx);\n                qy.push(ny);\n            }\n        }\n    }\n    return inf;\n}\n\nvoid prework()\n{\n    int x1, y1, x2, y2;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            if (mp[i][j] == 1)\n            {\n                mp[i][j] = 0;//\u6682\u65f6\u5c06(i,j)\u6807\u8bb0\u4e3a\u4e0d\u53ef\u4ee5\u52a8\u7684\u65b9\u5757 \n                for (int src = 0; src <= 3; src++)//\u679a\u4e3ed1 \n                    if (valid(x1 = i + dx[src], y1 = j + dy[src]))//d1\u65b9\u5411\u7684\u5757\u5408\u6cd5 \n                        for (int dest = 0; dest <= 3; dest++)//\u679a\u4e3ed2 \n                            if (valid(x2 = i + dx[dest], y2 = j + dy[dest]))//d2\u65b9\u5411\u7684\u5757\u5408\u6cd5 \n                                tt[i][j][src][dest] = dis(x1, y1, x2, y2);//\u6c42\u4e24\u4e2a\u5757\u95f4\u7684\u8ddd\u79bb \n                mp[i][j] = 1;//\u8fd8\u539f\u6807\u8bb0 \n            }\n}\n\nvoid work()\n{\n\tint ex, ey, sx, sy, tx, ty;//\u5982\u9898 \n\tpriority_queue<st, vector<st>, greater<st> >pq;//\u5c0f\u6839\u5806 \n\tscanf(\"%d%d%d%d%d%d\", &ex, &ey, &sx, &sy, &tx, &ty);\n\tif(sx == tx && sy == ty)//\u4ed6\u672c\u6765\u5c31\u5728\u76ee\u6807\u4f4d\u7f6e \n\t{\n\t\tprintf(\"0\\n\");\n\t\treturn;\n\t}\n\tmemset(di, 0x3f, sizeof(di));//\u521d\u59cb\u5316\u8ddd\u79bb\u6570\u7ec4 \n\tmemset(v, 0, sizeof(v));//\u521d\u59cb\u5316 \n\tmp[sx][sy] = 0;///\u6ce8\u610f\u8981\u628a\u6307\u5b9a\u53ef\u79fb\u52a8\u5757\u6807\u8bb0\u4e3a\u4e0d\u53ef\u79fb\u52a8 \n\tfor (int i = 0; i <= 3; i++)//\u679a\u4e3e\u7a7a\u767d\u683c\u5b50\u53bb\u6307\u5b9a\u53ef\u79fb\u52a8\u5757\u7684\u90a3\u4e2a\u65b9\u5411 \n\t{\n\t\tint nx = sx + dx[i], ny = sy + dy[i];\n\t\tif (valid(nx, ny))//\u8fd9\u4e2a\u4f4d\u7f6e\u5408\u6cd5 \n\t\t{\n\t\t\tint ds = dis(ex, ey, nx, ny);//\u8ba1\u7b97\u8ddd\u79bb \n\t\t\tif (ds != -1)//\u8fd9\u4e2a\u597d\u50cf\u6ca1\u7528(\u56e0\u4e3a\u6211\u4e00\u5f00\u59cb\u8bbe\u4e0d\u53ef\u5230\u8fbe\u4e3a-1\u51fa\u9505\u4e86\uff0c\u5c31\u8be5\u4e3a\u4e86inf) \n\t\t\t{\n\t\t\t\tpq.push(st(sx, sy, i, ds));//\u6254\u8fdb\u5c0f\u6839\u5806\uff0cdij\u7528 \n\t\t\t\tdi[sx][sy][i] = ds;//\u66f4\u65b0dijkstra\u7684di\u6570\u7ec4 \n\t\t\t}\n\t\t}\n\t}\n\tmp[sx][sy] = 1;//\u628a\u6307\u5b9a\u53ef\u79fb\u52a8\u5757\u4e0d\u53ef\u79fb\u52a8\u7684\u6807\u8bb0\u8fd8\u539f \n\twhile (!pq.empty())//dijkstra\u7684\u5957\u8def \n\t{\n\t\tst now = pq.top();\n\t\tpq.pop();\n//\t\tprintf(\"\u8fea\u6770\u65af\u7279\u62c9 %d %d (%d,%d) %d\\n\", now.x, now.y, dx[now.d], dy[now.d], now.dis); \n\t\tif (v[now.x][now.y][now.d] == 1)\n\t\t\tcontinue;\n\t\tv[now.x][now.y][now.d] = 1;\n\t\tint &x = now.x, &y = now.y; \n\t\tfor (int i = 0; i <= 3; i++)\n\t\t{\n\t\t\tint nx = x + dx[i], ny = y + dy[i];//\u8ba9\u7a7a\u767d\u5757\u79fb\u52a8\u5230(nx,ny)\u7136\u540e\u8ba9\u6307\u5b9a\u53ef\u79fb\u52a8\u5757\u79fb\u52a8\u5230\u7a7a\u767d\u5757\u4f4d\u7f6e \n//\t\t\tprintf(\"\u4e0b\u4e00\u4e2a\u4e3a(%d,%d)\\n\", nx, ny); \n\t\t\tif (valid(nx, ny))//(nx,ny)\u662f\u5408\u6cd5\u7684 \n\t\t\t{\n//\t\t\t\tprintf(\"(%d,%d)\u5408\u6cd5\\n\", nx, ny); \n\t\t\t\tint ds = tt[x][y][now.d][i];//\u76f4\u63a5\u4ecett\u6570\u7ec4\u83b7\u53d6\u7a7a\u767d\u683c\u5b50\u79fb\u52a8\u7684\u8ddd\u79bb \n\t\t\t\tif (v[nx][ny][rev(i)] == 0 && now.dis + ds + 1 < di[nx][ny][rev(i)])//dij\u5957\u8def\uff0c\u66f4\u65b0\u8ddd\u79bb \n\t\t\t\t{\n//\t\t\t\t\tprintf(\"\u7531(%d,%d,%d,%d,%d)\u5230(%d,%d,%d,%d,%d)\\n\", now.x, now.y, dx[now.d], dy[now.d], now.dis, nx, ny, dx[rev(i)], dy[rev(i)], now.dis + ds + 1); \n\t\t\t\t\tdi[nx][ny][rev(i)] = now.dis + ds + 1;\n\t\t\t\t\tpq.push(st(nx, ny, rev(i), now.dis + ds + 1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint mind = inf;\n\tfor (int i = 0; i <= 3; i++)//\u679a\u4e3e\u76ee\u6807\u4f4d\u7f6e\u76844\u4e2a\u65b9\u5411\u7684\u72b6\u6001\u66f4\u65b0\u6700\u5c0f\u503c \n\t{\n\t\tmind = min(mind, di[tx][ty][i]);\n//\t\tprintf(\"di[%d][%d][%d] = %d\\n\", tx, ty, i, di[tx][ty][i]);\n\t}\n\tif (mind == inf)//\u6700\u5c0f\u503c\u6ca1\u6709\u88ab\u66f4\u65b0\uff0c\u8bf4\u660e\u76ee\u6807\u4f4d\u7f6e\u4e0d\u53ef\u5230\u8fbe \n\t\tprintf(\"-1\\n\");\n\telse\n\t\tprintf(\"%d\\n\", mind);\n}\n\n//\u4e3b\u51fd\u6570 \nint main()\n{\n    scanf(\"%d%d%d\", &n, &m, &q);\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            scanf(\"%d\", &mp[i][j]);\n    prework();\n    for (int i = 1; i <= q; i++)\n    \twork();\n    return 0;\n}\n```\n\n\u8ba9\u6211\u4eec\u4e00\u8d77\u819c\u62dc\u5927\u4f6c\u6797\u745e\u5802@[olinr](https://www.luogu.org/space/show?uid=88460&myuid=13091&follow=1)",
        "postTime": 1535503599,
        "uid": 13091,
        "name": "ghj1222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "# \u534e\u5bb9\u9053\uff08NOIP2013 Day2 T3\n\n## \u9898\u610f\uff1a\n\n\u6e38\u620f\u89c4\u5219\u5982\u4e0b\n\n1. \u5728\u4e00\u4e2a $n \\times m$ \u68cb\u76d8\u4e0a\u6709 $n \\times m$ \u4e2a\u683c\u5b50\uff0c\u5176\u4e2d\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u683c\u5b50\u662f\u7a7a\u767d\u7684\uff0c\u5176\u4f59 $n \\times m-1$ \u4e2a\u683c\u5b50\u4e0a\u6bcf\u4e2a\u683c\u5b50\u4e0a\u6709\u4e00\u4e2a\u68cb\u5b50\uff0c\u6bcf\u4e2a\u68cb\u5b50\u7684\u5927\u5c0f\u90fd\u662f $1 \\times 1$ \u7684\uff1b\n2. \u6709\u4e9b\u68cb\u5b50\u662f\u56fa\u5b9a\u7684\uff0c\u6709\u4e9b\u68cb\u5b50\u5219\u662f\u53ef\u4ee5\u79fb\u52a8\u7684\uff1b\n3. \u4efb\u4f55\u4e0e\u7a7a\u767d\u7684\u683c\u5b50\u76f8\u90bb\uff08\u6709\u516c\u5171\u7684\u8fb9\uff09\u7684\u683c\u5b50\u4e0a\u7684\u68cb\u5b50\u90fd\u53ef\u4ee5\u79fb\u52a8\u5230\u7a7a\u767d\u683c\u5b50\u4e0a\u3002\n\n\u6e38\u620f\u7684\u76ee\u7684\u662f\u628a\u67d0\u4e2a\u6307\u5b9a\u4f4d\u7f6e\u53ef\u4ee5\u6d3b\u52a8\u7684\u68cb\u5b50\u79fb\u52a8\u5230\u76ee\u6807\u4f4d\u7f6e\u3002\n\n\u7ed9\u5b9a\u4e00\u4e2a\u68cb\u76d8\uff0c\u8fdb\u884c $q$ \u6b21\u6e38\u620f\uff0c\u56fa\u5b9a\u7684\u683c\u5b50\u4e0d\u4f1a\u53d8\u5316\uff0c\u4f46\u662f\u521d\u59cb\u683c\u5b50\uff0c\u76ee\u6807\u683c\u5b50\uff0c\u521d\u59cb\u7a7a\u767d\u683c\u5b50\u4f1a\u53d1\u751f\u53d8\u5316\u3002\n\n\u6c42\u51fa\u79fb\u52a8\u65f6\u6700\u5c0f\u7684\u6b65\u6570\u3002\n\n\u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff0c$1 \\le n, m \\le 30,q \\le 500$ \u3002\n\n## \u5206\u6790\n\n\u9996\u5148\u6211\u4eec\u6765\u8003\u8651\u68cb\u76d8\u7684\u72b6\u6001\u662f\u5982\u4f55\u51b3\u5b9a\u7684\u3002\n\n\u6bd4\u8f83\u663e\u7136\u7684\u53d1\u73b0\uff0c\u4e00\u4e2a\u5c40\u9762\u53ea\u5bf9\u5e94\u4e86\u4e0d\u540c\u4f4d\u7f6e\u7684 **\u7a7a\u767d\u683c\u5b50** \u548c **\u7ed9\u5b9a\u68cb\u5b50** \u3002\n\n\u4f46\u662f\uff0c\u72b6\u6001\u662f\u4e0d\u662f\u592a\u591a\u4e86\u2026\u2026\u76f4\u63a5\u66b4\u641c\u53ef\u80fd\u4f1a\u6302\u2026\u2026\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u6765\u8003\u8651\u5982\u4f55\u8ba9\u7ed9\u5b9a\u68cb\u5b50\u53d1\u751f\u79fb\u52a8\u3002\n\n\u5f53\u4e14\u4ec5\u5f53\uff0c**\u7a7a\u767d\u683c\u5b50** \u5728 **\u7ed9\u5b9a\u68cb\u5b50** \u65c1\u8fb9\uff0c\u8fd9\u6837\u624d\u80fd\u4f7f\u5f97 **\u7a7a\u767d\u683c\u5b50** \u548c**\u7ed9\u5b9a\u68cb\u5b50**\u4ea4\u6362\u4f4d\u7f6e\u3002\n\n\u800c\u4e14\u5728\u4ea4\u6362\u524d\u548c\u4ea4\u6362\u540e\uff0c**\u7a7a\u767d\u683c\u5b50** \u603b\u662f\u548c **\u7ed9\u5b9a\u68cb\u5b50** \u76f8\u90bb\u3002\n\n\u90a3\u4e48 **\u7ed9\u5b9a\u68cb\u5b50** \u8981\u600e\u4e48\u79fb\u52a8\u5462\uff1f\u8111\u8865\u4e00\u4e0b\uff0c\u5e94\u8be5\u662f **\u7a7a\u767d\u683c\u5b50** \u5e26\u7740 **\u7ed9\u5b9a\u68cb\u5b50** \u5230\u5904\u8dd1\uff0c\u79fb\u52a8\u540e\uff0c**\u7a7a\u767d\u683c\u5b50** \u518d\u5305\u4e00\u5708\u5230 **\u7ed9\u5b9a\u68cb\u5b50** \u9700\u8981\u7ee7\u7eed\u79fb\u52a8\u7684\u65b9\u5411\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u53ea\u8003\u8651  **\u7a7a\u767d\u683c\u5b50** \u548c **\u7ed9\u5b9a\u68cb\u5b50** \u76f8\u90bb\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u72b6\u6001\u6570\u5c31\u53d8\u5c11\u4e86\uff0c\u53ef\u4ee5\u8bd5\u7740\u8fdb\u4e00\u6b65\u8003\u8651\u5982\u4f55\u5904\u7406\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 **\u7ed9\u5b9a\u68cb\u5b50** \u7684\u5750\u6807\u548c **\u7a7a\u767d\u683c\u5b50** \u5728  **\u7ed9\u5b9a\u68cb\u5b50** \u7684\u65b9\u5411\u6765\u51b3\u5b9a\u4e00\u4e2a\u72b6\u6001\u3002\n\n\u5728\u5f00\u59cb\u7ed9\u4ee3\u7801\u524d\uff0c\u5173\u4e8e\u53d8\u91cf\u540d\u79f0\u7684\u89e3\u91ca\uff1a\n\n```cpp\nconst int fx[4][2]={{0,-1},{-1,0},{0,1},{1,0}};//\u65b9\u5411\uff0cf\u548cf^2\u662f\u5bf9\u7acb\u65b9\u5411\uff08\u81ea\u5df1\u7b97\u7b97\uff09\uff08\u4e00\u5f00\u59cb\u6211\u8fd8\u7b97\u9519\u4e86\u5199\u6210f^1\u7136\u540e\u8c03\u4e86\u4e00\u5929\u2026\u2026\uff09\nconst int maxn=30;//\u5982\u9898\nconst int maxs=maxn*maxn;//\u4e00\u5f20\u56fe\u6700\u591a\u7684\u70b9\nconst int maxp=maxs<<2;//\u6700\u591a\u7684\u72b6\u6001\u6570\uff08\u6bcf\u4e2a\u70b9\u90fd\u6709\u56db\u4e2a\u65b9\u5411\u53ef\u80fd\u5b58\u5728\u7a7a\u767d\u683c\u5b50\uff09\nconst int inf=0x3f3f3f3f;\n\nint n,m,q;\n\nbool ma[maxn+5][maxn+5];//\u8bfb\u5165\u65f6\u53ef\u4ee5\u79fb\u52a8\u7684\u683c\u5b50\n```\n\n\n\n```cpp\ninline int point(int x,int y,int f){\n\treturn (x-1)*m+y-1+f*maxs;\n}\n```\n\n\n\n\u90a3\u4e48\uff0c\u4e00\u4e2a\u72b6\u6001\u5c31\u88ab\u5904\u7406\u6210\u4e00\u4e2a\u6574\u6570\u6765\u8868\u793a\u4e86\u3002\n\n\u65e2\u7136\u8f6c\u79fb\u662f\u5728\u4e0d\u540c\u72b6\u6001\u95f4\u53d1\u751f\u7684\uff0c\u6211\u4eec\u8003\u8651\u5728\u4e0d\u540c\u72b6\u6001\u95f4\u5efa\u8fb9\u3002\n\n\u5f53\u4ea4\u6362\u76f8\u90bb\u7684 **\u7a7a\u767d\u683c\u5b50** \u548c**\u7ed9\u5b9a\u68cb\u5b50**\u65f6\n\n```cpp\nfor(register int f=0;f<4;f++){\n    int kx=x+fx[f][0];\n    int ky=y+fx[f][1];\n    if(!ma[kx][ky])\n\t\tcontinue;\n    add(point(x,y,f),point(kx,ky,f^2),1);\n}\n```\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5efa\u7acb\u597d\u79fb\u52a8\u68cb\u5b50\u65f6\u7684\u4ee3\u4ef7\u4e86\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u8fd8\u8981\u8003\u8651 \u201d**\u7a7a\u767d\u683c\u5b50** \u518d\u5305\u4e00\u5708\u5230 **\u7ed9\u5b9a\u68cb\u5b50** \u9700\u8981\u7ee7\u7eed\u79fb\u52a8\u7684\u65b9\u5411\u201c \u7684\u4ee3\u4ef7\u3002\n\n\u53ef\u4ee5\u901a\u8fc7\u5e7f\u641c\u641c\u5230\u6700\u8fd1\u7684\u8ddd\u79bb\uff0c\u5f53\u7136\u8fd9\u4e2a\u8def\u5f84\u4e0d\u80fd\u901a\u8fc7 **\u7ed9\u5b9a\u68cb\u5b50** \u4e0d\u80fd\u9020\u6210 **\u7ed9\u5b9a\u68cb\u5b50** \u7684\u79fb\u52a8\u3002\n\n```cpp\ninline int dis_to(int sx,int sy,int tx,int ty){//\u6807\u51c6\u5e7f\u641c\n\tbool use[maxn+5][maxn+5];\n\tmemset(use,0,sizeof use);\n\tqueue<pair<pair<int,int>,int> >q;\n\tq.push(make_pair(make_pair(sx,sy),0));\n\twhile(!q.empty()){\n\t\tint x=q.front().first.first;\n\t\tint y=q.front().first.second;\n\t\tint d=q.front().second;\n\t\tuse[x][y]=1;\n\t\tq.pop();\n\t\tif(x==tx && y==ty)\n\t\t\treturn d;\n\t\tfor(register int f=0;f<4;f++){\n\t\t\tint xx=x+fx[f][0];\n\t\t\tint yy=y+fx[f][1];\n\t\t\tif(!use[xx][yy] && ma[xx][yy])\n\t\t\t\tq.push(make_pair(make_pair(xx,yy),d+1));\n\t\t}\n\t}\n\treturn inf;\n}\n\ninline void add_edge(int x,int y){\n\tfor(register int f=0;f<4;f++){\n\t\tint kx=x+fx[f][0];\n\t\tint ky=y+fx[f][1];\n\t\tif(!ma[kx][ky])\n\t\t\tcontinue;\n\t\tadd(point(x,y,f),point(kx,ky,f^2),1);//\u5408\u5e76\u4e0a\u6587\u7684\u52a0\u8fb9\n\t\tfor(register int ff=0;ff<4;ff++){\n\t\t\tint xx=x+fx[ff][0];\n\t\t\tint yy=y+fx[ff][1];\n\t\t\tif(!ma[xx][yy] || f==ff)\n\t\t\t\tcontinue;\n\t\t\tma[x][y]=0;\n\t\t\tadd(point(x,y,f),point(x,y,ff),dis_to(kx,ky,xx,yy));\n            //(kx,ky) \u7a7a\u767d\u683c\u5b50\u7684\u4e00\u4e2a\u65b9\u5411 (xx,yy)\u7a7a\u767d\u683c\u5b50\u7684\u53e6\u5916\u4e00\u4e2a\u65b9\u5411\u3002\n\t\t\tma[x][y]=1;\n\t\t}\n\t}\n\treturn;\n}\n```\n\n\u5efa\u597d\u8fb9\u540e\uff0c\u5c31\u6210\u4e3a\u4e00\u4e2a\u56fe\u4e86\uff0c\u600e\u4e48\u8ba1\u7b97\u6700\u5c0f\u4ee3\u4ef7\uff1f`spfa\uff0c\u5b83\u53c8\u6d3b\u4e86`\n\n\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\u8ba1\u7b97\u6700\u5c0f\u4ee3\u4ef7\uff0c\u8d77\u98de\u3002\u521d\u59cb\u7a7a\u767d\u683c\u5b50\u5230\u7ed9\u5b9a\u68cb\u5b50\u7684\u6b65\u6570\u53ef\u4ee5\u518d\u6b21\u4f7f\u7528 `dis_to`  \u5148\u8ba1\u7b97\u51fa\u6765\u518d\u52a0\u4e0a\u3002\n\n\n\n```cpp\ninline int work(int sx,int sy,int tx,int ty,int ex,int ey){\n\tif(sx==tx && sy==ty)//\u7ec6\u8282\uff01\uff01\uff01\n\t\treturn 0;\n\tint ans=inf;\n\tqueue<int>q;\n\tbool vis[maxp+5];\n\tint dis[maxp+5];\n\tfor(register int f=0;f<4;f++){//\u5f00\u59cbspfa\u65f6\u7a7a\u767d\u683c\u5b50\u7684\u65b9\u5411\n\t\tint xx=sx+fx[f][0];\n\t\tint yy=sy+fx[f][1];//\u7a7a\u767d\u683c\u5b50\u7684\u5750\u6807\n\t\tif(!ma[xx][yy])\n\t\t\tcontinue;\n\t\tmemset(vis,0,sizeof vis);\n\t\tmemset(dis,0x3f,sizeof dis);\n\t\tma[sx][sy]=0;//\u4e00\u6837\u7684\u5148\u6807\u8bb0\u4e3a\u4e0d\u80fd\u7ecf\u8fc7\n\t\tint ddd=dis_to(ex,ey,xx,yy);//\u8fd9\u91cc\u5148\u8ba1\u7b97\u7a7a\u767d\u70b9\u5230\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u4ee3\u4ef7\u3002\n\t\tma[sx][sy]=1;\n\t\tint s=point(sx,sy,f);\n\t\tdis[s]=0;\n\t\tq.push(s);\n\t\twhile(!q.empty()){//\u6807\u51c6spfa\n\t\t\tint x=q.front();\n\t\t\tq.pop();\n\t\t\tvis[x]=0;\n\t\t\tfor(register int i=head[x];i;i=e[i].next){\n\t\t\t\tint y=e[i].to;\n\t\t\t\tint z=e[i].v;\n\t\t\t\tif(dis[y]>dis[x]+z){\n\t\t\t\t\tdis[y]=dis[x]+z;\n\t\t\t\t\tif(!vis[y]){\n\t\t\t\t\t\tq.push(y);\n\t\t\t\t\t\tvis[y]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(register int ff=0;ff<4;ff++)\n\t\t\tans=min(ans,dis[point(tx,ty,ff)]+ddd);//\u8ba1\u7b97\u7ed3\u675f\u70b9\u7684\u4ee3\u4ef7\n\t}\n\treturn ans==inf ? -1 : ans;\n}\n```\n\n## \u5b8c\u6574\u4ee3\u7801\n\n\u771f\u7684\u8fd9\u9898\u4e3a\u4ec0\u4e48\u65f6\u7d2b\u7684\u6211\u771f\u7684\u89c9\u5f97\u5927\u90e8\u5206\u65f6\u4ee3\u7801\u7684\u95ee\u9898\u2026\u2026\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int fx[4][2]={{0,-1},{-1,0},{0,1},{1,0}};\nconst int maxn=30;\nconst int maxs=maxn*maxn;\nconst int maxp=maxs<<2;\nconst int inf=0x3f3f3f3f;\n\nint n,m,q;\n\nbool ma[maxn+5][maxn+5];\n\ninline int point(int x,int y,int f){\n\treturn (x-1)*m+y-1+f*maxs;\n}\n\nstruct edge{\n\tint next,to,v;\n}e[maxp<<4];\nint head[maxp+5],etot;\ninline void add(int x,int y,int z){\n\tetot++;\n\te[etot].next=head[x];\n\te[etot].to=y;\n\te[etot].v=z;\n\thead[x]=etot;\n\treturn;\n}\n\ninline int dis_to(int sx,int sy,int tx,int ty){\n\tbool use[maxn+5][maxn+5];\n\tmemset(use,0,sizeof use);\n\tqueue<pair<pair<int,int>,int> >q;\n\tq.push(make_pair(make_pair(sx,sy),0));\n\twhile(!q.empty()){\n\t\tint x=q.front().first.first;\n\t\tint y=q.front().first.second;\n\t\tint d=q.front().second;\n\t\tuse[x][y]=1;\n\t\tq.pop();\n\t\tif(x==tx && y==ty)\n\t\t\treturn d;\n\t\tfor(register int f=0;f<4;f++){\n\t\t\tint xx=x+fx[f][0];\n\t\t\tint yy=y+fx[f][1];\n\t\t\tif(!use[xx][yy] && ma[xx][yy])\n\t\t\t\tq.push(make_pair(make_pair(xx,yy),d+1));\n\t\t}\n\t}\n\treturn inf;\n}\n\ninline void add_edge(int x,int y){\n\tfor(register int f=0;f<4;f++){\n\t\tint kx=x+fx[f][0];\n\t\tint ky=y+fx[f][1];\n\t\tif(!ma[kx][ky])\n\t\t\tcontinue;\n\t\tadd(point(x,y,f),point(kx,ky,f^2),1);\n\t\tfor(register int ff=0;ff<4;ff++){\n\t\t\tint xx=x+fx[ff][0];\n\t\t\tint yy=y+fx[ff][1];\n\t\t\tif(!ma[xx][yy] || f==ff)\n\t\t\t\tcontinue;\n\t\t\tma[x][y]=0;\n\t\t\tadd(point(x,y,f),point(x,y,ff),dis_to(kx,ky,xx,yy));\n\t\t\tma[x][y]=1;\n\t\t}\n\t}\n\treturn;\n}\n\ninline void make_gragh(){\n\tfor(register int i=1;i<=n;i++)\n\t\tfor(register int j=1;j<=m;j++)\n\t\t\tif(ma[i][j])\n\t\t\t\tadd_edge(i,j);\n\treturn;\n}\n\ninline int work(int sx,int sy,int tx,int ty,int ex,int ey){\n\tif(sx==tx && sy==ty)\n\t\treturn 0;\n\tint ans=inf;\n\tqueue<int>q;\n\tbool vis[maxp+5];\n\tint dis[maxp+5];\n\tfor(register int f=0;f<4;f++){\n\t\tint xx=sx+fx[f][0];\n\t\tint yy=sy+fx[f][1];\n\t\tif(!ma[xx][yy])\n\t\t\tcontinue;\n\t\tmemset(vis,0,sizeof vis);\n\t\tmemset(dis,0x3f,sizeof dis);\n\t\tma[sx][sy]=0;\n\t\tint ddd=dis_to(ex,ey,xx,yy);\n\t\tma[sx][sy]=1;\n\t\tint s=point(sx,sy,f);\n\t\tdis[s]=0;\n\t\tq.push(s);\n\t\twhile(!q.empty()){\n\t\t\tint x=q.front();\n\t\t\tq.pop();\n\t\t\tvis[x]=0;\n\t\t\tfor(register int i=head[x];i;i=e[i].next){\n\t\t\t\tint y=e[i].to;\n\t\t\t\tint z=e[i].v;\n\t\t\t\tif(dis[y]>dis[x]+z){\n\t\t\t\t\tdis[y]=dis[x]+z;\n\t\t\t\t\tif(!vis[y]){\n\t\t\t\t\t\tq.push(y);\n\t\t\t\t\t\tvis[y]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(register int ff=0;ff<4;ff++)\n\t\t\tans=min(ans,dis[point(tx,ty,ff)]+ddd);\n\t}\n\treturn ans==inf ? -1 : ans;\n}\n\ninline int read(){\n\tint x=0,c=getchar();\n\twhile(!isdigit(c))\n\t\tc=getchar();\n\twhile(isdigit(c)){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x;\n}\n\nint main(){\n#ifdef ZTZ_CPP\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n#endif\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(register int i=1;i<=n;i++)\n\t\tfor(register int j=1;j<=m;j++)\n\t\t\tma[i][j]=read();\n\tmake_gragh();\n\tfor(register int i=1;i<=q;i++){\n\t\tint ex=read();\n\t\tint ey=read();\n\t\tint sx=read();\n\t\tint sy=read();\n\t\tint tx=read();\n\t\tint ty=read();\n\t\tprintf(\"%d\\n\",work(sx,sy,tx,ty,ex,ey));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1604240399,
        "uid": 18181,
        "name": "ztz_cpp",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[$luogu$](https://www.luogu.org/problem/P1979).\n# \u9898\u89e3\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u9996\u5148\u5206\u6790\u4e00\u679a\u68cb\u5b50\u662f\u5982\u4f55\u79fb\u52a8\u7684. \u5047\u8bbe\u4e0b\u56fe\u4e2d\u84dd\u8272\u4e3a\u7a7a\u767d\u683c\u5b50, \u7ea2\u8272\u68cb\u5b50\u60f3\u8981\u5411\u53f3\u79fb\u52a8:  \n![move1.png](https://i.loli.net/2019/11/10/dhpP7Ac9tVYbiZs.png)  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b2c\u4e00\u6b65, \u7a7a\u767d\u683c\u5b50\u5df2\u7ecf\u5728\u68cb\u5b50\u53f3\u4fa7, \u6211\u4eec\u79fb\u52a8\u68cb\u5b50, \u90a3\u4e48\u7a7a\u767d\u683c\u5b50\u4e0e\u68cb\u5b50\u5c31\u4ea4\u6362\u4e86\u4f4d\u7f6e.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b2c\u4e8c\u6b65, \u60f3\u8981\u7ee7\u7eed\u5411\u53f3\u79fb\u52a8, \u5c31\u5fc5\u987b\u8ba9\u7a7a\u767d\u683c\u5b50\u518d\u6b21\u56de\u5230\u68cb\u5b50\u53f3\u4fa7, \u4e5f\u5373\u662f\u8ba9\u7a7a\u767d\u683c\u5b50\u6cbf\u4e0a\u65b9\u6216\u4e0b\u65b9\u7684\u8def\u5f84, \u6291\u6216\u662f\u5176\u5b83\u7684\u8def\u5f84\u79fb\u52a8\u5230\u68cb\u5b50\u53f3\u4fa7\u7070\u8272\u683c\u5b50\u7684\u4f4d\u7f6e.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u91cd\u590d\u4e00\u4e8c\u4e24\u6b65, \u6211\u4eec\u5c31\u80fd\u8ba9\u68cb\u5b50\u5c3d\u53ef\u80fd\u5730\u968f\u610f\u79fb\u52a8\u4e86.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u501f\u6b64, \u6211\u4eec\u8003\u8651\u5c06\u7b54\u6848\u62c6\u5206\u4e3a $(1+$\u7b2c\u4e8c\u6b65\u7684\u6700\u5c11\u6b65\u6570$)\\times k$. \u7531\u4e8e\u68cb\u76d8\u7684\u5927\u4f53\u5f62\u72b6\u4e0d\u4f1a\u6539\u53d8, \u6211\u4eec\u5728\u8f93\u5165\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u5904\u7406\u51fa**\u7a7a\u683c\u7d27\u8d34\u5728\u67d0\u4e2a\u68cb\u5b50\u7684\u67d0\u4e2a\u65b9\u5411, \u5230\u8fbe\u6b64\u68cb\u5b50\u5176\u5b83\u65b9\u5411\u7684\u6700\u77ed\u8def**, \u518d\u5bf9\u4e8e\u6bcf\u6b21\u8f93\u5165, \u5148\u8ba9\u7a7a\u683c\u4ece\u521d\u59cb\u4f4d\u7f6e$(EX,EY)$\u9760\u8fd1$(SX,SY)$, \u518d\u8dd1\u6700\u77ed\u8def\u5373\u53ef.\n# \u4ee3\u7801\n```cpp\n//#define _DEBUG \"Tianyi bless me!\"\n\n#include <queue>\n#include <cstdio>\n#include <cstring>\n\n#define Int register int\n\nusing namespace std;\n\ntypedef pair<int, int> pii;\n\nconst int MAXN = 30, INF = 0x3f3f3f3f, MOV[4][2] = { { -1, 0 }, { 0, 1 }, { 1, 0 }, { 0, -1 } }; // \u6ce8\u610f\u540c\u4e00\u65b9\u5411\u7f16\u53f7, \u8fd9\u91cc\u662f\u4e0a\u53f3\u4e0b\u5de6.\nint n, m, q, EX, EY, SX, SY, TX, TY, Dist[MAXN + 5][MAXN + 5] = {};\nint Cnte, Head[MAXN * MAXN * 4 + 5] = {}, D[MAXN * MAXN * 4 + 5] = {}; // \u8fd9\u4e9b\u53d8\u91cf\u7528\u4e8e\u5efa\u7acb\u56fe\u8bba\u6a21\u578b.\nbool mp[MAXN + 5][MAXN + 5] = {}, Vis[MAXN * MAXN * 4 + 5] = {}; // Vis\u662fDijkstra\u4e2d\u7684\u677e\u5f1b\u6807\u8bb0.\npriority_queue<pii, vector<pii>, greater<pii> > Q2;\n\nstruct Node { int x, y; };\nqueue<Node> Q;\n\nstruct Edge { int To, Cost, _nxt; } Graph[MAXN * MAXN * 4 * 5 * 2 + 5] = {}; // \u56fe.\n\ninline void Link ( const int From, const int To, const int Cost ) {\n\tGraph[++ Cnte] = { To, Cost, Head[From] };\n\tHead[From] = Cnte;\n}\n\ninline int Indx ( const int i, const int j ) { return ( i - 1 ) * m + j << 2; } // \u5bf9\u7ed3\u70b9\u8fdb\u884cHash\u5904\u7406, \u6bcf\u4e2a\u70b9\u5206\u4e3a\u4e0a\u53f3\u4e0b\u5de6\u56db\u79cd.\n\ninline bool Inside ( const int i, const int j ) { return 1 <= i && i <= n && 1 <= j && j <= m; }\n\ninline int Abs ( const int x ) { return x < 0 ? ~ x + 1 : x; }\n\ninline int Min ( const int a, const int b ) { return a < b ? a : b; }\n\ninline void Reach ( const int ex, const int ey, const int px, const int py, const int d ) { // \u66b4\u529bBFS, \u6c42\u51fa\u7b2c\u4e8c\u6b65\u7684\u6700\u77ed\u8def.\n\tfor ( Int i = 1; i <= n; ++ i ) {\n\t\tfor ( Int j = 1; j <= m; ++ j ) {\n\t\t\tDist[i][j] = -1;\n\t\t}\n\t}\n\twhile ( ! Q.empty () ) Q.pop ();\n\tDist[ex][ey] = 0, Dist[px][py] = 1;\n\tQ.push ( { ex, ey } );\n\twhile ( ! Q.empty () ) {\n\t\tNode p = Q.front (); Q.pop ();\n\t\tfor ( Int i = 0; i ^ 4; ++ i ) {\n\t\t\tint nx = p.x + MOV[i][0], ny = p.y + MOV[i][1];\n\t\t\tif ( Inside ( nx, ny ) && mp[nx][ny] && ! ~ Dist[nx][ny] ) {\n\t\t\t\tQ.push ( { nx, ny } );\n\t\t\t\tDist[nx][ny] = Dist[p.x][p.y] + 1;\n\t\t\t}\n\t\t}\n\t}\n\tif ( ! ~ d ) return ; // d\u662f\u7a7a\u683c\u5728\u68cb\u5b50\u539f\u6765\u7684\u65b9\u5411\u7f16\u53f7, \u5982\u679cd=-1, \u8868\u793a\u672c\u6b21BFS\u4ec5\u7528\u4e8e\u63a5\u8fd1(px,py), \u4e0d\u5efa\u8fb9.\n#ifdef _DEBUG\n\tprintf ( \"( %d, %d ) close to ( %d, %d ):\\n\", ex, ey, px, py );\n#endif\n\tint Ind = Indx ( px, py );\n\tfor ( Int i = 0; i ^ 4; ++ i ) {\n\t\tint x = px + MOV[i][0], y = py + MOV[i][1];\n\t\tif ( Inside ( x, y ) && mp[x][y] && ~ Dist[x][y] ) {\n\t\t#ifdef _DEBUG\n\t\t\tprintf ( \"( %d, %d ): %d\\n\", x, y, Dist[x][y] );\n\t\t#endif\n\t\t\tLink ( Ind + d, Ind + i, Dist[x][y] );\n\t\t}\n\t}\n\tLink ( Ind + d, Indx ( ex, ey ) + ( d + 2 ) % 4, 1 );\n}\n\ninline void Dijkstra ( const int sx, const int sy ) { // \u6700\u77ed\u8def.\n\tfor ( Int i = 1; i <= Indx ( n, m ) + 3; ++ i ) Vis[i] = false, D[i] = INF;\n\twhile ( ! Q.empty () ) Q.pop ();\n\tfor ( Int i = 0; i ^ 4; ++ i ) {\n\t\tint x = sx + MOV[i][0], y = sy + MOV[i][1];\n\t\tif ( Inside ( x, y ) && ~ Dist[x][y] ) {\n\t\t\tQ2.push ( { D[Indx ( sx, sy ) + i] = Dist[x][y], Indx ( sx, sy ) + i } ); // \u8ba9(EX,EY)\u5230\u8fbe(SX,SY)\u7684\u56db\u4e2a\u65b9\u5411.\n\t\t}\n\t}\n\twhile ( ! Q2.empty () ) {\n\t\tpii p = Q2.top (); Q2.pop ();\n\t\tif ( Vis[p.second] ) continue;\n\t\tVis[p.second] = true;\n\t\tfor ( Int i = Head[p.second], v; i; i = Graph[i]._nxt ) {\n\t\t\tv = Graph[i].To;\n\t\t\tif ( ! Vis[v = Graph[i].To] && D[v] > p.first + Graph[i].Cost ) {\n\t\t\t\tQ2.push ( { D[v] = p.first + Graph[i].Cost, v } );\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void Work () {\n//\tfreopen ( \"data.out\", \"w\", stdout );\n\tscanf ( \"%d %d %d\", &n, &m, &q );\n\tfor ( Int i = 1; i <= n; ++ i ) {\n\t\tfor ( Int j = 1, t; j <= m; ++ j ) {\n\t\t\tscanf ( \"%d\", &t );\n\t\t\tmp[i][j] = t;\n\t\t}\n\t}\n\tfor ( Int i = 1; i <= n; ++ i ) { // \u9884\u5904\u7406.\n\t\tfor ( Int j = 1; j <= m; ++ j ) {\n\t\t\tif ( mp[i][j] ) {\n\t\t\t\tfor ( Int k = 0; k ^ 4; ++ k ) {\n\t\t\t\t\tint x = i + MOV[k][0], y = j + MOV[k][1];\n\t\t\t\t\tif ( Inside ( x, y ) && mp[x][y] ) {\n\t\t\t\t\t\tReach ( x, y, i, j, k );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor ( ; q --; ) {\n\t\tscanf ( \"%d %d %d %d %d %d\", &EX, &EY, &SX, &SY, &TX, &TY );\n\t\tif ( SX == TX && SY == TY ) { puts ( \"0\" ); continue; }\n\t\tReach ( EX, EY, SX, SY, -1 ); // \u63a5\u8fd1(SX,SY).\n\t\tDijkstra ( SX, SY );\n\t\tint Ans = INF;\n\t\tfor ( Int i = 0; i ^ 4; ++ i ) { // \u6c42\u6700\u5c0f\u6b65\u6570.\n\t\t\tint x = TX + MOV[i][0], y = TY + MOV[i][1];\n\t\t\tif ( Inside ( x, y ) && mp[x][y] ) Ans = Min ( Ans, D[Indx ( TX, TY ) + i] );\n\t\t}\n\t\tprintf ( \"%d\\n\", Ans ^ INF ? Ans : -1 );\n\t}\n}\n\nint main () {\n\tWork ();\n\treturn 0;\n}\n```",
        "postTime": 1573355882,
        "uid": 123807,
        "name": "Rainybunny",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "\u6211\u8fd9\u91cc\u63a8\u8350\u4e00\u4e0b[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/szr666--blog/)\n\n\u5728\u535a\u5ba2\u91cc\u89c2\u770b\u66f4\u7f8e\u89c2\u54e6~\n\n[\u9898\u76ee](https://www.luogu.org/problem/P1979)\n------------\n\n\n------------\n\n\u534e\u4e3d\u7684\u5206\u5272\u7ebf\n# \u89e3\u6790\n\n### \u66b4\u529b\n\n\u6211\u4eec\u53ea\u5173\u5fc3\u7a7a\u683c\u548c\u76ee\u6807\u68cb\u5b50\u7684\u72b6\u6001,\u4e5f\u5c31\u662f\u5b83\u4eec\u4e8c\u8005\u7684\u5750\u6807\n\n\u6211\u4eec\u53ef\u4ee5\u8ba9\u7a7a\u683c\u4e71\u52a8,\u5982\u679c\u80fd\u4e0e\u76ee\u6807\u68cb\u5b50\u4ea4\u6362\u5219\u4e5f\u8bd5\u4e00\u4e0b\n\n\u8bb0\u5f55\u4e00\u4e0b\u5230\u8fbe\u5f53\u524d\u72b6\u6001\u9700\u8981\u8d70\u51e0\u6b65,\u521d\u59cb\u5316\u4e3a\u6b63\u65e0\u7a77,\u8dd1$bfs$\n\n\u82e5\u5f53\u524d\u6b65\u6570\u6bd4\u8bb0\u5f55\u7684\u5c0f,\u5219\u66f4\u65b0\u8bb0\u5f55\u6570\u7ec4\u5e76\u628a\u72b6\u6001\u52a0\u5165\u961f\u5217\n\n\u7b54\u6848\u4e3a\u76ee\u6807\u68cb\u5b50\u5728\u76ee\u6807\u4f4d\u7f6e\u7684\u6240\u6709\u72b6\u6001\u4e2d\u6b65\u6570\u6700\u5c0f\u7684\u6b65\u6570,\u671f\u671b\u5f97\u5206\uff1a$60$\n\n### \u526a\u679d\n\n\u7531\u4e8e\u5f53\u524d\u5730\u56fe\u4e0d\u53d8,\u53ea\u662f\u67e5\u8be2\u7684\u72b6\u6001\u5728\u53d8,\u4e14$bfs$\u4e2d\u6709\u8bb8\u591a\u65e0\u7528\u72b6\u6001,\u8003\u8651\u526a\u679d\n\n\u5982\u679c\u7a7a\u683c\u8dd1\u5230\u4e86\u5f53\u524d\u68cb\u5b50\u9644\u8fd1(\u5373\u4e0a\u4e0b\u5de6\u53f3),\u90a3\u4e48\u5b83\u8981\u4e48\u4e0e\u68cb\u5b50\u4ea4\u6362,\n\n\u8981\u4e48\u79fb\u52a8\u5230\u76ee\u6807\u68cb\u5b50\u7684\u5176\u4ed6\u65b9\u5411,\u56e0\u4e3a\u5b83\u79bb\u5f00\u68cb\u5b50\u5fc5\u5b9a\u4f1a\u56de\u6765,\u4e00\u5b9a\u4e0d\u4f18\n\n```cpp\nint next[4][2]=\n{\n\t-1,0,\n\t1,0,\n\t0,-1,\n\t0,1,\n};\n```\n\u8bbe$k \\in 0,1,2,3\\ $\u52a0\u4e0a$next[k][0],next[k][1] $\u5206\u522b\u8868\u793a\u7684\u4e0a\u4e0b\u5de6\u53f3\u7684\u5750\u6807\n\n\u8bbe$dp[nowx][nowy][etx][ety][k]$\u8868\u793a\u76ee\u6807\u68cb\u5b50\u5728$(nowx,nowy)$,\n\n\u7a7a\u683c\u5728$(etx,ety)$,\u5c06\u7a7a\u683c\u79fb\u52a8\u5230\u76ee\u6807\u68cb\u5b50\u65b9\u5411$k$\u7684\u6700\u5c0f\u6b65\u6570\n\n\u679a\u4e3e\u76ee\u6807\u68cb\u5b50\u53ca\u65b9\u5411,$bfs$\u7a7a\u683c\u4f4d\u7f6e,\u9884\u5904\u7406\u51fa$dp$,\u56e0\u4e3a$dp$\u53ea\u4e0e\u5730\u56fe\u6709\u5173\n\n\u6ce8\u610f\u5728$bfs$\u65f6\u8981\u5224\u91cd\u7a7a\u683c\u4f4d\u7f6e,\u56e0\u4e3a\u540e\u641c\u5230\u4e00\u5b9a\u4e0d\u4f1a\u66f4\u4f18,\u603b\u590d\u6742\u5ea6$O(n^2m^2)$\n\n### $A*$\n\n\u9996\u5148\u7279\u5224\u76ee\u6807\u68cb\u5b50\u5c31\u5728\u76ee\u6807\u4f4d\u7f6e\u4e0a\u65f6\u8f93\u51fa$0$,~~\u5426\u521920\u5206\u6ca1\u4e86~~\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6709\u7528\u72b6\u6001(\u7a7a\u683c\u5728\u68cb\u5b50\u9644\u8fd1)\u6709\u5982\u4e0b$8$\u79cd\u8f6c\u79fb\u4e2d\u7684$7$\u79cd\n\n\u7a7a\u683c\u5206\u522b\u5728\u76ee\u6807\u68cb\u5b50\u7684\u56db\u4e2a\u65b9\u5411\u4ee5\u53ca\u4e0e\u76ee\u6807\u68cb\u5b50\u4ea4\u6362\u540e\u7684\u72b6\u6001\n\n\u521d\u59cb\u72b6\u6001\u4e3a\u5f53\u524d\u7a7a\u683c\u5230\u76ee\u6807\u68cb\u5b50$4$\u4e2a\u65b9\u5411\u7684\u6b65\u6570,\u4f7f\u7528$dp$\u6570\u7ec4\u5373\u53ef\n\n\u6bcf\u6b21\u6269\u5c55$8$\u4e2a\u72b6\u6001,\u82e5\u76ee\u6807\u68cb\u5b50\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e,\u5219\u8f93\u51fa\u6b65\u6570\n\n\u6ce8\u610f\u7a7a\u683c\u4e0e\u76ee\u6807\u68cb\u5b50\u4ea4\u6362\u65f6,\u65b9\u5411\u76f8\u53cd,$k$\u9700\u8981$^$$1$\n\n\u5982\u679c\u6ca1\u5b66\u8fc7$A*$,\u8bf7\u98df\u7528[\u7701\u9009NOI-\u4e13\u9898[A*][\u6700\u77ed\u8def]\uff1a P4467 [SCOI2007]k\u77ed\u8def](https://www.luogu.org/blog/szr666--blog/xing-xuan-noi-zhuan-ti-a-zui-duan-lu-p4467-scoi2007k-duan-lu)\n\n\u6211\u4eec\u628a\u4f30\u4ef7\u51fd\u6570\u4f5c\u4e3a\u76ee\u6807\u68cb\u5b50\u5230\u76ee\u6807\u4f4d\u7f6e\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\n\n### \u91cd\u590d\u72b6\u6001\u5904\u7406\n\n\u603b\u7ed3\u4e00\u4e0b,\u4f18\u5148\u961f\u5217\u91cc\u7684\u72b6\u6001\u5171\u6709$6$\u4e2a\u53c2\u6570,\u5206\u522b\u4e3a:\n\n\u76ee\u6807\u68cb\u5b50\u5750\u6807,\u7a7a\u683c\u5750\u6807,\u5f53\u524d\u6b65\u6570\u548c\u4f30\u4ef7\u51fd\u6570\u503c(\u4e5f\u53ef\u4ee5\u73b0\u6c42)\n\n\u5728\u8f6c\u79fb\u4e2d\u8fd8\u6d89\u53ca\u5230\u65b9\u5411.\u56e0\u4e3a\u8f6c\u79fb\u4e2d\u6709\u91cd\u590d\u72b6\u6001,\u4f46\u4e0d\u80fd\u76f4\u63a5\u820d\n\n\u56e0\u4e3a\u4f30\u4ef7\u51fd\u6570\u672a\u5fc5\u51c6,\u4e5f\u5c31\u662f\u8bf4\u7b2c\u4e00\u6b21\u641c\u5230\u7684\u72b6\u6001\u672a\u5fc5\u6700\u4f18\n\n\u6240\u4ee5\u628a\u72b6\u6001\u5b58\u8d77\u6765,\u82e5\u91cd\u590d\u4e14\u6bd4\u4e4b\u524d\u4f18\u5219\u66f4\u65b0\u5e76\u52a0\u5165\u4f18\u5148\u961f\u5217\n\n\u4f46\u6bcf\u6b21\u9700\u8d4b\u503c\u4e3a\u6b63\u65e0\u7a77,\u4e3a\u4e86\u4e0d\u8d85\u65f6,\u53ea\u8bb0\u5f55\u76ee\u6807\u68cb\u5b50\u5750\u6807\u548c\u65b9\u5411\n\n\u56e0\u4e3a\u7a7a\u683c\u4e00\u5b9a\u5728\u76ee\u6807\u68cb\u5b50\u9644\u8fd1,\u8fd9\u6837\u4fbf\u4e0d\u4f1a\u8d85\u65f6.\u4e14\u8bb0\u5f55\u4e86\u6240\u6709\u6709\u7528\u72b6\u6001\n\n# \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<map>\n#include<queue>\n#include<cstring>\nusing namespace std;\nvoid read(int &x)\n{\n\tx=0;\n\tint f;\n\tf=1;\n\tchar c;\n\tc=getchar();\n\twhile((c<'0'||c>'9')&&c!='-')\n\t{\n\t\tc=getchar();\n\t}\n\tif(c=='-')\n\t{\n\t\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tx=(x<<3)+(x<<1)+(c^48);\n\t\tc=getchar();\n\t}\n\tx=x*f;\n}\nint sd[40][40][5];\nbool a[100][100];\nint dp[40][40][40][40][4];\nint enx,eny,n,m;\nbool f;\ninline int abs(int a)\n{\n\treturn a>0 ? a : -a;\n}\nint h(int x,int y)\n{\n\treturn abs(x-enx)+abs(y-eny);\n}\nstruct data\n{\n\tint nowx;\n\tint nowy;\n\tint etx;\n\tint ety;\n\tint g;\n\tint h;\n\tdata()\n\t{\n\t\n\t}\n\tdata(int x1,int y1,int x2,int y2,int gg,int hh)\n\t{\n\t\tnowx=x1;\n\t\tnowy=y1;\n\t\tetx=x2;\n\t\tety=y2;\n\t\tg=gg;\n\t\th=hh;\n\t}\n\tbool operator < (const data &x1) const\n\t{\n\t\treturn !(g+h==x1.g+x1.h ? g<x1.g : g+h<x1.g+x1.h);\n\t}\n};\npriority_queue<data> q;\nint next[4][2]=\n{\n\t-1,0,\n\t1,0,\n\t0,-1,\n\t0,1,\n};\nvoid bfs(int stx,int sty,int emx,int emy)\n{\n\tdata now;\n\tint tx,ty,k;\n\tfor(k=0;k<4;k++)\n\t{\n\t\ttx=stx+next[k][0];\n\t\tty=sty+next[k][1];\n\t\tif(tx>=1&&ty>=1&&tx<=n&&ty<=m&&a[tx][ty]==1)\n\t\t{\n\t\t\tq.push(data(stx,sty,tx,ty,dp[stx][sty][emx][emy][k],h(stx,sty)));\n\t\t\tsd[stx][sty][k]=0;\n\t\t}\n\t}\n\twhile(!q.empty())\n\t{\n\t\tnow=q.top();\n\t\tq.pop();\n\t\tif(now.nowx==enx&&now.nowy==eny)\n\t\t{\n\t\t\tf=1;\n\t\t\tif(now.g>=0x3f3f3f3f)\n\t\t\t{\n\t\t\t\tnow.g=-1;\n\t\t\t}\t\t\t\n\t\t\tprintf(\"%d\\n\",now.g);\n\t\t\treturn;\n\t\t}\n\t\tfor(k=0;k<4;k++)\n\t\t{\n\t\t\ttx=now.nowx+next[k][0];\n\t\t\tty=now.nowy+next[k][1];\n\t\t\tif(tx>=1&&ty>=1&&tx<=n&&ty<=m&&a[tx][ty]==1&&dp[now.nowx][now.nowy][now.etx][now.ety][k]!=0x3f3f3f3f)\n\t\t\t{\n\t\t\t\tif(sd[now.nowx][now.nowy][k]>now.g+dp[now.nowx][now.nowy][now.etx][now.ety][k])\n\t\t\t\t{\n\t\t\t\t\tq.push(data(now.nowx,now.nowy,tx,ty,now.g+dp[now.nowx][now.nowy][now.etx][now.ety][k],h(now.nowx,now.nowy)));\n\t\t\t\t\tsd[now.nowx][now.nowy][k]=now.g+dp[now.nowx][now.nowy][now.etx][now.ety][k];\n\t\t\t\t}\n\t\t\t\tif(sd[tx][ty][k^1]>now.g+1+dp[now.nowx][now.nowy][now.etx][now.ety][k])\n\t\t\t\t{\n\t\t\t\t\tq.push(data(tx,ty,now.nowx,now.nowy,now.g+1+dp[now.nowx][now.nowy][now.etx][now.ety][k],h(tx,ty)));\n\t\t\t\t\tsd[tx][ty][k^1]=now.g+1+dp[now.nowx][now.nowy][now.etx][now.ety][k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nstruct tmp\n{\n\tint x;\n\tint y;\n\tint dep;\n\ttmp()\n\t{\n\t\t\n\t}\n\ttmp(int xx,int yy,int dd)\n\t{\n\t\tx=xx;\n\t\ty=yy;\t\n\t\tdep=dd;\n\t}\t\n};\nqueue<tmp> q3;\nbool book[40][40];\nvoid bfs2(int nx,int ny,int k)\n{\n\ttmp now;\n\tint tx,ty,k2;\n\tmemset(book,0,sizeof(book));\n\ttx=nx+next[k][0];\n\tty=ny+next[k][1];\n\tif(tx>=1&&ty>=1&&tx<=n&&ty<=m&&a[tx][ty]==1)\n\t{\n\t\tdp[nx][ny][tx][ty][k]=0;\n\t\tq3.push(tmp(tx,ty,0));\n\t\tbook[tx][ty]=1;\n\t}\n\twhile(!q3.empty())\n\t{\n\t\tnow=q3.front();\n\t\tq3.pop();\n\t\tfor(k2=0;k2<4;k2++)\n\t\t{\n\t\t\ttx=now.x+next[k2][0];\n\t\t\tty=now.y+next[k2][1];\n\t\t\tif(tx>=1&&ty>=1&&tx<=n&&ty<=m&&a[tx][ty]==1&&book[tx][ty]==0&&(!(tx==nx&&ty==ny)))\n\t\t\t{\n\t\t\t\tbook[tx][ty]=1;\n\t\t\t\tdp[nx][ny][tx][ty][k]=now.dep+1;\n\t\t\t\tq3.push(tmp(tx,ty,now.dep+1));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tint q2,i,j,tx,k,ty;\n\tint stx,sty,emx,emy;\n\tread(n);\n\tread(m);\n\tread(q2);\n\tmemset(dp,0x3f,sizeof(dp));\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tread(tx);\n\t\t\ta[i][j]=tx;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tfor(k=0;k<4;k++)\n\t\t\t{\n\t\t\t\ttx=i+next[k][0];\n\t\t\t\tty=j+next[k][1];\n\t\t\t\tif(a[i][j]==1&&a[tx][ty]==1&&tx>=1&&ty>=1&&tx<=n&&ty<=m)\n\t\t\t\t{\n\t\t\t\t\tbfs2(i,j,k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=q2;i++)\n\t{\n\t\tread(emx);\n\t\tread(emy);\n\t\tread(stx);\n\t\tread(sty);\n\t\tread(enx);\n\t\tread(eny);\n\t\tif(stx==enx&&sty==eny)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmemset(sd,0x3f,sizeof(sd));\n\t\t\twhile(!q.empty())\n\t\t\t{\n\t\t\t\tq.pop();\n\t\t\t}\n\t\t\tf=0;\n\t\t\tbfs(stx,sty,emx,emy);\n\t\t\tif(f==0)\n\t\t\t{\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t}\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1573343133,
        "uid": 129849,
        "name": "szr666",
        "ccfLevel": 4,
        "title": "\u7701\u9009NOI-\u4e13\u9898[A*][bfs]\uff1a P1979 \u534e\u5bb9\u9053"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P1979)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\u66b4\u529b\u505a\u6cd5\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5bf9\u6307\u5b9a\u7684\u5757\u8fdb\u884c\u7b2c\u4e00\u5c42\u641c\u7d22\u3002\u6bcf\u6b21\u6211\u4eec\u8981\u8d70\u4e00\u6b65\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u5148\u5c06\u7a7a\u767d\u5757\u79fb\u5230\u76ee\u6807\u683c\uff0c\u8d70\u4e00\u6b65\uff0c\u5f97\u5230\u65b0\u7684\u72b6\u6001\u3002\u800c\u5c06\u7a7a\u767d\u5757\u79fb\u52a8\u5230\u76ee\u6807\u683c\u7684\u64cd\u4f5c\u53ef\u4ee5\u66b4\u529b$BFS$\u3002\u7531\u4e8e\u8fb9\u6743\u4e0d\u5b9a\uff0c\u6240\u4ee5\u5916\u5c42\u7684\u641c\u7d22\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a$Dijkstra$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u4f60\u5c31\u4f1a\u6109\u5feb\u5730\u53d1\u73b0\u8fd9\u4e2a\u4f1a$T$\u3002\u9700\u8981\u4f18\u5316\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5916\u5c42\u7684$Dijkstra$\u76ee\u6d4b\u4e0d\u662f\u6cbb\u7597\u91cd\u70b9\uff0c\u6240\u4ee5\u770b\u5230\u5185\u5c42\u7684\u66b4\u529b$BFS$\u3002\u5b9e\u9645\u4e0a\u7531\u4e8e\u539f\u56fe\u7684\u7ed3\u6784\u5e76\u4e0d\u4f1a\u53d1\u751f\u592a\u5927\u7684\u53d8\u5316\uff08\u540e\u9762\u4f1a\u5199\u5230\u53d8\u5316\uff09\uff0c\u6240\u4ee5\u56fe\u4e0a\u4e24\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u662f\u4e0d\u4f1a\u53d8\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4f46\u662f\uff01\u5982\u679c\u4e24\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u8de8\u8fc7\u4e86\u6307\u5b9a\u7684\u5757\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u7b54\u6848\u662f\u9519\u8bef\u7684\uff01\u4e0d\u8fc7\uff0c\u7531\u4e8e\u5728$Dijkstra$\u7684\u5b9e\u9645\u8fc7\u7a0b\u4e2d\uff0c\u7a7a\u767d\u7684\u5757\u4f1a\u5f85\u5728\u6307\u5b9a\u7684\u5757\u7684\u5468\u56f4\uff08\u5728\u8d70\u4e4b\u524d\u9700\u8981\u79fb\u52a8\u5230\u5468\u56f4\uff1b\u8d70\u4e00\u6b65\u4e4b\u540e\u8fd8\u662f\u5728\u5468\u56f4\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u6700\u77ed\u8ddd\u79bb\u7684\u65f6\u5019\uff0c\u679a\u4e3e\u5468\u56f4\u54ea\u4e2a\u7a7a\u767d\u5757\u4e0d\u89c1\u4e86\uff0c\u518d\u7528$BFS$\u6c42\u6700\u77ed\u8def\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u88ab\u6109\u5feb\u5730\u4f18\u5316\u4e0b\u6765\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u8fc7\uff0c\u6ce8\u610f\u5728\u6307\u5b9a\u5757\u51fa\u53d1\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u7a7a\u767d\u5757\u5148\u632a\u5230\u6307\u5b9a\u5757\u7684\u5468\u56f4\uff0c\u8fd9\u4e2a\u9700\u8981\u66b4\u529b$BFS$\u3002  \n# \u4ee3\u7801\n```cpp\n#include <queue>\n#include <cstdio>\n#include <utility>\nusing namespace std;\n\ntypedef pair<int, int> pos;\n#define xx first\n#define yy second\n\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 35, MAXM = 35;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\nstruct node\n{\n\tpos p; int steps, side;\n\tnode(){}\n\tnode( const pos P, const int S ) { p = P, steps = S; }\n\tnode( const pos P, const int S, const int Si ) { p = P, steps = S, side = Si; }\n\tbool operator < ( const node & other ) const { return ! ( steps < other.steps ); }\n};\n\nqueue<node> q2;\nqueue<pos> q;\npriority_queue<node> q1;\n\nint dir[4][2] = { { -1, 0 }, { 1, 0 }, { 0, -1 }, { 0, 1 } };\nint dis[MAXN][MAXM][4][MAXN][MAXM], dist[MAXN][MAXM][4];\nint N, M, Q;\nbool stuck[MAXN][MAXM], visited[MAXN][MAXM][4], vis[MAXN][MAXM];\n\nbool chk( const int x, const int y )\n{\n\treturn 1 <= x && x <= N && 1 <= y && y <= M && stuck[x][y];\n}\n\nvoid BFS( const int sx, const int sy, const int side )\n{\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tfor( int j = 1 ; j <= M ; j ++ )\n\t\t\tdis[sx][sy][side][i][j] = INF;\n\tif( ! stuck[sx][sy] ) return ;\n\twhile( ! q.empty() ) q.pop();\n\tdis[sx][sy][side][sx][sy] = 0, q.push( pos( sx, sy ) );\n\tpos head;\n\tint nx, ny;\n\twhile( ! q.empty() )\n\t{\n\t\thead = q.front(); q.pop();\n\t\tfor( int i = 0 ; i < 4 ; i ++ )\n\t\t{\n\t\t\tnx = dir[i][0] + head.xx, ny = dir[i][1] + head.yy;\n\t\t\tif( chk( nx, ny ) && dis[sx][sy][side][nx][ny] > N * M )\n\t\t\t\tdis[sx][sy][side][nx][ny] = dis[sx][sy][side][head.xx][head.yy] + 1, \n\t\t\t\tq.push( pos( nx, ny ) );\n\t\t}\n\t}\n}\n\nint BFS1( const int sx, const int sy, const int tx, const int ty )\n{\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tfor( int j = 1 ; j <= M ; j ++ )\n\t\t\tvis[i][j] = false;\n\twhile( ! q2.empty() ) q2.pop();\n\tvis[sx][sy] = true, q2.push( node( pos( sx, sy ), 0 ) );\n\tnode head;\n\tint nx, ny;\n\twhile( ! q2.empty() )\n\t{\n\t\thead = q2.front(); q2.pop();\n\t\tif( head.p.xx == tx && head.p.yy == ty ) return head.steps;\n\t\tfor( int i = 0 ; i < 4 ; i ++ )\n\t\t{\n\t\t\tnx = dir[i][0] + head.p.xx, ny = dir[i][1] + head.p.yy;\n\t\t\tif( chk( nx, ny ) && ! vis[nx][ny] )\n\t\t\t\tvis[nx][ny] = true, q2.push( node( pos( nx, ny ), head.steps + 1 ) );\n\t\t}\n\t}\n\treturn -1;\n}\n\nint query( const int ex, const int ey, const int sx, const int sy, const int tx, const int ty )\n{\n\twhile( ! q1.empty() ) q1.pop();\n\tif( sx == tx && sy == ty ) return 0;\n\tif( ! stuck[sx][sy] || ! stuck[ex][ey] || ! stuck[tx][ty] ) return -1;\n\tif( BFS1( sx, sy, tx, ty ) == -1 ) return -1;\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tfor( int j = 1 ; j <= M ; j ++ )\n\t\t\tfor( int k = 0 ; k < 4 ; k ++ )\n\t\t\t\tdist[i][j][k] = INF, visited[i][j][k] = false;\n\tint nx, ny, s, nex, ney, ns;\n\tfor( int i = 0 ; i < 4 ; i ++ )\n\t{\n\t\tnx = sx + dir[i][0], ny = sy + dir[i][1];\n\t\tstuck[sx][sy] = false;\n\t\ts = BFS1( ex, ey, nx, ny );\n\t\tstuck[sx][sy] = true;\n\t\tif( chk( nx, ny ) && ~ s )\n\t\t\tdist[sx][sy][i] = s, \n\t\t\tq1.push( node( pos( sx, sy ), s, i ) );\n\t}\n\tnode head;\n\twhile( ! q1.empty() )\n\t{\n\t\thead = q1.top(); q1.pop();\n\t\tif( head.p.xx == tx && head.p.yy == ty ) return head.steps;\n\t\tif( visited[head.p.xx][head.p.yy][head.side] ) continue; visited[head.p.xx][head.p.yy][head.side] = true;\n\t\tnex = head.p.xx + dir[head.side][0], ney = head.p.yy + dir[head.side][1];\n\t\tfor( int i = 0 ; i < 4 ; i ++ )\n\t\t{\n\t\t\tnx = head.p.xx + dir[i][0], ny = head.p.yy + dir[i][1];\n\t\t\ts = dis[nex][ney][head.side ^ 1][nx][ny], ns = i ^ 1;\n\t\t\tif( chk( nx, ny ) && ! visited[nx][ny][ns] && dist[nx][ny][ns] > head.steps + s + 1 )\n\t\t\t{\n\t\t\t\tdist[nx][ny][ns] = head.steps + s + 1;\n\t\t\t\tq1.push( node( pos( nx, ny ), dist[nx][ny][ns], ns ) );\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\nint main()\n{\n//\tfreopen( \"hrd.out\", \"w\", stdout );\n\tread( N ), read( M ), read( Q );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tfor( int j = 1 ; j <= M ; j ++ )\n\t\t\tread( stuck[i][j] );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t\tfor( int j = 1 ; j <= M ; j ++ )\n\t\t\tfor( int k = 0 ; k < 4 ; k ++ )\n\t\t\t{\n\t\t\t\tint tx = i + dir[k][0], ty = j + dir[k][1];\n\t\t\t\tbool tmp = stuck[tx][ty]; stuck[tx][ty] = false;\n\t\t\t\tBFS( i, j, k );\n\t\t\t\tstuck[tx][ty] = tmp;\n\t\t\t}\n\tint EX, EY, SX, SY, TX, TY;\n\twhile( Q -- )\n\t{\n\t\tread( EX ), read( EY ), read( SX ), read( SY ), read( TX ), read( TY );\n\t\twrite( query( EX, EY, SX, SY, TX, TY ) ), putchar( '\\n' );\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1573276957,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[NOIP2013]\u534e\u5bb9\u9053"
    },
    {
        "content": "### \u5206\u6790\n\u8fd9\u9053\u9898\u5b9e\u5728\u662f\u592a\u6bd2\u7624\u4e86\u2026\u2026.\n\u6539\u4e86\u4e00\u4e0b\u5348\u52a0\u4e00\u4e2a\u665a\u81ea\u4e60\uff0c\u7ec8\u4e8e\u5728\u5927\u4f6c\u601d\u8def\u7684\u5e2e\u52a9\u4e0b\u8fc7\u4e86orz\n\n\u53ea\u9700\u8981\u4fdd\u5b58\u7a7a\u767d\u5757\u548c\u6307\u5b9a\u5757\u7684\u72b6\u6001\uff0c\u5148bfs\u9884\u5904\u7406\u51fa\u7a7a\u767d\u5757\u4ece**\u5f53\u524d\u72b6\u6001**\uff08\u4e0e\u6307\u5b9a\u5757\u76f8\u90bb\u7684\u4e0a\u4e0b\u5de6\u53f3\u7684\u67d0\u4e00\u683c\u5b50\uff09\u5230**\u5176\u4ed6\u72b6\u6001**\uff08\u4e0e\u6307\u5b9a\u5757\u76f8\u90bb\u53e6\u5916\u4e09\u4e2a\u65b9\u5411\u7684\u683c\u5b50\uff09\u7684**\u6700\u77ed\u79fb\u52a8\u6b65\u6570**\u548c**\u4e0e\u6307\u5b9a\u5757\u4ea4\u6362**\u7684\u6b65\u6570\uff0c\u5c06\u5176\u4fdd\u5b58\u5728\u8fb9\u96c6\u6570\u7ec4\u4e2d\n\uff08\u70b9\u4ee3\u8868\u5f53\u524d\u72b6\u6001\u548c\u5176\u4ed6\u72b6\u6001\uff0c\u8fb9\u4ee3\u8868\u6700\u77ed\u6b65\u6570\uff09\n\n\u7531\u4e8e\u7a7a\u767d\u5feb\u6700\u5f00\u59cb\u4e0d\u4e00\u5b9a\u5728\u6307\u5b9a\u5757\u5468\u56f4\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\uff0cbfs\u5b58\u50a8\u7a7a\u767d\u5757\u5230\u6307\u5b9a\u5757\u5468\u56f4\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\u7684\u6700\u5c0f\u6b65\u6570\n\u6700\u540e\u518d\u7528**spfa\u6700\u77ed\u8def**\u6c42\u5230\u76ee\u6807\u70b9\u7684\u6700\u5c0f\u6b65\u6570\n### \u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\n#define INF 0x3f3f3f3f\nusing namespace std;\nconst int Maxt = 32;\nconst int Maxn = 3610;\nconst int Maxm = Maxn * 5;\nint n,m,p;\nbool a[Maxt][Maxt],vis[Maxn];\nint dx[4] = {-1,0,1, 0},\n    dy[4] = { 0,1,0,-1};\nint predis[Maxt][Maxt],dis[Maxn];\n\nstruct game {\n    int next,to,w;\n}e[Maxm];\nint top,head[Maxn];\nvoid add(int u,int v,int val) {\n    top++;\n    e[top].to=v;\n    e[top].w=val;\n    e[top].next=head[u];\n    head[u]=top;\n}\n\nstruct start {\n    int x,y;\n} nxt,cur;\nqueue<start>q;\nqueue<int>que;\n\nint numbers(int i,int j) {\n    j--; \n    return (i-1)*m+j<<2;\n}\n\nvoid bfs(int ex,int ey,int px,int py,int d) {\n    int cx,cy,nx,ny; \n    memset(predis,-1,sizeof(predis));\n    predis[px][py]=1;\n    predis[ex][ey]=0;\n    cur.x=ex,cur.y=ey;\n    q.push(cur);\n    while(!q.empty()) {\n        cur=q.front();\n        q.pop();\n        cx=cur.x,cy=cur.y;\n        for(int i=0; i<4; ++i) {\n            nx=cur.x+dx[i],ny=cur.y+dy[i];\n            if(a[nx][ny] && predis[nx][ny]==-1) {\n                predis[nx][ny]=predis[cx][cy]+1;\n                nxt.x=nx,nxt.y=ny;\n                q.push(nxt);\n            }\n        }\n    }\n    if(d==8) return;\n    int tmp=numbers(px,py);\n    for(int i=0; i<4; ++i) {\n        int x=px+dx[i],y=py+dy[i];\n        if(predis[x][y]>0)\n            add(tmp+d,tmp+i,predis[x][y]);   \n    }\n    \n    add(tmp+d,numbers(ex,ey)+(d+2)%4,1);\n}\n\nvoid spfa(int sx,int sy) {\n    int tmp;\n    memset(dis,-1,sizeof(dis));\n    for(int i=0; i<4; ++i) {\n        int x=sx+dx[i],y=sy+dy[i];\n        if(predis[x][y]!=-1) {\n            tmp=numbers(sx,sy)+i;\n            dis[tmp]=predis[x][y];\n            que.push(tmp);\n        }\n    }\n    int u;\n    while(!que.empty()) {\n        u=que.front();\n        que.pop();\n        vis[u]=false;\n        for(int i=head[u]; i; i=e[i].next) {\n            int v=e[i].to;\n            if(dis[v]==-1 || dis[v]>dis[u]+e[i].w) {\n                dis[v]=dis[u]+e[i].w;\n                if(!vis[v]) {\n                    vis[v]=true;\n                    que.push(v);\n                }\n            }\n        }\n    }\n} \n\nint main() {\n    scanf(\"%d%d%d\",&n,&m,&p);\n    for(int i=1; i<=n; ++i)\n        for(int j=1; j<=m; ++j)\n            scanf(\"%d\",&a[i][j]);\n    for(int i=1; i<=n; ++i)\n        for(int j=1; j<=m; ++j)\n            if(a[i][j]) {\n                if(a[i-1][j]) bfs(i-1,j,i,j,0); \n                if(a[i][j+1]) bfs(i,j+1,i,j,1);\n                if(a[i+1][j]) bfs(i+1,j,i,j,2);\n                if(a[i][j-1]) bfs(i,j-1,i,j,3);\n            }\n    int ex,ey,sx,sy,tx,ty,ans;\n    while(p--) {\n        scanf(\"%d%d%d%d%d%d\",&ex,&ey,&sx,&sy,&tx,&ty);\n        if(sx==tx && sy==ty) {\n            printf(\"0\\n\");\n            continue;\n        }\n        bfs(ex,ey,sx,sy,8);\n        spfa(sx,sy);\n        ans=INF;\n        int tmp=numbers(tx,ty);\n        for(int i=0; i<4; ++i)\n            if(dis[tmp+i]!=-1) \n            ans=min(ans,dis[tmp+i]);\n        if(ans==INF)\n            ans=-1;\n        printf(\"%d\\n\",ans); \n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1563890696,
        "uid": 100708,
        "name": "Trilarflagz",
        "ccfLevel": 0,
        "title": "\u3010NOIP2013\u63d0\u9ad8\u7ec4 day2\u3011\u534e\u5bb9\u9053"
    },
    {
        "content": "\u6b64\u9898\u81ea\u5df1YY\u4e86\u4e00\u79cd\u65b0\u5efa\u6cd5\uff0c\u5199\u4e86\u4e00\u4e0a\u5348\n\u4e0e\u5176\u4ed6\u9898\u89e3\u76f8\u540c\u7684\u90e8\u5206\u7701\u7565\u4e86\uff0c\u53ef\u4ee5\u770b\u7b2c\u4e00\u7bc7\u9898\u89e3\n\n\u4e5f\u662f\u53ea\u8981\u4e2d\u95f4\u548c\u4e0a\u4e0b\u5de6\u53f35\u4e2a\u683c\u5b50\u4f5c\u6709\u6548\u72b6\u6001\n\u4e2d\u95f4\u7684\u683c\u5b50\u662f\u76ee\u6807\u68cb\u5b50\uff0c\u4e0a\u4e0b\u5de6\u53f3\u4e3a\u7a7a\u683c\u5b50\n\u5bf9\u540c\u4e00\u76ee\u6807\u68cb\u5b50\uff0c\u7a7a\u683c\u5b50\u5728 \u4e0a,\u4e0b,\u5de6,\u53f3\u4e4b\u95f4\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a\u7a7a\u683c\u5b50\u4e0d\u7ecf\u8fc7\u76ee\u6807\u68cb\u5b50\u6240\u9700\u8def\u7a0b\n\u53ef\u7528bfs\u6c42\u89e3\n\u5bf9\u4e0d\u540c\u76ee\u6807\u683c\u5b50\uff0c\u53ea\u8ba9\u76ee\u6807\u683c\u5b50\u4e0e\u7a7a\u683c\u5b50\u4e92\u6362\u4f4d\u7f6e\uff0c\u72b6\u6001\u6539\u53d8\u4e3a\u76f8\u5e94\u7684\u72b6\u6001\uff0c\u8fb9\u6743\u4e3a1\n\u6700\u540e\u8dd1\u6700\u77ed\u8def\u6c42\u89e3\n\n\u51e0\u4e2a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff1a\n1\uff1a\u7f16\u53f7\u7684\u65f6\u5019\u5982\u679c\u4e0d\u80fd\u5b8c\u5168\u786e\u5b9a\u5c31\u4e0d\u8981\u7528\u89c4\u5f8b\u7f16\u53f7\uff0c\u7a7a\u95f4\u5141\u8bb8\u53ef\u4ee5\u5f00\u6570\u7ec4\u76f4\u63a5\u8bb0\u7f16\u53f7\n2\uff1a\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<vector>\n#include<cstring>\n\nusing namespace std;\n\ntypedef pair<int,int> PII;\nconst int N=53,inf=0x3f3f3f3f,sx[4]={0,0,1,-1},sy[4]={1,-1,0,0},get[4]={1,0,3,2};\n\nstruct point{\n\tint x,y,dir;\n};\n\nstruct Eox{\n\tint x,y,val;\n};\n\nstruct edge{\n\tint next,to,wet;\n}e1[1000010];\n\nint cnt,nus,SX,TX,TY,SY,EX,EY,n,m,q,s[N][N],dis[N*N*4],head[N*N*4],id[N][N][4];\npriority_queue<PII,vector<PII>,greater<PII> > q1;\nbool book2[N][N];\nint start[4],val[4];\n\nvoid add(int u,int to,int wet)\n{\n//\tif(u>=64&&u<=67)cout<<\"WW\"<<endl;\n//\tif(to>=64&&to<=67)cout<<\"WW\"<<endl;\n\te1[++nus].next=head[u];\n\te1[nus].to=to;\n\te1[nus].wet=wet;\n\thead[u]=nus;\n\te1[++nus].next=head[to];\n\te1[nus].to=u;\n\te1[nus].wet=wet;\n\thead[to]=nus;\n}\n\nint get_id(int x,int y,int k)\n{\n\tif(id[x][y][k])return id[x][y][k];\n\telse id[x][y][k]=++cnt;\n\treturn cnt;\n}\n\nbool vaild(int x,int y)\n{\n\tif(x>=n||x<0||y<0||y>=m)return 0;\n\tif(s[x][y]==0)return 0;\n\treturn 1;\n}\n\nint bfs_E(int x,int y,int to_x,int to_y,int Nx,int Ny)\n{\n\tmemset(book2,0,sizeof book2);\n\tqueue<Eox> q2;\n\tq2.push({x,y,0});\n\twhile(q2.size())\n\t{\n\t\tEox u=q2.front();\n\t\tq2.pop();\n\t\tif(u.x==to_x&&u.y==to_y)return u.val;\n\t\tfor(int k=0;k<4;k++)\n\t\t\tif( ( u.y+sy[k]!=Ny || u.x+sx[k]!=Nx )&&vaild(u.x+sx[k],u.y+sy[k])&&book2[u.x+sx[k]][u.y+sy[k]]==0)\n\t\t\t{\n\t\t\t\tbook2[u.x+sx[k]][u.y+sy[k]]=1;\n\t\t\t\tq2.push({u.x+sx[k],u.y+sy[k],u.val+1});\n\t\t\t}\n\t}\n\treturn inf;\n}\n\nvoid bfs_E(int x,int y,int Nx,int Ny)\n{\n\tmemset(book2,0,sizeof book2);\n\tmemset(val,inf,sizeof val);\n\tmemset(start,-1,sizeof start);\n\tqueue<Eox> q2;\n\tq2.push({x,y,0});\n\twhile(q2.size())\n\t{\n\t\tEox u=q2.front();\n\t\tq2.pop();\n\t\tfor(int k=0;k<4;k++)\n\t\t\tif(Nx+sx[k]==u.x&&Ny+sy[k]==u.y&&val[k]>u.val)\n\t\t\t{\n\t\t\t\tstart[k]=get_id(Nx,Ny,k);\n\t\t\t\tval[k]=u.val;\n\t\t\t}\n\t\tfor(int k=0;k<4;k++)\n\t\t\tif( ( u.y+sy[k]!=Ny || u.x+sx[k]!=Nx )&&vaild(u.x+sx[k],u.y+sy[k])&&book2[u.x+sx[k]][u.y+sy[k]]==0)\n\t\t\t{\n\t\t\t\tbook2[u.x+sx[k]][u.y+sy[k]]=1;\n\t\t\t\tq2.push({u.x+sx[k],u.y+sy[k],u.val+1});\n\t\t\t}\n\t}\n\n}\n\nvoid bfs_S()\n{\n\tfor(int i=0;i<n;i++)\n\t\tfor(int j=0;j<m;j++)\n\t\t\tfor(int k=0;k<4;k++)\n\t\t\t\tfor(int h=k+1;h<4;h++)\n\t\t\t\t\tif(vaild(i,j)&&vaild(i + sx[k],j + sy[k])&&vaild(i + sx[h],j + sy[h]) )\n\t\t\t\t\t\tadd( get_id(i,j,k), get_id(i,j,h), bfs_E( i + sx[k] , j + sy[k] , i + sx[h] , j + sy[h] , i , j ) );\n\t\t\t\t\t\n\tfor(int i=0;i<n;i++)\n\t\tfor(int j=0;j<m;j++)\n\t\t\tfor(int k=0;k<4;k++)\n\t\t\t\tif(vaild(i,j)&&vaild(i + sx[k],j + sy[k]) )\n\t\t\t\t\tadd(get_id(i,j,k), get_id(i + sx[k],j + sy[k],get[k]), 1);\n}\n\nint dij(int str)\n{\n\twhile(q1.size())q1.pop();\n\tmemset(dis,inf,sizeof dis);\n\tif(str==-1)return inf;\n\tq1.push({0,str});\n\tdis[str]=0;\n\twhile(q1.size())\n\t{\n\t\tPII u=q1.top();\n\t\tq1.pop();\n\t\tif(u.first>dis[u.second])continue;\n\t\tfor(int k=0;k<4;k++)\n\t\t\tif(u.second==get_id(TX,TY,k))return u.first;\n\t\t\n\t\tfor(int i=head[u.second];i;i=e1[i].next)\n\t\t{\n\t\t\tint v=e1[i].to;\n\t\t\tif(dis[v]>u.first+e1[i].wet)\n\t\t\t{\n\t\t\t\tdis[v]=u.first+e1[i].wet;\n\t\t\t\tq1.push({dis[v],v});\n\t\t\t}\n\t\t}\n\t}\n\treturn inf;\n}\n\nint main()\n{\n\tcin>>n>>m>>q;\n\tfor(int i=0;i<n;i++)\n\t\tfor(int j=0;j<m;j++)\n\t\t\tscanf(\"%d\",&s[i][j]);\n\t\t\n\tbfs_S();\n\t\t\n\twhile(q--)\n\t{\n\t\tscanf(\"%d%d%d%d%d%d\",&EX,&EY,&SX,&SY,&TX,&TY);\n\t\tif(SX==TX&&SY==TY)\n\t\t{\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\tEX-=1;\n\t\tSX-=1;\n\t\tTX-=1;\n\t\tEY-=1;\n\t\tSY-=1;\n\t\tTY-=1;\n\t\tbfs_E(EX,EY,SX,SY);\n\t\tint ans=inf;\n\t\tfor(int k=0;k<4;k++)\n\t\t\tans=min(ans,dij(start[k])+val[k]);\n\t\t\n\t\tif(ans>=inf)\n\t\t{\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"%d\\n\",  ans );\n\t}\n}\n```\n",
        "postTime": 1563679840,
        "uid": 127319,
        "name": "\u7fbd\u7b19",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "# \u9898\u5916\u8bdd\n\n\u5b89\u5229\u4e2a\u4eba\u535a\u5ba2\uff01\uff01\n\nhttp://blog.csdn.net/litble/article/details/78204837\uff08\u6216\u76f4\u63a5\u641c\u7d22\u201clitble\u201d\uff09\n\n\u5b89\u5229\u5927\u4f6c\u535a\u5ba2\uff01\uff01\n\nk-xzy.cf\n\n# \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u6211\u4eec\u8981\u660e\u786e\uff0c\u76f4\u63a5\u778e\u5e7f\u641c\u53ef\u4ee5\u62ff80\u5206\uff0c\u6240\u4ee5\u600e\u4e48\u53d6\u820d\u662f\u4e0d\u662f\u5f88\u660e\u4e86\uff1f\n\n\u5982\u679c\u4f60\u8fd8\u662f\u6709\u4e00\u9897\u6253\u6b63\u89e3\u7684\u5fc3...\n\n\u5206\u6790\u5f00\u59cb\u2014\u2014\n\n**\u6b64\u9898\u6838\u5fc3\uff1a\u72b6\u6001\u4e3a\u70b9\uff0c\u5efa\u56fe\uff0c\u8fdb\u884c\u6700\u77ed\u8def**\n\n## \u72b6\u6001\u4e3a\u70b9\n\n\u4ec0\u4e48\u72b6\u6001\u6bd4\u8f83\u91cd\u8981\uff1f\u76ee\u6807\u68cb\u5b50\u7684\u4f4d\u7f6e\uff0c\u8fd9\u662f\u80af\u5b9a\u7684\u3002\u518d\u8005\u662f\u7a7a\u683c\u7684\u4f4d\u7f6e\u3002\n\n\u4e0d\u8fc7\u4e8b\u5b9e\u4e0a\uff0c\u91cd\u8981\u7684\u72b6\u6001\u662f\u7a7a\u683c\u548c\u76ee\u6807\u68cb\u5b50\u76f8\u90bb\uff08\u7b2c\u4e8c\u6b65\u4f1a\u8bf4\uff09\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u72b6\u6001(x,y,tmp\uff09\u662f\u4e00\u4e2a\u70b9\uff0c\u8868\u793a\u76ee\u6807\u68cb\u5b50\u5728(x,y\uff09\u4f4d\u7f6e\uff0ctmp\u4ee3\u8868\u7a7a\u683c\u7684\u4f4d\u7f6e\u3002\u6211\u7684\u4ee3\u7801\u4e2d\uff0ctmp=0\u65f6\u8868\u793a\u5728\u76ee\u6807\u68cb\u5b50\u4e0a\u9762\uff0c=1\u8868\u793a\u5728\u4e0b\u9762\uff0c=2\u8868\u793a\u5728\u5de6\u8fb9\uff0c=3\u8868\u793a\u5728\u53f3\u8fb9\u3002\n\n## \u5efa\u56fe\n\n\u72b6\u6001\u4e4b\u95f4\u8fdb\u884c\u8f6c\u79fb\u7684\u4ee3\u4ef7\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\u957f\u3002\u53ef\u4ee5\u8fde\u8fb9\u7684\u8282\u70b9\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1.\u7a7a\u683c\u5728\u4e0d\u7ecf\u8fc7\u76ee\u6807\u68cb\u5b50\u7684\u60c5\u51b5\u4e0b\u79fb\u52a8\u5230\u76ee\u6807\u68cb\u5b50\u8eab\u8fb9\u53e6\u4e00\u4f4d\u7f6e\u3002\u7531\u4e8e\u534e\u5bb9\u9053\u7684\u5730\u56fe\u662f\u4e0d\u4f1a\u6539\u53d8\u7684\uff0c\u6240\u4ee5\u8fd9\u4e9b\u8fb9\u53ef\u4ee5bfs\u66b4\u529b\u9884\u5148\u5b8c\u6210\u3002\n\n2.\u7a7a\u683c\u548c\u76ee\u6807\u68cb\u5b50\u4ea4\u6362\u4f4d\u7f6e\u4e86\uff0c\u8fd9\u4e24\u4e2a\u72b6\u6001\u4e4b\u95f4\u7684\u8fb9\u957f\u4e3a1\n\n## \u8fdb\u884c\u6700\u77ed\u8def\n\n\u9996\u5148bfs\u5c06\u7a7a\u683c\u79fb\u5230\u76ee\u6807\u68cb\u5b50\u8eab\u8fb9\uff0c\u7136\u540e\u5c31\u6709\u56db\u79cd\u53ef\u4ee5\u4f5c\u4e3a\u8d77\u70b9\u7684\u72b6\u6001\u3002\u56e0\u4e3a\u6211\u662f\u4f7f\u7528spfa\u8fdb\u884c\u6700\u77ed\u8def\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u5408\u6cd5\uff08\u5373\u7a7a\u683c\u53ef\u4ee5\u79fb\u52a8\u5230\u6b64\u4f4d\u7f6e\uff09\uff0c\u53ef\u4ee5\u90fd\u52a0\u5165\u5904\u7406\u961f\u5217\u3002\n\n\u7136\u540espfa\u5b8c\u6bd5\u540e\uff0c\u6709\u56db\u79cd\u53ef\u80fd\u7684\u7ec8\u70b9\uff08\u7a7a\u683c\u5728\u76ee\u6807\u68cb\u5b50\u6700\u7ec8\u4f4d\u7f6e\u7684\u4e0d\u540c\u65b9\u4f4d\uff09\uff0c\u90fd\u67e5\u770b\u4e00\u904d\u5373\u53ef\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint n,m,q,tot;\nint mp[33][33],dis[33][33],qx[1010],qy[1010];\nint mvx[5]={-1,1,0,0},mvy[5]={0,0,-1,1};\nint h[4010],to[40010],ne[40010],w[40010];\nvoid add(int x,int y,int z)//\u5efa\u8fb9\n{to[++tot]=y,ne[tot]=h[x],h[x]=tot,w[tot]=z;}\nvoid bfs(int sx,int sy,int bx,int by,int fx){//(sx,sy):\u7a7a\u683c\u4f4d\u7f6e\uff0c(bx,by):\u76ee\u6807\u68cb\u5b50\u4f4d\u7f6e\n    int i,ta=1,he=1,xx,yy,tx,ty;\n    memset(dis,0,sizeof(dis));\n    qx[1]=sx,qy[1]=sy,dis[sx][sy]=1;\n    while(he<=ta){\n        xx=qx[he],yy=qy[he];\n        for(i=0;i<=3;++i){\n            tx=xx+mvx[i],ty=yy+mvy[i];\n            if(mp[tx][ty]&&!dis[tx][ty]&&(tx!=bx||ty!=by))//\u6ce8\u610f\u8fd9\u4e9b\u9650\u5236\u6761\u4ef6\n                dis[tx][ty]=dis[xx][yy]+1,qx[++ta]=tx,qy[ta]=ty;\n        }\n        ++he;\n    }\n    if(fx==4)return;\n    for(i=0;i<=3;++i){//\u60c5\u51b51\uff1a\u7a7a\u683c\u5728\u4e0d\u7ecf\u8fc7\u76ee\u6807\u68cb\u5b50\u7684\u60c5\u51b5\u4e0b\u6765\u5230\u76ee\u6807\u68cb\u5b50\u8eab\u8fb9\u5176\u4ed6\u65b9\u4f4d\n        tx=bx+mvx[i],ty=by+mvy[i];\n        if((tx!=sx||ty!=sy)&&dis[tx][ty])\n            add(bx*120+by*4+fx,bx*120+by*4+i,dis[tx][ty]-1);\n    }\n    add(bx*120+by*4+fx,sx*120+sy*4+fx^1,1);//\u60c5\u51b52\uff1a\u4ea4\u6362\u7a7a\u683c\u4e0e\u76ee\u6807\u68cb\u5b50\u7684\u4f4d\u7f6e\n}\nint d[4010],inq[4010];\nvoid spfa(int bx,int by){\n    int i,x,tx,ty,tt;queue<int>q;\n    for(i=0;i<=4000;++i)d[i]=1e7,inq[i]=0;\n    for(i=0;i<=3;++i){//\u67094\u79cd\u53ef\u884c\u7684\u5f00\u59cb\u60c5\u51b5\n        tx=bx+mvx[i],ty=by+mvy[i],tt=bx*120+by*4+i;\n        if(dis[tx][ty])d[tt]=dis[tx][ty]-1,q.push(tt),inq[tt]=1;\n    }\n    while(!q.empty()){\n        x=q.front(),q.pop(),inq[x]=0;\n        for(i=h[x];i!=-1;i=ne[i])\n            if(d[x]+w[i]<d[to[i]]){\n            d[to[i]]=d[x]+w[i];\n            if(!inq[to[i]])inq[to[i]]=1,q.push(to[i]);\n        }\n    }\n}\nint main()\n{\n    int i,j,sx,sy,mx,my,bx,by,ans;\n    scanf(\"%d%d%d\",&n,&m,&q);memset(h,-1,sizeof(h));\n    for(i=1;i<=n;++i)\n        for(j=1;j<=m;++j)scanf(\"%d\",&mp[i][j]);\n    for(i=1;i<=n;++i)\n        for(j=1;j<=m;++j){\n        if(!mp[i][j])continue;\n        if(mp[i-1][j])bfs(i-1,j,i,j,0);\n        if(mp[i+1][j])bfs(i+1,j,i,j,1);\n        if(mp[i][j-1])bfs(i,j-1,i,j,2);\n        if(mp[i][j+1])bfs(i,j+1,i,j,3);\n    }\n    while(q--){\n        scanf(\"%d%d%d%d%d%d\",&sx,&sy,&bx,&by,&mx,&my);\n        if(bx==mx&&by==my){puts(\"0\");continue;}\n        bfs(sx,sy,bx,by,4);spfa(bx,by);ans=1e7;\n        for(i=0;i<=3;++i)ans=min(ans,d[mx*120+my*4+i]);//\u67094\u79cd\u53ef\u884c\u7684\u7ed3\u675f\u60c5\u51b5\n        if(ans<1e7)printf(\"%d\\n\",ans);\n        else puts(\"-1\");\n    }\n    return 0;\n}\n```",
        "postTime": 1507709286,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "\u6b63\u89e3\u662fbfs+spfa\n\n\n\u5f88\u660e\u786e\u7684\u662f\u8981\u60f3\u628a\u683c\u5b50S\u79fb\u5230\u76ee\u6807\u4f4d\u7f6eT\uff0c\u9996\u5148\u5f97\u628a\u767d\u683c\u5b50E\u79fb\u5230S\u7684\u65c1\u8fb9\uff0c\u5728\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\u4f7f\u683c\u5b50S\u5230\u8fbeT\n\n\n\u683c\u5b50S\u60f3\u8981\u8d70\u5230\u4e0e\u5b83\u76f8\u90bb\u7684k\u65b9\u5411(left,right,up,down)\u4e0a\u7684\u683c\u5b50\uff0c\u5fc5\u987b\u5148\u628aE\u683c\u5b50\u901a\u8fc7w\u7684\u82b1\u8d39\u79fb\u5230\u90a3\u91cc\uff0c\u7136\u540e\u5728\u75281\u7684\u82b1\u8d39\u4f7fS\u8d70\u5230\u90a3 \u91cc\uff0c\u603b\u82b1\u8d39\u4e3aw+1\uff0c\u7531\u4e8e\u4ece\u4e00\u4e2a\u683c\u5b50\u5411\u76f8\u90bb\u65b9\u5411\u4e0a\u8d70\u4e00\u6b65\u7684\u82b1\u8d39\u8981\u591a\u6b21\u4f7f\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u628a\u5b83\u9884\u5904\u7406\u6210\u6570\u7ec4move[x][y][k][h]\uff0c\u8868\u793a\u4ece(x,y)\u8fd9\u4e2a\u68cb\u5b50\uff0c\u767d\u683c\u5b50\u5728k\u65b9\u5411\u4e0a\uff0c\u4f7f\u68cb\u5b50\u8d70\u5230h\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u683c\u5b50\u7684\u6700\u5c11\u82b1\u8d39\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528BFS\u9884\u5904\u7406\n\n\n\u6709\u4e86\u8fd9\u4e48\u591a\u4e1c\u897f\uff0c\u80fd\u4e0d\u80fd\u7528BFS\u505a\u5462\uff1f\u4e0d\u884c\u3002\u4ece\u4e00\u4e2a\u70b9\u8d70\u5230\u76f8\u90bb\u7684\u8282\u70b9\u7684\u82b1\u8d39\u4e0d\u4e00\u5b9a\u662f1\uff0c\u800c\u4e14\u8fd8\u53d7\u767d\u683c\u5b50\u6240\u5728\u65b9\u5411\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u5c31\u4e0d\u518d\u8bbe\u72b6\u6001\u4e3a(x,y),\u800c\u662f(x,y,k)\uff0ck\u8868\u793a\u767d\u683c\u5b50\u7684\u65b9\u5411\uff0cdist[x][y][k]\u5b58\u50a8\u8d70\u5230\u8fd9\u4e2a\u72b6\u6001\u7684\u6700\u5c0f\u6b65\u6570\u3002\u5f88\u660e\u663e\uff0c\u4ece\u4e00\u4e2a\u683c\u5b50\u5411h\u65b9\u5411\u8d70\u7684\u6700\u5c0f\u4ee3\u4ef7\u5c31\u662fmove[x][y][k][h]\uff0c\u5f88\u660e\u663e\u8fd9\u4e2a\u72b6\u6001\u53ea\u80fd\u8f6c\u79fb\u5230(x,y,other(h)),other(h)\u8868\u793a\u548ch\u76f8\u53cd\u7684\u65b9\u5411\uff0c\u6bd4\u5982\u4f60\u5411\u53f3\u8d70\u5b8c\u4e00\u6b21\uff0c\u767d\u683c\u5b50\u4e00\u5b9a\u5728\u8fd9\u4e2a\u683c\u5b50\u7684\u5de6\u4fa7\u3002\n\n\n\u73b0\u5728\u5df2\u7ecf\u6784\u5efa\u4e86\u4e00\u4e2a\u53c8\u72b6\u6001(x,y,k)\u6784\u6210\u7684\u4e00\u5f20\u56fe\uff0c\u8fb9\u6743\u4e5f\u5df2\u7ecf\u7b97\u51fa\u6765\u4e86\uff0c\u56e0\u6b64\u60f3\u8981\u4ece\u51fa\u53d1\u70b9\u627e\u4e00\u6761\u5230\u7ed3\u675f\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u53ef\u4ee5\u7528SPFA\n\n\n\n\u4f46\u662f\u5728\u8003\u573a\u6211\u4eec\u5982\u679c\u60f3\u4e0d\u5230\u6b63\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u6253\u66b4\u529b\uff0c\u4e00\u822c\u7684\u66b4\u529b\u80fd\u591f\u670960\u5206\uff0c\u7a0d\u52a0\u4f18\u5316\u80fd\u670970\u5206\n\n70\u5206\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#define rg register\nusing namespace std;\nstruct node\n{\n    int x,y;\n    int a,b;\n    int step;\n}LYH;\nbool vis[31][31][31][31];\nint map[31][31];\nint n,m,Q,ans;\nint ex,ey,sx,sy,tx,ty;\nint X0[5]={0,0,-1,0,1};\nint Y0[5]={0,-1,0,1,0};\ninline int gi()\n{\n    int x = 0, f = 1; char ch = getchar();\n    while(ch < '0' || ch > '9') {if(ch == '-') f = -1; ch = getchar();}\n    while(ch >= '0' && ch <= '9') {x = x * 10 + ch - '0'; ch = getchar();}\n    return x * f;\n}\nvoid bfs( )\n{\n    queue<node> q;\n    node temp,tmp;\n    int a,b;\n    memset( vis,0x0,sizeof vis );\n    q.push( LYH );\n    vis[ sx ][ sy ][ ex ][ ey ]=1;\n    while( !q.empty() )\n    {\n        temp=q.front();\n        q.pop();\n        if( temp.a==tx && temp.b==ty )\n        {\n            ans=temp.step;\n            return ;\n        }\n        for(int k=1;k<=4;k++)\n        {\n            tmp=temp;\n            a=tmp.x+X0[ k ];\n            b=tmp.y+Y0[ k ];\n            if( a==tmp.a && b==tmp.b )\n            {\n                tmp.a=tmp.x;tmp.b=tmp.y;\n            }\n            if( !map[ a ][ b ] || a<1 || a>n || b<1 || b>m || v>u )\n                continue ;\n            tmp.x=a;tmp.y=b;tmp.step=tmp.step+1;\n            if( !vis[ tmp.a ][ tmp.b ][ tmp.x ][ tmp.y ] )\n            {\n                q.push( tmp );\n                vis[ tmp.a ][ tmp.b ][ tmp.x ][ tmp.y ]=1;\n            }\n        }\n    }\n}\nint main()\n{\n    n=gi();m=gi();Q=gi();\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            map[ i ][ j ]=gi();\n    while( Q-- )\n    {\n        ans=n*m;\n        ex=gi();ey=gi();sx=gi();sy=gi();tx=gi();ty=gi();\n        LYH.x=ex;LYH.y=ey;\n        LYH.a=sx;LYH.b=sy;\n        LYH.step=0;\n        if( sx==tx && sy==ty )\n        {\n            printf(\"0\\n\");\n            continue ;\n        }\n        bfs();\n        if( ans!=n*m )\n            printf(\"%d\\n\",ans);\n        else\n            printf(\"-1\\n\");\n    }\n    return 0;\n}\n```\n\u6b63\u89e3\u4ee3\u7801\uff1a\n  \n  \n  \n  \n  \n  \n```cpp\n#include <cstdio>  \n#include <queue>  \n#include <cstring>  \n#include <iostream>  \n#define up 1  \n#define down 2  \n#define left 3  \n#define right 4  \n#define maxn 35  \n#define inf 0x3f3f3f3f  \nusing namespace std;  \nstruct node  \n{  \n    int x, y, k;  \n}t1, t2;  \nint pan[maxn][maxn], dist[maxn][maxn][5], Ex, Ey, move[maxn][maxn][5][5], deep[maxn][maxn], n, m;  \nbool in[maxn][maxn][5], done[maxn][maxn];  \nqueue<node> q, qb;  \ninline int other(int k)  \n{  \n    if(k==up)return down;  \n    if(k==down)return up;  \n    if(k==left)return right;  \n    if(k==right)return left;  \n}  \nnode go(node n, int k)  \n{  \n    node t=n;  \n    if(k==up)t.x--;  \n    if(k==down)t.x++;  \n    if(k==left)t.y--;  \n    if(k==right)t.y++;  \n    return t;  \n}  \nint bfs(const node s, const node t)  \n{  \n    if(pan[s.x][s.y]==0 || pan[s.x][s.y]==0)return inf;  \n    memset(deep,0x3f,sizeof(deep));  \n    memset(done,0,sizeof(done));  \n    qb=*(new queue<node>);  \n    int i, j, k, h;  \n    node now, tmp;  \n    qb.push(s);  \n    deep[s.x][s.y]=0;  \n    done[s.x][s.y]=true;  \n    while(!qb.empty() && !done[t.x][t.y])  \n    {  \n        now=qb.front();  \n        qb.pop();  \n        for(k=1;k<=4;k++)  \n        {  \n            tmp=go(now,k);  \n            if(!done[tmp.x][tmp.y] && pan[tmp.x][tmp.y]==1)  \n            {  \n                done[tmp.x][tmp.y]=true;  \n                qb.push(tmp);  \n                deep[tmp.x][tmp.y] = deep[now.x][now.y]+1;  \n            }  \n        }  \n    }  \n    return deep[t.x][t.y];  \n}  \nvoid init()       //\u521d\u59cb\u5316move\u6570\u7ec4   \n{  \n    memset(move,0x3f,sizeof(move));  \n    int i, j, k, h;  \n    for(i=1;i<=n;i++)  \n        for(j=1;j<=m;j++)  \n        {  \n            if(pan[i][j]==0)continue;  \n            pan[i][j]=0;   \n            for(k=1;k<=4;k++)  \n            {  \n                for(h=1;h<=4;h++)  \n                {  \n                    if(h<k)  \n                    {  \n                        move[i][j][k][h]=move[i][j][h][k];  \n                        continue;  \n                    }  \n                    t1=go((node){i,j},k);  \n                    t2=go((node){i,j},h);  \n                    if(pan[t1.x][t1.y]==0 || pan[t2.x][t2.y]==0)continue;  \n                    move[i][j][k][h]=bfs(t1,t2)+1;  \n                }  \n            }  \n            pan[i][j]=1;  \n        }  \n}  \nint spfa(const node S, const node T)  \n{  \n    if(S.x==T.x && S.y==T.y)return 0;  \n    node now, t;  \n    int i, j, k, h, ans;  \n    memset(dist,0x3f,sizeof(dist));  \n    memset(in,0,sizeof(in));  \n    if(pan[S.x][S.y]==0 || pan[T.x][T.y]==0)return inf;  \n    pan[S.x][S.y]=0;  \n    q=*(new queue<node>);  \n    for(k=1;k<=4;k++)  \n    {  \n        t=(node){S.x,S.y,k};  \n        q.push(t), in[S.x][S.y][k]=true;  \n        dist[S.x][S.y][k]=bfs((node){Ex,Ey},go(S,k));  \n    }  \n    pan[S.x][S.y]=1;  \n    while(!q.empty())  \n    {  \n        now=q.front();  \n        q.pop();  \n        in[now.x][now.y][now.k]=false;  \n        for(h=1;h<=4;h++)  \n        {  \n            t=go(now,h);  \n            t.k=other(h);  \n            if(dist[now.x][now.y][now.k] + move[now.x][now.y][now.k][h] < dist[t.x][t.y][other(h)])  \n            {  \n                dist[t.x][t.y][other(h)]=dist[now.x][now.y][now.k]+move[now.x][now.y][now.k][h];  \n                if(!in[t.x][t.y][t.k])  \n                    q.push(t), in[t.x][t.y][t.k]=true;  \n            }  \n        }  \n    }  \n    ans=inf;  \n    for(k=1;k<=4;k++)  \n        ans = min(ans,dist[T.x][T.y][k]);  \n    return ans;  \n}  \nint main()  \n{  \n    int q, sx, sy, tx, ty, i, j, k, ans;  \n    scanf(\"%d%d%d\",&n,&m,&q);  \n    for(i=1;i<=n;i++)  \n        for(j=1;j<=m;j++)  \n            scanf(\"%d\",&pan[i][j]);  \n    init();  \n    for(i=1;i<=q;i++)  \n    {  \n        scanf(\"%d%d%d%d%d%d\",&Ex,&Ey,&sx,&sy,&tx,&ty);  \n        ans=spfa((node){sx,sy},(node){tx,ty});  \n        if(ans<inf)printf(\"%d\\n\",ans);  \n        else printf(\"-1\\n\");  \n    }  \n    return 0;  \n}\n```",
        "postTime": 1499173557,
        "uid": 25098,
        "name": "QJLYH",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "\u8003\u9a8c\u72b6\u6001\u8bb0\u5f55\u6280\u5de7\u7684\u4e00\u9053\u597d\u9898\uff01\u56e0\u4e3a\u6211\u4eec\u53ea\u8981\u8003\u8651\u6307\u5b9a\u5757\u7684\u4f4d\u7f6e\uff0c\u800c\u6307\u5b9a\u5757\u4f4d\u7f6e\u7684\u79fb\u52a8\u548c\u7a7a\u767d\u5757\u6709\u5173\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55(x1,y1,x2,y2)\u8868\u793a\u6307\u5b9a\u5757\u5728(x1,y1)\uff0c\u7a7a\u767d\u5757\u5728(x2,y2)\u7684\u72b6\u6001\u3002\u7531\u4e8e\u7a7a\u767d\u5757\u53ef\u4ee5\u56db\u65b9\u5411\u79fb\u52a8\uff0c\u6240\u4ee5\u6bcf\u4e2a\u72b6\u6001\u4f1a\u5411\u56db\u4e2a\u72b6\u6001\u8fde\u8fb9\u3002\u8fd9\u6837\u5171\u6709(nm)^2\u4e2a\u72b6\u6001\uff0c\u603b\u590d\u6742\u5ea6\u4e3aO(q(nm)^2)\uff0c\u53ea\u80fd\u901a\u8fc760%\u7684\u6570\u636e\u3002\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\u53ea\u6709\u7a7a\u767d\u5757\u4f4d\u4e8e\u6307\u5b9a\u5757\u7684\u56db\u65b9\u5411\u4e0a\uff0c\u6307\u5b9a\u5757\u624d\u53ef\u4ee5\u79fb\u52a8\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0(x1,y1,dir)\u8868\u793a\u6307\u5b9a\u5757\u5728(x1,y1)\uff0c\u7a7a\u767d\u5757\u5728\u6307\u5b9a\u5757\u7684dir\u65b9\u5411\uff080\u8868\u793a\u4e0a\uff0c1\u8868\u793a\u4e0b\u4ec0\u4e48\u7684......\uff09\u7684\u72b6\u6001\u3002\u8fd9\u6837\u72b6\u6001\u53ea\u67094nm\u4e2a\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5404\u4e2a\u72b6\u6001\u4e4b\u95f4\u7684\u8fde\u8fb9\u3002\u9996\u5148\uff0c\u7a7a\u767d\u5757\u548c\u6307\u5b9a\u5757\u53ef\u4ee5\u4ea4\u6362\u4f4d\u7f6e\uff0c\u8fd9\u4e24\u4e2a\u72b6\u6001\u8fde\u8fb9\u7684\u8fb9\u6743\u4e3a1\uff1b\u5176\u6b21\uff0c\u5047\u5b9a\u7a7a\u767d\u5757\u5728\u6307\u5b9a\u5757\u4e0a\u65b9\uff0c\u7a7a\u767d\u5757\u53ef\u4ee5\u901a\u8fc7\u82e5\u5e72\u6b65\u79fb\u52a8\u6765\u5230\u7a7a\u767d\u5757\u4e0b/\u5de6/\u53f3\u65b9\u3002\u8fd9\u4e9b\u72b6\u6001\u8fde\u8fb9\u7684\u8fb9\u6743\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7BFS\u8ba1\u7b97\u51fa\u6765\u3002\n\n\u8fd9\u6837\u5c31\u6784\u9020\u51fa\u4e86\u4e00\u5f20\u56fe\uff0c\u5148\u628a\u7a7a\u767d\u5757\u79fb\u52a8\u5230\u76ee\u6807\u5757\u65c1\u8fb9\uff0c\u4e4b\u540e\u5411\u76ee\u6807\u72b6\u6001\uff08\u7a7a\u767d\u5757\u53ef\u4ee5\u4f4d\u4e8e\u6307\u5b9a\u5757\u7684\u56db\u4e2a\u65b9\u5411\uff09\u505a\u6700\u77ed\u8def\u5373\u53ef\u3002\u7528spfa\u590d\u6742\u5ea6\u4e3aO(qknm)\uff0c\u53ef\u4ee5\u901a\u8fc7100%\u7684\u6570\u636e\u3002\n\n```cpp\n\n#include <stdio.h>\n#include <string.h>\n#define QLEN 4000\nint n,m,qq;\nint e[20010][3],p[4010],tot = 0,ans;\nint q[1010][2],dis[35][35],sq[4010],sdis[4010],head,tail;\nshort vis[4010],map[35][35],dir[4][2] = {-1,0,1,0,0,-1,0,1};\nint min(int a,int b)\n{\n    return a<b?a:b;\n}\nvoid adde(int sn,int fn,int val)\n{\n    e[++tot][0] = fn; e[tot][1] = val; e[tot][2] = p[sn]; p[sn] = tot;\n}\nvoid bfs(int si,int sj,int bi,int bj,int id)\n{\n    int i,j,k,ii,jj;\n    memset(dis,0,sizeof(dis));\n    head = 1; tail = 2;\n    q[1][0] = si; q[1][1] = sj; dis[si][sj] = 1;\n    while(head != tail)\n    {\n        i = q[head][0]; j = q[head++][1];\n        for(k=0;k<4;k++)\n        {\n            ii = i+dir[k][0]; jj = j+dir[k][1];\n            if(!map[ii][jj] || (ii==bi&&jj==bj) || dis[ii][jj]) continue;\n            dis[ii][jj] = dis[i][j]+1;\n            q[tail][0] = ii; q[tail++][1] = jj;\n        }\n    }\n    if(id == 4) return;\n    for(k=0;k<4;k++)\n    {\n        i = bi+dir[k][0]; j = bj+dir[k][1];\n        if((i == si && j == sj) || !dis[i][j]) continue;\n        adde(bi*30*4+bj*4+id,bi*30*4+bj*4+k,dis[i][j]-1);\n    }\n    adde(bi*30*4+bj*4+id,si*30*4+sj*4+(id^1),1);\n}\nvoid spfa(int si,int sj)\n{\n    int i,sn,fn,val;\n    memset(sdis,60,sizeof(sdis));\n    head = 1; tail = 1;\n    for(i=0;i<4;i++)\n    {\n        if(!dis[si+dir[i][0]][sj+dir[i][1]]) continue;\n        sn = si*30*4+sj*4+i;\n        sq[tail++] = sn; sdis[sn] = dis[si+dir[i][0]][sj+dir[i][1]]-1; vis[sn] = 1;\n    }\n    while(head != tail)\n    {\n        sn = sq[head++];\n        for(i=p[sn];i;i=e[i][2])\n        {\n            fn = e[i][0]; val = e[i][1];\n            if(sdis[fn]<=sdis[sn]+val) continue;\n            sdis[fn] = sdis[sn]+val;\n            if(vis[fn]) continue;\n            vis[fn] = 1; sq[tail++] = fn;\n            if(tail>QLEN) tail = 1;\n        }\n        vis[sn] = 0;\n        if(head>QLEN) head = 1;\n    }\n}\nint main()\n{\n    int i,j,bi,bj,si,sj,fi,fj;\n    scanf(\"%d%d%d\",&n,&m,&qq);\n    for(i=1;i<=n;i++) for(j=1;j<=m;j++) scanf(\"%hd\",&map[i][j]);\n    for(i=1;i<=n;i++) for(j=1;j<=m;j++)\n    {\n        if(!map[i][j]) continue;\n        if(map[i-1][j]) bfs(i-1,j,i,j,0);\n        if(map[i+1][j]) bfs(i+1,j,i,j,1);\n        if(map[i][j-1]) bfs(i,j-1,i,j,2);\n        if(map[i][j+1]) bfs(i,j+1,i,j,3);\n    }\n    while(qq--)\n    {\n        scanf(\"%d%d%d%d%d%d\",&bi,&bj,&si,&sj,&fi,&fj);\n        if(si == fi && sj == fj) { printf(\"0\\n\"); continue;}\n        bfs(bi,bj,si,sj,4); spfa(si,sj); ans = 999999;\n        for(i=0;i<4;i++) ans = min(ans,sdis[fi*30*4+fj*4+i]);\n        if(ans<999999) printf(\"%d\\n\",ans);\n        else printf(\"-1\\n\");\n    }\n    return 0;\n}\n\n```",
        "postTime": 1439880526,
        "uid": 4341,
        "name": "TsReaper",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    },
    {
        "content": "\u6b64\u9898\u53ef\u4ee5\u76f4\u63a5BFS\uff0c\u53ef\u5f9770\uff0c\u5373f[a][b][x][y]\u8868\u793a\u7a7a\u767d\u683c\u5728(a,b),\u6307\u5b9a\u68cb\u5b50\u5728(x,y)\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u53ef\u4ee5\u770b\u4f5c\u7a7a\u767d\u683c\u53ef\u4ee5\u81ea\u7531\u79fb\u52a8\uff0c\u68cb\u5b50\u53ea\u80fd\u5728\u548c\u7a7a\u767d\u683c\u4ea4\u6362\u65f6\u624d\u53ef\u4ee5\u79fb\u52a8\n\n\u8981\u5f97100\uff0c\u5219\u5e94\u5728BFS\u57fa\u7840\u4e0a\u52a0\u67d0\u4e9b\u4f18\u5316\n\n\u8003\u8651BFS\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u6307\u5b9a\u68cb\u5b50\u4e0d\u52a8\uff0c\u7a7a\u767d\u683c\u81ea\u7531\u79fb\u52a8\u65f6\uff0c\u6d6a\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u9884\u5904\u7406\u51fa\u6765\n\n\u8bbeans[a][b][x][y]\u8868\u793a\u68cb\u5b50\u5728(a,b)\uff0c\u7a7a\u767d\u683c\u5728\u68cb\u5b50\u7684x\u5904(x\u4e3a\u65b9\u5411\u589e\u91cf\u7684\u4e0b\u6807)\uff0c\u60f3\u79fb\u52a8\u5230\u68cb\u5b50\u7684y\u5904(\u4f46\u663e\u7136\u4e0d\u80fd\u7ecf\u8fc7\u68cb\u5b50)\uff0c\u56e0\u4e3a\u6bcf\u6b21\u7a7a\u767d\u683c\u548c\u68cb\u5b50\u4ea4\u6362\u540e\uff0c\u5b83\u90fd\u5728\u68cb\u5b50\u65c1\u8fb9\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fd9\u6837\u6765\u52a0\u901f\n\n\u6c42\u51faans\u540e\uff0c\u4fbf\u53ef\u4ee5SPFA\u4e86\uff0c\u8bbed[x][y][l]\u8868\u793a\u68cb\u5b50\u5728(x,y)\u5904\uff0c\u7a7a\u767d\u683c\u5728\u5176l\u5904\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u6bcf\u6b21\u8f6c\u79fb\u65f6\u53ea\u8981\u8003\u8651\u68cb\u5b50\u600e\u4e48\u52a8\u5c31\u884c\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6O((nm)^2)\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <queue>\n#include <math.h>\n#include <algorithm>\nusing namespace std;\nconst int M=1000000007;\nint n,m,i,j,qq,a[35][35],vis[35][35],l,r,ans[35][35][4][4],k,p,ii,sx,sy,ex,ey,tx,ty,d[35][35][4];\nint x[4]={0,0,-1,1};\nint y[4]={1,-1,0,0};\nint e[4]={1,0,3,2};\nstruct str{\n\tint x,y,l;\n}q[1000005];\nint main(){\n\tfreopen(\"P1979.in\",\"r\",stdin);\n\tfreopen(\"P1979.out\",\"w\",stdout);\n\tscanf(\"%d %d %d\",&n,&m,&qq);\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t\tif(a[i][j]==1)\n\t\t\t\tfor(k=0;k<4;k++)\n\t\t\t\t\tfor(p=0;p<4;p++)\n\t\t\t\t\t\tif(k!=p)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tl=r=1;\n\t\t\t\t\t\t\tq[1]=(str){i+x[k],j+y[k],0};\n\t\t\t\t\t\t\tint fx=i+x[p],fy=j+y[p];\n\t\t\t\t\t\t\tif(a[q[1].x][q[1].y]==0||a[fx][fy]==0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tans[i][j][k][p]=-1;\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmemset(vis,-1,sizeof(vis));\n\t\t\t\t\t\t\ta[i][j]=0;\n\t\t\t\t\t\t\tvis[q[1].x][q[1].y]=0;\n\t\t\t\t\t\t\twhile(l<=r)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfor(ii=0;ii<4;ii++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tint xx=x[ii]+q[l].x;\n\t\t\t\t\t\t\t\t\tint yy=y[ii]+q[l].y;\n\t\t\t\t\t\t\t\t\tif(a[xx][yy]==1&&vis[xx][yy]==-1)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvis[xx][yy]=vis[q[l].x][q[l].y]+1;\n\t\t\t\t\t\t\t\t\t\tq[++r]=(str){xx,yy,0};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tl++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tans[i][j][k][p]=vis[fx][fy];\n\t\t\t\t\t\t}\n\twhile(qq--)\n\t{\n\t\tscanf(\"%d %d %d %d %d %d\",&ex,&ey,&sx,&sy,&tx,&ty);\n\t\tif(sx==tx&&sy==ty)\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tmemset(vis,-1,sizeof(vis));//\u8fd9\u513f\u7684BFS\u8868\u793a\u5148\u628a\u7a7a\u767d\u683c\u79fb\u5230\u68cb\u5b50\u65c1\u8fb9\u662f\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u7136\u540e\u624d\u80fd\u7528ans\n\t\tq[l=r=1]=(str){ex,ey};\n\t\tvis[ex][ey]=0;\n\t\ta[sx][sy]=0;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tfor(ii=0;ii<4;ii++)\n\t\t\t{\n\t\t\t\tint xx=x[ii]+q[l].x;\n\t\t\t\tint yy=y[ii]+q[l].y;\n\t\t\t\tif(a[xx][yy]==1&&vis[xx][yy]==-1)\n\t\t\t\t{\n\t\t\t\t\tvis[xx][yy]=vis[q[l].x][q[l].y]+1;\n\t\t\t\t\tq[++r]=(str){xx,yy,0};\n\t\t\t\t}\n\t\t\t}\n\t\t\tl++;\n\t\t}\n\t\ta[sx][sy]=1;\n\t\tl=1;\n\t\tr=0;\n\t\tmemset(d,0x7f,sizeof(d));\n\t\tfor(i=0;i<4;i++)\n\t\t{\n\t\t\tint xx=x[i]+sx;\n\t\t\tint yy=y[i]+sy;\n\t\t\tif(vis[xx][yy]!=-1)\n\t\t\t{\n\t\t\t\tq[++r]=(str){xx,yy,e[i]};\n\t\t\t\td[xx][yy][e[i]]=vis[xx][yy]+1;\n\t\t\t}\n\t\t}\n\t\twhile(l<=r)\n\t\t{\n\t\t\tfor(i=0;i<4;i++)\n\t\t\t\tif(i!=q[l].l&&ans[q[l].x][q[l].y][q[l].l][i]!=-1)\n\t\t\t\t{\n\t\t\t\t\tint xx=x[i]+q[l].x;\n\t\t\t\t\tint yy=y[i]+q[l].y;\n\t\t\t\t\tif(d[xx][yy][e[i]]>d[q[l].x][q[l].y][q[l].l]+ans[q[l].x][q[l].y][q[l].l][i]+1)\n\t\t\t\t\t{\n\t\t\t\t\t\td[xx][yy][e[i]]=d[q[l].x][q[l].y][q[l].l]+ans[q[l].x][q[l].y][q[l].l][i]+1;\n\t\t\t\t\t\tq[++r]=(str){xx,yy,e[i]};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tl++;\n\t\t}\n\t\tif(min(min(min(d[tx][ty][0],d[tx][ty][1]),d[tx][ty][2]),d[tx][ty][3])>1000000000)\n\t\t\tprintf(\"-1\\n\");\n\t\telse\n\t\t\tprintf(\"%d\\n\",min(min(min(d[tx][ty][0],d[tx][ty][1]),d[tx][ty][2]),d[tx][ty][3]));\n\t}\n}\n\n```",
        "postTime": 1526106976,
        "uid": 13185,
        "name": "\u53cc\u7ba1\u8367\u5149\u706f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1979 \u3010\u534e\u5bb9\u9053 \u3011"
    }
]