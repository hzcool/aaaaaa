[
    {
        "content": "\u6cd5\u4e00\uff1a\n\n\u5c06\u8fb9\u6309\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u8003\u8651\u4e00\u6761\u8def\u5f84\uff0c\u4e00\u5b9a\u662f\u6700\u5927\u7684\u82e5\u5e72\u6761\u8fb9\u548c\u6700\u5c0f\u7684\u76f8\u5e94\u7684\u6ca1\u9009\u7684\u8fb9\u8fdb\u884c\u4ea4\u6362\u3002\n\n\u8fd9\u4f1a\u5bfc\u81f4\u5b58\u5728\u4e00\u4e2a\u5206\u754c\u7ebfLL\uff0c\u4ea4\u6362\u4e4b\u540e\u6070\u597d\u9009\u4e2d\u524dLL\u5c0f\u7684\u8fb9\uff0c\u4e14\u53ea\u5141\u8bb8>L>L\u7684\u8fb9\u4e0e\u2264L\u2264L\u7684\u8fb9\u8fdb\u884c\u4ea4\u6362\u3002\n\n\u679a\u4e3eLL\uff0c\u8bbef[i][j][k]f[i][j][k]\u8868\u793a\u4ece11\u5230ii\uff0c\u7ecf\u8fc7\u4e86jj\u6761\u524dLL\u5c0f\u7684\u8fb9\uff0c\u820d\u5f03\u4e86kk\u6761>L>L\u7684\u8fb9\u65f6\uff0c>L>L\u4e14\u672a\u820d\u5f03\u7684\u8fb9\u6743\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n\u7528Dijkstra\u7b97\u6cd5\u6c42\u51faff\uff0c\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6O((n+m)m2k) O((n+m)m2k)\u3002\n\n~~~\n#include<cstdio>\n#include<queue>\n#include<vector>\n#include<algorithm>\nusing namespace std;\ntypedef pair<int,int>P;\nconst int N=55,M=155,inf=~0U>>1;\nint n,m,K,i,j,k,L,g[N],v[M<<1],nxt[M<<1],ed,base,ans=inf,f[N][M][22];\npriority_queue<P,vector<P>,greater<P> >q;\nstruct E{int x,y,w;}e[M];\ninline bool cmp(const E&a,const E&b){return a.w<b.w;}\ninline void add(int x,int y){v[++ed]=y;nxt[ed]=g[x];g[x]=ed;}\ninline void ext(int x,int y,int z,int w){\n  if(y>L||z>K)return;\n  if(f[x][y][z]<=w)return;\n  q.push(P(f[x][y][z]=w,(x<<13)|(y<<5)|z));\n}\nint main(){\n  scanf(\"%d%d%d\",&n,&m,&K);\n  for(i=1;i<=m;i++)scanf(\"%d%d%d\",&e[i].x,&e[i].y,&e[i].w);\n  sort(e+1,e+m+1,cmp);\n  for(ed=i=1;i<=m;i++)add(e[i].x,e[i].y),add(e[i].y,e[i].x);\n  for(L=0;L<=m;L++){\n    base+=e[L].w;\n    if(base>=ans)break;\n    for(i=1;i<=n;i++)for(j=0;j<=L;j++)for(k=0;k<=K;k++)f[i][j][k]=inf;\n    ext(1,0,0,base);\n    while(!q.empty()){\n      P t=q.top();q.pop();\n      int z=t.second&31;t.second>>=5;\n      int y=t.second&255;t.second>>=8;\n      int x=t.second;\n      if(f[x][y][z]<t.first)continue;\n      for(i=g[x];i;i=nxt[i])if((i>>1)<=L)ext(v[i],y+1,z,t.first);\n      else{\n        ext(v[i],y,z,t.first+e[i>>1].w);\n        ext(v[i],y,z+1,t.first);\n      }\n    }\n    for(j=0;j<=L;j++)for(k=0;k<=K;k++)if(j+k<=L&&f[n][j][k]<ans)ans=f[n][j][k];\n  }\n  return printf(\"%d\",ans),0;\n}\n~~~\n\n\u6cd5\u4e8c\uff1a\n\n\u5177\u4f53\u601d\u8def:DP\nf[i][j][k]\u8868\u793a1-i,\u524dL\u6761\u8def\u4e0a\u7528\u4e86 j\u6761,L\u540e\u7684\u8def\u4e0a\u6362\u4e86k\u6761\u7684\u6700\u5c0f\u4ee3\u4ef7\n\u679a\u4e3e\u4e00\u4e0bL\u5c31\u6709\u4e86\u4e00\u4e2a\u590d\u6742\u5ea6O(nlognk^3)\u7684\u505a\u6cd5\n\n~~~\n#include<bits/stdc++.h>\nusing namespace std;\n#define INF 100000000\n#define P pair<int,int>\nconst int M=200010;\nint n,i,j,m,k,top=1,L,mogic;\nint first[M],next[M],to[M],last[M],len[M],f[100][200][50],ord[M];\nbool vis[M*3];\nstruct E{int x,y,w;}e[M];\nqueue<P>q;\ninline bool cmp(const E&a,const E&b){return a.w<b.w;}\nint ans=2100000000,base=0;\nvoid add(int x,int y,int z,int num)\n{\n    top++,to[top]=y;len[top]=z;ord[top]=num;\n    if(first[x]==0)first[x]=top;else next[last[x]]=top;\n    last[x]=top;\n}\nvoid PUSH(int x,int y,int z,int w)\n{\n    if(y>L||z>mogic)return;\n    if(f[x][y][z]<=w)return;\n    q.push(P(f[x][y][z]=w,(x<<13)|(y<<5)|(z)));\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&mogic);\n    for(i=1;i<=m;i++)scanf(\"%d%d%d\",&e[i].x,&e[i].y,&e[i].w);\n    sort(e+1,e+1+m,cmp);\n    for(i=1;i<=m;i++)add(e[i].x,e[i].y,e[i].w,i),add(e[i].y,e[i].x,e[i].w,i);\n    for(L=0;L<=m;L++)\n    {\n        base+=e[L].w;\n        if(base>ans)break;\n        for(i=1;i<=n;i++)for(j=0;j<=L;j++)for(k=0;k<=mogic;k++)f[i][j][k]=INF;\n        memset(vis,0,sizeof(vis));\n        PUSH(1,0,0,base);\n        while(!q.empty())\n        {\n            P TOP=q.front();q.pop();\n            int z=TOP.second&31;TOP.second>>=5;\n            int y=TOP.second&255;TOP.second>>=8;\n            int x=TOP.second;\n            if(f[x][y][z]<TOP.first)continue;\n            for(i=first[x];i;i=next[i])\n            if(ord[i]<=L)\n            {\n                PUSH(to[i],y+1,z,TOP.first);\n            }else PUSH(to[i],y,z,TOP.first+e[ord[i]].w),PUSH(to[i],y,z+1,TOP.first);\n            \n        }\n        for(j=0;j<=L;j++)for(k=0;k<=mogic;k++)if(j+k<=L&&f[n][j][k]<ans)ans=f[n][j][k];\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n~~~\n\u6cd5\u4e09\uff1a\n\n\u8fd9\u662f\u4e00\u90532-sat\u7684\u5165\u95e8\u9898\u3002 \n\u6211\u5199\u5f97\u5f88\u9ebb\u70e6\u3002 \n\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u83dc\u90fd\u62c6\u70b9\u3002 \n\u7531\u4e8e\u4e00\u79cd\u6750\u6599\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u6240\u4ee5\u53bb\u4e86H1\u5c31\u53ea\u80fd\u53d6M1\u2019\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \n\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u559c\u597d[a,b]\uff0c\u90fd\u8fde\u4e24\u6761\u8fb9\uff0c[a\u2019,b],[b\u2019,a]\uff0c\u8868\u793a\u4e0d\u53d6\u5176\u4e2d\u4e00\u79cd\uff0c\u5c31\u5fc5\u987b\u53d6\u53e6\u4e00\u79cd\u3002 \n\u6784\u5b8c\u56fe\u4e4b\u540e\u8dd1\u4e00\u8fb9Tarjan\uff0c\u5224\u65ad\u6709\u6ca1\u6709\u540c\u4e00\u79cd\u6750\u6599\u7684\u4e0d\u540c\u83dc\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u6216\u8005\u62c6\u51fa\u6765\u7684\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u4e2d\u3002\n~~~\n#include <cstdio>\n#include <cctype>\n#include <algorithm>\nusing namespace std;\nconst int M=1005;\nstruct Edge{\n    int to,nxt;\n    Edge(int _to=0,int _nxt=0):to(_to),nxt(_nxt){}\n}edge[M<<1];\nint head[M],etot;\ninline void add_edge(int a,int b){\n    edge[etot]=Edge(b,head[a]);\n    head[a]=etot++;\n}\ninline void rd(int&res){\n    res=0;char c;\n    while(c=getchar(),!isdigit(c));\n    do res=res*10+(c^48);\n    while(c=getchar(),isdigit(c));\n}\nvoid input(int&res){\n    res=0;char c;\n    while(c=getchar(),c!='h'&&c!='m');\n    rd(res);\n    res=(res-1)*2;\n    if(c=='m') res|=1;\n}\nint stk[M],belong[M],low[M],dfn[M],instk[M];\nint dfs_clock,top,bcnt;\nvoid Tarjan(int x){\n    low[x]=dfn[x]=++dfs_clock;\n    instk[x]=1;\n    stk[++top]=x;\n    for(int i=head[x];~i;i=edge[i].nxt){\n        int to=edge[i].to;\n        if(!dfn[to]){\n            Tarjan(to);\n            low[x]=min(low[x],low[to]);\n        }else if(instk[to]) low[x]=min(low[x],dfn[to]);\n    }\n    if(low[x]==dfn[x]){\n        bcnt++;\n        int u;\n        do{\n            u=stk[top--];\n            belong[u]=bcnt;\n            instk[u]=0;\n        }while(u!=x);\n    }\n}\nvoid solve(){\n    etot=0;\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    n<<=1;\n    top=dfs_clock=bcnt=0;\n    for(int i=0;i<=n+n;i++)\n        head[i]=-1,instk[i]=dfn[i]=0;\n    for(int i=0;i<m;i++){\n        int a,b;\n        input(a);input(b);\n        // printf(\"a and b %d %d\\n\",a,b);\n        add_edge(a+n,b);\n        add_edge(b+n,a);\n    }\n    for(int i=0;i<n;i++){\n        add_edge(i+n,i^1);\n        add_edge(i^1,i+n);\n    }\n    for(int i=0;i<(n<<1);i++)\n        if(!dfn[i]) Tarjan(i);\n    for(int i=0;i<n;i++)\n        if(belong[i]==belong[i+n]||belong[i]==belong[i^1){\n            puts(\"BAD\");\n            return;\n        }\n    puts(\"GOOD\");\n}\nint main(){\n    int T;\n    scanf(\"%d\",&T);\n    while(T--) solve();\n    return 0;\n}\n~~~",
        "postTime": 1548554856,
        "uid": 115066,
        "name": "yang2018",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4038 \u3010[JSOI2010]\u65c5\u884c\u3011"
    }
]