[
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u4f53\u9a8c](https://mrsrz.github.io/2019/11/27/lg5670/)\n\n\u5728\u6211\u901a\u8fc7\u524d\uff0c\u8fd9\u9898\u7684\u6b63\u786e\u4ee3\u7801\u90fd\u975e\u5e38\u957f\u800c\u4e14\u601d\u8def\u6bd4\u8f83\u590d\u6742\uff08\u4e5f\u8bb8\uff09\u3002\u8fd9\u91cc\u8bf4\u4e00\u79cd\u7b80\u5355\u4e14\u6613\u4e8e\u7406\u89e3\u7684\u65b9\u6cd5\u3002\n\n\u8003\u8651\u5230 $m$ \u6bd4\u8f83\u5c0f\uff0c\u8be2\u95ee\u7684\u65f6\u5019\u53c8\u53ea\u8003\u8651\u6700\u540e $m$ \u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e\u5bf9 $2^m$ \u53d6\u6a21\u3002\u6240\u4ee5\u6570\u7684\u79cd\u7c7b\u53ea\u6709 $2^m$ \u79cd\uff0c\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u8303\u56f4\u3002\n\n\u5f02\u6216\u8fd0\u7b97\u662f\u6ee1\u8db3\u6d88\u53bb\u5f8b\u7684\uff0c\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u6570 $x$ \u5bf9\u7b54\u6848\u4ea7\u751f\u4e86\u8d21\u732e\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u3002\n\n\u6211\u4eec\u8003\u8651\u7528```bitset```\u7ef4\u62a4\u4e00\u4e2a\u6570\u5728\u4e00\u6bb5\u533a\u95f4\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002\u90a3\u4e48\u5408\u5e76\u76f8\u90bb\u4e24\u4e2a\u533a\u95f4\u7684\u4fe1\u606f\uff0c\u53ea\u9700\u8981\u5c06\u4e24\u4e2a```bitset```\u5f02\u6216\u8d77\u6765\u5373\u53ef\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e9b```bitset```\uff0c\u5355\u6b21\u67e5\u8be2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\frac{2^m}{\\omega}\\log n)$\u3002\n\n\u8003\u8651\u5bf9\u533a\u95f4\u6574\u4f53\u52a0\u4e0a\u67d0\u4e2a\u6570\u5bf9```bitset```\u7684\u5f71\u54cd\u3002\u90a3\u4e48\uff0c\u539f\u6765\u7684\u7b2c $k$ \u4f4d\u7684\u4fe1\u606f\uff0c\u73b0\u5728\u5bf9\u5e94\u7684\u5c31\u662f\u7b2c $(k+x)\\bmod2^{m}$ \u4f4d\u7684\u4fe1\u606f\u4e86\u3002\u76f8\u5f53\u4e8e\u6574\u4f53\u5de6\u79fb\u4e86 $x$ \u4f4d\uff0c\u518d\u628a\u524d\u9762\u90a3\u4e9b\u5927\u4e8e\u7b49\u4e8e $2^m$ \u7684\u53f3\u79fb $2^m$ \u4f4d\uff0c\u5e76\u5408\u5e76\u8d77\u6765\u3002\u5f53 $m=10$ \u65f6\uff0c\u8fd9\u91cc\u5c31\u53ef\u4ee5\u5199\u6210```b=(b<<x)|(b>>(1024-x))```\u3002\n\n\u8fd9\u91cc\u66f4\u65b0\u4e00\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\u662f $O(\\frac{2^m}{\\omega})$ \u7684\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4\u4fee\u6539\u65f6\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u8fd8\u8981\u4e58\u4e0a $\\log n$\u3002\u533a\u95f4\u4fee\u6539\u6253\u6807\u8bb0\u5373\u53ef\u3002\n\n\u6700\u540e\u8981\u5f97\u5230\u7b54\u6848\uff0c\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a $2^m$ \u7684```bitset```\uff0c\u53ef\u4ee5 $O(2^m)$ \u5224\u65ad\u5e76\u8ba1\u7b97\u6bcf\u4f4d\u7684\u8d21\u732e\u3002\n\n\u4e8e\u662f\u5f97\u5230\u4e86\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\frac{2^m(n+q)\\log n}{\\omega}+2^mq)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(2^mn)$ \u7684\u7b97\u6cd5\u3002\n\n\u5176\u4e2d\uff0c\u540e\u9762\u7684 $O(2^mq)$ \u7684\u67e5\u8be2\uff0c\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\uff0c\u7136\u540e\u624b\u5199```bitset```\u5e76\u6bcf $32$ \u4f4d\u4e00\u8d77\u6c42\u7b54\u6848\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f18\u5316\u5230 $O(\\frac{2^mq}{\\omega})$\u3002\u800c STL \u7684```bitset```\u6ca1\u6cd5\u76f4\u63a5\u63d0\u53d6\u591a\u4f4d\u4fe1\u606f\uff08\u6211\u4e0d\u592a\u4f1a\u7684\u8bf4\uff09\u3002\u4e0d\u8fc7\u7531\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u74f6\u9888\u4e0d\u5728\u8fd9\u91cc\uff0c\u6240\u4ee5\u4f7f\u7528 STL \u7684\u6548\u7387\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\n\u8fd9\u6837\u505a\u7684\u8bdd\uff0c\u53ef\u80fd\u4f1a\u56e0\u4e3a\u5e38\u6570\u95ee\u9898\u800c\u8fc7\u4e0d\u53bb\u3002\u6ce8\u610f\u5230\u5f53\u533a\u95f4\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\uff0c\u533a\u95f4\u91cc\u7684\u6570\u5f88\u5c11\uff0c\u6b64\u65f6\u4f7f\u7528```bitset```\u8fdb\u884c\u8fd0\u7b97\u662f\u975e\u5e38\u4e0d\u5212\u7b97\u7684\uff0c\u56e0\u6b64\u5728\u533a\u95f4\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u66b4\u529b\u4fee\u6539\u548c\u67e5\u8be2\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e86\uff0c\u4ee3\u7801\u957f\u5ea6\u4e3a $1.7\\rm KB$ \u5de6\u53f3\u3002\n\n## Code\uff1a\n\n```cpp\n#include<iostream>\n#include<bitset>\nusing namespace std;\ntypedef bitset<1024>BitSet;\nconst int N=1e5+6;\nBitSet d[N];int tg[N],n,m,q,a[N];\nvoid build(int l,int r,int o){\n\tif(r-l+1<=64){\n\t\tfor(register int i=l;i<=r;++i)cin>>a[i],d[o].flip(a[i]);\n\t}else{\n\t\tconst int mid=l+r>>1;\n\t\tbuild(l,mid,o<<1),build(mid+1,r,o<<1|1);\n\t\td[o]=d[o<<1]^d[o<<1|1];\n\t}\n}\ninline void pushdown(int o){\n\tint&x=tg[o];\n\td[o<<1]=(d[o<<1]<<x)|(d[o<<1]>>(1024-x));\n\td[o<<1|1]=(d[o<<1|1]<<x)|(d[o<<1|1]>>(1024-x));\n\t(tg[o<<1]+=x)&=1023,(tg[o<<1|1]+=x)&=1023;\n\tx=0;\n}\nvoid modify(int l,int r,int o,const int&L,const int&R,const int&x){\n\tif(r-l+1<=64){\n\t\tconst int lx=max(l,L),rx=min(r,R);\n\t\tfor(register int i=lx;i<=rx;++i)d[o].flip((a[i]+tg[o])&1023),d[o].flip((tg[o]+((a[i]+=x)&=1023))&1023);\n\t}else\n\tif(L<=l&&r<=R){\n\t\td[o]=(d[o]<<x)|(d[o]>>(1024-x));\n\t\t(tg[o]+=x)&=1023;\n\t}else{\n\t\tif(tg[o])pushdown(o);\n\t\tconst int mid=l+r>>1;\n\t\tif(L<=mid)modify(l,mid,o<<1,L,R,x);\n\t\tif(mid<R)modify(mid+1,r,o<<1|1,L,R,x);\n\t\td[o]=d[o<<1]^d[o<<1|1];\n\t}\n}\nvoid query(int l,int r,int o,const int&L,const int&R,BitSet&b){\n\tif(r-l+1<=64){\n\t\tconst int lx=max(l,L),rx=min(r,R);\n\t\tfor(register int i=lx;i<=rx;++i)b.flip((a[i]+tg[o])&1023);\n\t}else\n\tif(L<=l&&r<=R)b^=d[o];else{\n\t\tif(tg[o])pushdown(o);\n\t\tconst int mid=l+r>>1;\n\t\tif(L<=mid)query(l,mid,o<<1,L,R,b);\n\t\tif(mid<R)query(mid+1,r,o<<1|1,L,R,b);\n\t}\n}\nint main(){\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n\tcin>>n>>m>>q;\n\tbuild(1,n,1);\n\twhile(q--){\n\t\tint l,r,op,x;\n\t\tcin>>op>>l>>r;\n\t\tif(op==1){\n\t\t\tcin>>x;\n\t\t\tmodify(1,n,1,l,r,x);\n\t\t}else{\n\t\t\tstatic BitSet b;\n\t\t\tb.reset();\n\t\t\tquery(1,n,1,l,r,b);\n\t\t\tint ans=0;\n\t\t\tfor(register int i=0;i<1024;++i)\n\t\t\t\tans^=b[i]*i;\n\t\t\tans&=(1<<m)-1;\n\t\t\tcout<<ans<<'\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1574848605,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5670 \u3010\u79d8\u7c4d-\u53cd\u590d\u5f02\u6216\u3011"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P5670)\n\n**\u8fd9\u662f\u4e00\u7bc7\u6307\u4ee4\u96c6\u9898\u89e3\uff0c\u5e76\u975e\u6b63\u89e3\u3002\u53e6\u5916\uff0c\u8bf7\u4e0d\u8981\u5c1d\u8bd5\u5728\u6b63\u5f0f OI \u6bd4\u8d5b\u4e2d\u4f7f\u7528\u6307\u4ee4\u96c6\u3002**\n## \u9898\u610f\n\u533a\u95f4\u52a0\u533a\u95f4\u540e $m$ \u4f4d\u5f02\u6216\u548c\uff0c$m$ \u6240\u6709\u8be2\u95ee\u76f8\u540c\u3002\n\n$n,m\\le 10^5,0\\le a_i< 2^m\\le1024$\n## \u601d\u8def\n\u52a0/\u5f02\u6216\uff0c\u6307\u4ee4\u96c6\u57fa\u672c\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u4e0d\u7528\u591a\u8bb2\u3002\n\n\u867d\u7136\u5df2\u7ecf\u6709\u4e86\u4e00\u7bc7\u6307\u4ee4\u96c6\u9898\u89e3\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u6765\u63a8\u5e7f\u4e00\u79cd\u6307\u4ee4\u96c6\u5199\u6cd5\uff0c\u8fd9\u79cd\u5199\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\uff1a\n\n- \u597d\u5199\u597d\u8bb0\n- \u53ef\u672c\u5730\u8fd0\u884c\n- \u8fd0\u884c\u901f\u5ea6\u8f83\u5feb\uff08\u81f3\u5c11\u5728\u53ea\u7528 `-O2` \u65f6\u6bd4\u73b0\u6709\u7684\u4e00\u7bc7\u6307\u4ee4\u96c6\u9898\u89e3 `-O2 -Ofast` \u5feb `1.3s`\uff09\n\n\u8fd9\u79cd\u6307\u4ee4\u96c6\u7528 `__attribute((vector_size(32)))` \u5b9e\u73b0\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u5199\u51fd\u6570\uff0c\u5177\u4f53\u53ef\u4ee5\u76f4\u63a5\u53c2\u8003\u4ee3\u7801\u3002\n\n\u8d34\u4e2a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef unsigned u256 __attribute((vector_size(32)));\n#define ll long long\nconst int N=100000>>3;\nint n,m,q;\nu256 a[N],ans,tmp;\ninline void add(int l,int r,int x){\n\tu256 xx=u256{x,x,x,x,x,x,x,x};\n\tif((l>>3)==(r>>3)){\n\t\tfor(int i=l&7;i<=(r&7);i++){\n\t\t\ta[l>>3][i]+=x;\n\t\t}\n\t}else{\n\t\tfor(int i=l&7;i<=7;i++){\n\t\t\ta[l>>3][i]+=x;\n\t\t}\n\t\tfor(int i=0;i<=(r&7);i++){\n\t\t\ta[r>>3][i]+=x;\n\t\t}\n\t\tfor(int i=(l>>3)+1;i<=(r>>3)-1;i++){\n\t\t\ta[i]+=xx;\n\t\t}\n\t}\n}\ninline int query(int l,int r){\n\tu256 ans=u256{0,0,0,0,0,0,0,0};\n\tint res=0;\n\tif((l>>3)==(r>>3)){\n\t\tfor(int i=l&7;i<=(r&7);i++){\n\t\t\tres^=a[l>>3][i];\n\t\t}\n\t}else{\n\t\tfor(int i=l&7;i<=7;i++){\n\t\t\tres^=a[l>>3][i];\n\t\t}\n\t\tfor(int i=0;i<=(r&7);i++){\n\t\t\tres^=a[r>>3][i];\n\t\t}\n\t\tfor(int i=(l>>3)+1;i<=(r>>3)-1;i++){\n\t\t\tans^=a[i];\n\t\t}\n\t\tfor(int i=0;i<=7;i++){\n\t\t\tres^=ans[i];\n\t\t}\n\t}\n\treturn res;\n}\nint main(){\n\tn=read(),m=1<<read(),q=read();\n\tfor(int i=0;i<n;i++){\n\t\ta[i>>3][i&7]=read();\n\t}\n\twhile(q--){\n\t\tint opt=read(),l=read()-1,r=read()-1;\n\t\tif(opt==1){\n\t\t\tadd(l,r,read());\n\t\t}else{\n\t\t\twrite(query(l,r)%m);\n\t\t\tputc('\\n');\n\t\t}\n\t}\n\tflush();\n}\n```\n\u8c22\u8c22\u89c2\u770b\uff0c\u518d\u89c1 qwq~",
        "postTime": 1620047089,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5670\u3010\u79d8\u7c4d-\u53cd\u590d\u5f02\u6216\u3011"
    },
    {
        "content": "\u9898\u9762\u5927\u610f\uff1a\n\n\u4e00\u5e8f\u5217\uff0c\u4fe9\u64cd\u4f5c\uff1a\n\n1. \u533a\u95f4\u52a0\n\n2. \u533a\u95f4\u5f02\u6216\u548c $\\bmod 2^m$\u3002\n\n\u7b80\u5355\u7684\u64cd\u4f5c\uff0c$10^5$ \u7684\u6570\u636e\u8303\u56f4 ~~\uff0c\u663e\u7136\u662f\u6307\u4ee4\u96c6\u677f\u5b50\u9898\u3002~~\n\n\u6307\u4ee4\u96c6 nb\u3002\n\n\u5176\u5b9e\u6211\u4e5f\u662f\u7b2c\u4e00\u6b21\u5b66\uff0c\u8fd8\u662f\u5bf9\u7740\u7ebf\u6bb5\u6811\u7684\u6307\u4ee4\u96c6\u9898\u89e3\u6572\u7684/xk\n\n\u5bf9\u4e8e\u6307\u4ee4\u96c6\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u770b[\u8fd9\u91cc](https://ouuan.github.io/post/n%E6%96%B9%E8%BF%87%E7%99%BE%E4%B8%87-%E6%9A%B4%E5%8A%9B%E7%A2%BE%E6%A0%87%E7%AE%97%E6%8C%87%E4%BB%A4%E9%9B%86%E4%BC%98%E5%8C%96%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/)\n\n\u6bd4\u8f83\u5361\u5e38\uff0c\u4e0d\u8fc7\u52a0\u4e2a\u5feb\u8bfb\u5c31\u884c\u3002\n\n```cpp\n#pragma GCC optimize(\"Ofast,fast-math\")\n#pragma GCC target(\"avx,avx2\")\n#include<bits/stdc++.h>\n#include<immintrin.h>\nusing namespace std;\n__m256i a[12505];\nint read()\n{\n   int s=0;\n   char ch=getchar();\n   while(ch<'0'||ch>'9') ch=getchar();\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s;\n}\nvoid add(int l,int r,int x)\n{\n    for(;(l-1&7)&&l<=r;l++)\n\t\t((int*)(a+(l>>3)+1))[(l&7)-1]+=x;\n    if(l==r+1) return;\n    for(;(r&7)&&l<=r;r--)\n\t\t((int*)(a+(r>>3)+1))[(r&7)-1]+=x;\n    if(l==r+1) return;\n    l=(l>>3)+1,r>>=3;\n    __m256i x2=_mm256_set_epi32(x,x,x,x,x,x,x,x);\n    for(;l<=r;l++)\n\t\ta[l]=_mm256_add_epi32(a[l],x2);\n}\nint ask(int l,int r)\n{\n    int s=0,i;\n    for(;(l-1&7)&&l<=r;l++)\n\t\ts^=((int*)(a+(l>>3)+1))[(l&7)-1];\n    if(l==r+1) return s;\n    for(;(r&7)&&l<=r;r--)\n\t\ts^=((int*)(a+(r>>3)+1))[(r&7)-1];\n    if(l==r+1) return s;\n    l=(l>>3)+1,r>>=3;\n    __m256i s2=_mm256_set_epi32(0,0,0,0,0,0,0,0);\n    for(;l<=r;l++)\n\t\ts2=_mm256_xor_si256(a[l],s2);\n    for(i=0;i<8;i++)\n        s^=((int*)&s2)[i];\n    return s;\n}\nint main()\n{\n\tint n,m,q,opt,l,r,i,j,p;\n\tint x[10];\n    scanf(\"%d%d%d\",&n,&m,&q);\n    m=1<<m;\n    for(i=1;i<=n>>3;i++)\n    {\n        for(j=0;j<8;j++)\n            x[j]=read();\n        a[i]=_mm256_set_epi32(x[7],x[6],x[5],x[4],x[3],x[2],x[1],x[0]);\n    }\n    for(i=0;i<(n&7);i++)\n        x[j]=read();\n    a[(n>>3)+1]=_mm256_set_epi32(x[7],x[6],x[5],x[4],x[3],x[2],x[1],x[0]);\n\twhile(q--)\n    {\n        opt=read(),l=read(),r=read();\n        if(opt==1)\n        {\n        \tp=read();\n\t\t\tadd(l,r,p);\n\t\t}   \n        else printf(\"%d\\n\",ask(l,r)%m);\n    }\n}\n```",
        "postTime": 1591334251,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5670 \u3010\u79d8\u7c4d-\u53cd\u590d\u5f02\u6216\u3011"
    },
    {
        "content": "\u7784\u4e00\u773c\u9898\u89e3\uff0c\u770b\u5230\u4e86 bitset \u77ac\u95f4\u5c31\u4f1a\u4e86/tuu\u3002                \n\n~~\u6240\u4ee5\u6ca1\u60f3\u5230 bitset \u8fd8\u662f\u5f88\u4e22\u8138\uff0c\u800c\u4e14\u4e22\u4e2a\u5206\u5757\u7684\u6807\u7b7e\u5728\u8fd9\u91cc\u5e72\u561b\u554a\u60f3\u4e86\u534a\u5929\u3002~~\n\n\u8fd9\u9053\u9898 bitset \u80fd\u8fc7\u8fd8\u662f\u6ca1\u60f3\u5230\uff0c\u4e0d\u8fc7\u4e5f\u662f\u5408\u7406\u65f6\u95f4\u590d\u6742\u5ea6\u3002         \n\n\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u533a\u95f4\u503c\u57df\u6240\u6709\u6570\u51fa\u73b0\u6b21\u6570\u7684\u5947\u5076\u6027\uff0c\u90a3\u4e48\u6211\u4eec\u6700\u540e\u67e5\u8be2\u5c31\u53ea\u7528\u770b\u4e00\u4e2a\u503c\u662f\u5426\u51fa\u73b0\u5947\u6570\u6b21\u5373\u53ef\u77e5\u9053\u5b83\u662f\u5426\u9700\u8981\u5f02\u6216\u8fdb\u7b54\u6848\u91cc\u9762\u4e86\u3002          \n\n\u5c06\u533a\u95f4\u52a0\u6cd5\u770b\u4f5c bitset \u91cc\u9762\u7684\u6570\u6574\u4f53\u5de6\u79fb $x$ \u4f4d\u5373\u53ef\uff0c\u8d85\u8fc7\u7684\u90e8\u5206\u6211\u4eec\u76f4\u63a5\u7528 bitset \u7684\u957f\u5ea6\u4f5c\u4e3a\u9650\u5236\u81ea\u7136\u6ea2\u51fa\u5373\u53ef\uff0c\u5c31\u76f8\u5f53\u53d6\u6a21\u3002        \n\n\u8003\u8651\u4e00\u4e2a\u533a\u95f4\u52a0\u6cd5\u8be5\u600e\u4e48\u7ef4\u62a4\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u533a\u95f4\u52a0\u7684\u503c\u53d6\u6a21\u540e\u63a7\u5236\u5728 $2 ^ m$ \u4e4b\u5185\uff0c\u90a3\u4e48\u73b0\u5728\u4e00\u4e2a\u533a\u95f4\u7684 bitset \u5de6\u79fb\u540e\u540e\u9762\u7684 $x$ \u4f4d\u9700\u8981\u548c\u524d\u9762\u7684 $2 ^ m - x$ \u4f4d\u8fdb\u884c\u4e00\u4e2a\u6574\u4f53\u4ea4\u6362\uff0c\u8fd9\u4e2a\u5c31 $O(\\frac{n}{w})$ \u5355\u6b21\u66b4\u529b\u505a\u5c31\u597d\u4e86\u3002\u5355\u6b21\u4e0b\u4f20\u548c\u5355\u6b21\u4fee\u6539\u90fd\u662f $O(\\frac{n}{w})$ \u6240\u4ee5\u6700\u540e\u4fee\u6539\u548c\u4e0b\u4f20\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(q \\log n \\frac{2 ^ m}{w})$\u3002            \n\n\u7136\u540e\u533a\u95f4\u67e5\u8be2\u5c31\u76f4\u63a5\u627e\u5230 $\\log n$ \u4e2a\u7ebf\u6bb5\u6811\u5bf9\u5e94\u7684\u533a\u95f4\u8282\u70b9\u540e\u628a\u5bf9\u5e94\u7684\u6bcf\u4e00\u4f4d\u76f4\u63a5\u6309\u4f4d\u5f02\u6216\u8d77\u6765\u5373\u53ef\uff0c\u5355\u6b21\u5408\u5e76\u4e00\u4e2a\u533a\u95f4\u8282\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f $O(\\frac{n}{w})$ \u6700\u540e\u67e5\u8be2\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(q \\log n \\frac{2 ^ m}{w})$\u3002\n\n\u6700\u540e\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(q \\log n \\frac{2 ^ m}{w})$ \u5927\u7ea6 $O(q \\log ^ 2 n)$ \u7684\u6837\u5b50\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002      \n\n\u60f3\u7cbe\u7ec6\u5361\u5e38\u7684\u8bdd\u53ef\u4ee5\u9608\u503c\u5206\u6cbb\u4e00\u4e0b\uff0c\u5f53\u7ebf\u6bb5\u6811\u8868\u793a\u7684\u533a\u95f4\u957f\u5ea6\u5c0f\u4e8e\u9608\u503c $T$ \u65f6\u76f4\u63a5\u66b4\u529b\u4fee\u66b4\u529b\u67e5\uff0c\u5bf9\u4e8e\u6b64\u9898\u6570\u636e $T$ \u53d6 $16 \\sim 32$ \u8dd1\u7684\u6bd4\u8f83\u5feb\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u7684\u5b9e\u73b0\u672a\u5361\u5e38\u3002\n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 1e5 + 5;\ninline int read() {\n    char ch = getchar();\n    int x = 0, f = 1;\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while ('0' <= ch && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\ninline void write(int x) {\n    if (x < 0)\n        putchar('-'), x = -x;\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\nbitset<2> bst1[Len << 2],ans1;\nbitset<4> bst2[Len << 2],ans2;\nbitset<8> bst3[Len << 2],ans3;\nbitset<16> bst4[Len << 2],ans4;\nbitset<32> bst5[Len << 2],ans5;\nbitset<64> bst6[Len << 2],ans6;\nbitset<128> bst7[Len << 2],ans7;\nbitset<256> bst8[Len << 2],ans8;\nbitset<512> bst9[Len << 2],ans9;\nbitset<1024> bst10[Len << 2],ans10;\nint n,m,mm,q,a[Len],tag[Len << 2],Print[Len],flag[Len];\n#define ls(x) x << 1\n#define rs(x) x << 1 | 1\nvoid push_up(int x)\n{\n\tif(mm == 1) bst1[x] = bst1[ls(x)] ^ bst1[rs(x)];\n\tif(mm == 2) bst2[x] = bst2[ls(x)] ^ bst2[rs(x)];\n\tif(mm == 3) bst3[x] = bst3[ls(x)] ^ bst3[rs(x)];\n\tif(mm == 4) bst4[x] = bst4[ls(x)] ^ bst4[rs(x)];\n\tif(mm == 5) bst5[x] = bst5[ls(x)] ^ bst5[rs(x)];\n\tif(mm == 6) bst6[x] = bst6[ls(x)] ^ bst6[rs(x)];\n\tif(mm == 7) bst7[x] = bst7[ls(x)] ^ bst7[rs(x)];\n\tif(mm == 8) bst8[x] = bst8[ls(x)] ^ bst8[rs(x)];\n\tif(mm == 9) bst9[x] = bst9[ls(x)] ^ bst9[rs(x)];\n\tif(mm == 10) bst10[x] = bst10[ls(x)] ^ bst10[rs(x)];\n}\nvoid push_down(int p)\n{\n\tif(tag[p])\n\t{\n\t\ttag[ls(p)] += tag[p] , tag[rs(p)] += tag[p];\n\t\tif(tag[ls(p)] > m) tag[ls(p)] -= m;\n\t\tif(tag[rs(p)] > m) tag[rs(p)] -= m;\n\t\tif(mm == 1) bst1[ls(p)] = (bst1[ls(p)] >> (m - tag[p])) | (bst1[ls(p)] << tag[p]) , bst1[rs(p)] = (bst1[rs(p)] >> (m - tag[p])) | (bst1[rs(p)] << tag[p]);\n\t\tif(mm == 2) bst2[ls(p)] = (bst2[ls(p)] >> (m - tag[p])) | (bst2[ls(p)] << tag[p]) , bst2[rs(p)] = (bst2[rs(p)] >> (m - tag[p])) | (bst2[rs(p)] << tag[p]);\n\t\tif(mm == 3) bst3[ls(p)] = (bst3[ls(p)] >> (m - tag[p])) | (bst3[ls(p)] << tag[p]) , bst3[rs(p)] = (bst3[rs(p)] >> (m - tag[p])) | (bst3[rs(p)] << tag[p]);\n\t\tif(mm == 4) bst4[ls(p)] = (bst4[ls(p)] >> (m - tag[p])) | (bst4[ls(p)] << tag[p]) , bst4[rs(p)] = (bst4[rs(p)] >> (m - tag[p])) | (bst4[rs(p)] << tag[p]);\n\t\tif(mm == 5) bst5[ls(p)] = (bst5[ls(p)] >> (m - tag[p])) | (bst5[ls(p)] << tag[p]) , bst5[rs(p)] = (bst5[rs(p)] >> (m - tag[p])) | (bst5[rs(p)] << tag[p]);\n\t\tif(mm == 6) bst6[ls(p)] = (bst6[ls(p)] >> (m - tag[p])) | (bst6[ls(p)] << tag[p]) , bst6[rs(p)] = (bst6[rs(p)] >> (m - tag[p])) | (bst6[rs(p)] << tag[p]);\n\t\tif(mm == 7) bst7[ls(p)] = (bst7[ls(p)] >> (m - tag[p])) | (bst7[ls(p)] << tag[p]) , bst7[rs(p)] = (bst7[rs(p)] >> (m - tag[p])) | (bst7[rs(p)] << tag[p]);\n\t\tif(mm == 8) bst8[ls(p)] = (bst8[ls(p)] >> (m - tag[p])) | (bst8[ls(p)] << tag[p]) , bst8[rs(p)] = (bst8[rs(p)] >> (m - tag[p])) | (bst8[rs(p)] << tag[p]);\n\t\tif(mm == 9) bst9[ls(p)] = (bst9[ls(p)] >> (m - tag[p])) | (bst9[ls(p)] << tag[p]) , bst9[rs(p)] = (bst9[rs(p)] >> (m - tag[p])) | (bst9[rs(p)] << tag[p]);\n\t\tif(mm == 10) bst10[ls(p)] = (bst10[ls(p)] >> (m - tag[p])) | (bst10[ls(p)] << tag[p]) , bst10[rs(p)] = (bst10[rs(p)] >> (m - tag[p])) | (bst10[rs(p)] << tag[p]);\n\t\ttag[p] = 0;\n\t}\n}\nvoid build(int p,int l,int r)\n{\n\ttag[p] = 0;\n\t//printf(\"%d %d %d\\n\",p,l,r);\n\tif(l == r)\n\t{\n\t\tif(mm == 1) bst1[p].set(a[l] , 1);\n\t\tif(mm == 2) bst2[p].set(a[l] , 1);\n\t\tif(mm == 3) bst3[p].set(a[l] , 1);\n\t\tif(mm == 4) bst4[p].set(a[l] , 1);\n\t\tif(mm == 5) bst5[p].set(a[l] , 1);\n\t\tif(mm == 6) bst6[p].set(a[l] , 1);\n\t\tif(mm == 7) bst7[p].set(a[l] , 1);\n\t\tif(mm == 8) bst8[p].set(a[l] , 1);\n\t\tif(mm == 9) bst9[p].set(a[l] , 1);\n\t\tif(mm == 10) bst10[p].set(a[l] , 1);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls(p) , l , mid) , build(rs(p) , mid + 1 , r);\n\tpush_up(p);\n}\nvoid update(int p,int l,int r,int nl,int nr,int w)\n{\n\tif(nl <= l && nr >= r) \n\t{\n\t\tif(mm == 1) bst1[p] = (bst1[p] >> (m - w)) | (bst1[p] << w);\n\t\tif(mm == 2) bst2[p] = (bst2[p] >> (m - w)) | (bst2[p] << w);\n\t\tif(mm == 3) bst3[p] = (bst3[p] >> (m - w)) | (bst3[p] << w);\n\t\tif(mm == 4) bst4[p] = (bst4[p] >> (m - w)) | (bst4[p] << w);\n\t\tif(mm == 5) bst5[p] = (bst5[p] >> (m - w)) | (bst5[p] << w);\n\t\tif(mm == 6) bst6[p] = (bst6[p] >> (m - w)) | (bst6[p] << w);\n\t\tif(mm == 7) bst7[p] = (bst7[p] >> (m - w)) | (bst7[p] << w);\n\t\tif(mm == 8) bst8[p] = (bst8[p] >> (m - w)) | (bst8[p] << w);\n\t\tif(mm == 9) bst9[p] = (bst9[p] >> (m - w)) | (bst9[p] << w);\n\t\tif(mm == 10) bst10[p] = (bst10[p] >> (m - w)) | (bst10[p] << w);\n\t\ttag[p] += w;\n\t\tif(tag[p] > m) tag[p] -= m;\n\t\treturn;\n\t}\n\tpush_down(p);\n\tint mid = (l + r) >> 1;\n\tif(nl <= mid) update(ls(p) , l , mid , nl , nr , w);\n\tif(nr > mid) update(rs(p) , mid + 1 , r , nl , nr , w);\n\tpush_up(p);\n}\nvoid query(int p,int l,int r,int nl,int nr)\n{\n\tif(nl <= l && nr >= r)\n\t{\n\t\tif(mm == 1) ans1 ^= bst1[p];\n\t\tif(mm == 2) ans2 ^= bst2[p];\n\t\tif(mm == 3) ans3 ^= bst3[p];\n\t\tif(mm == 4) ans4 ^= bst4[p];\n\t\tif(mm == 5) ans5 ^= bst5[p];\n\t\tif(mm == 6) ans6 ^= bst6[p];\n\t\tif(mm == 7) ans7 ^= bst7[p];\n\t\tif(mm == 8) ans8 ^= bst8[p];\n\t\tif(mm == 9) ans9 ^= bst9[p];\n\t\tif(mm == 10) ans10 ^= bst10[p];\n\t\treturn;\n\t}\n\tpush_down(p);\n\tint mid = (l + r) >> 1;\n\tif(nl <= mid) query(ls(p) , l , mid , nl , nr);\n\tif(nr > mid) query(rs(p) , mid + 1 , r , nl , nr);\n}\nint main()\n{\n\tn = read() , m = read() , q = read();mm = m;m = 1 << m;\n\tfor(int i = 1 ; i <= n ; i ++) a[i] = read();\n \tbuild(1 , 1 , n);\n \tfor(int i = 1 ; i <= q ; i ++)\n \t{\n \t\tint opt,l,r,x;opt = read();\n\t\tif(opt == 1) \n\t\t{\n\t\t\tl = read() , r = read() , x = read();\n\t\t\tif(l > r) swap(l , r);\n\t\t\tupdate(1 , 1 , n , l , r , x);\t\n\t\t\t//for(int j = l ; j <= r ; j ++) a[j] += x;\n\t\t}\t\n\t\telse\n\t\t{\n\t\t\tflag[i] = 1;\n\t\t\tl = read() , r = read();\n\t\t\tif(l > r) swap(l , r);\n\t\t\tif(mm == 1) ans1.reset();\n\t\t\tif(mm == 2) ans2.reset();\n\t\t\tif(mm == 3) ans3.reset();\n\t\t\tif(mm == 4) ans4.reset();\n\t\t\tif(mm == 5) ans5.reset();\n\t\t\tif(mm == 6) ans6.reset();\n\t\t\tif(mm == 7) ans7.reset();\n\t\t\tif(mm == 8) ans8.reset();\n\t\t\tif(mm == 9) ans9.reset();\n\t\t\tif(mm == 10) ans10.reset();\n\t\t\tquery(1 , 1 , n , l , r);\n\t\t\tint res = 0;\n\t\t\tif(mm == 1) for(int j = 1 ; j < m ; j ++) if(ans1[j]) res ^= j;\n\t\t\tif(mm == 2) for(int j = 1 ; j < m ; j ++) if(ans2[j]){res ^= j;}\n\t\t\tif(mm == 3) for(int j = 1 ; j < m ; j ++) if(ans3[j]){res ^= j;}\n\t\t\tif(mm == 4) for(int j = 1 ; j < m ; j ++) if(ans4[j]){res ^= j;}\n\t\t\tif(mm == 5) for(int j = 1 ; j < m ; j ++) if(ans5[j]){res ^= j;}\n\t\t\tif(mm == 6) for(int j = 1 ; j < m ; j ++) if(ans6[j]){res ^= j;}\n\t\t\tif(mm == 7) for(int j = 1 ; j < m ; j ++) if(ans7[j]){res ^= j;}\n\t\t\tif(mm == 8) for(int j = 1 ; j < m ; j ++) if(ans8[j]){res ^= j;}\n\t\t\tif(mm == 9) for(int j = 1 ; j < m ; j ++) if(ans9[j]){res ^= j;}\n\t\t\tif(mm == 10) for(int j = 1 ; j < m ; j ++) if(ans10[j]){res ^= j;}\n\t\t\tPrint[i] = res;\n\t\t\twrite(res) , putchar('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1630234708,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5670 \u79d8\u7c4d-\u53cd\u590d\u5f02\u6216"
    }
]