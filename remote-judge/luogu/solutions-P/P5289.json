[
    {
        "content": "\u5b89\u5229[\u535a\u5ba2](https://www.cnblogs.com/penth/p/10828200.html)\uff1a\u535a\u4e3b\u4e00\u822c\u4e0d\u4f1a\u5728\u8fd9\u4e2a\u535a\u5ba2\u91cc\u704c\u6c34\uff0c\u9898\u76ee\u90fd\u8fd8\u662f\u633a\u6709\u8d28\u91cf\u7684qwq\n\nProblem\n--------\n\n\u9898\u610f\u6982\u8981\uff1a\u6709 $c$ \u4e2a\u8c46\u835a\uff0c\u5171 $n$ \u9897\u8c46\u5b50\uff0c\u6bcf\u9897\u8c46\u5b50\u90fd\u6709\u81ea\u5df1\u7684\u91cd\u91cf\uff0c\u73b0\u5728\u9700\u8981\u5c06\u7ed9\u8c46\u5b50\u8bbe\u5b9a\u4e3a (\u9ec4\u8272/\u7eff\u8272,\u5706\u7c92/\u76b1\u7c92)\uff0c\u8981\u6c42\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n- \u7ed9\u5b9a\u8fd9\u56db\u79cd\u6027\u72b6\u7684\u9600\u503c $C_0,C_1,D_0,D_1$\uff0c\u8981\u6c42\u4e3a\u8fd9\u79cd\u6027\u72b6\u7684\u8c46\u5b50\u91cd\u91cf\u548c\u4e0d\u80fd\u8d85\u8fc7\u8be5\u9600\u503c\n- \u4e0e\u6b64\u540c\u65f6\uff0c\u8fd9 $n$ \u9897\u8c46\u5b50\u4e2d\u5b58\u5728 $k$ \u9897\u987d\u76ae\u8c46\uff0c\u987d\u76ae\u8c46\u90fd\u6709\u81ea\u5df1\u7684\u60f3\u6cd5\uff0c\u6bd4\u5982\u62d2\u7edd\u6210\u4e3a (\u9ec4\u5706/\u9ec4\u76b1/\u7eff\u5706/\u7eff\u76b1)\n- \u540c\u4e00\u4e2a\u8c46\u835a\u91cc\u7684\u8c46\u5b50\u5fc5\u987b **\u540c\u65f6\u4e3a\u9ec4\u8272** \u6216 **\u540c\u65f6\u4e3a\u7eff\u8272**\n\n\u6c42\u6709\u591a\u5c11\u79cd\u7ed9\u8c46\u5b50\u8bbe\u5b9a\u7684\u65b9\u6848\uff0c\u5bf9 $998244353$ \u53d6\u6a21\n\n$n,c\\leq 10^3,k\\leq 30$\n\n\u8bbe $M=\\max\\{C_0,C_1,D_0,D_1\\}$\uff0c$M\\leq 2500$\n\n\u8c46\u5b50\u91cd\u91cf\u4e0d\u8d85\u8fc7 $\\min\\{M,10\\}$\n\nSolution\n----\n\n\u9996\u5148\u6709\u4e00\u4e2a $O(nM^3)$ \u7684\u66b4\u529b\uff1a\u8bbe\u5b9a\u4e09\u7ef4\u2014\u2014\u201c\u9ec4\u5706\u201d\u3001\u201c\u9ec4\u76b1\u201d\u548c\u201c\u7eff\u5706\u201d\u7684\u8c46\u5b50\u91cd\u91cf\u548c\uff0c\u679a\u4e3e\u6bcf\u4e00\u9897\u8c46\u5b50\u53bb\u66f4\u65b0\u3002\u9171\u7d2b\u5c31\u6709 $30pts+$\n\n\u5176\u6b21\u6709\u4e00\u4e2a $O(nM^2)$ \u7684\u66b4\u529b\uff1a\u8bbe\u5b9a\u4e24\u7ef4\u2014\u2014\u201c\u9ec4\u8272\u201d\u548c\u201c\u5706\u7c92\u201d\u7684\u91cd\u91cf\u548c\u3002\u9171\u7d2b\u6709 $50pts$\n\n--------\n\n\u518d\u8005\u8003\u8651 $k=0$\uff1a\u6240\u6709\u8c46\u5b50\u90fd\u6ca1\u6709\u9650\u5236\uff0c\u8003\u8651\u5c06\u8c46\u5b50\u8fdb\u884c\u5212\u5206\u3002\u53d1\u73b0\u65e0\u8bba\u662f\u5148\u5212\u5206 \u9ec4/\u7eff \u8fd8\u662f\u5148\u5212\u5206 \u5706/\u76b1 \u90fd\u5bf9\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\uff0c\u5bf9\u5e94\u7684\u8fd9\u4e24\u8005\u53ef\u4ee5\u5206\u5f00\u8ba1\u7b97\u6700\u540e\u76f8\u4e58\uff1a\n\n\u8bbe $f[i]$ \u8868\u793a\u9ec4\u8272\u91cd\u91cf\u548c\u4e3a $i$ \u7684\u65b9\u6848\u6570\uff0c$g[i]$ \u8868\u793a\u5706\u7c92\u91cd\u91cf\u548c\u4e3a $i$ \u7684\u65b9\u6848\u6570\uff0c\u8fd9\u4e24\u4e2a\u6570\u7ec4\u53ef\u4ee5 $O(nM)$ \u80cc\u5305\u6c42\u5f97\uff0c\u7136\u540e\u7b54\u6848\u5c31\u4e3a\uff08\u8bbe\u6240\u6709\u8c46\u5b50\u91cd\u91cf\u548c\u4e3a $S$\uff09\uff1a\n\n$$\\sum_{i=S-C_1}^{C_0}\\sum_{j=S-D_1}^{D_0}f[i]g[j]$$\n\n\u505a\u5230\u8fd9\u518d\u7b97\u4e0a\u524d\u8fb9\u7684\u5c31\u6709 $70pts$\n\n--------\n\n\u73b0\u5728\u8003\u8651\u5c06\u987d\u76ae\u8c46\u52a0\u5165 ~~\u80af\u5fb7\u57fa\u8c6a\u534e\u5348\u9910~~ \u8003\u8651\u8303\u7574\n\n\u79f0\u8fd9\u4e9b\u987d\u76ae\u8c46\u4e3a\u201c\u6709\u6bd2\u201d\u7684\u8c46\u5b50\uff0c\u5bf9\u5e94\u7684\u8c46\u835a\u4e00\u5b9a\u4e3a\u201c\u6709\u6bd2\u201d\u7684\u8c46\u835a\n\n\uff08\u5728\u9605\u8bfb\u4e0b\u9762\u5185\u5bb9\u65f6\uff0c\u8bf7\u65f6\u523b\u7262\u8bb0\uff1a\u5bf9\u4e8e \u9ec4/\u7eff \u7684\u5212\u5206\u662f\u4ee5\u201c\u8c46\u835a\u201d\u4e3a\u5355\u4f4d\u7684\uff1b\u5bf9\u4e8e \u5706/\u76b1 \u7684\u5212\u5206\u662f\u4ee5\u201c\u8c46\u5b50\u201d\u4e3a\u5355\u4f4d\u7684\uff09\n\n- \u5bf9\u4e8e\u201c\u65e0\u6bd2\u201d\u7684\u8c46\u835a\uff0c\u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u8003\u8651\u5176 \u9ec4/\u7eff \u7684\u76f8\u5bf9\u6027\u72b6\uff0cdp \u6570\u7ec4\u8bbe\u4e3a $f$\n- \u5bf9\u4e8e\u201c\u65e0\u6bd2\u201d\u7684\u8c46\u5b50\uff0c\u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u8003\u8651\u5176 \u5706/\u76b1 \u7684\u76f8\u5bf9\u6027\u72b6\uff0cdp \u6570\u7ec4\u8bbe\u4e3a $g$\uff08\u56e0\u4e3a\u201c\u6709\u6bd2\u201d\u7684\u8c46\u5b50\u53ef\u80fd\u4f1a\u5f71\u54cd\u6574\u4e2a\u8c46\u835a\u7684 \u9ec4/\u7eff \u6027\u72b6\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e0d\u8003\u8651\u989c\u8272\u6027\u72b6\uff09\n\n\u90a3\u4e48\u4f9d\u7167\u524d\u4e00\u6863\u90e8\u5206\u5206\uff0c\u8fd9\u4e24\u4e2a\u662f\u53ef\u4ee5\u4e58\u8d77\u6765\u7684\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6c42\u5b8c $f$ \u540e\u5c31\u4e0d\u7528\u518d\u7ba1\u201c\u65e0\u6bd2\u201d\u8c46\u835a\u7684 \u9ec4/\u7eff\uff0c\u6c42\u5b8c $g$ \u540e\u5c31\u4e0d\u7528\u518d\u7ba1\u201c\u65e0\u6bd2\u201d\u8c46\u5b50\u7684 \u5706/\u76b1\uff0c\u4f59\u4e0b\u9700\u8981\u8003\u8651\u7684\u5c31\u53ea\u6709\u201c\u6709\u6bd2\u201d\u8c46\u5b50\u7684 \u9ec4/\u7eff\u3001\u5706/\u76b1 \u4e86\n\n\u7531\u4e8e\u201c\u6709\u6bd2\u201d\u7684\u8c46\u5b50\u4e0d\u591a\uff0c\u53ea\u6709 $30$ \u4e2a\uff0c\u53ef\u4ee5\u5bf9\u8fd9\u4e00\u90e8\u5206\u8003\u8651\u91c7\u7528 $50pts$ \u90a3\u4e00\u6863\u7684\u66b4\u529b Dp\uff0cdp \u6570\u7ec4\u8bbe\u4e3a $F$\uff08\u6ce8\u610f \u9ec4/\u7eff \u7ef4\u5ea6\u7528\u7684\u662f\u6574\u4e2a\u8c46\u835a\u7684\u91cd\u91cf\uff0c\u5706/\u76b1 \u7ef4\u5ea6\u7528\u7684\u662f\u5355\u4e2a\u8c46\u5b50\u7684\u91cd\u91cf\uff09\n\n\u6700\u540e\u53ea\u8981\u679a\u4e3e\u201c\u6709\u6bd2\u201d\u8c46\u5b50\u7684\u4e24\u4e2a\u6027\u72b6\u7684\u91cd\u91cf $F$\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a \u9ec4/\u7eff \u5212\u5206\u548c\u4e00\u4e2a \u5706/\u76b1 \u5212\u5206\uff0c\u8003\u8651\u7528 $f$ \u53bb\u5339\u914d \u9ec4/\u7eff\uff08\u8fd9\u6837\u6240\u6709\u201c\u6709\u6bd2\u201d\u4e0e\u201c\u65e0\u6bd2\u201d\u8c46\u835a\u7684 \u9ec4/\u7eff \u5c31\u5904\u7406\u5b8c\u4e86\uff09\uff0c\u7528 $g$ \u53bb\u5339\u914d \u5706/\u76b1 \u5212\u5206\uff08\u8fd9\u6837\u6240\u6709\u201c\u6709\u6bd2\u201d\u4e0e\u201c\u65e0\u6bd2\u201d\u7684\u8c46\u5b50\u7684 \u5706/\u76b1 \u5c31\u5904\u7406\u5b8c\u4e86\uff09\uff0c\u4e58\u8d77\u6765\u5373\u53ef\n\n\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\uff08\u7a7a\u95f4\u53cd\u6b63\u662f $O(M^2)$ \u7684\uff09\uff1a\n\n- \u8ba1\u7b97 $f$ \u7684 dp \u662f $O(cM)$ \u7684\n- \u8ba1\u7b97 $g$ \u7684 dp \u662f $O(nM)$ \u7684\n- \u8ba1\u7b97 $F$ \u7684 dp \u662f $O(kM^2)$ \u7684\uff0c\u4f46\u662f\u7531\u4e8e\u8c46\u5b50\u7684\u91cd\u91cf $s\\leq 10$\uff0c\u6240\u4ee5\u5176\u5b9e\u662f $O(k^2sM)$ \u7684\n- \u7edf\u8ba1\u7b54\u6848\u662f $O(ksM)$ \u7684\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((c+n)M+k^2sM)$\n\n~~\u53e6\u8bf4\uff0c\u8fd9\u9898\u53ea\u8003\u5bdf\u4e86\u8054\u8d5b\u7ea7\u522b\u7684\u77e5\u8bc6\u70b9\u2014\u2014\u80cc\u5305\uff0c\u5305\u62ec\uff1a\u5206\u90e8\u80cc\u5305\u3001\u53cc\u7ebf\u7a0b\u80cc\u5305\u3001\u80cc\u5305\u5408\u5e76\u2026\u2026~~\n\nCode\n------\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\ninline void read(int&x){\n\tchar ch=getchar();x=0;while(!isdigit(ch))ch=getchar();\n\twhile(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n}\n\nconst int p = 998244353;\ninline int qm(const int x) {return x < p ? x : x - p;}\ninline void pls(int&x, const int&y) {x = x+y < p ? x+y : x+y-p;}\n\nconst int N = 1010, M = 2503;\nbool city_hate[N];\nint city_sum[N], hate[N], b[N], s[N];\nint f[M], pre_f[M], F[M][M];\nint g[M], pre_g[M], G[M][M];\nint n, c;\n\nvoid work() {\n\tread(n), read(c);\n\tint C0, C1, D0, D1, ALL = 0;\n\tfor(int i=1;i<=c;++i) city_hate[i] = false, city_sum[i] = 0;\n\tread(C0), read(C1), read(D0), read(D1);\n\tfor(int i=1;i<=n;++i) read(b[i]), read(s[i]), city_sum[b[i]] += s[i], hate[i] = -1, ALL += s[i];\n\tint K, x; read(K);\n\twhile(K--) read(x), read(hate[x]), city_hate[b[x]] = true;\n\t\n\tmemset(f, 0, sizeof f), pre_f[0] = f[0] = 1;\n\tfor(int i=1;i<=c;++i)\n\t\tif(!city_hate[i] and city_sum[i])\n\t\t\tfor(int j = C0, ts = city_sum[i]; j >= ts; -- j)\n\t\t\t\tpls(f[j], f[j-ts]);\n\tfor(int i=1;i<=C0;++i) pre_f[i] = qm(pre_f[i-1] + f[i]);\n\t\n\tmemset(g, 0, sizeof g), pre_g[0] = g[0] = 1;\n\tfor(int i=1;i<=n;++i)\n\t\tif(-1 == hate[i])\n\t\t\tfor(int j = D0, ts = s[i]; j >= ts; -- j)\n\t\t\t\tpls(g[j], g[j-ts]);\n\tfor(int i=1;i<=D0;++i) pre_g[i] = qm(pre_g[i-1] + g[i]);\n\t\n\tint Cs = 0, Ss = 0;\n\tmemset(F, 0, sizeof F), F[0][0] = 1;\n\tmemset(G, 0, sizeof G);\n\tfor(int ct = 1; ct <= c; ++ ct)\n\t\tif(city_hate[ct]) {\n\t\t\tCs += city_sum[ct], Cs = min(Cs, C0);\n\t\t\tfor(int i=0;i<=Cs;++i)\n\t\t\tfor(int j=0;j<=Ss;++j) G[i][j] = F[i][j];\n\t\t\t\n\t\t\tfor(int a=1;a<=n;++a)\n\t\t\t\tif(b[a] == ct and ~hate[a]) {\n\t\t\t\t\tconst int t = s[a];\n\t\t\t\t\tSs += t, Ss = min(Ss, D0);\n\t\t\t\t\tif(hate[a] == 1)\n\t\t\t\t\t\tfor(int i=0;i<=Cs;++i) {\n\t\t\t\t\t\t\tfor(int j=Ss;j>=t;--j) F[i][j] = F[i][j-t];\n\t\t\t\t\t\t\tfor(int j=t-1;~j;--j) F[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\tif(hate[a] >= 2)\n\t\t\t\t\t\tfor(int i=0;i<=Cs;++i)\n\t\t\t\t\t\tfor(int j=Ss;j>=t;--j) pls(F[i][j], F[i][j-t]);\n\t\t\t\t\tif(hate[a] == 3)\n\t\t\t\t\t\tfor(int i=0;i<=Cs;++i) {\n\t\t\t\t\t\t\tfor(int j=Ss;j>=t;--j) G[i][j] = G[i][j-t];\n\t\t\t\t\t\t\tfor(int j=t-1;~j;--j) G[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\tif(hate[a] <= 1)\n\t\t\t\t\t\tfor(int i=0;i<=Cs;++i)\n\t\t\t\t\t\tfor(int j=Ss;j>=t;--j) pls(G[i][j], G[i][j-t]);\n\t\t\t\t}\n\t\t\tfor(int j=0,t=city_sum[ct];j<=Ss;++j) {\n\t\t\t\tfor(int i=Cs;i>=t;--i) F[i][j] = F[i-t][j];\n\t\t\t\tfor(int i=t-1;~i;--i) F[i][j] = 0;\n\t\t\t}\n\t\t\tfor(int i=0;i<=Cs;++i)\n\t\t\tfor(int j=0;j<=Ss;++j)\n\t\t\t\tpls(F[i][j], G[i][j]);\n\t\t}\n\t\n\tint res = 0;\n\tfor(int i=0;i<=Cs;++i)\n\tfor(int j=0;j<=Ss;++j) {\n\t\tint l1 = max(0, ALL - C1 - i), r1 = C0 - i; if(l1 > r1) continue;\n\t\tint l2 = max(0, ALL - D1 - j), r2 = D0 - j; if(l2 > r2) continue;\n\t\tint vf = pre_f[r1]; if(l1) vf += p - pre_f[l1-1];\n\t\tint vg = pre_g[r2]; if(l2) vg += p - pre_g[l2-1];\n\t\tpls(res, (ll)vf * vg%p * F[i][j]%p);\n\t}\n\tprintf(\"%d\\n\", res);\n}\n\nint main() {\n\tint T; read(T);\n\twhile(T--) work();\n\treturn 0;\n}\n```",
        "postTime": 1557236253,
        "uid": 22112,
        "name": "Mirach",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5289 \u3010[\u5341\u4e8c\u7701\u8054\u80032019]\u76ae\u914d\u3011"
    },
    {
        "content": "## \u3010DP\u3011P5289 [\u5341\u4e8c\u7701\u8054\u80032019]\u76ae\u914d\r\n\r\n### Description\r\n\r\n~~\u672c\u9898\u5145\u5206\u8003\u5bdf\u4e86\u9009\u624b\u7684\u9605\u8bfb\u7406\u89e3\u80fd\u529b\uff0c\u5bf9\u6211\u8fd9\u79cd\u53ea\u80fd\u8bb0\u4e09\u884c\u9898\u9762\u7684\u9009\u624b\u5341\u5206\u4e0d\u53cb\u597d~~\u3002\r\n\r\n\u6709\u56db\u4f4d\u5bfc\u5e08\uff0cY,Z,R,r\u3002\u4ed6\u4eec\u88ab\u4e24\u4e24\u4e00\u7ec4\u5206\u6210\u4e86\u7ea2 / \u84dd**\u9635\u8425**\uff0c\u53e6\u5916\u4e24\u4e24\u4e00\u7ec4\u5206\u6210\u4e86\u9e2d / R **\u6d3e\u7cfb**\u3002\u5217\u8868\u5982\u4e0b\r\n\r\n|        | \u84dd\u9635\u8425 | \u7ea2\u9635\u8425 |\r\n| :----: | :----: | :----: |\r\n| \u9e2d\u6d3e\u7cfb |   Y    |   Z    |\r\n| R \u6d3e\u7cfb |   r    |   R    |\r\n\r\n\u6709\u82e5\u5e72\u9009\u624b\uff0c\u6bcf\u4e2a\u9009\u624b\u53ea\u80fd\u4e14\u5fc5\u987b\u9009\u62e9\u4e00\u540d\u5bfc\u5e08\u3002\u663e\u800c\u6613\u89c1\uff0c\u9009\u62e9\u4e86\u6240\u5c5e\u5bfc\u5e08\u4e4b\u540e\uff0c\u9009\u624b\u7684\u9635\u8425\u548c\u6d3e\u7cfb\u5c31\u90fd\u786e\u5b9a\u4e86\u3002\r\n\r\n\u6bcf\u4e00\u9635\u8425/\u6d3e\u7cfb\u90fd\u6709\u4eba\u6570\u9650\u5236\u3002\u5177\u4f53\u800c\u8a00\uff0c\u84dd\u9635\u8425\u6700\u591a\u6709 $c_0$ \u4eba\uff1b\u7ea2\u9635\u8425\u6700\u591a\u6709 $c_1$ \u4eba\uff1b\u9e2d\u6d3e\u7cfb\u6700\u591a\u6709 $d_0$ \u4eba\uff0cR \u6d3e\u7cfb\u6700\u591a\u6709 $d_1$ \u4eba\u3002\r\n\r\n\u6709 $n$ \u6240**\u5b66\u6821**\uff0c\u6765\u81ea $c$ \u4e2a**\u57ce\u5e02**\uff0c\u7b2c $i$ \u4e2a\u5b66\u6821\u6709 $s_i$ \u540d**\u9009\u624b**\u3002\r\n\r\n\u540c\u4e00\u6240\u5b66\u6821\u7684\u9009\u624b\u5fc5\u987b\u9009\u62e9**\u540c\u4e00\u4e2a\u5bfc\u5e08**\u3002\u540c\u4e00\u4e2a\u57ce\u5e02\u7684\u9009\u624b\u5fc5\u987b\u9009\u62e9**\u540c\u4e00\u4e2a\u9635\u8425**\u3002\u540c\u57ce\u5bf9\u6d3e\u7cfb\u7684\u9009\u62e9\u6ca1\u6709\u9650\u5236\u3002\r\n\r\n\u6709 $k$ \u6240\u5b66\u6821\u7684\u9009\u624b\u6bd4\u8f83\u7279\u522b\uff0c\u7b2c $i$ \u6240\u5b66\u6821\u7684\u9009\u624b\u4e00\u5b9a\u4e0d\u4f1a\u9009\u62e9\u7b2c $p_i$ \u4e2a\u5bfc\u5e08\u3002\r\n\r\n\u6c42\u4e00\u5171\u6709\u591a\u5c11\u79cd\u60c5\u51b5\uff0c\u7b54\u6848\u5bf9\u5927\u8d28\u6570\u53d6\u6a21\u3002\r\n\r\n## Analysis\r\n\r\n\u56e0\u4e3a\u5177\u4f53 dp \u8f6c\u79fb\u6bd4\u8f83\u590d\u6742\u4f46\u662f\u975e\u5e38\u57fa\u7840\uff0c\u4e3a\u4e86\u7f8e\u89c2\u4e0e\u7b80\u6d01\uff0c\u5982\u65e0\u5fc5\u8981\uff0c\u6587\u5b57\u63cf\u8ff0\u90e8\u5206\u5c06\u4e0d\u5199\u660e\u8f6c\u79fb\uff0c\u53ef\u4ee5\u76f4\u63a5\u53c2\u8003\u4ee3\u7801\u3002\r\n\r\n\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\u540c\u57ce\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5148\u5bf9\u5b66\u6821\u6309\u7167\u57ce\u5e02\u8fdb\u884c\u6392\u5e8f\u3002\r\n\r\n\u9996\u5148\u524d 40 \u5206\u53ef\u4ee5\u8fdb\u884c\u5404\u79cd\u7ef4\u5ea6\u7684\u80cc\u5305 dp \u8bb0\u5f55\u6bcf\u4e2a\u5bfc\u5e08\u9009\u62e9\u7684\u4eba\u6570\u6765\u5b8c\u6210\u3002\r\n\r\n\u6ce8\u610f\u5230\u9898\u76ee\u5bf9\u5bfc\u5e08\u9009\u62e9\u7684\u4eba\u6570\u6ca1\u6709\u8981\u6c42\uff0c\u56e0\u6b64\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u786e\u5b9a\u6bcf\u4e2a\u5bfc\u5e08\u5b9e\u9645\u9009\u62e9\u4e86\u591a\u5c11\u4e2a\u9009\u624b\uff0c\u800c\u662f\u53ea\u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a\u9635\u8425/\u6d3e\u7cfb\u9009\u62e9\u4e86\u591a\u5c11\u4eba\u5c31\u53ef\u4ee5\u4e86\u3002\u8bbe $f_{i, j, k, 0/1}$ \u662f\u8003\u8651\u524d $i$ \u4e2a\u5b66\u6821\uff0c\u6709 $j$ \u4e2a\u4eba\u52a0\u5165\u4e86\u84dd\u9635\u8425\uff0c$k$ \u4e2a\u4eba\u52a0\u5165\u4e86\u9e2d\u6d3e\u7cfb\uff08\u8fd9\u6837\u7ea2\u9635\u8425\u7684\u4eba\u6570\u53ef\u4ee5\u901a\u8fc7\u5f53\u524d\u603b\u4eba\u6570 - i \u8ba1\u7b97\u5f97\u5230\uff0cR \u6d3e\u7cfb\u540c\u7406\uff09\uff0c\u5f53\u524d\u5b66\u6821\u52a0\u5165\u4e86 \u84dd/\u7ea2 (0/1) \u9635\u8425\u7684\u65b9\u6848\u6570\uff0c\u53ef\u4ee5\u505a\u5230 $O(1)$ \u8f6c\u79fb\u3002\u8fd9\u6837\u53ef\u4ee5\u83b7\u5f97 50 \u5206\u3002\r\n\r\n---\r\n\r\n\u8003\u8651\u6ca1\u6709\u7279\u522b\u9009\u624b\u7684\u90e8\u5206\u5206\uff1a\r\n\r\n\u6211\u4eec\u786e\u5b9a\u4e00\u4e2a\u5b66\u6821\u6240\u9009\u62e9\u7684\u5bfc\u5e08\uff0c\u53ef\u4ee5\u5206\u6210\u4e24\u6b65\uff1a\u7b2c\u4e00\u6b65\u786e\u5b9a\u8be5\u5b66\u6821\u6240\u5728\u57ce\u5e02\u6240\u5c5e\u7684\u9635\u8425\uff0c\u7b2c\u4e8c\u90e8\u786e\u5b9a\u8be5\u5b66\u6821\u6240\u5c5e\u7684\u6d3e\u7cfb\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u9635\u8425\u548c\u6d3e\u7cfb\u786e\u5b9a\u4ee5\u540e\uff0c\u8be5\u5b66\u6821\u7684\u5bfc\u5e08\u4e5f\u5c31\u786e\u5b9a\u4e86\u3002\r\n\r\n\u6ce8\u610f\u5230\u8fd9\u4e24\u6b65\u7684\u9009\u62e9\u662f\u65e0\u5e8f\u7684\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u5148\u7ed9\u6240\u6709\u7684\u57ce\u5e02\u90fd\u5b9a\u4e0b\u4e00\u4e2a\u786e\u5b9a\u7684\u9635\u8425\uff0c\u7136\u540e\u518d\u7ed9\u6bcf\u4e2a\u5b66\u6821\u786e\u5b9a\u8be5\u5b66\u6821\u6240\u5c5e\u7684\u6d3e\u7cfb\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u5b9a\u6bcf\u4e2a\u5b66\u6821\u7684\u5b89\u6392\u60c5\u51b5\u3002\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u8fd9\u4e24\u6b65\u7684\u65b9\u6848\u6570\u5e94\u8be5\u76f8\u4e58\u3002\u80fd\u591f\u5c06\u5176\u5206\u6210\u4e24\u6b65\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u4e24\u6b65\u5206\u522b dp\uff1a\u8bbe $f_{i, j}$ \u662f\u8003\u8651\u524d $i$ \u4e2a\u57ce\u5e02\uff0c\u84dd\u9635\u8425\u5b89\u6392\u4e86 $j$ \u4e2a\u9009\u624b\u7684\u65b9\u6848\u6570\uff0c\u8f6c\u79fb\u663e\u7136\u3002\u540c\u7406\u8bbe $g_{i, j}$ \u662f\u8003\u8651\u524d $i$ \u4e2a\u5b66\u6821\uff0c\u9e2d\u6d3e\u7cfb\u6709 $j$ \u4e2a\u9009\u624b\u7684\u65b9\u6848\u6570\uff0c\u8f6c\u79fb\u663e\u7136\uff08\u60c5\u51b5\u6709\u70b9\u591a\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\uff09\u3002\r\n\r\n\u5728\u5bf9 f \u8fdb\u884c dp \u65f6\u9700\u8981\u7279\u522b\u6ce8\u610f\uff0c\u6709\u4e9b\u57ce\u5e02\u4e0d\u5b58\u5728\u5b66\u6821\uff0c\u5728 dp \u65f6\u5e94\u8be5\u8df3\u8fc7\u8fd9\u4e9b\u5b66\u6821\uff0c\u5426\u5219\u53ef\u80fd\u51fa\u9519\u3002\r\n\r\n\u8fd9\u4e2a\u90e8\u5206\u5206\u7ed3\u5408 50 \u5206\u505a\u6cd5\u53ef\u4ee5\u83b7\u5f97 70 \u5206\u3002~~\u7136\u540e SD \u9009\u624b\u5c31\u53ef\u4ee5\u8d70\u4eba\u53bb\u5f00 B \u4e86~~\u3002\r\n\r\n---\r\n\r\n\u8003\u8651\u6b63\u89e3\u3002\r\n\r\n\u4ece\u4e0a\u4e00\u4e2a\u90e8\u5206\u5206\u63a8\u5e7f\uff0c\u8fd9\u91cc\u7684\u4e3b\u8981\u60f3\u6cd5\u4f9d\u7136\u662f\u901a\u8fc7\u57ce\u5e02\u6765\u786e\u5b9a\u9635\u8425\uff0c\u518d\u901a\u8fc7\u5b66\u6821\u786e\u5b9a\u6d3e\u7cfb\u3002\r\n\r\n\u9996\u5148\u5bf9\u4e8e\u6ca1\u6709\u9650\u5236\u7684**\u57ce\u5e02**\u548c\u6ca1\u6709\u88ab\u9650\u5236\u7684**\u5b66\u6821**\uff0c\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684\u505a\u6cd5\u6c42\u51fa\u65b9\u6848\u6570\u3002\u8003\u8651\u5bf9\u88ab\u9650\u5236\u7684\u57ce\u5e02\u548c\u5b66\u6821\uff0c\u7531\u4e8e $k$ \u5f88\u5c0f\uff0c\u53ef\u4ee5\u7528\u7c7b\u4f3c 50 \u5206\u7684\u505a\u6cd5\u8fdb\u884c\u5355\u72ec dp\uff0c\u6700\u7b80\u5355\u7684\u60f3\u6cd5\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u88ab\u9650\u5236\u7684\u57ce\u5e02\uff0c\u628a\u6240\u6709\u88ab\u9650\u5236\u7684\u5b66\u6821\u63d0\u51fa\u6765\uff0c\u5355\u72ec\u8fdb\u884c dp\u3002\u5373\u8bbe $G_{j}$ \u662f\u8003\u8651\u8be5\u57ce\u5e02\u7684\u524d $i$ \u4e2a\u5b66\u6821\uff0c\u6709 $j$ \u4e2a\u4eba\u52a0\u5165\u9e2d\u6d3e\u7cfb\u7684\u65b9\u6848\u6570\uff08\u6eda\u52a8\u6389\u7b2c\u4e00\u7ef4\uff09\uff0c\u7136\u540e\u518d\u8bbe $F_{j, k}$ \uff08\u6eda\u52a8\u6389\u7b2c\u4e00\u7ef4\uff09\u662f\u8003\u8651\u524d $i$ \u4e2a\u5b66\u6821\uff0c\u6709 $j$ \u4e2a\u84dd\u9635\u8425\uff0c$k$ \u4e2a\u9e2d\u6d3e\u7cfb\u7684\u65b9\u6848\u6570\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc $k$ \u662f\u5faa\u73af\u53d8\u91cf\uff09\u3002\u4f46\u662f\u8fd9\u6837\u5408\u5e76\u4e24\u4e2a\u80cc\u5305\u65f6\uff0c\u9700\u8981\u5bf9\u4e8e $F$ \u7684\u6bcf\u4e2a\u72b6\u6001\uff0c\u90fd\u679a\u4e3e\u4e00\u8fb9\u52a0\u5165\u9e2d\u6d3e\u7cfb\u7684\u4eba\u6570\uff0c\u5373\u5408\u5e76\u80cc\u5305\u65f6\u4e3a\r\n\r\n$$F_{j, k} = \\sum_{a = 0}^{c0} F_{j - t, k - a}{G_{a, 0/1}}$$\r\n\r\n\u8fd9\u91cc $t$ \u53d6\u4e0d\u540c\u6570\u503c\uff080 \u6216\u57ce\u5e02 $i$ \u7684\u4eba\u6570\uff09\u5206\u522b\u8868\u793a\u7b2c $i$ \u4e2a\u57ce\u5e02\u52a0\u5165\u84dd\u9635\u8425\u8fd8\u662f\u7ea2\u9635\u8425\u3002\r\n\r\n\u8fd9\u6837\u4ea7\u751f\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u8f6c\u79fb\u7684\u591a\u679a\u4e3e\u4e86\u4e00\u4e2a $a$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m^3 k)$\uff0c\u65e0\u6cd5\u901a\u8fc7\u3002~~\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u50cf\u675c\u795e\u4e00\u6837\u5199\u4e2a NTT \u4e0a\u53bb~~\u3002\r\n\r\n\u6ce8\u610f\u5230\u5bf9 $G$ \u8fdb\u884c dp \u7684\u590d\u6742\u5ea6\u662f\u5747\u644a $O(m)$ \u7684\uff08\u5982\u679c\u8ba4\u4e3a\u8981 dp $k$ \u6b21\uff09\uff0c\u4f46\u662f\u5408\u5e76\u7684\u590d\u6742\u5ea6\u9ad8\u7684\u79bb\u8c31\uff0c\u6211\u4eec\u8003\u8651\u5e73\u8861\u590d\u6742\u5ea6\u3002\u8bbe $G_{j, k, 0/1}$ \u662f\u5728\u8f6c\u79fb\u672c**\u57ce\u5e02**\u7684**\u6240\u6709\u5b66\u6821**\u4ee5**\u524d**\uff0c\u5171\u6709 $j$ \u540d\u9009\u624b\u52a0\u5165\u4e86\u84dd\u9635\u8425\uff0c\u4e14\u8003\u8651**\u672c\u57ce\u5e02**\u7684\u524d $i$ \u4e2a**\u5b66\u6821**\uff0c**\u52a0\u4e0a\u4e4b\u524d\u7684\u57ce\u5e02**\u5171\u6709 $k$ \u540d\u9009\u624b\u52a0\u5165\u9e2d\u6d3e\u7cfb\uff0c\u4e14\u672c\u57ce\u5e02\u7684\u6240\u6709\u9009\u624b\u90fd\u52a0\u5165\u84dd/\u7ea2\u9635\u8425\u7684\u65b9\u6848\u6570\uff0c\u56e0\u4e3a $j$ \u662f\u672c\u57ce\u5e02\u4ee5\u524d\u7684\u4fe1\u606f\uff0c\u6240\u4ee5**\u8f6c\u79fb\u65f6\u7b2c\u4e00\u7ef4\u662f\u4e0d\u53d8\u7684**\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u5f53\u524d\u5b66\u6821\u52a0\u5165\u54ea\u4e2a\u6d3e\u7cfb\u5373\u53ef\u3002\r\n\r\n\u8fd9\u6837\u5728\u5408\u5e76\u80cc\u5305\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $F_{j, k}$ \u53ea\u9700\u8981\u679a\u4e3e\u672c\u57ce\u5e02\u52a0\u5165\u54ea\u4e2a\u9635\u8425\uff0c\u4e5f\u5373\r\n\r\n$$F_{j, k} = G_{j, k, 1} + G_{j - sum_i, k, 0}$$\r\n\r\n\u5176\u4e2d $sum_i$ \u8868\u793a\u57ce\u5e02 $i$ \u7684\u9009\u624b\u603b\u6570\u3002\r\n\r\n\u8fd9\u6837\uff0c\u5408\u5e76\u7684\u590d\u6742\u5ea6\u88ab\u964d\u5230\u4e86\u5355\u6b21 $O(1)$\uff0c\u603b\u590d\u6742\u5ea6 $O(km^2)$\uff0cdp $G$ \u7684\u590d\u6742\u5ea6\u5347\u81f3\u4e86\u5747\u644a $O(m^2)$\uff0c\u603b\u590d\u6742\u5ea6 $O(km^2)$\u3002\u53ef\u4ee5\u63a5\u53d7\u3002\r\n\r\n\u8003\u8651\u7edf\u8ba1\u7b54\u6848\u3002\u9996\u5148\u679a\u4e3e\u88ab\u9650\u5236\u7684 dp \u6570\u7ec4 $F_{j, k}$\uff0c\u7136\u540e\u4e58\u4e0a\u4e0d\u88ab\u9650\u5236\u7684\u60c5\u51b5 $f, g$ \u7684\u65b9\u6848\u6570\u5373\u53ef\u3002\u5199\u51fa\u5f0f\u5b50\u4ee5\u540e\u53ef\u4ee5\u770b\u51fa\u8f6c\u79fb\u662f\u4e00\u4e2a\u533a\u95f4\u548c\u5f62\u5f0f\uff0c\u5bf9 $f$ \u548c $g$ \u6c42\u524d\u7f00\u548c\uff0c\u5c31\u53ef\u4ee5\u5355\u6b21 $O(1)$ \u7edf\u8ba1\u7b54\u6848\u4e86\u3002\r\n\r\n\u4e0a\u9762\u8fd9\u4e9b\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u90fd\u5f88\u5bb9\u6613\u7b97\u51fa\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u592a\u61d2\u4e86\u6ca1\u6709\u7b97\uff08\r\n\r\n### Code\r\n\r\n70 \u5206\r\n\r\n```cpp\r\nnamespace Fusu {\r\n\r\nconst int tnn = 35;\r\nconst int maxn = 1005;\r\nconst int maxm = 2505;\r\nconst int p = 998244353;\r\n\r\nint T;\r\nint n, c, c0, c1, d0, d1, t;\r\nint bel[maxn], s[maxn], sc[maxn], anti[maxn], ban[maxn];\r\nint f[maxm], g[maxm];\r\nint tmp[maxn];\r\nint F[2][maxn][maxn][2];\r\n\r\nvoid Clear();\r\nvoid Init();\r\nvoid Calc1();\r\nvoid Calc2();\r\n\r\nvoid Main() {\r\n  for (qr(T); T; --T) {\r\n    Clear();\r\n    Init();\r\n    if (t == 0) Calc1();\r\n    else Calc2();\r\n  }\r\n}\r\n\r\nvoid Calc1() {\r\n  f[0] = 1;\r\n  for (int i = 1, sum = 0; i <= c; ++i) if (sc[i]) {\r\n    sum += sc[i];\r\n    for (int j = c0, lim = std::max(0, sum - c1); j >= lim; --j) {\r\n      if (j >= sc[i]) f[j] += f[j - sc[i]];\r\n      if (f[j] > p) f[j] -= p;\r\n    }\r\n  }\r\n  g[0] = 1;\r\n  for (int i = 1, sum = 0; i <= n; ++i) {\r\n    sum += s[i];\r\n    for (int j = d0, lim = std::max(0, sum - d1); j >= lim; --j) {\r\n      if (j >= s[i]) g[j] += g[j - s[i]];\r\n      if (g[j] > p) g[j] -= p;\r\n    }\r\n  }\r\n  int s1 = 0, s2 = 0, ss = 0;\r\n  for (int i = 1; i <= n; ++i) ss += s[i];\r\n  for (int i = std::max(0, ss - c1); i <= c0; ++i) {\r\n    s1 += f[i];\r\n    if (s1 > p) s1 -= p;\r\n  }\r\n  for (int i = std::max(0, ss - d1); i <= d0; ++i) {\r\n    s2 += g[i];\r\n    if (s2 > p) s2 -= p;\r\n  }\r\n  qw((1ll * s2 * s1 % p), '\\n');\r\n}\r\n\r\nvoid Clear() {\r\n  memset(f, 0, sizeof f);\r\n  memset(g, 0, sizeof g);\r\n  memset(sc, 0, sizeof sc);\r\n  memset(F, 0, sizeof F);\r\n  memset(anti, -1, sizeof anti);\r\n  memset(ban, -1, sizeof ban);\r\n}\r\n\r\nvoid Init() {\r\n  qr(n); qr(c);\r\n  qr(c0); qr(c1); qr(d0); qr(d1);\r\n  for (int i = 1; i <= n; ++i) {\r\n    qr(bel[i]); qr(s[i]);\r\n    sc[bel[i]] += s[i];\r\n  }\r\n  qr(t);\r\n  for (int i = 1, x, y; i <= t; ++i) {\r\n    qr(x); qr(y);\r\n    anti[x] = y;\r\n    ban[bel[x]] = 1;\r\n  }\r\n}\r\n\r\nvoid Calc2() {\r\n  for (int i = 1; i <= n; ++i) {\r\n    tmp[i] = i;\r\n  }\r\n  std::sort(tmp + 1, tmp + 1 + n, [](const int x, const int y) { return bel[x] < bel[y]; });\r\n  int x = 0, y = 1, sum = 0;\r\n  F[x][0][0][0] = 1;\r\n  for (int i = 1, u = tmp[i]; i <= n; u = tmp[++i]) {\r\n    sum += s[u];\r\n    std::swap(x, y);\r\n    for (int j = std::max(0, sum - c1); j <= c0; ++j) {\r\n      for (int k = std::max(0, sum - d1); k <= d0; ++k) {\r\n        for (int h = 0; h < 2; ++h) {\r\n          int &v = F[x][j][k][h];\r\n          v = 0;\r\n          if (h == 0) {\r\n            if (anti[u] != 0) {\r\n              if ((j >= s[u]) && (k >= s[u])) {\r\n                v += F[y][j - s[u]][k - s[u]][h];\r\n                if (v > p) v -= p;\r\n              }\r\n            }\r\n            if (anti[u] != 1) {\r\n              if (j >= s[u]) {\r\n                v += F[y][j - s[u]][k][h];\r\n                if (v > p) v -= p;\r\n              }\r\n            }\r\n          } else {\r\n            if (anti[u] != 2) {\r\n              if (k >= s[u]) {\r\n                v += F[y][j][k - s[u]][h];\r\n                if (v > p) v -= p;\r\n              }\r\n            }\r\n            if (anti[u] != 3) {\r\n              v += F[y][j][k][h];\r\n              if (v > p) v -= p;\r\n            }\r\n          }\r\n          if (bel[u] != bel[tmp[i - 1]]) {\r\n            int hh = h ^ 1;\r\n            if (h == 0) {\r\n              if (anti[u] != 0) {\r\n                if ((j >= s[u]) && (k >= s[u])) {\r\n                  v += F[y][j - s[u]][k - s[u]][hh];\r\n                  if (v > p) v -= p;\r\n                }\r\n              }\r\n              if (anti[u] != 1) {\r\n                if (j >= s[u]) {\r\n                  v += F[y][j - s[u]][k][hh];\r\n                  if (v > p) v -= p;\r\n                }\r\n              }\r\n            } else {\r\n              if (anti[u] != 2) {\r\n                if (k >= s[u]) {\r\n                  v += F[y][j][k - s[u]][hh];\r\n                  if (v > p) v -= p;\r\n                }\r\n              }\r\n              if (anti[u] != 3) {\r\n                v += F[y][j][k][hh];\r\n                if (v > p) v -= p;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  int ans = 0;\r\n  for (int i = std::max(0, sum - c1); i <= c0; ++i) {\r\n    for (int j = std::max(0, sum - d1); j <= d0; ++j) {\r\n      ans += F[x][i][j][0];\r\n      if (ans > p) ans -= p;\r\n      ans += F[x][i][j][1];\r\n      if (ans > p) ans -= p;\r\n    }\r\n  }\r\n  qw(ans, '\\n');\r\n}\r\n```\r\n\r\n100 \u5206\r\n\r\n```cpp\r\nnamespace Fusu {\r\n\r\nconst int tnn = 35;\r\nconst int maxn = 1005;\r\nconst int maxm = 2505;\r\nconst int p = 998244353;\r\n\r\nint T;\r\nint n, c, c0, c1, d0, d1, t;\r\nint bel[maxn], s[maxn], sc[maxn], anti[maxn], ban[maxn];\r\nint f[maxm], g[maxm];\r\nint F[maxm][maxm], G[2][maxm][maxm][2];\r\nstd::vector<int> sch[maxn];\r\n\r\nvoid Clear();\r\nvoid Init();\r\nvoid Calc1();\r\nvoid Calc2();\r\n\r\nvoid Main() {\r\n  for (qr(T); T; --T) {\r\n    Clear();\r\n    Init();\r\n    Calc1();\r\n    Calc2();\r\n  }\r\n}\r\n\r\nvoid Calc1() {\r\n  f[0] = 1;\r\n  for (int i = 1, sum = 0; i <= c; ++i) if ((sc[i]) && (ban[i] == -1)) {\r\n    sum += sc[i];\r\n    for (int j = c0, lim = std::max(0, sum - c1); j >= lim; --j) {\r\n      if (j >= sc[i]) f[j] += f[j - sc[i]];\r\n      if (f[j] > p) f[j] -= p;\r\n    }\r\n  }\r\n  g[0] = 1;\r\n  for (int i = 1, sum = 0; i <= n; ++i) if (anti[i] == -1) {\r\n    sum += s[i];\r\n    for (int j = d0, lim = std::max(0, sum - d1); j >= lim; --j) {\r\n      if (j >= s[i]) g[j] += g[j - s[i]];\r\n      if (g[j] > p) g[j] -= p;\r\n    }\r\n  }\r\n  for (int i = 1; i <= d0; ++i) {\r\n    g[i] += g[i - 1];\r\n    if (g[i] > p) g[i] -= p;\r\n  }\r\n  for (int i = 1; i <= c0; ++i) {\r\n    f[i] += f[i - 1];\r\n    if (f[i] > p) f[i] -= p;\r\n  }\r\n}\r\n\r\nvoid Clear() {\r\n  for (int i = 1; i <= n; ++i) sch[i].clear();\r\n  memset(f, 0, sizeof f);\r\n  memset(g, 0, sizeof g);\r\n  memset(sc, 0, sizeof sc);\r\n  memset(F, 0, sizeof F);\r\n  memset(G, 0, sizeof G);\r\n  memset(anti, -1, sizeof anti);\r\n  memset(ban, -1, sizeof ban);\r\n}\r\n\r\nvoid Init() {\r\n  qr(n); qr(c);\r\n  qr(c0); qr(c1); qr(d0); qr(d1);\r\n  for (int i = 1; i <= n; ++i) {\r\n    qr(bel[i]); qr(s[i]);\r\n    sc[bel[i]] += s[i];\r\n  }\r\n  qr(t);\r\n  for (int i = 1, x, y; i <= t; ++i) {\r\n    qr(x); qr(y);\r\n    anti[x] = y;\r\n    ban[bel[x]] = 1;\r\n    sch[bel[x]].push_back(x);\r\n  }\r\n}\r\n\r\ninline int Sum(int *a, const int l, const int r) {\r\n  if (l > r) return 0;\r\n  if (l == 0) return a[r];\r\n  return (a[r] - a[l - 1] + p) % p;\r\n}\r\n\r\nvoid Calc2() {\r\n  int sum = 0, s1 = 0, s2 = 0;\r\n  F[0][0] = 1;\r\n  for (int i = 1; i <= c; ++i) if (ban[i] != -1) {\r\n\r\n    // memcpy\r\n    \r\n    int x = 0, y = 1;\r\n    for (int j = std::min(c0, s1); ~j; --j) {\r\n      for (int k = std::min(d0, s2); ~k; --k) {\r\n        for (int h = 0; h < 2; ++h) {\r\n          G[x][j][k][h] = F[j][k];\r\n        }\r\n      }\r\n    }\r\n\r\n    for (auto u : sch[i]) {\r\n      s2 += s[u];\r\n      std::swap(x, y);\r\n      for (int j = std::min(c0, s1); ~j; --j) {\r\n        for (int k = std::min(d0, s2); ~k; --k) {\r\n          for (int h = 0; h < 2; ++h) {\r\n            int &v = G[x][j][k][h];\r\n            v = 0;\r\n            if (h == 0) {\r\n              if (anti[u] != 0) {\r\n                if (k >= s[u]) {\r\n                  v += G[y][j][k - s[u]][h];\r\n                  if (v > p) v -= p;\r\n                }\r\n              }\r\n              if (anti[u] != 1) {\r\n                  v += G[y][j][k][h];\r\n                  if (v > p) v -= p;\r\n              }\r\n            } else {\r\n              if (anti[u] != 2) {\r\n                if (k >= s[u]) {\r\n                  v += G[y][j][k - s[u]][h];\r\n                  if (v > p) v -= p;\r\n                }\r\n              }\r\n              if (anti[u] != 3) {\r\n                v += G[y][j][k][h];\r\n                if (v > p) v -= p;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    s1 += sc[i];\r\n    for (int j = std::min(c0, s1); ~j; --j) {\r\n      for (int k = std::min(d0, s2); ~k; --k) {\r\n        F[j][k] = G[x][j][k][1];\r\n        if (j >= sc[i]) {\r\n          F[j][k] += G[x][j - sc[i]][k][0];\r\n          if (F[j][k] > p) F[j][k] -= p;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  for (int i = 1; i <= n; ++i) sum += s[i];\r\n  int ans = 0;\r\n  for (int i = 0, lm = std::min(s1, c0); i <= lm; ++i) {\r\n    for (int j = 0, Lm = std::min(d0, s2); j <= Lm; ++j) {\r\n      int a = Sum(f, std::max(0, sum - c1 - i), c0 - i), b = Sum(g, std::max(0, sum - d1 - j), d0 - j);\r\n      ans += 1ll * F[i][j] * a % p * b % p;\r\n      if (ans > p) ans -= p;\r\n    }\r\n  }\r\n  qw(ans, '\\n');\r\n}\r\n\r\n} // namespace Fusu\r\n```\r\n\r\n",
        "postTime": 1591867083,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5289 \u3010[\u5341\u4e8c\u7701\u8054\u80032019]\u76ae\u914d\u3011"
    },
    {
        "content": "# Description\n\n[\u9898\u9762](https://www.luogu.com.cn/problem/P5289)\n\n**\u7b80\u5316\u7248\u9898\u9762\uff1a**\n\n\u6709 $c$ \u4e2a\u8c46\u835a\uff0c\u5171 $n$ \u9897\u8c46\u5b50\uff0c\u6bcf\u9897\u8c46\u5b50\u90fd\u6709\u81ea\u5df1\u7684\u91cd\u91cf\uff0c\u73b0\u5728\u9700\u8981\u5c06\u7ed9\u8c46\u5b50\u8bbe\u5b9a\u4e3a\uff08\u9ec4\u8272/\u7eff\u8272\uff0c\u5706\u7c92/\u76b1\u7c92\uff09\uff0c\u8981\u6c42\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n1. \u7ed9\u5b9a\u8fd9\u56db\u79cd\u6027\u72b6\u7684\u9600\u503c $C0,C1,D0,D1$\uff0c\u8981\u6c42\u4e3a\u8fd9\u79cd\u6027\u72b6\u7684\u8c46\u5b50\u91cd\u91cf\u548c\u4e0d\u80fd\u8d85\u8fc7\u8be5\u9600\u503c\u3002\n\n2. \u4e0e\u6b64\u540c\u65f6\uff0c\u8fd9 $n$ \u9897\u8c46\u5b50\u4e2d\u5b58\u5728 $k$ \u9897\u987d\u76ae\u8c46\uff0c\u987d\u76ae\u8c46\u90fd\u6709\u81ea\u5df1\u7684\u60f3\u6cd5\uff0c\u6bd4\u5982\u62d2\u7edd\u6210\u4e3a\uff08\u9ec4\u5706/\u9ec4\u76b1/\u7eff\u5706/\u7eff\u76b1\uff09\u3002\n\n3. \u540c\u4e00\u4e2a\u8c46\u835a\u91cc\u7684\u8c46\u5b50\u5fc5\u987b**\u540c\u65f6\u4e3a\u9ec4\u8272**\u6216**\u540c\u65f6\u4e3a\u7eff\u8272**\u3002\n\n\u6c42\u6709\u591a\u5c11\u79cd\u7ed9\u8c46\u5b50\u8bbe\u5b9a\u7684\u65b9\u6848\uff0c\u7b54\u6848\u5bf9 $998244353$ \u53d6\u6a21\u3002\n\n# Solution\n\n~~\u672c\u9898\u53ea\u8003\u67e5\u4e86\u8054\u8d5b\u7ea7\u522b\u7684\u77e5\u8bc6\u70b9\u80cc\u5305\uff0c\u5f88\u666e\u53ca\u7ec4\u5427\u3002\u597d\u8bc4\uff01XD~~\n\n## \u7b97\u6cd5\u4e00 \u66b4\u529b\n\n\u7eaf\u66b4\u529b\u3002\n\n\u8bbe $f_{i,0/1,x,y,z}$ \u4e3a\u7b2c $i$ \u4e2a\u5b66\u6821\u9009\u62e9\u7684\u662f\u7ea2/\u84dd\u9635\u8425\uff0c\u524d\u4e09\u4f4d\u5bfc\u5e08\u5206\u522b\u6709 $x,y,z$ \u4e2a\u9009\u624b\u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u5b66\u6821\u8fdb\u884c\u8f6c\u79fb\u5373\u53ef\u3002\u590d\u6742\u5ea6 $O(nM^3)$\uff0c\u9884\u8ba1\u5f97\u5206 $30pts+$\u3002\n\n[\u4ee3\u7801](https://loj.ac/submission/838780)\n\n\u5176\u5b9e\u5e76\u4e0d\u9700\u8981\u8bbe\u4e09\u7ef4\u7684 $\\text{dp}$\uff0c\u53ea\u9700\u8bbe\u72b6\u6001 $f_{i,0/1,x,y}$ \u8868\u793a\u7b2c $i$ \u4e2a\u5b66\u6821\u9009\u62e9\u7684\u662f\u7ea2/\u84dd\u9635\u8425\uff0c\u9009\u62e9\u84dd\u9635\u8425\u7684\u6709 $x$ \u4eba\uff0c\u9e2d\u6d3e\u7cfb\u7684\u6709 $y$ \u4eba\uff0c\u56e0\u4e3a\u4e00\u4e2a\u9009\u624b\u5fc5\u5b9a\u5c5e\u4e8e\u5176\u4e2d\u4e00\u4e2a\u9635\u8425/\u6d3e\u7cfb\uff0c\u590d\u6742\u5ea6 $O(nM^2)$\uff0c\u9884\u8ba1\u5f97\u5206 $50pts$\u3002\n\n[\u4ee3\u7801](https://loj.ac/submission/838799)\n\n## \u7b97\u6cd5\u4e8c $k=0$\n\n\u8003\u8651 $k=0$ \u7684\u60c5\u51b5\u3002\n\n\u6b64\u65f6\u4efb\u4f55\u5b66\u6821\u90fd\u6ca1\u6709\u5bfc\u5e08\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u53d1\u73b0\u5148\u786e\u5b9a\u9635\u8425\u518d\u786e\u5b9a\u6d3e\u7cfb\uff0c\u4e0e\u540c\u65f6\u786e\u5b9a\u9635\u8425\u4e0e\u6d3e\u7cfb\uff08\u5373\u76f4\u63a5\u786e\u5b9a\u67d0\u4f4d\u5bfc\u5e08\uff09\u6240\u5f97\u5230\u7684\u65b9\u6848\u6570\u662f\u7b49\u4ef7\u7684\u3002\uff08\u7c7b\u4f3c\u4e8e\u751f\u7269\u91cc\u7684\u4e24\u5bf9\u76f8\u5bf9\u6027\u72b6\uff1f\uff09\n\n\u8bbe $f_{i,1/0,j}$ \u4e3a\u7b2c $i$ \u4e2a\u5b66\u6821\u9009\u62e9\u7ea2/\u84dd\u9635\u8425\uff0c\u4e14\u524d $i$ \u4e2a\u5b66\u6821\u9009\u62e9\u84dd\u9635\u8425\u7684\u6709 $j$ \u4e2a\u4eba\u7684\u65b9\u6848\u6570\uff0c$g_{i,j}$ \u4e3a\u524d $i$ \u4e2a\u5b66\u6821\u9009\u62e9\u9e2d\u6d3e\u7cfb\u7684\u6709 $j$ \u4e2a\u4eba\u7684\u65b9\u6848\u6570\uff0c\u90a3\u4e48\u5206\u522b\u8ba1\u7b97\u51fa\u6765\u540e\uff0c\u8fdb\u884c\u5408\u5e76\uff0c\u5373\u603b\u65b9\u6848\u6570\u4e3a\n\n$$\n\\sum \\limits_{i=S-C_1}^{C_0} \\sum \\limits_{i=D_1}^{D_0} (f_{n,0,i} + f_{n,1,i}) \\times g_{n,j}\n$$\n\n\u5176\u5b9e\u672c\u8d28\u4e0a\u5c31\u662f**\u80cc\u5305\u53ca\u80cc\u5305\u5408\u5e76**\u3002\n\n\u590d\u6742\u5ea6 $O(nM)$\uff0c\u7ed3\u5408\u524d\u9762\u7684\u7b97\u6cd5\u53ef\u4ee5\u62ff\u5230 $70pts$\u3002\n\n[\u4ee3\u7801](https://loj.ac/submission/838837)\n\n~~\u968f\u4fbf\u5199\u5199\u66b4\u529b\u5c3170pts\u4e86~~\n\n## \u7b97\u6cd5\u4e09 \u6b63\u89e3\n\n\u7ee7\u7eed\u6cbf\u7740\u7b97\u6cd5\u4e8c\u7684\u601d\u8def\u8fdb\u884c\u601d\u8003\uff0c\u62d3\u5c55\u5230\u66f4\u4e3a\u4e00\u822c\u7684\u60c5\u51b5\u3002\n\n\u8fd8\u662f\u8bbe $f$ \u548c $g$ \u5206\u522b\u8868\u793a\u9635\u8425\u548c\u6d3e\u7cfb\u7684\u65b9\u6848\u6570\uff0c\u8003\u8651\u5982\u4f55\u5904\u7406\u5b66\u6821\u5bf9\u5bfc\u5e08\u7684\u9650\u5236\u3002\n\n\u4e0b\u9762\u5bf9\u4e8e\u9635\u8425\u7684\u5212\u5206\uff0c\u90fd\u57fa\u4e8e\u57ce\u5e02\u4e3a\u5355\u4f4d\u8fdb\u884c\u8003\u8651\uff1b\u5bf9\u4e8e\u6d3e\u7cfb\u7684\u5212\u5206\uff0c\u90fd\u57fa\u4e8e\u5b66\u6821\u4e3a\u5355\u4f4d\u8fdb\u884c\u8003\u8651\uff08\u82e5\u4ee5\u57ce\u5e02\u4e3a\u5355\u4f4d\u8fdb\u884c $\\text{dp}$\uff0c\u4e00\u4e2a\u6ca1\u6709\u9650\u5236\u7684\u5b66\u6821\u56e0\u4e3a\u540c\u57ce\u5e02\u5176\u5b83\u5b66\u6821\u7684\u504f\u597d\u88ab $\\text{dp}$ \u5230\u4f1a\u611f\u89c9\u5f88\u4e0d\u723d $\\text{2333}$\uff09\u3002\n\n\u4e00\u4e2a\u57ce\u5e02\u6709\u9650\u5236\uff0c\u5f53\u4e14\u4ec5\u5f53\u57ce\u5e02\u5185\u7684\u5b66\u6821\u6709\u9650\u5236\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709\u9650\u5236\u7684\u57ce\u5e02\u548c\u5b66\u6821\uff0c\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u4eff\u7167\u7b97\u6cd5\u4e8c\uff0c\u76f4\u63a5 $\\text{dp}$ \u51fa $f$ \u548c $g$\u3002\n\n\u800c\u5bf9\u4e8e\u90a3\u4e9b\u6709\u9650\u5236\u7684\u5b66\u6821/\u57ce\u5e02\uff0c\u7531\u4e8e $k$ \u5f88\u5c0f\uff0c\u53ea\u6709 $30$\uff0c\u6211\u4eec\u53ef\u4ee5\u4eff\u7167 $50pts$ \u7684\u7b97\u6cd5\uff0c\u66b4\u529b $\\text{dp}$ \u51fa\u65b9\u6848\u6570\uff0c\u8bb0\u4e3a $F$\u3002\n\n\u8bbe $F_{i,0/1,j,k}$ \u8868\u793a\u524d $i$ \u4e2a\u6709\u9650\u5236\u7684\u5b66\u6821\uff0c\u7b2c $i$ \u4e2a\u5b66\u6821\u52a0\u5165\u4e86\u7ea2/\u84dd\u9635\u8425\uff0c\u52a0\u5165\u7ea2\u9635\u8425\u7684\u6709 $j$ \u4eba\uff0c\u8fd9\u4e9b\u5b66\u6821\u6240\u5c5e\u57ce\u5e02\u52a0\u5165\u4e86\u9e2d\u6d3e\u7cfb\u7684\u6709 $k$ \u4eba\u7684\u65b9\u6848\u6570\u3002\n\n\u6700\u540e\uff0c\u8fdb\u884c\u5408\u5e76\uff0c\u53ea\u8981\u679a\u4e3e\u6709\u9650\u5236\u7684\u5b66\u6821\u7684\u6d3e\u7cfb\u3001\u9635\u8425\u4eba\u6570\uff0c\u7136\u540e\u7528 $f$ \u53bb\u5339\u914d\u65e0\u9650\u5236\u57ce\u5e02\u7684\u9635\u8425\u4eba\u6570\u7684\u4e0a\u4e0b\u754c\uff0c\u7528 $g$ \u53bb\u5339\u914d\u65e0\u9650\u5236\u7684\u5b66\u6821\u7684\u6d3e\u7cfb\u4eba\u6570\u7684\u4e0a\u4e0b\u754c\uff0c\u518d\u5168\u90e8\u4e58\u8d77\u6765\u5c31\u597d\u4e86\u3002\n\n[\u4ee3\u7801](https://loj.ac/submission/839291)\n\n# Code\n\n`Talk is cheap. Show me the code. `\n\n**Tips:**\n\n1. \u6eda\u52a8\u6570\u7ec4\u6bcf\u8f6e\u8bb0\u5f97\u6e05\u96f6\uff01\n2. \u4e0d\u8981\u7528 `memset`\uff0c\u8d3c\u6162\uff01\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint ty() {\n  int x = 0, f = 1; char ch = getchar();\n  while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); }\n  while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); }\n  return x * f;\n}\n\ntypedef long long ll;\nconst int _ = 2500 + 10;\nconst int mod = 998244353;\nint N, C, K, C0, C1, D0, D1, sum;\nint f[5005], g[5005], F[2][2][5005][5005];\nstruct school {\n  int city, num, prf;\n  bool operator<(const school &x) const {\n    if ((prf != 0) ^ (x.prf != 0)) return (prf != 0) > (x.prf != 0);\n    return city < x.city;\n  }\n} scl[_];\nstruct city { int num, hate; } ct[_];\n\nvoid Inc(int &x, const int &y) { x = x + y < mod ? x + y : x + y - mod; }\n\nvoid clear() {\n  sum = 0;\n  // memset(f, 0, sizeof(f));\n  // memset(g, 0, sizeof(g));\n  // memset(F, 0, sizeof(F));\n  memset(ct, 0, sizeof(ct));\n  memset(scl, 0, sizeof(scl));\n}\n\nvoid init() {\n  N = ty(), C = ty();\n  C0 = ty(), C1 = ty(), D0 = ty(), D1 = ty();\n  for (int i = 1; i <= N; ++i) {\n    scl[i].city = ty(), scl[i].num = ty();\n    sum += scl[i].num;\n  }\n  K = ty();\n  for (int i = 1; i <= K; ++i) {\n    int x = ty();\n    scl[x].prf = ty() + 1;\n  }\n  sort(scl + 1, scl + N + 1);\n  for (int i = 1; i <= N; ++i) {\n    ct[scl[i].city].num += scl[i].num;\n    if (scl[i].prf) ct[scl[i].city].hate = true;\n  }\n}\n\nll calc1(int l, int r) {\n  return l > r ? 0 : (l <= 0 ? g[r] : (g[r] - g[l - 1] + mod) % mod);\n}\nll calc2(int l, int r) {\n  return l > r ? 0 : (l <= 0 ? f[r] : (f[r] - f[l - 1] + mod) % mod);\n}\n\nvoid dp() {\n  f[0] = 1;\n  for (int i = 1; i <= C; ++i)\n    if (!ct[i].hate && ct[i].num)\n      for (int j = C0; j >= ct[i].num; --j) Inc(f[j], f[j - ct[i].num]);\n  for (int i = 1; i <= C0; ++i) f[i] = (f[i] + f[i - 1]) % mod;\n\n  g[0] = 1;\n  for (int i = 1; i <= N; ++i)\n    if (!scl[i].prf)\n      for (int j = D0; j >= scl[i].num; --j) Inc(g[j], g[j - scl[i].num]);\n  for (int i = 1; i <= D0; ++i) g[i] = (g[i] + g[i - 1]) % mod;\n\n  F[0][0][0][0] = 1;\n  int sum1 = 0, nw = 0;\n  for (int i = 1; i <= K; ++i) {\n    sum1 += scl[i].num;\n    for (int x = 0; x <= C0; ++x) {\n      for (int y = 0; y <= sum1; ++y) {\n        if (scl[i].prf != 1) {\n          if (scl[i].city != scl[i - 1].city) {\n            if (x >= ct[scl[i].city].num && y >= scl[i].num) {\n              Inc(F[nw ^ 1][0][x][y],\n                  F[nw][1][x - ct[scl[i].city].num][y - scl[i].num]);\n              Inc(F[nw ^ 1][0][x][y],\n                  F[nw][0][x - ct[scl[i].city].num][y - scl[i].num]);\n            }\n          } else {\n            if (y >= scl[i].num)\n              Inc(F[nw ^ 1][0][x][y], F[nw][0][x][y - scl[i].num]);\n          }\n        }\n        if (scl[i].prf != 2) {\n          if (scl[i].city != scl[i - 1].city) {\n            if (x >= ct[scl[i].city].num) {\n              Inc(F[nw ^ 1][0][x][y], F[nw][1][x - ct[scl[i].city].num][y]);\n              Inc(F[nw ^ 1][0][x][y], F[nw][0][x - ct[scl[i].city].num][y]);\n            }\n          } else {\n            Inc(F[nw ^ 1][0][x][y], F[nw][0][x][y]);\n          }\n        }\n        if (scl[i].prf != 3) {\n          if (scl[i].city != scl[i - 1].city) {\n            if (y >= scl[i].num) {\n              Inc(F[nw ^ 1][1][x][y], F[nw][0][x][y - scl[i].num]);\n              Inc(F[nw ^ 1][1][x][y], F[nw][1][x][y - scl[i].num]);\n            }\n          } else {\n            if (y >= scl[i].num)\n              Inc(F[nw ^ 1][1][x][y], F[nw][1][x][y - scl[i].num]);\n          }\n        }\n        if (scl[i].prf != 4) {\n          if (scl[i].city != scl[i - 1].city) {\n            Inc(F[nw ^ 1][1][x][y], F[nw][0][x][y]);\n            Inc(F[nw ^ 1][1][x][y], F[nw][1][x][y]);\n          } else {\n            Inc(F[nw ^ 1][1][x][y], F[nw][1][x][y]);\n          }\n        }\n      }\n    }\n    for (int x = 0; x <= C0; ++x)\n      for (int y = 0; y <= sum1; ++y) F[nw][0][x][y] = F[nw][1][x][y] = 0;\n    nw ^= 1;\n  }\n\n  int ans = 0;\n  for (int i = 0; i <= C0; ++i) {\n    for (int j = 0; j <= sum1; ++j) {\n      ll A = (F[nw][0][i][j] + F[nw][1][i][j]) % mod;\n      ans = (1ll * ans + A * calc1(sum - D1 - j, D0 - j) % mod * calc2(sum - C1 - i, C0 - i) % mod) % mod;\n    }\n  }\n  printf(\"%d\\n\", ans);\n  for (int i = 0; i <= C0; ++i) {\n    f[i] = 0;\n    for (int j = 0; j <= sum1; ++j)\n      F[0][0][i][j] = F[0][1][i][j] = F[1][0][i][j] = F[1][1][i][j] = 0;\n  }\n  for (int i = 0; i <= D0; ++i) g[i] = 0;\n}\n\nint main() {\n#ifndef ONLINE_JUDGE\n  freopen(\"match.in\", \"r\", stdin);\n  freopen(\"match.out\", \"w\", stdout);\n#endif\n  int T = ty();\n  while (T--) {\n    clear();\n    init();\n    dp();\n  }\n  return 0;\n}\n```",
        "postTime": 1592380465,
        "uid": 49777,
        "name": "kkkstra",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5289 \u3010[\u5341\u4e8c\u7701\u8054\u80032019]\u76ae\u914d\u3011"
    },
    {
        "content": "# \u5341\u4e8c\u7701\u8054\u80032019 \u76ae\u914d\n\n\n\n---\n\n\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u66b4\u529b\u5c31\u662ff[i][j=0/1][k][l]\u8868\u793adp\u4e86i\u4e2a\u5b66\u6821\uff0c\u7b2ci\u4e2a\u5b66\u6821\u9009\u62e9\u7684\u9635\u8425\uff081\u84dd\uff0c0\u7ea2\uff09\uff0c\u9009\u4e86\u84dd\u9635\u8425\u7684\u4eba\u6570\u4e3ak\uff0c\u9009\u4e86\u9e2d\u6d3e\u7cfb\u7684\u4eba\u6570\u4e3al\u3002\n\n\u5148\u5bf9\u6240\u6709\u5b66\u6821\u6309\u57ce\u5e02\u6392\u5e8f\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5dp\u4e86\u3002\n\nk=0\u6709\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\u6ca1\u6709\u591a\u4f59\u7684\u9650\u5236\u65f6\uff0c\u6bcf\u4e2a\u57ce\u5e02\u7684\u9635\u8425\u548c\u5b66\u6821\u7684\u6d3e\u7cfb\u4e92\u4e0d\u5f71\u54cd\uff0c\u53ef\u4ee5\u8bbef[i][j]\u8868\u793adp\u4e86i\u4e2a\u57ce\u5e02\uff0c\u9009\u4e86\u84dd\u9635\u8425\u7684\u4eba\u6570\u4e3aj\uff1bg[i][j]\u8868\u793adp\u4e86i\u4e2a\u6d3e\u7cfb\uff0c\u9009\u4e86\u9e2d\u6d3e\u7cfb\u7684\u4eba\u6570\u4e3al\u3002\n\n\u73b0\u5728\u8bb2\u6b63\u89e3\u3002\n\n\u4e00\u4e2a\u57ce\u5e02\u6709\u9650\u5236\u5f53\u4e14\u4ec5\u5f53\u6709\u4e00\u4e2a\u5b66\u6821\u5c5e\u4e8e\u8fd9\u4e2a\u57ce\u5e02\u6709\u9650\u5236\u3002\n\n\u90a3\u4e48\u6ca1\u6709\u9650\u5236\u7684\u57ce\u5e02\u53ef\u4ee5\u6309\u7167k=0\u65b9\u6cd5\u505a\uff0c\u6700\u540e\u548c\u6b63\u89e3\u65b9\u6cd5\u5408\u5e76\uff0c\u6709\u9650\u5236\u7684\u57ce\u5e02\u505a\u4e00\u904d\u66b4\u529b\u3002\n\n\u4f46\u662f\u53ef\u80fd\u6709\u9650\u5236\u7684\u57ce\u5e02\u4e2d\u7684\u5b66\u6821\u5f88\u591a\uff0c\u90a3\u4e9b\u5728\u6709\u9650\u5236\u7684\u57ce\u5e02\u4e2d\u6ca1\u6709\u9650\u5236\u7684\u5b66\u6821\u5c31\u4f1a\u88abdp\u5230\u5f88\u4e0d\u723d\u3002\n\n\u6309\u7167k=0\u7ee7\u7eed\u60f3\uff0c\u8fd9\u4e9b\u88ab\u591a\u4f59\u8ba1\u7b97\u7684\u5b66\u6821\u7684\u6d3e\u7cfb\u548c\u5b83\u4eec\u57ce\u5e02\u7684\u9635\u8425\u8fd8\u662f\u4e92\u4e0d\u5f71\u54cd\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u5355\u72ecdp\u8fd9\u4e9b\u5b66\u6821\u7684\u6d3e\u7cfb\uff0c\u53ea\u8981\u5bf9\u4e8e\u6709\u9650\u5236\u7684\u5b66\u6821\u505a\u66b4\u529b\u5c31\u884c\u4e86\u3002\u8fd9\u4e2a\u5bf9\u6d3e\u7cfb\u7684\u5355\u72ecdp\u53ef\u4ee5\u548c\u4e0a\u9762\u5176\u4ed6\u6ca1\u6709\u9650\u5236\u7684\u57ce\u5e02\u4e00\u8d77\u505a\u3002\n\n\u5177\u4f53\u5b9e\u73b0\uff0c\u8bbe\n\n- f[i][j][k]\u662f\u524di\u4e2a\u6709\u9650\u5236\u7684\u57ce\u5e02\uff0c\u6240\u6709\u5b66\u6821\u4e2d\u9009\u84dd\u8272\u9635\u8425\u6709j\u4eba\uff0c\u6709\u9650\u5236\u7684\u5b66\u6821\u4e2d\u9e2d\u6d3e\u7cfb\u6709k\u4eba\u7684\u65b9\u6848\u6570\n- g[i][j]\u662f\u524di\u4e2a\u6ca1\u6709\u9650\u5236\u7684\u57ce\u5e02\uff0c\u84dd\u8272\u9635\u8425\u6709j\u4eba\u7684\u65b9\u6848\u6570\n- h[i][j]\u662f\u524di\u4e2a\u6ca1\u6709\u9650\u5236\u7684\u5b66\u6821\uff0c\u9e2d\u6d3e\u7cfb\u6709j\u4eba\u7684\u65b9\u6848\u6570\n\n\u8fd9\u4e9b\u53ef\u4ee5\u7528\u6eda\u52a8\u6570\u7ec4\u6eda\u6389\u7b2c\u4e00\u7ef4i\uff0c\u5c31\u5f00\u7684\u4e0b\u4e86\u3002\n\n\u6c42f\u7684\u65f6\u5019\u5148\u679a\u4e3e\u6709\u9650\u5236\u7684\u57ce\u5e02\u7684\u9635\u8425\uff0c\u518ddp\u8fd9\u4e2a\u57ce\u5e02\u91cc\u6709\u9650\u5236\u7684\u5b66\u6821\u7684\u6d3e\u7cfb\u3002\n\n\u5269\u4e0b\u4e24\u4e2a\u5c31\u662f\u88f8\u768401\u80cc\u5305\u3002\n\n\u65f6\u95f4\u770b\u4f3c\u5f88\u5927\uff0c\u4f46\u662f\u5982\u679c\u6bcf\u6b21dp\u53eadp\u5230\u4e0a\u754c\u5c31\u5feb\u7684\u98de\u8d77\u4e86\u3002\n\n\u6ce8\u610fmemcpy\u4e5f\u8981\u53eamemcpy\u5230\u4e0a\u754c\u5426\u5219\u4f1a\u6162\u7684\u98de\u8d77\n\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#include<bits/stdc++.h>\n#define il inline\n#define vd void\n#define mod 998244353\ntypedef long long ll;\nil ll gi(){\n    ll x=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch)){\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n    return x*f;\n}\nint b[1010],s[1010];\nint f[2503][2503],_f[2503][2503],__f[2503][2503],g[2503],h[2503];\n// f[i][j][k] \u524di\u4e2a\u6709\u9650\u5236\u7684\u57ce\u5e02\uff0c\u6240\u6709\u5b66\u6821\u4e2d\u9009\u84dd\u8272\u9635\u8425\u6709j\u4eba\uff0c\u6709\u9650\u5236\u7684\u5b66\u6821\u4e2d\u9e2d\u6d3e\u7cfb\u6709k\u4eba\uff0c\u6eda\u6389i\n// g[i][j] \u524di\u4e2a\u6ca1\u6709\u9650\u5236\u7684\u57ce\u5e02\uff0c\u84dd\u8272\u9635\u8425\u6709j\u4eba\n// h[i][j] \u524di\u4e2a\u6ca1\u6709\u9650\u5236\u7684\u5b66\u6821\uff0c\u9e2d\u6d3e\u7cfb\u6709j\u4eba\nint ki[1010],kp[1010],ban[1010];//\u5b66\u6821\u7684\u9650\u5236\nint city[31],m;//\u6709\u9650\u5236\u7684\u57ce\u5e02\u6570\u91cf\nstd::vector<int>school[1010];//\u6709\u9650\u5236\u7684\u57ce\u5e02\u4e2d\u6709\u9650\u5236\u7684\u5b66\u6821\nint sum[1010],_sum[1010];//\u57ce\u5e02\u7684\u5b66\u6821\u4eba\u6570/\u57ce\u5e02\u6709\u9650\u5236\u7684\u5b66\u6821\u4eba\u6570\nil vd add(int&a,int b){a+=b;if(a>=mod)a-=mod;}\nil int get_add(int a,int b){a+=b;if(a>=mod)a-=mod;return a;}\nil vd memcpy(int f[2503][2503],int g[2503][2503],int sum1,int sum2){\n\tfor(int i=0;i<=sum1;++i)\n\t\tfor(int j=0;j<=sum2;++j)\n\t\t\tf[i][j]=g[i][j];\n}\nint main(){\n#ifdef XZZSB\n    freopen(\"in.in\",\"r\",stdin);\n    freopen(\"out.out\",\"w\",stdout);\n#endif\n    int yyborz=gi();\n    while(yyborz--){\n        int n=gi(),c=gi();\n        for(int i=1;i<=c;++i)sum[i]=_sum[i]=0;\n        for(int i=1;i<=c;++i)school[i].clear();\n        int C0=gi(),C1=gi(),D0=gi(),D1=gi(),Sum=0;//Sum \u6240\u6709\u4eba\u6570\u4e4b\u548c\n        for(int i=1;i<=n;++i)b[i]=gi(),s[i]=gi(),Sum+=s[i];\n        int k=gi();m=0;\n        for(int i=1;i<=n;++i)ban[i]=-1;\n        for(int i=1;i<=k;++i){\n            ki[i]=gi(),kp[i]=gi();\n            city[++m]=b[ki[i]],school[b[ki[i]]].push_back(ki[i]),ban[ki[i]]=kp[i];\n        }\n        std::sort(city+1,city+m+1);m=std::unique(city+1,city+m+1)-city-1;\n        for(int i=1;i<=n;++i)sum[b[i]]+=s[i];\n        for(int i=1;i<=n;++i)if(~ban[i])_sum[b[i]]+=s[i];\n        memset(f,0,sizeof f);memset(g,0,sizeof g);memset(h,0,sizeof h);\n        f[0][0]=1;\n\t\tint sum1=0,sum2=0;\n        for(int i=1;i<=m;++i){\n\t\t\tsum1=std::min(C0,sum1+sum[city[i]]);\n\t\t\tsum2=std::min(D0,sum2+_sum[city[i]]);\n            for(int o=0;o<2;++o){//\u57ce\u5e02city[i]\u7684\u9635\u8425\uff0co=0\u662f\u84dd\n                memcpy(_f,f,sum1,sum2);\n                for(auto x:school[city[i]]){//\u8ba1\u7b97\u57ce\u5e02\u4e2d\u6709\u9650\u5236\u7684\u5b66\u6821\u9009\u62e9\u7684\u6d3e\u7cfb\n                    for(int j=sum1;~j;--j)\n                        for(int k=sum2;~k;--k){\n                            if(!o){\n                                _f[j][k]=0;\n                                if(ban[x]!=o*2+1&&j>=s[x])add(_f[j][k],_f[j-s[x]][k]);\n                                if(ban[x]!=o*2&&k>=s[x]&&j>=s[x])add(_f[j][k],_f[j-s[x]][k-s[x]]);\n                            }else{\n                                if(ban[x]==o*2+1)_f[j][k]=0;\n                                if(ban[x]!=o*2&&k>=s[x])add(_f[j][k],_f[j][k-s[x]]);\n                            }\n                        }\n                }\n                if(!o){\n\t\t\t\t\tint others=sum[city[i]]-_sum[city[i]];\n                    for(int j=sum1;~j;--j)\n                        for(int k=sum2;~k;--k)\n                            if(j>=others)_f[j][k]=_f[j-others][k];\n                            else _f[j][k]=0;\n                }\n                if(!o)memcpy(__f,_f,sum1,sum2);\n                else{\n                    for(int j=0;j<=sum1;++j)\n                        for(int k=0;k<=sum2;++k)\n                            f[j][k]=get_add(_f[j][k],__f[j][k]);\n                }\n            }\n        }\n        g[0]=1;\n        for(int i=1,Sum=0;i<=c;++i){\n            if(!school[i].empty())continue;\n            if(!sum[i])continue;\n\t\t\tSum=std::min(C0,sum[i]+Sum);\n            for(int j=Sum;~j;--j)if(j>=sum[i])g[j]=(g[j]+g[j-sum[i]])%mod;\n        }\n        h[0]=1;\n        for(int i=1,Sum=0;i<=n;++i){\n            if(~ban[i])continue;\n\t\t\tSum=std::min(D0,s[i]+Sum);\n            for(int j=Sum;~j;--j)if(j>=s[i])h[j]=(h[j]+h[j-s[i]])%mod;\n        }\n        for(int i=1;i<=C0;++i)g[i]=(g[i]+g[i-1])%mod;\n        for(int i=1;i<=D0;++i)h[i]=(h[i]+h[i-1])%mod;\n        int ans=0;\n        for(int i=0;i<=C0;++i)\n            for(int j=0;j<=D0;++j){\n                if(Sum-i-C1-1>=C0-i)continue;\n                if(Sum-j-D1-1>=D0-j)continue;\n                ans=(ans+1ll*f[i][j]*(g[C0-i]-(Sum-i-C1-1>=0?g[Sum-i-C1-1]:0)+mod)%mod*(h[D0-j]-(Sum-j-D1-1>=0?h[Sum-j-D1-1]:0)+mod))%mod;\n            }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1555067634,
        "uid": 23118,
        "name": "\u03bb\u1d09\u028d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5289 \u3010[\u5341\u4e8c\u7701\u8054\u80032019]\u76ae\u914d\u3011"
    },
    {
        "content": "[\u5728\u535a\u5ba2\u67e5\u770b](https://www.cnblogs.com/chenxiaoran666/p/Luogu5289.html)\n\n**\u5927\u81f4\u9898\u610f\uff1a** \u8ba9\u4f60\u628a$m$\u7ec4\u5171$n$\u4e2a\u7269\u54c1\u653e\u5165\uff08\u84dd/\u7ea2\uff09\uff08\u9e2d/R\uff09\u8fd9$4$\u4e2a\u80cc\u5305\uff0c\u6bcf\u7ec4\u7269\u54c1\u653e\u5165\u7684\u80cc\u5305\u9635\u8425\u5fc5\u987b\u76f8\u540c\uff0c\u4e14\u5bf9\u4e8e\u6bcf\u79cd\u9635\u8425\u548c\u6bcf\u79cd\u6d3e\u7cfb\u7684\u80cc\u5305\u5404\u6709\u4e00\u4e2a\u5bb9\u91cf\u603b\u9650\u5236\u3002\u53e6\u6709$k$\u4e2a\u9650\u5236\u89c4\u5b9a\u67d0\u4e2a\u7269\u54c1\u4e0d\u80fd\u653e\u5165\u67d0\u4e2a\u80cc\u5305\uff0c\u6c42\u603b\u65b9\u6848\u6570\u3002\n\n### \u8003\u8651$k=0$\n\n\u9996\u5148\u6211\u4eec\u6765\u8003\u8651$k=0$\u7684\u90e8\u5206\u5206\u3002\n\n\u5219\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c**\u57ce\u5e02\u9009\u62e9\u7684\u9635\u8425**\u4e0e**\u5b66\u6821\u9009\u62e9\u7684\u6d3e\u7cfb**\u4e24\u8005\u662f\u6ca1\u6709\u5173\u7cfb\u7684\uff0c\u53ef\u4ee5\u5206\u5f00\u6765\u8ba1\u7b97\u3002\n\n\u5982\u679c\u4f60\u5bf9\u8fd9\u53e5\u8bdd\u770b\u5f97\u4e00\u8138\u61f5\u903c\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u662f\u5bf9\u5b83\u7684\u5177\u4f53\u89e3\u91ca\u3002\n\n------\n\n\u6211\u4eec\u8bb0\u6bcf\u4e2a\u5b66\u6821\u7684\u4eba\u6570\u4e3a$s_i$\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u57ce\u5e02\u7684\u603b\u4eba\u6570\u4e3a$t_i$\u3002\n\n\u5219\u7531\u4e8e\u540c\u4e00\u4e2a\u57ce\u5e02\u5fc5\u987b\u9009\u62e9\u540c\u4e00\u4e2a\u9635\u8425\uff0c\u800c\u6bcf\u4e2a\u9635\u8425\u53c8\u5404\u6709\u5bb9\u91cf\u9650\u5236\uff0c\u56e0\u6b64\u5c31\u76f8\u5f53\u4e8e\u628a\u57ce\u5e02**\u4e0d\u91cd\u4e0d\u6f0f**\u5206\u5165\u4e24\u4e2a\u6709\u5bb9\u91cf\u9650\u5236\u7684\u80cc\u5305\u4e2d\u3002\n\n\u8fd9\u662f\u5178\u578b\u7684\u80cc\u5305\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528$k1_{i,j}$\u8868\u793a**\u524d$i$\u4e2a\u57ce\u5e02\u84dd\u9635\u8425\u6709$j$\u4eba\u7684\u65b9\u6848\u6570**\uff0c\u5219\u8f6c\u79fb\u4e3a\uff1a\n\n$$k1_{i,j}=k1_{i-1,j}+k1_{i-1,j-t_i}$$\n\n\u800c\u8003\u8651\u5728\u57ce\u5e02\u786e\u5b9a\u9635\u8425\u540e\uff0c\u6bcf\u4e2a\u5b66\u6821\u5176\u5b9e\u53ea\u80fd\u9009\u62e9\u6d3e\u7cfb\uff0c\u56e0\u6b64\u540c\u6837\u76f8\u5f53\u4e8e\u628a\u5b66\u6821\u4e0d\u91cd\u4e0d\u6f0f\u5206\u5165\u4e24\u4e2a\u6709\u5bb9\u91cf\u9650\u5236\u7684\u80cc\u5305\u4e2d\u3002\n\n\u4e0e\u524d\u9762\u7c7b\u4f3c\uff0c\u6211\u4eec\u7528$k2_{i,j}$\u8868\u793a**\u524d$i$\u4e2a\u5b66\u6821\u9e2d\u6d3e\u7cfb\u6709$j$\u4eba\u7684\u65b9\u6848\u6570**\uff0c\u5219\u8f6c\u79fb\u4e3a\uff1a\n\n$$k2_{i,j}=k2_{i-1,j}+k2_{i-1,j-s_i}$$\n\n------\n\n\u8ba1\u7b97\u5b8c\u4e4b\u540e\uff0c\u6211\u4eec\u628a\u5b83\u4eec\u76f8\u4e58\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\u3002\n\n### \u8003\u8651\u63a8\u5e7f\n\n\u867d\u7136\u4e0a\u9762\u7684\u65b9\u6cd5\u6709\u5f88\u5927\u7684\u5c40\u9650\u6027\uff0c\u4f46\u5b83\u662f\u5341\u5206\u503c\u5f97\u501f\u9274\u7684\u3002\n\n\u6240\u4ee5\uff0c\u73b0\u5728\u6211\u4eec\u6765\u8003\u8651\u6b64\u65b9\u6cd5\u7684\u63a8\u5e7f\u3002\n\n\u770b\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u53d1\u73b0\uff0c$k$\u5176\u5b9e\u5f88\u5c0f\uff0c\u53ea\u6709$30$\u3002\n\n\u5219\u6211\u4eec\u53ef\u4ee5\u8003\u8651\uff0c\u5c06**\u4e0d\u542b\u9650\u5236\u5b66\u6821**\u7684\u57ce\u5e02\u548c**\u65e0\u9650\u5236**\u7684\u5b66\u6821\u4f9d\u7136\u50cf\u4e0a\u9762\u4e00\u6837\u80cc\u5305$DP$\uff0c\u4f46\u662f$k1$\u548c$k2$\u7684\u5b9a\u4e49\u8981\u7a0d\u4f5c\u4fee\u6539\uff1a\n\n- $k1_{i,j}$\u8868\u793a\u524d$i$\u4e2a**\u4e0d\u542b\u9650\u5236\u5b66\u6821**\u7684\u57ce\u5e02\u84dd\u9635\u8425\u6709$j$\u4eba\u7684\u65b9\u6848\u6570\u3002\n- $k2_{i,j}$\u8868\u793a\u524d$i$\u4e2a**\u65e0\u9650\u5236**\u7684\u5b66\u6821\u9e2d\u6d3e\u7cfb\u6709$j$\u4eba\u7684\u65b9\u6848\u6570\u3002\n\n\u7136\u540e\uff0c\u5bf9\u4e8e\u542b\u9650\u5236\u5b66\u6821\u7684\u57ce\u5e02\u548c\u6709\u9650\u5236\u7684\u5b66\u6821\uff0c\u6211\u4eec\u5355\u72ec\u8003\u8651\u3002\n\n\u5176\u5b9e\u4e5f\u53ea\u8981\u8bbe$f_{i,j,k}$\u8868\u793a**\u524d$i$\u4e2a\u542b\u9650\u5236\u5b66\u6821\u7684\u57ce\u5e02\uff0c\u84dd\u9635\u8425\u6709$j$\u4eba\uff0c\u9e2d\u6d3e\u7cfb\u6709$k$\u4eba**\u7684\u65b9\u6848\u6570\uff0c\u66b4\u529b$DP$\u5373\u53ef\u3002\n\n### \u5173\u4e8e\u5185\u5b58\u548c\u65f6\u95f4\u7684\u4e00\u4e9b\u4f18\u5316\n\n\u6570\u7ec4\u4f3c\u4e4e\u5f00\u4e0d\u4e0b\uff1f\n\n\u6eda\u5b58\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u4f3c\u4e4e\u8fc7\u4e0d\u4e86\uff1f\n\n\u8fd9\u65f6\u6211\u4eec\u5c31\u8981\u7528\u4e00\u4e2a\u5f88\u666e\u901a\u4f46\u5b9e\u7528\u7684\u4f18\u5316\uff1a\u8bb0\u5f55\u4e0b\u5f53\u524d**\u57ce\u5e02\u603b\u4eba\u6570\u4e0e$c0$\u7684$min$\u503c**\u548c**\u5b66\u6821\u603b\u4eba\u6570\u4e0e$d0$\u7684$min$\u503c**\uff0c\u7136\u540e\u4ee5\u8fd9\u4e2a\u4e3a$DP$\u8f6c\u79fb\u7684\u4e0a\u754c\uff0c\u590d\u6742\u5ea6\u5c31\u5f97\u5230\u4e86\u5927\u5927\u4f18\u5316\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u8be6\u89c1\u4ee3\u7801\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define Tp template<typename Ty>\n#define Ts template<typename Ty,typename... Ar>\n#define Reg register\n#define RI Reg int\n#define Con const\n#define CI Con int&\n#define I inline\n#define W while\n#define N 1000\n#define V 2500\n#define X 998244353\n#define Inc(x,y) ((x+=(y))>=X&&(x-=X))\n#define mem(x,v) memset(x,v,sizeof(x))\nusing namespace std;\nint n,m,k,sum,c0,c1,d0,d1,bl[N+5],s[N+5],t[N+5],p[N+5],q[N+5];\nint k1[V+5],k2[V+5],f[V+5][V+5],g[V+5][V+5];vector<int> o[N+5];\nclass FastIO\n{\n\tprivate:\n\t\t#define FS 100000\n\t\t#define tc() (A==B&&(B=(A=FI)+fread(FI,1,FS,stdin),A==B)?EOF:*A++)\n\t\t#define tn (x<<3)+(x<<1)\n\t\t#define D isdigit(c=tc())\n\t\tchar c,*A,*B,FI[FS];\n\tpublic:\n\t\tI FastIO() {A=B=FI;}\n\t\tTp I void read(Ty& x) {x=0;W(!D);W(x=tn+(c&15),D);}\n\t\tTs I void read(Ty& x,Ar&... y) {read(x),read(y...);}\n}F;\nI int XSum(CI x,CI y) {return x+y>=X?x+y-X:x+y;}\nI int XSub(CI x,CI y) {return x-y<0?x-y+X:x-y;}\nint main()\n{\n\tRI Ttot,i,j,k,x,y,sz,l1,l2,ans;F.read(Ttot);W(Ttot--)\n\t{\n\t\tfor(mem(k1,0),mem(k2,0),mem(f,0),mem(g,0),mem(t,0),i=1;i<=m;++i) o[i].clear();//\u6e05\u7a7a\n\t\tfor(F.read(n,m,c0,c1,d0,d1),sum=0,i=1;i<=n;++i)//\u8bfb\u5165\u5b66\u6821\u4fe1\u606f\n\t\t\tF.read(bl[i],s[i]),p[i]=-1,sum+=s[i],t[bl[i]]+=s[i];//\u7edf\u8ba1\u603b\u4eba\u6570\u548c\u57ce\u5e02\u4eba\u6570\n\t\tfor(i=1;i<=m;++i) q[i]=0;for(F.read(k),i=1;i<=k;++i)//\u8bfb\u5165\u9650\u5236\n\t\t\tF.read(x,y),p[x]=y,q[bl[x]]=1,o[bl[x]].push_back(x);//\u6807\u8bb0\u57ce\u5e02\u6709\u9650\u5236\u5b66\u6821\uff0c\u5c06\u8be5\u5b66\u6821\u6254\u5165vector\n\t\tif(c0+c1<sum||d0+d1<sum) {puts(\"0\");continue;}//\u5982\u679c\u80af\u5b9a\u65e0\u89e3\uff0c\u8f93\u51fa0\u5e76continue\n\t\t#define L1(x) (l1^c0&&(l1+=t[x])>c0&&(l1=c0))//\u7ef4\u62a4\u57ce\u5e02\u603b\u4eba\u6570\u4e0ec0\u7684min\u503c\n\t\t#define L2(x) (l2^d0&&(l2+=s[x])>d0&&(l2=d0))//\u7ef4\u62a4\u5b66\u6821\u603b\u4eba\u6570\u4e0ed0\u7684min\u503c\n\t\tfor(k1[l1=0]=i=1;i<=m;++i) if(L1(i),t[i]&&!q[i])//\u5982\u679c\u57ce\u5e02\u542b\u9650\u5236\u5b66\u6821\u6216\u4eba\u6570\u4e3a0\u8df3\u8fc7\uff08\u6ce8\u610f\u4eba\u6570\u4e3a0\u5fc5\u987b\u5224\uff01\u6211\u4e00\u5f00\u59cb\u5077\u61d2\u6ca1\u5224\u5c31WA\u4e86\u3002\u3002\u3002\uff09\n\t\t\tfor(j=l1;j>=t[i];--j) Inc(k1[j],k1[j-t[i]]);//\u80cc\u5305\u8f6c\u79fb\n\t\tfor(k2[l2=0]=i=1;i<=n;++i) if(L2(i),s[i]&&!~p[i])//\u4e0e\u4e0a\u9762\u7c7b\u4f3c\n\t\t\tfor(j=l2;j>=s[i];--j) Inc(k2[j],k2[j-s[i]]);\n\t\tfor(i=1;i<=c0;++i) Inc(k1[i],k1[i-1]);for(i=1;i<=d0;++i) Inc(k2[i],k2[i-1]);//\u7edf\u8ba1\u524d\u7f00\u548c\n\t\tfor(f[0][0]=i=1,l1=l2=0;i<=m;++i)\n\t\t{\n\t\t\tif(!t[i]||!q[i]) continue;for(j=0;j<=l1;++j) for(k=0;k<=l2;++k) g[j][k]=f[j][k];//\u5c06f\u590d\u5236\u4e00\u904d\u7ed9g\n\t\t\tfor(x=0,sz=o[i].size();x^sz;++x) for(y=o[i][x],L2(y),j=l1;~j;--j) for(k=l2;~k;--k)//\u679a\u4e3e\u6709\u9650\u5236\u7684\u57ce\u5e02\u8fdb\u884c\u8f6c\u79fb\n\t\t\t\tf[j][k]=XSum(p[y]^1?f[j][k]:0,k>=s[y]&&p[y]?f[j][k-s[y]]:0),//\u5224\u65ad\u65e0\u6cd5\u9009\u62e9\u7684\u60c5\u51b5\n\t\t\t\tg[j][k]=XSum(p[y]^3?g[j][k]:0,k>=s[y]&&p[y]^2?g[j][k-s[y]]:0);//\u4e0e\u4e0a\u9762\u7c7b\u4f3c\n\t\t\tfor(L1(i),j=l1;~j;--j) for(k=l2;~k;--k)//\u7edf\u8ba1\uff0c\u4e5f\u5dee\u4e0d\u591a\u662f\u4e00\u4e2a\u80cc\u5305\n\t\t\t\tf[j][k]=XSum(j>=t[i]?f[j-t[i]][k]:0,g[j][k]);\n\t\t}\n\t\t#define S1(x) XSub(k1[c0-(x)],sum-c1-(x)-1>=0?k1[sum-c1-(x)-1]:0)//\u6c42\u51fa\u5408\u6cd5\u8303\u56f4\u5185\u7684\u65b9\u6848\u6570\n\t\t#define S2(y) XSub(k2[d0-(y)],sum-d1-(y)-1>=0?k2[sum-d1-(y)-1]:0)//\u4e0e\u4e0a\u9762\u7c7b\u4f3c\n\t\tfor(ans=i=0;i<=c0;++i) for(j=0;j<=d0;++j) Inc(ans,1LL*f[i][j]*S1(i)%X*S2(j)%X)%X;//\u6700\u540e\u8ba1\u7b97\u7b54\u6848\n\t\tprintf(\"%d\\n\",ans);//\u8f93\u51fa\u7b54\u6848\n\t}return 0;\n}\n```",
        "postTime": 1555470449,
        "uid": 28382,
        "name": "TheLostWeak",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5289 \u3010[\u5341\u4e8c\u7701\u8054\u80032019]\u76ae\u914d\u3011"
    },
    {
        "content": "**\u9898\u610f**\uff1a\n\n$n$ \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709\u6743\u503c $a_i$\uff0c\u5e76\u5c5e\u4e8e $m$ \u4e2a\u5927\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a $p_i$ \u3002\n\n\u73b0\u5c06\u6bcf\u4e2a\u70b9\u5206\u914d\u5230 $4$ \u4e2a\u4f4d\u7f6e\u4e2d\uff0c\u8bb0\u4e3a $A_0,A_1,B_0,B_1$ \uff0c\u8981\u6c42\u6ee1\u8db3\u540c\u4e00\u5927\u96c6\u5408\u7684\u5c5e\u4e8e\u540c\u4e00\u4e0b\u6807\u3002\n\n\u8bbe $A_0,A_1,B_0,B_1$ \u4e0a\u603b\u6743\u503c\u5206\u522b\u4e3a $X_0,X_1,Y_0,Y_1$ \uff0c\u5219\u8981\u6c42\u6ee1\u8db3\uff1a\n$$\n\\begin{cases}\nX_0+Y_0\\le C_0\\\\\nX_1+Y_1\\le C_1\\\\\nX_0+X_1\\le D_0\\\\\nY_0+Y_1\\le D_1\\\\\n\\end{cases}\n$$\n\u540c\u65f6\u8fd8\u6709 $k$ \u4e2a\u7279\u6b8a\u9650\u5236\u6761\u4ef6\uff1a\u70b9 $i$ \u4e0d\u80fd\u5728\u4f4d\u7f6e $T$\n\n\u6c42\u65b9\u6848\u6570\n\n**\u601d\u8def**\uff1a\n\n\u7531\u4e8e\u9650\u5236\u6761\u4ef6\u662f\u9488\u5bf9\u540c\u4e00\u4e0b\u6807\u6216\u540c\u4e00\u4e0a\u6807\u7684\uff0c\u5f88\u660e\u663e\u53ef\u4ee5\u5206\u4e3a\u4e0a\u6807\u3001\u4e0b\u6807\u5206\u522b\u7b97\n\n\u8bbe $S=\\sum_{i=1}^{n}a_i,s_i=\\sum_{j=1,p_j=i}^{n}a_j$\n\n\u5148\u8003\u8651 $k=0$ \u7684\u60c5\u51b5\uff1a\n\n\u8003\u8651\u4e8c\u5143 $\\mathrm{GF}$\uff0c\u8bbe $[x^n][y^m]F(x,y)$ \u8868\u793a\u4e0b\u6807\u4e3a $0$ \u7684\u603b\u6743\u503c\u4e3a $n$ \uff0c\u4e0a\u6807\u4e3a $A$ \u7684\u603b\u6743\u503c\u4e3a $m$ \u7684\u65b9\u6848\u6570\n\n$\\therefore F(x,y)=\\prod\\limits_{i=1}^{m}(1+x^{s_i})\\prod\\limits_{i=1}^{n}(1+y^{a_i})$\n\n\u8868\u793a\u6bcf\u4e00\u4e2a\u96c6\u5408\u53ef\u4ee5\u5206\u5230\u4e0b\u6807 $0$ \u6216 $1$ \uff0c\u5bf9\u5e94 $x^{s_i} $ \u6216 $1$ \uff1b\u6bcf\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5206\u5230\u4e0a\u6807 $A$ \u6216 $B$\uff0c\u5bf9\u5e94 $y^{a_i}$ \u6216 $1$\n\n\u7b54\u6848\u5373\u4e3a\uff1a$ans=\\sum_{i=S-C_1}^{C_0}\\sum_{j=S-D_1}^{D_0}[x^i][y^j]F(x,y)$\n\n\u518d\u8003\u8651 $k\\ge 1$ \u7684\u60c5\u51b5\uff1a\n\n\u53ef\u4ee5\u53d1\u73b0\u6ca1\u6709\u7279\u6b8a\u9650\u5236\u7684\u57ce\u5e02\u4e0e\u6ca1\u6709\u7279\u6b8a\u9650\u5236\u7684\u5b66\u6821\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u7b97\u51fa\uff0c\u4fee\u6539\u7279\u6b8a\u7684 $k$ \u4e2a\u4f4d\u7f6e\u7684\u751f\u6210\u51fd\u6570\uff1a\n\n\u5047\u8bbe\u4e00\u4e2a\u70b9 $t$ \uff0c\u5c5e\u4e8e\u96c6\u5408 $p$ \uff0c\u4e0d\u80fd\u653e\u5728\u7684\u4f4d\u7f6e\u4e3a $A_1$\n\n\u5219\u751f\u6210\u51fd\u6570\u53d8\u4e3a\uff1a\n$$\n\\begin{aligned}\n&F(x,y)=G(x)H(y)\\times P(t)\\\\\n&G(x)=\\prod\\limits_{i=1,p_i\\neq p}^{m}(1+x^{s_i})\\\\\n&H(y)=\\prod_{i=1,i\\neq t}^{n}(1+y^{a_i})\\\\\n&P(t)=x^{s_p}(1+y^{a_t})+1\\times (1)\n\\end{aligned}\n$$\n$A_0,B_0,B_1$ \u7684\u60c5\u51b5\u540c\u7406\n\n\u7279\u6b8a\u90e8\u5206\u7684\u590d\u6742\u5ea6\u4e3a $O(k^2\\max\\{a_i\\}\\max\\{A_0,B_0\\})$ \uff0c\u65e0\u7279\u6b8a\u90e8\u5206\u4e3a $O(nm)$ \uff0c\u6ce8\u610f\u505a\u591a\u9879\u5f0f\u4e58\u6cd5\u65f6\u7684\u4e0a\u4e0b\u754c\n\n**\u4ee3\u7801**\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cassert>\nconst int Q=2505;\nconst int INF=(1<<30);\nconst int mod=998244353;\ntypedef long long ll;\n#define rg register int\n#define cint const register int\n//char Buf[1<<21],*P1=Buf,*P2=Buf;\n//#define gc() (P1==P2&&(P2=(P1=Buf)+fread(Buf,1,1<<21,stdin),P1==P2)?EOF:*P1++)\n#define gc() getchar()\ninline bool ig(char c){return c>=48&&c<=57;}\ninline void read(int &oi){char c;int f=1,res=0;while(c=gc(),(!ig(c))&&c^'-');c^'-'?res=(c^48):f=-1;while(c=gc(),ig(c))res=res*10+(c^48);oi=f*res;}\ninline void print(int oi){if(oi<0)putchar('-'),oi=~oi+1;if(oi>9)print(oi/10);putchar(oi%10+48);}\ninline void write(int oi,char c){print(oi);putchar(c);}\ninline int max(cint x,cint y){return x>y?x:y;}\ninline int min(cint x,cint y){return x<y?x:y;}\ninline int inc(cint x,cint y){return x+y<mod?x+y:x+y-mod;}\ninline int dec(cint x,cint y){return x>=y?x-y:x-y+mod;}\ninline int mul(cint x,cint y){return 1ll*x*y%mod;}\ninline int pow(rg x,rg y){rg res=1;for(;y;y>>=1,x=mul(x,x))if(y&1)res=mul(res,x);return res;}\ninline int Inv(cint x){return pow(x,mod-2);}\nint T;\nint n,m,C0,C1,D0,D1,S,q,sx,sy;\nint p[Q],a[Q];\nint s[Q];\nint f[Q],g[Q],tmp[Q];\nint ucs[Q][4],is[Q];\nint st[Q],top;\nint h[Q];\nint sp[Q][Q],tp[Q][Q],lst[Q][Q];\ninline bool chk(cint x){return ucs[x][0]||ucs[x][1]||ucs[x][2]||ucs[x][3];}\ninline void clear(){\n\tstd::memset(s,0,sizeof(s));\n\tstd::memset(f,0,sizeof(f));\n\tstd::memset(g,0,sizeof(g));\n\tstd::memset(tmp,0,sizeof(tmp));\n\tstd::memset(ucs,0,sizeof(ucs));\n\tstd::memset(is,0,sizeof(is));\n\tstd::memset(st,0,sizeof(st));\n\tstd::memset(h,0,sizeof(h));\n\tstd::memset(sp,0,sizeof(sp));\n\tstd::memset(tp,0,sizeof(tp));\n\tstd::memset(lst,0,sizeof(lst));\n\tS=sx=sy=0;\n}\nint main(){\n\tread(T);for(;T--;){\n\t\tclear();read(n);read(m);\n\t\tread(C0);read(C1);read(D0);read(D1);\n\t\tfor(rg i=1;i<=n;++i)read(p[i]),read(a[i]),s[p[i]]+=a[i],S+=a[i];\n\t\tcint S0=min(S,C0),S1=min(S,D0);\n\t\tread(q);for(rg i=1,x,y;i<=q;++i)read(x),read(y),ucs[x][y]=1,is[p[x]]=1;\n\t\tg[0]=f[0]=1;\n\t\tfor(rg i=1;i<=m;++i){\n\t\t\tif(!s[i]||is[i])continue;\n\t\t\tfor(rg j=0;j<=S0;++j)tmp[j]=f[j];\n\t\t\tfor(rg j=s[i];j<=S0;++j)tmp[j]=inc(tmp[j],f[j-s[i]]);\n\t\t\tfor(rg j=0;j<=S0;++j)f[j]=tmp[j];\n\t\t}\n\t\tfor(rg i=1;i<=n;++i){\n\t\t\tif(chk(i))continue;for(rg j=0;j<=S1;++j)tmp[j]=g[j];\n\t\t\tfor(rg j=a[i];j<=S1;++j)tmp[j]=inc(tmp[j],g[j-a[i]]);\n\t\t\tfor(rg j=0;j<=S1;++j)g[j]=tmp[j];\n\t\t}\n\t\tsp[0][0]=1;\n\t\tfor(rg i=1;i<=m;++i){\n\t\t\tif(!is[i])continue;top=0;sx+=s[i];sx=min(sx,S0);\n\t\t\tfor(rg j=1;j<=n;++j)if(p[j]==i&&chk(j))st[++top]=j,sy+=a[j];sy=min(sy,S1);\n\t\t\tfor(rg j=0;j<=sx;++j)for(rg k=0;k<=sy;++k)lst[j][k]=sp[j][k],tp[j][k]=0;\n\t\t\tfor(rg j=1;j<=top;++j){\n\t\t\t\tcint x=st[j];\n\t\t\t\tif(!ucs[x][0]){for(rg k=0;k<=sx;++k)for(rg l=a[x];l<=sy;++l)tp[k][l]=inc(tp[k][l],lst[k][l-a[x]]);}//A_0\n\t\t\t\tif(!ucs[x][1]){for(rg k=0;k<=sx;++k)for(rg l=0;l<=sy;++l)tp[k][l]=inc(tp[k][l],lst[k][l]);}//B_0\n\t\t\t\tfor(rg k=0;k<=sx;++k)for(rg l=0;l<=sy;++l)lst[k][l]=tp[k][l],tp[k][l]=0;\n\t\t\t}\n\t\t\tfor(rg j=0;j<=sx;++j)for(rg k=0;k<=sy;++k)tp[j][k]=sp[j][k],sp[j][k]=0;\n\t\t\tfor(rg j=s[i];j<=sx;++j)for(rg k=0;k<=sy;++k)sp[j][k]=inc(sp[j][k],lst[j-s[i]][k]);\n\t\t\tfor(rg j=0;j<=sx;++j)for(rg k=0;k<=sy;++k)lst[j][k]=tp[j][k],tp[j][k]=0;\n\t\t\tfor(rg j=1;j<=top;++j){\n\t\t\t\tcint x=st[j];\n\t\t\t\tif(!ucs[x][2]){for(rg k=0;k<=sx;++k)for(rg l=a[x];l<=sy;++l)tp[k][l]=inc(tp[k][l],lst[k][l-a[x]]);}//A_1\n\t\t\t\tif(!ucs[x][3]){for(rg k=0;k<=sx;++k)for(rg l=0;l<=sy;++l)tp[k][l]=inc(tp[k][l],lst[k][l]);}//B_1\n\t\t\t\tfor(rg k=0;k<=sx;++k)for(rg l=0;l<=sy;++l)lst[k][l]=tp[k][l],tp[k][l]=0;\n\t\t\t}\n\t\t\tfor(rg j=0;j<=sx;++j)for(rg k=0;k<=sy;++k)sp[j][k]=inc(sp[j][k],lst[j][k]),lst[j][k]=0;\n\t\t}\n\t\tfor(rg i=1;i<=S0;++i)f[i]=inc(f[i],f[i-1]);\n\t\tfor(rg i=1;i<=S1;++i)g[i]=inc(g[i],g[i-1]);\n\t\trg res=0;\n\t\tfor(rg i=0;i<=min(sx,C0);++i){\n\t\t\tfor(rg j=0;j<=min(sy,D0);++j){\n\t\t\t\tcint v1=dec(f[min(C0-i,S0)],S>C1+i?f[S-C1-i-1]:0);\n\t\t\t\tcint v2=dec(g[min(D0-j,S1)],S>D1+j?g[S-D1-j-1]:0);\n\t\t\t\tres=inc(res,mul(sp[i][j],mul(v1,v2)));\n\t\t\t}\n\t\t}\n\t\twrite(res,'\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1657533127,
        "uid": 202556,
        "name": "Terry2022",
        "ccfLevel": 7,
        "title": "P5289 [\u5341\u4e8c\u7701\u8054\u8003 2019] \u76ae\u914d"
    },
    {
        "content": "> \u9898\u610f\uff1a$n$ \u4e2a\u6570 $s_{1\\dots n}$ \u88ab\u5212\u5206\u6210 $c$ \u7ec4 ($n,c \\leq 1000,s_i \\leq 10$)\uff0c\u8981\u5c06\u5176\u653e\u5165 $2\\times 2$ \u7684\u65b9\u683c\u5185\uff0c\u6709\u5982\u4e0b\u9650\u5236\uff1a\n>\n> - \u540c\u4e00\u7ec4\u7684\u6570\u53ea\u80fd\u88ab\u653e\u5728\u540c\u4e00\u884c\u3002\n> - \u7b2c $i$ \u884c/\u5217\u7684\u6570\u5b57\u4e4b\u548c\u6709\u4e0a\u9650 $C_i$/$D_i$\u3002($C_i,D_i \\leq 2500$)\n> - \u6709 $k$ \u4e2a\u5f62\u5982\u300c\u7b2c $i$ \u4e2a\u6570\u4e0d\u80fd\u653e\u5728 $(x,y)$\u300d\u7684\u9650\u5236\u3002($k \\leq 30$)\n>\n> \u95ee\u603b\u65b9\u6848\u6570\u5bf9 $998244353$ \u53d6\u6a21\u7684\u7ed3\u679c\u3002\n\n$\\textrm{Sol}$\uff1a\u9996\u5148\u5bb9\u6613\u60f3\u5230\uff0c\u7b2c\u4e8c\u6761\u9650\u5236\u53ef\u4ee5\u8f6c\u5316\u4e3a\u7b2c\u4e00\u884c/\u5217\u6570\u5b57\u4e4b\u548c\u6709\u72ec\u7acb\u7684\u4e0a\u9650\u4e0e\u4e0b\u9650\uff0c\u6545\u6211\u53ea\u9700\u8981\u77e5\u9053\u5176\u4e2d\u7b2c\u4e00\u884c\u7684\u548c\u4e0e\u7b2c\u4e00\u5217\u7684\u548c\u5c31\u53ef\u4ee5\u5224\u5b9a\u662f\u5426\u7b26\u5408\u6b64\u9650\u5236\u3002\u4e0b\u9762\u7528 $l_1$ \u8868\u793a\u7b2c\u4e00\u5217\u7684\u548c\uff0c$c_1$ \u8868\u793a\u7b2c\u4e00\u884c\u7684\u548c\u3002\n\n\u8003\u8651 $k=0$ \u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570\uff0c\u6240\u5728\u7684\u7ec4\u51b3\u5b9a\u5728\u54ea\u884c\uff0c\u5217\u53ef\u4ee5\u968f\u4fbf\u5206\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u4e0d\u770b\u7ec4\u7684\u9650\u5236\uff0c\u6765\u8003\u8651\u6bcf\u4e2a\u6570\u5206\u5728\u54ea\u4e00\u5217\uff0c\u8bb0\u5f55 $f_i$ \u8868\u793a $l_1 = i$ \u7684\u65b9\u6848\u6570\u3002\u800c\u884c\u7684\u5212\u5206\u53ef\u4ee5\u76f4\u63a5\u628a\u6bcf\u4e2a\u7ec4\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u8003\u8651\uff0c\u8bb0\u5f55 $g_i$ \u8868\u793a $c_1 = i$ \u7684\u65b9\u6848\u6570\u3002\u8fd9\u6837\u5c31\u5f97\u5230\u5c06\u6240\u6709\u6570\u5212\u5206\u6210 $l_1 = x$ \u4e14 $c_1 = y$ \u7684\u65b9\u6848\u6570 $f_x\\cdot g_y$\uff0c\u590d\u6742\u5ea6 $O(nm)$\u3002\n\n$k \\neq 0$ \u5982\u4f55\u5904\u7406\uff1f\u53d1\u73b0 $k$ \u975e\u5e38\u5c0f\uff0c\u8003\u8651\u628a\u6709\u9650\u5236\u7684\u548c\u65e0\u9650\u5236\u7684\u5206\u5f00\u8003\u8651\u3002\u89c2\u5bdf\u53ef\u77e5\uff0c\u65e0\u9650\u5236\u7684\u6570\u5206\u5230\u7684\u5217\u4f9d\u7136\u72ec\u7acb\uff0c\u53ef\u4ee5\u5355\u72ec\u8003\u8651\uff0c\u800c\u6709\u9650\u5236\u7684\u6570\u5206\u5230\u7684\u5217\u548c\u5b83\u6240\u5c5e\u7684\u7ec4\u76f8\u5173\u3002\u628a\u5185\u90e8\u5b58\u5728\u5e26\u9650\u5236\u7684\u6570\u7684\u7ec4\u53eb\u505a\u300c\u9650\u5236\u7ec4\u300d\uff0c\u90a3\u4e48\u5bf9\u4e8e\u975e\u9650\u5236\u6570\u53ef\u4ee5\u7528\u4e0a\u9762\u7684 $f_i$\uff0c\u975e\u9650\u5236\u7ec4\u53ef\u4ee5\u7528\u4e0a\u9762\u7684 $g_i$\uff0c\u800c\u5269\u4e0b\u9650\u5236\u6570/\u7ec4\u7684\u6570\u91cf\u90fd\u662f $O(k)$ \u7ea7\u522b\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a $h_{i,j}$ \u8868\u793a\uff1a\u51b3\u7b56\u4e86\u9650\u5236\u7ec4\u7684\u884c\uff0c\u5176 $c_1 = i$\uff0c\u4e14\u51b3\u7b56\u4e86\u9650\u5236\u6570\u7684\u5217\uff0c\u5176 $l_1 = j$ \u7684\u65b9\u6848\u6570\uff0c\u4e24\u7ef4\u5927\u5c0f\u5206\u522b\u662f $O(m)$ \u4e0e $O\\left(\\sum\\limits_{i \\in S} s_i\\right)$\uff0c\u7269\u54c1\u6570 $O(k)$\uff0c\u5219\u8fd9\u4e2a\u80cc\u5305\u590d\u6742\u5ea6\u662f $O(mk^2s)$\u3002\n\n\u6700\u7ec8\u5408\u5e76\u8d77\u6765\uff0c\u5c06\u6240\u6709\u6570\u5212\u5206\u6210 $l_1 = x$ \u4e14 $c_1 = y$ \u7684\u65b9\u6848\u6570\u5373\u4e3a $\\sum\\limits_{i=0}^x\\sum\\limits_{j=0}^y h_{i,j}\\cdot f_{x-i} \\cdot g_{y-j}$\u3002\u6574\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(T\\cdot mk^2 s)$\u3002\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define cl(x,r) memset(x,r,sizeof x)\n#define FOR(i,a,b) for(int i=a,i##i=b;i<=i##i;++i)\n#define ROF(i,a,b) for(int i=a,i##i=b;i>=i##i;--i)\nusing namespace std;\nconst int N=2507,S=307,mod=998244353;\nint T,n,c,K,x,y,C0,C1,D0,D1,b[N],s[N],p[N],al,sk;\nint f[N],g[N],h[N][S],t[N][S],su[N];\nlong long ans;\nvector<int>v[N];\nint get(int*a,int x){return x<0?0:a[x];}\nvoid work(){\n\tcl(p,-1),cl(f,0),cl(g,0),cl(h,0),cl(su,0),ans=0;\n\tscanf(\"%d%d%d%d%d%d\",&n,&c,&C0,&C1,&D0,&D1),al=sk=0;\n\tFOR(i,1,n)scanf(\"%d%d\",b+i,s+i),su[b[i]]+=s[i],al+=s[i];\n\tFOR(i,1,c)v[i].clear();\n\tC1=max(al-C1,0),D1=max(al-D1,0),f[0]=g[0]=h[0][0]=1;\n\tfor(scanf(\"%d\",&K);K--;)scanf(\"%d%d\",&x,&y),p[x]=y,v[b[x]].push_back(x),sk+=s[x];\n\tFOR(i,1,n)if(p[i]==-1)ROF(j,D0,s[i])(f[j]+=f[j-s[i]])%=mod;\n\tFOR(d,1,c)if(v[d].size()){\n\t\tmemcpy(t,h,sizeof h);\n\t\tfor(int g:v[d])ROF(i,C0,0)ROF(j,min(sk,D0),0){\n\t\t\tint X=0,Y=0;\n\t\t\tif(p[g]!=0)(X+=get(h[i],j-s[g]))%=mod;\n\t\t\tif(p[g]!=1)(X+=h[i][j])%=mod;\n\t\t\tif(p[g]!=2)(Y+=get(t[i],j-s[g]))%=mod;\n\t\t\tif(p[g]!=3)(Y+=t[i][j])%=mod;\n\t\t\th[i][j]=X,t[i][j]=Y;\n\t\t}\n\t\tROF(i,C0,0)ROF(j,min(sk,D0),0)h[i][j]=((i<su[d]?0:h[i-su[d]][j])+t[i][j])%mod;\n\t}\n\telse if(su[d])ROF(i,C0,su[d])(g[i]+=g[i-su[d]])%=mod;\n\tFOR(i,1,D0)(f[i]+=f[i-1])%=mod;\n\tFOR(i,1,C0)(g[i]+=g[i-1])%=mod;\n\tFOR(i,0,C0)FOR(j,0,min(D0,sk))(ans+=1ll*h[i][j]*(f[D0-j]-get(f,D1-j-1))%mod*(g[C0-i]-get(g,C1-i-1)))%=mod;\n}\nsigned main(){\n\tfor(scanf(\"%d\",&T);T--;)work(),printf(\"%lld\\n\",(ans+mod)%mod);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1635336895,
        "uid": 78372,
        "name": "M4_SOPMODII_JR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5289 [\u5341\u4e8c\u7701\u8054\u8003 2019] \u76ae\u914d"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5289)\n\n\u9605\u8bfb\u7406\u89e3\u9898\uff0c\u5148\u68b3\u7406\u4e00\u4e0b\u6761\u4ef6\uff1a\n\n\u6709\u4e00\u4e2a $2\\times 2$ \u7684\u65b9\u9635\uff0c\u6709 $n$ \u6240\u5b66\u6821\uff0c\u5c5e\u4e8e $c$ \u4e2a\u57ce\u5e02\uff0c\u6bcf\u4e2a\u5b66\u6821 $s_i$ \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u5b66\u6821\u53ef\u4ee5\u9009\u4e00\u4e2a\u65b9\u683c\u628a\u81ea\u5df1\u7684\u4eba\u90fd\u653e\u8fdb\u53bb\uff0c\u8981\u6c42\u540c\u4e2a\u57ce\u5e02\u7684\u653e\u5728\u540c\u4e00\u884c\u3002\u4e14\u65b9\u9635\u6bcf\u884c\u6bcf\u5217\u90fd\u6709\u4eba\u6570\u9650\u5236\u3002\u6709 $k$ \u4e2a\u9650\u5236\u6761\u4ef6\uff0c\u8868\u793a $i$ \u5b66\u6821\u4e0d\u80fd\u653e\u8fdb\u683c\u5b50 $p$ \u4e2d\u3002\n\n#### \u6700\u6734\u7d20\u7684\u66b4\u529b\n\n\u53ef\u4ee5\u76f4\u63a5\u60f3\u5230\u7684\u662f\u4e00\u4e2a\u4e2a\u5b66\u6821\u7684 DP\uff0c\u8bbe $dp_{i,a,b,c,d}$ \u8868\u793a\u5904\u7406\u5b8c\u524d $i$ \u4e2a\u5b66\u6821\uff0c\u7b2c\u4e00\u884c\u6709 $a$ \u4e2a\u4eba\uff0c\u7b2c\u4e8c\u884c\u6709 $b$ \u4e2a\u4eba\uff0c\u7b2c\u4e00\u5217 $c$ \u4e2a\u4eba\uff0c\u7b2c\u4e8c\u5217 $d$ \u4e2a\u3002\u8fd9\u6837\u662f $\\mathcal{O}(nM^4)$\u3002\n\n#### \u6709\u70b9\u8111\u5b50\u7684\u66b4\u529b\n\n\u5176\u5b9e\u6211\u4eec\u4e0d\u7528\u7b2c\u4e00\u884c\u7b2c\u4e8c\u884c\u90fd\u8bb0\uff0c\u56e0\u4e3a\u4e24\u884c\u7684\u548c\u80af\u5b9a\u662f\u603b\u4eba\u6570\uff0c\u5217\u4e5f\u540c\u7406\u3002\u6240\u4ee5\u53ea\u7528\u8bb0 $dp_{i,j,k}$\uff0c\u65f6\u95f4 $\\mathcal{O}(nM^2)$\u3002\n\n#### $k=0$ \u7684\u60c5\u51b5\n\n\u5728\u6ca1\u6709 $k$ \u7684\u9650\u5236\u4e0b\uff0c\u6211\u4eec\u53d1\u73b0\u884c\u548c\u5217\u7684\u51b3\u7b56\u672c\u8d28\u4e0a\u662f\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u4e24\u7ef4\u5206\u5f00DP\u3002\u8bb0 $g_i$ \u8868\u793a\u7b2c\u4e00\u884c\u548c\u4e3a $i$ \u7684\u65b9\u6848\uff0c$f_j$ \u8868\u793a\u7b2c\u4e00\u5217\u548c\u4e3a $j$ \u7684\u65b9\u6848\uff0c\u7b54\u6848\u5c31\u662f $\\sum_i\\sum_jg_if_j$ \u3002\u65f6\u95f4 $\\mathcal{O}(nM)$\u3002\n\n#### \u4e00\u822c\u60c5\u51b5\n\n\u53d1\u73b0 $k\\le30$\uff0c\u4e8e\u662f\u8003\u8651\u5bf9\u4e8e\u6ca1\u6709\u9650\u5236\u7684\u57ce\u5e02\u7528 $k=0$ \u7684\u60c5\u51b5\uff0c\u6709\u9650\u5236\u7684\u76f4\u63a5\u7528\u6709\u8111\u5b50\u7684\u66b4\u529b\u3002\u53e6\u4e00\u4e2a\u6211\u4eec\u8981\u5229\u7528\u7684\u6027\u8d28\u5c31\u662f $s_i\\le10$\uff0c\u5373\u6709\u9650\u5236\u7684\u57ce\u5e02\u7684\u4eba\u6570\u548c\u53ea\u6709 $300$\u3002\n\n\u6211\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u662f\u628a\u6709\u9650\u5236\u7684\u57ce\u5e02\u62ff\u51fa\u6765\uff0c\u8fd9\u79cd\u57ce\u5e02\u53ea\u6709 $30$ \u4e2a\uff0c\u4f46\u662f\u8fd9\u91cc\u9762\u5305\u542b\u7684\u5b66\u6821\u6709\u53ef\u80fd\u662f $\\mathcal{O}(n)$ \u7684\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u80cc\u5305\u5408\u5e76\u7684\u590d\u6742\u5ea6\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\uff08~~\u9664\u4e86\u7528 FFT~~\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5c3d\u91cf\u5355\u4e2a\u52a0\u5165\uff0c\u4f46\u7ed3\u679c\u662f\u65e0\u8bba\u600e\u4e48\u505a\u590d\u6742\u5ea6\u90fd\u4e0d\u80fd\u4e0b $\\mathcal{O}(kM^2)$\u3002\u8fd8\u6709\u591a\u7ec4\u6570\u636e\uff0c\u60f3\u8fc7\u53bb\u53ea\u80fd\u4e0a NTT \u4e86\u3002\n\n\u5176\u5b9e\u6211\u4eec\u8fd8\u672a\u628a\u72ec\u7acb\u6027\u7528\u597d\uff0c\u548c\u6709\u9650\u5236\u7684\u5b66\u6821\u5728\u603b\u4e00\u4e2a\u57ce\u5e02\u7684\u5176\u4ed6\u5b66\u6821\uff0c\u5b83\u5728\u5217\u4e0a\u7684\u51b3\u7b56\u5176\u5b9e\u5e76\u6ca1\u6709\u53d7\u5f71\u54cd\uff0c\u6240\u4ee5\u5728\u6c42\u51fa $k=0$ \u65f6\u90a3\u91cc\u63d0\u5230\u7684 $f$ \u548c $g$ \u7684\u65f6\u5019\uff0c$f$ \u662f\u53ef\u4ee5\u628a\u6709\u9650\u5236\u7684\u57ce\u5e02\u7684\u65e0\u9650\u5236\u5b66\u6821\u4e5f\u7b97\u8fdb\u53bb\u7684\uff0c\u53ea\u4e0d\u8fc7 $g$ \u5c31\u4e0d\u5e94\u8be5\u628a\u6709\u9650\u5236\u7684\u57ce\u5e02\u7b97\u8fdb\u53bb\u3002\n\n\u73b0\u5728\u6211\u4eec\u5c31\u505a\u5230\u4e86\u8fd8\u6ca1\u5904\u7406\u7684\u5217\u548c\u6ca1\u6709\u5904\u7406\u7684\u884c\u53ea\u6709 $\\mathcal{O}(k)$ \u4e2a\uff0c\u8fd9\u65f6\u6709\u9650\u5236\u7684\u57ce\u5e02\u7684\u4eba\u6570\u548c\u53ea\u6709 $300$ \u8fd9\u4e2a\u6761\u4ef6\u5c31\u53ef\u4ee5\u7528\u4e0a\u4e86\uff0c\u5904\u7406\u8fd9\u4e9b\u884c\u548c\u5217\u6211\u4eec\u91c7\u7528\u524d\u9762\u7684\u66b4\u529b\uff0c$dp_{i,j,k}$ \u8fd8\u662f\u4e4b\u524d\u7684\u5b9a\u4e49\uff0c\u4f46\u4e0d\u8fc7\u73b0\u5728\u7b2c\u4e00\u7ef4\u662f $30$ \u7684\uff0c\u7b2c\u4e8c\u7ef4\u662f $2500$\uff0c\u7b2c\u4e09\u7ef4\u662f $300$ \u7684\u3002\n\n\u5b9e\u73b0\u65f6\u4e00\u822c\u628a\u7b2c\u4e00\u7ef4\u6eda\u52a8\u538b\u6389\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(nM+s_ik^2M)$\u3002\n\n```cpp\n#include<iostream>\n#include<stdio.h>\n#include<ctype.h>\n#include<vector>\n#include<string.h>\n#define N 1005\n#define M 2505\n#define int long long\n#define mo 998244353\nusing namespace std;\ninline int read(){\n\tint x=0,f=0; char ch=getchar();\n\twhile(!isdigit(ch)) f|=(ch==45),ch=getchar();\n\twhile(isdigit(ch)) x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn f?-x:x;\n}\nint n,c,C0,C1,D0,D1,bel[N],s[N],ban[N][4],flag[N],f[M],g[M],S,sum[N],tmp[M][310],dp[M][310],lim;\nvector <int> mp[N];\ninline void red(int &x){x>=mo?x-=mo:0;}\ninline int query(int x,int xx,int y,int yy){\n\tx=max(x,0LL),y=max(y,0LL);\n\txx=min(xx,C0),yy=min(yy,lim);\n\tif(x>xx) return 0;\n\tif(y>yy) return 0;\n\tint res=dp[xx][yy];\n\tif(y-1>=0) red(res+=mo-dp[xx][y-1]);\n\tif(x-1>=0) red(res+=mo-dp[x-1][yy]);\n\tif(x-1>=0 && y-1>=0) red(res+=dp[x-1][y-1]);\n\treturn res;\n}\nsigned main(){\n\tfor(int cas=read();cas--;){\n\t\tn=read(),c=read(),C0=read(),C1=read(),D0=read(),D1=read();\n\t\tfor(int i=1;i<=c;++i) mp[i].clear();\n\t\tmemset(ban,0,sizeof(ban));\n\t\tmemset(flag,0,sizeof(flag));\n\t\tmemset(sum,0,sizeof(sum));\n\t\tmemset(f,0,sizeof(f));\n\t\tmemset(g,0,sizeof(g));\n\t\tmemset(dp,0,sizeof(dp));\n\t\tS=0;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tbel[i]=read(),s[i]=read();\n\t\t\tmp[bel[i]].push_back(i);\n\t\t\tS+=s[i];\n\t\t\tsum[bel[i]]+=s[i];\n\t\t}\n\t\tint K=read();lim=K*10;\n\t\twhile(K--){\n\t\t\tint id=read(),p=read();\n\t\t\tban[id][p]=1;\n\t\t\tflag[bel[id]]=1;\n\t\t}\n\t\tf[0]=1;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tif(ban[i][0]+ban[i][1]+ban[i][2]+ban[i][3]) continue;\n\t\t\tfor(int j=D0;j>=s[i];--j){\n\t\t\t\tred(f[j]+=f[j-s[i]]);\n\t\t\t}\n\t\t}\n\t\tg[0]=1;\n\t\tfor(int i=1;i<=c;++i){\n\t\t\tif(!sum[i] || flag[i]) continue;\n\t\t\tfor(int j=C0;j>=sum[i];--j){\n\t\t\t\tred(g[j]+=g[j-sum[i]]);\n\t\t\t}\n\t\t}\n\t\tdp[0][0]=1;\n\t\tfor(int i=1;i<=c;++i){\n\t\t\tif(!flag[i]) continue;\n\t\t\tfor(int j=C0;j>=sum[i];--j){\n\t\t\t\tfor(int k=0;k<=lim;++k){\n\t\t\t\t\ttmp[j][k]=dp[j-sum[i]][k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=sum[i]-1;j>=0;--j){\n\t\t\t\tfor(int k=0;k<=lim;++k){\n\t\t\t\t\ttmp[j][k]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int v:mp[i]){\n\t\t\t\tif(ban[v][0]+ban[v][1]+ban[v][2]+ban[v][3]==0) continue;\n\t\t\t\tif(ban[v][0]){\n\t\t\t\t\tfor(int j=0;j<=C0;++j){\n\t\t\t\t\t\tfor(int k=lim;k>=s[v];--k){\n\t\t\t\t\t\t\tred(dp[j][k]+=dp[j][k-s[v]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(ban[v][1]){\n\t\t\t\t\tfor(int j=0;j<=C0;++j){\n\t\t\t\t\t\tfor(int k=lim;k>=s[v];--k){\n\t\t\t\t\t\t\tred(dp[j][k]+=dp[j][k-s[v]]);\n\t\t\t\t\t\t\ttmp[j][k]=tmp[j][k-s[v]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(int k=s[v]-1;k>=0;--k) tmp[j][k]=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(ban[v][2]){\n\t\t\t\t\tfor(int j=0;j<=C0;++j){\n\t\t\t\t\t\tfor(int k=lim;k>=s[v];--k){\n\t\t\t\t\t\t\tred(tmp[j][k]+=tmp[j][k-s[v]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(ban[v][3]){\n\t\t\t\t\tfor(int j=0;j<=C0;++j){\n\t\t\t\t\t\tfor(int k=lim;k>=s[v];--k){\n\t\t\t\t\t\t\tred(tmp[j][k]+=tmp[j][k-s[v]]);\n\t\t\t\t\t\t\tdp[j][k]=dp[j][k-s[v]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(int k=s[v]-1;k>=0;--k) dp[j][k]=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=0;j<=C0;++j){\n\t\t\t\tfor(int k=0;k<=lim;++k){\n\t\t\t\t\tred(dp[j][k]+=tmp[j][k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int j=0;j<=C0;++j){\n\t\t\tfor(int k=0;k<=lim;++k){\n\t\t\t\tif(j-1>=0) red(dp[j][k]+=dp[j-1][k]);\n\t\t\t\tif(k-1>=0) red(dp[j][k]+=dp[j][k-1]);\n\t\t\t\tif(j-1>=0 && k-1>=0) red(dp[j][k]+=mo-dp[j-1][k-1]);\n\t\t\t}\n\t\t}\n\t\tint ans=0;\n\t\tfor(int i=0;i<=C0;++i){\n\t\t\tfor(int j=0;j<=D0;++j){\n\t\t\t\tred(ans+=g[i]*f[j]%mo*query(S-i-C1,C0-i,S-j-D1,D0-j)%mo);\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1647653269,
        "uid": 238861,
        "name": "xzzduang",
        "ccfLevel": 0,
        "title": "[\u5341\u4e8c\u7701\u8054\u8003 2019] \u76ae\u914d"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P5289)\n\n\u9009\u4e00\u4e2a\u6d3e\u7cfb\u548c\u4e00\u4e2a\u9635\u8425\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u540d\u5bfc\u5e08\n\n\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u9635\u8425\u91cc\u7684\u5bfc\u5e08\u90fd\u5206\u522b\u6765\u81ea\u4e0d\u540c\u6d3e\u7cfb\uff0c\u6240\u4ee5k=0\u65f6\uff0c\u5bf9\u9635\u8425\u7684\u9009\u62e9\u662f\u4e0d\u5f71\u54cd\u5bf9\u6d3e\u7cfb\u7684\u9009\u62e9\u7684\n\n\u552f\u4e00\u7684\u9650\u5236\u5c31\u662f\u540c\u57ce\u5e02\u7684\u8981\u5728\u540c\u4e00\u4e2a\u9635\u8425\n\n\u6240\u4ee5\u4ee5\u6bcf\u4e2a\u57ce\u5e02\u4e3a\u7269\u54c1\uff0c\u7269\u54c1\u5927\u5c0f\u4e3a\u8be5\u57ce\u5e02\u7684\u4eba\u6570\uff0c\u9635\u8425\u4eba\u6570\u4e3a\u80cc\u5305\u5bb9\u91cf\uff0c\u505a\u80cc\u5305dp\n\n\u518d\u4ee5\u6bcf\u4e2a\u5b66\u6821\u4e3a\u7269\u54c1\uff0c\u7269\u54c1\u5927\u5c0f\u4e3a\u8be5\u5b66\u6821\u7684\u4eba\u6570\uff0c\u6d3e\u7cfb\u4eba\u6570\u4e3a\u80cc\u5305\u5bb9\u91cf\uff0c\u505a\u80cc\u5305dp\n\n\u53ea\u7528\u4e00\u7ef4\u8bb0\u5f55\u80cc\u5305\u5927\u5c0f\u5373\u53ef\uff0c\u56e0\u4e3a\u603b\u4eba\u6570-\u80cc\u5305\u91cc\u7684\u4eba\u6570=\u5728\u53e6\u4e00\u4e2a\u9635\u8425\u6216\u6d3e\u7cfb\u7684\u4eba\u6570\n\n\u7136\u540e\u5408\u5e76\u7b54\u6848\u5373\u53ef\n\n\u65b9\u6848\u6570\u662f\u53ef\u4ee5\u76f8\u4e92\u4e58\u8d77\u6765\u7684\uff0ck\u5f88\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u505ak\uff01=0\u7684\u60c5\u51b5\uff0c\u7136\u540e\u4e58\u4e0a\u7b26\u5408\u8981\u6c42\u7684k==0\u7684\u65b9\u6848\u6570\n\nk\uff01=0\u65f6\uff0c\u8bb0$f[x][t][i][j]$\u4e3a\u524dx\u4e2a\u5b66\u6821\uff0c\u524d\u4e00\u4e2a\u5b66\u6821\u9009\u62e9\u4e86t\u9635\u8425\uff0c\u6b64\u65f6\u84dd\u6709i\u4e2a\u4eba\uff0c\u9e2d\u6d3e\u6709j\u4e2a\u4eba\u7684\u65b9\u6848\u6570\n\n\u6eda\u52a8\u7b2c\u4e00\u7ef4\uff0c\u5426\u5219\u7a7a\u95f4\u4f1a\u7206\n\n\u5c06\u5b66\u6821\u6309\u57ce\u5e02\u6392\u5e8f\uff0c\u8fd9\u6837\u76f8\u540c\u57ce\u5e02\u7684\u5c31\u4f1a\u6392\u5728\u4e00\u8d77\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u5982\u679c\u548c\u524d\u4e00\u4e2a\u5b66\u6821\u540c\u57ce\u5c31\u8981\u9009\u62e9\u76f8\u540c\u9635\u8425\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,j,k) for(int i=j;i<=k;++i)\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nchar cch;\ninline int rd(){\n    int x=0,fl=1;\n    cch=getchar();\n    while(cch>'9'||cch<'0'){\n        if(cch=='-') fl=-1;\n        cch=getchar();\n    }\n    while(cch>='0'&&cch<='9') x=(x<<3)+(x<<1)+cch-'0',cch=getchar();\n    return x*fl;\n}\nconst int mod=998244353,N=3000;\nstruct abc{\n\tint ct,sum,ban;\n}p1[N],p2[N];\nint f[N],g[N],ff[2][2][N][N],ok[N],bl[N],ct[N],city[N],sum[N],ban[N];\ninline void inc(int &A,int B){//\u4f1a\u6bd4 %mod\u5feb\u4e00\u70b9\u70b9 \n\tA+=B;\n\tif(A>mod) A-=mod;\n\tif(A<0) A+=mod;\n}\ninline int mul(int A,int B){\n\treturn 1ll*A*B%mod;\n}\ninline int sub(int a,int b){\n\ta-=b;\n\tif(a<0) a+=mod;\n\treturn a;\n}\ninline int getg(int l,int r){\n\tif(l>r) return 0;\n\tif(l==0) return g[r];//\u4e3a\u4e86dp\u65b9\u4fbfg[0]=1\uff0c\u5b9e\u9645\u4e0a\u5e94\u8be5\u662f0\n\treturn sub(g[r],g[l-1]);\n}\ninline int getf(int l,int r){\n\tif(l>r) return 0;\n\tif(l==0) return f[r];//\u540c\u7406 \n\treturn sub(f[r],f[l-1]);\n}\ninline bool cmp(const abc &a1,const abc &a2){\n\treturn a1.ct<a2.ct;\n}\ninline void sv(){\n\tint n=rd(),c=rd(),c0=rd(),c1=rd(),d0=rd(),d1=rd(),ans=0,tot=0;//n\u6240\u5b66\u6821\uff0cc\u4e2a\u57ce\u5e02\uff0c\u84dd\u9635\u8425 C0\u3002 \u7ea2\u9635\u8425 C1\u3002 \u9e2d\u6d3e\u7cfb D0\u3002 R\u6d3e\u7cfbD1\u3002\n\tmemset(city,0,sizeof city);\n\trep(i,1,n) ct[i]=rd(),sum[i]=rd(),tot+=sum[i],ban[i]=-1,city[ct[i]]+=sum[i];//city[i]\u8868\u793a\u7b2ci\u4e2a\u57ce\u5e02\u4e00\u5171\u6709\u591a\u5c11\u4eba \n\tint k=rd(),id;\n\trep(i,1,k) id=rd(),ban[id]=rd();\n\tint len1=0,len2=0;\n\trep(i,1,n){\n\t\tif(ban[i]!=-1) p1[++len1]=(abc){ct[i],sum[i],ban[i]};//\u6709\u7279\u6b8a\u8981\u6c42\u7684 \n\t\telse p2[++len2]=(abc){ct[i],sum[i],ban[i]};//\u6ca1\u6709\u7279\u6b8a\u8981\u6c42\u7684 \n\t}\n\tsort(p1+1,p1+len1+1,cmp);//\u6309\u57ce\u5e02\u6392\u5e8f\n    rep(i,1,len1){\n        if(city[p1[i].ct]==-1) ok[i]=0;//\u9635\u8425\u7684\u8f6c\u79fb\u4ee5\u57ce\u5e02\u4e3a\u5355\u4f4d\n        else ok[i]=city[p1[i].ct]/*\u6ce8\u610f*/,city[p1[i].ct]=-1;\n    }\n    //\n    memset(g,0,sizeof g),g[0]=1;\n    rep(i,1,c) if(city[i]>0) for(int j=c0;j>=city[i];--j) inc(g[j],g[j-city[i]]);\n    /*\u505a\u524d\u7f00\u548c*/rep(i,1,c0) inc(g[i],g[i-1]);\n    //\n    memset(f,0,sizeof f),f[0]=1;\n    rep(i,1,len2) for(int j=d0;j>=p2[i].sum;--j) inc(f[j],f[j-p2[i].sum]);\n    /*\u505a\u524d\u7f00\u548c*/rep(i,1,d0) inc(f[i],f[i-1]);\n    //\n    memset(ff,0,sizeof ff);//ff[x][t][i][j]\u4e3a\u524dx\u4e2a\u5b66\u6821\uff0c\u524d\u4e00\u4e2a\u5b66\u6821\u9009\u62e9\u4e86t\u9635\u8425\uff0c\u6b64\u65f6\u84dd\u6709i\u4e2a\u4eba\uff0c\u9e2d\u6d3e\u6709j\u4e2a\u4eba\u7684\u65b9\u6848\u6570\uff0c\u6eda\u52a8\u7b2c\u4e00\u7ef4 \n    ff[0][0][0][0]=1;\n    int cnt=0,now=0;\n    rep(i,1,len1){//\u5bf9\u6709\u8981\u6c42\u7684\u5b66\u6821\u66b4\u529b\u6c42\u89e3\n        now^=1;\n        int tmp=p1[i].sum,bn=p1[i].ban,d=ok[i],lst=cnt;//lst=\u4e4b\u524d\u7684\u5b66\u6821\u7684\u603b\u4eba\u6570 \n        cnt+=tmp;\n        rep(t,0,1) rep(h,0,c0) rep(j,0,cnt) ff[now][t][h][j]=0;//\u8fd9\u91cc\u4e0d\u53ef\u4ee5\u7528memset\uff0c\u7528\u4e86\u4f1a\u8d85\u65f6\uff0c\u56e0\u4e3a\u4e00\u5f00\u59cbcnt\u5f88\u5c0f\uff0c\u6240\u4ee5\u5faa\u73af\u66f4\u5feb \n        rep(t,0,1){\n            int cs=-1;//choise\n            if(i>1&&p1[i].ct==p1[i-1].ct) cs=t; \n            for(int i=c0;i>=0;--i) for(int j=cnt;j>=0;--j){\n                if(cs!=1){//\u5982\u679c\u540c\u57ce\u5e02\u7684\u9009\u62e9\u4e860\u9635\u8425\uff0c\u6216\u4e0e\u4e0a\u4e00\u4e2a\u4e0d\u540c\u57ce\uff0c\n                     if(bn!=1&&i>=d&&j<=lst) inc(ff[now][0][i][j],ff[now^1][t]/*\u6ce8\u610f\u662ft\u800c\u4e0d\u662f0*/[i-d][j]);//\u6ca1\u6709\u7981\u6389\u5c0fR\uff0c\u53ef\u4ee5\u52a0\u5165R\u6d3e \n                     if(bn!=0&&i>=d&&j-tmp<=lst&&j>=tmp) inc(ff[now][0][i][j],ff[now^1][t][i-d][j-tmp]);//\u6ca1\u6709\u7981\u6389Yazid\uff0c\u53ef\u4ee5\u52a0\u5165\u9e2d\u6d3e\n                }\n                if(cs!=0){//\u5982\u679c\u540c\u57ce\u5e02\u7684\u9009\u62e9\u4e861\u9635\u8425\uff0c\u6216\u4e0e\u4e0a\u4e00\u4e2a\u4e0d\u540c\u57ce\uff0c\n                    if(bn!=3&&j<=lst) inc(ff[now][1][i][j],ff[now^1][t][i][j]);\n                    if(bn!=2&&j-tmp<=lst&&j>=tmp) inc(ff[now][1][i][j],ff[now^1][t][i][j-tmp]);\n                }\n            }\n        }\n    }\n    //\n    rep(t,0,1) rep(i,0,c0) rep(j,0,d0){\n        int v=ff[now][t][i][j];\n        if(!v)continue;\n        int t1=c0-i,t2=max(0,tot-d1-j),t3=max(0,tot-c1-i),t4=d0-j;//\u7b26\u5408\u4eba\u6570\u8981\u6c42\u7684\u533a\u95f4 \n        inc(ans,mul(v,mul(getg(t3,t1),getf(t2,t4))));\n    }\n    printf(\"%d\\n\",ans);\n}\nint main(){\n\tint T=rd();\n\twhile(T--) sv();\n}\n/*\n2\n2 1\n3 2 2 2\n1 1\n1 2\n1\n1 0\n4 2\n10 30 20 30\n1 6\n2 4\n1 7\n2 4\n2\n2 3\n3 1\n*/\n```\n",
        "postTime": 1555544371,
        "uid": 75883,
        "name": "Doingdong",
        "ccfLevel": 0,
        "title": "[\u5341\u4e8c\u7701\u8054\u80032019]\u76ae\u914d"
    },
    {
        "content": "## \u9898\u76ee\u7b80\u8ff0\n\n> - \u6709 $n$ \u79cd\u7269\u54c1\uff0c\u6bcf\u79cd\u7269\u54c1\u6709\u4e24\u4e2a\u5c5e\u6027\uff1a\u989c\u8272 $c_i$ \u548c\u91cd\u91cf $w_i$\u3002\n> - \u628a $n$ \u4e2a\u7269\u54c1\u5206\u5230 $2$ \u884c $2$ \u5217\u7684 $4$ \u4e2a\u76d2\u5b50\u5f53\u4e2d\uff0c\u6c42\u6ee1\u8db3\u4e00\u4e0b\u6761\u4ef6\u7684\u5206\u914d\u6570\u91cf\uff0c\u5bf9 $998244353$ \u53d6\u6a21\uff1a\n> - - \u6bcf\u884c\u3001\u5217\u7684\u91cd\u91cf\u548c\u6709\u9650\u5236\uff1a$C_0,C_1$\u3001$D_0,D_1$\u3002\n>   - \u540c\u79cd\u989c\u8272\u5728\u540c\u4e00\u5217\u3002\n>   - \u6709 $k$ \u4e2a\u7269\u54c1\u6709\u7279\u6b8a\u9650\u5236\uff1a\u6307\u5b9a\u4e86\u4e00\u4e2a\u4e0d\u80fd\u9009\u7684\u76d2\u5b50\u3002\n> - $n\\leq 1000$\uff0c$M=\\max(C_i,D_i)\\leq 2500$\uff0c$k\\leq 30$\uff0c$w_i\\leq 10$\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u4e3a\u4e86\u8ba8\u8bba\u65b9\u4fbf\uff0c\u4e0b\u9762\u7269\u54c1\u7684\u626b\u63cf\u987a\u5e8f\u6309\u989c\u8272\u6392\u5e8f\u3002\n\n\u5148\u8f6c\u6362\u4e00\u4e0b\u9898\u76ee\uff0c\u6ce8\u610f\u5230\u884c\u3001\u5217\u91cd\u91cf\u548c\u662f\u56fa\u5b9a\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6761\u4ef6 $1$ \u8f6c\u6362\u6210\u7b2c $1$ \u884c\u3001\u7b2c $1$ \u5217\u91cd\u91cf\u548c\u6709\u4e0a\u3001\u4e0b\u754c\u3002\n\n\u9996\u5148\u8003\u8651 $k=0$ \u7684\u60c5\u51b5\u3002\u8fd9\u662f\u4e0d\u96be\u53d1\u73b0\u6bcf\u79cd\u989c\u8272\u9009\u62e9\u7684\u5217\uff0c\u6bcf\u4e2a\u7269\u54c1\u9009\u62e9\u7684\u884c\u662f\u4e92\u4e0d\u5e72\u9884\u7684\u3002\u6211\u4eec\u5f53\u505a\u4e24\u4e2a\u72ec\u7acb\u7684\u95ee\u9898\u6c42\u89e3\u5373\u53ef\u3002\u6700\u7ec8\u590d\u6742\u5ea6 $O(nM)$\uff0c\u671f\u671b\u5f97\u5206 $40$ \u5206\u3002\u6211\u4eec\u79f0\u4e3a\u3010\u7b97\u6cd5 $1$\u3011\u3002\n\n\u5982\u679c\u4f60\u8db3\u591f\u806a\u660e\uff0c\u4f60\u8fd8\u4f1a\u5199\u4e00\u4e2a $O(nM^2)$ \u7684 dp\uff0c\u5177\u4f53\u7684\u5047\u8bbe $f[i][j][k]$ \u4e3a\u9009\u53d6\u524d $i$ \u4e2a\u7269\u54c1\uff0c\u7b2c\u4e00\u884c\u91cd\u91cf\u4e3a $j$\uff0c\u7b2c\u4e00\u5217\u91cd\u91cf\u4e3a $k$ \u7684\u65b9\u6848\u6570\u3002\u6211\u4eec\u5df2\u7ecf\u6709 $70$ \u5206\u4e86\u3002\u6211\u4eec\u79f0\u4e4b\u4e3a\u3010\u7b97\u6cd5 $2$\u3011\u3002\n\n\u7ee7\u7eed\u8003\u8651\u4f18\u5316\uff0c\u6211\u4eec\u53d1\u73b0\u7279\u6b8a\u9650\u5236\u7684\u7269\u54c1\u4e2a\u6570\u5f88\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba9\u6ca1\u6709\u9650\u5236\u7684\u7269\u54c1\u548c\u6ca1\u6709\u9650\u5236\u7684\u989c\u8272\u6765\u8dd1\u3010\u7b97\u6cd5 $1$\u3011\uff0c\u5bf9\u6709\u7279\u6b8a\u9650\u5236\u7684\u7269\u54c1\u548c\u989c\u8272\u8dd1\u3010\u7b97\u6cd5 $2$\u3011 \u5373\u53ef\u671f\u671b\u5f97\u5206 $100$ \u5206\u3002\n\n## \u5177\u4f53\u5b9e\u73b0\n\n\u5bf9\u4e8e\u6ca1\u6709\u7279\u6b8a\u9650\u5236\u7684\u989c\u8272\uff0c\u6211\u4eec\u5bf9\u5b83\u8fdb\u884c\u80cc\u5305\u7b97\u51fa\u6765\u7b2c $1$ \u5217\u6709 $i$ \u91cd\u91cf\u7684\u65b9\u6848\u6570\u4e3a $f_i$\u3002\u5bf9\u6bcf\u4e2a\u6ca1\u6709\u7279\u6b8a\u9650\u5236\u7684\u7269\u54c1\uff0c\u6211\u4eec\u901a\u8fc7\u80cc\u5305\u7b97\u51fa\u6765\u7b2c $1$ \u884c\u6709 $i$ \u91cd\u91cf\u7684\u65b9\u6848\u6570 $g_i$\u3002\u7b97\u8fd9\u4e2a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nM)$ \u7684\u3002\n\n\u5bf9\u4e8e\u6709\u7279\u6b8a\u9650\u5236\u7684\u989c\u8272\uff0c\u6211\u4eec\u5047\u8bbe $F[i][j]$ \u8868\u793a\u7b2c\u4e00\u884c\u91cd\u91cf\u4e3a $i$ \u7b2c\u4e8c\u884c\u91cd\u91cf\u4e3a $j$ \u7684\u65b9\u6848\u6570\u3002\u5bf9\u4e8e\u6709\u9650\u5236\u7684\u989c\u8272\u53bb\u8f6c\u79fb $j$\uff0c\u5bf9\u4e8e\u6709\u9650\u5236\u7684\u7269\u54c1\u53bb\u8f6c\u79fb $i$ \u5373\u53ef\u3002\u89c2\u5bdf\u5230 $k$ \u5f88\u5c11\uff0c\u6240\u4ee5\u7b2c\u4e00\u4f4d\u4e0d\u8d85\u8fc7 $kw_i$\uff0c\u7b2c\u4e8c\u4f4d\u662f $M$ \u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(k^2w_iM)$\u3002\n\n\u6700\u7ec8\u590d\u6742\u5ea6\u4e3a $O(T(nW+k^2w_iM))$ \u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u653e\u4e2a\u4ee3\u7801\uff1a\n\n```cpp\nvoid add(ll &a,ll b){a+=b;if(a>=MOD)a-=MOD;}\nll pls(ll a,ll b){a+=b;return (a>=MOD?a-MOD:a);} \nll sub(ll a,ll b){a-=b;if(a<0)a+=MOD;return a;} \nvoid READ(){\n\tcin>>n>>c>>c0>>c1>>d0>>d1;\n\tfor(int i=1;i<=n;i++) vis[i]=siz[i]=0,ban[i]=-1;\n\tfor(int i=0;i<MR;i++){ \n\t\tf[i]=g[i]=0;\n\t\tfor(int j=0;j<MR;j++) F[i][j]=G[i][j]=0;\n\t} \n\tf[0]=g[0]=F[0][0]=1;\n\tfor(int i=1;i<=n;i++) cin>>b[i]>>s[i],siz[b[i]]+=s[i];\n\tcin>>_;\n\twhile(_--){\n\t\tint x;cin>>x;cin>>ban[x];vis[b[x]]=1;\n\t}\n}\nvoid WORK_UNBAN(){\n\tfor(int i=1;i<=n;i++)\n\t\tif(ban[i]==-1)\n\t\t\tfor(int j=d0;j>=s[i];j--)\n\t\t\t\tadd(f[j],f[j-s[i]]);\n\tfor(int i=1;i<=c;i++)\n\t\tif(!vis[i]&&siz[i])\n\t\t\tfor(int j=c0;j>=siz[i];j--)\n\t\t\t\tadd(g[j],g[j-siz[i]]);\n\tfor(int i=1;i<=d0;i++) add(f[i],f[i-1]);\n\tfor(int i=1;i<=c0;i++) add(g[i],g[i-1]);\n\treturn;\n}\nvoid WORK_BAN(){\n\tint sum=0;\n\tfor(int i=1;i<=c;i++)\n\t\tif(vis[i]){\n\t\t\tfor(int j=0;j<=c0;j++)\n\t\t\t\tfor(int k=0;k<=sum;k++)\n\t\t\t\t\tG[j][k]=F[j][k];\n\t\t\t// F \u5bf9\u5e94\u9009\u5de6\u8fb9, G \u5bf9\u5e94\u9009\u53f3\u8fb9 \n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif(ban[j]>=0&&b[j]==i){\n\t\t\t\t\tsum+=s[j];sum=min(sum,d0); \n\t\t\t\t\tif(ban[j]==1){\n\t\t\t\t\t\tfor(int k=0;k<=c0;k++){\n\t\t\t\t\t\t\tfor(int t=sum;t>=0;t--)\n\t\t\t\t\t\t\t\tF[k][t]=(t>=s[j]?F[k][t-s[j]]:0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(ban[j]!=0){\n\t\t\t\t\t\tfor(int k=0;k<=c0;k++)\n\t\t\t\t\t\t\tfor(int t=sum;t>=s[j];t--)\n\t\t\t\t\t\t\t\tadd(F[k][t],F[k][t-s[j]]);\n\t\t\t\t\t}\n\t\t\t\t\tif(ban[j]==3){\n\t\t\t\t\t\tfor(int k=0;k<=c0;k++){\n\t\t\t\t\t\t\tfor(int t=sum;t>=0;t--)\n\t\t\t\t\t\t\t\tG[k][t]=(t>=s[j]?G[k][t-s[j]]:0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(ban[j]!=2){\n\t\t\t\t\t\tfor(int k=0;k<=c0;k++)\n\t\t\t\t\t\t\tfor(int t=sum;t>=s[j];t--)\n\t\t\t\t\t\t\t\tadd(G[k][t],G[k][t-s[j]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tfor(int j=c0;j>=0;j--)\n\t\t\t\tfor(int k=0;k<=sum;k++)\n\t\t\t\t\tF[j][k]=(j>=siz[i]?F[j-siz[i]][k]:0);\n\t\t\tfor(int j=0;j<=c0;j++)\n\t\t\t\tfor(int k=0;k<=sum;k++)\n\t\t\t\t\tadd(F[j][k],G[j][k]);\t\n\t\t}\n\n\treturn;\n}\nll pre_f(int l,int r){return sub(f[r],(l?f[l-1]:0));}\nll pre_g(int l,int r){return sub(g[r],(l?g[l-1]:0));}\nvoid CALC(){\n\tint sum=0;ll ans=0;\n\tfor(int i=1;i<=n;i++) sum+=s[i];\n\tfor(int i=0;i<=c0;i++)\n\t\tfor(int j=0;j<=d0;j++){\n\t\t\tint lc=max(sum-c1-i,0),rc=c0-i;\n\t\t\tint ld=max(sum-d1-j,0),rd=d0-j;\n\t\t\tif(lc>rc||ld>rd) continue;\n\t\t\tadd(ans,pre_g(lc,rc)*pre_f(ld,rd)%MOD*F[i][j]%MOD);\n\t\t}\n\tcout<<ans<<endl;\n}\nvoid solve(){\n\tREAD();\n\tWORK_UNBAN();\n\tWORK_BAN();\n\tCALC();\n\treturn;\n}\n```\n\n",
        "postTime": 1679745192,
        "uid": 248400,
        "name": "Inaba_Meguru",
        "ccfLevel": 7,
        "title": "P5289 [\u5341\u4e8c\u7701\u8054\u8003 2019] \u76ae\u914d \u9898\u89e3"
    },
    {
        "content": "\u4ece $k=0$ \u7684\u60c5\u51b5\u5f00\u59cb\u601d\u8003\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6b64\u65f6\u9635\u8425\u548c\u6d3e\u7cfb\u53ef\u4ee5\u5206\u5f00\u8003\u8651\uff0c\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f $ans1 \\times ans2$\u3002\n\n\u4ee4 $f1_{i,j}$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u57ce\u5e02\uff0c\u52a0\u5165\u7b2c\u4e00\u4e2a\u9635\u8425\u7684\u5b66\u751f\u4eba\u6570\u4e3a $j$ \u7684\u79cd\u7c7b\u6570\u3002\n\n\u5904\u7406\u6bcf\u4e2a\u57ce\u5e02\u5b66\u751f\u7684\u4eba\u6570\u7136\u540e 01 \u80cc\u5305\uff0c\u590d\u6742\u5ea6 $O(cM)$\u3002\n\n\u6d3e\u7cfb\u7684\u60c5\u51b5\u53ef\u4ee5\u7c7b\u4f3c\u5904\u7406\u51fa $f2_{i,j}$\uff1a\u8003\u8651\u5230\u7b2c $i$ \u6240\u5b66\u6821\uff0c\u6709 $j$ \u540d\u5b66\u751f\u5c5e\u4e8e\u7b2c\u4e00\u6d3e\u7cfb\uff0c\u628a\u5b66\u6821\u4f5c\u4e3a\u6574\u4f53\u4e5f\u53ef\u4ee5 01 \u80cc\u5305\uff0c\u590d\u6742\u5ea6 $O(nM)$\u3002\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u5904\u7406 $k$ \u4e2a\u7279\u6b8a\u9650\u5236\u3002\n\n\u6211\u4eec\u987a\u7740\u521a\u624d\u7684\u601d\u8def\uff0c\u53ef\u4ee5\u5148\u5904\u7406\u90a3\u4e9b\u6ca1\u6709\u7279\u6b8a\u5b66\u6821\u7684\u57ce\u5e02\u7684\u60c5\u51b5\u3002\n\n\u4ee4 $f_{i,j}$ \u8868\u793a\u5904\u7406\u5230\u5f53\u524d\u57ce\u5e02\u65f6\uff0c$i$ \u4e2a\u5b66\u751f\u5c5e\u4e8e\u7b2c\u4e00\u9635\u8425\uff0c$j$ \u4e2a\u5b66\u751f\u5c5e\u4e8e\u7b2c\u4e00\u6d3e\u7cfb\u65f6\u7684\u65b9\u6848\u6570\u3002\n\n\u63a5\u4e0b\u6765\u5904\u7406\u6709\u7279\u6b8a\u5b66\u6821\u7684\u57ce\u5e02\u3002\n\n\u8003\u8651\u5904\u7406\u57ce\u5e02 $x$ \u65f6\u7684\u8f6c\u79fb\uff0c\u6211\u4eec\u5148\u628a $x$ \u4e2d\u6ca1\u6709\u7279\u6b8a\u9650\u5236\u7684\u5b66\u6821\u62ff\u51fa\u6765\uff0c\u5904\u7406\u51fa $f2$ \u6570\u7ec4\uff08\u4e0a\u6587\uff09\u3002\n\n\u63a5\u7740\u6211\u4eec\u679a\u4e3e $x$ \u57ce\u5e02\u7684\u5b66\u751f\u52a0\u5165\u54ea\u4e2a\u6d3e\u7cfb\uff0c\u90a3\u4e48 $i$ \u8fd9\u4e00\u7ef4\u7684\u8f6c\u79fb\u5c31\u5f88\u8f7b\u677e\u4e86\uff1b\u5728 $g$ \u6570\u7ec4\u7684\u57fa\u7840\u4e0a\u5904\u7406\u7279\u6b8a\u5b66\u6821\u7684\u6d3e\u7cfb\u8f6c\u79fb\u60c5\u51b5\uff0c\u6ce8\u610f\u4e0d\u80fd\u628a\u5b66\u6821\u6254\u5230\u8ba8\u538c\u7684\u5bfc\u5e08\u90a3\u91cc\u3002\n\n\u6700\u540e\u679a\u4e3e $x$ \u57ce\u5e02\u4e2d\u6709\u591a\u5c11\u5b66\u751f\u5c5e\u4e8e\u7b2c\u4e00\u6d3e\u7cfb\uff0c\u7b97\u51fa $f$ \u7684\u8f6c\u79fb\u3002\n\n\u7b80\u5355\u63cf\u8ff0\u4e00\u4e0b\u6700\u540e\u7684\u8f6c\u79fb\u65b9\u5f0f\u3002\n\n\u4ee4 $f_{0/1.i,j}$ \u8868\u793a\u5f53\u524d\u72b6\u6001\u4e0b\u6709 $i$ \u540d\u5b66\u751f\u5c5e\u4e8e\u7b2c\u4e00\u9635\u8425\uff0c$j$ \u540d\u5b66\u751f\u5c5e\u4e8e\u7b2c\u4e00\u6d3e\u7cfb\u65f6\u7684\u65b9\u6848\u6570\uff0c$0/1$ \u90a3\u4e00\u7ef4\u662f\u6eda\u52a8\u6570\u7ec4\uff0c\u5b9e\u9645\u542b\u4e49\u662f\u5f53\u524d\u57ce\u5e02\u7f16\u53f7\uff08\u8fd9\u91cc\u53ea\u8003\u8651\u6709\u7279\u6b8a\u9650\u5236\u7684\u57ce\u5e02\uff09\u3002\n\n\u5148\u5904\u7406\u6240\u6709\u6ca1\u6709\u7279\u6b8a\u9650\u5236\u7684\u57ce\u5e02\u7684 $f_1$ \u548c $f_2$\uff0c\u4ee4 $f_{0,i,j}=f1_{cnt1,i} \\times f2_{cnt2,j}$ \uff0c\u8fd9\u91cc $cnt1/cnt2$ \u8868\u793a\u6ca1\u6709\u7279\u6b8a\u9650\u5236\u7684\u57ce\u5e02/\u5b66\u6821\u6570\u91cf\u3002\n\n\uff08\u56e0\u4e3a $f_{0,i,j}$ \u5411 $f_{1,i,j}$ \u548c $f_{1,i,j}$ \u5411 $f_{0,i,j}$ \u8f6c\u79fb\u662f\u4e00\u6837\u7684\uff0c\u4ee5\u4e0b\u4ee5\u524d\u8005\u4e3a\u4f8b\uff09\u3002\n\n\u8ba8\u8bba\u4e00\u4e0b $A$ \u57ce\u5e02\u96c6\u4f53\u52a0\u5165\u54ea\u4e2a\u9635\u8425\uff0c\u4e0d\u59a8\u8bbe\u90fd\u52a0\u5165\u9635\u8425\u4e00\uff08\u9635\u8425\u4e8c\u540c\u7406\uff09\u3002\n\n\u628a\u4e0d\u6392\u65a5\u9635\u8425\u4e00\u7684\u5b66\u6821\u62ff\u51fa\u6765\uff08\u5305\u62ec\u65e0\u7279\u6b8a\u9650\u5236\u5b66\u6821\u548c\u6392\u65a5\u9635\u8425\u4e8c\u5bfc\u5e08\u7684\u5b66\u6821\uff09\uff0c\u5904\u7406\u8fd9\u4e9b\u5b66\u6821\u91cc $i$ \u540d\u5b66\u751f\u9009\u62e9\u6d3e\u7cfb\u4e00\u7684\u65b9\u6848\u6570 $g_i$\u3002\n\n\u7531\u4e8e\u6b64\u65f6\u5269\u4e0b\u7684\u5b66\u751f\u9009\u62e9\u54ea\u4e2a\u5bfc\u5e08\u662f\u56fa\u5b9a\u7684\uff0c\u5047\u8bbe\u56fa\u5b9a\u7684\u5b66\u6821\u4e2d\u6709 $k1$ \u4e2a\u9009\u62e9\u6d3e\u7cfb\u4e00\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u5c31\u662f $f_{1,i+sum,j+k+x}+=g_x$\uff0c\u8fd9\u91cc $sum$ \u8868\u793a $A$ \u57ce\u5e02\u4e2d\u6240\u6709\u5b66\u6821\u5b66\u751f\u7684\u6570\u91cf\u3002\n\n\u4ee5\u4e0a\u8bf4\u660e\u6ca1\u6709\u5c06\u6761\u4ef6\u5199\u51fa\uff0c\u9ed8\u8ba4\u5747\u4e3a\u6d3e\u7cfb/\u9635\u8425\u7684\u5b66\u751f\u6570\u91cf\u9650\u5236\u3002\n\n\u590d\u6742\u5ea6 $O(kM^2+nM)$\u3002",
        "postTime": 1669635955,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "P5289 \u9898\u89e3"
    }
]