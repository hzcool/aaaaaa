[
    {
        "content": "\u8d2a\u5fc3\u601d\u8def\uff0c\u7b80\u6d01\u660e\u4e86\u3002\n\n## \u9898\u76ee\u5206\u6790\n\u6211\u4eec\u90fd~~\u5e94\u8be5~~\u5b66\u8fc7\u6700\u5c0f\u751f\u6210\u6811\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u8bb2\u4e86\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u70b9\u4e00\u4e2a\u70b9\u7684\u52a0\u5165\u8fdb\u6765\uff0c\u8fd9\u6837\u80af\u5b9a\u4f1a\u548c\u4e4b\u524d\u67d0\u4e2a\u70b9\u4ea7\u751f\u8fde\u63a5\uff0c\u6700\u7b80\u5355\u7684\u8d2a\u5fc3\u601d\u8def\u5c31\u662f\u4f7f\u8fd9\u6761\u65b0\u4ea7\u751f\u7684\u8fde\u8fb9\u5c3d\u53ef\u80fd\u5c0f\u5c31\u53ef\u4ee5\u4e86\u3002\u7531\u4e8e\u52a0\u5165\u70b9\u7684\u987a\u5e8f\u5e76\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\uff0c\u6211\u4eec\u4e0d\u59a8\u6309\u6570\u5217 $a$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8fd9\u6837\u52a0\u5165\u7b2c $i$ \u4e2a\u70b9\u65f6\u6570\u5217 $a$ \u4ea7\u751f\u7684\u8d21\u732e\u4e00\u5b9a\u662f $a_i$\uff0c\u8fd9\u65f6\u53ea\u9700\u8981\u8003\u8651\u6570\u5217 $b$ \u4ea7\u751f\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n\u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u5df2\u7ecf\u52a0\u5165\u7684\u70b9\u4e4b\u4e2d\u5bf9\u5e94 $b_i$ \u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u4e0e\u5176\u8fde\u8fb9\u5373\u53ef\u3002\u8fd9\u4e2a\u76f4\u63a5\u8bb0\u5f55\u4e4b\u524d\u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u8bc1\u660e\u8fd9\u4e2a\u8d2a\u5fc3\u601d\u8def\u7684\u6b63\u786e\u6027\uff1f\n\n\u9996\u5148\u6211\u4eec\u4ee4\u6570\u5217 $A,B$ \u5206\u522b\u4e3a $a,b$ \u4ece\u5c0f\u5230\u5927\u6392\u5b8c\u5e8f\u540e\u7684\u7ed3\u679c\u3002\n\n\u5f88\u663e\u7136\uff0c\u6570\u5217 $a$ \u4ea7\u751f\u7684\u8d21\u732e\u5c31\u662f $\\sum_{i=2}^n A_i$\uff0c\u5e76\u4e14\u8fd9\u4e2a\u8d21\u732e\u503c\u662f\u5bf9\u4e8e $a$ \u53ef\u4ee5\u53d6\u5230\u7684\u6700\u5c0f\u8d21\u732e\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6570\u5217 $b$\uff0c\u6211\u4eec\u6bcf\u52a0\u5165\u4e00\u4e2a\u65b0\u7684 $b_i$\uff0c\u65e0\u975e\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u6bd4\u6570\u5217\u4e2d\u6700\u5c0f\u7684\u5927\uff0c\u53ea\u4f1a\u8ba1\u7b97\u4e00\u6b21\uff1b\n2. \u6bd4\u6570\u5217\u4e2d\u6700\u5c0f\u7684\u5c0f\uff0c\u4e0d\u8ba1\u7b97\uff0c\u66ff\u4ee3\u6700\u5c0f\u7684\uff0c\u5728\u4e4b\u540e\u88ab\u8ba1\u7b97\u4e00\u6b21\u540e\u4e22\u5f03\u3002\n\n\u8003\u8651\u5230 $B_1$ \u4e0d\u53ef\u80fd\u88ab\u8ba1\u7b97\uff0c\u8d21\u732e\u4f9d\u7136\u662f $\\sum_{i=2}^n B_i$\u3002\n\n\u8fd9\u9053\u9898\u5c31\u7b97\u662f\u641e\u5b9a\u4e86\u3002\n\n## CODE\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint n,ans;\nstruct edge\n{\n\tint u,v;\n}l[1000010];\nstruct num\n{\n\tint a,b,xh;\n}p[1000010],minn;\nbool cmp(num u,num v)\n{\n\treturn u.a<v.a;\n}\nsigned main()\n{\n\tstd::ios::sync_with_stdio(false);\n\tcin.tie(0);cout.tie(0);\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>p[i].a;\n\t\tp[i].xh=i;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>p[i].b;\n\t\tp[i].xh=i;\n\t}\n\tsort(p+1,p+n+1,cmp);\n\tminn=p[1];\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tans+=p[i].a;\n\t\tnum u=minn;\n\t\tans+=max(u.b,p[i].b);\n\t\tif(p[i].b<minn.b)\n\t\t{\n\t\t    minn=p[i];\n\t\t}\n\t\tl[i].u=p[i].xh,l[i].v=u.xh;\n\t}\n\tcout<<ans<<\"\\n\";\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tcout<<l[i].u<<\" \"<<l[i].v<<\"\\n\";\n\t}\n \treturn 0;\n}\n\n```\n",
        "postTime": 1674630493,
        "uid": 585805,
        "name": "MCRS_lizi",
        "ccfLevel": 6,
        "title": "P8957\u9898\u89e3"
    },
    {
        "content": "\u8d2a\u5fc3\u5730\u8003\u8651\uff0c\u5c06\u6bcf\u4e2a\u70b9 $i$ \u5411\u70b9 $j$ \u6ee1\u8db3 $a_j\\le a_i,b_j\\le b_i$ \u8fde\u8fb9\uff0c\u8fde\u5b8c\u8fb9\u4e4b\u540e\u5c06\u70b9 $i$ \u5220\u6389\uff0c\u56e0\u4e3a\u70b9 $j$ \u4e00\u5b9a\u6bd4\u70b9 $i$ \u66f4\u4f18\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u94a6\u5b9a\u6bcf\u4e2a\u70b9 $i$ \u8fde\u5411\u4ee5 $a_j$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$b_j$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u540e\u7684\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8d2a\u5fc3\u8fde\u8fb9\u4e4b\u540e\u5269\u4e0b\u70b9\u7684\u5e8f\u5217\uff0c\u662f\u4e00\u4e2a\u6392\u5e8f\u540e $a$ \u5355\u8c03\u9012\u589e\uff0c$b$ \u5355\u8c03\u9012\u51cf\u7684\u5e8f\u5217\uff0c\u5c06\u6392\u5e8f\u540e\u76f8\u90bb\u7684\u4e24\u70b9\u8fde\u8fb9\u4e00\u5b9a\u6700\u4f18\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(i, l, r) for(int i=l, _=r; i<=_; ++i)\nusing namespace std;\nconst int N = 1e6 + 5;\nstruct Point {\n\tint a, b, id;\n} p[N];\nint n, m = 1, u[N][2], tot;\nlong long ans;\nint main() {\n\tscanf(\"%d\", &n);\n\trep(i, 1, n) scanf(\"%d\", &p[i].a);\n\trep(i, 1, n) scanf(\"%d\", &p[i].b), p[i].id = i;\n\tsort(p + 1, p + n + 1, [](Point x, Point y) {return x.a != y.a ? x.a < y.a : x.b < y.b;});\n\trep(i, 2, n)\n\tif (p[i].b >= p[m].b) u[++tot][0] = p[m].id, u[tot][1] = p[i].id, ans += p[i].b + p[i].a;\n\telse p[++m] = p[i];\n\trep(i, 2, m) u[++tot][0] = p[i - 1].id, u[tot][1] = p[i].id, ans += max(p[i - 1].a, p[i].a) + max(p[i - 1].b, p[i].b);\n\tprintf(\"%lld\\n\", ans);\n\trep(i, 1, tot) printf(\"%d %d\\n\", u[i][0], u[i][1]);\n\treturn 0;\n}\n```\n",
        "postTime": 1671079716,
        "uid": 400151,
        "name": "SSVoV",
        "ccfLevel": 0,
        "title": "\u300cCGOI-3\u300d\u5deb\u6ce1\u5f39\u5f39\u4e50 \u9898\u89e3"
    },
    {
        "content": "## Preface\n\n\u8d2a\u5fc3\u3002\n\n## Solution\n\n\u5982\u679c\u53ea\u6709\u6570\u5217 $a$\uff0c\u5c06\u5176\u5347\u5e8f\u6392\u5e8f\uff0c\u6211\u4eec\u77e5\u9053\u80fd\u4ea7\u751f\u7684\u4ee3\u4ef7\u6700\u5c0f\u503c\u5c31\u662f $\\sum\\limits_{i=2}^n a_i$\u3002\n\n> **\u8bc1\u660e**\uff1a\u56e0\u4e3a\u8fd9\u662f\u4e00\u68f5\u6811\uff0c\u6240\u4ee5\u4ee3\u4ef7\u6392\u5e8f\u540e\u7684\u7b2c $k$ \u5c0f\u7684\u6700\u5c0f\u503c\u662f $a_{k+1}$\uff0c\u5982\u679c\u66f4\u5c0f\uff0c\u5219\u65e0\u6cd5\u6784\u6210\u4e00\u68f5\u6811\uff0c\u56e0\u4e3a\u524d $k$ \u6761\u8fb9\u4ec5\u8054\u901a\u4e86 $\\leq k$ \u4e2a\u8282\u70b9\u3002\n\n\u73b0\u5728\u6709\u4e86\u6570\u5217 $b$\u3002\u6211\u4eec\u4e0d\u59a8\u8ba9 $a$ \u6570\u5217\u4f9d\u65e7\u5bf9\u7b54\u6848\u8d21\u732e\u5b83\u80fd\u4ea7\u751f\u7684\u4ee3\u4ef7\u6700\u5c0f\u503c\uff0c\u800c\u6392\u5e8f\u540e\u4e0d\u96be\u53d1\u73b0\uff0c**\u8fd9\u5176\u5b9e\u5c31\u662f $\\bm i$ \u5411 $\\bm{[1, i - 1]}$ \u5185\u4efb\u9009\u4e00\u6761\u8fb9\u5373\u53ef**\u3002\u8003\u8651 $b$ \u6570\u5217\u3002\u8d2a\u5fc3\u5730\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u7ba1\u5230\u5e95\u8c01\u5927\uff0c\u53ea\u8981\u8ba9\u9009\u7684\u8fd9\u6761\u8fb9\u5bf9\u5e94\u7684 $b$ \u662f\u524d\u7f00\u6700\u5c0f\u5373\u53ef\uff0c\u8fd9\u6837\u7b54\u6848\u4e00\u5b9a\u4e0d\u52a3\u3002\n\n\u90a3\u4e48\u600e\u4e48\u8bc1\u660e\u8fd9\u4e2a\u6700\u4f18\u5462\uff1f\u6211\u4eec\u6709\u4e24\u79cd\u8bc1\u6cd5\uff1a\n\n> **\u8bc1\u660e 1**\uff1a\u6211\u4eec\u8bd5\u56fe\u8bc1\u660e\u8fd9\u6837\u505a\uff0c\u5bf9\u4e8e $b$ \u6570\u5217\u4ea7\u751f\u7684\u4e5f\u662f\u4ee3\u4ef7\u6700\u5c0f\u503c\u3002\n> + \u663e\u800c\u6613\u89c1\u5730\uff0c\u5982\u679c\u67d0\u4e00\u6b21\u7684 $b_i$ \u4e0d\u662f\u524d\u7f00\u6700\u5c0f\u503c\uff0c\u5b83\u53ea\u4f1a\u88ab\u8ba1\u7b97\u4e00\u6b21\uff0c\u6b64\u540e\u4e5f\u4e0d\u4f1a\u6709\u5411\u5b83\u8fde\u7684\u8fb9\uff1b\n> + \u5426\u5219\u5b83\u662f\u524d\u7f00\u6700\u5c0f\u503c\uff0c\u5b83\u5728\u7b2c\u4e00\u6b21\u8fde\u7684\u65f6\u5019\u4e0d\u4f1a\u88ab\u8ba1\u7b97\uff0c\u4f46\u5728\u4e4b\u540e\u88ab\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u5b83\u540c\u6837\u4f1a\u88ab\u65b0\u7684\u524d\u7f00\u6700\u5c0f\u503c\u66ff\u4ee3\u3002\n> \n> \u4e8e\u662f\u6211\u4eec\u5c31\u8bc1\u660e\u4e86\u8fd9\u662f\u6700\u4f18\u89e3\u3002\n\n---\n\n> **\u8bc1\u660e 2**\uff1a\u8fd8\u662f\u653e\u5230\u524d\u7f00\u6700\u5c0f\u4e0a\u53bb\u770b\uff0c\u5982\u679c\u6211\u4eec\u628a $1$ \u770b\u505a\u6811\u6839\u7684\u8bdd\uff0c\u90a3\u4e48\u53ea\u6709\u8fd9\u4e9b $b$ \u524d\u7f00\u6700\u5c0f\u7684\u8282\u70b9\u6709\u53f6\u5b50\u8282\u70b9\uff08\u9664\u975e\u5b83\u662f $a$ \u6700\u5927\uff0c$b$ \u6700\u5c0f\uff09\uff0c\u5176\u5b83\u7684\u8282\u70b9\u90fd\u662f\u8fde\u5411\u4e86\u4e00\u4e2a $a, b$ \u90fd\u6bd4\u672c\u8eab\u5c0f\u7684\u7236\u4eb2\uff0c\u5e76\u53ea\u6709\u4e00\u6761\u8fde\u5411\u7236\u4eb2\u7684\u8fb9\uff0c\u4e5f\u5c31\u662f\u53ea\u4f1a\u88ab\u8ba1\u7b97\u4e00\u6b21\u3002\\\n> \u5bf9\u4e8e\u4e3a\u4e86\u8ba9\u8fd9\u4e2a\u8282\u70b9\u548c\u6574\u68f5\u6811\u8054\u901a\u6765\u8bf4\uff0c\u8fd9\u6761\u8fb9\u662f\u4e0d\u52a3\u7684\uff0c\u6ca1\u6709\u6bd4\u5b83\u4ee3\u4ef7\u66f4\u5c0f\u7684\u8fb9\u4e86\u3002\\\n> \u5bf9\u4e8e\u5269\u4e0b\u7684\u8282\u70b9\uff0c\u5f62\u6210\u4e86\u4e00\u4e2a $a$ \u4e0d\u964d\uff0c$b$ \u4e0d\u589e\u7684\u5e8f\u5217\uff0c\u663e\u7136\u6309\u7167\u6211\u4eec\u7684\u987a\u6b21\u8fde\u8fb9\u65b9\u5f0f\uff0c\u53ef\u4ee5\u505a\u5230\u4ee3\u4ef7\u6700\u5c0f\uff08\u6392\u5e8f\u540e\u90fd\u662f\u6700\u5927\u7684 $n - 1$ \u4e2a\u503c\uff0c\u6839\u636e\u4e0a\u6587\uff0c\u8fd9\u662f\u6700\u4f18\u7684\uff09\u3002\\\n> \u4e24\u4e2a\u6700\u4f18\u62fc\u8d77\u6765\uff0c\u5f53\u7136\u8fd8\u662f\u6700\u4f18\u3002\n\n\u5176\u5b9e\u8bc1\u660e 1 \u5c31\u662f\u8003\u573a\u4e0a\u6211\u7684\u601d\u8def\uff0c\u8bc1\u660e 2 \u5c31\u662f\u5b98\u65b9\u9898\u89e3\u3002\n\n\u53ef\u80fd\u5927\u5bb6\u4e92\u76f8\u770b\u5bf9\u65b9\u90fd\u89c9\u5f97\u6709\u70b9\u70e6\u4e0d\u592a\u81ea\u7136\u5427\u3002\u4f46\u662f\u4e24\u79cd\u505a\u6cd5\u672c\u8d28\u4e0a\u662f\u6b8a\u9014\u540c\u5f52\u7684\u5176\u5b9e\u3002\n\n\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u9898\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u74f6\u9888\u5728\u6392\u5e8f\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\n\n#define MAXN 1000001\nstruct Node { int a, b, id; const bool operator < (const Node& k) const { return a < k.a; } } T[MAXN];\n\nstd::vector<std::pair<int, int>> vec;\nint main() {\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(nullptr), std::cout.tie(nullptr);\n\tint N, p = 1; std::cin >> N;\n\tfor (int i = 1; i <= N; ++i) T[i].id = i;\n\tfor (int i = 1; i <= N; ++i) std::cin >> T[i].a;\n\tfor (int i = 1; i <= N; ++i) std::cin >> T[i].b;\n\tstd::sort(T + 1, T + N + 1);\n\tlong long ans = 0;\n\tfor (int i = 2; i <= N; ++i) {\n\t\tvec.push_back({i, p}), ans += T[i].a + std::max(T[i].b, T[p].b);\n\t\tif (T[i].b < T[p].b) p = i;\n\t}\n\tstd::cout << ans << '\\n';\n\tfor (int i = 0; i < N - 1; ++i) \n\t\tstd::cout << T[vec[i].first].id << ' ' << T[vec[i].second].id << '\\n';\n\treturn 0;\n}\n```",
        "postTime": 1682761662,
        "uid": 419487,
        "name": "irris",
        "ccfLevel": 7,
        "title": "P8957 Solution"
    },
    {
        "content": "# \u524d\u8a00\r\n\r\n\u8bc8\u9a97 T2\u3002\r\n\r\n~~\u4f46\u662f\u7531\u4e8e\u88ab T1 \u5361\u4e86 2.5h \u6240\u4ee5\u6ca1\u5199\u5b8c\uff08\uff09~~\r\n\r\n# \u6b63\u6587\r\n\r\n\u8003\u8651\u5148\u6309 $a, b$ \u987a\u5e8f\u4f5c\u5173\u952e\u5b57\u6392\u5347\u5e8f\uff0c\u628a $a_i < a_j$ \u4e14 $b_i < b_j$ \u7684 $j$ \u8fde\u5411 $i$\u3002\u8fd9\u6837\u5b50\u4e00\u5b9a\u4e0d\u52a3\u3002\r\n\r\n\u7136\u540e\u5269\u4e0b\u7684 $K$ \u4e2a\u8611\u83c7\u4e00\u5b9a $a$ \u4e0a\u5347 $b$ \u4e0b\u964d\uff0c\u6240\u4ee5\u76f4\u63a5\u76f8\u90bb\u4e24\u4e2a\u8fde\u8d77\u6765\u5373\u53ef\u3002\r\n\r\n\u590d\u6742\u5ea6 $\\mathcal{O}(N \\log_2 N + N)$\uff0c\u74f6\u9888\u5728\u4e8e\u6392\u5e8f\u548c\u8bfb\u5165\u3002\r\n\r\n# \u4ee3\u7801\r\n\r\n``` cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define ll long long\r\n#define rll register ll\r\n\r\nll N;\r\n\r\nstruct Rushmoon { // Mushroom\r\n    ll a, b, num;\r\n} arr[2000005];\r\n\r\nbool operator < (Rushmoon lhs, Rushmoon rhs) \r\n{\r\n    return lhs.a != rhs.a ? lhs.a < rhs.a : lhs.b < rhs.b;\r\n}\r\n\r\nll ans = 0;\r\n\r\nvector< pair<ll, ll> > edge;\r\n\r\nsigned main()\r\n{\r\n    scanf(\"%lld\", &N);\r\n    for(ll i = 1; i <= N; ++ i) \r\n        scanf(\"%lld\", &arr[i].a), arr[i].num = i;\r\n    \r\n    for(ll i = 1; i <= N; ++ i) \r\n        scanf(\"%lld\", &arr[i].b), arr[i].num = i;\r\n\r\n    sort(arr + 1, arr + N + 1);\r\n    int cnt = 1;\r\n    for(int i = 2; i <= N; ++ i)\r\n    {\r\n        if(arr[i].b >= arr[cnt].b)\r\n        {\r\n            edge.push_back(make_pair(arr[i].num, arr[cnt].num));\r\n            ans += (arr[i].a + arr[i].b);\r\n        }\r\n        else\r\n        {\r\n            arr[++ cnt] = arr[i];\r\n        }\r\n    }\r\n    \r\n    for(int i = 1; i < cnt; ++ i)\r\n    {\r\n        edge.push_back(make_pair(arr[i].num, arr[i + 1].num));\r\n        ans += (max(arr[i].a, arr[i + 1].a) + max(arr[i].b, arr[i + 1].b));\r\n    }\r\n\r\n    printf(\"%lld\\n\", ans);\r\n    for(auto i : edge)\r\n        printf(\"%lld %lld\\n\", i.first, i.second);\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n# \u540e\u8a00\r\n\r\n\u611f\u8c22\u3010\u4e11\u56fd\u3011\u9898\u68ee\u51fa\u9898\u7ec4\u63d0\u4f9b\u7684\u4f18\u8d28\u9898\u76ee\uff01",
        "postTime": 1674128054,
        "uid": 224558,
        "name": "JackMerryYoung",
        "ccfLevel": 5,
        "title": "P8957 \u300cCGOI-3\u300d\u5deb\u6ce1\u5f39\u5f39\u4e50 \u9898\u89e3"
    }
]