[
    {
        "content": "\u4e00\u9053\u6c34\u9898\n\n***\n\n### \u601d\u8def\uff1a\n\n\u770b\u4e86\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c\u76f4\u63a5\u4e8c\u5206+dfs\u53ef\u8fc7\n\n\u4e8c\u5206\u4ece0\u523011\u4ebf\u5de6\u53f3\uff0c\u4eb2\u6d4b\u4ece1\u5f00\u59cb\u6302\u6389\n\ndfs\u65f6\u4e0d\u8981\u56de\u6eaf\uff0c\u76f4\u63a5\u6807\u8bb0\uff0c\u6700\u540e\u7528check\u51fd\u6570\u5224\u65ad\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u5173\u952e\u70b9\uff0c\u4e14\u5b83\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\uff0c\u8fd4\u56de$false$\u3002\u5982\u679c\u6240\u6709\u7684\u90fd\u8bbf\u95ee\u8fc7\uff0c\u8fd4\u56de$true$\u3002\n\n***\n### \u6ce8\u610f\u4e8b\u9879\uff1a\n\n1. \u4e8c\u5206\u8bb0\u5f55\u7b54\u6848\u5f53check\u51fd\u6570\u8fd4\u56de$true$\u65f6\u66f4\u65b0\u4e3amid\uff0c\u4e0d\u8981\u8bb0\u5f55\u4e3al\u6216r\u3002\u4e0d\u4f46\u662f\u8fd9\u9053\u9898\uff0c\u4e8c\u5206\u90fd\u8981\u8fd9\u4e48\u505a\u3002\n\n1. \u5224\u65ad\u96be\u5ea6\u503c\u662f\u5927\u4e8e\u7b49\u4e8e\u800c\u4e0d\u662f\u5927\u4e8e\u3002\n\n***\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(nm)$\uff0c\u7edd\u4e0d\u53ef\u80fd\u70b8\u6389\u3002\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\nint read(){\n   int s = 0,w = 1;\n   char ch = getchar();\n   while(ch < '0' || ch > '9'){if(ch == '-')w = -1;ch = getchar();}\n   while(ch >= '0' && ch <= '9')s = s * 10 + ch - '0',ch = getchar();\n   return s * w;\n}\n\nstruct node{\n\tint x;\n\tint y;\n}e[50010];\n\nint n,m;\nint maps[1010][1010];\nint ans;\nint l,r,mid;\nint cnt;\nint sx,sy;\nint fx[4][2] = {1,0,-1,0,0,1,0,-1};\nbool bk[1010][1010];\nbool bkk[1010][1010];\n\nvoid dfs(int x,int y){\n\t//cout<<\"x = \"<<x<<\" y = \"<<y<<endl;\n\tfor(int i = 0;i <= 3;i ++){\n\t\tint xx = x + fx[i][0];\n\t\tint yy = y + fx[i][1];\n\t\t//cout<<\"xx = \"<<xx<<\" yy = \"<<yy<<endl;\n\t\tif(xx >= 1 && yy >= 1 && xx <= n && yy <= m && !bk[xx][yy]){\n\t\t\tif(abs(maps[xx][yy] - maps[x][y]) <= mid){\n\t\t\t\tbk[xx][yy] = true;\n\t\t\t\tdfs(xx,yy);\n\t\t\t}\n\t\t}\n\t}\n}\n\nbool check(){\n\tmemset(bk,false,sizeof(bk));\n\tbk[sx][sy] = true;\n\tdfs(sx,sy);\n\tfor(int i = 1;i <= n;i ++){\n\t\tfor(int j = 1;j <= m;j ++){\n\t\t\tif(bkk[i][j]){\n\t\t\t\tif(!bk[i][j])return false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nsigned main(){\n\tcin>>n>>m;\n\tfor(int i = 1;i <= n;i ++){\n\t\tfor(int j = 1;j <= m;j ++){\n\t\t\tmaps[i][j] = read();\n\t\t}\n\t}\n\tfor(int i = 1;i <= n;i ++){\n\t\tfor(int j = 1;j <= m;j ++){\n\t\t\tint xx;\n\t\t\txx = read();\n\t\t\tif(xx == 1){\n\t\t\t\tbkk[i][j] = true;\n\t\t\t\tsx = i;\n\t\t\t\tsy = j;\n\t\t\t}\n\t\t}\n\t}\n\tl = 0,r = 2100000000;\n\twhile(l <= r){\n\t\tmid = (l + r) / 2;\n\t\tif(check())r = mid - 1,ans = mid;\n\t\telse l = mid + 1;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\u5b9e\u8bdd\u8bf4\uff0c\u611f\u89c9\u6ca1\u6709\u7eff\u9898\u96be\u5ea6\u3002\n\n\u4ee5\u6b64\u7eaa\u5ff5\u8003\u573a\u4e0a\u7684\u4e00\u9053\u6c34\u9898",
        "postTime": 1601708197,
        "uid": 294562,
        "name": "EDqwq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4955 \u3010[USACO14JAN]Cross Country Skiing S\u3011"
    },
    {
        "content": "\u770b\u4e86\u770b\u5927\u4f6c\u4eec\u7684\u9898\u89e3\u90fd\u662f\u4e8c\u5206\u52a0bfs\uff0c\u7136\u9e45\u53ef\u4ee5\u5199\u5e76\u67e5\u96c6\u3002\u3002\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5411\u5b83\u53f3\u8fb9\u7684\u70b9\u548c\u4e0b\u9762\u7684\u70b9\u8fde\u8fb9\uff0c\u6743\u503c\u5c31\u4e3a\u4e24\u4e2a\u70b9\u7684\u9ad8\u5ea6\u5dee\n\n\u7136\u540e\u518d\u628a\u6240\u6709\u7684\u8fb9\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5e76\u67e5\u96c6\u52a0\u70b9\n\n\u6700\u540e\u5224\u65ad\u5f53\u524d\u96c6\u5408\u662f\u5426\u6db5\u76d6\u6240\u6709\u7684\u822a\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5c31\u8f93\u51fa\u6700\u540e\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u5426\u5219\u5c31\u7ee7\u7eed\u52a0\u70b9\n\n## **Code**:\n```cpp\n#include<bits/stdc++.h>\n#define N 500001\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\nint n,m,t,cnt,tt;ll ans;\nint fa[N],ct[501][501];\nint mp[501][501],sz[N],u[N];\nstruct dqy{ll v;int x,y;}w[N];\ninline bool cmp(dqy a,dqy b){return a.v<b.v;}\nint find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\ninline pii getpos(int num){\n\tint x=num/m+(num%m!=0);\n\tint y=num-(x-1)*m;\n\treturn make_pair(x,y);\n}\nint read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-f;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nsigned main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tmp[i][j]=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tct[i][j]=read(),tt+=ct[i][j];\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(j!=m){\n\t\t\t\tw[++cnt].x=(i-1)*m+j;\n\t\t\t\tw[cnt].y=w[cnt].x+1;\n\t\t\t\tw[cnt].v=abs(mp[i][j]-mp[i][j+1]);\n\t\t\t}\n\t\t\tif(i!=n){\n\t\t\t\tw[++cnt].x=(i-1)*m+j;\n\t\t\t\tw[cnt].y=w[cnt].x+m;\n\t\t\t\tw[cnt].v=abs(mp[i][j]-mp[i+1][j]);\n\t\t\t}\n\t\t}\n\tsort(w+1,w+cnt+1,cmp);\n\tfor(int i=1;i<=n*m;i++) fa[i]=i;\n\tfor(int i=1;i<=n*m;i++){\n\t\tsz[i]=1;pii now=getpos(i);\n\t\tu[i]=ct[now.first][now.second];\n\t}\n\tfor(int i=1;i<=cnt;i++){\n\t\tint x=w[i].x,y=w[i].y;\n\t\tint f1=find(x),f2=find(y);\n\t\tif(f1==f2) continue;\n\t\tsz[f1]+=sz[f2];\n\t\tu[f1]+=u[f2];fa[f2]=f1;\n\t\tif(u[f1]==tt){\n\t\t\tans=w[i].v;\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1551617429,
        "uid": 73702,
        "name": "DQYdqy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4955 \u3010[USACO14JAN]Cross Country Skiing \u8d8a\u91ce\u6ed1\u96ea\u3011"
    },
    {
        "content": "[\u539f\u9898](https://www.luogu.com.cn/problem/P4955)\n\n[\u7ffb\u8bd1\uff0c~~\u4ece\u5b66\u6821OJ\u5077\u6765\u7684~~](https://www.luogu.com.cn/paste/9iqf9z8w)\n\n\u4e4d\u4e00\u770b\uff0c\u8981\u6c42\u6700\u5c0f\u7684\u96be\u5ea6\u503cD\uff0c\u4e8e\u662f\u8003\u8651\u4e8c\u5206\u7b54\u6848 + bfs/dfs\u3002\n\n\u5982\u679c\u4e00\u4e2a\u5173\u952e\u683c$(x,y)$\u80fd\u591f\u5230\u8fbe\u5173\u952e\u683c$(xi,yi)$\u548c$(xj , yj)$\n\n\u90a3\u4e48$(xi,yi)$\u4e5f\u80fd\u901a\u8fc7$(x,y)$\u5230\u8fbe$(xj,yj)$\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u6240\u4ee5\u53ea\u8981\u9a8c\u8bc1\uff1a\n\n$(x,y)$\u662f\u5426\u80fd\u591f\u5230\u8fbe\u6240\u6709\u5176\u4ed6\u5173\u952e\u683c\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(NMlog\\;a[i][j])$\n\n```cpp\n// \u6b64\u5904\u5e94\u6709\u5934\u6587\u4ef6 \nusing namespace std;\nconst int N = 5e2 + 10;\nint n,m;\nint a[N][N]; // \u5b58\u5730\u56fe \nbool vis[N][N]; // \u662f\u5426\u8bbf\u95ee\u8fc7 \nint fsum = 0; // \u5173\u952e\u683c\u6570\u91cf \nbool f[N][N]; // \u662f\u5426\u4e3a\u5173\u952e\u683c \nstruct node\n{\n\tint x,y;\n};\nint dx[] = {0 , 0 , -1 , 1};\nint dy[] = {-1 , 1 , 0 , 0}; // \u79fb\u52a8 \nint sx,sy; // \u5b58\u5176\u4e2d\u4e00\u4e2a\u5173\u952e\u683c\u7684\u4f4d\u7f6e \nbool bfs(int k)\n{\n\tmemset( vis , false , sizeof(vis) );\n\tqueue<node> q; \n\tq.push( (node){sx , sy} );\n\tvis[sx][sy] = true;\n\tint sum = 0; // \u5df2\u7ecf\u8bbf\u95ee\u5230\u591a\u5c11\u4e2a\u5173\u952e\u683c \n\twhile( !q.empty() )\n\t{\n\t\tnode t = q.front();\n\t\tq.pop();\n\t\tif( f[t.x][t.y] )\n\t\t\t++sum;\n\t\tif(sum >= fsum)\n\t\t\treturn true;\n\t\tfor(int i = 0;i < 4;i++)\n\t\t{\n\t\t\tint xx = t.x + dx[i];\n\t\t\tint yy = t.y + dy[i];\n\t\t\tif( xx > 0 && yy > 0 && xx <= n && yy <= m && !vis[xx][yy] )\n\t\t\t{\n\t\t\t\tif( abs( a[t.x][t.y] - a[xx][yy] ) <= k )\n\t\t\t\t{\n\t\t\t\t\tq.push( (node){xx , yy} );\n\t\t\t\t\tvis[xx][yy] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nbool check(int k)\n{\n\tif( !bfs(k) )\n\t\treturn false;\n\treturn true;\n}\nint main()\n{\n\tint l = 0;\n\tint r = 0;\n\tcin >> n >> m;\n\tfor(int i = 1;i <= n;i++)\n\t\tfor(int j = 1;j <= m;j++)\n\t\t{\n\t\t\tcin >> a[i][j];\n\t\t\tr = max(a[i][j] , r); // \u53d6\u5168\u5730\u56fe\u7684\u6700\u9ad8\u70b9\u4f5c\u4e3a\u53f3\u754c\u9650 \n\t\t}\t\n\tfor(int i = 1;i <= n;i++)\n\t\tfor(int j = 1;j <= m;j++)\n\t\t{\n\t\t\tcin >> f[i][j];\n\t\t\tif( f[i][j] )\n\t\t\t{\n\t\t\t\t++fsum;\n\t\t\t\tsx = i,sy = j; // \u5b58\u5176\u4e2d\u4e00\u4e2a\u5173\u952e\u683c\u7684\u4f4d\u7f6e \n\t\t\t}\n\t\t}\n\twhile(l < r) // \u4e8c\u5206\u7b54\u6848 \n\t{\n\t\tint mid = l + r >> 1; // \u53f3\u79fb\u4e00\u4f4d = /2 \n\t\tif( check(mid) )\n\t\t\tr = mid;\n\t\telse\n\t\t\tl = mid + 1;\n\t}\n\tcout << l << endl;\n    return 0;\n}\n```\n",
        "postTime": 1601711066,
        "uid": 203763,
        "name": "iorit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4955 \u3010[USACO14JAN]Cross Country Skiing S\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u5427\u3002\u300210min\u5199\u5b8c\uff0c\u96be\u5ea6\u5927\u6982\u662f\u7eff\u9898  \n\u9898\u610f\u662f\u4f60\u8981\u9009\u5b9a\u4e00\u4e2ad\u503c\uff0c\u4f7f\u5f97\u5728\u9ad8\u5ea6\u5dee\u6700\u5927\u4e3ad\u65f6\u7ed9\u5b9a\u7684\u70b9\u4e92\u76f8\u53ef\u8fbe  \n\u663e\u7136\u53ef\u4ee5\u4e8c\u5206d\uff0c\u7136\u540ebfs\u5224\u65ad\u5373\u53ef\uff08\u6ce8\u610f\uff0c\u4e92\u76f8\u53ef\u8fbe\u5176\u5b9e\u53ea\u7528\u4e00\u4e2a\u70b9\u80fd\u5230\u8fbe\u5176\u4ed6\u70b9\u5373\u53ef,\u8fd9\u70b9\u60f3\u5fc5\u90fd\u80fd\u7406\u89e3\uff09  \n\u590d\u6742\u5ea6$O(nmlog_2w)$  \n\u4ee3\u7801\u5982\u4e0b\uff0c\u5f88\u4e11\uff0c\u5e38\u6570\u4e5f\u5f88\u5927\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=505;\nint a[N][N],b[N][N];\nint vis[N][N];\nint x,y;int n,m;\nint nx[]={0,0,1,-1};\nint ny[]={1,-1,0,0};\nqueue<pair<int,int> > q;\ninline bool check(int mid){\n    memset(vis,0,sizeof(vis));\n    vis[x][y]=1;\n    q.push(make_pair(x,y));\n    while(!q.empty()){\n        pair<int,int> p=q.front();q.pop();\n        int px=p.first,py=p.second;\n        for(int i=0;i<4;i++){\n            int tx=px+nx[i],ty=py+ny[i];\n            if(tx<1||ty<1||tx>n||ty>m) continue;\n            if(!vis[tx][ty]&&abs(a[tx][ty]-a[px][py])<=mid){\n                vis[tx][ty]=1;\n                q.push(make_pair(tx,ty));\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(b[i][j]&&!vis[i][j]) return 0;\n    return 1;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            scanf(\"%d\",&a[i][j]);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++){\n            scanf(\"%d\",&b[i][j]);\n            if(b[i][j]) x=i,y=j;\n        }\n    int l=0,r=1e9+1,mid,ans;\n    while(l<=r){\n        mid=(l+r)>>1;\n        if(check(mid)) r=mid-1,ans=mid;\n        else l=mid+1;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1543124403,
        "uid": 27030,
        "name": "ustze",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4955 \u3010[USACO14JAN]Cross Country Skiing \u8d8a\u91ce\u6ed1\u96ea\u3011"
    },
    {
        "content": "\u697c\u4e0b\u5df2\u7ecf\u8bb2\u5f97\u53ef\u4ee5\u4e86\uff0c\u672c\u849f\u84bb\u518d\u6765\u5b8c\u5584\u4e00\u4e0b\n\n\u8fd9\u9053\u9898\u662f\u6211\u4eec\u7f16\u7a0b\u793e\u8003\u8bd5\u7b2c\u56db\u6b21\u7684\u7b2c\u56db\u9898\uff0c\u81ea\u8ba4\u4e3a\u6bd4\u8f83\u6c34\n\n\u5176\u5b9e\u5427\uff0c\u8fd9\u9053\u9898\u662f\u6211\u5f53\u65f6\u552f\u4e00AC\u7684\u4e00\u9053\u9898\uff08\u5fc3\u9178\uff09\n\n\u4e5f\u6b63\u662f\u56e0\u4e3a\u8fd9\u9053\u9898\uff0c\u6211\u7559\u5728\u4e86\u7f16\u7a0b\u793e\n\n\u9898\u76ee\u5927\u610f\uff1a\n\n\u6709\u4e00\u4e2aM * N\uff082<=n,m<=500\uff09\u7684\u6ed1\u96ea\u573a\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u9ad8\u5ea6\uff0c\u5982\u679c\u76f8\u90bb\u4e24\u4e2a\u70b9\u7684\u9ad8\u5ea6\u5dee\u5c0f\u4e8e\u5b89\u5168\u9ad8\u5ea6d\u5c31\u53ef\u4ee5\u4e92\u76f8\u62b5\u8fbe\uff0c\u5728\u6ed1\u96ea\u573a\u4e0a\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u70b9\uff0c\u8bf7\u95eed\u6700\u5c0f\u662f\u591a\u5c11\u65f6\u53ef\u4ee5\u4f7f\u6bcf\u4e2a\u91cd\u8981\u7684\u70b9\u90fd\u53ef\u4ee5\u4e92\u76f8\u62b5\u8fbe\n\n\u6807\u51c6\u7b54\u6848\uff1a\u4e8c\u5206+BFS\n\n\u770b\u5230\u8fd9\u9053\u9898\uff0c\u5f53\u65f6\u77ac\u95f4\u60f3\u5230\u7684\u662f\u53e6\u4e00\u9053\u9898\uff1a\u57ce\u5e02\u8ddd\u79bb\n\n\u4e24\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u90fd\u662f500*500\uff0c\u800c\u57ce\u5e02\u8ddd\u79bb\u7528\u4e24\u4e2aBFS\u90fd\u80fd\u8fc7\uff0c\u8fd9\u4e2a\u4e8c\u5206+BFS\u80af\u5b9a\u4e5f\u80fd\u8fc7\n\n\u2235log(maxh)=9\n\n\uff08P.S.\u4e8c\u5206\u7684\u8303\u56f4\u662f0~maxh\uff09\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u6253\u51fa\u6b63\u89e3\u4ee3\u7801\u4e86\uff1a\uff1a\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<iostream>\nusing namespace std;\ninline void read(int &x) {\n    x=0;int f=1;char s=getchar();\n    while(s<'0'||s>'9') {\n        if(s=='-')\n            f=-1;\n        s=getchar();\n    }\n    while(s>='0'&&s<='9') {\n        x=x*10+s-48;\n        s=getchar();\n    }\n    x=x*f;\n}\ninline void pr(int x) {\n    if(x<0) {\n        putchar('-');\n        x=-x;\n    }\n    if(x>9)\n        pr(x/10);\n    putchar(x%10+48);\n}//\u5feb\u8bfb\u5feb\u8f93\u4e0d\u89e3\u91ca\nstruct node {\n    int x,y,num;//\u5206\u522b\u8868\u793a\u5750\u6807\u548c\u9ad8\u5ea6\n}a[505][505];\nint flag[505][505],i,n,j,k,m,maxh,zy,xx,yy,X[5]={0,-1,0,1,0},Y[5]={0,0,1,0,-1};\nbool ma[505][505];\ninline int abs(int x) {//\u53bb\u7edd\u5bf9\u503c\n    if(x<0)return -x;return x;\n}\ninline bool check(int sum) {//\u68c0\u67e5\u53ef\u4e0d\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\uff0c\u76f8\u5f53\u4e8eBFS\n    memset(ma,0,sizeof(ma));//\u8bb0\u5f97\u6bcf\u6b21\u7528\u5b8c\u90fd\u8981\u6e05\u7a7a\n    int ls=0;//\u8fd9\u91cc\u7684ls\u662f\u7528\u6765\u526a\u679d\u7684\uff0c\u53ea\u8981\u641c\u5230\u4e86\u6240\u6709\u91cd\u8981\u7684\u70b9\u5c31\u53ef\u4ee5\u7ed3\u675f\u4e86\n    queue<node>q;\n    node t,t1;\n    q.push(a[xx][yy]);//xx\uff0cyy\u8868\u793a\u7684\u662f\u6700\u540e\u4e00\u4e2a\u8f93\u5165\u7684\u91cd\u8981\u70b9\u7684\u5750\u6807\uff0c\u5176\u5b9e\u4e0d\u9700\u8981\u6700\u540e\u4e00\u4e2a\n                      //\u4f46\u4e00\u5b9a\u8981\u4ece\u91cd\u8981\u70b9\u5f00\u59cb\n    ma[xx][yy]=1;\n    while(!q.empty()) {\n        t=q.front();\n        q.pop();\n        for(int o=1;o<5;o++) {\n            t1=t;\n            t1.x+=X[o];\n            t1.y+=Y[o];\n            t1.num=a[t1.x][t1.y].num;\n            if(!ma[t1.x][t1.y]&&abs(a[t1.x][t1.y].num-a[t.x][t.y].num)<=sum) {\n                q.push(t1);\n                ma[t1.x][t1.y]=1;\n                if(flag[t1.x][t1.y]==1)//\u91cd\u8981\u7684\u70b9\n                    ls++;\n            }\n        }\n        if(ls==zy-1)//\u6700\u5f00\u59cb\u7684\u91cd\u8981\u70b9\u6ca1\u7b97\n            return 1;\n    }\n    return 0;\n}\ninline int ef(int l,int r) {\n    if(l==r)\n        return l;\n    int mid;\n    while(l<r) {\n        mid=(l+r)/2;\n        bool f=check(mid);//\u8282\u7701\u65f6\u95f4\u7528\u7684\n        if(f&&!check(mid-1))//\u9ad8\u5ea6\u518d\u5c11\u4e00\u4e2a\u5c31\u4e0d\u884c\u4e86\n            break;//\u5c31\u662f\u6b63\u786e\u7b54\u6848\n        else if(f)//\u4e0d\u7136\u53ef\u4ee5\u518d\u5c0f\n            r=mid;\n        else//\u8fd8\u8981\u589e\u5927\n            l=mid;\n    }\n    return mid;\n}\nint main() {\n    /*freopen(\"skiing.in\",\"r\",stdin);\n    freopen(\"skiing.out\",\"w\",stdout);*/\n    read(n),read(m);\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++)\n            read(a[i][j].num),maxh=max(maxh,a[i][j].num);\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++) {\n            read(flag[i][j]),a[i][j].x=i,a[i][j].y=j;\n            if(flag[i][j]) {\n                zy++;\n                xx=i;\n                yy=j;\n            }\n        }\n    for(i=1;i<=n;i++)\n        a[i][0].num=a[i][m+1].num=2147483647;\n    for(i=1;i<=m;i++)\n        a[0][i].num=a[n+1][i].num=2147483647;\n    pr(ef(0,maxh));\n}\n```\n[\u6211\u7684CSDN\u535a\u5ba2\u94fe\u63a5](https://blog.csdn.net/qq_43890190/article/details/85260435#comments)",
        "postTime": 1545886337,
        "uid": 104822,
        "name": "\u4e0d\u601d\u8fdb\u53d6\u601d\u4f60",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4955 \u3010[USACO14JAN]Cross Country Skiing \u8d8a\u91ce\u6ed1\u96ea\u3011"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\u7ed9\u4f60\u4e00\u4e2a\u6570\u5b57\u77e9\u9635\uff0c\u8ba9\u4f60\u6c42\u51fa\u8981\u5230\u8fbe\u8fd9\u4e2a**\u77e9\u9635**\u4e2d\u7684\u67d0\u51e0\u4e2a\u70b9\uff0c\u884c\u8fdb\u8fc7\u7a0b\u4e2d\u4efb\u610f\u4e24\u6570\u4e4b\u5dee**\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c**\n## \u9898\u76ee\u5206\u6790\n\u6839\u636e\u201c\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\u201d\uff0c\u53ef\u4ee5\u5f97\u51fa\u4f7f\u7528**\u4e8c\u5206**\u3002\uff08\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\uff09\n### PART 1: \u4e3b\u51fd\u6570\n\u4f7f\u7528\u4e8c\u5206\u677f\u5b50\uff1a\n\n```cpp\nlong long low=0, high=1000000000;//\u4e8c\u5206\u6548\u7387\u5f88\u9ad8\uff0c\u4e0d\u59a8\u628alow\u548chigh\u90fd\u8bbe\u4e3a\u6781\u503c\uff08\u6ce8\u610f\u8981\u5f00long long\uff09\nint ans;\nwhile(low<=high)\n{\n\tlong long mid=(low+high)/2;\n\tif(check(mid))\n\t{\n\t\thigh=mid-1;\n\t\tans=mid;\n\t}\n\telse low=mid+1;\n}\ncout<<ans;\n```\n### PART 2: check \u51fd\u6570\u5b9e\u73b0\n\u63a5\u4e0b\u6765\u5c31\u662f check \u51fd\u6570\u7684\u95ee\u9898\u3002\n\n\u5206\u6790\u4e00\u4e0b\u9898\u9762\uff1a\n- \u6709\u77e9\u9635\n- \u6709\u89c4\u5219\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\n- \u8fd8\u6709\u80fd\u8d70\u4e0d\u80fd\u8d70\n- \u6ca1\u6709\u660e\u786e\u7684\u8d77\u70b9\u3001\u7ec8\u70b9\n\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u67d3\u8272\u95ee\u9898 BFS \u554a\uff01\n\n\u6240\u4ee5 check \u51fd\u6570\u53ef\u4ee5\u7528 BFS \u5b9e\u73b0\uff0c\u9700\u8981\u53c2\u6570 $x$ \uff0c\u4ee3\u8868\u4e24\u70b9\u4e4b\u95f4\u6d77\u62d4\u5dee\u7684\u6700\u5927\u503c\u3002\n\n\u7531\u6b64\u53ef\u5f97\u4f2a\u4ee3\u7801\uff1a\n```\ncheck(x):\n\twhile(\u6ca1\u8d70\u5b8c):\n\t\tx->\u4e0b\u4e00\u4e2a\u70b9,y->\u4e0b\u4e00\u4e2a\u70b9;\n\t\tif(\u8d8a\u754c) continue;\n\t\tif(\u8d70\u8fc7) continue;\n\t\tif(\u6d77\u62d4\u5dee>=x) continue;\n\t\tif(\u662f\u5173\u952e\u70b9) \u8bb0\u5f55;\n\t\t\u6807\u8bb0\u8d70\u8fc7;\n\t\t\u8fdb\u961f;\n```\n#### c++\u5b9e\u73b0\n##### \u8981\u7528\u7684\u4e1c\u897f\n\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff1a\n```cpp\nstruct point{\n\tint x,y;//\u6a2a\u7eb5\u5750\u6807\n};\n```\n\u624b\u5199\u961f\u5217\u548c\u89c4\u5219\uff1a\n```cpp\npoint q[1000001],s;\nint front,tail;\nint dx[]={1,-1,0,0}, dy[]={0,0,1,-1};\n```\n\u5224\u91cd\u6570\u7ec4\uff1a\n```cpp\nbool used[1000][1000];\n```\n\n##### \u521d\u59cb\u5316\n```cpp\nmemset(used,0,sizeof(used));\nfront=tail=1;\ns.x=sx,s.y=sy;\nused[s.x][s.y]=1;\nq[1]=s;\n```\n##### \u641c\u7d22\u90e8\u5206\n```cpp\nwhile(front<=tail)\n{\n\tpoint u=q[front++];//\u53d6\u961f\u5934\n\tpoint v;\n\tfor(int i=0; i<4; i++)\n\t{\n\t\tv.x=u.x+dx[i],v.y=u.y+dy[i];//\u6839\u636e\u89c4\u5219\u627e\u80fd\u8d70\u7684\u70b9\n\t\tif(v.x<1||v.x>n||v.y<1||v.y>m) continue;//\u8d8a\u754c\n\t\tif(used[v.x][v.y]) continue;//\u8d70\u8fc7\u4e86\n\t\tif(abs(g[v.x][v.y]-g[u.x][u.y])>x) continue;//\u6d77\u62d4\u5dee\uff08\u201c\u96be\u5ea6\u503c\u201d\uff09\u592a\u5927\uff0c\u4e0d\u8d70\n\t\t\t\n\t\tused[v.x][v.y]=1;//\u8bb0\u5f55\u5df2\u7ecf\u8d70\u8fc7\u4e86\n\t\tif(imp[v.x][v.y]) c--;//\u5982\u679c\u662f\u91cd\u8981\u70b9\uff0c\u8981\u8d70\u7684\u4e2a\u6570\u51cf\u4e00\n\t\tq[++tail]=v;//\u5165\u961f\n\t}\n}\nreturn c==0;//\u8fd4\u56de\u6709\u6ca1\u6709\u8d70\u5b8c\n```\n\u52a0\u4e0a\u8f93\u5165\u8f93\u51fa\u5373\u53ef AC \u3002",
        "postTime": 1631417329,
        "uid": 356003,
        "name": "Xiaohuba",
        "ccfLevel": 7,
        "title": "P4955 \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u6ca1\u6709\u7eff\u8fd9\u4e48\u96be\uff0c\u53ea\u9700\u8981\u4e8c\u5206+\u641c\u7d22\u5c31\u884c\u4e86\u3002\n1. \u8bfb\u5165\u3002\u6ce8\u610f\u5c3d\u91cf\u4e0d\u8981\u7528 `scanf` \u8bfb\u5165 `bool`\uff0c\u8fd9\u597d\u50cf\u662f UB\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf $x$ \u5b58\u8f93\u5165\u7684\u6570\uff0c\u7136\u540e\u76f4\u63a5\u7c7b\u578b\u8f6c\u6362\u3002\n1. \u4e8c\u5206\u3002\u5957\u6a21\u7248\u5c31\u884c\u4e86\uff0c\u7b49\u4e00\u4e0b\u6211\u4eec\u518d\u5199 $\\operatorname{check}()$ \u51fd\u6570\u3002\n1. \u641c\u7d22\u3002\u76f4\u63a5 dfs \u7206\u641c\uff0c\u6ce8\u610f\u6211\u4eec\u53ea\u9700\u8981\u6807\u8bb0\u8fd9\u4e2a\u70b9\u80fd\u4e0d\u80fd\u5230\uff0c\u4e0d\u7528\u56de\u6eaf\u3002\n1. $\\operatorname{check}()$\u3002\u6211\u4eec\u5148\u6e05\u7a7a\u6570\u7ec4\uff0c\u7136\u540e\u968f\u4fbf\u6311\u4e00\u4e2a\u70b9\u5f00\u59cb\u66b4\u641c\uff08\u5b9e\u6d4b $\\operatorname{dfs}(1,1)$ \u80fd\u8fc7\uff09\u3002\u7136\u540e\u4e24\u91cd for \u5faa\u73af\u66b4\u529b\u68c0\u67e5\uff0c\u5982\u679c\u53d1\u73b0\u4e00\u4e2a\u5173\u952e\u70b9\u6ca1\u88ab\u6807\u8bb0\uff0c\u8bf4\u660e\u8fd9\u4e2a\u89e3\u4e0d\u5408\u6cd5\uff0c`return 0`\u3002\u5982\u679c\u5230\u6700\u540e\u8fd8\u6ca1\u6709 `return 0`\uff0c\u8bf4\u660e\u8fd9\u4e2a\u89e3\u5408\u6cd5\uff0c`return 1`\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst int dx[]={0,-1,0,0,1},//\u56db\u65b9\u5411\u6253\u8868\n          dy[]={0,0,-1,1,0};\nint n,m,a[510][510];\nbool vis[510][510],key[510][510];//vis\u6807\u8bb0\uff0ckey\u5173\u952e\u70b9\nint abs(int a){//\u628a\u4e00\u4e9b\u5e38\u7528\u51fd\u6570\u5c01\u4e00\u4e0b\n    return a<0?-a:a;\n}\nbool checkpoint(int x,int y){\n    return 1<=x&&x<=n&&1<=y&&y<=m;\n}\nvoid dfs(int x,int y,int nowans){//\u641c\u7d22\n    for(int i=1;i<=4;i++){\n        int tmpx=x+dx[i],tmpy=y+dy[i];\n        if(checkpoint(tmpx,tmpy)&&!vis[tmpx][tmpy]&&\\\n           abs(a[x][y]-a[tmpx][tmpy])<=nowans){//\u8fd9\u91cc\\\u53ef\u4ee5\u4f7f\u4e0a\u4e0b\u4e24\u884c\u65e0\u7f1d\u8854\u63a5\uff0c\u53ef\u4ee5\u7528\u8fd9\u4e2a\u51cf\u5c11\u4e00\u884c\u7684\u957f\u5ea6\n            vis[tmpx][tmpy]=1;\n            dfs(tmpx,tmpy,nowans);\n          \t//\u4e0d\u7528\u56de\u6eaf\n        }\n    }\n}\nbool check(int nowans){//\u66b4\u529bcheck\n    memset(vis,0,sizeof vis);\n    vis[1][1]=1;//\u6ce8\u610f\u6807\u8bb0\u8d77\u70b9\n    dfs(1,1,nowans);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(key[i][j]&&!vis[i][j]) return 0;\n    return 1;\n}\nint binary(){//\u5957\u6a21\u7248\n    int l=0,r=1e9+10;\n    while(l<=r){\n        int mid=l+r>>1;//1e9+1e9=2e9\u4e0d\u7206int\n        if(check(mid)) r=mid-1;\n        else l=mid+1;\n    }\n    return r+1;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            scanf(\"%d\",&a[i][j]);\n    for(int i=1,x;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            scanf(\"%d\",&x),key[i][j]=x;//\u9632UB\n    printf(\"%d\",binary());\n    return 0;\n}\n```",
        "postTime": 1614391472,
        "uid": 390033,
        "name": "_caiji_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4955 \u3010[USACO14JAN]Cross Country Skiing S\u3011"
    },
    {
        "content": "# \u9898\u89e3 Cross Country Skiing S\n\n[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P4955)\n\n**\u9898\u610f**\uff1a\u7ed9\u5b9a\u4e00\u4e2a $n * m$ \u7684\u77e9\u9635\uff0c\u6bcf\u4e00\u4e2a\u70b9\u4ee3\u8868\u5b83\u7684\u9ad8\u5ea6\uff0c\u4e24\u70b9\u4e4b\u95f4\u7684\u96be\u5ea6\u503c\u4e3a\u4e24\u70b9\u9ad8\u5ea6\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u3002\u4e00\u6761\u8def\u5f84\u7684\u96be\u5ea6\u503c\u662f\u6307\u8be5\u8def\u5f84\u4e0a\u76f8\u90bb\u4e24\u683c\u5b50\u7684\u96be\u5ea6\u503c\u7684\u6700\u5927\u503c\u73b0\u5728\u7ed9\u51fa\u82e5\u5e72\u4e2a\u5173\u952e\u683c\u5b50\uff0c\u6c42\u6240\u6709\u8fd9\u4e9b\u5173\u952e\u683c\u5b50\u76f8\u4e92\u53ef\u8fbe\u7684\u6700\u5c0f\u7684\u96be\u5ea6\u503c\u3002\n\n**\u9898\u89e3**\uff1a\u56e0\u4e3a\u5bf9\u6bcf\u4e2a\u5173\u952e\u70b9\u6c42\u6700\u5c0f\u503c\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u6700\u5c0f\u96be\u5ea6\u503c\uff0c\u6bcf\u4e00\u6b21\u7528 check \u51fd\u6570\u65f6\uff0c\u5c31\u4ee5 mid \u4e3a\u4e00\u4e2a\u96be\u5ea6\u503c\u7684\u9650\u5b9a\uff0c\u6bcf\u6761\u8def\u5f84\u7684\u96be\u5ea6\u503c\u4e0d\u53ef\u4ee5\u8d85\u8fc7 mid \uff08\u6700\u5c0f\u96be\u5ea6\u503c\uff09\uff0c\u518d\u8fdb\u884c [DFS](https://blog.csdn.net/qq_41759198/article/details/81501764?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160169259219724836734464%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=160169259219724836734464&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v3~pc_rank_v2-2-81501764.first_rank_ecpm_v3_pc_rank_v2&utm_term=DFS&spm=1018.2118.3001.4187) \u3002\u8fd9\u6837\uff0c\u5982\u679c\u6700\u540e\u6df1\u641c\u65f6\u904d\u5386\u5230\u4e86\u6bcf\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u8bf4\u660e\u53ef\u4ee5\u8fbe\u6210\u6761\u4ef6\uff0c\u7ee7\u7eed\u4e8c\u5206\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e8c\u5206\u6c42**\u6574\u6570**\u6700\u5c0f/\u6700\u5927\u503c\u7684\u6a21\u677f\uff1a\n\n\u6700\u5c0f\u503c\uff1a\n```cpp\nwhile (l < r) {\n\tint mid = (l + r) / 2;\n\tif (check(mid)) r = mid;\n\telse l = mid + 1;\n}\n//\u6700\u540el\u5c31\u662f\u7b54\u6848\uff0ccheck\u81ea\u5df1\u5199 \n```\n\n\u6700\u5927\u503c\uff1a\n\n```cpp\nwhile (l < r) {\n\tint mid = (l + r + 1) / 2;\n\tif (check(mid)) l = mid;\n\telse r = mid - 1;\n}\n//\u6700\u540el\u5c31\u662f\u7b54\u6848\uff0ccheck\u81ea\u5df1\u5199\n```\n\n\n# _Code:_\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,vis[510][510];\nint a[1010][1010];\nint op[510][510],ans,s;\nint dx[] = {0,0,-1,1};//\u65b9\u5411\u6570\u7ec4\nint dy[] = {-1,1,0,0};\n\nvoid dfs(int x,int y,int mid) {\n\tans += op[x][y];//\u7d2f\u8ba1\uff0c\u5982\u679c\u662f\u5173\u952e\u70b9\u5c31\u52a0\u4e86\u4e00 \n\tfor (int i = 0;i < 4;i ++ ) {\n\t\tint nx = x + dx[i];//\u6df1\u641c\u677f\u5b50 \n\t\tint ny = y + dy[i];\n\t\tif (nx < 1 || ny < 1 || nx > n || ny > m){\n\t\t\tcontinue;//\u8fb9\u754c \n\t\t}\n\t\tif (vis[nx][ny]) continue;\n\t\tif (abs(a[x][y] - a[nx][ny]) <= mid) {\n\t\t\t//\uff08\u91cd\u8981\uff01\uff09mid\u7684\u9650\u5236\u6761\u4ef6 \n\t\t\tvis[nx][ny] = 1;\n\t\t\tdfs(nx,ny,mid);//\u7ee7\u7eed\u9012\u5f52 \n\t\t}\n\t}\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i = 1;i <= n;i ++ ) {\n\t\tfor (int j = 1;j <= m;j ++ ) {\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tint sx,sy;\n\tfor (int i = 1;i <= n;i ++ ) {\n\t\tfor (int j = 1;j <= m;j ++ ) {\n\t\t\tscanf(\"%d\",&op[i][j]);\n\t\t\tif (op[i][j]) {\n\t\t\t\t//\u4ece\u4efb\u4f55\u4e00\u4e2a\u5173\u952e\u70b9\u51fa\u53d1\u90fd\u884c\n\t\t\t\tsx = i;//\u8bb0\u5f55\u8d77\u70b9 \n\t\t\t\tsy = j;\n\t\t\t}\n\t\t\ts += op[i][j];//\u7edf\u8ba1\u6709\u591a\u5c11\u4e2a\u5173\u952e\u70b9 \n\t\t}\n\t}\n\tint l = 0,r = 1000000000;//\u9898\u76ee\u8981\u6c42\u627e\u6700\u5c0f\u503c \n\twhile (l < r) {\n\t\tmemset(vis,0,sizeof vis);\n\t\tint mid = (l + r) / 2;\n\t\tans = 0;\n\t\tvis[sx][sy] = 1;\n\t\tdfs(sx,sy,mid);\n\t\tif (ans == s) r = mid;\n\t\t//\u628a\u6240\u6709\u5173\u952e\u70b9\u4fbf\u5229\u8fc7\u4e86\uff0c\u5c31\u662fcheck\u6210\u529f \n\t\telse l = mid + 1;\n\t}\n\tprintf(\"%d\",l);//\u7b54\u6848 \n\treturn 0;\n}\n```\n\n# END",
        "postTime": 1601714211,
        "uid": 94777,
        "name": "Jsxts_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4955 \u3010[USACO14JAN]Cross Country Skiing S\u3011"
    },
    {
        "content": "### \u4e8c\u5206+DFS\n\n\u770b\u5230\u8fd9\u4e48\u591a\u5927\u4f6c\u5199\u4e86\u5e76\u67e5\u96c6\uff0cBFS\u7684\uff0c\u8fd8\u6ca1\u6709\u4eba\u5199DFS\u7248\u7684\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u8981\u6765\u6c34\u6c34\u79ef\u5206\u7684\u5566~~\u6bd5\u7adf\u8fd9\u53ef\u662f\u9053\u4f2a\u7d2b\u9898\u5462~~!\n\n\u505a\u6cd5\u697c\u4e0a\u697c\u4e0b\u4e5f\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\u5427\uff0c\u8be6\u89c1\u4ee3\u7801\u7684\u6ce8\u91ca\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool taofen_boys[510][510];//\u4f60\u53ef\u4ee5\u7406\u89e3\u4e3atf[][]\n//\u662f\u5426\u9700\u8981\u8d70\u5230 (\u4e0d\u8981\u6253\u6211\nint Map[510][510];\n//\u5b58\u6bcf\u4e2a\u70b9\u7684\u9ad8\u5ea6\nbool vis[510][510];//\u662f\u5426\u8bbf\u95ee\u5230\nint n,m;\nint sx,sy;\n//\u8d77\u70b9\nint dx[5]={0,0,0,1,-1};\nint dy[5]={0,1,-1,0,0};\nint mid;\nvector<pair<int,int> >flag;\n//\u7528\u4e8e\u5b58\u9700\u8981\u8d70\u5230\u7684\u70b9\ninline int read()\n{\n    int tot=0;\n    char c=getchar();\n    while(c<'0'||c>'9')\n        c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        tot=tot*10+c-'0';\n        c=getchar();\n    }\n    return tot;\n}\ninline void DFS(int x,int y)\n{\n\t//cout<<x<<\" \"<<y<<endl;\n\tfor(int i=1;i<=4;i++)//\u56db\u4e2a\u65b9\u5411\u679a\u4e3e\n\t{\n\t\tint a=x+dx[i],b=y+dy[i];\n\t\t//cout<<a<<\" \"<<b<<endl;\n\t\tif(a<1||b<1||a>n||b>m||vis[a][b])continue;\n\t\tif(abs(Map[a][b]-Map[x][y])>mid)continue;//\u662f\u5426\u6ee1\u8db3\u8981\u6c42\n\t\tvis[a][b]=1;\n\t\tDFS(a,b);\n     //\u8fd9\u91cc\u4e0d\u7528\u56de\u6eaf\n\t}\n}\ninline bool check()\n{\n\tmemset(vis,0,sizeof(vis));\n\tvis[sx][sy]=1;\n\tDFS(sx,sy);\n\t/*for(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)cout<<vis[i][j]<<\" \";\n\t\tcout<<endl;\n\t}*/\n\tfor(int i=0;i<flag.size();i++)\n\t{\n\t\tint tx=flag[i].first,ty=flag[i].second;\n\t\tif(!vis[tx][ty])return 0;\n        //\u5224\u65ad\u662f\u5426\u8d70\u8fc7\n\t}\n\treturn 1;\n}\nint main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)Map[i][j]=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\ttaofen_boys[i][j]=read();\n\t\t\tif(taofen_boys[i][j])\n\t\t\t{\n\t\t\t\tsx=i,sy=j;//\u8d77\u70b9\u968f\u4fbf\u8bb0\u5f55\u4e00\u4e2a\u5c31\u884c\u4e86\n\t\t\t\tflag.push_back(make_pair(i,j));\n\t\t\t}\n\t\t}\n\t/*mid=5000000;\n\tcheck();*/\n\tint l=0,r=1000000000,ans=0;\n\twhile(l<=r)//\u4e8c\u5206\u7b54\u6848\n\t{\n\t\tmid=l+r>>1;\n\t\t//cout<<l<<\" \"<<r<<\" \"<<mid<<\" \"<<ans<<\" \"<<check()<<endl;\n\t\tif(check())r=mid-1,ans=mid;\n\t\telse l=mid+1;\n\t}\n\tcout<<ans<<endl;\n   \treturn 0;\n}\n```",
        "postTime": 1558415467,
        "uid": 107468,
        "name": "hulean",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4955 \u3010[USACO14JAN]Cross Country Skiing \u8d8a\u91ce\u6ed1\u96ea\u3011"
    },
    {
        "content": "\u5f88\u660e\u663e\uff0c\u8fd9\u4e2a\u9898\u548c\u56fe\u8bba\u6709\u5173\n\n\u80fd\u4ece\u4e00\u4e2a\u683c\u5b50\u6ed1\u5230\u53e6\u4e00\u4e2a\u683c\u5b50\n\n\u4e0d\u5c31\u662f\u4ece\u4e00\u4e2a\u70b9\u8d70\u5230\u53e6\u4e00\u4e2a\u70b9\u561b\n\n\u7136\u540e\u6211\u7ffb\u4e86\u4e00\u4e0b\n\n**~~\u7adf\u7136\u6ca1\u6709\u7528\u6700\u77ed\u8def\u505a\u7684\u9898\u89e3~~**\n\n~~\u7136\u540e\u6211\u5c31\u6765\u4e86~~\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e2a\u662f\u4e00\u4e2a\u5355\u6e90\u6700\u77ed\u8def\n\n\u53ea\u8981\u968f\u4fbf\u4ece\u4e00\u4e2a\u91cd\u8981\u70b9\u51fa\u53d1\uff0c\u627e\u5230\u5230\u5176\u4ed6\u91cd\u8981\u70b9\u7684\u96be\u5ea6\u6700\u5927\u503c\uff0c\u5c31\u662f\u7b54\u6848\n\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u7528\u5355\u6e90\u6700\u77ed\u8def\u5462\uff1f\n\n\u9996\u5148\u4ece\u4e00\u4e2a\u91cd\u8981\u70b9\u51fa\u53d1\uff0c\u8fd9\u4e2a\u91cd\u8981\u70b9\u5c31\u5df2\u7ecf\u8d70\u8fc7\u4e86\n\n\u8d70\u7b2c\u4e8c\u4e2a\u91cd\u8981\u70b9\uff0c\u66f4\u65b0\u7b54\u6848\n\n\u5f53\u6211\u4eec\u8981\u627e\u7b2c\u4e09\u4e2a\u91cd\u8981\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u600e\u4e48\u4ece\u7b2c\u4e8c\u4e2a\u91cd\u8981\u70b9\u8d70\u5230\u7b2c\u4e09\u4e2a\u91cd\u8981\u70b9\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u65e0\u82b1\u8d39\u56de\u5230\u7b2c\u4e00\u4e2a\u91cd\u8981\u70b9\n**\u56e0\u4e3a\u8def\u5f84\u76f8\u540c\uff0c\u8ba1\u7b97\u6700\u5927\u503c\u4e3a\u96be\u5ea6**\n\n\u6240\u4ee5\u56de\u5230\u7b2c\u4e00\u4e2a\u91cd\u8981\u70b9\u4e0d\u9700\u8981\u82b1\u8d39\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u627e\u5230\u7b2c\u4e00\u4e2a\u91cd\u8981\u70b9\u5230\u7b2c\u4e09\u4e2a\u91cd\u8981\u70b9\u7684\u6700\u77ed\u8def\uff0c\u66f4\u65b0\u7b54\u6848\n\n\u5982\u6b64\u7c7b\u63a8\n\n\u4e3a\u4ec0\u4e48\u4e0d\u627e\u7b2c\u4e8c\u4e2a\u70b9\u5230\u7b2c\u4e09\u4e2a\u70b9\u7684\u8def\u5f84\u5462\uff1f\n\n\u6211\u4eec\u77e5\u9053\u7b2c\u4e00\u4e2a\u70b9\u5230\u7b2c\u4e09\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\n\u548c\u7b2c\u4e8c\u4e2a\u70b9\n\u7684\u5173\u7cfb\u53ea\u6709\u4e24\u79cd\n\n1. \u7b2c\u4e00\u4e2a\u70b9\u5230\u7b2c\u4e09\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u5305\u542b\u7b2c\u4e8c\u4e2a\u70b9\n2. \u7b2c\u4e00\u4e2a\u70b9\u5230\u7b2c\u4e09\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u4e0d\u5305\u542b\u7b2c\u4e8c\u4e2a\u70b9\n\n\u5bf9\u4e8e\u60c5\u51b51\uff0c\u65e2\u7136\u5305\u542b\u7b2c\u4e8c\u4e2a\u70b9\uff0c\u800c\u4e14\u9898\u76ee\u5b9a\u4e49\u7684\u8ddd\u79bb\u662f\u8def\u5f84\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6839\u636e\n$$\n\\displaystyle \\max(\\max_{x\\leq i \\leq y}\\{a_i\\},\\max_{y \\leq j \\leq z}\\{a_j\\}) = \\max_{x \\leq i \\leq z}\\{a_i\\}\n$$\n\n\u6240\u4ee51\u52303\u7684\u6700\u77ed\u8def\u5f84\u5c31\u662f\n\n1\u52302\u7684\u6700\u77ed\u8def\u5f84\n\n2\u52303\u7684\u6700\u77ed\u8def\u5f84\n\n\u53d6\u6700\u5927\u503c\n\n\u5982\u679c\u4ece2\u51fa\u53d1\uff0c\u867d\u7136\u6709\u53ef\u80fd\u52303\u7684\u8def\u5f84\u5c0f\u4e8e1\u52303\u7684\u8def\u5f84\n\n\u4f46\u662f\u59cb\u7ec8\u6211\u4eec\u8fd8\u8981\u4ece2\u52301\n\n\u6700\u7ec8\u7684\u7b54\u6848\u8fd8\u662f\u8981\u6709\n\n1\u52302\u7684\u6700\u77ed\u8def\u5f84\n\n2\u52303\u7684\u6700\u77ed\u8def\u5f84\n\n\u53d6\u6700\u5927\u503c\n\n\u5bf9\u4e8e\u60c5\u51b52\n\n\u53ef\u4ee5\u8bc1\u660e\u4ece2\u52303\u7684\u6700\u77ed\u8def\u5f84\u5fc5\u5b9a\u7ecf\u8fc71\n\n\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\n\n\t\u7531\u9898\u77e51\u52303\u7684\u6700\u77ed\u8def\u5f84\u4e0d\u7ecf\u8fc72\n        \u5982\u679c2\u52303\u7684\u6700\u77ed\u8def\u5f84\u4e0d\u7ecf\u8fc71\n        \u5373\u4ece2\u52303\u4e0d\u7ecf\u8fc71\u4e0a\u7684\u6240\u6709\u8def\u5f84\n        \u90fd\u6bd4\n        \u4ece2\u7ecf\u8fc71\u52303\u4e0a\u7684\u6240\u6709\u8def\u5f84\n        \u77ed\n        \n        \u5373\u4ece2\u52303\u4e0d\u7ecf\u8fc71\u4e0a\u7684\u6240\u6709\u8def\u5f84\n        \u90fd\u6bd4\n        \u4ece2\u52301\u7684\u6240\u6709\u8def\u5f84\u548c\u4ece1\u52303\u4e0a\u7684\u6240\u6709\u8def\u5f84\n        \u77ed\n        \n        \u90a3\u4e481\u52303\u7684\u6700\u77ed\u8def\u5f84\u5c31\u5e94\u8be5\u662f\u4ece1\u51fa\u53d1\u7ecf\u8fc72\u518d\u52303\n        \u4e8e\u9898\u8bbe\u4e0d\u7b26\n        \u65452\u52303\u7684\u6700\u77ed\u8def\u5f84\u5fc5\u5b9a\u7ecf\u8fc71\n        \n\u7efc\u4e0a\u6240\u8ff0\uff0c\u51fa\u53d1\u70b9\u7684\u9009\u62e9\u548c\u4e2d\u9014\u662f\u5426\u8fd4\u56de\u51fa\u53d1\u70b9\u5bf9\u4e8e\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\n\n~~\u8bf4\u4e86\u8fd9\u4e48\u591a\u7ec8\u4e8e\u80fd\u8fdb\u5165\u6b63\u9898\u4e86~~\n\n\u6211\u4eec\u65e2\u7136\u77e5\u9053\u4e86\u8fd9\u9898\u662f\u6700\u77ed\u8def**\u53d8\u5f0f**\n\n\u90a3\u4e48\u5c31\u8981\u8003\u8651\u7528\u4ec0\u4e48\u7b97\u6cd5\n\n\u5e73\u5747\u6bcf\u4e2a\u70b9\u5927\u7ea6\u90fd\u4f1a\u67094\u6761\u51fa\u8fb9\uff0c4\u6761\u5165\u8fb9\u76f8\u8fde\n\n\uff08\u8fb9\u633a\u591a\u7684\uff09\n\n\u5f15\u7528\u4e00\u53e5\u8bdd\uff1a\n\ndwj\uff1aspfa\u660e\u660e\u662fO(nm)\u7684\uff0c\u8bf4spfa\u662fO(nk)\u7684\u90fd\u662f\u5728\u653ep\n\n\u65e2\u7136spfa\u4e0d\u80fd\u7528\uff0c\u6ca1\u6709\u8d1f\u8fb9\u6743\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u4f1f\u5927\u7684dijkstra+\u5c0f\u6839\u5806\n\n\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u4e0d\u52a0\u5806\u4f18\u5316\u4f1a\u53d1\u751f\u4ec0\u4e48\uff09\n\n\u8fd9\u9053\u9898\u548c\u666e\u901a\u6700\u77ed\u8def\u7684\u4e0d\u540c\u5c31\u5728\u4e8e\u8981\u628a\u666e\u901a\u6700\u77ed\u8def\u7684\n$$\ndis_u + edge_{u, v} < dis_v\n$$\n\u6539\u6210\n$$\n\\max(dis_u, edge_{u, v}) < dis_v\n$$\n\u5176\u4ed6\u90fd\u4e0d\u53d8\uff0c\u7167\u5e38\u8dd1dijkstra\u5c31\u597d\u4e86\n\n\u5c0f\u5c0f\u7684\u4f18\u5316\uff1a\u54c8\u5e0c\n\n\u6211\u4eec\u4e00\u822c\u4e60\u60ef\u4e86\u6700\u77ed\u8def\u662f\u4e00\u4e2a\u70b9\n\n\u73b0\u5728\u4ed6\u662f\u4e8c\u7ef4\u600e\u4e48\u529e\uff1f\n\n\u54c8\u5e0c\u5e2e\u4f60\u89e3\u51b3\n\n\u53ea\u9700\u8981\u5b9a\u4e49\u70b9$(x, y)$\u7684\u7f16\u53f7\u4e3a$x*n+y$\u5373\u53ef\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <queue>\n#include <algorithm>\ntemplate <typename T>\ninline T max(T a, T b)\n{\n    return a > b ? a : b;\n}\ntemplate <typename T>\ninline void read(T &x)\n{\n    x = 0;\n    char ch = getchar();\n    while(ch > '9' or ch < '0') ch = getchar();\n    while(ch >= '0' and ch <= '9')\n    {\n        x = (x << 1) + (x << 3) + (ch ^ 48);\n        ch = getchar();\n    }\n}\ntemplate <typename T>\ninline T read()\n{\n    T x = 0;\n    char ch = getchar();\n    while(ch > '9' or ch < '0') ch = getchar();\n    while(ch >= '0' and ch <= '9')\n    {\n        x = (x << 1) + (x << 3) + (ch ^ 48);\n        ch = getchar();\n    }\n    return x;\n}\ntemplate <typename T>\ninline void write(T x)\n{\n    if(x > 9) write(x / 10);\n    putchar(x % 10 + 48);\n}\nint n, m, dep[250001], dis[250001], vis[250001], tot, head[250001], imp[250001];\ninline int hash(int a, int b) // \u806a\u660e\u7684\u54c8\u5e0c \n{\n    return a * n + b;\n}\ninline std::pair<int, int> hsah(int k) // \u901a\u8fc7\u54c8\u5e0c\u503c\u6c42\u539f\u6765\u7684\u5750\u6807\uff08\u867d\u7136\u597d\u50cf\u6ca1\u548b\u7528\uff09 \n{\n    return std::make_pair(k / n, k % n);\n}\nstruct Edge //\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe \n{\n    int u, v, w;\n}edge[250001 << 3];\ninline void add(int a, int b, int c) // \u52a0\u8fb9\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u90fd\u5411\u5916\u6269\u5f204\u6761\u8fb9\uff0c\u6240\u4ee5\u52a0\u6709\u5411\u8fb9 \n{\n    edge[++tot] = (Edge){head[a], b, c};\n    head[a] = tot;\n}\ninline void dij(int);\nint main()\n{\n    read(m); read(n);\n    for(int i = 0; i < m; i++)\n    {\n        for(int j = 0; j < n; j++)\n        {\n            read(dep[hash(i, j)]);\n        }\n    }\n    for(int i = 0; i < m; i++)\n    {\n        for(int j = 0; j < n; j++)\n        {\n        \t// \u5982\u679c\u8fd9\u4e2a\u70b9\u7684\u4e0a/\u4e0b/\u5de6/\u53f3\u6ca1\u6709\u8282\u70b9\uff0c\u5c31\u4e0d\u80fd\u52a0\u8fb9\uff0c\u5426\u5219\u4f1a\u53d1\u751f\u7384\u5b66\u9519\u8bef \n            if(i != 0) add(hash(i, j), hash(i - 1, j), abs(dep[hash(i, j)] - dep[hash(i - 1, j)]));\n            if(j != 0) add(hash(i, j), hash(i, j - 1), abs(dep[hash(i, j)] - dep[hash(i, j - 1)]));\n            if(i != m - 1) add(hash(i, j), hash(i + 1, j), abs(dep[hash(i, j)] - dep[hash(i + 1, j)]));\n            if(i != n - 1) add(hash(i, j), hash(i, j + 1), abs(dep[hash(i, j)] - dep[hash(i, j + 1)]));\n        }\n    }\n    tot = 0;\n    for(int i = 0; i < m; i++)\n    {\n        for(int j = 0; j < n; j++)\n        {\n            if(read<int>()) imp[++tot] = hash(i, j); // \u6807\u8bb0\u91cd\u8981\u70b9 \n        }\n    }\n    dij(imp[1]); // \u8dd1dijkstra \n    register int ans = 0;\n    for(int i = 1; i <= tot; i++) ans = max(ans, dis[imp[i]]); // \u66f4\u65b0\u7b54\u6848 \n    write(ans);\n    putchar(10);\n    return 0;\n}\ninline void dij(int k)\n{\n    for(int i = 0; i < m; i++)\n    {\n        for(int j = 0; j < n; j++)\n        {\n            dis[hash(i, j)] = 2147483647;\n            vis[hash(i, j)] = 0;\n        }\n    }\n    dis[k] = 0;\n    // \u5c0f\u6839\u5806 \n    std::priority_queue < std::pair <int, int>, std::vector< std::pair <int, int> >, std::greater< std::pair <int, int> > > Hp;\n    Hp.push(std::make_pair(0, k)); \n    while(not Hp.empty())\n    {\n        register int i = Hp.top().second;\n        Hp.pop();\n        if(vis[i]) continue;\n        vis[i] = true;\n        for(int j = head[i]; j; j = edge[j].u)\n        {\n            const int ds = max(dis[i], edge[j].w);\n            // \u5982\u679c\u6709\u96be\u5ea6\u503c\u66f4\u5c0f\u7684\u8def\u7ebf \n            if(dis[edge[j].v] >= ds)\n            {\n                dis[edge[j].v] = ds;\n                if(not vis[edge[j].v]) Hp.push(std::make_pair(dis[edge[j].v], edge[j].v));\n            }\n        }\n    }\n}\n```",
        "postTime": 1604571110,
        "uid": 192989,
        "name": "\u4ea6\u95fb\u695a\u6b4c\u8d77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4955 \u3010[USACO14JAN]Cross Country Skiing S\u3011"
    }
]