[
    {
        "content": "**2021/8/29 Update\uff1a\u4fee\u6539\u4e86\u9898\u89e3\u4e2d\u7684\u4e24\u5904\u9519\u8bef\uff0c\u5e76\u5728\u201c\u94fe\u5f0f\u524d\u5411\u661f\u201d\u90e8\u5206\u52a0\u4e0a\u4e86\u90e8\u5206\u6ce8\u91ca\u3001\u589e\u52a0\u4e86\u5efa\u8fb9\u51fd\u6570**\n## 1.\u9898\u610f\n\u7ed9\u51fa\u4e00\u5f20\u6709 $n$ \u4e2a\u8282\u70b9\uff0c$m$ \u6761**\u6709\u5411\u8fb9**\u7684\u56fe\uff0c\u6c42 $1$ \u53f7\u70b9\u5230\u56fe\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u3002\n## 2.\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\n\u7ed9\u5b9a\u4e00\u4e2a\u6e90\u70b9\uff08\u6b64\u9898\u4e2d\u4e3a $1$ \u53f7\u70b9\uff09\uff0c\u6c42\u4ece\u8fd9\u4e2a\u6e90\u70b9\u5230\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u63a5\u4e0b\u6765\u5148\u8003\u8651\u600e\u4e48\u628a\u8fd9\u4e2a\u6709\u5411\u56fe\u5b58\u4e0b\u6765\u3002\n\n\u7528\u4e8c\u7ef4\u6570\u7ec4\uff08\u8bbe $a_{i,j}$ \u4e3a\u70b9 $i$ \u5230\u70b9 $j$ \u7684\u8ddd\u79bb\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n^2)$\uff09\u5b58\u56fe\uff1f\u80af\u5b9a\u4e0d\u884c\uff0c\u9898\u76ee\u89c4\u5b9a $n\\le3\\times10^5$\uff0c\u59a5\u59a5\u7684 MLE\u3002\n\n\u6240\u4ee5\u5c31\u6709\u4e86\u8fd9\u4e2a\u4e1c\u897f\u2014\u2014\n## 3.\u94fe\u5f0f\u524d\u5411\u661f\n\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u662f\u4e00\u79cd\u5229\u7528\u5355\u5411\u94fe\u8868\u5b58\u56fe\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\u90a3\u4e48\u5b83\u957f\u4ec0\u4e48\u6837\u5462\uff1f\n\n![lsqxx](https://cdn.luogu.com.cn/upload/image_hosting/ur2t5u4a.png?x-oss-process=image/resize,m_lfit,h_500,w_800)\n\n\u5176\u5b9e\u5b83\u5c31\u662f $n$ \u4e2a\u5355\u5411\u94fe\u8868\uff0c\u7b2c $i$ \u4e2a\u5355\u5411\u94fe\u8868\u5b58\u50a8\u4ece\u70b9 $i$ \u5f00\u59cb\u7684\u6bcf\u6761\u8fb9\u6240\u6307\u5411\u7684\u70b9\uff08\u56fe\u4e2d\u7684 to\uff09\u4ee5\u53ca\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\uff08\u56fe\u4e2d\u7684 weight\uff09\u3002\n\n\u7136\u540e\u628a\u6bcf\u4e2a\u94fe\u8868\u7684\u5934\u90e8\u7528\u4e00\u4e2a head \u6570\u7ec4\u5b58\u8d77\u6765,\u5982\u679c\u8981\u904d\u5386\u67d0\u4e2a\u70b9\u5f00\u59cb\u7684\u6240\u6709\u8fb9\uff0c\u76f4\u63a5\u5199\n```cpp\nfor(int i=head[x];i;i=next[i])//\u904d\u5386\u6bcf\u4e00\u6761\u8fb9\n\n```\n\u5c31\u884c\u4e86\u3002\n\n\u90a3\u4e48\u5982\u4f55\u52a0\u8fb9\u5462\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728\u94fe\u8868\u7684\u5934\u90e8\u63d2\u5165\uff0c\u5c31\u50cf\u8fd9\u6837\uff1a\n```cpp\nnext[++t]=head[x];//\u8bb0\u5f55\u540e\u7ee7\nto[t]=y;//\u8bb0\u5f55\u8fd9\u6761\u8fb9\u6307\u5411\u7684\u5730\u65b9\nweight[t]=z;//\u8bb0\u5f55\u8fb9\u6743\nhead[x]=t;//\u66f4\u65b0\u94fe\u8868\u5934\u90e8\n```\n\u5b58\u56fe\u7684\u95ee\u9898\u662f\u89e3\u51b3\u4e86\uff0c\u4f46\u600e\u4e48\u6c42\u6700\u77ed\u8def\u5462\uff1f\n\n\u5982\u679c\u7528 Dfs \u66b4\u641c\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n!)$\uff0c\u7a33\u7a33\u7684 TLE\u3002\n\n\u7528 Floyd\uff08\u5176\u5b9e\u5c31\u662f DP\uff09\u6765\u505a\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3)$\uff0c\u4e5f\u4f1a TLE\u3002\n\n\u4e8e\u662f\uff0c\u5c31\u6709\u4e86\u8fd9\u4e48\u4e00\u4e2a\u7b97\u6cd5\uff1a\n## 4.Dijkstra \u6c42\u6700\u77ed\u8def\nDijkstra \u5355\u6e90\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u662f\u4e00\u79cd\u7528\u8d2a\u5fc3\u5b9e\u73b0\u7684\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u53ea\u80fd\u5728\u8fb9\u6743\u503c\u5747\u4e3a\u6b63\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u53ea\u80fd\u5728\u8fb9\u6743\u503c\u4e3a\u6b63\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\uff0c\u7b49\u4e00\u4e0b\u4f1a\u63d0\u5230\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u7528\u4e00\u4e2a $\\textit{dis}$ \u6570\u7ec4\u5b58\u50a8\u4ece\u6e90\u70b9\uff08\u8fd9\u91cc\u4e3a\u70b9 $1$\uff09\u5230\u56fe\u4e2d\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002\n\n\u5148\u6765\u770b\u4e00\u4e0b\u7b97\u6cd5\u6d41\u7a0b\uff1a\n![dij1](https://cdn.luogu.com.cn/upload/image_hosting/46zkciaj.png?x-oss-process=image/resize,m_lfit,h_500,w_800)\n\n\u521d\u59cb\u5316\uff0c\u628a $\\textit{dis}_1$\uff08\u6e90\u70b9\u5230\u6e90\u70b9\u672c\u8eab\uff09\u8bbe\u4e3a $0$\uff0c$\\textit{dis}$ \u7684 \u5176\u4f59\u503c\u8bbe\u4e3a $\\infty$\uff1b\n\n![dij2](https://cdn.luogu.com.cn/upload/image_hosting/vmkv79yy.png?x-oss-process=image/resize,m_lfit,h_500,w_800)\n\n\u627e\u5230 $\\textit{dis}$ \u6570\u7ec4\u7684\u6700\u5c0f\u503c\u6240\u5728\u7684\u4e0b\u6807 $1$\uff0c\u5c06\u5176\u6253\u4e0a\u6807\u8bb0\uff0c\u5e76\u7528\u70b9 $1$ \u7684 $\\textit{dis}$ \u503c\u53bb\u66f4\u65b0\u5b83\u5468\u56f4\u7684\u70b9\u7684 $\\textit{dis}$ \u503c\uff0c\u4f7f\u5f97 $\\textit{dis}_2$ \u66f4\u65b0\u4e3a $3$\uff0c$\\textit{dis}_3$ \u66f4\u65b0\u4e3a $2$\uff0c$\\textit{dis}_5$ \u66f4\u65b0\u4e3a $6$\uff1b\n\n\u8fd9\u91cc\u6211\u628a $\\textit{dis}_1$ \u7684\u6570\u503c\u4ee5\u53ca\u70b9 $1$ \u6807\u84dd\u4e86\uff0c\u662f\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5df2\u7ecf\u88ab\u6c42\u51fa\u6765\u4e86\uff0c\u6240\u4ee5\u4ee5\u540e\u4e0d\u518d\u66f4\u65b0\u8fd9\u4e2a\u70b9\u7684 $\\textit{dis}$ \u503c\u3002\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u518d\u66f4\u65b0\u8fd9\u4e2a\u70b9\u7684 $\\textit{dis}$ \u503c\uff0c\u7b49\u4e00\u4e0b\u8bb2\u8d1f\u8fb9\u6743\u7684\u65f6\u5019\u4f1a\u8bb2\u3002~~\uff08\u8fd9\u53e5\u8bdd\u4f60\u4e0d\u5df2\u7ecf\u8bf4\u8fc7\u4e00\u904d\u4e86\u5417\u2026\u2026\uff09~~\n\n\u70b9 $2$\u3001\u70b9 $3$ \u548c\u70b9 $5$ \u56e0\u4e3a\u88ab\u70b9 $1$ \u6210\u529f\u66f4\u65b0\u4e86 $\\textit{dis}$ \u503c\uff0c\u6240\u4ee5\u6211\u628a\u5b83\u4eec\u7684 $\\textit{dis}$ \u503c\u6807\u9ec4\u4e86\u3002\n\n\u70b9 $4$ \u548c\u70b9 $6$ \u7531\u4e8e\u6ca1\u6709\u88ab\u904d\u5386\u5230\uff0c\u6240\u4ee5\u6211\u628a\u5b83\u4eec\u7684 $\\textit{dis}$ \u503c\u6807\u9ed1\u4e86\u3002\n\n![dij3](https://cdn.luogu.com.cn/upload/image_hosting/p3w1woi5.png?x-oss-process=image/resize,m_lfit,h_500,w_800)\n\n\u627e\u5230 $\\textit{dis}$ \u6570\u7ec4**\u6ca1\u6253\u8fc7\u6807\u8bb0**\u7684\u6700\u5c0f\u503c\u6240\u5728\u7684\u7684\u4e0b\u6807 $3$\uff0c\u5c06\u5176\u6253\u4e0a\u6807\u8bb0\uff0c\u5e76\u7528\u70b9 $3$ \u7684 $\\textit{dis}$ \u503c\u53bb\u66f4\u65b0\u5b83\u5468\u56f4**\u6ca1\u6253\u8fc7\u6807\u8bb0**\u7684\u70b9\u7684 $\\textit{dis}$ \u503c\uff0c\u4f7f\u5f97 $\\textit{dis}_5$ \u66f4\u65b0\u4e3a $3$\uff0c$\\textit{dis}_6$ \u66f4\u65b0\u4e3a $7$\u3002\n\n\u70b9 $1$ \u56e0\u4e3a\u5df2\u7ecf\u88ab\u6253\u4e0a\u6807\u8bb0\u4e86\uff0c\u6240\u4ee5\u4e0d\u7528\u66f4\u65b0\u5b83\u7684 $\\textit{dis}$ \u503c\u3002\n\n\u70b9 $2$ \u56e0\u4e3a\u6ca1\u88ab\u70b9 $3$ \u66f4\u65b0\u5230 $\\textit{dis}$ \u503c\uff0c\u6240\u4ee5\u6211\u8fd9\u91cc\u628a\u4ed6\u6807\u7ea2\u4e86\u3002\n\n![dij4](https://cdn.luogu.com.cn/upload/image_hosting/g3ktgglc.png?x-oss-process=image/resize,m_lfit,h_500,w_800)\n\n\u627e\u5230 $\\textit{dis}$ \u6570\u7ec4\u6ca1\u6253\u8fc7\u6807\u8bb0\u7684\u6700\u5c0f\u503c\u6240\u5728\u7684\u7684\u4e0b\u6807 $2$\uff0c\u5c06\u5176\u6253\u4e0a\u6807\u8bb0\uff0c\u5e76\u7528\u70b9 $2$ \u7684 $\\textit{dis}$ \u503c\u53bb\u66f4\u65b0\u5b83\u5468\u56f4\u6ca1\u6253\u8fc7\u6807\u8bb0\u7684\u70b9\u7684 $\\textit{dis}$ \u503c\uff0c\u4f7f\u5f97 $\\textit{dis}_4$ \u66f4\u65b0\u4e3a $10$\u3002\n\n![dij5](https://cdn.luogu.com.cn/upload/image_hosting/cvfnbgj3.png?x-oss-process=image/resize,m_lfit,h_500,w_800)\n\n\u627e\u5230 $\\textit{dis}$ \u6570\u7ec4\u6ca1\u6253\u8fc7\u6807\u8bb0\u7684\u6700\u5c0f\u503c\u6240\u5728\u7684\u7684\u4e0b\u6807 $5$\uff0c\u5c06\u5176\u6253\u4e0a\u6807\u8bb0\uff0c\u5e76\u7528\u70b9 $5$ \u7684 $\\textit{dis}$ \u503c\u53bb\u66f4\u65b0\u5b83\u5468\u56f4\u7684\u6ca1\u6253\u8fc7\u6807\u8bb0\u70b9\u7684 $\\textit{dis}$ \u503c\uff0c~~\u7136\u800c\u5e76\u6ca1\u6709\u66f4\u65b0\u5230\u4efb\u4f55\u70b9\u7684 $\\textit{dis}$ \u503c~~\u3002\n\n![dij6](https://cdn.luogu.com.cn/upload/image_hosting/q26lp5gz.png?x-oss-process=image/resize,m_lfit,h_500,w_800)\n\n\u627e\u5230 $\\textit{dis}$ \u6570\u7ec4\u6ca1\u6253\u8fc7\u6807\u8bb0\u7684\u6700\u5c0f\u503c\u6240\u5728\u7684\u7684\u4e0b\u6807 $6$\uff0c\u5c06\u5176\u6253\u4e0a\u6807\u8bb0\uff0c\u5e76\u7528\u70b9 $6$ \u7684 $\\textit{dis}$ \u503c\u53bb\u66f4\u65b0\u5b83\u5468\u56f4\u7684\u6ca1\u6253\u8fc7\u6807\u8bb0\u70b9\u7684 $\\textit{dis}$ \u503c\uff0c~~\u4f46\u4ecd\u7136\u6ca1\u6709\u66f4\u65b0\u5230\u4efb\u4f55\u70b9\u7684 $\\textit{dis}$ \u503c~~\u3002\n\n\u53e6\u5916\u70b9 $2$ \u5230\u70b9 $6$ \u4e4b\u95f4\u90a3\u6761\u8fb9\u7684\u6743\u503c\u662f $8$\uff0c\u6211\u753b\u56fe\u7684\u65f6\u5019\u6f0f\u4e86\u2026\u2026\n\n![dij7](https://cdn.luogu.com.cn/upload/image_hosting/584eabu8.png?x-oss-process=image/resize,m_lfit,h_500,w_800)\n\n\u627e\u5230 $\\textit{dis}$ \u6570\u7ec4\u6ca1\u6253\u8fc7\u6807\u8bb0\u7684\u6700\u5c0f\u503c\u6240\u5728\u7684\u7684\u4e0b\u6807 $4$\uff0c\u5c06\u5176\u6253\u4e0a\u6807\u8bb0\uff0c\u5e76\u7528\u70b9 $4$ \u7684 $\\textit{dis}$ \u503c\u53bb\u66f4\u65b0\u5b83\u5468\u56f4\u7684\u6ca1\u6253\u8fc7\u6807\u8bb0\u70b9\u7684 $\\textit{dis}$ \u503c\uff0c~~\u7ed3\u679c\u8fd8\u662f\u6ca1\u6709\u66f4\u65b0\u5230\u4efb\u4f55\u70b9\u7684 $\\textit{dis}$ \u503c~~\u3002\n\n\u6240\u6709\u7684\u70b9\u90fd\u5df2\u7ecf\u88ab\u6253\u4e0a\u4e86\u6807\u8bb0\uff0c\u7b97\u6cd5\u7ed3\u675f\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u7b97\u6cd5\u662f\u6b63\u786e\u7684\u5462\uff1f\n\n\u56e0\u4e3a\u4f60\u628a\u4e00\u4e2a\u70b9\u6253\u4e0a\u6807\u8bb0\u540e\uff0c\u5982\u679c\u8fd9\u6761\u8def\u4e0d\u662f\u6700\u77ed\u8def\uff0c\u90a3\u5c31\u5fc5\u987b\u5f97\u4ece\u5176\u4ed6\u7684\u5730\u65b9\u7ed5\u8fc7\u6765\uff0c\u800c\u8fd9\u6837\u6c42\u51fa\u6765\u7684\u8def\u7684\u957f\u5ea6\u4e00\u5b9a\u6bd4\u7528 Dijkstra \u6c42\u51fa\u6765\u7684\u8def\u8981\u957f\u3002\n\n\u9664\u975e\u8fd9\u6761\u8def\u4e0a\u6709\u8d1f\u8fb9\u6743\uff0c\u4e0d\u7136\u4f60\u600e\u6837\u4e5f\u4e0d\u53ef\u80fd\u8ba9\u8fd9\u6761\u8def\u53d8\u6210\u6700\u77ed\u8def\u3002\n\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 Dijkstra \u4e0d\u80fd\u8dd1\u8d1f\u6743\u56fe\u7684\u539f\u56e0\u3002\uff08\u6ed1\u7a3d\uff09\n\n\u4f46\u662f\u9898\u76ee\u89c4\u5b9a $1\\le w\\le10^7$\uff0c\u6ca1\u6709\u8d1f\u8fb9\u6743\u554a\uff01\uff08\u54c8\u54c8\u54c8\uff09\n\n\u597d\u7684\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u5f00\u5fc3\u5fc3\u5730 AC \u4e86\u8fd9\u9053\u9898\u2026\u2026\n\n\u4e86\u5417\uff1f\n\n\u5f53\u7136\u4e0d\u3002\n\n\u7531\u4e8e Dijkstra \u7b97\u6cd5\u67e5\u627e $\\textit{dis}$ \u503c\u7684\u6700\u5c0f\u503c\u7684\u4e0b\u6807\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\uff0c\u800c\u67e5\u627e\u4e0b\u6807\u65f6\u4e00\u5171\u8981\u67e5\u627e $O(n)$ \u6b21\uff0c\u66f4\u65b0\u6bcf\u4e2a\u8282\u70b9\u7684 $\\textit{dis}$ \u503c\u65f6\u4e00\u5171\u53c8\u8981 $O(m)$ \u6b21\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2+m)$\uff0c\u8fd8\u662f\u8fc7\u4e0d\u4e86\u2026\u2026\n\n\u90a3\u4e48\uff0c\u600e\u4e48\u4f18\u5316\u8fd9\u4e2a\u7b97\u6cd5\u5462\uff1f\n## 5.Dijkstra\u7b97\u6cd5\u7684\u4f18\u5316\n\u6ce8\u610f\u6bcf\u6b21\u67e5\u627e\u6700\u5c0f\u503c\u7684\u65f6\u5019\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f $O(n)$ \u7684\uff0c\u7b97\u6cd5\u7684\u74f6\u9888\u5c31\u5728\u8fd9\u91cc\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u5c31\u628a\u8fd9\u4e9b\u88ab\u66f4\u65b0\u7684\u70b9\u6254\u8fdb\u67d0\u4e00\u4e2a\u795e\u5947\u6570\u636e\u7ed3\u6784\u91cc\uff0c\u4e4b\u540e\u53ea\u8981\u5bf9\u7740\u8fd9\u4e2a\u795e\u5947\u6570\u636e\u7ed3\u6784\u95ee\u4e00\u53d1\uff1a\u6b64\u65f6 $\\textit{dis}$ \u6570\u7ec4\u91cc\u6ca1\u88ab\u6253\u4e0a\u6807\u8bb0\u7684\u6700\u5c0f\u503c\u7684\u4e0b\u6807\u662f\u591a\u5c11\uff0c\u518d\u628a\u8fd9\u4e2a\u70b9\u62c9\u51fa\u6765\uff0c\u628a\u66f4\u65b0\u540e\u7684\u70b9\u6254\u8fdb\u53bb\u5c31\u884c\u4e86~\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\u8fd9\u4e2a\u795e\u5947\u6570\u636e\u7ed3\u6784\u53eb\u4ec0\u4e48\u5462\uff1f\n\n\u4e8c\u53c9\u5806\u554a\uff01\n\n\u5f53\u628a\u7b26\u5408\u8981\u6c42\u7684\u90a3\u4e2a\u70b9\u5f39\u51fa\u5806\u540e\uff0c\u5c31\u628a\u5176\u4ed6\u66f4\u65b0\u540e\u7684\u70b9\u6254\u8fdb\u5806\u4e2d\uff1b\n\n\u7531\u4e8e\u6254\u8fdb\u53bb\u7684\u70b9\u7684 $\\textit{dis}$ \u503c\u4e00\u5b9a\u6bd4\u539f\u5148\u5728\u5806\u91cc\u7684\u8fd9\u4e2a\u70b9\u7684 $\\textit{dis}$ \u503c\u8981\u5c0f\uff08\u5c31\u662f\u957f\u6c5f\u540e\u6d6a\u63a8\u524d\u6d6a\uff09\uff0c\u6240\u4ee5\u539f\u5148\u5728\u5806\u91cc\u7684\u90a3\u4e9b\u70b9\u53ef\u4ee5\u4e0d\u7528\u7ba1\u5b83\uff0c\u56e0\u6b64\u5982\u679c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u88ab\u5f39\u51fa\u8fc7\uff08\u5c31\u662f\u88ab\u6807\u8bb0\u8fc7\uff09\u5c31\u76f4\u63a5\u8df3\u8fc7\u3002/xyx\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m\\log m)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u81f3\u4e8e\u5806\u7684\u5199\u6cd5\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b[P3378\u7684\u9898\u89e3](https://www.luogu.com.cn/problem/solution/P3378)\u3002\n## 6.Code\n\u7ec8\u4e8e\u53ef\u4ee5\u4e0a\u4ee3\u7801\u4e86\u2026\u2026\n\n\u4e0d\u8fc7\u6211\u8fd9\u91cc\u81ea\u5df1\u624b\u5199\u4e86\u4e00\u4e2a\u5806\u548c\u4e00\u4e2a pair\uff0c\u5b9e\u9645\u4e0a\u4e5f\u53ef\u4ee5\u7528 STL \u7684 priority_queue\uff0c~~\u4f46\u6211\u4e0d\u60f3\u7528\u2026\u2026~~\n\n```cpp\n#include<cstring>\n#include<cstdio>\n#include<cctype>\n#define ll long long\nusing namespace std;\nconst int N=300003,M=5555555;\ntemplate<class T>inline void swap(T &x,T &y){T z=x;x=y,y=z;}//\u4ea4\u6362\u51fd\u6570\nnamespace io{\n\tinline int Read(){//\u5feb\u901f\u8bfb\u5165\u6570\u5b57\n\t\tint x=0;\n\t\tbool d=0;\n\t\tchar c=getchar();\n\t\tfor(;!isdigit(c);c=getchar())if(c=='-')d=1;\n\t\tfor(;isdigit(c);c=getchar())x=(x<<3)+(x<<1)+(c^48);\n\t\tif(d)x=~x+1;\n\t\treturn x;\n\t}\n\tinline void Print(ll x){//\u5feb\u901f\u8f93\u51fa\u6570\u5b57\n\t\tif(x){\n\t\t\tif(x<0)x=~x+1,putchar('-');\n\t\t\tshort a[22],l;\n\t\t\tfor(l=0;x;x/=10)a[++l]=x%10;\n\t\t\tfor(;l;--l)putchar(a[l]+48);\n\t\t}\n\t\telse putchar('0');\n\t\tputchar(' ');\n\t}\n}\nnamespace Classes{\n\tint nxt[N],to[N],w[N],h[N],t;//\u94fe\u5f0f\u524d\u5411\u661f\n\tinline void AE(int x,int y,int z){//\u52a0\u8fb9\u64cd\u4f5c\n\t\tnxt[++t]=h[x];\n\t\tto[t]=y;\n\t\tw[t]=z;\n\t\th[x]=t;\n\t}\n\ttemplate<class T1,class T2>\n\tclass Pair{//\u81ea\u5df1\u624b\u5199\u7684pair\uff0c\u4e5f\u53ef\u4ee5\u7528STL\u7684pair\n\tpublic:\n\t\tT1 x;\n\t\tT2 y;\n\t\tinline bool operator<(const Pair<T1,T2>b)const{return x==b.x?y<b.y:x<b.x;}//\u6392\u5e8f\u51fd\u6570\n\t};\n\ttemplate<class T1,class T2>\n\tinline Pair<T1,T2> Make_Pair(T1 x,T2 y){//\u628a\u4e24\u4e2a\u5143\u7d20\u505a\u6210\u4e00\u4e2apair\n\t\tPair<T1,T2>a;\n\t\ta.x=x,a.y=y;\n\t\treturn a;\n\t}\n\ttemplate<class T>\n\tclass Priority_Queue{//\u624b\u5199\u5806\uff0c\u4e5f\u53ef\u4ee5\u7528STL\u7684priority_ueue\n\tprivate:\n\t\tT q[N];\n\t\tint l;\n\t\tinline void Up(int x){\n\t\t\tint y=x>>1;\n\t\t\twhile(y&&q[x]<q[y]){\n\t\t\t\tswap(q[x],q[y]);\n\t\t\t\tx=y,y=x>>1;\n\t\t\t}\n\t\t}\n\t\tinline void Down(int x){\n\t\t\tint y=x<<1;\n\t\t\twhile(y<=l){\n\t\t\t\tif(y<l&&q[y+1]<q[y])++y;\n\t\t\t\tif(q[y]<q[x])swap(q[x],q[y]),x=y,y=x<<1;\n\t\t\t\telse break;\n\t\t\t}\n\t\t}\n\tpublic:\n\t\tPriority_Queue(){l=0;}\n\t\tinline bool Empty(){return l==0;}\n\t\tinline void Clear(){l=0;}\n\t\tinline void Push(T x){q[++l]=x,Up(l);}\n\t\tinline void Pop(){q[1]=q[l--],Down(1);}\n\t\tinline T Top(){return q[1];}\n\t};\n}\nusing namespace io;\nusing namespace Classes;\nll d[N];//dis\u6570\u7ec4\uff0c\u6ce8\u610f\u4e00\u5b9a\u8981\u5f00long long\nbool b[N];//\u6253\u6807\u8bb0\u7684\u6570\u7ec4\nPriority_Queue<Pair<ll,int> >q;\ninline void Dijkstra(){\n\tmemset(d,63,sizeof(d));//\u521d\u59cb\u5316\n\td[1]=0;//\u8ba9\u6e90\u70b91\u7684dis\u503c\u4e3a0\n\tint x,y,z;\n\tq.Push(Make_Pair(0ll,1));//\u628a\u6e90\u70b9\u63d2\u5165\u5806\u4e2d\uff08\u5047\u88c5\u4f60\u5df2\u7ecf\u66f4\u65b0\u8fc7\u4e86\u6e90\u70b9\u7684dis\u503c\uff09\n\twhile(!q.Empty()){\n\t\tx=q.Top().y,q.Pop();\n\t\tif(b[x])continue;//\u5982\u679c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u88ab\u5f39\u51fa\u8fc7\u5c31\u8df3\u8fc7\n\t\tb[x]=1;//\u5426\u5219\u5c31\u7ed9\u5b83\u6253\u4e0a\u6807\u8bb0\n\t\tfor(int i=h[x];i;i=nxt[i]){\n\t\t\ty=to[i],z=w[i];\n\t\t\tif(d[y]>d[x]+z){//\u5982\u679c\u8fd9\u4e2a\u70b9\u7684dis\u503c\u4e0d\u662f\u6700\u4f18\u7684\n\t\t\t\td[y]=d[x]+z;//\u66f4\u65b0\u8fd9\u4e2a\u70b9\u7684dis\u503c\n\t\t\t\tq.Push(Make_Pair(d[y],y));//\u628a\u66f4\u65b0\u540e\u7684\u70b9\u63d2\u5165\u5806\u4e2d\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tint n=Read(),m=Read(),x,y,z;\n\tfor(int i=1;i<=m;i++)x=Read(),y=Read(),z=Read(),AE(x,y,z);\n\tDijkstra();\n\tfor(int i=1;i<=n;i++)Print(d[i]>=0x3f3f3f3f3f3f3f3fll?-1:d[i]);//\u4e09\u5143\u8fd0\u7b97\u7b26\uff0c\u5982\u679c\u67d0\u4e2a\u70b9\u7684dis\u503c\u6ca1\u88ab\u66f4\u65b0\u8fc7\uff08\u5c31\u662fdis\u503c\u8fd8\u662f\u521d\u59cb\u5316\u7684\u90a3\u4e2a\u503c\uff09\uff0c\u76f4\u63a5\u8f93\u51fa-1\n\t//\u5426\u5219\u8f93\u51fa\u8fd9\u4e2a\u70b9\u7684dis\u503c\n\treturn 0;\n}\n```\n## 7.\u4e00\u4e9b\u95f2\u8bdd\n\u53ef\u80fd\u4f1a\u6709\u4eba\u5c31\u4f1a\u95ee\u4e86\uff1aSTL \u8fd9\u4e48\u597d\u7528\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u7528 STL \u5462\uff1f\n\n\u56e0\u4e3a STL \u7684\u5806\u4f7f\u7528\u7684\u6570\u7ec4\u662f\u52a8\u6001\u5f00\u7a7a\u95f4\u7684 vector\uff0c\u800c\u52a8\u6001\u5f00\u7a7a\u95f4\u53c8\u5f88\u6162\uff0c\u56e0\u6b64\u6700\u597d\u80fd\u4e0d\u7528 STL \u5c31\u4e0d\u7528 STL\u3002\n\n\u53e6\u5916\u8fd8\u6709\u4e00\u4e2a\u53eb SPFA \u7684\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(km)$\uff0c\u5176\u4e2d $k$ \u4e3a\u5e38\u6570\uff0c\u5e73\u5747\u503c\u4e3a $2$\uff0c\u5728\u968f\u673a\u6570\u636e\u4e0b\u6781\u5feb\u3002\n\n\u90a3\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u7528 SPFA \u505a\u8fd9\u9053\u9898\u5462\uff1f\n\n\u56e0\u4e3a SPFA \u5728\u67d0\u4e9b\u7279\u6b8a\u6784\u9020\u7684\u6570\u636e\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u4ece $O(km)$ \u9000\u5316\u6210 $O(nm)$\uff0c\u800c\u6b64\u9898\u7684 $n$ \u548c $m$ \u7684\u6700\u5927\u503c\u90fd\u4e3a $3\\times10^5$\uff0c\u56e0\u6b64\u4f1a\u8d85\u65f6\u3002\n\n\u6240\u4ee5 NOI2018 \u5c31\u51fa\u4e86\u8fd9\u6837\u4e00\u4e2a\u6897\uff1a/doge\n\n![SPFA died](https://cdn.luogu.com.cn/upload/pic/26431.png?x-oss-process=image/resize,m_lfit,h_500,w_800)",
        "postTime": 1625317017,
        "uid": 285373,
        "name": "Night_Voyager",
        "ccfLevel": 0,
        "title": "B3602 [\u56fe\u8bba\u4e0e\u4ee3\u6570\u7ed3\u6784 202] \u6700\u77ed\u8def\u95ee\u9898_2 \u9898\u89e3"
    },
    {
        "content": "# B3602 \u6700\u77ed\u8def\u95ee\u9898_2\n\n[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/B3602)\n\n**\u6700\u77ed\u8def**\u88f8\u9898\u3002\n\n\u8fd9\u91cc\u4ecb\u7ecd 3 \u79cd\u6c42\u6700\u77ed\u8def\u7684\u7b97\u6cd5\uff1a\n\n1\u3001**Floyd**\n\n\u8fd9\u662f\u4e00\u79cd\u6c42**\u591a\u6e90\u6700\u77ed\u8def\u5f84**\u7684\u7b97\u6cd5\uff0c\u8fd0\u7528\u4e86 dp \u7684\u601d\u60f3\u3002\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nfor(int k=1;k<=n;k++)\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tdis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n```\n\n\u8fd9\u79cd\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3)$\uff0c\u663e\u7136\u4f1a **TLE** \uff0c\u4e14\u539f\u9898\u53ea\u9700\u6c42 1 \u53f7\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u591a\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\u5b8c\u5168\u6ca1\u5fc5\u8981\u3002\n\n2\u3001**SPFA**\n\n\u8fd9\u662f\u4e00\u79cd**\u5355\u6e90\u6700\u77ed\u8def\u5f84**\u7684\u7b97\u6cd5\uff0c\u8fd0\u7528\u4e86\u8d2a\u5fc3\u7684\u601d\u60f3\u3002\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nvoid spfa(int s){\n\tfor(int i=1;i<=n;i++)\n\t\tdis[i]=inf;\n\tint u,v;\n\tq.push(s);\n\tdis[s]=0;\n\tvis[s]=true;\n\twhile(!q.empty()){\n\t\tu=q.front();\n\t\tq.pop();\n\t\tvis[u]=0;\n\t\tfor(int i=head[u];i;i=h[i].next){\n\t\t\tv=h[i].to;\n\t\t\tif(dis[v]>dis[u]+h[i].w){\n\t\t\t\tdis[v]=dis[u]+h[i].w;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\u8fd9\u79cd\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u662f $O(kE)$\uff0ck \u662f\u5e38\u6570\u3002\u770b\u8d77\u6765\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u4ed6\u6700\u574f\u60c5\u51b5\u4e0b\u662f $O(VE)$\uff0c\u5728\u8fd9\u9053\u9898\u7684[\u5f31\u5316\u7248](https://www.luogu.com.cn/problem/B3601)\u53ef\u4ee5\u901a\u8fc7\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u4f1a\u5361 SPFA\uff0c\u4f7f\u6211\u4eec **TLE**\u3002\n\n3\u3001**Dijkstra \u5806\u4f18\u5316**\n\n\u539f\u7248 Dijkstra \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\uff0c\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7528\u5230 **priority_queue\uff08\u4f18\u5148\u961f\u5217\uff09**\uff0c\u624d\u53ef\u901a\u8fc7\u6b64\u9898\u3002\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nvoid Dijkstra(int s){\n\t\n\tdis[s]=0;\n\tpq.push((qwq){0,s});\n\t\n\twhile(!pq.empty()){\n\t\t\n\t\tf=pq.top();\n\t\tpq.pop();\n\t\tint u=f.now;\n\t\tif(vis[u])continue;\t\n\t\tvis[u]=1;\n\t\t\n\t\tfor(int i=head[u];i;i=h[i].next){\n\t\t\tint v=h[i].to;\n\t\t\tif(dis[v]>dis[u]+h[i].w){\n\t\t\t\tdis[v]=dis[u]+h[i].w;\n\t\t\t\tif(!vis[v])\n\t\t\t\t\tpq.push((qwq){dis[v],v});\n\t\t\t}\n\t\t}\n\t\t\t\n\t}\n\t\n}\n```\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u5f88\u7b80\u5355\u7684\u901a\u8fc7\u5566\u3002\n\n _**My code**_ \n \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n\nusing namespace std;\n\n#define int long long //\u6ce8\u610flong long\n\nint read(){\n    int x=0,k=1; char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')k=-1;c=getchar();}\n    while(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n    return x*k;\n} //\u5feb\u8bfb\n\nconst int inf=0x7fffffffffffffff; //long long\u7684INF\nint n,m,s,tot,dis[300005],head[300005];\nbool vis[300005];\nstruct node{\n\tint next,to,w;\n}h[1000005];\nstruct qwq{\n\tint dis,now;\n\tbool operator<(const qwq &x)const{return x.dis<dis;} //\u91cd\u8f7d\u8fd0\u7b97\u7b26\n}f,v;\npriority_queue<qwq>pq; //\u4f18\u5148\u961f\u5217\n\nvoid add(int u,int v,int w){\n\t\n\ttot++;\n\th[tot].next=head[u];\n\th[tot].to=v;\n\th[tot].w=w;\n\thead[u]=tot;\n\t\n} //\u90bb\u63a5\u8868\n\nvoid Dijkstra(int s){\n\t\n\tdis[s]=0;\n\tpq.push((qwq){0,s});\n\t\n\twhile(!pq.empty()){\n\t\t\n\t\tf=pq.top();\n\t\tpq.pop();\n\t\tint u=f.now;\n\t\tif(vis[u])continue;\t\n\t\tvis[u]=1;\n\t\t\n\t\tfor(int i=head[u];i;i=h[i].next){\n\t\t\tint v=h[i].to;\n\t\t\tif(dis[v]>dis[u]+h[i].w){\n\t\t\t\tdis[v]=dis[u]+h[i].w;\n\t\t\t\tif(!vis[v])\n\t\t\t\t\tpq.push((qwq){dis[v],v});\n\t\t\t}\n\t\t}\n\t\t\t\n\t}\n\t\n} //Dijkstra\u7b97\u6cd5\n\nsigned main(){\n\t\n\tn=read();\n\tm=read();\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tdis[i]=inf; //\u521d\u59cb\u5316\n\t\n\tint u,v,w;\n\t\n\tfor(int i=1;i<=m;i++){\n\t\tu=read();\n\t\tv=read();\n\t\tw=read();\n\t\tadd(u,v,w);\n\t} //\u5b58\u56fe\n\t\n\tDijkstra(1);\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%lld \",dis[i]==inf?-1:dis[i]); //\u8f93\u51fa\n\treturn 0;\n\t\n}\n```\n\n",
        "postTime": 1627652240,
        "uid": 420692,
        "name": "Leonid",
        "ccfLevel": 0,
        "title": "B3602 [\u56fe\u8bba\u4e0e\u4ee3\u6570\u7ed3\u6784 202] \u6700\u77ed\u8def\u95ee\u9898_2 \u9898\u89e3"
    },
    {
        "content": "Upd 2022.7.25\uff1a\u589e\u52a0 SPFA \u7684\u89e3\u6cd5\u3002\n\nUpd 2023.2.23\uff1a\u4fee\u6539\u6b63\u786e\u6027\u8bc1\u660e\u4e2d\u90e8\u5206\u9519\u8bef\u5185\u5bb9\u3002\n\n\n# \u9898\u76ee\u63cf\u8ff0\n\u9898\u610f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8ba9\u4f60\u901a\u8fc7\u7a0b\u5e8f\u6c42\u51fa\u4ece\u7ed3\u70b9 $1$ \u5230\u5176\u4ed6\u8282\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n# \u601d\u8def\n\u672c\u9898\u505a\u6cd5\u9887\u591a\uff0c\u8fd9\u91cc\u91cd\u70b9\u4ecb\u7ecd\u6548\u7387\u6700\u9ad8\u7684 Dijkstra \u5806\u4f18\u5316\u7b97\u6cd5\u3002\n\n## Dijkstra \u5806\u4f18\u5316\u7b97\u6cd5\nDijkstra \u5806\u4f18\u5316\u7b97\u6cd5\u662f\u4e00\u79cd\u5728**\u6709\u5411\u65e0\u73af\u56fe**\u4e0a\u6c42\u6700\u77ed\u8def\u7684\u7b97\u6cd5\uff0c\u662f\u76ee\u524d\u6c42**\u6700\u77ed\u8def\u6548\u7387\u6700\u9ad8\u7684\u7b97\u6cd5**\u3002\n\n\u5728\u8bb2 Dijkstra \u5806\u4f18\u5316\u7b97\u6cd5\u524d\uff0c\u6211\u4eec\u8981\u5148\u4e86\u89e3\u4e00\u4e2a\u64cd\u4f5c\uff1a**\u677e\u5f1b\u64cd\u4f5c**\u3002\n\n\u8bbe $d_i$ \u4e3a\u4ece\u7ed3\u70b9 $1$ \u5230\u7ed3\u70b9 $i$ \u7684\u6700\u77ed\u8def\uff0c\u5e76\u4e14\u73b0\u5728\u6709\u4e24\u4e2a\u7ed3\u70b9 $u$,$v$\uff0c\u4e14 $u$ \u6709\u4e00\u6761\u8fb9\u8fde\u5411 $v$\u3002\u8bbe\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u4e3a $w$\u3002\u5219\u677e\u5f1b\u7b97\u6cd5\u662f\u8fd9\u6837\u5b9e\u73b0\u7684\uff1a\n\n``if(d[u] + w < d[v])\td[v] = d[u] + w;``\n\n\u8fd9\u4e2a\u677e\u5f1b\u7b97\u6cd5\u5e94\u8be5\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662f**\u57fa\u4e8e\u52a8\u6001\u89c4\u5212\u601d\u60f3**\u5b9e\u73b0\u7684\uff0c\u5e94\u8be5\u7b97\u662f\u521d\u6b65\u7684\u52a8\u6001\u89c4\u5212\u3002\n\n\u4e86\u89e3\u4e86\u677e\u5f1b\u7b97\u6cd5\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6b63\u5f0f\u6765\u770b Dijkstra \u7b97\u6cd5\u7684\u5b9e\u73b0\u4e86\uff1a\n\n\u4e0b\u9762\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bwao3so4.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u6211\u4eec\u5c06 d \u6570\u7ec4\u5168\u90e8\u521d\u59cb\u5316\u4e3a\u6b63\u65e0\u7a77\uff0c\u5e76\u77e5\u9053 ``d[1]=0``\uff0c\u4e4b\u540e\u8be5\u7b97\u6cd5\u4e3b\u8981\u91cd\u590d\u4e24\u4e2a\u6b65\u9aa4\uff1a\n\n1. \u5728\u76ee\u524d\u672a\u786e\u5b9a\u6700\u77ed\u8def\u7684\u70b9\u4e2d\u627e\u5230\u6700\u5c0f\u7684\u70b9\uff0c\u5c06\u5176\u67d3\u6210\u7ea2\u8272\u3002\n1. \u679a\u4e3e\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u51fa\u8fb9\uff0c\u770b\u770b\u80fd\u5426\u677e\u5f1b\u5176\u4ed6\u70b9\u3002\n\n\u5982\u679c\u4e0d\u6e05\u695a\u7684\u8bdd\uff0c\u7ed3\u5408\u6211\u7684\u6587\u5b57\u770b\u770b\u4e0b\u9762\u7684\u56fe\u5427\uff1a\n\n1. \u5c06\u7ed3\u70b9 $1$ \u67d3\u7ea2\uff0c\u7136\u540e\u904d\u5386\u51fa\u8fb9\uff0c\u677e\u5f1b\u7ed3\u70b9 $2$ \u548c\u7ed3\u70b9 $3$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zd6d65a1.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n2. \u5c06\u7ed3\u70b9 $3$ \u67d3\u7ea2\uff0c\u904d\u5386\u51fa\u8fb9\uff0c\u677e\u5f1b\u7ed3\u70b9 $2$ \u548c\u7ed3\u70b9 $5$\uff0c\u5176\u4e2d\u7ed3\u70b9 $2$ \u4e0d\u80fd\u677e\u5f1b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/egrqy3px.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n3. \u5c06\u7ed3\u70b9 $2$ \u67d3\u7ea2\uff0c\u904d\u5386\u7ed3\u70b9 $4$ \u548c\u7ed3\u70b9 $5$\uff0c\u56e0\u4e3a\u7ed3\u70b9 $5$ \u4e4b\u524d\u662f $9$\uff0c\u73b0\u5728\u662f $6$\uff0c\u6240\u4ee5\u53ef\u4ee5\u88ab\u677e\u5f1b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lorghip1.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n4. \u73b0\u5728\uff0c\u7ed3\u70b9 $4$ \u548c\u7ed3\u70b9 $5$ \u90fd\u4e3a $6$\uff0c\u6211\u8fd9\u91cc\u5c31\u76f4\u63a5\u4e00\u6b65\u628a\u4e24\u4e2a\u70b9\u90fd\u67d3\u7ea2\u4e86\u3002\u4f46\u5b9e\u9645\u4e0a\u5e94\u8be5\u662f\u5148\u67d3\u7ed3\u70b9 $4$ \u518d\u67d3\u7ed3\u70b9 $5$\u3002\u5927\u5bb6\u61c2\u5c31\u597d\uff08\u4e0d\u5f71\u54cd\u7ed3\u679c\uff09\u3002\u904d\u5386\u7ed3\u70b9 $1$\uff0c\u7ed3\u70b9 $3$ \u548c\u7ed3\u70b9 $5$\u3002\u4e09\u8005\u90fd\u5df2\u7ecf\u786e\u5b9a\uff0c\u6240\u4ee5\u5168\u90e8\u4e0d\u80fd\u677e\u5f1b\u3002\u5168\u90e8\u8282\u70b9\u7684\u6700\u77ed\u8def\u90fd\u5df2\u786e\u5b9a\uff0c\u7a0b\u5e8f\u7ed3\u675f\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ctmm4v1h.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n## \u6b63\u786e\u6027\u8bc1\u660e\n\n- **\u5df2\u9009\u53d6\u8282\u70b9\u4e0d\u6539\u6027**\n\n\u5bf9\u4e8e\u4e00\u76f4\u5728\u66f4\u65b0\u8fed\u4ee3\u7684\u8ddd\u79bb\u6570\u7ec4 $d$\uff0c\u5b83\u7684\u503c**\u53ea\u4f1a\u589e\u52a0\u800c\u4e0d\u4f1a\u51cf\u5c11**\u3002\u56e0\u4e3a**\u8fb9\u7684\u6743\u503c\u90fd\u662f\u975e\u8d1f**\u7684\uff0c\u6bcf\u6b21\u66f4\u65b0\u8ddd\u79bb\u53ea\u4f1a\u5728**\u5df2\u9009\u53d6\u8282\u70b9\u7684\u8ddd\u79bb\u4e0a\u589e\u52a0**\uff0c\u4e0d\u53ef\u80fd\u5b58\u5728\u53e6\u4e00\u6761\u66f4\u77ed\u7684\u8def\u3002\u6b63\u56e0\u5982\u6b64\uff0c**Dijkstra \u5806\u4f18\u5316\u7b97\u6cd5\u53ea\u80fd\u7528\u4e8e\u975e\u8d1f\u6743\u56fe\u4e2d**\uff0c\u5982\u679c\u51fa\u73b0\u8d1f\u6743\uff0c\u5219\u8be5\u7b97\u6cd5\u53ef\u80fd\u5f97\u51fa**\u9519\u8bef\u7b54\u6848**\u3002\n\n- **\u4e3a\u4ec0\u4e48\u8d2a\u5fc3\u601d\u8def\u53ef\u884c\uff1f**\n\n\u8bbe\u6e90\u70b9\uff08\u5373\u4e0a\u56fe\u4e2d\u7684 $0$\uff09\u4e3a $S$\uff0c\u8ddd\u79bb $S$ \u6700\u8fd1\u7684\u70b9\u4e3a $B$\uff08\u5373\u4e0a\u56fe\u4e2d\u7684 $3$\uff09\u3002\n\n1. \u4ece $S$ \u76f4\u63a5\u786e\u5b9a $B$ \u7684\u6743\u503c\u4e00\u5b9a\u662f\u6b63\u786e\u7684\uff08\u4e0d\u96be\u8bc1\u660e\uff09\u3002\n\n**\u53cd\u8bc1\u6cd5**\uff1a\u5047\u8bbe $B$ \u8ddd\u79bb**\u4e0d\u662f\u6700\u77ed**\uff0c**\u90a3\u4e48\u5fc5\u5b9a\u5b58\u5728\u4e00\u4e2a\u70b9 $C$\uff0c\u4f7f\u5f97 $S\\rightarrow C\\rightarrow B$ \u8fd9\u6761\u8def\u6bd4 $S\\rightarrow B$ \u8fd9\u6761\u8def\u8ddd\u79bb\u8981\u77ed**\u3002\u4f46\u662f\u8fd9\u6837**\u8fdd\u80cc\u4e86\u8d2a\u5fc3\u6b65\u9aa4**\uff1a\u5047\u5982\u5b58\u5728\u8fd9\u6837\u7684 $C$ \u70b9 \u6211\u4eec\u9009\u53d6\u5230\u7684**\u7b2c\u4e00\u4e2a\u70b9\u5e94\u8be5\u662f $C$ \u800c\u4e0d\u662f $B$\u3002**\uff08\u56e0\u4e3a\u5168\u662f\u975e\u8d1f\u6743\uff0c\u6613\u5f97 $S\\rightarrow C$ \u7684\u8ddd\u79bb\u4f1a\u6bd4 $S\\rightarrow B$ \u7684\u8ddd\u79bb\u5c0f\uff09\u3002\n\n2. \u5bf9\u4e8e\u5df2\u7ecf\u9009\u53d6\u8fc7\u7684\u70b9\uff0c\u4e0d\u59a8\u628a\u5b83\u770b\u4f5c\u4e3a\u4e00\u4e2a\u5927\u7684\u6e90\u70b9 $S$\uff0c\u90a3\u4e48\u65b0\u8003\u8651\u7684\u70b9\u7b26\u5408\u4e0a\u8ff0\u7684\u60c5\u51b5\uff0c\u5f52\u7eb3\u5f97\u8bc1\u3002\n\n2.1. \u4e3a\u4ec0\u4e48\u53ef\u4ee5\u628a\u9009\u8fc7\u7684\u70b9\u770b\u6210\u4e00\u4e2a\u66f4\u5927\u7684 $S$\uff1f\n\u6839\u636e\u7b97\u6cd5\u6b65\u9aa4 $2$\uff0c\u6211\u4eec\u5bf9**\u6bcf\u4e00\u4e2a\u9009\u53d6\u8fc7\u7684\u7ed3\u70b9\u7684\u90bb\u63a5\u70b9\u90fd\u5c1d\u8bd5\u4e86\u677e\u5f1b\u64cd\u4f5c**\uff0c\u90a3\u5c31**\u4e0d\u5b58\u5728\u6709\u5927\u6e90\u70b9 $S$ \u5411\u5916\u90e8\u7684\u70b9\u7684\u8fde\u8fb9\u4e22\u5931**\u3002\u5982\u679c\u5927\u6e90\u70b9 $S$ \u5185\u6709**\u591a\u6761\u8fb9\u6307\u5411\u540c\u4e00\u4e2a\u5916\u90e8\u8282\u70b9 $x$**\uff0c\u5176\u5b9e\u6700\u7ec8\u4e5f\u53ea\u4f1a**\u4fdd\u7559\u6700\u77ed\u7684\u8fb9**\uff0c\u56e0\u4e3a\u5176\u4ed6\u66f4\u957f\u7684\u8fb9\u6743**\u88ab\u677e\u5f1b\u66ff\u4ee3\u4e86**\u3002\n\n3. \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u8d1f\u6743\uff1f\n\n\u8fd9\u4e2a\u6bd4\u8f83\u597d\u8bc1\u660e\uff1a\u5982\u679c\u6709\u4e00\u6761\u8fb9\u6743\u4e3a\u8d1f\uff08\u8bbe\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u4e3a\u4e3a $u$\uff0c$v$\uff09\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff1a\u5f53\u5168\u90e8\u70b9\u7684\u6700\u77ed\u8def\u786e\u5b9a\u540e\uff0c\u6211\u4eec\u60ca\u8bb6\u5730\u53d1\u73b0\uff1a\u5982\u679c**\u5728 $v$ \u7684\u6700\u77ed\u8def\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b**\uff0c\u901a\u8fc7**\u8d70 $v\\rightarrow u$ \u8fd9\u6761\u8def**\uff0c\u53ef\u4ee5**\u4f7f $u$ \u7684\u6700\u77ed\u8def\u66f4\u77ed**\u3002\u8d2a\u5fc3\u601d\u8def\u5931\u8d25\uff0c**\u56e0\u6b64\u4e0d\u80fd\u51fa\u73b0\u8d1f\u6743**\u3002\n\n\u4e3a\u4ec0\u4e48\u677e\u5f1b\u7684\u65f6\u5019\u4e0d\u4f1a\u76f4\u63a5\u8d70\u8d1f\u6743\uff1f\u5f88\u7b80\u5355\uff0c\u8d1f\u6743\u7684\u90a3\u6761\u8fb9\u5bf9\u5e94\u7684\u8d77\u70b9**\u4e0d\u4e00\u5b9a\u662f\u5f53\u524d\u70b9\u4e2d\u5230\u8d77\u70b9\u8ddd\u79bb\u6700\u5c0f**\u7684\u3002\u800c\u677e\u5f1b\u5176\u5b83\u8fb9\u7684\u65f6\u5019\u6709\u53ef\u80fd**\u628a\u8d1f\u6743\u8fb9\u7684\u53e6\u4e00\u5934\u4e5f\u677e\u5f1b\u6389\u4e86**\u3002\u4e00\u65e6\u7ec8\u70b9\u90a3\u5934\u88ab\u677e\u5f1b\uff0c\u6309\u7167 dijkstra \u7684\u8d2a\u5fc3\u601d\u8def\uff0c\u8fd9\u4e00\u5b9a\u662f\u5b83\u7684\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u4e0d\u4f1a\u518d\u52a8\uff0c\u5c31\u5ffd\u7565\u4e86\u90a3\u6761\u8d1f\u6743\u3002\n\n\u6211\u4eec\u4f7f\u7528\u4f18\u5148\u961f\u5217\u4f18\u5316\uff0c\u6bcf\u6b21\u90fd\u53d6\u8ddd\u79bb\u6700\u5c0f\u7684\u8282\u70b9\u8fdb\u884c\u677e\u5f1b\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd**\u53ea\u4f1a\u5165\u961f\u4e00\u6b21**\uff0c\u76f8\u5e94\u7684**\u6bcf\u6761\u8fb9\u4e5f\u53ea\u4f1a\u904d\u5386\u4e00\u6b21**\uff0c\u52a0\u4e0a\u4f18\u5148\u961f\u5217\u5355\u6b21\u63d2\u5165\u3001\u67e5\u8be2\u7684\u590d\u6742\u5ea6\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O((n+m)\\log n)$\u3002\n\n------------\n## SPFA \u7b97\u6cd5\nSPFA \u6ca1\u6709 dijkstra \u7a33\u5b9a\uff0c\u6700\u4f18\u6548\u7387\u4e5f\u4e0d\u5982\u540e\u8005\uff0c\u4f46\u662f\u5b83\u53ef\u4ee5\u5904\u7406\u8d1f\u6743\u7684\u60c5\u51b5\uff0c\u4e5f\u53ef\u4ee5\u5224\u65ad\u8d1f\u73af\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u8981\u5feb\u4e8e dijkstra \u7684\u5806\u4f18\u5316\u7248\u672c\u3002\n\n\u6240\u4ee5\u5728\u4e00\u5e74\u540e\u7684\u4eca\u5929\uff0c\u6211\u52a0\u4e0a\u4e86 SPFA \u7684\u89e3\u6cd5\uff08~~\u4e3b\u8981\u662f\u5b66\u7f51\u7edc\u6d41\uff0c\u5199\u4e00\u5199\u5f53\u590d\u4e60~~\uff09\u3002\n\nSPFA \u7684\u539f\u7406\u4e0e dijkstra \u5f88\u50cf\uff0c\u90fd\u662f\u5229\u7528\u4e86\u677e\u5f1b\u64cd\u4f5c\u6c42\u6700\u77ed\u8def\u3002\u4f46\u5b83\u7a0b\u5e8f\u6267\u884c\u7684\u6b65\u9aa4\u4e0d\u4e00\u6837\uff1a\n1. SPFA \u4f7f\u7528\u666e\u901a\u961f\u5217\uff0c\u8fd9\u610f\u5473\u7740\u65e0\u6cd5\u4fdd\u8bc1\u5f53\u524d\u8282\u70b9\u662f\u8ddd\u79bb\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u6240\u4ee5\u4e00\u4e2a\u70b9\u53ef\u80fd\u51fa\u961f\u4e4b\u540e\u53c8\u518d\u6b21\u8fdb\u961f\u3002\n2. \u4f7f\u7528 $inque$ \u6570\u7ec4\u6807\u8bb0\u8282\u70b9\u662f\u5426\u5728\u961f\u5217\u4e2d\u3002\n3. \u4f7f\u7528 $cnt$ \u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u5165\u961f\u6b21\u6570\u3002\u5982\u679c\u67d0\u4e2a\u8282\u70b9\u8fdb\u961f\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $n$\uff0c\u8bc1\u660e\u56fe\u4e2d\u5b58\u5728\u8d1f\u73af\uff08\u8fd9\u4e2a\u5f85\u4f1a\u4f1a\u63d0\u5230\uff09\u3002\n\n\u5176\u5b83\u5c31\u4e0e Dijkstra \u5f88\u50cf\u4e86\uff0c\u653e\u4e2a\u5e26\u6ce8\u91ca\u6a21\u677f\u4f9b\u5927\u5bb6\u53c2\u8003\u7406\u89e3\uff1a\n```cpp\nbool spfa(int s){\n\tmemset(d, 127, sizeof(d));\n\tmemset(inque, 0, sizeof(inque));//\u521d\u59cb\u5316\n\td[s] = 0;\n\tq.push(s);\n\tinque[s] = 1, cnt[s]++;//\u767b\u8bb0\u8d77\u70b9\u4fe1\u606f\n\twhile(!q.empty()){\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tinque[u] = 0;//pop \u6389\u4ee5\u540e\u628au\u6807\u8bb0\u4e3a\u672a\u5165\u961f\n\t\tfor(int i=0;i<g[u].size();i++){\n\t\t\tint v = g[u][i].v;\n\t\t\tint w = g[u][i].w;\n\t\t\tif(d[u] + w < d[v]){\n\t\t\t\td[v] = d[u] + w;//\u677e\u5f1b\n\t\t\t\tif(inque[v] == 0){\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tinque[v] = 1, cnt[v]++;//\u8fdb\u961f\u3001\u8fdb\u961f\u6807\u8bb0\u3001\u8fdb\u961f\u6b21\u6570\u7684\u53d8\u5316\n\t\t\t\t\tif(cnt[v] == n)\treturn false;//\u5b58\u5728\u8d1f\u73af\uff0c\u8fd4\u56de\u65e0\u89e3\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;//\u7a0b\u5e8f\u987a\u5229\u7ed3\u675f\uff0c\u6709\u89e3\n}\n```\n### SPFA \u5224\u65ad\u8d1f\u73af\n\u4e3a\u4ec0\u4e48\u67d0\u4e2a\u8282\u70b9\u8fdb\u961f\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $n$ \u5c31\u8bc1\u660e\u6709\u8d1f\u73af\uff1f\n\n\u9996\u5148\u6211\u4eec\u660e\u786e\u8d1f\u73af\u7684\u5b9a\u4e49\uff1a\u56fe\u4e0a\u7684\u4e00\u4e2a\u73af\uff0c\u5176\u8fb9\u6743\u4e4b\u548c\u4e3a\u8d1f\u3002\u6211\u4eec\u77e5\u9053\uff0c\u8fd9\u6837\u7684\u73af\u662f\u4e0d\u5b58\u5728\u6700\u77ed\u8def\u89e3\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u8d8a\u8d70\u8d8a\u5c0f\u3002\n\n\u4e00\u4e2a\u8282\u70b9\u7684\u5165\u5ea6\u6700\u591a\u53ea\u6709 $n-1$\uff0c\u5373\u5176\u4ed6\u8282\u70b9\u90fd\u4e0e\u8be5\u8282\u70b9\u6709\u8fde\u8fb9\u3002\u5f53\u4e00\u4e2a\u8282\u70b9\u5165\u961f\u6b21\u6570\u4e3a $n$ \u65f6\uff0c\u8bc1\u660e\u6709 $n$ \u6761\u8def\u5f84\u90fd\u901a\u5411\u8be5\u8282\u70b9\u3002\u53c8\u56e0\u4e3a\u5165\u5ea6\u6700\u591a\u53ea\u6709 $n-1$\uff0c\u6839\u636e\u9e3d\u7b3c\u539f\u7406\uff0c\u81f3\u5c11\u6709\u4e24\u6761\u8def\u662f\u91cd\u590d\u7684\uff0c\u5373\u5b58\u5728\u73af\u3002\n\n\u5b58\u5728\u73af\u8fd8\u4e0d\u7b97\u4ec0\u4e48\uff0c\u8981\u662f\u8fb9\u6743\u548c\u662f\u6b63\u7684\uff0c\u8d70\u5b8c\u6574\u4e2a\u73af\u8ddd\u79bb\u8fd8\u662f\u4f1a\u53d8\u5927\u3002\u6211\u4eec\u7684\u7a0b\u5e8f\u662f\u4e0d\u4f1a\u50bb\u4e4e\u4e4e\u5730\u770b\u5230\u73af\u5c31\u649e\u8fdb\u53bb\u7684\u3002\u6240\u4ee5\u53ea\u6709\u4e00\u79cd\u53ef\u80fd\uff1a\u90a3\u5c31\u662f\u51fa\u73b0\u4e86\u4e00\u4e2a\u8fb9\u6743\u4e4b\u548c\u4e3a\u8d1f\u7684\u73af\uff0c\u4e5f\u5c31\u662f\u8d1f\u73af\u3002\n\n\n\n\u6700\u540e\u662f\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u7531\u4e8e\u4e00\u4e2a\u70b9\u53ef\u80fd\u8fdb\u961f\u591a\u6b21\uff0c\u5373\u4e00\u6761\u8fb9\u53ef\u80fd\u4f1a\u88ab\u904d\u5386\u591a\u6b21\uff0c\u6240\u4ee5 SPFA \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(KE)$\uff08$K$ \u662f\u5e38\u6570\uff0c$E$ \u4e3a\u8fb9\u6570\uff09\u3002\u4f46\u662f\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u597d\u50cf\u662f\u83ca\u82b1\u56fe\uff09\uff0cSPFA \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u88ab\u5361\u5230 $O(VE)$\uff08$V$ \u662f\u8282\u70b9\u6570\uff09\u7684\u3002\n\n\u5728\u672c\u9898\u7684\u5f31\u5316\u7248\uff08\u5373 B3601\uff09\u53ef\u7528 SPFA \u901a\u8fc7\uff0c\u4f46\u662f\u672c\u9898\u5c31\u4e0d\u884c\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cSPFA \u76f8\u6bd4\u4e8e Dijkstra \u5374\u66f4\u91cd\u8981\u3002\u56e0\u4e3a\u5b83\u5728\u5f88\u591a\u540e\u7eed\u7b97\u6cd5\u4e2d\u90fd\u9700\u8981\u4f7f\u7528\uff0c\u56e0\u6b64\u52a1\u5fc5\u7262\u8bb0\u8be5\u7b97\u6cd5\uff08~~\u4e3a\u4ec0\u4e48\u4e0d\u7528 DIjkstra\uff1f\u8fd8\u4e0d\u662f\u56e0\u4e3a\u90a3\u8be5 s \u7684\u8d1f\u6743~~\uff09\u3002\n\n~~\u5f52\u7a0b\uff1a\u5173\u4e8e SPFA\uff0c\u5b83\u6b7b\u4e86\u2026\u2026~~\n\n## \u4e00\u4e9b\u5c0f\u5751\n- \u8f93\u51fa\u65f6\u8bb0\u5f97\u5224\u65ad\u81ea\u73af\u3002\n- \u8f93\u5165\u65f6\u6ce8\u610f\u91cd\u8fb9\u3002\n- **\u4e94\u5e74 OI \u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00 ``long long`` \u89c1\u7956\u5b97**\u3002\u4e00\u5b9a\u8981\u8bb0\u5f97\u5f00 ``long long``\u3002\n- \u5728\u672c\u9898\u4e2d\uff0c\u7528 ``memset`` \u6765\u521d\u59cb\u5316\u4e3a $127$ \u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u53ef\u80fd\u8d85\u51fa ``int`` \u8303\u56f4\uff0c$127$ \u5e76\u4e0d\u662f\u6700\u5927\u503c\u3002\u6240\u4ee5\uff0c\u5e94\u8be5\u7528\u6700\u6734\u7d20\u7684\u5faa\u73af\u624b\u52a8\u8d4b\u4e00\u4e2a\u5f88\u5927\u7684\u503c\u3002\n\n## \u4ee3\u7801\n\u6211\u4f7f\u7528 dijkstra \u5806\u4f18\u5316\u7b97\u6cd5\u3002\u4ee5\u4e0b\u662f\u53c2\u8003\u4ee3\u7801\uff0c\u73cd\u7231\u751f\u547d\uff0c\u8fdc\u79bb\u6284\u88ad\u3002\n\nCode\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nstruct edge{\n\tll u, v, w;\n};\n\nconst int N = 2000 + 10;\nvector<edge> g[N];\npriority_queue<pair<ll, ll> > q;\nint n, m, u, v, w, d[N], visit[N];\n//d[i]\u8868\u793a\u6bcf\u4e2a\u70b9\u5230\u8d77\u70b9\u7684\u8ddd\u79bb\uff0cvisit[i]\u8868\u793a\u662f\u5426\u786e\u5b9a\u6700\u77ed\u8def \n\nvoid dijkstra(ll s){//s\u4e3a\u8d77\u70b9 \n\tmemset(d, 127, sizeof(d)); \n\tmemset(visit, 0, sizeof(visit));//\u521d\u59cb\u5316 \n\td[s] = 0;\n\tq.push(make_pair(0, s));//\u8d77\u70b9\u4fe1\u606f\u5165\u961f \n\twhile(!q.empty()){\n\t\tll u = q.top().second;//\u53d6\u51fa\u961f\u5934\u5143\u7d20\u7684\u7f16\u53f7 \n\t\tq.pop();\n\t\tif(visit[u] == 1)\tcontinue;//\u8fd9\u91cc\u662f\u5806\u4f18\u5316\u7b97\u6cd5\u7684\u6838\u5fc3\uff0c\u5982\u679c\u5df2\u7ecf\u67d3\u8272\u4e86\uff0c\u5c31\u4e0d\u7528\u518d\u5faa\u73af\u4e86 \n\t\tvisit[u] = 1;//\u6a21\u62df\u5c06\u6700\u5c0f\u7684\u70b9\u67d3\u6210\u7ea2\u8272 \n\t\tfor(int j=0;j<g[u].size();j++){//\u679a\u4e3e\u6240\u6709\u51fa\u8fb9 \n\t\t\tll v = g[u][j].v;//\u51fa\u8fb9\u6240\u6307\u7684\u70b9 \n\t\t\tll w = g[u][j].w;//v\u7684\u6743\u503c \n\t\t\tif(d[u] + w < d[v]){//\u677e\u5f1b\u64cd\u4f5c \n\t\t\t\td[v] = d[u] + w;\n\t\t\t\tq.push(make_pair(-d[v], v));//\u4e3a\u4ec0\u4e48\u662f-d[v]\uff1f\u81ea\u5df1\u601d\u8003\u4e00\u4e0b~ \n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tcin >> n >> m;\n\tfor(int i=1;i<=m;i++){\n\t\tcin >> u >> v >> w;\n\t\tg[u].push_back((edge){u, v, w});\n\t}\n\tdijkstra(1);\n\tfor(int i=1;i<=n;i++){\n\t\tif(d[i] == 2139062143)\tcout << -1 << ' ';\n\t\telse\tcout << d[i] << ' ';\n\t}\n\tcout << endl;\n\treturn 0;\n}\n```\n\u672c\u7bc7\u9898\u89e3\u5230\u6b64\u7ed3\u675f\uff0c\u5982\u679c\u5bf9\u4f60\u6709\u5e2e\u52a9\u8bb0\u5f97\u70b9\u4e2a\u8d5e\u54e6\uff01",
        "postTime": 1627627460,
        "uid": 363036,
        "name": "chlchl",
        "ccfLevel": 5,
        "title": "B3602 \u6700\u77ed\u8def\u95ee\u9898_2 \u9898\u89e3"
    },
    {
        "content": "# B3602 \u9898\u89e3\n\n\u6700\u77ed\u8def\u6c34\u9898\uff08\n\n## Description\n- \u7ed9\u5b9a\u4e00\u5f20 $n$ \u8282\u70b9\u7684**\u6709\u5411\u6709\u6743**\u56fe\n- $\\forall\\ 1 \\leq i \\leq n$\uff0c\u6c42 $1 \\rightarrow i$ \u7684\u6700\u77ed\u8def\n\n## Solution\n\n\u4ece $0$ \u8bb2\u8d77\u3002\n\n\u9996\u5148\uff0c\u770b\u5230\u6700\u77ed\u8def\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u53cd\u5e94\u662f Dijkstra/BellmanFord\uff0c\u8fd9\u4e24\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u7684\u6700\u5dee\u60c5\u51b5\u53ef\u4ee5\u8fbe\u5230 $\\mathcal O(VE)$\uff0c\u4f46\u662f\u770b\u5230\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\uff1a\n\n- $1 \\leq n,m \\leq 3 \\times 10^5$\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u4f18\u5316\u3002\n\n### 1. dijkstra\n\n\u666e\u901a dijkstra \u4e0d\u518d\u7ec6\u8bb2\u4e86\uff0c\u5b83\u7684\u6b65\u9aa4\u53ef\u4ee5\u5927\u81f4\u5206\u4e3a\u4e24\u6b65\uff1a\n\n1. \u627e\u4e00\u4e2a\u5f53\u524d\u5230 $1$ \u8ddd\u79bb\u6700\u5c0f\u7684\u8282\u70b9 $u$\n2. \u67e5\u627e $u$ \u7684\u6240\u6709\u90bb\u5c45 $v$ \u66f4\u65b0\u6700\u77ed\u8def\n\n\u6211\u4eec\u77e5\u9053 2 \u6b65\u9aa4\u80af\u5b9a\u662f\u65e0\u6cd5\u907f\u514d\u7684\uff0c\u4f46\u662f\u8fd9\u4e2a 1 \u6b65\u9aa4\u4f3c\u4e4e\u8017\u8d39\u4e86\u5f88\u591a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u53ef\u4ee5\u8003\u8651\u4f18\u5316 1 \u64cd\u4f5c\uff0c\u5176\u672c\u8d28\u4e0a\u5c31\u662f\u505a $\\max\\limits_{i=1}^n dis[i]$\uff0c\u666e\u901a\u505a\u662f\u9700\u8981\u4e00\u4e2a for \u5faa\u73af\u53bb\u679a\u4e3e\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u964d\u4f4e\u679a\u4e3e\u7684\u590d\u6742\u5ea6\uff0c\u90a3\u4e48\u4e5f\u5c31\u81ea\u7136\u60f3\u5230\u4e86 STL \u4e2d\u7684 priority\\_queue\u3002\n\n\u5b9e\u73b0\u7684\u65f6\u5019\u6709\u4e00\u4e2a\u95ee\u9898\uff0cpriority\\_queue \u53d6 top \u7684\u65f6\u5019\u53d6\u5230\u7684\u662f\u6700\u5927\u503c\uff0c\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e0b \u201c<\u201d \u53f7\u3002\n\n### Code\n\n```cpp\ninline void dijkstra(){\n\tfill(d, d + n + 5, inf);\n\td[1] = 0; q.push((node){0, 1});\n\twhile(!q.empty()){\n\t\tll u = q.top().u; q.pop();\n\t\tif(vst[u]) continue;\n\t\tvst[u] = 1;\n\t\tfor(ll i = hd[u]; i; i = es[i].nxt){\n\t\t\tll v = es[i].t;\n\t\t\tif(!vst[v] && d[v] > d[u] + es[i].w){\n\t\t\t\td[v] = d[u] + es[i].w;\n\t\t\t\tq.push((node){d[v], v});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tn = read(), m = read();\n\tfor(ll i = 1, u, v, ww; i <= m; i++){\n\t\tu = read(), v = read(), ww = read();\n\t\tadd(u, v, ww);\n\t}\n\tdijkstra();\n\tfor(ll i = 1; i <= n; i++) write(d[i] != inf ? d[i] : -1), putchar(' ');\n\tputs(\"\");\n\treturn 0;\n}\n```\n\n### 2. BellmanFord\n\u672c\u8d28\u4e0a\u5c31\u662f\u4e2a\u66b4\u529b\n\n\u5b83\u7684\u7b97\u6cd5\u6b65\u9aa4\u662f\uff1a\n\n1. \u904d\u5386\u6bcf\u4e00\u6761\u8fb9\uff0c\u5bf9\u4e8e $u \\rightarrow v$\uff0c\u6743\u91cd\u4e3a $w$ \u7684\u8fb9\uff0c$dis[v] \\leftarrow \\min(dis[v],dis[u]+w)$\n2. \u91cd\u590d\u5982\u4e0a\u64cd\u4f5c $n-1$ \u6b21\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u64cd\u4f5c 1 \u6765\u8bf4\uff0c\u53ea\u6709\u66f4\u65b0\u8fc7 $u$ \u7684 $v$ \u624d\u4f1a\u5bf9\u6700\u7ec8\u7684 $u$ \u6709\u8d21\u732e\uff0c\u56e0\u6b64\u8003\u8651\u628a\u66f4\u65b0\u8fc7 $u$ \u7684 $v$ \u8fdb\u884c\u5165\u961f\u64cd\u4f5c\u3002\n\n\u7136\u540e\u6bcf\u6b21\u66f4\u65b0\u7684\u65f6\u5019\u76f4\u63a5\u4ece\u961f\u9996\u62ff\u51fa\u6765\u66f4\u65b0\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u5c31\u662f\u8457\u540d\u7684 SPFA(Shortest Path Faster Algorithm) \u7b97\u6cd5\u3002\n\n### Code\n\n```cpp\ninline void spfa()\n{\n\tfill(dst, dst + n + 5, INF);\n\tqueue<ll> q;\n\tdst[1] = 0;\n\tin[1] = 1;\n\tq.push(1);\n\twhile(!q.empty())\n\t{\n\t\tll u = q.front(); q.pop();\n\t\tin[u] = 0;    // in queue\n\t\tfor(ll i = 0, v; i < to[u].size(); i++)\n\t\t\tif(dst[v = to[u][i]] > dst[u] + w[u][i])\n\t\t\t{\n\t\t\t\tdst[v] = dst[u] + w[u][i];\n\t\t\t\tif(!in[v])\n\t\t\t\t{     // push\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tin[v] = 1;\n\t\t\t\t}\n\t\t\t}\n\t}\n}\n```\n\n## Something Else\n\nSPFA \u8fd9\u4e2a\u7b97\u6cd5\u662f\u53ef\u4ee5\u88ab\u5361\u5230 $\\mathcal O(VE)$ \u7684\u3002\n\n\u4f8b\u5982\u4e0b\u9762\u7684\u4e00\u7c7b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7b0lqnel.png)\n\n\u5b83\u7684\u6700\u77ed\u8def\u662f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4obscxan.png)\n\n\u4e8e\u662f\u5c31\u88ab\u8feb\u7684\u8981\u505a $\\mathcal O(VE)$ \u6b21\u66f4\u65b0\uff0cSPFA \u4e5f\u5c31\u9000\u5316\u4e86\uff08\n\n\u6240\u4ee5\u53ea\u8981\u9898\u76ee\u91cc\u662f\u6b63\u6743\u56fe\uff0c\u6700\u597d\u7528\u5806\u4f18 dij\uff0cSPFA \u8bf4\u4e0d\u5b9a\u4f1a\u88ab\u5361\u3002",
        "postTime": 1625400953,
        "uid": 291706,
        "name": "GspTools",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 B3602 \u3010[\u56fe\u8bba\u4e0e\u4ee3\u6570\u7ed3\u6784 202] \u6700\u77ed\u8def\u95ee\u9898_2\u3011"
    },
    {
        "content": "## B3602 \u6700\u77ed\u8def\u95ee\u9898_2 \u9898\u89e3\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u5f20n\u4e2a\u70b9\u3001m\u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u6c421\u53f7\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002\n\n$1\\leq n,m\\leq 3\u00d710^5$ \uff0c$1\\leq w_i\\leq 10^9$\n\n## \u524d\u7f6e\u829d\u58eb\n\n\u94fe\u5f0f\u524d\u5411\u661f\uff0c STL priority_queue\n\n\u82e5\u6ca1\u6709\u5b66\u4e60\u8fc7\u8fd9\u4e24\u5757\u77e5\u8bc6\uff0c\u53ef\u5206\u522b\u53c2\u9605[\u94fe\u5f0f\u524d\u5411\u661f\u89c6\u9891\u6559\u7a0b](https://www.bilibili.com/video/BV1mJ411S7BB)\u548c[P1090\u9898\u89e3](https://www.luogu.com.cn/problem/solution/P1090)\n\n## \u4e00\u3001\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\n\n\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\uff08Single Source Shortest Path\uff0c\u5373SSSP\u95ee\u9898\uff09\uff0c\u5373\u4e3a\u50cf\u672c\u9898\u4e00\u6837\uff0c\u6c42\u56fe\u4e2d\u4e00\u4e2a\u6e90\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u7684\u95ee\u9898\u3002\u6b64\u95ee\u9898\u6709\u591a\u79cd\u89e3\u51b3\u65b9\u5f0f\uff0c\u6bcf\u79cd\u65b9\u5f0f\u5404\u6709\u4f18\u52a3\u3002\u672c\u9898\u89e3\u4e3b\u8981\u4ecb\u7ecd\u7684\u662fDijkstra\u7b97\u6cd5\u3002\u8fd9\u79cd\u7b97\u6cd5\u4ec5\u80fd\u89e3\u51b3\u8fb9\u6743\u5747\u4e3a\u975e\u8d1f\u6570\u65f6\u7684\u6700\u77ed\u8def\u3002\n\n## \u4e8c\u3001\u666e\u901a\u7684Dijkstra\u7b97\u6cd5\n\nDijkstra\u7b97\u6cd5\u57fa\u4e8e\u8d2a\u5fc3\u601d\u60f3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\u4ee4\u6e90\u70b9\u4e3a $s$\uff0c\u5176\u7b97\u6cd5\u6d41\u7a0b\u5206\u4e3a\u5982\u4e0b\u51e0\u6b65\uff1a\n\n\u7b2c\u4e00\u6b65\uff0c\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4 $dis$ \u5b58\u50a8\u6e90\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u957f\u5ea6\uff0c\u5e76\u521d\u59cb\u5316 $dis_s$ \u4e3a $0$\uff0c\u5176\u4f59\u7ed3\u70b9\u7684 $dis$ \u503c\u4e3a $INF$ \u3002\n\n\u7b2c\u4e8c\u6b65\uff0c\u627e\u5230\u4e00\u4e2a\u7ed3\u70b9 $u$\uff0c\u4f7f\u6b64\u7ed3\u70b9\u4e3a**\u672a\u88ab\u6807\u8bb0\u7684\u70b9**\u4e2d $dis$ \u503c\u6700\u5c0f\u7684\u70b9\u3002\n\n\u7b2c\u4e09\u6b65\uff0c\u5bf9\u4e8e\u7ed3\u70b9 $u$ \u6709\u8fb9\u76f8\u8fde\u7684\u6240\u6709\u7ed3\u70b9 $v$\uff0c\u66f4\u65b0 $dis_v=\\min(dis_v,dis_u+edge_{u,v})$\uff0c\u5e76\u7ed9 $u$ \u6253\u4e0a\u6807\u8bb0\u3002\n\n\u7b2c\u56db\u6b65\uff0c\u91cd\u590d2~3\u4e24\u4e2a\u6b65\u9aa4 $n-1$ \u6b21\u3002\u6b64\u65f6\u6240\u6709\u7ed3\u70b9\u7684 $dis$ \u503c\u5373\u4e3a\u6e90\u70b9 $s$ \u5230\u8be5\u70b9\u7684\u6700\u77ed\u8def\u957f\u5ea6\u3002\u82e5\u6709 $dis[x]=INF$ \u6210\u7acb\uff0c\u5219\u8bf4\u660e\u4ece\u6e90\u70b9 $s$ \u65e0\u6cd5\u5230\u8fbe\u7ed3\u70b9 $x$\u3002\u82e5\u91cd\u590d\u65f6\u5b58\u5728\u627e\u4e0d\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 $u$ \u7684\u60c5\u51b5\uff0c\u5219\u76f4\u63a5\u9000\u51fa\u5faa\u73af\u3002\n\n\u6b64\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u5728\u4e8e\uff0c\u56fe\u7684\u6bcf\u6761\u8fb9\u6743\u503c\u5747\u4e3a\u975e\u8d1f\u6570\uff0c\u5219\u7b2c2\u6b65\u4e2d\u9009\u51fa\u7684\u7ed3\u70b9 $u$ \u5728\u9009\u51fa\u65f6\uff0c\u5df2\u7ecf\u6ee1\u8db3 $dis[u]$ \u7b49\u4e8e\u6e90\u70b9\u5230 $u$ \u7684\u6700\u77ed\u8def\u957f\u5ea6\u3002\u5728\u6b64\u57fa\u7840\u4e0a\u66f4\u65b0\u5176\u4f59\u7ed3\u70b9\uff0c\u5219\u5176\u4f59\u7ed3\u70b9\u88ab\u53d6\u51fa\u65f6\u4e5f\u80fd\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u3002\n\n\u6839\u636e\u4e0a\u8ff0\u6d41\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u6253\u51fa\u4ee5\u4e0b\u7684\u4ee3\u7801\uff08\u5efa\u56fe\u7b49\u8fc7\u7a0b\u7701\u7565\uff09\uff1a\n\n```cpp\ntypedef long long ll;//\u4e0b\u9762\u51fa\u73b0\u7684ll\u5373\u4e3along long\nconst int MAXN=300007;\nconst ll INF=0x3f3f3f3f3f3f3f;\nstruct node{\n\tint nxt;\n\tint to;\n\tll w;\n}g[MAXN];\nint head[MAXN],tot,n,m;\nvector<ll>dijkstra(int s)//\u5c06\u7b54\u6848\u5c01\u88c5\u6210vector\n{\n\tvector<ll>dis(n+1,INF);//\u521d\u59cb\u5316\uff0c\u76f8\u5f53\u4e8e\u5efa\u7acb\u4e00\u4e2a\u957f\u5ea6\u4e3an+1\u7684\u6570\u7ec4\uff0c\u5e76\u5168\u90e8\u8d4b\u503c\u4e3aINF\n\tdis[s]=0;\n\tfor(int i=1;i<n;i++){\n\t\tint u=0;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(!vis[j]&&(u==0||dis[j]<dis[u]))u=j;\n\t\t}//\u6d41\u7a0b\u7b2c2\u6b65\uff0c\u5bfb\u627e\u7b26\u5408\u6761\u4ef6\u7684\u7ed3\u70b9u\n\t\tif(!u)break;//\u7279\u6b8a\u60c5\u51b5\uff1a\u627e\u4e0d\u5230\u6ee1\u8db3\u7684u\uff0c\u8fd9\u610f\u5473\u7740\u7531\u6e90\u70b9\u4e0d\u80fd\u5230\u8fbe\u76ee\u524d\u6ca1\u6709\u6807\u8bb0\u7684\u5269\u4f59\u70b9\n\t\tvis[u]=1;//\u6807\u8bb0\n\t\tfor(int j=head[u];j;j=g[j].nxt){//\u904d\u5386\u8d77\u70b9\u4e3au\u7684\u6240\u6709\u8fb9\n\t\t\tint v=g[j].to;\n\t\t\tdis[v]=min(dis[v],dis[u]+g[j].w);//\u66f4\u65b0\u6700\u77ed\u957f\u5ea6\n\t\t}\n\t}\n\treturn dis;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\uff0c[\u8bc4\u6d4b\u7ed3\u679c](https://www.luogu.com.cn/record/52321153)\n## \u4e09\u3001\u5806\u4f18\u5316\u7684Dijkstra\u7b97\u6cd5\n\n\u8ba9\u6211\u4eec\u5ba1\u89c6\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c$1\\leq n\\leq 3\u00d710^5$\uff0c\u6545\u4e0a\u9762\u7684\u89e3\u6cd5\u5e76\u4e0d\u80fd\u5f97\u5230AC\u3002\u89c2\u5bdf\u4ee3\u7801\uff0c\u53d1\u73b0\u6b64\u89e3\u6cd5\u7684\u74f6\u9888\u5728\u4e8e\u7b2c$2$\u6b65\u5bfb\u627e\u6700\u5c0f\u503c\u7684\u8fc7\u7a0b\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u63d2\u5165\uff0c\u67e5\u8be2\u6700\u5c0f\u503c\uff0c\u5220\u9664\u6700\u5c0f\u503c\u7b49\u64cd\u4f5c\u3002\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u62c5\u6b64\u91cd\u4efb\u5462\uff1f\u4e8c\u53c9\u5806\uff08STL priority_queue\uff09\uff01\u8fd9\u6837\uff0c\u5355\u6b21\u67e5\u8be2\u6700\u5c0f\u503c\u7684\u65f6\u95f4\u5c31\u4ece $O(n)$ \u964d\u5230\u4e86 $O(\\log\\ n)$ \uff0c\u4ece\u800c\u53d6\u5f97AC\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m \\log n)$ \u3002\n\n\u5177\u4f53\u5b9e\u73b0\u8fc7\u7a0b\u53ef\u89c2\u770b\u6ce8\u91ca\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int MAXN=300007;\nconst ll INF=0x3f3f3f3f3f3f3f;//\u8981\u8bbe\u7684\u8db3\u591f\u5927\nstruct node{\n\tint nxt;\n\tint to;\n\tll w;\n}g[MAXN];\nint head[MAXN],tot,n,m;\nbool vis[MAXN];\nvoid add(int a,int b,ll c)//\u94fe\u5f0f\u524d\u5411\u661f\u52a0\u8fb9\n{\n\ttot++;\n\tg[tot].w=c;\n\tg[tot].nxt=head[a];\n\tg[tot].to=b;\n\thead[a]=tot;\n}\nvector<ll>dijkstra(int s)\n{\n\tvector<ll>dis(n+1,INF);//\u521d\u59cb\u5316\n\tpriority_queue<pair<ll,int>,vector<pair<ll,int> >,greater<pair<ll,int> > >q;\n\t//\u4e8c\u53c9\u5c0f\u6839\u5806\uff0c\u5728\u53d6\u51fa\u5806\u9876\u65f6\u5806\u9876\u4fdd\u5b58\u7684\u5373\u4e3a\u6700\u5c0f\u503c\n   //pair<ll,int>\u4e3a\u7b2c\u4e00\u7ef4\u4e3adis[u]\uff0c\u7b2c\u4e8c\u7ef4\u4e3au\u7684\u4e8c\u5143\u7ec4\n\tdis[s]=0;\n\tq.push(make_pair(0,s));\n\twhile(!q.empty())\n\t{\n\t\tpair<ll,int>tmp=q.top();//\u53d6\u51fa\u5806\u9876\n\t\tint u=tmp.second;\n\t\tq.pop();\n\t\tif(vis[u])\n\t\t\tcontinue;//\u7ed3\u70b9u\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\uff0c\u5c31\u4e0d\u80fd\u518d\u7528u\u6765\u66f4\u65b0\u4e86\n\t\tvis[u]=1;//\u6253\u6807\u8bb0\n\t\tfor(int i=head[u];i;i=g[i].nxt)//\u904d\u5386\u6bcf\u6761\u8fb9\n\t\t{\n\t\t\tint v=g[i].to;\n\t\t\tif(dis[v]>dis[u]+g[i].w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+g[i].w;//\u66f4\u65b0\u6700\u5c0f\u503c\n\t\t\t\tq.push(make_pair(dis[v],v));//\u5c06\u65b0\u83b7\u5f97\u7684\u503c\u63d2\u5165\u5806\u4e2d\n\t\t\t}\n\t\t}\n\t}\n\treturn dis;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tint xx,yy;ll zz;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%lld\",&xx,&yy,&zz);\n\t\tadd(xx,yy,zz);//\u8fde\u8fb9\n\t}\n\tvector<ll>dis=dijkstra(1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(dis[i]==INF) //\u4e0d\u8fde\u901a\uff0c\u8f93\u51fa-1\n\t\t\tprintf(\"-1 \");\n\t\telse //\u5426\u5219dis[i]\u5373\u4e3a\u7b54\u6848\n\t\t\tprintf(\"%lld \",dis[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```\n\n[AC](https://www.luogu.com.cn/record/52321595)\n\n## \u56db\u3001\u540e\u8bb0\n\n\u6c42\u89e3SSSP\u95ee\u9898\u5e38\u7528\u7684\u7b97\u6cd5\u8fd8\u6709SPFA\u7b97\u6cd5\uff0c\u53ef\u4ee5\u6c42\u89e3\u5e26\u6709\u8d1f\u6743\u8fb9\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e00\u822c\u4e3a $O(km)$\uff0c\u5176\u4e2d $k$ \u662f\u4e00\u4e2a\u8f83\u5c0f\u7684\u5e38\u6570\uff0c\u4f46\u5728\u6570\u636e\u7ecf\u8fc7\u7279\u6b8a\u6784\u9020\u7684\u60c5\u51b5\u4e0b\u4f1a\u964d\u5230 $O(nm)$\u3002\u6240\u4ee5\uff0c\u5728\u56fe\u4e2d\u53ea\u6709\u975e\u8d1f\u6743\u8fb9\u65f6\uff0c\u8fd8\u662f\u9009\u7528\u66f4\u5feb\u7684Dijkstra\u7b97\u6cd5\u6bd4\u8f83\u660e\u667a\u3002",
        "postTime": 1625291427,
        "uid": 146296,
        "name": "Kagamino_Natsumi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 B3602 \u6700\u77ed\u8def\u95ee\u9898_2"
    },
    {
        "content": "\u6b63\u5237\u7740\u6c34\u9898\uff0c\u5374\u7a81\u7136\u53d1\u73b0\u4e86\u8fd9\u9053\u9898\u76ee\u3002\u521a\u597d\u662f\u6211\u4eec\u6628\u5929\u5b66\u7684\uff0c\u4e8e\u662f\u524d\u6765\u5de9\u56fa\u3002\n\n**\u9898\u610f**\uff1a\u7ed9\u6211\u4eec $n$ \u4e2a\u70b9,$m$ \u6761\u8fb9\uff0c\u6bcf\u4e2a\u8fb9\u90fd\u6709\u4e2a\u957f\u5ea6\uff0c\u8ba9\u6211\u4eec\u6c42\u4ece 1 \u5230\u5404\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n**\u601d\u8def**\uff1a\u8fd9\u9053\u9898\u5b83\u7684\u6743\u503c\uff08\u4e5f\u5c31\u662f\u8def\u5f84\uff09\u5927\u4e8e\u7b49\u4e8e $1$\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u7528 Dijkstra \u6765\u89e3\u8fd9\u9053\u9898\u3002\uff08~~\u56e0\u4e3a\u6211\u6682\u65f6\u53ea\u5b66\u61c2\u4e86\u8fd9\u4e2a\u7b97\u6cd5~~\uff09\u7531\u4e8e\u6015\u6570\u636e\u70b9\u5361\u6211\uff0c\u4e8e\u662f\u6211\u548c\u9898\u76ee\u6597\u667a\u6597\u52c7\uff0c\u52a0\u4e0a\u4e86\u5806\u4f18\u5316\u3002\u8fd9\u4e5f\u662f\u5f88\u7ecf\u5178\u7684 SSSP \u9898\u76ee(\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\uff09\uff0c\u503c\u5f97\u53bb\u5237\u3002\u5bf9\u4e8e\u8fd9\u79cd\u9898\u76ee\u6709\u51e0\u79cd\u505a\u6cd5\uff1a\n\n1.Dijkstra \u7b97\u6cd5\u3002\n\n2.\u7528\u4e86\u4f18\u5148\u961f\u5217\u7684 Dijkstra\u3002\n\n3.Bellman-Ford \u7b97\u6cd5\n\n4.SPFA\n\n\u63a5\u4e0b\u6765\u4ecb\u7ecd\u4e00\u4e0b Dijkstra\u3002Dijkstra (\u8fea\u6770\u65af\u7279\u62c9)\u7b97\u6cd5\u662f\u5178\u578b\u7684**\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5**\uff0c\u7528\u4e8e\u8ba1\u7b97\u4e00\u4e2a\u8282\u70b9\u5230\u5176\u4ed6\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\u4e3b\u8981\u7279\u70b9\u662f**\u4ee5\u8d77\u59cb\u70b9\u4e3a\u4e2d\u5fc3\u5411\u5916\u5c42\u5c42\u6269\u5c55\uff0c\u76f4\u5230\u6269\u5c55\u5230\u7ec8\u70b9\u4e3a\u6b62**\u3002\n\n**\u7b97\u6cd5\u601d\u60f3** \uff1a \u8bbe $G=(V,E)$ \u662f\u4e00\u4e2a\u5e26\u6743\u6709\u5411\u56fe\uff0c\u628a\u56fe\u4e2d\u9876\u70b9\u96c6\u5408 $V$ \u5206\u6210\u4e24\u7ec4\uff0c\u7b2c\u4e00\u7ec4\u4e3a\u5df2\u6c42\u51fa\u6700\u77ed\u8def\u5f84\u7684\u9876\u70b9\u96c6\u5408\uff08\u7528 $S$ \u8868\u793a\uff0c\u521d\u59cb\u65f6 $S$ \u4e2d\u53ea\u6709\u4e00\u4e2a\u6e90\u70b9\uff0c\u4ee5\u540e\u6bcf\u6c42\u5f97\u4e00\u6761\u6700\u77ed\u8def\u5f84 , \u5c31\u5c06\u52a0\u5165\u5230\u96c6\u5408 $S$ \u4e2d\uff0c\u76f4\u5230\u5168\u90e8\u9876\u70b9\u90fd\u52a0\u5165\u5230 $S$ \u4e2d\uff0c\u7b97\u6cd5\u5c31\u7ed3\u675f\u4e86\uff09\uff0c\u7b2c\u4e8c\u7ec4\u4e3a\u5176\u4f59\u672a\u786e\u5b9a\u6700\u77ed\u8def\u5f84\u7684\u9876\u70b9\u96c6\u5408\uff08\u7528 $U$ \u8868\u793a\uff09\uff0c\u6309\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u7684\u9012\u589e\u6b21\u5e8f\u4f9d\u6b21\u628a\u7b2c\u4e8c\u7ec4\u7684\u9876\u70b9\u52a0\u5165 $S$ \u4e2d\u3002\u5728\u52a0\u5165\u7684\u8fc7\u7a0b\u4e2d\uff0c\u603b\u4fdd\u6301\u4ece\u6e90\u70b9 $v$ \u5230 $S$ \u4e2d\u5404\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u4e0d\u5927\u4e8e\u4ece\u6e90\u70b9 $v$ \u5230 $U$ \u4e2d\u4efb\u4f55\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002\u6b64\u5916\uff0c\u6bcf\u4e2a\u9876\u70b9\u5bf9\u5e94\u4e00\u4e2a\u8ddd\u79bb\uff0c$S$ \u4e2d\u7684\u9876\u70b9\u7684\u8ddd\u79bb\u5c31\u662f\u4ece $v$ \u5230\u6b64\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c$U$ \u4e2d\u7684\u9876\u70b9\u7684\u8ddd\u79bb\uff0c\u662f\u4ece $v$ \u5230\u6b64\u9876\u70b9\u53ea\u5305\u62ec $S$ \u4e2d\u7684\u9876\u70b9\u4e3a\u4e2d\u95f4\u9876\u70b9\u7684\u5f53\u524d\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002\n\u666e\u901a\u7684 Dijkstra \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$\uff0c\u7531\u4e8e\u51fa\u9898\u8005\u53ef\u80fd\u4e0d\u6000\u597d\u610f\u6240\u4ee5\u6211\u4eec\u5c31\u7528\u5806\u4f18\u5316\u7684\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u53ea\u9700\u8981$O((n + m) * log m)$\u3002\n\n**\u7b97\u6cd5\u8bc1\u660e\uff1a**\n![](https://cdn.luogu.com.cn/upload/image_hosting/cmor0vw2.png)\n\n**\u4ee3\u7801\u5206\u6790**\uff1a\u9996\u5148\u628a\u90a3\u4e9b\u8def\u5f84\u5168\u90e8\u8f93\u5165\uff0c\u7136\u540e\u7528[\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe](https://www.baidu.com/s?ie=utf-8&f=3&rsv_bp=1&rsv_idx=1&tn=baidu&wd=%E9%93%BE%E5%BC%8F%E5%89%8D%E5%90%91%E6%98%9F%E5%AD%98%E5%9B%BE&fenlei=256&rsv_pq=f7fe6b6f0002ae48&rsv_t=172fFT1OpR7P8jIJX%2FEeIiPHoMUNNWtSphjpR9KB0i812RTd1kiRzToDrhY&rqlang=cn&rsv_enter=1&rsv_dl=ts_0&rsv_sug3=20&rsv_sug1=18&rsv_sug7=100&rsv_sug2=1&rsv_btype=i&prefixsug=%25E9%2593%25BE%25E5%25BC%258F%25E5%2589%258D%25E5%2590%2591%25E6%2598%259F&rsp=0&inputT=8274&rsv_sug4=8275)\u3002\n```cpp\nint cnt,z[1000001],qz[1000001],next[1000001],f[100001];\nvoid add(int a,int b,int c){\n\tcnt++;\n\tz[cnt] = b;\n\tqz[cnt] = c;\n\tnext[cnt] = f[a];\n\tf[a] = cnt;\n}\n```\n\n\u540e\u9762\u662fDijkstra\u90e8\u5206\n```\nfor(int i = 1;i <= n;i++){\n\td[i] = inf;//\u521d\u59cb\u5316\uff0c\u8ba9d[1] = 0\n}\nd[1] = 0;\nq.push(make_pair(0,1));////\u8fd9\u91cc\u91c7\u7528C++\u81ea\u5e26\u4e8c\u5143\u7ec4\u7f16\u5199\u3002\u6ce82* \nwhile(q.size()){//\u5f53\u5806\u4e2d\u8fd8\u6709\u5143\u7d20 \n\tint x = q.top().second;\n\tq.pop();//\u53d6\u5b8c\u5c31\u5220 \n\tif(visited[x]){//\u5224\u65ad\u6709\u6ca1\u6709\u7ecf\u8fc7\n\t\tcontinue;\n\t}\n\tvisited[x] = 1;//\u628a\u5b83\u6807\u8bb0\u4e3a\u8d70\u8fc7\n\tfor(int i = f[x];i;i = next[i]){\n\t\tif(d[z[i]] > d[x] + qz[i]){//dijkstra\u7b97\u6cd5\u6838\u5fc3\u8bed\u53e5 \n\t\t\td[z[i]] = d[x] + qz[i];//\u66ff\u6362\n\t\t\tq.push(make_pair(d[z[i]],z[i]));//\u6bcf\u6b21\u677e\u5f1b\u6210\u529f\uff0c\u628a\u5173\u4e8e\u5f53\u524d\u70b9\u7684\u4fe1\u606f\u538b\u5165\u5806\u3002\n\t\t}\n\t}\n}\n\u6ce82\uff1aC++\u81ea\u5e26\u7684\u4e8c\u5143\u7ec4pair,\u5b9a\u4e49\u65b9\u6cd5\u662fpair<(\u6570\u636e\u7c7b\u578b1),(\u6570\u636e\u7c7b\u578b2)>(\u540d\u79f0)\u3002\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u53d8\u91cf\u7684\u7ed3\u6784\u4f53\u3002pair\u4e2d\u7684\u4e24\u4e2a\u6210\u5458\u4f7f\u7528.first\u548c.second\u8fdb\u884c\u8bbf\u95ee\u3002\u5728\u4f18\u5148\u961f\u5217\u91cc\uff0cpair\u662f\u4ee5first\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u3001\u4ee5second\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u7684\u3002\u5411pair\u4e2d\u63d2\u5165\u5143\u7d20\u53ef\u4ee5\u76f4\u63a5\u50cf\u7ed3\u6784\u4f53\u4e00\u6837\u8d4b\u503c\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528make_pair()\u63d2\u5165\u3002 \n```\n\n**\u5b8c\u6574\u4ee3\u7801**\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf = 2147483647;\npriority_queue <pair<int,int>,vector<pair<int,int> //STL\u4f18\u5148\u961f\u5217\uff08\u4f7f\u7528pair\u7684\u60c5\u51b5\u4e0b\uff09\u7684\u5b9a\u4e49\u65b9\u6cd5\u3002\u7531\u4e8e\u8981\u91c7\u7528\u5c0f\u6839\u5806\uff0c\u6240\u4ee5\u9700\u8981\u8fd9\u6837\u5b9a\u4e49\u3002\u6ce8* >,greater<pair<int,int> > >q;\nint n,m,s,u,v,w;\nlong long z[1000001],qz[1000001],cnt,d[10000001],next[10000001],f[10000001];\nbool visited[1000001];\nvoid add(int a,int b,int c){//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\n\tcnt++;\n\tz[cnt] = b;\n\tqz[cnt] = c;\n\tnext[cnt] = f[a];\n\tf[a] = cnt;\n}\nint main(){\n\tcin >> n >> m;\n\tfor(int i = 1;i <= m;i++){\n\t\tcin >> u >> v >> w;\n\t\tadd(u,v,w);\n\t}\n\tfor(int i = 1;i <= n;i++){\n\t\td[i] = inf;\n\t}\n\td[1] = 0;//\u521d\u59cb\u5316dis\u6570\u7ec4\n\tq.push(make_pair(0,1));//\u8fd9\u91cc\u91c7\u7528C++\u81ea\u5e26\u4e8c\u5143\u7ec4\u7f16\u5199\u3002\u6ce82*\n\twhile(q.size()){ \n\t\tint x = q.top().second;//q.top()\u53d6\u51fa\u5806\u9876\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u8ddd\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u70b9\u3002\n\t\tq.pop();//\u53d6\u5b8c\u5c31\u5220 \n\t\tif(visited[x]){\n\t\t\tcontinue;\n\t\t}\n\t\tvisited[x] = 1;\n\t\tfor(int i = f[x];i;i = next[i]){\n\t\t\tif(d[z[i]] > d[x] + qz[i]){\n\t\t\t\td[z[i]] = d[x] + qz[i];\n\t\t\t\tq.push(make_pair(d[z[i]],z[i]));\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 1;i <= n;i++){\n\t\tif(d[i] == 2147483647){\n\t\t\tcout << \"-1 \";\n\t\t\tcontinue;\n\t\t}\n\t\tcout << d[i] << \" \";\n\t}\n\treturn 0;\n}\n\u6ce8\uff1apriority_queue<(\u6570\u636e\u7c7b\u578b)>\u7684\u5b9a\u4e49\u65b9\u6cd5\u9ed8\u8ba4\u662f\u5927\u6839\u5806\u3002\u53ea\u6709priority_queue<(\u6570\u636e\u7c7b\u578b),vector<(\u6570\u636e\u7c7b\u578b)>,greater<(\u6570\u636e\u7c7b\u578b)> >\u7684\u65b9\u6cd5\u624d\u80fd\u5b9a\u4e49\u5c0f\u6839\u5806\u3002\u53e6\u5916\uff0c\u5e94\u8be5\u7528\u7a7a\u683c\u5206\u5f00\u4e24\u4e2a\u8fde\u5728\u4e00\u8d77\u7684\u5c16\u62ec\u53f7(<<\u6216>>)\uff0c\u5426\u5219\u7f16\u8bd1\u5668\u4f1a\u628a\u5b83\u8bc6\u522b\u6210\u6d41\u8bfb\u53d6\u8fd0\u7b97\u7b26\u3002\n \t\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u4e0d\u8fc7\u6211\u89c9\u5f97\u8fd9\u6837\u66f4\u597d\u4e9b\u3002\u6bd5\u7adf\u4e0d\u5c11\u4eba\u4e0d\u4f1a\u91cd\u8f7d\u3002\n \t\u53e6\u5916\uff0c\u4f18\u5148\u961f\u5217\u867d\u7136\u7b49\u4ef7\u4e8e\u5806\uff0c\u4f46\u662f\u5185\u90e8\u539f\u7406\u662f\u901a\u8fc7\u7ed9\u4e88\u53d8\u91cf\u4e00\u4e2a\u4f18\u5148\u503c\u6765\u5b9e\u73b0\u7684\uff0c\u4e0e\u5806\u4e0d\u540c\u3002\n\u6ce82\uff1aC++\u81ea\u5e26\u7684\u4e8c\u5143\u7ec4pair,\u5b9a\u4e49\u65b9\u6cd5\u662fpair<(\u6570\u636e\u7c7b\u578b1),(\u6570\u636e\u7c7b\u578b2)>(\u540d\u79f0)\u3002\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u53d8\u91cf\u7684\u7ed3\u6784\u4f53\u3002pair\u4e2d\u7684\u4e24\u4e2a\u6210\u5458\u4f7f\u7528.first\u548c.second\u8fdb\u884c\u8bbf\u95ee\u3002\u5728\u4f18\u5148\u961f\u5217\u91cc\uff0cpair\u662f\u4ee5first\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u3001\u4ee5second\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u7684\u3002\u5411pair\u4e2d\u63d2\u5165\u5143\u7d20\u53ef\u4ee5\u76f4\u63a5\u50cf\u7ed3\u6784\u4f53\u4e00\u6837\u8d4b\u503c\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528make_pair()\u63d2\u5165\u3002 \n```\n\n\u601d\u8def\u6765\u81ea\u4e8e Ophelia \u7684 P3371 \u7684\u535a\u5ba2\u3002\n\n\u849f\u84bb\u7684\u4ee3\u7801\uff0c\u5982\u6709\u4e0d\u8db3\uff0c\u8bf7\u5927\u4f6c\u6307\u6559\u3002",
        "postTime": 1627459121,
        "uid": 181845,
        "name": "luozhichen",
        "ccfLevel": 4,
        "title": "B3602 [\u56fe\u8bba\u4e0e\u4ee3\u6570\u7ed3\u6784 202] \u6700\u77ed\u8def\u95ee\u9898_2\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6700\u77ed\u8def\u7684\u6a21\u677f\u9898\u3002\n\n\u770b\u6570\u636e\u8303\u56f4\uff0c$n,m \u2264 3 \\times 10^5$,\u666e\u901a\u7684   $\\text{dijsktra}$ \u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$, \u80af\u5b9a\u901a\u4e0d\u8fc7\uff0c\u800c $\\text{SPFA}$ \u5bb9\u6613\u88ab\u5361\uff0c\u6211\u4eec\u8981\u91c7\u7528\u5806\u4f18\u5316 $\\text{dijsktra}$ \u7b97\u6cd5\u3002\n\n\u7b97\u6cd5\u601d\u60f3\u6211\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86\uff0c\u5c31\u662f\u7528 $\\text{STL}$ \u4e2d\u7684\u4f18\u5148\u961f\u5217\u6765\u4f18\u5316\u627e\u6700\u5c0f\u503c\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+m)  \\ log_2\\ n)$\u3002\n\n\u91cd\u8fb9\u548c\u81ea\u73af\u5ffd\u7565\u5373\u53ef\uff0c\u56e0\u4e3a\u4e0a\u8ff0\u7b97\u6cd5\u4e0d\u4f1a\u9996\u5b83\u4eec\u7684\u5f71\u54cd\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst long long inf = 1e15 + 7; //inf\u8981\u8db3\u591f\u5927\n\nstruct edge\n{\n\tlong long w;\n\tlong long v; \n};\n\nstruct node\n{\n\tlong long pos;\n\tlong long dis;\n\tbool operator <(const node &a)const //\u7ed9priority_queue\u91cd\u8f7d\u8fd0\u7b97\u7b26\n\t{\n\t\treturn dis > a.dis;\n\t}\n};\n\nvector<edge> adj[300005];\npriority_queue<node> q;\nlong long dist[300005];\nbool vis[300005];\nlong long n, m, s;\n\nvoid djstl()\n{\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tvis[i] = false;\n\t\tdist[i] = inf;\n\t}\n\tnode node_u;\n\tnode_u.pos = s;\n\tnode_u.dis = 0;\n\tq.push(node_u);\n\tdist[s] = 0;\n\twhile(!q.empty())\n\t{\n\t\tnode_u = q.top();\n\t\tq.pop();\n\t\tif(vis[node_u.pos] == true)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tvis[node_u.pos] = true;\n\t\tfor(int i = 0; i < adj[node_u.pos].size(); i++)\n\t\t{\n\t\t\tlong long v = adj[node_u.pos][i].v;\n\t\t\tlong long w = adj[node_u.pos][i].w;\n\t\t\tif(dist[node_u.pos] + w < dist[v]) //\u677e\u5f1b\uff0c\u62d0\u5f2f\n\t\t\t{\n\t\t\t\tdist[v] = dist[node_u.pos]+w;\n\t\t\t\tnode tmp;\n\t\t\t\ttmp.dis = dist[v];\n\t\t\t\ttmp.pos = v;\n\t\t\t\tq.push(tmp);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%lld%lld\", &n, &m);\n    s = 1;\t\n\tint u;\n\tedge vw;\n\tfor(int i = 0; i < m; i++) //\u90bb\u63a5\u8868\u5b58\u56fe\n\t{\n\t\tscanf(\"%d%lld%lld\", &u, &vw.v, &vw.w);\n\t\tadj[u].push_back(vw);\n\t}\n\tdjstl();\n\tfor(int i = 1; i <= n; i++) //\u8f93\u51fa\n\t{\n\t\tif (dist[i] == inf)\n        {\n            cout << \"-1 \";\n            continue;\n        }\n        cout << dist[i] << \" \";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1626692347,
        "uid": 228770,
        "name": "CuSO4_MKC",
        "ccfLevel": 3,
        "title": "\u3010\u9898\u89e3\u3011B3602 [\u56fe\u8bba\u4e0e\u4ee3\u6570\u7ed3\u6784 202] \u6700\u77ed\u8def\u95ee\u9898_2"
    },
    {
        "content": "## \u539f\u6587\u9605\u8bfb\n\n[**\u91cd\u5b66\u6700\u77ed\u8def\uff1a\u6b65\u6b65\u9012\u8fdb\uff0c\u5c42\u5c42\u7d27\u903c**](https://www.luogu.com.cn/blog/LinearExpectation/shortest-path-in-another-sight)\n\n\u7531\u4e8e\u672c\u9898\u5e76\u4e0d\u6d89\u53ca\u90a3\u4e48\u591a\u79cd\u7684\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd Dijkstra \u4e00\u79cd\u3002\n\n## Dijkstra \u57fa\u7840\n\n\u73b0\u5728\u6211\u4eec\u4e00\u5171\u6709 $n$ \u4e2a\u8282\u70b9\uff0c$m$ \u6761\u8fb9\uff08\u5927\u6982\u662f\u6709\u5411\u8fb9\uff09\uff0c\u4ee5\u53ca\u4e00\u4e2a\u521d\u59cb\u8282\u70b9 $s$\uff0c\u8981\u6c42\u6211\u4eec\u6c42\u51fa\u4ece $s$ \u5230\u5176\u4ed6\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u7ec4 $d$\uff0c\u7528\u4e8e\u5b58\u50a8\u4ece $s$ \u5230 $1\\sim n$ \u7684\u6700\u77ed\u8def\u957f\u5ea6\uff0c\u8868\u793a\u4e3a $d_1\\sim d_n$\u3002\u4e8e\u6b64\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a $e$ \u6570\u7ec4\u6765\u5b58\u50a8\u6574\u5f20\u56fe\uff0c$e_{u,v}$ \u8868\u793a\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\u957f\u5ea6\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u6570\u7ec4 $vis$ \u6765\u786e\u5b9a\u4ece $s$ \u5230\u4e00\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u662f\u5426\u88ab\u786e\u5b9a\u4e86\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u628a $s$ \u7684\u6240\u6709\u51fa\u8fb9\u90fd\u52a0\u5165\u5230 $d$ \u6570\u7ec4\u4e2d\uff0c\u8b6c\u5982\u8fd9\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/d3qg0843.png)\n\n\u5982\u679c\u4ee4 $s=1$\uff0c\u90a3\u4e48\u5b83\u7684 $d=\\{0,5,3,2,\\infty,\\infty\\}$\n\n\u63a5\u7740\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u627e\u5230\u6700\u5c0f\u7684\u90a3\u4e2a\u8282\u70b9\u2014\u2014\u4e5f\u5c31\u662f\u79bb\u51fa\u53d1\u70b9\u6700\u8fd1\u7684\u90a3\u4e2a\u8282\u70b9\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e2a\u8bb0\u5f97\u70b9\u662f $4$\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u8d70\u5411 $4$ \u53f7\u8282\u70b9\u3002\n\n\u8fd9\u65f6\u8fd9\u4e2a $4$ \u53f7\u8282\u70b9\u7684\u6700\u77ed\u8def\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5982\u679c\u8d70\u4efb\u4f55\u4e00\u6761\u5176\u4ed6\u8def\uff0c\u521a\u8d70\u7b2c\u4e00\u6b65\u5c31\u4f1a\u6bd4\u8fd9\u6761\u6700\u77ed\u8def\u8981\u957f\uff0c\u6240\u4ee5\uff0c\u76f4\u63a5\u8d70\u5230 $4$ \u5fc5\u7136\u6bd4\u7ed5\u5176\u4ed6\u7684\u8def\u8981\u6765\u7684\u77ed\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u6807\u8bb0 $4$ \u4e3a\u5df2\u7ecf\u786e\u5b9a\u6700\u77ed\u8def\u7684\u70b9\n\n\u63a5\u7740\u6211\u4eec\u8981\u505a\u7684\u662f\u8003\u5bdf $4$ \u53f7\u8282\u70b9\u7684\u6240\u6709\u51fa\u8fb9\uff0c\u8fd9\u65f6\u4f60\u9700\u8981\u770b\u4e00\u770b\u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u4ece $4$ \u7ecf\u8fc7\u518d\u5230\u67d0\u4e2a\u8282\u70b9 $x$\uff0c\u4f1a\u4e0d\u4f1a\u6bd4\u76f4\u63a5\u4ece $1$ \u5230 $x$ \u66f4\u8fd1\uff1f\u5982\u679c\u662f\u7684\uff0c\u90a3\u4e48\u66f4\u65b0\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f60\u53d1\u73b0 $1\\to 4\\to 5$ \u957f\u5ea6\u4e3a $8$\uff0c\u6bd4 $d_5=\\infty$ \u8981\u5c0f\u591a\u4e86\uff0c\u90a3\u4e48\u66f4\u65b0\u5427\uff01\u6b64\u65f6\u7684\u7684 $d=\\{0,5,3,2,8,\\infty\\}$\n\n\u8fd9\u65f6\uff0c\u672a\u786e\u5b9a\u6700\u77ed\u8def\u7684\u70b9\u4e2d\uff0c\u6700\u5c0f\u7684\u662f $3$ \u4e86\uff0c\u90a3\u5c31\u8d70\u5411 $3$ \u5427\uff0c\u5e76\u4e14\u628a\u4ed6\u6807\u8bb0\u4e3a\u5df2\u7ecf\u786e\u5b9a\u3002$3$ \u7684\u51fa\u8fb9\u6307\u5411 $4,5$\uff0c\u6b64\u65f6\u6267\u884c\u5982\u4e0b\uff1a\n\n- $(1\\to 3\\to 4)>(1\\to 4)$\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\u3002\n- $(1\\to 3\\to 5)<(1\\to 4\\to 5)$\uff0c\u9700\u8981\u66f4\u65b0\u3002\n\n\u8fd9\u65f6\u5019\u53d1\u73b0\u6709\u4e00\u6761\u8def\u6bd4\u539f\u6709\u7684 $d_5$ \u66f4\u5c0f\uff01\u90a3\u4e48\u5c31\u53ef\u4ee5\u66f4\u65b0\u4e86\u66f4\u65b0\u5b8c\u662f\u8fd9\u6837\uff1a$d=\\{0,5,3,2,7,\\infty\\}$\u3002\u6b64\u65f6\u7684 $vis$ \u6570\u7ec4\u4e2d $1,3,4$ \u90fd\u5df2\u7ecf\u88ab\u786e\u5b9a\u4e86\u3002\u6211\u4eec\u628a\u76ee\u5149\u6295\u5411 $2$\u3002\n\n\u7ee7\u7eed\u66f4\u65b0\uff01\u6b64\u65f6\u7684 $2$ \u4e00\u5171\u6709 $3,6$ \u4e24\u4e2a\u51fa\u8fb9\uff0c\u4f5c\u7c7b\u4f3c\u7684\u5224\u65ad\u4e4b\u540e\u6211\u4eec\u53d1\u73b0\u53ea\u6709 $6$ \u53ef\u4ee5\u66f4\u65b0\uff0c\u90a3\u4e48 $d=\\{0,5,3,2,7,10\\}$\uff0c$vis={1,2,3,4}$\u3002\n\n\u63a5\u7740\u7684\u66f4\u65b0\u5185\u5bb9\u5c31\u7b80\u5355\u5730\u6982\u8ff0\u4e86\uff1a\n\n- \u770b\u5411 $5$ \u53f7\u8282\u70b9\u3002\n- \u66f4\u65b0\u4e0d\u4e86\u8282\u70b9\uff0c$5$ \u53f7\u8bbe\u4e3a\u786e\u5b9a\u3002\n- \u770b\u5411 $6$ \u53f7\u8282\u70b9\u3002\n- \u66f4\u65b0\u4e0d\u4e86\u8282\u70b9\u3002\n\n\u7b97\u6cd5\u7ed3\u675f\u3002\u8fd9\u65f6\u5019\u4f60\u4f1a\u53d1\u73b0\uff0c\u6709\u4e00\u90e8\u5206\u8fb9\u662f\u6ca1\u6709\u8d70\u8fc7\u7684\uff0c\u6211\u4eec\u53ea\u904d\u5386\u4e86\u4e00\u4e9b\u70b9\uff0c\u5e76\u4e14\u4e00\u76f4\u5728\u8d70\u201c\u6743\u503c\u6700\u5c0f\u201d\u7684\u90a3\u6761\u8def\u3002\u8fd9\u4f3c\u4e4e\u662f\u8d2a\u5fc3\uff0c\u90a3\u4e48\uff0c\u4ed6\u4e3a\u4ec0\u4e48\u6b63\u786e\u5462\uff1f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u542b\u8d1f\u8fb9\u7684\u56fe\uff0c\u5168\u5c40\u6700\u5c0f\u503c\u4e0d\u53ef\u80fd\u518d\u88ab\u5176\u4ed6\u8282\u70b9\u66f4\u65b0\uff0c\u56e0\u4e3a\u6bcf\u5f53 $x$ \u88ab\u7eb3\u5165\u4e86 $vis$ \u6570\u7ec4\uff0c\u4ed6\u7684\u6700\u77ed\u8def\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u6b63\u5982\u524d\u6587\u6240\u8bf4\uff1a\u201c\u5982\u679c\u8d70\u4efb\u4f55\u4e00\u6761\u5176\u4ed6\u8def\uff08\u8d70\u5df2\u7ecf\u66f4\u65b0\u7684\u6700\u77ed\u8def\uff09\uff0c\u6240\u4f7f\u7528\u957f\u5ea6\u5fc5\u7136\u7684\u6bd4\u5f53\u524d\u8fd9\u6761\u6700\u77ed\u8def\u8981\u957f\uff0c\u6240\u4ee5\uff0c\u73b0\u5728\u8fd9\u6761\u8001\u8def\u4e0d\u53ef\u80fd\u518d\u88ab\u5176\u4ed6\u5df2\u786e\u5b9a\u6700\u77ed\u8def\u66f4\u957f\u7684\u8def\u5f84\u66f4\u65b0\u4e86\u3002\u201d\n\n\u7531\u4e8e\u8fd9\u79cd\u7b97\u6cd5\u4e0d\u5305\u542b\u540e\u6094\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u4e0d\u80fd\u5e94\u5bf9\u542b\u8d1f\u6743\u8fb9\u7684\u56fe\u3002\n\n\u7531\u4e8e\u6709 $n$ \u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u5fc5\u7136\u8d70\u8fc7\u4e00\u6b21\uff0c\u4e14\u6bcf\u6b21\u90fd\u9700\u8981\u5728 $n$ \u4e2a $d_i$ \u4e2d\u627e\u6700\u5c0f\u503c\uff0c\u4e14\u6bcf\u6b21\u90fd\u8981\u5728\u627e\u6240\u6709\u7684\u51fa\u8fb9\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\u3002\n\n## Dijkstra \u4f18\u5316\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5728 $d$ \u6570\u7ec4\u4e2d\u627e\u5230\u6700\u5c0f\u503c\u7684\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u4f18\u5316\uff0c\u600e\u4e48\u4f18\u5316\u5462\uff1f\n\n\u5982\u679c\u7528\u5806\u4f18\u5316\u662f $O(m\\log n)$\uff0c\u5982\u679c\u7528\u4f18\u5148\u961f\u5217\u65f6 $O(m\\log m)$\u3002\u4f46\u662f\u4e5f\u6709\u8bf4\u6cd5\u8bf4\u5806\u4f18\u5316\u662f $O((n+m)\\log n)$\uff0c\u4f3c\u4e4e\u8fd8\u633a\u4f18\u79c0\u7684\u3002\n\n\u7531\u4e8e $m$ \u6700\u5927\u65f6\u53ef\u4ee5\u8fbe\u5230 $n^2$ \u7ea7\u522b\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u770b\u7740\u529e\u5427\u3002\u4f3c\u4e4e\u5bf9\u4e8e\u666e\u901a\u7684\u6570\u636e\u5e76\u4e0d\u5bb9\u6613\u51fa\u73b0 $m=n^2$ \u8fd9\u79cd\u60c5\u51b5\uff08\u7a20\u5bc6\u56fe\uff09\uff0c\u6240\u4ee5\u5bf9\u4e8e\u968f\u673a\u6570\u636e\uff0c\u4f60\u53ef\u80fd\u53ef\u4ee5\u9009\u62e9\u5361\u5e38\u800c\u4e0d\u4f18\u5316\uff0c\u4f46\u662f\u9762\u5bf9\u523b\u610f\u4e3a\u4e4b\u7684\u6570\u636e\uff0c\u4f60\u4e0d\u5f97\u4e0d\u627f\u8ba4\uff1a\u8fd9\u4e2a\u4f18\u5316\u662f\u5e7f\u6cdb\u800c\u4e14\u6709\u6548\u7684\u3002\n\n\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\uff0c\u5982\u679c\u4e0d\u4f1a\u8bf7\u56de\u5230\u672c\u6587\u5f00\u5934\u627e\u8d44\u6599\u3002\n\n\u9996\u5148\u4f60\u9700\u8981\u4e00\u4e2a $\\rm\\small node$ \u7c7b\u578b\uff0c\u8fd9\u79cd\u7c7b\u578b\u5305\u542b\u4e24\u4e2a\u4fe1\u606f\uff1a$\\rm\\small id,dis$\uff0c\u5206\u522b\u662f\u4e0a\u6587\u6240\u8bf4\u7684\u201c\u4e0b\u6807\u201d\u548c\u201c\u8ddd\u79bb\u8d77\u70b9\u7684\u957f\u5ea6\u201d\u3002\u4e0b\u6807\u4e5f\u5c31\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u7f16\u53f7\u3002\u63a5\u7740\u6211\u4eec\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u8ba9 $<$ \u6bd4\u8f83\u7684\u201c\u4f9d\u636e\u201d\u662f\u8ddd\u79bb\u8d77\u70b9\u7684\u957f\u5ea6\uff0c\u8fd9\u6837\u6211\u4eec\u5bfc\u5165\u4f18\u5148\u961f\u5217\u65f6\uff0c\u5c31\u81ea\u7136\u6309\u7167\u8ddd\u79bb\u6392\u5e8f\uff0c\u6211\u4eec\u4e5f\u5c31\u80fd\u591f\u5f88\u5bb9\u6613\u53d6\u51fa\u201c\u8ddd\u79bb\u6700\u77ed\u201d\u7684\u90a3\u4e2a\u70b9\u4e86\u3002\n\n\u8fd9\u4e00\u6bb5\u7684\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\nstruct node{\n    int dis,id;\n    bool operator <(const node &x)const{\n        return x.dis<dis;\n    }//\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u6bd4\u8f83\u8282\u70b9\u7684\u65b9\u5f0f\u662f\u6bd4\u8f83\u5176\u76f8\u8ddd\u8d77\u70b9\u7684\u8ddd\u79bb\n\t//\u4fbf\u4e8e\u4e4b\u540e\u4f7f\u7528\u4f18\u5148\u961f\u5217\u6bd4\u8f83 \n};\n```\n\n\u7136\u540e\u6211\u4eec\u6bcf\u6b21\u53d6\u51fa\u961f\u5934\u3001\u5f39\u51fa\u5c31\u884c\u4e86\u3002\u6ce8\u610f\u4e00\u4e9b\u5c0f\u4f18\u5316\uff1a\n\n- \u5904\u7406 $x$ \u8282\u70b9\u65f6\uff0c\u5982\u679c\u4ed6\u5df2\u7ecf\u88ab\u5904\u7406\u8fc7\uff0c\u5c31\u8df3\u8fc7\u3002\n\n\u4e3a\u4ec0\u4e48\u201c\u5df2\u7ecf\u786e\u5b9a\u201d\u7684\u8282\u70b9\u8fd8\u4f1a\u518d\u9047\u5230\u4e00\u6b21\uff1f\u8fd9\u662f\u56e0\u4e3a\u4f18\u5148\u961f\u5217\u53ea\u80fd\u5bf9\u961f\u5934\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e0d\u80fd\u591f\u5b9e\u73b0\u5220\u9664\u4efb\u610f\u5143\u7d20\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u677e\u5f1b\u90fd\u8981\u538b\u5165\u3002\u90a3\u8fd9\u6837\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u5f71\u54cd\u6b63\u786e\u6027\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u53d6\u51fa\u8282\u70b9\uff0c\u90fd\u662f\u53d6\u5b83\u201c\u6240\u6709\u5728\u961f\u5217\u4e2d\u503c\u201d\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u800c\u65e2\u7136\u201c\u6700\u5c0f\u201d\uff0c\u5fc5\u5b9a\u66f4\u7b26\u5408\u8981\u6c42\uff0c\u6240\u4ee5\u662f\u6b63\u786e\u7684\u7684\u3002\n\n- \u904d\u5386 $x$ \u7684\u51fa\u8fb9 $y$ \u7684\u65f6\u5019\uff0c\u5982\u679c\u5904\u7406\u8fc7\uff0c\u5c31\u8df3\u8fc7\u3002\n\n\u6ca1\u4ec0\u4e48\u6709\u7528\u7684\u4f18\u5316\uff0c\u4f46\u662f\u770b\u7740\u4ee3\u7801\u903b\u8f91\u66f4\u6e05\u6670\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u5168\u6587\u4ee3\u7801\uff0c\u53ef\u4ee5\u7ed3\u5408\u6ce8\u91ca\u7406\u89e3\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define MAXN 1000005\n#define MAXM 3000005\n#define INF 4557430888798830399\nstruct edge{\n\tint to,w,nxt;\n}e[MAXM];\nint head[MAXN],dis[MAXN];\nint n,m,s,cnt;\nbool sure[MAXN];//\u901a\u5f80\u8be5\u8282\u70b9\u7684\u6700\u77ed\u8def\u662f\u5426\u786e\u5b9a \nstruct node{\n    int dis,id;\n    bool operator <(const node &x)const{\n        return x.dis<dis;\n    }//\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u6bd4\u8f83\u8282\u70b9\u7684\u65b9\u5f0f\u662f\u6bd4\u8f83\u5176\u76f8\u8ddd\u8d77\u70b9\u7684\u8ddd\u79bb\n\t//\u4fbf\u4e8e\u4e4b\u540e\u4f7f\u7528\u4f18\u5148\u961f\u5217\u6bd4\u8f83 \n};\nvoid addedge(int u,int v,int w){\n    e[cnt].w=w;//\u6743\u503c\u4e3a w \n    e[cnt].to=v;//\u7ec8\u70b9\u4e3a v \n    e[cnt].nxt=head[u];//\u63a5\u5230 u \u7684 \"\u90bb\u5c45\u94fe\u8868\" \u5f00\u5934 \n    head[u]=cnt++;//\u628a \"\u5f00\u5934 \" \u66f4\u65b0\u4e3a\u8fd9\u6761\u8fb9 \n}void init(){//\u521d\u59cb\u5316\n    for(int i=0;i<=n;i++){\n    \thead[i]=-1;//\u5c1a\u672a\u8fde\u8fb9 \n    \te[i].nxt=-1;//\u6bcf\u4e2a\u8282\u70b9\u90fd\u6ca1\u8fde\u8fb9 \n\t}cnt=0;//\u4e00\u6761\u8fb9\u90fd\u6ca1\u6709 \n}priority_queue<node>q;\nvoid Dijkstra(){\n\tdis[1]=0;q.push((node){0,1});//\u538b\u5165\u8d77\u70b9 \n\twhile(!q.empty()){\n\t\tnode cur=q.top();q.pop();//\u5f53\u524d\u5904\u7406\u7684\u8282\u70b9 \n\t\tint x=cur.id,d=cur.dis;\n\t\tif(sure[x])continue;//\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5df2\u7ecf\u786e\u5b9a\uff0c\u8df3\u8fc7\n\t\tsure[x]=1;//\u5426\u5219\u6807\u8bb0\u4e3a\u786e\u5b9a\uff0c\u5e76\u4e14\u5f00\u59cb\u7740\u624b\u786e\u5b9a\n\t\tfor(int i=head[x];~i;i=e[i].nxt){//\u904d\u5386\u51fa\u8fb9 \n\t\t\tint y=e[i].to;//\u53d6\u51fa\u8fd9\u6761\u8fb9 \n\t\t\tif(sure[y])continue;//\u5982\u679c\u53d6\u51fa\u4e86\uff0c\u5c31\u8df3\u8fc7 \n\t\t\tif(dis[y]>dis[x]+e[i].w){//\u5982\u679c\u8def\u5f84\u66f4\u77ed \n\t\t\t\tdis[y]=dis[x]+e[i].w;//\u677e\u5f1b \n\t\t\t\tq.push((node){dis[y],y});//\u52a0\u5165\u961f\u5217 \n\t\t\t}\n\t\t}\n\t}\n}signed main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tinit();//\u521d\u59cb\u5316 \n\tfor(int i=0;i<=n;i++)dis[i]=INF;//\u5168\u90e8\u8bbe\u4e3a INF \n\tfor(int i=0;i<m;i++){\n\t\tint u,v,w;\n\t\tscanf(\"%lld%lld%lld\",&u,&v,&w);\n\t\tif(u!=v)addedge(u,v,w);\n\t}Dijkstra();\n\tfor(int i=1;i<=n;i++){\n\t    if(dis[i]==INF)printf(\"-1 \");\n\t    else printf(\"%lld \",dis[i]);\n\t}\n\treturn 0;\n}\n```\n\n\u4e4b\u6240\u4ee5\u80fd\u5e94\u5bf9\u91cd\u8fb9\uff0c\u56e0\u4e3a\u4f60\u5b58\u50a8\u7684\u65f6\u5019\u4f1a\u628a\u4e24\u4e2a\u8fb9\u90fd\u5b58\u4e0b\u6765\u3002\n\n\u8fd9\u9053\u9898\u76ee\u9700\u8981\u6ce8\u610f $\\inf$ \u7684\u8bbe\u7f6e\u9700\u8981\u8db3\u591f\u5927\u3002",
        "postTime": 1626193833,
        "uid": 212283,
        "name": "Aw\u987f\u987f",
        "ccfLevel": 5,
        "title": "\u3010\u9898\u89e3\u3011B3602 [\u56fe\u8bba\u4e0e\u4ee3\u6570\u7ed3\u6784 202] \u6700\u77ed\u8def\u95ee\u9898 2"
    },
    {
        "content": "## \u9898\u89e3\u7d22\u5f15\n1. **\u9898\u76ee\u5927\u610f**\n2. **Solution**\n3. **AC code**\n4. **\u7c7b\u4f3c\u9898\u578b**\n\n\u4ee3\u7801\u7c7b\u578b\uff1a C++\uff08cpp\uff09\n\n\u662f\u5426\u5438\u6c27\uff1a\u5426\n\n\u4e0d\u538b\u884c\u4ee3\u7801\u957f\u5ea6\uff1a57\uff08\u6700\u77ed\u8def\u4e00\u822c\u77ed\u4e0d\u5230\u54ea\u53bb\uff09\n\n------------\n\n## \u9898\u76ee\u5927\u610f\n\u9898\u9762\uff1a [<\u4f20\u9001\u95e8>](https://www.luogu.com.cn/problem/B3602)\n\n\u9898\u610f\uff1a\u7ed9\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684 **\u6709\u5411\u56fe** \uff0c\u53ef\u80fd\u5e26\u6709 **\u91cd\u8fb9** \u4e0e **\u81ea\u73af** \uff0c\u6c42\u70b9 $1$ \u5230\u70b9 $i(1\\le i \\le n)$ \u7684\u6700\u77ed\u8def\u5f84\u3002\n\n~~\u672f\u8bed\u7406\u89e3\uff1a\u5806\u4f18dij\u677f\u5b50\u9898\u3002~~\n\n## Solution\n \n\u9996\u5148\u8bb2\u4e00\u4e0b\u81ea\u73af\u4e0e\u91cd\u8fb9\u4ee5\u53ca\u89e3\u51b3\u65b9\u5f0f\uff0c\u4ee5\u53ca\u9009\u62e9\u7b97\u6cd5\u3001\u5b58\u50a8\u7684\u65b9\u5f0f\u3002\n\n### \u91cd\u96be\u70b9\u4ecb\u7ecd\n\n#### \u81ea\u73af\n\n\u6307\u56fe\u4e2d\u6709\u8fb9\u6307\u5411\u4e24\u4e2a\u76f8\u540c\u70b9\uff0c\u5373\u8fb9 $x$ \u4ece\u70b9 $i$ \u51fa\u53d1\u6307\u5411\u70b9 $i$ \u3002\n\n#### \u91cd\u8fb9\n\n\u6307\u56fe\u4e2d\u6709\u8d77\u70b9\u548c\u7ec8\u70b9\u76f8\u540c\u7684\u8fb9\uff08\u6743\u503c\u4e0d\u4e00\u5b9a\u76f8\u7b49\uff09\uff0c\u5373\u4e24\u6761\u8fb9 $x$ \u3001 $y$ \u5747\u4ece\u70b9 $i$ \u6307\u5411\u70b9 $j$ \uff0c\u4e14\u6743\u503c\u5206\u522b\u4e3a $w_{1}$ \u4e0e $w_{2}$ \u3002\n\n### \u9009\u62e9\u5b58\u50a8\u65b9\u5f0f\n\n#### \u90bb\u63a5\u77e9\u9635\n\n\u6570\u636e\u8303\u56f4 $n\\le 3\\times 10^{5}$ \uff0c\u90bb\u63a5\u77e9\u9635\u662f\u4e8c\u7ef4\u7684\uff0c\u80af\u5b9a\u5f00\u4e0d\u8d77\u6765\n\n#### \u90bb\u63a5\u8868\u4e0e\u94fe\u5f0f\u524d\u5411\u661f\n\n\u5176\u5b9e\u5982\u679c\u8fd9\u4e24\u4e2a\u518d\u7528\u4e0d\u4e86\u7684\u8bdd\uff0c\u57fa\u672c\u5c31\u6ca1\u6709\u5b58\u50a8\u65b9\u5f0f\u53ef\u4ee5\u8fc7\u4e86\n\n\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u662f $n,m\\le 3\\times 10^{5}$ \uff0c\u7206\u4e0d\u6389\n\n\u672c\u6587\u4e2d\u4f7f\u7528\u94fe\u5f0f\u524d\u5411\u661f\n\n### \u7b97\u6cd5\u9009\u62e9\n\n#### Floyd\n\n\u4e0d\u4f1a\u5427\u4e0d\u4f1a\u5427\uff0c\u4e0d\u4f1a\u771f\u6709\u4eba\u5728\u8fd9\u4e48\u5927\u7684\u6570\u636e\u8303\u56f4\u7528Floyd\u5427\uff1f\n\n#### Dij\n\n$n\\le 3\\times 10^{5}$ \uff0c\u5f00 $O(n^{2})$ \u6307\u5b9a\u7206\u70b8\n\n#### \u5806\u4f18Dij\n\n\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u53ea\u8981\u6ca1\u6709\u8d1f\u6743\u5c31\u7528 [\u5806\u4f18Dij](https://www.luogu.com.cn/blog/wugu-2333/dijkstra-dui-you-hua) \uff0c\u4f18\u79c0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ec5\u4ec5\u53ea\u6709 $O(n \\log n)$ \n\n### \u81ea\u73af\u4e0e\u91cd\u8fb9\u5177\u4f53\u89e3\u51b3\u65b9\u5f0f\n\n~~\u7b11\u6b7b\uff0c\u6839\u672c\u4e0d\u7528\u89e3\u51b3~~\n\n\u9996\u5148\u770b\u81ea\u73af\uff0c\u56e0\u4e3a\u5806\u4f18Dij\u539f\u672c\u5c31\u6709\u6807\u8bb0\u6570\u7ec4\uff0c\u4e5f\u4e0d\u5fc5\u62c5\u5fc3\u5361\u5728\u81ea\u73af\u91cc ~~\u65e0\u6cd5\u81ea\u62d4~~ \u8df3\u4e0d\u51fa\u6765\n\n\u5176\u6b21\u662f\u91cd\u8fb9\uff0c\u8fd9\u4e2a\u66f4\u52a0\u597d\u7406\u89e3\u3002\u6211\u63d0\u4e2a\u5c0f\u95ee\u9898\u6765\u8bb2\uff1a\n\n\u5bf9\u4e8e\u8d77\u70b9 $u$ \u4e0e\u7ec8\u70b9 $v$ \uff0c\u5982\u679c\u5b58\u5728\u4e24\u6761\u8fb9\uff08\u65b9\u5411\u4e00\u81f4\uff09\uff0c\u6743\u503c\u5206\u522b\u4e3a $w_{1}$ \u4e0e $w_{2}$ \u3002\u5982\u679c\u5df2\u77e5 $w_{1} > w_{2}$ \uff0c\u90a3\u4e48\u6362\u505a\u662f\u4f60\u6765\u9009 **\u6700\u77ed\u8def** \u7684\u8bdd\uff0c\u4f60\u4f1a\u9009\u54ea\u6761\u8fb9\u5462\uff1f\n\n\u65e0\u7591\u662f\u6743\u503c\u4e3a $w_{2}$ \u7684\u8fd9\u6761\u8fb9\uff0c\u56e0\u4e3a\u5b83\u6700\u77ed\u554a\u2026\u2026\n\n\u6240\u4ee5\uff0c\u5728\u4e24\u4e2a\u70b9\u4e4b\u95f4\u591a\u6761\u8def\uff0c\u957f\u7684\u90a3\u6761\u8fb9\u603b\u4f1a\u88ab\u77ed\u7684\u6bd4\u4e0b\u53bb\uff0c\u5982\u6b64\u5faa\u73af\u5f80\u590d\uff0c **\u91cd\u8fb9\u5e76\u4e0d\u5f71\u54cd\u7ed3\u679c**\n\n## AC code\n\n\u9898\u76ee\u4e2d\u5f3a\u8c03\u4e86 ~~\u4e0d\u5f00 `long long` \u89c1\u7956\u5b97~~ \u8981\u5f00 `long long` \uff0c\u4f46\u56e0\u4e3a\u7f16\u53f7\u6700\u9ad8\u4e5f\u624d\u5230 $n$ \u6240\u4ee5\u7f16\u53f7\u7c7b\u7684\u7528 `int` \u5c31\u591f\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int MAXN=3e5+9,MAXM=6e5+9;//\u6ce8\u610f\u8fb9\u8981\u5f002\u500d\u5927\nstruct Edge{\n    int nxt,to;\n    long long w;\n}edge[MAXM];\nint head[MAXN],num_edge=0;\nint n,m;\nlong long dis[MAXN];\nbool path[MAXN];\nstruct priority{\n    int id;\n    long long w;\n    bool operator <(const priority &x)const{return w>x.w;}\n};\npriority_queue<priority>q;\nvoid add_edge(int from,int to,long long w){\n    edge[++num_edge]={head[from],to,w};\n    head[from]=num_edge; \n}void Dijkstra(int s){\n    memset(dis,0x3f,sizeof(dis));\n    memset(path,0,sizeof(path));\n    q.push((priority){s,0});\n    dis[s]=0;\n    while(!q.empty()){\n        priority x=q.top();\n        q.pop();\n        int id=x.id;\n        if(path[id])continue;\n        path[id]=1;\n        for(int i=head[id];i;i=edge[i].nxt){\n            int to=edge[i].to;\n            if(dis[to]>dis[id]+edge[i].w){\n                dis[to]=dis[id]+edge[i].w;\n                q.push((priority){to,dis[to]});\n            }\n        }\n    }\n}\nint main(){\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int u,v;\n        long long w;\n        scanf(\"%d %d %lld\",&u,&v,&w);\n        add_edge(u,v,w);\n    }Dijkstra(1);\n    for(int i=1;i<=n;i++){\n        if(dis[i]==4557430888798830399)printf(\"-1 \");\n        else printf(\"%lld \",dis[i]);\n    }\n    return 0;\n}\n```\nAC\u8bb0\u5f55[<\u4f20\u9001\u95e8>](https://www.luogu.com.cn/record/52989620)\n\n## \u7c7b\u4f3c\u9898\u578b\n\n[P1359 \u79df\u7528\u6e38\u8247](https://www.luogu.com.cn/problem/P1359)\n\n\uff08\u5176\u5b9e\u8fd9\u79cd\u7c7b\u578b\u7684\u9898\u633a\u591a\u7684\uff0c\u5927\u591a\u90fd\u662f\u677f\u5b50\u4e00\u5957\u6539\u6539\u6570\u636e\u6539\u6539\u51e0\u884c\u4ee3\u7801\u5c31\u80fdAC\u7684\uff09\n\n",
        "postTime": 1626154323,
        "uid": 359422,
        "name": "\u65e0\u5495_",
        "ccfLevel": 4,
        "title": "B3602 [\u56fe\u8bba\u4e0e\u4ee3\u6570\u7ed3\u6784 202] \u6700\u77ed\u8def\u95ee\u9898_2 \u9898\u89e3"
    }
]