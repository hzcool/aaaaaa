[
    {
        "content": "#### \u95f2\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0d\u592a\u61c2\u8fd9\u9053\u9898\u7684\u540c\u5fd7\u4eec\u8ddf\u6211\u6765\uff01\u8ddf\u7740\u6211\u9010\u6b65\u601d\u8003\uff0c\u8ba9\u4f60\u79d2\u61c2\u6b64\u9898\uff01~~\u8fd9\u9898\u5f88\u6c34\u7684~~\n\n------------\n\n### STEP 1 \u5ba1\u9898\n\n\u7ecf\u8fc7\u6574\u7406\uff0c\u6c47\u603b\u6539\u7f16\u62bd\u8c61\u51fa\u4e00\u4e0b\u6761\u4ef6\uff1a\n\n1.\u6709c\u6761\u7ebf\u6bb5\uff0c\u5df2\u77e5\u5b83\u4eec\u7684\u7aef\u70b9\uff1b\n\n2.\u6709l\u79cd\u70b9\uff0c\u5df2\u77e5\u5b83\u4eec\u7684\u5750\u6807\u4ee5\u53ca\u6bcf\u79cd\u70b9\u7684\u4e2a\u6570\uff1b\n\n3.\u95ee\u5982\u679c\u628a\u90a3\u4e9b\u70b9\u653e\u5165\u7ebf\u6bb5\u4e2d\uff0c\u6700\u591a\u53ef\u4ee5\u653e\u8fdb\u51e0\u4e2a\u3002\n\n**\u770b\u5427\uff0c\u6d3b\u8131\u8131\u7684\u4e00\u4e2a\u8d2a\u5fc3\u4e2d\u7684\u7ebf\u6bb5\u8986\u76d6\u95ee\u9898\uff01**\n\n\n------------\n### STEP 2 \u89c4\u5212\u505a\u9898\u65b9\u6cd5\n\n\u7ecf\u8fc7\u5ba1\uff08biao) \u9898 (qian)\uff0c\u6211\u4eec\u4e86\u89e3\u4e86\u8fd9\u662f\u4e00\u9053\u7ebf\u6bb5\u8986\u76d6\u95ee\u9898\uff0c\u90a3\u4e48\uff0c\u7ebf\u6bb5\u8986\u76d6\u95ee\u9898\u600e\u4e48\u505a\uff1f\n\n**\u65b9\u6cd5\uff1a** \u6309\u53f3\u7aef\u70b9\u6392\u5e8f\u3002\n\n**\u7406\u7531\uff1a** \u65b9\u4fbf\u5904\u7406\u9632\u6652\u971c\u6478\u5230\u5976\u725b\u8eab\u4e0a\n\n\u4f46\u662f\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\u5462\n\n**\u8bc1\u660e\uff1a** \u73b0\u6709\u4e09\u6761\u7ebf\u6bb5\uff0c\u7ed9\u51fa\u5b83\u4eec\u7684\u5de6\u53f3\u7aef\u70b9\uff08\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\u540e\uff09\uff1a\n\n1  6 / / 2  3 / / 3  4\n\n\u9632\u6652\u971c\u4e24\u79cd\uff08\u53ea\u7ed9\u70b9\u7684\u5750\u6807\uff0c\u9ed8\u8ba4\u6bcf\u79cd\u4e00\u74f6\uff09\uff08\u6309\u5927\u5c0f\u6392\u5e8f\u540e\uff09\uff1a\n\n3 / / 5\n\n\u90a3\u4e48\u6309\u6b63\u5e38\u7684\u6d41\u7a0b\uff0c\u201c3\u201d\u9632\u6652\u971c\u7ed9\u201c1 6\u201d\u7ebf\u6bb5\uff0c\u52195\u65e0\u6cd5\u7ed9\u53e6\u5916\u4e24\u6761\u7ebf\u6bb5\uff0cans\u7b54\u6848\u4e3a1.\n\n\u4f46\u5982\u679c\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u5219\u7ed3\u679c\u4e3a\uff1a\n\n2  3 / / 3  4 / / 1  6\n\n\u90a3\u4e48\u201c3\u201d\u9632\u6652\u971c\u4f1a\u7ed9\u201c2 3\u201d\u7ebf\u6bb5\u4f7f\u7528\uff0c5\u4f1a\u7ed9\u201c1 6\u201d\uff0c\u4ece\u800c\u6709\u4e24\u4e2a\u7ed3\u679c\u3002\n\n**\u8fd9\u4e2a\u53cd\u4f8b\u8bc1\u660e\uff1a\u53f3\u7aef\u70b9\u624d\u80fd\u771f\u6b63\u786e\u5b9a\u4e00\u6761\u7ebf\u6bb5\u7684\u4f4d\u7f6e**\n\n\u7ebf\u6bb5\uff08\u5976\u725b\uff09\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\u540e\uff0c\u518d\u4ece\u5c0f\u5230\u5927\u5c06\u6bcf\u4e2a\u70b9\uff08\u9632\u6652\u971c\uff09\u6392\u5e8f\u5373\u53ef\u3002\n\n### STEP 3: AC CODE \u53ca \u5177\u4f53\u8bb2\u89e3\n30\u884c\u662f\u4e0d\u662f\u5f88\u77ed\uff08\u6ca1\u6709\u538b\u884c\u54e6\uff09\n```\n#include<bits/stdc++.h>//\u7f8e\u4e3d\u53ef\u7231\u7aef\u5e84\u5927\u65b9\u7684\u4e07\u80fd\u5934\nusing namespace std;\nint c,l,ans;//\u5206\u522b\u8bb0\u5f55\u5976\u725b\u6570\u91cf\uff0c\u9632\u6652\u971c\u6570\u91cf\u4ee5\u53ca\u7ed3\u679c\nstruct node{//\u7ed3\u6784\u4f53\u50a8\u5b58\u65b9\u4fbf\u6392\u5e8f\n\tint a,b;//\u4e24\u4e2a\u6570\u636e\n};\nnode cow[2501],fss[2501];//\u5206\u522b\u50a8\u5b58\u5976\u725b\u4fe1\u606f\u548c\u9632\u6652\u971c\u4fe1\u606f\nint cmp(node x,node y){//\u6392\u5e8f1\uff1a\u7ed9\u5976\u725b\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\n\treturn x.b<y.b;\n}\nint cmp1(node x,node y){//\u6392\u5e8f2\uff1a\u7ed9\u9632\u6652\u971c\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\n\treturn x.a<y.a;\n}\nint main(){\n\tscanf(\"%d%d\",&c,&l);\n\tfor (int i=1;i<=c;i++) scanf(\"%d%d\",&cow[i].a,&cow[i].b);\n\tfor (int i=1;i<=l;i++) scanf(\"%d%d\",&fss[i].a,&fss[i].b);//\u6b63\u5e38\u8f93\u5165\u8f93\u51fa\n\tsort(cow+1,cow+c+1,cmp);//\u5976\u725b\u6392\u5e8f\n\tsort(fss+1,fss+l+1,cmp1);//\u9632\u6652\u971c\u6392\u5e8f\n\tfor (int i=1;i<=c;i++){\n\t\tfor (int j=1;j<=l;j++){//\u5faa\u73af\u5224\u65ad\n\t\t\tif (fss[j].b>0&&fss[j].a>=cow[i].a&&fss[j].a<=cow[i].b){//\u5224\u65ad\u662f\u5426\u7b26\u5408\u70b9\u5728\u7ebf\u6bb5\u5185\u4e14\u8be5\u70b9\u8fd8\u6709\u5269\u4f59\n\t\t\t\tfss[j].b--,ans++;//\u51cf\u53bb\u4e00\u4e2a\u76f8\u5e94\u70b9\uff0c\u7b54\u6848+1\n\t\t\t\tbreak;//\u627e\u5230\u5408\u9002\u70b9\u9009\uff0c\u5c31\u6362\u53e6\u4e00\u4e2a\u7ebf\u6bb5\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);//\u6b63\u5e38\u8f93\u51fa\n\treturn 0;//\u636e\u8bf4\u6709\u597d\u4e60\u60ef\u4f1a\u88ab\u4eba\u70b9\u8d5e\u54e6\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u771f\u7684\n} \n```\n### STEP 4 \u5b8c\u7ed3\u6492\u82b1\n\n\u606d\u795d\u5404\u4f4dRP++\uff0c\u6709\u8fd8\u662f\u4e0d\u61c2\u7684\u5c31\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u5427\uff0c\u6211\u4f1a\u56de\u590d\u7684\u3002\u61c2\u4e86\u7684\u5927\u4f6c\u4eec\uff0c\u4f60\u770b\u849f\u84bb\u8fd9\u4e48\u8f9b\u82e6\u7684\u6572\u5b57\uff0c**\u70b9\u4e2a\u8d5e**\u9f13\u52b1\u4e00\u4e0b\u5427\uff01\n\n",
        "postTime": 1584867700,
        "uid": 257621,
        "name": "\u7ffc\u5fb7\u5929\u5c0a",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]Sunscreen G\u3011"
    },
    {
        "content": "## \u9632\u6652\u971c\n\n\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u6ca1\u6709\u4eba\u8bc1\u660e\u8fd9\u4e2a\u8d2a\u5fc3\u4e3a\u4ec0\u4e48\u662f\u6b63\u786e\u7684\uff0c\u60f3\u4e86\u60f3\uff0c\u89c9\u5f97\u8bc1\u660e\u4e5f\u662f\u633a\u91cd\u8981\u7684\uff0c\u5c31\u628a\u81ea\u5df1\u7684\u8bc1\u660e\u8fc7\u7a0b\u53d1\u4e86\u4e0a\u6765\u3002\n\n\n------------\n\n\n### \u8d2a\u5fc3\u601d\u8def\uff1a\n\u6309\u6bcf\u5934\u5976\u725b\u5bf9\u6700\u5c0f\u9633\u5149\u9700\u6c42\u5ea6\u7684\u5927\u5c0f\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u4e00\u904d\uff0c\u7136\u540e\u6bcf\u6b21\u5728\u9632\u6652\u971c\u9009\u62e9\u56fa\u5b9a\u9633\u5149\u5ea6\u6700\u5927\u7684\u9632\u6652\u971c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a**O(C * L)\u5373O(N^2)**\n\n### \u8bc1\u660e\uff1a\n\n\u6211\u4eec\u5c06\u5976\u725b\u6309\u6700\u5c0f\u9633\u5149\u9700\u6c42\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u524d\u5976\u725b\u7684\u6700\u5c0f\u9633\u5149\u9700\u6c42\u5ea6\u6bd4\u540e\u9762\u5976\u725b\u90fd\u5927\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u5982\u679c\u73b0\u56fa\u5b9a\u9633\u5149\u5ea6\u6700\u5927\u7684\u9632\u6652\u971c\u65e0\u6cd5\u6ee1\u8db3\u8fd9\u5934\u5976\u725b\uff0c\u90a3\u540e\u9762\u7684\u5976\u725b\u5c31\u66f4\u65e0\u6cd5\u6ee1\u8db3\u4e86\u3002\u4f46\u5982\u679c\u6211\u4eec\u9009\u62e9\u56fa\u5b9a\u9632\u6652\u5ea6\u6700\u5927\u7684\u4e14\u80fd\u7528\u7684\u9632\u6652\u971c\uff0c\u90a3\u5bf9\u4e8e\u540e\u9762\u5976\u725b\u7684\u53ef\u9009\u62e9\u8303\u56f4\u5c31\u4f1a\u589e\u5927\u3002\n\n**~~\u8003\u8651\u5230\u6211\u4e0d\u592a\u4f1a\u8bf4\u4eba\u8bdd~~\uff0c\u90a3\u6211\u5c31\u6362\u4e00\u79cd\u89d2\u5ea6\u8bb2\uff1a**\n\n\u8bbe\u4efb\u610f\u4e24\u74f6\u9632\u6652\u971c\u4e3aa1, a2\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u9632\u6652\u5ea6\u5927\u5c0f\u7684\u5173\u7cfb\u4e3a\uff0ca1 < a2\uff0c\u90a3\u5bf9\u4e8e\u540e\u9762\u7684\u5976\u725b\u6765\u8bf4\u5c31\u6709\u8fd9\u4e09\u79cd\u60c5\u51b5\uff1a\n\n1.a1\u548ca2\u5747\u53ef\u4f7f\u7528\n\n2.a2\u80fd\u7528a1\u4e0d\u53ef\u7528\n\n3.\u4e24\u8005\u5747\u4e0d\u53ef\u7528\u3002\n\n\u5f88\u663e\u7136\uff0c\u6211\u4eec\u5148\u9009\u62e9\u56fa\u5b9a\u9632\u6652\u5ea6\u8f83\u5927\u7684a2\u5bf9\u95ee\u9898\u7684\u6574\u4f53\u5f71\u54cd\u66f4\u5927\u3002\n\n**\u9644\u4e0a\u6211\u7684\u4ee3\u7801\uff1a**\n```cpp\n//\u4eca\u5929\u771f\u7684\u597d\u7d2f\u2026\u2026 \n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\nconst int N = 3000;\n\nint c, l, ans;\n\nstruct cow {\n\tint a, b;\n} a[N];\n\nstruct spf {\n\tint a, b;\n} b[N];\n\ninline bool cmp(cow x, cow y) {return x.a > y.a;}\ninline bool cmp_s(spf x, spf y) {return x.a > y.a;}\n\nint main() {\n//\tfreopen(\"in.txt\", \"r\", stdin);\n\t\n\tscanf(\"%d %d\", &c, &l);\n\tfor(int i = 1; i <= c; ++i) scanf(\"%d %d\", &a[i].a, &a[i].b);\n\tfor(int i = 1; i <= l; ++i) scanf(\"%d %d\", &b[i].a, &b[i].b);\n\t\n\tsort(a + 1, a + 1 + c, cmp);//\u6309minspf\u9012\u51cf\u7684\u987a\u5e8f\u6392\u5e8f \n\tsort(b + 1, b + 1 + l, cmp_s);//\u6309\u56fa\u5b9a\u9632\u6652\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f \n\t\n\tfor(int i = 1; i <= c; ++i)\n\t\tfor(int j = 1; j <= l; ++j) {\n\t\t\tif(b[j].a >= a[i].a && b[j].a <= a[i].b && b[j].b) {\n\t\t\t\tans++;\n\t\t\t\tb[j].b--;\n\t\t\t\tbreak;//\u627e\u5230\u4e86\u5c31\u76f4\u63a5\u627e\u4e0b\u4e00\u5934\u5976\u725b\u53ef\u7528\u7684\u9632\u6652\u971c \n\t\t\t}\n\t\t}\n\t\t\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1553169950,
        "uid": 56940,
        "name": "\u9677\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "\u533a\u95f4\u8986\u76d6\u95ee\u9898\uff0c\u6c42\u7ebf\u6bb5\u6700\u591a\u8986\u76d6\u591a\u5c11\u70b9\uff0c\u7ebf\u6bb5\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u9632\u6652\u971c\u6309\u9632\u62a4\u503c\u6392\u5e8f\n\n\u4e4b\u540e\u8fdb\u884c\u8d2a\u5fc3\u5373\u53ef\uff0c\u6ce8\u610f\u9632\u6652\u971c\u7684\u6570\u91cf\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint ans;\nstruct cow{\n    int l;\n    int r;\n} \nox[5000];\nstruct sunscreen{\n    int n;\n    int s;\n} \nbb[5000];\nbool com(struct cow x,struct cow y)\n{\n    {\n        if(x.r<y.r) return true;\n        return false;\n        }\n}\nbool comp(struct sunscreen a,struct sunscreen b)\n{\n    if(a.n<b.n)\n    return true;\n    return false;\n}\nint main()\n{\n    int n,m;\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d %d\",&ox[i].l,&ox[i].r);\n    for(int i=1;i<=m;i++)\n    scanf(\"%d %d\",&bb[i].n,&bb[i].s);\n    sort(ox+1,ox+1+n,com);\n    sort(bb+1,bb+m+1,comp);\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        if(bb[j].n>=ox[i].l&&bb[j].n<=ox[i].r&&bb[j].s)\n        {\n            bb[j].s--;ans++;\n            break;\n        }\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1491558991,
        "uid": 24553,
        "name": "fanfan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "\n\n\n\n\n\n\n\n\n\n\u8fd9\u9898\u6211\u9009\u62e9\u4f7f\u7528\u7f51\u7edc\u6d41\u3002\u505a\u9898\u4e4b\u524d\u6ca1\u770b\u9898\u89e3\u611f\u89c9\u5f88\u50cf\u7f51\u7edc\u6d41\uff0c\u5c31\u8bd5\u7740\u505a\u4e86\u4e00\u4e0b\uff0c\u4e3b\u8981\u662f\u5185\u5b58\u539f\u56e0\u9650\u5236\u4e86\u8fd9\u9898\u7684\u89e3\u6cd5\u3002\n1.\u901a\u8fc7\u539f\u70b9\u5411\u9632\u6652\u971c\u5efa\u8fb9\uff0c\u8fb9\u6743\u4e3acover\n2.\u9632\u6652\u971c\u5411\u9002\u5408\u7684\u5976\u725b\u5efa\u8fb9\uff0c\u590d\u6742\u5ea6\u4e3an\u00b2\uff0c\u8fb9\u6743\u4e3a1\n3.\u5976\u725b\u5411\u6c47\u70b9\u5efa\u8fb9\uff0c\u8fb9\u6743\u4e3a1,\n\u8dd1\u4e00\u904ddinic\u5c31\u53ef\u4ee5\u4e86\uff0c\u5b9e\u73b0\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u5f00\u5c0f\u6570\u7ec4\u6765ac\uff08128mb\u4f5c\u8005\u6309\u7167\u5efa\u8fb9\u7684\u89c4\u6a21\u5f00\u8c8c\u4f3c\u4f1amle\uff09\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int maxn=5005;\nint spf[maxn],cover[maxn],C,L,c[maxn],l[maxn],r[maxn];\ninline void init(){\n\tscanf(\"%d%d\",&C,&L);\n\tfor (int i=1;i<=C;i++){\n\t\tscanf(\"%d%d\",&l[i],&r[i]);\n\t}\n\tfor (int i=1;i<=L;i++){\n\t\tscanf(\"%d%d\",&spf[i],&cover[i]);\n\t}\n}\nconst int maxm=2000000;\nstruct edge{\n\tint link,next,val,opp;\n}e[maxm];\nint tot,S,T,head[maxn];\ninline int get(int x){\n\treturn x+L;\n}\ninline void add(int u,int v,int w){\n\te[++tot]=(edge){v,head[u],w,0}; head[u]=tot;\n}\ninline void insert(int u,int v,int w){\n\tadd(u,v,w); e[tot].opp=tot+1; add(v,u,0); e[tot].opp=tot-1;\n}\ninline void build(){\n\tS=0;\n\tfor (int i=1;i<=L;i++){\n\t\tfor (int j=1;j<=C;j++){\n\t\t\tif (spf[i]>=l[j]&&spf[i]<=r[j]){\n\t\t\t\tinsert(i,get(j),1);\n\t\t\t}\n\t\t}\n\t\tinsert(S,i,cover[i]);\n\t}\n\tT=C+L+1;\n\tfor (int i=1;i<=C;i++){\n\t\tinsert(get(i),T,1);\n\t}\n}\nint h,t,q[maxn],dis[maxn];\ninline bool bfs(){\n\tmemset(dis,-1,sizeof(dis));\n\th=0; t=1; dis[S]=0; q[1]=S;\n\twhile (h<t){\n\t\tint u=q[++h];\n\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].link;\n\t\t\tif (dis[v]==-1&&e[i].val){\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tq[++t]=v;\n\t\t\t\tif (v==T) return 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nconst int inf=1e9;\nint cur[maxn],ans;\ninline void clean(){\n\tmemcpy(cur,head,sizeof(cur));\n}\ninline void backflow(int i,int w){\n\te[i].val-=w; \n\te[e[i].opp].val+=w;\n}\nint dinic(int u,int flow){\n\tif (!flow||u==T) return flow;\n\tint used=0;\n\tfor (int i=cur[u];i;i=e[i].next){\n\t\tint w,v=e[i].link;\n\t\tif (dis[u]+1==dis[v]&&e[i].val){\n\t\t\tw=dinic(v,min(flow-used,e[i].val));\n\t\t\tused+=w;\n\t\t\tbackflow(i,w);\n\t\t\tif (w) cur[u]=i;\n\t\t\tif (used==flow) return flow;\n\t\t}\n\t}\n\tif (!used) dis[u]=-1;\n\treturn used;\n}\ninline void solve(){\n\tbuild();\n\twhile (bfs()){\n\t\tclean();\n\t\tans+=dinic(S,inf);\n\t}\n\tprintf(\"%d\\n\",ans);\n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1518069190,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\n\n\u5176\u5b9e\u6211\u770b\u5230\u8fd9\u9053\u9898\u7684\u96be\u5ea6\u7684\u65f6\u5019\u662f\u633a\u5bb3\u6015\u7684\u3002\n\n\u4f46\u662f\u5f53\u6211\u5229\u7528\u767e\u5ea6\u7ffb\u8bd1\u7ffb\u8bd1\u51fa\u4e00\u4e9b~~\u4eba\u770b\u4e0d\u61c2\u9b3c\u4e5f\u770b\u4e0d\u61c2\u7684\u4e1c\u897f~~\u9898\u610f\u4e4b\u540e\uff0c\u6211\u4f3c\u4e4e\u660e\u767d\u4e86\u8fd9\u9053\u9898\u8981\u600e\u4e48\u505a\u3002\n\n\n\u8fd9\u9053\u9898\u76ee\u6211\u4f1a\u4f7f\u75282\u4e2a\u7ed3\u6784\u4f53\u7b2c\u4e00\u4e2a\u662f\u540d\u4e3a $cow$ \u7684\u7ed3\u6784\u4f53\uff0c\u7528\u4e8e\u5b58\u50a8\u6bcf\u4e00\u5934\u725b\u7684 $max$ \u548c $min$ \u3002\u7b2c\u4e8c\u4e2a\u662f\u540d\u4e3a $fss$ \u7684\u7ed3\u6784\u4f53\u7528\u4e8e\u5b58\u50a8\u6bcf\u4e00\u4e2a\u9632\u6652\u971c\u7684\u56fa\u5b9a\u5149\u5ea6\u548c\u6570\u91cf\u3002\n\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u6709 $C$ \u5934\u725b\uff0c\u5e76\u4e14\u6bcf\u4e00\u5934\u725b\u90fd\u6709\u4e00\u4e2a\n$max$ $min$ \u7684\u5149\u7167\u5f3a\u5ea6\u7684\u5fcd\u53d7\u503c\uff0c\u800c\u6839\u636e\u9898\u610f\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e00\u5934\u5976\u725b\u90fd\u4e0d\u80fd\u5fcd\u53d7\u4e00\u5f00\u59cb\u7684\u592a\u9633\u5149\u7167\u5c04\u6240\u4ee5\u624d\u4f1a\u9700\u8981\u9632\u6652\u971c\uff0c\u90a3\u8ba9\u6211\u4eec\u6765\u89c2\u5bdf\u4e00\u9632\u6652\u7684\u5de5\u4f5c\u539f\u7406\u3002\n\n\n\u6211\u4eec\u9700\u8981\u8f93\u5165\u7684\u662f\u9632\u6652\u971c\u7684\u56fa\u5b9a\u592a\u9633\u5149\u7167\u503c\u548c\u6570\u91cf\u3002\n\n\n**\u5f53\u4e00\u4e2a\u9632\u6652\u971c\u6240\u56fa\u5b9a\u7684\u592a\u9633\u7167\u5c04\u7684\u9633\u5149\u5f3a\u5ea6\uff0c\u5728\u6bcf\u4e00\u5934 $cow$ \u53ef\u4ee5\u5fcd\u53d7\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e4b\u95f4\u65f6\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u9632\u6652\u971c\u7684\u6570\u91cf\u51cf\u4e00\uff0c\u5c06\u4fdd\u5168\u7684\u725b\u7684\u6570\u91cf\u589e\u591a\u3002**\n```cpp\nfor(int i=1;i<=n;i++){//\u679a\u4e3e\u6bcf\u4e00\u5934\u725b\n\t\tfor(int j=1;j<=l;j++){//\u679a\u4e3e\u6bcf\u4e00\u7ba1\u9632\u6652\u971c\n\t\t\tif(f[j].SPF>=c[i].minn && f[j].SPF<=c[i].maxx && f[j].num!=0){//\u8fd9\u91cc\u7684\u610f\u601d\u5c31\u662f\u5f53\u56fa\u5b9a\u7684\u5149\u7167\u5f3a\u5ea6\u5728\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e4b\u95f4\u5e76\u4e14\u9632\u6652\u971c\u7684\u6570\u91cf\u5927\u4e8e0\uff0c\u6211\u4eec\u5c31\u628a\u725b\u7684\u6570\u91cf\u589e\u52a0\u4e14\u9000\u51fa\u5faa\u73af\uff0c\u679a\u4e3e\u4e0b\u4e00\u5934\u725b\u3002\n\t\t\t\tf[j].num--;//\u9632\u6652\u971c\u6570\u91cf\u51cf\u4e00\u3002\n\t\t\t\tans++;//\u7b54\u6848\u52a0\u4e00\u3002\n\t\t\t\tbreak;//\u679a\u4e3e\u4e0b\u4e00\u5934\u725b\u3002\n\t\t\t}\n\t\t}\n\t}\n```\n\n\u4ec0\u4e48\u65f6\u5019\u6211\u4eec\u624d\u80fd\u5f97\u5230\u6700\u4f18\u7684\u7ed3\u679c\u5462\uff1f\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u5c31\u8981\u7528\u5230\u8d2a\u5fc3\u601d\u60f3\u4e86\u3002**\u81f3\u4e8e\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u6211\u4eec\u5e94\u8be5\u7528\u6700\u5927\u503c\u8fdb\u884c\u6392\u5e8f\u5e76\u4e14\u8ba9\u9632\u6652\u971c\u7684 $SPF$ \u7684\u503c\u5c0f\u7684\u5728\u524d\uff0c\u8fd9\u6837\u5b50\u624d\u80fd\u591f\u5f97\u5230\u6700\u4f18\u89e3\u3002**\n\n**\u56e0\u4e3a\u8981\u5148\u628a $max$ \u7684\u503c\u5c0f\u7684\u725b\u5148\u7528\u6389\uff0c\u5e76\u4e14\u8ba9 $SPF$ \u5c0f\u7684\u9632\u6652\u971c\u5c3d\u91cf\u7528\u4e8e $max$ \u5c0f\u7684\u725b\u8eab\u4e0a\u8fd9\u6837\u5b50\u5c31\u80fd\u591f\u5f97\u5230\u6700\u4f18\u89e3\u4e86\u3002**\n\n\u81f3\u4e8e\u6392\u5e8f\u8fd9\u4e00\u5757\u6211\u4eec\u53ef\u4ee5\u7528\u81ea\u5e26\u7684 $stl$ \u51fd\u6570 $sort$ \u6240\u4ee5\u6392\u5e8f\u7684\u4ee3\u7801\u5982\u4e0b:\n\n\n```cpp\nbool cmpc(cow x,cow y){\n\treturn x.maxx<y.maxx;\n}\n\nbool cmpf(fss x,fss y){\n\treturn x.SPF<y.SPF;\n}\n```\n\n\u597d\u7684\uff0c\u91cd\u70b9\u90fd\u7ed3\u675f\u4e86\uff0c\u73b0\u5728\u8f93\u51fa $ans$ \u5c31\u53ef\u4ee5 $AC$ \u6b64\u9898\u5566\uff01\n\n\u4e0b\u9762\u9644\u8d60 $AC$ \u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>//\u6734\u5b9e\u65e0\u534e\u7684\u4e07\u80fd\u5934\u3002\nusing namespace std;\n\nint n,l,ans;//n\u4ee3\u8868\u9898\u4e2d\u7684C\uff0cl\u5373L\uff0cans\u5373\u7b54\u6848\u3002\n\nstruct cow{\n\tint maxx,minn;\n}c[2505];\n\nstruct fss{\n\tint SPF;\n\tint num;\n}f[2505];\n\nbool cmpc(cow x,cow y){\n\treturn x.maxx<y.maxx;\n}\n\nbool cmpf(fss x,fss y){\n\treturn x.SPF<y.SPF;\n}\n\n\nint main (){\n\tscanf(\"%d%d\",&n,&l);\n\tfor(int i=1;i<=n;i++) cin>>c[i].minn>>c[i].maxx;\n\tfor(int i=1;i<=l;i++) cin>>f[i].SPF>>f[i].num;\n\tsort(c+1,c+1+n,cmpc);\n\tsort(f+1,f+1+l,cmpf);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=l;j++){\n\t\t\tif(f[j].SPF>=c[i].minn && f[j].SPF<=c[i].maxx && f[j].num!=0){\n\t\t\t\tf[j].num--;\n\t\t\t\tans++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}//\u4e0a\u9762\u90fd\u662f\u5728\u524d\u9762\u5206\u6790\u8fc7\u7684\u5185\u5bb9\uff0c\u4e8e\u662f\u53c8\u662f\u4e00\u9053\u6c34\u9898\u7684\u8bde\u751f\u3002\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n```",
        "postTime": 1600953016,
        "uid": 356852,
        "name": "Kacho",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]Sunscreen G\u3011"
    },
    {
        "content": "[$\\color {teal}{Blog}$](https://blog.csdn.net/qq_43653202/article/details/100061215)\n\n\u533a\u95f4\u95ee\u9898 \n\n**\u5e38\u89c1\u9898\u578b\uff1a\u7ebf\u6bb5\u8986\u76d6\u7b49**\n\n**\u5e38\u7528\u7b56\u7565\uff1a\u8d2a\u5fc3**\n\n\u9047\u5230\u8fd9\u6837\u7684\u9898\u65f6\uff0c\u8003\u8651\u4e09\u79cd\u60c5\u51b5 \n\n1. **\u76f8\u4ea4\uff08\u7b56\u7565\u76f8\u5173\uff09** \u7ed3\u5408\u9898\u76ee\u5206\u6790 \n\n```cpp\n------\n    -------  \n```\n2. **\u76f8\u79bb\uff08\u5e38\u4e0d\u8003\u8651\uff09** \n\n```cpp\n----   ----\n```\n3. **\u5305\u542b\uff08\u987a\u5e8f\u76f8\u5173\uff09** \u8003\u8651\u5148\u5904\u7406\u54ea\u4e2a  \n\n```cpp\n    ---   \n----------\n```\n\n\u4f8b\u9898\n[P2887 \u3010USACO07NOV\u3011\u9632\u6652\u971cSunscreen](https://www.luogu.org/problem/P2887)\n\n$Solution$\n\n\u628a\u6bcf\u53ea\u5976\u725b\u53ef\u5fcd\u53d7\u7684\u5149\u7167\u5f3a\u5ea6\u770b\u4f5c\u533a\u95f4\uff08\u6216\u7ebf\u6bb5\uff09\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898,\u6392\u5e8f\u51fd\u6570\u53ef\u5206**\u6309\u5de6\u7aef\u70b9\u6392\u5e8f,\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\u4e24\u79cd\u60c5\u51b5** \n\n\u4ee5\u6309\u53f3\u7aef\u70b9\u6392\u4e3a\u4f8b \n\n**1.\u76f8\u4ea4**\n```cpp\n----      1\n  -----   2\n```\n\u6b64\u65f6\u82e5\u5148\u5904\u74061\uff0c\u5219\u9009\u9632\u6652\u971c\u65f6\u5e94\u4ece\u5c0f\u5230\u5927\u9009\uff1b\u53cd\u4e4b\u4ece\u5927\u5230\u5c0f\uff0c\u6309\u4e2a\u4eba\u4e60\u60ef\u9009\u62e9 \n\n**2.\u5305\u542b** \n```cpp\n    ---  1\n-------  2\n```\n\u9009\u62e9\u591a\u76842\u663e\u7136\u5e94\u8be5\u653e\u4e0b\u9762 \n\n$so$ \u6392\u5e8f\u51fd\u6570\u4e3a  \n```cpp\nil bool cmp(node x,node y){\t\n\treturn (x.r==y.r&&x.l<y.l)||(x.r<y.r);\n}\n```\n\n$Code$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define re register\n#define il inline\n#define ll long long\nusing namespace std;\n\ninline int read(){\n    int s=0,f=0;char c=getchar();\n    while(c<'0'||c>'9') f=(c=='-'),c=getchar();\n    while(c>='0'&&c<='9') s=(s<<3)+(s<<1)+(c^'0'),c=getchar();\n    return f?-s:s;\n}\n\nconst int N=2505,M=1005;\nint n,m,b[M],ans,now;\nstruct node{\n\tint l,r;\n}a[N];\n/*\n\u6392\u5e8f\u987a\u5e8f \nil bool cmp(node x,node y){\t\t//\u5de6\u7aef\u70b9\u6392\u5e8f \n\treturn (x.l==y.l&&x.r<y.r)||(x.l>y.l);\n}*/\nil bool cmp(node x,node y){\t\t//\u53f3\u7aef\u70b9\u6392\u5e8f(\u8981\u5206\u6e05\u5de6\u53f3\u7aef\u70b9!) \n\treturn (x.r==y.r&&x.l<y.l)||(x.r<y.r);\n}\n\nint main(){\n\tn=read(),m=read();\n\tfor(re int i=1;i<=n;++i) a[i].l=read(),a[i].r=read();\n\tfor(re int i=1,x,y;i<=m;++i) x=read(),y=read(),b[x]+=y; //+= \u53ef\u80fd\u91cd\u590d  \n\tsort(a+1,a+n+1,cmp);\n    for(re int i=1;i<=n;++i)\n    /*\tfor(re int j=a[i].r;j>=a[i].l;--j) */\n    \tfor(re int j=a[i].l;j<=a[i].r;++j)\n\t\t\tif(b[j]){ans++,b[j]--;break;}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u5f88\u5c11\u7684\u4e00\u70b9\u4e2a\u4eba\u7406\u89e3 \n\n\u6ca1\u6709\u5bf9\u8d2a\u5fc3\u7684\u8bc1\u660e\uff0c\u53ea\u60f3\u8bf4\u4e00\u8bf4\u6392\u5e8f\u7684\u987a\u5e8f\n\n~~\u6709\u70b9\u6c34~~",
        "postTime": 1566704304,
        "uid": 103655,
        "name": "\u4e00\u53ea\u840c\u65b0",
        "ccfLevel": 0,
        "title": "\u533a\u95f4\u95ee\u9898\u8d2a\u5fc3\u7b56\u7565 \u4e2a\u4eba\u5206\u6790"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u5bf9\u4e8e\u6211\u4eec\u8fd9\u79cd\u53ea\u6709\u666e\u53ca\u6c34\u5e73\u7684\u4eba\uff0c\u5f53\u7136\u5148\u7528\u8d2a\u5fc3\u5566\u3002\n\u6765\u770b\u770b\u9898\u76ee\uff1a\u6709minSPFi \u548cmaxSPFi\uff0c\u7136\u540e\u8fd8\u6709SPFi \u548c coveri\u3002\n\u6211\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u8d2a\u5fc3\uff1a\u6309\u7167minSPFi\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5148\u6ee1\u8db3minSPFi\u7684\u5976\u725b\uff08\u7528SPFi\u6700\u5927\u7684\u80fd\u6ee1\u8db3\u7684\uff09\u3002\u8d2a\u5fc3\u7684\u8fc7\u7a0b\u662f\u5047\u8bbe\uff0c\u4f46\u662f\u8981\u8bc1\u660e\u592a\u96be\u4e86\u3002\u6211\u6765\u89e3\u91ca\u4e00\u4e0b\uff1a\u5047\u8bbe\u7b2cI\u5934\u725b\u7528\u4e0a\u8ff0\u89c4\u5f8b\u7528\u7b2cJ\u74f6\u9632\u6652\u971c\uff0c\u5047\u8bbe\u8fd9\u74f6\u9632\u6652\u971c\u7ed9\u4e0b\u9762\u4e00\u5934\u725b\u7528\uff0c\u6709\u53ef\u80fd\u90fd\u7528\u4e0d\u4e86\uff0c\u5047\u8bbe\u80fd\u7528\uff0c\u6309\u7167\u8fd9\u4e2a\u89c4\u5f8b\u8fd8\u4e0d\u5982\u7ed9\u7b2cI\u5934\u725b\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```CPP\n#include<iostream>\n#include<string>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n    int n,m,i,tot,t,j;\n    struct lol{\n    \tint x,y;\n    };\n    lol a[100000],b[100000];\n    bool cmp(lol i,lol j){\n    \treturn i.x>j.x;\n    }//\u5173\u952e\u8bcd\u5feb\u6392\uff0c\u4e24\u4e2a\u90fd\u662f\u4e00\u6837\u7684\nint main(){\n    cin>>n>>m;\n    for(i=1;i<=n;i++) cin>>a[i].x>>a[i].y;\n    for(i=1;i<=m;i++) cin>>b[i].x>>b[i].y;\n    sort(a+1,a+n+1,cmp);\n    sort(b+1,b+m+1,cmp);//\u5feb\u6392\n    for(i=1;i<=n;i++)\n      for(j=1;j<=m;j++)\n        if (b[j].y>0&&a[i].x<=b[j].x&&a[i].y>=b[j].x){//\u8fd9\u4e2a\u5224\u65ad\u662f\u5224\u65ad\u8fd9\u74f6\u9632\u6652\u971c\u80fd\u7528\u4e14\u80fd\u4f7f\u725b\u6652\u9633\u5149\n        \ttot++;\n        \tb[j].y--;\n        \tbreak;//\u627e\u5230\u4e86\u5c31\u9000\u51fa\n        }\n    cout<<tot<<endl;\n    return 0;\n}\n```",
        "postTime": 1544598906,
        "uid": 60038,
        "name": "gudingning666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "#### \u8fd9\u662f\u4e00\u9053\u6bd4\u8f83\u660e\u663e\u7684\u8d2a\u5fc3\u9898\uff0c\u9996\u5148\u6211\u4eec\u8981\u5148\u660e\u767d\uff1a\u56fa\u5b9a\u592a\u9633\u5f3a\u5ea6\u8d8a\u5927\u7684\u9632\u6652\u971c\uff08\u5373\u9632\u6652\u971c\u7684\u503c\u8d8a\u5927\uff09\uff0c\u5176\u53ef\u4ee5\u4f5c\u7528\u7684\u725b\u5c31\u8d8a\u5c11\uff08\u56e0\u4e3a\u725b\u90fd\u6709\u4e00\u4e2a\u6700\u5927\u627f\u53d7\u9633\u5149\u7684\u5f3a\u5ea6\uff09\u3002\u6240\u4ee5\uff0c\u56fa\u5b9a\u592a\u9633\u5f3a\u5ea6\u8d8a\u5c0f\u7684\u9632\u6652\u971c\u80fd\u9002\u7528\u7684\u725b\u5c31\u8d8a\u591a\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u5c3d\u53ef\u80fd\u7684\u5148\u628a\u56fa\u5b9a\u592a\u9633\u5f3a\u5ea6\u8d8a\u5927\u7684\u9632\u6652\u971c\u7528\u6389\u53bb\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u66f4\u591a\u7684\u725b\u80fd\u591f\u4eab\u53d7\u9633\u5149\u3002\u55ef\uff01\u4fdd\u62a4\u52a8\u7269\uff0c\u4eba\u4eba\u6709\u8d23\uff01\u660e\u767d\u8fd9\u4e00\u70b9\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8d2a\u5fc3\u7801\u4ee3\u7801\u5566~~~\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\nusing namespace std;\nint n,l,sum;\nstruct node{\n\tint minn;\n\tint maxn;\n}cow[3000];\nstruct node1{\n\tint spf;\n\tint total;\n}sun[3000];\nbool cmp(node a,node b){\n\treturn a.minn>b.minn;    //\u80fd\u627f\u53d7\u9633\u5149\u66f4\u5f3a\u7684\u725b\u4e5f\u5148\u7528\u6389 \n}\nbool cmp1(node1 a, node1 b){\n\treturn a.spf>b.spf;  //\u5148\u628a\u56fa\u5b9a\u592a\u9633\u5f3a\u5ea6\u5927\u7684\u5148\u7528\u6389 \n}\nint main(){\n\tscanf(\"%d%d\",&n,&l);\n\tfor(int i=1;i<=n;i++)\tscanf(\"%d %d\",&cow[i].minn,&cow[i].maxn);\n\tsort(cow+1,cow+n+1,cmp);\n\tfor(int i=1;i<=l;i++)\tscanf(\"%d %d\",&sun[i].spf,&sun[i].total);\n\tsort(sun+1,sun+l+1,cmp1);\n\tfor(int i=1;i<=l;i++){       \t\t\t //\u8868\u793a\u9632\u6652\u971c\u7684\u79cd\u7c7b \n\t\tfor(int j=1;j<=sun[i].total;i++){   //\u8868\u793a\u7b2ci\u79cd\u9632\u6652\u971c\u7b2cj\u74f6 \n\t\t\tint ans=0;   \t\t\t\t   //\u8868\u793a\u7b2ci\u79cd\u9632\u6652\u971c\u7684\u4f7f\u7528\u6b21\u6570 \n\t\t\tfor(int k=1;k<=n;k++){        //\u8868\u793a\u7b2c\u51e0\u5934\u725b \n\t\t\t\tif(sun[i].spf>=cow[k].minn&&sun[i].spf<=cow[k].maxn){\n\t\t\t\t\tsum++;\n\t\t\t\t\tcow[k].minn=1<<30;\n\t\t\t\t\tcow[k].maxn=1<<30; //\u8bf4\u660e\u8be5\u5934\u725b\u5df2\u7ecf\u6d82\u4e86\u9632\u6652\u971c\uff0c\u4ee5\u540e\u5c31\u4e0d\u80fd\u7528\u8fd9\u5934\u725b\u4e86\uff0c\u7ed9\u4e00\u4e2a\u5f88\u5927\u7684\u503c\u8ba9\u4ed6\u6c38\u8fdc\u4e0d\u80fd\u53c2\u52a0\u5224\u65ad \n\t\t\t\t\tans++;\n\t\t\t\t\tif(ans==sun[i].total){   \n\t\t\t\t\t\t\t\t\t //\u82e5\u4f7f\u7528\u6b21\u6570\u8fbe\u5230\u4e86\u74f6\u6570\uff0c\u7ed9k\u4e00\u4e2a\u5f88\u5927\u7684\u503c\uff0c\u8df3\u51fa\u8be5\u5c42\u5faa\u73af \n\t\t\t\t\t\tk=200000;\n\t\t\t\t\t}\t\t\n\t\t\t\t}\n\t\t\t}\t\n\t\t} \n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1532242430,
        "uid": 91559,
        "name": "\u8ffd\u68a6_Chen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "\u5173\u4e8e\u8fd9\u9898\uff0c\u6211\u4e00\u5f00\u59cb~~\u4eba\u5de5\u667a\u969c~~\u4e86\uff0c\u4e00\u4e0d\u5c0f\u5fc3\u628ai\u548cj\u5f04\u53cd\u4e86\uff0c\u5bb3\u5f97\u6211\u8c03\u4e8620min\n\n\u6240\u4ee5\u624d\u5199\u4e86\u8fd9\u7bc7\u9898\u89e3\n\n\u8fd9\u662f\u4e00\u9053\u8d2a\u5fc3\u7684\u9898\uff0c\u6211\u4eec\u628a\u5976\u725b\u80fd\u627f\u53d7\u7684\u6700\u5927\u9633\u5149\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u518d\u628a\u9632\u6652\u971c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4e4b\u540e\u7528\u628a\u6bcf\u74f6\u9632\u6652\u971c\u4ece1\u5230n\u5728\u6bcf\u5934\u725b\u4e0a\u8bd5\u4e00\u904d\uff0c\u6c42\u51fa\u6700\u5927\u503c\uff0c\u7d2f\u52a0sum\u5373\u53ef\n\n\u770b\u8fd9\u9898\u6ca1\u6709p\u7684\uff0c\u6240\u4ee5\u6765\u6c34\u4e00\u53d1p\u7684\u9898\u89e3\n\n```pascal\nvar\n  n,i,j,k,m,ans,t:longint;\n  a,b,c,d,e:array[0..1000005] of longint;\n  f,g:array[0..1000005] of boolean;\n  procedure sort(l,r: longint);\n  //\u5bf9\u6bcf\u74f6\u9632\u6652\u971c\u6392\u5e8f\n      var\n         i,j,x,y: longint;\n      begin\n         i:=l;\n         j:=r;\n         x:=e[(l+r) div 2];\n         repeat\n           while e[i]>x do\n            inc(i);\n           while x>e[j] do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=e[i];\n                e[i]:=e[j];\n                e[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort(l,j);\n         if i<r then\n           sort(i,r);\n      end;\n    procedure sort1(l,r: longint);\n    //\u522b\u5fd8\u4e86\u591a\u5173\u952e\u5b57\u6392\u5e8f\u4ea4\u6362\u8981\u540c\u65f6\u4ea4\u6362\u597d\u591a\u4e2a\n      var\n         i,j,x,y,xx: longint;\n      begin\n         i:=l;\n         j:=r;\n         x:=c[(l+r) div 2];\n         xx:=d[(l+r) div 2];\n         repeat\n           while (c[i]>x)or(x=c[i])and(d[i]>xx) do\n            inc(i);\n           while (x>c[j])or(x=c[j])and(xx>d[j]) do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=c[i];\n                c[i]:=c[j];\n                c[j]:=y;\n                y:=d[i];\n                d[i]:=d[j];\n                d[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort1(l,j);\n         if i<r then\n           sort1(i,r);\n      end;\nbegin\n  readln(m,n);\n  t:=0;\n  for i:=1 to m do readln(c[i],d[i]);\n  for i:=1 to n do\n  begin\n    readln(a[i],b[i]);\n    for j:=1 to b[i] do\n    begin\n      inc(t);\n      e[t]:=a[i];\n    end;\n  end;//\u8fd9\u91cc\u4e0e\u522b\u7684dalao\u4e0d\u540c\uff0c\n  \u849f\u84bb\u7528e\u6570\u7ec4\u5b58\u4e0b\u6bcf\u74f6\u9632\u6652\u971c\u8d28\u91cf\uff0c\u6240\u4ee5e\u6570\u7ec4\u8981\u5f00\u5927\u70b9(~~\u53cd\u6b63\u4e0d\u4f1a\u7206~~\uff09\n  \n  n:=t;\n  sort(1,n);//\u5bf9\u9632\u6652\u971c\u8d28\u91cf\u6392\u5e8f\n  sort1(1,m);//\u5bf9\u6bcf\u53ea\u725b\u80fd\u627f\u53d7\u7684\u9633\u5149\u503c\u6392\u5e8f\n  for i:=1 to n do \n  begin \n    f[i]:=true; \n    g[i]:=true; \n   end;//\u521d\u59cb\u5316\uff0cf\u8868\u793a\u7b2ci\u74f6\u9632\u6652\u971c\u662f\u5426\u88ab\u7528\u6389\uff0c\n  g\u8868\u793a\u7b2ci\u5934\u725b\u662f\u5426\u6d82\u8fc7\u9632\u6652\u971c\n  ans:=0;\n  for i:=1 to n do\n  begin\n    if not f[i] then continue;\n    for j:=1 to m do\n    begin\n      if (e[i]<=d[j])and(e[i]>=c[j])and(f[i])and(g[j]) then\n      //\u8fd9\u8fb9\u6211\u4e00\u5f00\u59cb\u628a\u4ee3\u7801\u5199\u6210\u4e86 \n      //if (e[i]<=d[i])and(e[i]>=c[i])and(f[i])and(g[j]) then\n      //\u5bfc\u81f4\u53ea\u8fc7\u4e86\u4e00\u4e2a\u70b9\n      begin\n        f[i]:=false;//\u6807\u8bb0\u7b2ci\u74f6\u9632\u6652\u971c\u88ab\u7528\u6389\u4e86\n        g[j]:=false;//\u6807\u8bb0\u7b2cj\u5934\u725b\u7528\u4e86\u9632\u6652\u971c\n        inc(ans);\n        break;\n      end;//\u5982\u679c\u9632\u6652\u971c\u8d28\u91cf\u5728\u725b\u627f\u53d7\u8303\u56f4\u4e4b\u5185\u5c31\u7528\u5b83\n    end;\n  end;\n  writeln(ans);//\u8f93\u51fa\u7b54\u6848\nend.\n```",
        "postTime": 1537273489,
        "uid": 10601,
        "name": "shuiyuhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "\u6211\u4e00\u5f00\u59cb\u60f3\u5230\u7684\u662f\u4f18\u5148\u961f\u5217\uff08\u5373\u201c\u4ece\u6700\u5c0f\u7684\u9632\u6652\u971c\u679a\u4e3e\uff0c\u5c06\u6240\u6709\u7b26\u5408  \u6700\u5c0f\u503c\u5c0f\u4e8e\u7b49\u4e8e\u8be5\u9632\u6652\u971c\u7684 \u5976\u725b\u7684 \u6700\u5927\u503c \u653e\u5165\u4f18\u5148\u961f\u5217\u4e4b\u4e2d\u3002\u201d\uff09\u3002\n\n\u4f46\u90a3\u4e48\u665a\u4e86\uff0c\u6211\u611f\u89c9\u5199\u5199\u633a\u9ebb\u70e6\u7684\uff0c\u5c31\u5199\u4e86\u4e2a\u8d2a\u5fc3\u3002\u3002\n\n\u663e\u7136\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u7136\u540e\u8d2a\u5fc3\u9009\u62e9\u6ee1\u8db3\u8be5\u53ea\u5976\u725b\u8303\u56f4\u7684\u6700\u5c0f\u9632\u6652\u971c\u503c\u3002\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct aaa{\n\tint l,r;\n}a[100001],b[100001];\nint n,m,i,j,ans;\nbool cmp(aaa a,aaa b){\n\treturn a.r<b.r||a.r==b.r&&a.l<b.l;\n}\nbool Cmp(aaa a,aaa b){\n\treturn a.l<b.l;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++)scanf(\"%d%d\",&a[i].l,&a[i].r);\n\tfor(i=1;i<=m;i++)scanf(\"%d%d\",&b[i].l,&b[i].r);\n\tsort(a+1,a+n+1,cmp);\n\tsort(b+1,b+m+1,Cmp);\n\tfor(i=1;i<=n;i++){\n\t\tfor(j=1;j<=m;j++)\n\t\t if(b[j].r&&b[j].l<=a[i].r&&b[j].l>=a[i].l){\n\t\t \tb[j].r--;\n\t\t \tans++;\n\t\t \tbreak;\n\t\t }\n\t}\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1528560461,
        "uid": 50251,
        "name": "\u59ec\u5c0f\u8def\u79cb\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "## P2887 \u3010[USACO07NOV]Sunscreen G\u3011\u9898\u89e3\n\n\u8003\u8651\u8f6c\u5316\u9898\u76ee\u6761\u4ef6\uff1a\n\n\u7ed9\u5b9a\u7684\u5976\u725b\u7684$min,max$\n\n\u76f8\u5f53\u4e8e\u7ed9\u5b9a\u4e86\u4e00\u6761\u7ebf\u6bb5\u7684 \u5de6\u7aef\u70b9 l \u548c\u53f3\u7aef\u70b9 r\n\n\u800c\u7ed9\u7684\u9632\u6652\u971c\u5c31\u76f8\u5f53\u4e8e\u7ed9\u4e86\u82e5\u5e72\u4e2a\u70b9\n\n\u7b54\u6848\u5c31\u662f\u7ebf\u6bb5\u80fd\u8986\u76d6\u7684\u70b9\u7684\u6570\u91cf\n\n## \u8d2a\u5fc3\u8bc1\u660e\uff1a\n\n\u6bcf\u4e00\u4e2a\u70b9\u6709\u4e24\u4e2a\u503c\uff1a$spa_i,many_i$\n\n\u6bcf\u6761\u7ebf\u6bb5\u6709\u4e00\u4e2a $l,r$\n\n\u5982\u679c\u5c06\u6240\u6709\u70b9\u6309\u7167$spa_i$\u964d\u5e8f\u6392\u5217\n\n\u5c06\u6240\u6709\u7ebf\u6bb5\u6309\u7167 $l$ \u964d\u5e8f\u6392\u5217\n\n\u5bf9\u4e8e\u6240\u6709\u7684\u7ebf\u6bb5\u5339\u914d\u5230\u7684\u4e00\u5b9a\u662f\u5f53\u524d\u6700\u5dee\u7684\u4e00\u4e2a\u70b9\uff0c\u56e0\u4e3a\u53ea\u6709\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u8986\u76d6\u5230\u66f4\u591a\u7684\u70b9\u3002\n\n\u90a3\u4e48\u4ec0\u4e48\u6837\u7684\u70b9\u624d\u662f\u6700\u5dee\u7684\u5462\u3002\u3002\n\n\u4e00\u5b9a\u662f\u5728\u7ebf\u6bb5\u8303\u56f4\u4e2d\u503c\u6700\u5927\u7684\u70b9\uff0c\u56e0\u4e3a\u66f4\u5c0f\u7684\u70b9\u73c2\u4ee5\u5339\u914d\u66f4\u591a\u7684\u7ebf\u6bb5\u3002\n\n\u6240\u4ee5\u6392\u5b8c\u5e8f\u540e\u4e00\u6ce2\u6a21\u62df\u5339\u914d\u5373\u53ef\u3002\n\nCode:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint C,L,ans;\nconst int N=2505;\nstruct node{int l,r;}a[N];\nstruct sipa{int sp,ma;}spa[N];\ninline bool cmp1(node x,node y){return x.l>y.l;}\ninline bool cmp2(sipa x,sipa y){return x.sp>y.sp;}\nint main(){\n  scanf(\"%d%d\",&C,&L);\n  for(int i=1;i<=C;++i){scanf(\"%d%d\",&a[i].l,&a[i].r);}\n  for(int i=1;i<=L;++i){scanf(\"%d%d\",&spa[i].sp,&spa[i].ma);}\n  sort(a+1,a+C+1,cmp1);\n  sort(spa+1,spa+L+1,cmp2);\n  for(int i=1;i<=C;++i)\n\t\tfor(int j=1;j<=L;++j) {\n\t\t\tif(spa[j].sp>=a[i].l&&spa[j].sp<=a[i].r&&spa[j].ma>0) {\n\t\t\t\tans++;\n\t\t\t\tspa[j].ma--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\tprintf(\"%d\\n\", ans);\n  return 0;\n}\n\n```",
        "postTime": 1599913602,
        "uid": 67621,
        "name": "NuoCarter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]Sunscreen G\u3011"
    },
    {
        "content": "# \u524d\u8a00\n\u9898\u89e3\u533a\u4f17\u591a\u5927\u4f6c\u7684\u89e3\u6cd5\u4ee4\u672c\u849f\u84bb\u4f69\u670d\uff0c\u4f46\u672c\u4eba\u8fc7\u4e8e\u849f\u84bb\uff0c\u5f00\u59cb\u65f6\u628a\u8d2a\u5fc3\u5199\u9519\uff0c\u56e0\u6b64\u6211\u4e3b\u8981\u8bb2\u8bb2\u6211\u7684\u9519\u8bef\u7684\u8d2a\u5fc3\u662f\u9519\u5728\u54ea\u7684\uff08\u9644\u56fe\u4f8b\uff09\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/werner-yin/p/13280348.html)\n# \u601d\u8def\n## \u58f0\u660e\n```\nminSPFi : \u5976\u725b\u5fcd\u53d7\u7684\u9633\u5149\u5f3a\u5ea6\u6700\u5c0f\u503c\nmaxSPFi : \u5976\u725b\u5fcd\u53d7\u7684\u9633\u5149\u5f3a\u5ea6\u6700\u5927\u503c\ncoveri : \u9632\u6652\u971c\u6570\u91cf\nSPFi \uff1a \u9632\u6652\u971c\u9633\u5149\u5f3a\u5ea6\n```\n## \u521d\u59cb\u7684\u601d\u8def(38 pts)\n\u8fd9\u662f\u4e00\u9053\u8d2a\u5fc3\u9898,\u4f46\u6211\u5f00\u59cb\u65f6\u8fd8\u662f\u60f3\u9519\u4e86\u3002\n\n\u6211\u5148\u5c06\u6bcf\u5934\u725b\u6309\u7167\u6700\u5c0f\u5fcd\u53d7\u9633\u5149\u5f3a\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u9632\u6652\u971c\u6309\u7167\u5f3a\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u7136\u540e\u5f00\u59cb\u679a\u4e3e\uff0c\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u5976\u725b \uff0c\u5047\u8bbe\u5f53\u524d\u679a\u4e3e\u5230\u7b2c $l$ \u4e2a \u9632\u6652\u971c , \u5f53\u5176 $SPFi < minSPFi$ , $l++$ ,\u76f4\u5230\u6ee1\u8db3 $SPFi \\ge minSPFi$ \uff0c\u800c\u5f53 $SPFi > maxSPFi$ , \u5219 ```continue``` ,\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u9632\u6652\u971c\u5269\u4f59\u4e2a\u6570\u5373\u53ef\u5224\u65ad\u7b54\u6848\n## \u521d\u59cb\u4ee3\u7801\uff0838 pts)\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nconst int MAXN = 2510;\nint C,L,ans,l = 0;\n\nstruct cow{//\u5976\u725b\n\tint l,r;\n\tbool operator < (const cow &b) const{\n\t\tif(l == b.l) return r < b.r;\n\t\treturn l < b.l;\n\t}\n}a[MAXN];\n\nstruct sunscreen{//\u9632\u6652\u971c\n\tint SP,num;\n\tbool operator < (const sunscreen &b) const{\n\t\treturn SP < b.SP;\n\t}\n}lotion[MAXN];\n\nint main (){\n\tscanf(\"%d %d\",&C,&L);\n\tfor(int i = 0 ;i < C;i++) scanf(\"%d %d\",&a[i].l,&a[i].r);\n\tfor(int i = 0 ;i < L;i++) scanf(\"%d %d\",&lotion[i].SP,&lotion[i].num);\n\tsort( a , a+C );\n\tsort( lotion , lotion+L);\n\tfor(int i = 0 ;i < C;i++){\n\t\tif(lotion[l].num == 0) l++; //\u5224\u65ad\u4e2a\u6570\n\t\twhile ( a[i].l > lotion[l].SP && l < L-1) l++;//\u67e5\u627e\u5de6\u7aef\u70b9\u662f\u5426\u7b26\u5408\u6761\u4ef6\n\t\tif( a[i].r < lotion[l].SP) continue;//\u53f3\u7aef\u70b9\u4e0d\u7b26\u5408\u76f4\u63a5\u8df3\u8fc7\n\t\tlotion[l].num--;\n\t\tans++;//\u7b54\u6848\u5904\u7406\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n## \u6b63\u89e3\u601d\u8def\n\u7136\u9e45\uff0c\u8fd9\u79cd\u8d2a\u5fc3\u9519\u4e86\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/hreks9kl.png)\n\u6309\u7167\u8fd9\u79cd\u7b97\u6cd5\uff0c\u6211\u4eec\u4f1a\u8ba9 1 \u533a\u95f4\u4f7f\u7528 I \uff0c2\u533a\u95f4\u4f7f\u7528 J\uff0c3 \u533a\u95f4\u4f7f\u7528 K \uff0c\u7b54\u6848\u4e3a 3\u3002\n\u4f46\u662f\u7b54\u6848\u4e3a4\u3002\n\n\u6b63\u786e\u89e3\u6cd5\u5e94\u8be5\u4e3a\uff1a\n\n\u5148\u5c06\u6bcf\u5934\u725b\u6309\u7167\u6700\u5c0f\u5fcd\u53d7\u9633\u5149\u5f3a\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u5f00\u59cb\u679a\u4e3e\uff0c\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u5976\u725b \uff0c\u6211\u4eec\u8981\u627e\u5230\u5b83\u80fd\u7528\u7684\u9632\u6652\u971c\u91cc\u9762```SPFi```\u6700\u5927\u7684\uff0c\u7136\u540e\u8ba1\u7b97\u7b54\u6848\u3002\n\n### \u5173\u4e8e\u6b63\u786e\u6027\n```SPFi```\u66f4\u5c0f\u7684\u663e\u7136\u5176\u4ed6\u6ca1\u679a\u4e3e\u5230\u7684\u725b\u5f88\u53ef\u80fd\u4f1a\u88ab\u7528\u5230\uff0c\u4e8e\u662f\u6211\u4eec\u62ff\u6389```SPFi```\u6700\u5927\u7684\uff0c\u5177\u4f53\u53ef\u4ee5\u89c1\u4e0a\u9762\u7684\u56fe\u3002\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nconst int MAXN = 2510;\nint C,L,ans;\n\nstruct cow{\n\tint l,r;\n\tbool operator < (const cow &b) const{\n\t\treturn l > b.l;\n\t}\n}a[MAXN];\n\nstruct sunscreen{\n\tint SP,num;\n}lotion[MAXN];\n\nint main (){\n\tscanf(\"%d %d\",&C,&L);\n\tfor(int i = 0 ;i < C;i++) scanf(\"%d %d\",&a[i].l,&a[i].r);\n\tfor(int i = 0 ;i < L;i++) scanf(\"%d %d\",&lotion[i].SP,&lotion[i].num);\n\tsort( a , a+C );\n\tfor(int i = 0 ;i < C;i++){\n\t\tint l = -1,choose = -1;\n\t\tfor(int j = 0;j < L;j++)//\u66b4\u529b\u679a\u4e3e\n\t\t\tif ( lotion[j].num > 0 && lotion[j].SP >= a[i].l && lotion[j].SP <= a[i].r)\n\t\t\t\tif(lotion[j].SP > choose){\n\t\t\t\t\tchoose = lotion[j].SP;\n\t\t\t\t\tl = j;\n\t\t\t\t}\n\t\tif( l != -1 ){\n\t\t\tans++;\n\t\t\tlotion[l].num--;\n\t\t}//\u7b54\u6848\u5904\u7406\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1594374101,
        "uid": 167354,
        "name": "Werner_Yin",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]Sunscreen G\u3011"
    },
    {
        "content": "\n~~\u4ec0\u4e48\u53eb\u6807\u9898\u8fc7\u957f....\u6211\u53ef\u80fd\u662f\u6ee5\u7528\u6807\u9898\u4e86~~\n\n\n------------\n\n\u52a0\u5165\u4e86\u5e73\u8861\u6811\u4f18\u5316\u590d\u6742\u5ea6\u964d\u4e3a$O(nlogn)$\u3002\n\n### \u8d2a\u5fc3\u601d\u8def\uff1a \n\u8fd9\u91cc\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c \u4e4b\u540e\u6bcf\u6b21\u53d6\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u53f3\u7aef\u70b9\u7684\u7b2c\u4e00\u4e2a\u533a\u95f4\u5c31\u884c\u4e86\u3002\n\u8fd9\u91cc\u8bc1\u660e\u53ef\u4ee5\u53c2\u8003\u5308\u7259\u5229\u5b9a\u7406\u3002\n\n\n------------\n\n\u672c\u8d28\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\uff0c \u6709\u82e5\u5e72\u7684\u533a\u95f4\u548c\u82e5\u5e72\u7684\u70b9\uff0c\u6bcf\u4e2a\u70b9\u9009\u53d6\u6240\u5728\u533a\u95f4\u4e4b\u4e00\uff0c \u6c42\u6700\u5927\u5339\u914d\u3002\n\n\u8fd9\u91cc\u53ef\u4ee5\u5982\u4e0b\u8bc1\u660e\uff1a\n\n### \u9996\u5148\u4e00\u4e2a\u5b9a\u7406\uff1a\n\t\n    \u4e00\u4e2a\u4e8c\u5206\u56fe\u5339\u914d\u4e0d\u5b58\u5728\u589e\u5e7f\u8def\u5c31\u53ef\u5224\u5b9a\u662f\u6700\u5927\u5339\u914d\u3002\n ### \u4ec0\u4e48\u53eb\u589e\u5e7f\u8def\uff1a\n \n ~~\u6211\u7684\u7406\u89e3\uff1a~~\n \u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u56fe\u7684\u5339\u914d\uff0c \u5982\u679c\u4ece\u4e00\u4e2a\u6ca1\u6709\u8fdb\u5165\u5339\u914d\u7684\u70b9\u51fa\u53d1\uff0c \u5148\u6cbf\u7740\u975e\u5339\n \u914d\u8fb9\u8d70\uff0c \u8d70\u5230\u4e00\u4e2a\u8fdb\u5165\u5339\u914d\u7684\u70b9\uff0c \u4e4b\u540e\u6cbf\u7740\u5339\u914d\u8fb9\u7ee7\u7eed\u8d70\u5230\u4e00\u4e2a\u70b9$s$\u518d\u6cbf\u7740\n \u975e\u5339\u914d\u8fb9$s2$..\u82e5\u5728\u8fd9\u79cd\u5faa\u73af\u4e2d\u627e\u5230\u4e86\u5b58\u5728\u4e00\u70b9$s$\u4f7f\u5f97$s2$\u662f\u975e\u5339\u914d\u70b9\uff0c \u90a3\u4e48\n \u5c31\u5b58\u5728\u589e\u5e7f\u8def\n ### \u600e\u4e48\u8bc1\u660e\u5bf9\u4e8e\u8fd9\u4e2a\u8d2a\u5fc3\u7b56\u7565\u4e0d\u5b58\u5728\u589e\u5e7f\u8def\uff1f\n  \u7528$ci$ \u4ee3\u8868 \u7b2c $i$ \u5934\u725b\uff0c $ si $ \u4ee3\u8868\u7b2c $i$ \u4e2a\u9632\u6652\u971c\u5047\u5982\u5b58\u5728\u589e\u5e7f\u8def\u5f84\uff0c \u90a3\u4e48\u770b\u6700\u77ed\u7684\u4e00\u6761\uff0c \u663e\u7136\u5982\u679c\u5b58\u5728\u67d0\u4e00\u70b9$si$ \uff0c \u5b83\u4e00\u5b9a\u4f1a\u5411\u7740\u4e4b\u524d\u7684\u725b\u627e\u589e\u5e7f\u8def\uff0c \u800c\u627e\u5230\u6700\u4e0a\u9762\u7684\u8282\u70b9\u65f6\u6ca1\u6709\u4e0e\u4e4b\u5339\u914d\u7684\u70b9\uff0c \u4f46\u662f\u5728\u8d2a\u5fc3\u7684\u8fc7\u7a0b\u4e2d\u6700\u4e0a\u9762\u7684\u70b9\u4e00\u5b9a\u662f\u6700\u5148\u5339\u914d\uff0c \u6240\u4ee5\u5047\u8bbe\u4e0d\u6210\u7acb\n \n \n \n####   \u4ee3\u7801\uff1a\n```cpp\n//RoRoyyy\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <map>\n\nusing namespace std;\nconst int N = 2505;\ntypedef pair<int, int> PII;\nint c, l;\nPII cows[N];\nmap<int, int> spfs;\nint main() {\n    cin >> c >> l;\n    for(int i = 1; i <= c; i++) cin >> cows[i].first >>cows[i].second;\n    sort(cows + 1, cows + 1 + c);\n    for(int i = 1; i <= l; i++) {\n        int spf, cover;\n        cin >> spf >> cover; \n        spfs[spf] += cover;\n    } \n    int res = 0; \n    for(int i = c; i >= 1; i--) {\n        auto cow = cows[i];\n        auto it = --spfs.upper_bound(cow.second);\n        if(it -> first >= cow.first && it -> first <= cow.second) {\n            res++;\n            it -> second--;\n            if(it -> second == 0) {\n                spfs.erase(it); \n            }\n        }\n    }\n    cout << res << endl;\n    return 0;\n}\n```\n",
        "postTime": 1571231072,
        "uid": 111617,
        "name": "RoRoyyy",
        "ccfLevel": 0,
        "title": "P2887"
    },
    {
        "content": "\n\n## \u9898\u610f\u6982\u8ff0\n\nTo avoid unsightly burns while tanning, each of the $C (1 \u2264 C\u2264 2500)$ cows must cover her hide with sunscreen when they're at the beach. Cow *i* has a minimum and maximum $SPF$ rating $(1 \u2264 minSPF_i \u2264 1,000; minSPF_i \u2264 maxSPF_i \u2264 1,000) $that will work. If the $SPF$ rating is too low, the cow suffers sunburn; if the *SPF* rating is too high, the cow doesn't tan at all........\n\nThe cows have a picnic basket with $L(1 \u2264 L \u2264 2500)$ bottles of sunscreen lotion, each bottle $i$ with an *SPF* rating $SPF_i$ $(1 \u2264 SPF_i \u2264 1,000)$. Lotion bottle $i$ can cover $cover_i$ cows with lotion. A cow may lotion from only one bottle.\n\nWhat is the maximum number of cows that can protect themselves while tanning given the available lotions?\n\n## \u8d2a\u5fc3\u601d\u8def\n\n \u5c06\u6240\u6709\u725b\u6309\u7167$minSPF$\u9012\u51cf\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u7406\u7531\u5982\u4e0b\u3002\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u660e\u786e\u4e00\u70b9\uff1a**\u5c31\u7b97\u8ba9\u4e00\u5934\u725b\u653e\u5f03\u65e5\u5149\u6d74\uff0c\u8ba9\u53e6\u4e00\u5934\u725b\u6765\uff0c\u7b54\u6848\u4e5f\u4e0d\u4f1a\u53d8\u5f97\u66f4\u4f18\u3002**\u8fd9\u4e2a\u7ed3\u8bba\u7684\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u725b\u7684\u6570\u91cf\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e00\u5b9a\u8981\u5c3d\u91cf\u6ee1\u8db3\u5f53\u524d\u7684\u725b\u3002\n\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u6b63\u5728\u5904\u7406\u4e00\u5934\u9700\u6c42\u4e3a$[x,y]$\u7684\u725b\uff0c\u6211\u4eec\u6709\u4e24\u74f6\u7b26\u5408\u8981\u6c42\u7684\uff0cSPF\u5206\u522b\u4e3a$m,n$\uff0c\u5176\u4e2d$x\\leq m \\leq n \\leq y$\uff0c\u90a3\u4e48\u6211\u4eec\u9009\u62e9\u54ea\u4e00\u74f6\u66f4\u597d\u5462\uff1f\n\n\u663e\u7136\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9$m$\u7684\u90a3\u4e00\u74f6\uff0c\u90a3\u4e48\u6709\u53ef\u80fd\u51fa\u73b0\u4e00\u5934\u725b\uff0c\u5b83\u7684\u9700\u6c42\u6070\u597d\u5728$q,n(q\\leq m)$\u4e4b\u95f4\uff0c\u90a3\u4e48\u8fd9\u65f6\u8fd9\u5934\u725b\u5c31\u65e0\u6cd5\u4f7f\u7528$n$\u8fd9\u4e00\u74f6\u3002\u5982\u679c\u53ea\u6709\u200b$2$\u5934\u725b\uff0c\u90a3\u4e48\u5b83\u5c31\u88ab\u6d6a\u8d39\u4e86\uff0c\u6211\u4eec\u767d\u767d\u5931\u53bb\u4e86\u4e00\u4e2a\u89e3\u3002\n\n\u800c\u73b0\u5728\u6211\u4eec\u6392\u5e8f\u540e\uff0c\u8fd9\u5934\u725b\u7528\u4e0d\u4e86\u7684\uff0c\u540e\u9762\u7684\u4e0d\u4e00\u5b9a\u7528\u4e0d\u4e86\uff0c\u8fd9\u5934\u725b\u80fd\u7528\u7684\uff0c\u540e\u9762\u7684\u6709\u53ef\u80fd\u80fd\u7528\uff0c\u4e5f\u6709\u53ef\u80fd\u4e0d\u80fd\u7528\uff0c\u5982\u679c\u662f\u540e\u8005\uff0c\u6211\u4eec\u6b64\u65f6\u5c31\u9700\u8981\u9009\u62e9\u8fd9\u4e00\u74f6\uff0c\u624d\u4e0d\u4f1a\u6d6a\u8d39\u6389\u3002\n\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e00\u5934\u725b\uff0c\u5982\u679c\u6709\u591a\u79cd\u9009\u62e9\uff0c\u6211\u4eec\u5e94\u5f53\u9009\u62e9\u5bf9\u540e\u9762\u5f71\u54cd\u6700\u5c0f\u7684\u3002\u4e5f\u5c31\u662f\u8fd9\u5934\u725b\u53ef\u80fd\u4f7f\u7528\u7684\u6700\u5927$SPF$\u7684\u9632\u6652\u971c\uff0c\u624d\u662f\u6700\u5408\u7b97\u7684\u3002\n\n\u7efc\u4e0a\uff0c\u5148\u6392\u5e8f$O(n\\text{log}n)$,\u518d\u626b\u4e00\u904d\u5e8f\u5217\uff0c\u6bcf\u6b21\u9009\u80fd\u7528\u7684$SPF$\u6700\u5927\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u574f\u662f$O(n^2)$\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5f88\u96be\u8fbe\u5230\u8fd9\u4e2a\u4e0a\u754c\uff0c\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\u3002\n\n## \u4f2a\u4ee3\u7801\n\n\u8fd9\u91cc\u7ed9\u51fa\u8d2a\u5fc3\u7b56\u7565\u7684\u4f2a\u4ee3\u7801\u4f9b\u53c2\u8003\n\n```\nbegin\n\tread n,m\n\tfor i from 0 to n do\n    \tread cow[i].minspf, cow[i].maxspf\n    for i from 0 to m do\n        read lotion[i].spf,lotion[i].cover\n    sort(cow,cow+n) '\u6309\u7167minspf\u9012\u51cf\u7684\u987a\u5e8f\n    for i from 0 to n do\n    \tfor j from 0 to m do\n    \t\tif lotion[j].spf >= cow[i].minspf and lotion[j].spf <= cow[i].maxspf and\n    \t\t\tlotion[j].cover > 0 then\n    \t\t\tlotion[j].cover--\n    \t\t\tans++\n    \t\t\tbreak\n    \t\tend if\n    \tnext j\n    next i\n    print ans\nend.\n```\n\n\n\n## \u5b9e\u9645\u5b9e\u73b0(C++11)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2560;\nstruct Cow\n{\n\tint minSPF;\n\tint maxSPF;\n}cows[MAXN];\nstruct SunScreen\n{\n\tint SPF;\n\tint cover;\n}lotion[MAXN];\nint main()\n{\n\tfreopen(\"sunscreen.in\",\"r\",stdin);\n\tfreopen(\"sunscreen.out\",\"w\",stdout);\n\tint c,l,ans=0;\n\tscanf(\"%d%d\",&c,&l);\n\tfor (int i=0;i<c;i++)scanf(\"%d%d\",&cows[i].minSPF,&cows[i].maxSPF);\n\tfor (int i=0;i<l;i++)scanf(\"%d%d\",&lotion[i].SPF,&lotion[i].cover);\t\n\tsort(cows,cows+c,[](const Cow a, const Cow b){return a.minSPF>b.minSPF;});\n\tsort(lotion,lotion+l,[](const SunScreen a,const SunScreen b){return a.SPF > b.SPF;});\n\tfor (int i=0;i<c;i++)\n\t\tfor (int j=0;j<l;j++)\n\t\t\tif (lotion[j].SPF <= cows[i].maxSPF && lotion[j].SPF >= cows[i].minSPF && lotion[j].cover )\n\t\t\t{\n\t\t\t\tlotion[j].cover--;\n\t\t\t\tans++;\n\t\t\t\tbreak;\n\t\t\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1547043463,
        "uid": 87696,
        "name": "Lily_White",
        "ccfLevel": 6,
        "title": "Sunscreen \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "**\u5206\u6790**   \u6bcf\u53ea\u5976\u725b\u7684\u53ef\u63a5\u53d7\u8303\u56f4\u662f\u4e00\u4e2a\u95ed\u533a\u95f4\n\n\u6309\u7167\u6bcf\u53ea\u5976\u725bminSPF**\u9010\u6e10\u9012\u51cf\u6392\u5e8f**\uff0c\u7136\u540e\u7ed9\u4ed6\u7528\u8303\u56f4\u5185**SPF\u503c\u6700\u5927**\u7684\u9632\u6652\u971c\u3002\n\u5373 **\u8d2a\u5fc3\u4e24\u6b21**\u3002\n\u5bf9\u4e8e\u5728\u8303\u56f4\u5185\u7684\u51e0\u79cd\u9632\u6652\u971c\uff0c\u5b83\u4eec\u7684SPF\u503c\uff1a\n\n\u4e00\u3001\u8981\u4e48\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u4e00\u4e2a\uff0c\u4e0d\u80fd\u6ee1\u8db3\u4e0b\u4e00\u4e2a\uff1b\n\u4e8c\u3001\u8981\u4e48\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u4e00\u4e2a\uff0c\u4e5f\u80fd\u6ee1\u8db3\u4e0b\u4e00\u4e2a\u3002\n\n\u6240\u4ee5\u9009\u6700\u5927\u7684\uff0c\u80fd\u591f\u5c3d\u91cf**\u591a**\u9009\u5230\u4e00\u7684\u60c5\u51b5\u3002\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c3d\u91cf\u5c11\u4f7f\u7528  **\u80fd\u6ee1\u8db3\u4e0b\u4e00\u53ea\u5976\u725b\u7684\u9632\u6652\u971c**\u3002\n\n\u6807\u7a0b\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\n\n\nint c,l,spf[2501][2],ss[2501][2],ans=0,k1,k2;\n//c->C  l->L spf[i][0]->minSPFi spf[i][1]->maxSPFi  ans\u7b54\u6848\n//k1 k2\u4e34\u65f6\u53d8\u91cf  ss[i][0]->SPFi   ss[i][1]->coveri \n\n\nvoid qsort(int l,int r)//\u7b80\u5355\u7684\u5feb\u6392 \n{\n    int i=l,j=r,k;\n    int mid=spf[(l+r)/2][0];\n    do\n    {\n        while(spf[i][0]>mid)i++;\n        while(spf[j][0]<mid)j--;\n        if(i<=j)\n        {\n            k=spf[i][0];spf[i][0]=spf[j][0];spf[j][0]=k;\n            k=spf[i][1];spf[i][1]=spf[j][1];spf[j][1]=k;\n            i++;j--;\n        }\n    }\n    while(i<=j);\n    if(l<j)qsort(l,j);\n    if(i<r)qsort(i,r);\n}\n//ctrl+c   ctrl+v\n//\u624b\u6253\uff1f\u4e0d\u5b58\u5728\u7684\n\n\nint main()\n{\n    cin>>c>>l;\n    for(int i=1;i<=c;++i)\n    {\n        cin>>spf[i][0]>>spf[i][1];\n    }\n    for(int i=1;i<=l;++i)\n    {\n        cin>>ss[i][0]>>ss[i][1];\n    }//\u8f93\u5165\u2026\n     \n    qsort(1,c);//\u61d2\u4eba\u6cd5 \n    \n    for(int i=1;i<=c;++i)\n    {\n        \n        k1=0;//\u5b58\u503c \n        k2=0;//\u5b58\u5740 \n        for(int j=1;j<=l;j++)\n        {\n            if(ss[j][1]>0&&ss[j][0]>=spf[i][0]&&ss[j][0]<=spf[i][1]&&ss[j][0]>=k1)\n            {\n                k1=ss[j][0];\n                k2=j;\n            }//\u6c42SPF\u6700\u5927 \n        }\n        \n        if(k2!=0)\n        {\n            ans++;//\u591a\u4e00\u53ea\u80fd\u6652\u592a\u9633\u7684\u5976\u725b \n            ss[k2][1]--;//\u7528\u6389\u4e00\u4e2ass \n        }\n        \n    }\n    \n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1527993814,
        "uid": 34372,
        "name": "_wkjzyc",
        "ccfLevel": 0,
        "title": "P2887 [USACO07NOV]\u9632\u6652\u971cSunscreen"
    },
    {
        "content": "    \n    \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define MAX 2600\nint sc[MAX][5],cowmi[MAX][3];\nvoid qs(int left,int right);\nvoid qss(int l,int r);\nint main()\n{\n    int tc,ts,i,j,cnt=0;\n    scanf(\"%d%d\",&tc,&ts);\n    for(i=1;i<=tc;++i)\n    scanf(\"%d%d\",&cowmi[i][1],&cowmi[i][2]);\n    qs(1,tc);//\u5bf9\u725b\u7684\u6700\u5c0f\u9632\u6652\u503c\u8fdb\u884c\u6392\u5e8f\u3002\u6ce8\u610f\u7ef4\u62a4\u6700\u5927\u9632\u6652\u503c\u548c\u6700\u5c0f\u9632\u6652\u503c \n//    for(i=1;i<=tc;++i)\n//    printf(\"<min=%d max=%d >\\n\",cowmi[i][1],cowmi[i][2]);\n    for(i=1;i<=ts;++i)\n    scanf(\"%d%d\",&sc[i][1],&sc[i][2]);//\u6ce8\u610f\uff1a\u7b2c\u4e00\u4e2a\u662fspf\uff0c\u7b2c\u4e8c\u4e2a\u662f\u74f6\u6570\u3002\u5982\u679c\u53cd\u4e86\u53ef\u4ee5\u8fc7\u4e00\u4e2a\u70b9 \n    qss(1,ts);//\u5bf9\u9632\u6652\u971c\u7684spf\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u6ce8\u610f\u7ef4\u62a4\u74f6\u6570\n    for(i=tc;i>=1;--i)//\u8d2a\u5fc3\uff0c\u5982\u679c\u6b63\u5e8f\u5f9738\u5206 \n    {\n        for(j=ts;j>=1;--j)\n        {\n            if(cowmi[i][1]<=sc[j][1]&&cowmi[i][2]>=sc[j][1]&&sc[j][2]>0)\n            {\n                sc[j][2]--;          \n                cnt++;\n                //printf(\"<cma=%d,cmi=%d,spf=%d,ps=%d>\\n\",cowmi[i][2],cowmi[i][1],sc[j][1],sc[j][2]);\n                break;\n            } \n        }\n    }\n    printf(\"%d\",cnt);\n    return 0;\n}\nvoid qs(int left,int right)\n{\n    int i,j,base,t,temp;\n    i=left; \n    j=right;\n    base=cowmi[(i+j)/2][1];\n    while (i<=j)\n    {\n        while (cowmi[i][1]<base) i++;\n        while (cowmi[j][1]>base) j--;\n        if (i<=j)\n        {\n            t=cowmi[i][1];\n            temp=cowmi[i][2];\n            cowmi[i][2]=cowmi[j][2]; \n            cowmi[i][1]=cowmi[j][1];\n            cowmi[j][1]=t;\n            cowmi[j][2]=temp;//\u7ef4\u62a4 \n            i++;\n            j--;\n        }\n    }\n    if(left<j) qs(left,j);\n    if(i<right) qs(i,right);\n}\nvoid qss(int l,int r)\n{\n    int i,j,base,t,temp;\n    i=l; \n    j=r;\n    base=sc[(i+j)/2][1];\n    while (i<=j)\n    {\n        while (sc[i][1]<base) i++;\n        while (sc[j][1]>base) j--;\n        if (i<=j)\n        {\n            t=sc[i][1];\n            temp=sc[i][2]; \n            sc[i][1]=sc[j][1];\n            sc[i][2]=sc[j][2];\n            sc[j][1]=t;\n            sc[j][2]=temp;//\u7ef4\u62a4 \n            i++;\n            j--;\n        }\n    }\n    if (l<j) qss(l,j);\n    if (i<r) qss(i,r);\n}\n```",
        "postTime": 1484883545,
        "uid": 25449,
        "name": "flifli",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "\u6211\u5148\u6765\u7b80\u5355\u5730\u6574\u7406\u4e0b\u9898\u610f\u3002  \n\u5c31\u7ed9\u4f60\u82e5\u5e72\u7ebf\u6bb5\u548c\u70b9\uff0c\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u4e0e\u5305\u542b\u8fd9\u4e2a\u70b9\u7684\u7ebf\u6bb5\u5339\u914d\uff0c\u6c42\u6700\u5927\u5339\u914d\u6570\u3002 \n\uff08\u9898\u89e3\u91cc\u8fd8\u6709\u795e\u4ed9\u8c8c\u4f3c\u771f\u7684\u5199\u4e86\u4e2a\u7f51\u7edc\u6d41\u6216\u8005\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u7b97\u4e86\u4e0d\u7ba1\u4e86\uff09  \n\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u8d2a\u5fc3\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u80af\u5b9a\u662f\u4e0e\u8986\u76d6\u8fd9\u4e2a\u70b9\u7684\u7ebf\u6bb5\u4e2d\uff0c\u53f3\u7aef\u70b9\u6700\u9760\u5de6\u7684\u5339\u914d\uff0c\u90a3\u5c31\u62ff\u5806\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\u3002  \n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <iostream>\n#include <climits>\n#include <algorithm>\n#include <queue>\n\nconst int MAXN = 1e4 + 7;\n\nstd::vector<int> v[MAXN];\nint n, m, p[MAXN];\n\nint main(int argc, char *argv[]) {\n    scanf(\"%d %d\", &n, &m);\n    for (int i = 1; i <= n; i++) {\n        int l, r;\n        scanf(\"%d %d\", &l, &r);\n        v[l].push_back(r);\n    }\n    for (int i = 1; i <= m; i++) {\n        int pos, num;\n        scanf(\"%d %d\", &pos, &num);\n        p[pos] += num;\n    }\n    std::priority_queue<int, std::vector<int>, std::greater<int> > q;\n    int ans = 0;\n    for (int i = 1; i <= 1000; i++) {\n        while (!q.empty() && q.top() < i) q.pop();\n        for (auto j : v[i]) {\n            q.push(j);\n        }\n        while (!q.empty() && p[i]) q.pop(), ans++, p[i]--;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1563956192,
        "uid": 52748,
        "name": "Logey",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "\u5927\u90e8\u5206\u9898\u89e3\u90fd\u4ece\u725b\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u8003\u8651\u9632\u6652\u971c\u7ed9\u8c01\u7528\u3002\n\u628a\u9632\u6652\u971c\u6309\u7167spf\u503c\u5347\u5e8f\u6392\u5e8f\u5e76\u4f9d\u6b21\u8003\u8651\u3002\n\n\u60f3\u8981\u8ba9\u5f53\u524d\u9632\u6652\u971c\u5bf9\u4e4b\u540e\u7684\u5f71\u54cd\u6700\u5c0f,\u5c31\u4f18\u5148\u7ed9\u80fd\u63a5\u53d7\u5b83\u7684\u725b\u91cc\u9762maxspf\u503c\u6700\u5c0f\u7684 \u3002\n\n\u628a\u725b\u6309minspf\u503c\u5347\u5e8f\u6392\u5e8f\u3002\n\u679a\u4e3e\u9632\u6652\u971c\u7684spf\uff0c\u628aminspf<=\u9632\u6652\u971c\u7684spf\u7684\u725b\u7684maxspf\u503c\u4e22\u8fdb\u5c0f\u6839\u5806\u91cc\u3002\n\u5206\u914d\u5f53\u524d\u9632\u6652\u971c\u7684\u65f6\u5019\uff0c\u5148\u4e22\u6389maxspf<spf\u7684\u5806\u9876\u7684\u725b(\u5b83\u4eec\u4ee5\u540e\u4e5f\u6ca1\u6551\u4e86)\uff0c\u7136\u540e\u518d\u5f39\u51facover\u6b21\u3002\n\n\u8c03\u534a\u5929\uff0c\u8fd8\u5f97\u6807\u8bb0\u725b\u6709\u6ca1\u6709\u7528\u8fc7\u9632\u6652\u971c\uff0c!q.empty()\u8fd8\u5f97\u5148\u5224\u4e0d\u7136\u4f1are,\u83dc\u6b7b\u3002\n\u4e0d\u61c2\u770b\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nnamespace io{\n    #define ll long long\n    #define inf 0x3f3f3f3f\n    #define il inline \n    #define in1(a) read(a)\n    #define in2(a,b) in1(a),in1(b)\n    #define in3(a,b,c) in2(a,b),in1(c)\n    #define in4(a,b,c,d) in2(a,b),in2(c,d)\n    il void readl(ll &x){\n        x=0;ll f=1;char c=getchar();\n        while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\n        while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n        x*=f;\n    }\n    il void read(int &x){\n        x=0;int f=1;char c=getchar();\n        while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\n        while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n        x*=f;\n    }\n}using namespace io;\n#define N 2505\nint c,l;\nstruct cow{\n\tint l,r,id;\n\tbool operator <(const cow &rhs) const{\n\t\treturn r>rhs.r;\n\t}\n}a[N];\nbool cmp1(cow a,cow b){\n\treturn a.l<b.l;\n}\nstruct sunscreen_lotion{\n\tint spf,cover;\n}s[N];\nbool cmp2(sunscreen_lotion a,sunscreen_lotion b){\n\treturn a.spf<b.spf;\n}\npriority_queue <cow> q;\nbool vis[N];\nint main(){\n\tint ans=0;\n\tin2(c,l);\n\tfor(int i=1;i<=c;i++) in2(a[i].l,a[i].r),a[i].id=i;\n\tsort(a+1,a+c+1,cmp1);\n\tfor(int i=1;i<=l;i++) in2(s[i].spf,s[i].cover);\n\tsort(s+1,s+l+1,cmp2);\n\tfor(int i=1;i<=l;i++){\n\t\tfor(int j=1;j<=c;j++){\n\t\t\tif(a[j].l<=s[i].spf&&!vis[a[j].id]) q.push(a[j]);\n\t\t}\n\t\twhile(!q.empty()&&q.top().r<s[i].spf) q.pop();\n\t\twhile(!q.empty()&&s[i].cover--){\n\t\t\tvis[q.top().id]=1;\n\t\t\tans++;\n\t\t\tq.pop();\n\t\t}\n\t\twhile(!q.empty()) q.pop();\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1549785143,
        "uid": 60972,
        "name": "AndyMo",
        "ccfLevel": 0,
        "title": "P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "\u6ca1\u6709\u770b\u5230\u8fc7\u7528set\u7684\uff0c\u8d2a\u5fc3\u7b56\u7565\u8bc1\u660e\u5c31\u4e0d\u8bb2\u4e86\uff0c\u5176\u4ed6\u9898\u89e3\u4e2d\u6709\u4e00\u4f4d\u795e\u4ed9\u8be6\u7ec6\u7684\u8bc1\u660e\u4e86\uff0c\u4e3b\u8981\u5c31\u662f\u5206\u7c7b\u8ba8\u8bba\u5f53\u524d\u662f\u5426\u91c7\u53d6\u8d2a\u5fc3\u5bf9\u540e\u7eed\u8fc7\u7a0b\u7684\u5f71\u54cd\u3002\n\n\u6211\u7684\u7b56\u7565\u662f\uff1a\n\n**\u9996\u5148\u5c06\u7ebf\u6bb5\u6309\u7167\u5de6\u7aef\u70b9\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5927\u5230\u5c0f\u5730\u9009\u62e9\u53ef\u7528\u7684\u9632\u6652\u971c\u7ed9\u5976\u725b\u4e0a\u971c\u3002\u5c31\u662f\u5c3d\u91cf\u9009\u62e9\u53f3\u8fb9\u7684\u70b9\u3002**\n\n\u90a3\u4e48\u6211\u91c7\u7528\u7684\u662f\u4e00\u4e2aset\u6765\u7ef4\u62a4\u8fd9\u4e2a\u4e8b\u60c5\uff0c\u6bcf\u6b21\u5728set\u4e2d\u67e5\u627e\u6700\u540e\u4e00\u4e2a\u4e0d\u5927\u4e8e\u4ed6\u7684\u6570\uff0c\u603b\u590d\u6742\u5ea6\u8fd8\u662f\u4e25\u683c\u7684O(nlogl)\n\n~~\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u4e0d\u7528Priority_queue\u6211\u53ea\u662f\u60f3\u73a9\u4e00\u4e0b~~\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <set>\nusing namespace std;\nconst int maxn = 2505;\nint c, l, SPF, cover[10000], ans;\npair<int, int> cow[maxn];\nset<int> spf; \nbool cmp(pair<int,int> a, pair<int,int> b){\n\treturn a.first > b.first;\n}\nint main(){\n\tcin >> c >> l;\n\tfor(int i = 1; i <= c; i++)\n\t\tcin >> cow[i].first >> cow[i].second;\n\tsort(cow+1, cow+1+c, cmp);\n\tint temp;\n\tfor(int i = 1; i <= l; i++){\n\t\tcin >> SPF >> temp;\n\t\tspf.insert(SPF);\n\t\tcover[SPF] += temp;\n\t}\n\n\tfor(int i = 1; i <= c; i++){\n\t\tset<int>::iterator p = spf.lower_bound(cow[i].second);\n\t\tif(p == spf.end())\n\t\t\tp--;\n\t\twhile(*p > cow[i].second){\n\t\t\tif(p == spf.begin())\n\t\t\t\tgoto nxt;\n\t\t\tp--;\n\t\t}\n\t\tif(*p < cow[i].first)\n\t\t\tcontinue;\n\t\tans++;\n\t\tcover[*p]--;\n\t\tif(cover[*p] == 0)\n\t\t\tspf.erase(p);\n\t\tnxt : cerr << cow[i].second << \"-\" << *p << endl;\n\t\t\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1548834385,
        "uid": 100514,
        "name": "\u5c0f\u9ed1AWM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u86ee\u7b80\u5355\u7684\n\n~~\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u662f\u84dd\u9898~~\n\n\u5176\u5b9e\u5c31\u662f\u628a\u72d7\u6309\u4e0a\u9650\u6392\u4e00\u4e0b\u5e8f\uff0c\u628a\u9632\u6652\u971c\u6309\u80fd\u4fdd\u6301\u7684\u6700\u5927\u6392\u4e00\u4e0b\u5e8f\n\n\u5982\u679c\u9632\u6652\u971c\u7684\u6700\u5c0f\u4fdd\u6301\u7684\u6e29\u5ea6\u662f\u5c0f\u4e8e\u6700\u5c0f\u72d7\u7684\u4e0a\u9650\u4f46\u5927\u4e8e\u72d7\u7684\u4e0b\u9650\n\n\u90a3\u4e48\u8fd9\u4e2a\u9632\u6652\u971c\u7684\u4e2a\u6570\u51cf\u4e00\uff0c\u518d\u7ee7\u7eed\u5faa\u73af\n\n\u89c1\u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint ma;int mi;int sl;\n}a[2501],b[2501];\ninline bool cmp(const node &x,const node &y)\n{\n\treturn x.ma<y.ma;\n}\ninline bool cmmp(const node &x,const node &y)\n{\n\treturn x.mi<y.mi;\n}\nint main()\n{\n\t//freopen(\"dog.in\",\"r\",stdin);\n\t//freopen(\"dog.out\",\"w\",stdout);\n\tint n,m,ans=0;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i].mi>>a[i].ma;//\u8f93\u5165\n\t}\n\tfor(int i=1;i<=m;i++)\n\t\tcin>>b[i].mi>>b[i].sl;\n\tsort(a+1,a+1+n,cmp);\n\t/*for(int i=1;i<=n;i++)\n\t\tcout<<a[i].ma<<\" \"<<a[i].mi<<endl;*/\n\tsort(b+1,b+1+m,cmmp);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(a[i].mi<=b[j].mi&&a[i].ma>=b[j].mi&&b[j].sl!=0)//\u6761\u4ef6\u5224\u65ad\n\t\t\t{\n\t\t\t\tb[j].sl--;//\u5982\u679c\u53ef\u4ee5\u5c31\u51cf\u4e00\n\t\t\t\tans++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans;\n}\n```",
        "postTime": 1544865656,
        "uid": 93297,
        "name": "yanghe__20050825",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "# \u4f18\u5148\u961f\u5217\u9898\u89e3\n\n\u5f00\u4e00\u4e2a\u201cmins\u8d8a\u5927\u8d8a\u4f18\u5148\u201d\u7684\u4f18\u5148\u961f\u5217\uff0c\u5148\u5c06\u9632\u6652\u971c\u7684\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u8003\u8651\uff1a\n\n1. \u5c06maxs\u5927\u4e8e\u5f53\u524d\u9632\u6652\u971c\u503c\u7684\u725b\u653e\u5165\u4f18\u5148\u961f\u5217\n2. \u5c06mins\u5927\u4e8e\u5f53\u524d\u9632\u6652\u971c\u503c\u7684\u725b\u5f39\u51fa\u961f\u5217\n3. \u73b0\u5728\u4f18\u5148\u961f\u5217\u91cc\u5269\u4e0b\u7684\u725b\u90fd\u53ef\u4ee5\u7528\u8fd9\u4e2a\u9632\u6652\u971c\uff0c\u90a3\u4e48\u6709\u591a\u5c11\u4e2a\u9632\u6652\u971c\u5c31pop\u591a\u5c11\u6b21\uff0c\u5e76ans++\n\n\u5199\u4ee3\u7801\u7684\u65f6\u5019~~\u5199\u7740\u5199\u7740\u5c31~~\u60f3\u5230\u4e00\u4e2a\u6876\u6392\u7684\u601d\u60f3\uff0c\u66ff\u4ee3\u4e86\u5bf9\u9632\u6652\u971c\u7684\u6392\u5e8f\u3002\u53e6\u5916\u4e5f\u53ef\u4ee5\u5148\u5c06\u725b\u6309maxs\u6392\u5e8f\uff0c\u201c\u5c06maxs\u5927\u4e8e\u5f53\u524d\u9632\u6652\u971c\u503c\u7684\u725b\u653e\u5165\u4f18\u5148\u961f\u5217\u201d\u8fd9\u4e00\u6b65\u5c31\u4e0d\u9700\u8981\u679a\u4e3e\u4e86\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u725b\u90fd\u4f1a\u5165\u961f\u3001\u51fa\u961f\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08L+NlogN\uff09\n\ncode\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <cmath>\n#include <cstring>\nusing namespace std;\n\nconst int N=2505,L=2505;\nconst int INF=0x3f3f3f3f;\n\nstruct node{\n\tint mx,mn;\n\tfriend bool operator < (node a,node b){\n\t\treturn a.mn<b.mn;//\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0cmn\u5927\u7684\u4f18\u5148\u7ea7\u5927\n\t}\n};\n\nint n,m,ans=0,maxl=0,minr=INF;\nint res[L];\nnode a[N];\npriority_queue<node> q;\n\nvoid rd(int &x){\n    x=0;\n    char c=getchar();\n    while (c<'0'||c>'9') c=getchar();\n    while (c>='0'&&c<='9'){\n        x=x*10+c-'0';\n        c=getchar(); \n    } \n} \n\nvoid print(int x){\n    if (x>9) print(x/10);\n    putchar(x%10+'0');\n}\n\nbool cmp(node x,node y){\n\treturn x.mx>y.mx;\n}\n\nint main(){\n\trd(n),rd(m);\n\tmemset(res,0,sizeof(res));//\u6876\u6392\u601d\u60f3\uff0c\u987a\u4fbf\u8fd8\u80fd\u8bb0\u5f55\u4e2a\u6570\n\tfor (int i=1;i<=n;i++){\n\t\trd(a[i].mn),rd(a[i].mx);\n\t\tmaxl=max(a[i].mx,maxl);\n\t\tminr=min(a[i].mn,minr);\n\t}\n\tfor (int i=1;i<=m;i++){\n\t\tint cd,z;\n\t\trd(cd),rd(z);\n\t\tres[cd]+=z;\n\t}\n\tsort(a+1,a+1+n,cmp);\n\tint p=1;\n\tfor (int i=maxl;i>=minr;i--){\n\t\twhile (a[p].mx==i){\n\t\t\tq.push(a[p]);//\u5c06maxs\u5927\u4e8e\u5f53\u524d\u9632\u6652\u971c\u503c\u7684\u725b\u653e\u5165\u4f18\u5148\u961f\u5217\n\t\t\tp++;\n\t\t}\n\t\twhile (!q.empty()&&q.top().mn>i) q.pop();//\u5c06mins\u5927\u4e8e\u5f53\u524d\u9632\u6652\u971c\u503c\u7684\u725b\u5f39\u51fa\u961f\u5217\n\t\twhile (res[i]&&!q.empty()){\n\t\t\tans++;\n\t\t\tq.pop();\n\t\t\tres[i]--;//\u7528\u9632\u6652\u971c\n\t\t}\n\t}\n\tprint(ans);\n\treturn 0;\n}\n```",
        "postTime": 1540557022,
        "uid": 71826,
        "name": "maike8shi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    },
    {
        "content": "```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint ans,spfn,ssln;\nstruct sssl{int num,spf;}ssl[2510];struct sspf{int min,max;}spf[2510];\nbool cmp(sssl a,sssl b){return a.spf>b.spf;}bool cmp1(sspf a,sspf b){return a.min>b.min;}\nint main(){\n\tscanf(\"%d%d\",&spfn,&ssln);\n\tfor(int i=1;i<=spfn;i++)scanf(\"%d%d\",&spf[i].min,&spf[i].max);\n\tfor(int i=1;i<=ssln;i++)scanf(\"%d%d\",&ssl[i].spf,&ssl[i].num);\n\tsort(ssl+1,ssl+1+ssln,cmp);/*\u5f88\u660e\u663e\uff0c\u6570\u503c\u8d8a\u5927\u7684\u9632\u6652\u971c\u8d8a\u4e0d\u5bb9\u6613\u88ab\u4f7f\u7528*/ \n\tsort(spf+1,spf+1+spfn,cmp1);/*\u4e3b\u8981\u5f71\u54cd\u5976\u725b\u80fd\u5426\u6d82\u62b9\u7684\u56e0\u7d20\u5728\u4e8e\u5176MIN*/\n\tfor(int i=1;i<=ssln;i++){//\u6bcf\u74f6\u9632\u6652\u971c\n\t\tfor(int k=1;k<=ssl[i].num;k++){//\u74f6\u5b50\u6570\u91cf \n\t\t\tfor(int j=1;j<=spfn;j++){//\u6bcf\u5934\u5976\u725b \n\t\t\t\tif(ssl[i].spf<=spf[j].max&&ssl[i].spf>=spf[j].min){//\u5982\u679c\u7b26\u5408\u6761\u4ef6 \n\t\t\t\t\tans++/*\u5976\u725b\u6570\u91cf\u52a0\u4e00*/,ssl[i].num--/*\u74f6\u5b50\u6570\u51cf\u4e00*/;\n\t\t\t\t\tspf[j].max=2147483647,spf[j].min=2147483647;/*\u8d4b\u503c\u4e3a\u4e00\u4e2a\u6781\u5927\u503c\uff0c\u8868\u793a\u5976\u725b\u5df2\u7ecf\u6d82\u8fc7*/\n\t\t\t\t}\n\t\t\t\tif(ssl[i].num==0)break;/*\u663e\u7136\u7684\u526a\u679d\uff0c\u5982\u679c\u9632\u6652\u971c\u6570\u76ee\u4e3a\u96f6\uff0c\u7ed3\u675f\u672c\u6b21\u5faa\u73af*/\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1536070646,
        "uid": 59831,
        "name": "\u82cf\u666f\u66e6",
        "ccfLevel": 0,
        "title": "P2887 [USACO07NOV]\u9632\u6652\u971cSunscreen"
    },
    {
        "content": "## First \u4f60\u9700\u8981\u77e5\u9053\u8fd9\u9053\u9898\u8981\u4f60\u5e72\u5565\n\u5148\u8bfb\u9898\uff0c\u9898\u76ee\u5fae\u5fae\u6709\u4e00\u70b9\u957f\uff0c\u6211\u7684\u5fc3\u4e2d\u5145\u6ee1\u4e86\u614c\u5f20\uff0c\u96be\u9053\u8fd9\u9053\u9898\u4e5f\u4e0d\u80fd\u7559\u4e0b\u6211\u7684\u8ff9\u8c61\uff0c\u8fd9\u771f\u8ba9\u4eba\u611f\u5230\u60b2\u51c9\u3002\u4f46\u5176\u5b9e\u8fd9\u4e2a\u9898\u9762\u7b80\u5316\u4e0b\u6765\u662f\u8fd9\u6837\u7684\uff1a\n\n\u00b7\u8fd9\u91cc\u6709C\u4e2a\u70b9\u3002\uff08\u9632\u6652\u971c\uff09\n\n\u00b7\u8fd9\u91cc\u6709L\u6761\u7ebf\u6bb5\uff0c\u5de6\u7aef\u70b9\u4e3aLeft\uff0c\u53f3\u7aef\u70b9\u4e3aRight\u3002\uff08\u5976\u725b\uff09\n\n\u00b7\u628a\u70b9\u653e\u8fdb\u7ebf\u6bb5\u4e2d\uff0c\u95ee\u53ef\u4ee5\u653e\u51e0\u4e2a\u3002\n\n**\u601d\u8def\u987f\u65f6\u6e05\u6670\u4e86\u8d77\u6765\u3002**\n## Second \u601d\u8def\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5c06\u70b9\u7531\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7ebf\u6bb5\u4ee5\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\u7531\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6700\u540e\u626b\u4e00\u6b21\u5373\u53ef\u3002\n\n**\u4f60\u5df2\u7ecf\u662f\u4e00\u9053\u6c34\u9898\u4e86**\n\n# \u80fd\u8ba9xxsAC\u6b64\u9898\u7684\u4e1c\u897f\n```cpp\n#include<stdio.h>\n#include<bits/stdc++.h>\nusing namespace std;\nint C,L,ans;\nstruct cow\n{\n\tint mins,maxs;\n\tbool mark;\n};\ncow cows[2505];\nstruct fss//\u9632\u6652\u971c\uff0c\u539f\u8c05\u849f\u84bb\u5fd8\u4e86\u9632\u6652\u971c\u7684\u5355\u8bcd\u3002\n{\n\tint SPF,cover;\n};\nfss fssm[2505];//\u9632\u6652\u971c\u4eec \nbool cmpc(cow a,cow b)\n{\n\treturn a.maxs<b.maxs;//\n}\nbool cmpf(fss a,fss b)\n{\n\treturn a.SPF<b.SPF;\n}\nint main()\n{\n\tscanf(\"%d %d\",&C,&L);\n\tfor(int i=1;i<=C;i++)scanf(\"%d %d\",&cows[i].mins,&cows[i].maxs);\n\tsort(cows+1,cows+1+C,cmpc);\u53f3\u7aef\u70b9\u7531\u5c0f\u5230\u5927\u6392\u5e8f\n\tfor(int i=1;i<=L;i++)scanf(\"%d %d\",&fssm[i].SPF,&fssm[i].cover);\n\tsort(fssm+1,fssm+1+L,cmpf);\u70b9\u7531\u5c0f\u5230\u5927\u6392\u5e8f\n\tfor(int i=1;i<=C;i++)\n\t\tfor(int j=1;j<=L;j++)\n\t\t{\n\t\t\tif(fssm[j].SPF>=cows[i].mins&&fssm[j].SPF<=cows[i].maxs&&fssm[j].cover>0)//\u5982\u679c\u7b2ci\u4e2a\u70b9\u80fd\u653e\u5230\u7b2cj\u6761\u7ebf\u6bb5\u4e2d\u3002\n\t\t\t{\n\t\t\t\tfssm[j].cover--;\n\t\t\t\tans++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1600698270,
        "uid": 313249,
        "name": "Energy_Making",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]Sunscreen G\u3011"
    },
    {
        "content": "# **\u9996\u5148\u5462\u8fd9\u9053\u9898is a very easy \u7684\u8d2a\u5fc3 and \u6392\u5e8f problem.**\n## ~~\u7136\u800c\u6709\u8d85\u7ea7\u591a\u7684\u5751~~\n1. \u7ec6\u8bfb\u9898\u76ee\u53ef\u4ee5\u53d1\u73b0\uff0c\u201c\u800c\u521a\u5f00\u59cb\u7684\u9633\u5149\u7684\u5f3a\u5ea6\u975e\u5e38\u5927\uff0c\u5976\u725b\u90fd\u627f\u53d7\u4e0d\u4f4f\uff0c\u7136\u540e\u5976\u725b\u5c31\u5f97\u6d82\u62b9\u9632\u6652\u971c\uff0c\u9632\u6652\u971c\u7684\u4f5c\u7528\u662f\u8ba9\u9633\u5149\u7167\u5728\u8eab\u4e0a\u7684\u9633\u5149\u5f3a\u5ea6\u56fa\u5b9a\u4e3a\u67d0\u4e2a\u503c\u3002\u201d\u8fd9\u53e5\u8bdd\u548c\u201c\u7ed9\u51fa\u4e86L\u79cd\u9632\u6652\u971c\u3002\u6bcf\u79cd\u7684\u6570\u91cf\u548c\u56fa\u5b9a\u7684\u9633\u5149\u5f3a\u5ea6\u4e5f\u7ed9\u51fa\u6765\u4e86\u201d \u4eff\u4f5b\u662f\u5728\u544a\u8bc9\u4f60\uff1a\u201c\u4ed6\u544a\u8bc9\u4e86\u4f60\u90a3\u4e2a\u592a\u9633\u7684\u521d\u59cb\u5f3a\u5ea6\u201d\u3002\u7136\u800c\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\uff01\uff01\u4f60**\u7ed9\u6211\u597d\u597d\u770b\u770b\u6570\u636e\u53bb\uff01\uff01\uff0c\u4f60\u89c9\u5f97\u8c01\u4f1a\u662f\u592a\u9633\u7684\u5f3a\u5ea6\u5462\uff1f\uff1f\u55ef\uff1f\uff1f\u5176\u5b9e\u6ca1\u6709\u592a\u9633\u7684\u5f3a\u5ea6\n2. \u4f60\u770b\u770b\u8fd9\u53e5\u8bdd\u201c\u800c\u521a\u5f00\u59cb\u7684\u9633\u5149\u7684\u5f3a\u5ea6\u975e\u5e38\u5927\uff0c\u5976\u725b\u90fd\u627f\u53d7\u4e0d\u4f4f\uff0c\u7136\u540e\u5976\u725b\u5c31\u5f97\u6d82\u62b9\u9632\u6652\u971c\uff0c\u9632\u6652\u971c\u7684\u4f5c\u7528\u662f\u8ba9\u9633\u5149\u7167\u5728\u8eab\u4e0a\u7684\u9633\u5149\u5f3a\u5ea6\u56fa\u5b9a\u4e3a\u67d0\u4e2a\u503c\u3002\u201d\uff01\uff01\u4ed6\u96be\u9053\u4e0d\u662f\u5728\u544a\u8bc9\u4f60\u8bf4\uff1a\u201c\u6bcf\u4e2a**\u5976\u725b\u90fd\u8981\u6d82\u90a3\u8be5\u6b7b\u7684\u9632\u6652\u971c\u5417\uff1f\uff1f\u201d\u55ef\uff1f\uff1f\u786e\u5b9a\u6709\u597d\u597d\u8bfb\u9898\u5417\uff1f\uff1f\n3. \u8fd8\u6709\u8fd9\u53e5\uff1a\u201c\u6bcf\u79cd\u7684\u6570\u91cf\u548c\u56fa\u5b9a\u7684\u9633\u5149\u5f3a\u5ea6\u4e5f\u7ed9\u51fa\u6765\u4e86\u3002\u201d\u96be\u9053\u4e0d\u662f\u8bf4\u4ed6\u7a77\uff0c\u9632\u6652\u971c\u6570\u91cf\u6709\u9650\u5417\uff1f\uff1f\n4. \u518d\u770b\u770b\u8fd9\u4e2a\uff1a\u201c\u6bcf\u4e2a\u5976\u725b\u53ea\u80fd\u62b9\u4e00\u74f6\u9632\u6652\u971c\uff0c\u6700\u540e\u95ee\u80fd\u591f\u4eab\u53d7\u6652\u592a\u9633\u7684\u5976\u725b\u6709\u51e0\u4e2a\u3002\u201d\uff0c\u4f60\u8fd8\u80fd\u6d82\u5f88\u591a\u74f6\u5417\uff1f\uff1f\n5. \u8fd8\u6709\u4e00\u4e2a\u9690\u85cf\u7684\u6761\u4ef6\uff0c\u4ed6\u6d82\u4e86\u9632\u6652\u971c\u4e4b\u540e\uff0c\u4ed6\u7684\u6700\u5c0f\u503c\u52a0\u4e86\uff0c\u4ed6\u7684\u6700\u5927\u503c\u4e0d\u52a0\u5417\uff1f\uff1f\u4f60\u8fd8\u53ef\u4ee5\u53cd\u5411\u9632\u6652\u554a\uff1f\uff1f\n### ~~\u6240\u4ee5\u6b64\u9898\u5751\u5de8\u591a\uff0c\u5e76\u4e0d\u597d\u505a~~\n#### \u597d\u4e86\uff0c\u5f53\u4f60\u6210\u529f\u5728\u672c\u5e05\uff08\u667a\uff09\u903c\uff08\u969c\uff09\u7684\u5e26\u9886\u4e0b\u907f\u5f00\u4e86\u6240\u6709\u7684\u5751\u4e4b\u540e\uff0c\u5c31\u8be5\u5f00\u59cb\u6109\u5feb\u7684\u5199\u4ee3\u7801\u4e86\u5427\uff1f\uff1f\n\u770b\u89c1\u8fd9\u4e2a\u6700\u503c\u95ee\u9898\u5c31\u60f3\u7740\u8d2a\u5fc3\u5427\uff0c\u6240\u4ee5\u5f00\u7ed3\u6784\u4f53\u54af\uff01\uff01O(\u2229_\u2229)O~~\n\n\u4e0a\u83dc\uff01\uff01\n\u4e0a\u4ee3\u7801\uff01\uff01\n```c++\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nstruct cow\n{\n    ll minSPF,maxSPF;\n}a[2505];\nstruct sunscreen\n{\n    ll SPF,num;\n}b[2505];\nll l,c,ls[2505],ans;\nbool cmpa(cow x, cow y)\n{\n    if(x.maxSPF == y.maxSPF)\n        return x.minSPF < y.minSPF;\n    return x.maxSPF < y.maxSPF;\n}\nbool cmpb(sunscreen x, sunscreen y)\n{\n    return x.SPF < y.SPF;\n}\nint main()\n{\n    scanf(\"%lld %lld\", &c, &l);\n    for (ll i=1 ; i<=c ; i++)\n    {\n        scanf(\"%lld %lld\", &a[i].minSPF, &a[i].maxSPF);\n    }\n    for (ll i=1 ; i<=l ; i++)\n    {\n        scanf(\"%lld %lld\", &b[i].SPF, &b[i].num);\n    }\n    sort(a+1 , a+c+1 , cmpa);\n    sort(b+1 , b+l+1 , cmpb);\n    for(ll i=1 ; i<=c ; i++)\n    {\n        for(int j=1 ; j<=l ; j++)\n        {\n            if(b[j].SPF <= a[i].maxSPF && b[j].SPF >= a[i].minSPF && b[j].num > 0)\n            {\n                b[j].num --;\n                ans ++;\n                break;\n            }\n        }\n    }\n    printf(\"%lld\", ans);\n}\n```",
        "postTime": 1560752587,
        "uid": 158935,
        "name": "chest_dick",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2887 \u3010[USACO07NOV]\u9632\u6652\u971cSunscreen\u3011"
    }
]