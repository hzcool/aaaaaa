[
    {
        "content": "\u6211\u5f00\u59cb\u505a\u7684\u65f6\u5019\u8fd8\u662f\u84dd\u724c\uff0c \u505a\u4e00\u534a\u5c31\u53d8\u7d2b\u4e86\uff1f\u7384\u5b66~\n\n[\u6233\u8fd9\u91cc](https://www.cnblogs.com/zZh-Brim/p/9069469.html)\u98df\u7528\u6548\u679c\u66f4\u4f73\uff1b\n\n\u6b22\u8fce\u4e92\u5173\uff1b\n\n\n\u9898\u610f\uff1a\n\u7ed9\u4f60\u4e00\u4e9b\u70b9\uff0c \u4ed6\u4eec\u4e0e\u8282\u70b91\u7684\u6700\u77ed\u8def\u7684\u6700\u540e\u4e00\u6761\u8fb9\u4e0d\u53ef\u8d70\uff0c \u6c42\u6bcf\u4e00\u4e2a\u70b9\u52301\u7684\u6700\u77ed\u8ddd\u79bb\uff1b\n\n\u8fd9\u9053\u9898\u5f88\u6298\u78e8\u4eba...\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u4e00\u9897\u6700\u77ed\u8def\u5f84\u6811\uff08\u5c31\u662f1\u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u8def\u8fc7\u7684\u8fb9\u6784\u6210\u7684\u96c6\u5408\uff09\uff1b\n\n\u7136\u540e\u6211\u4eec\u8981\u627e\u4e00\u4e2a\u70b9\u5bf9(x, y),\u4e14xy\u4e4b\u95f4\u6709\u8fb9\uff0cxy\u4e0d\u5728\u6700\u77ed\u8def\u5f84\u6811\u4e0a,y\u5728\u8282\u70b9i\u7684\u5b50\u6811\u91cc,x\u4e0d\u5728\u8282\u70b9i\u7684\u5b50\u6811\u91cc\uff1b\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u8981\u627e\u7684\u8282\u70b9i\u7684\"\u975e\u6700\u77ed\u8def\u5f84\"\uff0c\u5c31\u662fdis(x) + dis(y) - dis(i) + w(x, y)\uff1b\n\u5176\u4e2d\uff0c dis\u4ee3\u8868\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c w(x, y)\u4ee3\u8868x \u5230 y \u7684\u8def\u5f84\u957f\u5ea6\uff1b\n\n\u6211\u4eec\u53d1\u73b0 : dis(i) \u662f\u786e\u5b9a\u7684, \u6240\u4ee5\u6211\u4eec\u8981\u6700\u5c0f\u5316dis(x\uff09 + dis(y) + w(x, y);\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u5de6\u504f\u6811\u7ef4\u62a4\uff08\u624d\u4e0d\u4f1a\u5199\uff09 \u60f3\u5b66\u6233\u8fd9\u91cc\n\n\u6211\u76f4\u63a5\u6392\u5e8f\uff1b\n\n\u9009\u51fa\u4e0d\u5728\u6700\u77ed\u8def\u5f84\u6811\u4e0a\u7684\u8fb9\uff0c \u6309dis(x\uff09 + dis(y) + w(x, y)\u6700\u5c0fsort\u4e00\u904d\uff1b\n\n\u7136\u540e\u66f4\u65b0\u7b54\u6848\uff1b\n\n\u6211\u4eec\u63a5\u7740\u60f3 : \u4e00\u4e2a\u70b9\u5982\u679c\u5df2\u7ecf\u88ab\u66f4\u65b0\uff0c \u90a3\u4e48\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c \u4e3a\u4ec0\u4e48\uff0c \u56e0\u4e3a\u4ed6\u7684dis\u503c\u786e\u5b9a\uff0c \u800c\u6211\u4eec\u5df2\u7ecf\u5bf9\u4ee5\u4e0a\u90a3\u4e00\u5768\u5f0f\u5b50\u7684\u503c\u6309\u7531\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6240\u4ee5\u6211\u4eec\u7b2c\u4e00\u6b21\u66f4\u65b0\u4e00\u5b9a\u662f\u4ed6\u7684\u6700\u4f18\u503c\uff1b\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c \u786e\u4fdd\u4ed6\u4eec\u53ea\u88ab\u66f4\u65b0\u4e00\u6b21\uff1b\n\n\u90a3\u4e48\u6211\u4eec\u518d\u60f3 \uff1a \u4e00\u4e2a\u70b9\u5bf9(x, y)\uff0c\u80fd\u66f4\u65b0\u90a3\u4e9b\u70b9\u7684ans\u5462? \n\n\u80fd\u66f4\u65b0\u5230x -> LCA(x, y) \u548c y -> LCA(x, Y) \u7684\u6240\u6709\u70b9\uff1b\n\u4e3a\u4ec0\u4e48\uff1f \n\n\u56e0\u4e3a \u8fb9 x-y \u4e00\u5b9a\u4e0d\u662f\u70b9i\u7684\u7236\u4eb2\u8fb9 (\u9898\u9762\u8bf4\u4e86)\uff0c \u5982\u679c\u6211\u4eec\u66f4\u65b0\u5230LCA(x, y) \u90a3\u4e48x, y\u5c31\u5728\u540c\u4e00\u4e2a\u5b50\u6811\u91cc\u4e86\uff1b\n\n\u800c\u6211\u4eec\u80fd\u66f4\u65b0i\u7684\u524d\u63d0\u662fx, y\u4e0d\u5728\u540c\u4e00\u5b50\u6811\u91cc\uff1b\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u50cf\u8df3LCA\u4e00\u6837\u4e00\u76f4\u5f80\u4e0a\u8df3\uff0c \u4e00\u8def\u66f4\u65b0\u7b54\u6848\uff0c \u7136\u540e\u4fee\u6539\u5e76\u67e5\u96c6\uff0c \u76f4\u5230\u8c03\u5230LCA;\n\n\u5e94\u8be5\u6bd4\u8f83\u597d\u61c2\uff1b\n\n\u4ee3\u7801\u5949\u4e0a\uff1a\n\n```cpp\n//By zZhBr\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int N = 100010;\nconst int M = 400010;\n\ninline int read()\n{\n    int res = 0;\n    bool flag = 0;\n    char c = getchar();\n    while (c < '0' or c > '9')\n    {\n        if (c == '-') flag = 1;\n        c = getchar();\n    }\n    while (c >= '0' and c <= '9')\n    {\n        res = res * 10 + c - '0';\n        c = getchar();\n    }\n    return flag ? -res : res;\n}\n\n\nint n, m;\nint A[M], B[M], C[M];\nint what[M];//\u7b2c\u51e0\u6761\u8fb9\u5c5e\u4e8e\u7684\u7f16\u53f7 what[i] = what[i^1];\nint is[M]; //\u8bb0\u5f55\u6700\u77ed\u8def\u5f84\u4e2d\u7b2ci\u4e2a\u70b9\u7684\u5165\u8fb9 \nbool itis[M];//\u8bb0\u5f55\u662f\u5426\u662f\u6700\u77ed\u8def\u5f84\u6811\u7684\u6811\u8fb9 \nint fafa[N];//\u8bb0\u5f55\u5728\u6700\u77ed\u8def\u5f84\u6811\u4e2d\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\nint fa[N];//\u5e76\u67e5\u96c6\nint ans[N];//\u8bb0\u5f55\u7b54\u6848 \n\ninline int Find(int x) \n{\n    return x == fa[x] ? x : fa[x] = Find(fa[x]);\n}\n\nstruct edge\n{\n    int nxt;\n    int to;\n    int val;\n}ed[M];\n\nint head[N], cnt;\n\ninline void add(int x, int y, int z, int gg)\n{\n    cnt++;\n    ed[cnt].nxt = head[x];\n    ed[cnt].to = y;\n    ed[cnt].val = z;\n    head[x] = cnt;\n    what[cnt] = gg;\n}\n\ninline void add(int x, int y)\n{\n    cnt++;\n    ed[cnt].nxt = head[x];\n    ed[cnt].to = y;\n    head[x] = cnt;\n}\n\nstruct date\n{\n    int x;\n    int y;\n    int w;\n//    date(){}\n//    date(int xx, int yy, int ww){x = xx, y = yy, w = ww;}\n}cf[M];\n\nbool cmp(date a, date b)\n{\n    return a.w < b.w;\n}\n\nvoid dfs(int x) //\u7b80\u964b\u7684\u5bfb\u627e\u7236\u4eb2\u7684\u51fd\u6570 \n{\n    for (register int i = head[x] ;i ; i = ed[i].nxt)\n    {\n        int to = ed[i].to;\n        if (to == fafa[x]) continue;\n        fafa[to] = x;\n        dfs(to);\n    }\n}\n\n/*.............................Dijkstra...................................*/\nstruct dij{int x, w;};\n\nbool operator <(const dij &a,const dij &b)\n{\n    return a.w > b.w;\n}\n\nint dis[N];\nbool vis[N];\n\ninline void Dijkstra(int haha)\n{\n    memset(dis, 0x3f, sizeof dis);\n    \n    priority_queue < dij > q;\n    \n    dis[haha] = 0;\n    q.push((dij){haha, 0});\n    \n    while (!q.empty())\n    {\n        dij t = q.top(); q.pop();\n        int x = t.x;\n        if (vis[x]) continue;\n        vis[x] = 1;\n        for (register int i = head[x] ; i ; i = ed[i].nxt)\n        {\n            int to = ed[i].to;\n            if (!vis[to] and dis[to] > dis[x] + ed[i].val) //!\n            {\n                is[to] = what[i];\n                dis[to] = dis[x] + ed[i].val;\n                q.push((dij){to, dis[to]});\n            }\n        }\n    }\n}\n/*.................................End..............................................*/\n\n\nint main()\n{    \n    n = read(), m = read();\n    \n    for (register int i = 1 ; i <= m ; i ++)\n    {\n        A[i] = read(), B[i] = read(), C[i] = read();\n        add(A[i], B[i], C[i], i);\n        add(B[i], A[i], C[i], i);\n    }\n    \n    Dijkstra(1);\n    \n    \n    cnt = 0;\n    memset(head, 0, sizeof head);\n    \n//    for (int i=2;i<=n;i++)cout<<is[i]<<endl;\n    \n    for (register int i = 2 ; i <= n ; i ++)\n    {\n        int x = is[i];\n        add(A[x], B[x]);\n        add(B[x], A[x]);\n        itis[x] = 1;\n    }\n    \n    dfs(1);\n    \n    int num = 0;\n    for (register int i = 1 ; i <= m ; i ++) //\u8be5\u641e\u975e\u6811\u8fb9\u4e86 \n    {\n        if (itis[i]) continue;\n    //    printf(\"%d\\n\", i);\n        cf[++num] = (date) {A[i], B[i], dis[A[i]] + dis[B[i]] + C[i]};\n    }\n    \n    sort (cf + 1, cf + 1 + num, cmp);\n    \n    for (register int i = 1 ; i <= n ; i ++) fa[i] = i, ans[i] = -1;\n    \n    for (register int i = 1 ; i <= num ; i ++)\n    {\n        int x = cf[i].x, y = cf[i].y;\n        x = Find(x), y = Find(y);\n        \n        //printf(\"x = %d, y = %d\\n\", x, y);\n        while (x != y)\n        {\n            if (dis[x] < dis[y]) swap(x, y);\n            ans[x] = cf[i].w - dis[x];\n            fa[x] = fafa[x];\n            x = Find(x);\n        }\n        \n    }\n    \n    for (register int i = 2 ; i <= n ; i ++)\n    {\n        printf(\"%d\\n\", ans[i]);\n    }\n    return 0;\n    \n}\n\nzZhBr\n```",
        "postTime": 1526982174,
        "uid": 56756,
        "name": "BriMon",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2934 \u3010[USACO09JAN]\u5b89\u5168\u51fa\u884cSafe Travel\u3011"
    },
    {
        "content": "\uff08\u8bdd\u8bf4\u505a\u8fd9\u9053\u9898\u65f6\u6211\u8fd8\u60f3\u4e86\u60f3\u9898\u76ee\u8981\u6c42\u6c42\u7684\u4e1c\u897f\u662f\u4e0d\u662f\u5c31\u662f\u6b21\u77ed\u8def...\u6700\u540e\u5f53\u7136\u5047\u4e86\uff09\n\n## \u89e3\u6790\n\n\uff08\u6587\u4e2d\u7684\u8bb0\u53f7\u6bd4\u8f83\u591a\uff0c\u800c\u4e14\u4e3a\u4e86\u65b9\u4fbf\u4e00\u4e9b\u7b26\u53f7\u6211\u53ea\u5728**\u7b2c\u4e00\u6b21\u51fa\u73b0**\u65f6\u8fdb\u884c\u89e3\u91ca...\u8fd8\u8bf7\u89c1\u8c05qaq\uff09\n\n\u6211\u4eec\u5148\u601d\u8003\u5220\u53bb\u9898\u76ee\u6240\u8ff0\u7684\u4e00\u6761\u8fb9\uff08\u5230\u67d0\u70b9\u6700\u77ed\u8def\u5f84\u7684\u6700\u540e\u4e00\u6761\u8fb9\uff09\u540e\u65b0\u56fe\u7684\u6700\u77ed\u8def\u751f\u6210\u6811 $T'$ \u8f83\u539f\u6765\u7684\u6700\u77ed\u8def\u751f\u6210\u6811 $T$ \u7684\u53d8\u5316\n\n\u8bb0 $\\delta(u, v)$ \u8868\u793a $u$ \u5230 $v$ \u7684\u6700\u77ed\u8def\u3002\u5982\u679c\u4e0d\u8003\u8651\u5220\u53bb\u7684\u8fb9\u6765\u6e90\u4e8e\u54ea\u6761\u6700\u77ed\u8def\uff0c\u8be5\u64cd\u4f5c\u5c31\u76f8\u5f53\u4e8e\u5728 $T$ \u4e0a\u5220\u9664\u4e00\u6761\u6811\u8fb9\n\n\u663e\u7136\u8fd9\u4f1a\u8ba9\u6811 $T$ \u5206\u4e3a\u4e24\u4e2a\u8fde\u901a\u5757\u3002\u8bbe\u5220\u9664\u7684\u8fb9 $(u, v)$\uff0c\u6211\u4eec\u4ee4 $v$ \u6240\u5728\u7684\u8fde\u901a\u5757\u4e0d\u542b\u6e90\u70b9 $s$\n\n\u8fd9\u91cc\u5148\u8bbe\u60f3\u4e00\u79cd\u8f83\u7b80\u5355\u7684\u60c5\u51b5\uff0c$v$ \u6240\u5728\u8fde\u901a\u5757\u53ea\u6709\u4e00\u4e2a\u7ed3\u70b9\uff1a\n\n![eazy](https://cdn.luogu.com.cn/upload/image_hosting/l2scrt7e.png)\n\n\u663e\u7136\u65b0\u7684\u751f\u6210\u6811 $T'$ \u5c31\u662f\u7531 $T$ \u6ca1\u6709\u5220\u9664\u7684\u8fb9\u52a0\u4e0a\u4e00\u6761\u539f\u56fe\u7684\u8fb9\uff08\u975e\u6811\u8fb9\uff09\u7ec4\u6210\u7684\uff0c\u4e14\u8fd9\u6761\u975e\u6811\u8fb9\u5c06\u5220\u9664\u8fb9\u540e $T$ \u5206\u4e3a\u7684\u4e24\u4e2a\u8fde\u901a\u5757\u8fde\u901a\u4e86\n\n\u90a3\u4e48\u5982\u679c $v$ \u6240\u5728\u8fde\u901a\u5757\u7684\u7ed3\u70b9\u6570\u91cf\u4e0d\u6b62\u4e00\u4e2a\u5462\uff1f\n\n![hard](https://cdn.luogu.com.cn/upload/image_hosting/s78kop26.png)\n\n\u53ef\u80fd\u4f60\u4f1a\u76f4\u89c9\u5730\u8ba4\u4e3a $T'$ \u53ea\u4f1a\u5728\u8fd9\u4e24\u4e2a\u8fde\u901a\u5757\u95f4\u6dfb\u52a0\u4e00\u6761\u8fb9\uff0c\u4f46\u601d\u8003\u8fd9\u6837\u7684\u6837\u4f8b\uff1a\n\n![one](https://cdn.luogu.com.cn/upload/image_hosting/m8u40abn.png)\n\n\u4ee5\u53ca $v$ \u6240\u5728\u7684\u5b50\u6811\u4e5f\u53ef\u80fd\u4f1a\u91cd\u6784\uff1a\n\n![rebuild](https://cdn.luogu.com.cn/upload/image_hosting/mf1w2b54.png)\n\n&nbsp;\n\n\u8fd9\u770b\u8d77\u6765\u8ba9\u95ee\u9898\u53d8\u5f97\u590d\u6742\u4e86\u8d77\u6765\n\n\u4f46\u6211\u4eec\u5176\u5b9e\u5e76\u4e0d\u5173\u5fc3 $T'$ \u7684\u5177\u4f53\u5f62\u6001\uff1b\u6211\u4eec\u5b9e\u9645\u4e0a\u53ea\u60f3\u6c42\u51fa $T'$ \u4e0a\u7684 $\\delta(s, v)$\n\n\u601d\u8003\u6700\u77ed\u8def\u7684**\u6700\u4f18\u5b50\u7ed3\u6784**\u6027\u8d28\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u6709\u8fd9\u6837\u4e00\u4e2a\u7ed3\u8bba\uff1a\n\n> $\\text{Lemma 1.}$ \u6700\u77ed\u8def\u751f\u6210\u6811\u4e0a\uff0c\u82e5\u5bf9\u4e8e\u70b9 $x, y$\uff0c\u6709 $\\text{lca}(x, y)=x$ \u6216 $y$\uff0c\u5219\u6811\u4e0a\u7684\u8def\u5f84 $p(x, y)=\\delta(x, y)$\n\n\u63a5\u7740\u6211\u4eec\u53c8\u53d1\u73b0\uff0c\u867d\u7136\u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u4e24\u4e2a\u8fde\u901a\u5757\u4e4b\u95f4\u4f1a\u591a\u52a0\u4e0a\u591a\u5c11\u8fb9\uff0c\u4f46\u5b83\u4eec\u4e4b\u95f4\u81f3\u5c11\u4f1a\u52a0\u4e0a\u4e00\u6761\u8fb9\uff0c\u5426\u5219 $T'$ \u5c06\u4f1a\u4e0d\u8fde\u901a\n\n\u518d\u8054\u7cfb $\\text{Lemma 1}$\uff0c\u53ef\u4ee5\u53d1\u73b0\u5728\u65b0\u6811 $T'$ \u4e0a\uff0c$\\delta(s, v)$ \u4e00\u5b9a\u662f\u7531\u539f\u6811 $T$ \u4e0a\u7684\u8def\u5f84 $p(s, x), p(y, v)$\uff0c\u52a0\u4e0a\u4e00\u6761\u8fb9 $(x, y)$ \u7ec4\u6210\u7684\uff08\u6ce8\u610f\u8fd9\u4e24\u4e2a\u8def\u5f84\u53ef\u80fd\u6ca1\u6709\u8fb9\uff09\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e\u7ed3\u70b9\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u679a\u4e3e\u6240\u6709\u975e\u6811\u8fb9\uff0c\u5e76\u5728\u6240\u6709\u53ef\u80fd\u7684\u7b54\u6848\u4e2d\u53d6\u4e2a $\\text{min}$\n\n**\u5177\u4f53\u6765\u8bf4**\uff0c\u4e00\u6761\u975e\u6811\u8fb9 $(x, y)$ \u8fde\u63a5\u4e86\u4e24\u4e2a\u8fde\u901a\u5757\uff08\u53ef\u4ee5\u5224\u65ad $x, y$ \u662f\u5426\u4e00\u4e2a\u5728\u70b9 $v$ \u7684\u5b50\u6811\u4e2d\uff0c\u53e6\u4e00\u4e2a\u4e0d\u5728\uff0c\u53ef\u7528\u500d\u589e\u67e5\u627e\u7236\u4eb2\u5b9e\u73b0\uff09\uff0c\u5176\u5bf9\u7ed3\u70b9 $v$ \u7684\u8d21\u732e\u5c31\u662f $|p(s, x)|+|(x, y)|+|p(y, v)|$\uff0c\u5176\u4e2d $p(.)$ \u6307\u539f\u56fe\u6700\u77ed\u8def\u751f\u6210\u6811\u7684\u8def\u5f84\uff0c$|.|$ \u6307\u67d0\u6761\u8def\u5f84\u7684\u6743\u91cd\uff08\u8fb9\u6743\u548c\uff09\n\n&nbsp;\n\n\u4f46\u8fd9\u6837\u590d\u6742\u5ea6\u7edd\u5bf9\u4f1a\u7206\u6389\u7684\n\n\u6211\u4eec\u8003\u8651**\u5148**\u679a\u4e3e\u975e\u6811\u8fb9\u3002\u8bbe\u8fd9\u6761\u8fb9\u4e3a $(x, y)$\uff0c\u53ef\u4ee5\u60f3\u5230\u53ea\u6709 $p(x, y)$ \u4e0a\u7684\u70b9\uff0c\u4e14\u4e0d\u542b $\\text{lca}(x, y)$ \u624d\u4f1a\u88ab\u8fd9\u6761\u8fb9\u66f4\u65b0\u7b54\u6848\u3002\u8fd9\u6837\u8ba9\u6211\u4eec\u7684\u590d\u6742\u5ea6\u5c11\u4e86\u4e00\u4e9b\uff0c\u4f46\u8fd8\u662f\u592a\u5927\n\n\u601d\u8003\u6709\u6ca1\u6709\u529e\u6cd5\u5148\u679a\u4e3e \"**\u66f4\u4f18\u7684**\"\uff0c\u975e\u6811\u8fb9\uff0c\u4ee5\u671f\u671b\u4e0d\u6bcf\u6b21\u90fd\u66f4\u65b0\u94fe\u4e0a\u7684\u7ed3\u70b9\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u8df3\u8dc3\u6027\u7684\u7ed3\u8bba\uff08\u6211\u6ca1\u76f4\u63a5\u60f3\u5230\uff0c\u662f\u542c\u4e86\u9898\u89e3\u624d\u61c2\u7684...\uff09\uff1a\n\n> $\\text{Lemma 2.}$ \u82e5\u5c06\u6240\u6709\u975e\u6811\u8fb9 $(x, y)$ \u6309\u6743\u503c $|p(s, x)|+|(x, y)|+|p(s, y)|$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u5e76\u679a\u4e3e\uff08\u5176\u4e2d $p(.)$ \u6307\u539f\u56fe\u6700\u77ed\u8def\u751f\u6210\u6811\u7684\u8def\u5f84\uff09\u6bcf\u4e2a\u7ed3\u70b9**\u7b2c\u4e00\u6b21**\u88ab\u66f4\u65b0\u65f6\u4e00\u5b9a\u662f\u6700\u4f18\u7684\n\n$\\text{Proof.}$ \u8bbe\u4e24\u6761\u975e\u6811\u8fb9 $(x, y), (x', y')$\uff0c\u4e14\u4ee4 $|p(s, x)|+|(x, y)|+|p(s, y)|\\leq|p(s, x')|+|(x', y')|+|p(s, y')|$\uff0c\u7531\u7ed3\u8bba\u9610\u8ff0\u53ef\u77e5 $(x, y)$ \u4f1a\u6bd4 $(x', y')$ \u5148\u679a\u4e3e\u5230\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7ed3\u70b9 $v$\uff0c\u53ea\u6709\u5176\u6ee1\u8db3 $v\\in\\{p(x, y)\\cup p(x', y')\\}, v\\notin\\{\\text{lca}(x, y), \\text{lca}(x', y')\\}$ \u65f6\u624d\u4f1a**\u540c\u65f6**\u88ab\u8fd9\u4e24\u6761\u8fb9\u66f4\u65b0\u8d21\u732e\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u8003\u8651\u8fd9\u4e9b\u70b9\u7684\u7b54\u6848\u60c5\u51b5\n\n\u4e00\u6761\u975e\u6811\u8fb9 $(x, y)$ \u5bf9\u7ed3\u70b9 $v$ \u7684\u8d21\u732e\u662f $|p(s, x)|+|(x, y)|+|p(y, v)|$\uff1b\u800c\u6211\u4eec\u53d1\u73b0\uff0c\u6839\u636e\u4e0a\u9762\u7684\u4e0d\u7b49\u5f0f\u5176\u5b9e\u53ef\u4ee5\u63a8\u51fa\uff1a\n\n$|p(s, x)|+|(x, y)|+|p(s, y)|\\leq|p(s, x')|+|(x', y')|+|p(s, y')|$\n\n$|p(s, x)|+|(x, y)|+(|p(s, y)|-|p(s, v)|)\\leq|p(s, x')|+|(x', y')|+(|p(s, y')|-|p(s, v)|)$\n\n$|p(s, x)|+|(x, y)|+|p(y, v)|\\leq|p(s, x')|+|(x', y')|+|p(y', v)|$\uff08\u56e0\u4e3a $x, y, x', y'$ \u7684\u6df1\u5ea6\u4e00\u5b9a\u6bd4 $v$ \u5927\uff09\n\n\u4e0d\u7b49\u5f0f\u5de6\u53f3\u4e24\u8fb9\u5b9e\u9645\u4e0a\u5c31\u662f\u7528 $(x, y), (x', y')$ \u66f4\u65b0\u7ed3\u70b9 $v$ \u65f6 $v$ \u7684\u7b54\u6848\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u7528 $(x, y)$ \u66f4\u65b0 $v$ \u4e00\u5b9a\u6bd4\u7528 $(x', y')$ \u66f4\u4f18\n\n\u7531\u6b64\u8bc1\u6bd5\n\n\uff08\u89c9\u5f97\u5f0f\u5b50\u6709\u70b9\u96be\u61c2\u53ef\u4ee5\u7ed3\u5408\u4e0b\u9762\u56db\u79cd\u56fe\u4f8b\u601d\u8003\u4e0b\uff1b\u56fe\u6709\u70b9\u4e11qaq\uff09\n\n![sample](https://cdn.luogu.com.cn/upload/image_hosting/ae919tr0.png)\n\n&nbsp;\n\n\u81f3\u4e8e\u5982\u4f55\u8ba9\u6bcf\u4e2a\u7ed3\u70b9\u53ea\u88ab\u8bbf\u95ee\u5230\u4e00\u6b21\uff0c\u53ef\u4ee5\u8003\u8651\u7528**\u5e76\u67e5\u96c6**\u5c06\u5df2\u8bbf\u95ee\u7684\u8fde\u901a\u5757\u7f29\u6210\u4e00\u4e2a\u7ed3\u70b9\n\n\u6700\u540e\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u5c31\u5927\u7ea6\u662f $O(m\\log m+n+m)$\n\n## CODE\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#include <algorithm>\n#define ll long long\nusing std::priority_queue;\nusing std::vector;\nusing std::sort;\n\n/*------------------------------Map------------------------------*/\n\nconst int MAXN =1e5+50, MAXM =4e5+50;\n\nint fst[MAXN], tote, dist[MAXN];\nbool vis[MAXN], usede[MAXM]/*\u8bb0\u5f55\u8be5\u8fb9\u662f\u5426\u4f5c\u4e3a\u6811\u8fb9\u88ab\u4f7f\u7528*/;\nstruct edge{\n\tint net, to, val;\n}e[MAXM];\nstruct elm{\n\tint to, dist, val, from, eid;\n\telm(int tt, int d, int v, int f, int ei):to(tt), dist(d), val(v), from(f), eid(ei){}\n\tbool operator < (const elm &B) const{ return dist > B.dist; }\n};\n\npriority_queue<elm, vector<elm> > que;\n\ninline void addedge2(int u, int v, int val);\n\ninline void dijkstra(){\n\tmemset(dist, 0x3f, sizeof(dist));\n\tdist[1] =0;\n\tque.push(elm(1, 0, 0, 0, 0));\n\twhile(que.size()){\n\t\telm nw =que.top();\n\t\tque.pop();\n\t\tif(vis[nw.to]) continue;\n\t\tif(nw.from != 0){\n\t\t\taddedge2(nw.from, nw.to, nw.val);\n\t\t\tusede[nw.eid] =1;\n\t\t\tif(nw.eid%2 == 0)\n\t\t\t\tusede[nw.eid-1] =1;\n\t\t\telse\n\t\t\t\tusede[nw.eid+1] =1;\n\t\t}\n\t\tvis[nw.to] =1;\n\t\tfor(int l =fst[nw.to]; l; l =e[l].net)\n\t\t\tif(!vis[e[l].to] && dist[nw.to]+e[l].val < dist[e[l].to]){\n\t\t\t\tdist[e[l].to] =dist[nw.to]+e[l].val;\n\t\t\t\tque.push(elm(e[l].to, dist[nw.to]+e[l].val, e[l].val, nw.to, l));\n\t\t\t}\n\t}\n}\n\ninline void addedge(int u, int v, int val){\n\ttote++;\n\te[tote].net =fst[u], fst[u] =tote, e[tote].to =v;\n\te[tote].val =val;\n}\n\n/*------------------------------dfs------------------------------*/\n\nedge e2[MAXM];\nint fst2[MAXN], tote2;\n\ninline void addedge2(int u, int v, int val){\n\ttote2++;\n\te2[tote2].net =fst2[u], fst2[u] =tote2, e2[tote2].to =v;\n\te2[tote2].val =val;\n}\n\nint f[MAXN], topl[MAXN], size[MAXN], ws[MAXN]/*\u91cd\u513f\u5b50*/, dep[MAXN], dep2[MAXN]/*\u7ecf\u8fc7\u6811\u8fb9\u6570*/;\n\nvoid dfs1(int u, int fa){\n\tsize[u] =1;\n\tf[u] =fa;\n\tfor(int l =fst2[u]; l; l =e2[l].net){\n\t\t/*dep \u7684\u503c\u5176\u5b9e\u548c dist \u4e00\u6837*/\n\t\tdep[e2[l].to] =dep[u]+e2[l].val;\n\t\tdep2[e2[l].to] =dep2[u]+1;\n\t\tdfs1(e2[l].to, u);\n\t\tsize[u] +=size[e2[l].to];\n\t}\n\tif(size[u] > size[ws[fa]])\n\t\tws[fa] =u;\n}\n\nvoid dfs2(int u, int fa){\n\tif(fa != 0 && ws[fa] == u)\n\t\ttopl[u] =topl[fa];\n\telse\n\t\ttopl[u] =u;\n\tfor(int l =fst2[u]; l; l =e2[l].net)\n\t\tdfs2(e2[l].to, u);\n}\n\nint Lca(int x, int y){\n\twhile(topl[x] != topl[y]){\n\t\t/*\u4f18\u5148\u8df3\u94fe\u9876\u6df1\u7684*/\n\t\tif(dep2[topl[x]] < dep2[topl[y]])\n\t\t\tx ^=y ^=x ^=y;\n\t\tx =f[topl[x]];\n\t}\n\tif(dep2[x] < dep2[y])\n\t\tx ^=y ^=x ^=y;\n\treturn y;\n}\n\n/*------------------------------Slove------------------------------*/\n\nstruct edge2{\n\tint u, v, val, key;\n\tedge2(){}\n\tedge2(int uu, int vv, int va, int ke):u(uu), v(vv), val(va), key(ke){}\n\tbool operator < (const edge2 &B) const{ return key < B.key; }\n}cross[MAXM];/*\u6a2a\u53c9\u8fb9*/\nint tot;\n\nint ans[MAXN];\nint f2[MAXN];\n\n/*\u8fd9\u91cc\u5077\u61d2\u6ca1\u52a0\u6309\u77e2\u5408\u5e76 qaq\uff0c\u8fd9\u9898\u53cd\u6b63\u6ca1\u5361*/\nint get(int x){\n\tif(f2[x] != x)\n\t\treturn f2[x] =get(f2[x]);\n\telse\n\t\treturn x;\n}\n\n/*------------------------------Main------------------------------*/\n\ninline int read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn x;\n}\n\nint main(){\n\tint n =read(), m =read();\n\tfor(int i =1; i <= m; ++i){\n\t\tint u =read(), v =read(), w =read();\n\t\taddedge(u, v, w);\n\t\taddedge(v, u, w);\n\t}\n\tdijkstra();\n\tdfs1(1, 0), dfs2(1, 0);\n\tfor(int i =1; i <= tote; i +=2){\n\t\tif(usede[i])\n\t\t\tcontinue;\n\t\tint u =e[i].to, v =e[i+1].to;\n\t\tcross[tot++] =edge2(u, v, e[i].val, e[i].val+dep[u]+dep[v]);\n\t}\n\tsort(cross, cross+tot);\n\tmemset(ans, -1, sizeof(ans));\n\tfor(int i =1; i <= n; ++i)\n\t\tf2[i] =i;\n\tfor(int i =0; i < tot; ++i){\n\t\tedge2 nw =cross[i];\n\t\tint lca =Lca(nw.u, nw.v);\n\t\tint x =nw.u;\n\t\twhile(dep2[x] > dep2[lca]){\n\t\t\tx =get(x);\n\t\t\tif(!(dep2[x] > dep2[lca]))/*<- \u586b\u9505*/\n\t\t\t\tcontinue;\n\t\t\tif(ans[x] == -1)\n\t\t\t\tans[x] =(dep[nw.u]-dep[x])+nw.val+dep[nw.v];\n\t\t\t/*\u786e\u4fdd\u6bcf\u4e2a\u5e76\u67e5\u96c6\u53ea\u6709\u4ee3\u8868\u8282\u70b9\u53ef\u80fd\u6ca1\u88ab\u66f4\u65b0\u8fc7*/\n\t\t\tf2[x] =f[x];\n\t\t\tx =f[x];\n\t\t}\n\t\tx =nw.v;\n\t\twhile(dep2[x] > dep2[lca]){\n\t\t\tx =get(x);\n\t\t\tif(!(dep2[x] > dep2[lca]))\n\t\t\t\tcontinue;\n\t\t\tif(ans[x] == -1)\n\t\t\t\tans[x] =(dep[nw.v]-dep[x])+nw.val+dep[nw.u];\n\t\t\tf2[x] =f[x];\n\t\t\tx =f[x];\n\t\t}\n\t}\n\tfor(int i =2; i <= n; ++i)\n\t\tprintf(\"%d\\n\", ans[i]);\n}\n```",
        "postTime": 1596091906,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2934 \u3010[USACO09JAN]Safe Travel G\u3011"
    },
    {
        "content": "### \u4e00\u4e9b\u95f2\u8bdd\n\n\u5f88\u6709\u610f\u601d\u7684\u4e00\u9053\u9898\n\n~~\u7ed9\u6211\u666e\u53ca\u4e86\u666e\u53ca\u7ec4\u77e5\u8bc6\u70b9 \u6700\u77ed\u8def\u6811~~\n\n### $\\texttt{Solution}$\n\n#### \u6700\u77ed\u8def\u6811\n\u5df2\u7ecf\u77e5\u9053\u7684\u540c\u5b66\u53ef\u4ee5\u8df3\u8fc7\n\n\u8003\u8651\u6211\u4eec\u8dd1\u6700\u77ed\u8def\u7b97\u6cd5\u65f6\u7684\u677e\u5f1b\u64cd\u4f5c\n\n\u7528\u8be5\u70b9\u5bf9\u4e8e\u6e90\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u66f4\u65b0\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n\n\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u6765\u6bcf\u4e2a\u70b9\u6700\u540e\u4e00\u6b21\u7ee7\u627f\u4e86\u54ea\u4e2a\u70b9\u7684\u8ddd\u79bb\n\n\u8fd9\u5f62\u6210\u4e86\u4e00\u4e2a**\u6811\u7ed3\u6784**\uff0c\u6211\u4eec\u7b80\u5355\u7684\u5c06\u4ed6\u79f0\u4e3a**\u6700\u77ed\u8def\u6811**\n\n\u51c6\u786e\u7684\u8bf4\uff0c\u6211\u4eec\u80fd\u5f97\u5230\u4e00\u4e2a\u6700\u77ed\u8def\u56fe\uff0c\u6700\u77ed\u8def\u6811\u662f\u6700\u77ed\u8def\u56fe\u7684\u4efb\u610f\u4e00\u9897\u751f\u6210\u6811\n\n\u6211\u4eec\u628a\u975e\u6700\u77ed\u8def\u6811\u4e0a\u7684\u8fb9\u79f0\u4e3a\u975e\u6811\u8fb9\n\n\u6700\u77ed\u8def\u6811\u6709\u4e00\u4e9b\u4f18\u8d8a\u7684\u6027\u8d28\n\n>\u5b83\u662f\u539f\u56fe\u7684\u4e00\u9897\u751f\u6210\u6811\n>\n>\u6bcf\u4e2a\u70b9\u4e0e\u6811\u4e0a\u4efb\u610f\u7956\u5148\u4e4b\u95f4\u7684\u8def\u5f84\u662f\u539f\u56fe\u7684\u6700\u77ed\u8def\u5f84\n\n\u8bc1\u660e\u6bd4\u8f83\u7b80\u5355 ~~\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be~~\n\n```cpp\nvoid dijkstra(){\n\tmemset(d,0x3f,sizeof(d));\n\tq.push((node){1,0});\n\td[1]=0;\n\twhile(!q.empty()){\n\t\tint k=q.top().id;\n\t\tq.pop();\n\t\tif(vis[k])continue;\n\t\tvis[k]=1;\n\t\tfor(int i=head[k];i!=-1;i=e[i].nxt){\n\t\t\tint tmp=e[i].to;\n\t\t\tif(d[tmp]<=d[k]+e[i].w)continue;\n\t\t\td[tmp]=d[k]+e[i].w;\n\t\t\tf[tmp]=k;\n\t\t\tq.push((node){tmp,d[tmp]});\n\t\t}\n\t}\n\treturn ;\n}\n\n```\n\u4ee3\u7801\u5b9e\u73b0\u591a\u4e00\u53e5\u8bdd\u8bb0\u5f55\u7236\u4eb2\u5373\u53ef\n\n#### \u539f\u9898\n\u8003\u8651\u539f\u9898\u7684\u5947\u602a\u95ee\u6cd5\n\n\u6211\u4eec\u8981\u5f97\u5230\u53bb\u6389\u6700\u77ed\u8def\u4e2d\u6700\u540e\u4e00\u6761\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u5373\u8be5\u70b9\u7684\u7236\u8fb9\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u80fd\u7ecf\u8fc7\u975e\u6811\u8fb9\u7ed5\u8fc7\u8fd9\u6761\u7236\u8fb9\n\n\u80fd\u4e0d\u80fd\u7ecf\u8fc7\u591a\u6761\u975e\u6811\u8fb9\u5f97\u5230\u5462\uff1f\n\n\u7531\u4e8e\u8bc1\u660e\u8f83\u4e3a\u7b80\u5355\uff0c\u5927\u591a\u6570\u9898\u89e3\u5ffd\u7565\u4e86\uff0c\u5728\u8fd9\u91cc\u7b80\u8bc1\u4e0b\n\n\u8003\u8651\u4e24\u6761\u975e\u6811\u8fb9 $(u_1,v_1),(u_2,v_2)$\n\n\u5176\u4e2d $v_1,u_2$ \u5728\u4e00\u6761\u6811\u94fe\u4e0a\uff0c\u53ef\u76f4\u63a5\u5230\u8fbe\n\n$i$ \u662f $v_2$ \u7684\u7956\u5148\n\n\u6709\u4e24\u79cd\u65b9\u6848 \n\n$1\\to u_1\\to(u_1,v_1)\\to v_1\\to u_2\\to(u_2,v_2)\\to v_2\\to i$\n\n$1\\to u_2\\to (u_2,v_2)\\to v_2\\to i$\n\n\u7531\u4e8e\u6700\u77ed\u8def\u6811\u7684\u6027\u8d28\n\n$1\\to u_2<1\\to u_1\\to(u_1,v_1)\\to v_1\\to u_2$\n\n\u6545\u6700\u4f18\u65b9\u6848\u603b\u662f\u53ea\u7ecf\u8fc7\u4e00\u6761\u975e\u6811\u8fb9\u5230\u8fbe\u7684\u65b9\u6848\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\n\n\u6211\u4eec\u53ea\u9700\u8003\u8651\u6bcf\u6761\u975e\u6811\u8fb9\u7684\u8d21\u732e\u5373\u53ef\n\n>\u4e00\u6761\u975e\u6811\u8fb9\u53ea\u80fd\u66f4\u65b0\u4e24\u7aef\u5728\u6700\u77ed\u8def\u6811\u4e0a\u7684\u8def\u5f84\n\n\u8fd9\u662f\u56e0\u4e3a\u5f53\u8d70\u5230\u4e24\u7aeflca\u4e4b\u4e0a\u65f6\u4f1a\u8d70\u51fa\u73af\u6765\uff0c\u4e0d\u518d\u662f\u7b80\u5355\u8def\u5f84\n\n\u53d1\u73b0\u5bf9\u4e8e\u975e\u6811\u8fb9 $(u,v)$ \u70b9 $i$ \u6709 $d_u+d_v+w(u,v)-d_i$ \u7684\u4e00\u79cd\u6b63\u786e\u8d70\u6cd5\n\n\u5176\u4e2d $d_i$ \u8868\u793a $1\\to i$ \u7684\u6700\u77ed\u8def\n\n$w(u,v)$ \u8868\u793a\u8fb9 $(u,v)$ \u7684\u6743\u503c\n\n\u8fd9\u91cc\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u6cd5\n\n\u4e00\u79cd\u662f\u4e0a\u5e76\u67e5\u96c6($O(m\\alpha(n)+mlogm)$)\uff0c\u4e00\u79cd\u662f\u66b4\u529b\u6811\u5256\uff08$O(mlog^2n)$\uff09\n\n~~\u5b70\u4f18\u5b70\u52a3\u4e00\u76ee\u4e86\u7136~~\n\n\u8003\u8651 $d_u+d_v+w(u,v)$ \u5bf9\u4e8e\u4e00\u6761\u975e\u6811\u8fb9\u662f\u56fa\u5b9a\u7684\uff0c\u66b4\u529b\u6811\u5256\u8986\u76d6\u5373\u53ef\uff08\u6e05\u65b0\u65e0\u8111\uff09\n\n\u540c\u6837\u8003\u8651 $d_u+d_v+w(u,v)$ \uff0c\u5e76\u67e5\u96c6\u505a\u6cd5\u5c06\u5176\u5347\u5e8f\u6392\u5e8f\u4f9d\u6b21\u66b4\u529b\u4e0a\u8df3\u8ba1\u7b97\u8d21\u732e\n\n\u7531\u4e8e\u6743\u503c\u7ecf\u8fc7\u6392\u5e8f\uff0c\u6bcf\u4e2a\u8282\u70b9\u4ec5\u4f1a\u88ab\u4e00\u6761\u975e\u6811\u8fb9\u8d21\u732e\u4e00\u6b21\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u5df2\u88ab\u8d21\u732e\u8fc7\u7684\u94fe\u5373\u53ef\n\n\u4ee3\u7801\u4e5f\u5f88\u5c0f\u6e05\u65b0\n\n\u653e\u4e0b\u6811\u5256\u7684\u8986\u76d6\u90e8\u5206\n\n```cpp\nvoid modify_dist(int x,int y,int w){\n\tint p=lca(x,y),X=x,val=w+d[x]+d[y];\n\twhile(dep[top[x]]>dep[p]){\n\t\tmodify(1,1,n,dfn[top[x]],dfn[x],val);\n\t\tx=f[top[x]];\n\t}\n\tif(dep[x]>dep[p])modify(1,1,n,dfn[p]+1,dfn[x],val);\n\twhile(dep[top[y]]>dep[p]){\n\t\tmodify(1,1,n,dfn[top[y]],dfn[y],val);\n\t\ty=f[top[y]];\n\t}\n\tif(dep[y]>dep[p])modify(1,1,n,dfn[p]+1,dfn[y],val);\n\treturn ;\n}\n```\n\n\u5b8c\u6574\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86",
        "postTime": 1602765349,
        "uid": 98527,
        "name": "juju527",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2934 \u3010[USACO09JAN]Safe Travel G\u3011"
    },
    {
        "content": "[\u4f20\u9001~](https://www.luogu.org/problemnew/show/P2934)\n\n## Description\n\n\u6709\u4e00\u5f20n\u4e2a\u70b9m\u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e2au($1<u \\leq n$)\uff0c\u6c42\u5220\u53bb1\u5230u\u7684\u6700\u77ed\u8def\u7684\u6700\u540e\u4e00\u6761\u8fb9\u540e\uff0c\u4ece1\u5230u\u7684\u6700\u77ed\u8ddd\u79bb\n\n## Solution\n\n\u9996\u5148\u5efa\u51fa\u6700\u77ed\u8def\u6811\u3002\u65b0\u7684\u6700\u77ed\u8def\u80af\u5b9a\u4e0d\u80fd\u8d70\u5b83\u5230\u7236\u4eb2\u7684\u8fb9\uff0c\u90a3\u4e48\u5fc5\u987b\u8981\u627e\u4e00\u4e2a\u6216\u4e24\u4e2a\u4e2d\u4ecb\u70b9\uff0c\u4f7f\u5f97\u5b83\u4e0e1\u8fde\u901a\u3002\u8bbe\u5f53\u524d\u70b9\u4f4di\uff0c\u5176\u4e2d\u4e00\u4e2a\u4e2d\u4ecb\u70b9\u4f4du\u3002\u5982\u679ci\u4e0eu\u6709\u4e00\u6761\u8fb9\u76f4\u63a5\u8fde\u63a5\uff0c\u5219\u8ddd\u79bb\u4e3a$dis_u+w_{u,i}$\uff1b\u6216\u8005\u5728i\u7684\u5b50\u6811\u4e2d\u5b58\u5728\u4e00\u70b9v\u4e0eu\u6709\u8fb9\u76f8\u8fde\uff0c\u5219\u8ddd\u79bb\u4e3a$dis_u+w_{u,v}+dis_v-dis_i$\u3002\u5c06\u4e24\u79cd\u60c5\u51b5\u7edf\u4e00\uff0c\u82e5u\u4e0e\u70b9v\u6709\u8fb9\u76f8\u8fde(v=i\u6216v\u5728i\u7684\u5b50\u6811\u5185)\uff0c\u5219\u65b0\u7684\u8ddd\u79bb\u4e3a$dis_u+w_{u,v}+dis_v-dis_i$\u3002\u7531\u4e8e$dis_i$\u786e\u5b9a\uff0c\u6240\u4ee5\u53ea\u8981$dis_u+w_{u,v}+dis_v$\u6700\u5c0f\u5373\u53ef\u3002\u5230\u8fd9\u91cc\u4e0e\u4e0a\u9762\u7684\u9898\u89e3\u90fd\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u7528\u5806\u7684\u505a\u6cd5\u3002\n\n\u5728dfs\u7684\u8fc7\u7a0b\u4e2d\uff0c\u628a\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u5f97\u5230\u7684\u6240\u6709$dis_u+w_{u,v}+dis_v$\u5b58\u5728\u4e00\u4e2a\u5806\u91cc\u3002\u5177\u4f53\u505a\u6cd5\u662f\u5148\u628a\u6240\u6709\u513f\u5b50\u7684\u5806\u5408\u5e76(\u8981\u7528\u5de6\u504f\u6811)\uff0c\u518d\u679a\u4e3e\u51fa\u8fb9\u628a\u65b0\u7684u\u53ca\u5176\u503c\u52a0\u5165\u5806\u4e2d\uff0c\u6700\u540e\u53d6\u5806\u9876\u65f6\u5220\u6389\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684(\u5373\u4e24\u4e2a\u70b9\u90fd\u5728\u5b50\u6811\u5185)\u3002\n\n## Code\n```cpp\n#include <bits/stdc++.h>\n#define mk make_pair\n#define fst first\n#define snd second\nusing namespace std;\nconst int maxn = 1e5;\nconst int maxm = 2e5;\nconst int maxt = 4e6; \nconst int inf = 1e9;\ntypedef pair<int, int> pii;\nint n, m, tot, cnt, head[maxn+10], dis[maxn+10], done[maxn+10], pd[maxm*2+10], dfn[maxn+10], size[maxn+10], ans[maxn+10], root[maxn+10];\nstruct edge {\n\tint to, nex, dis;\n} edges[maxm*2+10];\nstruct node {\n\tint to, ls, rs, fa, dis, val;\n} t[maxt+10];\nvoid addedge(int u, int v, int w) {\n\tedges[++tot] = (edge){v, head[u], w}; head[u] = tot;\n\tedges[++tot] = (edge){u, head[v], w}; head[v] = tot;\n}\nint find(int x) {\n\treturn x == t[x].fa ? x : t[x].fa = find(t[x].fa);\n}\nint merge(int x, int y) {\n\tif (!x || !y) return x+y;\n\tif (t[x].val > t[y].val) swap(x, y);\n\tt[x].rs = merge(t[x].rs, y);\n\tt[t[x].rs].fa = x;\n\tif (t[t[x].ls].dis < t[t[x].rs].dis) swap(t[x].ls, t[x].rs);\n\tt[x].dis = t[t[x].rs].dis+1;\n\treturn x;\n}\nint remove(int x) {\n    /*t[t[x].ls].fa = t[x].ls;\n    t[t[x].rs].fa = t[x].rs;\n    t[x].fa = merge(t[x].ls, t[x].rs);\n    t[x].ls = t[x].rs = t[x].dis = 0;\n    return t[x].fa;*/\n\treturn merge(t[x].ls, t[x].rs);\n}\nvoid dijkstra() {\n\tmemset(dis, 0x3f, sizeof(dis));\n\tpriority_queue<pii, vector<pii>, greater<pii> > q;\n\tq.push(mk(dis[1] = 0, 1));\n\twhile (!q.empty()) {\n\t\tint x = q.top().snd; q.pop();\n\t\tif (done[x]) continue;\n\t\tdone[x] = 1;\n\t\tfor (int i = head[x]; i; i = edges[i].nex) {\n\t\t\tedge e = edges[i];\n\t\t\tif (dis[e.to] > dis[x]+e.dis)\n\t\t\t\tq.push(mk(dis[e.to] = dis[x]+e.dis, e.to));\n\t\t}\n\t}\n}\nint check(int u, int v) {\n\treturn dfn[v] >= dfn[u] && dfn[v] < dfn[u]+size[u];\n}\nvoid dfs(int u, int fa) {\n\tdfn[u] = ++size[0]; size[u] = 1;\n\tfor (int i = head[u]; i; i = edges[i].nex) {\n\t\tint v = edges[i].to;\n\t\tif (v == fa || !pd[i]) continue;\n\t\tdfs(v, u); root[u] = merge(root[u], root[v]);\n\t\tsize[u] += size[v];\n\t}\n\tfor (int i = head[u]; i; i = edges[i].nex) {\n\t\tint v = edges[i].to;\n\t\tif (v == fa || pd[i]) continue;\n\t\tt[++cnt] = (node){v, 0, 0, cnt, 0, dis[u]+dis[v]+edges[i].dis};\n\t\troot[u] = merge(root[u], cnt);\n\t}\n\twhile (check(u, t[root[u]].to)) root[u] = remove(root[u]);\n\tans[u] = root[u] ? t[root[u]].val-dis[u] : - 1;\n}\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; ++i) {\n\t\tint u, v, w;\n\t\tscanf(\"%d%d%d\", &u, &v, &w);\n\t\taddedge(u, v, w);\n\t}\n\tdijkstra();\n\tfor (int i = 1; i <= n; ++i)\n\t\tfor (int j = head[i]; j; j = edges[j].nex)\n\t\t\tif (dis[edges[j].to] == dis[i]+edges[j].dis) pd[j] = 1;\n\tcnt = n; dfs(1, 0);\n\tfor (int i = 2; i <= n; ++i)\n\t\tprintf(\"%d\\n\", ans[i]);\n\treturn 0;\n} \n```\n> *THANK YOU FOR READING THIS!*",
        "postTime": 1578891275,
        "uid": 15702,
        "name": "rhdeng",
        "ccfLevel": 7,
        "title": "\u6d1b\u8c37 P2934 \u5b89\u5168\u51fa\u884cSafe Travel"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u9053\u9898\u4fdd\u8bc1\u6700\u77ed\u8def\u5f84\u552f\u4e00\u3002\u8fd9\u6709\u4e24\u4e2a\u610f\u4e49\u3002\u9996\u5148\u53ef\u4ee5\u4fdd\u8bc1 1 \u5230\u6bcf\u4e2a\u70b9 $i$ \u7684\u6700\u77ed\u8def\u5f84\u7684\u6700\u540e\u4e00\u6761\u8fb9\u552f\u4e00\u3002\u5e76\u4e14\u53ef\u4ee5\u4fdd\u8bc1\u8fd9\u68f5\u6811\u7684\u6700\u77ed\u8def\u5f84\u6811\u552f\u4e00\u3002\u6240\u4ee5\u8bf4\uff0c\u8fd9\u4e2a\u4fe1\u606f\u63d0\u9192\u6211\u4eec\u53bb\u5efa\u6700\u77ed\u8def\u5f84\u6811\u3002\u8fd9\u662f\u8fd9\u7c7b\u9898\u76ee\u7684\u4f20\u7edf\u5957\u8def\u3002\u6700\u77ed\u8def\u5f84\u6811\u8bf4\u767d\u4e86\u5c31\u662f\u7531\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8fb9\u6784\u6210\u7684\u6811\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u7528\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\u6c42\u51fa 1 \u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\uff0c\u7136\u540e\u6784\u9020\u51fa\u4ee5 1 \u4e3a\u6839\u7684\u6700\u77ed\u8def\u5f84\u6811\u3002\u800c 1 \u5230 $i$ \u7684\u6700\u77ed\u8def\u5c31\u5bf9\u5e94\u7740\u8fd9\u68f5\u6811\u4e0a\u4ece 1 \u5230 $i$ \u7684\u8def\u5f84\u3002\n\n\u6211\u4eec\u8003\u8651\u5982\u679c\u4e0d\u7ecf\u8fc7\u6700\u540e\u4e00\u6761\u8fb9\u4ece 1 \u5230 $i$ \u7684\u6700\u77ed\u8def\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u7ecf\u8fc7 $i$ \u4e0e\u4ed6\u7684\u7236\u4eb2\u8fd9\u6761\u8fb9\u3002\u4e8e\u662f\u5982\u679c\u4ece $i$ \u5230 1 \u8fd9\u4e2a\u8282\u70b9\uff0c\u5fc5\u987b\u5148\u7ecf\u8fc7 $i$ \u7684\u5b50\u6811\u4e2d\u4e00\u4e2a\u8282\u70b9 $x$\uff0c\u4e0b\u4e00\u6b65\u53bb\u4e00\u4e2a\u4e0d\u5728 $i$ \u8fd9\u4e2a\u5b50\u6811\u4e2d\u7684\u8282\u70b9 $y$\uff0c\u6700\u540e\u4e00\u6b65\u663e\u7136\u662f\u8d70\u4ece $y$ \u5230 1 \u7684\u6700\u77ed\u8def\u3002\u4e8e\u662f\uff0c\u8fb9 $(x,y,z)$ \u53ef\u4ee5\u63d0\u4f9b $dis_x - dis_i + dis_y + z$ \u7684\u8d21\u732e\u3002\u5176\u4e2d $dis_x$ \u8868\u662f 1 \u5230 $x$ \u6700\u77ed\u8def\u7684\u503c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5728\u8003\u8651\u4e00\u4e0b\u6bcf\u4e00\u6761\u4e0d\u5728\u6700\u77ed\u8def\u5f84\u6811\u4e0a\u7684\u8fb9 $(x,y)$ \u53ef\u4ee5\u53bb\u66f4\u65b0\u90a3\u4e9b\u70b9\u7684\u7b54\u6848\u3002\u6839\u636e\u6211\u4eec\u4e0a\u9762\u7684\u5206\u6790\uff0c\u5047\u8bbe\u4ed6\u66f4\u65b0\u4e86\u4e00\u4e2a\u70b9 $i$\uff0c\u90a3\u4e48 $i$ \u5fc5\u7136\u662f $x, y$ \u4e24\u4e2a\u70b9\u6070\u597d\u4e00\u4e2a\u70b9\u7684\u7956\u5148\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa $x, y$ \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u66f4\u65b0\u4e00\u4e0b $x$ \u4e0e $y$ \u5230\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u7b54\u6848\u3002\u5f53\u7136\u4e0d\u5305\u62ec\u6700\u8fd1\u516c\u5171\u7956\u5148\u8fd9\u4e2a\u70b9\u3002\n\n\u66f4\u65b0\u8def\u5f84\u662f\u6811\u94fe\u5256\u5206\u7684\u62ff\u624b\u64cd\u4f5c\u3002\u8fd9\u65f6\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u5728 $O(n \\log^2 n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u6b64\u9898\uff0c\u4f46\u663e\u7136\u8fd9\u4e2a\u505a\u6cd5\u8fd8\u4e0d\u591f\u4f18\u7f8e\u3002\n\n\u8003\u8651\u5230\u8fd9\u9898\u76f8\u8f83\u4e00\u822c\u7684\u6811\u5256\u9898\u6bd4\u8f83\u7279\u6b8a\uff0c\u4fee\u6539\u5168\u90e8\u5b8c\u6210\u4e4b\u540e\u518d\u8fdb\u884c\u8be2\u95ee\uff0c\u5e76\u4e14\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u5982\u679c\u5df2\u7ecf\u88ab\u5c0f\u7684\u6570\u66f4\u65b0\u8fc7\uff0c\u518d\u7528\u5927\u7684\u6570\u66f4\u65b0\u4e5f\u6ca1\u4ec0\u4e48\u610f\u4e49\u3002\u6240\u4ee5\u8bf4\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u6761\u8fb9\u6309\u7167\u6240\u66f4\u65b0\u7684\u8fd9\u4e2a\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5e76\u7528\u5e76\u67e5\u96c6\u8fdb\u884c\u5408\u5e76\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u53ea\u66f4\u65b0\u4e00\u6b21\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86\u6700\u77ed\u8def\u7684\u590d\u6742\u5ea6 $O((n+m)\\log n)$\uff0c\u6548\u7387\u8f83\u9ad8\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, vc[N << 2], Ne[N << 2], he[N], edv[N << 2], tot, f[N][17], d[N], dep[N], ans[N], fa[N], dis[N];\nbool v[N], istree[N << 2];\nstruct P {\n\tint x, y, z;\n\tbool t;\n\tbool operator < (const P &a) const {\n\t\treturn z < a.z;\n\t}\n} a[N << 1];\ninline void add(int x, int y, int z) {\n\tvc[++tot] = y, edv[tot] = z, Ne[tot] = he[x], he[x] = tot;\n}\nint get(int x) {\n\treturn fa[x] == x ? x : fa[x] = get(fa[x]);\n}\nvoid dij() {\n\tpriority_queue<pair<int, int> > q;\n\tmemset(d, 0x3f, sizeof d);\n\tq.push(make_pair(0, 1));\n\td[1] = 0;\n\twhile (q.size()) {\n\t\tint x = q.top().second;\n\t\tq.pop();\n\t\tif (v[x]) continue;\n\t\tv[x] = 1;\n\t\tfor (int i = he[x]; i; i = Ne[i]) {\n\t\t\tint y = vc[i], z = edv[i];\n\t\t\tif (d[y] > d[x] + z) {\n\t\t\t\td[y] = d[x] + z;\n\t\t\t\tq.push(make_pair(-d[y], y));\n\t\t\t}\n\t\t}\n\t}\n}\nint lca(int x, int y) {\n\tif (dep[x] > dep[y]) swap(x, y);\n\tfor (int i = 16; i >= 0; --i)\n\t\tif (dep[f[y][i]] >= dep[x]) y = f[y][i];\n\tif (x == y) return x;\n\tfor (int i = 16; i >= 0; --i)\n\t\tif (f[x][i] ^ f[y][i]) x = f[x][i], y = f[y][i];\n\treturn f[x][0];\n}\nvoid dfs(int x) {\n\tdep[x] = dep[f[x][0]] + 1;\n\tfor (int i = he[x]; i; i = Ne[i]) {\n\t\tint y = vc[i], z = edv[i];\n\t\tif (d[y] != d[x] + z || y == f[x][0]) continue;\n\t\tistree[i] = istree[i ^ 1] = 1;\n\t\tf[y][0] = x;\n\t\tdis[y] = dis[x] + z;\n\t\tdfs(y);\n\t}\n}\nint main() {\n\ttot = 1;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; ++i) {\n\t\tscanf(\"%d%d%d\", &a[i].x, &a[i].y, &a[i].z);\n\t\tadd(a[i].x, a[i].y, a[i].z);\n\t\tadd(a[i].y, a[i].x, a[i].z);\n\t}\n\tdij();\n\tdfs(1);\n\tfor (int i = 1; i <= n; ++i) fa[i] = i;\n\tfor (int j = 1; j <= 16; ++j)\n\t\tfor (int x = 1; x <= n; ++x)\t\n\t\t\tf[x][j] = f[f[x][j - 1]][j - 1];\n\tfor (int i = 1; i <= m; ++i) \n\t\tif (istree[i << 1]) a[i].t = 1;\n\tfor (int i = 1; i <= m; ++i)\n\t\ta[i].z += dis[a[i].x] + dis[a[i].y];\n\tsort(a + 1, a + m + 1, [](const P &a, const P &b) {return a.z < b.z;});\n\tmemset(ans, 0x3f, sizeof ans);\n\tfor (int i = 1; i <= m; ++i) {\n\t\tif (a[i].t) continue;\n\t\tint x = a[i].x, y = a[i].y, LCA = lca(x, y);\n\t\tx = get(x), y = get(y), LCA = get(LCA);\n\t\twhile (x != LCA) {\n\t\t\tans[x] = min(ans[x], a[i].z - dis[x]);\n\t\t\tfa[x] = LCA;\n\t\t\tx = get(f[x][0]);\n\t\t}\n\t\twhile (y != LCA) {\n\t\t\tans[y] = min(ans[y], a[i].z - dis[y]);\n\t\t\tfa[y] = LCA;\n\t\t\ty = get(f[y][0]);\n\t\t}\n\t}\n\tfor (int i = 2; i <= n; ++i) printf(\"%d\\n\", ans[i] == 0x3f3f3f3f ? -1 : ans[i]);\n}\n```\n\n\u611f\u89c9\u5df2\u7ecf\u8bb2\u7684\u6bd4\u8f83\u6e05\u695a\u4e86\uff0c\u5982\u679c\u6709\u4e0d\u61c2\u53ef\u4ee5\u63d0\u51fa\u3002",
        "postTime": 1649502542,
        "uid": 162196,
        "name": "\u4f1f\u5927\u7684\u738b\u592b\u5b50",
        "ccfLevel": 6,
        "title": "P2934 [USACO09JAN]Safe Travel G \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u505a\uff0c\u6c42\u51fa\u5355\u6e90\u6700\u77ed\u8def\u4e4b\u540e\uff0c\u5f62\u6210\u4e00\u9897\u6700\u77ed\u8def\u6811\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4ece\u70b9u\u8d70\u5230\u70b9v\uff0c\u663e\u7136\u5fc5\u987b\u8981\u901a\u8fc7\u4e0d\u5728\u6811\u4e0a\u7684\u8fb9\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u8981\u6c42min{w(u,v)+d(u)+d(v)-d(f)}\n\n\u679a\u4e3e\u70b9f\uff0c\u7edf\u8ba1\u7b54\u6848\u65f6\u518d\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4u,v\u662f\u5426\u8054\u901a\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\u8fd9\u91cc\u5fc5\u987b\u7528\u5806\u4f18\u5316Dijkstra\u8dd1\u6700\u77ed\u8def\uff0cspfa\u8981TLE\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<queue>\nusing namespace std;\nconst int N=200010;\nint n,m,adj[N<<1],nxt[N<<1],head[N],tot,w[N<<1];\nint vis[N],dis[N],fa[N];\ninline void adde(int u,int v,int d){\n    adj[++tot] = v;\n    w[tot] = d;\n    nxt[tot] = head[u];\n    head[u] = tot;\n}\ninline void spfa(int start){\n    queue<int> q;\n    q.push(start);\n    memset(dis,127,sizeof(dis));\n    memset(vis, 0 ,sizeof(vis));\n    vis[start]=1;dis[start]=0;\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        vis[u]=0;\n        for(int e=head[u],v;e;e=nxt[e]){\n            v=adj[e];\n            if(dis[u]+w[e]<dis[v]){\n                dis[v]=dis[u]+w[e];\n                fa[v]=u;\n                if(!vis[v]){\n                    vis[v]=1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n}\nvoid SPFA(int S)\n{\n    priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > q;\n    for (int i=1; i<=n; i++) dis[i]=1<<30;\n    q.push(make_pair(0,S)); dis[S]=0;\n    while (!q.empty())\n        {\n            int now=q.top().second;\n            int Dis=q.top().first;\n            q.pop();\n            if (Dis>dis[now]) continue;\n            for (int i=head[now]; i; i=nxt[i])\n                if (Dis + w[i] < dis[adj[i]])\n                    dis[adj[i]]=Dis+w[i],\n                    fa[adj[i]]=now,\n                    q.push(make_pair(dis[adj[i]],adj[i]));\n        }\n}\nstruct road{\n    int u,v,w;\n}a[N];\nint cnt;\ninline bool cmp(road a,road b){\n    return a.w<b.w;\n}\nint f[N],ans[N],num;\ninline int find(int i){return f[i]==i?i:f[i]=find(f[i]);} \ninline void calc(road x){\n    int u=x.u,v=x.v,t=x.w;\n    while(find(u)!=find(v)){ num++;\n        if(dis[find(u)]<dis[find(v)])swap(u,v);\n        ans[find(u)]=min(ans[find(u)],t-dis[find(u)]);\n        u=f[find(u)]=fa[find(u)];\n    }\n}\ninline int get(){\n    char c; int s;\n    for(c=getchar();c<'0'||c>'9';c=getchar());\n    for(s=0;c>='0'&&c<='9';c=getchar())s=(s<<1)+(s<<3)+c-'0';\n    return s;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1,u,v,l;i<=m;i++){\n        u=get(),v=get(),l=get();\n        adde(u,v,l);adde(v,u,l);\n    }\n    //spfa(1);\n    SPFA(1);\n    for(int i=2;i<=tot;i+=2){\n        int u=adj[i],v=adj[i-1];\n        if(u!=fa[v]&&v!=fa[u]){\n            a[++cnt].u=u,a[cnt].v=v,a[cnt].w=w[i]+dis[u]+dis[v];\n        }\n    }\n    sort(a+1,a+1+cnt,cmp);\n    for(int i=1;i<=n;i++)f[i]=i,ans[i]=1<<30;\n    for(int i=1;i<=cnt&&num<n-1;i++)\n        calc(a[i]);\n    for(int i=2;i<=n;i++)\n        printf(\"%d\\n\",ans[i]==1<<30?-1:ans[i]);\n    return 0;\n}\n```",
        "postTime": 1506608153,
        "uid": 13052,
        "name": "iostream",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2934 \u3010[USACO09JAN]\u5b89\u5168\u51fa\u884cSafe Travel\u3011"
    },
    {
        "content": "# P2934 [USACO09JAN] Safe Travel G\n\n[\u66f4\u597d\u4f53\u9a8c](https://juruo999.blog.luogu.org/solution-p2934)  \n[\u9898\u76ee](https://www.luogu.com.cn/problem/P2934)\n\n\u8003\u70b9\uff1a\u6700\u77ed\u8def\u6811 & \u5e76\u67e5\u96c6\u7f29\u70b9\n \n## \u6b63\u5f0f\u5f00\u59cb\u8bb2\u89e3\n\n\u9898\u610f\uff1a\u6c42\u5728\u4e0d\u7ecf\u8fc7\u539f\u6765 $1$ \u8282\u70b9\u5230 $i$ \u8282\u70b9\u6700\u77ed\u8def\u4e0a\u6700\u540e\u4e00\u6761\u8fb9\u7684\u524d\u63d0\u4e0b\uff0c$1$ \u8282\u70b9\u5230 $i$ \u8282\u70b9\u7684\u6700\u77ed\u8def\u3002\n\n\u6837\u4f8b\u7684\u56fe\u753b\u51fa\u6765\u662f\u8fd9\u6837\uff1a\n\n![\u56fe\u7247](https://s3.bmp.ovh/imgs/2022/01/75683b3a05cb0d40.png)\n \n\u65e2\u7136\u6700\u77ed\u8def\u552f\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55 $1$ \u8282\u70b9\u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u7684\u6700\u540e\u4e00\u6761\u8fb9\u7684\u8d77\u70b9\uff0c\u4e5f\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u677e\u5f1b\u5b83\u7684\u8282\u70b9\uff0c\u4f5c\u4e3a\u5b83\u7684\u7236\u4eb2\uff0c\u6784\u9020\u51fa\u4e00\u68f5\u6839\u4e3a $1$ \u53f7\u8282\u70b9\u7684**\u6700\u77ed\u8def\u6811**\u3002\u56e0\u4e3a\u6700\u77ed\u8def\u552f\u4e00\uff0c\u6700\u77ed\u8def\u6811\u4e5f\u662f\u552f\u4e00\u7684\u3002\n\n\u7531\u6837\u4f8b\u6784\u9020\u51fa\u7684\u6700\u77ed\u8def\u6811\u662f\u8fd9\u6837\u7684\uff1a\n\n![\u56fe\u7247](https://i.bmp.ovh/imgs/2022/01/7f6d0881b9d89ae6.png)\n\n\u7ea2\u8272\u8fb9\u4e3a\u6700\u77ed\u8def\u6811\u4e0a\u7684\u8fb9\uff0c\u9ed1\u8272\u8fb9\u4e0d\u5c5e\u4e8e\u6700\u77ed\u8def\u6811\uff0c\u6211\u4eec\u5c06\u4e0d\u5c5e\u4e8e\u6700\u77ed\u8def\u6811\u7684\u8fb9\u79f0\u4e3a**\u975e\u6811\u8fb9**\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u628a\u6811\u8fb9\u6807\u8bb0\u4e3a\u7ea2\u8272\uff0c\u975e\u6811\u8fb9\u4e3a\u9ed1\u8272\u3002\n\n\u9898\u76ee\u6c42\u7684\u8def\u5f84\uff0c\u4e5f\u5c31\u662f\u5728\u4e0d\u7ecf\u8fc7\u6700\u77ed\u8def\u6811\u4e0a $i$ \u8282\u70b9\u5230\u5b83\u7236\u4eb2\u7684\u8fb9\u7684\u524d\u63d0\u4e0b\uff0c$1$ \u8282\u70b9\u5230 $i$ \u8282\u70b9\u7684\u6700\u77ed\u8def\uff0c\u4e3a\u65b9\u4fbf\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e3a**\u6700\u597d\u8def\u5f84**\u3002\n\n\u5f88\u663e\u7136\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u65ad\u5f00\u8fb9\u91cd\u6784\u6700\u77ed\u8def\u6811\u7684\u8bdd\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u8dd1\u4e86 $n$ \u904d\u6700\u77ed\u8def\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2\\log n)$\u3002\n\n\u6839\u636e\u6700\u77ed\u8def\u6811\u7684\u6027\u8d28\uff0c\u5728\u65ad\u5f00 $i$ \u8282\u70b9\u5230\u5b83\u7236\u4eb2\u7684\u8fb9\u540e\uff0c\u6700\u77ed\u8def\u4e00\u5b9a\u4f1a\u7ecf\u8fc7\u81f3\u5c11\u4e00\u6761\u975e\u6811\u8fb9\uff0c\u800c\u4e14**\u4ec5\u7ecf\u8fc7\u4e00\u6761\u975e\u6811\u8fb9**\uff0c\u56e0\u4e3a\u5982\u679c\u8be5\u8def\u5f84\u7ecf\u8fc7\u591a\u6761\u975e\u6811\u8fb9\uff0c\u90a3\u4e48\u603b\u6709\u4e00\u6761\u975e\u6811\u8fb9\u53ef\u4ee5\u7528\u6700\u77ed\u8def\u6811\u4e0a\u7684\u4e00\u6761\u4e0d\u5305\u542b\u88ab\u65ad\u5f00\u8fb9\u7684\u94fe\u66ff\u4ee3\u3002\n\n\u56e0\u6b64\uff0c\u65ad\u5f00\u8fb9\u540e\uff0c$1$ \u8282\u70b9\u5230 $i$ \u8282\u70b9\u7684\u6ee1\u8db3\u8981\u6c42\u7684\u6700\u77ed\u8def\u4e00\u5b9a\u662f `\u6811\u4e0a\u8def\u5f84-->\u975e\u6811\u8fb9-->\u6811\u4e0a\u8def\u5f84` \u7684\u5f62\u5f0f\u3002\n\n\u6211\u4eec\u505a\u5982\u4e0b\u5b9a\u4e49\uff1a\n+ $d_i$ \u8868\u793a $1$ \u5230 $i$ \u7684\u6700\u77ed\u8def\u957f\u5ea6\n+ $ans_i$ \u8868\u793a $1$ \u5230 $i$ \u7684\u6700\u597d\u8def\u5f84\u957f\u5ea6\n+ $L(u,v)$ \u8868\u793a \u6700\u77ed\u8def\u6811\u4e0a $u$ \u548c $v$ \u7684 LCA\n+ $w_{u,v}$ \u8868\u793a $u$ \u5230 $v$ \u7684\u8fb9\u6743\n\n![\u6b64\u5904\u5e94\u6709\u56fe\u7247](https://s4.ax1x.com/2022/01/08/7CTcCj.png)\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u6362\u4e00\u4e2a\u89d2\u5ea6\uff0c\u679a\u4e3e\u6bcf\u4e00\u6761\u975e\u6811\u8fb9\uff0c\u8003\u8651\u6709\u54ea\u4e9b\u8282\u70b9\u5230\u6e90\u70b9\u7684\u201c\u6700\u597d\u8def\u5f84\u201d\u53ef\u80fd\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u3002\u7ecf\u8fc7\u4e00\u4e9b\u8003\u8651\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u8fb9 $(u,v)$\uff0c\u4e00\u4e2a\u8282\u70b9 $i$ \u5230 $1$ \u7684\u6700\u597d\u8def\u5f84\u53ef\u80fd\u7ecf\u8fc7\u5b83\uff0c\u5f53\u4e14\u4ec5\u5f53 $i$ \u662f $L(u,v)$ \u7684\u540e\u4ee3\u4e14\u662f $u$ \u6216 $v$ \u7684\u7956\u5148\u3002\n\n![\u56fe\u7247](https://s4.ax1x.com/2022/01/08/7CbfKI.png)\n\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $i$\uff0c$ans_i=\\min\\limits_{u,v}{(d_v+w_{u,v}+d_u-d_i)}$\n\n\u56e0\u4e3a $d_i$ \u4e0d\u53d8\uff0c\u6240\u4ee5 $d_v+w_{u,v}+d_u-d_i$ \u53d6\u5f97\u6700\u5c0f\u503c\uff0c\u5f53\u4e14\u4ec5\u5f53 $d_v+w_{u,v}+d_u$ \u53d6\u5f97\u6700\u5c0f\u503c\u3002\n\n\u6240\u4ee5\uff0c\u5982\u679c\u5c06\u975e\u6811\u8fb9 $(u,v)$ \u6309 $d_u+w_{u,v}+d_v$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u518d\u679a\u4e3e\u8fd9\u6761\u8fb9\u80fd\u66f4\u65b0\u7684\u70b9\uff0c\u90a3\u4e48\u6bcf\u4e2a\u70b9\u7b2c\u4e00\u6b21\u88ab\u66f4\u65b0\u65f6\u7684 $ans_i$ \u5c31\u662f\u6700\u7ec8\u7b54\u6848\u3002\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u66f4\u65b0\u5b8c\u5c31\u5c06\u8fd9\u4e2a\u70b9\u5220\u9664\uff0c\u6b63\u786e\u6027\u4ecd\u4fdd\u8bc1\u3002\u7528\u5e76\u67e5\u96c6\u7f29\u70b9\u89e3\u51b3\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log n+m\\log m)$\n\n# Code\n\n\u5220\u9664\u4e0a\u4e00\u6761\u8fb9\u540e\u5982\u679c $1$ \u53f7\u8282\u70b9\u4e0d\u80fd\u5230\u8fbe $i$\uff0c\u8f93\u51fa $-1$\n\n~~\u7ffb\u8bd1\u8fd9\u9053\u9898\u7684\u4eba\u6f0f\u4e86\u597d\u591a\u8981\u7d20~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll,int> pr;\n\nint n,m;\nstruct edge{\n\tint v;\n\tll w;\n\tedge(){} edge(int v_,ll w_){ v=v_,w=w_; }\n};\nvector<edge> e[100005];\n\nll d[100005];\nint fa[100005][30],dep[100005];\n\npriority_queue<pr> q;\nvoid dijkstra(){\n\twhile(!q.empty()){ q.pop(); }\n\tfor(int i=1;i<=n;i++){ d[i]=-1; }\n\td[1]=0;q.push(make_pair(0,1));\n\twhile(!q.empty()){\n\t\tpr nw=q.top();q.pop();\n\t\tint u=nw.second;\n\t\tfor(int i=e[u].size()-1;i>=0;i--){\n\t\t\tint v=e[u][i].v;\n\t\t\tll w=e[u][i].w;\n\t\t\tif(d[v]==-1 || d[v]>d[u]+w){\n\t\t\t\td[v]=d[u]+w;\n\t\t\t\tfa[v][0]=u;\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(make_pair(-d[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid init(){\n\tfor(int j=1;j<=25;j++){\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfa[i][j]=fa[fa[i][j-1]][j-1];\n\t\t}\n\t}\n}\nint lca(int u,int v){\n\tif(dep[v]>dep[u]){\n\t\tswap(u,v);\n\t}\n\tfor(int i=25;i>=0;i--) if(dep[fa[u][i]]>=dep[v]) u=fa[u][i];\n\tfor(int i=25;i>=0;i--) if(fa[u][i]!=fa[v][i]){ u=fa[u][i];v=fa[v][i]; }\n\treturn fa[u][0];\n}\n\nstruct nont{\n\tint u,v;\n\tll w;\n\tnont(){} nont(int u_,int v_,ll w_){ u=u_,v=v_,w=w_; }\n};\nbool operator<(nont a,nont b){\n\treturn d[a.u]+d[a.v]+a.w < d[b.u]+d[b.v]+b.w;\n}\n\nnont nt[200005];int tp=0;\n\nll ans[100005];\n\nint nx[100005];\nint getfa(int u){\n\treturn (u==nx[u])?u:(nx[u]=getfa(nx[u]));\n}\n\nint main(){\n\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint a,b;ll t;\n\t\tscanf(\"%d%d%lld\",&a,&b,&t);\n\t\te[a].push_back(edge(b,t));\n\t\te[b].push_back(edge(a,t));\n\t}\n\n\tdijkstra();\n\tinit();\n\n\tfor(int i=1;i<=n;i++){\n\t\tans[i]=-1;\t// \u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u8def\u5f84\u4e00\u5b9a\u8981\u8f93\u51fa -1 \u5426\u5219 100Pts -> 40Pts\n\t\tnx[i]=i;\n\t\tfor(int j=e[i].size()-1;j>=0;j--){\n\t\t\tint u=i,v=e[i][j].v;\n\t\t\tll w=e[i][j].w;\n\t\t\tif(fa[v][0]!=u && fa[u][0]!=v && u<v){\n\t\t\t\tnt[++tp]=nont(u,v,w);\n\t\t\t}\n\t\t}\n\t}\n\tsort(nt+1,nt+tp+1);\n\n\tfor(int i=1;i<=tp;i++){\n\t\tint x=nt[i].u,y=nt[i].v;\n\t\tll kw=d[x]+d[y]+nt[i].w;\n\t\tint u=getfa(x),v=getfa(y);\n\t\twhile(u!=v){\n\t\t\tif(dep[u]<dep[v]){\n\t\t\t\tswap(u,v);\n\t\t\t}\n\t\t\tans[u]=kw-d[u];\n\t\t\tnx[u]=fa[u][0];\n\t\t\tu=getfa(u);\n\t\t}\n\t}\n\n\tfor(int i=2;i<=n;i++){\n\t\tprintf(\"%lld\\n\",ans[i]);\n\t}\n\n\treturn 0;\n\n}\n```\n",
        "postTime": 1641611760,
        "uid": 371818,
        "name": "juruo999",
        "ccfLevel": 7,
        "title": "P2934 [USACO09JAN]Safe Travel G \u9898\u89e3"
    },
    {
        "content": "## [USACO09JAN]Safe Travel G\n\n\u200b\t\u9898\u76ee\u94fe\u63a5\uff1a[[USACO09JAN]Safe Travel G](https://www.luogu.com.cn/problem/P2934)\n\n\u200b\t\u53c8\u662f\u4e00\u9053\u521d\u89c1\u6740\u7684\u9898\u76ee\uff0c\u8fd9\u9053\u9898\u662f\u8ddf**\u6700\u77ed\u8def\u6811**\u6709\u5173\u3002\u4f55\u4e3a\u6700\u77ed\u8def\u6811\uff1f\n\n\u200b\t\u8003\u8651\u4e00\u4e2a\u8fde\u901a\u65e0\u5411\u56fe $G$\uff0c\u4e00\u4e2a\u9876\u70b9 $v$ \u4e3a\u6839\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u6811 $T$ \u662f\u56fe $G$ \u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u7684\u751f\u6210\u6811\u2014\u2014\u6811 $T$ \u4e2d\u4ece\u6839\u8282\u70b9 $v$ \u5230\u5176\u4ed6\u9876\u70b9 $u$ \u7684\u8def\u5f84\u8ddd\u79bb\uff0c\u5728\u56fe $G$ \u4e2d\u662f $v$ \u5230 $u$ \u7684\u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u3002\n\n\u200b\t\u8fd9\u4e2a\u5b9a\u4e49\u8fd8\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u6784\u9020\u51fa\u6700\u77ed\u8def\u5f84\u6811\u5462\uff1f\u65e2\u7136\u8ddf\u6700\u77ed\u8def\u6709\u5173\uff0c\u6211\u4eec\u5148\u7528 Dijkstra \u7b97\u6cd5\u9884\u5904\u7406\u51fa\u56fe $G$ \u4e2d $v$ \u8282\u70b9\u5230\u5176\u4ed6\u6240\u6709\u9876\u70b9 $u$ \u7684\u6700\u77ed\u8ddd\u79bb\u3002\u7136\u540e\u5bf9\u4e8e\u4e00\u6761\u8fb9 $E$ \u8bbe\u5b83\u4e24\u7aef\u7684\u8282\u70b9\u4e3a $x,y$\uff0c\u8fb9\u6743\u503c\u4e3a $w$ \u5982\u679c $dis_x+w=dis_y$ \u5c31\u8bf4\u660e\u5728\u6700\u77ed\u8def\u5f84\u6811\u4e2d $x$ \u662f $y$ \u7684\u7236\u4eb2\u8282\u70b9\u3002\u8fd9\u6837\u5728\u672c\u9898\u4e2d\u662f\u6b63\u786e\u7684\u3002\u56e0\u4e3a\u636e\u9898\u610f\u63cf\u8ff0\uff0c\u6839\u8282\u70b9 $v$ \u5230\u4efb\u610f\u4e00\u4e2a\u9876\u70b9 $u$ \u7684\u8def\u5f84\u662f**\u552f\u4e00**\u7684\u3002\u8fd9\u4e48\u8fde\uff0c\u9996\u5148\u5b83\u662f**\u8fde\u901a**\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u90fd\u662f**\u5b58\u5728**\u7684\u3002\u5176\u6b21\uff0c\u4e00\u5171\u6709 $n$ \u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u5bf9\u9664\u4e86\u6839\u8282\u70b9 $v$ \u5916\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u627e\u4e86\u4e00\u4e2a\u7236\u4eb2\uff0c\u6240\u4ee5\u6709 $n-1$ \u6761\u8fb9\u3002\u90a3\u4e48\u6211\u4eec\u8fd9\u4e48\u6784\u9020\u51fa\u6765\u7684\u5c31\u662f\u4e00\u68f5**\u6700\u77ed\u8def\u5f84\u6811**\u4e86\u3002\n\n\u200b\t\u6784\u9020\u51fa\u4e00\u68f5\u6700\u77ed\u8def\u5f84\u6811\u540e\uff0c\u6211\u4eec\u6765\u8bd5\u7740\u6dfb\u52a0**\u65e0\u7528\u8fb9**\uff0c\u8fd9\u91cc\u7684\u65e0\u7528\u8fb9\u6307\u7684\u662f**\u9898\u76ee\u4e2d\u7ed9\u51fa\uff0c\u4f46\u6700\u77ed\u8def\u5f84\u6811\u4e2d\u6ca1\u7528\u5230\u7684\u8fb9**\u3002\u9996\u5148\u770b\u4e0b\u56fe\u3002\n\n[![WhPevF.png](https://z3.ax1x.com/2021/07/26/WhPevF.png)](https://imgtu.com/i/WhPevF)\n\n\u200b\t\u56fe\u4e2d\u7684\u7ea2\u8fb9\u662f\u4e00\u6761**\u65e0\u7528\u8fb9**\u3002\u8fb9\u6743\u4e3a $w$\uff0c\u800c\u4e24\u7aef\u8282\u70b9\u4e3a $x,y$ \u6211\u4eec\u6765\u8003\u8651\u4e0b\u600e\u4e48\u66f4\u65b0 $u$ \u70b9\u7684\u7b54\u6848\u3002\u5982\u679c\u8981\u66f4\u65b0 $u$ \u70b9\u7684\u8bdd\u90a3\u4e48\u53ea\u80fd\u901a\u8fc7\u65e0\u7528\u8fb9\u8d70\u8fc7\u53bb\u3002\u901a\u8fc7\u6700\u77ed\u8def\u5f84\u6811\u7684\u5b9a\u4e49\u53ef\u77e5\u3002\u4ece\u6839\u8282\u70b9\u5230\u4e00\u4e2a\u9876\u70b9 $u$ \u7684\u8ddd\u79bb\u4e3a $dis_u$\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u6027\u8d28\u53ef\u77e5\uff0c$u$ \u5230 $y$ \u7684\u8ddd\u79bb\u5c31\u4e3a $dis_y-dis_u$\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u77e5\uff1a\n$$\nans_u=\\min(ans_u,dis_x+w+dis_y-dis_u)\n$$\n\u200b\t\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u6761\u8fb9\uff0c\u5c06\u56fe\u4e2d\u8fd9\u4e2a\u73af\u6240\u6709\u7684\u9664\u4e86 LCA \u5916\u7684\u70b9\u5168\u90e8\u66f4\u65b0\u3002\u4e3a\u4ec0\u4e48LCA\u4e0d\u80fd\u66f4\u65b0\u5462\uff0c\u56e0\u4e3a LCA \u6700\u77ed\u8def\u5f84\u7684\u6700\u540e\u4e00\u6761\u8fb9\u4e0d\u5728\u8fd9\u4e2a\u5b50\u6811\u91cc\u4e86\u3002\n\n\u200b\t\u4f46\u662f\u8fd9\u4e48\u66f4\u65b0\u6211\u4eec\u7684\u65f6\u95f4\u662f\u80af\u5b9a\u627f\u53d7\u4e0d\u4f4f\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u91cd\u590d\u66f4\u65b0\u4e86\u8bb8\u591a\u70b9\u3002\u90a3\u80fd\u4e0d\u80fd\u8ba9\u6bcf\u4e2a\u70b9\u53ea\u66f4\u65b0\u4e00\u6b21\u5462\uff0c\u6211\u4eec\u8003\u8651\u5c06\u8fb9\u6392\u5e8f\uff0c\u5bf9\u4e8e\u66f4\u65b0\u7684\u70b9 $u$ \u6765\u8bf4 $dis_u$ \u662f\u4e0d\u53d8\u7684\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u6761\u8fb9$E$\uff0c\u5b83\u4e24\u8fb9\u7684\u8282\u70b9\u4e3a $x,y$\uff0c\u8fb9\u6743\u4e3a $w$\u3002\u6211\u4eec\u6309\u7167 $dis_x+dis_y+w$ \u4ece\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u5728\u7b2c\u4e00\u6b21\u66f4\u65b0\u65f6\u5c31\u662f\u5b83\u7684\u6700\u5c0f\u503c\u3002\n\n\u200b\t\u4f46\u662f\u6211\u4eec\u5728\u66f4\u65b0\u65f6\uff0c\u4f9d\u7136\u4f1a\u904d\u5386\u65e0\u7528\u7684\u70b9\u5bfc\u81f4\u65f6\u95f4\u590d\u6742\u5ea6\u4e1d\u6beb\u6ca1\u6709\u4e0b\u964d\uff0c\u90a3\u4e48\u6211\u4eec\u5f97\u8df3\u8fc7\u5df2\u7ecf\u66f4\u65b0\u8fc7\u7684\u70b9\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5e38\u89c4\u7684\u5957\u8def**\u5e76\u67e5\u96c6\u7f29\u70b9**\u3002\n\n\u200b\t[![WhAbf1.png](https://z3.ax1x.com/2021/07/26/WhAbf1.png)](https://imgtu.com/i/WhAbf1)\n\n\u200b\t\u8003\u8651\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u6211\u4eec\u5c06\u904d\u5386\u8fc7\u4e00\u6b21\u7684\u70b9 $i$ \u7684\u7956\u5148\u8bbe\u4e3a $i+1$\u3002\u7136\u540e\u6bcf\u6b21\u8bbf\u95ee\u6211\u4eec\u90fd\u8bbf\u95ee\u8fd9\u4e2a\u8282\u70b9\u7684\u7956\u5148\uff0c\u6548\u679c\u50cf\u56fe\u4e2d\u6240\u793a\uff0c\u5047\u8bbe 2\uff0c3\u90fd\u5df2\u7ecf\u88ab\u904d\u5386\u8fc7\uff0c\u6211\u4eec\u4ece1\u5f00\u59cb\u904d\u5386\uff0c\u904d\u5386\u52302\u65f6\uff0c\u7531\u4e8e\u8bbf\u95ee\u7684\u662f\u5b83\u7684\u7956\u5148\u8282\u70b9\uff0c\u6240\u4ee5\u76f4\u63a5\u4f1a\u8df3\u52304\u53bb\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86**\u4e0d\u91cd\u590d\u904d\u5386**\u7684\u76ee\u7684\u3002\n\n\u200b\t\u4e00\u7ef4\u6570\u7ec4\u5e76\u67e5\u96c6\u7f29\u70b9\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nfor(int i=1;i<=n;i=find(i+1))\n{\n\t.....//\u64cd\u4f5c\n\tf[i]=i+1; \n}\n```\n\n\u200b\t\u5e76\u67e5\u96c6\u7f29\u70b9\u7684\u4f18\u52bf\u5c31\u5728\u4e8e\u591a\u6b21\u904d\u5386\u540c\u4e00\u6bb5\u4e0d\u4f1a\u91cd\u590d\uff0c\u6211\u4eec\u5c06\u4e00\u7ef4\u6570\u7ec4\u60f3\u50cf\u6210\u4e00\u6761\u94fe\u8fd0\u7528\u5728\u6811\u4e0a\uff0c\u8fd9\u9898\u5c31\u6210\u4e86\uff0c\u6811\u4e0a\u5e76\u67e5\u96c6\u7f29\u70b9\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint u=edge[i].u,v=edge[i].v,w=edge[i].w;\n\t\tif(dis[u]+w==dis[v]||dis[v]+w==dis[u]) continue;\n\t\tint x=find(u),y=find(v);\n\t\twhile(x!=y)\n\t\t{\n\t\t\tif(dep[x]<dep[y]) swap(x,y);\n\t\t\tans[x]=dis[u]+dis[v]+w-dis[x];\n\t\t\tf[x]=fa[x];\n\t\t\tx=find(x);\n\t\t}\n\t}\n```\n\n\u200b\t\u5982\u679c $x$ \u76f4\u63a5\u8df3\u5230 LCA \u4e0a\u9762\u4e86\u4f1a\u4e0d\u4f1a\u6709\u95ee\u9898\u5462\uff1f\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4f1a\uff0c $x$ \u8df3\u5230 LCA \u4e0a\u9762\u8bf4\u660e LCA \u5df2\u7ecf\u66f4\u65b0\u8fc7\u4e86\uff0c\u8fd9\u65f6\u5019\u53e6\u4e00\u4e2a\u70b9\u8df3\u5230 LCA \u65f6\u5c31\u4f1a\u4e0e $x$ \u91cd\u5408\u3002\n\n\u200b\t\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e5+5;\nconst int MAXM = 2e5+5;\nconst int INF = 0x3f3f3f3f;\nint tot_E,head[MAXN],fa[MAXN],f[MAXN],dep[MAXN];\nint find(int x)\n{\n\treturn f[x]==x?x:f[x]=find(f[x]);\n}\nstruct E\n{\n    int to,w,pre;\n}e[MAXM<<1];\nvoid add(int u,int v,int w)\n{\n    e[++tot_E]=E{v,w,head[u]};\n    head[u]=tot_E;\n}\nint dis[MAXN],n,m,ans[MAXN];\nbool vis[MAXN];\nstruct node\n{\n    int p,dis;\n    bool operator < (const node &x)const\n    {\n        return dis>x.dis;\n    }\n};\nstruct Edge\n{\n    int u,v,w;\n    bool operator < (const Edge &x)const\n    {\n    \treturn dis[u]+dis[v]+w<(dis[x.u]+dis[x.v]+x.w);\n\t}\n}edge[MAXM<<1];\nvoid dij()\n{\n    priority_queue <node> q;\n    q.push(node{1,0});\n    memset(dis,0x3f,sizeof dis);\n    dis[1]=0;\n    while(!q.empty())\n    {\n        int p=q.top().p,dism=q.top().dis;\n        q.pop();\n        if(vis[p]) continue;\n        vis[p]=1;\n        for(int i=head[p];i;i=e[i].pre)\n        {\n            int to=e[i].to,w=e[i].w;\n            if(dis[to]>dism+w)\n            {\n                dis[to]=dism+w;\n                q.push(node{to,dis[to]});\n            }\n        }\n    }\n}\nvoid dfs(int cur ,int father)\n{\n\tfa[cur]=father;dep[cur]=dep[father]+1;\n\tfor(int i=head[cur];i;i=e[i].pre)\n\t{\n\t\tint to=e[i].to,w=e[i].w;\n\t\tif(to==father||dis[cur]+w!=dis[to]) continue;\n\t\tdfs(to,cur);\n\t}\n}\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=m;++i)\n    {\n        int a,b,t;\n        scanf(\"%d %d %d\",&a,&b,&t);\n        add(a,b,t);add(b,a,t);\n        edge[i].u=a,edge[i].v=b,edge[i].w=t;\n    }\n    memset(ans,0x3f,sizeof ans);ans[1]=0;\n    dij();\n    dfs(1,0);\n\tsort(edge+1,edge+1+m);\n\tfor(int i=1;i<=n;++i) f[i]=i;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint u=edge[i].u,v=edge[i].v,w=edge[i].w;\n\t\tif(dis[u]+w==dis[v]||dis[v]+w==dis[u]) continue;\n\t\tint x=find(u),y=find(v);\n\t\twhile(x!=y)\n\t\t{\n\t\t\tif(dep[x]<dep[y]) swap(x,y);\n\t\t\tans[x]=dis[u]+dis[v]+w-dis[x];\n\t\t\tf[x]=fa[x];\n\t\t\tx=find(x);\n\t\t}\n\t}\n    for(int i=2;i<=n;++i)\n    \tprintf(\"%d\\n\",ans[i]==INF?-1:ans[i]);\n    return 0;\n}\n```\n\n\u603b\u7ed3\uff1a\u6700\u77ed\u8def\u5f84\u6811\uff0c\u666e\u53ca\u7ec4\u7684\u77e5\u8bc6\u70b9\u6211\u5c45\u7136\u7b2c\u4e00\u6b21\u542c\u5230\uff0c\u8fd8\u662f\u89c1\u8bc6\u72ed\u5c0f\u4e86 \u3002\u4ee5\u53ca\u5728\u522b\u7684\u535a\u5ba2\u770b\u5230\u4e00\u53e5\u8bdd\u8fd8\u662f\u6bd4\u8f83\u6709\u7528\u7684\uff1a**\u5982\u679c\u9898\u76ee\u7ed9\u51fa\u6700\u77ed\u8def\u5f84\u552f\u4e00\uff0c\u90a3\u4e48\u5341\u6709\u516b\u4e5d\u4e0e\u6700\u77ed\u8def\u5f84\u6811\u6709\u5173\u3002**\n\n",
        "postTime": 1627306906,
        "uid": 141485,
        "name": "A_Sunny_Day",
        "ccfLevel": 0,
        "title": "[USACO09JAN]Safe Travel G"
    },
    {
        "content": "\u5148\u628a\u6700\u77ed\u8def\u6811\u5efa\u51fa\u6765\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\u4e00\u6761\u975e\u6811\u8fb9$(u,v)$\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u70b9$x$\u5728$v->lca(u,v)$\u7684\u8def\u5f84\u4e0a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8d70$1->u->v->x$\u8fd9\u6837\u7684\u8def\u5f84\u6765\u66f4\u65b0$x$\u7684\u7b54\u6848$val(u,v)+dis[u]+dis[v]-dis[x]$\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u4e0d\u592a\u597d\u533a\u95f4\u7ef4\u62a4\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u6bcf\u4e2a\u70b9\u7684\u6700\u4f18\u89e3\uff0c\u6211\u4eec\u628a\u8fb9\u6309\u7167$val(u,v)+dis[u]+dis[v]$\u6765\u6392\u5e8f\u5373\u53ef\uff0c\u8fd9\u6837\u5728\u524d\u9762\u7684\u8fb9\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u4e00\u5b9a\u6bd4\u540e\u9762\u4f18\uff0c\u56e0\u6b64\u6bcf\u4e2a\u70b9\u53ea\u8981\u66f4\u65b0\u4e00\u904d\uff0c\u5e76\u67e5\u96c6\u7ef4\u62a4\u5373\u53ef\u3002\n\n[$code$](https://pastebin.com/zjZeJFDZ)",
        "postTime": 1584777824,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2934 \u3010[USACO09JAN]Safe Travel G\u3011"
    },
    {
        "content": "\u795e\u9898\u3002\n\n\u9996\u5148\u662f\u7528$Dijkstra$\u5efa\u51fa\u6700\u77ed\u8def\u5f84\u6811\u3002\u5373\u4e3a\uff1a\u6240\u6709\u7684\u8fb9$(u,v,w)$\uff0c\u4f7f\u5f97$dis_u=dis_v+w$\u6210\u7acb\u3002\u56e0\u4e3a\u6570\u636e\u4fdd\u8bc1\uff0c\u8fd9\u4e2a\u8fb9\u96c6\u6784\u6210\u4e00\u9897\u6811\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5404\u79cd\u6811\u4e0a\u64cd\u4f5c\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u642c\u51fa\u7ecf\u5178\u8001\u9898[network](http://poj.org/problem?id=3417)\u4e86\u3002\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u6bcf\u6761\u975e\u6811\u8fb9\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u3002\n\n\u663e\u7136\uff0c\u4e00\u6761\u4ece$i$\u5230$1$\u7684\u65b0\u6700\u4f18\u8def\u5f84\uff0c\u80af\u5b9a\u662f\u8fd9\u6837\u7684\uff1a\n\n$i\\rightarrow i$\u5b50\u6811\u4e2d\u7684\u67d0\u4e2a\u70b9$j\\rightarrow$\u975e\u6811\u8fb9$(j,k,l)\\rightarrow$\u4e0d\u5728$i$\u5b50\u6811\u5185\u7684\u70b9$k \\rightarrow 1$\n\n\u800c\u8fd9\u6761\u8def\u5f84\u7684\u957f\u5ea6\u4e3a$dis_j+dis_k-dis_i+l$\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u540c\u4e00\u6761$(j,k,l)$\uff0c$dis_j+dis_k+l$\u662f\u5b9a\u503c\uff1b\n\n\u800c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u70b9$i$\uff0c$dis_i$\u4e5f\u662f\u5b9a\u503c\u3002\n\n\u8003\u8651\u8fb9$(j,k,l)$\u80fd\u5f71\u54cd\u5230\u7684\u70b9\u4e3a\uff1a\u8def\u5f84$[j,lca_{j,k})\\cup [k,lca_{j,k})$\u4e0a\u7684\u70b9\u3002\n\n\u6ce8\u610f\u4e0d\u5305\u62ec$lca_{j,k}$\uff0c\u56e0\u4e3a\u6b64\u65f6\u70b9$j,k$\u90fd\u5728\u5b83\u7684\u5b50\u6811\u91cc\u3002\n\n\u5219\u5bf9\u4e8e\u6bcf\u4e00\u6761$(j,k,l)$\uff0c\u5b83\u53ef\u4ee5\u5bf9$[j,lca_{j,k})\\cup [k,lca_{j,k})$\u4e0a\u7684\u70b9\u4ea7\u751f$dis_j+dis_k+l$\u7684\u8d21\u732e\u3002\n\n\u5982\u679c\u5c06\u6bcf\u4e00\u6761\u65b0\u8fb9\u6309\u7167$dis_j+dis_k+l$\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u5728\u6700\u77ed\u8def\u5f84\u6811\u4e0a\u7528\u6811\u94fe\u5256\u5206\u66b4\u529b\u8986\u76d6\uff08\u5c06\u4e24\u4e2a\u70b9\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u7684\u70b9\u6743\u8986\u76d6\u6210$dis_j+dis_k+l$\u3002\n\n\u5219\u6700\u540e\u70b9$i$\u7684\u7b54\u6848\u5c31\u662f$($\u6811\u5256\u4e2d\u70b9$i$\u6700\u540e\u88ab\u8986\u76d6\u7684\u70b9\u6743$)-dis_i$\u3002\n\n\u5982\u679c\u70b9$i$\u6ca1\u6709\u88ab\u8986\u76d6\u8fc7\uff0c\u5219\u7b54\u6848\u662f$-1$\u3002~~\uff08\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u56e0\u4e3a\u6ca1\u6709\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\u6211debug\u4e86\u4e00\u4e0b\u5348\u7684\uff09~~\n\n~~\u5e76\u67e5\u96c6\u662f\u770b\u4e0d\u61c2\u7684\uff0c\u8fd9\u8f88\u5b50\u90fd\u662f\u770b\u4e0d\u61c2\u7684\u3002~~\n\n\u603b\u590d\u6742\u5ea6\u4e3a$O(nlog_2^2n)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define lson x<<1\n#define rson x<<1|1\n#define mid ((l+r)>>1)\nint n,m,head[100100],cnt,dep[100100],fa[100100],dfn[100100],sz[100100],son[100100],top[100100],rev[100100],dis[100100],tot,tag[400100];\nstruct Edge{\n\tint to,next,val;\n}edge[400100];\nvoid ae(int u,int v,int w){\n\tedge[cnt].next=head[u],edge[cnt].to=v,edge[cnt].val=w,head[u]=cnt++;\n}\nstruct EDGE{\n\tint u,v,w;\n\tfriend bool operator <(const EDGE &x,const EDGE &y){\n\t\treturn x.w>y.w;\n\t}\n}e[200100];\nbool vis[100100];\npriority_queue<pair<int,int> >q;\nvoid Dijkstra(){\n\tmemset(dis,0x3f3f3f3f,sizeof(dis)),dis[1]=0,q.push(make_pair(0,1));\n\twhile(!q.empty()){\n\t\tint x=q.top().second;q.pop();\n\t\tif(vis[x])continue;vis[x]=true;\n\t\tfor(int i=head[x];i!=-1;i=edge[i].next)if(dis[edge[i].to]>dis[x]+edge[i].val)dis[edge[i].to]=dis[x]+edge[i].val,q.push(make_pair(-dis[edge[i].to],edge[i].to));\n\t}\n}\nvoid dfs1(int x,int Fa){\n\tsz[x]=1,fa[x]=Fa,dep[x]=dep[Fa]+1;\n\tfor(int i=head[x],y;i!=-1;i=edge[i].next){\n\t\tif((y=edge[i].to)==Fa)continue;\n\t\tdfs1(y,x),sz[x]+=sz[y];\n\t\tif(sz[y]>sz[son[x]])son[x]=y;\n\t}\n}\nvoid dfs2(int x){\n\tif(son[x]){\n\t\ttop[son[x]]=top[x];\n\t\trev[son[x]]=++tot;\n\t\tdfn[tot]=son[x];\n\t\tdfs2(son[x]);\n\t}\n\tfor(int i=head[x],y;i!=-1;i=edge[i].next){\n\t\ty=edge[i].to;\n\t\tif(y==fa[x]||y==son[x])continue;\n\t\ttop[y]=y,rev[y]=++tot,dfn[tot]=y;\n\t\tdfs2(y);\n\t}\n}\nvector<EDGE>v;\nvoid pushdown(int x){\n\tif(!tag[x])return;\n\ttag[lson]=tag[rson]=tag[x];\n\ttag[x]=0;\n}\nvoid modify(int x,int l,int r,int L,int R,int val){\n\tif(l>R||r<L)return;\n\tif(L<=l&&r<=R){tag[x]=val;return;}\n\tpushdown(x),modify(lson,l,mid,L,R,val),modify(rson,mid+1,r,L,R,val);\n}\nint query(int x,int l,int r,int P){\n\tif(l>P||r<P)return 0;\n\tif(l==r)return tag[x];\n\tpushdown(x);\n\treturn query(lson,l,mid,P)+query(rson,mid+1,r,P);\n}\nvoid Add(int x,int y,int w){\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]])swap(x,y);\n//\t\tprintf(\"N:%d %d %d\\n\",top[x],x,w);\n\t\tmodify(1,1,n,rev[top[x]],rev[x],w);\n\t\tx=fa[top[x]];\n\t}\n\tif(dep[x]>dep[y])swap(x,y);\n\tif(rev[x]!=rev[y])modify(1,1,n,rev[x]+1,rev[y],w);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m),memset(head,-1,sizeof(head));\n\tfor(int i=1,x,y,z;i<=m;i++)scanf(\"%d%d%d\",&x,&y,&z),ae(x,y,z),ae(y,x,z),e[i].u=x,e[i].v=y,e[i].w=z;\n\tDijkstra(),memset(head,-1,sizeof(head)),cnt=0;\n\tfor(int i=1;i<=m;i++){\n\t\tif(dis[e[i].u]==dis[e[i].v]+e[i].w||dis[e[i].v]==dis[e[i].u]+e[i].w)ae(e[i].u,e[i].v,e[i].w),ae(e[i].v,e[i].u,e[i].w);\n\t\telse e[i].w+=dis[e[i].u]+dis[e[i].v],v.push_back(e[i]);\n\t}\n//\tfor(int i=1;i<=n;i++)printf(\"%d \",dis[i]);puts(\"\");\n//\tfor(int i=0;i<v.size();i++)printf(\"%d %d %d\\n\",v[i].u,v[i].v,v[i].w);\n\tsort(v.begin(),v.end());\n\tdfs1(1,0),dfn[1]=rev[1]=top[1]=tot=1,dfs2(1);\n\tfor(int i=0;i<v.size();i++)Add(v[i].u,v[i].v,v[i].w);\n\tfor(int i=2;i<=n;i++){\n\t\tint t=query(1,1,n,rev[i]);\n\t\tif(t)printf(\"%d\\n\",t-dis[i]);\n\t\telse puts(\"-1\");\n\t}\n\treturn 0;\n}\n/*\n7 10\n1 3 2\n1 2 4\n1 4 2\n4 3 4\n2 3 6\n2 5 1\n5 6 4\n5 7 8\n7 6 1\n7 3 1\n*/\n```\n\u6700\u540e\u9644\u8d60\u4e86\u4e00\u7ec4\u6837\u4f8b\u65b9\u4fbf\u540e\u4eba\uff0c\u7b54\u6848\u5e94\u4e3a$8,6,6,8,9,10$\u3002",
        "postTime": 1578134666,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2934 \u3010[USACO09JAN]\u5b89\u5168\u51fa\u884cSafe Travel\u3011"
    },
    {
        "content": "\u9996\u5148\u4e00\u8fb9dijkstra\u6c42\u51fa\u6700\u77ed\u8def\u6811\u3002\n\n\u5173\u4e8e\u6bcf\u4e2a\u8282\u70b9x\uff0c\u9898\u76ee\u4f1a\u65ad\u6389\u5b83\u5728\u6700\u77ed\u8def\u4e0a\u4e0e\u7236\u8282\u70b9\u76f8\u8fde\u7684\u90a3\u6761\u8fb9\u3002\n\n\u65ad\u6389\u8fd9\u6761\u8fb9\u540e\uff0c\u6811\u4f1a\u88c2\u6210\u4e24\u9897\uff0c\u5206\u522b\u89c6\u4e3aS\u3001T\uff0c\u5176\u4e2dx\u662fT\u7684\u6839\u8282\u70b9\u3002\n\n\u5173\u4e8e\u6bcf\u4e2ax\uff0c\u5b83\u4e00\u5b9a\u7531\u4e00\u6761\u975e\u6811\u8fb9\u66f4\u65b0\u800c\u6765\u3002\u5047\u8bbe\u975e\u6811\u8fb9\u4e00\u7aef\u4e3au\uff0c\u53e6\u4e00\u7aef\u4e3av\uff0c\u8fb9\u957f\u4e3az\uff0cv\u5728T\u4e2d\uff0c\u90a3\u4e48\u8fd9\u65f6x\u7684\u6b21\u77ed\u8def\u7684\u4e00\u4e2a\u5019\u8865\u7b54\u6848\u4e3adis[u]+dis[v]+z-dis[x].\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5173\u4e8e\u6bcf\u6761\u975e\u6811\u8fb9\u548c\u6bcf\u4e2a\u70b9\uff0cdis[u]+dis[v]+z\u3001dis[x]\u90fd\u4e3a\u4e0d\u53d8\u7684\u91cf\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u975e\u6811\u8fb9\u6309\u7167dis[u]+dis[v]+z\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u90a3\u4e48\u7b2c\u4e00\u6b21\u66f4\u65b0\u5230x\u8282\u70b9\u65f6\u7684\u7b54\u6848\u5c31\u662f\u6700\u4f18\u7b54\u6848\u3002\n\n\u5173\u4e8e\u6bcf\u6761\u975e\u6811\u8fb9u\u3001v\uff0c\u6211\u4eec\u6267\u884c\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u8df3lca\u7684\u8fc7\u7a0b\uff0c\u5728\u5408\u5e76\u7684\u8fc7\u7a0b\u4e2d\u66f4\u65b0\u7b54\u6848\u3002\u56e0\u4e3a\u7b2c\u4e00\u6b21\u6c42\u51fa\u7684\u89e3\u5c31\u662f\u6700\u4f18\u89e3\uff0c\u6211\u4eec\u5c06\u6240\u6709\u6c42\u51fa\u7b54\u6848\u7684\u70b9\u5408\u5e76\u5230lca(u,v)\u3002\n\n\u6ce8\u610flca(u,v)\u4e0d\u80fd\u88ab\u66f4\u65b0\uff0c\u56e0\u4e3a\u8fd9\u65f6\u5019\u5df2\u7ecf\u4e0d\u5904\u4e8e\u4e24\u9897\u4e0d\u540c\u7684\u6811\u4e2d\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<string>\n#include<queue>\nusing namespace std;\ntypedef long long ll;\nconst int size=2e5+10;\nstruct node{int x,y,z;}c[size];\nint n,m,tot,cnt,w,x[size],y[size],z[size],fa[size],d[size],dis[size],vis[size],ans[size];\nint head[size],ver[size*2],next[size*2],edge[size*2];\npriority_queue<pair<int,int> >q;\ninline ll read(){\n\tll x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\ninline bool operator<(const node&a,const node&b){\n\treturn a.z<b.z;\n}\ninline void add(int px,int py,int pz){\n\tver[++tot]=py;edge[tot]=pz;next[tot]=head[px];head[px]=tot;\n}\ninline int get(int px,int py){\n\tif(px==py) return px;\n\tif(d[px]<d[py]) swap(px,py);\n\tif(!ans[px]) ans[px]=w-dis[px];\n\treturn get(fa[px],py);\n}\ninline void dijkstra(){\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[1]=0;q.push(make_pair(0,1));\n\twhile(q.size()){\n\t\tint px=q.top().second;q.pop();\n\t\tif(vis[px]) continue;\n\t\tvis[px]=1;\n\t\tfor(int i=head[px];i;i=next[i]){\n\t\t\tint py=ver[i],pz=edge[i];\n\t\t\tif(dis[py]>dis[px]+pz){\n\t\t\t\tfa[py]=px;dis[py]=dis[px]+pz;\n\t\t\t\tif(!vis[py]) q.push(make_pair(-dis[py],py));\n\t\t\t}\n\t\t}\n\t}\n}\ninline int solve(int px){\n\tif(d[px]) return d[px];\n\treturn d[px]=solve(fa[px])+1;\n}\nint main(){\n\tn=read();m=read();fa[1]=1;\n\tfor(int i=1;i<=m;i++){\n\t\tx[i]=read();y[i]=read();z[i]=read();\n\t\tadd(x[i],y[i],z[i]);add(y[i],x[i],z[i]);\n\t}\n\tdijkstra();d[1]=1;\n\tfor(int i=2;i<=n;i++) d[i]=solve(i);\n\tfor(int i=1;i<=m;i++){\n\t\tint px=x[i],py=y[i],pz=z[i];\n\t\tif(dis[px]>dis[py]) swap(px,py);\n\t\tif(dis[px]+pz==dis[py]) continue;\n\t\tc[++cnt]=(node){px,py,dis[px]+dis[py]+pz};\n\t}\n\tsort(c+1,c+1+cnt);\n\tfor(int i=1;i<=cnt;i++){\n\t\tint px=c[i].x,py=c[i].y;\n\t\tw=c[i].z;get(px,py);\n\t}\n\tfor(int i=2;i<=n;i++){\n\t\tif(!ans[i]) printf(\"-1\\n\");\n\t\telse printf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1544842345,
        "uid": 53032,
        "name": "\u5c0f\u5858\u7a7a\u660e",
        "ccfLevel": 0,
        "title": "P2934 [USACO09JAN]\u5b89\u5168\u51fa\u884cSafe Travel"
    },
    {
        "content": "\u5148\u5efa\u51fa\u6700\u77ed\u8def\u6811\uff0c\u53d1\u73b0\u9898\u76ee\u4e2d\u7684\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u627e\u5230\u4e00\u6761\u8def\u5f84\uff0c\u5f62\u5982 $1 \\rightarrow x \\rightarrow y \\rightarrow i$\u3002\n\n\u5176\u4e2d $x$ \u662f $i$ \u7684\u513f\u5b50\uff0c\u800c $y$ \u662f\u4efb\u610f\u4e00\u4e2a\u4e0d\u5728 $i$ \u5b50\u6811\u5185\u7684\u70b9\u3002\u7b54\u6848\u5373\u4e3a $dist_x - dist_i + dist_y + w_{x,y}$\u3002\n\n\u4f46\u8fd9\u6837\u4ecd\u7136\u4e0d\u597d\u505a\uff0c\u6211\u4eec\u8003\u8651\u4ece\u679a\u4e3e $i$ \u53d8\u6210\u679a\u4e3e $x,y$\u3002\n\n\u6211\u4eec\u5148\u627e\u5230\u6240\u6709\u4e0d\u5728\u6700\u5c0f\u8def\u5f84\u6811\u7684\u8fb9\uff0c\u4ed6\u4eec\u7684\u8d21\u732e\u53ea\u4f1a\u4f5c\u7528\u5728 $x \\rightarrow lca(x,y) \\rightarrow y$ \u7684\u8fd9\u4e00\u6761\u94fe\u4e0a\uff0c\u6811\u5256\u5373\u53ef\u505a\u5230 $O(n\\log^2 n)$\u3002\n\n\u4f46\u662f\u8fd9\u662f\u4e0d\u597d\u5199\u7684\u3002\u8003\u8651[\u8fd9\u9898](https://www.luogu.com.cn/problem/P4374)\u7684\u4e00\u4e2a\u5c0ftrick\uff0c\u5c06\u6240\u6709\u7684\u8fb9\u6309\u7167\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u53d1\u73b0\u6bcf\u4e2a\u70b9\u53ea\u6709\u5728\u7b2c\u4e00\u6b21\u88ab\u66f4\u65b0\u7684\u65f6\u5019\u624d\u6709\u8d21\u732e\u3002\u4e8e\u662f\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u70b9\u5728\u5904\u7406\u5b8c\u4e4b\u540e\u5408\u5e76\u5230\u4ed6\u7684\u7236\u4eb2\u8282\u70b9\u4e0a\uff0c\u8fd9\u6837\u6bcf\u4e2a\u8282\u70b9\u81f3\u591a\u4f1a\u88ab\u8bbf\u95ee\u5230\u4e00\u6b21\uff0c\u590d\u6742\u5ea6\u6b63\u786e\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define vi vector<int>\n#define pii pair<int,int>\n#define pb(x) push_back(x)\n#define lowbit(x) x&-x\nusing namespace std;\nconst int N=1e5+10;\nconst int inf=1e9;\nstruct node{\n\tint to,nxt,w,in;\n}a[N<<2];\nstruct edge{\n\tint x,y,w;\n}e[N<<2];\nvi v[N];\nbool vist[N];\nint n,m,T,dist[N],head[N],cnt=1,fa[N],tot,f[N],ans[N];\ninline int read(){\n\tint s=0,f=0;\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0') f|=(ch=='-'),ch=getchar();\n\twhile(ch<='9'&&ch>='0') s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn f?-s:s;\n}\ninline void add(int from,int to,int w){\n\ta[++cnt]=(node){to,head[from],w,0};\n\thead[from]=cnt;\n}\ninline void dij(){\n\tpriority_queue<pii> q;\n\tmemset(dist,0x3f,sizeof(dist));\n\tdist[1]=0;\n\tq.push((pii){0,1});\n\twhile(!q.empty()){\n\t\tint f=q.top().second;q.pop();\n\t\tif(vist[f]) continue;\n\t\tvist[f]=1;\n\t\tfor(register int i=head[f];i;i=a[i].nxt){\n\t\t\tint to=a[i].to;\n\t\t\tif(dist[to]>dist[f]+a[i].w){\n\t\t\t\tfa[to]=i;\n\t\t\t\tdist[to]=dist[f]+a[i].w;\n\t\t\t\tq.push((pii){-dist[to],to});\n\t\t\t}\n\t\t}\n\t}\n\treturn ;\n}\ninline bool cmp(edge a,edge b){\n\treturn a.w<b.w;\n}\ninline void getfa(int x,int Fa){\n\tfa[x]=Fa;\n\tfor(register int i=0;i<(int)v[x].size();++i) if(v[x][i]!=Fa) getfa(v[x][i],x);\n}\ninline int find(int x){\n\tif(f[x]==x) return x;\n\treturn f[x]=find(f[x]);\n}\nmap<pii,int> mp;\nint main(){\n\tn=read(),m=read();\n\tfor(register int i=1;i<=m;++i){\n\t\tint u=read(),v=read(),w=read();\n\t\tadd(u,v,w),add(v,u,w);\n\t}\n\tdij();\n\tfor(register int i=1;i<=n;++i) a[fa[i]].in=1;\n\tfor(register int i=1;i<=n;++i){\n\t\tfor(register int j=head[i];j;j=a[j].nxt){\n\t\t\tif(a[j].in||a[j^1].in) v[i].pb(a[j].to);\n\t\t\telse{\n\t\t\t\tif(!mp[(pii){a[j].to,i}]){\n\t\t\t\t\te[++tot]=(edge){i,a[j].to,dist[i]+dist[a[j].to]+a[j].w};\n\t\t\t\t\tmp[(pii){i,a[j].to}]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tgetfa(1,0);\n\tsort(e+1,e+tot+1,cmp);\n\tfor(register int i=1;i<=n;++i) f[i]=i,ans[i]=inf;\n\tfor (register int i=1;i<=tot;++i){\n        int x=find(e[i].x),y=find(e[i].y);\n        while(x!=y){\n            if(dist[x]<dist[y]) swap(x,y);\n            ans[x]=e[i].w-dist[x];\n            f[x]=fa[x],x=find(x);\n        }\n    }\n    for(register int i=2;i<=n;++i) printf(\"%d\\n\",(ans[i]==inf?-1:ans[i]));\n\treturn 0;\n}\n```",
        "postTime": 1668587002,
        "uid": 428089,
        "name": "HMZHMZHMZ",
        "ccfLevel": 7,
        "title": "P2934"
    }
]