[
    {
        "content": "### \u601d\u8def\n\n\u6b63\u89e3\uff08?\uff09\uff1a\u6876\uff08?\uff09\n\n\u770b\u5b8c\u9898\u76ee\u540e\uff0c\u7b2c\u4e00\u773c\u5c31\u53d1\u73b0\uff0c\u8fd9\u4e0d\u5c31\u662f\u9053~~\u6c34\u6a21\u62df~~\u5417\uff08\u96fe\uff09\n\n\u7531\u4e8e\u6570\u636e\u8303\u56f4\u5c0f\u7684\u5f88 $n\\le100$\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7528\u4e00\u4e2a\u6876\u6765\u8bb0\u5f55 $Mirko$ \u4e0d\u559c\u6b22\u7684\u914d\u6599\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),t[a[i]]=1;\n```\n\u63a5\u4e0b\u6765\uff0c\u5f53\u8f93\u5165\u62ab\u8428\u7684\u914d\u6599\u65f6\uff0c\u7528\u4e00\u4e2a\u6807\u8bb0\u6765\u8bf4\u660e\u5f53\u524d\u62ab\u8428\u6709\u65e0 $Mirko$ \u4e0d\u559c\u6b22\u7684\u914d\u6599\uff0c\u5982\u679c\u5f53\u524d\u62ab\u8428\u65e0\u4ed6\u4e0d\u559c\u6b22\u7684\u914d\u6599\uff0c\u90a3\u4e48\u5c31ans++\n```cpp\nfor(int j=1;j<=k;j++){\n\tscanf(\"%d\",&x);\n\tif(t[x]) trap=1;\n}\n```\n\n\n\u6ca1\u9519\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\uff0c\u63a5\u4e0b\u6765\u653e\u51faAC\u4ee3\u7801\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(mk+n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(max(A_{i}))$\n\n### AC\u4ee3\u7801\uff08\u6709\u6ce8\u91ca\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,ans;\nint a[105],b[105],t[105];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),t[a[i]]=1;//\u8f93\u5165Mirko\u4e0d\u559c\u6b22\u7684\u914d\u6599\uff0c\u5e76\u7528\u6876\u6807\u8bb0 \n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint k,x,trap=0;scanf(\"%d\",&k);//k\u4ee3\u8868\u5f53\u524d\u62ab\u8428\u6709\u51e0\u4e2a\u914d\u6599\uff0cx\u4ee3\u8868\u662f\u54ea\u79cd\u914d\u6599\uff0ctrap\u6807\u8bb0\u5f53\u524d\u62ab\u8428\u6709\u65e0Mirko\u4e0d\u559c\u6b22\u7684\u914d\u6599 \n\t\tfor(int j=1;j<=k;j++){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(t[x]) trap=1;//\u5982\u679c\u5f53\u524d\u914d\u6599Mirko\u4e0d\u559c\u6b22\uff0c\u5219\u6807\u8bb0\u4e3a1\n\t\t}\n\t\tif(trap==0) ans++;//\u5982\u679c\u6ca1\u6709\u88ab\u6807\u8bb0\uff0c\u5219ans++ \n\t}\n\tprintf(\"%d\",ans);\n}\n```\n\n\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u671b\u7ba1\u7406\u5458\u901a\u8fc7\n\n",
        "postTime": 1611322117,
        "uid": 209808,
        "name": "\u94f6\u6cb3AI",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P7280 \u3010[COCI2020-2021#4] Pizza\u3011"
    },
    {
        "content": "# \u63d2\u8bdd\n~~\u5403\u4ec0\u4e48\u62ab\u8428\u6c49\u5821\u5b83\u4e0d\u9999\u5417~~\n# \u601d\u8def\n\u4ed6\u663e\u7136\u662f\u60f3\u8981\u6211\u4eec\u6328\u4e2a\u626b\uff0c\u7136\u540e\u8fdb\u884c\u6807\u8bb0\uff0c\u6700\u540e\u8f93\u51fa\u5c31\u597d\u4e86\n## \u5199\u6cd5\n\u5199\u4e00\u4e2a\u5b50\u7a0b\u5e8f\uff0c\u5bf9\u6570\u636e\u6807\u8bb0\uff0c\u7136\u540e\u5728\u4e3b\u7a0b\u5e8f\u8c03\u7528\u5c31\u597d\u4e86\n# AC\u4ee3\u7801\u770b\u8fd9\u91cc\uff01\n```cpp\n# include <cstdio>\n# include <iostream>\n# include <cstring>\n# include <cmath>\n# include <queue>\n# include <algorithm>\n# include <string>//\u4e00\u5806\u5934\u6587\u4ef6 \nusing namespace std;\nint m, k, dl[105], pln[105], pl[105][105], ans = 0;//\u53d8\u91cf\u4eec \nbool eat(int x)//\u5403 \n{\n\tfor(int i = 1 ; i <= pln[x] ; i++){\n\t\tfor(int j = 1 ; j <= m ; j++)\n\t\t\tif(pl[x][i] == dl[j])\n\t\t\t\treturn false;\n\t}\n\treturn true;\n}\n\nint main()\n{\n\tcin >> m;\n\tfor(int i = 1 ; i <= m ; i++)\n\t\tcin >> dl[i];\n\tcin >> k;\n\tfor(int i = 1 ; i <= k ; i++){\n\t\tcin >> pln[i];\n\t\tfor(int j = 1 ; j <= pln[i] ; j++)\n\t\t\tcin >> pl[i][j];\n\t\tif(eat(i)) ans++;//\u8c03\u7528 \n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n\u5e0c\u671b\u7ba1\u7406\u5458\u5927\u5927\u8fc7\u4e86\u5427\uff01\u849f\u84bb\u5199\u4e861\u4e2a\u591a\u5c0f\u65f6\u5462\uff01",
        "postTime": 1611236271,
        "uid": 137173,
        "name": "CoronaQL",
        "ccfLevel": 0,
        "title": "pizza"
    },
    {
        "content": "## \u524d\u8a00\n\u540c\u673a\u623f\u7684\u90fd\u5728\u505a\u751f\u6210\u51fd\u6570\u795e\u4ed9\u9898\uff0c\u6211\u592a\u83dc\u4e86\uff0c\u5c31\u6765\u5207\u4e2a\u7ea2\u9898\u6c34\u4e2a\u9898\u89e3\u5427\u3002\n## \u601d\u8def\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u67d0\u4e2a\u62ab\u8428**\u72ec\u7acb**\u8003\u8651\uff0c\u5373\u6bcf\u4e2a\u62ab\u8428\u4e4b\u95f4\u6ca1\u6709\u5173\u7cfb\u3002\n\n\u6839\u636e\u9898\u76ee\uff0c\u53ea\u8981\u4e00\u4e2a\u62ab\u8428\u4e2d\u6ca1\u6709 Mirko \u4e0d\u559c\u6b22\u7684\u914d\u6599\uff0c\u8fd9\u4e2a\u62ab\u8428\u5c31\u80fd\u9009\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u914d\u6599\u5224\u65ad\u662f\u5426\u662f Mirko \u4e0d\u559c\u6b22\u7684\uff0c\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u6cd5\uff1a\n\n1. \u66b4\u529b\u679a\u4e3e Mirko \u4e0d\u559c\u6b22\u7684\u914d\u6599\u4e2d\u662f\u5426\u6709\u8fd9\u4e2a\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\text{O}(nmk)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\text{O}(n)$\uff0c\u7801\u91cf\u5c0f\u3002\n\n2. \u5f00\u6876\u8bb0\u5f55\u6bcf\u4e2a\u914d\u6599\u662f\u5426\u662f Mirko \u4e0d\u559c\u6b22\u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\text{O}(n+mk)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\text{O}(a_i)$\uff0c\u7801\u91cf\u5c0f\u3002\n\n3. \u7528 Hash \u8868\u4ee3\u66ff\u5f00\u6876\u8fc7\u7a0b\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\text{O}(n+mk)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\text{O}(n)$\uff0c\u5982\u679c\u4e0d\u4f7f\u7528 ``std::unordered_map`` \u7801\u91cf\u8f83\u5927\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u62ab\u8428\uff0c\u5982\u679c\u6211\u4eec\u80fd\u9009\uff0c\u5219\u4e00\u5b9a\u9009\uff0c\u6700\u7ec8\u7b54\u6848\u5373\u4e3a\u80fd\u9009\u7684\u6570\u91cf\u3002\n## \u4ee3\u7801\n\u4ee3\u7801\u5b9e\u73b0\u4f7f\u7528\u4e86\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nint f[103];\nsigned main()\n{\n    int n=read(),ans=0;\n    for(int i=1; i<=n; i++) f[read()]=1;\n    for(int t=read(),x; t--;)\n    {\n    \tx=read();\n    \tbool g=1;\n    \tfor(int i=1; i<=x; ++i) if(f[read()]==1) g=0;\n    \tans+=g;\n    }\n    printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1611045768,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P7280 \u3010[COCI2020-2021#4] Pizza\u3011"
    },
    {
        "content": "# \u9898\u610f\n\u7565\n# \u5206\u6790\n\u6b64\u9898\u8f83\u4e3a\u7b80\u5355\u3002\u57fa\u672c\u601d\u8def\u4e3a\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u62ab\u8428\uff0c\u679a\u4e3e\u5176\u914d\u6599\uff0c\u518d\u679a\u4e3e\u4e0d\u559c\u6b22\u7684\u914d\u6599\uff0c\u5982\u76f8\u540c\uff0c\u5219\u5c06 $flag$ \u53d8\u91cf\u8bbe\u4e3a $false$\u3002\u82e5\u7a77\u4e3e\u540e $flag$ \u4ecd\u4e3a\u771f\uff0c\u5219\u8ba1\u6570\u5668 $cnt$ \u52a0\u4e00\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3)$\u3002\u5176\u4e2d\uff0c\u4e00\u5c42\u7528\u4e8e\u8f93\u5165\u6bcf\u4e2a\u62ab\u8428\uff0c\u4e00\u5c42\u8f93\u5165\u914d\u6599\uff0c\u4e00\u5c42\u679a\u4e3e\u4e0d\u559c\u6b22\u7684\u914d\u6599\u5224\u65ad\u3002\n# \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint dl[110];//\u5b9a\u4e49\u4e0d\u559c\u6b22\u7684\u6570\u7ec4Dislike\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor (register int i=1;i<=n;++i)// register \u53ef\u4ee5\u53bb\u6389\n\t{\n\t\tscanf(\"%d\",&dl[i]);\n\t}\n\tint m;\n\tscanf(\"%d\",&m);\n\tint cnt=0;//\u8ba1\u6570\u5668 \n\tfor (register int i=1;i<=m;++i)\n\t{\n\t\tint num;//\u914d\u6599\u4e2a\u6570 \n\t\tscanf(\"%d\",&num);\n\t\tbool flag=true;//\u80fd\u5426\u9009\u62e9 \n\t\tfor (register int j=1;j<=num;++j)\n\t\t{\n\t\t\tint now;//\u73b0\u5728\u7684\u914d\u6599 \n\t\t\tscanf(\"%d\",&now);\n\t\t\tfor (register int k=1;k<=n;++k)\n\t\t\t{\n\t\t\t\tif (dl[k]==now)//\u5982\u76f8\u540c\u5219\u9000\u51fa\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tflag=false; \n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (flag==true)\n\t\t{\n\t\t\t++cnt;\n\t\t} \n\t}\n\tprintf(\"%d\",cnt); \n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n\n```",
        "postTime": 1611052604,
        "uid": 385748,
        "name": "\u6e21\u9e262007",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P7280 \u3010[COCI2020-2021#4] Pizza\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6bd4\u8f83\u7b80\u5355\u7684\u539f\u56e0\u662f\u6570\u636e\u653e\u5bbd\u4e86\uff0c\u5927\u4e00\u4e9b\u7684\u8bdd\u96be\u5ea6\u4f1a\u72c2\u6da8\u3002\n\n\u6709$n$\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u6709\u82e5\u5e72\u7279\u5f81\u503c\uff0c\u53e6\u6709\u4e00\u4e2a\u5143\u7d20\u5217\u8868$k$\uff0c\u95ee$n$\u4e2a\u5143\u7d20\u4e2d\u6709\u51e0\u4e2a\u5143\u7d20\u7684\u7279\u5f81\u503c\u548c\u8fd9\u4e2a\u5143\u7d20\u5217\u8868$k$\u65e0\u4ea4\u96c6\u3002\n\n### $SOLUTION$\n\n\u6309\u9898\u610f\u6a21\u62df\u5373\u53ef\uff0c\u5148\u8bfb\u5165$k$\uff0c\u63a5\u4e0b\u6765\u6bcf\u8bfb\u5165\u4e00\u4e2a$n_i$\u548c\u4ed6\u7684\u7279\u5f81\uff0c\u5c31\u7528$O(n^2)$\u5224\u65ad\uff0c\u603b\u590d\u6742\u4e3a$O(n^3)$\uff0c\u80fd\u901a\u8fc7$1e2$\u7684\u6570\u636e\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define F(i,j,r) for(int i=j;i<=r;++i)\n\nusing namespace std;\n#define N 105\n\nint n,m,x,ans=0,tot;\nint bad[N]; \nint main(){\n\tscanf(\"%d\",&n);\n\tF(i,1,n)scanf(\"%d\",&bad[i]);\n\tscanf(\"%d\",&m);\n\tF(i,1,m){\n\t\tbool flag=true;\n\t\tscanf(\"%d\",&tot);\n\t\tF(j,1,tot){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tF(k,1,n)\n\t\t\tif(x==bad[k]){\n\t\t\t\tflag=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tans+=flag;\n\t}\n\tprintf(\"%d\\n\",ans);\n    return 0;\n}\n\n```\n\n$wtrl$",
        "postTime": 1610872593,
        "uid": 368225,
        "name": "WinterRain208",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P7280 \u3010[COCI2020-2021#4] Pizza\u3011"
    },
    {
        "content": "\u8003\u8651\u5728\u8f93\u5165\u7b2c\u4e00\u884c\u65f6\u6807\u8bb0\u54ea\u4e9b\u98df\u6750\u4e0d\u80fd\u7528\uff0c\u7136\u540e\u5728\u8f93\u5165\u6bcf\u4e2a\u62ab\u8428\u65f6\u679a\u4e3e\u8be5\u62ab\u8428\u7684\u6bcf\u4e2a\u914d\u6599\uff0c\u82e5\u8be5\u62ab\u8428\u7684\u914d\u6599\u5747\u672a\u88ab\u6807\u8bb0\uff0c\u5219\u7b54\u6848\u52a0 $1$\uff1b\u5426\u5219\uff0c\u7b54\u6848\u4e0d\u53d8\u3002\n\n\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\u6ce8\u91ca\u3002\n\n\u4ee3\u7801\uff1a\n```c\n#include <stdio.h>\n#include <stdbool.h>\n\nbool mark[107];\n\nint main(){\n\tint n, m, ans = 0;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++){\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tmark[x] = true; // \u6807\u8bb0\u8be5\u98df\u6750\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\n\t}\n\tscanf(\"%d\", &m);\n\tfor (int i = 1; i <= m; i++){\n\t\tint k;\n\t\tbool flag = true;\n\t\tscanf(\"%d\", &k);\n\t\tfor (int j = 1; j <= k; j++){\n\t\t\tint x;\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif (mark[x]) flag = false;\n\t\t}\n\t\tif (flag) ans++; // \u7edf\u8ba1\u7b54\u6848\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1611118267,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P7280 \u3010[COCI2020-2021#4] Pizza\u3011"
    }
]