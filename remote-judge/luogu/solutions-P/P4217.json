[
    {
        "content": "# \u300cCTSC2010\u300d\u4ea7\u54c1\u9500\u552e-\u7ebf\u6bb5\u6811+\u6a21\u62df\u8d39\u7528\u6d41\n\n## Description\n\n\u6709 $n$ \u5929,\u6bcf\u4e00\u5929\u5546\u5e97\u53ef\u4ee5\u8fdb\u53e3\u6700\u591a $U_i$ \u4ef6\u5546\u54c1,\u4ef7\u683c\u4e3a $P_i$ ,\u6bcf\u4e00\u5929\u4e5f\u6709\u4e00\u5b9a\u7684\u8ba2\u8d27\u91cf $D_i$ \u3002\n\n\u4e00\u4ef6\u5546\u54c1\u8fdb\u53e3\u4e4b\u540e,\u5982\u679c\u6ca1\u6709\u7acb\u5373\u5356\u51fa,\u6bcf\u5728\u4ed3\u5e93\u653e\u7f6e\u4e00\u5929\u8981\u4ed8\u51fa\u4ee3\u4ef7 $M_i$ \u3002\u5982\u679c\u7b2c $i$ \u5929\u67d0\u4f4d\u987e\u5ba2\u8981\u4e70\u7684\u5546\u54c1\u7f3a\u4e86 $k$ \u4ef6,\u90a3\u4e48\u8981\u4ed8\u51fa $k \\times C_i$ \u7684\u4ee3\u4ef7\u5ef6\u671f\u4e00\u5929\u8d2d\u4e70\u3002\u95ee\u6700\u5c0f\u603b\u8017\u8d39\u3002\n\n$n \\leq 10^5$\n\n## Solution\n\n\u5efa\u7acb\u8d39\u7528\u6d41\u6a21\u578b\u3002\n\n - $s \\to i$\uff0c\u6d41\u91cf\u4e3a $D_i$\uff0c\u8d39\u7528\u4e3a $0$\uff1b\n - $i \\to t$\uff0c\u6d41\u91cf\u4e3a $U_i$\uff0c\u8d39\u7528\u4e3a $P_i$\uff1b\n - $i \\to i + 1$\uff0c\u6d41\u91cf\u4e3a $\\infty$\uff0c\u8d39\u7528\u4e3a$C_i$\uff1b\n - $i + 1 \\to i$\uff0c\u6d41\u91cf\u4e3a $\\infty$\uff0c\u8d39\u7528\u4e3a$M_i$\u3002\n\n\u5b9a\u4e49$1..n$\u4e3a\u4ece\u5de6\u5230\u53f3\u3002\u6709\u4e24\u6761\u6027\u8d28\n\n - \u76f4\u63a5\u4e0e$s,t$\u76f8\u8fde\u7684\u8fb9\u4e0d\u4f1a\u88ab\u53cd\u6094\uff1b\n - \u6309\u67d0\u79cd\u987a\u5e8f\u4f9d\u6b21\u589e\u5e7f\u5fc5\u7136\u8981\u7ecf\u8fc7\u7684\u51fa\u8fb9\uff0c\u7b54\u6848\u4e0d\u53d8\u3002\n\n\n\u8003\u8651\u4ece\u5de6\u81f3\u53f3\u589e\u5e7f\u3002\u589e\u5e7f\u8def\u6709\u4e24\u79cd\uff0c\u5206\u522b\u662f\u4ece\u5de6\u5f80\u53f3\u548c\u4ece\u53f3\u5f80\u5de6\u3002\u7531\u4e8e\u662f\u5411\u53f3\u589e\u5e7f\uff0c\u5411\u53f3\u7684\u8fb9\u7684\u8fb9\u6743\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u800c\u5411\u5de6\u7684\u8fb9\u5219\u4f1a\u6709\u4e00\u4e9b\u8fb9\u6743\u4e3a\u8d1f\u7684\u53cd\u6094\u8fb9\u3002\n\n\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u6bcf\u6b21\u5411\u53f3\u589e\u5e7f\u65f6\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e9b\u5411\u5de6\u7684\u53cd\u6094\u8fb9\u3002\u7531\u4e8e\u8fd9\u4e9b\u8fb9\u8fb9\u6743$<0$\uff0c\u6240\u4ee5\u5728\u5411\u5de6\u589e\u5e7f\u65f6\u4e00\u5b9a\u4f1a\u88ab\u9009\u62e9\u3002\u7528\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5411\u53f3\u589e\u5e7f\u5230\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u7b2c\u4e8c\u68f5\u7ebf\u6bb5\u6811\u5411\u5de6\u589e\u5e7f\u5230\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u7b2c\u4e09\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u53cd\u6094\u8fb9\u7684\u6d41\u91cf\u3002\u5f53\u67d0\u6761\u53cd\u6094\u7684\u6d41\u91cf\u72b6\u6001\uff08\u6307\u662f\u5426\u662f$0$\uff09\u7684\u72b6\u6001\u53d8\u5316\u65f6\uff0c\u5728\u7b2c\u4e8c\u68f5\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\u3002\n\n\u8003\u8651\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\uff0c\u5bf9\u4e8e\u67d0\u6761\u53cd\u6094\u8fb9\uff0c\u5728\u589e\u5e7f\u70b9\u5728\u5b83\u5de6\u8fb9\u65f6\u53ea\u4f1a\u589e\u52a0\u5b83\u7684\u6d41\u91cf\uff0c\u5f53\u589e\u5e7f\u70b9\u5728\u5b83\u53f3\u8fb9\u65f6\u53ea\u4f1a\u51cf\u5c11\u5b83\u7684\u6d41\u91cf\u3002\u8fd9\u6837\u4e00\u6761\u53cd\u6094\u8fb9\u7684\u72b6\u6001\u53d8\u5316\u662f$O(1)$\u7684\uff0c\u603b\u590d\u6742\u5ea6$O(nlogn)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\nconst int maxn = 100005, Inf = 1e9;\n\ninline int gi()\n{\n\tchar c = getchar();\n\twhile (c < '0' || c > '9') c = getchar();\n\tint sum = 0;\n\twhile ('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n\treturn sum;\n}\n\nint n, D[maxn], U[maxn], P[maxn], A[maxn], B[maxn], det[maxn];\nll ans;\n\n#define mp make_pair\n#define fi first\n#define se second\n\n#define mid ((l + r) >> 1)\n#define lch (s << 1)\n#define rch (s << 1 | 1)\n\nstruct sgt\n{\n\t\n\tpii Min[maxn << 2];\n\tint tag[maxn << 2], vis[maxn << 2], mn[maxn << 2];\n\n\tvoid build(int s, int l, int r, int *A, int b);\n\tvoid pushdown(int s);\n\tvoid modify(int s, int l, int r, int ql, int qr, int v);\n\tvoid modify2(int s, int l, int r, int ql, int qr, int v);\n\tpii query(int s, int l, int r, int ql, int qr);\n\t\n} s1, s2, s3;\n\nvoid sgt::build(int s, int l, int r, int *A, int b)\n{\n\tvis[s] = b;\n\tif (l == r) return Min[s] = make_pair(mn[s] = A[l], l), void();\n\tbuild(lch, l, mid, A, b);\n\tbuild(rch, mid + 1, r, A, b);\n\tMin[s] = min(Min[lch], Min[rch]); mn[s] = min(mn[lch], mn[rch]);\n}\n\nvoid sgt::pushdown(int s)\n{\n\tif (!tag[s]) return ;\n\ttag[lch] += tag[s]; if (Min[lch].fi + tag[s] >= 0) Min[lch].fi += tag[s]; \n\ttag[rch] += tag[s]; if (Min[rch].fi + tag[s] >= 0) Min[rch].fi += tag[s]; \n\ttag[s] = 0;\n}\n\nvoid sgt::modify(int s, int l, int r, int ql, int qr, int v)\n{\n\tif (ql <= l && r <= qr) return Min[s] = mp(Min[s].fi + v, Min[s].se), tag[s] += v, void();\n\tpushdown(s);\n\tif (ql <= mid) modify(lch, l, mid, ql, qr, v);\n\tif (qr >= mid + 1) modify(rch, mid + 1, r, ql, qr, v);\n\tMin[s] = min(Min[lch], Min[rch]);\n}\n\nvoid sgt::modify2(int s, int l, int r, int ql, int qr, int v)\n{\n\tif (v < 0 && !vis[s]) return ;\n\tif ((l == r) || (ql <= l && r <= qr && ((v > 0 && mn[s]) || (v < 0 && Min[s].fi + v > 0)))) {\n\t\tMin[s].fi += v; mn[s] += v; tag[s] += v;\n\t\tif (!Min[s].fi) vis[s] = 0, s2.modify(1, 1, n, 1, l, A[l] + B[l]);\n\t\tif (Min[s].fi == v) vis[s] = 1, det[l] += A[l] + B[l];\n\t\treturn ;\n\t}\n\tpushdown(s);\n\tif (ql <= mid) modify2(lch, l, mid, ql, qr, v);\n\tif (qr >= mid + 1) modify2(rch, mid + 1, r, ql, qr, v);\n\tMin[s] = min(vis[lch] ? Min[lch] : mp(Inf, 0), vis[rch] ? Min[rch] : mp(Inf, 0));\n\tmn[s] = min(mn[lch], mn[rch]);\n\tvis[s] = vis[lch] | vis[rch];\n}\n\npii sgt::query(int s, int l, int r, int ql, int qr)\n{\n\tif (!vis[s]) return mp(Inf, 0);\n\tif (ql <= l && r <= qr) return Min[s];\n\tpushdown(s);\n\tpii res(Inf, 0);\n\tif (ql <= mid) res = min(res, query(lch, l, mid, ql, qr));\n\tif (qr >= mid + 1) res = min(res, query(rch, mid + 1, r, ql, qr));\n\treturn res;\n}\n\nint main()\n{\n\tstatic int sum[maxn];\n\t\n\tn = gi();\n\tfor (int i = 1; i <= n; ++i) D[i] = gi();\n\tfor (int i = 1; i <= n; ++i) U[i] = gi();\n\tfor (int i = 1; i <= n; ++i) P[i] = gi();\n\tfor (int i = 1; i < n; ++i) A[i] = gi();\n\tfor (int i = 1; i < n; ++i) B[i] = gi();\n\n\ts2.build(1, 1, n, P, 1);\n\ts3.build(1, 1, n, sum, 0);\n\tfor (int i = 1; i <= n; ++i) sum[i] = sum[i - 1] + B[i - 1], sum[i - 1] += P[i - 1];\n\tsum[n] += P[n]; s1.build(1, 1, n, sum, 1);\n\t\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (i > 1) {\n\t\t\ts1.modify(1, 1, n, i, n, -B[i - 1]);\n\t\t\ts2.modify(1, 1, n, 1, i - 1, A[i - 1] - det[i - 1]);\n\t\t}\n\t\twhile (D[i]) {\n\t\t\tpii v1 = s1.query(1, 1, n, i, n), v2 = i > 1 ? s2.query(1, 1, n, 1, i - 1) : mp(Inf, 0);\n\t\t\tif (v1 < v2) {\n\t\t\t\tint w = v1.fi, p = v1.se, f = min(D[i], U[p]);\n\t\t\t\tD[i] -= f; U[p] -= f; ans += (ll)w * f;\n\t\t\t\tif (!U[p]) s1.modify(1, 1, n, p, p, Inf), s2.modify(1, 1, n, p, p, Inf);\n\t\t\t\tif (i < p) s3.modify2(1, 1, n, i, p - 1, f);\n\t\t\t} else {\n\t\t\t\tint w = v2.fi, p = v2.se, mn = s3.query(1, 1, n, p, i - 1).fi, f = min(mn ? mn : Inf, min(D[i], U[p]));\n\t\t\t\tD[i] -= f; U[p] -= f; ans += (ll)w * f;\n\t\t\t\tif (!U[p]) s1.modify(1, 1, n, p, p, Inf), s2.modify(1, 1, n, p, p, Inf);\n\t\t\t\tif (mn && i > p) s3.modify2(1, 1, n, p, i - 1, -f);\n\t\t\t}\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\", ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1579226530,
        "uid": 119899,
        "name": "dsidsi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4217 \u3010[CTSC2010]\u4ea7\u54c1\u9500\u552e\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u6709\u4e00\u5bb6\u516c\u53f8\u6b63\u5728\u9500\u552e\u4ea7\u54c1\uff0c\u5728\u63a5\u4e0b\u6765\u7684 $N$ \u4e2a\u5b63\u5ea6\u4e2d\uff0c\u7b2c $i$ \u4e2a\u5b63\u5ea6\u6700\u591a\u53ef\u4ee5\u751f\u4ea7 $U_i$ \u4ef6\u65b0\u4ea7\u54c1\uff0c\u6bcf\u4e00\u4ef6\u6709\u6210\u672c $P_i$\uff0c\u540c\u65f6\u4e5f\u4f1a\u6709 $D_i$ \u4e2a\u8ba2\u5355\uff0c\u6bcf\u4e00\u4ef6\u4ea7\u54c1\u751f\u4ea7\u5b8c\u6210\u540e\u4fdd\u5b58\u5230\u4e0b\u4e00\u4e2a\u5b63\u5ea6\u9700\u8981\u82b1\u8d39 $M_i$\uff0c\u6bcf\u4e00\u4e2a\u8ba2\u5355\u62d6\u5230\u4e0b\u4e00\u4e2a\u5b63\u5ea6\u9700\u8981\u82b1\u8d39 $C_i$\uff0c\u95ee\u6ee1\u8db3\u6240\u6709\u8ba2\u8d2d\u9700\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5c0f\u7684\u82b1\u8d39\u662f\u591a\u5c11\u3002\u6570\u636e\u8303\u56f4 $N\u226410^5$\u3002\n\n## \u601d\u8def\n\n### \u8d39\u7528\u6d41\u5efa\u56fe\n\n\u6839\u636e\u9898\u610f\uff0c\u53ef\u4ee5\u5efa\u51fa\u8fd9\u6837\u7684\u4e00\u5f20\u8d39\u7528\u6d41\u7684\u56fe\uff1a\n\n+ $S \\to A_i $\uff0c\u6d41\u91cf\u9650\u5236\u4e3a $D_i$\uff0c\u8d39\u7528\u4e3a $0$\uff1b\n+ $A_i\\to T$\uff0c\u6d41\u91cf\u9650\u5236\u4e3a $U_i$\uff0c\u8d39\u7528\u4e3a $P_i$\uff1b\n+ $A_i\\to A_{i+1}$\uff0c\u6d41\u91cf\u9650\u5236\u4e3a $\\infty$\uff0c\u8d39\u7528\u4e3a $C_i$\uff1b\n+ A_(i+1)\u2192A_i\uff0c\u6d41\u91cf\u9650\u5236\u4e3a $\\infty$\uff0c\u8d39\u7528\u4e3a $M_i$ \u3002\n\n\u5bf9\u8fd9\u5f20\u56fe\u8dd1\u4e00\u904d\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u5373\u53ef\u5f97\u5230\u7b54\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(N^2 )$\uff0c\u53ef\u4ee5\u5f97\u5230 30 \u5206\u3002\n\n### \u600e\u4e48\u4f18\u5316\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e0a\u9762\u8fd9\u5f20\u8d39\u7528\u6d41\u7684\u56fe\u975e\u5e38\u7279\u6b8a\uff0c\u9664\u4e86\u6e90\u70b9\u548c\u6c47\u70b9\u4ee5\u5916\uff0c\u5269\u4f59\u7684\u70b9\u7ec4\u6210\u4e86\u4e00\u6761\u53cc\u5411\u7684\u94fe\uff0c\u6e90\u70b9\u548c\u6c47\u70b9\u4e0e\u5269\u4e0b\u7684\u6bcf\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u4e00\u6761\u8fb9\uff0c\u6bcf\u4e00\u6761\u589e\u5e7f\u8def\u5f84\u90fd\u662f $S\u2192A_u\u27f6A_v\u2192T$ \u7684\u5f62\u5f0f\u3002\u5bf9\u4e8e\u8fd9\u79cd\u7279\u6b8a\u7684\u56fe\uff0c\u5982\u679c\u4f7f\u7528\u666e\u901a\u7684\u6700\u5c0f\u8d39\u7528\u6d41\uff0c\u590d\u6742\u5ea6\u4f1a\u5f88\u9ad8\uff0c\u4f46\u662f\u5982\u679c\u624b\u52a8\u6a21\u62df\u8d39\u7528\u6d41\uff0c\u5c31\u80fd\u964d\u4f4e\u590d\u6742\u5ea6\uff0c\u8fd9\u79cd\u505a\u6cd5\u88ab\u79f0\u4e3a\u6a21\u62df\u8d39\u7528\u6d41\u3002\n\n### \u6a21\u62df\u8d39\u7528\u6d41\n\n\u8fd9\u4e2a\u8d39\u7528\u6d41\u6a21\u578b\u4e2d\uff0c\u589e\u5e7f\u8def\u6709\u4e24\u79cd\uff1a$u\u2264v$ \u548c $u>v$\u3002\u8bbe $A_i\u2192A_{i+1}$ \u7684\u8fb9\u4e3a $L_i$\uff0c\u5176\u53cd\u5411\u8fb9\u4e3a $L_i'$\uff0c\u8bbe $A_{i+1}\u2192A_i$ \u7684\u8fb9\u4e3a $R_i$\uff0c\u5176\u53cd\u5411\u8fb9\u4e3a $R_i'$\uff0c\u5219\u6bcf\u4e00\u6761 $u\u2264v$ \u7684\u589e\u5e7f\u8def\u53ea\u4f1a\u5305\u542b $L_i$ \u548c $R_i'$\uff08\u53ea\u8981 $R_i'$ \u7684\u5269\u4f59\u6d41\u91cf\u4e0d\u4e3a $0$ \u6570\u5c31\u4e00\u5b9a\u4f1a\u8d70 $R_i'$\uff0c\u56e0\u4e3a $R_i'$ \u7684\u8d39\u7528\u662f\u8d1f\u6570\uff0c\u800c $L_i$ \u7684\u8d39\u7528\u662f\u6b63\u6570\uff09\uff0c\u6bcf\u4e00\u6761 $u>v$ \u7684\u589e\u5e7f\u8def\u53ea\u4f1a\u5305\u542b $R_i$ \u548c $L_i'$\u3002\n\n\u6574\u4e2a\u8d39\u7528\u6d41\u7684\u8fc7\u7a0b\u4e2d\uff0c$L_i'$ \u548c $R_i'$ \u7684\u5269\u4f59\u6d41\u91cf\u81f3\u5c11\u6709\u4e00\u4e2a\u662f $0$\uff0c\u5047\u8bbe\u7b2c\u4e00\u6b65\u8d70\u7684\u662f $L_i$\uff0c\u5219\u6b64\u65f6 $L_i'$ \u7684\u5269\u4f59\u6d41\u91cf\u88ab\u52a0 $1$\uff0c$R_i'$ \u7684\u5269\u4f59\u6d41\u91cf\u8fd8\u662f $0$\uff0c\u4e4b\u540e\u5982\u679c\u51fa\u73b0\u4e86\u4e00\u6761\u4ece\u53f3\u8fb9\u5f80\u5de6\u8fb9\u7684\u589e\u5e7f\u8def\uff0c\u8fd9\u6761\u8def\u5728\u7ecf\u8fc7\u7b2c $i$ \u6761\u8fb9\u7684\u65f6\u5019\u4e5f\u53ea\u4f1a\u8d70 $L_i'$ \u8fd9\u6761\u8fb9\uff0c\u800c\u4e0d\u662f $R_i$\uff0c\u6240\u4ee5 $R_i'$ \u7684\u5269\u4f59\u6d41\u91cf\u4f1a\u4e00\u76f4\u4fdd\u6301\u5728 $0$\uff0c\u76f4\u5230 $L_i'$ \u7684\u5269\u4f59\u6d41\u91cf\u56de\u5230 $0$ \u4e3a\u6b62\u3002\n\n\u8003\u8651\u4f7f\u7528\u4e24\u68f5\u7ebf\u6bb5\u6811\u5206\u522b\u7ef4\u62a4\u4ece\u5de6\u5230\u53f3\u7684\u589e\u5e7f\u8def\u548c\u4ece\u53f3\u5230\u5de6\u7684\u589e\u5e7f\u8def\uff0c\u7531\u4e8e\u589e\u5e7f\u8def\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u6240\u4ee5\u6bcf\u6b21\u9009\u53d6\u589e\u5e7f\u8def\u7b49\u4ef7\u4e8e\u533a\u95f4\u6700\u5c0f\u8fde\u7eed\u548c\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u533a\u95f4\u548c $sum$\u3001\u533a\u95f4\u524d\u7f00\u6700\u5c0f\u503c $minl$ \u53ca\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3001\u533a\u95f4\u540e\u7f00\u6700\u5c0f\u503c $minr$ \u53ca\u5bf9\u5e94\u7684\u4f4d\u7f6e\u548c\u533a\u95f4\u6700\u5c0f\u8fde\u7eed\u548c $minx$ \u53ca\u5bf9\u5e94\u7684\u533a\u95f4\u6765\u89e3\u51b3\u3002\u5bf9\u4e8e\u957f\u5ea6\u4e3a $1$ \u7684\u533a\u95f4\uff0c\u5982\u679c\u5f53\u524d\u7684 $D_i$  \u6216 $U_i$  \u88ab\u7528\u5b8c\u4e86\uff0c\u5219 $minl$\u3001$minr$ \u548c $minx$ \u8bbe\u4e3a $\u221e$\uff0c\u5426\u5219 $minl$ \u8bbe\u4e3a\u5f53\u524d\u533a\u95f4\u5bf9\u5e94\u7684\u8fb9\u7684\u4ee3\u4ef7\uff0c$minr$ \u548c $minx$ \u8bbe\u4e3a $P_i$  \u5373\u53ef\u3002\n\n\u4e0b\u9762\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u7f51\u7edc\u6d41\u7684\u5269\u4f59\u6d41\u91cf\uff0c\u5bf9\u4e8e\u524d\u4e24\u7c7b\u8fb9\uff0c\u6bcf\u4e00\u6761\u589e\u5e7f\u8def\u4e2d\u6070\u597d\u51fa\u73b0\u4e00\u6b21\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u3002\u5bf9\u4e8e\u7b2c\u4e09\u7c7b\u548c\u7b2c\u56db\u7c7b\u8fb9\uff0c\u53ef\u4ee5\u7528\u4e00\u68f5\u652f\u6301\u533a\u95f4\u52a0\u3001\u533a\u95f4\u6c42\u6700\u5c0f\u503c\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u7136\u540e\u662f\u53cd\u5411\u8fb9\u7684\u95ee\u9898\u3002\u7531\u4e8e\u524d\u9762\u5df2\u7ecf\u8bc1\u660e\u8fc7\uff0c$L_i'$ \u548c $R_i'$ \u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u5269\u4f59\u6d41\u91cf\u4e3a $0$\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e49\u4e00\u6761\u8fb9\u5904\u4e8e\u201c\u5e73\u8861\u72b6\u6001\u201d\u5f53\u4e14\u4ec5\u5f53\u8fd9\u6761\u8fb9\u5bf9\u5e94\u7684 $L_i'$ \u548c $R_i'$ \u7684\u5269\u4f59\u6d41\u91cf\u90fd\u662f $0$\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u8fb9\u7528\u4e00\u4e2a set \u7ef4\u62a4\u3002\u6bcf\u6b21\u589e\u5e7f\u4e00\u4e9b\u8fb9\u7684\u65f6\u5019\uff0c\u80af\u5b9a\u6709\u4e00\u4e9b\u8fb9\u4ece\u5e73\u8861\u72b6\u6001\u5230\u8fbe\u4e86\u4e0d\u5e73\u8861\u72b6\u6001\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u8fb9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 set \u4e2d\u4e0d\u65ad `lower_bound` \u627e\u5230\u5728\u589e\u5e7f\u533a\u95f4\u5185\u7684\u5e73\u8861\u8fb9\uff0c\u5c06\u8fd9\u4e9b\u8fb9\u53cd\u5411\u8fb9\u7684\u6743\u503c\u548c\u53cd\u5411\u8fb9\u6d41\u91cf\u66f4\u65b0\u5230\u7ebf\u6bb5\u6811\u4e0a\u4e4b\u540e\uff0c\u4ece set \u4e2d\u5220\u9664\u8fd9\u6761\u8fb9\u5373\u53ef\uff1b\u5f53\u7136\u4e5f\u4f1a\u6709\u4e00\u90e8\u5206\u8fb9\u4ece\u4e0d\u5e73\u8861\u72b6\u6001\u56de\u5230\u5e73\u8861\u72b6\u6001\uff1a\u5982\u679c\u4e00\u6761 $L_i'$ \u6216 $R_i'$ \u7684\u8fb9\u5728\u589e\u5e7f\u5b8c\u4e4b\u540e\u5269\u4f59\u6d41\u91cf\u56de\u5230\u4e86 $0$\uff0c\u5219\u8fd9\u4e9b\u8fb9\u5c31\u4f1a\u56de\u5230\u5e73\u8861\u72b6\u6001\uff0c\u6b64\u65f6\u5c06\u8fb9\u6743\u6539\u56de\u6765\uff0c\u5c06\u5269\u4f59\u6d41\u91cf\u6539\u4e3a $\u221e$ \u5373\u53ef\uff0c\u67e5\u627e\u8fd9\u4e9b\u6d41\u91cf\u56de\u5230 $0$ \u7684\u8fb9\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u6210\u529f\u5730\u7528\u7ebf\u6bb5\u6811\u548c\u8d2a\u5fc3\u6a21\u62df\u4e86\u8fd9\u4e2a\u8d39\u7528\u6d41\uff0c\u64cd\u4f5c\u6b21\u6570\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u662f $\\mathcal O(n)$ \u7ea7\u522b\u7684\uff08\u76ee\u524d\u627e\u4e0d\u5230\u80fd\u5361\u6389\u7684\u6570\u636e\uff09\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define SZ(x) ((int)(x).size())\n#define all(x) (x).begin(), (x).end()\n#define loop(i, a) for (int i = 0; i < (a); ++i)\n#define cont(i, a) for (int i = 1; i <= (a); ++i)\n#define circ(i, a, b) for (int i = (a); i <= (b); ++i)\n#define range(i, a, b, c) for (int i = (a); (c) > 0 ? i <= (b) : i >= (b); i += (c))\n#define parse(it, x) for (auto &it : (x))\n#define pub push_back\n#define pob pop_back\n#define emb emplace_back\n#define mak make_pair\n#define mkt make_tuple\ntypedef long long ll;\ntypedef long double lf;\nconst int Inf = 0x3f3f3f3f;\nconst ll INF = 0x3f3f3f3f3f3f3f3fll;\n \nint n;\nint d[2][100005], u[2][100005], p[2][100005], c[2][100005];\n \nstruct Node {\n    int sm, ml, mr, mlp, mrp, mn;\n    pair<int, int> pos;\n \n    friend Node inline operator + (const Node &a, const Node &b) {\n        Node res; res.sm = a.sm + b.sm;\n        if (a.ml != Inf && a.ml + b.sm < b.ml) {\n            res.ml = a.ml + b.sm, res.mlp = a.mlp;\n        } else {\n            res.ml = b.ml, res.mlp = b.mlp;\n        }\n        if (b.mr != Inf && a.sm + b.mr < a.mr) {\n            res.mr = a.sm + b.mr, res.mrp = b.mrp;\n        } else {\n            res.mr = a.mr, res.mrp = a.mrp;\n        }\n        res.mn = min(Inf, a.ml + b.mr);\n        res.pos = mak(a.mlp, b.mrp);\n        if (a.mn < res.mn) res.mn = a.mn, res.pos = a.pos;\n        if (b.mn < res.mn) res.mn = b.mn, res.pos = b.pos;\n        return res;\n    }\n} t[2][1 << 18];\n \nint dt[2][1 << 18], wp[2][1 << 18];\n \nvoid inline pd(int id, int now) {\n    if (!wp[id][now]) return;\n    if (dt[id][now << 1] != Inf) dt[id][now << 1] += wp[id][now], wp[id][now << 1] += wp[id][now];\n    if (dt[id][now << 1 | 1] != Inf) dt[id][now << 1 | 1] += wp[id][now], wp[id][now << 1 | 1] += wp[id][now];\n    wp[id][now] = 0;\n}\n \nvoid change(int id, int to, int x, int now = 1, int nl = 1, int nr = n) {\n    if (nl == nr) {\n        if (x != Inf) t[id][now].sm = x;\n        t[id][now].ml = t[id][now].mr = t[id][now].mn = Inf;\n        if (d[id][nl]) t[id][now].ml = t[id][now].sm, t[id][now].mlp = nl;\n        if (u[id][nl]) t[id][now].mr = p[id][nl], t[id][now].mrp = nl;\n        if (d[id][nl] && u[id][nl]) t[id][now].mn = p[id][nl], t[id][now].pos = mak(nl, nl);\n        return;\n    }\n    int m = (nl + nr) >> 1;\n    if (m >= to) change(id, to, x, now << 1, nl, m);\n    else change(id, to, x, now << 1 | 1, m + 1, nr);\n    t[id][now] = t[id][now << 1] + t[id][now << 1 | 1];\n}\n \nvoid chflow(int id, int to, int x, int now = 1, int nl = 1, int nr = n - 1) {\n    if (nl == nr) return (void)(dt[id][now] = x);\n    pd(id, now); int m = (nl + nr) >> 1;\n    if (m >= to) chflow(id, to, x, now << 1, nl, m);\n    else chflow(id, to, x, now << 1 | 1, m + 1, nr);\n    dt[id][now] = min(dt[id][now << 1], dt[id][now << 1 | 1]);\n}\n \nint get(int id, int l, int r, int now = 1, int nl = 1, int nr = n - 1) {\n    if (nl > r || nr < l) return Inf;\n    if (nl >= l && nr <= r) return dt[id][now];\n    pd(id, now); int m = (nl + nr) >> 1;\n    return min(get(id, l, r, now << 1, nl, m), get(id, l, r, now << 1 | 1, m + 1, nr));\n}\n \nvoid add(int id, int l, int r, int x, int now = 1, int nl = 1, int nr = n - 1) {\n    if (nl > r || nr < l) return;\n    if (nl >= l && nr <= r) return (void)(dt[id][now] += x, wp[id][now] += x);\n    pd(id, now); int m = (nl + nr) >> 1;\n    add(id, l, r, x, now << 1, nl, m);\n    add(id, l, r, x, now << 1 | 1, m + 1, nr);\n    dt[id][now] = min(dt[id][now << 1], dt[id][now << 1 | 1]);\n}\n \nint findzero(int id, int now = 1, int nl = 1, int nr = n - 1) {\n    if (nl == nr) return nl;\n    pd(id, now); int m = (nl + nr) >> 1;\n    if (dt[id][now << 1] == 0) return findzero(id, now << 1, nl, m);\n    else return findzero(id, now << 1 | 1, m + 1, nr);\n}\n \nset<int> bal;\n \nint main() {\n    scanf(\"%d\", &n);\n    cont(i, n) scanf(\"%d\", d[0] + i), d[1][n + 1 - i] = d[0][i];\n    cont(i, n) scanf(\"%d\", u[0] + i), u[1][n + 1 - i] = u[0][i];\n    cont(i, n) scanf(\"%d\", p[0] + i), p[1][n + 1 - i] = p[0][i];\n    cont(i, n - 1) scanf(\"%d\", c[1] + (n - i));\n    cont(i, n - 1) scanf(\"%d\", c[0] + i);\n    cont(i, n) change(0, i, c[0][i]), change(1, i, c[1][i]);\n    cont(i, n - 1) chflow(0, i, Inf), chflow(1, i, Inf), bal.insert(i);\n    ll ans = 0;\n    while (1) {\n        int id = (t[1][1].mn < t[0][1].mn);\n        if (t[id][1].mn == Inf) break;\n        int x, y; tie(x, y) = t[id][1].pos;\n        int fl = min(d[id][x], u[id][y]);\n        if (x != y) fl = min(fl, get(id, x, y - 1));\n        ans += 1ll * fl * t[id][1].mn;\n        assert(fl);\n        int rlim = id ? n + 1 - x : y;\n        int $$=0;\n        while (1) {\n            auto it = bal.lower_bound(id ? n + 1 - y : x);\n            if (it == bal.end() || *it >= rlim) break;\n            int pos = id ? *it : n - *it;\n            chflow(!id, pos, 0);\n            change(!id, pos, -c[id][n - pos]);\n            bal.erase(it);\n        }\n        if (x != y) {\n            add(id, x, y - 1, -fl);\n            add(!id, n + 1 - y, n - x, fl);\n        }\n        while (!dt[id][1]) {\n            int pos = findzero(id);\n            chflow(id, pos, Inf);\n            change(id, pos, c[id][pos]);\n            bal.insert(id ? n - pos : pos);\n        }\n        d[id][x] -= fl; d[!id][n + 1 - x] -= fl;\n        if (!d[id][x]) change(id, x, Inf), change(!id, n + 1 - x, Inf);\n        u[id][y] -= fl; u[!id][n + 1 - y] -= fl;\n        if (!u[id][y]) change(id, y, Inf), change(!id, n + 1 - y, Inf);\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1618740907,
        "uid": 60845,
        "name": "Acetyl",
        "ccfLevel": 9,
        "title": "P4217 [CTSC2010]\u4ea7\u54c1\u9500\u552e \u9898\u89e3"
    },
    {
        "content": "\u6a21\u62df\u8d39\u7528\u6d41**\u597d**\u9898\n\n\u9996\u5148\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u8d39\u7528\u6d41\u95ee\u9898\uff0c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u5efa\u8fb9\uff1a\n\n- $(S,i,U_i,P_i)$\n- $(i,i+1,\\infty,M_i)$\n- $(i+1,i,\\infty,C_i)$\n- $(i,T,D_i,0)$\n\n\u7136\u540e\u6ce8\u610f\u5230 $n\\leq 10^5$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u89c2\u5bdf\u8fd9\u4e2a\u56fe\u7684\u6027\u8d28\uff0c\u53d1\u73b0\u5176\u5b9e\u4ed6\u957f\u5f97\u8fd8\u662f\u5f88\u597d\u770b\u7684\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u628a\u6574\u4e2a\u56fe\u53cd\u5411\uff0c\u4ece $T$ \u5230 $S$ \u8dd1\u8d39\u7528\u6d41\uff0c\u8fd9\u6837\u505a\u6709\u4e00\u4e2a\u597d\u5904\uff0c\u5c31\u662f\u73b0\u5728\u6240\u6709\u4ece $S$ \u51fa\u53d1\u7684\u8fb9\u4e00\u5b9a\u662f\u6ee1\u6d41\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4ece $1\\sim n$ \u53bb\u589e\u5e7f\uff0c\u6bcf\u6b21\u8ba9\u51fa\u8fb9\u6d41\u6ee1\u3002\n\n\u6309\u7167\u987a\u5e8f\u53bb\u589e\u5e7f\u6211\u4eec\u53d1\u73b0\u4e00\u5171\u53ea\u9700\u8981\u4e09\u7c7b\u8fb9\uff1a\n\n- $(i,i+1,\\infty,C_i)$\n- $(i+1,i,\\infty,M_i)$\n- $(i+1,i,Cap,-C_i)$\n\n\u800c $M_i$ \u7684\u53cd\u5411\u8fb9\u56e0\u4e3a\u6211\u4eec\u662f\u6309\u7167\u987a\u5e8f\u589e\u5e7f\u7684\uff0c\u6240\u4ee5\u867d\u7136\u4f1a\u51fa\u73b0\uff0c\u4f46\u662f\u6211\u4eec\u4e00\u5b9a\u4e0d\u4f1a\u8dd1\u5230\u3002\n\n\u7b2c\u4e09\u7c7b\u8fb9\u662f\u7b2c\u4e00\u7c7b\u8fb9\u8d70\u51fa\u6765\u4e4b\u540e\u8d70\u7684\u53cd\u76f8\u8fb9\uff0c\u5e76\u4e14\u663e\u7136\u5982\u679c\u8fd9\u6837\u7684\u8fb9\u5b58\u5728\u6211\u4eec\u662f\u4e0d\u4f1a\u53bb\u8d70\u7b2c\u4e8c\u7c7b\u8fb9\u7684\u3002\n\n\u8003\u8651\u73b0\u5728\u589e\u5e7f $i$\uff0c$i$ \u53ef\u4ee5\u5f80\u53f3\u8d70\uff0c\u8fd9\u76f8\u5f53\u4e8e\u662f\u6bcf\u4e2a\u70b9\u6709\u4ee3\u4ef7\uff0c\u6211\u4eec\u8981\u533a\u95f4\u6c42\u6700\u5c0f\u503c\u548c\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\uff0c\u4e0d\u96be\u60f3\u5230\u5229\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\uff0c\u5728 $i$ \u5230 $i+1$ \u7684\u65f6\u5019\u4e00\u4e2a\u533a\u95f4\u52a0\uff08\u51cf\uff09\u5c31\u53ef\u4ee5\u89e3\u51b3\n\n\u8003\u8651\u5f80\u5de6\u8d70\u7684\u60c5\u51b5\uff0c\u540c\u6837\u662f\u4e00\u4e2a\u533a\u95f4\u6211\u4eec\u9700\u8981\u53e6\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4 cost\u3002\n\n\u4f46\u662f\u5411\u5de6\u8d70\u7684\u8fb9\u6709\u4e9b\u662f\u6709\u6d41\u91cf\u9650\u5236\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7b2c\u4e09\u68f5\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6bcf\u6761\u8fb9\u5f53\u524d\u7684\u6d41\u91cf\u3002\n\n\u5982\u679c\u5411\u53f3\u8d70\uff0c\u6211\u4eec\u5c31\u8981\u5728\u7b2c\u4e09\u68f5\u6811\u4e0a\u533a\u95f4\u52a0\uff0c\u5982\u679c\u5411\u5de6\u8d70\u5c31\u662f\u533a\u95f4\u51cf\u6cd5\u3002\n\n\u4f46\u662f\u5982\u679c\u7b2c\u4e09\u68f5\u6811\u4e0a\u7684 0/\u975e0 \u72b6\u6001\u53d8\u5316\u65f6\u9700\u8981\u5728\u7b2c\u4e8c\u68f5\u6811\u4e0a\u505a\u5bf9\u5e94\u7684\u4fee\u6539\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u505a\u6cd5\u7684\u590d\u6742\u5ea6\uff0c\u89c2\u5bdf\u6bcf\u4e00\u6761\u7b2c\u4e09\u7c7b\u8fb9\uff0c\u4ed6\u6700\u591a\u4f1a\u88ab\u52a0\u5165\u4e00\u6b21\uff0c\u6700\u591a\u4f1a\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u6bcf\u6b21\u9700\u8981 $O(\\log n)$ \u7684\u65f6\u95f4\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u7684\u603b\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal O(n\\log n)$\n\n****\n\n\u6ce8\u610f\u6709\u4e00\u4e2a\u975e\u5e38\u5751\u7684\u5730\u65b9\u5c31\u662f\u5f53\u6211\u4eec\u5f80\u53f3\u8d70\u7684\u65f6\u5019\u5982\u679c\u9700\u8981\u52a0\u5165\u4e00\u6761\u65b0\u7684\u53cd\u5411\u8fb9\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5728 $[1,x]$ \u4e0a\u51cf\u6389 $C[x]+M[x]$\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019\u5728 $[1,i]$ \u4e2d\u7684\u8d21\u732e\u91cc\u8fd8\u6ca1\u6709 $C[x]$ \u8fd9\u6761\u8fb9\u7684\u8d21\u732e\uff0c\u5e94\u5f53\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\uff0c\u5728\u679a\u4e3e\u5230 $x$ \u7684\u65f6\u5019\u518d\u505a\u4fee\u6539\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n# define Rep(i,a,b) for(int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\nconst int N=1e5+5;\nconst int inf=1e9+N;\n\ntypedef long long ll;\ntypedef double db;\n\n# define chkmax(a,b) a=max(a,b)\n# define chkmin(a,b) a=min(a,b)\n# define PII pair<int,int>\n# define mkp make_pair\n\ntemplate<typename T> void read(T &x){\n    x=0;int f=1;\n    char c=getchar();\n    for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nint n;\nint D[N],U[N],P[N],M[N],C[N];\nint del[N];\nPII a[N];\nint b[N];\nll ans;\n\nstruct segment_tree{\n    struct node{\n        PII min;\n        int tag,low;\n        bool flag;\n    }seg[N<<2];\n    # define lc (u<<1)\n    # define rc (u<<1|1)\n    void pushup(int u){\n        seg[u].min=min(seg[lc].flag?seg[lc].min:mkp(inf,0),seg[rc].flag?seg[rc].min:mkp(inf,0));\n        seg[u].low=min(seg[lc].low,seg[rc].low);\n        seg[u].flag=seg[lc].flag|seg[rc].flag;\n    }\n    void renew(int u,int k){\n        seg[u].min.first+=k,seg[u].tag+=k;\n        seg[u].low+=k;\n    }\n    void pushdown(int u){\n        renew(lc,seg[u].tag);\n        renew(rc,seg[u].tag);\n        seg[u].tag=0;\n    }\n    void build(int u,int l,int r){\n        if(l==r){\n            seg[u].min=a[l];\n            seg[u].flag=b[l];\n            return;\n        }\n        int mid=l+r>>1;\n        build(lc,l,mid);\n        build(rc,mid+1,r);\n        pushup(u);\n    }\n    void update(int u,int l,int r,int ql,int qr,int k){\n        if(l>=ql&&r<=qr){\n            renew(u,k);\n            return;\n        }\n        if(seg[u].tag)pushdown(u);\n        int mid=l+r>>1;\n        if(ql<=mid)update(lc,l,mid,ql,qr,k);\n        if(qr>mid)update(rc,mid+1,r,ql,qr,k);\n        pushup(u);\n    } \n    PII query(int u,int l,int r,int ql,int qr){\n        if(!seg[u].flag)return mkp(inf,0);\n        if(l>=ql&&r<=qr)return seg[u].min;\n        if(seg[u].tag)pushdown(u);\n        int mid=l+r>>1;\n        if(qr<=mid)return query(lc,l,mid,ql,qr);\n        if(ql>mid)return query(rc,mid+1,r,ql,qr);\n        return min(query(lc,l,mid,ql,qr),query(rc,mid+1,r,ql,qr));\n    }\n}T1,T2,T3;\n\nvoid modify(int u,int l,int r,int ql,int qr,int k){\n    if(k<0&&!T3.seg[u].flag)return;\n    if((l>=ql&&r<=qr&&((k>0&&T3.seg[u].low>0)||(k<0&&T3.seg[u].min.first+k>0)))){\n        T3.renew(u,k);\n        return;\n    }\n    if(l==r){\n        T3.seg[u].min.first+=k,T3.seg[u].low+=k;\n        if(T3.seg[u].min.first)T3.seg[u].flag=true,del[l]+=C[l]+M[l];\n        else T3.seg[u].flag=false,T2.update(1,1,n,1,l,C[l]+M[l]);\n        return;    \n    }\n    if(T3.seg[u].tag)T3.pushdown(u);\n    int mid=l+r>>1;\n    if(ql<=mid)modify(lc,l,mid,ql,qr,k);\n    if(qr>mid)modify(rc,mid+1,r,ql,qr,k);\n    T3.pushup(u);\n}\n//# define hibike\nint main()\n{\n    # ifdef hibike\n    freopen(\"testdata.in\",\"r\",stdin);\n    // freopen(\"test1.out\",\"w\",stdout);\n    # endif\n    read(n);\n    Rep(i,1,n)read(D[i]);\n    Rep(i,1,n)read(U[i]);\n    Rep(i,1,n)read(P[i]);\n    Rep(i,1,n-1)read(C[i]);\n    Rep(i,1,n-1)read(M[i]);\n    Rep(i,1,n)a[i]=mkp(a[i-1].first+M[i-1],i);\n    Rep(i,1,n)a[i].first+=P[i];\n    Rep(i,1,n)b[i]=1;\n    T1.build(1,1,n);\n    Rep(i,1,n)a[i].first=P[i];\n    T2.build(1,1,n);\n    Rep(i,1,n)a[i].first=0;\n    Rep(i,1,n)b[i]=0;\n    T3.build(1,1,n);\n    Rep(i,1,n){\n        if(i>1){\n            T1.update(1,1,n,i,n,-M[i-1]);\n            T2.update(1,1,n,1,i-1,C[i-1]-del[i-1]);\n        }\n        while(D[i]){\n            PII v1=T1.query(1,1,n,i,n),v2=i>1?T2.query(1,1,n,1,i-1):mkp(inf,0);\n            if(v1<v2){\n                int cost=v1.first,x=v1.second,f=min(D[i],U[x]);\n                ans+=1ll*f*cost;\n                D[i]-=f,U[x]-=f;\n                if(!U[x])T1.update(1,1,n,x,x,inf),T2.update(1,1,n,x,x,inf);\n                if(x>i)modify(1,1,n,i,x-1,f);\n            }\n            else{\n                int cost=v2.first,x=v2.second,low=T3.query(1,1,n,x,i-1).first,f=min(min(D[i],U[x]),low?low:inf);\n                ans+=1ll*cost*f;\n                D[i]-=f,U[x]-=f;\n                if(!U[x])T1.update(1,1,n,x,x,inf),T2.update(1,1,n,x,x,inf);\n                if(x<i)modify(1,1,n,x,i-1,-f);\n            }\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1628758873,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "P4217 [CTSC2010]\u4ea7\u54c1\u9500\u552e"
    }
]