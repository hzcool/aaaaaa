[
    {
        "content": "#\u770b\u6570\u636e\u8303\u56f4\uff01\n\n#\u770b\u6570\u636e\u8303\u56f4\uff01\n\n#\u770b\u6570\u636e\u8303\u56f4\uff01\n\n### \u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\n\n\n\n# 0<= ai<=65 536\n\n\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ea\u9700\u5f00\u4e00\u4e2abool\u6570\u7ec4\u50a8\u5b58\u5bf9\u5e94\u6570\u5b57\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\u8fc7\uff0c\u7136\u540e\u4ece\u5f53\u524d\u6570\u5b57\u5f00\u59cb\u5411\u5de6\u3001\u5411\u53f3\u904d\u5386\uff08\u6ce8\u610f\u8981\u904d\u5386\u81ea\u5df1\uff09\u5c31\u53ef\u4ee5\u627e\u5230\u6700\u8fd1\u5df2\u7ecf\u51fa\u73b0\u8fc7\u7684\u7684\u6570\u5b57aj\u3002\u6700\u540enum[now]=true\u5373\u53ef\u3002\n\n\n\u6240\u4ee5\uff0c\u8fd9\u9898\u666e\u53ca-\uff0c\u4ee3\u7801\u5f88\u77ed\uff0c\u90a3\u5c31\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\u3002\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\nbool hav[65537];\nint main()\n{\n    int n,t,i,ans,tmp;\n    scanf(\"%d\",&t);\n    while(t--){\n        memset(hav,false,sizeof(hav));\n        scanf(\"%d%d\",&n,&tmp);\n        hav[tmp]=true;\n        ans=tmp;\n        while(--n){\n            scanf(\"%d\",&tmp);\n            for(i=0;;i++){\n                if(tmp-i>=0)\n                    if(hav[tmp-i]){\n                        ans+=i;\n                        break;\n                    }\n                if(tmp+i<=65536)\n                    if(hav[tmp+i]){\n                        ans+=i;\n                        break;\n                    }\n            }\n            hav[tmp]=true;\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1512875484,
        "uid": 31050,
        "name": "\u5c0f\u9a6c\u4e00\u53ea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1732"
    },
    {
        "content": "\u672c\u9898\u6211\u4eec\u53d1\u73b0\uff0c\u6570\u636e\u8303\u56f4\u4e3aai \u2264 65536\n\n\u5373log(ai) \u2264 16\n\n\u4e8e\u662f\u6211\u4eec\u5728\u6c42bi\u65f6\u53ef\u4ee5\u7528\u4e00\u4e2a\u5e26\u4e8c\u5206\u7684\u6811\u72b6\u6570\u7ec4\u3002\n\n\u590d\u6742\u5ea6O(T * n * log(n) * log(n)).\n\n\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\n#define LL long long\n#define N 100050\n#define lowbit(x) (x & (-x))\n#define q(x) (x + 70000)\nusing namespace std;\n\nconst int m = 65536 * 4;\n\ninline int read(){\n    int x = 0,f = 1; char c = getchar();\n    while ((c < '0' || c > '9') && c != EOF) {if (c == '-') f = -1;c = getchar();}\n    while ((c <='9' && c >='0') && c != EOF) {x = x * 10 + c - '0';c = getchar();}\n    return x * f;\n}\n\ninline void write(LL x){\n    LL k = 0,lx = x;char put[40];\n    if (lx ==0) putchar('0');\n    if (lx < 0) putchar('-'),lx = -lx;\n    while (lx)  put[++k] = (lx % 10) + '0',lx /= 10;\n    while (k)   putchar( put[ k-- ] );\n}\n\nint T,n,a[N],b[N],l,r,mid,ans,ToT; \nint d[m];\n\nvoid Insert(int x){\n    while (x <= m) ++d[x],x += lowbit(x);\n}\n\nint Ask(int x){\n    int tot = 0; \n    while (x) tot += d[x],x -= lowbit(x);\n    return tot;\n}\n\nint query(int l,int r){\n    return Ask(r) - Ask(l-1);\n}\n\nint main(){\n    T = read();\n    while (T--){\n        memset(d,0,sizeof(d));\n        ToT = 0; \n        n = read();\n        for (int i = 1; i <= n; ++i) a[i] = read();\n        b[1] = a[1];\n        ToT += b[1];\n        Insert( q(a[1]) );\n        for (int i = 2; i <= n; ++i){\n            l = 0,r = 65536;\n            while (l <= r){\n                mid = (l + r) >> 1;\n                if (query( q(a[i] - mid) , q(a[i] + mid) )) ans = mid,r = mid - 1;\n                else l = mid + 1;\n            }\n            b[i] = ans;\n            ToT += ans;\n            Insert( q(a[i]) );\n        }\n        write(ToT);\n        putchar('\\n');\n    }\n    return 0;\n}\n\n```",
        "postTime": 1531272842,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1732 \u3010[TJOI2011]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5e73\u8861\u6811\u88f8\u9898\uff0c\u8fd9\u91cc\u6211\u7528\u4e86Treap\u6765\u5199\u3002\n\n\n\uff08\u8fd9\u9053\u9898\u8ddfHNOI2002\u7684\u8425\u4e1a\u989d\u7edf\u8ba1\u4e0d\u662f\u4e00\u6a21\u4e00\u6837\u7684\u505a\u6cd5\u5417\uff09\n\n\n\u6bcf\u6b21\u6211\u4eec\u5904\u7406\u4e00\u4e2a\u6570\u4e4b\u524d\u5148\u627e\u4e00\u4e0b\u4e4b\u524d\u7684\u90a3\u5806\u6570\u91cc**\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u6570\u4e14\u6700\u5927\u7684\u6570**\uff0c\u548c**\u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u6570\u4e14\u6700\u5c0f\u7684\u6570**\uff0c\u6bd4\u8f83\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u4e1c\u897f\u548c\u8fd9\u4e2a\u6570\u7684\u5dee\u503c\u54ea\u4e2a\u66f4\u5c0f\uff0c\u7edf\u8ba1\u8fdb\u7b54\u6848\uff0c\u7136\u540e\u63d2\u5165\u6811\u91cc\u3002\n\n\n\u4f46\u662f\uff0c\u4f46\u662f\uff01\uff01\uff01\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u5c0f\u7684\u53ef\u601c\uff01\uff01\uff01\u6240\u4ee5\u5176\u5b9e\u50cf\u697c\u4e0b\u90a3\u6837\u4e71\u641e\u4e5f\u80fd\u8fc7\u3002\n\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nnamespace treap\n{\nconst int inf = 0x3f3f3f3f;\nstruct node *nil;\nstruct node\n{\n    node *ch[2];\n    int val, cnt, size, prio;\n    node(int v) : val(v), cnt(1), size(1), prio(rand()) { ch[0] = ch[1] = nil; }\n    void pullup() { size = cnt + ch[0]->size + ch[1]->size; }\n    int cmp(int v) { return v < val ? 0 : 1; }\n} * root;\nvoid init()\n{\n    nil = new node(0);\n    nil->cnt = nil->size = 0;\n    nil->prio = inf;\n    nil->ch[0] = nil->ch[1] = root = nil;\n}\nvoid rotate(node *&t, int d)\n{\n    node *k = t->ch[d ^ 1];\n    t->ch[d ^ 1] = k->ch[d];\n    k->ch[d] = t;\n    t->pullup(), k->pullup();\n    t = k;\n}\nvoid insert(int v, node *&t = root)\n{\n    if (t == nil)\n        t = new node(v);\n    else if (t->val == v)\n        t->cnt++;\n    else\n    {\n        int d = t->cmp(v);\n        insert(v, t->ch[d]);\n        if (t->prio > t->ch[d]->prio)\n            rotate(t, d ^ 1);\n    }\n    t->pullup();\n}\nint lower(int v, node *t = root)\n{\n    int ans = -inf;\n    while (t != nil)\n    {\n        if (t->val <= v)\n            ans = max(ans, t->val), t = t->ch[1];\n        else\n            t = t->ch[0];\n    }\n    return ans;\n}\nint upper(int v, node *t = root)\n{\n    int ans = inf;\n    while (t != nil)\n    {\n        if (t->val >= v)\n            ans = min(ans, t->val), t = t->ch[0];\n        else\n            t = t->ch[1];\n    }\n    return ans;\n}\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    int T;\n    cin >> T;\n    while (T--)\n    {\n        treap::init(); // \u53cd\u6b63\u5185\u5b58\u591a\uff0c\u4e0d\u7ba1\u4e4b\u524d\u7533\u8bf7\u7684\u4e86\n        int n, x;\n        cin >> n;\n        long long ans = 0;\n        \n        cin >> x;\n        treap::insert(x);\n        ans += x;\n        n--;\n        \n        while (n--)\n        {\n            cin >> x;\n            ans += min(x - treap::lower(x), treap::upper(x) - x);\n            treap::insert(x);\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1508744774,
        "uid": 22890,
        "name": "huangwenlong",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1732 \u3010[TJOI2011]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u5e73\u8861\u6811\u53ef\u7834\u6b64\u9898\uff0c\u6bd4\u8f83\u9002\u5408\u5404\u4f4d\u6570\u636e\u7ed3\u6784\u5927\u5e08\u653e\u677e\u8eab\u5fc3\n\n\u626b\u63cf$A$\u5e8f\u5217\u65f6\uff0c\u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u5143\u7d20$A_i$\uff0c\u9996\u5148\u5728\u5e73\u8861\u6811\u4e2d\u5bfb\u627e\u4e0e$A_i$\u6700\u63a5\u8fd1\u7684\u5143\u7d20\uff0c\u518d\u5c06\u5dee\u503c\u52a0\u5230\u7b54\u6848\u4e2d\uff0c\u7136\u540e\u628a$A_i$\u63d2\u5165\u5230\u5e73\u8861\u6811\u4e2d\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(tn\\log n)$\uff0c\u6ce8\u610f\u6e05\u7a7a\u5e73\u8861\u6811\n\n\u524d\u9762\u5df2\u7ecf\u6709\u7528Treap\u89e3\u51b3\u7684\u9898\u89e3\uff0c\u8865\u4e00\u4e2asplay\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <iostream>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\nusing namespace std;\ntypedef long long ll;\n\nconst int maxn=100005;\n\nstruct Csplay\n{\n\tint root,tot,num;\n\tint siz[maxn],cnt[maxn],val[maxn],ch[maxn][2],prt[maxn];\n\tint chk(int x)\n\t{\n\t\treturn ch[prt[x]][1]==x;\n\t}\n\tvoid update(int x)\n\t{\n\t\tsiz[x]=siz[ch[x][0]]+siz[ch[x][1]]+cnt[x];\n\t}\n\tvoid rotate(int x)\n\t{\n\t\tint y=prt[x],z=prt[y],k=chk(x),w=ch[x][k^1];\n\t\tch[y][k]=w;prt[w]=y;\n\t\tch[z][chk(y)]=x;prt[x]=z;\n\t\tch[x][k^1]=y;prt[y]=x;\n\t\tupdate(y);update(x);\n\t}\n\tvoid splay(int x,int goal=0)\n\t{\n\t\twhile(prt[x]!=goal)\n\t\t{\n\t\t\tint y=prt[x],z=prt[y];\n\t\t\tif(z!=goal)\n\t\t\t{\n\t\t\t\tif(chk(x)==chk(y))\n\t\t\t\t\trotate(y);\n\t\t\t\telse\n\t\t\t\t\trotate(x);\n\t\t\t}\n\t\t\trotate(x);\n\t\t}\n\t\tif(goal==0)\n\t\t\troot=x;\n\t}\n\tvoid Insert(int x)\n\t{\n\t\t++tot;\n\t\tint cur=root,p=0;\n\t\twhile(cur && x!=val[cur])\n\t\t\tp=cur,cur=ch[cur][x>val[cur]];\n\t\tif(cur)\n\t\t\t++cnt[cur];\n\t\telse\n\t\t{\n\t\t\tcur=++num;\n\t\t\tval[cur]=x;\n\t\t\tprt[cur]=p;\n\t\t\tch[cur][0]=ch[cur][1]=0;\n\t\t\tif(p)ch[p][x>val[p]]=cur;\n\t\t\tsiz[cur]=cnt[cur]=1;\n\t\t}\n\t\tsplay(cur);\n\t}\n\tvoid find(int x)\n\t{\n\t\tint cur=root;\n\t\twhile(x!=val[cur] && ch[cur][x>val[cur]])\n\t\t\tcur=ch[cur][x>val[cur]];\n\t\tsplay(cur);\n\t}\n\tint pre(int x)\n\t{\n\t\tfind(x);\n\t\tif(val[root]<x)return root;\n\t\tint cur=ch[root][0];\n\t\twhile(ch[cur][1])\n\t\t\tcur=ch[cur][1];\n\t\treturn cur;\n\t}\n\tint succ(int x)\n\t{\n\t\tfind(x);\n\t\tif(val[root]>x)return root;\n\t\tint cur=ch[root][1];\n\t\twhile(ch[cur][0])\n\t\t\tcur=ch[cur][0];\n\t\treturn cur;\n\t}\n\tint Close(int x)\n\t{\n\t\tfind(x);\n\t\tif(val[root]==x)return 0;\n\t\treturn min(x-val[pre(x)],val[succ(x)]-x);\n\t}\n\tCsplay()\n\t{\n\t\tmemset(val,0,sizeof(val));\n\t\tmemset(cnt,0,sizeof(cnt));\n\t\tmemset(ch,0,sizeof(ch));\n\t\tmemset(prt,0,sizeof(prt));\n\t\tmemset(siz,0,sizeof(siz));\n\t\troot=num=tot=0; \n\t\tInsert(-0x3f3f3f3f);\n\t\tInsert(0x3f3f3f3f);\n\t\ttot=0;\n\t}\n};\n\nint T;\nint n;\nint ans;\n\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tCsplay t;\n\t\tscanf(\"%d%d\",&n,&ans);\n\t\tt.Insert(ans);\n\t\tint x;\n\t\tfor(register int i=2;i<=n;++i)\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tans+=t.Close(x);\n\t\t\tt.Insert(x);\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n```",
        "postTime": 1565577136,
        "uid": 60418,
        "name": "lizbaka",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1732 \u3010[TJOI2011]\u5e8f\u5217\u3011"
    },
    {
        "content": ">0<= ai<=65 536\n\n\u5927\u5bb6\u770b\u5230\u4e86\u5417\uff0c\u8fd9\u4e2a\u6570\u636e\u5c0f\u5f97\u53ef\u601c\u3002\n\n\u7528\u4e00\u4e2abool\u8868\u8bb0\u5f55\u4e0b\u54ea\u4e9b\u6570\u5b57\u5df2\u7ecf\u51fa\u73b0\u8fc7\u3002\n\n\u6bcf\u67091\u4e2aa[i]\u5f85\u8f6c\u5316\u6210b[i]\uff0c\u90fd\u5728\u8868\u4e2d\u5bfb\u627e\u8ddd\u79bb\u5b83\u6700\u8fd1\u7684\u3001\u5df2\u7ecf\u51fa\u73b0\u8fc7\u7684\u6570\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nbool biao[65537];\nlong long a[100001],b[100001];\ninline void inl(long long &p,char c=getchar())//long long\u8bfb\u5165\u4f18\u5316\n{\n    while(c<'0' or c>'9')\n        c=getchar();\n    p=0;\n    while(c>='0' and c<='9')\n        p=p*10+c-'0',c=getchar();\n}\ninline void in(long long &p,char c=getchar())//int\u8bfb\u5165\u4f18\u5316\n{\n    while(c<'0' or c>'9')\n        c=getchar();\n    p=0;\n    while(c>='0' and c<='9')\n        p=p*10+c-'0',c=getchar();\n}\nint main()\n{\n    int t;\n    in(t);\n    while(t--)\n    {\n        memset(a,0,sizeof(a));\n        memset(b,0,sizeof(b));\n        memset(biao,0,sizeof(biao));\n        int n;\n        in(n);\n        inl(a[1]);\n        b[1]=a[1];\n        biao[a[1]]=1;\n        for(int i=2;i<=n;i++)\n        {\n            inl(a[i]);\n            for(int l=a[i],r=a[i]+1;;)//l,r\u4e2d\u8981\u6709\u4e00\u4e2a\u4ecea[i]\u5f00\u59cb\u627e\uff08\u8bf4\u4e0d\u5b9aa[i]\u4e0d\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\u4e86\uff09\n            {\n                if(biao[l])\n                {\n                    b[i]=a[i]-l;\n                    break;\n                }\n                if(biao[r])\n                {\n                    b[i]=r-a[i];\n                    break;\n                }\n                if(l>0)//\u9632\u6b62\u8bbf\u95ee\u975e\u6cd5\u5185\u5b58\n                    l--;\n                if(r<65536)\n                    r++;\n            }\n            biao[a[i]]=1;\n        }\n        for(int i=2;i<=n;i++)\n            b[i]+=b[i-1];\n        printf(\"%lld\\n\",b[n]);\n    }\n    return 0;\n}\n```\n\u8fd9\u771f\u7684\u5f88\u6c34\uff0c\u5f88\u9002\u5408\u653e\u677e\u8eab\u5fc3\uff08\n",
        "postTime": 1508597173,
        "uid": 31022,
        "name": "Syhien",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1732 \u3010[TJOI2011]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u81ea\u7136\u53ef\u4ee5\u7528\u66b4\u529b\u7684\u505a\u6cd5\u8fc7\u6389\uff0c\u5982\u679c\u8303\u56f4\u6269\u5927\u600e\u4e48\u89e3\u51b3\u5462\uff1f\n\n\u53ef\u4ee5\u4f7f\u7528\u5e73\u8861\u6811\uff01\n\n## \u505a\u6cd5\n\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d\u6570\u5217\u5e76\u66f4\u65b0\u7b54\u6848 $res$\uff0c\u5f53\u626b\u5230\u7b2c $i$ \u4e2a\u6570\uff08\u8bb0\u5b83\u7684\u503c\u4e3a $v$\uff09\u65f6\uff0c\u5047\u8bbe\u524d $i-1$ \u4e2a\u6570\u5df2\u7ecf\u88ab\u7ef4\u62a4\u8fdb\u5e73\u8861\u6811\u4e86\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u627e\u6811\u4e2d\u54ea\u4e2a\u5143\u7d20\u79bb $v$ \u6700\u8fd1\u5373\u53ef\uff1a\n\n+ \u5982\u679c\u6811\u4e2d\u5b58\u5728 $v$\uff0c\u90a3\u4e48 `res+=0`\n+ \u5426\u5219\u627e $v$ \u5728\u7684\u524d\u9a71\u3001\u540e\u7ee7\uff0c\u770b\u770b\u54ea\u4e2a\u79bb $v$ \u66f4\u8fd1\uff0c\u5e76\u76f8\u5e94\u5730\u66f4\u65b0 $res$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nconst int N=1e5+5, INF=0x3f3f3f3f;\n\nstruct Node{\n\tint l, r;\n\tint key;\n\tint sz, v;\n\t\n\t#define ls tr[u].l\n\t#define rs tr[u].r\n}tr[N];\n\nint root, idx;\n\nvoid pushup(int u){\n\ttr[u].sz=tr[ls].sz+tr[rs].sz+1;\n}\n\nint add(int v){\n\t++idx;\n\ttr[idx].key=rand(), tr[idx].sz=1, tr[idx].v=v;\n\ttr[idx].l=tr[idx].r=0;\n\treturn idx;\n}\n\nint merge(int x, int y){\n\tif(!x || !y) return x+y;\n\tif(tr[x].key>tr[y].key){\n\t\ttr[x].r=merge(tr[x].r, y);\n\t\tpushup(x);\n\t\treturn x;\n\t}\n\telse{\n\t\ttr[y].l=merge(x, tr[y].l);\n\t\tpushup(y);\n\t\treturn y;\n\t}\n}\n\nvoid split(int u, int val, int &x, int &y){\n\tif(!u) return x=y=0, void();\n\tif(tr[u].v<=val)\n\t\tx=u, split(rs, val, rs, y);\n\telse\n\t\ty=u, split(ls, val, x, ls);\n\tpushup(u);\n}\n\nvoid insert(int v){\n\tint x, y;\n\tsplit(root, v, x, y);\n\troot=merge(x, merge(add(v), y));\n}\n\nint get_prev(int v){\n\tint x, y;\n\tsplit(root, v-1, x, y);\n\tint u=x;\n\twhile(rs) u=rs;\n\tint res=u? tr[u].v: -INF; // \u6ca1\u6709\u524d\u9a71\u5c31\u662f -INF\n\troot=merge(x, y);\n\treturn res;\n}\n\nint get_next(int v){\n\tint x, y;\n\tsplit(root, v, x, y);\n\tint u=y;\n\twhile(ls) u=ls;\n\tint res=u? tr[u].v: INF; // \u6ca1\u6709\u540e\u7ee7\u5c31\u662f INF\n\troot=merge(x, y);\n\treturn res;\n}\n\nbool has(int v){\n\tint x, y, z;\n\tsplit(root, v, x, z);\n\tsplit(x, v-1, x, y);\n\tbool res=tr[y].sz? 1: 0;\n\troot=merge(merge(x, y), z);\n\treturn res;\n}\n\nvoid init(){\n\troot=idx=0;\n}\n\nsigned main(){\n\tios::sync_with_stdio(false);\n\tsrand(131); // \u968f\u673a\u6570\u79cd\u5b50\n\t\n\tint T; cin>>T;\n\twhile(T--){\n\t\tinit(); // \u521d\u59cb\u5316\u5e73\u8861\u6811\n\t\tint n; cin>>n;\n\t\tint res=0;\n\t\tfor(int i=1; i<=n; i++){\n\t\t\tint v; cin>>v;\n\t\t\tif(i==1) res+=v; // \u7279\u5224\n\t\t\telse if(has(v)) res+=0; // \u5b58\u5728 v\uff0c\u90a3\u4e48\u8d21\u732e\u4e3a 0\n\t\t\telse res+=min(v-get_prev(v), get_next(v)-v); // \u770b\u770b\u524d\u9a71\u8fd8\u662f\u540e\u7ee7\u79bb v \u8fd1\u3002\n\t\t\tinsert(v); // \u63d2\u5165 v\n\t\t}\n\t\tcout<<res<<endl;\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1633684692,
        "uid": 138960,
        "name": "Tenshi",
        "ccfLevel": 0,
        "title": "[TJOI2011]\u5e8f\u5217"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8981\u6c42\u6211\u4eec\u5728\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\uff0c\u6c42\u51fa\u4e0e\u8fd9\u4e2a\u5143\u7d20\u5dee\u6700\u5c0f\u7684\u90a3\u4e2a\u5143\u7d20.\n\n\u770b\u89c1\u5927\u5bb6\u90fd\u624b\u5199\u662f\u5e73\u8861\u6811\uff0c\u6211\u4e0d\u5f97\u4e0d\u8bf4\n\n> STL\u725b\u903c\uff01\n\n\u7528set\u76f4\u63a5\u6c34\u8fc7\u53bb\u8fa3\uff01\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5+10;\nint n,a[N],ans=0,T;\nmultiset<int>s1;\nint main(){\n    cin>>T;\n    while(T--){\n        cin>>n;ans=0;s1.clear();\n        for(int i=1;i<=n;i++)cin>>a[i];\n        for(int i=1;i<=n;i++){\n            multiset<int>::iterator it=s1.lower_bound(a[i]);\n            multiset<int>::iterator it2=it;\n            if(it!=s1.begin())it--;\n            ans+=min(abs(a[i]-*it),abs(a[i]-*it2));\n            s1.insert(a[i]);\n        }\n        cout<<ans<<endl;\n    }\n}\n\n```\n\n\uff08\u5176\u5b9e\u90a3\u4e2a$a$\u6570\u7ec4\u6ca1\u5fc5\u8981\u5f00\uff09",
        "postTime": 1620005326,
        "uid": 383079,
        "name": "Acc_Robin",
        "ccfLevel": 6,
        "title": "[TJOI2011]\u5e8f\u5217 \u9898\u89e3"
    },
    {
        "content": "\u505a\u8fc7\u4e00\u4e2a\u76f8\u4f3c\u7684\u9898\u76ee\uff0c\u6b64\u9898\u5728\u7ebf\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u3001\u6811\u72b6\u6570\u7ec4\u3001\u4e8c\u53c9\u641c\u7d22\u6811\u505a\uff0c\u79bb\u7ebf\u505a\u6cd5\u53ef\u4ee5\u7528\u53cc\u5411\u961f\u5217\n\n\u8003\u8651\u4ece\u540e\u5f80\u524d\u5220\u9664\u6570\u5b57\uff0c\u5c06\u539f\u6570\u7ec4\u6309\u5927\u5c0f\u6392\u5e8f\uff0c\u6bcf\u4e2abi\u5176\u5b9e\u5c31\u662f\u4e24\u8fb9\u7684\u6570\u5b57\u548cai\u7684\u5dee\u7684\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5O(1)\u6c42\uff0c\u53cc\u5411\u961f\u5217\u5220\u9664\u4e5f\u662fO(1)\u7684\n\n\u6240\u4ee5\u603b\u5171\u7684\u590d\u6742\u5ea6\u5c31\u662f\u6392\u5e8f\u7684\u590d\u6742\u5ea6O(nlgn)\n\n\u5177\u4f53\u505a\u6cd5\u5c31\u662f\u5148\u6309\u5927\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167\u65f6\u95f4\u6233\u4ece\u540e\u5f80\u524d\u679a\u4e3e\uff0cO(1)\u7ef4\u62a4\u67e5\u8be2\u548c\u5220\u9664\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define fo(a,b,c) for(int a=b;a<=c;a++)\n#define go(a,b,c) for(int a=b;a>=c;a--)\nint read(){\n    int a=0,f=0;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar())if(c=='-')f=1;\n    for(;c>='0'&&c<='9';c=getchar())a=a*10+c-'0';\n    return f?-a:a;\n}\nint min(int a,int b){return a<b?a:b;}\nint max(int a,int b){return a>b?a:b;}\nconst int N=1e5+1;\nint pre[N],suc[N],bel[N];\nstruct node{int x,t;}a[N];\nint cmp(node a,node b){return a.x<b.x;}\nint main(){\n    for(int t=read();t;t--){\n        int n=read();a[0].x=-1e9;a[n+1].x=1e9;\n        fo(i,1,n)pre[i]=i-1,suc[i]=i+1;\n        fo(i,1,n)a[i]=(node){read(),i};\n        int ans=a[1].x;\n        sort(a+1,a+n+1,cmp);\n        fo(i,1,n)bel[a[i].t]=i;\n        go(i,n,2){\n            int g=bel[i];\n            ans+=min(a[g].x-a[pre[g]].x,a[suc[g]].x-a[g].x);\n            suc[pre[g]]=suc[g];pre[suc[g]]=pre[g];\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1508900339,
        "uid": 12668,
        "name": "Minclxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1732 \u3010[TJOI2011]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u96be\u5ea6\u53ea\u6709\u666e\u53ca-\uff1f\uff1f\uff1f\n\n\u8fd9\u9898\u5c31\u662f\u4e8c\u7ef4\u7684\u6700\u957f\u4e0a\u5347\u5e8f\u5217\n\n\u89e3\u6790\u5982\u4e0b\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nstruct dot//\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58\u50a8\u6bcf\u4e2a\u70b9\u7684\u4fe1\u606f\n{\n    int x;\n    int y;\n    int h;\n};\ndot line[20000];//\u5c06\u6bcf\u4e2a\u70b9\u5b58\u5165\u8be5\u7ed3\u6784\u4f53\u6570\u7ec4\nint height[120][120];//\u7528\u4e8e\u5b58\u50a8input\nint len[120][120];//dp\u6570\u7ec4\uff0c\u5b58\u50a8\u6bcf\u4e2a\u70b9\u7684\u6700\u4f18\u89e3\nint cmp(const void *a, const void *b)\n{\n    if((*(dot*)a).h > (*(dot*)b).h)\n        return 1;\n    else return -1;\n}\nvoid dp(int m, int n)\n{\n    //\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u8fdb\u884c\u4e0a\u4e0b\u5de6\u53f3\u7684\u6bd4\u8f83\n    for(int i = 0; i < m*n; i++)\n    {\n        if(height[line[i].x][line[i].y] < height[line[i].x][line[i].y + 1] && (len[line[i].x][line[i].y]+ 1) > len[line[i].x][line[i].y + 1])\n            len[line[i].x][line[i].y + 1] = len[line[i].x][line[i].y]+ 1;\n        if(height[line[i].x][line[i].y] < height[line[i].x][line[i].y - 1] && (len[line[i].x][line[i].y] + 1) > len[line[i].x][line[i].y - 1])\n            len[line[i].x][line[i].y - 1] = len[line[i].x][line[i].y]+ 1;\n        if(height[line[i].x][line[i].y] < height[line[i].x + 1][line[i].y] && (len[line[i].x][line[i].y] + 1) > len[line[i].x + 1][line[i].y])\n            len[line[i].x + 1][line[i].y] = len[line[i].x][line[i].y]+ 1;\n        if(height[line[i].x][line[i].y] < height[line[i].x - 1][line[i].y] && (len[line[i].x][line[i].y] + 1) > len[line[i].x - 1][line[i].y])\n            len[line[i].x - 1][line[i].y] = len[line[i].x][line[i].y]+ 1;\n    }\n}\nint main()\n{\n    int m, n;\n    cin >> m >> n;\n    int i, j;\n    int flag = -1;//\u8ba1\u6570\uff0c\u8f93\u5165\u591a\u5c11\u4e2a\u70b9\n    int max = 0;\n    //input matrix\n    for(i = 1; i <= m; i++)\n    {\n        for(j = 1; j <= n; j++)\n        {\n            flag++;\n            scanf(\"%d\", &height[i][j]);\n            line[flag].x = i;\n            line[flag].y = j;\n            line[flag].h = height[i][j];\n        }\n    }\n    //\u5bf9\u7ed3\u6784\u4f53\u7684h\u53c2\u6570\u8fdb\u884c\u6392\u5e8f,\u5347\u5e8f\n    qsort(line, m*n, sizeof(line[0]),cmp);\n    dp(m, n);\n    //\u904d\u5386len\u6570\u7ec4\uff0c\u6c42\u51fa\u6700\u5927\u503c\n    for(i = 1; i <= m; i++)\n    {\n        for(j = 1; j <= n; j++)\n        {\n            if(len[i][j] > max)\n                max = len[i][j];\n        }\n    }\n    cout << max + 1 << endl;\n    system(\"pause\");\n    return 0;\n}\n```",
        "postTime": 1475479983,
        "uid": 19390,
        "name": "functionendless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1732 \u3010[TJOI2011]\u5e8f\u5217\u3011"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u4e00\u4e32\u6570\u5b57\uff0c\u8f93\u51fa\u6bcf\u4e2a\u6570\u5b57\u548c\u524d\u9762\u4e0e\u5b83\u6700\u63a5\u8fd1\u7684\u6570\u5b57\u7684\u5dee\u4e4b\u548c\u3002\n\n\u8f93\u5165\uff1a\n\n* \u5171\u6709 $t$ \u7ec4\u6570\u636e\u3002\n* \u6bcf\u884c\u4e00\u4e2a\u6b63\u6574\u6570 $n$\uff0c\u7136\u540e\u662f $n$ \u4e2a\u6570\u5b57 $a_i \\ldots a_n$\u3002\n\n\u8f93\u51fa\uff1a\n\n* \u6240\u6709 $b_i$ \u7684\u548c\u3002\n* $b_i$ \u4e3a $a_i$ \u4e0e\u4e4b\u524d\u67d0\u4e2a\u6570\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u6700\u5c0f\u503c\u3002\n* \u6ce8\u610f $b_1=a_1$\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u4e0d\u96be\u60f3\u5230\u66b4\u529b\u67e5\u627e\u7684\u505a\u6cd5\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\u5728\u8ba1\u7b97 $b_i$ \u65f6\u9700\u8981\u6d88\u8017\u5927\u91cf\u65f6\u95f4\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884c\u4f18\u5316\u3002\n\n\u4e8c\u5206\u67e5\u627e\u53ef\u4ee5\u8282\u7701\u5f88\u591a\u65f6\u95f4\uff0c\u4f46\u524d\u9762\u7684\u503c\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4f7f\u8fd9\u4e9b\u6570\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u5b58\u5165```priority queue```\u6216```set```\uff0c\u4f46\u4f18\u5148\u961f\u5217\u4e0d\u597d\u5b9e\u73b0\u4e8c\u5206\u67e5\u627e\uff0c\u800c\u4e14\u8fd9\u9898\u53ef\u4ee5\u5ffd\u7565\u91cd\u590d\u7684\u6570\u5b57\uff0c\u6240\u4ee5\u9009\u7528```set```\u3002\n\n\u8981\u6ce8\u610f\u5bf9\u7b2c\u4e00\u4e2a\u6570\u5b57\u8fdb\u884c\u7279\u5224\uff0c\u8fd8\u8981\u6ce8\u610f\u4e0d\u8981\u8d85\u51fa```set```\u8303\u56f4\u3002\n\n\u8be6\u60c5\u8bf7\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint t;\nint n;\nint ans;\nint input;\nset<int> s;\nint main()\n{\n    cin >> t;\n    while (t--)\n    {\n        /*\u521d\u59cb\u5316*/\n        s.clear();\n        ans = 0;\n\n        cin >> n;\n\n        /*\u7531\u4e8e\u53ea\u548c\u524d\u9762\u7684\u6570\u5b57\u6709\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u8f93\u5165\u65f6\u5c31\u5904\u7406*/\n        for (int i = 1; i <= n; ++i)\n        {\n            cin >> input;\n            if (i == 1) //\u7279\u5224\u7b2c\u4e00\u4e2a\u6570\n            {\n                s.insert(input);\n                ans += input;\n                continue;\n            }\n            set<int>::iterator tmp = s.lower_bound(input); //\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u6570\u5b57\u7684\u6570\n            /*\n            \u5982\u679ctmp\u521a\u597d\u7b49\u4e8e\u5f53\u524d\u6570\uff0c\u90a3\u4e48tmp\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\n            \u5982\u679ctmp\u5927\u4e8e\u4e86\u5f53\u524d\u6570\uff0c\u90a3\u4e48tmp\u540e\u9762\u7684\u4e00\u5b9a\u6bd4tmp\u5dee\n            */\n            if (tmp == s.end()) //\u5f53\u524d\u7684\u6570\u5b57\u6bd4\u4e4b\u524d\u7684\u90fd\u5927\uff0c\u6ca1\u5f97\u9009\u53ea\u80fd\u9009\u6700\u540e\u4e00\u4e2a\n            {\n                ans += abs(input - *(--tmp));\n            }\n            else if (tmp == s.begin()) //\u5f53\u524d\u7684\u6570\u5b57\u6bd4\u4e4b\u524d\u7684\u90fd\u5c0f\uff0c\u6ca1\u5f97\u9009\u53ea\u80fd\u9009\u7b2c\u4e00\u4e2a\n            {\n                ans += abs(input - *(tmp));\n            }\n            else //\u9009\u62e9tmp\u6216tmp\u524d\u4e00\u4e2a\n            {\n                ans += min(abs(input - *(--tmp)), abs(input - *(tmp)));\n            }\n            s.insert(input); //\u5c06\u5f53\u524d\u6570\u5b57\u653e\u5165set\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1618141266,
        "uid": 309811,
        "name": "\u4e00\u53ea\u5c0fH",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1732 \u3010\u5e8f\u5217\u3011"
    },
    {
        "content": "\u671b\u7ba1\u7406\u5458\u901a\u8fc7\uff0c\u6211\u5df2\u7ecf\u52a0\u4e86\u6ce8\u91ca qwq\n## \u5e8f\n\n\u4f5c\u4e3a\u4e00\u4e2a TJoier \u51c6\u5907\u7701\u9009\u7684\u65f6\u5019\u6765\u5237\u4e00\u5237\u51e0\u5e74\u7684\u7701\u9009\u9898\u3002\n\n## \u6b63\u6587\n\n\u770b\u4e86\u4e00\u773c\uff0c\u6211\u7684\u5929\uff0c\u8fd9\u4e0d\u5e73\u8861\u6811\u88f8\u9898\uff0c\u76f4\u63a5\u641e\u5c31\u5b8c\u4e86\u3002\u4e0d\u5c31\u662f\u524d\u9a71 \u548c\u540e\u7ee7\u91cc\u6311\u4e00\u4e2a\u5417\n\n\u7136\u540e\uff0c\u5174\u51b2\u51b2\u6253\u4e86\u677f\u5b50\uff0c\u4e4b\u540e\uff0c\u6837\u4f8b\u90fd\u6ca1\u8fc7\u3002\u3002\u662f\u56e0\u4e3a\u6ca1\u6709\u6ce8\u610f\u5230\u5047\u5982\u4e4b\u524d\u7684\u5e8f\u5217\u5982\u679c\u51fa\u73b0\u8fc7\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u518d\u52a0\u4e00\u4e2a `find()` \u51fd\u6570\u6765\u68c0\u9a8c\u8fd9\u4e2a\u6570\u662f\u5426\u5728\u539f\u5148\u7684\u6570\u5217\u4e2d\u51fa\u73b0\uff0c\u90a3\u6837\u7684\u8bdd\uff0c\u5c31\u662f0\u4e86\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u5176\u4ed6\u7684\u60c5\u51b5\u76f4\u63a5\u7528\u627e\u524d\u9a71\u548c\u540e\u7ee7\u5c31\u884c\u4e86\u3002QAQ.\u7801\u91cf\u5f02\u5e38\u7684\u5927.....\n\n\u5e73\u8861\u6811\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\u3002\u4e0d\u4f1a\u7684\u4eba\u8bf7\u79fb\u6b65\u81f3[\u666e\u901a\u5e73\u8861\u6811](https://www.luogu.com.cn/problem/P3369)\n\n\u7528\u6807\u51c6\u7684\u8bed\u8a00\u8bf4\u662f\n\n1. \u5047\u5982 $a[i]$ \u5728\u5148\u524d\u7684\u5e8f\u5217\u4e2d\u51fa\u73b0\u4e86\uff0c\u90a3\u4e48 $ans += 0$\n2. \u5047\u5982\u6ca1\u6709\uff0c\u90a3\u4e48\u6311\u51fa\u4ed6\u7684\u524d\u9a71\u548c\u540e\u7ee7\uff0c$ans += min(next-a[i],a[i]-prv )$\n\n```c++\n#define _CRT_SECURE_NO_WARNINS\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n// \u5feb\u8bfb\ntemplate <typename T>\ninline T read()\n{\n\tT x = 0;\n\tchar ch = getchar();\n\tbool f = 0;\n\twhile(ch < '0' || ch > '9')\n\t{\n\t\tf = (ch == '-');\n\t\tch = getchar();\n\t}\n\twhile(ch <= '9' && ch >= '0')\n\t{\n\t\tx = (x << 1) + (x << 3) + (ch - '0');\n\t\tch = getchar();\n\t}\n\treturn  f? -x : x;\n}\n// \u5feb\u8f93\ntemplate <typename T>\nvoid put(T x)\n{\n\tif(x < 0)\n\t{\n\t\tx = -x;\n\t\tputchar('-');\n\t}\n\tif(x < 10) {\n\t\tputchar(x + 48);\n\t\treturn;\n\t}\n\tput(x / 10);\n\tputchar(x % 10 + 48);\n\treturn ;\n}\n// \u6a21\u677f\u7c7b \u7528\u7684\u662f\u66ff\u7f6a\u7f8a\ntemplate <typename name>\nclass ScapeGoat\n{\n\tprivate:\n\t\tconstexpr static const double alpha=0.75;\n\t\tstruct sgtNode;\n\t\ttypedef sgtNode *sgt;\n\t\t// \u8868\u793a\u4e00\u4e2a\u7ed3\u70b9\n    \tstruct sgtNode\n\t\t{\n\t\t\tsgt ls, rs;\n\t\t\tint size, valid;\n\t\t\tname data;\n\t\t\tbool del;\n            // \u662f\u5426\u4e0d\u597d\n\t\t\tinline bool bad()\n\t\t\t\t{ return (double) ls->size > alpha * (double) size || (double) rs->size > alpha * (double) size || valid * 3 <= size; }\n\t\t\t// \u66f4\u65b0\u6811\u7ed3\u70b9\n            inline void update()\n\t\t\t\t{ size = ls->size + rs->size + !del; valid = ls->valid + rs->valid + !del; }\n\t\t};\n\tprotected:\n\t\tsgt rot = NULL,NullNode = NULL;\n\t\t// \u65b0\u5efa\u8fd9\u68f5\u6811\n\t\tinline sgt init(name x)\n\t\t{\n\t\t\tsgt tmp = new sgtNode;\n\t\t\ttmp->ls = tmp->rs = NullNode;\n\t\t\ttmp->del = 0;\n\t\t\ttmp->size = tmp->valid = 1;\n\t\t\ttmp->data = x;\n\t\t\treturn tmp;\n\t\t}\n\t\t// \u91cd\u6784\u7684\u8fc7\u7a0b\n    \t// \u5148\u7edf\u8ba1\u7ed3\u70b9\n\t\tvoid dfs(sgt T, vector <sgt> &ve) {\n\t\t\tif(T == NullNode) return ;\n\t\t\tdfs(T->ls ,ve);\n\t\t\tif(!T->del) ve.push_back(T);\n\t\t\tdfs(T->rs, ve);\n\t\t\tif(T->del) delete T;\n\t\t}\n\t\t// \u91cd\u6784\n\t\tsgt build(int l, int r, vector <sgt> &ve) {\n\t\t\tif(l > r) return NullNode;\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tsgt T = ve[mid];\n\t\t\tT->ls = build(l, mid - 1, ve);\n\t\t\tT->rs = build(mid + 1, r, ve);\n\t\t\tT->update();\n\t\t\treturn T;\n\t\t}\n    \t\n\t\tvoid rebuild(sgt &T) {\n\t\t\tvector <sgt> ve;\n\t\t\tdfs(T, ve);\n\t\t\tT = build(0, ve.size() - 1, ve);\n\t\t\treturn ;\n\t\t}\n\t\t// \u6dfb\u52a0\u7ed3\u70b9\n\t\tvoid insert(sgt &T, name x) {\n\t\t\tif(T == NullNode) {\n\t\t\t\tT = init(x);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t++(T->size);\n\t\t\t++(T->valid);\n\t\t\tif(x < T->data) insert(T->ls, x);\n\t\t\telse insert(T->rs, x);\n\t\t\tif(T->bad()) rebuild(T);\n\t\t\treturn;\n\t\t}\n    \t//\u5220\u9664\uff0c\u4e0d\u8fc7\u597d\u50cf\u4e0d\u9700\u8981qwq\n\t\tvoid erase(sgt &T, int rk) {\n\t\t\tif(T == NullNode) return;\n\t\t\tif(!T->del && rk == T->ls->valid + !T->del) {\n\t\t\t\tT->del = 1;\n\t\t\t\t--(T->valid);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t--(T->valid);\n\t\t\tif(rk <= T->ls->valid + !T->del) erase(T->ls, rk);\n\t\t\telse erase(T->rs, rk - T->ls->valid - !T->del);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvoid makeempty(sgt &x)\n\t\t{\n\t\t\tif(x == NullNode) return;\n\t\t\tmakeempty(x->ls);\n\t\t\tmakeempty(x->rs);\n\t\t\tdelete x;\n\t\t\tx = NullNode;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tbool fin(sgt T, name x)\n\t\t{\n\t\t\tif(T == NullNode) return 0;\n\t\t\tif(T->data == x) return 1;\n\t\t\tif(T->data < x) return fin(T->rs, x);\n\t\t\treturn fin(T->ls, x);\n\t\t}\n\tpublic:\n\t\tScapeGoat()\n\t\t{\n\t\t\tif(NullNode == NULL)\n\t\t\t{\n\t\t\t\tNullNode = new sgtNode;\n\t\t\t\tNullNode->ls = NullNode->rs = NullNode;\n\t\t\t\tNullNode->size = NullNode->valid = NullNode->del = 0;\n\t\t\t}\n\t\t\trot = NullNode;\n\t\t}\n\t\t// \u5f97\u5230\u4e00\u4e2a\u6392\u540d\u4e3ark\u7684\u6570\n\t\tinline name get_data(int rk) {\n\t\t\tsgt T = rot;\n\t\t\twhile(T != NullNode) {\n\t\t\t\tif(!T->del && !T->del + T->ls->valid == rk) { return T->data; }\n\t\t\t\tif(rk <= T->ls->valid + !T->del) T = T->ls;\n\t\t\t\telse {\n\t\t\t\t\trk -= T->ls->valid + !T->del;\n\t\t\t\t\tT = T->rs;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// x \u7684\u6392\u540d\n\t\tinline int get_rank(name x) {\n\t\t\tint ans = 1;\n\t\t\tsgt T = rot;\n\t\t\twhile(T != NullNode) {\n\t\t\t\tif(x <= T->data) { T = T->ls; }\n\t\t\t\telse { ans += T->ls->valid + !T->del; T=T->rs; }\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\t\t// \u52a0\u6570\n\t\tinline void insert(name x) { insert(rot, x); return ; }\n\t\t// \u5220\u6570\n\t\tinline void erase(name x) { erase(rot, get_rank(x)); }\n\t\t// \u67e5\u627e\u8fc7\u7a0b\n\t\tinline bool find(name x) { return fin(rot, x); }\n\t\t// \u524d\u9a71\n\t\tinline int prv(name x) { return get_data(get_rank(x) - 1); }\n\t\t//\u540e\u7ee7\n\t\tinline int next(name x) { return get_data(get_rank(x + 1)); }\n\t\t// \u6e05\u7a7a\u6570\uff0c\u6bd4\u8f83\u8282\u4fed\n\t\tvoid clear() { makeempty(rot); }\n};\n\nScapeGoat <int> tree;\n\n#define rd read <int> ()\n\nint t, n;\n\nint main()\n{\n#ifdef _DEBUG\n\tfreopen(\"in.txt\", \"r\", stdin);\n#endif\n\tt = rd;\n\twhile(t--)\n\t{\n\t\tn = rd;\n\t\tint tmp, ans;\n\t\tans = tmp = rd;\n\t\ttree.insert(tmp);\n        // \u5148\u52a0\u5165\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u4e3a\u4ec0\u4e48\uff0c\u81ea\u5df1\u5206\u6790\u4e00\u4e0b\n\t\ttree.insert(1 << 28);\n\t\ttree.insert(- (1 << 28));\n\t\tfor(int i = 2; i <= n; ++i)\n\t\t{\n\t\t\ttmp = rd;\n            // \u6ce8\u610f\u8fd9\u4e2a\u5f88\u91cd\u8981\n\t\t\tif(tree.find(tmp)) continue;\n\t\t\tint a = tree.next(tmp);\n\t\t\tint b = tree.prv(tmp);\n\t\t\tans += min(tmp - b, a - tmp);\n\t\t\ttree.insert(tmp);\n\t\t}\n\t\ttree.clear();\n\t\tput(ans);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```\n\n## \u5d6c\n\n\u4eca\u5e74\uff0c\u521d\u4e09\u7684\u849f\u84bb\u8981\u4e89\u53d6\u7701\u961f\u5440\uff01\uff01",
        "postTime": 1585574730,
        "uid": 232125,
        "name": "SiRiehn_nx",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1732 \u3010[TJOI2011]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u518d\u53d1\u4e00\u7bc7\u57fa\u4e8e\u6570\u636e\u8303\u56f4\u7684\u9898\u89e3\u5427\uff08\u5c31\u662f\u505a\u4e00\u4e9b\u4f18\u5316\uff09\n\n\u201c\u57fa\u4e8e\u6570\u636e\u8303\u56f4\u201d\u5176\u5b9e\u5927\u81f4\u5c31\u662f\u8fd9\u6837\uff1a\n\n\u6bd4\u5982\uff1a1\uff0c2\uff0c3\uff0c4\uff0c5\n\n\u4e00\u5f00\u59cb\u6807\u8bb0\u6570\u7ec4\u90fd\u4e3a\u7a7a\n\n0\uff0c0\uff0c0\uff0c0\uff0c0\n\n\u7136\u540e\u8fb9\u8bfb\u8fb9\u505a\uff08\u7b2c\u4e00\u4e2a\u6570\u5355\u72ec\u8f93\u5165\uff0c\u628a\u548c\u8bbe\u4e3a\u7b2c\u4e00\u4e2a\u6570\uff09\n\n1. 1\uff0c0\uff0c0\uff0c0\uff0c0\uff1b\u548c\uff1a1\n\n\u540e\u9762\u7684\u6570\u5148\u8f93\u5165\uff0c\u7136\u540e\u7528\u4e24\u4e2a\u6307\u9488\uff08\u521d\u59cb\u503c\u90fd\u4e3a\u8fd9\u4e2a\u6570\uff09\u4f9d\u6b21\u5411\u4e24\u8fb9\u9012\u589e\uff08\u51cf\uff09\uff0c\u76f4\u5230\u627e\u5230\u6807\u8bb0\u4e3a\u6b62\u3002\u7136\u540e\u628a\u548c\u589e\u52a0\u5148\u627e\u5230\u6807\u8bb0\u7684\u6307\u9488\u4f4d\u7f6e\u4e8e\u8f93\u5165\u7684\u6570\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u3002\n\n2. 1\uff0c1\uff0c0\uff0c0\uff0c0\uff1b\u548c\uff1a2\n\n3. 1\uff0c1\uff0c1\uff0c0\uff0c0\uff1b\u548c\uff1a3\n\n4. 1\uff0c1\uff0c1\uff0c1\uff0c0\uff1b\u548c\uff1a4\n\n5. 1\uff0c1\uff0c1\uff0c1\uff0c1\uff1b\u548c\uff1a5\n\n\u5206\u6790\u4f18\u5316\uff1a\n\n\u9996\u5148\uff0c\u7531\u4e8e\u53ea\u7528\u8f93\u51fab\u6570\u7ec4\u7684\u548c\uff0c\u662f\u4e0d\u7528\u65b0\u5f00\u4e00\u4e2ab\u6570\u7ec4\u7684\uff0c\u53ea\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u8bb0\u5f55\u548c\u3002\n\n\u5176\u6b21\uff0c\u5f88\u591adalao\u90fd\u7528\u4e86memset\u3002\u5176\u5b9e\u4e0d\u7528\u6e05\u7a7a\u6570\u7ec4\u3002\u628a\u6807\u8bb0\u6570\u7ec4\u8bbe\u4e3aint\uff0c\u7136\u540e\u6539\u53d8\u6bcf\u4e00\u7ec4\u6570\u636e\u7684\u6807\u8bb0\u5373\u53ef\uff08\u6bd4\u5982\u7b2ct\u7ec4\u6570\u636e\u7528t\u6765\u6807\u8bb0\uff09\u3002\n\n\u8fd8\u6709\uff0c\u8d8a\u754c\u5224\u65ad\u4e5f\u53ef\u4ee5\u4f18\u5316\uff1a\u7528\u4e24\u4e2a\u53d8\u91cf\u8bb0\u5f55\u8f93\u5165\u6570\u636e\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5224\u65ad\u6307\u9488\u662f\u5426\u8d85\u51fa\u8303\u56f4\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[70000];//\u6807\u8bb0\u6570\u7ec4\nint main() \n{\n\tint n,p,t,i,j,k,s,m,mn,mx;\n\tcin>>t;\n\tfor(i=1;i<=t;i++)//\u5fc5\u987b\u4ece1\u5f00\u59cb\uff0c\u56e0\u4e3a\u6807\u8bb0\u6570\u7ec4\u7684\u521d\u59cb\u503c\u4e3a0\n\t{\n\t\tcin>>n>>p;\n\t\tfor(a[p]=i,mn=mx=s=p,j=1;j<n;j++)//\u7279\u5224\u7b2c\u4e00\u4e2a\u6570\n\t\t{\n\t\t\tcin>>p,m=1e9;\n\t\t\tfor(k=p;k>=mn&&a[k]!=i;k--);//\u7b2c\u4e00\u6b21\u67e5\u627e\n\t\t\tif(a[k]==i) m=p-k;//\u8bb0\u5f55\u5dee\u7684\u6700\u5c0f\u503c\n\t\t\tfor(k=p;k<=mx&&a[k]!=i;k++);//\u7b2c\u4e8c\u6b21\u67e5\u627e\n\t\t\tif(a[k]==i) m=min(m,k-p);//\u8bb0\u5f55\u5dee\u7684\u6700\u5c0f\u503c\n\t\t\ts+=m,a[p]=i,mx=max(mx,p),mn=min(mn,p);//\u8bb0\u5f55\u4e0a\u754c\u548c\u4e0b\u754c\uff0c\u6807\u8bb0\n\t\t}\n\t\tcout<<s<<endl;\n\t}\n}\n```\n",
        "postTime": 1570001150,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1732 \u3010[TJOI2011]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u641e\u4e00\u4e2a\u6b63\u5e38\u53c8\u6bd4\u8f83\u7b80\u5355\u7684\u7b97\u6cd5\n\nc++\u7684stl\u8fd8\u662f\u5f88\u5f3a\u5927\u7684\uff0c\u8fd9\u91cc\u7528\u5230\u4e86set\uff0c\u5177\u4f53\u7528\u6cd5[\u53c2\u89c1](http://www.cplusplus.com/reference/set/)\n\n\u8fd9\u4e2a\u9898\u76ee\u5c31\u662f\u8ba9\u6211\u4eec\u6c42\u4e0e\u7b2cai\u4e2a\u6570\u6700\u63a5\u8fd1\u7684\u6570\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528set\u4e71\u641e\u4e862333\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(nlog2n)\uff0c\u4f46set\u5e38\u6570\u5f88\u5927\uff08\u4e0d\u662f\u4e00\u822c\u7684\u5927\uff09\uff0c\u8dd1\u5f97\u5f88\u6162\n\ncode:\n```cpp\n    #include<iostream>\n    #include<cstdio>\n    #include<set>\n    #include<cmath>\n    using namespace std;\n    int t,n;\n    int main()\n    {\n        scanf(\"%d\",&t);\n        int ans;set<int> s;\n        int a,x;\n        set<int>::iterator it;\n        while(t--)\n        {\n            scanf(\"%d\",&n);\n            s.clear();\n            scanf(\"%d\",&a);s.insert(a);ans=a;\n            for(int i=2;i<=n;i++)\n            {\n                scanf(\"%d\",&a);\n                it=s.lower_bound(a);\n                if(it!=s.end()&&it!=s.begin()){x=abs((*it)-a);it--;x=min(x,abs(a-(*it)));}\n                else if(it==s.end()) {it--;x=abs(a-(*it));}\n                else x=abs((*it)-a);\n                ans+=x;\n                s.insert(a);\n            }\n            printf(\"%d\\n\",ans);\n        }\n        return 0;\n}\n```",
        "postTime": 1515327689,
        "uid": 27030,
        "name": "ustze",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1732 \u3010[TJOI2011]\u5e8f\u5217\u3011"
    }
]