[
    {
        "content": "\u4e3a\u5565\u6709\u6ca1\u9898\u89e3\u3002\u3002\u3002\u3002\u849f\u84bb\u6765\u6c34\u4e00\u6c34\u5427\u3002\u3002\u3002\n\n\n\n\u4e00\u822c\u8fd9\u79cd\u4f4d\u8fd0\u7b97\u7684\u9898\u90fd\u8981\u628a\u6bcf\u4e00\u4f4d\u62c6\u5f00\u6765\u770b\uff0c\u56e0\u4e3a\u4f4d\u8fd0\u7b97\u6bcf\u4e2a\u4f4d\u7684\u7ed3\u679c\u8fd9\u548c\u8fd9\u4e00\u4f4d\u7684\u6570\u6709\u5173\u3002\n\n\u8fd9\u6837\u6211\u4eec\u7528s[i]\u8868\u793aa\u7684\u524d\u7f00\u548c\uff0c\u5373a[1]+a[2]+....a[i]\uff0c\u7136\u540e\u6211\u4eec\u4ece\u8fd9\u4e9b\u6570\u4e8c\u8fdb\u5236\u6700\u53f3\u4f4d\uff082^0\uff09\u5f00\u59cb\uff0c\u6309\u7167\u6bcf\u4e00\u4f4d\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u6765\u8ba1\u7b97\u3002\n\n\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u7b97\u5230\u6700\u53f3\u4f4d\uff082^0\uff09,\u5e76\u4e14\u4f4d\u4e8e\u7b2ci\u4e2a\u6570\uff0c\u6211\u4eec\u60f3\u8981\u77e5\u9053\u4ee5i\u7ed3\u5c3e\u7684\u8fde\u7eed\u548c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u53ea\u9700\u8981\u77e5\u9053\u6709\u591a\u5c11s[i]-s[j]\uff080<=j<i\uff09\u76842^0\u4f4d\u662f1\u3002 \uff08\u8bbes[0]=0\uff09\n\n\u5982\u679c\u8fd9\u4e2a\u6570\u662f\u5947\u6570\uff0c\u5c31\u8bf4\u660e\u5f02\u6216\u4e861\u5947\u6570\u6b21\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u5f02\u6216\u4e861\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u8bb0\u5f55\u8fd9\u4e00\u4f4d\u603b\u7684\u5f02\u6216\u8d21\u732e\u7684\u53d8\u91cfcnt\u5f02\u62161\u5373\u53ef\uff1b\n\n\u5982\u679c\u662f\u5076\u6570\u5c31\u4e0d\u7528\u7ba1\u4e86\uff0c\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\u3002\n\n\n\u5bf9\u4e8e\u6570\u7684\u6bcf\u4e00\u4f4d\u5982\u679c\u6700\u540ecnt=1\u7684\u8bdd\uff0c\u5c31\u8bf4\u660e\u5728\u8fd9\u4e00\u4f4d\u6240\u6709\u8fde\u7eed\u548c\u7684\u5f02\u6216\u548c\u4e3a1\uff0c\u6211\u4eec\u5c31\u9700\u8981\u628a\u7b54\u6848\u52a0\u4e0a(1<<(\u8fd9\u4e2a\u4f4d\u6570\uff09\uff09\u3002\n\n\n\u90a3\u5982\u4f55\u5feb\u901f\u8ba1\u7b97\u6709\u591a\u5c11\u4e2as[i]-s[j]\u7684\u4e8c\u8fdb\u5236\u7b2ck\u4f4d\u662f\u5426\u4e3a1\u5462\uff1f\uff1f\n\n\u7b54\u6848\u662f\u5229\u7528\u6743\u503c\u6811\u72b6\u6570\u7ec4\u3002\n\n\n\u8003\u8651\u5230\u03a3a \u6700\u5927\u624d\u67091000000\uff0c\u6211\u4eec\u6784\u9020\u4e24\u68f5\u6743\u503c\u6811\u72b6\u6570\u7ec4\uff0c\u4e00\u68f5\u8bb0\u5f55\u5f53\u524d\u4f4d\u4e3a1\u7684\uff0c\u53e6\u4e00\u68f5\u8bb0\u5f55\u4e3a0\u7684\u3002\n\n\u5982\u679c\u5f53\u524d\u626b\u63cf\u5230\u7684s[i]\u7684\u4e8c\u8fdb\u5236\u7b2ck\u4f4d\u4e3a1\uff0c\u90a3\u4e48\u5bf9\u8fd9\u4e00\u4f4d\u7684\u7b54\u6848\u6709\u8d21\u732e\u7684\u53ea\u6709\u90a3\u4e9b\u7b2ck\u4f4d\u4e3a1\u4e14\u7b2ck\u4f4d\u5411\u53f3\u7684\u6570\u6bd4s[i]\u7b2ck\u4f4d\u5411\u53f3\u7684\u6570\u5927\u7684\u6216\u8005\u7b2ck\u4f4d\u4e3a0\u4e14\u7b2ck\u4f4d\u5411\u53f3\u7684\u6570\u4e0d\u6bd4s[i]\u7b2ck\u4f4d\u5411\u53f3\u7684\u6570\u5927\u7684\u3002\uff08\u53ef\u80fd\u6709\u70b9\u62d7\u53e3\uff0c\uff0c\u90fd\u602a\u6211\u8bed\u6587\u5b66\u7684\u4e0d\u597d\uff09\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\u5982\u679c\u7b2ck\u4f4d\u90fd\u4e3a1\u7684\u8bdd\uff0c\u90a3\u4e48\u53ea\u6709\u540e\u9762\u90a3\u4e9b\u4f4d\u7684\u548c\u5927\u4e8es[i]\u7684\u6570\uff0cs[i]\u51cf\u53bb\u5b83\u4e4b\u540e\u7b2ck\u4f4d\u624d\u80fd\u51fa\u73b01\uff08\u56e0\u4e3as[i]\u6bd4\u5b83\u5c0f\u7684\u8bdd\u9700\u8981\u5411\u66f4\u9ad8\u4f4d\u501f\u6570\uff0c\u5c31\u548c\u5c0f\u5b66\u5b66\u7684\u6a2a\u5f0f\u51cf\u6cd5\u5dee\u4e0d\u591a\uff09\uff0c\u4ece\u800c\u5bf9\u7b54\u6848\u4f5c\u51fa\u8d21\u732e\uff1b\n\n\u5982\u679c\u7b2ck\u4f4d\u4e3a0\u7684\u8bdd\uff0c\u5982\u679c\u540e\u9762\u518d\u6bd4s[i]\u5927\u7684\u8bdd\uff0cs[i]\u7b2ck\u4f4d\u76841\u5c31\u9700\u8981\u501f\u7ed9\u4f4e\u4e00\u4f4d\u7684\u4e86\uff0c\u6240\u4ee5\u540e\u9762\u5fc5\u987b\u4e0d\u6bd4s[i]\u5927\u3002\n\n\n\n\u8fd9\u6837\u5c31\u5f88\u597d\u7528\u6743\u503c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e86\u3002\u3002\u3002\u3002\n\n\ncode:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define max(a,b) (a)>(b)?(a):(b)\nusing namespace std;\nll s[100005],a[100005];\nll f[2][1000005],n,m,ans=0,now,cnt=0,tmp;\nbool flag;\nll maxn;\ninline void read(ll&x){\n  x=0; char ch=getchar();\n  while(!isdigit(ch)) ch=getchar();\n  for(;isdigit(ch);ch=getchar())  x=x*10+ch-'0';\n}\ninline void update(ll x,ll y){\n   for(;x<=1000000;x+=x&-x) f[y][x]++;\n}\ninline ll query(ll x,ll y){\n   ll ansd=0;\n   for(;x;x-=x&-x) ansd+=f[y][x];\n   return ansd;\n}\nint main(){\n  read(n);\n  for(ll i=1;i<=n;i++) read(s[i]),s[i]+=s[i-1],maxn=max(maxn,s[i]);\n  for(ll i=0;i<=20;i++){\n     if((1<<i)>maxn) break;\n     memset(f,0,sizeof(f));\n     flag=0,cnt=0;\n     update(1,0);\n     for(ll j=1;j<=n;j++){\n        tmp=s[j]&(1<<i);\n        if(tmp) now=query(a[j]+1,0)+query(1000000,1)-query(a[j]+1,1);\n        else now=query(a[j]+1,1)+query(1000000,0)-query(a[j]+1,0);\n        if(now%2) cnt^=1;\n        update(a[j]+1,(tmp>0?1:0));\n        a[j]|=tmp;\n     }\n     if(cnt) ans+=(1<<i);\n  }\n  cout<<ans;\n  return 0;\n}\n```",
        "postTime": 1502365003,
        "uid": 31377,
        "name": "\u91d1\u7237\u7237\u54c8\u54c8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3760 \u3010[TJOI2017]\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "\u76f8\u4fe1\u4f60\u7684\u4fe1\u4ef0\u2026\u2026\n\n\u90fd\u662flogN\uff0c\u5404\u79cdlogN\u7684\u5e38\u6570\u53ef\u662f\u5343\u5dee\u4e07\u522b\u7684\n\n\u518d\u6b21\u91cd\u7533\u4e00\u8fb9\uff0cO(NlogN)\u7684**\u6e10\u8fdb**\u590d\u6742\u5ea6\u662f\u6307\uff0c\u968f\u7740\u8f93\u5165\u7684\u589e\u957f\uff0c\u8017\u65f6\u7684**\u589e\u957f**\u548cNlogN\u540c\u9636\u3002\u56e0\u6b64\u548c\u5b9e\u9645\u8017\u65f6\u5b8c\u5168\u6ca1\u8054\u7cfb\u554a\u2026\u2026(\u53ea\u662f\u5927\u90e8\u5206\u65f6\u5019\u5e38\u6570\u5dee\u4e0d\u591a\u624d\u6709\u4e86\u90a3\u4e2a\u628a\u6570\u636e\u8303\u56f4\u4ee3\u8fdb\u53bb\uff0c\u7b97\u51fa\u6765\u4e0d\u8d85\u8fc75\\*10^8/3\\*10^8/10^9\u5c31\u80fd\u8fc7\u7684\u8bf4\u6cd5\u7684)\n\n# \u8981\u5f00longlong\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u8fd9\u9053\u9898\u8ba9\u6211\u4eec\u6c42\u5f02\u6216\u548c\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u4f4d\u8fd0\u7b97\u7684\u4e1c\u897f\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u529e\u6cd5\uff0c\u53ea\u6709\u4e24\u6761\u8def\u53ef\u8d70\uff0c1\uff0c\u62c6\u4f4d2\uff0c\u627e\u89c4\u5f8b\n\n\u9996\u5148\u9898\u76ee\u4e2d\u8ba9\u6211\u4eec\u6c42\u6240\u6709\u7684\u5b50\u533a\u95f4\u548c\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u505a\u4e2a\u524d\u7f00\u548c\u4ec0\u4e48\u7684\u5c31\u53ef\u4ee5O(1)\u6c42\u51fa,\u4ee4sum(i)\u8868\u793ai\u4e3a\u7ed3\u5c3e\u7684\u524d\u7f00\u548c\n\n\u90a3\u4e48\u9898\u76ee\u4e2d\u5176\u5b9e\u662f\u8ba9\u6211\u4eec\u6c42\n\n# $\u2295\\sum_{i=1}^{n}\\sum_{j=0}^{i-1}sum(i)-sum(j)$\n\n\u4e00\u4e2a\u975e\u5e38\u76f4\u767d\u7684\u60f3\u6cd5\u5c31\u662f\u679a\u4e3ei\uff0c\u4e4b\u540e\u518d\u679a\u4e3ej\uff0c\u7136\u540e\u5982\u679c\u6211\u4eecnc\u518d\u62c6\u4e00\u4e0b\u4f4d\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2aO(N^2logM)\u7684\u4f18\u79c0\u505a\u6cd5\n\n\u4f46\u662f\u6211\u4eec\u60f3\u4e00\u4e0b\u554a\uff0c\u65e2\u7136\u6211\u4eec\u90fd\u62c6\u4f4d\u4e86\uff0c\u6b64\u65f6\u7684\u51cf\u6cd5\u8fd0\u7b97\u548c\u5f02\u6216\u8fd0\u7b97\u90fd\u4f1a\u53d8\u7684\u975e\u5e38\u7b80\u5355\u6211\u4eec\u8981\u597d\u597d\u7814\u7a76\u4e0b\u6709\u4ec0\u4e48\u6027\u8d28\n\n\u56e0\u4e3a\u6211\u4eec\u62c6\u4e86\u4f4d\uff0c\u6240\u4ee5sum(i)-sum(j)\u7684\u7b2ck\u4f4d\u4e0d\u662f0\u5c31\u662f1\uff0c\u800c\u4e14\u6211\u4eec\u53d1\u73b0\uff0c\u5f02\u6216\u8fd0\u7b97\u5728\u53ea\u6709\u4e00\u4f4d\u7684\u60c5\u51b5\u4e0b\u7b49\u4ef7\u4e8e%2\u4e0b\u7684\u8fd0\u7b97\uff0c\u56e0\u6b64\u6211\u4eec\u5bf9\u4e8e\u8fd9\u7b2ck\u4f4d\u6765\u8bb2\uff0c\u6211\u4eec\u7edf\u8ba1\u51fa\u8fd9\u4e00\u4f4d\u5230\u5e95\u6709\u591a\u5c11\u4e2a1\u5c31\u597d\u4e86\uff0c\u6700\u540e%2\u518d\u4e58\u4e0a\u4e00\u4e2a(1<<k)\u5c31\u597d\u4e86\uff0c\u6240\u4ee5\u73b0\u5728\u7b54\u6848\u88ab\u6211\u4eec\u6298\u817e\u6210\u4e86\u8fd9\u4e2a\u5f0f\u5b50\n\n#### $\\sum_{k=0}^{(1<<k)<sum(n)}(1<<k)(\\sum_{i=1}^{n}\\sum_{j=0}^{i-1}((sum(i)-sum(j))>>k\\&1)mod2$\n\n\u5c3d\u7ba1\u8fd9\u4e2a\u5f0f\u5b50\u5f88\u9b3c\u755c\u5427\u4f46\u662f\u6211\u4eec\u603b\u7b97\u4e0d\u7528\u89c1\u5230\u5f02\u6216\u4e86\n\n\u6211\u4eec\u53d1\u73b0\u5916\u5c42\u7684k\u80af\u5b9a\u662f\u7701\u4e0d\u4e86\u7684\uff0c\u5185\u5c42\u7684i\u5176\u5b9e\u4e5f\u4e0d\u662f\u5f88\u80fd\u7701\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u7cbe\u529b\u4e3b\u8981\u653e\u5728\u5982\u4f55\u5904\u7406j\u7684\u5faa\u73af\u4e0a\n\n\u6211\u4eec\u53d1\u73b0\u4e0d\u5c31\u662f\u7ed9\u5b9a\u4e86sum(i)\u548ck\uff0c\u6c42\u6709**\u591a\u5c11\u4e2asum(j)**\u548csum(i)\u505a\u4e2a\u5dee\u4e4b\u540e\u7b2ck\u4f4d\u503c\u4e3a1\u5417\u2026\u2026\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u6b64\u65f6\u5982\u679csum(i)\u7b2ck\u4f4d\u662f1\uff0c\u90a3\u4e48\u6211\u4eec\u5e0c\u671b\u51cf\u4e86sum(j)\u4e4b\u540e\u8fd8\u662f1\n\n\u90a3\u4e48\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\n\n1.\u6ca1\u6709\u53d1\u751f\u501f\u4f4d\uff0c\u5e76\u4e14sum(j)\u7684\u7b2ck\u4f4d\u662f0\uff0c\u8fd9\u6837\u624d\u53ef\u4ee5\u4fdd\u8bc1sum(i)\u76841\u4e0d\u4f1a\u88ab\u51cf\u6389\n\n2.\u53d1\u751f\u4e86\u501f\u4f4d\uff0c\u5e76\u4e14sum(j)\u7684\u7b2ck\u4f4d\u662f1\uff0c\u8fd9\u6837\u6211\u4eec\u4f1a\u53d1\u73b0sum(i)\u88ab\u51cf\u4e861\u4e4b\u540e\uff0c\u8fd9\u4e00\u4f4d\u4f1a\u53d8\u62100\uff0c\u6211\u4eec\u501f\u4e00\u4e0b\u4f4d0\u5c31\u53d8\u62101\u4e86\n\n\u82e5sum(i)\u7b2ck\u4f4d\u662f0\u5462\uff1f\u5fc5\u987b\u53d1\u751f\u4e14\u4ec5\u53d1\u751f\u4e861\u6b21\u501f\u4f4d\u624d\u53ef\u4ee5\u53d8\u62101\n\n1.\u8fd9\u4e2a\u501f\u4f4d\u6765\u6e90\u4e8esum(j)\u7684\u7b2ck\u4f4d\u662f1\uff0c\u5bfc\u81f4\u7684\u501f\u4f4d\uff0c\u5e76\u4e14\u6b64\u65f6\u4e0d\u53ef\u4ee5\u518d\u53d1\u751f\u7b2c\u4e8c\u6b21\u501f\u4f4d\n\n2.\u8fd9\u4e2a\u501f\u4f4d\u6765\u6e90\u4e8esum(j)\u7684\u524dk-1\u4f4d\uff0c\u6240\u4ee5\u6b64\u65f6sum(j)\u7b2ck\u4f4d\u5fc5\u987b\u662f0\n\n\u5982\u4f55\u5224\u5b9a\u4f1a\u4e0d\u4f1a\u53d1\u751f\u501f\u4f4d\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff0c\u5982\u679csum(j)\u7684\u524dk-1\u4f4d\u7684\u503c\u5927\u4e8esum(i)\u524dk-1\u4f4d\u7684\u503c\uff0c\u5c31\u4f1a\u53d1\u751f\u501f\u4f4d\uff0c\u5426\u5219\u4e0d\u53d1\u751f\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u597d\u50cfsum(i)\u548csum(j)\u7684\u503c\u4e0d\u4f1a\u592a\u5927\uff0c\u800c\u4e14\u5427\uff0c\u8fd9\u662f\u4e2a\u503c\u7684\u5927\u4e8e\u5c0f\u4e8e\u95ee\u9898\uff0c\u6211\u4eec\u81ea\u7136\u5c31\u60f3\u5230\u4e86\u7528\u533a\u95f4\u6c42\u548c\u7684\u5f62\u5f0f\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u628a\u5927\u4e8e\u548c\u5c0f\u4e8e\u7684\u9650\u5236**\u53d8\u6210\u503c\u57df\u7684\u9650\u5236**(\u8bb2\u9053\u7406\u5c31\u7b97\u5927\u4e86\u6211\u4eec\u4e5f\u53ef\u4ee5\u79bb\u6563\u5316)\n\n\u53e6\u5916\uff0c\u6211\u4eec\u8981\u6c42\u5728j\u5fc5\u987b\u5c0f\u4e8ei,\u6b64\u65f6\u6211\u4eec\u9700\u8981\u6309\u987a\u5e8f\u5c06\u8fd9\u4e9b\u503c\u63d2\u5165\u6570\u636e\u7ed3\u6784\u4e4b\u4e2d\uff0c\u8fd9\u6837\u5c31\u6ee1\u8db3\u4e86i>j\u7684\u9650\u5236\u5173\u7cfb\n\n\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u652f\u6301\u5355\u70b9\u4fee\u6539\u533a\u95f4\u6c42\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u6811\u72b6\u6570\u7ec4\uff0c\u5f00\u4e24\u4e2a\uff0c\u4f4d\u7f6e\u5c31\u4ee3\u8868\u503c\uff0c\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u4f4d\u4e3a0\u7684\uff0c\u53e6\u4e00\u4e2a\u8bb0\u5f551\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5927\u529b\u7b97\u4e86~\uff0c\u5982\u679c\u6bcf\u90e8%2\u53ef\u4ee5\u4e0d\u5f00longlong\uff0c\u4f46\u662f\u5982\u679c\u50cf\u6211\u4e00\u6837\u7684\u8bdd\u2026\u2026\u8fd8\u662f\u5f00longlong\u5427\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u662f O(NlogM^2)\u5982\u679c\u6709\u79bb\u6563\u5316\u7684\u8bdd\u590d\u6742\u5ea6\u4f1a\u964d\u5230O(NlogNlogM)\u4f46\u662f\u5f88\u4e0d\u63a8\u8350(\u79bb\u6563\u5316\u5e38\u6570\u5927\u2026\u2026)\n\n\u4ee3\u7801\u8d85\u7ea7\u77ed~\n\n\u4e0a\u4ee3\u7801~\n\n```c\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;//\u4e0d\u6bcf\u6b21\u819c\u7684\u8bdd\u5c31\u8981\u5f00longlong \nconst int N=1e5+10;const int M=1e6+10;\nint n;int lim;int sum[N];ll res;\nstruct treearray//\u8fd9\u91cc\u6ce8\u610f\u4e00\u4e2a\u5751\uff0c\u6211\u4eec\u5bf9\u4e8e\u7b2c0\u4e2a\u524d\u7f00\u548c\u4e5f\u8981\u5904\u7406\uff0c\u8fd9\u91cc\u6811\u72b6\u6570\u7ec4\u6574\u4f53\u53f3\u79fb1 \n{\n\tll ta[2*M];\n\tinline void c(int x,ll t){x+=1;for(;x<=lim+1;x+=x&(-x)){ta[x]+=t;}}\n\tinline ll q(int x){x+=1;ll r=0;for(;x>0;x-=x&(-x)){r+=ta[x];}return r;}\n\tinline ll s(int l,int r){return q(r)-q(l);}\n\tinline void clear(){for(int i=0;i<=lim+1;i++){ta[i]=0;}}\n}ta1,ta0;\nint main()\n{\n\tscanf(\"%d\",&n);for(int i=1;i<=n;i++){scanf(\"%d\",&sum[i]);sum[i]+=sum[i-1];}\n\tfor(int k=0;(1<<k)<=sum[n];k++)\n\t{\n\t\tlim=(1<<k)-1;ll ret=0;\n\t\tfor(int i=0;i<=n;i++)//\u8ba1\u7b97\u4e2a\u6570\u5e76\u7edf\u8ba1 \n\t\t{\n\t\t\tint nb=(sum[i]>>k)&1;int lst=sum[i]&lim;\n\t\t\tif(nb){ret+=ta0.s(-1,lst)+ta1.s(lst,lim);ta1.c(lst,1);}//\u5982\u679c\u662f1 \n\t\t\telse {ret+=ta1.s(-1,lst)+ta0.s(lst,lim);ta0.c(lst,1);}//\u5982\u679c\u662f0 \n\t\t}res+=(1<<k)*(ret%2);ta1.clear();ta0.clear();\n\t}printf(\"%lld\",res);return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n\n```\n",
        "postTime": 1520679869,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3760 \u3010[TJOI2017]\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "oscar \u795e\u4ed9\u7684\u9898\u89e3\u6709\u4e9b\u7b80\u7565\u4e86\uff0c\uff0c\u8fd9\u91cc\u8be6\u7ec6\u89e3\u91ca\u4e00\u4e0b\u5427\u3002\n\n\u9996\u5148\u9898\u76ee\u8981\u6c42\u6240\u6709\u5b50\u6bb5\u548c\u7684 $\\text{xor}$ \u548c\uff0c\u53ef\u4ee5\u5148\u628a\u539f\u5e8f\u5217\u505a\u4e00\u904d\u524d\u7f00\u548c\uff0c\u8fd9\u6837\u5c31\u8f6c\u5316\u4e3a\u4e86\u4e24\u4e24\u76f8\u51cf\u7684 $\\text{xor}$ \u548c\u3002\n\n\u8003\u8651\u8ba1\u7b97\u6bcf\u4e00\u79cd\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u51fa\u73b0\u5947\u6570\u6b21\u7684\u6570\u5f02\u6216\u8d77\u6765\u5c31\u662f\u7b54\u6848\u3002  \n\u8bb0 $i$ \u7684\u51fa\u73b0\u6b21\u6570\u4e3a $f_i$\uff0c\u539f\u5e8f\u5217\u7684\u524d\u7f00\u548c\u4e2d $i$ \u7684 **\u51fa\u73b0\u6b21\u6570** \u4e3a $s_i$\uff0c\u90a3\u4e48\u6709\uff1a  \n\n$$f_i=\\sum\\limits_{j=0}^{m-i}s_j\\times s_{j+i}$$ \n\u5176\u4e2d $m$ \u4e3a\u6240\u6709\u6570\u4e4b\u548c\u7684\u4e0a\u754c\uff0c\u5728\u6b64\u9898\u4e2d\u4e3a $10^6$\u3002\n\n\u7136\u540e\u4f60\u53d1\u73b0\u8fd9\u4e2a\u5f0f\u5b50\u975e\u5e38\u50cf\u4e00\u4e2a\u5377\u79ef\uff0c\uff0c  \n\u901a\u8fc7\u7ffb\u8f6c\u5e8f\u5217\uff0c\u53ef\u4ee5\u628a\u5b83\u53d8\u6210\u4e00\u4e2a\u6807\u51c6\u7684\u5377\u79ef\u5f0f\uff1a  \n\n$$f_{m-i}=\\sum\\limits_{j=0}^{i}s_j\\times s_{m-i+j}$$\n\u4e5f\u5c31\u662f\u628a $s$ \u7ffb\u8f6c\u540e\u548c\u539f\u6765\u7684 $s$ \u5377\u79ef\uff0c\u518d\u7ffb\u8f6c\u5c31\u53ef\u4ee5\u5f97\u5230 $f$ \u6570\u7ec4\u4e86\u3002  \n\u4f7f\u7528 $\\text{FFT}$ \u6765\u4f18\u5316\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(m\\log m)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a  \n```cpp\n#pragma GCC optimize (2)\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#define N 2097159\n#define M 1000000\n#define LIM 2097152\n#define reg register\n#define pi 3.141592653589793\nusing namespace std;\n\ninline void read(int &x){\n\tx = 0;\n\tchar c = getchar();\n\twhile(c<'0'||c>'9') c = getchar();\n\twhile(c>='0'&&c<='9'){\n\t\tx = (x<<3)+(x<<1)+(c^48);\n\t\tc = getchar();\n\t}\n}\n\nstruct complex{\n\tdouble r,i;\n\tinline complex(double r=0,double i=0):r(r),i(i){}\n\tinline complex operator + (const complex& x) const{\n\t\treturn complex(r+x.r,i+x.i);\n\t}\n\tinline complex operator - (const complex& x) const{\n\t\treturn complex(r-x.r,i-x.i);\n\t}\n\tinline complex operator * (const complex& x) const{\n\t\treturn complex(r*x.r-i*x.i,r*x.i+i*x.r);\n\t}\n\tinline complex operator / (const int& x) const{\n\t\treturn complex(r/x,i/x);\n\t}\n\tinline complex operator ~ () const{\n\t\treturn complex(r,-i);\n\t}\n};\n\nint rev[N];\n\ninline void pre(int lim){\n\tint l = 1;\n\twhile((1<<(l+1))<lim) ++l;\n\tfor(reg int i=1;i!=lim;++i)\n\t\trev[i] = (rev[i>>1]>>1)|((i&1)<<l);\n}\n\ninline void FFT(complex *a,int type,int lim){\n\tfor(reg int i=1;i!=lim;++i)\n\t\tif(i<rev[i]) swap(a[i],a[rev[i]]);\n\tcomplex w,x,y,rt;\n\tfor(reg int mid=1;mid!=lim;mid<<=1){\n\t\trt = complex(cos(pi/mid),type*sin(pi/mid)); //\u9884\u5904\u7406\u5355\u4f4d\u6839\u53cd\u800c\u4f1a\u6162 \u5f88\u795e\u5947\n\t\tfor(reg int j=0;j!=lim;j+=(mid<<1)){\n\t\t\tw = complex(1,0);\n\t\t\tfor(reg int k=0;k!=mid;++k){\n\t\t\t\ty = w*a[j|k|mid];\n\t\t\t\ta[j|k|mid] = a[j|k]-y;\n\t\t\t\ta[j|k] = a[j|k]+y;\n\t\t\t\tw = w*rt;\n\t\t\t}\n\t\t}\n\t}\t\n\tif(type==1) return;\n\tfor(reg int i=0;i!=lim;++i) a[i].i = a[i].i/lim;\n}\n\nint a[N],s[N];\nint n,ans;\ncomplex F[N];\n\nint main(){\n\tpre(LIM);\n\tread(n);\n\tF[0].r = 1;\n\tfor(reg int i=1;i<=n;++i){\n\t\tread(a[i]);\n\t\ts[i] = s[i-1]+a[i];\n\t\tF[s[i]].r += 1;\n\t}\n\tfor(reg int i=0;i<=M;++i) F[M-i].i = F[i].r; //\u8fd9\u91cc\u7528\u4e86\u4e09\u6b21\u53d8\u4e24\u6b21\u4f18\u5316\n\tFFT(F,1,LIM);\n\tfor(reg int i=0;i!=LIM;++i) F[i] = F[i]*F[i];\n\tFFT(F,-1,LIM);\n\tfor(reg int i=0;i<=M;++i)\n\t\ta[M-i] = F[i].i/2+0.5;\n\tfor(reg int i=1;i<=M;++i)\n\t\tif(a[i]&1) ans ^= i;\n\tprintf(\"%d\",ans);\t\n\treturn 0;\n}\n```",
        "postTime": 1572851308,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3760 \u3010[TJOI2017]\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "\u539f\u672c\u51c6\u5907\u6295\u7684\u6708\u8d5b\uff0c\u53d1\u73b0\u539f\u9898\uff0c\u6545\u516c\u5f00\u89e3\u6cd5\u3002\r\n\r\n\u7ed9\u51fa\u4e86\u76ee\u524d\u9898\u89e3\u4e2d\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u4f18\u79c0\u7684\u89e3\u6cd5\u3002\r\n\r\n\u5f88\u660e\u663e\u5c31\u524d\u7f00\u548c\uff08\u8bbe\u4e3a $s$\uff0c$s_0=0$\uff09\uff0c\u7136\u540e\u6309\u4f4d\u8003\u8651\u3002\r\n\r\n\u628a\u8fd9\u4e00\u4f4d\u62c6\u51fa\u6765\u4f5c\u4e3a $01$ \u5e8f\u5217 $t$\u3002\r\n\r\n\u5bf9\u4e8e $i,j$\uff0c\u5982\u679c $s_j-s_i$ \u5728\u5f53\u524d\u4f4d\u6ca1\u6709\u53d1\u751f\u9000\u4f4d\uff0c\u90a3\u4e48\u5c31\u8981\u6c42 $t_i\\ne t_j$\uff1b\u5426\u5219 $t_i =t_j$\u3002\r\n\r\n\u8003\u8651\u9000\u4f4d\u662f\u4ec0\u4e48\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u4e8e\u5728\u8fd9\u4e00\u4f4d\u4e4b\u524d\u7684\u6240\u6709\u4f4d\u4ea7\u751f\u7684\u6570\uff08\u8bbe\u4e3a $b$\uff09,$b_j<b_i$\u3002\r\n\r\n\u660e\u4e86\u4e86\u3002\r\n\r\n\u5373\u6c42\r\n\r\n$$\\sum_{i=0}^{n-1} \\sum_{j=i+1}^n [t_i =t_j \\land b_i >b_j \\lor t_i\\ne t_j \\land b_i\\le b_j] $$\r\n\r\n\u6811\u72b6\u6570\u7ec4\u53ef\u4ee5\u505a\u5230 $O(nw\\log n)$\u3002\r\n\r\n\u6211\u4eec\u4e0d\u59a8\u62c6\u5f00\u4e0a\u9762\u7684\u5f0f\u5b50\uff0c\u7136\u540e\u5206\u522b\u52a0\u8d77\u6765\u3002\r\n\r\n$$\\sum_{i=0}^{n-1} \\sum_{j=i+1}^n [t_i =t_j \\land b_i >b_j ] $$\r\n\r\n\u5982\u679c\u6211\u4eec\u628a $t$ \u6309 $01$ \u5206\u7c7b\uff0c\u5c31\u76f8\u5f53\u4e8e\u9006\u5e8f\u5bf9\u95ee\u9898\u3002\r\n\r\n\u8fd9\u4e2a\u662f\u96be\u4ee5\u505a\u5230\u7ebf\u6027\u7684\u3002\r\n\r\n\u4f46\u662f\u9898\u76ee\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u6027\u8d28\uff0c\u5c31\u662f\u6211\u4eec\u53ea\u7528\u6c42\u9006\u5e8f\u5bf9\u7684\u5947\u5076\u6027\u3002\r\n\r\n\u5b58\u5728\u7ebf\u6027\u7b97\u6cd5\uff0c\u89c1\u4e0b\u3002\r\n\r\n\u7b2c\u4e8c\u4e2a\u4e1c\u897f\u662f\uff1a\r\n\r\n$$\\sum_{i=0}^{n-1} \\sum_{j=i+1}^n [t_i\\ne t_j \\land b_i\\le b_j] $$\r\n\r\n\u4e0d\u59a8\u4e0d\u8003\u8651 $t_i \\ne t_j$ \u7684\u9650\u5236\uff0c\u76f4\u63a5\u7b97\u3002\u8fd9\u4e2a\u7528\u9006\u5e8f\u5bf9\u5bb9\u65a5\u4e00\u4e0b\u5373\u53ef\u3002\r\n\r\n\u7136\u540e\u518d\u51cf\u53bb $t_i=t_j$ \u7684\u90e8\u5206\u3002\u8fd9\u4e2a\u4e0a\u9762\u5df2\u7ecf\u51e0\u4e4e\u7b97\u8fc7\u4e86\uff0c\u4e5f\u7528\u9006\u5e8f\u5bf9\u5bb9\u65a5\u5373\u53ef\u3002\r\n\r\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\uff0c\u5982\u4f55\u6c42\u9006\u5e8f\u5bf9\u7684\u5947\u5076\u6027\u3002\r\n\r\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u5c06 $b$ \u8f6c\u4e3a\u6392\u5217\u3002\r\n\r\n\u8003\u8651\u4ece\u4f4e\u5230\u9ad8\u52a0\u5165\u6bcf\u4e00\u4f4d\u3002\u6bcf\u52a0\u5165\u4e00\u4f4d\uff0c\u76f8\u5f53\u4e8e\u628a\u67d0\u4e9b\u6570\u7684\u6700\u9ad8\u4f4d\u53d8\u6210 $1$\u3002\r\n\r\n\u90a3\u4e48\u7ef4\u62a4\u6392\u5e8f\u6570\u7ec4\uff0c\u628a\u8fd9\u4e9b\u6570\u63d0\u5230\u6700\u540e\u5373\u53ef\u3002\r\n\r\n\u8003\u8651\u6c42\u6392\u5217\u9006\u5e8f\u5bf9\u5947\u5076\u6027\u3002\r\n\r\n### \u5f15\u7406\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6392\u5217\uff0c\u82e5\u4efb\u610f\u4ea4\u6362 $x$ \u6b21\u76f8\u90bb\u9879\u540e\uff0c\u8be5\u6392\u5217\u6709\u5e8f\uff0c\u90a3\u4e48 $x$ \u548c\u8be5\u6392\u5217\u7684\u9006\u5e8f\u5bf9\u5947\u5076\u6027\u76f8\u540c\u3002\r\n\r\n\u8bc1\u660e\uff1a\r\n\r\n\u4e00\u4e2a\u6392\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u7b49\u4e8e\u4ea4\u6362\u76f8\u90bb\u9879\u7684\u6b21\u6570\uff0c\u8fd9\u662f\u4f17\u6240\u5468\u77e5\u7684\u3002\r\n\r\n\u4f46\u8fd9\u91cc\u7684\u76f8\u90bb\u9879\u8981\u6ee1\u8db3\u524d\u9879\u5927\u4e8e\u540e\u9879\u3002\u82e5\u524d\u9879\u5c0f\u4e8e\u540e\u9879\uff0c\u90a3\u4e48\u4f7f\u7528\u4e86\u4e00\u6b21\u64cd\u4f5c\u5c06\u9006\u5e8f\u5bf9\u6570\u91cf\u589e\u52a0\u4e86\u4e00\u3002\u8fd9\u663e\u7136\u662f\u4e0d\u6539\u53d8 $x$ \u7684\u5947\u5076\u6027\u7684\u3002\r\n\r\n### \u63a8\u8bba\uff1a\u4e00\u4e2a\u6392\u5217\u7684\u9006\u5e8f\u5bf9\u7684\u5947\u5076\u6027\u4e0e $n$ \u51cf\u53bb\u8be5\u6392\u5217\u7684\u73af\u6570\u7684\u5947\u5076\u6027\u76f8\u540c\u3002\r\n\r\n\u8003\u8651 $n$ \u51cf\u53bb\u8be5\u6392\u5217\u7684\u73af\u6570\u662f\u4ec0\u4e48\uff0c\u662f\u4efb\u610f\u4ea4\u6362\u4e24\u9879\uff0c\u5f97\u5230\u6709\u5e8f\u6392\u5217\u7684\u6700\u5c0f\u6b21\u6570\u3002\u56e0\u4e3a\u6709\u5e8f\u6392\u5217 $p_i=i$\u3002\r\n\r\n\u800c\u8fd9\u4e2a\u548c\u4efb\u610f\u4ea4\u6362\u7684\u5947\u5076\u6027\u662f\u76f8\u540c\u7684\u3002\r\n\r\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u8003\u8651\u4f7f\u7528\u76f8\u90bb\u9879\u4ea4\u6362\u6a21\u62df\u4efb\u610f\u4e24\u9879\u4ea4\u6362\u3002\u663e\u7136\u4efb\u610f\u4ea4\u6362\u4e24\u9879\u90fd\u53ef\u4ee5\u901a\u8fc7\u82e5\u5e72\u6b21\u76f8\u90bb\u9879\u4ea4\u6362\u5f97\u5230\uff0c\r\n\r\n\u53c8\u56e0\u4e3a\u4efb\u610f\u4ea4\u6362\u7684\u5947\u5076\u6027\u548c\u9006\u5e8f\u5bf9\u7684\u5947\u5076\u6027\u76f8\u540c\uff0c\u6240\u4ee5\u63a8\u8bba\u5f97\u8bc1\u3002\r\n\r\n\u73af\u6570\u5bb9\u6613\u7ebf\u6027\u6c42\u51fa\uff0c\u6240\u4ee5\u672c\u9898\u7684\u6bcf\u4e00\u4f4d\u7684\u5904\u7406\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nw)$\u3002",
        "postTime": 1654386222,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3760 [TJOI2017] \u5f02\u6216\u548c"
    },
    {
        "content": "\u8fde\u7eed\u548c\uff0c\u4e00\u773c\u60f3\u5230\u524d\u7f00\u548c\uff1b\u5f02\u6216\uff0c\u4e00\u773c\u60f3\u5230\u4e8c\u8fdb\u5236\u6309\u6bcf\u4e00\u4f4d\u6765\u7b97\u3002~~\u867d\u7136\u6211\u770b\u5230\u9898\u540e\u4e00\u76f4\u5728\u60f3\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u5206\u6cbb\u3002\u3002\u3002~~\n\n\u5982\u679c\u8fd9\u9898\u7684\u8fde\u7eed\u548c\u6539\u4e3a\u8fde\u7eed\u5f02\u6216\uff0c\u8fd9\u5c31\u662f\u4e2a\u666e\u53ca\u96be\u5ea6\u4e86\uff0c\u7136\u800c\u662f\u548c\uff0c\u8fd9\u8bf4\u660e\u4e0d\u540c\u4e8c\u8fdb\u5236\u4f4d\u4e4b\u95f4\u76f8\u4e92\u6709\u5f71\u54cd\u3002\u4f46\u4e5f\u4e0d\u8981\u5bb3\u6015~\uff0c\u6211\u4eec\u60f3\u4e00\u60f3\u5b83\u4eec\u76f8\u4e92\u7684\u5f71\u54cd\u662f\u4ec0\u4e48\u3002\n\n\u8003\u8651\u6bcf\u4e00\u4f4d\u7684\u8d21\u732e\uff0c\u7531\u4e8e\u524d\u7f00\u548c$sum[n]\\le 1e6$\uff0c\u4e8c\u8fdb\u5236\u4f4d\u4e0d\u8d85\u8fc7$20$\u4f4d\u3002\u5148\u679a\u4e3e\u7b2c $k$ \u4f4d\uff0c\u8ba9 $i$ \u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d\uff0c\u8ba1\u7b97 $i$ \u524d\u9762\u6709\u591a\u5c11 $j$ \u6ee1\u8db3\uff1a$sum[i]-sum[j]$ \u7684\u7b2c $k$ \u4f4d\u4e3a $1$\uff0c\u628a\u6240\u6709\u6ee1\u8db3\u7684\u60c5\u51b5\u5f02\u6216\u8d77\u6765\uff0c\u5982\u679c\u662f $1$\uff0c\u6700\u7ec8\u7b54\u6848\u7684\u7b2c $k$ \u4f4d\u4e5f\u5c31\u662f $1$ \u4e86\u3002\n\n\u7136\u540e\u8003\u8651\u54ea\u4e9b\u60c5\u51b5\u4f7f\u5f97 $sum[i]-sum[j]$ \u7684\u7b2c $k$ \u4f4d\u4e3a $1$\u3002\u663e\u7136\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u7684\u52a0\u51cf\u6cd5\u6765\u8bf4\uff0c\u9ad8\u4f4d\u4e0d\u4f1a\u5f71\u54cd\u4f4e\u4f4d\uff0c\u5c31\u662f\u4e0b\u56fe\u9ed1\u7684\u90e8\u5206\uff0c\u5bf9\u7ed3\u679c\u9020\u4e0d\u6210\u5f71\u54cd\uff0c\u800c\u7b2c $k$ \u4f4d\uff0c\u76ee\u524d\u6765\u770b\u6570\u5b57\u76f8\u540c\u51cf\u5b8c\u4e4b\u540e\u5373\u4e3a $0$\uff0c\u4e0d\u540c\u5373\u4e3a $1$\u3002\u56e0\u4e3a\u5c31\u7b97\u662f $0-1$\uff0c$sum[i]$ \u7684\u9ad8\u4f4d\u80af\u5b9a\u6bd4 $sum[j]$ \u7684\u9ad8\u4f4d\u8981\u5927\uff08\u4fdd\u8bc1\u8f93\u5165\u662f\u6b63\u6574\u6570\uff09\uff0c\u80af\u5b9a\u51fa\u4e0d\u6765\u8d1f\u6570\u3002\n\n![](https://t1.picb.cc/uploads/2020/02/28/kvkydD.png)\n\n\u800c\u4f4e\u4f4d\u9020\u6210\u7684\u5f71\u54cd\uff0c\u5176\u5b9e\u4e5f\u5f88\u7b80\u5355\uff0c\u5982\u679c $sum[i]$ \u7684\u4f4e\u4f4d\u6bd4 $sum[j]$ \u7684\u5927\uff0c\u90a3\u4e48\u4e0d\u7528\u501f\u7b2c $k$ \u4f4d\uff0c\u53cd\u4e4b\u5219\u501f\u7b2c $k$ \u4f4d\uff0c\u5982\u679c\u7b2c $k$ \u4f4d\u88ab\u501f\u7684\u8bdd\uff0c\u7b54\u6848\u5c31\u4f1a\u98a0\u5012\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u7528\u6811\u72b6\u6570\u7ec4\u8bb0\u5f55\u6240\u6709\u7684 $sum[j]$\uff1a\u7b2c $k$ \u4f4d\u4e3a $0$ \u4e14\u84dd\u8272\u90e8\u5206\u5927\u5c0f\u4e3a\u591a\u5c11\u7684\u6709\u51e0\u4e2a\uff0c\u7b2c $k$ \u4f4d\u4e3a $1$ \u4e14\u84dd\u8272\u90e8\u5206\u5927\u5c0f\u4e3a\u591a\u5c11\u7684\u6709\u51e0\u4e2a\u3002\u8ba1\u7b97\u7b54\u6848\uff0c\u5982\u679c\u7b2c $k$ \u4f4d\u76f8\u540c\uff0c\u7b97\u6240\u6709\u4f4e\u4f4d\u6bd4\u5b83\u5927\u7684\uff0c\u7b2c $k$ \u4f4d\u4e0d\u540c\uff0c\u7b97\u6240\u6709\u6bd4\u5b83\u5c0f\u7684\u3002\n\n\u7531\u4e8e\u53ea\u9700\u8ba1\u7b97\u7b2c $k$ \u4f4d\u662f\u5426\u4e3a $1$ \uff0c\u6211\u4eec\u628a\u6240\u6709\u770b\u4f3c\u9700\u8981\u52a0\u51cf\u7684\u8ba1\u7b97\u6539\u4e3a\u5f02\u6216\u5373\u53ef\u3002\n\n\u9644\u4e0a\u9119\u4eba\u7684Code\uff1a\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#define QWQ cout<<\"QwQ\"<<endl;\n#define ll long long\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\nusing namespace std;\nconst int N=2010101;\nconst int qwq=303030;\nconst int inf=0x3f3f3f3f;\n\nint n,m;\nint a[N],sum[N];\nint tree[N][2];\nint ans;\n\ninline int read() {\n\tint sum1 = 0, f = 1; char c = getchar();\n\twhile(c<'0' || c>'9') { if(c=='-') f = -1; c = getchar(); }\n\twhile(c>='0'&&c<='9') { sum1 = sum1 * 10 + c - '0'; c = getchar(); }\n\treturn sum1 * f;\n}\n\n//\u4e24\u884c\u6811\u72b6\u6570\u7ec4\uff0c\u56e0\u4e3a\u4e0b\u6807\u53ef\u80fd\u4e3a0\uff0c\u6211\u628a\u6240\u6709\u7684\u4f4d\u7f6e\u52a0\u4e861\u3002\ninline void add(int we,int cl) { we++; for(int i=we;i<=m;i+=(i&-i)) tree[i][cl]^=1; }\ninline int  ask(int we,int cl) { we++; int rs=0; for(int i=we;i;i-=(i&-i)) rs^=tree[i][cl]; return rs; }\n\nint main() {\n\tn = read(); m = N-10;\n\tfor(int i=1;i<=n;i++) a[i] = read(), sum[i] = sum[i-1] + a[i];\n\tfor(int k=0;k<=20;k++) {\n\t\tmemset(tree,0,sizeof(tree));\n\t\tint res = 0;\n\t\tadd(0,0);\n\t\tfor(int i=1;i<=n;i++) {\n\t\t\tint u = (sum[i]>>k) & 1;      //\u7b2ck\u4f4d\n\t\t\tint v = sum[i] % (1<<k);      //\u4f4e\u4f4d\n\t\t\tres ^= ask(v,u^1);            //k\u4f4d\u4e0d\u540c\n\t\t\tres ^= ask(m-1,u) ^ ask(v,u); //k\u4f4d\u76f8\u540c\n\t\t\tadd(v,u);\n\t\t}\n\t\tans |= (res<<k);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n\u8bf4\u7684\u6709\u70b9\u5570\u55e6\u4e86\u3002\u3002\u3002~~\u4e3b\u8981\u662f\u56e0\u4e3a\u81ea\u5df1\u592a\u83dc\u6015\u4ee5\u540e\u5fd8\u4e86\u600e\u4e48\u505a\u4e86\u3002\u3002\u3002~~",
        "postTime": 1582860469,
        "uid": 102726,
        "name": "Flandre_495",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3760 \u3010[TJOI2017]\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "01-Trie \u679c\u9898.......\n\n\u63d0\u4f9b\u4e00\u79cd\u4f7f\u7528 01-Trie \u7684\u89e3\u6cd5\u3002\n\n[link](https://big-news.cn/2020/08/17/%E3%80%8C%E9%A2%98%E8%A7%A3%E3%80%8D%E5%BC%82%E6%88%96%E5%92%8C/)\n\n\u8003\u8651\u56fa\u5b9a\u5de6\u7aef\u70b9 $l$ \uff0c$O(n)$ \u679a\u4e3e\u53f3\u7aef\u70b9 $r$ \uff0c\u5219\u53ef\u4ee5\u6c42\u51fa\u4e00\u4e9b\u5de6\u7aef\u70b9\u56fa\u5b9a\u7684\u533a\u95f4 $[l,r]$ \u6743\u503c\u548c\u5f02\u6216\u548c\u3002\n\n\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u5de6\u7aef\u70b9 $l$ \uff0c\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u5176\u80fd\u5bf9\u5e94\u7684\u6240\u6709\u533a\u95f4 $[l,r]$ \u7684\u5f02\u6216\u548c\u3002\u7531\u4e8e\u6570\u5217\u662f\u9759\u6001\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651 $l\\to l-1$ \u65f6\u8d21\u732e\u7684\u53d8\u5316\uff0c\u5b83\u5e94\u8be5\u662f\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n$$\\begin{aligned} & (s[n]-s[l])\\oplus (s[n-1]-s[l])\\oplus ... \\oplus (s[l+1]-s[l]) \\\\ \\to &(s[n]-s[l]+a[l-1])\\oplus (s[n-1]-s[l]+a[l-1])\\oplus ...\\oplus a[l-1] \\end{aligned}$$\n\n\u5176\u4e2d $s[]$ \u4ee3\u8868 $a[]$ \u7684\u524d\u7f00\u548c\u3002\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a\u53d8\u5316\u662f\u5bf9\u6bcf\u4e00\u9879\u540c\u65f6\u52a0\u4e86\u4e00\u4e2a\u503c\u4e4b\u540e\u518d\u67e5\u8be2\u5f02\u6216\u548c\uff0c\u663e\u7136\u53ef\u4ee5\u901a\u8fc7 01-Tire \u6765\u7ef4\u62a4\uff0c\u603b\u590d\u6742\u5ea6 $O((n+\\sum a_i)\\log a_i)$\uff1b\u7531\u4e8e $\\sum a_i \\le 10^6$\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\nusing namespace std;\n\nconst int CN = 1e5 + 5;\n\nint read(){\n    int s = 0,ne = 1; char c = getchar();\n    while(c < '0' || c > '9') ne = c == '-' ? -1 : 1, c = getchar();\n    while(c >= '0' && c <= '9') s = (s << 1) + (s << 3) + c - '0', c = getchar();\n    return s * ne;\n}\n\nclass TRIE {\n  public: int ch[CN * 30][2], d[CN * 30], w[CN * 30], idx, rt, MAXH;\n    #define lc ch[u][0]\n    #define rc ch[u][1]\n    TRIE() {rt = idx = 0, MAXH = 30;}\n    int make() {return ++idx;}\n    void mt(int u){\n        d[u] = 0, w[u] = w[lc] + w[rc];\n        if(rc) d[u] ^= (d[rc] << 1) | (w[rc] & 1);\n        if(lc) d[u] ^= d[lc] << 1;\n        w[u] &= 1;\n    }\n    void ins(int &u, int x, int dep){\n        if(!u) u = make();\n        if(dep == MAXH) return (void)(w[u] ^= 1);\n        if(x & 1) ins(rc, x >> 1, dep + 1);\n        else ins(lc, x >> 1, dep + 1);\n        mt(u);\n    }\n    void add(int u) {if(rc) add(rc); swap(lc, rc), mt(u);}\n} D;\n\nint n, a[CN];\n\nint main()\n{\n    freopen(\"_in.in\", \"r\", stdin);\n\n    n = read(); for(int i = 1; i <= n; i++) a[i] = read();\n\n    int ans = 0;\n    for(int i = n - 1; i + 1; i--){\n        int s = a[i + 1];\n        while(s--) D.add( D.rt );\n        D.ins(D.rt, a[i + 1], 1);\n        ans ^= D.d[ D.rt ];\n    }\n\n    printf(\"%d\", ans);\n}\n```",
        "postTime": 1597705681,
        "uid": 70177,
        "name": "big_news",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3760 \u3010[TJOI2017]\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u79cd\u5f02\u6216\u7c7b\u7684\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4ece\u5f02\u6216\u8fd0\u7b97\u6027\u8d28\u4e0b\u624b\n\n\u6211\u4eec\u8bb0$sum[i] = \\sum_{j = 1} ^ {i}a[j]$\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u6bcf\u4e00\u4f4d\u5206\u5f00\u8003\u8651\uff0c\u82e5\u6211\u4eec\u5728\u6c42\u7b2cx\u4e3a\u7684\u7b54\u6848\uff0c\u8bb0\u6240\u6709\u533a\u95f4\u7684\u8fde\u7eed\u7684\u548c\u6709K\u4e2a\u8be5\u4f4d\u4e3a1\uff0c\u90a3\u4e48\u8ddf\u636e\u5f02\u6216\u7684\u8fd0\u7b97\u6cd5\u5219\uff0c\u8fd9\u4e00\u4f4d\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53K\u4e3a\u5947\u6570\uff0c\u4e14\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a$K\\ \\%\\ 2 * 2 ^ x$\n\n\u8bf4\u5f97\u66f4\u5177\u4f53\u70b9\uff0c\u6211\u4eec\u8981\u6c42\u7684\u5f0f\u5b50\u53d8\u6210\u4e86\uff1a\n\n$$\\sum_{k = 0} ^ {2 ^ k <= sum[n]}\\ *\\ ((\\sum_{i = 1}^{n}\\sum_{j = 1}^i(sum[i] - sum[j - 1]) >> k\\ \\&\\ 1)\\ \\%\\ 2)\\ *\\ 2 ^ k$$\n\n\u6211\u4eec\u5355\u72ec\u770b\u91cc\u9762\u7684\u67ff\u5b50\uff1a\n$$\\sum_{i = 1}^{n}\\sum_{j = 1}^i(sum[i] - sum[j - 1]) >> k\\ \\&\\ 1$$\n\n\u5176\u5b9e\u95ee\u9898\u5df2\u7ecf\u8f6c\u5316\u4e3a\uff1a\u7ed9\u5b9a$sum[i]$\uff0c\u6c42\u6709\u591a\u5c11\u4e2a$j(j\\in[0,\\ i - 1])$\uff0c\u6ee1\u8db3$sum[i] - sum[j]$\u7684\u7b2cK\u4f4d\u4e3a1\n\n\u8fd9\u4e2a\u95ee\u9898\u770b\u4e0a\u53bb\u5f88\u597d\u5904\u7406\uff0c\u8c8c\u4f3c\u662f\u53ea\u8981\u6c42\u51fa\u6709\u591a\u5c11\u4e2a$sum[i]$\u4e0e$sum[j]$\u7684\u7b2cK\u4f4d\u4e0d\u540c\u5373\u53ef\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55$sum[i] >> k$\u7684\u4e00\u4e2a\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd9\u9053\u9898\u76ee\u5341\u5206\u5f1f\u5f1f\uff0c\u56e0\u4e3a\u5f02\u6216\u7684\u51cf\u6cd5\u662f\u53ef\u4ee5\u8fdb\u4f4d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5e76\u4e0d\u80fd\u76f4\u63a5\u5411\u521a\u521a\u90a3\u4e48\u7b97\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5b9a\u4e49$sum[i]_k$\u8868\u793a$sum[i]$\u7684\u7b2cK\u4f4d\uff0c$sum[i]_{1\\ -\\ k}$\u8868\u793asum\u76841~k\u4f4d ~~\uff08\u539f\u8c05\u6211'~'\u6253\u4e0d\u51fa\u6765\uff09~~ \u7684\u548c\n\n\u6211\u4eec\u5148\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n\u4e00\u3001\u5982\u679c$sum[i]_k = 1$\uff0c\u90a3\u4e48\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\n$1.sum[j]_k = 0\\ \\&\\&\\ sum[j]_{1\\  - \\ k - 1} <= sum[i]_{1 - k - 1}$\n\n\n$2.sum[j]_k = 1\\ \\&\\&\\ sum[j]_{1\\ -\\ k - 1} > sum[i]_{1\\ -\\ k - 1}$\n\n\u4e8c\u3001\u5982\u679c$sum[i]_k = 0$\uff0c\u90a3\u4e48\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u4e5f\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n$1.sum[j]_k = 1\\ \\&\\&\\ sum[j]_{1\\  - \\ k - 1} <= sum[i]_{1 - k - 1}$\n\n\n$2.sum[j]_k = 0\\ \\&\\&\\ sum[j]_{1\\ -\\ k - 1} > sum[i]_{1\\ -\\ k - 1}$\n\n\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u600e\u4e48\u5224\u65ad\u8fdb\u4f4d\u5462\uff1f\n\n\u6ce8\u610f\u5230$\\sum a[i]$\u4e0d\u4f1a\u592a\u5927\n\n\u6211\u4eec\u53ef\u4ee5\u628a$sum[i]_{1\\ -\\ k - 1}$\u6254\u5230\u4e24\u9897\u6743\u503c\u6811\u72b6\u6570\u7ec4\u5185\uff0c\u4e00\u68f5\u5b580\u7684\uff0c\u53e6\u4e00\u9897\u5b581\u7684\n\n\u6ce8\u610f\uff1a\u6811\u72b6\u6570\u7ec4\u7684\u4e0b\u6807\u53ef\u80fd\u4e3a0\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a\u6240\u6709\u4e0b\u6807+1\n\n# $Code:$\n```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\nusing namespace std;\n#define il inline\n#define re register\n#define int long long\nil int read() {\n    re int x = 0, f = 1; re char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n    return x * f;\n}\n#define rep(i, s, t) for(re int i = s; i <= t; ++ i)\n#define mem(k, p) memset(k, p, sizeof(k))\n#define lb(x) (x)&(-(x))\n#define maxn 1000005\nint n, m, a[maxn], sum[maxn], ma, Ans, ans;\nstruct Tree {\n\tint t[maxn];\n\til void add(int u, int v, int x) {\n\t\twhile(u <= x) t[u] += v, u += lb(u);\n\t}\n\til void Add(int u, int v, int x) {\n\t\tadd(u + 1, v, x + 1);\n\t}\n\til int query(int u) {\n\t\tint ans = 0;\n\t\twhile(u) ans += t[u], u -= lb(u);\n\t\treturn ans;\n\t}\n\til int query(int l, int r) {\n\t\treturn query(r + 1) - query(l);\n\t}\n}A, B;//A\u8868\u793a0\u7684\u6811\u72b6\u6570\u7ec4\uff0cB\u8868\u793a1\u7684 \nsigned main() {\n\tn = read();\n\trep(i, 1, n) a[i] = read(), sum[i] = sum[i - 1] + a[i], ma = max(ma, sum[i]);\n\tfor(re int k = 0; (1 << k) <= ma; ++ k) {\n\t\tmemset(A.t, 0, sizeof(A.t)), memset(B.t, 0, sizeof(B.t)), Ans = 0;\n\t\tint pax = (1 << k) - 1;//\u6211\u4eec\u53ea\u8003\u86511~k\u4f4d \n\t\trep(i, 0, n) {\n\t\t\tint temp = sum[i] & pax;//\u6c42\u51fasum[i]_{1-k}\n\t\t\t//cout << k << ' ' << temp << endl;\n\t\t\tif((sum[i] >> k) & 1) {\n\t\t\t\tAns += A.query(0, temp) + B.query(temp + 1, pax), B.Add(temp, 1, pax);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tAns += B.query(0, temp) + A.query(temp + 1, pax), A.Add(temp, 1, pax);\n\t\t\t}\n\t\t}\n\t\t//cout << Ans << ' ' << ans << endl;\n \t\tans += (Ans % 2) * (1 << k);\n\t}\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1569306969,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3760 \u3010[TJOI2017]\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "\u6211\u7684FFT\u4e00\u4e2alog\u88ab\u4e24\u4e2alog\u7684\u6811\u72b6\u6570\u7ec4\u6309\u4f4d\u67e5\u8be2\u78be\u538b\u554aqwq\n\n\n\u539f\u7406\u5927\u6982\u662f\u524d\u7f00\u548c+\u5dee\u5206\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u533a\u95f4\u7684\u548c\uff0c\u7edf\u8ba1\u51fa\u6bcf\u4e2a\u548c\u51fa\u73b0\u8fc7\u591a\u5c11\u6b21\uff0c\u628a\u51fa\u73b0\u8fc7\u5947\u6570\u6b21\u7684\u6240\u6709\u548c\u5f02\u6216\u8d77\u6765\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\n\n\n\u505a\u6cd5\u5927\u6982\u662f\u5148\u505a\u4e00\u904d\u524d\u7f00\u548c\uff0c\u5b58\u5230\u6743\u503c\u6570\u7ec4\u91cc\uff0c\u6b63\u7740\u5b58\u4e00\u904d\u53cd\u7740\u5b58\u4e00\u904d\u518d\u5377\u79ef\u8d77\u6765\uff08\u5957\u8def\uff09\n\n\n\n\n//\u4e0d\u5f00O2\u6682\u65f6\u5361\u4e0d\u8fc7QAQ\n\n//\u52a0\u4e86\u201c\u4e09\u6b21\u53d8\u4e24\u6b21\u201d\u4f18\u5316\u4e5f\u5361\u4e0d\u8fc7QAQ\n\n\u4ee3\u7801\uff08\u4ec5\u4f9b\u53c2\u8003\uff0c\u6b22\u8fce\u5e2e\u5fd9\u5361\u5e38\uff08\u96fe\uff09\uff09\uff1a\n\n\n```cpp\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nconst double pi=3.1415926535897932384626433832795;\nconst int MAXV=1000000;\nstruct c\n{\n    double r,i;\n    inline c(){r=i=0.0;}\n    inline c(const double a,const double b){r=a,i=b;}\n    inline c operator+(const c &x)const{return c(r+x.r,i+x.i);}\n    inline c operator+=(const c &x){return *this=*this+x;}\n    inline c operator-(const c &x)const{return c(r-x.r,i-x.i);}\n    inline c operator-=(const c &x){return *this=*this-x;}\n    inline c operator*(const c &x)const{return c(r*x.r-i*x.i,r*x.i+i*x.r);}\n    inline c operator*=(const c &x){return *this=*this*x;}\n    inline c operator/=(const int x){r/=x,i/=x;return *this;}\n    inline c conj(){return c(r,-i);}\n}A[2333333];\nint r[2333333],l=1;\nint n;\ninline void fft(c *a,int ty)\n{\n    for(int i=0;i<l;i++)i<r[i]?(void)(0):swap(a[i],a[r[i]]);\n    for(int i=1;i<l;i<<=1)\n    {\n        c w(cos(pi/i),ty*sin(pi/i));\n        for(int j=0;j<l;j+=i<<1)\n        {\n            c wn(1.0,0.0);\n            for(int k=j;k<i+j;k++)\n            {\n                c t=a[i+k]*wn;\n                a[i+k]=a[k]-t;\n                a[k]+=t;\n                wn*=w;\n            }\n        }\n    }\n}\nint a[233333],s[233333];\nint tmp[2333333],ans;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        s[i]=s[i-1]+a[i];\n        A[s[i]].r+=1;\n    }\n    A[0].r+=1;\n    for(int i=0;i<MAXV;i++)A[i].i=A[MAXV-i-1].r;\n    while(l<=MAXV*2)l<<=1;\n    for(int i=1;i<l;i<<=1)\n        for(int j=0;j<i;j++)\n            r[i+j]=r[j]+l/(i<<1);\n    fft(A,1);\n    A[l]=A[0];\n    for(int i=0;i<=l-i;i++)\n    {\n        c t=(A[i]+A[l-i].conj())*c(0.0,1.0)*(A[i]-A[l-i].conj());t/=4;\n        c t2=(A[l-i]+A[i].conj())*c(0.0,1.0)*(A[l-i]-A[i].conj());t2/=4;\n        A[i]=t;A[l-i]=t2;\n    }\n    fft(A,-1);\n    for(int i=0;i<MAXV;i++)tmp[MAXV-i-1]=-A[i].r/l+0.5;\n    for(int i=0;i<MAXV;i++)ans^=i*(tmp[i]&1);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1517216546,
        "uid": 3346,
        "name": "oscar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3760 \u3010[TJOI2017]\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "# \u9898\u76ee\n\u7ed9\u5b9a$n$\u4e2a\u6570\uff0c\u6c42\u5b83\u4eec\u6240\u6709\u533a\u95f4\u7684\u8fde\u7eed\u548c\u7684\u5f02\u6216\u503c\n\n---\n# \u5206\u6790\n\u4e00\u5b9a\u8981\u628a\u5f02\u6216\u62c6\u5f00\uff0c\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u662f\n$$\\sum_{k=0}^{2^k\\leq s_n}2^k\\times ((\\sum_{i=1}^n\\sum_{j=0}^{i-1}((s[i]-s[j])>>k)\\bmod 2)\\bmod 2)$$\n\u606d\u559c\u5f97\u5230\u4e86\u4e00\u4e2a\u6bd4$O(n^2)$\u8fd8\u8981\u6162\u7684\u7b97\u6cd5\uff0c\u6240\u4ee5\n$k$\u548c$i$\u60f3\u8981\u4f18\u5316\u53ef\u80fd\u5f88\u56f0\u96be\uff0c\u90a3\u4e48\u8003\u8651\u4f18\u5316$j$\n\u5f53$s[i]$\u7684\u7b2c$k$\u4f4d\u4e3a1\u65f6\uff0c\u80fd\u4ea7\u751f\u5f71\u54cd\u7684\u60c5\u51b5\uff1a\n\n 1. \u7b2c$k$\u4f4d\u4e0d\u662f1\u4e14\u524d$k-1$\u4f4d$\\leq s[k]$\u7684\u524d$k-1$\u4f4d\n 2. \u7b2c$k$\u4f4d\u662f1\u4e14\u524d$k-1$\u4f4d$>s[k]$\u7684\u524d$k-1$\u4f4d\n\n\u5f53$s[i]$\u7684\u7b2c$k$\u4f4d\u4e3a0\u65f6\uff0c\u80fd\u4ea7\u751f\u5f71\u54cd\u7684\u60c5\u51b5\uff1a\n\n 1. \u7b2c$k$\u4f4d\u4e0d\u662f1\u4e14\u524d$k-1$\u4f4d$>s[k]$\u7684\u524d$k-1$\u4f4d\n 2. \u7b2c$k$\u4f4d\u662f1\u4e14\u524d$k-1$\u4f4d$\\leq s[k]$\u7684\u524d$k-1$\u4f4d\n \n\u90a3\u4e48\u8fd9\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u8bb0\u5f55$s$\u4e2d\u4e8c\u8fdb\u5236\u4f4d\u4e0a0\u62161\u7684\u4e2a\u6570\uff0c\u4ece\u800c\u628a\u65f6\u95f4\u4f18\u5316\u5230$O(nlog^2s[n])$\n\u4f46\u662f\u8981\u6ce8\u610f\u6811\u72b6\u6570\u7ec4\u8bb0\u5f55\u7684\u53ef\u80fd\u662f0\uff0c\u6240\u4ee5\u8981\u6574\u4f53\u53f3\u79fb\u4e00\u4f4d\uff0c\u800c\u4e14\u8c8c\u4f3c\u4e0d\u7528long long\uff0c\u800c\u4e14\u6811\u72b6\u6570\u7ec4\u8981\u6ce8\u610f\u6e05\u7a7a\n\n---\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#define rr register\nusing namespace std;\ninline signed iut(){\n    rr int ans=0; rr char c=getchar();\n    while (!isdigit(c)) c=getchar();\n    while (isdigit(c)) ans=(ans<<3)+(ans<<1)+(c^48),c=getchar();\n    return ans; \n}\nint n,s[100001],lim,ans;\nstruct szsz{\n    int c[1000101];\n    inline void add(int x,int y){for (++x;x<=lim+1;x+=-x&x) c[x]+=y;}\n    inline signed answ(int x){rr int ans=0; for (++x;x;x-=-x&x) ans+=c[x]; return ans;}\n    inline signed aasw(int l,int r){return answ(r)-answ(l);}\n}c0,c1;\nsigned main(){\n    n=iut();\n    for (rr int i=1;i<=n;++i) s[i]=s[i-1]+iut();\n    for (rr int k=0;(1<<k)<=s[n];++k){\n        lim=(1<<k)-1; rr int sum=0;\n        for (rr int i=0;i<=n;++i){\n            rr int now=s[i]&lim;\n            if ((s[i]>>k)&1) sum+=c0.aasw(-1,now)+c1.aasw(now,lim),c1.add(now,1);\n                else sum+=c1.aasw(-1,now)+c0.aasw(now,lim),c0.add(now,1);\n        }\n        ans+=(1<<k)*(sum&1),memset(c0.c,0,sizeof(c0.c)),memset(c1.c,0,sizeof(c1.c));\n    }\n    return !printf(\"%d\",ans);\n}\n```\n       ",
        "postTime": 1559450744,
        "uid": 37782,
        "name": "lemondinosaur",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3760 \u3010[TJOI2017]\u5f02\u6216\u548c\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&emsp;&emsp;[\u70b9\u8fd9\u91cc](https://www.cnblogs.com/crashed/)\u770b\u9898\u76ee\u3002   \n# \u5206\u6790  \n&emsp;&emsp;\u663e\u7136\u8981\u5148\u8ba1\u7b97\u524d\u7f00\u548c$s$\u3002    \n&emsp;&emsp;\u540c\u6837\u5730\u8003\u8651\u6309\u4f4d\u8ba1\u7b97\u8d21\u732e\u3002\u5047\u8bbe\u5f53\u524d\u679a\u4e3e\u5230\u4e86\u7b2c$k$\u4f4d\uff0c\u6b63\u5728\u679a\u4e3e\u7b2c$i$\u4e2a\u524d\u7f00\u548c\uff0c\u8bbe$x$\u7684\u7b2c$k$\u4f4d\u4e3a$b(x)$\uff0c\u540e$k-1$\u4f4d\u4e3a$l(x)$\u3002\u7531\u4e8e\u5b50\u533a\u95f4\u548c\u5c31\u662f\u524d\u7f00\u548c\u505a\u5dee\uff0c\u6211\u4eec\u5c31\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\uff0c\u524d\u7f00\u548c$i$\u505a\u5dee\u540e\u5728$k$\u4f4d\u4e0a\u4e3a 1 \u3002   \n&emsp;&emsp;\u82e5$b(s_i)=0$\uff0c\u90a3\u4e48\u51cf\u6570$t$\u9700\u8981\u6ee1\u8db3\uff1a\u82e5$b(t)=1$\uff0c\u5219$l(t)<l(x)$\uff0c\u5f97\u5230\u5dee\u7684 1 \uff1b\u82e5$b(t)=0$\uff0c\u5219$l(t)>l(x)$\uff0c\u5f97\u5230\u9000\u4f4d\u7684 1 \u3002   \n&emsp;&emsp;\u82e5$b(s_i)=1$\uff0c\u90a3\u4e48\u51cf\u6570$t$\u9700\u8981\u6ee1\u8db3\uff1a\u82e5$b(t)=1$\uff0c\u5219$l(t)>l(x)$\uff0c\u5f97\u5230\u9000\u4f4d\u7684 1 \uff1b\u82e5$b(t)$\uff0c\u5219$l(t)<l(x)$\uff0c\u5f97\u5230\u5dee\u7684 1 \u3002    \n&emsp;&emsp;\u53d1\u73b0\u6709\u8d21\u732e\u7684\u60c5\u51b5\u5bf9\u5e94\u4e86\u503c\u57df\u4e0a\u7684\u4e00\u6bb5\u533a\u95f4\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528 BIT \u7ef4\u62a4\u533a\u95f4\u548c\u3002\u65f6\u95f4$O(n\\log_2n\\log_2\\sum a)$\u3002  \n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n\nconst int MAXN = 1e5 + 5, MAXA = 1e6 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b;\n}\n\ntemplate<typename _T>\nvoid swapp( _T &x, _T &y )\n{\n\t_T t( x ); x = y, y = t;\n}\n\nint a[MAXN], s[MAXN];\nint N, all;\n\nstruct PreSum\n{\n\tint BIT[MAXA];\n\t\n\tPreSum() { memset( BIT, 0, sizeof BIT ); }\n\tvoid up( int &x ) const { x += x & ( -x ); }\n\tvoid down( int &x ) const { x -= x & ( -x ); }\n\tvoid update( int x, const int v ) { for( ; x <= all ; up( x ) ) BIT[x] += v; }\n\tint getSum( int x ) const { int ret = 0; for( ; x ; down( x ) ) ret += BIT[x]; return ret; }\n\t\n\tint operator () ( const int l, const int r ) const \n\t{ \n\t\tif( l > r ) return 0;\n\t\tint tr = getSum( r ), tl = getSum( l - 1 );\n\t\treturn tr - tl;\n\t}\n}One, Zero;\n\nint main()\n{\n\tread( N );\n\tint ans = 0, cnt, bit, low;\n\tfor( int i = 1 ; i <= N ; i ++ ) read( a[i] ), all += a[i];\n\tfor( int i = 1 ; i <= N ; i ++ ) s[i] = s[i - 1] + a[i];\n\tZero.update( 1, 1 );\n\tfor( int k = 1 ; k <= all ; k <<= 1 )\n\t{\n\t\tcnt = 0;\n\t\tfor( int i = 1 ; i <= N ; i ++ )\n\t\t{\n\t\t\tbit = bool( s[i] & k ), low = s[i] & ( k - 1 );\n\t\t\tif( bit ) cnt += Zero( 1, low + 1 ), cnt += One( low + 2, k );\n\t\t\telse cnt += Zero( low + 2, k ), cnt += One( 1, low + 1 );\n\t\t\tif( bit ) One.update( low + 1, 1 );\n\t\t\telse Zero.update( low + 1, 1 );\n\t\t\tcnt &= 1;\n\t\t}\n\t\tif( cnt ) ans |= k;\n\t\tfor( int i = 1 ; i <= N ; i ++ )\n\t\t{\n\t\t\tbit = bool( s[i] & k ), low = s[i] & ( k - 1 );\n\t\t\tif( bit ) One.update( low + 1, -1 );\n\t\t\telse Zero.update( low + 1, -1 );\n\t\t}\n\t}\n\twrite( ans ), putchar( '\\n' );\n\treturn 0;\n}\n```\n",
        "postTime": 1592060337,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[TJOI2017]\u5f02\u6216\u548c"
    },
    {
        "content": "\u7edf\u8ba1\u5f02\u6216\u548c\uff0c\u5f88\u5bb9\u6613\u77e5\u9053\u5e94\u8be5\u4ece\u6309\u4f4d\u8d2a\u5fc3\u4e0a\u8003\u8651\u3002\n\n\u5047\u8bbe\u8fde\u7eed\u548c\u5728\u8be5\u4f4d\u5f02\u6216\u51fa1\u7684\u5bf9\u6570\u662f\u5947\u6570\uff0c\u90a3\u4e48\u5c31\u5c06\u5b83\u7edf\u8ba1\u5165\u7b54\u6848\u91cc\u3002\n\n\u8003\u8651\u5728\u8be5\u4f4d\u5f02\u6216\u51fa1\u7684\u5bf9\u6570\n\n\u9996\u5148\u8ba1\u7b97\u524d\u7f00\u5f02\u6216\u6570\u7ec4s\uff0c\u8ba8\u8bba\u6bcf\u4e00\u4f4dk\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2as[i]\uff0c\u6211\u4eec\u7edf\u8ba10<=j<i\u4e14s[j]^s[i]\u5728k\u4f4d\u4e3a\u4e00\u7684\u4e2a\u6570\u3002\n\n\u5047\u8bbe\u662fs[i]\u7b2ck\u4f4d\u4e3a\u4e00\uff0c\u90a3\u4e48\u53ea\u6709\u5f53s[j]\u7b2ck\u4f4d\u4e3a0\u4e14s[j]\u7684\u524dk-1\u4f4d\u6bd4\u5b83\u5c0f\u6216s[j]\u7b2ck\u4f4d\u4e3a1\u4e14\u524dk-1\u4f4d\u6bd4\u5b83\u5927\uff08\u5373\u7b2ck-1\u4f4d\u5411\u7b2ck\u4f4d\u501f\u4f4d\uff09\u3002\n\ns[i]\u7b2ck\u4f4d\u4f4d0\u5219\u521a\u597d\u76f8\u53cd\u3002\n\n\u5bf9\u524dk\u4f4d\u7684\u6570\u7684\u5927\u5c0f\u7684\u6bd4\u8f83\u53d6s[i]&(1<<k)-1\u7684\u503c\u5373\u53ef\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6743\u503c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6574\u4e2a\u8fc7\u7a0b\u3002\n\n\u6ce8\u610fs[i]\u4e3a0\u4e5f\u80fd\u4ea7\u751f\u8d21\u732e\uff0c\u5728\u6811\u72b6\u6570\u7ec4\u5185\u53ef\u4ee5\u52a0\u4e0a\u4e00\u4e2a\u6570\u6765\u5904\u7406\u3002\n",
        "postTime": 1542975439,
        "uid": 53032,
        "name": "\u5c0f\u5858\u7a7a\u660e",
        "ccfLevel": 0,
        "title": "P3760 [TJOI2017]\u5f02\u6216\u548c"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u4ece\u4e8c\u8fdb\u5236\u89d2\u5ea6\uff0c\u4e00\u4f4d\u4e00\u4f4d\u5730\u8003\u8651\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u82e5\u6709\u5947\u6570\u4e2a\u8fde\u7eed\u548c\u7684\u7b2ck\u4f4d\u4e3a1\uff0c\u90a3\u4e48\u7b54\u6848\u7684\u7b2ck\u4f4d\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002\n\n\n\u56e0\u6b64\u53ef\u4ee5\u60f3\u5230\u7528\u524d\u7f00\u548c\uff0c\u5f53s[i]\u4e0es[j] (0<j<i) \u7684\u5dee\u7684\u7b2ck\u4f4d\u4e3a1\u65f6\uff0c\u8fd9\u6bb5\u8fde\u7eed\u548c\u5bf9\u7b54\u6848\u7684\u7b2ck\u4f4d\u6709\u8d21\u732e\u3002\u8003\u8651\u7b2ci\u4e2a\u524d\u7f00\u548cs[i]\u7684\u7b2ck\u4f4d\uff1a\n\n\n\u82e5\u8fd9\u4e00\u4f4d\u4e3a1\uff0c\u90a3\u4e48s[j]\u9700\u8981\u6ee1\u8db3\u7b2ck\u4f4d\u4e3a0 **\u4e14\u524dk-1\u4f4d\u6bd4s[i]\u524dk-1\u4f4d\u5c0f** \u6216\u8005 \u7b2ck\u4f4d\u4e3a1 **\u4e14\u524dk-1\u4f4d\u6bd4s[i]\u524dk-1\u4f4d\u5927\uff08\u9519\u4f4d\u76f8\u51cf\uff09**\u3002\n\n\u82e5\u8fd9\u4e00\u4f4d\u4e3a0\uff0c\u540c\u7406\u3002\n\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u5206\u522b\u7ef4\u62a41...maxn\u7684\u6570\u4e2d\u7b2ck\u4f4d\u4e3a1\u548c0\u7684\u4e2a\u6570\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\u7684\u6bcf\u4e00\u4f4d\u4e86\u3002\n\n\n\n### \u4ee3\u7801\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define lowbit(x) (x&(-x))\nusing namespace std;\n\nint n,ans=0,a[100010],b[1000100][2],rest[100010];\n\nvoid insert(int pos,int o){\n    for(;pos<=1000010;pos+=lowbit(pos))b[pos][o]++;\n}\nint query(int pos,int o){\n    int ret=0;\n    for(;pos>0;pos-=lowbit(pos))ret+=b[pos][o];\n    return ret;\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),a[i]+=a[i-1];\n    for(int i=0;i<=20;i++){\n        if((1<<i)>a[n])break;\n        memset(b,0,sizeof(b));\n        int t,count=0;\n        insert(1,0);\n        for(int j=1;j<=n;j++){\n            bool o=a[j]&(1<<i);\n            t+=query(rest[j]+1,o^1);\n            t+=query(1000010,o)-query(rest[j]+1,o);\n            insert(rest[j]+1,o);\n            if(o)rest[j]|=(1<<i);\n            if(t&1)count^=1;\n        }\n        if(count)ans|=(1<<i);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1516607799,
        "uid": 47121,
        "name": "\u5468\u6885\u68ee",
        "ccfLevel": 0,
        "title": "\u5f02\u6216\u548c"
    }
]