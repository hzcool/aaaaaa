[
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u6ca1\u5fc5\u8981 tarjan \uff0c\u65e2\u7136\u5df2\u7ecf\u5141\u8bb8 $O(n^2)$ \u7684\u590d\u6742\u5ea6\uff0c\u90a3\u5c31\u76f4\u63a5\u66b4\u529b\u7ed9\u6bcf\u4e2a\u70b9\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\n\n1\u5982\u679c\u4ece\u4e00\u4e2a\u70b9 $i$ \u51fa\u53d1\uff0c\u7ecf\u8fc7\u4e86\u67d0\u4e2a\u70b9 $j$ \u7684\u6b63\u53cd\u4e24\u4e2a\u70b9\n$j$ \u548c $j+n$\uff0c\u90a3\u5c31\u8bf4\u660e $i$ \u8fd9\u4e2a\u60c5\u51b5\u662f\u975e\u6cd5\u7684\u3002\n\n\u6211\u4eec\u5bf9\u6bcf\u4e2a\u70b9 $i$ \u548c $i+n$ \u90fddfs\u4e00\u904d\uff0c\u76f4\u63a5\u5224\u65ad\u5373\u53ef\u3002\n\n\u5982\u679c\u70b9 $i$ \u548c\u70b9 $i+n$ \u90fd\u4e0d\u5408\u6cd5\uff0c\u8bf4\u660e\u65e0\u89e3\u3002\n\n\u5728\u4ee3\u7801\u4e2d\u4f53\u73b0\u4e3a\n```\nfor(int i=1,x,y;i<=m;i++){\n\tx=check(i),y=check(i+m);\n\tif(!x&&!y)return (void)(puts(\"IMPOSSIBLE\"));\n\tif(x&&y)ans[i]='?';\n\tif(x&&!y)ans[i]='N';\n\tif(!x&&y)ans[i]='Y';\n}\n```\n\n\u6574\u4f53\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace Acc{\n\tconst int N=2e3+10;\n\tbasic_string<int>G[N];\n\tint n,m,d[N];\n\tchar s[10],t[10],ans[N];\n\tvoid Dfs(int u){\n\t\td[u]=1;\n\t\tfor(auto v:G[u])if(!d[v])Dfs(v);\n\t}\n\tint check(int x){\n\t\tmemset(d,0,sizeof d),Dfs(x);\n\t\tfor(int i=1;i<=m;i++)if(d[i]&&d[i+m])return 0;\n\t\treturn 1;\n\t}\n\tvoid work(){\n\t\tcin>>m>>n;\n\t\tfor(int i=1,x,y,a,b;i<=n;i++)cin>>x>>s>>y>>t,a=s[0]=='Y',b=t[0]=='Y',G[x+m*(1-a)]+=y+b*m,G[y+m*(1-b)]+=x+a*m;\n\t\tfor(int i=1,x,y;i<=m;i++){\n\t\t\tx=check(i),y=check(i+m);\n\t\t\tif(!x&&!y)return (void)(puts(\"IMPOSSIBLE\"));\n\t\t\tif(x&&y)ans[i]='?';\n\t\t\tif(x&&!y)ans[i]='N';\n\t\t\tif(!x&&y)ans[i]='Y';\n\t\t}\n\t\tcout<<ans+1;\n\t}\n}\nint main(){\n\treturn Acc::work(),0;\n}\n```",
        "postTime": 1621925828,
        "uid": 383079,
        "name": "Acc_Robin",
        "ccfLevel": 6,
        "title": "P3007 The Continental Cowngress G \u9898\u89e3"
    },
    {
        "content": "2-SAT\u7ec3\u4e60\u7684\u597d\u9898\uff0c\n\u5efa\u56fe\u65b9\u5f0f\u662f\u6bd4\u8f83\u57fa\u7840\u7684**\u6216**\u5f62\u5f0f\n\n$Y_i,N_j$\u2014\u2014\u8fde\u8fb9i\u5230j\uff0c\u8868\u793a\u82e5i\u4e0d\u901a\u8fc7\u5219j\u5fc5\u987b\u4e0d\u901a\u8fc7\uff1bj+n\u5230i+n\uff0c\u8868\u793a\u82e5j\u901a\u8fc7\u5219i\u5fc5\u987b\u901a\u8fc7 \n\n$Y_i,Y_j$\u2014\u2014\u8fde\u8fb9i\u5230j+n\uff0c\u8868\u793a\u82e5i\u4e0d\u901a\u8fc7\u5219j\u5fc5\u987b\u901a\u8fc7\uff1bj\u5230i+n\uff0c\u8868\u793a\u82e5j\u4e0d\u901a\u8fc7\u5219i\u5fc5\u987b\u901a\u8fc7\n\n$N_i,N_j$\u2014\u2014\u8fde\u8fb9i+n\u5230j\uff0c\u8868\u793a\u82e5i\u901a\u8fc7\u5219j\u5fc5\u987b\u4e0d\u901a\u8fc7\uff1bj+n\u5230i\uff0c\u8868\u793a\u82e5j\u901a\u8fc7\u5219i\u5fc5\u987b\u4e0d\u901a\u8fc7\n\n$N_i,Y_j$\u2014\u2014\u8fde\u8fb9i+n\u5230j+n\uff0c\u8868\u793a\u82e5i\u901a\u8fc7\u5219j\u5fc5\u987b\u901a\u8fc7\uff1bj\u5230i\uff0c\u8868\u793a\u82e5j\u4e0d\u901a\u8fc7\u5219i\u5fc5\u987b\u4e0d\u901a\u8fc7\n\ntarjan\u6c42SCC\u540e**\u7f29\u70b9**\n\n\u679a\u4e3e\u6bcf\u4e2a\u70b9(\u8bae\u6848)\u7684\u901a\u8fc7\u548c\u4e0d\u901a\u8fc7\n\n\u7136\u540e\u5206\u522b\u4ece\u8868\u793a\u8be5\u72b6\u6001\u7684\u7ed3\u70b9(col[i]\u548ccol[i+n])\u51fa\u53d1**\u6df1\u641c**\u5e76**\u6807\u8bb0\u8bbf\u95ee\u5230\u7684\u70b9**\n\n\u6700\u540e\u68c0\u6d4b**\u662f\u5426\u6709**$col[i]$**\u4e0e**$col[i+n]$**\u90fd\u88ab\u8bbf\u95ee\u5230**\u5373\u53ef\n\n\u867d\u7136\u5b9e\u6d4b\u4e0d\u7f29\u70b9\u76f4\u63a5\u6df1\u641c\u4e5f\u53ef\u4ee5\u8fc7\uff0c\n\u4f46\u7406\u8bba\u4e0a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4e0d\u5bf9\u7684\uff0c\n\u53ef\u4ee5\u88ab\u7279\u6b8a\u6570\u636ehack\n\n```\n//niiick\n#include<iostream>\n#include<stack>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\ntypedef long long lt;\n\nint read()\n{\n    int f=1,x=0;\n    char ss=getchar();\n    while(ss<'0'||ss>'9'){if(ss=='-')f=-1;ss=getchar();}\n    while(ss>='0'&&ss<='9'){x=x*10+ss-'0';ss=getchar();}\n    return f*x;\n}\n\nconst int maxn=4010;\nint n,m;\nstruct node{int v,nxt;}E[2][maxn<<1];\nint head[2][maxn],tot[2];\nint low[maxn],dfn[maxn],cnt;\nint col[maxn],ins[maxn],colnum;\nint st[maxn],top;\nint vis[maxn];\nchar s1[5],s2[5],ans[maxn];\n\nvoid add(int u,int v,int d)\n{\n    E[d][++tot[d]].nxt=head[d][u];\n    E[d][tot[d]].v=v;\n    head[d][u]=tot[d];\n}\n\nvoid dfs(int u)\n{\n    vis[u]=1;\n    for(int i=head[1][u];i;i=E[1][i].nxt)\n    if(!vis[E[1][i].v]) dfs(E[1][i].v);\n}\n\nvoid tarjan(int u)\n{\n    low[u]=dfn[u]=++cnt;\n    st[++top]=u; ins[u]=1;\n    for(int i=head[0][u];i;i=E[0][i].nxt)\n    {\n        int v=E[0][i].v;\n        if(!dfn[v]){tarjan(v);low[u]=min(low[u],low[v]);}\n        else if(ins[v])low[u]=min(low[u],dfn[v]);\n    }\n    if(low[u]==dfn[u])\n    {\n        colnum++;\n        do{\n            ins[st[top]]=0;\n            col[st[top]]=colnum;\n        }while(st[top--]!=u);\n    }\n}\n\nint check(int u)\n{\n    memset(vis,0,sizeof(vis));\n    dfs(u);\n    for(int i=1;i<=n;++i)\n    if(vis[col[i]]&&vis[col[i+n]])return 0;\n    return 1;\n}\n\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=m;++i)//N-0,Y-1\n    {\n        int u=read(); scanf(\"%s\",&s1);\n        int v=read(); scanf(\"%s\",&s2);\n        if(s1[0]=='Y')\n        {\n            if(s2[0]=='N')add(u,v,0),add(v+n,u+n,0);\n            else if(s2[0]=='Y')add(u,v+n,0),add(v,u+n,0);\n        }\n        else if(s1[0]=='N')\n        {\n            if(s2[0]=='N')add(u+n,v,0),add(v+n,u,0);\n            else if(s2[0]=='Y')add(u+n,v+n,0),add(v,u,0);\n        }\n    }\n    \n    for(int i=1;i<=n<<1;++i)\n    if(!dfn[i])tarjan(i);\n    \n    for(int u=1;u<=n<<1;++u)\n    for(int i=head[0][u];i;i=E[0][i].nxt)\n    {\n    \tint v=E[0][i].v;\n    \tif(col[u]==col[v])continue;\n    \tadd(col[u],col[v],1);\n    }\n    \n    for(int i=1;i<=n;++i)\n    {\n        int p=check(col[i]),q=check(col[i+n]);\n        if(!p&&!q){printf(\"IMPOSSIBLE\");return 0;}\n        else if(p&&q)ans[i]='?';\n        else if(p&&!q)ans[i]='N';\n        else if(!p&&q)ans[i]='Y';\n    }\n    for(int i=1;i<=n;++i)\n    cout<<ans[i];\n    return 0;\n}\n\n```",
        "postTime": 1533990228,
        "uid": 60885,
        "name": "niiick",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3007 \u3010[USACO11JAN]\u5927\u9646\u8bae\u4f1aThe Continental Cowngress\u3011"
    },
    {
        "content": "[P3007 [USACO11JAN] The Continental Cowngress G](https://www.luogu.com.cn/problem/P3007)\n\n\u672c\u9898\u662f\u6211\u5728\u7ec3\u4e60 2-SAT \u7684\u65f6\u5019\u505a\u7684\u3002\n\n[\u6211\u7684 2-SAT \u603b\u7ed3](https://www.luogu.com.cn/blog/nizhuan/post-2-sat-xue-xi-bi-ji)\n\n---\n\n\u8fd9\u9898\u7684 2-SAT \u6a21\u578b\u975e\u5e38\u5178\u578b\uff0c\u4e0d\u540c\u7684\u662f\u533a\u522b\u4e8e\u6c42\u89e3\uff0c\u8fd8\u9700\u8981\u5224\u65ad\u662f\u5426\u5fc5\u987b\u901a\u8fc7\u6216\u8005\u4e0d\u901a\u8fc7\u3002\n\n\u90a3\u627f\u63a5\u521a\u624d\u7684\u60f3\u6cd5 tarjan \u540e dfs \u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\u4e0d\u5927\uff0c\u76f4\u63a5\u7528 $n^2$ dfs \u5373\u53ef\u3002\n\n---\n\n\u8054\u7cfb 2-SAT \u6c42\u89e3\u7684\u539f\u7406\uff0c $i$ \u548c $i^{\\prime}$ \u5982\u679c\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u5219\u65e0\u89e3\u3002\n\n**\u4e5f\u5c31\u662f\u9009\u4e00\u4e2a\u4f1a\u5bfc\u81f4\u53e6\u4e00\u4e2a\u3002**\n\n\u800c\u5fc5\u987b\u662f\u67d0\u4e00\u79cd\u7684\u53d6\u503c\u7684\u8bdd\uff0c**\u5728\u56fe\u4e0a\u4f53\u73b0\u4e3a\u9009\u62e9 $i$ \u6216\u8005 $i^{\\prime}$ \u4f1a\u6709\u73af\u3002**\n\n\u5982\u679c\u90fd\u53ef\u4ee5\u7684\u8bdd\u4e5f\u5c31\u662f\u4e24\u4e2a\u53d6\u503c\u90fd\u4e0d\u5f71\u54cd\u89e3\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6cd5\u6848\uff0c\u6211\u4eec\u5bf9\u4e24\u4e2a\u53d6\u503c\u5206\u522b\u8fdb\u884c dfs \uff0c\u8bb0\u5f55\u4e00\u4e0b\u6307\u5411\u5173\u7cfb\u3002\n\n\u5efa\u8fb9\u7c7b\u4f3c 2-SAT \uff0c\u4f7f\u7528\u4f4d\u8fd0\u7b97\u3002\n\n---\n\n**Code**\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n\nusing namespace std;\n\nconst int N=2e3+10,M=8e3+10;\n\nint n,fir[N],tot;\nbool vis[N];\nstruct edge {int to,nex;} e[M];\n\ninline void add(int u,int v)\n{\n\te[++tot]=(edge) {v,fir[u]};\n\tfir[u]=tot; return ;\n}\ninline int turn(char c) {return c == 'Y'? 0:1;}\n\nvoid dfs(int u)\n{\n\tvis[u]=true;\n\tint v;\n\tfor(int i=fir[u];i;i=e[i].nex)\n\t\tif(!vis[v=e[i].to]) dfs(v);\n\treturn ;\n}\n\ninline int check(int u)//\u8fd9\u4e2a\u53d6\u503c\u662f\u5426\u53ef\u884c\n{\n\tmemset(vis,false,sizeof(vis));\n\tdfs(u);\n\tfor(int i=1;i<=n;i++) if(vis[i] && vis[i+n]) return 0;\n\treturn 1;\n}\n\nint main()\n{\n//\tfreopen(\"work.in\",\"r\",stdin); freopen(\"work.out\",\"w\",stdout);\n\tint m,u,v,x,y;\n\tchar a,b,ans[N >> 1];\n\tscanf(\"%d%d\",&n,&m);\n\twhile(m--)\n\t{\n\t\tscanf(\"%d %c%d %c\",&u,&a,&v,&b);\n\t\tx=turn(a); y=turn(b);\n\t\tadd(u+(x^1)*n,v+y*n); add(v+(y^1)*n,u+x*n);\n\t}//\u4f4d\u8fd0\u7b97\u5efa\u56fe\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tx=check(i); y=check(i+n);\n\t\tif(!x && !y) return printf(\"IMPOSSIBLE\"),0;\n\t\telse if(x && !y) ans[++m]='Y';\n\t\telse if(!x && y) ans[++m]='N';\n\t\telse ans[++m]='?';\n\t}//\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u6211\u7684 m \u7528\u5b8c\u4e4b\u540e\u662f -1\n\tfor(int i=0;i<=m;i++) printf(\"%c\",ans[i]);\n//\tfclose(stdin); fclose(stdout);\n\treturn 0;\n}\n```\n\n$Thank\\ you\\ for\\ your\\ reading\\ !$",
        "postTime": 1625182201,
        "uid": 240191,
        "name": "MY\uff08\u4e00\u540d\u849f\u84bb\uff09",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3007 \u3010[USACO11JAN] The Continental Cowngress G\u3011"
    },
    {
        "content": "$2-SAT$ \u88f8\u9898\u3002\n\n\u5efa\u56fe\uff0c\u8bbe\u7b2c $i$ \u53f7\u70b9\u8868\u793a\u652f\u6301\u7b2c $i$ \u4e2a\u6cd5\u6848\uff0c\u7b2c $i$ $+$ $n$ \u53f7\u70b9\u8868\u793a\u53cd\u5bf9\u7b2c $i$ \u4e2a\u6cd5\u6848\u3002\n\n\u5bf9\u4e8e\u6bcf\u5934\u5976\u725b\u7684\u4e24\u4e2a\u6761\u4ef6\uff0c\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u5fc5\u987b\u6ee1\u8db3\u5176\u4e00\uff0c\u90a3\u5c31\u5bf9\u5976\u725b\u7684\u4e24\u4e2a\u6761\u4ef6\u4e4b\u4e00\u53d6\u53cd\uff0c\u5e76\u5411\u53e6\u4e00\u4e2a\u6761\u4ef6\u8fde\u8fb9\uff0c\u8868\u793a\u5982\u679c\u4e0d\u6ee1\u8db3\u5976\u725b\u7684\u5176\u4e2d\u4e00\u4e2a\u8981\u6c42\uff0c\u90a3\u5fc5\u987b\u6ee1\u8db3\u53e6\u4e00\u4e2a\u8981\u6c42\u3002\n\n\u8dd1\u4e00\u904d $Tarjan$ \uff0c\u7136\u540e\u5224\u65ad $i$ \u53f7\u70b9\uff0c $i$ $+$ $n$ \u53f7\u70b9\u662f\u5426\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\uff0c\u5982\u679c\u662f\u7684\u8bdd\u65e0\u8bba\u53cd\u5bf9\u8fd8\u662f\u652f\u6301\u7b2c $i$ \u4e2a\u6cd5\u6848\u90fd\u4f1a\u77db\u76fe\uff0c\u65e0\u89e3\u3002\n\n\u4e4b\u540e\u5982\u679c\u6709\u89e3\u7684\u8bdd\uff08\u4e0d\u6ee1\u8db3\u4e0a\u4e00\u884c\u7684\u60c5\u51b5\uff09\uff0c\u90a3\u4e48 $O(n ^ 2)$\u66b4\u529b\u5224\u65ad\u5982\u679c\u652f\u6301\u4e86\u7b2c $i$ \u53f7\u6cd5\u6848\u4f1a\u4e0d\u4f1a\u77db\u76fe\uff0c\u53cd\u5bf9\u4f1a\u4e0d\u4f1a\u77db\u76fe\uff0c\u6309\u60c5\u51b5\u8f93\u51fa\u3002\n\n**code \uff1a** [https://www.cnblogs.com/qqq1112/p/14427359.html](https://www.cnblogs.com/qqq1112/p/14427359.html)",
        "postTime": 1613915120,
        "uid": 202791,
        "name": "louis_11",
        "ccfLevel": 0,
        "title": "\u5976\u725b\u8bae\u4f1a"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3007)\n\n\u6211\u4eec\u8981\u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u6052\u4e3a\u771f/\u5047/\u771f\u5047\u90fd\u53ef\u4ee5\u3002\n\n### \u65b9\u6cd5\u4e00\n\n\u6211\u4eec\u53ef\u4ee5\u5f3a\u884c\u8bbe $x_i$ \u4e3a\u5047\uff0c\u82e5\u65e0\u89e3\uff0c\u90a3\u4e48 $x_i$ \u4e00\u5b9a\u4e3a\u771f\u6216\u771f\u5047\u90fd\u884c\uff0c\u6216\u90fd\u4e0d\u884c\u3002\n\n\u8981\u8dd1 $n$ \u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nm)$\u3002\n\n### \u65b9\u6cd5\u4e8c\n\n\u82e5 $x_i$ \u662f\u6307\u5411 $\\neg x_i$ \u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u4e00\u5b9a\u9009 $x_i$ \u4e3a\u5047\u3002\n\n\u82e5 $\\neg x_i$ \u662f\u6307\u5411 $x_i$ \u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u4e00\u5b9a\u9009 $\\neg x_i$ \u4e3a\u5047\u3002\n\n\u5426\u5219\u82e5 $\\neg x_i$ \u548c $x_i$ \u6ca1\u6709\u53ef\u8fbe\u5173\u7cfb\uff0c\u90a3\u4e48\u5c31\u662f `?`\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5224\u65ad\u4e24\u4e2a\u70b9\u662f\u5426\u6709\u53ef\u8fbe\u5173\u7cfb\u5c31\u53ef\u4ee5\u4e86\uff0c\u800c\u5224\u65ad\u53ef\u8fbe\u5173\u7cfb\u7684\u8bdd\u5c31\u53ef\u4ee5\u7528 `BFS` \u6216 `DFS`\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n### CODE:\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2010;\nint n, m;\nbool ins[N], vis[N];\nvector<int> e[N];\nint dfn[N], low[N], idx, bel[N];\nstack<int> stk;\nint cnt;\nchar ans[N];\nvoid taryan(int u) {//\u8054\u901a\u5206\u91cf\n\tdfn[u] = low[u] = ++idx;\n\tins[u] = true;\n\tstk.push(u);\n\tfor (auto v: e[u]) {\n\t\tif (!dfn[v]) taryan(v);\n\t\tif (ins[v]) low[u] = min(low[u], low[v]);\n\t}\n\tif (dfn[u] == low[u]) {\n\t\t++cnt;\n\t\twhile (true) {\n\t\t\tint v = stk.top();\n\t\t\tbel[v] = cnt;\n\t\t\tins[v] = false;\n\t\t\tstk.pop();\n\t\t\tif (u == v) break;\n\t\t}\n\t}\n}\nvoid dfs2(int u) {//dfs\n\tvis[u] = 1;\n    for (auto v : e[u]) if (!vis[v])\n        dfs2(v);\n}\nbool check(int s, int t) {\n    memset(vis, false, sizeof(vis));\n    dfs2(s);\n    return vis[t];\n}\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n    \tfor (int i = 1; i <= m; ++i) {\n\t\tint u, v;\n\t\tchar ty1[2], ty2[2];\n\t\tscanf(\"%d%s%d%s\", &u, ty1, &v, ty2);\n\t\t--u, --v;\n\t\tu = (u * 2) + (*ty1 == 'Y');\n\t\tv = (v * 2) + (*ty2 == 'Y');\n\t\te[u ^ 1].push_back(v);\n\t\te[v ^ 1].push_back(u);\n\t}\n\tfor (int i = 0; i < 2 * n; ++i) if (!dfn[i])\n\t\ttaryan(i);\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (bel[i << 1] == bel[i << 1 | 1]) {\n\t\t\tputs(\"IMPOSSIBLE\");//\u65e0\u89e3\n\t\t\treturn 0;\n\t\t}\n\t}\n    for (int i = 0; i < n; ++i) {\n        if (check(2 * i, 2 * i + 1)) ans[i] = 'Y';//\u5f53i*2\u662f2*i+1,\u5219\u7b2ci\u4e2a\u6052\u4e3a\u771f\n        else if (check(2 * i + 1, 2 * i)) ans[i] = 'N';//\u53e6\u4e00\u79cd\u60c5\u51b5\n        else ans[i] = '?';//\u56e0\u4e3a\u4e0d\u4f1a\u662f\u65e0\u89e3\uff0c\u6240\u4ee5\u5c31\u662f?\n    }\n    puts(ans);\n    return 0;\n}\n```",
        "postTime": 1667561500,
        "uid": 528430,
        "name": "FiraCode",
        "ccfLevel": 0,
        "title": "P3007"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u660e\u663e\u7684 2-SAT \u9898\u3002\u5efa\u8fb9\u65b9\u5f0f\u4e0e\u6a21\u677f\u9898\u5b8c\u5168\u4e00\u81f4\u3002\u4e3b\u8981\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\u8981\u5224\u65ad\u662f\u5fc5\u987b\u9009\u62e9\u8fd8\u662f ```Y\\N``` \u90fd\u53ef\u4ee5\u3002\n\n\u8bbe $a_i$ \u4e3a\u67d0\u4e00\u5976\u725b\u662f\u5426\u5e0c\u671b $i$ \u901a\u8fc7\uff0c\u5219\u5bf9\u4e8e\u5976\u725b\u7684\u8981\u6c42 $i, a_i, j, a_j$ \u5efa\u8fb9\uff1a\n\n$(i+(!a_i)* n, j+a_j* n)$\n\n$(j+(!a_j)* n, i+a_i* n)$\n\n\u5373\u5982\u679c\u6cd5\u6848 $i$ \u4e0d\u6ee1\u8db3\u5976\u725b\u7684\u8981\u6c42\uff0c\u6cd5\u6848 $j$ \u5c31\u5fc5\u987b\u6ee1\u8db3\u5976\u725b\u7684\u8981\u6c42\uff1b\u5982\u679c\u6cd5\u6848 $j$ \u4e0d\u6ee1\u8db3\u5976\u725b\u7684\u8981\u6c42\uff0c\u6cd5\u6848 $i$ \u5c31\u5fc5\u987b\u6ee1\u8db3\u5976\u725b\u7684\u8981\u6c42\u3002\n\n\u5efa\u5b8c\u56fe\u540e Tarjan \u6c42 scc \u7f29\u70b9\u3002\n\n\u5148\u68c0\u67e5\u662f\u5426\u6709 $i$ \u4e0e $i+n$ \u5728\u540c\u4e00 scc \u4e2d\uff0c\u82e5\u5b58\u5728\u5219\u76f4\u63a5\u8f93\u51fa```IMPOSSIBLE```\u3002\n\n\u82e5\u5b58\u5728\u5408\u6cd5\u65b9\u6848\uff0c\u5219\u5728\u7f29\u70b9\u540e\u7684 dag \u4e0a\u4ece\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u5f00\u59cb\u641c\u7d22\u3002\n\n\u641c\u7d22\u65f6\u8bb0\u5f55\u5df2\u7ecf\u641c\u8fc7\u7684\u70b9\u548c\u5f53\u524d\u641c\u7d22\u8def\u5f84\u4e0a\u5df2\u7ecf\u7ecf\u8fc7\u7684\u70b9\u3002\u5f53\u7ecf\u8fc7\u7684\u70b9\u540c\u65f6\u5305\u62ec\u67d0\u4e2a $i$ \u548c $i+n$ \u65f6\uff0c\u663e\u7136\u540e\u88ab\u904d\u5386\u7684\u5fc5\u9009\uff0c\u5e76\u4e14\u8be5\u70b9\u7684\u540e\u7eed\u4e5f\u5fc5\u9009\uff0c\u56e0\u6b64\u518d\u7528\u4e00\u4e2a bool \u53d8\u91cf\u8bb0\u5f55\u662f\u5426\u6709\u8fd9\u6837\u7684 $i$ \u5373\u53ef\u3002\u641c\u7d22\u65f6\u6ce8\u610f\u5df2\u7ecf\u786e\u5b9a\u8981\u9009\u7684\u70b9\u4e0d\u9700\u8981\u518d\u88ab\u904d\u5386\u7b2c\u4e8c\u6b21\u3002\n\ncode:\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=2e3+5;\ninline int read(){\n    int x=0,f=1,ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-48;ch=getchar();}\n    return x*f;\n}\nint n,m;\nint hd_e[maxn],e_cnt,g_cnt,hd_g[maxn];\nstruct edge{int f,t,nxt;}e[maxn<<3],g[maxn];\nvoid add_edge(int f,int t){\n    e[++e_cnt]=(edge){f,t,hd_e[f]};\n    hd_e[f]=e_cnt;\n}\nvoid add_g(int f,int t){\n    g[++g_cnt]=(edge){f,t,hd_g[f]};\n    hd_g[f]=g_cnt;\n}\nint dfn[maxn],low[maxn],tj_cnt;\nint stk[maxn],stk_top;\nbool vis[maxn];\nint scc[maxn],scc_num;\nvoid tarjan(int x){\n    dfn[x]=low[x]=++tj_cnt;\n    stk[++stk_top]=x;vis[x]=1;\n    for(int i=hd_e[x];i;i=e[i].nxt){\n        if(!dfn[e[i].t]){\n            tarjan(e[i].t);\n            low[x]=min(low[x],low[e[i].t]);\n        }\n        else if(vis[e[i].t])\n            low[x]=min(low[x],low[e[i].t]);\n    }\n    if(low[x]==dfn[x]){\n        scc[x]=++scc_num;vis[x]=0;\n        while(stk[stk_top]!=x){\n            scc[stk[stk_top]]=scc_num;\n            vis[stk[stk_top]]=0;\n            stk_top--;\n        }stk_top--;\n    }\n}\nchar op[3]={'N','Y','?'};\nbool mst[maxn],res[maxn];//\u5fc5\u9009\u7684\u70b9\uff0c\u5df2\u7ecf\u7ecf\u8fc7\u7684\u70b9\nvoid srch(int x,bool pl){\n    vis[x]=res[x]=1;\n    if(!pl)\n    \tfor(int i=hd_g[x];i;i=g[i].nxt)\n        \tif(res[g[i].t]){pl=1;break;}\n    mst[x]=pl;\n    for(int i=hd_e[x];i;i=e[i].nxt)\n        if(!mst[e[i].t])srch(e[i].t,pl);\n    res[x]=0;\n}\nvoid shrink(){//\u7f29\u70b9\n    int cc=e_cnt;\n    e_cnt=0;memset(hd_e,0,sizeof(hd_e));\n    for(int i=1;i<=cc;i++){\n        if(scc[e[i].f]==scc[e[i].t])continue;\n        add_edge(scc[e[i].f],scc[e[i].t]);\n    }\n    for(int i=1;i<=n;i++){\n        add_g(scc[i],scc[i+n]);\n        add_g(scc[i+n],scc[i]);\n    }\n}\nint main(){\n    n=read();m=read();\n    for(int i=1,c1,c2,c3,c4;i<=m;i++){\n        c1=read(),c2=getchar(),c3=read(),c4=getchar();\n        c2=(c2=='Y');c4=(c4=='Y');\n        add_edge(c1+(!c2)*n,c3+c4*n);\n        add_edge(c3+(!c4)*n,c1+c2*n);\n    }\n    for(int i=1;i<=2*n;i++)if(!dfn[i])tarjan(i);\n    for(int i=1;i<=n;i++)if(scc[i]==scc[i+n]){printf(\"IMPOSSIBLE\\n\");return 0;}\n    shrink();\n    for(int i=scc_num;i>=1;i--)if(!vis[i])srch(i,0);\n    for(int i=1;i<=n;i++){\n        if(mst[scc[i+n]])printf(\"%c\",op[1]);\n        else if(mst[scc[i]])printf(\"%c\",op[0]);\n        else printf(\"%c\",op[2]);\n    }putchar('\\n');\n    return 0;\n}\n```",
        "postTime": 1621318405,
        "uid": 166536,
        "name": "zyctc",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P3007 \u5976\u725b\u8bae\u4f1a"
    },
    {
        "content": "# \u524d\u8a00\n\u5982\u679c\u4f60\u5b66\u8fc72-SAT\uff0c\u90a3\u4f60\u5e94\u5f53\u7a0d\u52a0\u601d\u8003\u4f1a\u8fd9\u9053\u9898\u3002\n# \u9898\u610f\n\u7ed9\u4f60 $ m $ \u4e2a\u7ea6\u675f\u6761\u4ef6\uff0c\u8981\u4f60\u51b3\u5b9a $ n $ \u4e2a\u65b9\u6848\u662fY\u8fd8\u662fN\u8fd8\u662f\u4e0d\u786e\u5b9a,\u4f7f\u5f97 $ m $ \u4e2a\u7ea6\u675f\u6761\u4ef6\u90fd\u80fd\u6ee1\u8db3\u3002\n# \u524d\u7f6e\u601d\u8def\n\u5c06\u7b2c $ i $ \u4e2a\u65b9\u6848\u901a\u8fc7\u5b9a\u4e3a $ i $ ,\u4e0d\u901a\u8fc7\u5b9a\u4e3a $ i+n $ ,\u90a3\u4e48\u5bf9\u4e8e\u5976\u725b\u7684\u8981\u6c42\u5c31\u53ef\u4ee5\u8fde\u8fb9\u4e86\uff0c\u5177\u4f53\u60c5\u51b5\u5982\u4e0b\u3002\n\n\n1. $ i $ \u4e0d\u901a\u8fc7\u6216 $ j $ \u901a\u8fc7----\u82e5 $ i $ \u901a\u8fc7\uff0c\u5219 $ j $ \u901a\u8fc7\uff1b\u82e5 $ j $ \u4e3a\u4e0d\u901a\u8fc7\u5219 $ i $ \u4e0d\u901a\u8fc7-----\u8fde $ i $ \u4e0e $ j $ \u548c $ j+n $ \u4e0e $ i+n $ \u3002\n\n2. $ i $ \u4e0d\u901a\u8fc7\u6216 $ j $ \u4e0d\u901a\u8fc7----\u82e5 $ i $ \u901a\u8fc7\uff0c\u5219 $ j $ \u4e0d\u901a\u8fc7\uff1b\u82e5   $ j $ \u901a\u8fc7\u5219 $ i $ \u4e0d\u901a\u8fc7-----\u8fde $ i $ \u4e0e $ j+n $ \u548c $ j $ \u4e0e $ i+n $ \u3002\n  \n3. $ i $ \u901a\u8fc7\u6216 $ j $ \u901a\u8fc7----\u82e5 $ i $ \u4e0d\u901a\u8fc7\uff0c\u5219 $ j $ \u901a\u8fc7\uff1b\u82e5 $ j $ \u4e0d\u901a\u8fc7\u5219 $ i $ \u901a\u8fc7-----\u8fde $ i+n $ \u4e0e $ j $ \u548c $ j+n $ \u4e0e $ i $ \u3002\n\n4. $ i $ \u901a\u8fc7\u6216 $ j $ \u4e0d\u901a\u8fc7----\u82e5 $ i $ \u4e0d\u901a\u8fc7\uff0c\u5219 $ j $ \u4e0d\u901a\u8fc7\uff1b\u82e5   $ j $ \u901a\u8fc7\u5219 $ i $ \u901a\u8fc7-----\u8fde $ i+n $ \u4e0e $ j+n $ \u548c $ j $ \u4e0e $ i $ \u3002\n\n\u8fde\u597d\u8fb9\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u70b9\u72b6\u6001\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u7528Tarjan\u6c42\u51fa\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u7136\u540e\u5224\u65ad $ i $ \u4e0e $ i+n $ \u662f\u5426\u5728\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u5185\uff0c\u56e0\u4e3a\u4e00\u4e2a\u65b9\u6848\u4e0d\u53ef\u80fd\u65e2\u662f\u901a\u8fc7\u53c8\u662f\u4e0d\u901a\u8fc7\u3002\n\n# \u771f\u6b63\u601d\u8def\n\u521a\u624d\u6211\u4eec\u5df2\u7ecf\u7b97\u51fa\u4e86\u65b9\u6848\u7684\u53ef\u884c\u6027\uff0c\u7b97\u65b9\u6848\u7684\u8bdd\u5c31\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4e00\u822c2-SAT\u95ee\u9898\u90fd\u662f\u5224\u65ad $ i $ \u4e0e $ i+n $ \u54ea\u4e2a\u5148\u904d\u5386\u5230\uff0c\u5c31\u9009\u54ea\u4e00\u4e2a\u72b6\u6001\uff0c\u8fd9\u5728\u53ea\u6709\u552f\u4e00\u89e3\u662f\u56fa\u7136\u53ef\u884c\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u76ee\u8981\u6211\u4eec\u7b97\u662f\u5426\u6709\u591a\u89e3\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u6bcf\u4e2a\u70b9\u505a\u4e24\u6b21Tarjan\uff0c\u7b2c\u4e00\u6b21 $ i $ ,\u7b2c\u4e8c\u6b21 $ i+n $ ,\u5224\u65ad\u4e24\u6b21\u7b97\u51fa\u7684\u89e3\u662f\u5426\u4e00\u6837\u3002\u5982\u679c\u4e0d\u4e00\u6837\u5219\u6709\u591a\u89e3\u3002\n\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint e[2000000],h[2000000],f[2000000],a[2000000],b[2000000],d[2000000],stak[2000000],dfn[2000000],low[2000000];\nbool cut[2000000],u[2000000];\nint root,j,T,n,m,cnt,tt,id,tot,i,xx,yy,x,y;\nbool flag;\nstring s1,s2;\nvoid add(int x,int y)\n{\n\tcnt++;a[cnt]=y;b[cnt]=d[x];d[x]=cnt;\n}\nvoid tarjan(int x)\n{\n\ttt++;dfn[x]=tt;low[x]=dfn[x];id++;stak[id]=x;u[x]=true;\n\tfor (int i=d[x];i;i=b[i])\n\t     {\n\t     \tif (dfn[a[i]]==0) \n\t     \t    {\n\t     \t    \ttarjan(a[i]);\n\t     \t    \tlow[x]=min(low[x],low[a[i]]);\n\t\t\t\t }\n\t\t\telse if (u[a[i]]) low[x]=min(low[x],dfn[a[i]]);\n\t\t }\n\tif (low[x]==dfn[x])\n\t     {\n\t     \ttot++;h[x]=1;\n\t     \twhile (1)\n\t            {\n\t            \tf[stak[id]]=tot;\n\t            \tu[stak[id]]=false;id--;\n\t            \tif (stak[id+1]==x) break;\n\t\t\t\t}\n\t\t }\n\treturn;\n}\nint main()\n{\n\t   \ttt=0;id=0;tot=0;cnt=0;\n\t   \tfor (i=1;i<=2*n;i++) dfn[i]=0,low[i]=0,d[i]=0,u[i]=0,f[i]=0;\n\tcin>>n>>m;\n\tfor (i=1;i<=m;i++)\n\t     {\n\t     \tcin>>x>>s1>>y>>s2;\n\t     \tif (s1[0]=='Y') xx=1;else xx=0;\n\t     \tif (s2[0]=='Y') yy=1;else yy=0;\n\t     \tif ((xx==0)&(yy==0)) {add(x+n,y);add(y+n,x);}\n\t     \tif ((xx==1)&(yy==1)) {add(x,y+n);add(y,x+n);}\n\t     \tif ((xx==1)&(yy==0)) {add(x,y);add(y+n,x+n);}\n\t     \tif ((xx==0)&(yy==1)) {add(x+n,y+n);add(y,x);}\n\t\t }\n\tfor (i=1;i<=2*n;i++)\n\t    if (dfn[i]==0) \n\t\t    {\n\t\t\troot=i;tarjan(i);\n\t\t    }\n\tflag=true;\n\tfor (i=1;i<=n;i++)\n\t    if (f[i]==f[i+n])\n\t        flag=false;\n//\tfor (i=1;i<=2*n;i++) e[i]=f[i];\n\t//tt=0;id=0;tot=0;\n  // \tfor (i=1;i<=2*n;i++) dfn[i]=0,low[i]=0,u[i]=0,f[i]=0;\n//\tfor (i=n*2;i>=1;i--)\n//\t    if (dfn[i]==0) tarjan(i);\n\tif (flag==false) { puts(\"IMPOSSIBLE\");return 0;}\n\tfor (j=1;j<=n;j++)\n\t     {\n\t     \ttt=0;id=0;tot=0;\n\t   \tfor (i=1;i<=2*n;i++) dfn[i]=0,low[i]=0,u[i]=0,f[i]=0;\n\t   \ttarjan(j);\n\t   \tif (dfn[j+n]==0) tarjan(j+n);\n\t   \txx=f[j];yy=f[j+n];\n\t   \t\ttt=0;id=0;tot=0;\n\t   \tfor (i=1;i<=2*n;i++) dfn[i]=0,low[i]=0,u[i]=0,f[i]=0;\n\t   \ttarjan(j+n);\n\t   \tif (dfn[j]==0) tarjan(j);\n\t   \tif ((xx<yy)&(f[j]>f[j+n])||(xx>yy)&(f[j]<f[j+n])) printf(\"?\");\n\t   \telse if (xx<yy) printf(\"N\");\n\t   \telse printf(\"Y\");\n\t\t }\n\treturn 0;\n}\n```\n",
        "postTime": 1618190656,
        "uid": 77615,
        "name": "OIerAlbedo",
        "ccfLevel": 0,
        "title": "P3007\u9898\u89e3"
    },
    {
        "content": "[My Blog](https://yzxoi.top/archives/1699)\n\n## Description\n\n\u7ed9\u51fa $n$ \u4e2a\u6cd5\u6848\uff0c$m$ \u5934\u725b\u7684\u610f\u89c1\uff0c \u6bcf\u5934\u725b\u4f1a\u8868\u51b3\u4e24\u6b21\u3002\n\u6bcf\u6b21\u8868\u51b3\u683c\u5f0f\u4e3a `i Y` \u8868\u793a\u201c\u652f\u6301 $i$ \u53f7\u6cd5\u6848\u201d\u6216 `i N` \u8868\u793a\u201c\u53cd\u5bf9 $i$ \u53f7\u6cd5\u6848\u201d\u3002\n\u6700\u7ec8\uff0c\u6bcf\u5934\u725b\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u8868\u51b3\u88ab\u6ee1\u8db3\u3002\u4e0d\u53ef\u80fd\u6210\u7acb\u7684\u8bdd\u8f93\u51fa `IMPOSSIBLE`\uff0c\u5426\u5219\u8f93\u51fa\u65b9\u6848\u3002\n\n$1\\leq N \\leq 1,000,1\\leq M \\leq 4,000$\n\n## Solution\n\n\u663e\u7136\u662f 2-SAT\u3002\n\n\u5bf9\u4e8e\u6bcf\u5934\u725b\u7684\u8868\u51b3\uff0c\u53ea\u8981\u6839\u636e\u201c\u82e5\u67d0\u4e2a\u8868\u51b3\u662f\u9519\u8bef\u7684\uff0c\u90a3\u4e48\u53e6\u4e00\u4e2a\u8868\u51b3\u4e00\u5b9a\u662f\u5bf9\u7684\u201c\u6761\u4ef6\u6765\u5efa\u56fe\u5373\u53ef\u3002\n\n\u7136\u540e\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u5408\u6cd5\uff08\u53ea\u8981\u6bcf\u4e2a\u6cd5\u6848\u7684\u4e24\u79cd\u72b6\u6001\u5747\u4e0d\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u5373\u53ef\uff09\n\n\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u6cd5\u6848\uff0c\u66b4\u529b\u679a\u4e3e\u8be5\u6cd5\u6848\u662f\u5426\u6210\u7acb\uff0c\u7136\u540e\u8dd1\u4e00\u6b21 DFS \u5224\u65ad\u4e0b\u662f\u5426\u6709\u77db\u76fe\u5373\u53ef\u3002\n\n## Code\n\n```c++\n#include<bits/stdc++.h>\n#define Tp template<typename Ty>\n#define Ts template<typename Ty,typename... Ar>\n#define W while\n#define I inline\n#define RI register int\n#define LL long long\n#define Cn const\n#define CI Cn int&\n#define gc getchar\n#define D isdigit(c=gc())\n#define pc(c) putchar((c))\n#define min(x,y) ((x)<(y)?(x):(y))\n#define max(x,y) ((x)>(y)?(x):(y))\nusing namespace std;\nnamespace Debug{\n\tTp I void _debug(Cn char* f,Ty t){cerr<<f<<'='<<t<<endl;}\n\tTs I void _debug(Cn char* f,Ty x,Ar... y){W(*f!=',') cerr<<*f++;cerr<<'='<<x<<\",\";_debug(f+1,y...);}\n\tTp ostream& operator<<(ostream& os,Cn vector<Ty>& V){os<<\"[\";for(Cn auto& vv:V) os<<vv<<\",\";os<<\"]\";return os;}\n\t#define gdb(...) _debug(#__VA_ARGS__,__VA_ARGS__)\n}using namespace Debug;\nnamespace FastIO{\n\tTp I void read(Ty& x){char c;int f=1;x=0;W(!D) f=c^'-'?1:-1;W(x=(x<<3)+(x<<1)+(c&15),D);x*=f;}\n\tTs I void read(Ty& x,Ar&... y){read(x),read(y...);}\n\tTp I void write(Ty x){x<0&&(pc('-'),x=-x,0),x<10?(pc(x+'0'),0):(write(x/10),pc(x%10+'0'),0);}\n\tTp I void writeln(Cn Ty& x){write(x),pc('\\n');}\n}using namespace FastIO;\nCn int N=1010,M=4010;\nint n,m,fir[N<<1],nxt[M<<1],son[M<<1],tot,dfn[N<<1],low[N<<1],stk[N<<1],col[N<<1],top,cnt,cc,vis[N<<1];\nI int opp(CI x){return x>n?x-n:x+n;}\nI void Add(CI x,CI y){nxt[++tot]=fir[x],fir[x]=tot,son[tot]=y;}\n#define to son[i]\nI void Tarjan(CI x){\n\tdfn[x]=low[x]=++cnt,stk[++top]=x;\n\tRI i;for(i=fir[x];i;i=nxt[i]) if(!dfn[to]) Tarjan(to),low[x]=min(low[x],low[to]);else if(!col[to]) low[x]=min(low[x],dfn[to]);\n\tif(dfn[x]==low[x]){col[x]=++cc;W(stk[top]^x) col[stk[top--]]=cc;top--;}\n}\nI void dfs(CI x){\n\tif(vis[x]) return ;\n\tvis[x]=1;RI i;for(i=fir[x];i;i=nxt[i]) if(!vis[to]) dfs(to);\n}\nI int check(CI x){\n\tRI i;memset(vis,0,sizeof(vis));dfs(x);for(i=1;i<=n;i++) if(vis[i]&&vis[i+n]) return 0;return 1;//\u5224\u65ad\u662f\u5426\u53ef\u884c\n}\nint main(){\n\tRI i,x,y;char a,b;for(read(n,m),i=1;i<=m;i++) scanf(\"%d %c %d %c\",&x,&a,&y,&b),x+=(a=='Y')*n,y+=(b=='Y')*n,Add(x,opp(y)),Add(y,opp(x));//\u53cd\u5411\u5efa\n\tfor(i=1;i<=(n<<1);i++) if(!dfn[i]) Tarjan(i);for(i=1;i<=n;i++) if(col[i]==col[i+n]) return puts(\"IMPOSSIBLE\"),0;//\u65e0\u89e3\u5224\u65ad\n\tfor(i=1;i<=n;i++) x=check(i),y=check(i+n),(x&&y)?(pc('?'),0):x?(pc('Y'),0):(pc('N'),0);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1614600071,
        "uid": 37103,
        "name": "yzxoi",
        "ccfLevel": 7,
        "title": "LuoguP3007 [USACO11JAN] The Continental Cowngress G"
    },
    {
        "content": "$\\rm 2-SAT$ \u6a21\u677f\u9898\u3002\n\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa $n$ \u4e2a\u6cd5\u6848\uff0c $m$ \u5934\u725b\u7684\u610f\u89c1\uff0c \u6bcf\u5934\u725b\u4f1a\u8868\u51b3\u4e24\u6b21\u3002  \n\n\u6bcf\u6b21\u8868\u51b3\u683c\u5f0f\u4e3a `i Y` \u8868\u793a\u201c\u652f\u6301 $i$ \u53f7\u6cd5\u6848\u201d\u6216 `i N` \u8868\u793a\u201c\u53cd\u5bf9 $i$ \u53f7\u6cd5\u6848\u201d\u3002  \n\n\u6700\u7ec8\uff0c\u6bcf\u5934\u725b\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u8868\u51b3\u88ab\u6ee1\u8db3\u3002\u4e0d\u53ef\u80fd\u6210\u7acb\u7684\u8bdd\u8f93\u51fa `IMPOSSIBLE`\uff0c\u5426\u5219\u8f93\u51fa\u65b9\u6848\u3002\n\n$1\\le n\\le 1000,1\\le m\\le 4000$\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u5efa\u8fb9\u65b9\u5f0f\u8ddf\u6a21\u677f\u9898\u662f\u6ca1\u4ec0\u4e48\u4e24\u6837\u7684\uff0c\u6211\u4eec\u7528 $x$ \u6765\u8868\u793a\u901a\u8fc7\u6cd5\u6848 $x$\uff0c$x'$ \u8868\u793a\u9a73\u56de\u6cd5\u6848 $x$\u3002\n\n\u91cd\u70b9\u662f\u5982\u4f55\u6c42\u51fa\u6bcf\u4e2a\u65b9\u6848\u662f\u5426\u80fd\u591f\u88ab\u901a\u8fc7\u3002\n\n\u5982\u679c $\\forall x\\in [1,n],x,x'$ \u5728\u540c\u4e00\u8fde\u901a\u5757\u5185\uff0c\u5219\u65e0\u89e3\u3002\n\n\u7ed3\u679c\u662f `?` \u4ea6\u5373\u4e24\u4e2a\u53d6\u503c $x,x'$ \u90fd\u4e0d\u4f1a\u5f71\u54cd\u5230\u4e00\u8d77\uff0c\u5373 $x$ \u80fd\u5230\u8fbe\u7684\u6240\u6709\u70b9\u6ca1\u6709 $x'$\uff0c$x'$ \u80fd\u5230\u8fbe\u7684\u6240\u6709\u70b9\u6ca1\u6709 $x$\u3002\n\n\u5982\u679c\u662f\u5176\u4ed6\u7ed3\u679c\uff0c\u5728\u6211\u4eec\u5efa\u51fa\u6765\u7684\u56fe\u4e2d\u8868\u73b0\u4e3a\u9009\u62e9 $x$ \u6216 $x'$ \u4f1a\u5f62\u6210\u73af\uff0c\u4f46\u4e0d\u80fd\u540c\u65f6\u517c\u5907\uff0c\u517c\u5907\u4e86\u5c31\u662f\u65e0\u89e3\u4e86\u3002\n\n# \u4ee3\u7801\n\n```cpp\n// Problem: P3007 [USACO11JAN] The Continental Cowngress G\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P3007\n// Memory Limit: 125 MB\n// Time Limit: 1000 ms\n// Date:2022-05-28 23:01\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <cmath>\n#include <stack>\n#define enter putchar(10)\n#define debug(c,que) std::cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) std::cout << arr[i] << w;\n#define speed_up() std::ios::sync_with_stdio(false),std::cin.tie(0),std::cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define stop return(0)\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\tif(x < 0) x += mod;\n\treturn x % mod;\n}\nnamespace Newstd {\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getchar();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getchar();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getchar();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline double double_read() {\n\t\tlong long ret = 0,w = 1,aft = 0,dot = 0,num = 0;\n\t\tchar ch = getchar();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif (ch == '-') w = -1;\n\t\t\tch = getchar();\n\t\t}\n\t\twhile (isdigit(ch) || ch == '.') {\n\t\t\tif (ch == '.') {\n\t\t\t\tdot = 1;\n\t\t\t} else if (dot == 0) {\n\t\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\t} else {\n\t\t\t\taft = (aft << 3) + (aft << 1) + ch - '0';\n\t\t\t\tnum ++;\n\t\t\t}\n\t\t\tch = getchar();\n\t\t}\n\t\treturn (pow(0.1,num) * aft + ret) * w;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\n\nconst int N = 4005;\nstruct Graph {\n\tint v,nxt;\n} gra[N << 2];\nint head[N << 1],dfn[N << 1],low[N << 1],col[N << 1];\nbool in_stack[N << 1],vis[N << 1];\nstd::stack<int>st;\nint n,m,idx,num,cnt;\ninline void add(int u,int v) {\n\tgra[++ idx] = (Graph){v,head[u]},head[u] = idx;\n}\ninline void tarjan(int now) {\n\tdfn[now] = low[now] = ++ num,in_stack[now] = true;\n\tst.push(now);\n\tfor (register int i = head[now];i;i = gra[i].nxt) {\n\t\tint v = gra[i].v;\n\t\tif (!dfn[v]) {\n\t\t\ttarjan(v);\n\t\t\tlow[now] = std::min(low[now],low[v]);\n\t\t} else if (in_stack[v]) {\n\t\t\tlow[now] = std::min(low[now],dfn[v]);\n\t\t}\n\t}\n\tif (dfn[now] == low[now]) {\n\t\tcnt ++;\n\t\tint u;\n\t\tdo {\n\t\t\tu = st.top();st.pop();\n\t\t\tin_stack[u] = false,col[u] = cnt;\n\t\t} while (u != now);\n\t}\n}\ninline void dfs(int now) {\n\tvis[now] = true;\n\tfor (register int i = head[now];i;i = gra[i].nxt) {\n\t\tint v = gra[i].v;\n\t\tif (!vis[v]) {\n\t\t\tdfs(v);\n\t\t}\n\t}\n}\ninline bool check(int now) {\n\tmst(vis,false);\n\tdfs(now);\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tif (vis[i] == true && vis[i + n] == true) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nint main(void) {\n\tstd::cin >> n >> m;\n\tfor (register int i = 1;i <= m; ++ i) {\n\t\tint a,b;\n\t\tchar Ta[5],Tb[5];\n\t\tstd::cin >> a >> Ta >> b >> Tb;\n\t\tchar ta = Ta[0],tb = Tb[0];\n\t\tif (ta == 'N' && tb == 'N') {\n\t\t\tadd(a,b + n),add(b,a + n);\n\t\t} else if (ta == 'N' && tb == 'Y') {\n\t\t\tadd(a,b),add(b + n,a + n);\n\t\t} else if (ta == 'Y' && tb == 'N') {\n\t\t\tadd(a + n,b + n),add(b,a);\n\t\t} else if (ta == 'Y' && tb == 'Y') {\n\t\t\tadd(a + n,b),add(b + n,a);\n\t\t}\n\t}\n\tfor (register int i = 1;i <= 2 * n; ++ i) {\n\t\tif (!dfn[i]) {\n\t\t\ttarjan(i);\n\t\t}\n\t}\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tif (col[i] == col[i + n]) {\n\t\t\tputs(\"IMPOSSIBLE\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tbool ta = check(i),tb = check(i + n);\n\t\tif (ta == true && tb == false) putchar('N');\n\t\telse if (ta == false && tb == true) putchar('Y');\n\t\telse if (ta == false && tb == false) putchar('?');\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1653752722,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "P3007 [USACO11JAN] The Continental Cowngress G"
    },
    {
        "content": "2-SAT \u677f\u9898\u3002\n\n\u5bf9\u4e8e\u7b2c $i$ \u6761\u6cd5\u6848\u5f00\u4e24\u4e2a\u70b9 $i$ \u548c $i+n$\u3002\u5bf9\u4e8e\u6bcf\u6761\u9650\u5236 $A,B$\uff0c\u82e5 $A$ \u6ca1\u88ab\u6ee1\u8db3\u5219 $B$ \u5fc5\u987b\u6ee1\u8db3\uff0c\u53cd\u4e4b\u540c\u7406\uff0c\u56e0\u6b64\u8fde\u4e24\u6761\u8fb9 $a_{i\\oplus1},b_j$ \u548c $b_{j\\oplus1},a_i$\u3002\n\n\u4e4b\u540e\u5c31\u662f\u5e38\u89c4\u7684 tarjan \u6c42 SCC \u4e86\uff0c\u6ce8\u610f tarjan \u6c42\u51fa\u6765\u7684\u62d3\u6251\u5e8f\u662f\u53cd\u7684\uff0c\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019\u8981\u6ce8\u610f\u3002\n\n\u4e4b\u540e\u5c31\u662f\u5224\u5b9a\u7b2c $i$ \u6761\u6cd5\u6848\u662f\u5426\u8868\u51b3\u6216\u8005\u901a\u8fc7\u90fd\u53ef\u4ee5\u4e86\u3002\n### \u65b9\u6cd5\u4e00\n\u7531\u4e8e\u8fd9\u9898\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u6211\u4eec\u6bcf\u6b21\u5224\u5b9a\u53ef\u4ee5\u76f4\u63a5\u4ece $i$ \u548c $i+n$ \u5f00\u59cb\u7206\u641c\uff0c\u5982\u679c\u90fd\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe\uff0c\u8bf4\u660e\u8be5\u6cd5\u6848\u7684\u9009\u62e9\u65e0\u5f71\u54cd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nm)$ \u7684\u3002~~\u4f46\u662f\u6211\u5b9e\u73b0\u7684\u4e0d\u597d TLE \u4e86\u3002~~\n### \u65b9\u6cd5\u4e8c\n\u4e8e\u662f\u6211\u4eec\u6362\u4e00\u79cd\u65b9\u5f0f\uff0c\u7f29\u70b9\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u6bcf\u4e2a\u70b9\u7528\u4e00\u4e2a vector \u6765\u8bb0\u5f55\u5b83\u53ef\u4ee5\u88ab\u54ea\u4e9b\u70b9\u5230\u8fbe\uff0c\u5728\u62d3\u6251\u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u662f $O(nm)$ \u7684\uff0c\u4f46\u53ef\u4ee5\u8d77\u5230\u4e0d\u9519\u7684\u5e38\u6570\u4f18\u5316\u3002~~\u4f46\u662f\u5b83\u53c8 MLE \u4e86~~\n### \u65b9\u6cd5\u4e09\n\u4e8e\u662f\u6211\u4eec\u5341\u5206\u6124\u6012\uff0c\u76f4\u63a5\u5f00\u4e86 $2n$ \u4e2a bitset\u3002\u4f9d\u7136\u662f\u62d3\u6251\u6392\u5e8f\uff0c\u4f46\u662f\u6bcf\u4e2a\u70b9\u6211\u4eec\u5f00\u4e00\u4e2a bitset\uff0c\u7b2c $i$ \u4f4d\u4e3a $1$ \u8bf4\u660e $i$ \u53ef\u4ee5\u5230\u8fbe\u8fd9\u4e2a\u70b9\uff0c\u4f9d\u7136\u662f\u5728\u62d3\u6251\u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u8fd8\u662f $O(nm)$ \u7684\uff0c\u4f46\u662f bitset \u5e38\u6570\u6781\u5c0f\uff0c\u8dd1\u7684\u98de\u5feb\uff0c\u518d\u52a0\u4e0a bitset \u6bcf\u4e00\u4f4d\u4ec5\u5360\u7528 $1$ \u4e2a bit \u4f4d\uff0c\u7a7a\u95f4\u5360\u7528\u4e5f\u5f88\u5c0f\u3002\u4e8e\u662f\u6211\u4eec~~\u5728 O2 \u7684\u52a0\u6301\u4e0b~~\u62ff\u5230\u4e86\u672c\u9898\u7684\u6700\u4f18\u89e3\u3002\n## \u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tint s=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')\n\t{\n\t\tif(c=='-')\n\t\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\ts=s*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s*f;\n}\ninline bool read_bool()\n{\n\tchar c=getchar();\n\twhile(c!='Y'&&c!='N')\n\tc=getchar();\n\tif(c=='Y')\n\treturn 0;\n\treturn 1;\n}\nint n,m;\nvector <int> a[4007],b[4007];\nint dfn[4007],low[4007],col[4007],tot,jss;\nbool vis[4007];\nbitset <2007> jl[2007];\nstack <int> s;\ninline void get_col(int y)\n{\n\tint x=-1;\n\t++jss;\n\twhile(x!=y)\n\t{\n\t\tx=s.top();\n\t\ts.pop();\n\t\tvis[x]=0;\n\t\tcol[x]=jss;\n\t}\n}\nvoid tarjan(int x)\n{\n\t++tot;\n\tdfn[x]=low[x]=tot;\n\ts.push(x);\n\tvis[x]=1;\n\tint siz=a[x].size();\n\tfor(int i=0;i<siz;++i)\n\t{\n\t\tint v=a[x][i];\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[x]=min(low[x],low[v]);\n\t\t}\n\t\telse if(vis[v])\n\t\tlow[x]=min(low[x],dfn[v]);\n\t}\n\tif(low[x]==dfn[x])\n\tget_col(x);\n}\nchar ans[2]={'N','Y'};\nint ff[8007],tt[8007],rd[4007];\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x=read(),xk=read_bool(),y=read(),yk=read_bool();\n\t\tff[i*2-1]=x+(xk^1)*n,tt[i*2-1]=y+yk*n;\n\t\ta[x+(xk^1)*n].push_back(y+yk*n);\n\t\tff[i*2]=y+(yk^1)*n,tt[i*2]=x+xk*n;\n\t\ta[y+(yk^1)*n].push_back(x+xk*n);\n\t}\n\tfor(int i=1;i<=2*n;++i)\n\t{\n\t\tif(!dfn[i])\n\t\ttarjan(i);\n\t}\n\tfor(int i=1;i<2*m;++i)\n\t{\n\t\tif(col[ff[i]]!=col[tt[i]])\n\t\tb[col[ff[i]]].push_back(col[tt[i]]),++rd[col[tt[i]]];\n\t}\n\tqueue <int> q;\n\tfor(int i=1;i<=jss;++i)\n\t{\n\t\tif(!rd[i])\n\t\tq.push(i);\n\t\tjl[i][i]=1;\n\t}\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<b[u].size();++i)\n\t\t{\n\t\t\tint v=b[u][i];\n\t\t\t--rd[v];\n\t\t\tjl[v]|=jl[u];\n\t\t\tif(!rd[v])\n\t\t\tq.push(v);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(col[i]==col[i+n])\n\t\t{\n\t\t\tputs(\"IMPOSSIBLE\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(!(jl[col[i]][col[i+n]]|jl[col[i+n]][col[i]]))\n\t\tputchar('?');\n\t\telse\n\t\tputchar(ans[col[i]<col[i+n]]);\n\t}\n\treturn 0;\n}\n```\n## \u540e\u8bb0\n\u5173\u4e8e\u65b9\u6cd5\u4e00\u548c\u65b9\u6cd5\u4e8c\uff0c\u65b9\u6cd5\u4e00\u5982\u679c\u4f60\u5b9e\u73b0\u5f97\u6f02\u4eae\u4e00\u4e9b\u7684\u8bdd\u662f\u53ef\u4ee5\u8fc7\u53bb\u7684\uff0c\u6bd5\u7adf\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u65b9\u6cd5\u4e8c\u4f60\u76f4\u63a5\u53bb\u66b4\u529b\u7ef4\u62a4\u4f60\u65f6\u7a7a\u53ef\u80fd\u4f1a\u70b8\uff0c\u4f60\u9700\u8981\u5bf9 vector \u8fdb\u884c\u53bb\u91cd\u3002\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662f $O(nm)$\uff0c\u662f\u6b63\u786e\u7684\uff0c\u5b8c\u5168\u53ef\u4ee5\u8fc7\u3002\n",
        "postTime": 1637156381,
        "uid": 414210,
        "name": "Iam1789",
        "ccfLevel": 0,
        "title": "P3007 [USACO11JAN] The Continental Cowngress G \u9898\u89e3"
    },
    {
        "content": "### 2-SAT\u7684\u9898\uff0c\u6ca1\u770b\u51fa\u6765\u53ef\u4ee5\u53bb\u6a21\u677f\u5b66\u4e0b\n\n**\u6b63\u6587\uff1a**\n\n1. \u5efa\u8fb9\uff1ai\u4e3a\u540c\u610f\uff0ci+n\u4e3a\u53cd\u5bf9\n\n\t\u7531\u9898\uff1a\u6bcf\u5934\u725b\u7684\u5bf9\u5e94\u4e24\u79cd\u63d0\u6848\uff0c**\u4e8c\u8005\u5fc5\u9009\u5176\u4e00\uff0c\u53ef\u591a\u9009**\uff0c\u5229\u7528\u53cd\u5411\u5173\u7cfb\u5efa\u56fe\u5373\u53ef\uff1a\n\n\t```cpp\n\tfor(int i=1,x,y;i<=m;++i){\n\t\tscanf(\"%d%s%d%s\",&x,s1,&y,s2);\n\t\tif(s1[0]=='Y'&&s2[0]=='Y'){\n\t\t\tadd(x+n,y);//\u82e5x\u53cd\u5bf9\uff0cy\u5fc5\u987b\u540c\u610f\n\t\t\tadd(y+n,x);//\u82e5y\u540c\u610f\uff0cx\u5fc5\u987b\u540c\u610f\n\t\t}\n\t\telse if(s1[0]=='N'&&s2[0]=='Y'){\n\t\t\tadd(y+n,x+n);//\u82e5y\u53cd\u5bf9\uff0cx\u5fc5\u987b\u53cd\u5bf9\uff0c\u4ee5\u4e0b\u540c\u7406\n\t\t\tadd(x,y);\n\t\t}\n\t\telse if(s1[0]=='N'&&s2[0]=='N'){\n\t\t\tadd(x,y+n);\n\t\t\tadd(y,x+n);\n\t\t}\n\t\telse if(s1[0]=='Y'&&s2[0]=='N'){\n\t\t\tadd(x+n,y+n);\n\t\t\tadd(y,x);\n\t\t}\n\t}\n\t```\n\n2. \u7b97\u6cd5\uff0c\u601d\u8def\uff1atarjan+dfs\uff0c\u5224\u73af\u4ee5\u53ca\u6210\u7acb\u5173\u7cfb\n\n3. \u96be\u70b9\uff1a\u2018\uff1f\u2019\u600e\u4e48\u641e\uff1f\n\t\n    \u5176\u5b9e\u53ea\u9700\u77e5\u9053i\u548ci+n\u90fd\u53ef\u884c\uff0c\u5219\u4e3a\u2018\uff1f\u2019\uff0c\u5176\u4ed6\u4ea6\u7136\n    \n**Code\uff1a**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e4+5;\nchar ans[maxn],s1[3],s2[3];\nint low[maxn],dfn[maxn],col[maxn],n,m,dfs_clock,tot,size,head[maxn];\nstruct node{\n\tint v,nxt;\n}e[maxn];\nbool vis[maxn];\n\nvoid add(int u,int v){\n\te[++size].v=v;\n\te[size].nxt=head[u];\n\thead[u]=size;\n}\n\nstack<int>s;\nvoid tarjan(int u){\n\ts.push(u);\n\tdfn[u]=low[u]=++dfs_clock;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].v;\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(!col[v]) low[u]=min(low[u],low[v]);\n\t}\n\tint k;\n\tif(low[u]==dfn[u]){\n\t\t++tot;\n\t\tdo{\n\t\t\tk=s.top();s.pop();\n\t\t\tcol[k]=tot;\n\t\t}while(k!=u);\n\t}\n}\n\nvoid dfs(int u){\n\tif(vis[u]) return;\n\tvis[u]=1;\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t\tif(!vis[e[i].v]) dfs(e[i].v);\n}\n\nbool check(int u){\n\tmemset(vis,0,sizeof(vis));\n\tdfs(u);\n\tfor(int i=1;i<=n;++i)\n\t\tif(vis[i]&&vis[i+n]) return 0;\n\treturn 1;\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1,x,y;i<=m;++i){\n\t\tscanf(\"%d%s%d%s\",&x,s1,&y,s2);\n\t\tif(s1[0]=='Y'&&s2[0]=='Y'){\n\t\t\tadd(x+n,y);\n\t\t\tadd(y+n,x);\n\t\t}\n\t\telse if(s1[0]=='N'&&s2[0]=='Y'){\n\t\t\tadd(y+n,x+n);\n\t\t\tadd(x,y);\n\t\t}\n\t\telse if(s1[0]=='N'&&s2[0]=='N'){\n\t\t\tadd(x,y+n);\n\t\t\tadd(y,x+n);\n\t\t}\n\t\telse if(s1[0]=='Y'&&s2[0]=='N'){\n\t\t\tadd(x+n,y+n);\n\t\t\tadd(y,x);\n\t\t}\n\t}\n\tfor(int i=1;i<=n<<1;++i) if(!dfn[i]) tarjan(i);\n\tfor(int i=1;i<=n;++i)\n\t\tif(col[i]==col[i+n]) return puts(\"IMPOSSIBLE\"),0;//i\uff0ci+n\u90fd\u8981\u9009\uff0c\u5219\u65e0\u89e3\n\tfor(int i=1;i<=n;++i){\n\t\tbool a=check(i),b=check(i+n);\n\t\tif(a&&b) ans[i]='?';\n\t\telse if(!a&&b) ans[i]='N';\n\t\telse if(a&&!b) ans[i]='Y';\n\t}\n\tfor(int i=1;i<=n;++i) printf(\"%c\",ans[i]);\n}\n```\n",
        "postTime": 1567411990,
        "uid": 109381,
        "name": "Mosher",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3007 \u3010[USACO11JAN]\u5927\u9646\u8bae\u4f1aThe Continental Cowngress\u3011"
    },
    {
        "content": "\u6211\u7528\u8fd9\u9898\u6765\u7ec32-SAT\n\n\u56e0\u4e3a\u6211\u5e38\u7528\u7684\u67d0\u9898\u5e93\u4e0a\u9762\u8c8c\u4f3c\u6ca1\u67092-SAT\u7279\u522b\u597d\u7684\u4f8b\u9898\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u7684\u4f1a\u8bae\u770b\u505a\u662f\u70b9\uff0c\u901a\u8fc7Y/N\u6765\u62c6\u5f00\u6210\u4e3a\u4e24\u4e2a\u70b9i,i'\n\n\u7136\u540e\u901a\u8fc7\u6bcf\u4e00\u5934\u5976\u725b\u6765\u5efa\u8fb9\uff0c\u5982\u679c\u8003\u8651\u731c\u4e2d\u90a3\u5f88\u96be\u5efa\u8fb9(\u81f3\u5c11\u6211\u6ca1\u60f3\u8fc7)\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5176\u4e2d\u4e00\u4e2a\u65b9\u6848\u6ca1\u6709\u731c\u5bf9\uff0c\u90a3\u4e48\u53e6\u5916\u4e00\u4e2a\u65b9\u6848\u5fc5\u987b\u731c\u5bf9\u4e86\uff0c\u90a3\u4e48\u5c31\u8fde\u8fb9\u54af\n\n\u7136\u540e\u8003\u8651\u6bcf\u4e00\u4e2a\u65b9\u6848\u7684\u4e24\u79cd\u53ef\u80fd\uff0cdfs\u4e00\u4e0b\u5224\u65ad\u662f\u4ec0\u4e48\u60c5\u51b5\n\n\u4eba\u751f\u7b2c\u4e00\u90532-SAT\u9898\n\n==================================\u4ee3\u7801\u5206\u5272\u7ebf======================================\n\n```cpp\n#include<iostream>\n#include<fstream>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nint n,m,cnt;\nint last[2003],ans[2003];\nbool mark[2003];\nchar ch[3]={'?','N','Y'};\nstruct edge{\n    int to,next;\n}e[8003];\ninline int get(){\n    int x;\n    cin>>x;\n    char c=getchar();\n    while(c!='Y'&&c!='N')  c=getchar();\n    if(c=='Y'){\n        x=x*2-1;\n    }else{\n        x=x*2;\n    }\n    return x;\n}\ninline void insert(int u,int v){\n    e[++cnt].to=v; e[cnt].next=last[u]; last[u]=cnt;\n}\nvoid dfs(int x){\n    mark[x]=1;\n    for(int i=last[x];i;i=e[i].next){\n        if(!mark[e[i].to]){\n            dfs(e[i].to);\n        }\n    }\n}\nbool check(int x){\n    memset(mark,0,sizeof(mark));\n    dfs(x);\n    for(int i=1;i<=n;i++){\n        if(mark[2*i]&&mark[2*i-1]){\n            return 0;\n        }\n    }\n    return 1;\n}\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=m;i++){\n        int a=get(),b,c=get(),d;\n        if(a&1){\n            b=a+1;\n        }else{\n            b=a-1;\n        }\n        if(c&1){\n            d=c+1;\n        }else{\n            d=c-1;\n        }\n        insert(b,c);  insert(d,a);\n    }\n    for(int i=1;i<=n;i++){\n        bool p=check(2*i-1);\n        bool q=check(2*i);\n        if(!p&&!q){\n            cout<<\"IMPOSSIBLE\"<<endl;\n            return 0;\n        }else if(p&&q){\n            ans[i]=0;\n        }else if(!p){\n            ans[i]=1;\n        }else{\n            ans[i]=2;\n        }\n    }\n    for(int i=1;i<=n;i++){\n        cout<<ch[ans[i]];\n    }\n    return 0;\n}\n```\n/\\*\n\nin:\n,\n\nout:\nYN?\n\n\\*/\n==================================\u4ee3\u7801\u5206\u5272\u7ebf======================================\n",
        "postTime": 1495780390,
        "uid": 33738,
        "name": "mengdai",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3007 \u3010[USACO11JAN]\u5927\u9646\u8bae\u4f1aThe Continental Cowngress\u3011"
    }
]