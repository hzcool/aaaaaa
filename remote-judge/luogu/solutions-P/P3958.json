[
    {
        "content": "upd on 2019.8.8\n\n\u8bf4\u6211\u7684\u7a0b\u5e8f\u6837\u4f8b\u90fd\u8fc7\u4e0d\u53bb\u7684\u540c\u5b66\uff0c\u975e\u5e38\u62b1\u6b49\u3002\u6211\u672c\u673a\u8dd1\u6837\u4f8b\u90fd\u662f\u5bf9\u7684\u3002\n\n\u76ee\u524d\u5df2\u77e5\u7684 hack \u6570\u636e\uff0c\u5361\u7206\u4e86\u6211 double \u7684\u7cbe\u5ea6\u3002\u73b0\u5728\u6211\u5df2\u7ecf\u4fee\u6b63\u4e86\u8fd9\u4efd\u4ee3\u7801\u3002\n\n\u8fd9\u4efd\u4ee3\u7801\u5728 UOJ \u4e0a\u53ef\u4ee5 AC \u3002\n\n------------\n\n\n**\u697c\u4e0b\u7684\u5e76\u67e5\u96c6\u90fd\u600e\u4e48\u4e86\uff1f\uff1f\uff1f**\n\n### \u90fd\u53ea\u6709 80 \u5206\uff1f\uff1f\uff1f\n\n\u90a3\u6211\u6765~~\u6c34\u4e00\u6ce2~~ AC \u7684\u5e76\u67e5\u96c6\u7b97\u6cd5\u5427\n\n\u6211\u8fd9\u4e2a\u7b97\u6cd5\u5f88\u597d\u7406\u89e3\uff0c\u4e0d\u60f3\u697c\u4e0b\u7684\u5927\u4f6c\u90a3\u6837~~\u770b\u4e0d\u61c2~~\n\n\u601d\u8def\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u5982\u679c\u4e24\u4e2a\u6d1e\u76f8\u4ea4\uff08\u6216\u76f8\u5207\uff09\uff0c\u5c31\u628a\u5b83\u4eec\u8fde\u5165\u4e00\u4e2a\u96c6\u5408\n\n\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e2a\u96c6\u5408\u5c31\u662f\u4e00\u6761\u901a\u9053\uff0c\u5982\u56fe\uff1a\n\n ![](https://cdn.luogu.com.cn/upload/pic/11083.png) \n\n\u56fe\u4e2d\u5c31\u6709 $3$ \u4e2a\u96c6\u5408\u3002\u8fd9 $3$ \u4e2a\u96c6\u5408\u5c31\u662f\u4e09\u6761\u901a\u9053\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u6bcf\u4e00\u6761\u901a\u9053\u662f\u5426\u5b58\u5728\u5143\u7d20\u4e0e\u5e95\u90e8\u3001\u9876\u90e8\u76f8\u8fde\u5373\u53ef\u3002\u5982\u679c\u90fd\u6709\uff0c\u90a3\u4e48\u8f93\u51fa Yes\u3002\u8fd9\u4e2a\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u5982\u4f55\u5224\u65ad\u4e24\u4e2a\u7403\u662f\u5426\u76f8\u4ea4\uff08\u5207\uff09\u5462\uff1f\n\n\u5176\u5b9e\u5982\u679c\u4f60\u6570\u5b66\u5f88\u597d\u3001\u505a\u9898\u7ecf\u9a8c\u4e30\u5bcc\uff0c\u4f60\u5c31\u4f1a\u77e5\u9053\u4e86\uff1a\n\n### \u5982\u679c\u4e24\u4e2a\u7403\u7684\u534a\u5f84\u4e4b\u548c $\\geq$ \u4e24\u4e2a\u7403\u7403\u5fc3\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u4e24\u5706\u76f8\u4ea4\uff08\u5207\uff09\u3002\n\n\u90a3\u4e48\u7528\u8fd9\u4e00\u6761\u6765\u5224\u65ad\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5177\u4f53\u7684\u5b9e\u73b0\u7ec6\u8282\u770b\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;//\u4e0d\u52a0\u672c\u4ee3\u7801\u7206\u96f6\nint f[1001];//\u5e76\u67e5\u96c6\nint find(int x){\n    if (x!=f[x]) f[x]=find(f[x]);\n    return f[x];\n}//\u67e5\u627e+\u8def\u5f84\u538b\u7f29\nlong long dis(long long x,long long y,long long z,long long x1,long long y1,long long z1){\n    return (x-x1)*(x-x1)+(y-y1)*(y-y1)+(z-z1)*(z-z1);\n}//\u4e24\u70b9\u8ddd\u79bb\u516c\u5f0f\uff0c\u6ce8\u610f\u8fd9\u91cc\u7b97\u7684\u662f\u8ddd\u79bb\u5e73\u65b9\u3002\nlong long x[100001],y[100001],z[100001];\nint f1[100001],f2[100001];\n//f1\u8bb0\u5f55\u4e0e\u9876\u9762\u76f8\u4ea4\u7684\u6d1e\u7684\u5e8f\u53f7\n//f2\u8bb0\u5f55\u4e0e\u5e95\u9762\u76f8\u4ea4\u7684\u6d1e\u7684\u5e8f\u53f7\nint main(){\n    int t;\n    scanf(\"%d\",&t);\n    int n,h; \n    long long r;\n    for (int i=1;i<=t;i++){\n        scanf(\"%d%d%lld\",&n,&h,&r);//long long\u4e0d\u5f00\u7684\u8bdd...\n        int tot1=0;//\u8bb0\u5f55\u4e0e\u9876\u9762\u76f8\u4ea4\u7684\u6d1e\u6709\u51e0\u4e2a\n        int tot2=0;//\u8bb0\u5f55\u4e0e\u5e95\u9762\u76f8\u4ea4\u7684\u6d1e\u6709\u51e0\u4e2a\n        for (int j=1;j<=n;j++){\n          f[j]=j;  //\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n         }\n        for (int j=1;j<=n;j++){\n            scanf(\"%lld%lld%lld\",&x[j],&y[j],&z[j]);//long long\u4e0d\u5f00\u7684\u8bdd...\n            if (z[j]+r>=h){//\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u5426\u4e0e\u9876\u9762\u76f8\u4ea4\n                tot1++;\n                f1[tot1]=j;\n            }\n            if (z[j]-r<=0){//\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u5426\u4e0e\u5e95\u9762\u76f8\u4ea4\n                tot2++;\n                f2[tot2]=j;\n            }\n            for (int k=1;k<=j;k++){//\u679a\u4e3e\u4e4b\u524d\u7684\u6d1e\u662f\u5426\u4e0e\u8fd9\u4e2a\u6d1e\u76f8\u4ea4\uff0c\u5982\u679c\u76f8\u4ea4\u5219\u5408\u5e76\u96c6\u5408\n            \tif ((x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k])*(y[j]-y[k])>4*r*r) continue;\n            \t//\u9632\u6b62\u7206long long\u7684\u7279\u5224\u3002 \n                if (dis(x[j],y[j],z[j],x[k],y[k],z[k])<=4*r*r){\n                    int a1=find(j);\n                    int a2=find(k);\n                    if (a1!=a2) f[a1]=a2;\n                }\n            }\n        }\n        int s=0;\n        //\u770b\u770b\u6bcf\u4e00\u4e2a\u4e2d\u662f\u5426\u6709\u6d1e\u8fde\u63a5\u4e0a\u4e0b\u9762\n        for (int j=1;j<=tot1;j++){\n            for (int k=1;k<=tot2;k++){\n                if (find(f1[j])==find(f2[k])){\n                    s=1; \n                    break;\n                }\n            }\n            if (s==1) break;\n        }\n        if (s==1) cout<<\"Yes\"<<endl;\n        else cout<<\"No\"<<endl;\n    }\n    return 0;\n} \n```",
        "postTime": 1511260105,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "# \u53ef\u4ee5\u6253\u66b4\u529b\u8fc7\u4e3a\u4ec0\u4e48\u8981\u4f18\u5316\uff1f\n~~\u4e8b\u5b9e\u4e0a\u771f\u7684\u4e0d\u60f3\u6253\u4ec0\u4e48\u5e76\u67e5\u96c6\u554a\uff0c\u56fe\u8054\u901a\u554a\u4ec0\u4e48\u7684~~\n\n\u9996\u5148\uff0c\u6211\u4e00\u773c\u770b\u89c1\u4e86\u90a3\u4e2an<=1000,\u89c9\u5f97\u66b4\u529b\u80fd\u8fc7\uff01\uff01\n\n\u4e8e\u662f\u56de\u5f52\u66b4\u529b\u601d\u8def\uff1a\n\n1.\u5148\u628a\u6240\u6709\u80fd\u591f\u5230\u8fbe\u5976\u916a\u5e95\u90e8\u7684\u70b9\u90fd\u52a0\u5165\u961f\u5217\n\n2.\u6bcf\u6b21\u4ece\u961f\u5217\u4e2d\u5f39\u51fa\u4e00\u4e2a\uff0c\u5224\u65ad\u4ed6\u7684z\u5750\u6807\u52a0\u4e0ar\u540e\u662f\u5426\u80fd\u5230\u8fbe\u9876\u90e8\uff0c\u53ef\u4ee5\u7684\u8bdd\u76f4\u63a5\u9000\u51fa\u5faa\u73af\n\n3.\u5426\u5219\u5224\u65ad\u5b83\u548c\u6240\u6709\u7684\u70b9\u662f\u5426\u80fd\u591f\u8fde\u901a\uff0c\u5982\u679c\u53ef\u4ee5\u8fde\u901a\u5c31\u52a0\u5165\u961f\u5217\n\n\u6700\u574f\u60c5\u51b5\u5c31\u662f\u65e0\u6cd5\u5230\u8fbe\u9876\u7aef\u65f6\uff0c\u63a5\u8fd1O\uff08n\u00b2\uff09\u3002\n\n\u4e0a\u4ee3\u7801\uff0c\u7565\u4e11\u89c1\u8c05\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n#define ll long long\n#define rint register int\nusing namespace std;\nconst int maxn=1005;\nll T,n,h,r,d;\nll x[maxn],y[maxn],z[maxn];\nbool vis[maxn],ok;\ninline ll read(){//\u5feb\u8bfb\uff0c\u6ca1\u52a0\u7b26\u53f7\u7684\u6211\u6b7b\u4e86\u4e00\u6b21 \n\tchar c=getchar();\n\tll s=0,st=1;\n\twhile (c<'0'||c>'9') {\n\t\tif (c=='-') st=-1;\n\t\tc=getchar();\n\t}\n\twhile (c>='0'&&c<='9') {\n\t\ts=(s<<3)+(s<<1)+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s*st;\n} \nll ab(ll x){return x>0?x:-x;}//\u7edd\u5bf9\u503c \nll sq(ll x){return x*x;}//\u5e73\u65b9 \nint main(){\n\tT=read();\n\twhile (T--){\n\tn=read();h=read();r=read();\n\td=r*2;\n\tfor (rint i=1;i<=n;++i){\n\t\tx[i]=read();\n\t\ty[i]=read();\n\t\tz[i]=read();\n\t}\n\tqueue <int> q;\n\tfor (rint i=1;i<=n;++i){\n\t\tif (z[i]+r>=0&&z[i]-r<=0) {\n\t\t\tvis[i]=1;\n\t\t\tq.push(i);\n\t\t}\n\t}\n\tll dis,dx,dy,dz;\n\twhile (!q.empty()){\n\t\tint k=q.front();q.pop();\n\t\tif (r+z[k]>=h) {//\u5982\u679c\u5df2\u7ecf\u5230\u8fbe\u4e86\u9876\u7aef\u5c31\u9000\u51fa \n\t\t\tok=1;break;\n\t\t}\n\t\tfor (rint i=1;i<=n;++i){\n\t\t\tif (vis[i]) continue;//\u8bbf\u95ee\u8fc7\u7684\u70b9\u4e0d\u518d\u8bbf\u95ee \n\t\t\tdx=ab(x[k]-x[i]);\n\t\t\tif (dx>d) continue;\n\t\t\t//\u53ef\u4ee5\u7701\u53bb\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u8ba1\u7b97\uff0c\u6bd5\u7adf\u53ea\u6709\u4e00\u4e2a\u5750\u6807\u76f8\u51cf\u5c31\u5df2\u7ecf\u8d85\u8fc7\u4e86\u76f4\u5f84\uff0c\u4e0b\u540c \n\t\t\tdy=ab(y[k]-y[i]);\n\t\t\tif (dy>d) continue;\n\t\t\tdz=ab(z[k]-z[i]);\n\t\t\tif (dz>d) continue;\n\t\t\tdis=sq(dx)+sq(dy)+sq(dz);\n\t\t\tif (dis<=sq(d)) {\n\t\t\t\tvis[i]=1;\n\t\t\t\tq.push(i);\n\t\t\t}\n\t\t}\n\t}\n\tif (ok)\tprintf(\"Yes\\n\"),ok=0;\n\telse printf(\"No\\n\");\n\tfor (rint i=1;i<=n;++i) vis[i]=0;//\u624b\u52a8\u6e05\u96f6 \n\t}\n\treturn 0;\n}\n```\n\n\u8dd1\u4e86212ms\uff0c\u6bd5\u7adf\u662f\u66b4\u529b",
        "postTime": 1573385792,
        "uid": 137937,
        "name": "deprave",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u535a\u5ba2\u98df\u7528\u66f4\u8212\u670d[\u8fd9\u91cc](https://dgsyrc.github.io/2020/03/06/%E6%B4%9B%E8%B0%B7%E9%A2%98%E8%A7%A3%20P3958%20%E3%80%90%E5%A5%B6%E9%85%AA%E3%80%91/#more)\n\n\u9996\u5148\u8fd9\u9053\u9898\u8981\u7528\u5230\u4ee5\u4e0b\u77e5\u8bc6\uff1a\n\n\u5e76\u67e5\u96c6\u3001\u5706\u4e0e\u5706\u7684\u4f4d\u7f6e\u5173\u7cfb\uff08\u53ef\u63a8\u5e7f\u5230\u7403\u4e0e\u7403\uff09\u3001\u7a7a\u95f4\u4e24\u70b9\u5750\u6807\u516c\u5f0f\n\n\u7a7a\u95f4\u4e24\u70b9\u5750\u6807\u516c\u5f0f\u4f53\u9762\u7ed9\u4e86\uff0c\u8fd9\u91cc\u4e0d\u8bb2\u3002\n\n\u5148\u8bb2\u5706\u4e0e\u5706\u7684\u4f4d\u7f6e\u5173\u7cfb\u5224\u5b9a\uff1a\n\n![](https://s2.ax1x.com/2020/03/06/3LxT9f.jpg)\n\n\u5982\u56fe\uff0c\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u662f\uff1a\u5916\u79bb\uff0c\u5916\u5207\uff0c\u76f8\u4ea4\uff0c\u5185\u5207\uff0c\u5185\u542b\n\n\u8bbe\u4e24\u5706\u5706\u5fc3\u8ddd\u79bb\u4e3a$d(d>0)$\uff0c\u534a\u5f84\u4e3a$r_1$\u3001$r_2$\n\n\u5219\u6709\u4ee5\u4e0b\u5173\u7cfb\uff1a\n\n\u5916\u79bb\uff1a$d>r_1+r_2$\n\n\u5916\u5207\uff1a$d=r_1+r_2$\n\n\u76f8\u4ea4\uff1a$|r_1-r_2|<d<r_1+r_2$\n\n\u5185\u5207\uff1a$d=|r_1-r_2|$\n\n\u5185\u542b\uff1a$d<|r_1-r_2|$\n\n\u6b64\u7ed3\u8bba\u53ef\u4ee5\u76f4\u63a5\u63a8\u5e7f\u81f3\u7403\u4e0e\u7403\u7684\u4f4d\u7f6e\u5173\u7cfb\u3002\n\n\u5bf9\u4e8e\u672c\u9898\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5916\u79bb\u3001\u76f8\u5207\u3001\u76f8\u4ea4\u4e09\u79cd\u60c5\u51b5\uff0c\u5185\u5207\u548c\u5185\u542b\u53ef\u7565\u53bb\uff08\u6ca1\u6709\u610f\u4e49\uff09\u3002\n\n\u9898\u4e2d\u9ed8\u8ba4$z$\u8f74\u6b63\u65b9\u5411\u5411\u4e0a\uff0c$x$\u8f74\u3001$y$\u8f74\u968f\u610f\uff08\u4e0d\u5f71\u54cd\uff09\n\n\u6211\u7684\u601d\u8def\u662f\uff1a\n\n\u6bcf\u4e2a\u7403\u5404\u5316\u4e3a\u4e00\u70b9\uff0c\n\n\u9876\u5c42\u5e95\u5c42\u5404\u662f\u4e00\u70b9\uff0c\n\n\u82e5\u76f8\u5207\u76f8\u4ea4\u5373\u4e3a\u5408\u5e76\uff0c\n\n\u6700\u540e\u518d\u9a8c\u9876\u5e95\u540c\u7956\u5b97\u3002\n\n\u5bf9\u4e8e\u6b64\u9898\uff0c\u9664\u4e86\u7528\u4e0a\u5916\u79bb\u3001\u5916\u5207\u3001\u76f8\u4ea4\u7684\u5224\u5b9a\u5916\uff0c\u8fd8\u6709\uff1a\n\n\u82e5$z-r<=0$\uff0c\u5219\u8be5\u7403\u4e0e\u5e95\u90e8\u76f8\u4ea4/\u76f8\u5207\u3002\n\n\u82e5$z+r>=h$\uff0c\u5219\u8be5\u7403\u4e0e\u9876\u90e8\u76f8\u4ea4/\u76f8\u5207\u3002\n\n\u8d34\u4ee3\u7801\uff0c\u9644\u89e3\u6790\uff1a\n\n```cpp\n/*\n\t\u5b9a\u4e49\u5e95\u5c42\u8282\u70b9\u7f16\u53f7\u4e3a0\uff0c\u9876\u5c42\u8282\u70b9\u7f16\u53f7\u4e3an+1 \n*/\n#include<iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nint n,h,r,fa[1010],T;//fa\u5b58\u7236\u8282\u70b9\nint x[1010],y[1010],z[1010];//\u4f60\u61c2\u5f97\n\ndouble dis(double xa,double ya,double za,double xb,double yb,double zb)//\u5957\u516c\u5f0f\n{\n\treturn (double)(sqrt((double)(xa-xb)*(xa-xb)+(double)(ya-yb)*(ya-yb)+(double)(za-zb)*(za-zb)));\n}\n\nint find(int s)//\u6ce8\u610f\u7528\u4e86\u8def\u5f84\u538b\u7f29\n{\n\tint k=s,t;\n\twhile(k!=fa[k])\n\t{\n\t\tk=fa[k];\n\t}\n\twhile(s!=fa[s])\n\t{\n\t\tt=s;\n\t\ts=fa[s];\n\t\tfa[t]=k;\n\t}\n\treturn k;\n}\n\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%d%d%d\",&n,&h,&r);\n\t\tfor(int a=0;a<=n+1;a++)//\u6ce8\u610f\u6bcf\u6b21\u8981\u521d\u59cb\u5316\u7236\u8282\u70b9\u4e3a\u81ea\u5df1\n\t\t{\n\t\t\tfa[a]=a;\n\t\t}\n\t\tfor(int a=1;a<=n;a++)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&x[a],&y[a],&z[a]);\n\t\t\tif(z[a]-r<=0)//\u5e95\u5c42\u5408\u5e76 \n\t\t\t{\n\t\t\t\tif(find(a)!=find(0))\n\t\t\t\t{\n\t\t\t\t\tfa[find(a)]=find(0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(z[a]+r>=h)//\u9876\u5c42\u5408\u5e76 \n\t\t\t{\n\t\t\t\tif(find(a)!=find(n+1))\n\t\t\t\t{\n\t\t\t\t\tfa[find(a)]=find(n+1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int b=1;b<a;b++)//\u6d1e\u95f4\u5408\u5e76 \n\t\t\t{\n\t\t\t\tif(2*r>=dis(x[a],y[a],z[a],x[b],y[b],z[b]))\n\t\t\t\t{\n\t\t\t\t\tif(find(a)!=find(b))\n\t\t\t\t\t{\n\t\t\t\t\t\tfa[find(a)]=find(b);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(find(0)==find(n+1))//\u9a8c\u9876\u5c42\u5e95\u5c42\u662f\u5426\u8fde\u901a\n\t\t{\n\t\t\tprintf(\"Yes\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"No\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u6709\u7528\u7684\u8bdd\u9876\u4e00\u4e0b\uff0c\u8fd9\u6837\u88ab\u4eba\u624d\u80fd\u66f4\u5bb9\u6613\u627e\u5230\u54e6\uff01",
        "postTime": 1583509445,
        "uid": 89910,
        "name": "C_Cong",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "## \u6280\u5de7\uff1a\u5982\u4f55\u5224\u65ad\u4e24\u4e2a\u7403\u4f53\u4e4b\u95f4\u7684\u8ddd\u79bb\uff1f\n\n\n\u00a0\u6211\u4eec\u5148\u5f31\u5316\u6761\u4ef6\uff0c\u5047\u8bbe\u4ed6\u4eec\u90fd\u662f\u4e8c\u7ef4\u5e73\u9762\u5185\u7684\u4e24\u4e2a\u5706$O_1(x_1,y_1),O_2(x_2,y_2)$\uff0c\u5f53\u4ed6\u4eec\u76f8\u5207\u65f6\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u4e24\u4e2a\u5706\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb$d$\u521a\u597d\u5c31\u662f$\\;2 \\times r\\;$\uff08\u4e24\u4e2a\u5706\u5230\u4ed6\u4eec\u7684\u552f\u4e00\u4e00\u6761\u516c\u5207\u7ebf\u7684\u8ddd\u79bb\u90fd\u662f\u534a\u5f84$r$\uff0c\u56e0\u6b64\u52a0\u8d77\u6765\u5c31\u662f$\\;2 \\times r\\;$\uff09\u3002\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u53d1\u73b0\u4e24\u5706\u76f8\u4ea4\u65f6\u5706\u5fc3\u95f4\u8ddd$d < 2 \\times r$\u3002\u7efc\u5408\u8d77\u6765\u5c31\u662f\u5706\u5fc3\u8ddd\u79bb$\\;d \\le 2\\times r\\;$\u65f6\uff0c\u4e24\u5706\u76f8\u5207\u6216\u76f8\u4ea4\uff08\u4ee5\u4e0b\u7b80\u79f0\u201c\u63a5\u89e6 \u201d\uff09\u3002\u90a3\u4e48\u5706\u5fc3\u8ddd$d$\u600e\u4e48\u6c42\u5462\uff1f\u76f4\u63a5\u4f7f\u7528\u52fe\u80a1\u5b9a\u7406$\\;d = \\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}\\;$\u5373\u53ef\u7b97\u51fa\u3002\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u4e2a\u89c4\u5f8b\u62d3\u5c55\u5230\u4e09\u7ef4\u7a7a\u95f4\u5185\uff0c\u7531\u4e8e\u9898\u76ee\u5df2\u7ecf\u7ed9\u51fa\u4e86\u4e09\u7ef4\u7a7a\u95f4\u8ddd\u79bb\u516c\u5f0f$\\;d = \\sqrt{(x_2-x_1)^2+(y_2-y_1)^2+(z_2-z_1)^2}\\;$\uff0c\u800c\u7403\u7684\u534a\u5f84\u8fd8\u662f$r$\uff0c\u56e0\u6b64\u5f53$\\;\\sqrt{(x_2-x_1)^2+(y_2-y_1)^2+(z_2-z_1)^2} \\le 2\\times r\\;$\u65f6\uff0c\u4e24\u5706\u201c\u63a5\u89e6\u201d\u3002\u8fd9\u91cc\u8bf7\u6ce8\u610f`sqrt()`\u7684\u7cbe\u5ea6\uff08\u5c3d\u7ba1\u4e0d\u5224\u4e5f\u80fd\u8fc7\uff09\u3002\n\n\n## 20\u5206\u7b97\u6cd5\n\n\n\u00a0\u5bf9\u4e8e$20\\%$\u7684\u6570\u636e\uff0c\u53ea\u9700\u8981\u5224\u65ad\u552f\u4e00\u7684\u4e00\u4e2a\u6d1e\u662f\u4e0d\u662f\u540c\u65f6\u4e0e\u4e0a\u3001\u4e0b\u8868\u9762\u63a5\u89e6\u3002\u5176\u4e2d\u4e0e\u4e0a\u8868\u9762\u63a5\u89e6\u5c31\u662f$\\;z+r>h\\;$\uff0c\u4e0e\u4e0b\u8868\u9762\u63a5\u89e6\u5c31\u662f$\\;z-r<0\\;$\u3002\n\n\n## 40\u5206\u7b97\u6cd5\n\n\n\u00a0\u4f7f\u7528$\\;O(n!)\\;$\u641c\u7d22\uff0c\u679a\u4e3e\u7ecf\u8fc7\u7684\u987a\u5e8f\u3002\u5224\u65ad\u80fd\u4e0d\u80fd\u8fde\u901a\u548c\u662f\u5426\u63a5\u89e6\u4e0a\u3001\u4e0b\u8868\u9762\u3002\u8fd9\u91cc\u4e0d\u518d\u591a\u8bf4\u3002\n\n\n## 80\u5206\u7b97\u6cd5\n\n\n\u00a0\u6682\u65f6\u6ca1\u6709\u53d1\u73b0\u4ec0\u4e48\u53ea\u670980\u5206\u7684\u7b97\u6cd5\uff08\u9664\u975e\u7ec6\u8282\u5199\u6302\uff09\u3002\u8be6\u89c1\u6ee1\u5206\u7b97\u6cd5.\n\n\n## \u6ee1\u5206\u7b97\u6cd5\n\n\n1. \u641c\u7d22\u7b97\u6cd5\u2014\u6df1\u5ea6\u4f18\u5148\n\n\n\u00a0\u5176\u5b9e\u6df1\u5ea6\u4f18\u5148\u5e94\u8be5\u662f\u6700\u5feb\u7684\u3002\n\n\n\u00a0\u9996\u5148\uff0c\u6211\u4eec\u627e\u51fa\u6240\u6709\u53ef\u4ee5\u4ece\u4e0b\u8868\u9762\u8fdb\u5165\u7684\u7403\uff0c\u7136\u540e\u6df1\u5ea6\u4f18\u5148\u641c\u4e00\u904d\u3002\u4e00\u65e6\u9047\u5230\u4e00\u4e2a\u70b9\u6700\u9ad8\u5904\u9ad8\u5ea6$\\;z+r \\ge h\\;$\uff0c\u5c31\u8868\u793a\u53ef\u4ee5\u5230\u4e0a\u8868\u9762\uff0c\u9000\u51fa\u3002\u56e0\u4e3a\u6bcf\u4e2a\u6d1e\u6700\u591a\u8bbf\u95ee\u4e00\u6b21\uff08\u53ea\u9700\u8981\u6c42\u662f\u5426\u80fd\u5230\u8fbe\u4e0a\u8868\u9762\uff0c\u800c\u4e0d\u662f\u6700\u77ed\u6b65\u6570\uff09\uff0c\u7136\u540e\u51b3\u5b9a\u4e0b\u4e00\u6b65\u7684\u65f6\u5019\u8fd8\u9700\u8981$O(n)$\u7684\u65f6\u95f4\u3002\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u65f6$O(n^2)$\u3002\n\n\n\u00a0\u5b9e\u9645\u4e0a\uff0c\u5f80\u5f80\u4e0d\u9700\u8981\u8bbf\u95ee\u6240\u6709\u7684\u6d1e\u5c31\u53ef\u4ee5\u5224\u65ad\u201cYes\u201d\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u53ea\u6709\u201cNo\u201d\u7684\u60c5\u51b5\u8981\u8bbf\u95ee\u5168\u90e8\u3002\u56e0\u6b64\u5f88\u5c11\u8fbe\u5230$O(n^2)$\u7684\u6700\u9ad8\u590d\u6742\u5ea6\u3002\n\n\n2. \u641c\u7d22\u7b97\u6cd5\u2014\u5e7f\u5ea6\u4f18\u5148\n\n\n\u00a0\u540c\u4e0a\u601d\u60f3\uff0c\u4f46\u662f\u521d\u59cb\u65f6\u4e0d\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u8dd1\u4e00\u904d\uff0c\u800c\u662f\u628a\u6240\u6709\u4e0e\u4e0b\u8868\u9762\u63a5\u89e6\u7684\u6d1e\u76f4\u63a5\u52a0\u5165\u5e7f\u641c\u961f\u5217\uff0c\u7136\u540e\u641c\u7d22\u3002\u590d\u6742\u5ea6\u4ecd\u7136\u662f$O(n^2)$\u3002\u7ec6\u8282\u540c\u4e0a\uff0c\u4f46\u662f\u5f80\u5f80\u8dd1\u7684\u91cf\u6bd4DFS\u66f4\u5927\u3002\n\n\n3. \u5e76\u67e5\u96c6\u7b97\u6cd5\n\n\n\u00a0\u6211\u4eec\u53ef\u4ee5\u4e3a\u6bcf\u4e00\u4e2a\u7403\u90fd\u5efa\u7acb\u4e00\u4e2a\u7ed3\u70b9\uff0c\u7136\u540e\u7528$O(n^2)$\u7684\u65f6\u95f4\u5b8c\u6210\u5e76\u67e5\u96c6\u5904\u7406\uff0c\u6700\u540e\u67e5\u8be2 \u4e0e\u4e0b\u8868\u9762\u63a5\u89e6\u7684\u7403\u4f53\u4e2d \u662f\u5426\u6709\u548c\u00a0\u4e0e\u4e0a\u8868\u9762\u63a5\u89e6\u7684\u7403\u4f53 \u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d \u7684\u7403\u4f53\uff08\u6709\u4e9b\u62d7\u53e3\uff0c\u7406\u89e3\u5c31\u597d\uff09\u3002\u7136\u540e\u8f93\u51fa\u201cYes\u201d\u6216\u201cNo\u201d\u3002\u8fd9\u4e2a\u7b97\u6cd5\u5e94\u8be5\u5e38\u6570\u7565\u5927\uff0c\u56e0\u4e3a\u603b\u662f\u8981\u8dd1\u5b8c\u6240\u6709$n^2$\u6b21\u8fde\u63a5\u3002\n\n\n## \u4ee3\u7801\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nconst int MAXN=1010;\n\nstruct cir\n{\n    double x,y,z;\n    bool operator<(const cir &cpr)const\n    {\n        return z<cpr.z;\n    }\n}p[MAXN];\nbool fnd=0;\nint n;double h,r;\nbool vis[MAXN];\n\ndouble dist(double x1,double y1,double z1,double x2,double y2,double z2)\n{\n    return sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1)+(z2-z1)*(z2-z1));\n}\n\nvoid dfs(cir now,int num)\n{\n    if(now.z+r>=h)\n    {\n        fnd=1;\n        return;\n    }\n    vis[num]=1;\n    for(int i=1;i<=n;i++)\n    {\n        if(fnd)\n            return;\n        if(!vis[i]&&dist(now.x,now.y,now.z,p[i].x,p[i].y,p[i].z)<=r*2)\n            dfs(p[i],i);\n    }\n    //vis[num]=0;\n}\n\nint main()\n{\n    freopen(\"cheese.in\",\"r\",stdin);\n    freopen(\"cheese.out\",\"w\",stdout);\n    int T;scanf(\"%d\",&T);\n    while(T--)\n    {\n        memset(vis,0,sizeof(vis));\n        memset(p,0,sizeof(p));fnd=0;\n        scanf(\"%d%lf%lf\",&n,&h,&r);\n        for(int i=1;i<=n;i++)\n            scanf(\"%lf%lf%lf\",&p[i].x,&p[i].y,&p[i].z);\n        std::sort(p+1,p+n+1);\n        for(int i=1;i<=n;i++)//lower\n            if(p[i].z-r<=0)\n                dfs(p[i],i);\n        if(fnd)\n            puts(\"Yes\");\n        else\n            puts(\"No\");\n    }\n    return 0;\n}\n```",
        "postTime": 1512864301,
        "uid": 23398,
        "name": "frankchenfu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "####\u601d\u8def\u5982\u4e0b\n\n\u9996\u5148\u5148\u5199\u4e00\u4e2a\u51fd\u6570\u5224\u65ad\u4e24\u4e2a\u6d1e\u662f\u5426\u76f8\u8fde\uff0c\u5373\u4e24\u6d1e\u4e4b\u95f4\u8ddd\u79bb\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u7403\u76f4\u5f84**\uff08\u6ce8\u610f\u662f\u76f4\u5f84\uff09**\u3002\n\n```cpp\nstruct dong {//\u4e3a\u4e86\u7a0b\u5e8f\u7b80\u6d01\u7f8e\u89c2\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u8868\u793a\u6d1e\u7684\u5750\u6807\n    double x,y,z;\n};\ndong p[1001];\nbool pd(dong a,dong b) {\n    long long d;//d\u4e3a\u4e24\u6d1e\u4e4b\u95f4\u8ddd\u79bb\u7684\u5e73\u65b9\n    d=(a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)+(a.z-b.z)*(a.z-b.z);\n    if(d<=2*2*r*r) return true;//\u9274\u4e8esqrt\u51fd\u6570\u7cbe\u5ea6\u95ee\u9898\uff0c\u6211\u4eec\u5c31\u7528\u5e73\u65b9\u5224\u65ad\uff08\u76f4\u5f842r\u7684\u5e73\u65b9\uff09\n    else return false;\n}\n```\n\u7b2c\u4e8c\u4e2a\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u7a7f\u8fc7\u5976\u916a\uff0c\u5bf9\u6b64\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u8001\u9f20\u94bb\u6d1e\uff08run\u51fd\u6570\uff09\u89c1\u4ee3\u7801\uff1a\n\n```cpp\nvoid run(int x) {\n    if(jud==1) return;//\u7528jud\u8bb0\u5f55\u662f\u5426\u7a7f\u8fc7\u4e86\u5976\u916a\n    if(p[x].z+r>=h) {\n        jud=1;\n        return;\n    }\n    for(int i=1; i<=n; i++) {\n        if(m[i]==1) continue;//\u7528m\u6570\u7ec4\u4fdd\u5b58\u662f\u5426\u8d70\u8fc7\u6b64\u6d1e\uff081\u4e3a\u8d70\u8fc7\uff0c0\u4e3a\u6ca1\u8d70\u8fc7\uff09\n        if(pd(p[x],p[i])) {//\u5982\u679c\u80fd\u8d70\n            m[i]=1;//\u6807\u8bb0\u4e3a\u8d70\u8fc7\n            run(i);//\u4ece\u8fd9\u4e2a\u6d1e\u5f80\u522b\u7684\u6d1e\u8d70\n        }\n    }\n}\n```\n\u601d\u8003\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u51fd\u6570\u6211\u4eec\u8981\u4ece\u6700\u4e0b\u9762\u7684\u4e00\u4e2a\u6d1e\u5f00\u59cb\u8d70\uff0c\u51e1\u662f\u8d70\u8fc7\u7684\u6d1e\u90fd\u4e0d\u4f1a\u518d\u8d70\uff0c\u4f46\u5982\u679c\u524d\u65b9\u4e0d\u80fd\u518d\u8d70\u4e86\u8fd8\u4f1a\u8fd4\u56de\u8fd9\u4e2a\u6d1e\u5bfb\u627e\u4e0b\u4e00\u4e2a\u80fd\u8fde\u63a5\u5230\u6b64\u6d1e\u7684\u6d1e\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u5c06\u6bcf\u4e00\u4e2a\u80fd\u548c\u5e95\u8fb9\u8fde\u63a5\u5230\u7684\u6d1e\u5168\u90e8\u5224\u65ad\u4e00\u904d\uff0c\u53ea\u8981\u5176\u4e2d\u6709\u6d1e\u8fde\u63a5\u5230\u9876\u7aef\uff0c\u5c31\u7528jud\u8bb0\u5f55\u4e3a1\u3002\u56e0\u6b64\u7b49\u4f1a\u5728\u4e3b\u51fd\u6570\u4e2d\u6211\u4eec\u7528\u5faa\u73af\u628a\u80fd\u8fde\u63a5\u5230\u5e95\u8fb9\u7684\u6240\u6709\u6d1e\u627e\u5230\u5747\u8c03\u7528\u6b64\u51fd\u6570\u5373\u53ef\u3002\n\n####\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\nusing namespace std;\nunsigned long long r,n,h,jud;//\u5b9a\u4e49\u5728\u6700\u524d\u9762\uff0c\u5f88\u591a\u51fd\u6570\u90fd\u8981\u7528\u5230\nunsigned long long m[1001];//\u4e0a\u6587\u63d0\u5230\u8fc7\u7684\u7528\u6765\u8bb0\u5f55\u8be5\u6d1e\u662f\u5426\u8d70\u8fc7\u7684\u6570\u7ec4\nstruct dong {\n    double x,y,z;\n};\ndong p[1001];\nbool pd(dong a,dong b) {\n    long long d;\n    d=(a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)+(a.z-b.z)*(a.z-b.z);\n    if(d<=4*r*r) return true;\n    else return false;\n}\nvoid run(int x) {\n    if(jud==1) return;\n    if(p[x].z+r>=h) {\n        jud=1;\n        return;\n    }\n    for(int i=1; i<=n; i++) {\n        if(m[i]==1) continue;\n        if(pd(p[x],p[i])) {\n            m[i]=1;\n            run(i);\n        }\n    }\n}\nint main() {\n    int T;\n    scanf(\"%d\",&T);\n    for(int j=1; j<=T; j++) {\n        scanf(\"%d%d%d\",&n,&h,&r);\n        jud=0;\n        for(int i=1; i<=n; i++) m[i]=0;\n        for(int i=1; i<=n; i++)\n        scanf(\"%lf%lf%lf\",&p[i].x,&p[i].y,&p[i].z);//\u8f93\u5165\u5750\u6807\n        for(int i=1; i<=n; i++)\n        if(p[i].z<=r) {//\u5224\u65ad\u662f\u4e0d\u662f\u5e95\u8fb9\u6d1e\n                m[i]=1;\n                run(i);\n            }\n        if(jud==1) printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1513770506,
        "uid": 65432,
        "name": "\u865a\u6709",
        "ccfLevel": 0,
        "title": "P3958 \u5976\u916a"
    },
    {
        "content": "#### 2017\u5e74\u63d0\u9ad8\u7ec4\u9898\u76ee:\u5976\u916a\n### \u9898\u9762\uff1a\n\n\u73b0\u6709\u4e00\u5757\u5927\u5976\u916a\uff0c\u5b83\u7684\u9ad8\u5ea6\u4e3a h\uff0c\u5b83\u7684\u957f\u5ea6\u548c\u5bbd\u5ea6\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u662f\u65e0\u9650\u5927\u7684\uff0c\u5976\u916a \u4e2d\u95f4\u6709\u8bb8\u591a \u534a\u5f84\u76f8\u540c \u7684\u7403\u5f62\u7a7a\u6d1e\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u5757\u5976\u916a\u4e2d\u5efa\u7acb\u7a7a\u95f4\u5750\u6807\u7cfb\uff0c\u5728\u5750\u6807\u7cfb\u4e2d\uff0c \u5976\u916a\u7684\u4e0b\u8868\u9762\u4e3az=0\uff0c\u5976\u916a\u7684\u4e0a\u8868\u9762\u4e3az=h\u3002\n\n\u73b0\u5728\uff0c\u5976\u916a\u7684\u4e0b\u8868\u9762\u6709\u4e00\u53ea\u5c0f\u8001\u9f20 Jerry\uff0c\u5b83\u77e5\u9053\u5976\u916a\u4e2d\u6240\u6709\u7a7a\u6d1e\u7684\u7403\u5fc3\u6240\u5728\u7684\u5750 \u6807\u3002\u5982\u679c\u4e24\u4e2a\u7a7a\u6d1e\u76f8\u5207\u6216\u662f\u76f8\u4ea4\uff0c\u5219 Jerry \u53ef\u4ee5\u4ece\u5176\u4e2d\u4e00\u4e2a\u7a7a\u6d1e\u8dd1\u5230\u53e6\u4e00\u4e2a\u7a7a\u6d1e\uff0c\u7279\u522b \u5730\uff0c\u5982\u679c\u4e00\u4e2a\u7a7a\u6d1e\u4e0e\u4e0b\u8868\u9762\u76f8\u5207\u6216\u662f\u76f8\u4ea4\uff0cJerry \u5219\u53ef\u4ee5\u4ece\u5976\u916a\u4e0b\u8868\u9762\u8dd1\u8fdb\u7a7a\u6d1e\uff1b\u5982\u679c \u4e00\u4e2a\u7a7a\u6d1e\u4e0e\u4e0a\u8868\u9762\u76f8\u5207\u6216\u662f\u76f8\u4ea4\uff0cJerry \u5219\u53ef\u4ee5\u4ece\u7a7a\u6d1e\u8dd1\u5230\u5976\u916a\u4e0a\u8868\u9762\u3002\n\n\u4f4d\u4e8e\u5976\u916a\u4e0b\u8868\u9762\u7684 Jerry \u60f3\u77e5\u9053\uff0c\u5728 \u4e0d\u7834\u574f\u5976\u916a \u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u5426\u5229\u7528\u5df2\u6709\u7684\u7a7a\u6d1e\u8dd1 \u5230\u5976\u916a\u7684\u4e0a\u8868\u9762\u53bb?\n\n\u5df2\u77e5\uff0c\u4e24\u70b9\u7684\u8ddd\u79bb\u516c\u5f0f\u4e3a   \n$dist(p_1,p_2)$=$\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2+(z_1-z_2)^2}$\n\n#### \u6837\u4f8b\uff1a\n```\n3 \n2 4 1 \n0 0 1 \n0 0 3 \n2 5 1 \n0 0 1 \n0 0 4 \n2 5 2 \n0 0 2 \n2 0 4\n```\n\n#### \u8f93\u51fa\uff1a\n```\nYes\nNo\nYes\n```\n#### \u601d\u8003\uff1a\n\t\n    \u6211\u4eec\u53ea\u9700\u8981\u5148\u627e\u51fa\u4e00\u4e2a\u5904\u4e8e\u5976\u916a\u4e0b\u8868\u9762\u7684\u70b9\uff0c\u679a\u4e3e\u4e0e\u4ed6\u76f8\u90bb\u7684\u70b9\uff0c\u627e\u5230\u4e4b\u540e\uff0c\u5728\u8dd1\u4e00\u904d\uff08\u4e5f\u5c31\u662fdfs\uff09\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000+5;\nstruct note{\n\tdouble x,y,z;\n}p[maxn];//\u7ed3\u6784\u4f53\uff0c\u8bb0\u5f55\u5750\u6807\nlong long t,n,r,h,f,m[maxn];\ninline int pd(note a,note b){//\u4e24\u70b9\u8ddd\u79bb\n\tlong long s;\n\ts=(a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)+(a.z-b.z)*(a.z-b.z);\n\tif(s<=4*r*r)return 1;//\u5982\u679c\u76f8\u90bb\uff0c\u5c31\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\u3002\n\telse return 0;\n}\ninline void run(int x)\n{\n\tif(f==1)return ;//\u6807\u8bb0\u4e3a1\uff0c\u5c31\u9000\u51fa\u53bb\u3002\n\tif(p[x].z+r>=h){\n\t\tf=1;\n\t\treturn ;\n\t}//\u5982\u679c\u5230\u4e86\u4e0a\u8868\u9762\uff0c\u6807\u8bb0\u4e3a1\u3002\n\tfor(int i=1;i<=n;i++){\n\t\tif(m[i]==1)continue;//\u5982\u679c\u8fd9\u4e2a\u70b9\u8dd1\u8fc7\uff0c\u5c31\u8df3\u8fc7\u3002\n\t\tif(pd(p[x],p[i])){\n\t\t\tm[i]=1;\n\t\t\trun(i);\n\t\t}//\u5982\u679c\u6ca1\u8dd1\u8fc7\uff0c\u4e14\u4e24\u70b9\u76f8\u90bb\uff0c\u5c31\u8dd1\u3002\n\t}\n}\nint main() {\n    freopen(\"cheese.in\",\"r\",stdin);\n    freopen(\"cheese.out\",\"w\",stdout);\n    cin>>t;\n\tfor(int j=1;j<=t;j++){\n\t\tf=0;\n\t\tcin>>n>>h>>r;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%lf%lf%lf\",&p[i].x,&p[i].y,&p[i].z);\n\t\t\tm[i]=0;\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(p[i].z<=r){//\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u4e0b\u8868\u9762\uff0c\u4fbf\u4ece\u8fd9\u4e2a\u70b9\u8d77\u8dd1\u3002\n\t\t\t\tm[i]=1;\n\t\t\t\trun(i);\n\t\t\t}\n\t\t}\n\t\tif(f==1)puts(\"Yes\");//\u5982\u679c\u6807\u8bb0\u4e3a1\uff0c\u5219Yes\n\t\telse puts(\"No\");//\u5426\u5219\uff0cNo\n\t}\n    return 0;//\u529f\u5fb7\u5706\u6ee1\n}\n```",
        "postTime": 1538645598,
        "uid": 70589,
        "name": "XzJerry",
        "ccfLevel": 0,
        "title": "Cheese"
    },
    {
        "content": "\u5f53\u6211\u8fd9\u6837\u4e00\u4e2a\u849f\u84bb\u770b\u5230\u9898\u89e3\u533a\u91cc\u90fd\u662f\u7c7b\u4f3c\u5e76\u67e5\u96c6\u3001dfs\u3001bfs\u8fd9\u79cd\u9ad8\u6df1\u7684\u4e1c\u897f\u65f6\uff0c\u771f\u7684\u5f88\u96be\u53d7\uff08~~\u56e0\u4e3a\u770b\u4e0d\u61c2~~\uff09\n\n\u4e8e\u662f\u6211\u6574\u4e86\u4e00\u4e2a\u5c0f\u65f6\uff0c\u7ec8\u4e8e\u6574\u51fa\u4e00\u4e2a~~\u4eba\u755c\u65e0\u5bb3\u8001\u5c11\u7686\u5b9c\u5373\u4f7f\u662f\u849f\u84bb\u4e5f\u80fd\u770b\u61c2\u7684~~\u4ee3\u7801\u4e86\n\n~~\u4ee5\u4e0a\u662f\u5e9f\u8bdd~~\n\n# \u601d\u8def\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u5148\u6309\u9ad8\u77ee\uff08\u5373z\uff09\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5982\u679c\u4e00\u4e2a\u6d1e\u80fd\u548c\u5b83\u524d\u9762\u4efb\u4f55\u4e00\u4e2a\u6d1e\u76f8\u8fde\u6216\u662f\u76f4\u63a5\u4e0e\u4e0b\u8868\u9762\u76f8\u8fde\uff0c\u5c31\u5b58\u8fdb\u4e00\u4e2a\u6570\u7ec4\uff0c\u5982\u679c\u6570\u7ec4\u4e2d\u6709\u54ea\u4e2a\u80fd\u548c\u4e0a\u8868\u9762\u76f8\u8fde\uff0c\u5c31\u8f93\u51faYes\uff0c\u53cd\u4e4b\uff0c\u8f93\u51faNo\u3002\n\n\u56e0\u4e3a\u4e8b\u5148\u5df2\u7ecf\u6392\u8fc7\u4e86\u5e8f\uff0c\u6240\u4ee5\u53ef\u4ee5\u4fdd\u8bc1\u6570\u7ec4\u4e2d\u7684\u6570\u90fd\u662f\u4e0e\u4e0b\u8868\u9762\u76f8\u8fde\u7684\uff0c\u5c31\u50cfa1\u4e0e\u4e0b\u5e95\u9762\u76f8\u8fde\uff0ca2\u4e0ea1\u76f8\u8fde\uff0c\u6240\u4ee5a2\u4e5f\u662f\u548c\u4e0b\u5e95\u9762\u76f8\u8fde\u7684\uff0c~~\u6240\u4ee5\u4e0d\u7528\u7ba1\u5b83\u548c\u54ea\u4e2a\u76f8\u8fde\uff0c\u77e5\u9053\u662f\u8fde\u7740\u7684\u5c31\u5bf9\u4e86~~\n\n\u9644\u4e0a\u559c\u95fb\u4e50\u89c1\u7684AC\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nstruct qwq//\u7ed3\u6784\u4f53\u5b9a\u4e49\u6570\u7ec4\n{\n\tll x;\n\tll y;\n\tll z;\n};\nbool cmp(qwq a,qwq b)//\u81ea\u5b9a\u4e49\u7ed3\u6784\u4f53sort\u6392\u5e8f\n{\n\tif(a.z!=b.z) return a.z<b.z;//\u4e00\u5b9a\u8bb0\u5f97\u4ee5\u9ad8\u77ee\u4f18\u5148\n\tif(a.x!=b.x) return a.x<b.x;\n\tif(a.y!=b.y) return a.y<b.y;\n}\nll dist(ll x1,ll y1,ll z1,ll x2,ll y2,ll z2)\n{\n\treturn (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)+(z1-z2)*(z1-z2);\n}\nll t,n,h,r,s,flag;\nqwq tree[1010],g[1010];\nint main()\n{\n\tscanf(\"%lld\",&t);\n\tfor(int c=1;c<=t;c++)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&n,&h,&r);\n\t\ts=0;\n\t\tflag=0;\n\t\tmemset(tree,0,sizeof(tree));//\u4ee5\u4e0a\u662f\u521d\u59cb\u5316\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tscanf(\"%lld%lld%lld\",&g[i].x,&g[i].y,&g[i].z);\n\t\tsort(g+1,g+1+n,cmp);//\u6392\u5e8f\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tflag=0;\n\t\t\tif(g[i].z-r<=0)//\u5982\u679c\u4e0e\u4e0b\u5e95\u9762\u76f8\u8fde\u5c31\u76f4\u63a5\u5b58\u5165\u6570\u7ec4\n\t\t\t{\n\t\t\t\ts++;\n\t\t\t\ttree[s].x=g[i].x;\n\t\t\t\ttree[s].y=g[i].y;\n\t\t\t\ttree[s].z=g[i].z;\n\t\t\t}\n\t\t\tfor(int j=1;j<=s;j++)\n\t\t\t\tif(dist(g[i].x,g[i].y,g[i].z,tree[j].x,tree[j].y,tree[j].z)<=4*r*r)//\u5224\u65ad\u662f\u5426\u76f8\u5207\u6216\u76f8\u4ea4\n\t\t\t\t{\n\t\t\t\t\ts++;\n\t\t\t\t\ttree[s].x=g[i].x;\n\t\t\t\t\ttree[s].y=g[i].y;\n\t\t\t\t\ttree[s].z=g[i].z;\n\t\t\t\t\tbreak;//\u53ea\u8981\u6709\u4e00\u4e2a\u4e0e\u5176\u76f8\u8fde\uff0c\u5c31\u9000\u51fa\u5faa\u73af\n\t\t\t\t}\n\t\t\tif(tree[s].z+r>=h)//\u5224\u65ad\u662f\u5426\u4e0e\u4e0a\u9876\u9762\u76f8\u8fde\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag)\n\t\t\tprintf(\"Yes\\n\");\n\t\telse\n\t\t\tprintf(\"No\\n\");\n\t}\n\treturn 0;\n}\n```\n\u5982\u679c\u54ea\u91cc\u505a\u7684\u4e0d\u5bf9\uff0c\u8bf7\u5404\u4f4d\u5927\u4f6c\u5e2e\u5fd9\u6307\u51fa\uff0c\u5341\u5206\u611f\u8c22",
        "postTime": 1572758642,
        "uid": 183235,
        "name": "Islauso",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u542c\u8bf4\u5e76\u67e5\u96c6\u4f1a\u88ab\u5361\u5e38\uff1f\n\n\u542c\u8bf4\u6211\u7684\u5e76\u67e5\u96c6\u8fc7\u4e86\uff1f\n\n\u4e3a\u4ec0\u4e48\u5927\u5bb6\u7528\u7684\u90fd\u662f\u6df1\u641cbfs\n\n\u53ea\u6709\u6211\u4e00\u4e2a\u4eba\u5728\u8003\u573a\u4e0a\u60f3\u5230\u4e86\u9b3c\u755c\u7684\u505a\u6cd5\u5417\uff1f\n\n\u5b9e\u9645\u4e0a\u601d\u8def\u611f\u89c9\u548c\u4f17\u4f4d\u795e\u7287\u7684\u601d\u8def\u5927\u4f53\u4e0a\u662f\u5dee\u4e0d\u4e86\u591a\u5c11\u7684\uff0c\u4e0d\u8fc7\u63d0\u4f9b\u4e00\u79cd\u66f4\u52a0\u9b3c\u755c\u7684\u5b9e\u73b0\u65b9\u6cd5------\u9884\u5904\u7406+\u679a\u4e3e\uff08\u5b98\u65b9\u5df2A\uff09\n\n\u5e9f\u8bdd\u4e0d\u591a\u626f\u4e86\u3002\n\n\n\u7ed9\u51fa\u601d\u8003\u8fc7\u7a0b\uff1a\n\n\u9898\u76ee\u5927\u610f\uff1a\n\n\u4e09\u7ef4\u7a7a\u95f4\uff0c\u7ed9\u51fa\u6bcf\u4e00\u4e2a\u7a7a\u6d1e\u7684\u534a\u5f84\uff0c\u5c0f\u8001\u9f20\u60f3\u4ece\u6700\u4e0b\u9762\u8dd1\u5230\u6700\u4e0a\u9762\uff0c\u8be2\u95ee\u80fd\u5426\u8dd1\u5230\u3002\n\n\n\u601d\u8003\u4e00\u4e0b\uff1a\n\n\u80fd\u5426\u7528\u4e0b\u9762\u7684\u72b6\u6001\u8dd1\u5230\u4e0a\u9762\u7684\u72b6\u6001\uff0c\u4ece\u800c\u4e00\u5c42\u5c42\u72b6\u6001\u63a8\u4e0a\u53bb\uff1f\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u80fd\u5230\u540c\u65f6\u5230\u8fbe\u6700\u4e0a\u65b9\u548c\u6700\u4e0b\u65b9\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u5426\u5c31\u80fd\u8ba4\u4e3a\u8fd9\u7ec4\u6570\u636e\u662f\u53ef\u4ee5YES\u7684\uff1f\n\n\u5b9e\u73b0\u601d\u8def\uff1a\u641e\u4e00\u4e2a\u6570\u7ec4\u5b58\u80fd\u5426\u5230\u8fbe\u6700\u4e0b\u9762\uff0c\u518d\u6765\u4e00\u4e2a\u6570\u7ec4\u5b58\u80fd\u5426\u5230\u8fbe\u6700\u4e0a\u9762\n\n\u90a3\u4e48\u8be5\u5982\u4f55\u5b8c\u7f8e\u5b9e\u73b0\uff1f\u5982\u679c\u51fa\u9898\u4eba\u5361\u4f60\u8fd9\u79cdxx\u7b97\u6cd5\u600e\u4e48\u529e\uff08\u81ea\u884cYY\u6570\u636e\uff09\uff0c\u5f97\u51fa\u7ed3\u8bba\uff1a\u51fa\u9898\u4eba\u4e0d\u4f1a\u8ba9\u4f60\u5f00\u5f00\u5fc3\u5fc3\u7684AC\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u4f1a\u8ba9\u4f60\u7b97\u6cd5\u76f4\u63a5\u8fc7\uff0c\u90a3\u4e48\u6392\u4e00\u904d\u5e8f\u4fdd\u8bc1\u5355\u8c03\u6027\u554a\uff01\uff08\u62cd\u5927\u817f\uff09\n\n\u800c\u4e14\u5f53\u524d\u80fd\u5230\u8fbe\u7684\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684\u4e00\u5b9a\u4e0d\u4f1a\u8003\u8651\u7b2c\u4e8c\u904d\uff0c\u65e0\u9700\u518d\u6765\u4e00\u6b21\n\n\n\u5224\u65ad\u4e24\u4e2a\u70b9\u80fd\u8dd1\u5230\u5373\n\n\n      dis(x,y,z,x1,y1,z1) <= 2 \\* r\n\n\u9644\u4e0a\u8003\u573aA\u6389\u8fd9\u9898\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 1010;\nlong long int n,h,r;\ndouble dis[MAXN][MAXN];\nbool pd[MAXN][3],flagx,flagy;\nstruct node\n{\n    long long int x,y,z;\n}point_[MAXN];\nbool comp(const node a,const node b)\n{\n    return a.z < b.z;\n}\nvoid init()//\u9884\u5904\u7406\u90e8\u5206\n{\n    scanf(\"%lld%lld%lld\",&n,&h,&r);//\u6ce8\u610f\u7c7b\u578b\u95ee\u9898\uff0c\u8003\u8bd5\u7684\u65f6\u5019\u5728\u68c0\u67e5\u7684\u65f6\u5019\u5bdf\u89c9\u5230\u4e86\u8fd9\u4e00\u70b9\u907f\u514d\u88ab\u5751\u6389\u4e86\n    for (int i=1;i<=n;i++)\n            scanf(\"%lld%lld%lld\",&point_[i].x,&point_[i].y,&point_[i].z);\n    sort(point_ + 1,point_ + n + 1 , comp);\n        ///\u6ce8\u610f\u8fd9\u91cc\u6392\u5e8f\u7684\u4f4d\u7f6e\u4e0d\u80fd\u9519\uff0c\u4e0d\u7136\u5c31\u5f88\u5bb9\u6613GG\uff01\uff01\uff01\uff01\n    for (int i=1;i<=n;i++)\n    {\n        if(point_[i].z <= r)//\u5148\u628a\u80fd\u5230\u6700\u4e0a\u9762\u548c\u80fd\u5230\u6700\u4e0b\u9762\u7684\u9884\u5904\u7406\u51fa\u6765\n            pd[i][1] = 1,flagx = 1;\n        if(point_[i].z + r >= h)\n            pd[i][2] = 1,flagy = 1;\n    }\n    for (int i=1;i<=n;i++)\n        for (int j=i;j<=n;j++)\n        {\n            dis[j][i] = dis[i][j] = (double) (sqrt( (point_[i].x - point_[j].x)  *  (point_[i].x - point_[j].x)  + (point_[i].y - point_[j].y) * (point_[i].y - point_[j].y) +  (point_[i].z - point_[j].z) * (point_[i].z - point_[j].z) ) );\n        }\n    return;\n}\nvoid work()\n{\n    double maxs = 2 * r;//\u5982\u679c2 * r \u4f60\u8fd8\u5230\u4e0d\u4e86\u90a3\u5c31\u5f88\u9057\u61be\u4e86\n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=n;j++)//\u679a\u4e3e\u8303\u56f4\uff08\u6572\u9ed1\u677f\uff01\uff01\uff01\u91cd\u70b9\uff01\uff01\uff01\uff09\n        {\n            if(i == j)//\u81ea\u5df1\u548c\u81ea\u5df1\u5c31\u4e0d\u6d6a\u8d39\u65f6\u95f4\u4e86\n                continue;\n            if(pd[i][1] == 1 && dis[i][j] <=maxs)//\u72b6\u6001\u8f6c\u79fb\uff0c\u4e0d\u7ba1\u4f60\u80fd\u4e0d\u80fd\u5230\u6211\u90fd\u8981\u628a\u4f60\u5df4\u62c9\u62c9\u53d8\u80fd\u5230\n                pd[j][1] = 1;\n            if(pd[i][2] == 1 && dis[i][j] <=maxs)//\u72b6\u6001\u8f6c\u79fb\uff0c\u4e0d\u7ba1\u4f60\u80fd\u4e0d\u80fd\u5230\u6211\u90fd\u8981\u628a\u4f60\u5df4\u62c9\u62c9\u53d8\u80fd\u5230\n                pd[j][2] = 1;\n        }\n    for (int i=1;i<=n;i++)\n        if(pd[i][1] == 1 && pd[i][2] == 1)//\u6709\u4e00\u4e2a\u70b9\u65e2\u80fd\u5230\u4e0a\u9762\u53c8\u80fd\u5230\u4e0b\u9762\u5c31\u4e0d\u8dd1\u8fa3\u3002\n        {\n            printf(\"Yes\\n\");\n            return;\n        }\n    printf(\"No\\n\");\n    return;\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t --)\n    {\n        init();\n        if(flagx == 0 || flagy == 0)//\u6ca1\u6709\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5230\u4e0a\u9762\u6216\u8005\u6ca1\u6709\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5230\u4e0b\u9762\uff08\u798f\u5229\u6570\u636e\uff09\uff0c\u76f4\u63a5\u4e0d\u8dd1\u4e86\uff0c\u4f60\u4e0d\u80fd\u8d70\u3002\n            printf(\"No\\n\");\n        else\n            work();\n        flagx = 0;\n        flagy = 0;\n        memset(pd,0,sizeof(pd));\n        memset(dis,0,sizeof(dis));\n        memset(point_,0,sizeof(point_));//\u6ca1\u6e05\u96f6\u4f60\u5c31\u7b49\u7740\u8d5b\u540e\u54ed\u5427\n    }\n    return 0;\n}\n```",
        "postTime": 1511322418,
        "uid": 44468,
        "name": "z2415445508",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u672c\u9898\u6211\u4e0d\u662f\u7528\u5e76\u67e5\u96c6\u505a\u7684\uff0c\u8003\u573a\u4e0a\u4e5f\u4e0d\u662f\uff0c\u4f7f\u7528bfs\u7684\u3002\u96be\u4ee5\u76f8\u4fe1\u6211\u8003\u573a\u4e0a\u7684\u4ee3\u7801\u7adf\u7136\u80fdAC\u3002\u6240\u4ee5\u8fd9\u91cc\u5c31\u5199\u4e00\u5199bfs\u7684\u9898\u89e3\uff08\u4ee3\u7801\u662f\u6211\u5728\u8003\u573a\u4e0a\u6253\u7684\u2026\u2026\uff09\n\n\u5176\u5b9e\uff0c\u5927\u591a\u6570\u4eba\u770b\u5230\u8fd9\u4e00\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\u5c31\u5e94\u8be5\u662f\u641c\u7d22\u3002\u518d\u770b\u6570\u636e\u8303\u56f4\uff0cn^2\\*20\u5e76\u4e0d\u4f1a\u8d85\u65f6\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u653e\u5fc3\u5730\u6253\u641c\u7d22\u4e86\u3002\u8fd9\u9898\u6709\u4e24\u4e2a\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\u4e00\u662f\u53ef\u4ee5\u5148\u9884\u5904\u7406\u6240\u6709\u7a7a\u6d1e\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5373\u662f\u5426\u80fd\u5230\u8fbe\uff0c\u7136\u540e\u7528\u94fe\u8868\u5b58\u50a8\uff0c\u4ee5\u514d\u641c\u7d22\u65f6\u641c\u5230\u4e0d\u53ef\u80fd\u5230\u8fbe\u7684\u70b9\uff0c\u8282\u7701\u65f6\u95f4\uff0c\u5c5e\u4e8e\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1b\u4e8c\u662f\u6ce8\u610f\u6570\u636e\u8303\u56f4\uff0c\u7531\u4e8ex\u3001y\u3001z\u662f\u5c0f\u4e8e\u7b49\u4e8e1e9\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u7b97\u51fa\u7528int\u4f1a\u7206\uff0c\u800clong long\u8db3\u591f\u3002\u6240\u4ee5\u4e0d\u8981\u5fd8\u8bb0\u5f00long long\u3002\n\n\u7136\u540e\uff0c\u5176\u5b9e\u5c31\u8ddf\u666e\u901a\u641c\u7d22\u5dee\u4e0d\u591a\u4e86\u3002\u5c06\u6240\u6709\u53ef\u4ee5\u4ece\u5e95\u9762\u8fdb\u5165\u7684\u6d1e\u63a8\u5165\u961f\u5217\uff08\u5373z<=r\uff09\uff0c\u4e00\u65e6\u641c\u5230\u53ef\u4ee5\u5230\u8fbe\u4e0a\u9762\uff08\u5373h-z<=r\uff09\uff0c\u5c31\u662f\u53ef\u4ee5\u8dd1\u5230\u4e0a\u9762\u53bb\u7684\u3002\u53e6\u5916\uff0c\u6ce8\u610f\u4e0d\u8981\u91cd\u590d\u8d70\u5230\u540c\u4e00\u4e2a\u6d1e\uff0c\u6b64\u9898\u5c31\u53ef\u4ee5AC\u4e86\u3002\n\n\u4e0b\u4e3a\u4ee3\u7801\uff08\u6709\u4e9b\u7d2f\u8d58\uff0c\u8bf7\u5927\u795e\u6307\u6559\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<queue>\nusing namespace std;\nint shu,ch;\nbool tf;\nint dy()//\u8bfb\u5165\u4f18\u5316\uff0c\u8bb0\u5f97\u8981\u5224\u65ad\u8d1f\u6570\n{\n    shu=ch=0,tf=true;\n    while(ch<'0'||ch>'9')tf=ch=='-'?false:true,ch=getchar();\n    while(ch>='0'&&ch<='9')shu=shu*10+ch-'0',ch=getchar();\n    return tf?shu:-shu;\n}\nstruct POS//\u5b58\u50a8\u8f93\u5165\u7684\u70b9\u7684\u5750\u6807\n{\n    int x,y,z;\n}pos[2000];\nqueue<int>bfs;//bfs\u6240\u7528\u7684\u961f\u5217\nint lc;\nbool visit[2000];//\u662f\u5426\u6709\u5230\u8fbe\u8fc7\u8fd9\u4e2a\u70b9\nstruct Edge//\u94fe\u8868\uff0c\u6211\u662f\u6a21\u4eff\u94fe\u5f0f\u524d\u5411\u661f\u6765\u5199\u7684\n{\n    int t;\n    int nexty;\n}edge[3000000];\nint head[2000];\nlong long pf(int a)//\u5e73\u65b9\uff0c\u6ce8\u610f\u8981int\u8f6clong long\n{\n    return ((long long)a)*((long long)a);\n}\nlong long dis(int a,int b)//\u7b97\u51fa\u8ddd\u79bb\u7684\u5e73\u65b9\n{\n    return pf(pos[a].x-pos[b].x)+pf(pos[a].y-pos[b].y)+pf(pos[a].z-pos[b].z);\n}\nint cnt;\nvoid add(int a,int b)//\u94fe\u8868\u52a0\u8fb9\n{\n    cnt++;\n    edge[cnt].t=b;\n    edge[cnt].nexty=head[a];\n    head[a]=cnt;\n}\nint main()\n{\n    freopen(\"cheese.in\",\"r\",stdin);\n    freopen(\"cheese.out\",\"w\",stdout);//\u6ce8\u91ca\u6389\n    int t=dy();\n    int n,h,r;\n    bool tf;\n    while(t--)\n    {\n        n=dy(),h=dy(),r=dy();\n        for(int i=0;i<n;i++)\n        {\n            pos[i].x=dy();\n            pos[i].y=dy();\n            pos[i].z=dy();\n        }\n        while(!bfs.empty())bfs.pop();\n        for(int i=0;i<n;i++)visit[i]=false,head[i]=0;\n        cnt=0;//\u521d\u59cb\u5316\n        for(int i=0;i<n;i++)\n        {\n            for(int j=i+1;j<n;j++)\n            {\n                if(dis(i,j)<=4*pf(r))//\u5982\u679c\u4e24\u5706\u5fc3\u8ddd\u79bb\u5c0f\u4e8e2r\uff08\u8fd9\u91cc\u662f\u5e73\u65b9\u5f62\u5f0f\uff0c\u6240\u4ee5\u53d8\u62104*r^2\uff09\uff0c\u5219\u5b83\u4eec\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\n                {\n                    add(i,j);\n                    add(j,i);//\u4e92\u76f8\u52a0\u8fb9\n                }\n            }\n        }\n        tf=false;//tf\u5373\u662f\u5426\u53ef\u4ee5\u5230\u8fbe\u4e0a\u9762\n        for(int i=0;i<n&&!tf;i++)\n        {\n            if(pos[i].z<=r)//\u5982\u679c\u53ef\u4ee5\u4ece\u5e95\u5c42\u8fdb\u5165\n            {\n                bfs.push(i);\n                visit[i]=true;//\u8bb0\u5f97\u6253\u4e0avisit\n                if(h-pos[i].z<=r)tf=true;//\u5982\u679c\u5df2\u7ecf\u53ef\u4ee5\u8d70\u5230\u4e0a\u5c42\uff0c\u5219\u76f4\u63a5\u8df3\u51fa\n            }\n        }\n        while(!tf&&!bfs.empty())//bfs\u5f00\u59cb\n        {\n            lc=bfs.front();\n            bfs.pop();\n            for(int i=head[lc];i!=0&&!tf;i=edge[i].nexty)//\u904d\u5386\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\n            {\n                if(!visit[edge[i].t])//\u5982\u679c\u6ca1\u6709\u5230\u8fbe\u8fc7\n                {\n                    bfs.push(edge[i].t);\n                    visit[edge[i].t]=true;\n                    if(h-pos[edge[i].t].z<=r)tf=true;//\u5982\u679c\u5df2\u7ecf\u5230\u8fbe\u4e0a\u9762\uff0c\u5219\u8df3\u51fa\n                }\n            }\n        }\n        if(tf)printf(\"Yes\\n\");\n        else printf(\"No\\n\");//\u5224\u65ad\u8f93\u51faYes\u8fd8\u662fNo\n    }\n    fclose(stdin);\n    fclose(stdout);//\u6ce8\u91ca\u6389\n    return 0;\n}\n```",
        "postTime": 1510747918,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "**\u611f\u89c9\u4f60\u4eec\u7684\u4ee3\u7801\u90fd\u633a\u957f\u7684**\n\n~~\u4e00\u8d77\u6765\u611f\u53d7\u538b\u884c\u7684\u4e50\u8da3\u5427~~\n\n\u56de\u5230\u6b63\u9898\uff0c\u770b\u5b8c\u8fd9\u9053\u9898\u7acb\u9a6c\u60f3\u5230\u4e86\u641c\u7d22\n\n\u4f46\u662f\u5bf9\u7740\u6570\u636e\u8303\u56f4\u7591\u60d1\u4e86\u4e00\u4e0b\u3002\n\n\u540e\u6765\u53d1\u73b0\u4e0d\u7528\u62c5\u5fc3\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u8fd9\u9053\u9898\u641c\u7d22\u7279\u522b\u5feb\n\n\u5173\u952e\u662f\u641c\u7684\u65b9\u6cd5\u8981\u6b63\u786e\u3002\u9996\u5148\u8981\u60f3\u53bb\u5976\u916a\u4e0a\u9762\uff0c\u5148\u8981\u6709\u4e00\u4e2a\u5165\u53e3\uff0c\u4e5f\u5c31\u662f\u6770\u745e\u7684\u8d77\u70b9\u3002\u5982\u4f55\u786e\u5b9a\u8d77\u70b9\u5462\uff1f\n\n\u5f88\u7b80\u5355\u53ea\u8981\u67d0\u4e2a\u70b9\u9ad8\u5ea6\u51cf\u53bb\u534a\u5f84\u5c0f\u4e8e\u7b49\u4e8e0\u5c31\u597d\n\n\u786e\u5b9a\u4e86\u8d77\u70b9\u4ee5\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u641c\u4e86\u3002\n\n```cpp\nvoid search(int q){\n    if(z[q]+r>=h) { pd=1; return ;}\n    vis[q]=1;\n    for(int i=1;i<=n;i++){\n        if(!vis[i] and dis(q,i)<=2*r) search(i);\n    }\n}\n```\n\u53ea\u8981\u548c\u8fd9\u4e2a\u6d1e\u6328\u7740\u7684\u6d1e\uff0c\u6211\u4eec\u90fd\u8981\u53bb\u4e00\u904d\u3002\u800c\u4e14\u5b9e\u9645\u4e0a\u6bcf\u4e2a\u6d1e\u6211\u4eec\u53ea\u9700\u8981\u53bb\u4e00\u904d\u3002\u6240\u4ee5\u8fd9\u91cc\u7684vis\u6570\u7ec4\u8bb0\u5f55\u4e86\u54ea\u4e9b\u6d1e\u53bb\u8fc7\n\u5f53\u6211\u4eec\u53d1\u73b0\u5230\u8fbe\u9876\u90e8\u65f6\u5c31\u53ef\u4ee5\u8fd4\u56de\n\n\u90a3\u4e48\u5982\u679c\u5230\u4e0d\u4e86\u5462\uff1f\n\n\u5230\u4e0d\u4e86\u8fd8\u6709\u5176\u4ed6\u6ca1\u641c\u8fc7\u7684\u70b9\u554a\n\n\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u627e\u627e\u8fd8\u6709\u6ca1\u6709\u5176\u4ed6\u5165\u53e3\n\n\u5982\u679c\u771f\u7684\u90fd\u641c\u5b8c\u4e86\uff0c\u90a3\u5c31\u53ea\u80fd\u8f93\u51faNo\u5566\n\n\u6700\u540e\u4e00\u70b9\uff0c\u8fd9\u9053\u9898\u6709\u591a\u6b21\u8be2\u95ee\uff0c\u6240\u4ee5\u522b\u5fd8\u4e86\u521d\u59cb\u5316\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint t,n,pd=0,vis[1005];\nlong long x[1005],y[1005],z[1005],h,r;\ndouble dis(int a,int b){\n    double x1=(double)x[a],y1=(double)y[a],z1=(double)z[a];\n    double x2=(double)x[b],y2=(double)y[b],z2=(double)z[b];\n    return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)+(z1-z2)*(z1-z2));\n}\nvoid search(int q){\n    if(z[q]+r>=h) { pd=1; return ;}\n    vis[q]=1;\n    for(int i=1;i<=n;i++){\n        if(!vis[i] and dis(q,i)<=2*r) search(i);\n    }\n}\nint main(){\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++){\n        memset(x,-1,sizeof x); memset(y,-1,sizeof y);\n        memset(z,-1,sizeof z); memset(vis,0,sizeof vis);\n        scanf(\"%d%lld%lld\",&n,&h,&r);\n        for(int i=1;i<=n;i++){\n            scanf(\"%lld%lld%lld\",&x[i],&y[i],&z[i]);\n        }\n        for(int i=1;i<=n;i++){\n            if(!vis[i] and z[i]-r<=0) search(i);\n            if(pd==1){ cout<<\"Yes\"<<endl; break;}\n        }\n        if(pd==0) cout<<\"No\"<<endl; pd=0;\n    }\n}\n```",
        "postTime": 1531050852,
        "uid": 52210,
        "name": "DR\u5b89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u8bfb\u5165\u6240\u6709\u7684\u70b9\uff0c\u6309z\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7531\u6b64\u5f97\u5230\u4ece\u4f4e\u5230\u9ad8\u7684\u5e8f\u5217\u3002\n\n\u5982\u679c\u6700\u4f4e\u7684\u7403\u4e0e\u5e95\u9762\u76f8\u79bb\uff0c\u6216\u662f\u6700\u9ad8\u7684\u7403\u4e0e\u9876\u9762\u76f8\u79bb\uff0c\u76f4\u63a5No\uff0c\u4e0b\u4e00\u7ec4\u3002\n\n\u5426\u5219\u8fdb\u884c\u9884\u5904\u7406\uff0c\u4e8c\u7ef4\u6570\u7ec4e[i][j]\u8bb0\u5f55i\u4e0ej\u4e4b\u95f4\u662f\u5426\u6709\u8def\u3002\n\n\u8fd9\u91cc\u6211\u4e0d\u592a\u4e00\u6837\u7684\u601d\u60f3\u662f\uff0c\u75280\u548cn+1\u8868\u793a\u300c\u8d85\u7ea7\u6e90\u70b9\u300d\u4e0e\u300c\u8d85\u7ea7\u6c47\u70b9\u300d\u3002\n\n\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u8fd9\u4e2a\u7403\u5230\u5e95\u9762\u6709\u8def\uff0c\u5c31\u5c06\u5b83\u4e0e0\u70b9\u8fde\u8d77\u6765\uff1b\u6216\u8005\u5982\u679c\u8fd9\u4e2a\u7403\u5230\u9876\u9762\u6709\u8def\uff0c\u5c31\u5c06\u5b83\u4e0en+1\u70b9\u8fde\u8d77\u6765\u3002\n\n\u8fd9\u6837\u6211\u4eec\u8dd1BFS\u7684\u65f6\u5019\u76f4\u63a5\u4ee50\u4e3a\u8d77\u70b9\uff0c\u641c\u5230n+1\u6216\u8005\u961f\u5217\u7a7a\u4e86\u5c31\u9000\u51fa\u3002\n\n\u6700\u7ec8\u5224\u65adn+1\u662f\u5426\u88ab\u8bbf\u95ee\uff0c\u662f\u5219Yes\uff0c\u5426\u5219No\u3002\n\n\u8bb0\u5f97double\u548c\u521d\u59cb\u5316\u3002\n\n```cpp\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int MAXN=1010;\nbool vis[MAXN],e[MAXN][MAXN];\ndouble h,r;\nint T,n;\nstruct ball\n{\n    double x,y,z;\n    bool operator <(const ball &rhs) const\n    {\n        return z<rhs.z;\n    }\n}s[MAXN];\ndouble dis(ball a,ball b)\n{\n    double t1=a.x-b.x,t2=a.y-b.y,t3=a.z-b.z;\n    return sqrt(t1*t1+t2*t2+t3*t3);\n}\nvoid Init()\n{\n    memset(vis,0,sizeof vis);\n    memset(e,0,sizeof e);\n    for(int i=1;i<=n;++i)\n    {\n        if(s[i].z-r<=0)\n            e[0][i]=e[i][0]=1;\n        if(s[i].z+r>=h)\n            e[n+1][i]=e[i][n+1]=1;\n    }\n    for(int i=1;i<n;++i)\n        for(int j=i+1;j<=n;++j)\n            e[i][j]=e[j][i]=dis(s[i],s[j])<=r*2;\n}\nvoid BFS()\n{\n    queue<int> q;\n    q.push(0);\n    vis[0]=1;\n    while(!vis[n+1] && !q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        for(int i=0;i<=n+1;++i)\n            if(!vis[i] && e[x][i])\n            {\n                q.push(i);\n                vis[i]=1;\n            }\n    }\n}\nint main(int argc,char *argv[])\n{\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        scanf(\"%d %lf %lf\",&n,&h,&r);\n        for(int i=1;i<=n;++i)\n            scanf(\"%lf %lf %lf\",&s[i].x,&s[i].y,&s[i].z);\n        sort(s+1,s+n+1);\n        if(s[1].z-r>0 || s[n].z+r<h)\n        {\n            printf(\"No\\n\");\n            continue;\n        }\n        Init();\n        BFS();\n        printf(vis[n+1]?\"Yes\\n\":\"No\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1512385053,
        "uid": 35851,
        "name": "Capella",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "###\u5148\u628a\u6570\u636e\u6309z\u7684\u5927\u5c0f\u6392\u5e8f\n\n\uff08\u7528\u4e86\u7ed3\u6784\u4f53+sort\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5\uff09\n\n```cpp\nstruct position\n{\n    long long x,y,z;\n}posi[1001];\nbool po(position a,position b)\n{\n    if(a.z<b.z)\n    {\n        return true;\n    }\n    return false;\n}\nsort(posi+1,posi+n+1,po);\n```\n###\u518d\u7528n^2\u5904\u7406\u8ddd\u79bb\u6570\u636e\uff0c\u5224\u65ad\u6bcf\u4e24\u4e2a\u70b9\u662f\u5426\u8054\u901a\n\n```cpp\nbool bo[1001][1001];\nmemset(bo,0,sizeof(bo));\nfor(int i=1;i<=n;i++)\n{\n    for(int k=i+1;k<=n;k++)\n    {\n        bo[i][k]=(((posi[i].x-posi[k].x)*(posi[i].x-posi[k].x)+(posi[i].y-posi[k].y)*(posi[i].y-posi[k].y)+(posi[i].z-posi[k].z)*(posi[i].z-posi[k].z))<=r*r*4);\n    }\n}\n//\u522b\u95ee\u6211\u5199\u4e86\u4ec0\u4e48\u6211\u4e5f\u4e0d\u77e5\u9053\n```\n\uff08k\u4ecei+1\u5f00\u59cb\u8dd1\u7701\u4e86\u4e00\u534a\u65f6\u95f4\u7136\u800c\u5c41\u7528\u6ca1\u6709\uff09\n\n###\u5176\u5b9e\u8fd9\u5c31\u5f62\u6210\u4e86\u4e00\u5f20\u65e0\u5411\u65e0\u6743\u503c\u7684\u56fe,\u6700\u540e\u8dd1\u4e00\u904dn^2\u7684\u6df1\u641c\n\n\u3010\u6211\u65f6\u95f4\u5c31\u591f\u7528\u6211\u6570\u636e\u89c4\u6a21\u5c31\u5c0f\u4f60\u62ff\u6211\u600e\u6837\n\n**\u6ce8\u610f\uff1a**\u6df1\u641c\u53ea\u8dd1z<=r\u7684\uff0c\u4e0d\u7136\u4f1awa\n\n```cpp\nbool bol=true;\nbool dfs(long long nw)\n{\n    bol=false;\n    for(int i=nw+1;i<=n;i++)\n    {\n        if(bo[nw][i])\n        {\n            if(dfs(i))\n            {\n                return true;\n            }\n            bol=true;\n        }\n    }\n    if(!bol)\n    {\n        if(posi[nw].z+r>=h)\n        {\n            boll=true;\n            return true;\n        }\n    }\n    return false;\n}\n```\n\u3010\u65b0\u4eba\u6765\u6d1b\u53e4\u7b2c\u4e00\u5929\uff0c\u6c42dalao\u7f69\n",
        "postTime": 1510492389,
        "uid": 72262,
        "name": "a2600254",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "# \u4e00\u7bc7\u5e76\u67e5\u96c6\u7684\u9898\u89e3qwq\n\n\n------------\n\n\n## \u8bf4\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u4f1a\u60f3\u5230\u5e76\u67e5\u96c6\n\n\u8fd9\u9053\u9898\u7b80\u5316\u4e00\u4e0b\u5c31\u662f\u770b\u80fd\u4e0d\u80fd\u4ece\u4e0b\u8868\u9762\uff08\u53ca\u5176\u4ee5\u4e0b\uff09\u67d0\u4e2a\u5730\u65b9\u80fd\u4e0d\u80fd\u8d70\u5230\u4e0a\u8868\u9762\uff08\u53ca\u5176\u4ee5\u4e0a\uff09\u67d0\u4e2a\u5730\u65b9\n\n\u5bb9\u6613\u60f3\u5230$\\quad$\u5728\u80fd\u76f8\u4e92\u5230\u8fbe\u7684\u4e24\u4e2a\u70b9\uff08\u6d1e\u7684\u7403\u5fc3\uff09\u4e4b\u95f4\u8fde\u8fb9\n\n\u7136\u540e\u770b\u6709\u6ca1\u6709\u4e00\u6761\u4ece\u4e00\u4e2a\u4e0e\u5e95\u9762\u76f8\u8fde\u7684\u6d1e\u5f00\u59cb\u7684\u80fd\u5230\u4e0a\u8868\u9762\uff08\u6216\u5176\u4ee5\u4e0a\uff09\u8def\u5f84\n\n\uff08\u5ffd\u7565\u6389\u62ec\u53f7\u91cc\u7684\u8bdd\u6216\u8bb8\u770b\u8d77\u6765\u66f4\u8212\u670d\uff1f\uff09\n\n------------\n\n\u518d\u6765\u5eb7\u4e00\u5eb7\u8fd9\u4e9b\u8fb9\n\n\u5b83\u4eec\u53ea\u662f\u7528\u6765**\u7ef4\u62a4\u8fde\u901a\u6027**\u7684\n\n\u90a3\u4e48\u663e\u7136 \u76f4\u63a5\u7528\u5e76\u67e5\u96c6\u4f1a\u65b9\u4fbf\u5f88\u591a\n\n\n------------\n\n## \u5b9e\u73b0\u65f6\u7684\u4e00\u4e9b~~\u5947\u6280\u6deb\u5de7~~\u5c0f\u6280\u5de7\n\n\u9996\u5148\u663e\u7136\u8981\u628a\u80fd\u76f8\u4e92\u901a\u8fbe\u7684\u6d1e\u7ef4\u62a4\u4e00\u4e0b\n\n\u7136\u540e\n\n\u6211\u4eec\u9614\u4ee5\u52a0\u4e24\u4e2a\u70b9\u5206\u522b\u6765\u8868\u793a\u4e0a\u4e0b\u8868\u9762\n\n\u5373$n+1$\u6765\u8868\u793a\u4e0b\u8868\u9762\uff0c$n+2$\u6765\u8868\u793a\u4e0a\u8868\u9762\n\n\u7136\u540e~~\u80e1\u4e71~~\u7ef4\u62a4\u4e00\u4e0b\uff08\u8be6\u7ec6\u89c1\u4ee3\u7801\uff09\n\n\u6700\u540e\u67e5\u8be2$n+1$\u53f7\u70b9\u4e0e$n+2$\u53f7\u70b9\u662f\u5426\u8054\u901a\u5c31OK\u4e86qwq\n\n~~(\u4e00\u76f4\u67e5\u8be2\u4e00\u76f4\u723d~~\n\n\n------------\n\n## \u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282qwq\n\n- \u4e24\u4e2a\u6d1e\u76f8\u5207\u4e5f\u7b97\u8054\u901a\n\n- \u5e76\u67e5\u96c6\u4e00\u5b9a\u8981\u521d\u59cb\u5316\n\n- \u591a\u6d4b\u4e5f\u8981\u7559\u610f\u521d\u59cb\u5316\u7684\u95ee\u9898\n\n- \u51fa\u73b0\u51e0\u4e2a\u6570\u76f8\u4e58\u7684\u60c5\u51b5\u8981\u591a\u52a0\u5c0f\u5fc3\uff0c\u53ef\u80fd\u4f1a\u7206$int$\n\n\n\n------------\n\n### \u9644\u4e0a\u4ee3\u7801\u4f9b\u5927\u4f6c\u4eec\u53c2\u8003$qwqwq$\n\n\n------------\n\n\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n\nusing namespace std;\n\ninline int read() {\n    int op = 1, a = 0; char c = getchar();\n    for (; c < '0' || c > '9'; c = getchar()) if (c == '-') op = -1;\n    for (; c >= '0' && c <= '9'; c = getchar()) a = a * 10 + c - '0';\n    return op * a;\n}\n\nconst int maxn = 1003;\nint T, n, h, r;\nstruct Point {int x, y, z;} poi[maxn];\nstruct DisjointSetUnion {\n    int fa[maxn];\n    void init(int _top) {for (int i = 1; i <= _top; i++) fa[i] = i;}//\u521d\u59cb\u5316\n    int find(int u) {return (fa[u] == u) ? u : fa[u] = find(fa[u]);}\n    void merge(int u, int v) {fa[find(u)] = find(v);}\n} DSU;\n\nint main() {\n    T = read();\n    for (; T; T--) {\n        n = read(), h = read(), r = read(); long double d = r << 1; //d \u4e3a\u76f4\u5f84\uff0cr \u4e3a\u534a\u5f84\n        for (int i = 1; i <= n; i++) poi[i].x = read(), poi[i].y = read(), poi[i].z = read();\n        DSU.init(n + 2); //\u521d\u59cb\u5316\n        //\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u80fd\u76f8\u4e92\u5230\u8fbe\u7684\u6d1e\n        for (int i = 1; i <= n; i++)\n            for (int j = i + 1; j <= n; j++) {\n                if (DSU.find(i) == DSU.find(j)) continue;\n                int xx = poi[i].x - poi[j].x, yy = poi[i].y - poi[j].y, zz = poi[i].z - poi[j].z;\n                double tmp = sqrt(1ll * xx * xx + 1ll * yy * yy + 1ll * zz * zz);\n                // long double tmp = sqrtl(1ll * xx * xx + 1ll * yy * yy + 1ll * zz * zz);\n                    //\u6015\u7cbe\u5ea6\u4e0d\u591f\u9614\u4ee5\u7528\u8fd9\u4e00\u884c\n                if (tmp <= d) DSU.merge(i, j);\n            }\n        //\u518d\u6765\u7ef4\u62a4\u4e00\u4e0b\u8fd9\u4e9b\u6d1e\u4e0e\u4e0a\u4e0b\u8868\u9762\u7684\u8fde\u901a\u6027\n        for (int i = 1; i <= n; i++) {\n            if (poi[i].z <= r) DSU.merge(i, n + 1);\n            if (poi[i].z + r >= h) DSU.merge(i, n + 2);\n        }\n        if (DSU.find(n + 1) == DSU.find(n + 2)) puts(\"Yes\");\n        else puts(\"No\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1569324135,
        "uid": 162865,
        "name": "NxtEcho",
        "ccfLevel": 0,
        "title": "P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u2014\u2014\u2014\u2014\u4eca\u5929\u6559\u7ec3\u7ed9\u8003\u539f\u9898\u54e9\uff0c\u5e78\u8fd0\u7684AC\u4e86\uff08\u867d\u7136\u534a\u5e74\u524d\u505a\u8fc7\u4e00\u6b21\uff09\uff0c\u53d1\u4e00\u6ce2\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n\n------------\n\u8fd9\u4e2a\u9898\u561b\uff0c\u4e00\u822c\u6709\u6570\u7ec4\u548c\u7ed3\u6784\u4f53\u4e24\u79cd\u505a\u6cd5\uff0c\u5f85\u4f1a\u4e3b\u8981\u8bb2\u4e00\u4e0b\u6570\u7ec4\uff0c\u7ed3\u6784\u4f53\u540c\u7406\u5c31\u884c\u3002\u6715\u534a\u5e74\u524d\u624d\u5165\u5751\uff0c\u8fd8\u4ee5\u4e3a\u662f\u8d2a\u5fc3\uff0c\u5f04\u4e86\u534a\u5929\u4e5f\u6ca1\u51fa\u6765\uff0c\u539f\u6765\u662f\u4e2a\u73b0\u5728\u770b\u6765\u8d85\u7b80\u5355\u7684\u6df1\u641c\uff01\uff08Q A Q\uff09\u4f24\u5fc3ing\u2026\u2026\n\n\u4e0b\u9762\u4e3b\u8981\u8bf4\u51e0\u4e2a\u5bb9\u6613\u51fa\u9519\u7684\u70b9\uff08~~\u597d\u5751\u7684\u6570\u636e\u8303\u56f4~~\uff09\uff1a\n### \u6570\u7ec4\u578b\n```c\n/*NOIp Day2T1*/\n/*\u57cb\u00b7\u5b66\u795e Buff\uff1a\u667a\u529b++*/ \n#include<bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define il inline\n\n\nll x[1005], y[1005], z[1005];//\u8868\u793a\u70b9\u7684\u5750\u6807 \nbool vis[1005], fnd;\nll h, r;//\u8fd9\u91cc\u4e5f\u662flong long \nint T, n;\n\n\nil ll dist(int a, int b)  {\n  return (x[a]-x[b])*(x[a]-x[b]) + (y[a]-y[b])*(y[a]-y[b]) + (z[a]-z[b])*(z[a]-z[b]);\n}//\u6ce8\u610f\uff0c\u8fd9\u4e2a\u662f\u8ddd\u79bb\u7684\u5e73\u65b9\uff0c\u6240\u4ee5\u5728 26\u6392\u7528\u7684(2r)*(2r) \uff08\u8981\u5f00long long\uff09 \n\n\nil void dfs(int x)  {\n  if(z[x] >= h-r)  {\n  \tfnd = true;\n\treturn;\n  }//\u5224\u65ad\u4e00\u4e0b\u5230\u4e86\u6ca1\u6709 \n  vis[x] = true;\n  for(int i = 1; i <= n; ++i)\n  \tif(!vis[i] && dist(x, i)<=(ll)4*r*r)  dfs(i);//\u522b\u5fd8\u4e86\u5f00(long long) \n  ////\u8fd9\u91cc\u662f\u4e0d\u7528\u56de\u6eaf\u7684\uff01\u56e0\u4e3a\u5982\u679c\u5df2\u7ecf\u8d70\u8fc7 \u5374\u6ca1\u8d70\u901a \u5c31\u4e0d\u7528\u518d\u8d70 \n}\n\n\nil bool check()  {\n  for(int i = 1; i <= n; ++i)  {\n  \tif(z[i] <= r)  dfs(i);//\u5224\u65ad\u53ef\u4ee5\u51fa\u53d1\u7684\u70b9 \n  \tif(fnd)  break;//\u5c0f\u526a\u679d \n  }\n  return fnd;\n}\n\n\nil void init()  {\n  fnd = false;\n  memset(vis, 0, sizeof(vis));\n  memset(x, 0, sizeof(x));\n  memset(y, 0, sizeof(y));\n  memset(z, 0, sizeof(z));\n}\n\n\nint main()  {\n  //freopen(\"input.txt\", \"r\", stdin);//\u91cd\u5b9a\u5411\n  \n  scanf(\"%d\", &T);\n  while(T--)  {\n  \tinit();//\u591a\u7ec4\u6570\u636e\uff0c\u522b\u5fd8\u4e86\u521d\u59cb\u5316 \n  \tscanf(\"%d%lld%lld\", &n, &h, &r);\n  \tfor(int i=1; i<=n; ++i)  scanf(\"%lld%lld%lld\", x+i, y+i, z+i);//x+i\u7b49\u540c\u4e8e &x[i]\n\t   \n  \tif( check() )  printf(\"Yes\\n\");\n  \telse  printf(\"No\\n\");\n  }\n  \n  return 0;\n}\n```\n\n#### _\uff08\u4e24\u6bb5\u4ee3\u7801\u65f6\u95f4\u5dee\u6709\u70b9\u5927\uff0c\u7801\u98ce\u6709\u70b9\u5c0f\u53d8\u5316\uff09_ \n------------\n\n### \u7ed3\u6784\u4f53\u578b\n```c\n#include <bits/stdc++.h>\nusing namespace std;\n\n\nstruct cir\n{\n  int x, y, z;\n  bool operator<(const cir&cpr)const\n  {\n  \treturn z < cpr.z;        /* z\u5c0f\u7684\u6392\u5728\u524d\u9762 */ \n  }        \n}p[1010];\n\nbool fnd = 0;\nint n;\nlong long h, r;\nbool vis[1010];\n\n\nlong long dist(long long x1, long long y1, long long z1, long long x2, long long y2, long long z2)\n{\n  return (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)+(z1-z2)*(z1-z2);\n}\n\n\nvoid dfs(cir now, int num)\n{\n  if(now.z+r >= h)\n  {\n  \tfnd = 1;\n  \treturn;\n  }\n  vis[num] = 1;\n  for(int i = 1; i <= n; i++)\n  {\n  \tif(fnd)    \n\t  return;\n\tif(!vis[i] && dist(now.x, now.y, now.z, p[i].x, p[i].y, p[i].z) <= 4*r*r)\n\t  dfs(p[i], i);\n  }\n}\n\n\nint main()\n{\n  //freopen(\"input.txt\", \"r\", stdin);\n  \n  int T;\n  scanf(\"%d\", &T);\n  while(T--)\n  {\n  \tmemset(vis, 0, sizeof(vis));\n  \tmemset(p, 0, sizeof(p));\n  \tfnd = 0;\n  \tscanf(\"%d%lld%lld\", &n, &h, &r);\n  \tfor(int i = 1; i <= n; i++)\n  \t{\n  \t  scanf(\"%d%d%d\", &p[i].x, &p[i].y, &p[i].z);\t\n\t}\n\tsort(p+1, p+n+1);\n\tfor(int i = 1; i <= n; i++)\n  \t{\n  \t  if(p[i].z <= r)    dfs(p[i], i);\n\t}\n\tif(fnd)    printf(\"Yes\\n\");\n\telse    printf(\"No\\n\");\n  }\n  \n  return 0;\n}\n```",
        "postTime": 1548126041,
        "uid": 149062,
        "name": "\u5e72\u7269\u56fd\u5927\u7687\u5e1d",
        "ccfLevel": 0,
        "title": "NOIP2017 day2 t1 \u5976\u916a"
    },
    {
        "content": "# \u7384\u5b66\u7684\u5e76\u67e5\u96c6\n\u672c\u849f\u84bb\u5199\u4e86N\u6b21,\u7ec8\u4e8e\u8fc7\u4e86\u3002  \n\u9519\u8bef1:\u521d\u59cb\u5316\u5199\u5728\u8f93\u5165\u524d\u9762,60\u5206\n```cpp\nfor (register LL i=0;i<=n+1;i++)\n    f[i]=i;\ncin>>n>>h>>r;\n```\nn\u90fd\u8fd8\u6ca1\u8f93\u5165\u54ea\u6765\u7684n?\n\n\u9519\u8bef2:\u5fd8\u5f00``long long``,80\u5206\n> \u5341\u5e74$OI$\u4e00\u573a\u7a7a\uff0c\u6ca1\u5f00``long long``\u89c1\u7956\u5b97\n\n\n------------\n\u5982\u679c\u8fd9\u4e9b\u9519\u8bef\u907f\u514d\u4e86,\u5c31\u57fa\u672c\u6ca1\u95ee\u9898\u4e86  \n\u53ef\u4ee5\u7528$0$~$n$-$1$\u4f5c\u4e3a\u7a7a\u6d1e,$n$\u4e0e$n$+$1$\u8868\u793a\u4e0a\u4e0b\u8868\u9762  \n\u4f46\u6ce8\u610f\u5f00\u6839\u7684\u7cbe\u5ea6\u95ee\u9898  \n\u8fd9\u9898\u7528\u5f00\u6839\u53ef\u4ee5\u8fc7,\u4f46\u4e3a\u4e86\u4fdd\u9669,\u53ef\u4ee5\u7528\u5e73\u65b9\u7684\u6bd4\u8f83\u4ee3\u66ff\u5f00\u6839  \n### \u4e0b\u9762\u4e0a\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\nLL f[1002],n,h,r;\nclass Pos{                                  //\u50a8\u5b58\u7a7a\u6d1e\u7684\u5750\u6807\n    public:\n        LL x,y,z;\n}a[1000];\ninline LL Dis(const Pos &A,const Pos &B){\n    LL X=A.x-B.x,Y=A.y-B.y,Z=A.z-B.z;\n    LL T=X*X+Y*Y+Z*Z;\n    return T;\n}\ninline int get(int a){                      //\u627e\u7239\u7684\u51fd\u6570\n    if (f[a]==a) \n        return a;\n    return f[a]=get (f[a]);                 //\u8def\u5f84\u538b\u7f29\n}\n//\u5408\u5e76\u51fd\u6570\ninline void Merge(const int &a,const int &b){\n    register int T1=get (a),T2=get (b);\n    if (T1!=T2)\n        f[T2]=T1;\n    return; \n}\ninline void Find(int a,int b) {\n    int T1=get (a),T2=get (b);\n    if (T1==T2)\n        cout<<\"Yes\\n\";\n    else \n        cout<<\"No\\n\";\n    return;\n}\nint main(){\n    register LL T;\n    ios::sync_with_stdio (false);           //\u65e0\u804a,\u522b\u5b66\u6211\n    cin>>T;\n    while (T--){\n    \tcin>>n>>h>>r;\n    \tfor (register LL i=0;i<=n+1;i++)    //\u522b\u5fd8\u4e86\u521d\u59cb\u5316\n        \tf[i]=i;\n        for (register LL i=0;i<n;i++)\n        \tcin>>a[i].x>>a[i].y>>a[i].z;\n        for (register LL i=0;i<n;i++){\n        \tfor (register LL j=i+1;j<n;j++)\n        \t\tif (Dis (a[i],a[j])<=4*r*r) //2r*2r=4r^2\n        \t\t\tMerge (i,j);\n        \tif (a[i].z<=r)\n        \t\tMerge (i,n);\n        \tif (a[i].z+r>=h)\n        \t\tMerge (i,n+1);\n        }\n        Find (n,n+1);\n    }\n    return 0;                               //\u597d\u4e60\u60ef\n}\n```\n\u6709\u4ec0\u4e48\u95ee\u9898\u8bf7\u5404\u4f4d$Julao$\u6307\u51fa",
        "postTime": 1544849297,
        "uid": 82583,
        "name": "Hzq11_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nint n;\nlong long h,r;\nint t;\nint ju[1001];\nstruct d\n{\n    long long x;\n    long long y;\n    long long z;\n    int biao;\n}daa[1001];\nint flag=0;\nint cmp(d a,d b)\n{\n    return a.z<b.z;\n}\nint main()\n{\n//    freopen(\"cheese.in\",\"r\",stdin);\n    //freopen(\"cheese.out\",\"w\",stdout);\n    cin>>t;\n    for(int j=1;j<=t;j++)\n    {\n        //chushihua;\n        for(int sd=1;sd<=1000;sd++)\n        {\n            daa[sd].x=0;\n            daa[sd].y=0;\n            daa[sd].z=0;\n            daa[sd].biao=0;\n        }\n        memset(ju,0,sizeof(ju));\n        scanf(\"%d%lld%lld\",&n,&h,&r);\n        flag=0;\n        for(int er=1;er<=n;er++)\n        {\n            scanf(\"%lld%lld%lld\",&daa[er].x,&daa[er].y,&daa[er].z);\n            if(daa[er].z<=r)\n            {\n             daa[er].biao=1;\n             ju[er]=1;\n             }\n            if(daa[er].z>=(h-r)) daa[er].biao=2;\n            if(((daa[er].z+r)>=h)&&(daa[er].z<=r)) flag=1;\n        }\n        if(flag==1)\n            printf(\"Yes\\n\");\n        else\n        {\n        sort(daa+1,daa+n+1,cmp);\n        for(int f=1;f<=n-1;f++)\n        {\n            if(ju[f]==1)\n        for(int k=f+1;k<=n;k++)\n        {\n            if(sqrt((daa[k].x-daa[f].x)*(daa[k].x-daa[f].x)+(daa[k].y-daa[f].y)*(daa[k].y-daa[f].y)+(daa[k].z-daa[f].z)*(daa[k].z-daa[f].z))<=2*r)\n            {\n                ju[k]=1;\n            }\n        }\n        }\n        for(int yy=1;yy<=n;yy++)\n        if(ju[yy]==1&&(daa[yy].biao==2))\n            flag=1;\n            if(flag==1) printf(\"Yes\\n\");\n            else printf(\"No\\n\");\n        }\n    }\n    //fclose(stdin);\n//    fclose(stdout);\n}\n```\n**\u7384\u5b66\u9898\u89e3 \u4e0d\u559c\u52ff\u55b7**\n###\u4e3a\u4ec0\u4e48\u8981\u4e48\u662fdfs\u8981\u4e48\u662f\u5e76\u67e5\u96c6\u5462\uff0c\u76f4\u63a5\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58\u5706\u5fc3\uff0c\u7136\u540e\u7528sort\u6309\u9ad8\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e0e\u4e0b\u8868\u9762\u76f8\u4ea4\u6216\u76f8\u5207\u7684\u7528\u4e00\u4e2a\u6570\u7ec4\u6807\u8bb0\u4e00\u4e0b\uff0c\u7136\u540e\u4ece\u540e\u5f80\u524d\u9012\u63a8\uff0c\u5982\u679c\u5f53\u524d\u70b9\u80fd\u591f\u5230\u8fbe\uff0c\u90a3\u4e48\u4e0e\u5f53\u524d\u70b9\u76f8\u5207\u6216\u76f8\u4ea4\u7684\u4e4b\u540e\u7684\u70b9\u4e5f\u80fd\uff0c\u540c\u6837\u7528\u6570\u7ec4\u6807\u8bb0\uff0c\u6700\u540e\u63a8\u5b8c\u540e\u68c0\u7d22\u4e00\u904d\u6709\u6ca1\u6709\u80fd\u591f\u5230\u8fbe\u7684\u5706\u548c\u9876\u9762\u76f8\u5207\u6216\u76f8\u4ea4\u5c31\u662f\u4e86\uff0c\n\n###\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u7b97\u9ad8\uff0cn\u65b9\u4ee5\u4e0b\uff0c\u7b97\u662f\u4e00\u79cd\u65b0\u601d\u8def\u3002\n",
        "postTime": 1511101312,
        "uid": 36506,
        "name": "\u8bb8\u8c6a",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u8fd9\u662fnoip2017\u7684\u4e00\u9053\u539f\u9898\uff0c\u96be\u5ea6\u4e0d\u7b97\u592a\u5927\uff0c\u672c\u8eab\u6559\u7ec3\u627e\u8fd9\u9053\u9898\u662f\u8ba9\u6211\u4eec\u7ec3\u641c\u7d22\u7684\u3002\n \n\u7136\u800c\u6211\u7528\u5e76\u67e5\u96c6\u5f88\u5feb\u7684\u89e3\u51b3\u4e86\n\n\u8fd9\u9898\u5751\u70b9\u4e0d\u591a\uff0c\u6570\u636e\u4e0d\u5f3a\uff0c\u53ea\u8981\u6ce8\u610f\u7cbe\u5ea6\u95ee\u9898\u548c\u6bcf\u7ec4\u6570\u636e\u521d\u59cb\u5316\uff0cac\u96be\u5ea6\u4e0d\u5927 \n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define fint register int\n#define fread ios::sync_with_stdio\n#define p 38452\nusing namespace std;\ninline double dist(double x,double y,double z,double aa,double ba,double ca);\nint findx(int x);\nint fa[p];\nint fb[p];\nint f[p];\nint a[p],b[p],c[p],ps[p]; \nsigned main()\n{\n\tfread(false);\n\t//\u8bfb\u5165\u4f18\u5316 \n\tint t;\n\tcin>>t;\n\tfor(fint ff=1;ff<=t;ff++)\n\t{\n\t\t//t\u7ec4\u6570\u636e \n\t\tstring as=\"Yes\";\n\t\t//\u521d\u59cb\u5316as\u4e3ayes\uff08\u6ce8\u610f\u5927\u5c0f\u5199\uff0c\u6211\u56e0\u6b64\u5168wa\u8fc7\uff09 \n\t\tint n,h,r;\n\t\t//\u5728\u5faa\u73af\u5185\u5b9a\u4e49\u7701\u53bb\u7e41\u7410\u7684\u521d\u59cb\u5316 \n\t\tcin>>n>>h>>r;\n\t\tfor(int i=1;i<=n;i++)\n\t\tf[i]=i; \n\t\t//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\uff08\u5343\u4e07\u4e0d\u80fd\u5fd8\uff09 \n\t\tfor(fint i=1;i<=n;i++)\n\t\t{\n\t\t\tcin>>a[i]>>b[i]>>c[i];\n\t\t\tps[i]=i;\n\t\t\t//\u8f93\u5165\u5404\u7ec4\u70b9\u5750\u6807 \n\t\t}\n\t\tint cnt=0;\n\t\tint cmt=0;\n\t\t//\u521d\u59cb\u5316\u70b9\u6570 \n\t\tfor(fint i=1;i<=n;i++)\n\t\t{\n\t\t\tif(c[i]+r>=h)\n\t\t\tfa[++cnt]=i;\n\t\t\t//\u5230\u8fbe\u4e0a\u5e95\u9762\u7684\u70b9 \n\t\t\tif(c[i]-r<=0)\n\t\t\tfb[++cmt]=i;\n\t\t\t//\u5230\u8fbe\u4e0b\u5e95\u9762\u7684\u70b9 \n\t\t\tfor(fint j=1;j<=i;j++)\n\t\t\t{\n\t\t\t\t//\u679a\u4e3ei\u524d\u9762\u7684\u6d1e \n\t\t\t\tif(dist(a[j],b[j],c[j],a[i],b[i],c[i])<=(pow(r,2)*2))\n\t\t\t\t//\u5982\u679c\u76f8\u4ea4\u6216\u76f8\u5207 \n\t\t\t\tif(findx(j)!=findx(i))\n\t\t\t\t//\u5982\u679c\u4e0d\u662f\u540c\u4e00\u4e2a\u6d1e \n\t\t\t\tf[findx(i)]=findx(j);\n\t\t\t\t//\u5408\u5e76ta\u4eec \n\t\t\t}\n\t\t}\n\t\t\tfor(int i=1;i<=cnt;i++)\n\t\t\t{\n\t\t\t//\u679a\u4e3e\u6bcf\u4e2a\u5230\u4e0a\u5e95\u9762\u7684\u6d1e\u662f\u5426\u5230\u4e0b\u5e95\u9762 \n\t\t\t\tint k=0;\n\t\t\t\twhile(k+1<=cmt)\n\t\t\t\t{\n\t\t\t\t\tif(findx(f[fa[i]])==findx(f[fb[++k]]))\n\t\t\t\t\t{\n\t\t\t\t\tcout<<as<<endl;\n\t\t\t\t\tas=\"kingxbz is really handsome\";\n\t\t\t\t\tbreak;\n\t\t\t\t} \n                //\u5982\u679c\u662f\u5c31\u8f93\u51fayes\uff1b \n\t\t\t\t}\n\t\t\t\tif(as==\"kingxbz is really handsome\")\n\t\t\t\tbreak;\n\t\t\t\t//\u8f93\u51fa\u5b8c\u5c31\u7ed3\u675f\u5faa\u73af \n\t\t\t}\n\t\t\t\tif(as==\"kingxbz is really handsome\")\n\t\t\t\tcontinue;\n\t\t\t\t//\u7ee7\u7eed\u627e\u4e0b\u4e00\u7ec4 \n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tas=\"No\";\n\t\t\t\t\tcout<<as<<endl;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t//\u5426\u5219\u5c31\u8f93\u51fano\u5e76\u5f00\u59cb\u4e0b\u4e00\u7ec4\u6570\u636e  \n\t\t}\n\t\texit(0);\n\t\t//\u5b8c\u7ed3\u6492\u82b1 \n\t}\n\ninline double dist(double x,double y,double z,double aa,double ba,double ca)\n{\n\treturn sqrt(pow((x-aa),2)+pow((y-ba),2)+pow((z-ca),2));\n}\n//\u7a7a\u95f4\u8ddd\u79bb\u8ba1\u7b97\uff08\u9898\u4e0a\u5df2\u7ecf\u7ed9\u4e86\uff09 \nint findx(int x)\n{\n\tif(f[x]==x)\n\treturn x;\n\treturn f[x]=findx(f[x]);\n}\n//\u57fa\u7840\u7684\u5e76\u67e5\u96c6\u8def\u5f84\u538b\u7f29 \n```\n\u5982\u679c\u4f60\u590d\u5236\u4e86\u4e0b\u6765\uff0c\u90a3\u4f60\u5c31\u8f93\u4e86\uff0c\u56e0\u4e3a\u4f60\u4f1a\u60ca\u5947\u7684\u770b\u52307\u4e2awa\n\n\u8fd9\u4fbf\u662f\u672c\u9898\u4e00\u5927\u5751\u70b9\uff1a\u7cbe\u5ea6\u95ee\u9898\n\n\u5982\u679cnoip2017\u771f\u662f\u8fd9\u6837\u7684\u6570\u636e\uff0c\u4f30\u8ba1\u4e0d\u5c11\u4eba\u4f1a\u56e0\u6b64AFO\u5427\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\n```cpp\ninline double dist(double x,double y,double z,double aa,double ba,double ca)\n{\n\treturn sqrt(pow((x-aa),2)+pow((y-ba),2)+pow((z-ca),2));\n}\n\u548c\nfor(fint j=1;j<=i;j++)\n\t\t\t{\n\t\t\t\tif(dist(a[j],b[j],c[j],a[i],b[i],c[i])<=(pow(r,2)*2))\n\t\t\t\tif(findx(j)!=findx(i))\n\t\t\t\tf[findx(i)]=findx(j);\n\t\t\t}\n```\n\u6539\u4e3a\n```cpp\ninline double dist(double x,double y,double z,double aa,double ba,double ca)\n{\n\treturn pow((x-aa),2)+pow((y-ba),2)+pow((z-ca),2);\n}\n\u548c\nfor(fint j=1;j<=i;j++)\n\t\t\t{\n\t\t\t\tif(dist(a[j],b[j],c[j],a[i],b[i],c[i])<=(pow(r,2)*4))\n\t\t\t\tif(findx(j)!=findx(i))\n\t\t\t\tf[findx(i)]=findx(j);\n\t\t\t}\n  ```\n  \u90a3\u4e48\u606d\u559c\u4f60ac\u5927\u8ba1\n  \u6700\u540e\u795d\u5927\u5bb6\u65b0\u5e74\u5feb\u4e50\uff0coi2020 rp++",
        "postTime": 1577965956,
        "uid": 244059,
        "name": "king_xbz",
        "ccfLevel": 0,
        "title": "2020\u5e74\u7684\u7b2c\u4e00\u7bc7\u535a\u5ba2\u732e\u7ed9noip2017\uff1a\u5976\u916a"
    },
    {
        "content": "### \u697c\u4e0a\u5927\u4f6c\u90fd\u662f\u7528\u5e76\u67e5\u96c6\u505a\u7684\uff0c\u849f\u84bb\u53d1\u4e00\u7bc7dfs\u89e3\u6cd5\n## \u600e\u4e48\u5efa\u8fb9\uff1f\n\u9996\u5148\u5efa\u56fe\u7684\u65f6\u5019\uff0c\u5224\u65ad\u6bcf\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e0e2r\u7684\u5173\u7cfb\uff0c\u5373\u5224\u65adsqrt((a[i].x-a[j].x)^2+(a[i].y-a[j].y)^2+(a[i].z-a[j].z)^2)\u4e0e2r\u7684\u5173\u7cfb\uff0c\u5982\u679c\u524d\u8005\u5c0f\u4e8e\u7b49\u4e8e\u540e\u8005\u5373\u5728\u8fd9\u4e24\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u3002\u4e0d\u8fc7\u57fa\u4e8esqrt()\u51fd\u6570\u7684\u7cbe\u5ea6\u548c\u901f\u5ea6\u6211\u66f4\u559c\u6b22\u4e24\u8fb9\u5e73\u65b9\u3002\n```cpp\nfor(int i=1;i<n;i++)\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t\tif((a[i].x-a[j].x)*(a[i].x-a[j].x)+(a[i].y-a[j].y)*(a[i].y-a[j].y)+(a[i].z-a[j].z)*(a[i].z-a[j].z)<=4*r*r)\n\t\t\t\te[i].push_back(j),e[j].push_back(i);//\u7531\u4e8e\u6570\u636e\u8f83\u5c11\uff0c\u7528vector\u66f4\u65b9\u4fbf\u4e00\u4e9b\u3001\u3001\u3001\n```\n\n## \u600e\u4e48\u5224\u65ad\u8d77\u70b9\u7ec8\u70b9\uff1f\n\u6211\u662f\u5224\u65ad\u6bcf\u4e2a\u70b9\u7684\u7ad6\u5750\u6807\u4e0er\u7684\u5173\u7cfb\uff0c\u5982\u82e5\u4e00\u4e2a\u70b9\u7684\u7ad6\u5750\u6807<=r\uff0c\u90a3\u4e48\u5c31\u8ba9\u8fd9\u4e2a\u70b9\u4e0e0\u76f8\u8fde\uff0c\u5728dfs\u7684\u65f6\u5019\u4ece0\u5f00\u59cb\uff1b\u5728dfs\u7684\u65f6\u5019\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u7ad6\u5750\u6807+r>=h\uff0c\u90a3\u4e48\u5373\u53ef\u8fd4\u56deture\u3002\n```cpp\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[i].z<=r)\n\t\t\te[0].push_back(i);\n```\n## \u6700\u540e\u5c31\u662f\u7b80\u5355\u7684dfs\u4e86\n```cpp\nbool dfs(ll now){\n\tv[now]=1;\n\tif(a[now].z+r>=h)return 1;\n\tfor(int i=0;i<e[now].size();i++)\n\t\tif(!v[e[now][i]]&&dfs(e[now][i]))return 1;\n\treturn 0;\n}\n```\n## \u6700\u540e\u8d34\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<vector>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#define ll long long\nusing namespace std;\nll read(){\n\tll res=0,f=1;char x;\n\twhile(!isdigit(x)){if(x=='-')f=-1;x=getchar();}\n\twhile(isdigit(x))res=(res<<3)+(res<<1)+x-'0',x=getchar();\n\treturn res*f;\n}\nvector<ll>e[1010];\nll n,h,r;\nbool v[1010];\nstruct node{\n\tll x,y,z;\n}a[1010];\nbool dfs(ll now){\n\tv[now]=1;\n\tif(a[now].z+r>=h)return 1;\n\tfor(int i=0;i<e[now].size();i++)\n\t\tif(!v[e[now][i]]&&dfs(e[now][i]))return 1;\n\treturn 0;\n}\nvoid solve(){\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[i].z<=r)\n\t\t\te[0].push_back(i);\n\tfor(int i=1;i<n;i++)\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t\tif((a[i].x-a[j].x)*(a[i].x-a[j].x)+(a[i].y-a[j].y)*(a[i].y-a[j].y)+(a[i].z-a[j].z)*(a[i].z-a[j].z)<=4*r*r)\n\t\t\t\te[i].push_back(j),e[j].push_back(i);\n\tif(dfs(0))puts(\"Yes\");\n\telse puts(\"No\");\n}\nint main(){\n\tint t=read();\n\twhile(t--){\n\t\tn=read(),h=read(),r=read();\n\t\tfor(int i=0;i<=n;i++)\n\t\t\te[i].clear();\n\t\tmemset(v,0,sizeof(v));\n\t\tfor(int i=1;i<=n;i++)\n\t\t\ta[i]={read(),read(),read()};\n\t\tsolve();\n\t}\n}\n```\n",
        "postTime": 1573091207,
        "uid": 150538,
        "name": "\u7f18\u8d77\u25a1\u7f18\u706d",
        "ccfLevel": 0,
        "title": "DFS"
    },
    {
        "content": "## \u6700\u91cd\u8981\u601d\u60f3\uff1a\n\n### \u5224\u65ad\u7a7a\u6d1e\u8fde\u63a5\uff1a2*\u534a\u5f84>=\u5706\u5fc3\u8ddd\u79bb\n\n\n#### \u7ec6\u8282\u65b9\u9762:\n###### 1.\u7a7a\u6d1e\u5706\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb\u5176\u5b9e\u53ea\u6709\u5224\u65ad\u662f\u5426\u4e0e\u5176\u4ed6\u7a7a\u6d1e\u8fde\u63a5\u7684\u4f5c\u7528.\u6240\u4ee5\u5224\u65ad\u5b8c\u5c31\u4e0d\u7528\u518d\u7ba1\u5b83\u4e86\n###### 2.\u6240\u4ee5\u5224\u65ad\u8fde\u63a5\u540e\uff0c\u53ef\u4ee5\u5c06\u7a7a\u6d1e\u62bd\u8c61\u6210\u4e8c\u7ef4\u56fe\u4e2d\u70b9\u4e4b\u95f4\u662f\u5426\u8fde\u63a5.\n###### 3.\u5b9a\u4e49\u4e8c\u7ef4\u6570\u7ec4f\uff0c\u82e5x,y\u8fde\u63a5\u5219\uff0cf[x][y]\u4e3a1\u5426\u5219\u4e3a0,\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0cf[y][x]\u548cf[x][y]\u6570\u503c\u8981\u4fdd\u6301\u4e00\u81f4\n###### 4.DFS\u904d\u5386\u6240\u6709\u70b9\uff0c\u82e5\u627e\u5230\u4e86\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5230\u8fbe\u9876\u90e8\u76f4\u63a5\u8f93\u51fa.\n###### 5.\u627e\u8fc7\u7684\u5206\u652f\u70b9\u4e0d\u9700\u8981\u518d\u627e\uff0c\u6240\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4v\u8bb0\u5f55\u8bbf\u95ee\n\n###### 6.\u6700\u540e\u4e00\u4e2a\u5c0f\u5730\u65b9\u8981\u6ce8\u610f\uff0c\u5b58\u5750\u6807\u7684\u6570\u7ec4\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u8981\u7528long int\u3002~~\u672c\u4eba\u56e0\u4e3a\u8fd9\u4e2a\u7b2c\u4e00\u6b21\u5f97\u4e8680\u5206~~\n\n### \u8fd8\u6709\u4ec0\u4e48\u5177\u4f53\u7684\u95ee\u9898\u770b\u4ee3\u7801\uff1a\n------------\n\n \n \n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nlong int x[1010],y[1011],z[1010];\nbool f[1010][1010];int a[1010];\nbool v[1001];bool ok=0;int n,h,r;\nbool dfs(int x)\n{\n\tv[x]=1;//\u6807\u8bb0\u627e\u8fc7\n\tif(f[x][n+1]==1)//\u4e0e\u9876\u90e8\u6709\u8fde\u63a5\n\t{\n\t\tcout<<\"Yes\"<<endl;//\u76f4\u63a5\u8f93\u51fa\n\t\tok=1;//\u8bb0\u5f55\u627e\u5230\u4e86\n\t\treturn true;//\u8fd4\u56detrue\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(v[i]==0)//\u5fc5\u987b\u662f\u6ca1\u627e\u8fc7\n\t\tif(f[x][i]==1)\n\t\t{\t\n        \t//\u8fd9\u4e2a\u5206\u652f\u627e\u5230\u4e86\u5c31\u8fd4\u56de\n\t\t\tif(dfs(i))return true;\n\t\t}\n\t}\n\treturn false;//\u8be5\u5206\u652f\u6ca1\u627e\u5230\n}\nint main()\n{\n\tint t;\n\tcin>>t;\n\tdouble k;//\u8fd9\u91cc\u6ce8\u610f\u662fdouble\n\twhile(t--)\n\t{\n\t\tcin>>n>>h>>r;\n\t\tint tot=0;//\n        ok=0;\n\t\tmemset(f,0,sizeof(f));//\u6570\u7ec4\u521d\u59cb\u5316\n\t\tmemset(v,0,sizeof(v));\n\t\tmemset(a,0,sizeof(a));\n\t\tmemset(x,0,sizeof(x));\n\t\tmemset(y,0,sizeof(y));\n\t\tmemset(z,0,sizeof(z));\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tcin>>x[i]>>y[i]>>z[i];//\u8f93\u5165\n            //\u4e0e\u524d\u9762\u7684\u8bb0\u5f55\u7a7a\u6d1e\u8ba1\u7b97\u8ddd\u79bb\n\t\t\tfor(int j=i-1;j>=1;j--)\n\t\t\t{\n\t\t\tk=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j])+(z[i]-z[j])*(z[i]-z[j]));//\u8ba1\u7b97\u5706\u5fc3\u8ddd\u79bb\n\t\t\tif(k<=2*r)//\u5224\u65ad\u7a7a\u6d1e\u662f\u5426\u8fde\u63a5\n\t\t\t{\n\t\t\t\tf[i][j]=1;\n\t\t\t\tf[j][i]=1;\t\n\t\t\t}\n\t\t\t}\n\t\t\tif(h-z[i]<=r)//\u5224\u65ad\u662f\u5426\u4e0e\u9876\u90e8\u8fde\u63a5\n\t\t\t{\n\t\t\t\tf[i][n+1]=1;\n\t\t\t\tf[n+1][i]=1;\t\n\t\t\t}\n\t\t\tif(z[i]<=r)//\u5224\u65ad\u662f\u5426\u4e0e\u5e95\u90e8\u8fde\u63a5\n\t\t\t{\n\t\t\t\ttot++;//\u5148\u7528\u6570\u7ec4\u5b58\u8d77\u6765\uff0c\t\t\t\t\t\n\t\t\t\ta[tot]=i;//\u5b58\u8d77\u6765\u4ee5\u540e\uff0c\u4e0b\u9762\u53ef\u4ee5\u4f5c\u4e3a\u641c\u7d22\u5165\u53e3\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=tot;i++)\n\t\tif(dfs(a[i]))break;//\u627e\u5230\u4e86\u5c31\u505c\u6b62\u5faa\u73af\n        //ok=0\u8868\u793a\u6ca1\u627e\u5230\n\t\tif(ok==0)cout<<\"No\"<<endl;\n\t}\n } \n```",
        "postTime": 1541600463,
        "uid": 113695,
        "name": "\u767d\u6728\u5076\u541b",
        "ccfLevel": 6,
        "title": "2017noip --\u5976\u916a"
    },
    {
        "content": "\u4e00\u9053\u7b80\u5355\u7684\u56fe\u8bba\uff0c\u6570\u636e\u4e0d\u5927\uff0c\u7528\u90bb\u63a5\u77e9\u9635\u50a8\u5b58\u3002\n\n\u6211\u4eec\u628a\u5976\u916a\u7684\u4e0a\u4e0b\u9762\u89c6\u4f5c\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u5c06\u6bcf\u4e00\u4e2a\u6d1e\u6d1e\u770b\u4f5c\u7ed3\u70b9\u3002\u5982\u679c\u4e00\u4e2a\u6d1e\u4e0e\u4e0a\u9762\u6216\u4e0b\u9762\u76f8\u4ea4\u6216\u76f8\u5207\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6d1e\u5bf9\u5e94\u7684\u70b9\u5c31\u4e0e\u8d77\u70b9\u6216\u7ec8\u70b9\u6709\u8fb9\u76f8\u8fde\u3002\n\n\u540c\u6837\u7684\uff0c\u5982\u679c\u4e24\u4e2a\u6d1e\u76f8\u4ea4\u6216\u76f8\u5207\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6d1e\u6240\u5bf9\u5e94\u7684\u70b9\u95f4\u5c31\u6709\u8fb9\u76f8\u8fde\u3002\n\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5c06\u8fd9\u5757\u5976\u916a\u8f6c\u5316\u4e3a\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u8981\u5224\u65ad\u8d77\u70b9\u548c\u7ec8\u70b9\u662f\u5426\u8fde\u901a\u4e86\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u5224\u65ad\u4ed6\u4eec\u662f\u5426\u8fde\u901a\uff0c\u6211\u9009\u62e9\u7684\u662fBFS\u3002\n```pascal\nvar i,j,k,l,m,n,s,t,o,h,r,head,tail:longint;\nx,y,z,p,q:array[0..1009]of longint;\na:array[0..1009,0..1009]of longint;\nfunction dist(i,j:longint):real;//\u8ba1\u7b97\u8ddd\u79bb\nbegin\n dist:=sqrt(sqr(x[i]-x[j])+sqr(y[i]-y[j])+sqr(z[i]-z[j]));\nend;\nbegin\n readln(o);\n for l:=1 to o do\n begin\n  readln(n,h,r);\n  t:=0;\n  for i:=1 to n do read(x[i],y[i],z[i]);\n  fillchar(p,sizeof(p),0);\n  for i:=1 to n do if z[i]<=r then p[i]:=1;//\u5c06\u6240\u6709\u4e0e\u8d77\u70b9\u76f8\u8fde\u7684\u70b9\u6807\u8bb0\n  fillchar(a,sizeof(a),0);\n  for i:=1 to n do//\u5efa\u56fe\n   for j:=1 to n do if i<>j then\n    if dist(i,j)<=2*r then\n    begin\n     a[i,j]:=1;\n     a[j,i]:=1;\n    end;\n  fillchar(q,sizeof(q),0);\n  head:=0;\n  tail:=0;\n  for i:=1 to n do if p[i]=1 then//\u5c06\u6240\u6709\u4e0e\u8d77\u70b9\u8fde\u901a\u7684\u70b9\u5165\u961f\n  begin\n   inc(tail);\n   q[tail]:=i;\n  end;\n  while head<tail do//BFS\n  begin\n   inc(head);\n   if z[q[head]]+r>=h then t:=1;\n   for i:=1 to n do\n    if (a[q[head],i]=1)and(p[i]=0) then\n    begin\n     p[i]:=1;\n     inc(tail);\n     q[tail]:=i;\n    end;\n  end;\n  case t of\n   0:writeln('No');\n   1:writeln('Yes');\n  end;\n end;\nend.\n\n```",
        "postTime": 1519804297,
        "uid": 34961,
        "name": "\u53d6\u540d\u6700\u70e6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u4e8b\u5148\u8bf4\u660e\uff1a\u697c\u4e3b\u662f\u4e00\u4e2a\u521a\u5165\u521d\u4e00\u7684~~\u849f\u84bb~~dalao\u3002\uff08\u73b0\u5728\u521d\u4e8c\u4e86\uff09\uff0c\u6240\u4ee5\u8bf7\u5404\u4f4ddalao\u522b\u55b7\u3002\n\n\u90a3\u4e48\u8fd9\u9053~~\u7325\u7410~~\u5b8c\u7f8e\u7684\u9898\u5230\u5e95\u8981\u5e72\u4ec0\u4e48\u5462\uff1f\n\n\u5176\u5b9e\u5c31\u662f\uff1a\u5728\u4e00\u5757\u7acb\u4f53\u7a7a\u95f4\u4e2d\uff0c\u6709\u5f88\u591a\u4e2a\u534a\u5f84\u76f8\u7b49\u7684\u7403\uff0c\u7136\u540e\u5224\u8fd9\u4e9b\u7403\u662f\u5426\u662f\u9876\u548c\u5e95\u8054\u901a\u3002\n\n\u56e0\u4e3a\u662f\u5224\u8054\u901a\uff0c\u6240\u4ee5\u7528\u5e76\u67e5\u96c6\u505a\uff0c\u5c06\u4f4d\u7f6e\u76f8\u8ddd\u5c0f\u4e8e\u7b49\u4e8e2\u500d\u534a\u5f84\u7684\u5f52\u4e3a\u4e00\u4e2a\u96c6\u5408\uff08~~\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\uff0c\u81ea\u5df1\u770b\u9898~~\uff09\u3002\n\n\u8fd9\u91cc\u6ce8\u610f\u7279\u5224\uff1a\n\nZ\u4f4d\u7f6e+\u534a\u5f84>=H\u7684\uff0c\u4e0e1001\u5f52\u4e3a\u4e00\u4e2a\u96c6\u5408\u3002\n\nZ\u4f4d\u7f6e-\u534a\u5f84<=0\u7684\uff0c\u4e0e0\u5f52\u4e3a\u4e00\u4e2a\u96c6\u5408\u3002\n\n\u6700\u540e\u770b0\u548c1001\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\n#include<iomanip>\n#include<cstring>\n#include<algorithm>\n#include<ctime>\nusing namespace std;\nint t,n,h,r,x,y,z,f,fa[1002],t1,t2;\nstruct sb\n{\n    int x;\n    int y;\n    int z;\n}a[1001];\nint find(int k)      //\u8def\u5f84\u538b\u7f29\n{\n    if(fa[k]!=k)\n        fa[k]=find(fa[k]);\n    return fa[k];\n}\nint main()\n{\n    //freopen(\"cheese.in\",\"r\",stdin);\n    //freopen(\"cheese.out\",\"w\",stdout);\n    cin>>t;\n    for(int i=1;i<=t;i++)\n    {\n        cin>>n>>h>>r;\n        for(int i=1;i<=n;i++)     //\u8bb0\u5f97\u521d\u59cb\u5316\n            fa[i]=i;\n        fa[0]=0;\n        fa[1001]=1001;\n        for(int j=1;j<=n;j++)\n        {\n            cin>>a[j].x>>a[j].y>>a[j].z;\n            if(a[j].z+r>=h)   //\u7279\u5224\u9876\n            {\n                t1=find(j);\n                t2=find(1001);\n                fa[t1]=t2;\n            }\n            if(a[j].z-r<=0)     //\u7279\u5224\u5e95\n            {\n                t1=find(j);\n                t2=find(0);\n                fa[t1]=t2;\n            }\n            for(int w=1;w<j;w++)\n            {\n                if(sqrt((a[j].x-a[w].x)*(a[j].x-a[w].x)+(a[j].y-a[w].y)*(a[j].y-a[w].y)+(a[j].z-a[w].z)*(a[j].z-a[w].z))<=2*r)       //\u770b\u662f\u5426\u76f8\u5207\u6216\u76f8\u4ea4\n                {\n                    t1=find(j);\n                    t2=find(w);\n                    fa[t1]=t2;\n                }\n            }\n        }\n        t1=find(0);\n        t2=find(1001);\n        if(t1==t2)\n            cout<<\"Yes\"<<endl;\n        else\n            cout<<\"No\"<<endl;\n    }\n    return 0;\n}\n```\n\n# update:\n\u8fd9\u7bc7\u9898\u89e3\u662f\u6211\u4e00\u5e74\u524d\u5199\u7684\uff0c\u6709\u4f4d\u5de8\u4f6c\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8bf4\u88abhack\u4e86\u3002\n\n\u849f\u84bb\u5728\u8fd9\u91cc\u8868\u793a\uff1ahack\uff1f\u4e0d\u53ef\u80fd\u7684\uff0c\u8fd9\u8f88\u5b50\u90fd\u4e0d\u53ef\u80fd\u88abhack\u7684\u3002\n\n\u53ea\u9700\u5c06\n```cpp\nif(sqrt((a[j].x-a[w].x)*(a[j].x-a[w].x)+(a[j].y-a[w].y)*(a[j].y-a[w].y)+(a[j].z-a[w].z)*(a[j].z-a[w].z))<=2*r)\n```\n\u8fd9\u4e00\u6bb5\u4ee3\u7801\u53d6\u4e2along long\u5c31\u884c\u4e86\u3002\n```cpp\nif(sqrt(1ll*(a[j].x-a[w].x)*(a[j].x-a[w].x)+1ll*(a[j].y-a[w].y)*(a[j].y-a[w].y)+1ll*(a[j].z-a[w].z)*(a[j].z-a[w].z))<=2*r)\n```",
        "postTime": 1510503450,
        "uid": 36933,
        "name": "zhy12138",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u534a\u5929\u5c45\u7136\u6ca1\u6709**\u56fe\u8bba**\u7684\u9898\u89e3\uff1f\u6211\u6765\u5206\u4eab\u4e00\u4e2a\u8003\u573a\u7684\u601d\u8def\u3002\n\n\u6709\u4e00\u4e9b\u56fe\u8bba\u57fa\u7840\u7684\u540c\u5b66\u90fd\u77e5\u9053\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u5e76\u4e0d\u90a3\u4e48\u50cf\u56fe\u8bba\u7684\u9898\u76ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5efa\u56e0\u9690\u5f0f\u56fe\u7684\u65b9\u5f0f\u89e3\u51b3\uff0c\u8fd9\u9898\u4ea6\u662f\u5982\u6b64\u3002\n\n**\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u865a\u8282\u70b9$0$\u8868\u793a\u5e95\u90e8\uff0c\u5bf9\u4e8e\u6240\u6709\u4e0e\u5176\u76f8\u4ea4\u76f8\u5207\u7684\u6d1e\u8fde\u8fb9\uff1b\u5efa\u7acb\u865a\u8282\u70b9$N+1$\u8868\u793a\u9876\u90e8\uff0c\u6240\u6709\u4e0e\u5176\u76f8\u4ea4\u76f8\u5207\u7684\u6d1e\u8fde\u8fb9\u3002** \u5bf9\u4e8e$i,j$\u82e5\u5176\u76f8\u4ea4\u76f8\u5207\u5219\u4e5f\u8fde\u8fb9\uff0c\u8fd9\u4e2a\u53ef\u7528\u7a7a\u95f4\u52fe\u80a1\u5b9a\u7406\u5224\u65ad\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5efa\u56fe\u4e5f\u662f\u6709\u5b66\u95ee\u7684\u3002\u5bf9\u4e8e$0\\to i$\u548c$i\\to n+1$\u7684\u8fb9\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5355\u5411\uff0c\u4f46\u662f\u5bf9\u4e8e$\\forall i,j$\uff0c\u5176$i\\to j$\u7684\u8fb9\u662f\u5fc5\u987b\u53cc\u5411\u7684\uff0c\u8fd9\u6837\u624d\u53ef\u4ee5\u5728\u5976\u916a\u4e2d\u81ea\u5982\u7684\u7a7f\u68ad\u3002\n\n\u7136\u540e\u5c31\u5957\u4e00\u4e2a$SPFA$\u6216$dij$\u677f\u5b50\uff0c\u76f4\u63a5\u4e0a\u6700\u77ed\u8def\uff0c\u5224\u65ad\u4e0e$n+1$\u662f\u5426\u5b58\u5728\u6700\u77ed\u8def\u5373\u53ef\uff0c\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <cstring>\n#include <iostream>\n#include <queue>\n#define ll long long\n#define inf 2147483647\nusing namespace std;\n\nstruct ed{\n\tll u,nex;\n}e[4000000];\nll t,n,h,r,st,fir[2000],x[2000],y[2000],z[2000];\nll d[2000],v[2000]; queue<ll> q;\n\nvoid add(ll x,ll y){e[++st].u=y; e[st].nex=fir[x]; fir[x]=st;}\n\nvoid spfa(ll b)\n{\n\tfor (int i=0;i<=n+1;i++) d[i]=inf/2,v[i]=0;\n\tq.push(b); d[b]=0; v[b]=1;\n\twhile (!q.empty())\n\t{\n\t\tll k=q.front(); q.pop(); v[k]=0;\n\t\tfor (ll i=fir[k];i;i=e[i].nex) \n\t\t{\n\t\t\tll u=e[i].u; if (d[u]>d[k]+1) {\n\t\t\t\td[u]=d[k]+1;\n\t\t\t\tif (!v[u]) v[u]=1,q.push(u);\n\t\t\t}\n\t\t}\n\t} \n}\n\nbool check(ll i,ll j){\n\treturn \n\t( (x[i]-x[j])*(x[i]-x[j]) + \n\t  (y[i]-y[j])*(y[i]-y[j]) + \n\t  (z[i]-z[j])*(z[i]-z[j]) <= 4*r*r);\n}\n\nll absf(ll x){return (x>0)?x:-x; }\n\nint main(){\ncin>>t;\nwhile (t--)\n{\n\tcin>>n>>h>>r;\n\tmemset(fir,0,sizeof(fir)); memset(e,0,sizeof(e)); st=0;\n\tfor (int i=1;i<=n;i++) cin>>x[i]>>y[i]>>z[i];\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (absf(z[i]-0)<=r) add(0,i),add(i,0);\n\t\tif (absf(z[i]-h)<=r) add(i,n+1),add(n+1,i);\n\t\tfor (int j=i+1;j<=n;j++) if (check(i,j)) add(i,j),add(j,i);\n\t}\n\tspfa(0); cout<<((d[n+1]==inf/2)?\"No\":\"Yes\")<<endl;\n}\n\treturn 0;\n}\n\n```",
        "postTime": 1572594283,
        "uid": 16552,
        "name": "\u8363\u8000\u706b\u5f71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011\u3010\u6700\u77ed\u8def\u3011"
    },
    {
        "content": "\u601d\u8def\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u54ea\u4e9b\u7a7a\u6d1e\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u6ce8\u610f\u628a\u5976\u916a\u7684\u4e0b\u8868\u9762\u548c\u4e0a\u8868\u9762\u4e5f\u60f3\u8c61\u6210\u4e00\u4e2a\u7a7a\u6d1e\uff0c\u6700\u540e\u5224\u65ad\u4e0a\u4e0b\u8868\u9762\u662f\u5426\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\n\n---\n\n$\\space\\space\\space\\space\\space P_1(x_1,y_1,z_1),P_2(x_2,y_2,z_2)$\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\n\n$\\Leftrightarrow\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2+(z_1-z_2)^2}\\le2r$\n\n$\\Leftrightarrow(x_1-x_2)^2+(y_1-y_2)^2+(z_1-z_2)^2\\le4r^2$\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u4e0d\u7528\u6d6e\u70b9\u6570\u5566\n\n---\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff08~~\u7801\u98ce\u6bd4\u8f83\u5947\u602a\uff0c\u8f7b\u55b7~~\uff09\n\n```cpp\n#include <cinttypes>\n#include <cstdint>\n#include <cstdio>\nusing i8 = std::int_fast8_t;\nusing i16 = std::int_fast16_t;\nusing i32 = std::int_fast32_t;\nusing i64 = std::int_fast64_t;\nusing std::scanf;\nusing std::puts;\nconst i16 n_MAX = 1000;\ni16 fat[n_MAX + static_cast<i16>(2)], rank[n_MAX + static_cast<i16>(2)];\nstatic struct\n{\n\ti32 x, y, z;\n}a[n_MAX + static_cast<i16>(1)]; // \u7a7a\u6d1e\ni16 Find(i16 x)\n{\n\treturn x == fat[x] ? x : fat[x] = Find(fat[x]); //\u8def\u5f84\u538b\u7f29\n}\ninline void Union(i16 x, i16 y)\n{\n\ti16 fx = Find(x), fy = Find(y);\n\tif (fx != fy)\n\t{\n\t\t// \u6309\u79e9\u5408\u5e76\n\t\tif (rank[fx] < rank[fy]) fat[fx] = fy;\n\t\telse\n\t\t{\n\t\t\tfat[fy] = fx;\n\t\t\tif (rank[fx] == rank[fy]) ++rank[fx];\n\t\t}\n\t}\n}\n// \u6c42\u67d0\u4e2a\u6570\u7684\u5e73\u65b9\ninline i64 sqr(i32 x)\n{\n\treturn static_cast<i64>(x) * static_cast<i64>(x);\n}\nint main()\n{\n\ti8 T;\n\ti16 n;\n\ti32 h, r, tmp1;\n\ti64 tmp2;\n\tscanf(\"%\" SCNdFAST8, &T);\n\twhile (T--)\n\t{\n\t\tscanf(\"%\" SCNdFAST16 \"%\" SCNdFAST32 \"%\" SCNdFAST32, &n, &h, &r);\n\t\t++n;\n\t\ttmp1 = h - r;\n\t\ttmp2 = static_cast<i64>(r) * static_cast<i64>(r) * static_cast<i64>(4);\n\t\tfor (i16 i = 0; i <= n; ++i)\n\t\t{\n\t\t\tfat[i] = i;\n\t\t\trank[i] = 0;\n\t\t}\n\t\tfor (i16 i = 1; i < n; ++i)\n\t\t{\n\t\t\tscanf(\"%\" SCNdFAST32 \"%\" SCNdFAST32 \"%\" SCNdFAST32, &a[i].x, &a[i].y, &a[i].z);\n\t\t\tif (a[i].z <= r) Union(static_cast<i16>(0), i); // \u53ef\u4ee5\u5230\u4e0b\u8868\u9762\n\t\t\tif (a[i].z >= tmp1) Union(i, n); // \u53ef\u4ee5\u5230\u4e0a\u8868\u9762\n\t\t}\n\t\tfor (i16 i = 2; i < n; ++i)\n\t\t{\n\t\t\tfor (i16 j = 1; j < i; ++j)\n\t\t\t{\n\t\t\t\tif (sqr(a[i].x - a[j].x) + sqr(a[i].y - a[j].y) + sqr(a[i].z - a[j].z) <= tmp2) Union(i, j); // \u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\n\t\t\t}\n\t\t}\n\t\tputs(Find(static_cast<i16>(0)) == Find(n) ? \"Yes\" : \"No\");\n\t}\n\treturn 0;\n}\n```\n\n---\n\n\u4f60\u4ee5\u4e3a\u8fd9\u5c31\u5b8c\u4e86\uff1f\u4e0d\u4e0d\u4e0d\n\n\u5f53\u6211\u770b\u5230\u4e00\u7bc7\u9898\u89e3\u63d0\u5230UOJ\u65f6\uff0c\u6211\u7a81\u7136\u610f\u8bc6\u5230UOJ\u53ef\u80fd\u6709\u8fd9\u9053\u9898\n\n\u7136\u540e\uff0c~~\u60f3\u7740\u80fd\u53cc\u500d\u7ecf\u9a8c~~\uff0c\u6211\u53bbUOJ\u4ea4\u4e86\u4e00\u53d1\n\n\u518d\u7136\u540e\u2026\u2026\u4e07\u6076\u7684Extra Test\u2026\u2026\n\n[97\u5206](http://uoj.ac/submission/364129)\n\n~~\u60ca\u4e0d\u60ca\u559c\uff0c\u610f\u4e0d\u610f\u5916\uff1f~~\n\n~~\u7ecf\u8fc7\u4ed4\u7ec6\u7684\u68c0\u67e5~~\uff0c\u6211\u53d1\u73b0\u9519\u5728`if (sqr(a[i].x - a[j].x) + sqr(a[i].y - a[j].y) + sqr(a[i].z - a[j].z) <= tmp2) Union(i, j);`\n\n`<=`\u5de6\u8fb9\u90a3\u73a9\u610f\u513f\u6709\u53ef\u80fd\u8d85\u51fa$64$\u4f4d\u6709\u7b26\u53f7\u6574\u578b\u7684\u8868\u793a\u8303\u56f4\uff01\n\n\u4e8e\u662f\u6211\u628a$64$\u4f4d**\u6709**\u7b26\u53f7\u6574\u578b\u6539\u6210$64$\u4f4d**\u65e0**\u7b26\u53f7\u6574\u578b\uff0c\u7ec8\u4e8e\u8fc7\u4e86\n\n[100\u5206](http://uoj.ac/submission/364132)\n\n---\n\n\u8fd9\u624d\u662f\u6700\u7ec8\u4ee3\u7801\uff08\u6ce8\u91ca\u8bf7\u770b\u4e0a\u9762\u90a3\u4efd\uff09\n\n```cpp\n#include <cinttypes>\n#include <cstdint>\n#include <cstdio>\nusing i8 = std::int_fast8_t;\nusing i16 = std::int_fast16_t;\nusing i32 = std::int_fast32_t;\nusing i64 = std::int_fast64_t;\nusing ui64 = std::uint_fast64_t;\nusing std::puts;\nusing std::scanf;\nconst i16 n_MAX = 1000;\ni16 fat[n_MAX + static_cast<i16>(2)], rank[n_MAX + static_cast<i16>(2)];\nstatic struct\n{\n\ti32 x, y, z;\n}a[n_MAX + static_cast<i16>(1)];\ni16 Find(i16 x)\n{\n\treturn x == fat[x] ? x : fat[x] = Find(fat[x]);\n}\ninline void Union(i16 x, i16 y)\n{\n\ti16 fx = Find(x), fy = Find(y);\n\tif (fx != fy)\n\t{\n\t\tif (rank[fx] < rank[fy]) fat[fx] = fy;\n\t\telse\n\t\t{\n\t\t\tfat[fy] = fx;\n\t\t\tif (rank[fx] == rank[fy]) ++rank[fx];\n\t\t}\n\t}\n}\ninline ui64 sqr(i32 x)\n{\n\treturn static_cast<ui64>(static_cast<i64>(x) * static_cast<i64>(x));\n}\nint main()\n{\n\ti8 T;\n\ti16 n;\n\ti32 h, r, tmp1[2];\n\tui64 tmp2;\n\tscanf(\"%\" SCNdFAST8, &T);\n\twhile (T--)\n\t{\n\t\tscanf(\"%\" SCNdFAST16 \"%\" SCNdFAST32 \"%\" SCNdFAST32, &n, &h, &r);\n\t\t++n;\n\t\ttmp1[0] = h - r;\n\t\ttmp1[1] = h + r;\n\t\ttmp2 = static_cast<ui64>(r) * static_cast<ui64>(r) * static_cast<ui64>(4);\n\t\tfor (i16 i = 0; i <= n; ++i)\n\t\t{\n\t\t\tfat[i] = i;\n\t\t\trank[i] = 0;\n\t\t}\n\t\tfor (i16 i = 1; i < n; ++i)\n\t\t{\n\t\t\tscanf(\"%\" SCNdFAST32 \"%\" SCNdFAST32 \"%\" SCNdFAST32, &a[i].x, &a[i].y, &a[i].z);\n\t\t\t// \u8bf7\u6ce8\u610f\uff0c\u4e0b\u9762\u4e24\u884c\u4e5f\u6709\u6539\u52a8\n\t\t\tif (a[i].z >= -r && a[i].z <= r) Union(static_cast<i16>(0), i);\n\t\t\tif (a[i].z >= tmp1[0] && a[i].z <= tmp1[1]) Union(i, n);\n\t\t}\n\t\tfor (i16 i = 2; i < n; ++i)\n\t\t{\n\t\t\tfor (i16 j = 1; j < i; ++j)\n\t\t\t{\n\t\t\t\tif (sqr(a[i].x - a[j].x) + sqr(a[i].y - a[j].y) + sqr(a[i].z - a[j].z) <= tmp2) Union(i, j);\n\t\t\t}\n\t\t}\n\t\tputs(Find(static_cast<i16>(0)) == Find(n) ? \"Yes\" : \"No\");\n\t}\n\treturn 0;\n}\n```\n\n---\n\n\u6e29\u99a8\u63d0\u793a\uff0c\u5982\u679c\u4f60\u60f3\u68c0\u9a8c\u6211\u7684\u9898\u89e3\u7684\u6b63\u786e\u6027\uff08~~\u7b80\u79f0\u6284\u4ee3\u7801~~\uff09\uff0c\u8bf7\u8bb0\u5f97\u5f00\u542fC++11\n\n\u53ef\u80fd\u4f1a\u5728\u8bc4\u8bba\u91cc\u8865\u9505\u3002",
        "postTime": 1568635285,
        "uid": 110634,
        "name": "zhanghengrui",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u5927\u5bb6\u90fd\u5199\u6df1\u641c\uff0c\u6211\u6765\u5199\u4e00\u7bc7\u5e7f\u641c  \n~~\u4f17\u6240\u5468\u77e5~~\u8fb9\u957f\u4e00\u6837\u7684\u56fe\u53ef\u4ee5\u7528BFS\u8dd1\u6700\u77ed\u8def  \n\u5148\u8f6c\u6362\u4e3a\u56fe\uff0c\u6bcf\u4e00\u4e2a\u7a7a\u6d1e\u4ee3\u8868\u4e00\u4e2a\u8282\u70b9\uff0c\u5728\u76f8\u4ea4\u6216\u76f8\u5207\u7684\u6d1e\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c0\u53f7\u4e3a\u5976\u916a\u5e95\u8282\u70b9\uff0cn+1\u4e3a\u5976\u916a\u9876\u8282\u70b9  \n\u4e00\u5b9a\u8981\u5f00long long~~\u4e0d\u7136\u4f60\u5c31\u4f1a\u50cf\u6211\u4e00\u6837\u4f53\u9a8c\u5bf9\u7740\u4e00\u5806\u6050\u6016\u7684\u6570\u636e\u4e0d\u77e5\u6240\u63aa~~\uff0c\u4f46\u53ef\u4ee5\u907f\u5f00\u5f00\u65b9  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct hole\n{\n\tlong long x,y,z;\n}ch[1005];\nlong long n,h,r;\nbool vis[1005];\nbool cut(hole a,hole b)\n{\n\tif(a.z==0)\n\t\treturn b.z<=r;\n\tif(b.z==h)\n\t\treturn h-a.z<=r;\n\treturn (a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)+(a.z-b.z)*(a.z-b.z)<=4*r*r;\n}\nbool bfs()\n{\n\tint now;\n\tqueue<int> q;\n\tq.push(0);\n\twhile(!q.empty())\n\t{\n\t\tnow=q.front();\n\t\tq.pop();\n\t\tif(vis[now])\n\t\t\tcontinue;\n\t\tif(now==n+1)\n\t\t\treturn true;\n\t\tvis[now]=true;\n\t\tfor(int i=1;i<=int(n)+1;i++)\n\t\t\tif(i!=now&&cut(ch[now],ch[i]))\n\t\t\t\tq.push(i);\n\t}\n\treturn false;\n}\nint main()\n{\n\tint cas;\n\tcin>>cas;\n\twhile(cas--)\n\t{\n\t\tcin>>n>>h>>r;\n\t\tfor(int i=1;i<=int(n);i++)\n\t\t\tcin>>ch[i].x>>ch[i].y>>ch[i].z;\n\t\tch[0].z=0;\n\t\tch[n+1].z=h;\n\t\tmemset(vis,false,sizeof(vis));\n\t\tif(bfs())\n\t\t\tcout<<\"Yes\"<<endl;\n\t\telse\n\t\t\tcout<<\"No\"<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1567172399,
        "uid": 182525,
        "name": "yangyujia18",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "### \u5e8f\uff1a\u6211\u5199\u8fd9\u4e2a\u9898\u65f6\uff0c\u57fa\u672c\u7a0b\u5e8f\u6846\u67b6\u5e76\u6ca1\u6709\u8017\u8d39\u591a\u5c11\u65f6\u95f4\uff0c\u4f46\u4e4b\u6240\u4ee5\u82b1\u8d39\u4e86\u81f3\u5c11\u4e24\u5c0f\u65f6\u6765\u505a\u8fd9\u4e2a\u9898\uff0c\u5f00\u59cb\u662f\u56e0\u4e3a\u8f93\u5165\u51faBUG\u4e86\uff1a\u4ece\u7b2c\u4e94\u4e2a\u6d4b\u8bd5\u70b9\u5f00\u59cb\u5168\u662fRE\uff0c\u81ea\u5df1\u8bd5\u7684\u8bdd\u5168\u662f\u8f93\u5165\u5230\u4e00\u534a\u5f39\u51fa\u4e00\u4e2a\u7a97\u53e3\uff0c\u8bf4\u7a0b\u5e8f\u8fd0\u884c\u51fa\u95ee\u9898\u4e86\uff0c\u5c31\u5361\u9000\u4e86\u3002\u3002\u3002\u6211\u4f1a\u5728\u7a0b\u5e8f\u4e2d\u8bf4\u5230\u7684\u3002\n### -------------------------\u5206\u754c\u7ebf----------------------------\n### \u672c\u9898\u7248\u4e3b\u7528\u7684\u662f\u5e7f\u641c\u7684\u529e\u6cd5\uff0c\u5148\u5224\u65ad\u662f\u5426\u5b58\u5728\u6ce1\u4f7f\u9876\u9762\u4e0e\u5e95\u9762\u5206\u522b\u4e0e\u6ce1\u76f8\u8fde\uff0c\u6709\u7684\u8bdd\uff0c\u5c06\u8fd9\u4e9b\u6ce1\u524d\u79fb\uff0c\u8868\u793a\u8fd9\u662f\u7b2c\u4e00\u8f6e\u7684\u201c\u4e0a\u7ee7\u6ce1\u201d\u3002\u627e\u5b8c\u540e\uff0c\u5982\u679c\u6ca1\u6709\u6ce1\u540c\u65f6\u4e0e\u9876\u9762\u548c\u5e95\u9762\u76f8\u8fde\uff0c\u5219\u518d\u5c06\u5269\u4e0b\u7684\u6ce1\u4f9d\u6b21\u641c\u7d22\uff0c\u770b\u662f\u5426\u5b58\u5728\u6ce1\uff0c\u4f7f\u6ce1\u5206\u522b\u4e8e\u524d\u9762\u627e\u5230\u7684\u201c\u4e0a\u7ee7\u6ce1\u201d\u76f8\u8fde\uff0c\u7136\u540e\u524d\u79fb\uff0c\u8fd9\u5c31\u662f\u7b2c\u4e8c\u8f6e\u7684\u201c\u4e0a\u7ee7\u6ce1\u201d\u3002\u82e5\u6b64\u65f6\u8fd8\u672a\u4e0e\u5e95\u9762\u76f8\u8fde\uff0c\u5219\u518d\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u627e\u7b2c\u4e09\u8f6e\uff0c\u7b2c\u56db\u8f6e\uff0c\u76f4\u5230\u4e0e\u5730\u9762\u76f8\u8fde\uff0c\u6216\u65e0\u6cd5\u76f8\u8fde\u4e3a\u6b62\u3002\n```c\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\nusing namespace std;\nchar data[21];//\u7528\u4e8e\u8bb0\u5f55\u6570\u636e\u7ec4\u7ed3\u679c\uff0c\u4fbf\u4e8e\u76f4\u89c2\u8f93\u51fa\nint cheese(int T)//\u7528\u4e8e\u5bfb\u627e\u7b54\u6848\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\n{\n    long long coor[1001][4]={0};//\u6ce8\u610f\uff1acoor\u6570\u7ec4\u53ea\u80fd\u653e\u5728\u51fd\u6570cheese\u91cc\u9762\uff0c\u5982\u679c\u653e\u5916\u9762\u7684\u8bdd\u5c31\u4f1a\u5361BUG\n    bool mark[1001]={0};//\u6807\u8bb0\u540e\u7ee7\u6ce1\uff0c\u4ee5\u514d\u91cd\u590d\u4ea4\u6362\u81f4WA\n    int n,head=1;//head\u8bb0\u5f55\u7b49\u5f85\u4ea4\u6362\u7684\u4f4d\u7f6e\n\tbool judge=0,judge2=0;//\u5224\u65ad\u6709\u65e0\u4ea4\u6362\uff0c\u53ca\u662f\u5426\u6709\u89e3\n\tlong long h,r;\n\tscanf(\"%d%lld%lld\",&n,&h,&r);//longlong\u8981\u7528lld,\u7528ld\u4f1aRE \n\tfor(int i=1;i<=n;i++)\n\t    scanf(\"%lld%lld%lld\",&coor[i][1],&coor[i][2],&coor[i][3]);//1\u662fx\u5750\u6807\uff0c2\u662fy,3\u662fz\n\tfor(int i=1;i<=n;i++)\n\t{\n\t   if(coor[i][3]+r>=h)//\u5f53\u8be5\u6ce1\u4e0e\u9876\u9762\u6709\u516c\u5171\u70b9\n\t   {\n\t       if(r>=coor[i][3]) return 1;//\u5f53\u8be5\u6ce1\u8fd8\u4e0e\u5e95\u9762\u6709\u516c\u5171\u70b9\uff0c\u5373\u6709\n\t       swap(coor[i],coor[head]);//\u4ea4\u6362\uff0c\u9760\u524d\u7684\u8868\u793a\u8be5\u6ce1\u53ef\u7528\u4e8e\u540e\u7ee7\u5224\u65ad\n\t       judge=1;\n\t       head++;//\u4ea4\u6362\u70b9\u540e\u79fb\n\t   }\n\t   else if(coor[i][3]<=r)//\u5f53\u8be5\u6ce1\u4e0e\u5e95\u9762\u6709\u516c\u5171\u70b9\n\t    \tjudge2=1;\n    }\n\tif(judge==0||judge2==0) return 0;//\u5982\u679c\u6ca1\u6709\u6ce1\u4e0e\u9876\u9762\u53ca\u6ca1\u6709\u6ce1\u4e0e\u5e95\u9762\u6709\u516c\u5171\u70b9\uff0c\u5373\u65e0\u89e3\n\tint head2=1;\n\twhile(judge==1)//\u5f53\u4ecd\u53ef\u80fd\u6709\u89e3\uff0c\u4f46\u82e5judge==0\uff0c\u5219\u518d\u6ca1\u6709\u6ce1\u80fd\u4e0e\u9876\u9762\u8054\u901a\u4e86\n\t{\n\t   int t=head2;//t\u8868\u793a\u6b64\u523b\u9700\u5904\u7406\u7684\u4e0a\u7ee7\u6ce1\n\t   judge=0;\n\t   head2=head;//head2\u8868\u793a\u6b64\u65f6\u53ef\u80fd\u7684\u540e\u7ee7\u6ce1\n\t   for(int i=t;i<head2;i++)\n\t   {\n\t     for(int j=head2;j<=n;j++)\n\t     {\n\t       if(abs(coor[i][3]-coor[j][3])>2*r||\n\t    \t abs(coor[i][1]-coor[j][1])>2*r||\n\t         abs(coor[i][2]-coor[j][2])>2*r||//\u957f\u3001\u5bbd\u3001\u9ad8\u7684\u5dee\u5927\u4e8e2r,\u5219\u65e0\u4ea4\u70b9\uff0c\u60f3\u4e00\u60f3\u4e3a\u5565\u662f2r\n    \t     pow(coor[i][3]-coor[j][3],2)+pow(coor[i][1]-coor[j][1],2)+pow(coor[i][2]-coor[j][2],2)>pow(2*r,2))\n             //\u5de6\u53f3\u540c\u65f6\u5e73\u65b9\u5c31\u9171\u7d2b\u6ef4 \n\t    \t continue;//\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u5e72\u6389\n\t       else\n\t       {\n\t\t\t judge=1;\n\t\t\t if(coor[j][3]<=r) return 1;//\u5982\u679c\u5df2\u7ecf\u5230\u5e95\u9762\u4e86\uff0c\u5c31\u6709\u89e3\n\t\t\t else if(mark[j]==0)//\u8be5\u6ce1\u672a\u4ea4\u6362\u8fc7\u5f88\u91cd\u8981!!!\u5426\u5219\u4f1aWA\n\t\t\t {\n\t\t    \tswap(coor[j],coor[head]);//\u5c06\u4e0b\u4e00\u8f6e\u7684\u4e0a\u7ee7\u6ce1\u4ea4\u6362\u8fc7\u6765\n\t\t\t    head++;\u5e26\u4ea4\u6362\u7684\u4f4d\u7f6e\u540e\u79fb\n\t\t\t    mark[head]=1;//\u8be5\u6ce1\u6807\u8bb0\u4e3a\u5df2\u4ea4\u6362\u8fc7\n\t\t\t }\n\t\t   }\n\t\t  }\n\t\t}\n\t}\n\treturn 0;//\u65e0\u89e3\n}\nint main()\n{\n    int T;\n    cin>>T;\n    for(int i=1;i<=T;i++)\n    {\n      if(cheese(i)==1) data[i]='Y';//cheese(i)==1\u8868\u793a\u627e\u5230\u89e3\u4e86\n\t  else data[i]='N';//\u5426\u5219\u65e0\u89e3\n    }//\u4fdd\u5b58\uff0c\u5229\u4e8e\u76f4\u89c2\u5730\u8f93\u51fa\n    for(int i=1;i<=T;i++)\n    {\n      if(data[i]=='Y') cout<<\"Yes\\n\";\n      else cout<<\"No\\n\";\n    }//\u76f4\u89c2\u5730\u8f93\u51fa\uff0chh\n    return 0;\n}\n```\n\u5176\u5b9e\uff0c\u8fd9\u9898\u6211\u539f\u672c\u6700\u591a\u53ea\u8981\u63d0\u4ea43\u6b21\u7684\uff0c\u4f46\u6709n\u6b21\u6211\u6ca1\u6709\u5c06\uff08\u4e3a\u4e86\u66f4\u76f4\u89c2\u5730\u8f93\u51fa\u800c\u9020\u7684\uff09freopen\u6587\u672c\u8f93\u51fa\u683c\u5f0f\u7ed9\u5e72\u6389\uff0c\u4e8e\u662f\u4e4e\u3002\u3002\u3002\u3002\u3002\u5e78\u597d\u8fd9\u9898\u53ea\u662f\u8981\u5224\u65ad\u6709\u6ca1\u6709\u89e3\uff0c\u6ca1\u6709\u8981\u6211\u4eec\u8f93\u51fa\u8def\u5f84\uff0c\u4e0d\u7136\u3002\u3002\u3002\u3002\u3002\u3002\u4f46\u6ca1\u4e8b\uff0cn\u5e74\u540e\u6211\u4e00\u5b9a\u4f1a\u5c06\u8fd9\u9898\u7ed9\u9020\u51fa\u6765\u7684\uff0chh\u3002\u3002\u3002\u3002\u3002\u3002\u4f46\u662f\uff0c\u7eb5\u7136\u5982\u6b64\uff0c\u6211\u8fd8\u5f97\u5410\u69fd\u4e00\u53e5\uff1a\u4e3a\u54c8\u4f1a\u6709\u6ce1\u5728\u5976\u916a\u5916\u9762\u54c8",
        "postTime": 1562770794,
        "uid": 180473,
        "name": "Sherlock_Ezreal",
        "ccfLevel": 0,
        "title": "\u4ee4\u4eba\u7edd\u671b\u7684 P3958 \u300a\u5976\u916a\u300b"
    },
    {
        "content": "\u8bdd\u8bf4\u672c\u849f\u84bb\u662f\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff08~~\u8fd8\u4e0d\u662f\u6700\u4f18\u89e3~~\uff09\n\n\u867d\u7136\u90fd\u8bf4\u8fd9\u4e2a\u9898dfs\u5f88\u5feb\uff0c\u4f46\u672c\u849f\u84bb\u7531\u4e8e\u4ee5\u524d\u5199dfs\u7ecf\u5e38\u7206\u6808\uff0c\u5bf9dfs\u6709\u83ab\u540d\u7684\u6050\u60e7\uff0c\u6240\u4ee5\u6765\u6c34\u4e00\u6ce2\u5e76\u67e5\u96c6\u7684\u9898\u89e3\n\n~~\u8bdd\u8bf4\u5e76\u67e5\u96c6\u4e5f\u786e\u5b9e\u597d\u60f3\u3002\u3002\u3002\u5427~~\n\n\u4e0d\u8fc7\u8fd8\u662f\u60f3\u6765\u8bd5\u8bd5\u6c34\uff0c\u671b\u5ba1\u6838\u5927\u4f6c\u901a\u8fc7\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#define ll long long\nusing namespace std;\nll n,h,r,fa[1010],x[1010],y[1010],z[1010];\nint t,a[1010],b[1010],tot1,tot2;\nint find(int x)//\u627e\u7239\u64cd\u4f5c \n{\n\tif(fa[x]==x)return x;\n\treturn fa[x]=find(fa[x]);\n}\n//\u8fd9\u4e2a\u51fd\u6570\u7684\u7c7b\u578b\u4e00\u5b9a\u8981\u8bbe\u7f6e\u6210double\uff0c\u5426\u5219\u4f1a\u6709\u4e24\u4e2a\u70b9\u56e0\u4e3a\u7cbe\u5ea6\u95ee\u9898\u901a\u4e0d\u8fc7\ndouble dis(ll x1,ll x2,ll y1,ll y2,ll z1,ll z2)//\u6c42\u4e24\u70b9\u8ddd\u79bb \n{\n\treturn sqrt(pow((x1-x2),2)+pow((y1-y2),2)+pow((z1-z2),2));\n}\nint main()\n{\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\ttot1=0,tot2=0;\n\t\tscanf(\"%lld%lld%lld\",&n,&h,&r);\n\t\tfor(int i=1;i<=n;i++)//\u521d\u59cb\u5316\u5e76\u67e5\u96c6 \n\t\tfa[i]=i;\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%lld%lld%lld\",&x[j],&y[j],&z[j]);\n\t\t\tif(z[j]+r>=h)tot1++,a[tot1]=j;//\u5982\u679c\u8fd9\u4e2a\u70b9\u80fd\u8d70\u5230\u4e0a\u8868\u9762\uff0c\u5219\u5b58\u5165a\u6570\u7ec4\uff08\u7b80\u5355\u7c97\u66b4\u7684\u53d8\u91cf\u547d\u540d\u6cd5\uff09 \n\t\t\tif(z[j]-r<=0)tot2++,b[tot2]=j;//\u5982\u679c\u8fd9\u4e2a\u70b9\u80fd\u8d70\u5230\u4e0b\u8868\u9762\uff0c\u5219\u5b58\u5165b\u6570\u7ec4\n\t\t\tfor(int k=1;k<j;k++)//\u770b\u770b\u6709\u6ca1\u6709\u548c\u4ee5\u524d\u7684\u6d1e\u76f8\u4ea4 \n\t\t\t{ \n\t\t\t\tif(dis(x[j],x[k],y[j],y[k],z[j],z[k])<=r+r)//\u5982\u679c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5927\u4e8e2*r\u5219\u8fdb\u884c\u5408\u5e76\n\t\t\t\t{\n\t\t\t\t\tint w=find(j),v=find(k);//\u5e76\u67e5\u96c6\u6807\u51c6\u5199\u6cd5\uff0c\u4e0d\u89e3\u91ca \n\t\t\t\t\tif(w!=v)fa[w]=v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool ju=false;\n\t\tfor(int j=1;j<=tot1;j++)//\u904d\u5386a\u3001b\u6570\u7ec4\u5185\u7684\u70b9\uff08\u5373\u4e0e\u4e0a\u4e0b\u8868\u9762\u6709\u4ea4\u96c6\u7684\u70b9\uff09 \n\t\t{\n\t\t\tfor(int k=1;k<=tot2;k++)\n\t\t\t{\n\t\t\t\tif(find(a[j])==find(b[k]))//\u5982\u679c\u4e24\u4e2a\u70b9\u7956\u5148\u76f8\u540c\u5219\u8bf4\u660e\u8fd9\u662f\u4e00\u6761\u901a\u8def\n\t\t\t\t{\n\t\t\t\t\tprintf(\"Yes\\n\");ju=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ju==true)break;\n\t\t}\n\t\tif(ju==false)printf(\"No\\n\");//\u4e0d\u7136\u5c31\u6ca1\u6709\u901a\u8def \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1541119455,
        "uid": 105123,
        "name": "Protons",
        "ccfLevel": 0,
        "title": "P3958 \u5976\u916a \u9898\u89e3"
    },
    {
        "content": "\u601d\u8def\uff1a\u5e7f\u641c\n\n\u5148\u6392\u5e8f\uff0c\u9ad8\u5ea6\u5c0f\u7684\u653e\u5728\u524d\u9762\n\u4f9d\u6b21\u904d\u5386\u6bcf\u4e2a\u70b9\uff0c\u8bbe\u7f6e\u4e00\u4e2av\u6570\u7ec4\u5224\u65ad\u6709\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\uff08\u6bcf\u4e2a\u6570\u53ea\u4f1a\u88ab\u8bbf\u95ee\u8fc7\u4e00\u6b21\uff09\n\u540c\u65f6\u8bb0\u5f55\u6bcf\u4e2a\u7a7a\u6d1e\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u9ad8\u70b9\u548c\u6700\u4f4e\u70b9\uff0c\u5982\u679c\u540c\u65f6\u6ee1\u8db3\u6700\u9ad8\u70b9>=h\u548c\u6700\u4f4e\u70b9<=0\u5219\u7b54\u6848\u4e3aYes\uff0c\u5982\u679c\u6240\u6709\u7684\u7a7a\u6d1e\u90fd\u65e0\u6cd5\u5230\u8fbe\uff0c\u5219\u7b54\u6848\u4e3aNo\n\u6ce8\u91ca\u89c1\u4ee3\u7801\n\u52a1\u6284\u4ee3\u7801\n\u4ee3\u7801\u5982\u4e0b\uff1a\n------------\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<queue>\nusing namespace std;\n#define N 1001\n#define ll long long//\u5f00\u4e2along long\u9632\u6b62\u7206int\nll t,n,h,r;\nqueue<int> q;\nbool v[N];\nstruct nod{\n    ll x,y,z,tot,minn;//tot\u548cminn\u5206\u522b\u8bb0\u5f55a[i]\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u9ad8\u70b9\u548c\u6700\u4f4e\u70b9\n}a[N];\nbool cmp(nod a,nod b){//\u6392\u5e8f\uff0c\u4ee5z\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\n    if(a.z==b.z){\n        if(a.x==b.x){\n        \treturn a.y<b.y;\n\t\t}\n\t\ta.x<b.x;\n    }else{\n        return a.z<b.z;\n    }\n}\nint bfs(){\n    while(!q.empty()){\n        ll x=q.front();\n        q.pop();\n        for(int i=1;i<=n;i++){\n        \tif(i==x||v[i]){\n        \t\tcontinue;\n\t\t\t}\n            if(!v[i]){\n                double dis=sqrt(((double)a[x].x-(double)a[i].x)*((double)a[x].x-(double)a[i].x)+((double)a[x].y-(double)a[i].y)*((double)a[x].y-(double)a[i].y)+((double)a[x].z-(double)a[i].z)*((double)a[x].z-(double)a[i].z));//\u8ba1\u7b97\u8ddd\u79bb\n                if(dis<=(double)(r)*(double)(2)){//\u5982\u679c\u4e24\u4e2a\u7403\u8054\u901a\n                    q.push(i);\n                    v[i]=true;\n                    //cout<<x<<\" \"<<i<<endl;\n                    a[i].tot=a[x].tot=max(a[i].tot,a[x].tot);\n                    a[i].minn=a[x].minn=min(a[i].minn,a[x].minn);\n                    //cout<<a[i].tot<<\" \"<<a[i].minn<<endl;\n                    if(a[i].tot>=h&&a[i].minn<=0){//\u540c\u65f6\u6ee1\u8db3\u624d\u53ef\u4ee5\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n\treturn false;//\u6ce8\u610f\u8fd9\u91ccreturn\u8981\u5728while\u5916\u9762\uff0c\u6211\u5c31\u4e00\u5f00\u59cb\u6253\u5728\u4e86\u91cc\u9762\uff0c\u7136\u540ewawawawa....\u7684\u4e00\u58f0\u54ed\u4e86\u51fa\u6765\n}\nint mian(){//\u610f\u4f1a\n    scanf(\"%d\",&t);\n    while(t--){\n        scanf(\"%d%d%d\",&n,&h,&r);\n        memset(a,0,sizeof(a));//\u6ce8\u610f\u6e05\u7a7a\u6570\u7ec4\n        memset(v,false,sizeof(v));\n        while(!q.empty()){\n            q.pop();\n        }\n        ll mah=-2147483647;//\u6ce8\u610f\u6700\u5927\u503c\u7684\u521d\u503c\u8981\u8db3\u591f\u5c0f\n        ll mih=2147483647;\n        for(int i=1;i<=n;i++){\n            scanf(\"%d%d%d\",&a[i].x,&a[i].y,&a[i].z);\n            mah=max(mah,a[i].z);//\u5904\u7406\u6240\u6709\u8f93\u5165\u7684\u6570\u636e\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\n            a[i].tot=a[i].z+r;\n            a[i].minn=a[i].z-r;\n            mih=min(mih,a[i].z);\n          //  cout<<tot[i]<<\" \"<<minn[i]<<endl;\n        }\n        if(n==1){//\u7279\u76d8n=1\u7684\u60c5\u51b5\n        \tif(a[1].z+r>=h&&a[1].z-r<=0){\n        \t\tprintf(\"Yes\\n\");\n        \t\tcontinue;//continue\u4e0d\u8981\u5fd8\n            }else{\n                printf(\"No\\n\");\n                continue;\n            }\n        }\n        if((mah+r)<h){//\u5982\u679c\u6700\u9ad8\u7684\u52a0\u534a\u5f84\u8fd8\u6bd4h\u4f4e\uff0c\u5219false\n        //\tcout<<\"---\"<<endl;\n            printf(\"No\\n\");\n            continue;\n        }\n        if((mih-r)>0){//\u540c\u4e0a\n        \t//cout<<\"-\"<<endl;\n            printf(\"No\\n\");\n            continue;\n        }\n        sort(a+1,a+n+1,cmp);//\u6392\u5e8f\n        bool pd=false;\n        for(int i=1;i<=n;i++){\n            if(!v[i]){\n                q.push(i);\n                v[i]=true;\n                if(bfs()){\n                    printf(\"Yes\\n\");\n                    pd=true;\n                    break;\n                }\n            }\n        }\n        if(pd){\n            continue;\n        }else{\n            printf(\"No\\n\");\n        }\n    }\n    return 0;\n}\n```\n\u6700\u540e\u795d\u5927\u5bb6noip2018\u53d6\u5f97\u81ea\u5df1\u6ee1\u610f\u7684\u597d\u6210\u7ee9",
        "postTime": 1540977836,
        "uid": 64558,
        "name": "Alan0627",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u672c\u9898\u7528**\u5e76\u67e5\u96c6**\u52a0\u4e0a\u4e00\u70b9\u70b9\u7684~~\u51e0\u4f55\u8fd0\u7b97~~\u3002\n\n\u7528\u7a7a\u95f4\u5185\u4e24\u70b9\u7684\u8ddd\u79bb\u516c\u5f0f\uff08\u9898\u76ee\u4e2d\uff09\u6c42\u51fa**\u4e24\u4e2a\u7a7a\u6d1e\u7403\u5fc3\u7684\u8ddd\u79bb**\u3002\n\n\u5728\u8f93\u5165\u7684\u65f6\u5019\uff0c\u7528\u7ed3\u6784\u4f53\u53e6\u5b58\u6b64\u7a7a\u6d1e\u7684**\u4e0a\u4e0b\u8868\u9762**\uff0c\u5e76\u7528**\u4e0a\u8868\u9762\u4ece\u5c0f\u5230\u5927\u6392\u5e8f**\u3002\n\n\u5982\u679c**\u8ddd\u79bb<=2r**,\u90a3\u4e48\u4e24\u4e2a\u7a7a\u6d1e\u76f8\u4ea4\u6216\u76f8\u5207\uff0c\u90a3\u4e48\u628a\u8fd9\u4e24\u4e2a\u7a7a\u6d1e\u7edf\u4e00\u7236\u8282\u70b9\u3002\n\n\u63a5\u7740\u7edf\u8ba1\u4e0b\u8868\u9762**<=0**\uff08\u53ef\u80fd\u57280\u4ee5\u4e0b\uff09\u7684\u7a7a\u6d1e\u7684\u4e2a\u6570\u548c\u4e0a\u8868\u9762>=h\u7684\u4e2a\u6570\u3002\n\n\u6700\u540e\u679a\u4e3e\uff0c\u770b\u662f\u5426\u5b58\u5728\u4e0b\u8868\u9762<=0\u548c\u4e0a\u8868\u9762>=0\u7684\u4e24\u4e2a\u7a7a\u6d1e\u7236\u8282\u70b9\u76f8\u540c\u3002```c\n```\n#include \"cstdio\"\n\n#include \"iostream\"\n\n#include \"algorithm\"\n\n#define Maxn 1005\n\nusing namespace std;\n\ntypedef long long ll;\n\nstruct node{\n\n\tll x,y,z;\n    \n\tll h1,h2;\n    \n}f[Maxn];\n\nll fa[Maxn];\n\nll n,h,r;\n\nll pf(ll x)\n\n{\n\n\treturn x*x;\n    \n}\n\nbool work(ll x,ll y)\n\n{\n\n\tif(pf(f[x].x-f[y].x)+pf(f[x].y-f[y].y)+pf(f[x].z-f[y].z)<=pf(2*r))\n    \n\treturn true;\n\treturn false;\n}\nll find(ll x)\n{\n\n\treturn fa[x]==x?x:fa[x]=find(fa[x]);\n    \n}\n\nvoid join(ll x,ll y)\n\n{\n\n\tif(find(x)!=find(y))\n    \n\tfa[find(x)]=find(y);\n    \n}\n\nbool cmp(node a,node b)\n\n{\n\n\treturn a.h1<b.h1;\n    \n}\n\nint main()\n\n{\n\n\tll t;\n    \n\tscanf(\"%lld\",&t);\n    \n\twhile(t--)\n\t{\n    \n\t\tll ok=1;\n\tscanf(\"%lld %lld %lld\",&n,&h,&r);\n\tfor(ll i=1;i<=n;i++)\n\tfa[i]=i;\n\tfor(ll i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld %lld %lld\",&f[i].x,&f[i].y,&f[i].z);\n\t\tf[i].h1=f[i].z+r;\n\t\tf[i].h2=f[i].z-r;\n\t}\n\tsort(f+1,f+n+1,cmp);\n\tfor(ll i=1;i<=n;i++)\n\t{\n\t\tfor(ll j=i+1;j<=n;j++)\n\t\t{\n\t\t\tif(work(i,j))\n\t\t\tjoin(i,j);\n\t\t}\n\t}\n\tll from,to;\n\tfrom=to=0;\n\tfor(ll i=1;i<=n;i++)\n\t{\n\t\tif(f[i].h1>=h)\n\t\tto++;\n\t\tif(f[i].h2<=0)\n\t\tfrom++;\n\t}\n\tfor(ll i=1;i<=from;i++)\n\t{\n\t\tfor(ll j=n,k=1;k<=to;k++,j--)\n\t\t{\n\t\t\tif(find(i)==find(j))\n\t\t\t{\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t\tok=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!ok)\n\t\tbreak;\n\t}\n\tif(!ok)\n\tcontinue;\n\tprintf(\"No\\n\");\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1534142391,
        "uid": 25893,
        "name": "lydon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "# \u4ee3\u7801\n\n\uff08~~\u60f3\u76f4\u63a5\u8981\u4ee3\u7801~~\uff09\n\n\u7f51\u5740https://kongbai-space.blog.luogu.org/p3958-nai-lao-cheng-xu\n\n# \u95f2\u8bdd\n\n\u8fd8\u8bb0\u5f97\u90a3\u5e74~~\uff08\u597d\u5427\uff0c\u5c31\u662f\u53bb\u5e74\uff09~~\uff0c\u5728X\u5e02X\u4e2d\u7684\u673a\u623f\uff0c\u770b\u5230\u63d0\u9ad8\u7ec4DAY2\u8bd5\u9898\u7684\u611f\u53d7\u3002\u7c97\u7565\u7684\u626b\u4e86\u4e00\u773c\u8bd5\u9898\uff0c\u2014\u2014\u597d\u50cf\u90fd\u5f88\u96be\u8bf6\u3002\u7136\u540e\uff0c\u5c31\u6311\u4e86\u4e00\u4e2a\u770b\u8d77\u6765\u6bd4\u8f83\u8f6f\u7684\u67ff\u5b50\u634f\u2014\u2014cheese\u3002\n\n\u4f3c\u4e4e\u662f\u56e0\u4e3a\u4eba\u54c1\uff0c\u9009\u4e2d\u4e86DAY2\u552f\u4e00\u4e00\u9053\u6c34\u9898\u3002\u4e5f\u4e0d\u8bb0\u5f97\u82b1\u4e86\u591a\u957f\u65f6\u95f4\uff0c\u53cd\u6b63\u5728\u5199\u5b8c\u4ee3\u7801\uff0c\u68c0\u67e5\u4e4b\u540e\uff0c\u2014\u2014\u73a9\u4e86\u81f3\u5c11\u4e00\u4e2a\u5c0f\u65f6\u7684\u201c\u8d2a\u5403\u86c7\u201d\u3001\u201c\u4e94\u5b50\u68cb\u201d\u2026\u2026\n\n\u8003\u8bd5\u7ed3\u675f\uff0c\u51fa\u95e8\uff0c\u548c\u6211\u4eec\u73ed\u7684\u795e\u7287\u3001\u5927\u4f6c~~\uff08\u8fd9\u8bcd\u662f\u548c\u6211\u4eec\u73ed\u4e00\u5e2e\u4e0d\u6b63\u7ecf\u7684MUNer\u5b66\u7684\uff09~~\u8ba8\u8bba\u3002\u8ba8\u8bba\u5230cheese\u65f6\u5c31\u8499\u4e86\uff0c\u597d\u5427\uff0c\u6ca1\u6709\u4eba\u548c\u6211\u7528\u4e00\u6837\u7684\u7b97\u6cd5\u3002\u5927\u4f6c~~\uff08\u539f\u8c05\u6211\u7528\u8fd9\u4e2a\u8bcd\u5427\uff09~~\u4eec\u8bf4\u4e86\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u7b97\u6cd5\uff0c\u53cd\u6b63\u6211\u662f\u4e00\u8138\u61f5\u3002\n\n\u4e0d\u8fc7\u6b63\u6240\u8c13\u5929\u9053\u597d\u8f6e\u56de\uff0c\u67d0\u4e9b\u795e\u7287\u88c5X\u8fc7\u5ea6\uff0c\u597d\u50cf\u7206\u4e86\u4e00\u4e2a30\u5206\u3002\u800c\u6211\uff0c**\u611f\u8c22\u4f1f\u5927\u7684NOIP\u7684\u6570\u636e**\uff0c\u8ba9\u6211AC\u4e86\u8fd9\u9053\u9898\u3002\n\n# \u601d\u8def\u6982\u8ff0\n\n\u95f2\u8a00\u5c11\u53d9\uff0c\u4e66\u5f52\u6b63\u4f20\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u672c\u9898\u7684\u601d\u8def\u3002\n\n\u65f6\u95f4\u6548\u7387\uff1aO[T*(n^n)*logn]\n\n### 1.\u77e5\u8bc6\u51c6\u5907\n\n#### \uff081\uff09\u7a7a\u95f4\u4e24\u70b9\u8ddd\u79bb\u516c\u5f0f\uff1a\n\n\u89c1\u9898\u76ee\u3002\n\n#### \uff082\uff09\u5224\u65ad\u4e24\u5706\u662f\u5426\u76f8\u5207\u6216\u76f8\u4ea4\n\n\u4e24\u7403\u534a\u5f84\u4e4b\u548c-\u4e24\u7403\u5706\u5fc3\u8ddd\u79bb>=0\n\uff08r1+r2     -d           >=0\uff09\u65f6\uff0c\u6761\u4ef6\u6ee1\u8db3\u3002\n\n#### \uff083\uff09\u5e76\u67e5\u96c6\n\n\u7ffb\u4e66\u3002\n\n### 2.\u5927\u81f4\u601d\u8def\n\n#### \uff081\uff09\u8bfb\u5165\n\n\u4e0d\u8d58\u8ff0\u3002\n\n#### \uff082\uff09\u627e~~\u201c\u7238\u7238~\u201d~~\n\n\u4ee5n^n\u7684\u6548\u7387\uff0c\u4e24\u4e2a\u4e24\u4e2a\u7684\u627e\u76f8\u4ea4\u7684\u5706\uff0c\u5e76\u628a\u5b83\u4eec\u653e\u5728\u540c\u4e00\u4e2a\u201c\u7238\u7238\u201d\uff08\u6811\u6839\uff09\u4e0b\u3002\n\n#### \uff083\uff09\u5224\u65ad\u6811\u4e2d\u662f\u5426\u6709\u5706\u63a5\u89e6\u5976\u916a\u9876\u90e8\n\n\u65b9\u6cd5\uff1a\u5976\u916a\u9ad8-\u5706\u5fc3\u7eb5\uff08\uff1f\uff09\u5750\u6807<=r\n\n\u82e5\u7b26\u5408\u6761\u4ef6\uff0c\u5373\u5c06\u8be5\u5706\u6240\u5728\u7684\u6811\u6253\u4e0a\u201c\u5230\u8fbe\u9876\u90e8\u201d\u7684\u6807\u8bb0\u3002\n\n#### \uff084\uff09\u5224\u65ad\u6811\u4e2d\u662f\u5426\u6709\u5706\u63a5\u89e6\u5976\u916a\u5e95\u90e8\n\n\u4e0e\uff083\uff09\u7c7b\u4f3c\u3002\n\u4e0d\u518d\u8d58\u8ff0\u3002\n\n#### \uff085\uff09\u5bfb\u627e\uff083\uff09\u3001\uff084\uff09\u5747\u7b26\u5408\u7684\u6811\uff0c\u8f93\u51faYes/No\n\n### 3.\u603b\u7ed3\n\n\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u672c\u9898\u5c5e\u4e8e\u6bd4\u8f83\u6c34\u7684\u4e00\u9898\u3002\u8fd9\u9898\u7684\u8003\u5bdf\u70b9\u8fd8\u7b97\u6bd4\u8f83\u660e\u6670\uff0c\u5373\u5e76\u67e5\u96c6\uff0c\u53ea\u4e0d\u8fc7\u5305\u4e0a\u4e86\u4e00\u5c42\u4e0d\u592a\u9ad8\u660e\u7684\u5916\u8863\u3002\n\n~~\uff08\u4e0d\u8fc7\u8bdd\u8bf4\u4f1a\u6765\uff0c\u8fd1\u51e0\u5e74NOIP\u7684\u5916\u8863\u5305\u7684\u90fd\u4e0d\u600e\u4e48\u9ad8\u660e\uff09~~\n\n\u603b\u4e4b\uff0c\u672c\u9898\u662f\uff1a\n\n\u5e76\u67e5\u96c6+\u4e00\u4e9b\u7b80\u5355\u7684\u6570\u5b66\u65b9\u6cd5\u3002",
        "postTime": 1517577424,
        "uid": 30829,
        "name": "\u767d_white",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u767d\u4e22\u4e00\u767e\u5206\u7684\u5fc3\u60c5\u9700\u8981\u5e73\u590d\n\n\n**\u6240\u6709\u53d8\u91cf\u90fd\u8981\u521d\u59cb\u5316\uff01\uff01**\n\n**\u6240\u6709\u53d8\u91cf\u90fd\u8981\u521d\u59cb\u5316\uff01\uff01**\n\n**\u6240\u6709\u53d8\u91cf\u90fd\u8981\u521d\u59cb\u5316\uff01\uff01**\n\n\n\u9700\u8981\u5f15\u8d77\u6ce8\u610f\u7684\u662f** C++11\u624d\u652f\u6301\u7c7b\u6210\u5458\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316** \u800cNOIP\u5927\u6982\u662f\u4e0d\u884c\u7684 \u6211\u5c31\u683d\u5728\u4e86\u8fd9\u4e0a\u9762\n\n\u81ea\u5df1\u7533\u8bf7\u7684\u52a8\u6001\u5185\u5b58\u4e00\u5b9a\u8bb0\u5f97\u91ca\u653e \u4e0d\u7136\u7206\u4e86\u5185\u5b58\u5c31\u51c9\u4e86 \u61d2\u5f97\u8bdd\u5c31\u7528\u667a\u80fd\u6307\u9488 \u4e0d\u8fc7\u4e0d\u5f00\u4f18\u5316\u7684\u8bdd\u8fd8\u662f\u614e\u7528\u6bd4\u8f83\u597d\n\n\u6211\u505a\u9898\u7684\u65f6\u5019\u6ca1\u60f3\u8d77\u6765\u641c\u7d22 \u751a\u81f3\u5fd8\u4e86\u5e76\u67e5\u96c6 \u5c31\u60f3\u7740\u66b4\u529b\u8fde\u901a \u6240\u6709\u7684\u7a7a\u6d1e\u53bb\u5411\u76f8\u8fde\u63a5\u7a7a\u6d1e\u5e7f\u64ad\u72b6\u6001\n\n\n\u627e\u5230\u4e00\u4e2a\u540c\u65f6\u8fde\u901a\u4e0a\u4e0b\u8868\u9762\u7684\u7a7a\u6d1e\u5c31\u662fYes \u5426\u5219No\n\n\n\u6211\u7684\u4ee3\u7801\u4f18\u5316\u7684\u5f88\u5dee \u8dd1\u4e86900ms \u4f46\u4f30\u8ba1\u5b98\u65b9\u6570\u636e\u4e5f\u80fd\u8fc7\n\n\n\u7528\u7684\u662fOO \u4e00\u5f00\u59cb\u7528\u7684STL\u7684vector \u540e\u6765\u4e3a\u4e86\u6027\u80fd\u6539\u6210\u4e86\u6570\u7ec4\u52a0\u5c3e\u540e\u6307\u9488\u7684\u5f62\u5f0f\n\n\n```cpp\n#include<iostream>\nusing namespace std;\n\nclass _Bubble;\nclass Cheese\n    {\n    long double distt2(const _Bubble*, const _Bubble*)const;\n    void ChecknewAdjoin();\n    public:\n        Cheese(const double&);\n        ~Cheese();\n    private:\n        _Bubble* BubbleData[1001];\n        size_t data_tailPtr;\n    public:\n        double R, H;\n    };\n\nclass _Bubble\n    {\n    friend class Cheese;\n    double posX, posY, posZ;\n    bool toTop, toBottom;\n    void radioBottom()\n        {\n        toBottom = true;\n        for (size_t i = 0;i < con_tailPtr;i++)\n            {\n            if (!adjoin[i]->toBottom)\n                adjoin[i]->radioBottom();\n            }\n\n        }\n    void radioTop()\n        {\n        toTop = true;\n        for (size_t i = 0;i < con_tailPtr;i++)\n            {\n            if (!adjoin[i]->toTop)\n                adjoin[i]->radioTop();\n            }\n\n        }\n    _Bubble() = default;\n    _Bubble(Cheese*c)\n        {\n        inCheese = c;\n        con_tailPtr = 0;\n        toBottom = false;\n        toTop = false;\n\n        cin >> posX >> posY >> posZ;\n        if (posZ <= inCheese->R)toBottom = true;\n        if (posZ >= inCheese->H - inCheese->R)toTop = true;\n        }\n    _Bubble* adjoin[1001];\n    Cheese* inCheese;\n    size_t con_tailPtr;\n    };\n\n\ninline long double Cheese::distt2(const _Bubble*a, const _Bubble*b)const\n    {\n    long double tmp =\n        (a->posX - b->posX)*(a->posX - b->posX)\n        + (a->posY - b->posY)*(a->posY - b->posY)\n        + (a->posZ - b->posZ)*(a->posZ - b->posZ);\n    return tmp;\n    }\ninline void Cheese::ChecknewAdjoin()\n    {\n    for (size_t i = 0;i < this->data_tailPtr - 1;++i)\n        {\n        if (distt2(this->BubbleData[i], this->BubbleData[this->data_tailPtr - 1]) - 4 * R*R < 0.00000000001)\n            {\n            this->BubbleData[this->data_tailPtr - 1]\n                ->adjoin[this->BubbleData[this->data_tailPtr - 1]->con_tailPtr]\n                = this->BubbleData[i];\n            this->BubbleData[this->data_tailPtr - 1]->con_tailPtr++;\n            this->BubbleData[i]\n                ->adjoin[this->BubbleData[i]->con_tailPtr]\n                = this->BubbleData[this->data_tailPtr - 1];\n            this->BubbleData[i]->con_tailPtr++;\n            }\n        }\n    }\ninline Cheese::Cheese(const double&n)\n    {\n    cin >> H >> R;\n    this->data_tailPtr = 0;\n    bool canReach = false;\n    for (size_t i = 0;i < n;i++)\n        {\n        _Bubble* newbubble = new _Bubble(this);\n        this->BubbleData[this->data_tailPtr] = newbubble;\n        this->data_tailPtr++;\n        this->ChecknewAdjoin();\n        }\n    for (size_t i = 0;i < this->data_tailPtr;i++)\n        {\n        if (this->BubbleData[i]->toBottom)\n            this->BubbleData[i]->radioBottom();\n        if (this->BubbleData[i]->toTop)\n            this->BubbleData[i]->radioTop();\n        }\n    for (size_t i = 0;i < this->data_tailPtr;i++)\n        if (this->BubbleData[i]->toTop)\n            if (this->BubbleData[i]->toBottom)\n                canReach = true;\n    if (canReach)cout << \"Yes\" << endl;\n    else cout << \"No\" << endl;\n    }\ninline Cheese::~Cheese()\n    {\n    for (size_t i = 0; i < (this->data_tailPtr);i++)\n        {\n        delete this->BubbleData[i];\n        }\n    }\n\nint main()\n    {\n    //freopen(\"cheese.in\", \"r\", stdin);\n    //freopen(\"cheese.out\", \"w\", stdout);\n    double T;\n    cin >> T;\n    for (size_t i = 0;i < T;i++)\n        {\n        int n;\n        cin >> n;\n        Cheese newcheese(n);\n        }\n    return 0;\n    }\n```",
        "postTime": 1511680067,
        "uid": 67163,
        "name": "CondemnedXL",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u628a\u6211\u7684\u8003\u573a\u4ee3\u7801\u5c31\u590d\u5236\u8fdb\u6765\u4e86\u3002\u3002\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u795e\u5947\u7684\u7c7b\u4f3c\u4e8e\u5e76\u67e5\u96c6\u7684\u601d\u60f3\n\n\u73b0\u5c06\u80fd\u4e0e\u5e95\u8fb9\u76f8\u8fde\u7684\u5976\u916a\u8bbe\u4e3a\u6839\u8282\u70b9\uff0c\u518d\u6162\u6162\u8fde\u63a5\n\n\u5199\u4e0d\u51fa\u5927\u795e\u4eec\u7684\u9ad8\u7aef\u64cd\u4f5c\n\n\n\n\n\n```cpp\nvar\nf:array[1..1010] of longint;\nd:real;\nh,r,bjh,ans:int64;\nn,i,i1,j,k,t:longint;\nx,y,z:array[1..1010] of longint;\nbo:boolean;\nbegin\n        //assign(input,'cheese.in');\n        //reset(input);\n        //assign(output,'cheese.out');\n        //rewrite(output);\n        readln(t);//\u8f93\u5165\u7ec4\u6570\n        for i1:=1 to t do begin\n                read(n,h,r);//\u7a7a\u6d1e\u6570\u91cf\uff0c\u5976\u916a\u9ad8\u5ea6\uff0c\u534a\u5f84\n                for i:=1 to n do f[i]:=-1;//\u5e76\u67e5\u96c6\uff0c\u73b0\u5c06\u6bcf\u4e2a\u5976\u916a\u7684\u7236\u8f88\u8282\u70b9\u8bbe\u4e3a\u7a7a\n                for i:=1 to n do begin\n                        read(x[i],y[i],z[i]);//\u8bfb\u5165\u5750\u6807\n                        if z[i]<=r then begin\n                                f[i]:=0;\n                        end;//\u82e5\u5976\u916a\u9ad8\u5ea6\u5c0f\u4e8er\u5219\u5b83\u4e0e\u5e95\u8fb9\u76f8\u8fde\n                end;\n                bo:=false;ans:=0;//\u76ee\u524d\u4e0d\u80fd\u8054\u901a\uff0cans\u4e3a\u5f53\u524d\u53ef\u4ee5\u8fbe\u5230\u7684\u6700\u9ad8\u9ad8\u5ea6\n                for k:=1 to 5 do//\u8fd9\u4e2ak\u6bd4\u8f83\u795e\u5947\uff0c\u662f\u4e3a\u4e86\u9632\u6b62\u6709\u7279\u6b8a\u6570\u636e\u4f1a\u4f7f\u8fde\u8fb9\u758f\u6f0f\u800c\u5199\uff0c\u591a\u8fde\u51e0\u6b21\u66f4\u4fdd\u9669\u3002\n                for i:=1 to n do\n                 for j:=1 to n do begin\n                        d:=sqrt(sqr(x[i]-x[j])+sqr(y[i]-y[j])+sqr(z[i]-z[j]));//\u8ba1\u7b97\u8ddd\u79bb\n                        bjh:=2*r;//\u82e5\u4e24\u4e2a\u5976\u916a\u8054\u901a\uff0c\u5219\u4ed6\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb<=2*r\n                        if (d<=bjh)and(f[i]<>-1) then begin//\u80fd\u591f\u4e0e\u8be5\u5976\u916a\u7684\u5976\u916a\u540c\u65f6\u4e5f\u4e0e\u5e95\u8fb9\u8fde\u63a5\n                                f[j]:=i;//\u8fde\u63a5\n                                if z[j]>ans then ans:=z[j];//\u5f53\u524d\u53ef\u4ee5\u8fbe\u5230\u7684\u6700\u9ad8\u9ad8\u5ea6\n                                if ans+r>=h then begin\n                                        bo:=true;\n                                        break;\n                                end;//\u80fd\u591f\u4e0e\u9876\u8fb9\u8fde\u63a5\u5c31\u8df3\u51fa\u5faa\u73af\n                        end;\n                 end;\n                if bo then writeln('Yes') else writeln('No');\n        end;\n        //close(input);\n        //close(output);\nend.\n\n```",
        "postTime": 1511076159,
        "uid": 31392,
        "name": "ForeverT",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u5148\u5efa\u56fe\uff0c\u7136\u540edfs\n\n\n\u4e0d\u8fc7\u6211\u52a0\u4e86**\u8bb0\u5fc6\u5316**\u8fdb\u884c\u4f18\u5316\uff1a\u5982\u679c\u76ee\u6807\u70b9\u5df2\u7ecf\u88ab\u641c\u7d22\u8fc7\uff0c\u5e76\u4e14\u6211\u4eec\u5e76\u6ca1\u6709\u5230\u8fbe\u4e0a\u8868\u9762\uff0c\u5219\u6211\u4eec\u5c31\u4e0d\u518d\u8bbf\u95ee\u76ee\u6807\u70b9\n\n\n\uff08\u5176\u5b9e\u7528bfs\u66f4\u597d\uff0c\u4f46\u662f\u6211bfs\u5bb9\u6613\u5199\u9519\uff0cdfs\u662f\u6c42\u7a33\u7684\uff09\n\n\n\u601d\u8def\u89c1\u6ce8\u91ca\n\n\n\n```cpp\ntype int=longint;\n     boo=boolean;\nvar i,j,k,n,t:int;\n    h,r:int64;\n    xj,yj,zj,xk,yk,zk:qword; //\u56e0\u4e3a\u8fdb\u8fc7\u8ba1\u7b97\uff0cx\u3001y\u3001z\u53d6\u6781\u9650\u503c\u8ba1\u7b97\u662f**1.2*10^20>2^63**\uff0c\u4f1a\u8d85\u8fc7**int64**\u8303\u56f4\uff0c\u6240\u4ee5\u7528**qword**\u8ba1\u7b97\u9632\u6b62\u6ea2\u51fa\n    first,x,y,z:array[0..1001] of int;\n    map:array[0..1001,0..1001] of int;\n    visit,aim:array[0..1001] of boo;\n    bo:boo;\nprocedure dfs(now:int);\nvar i:int;\nbegin\n  if aim[now] then begin bo:=true; exit; end; //\u5982\u679c\u5f53\u524d\u70b9\u4e0e\u4e0a\u8868\u9762\u76f8\u901a\uff0c\u5219\u9000\u51fa\n  for i:=1 to map[now,0] do\n  begin\n    if not visit[map[now,i]] then\n    begin\n      visit[map[now,i]]:=true; //\u5982\u679c\u76ee\u6807\u70b9\u5e76\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n      dfs(map[now,i]); \n      if bo then exit; //\u5982\u679c\u5df2\u7ecf\u6210\u529f\u5230\u8fbe\u4e0a\u8868\u9762\u5219\u9000\u51fa\n    end;\n  end;\nend;\nbegin\n  readln(t);\n  for i:=1 to t do\n  begin\n    fillchar(aim,sizeof(aim),false); //aim[x]\u8868\u793ax\u53f7\u70b9\u80fd\u5426\u5230\u8fbe\u4e0a\u8868\u9762\n    fillchar(first,sizeof(first),0); //first\u8bb0\u5f55\u8d77\u70b9\u7f16\u53f7\n    fillchar(map,sizeof(map),0); //map\u7528\u90bb\u63a5\u8868\u50a8\u5b58\n    fillchar(visit,sizeof(visit),false); //visit\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u662f\u5426\u641c\u7d22\u8fc7\uff0c\u7528\u4e8e\u8bb0\u5fc6\u5316\u4f18\u5316\n    readln(n,h,r);\n    for j:=1 to n do\n    begin\n      readln(x[j],y[j],z[j]);\n      xj:=x[j]; yj:=y[j]; zj:=z[j];\n      if zj<=r then begin inc(first[0]); first[first[0]]:=j; end; //\u5982\u679c\u8be5\u70b9\u548c\u4e0b\u8868\u9762\u76f8\u901a\uff0c\u5219\u8bb0\u5f55\u4e0b\u6765\n      if zj+r>=h then aim[j]:=true; //\u5982\u679c\u8be5\u70b9\u548c\u4e0a\u8868\u9762\u76f8\u901a\uff0c\u5219\u8bb0\u5f55\u4e0b\u6765\n      for k:=1 to j-1 do //\u7a77\u4e3e\u4e4b\u524d\u6240\u6709\u7684\u70b9\u4e0e\u8fd9\u4e2a\u70b9\u662f\u5426\u76f8\u8054\u901a\n      begin\n        xk:=x[k]; yk:=y[k]; zk:=z[k];\n        if (xj-xk)*(xj-xk)+(yj-yk)*(yj-yk)+(zj-zk)*(zj-zk)<=4*r*r then //\u5982\u679c\u4e24\u4e2a\u70b9\u76f8\u901a\n        begin\n          inc(map[j,0]); map[j,map[j,0]]:=k;\n          inc(map[k,0]); map[k,map[k,0]]:=j; //\u90bb\u63a5\u8868\u8bb0\u5f55\n        end;\n      end;\n    end;\n    bo:=false; //bo\u7528\u6765\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u5230\u8fbe\u4e0a\u8868\u9762\n    for j:=1 to first[0] do dfs(first[j]); //\u4ece\u6240\u6709\u53ef\u4ee5\u7684\u8d77\u70b9\u51fa\u53d1\uff0c\u8fdb\u884cdfs\n    if bo then writeln('Yes') else writeln('No'); \n  end;\nend.\n```",
        "postTime": 1510980795,
        "uid": 3699,
        "name": "blazing_freezing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u2026\u2026\u7528\u5e76\u67e5\u96c6\u867d\u7136\u6548\u7387\u9ad8\uff0c\u4f46\u662f\u5f88\u5bb9\u6613\u9519\u2026\u2026\n\n\n\u8bfb\u5165\u7684\u65f6\u5019\u6211\u4eec\u5148\u8003\u8651\u80fd\u63a5\u5730\u7684\u6d1e\u53e3\uff0c\u628a\u8fd9\u4e9b\u6d1e\u53e3\u6253\u4e0a\u6807\u8bb0\u5e76\u653e\u5165\u961f\u5217\u3002\n\n\n\u53ef\u4ee5\u7528\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4avb[]\u5b58\u6d1e\u53e3\u7684\u53ef\u7528\u72b6\u6001\n\n\n\u5bf9\u76ee\u524d\u4e0d\u53ef\u7528\uff08\u8fd8\u6ca1\u6709\u8dd1\u901a\uff09\u7684\u6d1e\u53e3\u505a\u626b\u63cf\uff0c\u5982\u679c\u6d1e\u53e3\u53ef\u7528\uff0c\u7ed9\u4ed6\u6253\u4e0a\u6807\u8bb0\uff0c\u653e\u5165\u5e76\u67e5\u96c6\u3002\n\n\n\u5e76\u67e5\u96c6\u7236\u4eb2\u4e0b\u6807\u5b58\u76ee\u524d\u96c6\u5408\u4e2d\u80fd\u5230\u8fbe\u7684\u6700\u9ad8\u4f4d\u7f6e\uff0c\u5982\u679c\u8fd9\u4e2a\u6700\u9ad8\u4f4d\u7f6e\u8fbe\u5230\u6216\u8d85\u8fc7h\uff0c\u90a3\u76f4\u63a5\u8f93\u51faYes\uff0c\u8df3\u51fa\u5faa\u73af\u3002\n\n\n\u5343\u4e07\u5343\u4e07\u4e0d\u8981\u5fd8\u8bb0\uff0c\u8bfb\u5165\u7684\u65f6\u5019\u53ef\u80fd\u5c31\u5df2\u7ecf\u6709\u6d1e\u53e3\u80fd\u76f4\u63a5\u8fde\u63a5\u5976\u916a\u5e95\u7aef\u548c\u9876\u7aef\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51faYes\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\ninline int re()//\u8bfb\u5165\u4f18\u5316\uff0c\u53ef\u9009\u2026\u2026\u6211\u662f\u4e60\u60ef\u6253\u4e86\n{\n    int x=0;\n    int w=1;\n    char c=getchar();\n    while(c<'0'||c>'9')\n    {\n        if(c=='-')\n            w=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9')\n    {\n        x=(x<<3)+(x<<1)+(c^48);\n        c=getchar();\n    }\n    return x*w;\n}\nint fa[1010];//\u8fd9\u4e2a\u6570\u7ec4\u548c\u4e0b\u9762\u7684rank\u90fd\u662f\u5e76\u67e5\u96c6\u7528\u7684\uff0c\u4e0d\u7528\u89e3\u91ca\u4e86\u5427\u2026\u2026\nint rank[1010];\nint find(int ask)//\u67e5\u627e\u8282\u70b9\u7236\u4eb2\n{\n    if(fa[ask]!=ask)\n        fa[ask]=find(fa[ask]);\n    return fa[ask];\n}\n\nvoid uni(int x,int y)//\u5982\u679c\u4e24\u4e2a\u70b9\u95f4\u8ddd\u79bb\u5408\u7406\uff0c\u90a3\u4e24\u8fb9\u8d70\u5f97\u901a\uff0c\u5c31\u8054\u5408\u8282\u70b9\n{\n    x=find(x);\n    y=find(y);\n    if(rank[x]>rank[y])\n    {\n        fa[y]=fa[x];\n    }\n    else if(rank[y]>=rank[x])\n    {\n        fa[x]=fa[y];\n        if(rank[y]==rank[x])\n            rank[y]++;\n    }\n    return;\n}\n\n\nint avb[1010];//avb\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u7684\u8fd9\u4e2a\u70b9\u80fd\u4e0d\u80fd\u8d70\u5230\uff0c1\u4e3a\u80fd\uff0c0\u4e3a\u4e0d\u80fd\nint px[1010];//\u8fd9\u4e09\u4e2a\u6570\u7ec4\u8bb0\u5f55\u70b9\u7684\u5750\u6807\nint py[1010];\nint pz[1010];\nint next[1010];//\u8fd9\u4e2a\u6570\u7ec4\u662f\u7528\u6765\u5f53\u4f5c\u624b\u5199\u961f\u5217\u7684\nint mxhei[1010];//\u5b58\u5df2\u7ecf\u8054\u901a\u7684\u96c6\u5408\u91cc\u9762\u6240\u6709\u7684\u70b9\u80fd\u5230\u8fbe\u7684\u6700\u9ad8\u5904\nint main()\n{\n    //freopen(\"cheese.in\",\"r\",stdin);\n    //freopen(\"cheese.out\",\"w\",stdout);\n    int t=re();\n    int h,r,n,ctr,l,now,temp;\n    while(t>0)\n    {\n        memset(fa,0,sizeof(fa));\n        memset(rank,0,sizeof(rank));\n        memset(avb,0,sizeof(avb));\n        memset(px,0,sizeof(px));\n        memset(py,0,sizeof(py));\n        memset(pz,0,sizeof(pz));\n        memset(mxhei,0,sizeof(mxhei));\n        memset(next,0,sizeof(next));\n        ctr=1;\n        n=re();h=re();r=re();\n        for(int i=1;i<=n;i++)\n        {\n            px[i]=re();\n            py[i]=re();\n            pz[i]=re();\n            if((pz[i]-r)<=0)\n            {\n                avb[i]=1;//\u5982\u679c\u5f53\u524d\u70b9\u5df2\u7ecf\u8054\u901a\u5976\u916a\u5e95\uff0c\u5c31\u8bb0\u4e3a\u53ef\u7528\n                next[ctr]=i;//\u7136\u540e\u628a\u5b83\u5165\u961f\n                ctr++;//\u961f\u5217\u7ec8\u70b9\u4e0b\u6807+1\uff0cemmm\u53cd\u6b63\u5c31\u662f\u6a21\u62df\u961f\u5217\n                mxhei[i]=pz[i]+r;//\u8bb0\u5f55\u76ee\u524d\u80fd\u8dd1\u5230\u7684\u6700\u9ad8\u5904\n            }\n            fa[i]=i;//\u521d\u59cb\u5316\u5e76\u67e5\u96c6\u7684\u7236\u4eb2\n        }\n        l=1;\n        for(now=next[l];l<=ctr;now=next[l])//now\u5b58\u7684\u662f\u961f\u5217\u4e2d\u53ef\u7528\u7684\u8282\u70b9\u7684\u4e0b\u6807\uff0c\u7528\u8fd9\u4e2a\u70b9\u8bd5\u63a2\u522b\u7684\u70b9\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u8054\u901a\n        {\n            for(int i=1;i<=n;i++)\n            {\n                if(avb[i])//\u5982\u679c\u5f53\u524d\u8282\u70b9\u5df2\u7ecf\u53ef\u7528\uff08\u8054\u901a\uff09\uff0c\u90a3\u5c31\u4e0d\u7528\u505a\u4e86\u8df3\u51fa\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u5c0f\u5fc3\u4e0d\u8981\u5fd8\u4e86\u52a0\u7279\u5224\u6709\u70b9\u76f4\u63a5\u8054\u901a\u5976\u916a\u5e95\u548c\u5976\u916a\u9876\u7684\u60c5\u51b5\uff0c\u4e0d\u7136\u540e\u9762\u6ca1\u6709\u6267\u884c\u7684\u8bdd\u7a0b\u5e8f\u5c31\u4f1a\u6253\u51faNo\u3002\u672c\u4eba\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u5728\u672c\u9898\u7206\u96f6\u7684\u3002\n                    continue;\n                if(\n                    sqrt(pow((px[i]-px[now]),2)+pow((py[i]-py[now]),2)+pow((pz[i]-pz[now]),2))<=2*r\n                )//\u516c\u5f0f\u4f53\uff0c\u5373\u679a\u4e3e\u5230\u7684\u4e0d\u53ef\u7528\u70b9\u5982\u679c\u4e0enow\u70b9\u8ddd\u79bb\u5c0f\u4e8e2r\uff0c\u5c31\u628a\u4ed6\u4eec\u8054\u901a\n                {\n                    avb[i]=1;//\u5f53\u524d\u8282\u70b9\u66f4\u65b0\u4e3a\u53ef\u7528\n                    uni(i,now);//\u8054\u901a\u64cd\u4f5c\n                    temp=find(now);//\u5bfb\u627enow\u70b9\u6240\u5728\u96c6\u5408\n                    mxhei[temp]=std::max(mxhei[temp],pz[i]+r);//\u66f4\u65b0\u5f53\u524d\u70b9\u96c6\u6240\u80fd\u5230\u8fbe\u7684\u6700\u9ad8\u4f4d\u7f6e\n                    if(mxhei[temp]>=h)//\u5982\u679c\u8fd9\u4e2a\u6700\u9ad8\u4f4d\u7f6e\u5927\u4e8eh\u90a3\u5df2\u7ecf\u6ca1\u5fc5\u8981\u626b\u4e0b\u53bb\u4e86\uff0c\u8f93\u51faYes\u8d70\u4eba\u5427\n                    {\n                        printf(\"Yes\\n\");\n                        goto ext;//\u8fd9\u91cc\u7528\u8df3\u8f6c\u6807\u8bb0\u5077\u61d2\n                    }\n                    next[ctr]=i;//\u5982\u679c\u8fd9\u4e2a\u96c6\u5408\u7684\u6700\u9ad8\u9ad8\u5ea6\u6ca1\u6709\u5230\u6700\u9ad8\u4f4d\u7f6e\uff0c\u90a3\u5c31\u628a\u65b0\u8054\u901a\u7684\u70b9\u5165\u961f\n                    ctr++;\n                }\n            }\n            if(mxhei[l]>=h)//\u5c31\u662f\u4e0d\u8981\u5fd8\u4e86\u8fd9\u4e00\u6b65\n                    {\n                        printf(\"Yes\\n\");\n                        goto ext;\n                    }\n            l++;\n        }\n        printf(\"No\\n\");\n        ext:\n        t--;\n    }\n    \n    \n    return 0;\n}\n```\n\u4e3a\u4ec0\u4e48\u6211\u4e0d\u7528BFS\u6216\u8005DFS\uff1f\n\n~~\u6211\u4e0d\u4f1a\u554a~~\n\n\u8003\u8bd5\u7684\u65f6\u5019\u6309\u7167\u5b9e\u9645\u60c5\u51b5\u6765\u5427\uff0c\u4eba\u5bb6\u6ca1\u62ff\u6570\u636e\u5361\u4f60\u7684\u65f6\u5019\u4e0d\u8981\u60f3\u90a3\u4e48\u590d\u6742\u3002\n\n~~\u4e0d\u8981\u4e71\u5f04\u4e2a\u7384\u5b66\u4f18\u5316\u8fd8\u8ba9\u81ea\u5df1\u7206\u96f6~~\n",
        "postTime": 1510980178,
        "uid": 37855,
        "name": "\u6635\u79f0\u4e0d\u80fd\u4e3a\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "[\u6253\u4e2a\u5e7f\u544a\u5148](www.vixbob-lwc.pw)\n\n\u8fd9\u9898\u561b\u5176\u5b9e\u8ddfluogu\u4e0a\u7684\u4e00\u9053\u9898\u5f88\u50cf\uff0c\u56e0\u4e3a\u88ab\u90a3\u9053\u9898\u5361\u4e86\u5f88\u4e45\u6240\u4ee5NOIp\u4e00\u4e0b\u5c31\u60f3\u5230\u4e86\uff0c\u4f46\u90a3\u9053\u9898\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\uff0c\u8fd9\u4e2a\u9898\u6539\u6210\u4e86\u4e09\u7ef4\uff0c\u8fd9\u4e2a\u51e0\u4e4e\u4e0a\u662f\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\u7684\uff0c\u5c31\u662f\u8ddd\u79bb\u516c\u5f0f\u53d8\u4e86\u800c\u5df2\uff0c\u8fd8\u6709\u5c31\u662f\u90a3\u9053\u9898\u662f\u8981\u6784\u9020\u6700\u5c0f\u751f\u6210\u6811\uff0c\u800cNOIp\u7684\u8fd9\u9053\u53ea\u7528\u5224\u65ad\u4e24\u4e2a\u8fb9\u754c\u662f\u5426\u8054\u901a\u5c31\u597d\u4e86\uff0c\u5176\u5b9eNOIp\u7684\u6bd4luogu\u4e0a\u7684\u8fd9\u9053\u8fd8\u597d\u5199\u4e00\u4e9b[\u4f20\u9001\u95e8 P1783 \u6d77\u6ee9\u9632\u5fa1](https://www.luogu.org/problemnew/show/1783)\n\n**\u4e3b\u8981\u601d\u8def**\n\n>\u5c06\u6240\u6709\u70b9\u90fd\u5b58\u5165\u4e00\u4e2a\u6570\u7ec4\uff0c\u7136\u540e\u628a\u4e24\u4e2a\u8fb9\u754c\u90fd\u5b58\u8fdb\u53bb\uff0c\u7136\u540e\u8dd1\u4e00\u4e2a$N^2$\u5c31\u884c\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u8d58\u8ff0\uff0c\u5177\u4f53\u7684\u7ec6\u8282\u5904\u7406\u89c1\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\n#include <cmath>\n#define ll long long\nusing namespace std;\nint T,n,h,r,fa[1100];\nstruct node{int x,y,z;}t[21][1100];\nint findx(int x){\n    if(fa[x]==x)return fa[x];\n    return fa[x]=findx(fa[x]);//\u5e76\u67e5\u96c6\u538b\u7f29\u8def\u5f84\uff08mmp\u8003\u8bd5\u7684\u65f6\u5019\u592a\u7d27\u5f20\u4e86\u628a\u538b\u7f29\u8def\u5f84\u6572\u6389\u4e86\uff0c\u76f4\u63a5return findx(fa[x])\u6389\u4e8650\u5206\u8fd8\u662f60\u5206\uff0c\u5fc3\u75bc\u554a\uff01\uff01\u6240\u4ee5\u538b\u7f29\u8def\u5f84\u4e00\u5b9a\u4e0d\u80fd\u6389\uff09\n}\nvoid mergex(int x,int y){fa[findx(x)]=findx(y);}//\u5408\u5e76\u51fd\u6570\ndouble dis(int x,int y,int z,int x2,int y2,int z2){\n    ll disx,disy,disz;\n    disx=(ll)(x-x2)*(x-x2);disy=(ll)(y-y2)*(y-y2);disz=(ll)(z-z2)*(z-z2);\n    return sqrt(disx+disz+disy);\n}\n//\u8fd9\u4e2a\u662f\u6c42\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u7684\u51fd\u6570\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f\u8fd9\u4e2a\u51fd\u6570\u8981\u7528\u5230\u5f00\u65b9\uff0c\u4f46\u662f\u5f00\u65b9\u7684\u8fd0\u7b97\u91cf\u662f\u5f88\u5927\u7684\uff0c\u4e5f\u5c31\u662f\u5e38\u6570\u5f88\u5927\uff0c\u8981\u662f\u51fa\u9898\u4eba\u641e\u51e0\u7ec4\u6bd2\u7624\u6570\u636e\u4f30\u8ba1\u53c8\u8981\u6b7b\u4e00\u7247\uff08\u6bd4\u5982\u8bf4\u6211\uff09\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u6539\u6210return \u4e00\u4e2a\u4e58\u79ef\uff0c\u4ee3\u7801\u6211\u4e5f\u4f1a\u8d34\u5230\u4e0b\u9762\uff08\u4e0d\u8fc7\u662f\u6211\u9ad8\u4e8c\u5b66\u957f\u7684\uff09\nint main(){\n    //freopen(\"cheese.in\",\"r\",stdin);\n    //freopen(\"cheese.out\",\"w\",stdout);\n    scanf(\"%d\",&T);\n    for(int i=1;i<=T;i++){\n        scanf(\"%d%d%d\",&n,&h,&r);\n        for(int j=0;j<=n+1;j++)fa[j]=j;\n        for(int j=1;j<=n;j++){\n            int x,y,z;scanf(\"%d%d%d\",&x,&y,&z);\n            t[i][j].x=x;t[i][j].y=y;t[i][j].z=z;\n        }t[i][n+1].z=h;\n        for(int j=0;j<=n+1;j++)\n            for(int k=0;k<=n+1;k++){\n                int x,y,z,x2,y2,z2,disr=r*2;\n                x=t[i][j].x;y=t[i][j].y;z=t[i][j].z;\n                x2=t[i][k].x;y2=t[i][k].y;z2=t[i][k].z;\n                if(j==0||j==n+1){x=x2,y=y2;disr=r;}//\u8fb9\u754c\u7279\u5224\n                if(k==0||k==n+1){x2=x,y2=y;disr=r;}//\u8fb9\u754c\u7279\u5224\n                double dist=dis(x,y,z,x2,y2,z2);\n                if(dist<=disr)mergex(j,k);//\u5982\u679c\u53ef\u4ee5\u5c31\u5408\u5e76\u7136\u540e\n            }\n        if(findx(0)==findx(n+1))printf(\"Yes\\n\");//\u5982\u679c\u8054\u901a\u5c31\u8f93\u51fa\n        else printf(\"No\\n\");\n    }\n    return 0;\n}\n```\nPS\uff1a\u6211\u8fd9\u4e2a\u4ee3\u7801\u4e00\u770b\u5c31\u5f88low\uff0c\u4e5f\u5f88\u6162\u8dd1\u4e86800\u591ams\uff0c\u4e0b\u9762\u518d\u6765\u770b\u770b\u6211\u5b66\u957f\u7684\u4ee3\u7801\uff0c\u8fd9\u4e2a\u53ea\u8dd1\u4e86150ms\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <map>\n#include <set>\nusing namespace std;\nconst int maxn = 1e4;\ntypedef long long ll;\nstruct Point {\n    int x, y, z; \n    void read() {\n        scanf(\"%d%d%d\", &x, &y, &z);\n    }\n}p[maxn];\nstruct MFS {\n    int fa[maxn];\n    void clear(int x) {\n        for (int i = 1; i <= x; i++) fa[i] = i;\n    }\n    int find(int x) {\n        return x == fa[x] ? x : fa[x] = find(fa[x]);\n    }\n    void merge(int x, int y) {\n        if (find(x) == find(y)) return;\n        fa[find(x)] = find(y);\n    }\n}s;\nll dis(Point a, Point b) {\n    ll x = (ll)a.x - b.x;\n    ll y = (ll)a.y - b.y;\n    ll z = (ll)a.z - b.z;\n    return x * x + y * y + z * z;\n}\nint main() {\n    //freopen(\"cheese.in\", \"r\", stdin);\n    //freopen(\"cheese.out\", \"w\", stdout);    \n    int T; scanf(\"%d\", &T);\n    while (T--) {\n        int n, h, r; scanf(\"%d%d%d\", &n, &h, &r);\n        int S = n + 1, T = n + 2;\n        ll R = ((ll)r * 2) * ((ll)r * 2);\n        s.clear(n + 2);\n        for (int i = 1; i <= n; i++) {\n            p[i].read();    \n            if ((ll)p[i].z - r <= 0) s.merge(i, S);\n            if ((ll)p[i].z + r >= h) s.merge(i, T);\n        }\n        bool suc = false;\n        for (int i = 1; i <= n && !suc; i++) \n            for (int j = i + 1; j <= n && !suc; j++)\n                if (dis(p[i], p[j]) <= R) {\n                    s.merge(i, j);\n                    if (s.find(S) == s.find(T)) suc = true;\n                }\n        if (s.find(S) == s.find(T)) suc = true;\n        if (suc) printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n    return 0;    \n}\n/*\n5\n1 6 4293\n3 3 -2\n1 9 866\n-4 4 3\n1 9 3171\n2 0 -3\n1 10 1940\n1 0 -5\n1 8 4150\n1 0 -4\n\n\n\n*/ \n```\n\u4e00\u770b\u5c31\u5f88\u9ad8\u7aef\uff0c\u8fd8\u628a\u6700\u5c0f\u751f\u6210\u6811\uff08MFS\uff09\u5c01\u88c5\u4e86\uff0c\u6211\u4e5f\u4e0d\u662f\u5f88\u61c2\uff0cdalao\u5c31\u770b\u770b\u628a\uff01\uff01\uff01\n",
        "postTime": 1510744400,
        "uid": 50971,
        "name": "ViXbob",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "## \u5e76\u67e5\u96c6\u9ad8\u6548$O(Tn^2)$\u505a\u6cd5\n\n\u6211\u4eec\u501f\u9274\u67d0\u4e9b\u6811\u5f62dp\u9898\u76ee\u4e2d\u7684\u5316\u68ee\u6797\u4e3a\u6709\u6839\u6811\u7684\u505a\u6cd5\uff0c\u5efa\u7acb\u4e00\u4e2a\u201c\u8d85\u6e90\u201d\uff0c\u4e00\u4e2a\u201c\u8d85\u6c47\u201d\uff08\u527d\u7a83\u6d1b\u5495\u65e5\u62a5\uff09\uff0c\u76f4\u63a5\u5e76\u67e5\u96c6\u8d70\u8d77\uff01\n\n~~~ cpp\nint find (int a) {if (f[a] != a) return f[a]=find(f[a]);return f[a];}\ninline bool que (int a,int b) {return find(a)==find(b);}\nvoid Union (int a,int b) {\n\tint fa = find(a),fb = find(b);\n\tif (fa != fb)\n\t\tf[fa] = fb;\n}\n\nint main () {\n//\u5176\u4ed6\u7565\n\tfor (int i = 1; i<=n; ++i) {\n\t\tcin >> a[i].x >> a[i].y >> a[i].z;\n\t\tif (a[i].z + r >= h) Union(i,n+1);\n\t\tif (a[i].z - r <= 0) Union(0,i);\n\t}\n\tfor (int i = 1; i<=n; ++i)\n\t\tfor (int j = i+1; j<=n; ++j)\n\t\t\tif (dis(a[i],a[j]) <= 4*r*r)\n\t\t\t\tUnion(i,j);\n\tif (que(0,n+1)) cout << \"Yes\" << endl;\n\telse cout << \"No\" << endl;\n}\n~~~\n\u5c06\u4e0e\u5e95\u7aef\u8054\u901a\u7684\u70b9\u548c0\u53f7\u5e76\u8d77\u6765\uff0c\u4e0e\u9876\u7aef\u8054\u901a\u5219\u5e76n+1\uff08\u6ce8\u610fconst n**\u4e00\u5b9a\u4e00\u5b9a\u4e00\u5b9a\u8981\u5927\u4e8e\u7b49\u4e8en+2**\uff09\u3002\u76f4\u63a5\u5e76\u67e5\u96c6\uff0c\u5408\u5e76\u5b8c\u4e86\u8be2\u95ee0\uff0cn+1\u53f7\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n\n------------\n\n _**\u4e0d\u8fc7\u2026\u2026**_ \n\n\u672c\u9898\u6570\u636e\u636e\u8bf4\u6709\u70b9\u6c34\uff0c\u7cbe\u5ea6\u8bef\u5dee\u5c45\u7136\u90fd\u6ca1\u5361\u2026\u2026\n\n\u90a3\u5c31\u7531\u672c\u849f\u84bb\u76ae\u4e00\u6ce2\uff08\u8c01\u53eb\u6211\u9009\u4e86\u8fd9\u4e2aID\u5462\uff09\uff1a\n\n### \u8be6\u89e3\uff1a\u6d6e\u70b9\u7cbe\u5ea6\u8bef\u5dee\n\n\u4f55\u4e3a\u6d6e\u70b9\u7cbe\u5ea6\u8bef\u5dee\uff1f\n\n\u7b80\u5355\u8bf4\u6765\uff0c\u5c0f\u6570\u4e5f\u662f\u4e8c\u8fdb\u5236\u8868\u793a\u7684\uff0c**\u8fd9\u5176\u4e2d\u4e0d\u53ef\u907f\u514d\u4f1a\u6709\u4e00\u4e9b\u5c0f\u6570\u8868\u793a\u4e0d\u51fa\u6765\uff0c\u7531\u6b64\u4ea7\u751f\u8bef\u5dee\u3002**\n\n\u7406\u8bba\u4e0a\u6765\u8bf4\u4e00\u9053~~\u4e0d\u662fCCF\u98ce\u683c\u7684~~\u9898\u76ee\u5e94\u8be5\u907f\u514d\u8fd9\u79cd\u95ee\u9898\u6216\u8005SPJ\u5224\u65ad\u662f\u5426\u5dee\u592a\u591a\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u4e1c\u897f\u8fd8\u662f\u8981\u907f\u514d\u3002\u90a3\u4e48\u600e\u4e48\u505a\u5462\uff1f\n\n#### 1. \u5316\u6d6e\u4e3a\u6574\u3002\n\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u672c\u9898\u3002\n~~~ cpp\ninline long long dis (Point a,Point b) {\n\tlong long x = abs(a.x-b.x),y = abs(a.y-b.y),z = abs(a.z-b.z);\n\treturn x*x+y*y+z*z;\n}\n~~~\n\u8001\u54e5\u4f60\u7684\u51fd\u6570\u548b\u8fd8\u662flonglong\uff1f\n\n _\u8fd9\u5c31\u662f\u5904\u7406\u6d6e\u70b9\u8bef\u5dee\u6700\u5b89\u5168\u7684\u65b9\u6cd5\uff1a\u5316\u6d6e\u4e3a\u6574\u3002_\n \n$$ \\sqrt{(x_1+x_2)^2+(y_1+y_2)^2+(z_1+z_2)^2} \\leq 2*r$$\n\n\u540c\u65f6\u5e73\u65b9\u3002\n$$ (x_1+x_2)^2+(y_1+y_2)^2+(z_1+z_2)^2 \\leq 4*r^2$$\n\n\u8bef\u5dee\u795e\u9a6c\uff0c\u90fd\u662f\u6d6e\u4e91\uff01\n#### 2. EPS\u63d2\u8db3\u3002\n\u8fd9\u4e2a\u2026\u2026\u8bb0\u4f4f\u5c31\u597d\u3002\n~~~ cpp\nconst double EPS = 1e-8;\t//\u6bd4\u6700\u5c0f\u7cbe\u5ea6\u5c0f\u51e0\u4e2a\u91cf\u7ea7\ndouble a,b;\ncin >> a >> b;\nif (a == b) {dosomething} //\u5f88\u5371\u9669\uff0c\u641e\u4e0d\u597d\u5c31\u70b8\u4e86\nif (fabs(a-b) < EPS) {dosomething}  //\u867d\u7136\u98ce\u9669\u8fd8\u5728\uff0c\u4f46\u662f\u5c0f\u591a\u4e86\n~~~\n#### 3. \u6539\u826f\u6761\u4ef6\n[\u8fd9\u9053\u9898\u82e5\u662f\u4e8c\u5206\u65f6\u5206\u52300.001\u4f1a\u70b8\u7684](https://www.luogu.org/problem/P1024)\n~~\u53cd\u6b63\u522b\u7684OJ\u4e0a\u662f~~\uff0c\u4f46\u662f0.001\u6539\u62100.0000001\u5c31AC\u8fbd~\n\n\u53e6\u4e00\u79cd\u65b9\u6848\u662f\u6539$while$\u4e3a$for$\uff0c\u4e8c\u5206\u65f6\u53ef\u80fd\u4f1a\u6709\u5947\u6548\u3002\n\n\u8d34\u4ee3\u7801\uff08~~\u6284\u88ad\u6709\u60ca\u559c~~\uff09\n\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\n\nconst int N = 1005;\n//What most of us wants to say,but I'm \u76ae\n//\u7531\u4e8e\u8a00\u8bba\u8fc7\u6fc0\uff0c\u6b64\u5904\u5df2\u5c4f\u853d\nstruct __ccf {\n\tlong long x,y,z;\n\tPoint (long long x=0,long long y=0,long long z=0):x(x),y(y),z(z){}\n};\ninline long long dis (Point a,Point b) {\n\tlong long x = abs(a.x-b.x),y = abs(a.y-b.y),z = abs(a.z-b.z);\n\treturn x*x+y*y+z*z;\n}\nint f[N];\n\nint find (int a) {if (f[a] != a) return f[a]=find(f[a]);return f[a];}\ninline bool que (int a,int b) {return find(a)==find(b);}\nvoid Union (int a,int b) {\n\tint fa = find(a),fb = find(b);\n\tif (fa != fb)\n\t\tf[fa] = fb;\n}\n__ccf a[N];\nvoid init () {\n\tfor (int i = 0; i<N; ++i)\n\t\tf[i] = i;\n}\nint main () {\n\tint T;\n\tcin >> T;\n\twhile(T--) {\n\t\tinit();\n\t\tlong long n,h,r;\n\t\tcin >> n >> h >> r;\n\t\tfor (int i = 1; i<=n; ++i) {\n\t\t\tcin >> a[i].x >> a[i].y >> a[i].z;\n\t\t\tif (a[i].z + r >= h) Union(i,n+1);\n\t\t\tif (a[i].z - r <= 0) Union(0,i);\n\t\t}\n\t\tfor (int i = 1; i<=n; ++i)\n\t\t\tfor (int j = i+1; j<=n; ++j)\n\t\t\t\tif (dis(a[i],a[j]) <= 4*r*r)\n\t\t\t\t\tUnion(i,j);\n\t\tif (que(0,n+1)) cout << \"Yes\" << endl;\n\t\telse cout << \"No\" << endl;\n\t\t\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1573666337,
        "uid": 161447,
        "name": "\u5c31\u76ae\u8fd9\u4e00\u4e0b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u672c\u9898\u601d\u8def\u5f88\u7b80\u5355\uff1a\n\n\u4ece$z=0$\u51fa\u53d1\uff0c\u6269\u5c55\u5230\u6240\u6709\u80fd\u6269\u5c55\u7684\u6d1e\uff0c\u7136\u540e\u7ee7\u7eed\u6269\u5c55\uff0c\u76f4\u5230\u6269\u5c55\u5230\u7b2c\u4e00\u4e2a\u80fd\u5230$z=k$\u7684\u6d1e\u3002\n\n\u90a3\u5982\u4f55\u5224\u65ad\u4e24\u4e2a\u6d1e\u662f\u5426\u80fd\u4e92\u76f8\u5230\u8fbe\u5462\uff1f\n\n\u6211\u4eec\u77e5\u9053\uff0c\u7403\u9762\u7684\u5b9a\u4e49\u662f\uff1a\u4e00\u4e2a\u534a\u5706\u4ee5\u5b83\u7684\u76f4\u5f84\u4e3a\u65cb\u8f6c\u8f74\uff0c\u65cb\u8f6c\u6240\u5f97\u7684\u66f2\u9762\u53eb\u505a\u7403\u9762\u3002\n\n\u90a3\u4e48\u56e0\u4e3a\u8fd9\u4e2a\u534a\u5706\u6240\u5728\u5706\u7684\u539f\u70b9\u5728\u65cb\u8f6c\u8f74\u4e0a\uff0c\u6240\u4ee5\u8fd9\u4e2a\u539f\u70b9\u5728\u65cb\u8f6c\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u6539\u53d8\u4f4d\u7f6e\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7403\u9762\u4e0a",
        "postTime": 1569037212,
        "uid": 92066,
        "name": "Kuriyama_Mirai",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u6c34\u4e00\u6ce2\u9898\u89e3\n\n\u601d\u8def\u4e5f\u662f\u5e76\u67e5\u96c6            \n\u4e24\u4e24\u770b\u80fd\u4e0d\u80fd\u5408\u5e76            \n\u52a0\u4e2a\u8def\u5f84\u538b\u7f29\u5c31\u63a5\u8fd1\u7ebf\u6027\u4e86                      \n\u5e73\u5747\u4e0b\u6765\u5927\u7ea6$O(N^2logN)$            \n\u5904\u7406\u65b9\u5f0f\u6709\u4e9b\u5947\u8469         \n\u697c\u4e0adalao\u4e5f\u8bf4\u4e86\u5982\u4f55\u5224\u65ad\u4e24\u7403\u76f8\u4ea4$/$\u76f8\u5207                    \n\u4e0b\u9762\u5c31\u662f\u6109\u5feb\u7684\u4ee3\u7801\u65f6\u95f4              \n \u4e00\u904d$A$ qwq\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cmath>\nusing namespace std;\nint t,n,h,r,fa[1003],x[1003],y[1003],z[1003];\nbool upper[1003],lower[1003];\t//\u7528\u6765\u8bb0\u5f55\u67d0\u4e2a\u96c6\u5408\u4e2d\u6709\u6ca1\u6709\u4e0e\u4e0a\u5e95/\u4e0b\u5e95\u76f8\u4ea4/\u76f8\u5207\u7684\u7403\ndouble dis(int a,int b)\t//\u8ddd\u79bb\u516c\u5f0f\n{\n\tdouble X=x[a],x2=x[b],Y=y[a],y2=y[b],Z=z[a],z2=z[b];\n\treturn sqrt((X-x2)*(X-x2)+(Y-y2)*(Y-y2)+(Z-z2)*(Z-z2));\n}\nint find(int x)\t//\u3010\u67e5\u3011\u64cd\u4f5c\n{\n\tif(x==fa[x]) return x;\n\treturn fa[x]=find(fa[x]);\t//\u8def\u5f84\u538b\u7f29\u73c2\u6d77\u661f\n}\nvoid unite(int x,int y)\t//\u3010\u5e76\u3011\u64cd\u4f5c\n{\n\tx=find(x);\n\ty=find(y);\n\tif(x!=y) fa[x]=y;\n}\nint main()\n{\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tbool flag=false;\n\t\tmemset(upper,false,sizeof(upper));\n\t\tmemset(lower,false,sizeof(lower));\n        //\u8981\u8fdb\u884c\u6570\u7ec4\u6e05\u7a7a\n\t\tcin>>n>>h>>r;\n\t\tfor(int i=1;i<=n;i++) fa[i]=i;\t//\u5e76\u67e5\u96c6init\uff0c\u987a\u4fbf\u8fdb\u884c\u6e05\u7a7a\n\t\tfor(int i=1;i<=n;i++) cin>>x[i]>>y[i]>>z[i];\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif(dis(i,j)<=r+r) unite(i,j);\t//\u5982\u679c\u4ed6\u4eec\u76f8\u4ea4/\u76f8\u5207\u5c31\u5e76\u8d77\u6765\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(z[i]-r<=0) upper[find(i)]=true;\t//\u5982\u679c\u8fd9\u4e2a\u7403\u548c\u4e0a\u5e95\u76f8\u4ea4/\u76f8\u5207\uff0c\u5c31\u628a\u5b83\u6240\u5904\u96c6\u5408\u7684upper\u503c\u6807\u4e3atrue\n\t\t\tif(z[i]+r>=h) lower[find(i)]=true;\t//\u5982\u679c\u8fd9\u4e2a\u7403\u548c\u4e0b\u5e95\u76f8\u4ea4/\u76f8\u5207\uff0c\u5c31\u628a\u5b83\u6240\u5904\u96c6\u5408\u7684lower\u503c\u6807\u4e3atrue\n\t\t\tif(upper[fa[i]]&&lower[fa[i]])\t//\u7531\u4e8e\u521a\u624d\u8fdb\u884c\u4e86find\uff0c\u6240\u4ee5\u8def\u5f84\u538b\u7f29\u5bfc\u81f4i\u76f4\u63a5\u6307\u5411\u6839\u6240\u4ee5\u5199fa[i]\u5c31\u884c\u4e86\n\t\t\t{\n\t\t\t\tcout<<\"Yes\\n\";\n\t\t\t\tflag=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flag) cout<<\"No\\n\";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1567159889,
        "uid": 144044,
        "name": "XMK_\u840c\u65b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "# **\u66b4\u529b**\n### \u770b\u4e86dalao\u7684\u5e76\u67e5\u96c6\u89c9\u5f97\u81ea\u5df1\u7528dfs\u66b4\u529b\u8fd8\u771f\u662f\u4e00\u4e2a\u849f\u84bb\n\nluogu\u4e0a\u6700\u6162\u7684\u70b9\u5361\u4e86467ms\u8fd8\u597d\u8fd8\u597d\uff0c\u4e0d\u7b97\u592a\u70c2\u3002(\u256f\ufe4f\u2570)b\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u4e00\u5f20\u4e09\u7ef4\u7684\u7acb\u4f53\u56fe\u7136\u540e\u628a\u6bcf\u4e2a\u6d1e\u4e2d\u5fc3\u770b\u505a\u4e00\u4e2a\u70b9\uff0c\u5224\u65ad\u80fd\u4e0d\u80fd\u4ece\u6700\u4e0a\u9762\u7684\u70b9\uff08\u5373\u5976\u916a\u4e0a\u9762\uff09\u8d70\u5230\u6700\u4e0b\u9762\uff08\u5373\u5976\u916a\u5e95\u90e8\uff09\n\n\u5176\u5b9e\u4e09\u7ef4\u4e0e\u4e8c\u7ef4\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u5c31\u7b97\u662fN\u7ef4\u5176\u5b9e\u90fd\u6ca1\u5173\u7cfb\uff0c\u53ea\u662f\u8ddd\u79bb\u516c\u5f0f\u6539\u6539\u7f62\u4e86\uff0c\u9898\u76ee\u4e2d\u5df2\u7ecf\u7ed9\u51fa\u8ddd\u79bb\u4e86\uff0c\u6240\u4ee5\u4e8b\u5b9e\u4e0a\u8fd9\u9053\u9898\u8fd8\u662f\u5f88\u7b80\u5355\u7684\uff1f\n\nPS\uff1a\u8981\u6ce8\u610f\u6700\u4e0a\u9762\u548c\u6700\u4e0b\u9762\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u53ea\u8981\u5c0f\u4e8e1*r\u5c31\u7b97\u8fde\u901a\uff0c\u5982\u679c\u6ca1\u6709\u7279\u5224\u5c31\u4f1aWa\u524d\u4e09\u4e2a\u70b9\uff0c\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684\uff08\u54ed\u54ed\uff09\n\n```cpp\n#include <bits/stdc++.h>\n#define N 1010\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\n//\u5feb\u8bfb \nll read(){\n    char c=getchar();bool flag=0;ll x=0;\n    while(c<'0'||c>'9'){if(c=='-')flag=1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+c-'0';c=getchar();}\n    return flag?-x:x;\n}\nstruct ball{\n\tll x,y,z;\n}q[N];\nll n,h,r,a[N][N],vis[N],flag;\n//mode=1\u662f\u6700\u4e0a\u4ee5\u53ca\u6700\u4e0b\u4e24\u70b9\uff0cmode=2\u4e3a\u5269\u4f59\u70b9 \ninline bool cal(ball a,ball b,int mode){\n\tif(sqrt(pow(a.x-b.x,2)+pow(a.y-b.y,2)+pow(a.z-b.z,2))<=r*mode) return 1;\n\telse return 0; \n} \n//\u4e09\u7ef4\u4e0a\u5f53\u4e00\u4e2a\u70b9\u5782\u76f4\u4e8e\u4e00\u4e2a\u5e73\u9762\u65f6\u4e24\u70b9\u8ddd\u79bb\u6700\u77ed \ninline void init(ll i){\n\tq[0].x=q[i].x,q[0].y=q[i].y,q[0].z=0;\n\tq[n+1].x=q[i].x,q[n+1].y=q[i].y,q[n+1].z=h;\n\ta[i][n+1]=a[n+1][i]=cal(q[i],q[n+1],1);\n\ta[i][0]=a[0][i]=cal(q[i],q[0],1);\n}\n//\u53ef\u7231\u7684dfs  \nvoid dfs(ll x){\n\tif(flag==1) return;//easy\u7684\u526a\u679d\uff0c\u627e\u5230\u8def\u5f84\u540e\u4e0d\u7528\u7ee7\u7eed\u627e \n\tif(x==n+1){\n\t\tflag=1;\n\t\treturn;\n\t}\n\tfor(ll i=1;i<=n+1;i++){\n\t\tif(a[x][i]==1&&vis[i]==0){\n\t\t\tvis[i]=1;//easy\u7684\u526a\u679d \n\t\t\tdfs(i);\n\t\t}\n\t}\n}\nint main(){\n\tll T=read();\n\twhile(T--){\n\t\tmemset(a,0,sizeof(a));\n\t\tn=read(),h=read(),r=read();\n\t\tfor(ll i=1;i<=n;i++){\n\t\t\tq[i].x=read(),q[i].y=read(),q[i].z=read();\n\t\t\tinit(i);//\u5224\u65ad\u6700\u4e0a\u4ee5\u53ca\u6700\u4e0b \n\t\t\tfor(ll j=1;j<i;j++){\n\t\t\t\ta[i][j]=a[j][i]=cal(q[i],q[j],2);//\u5224\u65ad\u4e24\u70b9\u662f\u5426\u8fde\u901a \n\t\t\t}\n\t\t}\n\t\tmemset(vis,0,sizeof(vis));\n\t\tvis[0]=1,flag=0;\n\t\tdfs(0);\n\t\tif(flag==1) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n}\n```",
        "postTime": 1565426954,
        "uid": 202402,
        "name": "20160161simon",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P3958)\n\n### 1.\u89e3\u9898\u65b9\u6cd5\n\n\u5bf9\u4e8e\u6b64\u9898 \u6211\u4eec\u53ef\u4ee5\u7528\u641c\u7d22\u6765\u505a\u3002\n\n\u7528\u4e00\u4e2a\u53d8\u91cf$flag$\u8868\u793a\u5c0f\u8001\u9f20\u662f\u5426\u80fd\u8dd1\u5230\u5976\u916a\u7684\u9876\u90e8\uff08$flag$=$1$\u65f6\u8bf4\u660e\u6709\u4e00\u79cd\u53ef\u4ee5\u5230\u9876\u90e8\u7684\u65b9\u6cd5 \u5426\u5219\u6682\u65f6\u8fd8\u6ca1\u6709\uff09\u3002\u7531\u4e8e\u5c0f\u8001\u9f20\u5728\u5e95\u90e8 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u770b\u4e00\u4e0b\u54ea\u4e9b\u6d1e\u662f\u5c0f\u8001\u9f20\u53ef\u4ee5\u4ece\u5e95\u90e8\u94bb\u8fdb\u53bb\u7684\uff0c\u518d\u4ece\u8fd9\u4e9b\u6d1e\u5f80\u5176\u4ed6\u6d1e\u8d70...\u81f3\u4e8e\u600e\u4e48\u8d70\uff0c\u6211\u4eec\u7528$dfs$\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u672c\u9898\u4e0d\u9700\u8981\u56de\u6eaf\uff0c\u56e0\u4e3a~~\u4f60\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\u5c31\u77e5\u9053\u4e86\u800c\u4e14~~\u5f53\u8fd9\u4e2a\u6d1e\u641c\u7d22\u8fc7\u4e14$flag$=$0$\u65f6\uff0c\u8bf4\u660e\u4ece\u8fd9\u4e2a\u6d1e\u8d70\u65e0\u6cd5\u5230\u9876\u90e8\uff0c\u6709\u4ec0\u4e48\u8d70\u7684\u5fc5\u8981\u5417\uff1f \u81f3\u4e8e\u5982\u4f55\u5224\u65ad\u4ece\u4e00\u4e2a\u6d1e\u80fd\u8d70\u5230\u53e6\u5916\u4e00\u4e2a\u6d1e....\u5f53$\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2+(z_1+z_2)^2}$ $\\le$ $2 \\times r$\u65f6 \u4ee5$(x1,y1,z1)$\u4e3a\u5750\u6807\u7684\u6d1e\u5c31\u80fd\u8fdb\u4ee5$(x2,y2,z2)$\u4e3a\u5750\u6807\u7684\u6d1e...\u81f3\u4e8e\u4e3a\u4f55\uff0c\u53ef\u4ee5\u7528\u4e8c\u7ef4\u62d3\u5c55\u5230\u4e09\u7ef4\u7684\u65b9\u6cd5\u53bb\u505a\uff08\u7531\u5e73\u9762\u7684\u5706\u63a8\u5230\u7acb\u4f53\u7684\u7403\u4f53 \u4e24\u8005\u5173\u4e8e\u8fd9\u65b9\u9762\u5176\u5b9e\u5dee\u4e0d\u591a\uff09\uff0c\u5728\u6b64\u4e0d\u8d58\u8ff0\u3002\u6700\u540e\uff0c\u6bcf\u6b21\u641c\u7d22\u65f6\u770b\u4e00\u4e0b\u4f60\u7684\u9ad8\u5ea6\u662f\u5426\u8d85\u8fc7\u6216\u8fbe\u5230\u4e86\u9876\u90e8\u3002\u5982\u679c\u662f\uff0c\u5219$flag$=$1$\n\n\u987a\u5e26\u4e00\u63d0 \u6211\u7684\u641c\u7d22\u53ef\u80fd\u4e0e\u522b\u4eba\u4e0d\u4e00\u6837...\u6211\u7684\u641c\u7d22\u662f\u4ee5\u5c0f\u8001\u9f20\u6240\u5904\u5750\u6807\u4e3a\u53c2\u6570\uff0c\u770b\u4e00\u4e0b\u54ea\u4e9b\u6d1e\u5c0f\u8001\u9f20\u53ef\u4ee5\u8fdb\u53bb\uff0c\u80fd\u8fdb\u7684\u8bdd\u5c0f\u8001\u9f20\u7684\u5750\u6807\u5c31\u662f\u8fd9\u4e2a\u6d1e\u7684\u7403\u5fc3\u3002\u6bcf\u6b21\u641c\u7d22\u65f6\u770b\u4e00\u4e0b\u5c0f\u8001\u9f20\u7684\u5750\u6807\u52a0\u4e0a$r$\u662f\u5426\u6709\u8d85\u8fc7\u6216\u8fbe\u5230\u9ad8\u5ea6$h$\n\n### 2.\u5751\u70b9\n\n1). \u663e\u7136\uff0c\u6211\u4eec\u5728\u6bcf\u6b21\u8f93\u5165\u65b0\u7684\u6570\u636e\u524d\uff0c\u8981\u628a\u4e00\u4e9b\u6570\u7ec4\u7ed9\u6e05\u7a7a\u4e00\u4e0b\u3002 \u5173\u4e8e\u8fd9\u4e00\u70b9\uff0c\u4f60\u53ef\u4ee5\u81ea\u9020\u6570\u636e\u6765\u9a8c\u8bc1\u3002\n\n2). \u7cbe\u5ea6\u3002$\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2+(z_1+z_2)^2}$ \u8fd9\u663e\u7136\u8981\u7528$double$\u6765\u4fdd\u5b58\uff0c\u4e0d\u7136\u7684\u8bdd$dis(P_1,P_2)$\u4f1a\u6bd4\u539f\u6765\u8981\u5c0f\uff0c\u4ece\u800c\u5bfc\u81f4\u4e00\u4e9b\u4e0d\u53ef\u8fdb\u7684\u6d1e\u53d8\u5f97\u201c\u53ef\u8fdb\u201d\u3002~~\u672c\u4eba\u56e0\u6b64\u4e22\u5931$20$\u5206\uff0c\u5e0c\u671b\u5404\u4f4d\u5f15\u4ee5\u4e3a\u6212~~ \u7136\u540e \u5750\u6807\u548c$r$\u4e5f\u8981\u662f$double$\u7c7b\u578b\u7684\u3002~~\u4e3a\u4e86\u66f4\u52a0\u5b89\u5168 \u5b9e\u9645\u6ca1\u4ec0\u4e48\u5fc5\u8981~~\n\n### 3.\u4ee3\u7801\n\n~~\u4f5c\u5f0a\u8005\u4eec\u501f\u9274\u7684\u65f6\u95f4\u5230\u4e86~~\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint flag=0;\ndouble d(double x,double y,double z,double x1,double y1,double z1)\n{\n\treturn sqrt((x-x1)*(x-x1)+(y-y1)*(y-y1)+(z-z1)*(z-z1));\n}\ndouble x[1005],y[1005],z[1005],r,h;\nint n,used[1005];\nvoid dfs(double x1,double y1,double z1)\n{\n\tif(z1+r>=h)\n\t{\n\t\tflag=1;\n\t\treturn;\n\t}\n\tif(flag) return;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tdouble c=d(x1,y1,z1,x[i],y[i],z[i]);\n\t\tif(c<=2*r && !used[i])\n\t\t{\n\t\t\tused[i]=1;\n\t\t\tdfs(x[i],y[i],z[i]);\n\t\t}\n\t}\n}\nint main()\n{\n\tint t;\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tflag=0;\n\t\tmemset(used,0,sizeof(used));\n\t\tcin>>n>>h>>r;\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tcin>>x[i]>>y[i]>>z[i];\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tif(z[i]<=r)\n\t\t\t{\n\t\t\t\tused[i]=1;\n\t\t\t\tdfs(x[i],y[i],z[i]);\n\t\t\t\tif(flag)\n\t\t\t\t{\n\t\t\t\t\tcout<<\"Yes\"<<endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tused[i]=0; \n\t\t\t}\n\t\tif(!flag) cout<<\"No\"<<endl;\n\t}\n\treturn 0;\n}//\u6700\u540e\u8b66\u544a \u7981\u6b62\u6284\u88ad\n```\n",
        "postTime": 1554640903,
        "uid": 90285,
        "name": "\u2468baka",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "**\u672c\u4eba\u5728\u60f3\u4e86\u4e00\u4e2a\u4e0b\u5348\u540e\u7ec8\u4e8e\u60f3\u51fa\u4e86~~\u6b63\u89e3~~\uff1b  \n\u5728\u4e0a\u5348\u6559\u7ec3\u7684\u6307\u5bfc\u4e0b\uff0c\u4f7f\u7528\u7684\u601d\u8def\u662fdfs\u6df1\u641c\u6765\u5b8c\u6210\uff1b\u6559\u7ec3\u7684\u6838\u5fc3\u601d\u8def\u662f\u7528dfs\u6df1\u641c\u52a0\u4e0aflag\u6807\u8bb0\u6765\u89e3\u51b3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n)(100\u4e07)\uff1b\n\u800c\u6211\u7684\u601d\u8def\u4e0d\u592a\u4e00\u6837\uff0c\u5148\u662f\u7528\u516c\u5f0f\uff0c\u7136\u540e\u5e38\u89c4dfs\u6df1\u641c\uff0c\u7528\u4e00\u4e2abool check\u6765\u5224\u65ad\u548c\u526a\u679d\uff0c\u6700\u540e\u4e3b\u7a0b\u5e8f\u8f93\u5165\u548c\u8f93\u51fa\u3002  \n\u8fd9\u9053\u9898\u7684\u89e3\u9898\u6838\u5fc3\u662fdfs\u6df1\u641c\uff0c\u800c\u7ec6\u8282\u5173\u952e\u662f\u6570\u7ec4\u8d4b\u96f6\u548clong long \u7684\u8fd0\u7528\u3002  \n\u63a5\u4e0b\u6765\u9644\u4e0aAC\u4ee3\u7801**\uff1a\n\n\n------------\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n//#include <bits/stdc++.h>\u9738\u6c14\u4e07\u80fd\u5934\uff0c\u96f7\u59c6\u4fdd\u4f51\u4e00\u904d\u8fc7\nusing namespace std;\n//----------\u5934\u6587\u4ef6-----\n\nlong long x[1005], y[1005], z[1005];\nbool vis[1005], fnd;\nlong long h,r;\nint T,n;\n//----------\u5b9a\u4e49\u53d8\u91cf--------\n\nlong long xxj(int a,int b)\n{ return (x[a]-x[b])*(x[a]-x[b]) + (y[a]-y[b])*(y[a]-y[b]) + (z[a]-z[b])*(z[a]-z[b]);}\n//----------\u516c\u5f0f\u8ba1\u7b97\u8ddd\u79bb-------\n\nvoid dfs(int xx)\n{\n  if (z[xx]>=h-r)\n  {\n   fnd=true;\n   return;\n  }\n  vis[xx]=true;\n  for (int i=1;i<=n;i++)\n  if (!vis[i]&&xxj(xx, i)<=(long long)4*r*r) dfs(i);\n}\n//-----------dfs\u6df1\u641c\u51fd\u6570--------\n\nbool check()\n{\n for (int i=1;i<=n;i++)\n {\n  if (z[i]<=r) dfs(i);\n  if (fnd) break;\n }\n  return fnd;\n}\n//--------\u526a\u679d\u548c\u5224\u65ad------\n\nvoid init()\n{\n fnd=false;\n memset(vis,0,sizeof(vis));\n memset(x,0,sizeof(x));\n memset(y,0,sizeof(y));\n memset(z,0,sizeof(z));\n}\n//--------\u6570\u7ec4\u8d4b0-------\n\nint main()\n{\n scanf(\"%d\",&T);\n while(T--)\n{\n init();\n scanf(\"%d%lld%lld\",&n,&h,&r);\n for (int i=1;i<=n;i++)\n scanf(\"%lld%lld%lld\",&x[i],&y[i],&z[i]);\n if(check()) printf(\"Yes\\n\");\n else printf(\"No\\n\");\n}\n return 0;\n}\n\n//----------\u4e3b\u7a0b\u5e8f-----\n```",
        "postTime": 1550046009,
        "uid": 121379,
        "name": "\u5341\u516d\u591c\u54b2\u591c\u10e6",
        "ccfLevel": 0,
        "title": "2017noip cheese.cpp  P3985 \u5976\u916a\u9898\u89e3\u53ca\u5fc3\u5f97"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u4e2a\u83dc\u9e21\uff0c\u5bf9\u4e8e\u5e76\u67e5\u96c6\u6ca1\u6709\u4ec0\u4e48\u4e86\u89e3\u3002\n\u4f46\u662f\u6211\u8fc7\u4e86\u8fd9\u9053\u9898\uff0c\u672c\u6765\u62b1\u7740\u53ea\u6709\u516b\u5341\u5206\u7684\u51c6\u5907\u3002\u8bf7\u8ba9\u6211\u5728\u5f00\u59cb\u524d\u5148\u6b22\u6b23\u4e09\u79d2\u3002\u6211\u60f3\u6211\u8fd9\u4e2a\u601d\u8def\u6216\u8bb8\u5bf9\u4e8e\u50cf\u6211\u8fd9\u6837\u7684\u65b0\u624b\u4f1a\u6709\u5e2e\u52a9\u5427\u3002\n\n\u8fdb\u5165\u6b63\u9898\uff0c\u8fdb\u5165\u6b63\u9898\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u8fd9\u9898\u9700\u8981\u7528\u5230\u641c\u7d22\u7b97\u6cd5\u3002\u6211\u8fd9\u4e2a\u65b9\u6cd5\u7528\u5230\u6df1\u641c\u3002\n\n\u653e\u4e0a\u4ee3\u7801\u4e00\u6b65\u6b65\u8bf4\n\n\n------------\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>  //sqrt\u51fd\u6570\u5728math\u5934\u6587\u4ef6\u4e2d\nusing namespace std;  //\u4e0d\u5199\u8fc7\u4e0d\u4e86\nint T;\nint n,h;   //n\u4e3a\u6570\u91cf\uff0ch\u4e3a\u9ad8\u5ea6\uff0cr\u4e3a\u534a\u5f84 \nlong long r;\nint flag=0;  //\u6807\u8bb0\u53d8\u91cf\u662f\u5426\u904d\u5386\nbool check[1001];  //\u68c0\u67e5\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u636e\u5c31\u7b97\u5199\u6210int\u578b\u4e5f\u6ca1\u5173\u7cfb\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6570\u7ec4\u5728\u8fd9\u9898\u4e2d\u4f5c\u4e3a\u903b\u8f91\u53d8\u91cf\u5728\u4f7f\u7528\nstruct ball{\n\tlong long x,y,z;   //\u7403\u5fc3\u5750\u6807\n}p[1001];\nbool compar(ball a,ball b)\n{\n\tif(a.z<b.z) return true;return false;\n}//\u6bd4\u8f83\u51fd\u6570\u63d0\u9ad8\u6548\u7387\ndouble dist(int a,int b)\n{\n\tlong long x1,x2,y1,y2,z1,z2;\n\tx1=p[a].x;\tx2=p[b].x;\n\ty1=p[a].y;\ty2=p[b].y;\n\tz1=p[a].z;\tz2=p[b].z;\n\treturn sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)+(z1-z2)*(z1-z2));\n}//\u8fd9\u8fb9\u7684double\u5f88\u91cd\u8981\u56e0\u4e3a\u5f00\u65b9\u4f1a\u6709\u5c0f\u6570\u70b9\uff0c\u4e00\u822c\u633a\u5927\u3002\u5982\u679c\u4f7f\u7528\u6df1\u641c\u65b9\u6cd5\u4f46\u662f\u53ea\u6709\u516b\u5341\u5206\u7684\uff0c\u4ee3\u7801\u6ca1\u5199\u6302\u7684\u8bdd\uff0c\u4e00\u822c\u5c31\u662f\u6570\u636e\u7c7b\u578b\u7684\u95ee\u9898\u3002\nvoid dfs(int k)\n{\n\tint i;\n\tcheck[k]=true;  //\u5168\u90e8\u6807\u8bb0\u68c0\u67e5\u8fc7\n\tif(p[k].z+r>=h)\n\t{\n\t\tflag=1;  //\u6807\u8bb0\u904d\u5386\u8fc7\n\t\treturn;\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(!check[i]&&dist(k,i)<=(double)2*r)  //\u5982\u679c\u6ca1\u6709\u68c0\u67e5\u800c\u4e14\u4e24\u7403\u5fc3\u7684\u8ddd\u79bb\u5c0f\u4e8e\u4ed6\u4eec\u7684\u534a\u5f84\uff0c\u5c31\u8fdb\u884c\u6df1\u641c\u3002\u8fd9\u91cc\u7684\u7c7b\u578b\u8f6c\u6362\u7684\u539f\u56e0\uff1ar\u7684\u7c7b\u578b\u662flong long \u6240\u4ee5\u8981\u8fdb\u884c\u8f6c\u6362\n\t\t{\n\t\t\tdfs(i);\n\t\t\tif(flag==1){break;}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>T;\n\tint i,j;\n\twhile(T--)\n\t{\n\t\tflag=0;  //\u9ed8\u8ba4\u5168\u90e8\u6ca1\u6709\u904d\u5386\n\t\tmemset(check,false,sizeof(check));\n\t\tscanf(\"%d%d%ld\",&n,&h,&r);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tcin>>p[i].x>>p[i].y>>p[i].z;\n\t\t}\n\t\tsort(p,p+n,compar);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(p[i].z<=r)dfs(i);\n\t\t\tif(flag==1)break;\n\t\t}\n\t\tif(flag==1)cout<<\"Yes\"<<endl;else cout<<\"No\"<<endl;\n\t}\t\n\treturn 0;\n}\n```\n\n\u5e0c\u671b\u5bf9\u5927\u5bb6\u4f1a\u6709\u5e2e\u52a9\u5427\uff0c\u5982\u679c\u8fd9\u4e2a\u4ee3\u7801\u8fd8\u6709\u4ec0\u4e48\u4e0d\u8db3\u6216\u8005\u662f\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\u53ef\u4ee5\u4e00\u8d77\u8ba8\u8bba\u9e2d\uff08\u6bd5\u7adf\u6211\u8fd8\u5f88\u83dc\uff0c\u8fd8\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70\u54c8\u54c8\u54c8\uff09...",
        "postTime": 1540131117,
        "uid": 100429,
        "name": "\u6768\u5f67\u5fde",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u8fd9\u9898\uff0c\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8981AC\u5b9e\u975e\u6613\u4e8b\uff08\u4ec5\u5bf9\u6211\u8fd9\u79cd\u8d85\u7ea7\u849f\u84bb\u800c\u8a00\uff09\uff0c\u7ec6\u8282\u975e\u5e38\u591a\uff0c\u7b97\u6cd5\u601d\u8def\u5012\u4e0d\u662f\u591a\u96be\u60f3\uff0c\u4f46\u662f\u5b9e\u73b0\u8d77\u6765\u6709\u4e00\u5b9a\u96be\u5ea6\u3002\n\n\u597d\u4e86\uff0c\u8a00\u5f52\u6b63\u4f20\u3002\u672c\u9898\u5171\u67093\u79cd\u53ef\u4ee5AC\u7684\u65b9\u6cd5\uff1adfs\uff0cbfs\uff0c\u5e76\u67e5\u96c6\u3002\u5b9e\u6d4bdfs\u5e94\u4e3a\u6700\u5feb\uff08\u9b3c\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u7684dfs\u8dd1\u4e86136ms\uff0c\u5e76\u67e5\u96c6\u8dd1\u4e861156ms\uff0c\u8fd9\u91cc\u5c31\u4ec5\u63d0\u4f9bdfs\u89e3\u6cd5\u4e86\uff09\n\n\u6211\u8ba4\u4e3a\uff0c\u672c\u9898\u6700\u5173\u952e\u7684\u5730\u65b9\u4e0d\u662fdfs\u6df1\u641c\u8fc7\u7a0b\u5982\u4f55\u5199\uff0c\u800c\u662f\u9700\u8981\u5173\u6ce8\u5230\u201c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u7a7a\u6d1e\u90fd\u662f\u8fde\u901a\u7684\u201d\uff0c\u7528\u56fe\u8bba\u672f\u8bed\u6765\u8bb2\uff0c\u8fd9\u4e0d\u662f\u4e00\u5f20\u8fde\u901a\u56fe\uff0c\u56e0\u6b641\u6b21dfs\u662f\u4e0d\u8db3\u4ee5\u6c42\u51fa\u6b63\u89e3\u7684\uff0c\u663e\u7136\u9700\u8981\u4ee5\u6240\u6709\u4e0e\u5e95\u8fb9\u201c\u63a5\u89e6\u201d\u7684\u7a7a\u6d1e\u4e3a\u8d77\u70b9\u8fdb\u884c\u591a\u6b21dfs\u4ee5\u904d\u5386\u6574\u4e2a\u5976\u916a\u3002\n\n\u53e6\u5916\uff0c\u6211\u5728AC\u540e\u7ffb\u4e86\u7ffb\u697c\u4e0b\u5404\u4f4d\u540c\u6837\u5199\u7684\u662fdfs\u7684\u5927\u4f6c\uff0c\u53d1\u73b0\u597d\u50cf\u5927\u5bb6\u90a3\u4e2a\u6807\u8bb0\u662f\u5426\u8bbf\u95ee\u8fc7\u7684\u6570\u7ec4\u7684\u521d\u503c\u90fd\u662f\u5728\u5faa\u73af\u5916\u9762\u8d4b\u7684\uff0c\u4f46\u8fd9\u663e\u7136\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u7406\u8bba\u4e0a\u6765\u8bf4\u6bcf\u6b21dfs\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u904d\u5386\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u67d0\u4e00\u4e2a\u6216\u51e0\u4e2a\u6d1e\u88ab\u591a\u6b21dfs\u904d\u5386\u5230\uff0c\u56e0\u6b64\u5927\u5bb6\u7684\u7a0b\u5e8f\u540c\u6837\u80fdAC\uff08\u53ef\u80fd\u662f\u56e0\u4e3a\u6570\u636e\u592a\u6c34\u7684\u539f\u56e0\u5427\uff0c\u5e0c\u671b\u5927\u5bb6\u6ce8\u610f\uff09\n\n\u8bf4\u4e86\u8fd9\u4e48\u591a\u7a7a\u8bdd\uff0c\u6211\u4eec\u6765\u770b\u7a0b\u5e8f\uff08\u5199\u5f97\u6781\u4e11\uff0c\u5927\u4f6c\u52ff\u6279\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t,n,h,r;\nbool flag,vis[1005];\nstruct Cheese\n{\n  long long x,y,z;\n}hole[1005];\nlong long sqr(int a) //\u624b\u5199\u5e73\u65b9\uff0c\u5927\u5bb6\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u5f3a\u5236\u8f6c\u6362\uff0c\u53ef\u4ee5\u770b\u770b\u4e0b\u9762\u7684\u64cd\u4f5c\n{\n  return (long long)a*a;\n}\nlong long dist(long long x1,long long x2,long long y1,\n               long long y2,long long z1,long long z2)\n{\n  return sqr(x1-x2)+sqr(y1-y2)+sqr(z1-z2); //\u5957\u516c\u5f0f\uff08\u6ce8\u610f\uff1a\u8fd9\u91cc\u4e0d\u8981\u5f00\u5e73\u65b9\uff0c\u4f1a\u51fa\u73b0\u7cbe\u5ea6\u95ee\u9898\uff09\n}\nvoid dfs(int now) //\u6df1\u641c\u5b50\u8fc7\u7a0b\n{\n  if(hole[now].z+r>=h) flag=true; //\u80fd\u5230\u9876\u7aef\uff0c\u5219\u6807\u8bb0\u9000\u51fa\n  if(flag) return;\n  vis[now]=true; //\u6807\u8bb0\u5df2\u8bbf\u95ee\u8fc7\n  for(int i=1; i<=n; i++) \n    if(i!=now&&!vis[i]&&dist(hole[now].x,hole[i].x,hole[now].y,\n\t   hole[i].y,hole[now].z,hole[i].z)<=sqr(2*r)) \n    {\n      dfs(i); //\u9012\u5f52\u904d\u5386\n    }\n}\nint main()\n{\n  scanf(\"%d\",&t);\n  for(int i=1; i<=t; i++)\n  {\n    scanf(\"%d%d%d\",&n,&h,&r);\n    for(int j=1; j<=n; j++) scanf(\"%d%d%d\",&hole[j].x,&hole[j].y,&hole[j].z); //\u8bfb\u5165\u4e0d\u89e3\u91ca\n\tflag=false;\n    for(int j=1; j<=n; j++) \n    {\n      if(flag) break;\n      memset(vis,false,sizeof(vis)); \n      if(hole[j].z-r<=0) dfs(j); //\u82e5\u4e0e\u5e95\u8fb9\u6709\u4ea4\u70b9\uff0c\u5f00\u59cbdfs\u6df1\u641c\n\t} \n\tif(flag) printf(\"Yes\\n\"); //\u8f93\u51fa\u7ed3\u679c\n      else printf(\"No\\n\");\n  }\n  return 0;\n}\n```",
        "postTime": 1531061381,
        "uid": 9156,
        "name": "\u5fae\u96e8\u71d5\u53cc\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u548c\u641c\u7d22\u7684\u65b9\u6cd5\u4e0b\u9762\u90fd\u6709\u4e86\uff0c\n\u90a3\u4e48\u6211\u5c31\u53d1\u4e2a\u4e0e\u4f17\u4e0d\u540c\u7684\u3002\n\n\n\u6211\u7528\u7684\u662f\u6784\u56fe+\u6700\u77ed\u8def\n\u5148\u901a\u8fc7\u5904\u7406\u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u6784\u56fe\uff0c\u4f7f\u8054\u901a\u7684\u70b9\u4e4b\u95f4\u8ddd\u79bb\u4e3a1\n\n\u4e4b\u540e\u518d\u5efa\u7acb\u8d77\u70b9\u548c\u91cd\u70b9\uff0c\u8fde\u63a5\u53ef\u4ee5\u5230\u8fbe\u5976\u916a\u8fb9\u7f18\u7684\u70b9\uff0c\u8ddd\u79bb\u4e3a1\n\n\u6700\u540e\u4e0d\u8fde\u901a\u7684\u70b9\u8ddd\u79bb\u5904\u7406\u4e3a\u8f83\u5927\u7684\u6570\u503c\uff08\u6211\u8bbe\u76848888\uff0c\u56e0\u4e3an\u6700\u5927\u662f1000\uff09\n\n\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u8dd1dijkstra\uff0c\u5982\u679c\u7ed3\u679c\u5c0f\u4e8e\u8f83\u5927\u503c\uff0c\u5219\u8f93\u51faYes\uff0c\u5426\u5219\u8d77\u70b9\u5230\u7ec8\u70b9\u4e0d\u8fde\u901a\uff0c\u8f93\u51faNo\n\n****\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a \u6700\u540e\u4e24\u4e2a\u6d4b\u8bd5\u70b9\u5750\u6807\u6570\u4e3a10^9\u7ea7Int\u53ef\u4ee5\u5b58\u5f97\u4e0b\uff0c\u4f46\u662f\u5728\u7b97\u8ddd\u79bb\u65f6\u4e24\u4e2a\u5927\u6570\u76f8\u4e58\u5bb9\u6613\u7206int\uff0c\u56e0\u6b64\u5750\u6807\u9700\u8981\u7528longlong\u5b58\n\ncode\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int MAXN  = 1010;\nstruct node{\n    long long x,y,z;\n}nod[MAXN];\nint t,r,n,h; \ndouble dist(node A,node B)\n{\n    return  sqrt((A.x-B.x)*(A.x-B.x) + (A.y-B.y)*(A.y-B.y) + (A.z-B.z)*(A.z-B.z));\n}\nint G[MAXN][MAXN];\nbool cmp(node A,node B)\n{\n    return A.z<B.z;\n}\nvoid get_dist()\n{\n    \n    node A,B;\n    double len ;\n    sort(nod+1,nod+1+n,cmp);\n    \n    for(int i =1 ;i<=n;i++)\n    for(int j =1 ;j<=n;j++)\n    {\n        A = nod[i]; B = nod[j];\n        len =  dist(A,B);\n        if(len <= r*2)\n        {\n          G[i][j] = 1;\n          G[j][i] = 1;\n        }\n    }\n    for(int i = 1;i<=n;i++)\n    {\n        if(nod[i].z <= r)\n        {\n            G[n+2][i] = 1;\n            G[i][n+2] = 1;\n        }\n        else break;\n    }\n    for(int i = n;i>=1;i--)\n    {\n        if(nod[i].z+r>=h)\n        {\n            G[n+1][i] = 1;\n            G[i][n+1] = 1;\n        }\n        else break;\n    }\n    \n}\nbool vis[MAXN];\nlong long dis[MAXN];\nint pre[MAXN];\nvoid dijkstra(int x)\n{\n    memset(vis,0,sizeof(vis));\n    memset(dis,0,sizeof(dis));\n    memset(pre,0,sizeof(pre));\n    vis[x]=1;pre[x]=0;\n    for(int i=1;i<=n+2;i++)\n    if(i!=x)\n    {\n    dis[i]=(long long)G[x][i];\n    pre[i]=x;\n    }\n    for(int i=1;i<=n+2;i++)\n    {\n    \tlong long m=8888;\n    \tint k=x;\n    \tfor(int j=1;j<=n+2;j++)\n    \tif(vis[j]==0&&m>dis[j])\n    \t{\n    \t\tm=dis[j];\n    \t\tk=j;\n        }\n        vis[k]=1;\n        for(int j=1;j<=n+2;j++)\n        if((vis[j]==0)&&(dis[k]+G[k][j]<dis[j]))\n        {\n            dis[j]=dis[k]+(long long)G[k][j];\n            pre[j]=k;\n        }\n    }\n    \n} \n\nint main()\n{\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++)\n    {\n        memset(nod,0,sizeof(nod));\n        scanf(\"%d%d%d\",&n,&h,&r);\n        for(int j = 1;j<=n;j++)\n        scanf(\"%d%d%d\",&nod[j].x,&nod[j].y,&nod[j].z);\n       \n        for(int j = 1;j<=n+2;j++)\n        for(int k = 1;k<=n+2;k++)\n        {\n        \tG[j][k] = 8888;\n        }\n        \n        get_dist();\n        \n    \n        \n        dijkstra(n+2);\n        \n        if(dis[n+1]<8888)\n          printf(\"Yes\\n\");\n        else\n          printf(\"No\\n\");\n        \n    }\n    return 0;\n}\n```",
        "postTime": 1526126310,
        "uid": 72284,
        "name": "HenryZhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u8c28\u4ee5\u6b64\u9898\u6765\u7eaa\u5ff5\u6211\u7206\u70b8\u7684NOIp2017\n\n-----------------------\n\n\u8fd9\u4e2a\u9898\u867d\u7136\u5f88\u591a\u4eba\u8bf4\u662f\u5e76\u67e5\u96c6,\u4f46\u662f\u641c\u7d22\u4e5f\u662f\u6beb\u65e0\u538b\u529b\u7684,\u8003\u573a\u641c\u7d22\u7ec6\u8282\u5199\u6302,\u7206\u4e86\u4e2a\u4e0d\u4e0a\u4e0d\u4e0b\u768480\u5206\u3002\u4eca\u5929\u65e0\u610f\u770b\u5230\u8fd9\u9053\u9898\uff0c\u7ec8\u4e8eAC\n\n- \u9996\u5148\u8fd9\u9053\u9898\u8981\u8003\u8651\u4e00\u4e0b\u7cbe\u5ea6\u95ee\u9898,\u867d\u7136\u51fa\u9898\u4eba\u6ca1\u6709\u6bd2\u7624\u7684\u5361\u7cbe\u5ea6,\u4f46\u8fd8\u662f\u8981\u503c\u5f97\u6ce8\u610f\u3002\u89e3\u51b3\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355,\u53bb\u9664\u5f00\u65b9\u8fd0\u7b97,\u800c\u662f\u5c06\u534a\u5f84\u5e73\u65b9,\u5373$2r$ ---> $4r^2$,\u8fd9\u6837\u5c31OK\u4e86\u3002\u4e0d\u8fc7\u8981\u8bb0\u5f97\u7528$\\rm long\\;long$,\u4e0d\u7136\u4f1a\u7206$\\rm int$\n\n- \u7136\u540e\u8003\u8651\u5982\u4f55\u641c\u7d22,\u6211\u662f\u5c06\u6bcf\u7ec4\u6570\u636e\u7528\u524d\u5411\u661f\u5b58\u6210\u56fe,\u7136\u540e\u641c\u8fd9\u5f20\u56fe\u3002\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u5f88\u7279\u522b\u7684\u5730\u65b9,\u90a3\u5c31\u662f\u5b83\u4e0d\u7528\u56de\u6eaf,\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u70b9\u5230\u4e0d\u4e86\u7ec8\u70b9,\u90a3\u518d\u6b21\u641c\u5230\u7684\u8bdd\u4e5f\u8fd8\u662f\u5230\u4e0d\u4e86\u7ec8\u70b9,\u6240\u4ee5\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u5c06\u5b83\u518d\u641c\u4e00\u904d\u5462?\u76f4\u63a5\u4e22\u6389\u5c31\u597d\u4e86\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define ll long long\nusing namespace std;\ninline int read() //\u5feb\u8bfb \n{\n    int k=0,f=1;\n    char c=getchar();\n    for(;!isdigit(c);c=getchar())\n    if(c=='-')f=-1;\n    for(;isdigit(c);c=getchar())\n    k=k*10+c-48;\n    return k*f;\n}\nstruct zzz{  //\u5b58\u7a7a\u6d1e\u7684\u5750\u6807 \n\tll x,\n\t   y,\n\t   z;\n}che[1001];\ninline ll f(zzz x,zzz y)  //\u8ba1\u7b97\u7a7a\u6d1e\u8ddd\u79bb \n{\n\treturn (x.x-y.x)*(x.x-y.x)+(x.y-y.y)*(x.y-y.y)+(x.z-y.z)*(x.z-y.z);\n}\nstruct hhh{  //\u5b58\u56fe \n\tint f,\n\t\tt,\n\t\tnex;\n}e[2000001];  int head[1001]; int tot;\ninline void add(int x,int y)  //\u524d\u5411\u661f \n{\n\te[++tot].f=x;\n\te[tot].t=y;\n\te[tot].nex=head[x];\n\thead[x]=tot;\n}\nint s[1001],flag; bool en[1001],vis[1001]; \n//s:\u53ef\u4ee5\u5f53\u4f5c\u8d77\u70b9\u7684\u7a7a\u6d1e  flag:\u53ef\u4ee5\u5f53\u4f5c\u8d77\u70b9\u7684\u7a7a\u6d1e\u7684\u4e2a\u6570  en:\u7ec8\u70b9\u7a7a\u6d1e  vis:\u8fd9\u4e2a\u70b9\u662f\u5426\u8d70\u8fc7 \nbool ans;  //\u5224\u65ad\u80fd\u5426\u5230\u8fbe\u4e0a\u8868\u9762 \nvoid dfs(int str)  //\u641c\u7d22\u4e3b\u4f53 \n{\n\tif(en[str])  //\u627e\u5230\u7ec8\u70b9\u5c31\u4e0d\u7528\u641c\u4e86 \n\t{\n\t\tans=1;  return ;\n\t}\n\tfor(int i=head[str];i;i=e[i].nex)  //\u5411\u4e0b\u5bfb\u627e\u80fd\u641c\u7684\u70b9 \n\t  if(!vis[e[i].t])\n\t  {\n\t\t  vis[e[i].t]=1;  //\u76f4\u63a5\u6807\u5fd7\u4e3a\u641c\u8fc7,\u4e0d\u518d\u56de\u6eaf \n\t\t  dfs(e[i].t);  //\u5411\u4e0b\u641c\u7d22 \n\t\t  if(ans)\n\t\t\treturn ;\n\t  }\n}\nint main()\n{\n\tint t; t=read();\n\tint n; ll h,r;\n\twhile(t--)\n\t{\n\t\ttot=0; memset(head,0,sizeof(head)); ans=0;\n\t\tflag=0; memset(en,0,sizeof(en)); memset(vis,0,sizeof(vis)); //\u6e05\u7a7a\u6240\u6709\u53d8\u91cf \n\t\tn=read(),h=read(),r=read();\n\t\tfor(int i=1;i<=n;i++)  //\u8f93\u5165\u6570\u636e + \u5904\u7406\u6210\u56fe \n\t\t{\n\t\t\tche[i].x=read(),che[i].y=read(),che[i].z=read();\n\t\t\t\n\t\t\tif(che[i].z<=r) //\u5982\u679cz>=\u534a\u5f84,\u90a3\u4e48\u8fd9\u4e2a\u7a7a\u6d1e\u548c\u4e0b\u8868\u9762\u63a5\u89e6,\u5c06\u5b83\u52a0\u5165\u8d77\u70b9 \n\t\t\t  s[++flag]=i;\n\t\t\tif(che[i].z>=h-r) //\u540c\u7406,\u5982\u679cz>=h-r,\u90a3\u5b83\u548c\u4e0a\u8868\u9762\u63a5\u89e6,\u5c06\u5b83\u52a0\u5165\u7ec8\u70b9 \n\t\t\t  en[i]=1;\n\t\t\tfor(int j=1;j<i;j++)\n\t\t\t  if(f(che[i],che[j])<=4*r*r) //\u9632\u6b62\u7cbe\u5ea6\u635f\u5931 \n\t\t\t  {\n\t\t\t\t  add(i,j);  add(j,i);\n\t\t\t  }\n\t\t}\n\t\t// \u641c\u7d22 + \u8f93\u51fa \n\t\tbool jjj=0;\n\t\tfor(int i=1;i<=flag;i++)\n\t\t{\n\t\t\tdfs(s[i]);\n\t\t\tif(ans)\n\t\t\t{\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t\tjjj=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!jjj)\n\t\t  printf(\"No\\n\");\n\t}\n\treturn 0;\n}\n```\n\n- \u6253\u4e2a\u5e7f\u544a\u5427\n\n\u3000\u5728\u4e0b\u7684[\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/34188/)\u548c[\u535a\u5ba2\u56ed\u535a\u5ba2](http://www.cnblogs.com/wxl-Ezio/)\n",
        "postTime": 1523972164,
        "uid": 34188,
        "name": "MorsLin",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u770b\u5927\u4f6c\u4eec\u7684\u5e76\u67e5\u96c6\u548cdfs\u3001bfs\uff0c\u8fd8\u6709\u5404\u79cd\u7384\u5b66\u7b97\u6cd5\uff0c\u849f\u84bb\u6211\u975e\u8981\u53bb\u5f3a\u884c\u5957\u7f51\u7edc\u6d41\u7684\u677f\u5b50\u6765\u5c0f\u9898\u5927\u505a\u3002\uff08\u5927\u6982\u662f\u6211\u592a\u95f2\u4e86\uff09\n\n~~\u8fd9\u4f3c\u4e4e\u663e\u5f97\u6211\u6709\u4e9b\u795e\u7ecf\u75c5\u3002~~\n\n\u5730\u9762\u5f53\u6e90\u70b9\uff0c\u9876\u9762\u5f53\u6c47\u70b9\uff0c\u6bcf\u4e2a\u7403\u5f53\u505a\u4e00\u4e2a\u8282\u70b9\uff0c\u8ddd\u79bb$2r$\u6216\u8005\u8fde\u7740\u9876\u9762\u5e95\u9762\u7684\u5c31\u8fde\u8fb9\uff0c\u7136\u540e\u8dd1\u7f51\u7edc\u6d41\uff0c\u6d41\u91cf\u4e0d\u4e3a0\u5c31\u662fYes\uff0c\u6d41\u91cf\u4e3a0\u5c31\u662fNo\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\n\nconst int inf=0x7f7f7f7f;\nconst LL linf=0x7f7f7f7f7f7f7f7f;\nconst int maxn=1010;\n\ninline int read()\n{\n\tchar ch=getchar();int f=1,ans=0;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')ans=ans*10+(ch-'0'),ch=getchar();\n\treturn ans*f;\n}\n\ntypedef struct EdgeNode\n{\n\tint to,flow;\n\tEdgeNode *next,*turn;\n}*Edge;\n\nEdgeNode edge_memory[maxn*maxn+maxn*2];\nEdge head[maxn],now,cur[maxn];\nint Lv[maxn];\nint s,t,n;\nLL h,r;\n\nstruct POT\n{\n\tLL x,y,z;\n}pot[maxn];\n\ninline void init()\n{\n\tmemset(edge_memory,0,sizeof edge_memory);\n\tnow=edge_memory;\n\tmemset(head,0,sizeof head);\n}\n\ninline void add(int u,int v,int w)\n{\n\tEdge node1=now++,node2=now++;\n\tnode1->to=v,node2->to=u;\n\tnode1->flow=w,node2->flow=0;\n\tnode1->turn=node2,node2->turn=node1;\n\tnode1->next=head[u],node2->next=head[v];\n\thead[u]=node1,head[v]=node2;\n}\n\nbool bfs()\n{\n\tqueue<int> que;\n\tmemset(Lv,-1,sizeof Lv);\n\tque.push(s);\n\tLv[s]=0;\n\twhile(!que.empty())\n\t{\n\t\tint u=que.front();\n\t\tque.pop();\n\t\tfor(Edge node=head[u];node;node=node->next)\n\t\t{\n\t\t\tint v=node->to;\n\t\t\tif(!~Lv[v]&&node->flow)\n\t\t\t{\n\t\t\t\tLv[v]=Lv[u]+1;\n\t\t\t\tque.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn ~Lv[t];\n}\n\nint dfs(int pos,int flow)\n{\n\tif(pos==t)\n\t\treturn flow;\n\tint sum=0;\n\tfor(Edge node=cur[pos];node;node=node->next)\n\t{\n\t\tint to=node->to;\n\t\tif(Lv[to]==Lv[pos]+1&&node->flow)\n\t\t{\n\t\t\tint fl=dfs(to,min(flow-sum,node->flow));\n\t\t\tnode->flow-=fl,node->turn->flow+=fl,sum+=fl;\n\t\t\tif(node->flow)\n\t\t\t\tcur[pos]=node;\n\t\t\tif(sum==flow)\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn sum;\n}\n\nint dinic()\n{\n\tint flow=0;\n\twhile(bfs())\n\t{\n\t\tmemcpy(cur,head,sizeof head);\n\t\tflow+=dfs(s,inf);\n\t}\n\treturn flow;\n}\n\ninline bool judge(POT a,POT b)\n{\n\tLL xx=a.x-b.x,yy=a.y-b.y,zz=a.z-b.z;\n\treturn xx*xx+yy*yy+zz*zz<=4*r*r;\n}\n\nvoid build()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tPOT a=pot[i],b;\n\t\tif(a.z+r>=h)\n\t\t\tadd(i,t,1);\n\t\tif(a.z-r<=0)\n\t\t\tadd(s,i,1);\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(i!=j)\n\t\t\t{\n\t\t\t\tb=pot[j];\n\t\t\t\tif(judge(a,b))\n\t\t\t\t\tadd(i,j,1);\n\t\t\t}\n\t}\n}\n\nint main()\n{\n\tint T=read();\n\twhile(T--)\n\t{\n\t\tinit();\n\t\tn=read(),h=read(),r=read();\n\t\ts=0,t=n+1;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tint x=read(),y=read(),z=read();\n\t\t\tpot[i]=(POT){x,y,z};\n\t\t}\n\t\tbuild();\n\t\tif(dinic())\n\t\t\tputs(\"Yes\");\n\t\telse\n\t\t\tputs(\"No\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1523373023,
        "uid": 48500,
        "name": "AntaresQAQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "/\\*\u6211\u7528\u7684**\u5e76\u67e5\u96c6**\u3002\n\n\u5f53\u4e24\u4e2a\u6d1e i , j \u53ef\u4ee5\u8fde\u5728\u4e00\u8d77\u65f6\u5c31\u53ef\u4ee5\u628a\u5b83\u4eec\u7684\u7f16\u53f7\u653e\u5728\u4e00\u4e2a\u201c\u96c6\u5408\u201d\u91cc\uff08\u5373f [ find( i ) ] = find( j )\uff09\uff0c\u8fde\u6210\u4e00\u4e2a\u5927\u6d1e\u3002\u7136\u540e\u8bb0\u5f55\u4e0b\u5f53\u524d\u8fd9\u4e2a\u5927\u6d1e\u7684\u80fd\u8fbe\u5230\u7684\u6700\u4e0a\u65b9\u4e0e\u6700\u4e0b\u65b9\u7684z\u8f74\u4e0a\u7684\u5750\u6807\uff08\u4ee5h\u4e0e0\u4e3a\u754c\uff09\uff0c\u6700\u540e\u518d\u627e\u4e00\u4e0b\u54ea\u4e00\u4e2a\u5927\u6d1e\u53ef\u4ee5\u6ee1\u8db3\u6700\u4f4e\u5904\u4e3a0\uff0c\u6700\u9ad8\u5904\u4e3ah\u5373\u53ef\u3002\n\n\u5f53\u7136\uff0c\u522b\u5fd8\u8bb0\u5f00long long\uff08\u6211\u8003\u8bd5\u65f6\u6ca1\u5f00long long\u8fd8\u52a0\u4e0a\u4e86\u81ea\u8ba4\u4e3a\u5f88\u5bf9\u7684\u7279\u5224\uff0c\u5c31\u6ca1\u80fd\u6ee1\u5206\u3002\u3002\u3002\uff09\n\n\\*/\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<cmath>\nusing namespace std;\nlong long T,n,h,r,f[1005],h1[1005],h2[1005];\nstruct da{long long x,y,z;}a[1005];\nlong long read()\n{\n    long long x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch<='9'&&ch>='0'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nlong long find(long long x) {return x==f[x]?x:f[x]=find(f[x]);}\nbool suan(long long i,long long j)\n{\n    double dis=sqrt(abs(a[i].x-a[j].x)*abs(a[i].x-a[j].x)+abs(a[i].y-a[j].y)*abs(a[i].y-a[j].y)+abs(a[i].z-a[j].z)*abs(a[i].z-a[j].z));\n    if(dis<=r*2)return 1;\n    else return 0;\n}\nint main()\n{\n    T=read();\n    while(T--)\n    {\n        n=read();h=read();r=read();\n        memset(f,0,sizeof(f));memset(a,0,sizeof(a));\n        memset(h1,0,sizeof(h1));memset(h2,0,sizeof(h2));\n        for(int i=1;i<=n;i++) a[i].x=read(),a[i].y=read(),a[i].z=read(),\n                              f[i]=i,h1[i]=max(a[i].z-r,1ll*0),h2[i]=min(a[i].z+r,h);\n        for(int i=1;i<=n;i++)\n        for(int j=i+1;j<=n;j++)\n        {\n            if(!suan(i,j))continue;\n            long long fx=find(i),fy=find(j);\n            if(fx==fy)continue;\n            f[fx]=fy;\n            h1[fy]=min(h1[fy],h1[fx]);\n            h2[fy]=max(h2[fy],h2[fx]);\n        }\n        for(int i=1;i<=n;i++)\n        if(f[i]==i)\n        if(h2[i]-h1[i]>=h)\n        {\n            printf(\"Yes\\n\");\n            goto aaa;\n        }\n        printf(\"No\\n\");\n        aaa:;\n    }\n    return 0;\n}\n\n```",
        "postTime": 1511664096,
        "uid": 36627,
        "name": "\u6267\u82b1\u6155\u601c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u53ef\u4ee5\u628a\u4e24\u7403\u5fc3\u8ddd\u79bb\u5c0f\u4e8e\u7403\u76f4\u5f84\u7684\u4e24\u4e2a\u70b9\u5efa\u8fb9\uff0c\u5e76\u628a\u4e8e\u5e95\u9762\u76f8\u4ea4(\u6216\u76f8\u5207)\u548c\u4e8e\u9876\u9762\u76f8\u4ea4(\u6216\u76f8\u5207)\u7684\u70b9\u5206\u522b\u8fde\u5230 0\u53f7\u70b9 \u548c (n+1)\u597d\u70b9\uff0c\u5efa\u5b8c\u8fb9\u540e\u8dd1BFS\uff0c\u4ece0\u5f00\u59cb\uff0c\u8981\u662f\u8dd1\u5230\u4e86n+1\uff0c\u5219\u7b26\u5408\u9898\u610f\u3002 \u4e0b\u9762\u8d34\u4e0a\u8003\u573a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define mem(a) memset(a,0,sizeof(a))\n#define For(i,j,k) for(register int i=(j);i<=(k);++i)\n#define Forr(i,j,k) for(register int i=(j);i>=(k);--i)\nusing namespace std;\n\ntemplate<typename T>\ninline void read(T &x){\n    T p=1,c=getchar();\n    x=0;\n    while(!isdigit(c)){\n        if(c=='-') p=-1;\n        c=getchar();\n    }\n    while(isdigit(c)){\n        x=(x<<1)+(x<<3)+(c^48);\n        c=getchar();\n    }\n    x*=p;\n}\n\ninline void file(){\n    freopen(\"cheese.in\",\"r\",stdin);\n    freopen(\"cheese.out\",\"w\",stdout);\n}\n\ntypedef long long ll;\nconst int maxn=1000+10,maxm=1e6+10;\nstruct node{\n    ll x,y,z;\n}a[maxn];\nll h,r;\nint Case,n,vis[maxn],e,flag,beg[maxm<<1],to[maxm<<1],nex[maxm<<1];\n\ninline void Clear(){ //\u591a\u7ec4\u6570\u636e\u7684\u6e05\u7a7a \n    e=flag=0;\n    mem(vis),mem(beg);\n}\n\ninline void add(int x,int y){\n    to[++e]=y;\n    nex[e]=beg[x];\n    beg[x]=e;\n}\n\ninline void Init(){\n    read(n),read(h),read(r);\n    For(i,1,n){\n        read(a[i].x);\n        read(a[i].y);\n        read(a[i].z);\n        if(a[i].z<=r) add(0,i),add(i,0);        //\u628a\u4e0e\u5e95\u90e8\u76f8\u4ea4\u7684\u7403\u4f53\u8fde\u5230 0\u70b9 \n        if(h-a[i].z<=r) add(i,n+1),add(n+1,i);    //\u628a\u4e0e\u9876\u90e8\u76f8\u4ea4\u7684\u7403\u4f53\u8fde\u5230(n+1)\u70b9 \n    }\n}\n\ninline ll sq(ll x){return x*x;}\n\ninline ll calc(int i,int j){\n    ll v=(sq(a[i].x-a[j].x)+sq(a[i].y-a[j].y)+sq(a[i].z-a[j].z));\n    return v;\n}\n\ninline void build_edge(){    // \u6309\u9898\u610f\u5efa\u8fb9 \n    For(i,1,n-1) For(j,i+1,n)\n        if(a[i].z-a[j].z<=(r<<1) || a[j].z-a[i].z<=(r<<1))\n            if(i!=j && calc(i,j)<=sq(r<<1)){\n                add(i,j),add(j,i);    \n            }\n}\n\ninline void BFS(){\n    queue<int> Q;\n    vis[0]=1,Q.push(0);\n    while(!Q.empty()){\n        int x=Q.front();\n        Q.pop();\n        for(register int i=beg[x];i;i=nex[i]){\n            int t=to[i];\n            if(!vis[t]){\n                vis[t]=1;\n                Q.push(t);\n            }\n            if(t==n+1){    //\u4e00\u65e6\u4ece0\u70b9\u5f00\u59cb\u641c\u5230(n+1)\u70b9\uff0c\u8868\u793a\u4e0a\u4e0b\u4e24\u4e2a\u9762\u8054\u901a \n                flag=1;\n                break;\n            }\n        }\n    }\n    if(flag) printf(\"Yes\\n\");\n    else printf(\"No\\n\");\n}\n\nint main(){\n//    file();\n    read(Case);\n    while(Case--){\n        Clear();\n        Init();\n        build_edge();\n        BFS();\n    }\n    return 0;\n}\n```",
        "postTime": 1511659453,
        "uid": 23088,
        "name": "LSTete",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u4e00\u9053\u8bb0\u5fc6\u5316\u641c\u7d22 \u6211\u7528\u7684dfs\n\n\u5148\u6c42\u51fa\u6240\u6709\u7403\u5fc3\u4e0e\u7403\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bbO\uff08n2\uff09\u76f8\u5207\u6216\u76f8\u4ea4\u7684\u5efa\u8fb9\uff0c\u540c\u65f6\u6807\u8bb0\u51fa\u6240\u6709\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\n\n\u679a\u4e3e\u6bcf\u4e2a\u8d77\u70b9 \u4e00\u65e6\u8d70\u5230\u4e86\u5176\u4e2d\u4e00\u4e2a\u7ec8\u70b9\u5219return 1 \u5373\u8fd9\u6761\u8def\u80fd\u8d70\u5230\u4e0a\u8868\u9762\uff0c \u5982\u679c\u8d70\u5230\u4e86\u6b7b\u8def\u5219return 0 \u5373\u8fd9\u6761\u8def\u8d70\u4e0d\u5230\u4e0a\u8868\u9762\n\n\u56e0\u4e3a\u6bcf\u4e00\u6b21\u6df1\u641c\u90fd\u662f\u76f4\u5230\u641c\u5b8c\u80fd\u8fbe\u5230\u7684\u6240\u6709\u70b9\u4e3a\u6b62\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u8d70\u4e00\u6b21\u5c31\u884c \uff0c\u5728\u8fd9\u4e2a\u5730\u65b9\u8bb0\u5fc6\u5316\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<map>\nusing namespace std;\ntypedef long long ll;\nint t;\nint n;\nll h,r;\nstruct node\n{\n    ll x,y,z;\n}hole[1005];\nll dist(node a,node b)\n{\n    return (a.x-b.x)*(a.x-b.x)/4+(a.y-b.y)*(a.y-b.y)/4+(a.z-b.z)*(a.z-b.z)/4;\n}\nll dist1(node a,node b)\n{\n    return (a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)+(a.z-b.z)*(a.z-b.z);\n}\nstruct nod\n{\n    int to,last;\n}e[2000001];\nint head[1005];\nint cnt;\nvoid add(int x,int y)\n{\n    cnt++;\n    e[cnt].to=y;\n    e[cnt].last=head[x];\n    head[x]=cnt;\n}\nint st[1005],ed[1005];\nint nums,nume;\nbool ised[1005],isst[1005];\nbool vis[1005];\nbool ans[1005];\nbool search(int x)\n{\n    if(vis[x]==0)\n    {\n        vis[x]=1;\n    }\n    else\n    {\n        return ans[x];\n    }\n    if(ised[x]==1)\n    return 1;\n    for(int i=head[x];i;i=e[i].last)\n    {\n        int t=e[i].to;\n        if(t==x) continue;\n        if(search(t)==1)\n        {\n            ans[x]=1;\n            return ans[x];\n        }\n    }\n    ans[x]=0;\n    return ans[x];\n}\nint main()\n{\n    //freopen(\"cheese.in\",\"r\",stdin);\n    //freopen(\"cheese.out\",\"w\",stdout);\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        memset(hole,0,sizeof hole);\n        memset(e,0,sizeof e);\n        memset(head,0,sizeof head);\n        cnt=0;\n        for(int i=1;i<=1000;i++)\n        {\n            st[i]=0;\n            vis[i]=0;\n            ed[i]=0;\n            isst[i]=0;\n            ans[i]=0;\n            ised[i]=0;\n        }\n        nums=0,nume=0;\n        scanf(\"%d%lld%lld\",&n,&h,&r);\n        for(int i=1;i<=n;i++)\n        {\n            scanf(\"%lld%lld%lld\",&hole[i].x,&hole[i].y,&hole[i].z);\n        }\n        if(n==1)\n        {\n            if(hole[1].z-r<=0&&hole[1].z+r>=h)\n            {\n                printf(\"Yes\\n\");\n            }\n            else\n            {\n                printf(\"No\\n\");\n            }\n            continue;\n        }\n        bool b=0;\n        for(int i=1;i<=n;i++)\n        {\n            if(hole[i].z-r<=0)\n            {\n                st[++nums]=i;\n                isst[i]=1;\n            }\n            if(hole[i].z+r>=h)\n            {\n                ed[++nume]=i;\n                ised[i]=1;\n            }\n            if(isst[i]==1&&ised[i]==1)\n            {\n                b=1;\n                break;\n            }\n        }\n        if(b==1)\n        {\n            printf(\"Yes\\n\");\n            continue;\n        }\n        if(nums==0||nume==0)\n        {\n            printf(\"No\\n\");\n            continue;\n        }\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                if(i==j)continue;\n                if(r>100000000)\n                {\n                ll dis=dist(hole[i],hole[j]);\n                if(dis<=r*r)\n                {\n                    add(i,j);\n                    add(j,i);\n                }\n                }\n                else\n                {\n                ll dis=dist1(hole[i],hole[j]);\n                if(dis<=4*r*r)\n                {\n                    add(i,j);\n                    add(j,i);\n                }\n                }\n            }\n        }\n        bool bo=0;\n        for(int i=1;i<=nums;i++)\n        {\n            if(search(st[i])==1)\n            {\n                bo=1;\n                printf(\"Yes\\n\");\n                break;\n            }\n        }\n        if(bo==1)\n        {\n            continue;\n        }\n        else\n        {\n            printf(\"No\\n\");\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1511274792,
        "uid": 47743,
        "name": "cocovigour",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u8fd9\u5230\u9898\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u89e3\u51b3\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u800c\u4e14\u4e0d\u7528\u5efa\u56fe\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u628a\u53ef\u4ee5\u4ece\u5976\u916a\u5e95\u90e8\u8fdb\u5165\u7684\u6d1e\u53eb\u505a\u201c\u2018\u5165\u53e3\u2019\u201d\uff0c\u4ece\u5976\u916a\u9876\u90e8\u8fdb\u5165\u7684\u6d1e\u53eb\u505a\u201c\u2018\u51fa\u53e3\u2019\u201d\u3002\n\n\u6211\u4eec\u53ea\u9700\u5224\u65ad\u662f\u5426\u6709\u201c\u5165\u53e3\u201d\u548c\u201c\u51fa\u53e3\u201d\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\u5373\u53ef\u3002\n\n\u5224\u65ad\u4e24\u4e2a\u6d1e\u662f\u5426\u8054\u901a\u65f6\uff0c\u4e3a\u4e86\u907f\u514d\u4f7f\u7528\u6d6e\u70b9\u6570\u9020\u6210\u7684\u7cbe\u5ea6\u635f\u5931\uff0c\u5e94\u5c06\u5224\u65ad\u5f0f\u4e24\u4fa7\u540c\u65f6\u5e73\u65b9\u3002\n\n\u5224\u65ad\u5f0f\u4e0d\u5728\u6b64\u5217\u51fa\u3002\n\n\u5177\u4f53\u89e3\u91ca\u89c1\u4ee3\u7801\u3002\n\n\u505a\u4e86\u4e24\u4e2a\u4f18\u5316\u3002\n\n```cpp\n#include<cstdio>\n#include<cctype>\n\n//\u5feb\u901f\u8bfb\u5165\u3002\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002\n//\u8bfb\u5165int\u7c7b\u578b\u6574\u6570\u7684\u5feb\u901f\u8bfb\u5165\nint readi()\n{\n    register int a = 0;\n    register char c = getchar();\n    int x = 1;\n    while(!isdigit(c))\n    {\n        if(c == '-')\n            x = -1;\n        c = getchar();\n    }\n    while(isdigit(c))\n    {\n        a = (a << 3) + (a << 1) + c - '0';\n        c = getchar();\n    }\n    return a * x;\n}\n//\u8bfb\u5165long long\u7c7b\u578b\u7684\u5feb\u901f\u8bfb\u5165\nlong long readl()\n{\n    register long long a = 0;\n    register char c = getchar();\n    int x = 1;\n    while(!isdigit(c))\n    {\n        if(c == '-')\n            x = -1;\n        c = getchar();\n    }\n    while(isdigit(c))\n    {\n        a = (a << 3) + (a << 1) + c - '0';\n        c = getchar();\n    }\n    return a * x;\n}\n\nconst int maxn = 1007;\n//\u50a8\u5b58\u5976\u916a\u5750\u6807\u7684\u7ed3\u6784\u4f53\u6570\u7ec4\nstruct che{\n    int x;\n    int y;\n    int z;\n}cheese[maxn];\n\nint t;\nint n, h;\nlong long r;\nbool end;//\u8fd9\u4e2a\u53d8\u91cf\u7528\u4e8e\u4f18\u5316\u901f\u5ea6\uff0c\u6fc0\u6d3b\u540e\u4f1a\u8df3\u51fa\u8f93\u5165\u5916\u7684\u6240\u6709\u5904\u7406\n         //\u6fc0\u6d3b\u90e8\u5206\u5728init\u51fd\u6570\n\nint out[maxn];//\u8bb0\u5f55\u6240\u6709\u201c\u51fa\u53e3\u201d\u7684\u6570\u7ec4\nint in[maxn]; //\u8bb0\u5f55\u6240\u6709\u201c\u5165\u53e3\u201d\u7684\u6570\u7ec4\nint po, pi;   //\u6570\u7ec4\u5c3e\u6307\u9488\uff0c\u5206\u522b\u6307\u5411in\u548cout\u6700\u540e\u4e00\u4e2a\u50a8\u5b58\u6570\u7684\u4f4d\u7f6e\u7684*\u4e0b\u4e00\u4e2a8\u4f4d\u7f6e\n\n//\u5b58\u50a8\u5e76\u67e5\u96c6\u4e0a\u7ea7 \u6839\u8282\u70b9\u5b58\u50a8\u8be5\u6811\u8282\u70b9\u7684*\u76f8\u53cd\u6570*\nint fa[maxn];\n//\u5e76\u67e5\u96c6\u67e5\u627e\u6839\u8282\u70b9\nint find(int x)\n{\n    if(fa[x] < 0) return x;\n    return fa[x] = find(fa[x]);\n}\n//\u5e76\u67e5\u96c6\u5408\u5e76\ninline bool unite(int x, int y)\n{\n    if(fa[x] < fa[y])//\u8282\u70b9\u5c11\u7684\u6811\u5408\u5e76\u5230\u8282\u70b9\u591a\u7684\u6811\n    {\n        fa[x] += fa[y];\n        fa[y] = x;\n        if(fa[x] == (-n))//\u5982\u679c\u5408\u5e76\u540e\u7684\u6811\u8282\u70b9\u6570\u91cf\u4e3an\uff08\u5373\u6240\u6709\u8282\u70b9\u5747\u88ab\u5408\u5e76\u5230\u4e00\u4e2a\u8054\u901a\u5757\uff09\n            return true; //\u4f18\u5316\uff0c\u5177\u4f53\u89c1bcj\u51fd\u6570\n    }\n    else//\u540c\u4e0a\n    {\n        fa[y] += fa[x];\n        fa[x] = y;\n        if(fa[y] == (-n))\n            return true;\n    }\n    return false;\n}\n//\u521d\u59cb\u5316\u3001\u8bfb\u5165\u6570\u636e\u548c\u9884\u5904\u7406\ninline void init()\n{\n    n = readi(); h = readi(); r = readl();\n    //\u6e05\u7a7a\u4e0a\u4e00\u7ec4\u6570\u636e\n    pi = po = 0;\n    end = false;\n    //fa\u521d\u59cb\u6240\u6709\u8282\u70b9\u503c\u8bbe\u4e3a-1\uff08\u4e0d\u89e3\u91ca\uff09\n    for(register int i = 1; i <= n; i++)\n        fa[i] = -1;\n    //\u8bfb\u5165\u6570\u636e+\u9884\u5904\u7406\n    for(register int i = 1; i <= n; i++)\n    {\n        cheese[i].x = readi(); cheese[i].y = readi(); cheese[i].z = readi();\n        if(end) continue;//\u4f18\u5316\uff0cend\u89e6\u53d1\u4e8b\u8df3\u8fc7\u9884\u5904\u7406\n        if(cheese[i].z <= r)//\u5982\u679c\u5f53\u524d\u6d1e\u4e0e\u4e0b\u8868\u9762\u8fde\u901a\n        {\n            in[pi++] = i;//\u53ef\u4ee5\u4f5c\u4e3a\u201c\u5165\u53e3\u201d\uff0c\u5b58\u5165in\n        }\n        if(cheese[i].z + (int) r >= h)//\u5982\u679c\u5f53\u524d\u6d1e\u4e0e\u4e0a\u8868\u9762\u8fde\u901a\n        {\n            out[po++] = i;//\u53ef\u4ee5\u4f5c\u4e3a\u201c\u51fa\u53e3\u201d\uff0c\u5b58\u5165out\n        }\n        if(in[pi - 1] == i and out[po - 1] == i)//\u5982\u679c\u5f53\u524d\u6d1e\u53ef\u4ee5\u540c\u65f6\u4f5c\u4e3a\u201c\u5165\u53e3\u201d\u548c\u201c\u51fa\u53e3\u201d\n        {                                       //\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u6d1e\u76f4\u63a5\u4ece\u4e0b\u8868\u9762\u5230\u8fbe\u4e0a\u8868\u9762\uff01\n            printf(\"Yes\\n\");//\u76f4\u63a5\u8f93\u51fa\"Yes\"\n            end = true;     //\u6fc0\u6d3bend\u4f18\u5316\uff0c\u8df3\u8fc7\u8f93\u5165\u5916\u6240\u6709\u5904\u7406\n        }\n    }\n    r *= 2;//\u4e0d\u89e3\u91ca\n    r *= r;//\u5224\u65ad\u4e24\u4e2a\u70b9\u662f\u5426\u76f8\u901a\u65f6\u7528\u7684\u662f\u5e73\u65b9\n}\n//\u8ba1\u7b97\u4e8c\u6b21\u5e42\ninline long long pow2(int x)\n{\n    long long a = x;\n    return a * a;\n}\n//\u5e76\u67e5\u96c6\u5904\u7406\nvoid bcj()\n{\n    for(register int i = n; i >= 1; i--)//\u6bcf\u4e24\u4e2a\u70b9\u4f9d\u6b21\u6bd4\u8f83\n    {\n        for(register int j = n - 1; j >= 1; j--)\n        {\n            int u = find(i), v = find(j);\n            if(u != v)//\u5982\u679c\u4e24\u4e2a\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\n            {\n                int xi = cheese[i].x, yi = cheese[i].y, zi = cheese[i].z;\n                int xj = cheese[j].x, yj = cheese[j].y, zj = cheese[j].z;\n                if(pow2(xi - xj) + pow2(yi - yj) + pow2(zi - zj) <= r)//\uff08r\u9884\u5904\u7406\u8fc7\u4e86\uff09\n                {//\u5982\u679c\u6ee1\u8db3(x1 - x2) ^ 2 + (y1 - y2) ^ 2 + (z1 - z2) ^ 2 <= (2 * r) ^ 2\uff08\u4e0d\u89e3\u91ca\uff09\n                    if(unite(u, v))//\u5408\u5e76\u4e24\u4e2a\u8054\u901a\u5757\uff1b\u5224\u65ad\u662f\u5426\u6240\u6709\u70b9\u90fd\u5df2\u7ecf\u5904\u4e8e\u540c\u4e00\u4e2a\u8054\u901a\u5757\n                        return;//\u5982\u679c\u662f\uff0c\u76f4\u63a5\u9000\u51fa\n                }              //~~\u8fd8\u5904\u7406\u4e2a\u6bdb\u7ebf\u554a\uff0c\u6e9c\u4e86\u6e9c\u4e86~~\n            }\n        }\n    }\n}\n//\u5224\u65ad\uff0c\u8f93\u51fa\u7ed3\u679c\nvoid check()\n{   //\u5165\u53e3\u4e0e\u51fa\u53e3\u9010\u4e2a\u6bd4\u8f83\n    for(register int i = 0; i < pi; i++)\n    {\n        for(register int j = 0; j < po; j++)\n        {\n            int u = find(in[i]), v = find(out[j]);\n            if(u == v)//\u5982\u679c\u6709\u5165\u53e3\u4e0e\u51fa\u53e3\u5904\u4e8e\u540c\u4e00\u4e2a\u8054\u901a\u5757\n            {\n                printf(\"Yes\\n\");\n                return;\n            }\n        }\n    }\n    //\u5982\u679c\u6ca1\u6709\u51fa\u53e3\u4e0e\u5165\u53e3\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\n    printf(\"No\\n\");\n}\n\nint main()\n{\n\n    t = readi();\n    for(int la = 1; la <= t; la++)\n    {\n        init();\n        if(end)//\u5982\u679cend\u88ab\u89e6\u53d1\n            continue;//~~\u90fd\u8f93\u51fa\u7ed3\u679c\u4e86\u8fd8\u5904\u7406\u4e2a\u6bdb\u7ebf\u554a\uff0c\u6e9c\u4e86\u6e9c\u4e86~~\n        bcj();\n        check();\n    }\n    return 0;\n}\n```\n~~\u8981\u4e0d\u662f\u6211\u6ca1\u5220\u6389end\u4f18\u5316\u7684\u8c03\u8bd5\u8f93\u51fa\u8fd9\u9898\u6211\u5c31\u6ee1\u5206\u4e86~~\n",
        "postTime": 1511191592,
        "uid": 18434,
        "name": "\u6d77\u66dc\u65e5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u4e0a\u4e00\u7bc7\\*LaTex\\*\u8c8c\u4f3c\u70b8\u4e86\n\n-----\n# \u4f60\u4eec\u600e\u4e48\u90fd\u7528\u5e76\u67e5\u96c6\u554a\n\n\u76f4\u63a5bfs\u4e0d\u5c31\u597d\u4e86\n\n\u5982\u679c\u4e24\u4e2a\u7403$i,j$\u6709\u516c\u5171\u90e8\u5206\uff0c\u5219\uff1a\n\n$$dist(x_i,y_i,z_i,x_j,y_j,z_j) \\le d^2$$\n\n\n\u5176\u4e2d\uff1a\n\n$$d=2\\times r$$\n\n\n```cpp\n#define REP(i, s, e) for(register int i = s; i <= e ;i++)\n#define dis(x1, y1, z1, x2, y2, z2) ((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) + (z1 - z2) * (z1 - z2))\n\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cstring>\n\nusing namespace std;\nconst int maxn = 1010;\n\nbool vis[maxn];\ndouble x[maxn], y[maxn], z[maxn], h, r, d;\nint n;\n\nint main() {\n    freopen(\"cheese.in\", \"r\", stdin);\n    freopen(\"cheese.out\", \"w\", stdout);\n    register int T;\n    cin >> T;\n    while (T--) {\n        queue <int> q;\n        scanf(\"%d%lf%lf\", &n, &h, &r);\n        REP(i, 1, n) vis[i] = 0;\n        d = r * 2;\n        REP(i, 1, n) {\n            scanf(\"%lf%lf%lf\", x + i, y + i, z + i);\n            if ((0 <= z[i] && z[i] - r <= 0) || (z[i] < 0 && z[i] + r >= 0)) {//\u53ef\u4ee5\u5230\u7403\u91cc\u9762\n                vis[i] = 1;\n                q.push(i);\n            }\n        }\n        while (!q.empty()) {\n            register int now = q.front();\n            if (z[now] + r >= h) {\n                printf(\"Yes\\n\");\n                goto ne;\n            }\n            q.pop();\n            REP(i, 1, n)\n                if (!vis[i] && dis(x[now], y[now], z[now], x[i], y[i], z[i]) <= d * d) {\n                    if (z[i] + r >= h) {//\u53ef\u4ee5\u76f4\u63a5\u4e0a\u53bb\n                        printf(\"Yes\\n\");\n                        goto ne;\n                    }\n                    vis[i] = 1;\n                    q.push(i);\n                }\n        }\n        printf(\"No\\n\");\nne:;\n    }\n    return 0;\n}\n```\n\n----\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u8c8c\u4f3c\u662f$O(n \\times T)$\n\n \n",
        "postTime": 1510830164,
        "uid": 18215,
        "name": "CraZYali",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u9996\u5148\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u70b9\u7684\u4fe1\u606f\uff0c\u6839\u636e\u8fd9\u4e2a\u5976\u916a\u7684\u5b8c\u7f8e\u7684\u7a7a\u95f4\u7ed3\u6784\uff0c\u5927\u5bb6\u770b\u4e00\u4e2a\u4e00\u4e2a\u5706\u5706\u7684\u6d1e\u770b\u8d77\u6765\u662f\u4e0d\u662f\u5f88\u50cf\u4e00\u4e2a\u4e00\u4e2a\u70b9\u554a\u3002\u5bf9\u554a\u6ca1\u9519\u5c31\u662f\u8fd9\u6837\u3002\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u56fe\u8fde\u8fb9SPFA\u4e86\uff01\uff08\u5bf9\u6ca1\u9519\u6211\u4e5f\u4e0d\u77e5\u9053\u5f53\u65f6\u6211\u4e3a\u4ec0\u4e48\u6ca1\u7528\u5e76\u67e5\u96c6\u3002\uff09\u5982\u679c\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8eradius\u7684\u4e24\u500d\uff0c\u90a3\u4e48\uff0c\u5c31\u5728\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8fde\u63a5\u4e00\u6761\u957f\u5ea6\u4e3a\u96f6\u7684\u65e0\u5411\u8fb9\u3002\u7136\u540e\u6700\u4e0b\u5c42\u548c\u6700\u4e0a\u5c42\u600e\u4e48\u529e\u554a\u3002\u542c\u8d77\u6765\u597d\u65b9\u7684\u6837\u5b50\u3002\u6ca1\u4e8b\u4e0d\u65b9\u3002\u7531\u4e8e\u8fd9\u4e9b\u4e2a\u6d1e\u6d1e\u7684\u7f16\u53f7\u6211\u4eec\u5f3a\u884c\u8ba9\u4ed6\u4e0d\u5b58\u57280\u53f7\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u5c060\u53f7\u8282\u70b9\u5047\u88c5\u6210\u8d85\u7ea7\u5927\u8d77\u70b9\u3002\u9ad8\u5ea6\u5728radius\u4e4b\u5185\u7684\u6240\u6709\u70b9\u90fd\u5411\u8d85\u7ea7\u5927\u5706\u70b9\u8fde\u63a5\u4e00\u6761\u957f\u5ea6\u4e3a0\u7684\u65e0\u5411\u8fb9\u3002\u540c\u7406\uff0c\u6211\u4eec\u8ba9\u7f16\u53f7\u4e3a1200\u7684\u70b9\u505a\u8d85\u7ea7\u5927\u7ec8\u70b9\u3002\u7136\u540e\u8fd9\u4e2a\u95ee\u9898\u5c31\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e86\u5bf9\u4e0d\u5bf9\uff01\u4e00\u904dSPFA\u4e0b\u53bb\uff0c\u5982\u679cdist[1200]==INF\u90a3\u5c31gg\uff0c\u5982\u679cdist[1200]==0\u90a3\u5c31\u53ef\u4ee5\u8d70\u5230\u3002\u849f\u84bb\u8003\u8bd5\u73b0\u573a\u6253\u7684\u3002\u3002\u6c42\u8f7bD\u3002\u3002\uff08\u5bf9\u6ca1\u9519\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5bfs\u3002\u4e3a\u4ec0\u4e48\u6211\u5f53\u65f6\u6ca1\u7528\uff0c\u6211\u662f\u4e0d\u662f\u4e00\u4e2a\u6ede\u80c0\u3002\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<cmath>\n#include<vector>\n#include<queue>\nusing namespace std;\nstruct Node{\n    int x;\n    int y;\n    int z;\n};\nNode node[12000];\nvector<int>ed[12000];\nint rads;\nint n,h;\nbool canlin(int x,int y,int z,int x2,int y2,int z2) {\n    double dx=x-x2;\n    double dy=y-y2;\n    double dz=z-z2;\n    dx*=dx;\n    dy*=dy;\n    dz*=dz;\n    double tot=dx+dy+dz;\n    tot=sqrt(tot);\n    if(tot<=rads*2)\n        return true;\n    return false;\n}\ninline void link(int a,int b) {\n    ed[a].push_back(b);\n    ed[b].push_back(a);\n    return;\n}\nint dist[12000];\nbool vis[12000];\nbool spfa() {\n    int st=0;\n    memset(dist,0x3f,sizeof(dist));\n    memset(vis,0,sizeof(vis));\n    queue<int>sth;\n    dist[st]=0;\n    vis[st]=1;\n    sth.push(st);\n    while(!sth.empty()) {\n        int nw=sth.front();\n        sth.pop();\n        vis[nw]=0;\n        int lim=ed[nw].size();\n        for(int i=0;i<lim;++i) {\n            register int tar=ed[nw][i];\n            if(dist[tar]>0) {\n                dist[tar]=0;\n                if(vis[tar]==0) {\n                    vis[tar]=1;\n                    sth.push(tar);\n                }\n            }\n        }\n    }\n    if(dist[1200]==0)\n        return true;\n    else\n        return false;\n}\nint main() {\n    freopen(\"cheese.in\",\"r\",stdin);\n    freopen(\"cheese.out\",\"w\",stdout);\n    int T;\n    cin>>T;\n    while(T>0) { \n        for(int i=0;i<=1300;++i)\n            ed[i].clear();\n        T--;\n        cin>>n>>h>>rads;\n        for(int i=1;i<=n;++i) {\n            scanf(\"%d%d%d\",&node[i].x,&node[i].y,&node[i].z);\n        }\n        for(int i=1;i<=n;++i) {\n            for(int j=i+1;j<=n;++j) {\n                if(canlin(node[i].x,node[i].y,node[i].z,node[j].x,node[j].y,node[j].z)) {\n                    link(i,j);\n                }\n            }\n        }\n        for(int i=1;i<=n;++i) {\n            if(node[i].z<=rads)\n                link(0,i);\n            if(node[i].z>=h-rads)\n                link(1200,i);\n        }\n        if(spfa()) \n            printf(\"Yes\\n\");\n        else\n            printf(\"No\\n\");\n    } \n    return 0;\n}\n```",
        "postTime": 1510735180,
        "uid": 47981,
        "name": "liangs333",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u672c\u4eba\u840c\u65b0\u4e00\u679a~~\uff0c\u61d2\u5f97\u6253\u5b57\uff0c\u76f4\u63a5\u4e0a\u9898\u89e3~~\n\n\n\u5c06\u76f8\u5207\u6216\u76f8\u4ea4\u7684\u7a7a\u6d1e\u7684\u7403\u5fc3\u8054\u901a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u5757\u5976\u916a\u770b\u4e3a\u4e00\u4e2a\u56fe\uff0c\u5c06\u4e0e\u4e0b\u8868\u9762\u8054\u901a\u7684\u70b9\u653e\u5230\u8d77\u70b9\u96c6\u5408start\u5185\uff0c\u5c06\u4e0e\u4e0a\u8868\u9762\u8054\u901a\u7684\u70b9\u653e\u5230\u7ec8\u70b9\u96c6\u5408end\u5185\uff0c\u8981\u786e\u5b9a\u7684\u5c31\u662f\u540e\u9762\u8fd9\u4e2a\u8868\u8fbe\u5f0f.\n\n\n$$ start \u2229 end != \u2205\uff1f \"Yes\":\"No\" $$\n\n\n\u4e00\u4e2a\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u505a\u6cd5\u662f\u641c\u7d22\uff0c\u7136\u800c\u641c\u7d22\u4f1a\u88ab\u5361\u4e00\u4e9b\u6570\u636e\uff08\u8003\u8bd5\u65f6\u7684\u7406\u60f3\u5206\u6790\uff0c\u8003\u5b8c\u5199\u4e86\u641c\u7d22\u53d1\u73b0\u53ef\u8fc7\u53ea\u4e0d\u8fc7\u65f6\u95f4\u957f\uff09\uff0c\u6240\u4ee5\u53ef\u7528\u5e76\u67e5\u96c6\u505a\u3002\u5efa\u4e24\u4e2a\u961f\u5217\u5206\u522b\u8868\u793a\u96c6\u5408start\u548c\u96c6\u5408end\uff0c\u8f93\u5165\u4e00\u4e2a\u70b9\u904d\u5386\u4e00\u904d\u5efa\u5e76\u67e5\u96c6\uff0c\u540c\u65f6\u7279\u5224\u4e0e\u4e0a\u4e0b\u8868\u9762\u8054\u901a\u7684\u70b9\u5206\u522b\u653e\u5165start\u96c6\u5408\u6216end\u96c6\u5408\u5185\uff0c\u6700\u540e\u4e00\u4e2a\u4e00\u4e2a\u6bd4\u8f83\u4e24\u4e2a\u96c6\u5408\u95f4\u7684\u96c6\u5408\u7f16\u53f7~~\uff0c\u5e76\u4e0d\u96be~~\u3002\n\n\n```cpp\n#include<cstdio>\n#include<cmath>\nstruct Point {\n    int x,y,z;\n    int rank;\n    int parent;\n}P[1001];\nint q1[1001],top1,q2[1001],top2;        //q1\u662fstart\u96c6\u5408\uff0cq2\u662fend\u96c6\u5408\nvoid Init(int n) {\n    for(int i=1;i<=n;++i) {\n        P[i].parent=i;\n        P[i].rank=0;\n    }\n}\nint FindSet(int i) {           //\u67e5\u8be2\u64cd\u4f5c\n    if(P[i].parent==i)\n        return i;\n    return FindSet(P[i].parent);\n}\nvoid Union(int i,int j) {   //\u5408\u5e76\u64cd\u4f5c\n    i=FindSet(i);\n    j=FindSet(j);\n    if(P[i].rank<P[j].rank)\n        P[i].parent=j;\n    else {\n        P[j].parent=i;\n        if(P[i].rank==P[j].rank)\n            ++P[i].rank;\n    }\n}\ndouble Use(int i,int j) {    //\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\n    double ret;\n    ret=(P[i].x-P[j].x)*(P[i].x-P[j].x)+(P[i].y-P[j].y)*(P[i].y-P[j].y)+(P[i].z-P[j].z)*(P[i].z-P[j].z);\n    return sqrt(ret);\n}\nint main() {\n    int t,n,h,r;\n    bool flag;\n    scanf(\"%d\",&t);\n    while(t--) {\n        scanf(\"%d%d%d\",&n,&h,&r);\n        Init(n);\n        flag=1;     //\u6807\u8bb0\u662f\u5426\u6709\u7b54\u6848\n        top1=0;\n        top2=0;          //\u521d\u59cb\u5316\n        for(int i=1;i<=n;++i) {\n            scanf(\"%d%d%d\",&P[i].x,&P[i].y,&P[i].z);\n            if((P[i].z<=0&&P[i].z+r<=0)||(P[i].z>=h&&P[i].z-r>=h))\n                continue;                                                            //\u4e00\u4e2a\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u7528\u7684\u8fc7\u6ee4\u5224\u5b9a\u65e0\u7528\u70b9\n            if(P[i].z<=r) {\n                q1[++top1]=i;\n                if(P[i].z+r>=h)\n                    flag=0;     //\u7279\u5224\u540c\u65f6\u4e0a\u4e0b\u8054\u901a\uff0c\u4e00\u6837\u4e5f\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u7528\n            }\n            if(P[i].z+r>=h)\n                q2[++top2]=i;\n            for(int j=1;flag&&j<i;++j) {\n                if(FindSet(i)!=FindSet(j)&&Use(i,j)<=2*r)    //\u5e76\u67e5\u96c6\u5408\u5e76\u64cd\u4f5c\uff0c\u5c0f\u5c0f\u5730\u4f18\u5316\u4e86\u4e00\u4e0b\n                    Union(i,j);\n            }\n        }\n        for(int i=1;flag&&i<=top1;++i) {\n            for(int j=1;flag&&j<=top2;++j) {\n                if(FindSet(q1[i])==FindSet(q2[j]))    //\u4e00\u4e2a\u4e00\u4e2a\u904d\u5386\u6bd4\u8f83\n                    flag=0;\n            }\n        }\n        printf(\"%s\\n\",flag? \"No\":\"Yes\");\n    }\n    return 0;\n}\n```",
        "postTime": 1510582197,
        "uid": 62912,
        "name": "Foehn_Commander_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u6211\u7528\u5e76\u67e5\u96c6\u505a\u7684\uff0c\u7136\u800c\u6bd4\u8d5b\u7684\u65f6\u5019\u5fd8\u5f00longlong\u6015\u662f\u53ea\u80fd\u5f9780\u5206\u4e86\u3002\u3002\n\n\u5177\u4f53\u505a\u6cd5\uff1a\u5c06\u5e95\u8fb9\u8bbe\u4e3afather[0],\u6700\u9ad8\u5904\u8bbe\u4e3afather[n+1],\u5982\u679c\u5f53\u524d\u70b9\u7684\u9ad8\u5ea6\u52a0\u534a\u5f84\u5927\u4e8e\u6700\u9ad8\u9ad8\u5ea6\uff0c\u5c06\u8be5\u70b9\u4e0en+1\u653e\u5165\u540c\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u5982\u679c\u5f53\u524d\u70b9\u7684\u9ad8\u5ea6\u51cf\u53bb\u534a\u5f84\u5c0f\u4e8e0\uff0c\u5c06\u8be5\u70b9\u548c0\u653e\u5165\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u679a\u4e3e\u6bcf\u4e24\u4e2a\u70b9\uff0c\u5982\u679c\u80fd\u591f\u8fde\u901a\u5219\u653e\u5165\u540c\u4e00\u4e2a\u5e76\u67e5\u96c6\u3002\u6700\u540e\u5224\u65ad0\u548cn+1\u662f\u5426\u5728\u4e00\u4e2a\u5e76\u67e5\u96c6\u5185\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nint r1,r2,t,n,father[1002];\nlong long r,h,x[1002],y[1002],z[1002];\nint find(int u)\n{\n    if(father[u]!=u)\n        return find(father[u]);\n    return father[u];\n}\nvoid unionn(int u,int v)\n{\n    r1=find(u);\n    r2=find(v);\n    father[r2]=r1;\n}\nvoid ok(int u)\n{\n    if(z[u]+r>=h)\n        unionn(n+1,u);\n    if(z[u]-r<=0)\n        unionn(0,u);\n}\nlong long dis(int u,int v)\n{\n    return sqrt((x[u]-x[v])*(x[u]-x[v])+(y[u]-y[v])*(y[u]-y[v])+(z[u]-z[v])*(z[u]-z[v]));\n}\nbool pd(int u,int v)\n{\n    if(dis(u,v)<=2*r)\n        return true;\n    else \n        return false;\n}\nbool same(int u,int v)\n{\n    if(find(u)==find(v))\n        return true;\n    else \n        return false;\n}\nint main()\n{\n    scanf(\"%d\",&t);\n    for(int l=1;l<=t;l++)\n    {\n        scanf(\"%d%lld%lld\",&n,&h,&r);\n        for(int i=1;i<=n;i++)\n            scanf(\"%lld%lld%lld\",&x[i],&y[i],&z[i]);\n        for(int i=0;i<=n+1;i++)\n            father[i]=i;\n        for(int i=1;i<=n;i++)\n            ok(i);\n        for(int i=1;i<=n-1;i++)\n            for(int j=i+1;j<=n;j++)\n                if(pd(i,j))\n                    unionn(i,j);\n        if(same(0,n+1))\n            cout<<\"Yes\"<<endl;\n        else \n            cout<<\"No\"<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1510566205,
        "uid": 49248,
        "name": "Slr\u795e\u9f99\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    },
    {
        "content": "**\u4e3a\u4ec0\u4e48\u5927\u5bb6\u7684DFS\u90fd\u4e0d\u4f1aTLE\uff1f**\n\n\u6211\u4e5f\u662f\u4e00\u770b\u5230\u8fd9\u9898\u5c31\u5199\u4e86\u4e2a\u7b80\u7b80\u5355\u5355\u7684DFS\uff0c\u7136\u540e\u4ea4\u4e0a\u53bb\u53ea\u670980\u5206\u3002\n\n\u597d\u7684\u522b\u7684\u4e0d\u8bb2\u4e86\uff0c\u5148\u8bb2\u4e00\u4e0bDFS\u600e\u4e48\u5199\u3002\n\n\u5c31\u662f\u679a\u4e3e\u6bcf\u4e2a\u4e0e\u4e0b\u5e95\u9762\u76f8\u4ea4\u6216\u76f8\u5207\u7684\u7a7a\u6d1e\uff0c\u7136\u540e\u4ee5\u5176\u4e3a\u8d77\u70b9\u641c\u6bcf\u4e2a\u76f8\u90bb\u7684\u70b9\uff0c\u6bcf\u4e2a\u70b9\u53ea\u7528\u641c\u4e00\u6b21\uff0c\u6700\u540e\u82e5\u641c\u5230\u4e0e\u4e0a\u5e95\u9762\u76f8\u4ea4\u6216\u76f8\u5207\u7684\u7a7a\u6d1e\u5c31OK\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08DFS\u90e8\u5206\uff09\uff1a\n```cpp\nbool e(int i,int j){//\u5224\u65ad\u76f8\u4ea4\u6216\u76f8\u5207\n    double dis=(x[i]-x[j])*(x[i]-x[j])+\n    (y[i]-y[j])*(y[i]-y[j])+(z[i]-z[j])*(z[i]-z[j]);//\u8ddd\u79bb\u7684\u5e73\u65b9\n    return dis<=4*r*r;\n}\nvoid dfs(int k){\n    if(ok)return;//\u641c\u5230\u4e86\u5c31\u4e0d\u7528\u518d\u641c\u4e86\n    if(z[k]+r>=h){\n        ok=1;\n        return;\n    }\n    v[k]=1;//\u6253\u6807\u8bb0\n    for(int i=1;i<=n;i++)\n    if(!v[i]&&e(i,k))\n    dfs(i);//\u641c\u8054\u901a\u7684\u7a7a\u6d1e\n    v[k]=0;//\u6e05\u9664\u6807\u8bb0\n}\n```\n\u7136\u540e\u53d1\u73b0T\u4e86\u4e24\u4e2a\u70b9\uff0c\u4e8e\u662f\u548c\u522b\u7684\u4ee3\u7801\u5bf9\u6bd4\uff0c\u53d1\u73b0\u5e76\u4e0d\u9700\u8981v[k]=0\u4e00\u53e5\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6bcf\u4e00\u6b21\u4ee5\u4e0d\u540c\u7684\u8d77\u70b9\u641c\u7d22\u65f6\uff0c\u4e4b\u524d\u641c\u8fc7\u7684\u70b9\u80fd\u5426\u5230\u8fbe\u5df2\u7ecf\u786e\u5b9a\uff0c\u6240\u4ee5\u5c31\u4e0d\u7528\u641c\u4e86\u3002\u8fd9\u6837\u5c31\u4e0d\u4f1aT\u4e86\u3002\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,v[1005],t,ok;\ndouble x[1005],y[1005],z[1005],h,r;\nbool e(int i,int j){\n    double dis=(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j])+(z[i]-z[j])*(z[i]-z[j]);\n    return dis<=4*r*r;\n}\nvoid dfs(int k){\n    if(ok)return;\n    if(z[k]+r>=h){\n        ok=1;\n        return;\n    }\n    v[k]=1;\n    for(int i=1;i<=n;i++)\n    if(!v[i]&&e(i,k))\n    dfs(i);\n}\nint main(){\n    cin>>t;\n    for(int i=1;i<=t;i++){\n    \tmemset(v,0,sizeof(v));//\u8bb0\u5f97\u6e05\u96f6\n        ok=0;\n        cin>>n>>h>>r;\n        for(int j=1;j<=n;j++)\n        cin>>x[j]>>y[j]>>z[j];\n        for(int j=1;j<=n;j++)\n        if(z[j]-r<=0)\n        dfs(j);\n        if(ok)cout<<\"Yes\"<<endl;\n        else cout<<\"No\"<<endl;\n    }\n} \n```\n",
        "postTime": 1572843605,
        "uid": 134476,
        "name": "wyx__",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3958 \u3010\u5976\u916a\u3011"
    }
]