[
    {
        "content": "## Problem:\n\n\u4e00\u4e2a\u5e73\u9762\uff0c\u7ed9\u4e00\u5806\u70b9\uff0c\u6bcf\u6b21\u5f80\u5e73\u9762\u4e0a\u9762\u52a0\u70b9\uff0c\u8981\u6c42\u52a0\u7684\u70b9\u5fc5\u987b\u4e0a\u4e0b\u5de6\u53f3\u90fd\u6709\u70b9\uff0c\u95ee\u6ca1\u6cd5\u518d\u52a0\u70b9\u7684\u65f6\u5019\u6709\u591a\u5c11\u4e2a\u70b9\u3002\u5982\u679c\u80fd\u52a0\u65e0\u7a77\u591a\u4e2a\u70b9\u8f93\u51fa $-1$\u3002\n\n## Analysis:\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5f88\u96be\u641e\u3002\u3002\u56e0\u4e3a\u4f60\u53ef\u80fd\u53d8\u5316\u591a\u6b21\u3002\n\n\u4f46\u662f\u6211\u4eec\u5c1d\u8bd5\u6784\u9020\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\u5f88\u96be\u6784\u9020\u51fa\u9700\u8981\u591a\u6b21\u53d8\u5316\u7684\u3002\n\n\u4e8e\u662f\u5c31\u731c\u6d4b\u53ef\u80fd\u53ea\u4f1a\u53d8\u5316\u4e00\u6b21\u3002\n\n\u7a0d\u5fae\u8bc1\u4e00\u4e0b\uff1a\n\n\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u70b9 $A$ \u7684\u52a0\u5165\u6d89\u53ca\u5230\u70b9 $B$\uff0c\u4e14 $B$ \u4e0d\u662f\u4e00\u5f00\u59cb\u5c31\u6709\u7684\uff0c\u90a3\u4e48 $A$ \u7684\u4e0a\u4e0b\u5de6\u53f3\u4e2d\u7684\u4e00\u4e2a\u65b9\u5411\u4e0a\u80af\u5b9a\u53ea\u6709\u70b9 $B$\uff0c\u4f46\u662f\u8fd9\u6837\u70b9 $B$ \u7684\u90a3\u4e2a\u65b9\u5411\u4e0a\u5c31\u6ca1\u6709\u70b9\uff0c\u65e0\u6cd5\u52a0\u5165\uff0c\u540c\u65f6\u70b9 $A$ \u4e5f\u5c31\u4e0d\u5b58\u5728\uff0c\u77db\u76fe\u3002\n\n\u6240\u4ee5\u7ed3\u8bba\u5c31\u662f\u53ea\u4f1a\u53d8\u5316\u4e00\u6b21\u3002\u3002\u800c\u4e14\u6ca1\u6709 $-1$ \u3002\u3002\n\n~~\u6240\u4ee5\u8bf4\u8fd9\u9898\u4e00\u5f00\u59cb\u662f\u4e2a\u7ed3\u8bba\u9898\u3002\u3002\u3002~~\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u600e\u4e48\u7edf\u8ba1\u6709\u591a\u5c11\u4e2a\u70b9\u662f\u65b0\u52a0\u5165\u8fdb\u6765\u7684\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4ea7\u751f\u8d21\u732e\u7684\u4e00\u5b9a\u662f\u4e24\u4e2a\u540c\u6a2a\u5750\u6807\u7684\u70b9\u7684\u8fde\u7ebf\uff0c\u6240\u4ee5\u8003\u8651\u626b\u63cf\u7ebf\u3002\n\n\u4e3a\u4e86\u907f\u514d\u6709\u4e00\u4e2a\u7ed9\u51fa\u7684\u70b9\u6ee1\u8db3\u4e0a\u4e0b\u5de6\u53f3\u90fd\u6709\u70b9\uff0c\u53ea\u53bb\u8003\u8651\u76f8\u90bb\uff08\u4e2d\u95f4\u6ca1\u6709\u70b9\uff09\u7684\u4e24\u4e2a\u70b9\u7684\u8fde\u7ebf\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u626b\u63cf\u7ebf\u4e86\uff1a\u7ef4\u62a4\u6240\u6709\u5782\u76f4\u548c\u6c34\u5e73\u7684\u7ebf\uff0c\u5bf9\u4e8e\u5782\u76f4\u7684\u7ebf\u53ef\u4ee5\u5bf9\u5e94\u5230\u5355\u70b9 $+1/-1$\uff1b\u5bf9\u4e8e\u6c34\u5e73\u7684\u7ebf\u53ef\u4ee5\u5bf9\u5e94\u4e3a\u533a\u95f4\u6c42\u548c\u3002\n\n\u79bb\u6563\u5316\u4e00\u4e0b\u5c31\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4\u5566~\n\n\u90a3\u4e48\u8fd9\u9898\u5c31\u505a\u5b8c\u5566~\n\n\u603b\u65f6\u7a7a\u590d\u6742\u5ea6 $O(n\\log n)+O(n)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nstruct Line {\n\tint x, y, rx, type;\n\tbool operator < (const Line& l) const {\n\t\treturn (y == l.y ? type < l.type : y < l.y);\n\t}\n};\nstruct Point {\n\tint x, y;\n};\nint n, x[100005], y[100005], xd[100005], yd[100005], xdtop, ydtop, lcnt, c[100005];\nLine lne[300005];\nPoint pnt[100005];\n\ninline bool cmp1(const Point& a, const Point& b) {\n\treturn (a.x == b.x ? a.y < b.y : a.x < b.x);\n}\n\ninline bool cmp2(const Point& a, const Point& b) {\n\treturn (a.y == b.y ? a.x < b.x : a.y < b.y);\n}\n\ninline int Lowbit(int x) {\n\treturn x & -x;\n}\n\ninline void Modify(int i, int x) {\n\tfor (register int j = i;j <= 100000;j += Lowbit(j)) c[j] += x;\n}\n\ninline int Query(int i) {\n\tregister int ans = 0;\n\tfor (register int j = i;j >= 1;j -= Lowbit(j)) ans += c[j];\n\treturn ans;\n}\n\ninline void Read() {\n\tn = qread();\n\tfor (register int i = 1;i <= n;i++) {\n\t\tx[i] = xd[i] = qread();\n\t\ty[i] = yd[i] = qread();\n\t}\n}\n\ninline void Prefix() {\n\tsort(xd + 1, xd + n + 1);\n\tsort(yd + 1, yd + n + 1);\n\txdtop = unique(xd + 1, xd + n + 1) - xd - 1;\n\tydtop = unique(yd + 1, yd + n + 1) - yd - 1;\n\tfor (register int i = 1;i <= n;i++) {\n\t\tx[i] = lower_bound(xd + 1, xd + xdtop + 1, x[i]) - xd;\n\t\ty[i] = lower_bound(yd + 1, yd + ydtop + 1, y[i]) - yd;\n\t}\n\tfor (register int i = 1;i <= n;i++) {\n\t\tpnt[i].x = x[i];\n\t\tpnt[i].y = y[i];\n\t}\n\tsort(pnt + 1, pnt + n + 1, cmp2);\n\tfor (register int i = 1;i < n;i++) {\n\t\tif (pnt[i].y == pnt[i + 1].y) {\n\t\t\tlne[++lcnt].x = pnt[i].x;\n\t\t\tlne[lcnt].y = pnt[i].y;\n\t\t\tlne[lcnt].rx = pnt[i + 1].x;\n\t\t\tlne[lcnt].type = 0;\n\t\t}\n\t}\n\tsort(pnt + 1, pnt + n + 1, cmp1);\n\tfor (register int i = 1;i < n;i++) {\n\t\tif (pnt[i].x == pnt[i + 1].x) {\n\t\t\tlne[++lcnt].x = pnt[i].x;\n\t\t\tlne[lcnt].y = pnt[i].y;\n\t\t\tlne[lcnt].rx = 0;\n\t\t\tlne[lcnt].type = 1;\n\t\t\tlne[++lcnt].x = pnt[i].x;\n\t\t\tlne[lcnt].y = pnt[i + 1].y;\n\t\t\tlne[lcnt].rx = 0;\n\t\t\tlne[lcnt].type = -1;\n\t\t}\n\t}\n\tsort(lne + 1, lne + lcnt + 1);\n}\n\ninline void Solve() {\n\tregister int ans = n;\n\tfor (register int i = 1;i <= lcnt;i++) {\n\t\tif (lne[i].type == 0) ans += Query(lne[i].rx - 1) - Query(lne[i].x);\n\t\telse Modify(lne[i].x, lne[i].type);\n\t}\n\tprintf(\"%d\", ans);\n}\n\nint main() {\n\tRead();\n\tPrefix();\n\tSolve();\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```\n\n",
        "postTime": 1589376738,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5816 \u3010[CQOI2010]\u5185\u90e8\u767d\u70b9\u3011"
    },
    {
        "content": "# \u9898\u89e3 CQOI2010 \u5185\u90e8\u767d\u70b9\n\uff08$update$ \u4fee\u6539\u4e86\u4e00\u4e9b\u9519\u8bef\uff09\n\n\u4e00\u76f4\u611f\u89c9\u8fd9\u662f\u4e00\u9053\u597d\u9898\uff0c\u53ef\u60dc\u6d1b\u8c37\u4e00\u76f4\u6ca1\u6709\u9898\u9762qaq      \n\n\u7ec8\u4e8e\u5728\u8fd9\u4e24\u5929\u6211\u770b\u5230\u4e86\u9898\u9762\u3002\u4e8e\u662f\u8d76\u7d27\u4ea4\u4e86\u4e00\u53d1\u3002\n## \u601d\u8003\n\n\u6309\u7167\u9898\u76ee\u7684\u89c4\u5b9a\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e0a\u4e0b\u5de6\u53f3\u5404\u6709\u4e00\u4e2a\u9ed1\u70b9\u65f6\uff0c\u8be5\u70b9\u53d8\u6210\u9ed1\u70b9\u3002\n\n\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u8f6c\u5316\u4e00\u4e0b\uff0c\u628a\u4ed6\u76f4\u63a5\u4e0e\u6700\u4e0a\uff0c\u6700\u4e0b\uff0c\u6700\u5de6\uff0c\u6700\u53f3\u7684\u70b9\u6bd4\u8f83\uff0c\n\n\u56e0\u4e3a\u5982\u679c\u6700\u8fb9\u4e0a\u7684\u70b9\u4e5f\u4e0d\u80fd\u5305\u4f4f\u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u4e00\u5b9a\u662f\u767d\u70b9\u4e86\u3002\n\n\u7d27\u63a5\u7740\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8fqaq\n\n\uff08\u4e0d\u8fc7\u8981\u662f\u4e0d\u61c2\u4e8c\u7ef4\u504f\u5e8f\u4e5f\u6ca1\u5173\u7cfb\uff0c\u63a5\u4e0b\u6765\u6211\u4f1a\u8bb2\u89e3\uff09\n## \u6b63\u89e3\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6240\u6709\u7684\u70b9\u6392\u5e8f\uff0c\u6309\u7167$y$\u7531\u5927\u5230\u5c0f\u3002\n\n\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff1a\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u7ef4\u5ea6\u3002\n\n\u6211\u4eec\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e00\u5217\u6700\u9ad8\u7684\u70b9\u4e0e\u6700\u4f4e\u7684\u70b9\uff0c\u7136\u540e\u4ece\u4e0a\u5f80\u4e0b\u626b\u63cf\u6240\u6709\u7684\u70b9\u3002\n\n\u7136\u540e\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\uff08\u6811\u72b6\u6570\u7ec4\u4e5f\u53ef\u4ee5\uff09\uff0c\n\n\u8981\u662f\u6211\u4eec\u626b\u5230\u4e86\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u70b9\u5c31\u662f\u8fd9\u4e00\u5217\u7684\u4e0a\u754c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5728\u7ebf\u6bb5\u6811\u4e2d\u5c06\u8fd9\u4e00\u5217\u7684\u6743\u503c\u52a0\u4e00\u3002\n\n\u540c\u6837\u7684\u8981\u662f\u626b\u5230\u4e86\u4e00\u4e2a\u70b9\u662f\u8fd9\u4e00\u5217\u7684\u4e0b\u754c\uff0c\u90a3\u4e48\u5c31\u51cf\u4e00\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c$(3,5)$\u662f$x=3$\u8fd9\u4e00\u5217\u6700\u9ad8\u7684\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u7ebf\u6bb5\u6811\u7684$3$\u53f7\u4f4d\u7f6e\u7684\u503c$+1$\u3002\n\n\u518d\u626b\u5230$(3,3)$\u65e2\u4e0d\u662f$x=3$\u8fd9\u4e00\u5217\u6700\u9ad8\u7684\u70b9\uff0c\u53c8\u4e0d\u662f\u6700\u4f4e\u7684\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u52a8\u5b83\u3002\n\n\u6700\u540e\u626b\u5230$(3,1)$\uff0c\u8fd9\u662f$x=3$\u8fd9\u4e00\u5217\u6700\u4f4e\u7684\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u7ebf\u6bb5\u6811\u7684$3$\u53f7\u4f4d\u7f6e$-1$\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u7ebf\u6bb5\u6811\u4e2d\u67d0\u4e2a\u70b9\u67d0\u65f6\u523b\u6709\u503c\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u4e0a\u9762\u6709\u70b9\u4e14\u5b83\u4e0b\u9762\u6709\u70b9\u3002\n\n\u7136\u540e\u5728\u626b\u63cf\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bb0\u5f55\u8be5\u4e00\u884c\u7684\u6700\u5de6\u8282\u70b9\u4e0e\u6700\u53f3\u8282\u70b9\uff0c\n\n\u5728\u626b\u63cf\u5b8c\u8fd9\u4e00\u884c\u7684\u6240\u6709\u8282\u70b9\u65f6\uff0c\u67e5\u8be2\u4e00\u6b21\u533a\u95f4\u548c\uff0c\u8fd9\u6837\u5c31\u67e5\u8be2\u5230\u4e86\u8fd9\u4e00\u884c\u6240\u6709\u7684\u9ed1\u70b9\u3002\n\n\u6700\u540e\uff0c\u8fb9\u754c\u7684\u5730\u65b9\u52a0\u4e00\u70b9\u5904\u7406\uff0c\u7136\u540e\u518d\u5bf9$x$\u8fdb\u884c\u4e00\u4e0b\u79bb\u6563\u5316\uff08\u5426\u5219\u7ebf\u6bb5\u6811\u4f1a\u70b8\uff09\u5c31\u5b8c\u6210\u5566\uff01\n\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int read(){\n\tregister int x=0;\n\tregister bool f=0;\n\tregister char c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<3)+(x<<1)+c-48;\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nconst int maxn=100005;\nconst int inf=1000000007;\nint t[maxn<<4],n,m,lsh[maxn],sj[maxn],xj[maxn],nl,nr,res;\n//lsh\u4e3a\u79bb\u6563\u6570\u7ec4\uff0csj\u4e0a\u754c\uff0cxj\u4e0b\u754c\uff0ct\u7ebf\u6bb5\u6811\uff0cnl\u4e3a\u5f53\u524d\u884c\u6700\u5de6\u70b9\u7684x\u5750\u6807\nstruct _node{\n\tint x,y;\n\tfriend bool operator <(_node aa,_node bb){\n\t\tif(aa.y==bb.y) return aa.x<bb.x;\n\t\treturn aa.y>bb.y;\n\t}//\u5728\u8fd9\u8fb9\u6211\u6392\u5e8f\u7684\u65f6\u5019\u987a\u4fbf\u4ee5x\u4e3a\u7b2c\u4e8c\u53d8\u91cf\u6392\u4e86\u4e00\u4e0b\uff0c\u65b9\u4fbf\u4e0b\u9762\u7684\u5904\u7406\n}node[maxn];\nvoid change(int o,int l,int r,int q,int v){\n\tt[o]+=v;\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tif(q<=mid) change(o<<1,l,mid,q,v);\n\telse change(o<<1|1,mid+1,r,q,v);\n}//\u6807\u51c6\u7ebf\u6bb5\u6811\u4fee\u6539\u64cd\u4f5c\nint query(int o,int l,int r,int ql,int qr){\n\tif(ql<=l && r<=qr) return t[o];\n\tint ans=0,mid=l+r>>1;\n\tif(ql<=mid) ans+=query(o<<1,l,mid,ql,qr);\n\tif(qr>mid) ans+=query(o<<1|1,mid+1,r,ql,qr);\n\treturn ans;\n}//\u6807\u51c6\u7ebf\u6bb5\u6811\u67e5\u8be2\u64cd\u4f5c\nsigned main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tnode[i].x=read();node[i].y=read();\n\t\tlsh[i]=node[i].x;\n\t\tsj[i]=-inf;xj[i]=inf;\n\t}\n\tsort(node+1,node+n+1);\n\tsort(lsh+1,lsh+n+1);\n\tm=unique(lsh+1,lsh+n+1)-1-lsh;\n\tfor(int i=1;i<=n;i++){\n\t\tnode[i].x=lower_bound(lsh+1,lsh+m+1,node[i].x)-lsh;\n\t\tsj[node[i].x]=max(node[i].y,sj[node[i].x]);\n\t\txj[node[i].x]=min(node[i].y,xj[node[i].x]);\n\t}\n\tnl=node[1].x;\n\tnode[n+1].y=inf;\n  //\u9632\u6b62node[n].y=0\u7684\u60c5\u51b5\u7684\u5f71\u54cd\n\tfor(int i=1;i<=n;i++){\n\t\tif(node[i].y==sj[node[i].x]) change(1,1,m,node[i].x,1);\n\t\tif(node[i].y==xj[node[i].x]){\n\t\t\tres+=1;change(1,1,m,node[i].x,-1);\n\t\t}//\u6211\u5728\u5220\u9664\u7684\u65f6\u5019\u5148\u628a\u70b9\u52a0\u4e0a\uff0c\u9632\u6b62\u8be5\u70b9\u6f0f\u8bb0\n\t\tif(node[i].y!=node[i+1].y){\n\t\t\tres+=query(1,1,m,nl,node[i].x);\n\t\t\tnl=node[i+1].x;\n\t\t}//\u8fd9\u4e00\u884c\u7ed3\u675f\uff0c\u7edf\u8ba1\u7b54\u6848\n\t}\n\tprintf(\"%d\",res);\n\treturn 0;\n}\n```\n\u63a8\u8350\u96be\u5ea6\u7d2b\u9898\uff08\u5176\u5b9e\u84dd\u7d2b\u90fd\u884c\u5566\uff0c\u7d2b\u9898\u53ef\u80fd\u6709\u70b9\u504f\u7b80\u5355\u4e86qaq\uff09\n\n\u795d\u5927\u5bb6wc/noi/csps/\u9ad8\u8003rp++\uff01",
        "postTime": 1576920296,
        "uid": 120074,
        "name": "BFqwq",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5816 \u3010[CQOI2010]\u5185\u90e8\u767d\u70b9\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4f4d\u4e8e\u540c\u4e00\u884c\u4e14\u5de6\u53f3\u76f8\u90bb\u7684\u70b9\u8fde\u6210\u4e00\u6761\u6a2a\u8fb9\uff0c\u628a\u4f4d\u4e8e\u540c\u4e00\u5217\u4e14\u4e0a\u4e0b\u76f8\u90bb\u7684\u70b9\u8fde\u6210\u4e00\u6761\u7ad6\u8fb9\uff08\u8fd9\u91cc\u7684\u201c\u76f8\u90bb\u201d\u6307\u7684\u662f\u4e24\u4e2a\u70b9\u5728\u6a2a\u5411\u6216\u7ad6\u5411\u4e0a\u4e4b\u95f4\u6ca1\u6709\u8f93\u5165\u7ed9\u51fa\u7684\u9ed1\u70b9\uff0c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u53c2\u4e0e\u591a\u6761\u8fb9\uff09\u3002\n\n\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u56fe\u8fde\u6210\u8fd9\u6837\uff1a\n\n![1.png](https://i.loli.net/2020/08/03/b3cDwGWkYjuOvoJ.png)\n\n\u90a3\u4e48\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u80fd\u591f\u53d8\u6210\u9ed1\u70b9\u7684\u767d\u70b9\u90fd\u662f\u4f4d\u4e8e\u7ebf\u6bb5\u4ea4\u70b9\u4e0a\u7684\u70b9\u3002\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u53bb\u7edf\u8ba1\u7ebf\u6bb5\u4ea4\u70b9\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u53ef\u4ee5\u628a\u8fb9\u5206\u6210\u4e24\u7c7b\uff1a\u6a2a\u5411\u8fb9\uff08\u548cx\u8f74\u5e73\u884c\u7684\u8fb9\uff09\u548c\u7eb5\u5411\u8fb9\uff08\u548cy\u8f74\u5e73\u884c\u7684\u8fb9\uff09\u3002\u4e8e\u662f\uff0c\u7edf\u8ba1\u4ea4\u70b9\u5c31\u7b49\u540c\u4e8e\u6bcf\u6761\u6a2a\u5411\u8fb9\u4e8e\u7eb5\u5411 \u8fb9\u4ea4\u70b9\u4e2a\u6570\u7684\u548c\u3002\u800c\u5bf9\u4e8e\u8fd9\u4e2a\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u626b\u63cf\u7ebf\u7684\u65b9\u6cd5\u6c42\u5f97\u3002\n\n---\n\n\u5927\u4f53\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\n\n\u5982\u679c\u626b\u63cf\u7ebf\u662f\u4ece\u4e0a\u5230\u4e0b\u8fdb\u884c\u626b\u63cf\u7684\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u7528~~\u7ebf\u6bb5\u6811~~\u6811\u72b6\u6570\u7ec4\u6765\u8bb0\u5f55\u6709\u591a\u5c11\u6761\u7eb5\u5411\u8fb9\u7ecf\u8fc7\u4e86$y=k$\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u7528\u4e00\u4e2a\u6700\u666e\u901a\u7684\u6570\u7ec4$t_{1,9}$\u6765\u8bb0\u5f55\u7eb5\u8fb9\u7ecf\u8fc7\u70b9$y=k$\u7684\u8ddd\u79bb\u3002\u5982\u4e0b\u56fe\uff0c\u82e5\u6211\u4eec\u4ee5$y=4$\u4e3a\u4f8b\uff0c\u5219$t_{1,9}=0,1,0,0,0,0,1,0,0$\uff0c\u5176\u4e2d\u4e24\u4e2a$1$\u8868\u793a\u7684\u4fbf\u662f\u4e24\u4e2a\u4ea4\u70b9\u3002\u800c\u5bf9\u4e8e\u67e5\u8be2\uff0c\u4ea4\u70b9\u6570\u91cf\u4fbf\u662f\u7ebf\u6bb5GI\u3001\u7ebf\u6bb5IH\u4e0a\u4ea4\u70b9\u6570\u91cf\u7684\u548c\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u76f4\u63a5\u5728\u521a\u521a\u7684\u6570\u7ec4$t_{1,9}$\u4e2d\u7edf\u8ba1\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u4e3a$O(n)$\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u4f18\u5316\u8fd9\u4e00\u6b65\uff0c\u6765\u5b8c\u6210\u8fd9\u4e2a\u672c\u8d28\u4e0a\u662f\u533a\u95f4\u6c42\u548c\u7684\u5de5\u4f5c\u3002\n\n\u5bf9\u4e8e\u6811\u72b6\u6570\u7ec4\u7684\u4fee\u6539\uff0c\u6211\u4eec\u53ea\u9700\u5728\u7eb5\u8fb9\u7684\u7b2c\u4e00\u4e2a\u70b9\u88ab\u626b\u5230\u65f6\u5728\u6570\u7ec4\u7684\u5bf9\u5e94\u4f4d\u7f6e\u52a0\u4e00\uff0c\u5728\u7eb5\u8fb9\u7684\u7b2c\u4e8c\u4e2a\u70b9\u88ab\u626b\u5230\u540e\u5728\u5bf9\u5e94\u4f4d\u7f6e\u51cf\u4e00\u5373\u53ef\u3002\n\n![2.png](https://i.loli.net/2020/08/03/XgIzO3UMpeAcDW8.png)\n\ncode:\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#include<algorithm>\n#define ll long long\n#define INF 0x7fffffff\n#define qwq printf(\"qwq\\n\");\n\nusing namespace std;\n\nint read() {\n    register int x = 0,f = 1;register char ch;\n    ch = getchar();\n    while(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n    while(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n    return x * f;\n}\n\nstruct node {\n\tint x, y;\n}u[400005];\n\nstruct edge {\n\tint up, down, left, right;\n}e[400005];\n\nstruct edge_end {\n\tint x, y;\n\tbool operator < (const edge_end &a) const {return a.y < y;}\n};\n\nint n, m, cnt, ans, maxx, a[400005], t[400005];\n\npriority_queue<edge_end> que;\n\nvoid Read_in() {\n\tn = read();\n\tfor(int i = 1; i <= n; i++) {\n\t\tu[i].x = read(); u[i].y = read();\n\t\ta[++cnt] = u[i].x; a[++cnt] = u[i].y;\n\t}\n}\n\nvoid Discretization() {\n\tsort(a + 1, a + cnt + 1);\n\tcnt = unique(a + 1, a + cnt + 1) - a - 1;\n\tfor(int i = 1; i <= n; i++) {\n\t\tu[i].x = lower_bound(a + 1, a + cnt + 1, u[i].x) - a;\n\t\tu[i].y = lower_bound(a + 1, a + cnt + 1, u[i].y) - a;\n\t\tmaxx = max(maxx, u[i].x);\n\t}\n}\n\nbool xsort(node a, node b) {return a.x == b.x ? a.y < b.y : a.x < b.x;}\nbool ysort(node a, node b) {return a.y == b.y ? a.x < b.x : a.y < b.y;}\nbool esort(edge a, edge b) {return a.up == b.up ? a.left < b.left : a.up < b.up;}\n\nvoid Make_edge() {\n\tsort(u + 1, u + n + 1, xsort);    // x \u76f8\u540c    \u5904\u7406\u7ad6\u8fb9 \n\tfor(int i = 1; i < n; i++) {\n\t\tif(u[i + 1].x != u[i].x || u[i + 1].y - u[i].y < 2) continue;\n\t\te[++m].up = u[i].y + 1; e[m].down = u[i + 1].y - 1; e[m].right = u[i].x;\n\t}\n\tsort(u + 1, u + n + 1, ysort);    // y \u76f8\u540c    \u5904\u7406\u6a2a\u8fb9 \n\tfor(int i = 1; i < n; i++) {\n\t\tif(u[i + 1].y != u[i].y || u[i + 1].x - u[i].x < 2) continue;\n\t\te[++m].up = u[i].y; e[m].left = u[i].x + 1; e[m].right = u[i + 1].x - 1;\n\t}\n\tsort(e + 1, e + m + 1, esort);\n}\n\nint lowbit(int x) {return x & -x;}\nvoid update(int x, int k) {while(x <= maxx) {t[x] = t[x] + k; x = x + lowbit(x);}}\nint query(int x) {int ans = 0; while(x) {ans = ans + t[x]; x = x - lowbit(x);} return ans;}\n\nvoid Scanning() {\n\tfor(int i = 1; i <= m; i++) {\n\t\tint deep = e[i].up;\n\t\twhile(!que.empty() && que.top().y <= deep) {update(que.top().x, -1); que.pop();}\n\t\tif(!e[i].left) {update(e[i].right, 1); que.push((edge_end){e[i].right, e[i].down + 1});}\n\t\telse {ans = ans + query(e[i].right) - query(e[i].left - 1);}\n\t}\n}\n\nvoid Print() {printf(\"%d\\n\", ans + n);}\n\nint main() {\n\tRead_in();\n\tDiscretization();\n\tMake_edge();\n\tScanning();\n\tPrint();\n    return 0;\n}\n```\n\n",
        "postTime": 1596451930,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5816 \u3010[CQOI2010]\u5185\u90e8\u767d\u70b9\u3011"
    },
    {
        "content": "\u5148\u628a\u6240\u6709\u70b9\u7684$x$\u5750\u6807\u79bb\u6563\u5316\u3002\n\n\u7136\u540e\u5206\u522b\u5c06\u6240\u6709\u70b9\u6309$x$\u3001$y$\u6392\u5e8f\u3002\u8fd9\u91cc\u4ee5\u6309$x$\u6392\u5e8f\u4e3a\u4f8b\uff0c\u5bf9\u4e8e$x$\u5750\u6807\u76f8\u540c\u7684\u4e24\u4e2a\u70b9\uff0c\u6211\u4eec\u628a\u5b83\u4eec\u8fde\u6210\u4e00\u6761\u7ebf\u6bb5\u3002\u90a3\u4e48\u6309$y$\u5750\u6807\u6392\u5e8f\u4e5f\u4e00\u6837\uff0c\u628a$y$\u5750\u6807\u76f8\u540c\u7684\u4e24\u4e2a\u70b9\u4e5f\u8fde\u6210\u4e00\u6761\u7ebf\u6bb5\u3002\n\n\u90a3\u4e48\u8fde\u51fa\u6765\u540e\u7684\u56fe\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20191003112614918.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2V6X2xjdw==,size_16,color_FFFFFF,t_70)\n\n\u90a3\u4e48\u6a2a\u7ad6\u7ebf\u6bb5\u7684\u6240\u6709\u4ea4\u70b9\uff08\u56fe\u4e2d\u84dd\u70b9\uff09\u5373\u4e3a\u53ef\u4ee5\u53d8dark\u7684\u70b9\uff0c\u56e0\u4e3a\u5b83\u5de6\u53f3\u6709dark\u70b9\uff0c\u4e0a\u4e0b\u90fd\u6709dark\u70b9\uff0c\u7b26\u5408\u53d8dark\u6761\u4ef6\u3002\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u7ef4\u62a4\u4ea4\u70b9\u5462\uff1f\u6211\u4eec\u8003\u8651\u7528\u626b\u63cf\u7ebf\uff08\u5982\u56fe\u9ed1\u7ebf\uff09\u3002\n\n\u6211\u4eec\u5148\u628a\u6a2a\u7ebf\u3001\u7ad6\u7ebf\u7684\u4e24\u4e2a\u7aef\u70b9\u5168\u90e8\u585e\u8fdb\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u7136\u540e\u628a\u5b83\u4eec\u6309$y$\u5750\u6807\u6392\u5e8f\u3002\n\n\u7136\u540e\u4ece$y$\u5750\u6807\u7684\u5c0f\u5230\u5927\u4e00\u4e2a\u4e00\u4e2a\u5411\u4e0a\u626b\u63cf\uff0c\u52063\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1. \u5982\u679c\u626b\u63cf\u5230\u4e00\u6761\u7ad6\u7ebf\u7684\u4e0b\u7aef\u70b9$(x,y)$\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u6811\u72b6\u6570\u7ec4\u91cc\u7684\u4f4d\u7f6e$x$\u52a0$1$\uff0c\u5373$add(x,1)$\u3002\n\n2. \u5982\u679c\u626b\u63cf\u5230\u4e00\u6761\u7ad6\u7ebf\u7684\u4e0a\u7aef\u70b9$(x,y)$\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u6811\u72b6\u6570\u7ec4\u91cc\u7684\u4f4d\u7f6e$x$\u51cf$1$\uff0c\u5373$add(x,-1)$\u3002\u90a3\u4e48\u5bf9\u4e8e\u67d0\u4e00\u6761\u7ad6\u7ebf$l$\uff0c\u5176\u4e0a\u7aef\u70b9\u4e3a$(x,y_1)$\uff0c\u4e0b\u7aef\u70b9\u4e3a$(x,y_2)$\uff0c\u6211\u4eec\u5c31\u80fd\u4fdd\u8bc1\u5f53\u626b\u63cf\u7ebf\u5728\u533a\u95f4$[y_1,y_2]$\u65f6\u6811\u72b6\u6570\u7ec4\u4e2d\u4f4d\u7f6e$x$\u4f1a$+1$\u3002\n\n3. \u5982\u679c\u626b\u63cf\u5230\u4e00\u6761\u6a2a\u7ebf\uff0c\u4e14\u4e24\u7aef\u70b9\u6a2a\u5750\u6807\u4e3a$x_1$\u3001$x_2$\uff08$x_1<x_2$\uff09\uff0c\u6211\u4eec\u53ea\u8981\u67e5\u8be2$query(x_2)-query(x_1-1)$\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u6761\u7ebf\u6bb5\u4e0a\u4e0e\u5176\u5b83\u7ad6\u7ebf\u7684\u4ea4\u70b9\u5750\u6807\u4e86\uff0c\u4e0d\u8fc7\u7531\u4e8e\u7ad6\u7ebf\u4e0e\u6a2a\u7ebf\u4e24\u7aef\u70b9\u7684\u4ea4\u70b9\u4e0d\u80fd\u7b97\u8fdb\u53bb\uff0c\u6240\u4ee5\u5e94\u8be5\u67e5\u8be2$query(x_2-1)-query(x_1)$\u3002\n\n\u90a3\u4e48\u6700\u540e\u7b54\u6848\u5c31\u662f\u6240\u6709\u4ea4\u70b9\u7684\u4e2a\u6570\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n \n#define N 100010\n \nusing namespace std;\n \nstruct Point\n{\n    int x,y;\n}p[N];\n \nstruct Line \n{\n    int opt,x,r,y;//1 \u7ad6\u7ebf\u4e0b\u7aef\u70b9 0 \u6a2a\u7ebf -1 \u7ad6\u7ebf\u4e0a\u7aef\u70b9\n}l[N*10];\n \nint n,ans,cnt,b[N],c[N];\n \n //\u6811\u72b6\u6570\u7ec4\nint lowbit(int x)\n{\n    return x&-x;\n}\n \nvoid add(int x,int y)\n{\n    for(;x<=n;x+=lowbit(x))c[x]+=y;\n}\n \nint query(int x)\n{\n    int ans=0;\n    for(;x;x-=lowbit(x))ans+=c[x];\n    return ans;\n}\n \nbool cmpx(Point a,Point b){return a.x==b.x?a.y<b.y:a.x<b.x;}\nbool cmpy(Point a,Point b){return a.y==b.y?a.x<b.x:a.y<b.y;}\nbool cmpLine(Line a,Line b){return a.y==b.y?a.opt<b.opt:a.y<b.y;}\n \nvoid work()\n{\n    sort(p+1,p+n+1,cmpx);\n    for(int i=1;i<n;i++)\n    {\n        if(p[i].x==p[i+1].x)\n        {\n            l[++cnt]=(Line){1,p[i].x,0,p[i].y};\n            l[++cnt]=(Line){-1,p[i].x,0,p[i+1].y};\n        }\n    }\n    sort(p+1,p+n+1,cmpy);\n    for(int i=1;i<n;i++)\n        if(p[i].y==p[i+1].y)\n            l[++cnt]=(Line){0,p[i].x,p[i+1].x,p[i].y};\n}\n \nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&p[i].x,&p[i].y);\n        b[i]=p[i].x;\n    }   \n    sort(b+1,b+n+1);//\u79bb\u6563\u5316\n    int tot=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i<=n;i++)\n        p[i].x=lower_bound(b+1,b+tot+1,p[i].x)-b;\n  \twork();//\u52a0\u5165\u7ebf\u6bb5\n    sort(l+1,l+cnt+1,cmpLine);//\u626b\u63cf\n    for(int i=1;i<=cnt;i++)\n    {\n        if(!l[i].opt)ans+=query(l[i].r-1)-query(l[i].x);\n        else add(l[i].x,l[i].opt);\n    }\n    printf(\"%d\\n\",ans+n);\n    return 0;\n}\n```\n",
        "postTime": 1576899077,
        "uid": 118318,
        "name": "ez_lcw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5816 \u3010[CQOI2010]\u5185\u90e8\u767d\u70b9\u3011"
    },
    {
        "content": "upd : \u5220\u4e86\u6076\u81ed\u4ee3\u7801\uff0c\u52a0\u5165\u9898\u76ee\u7ed3\u8bba\u8bc1\u660e\u3002\n\n\u6ca1\u60f3\u6e05\u695a\u4e4b\u524d\u5343\u4e07\u522b\u5199\u4ee3\u7801\uff0c\u8fd9\u9053\u9898\u6211\u4ea4\u4e86 $3$ \u9875\u2026\u2026\n\n\u6709\u4e2a\u663e\u7136\u7684\u4e8b\u60c5\u662f\u5185\u90e8\u767d\u70b9\u5168\u5728\u4e14\u4ec5\u5728\u5f62\u5982 $l_1:y=y_0$ \u548c $l_2:x=x_0$ \u4e0a\uff0c\u4e14\u9700\u6ee1\u8db3 $\\exists i\\neq j,n\\neq m,x_i=x_j=x_0,y_n=y_m=y_0$\uff0c\u800c\u8fd9\u4e9b\u767d\u70b9\u4f1a\u5728\u7b2c\u4e00\u79d2\u5c31\u88ab\u67d3\u8272\u3002\n\n\u7b97\u4e86\uff0c\u8bc1\u660e\u4e00\u4e0b\u5427\u3002\n\n\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u7b2c\u4e8c\u79d2\u624d\u88ab\u67d3\u8272\u7684\u767d\u70b9\uff0c\u8fd9\u4e2a\u767d\u70b9\u5fc5\u5b9a\u7531\u4e00\u4e2a\u7b2c\u4e00\u79d2\u52a0\u5165\u7684\u9ed1\u70b9\u548c\u53e6\u5916\u4e09\u4e2a\u65b9\u5411\u4e0a\u7684\u9ed1\u70b9\u51b3\u5b9a\u67d3\u8272\u3002\u7136\u800c\u8fd9\u4e2a\u9ed1\u70b9\u88ab\u67d3\u8272\u7684\u6761\u4ef6\u662f\u56db\u4e2a\u65b9\u5411\u90fd\u6709\u9ed1\u70b9\uff0c\u6240\u4ee5\u8fd9\u4e2a\u767d\u70b9\u6cbf\u8fd9\u4e2a\u9ed1\u70b9\u7684\u65b9\u5411\u4e00\u5b9a\u6709\u4e00\u4e2a\u521d\u59cb\u7684\u9ed1\u70b9\uff0c\u8fd9\u6837\u8fd9\u4e2a\u767d\u70b9\u5728\u7b2c\u4e00\u79d2\u65f6\u5c31\u80fd\u591f\u88ab\u67d3\u9ed1\uff0c\u6240\u4ee5\u77db\u76fe\u3002\n\n\u4e8e\u662f\u4f60\u8003\u8651\u7edf\u8ba1\u4efb\u610f\u4e24\u6761\u6c34\u5e73\u548c\u7ad6\u76f4\u7ebf\u6bb5\u7684\u4ea4\u70b9\u4e2a\u6570\u3002\n\n\u5982\u679c\u628a\u7ad6\u76f4\u7ebf\u6bb5\u5f53\u4f5c\u4fee\u6539\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ed9\u6bcf\u4e2a\u6a2a\u5750\u6807\u4e0a\u7ebf\u6bb5\u4e0a\u6240\u6709\u7684\u70b9 $+1$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7eb5\u5750\u6807 $y$ \u4e0a\u7684\u6c34\u5e73\u7ebf\u6bb5\u67e5\u8be2 $(x_l,y)$ \u5230 $(x_r,y)$ \u7684\u548c\u5373\u53ef\uff0c\u663e\u7136\u53ef\u4ee5\u4f7f\u7528\u6811\u5957\u6811\u89e3\u51b3\u3002\n\n\u4e8e\u662f\u5728 `9:24` \u6211\u4ea4\u4e86\u4e00\u53d1\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u5728\u7b2c $4$ \u4e2a\u70b9 $\\mathtt{MLE}$ \u4e86\u3002\n\n\u7136\u540e\u6211\u82b1\u4e86 $2\\text{h}$ \u7684\u65f6\u95f4\u5361\u5e38 + \u4f18\u5316\uff0c\u9996\u5148\u628a\u79bb\u6563\u5316\u6570\u7ec4\u6539\u6210\u4e86 `vector`\uff0c\u7136\u540e\u628a\u7ebf\u6bb5\u6811\u7684\u5de6\u53f3\u513f\u5b50\u90fd\u538b\u5728\u4e86\u4e00\u4e2a `long long` \u6574\u6570\u91cc\u9762\uff0c\u8fd8\u6709\u4e00\u5806\u5947\u602a\u7684\u4f18\u5316\u3002\u4f46\u662f\u6700\u540e\u8fd8\u662f\u8fc7\u4e0d\u4e86\uff0c\u751a\u81f3\u8fd8\u641e\u51fa\u6765\u4e0d\u77e5\u9053\u4ec0\u4e48\u5947\u602a\u7684\u95ee\u9898\u3002\n\n\u6b63\u5728\u6446\u70c2\u7684\u65f6\u5019\uff0c\u795e\u4ed9 [$\\mathtt{\\color{black}s\\color{red}insop90}$](https://www.luogu.com.cn/user/141599) \u8dd1\u8fc7\u6765\u8ddf\u6211\u53e3\u80e1\u4e86\u79bb\u7ebf\u505a\u6cd5\u3002\n\n\u8fd8\u662f\u521a\u521a\u7684\u601d\u8def\uff0c\u5728\u7ebf\u6bb5\u4fee\u6539\u7684\u57fa\u7840\u4e0a\uff0c\u8003\u8651\u626b\u63cf\u7ebf\u5dee\u5206\u3002\u6211\u4eec\u628a\u7ebf\u6bb5\u4fee\u6539 $(x,y_l)$ \u5230 $(x,y_r)$ \u6539\u6210\u7ed9 $(x,y_l)+1$\uff0c\u5e76\u4e14\u7ed9 $(x,y_r+1)-1$\u3002\u67e5\u8be2 $(x_l,y)$ \u5230 $(x_r,y)$ \u7684\u7ebf\u6bb5\u548c\u5373\u67e5\u8be2 $(x_l,0)$ \u5230 $(x_r,y)$ \u7684\u77e9\u9635\u548c\uff0c\u6839\u636e\u5957\u8def\u62c6\u6210\u4e24\u4e2a\u524d\u7f00\u77e9\u9635\u67e5\u8be2\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u53d8\u6210\u4e86\u5355\u70b9\u4fee\u6539\u3001\u77e9\u9635\u6c42\u548c\uff0c\u6309\u7167 $x$ \u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7528\u626b\u63cf\u7ebf\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u65f6\u95f4 $O(n\\log n)$\uff0c\u7a7a\u95f4 $O(n)$\u3002\n\n\u626b\u63cf\u7ebf\u505a\u6cd5\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nnamespace mystd {\n\tinline int read() {\n\t    char c = getchar();\n\t    int x = 0, f = 1;\n\t    while (c < '0' || c > '9') f = (c == '-') ? -1 : f, c = getchar();\n\t    while (c >= '0' && c <= '9') x = (x << 1) + (x << 3) + c - '0', c = getchar();\n\t    return x * f;\n\t}\n\tinline void write(int x) {\n\t    if (x < 0) x = ~(x - 1), putchar('-');\n\t    if (x > 9) write(x / 10);\n\t    putchar(x % 10 + '0');\n\t}\n}\nusing namespace std;\nusing namespace mystd;\n\nconst int maxn = 1e5 + 100;\nstruct node { int x, y; } s[maxn];\nstruct qry { int x, y, op; } q[maxn << 1];\nint n, len, cnt, ans, tr[maxn << 1];\nvector<int> b;\n\nint lowbit(int x) { return x & (-x); }\nvoid modify(int x, int y) { for (int i = x; i <= len; i += lowbit(i)) tr[i] += y; }\nint query(int x) { int res = 0; for (int i = x; i; i -= lowbit(i)) res += tr[i]; return res; }\n \nint main() {\n\tscanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) scanf(\"%d%d\", &s[i].x, &s[i].y), b.push_back(s[i].x), b.push_back(s[i].y);\n    sort(b.begin(), b.end()), b.erase(unique(b.begin(), b.end()), b.end()), len = b.size();\n    for (int i = 1; i <= n; i++) s[i].x = lower_bound(b.begin(), b.end(), s[i].x) - b.begin() + 1, s[i].y = lower_bound(b.begin(), b.end(), s[i].y) - b.begin() + 1;\n    sort(s + 1, s + n + 1, [](const node &x, const node &y) { return x.y == y.y ? x.x < y.x : x.y < y.y; });\n    for (int i = 1, j; i <= n; i++) {\n    \tif (s[i].y != s[i - 1].y) {\n    \t\tfor (j = i; j <= n && s[i].y == s[j].y; j++) ;\n    \t\tj--, q[++cnt] = (qry) { s[j].x, s[i].y, 1 }, q[++cnt] = (qry) { s[i].x - 1, s[i].y, -1 };\n\t\t} \n\t}\n    sort(s + 1, s + n + 1, [](const node &x, const node &y) { return x.x == y.x ? x.y < y.y : x.x < y.x; });\n    sort(q + 1, q + cnt + 1, [](const qry &x, const qry &y) { return x.x == y.x ? x.y < y.y : x.x < y.x; });\n    for (int i = 1, cur = 0; i <= cnt; i++) {\n    \twhile (cur < n && s[cur + 1].x <= q[i].x) {\n    \t\tint j; cur++;\n    \t\tfor (j = cur; j <= n && s[j].x == s[cur].x; j++) ;\n    \t\tj--, modify(s[cur].y, 1), modify(s[j].y + 1, -1), cur = j;\n\t\t}\n\t\tans += query(q[i].y) * q[i].op;\n\t} \n\twrite(ans);\n\treturn 0;\n}\n```\n\n\u6700\u540e\u653e\u4e00\u4e0b\u6811\u5957\u6811\u7684\u505a\u6cd5\uff0c\u5bf9\u62cd\u51e0\u7ec4\u540e\u53d1\u73b0\u6709\u4e9b\u6570\u636e\u7b54\u6848\u662f\u9519\u7684\uff0c\u6240\u4ee5**\u4ec5\u4f9b\u53c2\u8003**\uff1a\n\n[code](https://www.luogu.com.cn/paste/om8z348p)",
        "postTime": 1657252885,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "P5816"
    },
    {
        "content": "#### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5816)\n\n\u626b\u63cf\u7ebf\u7684\u505a\u6cd5\u8fd9\u91cc\u4e0d\u8bf4\u4e86\uff0c\u633a\u591a\u9898\u89e3\u90fd\u8bb2\u7684\u633a\u4e0d\u9519\u7684\u3002\u8fd9\u91cc\u5206\u4eab\u4e00\u4e2a**\u4e3b\u5e2d\u6811**\u7684\u5199\u6cd5\u3002\n\n\u9996\u5148\u6211\u4eec\u660e\u786e\u7684\u662f\uff0c\u7b2c\u4e00\u6b65\u53d8\u5316\u4e4b\u540e\uff0c\u6574\u4e2a\u56fe\u5c31\u4e0d\u4f1a\u53d8\u4e86\u3002\u4e3a\u4ec0\u4e48\u5462\uff0c\u7b2c\u4e8c\u6b65\u624d\u6539\u53d8\u7684\u70b9 $q$ \u80af\u5b9a\u662f\u56e0\u4e3a\u7b2c\u4e00\u6b65\u6539\u53d8\u7684\u67d0\u4e2a\u70b9 $p$ \u6216\u8005\u597d\u51e0\u4e2a\u70b9\u53d8\u6210\u9ed1\u70b9\u624d\u6539\u53d8\u7684\u3002\u5982\u679c $q$ \u56e0\u4e3a $p$ \u800c\u6539\u53d8\u4e14 $p$ \u5728 $q$ \u7684\u6c34\u5e73\u5de6\u4fa7\uff0c\u90a3\u4e48 $p$ \u5de6\u4fa7\u80af\u5b9a\u8fd8\u6709\u70b9\uff0c\u56e0\u4e3a $p$ \u662f\u7b2c\u4e00\u6b65\u53d8\u6210\u9ed1\u70b9\u7684\u70b9\uff0c\u90a3\u4e48\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c $q$ \u7b2c\u4e00\u6b65\u4e5f\u5e94\u5f53\u53d8\u6210\u9ed1\u70b9\uff0c\u4e0d\u5e94\u8be5\u7b49\u5230\u7b2c\u4e8c\u6b21\u624d\u53d8\u5316\u3002\u5176\u4ed6\u51e0\u4e2a\u65b9\u5411\u6216\u8005\u591a\u4e2a\u70b9\u7684\u60c5\u51b5\u662f\u540c\u7406\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u7b2c\u4e8c\u6b65\u6574\u4e2a\u56fe\u5c31\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\u4e86\uff0c\u56e0\u6b64\u4ee5\u540e\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u518d\u53d8\u5316\u3002\n\n\u90a3\u4e48\u4f1a\u4ece\u767d\u53d8\u9ed1\u7684\u70b9\u80af\u5b9a\u662f\u5939\u5728\u4e24\u4e2a $y$ \u76f8\u7b49\u7684\u76f8\u90bb\u70b9\u4e2d\u95f4\u7684\u70b9\uff0c\u73b0\u5c06\u8fd9\u4e24\u4e2a\u76f8\u90bb\u70b9\u8868\u793a\u4e3a $(x_1,y)$ \u548c $(x_2,y)$ ,\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5bf9\u6bcf\u4e00\u5bf9\u8fd9\u6837\u7684\u76f8\u90bb\u70b9\u53bb\u6c42\u7b54\u6848\u6700\u540e\u52a0\u548c\u5c31\u53ef\u4ee5\u4e86\u3002\u90a3\u4e48\u5176\u4e2d\u95f4\u7684\u70b9\u53ef\u4ee5\u8868\u793a\u4e3a $\\left\\{(x,y)|x\\in\\left[x_1+1,x_2-1\\right]\\right\\}$ ,\u90a3\u4e48\u8fd9\u91cc\u6709\u591a\u5c11\u4e2a\u70b9\u53ef\u4ee5\u53d8\u6210\u9ed1\u70b9\u5176\u5b9e\u4e5f\u5c31\u662f\u5bf9\u4e8e\u8fd9\u91cc\u7684\u6bcf\u4e2a $x$ \uff0c\u53bb\u770b\u662f\u5426\u5176\u4e0a\u4e0b\u5206\u522b\u81f3\u5c11\u90fd\u5b58\u5728\u4e00\u4e2a\u70b9\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u4e0d\u597d\u8ba1\u7b97\uff0c\u4e8e\u662f\u6211\u4eec\u53cd\u8fc7\u6765\u7b97\uff0c\u6211\u4eec\u7b97\u6709\u591a\u5c11\u4e2a\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002\u4e0d\u6ee1\u8db3\u6761\u4ef6\u5c31\u662f\uff0c\u5bf9\u4e8e $x$ \u8fd9\u4e00\u5217\u6765\u8bf4\uff0c\u8981\u4e48\u53ea\u6709 $y$ \u7684\u4e0a\u65b9\u6ca1\u6709\u70b9\uff0c\u8981\u4e48\u53ea\u6709\u4e0b\u4fa7\u6ca1\u6709\u70b9\uff0c\u8981\u4e48\u90fd\u6ca1\u3002\u90a3\u4e48\u6211\u5c31\u60f3\uff1a\n\n1. \u4ee5\u7eb5\u8f74\u4e3a\u65f6\u95f4\u8f74\u5efa\u7acb\u4e3b\u5e2d\u6811\uff0c\u53ef\u4ee5\u7b97\u51fa $y$ \u4e0a\u65b9\u5728 $[x_1+1,x_2-1]$ \u5185\u6709\u591a\u5c11\u79cd $x$ \uff0c\u90a3\u4e48\u7528\u603b\u7684\u79cd\u7c7b\u6570\u51cf\u4e00\u4e0b\uff0c\u4e5f\u5c31\u53ef\u4ee5\u7b97\u51fa\u7f3a\u4e86\u591a\u5c11\u79cd $x$ \uff0c\u4e5f\u5c31\u7b97\u51fa\u4e86 $y$ \u7684\u4e0a\u65b9\u6709\u591a\u5c11\u7eb5\u5217\u662f\u7a7a\u7684\u3002\n\n1. \u518d\u4ee5\u7eb5\u8f74\u4e3a\u65f6\u95f4\u8f74\u53cd\u5411\u5efa\u7acb\u4e3b\u5e2d\u6811\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $y$ \u7684\u4e0b\u65b9\u5728 $[x_1+1,x_2-1]$ \u5185\u6709\u591a\u5c11\u79cd $x$ \uff0c\u4e5f\u53ef\u8ba1\u7b97\u51fa $y$ \u4e0b\u65b9\u6709\u591a\u5c11\u7eb5\u5217\u662f\u7a7a\u7684\u3002\n\n1. \u7136\u540e\u6211\u4eec\u7528\u6b63\u5411\u5efa\u7acb\u8fd8\u662f\u53cd\u5411\u5efa\u7acb\u7684\u4e3b\u5e2d\u6811\u90fd\u53ef\u5f97\u5230\u5bf9\u4e8e\u5168\u5c40\u5728 $[x_1+1,x_2-1]$ \u5185\u6709\u591a\u5c11\u79cd $x$ \uff0c\u540c\u7406\u7b97\u51fa\u5168\u5c40   $[x_1+1,x_2-1]$ \u5185\u6709\u591a\u5c11\u7eb5\u5217\u662f\u7a7a\u7684\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u5c06\u524d\u4e24\u9879\u76f8\u52a0\u51cf\u53bb\u7b2c\u4e09\u9879\u7b97\u51fa $[x_1+1,x_2-1]$ \u5185\uff0c\u6709\u591a\u5c11\u7eb5\u5217\u8981\u4e48 $y$ \u4e0a\u9762\u662f\u7a7a\u7684\uff0c\u8981\u4e48 $y$ \u4e0b\u9762\u662f\u7a7a\u7684\uff0c\u8981\u4e48 $y$ \u7684\u4e0a\u4e0b\u5168\u662f\u7a7a\u7684\u3002\u8bf4\u767d\u4e86\u6211\u4eec\u5c31\u7b97\u51fa\u4e86\u65e0\u6cd5\u53d8\u6210\u9ed1\u70b9\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u51cf\u4e00\u4e0b\uff0c\u4e0d\u5c31\u53d8\u6210\u4e86\u53ef\u4ee5\u53d8\u6210\u9ed1\u70b9\u7684\u60c5\u51b5\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u7528\u4e3b\u5e2d\u6811\u6ca1\u7528\u4f7f\u7528\u533a\u95f4\u6c42\u503c\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3a\u79cd\u7c7b\u6570\u4e0d\u6ee1\u8db3\u524d\u7f00\u76f8\u51cf\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u8fd9\u91cc\u6b63\u53cd\u5efa\u4e86\u4e24\u9897\u4e3b\u5e2d\u6811\u3002\n\n\u8fd9\u91cc\u4e0d\u8d34\u4ee3\u7801\u4e86\uff0cBye\uff01",
        "postTime": 1653125448,
        "uid": 652444,
        "name": "IcyFoxer_XZY",
        "ccfLevel": 4,
        "title": "\u5185\u90e8\u767d\u70b9\u9898\u89e3"
    },
    {
        "content": "\n## \u3010\u89e3\u6790\u3011\n\n\u597d\u9898\u3002\n\n\u62ff\u5230\u9898\u76ee\u9996\u5148\u5148\u770b\u4e00\u4e0b\u5b83\u7684\u65e0\u89e3\u60c5\u51b5\u662f\u600e\u4e48\u5224\u65ad\u7684\u3002\n\n\u7136\u540e\u5f88\u660e\u663e\u8fd9\u4e2a\u662f\u4e0d\u5b58\u5728\u65e0\u89e3\u60c5\u51b5\u7684\u3002\n\n\u56e0\u4e3a\u5b83\u7684\u9ed1\u70b9\u5f00\u59cb\u90fd\u662f\u7ed9\u5b9a\u4e86\u7684\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u8fb9\u754c\u3002\n\n\u800c\u65b0\u7684\u53d8\u5316\u7684\u9ed1\u70b9\u4e0d\u4f1a\u5f80\u5916\u6269\u5f20\uff0c\u90a3\u4e48\u4e5f\u5c31\u610f\u5473\u7740\u8fb9\u754c\u4e0d\u4f1a\u6269\u5927\u3002\n\n\u8fb9\u754c\u4e0d\u4f1a\u6269\u5927\uff0c\u90a3\u4e48\u53d8\u8272\u8fc7\u7a0b\u5c31\u4f1a\u7ec8\u6b62\u3002\n\n\u7136\u540e\u8003\u8651\u6309\u7740\u9898\u76ee\u91cc\u7684\u610f\u601d\u6765\u770b\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u4e00\u4e2a\u767d\u70b9\u53d8\u4e3a\u9ed1\u70b9\uff0c\u59cb\u7ec8\u5b9e\u5728\u4e24\u4e2a\u6a2a\u5750\u6807\u76f8\u540c\u7684\u70b9\u4e4b\u95f4\u7684\u3002\n\n\u8fd9\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4e00\u6839\u7ad6\u7ebf\uff0c\u7136\u540e\u8fd9\u4e2a\u65f6\u5019\u4f60\u53d1\u73b0\u53ea\u8981\u51fa\u73b0\u4e86\u4e00\u6839\u6c34\u5e73\u7684\u7ebf\u5c31\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u626b\u63cf\u7ebf\u7684\u8fc7\u7a0b\u3002\n\n\u5bf9\u4e8e\u7ad6\u7ebf\u5c31\u662f\u626b\u5230\u4e0a\u7aef\u70b9\u5c31\u6267\u884c\u5355\u70b9\u51cf\u7684\u8fc7\u7a0b\uff0c\u626b\u5230\u4e0b\u65ad\u70b9\u5c31\u5355\u70b9\u52a0\u3002\n\n\u5bf9\u4e8e\u6a2a\u7ebf\u5c31\u76f4\u63a5\u533a\u95f4\u67e5\u627e\u4e00\u6ce2\uff0c\u7b49\u4ef7\u4e8e\u5bfb\u627e\u4e0e\u5b83\u6709\u4ea4\u70b9\u7684\u7ad6\u7ebf\u4e2a\u6570\u3002\n\n\u7136\u540e\u5c31\u6ca1\u4e86\uff0c\u4e0d\u8fc7\u5750\u6807\u53ef\u80fd\u4e3a\u8d1f\uff0c\u6240\u4ee5\u9700\u8981\u79bb\u6563\u5316\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ntemplate<typename T> inline void read(T &x){T f=1;x=0;char ch=getchar();while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}x*=f;}\nconst int N  = 6e5;\nint n,xx[N],yy[N],c[N],ans,m1,m2,num;\nstruct node{int x,y;}a[N];\nstruct line{int x,y,rx,type;}l[N];\nint mp(line x,line y){\n\tif(x.y==y.y) return x.type<y.type;\n\telse return x.y<y.y;\n}\nint cmp(node x,node y){if(x.y!=y.y)return x.y<y.y; return x.x<y.x;}\nint comp(node x,node y){if(x.x!=y.x) return x.x<y.x;return x.y<y.y;}\nint lowbit(int x){return x&(-x);}\nvoid change(int x,int val){\n\tfor(int i=x;i<=N;i+=lowbit(i)) c[i]+=val;\n}\nint ask(int x){\n\tint ans=0;\n\tfor(int i=x;i;i-=lowbit(i)) ans+=c[i];\n\treturn ans;\n}\nvoid work(){\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=1;i<n;i++){\n\t\tif(a[i].y==a[i+1].y){\n\t\t\tl[++num].x=a[i].x;l[num].y=a[i].y;\n\t\t\tl[num].rx=a[i+1].x;l[num].type=0;\n\t\t}\n\t}\n\tsort(a+1,a+n+1,comp);\n\tfor(int i=1;i<n;i++){\n\t\tif(a[i].x==a[i+1].x){\n\t\t\tl[++num].x=a[i].x;l[num].y=a[i].y;l[num].type=1;\n\t\t\tl[++num].x=a[i].x;l[num].y=a[i+1].y;l[num].type=-1;\n\t\t}\n\t}\n\tsort(l+1,l+num+1,mp);\n}\nsigned main(){\n\tread(n);\n\tfor(int i=1;i<=n;i++) read(a[i].x),read(a[i].y),xx[i]=a[i].x,yy[i]=a[i].y;\n\tsort(xx+1,xx+n+1);sort(yy+1,yy+n+1);\n\tm1=unique(xx+1,xx+n+1)-1-xx;\n\tm2=unique(yy+1,yy+n+1)-1-yy;\n\tfor(int i=1;i<=n;i++){\n\t\tint val=lower_bound(xx+1,xx+m1+1,a[i].x)-xx;a[i].x=val;\n\t\tval=lower_bound(yy+1,yy+m2+1,a[i].y)-yy;a[i].y=val;\n\t}\n\twork();\n\tans=n;\n\tfor(int i=1;i<=num;i++){\n\t\tif(!l[i].type){\n\t\t\tans+=ask(l[i].rx-1)-ask(l[i].x);\n\t\t}\n\t\telse{\n\t\t\tchange(l[i].x,l[i].type);\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1624453972,
        "uid": 206021,
        "name": "Pitiless0514",
        "ccfLevel": 7,
        "title": "P5816\u5185\u90e8\u767d\u70b9\u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\n\u6211\u4eec\u8ba4\u771f\u89c2\u5bdf\u6b64\u9898\uff0c\u53d1\u73b0\u5185\u90e8\u767d\u70b9\u53ea\u6709\u53ef\u80fd\u51fa\u73b0\u4e00\u6b21\uff0c\u5373\u53ea\u9700\u53d8\u4e00\u6b21\n\n\u7b80\u5355\u8bc1\u660e\uff1a\n\n\u6211\u4eec\u77e5\u9053\u5185\u90e8\u767d\u70b9\u7684\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u767d\u8272\u7684\u6574\u70b9$ P(x,y)$ \u662f\u5185\u90e8\u767d\u70b9\u5f53\u4e14\u4ec5\u5f53 $P$\u5728\u6c34\u5e73\u7ebf\u7684\u5de6\u8fb9\u548c\u53f3\u8fb9\u5404\u81f3\u5c11\u6709\u4e00\u4e2a\u9ed1\u70b9\uff08\u5373\u5b58\u5728$x_1 < x < x_2$\u4f7f\u5f97 $(x_1,y)$\u548c$(x_2,y)$ \u90fd\u662f\u9ed1\u70b9\uff09\uff0c\u4e14\u5728\u7ad6\u76f4\u7ebf\u7684\u4e0a\u8fb9\u548c\u4e0b\u8fb9\u5404\u81f3\u5c11\u6709\u4e00\u4e2a\u9ed1\u70b9\uff08\u5373\u5b58\u5728$ y_1 < y <y_2$ \u4f7f\u5f97$ (x,y_1)$ \u548c $(x,y_2)$\n\u90fd\u662f\u9ed1\u70b9)\n\n\u6545\u5728\u4e00\u4e2a\u5185\u90e8\u767d\u70b9\u6240\u5728\u884c\u5217\u5fc5\u5b9a\u5df2\u7ecf\u6709\u5927\u4e8e\u7b49\u4e8e$2$\u4e2a\u9ed1\u5b50\uff0c\u8fd9\u9897\u65b0\u7684\u9ed1\u5b50\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\n\n\n\n------------\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5982\u4f55\u5bfb\u627e\u5185\u90e8\u767d\u70b9\uff0c\u6211\u4eec\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\uff09\n\n\u9996\u5148\u8981\u5148\u628a$x,y$\u5750\u6807\u79bb\u6563\uff0c\u7531\u4e8e\u4e0d\u80fd\u653e\u5728\u539f\u6765\u9ed1\u5b50\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5728\u539f\u4f4d\u7f6e\u8981\u5206\u662f\u5426\u76f8\u90bb\uff0c\u76f8\u90bb\u4e3a$+1$,\u4e0d\u76f8\u90bb\u4e3a$+2$;\n\n```cpp\nsort(a+1,a+n+1);cnt=unique(a+1,a+n+1)-a-1;f1[1]=1;\nfor(int i=2;i<=cnt;i++)\n\tif(a[i]==a[i-1]+1)f1[i]=f1[i-1]+1;\n\telse f1[i]=f1[i-1]+2;\nfor(int i=1;i<=n;i++)b[i].x=f1[lower_bound(a+1,a+1+cnt,b[i].x)-a];\nsort(d+1,d+n+1);un=unique(d+1,d+n+1)-d-1;f2[1]=1;\nfor(int i=2;i<=un;i++)\n\tif(d[i]==d[i-1]+1)f2[i]=f2[i-1]+1;\n   else f2[i]=f2[i-1]+2;\nfor(int i=1;i<=n;i++) b[i].y=f2[lower_bound(d+1,d+1+un,b[i].y)-d];\n```\n\n\n------------\n\n\u7136\u540e\u628a\u6a2a\u8f74\u7ad6\u8f74\u6392\u5e8f\u8bb0\u5f55\n\n```cpp\nsort(b+1,b+n+1,cmp);\nfor(int i=1;i<n;i++)\n\tif(b[i].y==b[i+1].y)line[++tot].l=b[i].x,line[tot].r=b[i+1].x,line[tot].y=b[i].y; \nsort(b+1,b+n+1,cnp);int sum=0;\nfor(int i=1;i<n;i++)\n\tif(b[i].x==b[i+1].x)\n\t{\n\t\tlin[++sum].x=b[i].x,lin[sum].y=b[i].y,lin[sum].num=1,\n\t\tlin[++sum].x=b[i].x,lin[sum].y=b[i+1].y,lin[sum].num=-1;\n\t} \n```\n\n\n\n------------\n\u7528\u6811\u72b6\u6570\u7ec4\u5f97\u51fa\u7b54\u6848\n\n```cpp\nfor(int i=1;i<=tot;i++)\n{\n\twhile(lin[cntt].y<line[i].y&&cntt<=sum)\n\t\tadd(lin[cntt].x,lin[cntt].num),cntt++;\n\twhile(lin[cntt].y==line[i].y&&cntt<=sum&&lin[cntt].num==-1)\n\t\tadd(lin[cntt].x,lin[cntt].num),cntt++;\n\tans+=query(line[i].r-1)-query(line[i].l);\n} \n```\n\n\n------------\n\n\u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define lowbit(x) x&(-x) \nconst int maxn=1000005;\ninline int read()\n{\n\tchar ch=getchar();int x=0;bool f=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)return -x;return x;\n}\nint n,m,a[maxn],x,y,xx,yy,tot=0,ans=0,z=0,c[maxn],d[maxn],un,cnt,f1[maxn],f2[maxn];\nstruct tree{int sum,num,len,tagl,tagr;}tr[maxn*4];\nstruct node{int l,r,y;}line[maxn];\nstruct nod{int x,y;}b[maxn];\nstruct nodd{int x,y,num;}lin[maxn];\nbool cmp(nod a,nod b){if(a.y==b.y)return a.x<b.x;return a.y<b.y;}\nbool cnp(nod a,nod b){if(a.x==b.x)return a.y<b.y;return a.x<b.x;}\nbool cpp(nodd a,nodd b){if(a.y==b.y)return a.num<b.num;return a.y<b.y;}\nvoid add(int x,int num){for(int i=x;i<=cnt*2;i+=lowbit(i))c[i]+=num;}\nint query(int x){int res=0;for(int i=x;i;i-=lowbit(i))res+=c[i];return res;}\nsigned main()\n{\n\tn=read();ans=n;\n\tfor(int i=1;i<=n;i++)a[i]=b[i].x=read(),d[i]=b[i].y=read();\n\tsort(a+1,a+n+1);cnt=unique(a+1,a+n+1)-a-1;f1[1]=1;\n\tfor(int i=2;i<=cnt;i++)if(a[i]==a[i-1])f1[i]=f1[i-1];\n\telse if(a[i]==a[i-1]+1)f1[i]=f1[i-1]+1;else f1[i]=f1[i-1]+2;\n\tfor(int i=1;i<=n;i++)b[i].x=f1[lower_bound(a+1,a+1+cnt,b[i].x)-a];\n\tsort(d+1,d+n+1);un=unique(d+1,d+n+1)-d-1;f2[1]=1;\n\tfor(int i=2;i<=un;i++)if(d[i]==d[i-1])f2[i]=f2[i-1];\n\telse if(d[i]==d[i-1]+1)f2[i]=f2[i-1]+1;else f2[i]=f2[i-1]+2;\n\tfor(int i=1;i<=n;i++) b[i].y=f2[lower_bound(d+1,d+1+un,b[i].y)-d];\n\tsort(b+1,b+n+1,cmp);\n\tfor(int i=1;i<n;i++)\n\t\tif(b[i].y==b[i+1].y)line[++tot].l=b[i].x,line[tot].r=b[i+1].x,line[tot].y=b[i].y; \n\tsort(b+1,b+n+1,cnp);int sum=0;\n\tfor(int i=1;i<n;i++)\n\t\tif(b[i].x==b[i+1].x)\n\t\t{\n\t\t\tlin[++sum].x=b[i].x,lin[sum].y=b[i].y,lin[sum].num=1,\n\t\t\tlin[++sum].x=b[i].x,lin[sum].y=b[i+1].y,lin[sum].num=-1;\n\t\t} \n\tsort(lin+1,lin+sum+1,cpp);int cntt=1;\n\tfor(int i=1;i<=tot;i++)\n\t{\n\t\twhile(lin[cntt].y<line[i].y&&cntt<=sum)\n\t\t\tadd(lin[cntt].x,lin[cntt].num),cntt++;\n\t\twhile(lin[cntt].y==line[i].y&&cntt<=sum&&lin[cntt].num==-1)\n\t\t\tadd(lin[cntt].x,lin[cntt].num),cntt++;\n\t\tans+=query(line[i].r-1)-query(line[i].l);\n\t} \n\tcout<<ans;\n\treturn 0;\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1612748644,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5816 \u3010[CQOI2010]\u5185\u90e8\u767d\u70b9\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u4f60\u65e0\u9650\u5927\u7684\u767d\u8272\u5e73\u9762\u4e0a\u4e00\u4e9b\u9ed1\u70b9\uff0c\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u90fd\u6709\u9ed1\u70b9\u7684\u767d\u70b9\u67d3\u9ed1\uff0c\u95ee\u6700\u540e\u6709\u51e0\u4e2a\u9ed1\u70b9\u3002\n## \u9898\u89e3\n\u89c2\u5bdf\u9898\u610f\uff0c\u7565\u5fae\u601d\u8003\u53ef\u4ee5\u53d1\u73b0\u6240\u8c13\u6c38\u4e0d\u505c\u6b62\u7684\u60c5\u51b5\u662f\u51fa\u9898\u4eba\u62ff\u6765\u9a97\u4eba\u7684\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u65e0\u6cd5\u505a\u5230\u65e0\u9650\u6269\u5f20\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u79cd\u53d8\u5316\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6027\u8d28:\u88ab\u540e\u6765\u67d3\u9ed1\u7684\u70b9\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u767d\u70b9\u662f\u5426\u4f1a\u88ab\u67d3\u9ed1\u3002\u8bc1\u660e\u53ef\u4ee5\u5047\u8bbe\u4e00\u4e2a\u70b9\u4e0a\u65b9\u6709\u4e00\u4e2a\u540e\u6765\u88ab\u67d3\u9ed1\u7684\u70b9\uff0c\u5b83\u4f7f\u5f97\u8fd9\u4e2a\u70b9\u4ece\u4e0d\u80fd\u67d3\u8272\u53d8\u6210\u53ef\u4ee5\u67d3\u8272\uff0c\u90a3\u4e48\u65e2\u7136\u5b83\u4e0a\u65b9\u6709\u4e00\u4e2a\u88ab\u67d3\u9ed1\u7684\u70b9\uff0c\u90a3\u4e48\u5728\u66f4\u4e0a\u65b9\u4e00\u5b9a\u6709\u4e00\u4e2a\u9ed1\u70b9\uff0c\u8fd9\u4e0e\u5f53\u524d\u70b9\u4e00\u5f00\u59cb\u4e0d\u80fd\u88ab\u67d3\u9ed1\u77db\u76fe\uff0c\u5f97\u8bc1\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u626b\u63cf\u7ebf\uff0c\u7528\u5dee\u5206\u5f62\u5f0f\u8868\u793a\u6bcf\u4e2a\u53ef\u4ee5\u4ea7\u751f\u5f71\u54cd\u7684\u6a2a\u7ebf\uff0c\u7ad6\u7ebf\u76f4\u63a5\u67e5\u8be2\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n\u8fd9\u9053\u9898\u6211\u4e2a\u4eba\u89c9\u5f97\u6700\u6076\u5fc3\u4eba\u7684\u8fd8\u662f\u5bf9\u521d\u59cb\u9ed1\u70b9\u7684\u5224\u91cd\u95ee\u9898\uff08\u5728\u626b\u63cf\u7ebf\u65f6\u53ef\u80fd\u4f1a\u91cd\u590d\u8ba1\u7b97\uff09\u3002\u6211\u7684\u505a\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u70b9\u7edf\u8ba1\u662f\u5426\u5728\u6a2a\u7eb5\u65b9\u5411\u6ee1\u8db3\u4e86\u67d3\u9ed1\u6761\u4ef6\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5c31\u628a\u5b83\u7b97\u4e0a\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nint n,hx[3*N],cnt1,hy[3*N],cnt2,sum,s[N*12];long long ans;\nstruct node\n{\n    int x,y,b;\n}p[N];\nbool cmp(node i,node j)\n{\n    if(i.x!=j.x) return i.x<j.x;\n    return i.y<j.y;\n}\nbool cmp2(node i,node j)\n{\n    if(i.y!=j.y) return i.y<j.y;\n    return i.x<j.x;\n}\nstruct node2\n{\n    int x,l,r,t;\n}q[N*3];\nbool cmp3(node2 i,node2 j)\n{\n    if(i.x!=j.x) return i.x<j.x;\n    return i.t<j.t;\n}\nvoid update(int x,int l,int r,int loc,int y)\n{\n    if(l==r)\n    {\n        s[x]+=y;return;\n    }\n    int mid=(l+r)>>1;\n    if(loc<=mid) update(x<<1,l,mid,loc,y);\n    else update(x<<1|1,mid+1,r,loc,y);\n    s[x]=s[x<<1]+s[x<<1|1];\n}\nint query(int x,int l,int r,int L,int R)\n{\n    if(L>R) return 0;\n    if(L<=l && r<=R) return s[x];\n    int mid=(l+r)>>1,res=0;\n    if(L<=mid) res+=query(x<<1,l,mid,L,R);\n    if(R>mid) res+=query(x<<1|1,mid+1,r,L,R);\n    return res;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&p[i].x,&p[i].y);\n        hx[++cnt1]=p[i].x;hy[++cnt2]=p[i].y;\n        hx[++cnt1]=p[i].x+1;hy[++cnt2]=p[i].y+1;\n        hx[++cnt1]=p[i].x-1;hy[++cnt2]=p[i].y-1;\n    }\n    sort(hx+1,hx+cnt1);cnt1=unique(hx+1,hx+cnt1+1)-hx-1;\n    sort(hy+1,hy+cnt2);cnt2=unique(hy+1,hy+cnt2+1)-hy-1;\n    for(int i=1;i<=n;i++)\n    {\n        p[i].x=lower_bound(hx+1,hx+cnt1+1,p[i].x)-hx;\n        p[i].y=lower_bound(hy+1,hy+cnt2+1,p[i].y)-hy;\n    }\n    sort(p+1,p+n+1,cmp);\n    int last=1;\n    for(int i=1;i<=n;i++)\n        if(p[i].x!=p[last].x)\n        {\n            for(int j=last+1;j<i-1;j++) p[j].b++;\n            if(last<i-1)\n            {\n                q[++sum]={p[last].x,p[last].y+1,p[i-1].y-1,2};\n            }\n            last=i;\n        }\n    sort(p+1,p+n+1,cmp2);\n    last=1;\n    for(int i=1;i<=n;i++)\n        if(p[i].y!=p[last].y)\n        {\n            for(int j=last+1;j<i-1;j++) p[j].b++;\n            if(last<i-1)\n            {\n                q[++sum]={p[last].x+1,p[last].y,0,1};\n                q[++sum]={p[i-1].x,p[last].y,0,-1};\n            }\n            last=i;\n        }\n    sort(q+1,q+sum+1,cmp3);\n    for(int i=1;i<=sum;i++)\n    {\n        if(q[i].t!=2)\n        {\n            update(1,1,cnt2,q[i].l,q[i].t);\n        }\n        else{\n            ans+=query(1,1,cnt2,q[i].l,q[i].r);\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(p[i].b<2) ans++;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1673008614,
        "uid": 300710,
        "name": "xuyuansu",
        "ccfLevel": 0,
        "title": "P5816 [CQOI2010]\u5185\u90e8\u767d\u70b9"
    },
    {
        "content": "\u89c2\u5bdf\u9898\u610f\uff0c\u6211\u4eec\u53d1\u73b0\u9996\u5148\u9700\u8981\u5904\u7406 $-1$ \u7684\u60c5\u51b5\uff0c\u624d\u80fd\u66f4\u597d\u5730\u89e3\u51b3\u95ee\u9898\u3002\n\n\u7136\u540e\u4f60\u53d1\u73b0\uff0c\u4f3c\u4e4e\u4e0d\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\u3002\u7b80\u5355\u8bf4\u660e\uff1a\n\n\u5047\u5982\u603b\u53ef\u4ee5\u628a\u767d\u70b9\u67d3\u9ed1\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e00\u4e9b\u70b9\u662f\u591a\u4e2a\u521d\u59cb\u6ca1\u6709\u7684\u9ed1\u70b9\u4e4b\u95f4\u4ea7\u751f\u7684\u3002\u56e0\u4e3a\u521d\u59cb\u9ed1\u70b9\u6709\u9650\u3002\n\n\u4f46\u662f\u82e5\u8fd9\u6837\u7684\u8bdd\uff0c\u53d1\u73b0\u5176\u5b9e\u90a3\u4e9b\u9ed1\u70b9\u4e0a\u4e0b\u5de6\u53f3\u90fd\u6709\u4ece\u524d\u7684\u9ed1\u70b9\uff0c\u6240\u4ee5\u5176\u8d21\u732e\u4ecd\u6765\u81ea\u4e8e\u521d\u59cb\u9ed1\u70b9\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8003\u8651\u521d\u59cb\u9ed1\u70b9\u80fd\u4ea7\u751f\u591a\u5c11\u9ed1\u70b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8651 $x$ \u5750\u6807\u76f8\u7b49\u7684\u70b9\u6784\u6210\u7684\u7ebf\u6bb5\uff0c\u4e8e\u662f\u53ef\u4ee5\u5c06\u70b9\u6309 $x$ \u5750\u6807\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$y$ \u5750\u6807\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u627e\u5230 $x$ \u5750\u6807\u76f8\u540c\u70b9\u4e2d $y$ \u5750\u6807\u76f8\u90bb\u7684\u70b9\uff0c\u5206\u522b\u6253\u4e0a\u5dee\u5206\u52a0\u51cf\u6807\u8bb0\u3002\n\n\u5177\u4f53\u5730\uff0c\u5728 $(x,y1)$ \u6253\u4e0a $+1$ \u6807\u8bb0\uff0c\u5728 $(x,y2)$ \u6253\u4e0a $-1$ \u6807\u8bb0\u3002$(y1 < y2)$\n\n\u518d\u4ee5\u5c06\u70b9\u6309 $y$ \u5750\u6807\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$x$ \u5750\u6807\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u5bf9\u4e8e $y$ \u5750\u6807\u76f8\u540c\uff0c$x$ \u5750\u6807\u76f8\u90bb\u70b9 $(x1,y)$ \u4e0e $(x2,y)$ $(x1 < x2)$\uff0c\u67e5\u8be2\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4 $[x1 + 1,x2 - 1]$ \u4e4b\u548c\u5e76\u8bb0\u5165\u7b54\u6848\u3002\n\n\u5728\u67e5\u8be2\u5176\u4e4b\u524d\u6216\u4e4b\u540e\u6839\u636e\u8be5\u70b9\u6807\u8bb0\u5728\u7ebf\u6bb5\u6811\u4e0a\u4f5c\u5bf9\u5e94\u7684\u5355\u70b9\u52a0\u51cf\u4fee\u6539\u5373\u53ef\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <cstdlib>\n#include <ctime>\n\ntypedef long long ll;\nconst int N = 100001;\nconst int LOGM = 18;\nconst int NODE = N * LOGM;\n\ninline int read() {\n    int x = 0, f = 1; char ch = getchar();\n    while(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n    while(ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();\n    return x * f;\n}\n\nint n;\n\nstruct Point {\n    int x,y,op1,w1,op2,w2;\n    Point() { op1 = op2 = 0; }\n} p[N];\n\nbool cmp1(const Point &x,const Point &y) {\n    if(x.x != y.x) return x.x < y.x;\n    return x.y < y.y;\n}\n\nbool cmp2(const Point &x,const Point &y) {\n    if(x.y != y.y) return x.y < y.y;\n    return x.x < y.x;\n}\n\nint s[NODE],lc[NODE],rc[NODE],rt,cnt;\n\nvoid Update(int &k,int l,int r,int x,int v) {\n    if(!k) k = ++cnt;\n    s[k] += v;\n    if(l == r) return;\n    int m = (l + r) / 2;\n    if(x <= m) Update(lc[k],l,m,x,v);\n    else Update(rc[k],m + 1,r,x,v);\n    return;\n}\n\nint Query(int k,int l,int r,int x,int y) {\n    if(!k) return 0;\n    if(l >= x && r <= y) return s[k];\n    int m = (l + r) / 2;\n    if(y <= m) return Query(lc[k],l,m,x,y);\n    else if(x > m) return Query(rc[k],m + 1,r,x,y);\n    else return Query(lc[k],l,m,x,y) + Query(rc[k],m + 1,r,x,y);\n}\n\nint main() {\n    n = read();\n    for(int i = 1;i <= n;i++) p[i].x = read(), p[i].y = read();\n    std::sort(p + 1,p + 1 + n,cmp1);\n    int m = 0;\n    for(int i = 1;i <= n;i++) {\n        int j = i;\n        while(j < n && p[j + 1].x == p[i].x) j++;\n        m++;\n        for(int k = i;k <= j;k++) p[k].x = m;\n        for(int k = i;k < j;k++) p[k].op1 = 1, p[k + 1].op2 = 1;\n        i = j;\n    }\n    // for(int i = 1;i <= n;i++) std::printf(\"%d %d\\n\",p[i].x,p[i].y);\n    std::sort(p + 1,p + 1 + n,cmp2);\n    ll ans = n;\n    for(int i = 1;i < n;i++) {\n        if(p[i].y == p[i + 1].y) {\n            if(p[i].x + 1 < p[i + 1].x)\n                ans += Query(rt,1,m,p[i].x + 1,p[i + 1].x - 1);\n        }\n        if(p[i].op1) Update(rt,1,m,p[i].x,1);\n        if(p[i].op2) Update(rt,1,m,p[i].x,-1);\n    }\n    std::printf(\"%lld\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1626658926,
        "uid": 219595,
        "name": "Vocalise",
        "ccfLevel": 9,
        "title": "\u4e8c\u7ef4\u504f\u5e8f--P5816 [CQOI2010]\u5185\u90e8\u767d\u70b9"
    },
    {
        "content": "\u626b\u63cf\u7ebf\u677f\u5b50\u9898\u3002\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5816)\n\n\u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\u80fd\u6bd4\u8f83\u597d\u7684\u8fdb\u4e00\u6b65\u7406\u89e3\u3002\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u79bb\u6563\u5316\u3002\n\n\u63a5\u7740\u89c2\u5bdf\u6027\u8d28\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u9664\u4e86\u521d\u59cb\u7684\u9ed1\u70b9\u4ee5\u5916\uff0c\u65b0\u751f\u6210\u7684\u9ed1\u70b9\u662f\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u767d\u70b9\u4ea7\u751f\u5f71\u54cd\u7684\u3002\n\n\u540c\u65f6\uff0c\u662f\u4e0d\u4f1a\u51fa\u73b0\u4e00\u76f4\u53d8\u5316\u7684\u60c5\u51b5\u7684\u3002\n\n\u5bf9\u4e8e\u4e00\u5bf9 $x$ \u5750\u6807\u76f8\u7b49\u4e14\u4e4b\u95f4\u6ca1\u6709\u5176\u4ed6\u9ed1\u70b9\u7684\u70b9\uff0c\u4ed6\u4eec\u7684\u8d21\u732e\u662f $x$ \u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u5728 $y_i+1\\sim y_j-1$ \u4e4b\u95f4\uff0c\u53ea\u8981\u6709\u53e6\u4e00\u5bf9 $y$ \u5750\u6807\u76f8\u7b49\u7684\u70b9\u51fa\u73b0\u5417\uff0c\u90a3\u4e48\u5c31\u4f1a\u65b0\u4ea7\u751f\u4e00\u4e2a\u9ed1\u70b9\u3002\n\n\u8fd9\u5f88\u7c7b\u4f3c\u4e0e\u626b\u63cf\u7ebf\uff0c\u5c06\u77e9\u5f62\u7684\u67d0\u4e00\u6761\u8fb9\u8f6c\u5316\u4e3a\u64cd\u4f5c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u626b\u63cf\u7684\u8fc7\u7a0b\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u7684 $x$ \u5750\u6807\u76f8\u7b49\u7684\u70b9\u5bf9\u770b\u6210\u5355\u70b9\u4fee\u6539\uff0c\u4e00\u6bb5\u65f6\u95f4\u540e\u64e6\u9664\u3002\n\n\u5bf9\u4e8e $y$ \u5750\u6807\u76f8\u540c\u7684\u70b9\u5bf9\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u505a\u5728 $y$ \u8fd9\u4e2a\u65f6\u523b\u533a\u95f4\u8be2\u95ee $x_i\\sim x_j$ \u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u88ab\u6807\u8bb0\u7684\u70b9\u3002\n\n\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u5b58\u50a8\u6bcf\u4e00\u4e2a $x$ \u5750\u6807\u76f8\u7b49\u7684\u70b9\u5bf9\u3002\n\n\u5c06 $y$ \u5750\u6807\u6bd4\u8f83\u5c0f\u7684\u4f5c\u4e3a\u5355\u70b9\u52a0\uff0c\u5927\u7684\u4f5c\u4e3a\u5355\u70b9\u51cf\u3002\n\n\u518d\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u5b58\u50a8\u6bcf\u4e00\u4e2a $y$ \u5750\u6807\u76f8\u7b49\u7684\u70b9\u5bf9\u3002\n\n\u6309\u7167 $y$ \u5750\u6807\u987a\u5e8f\uff0c\u4e00\u4e2a\u4e00\u4e2a\u7684\u52a0\u5165\uff08\u5220\u9664\uff09\u5355\u70b9\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff08 $y$ \u5750\u6807\u76f8\u7b49\u7684\u70b9\u5bf9\uff09\u67e5\u8be2\u91cc\u9762\u6709\u591a\u5c11\u4e2a\u70b9\u3002\n\n\u5c06\u6240\u6709\u7b54\u6848\u6c42\u51fa\uff0c\u6700\u540e\u5728\u52a0\u4e0a $n$ \u5373\u4e3a\u7b54\u6848\u3002\n\n\u6ce8\u610f\uff0c\u70b9\u5bf9\u5fc5\u987b\u4e4b\u95f4\u4ec0\u4e48\u90fd\u6ca1\u6709\uff01\n\n\u5426\u5219\u4f60\u53ef\u80fd\u5f97\u5230 $20$ \u6216\u8005 $40$ pts\u3002\n\n\u7ec6\u8282\u770b\u770b\u4ee3\u7801\u3002\n\n### $\\text {CODE}$\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000006\n#define ls (now<<1)\n#define rs (now<<1|1)\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint n,x[N],y[N],ans;\nstruct node\n{\n\tint x,y;\n}e[N];\nbool cmp(node a,node b)\n{\n\tif(a.x==b.x)return a.y<b.y;\n\treturn a.x<b.x;\n}\nbool bnq(node a,node b)\n{\n\tif(a.y==b.y)return a.x<b.x;\n\treturn a.y<b.y;\n}\nstruct pos\n{\n\tint x,t,val;\n\tbool operator <(pos b)const\n\t{return t>b.t;}\n};\npriority_queue<pos> q;\nint tr[N];\nvoid up(int now){tr[now]=tr[ls]+tr[rs];}\nvoid midy(int now,int l,int r,int x,int val)\n{\n\tif(l==r)\n\t{\n\t\ttr[now]+=val;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=x)midy(ls,l,mid,x,val);\n\telse midy(rs,mid+1,r,x,val);\n\tup(now);\n}\nvoid que(int now,int l,int r,int ql,int qr)\n{\n\tif(ql>qr)return ;\n\tif(l>=ql&&r<=qr)\n\t{\n\t\tans+=tr[now];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=ql)que(ls,l,mid,ql,qr);\n\tif(mid<qr)que(rs,mid+1,r,ql,qr);\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\te[i].x=read();\n\t\te[i].y=read();\n\t\tx[i]=e[i].x;\n\t\ty[i]=e[i].y;\n\t}\n\tsort(x+1,x+1+n);int lenx=unique(x+1,x+1+n)-x-1;\n\tsort(y+1,y+1+n);int leny=unique(y+1,y+1+n)-y-1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\te[i].x=lower_bound(x+1,x+1+lenx,e[i].x)-x;\n\t\te[i].y=lower_bound(y+1,y+1+leny,e[i].y)-y;\n\t}\n\tsort(e+1,e+1+n,cmp);\n\tfor(int i=1,l;i<n;)\n\t{\n\t\tl=i;\n\t\twhile(e[i].x==e[l].x&&l<n)\n\t\t{\n\t\t\tl++;\n\t\t\tif(e[i].x!=e[l].x)continue;\n\t\t\tif(e[l-1].y<e[l].y-1)\n\t\t\t{\n\t\t\t\tq.push(pos{e[l-1].x,e[l-1].y+1,1});\n\t\t\t\tq.push(pos{e[l].x,e[l].y,-1});\n\t\t\t}\n\t\t}\n\t\ti=l;\n\t}\n\tsort(e+1,e+1+n,bnq);\n\tfor(int i=1,l;i<n;)\n\t{\n\t\tl=i;\n\t\twhile(q.size()&&q.top().t<=e[i].y)\n\t\t{\n\t\t\tmidy(1,1,lenx,q.top().x,q.top().val);\n\t\t\tq.pop();\n\t\t}\n\t\twhile(e[i].y==e[l].y&&l<n)\n\t\t{\n\t\t\tl++;\n\t\t\tif(e[i].y!=e[l].y)continue;\n\t\t\tque(1,1,lenx,e[l-1].x+1,e[l].x-1);\n\t\t}\n\t\ti=l;\n\t}\n\tcout<<ans+n<<\"\\n\";\n\treturn 0;\n}\n\n\n```",
        "postTime": 1675991086,
        "uid": 331947,
        "name": "hegm",
        "ccfLevel": 0,
        "title": "P5816 [CQOI2010]\u5185\u90e8\u767d\u70b9 \u9898\u89e3"
    },
    {
        "content": "### Description\n\n\u4e00\u4e2a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u5185\u6709 $n$ \u4e2a\u9ed1\u70b9\uff0c\u5176\u4f59\u70b9\u4e3a\u767d\u70b9\uff0c\u5c06\u4f1a\u8fdb\u884c\u82e5\u5e72\u6b21\u53d8\u6362\uff0c\u6bcf\u6b21\u53d8\u6362\u4f1a\u628a\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u90fd\u6709\u9ed1\u70b9\u7684\u767d\u70b9\u53d8\u6210\u9ed1\u70b9\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u7b26\u5408\u8981\u6c42\u7684\u767d\u70b9\u3002\n\n\u95ee\u6700\u7ec8\u6709\u591a\u5c11\u9ed1\u70b9\u3002\u82e5\u53d8\u6362\u8fc7\u7a0b\u6c38\u4e0d\u505c\u6b62\uff0c\u8f93\u51fa `-1`\u3002\n\n### Solution\n\n\u9996\u5148\u770b\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u6700\u591a\u53ea\u4f1a\u53d8\u6362\u4e00\u6b21\u3002\n\n\u7b80\u8bc1\uff1a\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u70b9 $A$\uff0c\u5b83\u662f\u7ecf\u8fc7\u4e24\u6b21\u53d8\u6362\u5f97\u5230\u7684\uff0c\u90a3\u4e48\u5b83\u7684\u56db\u4e2a\u65b9\u5411\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u662f\u7ecf\u8fc7\u4e00\u6b21\u53d8\u6362\u5f97\u5230\u7684\uff08\u5426\u5219\u70b9 $A$ \u4e5f\u5e94\u5f53\u5728\u7b2c\u4e00\u6b21\u53d8\u6362\u65f6\u88ab\u67d3\u6210\u9ed1\u8272\uff09\u3002\n\n\u8bbe\u8fd9\u4e2a\u70b9\u4e3a $B$\uff0c\u90a3\u4e48\u70b9 $B$ \u5e94\u5f53\u662f\u56db\u4e2a\u539f\u59cb\u7684\u9ed1\u70b9\u67d3\u6210\u9ed1\u8272\u7684\u5e76\u4e14\u662f $A$ \u5411 $B$ \u65b9\u5411\u4e0a\u552f\u4e00\u7684\u9ed1\u70b9\u3002\n\n\u7136\u800c\u8fd9\u610f\u5473\u7740 $A$ \u5411 $B$ \u65b9\u5411\u5c31\u4f1a\u6709\u53e6\u4e00\u4e2a\u539f\u59cb\u9ed1\u70b9\u3002\u77db\u76fe\u3002\uff08\u5982\u4e0b\u56fe\uff0c\u7ea2\u70b9\u5373\u4e3a\u77db\u76fe\u70b9\uff09\n\n![image.png](http://tva1.sinaimg.cn/large/006JmRJEly1h7ugsfxrycj31250o7dhc.jpg)\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\uff1a\u6709\u591a\u5c11\u4e2a\u767d\u70b9\u6ee1\u8db3\u5176\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u90fd\u6709\u9ed1\u70b9\u3002\n\n\u4e0d\u96be\u770b\u51fa\uff0c\u8fd9\u5c31\u662f\u8be2\u95ee\u5c06\u6240\u6709\u6c34\u5e73/\u7ad6\u76f4\u65b9\u5411\u7684\u70b9\u7528\u7ebf\u6bb5\u8fde\u63a5\u8d77\u6765\u4e4b\u540e\uff0c\u6a2a\u7ad6\u65b9\u5411\u7684\u7ebf\u6bb5\u4e4b\u95f4\u80fd\u5f62\u6210\u591a\u5c11\u4e2a\u4ea4\u70b9\uff08\u5728\u7aef\u70b9\u5904\u76f8\u4ea4\u4e0d\u7b97\uff09\u3002\n\n\u8bbe\u4e00\u6761\u6a2a\u7740\u7684\u7ebf\u6bb5\u4ece $(x_1,y_1)$ \u5230 $(x_2,y_1)$\uff0c\u53e6\u4e00\u6761\u7ad6\u7740\u7684\u7ebf\u6bb5\u4ece $(x_3,y_2)$ \u5230 $(x_3,y_3)$\uff0c\u90a3\u4e48\u5b83\u4eec\u80fd\u5f62\u6210\u4ea4\u70b9\u7684\u5145\u8981\u6761\u4ef6\u4e3a $\\begin{cases}x_3 \\in [x_1+1,x_2-1] \\\\ y_1 \\in [y_2+1,y_3-1]\\end{cases}$\u3002\n\n\u4e8e\u662f\u4f7f\u7528\u626b\u63cf\u7ebf\uff1a\u5c06\u6240\u6709\u6a2a\u5411\u7ebf\u6bb5\u6309\u7167 $y$ \u5750\u6807\u6392\u5e8f\u540e\u5c06 $y$ \u8f74\u770b\u4f5c\u65f6\u95f4\u8f74\uff0c\u628a\u7ad6\u7740\u7684\u7ebf\u6bb5\u770b\u4f5c\u5355\u70b9\u4fee\u6539\uff08\u4e0b\u7aef\u70b9 $+1$ \u4e0a\u7aef\u70b9 $-1$\uff09\uff08\u76f8\u5f53\u4e8e\u8868\u793a\u4ece\u4e0b\u7aef\u70b9\u5230\u4e0a\u7aef\u70b9\u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u5728\u8fd9\u6761\u7ebf\u6bb5\u7684 $x$ \u5750\u6807\u5904\u6709\u4e00\u6761\u7ebf\u6bb5\uff09\uff0c\u6b64\u65f6\u6a2a\u7740\u7684\u7ebf\u6bb5\u53ef\u4ee5\u770b\u4f5c\u8be2\u95ee $[l+1,r-1]$ \u4e4b\u95f4\u7684\u548c\uff08$l$ \u4e3a\u533a\u95f4\u5de6\u7aef\u70b9\uff0c$r$ \u4e3a\u533a\u95f4\u53f3\u7aef\u70b9\uff09\uff08\u76f8\u5f53\u4e8e\u8be2\u95ee\u8fd9\u4e2a\u533a\u95f4\u5185\u6709\u591a\u5c11\u6761\u7ad6\u7740\u7684\u7ebf\u6bb5\uff09\uff0c\u5f00\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u4f46\u662f\u8003\u8651\u5230\u5750\u6807\u8303\u56f4 $10^9$\uff0c\u4e8e\u662f\u5148\u79bb\u6563\u5316\u3002\n\n### Code\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nconst int M=1e5+5;\ninline int read(){int x(0),op(0);char ch=getchar();while(ch<'0'||ch>'9')op|=(ch==45),ch=getchar();while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();return op?-x:x;}\nstruct line{\n\tint l,r,h,w;\n\tbool operator < (const line& rhs){\n\t\treturn h<rhs.h;\n\t}\n}L[M*3];//luogu\u7684\u6570\u636e\u597d\u50cf\u7565\u6c34\uff0c\u6211\u5728\u6821\u5185OJ\u4e0a\u4ea4\u7684\u65f6\u5019\u5f002e5\u4f1aRE\uff0c\u5206\u6790\u4e4b\u540e\u5e94\u8be5\u662fL\u6570\u7ec4\u8981\u5f00\u62103e5\u5426\u5219\u5168\u90e8\u662f\u4fee\u6539\u64cd\u4f5c\u4f1a\u70b8\nstruct point{\n\tint x,y;\n}P[M];\nbool cmp1(point a,point b){\n\tif(a.y!=b.y)return a.y<b.y;\n\treturn a.x<b.x;\n}\nbool cmp2(point a,point b){\n\tif(a.x!=b.x)return a.x<b.x;\n\treturn a.y<b.y;\n}\nint n,X[M<<1],Y[M<<1],cnt1,cnt2,ltot,T[M];\nint lowbit(int x){return x&(-x);}\nvoid add(int x,int y){\n\tfor(;x<=cnt1;x+=lowbit(x))T[x]+=y;\n}\nint prefix(int x){\n\tint ans=0;\n\tfor(;x;x-=lowbit(x))ans+=T[x];\n\treturn ans;\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;++i)P[i].x=X[i]=read(),P[i].y=Y[i]=read();\n\t//\u79bb\u6563\u5316\n\tstd::sort(X+1,X+n+1);\n\tstd::sort(Y+1,Y+n+1);\n\tcnt1=std::unique(X+1,X+n+1)-X-1;\n\tcnt2=std::unique(Y+1,Y+n+1)-Y-1;\n\tfor(int i=1;i<=n;++i){\n\t\tP[i].x=std::lower_bound(X+1,X+cnt1+1,P[i].x)-X;\n\t\tP[i].y=std::lower_bound(Y+1,Y+cnt2+1,P[i].y)-Y;\n\t}\n\t//\u5904\u7406\u51fa\u6240\u6709\u6a2a\u5411\u7684\u7ebf\u6bb5\n\t//\u6ce8\u610f\uff1a\u8fd9\u91cc\u53ea\u5904\u7406\u76f8\u90bb\u7684\u70b9\uff0c\u4ee5\u9632\u7b97\u91cd\n\tstd::sort(P+1,P+n+1,cmp1);\n\tfor(int i=1;i<n;++i)if(P[i].y==P[i+1].y)L[++ltot]=(line){P[i].x,P[i+1].x,P[i].y,0};\n\t//\u5904\u7406\u51fa\u6240\u6709\u7eb5\u5411\u7684\u7ebf\u6bb5\n\tstd::sort(P+1,P+n+1,cmp2);\n\tfor(int i=1;i<n;++i)if(P[i].x==P[i+1].x){\n\t\tL[++ltot]=(line){P[i].x,0,P[i].y,1};\n\t\tL[++ltot]=(line){P[i].x,0,P[i+1].y,-1};\n\t}\n\t//\u626b\u63cf\u7ebf\n\tstd::sort(L+1,L+ltot+1); \n\tint ans=0;\n\tfor(int i=1;i<=ltot;++i){\n\t\tif(L[i].w)add(L[i].l,L[i].w);\n\t\telse ans+=prefix(L[i].r-1)-prefix(L[i].l);\n\t}\n\tprintf(\"%d\\n\",ans+n);//\u6ce8\u610f\uff1a\u7b54\u6848\u5305\u62ec\u539f\u6709\u9ed1\u70b9\n\treturn 0;\n}\n```\n\n",
        "postTime": 1667647186,
        "uid": 188716,
        "name": "pokefunc",
        "ccfLevel": 6,
        "title": "P5816"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\n\u5728\u4e00\u4e2a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u5185\u7ed9\u51fa $ n $ \u4e2a\u9ed1\u70b9\uff0c\u5f53\u4e00\u4e2a\u767d\u70b9\u5de6\u548c\u53f3\u65b9\u90fd\u65b9\u6709\u4e00\u4e2a\u9ed1\u70b9\uff0c\u4e14\u4e0a\u548c\u4e0b\u65b9\u90fd\u6709\u4e00\u4e2a\u9ed1\u70b9\u65f6\u4f1a\u53d8\u6210\u767d\u70b9\uff0c\u8bf7\u95ee\u6700\u540e\u6709\u591a\u5c11\u4e2a\u9ed1\u70b9\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u7531\u4e8e\u8fd9\u4e2a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u65e0\u9650\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u5b83\u7684\u8303\u56f4\u7f29\u5c0f\uff0c\u4ed4\u7ec6\u601d\u8003\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u540c\u4e00\u5217\u6216\u8005\u540c\u4e00\u884c\u4e2d\uff0c\u8ddd\u79bb\u6700\u8fdc\u7684\u4e24\u4e2a\u9ed1\u70b9\u4e4b\u95f4\u7684\u767d\u70b9\u624d\u6709\u53ef\u80fd\u53d8\u6210\u9ed1\u70b9\u3002\n\n\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u5f53\u4e00\u5217\u6216\u4e00\u884c\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u9ed1\u70b9\u65f6\uff0c\u8fd9\u4e00\u884c\u4e0d\u7528\u8fdb\u884c\u8ba1\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u7279\u70b9\u5bf9\u9ed1\u70b9\u7684\u5750\u6807\u8fdb\u884c\u79bb\u6563\u5316\u3002\n\n\u518d\u4ed4\u7ec6\u601d\u8003\u80fd\u53d8\u4e3a\u9ed1\u70b9\u7684\u767d\u70b9\u4e0e\u9ed1\u70b9\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u53d1\u73b0\u5b83\u662f\u4e24\u6761\u7531\u9ed1\u70b9\u6784\u6210\u7684\u7ebf\u6bb5\u7684\u4ea4\u70b9\uff0c\u5355\u4ece\u4e00\u6761\u7ebf\u6bb5\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u7ebf\u6bb5\u5185\u7ecf\u8fc7\u7684\u5176\u4ed6\u7ebf\u6bb5\u7684\u4e2a\u6570\u5c31\u662f\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u626b\u63cf\u7ebf\u4ece\u5de6\u5f80\u53f3\u8ba1\u7b97\u8d21\u732e\u3002\n\n\u9996\u5148\u5c06\u9ed1\u70b9\u79bb\u6563\u5316\uff0c\u5904\u7406\u51fa\u6bcf\u4e00\u6761\u5e73\u884c\u4e8e x \u548c y \u8f74\u7684\u7ebf\u6bb5\uff0c\u6700\u540e\u7528\u626b\u63cf\u7ebf\u7edf\u8ba1\u4ea4\u70b9\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<map>\nusing namespace std;\nmap<int,int> tx;\nmap<int,int> ty;\nint tot,n,m;\nstruct segment_tree{\n\tint sum,l,r;\n\t#define s(x) b[x].sum\n\t#define l(x) b[x].l\n\t#define r(x) b[x].r\n}b[1000001];\nstruct Node{\n\tint x,y;\n}bla[1000001];\nbool cmp_y(Node a,Node b){\n\tif(a.y!=b.y)return a.y<b.y;\n\telse return a.x<b.x;\n}\nbool cmp_x(Node a,Node b){\n\treturn a.x<b.x;\n}\nstruct lis{\n\tint opt,x,l,r;\n}l[1000001];\nbool cmp(lis a,lis b){\n\tif(a.x!=b.x) return a.x<b.x;\n\telse if(a.opt && !b.opt) return true;\n\telse return false;\n}\nvoid pre_y(){\n\tsort(bla+1,bla+n+1,cmp_y);\n\tint maxn=0,minn=1000000001;\n\tfor(int i=1;i<=n;i++){\n\t\tif(bla[i].y==bla[i-1].y){\n\t\t\tl[++m].opt=-1;l[m].x=bla[i].x;l[m].l=bla[i].y;\n\t\t\tl[++m].opt=1;l[m].x=bla[i].x+1;l[m].l=bla[i].y;\n\t\t}\n\t\telse{\n\t\t\tl[++m].opt=-1;l[m].x=bla[i-1].x+1;l[m].l=bla[i-1].y;\n\t\t\tl[++m].opt=1;l[m].x=bla[i].x+1;l[m].l=bla[i].y;\n\t\t}\n\t}\n\tl[++m].opt=-1;\n\tl[m].x=bla[n].x+1;\n\tl[m].l=bla[n].y;\n}\nvoid pre_x(){\n\tsort(bla+1,bla+n+1,cmp_x);\n\tint maxn=0,minn=1000000001;\n\tfor(int i=1;i<=n;i++){\n\t\tif(bla[i].x==bla[i-1].x){\n\t\t\tmaxn=max(maxn,bla[i].y);\n\t\t\tminn=min(minn,bla[i].y);\n\t\t}\n\t\telse{\n\t\t\tif(maxn!=minn && minn+1<=maxn-1){\n\t\t\t\tl[++m].opt=0;\n\t\t\t\tl[m].l=minn+1;\n\t\t\t\tl[m].r=maxn-1;\n\t\t\t\tl[m].x=bla[i-1].x;\n\t\t\t}\n\t\t\tmaxn=bla[i].y;minn=bla[i].y;\n\t\t}\n\t}\n\tif(maxn!=minn && minn+1<=maxn-1){\n\t\tl[++m].opt=0;\n\t\tl[m].l=minn+1;\n\t\tl[m].r=maxn-1;\n\t}\n}\nvoid build(int x,int l,int r){\n\tl(x)=l;\n\tr(x)=r;\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tbuild(2*x,l,mid);\n\tbuild(2*x+1,mid+1,r);\n}\nvoid change(int x,int p,int val){\n\tif(l(x)==r(x)){\n\t\ts(x)+=val;\n\t\treturn;\n\t}\n\tint mid=(l(x)+r(x))>>1;\n\tif(p<=mid) change(x*2,p,val);\n\telse change(x*2+1,p,val);\n\ts(x)=s(x*2)+s(x*2+1);\n}\nint query(int x,int l,int r){\n\tif(l(x)>=l && r(x)<=r)return s(x);\n\tint ans=0,mid=(l(x)+r(x))>>1;\n\tif(l<=mid) ans+=query(x*2,l,r);\n\tif(r>mid) ans+=query(x*2+1,l,r);\n\treturn ans;\n}\nvoid pre(){\n\tsort(bla+1,bla+n+1,cmp_x);\n\tint last;\n\tfor(int i=1;i<=n;i++){\n\t\tif(i==1) tx[bla[i].x]=++tot;\n\t\telse if(last!=bla[i].x)tx[bla[i].x]=++tot;\n\t\tlast=bla[i].x;\n\t\tbla[i].x=tx[bla[i].x];\n\t}\n\tint maxn=tot;\n\ttot=0;\n\tsort(bla+1,bla+n+1,cmp_y);\n\tfor(int i=1;i<=n;i++){\n\t\tif(i==1) ty[bla[i].y]=++tot;\n\t\telse if(last!=bla[i].y)ty[bla[i].y]=++tot;\n\t\tlast=bla[i].y;\n\t\tbla[i].y=ty[bla[i].y];\n\t}\n\ttot=max(maxn,tot);\n}\nint main(){\n\tint x,y;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>bla[i].x>>bla[i].y;\n\tpre();\n\tbuild(1,1,tot);\n\tpre_y();\n\tpre_x();\n\tsort(l+1,l+m+1,cmp);\n\tint ans=n;\n\tfor(int i=1;i<=m;i++){\n\t\tif(l[i].opt)change(1,l[i].l,l[i].opt);\n\t\telse ans+=query(1,l[i].l,l[i].r);\n\t}\n\tcout<<ans;\n}\n```\n",
        "postTime": 1666423006,
        "uid": 421265,
        "name": "eastcloud",
        "ccfLevel": 4,
        "title": "P5816 [CQOI2010]\u5185\u90e8\u767d\u70b9 \u9898\u89e3"
    },
    {
        "content": "## P5816 [CQOI2010]\u5185\u90e8\u767d\u70b9 \u9898\u89e3\n\u4e3a\u4e86\u7eaa\u5ff5\u4e00\u6b21 AC\uff0c\u5199\u70b9\u5bf9\u8fd9\u9053\u9898\u7684\u6d45\u8584\u7406\u89e3\u3002\n> [P5816 [CQOI2010]\u5185\u90e8\u767d\u70b9](https://www.luogu.com.cn/problem/P5816)\n>\n> \u5728\u4e00\u4e2a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u5185\uff0c\u5b9a\u4e49\u683c\u70b9\u5206\u4e3a\u9ed1\u767d\u4e24\u79cd\u72b6\u6001\u3002\u521d\u59cb\u65f6\u6709 $n$ \u4e2a\u9ed1\u70b9\uff0c\u5269\u4e0b\u7684\u683c\u70b9\u5747\u4e3a\u767d\u8272\uff0c\u4e4b\u540e\u4e0d\u65ad\u6267\u884c\u4ee5\u4e0b\u8fc7\u7a0b\uff1a\n> - \u5bf9\u4e8e\u4e00\u4e2a\u767d\u8272\u683c\u70b9 $(x,y)$\uff0c\u5982\u679c\u5b58\u5728 $y_1<y,y_2>y,x_1<x,x_2>x$\uff0c\u4f7f\u5f97 $(x_1,y),(x_2,y),(x,y_1),(x,y_2)$ \u5747\u4e3a\u9ed1\u683c\u70b9\uff0c\u5219\u5c06 $(x,y)$ \u53d8\u4e3a\u9ed1\u8272\u3002\n>\n> \u5f53\u65e0\u6cd5\u518d\u6267\u884c\u64cd\u4f5c\u4f7f\u505c\u6b62\u3002\u6c42\u6700\u7ec8\u7684\u5750\u6807\u7cfb\u4e2d\u4f1a\u6709\u51e0\u4e2a\u9ed1\u70b9\uff0c\u6216\u62a5\u544a\u6c38\u8fdc\u4e0d\u4f1a\u505c\u6b62\u3002($1\\le n\\le 10^5,|x|,|y|\\le 10^9$)\n\n\u9996\u5148\u7a0d\u5fae\u601d\u8003\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u6c38\u8fdc\u4e0d\u4f1a\u505c\u6b62\u7684\u60c5\u51b5\u662f\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u3002\u5982\u679c\u4ee4\u6240\u6709\u51fa\u73b0\u7684\u5750\u6807\u7ec4\u6210\u7684\u96c6\u5408\u4e3a $\\mathbb{X}$\uff0c\u5219 $(x,y)(x\\notin\\mathbb{X}\\operatorname{or}y\\notin\\mathbb{X})$ \u4e00\u5b9a\u4e0d\u4f1a\u662f\u9ed1\u70b9\uff0c\u800c\u53c8\u56e0\u4e3a $\\mathbb{X}$ \u662f\u6709\u9650\u96c6\u5408\uff0c\u4e14\u6574\u4e2a\u8fc7\u7a0b\u4e0d\u4f1a\u628a\u9ed1\u70b9\u8fd8\u539f\u4e3a\u767d\u70b9\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u5b9a\u4f1a\u505c\u4e0b\u3002\n\n\u518d\u601d\u8003\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0d\u65ad\u6267\u884c\u4e5f\u662f\u8bc8\u9a97\u3002\u6ce8\u610f\u5230\u7b2c\u4e8c\u8f6e\u7684\u70b9\uff0c\u6ee1\u8db3\u56db\u4e2a\u201c\u5305\u56f4\u201d\u5b83\u7684\u9ed1\u70b9\u4e2d\u6709\u4e00\u4e2a\u662f\u7b2c\u4e00\u8f6e\u65b0\u53d8\u7684\uff0c\u4e0d\u59a8\u8bbe\u662f\u53f3\u8fb9\u7684\u9ed1\u70b9\u3002\u800c\u8fd9\u4e2a\u9ed1\u70b9\u56e0\u4e3a\u5728\u7b2c\u4e00\u8f6e\u53d8\u6210\u4e86\u9ed1\u70b9\uff0c\u6240\u4ee5\u5b83\u53f3\u8fb9\u4e00\u5b9a\u6709\u521d\u59cb\u9ed1\u70b9\uff0c\u8fd9\u6837\u8fd9\u4e2a\u7b2c\u4e8c\u8f6e\u7684\u70b9\u5176\u5b9e\u5728\u7b2c\u4e00\u8f6e\u5c31\u80fd\u53d8\u4e3a\u9ed1\u70b9\uff0c\u65e0\u9700\u7b49\u5230\u7b2c\u4e8c\u8f6e\u3002\u5176\u4ed6\u56db\u4e2a\u65b9\u5411\u60c5\u51b5\u662f\u4e00\u6837\u7684\u3002\n\n\u6240\u4ee5\u95ee\u9898\u53d8\u4e3a\u4e86\uff0c\u6267\u884c\u4e00\u6b21\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u80fd\u5f97\u5230\u591a\u5c11\u9ed1\u70b9\u3002\n\n\u6ce8\u610f\u5230\u65b0\u5f97\u5230\u7684\u9ed1\u70b9\u4e00\u5b9a\u6ee1\u8db3\u4e24\u8fb9\u90fd\u6709\u521d\u59cb\u9ed1\u70b9\uff0c\u6240\u4ee5\u8003\u8651\u5bf9\u4e8e\u6bcf\u884c\u70b9\u5206\u522b\u8003\u8651\uff0c\u6216\u8005\u8bf4\uff0c\u7528\u4e00\u6761\u626b\u63cf\u7ebf\u4ece\u4e0b\u5f80\u4e0a\u626b\u63cf\u3002\uff08\u8fd9\u91cc\u7528\u4e00\u6761\u7ebf\u4ece\u5de6\u5f80\u53f3\u626b\u63cf\u662f\u7c7b\u4f3c\u7684\uff0c\u4e0b\u6587\u91c7\u7528\u4ece\u4e0b\u5f80\u4e0a\uff09\n\n\u5bf9\u4e8e $y=y_0$ \u8fd9\u6761\u7ebf\u626b\u5230\u7684\u6240\u6709\u70b9\uff0c\u8003\u8651\u6709\u54ea\u4e9b\u70b9\u6700\u7ec8\u4f1a\u53d8\u4e3a\u9ed1\u70b9\u3002\u9996\u5148\u521d\u59cb\u9ed1\u70b9\u4e0d\u7528\u8bf4\uff0c\u8fd8\u6709\u5c31\u662f\u5728\u6700\u5de6\u8fb9\u7684\u9ed1\u70b9\u548c\u6700\u53f3\u8fb9\u7684\u4e4b\u95f4\uff0c\u6ee1\u8db3\u4e0b\u65b9\u6709\u9ed1\u70b9\u4e14\u4e0a\u65b9\u4e5f\u6709\u9ed1\u70b9\u7684\u70b9\u3002\u5bf9\u4e8e\u8fd9\u79cd\u70b9\uff0c\u8003\u8651\u9ed1\u70b9\u53ea\u80fd\u662f\u521d\u59cb\u9ed1\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $x_0$ \u503c\uff0c\u8bb0\u5f55 $x=x_0$ \u8fd9\u6761\u76f4\u7ebf\u5728 $y\\ge y_0$ \u7684\u8fd9\u4e00\u90e8\u5206\uff0c\u8fd8\u80fd\u622a\u5230\u591a\u5c11\u9ed1\u70b9\u3002\u4ece $x_0$ \u4f4d\u7f6e\u7b2c\u4e00\u6b21\u51fa\u73b0\u9ed1\u70b9\uff0c\u5230\u6700\u540e\u4e00\u4e2a\u9ed1\u70b9\u88ab\u626b\u63cf\u8fc7\uff0c\u8fd9\u6bb5\u65f6\u95f4\u5185 $x_0$ \u4f4d\u7f6e\u7684\u70b9\u90fd\u80fd\u53d8\u4e3a\u9ed1\u70b9\u3002\n\n\u6574\u4e2a\u8fc7\u7a0b\u9700\u8981\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\uff0c\u56e0\u4e3a\u503c\u57df\u6bd4\u8f83\u5927\u53ea\u80fd\u4e0a\u7ebf\u6bb5\u6811\u3002\u4f46\u771f\u7684\u53ea\u80fd\u4e0a\u7ebf\u6bb5\u6811\u5417\uff1f\u6ce8\u610f\u5230\uff0c\u4e00\u79cd\u5750\u6807\u5982\u679c\u6ca1\u6709\u51fa\u73b0\uff0c\u90a3\u5c31\u6c38\u8fdc\u4e0d\u53ef\u80fd\u6210\u4e3a\u9ed1\u70b9\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u628a\u6a2a\u5750\u6807\u79bb\u6563\u5316\u6389\uff0c\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e0a\u6811\u72b6\u6570\u7ec4\uff0c\u83b7\u5f97\u4e00\u4efd\u5e38\u6570\u6bd4\u8f83\u5c0f\u7684\u4ee3\u7801\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n)$\uff0c\u622a\u6b62\u672c\u6587\u53d1\u5e03\uff0c\u8c37\u4e0a\u8fd8\u662f $\\rm rk1$~~\uff0c\u4f46\u53ef\u5361\u5e38\u7684\u7a7a\u95f4\u8fd8\u662f\u5f88\u5927\u7684~~\u3002\n```cpp\n#include <cstdio>\n#include <algorithm>\nconst int N = 2e5 + 10;\nstruct point{ int x, y; }a[N]; int b[N], vis[N], cnt[N];\nstruct BIT\n{\n\tint c[N], len;\n\tint lowbit(int x) { return x & -x; }\n\tvoid add(int x, int v) { for (int i = x; i <= len; i += lowbit(i)) c[i] += v; }\n\tint query(int x) { int ans = 0; for (int i = x; i; i -= lowbit(i)) ans += c[i]; return ans; }\n}bit;\ninline void read(int& x)\n{\n\tx = 0; char ch; int f = 1;\n\twhile ((ch = getchar()) < '0' || ch > '9') f = (ch == '-' ? -1 : 1);\n\twhile (x = (x << 1) + (x << 3) + (ch ^ 48), (ch = getchar()) >= '0' && ch <= '9') ;\n\tx *= f;\n}\nint main()\n{\n\tint n, tn = 0; read(n);\n\tfor (int i = 1; i <= n; ++i) read(a[i].x), read(a[i].y), b[++tn] = a[i].x; // \u56e0\u4e3a\u5df2\u7ecf\u662f\u5bf9\u6bcf\u4e00\u884c\u5206\u522b\u8003\u8651\u4e86\uff0c\u6240\u4ee5\u7eb5\u5750\u6807\u6ca1\u5fc5\u8981\u79bb\u6563\u5316\n\tstd::sort(b + 1, b + tn + 1); tn = std::unique(b + 1, b + tn + 1) - b - 1;\n\tfor (int i = 1; i <= n; ++i) a[i].x = std::lower_bound(b + 1, b + tn + 1, a[i].x) - b;\n\tstd::sort(a + 1, a + n + 1, [](const point& p1, const point& p2) { return p1.y == p2.y ? p1.x < p2.x : p1.y < p2.y; }); // \u6392\u5e8f\u540e\u4ece\u4e0b\u5f80\u4e0a\u8003\u8651\uff0c\u5bf9\u4e8e\u540c\u4e00\u884c\u7684\u70b9\u6309\u987a\u5e8f\u6392\u5e8f\uff0c\u679a\u4e3e\u7684\u65f6\u5019\u65b9\u4fbf\n\tbit.len = tn; int lst = 1; long long ans = 0;\n\tfor (int i = 1; i <= n; ++i) ++cnt[a[i].x];\n\tfor (int i = 2; i <= n; ++i)\n\t\tif (a[i].y != a[i - 1].y)\n\t\t{\n\t\t\t// \u5bf9\u4e8e\u6bcf\u4e00\u884c\n\t\t\tfor (int j = lst; j < i; ++j) if (!vis[a[j].x]) bit.add(a[j].x, 1), vis[a[j].x] = 1; // \u5982\u679c\u7b2c\u4e00\u6b21\u51fa\u73b0\u5c31\u52a0\u4e0a\u8d21\u732e\n\t\t\tans += (bit.query(a[i - 1].x) - bit.query(a[lst].x - 1)); // \u7edf\u8ba1\u8fd9\u4e00\u884c\u6709\u591a\u5c11\u80fd\u53d8\u6210\u9ed1\u70b9\u7684\n\t\t\tfor (int j = lst; j < i; ++j) if (!(--cnt[a[j].x])) bit.add(a[j].x, -1); // \u5982\u679c\u8fd9\u884c\u626b\u63cf\u8fc7\u5c31\u6ca1\u6709\u4e86\uff0c\u5c31\u5220\u53bb\u8d21\u732e\n\t\t\tlst = i; \n\t\t}\n\tfor (int i = lst; i <= n; ++i) if (!vis[a[i].x]) bit.add(a[i].x, 1), vis[a[i].x] = 1;\n\tans += bit.query(a[n].x) - bit.query(a[lst].x - 1); // \u7edf\u8ba1\u626b\u4e0d\u5230\u7684\u6700\u540e\u4e00\u884c\n\tprintf(\"%lld\\n\", ans); return 0;\n}\n```",
        "postTime": 1651202093,
        "uid": 137603,
        "name": "zhiyangfan",
        "ccfLevel": 9,
        "title": "P5816 [CQOI2010]\u5185\u90e8\u767d\u70b9 \u9898\u89e3"
    },
    {
        "content": "#### \u9898\u610f\n\n\u6709\u4e00\u5f20\u7531\u9ed1\u767d\u70b9\u6784\u6210\u7684\u7f51\u683c\u56fe\uff0c\u7ed9\u51fa\u4e00\u4e9b\u9ed1\u70b9\u7684\u5750\u6807\uff0c\u6c42\u4e0a\u4e0b\u5de6\u53f3\u90fd\u6709\u9ed1\u70b9\uff08**\u4e0d\u5fc5\u76f8\u90bb**\uff09\u7684\u767d\u70b9\u6570\u76ee\u4e0e\u539f\u6765\u9ed1\u70b9\u6570\u76ee\u4e4b\u548c\u3002\n\n#### \u4e00\u4e2a\u8bf4\u660e\n\n\u4e3a\u4ec0\u4e48\u539f\u9898\u9762\u4e2d\u6c38\u4e0d\u7ec8\u6b62\u7684\u60c5\u51b5\u662f\u4e0d\u53ef\u80fd\u7684\uff1f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5c06\u4f1a\u88ab\u67d3\u6210\u9ed1\u8272\u7684\u767d\u70b9\uff0c\u5b83\u7684\u4e0a\u65b9\uff0c\u4e0b\u65b9\uff0c\u5de6\u8fb9\uff0c\u53f3\u8fb9\uff08\u4e0d\u5fc5\u76f8\u90bb\uff09\u4e00\u5b9a\u662f\u90fd\u662f\u6709\u9ed1\u70b9\u7684\uff0c\u800c\u4e00\u4e2a\u65e2\u4e0d\u5728\u6240\u5c5e\u5217\u7684\u4e24\u7aef\uff0c\u53c8\u4e0d\u5728\u6240\u5c5e\u884c\u7684\u4e24\u7aef\u7684\u9ed1\u70b9\uff08\u5373\u5b83\u7684\u4e0a\u4e0b\u5de6\u53f3\uff08\u4e0d\u5fc5\u76f8\u90bb\uff09\u90fd\u6709\u9ed1\u70b9\uff09\uff0c\u662f\u4e0d\u4f1a\u5bf9\u7b54\u6848\u6709\u4efb\u4f55\u8d21\u732e\u7684\u3002\u6362\u8a00\u4e4b\uff0c**\u4efb\u4f55\u88ab\u67d3\u6210\u9ed1\u70b9\u7684\u767d\u70b9\uff0c\u90fd\u4e0d\u4f1a\u518d\u67d3\u522b\u7684\u767d\u70b9**\uff0c\u6240\u4ee5\u6574\u4e2a\u67d3\u8272\u53ea\u4f1a\u8fdb\u884c\u4e00\u8f6e\u3002\n\n#### \u7b97\u6cd5\n\n\u4e00\u4e2a\u4e0d\u50cf\u626b\u63cf\u7ebf\u7684\u626b\u63cf\u7ebf\n\n\u4e0d\u4f1a\u626b\u63cf\u7ebf\u7684[\u6233\u6211](https://ncc79601.blog.luogu.org/scan-line)\n\n#### \u601d\u8def\n\n\u53ea\u6709\u5904\u4e8e\u540c\u4e00\u884c\u7684\u4e24\u9ed1\u70b9\u4e4b\u95f4\u7684\u90e8\u5206\u624d\u80fd\u67d3\u8272\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u5904\u7406\u76f8\u90bb\u4e24\u9ed1\u70b9\u3002\n\n\u5148\u5c06\u9ed1\u70b9\u4ee5$y$\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$x$\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c\u5904\u7406\u51fa\u6700\u9ad8\u70b9\u4e0e\u6700\u4f4e\u70b9\uff0c\u5f53\u5904\u7406\u5230\u6700\u9ad8\u70b9\u65f6\u5728\u7ebf\u6bb5\u6811\u4e0a\u5c06\u8be5\u5217$+1$\uff0c \u6700\u4f4e\u70b9\u65f6\u6700\u7ebf\u6bb5\u6811\u4e0a\u5c06\u8be5\u5217$-1$\u3002\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u540c\u884c\u76f8\u90bb\u7684\u70b9\uff0c\u533a\u95f4\u6c42\u548c\u5373\u53ef\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n\nconst int maxn = 5e5 + 10;\nint b[maxn],n,ans;\nstruct Mar{\n    int x,y;\n}m[maxn];\nstruct Line{\n    int high,low;\n    Line(){high = 0, low = 0x3f3f3f3f;}\n}ll[maxn];\n\nstruct Seg_Tree{\n    #define lc(x) x << 1\n    #define rc(x) x << 1 | 1\n    int c[maxn << 2],tag[maxn << 2];\n    \n    void f(int l, int r, int p, int x){\n        c[p] += (r - l + 1) * x;\n        tag[p] = x;\n    }\n    \n    void downdate(int l, int r, int p){\n        if(tag[p]){\n            int mid = (l + r) >> 1;\n            f(l, mid, lc(p), tag[p]);\n            f(mid + 1, r, rc(p), tag[p]);\n            tag[p] = 0;\n        }\n    }\n    \n    void add(int L, int R, int l, int r, int p, int x){\n        if(L <= l && R >= r){\n            f(l, r, p, x);\n            return;\n        }\n        downdate(l, r, p);\n        int mid = (l + r) >> 1;\n        if(mid >= L) add(L, R, l, mid, lc(p), x);\n        if(mid < R) add(L, R, mid + 1, r, rc(p), x);\n        c[p] = c[lc(p)] + c[rc(p)];\n    }\n    \n    int query(int L, int R, int l, int r, int p){\n        if(L <= l && R >= r){\n            return c[p];\n        }\n        downdate(l, r, p);\n        int mid = (l + r) >> 1, sum = 0;\n        if(mid >= L) sum += query(L, R, l, mid, lc(p));\n        if(mid < R) sum += query(L, R, mid + 1, r, rc(p));\n        return sum;\n    }\n}tree;\n\nbool cmp(Mar x, Mar y){return x.y == y.y ? x.x < y.x : x.y > y.y;}\n\nint main(){\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; ++ i){\n        scanf(\"%d %d\",  &m[i].x, &m[i].y);\n        b[i] = m[i].x; b[i + n] = m[i].y;\n    } sort(b + 1, b + 1 + 2 * n);\n\n    int _n = unique(b + 1, b + 1 + 2 * n) - b - 1;\n    for(int i = 1; i <= n; ++ i){\n        int pos1 = lower_bound(b + 1, b + 1 + _n, m[i].x) - b;\n        int pos2 = lower_bound(b + 1, b + 1 + _n, m[i].y) - b;\n        m[i].x = pos1, m[i].y = pos2;\n        //printf(\"%d %d\\n\", pos1, pos2);\n        ll[m[i].x].high = max(ll[m[i].x].high, m[i].y);\n        ll[m[i].x].low = min(ll[m[i].x].low, m[i].y);\n    } sort(m + 1, m + 1 + n, cmp);\n    \n    m[n + 1].y = 0x3f3f3f3f;\n    for(int i = 1; i <= n; ++ i){\n        if(m[i].y == ll[m[i].x].high) tree.add(m[i].x, m[i].x, 1, _n, 1, 1);\n        if(m[i].y == ll[m[i].x].low) tree.add(m[i].x, m[i].x, 1, _n, 1, -1);\n        if(m[i + 1].y == m[i].y) ans += tree.query(m[i].x + 1, m[i + 1].x - 1, 1, _n, 1);\n    } printf(\"%d\\n\", ans + n);\n    return 0;\n}\n```\n\n",
        "postTime": 1603685569,
        "uid": 120351,
        "name": "When",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5816 \u3010[CQOI2010]\u5185\u90e8\u767d\u70b9\u3011"
    },
    {
        "content": "~~\u6211\u89c9\u5f97\u9898\u89e3\u533a\u7684\u9898\u89e3\u4e00\u70b9\u4e5f\u4e0d\u76f4\u89c2\uff0c\u5bf9\u6211\u8fd9\u79cd\u5c0f\u83dc\u9e1f\u5341\u5206\u4e0d\u53cb\u597d\u3002~~\n\n\u9996\u5148\uff0c\u8981\u660e\u786e\u4e0d\u53ef\u80fd\u8f93\u51fa`-1`\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe i \u70b9\u5728\u7b2c\u4e00\u79d2\u53d8\u6210\u9ed1\u70b9\uff0c\u5219\u8bf4\u660e i \u70b9\u7684\u4e0a\u4e0b\u5de6\u53f3\u5fc5\u5b9a\u90fd\u4f1a\u6709\u4e00\u4e2a\u9ed1\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0b\u4e00\u79d2\u4e00\u5b9a\u4e0d\u4f1a\u6709\u767d\u70b9\u7531\u4e8e i \u53d8\u6210\u4e86\u9ed1\u70b9\u800c\u53d8\u6210\u9ed1\u70b9\uff0c\u56e0\u4e3a i \u53d8\u6210\u9ed1\u70b9\u5bf9\u8fd9\u4e2a\u7cfb\u7edf\u6ca1\u6709\u505a\u51fa\u4efb\u4f55\u8d21\u732e\u3002\n\n\u7efc\u4e0a\uff0c\u4e00\u5207\u7684\u53d8\u5316\u53ea\u53d1\u751f\u57281s\u4e4b\u95f4\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u9898\u600e\u4e48\u505a\u3002\n\n\u8fd9\u4e2a\u9898\u7684\u76ee\u7684\u662f\u6c42\u51fa\u7531\u767d\u70b9\u53d8\u6210\u9ed1\u70b9\u7684\u70b9\u7684\u6570\u76ee\u4e0e\u539f\u5148\u9ed1\u70b9\u603b\u6570\u7684\u548c\u3002\n\n\u96be\u70b9\u662f\u600e\u4e48\u6c42\u51fa\u7531\u767d\u70b9\u53d8\u6210\u9ed1\u70b9\u7684\u70b9\u7684\u6570\u76ee\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8qxwyuic.png)\n\n\u770b\u56fe\uff0cL,K\u4e24\u4e2a\u4ea4\u70b9\u5373\u4e24\u4e2a\u7531\u767d\u70b9\u53d8\u6210\u9ed1\u70b9\u7684\u70b9\u3002\n\n\u6211\u4eec\u7528\u4e00\u6761\u6a2a\u7ebf\uff0c\u4ece\u4e0b\u5f80\u4e0a\u8fdb\u884c\u626b\u63cf\uff08\u8fd9\u4e1c\u897f\u5e94\u8be5\u662f\u53eb\u626b\u63cf\u7ebf\uff09\uff0c\u7ed3\u5408\u4e0a\u56fe\uff0c\u5148\u626b\u5230H\u70b9\uff0c\u518d\u5f80\u4e0a\u626b\uff0c\u4fbf\u626b\u5230AB\u8fd9\u6761\u7ebf\u6bb5\uff0c\u8fd9\u65f6\u540c\u6837\u80fd\u626b\u5230\u4e00\u4e2a\u4ea4\u70b9L\u3002\n\n\u90a3\u4e48\uff0c\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u7edf\u8ba1\u8fd9\u4e2a\u70b9L\u5462\uff1f\n\n\u901a\u8fc7\u89c2\u5bdf\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u626b\u5230\u7ebf\u6bb5AB\u4e4b\u524d\uff0c\u626b\u5230\u4e86\u4e00\u4e2a\u70b9H\uff0c\u800c\u8fd9\u4e2a\u70b9H\u6b63\u662f/\u4e0e\u7ebf\u6bb5AB\u76f8\u4ea4\u4e8e\u70b9L\u7684\u7ebf\u6bb5GH/\u7684\u4e0b\u7aef\u70b9\u3002~~\uff08\u65ad\u4e86\u4e2a\u53e5\uff09~~\n\n\u60f3\u4e00\u60f3\uff0c\u6211\u4eec\u662f\u5426\u80fd\u4ece\u70b9H\u4e0a\u505a\u6587\u7ae0\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u7ad6\u7ebf\u6620\u5c04\u5230\u4e00\u4e2a\u5e8f\u5217\u4e2d\uff0c\u8fd9\u4e2a\u5e8f\u5217\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\u7b49\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u7ef4\u62a4\uff0c\u5f53\u626b\u63cf\u7ebf\u626b\u5230\u4e0b\u7aef\u70b9$(x,y)$\u65f6\uff0c\u5bf9\u5e94\u7684\uff0c\u5e8f\u5217\u4e2d\u7684$x$\u4f4d$+1$\u3002\n\n\u90a3\u4e48\u505a\u5b8c\u540e\u7ebf\u6bb5AB\u7684\u4ea4\u70b9\u4e2a\u6570\u4fbf\u662fA\u548cB\u4e24\u70b9\u95f4\u6a2a\u5750\u6807\u6240\u5bf9\u5e94\u7684\u5e8f\u5217\u4e2d\u7684\u533a\u95f4\u548c\uff08\u4e5f\u5c31\u662f$1$\uff09\u3002\n\n\u5bf9\u5e94\u7684\uff0c\u626b\u5230G\u70b9\u65f6\uff0c\u5bf9\u5e94\u7684\u6a2a\u5750\u6807$-1$\uff0c\u8868\u793a\u8be5\u7ad6\u7ebf\u7684\u7ed3\u675f\u3002\n\n\u6ce8\u610f\u51e0\u70b9\uff0c\n\n1. \u8981\u6ce8\u610f\u5904\u7406\u7684\u987a\u5e8f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/k31ebpkl.png)\n\n\u5982\u56fe\n\nA\u70b9\u662f\u7ebf\u6bb5AD\u7684\u4e0b\u7aef\u70b9\uff0c\u800cA\u53c8\u5728BC\u4e0a\uff0c\u5148\u5904\u7406BC\u4e24\u70b9\u6a2a\u5750\u6807\u5bf9\u5e94\u5e8f\u5217\u7684\u533a\u95f4\u548c\uff0c\u518d\u53bb\u5904\u7406A\u70b9\uff0c\u56e0\u4e3aA\u70b9\u4e0d\u80fd\u7b97\u505a\u662f\u4e00\u4e2a\u201c\u767d\u53d8\u9ed1\u201d\u70b9\u3002\n\n2. \u9700\u8981\u8fdb\u884c\u5bf9\u6a2a\u5750\u6807x\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u7f51\u683c\u662f\u65e0\u9650\u5927\u7684\u3002\n\n\u4ee3\u7801\u5982\u4e0b:\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n\nconst int maxn=1e5+10;\n\nstruct pot{\n\tint x,y;\n}p[maxn];\n\nstruct line{\n\tint opt,x,y,h;\n\t/* \n\topt: 1\u662f\u4e0b\u7aef\u70b9\uff0c-1\u662f\u4e0a\u7aef\u70b9\uff0c0\u662f\u7ad6\u7ebf\n\tx: \u5de6\u7aef\u70b9\n\ty\uff1a\u53f3\u7aef\u70b9\n\th\uff1a\u7eb5\u5750\u6807 \n\t*/ \n}l[maxn<<2];\n\nint n,b[maxn],cnt,tree[maxn];\n\nint read(){\n\tchar ch=getchar();int x=0,f=1;\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch<='9'&&ch>='0'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\nbool cmpx(pot a,pot b){\n\tif(a.x==b.x) return a.y<b.y;\n\treturn a.x<b.x;\n}\n\nbool cmpy(pot a,pot b){\n\tif(a.y==b.y) return a.x<b.x;\n\treturn a.y<b.y;\n}\n\nbool cmpl(line a,line b){\n\tif(a.h==b.h) return a.opt<b.opt;\n\treturn a.h<b.h;\n}\n\nvoid build(){\n\tstd::sort(p+1,p+1+n,cmpx);\n\tfor(register int i=1;i<n;i++){\n\t\tif(p[i].x==p[i+1].x){\n\t\t\tl[++cnt]=(line){1,p[i].x,0,p[i].y};//\u4e0b\u7aef\u70b9 \n\t\t\tl[++cnt]=(line){-1,p[i+1].x,0,p[i+1].y};//\u4e0a\u7aef\u70b9 \n\t\t}\n\t}\n\tstd::sort(p+1,p+1+n,cmpy);\n\tfor(register int i=1;i<n;i++){\n\t\tif(p[i].y==p[i+1].y){\n\t\t\tl[++cnt]=(line){0,p[i].x,p[i+1].x,p[i].y};//\u7ad6\u7ebf \n\t\t}\n\t}\n}\n\ninline int lowbi(int x){\n\treturn x& -x;\n} \n\ninline void update(int x,int num){\n\twhile(x<=n){\n\t\ttree[x]+=num;\n\t\tx+=lowbi(x);\n\t}\n\treturn ;\n}\n\ninline int query(int x){\n\tint sum=0;\n\twhile(x){\n\t\tsum+=tree[x];\n\t\tx-=lowbi(x);\n\t}\n\treturn sum;\n}\n\nint main(){\n\tn=read();\n\tfor(register int i=1;i<=n;i++){\n\t\tb[i]=p[i].x=read(),p[i].y=read();\n\t}\n\t\n\t//\u79bb\u6563\u5316 \n\tstd::sort(b+1,b+1+n);\n\tint tot=std::unique(b+1,b+1+n)-b-1;\n\tfor(register int i=1;i<=n;i++)\n\t\tp[i].x=std::lower_bound(b+1,b+1+tot,p[i].x)-b;\n\t\n\tbuild();//\u9884\u5904\u7406 \n\t\n\tstd::sort(l+1,l+1+cnt,cmpl);\n\tint ans=0;\n\tfor(register int i=1;i<=cnt;i++){\n\t\tif(!l[i].opt) ans+=query(l[i].y-1)-query(l[i].x);\n\t\telse update(l[i].x,l[i].opt);\n\t}\n\tstd::cout<<ans+n;\n\treturn 0;\n}\n```",
        "postTime": 1596453174,
        "uid": 70178,
        "name": "noall",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5816 \u3010[CQOI2010]\u5185\u90e8\u767d\u70b9\u3011"
    }
]