[
    {
        "content": "\u6ca1\u6709\u4eba\u7528STL\u7684string\u5417\uff1f\uff1f\uff1f\u6765\u4e00\u53d1\u3002\u3002\u3002\n\n\u6240\u7528\u51fd\u6570\uff08string s,a;\uff09\uff1a\n\n1. s.substr(x,len)   \u5728s\u4e2d\u53d6\u51fa\u4ecex\u4f4d\u7f6e\u5f00\u59cb\uff0c\u957f\u5ea6\u4e3alen\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56destring\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\u3002\n\n2. s.find(a)   \u5728s\u4e2d\u67e5\u627e\u5b57\u7b26\u4e32a,\u5e76\u8fd4\u56de\u8d77\u59cb\u4e0b\u6807\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de1844674407370955161\uff0c\u5373\uff081999999999999999\uff0916.\n\n3. s.length()   \u6c42s\u7684\u957f\u5ea6\uff08\u4ece0\u5f00\u59cb\uff09\u3002\n\n4. s[1]   \u5b57\u7b26\u4e32s\u7684\u7b2c2\u4e2a\u5b57\u7b26\uff0c\u76f8\u5f53\u4e8e\u6570\u7ec4\uff08\u540e\u6765\u56e0\u4e3a\u6709\u4e86substr\uff0c\u5c31\u4e0d\u7528\u4e86\uff09\u3002\n\n\u7136\u540e\u662fDP\uff1adp[i][j]\u8868\u793a\u5230\u4e86\u7b2ci\u4e2a\u4f4d\u7f6e\uff0c\u5206\u4e86j\u5757\uff0c\u80fd\u5f97\u5230\u7684\u6700\u591a\u7684\u5355\u8bcd\u6570\u3002\n\n\u8f6c\u79fb\uff1a\u679a\u4e3e\u65ad\u70b9l\uff0c\u5219 dp[i][j]=max{ dp[i][j] , dp[l][j-1]+sum[l+1][i] };\n\nsum[i][j] \u662f\u9884\u5904\u7406\u7684\u8868\u793a\u4ecei\u5230j\u7684\u5355\u8bcd\u6570\u3002\n\n\u5269\u4e0b\u7684\u90fd\u662f\u7ec6\u8282\u5904\u7406\uff0c\u770b\u4ee3\u7801\u5427\u3002\u3002\u3002\n\n\u9644\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<string>\nusing namespace std;\nint p,n,m,k,dp[210][50],sum[210][210];\nstring s,a[10];\ninline int read(){//\u8bfb\u4f18\u3002\u3002\u3002\n\tint date=0,w=1;char c=0;\n\twhile(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){date=date*10+c-'0';c=getchar();}\n\treturn date*w;\n}\nbool check(int l,int r){//\u5224\u65ad\u662f\u5426\u6709\u5355\u8bcd\u4ee5s[l]\u4e3a\u5f00\u5934\n    string x=s.substr(l,r-l+1);//\u53d6\u51fa\u5b57\u7b26\u4e32\n    for(int i=1;i<=n;i++)if(x.find(a[i])==0)return true;//\u67e5\u627e\n    return false;\n}\nvoid init(){//\u9884\u5904\u7406+\u8bfb\u5165\n    string ch;\n    s+='0';//\u8ba9\u4e0b\u6807\u4ece1\u5f00\u59cb\n    p=read();k=read();\n    for(int i=1;i<=p;i++){\n        cin>>ch;\n        s+=ch;//string\u9664\u4e86\u8bfb\u5165\u6162\uff0c\u5176\u4ed6\u5565\u90fd\u597d\u3002\u3002\u3002\n    }\n    n=read();m=s.length()-1;//\u8bb0\u5f97\u51cf1\u3002\u3002\u3002\n    for(int i=1;i<=n;i++)cin>>a[i];\n    for(int i=m;i>=1;i--)\n    for(int j=i;j>=1;j--){//\u9884\u5904\u7406\u51fasum[i][j]\n        sum[j][i]=sum[j+1][i];\n        if(check(j,i))sum[j][i]++;\n    }\n}\nvoid work(){//\u5f00\u59cbdp\n    dp[0][0]=0;\n    for(int i=1;i<=k;i++)dp[i][i]=dp[i-1][i-1]+sum[i][i];\n    for(int i=1;i<=m;i++)dp[i][1]=sum[1][i];//\u521d\u59cb\u5316\n    for(int i=1;i<=m;i++)\n    for(int j=1;j<=k&&j<i;j++)\n    for(int l=j;l<i;l++)\n    dp[i][j]=max(dp[i][j],dp[l][j-1]+sum[l+1][i]);//\u8f6c\u79fb\n    printf(\"%d\\n\",dp[m][k]);//\u8f93\u51fa\n}\nint main(){//\u4e3b\u51fd\u65703\u884c\u3002\u3002\u3002\n    init();\n    work();\n    return 0;\n}\n\n```",
        "postTime": 1520046016,
        "uid": 49998,
        "name": "\u65af\u5fb7\u54e5\u5c14\u6469",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u505a\u4e86\u597d\u4e45......\u4e24\u4e2a\u52a8\u6001\u89c4\u5212\uff0c\u6211\u8c08\u8c08\u6211\u7528C\u8bed\u8a00\u7684\u505a\u6cd5\u3002\n\n\u2460\u6bcf\u8bfb\u53d6\u4e00\u884c\u53ef\u4ee5\u7528strcat\u628a\u5b57\u7b26\u4e32\u8fde\u5728\u4e00\u8d77\n\n\u2461\u4ece\u5b57\u7b26\u4e32A\u4e2d\u641c\u7d22\u5355\u8bcdword\u53ef\u4ee5\u7528char \\*p=strstr(A,word);\n\n\u8fd4\u56deNULL\u5219\u627e\u4e0d\u5230\uff0c\u987a\u5e26\u53ef\u4ee5\u7528p-A==0\u6765\u5224\u65ad\u5355\u8bcd\u662f\u5426\u4eceA[0]\u5f00\u59cb\u5339\u914d\u3002\n\n\u2462\u5148\u9884\u5904\u7406\u51faw[i][j]\uff0c\u8868\u793a\u4ecei\u5230j\u7684\u5355\u8bcd\u6570\u3002\u53ef\u4ee5\u5012\u7740\u63a8\uff0cw[i][j]=w[i+1][j];\uff08\u5982\u679c\u5b58\u5728\u4eceA[i]\u5b57\u6bcd\u5f00\u59cb\u7684\u5355\u8bcd\uff0c\u5219w[i][j]=w[i+1][j]+1.\u51fa\u73b0\u540c\u4e00\u5b57\u6bcd\u5f00\u5934\u7684\u591a\u4e2a\u5355\u8bcd\u4e5f\u8fd8\u662f\u52a01\u5c31\u591f\u4e86.\uff09\n\n\u2463F[i][j]\u8868\u793a\u524di\u4e2a\u5b57\u6bcd\u5206\u6210j\u6bb5\u5f97\u5230\u7684\u6700\u5927\u5355\u8bcd\u6570\uff0c\u7b54\u6848\u662fF[len][k]\uff0c\u53ef\u4ee5\u521d\u59cb\u5316\u4e00\u4e0bF[i][i]\u548cF[i][1].  \u65b9\u7a0bF(i\uff0cj)=max{ F(r\uff0cj-1)+w(r+1\uff0ci)   (r=j...i-1) }. \u610f\u601d\u5c31\u662f\u628a1..r\u7684\u5b57\u6bcd\u5148\u5206\u6210j-1\u6bb5\uff0c\u5269\u4e0b\u7684r+1..i\u7684\u5b57\u6bcd\u5206\u6210\u53e6\u4e00\u6bb5\u3002\n\n```cpp\n#include<stdio.h>\n#include<string.h>\nint p,k,s,len,w[205][205],F[205][45];\nchar A[205],temp[25],word[10][205];\nvoid Input(void)\n{\n    int i;\n    scanf(\"%d%d\",&p,&k); len=20*p;\n    while(getchar()!='\\n');\n    while(p--)\n    {\n        gets(temp);\n        strcat(&A[1],temp);\n    }\n    scanf(\"%d\",&s);\n    while(getchar()!='\\n');\n    for(i=1;i<=s;i++) gets(word[i]);\n}\nint have(int x,int end)//\u662f\u5426\u5b58\u5728\u4ee5\u5b57\u7b26A[x]\u5f00\u5934\u7684\u5355\u8bcd \n{\n    int i; \n    for(i=1;i<=s;i++)\n    {\n        char *p=strstr(&A[x],word[i]);\n        if(p!=NULL && p-&A[x]==0 \n            && strlen(word[i])<=end-x+1) return 1;\n    }\n    return 0;\n}\nvoid Init(void)\n{\n    int i,j;\n    for(j=len;j>=1;j--) \n        for(i=j;i>=1;i--)\n            if(have(i,j)) w[i][j]=w[i+1][j]+1;\n            else w[i][j]=w[i+1][j];\n}\nvoid DP(void)\n{\n    int i,j,r;\n    for(i=1;i<=k;i++)   F[i][i]=F[i-1][i-1]+w[i][i];\n    for(i=1;i<=len;i++) F[i][1]=w[1][i];\n    for(i=1;i<=len;i++)\n        for(j=2;j<=k&&j<i;j++)\n            for(r=j;r<i;r++)\n                if(F[i][j]<F[r][j-1]+w[r+1][i])\n                    F[i][j]=F[r][j-1]+w[r+1][i];\n}\nint main(void)\n{\n    Input();\n    Init();\n    DP();\n    printf(\"%d\",F[len][k]);\n    return 0;\n}\n```",
        "postTime": 1445863570,
        "uid": 4693,
        "name": "CoolTeam",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "- \u4e3a\u4ec0\u4e48\u8981\u7528\u54c8\u5e0c\u5462\uff1f\u5b83\u53ef\u4ee5\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u51fa\u73b0(\u4e3b\u8981\u662f\u5bb3\u6015TLE).\n\n\u8fd9\u91cc\u7528\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\u662f\u628astr\u5f53\u4f5c\u4e00\u4e2abase\u8fdb\u5236\u6570\u5904\u7406\uff0c\u56e0\u4e3a\u5b57\u6bcd\u670926\u4e2a\uff08\u5e9f\u8bdd\uff09\uff0c\u6240\u4ee5\u8fd9\u91cc\u9009\u752829\u8fd9\u4e2a\u7a0d\u5927\u4e00\u4e9b\u7684\u8d28\u6570\u4f5c\u4e3a\u57fa\u6570\uff0c\u987a\u4fbf\u53d6\u4e2a\u819c```100003```\uff08\u800c\u4e0d\u662f```100007```\u6216```100009```\u4ec0\u4e48\u7684\uff09\n- \u81f3\u4e8edp\u5c31\u5f88\u7b80\u5355\u4e86\uff08\u5199\u7ed9\u50cf\u6211\u4e00\u6837\u770b\u4e0d\u61c2\u9898\u89e3\u7684\u849f\u84bb\u4eec\uff09\uff0c\u8bbef[i][k]\u4e3a\u524di\u4e2a\u5b57\u7b26\u5206\u6210\u4e86k\u65ad\u7684\u6700\u4f18\u89e3\uff0c\u663e\u7136\u72b6\u6001\u53ef\u4ee5\u8fd9\u6837\u8f6c\u79fb:```f[i][k]=max{f[j][k-1]+s[j+1][i],k-1<=j<i}.s[l][r]```\u8868\u793a\u4ece```l->r```\u6709\u591a\u5c11\u4e2a\u5355\u8bcd\uff08\u53ef\u4ee5\u66b4\u529b\u9884\u5904\u7406\uff09\uff0c\u82e5\u8fc7\u4e00\u6bb5\u5206\u6210\u4e86k\u5c0f\u6bb5\uff0c\u90a3\u4e48\u8fd9\u4e00\u6bb5\u81f3\u5c11\u6709k\u4e2a\u5b57\u7b26\uff08\u5e9f\u8bdd\uff09\uff0c\u8fd9\u5c31\u662fj\u8981\u5927\u4e8e\u7b49\u4e8ek-1\u7684\u539f\u56e0.\n- \u597d\u4e86\uff0c\u770b\u4ee3\u7801\uff1a\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int mod=100003;\nint n,m,p,K,f[210][210],s[210][210];;\nbool vis[mod],v[210];\nchar a[210],d[10][210];\n\nint hash(char \\*str) {\n    int k=0,ln=strlen(str+1);\n    for(int i=1; i<=ln; i++) {\n        k=k\\*29+str[i];\n        if(k>=mod) k%=mod;\n    }\n    return  k;\n}\n\nint main() {\n    scanf(\"%d%d\",&p,&K);\n    for(int i=1,c=1; i<=p; i++) {\n        scanf(\"%s\",&a[c]);\n        c+=20;\n    }\n    n=p\\*20;\n    scanf(\"%d\",&m);\n    for(int i=1,h; i<=m; i++) {\n        scanf(\"%s\",&d[i][1]);\n        h=hash(d[i]);\n        if(vis[h]) i--,m--;\n        else vis[h]=1;\n    }\n    for(int i=1; i<=n; i++) {\n        for(int j=1; j<=n; j++) {\n            memset(v,0,sizeof v);\n            for(int k=1; k<=m; k++) {\n                int ln=strlen(d[k]+1);\n                for(int l=i; l+ln-1<=j; l++) {\n                    if(v[l]) continue;\n                    bool flag=0;\n                    for(int r=1; r<=ln; r++) {\n                        if(a[l+r-1]!=d[k][r]) {\n                            flag=1;\n                            break;\n                        }\n                    }\n                    if(!flag) s[i][j]++,v[l]=1;\n                }\n            }\n        }\n    }\n    for(int k=1; k<=K; k++) {\n        for(int i=1; i<=n; i++) {\n            for(int j=k-1; j<=i-1; j++) {\n                f[i][k]=max(f[i][k],f[j][k-1]+s[j+1][i]);\n            }\n        }\n    }\n    printf(\"%d\\n\",f[n][K]);\n    return 0;\n}\n```\n- \u81f3\u6b64\uff0c\u95ee\u9898\u5f97\u4ee5\u5b8c\u7f8e\u89e3\u51b3.\n",
        "postTime": 1510962795,
        "uid": 34920,
        "name": "\u65e9\u53f3\u6615",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "p1026   \n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7200\u7684\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u6bcd\u4e32(\u7ea6\u5b9a\u8be5\u5b57\u4e32\u4ee5\u6bcf\u884c20\u4e2a\u5b57\u6bcd\u7684\u65b9\u5f0f\u8f93\u5165\uff0c\u4e14\u4fdd\u8bc1\u6bcf\u884c\u4e00\u5b9a\u4e3a20\u4e2a)\u3002\u8981\u6c42\u5c06\u6b64\u5b57\u6bcd\u4e32\u5206\u6210k\u4efd(1<k\u226440)\uff0c\u4e14\u6bcf\u4efd\u4e2d\u5305\u542b\u7684\u5355\u8bcd\u4e2a\u6570\u52a0\u8d77\u6765\u603b\u6570\u6700\u5927(\u6bcf\u4efd\u4e2d\u5305\u542b\u7684\u5355\u8bcd\u53ef\u4ee5\u90e8\u5206\u91cd\u53e0\u3002\u5f53\u9009\u7528\u4e00\u4e2a\u5355\u8bcd\u4e4b\u540e\uff0c\u5176\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e0d\u80fd\u518d\u7528\u3002\u4f8b\u5982\u5b57\u7b26\u4e32this\u4e2d\u53ef\u5305\u542bthis\u548cis\uff0c\u9009\u7528this\u4e4b\u540e\u5c31\u4e0d\u80fd\u5305\u542bth)\u3002\n\n\u5355\u8bcd\u5728\u7ed9\u51fa\u7684\u4e00\u4e2a\u4e0d\u8d85\u8fc76\u4e2a\u5355\u8bcd\u7684\u5b57\u5178\u4e2d\u3002\n\n\u8981\u6c42\u8f93\u51fa\u6700\u5927\u7684\u4e2a\u6570\u3002\n\n\u8f93\u5165\n\u6bcf\u7ec4\u7684\u7b2c\u4e00\u884c\u67092\u4e2a\u6b63\u6574\u6570(p,k)  \np\u8868\u793a\u5b57\u4e32\u7684\u884c\u6570,k\u8868\u793a\u5206\u4e3ak\u4e2a\u90e8\u5206\u3002\n\n\u63a5\u4e0b\u6765\u7684p\u884c\uff0c\u6bcf\u884c\u5747\u670920\u4e2a\u5b57\u7b26\u3002  \n\u518d\u63a5\u4e0b\u6765\u67091\u4e2a\u6b63\u6574\u6570s\uff0c\u8868\u793a\u5b57\u5178\u4e2d\u5355\u8bcd\u4e2a\u6570\u3002(1\u2264s\u22646)  \n\u63a5\u4e0b\u6765\u7684s\u884c\uff0c\u6bcf\u884c\u5747\u67091\u4e2a\u5355\u8bcd\u3002  \n\n\u8f93\u51fa\uff1a\n1\u4e2a\u6574\u6570\uff0c\u5206\u522b\u5bf9\u5e94\u6bcf\u7ec4\u6d4b\u8bd5\u6570\u636e\u7684\u76f8\u5e94\u7ed3\u679c\u3002\n## 1\u00b7\u5173\u4e8e<string> \uff08\u672c\u9898\u5de5\u5177\uff09\nstring\u76f8\u5f53\u4e8e\u7528\u201c \u201d\u62ec\u8d77\u6765\u7684\u7684\u51e0\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5string\u8868\u793a\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32      \n  ### (1).\u6784\u9020\u51fd\u6570\uff1a\n  \tstring(const char *s);//\u7528char\u7c7b\u5b57\u7b26\u4e32s\u521d\u59cb\u5316        \n  \tstring\uff08int n,char c;//\u7528n\u4e2a\u5b57\u7b26c\u521d\u59cb\u5316\n  \tstring s\u6216string s=\"hello\";\n  ### (2).\u5b57\u7b26\u64cd\u4f5c\uff1astring s;\n -  s[x]\u8fd4\u56de\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u7b2cx\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\uff0c\u8fd8\u6709s()\u63d0\u4f9b\u8303\u56f4\u68c0\u67e5\u3002\u539f\u578b\u662f  \n  const char &operator [ ] (int n) const;  \n  const char &at(int n)const;  \n  char &operator [ ] (int n);   \n  char &at(int n);     \n\u7684operator[ ]\u548cat()\u8fd4\u56de\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u7b2cn\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e       \n  \n- ##### int copy(char *s, int n, int pos = 0) const;   //\u628a\u5f53\u524d\u4e32\u4e2d\u4ee5pos\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\u62f7\u8d1d\u5230\u4ee5s\u4e3a\u8d77\u59cb\u4f4d\u7f6e\u7684\u5b57\u7b26\u6570\u7ec4\u4e2d\uff0c\u8fd4\u56de\u5b9e\u9645\u62f7\u8d1d\u7684\u6570\u76ee\n- ##### int size()const; //\u8fd4\u56de\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u5927\u5c0f  \n ##### int length()const; //\u8fd4\u56de\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u957f\u5ea6  \n ##### bool empty()const; //\u5f53\u524d\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u7a7a  \n ##### void resize(int len,char c);//\u628a\u5b57\u7b26\u4e32\u5f53\u524d\u5927\u5c0f\u7f6e\u4e3alen\uff0c\u5e76\u7528\u5b57\u7b26c\u586b\u5145\u4e0d\u8db3\u7684\u90e8\u5206\n ##### string substr(int pos = 0,int n = npos) const;//\u8fd4\u56depos\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\n##### void\u00a0swap(string\u00a0&s2);\u00a0//\u4ea4\u6362\u5f53\u524d\u5b57\u7b26\u4e32\u4e0es2\u7684\u503c\n   \n\u5373  \n   #### s.substr(x,len) \u5728s\u4e2d\u53d6\u51fa\u4ecex\u4f4d\u7f6e\u5f00\u59cb\uff0c\u957f\u5ea6\u4e3alen\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56destring\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\u3002\n\n#### s.find(a) \u5728s\u4e2d\u67e5\u627e\u5b57\u7b26\u4e32a,\u5e76\u8fd4\u56de\u8d77\u59cb\u4e0b\u6807\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de1844674407370955161\uff0c\u5373\uff081999999999999999\uff0916.\n\n#### s.length() \u6c42s\u7684\u957f\u5ea6\uff08\u4ece0\u5f00\u59cb\uff09\u3002\n\n#### s[1] \u5b57\u7b26\u4e32s\u7684\u7b2c2\u4e2a\u5b57\u7b26\uff0c\u76f8\u5f53\u4e8e\u6570\u7ec4\uff08\u540e\u6765\u56e0\u4e3a\u6709\u4e86substr\uff0c\u5c31\u4e0d\u7528\u4e86\uff09\u3002\n**string s3(\"valuee\");   \u5c06s3\u521d\u59cb\u5316\u4e00\u4e2a\u5b57\u7b26\u4e32\u9762\u503c\u526f\u672c   \nstring s4(n,'c'); \u5c06s4 \u521d\u59cb\u5316\u4e3a\u5b57\u7b26'c'\u7684n\u4e2a\u526f\u672c      **\n\n**cin>>s5;  \u8bfb\u53d6\u6709\u6548\u5b57\u7b26\u5230\u9047\u5230\u7a7a\u683c **  \n\n**getline(cin,s6);  \u8bfb\u53d6\u5b57\u7b26\u5230\u9047\u5230\u6362\u884c\uff0c\u7a7a\u683c\u53ef\u8bfb\u5165\uff0c\u77e5\u9053\u2018\\n\u2019\u7ed3\u675f\uff08\u7ec3\u4e60\u5728\u4e0b\u4e00\u4e2a\u4ee3\u7801\u4e2d\uff09\uff0c      \ngetline(cin,s7,'a'); \u4e00\u4e2a\u76f4\u5230\u2018a\u2019\u7ed3\u675f\uff0c\u5176\u4e2d\u4efb\u4f55\u5b57\u7b26\u5305\u62ec'\\n'\u90fd\u80fd\u591f\u8bfb\u5165**  \n\n**strcat():strcat(dest,src);\u00a0 \u00a0 \u00a0 \u00a0 strcat\u628asrc\u6240\u6307\u5411\u7684\u5b57\u7b26\u6dfb\u52a0\u5230dest\u7ed3\u5c3e\u5904\uff08\u8986\u76d6\u539fdest\u7ed3\u5c3e\u5904\u7684'\\0'\uff09\uff0c\u5e76\u6dfb\u52a0\u65b0\u7684'\\0'\u3002**\n\n\n\u00a0 \u00a0 \u00a0\u8bf4\u660e\uff1asrc\u548cdest\u6240\u6307\u5185\u5b58\u533a\u57df\u4e0d\u53ef\u4ee5\u91cd\n     \u53e0\uff0c\u5e76\u4e14dest\u5fc5\u987b\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5bb9\u7eb3\n     src\u7684\u5b57\u7b26\u4e32,\u8fd4\u56de\u6307\u5411dest\u7684\u6307\u9488\u3002\n\n\n\n## 2.\u89e3\u9898\n\u9996\u5148\u662f\u8fd9\u4e2a\u5f3a\u5dee\u4eba\u610f\u7684\u667a\u969c\u9898\u9762     \n\u4ec0\u4e48~~\u73a9\u610f~~\u53eb\u201c\u5176\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e0d\u80fd\u518d\u7528\u3002\u4f8b\u5982\u5b57\u7b26\u4e32this\u4e2d\u53ef\u5305\u542bthis\u548cis\uff0c\u9009\u7528this\u4e4b\u540e\u5c31\u4e0d\u80fd\u5305\u542bth)\u3002\u201d\uff1f\uff1f\uff1f   \n\u5927\u6982\u662f\u8bed\u6587\u5341\u7ea7\u8003\u8bd5\u6ca1\u9519\u4e86        \n\u610f\u601d\u662f\u56e0\u4e3ath\u5305\u542bt\u6240\u4ee5\u4e0d\u80fd\u7528th\u2026\u2026qrz      \n\u77e5\u9053\u9898\u610f\u4e86\u770b\u770b\u600e\u4e48\u505a     \n#### sum[i][j]\u662f\u9884\u5904\u7406\u7684\u8868\u793a\u4ecei\u5230j\u7684\u5355\u8bcd\u6570\uff0c\u5012\u5e8f\u904d\u5386\uff0c\u4ee5\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e0d\u80fd\u518d\u7528\uff0c\u800c\u5355\u8bcd\u53ef\u90e8\u5206\u91cd\u53e0\u7684\u6027\u8d28 \uff0c\u5e76\u4e14\u53ea\u8981\u5728\u5934\u90e8\u627e\u7684\u4e00\u4e2a\u5355\u8bcd\uff08find\uff08word\uff09==0\uff09\u4fbf\u53ef\u4ee5\u76f4\u63a5return true\u7136\u540e\u5bf9sum[i][j]++\n#### \u6ce8\u610f\uff0c\u8fd9\u91cc\u6c42sum\u53ea\u80fd\u4e0d\u65ad\u79fb\u52a8\u5de6\u53f3\u8fb9\u754c\uff0c\u5bb9\u65a5\u7684\u8bdd\u4f1a\u51fa\u9505\uff0c\u4f8b\u5982\uff1a\n10 4  \naaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaa  \n1\naaaaa        \n\u5bb9\u65a5\u7684\u65f6\u5019\u4f1a\u5207\u65ad\u5355\u8bcd\u5bfc\u81f4\u533a\u95f4\u7b54\u6848\u9519\u8bef\n\uff08\u4f46\u7531\u4e8e\u6570\u636e\u592a\u6c34\u4e86\u80fd\u8fc7\u516b\u5341\u5206\uff09    \n\n```\nfd(j,len-1,1){//\u5012\u5e8f\u4ee5\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e0d\u80fd\u518d\u7528\uff0c\u800c\u5355\u8bcd\u53ef\u90e8\u5206\u91cd\u53e0\u7684\u6027\u8d28 \n        sum[j][len]=sum[j+1][len];//\u5012\u5e8f\uff0c\u53f3\u8fb9\u754c\u56fa\u5b9a\uff0c\u4e0d\u65ad\u5de6\u79fb\u5de6\u8fb9\u754c \n        if(check(j,len))//\u67e5\u8be2\u5355\u8bcd \n    \tsum[j][len]++;//\u9884\u5904\u7406\u533a\u95f4\u5355\u8bcd\u4e2a\u6570 \n    \tfd(i,len,j){ \n    \t\tsum[j][i]=sum[j][len]-sum[i+1][len];//\u5bb9\u65a5\u5904\u7406\u51fa\u5404\u533a\u95f4\u5355\u8bcd\u6570 \n        }\n```    \n\u6240\u4ee5\u53ea\u80fd\u4e24\u91cd\u5faa\u73af\u679a\u4e3e\u5de6\u53f3\u8fb9\u754c\u7136\u540e\u67e5\u5355\u8bcd\u2026\u2026\n### \u8bbedp[i][j]\u8868\u793a\u5230\u4e86\u7b2ci\u4e2a\u4f4d\u7f6e\uff0c\u5206\u4e86j\u5757\u80fd\u5f97\u5230\u7684\u6700\u591a\u5355\u8bcd\u6570\n### \u8f6c\u79fb\uff1a\u679a\u4e3e\u65ad\u70b9 cut ,\u5219\n### dp[i][j]=max{dp[i][j],dp[cut][j-1]+sum[cut+1][i]\n\u5230\u7b2ci\u4e2a\u4f4d\u7f6e\uff0c\u5206\u4e86j\u6bb5\u7684\u7ed3\u679c\u53ef\u4ee5\u7531\u5728\uff08j~i-1\uff09\u4e4b\u4e2d\n\t\t \u67d0\u67d0\u4f4d\u7f6e\u653e\u4e00\u4e2a\u9694\u65adl\u800c\u7531j-1\u52a0\u4e0a\u653e\u4e86\u9694\u65ad\u800c\u5f62\u6210\u7684\n\t\t l+1\u5230i\u7684\u533a\u95f4\u7684\u4ef7\u503c \n\n### code\uff1a\n```\n#include<bits/stdc++.h>\n#include<string>\n#include<cstring>\n#define fu(i,q,w)  for(register int i=q;i<=w;i++)\n\n#define fd(i,q,w)  for(register int i=q;i>=w;i--)\n\n#define interval int \nusing namespace std;\ntypedef long long ll;\nconst int maxn=200;\nconst int maxm=40000;\ninline int read(){\n    int ret=0,f=1;char c;\n    while((c=getchar())<'0'||c>'9')if(c=='-')f=-1;\n    while(c>='0'&&c<='9')ret=ret*10+(c-'0'),c=getchar();\n    return ret*f;\n}\nint p,k;//p\u5b57\u7b26\u4e32\u884c\u6570\uff0ck\u8868\u793a\u5206k\u4e2a\u90e8\u5206\n\nint dp[210][50];//dp[i][j]\u8868\u793a\u5230\u7b2ci\u4e2a\u4f4d\u7f6e\u5206\u4e86j\u5757\n\nint sum[210][210];//sum[i][j]\u8868\u793a\u9884\u5904\u7406\u51fa\u7684 \u4f4d\u7f6ei\u5230\u4f4d\u7f6ej\u7684\u5355\u8bcd\u6570\n\nint s;//\u5b57\u5178\u4e2d\u5355\u8bcd\u4e2a\u6570\n\nstring str,word[10];//\u5b57\u7b26\u4e32\uff0c\u5355\u8bcd\nint len;\nbool check(int l,int r){\n    string line;\n        line=str.substr(l,r-l+1);//\u53d6\u51fa\u5b57\u7b26\u4e32 \n        fu(g,1,s)if(line.find(word[g])==0)return true;\n\t\t// \u7531\u4e8e \u4e14\u6bcf\u4efd\u4e2d\u5305\u542b\u7684\u5355\u8bcd\u4e2a\u6570\u52a0\u8d77\u6765\u603b\u6570\u6700\u5927\n\t\t//(\u6bcf\u4efd\u4e2d\u5305\u542b\u7684\u5355\u8bcd\u53ef\u4ee5\u90e8\u5206\u91cd\u53e0\u3002\n\t\t//\u5f53\u9009\u7528\u4e00\u4e2a\u5355\u8bcd\u4e4b\u540e\uff0c\u5176\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e0d\u80fd\u518d\u7528\u3002\n\t\t//\u6240\u4ee5\u76f4\u63a5\u770b\u5b57\u7b26\u4e32\u5934\u90e8\u6709\u6ca1\u6709\u5355\u8bcd\u5c31\u597d\u4e86 \n        return false;\n}\nint main(){\n \tstring ch;//\u8f93\u5165\u7528\u4e34\u65f6\u53d8\u91cf\n    str+='0'; \n    p=read(),k=read();\n    fu(i,1,p){\n        \n        cin>>ch;\n        str+=ch;//\u8fd9\u91cc\u4e5f\u53ef\u4ee5strcat\uff0c\u8bb0\u5165\u5230\u4e00\u4e2a\u5927string\u91cc \n    }\n    s=read();//\u8bfb\u5165\u5355\u8bcd\n    fu(i,1,s)cin>>word[i];\n\tlen=str.length()-1; //\u8bb0\u5f55\u53f3\u8fb9\u754c \n    fd(i,len,1)//\u5012\u5e8f\u4ee5\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e0d\u80fd\u518d\u7528\uff0c\u800c\u5355\u8bcd\u53ef\u90e8\u5206\u91cd\u53e0\u7684\u6027\u8d28 \n        fd(j,i,1){\n\t\tsum[j][i]=sum[j+1][i];//\u5012\u5e8f\uff0c\u53f3\u8fb9\u754c\u56fa\u5b9a\uff0c\u4e0d\u65ad\u5de6\u79fb\u5de6\u8fb9\u754c \n        //\u6ce8\u610f\uff0c\u6b64\u5904\u4e0d\u53ef\u5bb9\u65a5\u5904\u7406\uff08sum[i][j]!=sum[i][len]-sum[j+1][sum] \n\t\t//\u7b2c\u4e09\u7ec4\u6570\u636e\u5168\u662f\u4e00\u4e2a\u5b57\u6bcd\u7684\u4f1a\u70b8 \n\t\tif(check(j,i))//\u67e5\u8be2\u5355\u8bcd \n    \tsum[j][i]++;//\u9884\u5904\u7406\u533a\u95f4\u5355\u8bcd\u4e2a\u6570 \n    \t\n    }\t\n    \n     //\u53d6\u51fa\u67d0\u4e00\u6bb5\u5b57\u7b26\u4e32\n    //\u67e5\u8be2\u5355\u8bcd \n    dp[0][0]=0;\n    fu(i,1,k)dp[i][i]=dp[i-1][i-1]+sum[i][i];//1\u521d\u59cb\u5316dp\u6570\u7ec4\uff0c\u524dk\u4e2a\u5b57\u6bcd\u6bcf\u4e2a\u4f5c\u4e3a\u4e00\u6bb5 ,\u4e3a\u653el\u505a\u51c6\u5907 \n    fu(i,1,len)dp[i][1]=sum[1][i];//\u628a\u53ea\u5206\u4e00\u4e2a\u90e8\u5206\u7684\u7b54\u6848\u90fd\u9884\u5b58\u51fa\u6765 \n    fu(i,1,len)\n     for(int j=1;j<=k&&j<i;j++)//\u5206\u6bb5\u6570\u5c0f\u4e8e\u7b49\u4e8ek\uff0c\u5c0f\u4e8e\u6240\u8f6c\u79fb\u5230\u7684\u5b57\u7b26\u4e32\u5b57\u6bcd\u6570 \n     \tfu(cut,j,i-1)//l\u8868\u793a\u5206\u6bb5\u5904 \n     \tdp[i][j]=max(dp[i][j],dp[cut][j-1]+sum[cut+1][i]);\n     \t//\u5230\u7b2ci\u4e2a\u4f4d\u7f6e\uff0c\u5206\u4e86j\u6bb5\u7684\u7ed3\u679c\u53ef\u4ee5\u7531\u5728\uff08j~i-1\uff09\u4e4b\u4e2d\n\t\t //\u67d0\u67d0\u4f4d\u7f6e\u653e\u4e00\u4e2a\u9694\u65adl\u800c\u7531j-1\u52a0\u4e0a\u653e\u4e86\u9694\u65ad\u800c\u5f62\u6210\u7684\n\t\t //l+1\u5230i\u7684\u533a\u95f4\u7684\u4ef7\u503c \n     \tprintf(\"%d\\n\",dp[len][k]);\n    return 0;\n}\n```\n",
        "postTime": 1540802979,
        "uid": 55873,
        "name": "GrayCatH",
        "ccfLevel": 0,
        "title": "noip\u63d0\u9ad82001 \u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\uff1aSTL<string>\u5b57\u7b26\u4e32\u7c7b\u578b\u53ca\u51fd\u6570\u4f7f\u7528:dp"
    },
    {
        "content": "#\u54c8\u5e0c+dp\n\n\u56e0\u4e3a\u4e0d\u592a\u4f1a\u5904\u7406\u5b57\u7b26\u4e32,\u4f46\u770b\u5230\u5224\u65ad\u5b57\u7b26\u76f8\u7b49,\u54c8\u5e0c\u6709\u5927\u7528\u5904\u4e86\u3002\n\n\u5206\u522b\u628a\u6bcf\u4e00\u4e2a\u5b50\u4e32\u54c8\u5e0c\u4e00\u904d\u548c\u76ee\u6807\u4e32\u5339\u914d,\u5339\u914d\u5b8c\u6210\u5c06\u8fd9\u4e00\u6bb5\u52a01;\n\n\u9884\u5904\u7406\u51fa\u6765\u4e00\u4e2amap[i][j]\u8868\u793a\u5728\u4ece**i**\u5230**j**\u7684\u533a\u95f4\u91cc\u6709\u5408\u6cd5\u7684\u5b50\u4e32\u7684\u4e2a\u6570.\n\n\u90a3\u8f6c\u79fb\u53ef\u4ee5\u6709\u4ee5\u4e0b,**j\u4e3a\u5206\u7684\u6b21\u6570,i\u4e3a\u5f53\u524d\u5206\u5230\u7b2ci\u4e2a\u4f4d\u7f6e**\n\n\u00b7\u00b7\u00b7\ndp[i][j]=max(dp[i][j],dp[1~i-1][j-1])\n\n\u7279\u6b8a\u7684\u5f53j=1dp[i][1]=map[0][i]\n\n\u00b7\u00b7\u00b7\n\u5b57\u7b26\u4e32\u8bfb\u5165\u9ed1\u79d1\u6280ch+(??) O(\u2229\\_\u2229)O\u54c8\u54c8~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int mod=1e9+7;\nconst int ran=233;\nint n,k,s;\nchar ch[300];\nchar f[9][100],t[300];\nint ok[9],ll[9];\nint map[300][300];\nint dp[300][300];\nint haxi(char c[]){\n    int le=strlen(c);\n    int an=0;\n    for(int i=0;i<le;i++)an=(an*ran+c[i])%mod;\n    return an;\n}\nbool ha(int x,int y){\n    for(int i=1;i<=s;i++){\n    memset(t,0,sizeof(t));\n    strncpy( t, ch+x , min( ll[i] , y-x+1 ) );//\u590d\u5236\u5b57\u7b26\u4e32 \n    if(haxi( t )==ok[i])return 1;\n    }\n    return 0;\n}\nint main(){\n    cin>>n>>k;\n    for(int i=1;i<=n;i++)cin>>ch+(i*20-20);\n    cin>>s;\n    for(int i=1;i<=s;i++)cin>>f[i];\n    for(int i=1;i<=s;i++)ll[i]=strlen(f[i]);\n    for(int i=1;i<=s;i++)ok[i]=haxi( f[i] );\n    int len=strlen(ch);\n    for(int i=len-1;i>=0;i--){\n        for(int j=i;j>=0;j--){\n            map[j][i]+=map[j+1][i];\n            if(ha(j,i))map[j][i]++;\n        }\n    }\n\n    for(int i=0;i<len;i++)\n    for(int j=1;j<=k;j++){\n        if(j==1)dp[i][j]=map[0][i];\n        else{\n            for(int l=0;l<i;l++){\n                if(dp[l][j-1])\n                dp[i][j]=max(dp[i][j],dp[l][j-1]+map[l+1][i]);\n            }\n        }\n    }\n    cout<<dp[len-1][k];\n    return 0;\n}\n```",
        "postTime": 1507771131,
        "uid": 24570,
        "name": "s_a_b_e_r",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u6ca1\u4eba\u5199KMP\u5427\u2026\u2026\n\n\u672c\u4eba\u4e0d\u5c0f\u5fc3\u5199\u4e86\u4e2aKMP\uff0c\u6ca1\u60f3\u5230\u7adf\u7136\u8fc7\u4e86\u2026\u2026\u6240\u4ee5\uff0c\u6b64\u9898\u8fd8\u662f\u6709\u53ef\u53d6\u4e4b\u5904\u7684\u3002//KMP\u53ef\u4ee5\u770b\u7b97\u6cd5\u7ade\u8d5b\u5165\u95e8\u7ecf\u5178\u4e0a\n\n\u672c\u4eba\u5728AC\u4e4b\u524d\uff0cWA\u4e86\u4e24\u6b21\uff0c\u603b\u7ed3\u4e86\u4e00\u4e9b\u7ecf\u9a8c\uff08\u5751\u70b9\uff09\uff0c\u5e0c\u671b\u5927\u5bb6\u80fd\u6ce8\u610f\u3002\n\n\u5751\u70b91\uff1a\u8bfb\u5165\u3002\u8fd9\u4e00\u9898\u7684\u8bfb\u5165\u5f88\u5947\u602a\uff0c\u662f\u6bcf\u884c20\u4e2a\u8f93\u5165\u7684\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u8bb0\u5f97\u5224\u65ad\u6362\u884c\u3002\u7528\u5feb\u8bfb\u7684\u65b9\u5f0f\u8bfb\u5165\u5373\u53ef\u3002\n\n\u5751\u70b92\uff1a\u9898\u76ee\u7406\u89e3\u3002\u5f88\u591a\u4eba\u53ef\u80fd\u90fd\u4f1a\u7406\u89e3\u6210\u4e0d\u80fd\u6709\u91cd\u590d\u5b57\u6bcd\u7684\u5355\u8bcd\u51fa\u73b0\u5728\u540c\u4e00\u6bb5\u91cc\uff0c\u7136\u800c\u5b9e\u9645\u4e0a\u8bf4\u7684\u662f\u4e0d\u80fd\u4ee5\u540c\u4e00\u4e2a\u5f00\u5934\u751f\u6210\u4e24\u4e2a\u5355\u8bcd\u3002\uff08\u8fd9\u5c31\u5f88\u7b80\u5355\u4e86\u5427\uff09\n\n\u5751\u70b93\uff1aDP\u8fb9\u754c\u3002\u5982\u697c\u4e0b\u6240\u8ff0\uff0cf[i][j]\u8868\u793a\u524di\u4e2a\u5b57\u7b26\u4e2d\u5206\u6210j\u5206\u6700\u591a\u6709\u591a\u5c11\u4e2a\u5355\u8bcd\u3002\u5f88\u591a\u4eba\u4e60\u60efj\u4ece0\u5f00\u59cb\u5faa\u73af\u3002\u7136\u800c\u4e0d\u5206\u4e5f\u81f3\u5c11\u67091\u4efd\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u51fa\u73b0j==0\u7684\u60c5\u51b5\u6240\u4ee5\u7b2c\u4e09\u4e2a\u6570\u636e\u70b9\u5c31\u70b8\u4e86\u3002\u7136\u540e\uff0c\u6ce8\u610f\u4e00\u4e0bDP\u6838\u5fc3\u8bed\u53e5\uff1a\n\nif(f[k][j-1])\n\nf[i][j]=max(f[i][j],f[k][j-1]+ct(k+1,i));\n\n\u82e5f[k][j-1]==0\uff0c\u5219\u4e0d\u80fd\u8fdb\u5165\uff0c\u56e0\u4e3a\u7b49\u4e8e0\u5219\u4e0d\u5b58\u5728\u8be5\u72b6\u6001\uff0c\u4e0d\u5e94\u8be5\u8fdb\u5165\u8ba1\u6570\uff1b\u82e5\u8ba1\u6570\uff0c\u5219ct\u5c31\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u8f83\u5927\u7684\u7b54\u6848\uff0c\u5bfc\u81f4\u9519\u8bef\u3002\u8fd9\u4e9b\u7ec6\u8282\u8fd8\u662f\u5f97\u6ce8\u610f\u7684\u3002\n\n\u5927\u81f4\u5c31\u662f\u8fd9\u51e0\u70b9\u4e86\uff0c\u795d\u5927\u5bb6AC\u5feb\u4e50\u3002\n\n\u4e0b\u4e3a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nint len=0;\nchar zfc[300];\nint p,k;\nchar wl;\nvoid dr()//\u8bfb\u5165\n{\n    while(p--)//p\u6ca1\u6709\u7528\u4e86\u2026\u2026\n    {\n        for(int i=0;i<20;i++)//\u6bcf\u884c20\u4e2a\n        {\n            scanf(\" %c\",&wl);//\u6ce8\u610f\u6709\u7a7a\u683c\u2014\u2014\" %c\"\n            zfc[len++]=wl;//\u5c06\u65b0\u7684\u5b57\u7b26\u52a0\u5165\u5230\u5927\u5b57\u7b26\u4e32\u4e2d\n        }\n    }\n}\nchar dt[10][300]={0};//\u5b58\u6bcf\u4e2a\u53ef\u4ee5\u4f7f\u7528\u7684\u5339\u914d\u5355\u8bcd\uff0c\u5373\u5b57\u5178\nint gs;//\u5b57\u5178\u5355\u8bcd\u4e2a\u6570\nint kmp[10][300]={0};//kmp\u5339\u914d\u51fd\u6570\nint ln[10];//\u5b58\u5b57\u5178\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\nbool visit[300];//\u9632\u6b62\u91cd\u590d\u7edf\u8ba1\uff0c\u5373\u9898\u610f\u4e2d\u7684\u201c\u4e0d\u80fd\u91cd\u590d\u5f00\u5934\u201d\nint xx[10];//\u6bcf\u4e2a\u5355\u8bcd\u76ee\u524d\u5339\u914d\u7684\u4f4d\u6570\uff0c\u5177\u4f53\u5728KMP\u51fd\u6570\u4e2d\nint sum;//\u7edf\u8ba1\u4e00\u6bb5\u5355\u8bcd\u4e2d\u53ef\u4ee5\u5339\u914d\u7684\u603b\u4e2a\u6570\nint ct(int zuo,int you)//KMP\u51fd\u6570\uff08\u5339\u914d\u51fd\u6570\uff09\n{\n    sum=0;\n    memset(visit,false,sizeof(visit));\n    memset(xx,0,sizeof(xx));\n    for(int i=zuo;i<=you;i++)\n    {\n        for(int j=0;j<gs;j++)\n        {\n            while(xx[j]&&zfc[i]!=dt[j][xx[j]])xx[j]=kmp[j][xx[j]];\n            if(zfc[i]==dt[j][xx[j]])xx[j]++;//KMP\u8fc7\u7a0b\n            if(xx[j]==ln[j]&&!visit[i-ln[j]+1])//\u5df2\u7ecf\u5339\u914d\u5230\u5168\u90e8\uff0c\u4e14\u5f00\u5934\u672a\u88ab\u7edf\u8ba1\u8fc7\n            {\n                visit[i-ln[j]+1]=true;\n                sum++;//\u8ba1\u6570\n            }\n        }\n    }\n    return sum;//\u8fd4\u56de\u8ba1\u6570\n}\nint main()\n{\n    scanf(\"%d%d\",&p,&k);\n    dr();\n    scanf(\"%d\",&gs); \n    for(int i=0;i<gs;i++)scanf(\"%s\",dt[i]);//\u8bfb\u5165\n    int x;\n    for(int i=0;i<gs;i++)//KMP\u5339\u914d\u5e8f\u5217\u751f\u6210\n    {\n        kmp[i][0]=kmp[i][1]=0;\n        ln[i]=strlen(dt[i]);\n        x=0;\n        for(int j=1;j<ln[i];j++)\n        {\n            while(x&&dt[i][x]!=dt[i][j])x=kmp[i][x];\n            kmp[i][j+1]=dt[i][x]==dt[i][j]?++x:0;\n        }\n    }\n    int f[300][300]={0};\n    for(int i=0;i<len;i++)\n    {\n        for(int j=1;j<=k;j++)\n        {\n            if(j==1)\n            {\n                f[i][j]=ct(0,i);//\u4e00\u6bb5\u76f4\u63a5\u5339\u914d\n            }\n            else\n            {\n                for(int k=0;k<i;k++)\n                {\n                    if(f[k][j-1])\n                    f[i][j]=max(f[i][j],f[k][j-1]+ct(k+1,i));//\u53d6\u6700\u5927\u503c\n                }\n            }\n        }\n    }\n    printf(\"%d\",f[len-1][k]);//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1505532846,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u7531\u4e8e\u9898\u76ee\u6570\u636e\u8303\u56f4\u5f88\u5f88\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u6709\u5404\u79cd\u5947\u5947\u602a\u602a\u7684\u65b9\u6cd5\u53ef\u4ee5\u6c34\u8fc7\u53bb\u3002\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e24\u79cd\u6bd4\u8f83\u9002\u7528\uff08\u51c6\u786e\uff09\u7684\u65b9\u6cd5\uff08\u6b63\u89e3\uff09\uff1a\n\n1.DP   \u8003\u8651\u4e00\u4e2adp[i][j]\u8868\u793a\u524di\u4e2a\u5b57\u6bcd\u5206\u6210\u4e86j\u6bb5\u65f6\u6700\u5927\u7684\u5355\u8bcd\u6570\u76ee\uff0c\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u4e00\u4e2a\u4f4d\u7f6ep\uff0c\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u5c06\u5b57\u7b26\u4e32\u5206\u6210\u4e24\u6bb5\uff0c\u90a3\u4e48\u8fd9\u4e2a\n\ndp[i][j]=max(dp[p][j-1]+s[p+1][i])\uff0c\u6211\u4eec\u5b9a\u4e49s[i][j]\u8868\u793a\u5728\u6587\u672c\u4e32\uff08\u5373\u6587\u7ae0\uff09\u7684\u7b2ci\u4e2a\u4f4d\u7f6e\u5230\u7b2cj\u4e2a\u4f4d\u7f6e\uff0c\u4ee5\u6bcf\u4e2a\u4f4d\u7f6e\u5f00\u5934\uff0c\u4ee5j\u4e3a\u7ed3\u5c3e\uff0c\u603b\u5171\u6709\u591a\u5c11\u5355\u8bcd\u3002\u90a3\u4e48s\u6570\u7ec4\u53ef\u4ee5\u7528lenght(T)^3\\*number(\u5355\u8bcd)\u7684\u6548\u7387\u9884\u5904\u7406\uff0c\u7136\u540edp\u6570\u7ec4\u53ef\u4ee5\u7528length(T)^2\\*k\u7684\u6548\u7387\u76f4\u63a5\u641e\u51fa\u6765\u3002\n\n\nDP\u7684\u4f18\u5316\u624b\u6bb5\uff1a\u5982\u679c\u5355\u8bcd\u6570\u76ee\u6bd4\u8f83\u591a\u5f04\u4e2aTrie\u5c31\u53ef\u4ee5\u628anumber\u7684\u5e38\u6570\u76f4\u63a5\u5f04\u6389\u3002\u540c\u65f6s\u6570\u7ec4\u5e94\u8be5\u8fd8\u53ef\u4ee5\u7528\u9012\u63a8\u641e\u4e00\u641e\uff0c\u90a3\u4e48\u53c8\u53ef\u4ee5\u628a\u9884\u5904\u7406\u7684\u6548\u7387\u5f04\u6210length(T)^2\u3002\u7136\u540e\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2ddp\u6570\u7ec4\u8fd8\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u4e00\u4e0b\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u4e00\u4e2alength(T)\u7ed9\u5f04\u6389\u3002\n\n\u90a3\u4e48\u603b\u6548\u7387\u5c31\u662fO(length(T)^2+length(T)\\*k)\n\n[Trie\u57fa\u7840\u4f20\u9001\u95e8\u3002](http://blog.csdn.net/no1\\_terminator/article/details/77686813)\n\n\u4f46\u662f\u6570\u636e\u662f\u975e\u5e38\u5c0f\u7684\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u8fd9\u4e48\u9ebb\u70e6\u3002\n\n\n2.\u8d2a\u5fc3\u3002\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5bf9\u5206\u6bb5\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8d2a\u5fc3\u3002\u663e\u7136\uff0c\u5982\u679c\u6211\u4eec\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u5206\u6210\u4e86\u4e24\u6bb5\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u6bb5\u7684\u5355\u8bcd\u6570\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\uff0c\u7b26\u5408\u65e0\u540e\u6548\u6027\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u6b21\u5206\u6bb5\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u662f\u628a\u524d\u9762\u4e00\u6bb5\u53ef\u4ee5\u5ef6\u4f38\u5230\u540e\u9762\u7684\u5355\u8bcd\u6570\u76f4\u63a5\u7ed9\u51cf\u6389\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5176\u5b9e\u5c31\u53ef\u4ee5\u628a\u6bcf\u6b21\u5206\u6bb5\u65f6\u6bcf\u4e2a\u4f4d\u7f6e\u88ab\u5220\u6389\u4f1a\u4ea7\u751f\u7684\u8d1f\u9762\u8d21\u732e\u7b97\u51fa\u6765\uff0c\u53d6\u4e2a\u6700\u5c0f\u7684\uff0c\u51cf\u6389\uff0c\u91cd\u590d\u641e\u4e00\u641e\uff0c\u76f4\u5230\u5206\u6210k\u6bb5\u3002\u8fd9\u4e2a\u6211\u6ca1\u6253\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u697c\u4e0bdalao\u4eec\u7684\u3002\u6bd5\u7adfDP\u5927\u6cd5\u624d\u662f\u6b63\u9053\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\n\n\n\u53c2\u8003\u4ee3\u7801\uff08\u52a0\u4e86\u4e2aTrie\uff0c\u6240\u4ee5\u4ee3\u7801\u957f\u4e86\u70b9\uff09\uff1a\n\n\n```cpp\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nconst int N=201;\nint f[N][51],s[N][N],val[N*N],ch[N*N][26];\nint NodeCnt=0,n,k,m,len;\nstring T,in;\nvoid insert(string in){\n    int u=0;\n    for (int i=0;i<in.length();i++){\n        int c=in[i]-'a';\n        if (!ch[u][c])ch[u][c]=++NodeCnt;\n        u=ch[u][c];\n    }\n    val[u]=1;\n}\nint query(int st,int en){\n    int tot=0;\n    for (int i=st;i<=en;i++){\n        int u=0;\n        for (int j=i;j<=en;j++){\n            int c=T[j]-'a';\n            if (!ch[u][c])break;\n            u=ch[u][c];\n            if (val[u]){tot++;break;}\n        }\n    }\n    return tot;\n}\nint main(){\n    ios::sync_with_stdio(false);\n    while (cin>>n>>k){\n        T=\"\";\n        for (int i=0;i<n;i++){\n            cin>>in;\n            T=T+in;\n        }\n        len=T.length();\n        cin>>m; \n        for (int i=0;i<m;i++){\n            cin>>in;\n            insert(in);\n        }\n        for (int i=0;i<len;i++)\n            for (int j=i;j<len;j++)\n                s[i][j]=query(i,j);\n        memset(f,~0x3f,sizeof(f));\n        for (int i=0;i<len;i++)\n            f[i][1]=s[0][i];\n        for (int i=0;i<len;i++)\n            for (int j=2;j<=k;j++)\n                for (int p=0;p<i;p++)\n                    f[i][j]=max(f[i][j],f[p][j-1]+s[p+1][i]);\n        cout<<f[len-1][k];\n    }\n    return 0;\n}\n\u987a\u4fbf\u63d0\u4e00\u53e5\uff0c\u6b64\u9898\u6570\u636e\u975e\u5e38\u6c34\uff0c\u6211\u4e00\u5f00\u59cb\u628adp\u65b9\u7a0b\u7684\u5199\u9519\u4e86\uff0c\u540c\u65f6\u628as\u6570\u7ec4\u53ea\u5f00\u523050\uff0c\u7adf\u7136\u8fc7\u4e864\u4e2a\u70b9\uff08\u4e00\u5171\u624d5\u4e2a\uff09\uff01\u6240\u4ee5.....\n```",
        "postTime": 1504434924,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "## \u8fd9\u7bc7\u9898\u89e3\u53ea\u662f\u5bf9\u524d\u9762\u7684\u9898\u89e3\u7684\u8bf4\u660e\u548c\u7b80\u5316\uff08\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97\u6284\u9898\u89e3\uff09\n- \u8fd9\u9898\u771f\u7684\u7279\u522b\u9ebb\u70e6\uff08\u4e3b\u8981\u662f\u56e0\u4e3a\u5b57\u7b26\u4e32\u64cd\u4f5c\uff09\uff0c\u5176\u5b9e\u6574\u4f53\u4e0a\u662f\u533a\u95f4dp\uff0c\u53ef\u4ee5\u679a\u4e3e\u5f53\u524d\u8fd9\u4e00\u6bb5\u5207\u591a\u957f\uff0c\u7136\u540e\u4ece\u524d\u9762\u7684\u8f6c\u79fb\u8fc7\u6765\u52a0\u4e0a\u8fd9\u4e00\u6bb5\u8d21\u732e\u7684\u5355\u8bcd\u7684\u6570\u91cf\u5c31\u884c\u4e86\u3002\u6240\u4ee5\u91cd\u70b9\u6709\u4e24\u4e2a\uff1a\u5904\u7406\u597d\u6bcf\u4e00\u6bb5\u533a\u95f4\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u548c\u533a\u95f4dp\u3002\n- \u5904\u7406\u5355\u8bcd\u4e2a\u6570\u524d\u9762\u7684\u5927\u4f6c\u90fd\u8bf4\u8fc7\u4e86\uff0c\u4f46\u662f\u8fd8\u662f\u8bf4\u4e00\u4e0b\uff0c\u56e0\u4e3a\u53ef\u4ee5\u60f3\u5230\uff0c\u5f53\u524d$[l,r]$\u7684\u5355\u8bcd\u4e2a\u6570\u662f\u53ef\u4ee5\u4ece$[l+1,r]$\u63a8\u8fc7\u6765\u7684\uff0c\u56e0\u4e3a\u4ee5\u4e00\u4e2a\u5b57\u7b26\u4e3a\u5f00\u5934\uff0c\u4e0d\u7ba1\u53ef\u4ee5\u6784\u6210\u591a\u5c11\u4e2a\u5355\u8bcd\uff0c\u90fd\u53ea\u80fd\u7b971\uff0c\u6240\u4ee5\u6bcf\u4e00\u6b21\u5224\u65ad\u6709\u6ca1\u6709\u5728$[l,r]$\u8303\u56f4\u7684\u4ee5$l$\u5f00\u5934\u7684\u5355\u8bcd\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\u90a3$w[l][r]=w[l+1][r]$\uff0c\u5982\u679c\u6709\u7684\u8bdd\u90a3\u4e48$w[l][r]=w[l+1][r]+1$\uff0c\u8fd9\u91cc\u8981\u5f15\u5165\u4e24\u4e2a\u51fd\u6570\uff08\u4e3a\u4e86\u65b9\u4fbf\u5224\u65ad\u662f\u5426\u6709\u5728$[l,r]$\u8303\u56f4\u7684\u4ee5$l$\u5f00\u5934\u7684\u5355\u8bcd\uff09\u3002$b.substr(l,len)$\u53ef\u4ee5\u53d6\u51fa$b$\u5b57\u7b26\u4e32\u4e2d\u4ee5$l$\u5f00\u5934\u7684\u957f\u5ea6\u4e3a$len$\u7684\u5b57\u7b26\u4e32\uff0c\u6ce8\u610f\u8fd9\u91cc\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002$b.find(s)$\u53ef\u4ee5\u8fd4\u56de$s$\u5728$b$\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7684\u4e0b\u6807\uff0c\u6240\u4ee5\u53ef\u4ee5\u53d6\u51fa$x$=$b$\u5b57\u7b26\u4e32\u4e2d$[l,r]$\u7684\u90a3\u4e00\u6bb5\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5355\u8bcd$s$\uff0c\u7136\u540e\u5224\u65ad$x.find(s)$\u662f\u5426\u7b49\u4e8e0\uff0c\u5982\u679c\u7b49\u4e8e0\uff0c\u4ee3\u8868\u6709\u5728$[l,r]$\u8303\u56f4\u7684\u4ee5$l$\u5f00\u5934\u7684\u5355\u8bcd\u3002\n- \u7136\u540e\u533a\u95f4dp\u8fd9\u91cc\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u4e3b\u8981\u662f\u9884\u5904\u7406\u3002\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstring b,S,dc[10];\nint p,k,s,f[50][210],w[210][210],ans;\nbool check(int l,int r)\n{\n        string x=b.substr(l,r-l+1);\n        for(int i=1;i<=s;i++)\n            if(x.find(dc[i])==0)\n                return true;\n        return false;\n}\nint main()\n{\n        cin>>p>>k;\n        b=\"\";\n        for(int i=1;i<=p;i++)\n        {\n            cin>>S;\n            b+=S;\n        }\n        cin>>s;\n        for(int i=1;i<=s;i++)\n            cin>>dc[i];\n        for(int i=b.length()-1;i>=0;i--)//\u9012\u63a8\u9884\u5904\u7406w\u6570\u7ec4\n        {\n            for(int j=i;j<b.length();j++)\n            {\n                w[i][j]=w[i+1][j];\n                if(check(i,j))\n                    w[i][j]++;\n            }\n        } \n        for(int i=0;i<b.length();i++)\n            f[1][i]=w[0][i];\n        for(int i=1;i<=k;i++)\n        {\n            f[i][i]=f[i-1][i-1]+w[i][i];\n            for(int j=i-1;j<b.length();j++)//\u6ce8\u610f\u8fd9\u91cc\u7684\u679a\u4e3e\u7684\u8303\u56f4\n                for(int l=i-2;l<j;l++)//\u8fd9\u4e2a\u8303\u56f4\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u8981\u4fdd\u8bc1\u80fd\u591f\u81f3\u5c11\u6bcf\u5207\u4e00\u6bb5\u6709\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e0d\u7136\u4f1awa\n                    f[i][j]=max(f[i][j],f[i-1][l]+w[l+1][j]);\t\n        }\n        cout<<f[k][b.length()-1];\n        return 0;\n}\n```\n",
        "postTime": 1571908788,
        "uid": 67886,
        "name": "\u5730\u8868\u6700\u5f3a\u7537\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u4e00\u5e74\u524d\u770b\u7740\u9053\u9898\u4e0d\u4f1a\u505a\u3002\u3002\u3002\u3002\n\n\uff08\u5176\u5b9e\u8fd9\u9053\u9898\u4e00\u70b9\u4e5f\u4e0d\u96be\u3002\u3002\u3002\uff09\n\n\u590d\u4ec7\u6210\u529f\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u66b4\u529b\u8dd1\u51fa\u5bf9\u4e8e\u6ca1\u4e00\u6bb5\u53bb\u95f4\u9020\u6210\u7684\u8d21\u732e\u3002\u3002\n\n\u590d\u6742\u5ea6\uff08n^3*s*lenth[i]\uff09\u7684\n\n\u4f46\u5b9e\u9645\u4e0a\u8fdc\u8fdc\u8dd1\u4e0d\u6ee1\n\n\u5728\u7528dp\u89e3\u51b3\n\n\u5b9a\u4e49\u72b6\u6001dp[i][j]\u8868\u793a\u5230i\u4e2a\u5b57\u7b26\n\n\u5206\u5272\u6210j\u6bb5\u7684\u6700\u5927ans\n\n\u8f6c\u79fb\u65b9\u7a0b dp[i][j]=dp[k][j-1]+sum[k+1][i]\n\n\u672a\u514d\u592a\u8fc7\u663e\u7136\u3002\u3002\u3002\n\n\u653e\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint n,m,s,len,sum[205][205],lenth[11],f[205][55];\nstring a,b;\nstring ss[11];\n\ninline void read(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>b;\n\t\ta=a+b;\n\t}\n\tcin>>s;\n\tlen=a.length();\n\tfor(int i=1;i<=s;i++) cin>>ss[i];\n\tfor(int i=1;i<=s;i++) lenth[i]=ss[i].length();\n}\n\ninline void pre_work(){\n\tfor(int i=0;i<len;i++) \n\t\tfor(int j=i;j<len;j++)\n\t\t\tfor(int k=i;k<=j;k++){\n\t\t\t\tint flag=1;\n\t\t\t\tfor(int l=1;l<=s;l++){\n\t\t\t\t\tif(k+lenth[l]-1>j) continue;\n\t\t\t\t\tfor(int w=0;w<lenth[l];w++){\n//\t\t\t\t\t\tif(i==0&&j==3&&k==3&&l==1){\n//\t\t\t\t\t\t\tcout<<a[k+w]<<\" \"<<ss[l][w]<<endl;\n//\t\t\t\t\t\t}\n\t\t\t\t\t\tif(w==lenth[l]-1&&a[k+w]==ss[l][w]){\n\t\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(a[k+w]!=ss[l][w]) break;\n\t\t\t\t\t}\n\t\t\t\t\tif(flag==0) break;\n\t\t\t\t}\n\t\t\t\tif(flag==0) sum[i][j]++;\n\t\t\t}\n//\tcout<<sum[0][3]<<endl;\n//\tfor(int i=0;i<len;i++) {\n//\t\tfor(int j=0;j<len;j++)\n//\t\t\tcout<<sum[i][j]<<\" \";\n//\t\tcout<<endl;\n//\t}\n}\n\ninline void solve(){\n\tfor(int i=0;i<len;i++){\n\t\tf[i][1]=sum[0][i];\n\t\tfor(int j=0;j<i;j++)\n\t\t\tfor(int k=2;k<=min(m,j+1);k++){\n\t\t\t\tf[i][k]=max(f[i][k],f[j][k-1]+sum[j+1][i]);\n\t\t\t}\n\t\t}\n\tcout<<f[len-1][m]<<endl;\n}\n\nint main(){\n\tread();\n\tpre_work();\n\tsolve();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1570274708,
        "uid": 118918,
        "name": "whyl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u521a\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\u89c9\u5f97\u5f88\u8ff7\u832b\uff0c\u6ca1\u5165\u624b\u70b9\u4f46\u662f\u7a81\u7136\u770b\u5230\u4e86\u95ea\u4eae\u7684\u7a81\u7834\u53e3\uff1a\u9898\u76ee\u4e2d\u8bf4this\u5305\u542bthis\u548cis \u4f46\u4e0d\u5305\u542bth\u8fd9\u4e5f\u5c31\u662f\u8bf4\u5728\u4e00\u4e2a\u4e32\u5185\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u4e86\u8d77\u70b9\u7684\u5355\u8bcd\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u5373\u4f7f\u4ed6\u8fd8\u53ef\u4ee5\u6784\u6210\u522b\u7684\u5355\u8bcd\u4f46\u4ed6\u8fd8\u662f\u7528\u4e00\u6b21\u3002\u6bd4\u5982\uff1a\u4e32\uff1athisa\n\n\u5b57\u5178\uff1athis is th\n\n\u4e32\u4e2d\u6709this is th\u8fd9\u4e09\u4e2a\u5355\u8bcd\uff0c\u4f46\u662f\u5bf9\u4e8ethis \u548c th \u53ea\u7528\u4e00\u6b21\uff0c\u4e5f\u5c31\u662f\u8bf4\u679a\u4e3e\u4e00\u4e0b\u6784\u6210\u5355\u8bcd\u7684\u8d77\u70b9\uff0c\u53ea\u8981\u4ee5\u8be5\u8d77\u70b9\u7684\u4e32\u4e2d\u5305\u542b\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u4ee5\u8be5\u8d77\u70b9\u5f00\u5934\u7684\u5355\u8bcd\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u8fd9\u4e2a\u4e32\u4e2d\u591a\u5305\u542b\u4e00\u4e2a\u5355\u8bcd\u3002\n\n\u8fd9\u6837\u53ef\u4e00\u5f97\u51fa\u4e0b\u9762\u7684\u7ed3\u679c\uff1a\n\n\u6bcf\u4e3e\u7684\u8d77\u70b9                                   \u7ed3\u8bba\uff1a\n\nt                                            \u81f3\u5c11\u5305\u542b1\u4e2a\n\nh                                           \u81f3\u5c11\u5305\u542b1\u4e2a\n\ni                                            \u81f3\u5c11\u5305\u542b2\u4e2a\n\ns                                            \u81f3\u5c11\u5305\u542b2\u4e2a\n\na                                            \u81f3\u5c11\u5305\u542b2\u4e2a\n\n\u8003\u8651\u5230\u8fd9\u91cc\uff0c\u5c31\u6709\u70b9\u7709\u76ee\u4e86\u3002\n\n\u9898\u76ee\u4e2d\u8981\u5c06\u4e32\u5206K\u4e2a\u90e8\u5206\u4e5f\u5c31\u662f\u8bf4\u4ece\u4e00\u4e2a\u70b9\u622a\u65ad\u540e\u4e00\u4e2a\u5355\u8bcd\u5c31\u672a\u5fc5\u53ef\u4ee5\u6784\u6210\u4e86\u3002\u6bd4\u5982\u4e0a\u4f8b\u8981\u52063\u4e2a\u90e8\u5206\u5408\u7406\u7684\u5176\u4e2d\u7684\u4e00\u4e2a\u90e8\u5206\u81f3\u591a\u67093\u4e2a\u5b57\u6bcd\uff0c\u8fd9\u6837this \u8fd9\u4e2a\u5355\u8bcd\u5c31\u6784\u4e0d\u6210\u4e86\u3002\n\n\u8981\u662f\u52065\u4e2a\u90e8\u5206\uff0c\u90a3\u5c31\u8fde\u4e00\u4e2a\u5355\u8bcd\u90fd\u591f\u4e0d\u6210\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u9700\u8981\u5bf9\u4e0a\u9762\u505a\u4e2a\u6539\u52a8\uff0c\u4e0a\u9762\u7684\u53ea\u63a7\u5236\u4e86\u8d77\u70b9\uff0c\u800c\u5728\u9898\u76ee\u4e2d\u8fd8\u9700\u8981\u9650\u5236\u7ec8\u70b9\uff0c\u5206\u5b8c\u51e0\u4e2a\u90e8\u5206\u540e\uff0c\u6bcf\u90e8\u5206\u7ec8\u70b9\u4e0d\u540c\u53ef\u4ee5\u6784\u6210\u7684\u5355\u8bcd\u5c31\u4e0d\u540c\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u9700\u8981\u518d\u679a\u4e3e\u7ec8\u70b9\u4e86\u3002\n\n\u8bbe\u8ba1\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4sum[i,j]\u7edf\u8ba1\u4ecei\u5230j\u7684\u4e32\u4e2d\u5305\u542b\u7684\u5355\u8bcd\u7684\u4e2a\u6570\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:\n\nsum[i+1,j]+1            (s[i,j]\u4e2d\u5305\u542b\u4ee5S[i]\u5f00\u5934\u7684\u5355\u8bcd)\n\nsum[i,j]=\n\n          sum[i+1,j]             (\u4e0e\u4e0a\u9762\u76f8\u53cd)\n\n\u6ce8\uff1a(1)\u8fd9\u91cc\u679a\u4e3e\u5b57\u7b26\u7684\u8d77\u70b9\u7684\u987a\u5e8f\u662f\u4ece\u5c3e\u5230\u5934\u7684\u3002\n\n(2)\u6709\u4eba\u628a\u4e0a\u9762\u8fd9\u6b21\u4e5f\u770b\u505a\u662f\u4e00\u6b21\u52a8\u6001\u89c4\u5212\uff0c\u4f46\u6211\u89c9\u5f97\u66f4\u51c6\u786e\u7684\u8bf4\u662f\u9012\u63a8\u3002\n\n\u6c42\u51fa\u6240\u6709\u7684SUM\u8fd8\u5dee\u4e00\u6b65\uff0c\u5c31\u662f\u4e0d\u540c\u7684\u5212\u5206\u65b9\u6cd5\u663e\u7136\u7ed3\u679c\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u6c42\u89e3\u7684\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u628a\u539f\u95ee\u9898\u5206\u89e3\u6210\u5b50\u95ee\u9898\uff1a\u6c42\u628a\u4e00\u4e2a\u4e32\u5206\u6210K\u90e8\u5206\u7684\u6700\u591a\u5355\u8bcd\u4e2a\u6570\u53ef\u4ee5\u770b\u505a\u662f\u5148\u628a\u4e32\u7684\u6700\u540e\u4e00\u90e8\u5206\u5206\u51fa\u6765\uff0c\u5728\u628a\u524d\u9762\u4e00\u90e8\u5206\u5206\u89e3\u6210K-1\u4e2a\u90e8\u5206\uff0c\u663e\u7136\u51b3\u7b56\u5c31\u662f\u627e\u5230\u4e00\u79cd\u5212\u5206\u7684\u65b9\u6cd5\u662f\u524d\u9762\u7684K-1\u90e8\u5206\u7684\u5355\u8bcd+\u6700\u540e\u4e00\u90e8\u5206\u7684\u5355\u8bcd\u6700\u591a\u3002\n\n\u663e\u7136\u8fd9\u4e2a\u95ee\u9898\u6ee1\u8db3\u6700\u4f18\u5316\u539f\u7406\uff0c\u90a3\u6ee1\u8db3\u4e0d\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u5462\uff1f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4e32\u5206\u89e3\u51fa\u6700\u540e\u4e00\u90e8\u5206\u5728\u5206\u89e3\u524d\u9762\u7684\u90a3\u90e8\u5206\u662f\u66f4\u672c\u5c31\u4e0d\u4f1a\u6d89\u53ca\u5206\u597d\u7684\u8fd9\u90e8\u5206\uff0c\u6362\u53e5\u8bdd\u8bf4\u6ca1\u6b21\u5206\u89e3\u90fd\u56de\u628a\u4e32\u5206\u89e3\u7684\u66f4\u5c0f\uff0c\u5bf9\u4e8e\u5206\u89e3\u8fd9\u4e2a\u66f4\u5c0f\u7684\u4f20\u4e0d\u4f1a\u7528\u5230\u4e0d\u5c5e\u4e8e\u8fd9\u4e2a\u5c0f\u4e32\u7684\u5143\u7d20\u3002\u8fd9\u5c31\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u3002\n\n\u5177\u4f53\u6c42\u89e3\u8fc7\u7a0b\uff1a\n\n\u8bbe\u8ba1\u4e00\u4e2a\u72b6\u6001opt[i,j]\u8868\u793a\u628a\u4ece1\u5230j\u7684\u4e32\u5206\u6210i\u4efd\u53ef\u4ee5\u5f97\u5230\u6700\u591a\u7684\u5355\u8bcd\u7684\u4e2a\u6570\u3002\u51b3\u7b56\u5c31\u662f\u679a\u4e3e\u5206\u5272\u70b9\u4f7f\u5f53\u524d\u8fd9\u79cd\u5206\u5272\u65b9\u6cd5\u53ef\u4ee5\u83b7\u5f97\u6700\u591a\u7684\u5355\u8bcd\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1aopt[I,j]=max(opt[i-1,t]+sum[t+1,j])       (i<t<j)\n\n\u8fb9\u754c\u6761\u4ef6\uff1aopt[1,i]=sum[1,i]                         (0<i<=L)\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u72b6\u6001\u6570O\uff08N2\uff09\\*\u51b3\u7b56\u6570O\uff08N\uff09=O\uff08N3\uff09\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO\uff08N2\uff09\n\n```cpp\nconst\n  maxn=210;\nvar\n  s,ss:string;\n  opt,sum:array[0..maxn,0..maxn] of longint;\n  a:array[0..maxn] of string;\n  n,ii,P,k,L,nn:longint;\nprocedure init;\nvar\n  i:longint;\nbegin\n  readln(p,k);\n  s:='';\n  for i:=1 to p do\n    begin\n      readln(ss);\n      s:=s+ss;\n    end;\n  readln(n);\n  for i:=1 to n do\n    readln(a[i]);\nend;\nfunction find(i,j:longint):boolean;\nvar\n  t:longint;\nbegin\n  for t:=1 to n do\n    if pos(a[t],copy(s,i,j-i+1))=1 then exit(true);\n  find:=false;\nend;\nfunction max(x,y:longint):longint;\nbegin\n  max:=y;\n  if x>y then max:=x;\nend;\nprocedure main;\nvar\n  i,j,t:longint;\nbegin\n  L:=length(s);\n  for i:=L downto 1 do\n    for j:=i to L do\n      if find(i,j) then sum[i,j]:=sum[i+1,j]+1\n                     else sum[i,j]:=sum[i+1,j];\n  fillchar(opt,sizeof(opt),0);\n  opt[1]:=sum[1];\n  for i:=2 to k do\n    for j:=i+1 to L do\n      for t:=i+1 to j-1 do\n        opt[i,j]:=max(opt[i,j],opt[i-1,t]+sum[t+1,j]);\n  writeln(opt[k,L]);\nend;\nbegin\n  init;\n  main;\nend.\n\n```",
        "postTime": 1476618891,
        "uid": 8743,
        "name": "michenghao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8981\u4e0d\u662f\u6709DP\u6807\u7b7e\u6211\u8fd8\u771f\u60f3\u4e0d\u51fa\u8fd9\u79cd\u601d\u8def\u3002\n\n\u535a\u5ba2\u4e2d\u89c2\u770b\u4f53\u9a8c\u66f4\u4f73\uff1a[My Blog](https://xciyang.github.io/)\n\n### \u5206\u6790\n\n\u9996\u5148\u9898\u76ee\u63cf\u8ff0\u6709\u70b9\u4e0d\u6e05\u695a\uff0c\u7ed3\u5408\u6837\u4f8b\u66f4\u52a0\u597d\u7406\u89e3\u3002\u5dee\u4e0d\u591a\u4e3a\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7200\uff0c\u5355\u8bcd\u79cd\u7c7b\u4e0d\u8d85\u8fc76\u4e2a\uff0c\u5c06\u5b57\u7b26\u4e32\u520640\u6bb5\u6c42\u6700\u5927\u5355\u8bcd\u5339\u914d\u603b\u6570\u3002\n\n\u7136\u540e\u7ed9\u51fa\u4e86\u4e00\u4e2a\u6027\u8d28\uff0c\u4e00\u4e2a\u5b57\u7b26\u81ea\u80fd\u88ab\u5f53\u505a\u4e00\u6b21\u9996\u5b57\u7b26\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u7528\u7ebf\u6027\u505a\u6cd5\u3002\n\n\u6211\u4eec\u5148\u9884\u5904\u7406\uff0c\u6c42\u51fa\u6bcf\u4e2a\u5355\u8bcd\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5339\u914d\u4f4d\u7f6e\u3002\u90a3\u4e48\u5982\u679c\u51e0\u4e2a\u5355\u8bcd\u91cd\u53e0\u4e86\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u5b57\u7b26\u4e32\u4e2d\u67d0\u5b57\u7b26\u88ab\u5f53\u505a\u9996\u5b57\u6bcd\u65f6\uff0c\u5339\u914d\u6700\u77ed\u7684\u5355\u8bcd\u6700\u4f18\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5f53\u9996\u5b57\u6bcd\u65f6\u7684\u6700\u77ed\u957f\u5ea6\u3002\n\n\u5982\u679c\u4f7f\u7528string\u53ef\u4ee5\u4f7f\u7528find\u51fd\u6570\uff0c\u4f46\u8f93\u5165\u65f6\u8f83\u4e3a\u9ebb\u70e6\u3002\u6240\u4ee5\u6211\u7528char\u6570\u7ec4\u5b58\u50a8\uff0c\u5e76\u4f7f\u7528strstr\u51fd\u6570\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651DP\u65b9\u7a0b\u3002\uff08\u56e0\u4e3a\u6709DP\u6807\u7b7e\uff0c\u624d\u4f1a\u62fc\u51d1DP\u601d\u8def\uff0c\u8003\u573a\u4e0a\u8fd8\u771f\u4e0d\u4e00\u5b9a\u60f3\u51faDP\u89e3\u6cd5\uff09\n\n\u975e\u5e38\u5178\u578b\u7684\u8bbe\u4e00\u4e2a$F[N][K]$\uff0c\u8868\u793a\u5904\u7406\u5230\u7b2cN\u4e2a\u5b57\u7b26\uff0c\u5206\u5272\u4e3aK\u90e8\u5206\u3002\n\n\u5148\u4e0a\u7ecf\u5178\u8f6c\u79fb\u65b9\u7a0b\u8fdb\u884c\u4fee\u6539\u3002\n\n$$F[i][j] = max(F[i - 1][j], f[i - 1][j - 1])$$\n\n\u4f46\u4f60\u4f1a\u53d1\u73b0\u8fd9\u6837\u6ca1\u5730\u65b9\u52a0\u5165\u9884\u5904\u7406\u51fa\u7684\u6700\u77ed\u957f\u5ea6\u3002\u56e0\u4e3a\u540e\u9762\u8f6c\u79fb\u65f6\uff0c\u5355\u8bcd\u6709\u53ef\u80fd\u4ece\u4e2d\u95f4\u88ab\u5207\u5f00\uff0c\u8fd9\u6837\u6c42\u51fa\u7b54\u6848\u5c31\u662f\u9519\u4e86\u3002\n\n\u7136\u540e\u5c31\u5199\u4e86\u4e2a\u9b3c\u755c\u7684\u65b9\u7a0b\uff0c\u8bbe$W_i$\u4e3a\u5b57\u7b26\u4e32\u4e2d\u7b2ci\u5b57\u7b26\u5f53\u9996\u5b57\u6bcd\u65f6\u6700\u77ed\u957f\u5ea6\uff08\u5982\u679c\u4e0d\u80fd\u5339\u914d\u5219\u65e0\u9650\u5927\uff09\u3002\n\n\u6240\u4ee5$i$\u4f1a\u5f71\u54cd\u5230$i + W_i$\u540e\u7684\u7b54\u6848\uff0c\u4f7f\u4ed6\u4eec\u7b54\u6848+1\uff0c\u53d6\u4e2amax\u3002\n\n\u7136\u540e\u6211\u4eec\u4ee5j\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0ci\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u679a\u4e3e\u5373\u53ef\u3002\u56e0\u4e3a\u6211\u4eec\u5206\u9694\u5b57\u7b26\u53ea\u4f1a\u8ba9\u7b54\u6848\u53d8\u5c0f\uff0c\u6240\u4ee5\u5c06\u65b9\u7a0b\u6539\u4e3a\u3002\n\n$$F[i][j] = max(F[i][j], f[i - 1][j - 1])$$\n\n\n### \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\nusing namespace std;\nint p, k, s, w[405], len[7], a[405], f[205][45];\nchar tmps[405], zd[7][205];\nint main() {\n\tcin >> p >> k;\n\tfor(int i= 0; i < p; i++) cin >> (tmps + i * 20 + 1);\n\tp*= 20;\n\tmemset(w, 0x3f, sizeof(w));\n\tcin >> s;\n\tfor(int i= 1; i <= s; i++) {\n\t\tcin >> zd[i], len[i]= strlen(zd[i]);\n\t\tchar *st= strstr(tmps + 1, zd[i]);\n\t\twhile(st) {\n\t\t\tw[st - tmps]= min(w[st - tmps], len[i]);\n\t\t\tst= strstr(st + 1, zd[i]);\n\t\t}\n\t}\n\tfor(int l= 1; l <= k; l++) {\n\t\tfor(int i= l; i <= p; i++) {\n\t\t\tf[i][l]= max(f[i][l], f[i - 1][l - 1]);\n\t\t\tif(w[i] != 0x3f3f3f3f) {\n\t\t\t\tfor(int j= max(i + w[i] - 1, i + 1); j <= p; j++) f[j][l]= max(f[j][l], f[i][l]) + 1;\n\t\t\t\tif(w[i] == 1) ++f[i][l];\n\t\t\t}\n\t\t}\n\t}\n\tcout << f[p][k] << endl;\n\treturn 0;\n}\n```",
        "postTime": 1569385695,
        "uid": 109815,
        "name": "Ciyang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u600e\u4e48\u8bf4\u5462\uff0c\u8fd8\u662f\u4e0d\u9519\u7684\u5427\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u9898\u89e3\uff1a\n\n\u4ee5\u4e0b\u4e3a\u4ee3\u7801\u90e8\u5206\n\n\t#include<stdio.h>\n\n\t#include<string.h>\n\n\t#define inf 0x3f3f3f3f\n\n\t#include<algorithm>\n\t  \n\tusing namespace std;\n\n\tchar a[210],b[25];\n\n\tchar s[10][200];\n\tint len[10];\n\tint dis[1000];//\u8868\u793aa\u4ee5i\u5f00\u5934\u7684\u5b57\u7b26\u4e32\u5339\u914ds\u4e2d\u5b57\u7b26\u4e32\u7684\u6700\u5c0f\u7ed3\u5c3e\u5750\u6807 \n\tint dp[210][300];//dp[i][j]\u8868\u793a\u524di\u4e2a\u5b57\u7b26\uff0c\u5212\u5206\u4e3aj\u7ec4\u7684\u6700\u5927\u5355\u8bcd\u5339\u914d\u4e2a\u6570 \n\tint main()\n\t{\n\t\tint p,k;\n\t\tscanf(\"%d%d\",&p,&k);\n\t\tfor(int i=1;i<=p;i++)\n\t\t{\n\t\t\tscanf(\"%s\",b+1);\n\t\t\tstrcat(a+1,b+1);\n\t\t}\n\t//\tprintf(\"%s\",a+1);\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\t\t\n\t\tscanf(\"%s\",s[i]);\n\t\tlen[i]=strlen(s[i]);\n\t}\n\tmemset(dis,inf,sizeof(dis));\n\tint la=p*20;\n\tfor(int i=1;i<=la;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{//\u5bfb\u627e\u4ee5i\u5f00\u5934\u5339\u914d\u7684\u6700\u5c0f\u7ed3\u5c3e\u5750\u6807 \n\t\t\t\tif(dis[i]<=i+len[j]-1||i+len[j]-1>la) continue; \n\t\t\tint flag=0;\n\t\t\tfor(int w=0;w<=len[j]-1;w++)\n\t\t\t{\n\t\t\t\tif(a[i+w]!=s[j][w]) \n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag) continue;\n\t\t\tdis[i]=min(dis[i],i+len[j]-1);\n\t\t}\n\t}\n\tint num=0;\n\tfor(int i=1;i<=la;i++)\n\t{\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\tnum=0;\n\t\t\tfor(int w=i;w>=j;w--) //w>=j\u662f\u56e0\u4e3a\u524dw\u4e2a\u5b57\u7b26\u6700\u591a\u5206\u4e3aw\u7ec4\uff0c\u6240\u4ee5w>=j \n\t\t\t{\n\t\t\t\tif(dis[w]<=i) num++;\n\t\t\t\tdp[i][j]=max(dp[i][j],dp[w-1][j-1]+num);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",dp[la][k]);\n\treturn 0;\n\t}\n \n\u672c\u849f\u84bb\u7684\u7b2c\u4e09\u7bc7\u9898\u89e3\uff0c\u82e5\u6709\u4e0d\u8db3\uff0c\u8bf7\u591a\u591a\u6307\u6559",
        "postTime": 1566106993,
        "uid": 183233,
        "name": "\u4f0a\u8f6f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u6211\u548c\u5176\u4ed6\u9898\u89e3\u6709\u70b9\u4e0d\u4e00\u6837\u7684\u601d\u8defQAQ\n\n~~\u9996\u5148\u73c2\u4ee5\u77e5\u9053\u8fd9\u662f\u4e00\u9053DP~~\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u548c[P1018\u4e58\u79ef\u6700\u5927](https://www.luogu.org/problem/P1018)\u7684\u601d\u8def\u6709\u70b9\u50cf\n\n\u628a\u4e00\u4e2a\u5355\u8bcd\u5206\u6210 $k$ \u4efd\u5c31\u76f8\u5f53\u4e8e\u5728\u5355\u8bcd\u4e2d\u653e\u7f6e $(k-1)$ \u6761\u5206\u5272\u7ebf\n\n### \u4e3a\u65b9\u4fbf\u8bf4\u660e\uff0c\u4e0b\u6587\u628a $(k-1)$ \u76f4\u63a5\u7528 $k$ \u8868\u793a\n\n\u8bbe $f[i][j]$ \u4e3a\u5728\u7b2c $i$ \u4e2a\u5b57\u6bcd\u540e\u653e\u7b2c $j$ \u4e2a\u5206\u5272\u7ebf\uff0c\u524d $i$ \u4e2a\u5355\u8bcd\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\n\n**\u6ce8\u610f\u6bcf\u4efd\u5355\u8bcd\u4e0d\u80fd\u4e3a\u7a7a**\n\n\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u5728 **$f[i][k](k<=i<=n-k)+(i+1,n)$\u5bf9\u7b54\u6848\u7684\u8d21\u732e**\uff0c\u626b\u4e00\u904d\u53d6\u4e2a $max$\n\n### case1\uff1a\u5982\u4f55\u8f6c\u79fb\uff1f\n\n\u6211\u7684\u60f3\u6cd5\u8fd8\u662f\u6bd4\u8f83\u66b4\u529b\u7684\uff0c\u9996\u5148\u521d\u59cb\u5316 $f[i][1]$ \u5168\u90e8\u4e3a\u521d\u59cb\u5316\u4e3a$(1,i)$\u8fd9\u4e2a\u533a\u95f4\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\n\u7b2c\u4e00\u5c42\u5faa\u73af$j$\u679a\u4e3e**\u6b63\u5728\u653e\u7f6e\u7b2c$j$\u4e2a\u5206\u5272\u7ebf**$(2<=j<=k)$\uff1b\n\n\u7b2c\u4e8c\u5c42\u5faa\u73af$i$\u679a\u4e3e\u5206\u5272\u7ebf\u653e\u7f6e\u7684\u4f4d\u7f6e$(j<=i<=n-1)$;\n\n\u6700\u540e\u4e00\u5c42\u5faa\u73af$l$\u679a\u4e3e\u4ece\u524d\u9762\u7684\u54ea\u4e2a\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\n\n\u4e5f\u5c31\u662f\u5728($f[l][j-1]$+$(l+i,i)$\u8fd9\u4e2a\u533a\u95f4\u5bf9\u7b54\u6848\u7684\u8d21\u732e)\u4e2d\u53d6 $max$ $(j-1<=l<=i-1)$\n\n```cpp\nrep(i,1,n-1)\n f[i][1]=query(1,i);\nrep(j,2,k)\n rep(i,j,n-1)\n  rep(l,j-1,i-1)\n   f[i][j]=max(f[i][j],f[l][j-1]+query(l+1,i));\n```\n$query(l,r)$\u65e2\u533a\u95f4$(l,r)$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\n### case2:\u5982\u4f55\u7edf\u8ba1\u4e00\u4e2a\u533a\u95f4\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\n\u663e\u7136\u4e00\u4e2a\u533a\u95f4\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u4e2d\u5b57\u5178\u4e2d\u5355\u8bcd\u4e2a\u6570(\u53bb\u91cd\u540e)\n\n\u9898\u76ee\u4e2d\u7ed9\u51fa\u4e86\u4e00\u4e2a\u9650\u5236:**\u5f53\u9009\u7528\u4e00\u4e2a\u5355\u8bcd\u4e4b\u540e\uff0c\u5176\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e0d\u80fd\u518d\u7528\u3002**\n\n\u90a3\u6211\u4eec\u5c31\u73c2\u4ee5\u4f9d\u6b21\u5bf9\u5b57\u5178\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\u5c31\u5c06\u8be5\u5b57\u7b26\u5339\u914d\u4f4d\u7f6e\u7684\u5f00\u5934\u6807\u8bb0\u4e3a\u5339\u914d\u8fc7\uff0c\u4e0b\u56de\u5982\u679c\u5339\u914d\u5230\u540c\u4e00\u4f4d\u7f6e\u65e2\u4e0d\u5408\u6cd5\uff0c\u8df3\u8fc7\u8be5\u6b21\u5339\u914d\n\n```cpp\n//\u672c\u4eba\u4e60\u60ef\u5b57\u7b26\u4e32\u4e0b\u6807\u4ece1\u5f00\u59cb\ninline int cnt(int index,int l,int r){\n\tint len=r-l-strlen(word[index]+1)+2,res=0;//len\u4e3a\u5339\u914d\u6b21\u6570\uff0cres\u4e3a\u8be5\u5b57\u7b26\u4e32\u7684\u8d21\u732e\n\trep(i,0,len-1)\n\t rep(j,1,strlen(word[index]+1))\n\t  if((word[index][j]^str[l+i+j-1])||(trace[l+i]))\n\t   break;\n\t  else\n\t   if(j==strlen(word[index]+1))\n\t    ++res,trace[l+i]=true;\n\treturn res;\n}\ninline int query(int l,int r){ \n\trep(i,l,r)\n\t trace[i]=false;\n\tint res=0;\n\trep(i,1,s)//\u4f9d\u6b21\u5bf9\u6bcf\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5339\u914d\n\t if(r-l+1>=strlen(word[i]+1))//\u5982\u679c\u533a\u95f4\u957f\u5ea6>\u5b57\u7b26\u4e32\u957f\u5ea6\n\t  res+=cnt(i,l,r);//\u7edf\u8ba1\u8be5\u5b57\u7b26\u4e32\u7684\u8d21\u732e\n\treturn res;\n}\n```\n\n## \u796d\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define rint register int\n#define rc register char\n#define rll register long long \n#define rep(i,j,k) for(rint i=j;i<=k;++i)\n#define dow(i,j,k) for(rint i=j;i>=k;--i)\n#define MAXN 205\n#define N 10\nint p,k,ans=0,s,n;\nchar str[MAXN];\nint f[MAXN][MAXN];\nchar word[N][MAXN];\nbool trace[MAXN];\ninline int max(int a,int b){return a>b?a:b;}\ninline int min(int a,int b){return a<b?a:b;}//\u624b\u5199\u8f83\u5feb\ninline int cnt(int index,int l,int r){\n\tint len=r-l-strlen(word[index]+1)+2,res=0;//len\u4e3a\u5339\u914d\u6b21\u6570\uff0cres\u4e3a\u8be5\u5b57\u7b26\u4e32\u7684\u8d21\u732e\n\trep(i,0,len-1)\n\t rep(j,1,strlen(word[index]+1))\n\t  if((word[index][j]^str[l+i+j-1])||(trace[l+i]))\n\t   break;\n\t  else\n\t   if(j==strlen(word[index]+1))\n\t    ++res,trace[l+i]=true;\n\treturn res;\n}\ninline int query(int l,int r){ \n\trep(i,l,r)\n\t trace[i]=false;\n\tint res=0;\n\trep(i,1,s)//\u4f9d\u6b21\u5bf9\u6bcf\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5339\u914d\n\t if(r-l+1>=strlen(word[i]+1))//\u5982\u679c\u533a\u95f4\u957f\u5ea6>\u5b57\u7b26\u4e32\u957f\u5ea6\n\t  res+=cnt(i,l,r);//\u7edf\u8ba1\u8be5\u5b57\u7b26\u4e32\u7684\u8d21\u732e\n\treturn res;\n}\nvoid calc(){/\u7a0b\u5e8f\u6838\u5fc3dp\n\trep(i,1,n-1)\n     f[i][1]=query(1,i);\n    rep(j,2,k)\n     rep(i,j,n-1)\n      rep(l,j-1,i-1)\n       f[i][j]=max(f[i][j],f[l][j-1]+query(l+1,i));\n    rep(i,k,n-k)\n     ans=max(ans,f[i][k]+query(i+1,n));\n}\nvoid Debug(){//\u4e2a\u4eba\u8c03\u8bd5\u7528\n\trep(i,1,s)\n\t printf(\"%s\\n\",word[i]+1);\n\trep(i,1,n)\n\t rep(j,1,k)\n\t  printf(\"f[%d][%d]=%d\\n\",i,j,f[i][j]);\n}\nint main(){\n\tscanf(\"%d %d\\n\",&p,&k);\n\t--k;//\u5206\u5272\u7ebf\u6570\u91cf\n\trep(i,1,p)\n\t scanf(\"%s\",str+20*(i-1)+1);//s\u6bcf\u6b21\u8f93\u5165\u628a\u5b57\u7b26\u4e32\u62fc\u63a5\u5230\u4e0b\u6807\u4e3a20*(i-1)+1\u4e0a\uff0c+1\u662f\u56e0\u4e3a\u4e0b\u6807\u4ece1\u5f00\u59cb\n\tn=strlen(str+1);\n\tscanf(\"%d\",&s);\n\trep(i,1,s)\n\t scanf(\"%s\",word[i]+1);//\u4e0b\u6807\u4ece1\u5f00\u59cb\n\tcalc();\n\t//Debug();\n\tprintf(\"%d\\n\",ans);\n} \n```\n~~\u7b2c\u4e00\u6b21\u63d0\u4ea4\u5fd8\u4e86\u628aDebug\u6ce8\u91ca\u6389\u5c45\u7136\u8fd8\u670920\uff1f\u4f60\u8c37\u8bc4\u6d4b\u673a\u592a\u7384\u5b66~~",
        "postTime": 1564324143,
        "uid": 157603,
        "name": "\u5343\u53cd\u7530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "### \u4e4b\u524d\u4e5f\u6709\u4e00\u7bc7\u7528$KMP$\u5199\u6b64\u9898\u7684\uff0c\u4f46\u4e0e\u672c\u9898\u89e3\u72b6\u6001\u65b9\u7a0b\u6709\u51fa\u5165\uff0c~~\u800c\u4e14\u611f\u89c9\u6211\u7684\u65b9\u7a0b\u66f4\u5bb9\u6613\u7406\u89e3\u3002~~\n\n---\n\n### \u9898\u9762\uff1a\n\n\u7ed9\u4f60\u4e00\u6bb5\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u5206\u6210k\u4efd\uff0c\u95ee\u6bcf\u4efd\u4e2d\u7ed9\u5b9a\u5355\u8bcd\u6570\u7684\u548c\u6700\u5927\u662f\u591a\u5c11\uff1f\n\n$P.S$:\u540c\u4e00\u4e2a\u5f00\u5934\u4ec5\u53ef\u7528\u4e00\u4e2a\u5355\u8bcd\u3002\n\n### \u5206\u6790\uff1a\n\n\u62ff\u9053\u9898\u7684\u7b2c\u4e00\u611f\u89c9\u96be\u9053\u4e0d\u662f\u8d2a\u5fc3\u5417\uff1f\uff08\u96fe\uff09\n\n\u7531\u4e8e\u540c\u4e00\u4e2a\u5f00\u5934\u4ec5\u7528\u4e00\u5355\u8bcd\uff0c\u6211\u4eec\u7531\u8d2a\u5fc3\u7684\u601d\u60f3\u53ef\u77e5\uff0c**\u5f53\u9009\u7528\u957f\u5ea6\u8f83\u5c0f\u7684\u5355\u8bcd\u65f6\u53ef\u4ee5\u6700\u5927\u5316\u6211\u4eec\u5bf9\u4e8e\u5206\u79bb\u64cd\u4f5c\u7684\u8303\u56f4\u3002**\uff08\u76f8\u5f53\u4e8e\u4f60\u9009\"a\"\u4e3a\u5355\u8bcd\u53ea\u5360\u4e86\u4e00\u683c\uff0c\u9009\"abac\"\u4e4b\u540e\u8fd8\u97004\u683c\uff0c\u5982\u679c\u4f60\u8981\u5728\u8fd9\u5207\u4e00\u5200\u80af\u5b9a\u9009\u524d\u9762\u7684\u5212\u7b97\uff09\n\n\u90a3\u6211\u4eec\u53ef\u4ee5\u641e\u4e00\u4e2a$last[i]$\u6570\u7ec4\uff0c\u8868\u793a\u4ee5\u7b2ci\u4f4d\u4e3a\u5355\u8bcd\u9996\u4f4d\u7684\u672b\u4f4d\u70b9\u6700\u5c0f\u662f\u591a\u5c11\u3002\u8fd9\u6837\u81ea\u7136\u5c31\u60f3\u5230$KMP$\u7b97\u6cd5\u53ef\u4ee5\u5728$O(NM)$\u4f18\u79c0\u7684\u65f6\u95f4\u91cc\u89e3\u51b3\u6240\u6709\u5355\u8bcd\u5728\u5404\u4e2a\u70b9\u6240\u5360\u7684\u957f\u5ea6\u5566\uff01\n\n\u641e\u51fa\u8fd9\u4e2a\u6570\u7ec4\uff0c\u6211\u4eec\u8bbe$f[i][j]$\u4e3a\u524di\u4f4d\uff0c\u7528\u4e86j\u4e2a\u5206\u9694\u7b26\u6240\u5f97\u5230\u7684\u6700\u591a\u5355\u8bcd\u6570\u3002\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u6700\u540e\u4e00\u4e2a\u5206\u9694\u7b26\u7684\u4f4d\u7f6e\u6765\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\u3002\u5177\u4f53\u53ef\u770b\u4ee3\u7801\u6ce8\u91ca\u3002\n\n### \u4e0a\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstring>\n#define b i-le[x]+1\nusing namespace std;\n\nstring str,s,wo[800];\nint n,p,k,l,le[800];\nint nex[800],last[800];\nint f[800][50]; //f[i,j]-->\u524di\u4e2a,j\u7684\u5206\u5272\u5f97\u5230\u6700\u591a \n\nvoid getnext(string s1,int x)\n{\n    int p=-1; memset(nex,0,sizeof(nex)); nex[0]=-1;\n    //\u6bcf\u6b21\u90fd\u8981\u521d\u59cb\u5316 \n    for (int i=1;i<le[x];i++)\n    {\n        while (p>=0&&s1[i]!=s1[p+1]) p=nex[p];\n        if (s1[p+1]==s1[i]) p++; nex[i]=p;\n    }\n}\n\nvoid kmp(string s1,int x)\n{\n    int p=-1;\n    for (int i=1;i<=l;i++)\n    {\n        while (p>=0&&s[i]!=s1[p+1]) p=nex[p];\n        if (s[i]==s1[p+1]) p++;\n        if (p==le[x]-1) last[b]=min(last[b],i);\n    }\n}\n\nint main()\n{\n    cin>>p>>k;  s=\"&\";  //\u8ba9DP\u4ece1\u5f00\u59cb \n    for (int i=1;i<=p;i++) cin>>str,s+=str;\n    cin>>n; l=s.size()-1;\n    memset(last,0x3f,sizeof(last));  //\u521d\u59cb\u5747\u4e0d\u53ef\u7528\u4f5c\u8d77\u70b9 \n    for (int i=1;i<=n;i++) cin>>wo[i],le[i]=wo[i].size();\n    for (int i=1;i<=n;i++)\n    {\n        getnext(wo[i],i); kmp(wo[i],i);  //\u627e\u6bcf\u4e2a\u5355\u8bcd\u5bf9last\u6570\u7ec4\u7684\u8d21\u732e \n    }\n    for (int i=1;i<=l;i++)   //\u5982\u4e0aDP \n    for (int j=1;j<=k;j++)\n    {\n        int t=0;\n        for (int h=i;h>=j;h--) {  //h->\u7b2cj\u4e2a\u5206\u9694\u7b26\u7684\u4f4d\u7f6e\n\t\t//\u5f53\u524d\u6700\u9ad8\u4f4d\u65f6i\uff0c\u5206\u9694\u7b26\u6700\u5c0f\u4e5f\u5728j\u5904\u3002\u901a\u8fc7\u5012\u5e8f\u8f6c\u79fb\u3002 \n            if (last[h]<=i) t++; //\u5224\u65ad\u7b2ch\u4f4d\u7684\u5355\u8bcd\u662f\u5426\u5728\u8303\u56f4\u5185 \n            f[i][j]=max(f[i][j],f[h-1][j-1]+t);\n\t\t\t//\u627e\u5230\u524d(j-1)\u4e2a\u5206\u9694\u7b26\u6240\u5f97\u5230\u7684\u6700\u4f73\u7b54\u6848\u8f6c\u79fb\u3002 \n        }\n    }\n    cout<<f[l][k]<<endl;\n}\n```",
        "postTime": 1563125458,
        "uid": 15984,
        "name": "\u5929\u6cfd\u9f9f",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u5f88\u4e45\u4ee5\u524d\u5c31\u60f3\u505a\u8fd9\u9053\u9898\u4e86\uff0c\u4f46\u4e00\u76f4\u4e0d\u77e5\u9053\u600e\u4e48\u505a\uff0c\n\u76f4\u5230\u4eca\u5929\u624d\u53d1\u73b0\u6211\u4e4b\u524d\u4e00\u76f4\u770b\u9519\u9898\u4e86\u3002\u3002\u3002\u3002\n\n\u5176\u5b9e\u6211\u89c9\u5f97\u8fd9\u9053\u9898\u662f\u8d2a\u5fc3\u9884\u5904\u7406\u5355\u8bcd\u5339\u914d + dp\u5904\u7406k\u4e2a\u90e8\u5206\n\n\u9996\u5148\u7531\u4e8e\u6570\u636e\u5f88\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5fc5\u8003\u8651\u600e\u4e48\u4f18\u5316\uff0c\u600e\u4e48\u66b4\u529b\u600e\u4e48\u505a\n\n\u901a\u8fc7\u89c2\u5bdf\u5355\u8bcd\u5339\u914d\u89c4\u5219\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\n\n\u6bcf\u6b21\u53d6\u6700\u77ed\u7684\u5355\u8bcd\u5339\u914d\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c\n\n\u5176\u5b9e\u5982\u679c\u5355\u72ec\u8bba\u5339\u914d\u5355\u8bcd\u7684\u8bdd\uff0c\u56e0\u4e3a\u53ea\u6d88\u8017\u4e32\u9996\uff0c\n\n\u6240\u4ee5\u9009\u54ea\u4e2a\u5355\u8bcd\u90fd\u662f\u4e00\u6837\u7684\uff0c\n\n\u4f46\u95ee\u9898\u5728\u4e8e\u6211\u4eec\u9700\u8981\u5c06\u4e32\u5206\u4e3ak\u4e2a\u90e8\u5206\uff0c\n\n\u6240\u4ee5\u4e3a\u4e86\u4fdd\u8bc1\u6bcf\u4e2a\u5b57\u7b26\u90fd\u5145\u5206\u5229\u7528\uff0c\n\n\u5fc5\u987b\u8981\u9009\u6700\u77ed\u7684\u5355\u8bcd\uff0c\n\n\u56e0\u6b64\u6211\u4eec\u5148\u66b4\u529b\u5355\u8bcd\u5339\u914d\uff0c\n\n\u9884\u5904\u7406\u51fa\u4e00\u4e2astart\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u50a8\u5b58\u4ee5i\u4e3a\u5f00\u5934\u7684\u53ef\u4ee5\u5339\u914d\u7684\u5355\u8bcd\u4e2d\u6700\u77ed\u7684\u4e00\u4e2a\u5339\u914d\u5230\u4e86\u54ea\u91cc\n\n\uff5e\uff5e\uff5e\uff5e\u8d2a\u5fc3\u5b8c\uff5e\uff5e\uff5e\uff5e\n\n\u7136\u540e\u7c7b\u4f3c\u4e8e\u4e58\u79ef\u6700\u5927\u7684DP\n\nf[i][j]\u8868\u793a\u5230\u7b2ci\u4f4d\u5206\u4e3aj\u4e2a\u90e8\u5206\u7684\u6700\u5927\u503c\n\n\u4e8e\u662f\u679a\u4e3ei\u548cj\uff0c\u7136\u540e\u679a\u4e3e\u7b2cj\u4e2a\u90e8\u5206\u7684\u5f00\u7aef\u5373\u53ef\uff08\u56e0\u4e3ai\u662f\u7b2cj\u4e2a\u90e8\u5206\u7684\u7ed3\u5c3e)\n\n\uff5e\uff5e\uff5eDP\u5b8c\uff5e\uff5e\uff5e\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define R register int\nchar s[8][1000],c[250];\nint p,k,n;\nint len[8],start[250];\nint f[250][50];\n\ninline void upmax(int &a,int b)\n{\n\tif(b > a) a = b;\n}\n\nvoid pre()//\u8bfb\u5165\u6570\u636e\u5e76\u9884\u5904\u7406\n{\n\tscanf(\"%d%d\",&p,&k);\n\tint now=1;\n\tfor(R i=1; i<=p ;i++)\tscanf(\"%s\",c+now),now+=20;\n\tscanf(\"%d\",&n);\n\tfor(R i=1; i<=n ;i++)\n\t{\n\t\tscanf(\"%s\",s[i]+1);\n\t\tlen[i]=strlen(s[i]+1);\n\t}\n\tp*=20;\n\tfor(R i=1; i<=p ;i++)\n\t{\n\t\tR minn=999999;//\u8fd9\u91ccq\u4e5f\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u540e\u9762\u7684start\u6570\u7ec4\u4f1a\u7528\u5230\u8fd9\u4e2a\u521d\u59cb\u5316\n\t\tfor(R j=1; j<=n ;j++)\n\t\t{\n\t\t\tR now=i;bool z=true;\n\t\t\tfor(R l=1; l<=len[j] ;l++)\n\t\t\t{\n\t\t\t\tif(c[now++] != s[j][l]) \n\t\t\t\t{\n\t\t\t\t\tz=false;\n\t\t\t\t\tbreak;//\u53d1\u73b0\u4e0d\u5339\u914d\u5c31\u9000\u51fa\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(z && len[j] < minn)\n\t\t\t\tminn=len[j];\n\t\t}\n\t\tstart[i]=i + minn -1;//\u5b58\u4ee5i\u4e3a\u5f00\u7aef\u80fd\u591f\u5339\u914d\u4e0a\u7684\u6700\u77ed\u4e32\u3002\u8fd9\u6837\u53ef\u4ee5\u5728\u5212\u5206\u533a\u95f4\u65f6\u5c3d\u91cf\u4fdd\u6301\u6700\u4f18\n\t}\n}\n\nvoid work()\n{\n\tfor(R i=1; i<=p ;i++)//\u5230\u7b2ci\u4f4d\u5206\u6210k\u4e2a\u90e8\u5206\n\t\tfor(R j=1; j<=k ;j++)\n\t\t{\n\t\t\tint t=0;//\u4e0b\u9762\u679a\u4e3e\u7b2ck\u4e2a\u90e8\u5206\u7684\u5f00\u7aef\n\t\t\tfor(R l=i; l>=j ;l--)//\u524d\u9762\u5206\u6210k-1\u4e2a\u90e8\u5206\uff0c\u7b2ck\u4e2a\u90e8\u5206\u81f3\u5c11\u4ecek\u5f00\u59cb\n\t\t\t{//\u56e0\u4e3a\u4e0b\u9762\u8981\u7edf\u8ba1\u533a\u95f4\u5185\u53ef\u4ee5\u5339\u914d\u7684\u6700\u591a\u5355\u8bcd\uff0c\u6240\u4ee5\u8981\u4ece\u5c0f\u533a\u95f4\u5f00\u59cb\u6269\u5c55\u5230\u5927\u533a\u95f4\n\t\t\t//\u540c\u65f6\u4e5f\u662f\u4e3a\u4e86\u65b9\u4fbf\u4e14\u5feb\u6377\u7684\u7edf\u8ba1l ~ i\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u5339\u914d\u5355\u8bcd\u6570\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u7528\u5728\u591a\u4e00\u4e2a\u5faa\u73af\u6c42\uff0c\u800c\u662fO(1)\u9012\u63a8\n\t\t\t\tif(start[l] <= i) t++;//\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u5bb9\u7eb3\u7684\u4e0b\u5c31\u7edf\u8ba1\u8fdb\u8fd9\u4e2a\u533a\u95f4\u6700\u591a\u5339\u914d\u5355\u8bcd\n\t\t\t\tupmax(f[i][j],f[l-1][j-1] + t);\n\t\t\t}\n\t\t}\n\tprintf(\"%d\\n\",f[p][k]);\n}\n\nint main()\n{\n\tfreopen(\"in.in\",\"r\",stdin);\n\tpre();\n\twork();\n\tfclose(stdin);\n\treturn 0;\n}\n```",
        "postTime": 1521211330,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u4e3b\u8981\u662f\u6ca1\u60f3\u5230\u80fd\u8fc7\u3002\u3002\u3002\u3002\u3002\u5c45\u7136\u4e00\u628a\u8fc7\u4e86\n\n\u6ce8\u610f\u51e0\u70b9\uff1a1.\u5f00\u59cb\u6211\u7ea0\u7ed3\u5206\u6bb5\u8f93\u5165\uff0c\u5176\u5b9e\u662f\u8fde\u7740\u7684\uff0c\u5c31\u662f\u4f60\u628a\u6574\u4e2a\u8f93\u5165\u5b58\u5165\u4e00\u4e2a\u6570\u7ec4\u5c31\u884c\u4e86\n\n2.\u6211\u53d1\u73b0\u5b9e\u8d28\u95ee\u9898\u5c31\u662f\u5206\u7ec4\u7684\u65f6\u5019\uff0c\u5207\u4e0d\u540c\u7684\u70b9\u4f1a\u9020\u6210\u4e0d\u4e00\u6837\u7684\u7ed3\u679c\uff0c\u6211\u7684\u7406\u89e3\u5c31\u662f\u9009\u53d6\u6700\u4f18\u7684\u5207\u70b9\u3002\n\n3.\u9898\u76ee\u5f88\u957f\uff0c\u5f88\u591a\u6ca1\u7528\u7684\u4fe1\u606f\uff0c\u5f00\u59cb\u6211\u4e5f\u641e\u4e0d\u61c2\u8fd9\u9898\u76ee\u4ec0\u4e48\u610f\u601d\uff0c\u4f46\u5f88\u5bb9\u6613\u5c31\u8fc7\u4e86\uff0c\u5176\u5b9e\u4e0d\u96be\u3002\n\n\u6211\u7684\u7406\u89e3\u5c31\u662f\uff0c\u4e00\u5f00\u59cb\uff0c\u4e0d\u5206\u5f00\u548c\u4e00\u5b9a\u662f\u6700\u5927\u7684\uff0c\u4f60\u53ea\u8981\u4f9d\u6b21\u904d\u5386\u6bcf\u4e2a\u70b9\uff0c\u770b\u80fd\u5426\u627e\u5230\u7b26\u5408\u7684\u5355\u8bcd\uff0c\u627e\u5230\u4e00\u4e2a\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u627e\u5230\u4e00\u4e2a\u5355\u8bcd\u53ea\u5f71\u54cd\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u3002\u4ecei\u548ci+1\u4e4b\u95f4\u5206\u5f00\u610f\u5473\u7740\u539f\u6765\u53ef\u80fd\u8fde\u6210\u5355\u8bcd\u7684\u88ab\u62c6\u5f00\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u627e\u5230\u6bcf\u6b21\u5206\u5f00\u4f7f\u5f97\u5931\u53bb\u5355\u8bcd\u6570\u6700\u5c0f\u7684\u5207\u5f00\u70b9\u5c31\u884c\u4e86\u3002\n\n\u6211\u7684\u601d\u8def\u7b97\u662f\u8d2a\u5fc3\u4e86\u5427\n\n\u7528d[i]\u8868\u793a\u62c6\u5206\u6210i\u4e2a\uff0c\u80fd\u5f97\u5230\u6700\u5927\u7684\u548c  \u7528t[i]\u8868\u793ai\u5230i+1\u4e2d\u95f4\u662f\u5426\u5df2\u88ab\u5207\u8fc7 0\u8868\u793a\u6ca1\u6709\uff0c1\u8868\u793a\u5df2\u7ecf\u88ab\u5207\u5f00\u8fc7\n\n\u9996\u5148\u5f88\u660e\u663ed[1] = \u6574\u4e2a\u5b57\u7b26\u4e32\u5305\u542b\u7684\u6240\u6709\u5355\u8bcd\u548c\n\n\u7136\u540e\u4ece2-k\u8d2a\u5fc3\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u904d\u5386\u627e\u51fa\u4ece\u8fd9\u4e2a\u70b9\u5207\u5f00\uff0c\u5bfc\u81f4\u5355\u8bcd\u5f3a\u884c\u5206\u5f00\u7684\u70b9\u7684\u6570\u76ee\u6700\u5c11\u7684 \u5373 d[i] = d[i-1]+minum(\u6b64\u4e3a\u6700\u4f73\u5207\u70b9\uff0c\u5931\u53bb\u7684\u5355\u8bcd\u6570\u76ee\u6700\u5c11)\n\n\u6700\u540ed[k]\u5c31\u662f\u7b54\u6848\n\n\u6e90\u4ee3\u7801\uff1a\n\n```cpp\n#include<stdio.h>\n#define min(a,b) ((a)<(b)?(a):(b))\n#define LEN 20\nchar c[201] = {0}, word[6][200] = {0};\nint d[41] = {0}, t[41] = {0};\nint main()\n{\n    int p, k, s, i, j, m, n, f, g, minum;\n    scanf(\"%d%d\", &p, &k);\n    for(i = 0; i < p; i++)\n        scanf(\"%s\", c+i*LEN+1);\n    scanf(\"%d\", &s);\n    for(i = 0; i < s; i++)\n        scanf(\"%s\", word[i]);\n    for(i = 1; i <= p*LEN; i++)\n        for(j = 0; j < s; j++)\n        {\n            for(m = 0; word[j][m] != 0; m++)\n                if(word[j][m] != c[i+m])\n                    break;\n            if(word[j][m] == 0)\n            {\n                d[1]++;\n                break;\n            }\n        }\n    for(i = 2; i <= k; i++)\n    {\n        minum = 99999;\n        for(j = 1; j <= p*LEN-1; j++)\n            if(!t[j])\n            {\n                f = 0;\n                for(m = 0; m < s; m++)\n                    for(n = 0; word[m][n+1] != 0; n++)\n                        if(word[m][n] == c[j] && word[m][n+1] == c[j+1])\n                        {\n                            f++;\n                            break;\n                        }\n                if(minum > f)\n                {\n                    minum = f;\n                    g = j;\n                }\n            }\n        d[i] = d[i-1]-minum;\n        t[g] = 1;\n    }\n    printf(\"%d\\n\", d[k]);\n    return 0;\n}\n```",
        "postTime": 1500707492,
        "uid": 42653,
        "name": "deepsleeping",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "##\u8fd9\u9898dp\u65b9\u6cd5\u7684\u9012\u63a8\u5f0f\u5176\u5b9e\u96be\u4e8e\u63a8\u5bfc\u548c\u7406\u89e3\u7684\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e00\u79cd\u7b80\u6d01\u7684\u9012\u5f52\u7206\u7834\u6cd5=v=\n\n###\u601d\u8def\uff1a\n\n1\uff0c\u628a\u5f88\u591a\u884c\u7684\u4e32\u5408\u5e76\u4e3a\u4e00\u4e2a\u4e32\n\n2\uff0c\u626b\u63cf\u4e32\u4e2d\u6240\u6709\u7684\u9996\u5b57\u6bcd\uff0c\u5982\u679c\u6784\u6210\u5355\u8bcd\uff0c\u628a\u5355\u8bcd\u7684\u7ed3\u5c3e\u52a0\u5165\u6570\u7ec4d\u4e2d\uff0c\u90a3\u4e48 i\uff0cd[i] \u5c31\u4ee3\u8868\u4e86\u4e00\u4e2a\u5355\u8bcd\u7684\u5934\u5c3e\n\n3\uff0c\u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\u8fdb\u884c\u9012\u5f52\u7684\u5212\u5206\uff0c\u76f4\u5230\u53ea\u5269\u4e00\u6b21\u5212\u5206\u673a\u4f1a\uff0c\u5c31\u628a\u5269\u4e0b\u7684\u6240\u6709\u5b57\u7b26\u90fd\u7528\u4e0a\n\n4\uff0c\u7edf\u8ba1\u5404\u6bb5\u7684\u5355\u8bcd\u4e4b\u548c\uff0c\u66f4\u65b0\u6700\u5927\u503c\uff08\u4e5f\u5c31\u662f\u679a\u4e3e\u4e86\u6240\u6709\u7684\u5212\u5206\u60c5\u51b5\uff09\n\n**\u7edf\u8ba1\u5404\u6bb5\u5355\u8bcd\u5229\u7528\u6570\u7ec4d\u6765\u5b8c\u6210\uff0c\u5373\u68c0\u67e5\u4ee5\u67d0\u4e2a\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd\u7ed3\u5c3e\u662f\u5426\u5728\u8fd9\u4e2a\u6bb5\u4e2d\uff0c\u8ba1\u7b97\u8fc7\u7684\u6bb5\u7ed3\u679c\u4fdd\u5b58\u8d77\u6765\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22**\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff1a\n\n\n\n\n\n    \n\n```cpp\n#include<algorithm>\nusing namespace std;\n#include<cstring>\n#include<vector>\n#include<cstdio>\n//#include<iostream>\n//#include<cmath>\n//#include<queue>\nint p,k,s,e;\nchar a[256];\nint d[256]={0};\nint dp[256][256]={0};\nstruct Word{\n    char s[128];        //\u5355\u8bcd\u4fe1\u606f \n    int len;            //\u5355\u8bcd\u957f\u5ea6 \n};\nWord w[6];\n//\u5224\u65ad\u4ee5i\u5f00\u5934\u5230r\u4e4b\u95f4\u7684\u4e32\u662f\u5426\u548c\u5355\u8bcdj\u5339\u914d \nbool match(int i,int r,int j){\n    if(r-i+1<w[j].len) return 0;        //\u5269\u4f59\u957f\u5ea6\u5c0f\u4e8e\u5355\u8bcd\u957f\u5ea6 \n    for(int x=0;x<w[j].len;x++){\n        if(a[i+x]!=*(w[j].s+x)) return 0;\n    }\n    return 1;\n}\n//\u7edf\u8ba1l\uff0cr\u4e4b\u95f4\u7684\u5355\u8bcd\u6570\u76ee\uff0c\u6784\u9020d[256]\u6570\u7ec4 \nint calc(int l,int r){\n    int sum=0;\n    for(int i=l;i<=r;i++){\n        for(int j=0;j<s;j++){\n            //\u5bf9\u4e8e\u540c\u4e00\u4e2a\u9996\u5b57\u6bcd\uff0c\u5c3d\u53ef\u80fd\u9009\u53d6\u8f83\u77ed\u7684\u5355\u8bcd\u8fdb\u884c\u5339\u914d \n            if(d[i]-i+1>w[j].len&&match(i,r,j)==1){\n                d[i]=i+w[j].len-1;    //d[i]\u4fdd\u5b58\u4ee5i\u5f00\u5934\u7684\u5355\u8bcd\u7684\u672b\u5c3e \n                //sum++;\n            }\n        } \n    }\n    return sum;\n}\nint fun(int l,int r){\n    if(dp[l][r]) return dp[l][r];\n    int sum=0;\n    for(int i=l;i<=r;i++){\n        if(d[i]<=r) sum++;\n    }\n    return dp[l][r]=sum;\n}\nint wi=0,MAX=0;\n//s\u4e3a\u5f00\u59cb\u70b9\uff0ck\u4e3a\u5269\u4f59\u6bb5\u6570 \nvoid dfs(int s,int k){\n    //\u53ea\u5269\u4e00\u6b21\uff0c\u5168\u90e8\u5206\u5b8c\n    int temp;\n    if(k==1){\n        temp=fun(s,e);\n        wi+=temp;\n        MAX=max(MAX,wi);\n        wi-=temp;\n        return;\n    }\n    for(int i=s;i<=e-k+1;i++){\n        temp=fun(s,i);\n        wi+=temp;\n        dfs(i+1,k-1);\n        wi-=temp;\n    }\n}\nint main(){\n    memset(d,127,sizeof(d));    //d[256]\u521d\u59cb\u5316\u4e3a\u5f88\u5927\u7684\u5e38\u6570\n    scanf(\"%d%d\",&p,&k);\n    for(int i=0;i<p;i++){\n        scanf(\"%s\",&a[i*20]);\n    }\n    scanf(\"%d\",&s);\n    for(int i=0;i<s;i++){\n        scanf(\"%s\",w[i].s);\n        w[i].len=strlen(w[i].s);\n    }\n    e=strlen(a)-1;\n    calc(0,e);\n    dfs(0,k);\n    printf(\"%d\\n\",MAX);\n    return 0;\n}\n```",
        "postTime": 1492269305,
        "uid": 36069,
        "name": "blueloveTH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u521a\u5f00\u59cb\u60f3\u4e0d\u51fa\u8fd9\u662f\u4e00\u9053\u52a8\u89c4\u9898\u76ee\uff0c\u6700\u5f00\u59cb\u7528\u66b4\u529b\u505a\uff0c\u53d1\u73b0\u6df1\u641c\u6df1\u5ea6\u592a\u6df1\uff0c\u4e8e\u662f\u5c31\u6362\u4e86\u601d\u8def\uff0c\u8fd9\u662f\u52a8\u89c4\u65b9\u7a0b:\n\nf[i][j]=max(f[r][j-1]+w[r+1][i] ),r=j->i-1\n\n\u628a0->r\u7684\u5b50\u4e32\uff0c\u548cr+1->i\u7684\u5b57\u6bcd\u5206\u6210\u4e24\u6bb5\u5206\u522b\u6c42\uff0c\u800cw[i][j]\u5c31\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u6c42\n\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u7528\u4e86STL,\u8c8c\u4f3c\u4f1a\u5feb\u4e00\u70b9\n\n\n\n\n\n        \n\n```cpp\n#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\nconst int MAXL=205;\nint m[MAXL][MAXL],f[MAXL][45];\nint p,k,s,len;\nstring str,a;\nvector <string> g[26];\nbool can(string aa)//\u5b50\u4e32aa\u4e2d\u6709\u6ca1\u6709\u5355\u8bcd\n{\n    if(g[aa[0]-'a'].empty()) return false;\n    else for(vector<string>::iterator i=g[aa[0]-'a'].begin();i!=g[aa[0]-'a'].end();i++)\n    {\n        str=*i;\n        if(aa.length()>=str.length()&&aa.substr(0,str.length())==str) return true;\n    }\n    return false;\n}\nint main()\n{\n    cin>>p>>k;\n    len=20*p;\n    for(int i=0;i<p;i++) \n    {\n        cin>>str;\n        a+=str;\n    }\n    cin>>s;\n    for(int i=0;i<s;i++) \n    {\n        cin>>str;\n        g[str[0]-'a'].push_back(str);\n    }\n    for(int j=len-1;j>=0;j--) for(int i=j;i>=0;i--)\n        m[i][j]=m[i+1][j]+can(a.substr(i,j-i+1));\n    f[0][0]=m[0][0];\n    for(int i=1;i<k;i++) f[i][i]=f[i-1][i-1]+m[i][i];\n    for(int i=0;i<len;i++) f[i][0]=m[0][i];\n    for(int i=0;i<len;i++) for(int j=1;j<k&&j<i;j++)\n        for(int r=j;r<i;r++)\n                if(f[i][j]<f[r][j-1]+m[r+1][i])\n                    f[i][j]=f[r][j-1]+m[r+1][i];\n    cout<<f[len-1][k-1]<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1475751957,
        "uid": 25015,
        "name": "dorence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u7ffb\u9898\u89e3\uff0c\u53d1\u73b0\u6ca1\u6709ac\u81ea\u52a8\u673a\u7684\u3002so\uff0c\u6211\u6765\u53d1\u4e00\u7bc7\uff08\u6ee5\u7afd\u5145\u6570\uff09\ndp\u601d\u8def\u5f88\u597d\u60f3\uff0cf[i][j] \u8868\u793a\u524di\u4e2a\u4e2d\uff0c\u653e\u4e86j\u4e2a\u9694\u677f\u3002\u5176\u4e2d\uff0c\u7b2cj\u4e2a\u9694\u677f\u653e\u5728\u7b2ci\u4e2a\u7684\u540e\u9762\u3002\n\n\u524d\u7f6e\u77e5\u8bc6[AC\u81ea\u52a8\u673a](https://www.luogu.org/problem/P3808)\uff08\u53bb\u7ffb\u4e00\u7ffb\u9898\u89e3\uff09\u3002~~\uff08\u53ef\u4ee5\u53bb\u4e0b\u9762\u770b\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\uff0c\u624b\u6253\uff0c\u53ef\u80fd\u4e0d\u597d\u7406\u89e3\uff09~~\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1af[i][j]=max(f[k][j-1]+find(k+1,i) |k\u2208[j,i-1] );\n  \u6b64\u5904\u5de6\u8fb9\u754c\u662fj\uff0c\u524dj\u4e2a\u4e2d\u624d\u80fd\u653e\u5f00j\u4e2a\u9694\u677f\uff0c\u3002\n  \u5982\u679c\u4e0d\u8bbe\u7f6e\u5de6\u8fb9\u754c\uff0c\u524df[1][2]=f[1][1]+find(2,1); (\u5176\u4e2dfind\u51fd\u6570\u8fd4\u56de0\uff0cf[1][2]=f[1][1] \uff1b\u4f46\u5b9e\u9645\u4e0af[1][2]\u662f\u4e0d\u5b58\u5728\uff0c\u6216\u8005\u662f\u8d1f\u65e0\u7a77\u7684\u3002\uff08\u8fd8\u4f1a\u4ee5\u6b64\u4e3a\u57fa\u7840\uff0c\u66f4\u65b0\u51fa\u4e00\u7cfb\u5217\u9519\u8bef\u7684f[1][k]|k\u2208[2,top]\uff09**top\u662f\u603b\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u3002**\n \n \u53e6\u5916 \uff0c\u6a21\u5f0f\u4e32\u4e2d\u91cd\u590d\u7684\u5355\u8bcd\u7b97\u4e00\u4e2a\uff08\u7b2c\u56db\u4e2a\u4f1awa\uff09\n \n\u9644\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring s;\nint ann[3000003],p,k,top,a[300],node[3000001][26],num;\nvoid build(string t) {     //\u5efa\u7acb\u5b57\u5178\u6811\u7684\u57fa\u672c\u64cd\u4f5c\n\tint root=0;\n\tfor(int i=0;i<t.length();i++) {\n\t\tif(node[root][t[i]-'a']) {\n\t\t\troot=node[root][t[i]-'a'];\n\t\t}\n\t\telse node[root][t[i]-'a']=++num,root=num;\n\t}\n\tann[root]=1;\n}\nint fail[3000003],f[300][50];//fail[i]:\u5f53\u5bfb\u627e\u5230\u7b2ci\u4e2a\u70b9\uff0c\u7b2ci\u4e2a\u70b9\u4e0d\u5339\u914d\uff0c\u5c31\u8df3\u5230\u7b2cfail[i]\u4e2a\u70b9\n//fail[i]\u52300\u8282\u70b9\u7684\u8ddd\u79bb\u6bd4i\u52300\u8282\u70b9\u7684\u8ddd\u79bb\u77ed\uff0c\u4ecefail[i]\u548ci\u5f00\u59cb\u540c\u65f6\u5f800\u8282\u70b9\u8df3\uff0c\u5728\u5230\u8fbe0\u4e4b\u524d\uff0c\u5bf9\u5e94\u4f4d\u7f6e\uff0c\u5bf9\u5e94\u5b57\u6bcd\u662f\u76f8\u540c\u7684\u3002\nvoid getfail() {      //\u5341\u4efd\u5947\u7279\uff0c\u5148\u80cc\u9505\u5427\uff0c\u4ee5\u540e\u591a\u7528\u5c31\u719f\u7ec3\u4e86\uff08\u849f\u84bb\u7684\u5b66\u4e60\u65b9\u6cd5\uff09\n\tqueue<int > q;\n\tfor(int i=0;i<26;i++) {\n\t\tif(node[0][i]) q.push(node[0][i]);\n\t}\n\twhile(!q.empty()) {\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<26;i++) {\n\t\t\tif(node[u][i]) {\n\t\t\t\tfail[node[u][i]]=node[fail[u]][i];\n\t\t\t\tq.push(node[u][i]);\n\t\t\t}\n\t\t\telse node[u][i]=node[fail[u]][i];\n\t\t}\n\t}\n}\nint find(int l,int r) {\n\tint root=0,ans=0;\n\tfor(int i=l;i<=r;i++) {\n\t\troot=node[root][a[i]];\n\t\tfor(int j=root;j;j=fail[j]) {\n\t\t\tif(ann[j]) ans+=ann[j];\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n\tscanf(\"%d%d\",&p,&k);\n\tk--;\n\tstring s;\n\tfor(int i=1;i<=p;i++) {\n\t\tcin>>s;\n\t\tfor(int j=0;j<s.length();j++) {\n\t\t\ta[++top]=s[j]-'a';\n\t\t}\n\t}\n\tscanf(\"%d\",&p);\n\tfor(int i=1;i<=p;i++) {\n\t\tcin>>s;\n\t\tbuild(s);\n\t}\n\tgetfail();\n\tfor(int i=1;i<=top;i++) f[i][1]=find(1,i);   //\u9884\u5904\u7406\n\tfor(int i=1;i<top;i++) {                  //dp\n\t\tfor(int j=2;j<=k;j++) {              //\u4e00\u5f00\u59cbi\u548cj\u7684\u4f4d\u7f6e\u6253\u53cd\u4e86\uff0c\u7adf\u7136\u9505\u4e8680.....\n\t\t\tfor(int k=j;k<i;k++) {         //\u8fb9\u754c\u95ee\u9898\n\t\t\t\tf[i][j]=max(f[i][j],f[k][j-1]+find(k+1,i));\n\t\t\t}\n\t\t}\n\t}\n\tint anss=0;\n\tfor(int i=k;i<top;i++) {\n\t\tanss=max(anss,f[i][k]+find(i+1,top));\n\t}\n\tcout<<anss<<endl;\n}\n```\n\n\n\n\n\u9996\u7bc7\u9898\u89e3\uff0c\u6709\u9519\u8bef\u8bf7\u8054\u7cfb\u6211\u66f4\u6b63~~\uff08\u611f\u89c9\u50cf\u662fAC\u81ea\u52a8\u673a\u7684\u9898\u89e3\uff09~~\n\n~~\uff08\u6570\u636e\u5f88\u6c34\uff0c\u67e5\u7b2c\u56db\u4e2a\u70b9\u65f6\uff0c\u53d1\u73b0\u4e24\u4e2afor\u90fd\u6253\u9519\u4e86\uff0c\u4f46\u5b83\u8fc7\u4e8680\uff09~~\n",
        "postTime": 1572315058,
        "uid": 272697,
        "name": "_jzq",
        "ccfLevel": 0,
        "title": "P1026"
    },
    {
        "content": "```cpp\n/*\u521a\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\u89c9\u5f97\u5f88\u8ff7\u832b\uff0c\u6ca1\u5165\u624b\u70b9\u4f46\u662f\u7a81\u7136\u770b\u5230\u4e86\u95ea\u4eae\u7684\u7a81\u7834\u53e3\uff1a\u9898\u76ee\u4e2d\u8bf4this\u5305\u542bthis\u548cis \u4f46\u4e0d\u5305\u542bth\u8fd9\u4e5f\u5c31\u662f\u8bf4\u5728\u4e00\u4e2a\u4e32\u5185\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u4e86\u8d77\u70b9\u7684\u5355\u8bcd\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u5373\u4f7f\u4ed6\u8fd8\u53ef\u4ee5\u6784\u6210\u522b\u7684\u5355\u8bcd\u4f46\u4ed6\u8fd8\u662f\u7528\u4e00\u6b21\u3002\u6bd4\u5982\uff1a\u4e32\uff1athisa\n\n\u5b57\u5178\uff1athis is th\n\n\u4e32\u4e2d\u6709this  is  th\u8fd9\u4e09\u4e2a\u5355\u8bcd\uff0c\u4f46\u662f\u5bf9\u4e8ethis \u548c th \u53ea\u7528\u4e00\u6b21\uff0c\u4e5f\u5c31\u662f\u8bf4\u679a\u4e3e\u4e00\u4e0b\u6784\u6210\u5355\u8bcd\u7684\u8d77\u70b9\uff0c\u53ea\u8981\u4ee5\u8be5\u8d77\u70b9\u7684\u4e32\u4e2d\u5305\u542b\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u4ee5\u8be5\u8d77\u70b9\u5f00\u5934\u7684\u5355\u8bcd\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u8fd9\u4e2a\u4e32\u4e2d\u591a\u5305\u542b\u4e00\u4e2a\u5355\u8bcd\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u5f97\u51fa\u4e0b\u9762\u7684\u7ed3\u679c\uff1a\n\n\u679a\u4e3e\u7684\u8d77\u70b9                                   \u7ed3\u8bba\uff1a\n\nt                                            \u81f3\u5c11\u5305\u542b1\u4e2a\n\nh                                           \u81f3\u5c11\u5305\u542b1\u4e2a\n\ni                                            \u81f3\u5c11\u5305\u542b2\u4e2a\n\ns                                            \u81f3\u5c11\u5305\u542b2\u4e2a\n\na                                            \u81f3\u5c11\u5305\u542b2\u4e2a\n\n\u8003\u8651\u5230\u8fd9\u91cc\uff0c\u5c31\u6709\u70b9\u7709\u76ee\u4e86\u3002\n\n\u9898\u76ee\u4e2d\u8981\u5c06\u4e32\u5206k\u4e2a\u90e8\u5206\u4e5f\u5c31\u662f\u8bf4\u4ece\u4e00\u4e2a\u70b9\u622a\u65ad\u540e\u4e00\u4e2a\u5355\u8bcd\u5c31\u672a\u5fc5\u53ef\u4ee5\u6784\u6210\u4e86\u3002\u6bd4\u5982\u4e0a\u4f8b\u8981\u52063\u4e2a\u90e8\u5206\uff0c\u5408\u7406\u7684\u5176\u4e2d\u7684\u4e00\u4e2a\u90e8\u5206\u81f3\u591a\u67093\u4e2a\u5b57\u6bcd\uff0c\u8fd9\u6837this\u8fd9\u4e2a\u5355\u8bcd\u5c31\u6784\u4e0d\u6210\u4e86\u3002\n\n\u8981\u662f\u52065\u4e2a\u90e8\u5206\uff0c\u90a3\u5c31\u8fde\u4e00\u4e2a\u5355\u8bcd\u90fd\u6784\u4e0d\u6210\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u9700\u8981\u5bf9\u4e0a\u9762\u505a\u4e2a\u6539\u52a8\uff0c\u4e0a\u9762\u7684\u53ea\u63a7\u5236\u4e86\u8d77\u70b9\uff0c\u800c\u5728\u9898\u76ee\u4e2d\u8fd8\u9700\u8981\u9650\u5236\u7ec8\u70b9\uff0c\u5206\u5b8c\u51e0\u4e2a\u90e8\u5206\u540e\uff0c\u6bcf\u90e8\u5206\u7ec8\u70b9\u4e0d\u540c\u53ef\u4ee5\u6784\u6210\u7684\u5355\u8bcd\u5c31\u4e0d\u540c\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u9700\u8981\u518d\u679a\u4e3e\u7ec8\u70b9\u4e86\u3002\n\n\u8bbe\u8ba1\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4sum[i,j]\u7edf\u8ba1\u4ecei\u5230j\u7684\u4e32\u4e2d\u5305\u542b\u7684\u5355\u8bcd\u7684\u4e2a\u6570\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:\n\nsum[i+1,j]+1            (s[i,j]\u4e2d\u5305\u542b\u4ee5s[i]\u5f00\u5934\u7684\u5355\u8bcd)\n\nsum[i,j]= sum[i+1,j]               (\u4e0e\u4e0a\u9762\u76f8\u53cd)\n\n\u6ce8\uff1a(1)\u8fd9\u91cc\u679a\u4e3e\u5b57\u7b26\u7684\u8d77\u70b9\u7684\u987a\u5e8f\u662f\u4ece\u5c3e\u5230\u5934\u7684\u3002\n\n(2)\u6709\u4eba\u628a\u4e0a\u9762\u8fd9\u6b21\u4e5f\u770b\u505a\u662f\u4e00\u6b21\u52a8\u6001\u89c4\u5212\uff0c\u4f46\u6211\u89c9\u5f97\u66f4\u51c6\u786e\u7684\u8bf4\u662f\u9012\u63a8\u3002\n\n\u6c42\u51fa\u6240\u6709\u7684sum\u8fd8\u5dee\u4e00\u6b65\uff0c\u5c31\u662f\u4e0d\u540c\u7684\u5212\u5206\u65b9\u6cd5\u663e\u7136\u7ed3\u679c\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u6c42\u89e3\u7684\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u628a\u539f\u95ee\u9898\u5206\u89e3\u6210\u5b50\u95ee\u9898\uff1a\u6c42\u628a\u4e00\u4e2a\u4e32\u5206\u6210k\u90e8\u5206\u7684\u6700\u591a\u5355\u8bcd\u4e2a\u6570\u53ef\u4ee5\u770b\u505a\u662f\u5148\u628a\u4e32\u7684\u6700\u540e\u4e00\u90e8\u5206\u5206\u51fa\u6765\uff0c\u518d\u628a\u524d\u9762\u4e00\u90e8\u5206\u5206\u89e3\u6210k-1\u4e2a\u90e8\u5206\uff0c\u663e\u7136\u51b3\u7b56\u5c31\u662f\u627e\u5230\u4e00\u79cd\u5212\u5206\u7684\u65b9\u6cd5\u662f\u524d\u9762\u7684k-1\u90e8\u5206\u7684\u5355\u8bcd+\u6700\u540e\u4e00\u90e8\u5206\u7684\u5355\u8bcd\u6700\u591a\u3002\n\n\u663e\u7136\u8fd9\u4e2a\u95ee\u9898\u6ee1\u8db3\u6700\u4f18\u5316\u539f\u7406\uff0c\u90a3\u6ee1\u4e0d\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u5462\uff1f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4e32\u5206\u89e3\u51fa\u6700\u540e\u4e00\u90e8\u5206\u5728\u5206\u89e3\u524d\u9762\u7684\u90a3\u90e8\u5206\u662f\u6839\u672c\u5c31\u4e0d\u4f1a\u6d89\u53ca\u5206\u597d\u7684\u8fd9\u90e8\u5206\uff0c\u6362\u53e5\u8bdd\u8bf4\u6bcf\u6b21\u5206\u89e3\u90fd\u4f1a\u628a\u4e32\u5206\u89e3\u7684\u66f4\u5c0f\uff0c\u5bf9\u4e8e\u5206\u89e3\u8fd9\u4e2a\u66f4\u5c0f\u7684\u4e32\u4e0d\u4f1a\u7528\u5230\u4e0d\u5c5e\u4e8e\u8fd9\u4e2a\u5c0f\u4e32\u7684\u5143\u7d20\u3002\u8fd9\u5c31\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u3002\n\n\u5177\u4f53\u6c42\u89e3\u8fc7\u7a0b\uff1a\n\n\u8bbe\u8ba1\u4e00\u4e2a\u72b6\u6001opt[i,j]\u8868\u793a\u628a\u4ece\uff11\u5230j\u7684\u4e32\u5206\u6210i\u4efd\u53ef\u4ee5\u5f97\u5230\u6700\u591a\u7684\u5355\u8bcd\u7684\u4e2a\u6570\u3002\u51b3\u7b56\u5c31\u662f\u679a\u4e3e\u5206\u5272\u70b9\u4f7f\u5f53\u524d\u8fd9\u79cd\u5206\u5272\u65b9\u6cd5\u53ef\u4ee5\u83b7\u5f97\u6700\u591a\u7684\u5355\u8bcd\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1aopt[i,j]=max(opt[i-1,t]+sum[t+1,j])       (i<t<j)\n\n\u8fb9\u754c\u6761\u4ef6\uff1aopt[1,i]=sum[1,i]                         (0<i<=L)\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u72b6\u6001\u6570\uff2f\uff08N2\uff09*\u51b3\u7b56\u6570O\uff08N\uff09=O\uff08N3\uff09\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO\uff08N2\uff09\u3002\n\n \n\nsum[i][j]\u8868\u793a\u7b2ci\u4e2a\u5b57\u6bcd\u5230\u7b2cj\u4e2a\u5b57\u6bcd\u4e00\u5171\u53ef\u4ee5\u5f62\u6210\u591a\u5c11\u4e2a\u5355\u8bcd\u3002\n\nsum[i][j]=sum[i][-1]+\uff08\u5305\u542b\u53ef\u4ee5\u6dfb\u52a0\u6700\u540e\u4e00\u4e2a\u5b57\u6bcdj\u7684\u5355\u8bcd\u7684\u603b\u4e2a\u6570\uff09\u3002\n\n\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u6709\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u7684\u5730\u65b9\uff0c\u5c31\u662f\u4ee5\u4e32\u4e2d\u67d0\u4e2a\u4f4d\u7f6e\u7684\u5b57\u6bcd\u4e3a\u9996\u5b57\u6bcd\uff0c\u6700\u591a\u53ea\u80fd\u5206\u51fa\u4e00\u4e2a\u5355\u8bcd\u3002\u7531\u4e8e\u5728\u62c6\u5206\u5b57\u7b26\u4e32\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u4ee5\u67d0\u4f4d\u7f6e\u4e3a\u9996\u67d0\u4e2a\u8f83\u77ed\u5355\u8bcd\u88ab\u622a\u65ad\uff0c\u90a3\u4e48\u4ee5\u8be5\u4f4d\u7f6e\u4e3a\u9996\u7684\u8f83\u957f\u5355\u8bcd\u5fc5\u7136\u4e5f\u4f1a\u88ab\u622a\u65ad\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u5404\u4e2a\u4f4d\u7f6e\u6765\u8bf4\u6211\u4eec\u9009\u53d6\u8f83\u77ed\u7684\u5355\u8bcd\u603b\u4e0d\u4f1a\u6bd4\u9009\u53d6\u8f83\u957f\u7684\u5355\u8bcd\u6240\u5f62\u6210\u7684\u5355\u8bcd\u5c11\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5728\u4f4d\u7f6e\u7684\u53c2\u6570\u8868\u793a\u4ee5\u4f4d\u7f6e\u7684\u5b57\u6bcd\u4e3a\u9996\u5b57\u6bcd\uff0c\u6240\u80fd\u5f62\u6210\u7684\u6700\u77ed\u5355\u8bcd\u7684\u957f\u5ea6\u3002\u8fd9\u6837\u5982\u679c\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u52a0\u4e0a\u8fd9\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u4e4b\u5185\u622a\u65ad\uff0c\u5219\u4ee5\u8be5\u4f4d\u7f6e\u4e3a\u9996\u5b57\u6bcd\u5c31\u4e0d\u80fd\u5f62\u6210\u5355\u8bcd\uff0c\u5426\u5219\u5c31\u53ef\u80fd\u5f62\u6210\u4e00\u4e2a\u5355\u8bcd\u3002\u8fd9\u6837\u5bf9\u4e8e\u6240\u6709\u7684\u4e0d\u540c\u4e2a\u9996\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ea\u8981\u5728\u5404\u4e2a\u4f4d\u7f6e\u4f9d\u6b21\u5bf9\u5404\u4e2a\u5355\u8bcd\u8fdb\u884c\u5339\u914d\u5c31\u4ee5\u5f97\u51fa\u6240\u5bf9\u5e94\u7684\u7684\u503c\uff0c\u8fd9\u4e00\u90e8\u5206\u7684\u590d\u6742\u5ea6\u4e3aO(wl2)\u3002\u7136\u540e\u662f\u8ba1\u7b97\u628a\u5b57\u4e32\u5206\u4e3a\u591a\u4e2a\u90e8\u5206\u7684\u8fc7\u7a0b\u4e2d\u6709\u4ec0\u4e48\u5355\u8bcd\u53ef\u4ee5\u7559\u4e0b*/\n\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=250;\nconst int maxm=10;\nstring s;\nint slen;\nstring words[maxm];\nint wordslen[maxm];\nint f[maxn][maxm];\nint sum[maxn][maxn];\nint n,k,m;\n//\u8bfb\u5165\u6570\u636e\nvoid init() {\n\tstring tmp;\n\tcin>>n>>k;\n\tfor (int i=1; i<=n; i++) {\n\t\tcin>>tmp;\n\t\ts+=tmp;\n\t}\n\tslen=s.size();\n\t//\u8bfb\u5165\u5b57\u5178\n\tcin>>m;\n\tfor (int i=1; i<=m; i++) {\n\t\tcin>>words[i];\n\t\twordslen[i]=words[i].size();\n\t}\n}\n\n//l\u5934r\u5c3e\nint add(int l,int r) {\n\tint ans=0;\n\t//\u524d\u9762\u8fd8\u6709\u5b57\u7b26\n\tif (r-1>=0) ans=sum[l][r-1];\n\tbool vis[maxn]= {0};\n\tfor (int i=1; i<=m; i++) {\n\t\tint qd=r-wordslen[i]+1;\n\t\tif (qd<l) continue;\n\t\tif (qd==s.find(words[i],qd)) {\n\t\t\tif (vis[qd]) continue;\n\t\t\tvis[qd]=1;\n\t\t\tans++;\n\t\t\tfor (int j=1; j<=m; j++) {\n\t\t\t\tint dq=r-wordslen[j];\n\t\t\t\tif (dq==qd)\n\t\t\t\t\tif (dq==s.find(words[j],dq)) {\n\t\t\t\t\t\tans--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\n\n//\u5f97\u5230sum\u6570\u7ec4\nvoid gsum() {\n\tfor (int i=0; i<=slen-1; i++) //\u4e32\u5934\n\t\tfor (int j=i; j<=slen-1; j++) { //\u4e32\u5c3e\n\t\t\tsum[i][j]=add(i,j);\n\t\t\t//  printf(\"%d %d --> %d\\n\",i,j,sum[i][j]);\n\t\t}\n}\n\nvoid work() {\n\tfor (int i=0; i<=slen-2; i++)\n\t\tf[i][1]=sum[0][i];\n\tfor (int i=0; i<=slen-2; i++)\n\t\tfor (int j=2; j<=min(k-1,i+1); j++)\n\t\t\tfor (int u=j-2; u<=i-1; u++)\n\t\t\t\tf[i][j]=max(f[i][j],f[u][j-1]+sum[u+1][i]);\n\tint ans=0;\n\tif (k==0)\n\t\tans=sum[0][slen-1];\n\telse\n\t\tfor (int i=k-1; i<=slen-2; i++)\n\t\t\tans=max(ans,f[i][k-1]+sum[i+1][slen-1]);\n\tprintf(\"%d\\n\",ans);\n}\n\nint main() {\n\tinit();\n\tgsum();\n\twork();\n\treturn 0;\n}\n```\n",
        "postTime": 1566265628,
        "uid": 194832,
        "name": "Surpersolo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u72b6\u6001\uff1a\n\tdp[i][k]\u8868\u793a\u524di\u4e2a\u5b57\u7b26\u5206\u4e3ak\u4efd\u7684\u6700\u4f18\u89e3\n    s[i][j]\u8868\u793ai\u5230j\u5b57\u7b26\u7684\u4e2a\u6570\n\u8f6c\u79fb\uff1a\n\tdp[i][k]=max(dp[i][k],dp[j][k-1]+s[j+1][i]);\n    s[i][j]=(\u9884\u5904\u7406)\uff1b\n\u56e0\u4e3a\u672c\u9898\u53ea\u67096\u4e2a\u6a21\u677f\u4e32\uff0c\u4e32\u4e5f\u5f88\u77ed\uff0c\u6240\u4ee5\u81ea\u7136\u4f1a\u60f3\u5230\u7528AC\u81ea\u52a8\u673a\u9884\u5904\u7406\u3002\n\u4e0b\u9762\u5c55\u793aAC\u81ea\u52a8\u673a\u505a\u6cd5\uff1a\n```cpp\nint ch[1003][26],val[1003],f[1003];\nint idx(char c){return c-'a';}\nvoid insert(char *s)\n{\n    int u=0;int n=strlen(s);\n    for(int i=0;i<n;i++)\n    {\n        int c=idx(s[i]);\n        if(!ch[u][c])\n        {\n            val[sz]=0;\n            ch[u][c]=sz++;\n        }\n        u=ch[u][c];\n        if(val[u])return ;\n    }\n    val[u]++;\n}//\u8fd9\u91cc\u662fTrie\u7684\u63d2\u5165\nvoid get_fail()\n{\n    queue<int>q;\n    for(int i=0;i<26;i++)\n    {\n        if(ch[0][i])\n        {\n            q.push(ch[0][i]);\n            f[ch[0][i]]=0;\n        }\n    }\n    while(!q.empty())//\u5e7f\u641c\u89e3\u51b3\n    {\n        int u=q.front();q.pop();\n        for(int j=0;j<26;j++)\n        {\n            int v=ch[u][j];\n            if(!v){\n                ch[u][j]=ch[f[u]][j];\n                continue;\n            }\n            q.push(v);\n            int fa=f[u];\n            while(fa&&!ch[fa][j])fa=f[fa];\n            f[v]=ch[fa][j];//\u5f97\u51fa\u5931\u914d\u8fb9f\u6570\u7ec4\n            val[v]+=val[f[v]];//\u672c\u8282\u70b9\u6709\u51e0\u4e2a\u4e32\u7ed3\u675f\n        }\n    }\n}\nint AC_find(int l,int r)\n{\n    int j=0,ans=0;\n    for(int i=l;i<=r;i++)\n    {\n        int c=idx(t[i]);\n        j=ch[j][c];\n        ans+=val[j];//\u5c06\u7ecf\u8fc7\u7684\u70b9\u90fd\u52a0\u4e0a\n    }\n    return ans;\n}\n\u6e90\u4ee3\u7801\uff1a\n                       \n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint sum=0,topp=0,sz=1,Kp;\nchar t[203],ss[7][203];\nint ch[1003][26],val[1003],dp[203][203],f[1003],s[203][203];\nint idx(char c){return c-'a';}\nvoid get_c()\n{\n    char c,y=19;\n    while((c=getchar())<'a'||c>'z');\n    while(y--)\n    {\n        t[sum++]=c;\n        c=getchar();\n    }\n    t[sum++]=c;\n}\nvoid insert(char *s)\n{\n    int u=0;int n=strlen(s);\n    for(int i=0;i<n;i++)\n    {\n        int c=idx(s[i]);\n        if(!ch[u][c])\n        {\n            val[sz]=0;\n            ch[u][c]=sz++;\n        }\n        u=ch[u][c];\n        if(val[u])return ;\n    }\n    val[u]++;\n}\nvoid get_fail()\n{\n    queue<int>q;\n    for(int i=0;i<26;i++)\n    {\n        if(ch[0][i])\n        {\n            q.push(ch[0][i]);\n            f[ch[0][i]]=0;\n        }\n    }\n    while(!q.empty())\n    {\n        int u=q.front();q.pop();\n        for(int j=0;j<26;j++)\n        {\n            int v=ch[u][j];\n            if(!v){\n                ch[u][j]=ch[f[u]][j];\n                continue;\n            }\n            q.push(v);\n            int fa=f[u];\n            while(fa&&!ch[fa][j])fa=f[fa];\n            f[v]=ch[fa][j];\n            val[v]+=val[f[v]];\n        }\n    }\n}\nint AC_find(int l,int r)\n{\n    int j=0,ans=0;\n    for(int i=l;i<=r;i++)\n    {\n        int c=idx(t[i]);\n        j=ch[j][c];\n        ans+=val[j];\n    }\n    return ans;\n}\nint max(int a,int b)\n{\n    return a>b?a:b;\n}\nint main()\n{\n    int turn , Kp;\n    cin>>turn>>Kp;\n    for(int i=1;i<=turn ;i++)\n    {\n        get_c();\n    }\n    int S;\n    cin>>S;\n    char c;\n    for(int i=1;i<=S;i++)\n    {\n        topp=0;\n        while((c=getchar())<'a'||c>'z');\n        ss[i][topp++]=c;\n        while((c=getchar())>='a'&&c<='z')ss[i][topp++]=c;\n        insert(ss[i]);\n    }\n    get_fail();\n    for(int i=1;i<=sum;i++)\n    {\n        for(int j=i;j<=sum;j++)\n        {\n            s[i][j]=AC_find(i-1,j-1);\n        }\n    }\n    for(int k=1;k<=Kp;k++)\n    {\n        for(int i=1;i<=sum;i++)\n        {\n            for(int j=k-1;j < i;j++)\n            {\n                dp[i][k]=max(dp[i][k],dp[j][k-1]+s[j+1][i]);\n            }\n        }\n    }\n    printf(\"%d\\n\",dp[sum][Kp]);\n    return 0;\n}\n```",
        "postTime": 1527861555,
        "uid": 78115,
        "name": "Inker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "## \u96be\u5ea6\uff1a\u5165\u95e8~\u4e2d\u7b49\u3002\u9898\u578b\uff1aDP\u3002\n------------\n\t\u8bc4\u4ef7\uff1a\u8981\u5904\u7406\u4e24\u5904dp\uff0c\u4e00\u5904\u7684g\u51fd\u6570\uff0c\u8fd8\u6709\u4e00\u5904\u662fdp\u51fd\u6570\u3002\n\tg\u51fd\u6570\u7edf\u8ba1l,r\u533a\u95f4\u5185\u6709\u591a\u5c11\u5355\u8bcd\uff0ch\u51fd\u6570\u7edf\u8bb0\u5f55\u4ee5l\u5f00\u59cb\u6700\u77ed\u7684\u5355\u8bcd\u957f\u5ea6\u3002\n\tdp\u51fd\u6570\u7edf\u8ba10,r\u533a\u95f4\u5185\u6709k\u4e2a\u95f4\u9694\u65f6\u5355\u8bcd\u7684\u4e2a\u6570\uff0c\u8f6c\u79fb\u65b9\u7a0bdp[0][r][k]=max(dp[0][i][k-1]+g[i+1][r],dp[0][r][k]),i=0:(r-1)\u3002\n    dp\u51fd\u6570\u7684\u7b2c\u4e00\u7ef4\u59cb\u7ec8\u4e3a0\uff0c\u6240\u4ee5\u53ef\u4ee5\u7ea6\u6389\uff0c\u8f6c\u79fb\u65b9\u7a0bdp[r][k]=max(dp[i][k-1]+g[i+1][r],dp[r][k]),i=0:(r-1)\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint dp[211][41];\nint g[211][211];\nint h[211];\nchar str[211];\nchar w[8][211];\n\n#define update(x,y) x==0?x=k:x=min(k,x)\n\nint main()\n{\n    int P, K;\n    scanf(\"%d%d\", &P, &K);\n    for(int i = 0; i < P; i++){\n        scanf(\"%s\", str+i*20);\n    }\n\n    int s;\n    scanf(\"%d\", &s);\n    for(int i = 0; i < s; i++){\n        scanf(\"%s\", w[i]);\n    }\n\n    int n = P*20;\n\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < s; j++){\n            int k = 0;\n            while(str[i+k]==w[j][k] && str[i+k]!='\\0' && w[j][k]!='\\0'){\n                k++;\n            }\n            if(w[j][k]=='\\0'){\n                update(h[i],k);\n            }\n        }\n    }\n    for(int i = 0; i < n; i++){\n        for(int j = i; j < n; j++){\n            for(int k = i; k <= j; k++){\n                if(h[k]>0 && k+h[k]-1<=j){\n                    g[i][j]++;\n                }\n            }\n        }\n    }\n    for(int i = 0; i < n; i++){\n        dp[i][0] = g[0][i];\n    }\n    for(int k = 1; k < K; k++){\n        for(int i = k; i < n; i++){\n            for(int j = k; j < i; j++){\n                dp[i][k] = max(dp[i][k], dp[j][k-1]+g[j+1][i]);\n            }\n        }\n    }\n    printf(\"%d\\n\", dp[n-1][K-1]);\n    return 0;\n}\n\n```",
        "postTime": 1525932025,
        "uid": 101570,
        "name": "howardcn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053\u6a21\u62df\u597d\u9898\n\n\u6211\u4eec\u5148\u5904\u7406\u51fa\u5355\u8bcd\u4e2a\u6570\u5e76\u4e14\u9884\u5904\u7406\u4e00\u4e0bf[] f[i]\u7684\u610f\u4e49\u662f\u5728\u7b2ci\u4e2a\u5b57\u7b26\u540e\u5207\u635f\u5931\u7684\u5355\u8bcd\u6570 \u7136\u540e\u8d2a\u5fc3\u627e\u6700\u5c11\u635f\u5931 \u7136\u540e\u518d\u5c06\u8be5\u5355\u8bcd\u5220\u53bb \u4f9d\u6b21\u5bfb\u627e\u5c31\u597d\u4e86 \u56e0\u4e3atot<=200 \u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u4fdd\u8bc1 \u4e0a\u4ee3\u7801wwww\n\n        \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar s[250],ch;int ans=0,T,tot,p,k,cnt,f[250];bool b[250],vis[250];\nstruct dis{\n    char wd[210];\n}a[9];\nstruct lll{\n    int l,r;\n}e[250];\nstruct ll{\n    int link[250],jsq;ll(){jsq=0;}\n}dp[250];\nvoid init(int x)\n{\n    int pos=10086;\n    for(int i=1;i<=cnt;i++)\n    {\n        int sha=strlen(a[i].wd);\n        for(int j=0;j<sha;j++)\n        {\n            if(s[x+j]!=a[i].wd[j]) break;\n            if(j==sha-1) pos=min(pos,x+j);\n        }\n    }\n    if(pos!=10086) \n     {\n         e[++T].l=x,e[T].r=pos-1;\n        for(int i=x;i<pos;i++) f[i]++,dp[i].link[++dp[i].jsq]=T;\n     }\n}\nint main()\n{\n    cin>>p>>k;ch=getchar();//ch=getchar();\n    for(int i=1;i<=p;i++)\n    {\n        for(int j=1;j<=20;j++)\n        ch=getchar(),s[++tot]=ch;while(ch!='\\n') ch=getchar();\n    }\n    b[tot]=1;\n    cin>>cnt;for(int i=1;i<=cnt;i++) cin>>a[i].wd;\n    for(int i=1;i<=tot;i++) init(i);//for(int i=1;i<=tot;i++) cout<<f[i]<<\" \";\n     k--;\n    while(k--)\n    {\n        int M=2100000000,wz;\n        for(int i=1;i<=tot;i++) if(f[i]<M&&b[i]!=1) wz=i,M=f[i];\n        ans+=M;b[wz]=1;\n        for(int j=1;j<=dp[wz].jsq;j++)\n        {\n            if(vis[dp[wz].link[j]]) continue;\n            vis[dp[wz].link[j]]=1;\n            for(int i=e[dp[wz].link[j]].l;i<=e[dp[wz].link[j]].r;i++) \n            {\n                f[i]--;\n            }\n        }\n    }\n    //for(int i=1;i<=10;i++) for(int j=1;j<=dp[i].jsq;j++) cout<<dp[i].link[j]<<\" \";\n    cout<<T-ans;//cout<<\" \"<<T;\n    return 0;\n}\n```\n/\\*\n1 3\nthisisabookyouareaoh\n\n4\nis\na\nok\nsab\n\\*/",
        "postTime": 1503452330,
        "uid": 19600,
        "name": "LittlePrincess",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u4e0d\u592a\u4e00\u6837\u7684\u505a\u6cd5\uff0c\u4e0d\u7528\u9884\u5904\u7406w[i][j]\n\n\u539f\u6587\uff1a[http://www.cnblogs.com/candy99/p/6071149.html](http://www.cnblogs.com/candy99/p/6071149.html)\n\n\n\u6bcf\u4e2a\u5b57\u6bcd\u53ea\u53ef\u80fd\u6784\u6210\u4e00\u4e2a\u5355\u8bcd\u6765\u8d21\u732e\u7b54\u6848\uff0c\u66b4\u529b\u5904\u7406d[i]\u4e3a\u4ecei\u5f00\u59cb\u6784\u6210\u5355\u8bcd\u7684\u6700\u8fd1\u4f4d\u7f6e\uff0cO(n\\*n\\*6)\n\nf[i][j]\u8868\u793a\u524di\u4e2a\u5b57\u7b26\u5206\u6210j\u7ec4\n\nf[i][j]=max{f[k][j-1]+w|j<=k<=i}\n\nk\u9006\u5e8f\u679a\u4e3e\uff0cw\u53ef\u4ee5\u987a\u4fbf\u9012\u63a8\u51fa\u6765\n\n\n\u4ee3\u7801\uff1a\n\n        \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\ntypedef long long ll;\nconst int N=205,M=45;\nchar s[N],word[7][N],len[7];\nint p,m,n,num;\nint d[N],f[N][M];\nvoid dp(){\n    n=strlen(s+1);\n    memset(d,127,sizeof(d));\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=num;j++){\n            if(n-i+1<len[j]||d[i]<=len[j]) continue;\n            int flag=0;\n            for(int k=0;k<len[j];k++)\n                if(s[i+k]!=word[j][k+1]) {flag=1;break;}\n            if(flag) continue;\n            d[i]=i+len[j]-1;//printf(\"wo %d\\n\",j);\n        }\n        //printf(\"d %d %d\\n\",i,d[i]);\n    }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++){\n            int w=0;\n            for(int k=i;k>=j;k--){\n                if(d[k]<=i) w++;\n                f[i][j]=max(f[i][j],f[k-1][j-1]+w);//w=(j,i)\n            }\n        }\n}\nint main(){\n    scanf(\"%d%d\",&p,&m);\n    for(int i=1;i<=p;i++) scanf(\"%s\",s+1+20*(i-1));\n    scanf(\"%d\",&num);\n    for(int i=1;i<=num;i++) scanf(\"%s\",word[i]+1),len[i]=strlen(word[i]+1);//,printf(\"word %d %d\\n\",i,len[i]);\n    dp();\n    printf(\"%d\",f[n][m]);\n}\n```",
        "postTime": 1479295238,
        "uid": 13863,
        "name": "thwfhk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u4e0d\u5f97\u4e0d\u8bf4\u6700\u5f00\u59cb\u6211\u8fde\u9898\u610f\u90fd\u6ca1\u770b\u61c2\uff0c2333\u3002\n\n\u5927\u6982\u610f\u601d\u662f\u8bf4\uff0c\u7ed9\u4f60\u4e00\u4e32\u5b57\u7b26\uff0c\u4f60\u5c06\u8fd9\u4e2a\u5b57\u7b26\u5212\u5206\u6210k\u5757\uff0c\u4f7f\u6bcf\u4e00\u5757\u5305\u542b\u7684\u5355\u8bcd\u6570\u603b\u548c\u6700\u591a\u3002\n\n\u6211\u7684\u60f3\u6cd5\u662f\u7528\u4e24\u6b21\u52a8\u6001\u89c4\u5212\uff0c\u7b2c\u4e00\u6b21\u8bbe\u7f6e\u4e00\u4e2a\u6570\u7ec4cnt\\_word[i][j]\uff08\u4e0d\u8981\u5410\u69fd\u4e3a\u4ec0\u4e48\u540d\u5b57\u90a3\u4e48\u957f\uff09\n\n\u5b83\u8868\u793a\u4ecei\u53f7\u5230j\u53f7\u5305\u542b\u591a\u5c11\u5355\u8bcd\u6570\uff0c\u7136\u540e\u5c31\u5f88\u597d\u63a8,\u5982\u679c\u4ecei\u53f7\u5230j\u53f7\u6709\u4ee5i\u53f7\u4e3a\u5934\u7684\u5b57\u6bcd\uff0c\u90a3\u4e48cnt\\_word[i][j]=cnt\\_word[i+1][j]+1,\n\n\u5982\u679c\u4e0d\u5b58\u5728,\u90a3\u4e48\u5c31\u662fcnt\\_word[i][j]=cnt\\_word[i+1],\n\n\u53ef\u4ee5\u7528strstr\u6765\u5224\u65ad\u662f\u5426\u5305\u542b\uff0c\u5e76\u4e14\u5224\u65ad\u662f\u5426\u4ee5a[i]\u5f00\u5934\uff0c\n\n\u63a5\u4e0b\u6765\u5c31\u5f88\u597d\u63a8\u4e86\uff0c\u5c31\u662f\u679a\u4e3e\u679a\u4e3e\u533a\u95f4\u3002\n\n\u6ce8\u610f\u7b2c\u4e00\u4e2a\u7ec6\u8282\uff0c\u5b57\u7b26\u4e32\u7f16\u53f7\u662f\u4ece0\u5f00\u59cb\uff0c\u90a3\u4e48\uff0c\u8303\u56f4\u5e94\u662f0-\uff08p\\*20-1\uff09\uff0c\n\n\u7b2c\u4e8c\uff0c\u679a\u4e3e\u533a\u95f4\u65f6\u8981\u6ce8\u610f\uff0c\u4e0d\u8981\u8ba9\u67d0\u4e2a\u533a\u95f4\u4e3a\u7a7a\uff0c\u90a3\u6837\u4e00\u5b9a\u4f1a\u9519\uff08\u5982\u679c\u6ca1\u9519\uff0c\u4e0d\u8981\u62c6\u7a7f\u6211\u3002\uff09\n\n\u597d\u4e86\uff0c\u770b\u4e0d\u61c2\u7684\u770b\u6211\u4ee3\u7801\u5427\uff0c\u6211\u4f1a\u52a0\u4e0a\u6ce8\u91ca\u3002\n\nhttp://www.cnblogs.com/Ateisti/p/5627439.html\n",
        "postTime": 1467190440,
        "uid": 18819,
        "name": "Jellyfool",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u7528\u6811\u5f62\u52a0\u533a\u95f4\u505a\uff0c\u65e0\u9700\u521d\u59cb\u5316(\u5230\u53f6\u5b50\u81ea\u5df1\u4f1a\u7b97\u7684)\uff0c\u4ee3\u7801\u6846\u67b6\u8ddf\u4e8c\u53c9\u82f9\u679c\u6811\u5f88\u50cf\uff0c\u8fd9\u4e0d\u8fc7\u5e95\u4e0b\u679a\u4e3e\u4e2d\u95f4\u70b9\uff0c\u6ce8\u610f\u76f4\u63a5\u6392\u9664\u6bd4\u8f83\u5947(che)\u602a(dan)\u7684\u60c5\u51b5\uff0c\u5b83\u4eec\u5bf9\u7ed3\u679c\u662f\u6709\u5f71\u54cd\u7684\u3002\u4ee5\u4e0a\u4e24\u79cd\u533a\u95f4\u638c\u63e1\u597d\u7684\u7ae5\u978b\u53ef\u4ee5\u8f6c\u5316\u6210\u8fd9\u4e2a\u505a\u3002\n\n\n```delphi\n\nfunction dfs(l,r,k:integer):integer;  \nvar i,j,tp:integer;ss:string;  \n    u:array[1..200]of boolean;  \n  begin  \n  if f[l,r,k]>=0 then exit(f[l,r,k]);  \n  ss:=copy(s,l,r-l+1);  \n  if k=1 then  \n  begin  \n  fillchar(u,sizeof(u),false);  \n  tp:=0;  \n  for i:=1 to m do  \n    for j:=1 to length(ss) do  \n      if (copy(ss,j,length(d[i]))=d[i])and(not u[j]) then  \n        begin  \n        inc(tp);  \n        u[j]:=true;  \n        end;  \n  f[l,r,k]:=tp;  \n  exit(tp);  \n  end else  \n    begin  \n    tp:=0;  \n    for i:=1 to length(ss)-1 do  \n      for j:=1 to k-1 do  \n        if (i-l+1>=j)and(r-i>=k-j) then  \n          tp:=max(tp,dfs(l,i,j)+dfs(i+1,r,k-j));  \n    f[l,r,k]:=tp;  \n    exit(tp);  \n    end;  \n  end;\n \n```",
        "postTime": 1446301551,
        "uid": 3219,
        "name": "zhaozuohan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u4f3c\u4e4e\u6ca1\u6709\u4eba\u53d1\u8fc7\uff0c\u6211\u5c31\u53d1\u4e00\u4e2a\u7528stl string\u7684\u6734\u7d20dp\u5427\uff0c\u9644\u5e26\u8c03\u8bd5\u6a21\u677f\n\n$dp[k][i] = max(dp[k][i], dp[k - 1][j] + g[j + 1][i]);$\n\u8868\u793a\u57280..i\u4e2a\u5b57\u7b26\u4e2d\uff0c\u5207k\u5200\uff0c\u5f97\u5230\u7684\u6700\u591a\u7684\u5355\u8bcd\u6570\u3002\u663e\u7136\u53ef\u4ee5\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u7a7a\u95f4\uff0c~~\u4f46\u662f\u6211\u61d2\uff0c\u6ca1\u6709\u5199~~\n\n\u6c42\u89e3dp\u7684\u8fc7\u7a0b\u7684\u542b\u4e49\u4e3a\uff1a\u6bcf\u6b21\u5bf9\u6bcf\u4e00\u4e2ai\u627e\u4e00\u4e2a\u6700\u597d\u7684\u5730\u65b9j\u5207\u4e0b\u53bb\u3002\n\n## \u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e9b\u5730\u65b9\uff1a\n- \u67d0\u4e2a\u4f4d\u7f6e\u6709\u591a\u4e2a\u5b57\u7b26\u4e32\u65f6\uff0c\u9009\u6700\u77ed\u7684\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u56e0\u88ab\u5207\u800c\u4e0d\u80fd\u9009\u7684\u6982\u7387\u6700\u4f4e\u3002\n\u63d0\u524d\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u6240\u542b\u6709\u7684\u6700\u77ed\u5355\u8bcd\u7684\u957f\u5ea6\uff0c\u5b58\u5728c\u4e2d\u3002\u5176\u4e2dv\u8868\u793a\u8981\u627e\u7684\u5355\u8bcdvector\uff0c s\u8868\u793a\u5b57\u7b26\u4e32\u3002\ns.find(str, pos)\u7684\u4f5c\u7528\u662f\u4eces\u7684pos\u4f4d\u7f6e\u5f00\u59cb\uff0c\u67e5\u627e\u4e0b\u4e00\u4e2astr\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8fd4\u56de\u5750\u6807\u3002\u627e\u4e0d\u5230\u5219\u8fd4\u56destring::npos\n\n```\n\t\tfor (int j = 0; j < v.size(); ++j)\n\t\t{\n\t\t\tint pos = 0;\n\t\t\twhile((pos = s.find(v[j], pos)) != string::npos)\n\t\t\t{\n\t\t\t\tif(c[pos] == 0)\n\t\t\t\t\tc[pos] = v[j].size();\n\t\t\t\tpos += 1;\n\t\t\t}\n\t\t}\n\n```\n\n- \u867d\u7136\u6570\u636e\u8303\u56f4\u4e0d\u5927\uff0c\u4f46\u8fc7\u591a\u7684\u5faa\u73af\u5d4c\u5957\u5bb9\u6613\u5bfc\u81f4TLE\uff0c\u6240\u4ee5\u9700\u8981\u628a\u80fd\u5904\u7406\u7684\u9884\u5148\u5904\u7406\u51fa\u6765\n- dp\u7684\u987a\u5e8f\u6bd4\u8f83\u91cd\u8981\uff0c\u5982\u679c\u987a\u5e8f\u662fikj\uff0c\u53ea\u80fd\u62ff80\u5206\u3002\u987a\u5e8f\u662fkij\uff0c\u80fd\u62ff100\u5206\u3002\n- ios::sync_with_stdio ( false );\u4f1a\u5bfc\u81f4cout\u548cprintf\u4e0d\u540c\u6b65\uff0c\u89e3\u51b3\u65b9\u6cd5\u65f6printf\u4e4b\u540e\uff0ccout\u4e4b\u524d\uff0cfflush(stdout)\u5237\u65b0\u7f13\u51b2\u533a\u3002\n\n\n- g\u6570\u7ec4\u8868\u793a\u4ecei\u5230j\u5305\u542b\u7684\u5b8c\u6574\uff08\u80fd\u9009\u4e2d\u7684\uff09\u5355\u8bcd\u6570\u76ee\u3002\u6ca1\u6709\u7528dp\uff0c\u800c\u662f\u7528\u4e86$O(n^3)$\u7684\u7b97\u6cd5\n\n## \u5b8c\u6574\u4ee3\u7801\n\n```\n#define LOCAL\n\n#ifdef LOCAL\n#define DEBUG\n#endif\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nnamespace my\n{\n\tinline void show_table(int l = -1, const char *table_name = \"\")\n\t{\n#ifdef DEBUG\n\t\tif (*table_name)\n\t\t{\n\t\t\tprintf(\"%s\\n\", table_name);\n\t\t}\n\t\tfor (int i = 0; i <= l; ++i)\n\t\t{\n\t\t\tprintf(\"%3d\", i);\n\t\t}\n\n\t\tputs(\"\");\n#endif\n\t}\n\tinline void show_array(int *a, int l)\n\t{\n#ifdef DEBUG\n\n\t\tfor (int i = 0; i <= l; ++i)\n\t\t{\n\t\t\tprintf(\"%3d\", a[i] != 0x3f3f3f3f ? a[i] : -1);\n\t\t}\n\t\tputs(\"\");\n\t\tfflush(stdout);\n#endif\n\t}\n\n\tstd::vector<string> v;\n\tbool cmp(const string &s1, const string &s2)\n\t{\n\t\treturn s1.size() < s2.size();\n\t}\n\n\tint c[300];\n\tint g[300][300];\n\tint dp[300][300];\n\tint main()\n\t{\n\t\tint n, k;\n\t\tcin >> n >> k;\n\t\tstring s, s2;\n\t\twhile(n--)\n\t\t\tcin >> s2, s += s2;\n\n\t\tcin >> n;\n\t\twhile(n--)\n\t\t\tcin >> s2, v.push_back(s2);\n\n\t\tsort(v.begin(), v.end(), cmp);\n\n\n\t\tfor (int j = 0; j < v.size(); ++j)\n\t\t{\n\t\t\tint pos = 0;\n\t\t\twhile((pos = s.find(v[j], pos)) != string::npos)\n\t\t\t{\n\t\t\t\tif(c[pos] == 0)\n\t\t\t\t\tc[pos] = v[j].size();\n\t\t\t\tpos += 1;\n\t\t\t}\n\t\t}\n\n\t\tshow_table(s.size(), \"array c\");\n\t\tshow_array(c, s.size());\n\n\t\tshow_table(s.size(), \"array G\");\n\t\tfor (int i = 0; i < s.size(); ++i)\n\t\t{\n\t\t\tfor (int j = i; j < s.size(); ++j)\n\t\t\t{\n\t\t\t\tfor (int p = i; p <= j; ++p)\n\t\t\t\t{\n\t\t\t\t\tif (c[p] && j - p + 1 >= c[p])\n\t\t\t\t\t{\n\t\t\t\t\t\t++g[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tshow_array(g[i], s.size());\n\t\t}\n\t\tfor (int i = 0; i < s.size(); ++i)\n\t\t{\n\t\t\tdp[i][0] = g[0][i];\n\t\t}\n\t\tshow_table(s.size(), \"array DP\");\n\t\tfor (int kk = 1; kk < k; ++kk)\n\t\t{\n\t\t\tfor (int i = kk; i < s.size(); ++i)\n\t\t\t{\n\t\t\t\tfor (int j = kk; j < i; ++j)\n\t\t\t\t{\n\t\t\t\t\tdp[kk][i] = max(dp[kk][i], dp[kk - 1][j] + g[j + 1][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tshow_array(dp[kk], s.size());\n\t\t}\n\t\tcout << dp[k - 1][s.size() - 1] << endl;\n\n\t\treturn 0;\n\t}\n}\n\n\nint main()\n{\n#ifdef LOCAL\n\tfreopen ( \"./input.txt\", \"r\", stdin );\n#endif\n\tios::sync_with_stdio ( false );\n\tcin.tie ( 0 );\n\tmy::main();\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1536754226,
        "uid": 61724,
        "name": "\u90b1\u6c5f\u5764",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u5176\u5b9e\u4e0d\u9700\u8981hash\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6570\u7ec4A,\u5bf9\u4e8e\u6bcf\u4e00\u4e2aA[i]\u8868\u793a\n\u539f\u4e32\u4ecei~A[i]\u662f\u4e00\u4e2a\u80fd\u4e0e\u67d0\u4e2a\u5355\u8bcd\u5339\u914d\u7684\u5b50\u4e32\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\n\u539f\u4e32:thisisabookyouareaoh\n\n\u5355\u8bcd:this\n\nA[1]=4\n\n\u8868\u793a\u539f\u4e32\u4ece1~4\u80fd\u5339\u914d\u67d0\u4e2a\u5355\u8bcd\n\n\u7136\u540e\u5c31\u662fDP\n\nF[i][j]\u8868\u793a\u5728\u524di\u4e2a\u5b57\u7b26\u4e2d\uff0c\u5206\u6210j\u6bb5\uff0c\u6240\u542b\u6709\u7684\u6700\u591a\u5355\u8bcd\u6570\n\u6839\u636e\u505a\u9898\u7ecf\u9a8c\u2014\u2014\u300a\u4e58\u79ef\u6700\u5927\u300b\u548c\u4e00\u90e8\u5206\u7684\u601d\u8003\u53ef\u4ee5\u5f97\u51fa\n\nF[i][j]=max{F[x][j-1]+(t\u2208[x+1,i]\uff0cA[t]<=i\u7684\u4e2a\u6570)}\n\n\u89e3\u8bfb\u4e00\u4e0b A[t]<=i \u5c31\u662f\u627e\u4e00\u4e2a\u4f4d\u7f6et\uff0c\u4f7f\u5f97\u6709\u4e00\u4e2a\u4ecet\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u7684\u4e32\u4e0e\u67d0\u4e2a\u5355\u8bcd\u5339\u914d\u5e76\u4e14\u8fd9\u4e2a\u4e32\u7684\u7ec8\u6b62\u4f4d\u7f6e\u662f\u5728\u6211\u4eec\u6240\u7ed9\u5b9a\u7684\u533a\u95f4\u91cc\u7684\u3002\n\n\u518d\u4e3e\u4e2a\u4f8b\u5b50\n\n\u539f\u4e32\uff1athisisabookyouareaoh\n\n\u5355\u8bcd: thisis\n\n\u663e\u7136A[1]=6,\u90a3\u4e48\u5982\u679c\u6211\u4eec\u8981\u5728\u7b2c4\u4e2a\u5b57\u7b26\u540e\u9762\u5212\u5206\u51fa\u4e00\u5757\uff0c\n\n\u5c31\u662f\u8fd9\u6837\u2014\u2014\n\nthis/isabookyouareaoh\n\n\u5f88\u660e\u663e\uff0c\u5728\u6211\u4eec\u5212\u5206\u51fa\u7684\u524d\u4e00\u5757\u91cc\uff0c\u56e0\u4e3a\u8fd9\u4e2athisis\u7684\u7ec8\u6b62\u4f4d\u7f6e\u4e0d\u5728\u6211\u4eec\u5212\u5b9a\u7684\u8303\u56f4\u5185\uff08\u5b83\u7684\u7ec8\u6b62\u4f4d\u7f6e\u5728\u201c/\u201d\u4e4b\u540e\uff09,\u6240\u4ee5\u4e0d\u9700\u8981\u589e\u52a0\u7b54\u6848\u3002\n\n\u6211\u4eec\u5927\u53ef\u9884\u5904\u7406\u51fa\u6240\u6709\u7684A[i]\uff08\u8be6\u60c5\u770b\u4ee3\u7801\uff09\n\n\u6709\u4e2a\u5c0f\u7ec6\u8282\u5c31\u662f\uff0c\u4e00\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u662f\u591a\u4e2a\u5339\u914d\u5b50\u4e32\u7684\u8d77\u70b9\uff0c\u5982\u679c\u771f\u7684\u662f\u8fd9\u6837\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba9\u8fd9\u4e2a\u4f4d\u7f6e\u6240\u4ee3\u8868\u7684\u4e32\u5c3d\u53ef\u80fd\u7684\u77ed\uff0c\u56e0\u4e3a\u53ea\u6709\u5c3d\u53ef\u80fd\u7684\u77ed\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u6240\u4ee3\u8868\u7684\u4e32\u624d\u66f4\u6709\u53ef\u80fd\u5728\u67d0\u4e2a\u7ed9\u5b9a\u533a\u95f4\u4e2d\uff0c\u624d\u66f4\u6709\u53ef\u80fd\u88ab\u52a0\u5165\u6700\u7ec8\u7b54\u6848\u4e2d\u3002\n\n\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u5728\u539f\u4e32L~R\u4e2d\u6240\u6709\u7684\u5355\u8bcd\u6570\n\n\u8f6c\u5316\u4e00\u4e0b\u5c31\u662f\n\n\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u5c0f\u4e8e\u7b49\u4e8eR\u7684A[i]\uff08L<=i<=R)\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528~~\u4e3b\u5e2d\u6811~~\u6211\u8fd9\u91cc\u5c31\u6ca1\u6709\u90a3\u4e48\u9ad8\u7aef\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5f00\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u7136\u540e\u5148\u6c42\u5728[1,R]\u4e2d\u5c0f\u4e8e\u7b49\u4e8eR\u7684A[i]\u7684\u4e2a\u6570\uff0c\u518d\u6c42\u5728[1,L-1]\u4e2d\u5c0f\u4e8e\u7b49\u4e8eR\u7684A[i]\u7684\u4e2a\u6570\uff0c\u7136\u540e\u76f8\u51cf\u5c31\u597d\u4e86\u3002\n\n\u5177\u4f53\u5c31\u8fd9\u4e48\u591a\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u8fd8\u662f\u770b\u4ee3\u7801\u5427\n\n    LuckyCloud\n    \n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\ninline int read()\n{\n  int cnt=0,f=1;char ch=getchar();\n  while (ch<'0'||ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n  while (ch>='0'&&ch<='9'){cnt=cnt*10+ch-48;ch=getchar();}\n  return cnt*f;\n}\nint len,dp[210][45],p,k,n,t,l[7],a[210],c[210][210];\nchar s[210],s1[20],word[7][200];\ninline int max(int x,int y)\n{\n  return x>y?x:y;\n}\ninline int min(int x,int y)\n{\n  return x<y?x:y;\n}\ninline bool check(int x,int t)\n{\n  for (int i=t;i<=t+l[x]-1;i++)\n   if (s[i]!=word[x][i-t+1]) return false;\n  return true;\n} \ninline int query(int num,int x)\n{\n  int ret=0;\n  for (;x;x-=x&-x)\n   ret+=c[num][x];\n  return ret; \n}\nint main()\n{\n  p=read();k=read();\n  for (int i=1;i<=p;i++)\n   {\n   \tscanf(\"%s\",s1+1);\n   \tlen=strlen(s1+1);\n    for (int j=1;j<=len;j++)\n     s[++n]=s1[j];\n   }\n  t=read();\n  for (int i=1;i<=t;i++)\n   {\n   \tscanf(\"%s\",word[i]+1);\n\tl[i]=strlen(word[i]+1); \n   }\n    \n  memset(a,127/3,sizeof(a));  \n  for (int i=1;i<=t;i++)\n   for (int x=1;x<=n-l[i]+1;x++)\n    if (check(i,x)) a[x]=min(a[x],x+l[i]-1);\t   \n  memset(dp,-1,sizeof(dp));\n  dp[0][0]=0;\n  for (int i=1;i<=n;i++) \n   {\n     memcpy(c[i],c[i-1],sizeof(c[i]));\n     for (int j=a[i];j<=n;j+=j&-j)\n\t  c[i][j]++; \n   }\n         \n  for (int i=1;i<=n;i++)\n   for (int j=1;j<=min(i,k);j++)\n    for (int x=0;x<i;x++)\n\tif (dp[x][j-1]!=-1) dp[i][j]=max(dp[i][j],dp[x][j-1]+query(i,i)-query(x,i));\n  \t\n  printf(\"%d\\n\",dp[n][k]);\t \n  return 0;\n}\n```",
        "postTime": 1532619221,
        "uid": 23977,
        "name": "LuckyCloud",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u672c\u7a0b\u5e8f\u91c7\u7528\u52a8\u6001\u89c4\u5212\u7684\u65b9\u6cd5\u8ba1\u7b97\n\n\u8bbeST(start,end)\u4e3a\u9898\u76ee\u6240\u7ed9\u7684\u5b57\u7b26\u4e32\u4e2d\u7b2cstart\u4e2a\u5b57\u7b26\u5230\u7b2cend\u4e2a\u5b57\u7b26\u6240\u7ec4\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u3002\n\nD(ST(start,end),k)\u4e3a\u5c06\u5b57\u7b26\u4e32ST(start,end)\u5206\u6210k\u4efd\u540e\u6240\u542b\u7684\u6700\u5927\u5355\u8bcd\u6570\u3002\uff08\u7b80\u5199\u4e3aD(start,end,k)\uff09\n\n\u5219D(start,end,k+1)=MAX(D(start,i,k)+D(i+1,end,k))  (start\u2266i\u2266end-1)\n\n\u6240\u4ee5\u7528D(1~start,start~end,1)\u5373\u53ef\u6c42\u5f97D(1,end,k)\n\n\u672c\u7a0b\u5e8f\u4e2d\u6c42D(1~start,start~end,1)\u7684\u90e8\u5206\u8f83\u590d\u6742\u8be6\u7ec6\u6c42\u6cd5\u89c1\u6ce8\u89e3\u3002\n\n\u7a0b\u5e8f\u5982\u4e0b\uff1a\n\n\n```cpp\ntype\n  by200=record                          {\u5efa\u7acb\u6570\u7ec4D}\n    da:array[1..200,1..200] of byte;\n  end;\n  ds1=record                             {ds1\uff1a\u7528\u4e8e\u5b58\u653e\u4efb\u52a1\u6570\u636e(\u5355\u4e2a\u4efb\u52a1)\u7684\u6570\u636e\u7c7b\u578b}\nst:string;                             {\u5b57\u7b26\u4e32\u53d8}\n    word:array[1..20] of string;              {\u5355\u8bcd\u6570\u7ec4}\n    m:integer;                            {\u5355\u8bcd\u4e2a\u6570}\n    k:integer;                            {\u5206\u4e3ak\u4efd}\n  end;\n  ds=record                           {ds\uff1a\u7528\u4e8e\u5b58\u653e\u6240\u6709\u4efb\u52a1\u6570\u636e\u7684\u6570\u636e\u7c7b\u578b}\n    n:integer;                         {\u4efb\u52a1\u4e2a\u6570}\n    da:array[1..6] of ds1;                {\u4efb\u52a1\u6570\u636e}\n  end;\nvar\n  i,j,max,a,a1,b,c,d,e,f:integer;\n  dt,p:^by200;                          {\u5efa\u7acb\u6570\u7ec4D}\n  dat:array[1..3] of ^by200;                {\u5efa\u7acb\u6570\u7ec4D}\n  lo:ds;                                {lo: \u7528\u4e8e\u5b58\u653e\u4efb\u52a1\u6570\u636e}\n  t:boolean;\n  st:string;\n  labels:array[1..200] of byte;               {labels\uff1a\u7528\u4e8e\u5b58\u653e\u67e5\u627e\u5230\u7684\u5355\u8bcd\u957f\u5ea6}\nprocedure loadfile(sn:string);                {\u8bfb\u6587\u4ef6\u7684\u8fc7\u7a0b}\nvar\n  fi:text;\n  t1,t2,t3,t4,t5,t6:integer;\n  st1:string;\nbegin\n  assign(fi,sn);\n  reset(fi);\n  readln(fi,lo.n);\n  for t1:=1 to lo.n do\n  begin\n    readln(fi,t2,lo.da[t1].k);\n    for t3:=1 to t2 do\n    begin\n      readln(fi,st1);\n      lo.da[t1].st:=lo.da[t1].st+st1;\n    end;\n    readln(fi,t2);\n    lo.da[t1].m:=t2;\n    for t3:=1 to t2 do\n       readln(fi,lo.da[t1].word[t3]);\n  end;\n  close(fi);\nend;\nbegin\n  writeln;\n  readln(st);\n  writeln('Open File : ',st);\n  loadfile(st);\n  for a:=1 to 3 do\n    new(dat[a]);                               {\u5efa\u7acb\u6570\u7ec4D}\n  for a:=1 to lo.n do\n  begin\n    for i:=1 to lo.da[a].m-1 do\n      for j:=i+1 to lo.da[a].m do\n        if lo.da[a].word[i][0]>lo.da[a].word[j][0] then {\u9996\u5148\u5bf9\u5355\u8bcd\u8fdb\u884c\u6392\u5e8f\uff0c\u4f7f\u5355\u8bcd\u7684\u957f\u5ea6\u7531\u5c0f\u5230\u5927\u6392\u5217\u3002\n```\n\u4e3a\u4e86\u4fdd\u8bc1\u7a0b\u5e8f\u7b97\u51fa\u7684\u662f\u6700\u4f18\u503c\uff0c\u957f\u5ea6\u8f83\u5c0f\u7684\u5355\u8bcd\u5c06\u4f18\u5148\u5904\u7406}\n```cpp\n          begin\n            st:=lo.da[a].word[i];\n            lo.da[a].word[i]:=lo.da[a].word[j];\n            lo.da[a].word[j]:=st;\n          end;\n    for i:=1 to 200 do\n      labels[i]:=255;\n    f:=length(lo.da[a].st);                  {f\u662f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6}\n    for i:=1 to lo.da[a].m do\n    begin\n      c:=length(lo.da[a].word[i]);\n      for j:=1 to f-c+1 do\n        if (labels[j]=255) and (copy(lo.da[a].st,j,c)=lo.da[a].word[i]) then\n          labels[j]:=c;    {labels[j]\u8868\u793a\u9996\u5b57\u6bcd\u5360\u7528\u5b57\u7b26\u4e32\u4e2d\u7b2cj\u4e2a\u4f4d\u7f6e\u7684\u5355\u8bcd\u7684\u957f\u5ea6}\n    end;\n    for j:=1 to f do\n    begin\n      d:=0;                              {d\u7528\u4e8e\u8ba1\u7b97D(i,j,1)}\n      for i:=j downto 1 do\n      begin\n        if labels[i]<=j-i+1 then d:=d+1;          {\u5982\u679c\u5355\u8bcd\u7684\u957f\u5ea6\u5c0f\u4e8ei\u5230j\u7684\u8ddd\u79bb\uff0c\n```\n\u90a3\u4e48\u8fd9\u4e2a\u5355\u8bcd\u5c31\u5305\u542b\u5728ST(i,j)\u5185\uff0c\u5982\u679c\u5355\u8bcd\u542b\u5728ST(i,j)\u5185\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5355\u8bcd\u4e00\u5b9a\u5305\u542b\u5728ST(1 ~ i-1,j)\u5185}\n```cpp\n        dat[1]^.da[i][j]:=d;\n      end;\n    end;                                       {D(1~i,i+1~end,1) \u8ba1\u7b97\u5b8c\u6bd5(1\u2266i\u2266end-1)}\n    for a1:=1 to lo.da[a].k-1 do                     {\u8ba1\u7b97D(1,end,k)}\n    begin\n      if a1=1 then\n      begin\n        i:=1;\n        j:=2;\n      end\n      else\n      begin\n        i:=2+(a1 mod 2);\n        j:=2+((a1+1) mod 2);                      {\u901a\u8fc7i,j\u7684\u4ea4\u6362\u6765\u5b9e\u73b0D(1,end,2~k)\u7684\u8ba1\u7b97}\n      end;\n      for b:=1 to f-a1 do\n        for c:=b+a1 to f do\n        begin\n          max:=0;\n          for d:=b+a1 to c do\n          begin\n            e:=dat[i]^.da[b][d-1]+dat[1]^.da[d][c];\n            if e>max then max:=e;                    {\u8ba1\u7b97MAX(D(b,d,a)+D(d+1,c,a))}\n          end;\n          dat[j]^.da[b][c]:=max;\n        end;\n    end;\n    if lo.da[a].k=1 then j:=1;\n    writeln(dat[j]^.da[1][f]);\n  end;\n  writeln;\nend.\n```",
        "postTime": 1514282176,
        "uid": 57931,
        "name": "Well_whz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u662f\u4e3b\u6d41dp\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e0d\u8bb2dp\uff0c \u8bb2\u5982\u4f55\u5904\u7406\u5b57\u7b26\u4e32\u3002\n\n\u6211\u7528\u7684\u662frabin-karp\u54c8\u5e0c\n\n\u8bb0\u524d i \u4f4d\u7684\u54c8\u5e0c\u503c \u4e3a hx[i]\n\n\u641e\u4e00\u4e2abase\uff0c \u6211\u7684\u662f131\n\nhx[i] = (hx[i-1] \\* base + s[i]) % mod P\n\nP\u662f\u4e2a\u5927\u7d20\u6570\uff0c \u6211\u9009\u7684\u662f1e9+7\n\n\u8fd9\u6837\u6211\u4eec\u7684hx[i]\u5c31\u7b49\u4e8e s[1]\\*base^i-1 + s[2]\\*base^i-2 + ..... s[i]\\*base^0\n\n\u6211\u4eec\u8981\u6c42l, r\u7684\u54c8\u5e0c\u503c\uff0c \u89c2\u5bdf\u4e00\u4e0bhx[l-1] \u548c hx[r]\n\nhx[l-1] = s[1]\\*base^l-2 + s[2]\\*base^l-3 + .....s[l-1]\\*base^0\n\nhx[r] = s[1]\\*base^r-1 + s[2]\\*base^r-2 + .....s[r]\\*base^0\n\n\u6211\u4eec\u53ea\u770bs[1]\u7684\u6307\u6570\u5c31\u884c\u4e86\uff08\u540e\u9762\u4e00\u6837\u7684\uff09\n\n\u4e8e\u662f\u6211\u4eec\u5c06hx[l-1]\u4e58\u4e0a base^r-l+1\u6b21\u65b9\uff0c \u7528hx[r]\u4e00\u51cf\uff0c \u4eces[1]\u5230s[l-1]\u7684\u503c\u5168\u88ab\u6d88\u6389\u4e86\n\n\u6211\u4eec\u5c31\u5f97\u5230\u4e86 [l, r]\u7684\u54c8\u5e0c\u503c\n\n\u7136\u540e\u5c31dp\u5c31\u884c\u4e86\n\ndp\u4e5f\u6709\u4e00\u4e2a\u5751\u7684\u5730\u65b9\uff0c \u56e0\u4e3a\u4e00\u5b9a\u8981\u5206\u6210k\u4efd\uff0c \u4e0d\u80fd < k\u4efd\uff0c \u6240\u4ee5\u6211\u4eec\u5728 f[t][j-1] \u6709\u503c\u7684\u65f6\u5019\u624d\u8f6c\u79fb\n\n\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include <cstdio>\n#include <string.h>\n#define ll long long\n#define min(a, b) ((a) < (b) ? (a) : (b))\n#define max(a, b) ((a) > (b) ? (a) : (b))\n#define base 131\n#define mod 1000000007\nll hx[205], re[205], po[205], t, hav[205][205], s, l[7];\nint f[205][205];\nchar a[205], b[25], c[1005];\nint len;\nll gethash(int l, int r){\n    return ((hx[r] - po[r-l+1]*hx[l-1])%mod+mod) % mod;\n}\nint get(int x, int y){\n    int i;\n    for(i = 1; i <= s; i++) if(gethash(x, min(y, x+l[i]-1)) == re[i]) return 1;\n    return 0;\n}\nint main(){\n    int i, j, p, k, n;\n    scanf(\"%d%d\", &p, &k);\n    scanf(\"%s\", a+1);\n    len = strlen(a+1);\n    for(i = 2; i <= p; i++){\n        scanf(\"%s\", b+1);\n        n = strlen(b+1);\n        for(j = len+1; j <= len+n; j++) a[j] = b[j-len];\n        len += n;\n    }\n    for(i = po[0] = 1; i <= len; i++){\n        po[i] = po[i-1] * base % mod;\n        hx[i] = (hx[i-1] * base + a[i]) % mod;\n    }\n    scanf(\"%d\", &s);\n    for(i = 1; i <= s; i++){\n        scanf(\"%s\", c+1);\n        n = strlen(c+1);\n        l[i] = n;\n        t = 0;\n        for(j = 1; j <= n; j++) t = (t * base + c[j]) % mod;\n        re[i] = t;\n    }\n    for(i = len; i >= 1; i--){\n        for(j = i; j >= 1; j--){\n            hav[j][i] = hav[j+1][i];\n            hav[j][i] += get(j, i);\n        }\n    }\n    for(i = 1; i <= len; i++){\n        f[i][1] = hav[1][i];\n        for(j = 2; j <= k; j++){\n            for(t = 1; t < i; t++){\n                if(f[t][j-1]) f[i][j] = max(f[i][j], f[t][j-1] + hav[t+1][i]);\n            }\n        }\n    }\n    printf(\"%d\", f[len][k]);\n    return 0;\n}\n```",
        "postTime": 1510194608,
        "uid": 31619,
        "name": "Hzxleo4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1026 \u3010\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u3011"
    }
]