[
    {
        "content": "# Sol\n\n\n\u5148\u6b63\u53cd\u4e24\u904d$Dijsktra$\u7b97\u51fa\u7ecf\u8fc7\u67d0\u4e2a\u70b9\u7684$S$\u5230$T$\u7684\u6700\u77ed\u8def\u6761\u6570$F$\n\n\u6ee1\u8db3\u6761\u4ef6\u4e00\u5c31\u662f\u8981\u6ee1\u8db3$F(A)+F(B)=F(T)$\n\n**\u6761\u4ef6\u4e8c**\n\n\u6807\u7b97\u6bd4\u8f83\u7b80\u5355\n\n\u76f4\u63a5$bitset$\u5b58\u50a8\u4e0d\u80fd\u5230\u8fbe\u5b83\u7684\u548c\u5b83\u4e0d\u80fd\u5230\u7684\u70b9\n\n\u7136\u540e\u5f00$map$\u628a\u6240\u6709\u76f8\u540c\u7684$F(B)$\u53d8\u6210$bitset$\n\n\u7136\u540e\u6bcf\u6b21\u679a\u4e3e$A$\uff0c\u5c31\u76f4\u63a5\u67e5\u8868\u7136\u540e\u7528$bitset$\u91cc\u7684$count$\u5c31\u597d\u4e86\n\n\u6ce8\u610f\u5982\u679c$ST$\u4e0d\u8fde\u901a\u8f93\u51fa$C_n^2$\n\n\u7a7a\u95f4$1GB$\u5c31\u53ef\u4ee5\u8fc7\n\n##\u6ce8\u610f\uff01\uff01\uff01\n\n> $AC$\u7684\u540c\u5fd7\u4e0d\u8981\u4ee5\u4e3a\u771f\u7684$AC$\u4e86\uff01\uff01\uff01\n\n> \u6570\u636e\u771f\u7684\u6c34\n\n> $S$\u5230$T$\u7684\u8def\u5f84\u6761\u6570\u4e0d\u4f1a\u5927\u4e8e$1$\n\n> \u7136\u540e\u6211\u81ea\u5df1\u4e71\u6253\u4e00\u4e2a\uff0c\u6837\u4f8b\u90fd\u6ca1\u8fc7\u5c31$AC$\u4e86\n\n\u6807\u7b97\u4ee3\u7801\n\n```cpp\n# include <bits/stdc++.h>\n# define RG register\n# define IL inline\n# define Fill(a, b) memset(a, b, sizeof(a))\nusing namespace std;\nconst int _(50005);\ntypedef long long ll;\n\nIL int Input(){\n    RG int x = 0, z = 1; RG char c = getchar();\n    for(; c < '0' || c > '9'; c = getchar()) z = c == '-' ? -1 : 1;\n    for(; c >= '0' && c <= '9'; c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n    return x * z;\n}\n\nint n, m, cnt, S, T, first[_], d[_], vis[_];\nstruct Edge{\n    int to, next, w;\n} edge[_ << 1];\nll dis[2][_], f[2][_], F[_], ans;\nstruct Point{\n    int u; ll d;\n\n    IL int operator <(RG Point B) const{\n        return d > B.d;\n    }\n};\npriority_queue <Point> Q;\nqueue <int> Que;\nbitset <50000> G[2][_];\nmap <ll, bitset <50000> > M;\n\nIL void Add_Graph(RG int u, RG int v, RG int w){\n    edge[cnt] = (Edge){v, first[u], w}, first[u] = cnt++;\n}\n\nIL void Dijkstra(RG int op){\n    for(RG int i = 1; i <= n; ++i) dis[op][i] = (ll)1e18, vis[i] = 0;\n    if(!op) f[op][S] = 1, dis[op][S] = 0, Q.push((Point){S, 0});\n    else f[op][T] = 1, dis[op][T] = 0, Q.push((Point){T, 0});\n    while(!Q.empty()){\n        RG Point x = Q.top(); Q.pop();\n        if(vis[x.u]) continue;\n        vis[x.u] = 1;\n        for(RG int e = first[x.u]; e != -1; e = edge[e].next){\n            RG int v = edge[e].to, w = edge[e].w;\n            if(x.d + w < dis[op][v]){\n                dis[op][v] = x.d + w, f[op][v] = f[op][x.u];\n                Q.push((Point){v, x.d + w});\n            }\n            else if(x.d + w == dis[op][v]) f[op][v] += f[op][x.u];\n        }\n    }\n}\n\nIL int Check(RG int x, RG ll w, RG int y, RG int op){\n    return dis[op][x] + w + dis[!op][y] == dis[0][T];\n}\n\nIL void TopSort(RG int op){\n    for(RG int i = 1; i <= n; ++i)\n        for(RG int e = first[i]; e != -1; e = edge[e].next){\n            RG int v = edge[e].to, w = edge[e].w;\n            if(Check(i, w, v, op)) ++d[v];\n        }\n    for(RG int i = 1; i <= n; ++i) if(!d[i]) Que.push(i);\n    while(!Que.empty()){\n        RG int u = Que.front(); Que.pop();\n        for(RG int e = first[u]; e != -1; e = edge[e].next){\n            RG int v = edge[e].to, w = edge[e].w;\n            if(!Check(u, w, v, op)) continue;\n            G[op][v] &= G[op][u];\n            if(!--d[v]) Que.push(v);\n        }\n    }\n}\n\nint main(RG int argc, RG char* argv[]){\n    Fill(first, -1), n = Input(), m = Input(), S = Input(), T = Input();\n    for(RG int i = 1; i <= m; ++i){\n        RG int u = Input(), v = Input(), w = Input();\n        Add_Graph(u, v, w), Add_Graph(v, u, w);\n    }\n    Dijkstra(0);\n    if(!f[0][T]) return printf(\"%lld\\n\", 1LL * n * (n - 1) >> 1), 0;\n    Dijkstra(1);\n    for(RG int i = 1; i <= n; ++i){\n        G[0][i].set(), G[1][i].set();\n        G[0][i][0] = G[0][i][i] = G[1][i][0] = G[1][i][i] = 0;\n    }\n    TopSort(0), TopSort(1);\n    for(RG int i = 1; i <= n; ++i)\n        if(dis[0][i] + dis[1][i] == dis[0][T]) F[i] = f[0][i] * f[1][i];\n    for(RG int i = 1; i <= n; ++i) M[F[i]].set(i);\n    for(RG int i = 1; i <= n; ++i)\n        ans += (M[F[T] - F[i]] & G[0][i] & G[1][i]).count();\n    return printf(\"%lld\\n\", ans >> 1), 0;\n}\n```\n\n## \u7136\u800cluogu\u5e76\u4e0d\u80fd\u8fc7\n\n~~TAT~~\n\n\u7136\u540e\u8fd8\u53ef\u4ee5\u8fd9\u6837\u505a\n\n\u9996\u5148\u53ef\u4ee5\u679a\u4e3e\u4e00\u6761\u6700\u77ed\u8def\u4e0a\u7684\u70b9$i$\n\n\u7136\u540e\u679a\u4e3e\u4e0d\u5728\u8fd9\u6761\u6700\u77ed\u8def\u4e0a\u7684\u70b9\u518d\u6765\u7edf\u8ba1\u7b54\u6848\n\n\u628a\u6700\u77ed\u8def\u5f04\u51fa\u6765\u5230\u4e00\u4e2a\u6570\u7ec4\u4e2d\n\n\u7136\u540e\u4e0d\u5728\u8fd9\u6761\u8def\u4e0a\u7684\u70b9\u7684\u5408\u6cd5\u7684$i$\u662f\u8fd9\u4e2a\u6570\u7ec4\u7684\u4e0b\u6807\u7684\u533a\u95f4$[l, r]$\n\n\u7136\u540e\u53ef\u4ee5\u6b63\u53cd\u4e24\u8fb9\u62d3\u6251\u6392\u5e8f\u6c42\u51fa\u8fd9\u4e2a\u533a\u95f4\n\n\u4e3a\u4ec0\u4e48\u662f\u4e00\u4e2a\u533a\u95f4\n\n\u9996\u5148\u524d\u63d0\u662f\u8fd9\u4e2a\u70b9\u8d70\u5230$j$\uff0c\u7136\u540e$j$\u5230$T$\u662f\u6700\u77ed\u8def\n\n- \u5982\u679c$j$\u80fd\u8d70\u5230\u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48$j$\u7684\u6240\u6709\u524d\u9a71\u90fd\u80fd\u5230\u8fd9\u4e2a\u70b9\n\n- \u5982\u679c\u8fd9\u4e2a\u70b9\u80fd\u8d70\u5230$j$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u4e5f\u80fd\u8d70\u5230$j$\u7684\u6240\u6709\u540e\u7ee7\n\n\u7136\u540e\u679a\u4e3e\u6700\u77ed\u8def\u4e0a\u7684\u70b9\uff0c\u6bcf\u6b21\u5230$i$\u65f6\uff0c\u5c31\u628a\u5de6\u7aef\u70b9\u662f$i$\u7684\u52a0\u8fdb$map$\n\n\u7136\u540e\u628a\u53f3\u7aef\u70b9\u662f$i$\u7684\u4ece$map$\u4e2d\u51cf\u6389\n\n```cpp\n# include <bits/stdc++.h>\n# define RG register\n# define IL inline\n# define Fill(a, b) memset(a, b, sizeof(a))\nusing namespace std;\nconst int _(50005);\ntypedef long long ll;\n\nIL int Input(){\n    RG int x = 0, z = 1; RG char c = getchar();\n    for(; c < '0' || c > '9'; c = getchar()) z = c == '-' ? -1 : 1;\n    for(; c >= '0' && c <= '9'; c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n    return x * z;\n}\n\nint n, m, cnt, S, T, first[_], d[_], vis[_], l[_], r[_], p[_], len, pre[_];\nstruct Edge{\n    int to, next, w;\n} edge[_ << 1];\nll dis[2][_], f[2][_], F[_], ans;\nstruct Point{\n    int u; ll d;\n\n    IL int operator <(RG Point B) const{\n        return d > B.d;\n    }\n};\nqueue <int> Que;\nmap <ll, int> M;\npriority_queue <Point> Q;\nvector <int> al[_], ar[_];\n\nIL void Add_Graph(RG int u, RG int v, RG int w){\n    edge[cnt] = (Edge){v, first[u], w}, first[u] = cnt++;\n}\n\nIL void Dijkstra(RG int op){\n    for(RG int i = 1; i <= n; ++i) dis[op][i] = (ll)1e18, vis[i] = 0;\n    if(!op) f[op][S] = 1, dis[op][S] = 0, Q.push((Point){S, 0});\n    else f[op][T] = 1, dis[op][T] = 0, Q.push((Point){T, 0});\n    while(!Q.empty()){\n        RG Point x = Q.top(); Q.pop();\n        if(vis[x.u]) continue;\n        vis[x.u] = 1;\n        for(RG int e = first[x.u]; e != -1; e = edge[e].next){\n            RG int v = edge[e].to, w = edge[e].w;\n            if(x.d + w < dis[op][v]){\n                dis[op][v] = x.d + w, f[op][v] = f[op][x.u];\n                Q.push((Point){v, x.d + w});\n\t\t\t\tif(op) pre[v] = x.u;\n            }\n            else if(x.d + w == dis[op][v]) f[op][v] += f[op][x.u];\n        }\n    }\n}\n\nIL int Check(RG int x, RG ll w, RG int y, RG int op){\n    return dis[op][x] + w + dis[!op][y] == dis[0][T];\n}\n\nIL void TopSort(RG int op){\n    for(RG int i = 1; i <= n; ++i)\n        for(RG int e = first[i]; e != -1; e = edge[e].next){\n            RG int v = edge[e].to, w = edge[e].w;\n            if(Check(i, w, v, op)) ++d[v];\n        }\n    for(RG int i = 1; i <= n; ++i) if(!d[i]) Que.push(i);\n    while(!Que.empty()){\n        RG int u = Que.front(); Que.pop();\n        for(RG int e = first[u]; e != -1; e = edge[e].next){\n            RG int v = edge[e].to, w = edge[e].w;\n            if(!Check(u, w, v, op)) continue;\n\t\t\top ? r[v] = min(r[v], r[u]) : l[v] = max(l[v], l[u]);\n            if(!--d[v]) Que.push(v);\n        }\n    }\n}\n\nint main(RG int argc, RG char* argv[]){\n    Fill(first, -1), n = Input(), m = Input(), S = Input(), T = Input();\n    for(RG int i = 1; i <= m; ++i){\n        RG int u = Input(), v = Input(), w = Input();\n        Add_Graph(u, v, w), Add_Graph(v, u, w);\n    }\n    Dijkstra(0);\n    if(!f[0][T]) return printf(\"%lld\\n\", 1LL * n * (n - 1) >> 1), 0;\n    Dijkstra(1);\n\tfor(RG int i = S; i; i = pre[i]) p[++len] = i, l[i] = len + 1, r[i] = len - 1;\n\tfor(RG int i = 1; i <= n; ++i) if(!(l[i] + r[i])) l[i] = 1, r[i] = len;\n\tTopSort(0), TopSort(1);\n    for(RG int i = 1; i <= n; ++i){\n        if(dis[0][i] + dis[1][i] == dis[0][T]) F[i] = f[0][i] * f[1][i];\n\t\tif(l[i] > r[i]) continue;\n\t\tal[l[i]].push_back(i), ar[r[i]].push_back(i);\n\t}\n\tfor(RG int i = 1; i <= len; ++i){\n\t\tfor(RG int l = al[i].size(), j = 0; j < l; ++j) ++M[F[al[i][j]]];\n\t\tans += M[F[T] - F[p[i]]];\n\t\tfor(RG int l = ar[i].size(), j = 0; j < l; ++j) --M[F[ar[i][j]]];\n\t}\n    return printf(\"%lld\\n\", ans), 0;\n}\n\n```\n",
        "postTime": 1522640358,
        "uid": 47640,
        "name": "Cyhlnj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4061 \u3010[Code+#1]\u5927\u5409\u5927\u5229\uff0c\u665a\u4e0a\u5403\u9e21\uff01\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u5de8\u4f6c\u4eec\u7684\u9898\u89e3\u90fd\u597d\u96be\u61c2\uff08\u6211\u662f\u4ed4\u7ec6\u9605\u8bfb\u4e86 @[Cyhlnj](https://www.luogu.com.cn/user/47640) \u9898\u89e3\u4e2d\u7684\u6bcf\u4e00\u53e5\u4ee3\u7801\u624d\u5f04\u61c2\u7684\uff09\uff0c\u4e8e\u662f\u6211\u8fd9\u4e2a\u849f\u84bb\u6253\u7b97\u5199\u4e00\u7bc7**\u601d\u8def\u6e05\u6670\u3001\u5c3d\u53ef\u80fd\u4e25\u8c28**\u7684\u9898\u89e3\uff0c\u5982\u6709\u9519\u8bef\u8fd8\u8bf7\u6307\u6b63\u3002\n\n\u987a\u5e26\u4e00\u63d0\uff0c[\u8fd9\u91cc](https://www.luogu.com.cn/paste/r3wirkn6)\u6709\u4e24\u7ec4 Hack \u6570\u636e\u3002\u622a\u6b62\u672c\u6587\u53d1\u5e03\u524d\uff082021.8.25\uff09\uff0c\u672c\u9898\u9898\u89e3\u533a\u53ea\u6709 FrenkiedeJong21 \u7684\u9898\u89e3\u80fd\u901a\u8fc7\u8fd9\u4e24\u7ec4\u6570\u636e\uff08\u5f53\u7136\u672c\u9898\u89e3\u7684\u4ee3\u7801\u662f\u53ef\u4ee5\u8fc7\u7684\uff09\uff0c\u5177\u4f53\u539f\u56e0\u89c1[\u8fd9\u4e2a\u5e16\u5b50](https://www.luogu.com.cn/discuss/show/345428)\u3002\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u4ee5\u53ca\u8d77\u70b9 $S$ \u548c\u7ec8\u70b9 $T$\u3002\u6c42\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u7684\u65e0\u5e8f\u70b9\u5bf9 $(A,B)$ \u7684\u6570\u91cf\u3002\n\n\u6761\u4ef6\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u6761\u4ece $S$ \u5230 $T$ \u7684\u6700\u77ed\u8def\u5f84\uff0c\u5176**\u6070\u597d\u7ecf\u8fc7 $A$ \u548c $B$ \u5176\u4e2d\u4e4b\u4e00**\u3002\n\n**\u6570\u636e\u8303\u56f4**\uff1a$1 \\le n,m \\le 5 \\times 10^4$\uff0c\u8fb9\u6743 $w$ \u6ee1\u8db3 $1 \\le w \\le 10^9$\u3002\n\nP.S. \u672c\u9898\u6570\u636e\u53ef\u80fd\u51fa\u73b0\u4ece $S$ \u51fa\u53d1\u65e0\u6cd5\u5230\u8fbe $T$ \u7684\u60c5\u51b5\u3002\u6839\u636e\u524d\u4eba\u7684\u7ecf\u9a8c\uff0c\u6b64\u65f6\u5e94\u8f93\u51fa $\\binom{n}{2}=\\dfrac{n(n-1)}{2}$\u3002\n\n------------\n\nP.S. \u4e3a\u4e86\u65b9\u4fbf\u53d9\u8ff0\uff0c**\u9ed8\u8ba4\u4e0b\u6587\u4e2d\u7684\u201c\u8def\u5f84\u201d\u201c\u6700\u77ed\u8def\u5f84\u201d\u7b49\u5747\u6307\u201c\u4ece $S$ \u5230 $T$ \u7684\u6700\u77ed\u8def\u5f84\u201d**\u3002\n\n## \u5206\u6790\n\n\u8bbe $F(i)$ \u8868\u793a\u7ecf\u8fc7 $i$ \u53f7\u70b9\u7684\u8def\u5f84\u6570\u91cf\uff0c\u90a3\u4e48 $F$ \u53ef\u4ee5\u901a\u8fc7**\u6b63\u53cd\u4e24\u6b21 Dijkstra** \u6c42\u51fa\u3002\n\n\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\u6ee1\u8db3\u9898\u610f\u7684\u5fc5\u8981\u6761\u4ef6\uff1a$F(A)+F(B)=F(T)$\uff0c\u5373\u7ecf\u8fc7 $A,B$ \u4e24\u4e2a\u70b9\u7684\u8def\u5f84\u6570\u4e4b\u548c\u7b49\u4e8e\u603b\u8def\u5f84\u6570\u3002\n\n\u8fdb\u4e00\u6b65\uff0c\u7b54\u6848\u5e94\u4e3a\uff1a\u6ee1\u8db3 $F(A)+F(B)=F(T)$ \u4e14\u4e0d\u5b58\u5728\u4e00\u6761\u8def\u5f84\u540c\u65f6\u7ecf\u8fc7 $A$ \u548c $B$ \u7684\u65e0\u5e8f\u70b9\u5bf9 $(A,B)$ \u7684\u6570\u91cf\u3002\uff08\u56e0\u4e3a\u6570\u91cf\u4e4b\u548c\u8fbe\u5230\u4e0a\u9650\uff0c\u6240\u4ee5\u53ea\u9700\u4fdd\u8bc1\u6bcf\u6761\u8def\u5f84\u53ea\u7ecf\u8fc7\u81f3\u591a\u4e00\u4e2a\u70b9\uff0c\u5373\uff1a\u5728 $F(A)$ \u548c $F(B)$ \u4e2d\u81f3\u591a\u4e00\u4e2a\u63d0\u4f9b\u8d21\u732e\uff09\n\n\u7531\u4e8e $F(A)+F(B)=F(T)$ \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u91cf\u5173\u7cfb\u9650\u5236\uff0c\u5bb9\u6613\u5904\u7406\u3002\u4e8e\u662f\u8003\u8651**\u5982\u4f55\u6c42\u51fa\u4e0d\u5b58\u5728\u4e00\u6761\u8def\u5f84\u540c\u65f6\u7ecf\u8fc7 $A$ \u548c $B$ \u7684\u65e0\u5e8f\u70b9\u5bf9 $(A,B)$**\uff08\u5f53\u7136\u4e0d\u662f\u4e00\u4e2a\u4e00\u4e2a\u5217\u4e3e\u51fa\uff0c\u800c\u662f\u8ba1\u7b97\u51fa\u80fd\u4ee3\u8868\u5176\u7279\u5f81\u7684\u6570\u636e\uff09\uff0c\u518d\u8ba1\u7b97\u51fa\u5176\u4e2d\u6ee1\u8db3 $F(A)+F(B)=F(T)$ \u7684\u6570\u91cf\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u4efb\u53d6\u4e00\u6761 $S$ \u5230 $T$ \u7684\u6700\u77ed\u8def\u5f84 $P$\uff0c\u90a3\u4e48 $A$ \u548c $B$ \u4e2d\u6070\u597d\u4e00\u4e2a\u5728 $P$ \u4e0a\u3002\u4e0d\u59a8\u8bbe $A$ \u5728\u8def\u5f84 $P$ \u4e0a\uff0c\u5219 $B$ \u4e0d\u5728\u8def\u5f84 $P$ \u4e0a\u3002\n\n### \u7ed3\u8bba\u4e00\n\n\u5bf9\u4e8e\u56fa\u5b9a\u7684 $B$\uff0c\u4f7f\u5f97 $A$ \u548c $B$ \u6ee1\u8db3\u7279\u6b8a\u6027\u8d28\u7684\u5168\u4f53 $A$\uff0c\u5728\u8def\u5f84 $P$ \u4e0a\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u3002\uff08**\u201c$x$ \u548c $y$ \u6ee1\u8db3\u7279\u6b8a\u6027\u8d28\u201d\u6307\u201c\u4e0d\u5b58\u5728\u4e00\u6761\u8def\u5f84\u540c\u65f6\u7ecf\u8fc7 $x$ \u548c $y$\u201d\uff0c\u4e0b\u540c**\uff09\n\n### \u7ed3\u8bba\u4e00\u8bc1\u660e\n\n\u8bbe $X,Y,Z$ \u4e3a\u8def\u5f84 $P$ \u4e0a\u987a\u6b21\uff08**\u201c\u987a\u6b21\u201d\u6307\u6309\u4ece $S$ \u5230 $T$ \u4f9d\u6b21\u7ecf\u8fc7\u7684\u987a\u5e8f\uff0c\u4e0d\u4e00\u5b9a\u8fde\u7eed\uff0c\u4e0b\u540c**\uff09\u51fa\u73b0\u7684\u4e09\u4e2a\u70b9\u3002\u5047\u8bbe $X$ \u548c $B$\uff0c$Z$ \u548c $B$ \u90fd\u6ee1\u8db3\u7279\u6b8a\u6027\u8d28\uff0c\u4f46 $Y$ \u548c $B$ \u4e0d\u6ee1\u8db3\u7279\u6b8a\u6027\u8d28\u3002\n\n\u90a3\u4e48\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u5b58\u5728\u4e00\u6761\u6700\u77ed\u8def\u5f84 $P_1$\uff0c\u5148\u7ecf\u8fc7 $Y$ \u518d\u7ecf\u8fc7 $B$\u3002\n\t- \u5c06\u8def\u5f84 $P_1$ \u4ece $S$ \u5230 $Y$ \u7684\u90e8\u5206\u7528\u8def\u5f84 $P$ \u4ece $S$ \u5230 $Y$ \u7684\u90e8\u5206\u66ff\u6362\uff0c\u5f97\u5230\u8def\u5f84 $P_2$\u3002\u663e\u7136 $P_2$ \u4e5f\u4e3a\u6700\u77ed\u8def\u5f84\uff0c\u4e14 $P_2$ \u5148\u7ecf\u8fc7 $X$ \u518d\u7ecf\u8fc7 $B$\uff0c\u8fd9\u4e0e $X$ \u548c $B$ \u6ee1\u8db3\u7279\u6b8a\u6027\u8d28\u77db\u76fe\u3002\n1. \u5b58\u5728\u4e00\u6761\u6700\u77ed\u8def\u5f84 $P_3$\uff0c\u5148\u7ecf\u8fc7 $B$ \u518d\u7ecf\u8fc7 $Y$\u3002\n\t- \u5c06\u8def\u5f84 $P_3$ \u4ece $Y$ \u5230 $T$ \u7684\u90e8\u5206\u7528\u8def\u5f84 $P$ \u4ece $Y$ \u5230 $T$ \u7684\u90e8\u5206\u66ff\u6362\uff0c\u5f97\u5230\u8def\u5f84 $P_4$\u3002\u663e\u7136 $P_4$ \u4e5f\u4e3a\u6700\u77ed\u8def\u5f84\uff0c\u4e14 $P_4$ \u5148\u7ecf\u8fc7 $B$ \u518d\u7ecf\u8fc7 $Z$\uff0c\u8fd9\u4e0e $Z$ \u548c $B$ \u6ee1\u8db3\u7279\u6b8a\u6027\u8d28\u77db\u76fe\u3002\n\n\u56e0\u6b64\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\u5219\u7ed3\u8bba\u4e00\u6210\u7acb\u3002\n\n### \u7ed3\u8bba\u4e8c\n\n\u8bbe $X,Y$ \u4e3a**\u4efb\u610f**\u6700\u77ed\u8def\u5f84\u4e0a\u987a\u6b21\u51fa\u73b0\u7684\u4e24\u4e2a\u70b9\uff0c\u5219\u4e0d\u5b58\u5728\u6700\u77ed\u8def\u5f84\u5148\u7ecf\u8fc7 $Y$ \u518d\u7ecf\u8fc7 $X$\u3002\n\n### \u7ed3\u8bba\u4e8c\u8bc1\u660e\n\n\u8bbe $S$ \u5230 $X$ \u7684\u6700\u77ed\u8ddd\u79bb\u4e3a $a$\uff0c$X$ \u5230 $Y$ \u7684\u6700\u77ed\u8ddd\u79bb\u4e3a $e$\uff0c$Y$ \u5230 $T$ \u7684\u6700\u77ed\u8ddd\u79bb\u4e3a $b$\uff0c\u5219 $S$ \u5230 $T$ \u7684\u6700\u77ed\u8def\u5f84\u8ddd\u79bb\u4e3a $a+e+b$\u3002\u518d\u8bbe $S$ \u5230 $Y$ \u7684\u6700\u77ed\u8ddd\u79bb\u4e3a $c$\uff0c$X$ \u5230 $T$ \u7684\u6700\u77ed\u8def\u5f84\u4e3a $d$\u3002\n\n\u5047\u8bbe\u5b58\u5728\u4e00\u6761\u5148\u7ecf\u8fc7 $Y$ \u518d\u7ecf\u8fc7 $X$ \u7684\u6700\u77ed\u8def\u5f84\uff0c\u5219 $c+e+d=a+e+b$\u3002\u8fdb\u4e00\u6b65\u6709 $c \\le a$ \u4e14 $d \\ge b$\uff0c\u6216 $c \\ge a$ \u4e14 $d \\le b$\u3002\n\n\u82e5 $c \\le a$\uff0c\u5219 $S$ \u5230 $T$ \u5b58\u5728\u4e00\u6761\u7ecf\u8fc7 $Y$ \u7684\u8def\u5f84\uff0c\u5176\u957f\u5ea6\u4e3a $c+b \\le a+b < a+e+b$\u3002\n\n\u82e5 $d \\le b$\uff0c\u5219 $S$ \u5230 $T$ \u5b58\u5728\u4e00\u6761\u7ecf\u8fc7 $X$ \u7684\u8def\u5f84\uff0c\u5176\u957f\u5ea6\u4e3a $a+d \\le a+b < a+e+b$\u3002\n\n\u8fd9\u4e0e $S$ \u5230 $T$ \u7684\u6700\u77ed\u8ddd\u79bb\u4e3a $a+e+b$ \u77db\u76fe\uff0c\u56e0\u6b64\u5047\u8bbe\u4e0d\u6210\u7acb\u3002\n\n\u6545\u7ed3\u8bba\u4e8c\u6210\u7acb\u3002\n\n### \u63a8\u8bba\n\n\u7531\u7ed3\u8bba\u4e8c\u53ef\u77e5\uff1a**\u628a\u6240\u6709\u6700\u77ed\u8def\u5f84\u770b\u6210\u6709\u5411\u8def\u5f84\uff0c\u7136\u540e\u53d6\u5b83\u4eec\u7684\u5e76\u96c6\uff0c\u6240\u5f62\u6210\u7684\u6709\u5411\u56fe\u662f\u4e00\u4e2a DAG**\uff08Directed Acyclic Graph\uff0c\u6709\u5411\u65e0\u73af\u56fe\uff09\u3002\n\n### \u6c42\u89e3\u4e0d\u5b58\u5728\u8def\u5f84\u540c\u65f6\u7ecf\u8fc7 $x$ \u548c $y$ \u7684\u65e0\u5e8f\u70b9\u5bf9 $(x,y)$\n\n\u5c06\u8def\u5f84 $P$ \u4e0a\u7684\u70b9\u987a\u6b21\u8bb0\u4e3a $p_1,p_2,\\cdots,p_t$\uff0c\u5176\u4e2d $t$ \u4e3a\u8def\u5f84 $P$ \u4e0a\u7684\u70b9\u6570\u3002\uff08Dijkstra \u65f6\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u524d\u9a71\uff0c\u5373\u53ef\u6c42\u51fa\u67d0\u6761\u6700\u77ed\u8def\u5f84 $P$ \u4e0a\u7684 $p_1,p_2,\\cdots,p_t$\uff09\n\n\u7531\u7ed3\u8bba\u4e00\uff0c**\u8bbe\u8def\u5f84 $P$ \u4e0a\u548c $i$ \u53f7\u70b9\u6709\u7279\u6b8a\u6027\u8d28\u7684\u5168\u4f53\u70b9\u4e3a $p_{L(i)},p_{L(i)+1},\\cdots,p_{R(i)}$**\uff08$L(i)>R(i)$ \u8868\u793a\u4e0d\u5b58\u5728\uff09\uff0c\u5219\u6709\u5982\u4e0b\u7b49\u5f0f\uff1a\n\n$$L(i)=\\max_{p_{_k} \\to i}k+1$$\n\n$$R(i)=\\min_{i \\to p_{_k}}k-1$$\n\n\u5176\u4e2d**\u6761\u4ef6 $x \\to y$ \u8868\u793a\u5b58\u5728\u5148\u7ecf\u8fc7 $x$ \u518d\u7ecf\u8fc7 $y$ \u7684\u6700\u77ed\u8def\u5f84**\u3002\n\n\u4e3a\u4e86\u4fbf\u4e8e\u8ba1\u7b97\uff0c\u6211\u4eec\u5c06\u5176\u6539\u6210\u9012\u63a8\u5f62\u5f0f\uff1a\n\n$$L(i)=\\begin{cases}\nj+1 \\quad (i=p_j)\\\\\n\\max_{(k,i) \\in E}L(k) \\quad (\\text{otherwise})\n\\end{cases}$$\n\n$$R(i)=\\begin{cases}\nj-1 \\quad (i=p_j)\\\\\n\\min_{(i,k) \\in E}R(k) \\quad (\\text{otherwise})\n\\end{cases}$$\n\n\u5176\u4e2d**\u6761\u4ef6 $(x,y) \\in E$ \u8868\u793a $x$ \u548c $y$ \u4e4b\u95f4\u5b58\u5728\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\uff0c\u4e14\u5b58\u5728\u4e00\u6761\u6700\u77ed\u8def\u5f84\u5148\u7ecf\u8fc7 $x$ \u518d\u7ecf\u8fc7 $y$**\u3002\n\n\u7531\u63a8\u8bba\u53ef\u77e5\uff0c\u7531\u4e8e\u6709\u5411\u6700\u77ed\u8def\u5f84\u7684\u5e76\u96c6\u5f62\u6210\u7684\u56fe\u662f DAG\uff0c\u53ef\u4ee5\u4f7f\u7528**\u62d3\u6251\u6392\u5e8f**\u5bf9 $L$ \u548c $R$ \u8fdb\u884c\u8f6c\u79fb\u3002\uff08\u5373\uff1a\u53ea\u8003\u8651\u6700\u77ed\u8def\u5f84\u53ef\u80fd\u7ecf\u8fc7\u7684\u8fb9\uff0c\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff09\n\n### \u6c42\u89e3\u5176\u4e2d\u6ee1\u8db3 $F$ \u4e4b\u548c\u7b49\u4e8e $F(T)$ \u7684\u65e0\u5e8f\u70b9\u5bf9\u6570\u91cf\n\n\u7531\u4e0a\u4e00\u90e8\u5206\u77e5\uff0c\u6240\u6709\u7684\u3001\u4e0d\u5b58\u5728\u8def\u5f84\u540c\u65f6\u7ecf\u8fc7 $x$ \u548c $y$ \u7684\u65e0\u5e8f\u70b9\u5bf9 $(x,y)$ \u4e3a\u5168\u4f53 $(i,p_j)$\uff0c\u5176\u4e2d $i$ \u4e0d\u5728\u8def\u5f84 $P$ \u4e0a\u4e14 $j \\in [l(i),r(i)]$\u3002\n\n\u81f3\u6b64\uff0c\u53ea\u9700\u89e3\u51b3\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff1a\u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c\u6c42\u51fa\u6ee1\u8db3 $j \\in [l(i),r(i)]$ \u4e14 $F(i)+F(p_j)=F(T)$ \u7684 $j$ \u7684\u6570\u91cf\u3002\n\n\u62ff\u4e00\u4e2a **map** \u5f53\u6876\uff0c\u5728\u8ba1\u7b97 $p_{l(i)}$ \u7684\u8d21\u732e\u524d\u628a\u503c $F(i)$ \u52a0\u5165\uff0c\u5728\u8ba1\u7b97 $p_{r(i)}$ \u7684\u8d21\u732e\u540e\u628a\u503c $F(i)$ \u5220\u9664\uff0c$F(i)+F(p_j)=F(T)$ \u7684 $i$ \u7684\u6570\u91cf\u5373\u4e3a\u8ba1\u7b97\u65f6 map \u4e2d\u503c $F(T)-F(p_j)$ \u7684\u6570\u91cf\u3002\n\n\u6ce8\u610f\uff1a\u5728\u672c\u9898\u7684\u9650\u5236\u4e0b\uff0c\u8d77\u70b9 $S$ \u5230\u7ec8\u70b9 $T$ \u7684\u6700\u77ed\u8def\u5f84\u6570\u91cf $F$ \u53ef\u4ee5\u8fbe\u5230\u6307\u6570\u7ea7\u522b\u3002\u56e0\u6b64\uff0c**\u8981\u5c06\u6700\u77ed\u8def\u5f84\u7684\u6570\u91cf $F$ \u5bf9\u5927\u8d28\u6570\u53d6\u6a21**\uff0c\u5426\u5219\u53ef\u4ee5\u88ab\u3010\u524d\u8a00\u3011\u4e2d\u63d0\u5230\u7684 Hack \u6570\u636e Hack\u3002\n\n### \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\n\n\u5806\u4f18\u5316 Dijkstra \u662f $O(m\\log{m})$ \u7684\uff0c\u62d3\u6251\u6392\u5e8f\u662f $O(m)$ \u7684\uff0cmap \u7684\u52a0\u5165\u3001\u5220\u9664\u3001\u67e5\u8be2\u6b21\u6570\u4e3a $O(n)$\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m\\log{m}+n\\log{n})$\u3002\n\n## \u4ee3\u7801\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,S,T;\nconst int max_n=5e4+5;\nconst int max_m=5e4+5;\nint End[max_m<<1],Last[max_n],Next[max_m<<1],Len[max_m<<1],e;\ninline void add_edge(int x,int y,int z)\n{\n\tEnd[++e]=y,Next[e]=Last[x],Last[x]=e,Len[e]=z;\n\tEnd[++e]=x,Next[e]=Last[y],Last[y]=e,Len[e]=z;\n}\ntypedef pair<long long,int> P;\npriority_queue<P,vector<P>,greater<P> > Q;\nlong long dis[2][max_n];\nconst int mod=1e9+7;\ninline void add(int &a,int b)\n{\n\ta=a+b-(a+b>=mod?mod:0);\n}\ninline int get_dif(int a,int b)\n{\n\treturn a-b+(a<b?mod:0);\n}\nint f[2][max_n],pre[max_n];\ninline void Dijkstra(int op)\n{\n\tfor(int i=1;i<=n;++i)\n\t\tdis[op][i]=1e18;\n\tif(!op)\n\t{\n\t\tdis[op][S]=0,f[op][S]=1;\n\t\tQ.push(P(0,S));\n\t}\n\telse\n\t{\n\t\tdis[op][T]=0,f[op][T]=1;\n\t\tQ.push(P(0,T));\n\t}\n\twhile(Q.size())\n\t{\n\t\tlong long d=Q.top().first;\n\t\tint x=Q.top().second;\n\t\tQ.pop();\n\t\tif(dis[op][x]<d)\n\t\t\tcontinue;\n\t\tfor(int i=Last[x];i;i=Next[i])\n\t\t{\n\t\t\tint y=End[i];\n\t\t\tif(d+Len[i]<dis[op][y])\n\t\t\t{\n\t\t\t\tdis[op][y]=d+Len[i];\n\t\t\t\tf[op][y]=f[op][x];\n\t\t\t\tif(op)\n\t\t\t\t\tpre[y]=x;\n\t\t\t\tQ.push(P(dis[op][y],y));\n\t\t\t}\n\t\t\telse if(d+Len[i]==dis[op][y])\n\t\t\t\tadd(f[op][y],f[op][x]);\n\t\t}\n\t}\n}\ninline bool check(int op,int x,int y,int w)\n{\n\treturn dis[op][x]+w+dis[op^1][y]==dis[0][T];\n}\nint p[max_n],tot,l[max_n],r[max_n],d[max_n],que[max_n],head,tail;\ninline void TopSort(int op)\n{\n\tfor(int x=1;x<=n;++x)\n\t\tfor(int i=Last[x];i;i=Next[i])\n\t\t{\n\t\t\tint y=End[i];\n\t\t\tif(check(op,x,y,Len[i]))\n\t\t\t\t++d[y];\n\t\t}\n\thead=1,tail=0;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(!d[i])\n\t\t\tque[++tail]=i;\n\t}\n\twhile(head<=tail)\n\t{\n\t\tint x=que[head++];\n\t\tfor(int i=Last[x];i;i=Next[i])\n\t\t{\n\t\t\tint y=End[i];\n\t\t\tif(check(op,x,y,Len[i]))\n\t\t\t{\n\t\t\t\top?r[y]=min(r[x],r[y]):l[y]=max(l[x],l[y]);\n\t\t\t\tif(!--d[y])\n\t\t\t\t\tque[++tail]=y;\n\t\t\t}\n\t\t}\n\t}\n\tassert(tail==n);\n}\nint F[max_n];\nvector<int> id_l[max_n],id_r[max_n];\nmap<int,int> cnt;\nint main()\n{\n\tscanf(\"%d%d%d%d\",&n,&m,&S,&T);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadd_edge(u,v,w);\n\t}\n\tDijkstra(0);\n\tif(dis[0][T]==1e18)\n\t{\n\t\tprintf(\"%lld\\n\",n*(n-1ll)>>1);\n\t\treturn 0;\n\t}\n\tDijkstra(1);\n\tfor(int i=S;i;i=pre[i])\n\t\tp[++tot]=i,l[i]=tot+1,r[i]=tot-1;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(dis[0][i]+dis[1][i]==dis[0][T])\n\t\t\tF[i]=1ll*f[0][i]*f[1][i]%mod;\n\t\tif(!l[i])\n\t\t\tl[i]=1,r[i]=tot;\n\t}\n\tTopSort(0),TopSort(1);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(l[i]<=r[i])\n\t\t{\n\t\t\tid_l[l[i]].push_back(i);\n\t\t\tid_r[r[i]].push_back(i);\n\t\t}\n\t}\n\tlong long ans=0;\n\tfor(int i=1;i<=tot;++i)\n\t{\n\t\tfor(vector<int>::iterator it=id_l[i].begin();it!=id_l[i].end();++it)\n\t\t\t++cnt[F[*it]];\n\t\tans+=cnt[get_dif(F[T],F[p[i]])];\n\t\tfor(vector<int>::iterator it=id_r[i].begin();it!=id_r[i].end();++it)\n\t\t\t--cnt[F[*it]];\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1629775191,
        "uid": 145355,
        "name": "wsyhb",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011\u6d1b\u8c37 P4061 [Code+#1]\u5927\u5409\u5927\u5229\uff0c\u665a\u4e0a\u5403\u9e21\uff01"
    },
    {
        "content": "\u8bb2\u4e00\u79cd\u548c\u9898\u89e3\u4e0d\u5927\u4e00\u6837\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u90fd\u8981\u7528bitset\n\n\u9996\u5148\u8fd9\u9898\u6709\u79cd\u4e0d\u9760\u8c31\u7684\u8fc7\u9898\u529e\u6cd5\uff0c\u5c31\u662f\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u5b83\u9020\u7684\u6570\u636e\u4e0d\u5f3a\uff0c~~\u5f88\u5f31~~\uff0c\u56e0\u4e3a\u6240\u6709\u6570\u636e\u91cc\u9762\u7684\u6700\u77ed\u8def\u90fd\u53ea\u6709\u4e00\u6761\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u975e\u5e38\u65b9\u4fbf\u7684\u529e\u6cd5\u89e3\u51b3\u4e86\uff01\n\nAns\u5c31\u662f\u5728\u6700\u77ed\u8def\u4e0a\u7684\u70b9\u6570\u4e58\u4ee5\u4e0d\u5728\u6700\u77ed\u8def\u4e0a\u7684\u70b9\u6570\uff0c\u6211\u4eec\u7528\u4e00\u4e2acnt\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u6700\u77ed\u8def\u7684\u70b9\u6570\u5c31\u53ef\u4ee5\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define pb push_back\n#define pii pair<int,int>\nusing namespace std;\nconst int N=5e4+5;\nconst LL Inf=1e18;\nint n,m,s,t,cnt[N];LL dis[N];bool inq[N];\nvector<pii>adj[N];queue<int>q;\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&m,&s,&t);\n\tfor(int i=1,u,v,w;i<=m;i++)scanf(\"%d%d%d\",&u,&v,&w),adj[u].pb(pii(v,w)),adj[v].pb(pii(u,w));\n\tfor(int i=1;i<=n;i++)dis[i]=Inf;\n\tq.push(s);dis[s]=0;cnt[s]=1; \n\twhile(!q.empty()){\n\t\tint u=q.front(),v,w;q.pop();inq[u]=false;\n\t\tfor(auto e:adj[u]){\n\t\t\tv=e.first;w=e.second;\n\t\t\tif(dis[v]>dis[u]+(LL)w){\n\t\t\t\tdis[v]=dis[u]+(LL)w;cnt[v]=cnt[u]+1;\n\t\t\t\tif(!inq[v])q.push(v),inq[v]=true;\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[t]>=Inf)printf(\"%lld\\n\",(LL)n*(n-1)/2);else printf(\"%d\\n\",cnt[t]*(n-cnt[t]));\n\treturn 0;\n}\n```\n\n\u6211\u4eec\u8003\u8651\u6b63\u89e3\u600e\u4e48\u505a\uff1f\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u5982\u679c\u8fd9\u4e2a\u56fe\u6ca1\u6709\u6700\u77ed\u8def\uff0c\u4e5f\u5c31\u662f\u4e0d\u8fde\u901a\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u6240\u6709\u7684\u9009\u62e9\u65b9\u6848\u90fd\u53ef\u4ee5\uff1f\n\n\u6211\u4eec\u5148\u8003\u8651\uff0c\u5982\u679c\u8fd9\u9898\u7684\u8303\u56f4\u662fn<=2000\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u7528n\u65b9\u7684\u65f6\u95f4\u53bb\u679a\u4e3e\u8fd9\u4e24\u4e2a\u70b9\uff0c\u7136\u540e\u6211\u4eec\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u70b9\u662f\u5426\u6ee1\u8db3\u9898\u76ee\u6240\u8981\u6c42\u7684\u7684\u5173\u7cfb\n\n\u600e\u4e48\u5224\u65ad\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\u60c5\u51b5\u5927\u6982\u5206\u4e3a\u4e24\u7c7b\uff0c\n\n\u4e00\u7c7b\u662f\u4e24\u4e2a\u70b9\u90fd\u5728\u6700\u77ed\u8def\u4e0a\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u5e94\u8be5\u662f\u4e24\u4e2a\u70b9\u4e0d\u80fd\u51fa\u73b0\u5728\u540c\u4e00\u6761\u6700\u77ed\u8def\u4e0a\uff0c\u5e76\u4e14\u6211\u4eec\u8003\u8651\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u70b9u\u51fa\u73b0\u5728\u591a\u5c11\u6761\u6700\u77ed\u8def\u4e0a\u4e3aF(u)\n\n\u90a3\u4e48F(u)+F(v)=F(t)\uff0cF(t)\u8868\u793a\u7ec8\u70b9\uff0c\u8fd9\u91cc\u6307\u7684\u5c31\u662f\u6240\u6709\u6700\u77ed\u8def\u7684\u6761\u6570\n\n\u8fd8\u6709\u53e6\u5916\u4e00\u7c7b\u5c31\u662f\u4e00\u4e2a\u70b9\u51fa\u73b0\u5728\u6240\u6709\u7684\u6700\u77ed\u8def\u4e0a\uff0c\u8fd8\u6709\u4e00\u4e2a\u70b9\u5728\u6240\u6709\u6700\u77ed\u8def\u4e0a\u90fd\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u6211\u4eec\u8fd9\u4e2a\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u51fa\u73b0\u5728\u6240\u6709\u7684\u6700\u77ed\u8def\u4e0a\u7684\u70b9\uff0c\u4ee5\u53ca\u6240\u6709\u6700\u77ed\u8def\u4e0a\u90fd\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u70b9\uff0c\u7136\u540e\u5c31\u53ef\u4ee5O(1)\u5224\u65ad\n\n\u6211\u4eec\u6765\u7b80\u8981\u5730\u8bf4\u4e00\u4e0b\u8fd9\u4e2aF\u548c\u662f\u5426\u51fa\u73b0\u5728\u6700\u77ed\u8def\u4e0a\u600e\u4e48\u662f\u5b9e\u73b0\uff1f\n\n\u5927\u6982\u662f\u6211\u4eec\u7528s\u548ct\u5206\u522b\u4f5c\u4e3a\u8d77\u70b9\u6765\u8dd1\u6700\u77ed\u8def\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u5728\u6700\u77ed\u8def\u4e0a\u5c31\u662f\u4e00\u4e2a\u70b9s\u4e3a\u8d77\u70b9\u7684dis\u52a0\u4e0at\u4e3a\u8d77\u70b9\u7684dis\u7b49\u4e8e\u539f\u56fe\u7684\u6700\u77ed\u8def\u957f\u5ea6\uff0c\n\n\u540c\u7406\uff0c\u6211\u4eec\u901a\u8fc7cnt\u6570\u7ec4\u8bb0\u5f55\u4e86\u4e00\u4e2a\u70b9\u6700\u77ed\u8def\u7684\u6761\u6570\uff0c\u6211\u4eec\u7528\u8fd9\u4e2a\u70b9\u5728\u539f\u56fe\u548c\u53cd\u56fe\u7684cnt\u4e58\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u70b9\u5728\u591a\u5c11\u6700\u77ed\u8def\u4e0a\uff0c\u6211\u4eec\u8fd9\u91cc\u7528\u4e86\u4e00\u4e2a\u6a21\u6570\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6761\u6570\u53ef\u80fd\u5f88\u5927\uff0c\u8fd9\u91cc998244353\u4e0d\u4f1a\u88ab\u5361\uff0c\u53ef\u4ee5\u653e\u5fc3\u4f7f\u7528\u3002\n\n\u7136\u540e\u4e24\u4e2a\u70b9\u662f\u5426\u51fa\u73b0\u5728\u540c\u4e00\u4e2a\u6700\u77ed\u8def\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e8e\u8bb0\u5f55cnt\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e2abitset\uff0c\u8fd9\u91cc\u5c06\u8fd11G\u7684\u5185\u5b58\u662f\u53ef\u4ee5\u63a5\u53d750000\u7684\u8fd9\u4e2a\u89c4\u6a21\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5927\u6982\u5f97\u51fa\u4e86O(n^2)\u7684\u66b4\u529b\u4ee3\u7801\uff1a\n\uff08\u52a0\u4e0a\u4e0d\u8fde\u901a\u7684\u5224\u65ad\u53ef\u4ee5\u901a\u8fc790%\u7684\u6d4b\u8bd5\u70b9\uff09\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define pii pair<LL,int>\nusing namespace std;\nconst int N=5e4+5,P=998244353;\nconst LL Inf=1e18;\nstruct Edge{int to,w,nxt;}e[N<<1];\nint n,m,s,t,fst[N],tote,ans;bool fl[2005][2005];\nbitset<N>b[N];\nvoid adde(int u,int v,int w){e[++tote]=(Edge){v,w,fst[u]};fst[u]=tote;}\nstruct Dij{\n\tLL dis[N];int cnt[N];bool vis[N];\n\tpriority_queue<pii>q;\n\tvoid dij(int s,int type){\n\t\tfor(int i=1;i<=n;i++)dis[i]=Inf,vis[i]=false;\n\t\tq.push(pii(0,s));dis[s]=0;cnt[s]=1;\n\t\tif(type==1)b[s].set(s);\n\t\twhile(!q.empty()){\n\t\t\tint u=q.top().second;q.pop();\n\t\t\tif(vis[u])continue;vis[u]=true;\n\t\t\tfor(int i=fst[u],v,w;i;i=e[i].nxt){\n\t\t\t\tv=e[i].to;w=e[i].w;\n\t\t\t\tif(dis[v]>dis[u]+(LL)w){\n\t\t\t\t\tdis[v]=dis[u]+(LL)w,q.push(pii(-dis[v],v));\n\t\t\t\t\tif(type==1)b[v].reset(),b[v].set(v),b[v]|=b[u];\n\t\t\t\t\tcnt[v]=cnt[u];\n\t\t\t\t}else if(dis[v]==dis[u]+(LL)w){\n\t\t\t\t\tif(type==1)b[v]|=b[u];\n\t\t\t\t\tcnt[v]=(cnt[v]+cnt[u])%P;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}G,G2;\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&m,&s,&t);\n\tfor(int i=1,u,v,w;i<=m;i++)scanf(\"%d%d%d\",&u,&v,&w),adde(u,v,w),adde(v,u,w);\n\tG.dij(s,1);G2.dij(t,2);\n\t//for(int i=1;i<=n;i++,puts(\"\"))for(int j=1;j<=n;j++)printf(\"%d\",(int)b[i][j]);\n\t//for(int i=1;i<=n;i++)printf(\"i:%d %d %d\\n\",i,G.cnt[i],G2.cnt[i]);\n\tif(G.dis[t]>=Inf){printf(\"%lld\\n\",(LL)n*(n-1)/2);return 0;}\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=n;j++){\n\t\tif(!b[i][j]&&!b[j][i]&&G.dis[i]+G2.dis[i]==G.dis[t]&&G.dis[j]+G2.dis[j]==G.dis[t]&&\n\t\t((LL)G.cnt[i]*G2.cnt[i]%P+(LL)G.cnt[j]*G2.cnt[j])%P==G.cnt[t])fl[i][j]=true;\n\t\tif((G.dis[i]+G2.dis[i]!=G.dis[t]&&G.dis[j]+G2.dis[j]==G.dis[t]&&(LL)G.cnt[j]*G2.cnt[j]%P==G.cnt[t])||\n\t\t(G.dis[j]+G2.dis[j]!=G.dis[t]&&G.dis[i]+G2.dis[i]==G.dis[t]&&(LL)G.cnt[i]*G2.cnt[i]%P==G.cnt[t]))fl[i][j]=true;\n\t}\n\tfor(int i=1;i<=n;i++)for(int j=i+1;j<=n;j++)if(fl[i][j])ans++;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u7136\u540e\u6211\u4eec\u7684\u4e8b\u60c5\u662f\u600e\u4e48\u4f18\u5316\u8fd9\u4e2a\u66b4\u529b\u7684\u4ee3\u7801\uff1f\n\n\u6211\u4eec\u53d1\u73b0\u7b2c\u4e00\u4e2a\u6211\u4eec\u53ef\u4ee5\u7528bitset\u4f18\u5316\uff0c\u6211\u4eec\u4e0b\u9762\u7684\u4e24\u6b65\u4e5f\u53ef\u4ee5\u7528bitset\u6765\u4f18\u5316\u3002\n\n\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u591a\u5f00\u51e0\u4e2abitset\uff1a\n\n\u6211\u4eec\u9996\u5148\u6c42\u51fa\u4e00\u4e2a\u70b9\u7684\u6ee1\u8db3\u8303\u56f4\u7684\u70b9\u6570\u662f\u54ea\u4e9b\uff1f\n\n\u9996\u5148\u6211\u4eec\u8981\u6c42\u51fa\u5728\u6700\u77ed\u8def\u4e0a\u7684\u70b9\u8bb0\u5728can\u91cc\u9762\uff0c\u7136\u540e\u6211\u4eec\u6bcf\u4e2a\u70b9\u5982\u679c\u662f\u548c\u5b83\u518d\u4e00\u6761\u6700\u77ed\u8def\u4e0a\u7684\u70b9\u6211\u4eec\u5c31G[i][j]=1\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6700\u540eflip\u4e00\u4e0b\uff0c\u5e76\u4e14\u548ccan\u53bb\u4e00\u4e2a&\u5c31\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u6c42\u4e00\u4e2a\u65b9\u6848\u6570\u7684\u52a0\u6cd5\u4e3a\u603b\u6700\u77ed\u8def\u7684\u6761\u6570\u7684\u4e2a\u6570\uff1f\n\n\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u628a\u65b9\u6848\u6570\u5b58\u5728\u4e00\u4e2amap\u91cc\u9762\uff0c\u6bcf\u6b21\u52a8\u6001\u66f4\u65b0\u4e00\u4e2abitset now\uff0c\u8868\u793a\u5f53\u524d\u60c5\u51b5\u4e0b\u6ee1\u8db3\u6761\u4ef6\u7684\u89e3\uff0c\u5b58\u5728\u8fd9\u4e2anow\u91cc\u9762\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e24\u4e2a\u65b9\u6848\u6570\u76f8\u540c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2anow\uff0c\u7136\u540e\u5728\u4e0d\u540c\u7684\u65f6\u5019\u6211\u4eec\u5728\u628a\u4e4b\u524d\u7684\u64a4\u9500\uff0c\u653e\u4e0a\u65b0\u7684\u6ee1\u8db3\u7684\u70b9\uff0c\u8fd9\u6837\u6211\u4eec\u66f4\u65b0\u7684\u70b9\u6570\u662fO(n)\u7684\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\n\n\u6211\u4eec\u5f00n\u4e2abitset\uff0c\u5206\u522b\u4ee3\u8868Ans[i]\uff0c\u5982\u679cAns[i][j]\uff0c\u90a3\u4e48\u8fd9\u5c31\u4ee3\u8868i\u548cj\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\uff0c\n\n\u6211\u4eec\u53ea\u9700\u8981\u628a\u6240\u6709\u7684\u6761\u4ef6&\u5728\u4e00\u8d77\u5c31\u53ef\u4ee5\u6c42\u51fa\u7b2c\u4e00\u79cd\u60c5\u51b5\u7684\u6240\u6709\u89e3\uff0c\u7136\u540e\u6211\u4eec\u662f\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\n\n\u6211\u4eec\u53d1\u73b0\u7b2c\u4e8c\u79cd\u60c5\u51b5\u6bd4\u7b2c\u4e00\u79cd\u60c5\u51b5\u7b80\u5355\u7684\u591a\uff0c\u6211\u4eec\u6c42\u4e00\u4e2a\u4e0d\u5728\u6700\u77ed\u8def\u4e0a\u70b9\u548c\u5728\u6240\u6709\u6700\u77ed\u8def\u4e0a\u7684\u70b9\uff0c\u7136\u540e\u6211\u4eec\u6bcf\u6b21\u5bf9\u4e8e\u4e00\u4e2ai\uff0c\u5224\u65ad\u4e00\u4e0b\u5b83\u7684\u7c7b\u578b\uff0c\u7136\u540e\u5206\u522b\u53d6or\u5c31\u53ef\u4ee5\u3002\n\n\u8fd9\u4e2a\u53ef\u80fd\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u770b\u4e0b\u4ee3\u7801\u5e94\u8be5\u5c31\u884c\u4e86\uff0c\u5982\u679c\u4e0d\u7406\u89e3\u7684\u53ef\u4ee5\u5c1d\u8bd5\u7406\u89e3\u4e00\u4e0b\u66b4\u529b\u7684\u4ee3\u7801\uff0c\u6216\u8bb8\u7406\u89e3\u4e86\u4e00\u4e2a\u53d1\u73b0\u8fd9\u6b65\u662f\u5f88\u7b80\u5355\u7684\uff01\n\n\u7136\u540e\u6211\u4eec\u5f00\u597d\u591a\u4e2abitset\u5c31ok\u4e86\uff0c\u5b9e\u6d4b\u4e0d\u4f1amle\uff0c\u56e0\u4e3a50000\u65b9\u7684bitset\u7684\u7a7a\u95f4\u5b9e\u9645\u4e0a\u5f88\u5c0f\u7684\uff0c\u56e0\u6b64\u6211\u4eec/64\u4ee5\u540e\u5f00\u4e09\u4e2a\u8fd9\u6837\u5927\u5c0f\u7684bitset\u5728\u5bf9\u4e8e1G\u8fd9\u4e2a\u7a7a\u95f4\u9650\u5236\u662f\u7ef0\u7ef0\u6709\u4f59\u7684\u3002\n\n\u7ed9\u51fa100\u5206\u6b63\u89e3\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define pb push_back\n#define pii pair<LL,int>\nusing namespace std;\nconst int N=5e4+5,P=998244853;\nconst LL Inf=1e18;\nstruct Edge{int to,w,nxt;}e[N<<1];\nint n,m,s,t,fst[N],tote;LL ans; \nbitset<N>can,now,Ans[N],noin,imp;\nvoid adde(int u,int v,int w){e[++tote]=(Edge){v,w,fst[u]};fst[u]=tote;}\nstruct Dij{\n\tLL dis[N];int cnt[N];bool vis[N];\n\tpriority_queue<pii>q;bitset<N>b[N];\n\tvoid dij(int s,int type){\n\t\tfor(int i=1;i<=n;i++)dis[i]=Inf,vis[i]=false;\n\t\tq.push(pii(0,s));dis[s]=0;cnt[s]=1;\n\t\tif(type==1)b[s].set(s);\n\t\twhile(!q.empty()){\n\t\t\tint u=q.top().second;q.pop();\n\t\t\tif(vis[u])continue;vis[u]=true;\n\t\t\tfor(int i=fst[u],v,w;i;i=e[i].nxt){\n\t\t\t\tv=e[i].to;w=e[i].w;\n\t\t\t\tif(dis[v]>dis[u]+(LL)w){\n\t\t\t\t\tdis[v]=dis[u]+(LL)w,q.push(pii(-dis[v],v));\n\t\t\t\t\tb[v].reset();b[v].set(v);b[v]|=b[u];\n\t\t\t\t\tcnt[v]=cnt[u];\n\t\t\t\t}else if(dis[v]==dis[u]+(LL)w)\n\t\t\t\t\tb[v]|=b[u],cnt[v]=(cnt[v]+cnt[u])%P;\n\t\t\t}\n\t\t}\n\t}\n}G,G2;\nint c[N],id,ord[N];\nunordered_map<int,int>rb;\nvector<int>vec[N];\nbool Cmp(int a,int b){return c[a]<c[b];}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&m,&s,&t);\n\tfor(int i=1,u,v,w;i<=m;i++)scanf(\"%d%d%d\",&u,&v,&w),adde(u,v,w),adde(v,u,w);\n\tG.dij(s,1);G2.dij(t,2);\n\tif(G.dis[t]>=Inf){printf(\"%lld\\n\",(LL)n*(n-1)/2);return 0;}\n\tfor(int i=1;i<=n;i++)if(G.dis[i]+G2.dis[i]==G.dis[t])can[i]=true;\n\tfor(int i=1;i<=n;i++)G.b[i].flip(),G2.b[i].flip(),G.b[i]&=can,G2.b[i]&=can;\n\tfor(int i=1;i<=n;i++){\n\t\tc[i]=(LL)G.cnt[i]*G2.cnt[i]%P;\n\t\tif(!rb[c[i]])rb[c[i]]=++id;\n\t\tord[i]=i;vec[rb[c[i]]].pb(i);\n\t}\n\tsort(ord+1,ord+n+1,Cmp);\n\tfor(int i=1,nt;i<=n;i++){\n\t\tnt=ord[i];\n\t\tif(i==1||c[nt]!=c[ord[i-1]]){\n\t\t\tif(i>1)for(auto x:vec[rb[(G.cnt[t]-c[ord[i-1]]+P)%P]])now[x]=false;\n\t\t\tfor(auto x:vec[rb[(G.cnt[t]-c[nt]+P)%P]])now[x]=true;\n\t\t}\n\t\tif(can[nt])Ans[nt]=(now&G.b[nt]&G2.b[nt]);\n\t}\n\tfor(int i=1;i<=n;i++)if(G.dis[i]+G2.dis[i]!=G.dis[t])noin[i]=true;\n\tfor(int i=1;i<=n;i++)if(G.dis[i]+G2.dis[i]==G.dis[t]&&(LL)G.cnt[i]*G2.cnt[i]%P==G.cnt[t])imp[i]=true;\n\tfor(int i=1;i<=n;i++){\n\t\tif(noin[i])Ans[i]|=imp;\n\t\tif(imp[i])Ans[i]|=noin;\n\t}\n\tfor(int i=1;i<=n;i++)Ans[i][i]=false;\n\tfor(int i=1;i<=n;i++)ans+=(LL)Ans[i].count();\n\tprintf(\"%lld\\n\",ans>>1);\n\treturn 0;\n}\n```\n",
        "postTime": 1600917952,
        "uid": 203968,
        "name": "ConorGallagher23",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4061 \u3010[Code+#1]\u5927\u5409\u5927\u5229\uff0c\u665a\u4e0a\u5403\u9e21\uff01\u3011"
    },
    {
        "content": "\u548cCQzhangyu\u4e00\u6837\u7684\u505a\u6cd5\uff0cDP+\u62d3\u6251+map\u626b\u63cf\n\n\u89c9\u5f97\u4ee3\u7801\u6bd4\u8f83\u6e05\u695a\u5c31\u653e\u4e0a\u6765\u4e86\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#include<iterator>\n#include<cstdlib>\n#include<queue>\n#include<vector>\n#include<map>\n#define ll long long\nusing namespace std;\n\nint n,m,ss,tt;\nstruct ed\n{\n\tint pre,to;\n\tll w;\n}edge[200010];\nint at=1,ptr[100010];\n\nll ans; const ll mod=1e9+7;\n\ntemplate<typename int_t>\nvoid readx(int_t& x)\n{\n\tx=0; int_t k=1; char ch=0;\n\twhile (ch<'0' || ch>'9') { ch=getchar(); if (ch=='-') k=-1; }\n\twhile (ch>='0' && ch<='9') { x=x*10+ch-'0'; ch=getchar(); }\n\tx*=k;\n}\n\nvoid Is(int fx,int tx,ll wx)\n{\n\tedge[++at].pre=ptr[fx];\n\tedge[at].to=tx;\n\tedge[at].w=wx;\n\tptr[fx]=at;\n\tedge[++at].pre=ptr[tx];\n\tedge[at].to=fx;\n\tedge[at].w=wx;\n\tptr[tx]=at;\n}\n\n// Dijkstra\nstruct _Node\n{\n\tll dis;int cod;\n\tbool operator < (const _Node& B) const { return dis>B.dis; }\n};\npriority_queue<_Node> que;\nll dis[100010],dist[100010];\nint pren[100010];\nbool vis[100010];\nvoid Dijkstra()\n{\n\t_Node cac1,cac2;\n\tmemset(dis,0x3f,sizeof dis); memset(dist,0x3f,sizeof dist); memset(vis,0,sizeof vis);\n\tcac1.dis=dis[ss]=0; cac1.cod=ss; que.push(cac1);\n\twhile (!que.empty())\n\t{\n\t\tcac1=que.top(); que.pop();\n\t\tif (vis[cac1.cod]) continue;\n\t\tvis[cac1.cod]=1;\n\t\tfor (int e=ptr[cac1.cod];e;e=edge[e].pre) \n\t\t{\n\t\t\tregister int v=edge[e].to;\n\t\t\tif (dis[v]>dis[cac1.cod]+edge[e].w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[cac1.cod]+edge[e].w;\n\t\t\t\tcac2.cod=v; cac2.dis=dis[v];\n\t\t\t\tque.push(cac2);\n\t\t\t}\n\t\t}\n\t}\n\tmemset(vis,0,sizeof vis);\n\tcac1.dis=dist[tt]=0; cac1.cod=tt; que.push(cac1);\n\twhile (!que.empty())\n\t{\n\t\tcac1=que.top(); que.pop();\n\t\tif (vis[cac1.cod]) continue;\n\t\tvis[cac1.cod]=1;\n\t\tfor (int e=ptr[cac1.cod];e;e=edge[e].pre) \n\t\t{\n\t\t\tregister int v=edge[e].to;\n\t\t\tif (dist[v]>dist[cac1.cod]+edge[e].w)\n\t\t\t{\n\t\t\t\tdist[v]=dist[cac1.cod]+edge[e].w;\n\t\t\t\tpren[v]=cac1.cod;\n\t\t\t\tcac2.cod=v; cac2.dis=dist[v];\n\t\t\t\tque.push(cac2);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid NoSol() { if (dis[tt]>=0x3f3f3f3f3f3f3f3fLL) { ans=1LL*n*(n-1)/2LL; printf(\"%lld\\n\",ans); exit(0); } }\n\n// SSSP Graph\nint outv[100010];\nll f1[100010],f2[100010],f[100010];\n\n// get path\nint path[100010],lm[100010],rm[100010],len;\nvoid Init()\n{\n\tfor (int i=ss;i;i=pren[i])\n\t{\n\t\tpath[++len]=i;\n\t\tlm[i]=len+1; // illegal\n\t\trm[i]=len-1; // illegal\n\t}\n\t\n\t// mapping the node to its range [lm,rm]\n\tfor (int i=1;i<=n;i++) if (!lm[i]) { lm[i]=1; rm[i]=len; } \n\n\tfor (int i=1;i<=n;i++) \n\t\tfor (int e=ptr[i];e;e=edge[e].pre) if (edge[e].w>0 && dis[i]+dist[edge[e].to]+edge[e].w==dis[tt])\n\t\t{\n\t\t\tedge[e].w=-1; edge[e^1].w=-2;\n\t\t\toutv[edge[e].to]++;\n\t\t}\n}\n\nqueue<int> tque;\nvoid TopoSort() // To get the SSP number of every node.\n{\n\tf1[ss]=1; f2[tt]=1;\n\tint cac;\n\tfor (int i=1;i<=n;i++) if (!outv[i]) tque.push(i);\n\twhile (!tque.empty())\n\t{\n\t\tcac=tque.front(); tque.pop();\n\t\tfor (int e=ptr[cac];e;e=edge[e].pre) if (edge[e].w==-1)\n\t\t{\n\t\t\tint v=edge[e].to;\n\t\t\toutv[v]--; f1[v]+=f1[cac]; lm[v]=max(lm[v],lm[cac]); // update range\n\t\t\tif (!outv[v]) tque.push(v);\n\t\t}\n\t}\n\t\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int e=ptr[i];e;e=edge[e].pre) if (edge[e].w==-2) outv[edge[e].to]++;\n\tfor (int i=1;i<=n;i++) if (!outv[i]) tque.push(i);\n\twhile (!tque.empty())\n\t{\n\t\tcac=tque.front(); tque.pop();\n\t\tfor (int e=ptr[cac];e;e=edge[e].pre) if (edge[e].w==-2)\n\t\t{\n\t\t\tint v=edge[e].to;\n\t\t\toutv[v]--; f2[v]+=f2[cac]; rm[v]=min(rm[v],rm[cac]); // update range\n\t\t\tif (!outv[v]) tque.push(v);\n\t\t}\n\t}\n}\n\n// bucket\nvector<int> p1[100010],p2[100010];\nvector<int>::iterator itr;\n// mapper\nmap<ll,int> maps;\n\nvoid Getans()\n{\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tf[i]=f1[i]*f2[i];\n\t\tif (lm[i]<=rm[i]) { p1[lm[i]].push_back(f[i]); p2[rm[i]].push_back(f[i]); }\n\t}\n\t\n\tfor (int i=1;i<=len;i++)\n\t{\n\t\tfor (itr=p1[i].begin();itr!=p1[i].end();itr++) maps[*itr]++;\n\t\tans+=1LL*maps[f[tt]-f[path[i]]];\n\t\tfor (itr=p2[i].begin();itr!=p2[i].end();itr++) maps[*itr]--;\n\t}\n}\n\nint main()\n{\n\treadx(n); readx(m); readx(ss); readx(tt); int fx,tx; ll wx;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\treadx(fx); readx(tx); readx(wx);\n\t\tIs(fx,tx,wx);\n\t}\n\tDijkstra(); NoSol();\n\t\n\tInit(); TopoSort(); \n\tGetans();\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1541215690,
        "uid": 21512,
        "name": "GNAQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4061 \u3010[Code+#1]\u5927\u5409\u5927\u5229\uff0c\u665a\u4e0a\u5403\u9e21\uff01\u3011"
    }
]