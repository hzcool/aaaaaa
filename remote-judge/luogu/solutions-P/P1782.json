[
    {
        "content": "#### \u6b64\u9898\u662f\u975e\u5e38\u662f\u5751\u554a\u3002\u697c\u4e0b\u8bf4\u7684\u597d\uff0cAC\u7684dalao\u53d1\u4e2a\u9898\u89e3\u65b9\u4fbf\u5927\u5bb6\uff08\u5f53\u7136\uff0c\u7ed9\u4e2aAC\u7684\u4ee3\u7801\u5c31\u66f4\u8d5e\u4e86\uff09\n\n#### \u7406\u8bba\u4e0a\uff0c\u5355\u8c03\u961f\u5217\u8fdc\u5feb\u4e8e\u4e8c\u8fdb\u5236\u505a\u6cd5\uff0c\u4f46\u662f\u3002\u3002\n\n#### \u5148\u5206\u6790\u4e00\u4e0b\u9898\u76ee\uff0c\u524dn\u4e2a\u7269\u54c1\u641e\u4e00\u4e2a\u591a\u91cd\u80cc\u5305\uff0c\u540em\u4e2a\u7269\u54c1\u641e\u4e00\u4e2a\u5b8c\u5168\u80cc\u5305\uff01\u4ed4\u7ec6\u60f3\u60f3\u5e94\u8be5\u90fd\u80fd\u60f3\u5230\u3002\n\n#### \u4f46\u662f\u3002\u6b64\u9898\uff0c\u65f6\u9650\u5361\u7684\u975e\u5e38\u7d27\u3002\n\n#### \u6211\u603b\u7ed3\u4e86\u51e0\u4e2a\u4e0dTLE\u7684\u5fc5\u5907\u6761\u4ef6\uff1a\n\n#### \u4e0d\u8981\u968f\u624b\u52a0memset\uff1b\u4e0d\u8981\u61d2\u5f97\u5199\u8bfb\u4f18\uff1b\u53ef\u4ee5\u517b\u6210\u6ca1\u4e8b\u5c31\u52a0inline\u548cregister\u7684\u4e60\u60ef\uff1b\u5355\u8c03\u961f\u5217\u5343\u4e07\u522b\u7528STL\u7684deque\uff0c\u6c42\u6700\u5927\u503c\u7684\u65f6\u5019\u4e5f\u4e0d\u8981\u7528STL\u7684max\uff0c\u624b\u5199\u4e00\u4e2aif\uff1b\u6570\u7ec4\u5927\u5c0f\u4e0d\u8981\u5f00\u7684\u592a\u5927\uff08\u8fd9\u4e5f\u8d39\u65f6\u95f4\uff09\uff0c\u5dee\u4e0d\u591a\u5c31\u597d\u3002\n\n#### \u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5355\u8c03\u961f\u5217\u8dd1\u4e0d\u8fc7\u4e8c\u8fdb\u5236\uff0c\u8fd9\u6211\u4e5f\u4e0d\u592a\u6e05\u695a\uff0c\u56e0\u4e3a\u5355\u8c03\u961f\u5217\u7684\u6548\u7387\u5206\u6790\u672c\u6765\u5c31\u662f\u5728\u5747\u644a\u610f\u4e49\u4e0b\u7684Q\\_Q\uff0c\u8fd9\u9898\u53ef\u4ee5\u4f7f\u591a\u91cd\u80cc\u5305\u548c\u5b8c\u5168\u80cc\u5305\u7684\u4e00\u4e2a\u7ec3\u624b\u7684\u6781\u4f73\u6a21\u677f\u9898\u3002\u81f3\u4e8e\u5e76\u4e0d\u600e\u4e48\u61c2\u591a\u91cd\u80cc\u5305\u7684\u4f18\u5316\u7684\u7ae5\u978b\uff0c\u53ef\u4ee5\u53c2\u89c2\u4e00\u4e0b\u6211\u7684blog\uff0c\u91cc\u9762\u7a0d\u7a0d\u8be6\u7ec6\u7684\u603b\u7ed3\u4e86\u4e00\u4e0b\uff1ahttp://blog.csdn.net/no1\\_terminator/article/details/51896966\n\n#### \u53c2\u8003\u4ee3\u7801\u3010\u6211\u826f\u5fc3\u5427\uff1f\u3011\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define re register\nusing namespace std;\nconst int N=1e4+1;\nint n,m,c;\nint q[N],f[N],dp[N];\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nint main()\n{\n    n=read(),m=read(),c=read();\n    for(re int i=0;i<n;i++)\n      for(re int v=read(),w=read(),d=read(),j=0;j<v;j++)\n        for(re int h=0,t=0,k=0;k*v+j<=c;k++)\n        {\n            re int x=dp[k*v+j]-k*w;\n            while(h!=t && x>f[t-1])t--;\n            q[t]=k;f[t++]=x;\n            if(q[h]+d<k)h++;\n            dp[k*v+j]=f[h]+k*w;\n        }\n    for(re int i=0;i<m;i++)\n      for(re int v=read(),w=read(),d=read(),j=c;j>=0;j--)\n        for(re int k=0;k<=j;k++)\n          if (dp[j-k]+(v*k+w)*k+d>dp[j])dp[j]=dp[j-k]+(v*k+w)*k+d;\n    printf(\"%d\",dp[c]);\n    return 0;\n}\n```\n\u6700\u540e\uff0cOrz\u4e00\u4e0b\u6700\u5c0f\u9762\u7684dalao\uff0c\u4ed6\u7684\u5355\u8c03\u961f\u5217\u5199\u7684\u786e\u5b9e\u6f02\u4eae\uff0c\u4f60\u4eec\u770b\u4e86\u6211\u7684\u535a\u5ba2\u5c31\u77e5\u9053\u5dee\u8ddd\u4e86\uff0c\u5b66\u5230\u4e86\u3002\n",
        "postTime": 1505133201,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1782 \u3010\u65c5\u884c\u5546\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "#\u672c\u9898\u5341\u5206\u826f\u5fc3\uff0c\u60f3\u5b66\u597d\u80cc\u5305\u90fd\u5e94\u8be5\u505a\u3002\u5b83\u5305\u542b\u4e86\u8f83\u666e\u901a\u80cc\u5305\u7684\u5927\u90e8\u5206\u77e5\u8bc6\u53ca\u591a\u79cd\u4f18\u5316\u65b9\u6cd5\n\n**\u672c\u4eba\u662f\u7092\u9e21\u8611\u83c7\uff08\u849f\u84bb\uff09\uff0c\u63d0\u4ea4\u4e86\uff0820\uff09\u904d\u624dA\u4e86\u8fd9\u9053\u9898\u54ce\uff0c\u8bf4\u8d77\u6765\u90fd\u662f\u6cea\u554a\u3002\u3002\u3002\u3002\u90a3\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8fdb\u5165\u672c\u9898\u7684AC\u65b9\u6cd5As is known to all\u8fd9\u9053\u9898\u65f6\u95f4\u5361\u7684\u7279\u522b\u7d27\uff0c\u6734\u7d20\u4ee3\u7801\u62ff\u51fa\u6765\u6837\u4f8b\u80af\u5b9a\u8fc7\uff0c\u4f46\u662f\u63d0\u4ea4\u65f6\u5374\u4f1a\u5168\u90fdTLE\uff08\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u77e5\u9053\uff09\u3002\u5148\u8c08\u4e00\u4e0b\u57fa\u672c\u601d\u8def\u5427\u3002\u8fd9\u9053\u9898\u4e00\u822c\u5206\u4e3a\u4e24\u6b65\uff0c\u5373\u5148\u5904\u7406\u666e\u901a\u8d27\u7269\uff0c\u518d\u5904\u7406\u5947\u8d27\u56e0\u4e3a\u5947\u8d27\u6700\u591a\u53ea\u67095\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u6734\u7d20\u4ee3\u7801\u5e26\u8d70\uff0c\u4e3b\u8981\u95ee\u9898\u662f\u524d\u9762\u7684\u90a3\u4e9b\u666e\u901a\u8d27\u7269\uff0c\u6211\u7684\u60f3\u6cd5\u662f\u901a\u8fc7\u4e8c\u8fdb\u5236\u4f18\u5316\u591a\u91cd\u80cc\u5305\uff0c\u8f6c\u621001\u80cc\u5305\u505a\u3002**\n\n**\u65b9\u6cd5\u662f\uff1a\u5c06\u7b2ci\u79cd\u7269\u54c1\u5206\u6210\u82e5\u5e72\u4ef6\uff08\u7528\u4e8c\u8fdb\u5236\uff09\u7269\u54c1\uff0c\u5176\u4e2d\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u4e00\u4e2a\u7cfb\u65702^k\uff0ck\u5c5e\u4e8e{1,2,4,8\uff0c16.......}\uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\u53ef\u4ee5\u8868\u793a\u6240\u6709\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e2a\u5faa\u73af\u6765\u6a21\u62df\u4e8c\u8fdb\u5236\uff0c\u56e0\u4e3a2^k<=vi\\*di\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3k\u70b8\u6389**\n\n```cpp\nfor(int k=1;k<=d;k*=2){\nv[++count]*=k;\nw[count]*=k;\n//\u8fdb\u884c\u64cd\u4f5c\nd[count]-=k}\nif(d[count]>0)v[++count]*=d[count];w[count]*=d[count]\uff1b\n```\n**\u901a\u8fc7\u4ee5\u4e0a\u7684\u4e00\u4e2a\u5faa\u73af\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e8c\u8fdb\u5236,\u4f46\u662f\u7531\u4e8e\u672c\u9898\u6570\u636e\u5947\u5927\uff0c\u65e0\u5b58\u50a8\uff0c\u6240\u4ee5\u5fc5\u987b\u6bcf\u6b21\u8f93\u5165\u65f6\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u6837\uff0c\u5c31\u4e0d\u7528\u62c5\u5fc3\u5b58\u50a8\u7684\u95ee\u9898\u5faa\u73af\u8f93\u5165\u65f6\u7684for\uff0c\u5c31\u76f8\u5f53\u4e8e\u6734\u7d20\u4ee3\u7801\u4e2ddp\u65f6\u7684\u7b2c\u4e00\u4e2afor\u4f46\u662f\u5373\u4fbf\u5982\u6b64\uff0c\u4e5f\u8fd8\u662f\u4e0d\u80fdA\u8fd9\u9053\u9898\uff0c\u8fd8\u662f\u4f1atle\u51e0\u4e2a\u70b9\u8fd9\u65f6\uff0c\u6211\u4eec\u9996\u5148\u60f3\u5230\u7684\u5f53\u7136\u662f\u8f93\u5165\u4f18\u5316\uff0c\u8fd9\u662f\u5fc5\u987b\u6709\u7684\uff0c\u5426\u5219\u4f1atle\u4e09\u4e2a\u70b9\u3002\u90a3\u6211\u4eec\u8fd8\u80fd\u600e\u6837\u4f18\u5316\u5462\uff1f\u90a3\u5c31\u662f\u770b\u8fd9\u79cd\u7269\u54c1\u662f\u5426\u53ef\u4ee5\u5168\u88c5\u5230\u80cc\u5305\u4e2d\uff0c\u4e5f\u5c31\u662f\u5728\u8f93\u5165\u65f6\u5148if\uff08v\\*d>n\uff09\u5982\u679c\u662f\uff0c\u90a3\u8fd9\u4e2a\u7269\u4ef6\u5c31\u53ef\u4ee5\u5f53\u505a\u5b8c\u5168\u80cc\u5305\u4e2d\u7684\u4e00\u79cd\u7269\u54c1\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u7269\u54c1\u4e0d\u53ef\u80fd\u5168\u53d6\uff0c\u90a3\u5c31\u53ef\u4ee5\u89c6\u4e3a\u8fd9\u79cd\u7269\u54c1\u65e0\u9650\u591a\uff0c\u8fd9\u6837\u5c31\u53ef\u8282\u7701\u65f6\u95f4\u3002\u5982\u679cv\\*d<=n\uff0c\u518d\u6309\u591a\u91cd\u80cc\u5305\u7528\u4e8c\u8fdb\u5236\u505a\uff0c\u5373\u7528else\u3002\u8fd9\u6837\uff0c\u8fd9\u9053\u9898\u5c31\u57fa\u672c\u80fdA\u4e86**\n\u6700\u540e\uff0c\u9644\u4e0a\u4ee3\u7801\uff08\u53ef\u80fd\u6709\u70b9\u4e71\uff09\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u6587\u4ef6\u5934\nusing namespace std;\nint  n,m,c;//\u57fa\u672c\u6570\u636e\nlong long f[10005];\nint  v,w,d;//\u8d27\u7269\u7684v\uff0cw\uff0cd\nint read(){//\u8bfb\u5165\u4f18\u5316\uff0c\u4e5f\u5fc5\u987b\u6709\n    char c=getchar();int x=0,f=1;\n    while(c<'0'||c>'9'){if(c=='-')f=-1; c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0'; c=getchar();}\n    return x*f;\n}\nint main()\n{\n    n=read();m=read();c=read();\n    for(int i=1;i<=n;i++){\n        v=read();w=read();d=read();\n        if(d*v>c){//\u5224\u65ad\u662f\u4e0d\u662f\u5b8c\u5168\u80cc\u5305\n            for(int j=v;j<=c;j++){\n                f[j]=max(f[j],f[j-v]+w);\n                }\n            }\n        else {\n        for(int k=1;k<=d;k*=2){//\u4e8c\u8fdb\u5236\u4f18\u5316\n            if(c<v*k){//\u8fd9\u53e5\u6ca1\u5565\u7528\uff0c\u4f46\u6211\u61d2\u5f97\u5220\u4e86\uff0c\u5927\u5bb6\u65e0\u89c6\u5c31\u884c\u4e86\n                break;}\n            for(int j=c;j>=v*k;j--){\n                f[j]=max(f[j],f[j-v*k]+w*k);//\u975e\u5e38\u57fa\u7840\u7684dp\u80cc\u5305\n            }\n            d-=k;\n        }\n        if(d>0){\n        for(int j=c;j>=v*d;j--){\n            f[j]=max(f[j],f[j-v*d]+w*d);\n        }}\n    }}\n    int j;\n    for(int i=1;i<=m;i++){v=read();w=read();d=read();\n        for(int j=c;j>=0;j--){//\u6700\u540e\u7684\u5947\u8d27\u53ea\u7528\u6734\u7d20\u4ee3\u7801\u5c31\u591f\u4e86\n            for(int k=0;k<=j;k++){\n                f[j]=max(f[j],f[j-k]+(v*k+w)*k+d);\n            }\n        }\n    }\n    printf(\"%lld\",f[c]);\n}//\u672c\u9898\u89e3\u7ed3\u675f\uff0c\u795d\u5927\u5bb6compling\u5feb\u4e50\n```",
        "postTime": 1509875030,
        "uid": 38533,
        "name": "emiyashilo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1782 \u3010\u65c5\u884c\u5546\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u662f\u7b80\u5355\u7684\u591a\u91cd\u80cc\u5305\uff0c\u5916\u52a0\u679a\u4e3e\u5947\u8d27\u7684\u4f53\u79ef\u3002\n\n\u6069\uff0c\u8fd9\u6837\u5dee\u4e0d\u591a\u80fd\u5f9760\u5206\u3002\u6240\u4ee5\uff0c\u8fd8\u9700\u52a0\u4e0a\u5355\u8c03\u961f\u5217\u4f18\u5316\uff0c\u65b9\u53ef\u5f97\u6ee1\u5206\u3002\n\n\u771f\u8fd9\u4e48\u7b80\u5355\uff1f\u5c31\u8fd9\u4e48\u7b80\u5355\u3002\n\n\n\n```cpp\n\n#include<iostream> //By JOHNKRAM\nusing namespace std;\nint n,m,c,v,w,d;\nint a[10001],b[10001],f[10001];\nint s,t,x,y;\nint main()\n{\n    int i,j,k;\n    scanf(\"%d%d%d\",&n,&m,&c);\n    for(i=0;i<n;i++)\n      for(scanf(\"%d%d%d\",&v,&w,&d),j=0;j<v;j++)\n        for(s=t=k=0;k*v+j<=c;k++)\n        {\n          x=k;\n          y=f[k*v+j]-k*w;\n          while(s!=t&&y>b[t-1])t--;\n          a[t]=x;\n          b[t++]=y;\n          if(a[s]+d<k)s++;\n          f[k*v+j]=b[s]+k*w;\n        }\n    for(i=0;i<m;i++)\n      for(scanf(\"%d%d%d\",&v,&w,&d),j=c;j>=0;j--)\n        for(k=0;k<=j;k++)\n          f[j]>?=f[j-k]+(v*k+w)*k+d;\n    printf(\"%d\",f[c]);\n    return 0;\n}\n\n\n```",
        "postTime": 1383314497,
        "uid": 716,
        "name": "C_SUNSHINE",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1782 \u3010\u65c5\u884c\u5546\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "\u5173\u4e8e\u6700\u540e\u7684m\u4e2a\u7269\u54c1\u7684\u4f18\u5316\n\n\u6211\u4eec\u5b66\u8fc7\u4e8c\u6b21\u51fd\u6570\n\n\u7279\u5224\u4e00\u6b21\u51fd\u6570\u7684\u60c5\u51b5\n\n\u6c42\u4e8c\u6b21\u51fd\u6570\u9876\u70b9\n\n\u663e\u7136\u5355\u589e\u7684\u90e8\u5206\u9700\u8981\u679a\u4e3e\uff0c\u5355\u964d\u7684\u90e8\u5206\u53d6\u4e2a\u5de6\u7aef\u70b9\n\n\u5f00\u53e3\u5411\u4e0b\u7684\u9876\u70b9\u5982\u679c\u4e0d\u4e3a\u6b63\uff0c\u5c31\u8df3\u8fc7\n\n\u8fd9\u6837\u4ee3\u7801\u6548\u7387\u4f1a\u9ad8\u5f88\u591a\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=1e4+5;\n\nint n,m,C;\nint f[MAXN],v[25],w[25];\n\ninline int read()\n{\n\tint x=0;bool fl=0;char ch=getchar();\n\twhile(ch<'0'||'9'<ch){if(ch=='-') fl=1;ch=getchar();}\n\twhile('0'<=ch&&ch<='9') x=(x<<3)+(x<<1)+(ch^'0'),ch=getchar();\n\treturn fl?-x:x;\n}\n\nint main()\n{\n\tn=read(),m=read(),C=read();\n\twhile(n--){\n\t\tint cnt=0,wgt=read(),val=read(),num=read();\n\t\tfor(int i=1;i<=num;i<<=1){\n\t\t\tv[++cnt]=val*i;\n\t\t\tw[cnt]=wgt*i;\n\t\t\tnum-=i;\n\t\t}if(num) v[++cnt]=num*val,w[cnt]=num*wgt;\n\t\tfor(int i=1;i<=cnt;++i){\n\t\t\tfor(int j=C;j>=w[i];--j){\n\t\t\t\tf[j]=max(f[j],f[j-w[i]]+v[i]);\n\t\t\t}\n\t\t}\n\t}while(m--){\n\t\tint a=read(),b=read(),c=read();\n\t\tif(!a){\n\t\t\tif(b<=0){\n\t\t\t\tif(c<=0) continue;\n\t\t\t\tfor(int i=1;i<=C;++i) f[i]+=c;\n\t\t\t\tcontinue;\n\t\t\t}int x=max((double)-c/b,0.0);\n\t\t\tfor(int j=C;j>=x;--j){\n\t\t\t\tfor(int k=x;k<=j;++k){\n\t\t\t\t\tint val=b*k+c;\n\t\t\t\t\tf[j]=max(f[j],f[j-k]+val);\n\t\t\t\t}\n\t\t\t}continue;\n\t\t}int x=max((double)-b/(a<<1)+0.5,0.0);\n\t\tif(a>0){\n\t\t\tint cx=C+1;\n\t\t\tfor(int i=x;i<=C;++i) if(a*i*i+b*i+c>c){cx=i;break;}\n\t\t\tfor(int j=C;j>=cx;--j){\n\t\t\t\tif(c>0) f[j]+=c;\n\t\t\t\tfor(int k=cx;k<=j;++k){\n\t\t\t\t\tf[j]=max(f[j],f[j-k]+a*k*k+b*k+c);\n\t\t\t\t}\n\t\t\t}continue;\n\t\t}int cx=x;\n\t\tfor(int i=0;i<=x;++i) if(a*i*i+b*i+c>0){cx=i;break;}\n\t\tif(cx==x&&a*cx*cx+b*cx+c<0) continue;\n\t\tfor(int j=C;j>=cx;--j){\n\t\t\tfor(int k=cx;k<=min(x,j);++k){\n\t\t\t\tf[j]=max(f[j],f[j-k]+a*k*k+b*k+c);\n\t\t\t}\n\t\t}\n\t}printf(\"%d\\n\",f[C]);\n\treturn 0;\n}\n```",
        "postTime": 1540952901,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1782 \u3010\u65c5\u884c\u5546\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "#### \u7eaa\u5ff5\u4e00\u4e0b\u5b66\u4f1a\u591a\u91cd\u80cc\u5305\uff0c\u53d1\u4e00\u4e2a\u9898\u89e3\n\n\u8fd9\u9898\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u591a\u91cd\u80cc\u5305\uff0c\u65e0\u975e\u591a\u4e86\u4e00\u4e2a\u5173\u4e8e\u5947\u8d27\u7684\u64cd\u4f5c\uff0c\u4e5f\u8fd8\u662f\u5f88\u7b80\u5355\u7684\n\n\u5173\u4e8e\u591a\u91cd\u80cc\u5305\uff0c\u6709\u4e24\u79cd\u4f18\u5316\uff0c\u4e00\u79cd\u662f\u4e8c\u8fdb\u5236\u4f18\u5316\uff0c\u53e6\u4e00\u79cd\u662f\u5355\u8c03\u961f\u5217\n\n\u4f46\u662f\u5355\u8c03\u961f\u5217\u5e76\u4e0d\u5728NOIP\u8003\u5bdf\u8303\u56f4\u4e4b\u5185\uff0c\u8fd9\u91cc\u5c31\u4e0d\u505a\u4ecb\u7ecd\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u505a\u4e00\u4e0b[\u8fd9\u4e2a\u677f\u5b50](https://www.luogu.org/problemnew/show/P1886)\n\n### \u4e0b\u9762\u8bf4\u4e00\u4e0b\u4e8c\u8fdb\u5236\u4f18\u5316\u591a\u91cd\u80cc\u5305\n\n#### \u9996\u5148\u8bb2\u4e00\u4e0b\u591a\u91cd\u80cc\u5305\u6700\u5bb9\u6613\u60f3\u5230\u7684\u66b4\u529b\u6cd5\n\n\u7531\u4e8e\u591a\u91cd\u80cc\u5305\u95ee\u9898\u662f\u4ecb\u4e8e01\u80cc\u5305\u548c\u5b8c\u5168\u80cc\u5305\u4e4b\u95f4\u7684\u4e00\u79cd\u95ee\u9898\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u679a\u4e3e\u9009\u53d6\u7684\u7269\u54c1\u4e2a\u6570\n\n\u5047\u5982\u5bf9\u4e8e\u4e00\u79cd\u6570\u91cf\u4e3an[i]\u7684\u7269\u54c1\uff0c\u4ee4f[i][v]\u8868\u793a\u524di\u79cd\u7269\u54c1\u6070\u653e\n\u5165\u4e00\u4e2a\u5bb9\u91cf\u4e3av\u7684\u80cc\u5305\u7684\u6700\u5927\u6743\u503c\uff0c\u5219\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n```\n f[i][v] = max(f[i-1][v-k*c[i]]+ k * w[i])\n```\n\n\n\u4f46\u662f\u5f88\u663e\u7136\uff0c\u590d\u6742\u5ea6\u662fO(V * \u03a3n[i])\uff0c\u5bf9\u4e8e\u5927\u6570\u636e\u6765\u8bf4\u662f\u7edd\u5bf9\u70b8\u98de\u7684\n\n#### \u90a3\u4e48\u6211\u4eec\u5c1d\u8bd5\u5c06\u5176\u8f6c\u5316\u4e3a01\u80cc\u5305\u8fdb\u884c\u6c42\u89e3\n\n\u628a\u7b2ci\u79cd\u7269\u54c1\u6362\u6210n[i]\u4ef601\u80cc\u5305\u4e2d\u7684\u7269\u54c1\uff0c\u5219\u5f97\u5230\u4e86\u7269\u54c1\u6570\u4e3a\u03a3n[i]\u768401\u80cc\u5305\u95ee\u9898\uff0c\u76f4\u63a5\u6c42\u89e3\uff0c\u590d\u6742\u5ea6\u4ecd\u7136\u662fO(V * \u03a3n[i])\n\n\u5c0f\u6570\u636e\u53ef\u4ee5\u8fd9\u6837\u641e\u4e00\u4e0b\uff0c\u5927\u6570\u636e\u4ecd\u7136\u70b8\u98de\n\n#### \u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u4e8c\u8fdb\u5236\u4f18\u5316\u601d\u60f3\n\n\u5c06\u7b2ci\u79cd\u7269\u54c1\u5206\u6210\u82e5\u5e72\u4ef6\u7269\u54c1\uff0c\u5176\u4e2d\u6bcf\u4ef6\u7269\u54c1\u6709\u4e00\u4e2a\u7cfb\u6570\uff0c\u8fd9\u4ef6\u7269\u54c1\u7684\u8d39\u7528\u548c\u4ef7\u503c\u5747\u662f\u539f\u6765\u7684\u8d39\u7528\u548c\u4ef7\u503c\u4e58\u4ee5\u8fd9\u4e2a\u7cfb\u6570\n\n\u4f7f\u8fd9\u4e9b\u7cfb\u6570\u5206\u522b\u4e3a1,2,4,...,2^(k-1),n[i]-2^k+1\uff0c\u4e14k\u662f\u6ee1\u8db3n[i]-2^k+1>0\u7684\u6700\u5927\u6574\u6570\u3002\u4f8b\u5982\uff0c\u5982\u679cn[i]\u4e3a13\uff0c\u5c31\u5c06\u8fd9\u79cd\u7269\u54c1\u5206\u6210\u7cfb\u6570\u5206\u522b\u4e3a1,2,4,6\u7684\u56db\u4ef6\u7269\u54c1\n\n\u5206\u6210\u7684\u8fd9\u51e0\u4ef6\u7269\u54c1\u7684\u7cfb\u6570\u548c\u4e3an[i]\uff0c\u8868\u660e\u4e0d\u53ef\u80fd\u53d6\u591a\u4e8en[i]\u4ef6\u7684\u7b2ci\u79cd\u7269\u54c1\u3002\u53e6\u5916\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u80fd\u4fdd\u8bc1\u5bf9\u4e8e0..n[i]\u95f4\u7684\u6bcf\u4e00\u4e2a\u6574\u6570\uff0c\u5747\u53ef\u4ee5\u7528\u82e5\u5e72\u4e2a\u7cfb\u6570\u7684\u548c\u8868\u793a\uff0c\u8fd9\u4e2a\u8bc1\u660e\u53ef\u4ee5\u52060..2^k-1\u548c2^k..n[i]\u4e24\u6bb5\u6765\u5206\u522b\u8ba8\u8bba\u5f97\u51fa\uff0c\u5e76\u4e0d\u96be\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u590d\u6742\u5ea6\u5c31\u6539\u8fdb\u4e86\u8bb8\u591a\uff0c\u53d8\u6210\u4e86O(V * \u03a3log n[i])\n\n### \u5f53\u7136\u591a\u91cd\u80cc\u5305\u8fd8\u6709\u4e00\u79cd\u66f4\u4e3a\u5feb\u901f\u7684\u4f18\u5316\uff0c\u5c31\u662f\u6211\u524d\u9762\u63d0\u5230\u7684\u5355\u8c03\u961f\u5217\u4f18\u5316\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u601d\u8def\u662f\u57fa\u4e8e\u57fa\u672c\u7b97\u6cd5\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u4f46\u5e94\u7528\u5355\u8c03\u961f\u5217\u7684\u65b9\u6cd5\u4f7f\u6bcf\u4e2a\u72b6\u6001\u7684\u503c\u53ef\u4ee5\u4ee5\u5747\u644aO(1)\u7684\u65f6\u95f4\u6c42\u89e3\uff0c\u603b\u7684\u590d\u6742\u5ea6\u662fO(V * n)\uff0c\u6709\u80fd\u529b\u7684\u795e\u4ed9\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u672c\u849f\u84bb\u5728\u8fd9\u91cc\u5c31\u4e0d\u4f5c\u8be6\u7ec6\u8bf4\u660e\n\n### \u4e0b\u9762\u662f\u4e8c\u8fdb\u5236\u4f18\u5316\u7684\u4ee3\u7801\n\n```\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\ninline int read(){\n    int res=0,f=1;char ch=' ';\n    while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n    while(isdigit(ch)){res=res*10+ch-'0';ch=getchar();}\n    return res*f;\n}\nvoid write(int x){\n    if(x<0){putchar('-');x=-x;}\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint max(int a,int b){\n    return a>b?a:b;\n}\nconst int N=1e5+5;\nint n,m,T,dp[N],a,b,c,v,w,d;\nvoid zeroone(int cost,int weight,int V){\n    for(register int i=V;i>=cost;i--)\n        dp[i]=max(dp[i],dp[i-cost]+weight);\n}\nvoid complete(int cost,int weight,int V){\n    for(register int i=cost;i<=V;i++)\n        dp[i]=max(dp[i],dp[i-cost]+weight);\n}\nvoid mutil(int cost,int weight,int num,int V){//\u4e8c\u8fdb\u5236\u4f18\u5316\u7684\u591a\u91cd\u80cc\u5305\n    if(cost*num>=V){//\u5982\u679c\u65e0\u6cd5\u5c06\u6240\u6709\u7269\u54c1\u88c5\u4e0b\uff0c\u76f4\u63a5\u8dd1\u4e00\u4e2a\u5b8c\u5168\u80cc\u5305\n        complete(cost,weight,V);\n        return;\n    }\n    for(register int i=1;i<=num;i*=2){//\u4e8c\u8fdb\u5236\u4f18\u5316\n        zeroone(i*cost,i*weight,V);\n        num-=i;\n    }\n    if(num)zeroone(num*cost,num*weight,V);//\u5982\u679c\u6709\u591a\u4f59\u7684\uff0c\u5355\u72ec\u8dd1\u4e00\u4e2a01\u80cc\u5305\n}\nint main()\n{\n    n=read(),m=read(),T=read();\n    for(register int i=1;i<=n;i++)\n        v=read(),w=read(),d=read(),mutil(v,w,d,T);\n    for(register int i=1;i<=m;i++){\n        a=read(),b=read(),c=read();\n        for(register int j=T;j>=0;j--)\n            for(register int u=0;u<=j;u++)dp[j]=max(dp[j],dp[j-u]+a*u*u+b*u+c);\n    }\n    write(dp[T]);\n    return 0;\n}\n```\n",
        "postTime": 1553929656,
        "uid": 123318,
        "name": "ViXpop",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1782 \u3010\u65c5\u884c\u5546\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "\u5355\u8c03\u961f\u5217+\u7384\u5b66\u5feb\u8bfb\uff08\u5426\u5219T2-4\u4e2a\u70b9\uff09\n1572ms\n\n\u5173\u4e8e\u7384\u5b66\u5feb\u8bfb\u7684\u4e8b\u53c2\u8003[\u7384\u5b66\u5feb\u8bfb](https://www.luogu.org/blog/CreeperLKF/FastRead)\n\n\u7136\u540e\u6211\u4eec\u77e5\u9053\u6807\u51c6\u7684\u591a\u91cd\u80cc\u5305\u7684dp\u8f6c\u79fb\u65b9\u7a0b\u4e3a\n\n```\ndp[i][j] = max{dp[i - 1][j - k * v[i]] + k * w[i]}\n```\n\n\u7136\u800c\u4f60\u53ef\u4ee5\u53d1\u73b0\u9700\u8981\u6c42\u6700\u5927\u503c\u7684\u5bf9\u8c61\u6709\u4e0d\u5c11\u662f\u91cd\u590d\u7684\n\n\u4e8e\u662f\u6211\u4eec\u8bbe\n\n```\nv = v[i]\uff0ca = j / v\uff0cb = j % v\n```\n\n\u7136\u540e\u6709\n\n```\ndp[i][j] = max{dp[i - 1][b + k * v] - k * w[i]} + a * w[i]\n```\n\n\u4e8e\u662f\u6211\u4eec\u7684max\u4ece\n\n```\ndp[i - 1][j0] (j0 in b, b + v, b + 2v, ..., j)\n```\n\n\u51fa\u6765\uff0c\u7136\u540e\u8fd9\u4e00\u90e8\u5206\u6211\u4eec\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\n\nAC\u4ee3\u7801\u5982\u4e0b\n\u6ce8\u610f\u5361\u5e38\uff1a\u5feb\u8bfb+\u624b\u5199\u961f\u5217\n\n\n```\n#include <cstdio>\n#include <fcntl.h>\n#include <unistd.h>\n#include <sys/mman.h>\nusing namespace std;\n#define MAXN 10005\n\n#define Finline __inline__ __attribute__ ((always_inline))\n\nchar *pc = (char *) mmap(NULL, lseek(0, 0, SEEK_END), PROT_READ, MAP_PRIVATE, 0, 0);\n\ninline int read(){\n    int num = 0;\n    char c, sf = 1;\n    while ((c = *pc++) < 45);\n    if(c == '-') c = *pc++, sf = -1;\n    while (num = num * 10 + c - 48, (c = *pc++) >= 48);\n    return num * sf;\n}\nFinline void upmax(int &a, const int &b){\n    if(a < b) a = b;\n}\n\nint dp[MAXN], num[MAXN];\n\nstruct Q{\n    int s, t;\n    int q[MAXN];\n    Q(){\n        s = 1 , t = 0;\n    }\n    Finline void clear(){\n        s = 1, t = 0;\n    }\n    Finline bool empty(){\n        return s > t;\n    }\n    Finline int front(){\n        return q[s];\n    }\n    Finline int back(){\n        return q[t];\n    }\n    Finline void pop_front(){\n        s++;\n    }\n    Finline void pop_back(){\n        t--;\n    }\n    Finline void push(int tar){\n        q[++t] = tar;\n    }\n}q;\n\nint main(){\n    int n = read(), m = read(), c = read(), v, w, d, i, j, k, tmp1, tmp2, tmp3;\n    for(i = 1; i <= n; ++i){\n        v = read(), w = read(), d = read();\n        for(j = 0; j < v; ++j){\n            for(k = 0, q.clear(); (tmp1 = k * v + j) <= c; ++k){\n                tmp3 = k * w;\n                tmp2 = dp[tmp1] - tmp3;\n                while(!q.empty() && tmp2 > num[q.t]) q.pop_back();\n                q.push(k), num[q.t] = tmp2;\n                if(q.front() + d < k) q.pop_front();\n                dp[tmp1] = num[q.s] + tmp3;\n            }\n        } \n    }\n    for(i = 1; i <= m; ++i){\n        v = read(), w = read(), d = read();\n        for(j = c; j; --j){\n            for(k = 0; k <= j; k++){\n                upmax(dp[j], dp[j - k] + (v * k + w) * k + d);\n            }\n        }\n    }\n    printf(\"%d\", dp[c]);\n    return 0;\n}\n```",
        "postTime": 1518235573,
        "uid": 43464,
        "name": "Creeper_LKF",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1782 \u3010\u65c5\u884c\u5546\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "[*\u5728\u6211\u7684\u535a\u5ba2\u9605\u8bfb*](https://www.lemir3.red/2020/04/02/Project1782-%E6%97%85%E8%A1%8C%E5%95%86%E7%9A%84%E8%83%8C%E5%8C%85%E9%A1%B9%E7%9B%AE%E6%8A%A5%E5%91%8A/)\n\n[*\u9898\u9762*](https://www.luogu.com.cn/problem/P1782)\n\n## \u9898\u76ee\u5206\u6790\n\n\u5148\u4e0d\u8003\u8651\u5947\u8d27,\u662f\u4e00\u4e2a\u5206\u7ec4\u80cc\u5305,\u6570\u636e\u8303\u56f4\u5f88\u5927\u4e0d\u80fd\u76f4\u63a5\u595701\u80cc\u5305\u518d\u679a\u4e3e\u9009\u591a\u4ef6,\u8003\u8651\u4f18\u5316.\n\n\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u6765\u5206\u7ec4\u8f6c\u79fb,\u4e5f\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u62c6\u5206\u6765\u628a\u4f18\u5316\u8fd9\u4e2a\u66b4\u529b\u9009\u591a\u4ef6\u7684\u8fc7\u7a0b,\u56e0\u4e3a\u5e38\u6570\u539f\u56e0,\u8fd9\u9053\u9898\u91cc\u7528\u4e8c\u8fdb\u5236\u62c6\u5206\u66f4\u52a0\u4f18\u79c0.\n\n\u62c6\u5206\u7684\u601d\u60f3\u5c31\u662f\u7528\u591a\u4e2a\u4e8c\u7684\u6b21\u5e42\u6765\u7ec4\u5408\u6210\u5c0f\u4e8e\u539f\u6570\u7684\u4efb\u610f\u6b63\u6574\u6570,\u4ee3\u7801\u5982\u4e0b,\u5f88\u597d\u7406\u89e3:\n\n```cpp\n\t\tint t=1;\n\t\twhile(d)\n\t\t{\n\t\t\tif(d-t<=0)t=d,d=0;\n\t\t\telse d-=t;\n\t\t\tt<<=1;\n\t\t}\n```\n\n\u4e3e\u4e2a\u4f8b\u5b50,13\u4f1a\u88ab\u5206\u89e3\u4e3a{1,2,4,6},\u7528{1,2,4,6}\u91cc\u9762\u7684\u6570\u5355\u4e2a\u76f8\u52a0\u53ef\u4ee5\u7ec4\u6210[0,13]\u7684\u4efb\u610f\u6574\u6570,\u5c31\u628a\u679a\u4e3e13\u4e2a\u6570\u6765\u8f6c\u79fb\u4f18\u5316\u5230\u4e864\u4e2a\u6570.\n\n\u73b0\u5728\u52a0\u4e0a\u5947\u8d27,\u76f4\u63a5\u679a\u4e3e\u5360\u591a\u5c11\u4f53\u79ef,\u7b97\u51fa\u4ef7\u503c\u4e4b\u540e\u8f6c\u79fb\u5373\u53ef,\u6ce8\u610f\u4e00\u7ec4\u53c2\u6570\u53ea\u80fd\u7528\u4e00\u6b21,\u6240\u4ee5\u80cc\u5305\u7684\u5bb9\u91cf\u5728\u5916\u5c42\u5faa\u73af,\u679a\u4e3e\u5947\u8d27\u7684\u4f53\u79ef\u5728\u5185\u5c42\u5faa\u73af,\u8fd9\u4e00\u70b9\u5f97\u597d\u597d\u7406\u89e3\u4e0b.\n\n\u679a\u4e3e\u5947\u8d27\u7406\u8bba\u4e0a\u662f\u53ef\u4ee5\u7528\u4e8c\u6b21\u51fd\u6570\u7684\u9876\u70b9\u6765\u4f18\u5316\u7684,\u56e0\u4e3a\u786e\u8ba4\u5bb9\u91cf\u9012\u589e\u4ef7\u503c\u9012\u51cf\u4e4b\u540e\u518d\u679a\u4e3e\u4e5f\u6ca1\u6709\u610f\u4e49\u4e86,\u4f46\u6211\u6ca1\u5199.\n\n## \u4ee3\u7801\n\n```cpp\n#include \"iostream\"\n#include \"cstdio\"\n#include \"cstring\"\n#include \"cstdlib\"\n#include \"cmath\"\n#include \"cctype\"\n#include \"algorithm\"\n#include \"iomanip\"\n#include \"set\"\n#include \"time.h\"\n#include \"queue\"\n#include \"map\"\n#include \"stack\"\n#include \"vector\"\n#include \"deque\"\n#define lxl long long\n#define R register\n#define INF 0x3f3f3f3f\n#define debug(x) printf(\"debug:%lld\\n\",x)\n#define max(a,b) a>=b?a:b\nconst lxl maxn=100010;\nlxl n,m,c,cnt;\nlxl d[maxn],f[maxn],v_[maxn],w_[maxn];\ninline lxl read()\n{\n\tchar c=getchar();\n\tlxl f=1,x=0;\n\tfor(;!isdigit(c);c=getchar())(c=='-')&&(f=-1);\n\tfor(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n\treturn f*x;\n}\nint main(void)\n{\n\tn=read(),m=read(),c=read();\n\tfor(R int i(1);i<=n;++i)\n\t{\n\t\tlxl v=read(),w=read(),d=read();\n\t\tlxl t=1;\n\t\twhile(d)\n\t\t{\n\t\t\tif(d-t<=0)t=d,d=0;\n\t\t\telse d-=t;\n\t\t\tw_[++cnt]=t*w,v_[cnt]=t*v;\n\t\t\tt<<=1;\n\t\t}\n\t}\n\tfor(R int i(1);i<=cnt;++i)\n\t\tfor(R int k(c);k>=v_[i];--k)\n\t\t\t\tf[k]=max(f[k],f[k-v_[i]]+w_[i]);\n\tfor(R int i(1),a,b,c_;i<=m;++i)\n\t{\n\t\ta=read(),b=read(),c_=read();\n\t\tfor(R int k(c);k>=0;--k)\n\t\t{\n\t\t\tfor(R int j(0);j<=c;++j)\n\t\t\t{\n\t\t\t\tlxl v__=j,w__=a*j*j+b*j+c_;\n\t\t\t\tif(k>=v__)f[k]=max(f[k],f[k-v__]+w__);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",f[c]);\n\treturn 0;\n}\n```",
        "postTime": 1585870973,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1782 \u3010\u65c5\u884c\u5546\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "###\n\u8fd9\u4e2a\u662f\u4e2a\u80cc\u5305\u597d\u9898\u5440\uff08\u4f18\u5316\uff01\u4f18\u5316\uff01\u4f18\u5316\uff09\u7384\u5b66\u4f18\u5316\u5199\u4e86\u4e2a\u6392\u540d\u7b2c3\u7684\u6700\u4f18\u89e3\uff1b\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u60f3\u4e00\u4e0b\u6734\u7d20\u7684\u505a\u6cd5\u591a\u91cd\u80cc\u5305+\u5b8c\u5168\u80cc\u5305\uff0c\u4f46\u662f\u9057\u61be\uff0c\u4f1a\u8d85\u65f64-5\u4e2a\u70b9\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u5bf9\u591a\u91cd\u80cc\u5305\u7684\u4e8c\u8fdb\u5236\u4f18\u5316\u6216\u8005\u662f\u5355\u8c03\u961f\u5217\u4f18\u5316\uff0c\u5728\u6b64\uff0c\u6211\u8ba8\u8bba\u4e00\u4e0b\u4e8c\u8fdb\u5236\u7684\u4f18\u5316\u65b9\u5f0f,\uff08\u5355\u8c03\u961f\u5217\u6bd4\u4e8c\u8fdb\u5236\u4f18\u5316\u8981\u5feb\uff0c\u4f46\u662f\u8d85\u51fa\u4e86noip\u7684\u8303\u56f4\u6240\u4ee5\u5c31\u4e0d\u7814\u7a76\u4e86\uff08\u4e3b\u8981\u662f\u6211\u4e0d\u4f1aQwQ\uff09\uff09,\u4f46\u662f\u5f88\u9057\u61be\uff0c\u5373\u4f7f\u4f60\u8fdb\u884c\u4e86\u4e8c\u8fdb\u5236\u4f18\u5316\u8fd8\u662f\u4f1a\u8d85\u65f63\u4e2a\u70b9\uff0c\u5f88\u663e\u7136\u5b8c\u5168\u80cc\u5305\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fdc\u5c0f\u4e8e\u591a\u91cd\u80cc\u5305\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u52a0\u4e2a\u5224\u65ad\uff0c\u5982\u679c\u591a\u91cd\u80cc\u5305\u7684\u4e2a\u6570\u4e58\u4ee5\u5b83\u7684\u4f53\u79ef\u5927\u4e8e\u80cc\u5305\u7684\u4f53\u79ef\u6211\u4eec\u4fbf\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a\u5b8c\u5168\u80cc\u5305\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fc7\u8fd9\u4e2a\u9898\u4e86\uff1b\u5f53\u7136\u4f1a\u8bfb\u5165\u4f18\u5316\u66f4\u597d\u4e86\uff0cmax\u7684\u5224\u65ad\u5f53\u7136\u4e5f\u53ef\u4ee5\u624b\u5199\u53e6\u5916\u5207\u8bb0\u4e0d\u8981\u7528stl\uff01\u5207\u8bb0\u4e0d\u8981\u7528stl!\u5207\u8bb0\u4e0d\u8981\u7528stl!\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<deque>\nusing namespace std;\ninline int read(){\n\tint f=1,x=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn f*x;\n}//\u5feb\u8bfb\uff0c\u6700\u597d\u638c\u63e1\uff0c\u6709\u4e9b\u5361\u5e38\u6570\u9898\u8981\u7528\u5230\uff0c\u8fd9\u4e2a\u9898\u5c31\u6709\u70b9\u5361\u4e86\uff1b\nint s[1000000][2];\nint dp[100000];\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tint n=read(),m=read(),w=read();\n\tfor(register int i=1;i<=n;i++){\n\t\tint cnt=0;\n\t\tint s1=1,a=read(),b=read(),c=read();\n\t\tif(c*a>w){\n\t\t\tfor(register int j=a;j<=c;j++){\n\t\t\t\tif(dp[j-a]+b>dp[j])dp[j]=dp[j-a]+b;\n\t\t\t}\n\t\t}//\u8fd9\u4e2a\u5730\u65b9\u5c31\u662f\u6211\u6240\u8c13\u7684\u7279\u5224\uff1b\u5bf9\u4e8e\u65f6\u95f4\u7684\u4f18\u5316\u5f88\u5927\uff0c\u4e3b\u8981\u539f\u56e0\u5c31\u5728\u4e8e\u5b8c\u5168\u80cc\u5305\u548c\u591a\u91cd\u80cc\u5305\u6bd4\u8d77\u6765\u4f18\u8d8a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1b\n\t\telse{\n\t\t\twhile(c>=s1){\n\t\t\t\ts[++cnt][0]=a*s1;\n\t\t\t\ts[cnt][1]=b*s1;\n\t\t\t\tc-=s1;\n\t\t\t\ts1<<=1;\n\t\t\t}\n\t\t\tif(c>0){\n\t\t\t\ts[++cnt][0]=a*c;\n\t\t\t\ts[cnt][1]=b*c;\n\t\t\t}//\u4e8c\u8fdb\u5236\u4f18\u5316\uff0c\u5e94\u4e3a\u6240\u6709\u7684\u5143\u7d20\u90fd\u53ef\u4ee5\u62c6\u62102,4....2^n,s-2^n;\u5c06\u591a\u91cd\u80cc\u5305\u8f6c\u5316\u4e3a01\u80cc\u5305\u4e5f\u662f\u4e00\u79cd\u4f18\u5316\u65b9\u5f0f\uff1b\n\t\t\tfor(register int j=1;j<=cnt;j++){\n\t\t\t\tfor(register int k=w;k>=s[j][0];k--){\n\t\t\t\t\tif(s[j][1]+dp[k-s[j][0]]>dp[k]){\n\t\t\t\t\t\tdp[k]=dp[k-s[j][0]]+s[j][1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\tfor(register int i=1;i<=m;i++){\n\t\tint v=read(),o=read(),d=read();\n\t\tfor(register int j=w;j>=0;j--){\n\t\t\tfor(register int k=0;k<=j;k++){\n\t\t\t   if(dp[j-k]+(v*k+o)*k+d>dp[j])dp[j]=dp[j-k]+(v*k+o)*k+d;\n\t\t\t}//\u8fd9\u4e2a\u5730\u65b9\u6211\u4e2a\u4eba\u8ba4\u4e3a\u6ca1\u4ec0\u4e48\u53ef\u4ee5\u4f18\u5316\u5f97\u4e86\uff0c\u6709\u597d\u7684\u65b9\u6cd5\u53ef\u4ee5\u544a\u8bc9\u6211\u4e00\u4e0bOTZ;\n\t\t}\n\t}\n\tcout<<dp[w];\n}\n```\n\u6240\u4ee5\u5f88\u663e\u7136\uff0c\u8fd9\u9053\u9898\u8003\u5bdf\u7684\u91cd\u70b9\u5c31\u662f\u80cc\u5305\u7684\u5e94\u7528\u4ee5\u53ca\u4e00\u4e9b\u4f18\u5316\u65b9\u5f0f\u4e86\uff0c\u8fd9\u4e9b\u4f18\u5316\u65b9\u5f0f\u771f\u7684\u5f88\u91cd\u8981\uff0c\u4e00\u4e2a\u4e0d\u52a0\u4f18\u5316\u7684\u6734\u7d20\u505a\u6cd5\u81f3\u5c11\u9700\u89816000ms+\uff0c\u4f46\u662f\u7ecf\u8fc7\u4e0a\u8ff0\u7684\u4f18\u5316\u65b9\u5f0f\u540e\uff0c\u65f6\u95f4\u53ef\u4ee5\u63a7\u5236\u5728400ms\u4ee5\u5185\uff0c\u4f18\u5316\u7684\u6210\u6548\u8db3\u4ee5\u663e\u73b0\uff1b",
        "postTime": 1549548096,
        "uid": 122822,
        "name": "Merci",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1782 \u3010\u65c5\u884c\u5546\u7684\u80cc\u5305\u3011"
    },
    {
        "content": "\u7ec8\u4e8eAC\u4e86\uff0c\u8fd9\u9053\u9898\u8fd8\u771f\u662f\u8ff7\u554a\uff0c\u5efa\u8baeAC\u7684\u5927\u795e\u8bb0\u5f97\u5199\u9898\u89e3\uff0c\u4e0d\u7136\u82e3\u84bb\u5c31\u53ea\u80fd\u5237\u5c4f\u4e86\u3002\n\n\u6765\u8bf4\u4e00\u4e0b\u8fd9\u9053\u9898\uff1a\n\n\u7b2c\u4e00\uff0c\u4e0d\u8981\u7528memset\uff0c\u4e0d\u8981\u7528memset\uff0c\u4e0d\u8981\u7528memset\u3002\u5982\u679c\u4f60\u8ff7\u4e4b\u5168\u90e8tle\uff0c\u8bf7\u68c0\u67e5\u4e00\u4e0b\u662f\u5426\u4f7f\u7528\u4e86memset\u3002\n\n\u7b2c\u4e8c\uff0c\u4e0d\u8981\u7528\u5355\u8c03\u961f\u5217\uff0c\u5982\u679c\u4f60\u76f8\u4fe1\u697c\u4e0b\u7684\u8bdd\u3002\u3002\u3002\u3002\u76f8\u4fe1\u4f60\u5df2\u7ecf\u770b\u5230\u540e\u679c\u4e86\uff0c\u5982\u679c\u4f60\u4e0d\u662f\u6765\u6284\u4ee3\u7801\u7684\u8bdd\u3002\n\n\u7b2c\u4e09\uff0c\u6700\u597d\u5728\u7ebf\u5904\u7406\uff0c\u8fd9\u6837\u4e0d\u7528\u5f00\u961f\u5217\uff0c\u81ea\u7136\u4e5f\u4e0d\u7528memset\uff0c\u8fd8\u80fd\u63d0\u9ad8\u901f\u5ea6\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a\uff1f\n\n\u4e3a\u4ec0\u4e48\u4e0d\u8981\u7528\u5355\u8c03\u961f\u5217\uff0c\u56e0\u4e3a\u672c\u4eba\u4eb2\u81ea\u5b9e\u9a8c\u4f1atle\uff0c\u770b\u770b\u63d0\u4ea4\u8bb0\u5f55\u5c31\u77e5\u9053\u4e86\u3002\u3002\u3002\u3002\u867d\u8bf4\u5355\u8c03\u961f\u5217\u4f18\u5316\u591a\u91cd\u80cc\u5305\u7684\u590d\u6742\u5ea6\u662fO(vn)\n\n\u7684\uff0c\u53ef\u662f\u5b83\u5c31\u662fA\u4e0d\u4e86\u8fd9\u9053\u9898\uff0c\u6b63\u786eAC\u59ff\u52bf\u662f\u7528\u4e8c\u8fdb\u5236\u62c6\u5206+\u5b8c\u5168\u80cc\u5305\u3002\u4e2a\u4eba\u89c9\u5f97\u662f\u5355\u8c03\u961f\u5217\u7684\u5e38\u6570\u6709\u70b9\u5927\uff0c\u800c\u672c\u9898\u7684\u6570\u636e\u4e0d\u662f\u5f88\u5f3a\n\n\uff08\u4f30\u8ba1di\u5f88\u5c0f\uff09\u518d\u52a0\u4e0a\u8bc4\u6d4b\u673a\u7684\u901f\u5ea6\u53ef\u80fd\u53d8\u6162\u4e86\uff0c\u6240\u4ee5\u5bfc\u81f4\u5355\u8c03\u961f\u5217\u8dd1\u4e0d\u8fc7\u4e8c\u8fdb\u5236\u62c6\u5206\u3002\n\n\u9898\u89e3\uff1a\u591a\u91cd\u80cc\u5305\u76f8\u4fe1\u5927\u5bb6\u90fd\u4e86\u89e3\u4e86\uff0c\u4f18\u5316\u4e3b\u8981\u662f\u5355\u8c03\u961f\u5217\u548c\u4e8c\u8fdb\u5236\u62c6\u5206\u3002\u5148\u8bf4\u4e8c\u8fdb\u5236\u62c6\u5206\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c06\u7269\u54c1\u6570\u91cf\u6309\u4e8c\u8fdb\u5236\u62c6\u5f00\uff0c\n\n\u6bd4\u598213\u5c31\u53ef\u4ee5\u62c6\u62101\uff0c2\uff0c4\uff0c6\u3002\u6ce8\u610f\u6700\u540e\u76846\u662f8\u62c6\u4e0d\u591f\u4e86\uff0c\u8fd9\u6837\u5bf9\u4f53\u79ef\u5206\u522b\u4e3a1\u00d7v\uff0c2\u00d7v\uff0c4\u00d7v\uff0c6\u00d7v\uff0c\u4ef7\u503c\u5206\u522b\u4e3a,1\u00d7w\uff0c2\u00d7w\uff0c4\u00d7w\uff0c6\u00d7w\u7684\u7269\u54c1\u8dd101\u80cc\u5305\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\uff0c\u8fd9\u6837\u62c6\u5206\u7684\u4f9d\u636e\u662f\u628ax\u6309\u4e8c\u8fdb\u5236\u62c6\u5206\u540e\u62c6\u51fa\u6765\u7684\u6570\u53ef\u4ee5\u62fc\u62101\uff5ex\u7684\u4efb\u4f55\u4e00\u4e2a\u6570\uff0c\u8bc1\u660e\u8bf7\u81ea\u884c\u67e5\u627e\u8d44\u6599\u3002\u4e8c\u8fdb\u5236\u62c6\u5206\u7684\u590d\u6742\u5ea6\u4e3aO(vn\u00d7sum(log(num[i])))    num[i]\u4e3a\u7b2ci\u4ef6\u7269\u54c1\u7684\u6570\u91cf\u3002\n\n\u5355\u8c03\u961f\u5217\uff0c\u662f\u5c06dp\u8f6c\u79fb\u65b9\u7a0b\u53d8\u5f62\u540e\u6839\u636e\u5176\u4e0b\u6807\u5355\u8c03\u6027\u5f97\u51fa\u7684\uff0c\u5177\u4f53\u8bf7\u81ea\u884c\u767e\u5ea6\u3002\n\nPS\uff1a\u5f53\u7269\u54c1\u6570\u91cf\u592a\u591a\u4ee5\u81f3\u4e8e\u80cc\u5305\u88c5\u4e0d\u4e0b\u65f6\uff0c\u53ef\u4ee5\u5f53\u5b8c\u5168\u80cc\u5305\u5904\u7406\uff0c\u590d\u6742\u5ea6O(vn)\n",
        "postTime": 1503749142,
        "uid": 35465,
        "name": "Hunter_Will",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1782 \u3010\u65c5\u884c\u5546\u7684\u80cc\u5305\u3011"
    }
]