[
    {
        "content": "$upd:$\u9505\u5df2\u8865\n\n## \u4e00\u3001\u4f55\u8c13\u6a21\u5f0f\u4e32\u5339\u914d\n\n\u6a21\u5f0f\u4e32\u5339\u914d\uff0c\u5c31\u662f\u7ed9\u5b9a\u4e00\u4e2a\u9700\u8981\u5904\u7406\u7684\u6587\u672c\u4e32\uff08\u7406\u8bba\u4e0a\u5e94\u8be5\u5f88\u957f\uff09\u548c\u4e00\u4e2a\u9700\u8981\u5728\u6587\u672c\u4e32\u4e2d\u641c\u7d22\u7684\u6a21\u5f0f\u4e32\uff08\u7406\u8bba\u4e0a\u957f\u5ea6\u5e94\u8be5\u8fdc\u5c0f\u4e8e\u6587\u672c\u4e32\uff09\uff0c\u67e5\u8be2\u5728\u8be5\u6587\u672c\u4e32\u4e2d\uff0c\u7ed9\u51fa\u7684\u6a21\u5f0f\u4e32\u7684\u51fa\u73b0\u6709\u65e0\u3001\u6b21\u6570\u3001\u4f4d\u7f6e\u7b49\u3002\n\n\u6a21\u5f0f\u4e32\u5339\u914d\u7684\u610f\u4e49\u5728\u4e8e\uff0c\u5982\u679c\u6211\u662f\u4e00\u4e2a\u5e73\u53f0\u7684\u7ba1\u7406\u5458\uff0c\u6211\u53ef\u4ee5\u9488\u5bf9\u4e00\u7bc7\u6587\u7ae0\u6216\u8005\u4e00\u53e5\u8bdd\uff0c\u641c\u7d22\u5176\u4e2d\u67d0\u4e2a\u7279\u5b9a\u810f\u5b57\u6216\u8005\u4e0d\u96c5\u8bcd\u6c47\u7684\u51fa\u73b0\u6b21\u6570\u3001\u4f4d\u7f6e\u2014\u2014\u6b21\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u51b3\u5b9a\u91c7\u53d6\u4f55\u79cd\u7b49\u7ea7\u5bf9\u4e8e\u8be5\u7528\u6237\u7684\u60e9\u7f5a\u65b9\u5f0f\uff0c\u800c\u4f4d\u7f6e\u5219\u53ef\u4ee5\u5e2e\u52a9\u6211\u7ed9\u6bcf\u4e00\u4e2a\u810f\u8bcd\u6253\u4e0a\u201c*\u201d\u7684\u6807\u8bb0\u6765\u81ea\u52a8\u5c4f\u853d\u8fd9\u4e9b\u810f\u8bcd\u3002\n\n## \u4e8c\u3001\u6d45\u6790 $KMP$ \u4e4b\u601d\u60f3\n\n\u54e6\u5475\u5475\u8fd9\u4e2a\u7b97\u6cd5\u7684\u540d\u5b57\u6bd4\u8f83\u8be1\u5f02\u662f\u56e0\u4e3a\u6709\u4e09\u4f4d\u4f1f\u5927\u7684\u79d1\u5b66\u5bb6\u5171\u540c\u8bbe\u8ba1\u5b8c\u6210\u2026\u2026\u5206\u522b\u662f$\\mathcal{Knuth(D.E.Knuth) \\& Morris(J.H.Morris)\\& Pratt(V.R.Pratt)}$\n\n~~\u7136\u800c\u6211\u5e76\u4e0d\u77e5\u9053\u4ed6\u4eec\u662f\u8c01~~\n\n\u9996\u5148\u8981\u7406\u89e3\uff0c\u6734\u7d20\u7684\u5355\u6a21\u5f0f\u4e32\u5339\u914d\u5927\u6982\u5c31\u662f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6587\u672c\u4e32\u5143\u7d20\uff0c\u7136\u540e\u4ece\u8fd9\u4e00\u4f4d\u5f00\u59cb\u4e0d\u65ad\u5411\u540e\u6bd4\u8f83\uff0c\u6bcf\u6b21\u6bd4\u8f83\u5931\u8d25\u4e4b\u540e\u90fd\u8981\u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u6bd4\u5bf9\uff0c\u5927\u6982\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u5728 $\\Theta(n+m)$ \u5de6\u53f3\uff0c\u5bf9\u4e8e\u4e00\u822c\u7684\u5f31\u6570\u636e\u8fd8\u662f\u9614\u4ee5\u8dd1\u7684\u4e86\u6ef4\u3002\u4f46\u662f\u5176\u5b9e\u662f\u53ef\u4ee5\u88ab\u5361\u6210$O(nm)$\u7684\u3002$emmmm$\u5e76\u4e14\u8fd8\u662f\u6bd4\u8f83\u5bb9\u6613\u5361\u7684\u3002\n\n\u800c $KMP$ \u7684\u7cbe\u9ad3\u5728\u4e8e\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u5931\u914d\u4e4b\u540e\uff0c\u6211\u90fd\u4e0d\u4f1a\u4ece\u5934\u91cd\u65b0\u5f00\u59cb\u679a\u4e3e\uff0c\u800c\u662f\u6839\u636e\u6211\u5df2\u7ecf\u5f97\u77e5\u7684\u6570\u636e\uff0c\u4ece\u67d0\u4e2a\u7279\u5b9a\u7684\u4f4d\u7f6e\u5f00\u59cb\u5339\u914d\uff1b\u800c\u5bf9\u4e8e\u6a21\u5f0f\u4e32\u7684\u6bcf\u4e00\u4f4d\uff0c\u90fd\u6709**\u552f\u4e00**\u7684\u201c\u7279\u5b9a\u53d8\u5316\u4f4d\u7f6e\u201d\uff0c\u8fd9\u4e2a\u5728\u5931\u914d\u4e4b\u540e\u7684\u7279\u5b9a\u53d8\u5316\u4f4d\u7f6e\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5229\u7528\u5df2\u6709\u7684\u6570\u636e\u4e0d\u7528\u4ece\u5934\u5339\u914d\uff0c\u4ece\u800c\u8282\u7ea6\u65f6\u95f4\u3002\n\n\u6bd4\u5982\u6211\u4eec\u8003\u8651\u4e00\u7ec4\u6837\u4f8b\uff1a\n\n```cpp\n\u6a21\u5f0f\u4e32\uff1aabcab\n\u6587\u672c\u4e32\uff1aabcacababcab\n```\n\n\u9996\u5148\uff0c\u524d\u56db\u4f4d\u6309\u4f4d\u5339\u914d\u6210\u529f\uff0c\u9047\u5230\u7b2c\u4e94\u4f4d\u4e0d\u540c\uff0c\u800c\u8fd9\u65f6\uff0c\u6211\u4eec\u9009\u62e9\u5c06$abcab$\u5411\u53f3\u79fb\u4e09\u4f4d\uff0c\u6216\u8005\u53ef\u4ee5\u76f4\u63a5\u7406\u89e3\u4e3a\u79fb\u52a8\u5230\u6a21\u5f0f\u4e32\u4e2d\u4e0e\u5931\u914d\u5b57\u7b26\u76f8\u540c\u7684\u90a3\u4e00\u4f4d\u3002\u53ef\u4ee5\u7b80\u5355\u5730\u7406\u89e3\u4e3a\uff0c\u6211\u4eec\u5c06\u4e24\u4e2a\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\u6a21\u5f0f\u4e32\u5b57\u7b26\u91cd\u5408\uff0c\u5bfc\u81f4\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u4e00\u4f4d\u4e00\u4f4d\u5730\u79fb\u52a8\uff0c\u800c\u662f\u6839\u636e\u76f8\u540c\u7684\u5b57\u7b26\u6765\u5b9e\u73b0\u5feb\u901f\u79fb\u52a8\u3002\n\n```cpp\n\u6a21\u5f0f\u4e32\uff1a   abcab\n\u6587\u672c\u4e32\uff1aabcacababcab\n```\n\n\u4f46\u6709\u65f6\u4e0d\u5149\u53ea\u4f1a\u6709\u5355\u4e2a\u5b57\u7b26\u91cd\u590d\uff1a\n\n```cpp\n\u6a21\u5f0f\u4e32\uff1aabcabc\n\u6587\u672c\u4e32\uff1aabcabdababcabc\n```\n\n\u5f53\u6211\u4eec\u53d1\u73b0\u5728\u7b2c\u516d\u4f4d\u5931\u914d\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6a21\u5f0f\u4e32\u7684\u7b2c\u4e00\u4e8c\u4f4d\u79fb\u52a8\u5230\u7b2c\u56db\u4e94\u4f4d\uff0c\u56e0\u4e3a\u5b83\u4eec\u76f8\u540c $qwq$ .\n\n```cpp\n\u6a21\u5f0f\u4e32\uff1a   abcabc\n\u6587\u672c\u4e32\uff1aabcabdababcabc\n```\n\n\u90a3\u4e48\u73b0\u5728\u5df2\u7ecf\u5f88\u660e\u4e86\u4e86\uff0c $KMP$ \u7684\u91cd\u5934\u620f\u5c31\u5728\u4e8e\u7528\u5931\u914d\u6570\u7ec4\u6765\u786e\u5b9a\u5f53\u67d0\u4e00\u4f4d\u5931\u914d\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u524d\u4e00\u4f4d\u8df3\u8dc3\u5230\u4e4b\u524d\u5339\u914d\u8fc7\u7684\u67d0\u4e00\u4f4d\u3002\u800c\u6b64\u5904\u6709\u51e0\u4e2a\u5148\u51b3\u6761\u4ef6\u9700\u8981\u7406\u89e3\uff1a\n\n1\u3001**\u6211\u4eec\u7684\u5931\u914d\u6570\u7ec4\u5e94\u5f53\u5efa\u7acb\u5728\u6a21\u5f0f\u4e32\u610f\u4e49\u4e0b\uff0c\u800c\u4e0d\u662f\u6587\u672c\u4e32\u610f\u4e49\u4e0b**\u3002\u56e0\u4e3a\u663e\u7136\u6a21\u5f0f\u4e32\u8981\u66f4\u52a0\u7075\u6d3b\uff0c\u5728\u5931\u914d\u540e\u6362\u4f4d\u65f6\uff0c\u66f4\u7075\u6d3b\u7b80\u4fbf\u5730\u5904\u7406\u3002\n\n2\u3001\u5982\u4f55\u786e\u5b9a\u4f4d\u7f6e\u5462\uff1f\n\n\u9996\u5148\u6211\u4eec\u8981\u660e\u767d\uff0c\u57fa\u4e8e\u5148\u51b3\u6761\u4ef6$1$\u800c\u8a00\uff0c\u6211\u4eec\u5728\u9884\u5904\u7406\u65f6\u5e94\u5f53\u8003\u8651\u5f53**\u6a21\u5f0f\u4e32**\u7684\u7b2c $i$ \u4f4d\u5931\u914d\u65f6\uff0c\u5e94\u5f53\u8df3\u8f6c\u5230\u54ea\u91cc.\u56e0\u4e3a\u5728\u6587\u672c\u4e32\u4e2d\uff0c\u4e4b\u524d\u5339\u914d\u8fc7\u7684\u6240\u6709\u5b57\u7b26\u5df2\u7ecf\u6ca1\u6709\u7528\u4e86\u2014\u2014\u90fd\u662f\u5339\u914d\u5b8c\u6210\u6216\u8005\u5df2\u7ecf\u5931\u914d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7684 $kmp$ \u6570\u7ec4\uff08\u5373\u662f\u7528\u4e8e\u786e\u5b9a\u5931\u914d\u540e\u53d8\u5316\u4f4d\u7f6e\u7684\u6570\u7ec4\uff0c\u4e0b\u540c\uff09\u5e94\u5f53\u8bb0\u5f55\u7684\u662f\uff1a\n\n**\u5728\u6a21\u5f0f\u4e32 $str1$ \u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4f4d $str1(i)$ ,\u5b83\u7684 $kmp$ \u6570\u7ec4\u5e94\u5f53\u662f\u8bb0\u5f55\u4e00\u4e2a\u4f4d\u7f6e $j$, $j \\leq i$ \u5e76\u4e14\u6ee1\u8db3 $str1(i)=str1(j)$ \u5e76\u4e14\u5728 $j!=1$ \u65f6\u7406\u5e94\u6ee1\u8db3 $str1(1)$\u81f3$str1(j-1)$ \u5206\u522b\u4e0e $str(i-j+1)$~$str1(i-1)$ \u6309\u4f4d\u76f8\u7b49**\n\n\u4e0a\u8ff0\u5373\u4e3a\u79fb\u4f4d\u6cd5\u5219\n\n3\u3001\u4ece\u524d\u7f00\u540e\u7f00\u6765\u89e3\u91ca $KMP$ :\n\n\u9996\u5148\u89e3\u91ca\u524d\u540e\u7f00(\u56e0\u4e3a\u592a\u7b80\u5355\u5c31\u4e0d\u89e3\u91ca\u4e86 $qwq$ )\uff1a \n\n```cpp\n\u7ed9\u5b9a\u4e32\uff1aABCABA\n\u524d\u7f00\uff1aA,AB,ABC,ABCA,ABCAB,ABCABA\n\u540e\u7f00\uff1aA,BA,ABA,CABA,BCABA,ABCABA\n```\n\n\u5176\u5b9e\u521a\u624d\u7684\u79fb\u4f4d\u6cd5\u5219\u5c31\u662f\u5bf9\u4e8e\u6a21\u5f0f\u4e32\u7684\u6bcf\u4e2a\u524d\u7f00\u800c\u8a00\uff0c\u7528 $kmp$ \u6570\u7ec4\u8bb0\u5f55\u5230\u5b83\u4e3a\u6b62\u7684**\u6a21\u5f0f\u4e32\u524d\u7f00\u7684\u771f\u524d\u7f00\u548c\u771f\u540e\u7f00\u6700\u5927\u76f8\u540c\u7684\u4f4d\u7f6e**\uff08\u6ce8\u610f\uff0c\u8fd9\u4e2a\u5730\u65b9\u6ca1\u6709\u5199\u9519\uff0c\u662f\u771f\u7684\u6709\u5d4c\u5957 $qwq$ \uff09\u3002\u7136\u800c\u8fd9\u4e2a\u5730\u65b9\u6211\u4eec\u8981\u8003\u8651\u201c**\u6a21\u5f0f\u4e32\u524d\u7f00**\u7684\u524d\u7f00\u548c\u540e\u7f00\u6700\u5927\u76f8\u540c\u7684\u4f4d\u7f6e\u201d\u539f\u56e0\u5728\u4e8e\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230 $kmp$ \u6570\u7ec4\u6362\u4f4d\u65f6\uff0c\u5f53\u4e14\u4ec5\u5f53\u672a\u5b8c\u5168\u5339\u914d\u3002\u6240\u4ee5\u6211\u4eec\u7684\u64cd\u4f5c\u53ea\u662f\u9488\u5bf9\u6a21\u5f0f\u4e32\u7684\u524d\u7f00$--$\u6bd5\u7adf\u662f\u5931\u914d\u51fd\u6570\uff0c\u5931\u914d\u4e4b\u540e\u53ea\u6709\u53ef\u80fd\u662f\u67d0\u4e2a\u90e8\u5206\u524d\u7f00\u9700\u8981\u201c\u5feb\u901f\u79fb\u52a8\u201d\u3002\u6240\u4ee5\u8fd9\u5c31\u53ef\u4ee5\u89e3\u91ca $KMP$ \u4e2d\u524d\u540e\u7f00\u5e94\u7528\u7684\u4e00\u4e2a\u7279\u70b9\uff1a\n\n $KMP$ \u4e2d\u524d\u540e\u7f00\u4e0d\u5305\u62ec\u6a21\u5f0f\u4e32\u672c\u8eab,\u5373**\u53ea\u8003\u8651\u771f\u524d\u7f00\u548c\u771f\u540e\u7f00**,\u56e0\u4e3a\u6a21\u5f0f\u4e32\u672c\u8eab\u9700\u8981\u6574\u4f53\u8003\u8651\uff0c\u5f53\u4e14\u4ec5\u5f53\u5339\u914d\u5b8c\u6574\u4e2a\u4e32\u4e4b\u540e\uff1b\u800c\u5339\u914d\u5b8c\u6574\u4e2a\u4e32\u4e0d\u5c31\u5b8c\u6210\u5339\u914d\u4e86\u5417 $qwq$ \n\n### \u4e09\u3001\u4ee3\u7801\u5b9e\u73b0\n\n1\u3001$kmp[i]$ \u7528\u4e8e\u8bb0\u5f55\u5f53\u5339\u914d\u5230\u6a21\u5f0f\u4e32\u7684\u7b2c $i$ \u4f4d\u4e4b\u540e\u5931\u914d,\u8be5\u8df3\u8f6c\u5230\u6a21\u5f0f\u4e32\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6a21\u5f0f\u4e32\u7684\u7b2c\u4e00\u4f4d\u548c\u7b2c\u4e8c\u4f4d\u800c\u8a00\uff0c\u53ea\u80fd\u56de\u8df3\u5230 $1$\uff0c\u56e0\u4e3a\u662f $KMP$ \u662f\u8981\u5c06\u771f\u524d\u7f00\u8df3\u8dc3\u5230\u4e0e\u5b83\u76f8\u540c\u7684\u771f\u540e\u7f00\u4e0a\u53bb\uff08\u901a\u5e38\u4e5f\u53ef\u4ee5\u53cd\u7740\u7406\u89e3\uff09\uff0c\u6240\u4ee5\u5f53 $i=0$ \u6216\u8005 $i=1$ \u65f6,\u76f8\u540c\u7684\u771f\u524d\u7f00\u53ea\u4f1a\u662f $str1(0)$ \u8fd9\u4e00\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5 $kmp[0]=kmp[1]=1$\u3002\n\n2\u3001\u5bf9\u4e8e\u5982\u4f55\u548c\u6587\u672c\u4e32\u6bd4\u5bf9\uff0c\u5f88\u7b80\u5355\uff1a\n```cpp\n    int j;\n    j=0;//j\u53ef\u4ee5\u770b\u505a\u8868\u793a\u5f53\u524d\u5df2\u7ecf\u5339\u914d\u5b8c\u7684\u6a21\u5f0f\u4e32\u7684\u6700\u540e\u4e00\u4f4d\u7684\u4f4d\u7f6e \n    //\u5982\u679c\u697c\u4e0a\u770b\u4e0d\u61c2\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3aj\u8868\u793a\u6a21\u5f0f\u4e32\u5339\u914d\u5230\u7b2c\u51e0\u4f4d\u4e86 \n    for(int i=1;i<=la;i++)\n\t   {\n          while(j&&b[j+1]!=a[i])j=kmp[j];\n\t\t  //\u5982\u679c\u5931\u914d \uff0c\u90a3\u4e48\u5c31\u4e0d\u65ad\u5411\u56de\u8df3\uff0c\u76f4\u5230\u53ef\u4ee5\u7ee7\u7eed\u5339\u914d \n          if (b[j+1]==a[i]) j++;\n          //\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u6a21\u5f0f\u4e32\u4f4d\u7f6e++ \n          if (j==lb) \n\t\t  {\n\t\t  cout<<i-lb+1<<endl;\n\t\t  j=kmp[j];\n\t\t  //\u7ee7\u7eed\u5339\u914d \n\t\t  }\n       }\n\n```\n\n3\u3001\u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u5904\u7406 $kmp$ \u6570\u7ec4\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u6a21\u5f0f\u4e32\u81ea\u5df1\u5339\u914d\u81ea\u5df1\n\n```cpp\n    j=0;\n    for (int i=2;i<=lb;i++)\n\t   {     \n\t   while(j&&b[i]!=b[j+1])\n       //\u6b64\u5904\u5224\u65adj\u662f\u5426\u4e3a0\u7684\u539f\u56e0\u5728\u4e8e\uff0c\u5982\u679c\u56de\u8df3\u5230\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5c31\u4e0d \u7528\u518d\u56de\u8df3\u4e86\n       j=kmp[j];    \n        //\u901a\u8fc7\u81ea\u5df1\u5339\u914d\u81ea\u5df1\u6765\u5f97\u51fa\u6bcf\u4e00\u4e2a\u70b9\u7684kmp\u503c \n       if(b[j+1]==b[i])j++;    \n       kmp[i]=j;\n        //i+1\u5931\u914d\u540e\u5e94\u8be5\u5982\u4f55\u8df3 \n       }\n```\n\u90a3\u4e48\u8fd9\u4e2a\u201c\u81ea\u5df1\u5339\u914d\u81ea\u5df1\u201d\u8be5\u5982\u4f55\u7406\u89e3\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u60f3\uff1a\n\u9996\u5148\uff0c\u5728\u5355\u6b21\u5faa\u73af\u53ea\u6709\u4e00\u4e2a $if$ \u6765\u5224\u65ad\u7684\u539f\u56e0\u5728\u4e8e\u6bcf\u6b21\u81f3\u591a\u5411\u540e\u591a\u6c42\u4e00\u4f4d\u7684$next$\uff1b\n\n\u5e76\u4e14 $j$ \u662f\u62e5\u6709\u53ef\u7ee7\u627f\u6027\u7684\uff0c\u7531\u4e8e $j$ \u662f\u7528\u4e8e\u6bd4\u5bf9\u524d\u7f00\u540e\u7f00\u7684\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u7ec4\u524d\u540e\u7f00\u800c\u8a00\uff0c\u7b2c $i-1$ \u548c\u7b2c $j-1$ \u4f4d\u4e4b\u524d\u5747\u76f8\u540c\u6216\u8005\u6709\u4e0d\u540c\uff0c\u51b3\u5b9a\u7740 $i$ \u548c $j$ \u5339\u914d\u7684\u7ed3\u679c\u662f\u4ece $0$ \u5f00\u59cb\u8fd8\u662f\u57fa\u4e8e\u4e0a\u4e00\u4e2a $j$ \u7ee7\u7eed$++$\n\n\u8d34\u6807\u7a0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#define MAXN 1000010\nusing namespace std;\nint kmp[MAXN];\nint la,lb,j; \nchar a[MAXN],b[MAXN];\nint main()\n{\n    cin>>a+1;\n    cin>>b+1;\n    la=strlen(a+1);\n    lb=strlen(b+1);\n    for (int i=2;i<=lb;i++)\n\t   {     \n\t   while(j&&b[i]!=b[j+1])\n        j=kmp[j];    \n       if(b[j+1]==b[i])j++;    \n        kmp[i]=j;\n       }\n    j=0;\n    for(int i=1;i<=la;i++)\n\t   {\n          while(j>0&&b[j+1]!=a[i])\n           j=kmp[j];\n          if (b[j+1]==a[i]) \n           j++;\n          if (j==lb) {cout<<i-lb+1<<endl;j=kmp[j];}\n       }\n\n    for (int i=1;i<=lb;i++)\n    cout<<kmp[i]<<\" \";\n    return 0;\n}\n```\n\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(m+n)$ ,\u6bd4\u6734\u7d20\u7b97\u6cd5\u6709\u4e86\u6781\u5927\u7684\u4f18\u5316\u3002\n\n______\n\n$Extra \\ \\ Knowledge$\u6d45\u6790\u590d\u6742\u5ea6\u8bc1\u660e\n\n\u9898\u5916\u8bdd\uff1a\u672c\u6765\u60f3\u626f\u644a\u8fd8\u5206\u6790\u6765\u7740\uff0c\u4f46\u662f$rqy$\u8bf4\u7684\u597d\u50cf\u6bd4\u8f83\u76f4\u63a5\u6613\u61c2\uff0c\u4e8e\u662f\u5728\u8fd9\u91cc\u5c31\u5f15\u7528\u4e86$rqy$\u7684\u8bdd\uff1a\n\n>\u6bcf\u6b21\u4f4d\u7f6e\u6307\u9488$i++$\u65f6\uff0c\u5931\u914d\u6307\u9488$j$\u81f3\u591a\u589e\u52a0\u4e00\u6b21\uff0c\u6240\u4ee5$j$\u81f3\u591a\u589e\u52a0$len$\u6b21\uff0c\u4ece\u800c\u81f3\u591a\u51cf\u5c11$len$\u6b21\uff0c\u6240\u4ee5\u5c31\u662f$\\Theta(len_N + len_M) = \\Theta(N + M)$\u7684\n\n\u603b\u4e4b\u5f88\u8ff7\u5c31\u5bf9\u4e86\uff08\u9003\n____\n\n\u5176\u5b9e\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0c $KMP$ \u7b97\u6cd5\u4e4b\u6240\u4ee5\u5feb\uff0c\u4e0d\u4ec5\u4ec5\u7531\u4e8e\u5b83\u7684\u5931\u914d\u5904\u7406\u65b9\u6848\uff0c\u66f4\u91cd\u8981\u7684\u662f\u5229\u7528\u524d\u7f00\u540e\u7f00\u7684\u7279\u6027\uff0c\u4ece\u4e0d\u4f1a\u53cd\u53cd\u590d\u590d\u5730\u627e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4ee3\u7801\u91cc\u5bf9\u4e8e\u5339\u914d\u53ea\u6709\u4e00\u91cd\u5faa\u73af\uff0c\u4e5f\u5c31\u662f\u8bf4 $KMP$ \u7b97\u6cd5\u5177\u6709\u4e00\u79cd\u201c\u6700\u4f18\u5386\u53f2\u5904\u7406\u201d\u7684\u6027\u8d28\uff0c\u800c\u8fd9\u79cd\u6027\u8d28\u4e5f\u662f\u57fa\u4e8e $KMP$ \u7684\u6838\u5fc3\u601d\u60f3\u7684\u3002\n",
        "postTime": 1519381449,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u5b57\u7b26\u4e32\u5b66\u4e60\u7b14\u8bb0 \u00b7 \u6d45\u6790KMP\u2014\u2014\u5355\u6a21\u5f0f\u4e32\u5339\u914d\u7b97\u6cd5"
    },
    {
        "content": "\n###\u9996\u5148\u8981\u8bf4\u7684\u662f\uff1a\u5343\u4e07\u4e0d\u8981\u7528gets\uff01\uff01\uff08\u5751\u6b7b\u6211\u4e86\uff09###\n\n\u7136\u540e\uff0c\u6b63\u6587\u5982\u4e0b\uff1a\n\nKMP\u4e00\u5f00\u59cb\u770b\u6709\u70b9\u6655\uff0c\u4f60\u5148\u8981\u77e5\u9053\u7684\u662f\uff0c\u5b83\u662f\u5148\u81ea\u5df1\u548c\u81ea\u5df1\u5f04\uff0c\u518d\u548c\u5927\u4e32\u5f04\u3002\n\n\u867d\u7136\u6211\u4e0d\u662fP\u515a\uff0c\u4f46\u8fd9\u7bc7\u8bb2\u7a3f\u4e0d\u9519\uff1a[http://www.matrix67.com/blog/archives/115](http://www.matrix67.com/blog/archives/115)\n\ni\u662fa\u4e32\uff08\u5927\u4e32\uff09\u7684\u6307\u9488\uff0cj\u662fb\u4e32\uff08\u5c0f\u4e32\uff09\u7684\u6307\u9488\n\n\u5f53\u4f60\u5339\u914d\u5230j==m\u65f6\uff0c\u4f60\u5c31\u80dc\u5229\u4e86\uff0c\u6b64\u65f6\u5728a\u4e32\u91cc\u7684\u51fa\u73b0\u4f4d\u7f6e\u5c31\u662fi-m+1\n\n\u90a3\u4e48\uff0c\u5e73\u5e38\u7684\u4e00\u4f4d\u4e00\u4f4d\u5339\u914d\uff0c\u4e0d\u884c\u518di+1\u4ece\u5934\u5f00\u59cb\u592a\u6162\u4e86\uff0c\u660e\u660eb\u4e32\u524d\u9762\u91cc\u6709\u548c\u5f53\u524d\u540e\u9762\u76f8\u540c\u51e0\u4f4d\uff0c\u4f60\u5374\u53c8\u8981\u628a\u5b83\u91cd\u65b0\u5339\u914d\u4e00\u904d\u3002\u3002\n\nlike\uff1a\n\nabab***a***babe\n\nabab***e***\n\n\u554a\uff0c\u4f60\u53d1\u73b0\u8fd9\u91cc\u70b8\u4e86,\u56e0\u4e3ab[1]=b[3],b[2]=b[4]\u4f60\u5b8c\u5168\u53ef\u4ee5,\u76f4\u63a5\u8fd9\u6837\uff1a\n\nababababe\n\n.....ababe\n\n\u800c\u4e0d\u662f\u8fd9\u6837\uff1a\n\nababababe\n\n..ababe\n\n\u4e8e\u662f\uff0c\u4f60\u60f3\u5230\u4e86\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u76f8\u540c\u7684\u90e8\u5206\uff0c\u600e\u4e48\u5904\u7406\u5217\n\n\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u8fd9\u6837\u4e00\u4e2a\u6570\u7ec4p[j]\uff0c\u8868\u793a\u5f53\u5339\u914d\u5230b\u6570\u7ec4\u7684\u7b2cj\u4e2a\u5b57\u6bcd\u800c\u7b2cj+1\u4e2a\u5b57\u6bcd\u4e0d\u80fd\u5339\u914d\u4e86\u65f6\uff0c\u65b0\u7684j\u6700\u5927\u662f\u591a\u5c11\u3002p[j]\u5e94\u8be5\u662f\u6240\u6709\u6ee1\u8db3b[1..p[j]]=b[j-p[j]+1..j]\u7684\u6700\u5927\u503c\u3002\n\n\n\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5f97A[i-j+1..i]\u4e0eB[1..j]\u4fdd\u6301\u5339\u914d\uff08\u6b64\u5904\u4e3a\u65b0\u7684j\uff09\u3002\n\n\n\u7136\u540e\uff0c\u4e0b\u4e00\u4f4d\u5982\u679c\u8fd8\u662f\u4e0d\u80fd\u5339\u914d\uff0c\u518d\u628a\u524d\u4e00\u4e2aj\u7ffb\u51fa\u6765\uff0c\u518d\u5339\u914d\u4e00\u6b21\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u76f8\u540c\u7684\u524d\u7f00\u4e86\u4e5f\u5c31\u662fj=0\u4e86\uff0c\u5c31\u53ea\u80fd\u628a\u6574\u4e2a\u4e32\u5f80\u540e\u632a\u4e00\u4f4d\u4e86\n\n\n\u672c\u4eba\u53ef\u80fd\u8bb2\u7684\u4e0d\u6e05\u695a\uff0c\u5927\u5bb6\u770b\u770b\u4e0a\u9762\u90a3\u7bc7\u8bb2\u7a3f\u4f1a\u597d\u4e00\u70b9\n\n```cpp\n    #include<cstdio>\n    #include<cstring>\n    #include<iostream>\n    #include<algorithm>\n    using namespace std;\n    char a[1000100],b[1000100];\n    int p[1000100];\n    int main()\n    {\n        scanf(\"%s%s\",a+1,b+1);\n        int la=strlen(a+1),lb=strlen(b+1);\n        int j=0;\n        p[1]=0;\n        //\u5148\u5904\u7406\u51fap\u6570\u7ec4\uff0c\u65e0\u975e\u662fb\u548c\u81ea\u5df1\u5339\u914d\uff0c\u4e0eb\u548ca\u5339\u914d\u4e00\u6837\uff0c\u6545\u4ee3\u7801\u5dee\u4e0d\u591a\n        for(int i=2;i<=lb;i++)\n        {\n            while(j>0 && b[i]!=b[j+1]) j=p[j];//\u5f80\u524d\u7ffb\u8bb0\u5f55\u4e86\u6709\u76f8\u540c\u524d\u7f00\u7684j\n            if(b[i]==b[j+1]) j++;//i\u5339\u914d\u6210\u529f\u4e86\uff0ci\u7ee7\u7eed\u5f80\u540e\n            p[i]=j;\n        }\n        j=0;\n        for(int i=1;i<=la;i++)\n        {\n            while(j>0 && a[i]!=b[j+1]) j=p[j];\n            if(a[i]==b[j+1]) j++;\n            if(j==lb) printf(\"%d\\n\",i-lb+1),j=p[j];\n        }\n        for(int i=1;i<lb;i++)\n            printf(\"%d \",p[i]);\n        printf(\"%d\",p[lb]);\n        return 0;\n    }\n\u672c\u4eba\u840c\u65b0\uff0c\u8fd8\u8bf7\u5927\u795e\u6307\u6559\n```",
        "postTime": 1516501037,
        "uid": 21874,
        "name": "hicc0305",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "kmp\u7b97\u6cd5\u867d\u7136\u662f\u4e00\u4e2a\u975e\u5e38\u8001\u7684\u7b97\u6cd5\u4e86\uff0c\u5404\u754cOI\u6bd4\u8d5b\u6700\u8fd1\u4e5f\u5f88\u5c11\u78b0\u8fc7\u3002\u4f46\u662f\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u7b97\u6cd5\uff0c\u4e14\u57282016GDOI\u4e2d\u4e13\u95e8\u51fa\u4e86kmp\u6a21\u677f\u9898\uff08\u5f53\u65f6\u8fd8\u662f\u4e2a\u849f\u84bb\uff0c\u66b4\u529b\u53ea\u62ff\u4e8630\u5206\u2026\u2026\uff09\u3002\u6240\u4ee5\uff0c\u4eca\u5929\u53c8\u6253\u4e86\u4e00\u904dkmp\u4e14\u5199\u4e86\u9898\u89e3\uff0c\u65e2\u662f\u5e2e\u5927\u5bb6\u7406\u89e3kmp\uff0c\u4e5f\u662f\u5bf9\u6211\u81ea\u5df1\u77e5\u8bc6\u7684\u4e00\u4e2a\u68b3\u7406\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u4e86\u89e3\u76f8\u8f83\u4e8e\u666e\u901a\u5b57\u7b26\u4e32\u5339\u914d\u5feb\u5728\u54ea\u3002\u666e\u901a\u5339\u914d\u662f\u4e00\u4f4d\u4e00\u4f4d\u5f80\u524d\u63a8\uff0c\u518d\u4e00\u6b21\u6b21\u4ece\u9009\u5b9a\u7684\u5f00\u5934\u5f80\u540e\u5bf9\u6bd4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8fd1\u4f3c\u4e8eO(N^2)\u3002\u800ckmp\u5feb\u5c31\u5feb\u5728\u5b83\u4e0d\u7528\u4e00\u4f4d\u4e00\u4f4d\u7684\u9009\u5b9a\u5f00\u5934\uff0c\u800c\u662f\u52a8\u6001\u4ee5\u6700\u4f18\u7684\u5f00\u5934\u4f5c\u6bd4\u8f83\uff0c\u6bd4\u6734\u7d20\u7b97\u6cd5\u6548\u7387\u63d0\u9ad8\u4e86\u4e0d\u5c11\u3002\u770b\u4e0d\u61c2\u8fd9\u6bb5\u8bdd\u7684\u4eba\u4e5f\u4e0d\u7528\u7740\u6025\uff0c\u5f80\u540e\u770b\u5c31\u5bf9\u4e86\u3002\n\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u6765\u8c08\u8c08\u6b64\u7b97\u6cd5\u7684\u601d\u8def\u3002\u9488\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\uff0ckmp\u7b97\u6cd5\u5df2\u7ecf\u9884\u5904\u7406\u51fa\u4e86\u4e00\u4e2a\u5bf9\u5e94kmp\u6570\u7ec4\u7684\u5355\u5143\uff0c\u6620\u5c04\u7740\u5982\u679c\u6b64\u4f4d\u5931\u914d\uff0c\u5b83\u53ef\u80fd\u7684\u6700\u9760\u540e\u7684\u4e00\u4e2a\u91cd\u65b0\u5f00\u5934\u662f\u54ea\u4e00\u4e2a\u3002\u8ba9\u6211\u4eec\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5047\u5982\u8ba9aaab\u4e0eaab\u5339\u914d\u3002\u4e00\u5f00\u59cb\uff0caab\u7684aa\u4e0eaaab\u7684\u5f00\u59cb\u7684aa\u6210\u529f\u5339\u914d\uff0c\u4f46\u5230\u4e86\u7b2c\u4e09\u4f4d\u5931\u914d\u4e86\u3002\u6b64\u65f6\uff0c\u6734\u7d20\u7b97\u6cd5\u4f1a\u8df3\u51fa\uff0c\u627e\u5230\u4e0b\u4e00\u4e2a\u5f00\u5934\u8fdb\u884c\u6bd4\u5bf9\u3002\u7136\u800ckmp\u7b97\u6cd5\u7528kmp\u6570\u7ec4\u5f97\u77e5\uff0c\u8fd9\u4f4d\u5931\u914d\u540e\u5e94\u8be5\u53ef\u80fd\u5374\u53ef\u4ee5\u4e0e\u7b2c\u4e8c\u4f4d\u5339\u914d\u6210\u529f\uff0c\u800c\u53c8\u6210\u529f\uff0c\u4e8e\u662f\u53c8\u7ee7\u7eed\u5f80\u540e\u5339\u914d\uff0c\u7136\u540e\u5c31\u5339\u914d\u6210\u529f\u4e86\uff0c\u53ea\u6bd4\u8f83\u4e865\u6b21\uff0c\u6bd4O\uff08n^2\uff09\u597d\u4e86\u4e0d\u5c11\u3002\n\n\u800ckmp\u51fd\u6570\u53c8\u662f\u600e\u4e48\u7b97\u51fa\u6765\u7684\u5462\uff1f\u5176\u5b9e\uff0c\u53ea\u8981\u81ea\u5df1\u4e0e\u81ea\u5df1\u5339\u914d\u5373\u53ef\u3002\n\nkmp[i]\u7684\u57fa\u672c\u5b9a\u4e49\u662f\uff1a\u5728\u7b2c1-\u7b2ci-1\u4f4d\u4e2d\u524d\u7f00\u4e0e\u540e\u7f00\u76f8\u540c\u7684\u90e8\u5206\u6700\u957f\u662f\u591a\u957f\u3002\u8fd9\u6837\uff0c\u5373\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u82e5\u7b2ci\u4f4d\u5931\u914d\u4e86\uff0c\u5219\u81f3\u5c11\u8981\u5f80\u524d\u8df3\u591a\u5c11\u6b65\uff0c\u624d\u53ef\u80fd\u91cd\u65b0\u5339\u914d\u5f97\u4e0a\u3002\u8fd9\u6837\u4fbf\u53ef\u4ee5\u89e3\u91ca\u524d\u9762\u7684\u4f8b\u5b50\u4e86\u3002\n\n\u800c\u5177\u4f53\u5b9e\u73b0\u653e\u5728\u4ee3\u7801\u91cc\uff0c\u5927\u5bb6\u82e5\u662f\u521a\u63a5\u89e6kmp\uff0c\u53ef\u4ee5\u770b\u4e00\u770b\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<string>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nchar a1[2000000],a2[2000000];\nint kmp[2000000];\nint main()\n{\n    scanf(\"%s%s\",a1,a2);\n    kmp[0]=kmp[1]=0;//\u524d\u4e00\u4f4d\uff0c\u4e24\u4f4d\u5931\u914d\u4e86\uff0c\u90fd\u53ea\u53ef\u80fd\u5c06\u7b2c\u4e00\u4f4d\u4f5c\u4e3a\u65b0\u7684\u5f00\u5934\n    int len1=strlen(a1),len2=strlen(a2);\n    int k;\n    k=0;\n    for(int i=1;i<len2;i++)//\u81ea\u5df1\u5339\u914d\u81ea\u5df1\n    {\n        while(k&&a2[i]!=a2[k])k=kmp[k];//\u627e\u5230\u6700\u957f\u7684\u524d\u540e\u7f00\u91cd\u53e0\u957f\u5ea6\n        kmp[i+1]=a2[i]==a2[k]?++k:0;//\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u5373\u65e0\u524d\u7f00\u80fd\u4e0e\u540e\u7f00\u91cd\u53e0\uff0c\u76f4\u63a5\u8d4b\u503c\u4f4d0\uff08\u6ce8\u610f\u662f\u7ed9\u4e0b\u4e00\u4f4d\uff0c\u56e0\u4e3a\u5339\u914d\u7684\u662f\u4e0b\u4e00\u4f4d\u9002\u5931\u914d\u7684\u60c5\u51b5\uff09\n    }\n    k=0;\n    for(int i=0;i<len1;i++)\n    {\n        while(k&&a1[i]!=a2[k])k=kmp[k];//\u5982\u679c\u4e0d\u5339\u914d\uff0c\u5219\u5c06\u5229\u7528kmp\u6570\u7ec4\u5f80\u56de\u8df3\n        k+=a1[i]==a2[k]?1:0;//\u5982\u679c\u76f8\u7b49\u4e86\uff0c\u5219\u5339\u914d\u4e0b\u4e00\u4f4d\n        if(k==len2)printf(\"%d\\n\",i-len2+2);//\u5982\u679c\u5df2\u7ecf\u5168\u90e8\u5339\u914d\u5b8c\u6bd5\uff0c\u5219\u8f93\u51fa\u521d\u59cb\u4f4d\u7f6e\n    }\n    for(int i=1;i<=len2;i++)printf(\"%d \",kmp[i]);//\u8f93\u51faf\u6570\u7ec4\n    return 0;\n}\n```",
        "postTime": 1506777894,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "fft\u7ec8\u4e8e\u8fc7\u4e86\u3002\u3002\u3002\n\n\u6211\u4eec\u8bbe\u4e24\u4e2a\u5b57\u7b26x\u548cy\u5339\u914d\u662f$s(x,y)=(x-y)^2=x^2+y^2-2xy$\uff0c\u5982\u679c$s(x,y)=0$\u90a3\u4e48$x$\u548c$y$\u5339\u914d\n\n\u8bbe\u4e24\u4e2a\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u90a3\u4e48\u4ed6\u4eec\u5bf9\u5e94\u4f4d\u4e0a\u5b57\u7b26s\u51fd\u6570\u76f8\u52a0\u7684\u548c\u4e3a0\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6587\u672c\u4e32\u7684\u6bcf\u4e2a\u7ed3\u675f\u4f4d\u7f6e\u6c42\u4e00\u4e0b\u5b57\u7b26\u4e32\u5339\u914d\u51fd\u6570\n\n\u524d\u4e24\u9879\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u548c\u5904\u7406\u51fa\uff0c\u7b2c\u4e09\u9879\u6211\u4eec\u53ef\u4ee5\u628a\u6a21\u5f0f\u4e32\u7ffb\u8f6c\u4e00\u4e0b\uff0c\u7136\u540e\u53d1\u73b0\u662f\u4e00\u4e2a\u5377\u79ef\u5f62\u5f0f\uff0c\u4e8e\u662f\u4e0aFFT\n\n\u7136\u540e\u4e0b\u9762\u662f\u4e71\u4e03\u516b\u7cdf\u7684\u4ee3\u7801\n\n\u8fd9\u9898\u5751\u4eba\u8fd8\u8981\u8f93\u51faborder= =\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nconst int p = 998244353;\n\nint n, m;\nchar stra[4000010], strb[4000010];\nint a[4000010], b[4000010];\nint a2[4000010], b2[4000010];\nint r[4000010];\nint fuck[4000010];\n\nint qpow(int x, int y)\n{\n\tint res = 1;\n\twhile (y > 0)\n\t{\n\t\tif (y & 1)\n\t\t\tres = res * (long long)x % p;\n\t\tx = x * (long long)x % p;\n\t\ty >>= 1;\n\t}\n\treturn res;\n}\n\nvoid ntt(int *A, int len, int flag)\n{\n\tfor (int i = 0; i < len; i++)\n\t\tif (r[i] < i)\n\t\t\tswap(A[i], A[r[i]]);\n\tfor (int i = 1; i < len; i <<= 1)\n\t{\n\t\tint g1 = qpow(3, (p - 1) / (i * 2));\n\t\tfor (int j = 0; j < len; j += i << 1)\n\t\t{\n\t\t\tfor (int g = 1, k = 0; k < i; k++, g = g * (long long)g1 % p)\n\t\t\t{\n\t\t\t\tint t = g * (long long)A[j + k + i] % p;\n\t\t\t\tA[j + k + i] = ((A[j + k] - t) % p + p) % p;\n\t\t\t\tA[j + k] = (A[j + k] + t) % p;\n\t\t\t}\n\t\t}\n\t}\n\tif (flag == -1)\n\t{\n\t\treverse(A + 1, A + len);\n\t\tint inv = qpow(len, p - 2);\n\t\tfor (int i = 0; i < len; i++)\n\t\t\tA[i] = A[i] * (long long)inv % p;\n\t}\n}\n\nchar ch[1000010];\nint lrt[1000010];\n\nvoid querynext()\n{\n\tint k = 0;\n\tfor (int i = 2; i <= n; i++)\n\t{\n\t\twhile (k != 0 && ch[i] != ch[k + 1])\n\t\t\tk = lrt[k];\n\t\tif (ch[i] == ch[k + 1])\n\t\t\tk++;\n\t\tlrt[i] = k;\n\t}\n\tfor (int i = 1; i <= n; i++) printf(\"%d%c\", lrt[i], i == m ? '\\n' : ' ');\n}\n\nint main()\n{\n\tscanf(\"%s%s\", strb, stra);\n\tn = strlen(stra), m = strlen(strb);\n\treverse(stra, stra + n);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\ta[i] = stra[i];\n\t\ta2[i] = a[i] * a[i];\n\t\tif (i > 0) a2[i] = (a2[i] + a2[i - 1]) % p;\n\t}\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tb[i] = strb[i];\n\t\tb2[i] = b[i] * b[i];\n\t\tif (i > 0) b2[i] = (b2[i] + b2[i - 1]) % p;\n\t}\n\tint len = 1;\n\twhile (len <= n + m) len *= 2;\n\tfor (int i = 0; i < len; i++)\n\t\tr[i] = (r[i >> 1] >> 1) | ((i & 1) * (len >> 1));\n\tntt(a, len, 1);\n\tntt(b, len, 1);\n\tfor (int i = 0; i < len; i++)\n\t\tfuck[i] = a[i] * (long long)b[i] % p;\n\tntt(fuck, len, -1);\n\tfor (int i = n - 1; i < m; i++)\n\t{\n\t\tif (((a2[n - 1] + b2[i] - (i - n < 0 ? 0 : b2[i - n])) % p + p) % p == 2 * fuck[i] % p)\n\t\t\tprintf(\"%d\\n\", i - n + 2);\n\t}\n\tfor (int i = 0; i < n; i++)\n\t\tch[i + 1] = stra[n - i - 1];\n\tquerynext();\n\treturn 0;\n}\n```",
        "postTime": 1547513401,
        "uid": 13091,
        "name": "ghj1222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,k,len1,len2;\nint next1[1000001];\nchar s1[1000001];\nchar s2[1000001];\ninline void get_next() //\u6c42\u51fanext\u6570\u7ec4 \n{ //next\u6570\u7ec4\u662f\u4ece S[0\u5230i-1]\u524d\u5b50\u4e32 \u7684\u524d\u7f00\u540e\u7f00\u6700\u5927\u503c\n    int t1=0,t2;\n    next1[0]=t2=-1;\n    while(t1<len2) \n        if(t2==-1 || s2[t1]==s2[t2]) //\u7c7b\u4f3c\u4e8eKMP\u7684\u5339\u914d \n            next1[++t1]=++t2;\n        else t2=next1[t2];//\u5931\u914d \n} \ninline void KMP() //KMP \n{ \n    int t1=0,t2=0;//\u4ece0\u4f4d\u5f00\u59cb\u5339\u914d \n    while(t1<len1) //\u4e34\u754c\u503c \n    { \n        if(t2==-1 || s1[t1]==s2[t2]) //\u5339\u914d\u6210\u529f\uff0c\u7ee7\u7eed \n            t1++,t2++;\n        else t2=next1[t2]; //\u5931\u914d \n        if(t2==len2) printf(\"%d\\n\",t1-len2+1),t2=next1[t2];//t2==lenn2\u65f6\uff0c\u5339\u914d\u6210\u529f\uff1bt1-len2+1\u5373\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u7684\u4f4d\u7f6e \n    } //\u5339\u914d\u6210\u529f\u540e\uff0ct2\u7f6e\u4e3anext[t2] \n} \nint main(){ \n    scanf(\"%s\",s1);\n    scanf(\"%s\",s2);\n    len1=strlen(s1);\n    len2=strlen(s2);\n    get_next();\n    KMP();\n    for(int i=1;i<=len2;++i) \n        printf(\"%d \",next1[i]);//\u8f93\u51fanext\u6570\u7ec4 \n    return 0;\n}\n```",
        "postTime": 1509237109,
        "uid": 59636,
        "name": "\u66ae\u5929\u95fb\u89d2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "KMP\u7b97\u6cd5\u7684next\u6570\u7ec4\u63a8\u5bfc\n----------\n\n\n----------\n\n\n\u5f3a\u70c8\u5efa\u8bae\u7684\u89c6\u9891\u6559\u7a0b\uff08\u672c\u6587\u7684\u53c2\u8003\u6750\u6599\u4e4b\u4e00\uff09\uff1a[KMP\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5][1]\n\n\n----------\n\u8fd9\u51e0\u5929\u91cd\u65b0\u7406\u4e86\u4e00\u904d\u4ee4\u9f9f\u5934\u5927\u7684KMP\u7b97\u6cd5\u3002\n![\u771f\u4ee4\u9f9f\u5934\u5927][2]\n\u8fd9\u91cc\u60f3\u7740\u91cd\u7406\u4e00\u4e0b\u5176\u4e2d\u6700\u4e3a\u5173\u952e\u7684**next\u6570\u7ec4\u7684\u63a8\u5bfc**\u3002\n\u5339\u914d\u7684\u5176\u4ed6\u8fc7\u7a0b\u4e0d\u518d\u8d58\u8ff0\uff0c\u56e0\u4e3a\u7f51\u4e0a\u5404\u7c7b\u6559\u7a0b\u548c\u9898\u89e3\u90fd\u8bb2\u89e3\u5f97\u6bd4\u6211\u8be6\u7ec6\u3002\n\n\uff08\u672c\u6587\u5b57\u7b26\u4e32\u7edf\u4e00\u4ece0\u5f00\u59cb\u6807\u53f7\uff09\n\n----------\n\n\n\u4ee3\u7801\u9884\u89c8\n----\n\u9898\u76ee\u6765\u6e90\uff1a[P3375 \u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d][3]\n```\n#include <cstdio>\n#include <cstring>\n\nchar p[1000005], t[1000005];\nint len1, len2;\nint next[1000005], next2[1000005];\n\nvoid do_next()\n{\n    next[0] = 0;\n    int i = 1;\n    int len = 0;\n\n    while (i < len2)\n    {\n        if (t[i] == t[len])\n            next[i++] = ++len;\n        else\n        {\n            if (len > 0)\n                len = next[len - 1];\n            else\n                next[i++] = len;\n        }\n    }\n}\n\nvoid kmp()\n{\n    int i = 0, j = 0;\n    next2[0] = -1;\n    \n    for (int i = 1; i < len2; i++)\n        next2[i] = next[i - 1];\n    \n    while (i < len1)\n    {\n        if (j == len2 - 1 && p[i] == t[j])\n        {\n            printf(\"%d\\n\", i - j + 1);\n            j = next2[j];\n            if (j == -1)\n                j++;\n        }\n        if (p[i] == t[j])\n        {\n            j++;\n            i++;\n        }\n        else\n        {\n            j = next2[j];\n            if (j == -1)\n            {\n                i++;\n                j++;\n            }\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%s%s\", p, t);\n    len1 = strlen(p);\n    len2 = strlen(t);\n\n    do_next();\n\n    kmp();\n\n    for (int i = 0; i < len2; i++)\n        printf(\"%d \", next[i]);\n\n    return 0;\n}\n```\n\n\n----------\n\n\n\u63a8\u5bfc\u8be6\u89e3\n----\n\n\u5047\u8bbe\u6211\u4eec\u7684\u5339\u914d\u5b57\u4e32\u4e3a\uff1a\nP:ABABABCABAB\nT:ABABC\n\n\u524d\u540e\u7f00\u63a8\u5bfc\n-----\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u8bf7\u51fa\u4e00\u4e2a\u7092\u9e21\u6709\u540d\u7684\u8868\u683c\uff01\n\n|\u5b50\u4e32\u957f\u5ea6|\u5b50\u4e32           |\u524d\u540e\u7f00\u957f\u5ea6\uff08\u5c0f\u4e8e\u5b50\u4e32\u957f\u5ea6\uff09|\n|:----:|:--:           |:-----------:|\n|1|A|0|\n|2|AB|0|\n|3|**A** B **A**|1|\n|4|**AB** **AB**|2|\n|5|ABABC|0|\n\n\u6211\u4eec\u4ece\u4e0a\u5230\u4e0b\u628a\u524d\u540e\u7f00\u957f\u5ea6\u62ff\u4e0b\u6765\uff0c\u5c31\u662ftext\u6570\u7ec4\u5566\uff01\n\n~~\u662f\u4e0d\u662f\u975e\u5e38\u7b80\u5355\uff01\uff01~~\n\n\u7b97\u6cd5\u8be6\u89e3\u53ca\u4ee3\u7801\u5b9e\u73b0\n---------\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53d8\u91cf**len**\u6765\u8868\u793a**\u6b64\u65f6\u7684\u524d\u540e\u7f00\u957f\u5ea6**\uff0c\u4ee5\u53ca\u53d8\u91cf**i**\u6765\u5bf9t\u5b57\u4e32\u8fdb\u884c\u904d\u5386\u3002\n\u56e0\u4e3a**\u524d\u540e\u7f00\u957f\u5ea6\u5c0f\u4e8e\u5b50\u4e32\u957f\u5ea6**\uff0c\u6240\u4ee5\u6211\u4eec\u7684i\u76f4\u63a5\u4ece1\u5f00\u59cb\uff0c\u4e5f\u5c31\u662f\uff1a\n\n    i = 1;\n    len = 0;\n\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u601d\u8003\u4e00\u4e2a\u7b80\u5355\u7684\u95ee\u9898\u3002\n\n\u5f53\u6211\u4eec\u5b50\u4e32\u957f\u5ea6\u4e3a3\u65f6\uff0c\u5b50\u4e32\u4e3a**A** B **A**\uff0c \u6b64\u65f6len = 1\u3002\u8fd9\u4e00\u6b65\u7ed3\u675f\u540e\uff0clen++\uff0clen=2\u3002\n\n\u90a3\u4e48\uff0c**\u5f53\u6211\u4eec\u5c06\u5b50\u4e32\u957f\u5ea6\u589e\u52a0\u81f34\u65f6\uff0c\u6211\u4eec\u5982\u4f55\u5224\u65ad\u80fd\u4e0d\u80fd\u7ec4\u6210\u66f4\u957f\u7684\uff08len\u4e3a2\u7684\uff09\u524d\u540e\u7f00\u5462**\uff1f\n\u53ea\u8981\u5224\u65ad**\u589e\u52a0\u7684\u90a3\u4e00\u4f4d\uff08\u5373\u5f53\u524d\u5b50\u4e32\u6700\u540e\u4e00\u4f4d\uff0c\u7531i\u6307\u5411\uff09\uff0c\u4e0elen\u6307\u5411\u7684\u90a3\u4e00\u4f4d\u662f\u5426\u76f8\u540c**\u5373\u53ef\u3002\u4e5f\u5c31\u662f\u53ea\u9700\u8981\u5224\u65ad ABA **B** \u8fd9\u4e00\u4f4d\u4e0e A **B** AB \u8fd9\u4e00\u4f4d\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002\u8fd9\u91cc\u5f88\u660e\u663e\u662f\u76f8\u7b49\u7684\uff0c\u6240\u4ee5\u524d\u540e\u7f00\u957f\u5ea6\u4ece1\u589e\u52a0\u81f32\u3002\n\n\u8fd9\u4e00\u90e8\u5206\u5bf9\u5e94\u7684\u4ee3\u7801\u4e3a\uff1a\n```\nif (t[i] == t[len])\n    next[i++] = ++len;\n```\n\uff08\u5bf9\u5e94\u4e0a\u65b916-17\u884c\uff09\n\n**\u90a3\u5982\u679c\u4e0d\u76f8\u540c\u5462\uff1f**\u6bd4\u5982\u5f53\u5b50\u4e32\u957f\u5ea6\u4e3a5\uff08ABABC\uff09\u7684\u65f6\u5019\uff1f\n\u6b64\u65f6\u7684\u524d\u540e\u7f00\u957f\u5ea6\u4e3a0\uff0c\u56e0\u4e3a\u7a81\u7136\u591a\u51fa\u4e86\u4e00\u4e2aC\uff0c\u4e0d\u7ba1\u600e\u4e48\u5f04\u90fd\u4e0d\u53ef\u80fd\u5339\u914d\u6210\u529f\u561b\u3002\n\u6240\u4ee5\u54b1\u4e00\u987a\u624b\u5c31\u5199\u4e0a\u4e86\uff1a\n\n    len = 0;\n\n\u6211\u4eec\u770b\u770b\u6700\u4e0a\u9762\u662f\u600e\u4e48\u5199\u7684\uff1a\n\n    if (len > 0)\n        len = next[len - 1];\n    else\n        next[i++] = len;\n\n\uff08\u5bf9\u5e94\u4e0a\u65b920-23\u884c\uff09\n\nemmmmmm\u2026\u2026\n![emmmmm\u2026\u2026][4]\n\u76f8\u5dee\u597d\u50cf\u6709\u70b9\u5927\uff1f\n\u4fd7\u8bdd\u8bf4\uff1a\u4e8b\u51fa\u53cd\u5e38\u5fc5\u6709\u5996\u3002\u8ba9\u6211\u4eec\u6765\u4ed4\u7ec6\u7814\u7a76\u4e0b\u3002\n\n\u6253\u4e2a\u6bd4\u65b9\uff0c\u6211\u4eec\u6b64\u65f6\u7684\u5b50\u4e32\u548cnext\u6570\u7ec4\u5206\u522b\u5982\u4e0b\uff1a\n\n    A B A B C A B A A\n    0 0 1 2 0 1 2 3 ?\n\u6b64\u65f6len=3\uff0c\u800c**len\u6307\u5411\u7684\u90a3\u4e00\u4f4d\u662fB**\uff0c\u5b50\u4e32**\u672b\u4f4d\u662fA**\uff0c\u4e24\u8005\u4e0d\u540c\uff0c\u6240\u4ee5\u8fd9\u91cc\u5e94\u8be5\u51990\u2014\u2014\u8bf6\u8bf6\u8bf6\u6162\u7740\uff01\u597d\u50cf\u6709\u54ea\u91cc\u4e0d\u5bf9\uff01\uff01\n\u54e6\uff01\u6258\u9a6c\u65af\u00b7\u9648\u72ec\u79c0\u5148\u751f\uff0c\u6211\u7684\u4e0a\u5e1d\uff01\u8ba9\u6211\u4eec\u4ed4\u7ec6\u77a7\u77a7\uff1a\u8fd9\u91cc\u7684\u524d\u540e\u7f00**\u660e\u660e\u90fd\u662fA\u554a**\uff01\uff01\uff01\u524d\u540e\u7f00\u957f\u5ea6\u5e94\u8be5**\u662f1**\u800c**\u4e0d\u662f0**\u554a\uff01\uff01\uff01\uff01\n\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4fee\u6b63\uff0c\u6b64\u65f6\u7684\u524d\u540e\u7f00\u957f\u5ea6\uff0c\u5e94\u4e3a\n\n    len = next[len - 1]\n\u8bb8\u591a\u6559\u7a0b\u5c06\u8fd9\u4e00\u6b65\u79f0\u4e4b\u4e3a**\u201c\u56de\u6eaf\u201d**\u3002\n\n\u8fd9\u5c31\u5b8c\u4e86\uff1f\n**NAIVE\uff01**\n![\u8fd8\u6ca1\u5b8c\u5462][5]\n\n\u4e0d\u8981\u5fd8\u4e86\uff0clen - 1\u53ef\u662f\u4e0b\u6807\uff0c\u5c0f\u5fc3\u4e0b\u6807\u8d8a\u754c\uff01\n\u4e8e\u662f\u6211\u4eec\u9700\u8981\u52a0\u4e00\u4e2a\u5224\u65ad\u4ee5\u907f\u514d\u8be5\u60c5\u51b5\u7684\u53d1\u751f\u3002\n\n    if (len > 0)\n        len = next[len - 1];\n        \n\u90a3\u4e07\u4e00\u8fd9\u4e2a\u65f6\u5019len=0\u600e\u4e48\u529e\u5462\uff1f\n\u90a3\u4e0d\u5c31\u8bf4\u660e\u8fd9\u4e2a\u65f6\u5019\u7684\u524d\u540e\u7f00\u957f\u5ea6\u4e3a0\u561b\uff01\u8fd9\u4e00\u4f4d\u7684next\u5c31\u7b49\u4e8e0\u554a\uff01\n\u6700\u540e\u522b\u5fd8\u4e86i++\uff01\n\n    next[i++] = len;\n\n\u81f3\u6b64\uff0c\u6574\u6bb5next\u63a8\u5bfc\u4ee3\u7801\u5206\u6790\u5b8c\u6bd5\uff0c\u518d\u56de\u8fc7\u5934\u770b\u770b\u6574\u6bb5\u4ee3\u7801\uff1a\n\n```\nvoid do_next()\n{\n    next[0] = 0;\n    int i = 1;\n    int len = 0;\n\n    while (i < len2)\n    {\n        if (t[i] == t[len])\n            next[i++] = ++len;\n        else\n        {\n            if (len > 0)\n                len = next[len - 1];\n            else\n                next[i++] = len;\n        }\n    }\n}\n```\n\u662f\u4e0d\u662f\u975e\u5e38\u6e05\u6670\u4e86\u5462\uff1f\uff08\u5e76\u4e0d\u554a\uff01\uff01\uff01\uff01\uff09\n\n\u5168\u6587\u5b8c\n---\n\n\u6700\u540e\u5b89\u5229\u4e00\u6ce2\u672c\u849f\u84bb\u7684\u535a\u5ba2\uff1a[\u6708\u5f71\u7684\u5c0f\u7ad9-\u8bb0\u5f55\u4e9b\u6709\u610f\u601d\u7684\u4e8b\u5427\uff01OvO](http://yueyingblog.space/)\n\n\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u767e\u5ea6\u5c31\u662f\u4e0d\u6536\u5f55\uff08\u867d\u7136\u4f60\u4e5f\u6ca1\u5199\u51e0\u7bc7\u6587\u7ae0\u5427\uff01\uff01\uff09\u2026\u2026\u6211\u4e5f\u597d\u65e0\u5948\u554a\uff01\u6709\u6ca1\u6709\u4eba\u77e5\u9053\u4e3a\u4ec0\u4e48\u554a\uff01\uff01\n\n  [1]: http://www.bilibili.com/video/av16828557\n  [2]: http://yueyingblog.space/wp-content/uploads/2018/02/600D32DDC6F9C38F3ACF0EA9CF1328B7.jpg\n  [3]: https://www.luogu.org/problemnew/show/P3375\n  [4]: http://yueyingblog.space/wp-content/uploads/2018/02/451DE97BBB52E2B572F7E5115D4EC78E-e1518710306782.jpg\n  [5]: http://yueyingblog.space/wp-content/uploads/2018/02/18030E3D133C6DF4FE95574BB90E9B41.jpg",
        "postTime": 1518713288,
        "uid": 32565,
        "name": "\u6708\u5f71\u56f0",
        "ccfLevel": 0,
        "title": "KMP\u7b97\u6cd5\u7684next\u6570\u7ec4\u63a8\u5bfc"
    },
    {
        "content": "### \u5947\u6280\u6deb\u5de7\n\n~~\u5728\u4e00\u8282\u6570\u5b66\u8bfe\u4e0a~~\u6211\u7a81\u53d1\u5947\u60f3\u65e2\u7136\u54c8\u5e0c\u80fd\u7528\u6765O(1)\u641e\u5339\u914d\u8fd9\u9898\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u7528\u54c8\u5e0c\u5462\uff1f\u4e8e\u662f\u4fbf\u62ff\u54c8\u5e0c\u641e\u5b9a\u4e86\u5339\u914d\u7684\u95ee\u9898\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u4e0d\u662f\u91cd\u70b9\uff08\u697c\u4e0bdalao\u597d\u50cf\u4e5f\u6709\u8bb2\u7684\uff09\u3002\n\n\u7136\u540e\u95ee\u9898\u5c31\u6765\u4e86\uff1anext\u6570\u7ec4\u548b\u6c42\uff1f\u5f00\u59cb\u7684\u65f6\u5019\u6211\u770b\u8d77\u6765\u597d\u50cf\u662f\u8fd9\u4e2anext\u7684\u6c42\u89e3\u6ee1\u8db3\u5355\u8c03\u6027\u7684\u6837\u5b50\uff0c\u7136\u540e\u6211\u5c31\u8003\u8651\u4e8c\u5206\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a\n\n```cpp\nabaababa\n```\n\n\u5728\u5bf9\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u4e8c\u5206\u6c42next\u65f6\uff0c\u6211\u4ee5\u4e3a\u8fd9\u4e2a\u6ee1\u8db3\u7684\u662f\u201c\u5339\u914d\u7684\u8d8a\u957f\u8d8a\u4e0d\u5bb9\u6613\u201d\u7684\u5355\u8c03\u6027\uff0c\u4f46\u662f\u5047\u5982\u6211\u4eec\u5f53\u524d\u7684\u7b54\u6848\u662f2\uff0c\u4e5f\u5c31\u662f\u524d\u7f00\u201cab\u201d\uff0c\u663e\u7136\u8fd9\u4e2a\u662f\u65e0\u6cd5\u81ea\u6211\u5339\u914d\u7684\uff0c\u4f46\u662f\u628a\u8fd9\u4e2a\u957f\u5ea6\u62c9\u957f\u4e00\u70b9\u53eb\u4ed6\u53d8\u62103\u5c31\u80fd\u5339\u914d\u524d\u7f00\u201caba\u201d\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\u3002\n\n\u7136\u540e\u6211\u5c31\u60f3\u4e86\uff0c\u65e2\u7136\u4ece\u7ed3\u5c3e\u4e8c\u5206\u4e0d\u884c\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u4ece\u5f00\u5934\u4e8c\u5206\u5462\uff1f\u4ece\u5f00\u5934\u4e8c\u5206\u663e\u7136\u662f\u6ee1\u8db3\u5355\u8c03\u6027\u7684\uff08\u56e0\u4e3a\u662f\u5f00\u5934\u548c\u5f00\u5934\u8fdb\u884c\u5339\u914d\uff09\uff0c\u4f46\u662f\u8fd9\u4e2a\u8be5\u5982\u4f55\u8f6c\u5316\u6210next\u5462\uff1f\u6211\u4eec\u60f3\uff0c\u5982\u679c\u4e00\u4e2a\u4f4d\u7f6eA\u7684next\u503c\u4e0d\u4e3a0\uff0c\u90a3\u4e48\u4ed6\u7684\u524d\u9762\u80af\u5b9a\u6709\u4e00\u4e2a\u4f4d\u7f6eB\uff0c\u4ece\u8fd9\u4e2a\u4f4d\u7f6eB\u5f00\u59cb\u7684\u4e00\u6bb5\u80fd\u5ef6\u4f38\u5230A\u7684\u5b50\u4e32\u80af\u5b9a\u80fd\u548c\u524d\u7f00\u5339\u914d\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u54c8\u5e0c\u4e8c\u5206\u51fa\u6765\u6bcf\u4e2a\u4f4d\u7f6eA\u5f00\u59cb\u6700\u957f\u7684\u7684\u80fd\u548c\u524d\u7f00\u5339\u914d\u7684\u5b50\u4e32\uff0c\u8fd9\u4e2a\u5b50\u4e32\u91cc\u7684\u4f4d\u7f6e\u7684next\u90fd\u6709\u53ef\u80fd\u4f1a\u662f\u4eceA\u5ef6\u4f38\u51fa\u6765\u7684\uff0c\u6211\u4eec\u4e0d\u59a8\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c0f\u7684\u5339\u914d\u4f4d\u7f6e\uff08\u5c31\u662f\u50cf\u4e0a\u9762\u8bf4\u7684\u90a3\u4e2aA\u80fd\u5ef6\u4f38\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u6765\u7684\u800c\u4e14\u80fd\u548c\u524d\u7f00\u5339\u914d\u7684\uff09\uff0c\u7136\u540e\u4e00\u51cf\u5c31\u662fnext\u4e86\u3002\u4e3a\u4ec0\u4e48\u8981\u4e8c\u5206\u6700\u957f\u7684\u5462\uff1f\u5c31\u662f\u4e3a\u4e86\u80fd\u5c3d\u91cf\u4f7f\u8fd9\u4e2a\u4f4d\u7f6e\u80fd\u5145\u5f53\u66f4\u591a\u7684\u4f4d\u7f6e\u7684\u6700\u5c0f\u5339\u914d\u4f4d\u7f6e\u3002\n\n\u8fd9\u4e2a\u6700\u5c0f\u5339\u914d\u4f4d\u7f6e\u5982\u4f55\u7ef4\u62a4\uff1f\u4e0a\u9762\u8bf4\u4e86\uff0c\u4e8c\u5206\u51fa\u6700\u957f\u7684\u5339\u914d\u5b50\u4e32\u540e\uff0c\u5b50\u4e32\u91cc\u7684\u4f4d\u7f6e\u7684\u6700\u5c0f\u5339\u914d\u4f4d\u7f6e\u90fd\u53ef\u80fd\u662f\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u4e8e\u662f\u8fd9\u5c31\u53d8\u6210\u4e86\u533a\u95f4\u95ee\u9898\u800c\u4e14\u8fd8\u662f\u7ef4\u62a4\u6700\u5c0f\u503c\u7684\u2014\u2014\n\n### \u7ebf\u6bb5\u6811\uff1f\uff01\n\n\u5bf9\u6ca1\u9519\u5c31\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u5bf9\u533a\u95f4\u5185\u5c1d\u8bd5\u5f3a\u884c\u8d4b\u503c\uff08\u5f80\u5c0f\u91cc\u8d4b\uff09\uff0c\u5e76\u4e14\u53ea\u7ef4\u62a4\u8d4b\u503c\u7684\u5ef6\u8fdf\u6807\u8bb0\uff0c\u6700\u540eO(n)\u628a\u6574\u68f5\u6811\u7684\u5ef6\u8fdf\u6807\u8bb0\u90fd\u5f80\u4e0b\u63a8\u5230\u53f6\u5b50\u4e0a\u5c31\u53ef\u6c42\u51fanext\u6570\u7ec4\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\nO(nlogn)\u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define int long long\nusing namespace std;\nint p=1000000007;\nchar s1[1000002],s2[1000002];\nint nxt[1000002],hash1[1000002],hash2[1000002];\nint ref[1000];int e70[1000002];\ntypedef struct _n{//\u7ebf\u6bb5\u6811\n\tsigned left,right,data;\n}node;node memchi[3000001];int gn=1,num;\nint build(int l,int r){\n\tint tree=gn;gn++;memchi[tree].data=0x7fffffff;\n\tif(l!=r){\n\t\tint mid=(l+r)>>1;memchi[tree].left=build(l,mid);memchi[tree].right=build(mid+1,r);\n\t}return(tree);\n}\ninline void down(int tree){//\u4e0b\u653e\n\tif(memchi[tree].data==0x7fffffff)return;\n\tsigned ls=memchi[tree].left,rs=memchi[tree].right,cjr=memchi[tree].data;\n\tmemchi[ls].data=min(memchi[ls].data,cjr);memchi[rs].data=min(memchi[rs].data,cjr);\n}\nvoid change(int rl,int rr,int l,int r,int tree){\n\n\t//\u533a\u95f4\u5f3a\u884c\u8d4b\u503c\n\tif(memchi[tree].data<=num)return;\n\tif(rl==l&&rr==r){\n\t\tmemchi[tree].data=num;return;\n\t}down(tree);int mid=(l+r)>>1;\n\tif(rr<=mid)change(rl,rr,l,mid,memchi[tree].left);\n\telse{\n\t\tif(rl>mid)change(rl,rr,mid+1,r,memchi[tree].right);\n\t\telse{\n\t\t\tchange(rl,mid,l,mid,memchi[tree].left);\n\t\t\tchange(mid+1,rr,mid+1,r,memchi[tree].right);\n\t\t}\n\t}\n}\u60a8\u522b\u60f3\u590d\u5236\u7c98\u8d34\u4ee3\u7801\u54c8\u54c8\u54c8 \nvoid tui(int l,int r,int tree){//\u4e0b\u653e\u6574\u68f5\u6811\u7684\u5ef6\u8fdf\u6807\u8bb0\u6c42\u51fanext\n\tif(l==r){\n\t\tif(memchi[tree].data==0x7fffffff){\n\t\t\tnxt[l]=0;\n\t\t}else{\n\t\t\tnxt[l]=l-memchi[tree].data+1;\n\t\t}return;\n\t}else{\n\t\tdown(tree);int mid=(l+r)>>1;\n\t\ttui(l,mid,memchi[tree].left);tui(mid+1,r,memchi[tree].right);\n\t}\n}\nsigned main(){\n\tscanf(\"%s\",s1+1);scanf(\"%s\",s2+1);\n\tint l1=strlen(s1+1),l2=strlen(s2+1);\n\te70[0]=1;\n\tint root=build(1,l2);\n\tint gnn=0;\n\tfor(register char i='0';i<='9';i++)ref[i]=gnn,gnn++;\n\tfor(register char i='a';i<='z';i++)ref[i]=gnn,gnn++;\n\tfor(register char i='A';i<='Z';i++)ref[i]=gnn,gnn++;\n\t//\u4e0a\u9762\u7684\u64cd\u4f5c\u662f\u628a\u5b57\u7b26\u79bb\u6563\u5316\u4e00\u4e0b\n    int mx=max(l1,l2);\n\tfor(register int i=1;i<=mx;i++){\n\t\te70[i]=(e70[i-1]*70)%p;\n\t}//\u6211\u7528\u7684\u662f70\u8fdb\u5236\u7684hash\uff0c\u6c42\u51fa70\u7684\u6574\u6b21\u5e42\n\tfor(register int i=1;i<=l1;i++){\n\t\thash1[i]=(hash1[i-1]+e70[i-1]*ref[s1[i]])%p;\n\t}\n\tfor(register int i=1;i<=l2;i++){\n\t\thash2[i]=(hash2[i-1]+e70[i-1]*ref[s2[i]])%p;\n\t}//hash\u4e0d\u89e3\u91ca\n\tfor(register int i=2;i<=l2;i++){\n\t\tint ans=0,l=0,r=l2-i+1;\n\t\twhile(l<=r){//\u4e8c\u5206\n\t\t\tint mid=(l+r)>>1;\n\t\t\tint me=hash2[i+mid-1]-hash2[i-1];me=((me%p)+p)%p;\n\t\t\tint her=hash2[mid]*e70[i-1];her%=p;\n\t\t\tif(me==her){\n\t\t\t\tans=mid;l=mid+1;\n\t\t\t}else r=mid-1;\n\t\t}\n\t\tif(ans!=0){\u6c42\u51fa\u80fd\u5339\u914d\u7684\u5b50\u4e32\uff0c\u76f4\u63a5\u533a\u95f4\u8d4b\u503c\n\t\t\tnum=i;change(i,i+ans-1,1,l2,root);\n\t\t}\n\t}\n\tfor(register int i=l2;i<=l1;i++){//hash\u76f4\u63a5\u5339\u914d\n\t\tint me=hash1[i]-hash1[i-l2];me=((me%p)+p)%p;\n\t\tint she=hash2[l2]*e70[i-l2];she=she%p;\n\t\tif(me==she){\n\t\t\tprintf(\"%lld\\n\",i-l2+1);\n\t\t}\n\t}\n\ttui(1,l2,root);\n\tfor(register int i=1;i<=l2;i++)printf(\"%lld \",nxt[i]);\n\treturn(0);\n}\n```",
        "postTime": 1524645409,
        "uid": 56917,
        "name": "\u989c\u4f1f\u4e1a_C_Asm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "# K  M  P \n#### \u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b\u767e\u5ea6\u767e\u79d1\u7ed9\u51fa\u7684\u5b9a\u4e49\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/5am9bc43.png)\n#### \u5927\u4f53\u6765\u8bb2\uff0cKmp\u662f\u7528\u6765\u5904\u7406\u5b57\u4e32\u5339\u914d\u7684\u95ee\u9898\uff1b\n\n\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\n\n\n\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32s1,s1 ,\u6c42s2\u5728s1\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n#### \u6211\u4eec\u6765\u770b\u4e00\u4e0b\u7ec6\u8282\u5b9e\u73b0\uff1a\n\n\u73b0\u5728\u6709\u4e24\u4e2a\u5b57\u7b26\u6570\u7ec4\uff1a\n\nA[n+1]  \u548c  B[m+1]\uff08A[0]\u548cB[0]\u5747\u4e3a\u7a7a;\n\n\u6211\u4eec\u7528\u4e24\u4e2a\u6307\u9488 i , j \u8868\u793a\n\nA[i-j+1] \u5230A[i] \u4e0e B[1]\u5230  B[j] \u5b8c\u5168\u76f8\u7b49\uff1b\n\n\u6211\u4eec\u4f9d\u6b21\u5411\u540e\u6bd4\u8f83\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7zzhfnvw.png)\n\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u5f53i==j==5\u65f6\uff0c\u4e0b\u4e00\u4f4d\u4e0d\u518d\u76f8\u7b49\uff0c\n\u8981\u91cd\u65b0\u6bd4\u8f83\n\n\u6bd4\u8f83\u6734\u7d20\u7684\u505a\u6cd5\u662f\u76f4\u63a5\u8ba9 j=0\uff0ci=1 \n\n\u5f00\u59cb\u65b0\u4e00\u8f6e\u7684\u6bd4\u8f83,\u7136\u540e\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u63a5\u66b4\u529b\u5339\u914d\n\n\u76f8\u5f53\u4e8e \u679a\u4e3e B \u5728 A \u4e2d\u7684\u8d77\u70b9\n\n\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/i0e9elmj.png)\n\n\n\u4f46\u8fd9\u6837\u590d\u6742\u5ea6\u662fO(nm)\n\n\u7565\u6709\u70b9\u6162\uff0c\n\n\u6211\u4eec\u5728\u4ed4\u7ec6\u60f3\u60f3\uff0c\u600e\u4e48\u4f18\u5316\u5462\uff1f\n\n\n\u5176\u5b9e\u5728\u6211\u4eec\u521a\u624d\u66b4\u529b\u5339\u914d\u7684\u8fc7\u7a0b\u4e2d\u5c31\u53ef\u4ee5\u770b\u51fa\n![](https://cdn.luogu.com.cn/upload/image_hosting/onzcd051.png)\n\n\n\n\n\u6211\u4eec\u5982\u679c\u80fd\u8df3\u8fc7\u4e2d\u95f4\u8fc7\u7a0b\uff0c\u90a3\u4e48\u5c06\u6781\u5927\u7684\u4f18\u5316\u65f6\u95f4\uff1b\n\n\u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdfB\u4e32\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/g3xmuqr8.png)\n\n\n\u4e0d\u96be\u770b\u51faj==5 \u65f6\u5982\u679c\u53ef\u4ee5\u5339\u914d\uff0c\u90a3\u4e48 j==3 \u4e00\u5b9a\u53ef\u4ee5\u5339\u914d\n\n\u6211\u4eec\u4e0d\u59a8\u7528P[m+1]\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u4fe1\u606f\uff08\u600e\u4e48\u6c42\u5728\u540e\u9762\u8bb2\n\u73b0\u5728\u53ea\u8981\u77e5\u9053P\u5b58\u7684\u662f\u4ec0\u4e48\uff09\n\n\u5373P[5]=3;\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5728\u5339\u914d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u5fc5\u4ece\u5934\u5f00\u59cb\uff0c\u53ea\u9700\u4f7f  \n     j=p[j]\n    \u7ee7\u7eed\u5339\u914d\n    \n\u4ee3\u7801\u5982\u4e0b\n    \n```cpp\n    int n=strlen(A+1) , m=strlen(B+1);\n    int i,j;\n    j=0;\n    for( i=0; i < n ;++i){\n    \n        while( j>0 && B[j+1]!=A[i+1])j=p[j];\n        \n        if( B[j+1]==A[i+1] )++j;\n        \n        if( j==m ){printf(\"%d\\n\",i+1-strlen(B+1)+1);j=p[j];}\n    }\n```\n\n\u6211\u4eec\u73b0\u5728\u6765\u8003\u8651 P[ ] \u6570\u7ec4\u600e\u4e48\u6c42\n\n\n\u5176\u5b9eP\u5c31\u662f\u6211\u4eec\u8bf4\u7684\u524d\u7f00\u6570\u7ec4\n\n\u5373\u5bfb\u627e\u4e24\u6bb5\u533a\u95f4\n\n1\u5230p[i] \n\n\u548c \n\n\ni-(p[i]-1) \u5230 i\n\n\u5b8c\u5168\u76f8\u7b49\uff1b\n\n\u7136\u540e\u6211\u4eec\u60ca\u5947\u7684\u53d1\u73b0\uff0c\u8fd9\u548c A\u548cB\u5339\u914d\u5dee\u4e0d\u591a\n\n\u771f\u76f8\u5c31\u662f\u8fd9\u6837 \n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n    int i,j=0;\n    \n    p[1]=0;\n    int n=strlen(A+1),m=strlen(B+1);\n    for(int i=1;i<m;++i){\n\n        while(j>0&&B[j+1]!=B[i+1])j=p[j];\n\n        if(B[i+1]==B[j+1])j++;\n        \n        p[i+1]=j;\n    }\n```\n\n\n\u7406\u89e3\u4e86\u5417\uff1f\n\n\u5982\u679c\u6ca1\u6709\uff0c\n\n### \u8bf7\u60a8\u54c1\uff0c\n\n## \u60a8\u7ec6\u54c1\n\n\n\u6700\u540e\uff0c\u5b8c\u6574\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\nchar A[10000000],B[10000000];//A-origin string B-MOd string\nint p[11000000];\nint main(){\n    scanf(\"%s%s\",A+1,B+1);\n    int i,j=0;\n    //cout<<strlen(A+1);\n    p[1]=0;\n    int n=strlen(A+1),m=strlen(B+1);\n    for(int i=1;i<m;++i){\n        while(j>0&&B[j+1]!=B[i+1])j=p[j];\n        if(B[i+1]==B[j+1])j++;p[i+1]=j;\n    }\n\n\n    j=0;\n    for(i=0;i<n;++i){\n        while(j>0&&B[j+1]!=A[i+1])j=p[j];\n        if(B[j+1]==A[i+1])++j;\n        if(j==m){printf(\"%d\\n\",i+1-strlen(B+1)+1);j=p[j];}\n    }\n    for(int i=1;i<=m;++i)printf(\"%d \",p[i]);\n    return 0;\n}\n```\n\n\n",
        "postTime": 1572146393,
        "uid": 112235,
        "name": "lccc233",
        "ccfLevel": 4,
        "title": "KMP"
    },
    {
        "content": "\n\u8d85\u957f\u8b66\u544a\uff0c\u4e0b\u7bc7\u6587\u7ae0\u539f\u672c\u662f\u6211\u4ee5\u524d\u53d1\u8fc7\u7684[\u535a\u5ba2](https://frostime.github.io/2019/06/18/%E4%B8%B2%E5%8C%B9%E9%85%8D%E4%B9%8BBF%E4%B8%8EKMP/#more)\uff0c\u6211\u987a\u624b\u5c31\u7ed9\u632a\u5230\u8fd9\u4e86\u3002\n\n\u524d\u9762\u4e3b\u8981\u662f KMP \u7684\u89e3\u91ca\uff0c\u9898\u89e3\u5728\u6700\u540e\u9762\u3002\n\n\nPart 1. \u89e3\u91ca KMP \u7b97\u6cd5\n------------\n\n\u5173\u4e8e\u5b57\u7b26\u4e32\u7684\u6a21\u5f0f\u5339\u914d\u95ee\u9898\uff0c\u6709\u8bb8\u591a\u7b97\u6cd5\uff0c\u8fd9\u91cc\u5148\u4ecb\u7ecd\u6700\u7b80\u5355\u8457\u540d\u7684\u4e24\u4e2a\u3002\n\n# 1.  \u66b4\u529b\u6c42\u89e3\n\n\u4e00\u4e2a\u7b80\u5355\u7c97\u66b4\u7684\u65b9\u6cd5\u5c31\u662f\uff0c\u4ece\u4e3b\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u548c\u6a21\u5f0f\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\uff0c\u4e00\u4e2a\u4e00\u4e2a\u5b57\u7b26\u5339\u914d\u3002\u4e00\u65e6\u5931\u914d\uff0c\u5c31**\u4ece\u8be5\u6b21\u5339\u914d\u5f00\u59cb\u65f6\u5339\u914d\u7684\u4e3b\u4e32\u5b57\u7b26\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\u91cd\u65b0\u5339\u914d**\u3002\n\n```cpp\nint BruteForce(const string &src, const string &pattern)\n{\n    int srcPtr = 0, patPtr = 0;\n    while (srcPtr < src.length() && patPtr < pattern.length())\n    {\n        //\u5982\u679c\u5f53\u524d\u5b57\u7b26\u5339\u914d\uff0c\u5c31\u6307\u9488\u540e\u79fb\n        if (src[srcPtr] == pattern[patPtr])\n        {\n            ++srcPtr;\n            ++patPtr;\n        }\n        else\n        {\n            //srcPtr \u56de\u9000\u5230\u4e0a\u4e00\u6b21\u7684\u8d77\u59cb\u4f4d\u7684\u4e0b\u4e00\u4f4d, patternPtr\u91cd\u65b0\u5f52\u96f6\n            srcPtr = srcPtr - patPtr + 1;\n            patPtr = 0;\n        }\n    }\n    //\u5982\u679c\u4e3a true\uff0c\u8bf4\u660e\u5339\u914d\u6210\u529f\uff0c\u5426\u5219\u4e3a\u5931\u8d25\n    //\u5982\u679c\u6210\u529f srcPtr - pattern.length() \u5c31\u662f\u6a21\u5f0f\u5b50\u4e32\u5f00\u59cb\u7684\u4f4d\u7f6e\n    return (patPtr == pattern.length())? srcPtr - patPtr : -1;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1a\n\n\u4ee4\u4e3b\u4e32\u957fn\uff0c\u6a21\u5f0f\u4e32\u957fm\u3002\u5219\uff1a\n- \u6700\u597d\uff1a\u5f00\u5934\u4f4d\u7f6e\u5c31\u5339\u914d\u6210\u529f\u4e86\uff0c\u6240\u4ee5\u4e3a $O(m)$\n- \u6700\u574f\uff1a\u6839\u672c\u5339\u914d\u4e0d\u6210\u529f\uff0c\u7ed3\u679c\u4e3a $O(m\\times n)$\n\n# 2. KMP\u7b97\u6cd5\n\n## 2.1 \u5bf9\u86ee\u529b\u7b97\u6cd5\u7684\u53cd\u601d\n\n\u4ee5\u4e0a\u7684\u86ee\u529b\u7b97\u6cd5\u7684\u4f4e\u6548\u7684\u539f\u56e0\u5728\u4e8e**\u5bf9\u4e3b\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u90fd\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u91cd\u590d\u6027\u6bd4\u8f83**\u3002\u6700\u7cdf\u7cd5\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3b\u4e32\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u53ef\u80fd\u4f1a\u548c\u6a21\u5f0f\u4e32\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u90fd\u6bd4\u8f83\u4e00\u6b21\u3002\u5c31\u597d\u6bd4\u8fd0\u7528\u9012\u5f52\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e00\u6837\uff0c\u8fc7\u591a\u7684\u91cd\u590d\u8ba1\u7b97\u6bd4\u5bf9\u5927\u5927\u62d6\u6162\u4e86\u7b97\u6cd5\u3002\n\u4e0d\u59a8\u6765\u8003\u5bdf\u4e00\u4e0b\u6700\u574f\u7684\u60c5\u51b5:\n\n```\n000000...001\n0001\n```\n\n\u5982\u679c\u8981\u5339\u914d\u4ee5\u4e0a\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u8bdd\uff0c\u5c31\u4f1a\u9677\u5165\u5230\u6700\u574f\u7684\u60c5\u51b5\u3002\u4f46\u662f\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff1f\u8fdb\u8fc7\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u4e3b\u8981\u662f**\u56e0\u4e3a\u5728\u6a21\u5f0f\u4e32\u4e2d\u5b58\u5728\u5927\u91cf\u4e0e\u4e3b\u4e32\u5339\u914d\u7684\u524d\u7f00**\uff0c\u6240\u4ee5\u5927\u91cf\u5730\u51fa\u73b0\u201c\u5728\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\u5931\u914d\u5bfc\u81f4\u4e0d\u5f97\u4e0d\u4ece\u5934\u518d\u6765\u201d\u7684\u60c5\u51b5\u3002\n\n## 2.2 \u65b0\u7b97\u6cd5\u7684\u63d0\u51fa\n\n\u4e8b\u5b9e\u4e0a\uff0c\u5927\u91cf\u91cd\u590d\u7684\u6bd4\u8f83\u662f\u53ef\u4ee5\u907f\u514d\u7684\u3002\u9996\u5148\u6211\u4eec\u8981\u6ce8\u610f\u5230\u4e00\u4e2a\u95ee\u9898\uff1a**\u5728\u4efb\u4f55\u4e00\u4e2a\u65f6\u523b\uff0c\u5f53\u524d\u6b63\u5728\u6bd4\u5bf9\u7684\u6a21\u5f0f\u4e32\u5b57\u7b26\u4e4b\u524d\u7684\u524d\u7f00\u4e32\u548c\u5bf9\u5e94\u7684\u4e3b\u4e32\u4e2d\u7684\u5b50\u4e32\u662f\u5b8c\u5168\u76f8\u7b49\u7684**\u3002\u6240\u4ee5\u6211\u4eec\u8981\u60f3\u6cd5\u8bbe\u6cd5\u5c06\u8fd9\u4e9b\u4fe1\u606f\u201c\u5b58\u50a8\u201d\u8d77\u6765\uff0c\u4e3a\u540e\u9762\u7684\u6bd4\u5bf9\u6240\u7528\u3002\n\n\u90a3\u4e48\u50a8\u5b58\u8d77\u6765\u53c8\u8be5\u5e72\u4ec0\u4e48\u7528\u5462\uff1f\n\n\u4e0d\u59a8\u8fd9\u6837\u6765\u8003\u8651\uff0c\u4e4b\u524d\u6211\u4eec\u5728\u86ee\u529b\u6c42\u89e3\u7684\u7b97\u6cd5\u4e2d\uff0c\u6bcf\u6b21\u5931\u914d\uff0c\u90fd\u8981\u91cd\u65b0\u79fb\u52a8\u4e3b\u4e32\u6307\u9488\u548c\u6a21\u5f0f\u4e32\u7684\u6307\u9488\u5e76\u8fdb\u884c\u91cd\u65b0\u6bd4\u5bf9\u3002\u53ef\u662f\uff0c\u6211\u4eec\u4e0d\u59a8\u6362\u6761\u601d\u8def\uff1a**\u65e2\u7136\u4e4b\u524d\u6bd4\u5bf9\u8fc7\u7684\u4e3b\u4e32\u7684\u4fe1\u606f\u5df2\u7ecf\u77e5\u9053\u4e86\uff0c\u4e0d\u59a8\u5c06\u4e3b\u4e32\u7684\u6307\u9488\u5b9a\u4f4f\u4e0d\u52a8\uff0c\u53ea\u79fb\u52a8\u6a21\u5f0f\u4e32\u7684\u6307\u9488**\u3002 \n\n![](https://frostime.github.io/2019/06/18/%E4%B8%B2%E5%8C%B9%E9%85%8D%E4%B9%8BBF%E4%B8%8EKMP/1.png)\n\n\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u6211\u4eec\u8ba9\u4e3b\u4e32\u7684\u6bd4\u5bf9\u5b57\u7b26\u4ecd\u4e3a\u7a7a\u683c\u7b26\uff0c\u5411\u53f3\u6ed1\u52a8\u6a21\u5f0f\u4e32\uff0c\u4f7f\u5f97\u6a21\u5f0f\u4e32\u4e2d\u7684\u53e6\u5916\u4e00\u4e2a\u7ee7\u4efb\u5b57\u7b26\u7ee7\u7eed\u548c\u7a7a\u683c\u7b26\u6bd4\u5bf9\uff0c\u5728\u8fd9\u91cc\u8fd9\u4e2a\u7ee7\u4efb\u5b57\u7b26\u662f 'C'\u3002\n\n![](https://frostime.github.io/2019/06/18/%E4%B8%B2%E5%8C%B9%E9%85%8D%E4%B9%8BBF%E4%B8%8EKMP/2.png)\n\n------\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u627e\u5230\u8fd9\u4e2a\u5b57\u7b26\u5462\uff1f\u6362\u800c\u8a00\u4e4b\uff0c\u5982\u4f55\u786e\u5b9a\u6a21\u5f0f\u4e32\u8981\u5411\u53f3\u6ed1\u52a8\u51e0\u4e2a\u5355\u4f4d\u5462\uff1f\u6ce8\u610f\u5230\u4e00\u70b9\uff1a**\u5728\u8fd9\u4e2a\u7ee7\u4efb\u5b57\u7b26\u4e4b\u524d\u7684\u524d\u7f00\u5b50\u4e32\u5fc5\u987b\u548c\u4e3b\u4e32\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u914d**\u3002\n\n\u8b6c\u5982\u5728\u8fd9\u91cc\u6211\u4eec\u5c31\u53d1\u73b0\uff0c**\u5728\u79fb\u52a8\u524d\u4e3b\u4e32\u7684\u90e8\u5206\u5339\u914d\u5b50\u4e32\u7684\u540e\u7f00 `AB` \u6b63\u597d\u548c\u6a21\u5f0f\u4e32\u7684\u524d\u7f00 `AB` \u5339\u914d\uff0c\u6240\u4ee5\u6211\u4eec\u5411\u53f3\u6ed1\u52a8\u6a21\u5f0f\u4e32\u76f4\u5230\u4e24\u7ec4 `AB` \u5bf9\u9f50**\u3002\n\n\u5982\u4f55\u77e5\u9053\u8be5\u6ed1\u52a8\u51e0\u4f4d\uff1f\u8fd9\u91cc\u5c31\u8981\u501f\u52a9\u5230\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\u7684\u50a8\u5b58\u8d77\u6765\u4e86\u7684\u4e3b\u4e32\u7684\u90e8\u5206\u5339\u914d\u7684\u90e8\u5206\u4e86\u3002\u4e0d\u8fc7\u8981\u6ce8\u610f\u5230\uff0c**\u90a3\u90e8\u5206\u5339\u914d\u7684\u533a\u57df\u662f\u548c\u6a21\u5f0f\u4e32\u7684\u90e8\u5206\u5339\u914d\u524d\u7f00\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u4e0e\u5176\u8bf4\u662f\u5b58\u50a8\u4e86\u4e3b\u4e32\u7684\u4fe1\u606f\uff0c\u5012\u4e0d\u5982\u8bf4\u662f\u50a8\u5b58\u6a21\u5f0f\u4e32\u4fe1\u606f\u5e76\u95f4\u63a5\u5730\u5206\u6790\u51fa\u4e3b\u4e32\u7684\u4fe1\u606f**\u3002\n\n\u65b9\u6cd5\u5728\u4e8e\uff0c\u6211\u4eec\u8981\u4e8b\u5148\u6784\u9020\u51fa\u4e00\u4e2a `next` \u6570\u7ec4\uff0c**\u5b83\u8bb0\u5f55\u4e86\u6a21\u5f0f\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u7684\u67d0\u79cd\u4fe1\u606f**\u3002\u6bcf\u5f53\u9002\u914d\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u6267\u884c `patPtr = next[patPtr]` \u6765\u5f97\u5230\u4e0b\u4e00\u6b21\u5e94\u8be5\u5339\u914d\u7684\u7ee7\u4efb\u5b57\u7b26\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u6a21\u5f0f\u4e32\u7684\u53f3\u6ed1\u3002\n\n\n\n\u73b0\u5728\u6765\u8ba8\u8bba\u4e00\u4e0b\u8fd9\u4e2a `next` \u6570\u7ec4\u6709\u4ec0\u4e48\u8981\u6c42\u3002\u6839\u636e\u6211\u4eec\u4e4b\u524d\u7684\u5206\u6790\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff0c`next[patPtr]` \u5fc5\u7136\u6ee1\u8db3\u8fd9\u6837\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n> `next[patPtr]`\u6240\u6307\u5411\u7684\u5b57\u7b26\u4e4b\u524d\u7684\u524d\u7f00\u5b50\u4e32\u5fc5\u7136\u4e0e `patPtr` \u4e4b\u524d\u7684\u5b50\u4e32\u7684\u67d0\u4e2a\u540e\u7f00\u662f\u5339\u914d\u7684\uff0c\u8fd9\u6837\u4ed6\u5c31\u80fd\u6ee1\u8db3\u6211\u4eec\u4e4b\u524d\u8bf4\u7684\u201c\u7ee7\u4efb\u5b57\u7b26\u4e4b\u524d\u7684\u524d\u7f00\u5b50\u4e32\u5fc5\u987b\u548c\u4e3b\u4e32\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u914d\u201d\u7684\u8981\u6c42\u3002\n\n\u901a\u4fd7\u5730\u8bb2\u5c31\u662f:2\n\n1. \u4ee4 `pattern[0:patPtr]` \u4e3a s1\n2. \u4ee4 `pattern[0:next[patPtr]]` \u4e3a s2\n3. s1 \u7684\u67d0\u4e2a\u540e\u7f00\u5b50\u4e32 == s2\n\n\n\u53c8\u56e0\u4e3a `pattern` \u4e32\u7684\u4efb\u4f55\u4e00\u4e2a\u524d\u7f00\u5b50\u4e32\u5fc5\u7136\u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\uff0c\u6240\u4ee5 `next[patPtr]` \u6240\u6307\u5411\u7684\u5b57\u7b26\u7684\u7d22\u5f15\u503c\u4e00\u5b9a\u7b49\u4e8e\u8be5\u5b57\u7b26\u4e4b\u524d\u7684\u524d\u7f00\u5b50\u4e32\u7684\u957f\u5ea6\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\u662f\u4ece 0 \u5f00\u59cb\u7684\u8bdd\uff0c\u90a3\u4e48 `next[patPtr]` \u503c\u662f\u4ee3\u8868\u7740**\u5b57\u7b26 `pattern[patPtr]` \u4e4b\u524d\u7684\u5b50\u4e32**\u7684**\u771f\u524d\u7f00**\u4e0e**\u771f\u540e\u7f00**\u76f8\u540c\u7684\u6700\u5927\u957f\u5ea6\uff08\u771f\u524d\u7f00\u8868\u793a\u957f\u5ea6\u81f3\u5c11\u4e3a 1 \u7684\u524d\u7f00\uff0c\u56e0\u4e3a\u7a7a\u4e32\u4e5f\u7b97\u524d\u7f00\uff09\u3002\n\n\u4e0d\u8fc7\u8fd8\u6709\u4e00\u4e2a\u5c0f\u95ee\u9898\uff0c\u5982\u679c\u5728\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5c31\u5931\u914d\u4e86\u600e\u4e48\u529e\uff1f\u4e3a\u6b64\uff0c**\u6211\u4eec\u4e0d\u59a8\u4ee4 `next[0]` \u4e3a -1\uff0c\u4e5f\u5c31\u662f\u5047\u8bbe\u5b58\u5728\u4e00\u4e2a\u865a\u62df\u7684\u54e8\u5175\u5934\u7ed3\u70b9**\uff0c\u6211\u4eec\u5047\u8bbe**\u8fd9\u4e2a\u54e8\u5175\u7ed3\u70b9\u662f\u4e00\u4e2a\u901a\u914d\u7b26**\uff0c\u8fd9\u6837\u5c31\u4fdd\u6301\u4e86\u903b\u8f91\u7684\u4e00\u81f4\u6027\u3002\n\n\n\n![](https://frostime.github.io/2019/06/18/%E4%B8%B2%E5%8C%B9%E9%85%8D%E4%B9%8BBF%E4%B8%8EKMP/next%E6%95%B0%E7%BB%84%E7%9A%84%E7%94%A8%E6%B3%95.jpg)\n\n## 2.3 KMP\u7684\u521d\u6b65\u6846\u67b6\n\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u6784\u5efa\u51faKMP\u7b97\u6cd5\u7684\u5927\u4f53\u6846\u67b6\u4e86:\n```cpp\nint KMPMatch(const string &src, const string &pattern)\n{\n    const int srcLen = src.length(), patLen = pattern.length();\n    int srcPtr = 0, patPtr = 0;\n    int next[patLen];\n    ConstructNext(pattern, next);\n    while (srcPtr < srcLen && patPtr < patLen)\n    {\n        //\u540e\u9762\u4e00\u4e2a\u90e8\u5206\u597d\u7406\u89e3\uff0c\u524d\u9762\u7684 -1 \u4e3b\u8981\u662f\u6211\u4eec\u4f1a\u628a next[0] \u8bbe\u7f6e\u4e3a -1\n        //\u8fd9\u6837\u5373\u4f7f\u5728\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5c31\u5931\u914d\u4e86\uff0cpatPtr \u4e5f\u53ef\u4ee5\u53d8\u6210 0 \u7136\u540e\u7ee7\u7eed\u548c\u4e0b\u4e00\u4e2a\u5b57\u7b26\u8fdb\u884c\u6bd4\u8f83\n        if (patPtr == -1 || src[srcPtr] == pattern[patPtr])\n        {\n            ++srcPtr;\n            ++patPtr;\n        }\n        else\n            patPtr = next[patPtr];\n    }\n    return (patPtr == patLen)? srcPtr - patPtr : -1;\n}\n```\n\u53ef\u4ee5\u770b\u51fa\uff0c\u7b97\u6cd5\u5728\u4e00\u4e2a\u5faa\u73af\u5f53\u4e2d\u8fdb\u884c\uff0c\u6bcf\u6b21\u6709\u4e24\u79cd\u5206\u652f\u60c5\u51b5:\n- \u5339\u914d\n    - \u6b63\u5e38\u7684\u5b57\u7b26\u5339\u914d  \n    \u6bd4\u8f83\u4e0b\u4e00\u4f4d\u5b57\u7b26\n    - **\u865a\u62df\u7684\u901a\u914d\u7b26\u5339\u914d**  \n    \u903b\u8f91\u4e0a\u662f\u6bd4\u8f83\u54e8\u5175\u5b57\u7b26\u7684\u4e0b\u4e00\u4f4d\uff0c\u5b9e\u8d28\u4e0a\u5c31\u662f\u4ece\u65b0\u5f00\u59cb\u6bd4\u8f83\n- \u4e0d\u5339\u914d  \n\u5c06\u6a21\u5f0f\u4e32\u53f3\u6ed1\uff0c\u4e00\u76f4\u6ed1\u5230\u7ee7\u4efb\u5b57\u7b26\n\n**\u6ce8\u610f\u4e0d\u8981\u7528 `size_t`\uff0c\u56e0\u4e3a\u8fd9\u91cci\u662f\u53ef\u4ee5\u7b49\u4e8e-1\u7684**\u3002\n\n\u4e0b\u9762\u6211\u4eec\u6765\u8003\u8651\u5982\u4f55\u6784\u9020 `next` \u6570\u7ec4\u3002\n\n## 2.4 \u6784\u9020 `next`\n\n\u6211\u4eec\u5927\u53ef\u4e0d\u5fc5\u771f\u7684\u53bb\u5bf9\u6bcf\u4e2a\u5b50\u4e32\u6c42\u6700\u5927\u5339\u914d\u7684\u771f\u524d\u7f00\u548c\u771f\u540e\u7f00\u7684\u957f\u5ea6\uff0c\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9012\u63a8\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u6c42\u53d6\u3002\n\n\u9996\u5148\u6211\u4eec\u6709\u5982\u4e0b\u7ed3\u8bba\uff1a\n\n$$\nnext[i] \\leqslant i\n$$\n\n\u8fd9\u5f53\u7136\u662f\u5229\u7d22\u5f53\u7136\u7684\u4e86\uff0c`next[i]` \u662f\u5728\u627e\u524d\u7f00\uff0c\u6240\u4ee5\u80af\u5b9a\u81f3\u5c11\u4e0d\u4f1a\u6bd4 `i` \u8fd8\u5927\u3002\n\n\u53e6\u5916\uff1a\n\n$$\nnext[j+1] \\leqslant next[j] + 1\n$$\n\n\u5bf9\u4e8e `j + 1`\u800c\u8a00\uff0c\u6700\u597d\u7684\u60c5\u51b5\u4e0d\u8fc7\u662f `pattern[j] == pattern[next[j]]`\uff0c\u4e5f\u53ea\u6709\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u624d\u80fd\u53d6\u7b49\u53f7\u3002\n\n\n\n\u73b0\u5728\u6211\u4eec\u5f00\u59cb\u8ba8\u8bba\u5df2\u77e5 $next[i]$ \u5982\u4f55\u6c42 $next[i+1]$\n\n\u5047\u8bbe\u5f53\u524d `next[i]` \u7684\u503c\u4e3a `t`\uff0c\u8fd9\u5c31\u8bf4\u660e\uff1a\n\n$$\np_{0}p_{1}\\cdots p_{t-1} = p_{i-t}p_{i-t+1}\\cdots p_{i-1}\n$$\n\n![](https://frostime.github.io/2019/06/18/%E4%B8%B2%E5%8C%B9%E9%85%8D%E4%B9%8BBF%E4%B8%8EKMP/%E8%8C%83%E4%BE%8B.jpg)\n\n\n\n\u73b0\u5728\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n### 2.3.1 Case 1:\u5982\u679c`p[i] == p[t]`\n\n\u663e\u7136\u8fd9\u5c31\u610f\u5473\u7740:\n\n$$\np_{0}p_{1}\\cdots p_{t-1}p_{k} = p_{i-t}p_{i-t+1}\\cdots p_{i-1}p_{i}\n$$\n\n\u7a0d\u52a0\u601d\u8003\u5c31\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b`next[i+1] = t+1`\n\n![](https://frostime.github.io/2019/06/18/%E4%B8%B2%E5%8C%B9%E9%85%8D%E4%B9%8BBF%E4%B8%8EKMP/%E8%8C%83%E4%BE%8B2.jpg)\n\n\u6bd4\u5982\u5bf9\u4e8e:\n\n> a b b c a b a c  \n> -1 0 0 0 0 1 2 1\n\n\u7b2c\u4e8c\u4e2aa\u7684next\u4e3a0\uff0c\u4e14`p[0]`\u4e5f\u4e3aa\uff0c\u6240\u4ee5\u7b2c\u4e09\u4e2ab\u7684next\u4e00\u5b9a\u4e3a1\n\n### 2.3.2 Case 2: \u5982\u679c`p[i] != p[t]`\n\n\u8fd9\u79cd\u60c5\u51b5\u5c31\u8f83\u4e3a\u590d\u6742\u4e86\uff0c\u6211\u4eec\u9700\u8981\u5148\u4ed4\u7ec6\u8003\u8651\u4e00\u4e0b\u6211\u4eec\u9700\u8981\u5e72\u4ec0\u4e48\u3002\u6b63\u5982\u524d\u9762\u5206\u6790\u8fc7\u7684\uff0c\u5f53\u6211\u4eec\u6c42 `next[i+1]` \u65f6\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u4e2a\u7ee7\u4efb\u5b57\u7b26 (\u4ee4\u4e3ak)\uff0c\u4f7f\u8fd9\u4e2a\u5b57\u7b26\u524d\u7684\u957f\u5ea6\u4e3a k \u7684\u524d\u7f00\u5b50\u4e32\u548c\u7d27\u6328\u7740 p[i+1] \u524d\u9762\u7684\u957f\u5ea6\u4e3a k \u7684\u540e\u7f00\u5b50\u4e32\u5339\u914d\u3002\n\n\u4e0d\u59a8\u5206\u4e24\u6b65\u8003\u8651\uff0c\u4ee4 `k` \u524d\u9762\u90a3\u4e2a\u5b57\u7b26\u4e3a`tx`\u3002\u5219**\u5fc5\u7136\u6709 `p[0, tx) == p[i-tx, i) `\u4e14 `p[tx] == p[i]`**\u3002\n\n\n\n- `p[0, tx) == p[i-tx, i)`\n\n![](https://frostime.github.io/2019/06/18/%E4%B8%B2%E5%8C%B9%E9%85%8D%E4%B9%8BBF%E4%B8%8EKMP/%E6%9E%84%E5%BB%BA.png)\n\n\u6211\u4eec\u4ed4\u7ec6\u8003\u8651\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\uff0c\u8fd9\u548c\u6211\u4eec\u5728KMP\u4e3b\u7b97\u6cd5\u4e2d\u9047\u5230\u7684\u95ee\u9898\u4e0d\u6b63\u662f\u6837\u7684\u5417\uff1f\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8**\u628a\u6c42 `next` \u6570\u7ec4\u7684\u95ee\u9898\u770b\u4f5c\u662f\u53e6\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u7684\u95ee\u9898**\uff0c\u53ea\u4e0d\u8fc7\u5728\u8fd9\u91cc\u6574\u4e2a\u6a21\u5f0f\u4e32\u65e2\u662f\u4e3b\u4e32\u53c8\u662f\u6a21\u5f0f\u4e32\u3002\u66f4\u51c6\u786e\u7684\u800c\u8a00\uff0c\u6211\u4eec\u8981**\u628a\u5f53\u524d\u9700\u8981\u5339\u914d\u7684 `p[i]` \u9644\u8fd1\u5f53\u4f5c\u662f\u4e3b\u4e32\uff0c`p[tx]` \u9644\u8fd1\u5f53\u4f5c\u662f\u6a21\u5f0f\u4e32**\u3002\n\n\u6211\u4eec\u60f3\u627e\u5230 `i + 1` \u5bf9\u5e94\u7684 `tx`\uff0c\u5c31\u7c7b\u4f3c\u5730\u7b49\u4ef7\u4e0e KMP \u4e2d `p[i]` \u5728\u548c `p[tx]` \u6bd4\u8f83\u65f6\u5931\u914d\u7684\u60c5\u51b5\u3002\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u53f3\u79fb\u6a21\u5f0f\u4e32\uff0c\u76f4\u5230\u4e24\u4e2a\u524d\u7f00\u76f8\u7b49\u65f6\u5373\u53ef\u3002\u7b26\u5408\u8981\u6c42\u7684\u4f4d\u7f6e\u6709\u54ea\u4e9b\u5462\uff1f\u663e\u7136\uff0c`next[i]`\u662f\u7b26\u5408\u8fd9\u4e2a\u8981\u6c42\u7684\uff0c**\u4f46\u540c\u65f6\u9700\u8981\u6ce8\u610f\uff0c`next[next[i]]`\u4e5f\u662f\u7b26\u5408\u8fd9\u4e2a\u8981\u6c42\u7684\uff0c\u4ee5\u6b64\u7c7b\u63a8`next[next[...next[i]]]`\u4e5f\u90fd\u7b26\u5408\u8981\u6c42\u3002\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c\u968f\u7740\u5c42\u6b21\u7684\u63a8\u79fb\uff0c\u76f8\u540c\u524d\u7f00\u5b50\u4e32\u7684\u957f\u5ea6\u4e5f\u4e0d\u65ad\u51cf\u5c11**\u3002\n\n\u603b\u7ed3\u4ee5\u4e0a\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e0b\u7ed3\u8bba:\n\n\u4ee4 `t = next[i]`\uff0c**\u901a\u8fc7\u4e0d\u65ad\u7684\u8fed\u4ee3 `t= next[t]` N\u6b21(N=0, 1, 2...)\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 N+1 \u4e2a\u4f4d\u7f6e `t`\uff0c\u5b83\u4eec\u80fd\u90fd\u6ee1\u8db3 `p[0, tx) == p[i-tx, i)`**\u3002\u6362\u800c\u8a00\u4e4b**\u5982\u679c\u5b58\u5728\u4e00\u4e2a `tx` \u6ee1\u8db3 `p[0, tx] == p[i-tx, i]` \u90a3\u4e48\u8fd9\u4e2a`tx` \u5fc5\u7136\u5728\u8fd9N+1\u4e2a `t` \u4e2d\u4ea7\u751f**\u3002\n\n\n\n- `p[tx] == p[i]`\n\n![](https://frostime.github.io/2019/06/18/%E4%B8%B2%E5%8C%B9%E9%85%8D%E4%B9%8BBF%E4%B8%8EKMP/%E6%9E%84%E5%BB%BA2.png)\n\n\u65e2\u7136\u5df2\u7ecf\u77e5\u9053\u4e86`tx`\u7684\u53d6\u6837\u8303\u56f4\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u5c31\u597d\u529e\u4e86\u3002\u65e2\u7136`i`\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u989d\u5916\u7684\u53d8\u91cf`lastNext`(\u539f\u8c05\u6211\u7684\u53d6\u540d\u6c34\u5e73)\uff0c\u5b83\u8bb0\u5f55\u7684\u662f\u4e0a\u4e00\u4e2a`next[]`\u7684\u503c\u3002\n\n\u901a\u8fc7**\u4e0d\u65ad\u5411\u524d\u8fed\u4ee3**(`lastNext = next[lastNext]`)\uff0c**\u4f9d\u6b21\u53d6\u5f97\u4e4b\u524d\u6240\u8bf4\u7684 `tx` \u503c**\u5e76\u6bcf\u6b21\u548c`p[i]`\u8fdb\u884c\u6bd4\u8f83\u3002\n\n1.  \u5982\u679c\u5b58\u5728`p[lastNext] == p[i]`\uff0c\u90a3\u5c31\u6070\u597d\u6ee1\u8db3\u4e86\u6211\u4eec\u7684\u8981\u6c42\uff1a\n\n2. \u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u5b57\u7b26\uff0c\u90a3\u4e48**\u6211\u4eec\u540c\u6837\u4f9d\u9760\u865a\u62df\u7684\u901a\u914d\u7b26\u54e8\u5175\u4f4d\uff0c\u5047\u8bbe\u5b58\u5728\u8fd9\u6837\u4e00\u4e2a\u80fd\u4e0e\u4efb\u4f55\u5b57\u7b26\u5339\u914d\u7684\u7ed3\u70b9\u3002**\n\n\u5728\u627e\u5230\u4e86\u6211\u4eec\u7684\u76ee\u6807\u4f4d\u7f6e `tx` \u4e4b\u540e\u663e\u7136\u8fd9\u5c31\u8f6c\u5316\u4e3a\u4e86`p[i] = p[t]`\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06next[i+1]\u586b\u5165 `k = tx + 1` \u7684\u503c\u4e86\u3002\n\n## 2.4 `next`\u5b9e\u73b0\n```cpp\nvoid ConstructNext(const string &pattern, int next[])\n{\n    const int len = pattern.length();\n    //\u865a\u62df\u7684\u901a\u914d\u7b26\n    next[0] = -1;\n    //\u8fd9\u91cc\u7684 ptr \u5c31\u76f8\u5f53\u4e8e\u5206\u6790\u4e2d\u7684 i, lastNext \u5c31\u662f next[ptr]\n    int ptr = 0, lastNext = -1;\n    //\u5728\u5faa\u73af\u4f53\u4e2d\uff0c\u5f53\u524d\u4e3a ptr \u610f\u5473\u7740\u6211\u4eec\u7684\u4efb\u52a1\u662f\u586b\u5145 next[ptr + 1] \u7684\u503c\n    //\u6240\u4ee5 ptr \u8981\u5c0f\u4e8e len - 1\uff0c\u8fd9\u6837\u5728 ptr = ptr - 2 \u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u586b\u5145 next[len - 1] \u4e86\n    while (ptr < len - 1)\n    {\n        //Case 1: p[i] = p[t]\uff0c\u5219 next[i + 1] = next[i] + 1\n        if (lastNext == -1 || pattern[ptr] == pattern[lastNext])\n            next[++ptr] = ++lastNext;\n        else\n            lastNext = next[lastNext];\n\n    }\n}\n```\n\n\u7a0b\u5e8f\u5206\u6790\uff1a\n\n- \u5faa\u73af\u6b21\u6570\n\n\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728\u4e00\u5f00\u59cb\u5148\u5c06 `next[0]` \u586b\u5145\uff0c**\u56e0\u6b64\u540e\u7eed\u7a0b\u5e8f\u7684\u5faa\u73af\u6b21\u6570\u5e94\u8be5\u4e3a`length - 1`\u6b21\u800c\u975e`length`\u6b21**\u3002\n\n- `ptr`\n\n\u6bcf\u4e00\u8f6e\u5faa\u73af\uff0c`ptr` \u90fd\u6307\u5411 `next` \u6570\u7ec4\u5df2\u7ecf\u586b\u597d\u4e86\u7684\u90e8\u5206\u7684\u6700\u540e\u4e00\u4f4d\u3002\u6362\u800c\u8a00\u4e4b**\u5982\u679c\u67d0\u6b21\u5faa\u73af `ptr` \u7684\u503c\u4e3a `x`\uff0c\u90a3\u4e48\u672c\u6b21\u5faa\u73af\u7684\u76ee\u7684\u662f\u6c42\u5f97 `next[x+1]`**\u3002\u7a0b\u5e8f\u4e00\u76f4\u8fdb\u884c\u5230 `ptr == p.length() - 2`\uff0c\u4e5f\u5c31\u662f\u6307\u5411\u5012\u6570\u7b2c\u4e8c\u4f4d\uff0c\u5728\u8fd9\u4e00\u7ec4(\u6ce8\u610f\u5e76\u4e0d\u662f\u6bcf\u6b21\u5faa\u73af\u5c31\u586b\u597d\u4e00\u4e2a\u6570\u7ec4\u4f4d\u7f6e\uff0c\u6709\u4e9b\u5faa\u73af\u662f\u7528\u6765\u8ba1\u7b97 `lastNext` \u7684)\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u5c06`next`\u7684\u6700\u540e\u4e00\u4f4d\u586b\u597d\uff0c\u9000\u51fa\u7a0b\u5e8f\u3002\n\n- `lastNext`\n\n\u76f8\u5bf9\u7684\uff0c`lastNext`\u6307\u5411\u7684\u662f\u201c\u4e0a\u4e00\u6b21\u201d`next[]`\u6570\u7ec4\u7684\u503c\u3002\n\n- \u6761\u4ef6\u5206\u652f\n    - \u82e5\u5339\u914d  \n    **\u5339\u914d\u7684\u60c5\u51b5\u6709\u4e24\u79cd\uff1a\u4e00\u79cd\u662f\u771f\u5339\u914d\uff0c\u4e00\u79cd\u662f\u901a\u914d\u7b26\u5339\u914d**\u3002  \n    \u5de7\u5999\u7684\u662f\uff0c\u65e0\u8bba\u662f\u54ea\u79cd\u60c5\u51b5\u6211\u4eec\u90fd\u53ef\u4ee5\u7528\u540c\u4e00\u79cd\u8bed\u53e5\u6765\u5904\u7406\u3002\n        - \u5bf9\u4e8e\u524d\u8005\uff0c`next[++ptr] = ++lastNext;` \u4ee3\u8868\u4e86 `next[ptr+1] = next[ptr] + 1`\u3002\u6ce8\u610f\u539f\u672c `lastNext` \u4ee3\u8868\u7684\u662f `next[ptr]` \u7684\u503c\uff0c\u5728\u6267\u884c\u540e\uff0c\u5b83\u4ee3\u8868 `next[ptr+1]` \u7684\u503c\u3002\n        - \u5bf9\u4e0e\u540e\u8005\uff0c\u7531\u4e8e\u6b64\u65f6 `lastNext` \u5fc5\u5b9a\u4e3a `-1`\uff0c\u6240\u4ee5\u6267\u884c\u64cd\u4f5c\u540e\u6070\u597d\u4e3a `next[ptr+1] = 0`\uff0c\u5373\u91cd\u65b0\u5f00\u59cb\u6bd4\u5bf9\u3002\n    - \u82e5\u4e0d\u5339\u914d  \n    \u6b64\u65f6\u5c31\u5f00\u59cb\u4e86\u6211\u4eec\u4e4b\u524d\u5206\u6790\u8fc7\u7684\u8df3\u8f6c\u6d41\u7a0b:`lastNext`\u5728\u6bcf\u8fdb\u884c\u4e00\u6b21\u5faa\u73af\u540e\u90fd\u5411\u4e0a\u4e00\u6b21\u7684\"`lastlastNext`\" \u8df3\u8f6c\u3002  \n    \u53ea\u6cbf\u7740`next`\u8df3\u8f6c\u4fdd\u8bc1\u4e86\u524d\u7f00\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u90e8\u5206\u5fc5\u7136\u5339\u914d\uff1b  \n    \u6bcf\u6b21\u5faa\u73af\u90fd\u505a\u4e00\u6b21`pattern[ptr] == pattern[lastNext]`\u7684\u5224\u65ad\u662f\u4e3a\u4e86\u627e\u51fa\u4f7f\u524d\u7f00\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e5f\u5339\u914d\u7684\u4f4d\u7f6e\u3002  \n    \u7b49\u5230\u627e\u5230\u4e86\u8fd9\u4e2a\u4f4d\u7f6e\u540e(\u4e0d\u7ba1\u662f\u771f\u5339\u914d\u8fd8\u662f\u901a\u914d\u7b26\u5339\u914d)\uff0c**\u5c31\u8df3\u5165\u4e86`if`\u8bed\u53e5\u5757\uff0c\u4ece\u800c\u586b\u5199\u597d`next[ptr+1]`\u7684\u503c\u3002\n\n## 2.5 \u518d\u4f18\u5316\n\n\u4e8b\u5b9e\u4e0a\u4ee5\u4e0a\u7684KMP\u7b97\u6cd5\u7248\u672c\u8fd8\u662f\u6709\u7f3a\u9677\u7684\u3002\u4e0d\u59a8\u6765\u8003\u8651\u8fd9\u4e2a\u4f8b\u5b50:\n\n![](https://frostime.github.io/2019/06/18/%E4%B8%B2%E5%8C%B9%E9%85%8D%E4%B9%8BBF%E4%B8%8EKMP/x.png)\n\n\u4e4b\u524d\u7684KMP\u7b97\u6cd5\u4f1a\u600e\u4e48\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff1f\u663e\u7136\u5b83\u4f1a\u5148\u628a `j` \u79fb\u52302\uff0c\u53d1\u73b0\u4e0d\u5339\u914d\uff1b\u518d\u628a `j` \u79fb\u52301\uff0c\u53c8\u4e0d\u5339\u914d\u00b7\u00b7\u00b7\u6700\u540e\u4e00\u53ea\u79fb\u5230\u4e86-1\uff0c\u624d\u7ed3\u675f\u5bf9\u672c\u6b21\u4e3b\u4e32\u4e2d\u7684\u5b57\u7b26`1`\u7684\u5339\u914d\u3002\n\n\u4f46\u662f\u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u5c31\u4f1a\u53d1\u73b0\u8fd9\u662f\u6ca1\u6709\u5fc5\u8981\u7684\uff01\u539f\u56e0\u5728\u4e8e `p[j] == p[next[j]] == p[next[next[j]]]...`\uff0c\u6240\u4ee5\u5982\u679c `p[j]` \u4e0d\u548c `src[i]\u5339\u914d`\uff0c\u90a3\u4e48`p[next[j]]`\u4e5f\u5fc5\u5b9a\u4e0d\u548c`src[i]`\u5339\u914d\uff0c\u6a21\u5f0f\u4e32\u6ce8\u5b9a\u8981\u7ee7\u7eed\u540e\u79fb\u3002\n\n\u901a\u8fc7\u4ee5\u4e0a\u7684\u5206\u6790\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u8981\u60f3\u4f18\u5316\u7b97\u6cd5\uff0c\u5c31\u9700\u8981**\u4f18\u5316`next`\u8868\u7684\u6784\u6210**\u3002\n\n```cpp\nvoid ConstructNext(const string &pattern, int next[])\n{\n    const int len = pattern.length();\n    //\u865a\u62df\u7684\u901a\u914d\u7b26\n    next[0] = -1;\n    //\u8fd9\u91cc\u7684 ptr \u5c31\u76f8\u5f53\u4e8e\u5206\u6790\u4e2d\u7684 i, lastNext \u5c31\u662f next[ptr]\n    int ptr = 0, lastNext = -1;\n    //\u5728\u5faa\u73af\u4f53\u4e2d\uff0c\u5f53\u524d\u4e3a ptr \u610f\u5473\u7740\u6211\u4eec\u7684\u4efb\u52a1\u662f\u586b\u5145 next[ptr + 1] \u7684\u503c\n    //\u6240\u4ee5 ptr \u8981\u5c0f\u4e8e len - 1\uff0c\u8fd9\u6837\u5728 ptr = ptr - 2 \u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u586b\u5145 next[len - 1] \u4e86\n    while (ptr < len - 1)\n    {\n        //Case 1: p[i] = p[t]\uff0c\u5219 next[i + 1] = next[i] + 1\n        if (lastNext == -1 || pattern[ptr] == pattern[lastNext])\n        {\n            ++ptr;\n            ++lastNext;\n            //\u5f3a\u5236\u8981\u6c42 pattern[i] != pattern[next[i]]\n            next[ptr] = (pattern[ptr] == pattern[lastNext])? next[lastNext] : lastNext;\n        }\n        else\n            lastNext = next[lastNext];\n\n    }\n}\n```\n\n\u6ce8\u610f\u5728\u8fd9\u91cc\u6211\u4eec\u4e0d\u518d\u7b80\u5355\u5730`next[++ptr] = ++lastNext`\u3002\u800c\u662f\u589e\u52a0\u4e86\u5224\u65ad`pattern[lastNext] == patern[ptr]`\uff1a\u4e0d\u76f8\u7b49\u4e00\u5207\u597d\u8bf4\uff1b**\u5982\u679c\u76f8\u7b49\uff0c\u5c31\u628a\u5b83\u79fb\u5230\u4e0d\u76f8\u7b49\u7684\u4f4d\u7f6e**\u3002\n\n\u7b49\u7b49\uff0c\u76f8\u7b49\u65f6\u4e3a\u4ec0\u4e48\u662f`next[ptr] = next[lastNext]`\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u6837\u7684\u8d4b\u503c\u53ef\u4ee5\u4fdd\u8bc1`p[i] != p[next[pi]]`\uff1f\u8fd9\u662f\u56e0\u4e3a **`next` \u8868\u662f\u4ece\u5de6\u5230\u53f3\u5efa\u7acb\u7684\uff0c\u6240\u4ee5\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u4f4d\u7f6e `k` \u662f\u5df2\u7ecf\u5efa\u7acb\u597d\u4e86\u7684\uff0c\u90a3\u4e48\u5fc5\u7136\u6ee1\u8db3`p[k] != p[next[k]]`**\u3002\u8003\u8651\u5230`lastNext`\u5fc5\u7136\u5728 `i` \u7684\u5de6\u4fa7\uff0c\u6240\u4ee5 `p[lastNext]` \u5fc5\u7136\u6ee1\u8db3\u4ee5\u4e0a\u6027\u8d28\u3002\u56e0\u6b64\u82e5 `p[i] == p[lastNext]`\uff0c\u5219 `p[i]` \u5fc5\u7136\u4e0d\u7b49\u4e8e `p[next[lastNext]]`\u3002(\u53ef\u4ee5\u8054\u60f3\u5230\u6211\u4eec\u5728\u63d2\u5165\u6392\u5e8f\u4e2d\uff0c\u5de6\u4fa7\u7684\u533a\u95f4\u6bb5\u5fc5\u5b9a\u662f\u6709\u5e8f\u7684\u8fd9\u6837\u4e00\u4e2a\u8003\u8651)\n\n\n## 2.6 \u9644\uff1a\u624b\u5de5\u6c42`next`\u6570\u7ec4\n\n1. \u6b65\u9aa4\u4e00\uff1a\u6c42`pattern`\u7684\u90e8\u5206\u5339\u914d\u8868\n\n\u6bd4\u5982\u5bf9\u4e8e\u8fd9\u4e2a\u6a21\u5f0f\u4e32  \n> a b b c a b a c\n\n\u5047\u8bbe\u90e8\u5206\u5339\u914d\u8868\u4e3a `pm`\uff0c\u90a3\u4e48 `pm[i]` \u8868\u793a**\u4ee5 `pattern[i]` \u4e3a\u7ed3\u5c3e\u7684\u5b50\u4e32\u548c\u4ee5 `pattern[0]` \u4e3a\u5f00\u5934\u7684\u5b50\u4e32\u76f8\u5339\u914d\u7684\u6700\u5927\u4f4d\u6570**\uff0c\u6bd4\u5982\u4e0a\u8ff0\u5b50\u4e32\u5bf9\u5e94\u7684\u90e8\u5206\u5339\u914d\u8868\u5982\u4e0b\n\n> a b b c a b a c  \n> 0 0 0 0 1 2 1 0\n\n2. \u6b65\u9aa4\u4e8c\uff1a\u5c06\u90e8\u5206\u5339\u914d\u8868\u6574\u4f53\u53f3\u79fb\uff0c\u9996\u4f4d\u7528-1\u4ee3\u66ff\n\n> a b b c a b a c  \n> -1 0 0 0 0 1 2 1\n\n\u5f53\u7136\u8fd9\u662f\u6307\u7d22\u5f15\u4ece0\u5f00\u59cb\u7684\u60c5\u51b5\uff0c\u5982\u679c\u7d22\u5f15\u4ecek\u5f00\u59cb\uff0c\u90a3\u6700\u540e\u7ed3\u679c\u6574\u4f53\u52a0\u4e0ak\u3002\n\n\n# 3. \u5c0f\u6ce8\u610f\n\n\u5e76\u4e0d\u662f\u8bf4\u6709\u4e86KMP\u7b49\u9ad8\u6548\u7b97\u6cd5\u5c31\u65e0\u9700\u7ba1BF\u7b97\u6cd5\u4e86\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e8b\u5b9e\u4e0a`Java`\u4e2d`indexOf`\u65b9\u6cd5\u5c31\u662f\u7528BF\u5b9e\u73b0\u7684\u3002\n\nJDK\u7684\u7f16\u5199\u8005\u4eec\u8ba4\u4e3a**\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5b57\u7b26\u4e32\u90fd\u4e0d\u957f\uff0c\u4f7f\u7528\u539f\u59cb\u5b9e\u73b0\u53ef\u80fd\u4ee3\u4ef7\u66f4\u4f4e**\u3002\u56e0\u4e3aKMP\u548cBoyer-Moore\u7b97\u6cd5\u90fd\u9700\u8981\u9884\u5148\u8ba1\u7b97\u5904\u7406\u6765\u83b7\u5f97\u8f85\u52a9\u6570\u7ec4\uff0c\u9700\u8981\u4e00\u5b9a\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\uff0c**\u8fd9\u53ef\u80fd\u5728\u77ed\u5b57\u7b26\u4e32\u67e5\u627e\u4e2d\u76f8\u6bd4\u8f83\u539f\u59cb\u5b9e\u73b0\u8017\u8d39\u66f4\u5927\u7684\u4ee3\u4ef7**\u3002\u800c\u4e14\u4e00\u822c\u5927\u5b57\u7b26\u4e32\u67e5\u627e\u65f6\uff0c\u7a0b\u5e8f\u5458\u4eec\u4e5f\u4f1a\u4f7f\u7528\u5176\u5b83\u7279\u5b9a\u7684\u6570\u636e\u7ed3\u6784\uff0c\u67e5\u627e\u8d77\u6765\u66f4\u7b80\u5355\u3002\u8fd9\u6709\u70b9\u7c7b\u4f3c\u4e8e\u6392\u9664\u7279\u5b9a\u60c5\u51b5\u4e0b\u7684\u5feb\u901f\u6392\u5e8f\u4e86\u3002\n\n\u6240\u4ee5\u4e5f\u4e0d\u662f\u8d8a\u5feb\u8d8a\u597d\u3002\n\n\n------\n# \u5177\u4f53\u8fd9\u9053\u9898\n\n\u8fd9\u9053\u9898\u548c\u539f\u59cb\u7684 KMP \u7684\u4e0d\u540c\u70b9\u5728\u4e8e\u6211\u4eec\u8981\u6c42\u53ef\u4ee5\u8fde\u7eed\u5339\u914d\u3002\u6240\u4ee5\u5173\u952e\u70b9\u5728\u4e8e**\u5f53\u67d0\u6b21\u5339\u914d\u6210\u529f\u540e\u4e0b\u4e00\u6b65\u5e94\u8be5\u600e\u4e48\u505a**\u3002\n\n\u6211\u4eec\u4eff\u7167\u4e4b\u524d\u7684\u601d\u8def\uff0c**\u5047\u8bbe\u5728 `pattern` \u672b\u5c3e\u4e5f\u6709\u4e00\u4e2a\u865a\u62df\u7684\u54e8\u5175\u5b57\u7b26\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e0d\u8bba\u78b0\u5230\u4ec0\u4e48\u5176\u4ed6\u5b57\u7b26\u90fd\u4e0d\u5339\u914d**\u3002 \u8fd9\u6837\u53ea\u8981\u628a\u5339\u914d\u6210\u529f\u540e\u5f53\u4f5c\u4e00\u6b21\u65b0\u7684\u5931\u914d\uff0c\u5c31\u53ef\u4ee5\u548c\u4ee5\u524d\u7684\u4ee3\u7801\u903b\u8f91\u8054\u901a\u4e86\u3002\n\n\u4e3a\u6b64\uff0c\u6211\u4eec\u628a `next[]` \u6570\u7ec4\u591a\u52a0\u4e00\u4f4d\u5c31\u53ef\u4ee5\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include <iostream>\n#include <string>\nusing namespace std;\n\nvoid Construct(const string &pat, int next[])\n{\n    const int len = pat.length();\n    next[0] = -1;\n    int j = 0, lastNext = -1;\n    //\u6ca1\u9519\uff0c\u53ea\u8981\u628a len - 1 \u6539\u6210 len \u5c31\u53ef\u4ee5\u628a\u6700\u540e\u4e00\u4e2a\u4e5f\u586b\u8fdb\u53bb\u4e86\n    while (j < len)\n    {\n        if (lastNext == -1 || pat[j] == pat[lastNext])\n        {\n            ++j; ++lastNext;\n            //\u8fd9\u91cc\u4e0d\u80fd\u4f18\u5316\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981 next[i] \u4fdd\u5b58\u7684\u5c31\u662f i-1 \u5b50\u4e32\u7684\u6700\u5927\u5339\u914d\n            //next[j] = (pat[j] == pat[lastNext])? next[lastNext] : lastNext;\n            next[j] = lastNext;\n        }\n        else\n            lastNext = next[lastNext];\n    }\n}\n\nvoid KMP(const string &src, const string &pat)\n{\n    const int slen = src.length();\n    const int plen = pat.length();\n    int i = 0, j = 0;\n    //next \u6570\u7ec4\uff0cnext[i] \u8868\u793a pat[0~i] \u7684\u90e8\u5206\u5339\u914d\u6570(\u5373\u6700\u957f\u76f8\u5339\u914d\u7684\u771f\u524d\u7f00\u540e\u7f00\u7684\u957f\u5ea6)\n    int next[plen + 1];\n    Construct(pat, next);\n    while (i < slen)\n    {\n        //\u5339\u914d\u5b8c\u4e86\u4e00\u6b21\n        if (j == plen)\n        {\n            //\u9898\u76ee\u662f\u4ece 1 \u5f00\u59cb\u7684(\u8be5\u6b7b\u7684!)\n            cout << i - j + 1 << endl;\n            //next[len] \u5b58\u50a8\u4e86 pat \u6700\u957f\u7684\u5339\u914d\u524d\u540e\u7f00\u7684\u957f\u5ea6\n            //\u53ef\u4ee5\u60f3\u8c61\u6210 pat[len] \u662f\u4e00\u4e2a\u548c\u4efb\u4f55\u5b57\u7b26\u90fd\u4e0d\u540c\u7684\u865a\u62df\u54e8\u5175\n            //\u8fd9\u6837\u60c5\u51b5\u5c31\u9000\u5316\u4e3a pat[len] \u548c src[i] \u5931\u914d\u7684\u60c5\u51b5\u4e86\n            j = next[plen];\n        }\n        else if (j == -1 || src[i] == pat[j])\n        {\n            ++i;\n            ++j;\n        }\n        else\n            j = next[j];\n    }\n    if (j == plen)\n        cout << i - j + 1 << endl;\n    //\u6d1b\u8c37\u8981\u6c42\u7684 next \u6570\u7ec4\u548c\u6211\u7684\u4e0d\u592a\u4e00\u6837...\n    for (int i = 1; i <= plen; ++i)\n    {\n        //\u5927\u7237\u7684\u6d1b\u8c37\uff0c\u5c45\u7136\u672b\u5c3e\u4e5f\u53ef\u4ee5\u6709\u7a7a\u683c\u5bb3\u5f97\u6211\u767d\u767d\u67e5\u4e86\u534a\u5929\u4e0d\u660e\u767d\u662f\u600e\u4e48\u56de\u4e8b\n        // if (i != 1)\n        //     cout << \" \";\n        cout << next[i] << \" \";\n    }\n}\n\nint main()\n{\n    string src;\n    string pat;\n    //???\u8c01\u8ddf\u6211\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48 getline(cin, str) \u5c31\u4e0d\u884c\u4e86?\n    cin >> src >> pat;\n    KMP(src, pat);\n    return 0;\n}\n```\n\n\n\n\n\n\n",
        "postTime": 1560955980,
        "uid": 215509,
        "name": "frostime",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "~~(\u867d\u7136\u611f\u89c9\u5f88\u591a\u5de8\u4f6c\u7684\u9898\u89e3\u8bb2\u89e3\u90fd\u6bd4\u6211\u597d\uff0c\u4f46\u662f\u9ebb\u70e6\u8ba9\u6211\u4e5f\u8fc7\u4e00\u4e0b\u561bQwQ)~~\n\n\u5728\u5b57\u7b26\u4e32\u5339\u914d\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5982\u679c\u4e00\u4f4d\u4e00\u4f4d\u5730\u5339\u914d\u4f1a\u5bfc\u81f4\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u6210\u4e86O\uff08mn\uff09\uff0c\u672c\u9898100w\u7684\u6570\u636e\u8303\u56f4\u662f\u4e0d\u5141\u8bb8\u8fd9\u6837\u7684\u7b97\u6cd5\u901a\u8fc7\u7684\u3002\uff08\u4f46\u662f\u8fd8\u662f\u4f1a\u88ab\u66b4\u529bfind\uff08\uff09AC\u6389......\u771f\u7684\u4e0d\u7528\u5f3a\u5316\u4e00\u4e0b\u6570\u636e\u4e48\uff1f\uff09\n\n\u90a3\u4e48\u5e94\u8be5\u600e\u4e48\u6837\u624d\u80fd\u5199\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\u76f4\u63a5\u4e00\u904d\u5339\u914d\u5b8c\u6210\u5462\uff1f\u8ba9\u6211\u4eec\u5148\u7b80\u5355\u7684\u6765\u8bd5\u4e00\u8bd5\u3002\n\n\u5bf9\u4e8e\u6587\u672c\u4e32a\uff1aabaabaa \u548c\u5339\u914d\u4e32b\uff1aaba \u5982\u679c\u6211\u4eec\u5728\u5339\u914d\u5b8c\u7b2c\u4e00\u4f4d\u4ee5\u540e\uff0c\u76f4\u63a5\u4ece\u7b2c\u56db\u4f4d\u5373\u521a\u624d\u5339\u914d\u5b8c\u6210\u4ee5\u540e\u7684\u4e0b\u4e00\u4f4d\u5f00\u59cb\u5339\u914d\uff08x\u8868\u793a\u8be5\u4f4d\u5df2\u7ecf\u5339\u914d\u5b8c\u6210\uff09\uff0c\u4f1a\u53d1\u73b0\uff1a\n\n#### abaabaa\n\n#### xxxaba\n\n\u8c8c\u4f3c\u5e76\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\uff1f\u4f46\u662f\u5982\u679c\u6211\u4eec\u6362\u4e00\u7ec4\u6570\u636eababa\u548caba\n\n#### ababa\n\n#### xxxaba\uff08b\u8d8a\u754c\u4e86\uff0c\u7ed3\u675f\u5339\u914d\uff0c\u4f46\u662f\u8fd9\u6837\u5b50\u5c31\u5c11\u4e863\u8fd9\u4e2a\u7b54\u6848\uff09\n\n \u5f88\u663e\u7136\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u662f\u9519\u8bef\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5c06\u8981\u4f7f\u7528\u4e00\u79cd\u7b97\u6cd5\uff0c\u8ba9\u5b83\u53ef\u4ee5\n### \u4e0d\u8df3\u8fc7\u91cd\u53e0\u90e8\u5206\u8fdb\u884c\u5339\u914d\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u8ba9\u6211\u4eec\u56de\u5230aba\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e0a\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u4ed6\u7684\u7b2c\u4e00\u4f4d\u548c\u6700\u540e\u4e00\u4f4d\u90fd\u662fa\uff0c\u6240\u4ee5\u4ed6\u81ea\u8eab\u662f\u6709\u91cd\u53e0\u90e8\u5206\u7684\uff0c\u8fd9\u5bfc\u81f4\u4e86aba\u4e0d\u53ef\u4ee5\u5728\u5339\u914d\u5b8c\u6210\u540e\u76f4\u63a5\u4ece\u5b8c\u6210\u5904\u7684\u4e0b\u4e00\u4f4d\u7ee7\u7eed\u5f00\u59cb\u5339\u914d\uff0c\u800c\u662f\u5e94\u8be5\u4ece\u5b57\u7b26\u4e32a\u7684\u7b2c3\u4f4d\u7ee7\u7eed\u5339\u914d\u3002\n### \u90a3\u4e48\u600e\u4e48\u6837\u5224\u65ad\u4efb\u610f\u5b57\u7b26\u4e32\u81ea\u5df1\u7684\u5bf9\u79f0\u6027\u5462\uff0c\u8ba9\u4ed6\u81ea\u5df1\u5339\u914d\u81ea\u5df1\u5c31\u597d\u4e86\uff0c\u8fd9\u5c31\u662fnext\u6570\u7ec4\n\n\u5982\u679c\u7528\u6211\u4eec\u7684\u65b9\u6cd5\u6765\u7406\u89e3\u7684\u8bdd\uff0c\u6c42\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684next\u6570\u7ec4\uff0c\u6211\u4eec\u9996\u5148\u5f97\u77e5\u9053\u5b83\u7684\u6240\u6709\u524d\u7f00\u5b50\u4e32\uff08\u524d\u7f00\u5b50\u4e32\u5c31\u662f\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4f4d\u53d6\u5230\u7b2cn\u4f4d\u6240\u5f97\u7684\u5b57\u7b26\u4e32\uff09\uff0c\u4ee5abaca\u4e3a\u4f8b\uff0c\u5b83\u7684\u6240\u6709\u524d\u7f00\u5b50\u4e32\uff1a\n1. a\n1. ab\n1. aba\n1. abac\n1. abaca\n\n\u663e\u7136\uff0c1\u6ca1\u6709\u524d\u540e\u91cd\u53e0\u7684\u90e8\u5206\uff08\u5907\u6ce8\uff1a\u91cd\u53e0\u90e8\u5206\u4e0d\u53ef\u4ee5\u662f\u5b83\u81ea\u5df1\uff0c\u5426\u5219\u5c31\u4f1a\u4e0d\u505c\u7684\u5339\u914d\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff09\uff1b\n\n2\u4e5f\u6ca1\u6709\uff1b\n\n3\u6709\u91cd\u53e0\u90e8\u5206\u5c31\u662f\u7b2c\u4e00\u4f4d\uff0c\u5373b[1]\u548cb[3]\u662f\u4e00\u6837\u7684;\n\n4\u6ca1\u6709\uff08\u597d\u4e0d\u5bb9\u6613\u6512\u8d77\u6765\u7684\u524d\u540e\u91cd\u53e0\u88abc\u6bc1\u4e86QAQ\uff09\uff1b\n\n5\u6709\uff0c\u662f\u7b2c\u4e00\u4f4d\u3002\n\n\u8fd9\u6837\u5b50\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u65f6\u5931\u8d25\u7684\u5339\u914d\uff08\u53ef\u4ee5\u770b\u4f5c\u5339\u914d\u4e32b\u7684\u5176\u4e2d\u4e00\u4e2a\u524d\u7f00\u5b50\u4e32\u5931\u53bb\u5339\u914d\uff09\uff0c\u6211\u4eec\u90fd\u6709\u5b83\u81ea\u8eab\u7684\u91cd\u53e0\u90e8\u5206\uff0c\u53ef\u4ee5\u4ece\u6b63\u786e\u4f4d\u7f6e\u91cd\u65b0\u5339\u914d\u3002\n\n\uff08\u6bd4\u5982\u6570\u636ea=ababacab,b=abaca\uff1bb\u5728\u7b2c\u4e09\u4f4d\u5931\u53bb\u5339\u914d\u65f6\uff0c\u6211\u4eec\u5c06\u4ecea\u7684\u7b2c\u4e09\u4f4d\u91cd\u65b0\u7ee7\u7eed\u5339\u914d\uff0c\u540c\u65f6\u56e0\u4e3a\u5b50\u4e32aba\u7684\u524d\u540e\u91cd\u53e0\uff0c\u7b2c\u4e09\u4f4d\u53ef\u4ee5\u89c6\u4e3a\u5df2\u7ecf\u5339\u914d\u5b8c\u6210\uff0c\u6240\u4ee5\u76f4\u63a5\u4ecea\u76843+1\u4f4d\u548cb\u76841\u4f4d\u5f00\u59cb\u5339\u914d\uff09\n\n\u6240\u4ee5\u5c31\u4e0d\u7528\u62c5\u5fc3\u8df3\u8fc7\u5566\uff01\n\n\u800c\u6c42\u524d\u7f00\u6570\u7ec4next\u7684\u4ee3\u7801\u5982\u4e0b\uff0c\u5176\u5b83\u5de8\u4f6c\u7684\u9898\u89e3\u91cc\u7684\u4ee3\u7801\u80af\u5b9a\u6bd4\u6211\u7684\u8981\u597d\u5462qwq\n```\n    void getnext(){\n    \tint p=0;next[1]=0;//p\u8868\u793a\u5f53\u524d\u5931\u914d\u6307\u9488\u6240\u5728\u4f4d\u7f6e\uff08next\u6240\u6307\u7684b\u7684\u4f4d\u7f6e\uff09next[1]\u7531\u4e8e\u53ea\u6709\u4e00\u4e2a\u5b57\u6bcd\u6240\u4ee5\u80af\u5b9a\u662f0\uff080\u4ee3\u8868\u8be5\u5b50\u4e32\u6ca1\u6709\u91cd\u53e0\uff09\n    \tfor(int i=2;i<=bl;i++){\n     \t    while(p&&b[i]!=b[p+1]) p=next[p];\n    \t    if(b[p+1]==b[i]) p++;\n    \t    next[i]=p;\n    \t}\n    \treturn;\n    } \n```    \n\u8ba9\u6211\u4eec\u5148\u628a\u4ee3\u7801\u5b9e\u73b0\u7684\u539f\u7406\u653e\u4e00\u8fb9\uff0c\u5148\u770b\u4e00\u4e0b\u5982\u679c\u6211\u4eec\u77e5\u9053b\u7684next\u6570\u7ec4\u4ee5\u540e\u4f1a\u600e\u4e48\u6837\u5427~\uff08\u8fd8\u662f\u7528\u521a\u624d\u7684\u6570\u636e\uff09\n\n1. #### ababa\n\n   #### aba\uff08\u7b2c\u4e00\u6b21\u5339\u914d\u7ed3\u675f\uff09\n1. #### ababa\n\n   #### xxaba\uff08\u7b2c\u4e8c\u6b21\u5339\u914d\u7ed3\u675f\uff09\n### \u5b8c\u7f8e\u89e3\u51b3\u4e86\u55b5\uff08>w<\uff09\uff01\n\n\u90a3\u4e48\u4e0b\u9762\u5f00\u59cb\u89e3\u6790getnext\uff08\uff09\u51fd\u6570\uff1a\n\n\u65b9\u6cd5\u4e00\u3001\u66b4\u529b\u5339\u914d\uff0c\u5c31\u662f\u8ba9b\u4ece\u81ea\u5df1\u7684\u7b2c\u4e8c\u4f4d\u5230\u7b2cn\u4f4d\u5f00\u59cb\u7528\u81ea\u5df1\u8fdb\u884c\u5339\u914d\uff08\u5f88\u6162\uff09\n\n\u65b9\u6cd5\u4e8c\u3001\uff08\u6b63\u89e3\uff09\u9996\u5148\uff0c\u4efb\u4f55\u4e00\u4e2a\u5355\u4e00\u5b57\u6bcd\u6ca1\u6709\u524d\u7f00\u6570\u7ec4\uff08~~\u6613\u8bc1~~\uff09\uff0c\u8fd9\u6837\uff0c\u4e00\u6b65\u6b65\u5f80\u540e\u5339\u914d\u7684\u8bdd\uff0c\u6bcf\u5f53\u5931\u914d\uff0c\u5c31\u56de\u5230\u5931\u914d\u4f4d\u7f6e\u7684next\u503c\u6240\u6307\u5411\u7684\u4f4d\u7f6e\u91cd\u65b0\u5339\u914d\u76f4\u5230\u5339\u914d\u5b8c\u6210\u6216\u8005\u53d1\u73b0\u5b83\u6ca1\u6709\u91cd\u53e0\uff08\u4e5f\u5c31\u662fp\u53d8\u6210\u4e860\uff09\n\n\u4e8e\u662f\u6700\u9ebb\u70e6\u7684getnext\uff08\uff09\u5b8c\u6210\u5566~\u90a3\u4e48\u7ec8\u4e8e\u5230\u4e86\u4e0a\u4ee3\u7801\u7684\u65f6\u5019\uff1a\n```\n#include <iostream>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nint next[1000005];\nint al,bl; \nchar s,a[1000005],b[1000005];\nvoid getnext(){\n    int p=0;next[1]=0;\n    for(int i=2;i<=bl;i++){\n        while(p&&b[i]!=b[p+1]) p=next[p];\n        if(b[p+1]==b[i]) p++;\n        next[i]=p;\n    }\n    return;\n} \nvoid KMP(){\n    int p=0;\n    for(int i=1;i<=al;i++){\n        while(p&&b[p+1]!=a[i]) p=next[p];\n        if(b[p+1]==a[i]) p++;\n        if(p==bl){\n            cout<<i-bl+1<<endl;p=next[p];\n        }\n    }\n    for(int i=1;i<=bl;i++) cout<<next[i]<<\" \";\n    return;\n}\nint main(){\n    cin>>a+1;\n    al=strlen(a+1);\n    cin>>b+1;\n    bl=strlen(b+1);\n    getnext();\n    KMP();\n    return 0;\n}\n```\n\n## \u5f53\u7136\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u6a21\u677f\uff0c\u6211\u4eec\u6709\u66f4\u90aa\u9053\u7684\u4ee3\u7801\u6253\u6cd5\uff0c\u66b4\u529bn*m\uff01\uff01\uff01\uff01(\u7ba1\u7406\u5458\u5feb\u70b9\u5f3a\u5316\u6570\u636e\u55b5\uff01\uff01\u7f3a\u6570\u636e\u7684\u8bdd\u6211\u6709\u4e13\u95e8\u5361\u66b4\u529b\u7684\u6570\u636e\u6765\u66f4\u65b0\u55b5\uff01@1269619784zwk \uff01)\n```\n#include <iostream>\n#include <cstring>\nusing namespace std;\nint next[2000000],sl,sll,k;\nbool h[2000000];\nstring s,s1;\nvoid getnext(){\n    next[0]=-1;int j=-1;\n    for(int i=1;i<sl;i++){\n        while(j!=-1&&s[j+1]!=s[i]) j=next[j];\n        if(s[j+1]==s[i]) j++;\n        next[i]=j;\n    }\n    return;\n}\nint main(){\n    cin>>s1>>s;\n    sll=s1.length();\n    for(register int i=0;i<sll;++i){\n        if(s1[i]==s[0]){\n            k=s1.find(s,i);\n            if(!h[k+1]){\n                h[k+1]=1;\n                if(k!=-1)\n            \tcout<<k+1<<endl;\n            }\n        }\n    }\n    sl=s.length();\n    getnext();\n    for(int i=0;i<sl;i++) cout<<next[i]+1<<\" \";\n    return 0;\n} //\u8be5\u66b4\u529b\u4ee3\u7801\u5df2AC\u6240\u6709\u70b9\n```",
        "postTime": 1543617787,
        "uid": 46326,
        "name": "NekoPass",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "## Algorithm\n\n### Task\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6587\u672c\u4e32 $S$ \u548c\u4e00\u4e2a\u6a21\u5f0f\u4e32 $T$\uff0c\u6c42 $T$ \u5728 $S$ \u4e2d\u51fa\u73b0\u7684\u6240\u6709\u4f4d\u7f6e\u3002\n\n### Limitations\n\n\u8981\u6c42\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a\u7ebf\u6027\u3002\n\n### Solution\n\n\u56de\u5934\u91cd\u65b0\u5b66\u4e00\u904d~~\u770b\u6bdb\u7247~~ KMP \u7b97\u6cd5\u3002\n\n\u8bbe $X$  \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u4ee5\u4e0b\u8868\u8ff0\u4e2d\uff0c$X_u$ \u4ee3\u8868 $X$ \u7684\u7b2c $u$ \u4e2a\u5b57\u7b26\uff0c$X_{u \\sim v}$ \u4ee3\u8868 $X$ \u7684\u4ece $u$ \u8d77\u5230 $v$ \u7ed3\u675f\u7684\u5b57\u4e32\u3002\n\n\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u540e\u7f00\u4e3a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a $border$\uff0c\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u79f0\u4e3a\u6700\u957f $border$\u3002\u7279\u522b\u7684\uff0c\u4e0d\u8ba4\u4e3a\u5b57\u7b26\u4e32\u672c\u8eab\u662f\u81ea\u8eab\u7684 $border$\u3002\n\n\u6027\u8d28\uff1a\u5b57\u7b26\u4e32 $S$ \u7684 $border$ \u7684 $border$ \u4e00\u5b9a\u662f $S$ \u7684 $border$\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\u56e0\u6b64\u4e0d\u65ad\u5730\u8df3\u6700\u957f $border$ \u53ef\u4ee5\u904d\u5386\u5b57\u7b26\u4e32\u7684\u6240\u6709 $border$\n\n\u4f8b\u5982\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32 $abaab$ \u6765\u8bf4\uff0c\u5176\u552f\u4e00\u7684 $border$ \u662f $ab$\u3002\n\n\u66b4\u529b\u5339\u914d\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(|S||T|)$\uff0c\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u7b97\u6cd5\u3002\n\n\u5047\u8bbe\u5f53\u524d\u5339\u914d\u65f6 $S$ \u626b\u63cf\u5230\u4e86\u7b2c $i$ \u4f4d\uff0c $T$ \u626b\u63cf\u5230\u4e86\u7b2c $j$ \u4f4d\uff0c\u4e14 $S$ \u4ece $i$ \u5411\u524d $j$ \u4f4d\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u4e0e $T$ \u7684\u524d $j$ \u4f4d\u76f8\u540c\uff0c\u800c $S_{i + 1} \\neq T_{j+1}$\uff0c\u6211\u4eec\u79f0\u4e3a\u53d1\u751f\u4e86\u5931\u914d\u3002\n\n\u8003\u8651\u5931\u914d\u65f6\uff0c\u6307\u9488 $i$ \u4e0d\u53d8\uff0c\u53ea\u6709\u5c06\u6307\u9488 $j$ \u524d\u79fb\uff0c\u624d\u53ef\u80fd\u4ee4\u4e0b\u4e00\u4f4d\u6210\u529f\u5339\u914d\u3002\u7531\u4e8e $i$ \u4e0d\u53d8\uff0c\u6240\u4ee5\u4e0b\u4e00\u4e2a\u53ef\u80fd\u53d1\u751f\u5339\u914d\u7684\u5b57\u7b26\u4e32\u4e00\u5b9a\u662f $T_{1 \\sim j}$ \u7684\u67d0\u4e2a\u524d\u7f00 $T_{1 \\sim k}$ \u6ee1\u8db3\n\n $$T_{1 \\sim k} = S_{i - k + 1 \\sim i}$$\n\n\u5176\u4e2d\u7531\u4e8e $T_{1 \\sim k}$ \u662f $T_{1 \\sim j}$ \u7684\u5b57\u4e32\uff0c\u4e00\u5b9a\u6709 $k < j$\u3002\u7531\u4e8e $S_{1 \\sim i}$ \u7684\u540e $j$ \u4f4d\u4e0e $T$ \u7684\u524d $j$ \u4f4d\u5339\u914d\uff0c\u53c8\u6709 $k < j$\uff0c\u56e0\u6b64 $T_{1 \\sim j}$ \u7684\u540e $k$ \u4f4d\u4e00\u5b9a\u4e0e $S_{1 \\sim i}$ \u7684\u540e $k$ \u4f4d\u5373 $S_{i - k + 1 \\sim i}$ \u5339\u914d\u3002\u5f97\u51fa \n\n$$T_{j - k + 1 \\sim j} = S_{i - k + 1 \\sim i}$$\n\n\u4e0a\u9762\u4e24\u4e2a\u5f0f\u5b50\u7b49\u91cf\u4ee3\u6362\u5f97\u5230 \n\n$$T_{1 \\sim k} = T_{j - k + 1 \\sim j}$$\n\n\u7531 $border$ \u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53d1\u73b0 $T_{1 \\sim k}$ \u4e00\u5b9a\u662f $T_{1 \\sim j}$ \u7684 $border$\u3002\u6839\u636e $border$ \u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e0d\u65ad\u7684\u8df3 $T_{1 \\sim j}$ \u7684\u6700\u957f $border$ \u5373\u53ef\u627e\u5230\u4e00\u4e2a\u6700\u957f\u7684\u53ef\u4ee5\u4e0e $S_{1 \\sim i}$ \u7684\u540e\u51e0\u4f4d\u5339\u914d\u7684\u5b57\u4e32\u3002\u56e0\u6b64\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u5982\u4f55\u6c42\u4e00\u4e2a\u5b57\u7b26\u4e32 $T$ \u7684\u6240\u6709\u524d\u7f00\u7684\u6700\u957f $border$\u3002\n\n\u663e\u7136 $border_1 = 0$\u3002\u4ece\u7b2c $2$ \u4f4d\u5f00\u59cb\uff0c\u6211\u4eec\u53d1\u73b0\u95ee\u9898\u7b49\u4ef7\u4e8e\u7528 $T$\uff08\u6a21\u5f0f\u4e32\uff09 \u7684\u4e00\u4e2a\u524d\u7f00\u53bb\u5339\u914d $T_{1 \\sim i}$ \uff08\u6587\u672c\u4e32\uff09\u7684\u4e00\u4e2a\u540e\u7f00\uff0c\u6c42\u8fd9\u4e2a\u540e\u7f00\u6700\u957f\u662f\u591a\u5c11\uff0c\u800c\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u4e0e\u4e0a\u9762\u90a3\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5 **\u5b8c \u5168 \u4e00 \u81f4**\uff0c\u90fd\u662f\u4e0d\u65ad\u8df3 $border$ \u5373\u53ef\u3002\u5728 $i$ \u4e0e $j$ \u6210\u529f\u5339\u914d\u65f6\uff0c\u8bb0\u5f55 $border_i = j$\u3002\u800c\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u7531\u4e8e $j$ \u6052\u5c0f\u4e8e $i$\uff0c\u6b63\u5411\u626b\u63cf $i$ \u65f6\uff0c\u6240\u7528\u5230\u7684 $border$ \u503c\u90fd\u5df2\u7ecf\u88ab\u8ba1\u7b97\u51fa\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002\n\n\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u4e00\u4e2a\u663e\u7136\u7684\u4e8b\u5b9e\u662f\u6bcf\u6b21\u8df3 $border$ \u6a21\u5f0f\u4e32\u6307\u9488 $j$ \u90fd\u4f1a\u81f3\u5c11\u51cf\u5c11 $1$\uff0c\u800c\u5f53\u4e14\u4ec5\u5f53\u7b2c $S_{i+1}$ \u4e0e\u7b2c $T_{j+1}$ \u5339\u914d\u65f6\uff0c$j$ \u624d\u4f1a\u81ea\u589e\uff0c\u56e0\u6b64 $j$ \u4ec5\u589e\u52a0\u4e86 $O(|S|)$\uff0c\u56e0\u6b64 $j$ \u53ea\u53ef\u80fd\u51cf\u5c11 $O(|S|)$ \u6b21\uff0c\u6240\u4ee5\u8df3 $border$ \u7684\u603b\u6b21\u6570\u4e0d\u8d85\u8fc7 $O(|S|)$\uff0c\u800c\u626b\u63cf\u6574\u4e2a\u6587\u672c\u4e32\u9700\u8981 $O(|S|)$ \u7684\u65f6\u95f4\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(|S|)$\u3002\n\n## Example\n\nP3375 \u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\n\n### Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6587\u672c\u4e32 $S$ \u548c\u4e00\u4e2a\u6a21\u5f0f\u4e32 $T$\uff0c\u6c42 $T$ \u5728 $S$ \u4e2d\u51fa\u73b0\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u540c\u65f6\u8981\u6c42\u8f93\u51fa $T$ \u7684\u6bcf\u4e2a\u524d\u7f00\u7684 $border$ \u957f\u5ea6\u3002\n\n### Limitations\n\n\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 $10^6$\n\n### Solution\n\n\u677f\u677f\u9898\n\n### Code\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\nconst int maxn = 1000006;\n\nchar S[maxn], T[maxn];\nint nxt[maxn];\n\nvoid KMP(char *A, char *B, int x, int y, const bool pt);\n\nint main() {\n  freopen(\"1.in\", \"r\", stdin);\n  scanf(\"%s\\n%s\", S + 1, T + 1);\n  int x = strlen(S + 1), y = strlen(T + 1);\n  KMP(T, T, y, y, false); KMP(S, T, x, y, true);\n  for (int i = 1; i <= y; ++i) {\n    qw(nxt[i], i == y ? '\\n' : ' ', true);\n  }\n  return 0;\n}\n\nvoid KMP(char *A, char *B, int x, int y, const bool pt) {\n  for (int j = 0, i = pt ? 1 : 2; i <= x; ++i) {\n    while (j && (B[j+1] != A[i])) j = nxt[j];\n    if (B[j+1] == A[i]) ++j;\n    if (!pt) nxt[i] = j;\n    if (j == y) {\n      qw(i - y + 1, '\\n', true);\n    }\n  }\n}\n```",
        "postTime": 1567540595,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "## \u5927\u5bb6\u80af\u5b9a\u77e5\u9053KMP\n~~\u5f53\u7136\u849f\u84bb\u4eec\u4e0d\u4f1a~~\n\n\u90a3\u4e48\u4eca\u5929\u6211\u4eec\u5c31\u6765\u8bb2\u8bb2KMP\u5427\n\n\u8fd8\u662f\u8001\u89c4\u77e9\uff0c\u5148\u4e0a~~\u4ee3\u7801~~\u6a21\u677f\n```cpp\ncin>>a>>b;\nn=a.size();\nm=b.size();\nint last=-1;\nfor(i=1;i<m;i++)\n{\n\tj=Next[i];\n\twhile(j && b[i]!=b[j]) j=Next[j];\n\tNext[i+1]=(b[i]==b[j])?j+1:0;\n}\nj=0;\nfor(i=0;i<n;i++)\n{\n\twhile(j && a[i]!=b[j]) j=Next[j];\n\tif(a[i]==b[j]) j++;\n\tif(j==m)\n\t{\n\t\tcout<<i-m+2<<endl;\n\t}\n}\n\u5982\u679c\u6709\u9700\u8981\u53ef\u4ee5\u7528counting\u51fd\u6570\u6765\u8ba1\u6570 \n```\n\u8ba1\u6570\u7684\u6a21\u677f\u5728\u8fd9\u91cc\n```cpp\ncounting=0;\ncin>>b;\nn=a.size();\nm=b.size();\nint last=-1;\nfor(i=1;i<m;i++)\n{\n\tj=Next[i];\n\twhile(j && b[i]!=b[j]) j=Next[j];\n\tNext[i+1]=(b[i]==b[j])?j+1:0;\n}\nj=0;\nfor(i=0;i<n;i++)\n{\n\twhile(j && a[i]!=b[j]) j=Next[j];\n\tif(a[i]==b[j]) j++;\n\tif(j==m)\n\t{\n\t\tif(i-last>=m)\n\t\t{\n\t\t\tcounting++;\n\t\t\tlast=i;\n\t\t}\n\t}\n}\ncout<<counting<<endl; \n```\n\u4e24\u4e2a\u6a21\u677f\u90fd\u4e0a\u4e86\uff0c\u90a3\u4e48\u73b0\u5728\u5f00\u59cb\u8bb2\u9898\n\n\u5148\u4e0a\u4ee3\u7801awa\n```cpp\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint n,m,i,j,Next[1000001]={0},last,counting=0;\nstring a,b;\nint main()\n{\n\tcin>>a>>b;\n\tn=a.size();\n\tm=b.size();\n\tint last=-1;\n\tfor(i=1;i<m;i++)\n\t{\n\t\tj=Next[i];\n\t\twhile(j && b[i]!=b[j]) j=Next[j];\n\t\tNext[i+1]=(b[i]==b[j])?j+1:0;\n\t}\n\tj=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\twhile(j && a[i]!=b[j]) j=Next[j];\n\t\tif(a[i]==b[j]) j++;\n\t\tif(j==m)\n\t\t{\n\t\t\tcout<<i-m+2<<endl;\n\t\t}\n\t}\n\tfor(i=1;i<=m;i++) cout<<Next[i]<<\" \";\n}\n```\n\u63a5\u4e0b\u6765\u5f00\u59cb\u8bb2\u89e3\u5566\n\n\u9996\u5148\u8f93\u5165\u4e24\u4e2astring\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5b58\u5b83\u4eec\u7684\u957f\u5ea6\n\n```cpp\nj=Next[i];\nwhile(j && b[i]!=b[j]) j=Next[j];\nNext[i+1]=(b[i]==b[j])?j+1:0;\n```\n\u8fd9\u6bb5\u73b0\u5c06j\u5b58\u5165next\u6570\u7ec4\u91cc\uff0c\u63a5\u4e0b\u6765j=next=[j]\u76f4\u5230b[i]=b[j]\n\n\u63a5\u4e0b\u6765\u7b97\u5982\u679cb[i]==b[j]\uff0c\u5219next[i+1]=j+1,\u5426\u5219next[i+1]=0;\n\n\u4e4b\u540e\u5148\u628aj\u6e05\u96f6\n\n```cpp\nwhile(j && a[i]!=b[j]) j=Next[j];\nif(a[i]==b[j]) j++;\nif(j==m)\n{\n\tcout<<i-m+2<<endl;\n}\n```\n\u63a5\u4e0b\u6765\u5982\u679ca[i]!=b[j]\u7684\u8bdd\uff0c\u628aj\u8d4b\u503c\u6210next[j]\n\n\u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u5b57\u6bcd\u76f8\u7b49\u7684\u8bdd\uff0cj++\n\n\u5982\u679cj\u5230\u5934\u4e86\uff0c\u5c31\u8f93\u51fai-m+2\n\n\u6700\u540e\u8f93\u51fanext\n\n## \u9898\u89e3\u5c31\u5230\u8fd9\u91cc\u5566\uff01\u5982\u679c\u4e0d\u4f1a\u53ef\u4ee5\u8bb0\u4e00\u4e0b\u6a21\u677f\u54c8",
        "postTime": 1565140234,
        "uid": 143064,
        "name": "charliezhi2007",
        "ccfLevel": 0,
        "title": "\u6700\u57fa\u7840\u7684KMP"
    },
    {
        "content": "# \u672c\u9898\u89e3\u4e3b\u8981\u8bb2\u89e3nxt\u6570\u7ec4\u7684\u6784\u9020\u53ca\u4f18\u5316\n\u849f\u84bb\u9898\u89e3\uff0c\u5927\u4f6c\u52ff\u55b7\n### \u76f8\u4fe1\u5927\u5bb6\u5bf9\u6734\u7d20\u7b97\u6cd5\u5df2\u7ecf\u5f88\u4e86\u89e3\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u6b65\u5165\u6b63\u9898~~\uff08\u539f\u8c05\u6211\u7684\u5077\u61d2\uff09~~\n#### \u7ea6\u5b9a\uff1a\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u7f16\u53f7\u4e3a0\uff0c\u6587\u672c\u4e3at\uff0c\u6a21\u7248\u4e3ap\uff0ct\uff0cp\u7684\u957f\u5ea6\u4e3alt\uff0clp\n\u9996\u5148\uff0ckmp\u7684\u884c\u4e3a\u5c31\u662f\u5229\u7528\u4e4b\u524d\u7684\u5339\u914d\u60c5\u51b5\uff0c\u4e0d\u79fb\u52a8t\uff0c\u53ea\u79fb\u52a8p\u6765\u5b8c\u6210\u5b57\u7b26\u4e32\u5339\u914d\n\n\n\u6240\u4ee5\u5047\u8bbe\u6709\u4e00\u4e2anxt\u6570\u7ec4\uff0c\u8868\u793a\u5f53\u5339\u914d\u5230p\u7684\u7b2cj\u53f7\u65f6\u53d1\u73b0\u4e0d\u5bf9\uff0c\u4e8e\u662f\u5c06j\u79fb\u52a8\u5230nxt[j]\u7ee7\u7eed\u5339\u914d\uff0c\u76f4\u5230j==0\uff08\u6a21\u7248\u5f00\u5934\uff0c\u8868\u793a\u8fd9\u4e2at[i]\u65e0\u6cd5\u6210\u4e3ap\u4e2d\u7684\u4efb\u4f55\u90e8\u5206\uff09\u6216\u8005t[i]==p[j]\uff08\u5339\u914d\u6210\u529f\uff09\n\n\u63a5\u4e0b\u6765\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5219++j\uff0c\u5982\u679cj==lp\uff08\u5168\u90e8\u5339\u914d\u6210\u529f\uff09\uff0c\u5219\u8f93\u51fa\u5f00\u5934\u4f4d\u7f6e\uff08i-lp+2\uff09\n\n\u4e8e\u662f\u6211\u4eec~~\u975e\u5e38\u5077\u61d2\u5730~~\u5047\u8bbe\u8fd9\u4e2anxt\u6570\u7ec4\u5df2\u7ecf\u5b8c\u6210\u4e86\uff0c\u4e8e\u662f\u5339\u914d\u4ee3\u7801\u5982\u4e0b\n```cpp\nfor (int i(0), j(0); i < lt; ++i) {\n\twhile (j&&t[i] ^ p[j])j = nxt[j];\n\tif (t[i] == p[j])++j;\n\tif (j == lp)printf(\"%i\\n\", i - lp + 2);\n}\n```\n\n------------\n\n### \u73b0\u5728\u6211\u4eec\u6765\u8003\u8651nxt\u6570\u7ec4\u7684\u6784\u9020~~\uff08\u8be5\u6765\u7684\u8fd8\u662f\u8981\u6765\u554a\uff09~~\n\u56e0\u4e3anxt\u6570\u7ec4\u5229\u7528\u4e4b\u524d\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u5f53nxt[i]>=1\u65f6p\u4e2d0~nxt[j]-1\u7684\u90e8\u5206\u4e0ej-nxt[j]~j-1\u7684\u90e8\u5206\u5fc5\u7136\u5b8c\u5168\u4e00\u6837\n\n\u9996\u5148\u5f15\u5165\u4e00\u4e2a\u53eb\u505a\u524d\u7f00\u540e\u7f00\u7684\u6982\u5ff5\uff08\u5047\u8bbe\u6709\u4e2a\u53eb\u505as\u7684\u5b57\u7b26\u4e32\uff0c\u957f\u5ea6ls\uff09\n\n _\u524d\u7f00_ \uff1a\u7a7a\uff0cs[0]\uff0cs[0]~s[1]\uff0cs[0]~s[2]\uff0cs[0]~s[3]\u2026\u2026s[0]~s[ls-2]\n \n _\u540e\u7f00_ \uff1a\u7a7a\uff0cs[ls-1]\uff0cs[ls-2]~s[ls-1]\uff0cs[ls-3]~s[ls-1]\uff0cs[ls-4]~s[ls-1]\u2026\u2026s[1]~s[ls-1]\n \n\u6ce8\u610f\uff1a\u524d\u7f00\u540e\u7f00\u53ef\u4ee5\u662f\u7a7a\uff0c\u4f46\u6574\u4e2a\u5b57\u7b26\u4e0d\u53ef\u4ee5\u662f\u524d\u7f00\u540e\u7f00\n\n**\u6240\u4ee5nxt[j]\u8868\u793a\u7684\u5c31\u662f\u5728j\u4e4b\u524d\u7684\u6700\u957f\u7684\u5b8c\u5168\u76f8\u540c\u7684\u524d\u7f00\u540e\u7f00\u957f\u5ea6\uff08\u5927\u5bb6\u8bf7\u60f3\u4e00\u60f3\uff09**\n\n\u5047\u8bbe\u6709\u5b57\u7b26\u4e32ababac\n\n\u90a3\u4e48\u5bf9\u5e94\u7684nxt\uff1a{0\uff0c0\uff0c0\uff0c1\uff0c2\uff0c3\uff0c0}\uff08\u6ce8\u610f\u8fd9\u4e0d\u542b\u5355\u8c03\u6027\uff09\n\n\u4e8e\u662f\u53ef\u4ee5\u7528\u9012\u63a8\u7684\u65b9\u6cd5\u6c42nxt\uff08\u5176\u5b9e\u5c31\u662f\u7528\u81ea\u5df1\u5339\u914d\u81ea\u5df1\uff09\uff08\u521d\u59cb\u5316nxt[0]=nxt[1]=0\uff0ci=1\uff0cj=0\uff09\n\n\u9996\u5148\u50cf\u524d\u9762\u4e00\u6837\uff0c\u4e00\u76f4j=nxt[j]\u76f4\u5230\u8dd1\u5230\u5f00\u5934\u6216\u8005p[i]==p[j]\uff08\u5339\u914d\u6210\u529f\uff09\n\n\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u90a3\u4e48nxt[i+1]=j+1\uff1b\u5426\u5219nxt[i+1]=0\n\n\u6700\u540ej=nxt[++i]\uff0c\u4e3a\u4e0b\u6b21\u9012\u63a8\u4f5c\u51c6\u5907\uff0c\u76f4\u5230i==lp\n\n\u6784\u9020nxt\u6570\u7ec4\u4ee3\u7801\u5982\u4e0b\n```cpp\nfor (int i(1), j(0); i < lp; j = nxt[++i]) {\n    while (j&&p[i] ^ p[j])j = nxt[j];\n    if (p[i] == p[j])nxt[i + 1] = j + 1;\n}\n```\n\u4e8e\u662f\u4e11\u964b\u7684AC\u4ee3\u7801\n```\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nchar t[1000001], p[1000001];\nint nxt[1000001], lt, lp;\nint main() {\n    scanf(\"%s%s\", t, p), lt = strlen(t), lp = strlen(p);\n    for (int i(1), j(0); i < lp; j = nxt[++i]) {\n        while (j&&p[i] ^ p[j])j = nxt[j];\n        if (p[i] == p[j])nxt[i + 1] = j + 1;\n    }\n    for (int i(0), j(0); i < lt; ++i) {\n        while (j&&t[i] ^ p[j])j = nxt[j];\n        if (t[i] == p[j])++j;\n        if (j == lp)printf(\"%i\\n\", i - lp + 2);\n    }\n    for (int i(1); i <= lp; ++i)printf(\"%i \", nxt[i]);\n    getchar(), getchar(); return 0;\n}\n```\n\n------------\n\n## \u6ce8\u610f\uff01\uff01\u8fd8\u6ca1\u5b8c\uff01\uff01\n### \u5176\u5b9e\u4e0a\u6587\u6839\u672c\u4e0d\u662f\u6b63\u7248kmp\u7b97\u6cd5~~\uff08\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48AC\uff09~~\uff0c\u800c\u662f\u672a\u4f18\u5316\u7684mp\u7b97\u6cd5\uff0c\u6b63\u7248kmp\u5bf9nxt\u6570\u7ec4\u7684\u6784\u9020\u505a\u4e86\u4f18\u5316~~\uff08\u8bf4\u5b9e\u5728\u4e5f\u6ca1\u4ec0\u4e48\uff09~~\n\u56e0\u4e3a\u5f53\u5339\u914d\u5931\u8d25\u65f6\uff0cj\u8981\u79fb\u5230nxt[j]\uff0c\u4f46\u5982\u679cp[j]==p[nxt[j]]\uff0c\u90a3\u4e48\u5339\u914d\u5fc5\u7136\u53c8\u5931\u8d25\uff0c\u8fd9\u5c31\u505a\u4e86\u65e0\u8c13\u7684\u5de5\u4f5c\n\n\u6240\u4ee5\u9012\u63a8\u65f6\uff0c\u5982\u679cp[i+1]==p[j+1]\uff0c\u90a3\u4e48nxt[i+1]\u5e94\u8be5=nxt[j+1]\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u4f18\u5316\u7684nxt\u6784\u9020\u4ee3\u7801\n```cpp\nfor (int i(1), j(0); i < lp;) {\n\twhile (j&&p[i] ^ p[j])j = nxt[j];\n\tif (p[i++] == p[j++])nxt[i] = (p[i] ^ p[j] ? j : nxt[j]);\n\telse j = 0;\n}\n```\n\u7136\u540e\u5c31\u662f\u4f18\u5316\u7684\u5168\u90e8\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\nchar t[1000001], p[1000001];\nint nxt[1000001], lt, lp;\nint main() {\n    scanf(\"%s%s\", t, p), lt = strlen(t), lp = strlen(p);\n    for (int i(1), j(0); i < lp;) {\n        while (j&&p[i] ^ p[j])j = nxt[j];\n        if (p[i++] == p[j++])nxt[i] = (p[i] ^ p[j] ? j : nxt[j]);\n        else j = 0;\n    }\n    for (int i(0), j(0); i < lt; ++i) {\n        while (j&&t[i] ^ p[j])j = nxt[j];\n        if (t[i] == p[j])++j;\n        if (j == lp)printf(\"%i\\n\", i - lp + 2);\n    }\n    for (int i(1); i <= lp; ++i)printf(\"%i \", nxt[i]);\n    getchar(), getchar(); return 0;\n}\n```\n\u672c\u4eba\u6d1b\u8c37\u6d4b\u8bd521\u5206\uff08\u610f\u6599\u4e4b\u4e2d\uff0c\u662f\u56e0\u4e3anxt\u6570\u7ec4\u53d8\u4e86\uff09\uff0c\u4f46\u6839\u636e\u4e0e\u524d\u6587\u7a0b\u5e8f\u7684\u5bf9\u62cd\uff0c\u5728\u5339\u914d\u4e0a\u6ca1\u6709\u95ee\u9898\uff0c\u4ec5\u4f9b\u53c2\u8003\uff0c\u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u671b\u5927\u4f6c\u4eec\u591a\u591a\u6307\u6559",
        "postTime": 1533477656,
        "uid": 66199,
        "name": "Bring",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "KMP\u662f\u4e00\u4e2a\u4f18\u79c0\u7684\u5b57\u7b26\u4e32\u7b97\u6cd5(\u4e0d\u4f18\u79c0\u6211\u4eec\u5e72\u561b\u8981\u5b66)\n\n\u7136\u540e\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u6a21\u677f\u3002\u3002\u3002\n\n\u5982\u679cNext\u6570\u7ec4\u7406\u89e3\u4e0d\u662f\u5f88\u597d\u7684\u8bdd\uff0c\u6211\u5199\u4e86\u7bc7\u535a\u5ba2~~\uff08\u5c3d\u7ba1\u53ef\u80fd\u8bb2\u7684\u4f9d\u65e7\u4e0d\u662f\u5f88\u6e05\u695a\uff09~~\n\n\u5730\u5740\uff1ahttp://blog.csdn.net/qq\\_30974369/article/details/74276186\n\n~~\u5bf9\u4e8eKMP\uff0c\u4e0d\u7406\u89e3\u7684\u8bf7\u591a\u591a\u624b\u7b97~~\n\n\u7406\u89e3\u4e86next\u6570\u7ec4\uff0cKMP\u5c31\u53d8\u5f97\u5341\u5206\u7b80\u5355\uff08\u8ddfAC\u81ea\u52a8\u673a\u7406\u89e3\u4e86\u5931\u914d\u6307\u9488\u4e00\u6837\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int MAX=1001;\nint Next[MAX];\nvector<int> Ans;\ninline void GetNext(string s)//\u83b7\u5f97\u5b57\u7b26\u4e32s\u7684next\u6570\u7ec4\n{\n    int l=s.length(),t;\n    Next[0]=-1;//\u5982\u679c\u57280\u4f4d\u7f6e\u5931\u914d\u5219\u662f\u5411\u4e0b\u79fb\u52a8\u4e00\u4f4d\n    for(int i=1;i<l;++i)//\u4f9d\u6b21\u6c42\u89e3\u540e\u9762\u7684next\u6570\u7ec4\n    {\n        t=Next[i-1];\n        while(s[t+1]!=s[i]&&t>=0)\n            t=Next[t];\n        if(s[t+1]==s[i])\n            Next[i]=t+1;\n        else\n            Next[i]=-1;\n    }\n}\ninline void KMP(string s1,string s2)\n{\n    GetNext(s2);\n    int l1=s1.length();\n    int l2=s2.length();\n    int i=0,j=0;\n    while(j<l1)\n    {\n        if(s2[i]==s1[j])//\u5f53\u524d\u4f4d\u5339\u914d\u6210\u529f\uff0c\u7ee7\u7eed\u5339\u914d\u4e0b\u4e00\u4f4d\n        {\n            ++i;++j;\n            if(i==l2)//\u5b8c\u5168\u5339\u914d\n            {\n                Ans.push_back(j-l2+1);//\u50a8\u5b58\u7b54\u6848\n                i=Next[i-1]+1;//\u7ee7\u7eed\u5339\u914d                \n            }\n        }\n        else\n        {\n            if(i==0)//\u5728\u9996\u4f4d\u4e0d\u5339\u914d\n                j++;\n            else\n                i=Next[i-1]+1;\n        }\n    }\n}\nint main()\n{\n    string s1,s2;\n    int l;\n    cin>>s1>>s2;\n    l=s2.length();\n    KMP(s1,s2);\n    for(int i=0;i<Ans.size();++i)\n        cout<<Ans[i]<<endl;\n    for(int i=0;i<l;++i)\n        cout<<Next[i]+1<<' ';\n    cout<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1499699545,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "#\u4ee3\u7801\u662f\u6700\u6e05\u6670\u7684\u8bed\u8a00\n\n```cpp\n%:pragma GCC optimize(3)\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint i,j,len1,len2,ne[1001];\nchar s1[1000001],s2[1001];\nvoid findnext()\n{\n    for (i=2,j=0; i<=len2; i++)//i\u4e0d\u4ece1\uff08\u5f00\u5934\uff09\u5f00\u59cb\u662f\u4e3a\u4e86\u9632\u6b62\u540e\u7f00\u6700\u5927\u957f\u5ea6\u7b49\u4e8e\u524d\u7f00\u6700\u5927\u957f\u5ea6\u7b49\u4e8e\u6574\u4e32\u957f\uff0c\u81f3\u4e8ej\u90a3\u662f\u5df2\u7ecf\u5339\u914d\u7684\u524d\u7f00\u6700\u5927\u957f\u548c\u540e\u7f00\u6700\u5927\u957f \n    {    \n        while (s2[i]!=s2[j+1]&&j>0) j=ne[j];//\u5982\u679c\u5f53\u524d\u4f4d\u4e0e\u524d\u7f00\u5df2\u5339\u914d\u540e\u4e00\u4f4d\u4e0d\u76f8\u7b49\uff0c\u5c31\u9012\u5f52\u627e\u6700\u5927\u516c\u5171\u524d\u540e\u7f00\uff0c\u5426\u5219\u6700\u4f18\u8df3\u51fa******************************label 1;\n        if (s2[i]==s2[j+1]) ne[i]=++j;//\u5982\u679c\u5c3d\u53ef\u80fd\u5730\u5339\u914d\u540e\uff0c\u8fd8\u662f\u4e0d\u80fd\u4f7f\u5f53\u524d\u4f4d\u4e0e\u4e4b\u524d\u5339\u914d\u7684\u540e\u4e00\u4f4d\u76f8\u7b49\uff0c\u5c31\u628ane\u8d4b\u4e3a0\uff08\u4e0d\u8d4b\u503c\uff09\u5426\u5219\u5728\u5df2\u5339\u914d\u4f4d+1 \n    }\n}\nvoid kmp()\n{\n    for (i=1,j=0; i<=len1; i++)//\u8fd9\u91cci\u6307\u8981\u52aa\u529b\u5339\u914d\u7684\uff0cj\u6307\u5df2\u7ecf\u5339\u914d\u7684\uff1b \n    {\n        while (s1[i]!=s2[j+1]&&j>0) j=ne[j];//label1\uff08\u624b\u6bd4\u8f83\u61d2\uff09 \n        if (s1[i]==s2[j+1]) ++j;//\u5982\u679c\u5c3d\u53ef\u80fd\u5339\u914d\u540e\u8fd8\u662f\u4e0d\u5339\u914d\uff0c\u7406\u8bba\u4e0a\u5e94\u8be5j\u6e05\u96f6\uff0c{\u53ef\u6211\u4e3a\u4ec0\u4e48\u6ca1\u5199\u5462\uff1f\u56e0\u4e3aj\u5728\u4e0a\u4e00\u53e5\u8bdd\u5c31\u6e050\u4e86}\uff0c\u5426\u5219\u589e\u52a0\u5df2\u5339\u914d\u4f4d\u6570 \uff08\u5927\u62ec\u53f7\u8868\u793a\u5c42\u6b21\uff09 \n        if (j==len2) {printf(\"%d\\n\",i-len2+1); j=ne[len2];}//\u5982\u679c\u5168\u90e8\u5339\u914d\u8f93\u51fa\uff0c\u7136\u540e\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u77e5\u9053j\u7684\u6700\u5927\u516c\u5171\u524d\u540e\u7f00\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06j\u8bbe\u4e3a\u4ed6\u7684\u6700\u5927\u516c\u5171\u524d\u540e\u7f00\u7528\u4ee5\u52a0\u901f \n    }\n}\nint main()\n{\n    scanf(\"%s%s\",s1+1,s2+1);//\u4ece\u5b57\u7b26\u4e32\u7b2c\u4e00\u4f4d\u5f00\u59cb\u8bfb\uff0c\u9700\u8981\u7279\u6b8a\u5904\u7406 \n    len1=strlen(s1+1); len2=strlen(s2+1);//\u626b\u5230/0\uff08\u7ed3\u675f\u7b26\uff09\u4e4b\u524d\u626b\u4e86\u51e0\u4f4d\uff0c\u4e5f\u662f\u5b57\u7b26\u4e32\u6700\u540e\u4e00\u6709\u6548\u4f4d\u7684\u4f4d\u7f6e \n    findnext();//\u521d\u59cb\u5316ne\u6570\u7ec4 \n    kmp();//\u8fdb\u884ckmp \n    for (i=1; i<=len2; i++) printf(\"%d \",ne[i]);//\u53d4\u53d4\u53d4\u53d4\u53d4\u53d4\u53d4\u53d4\u53d4\u521d\u521d\u521d\u521d\u521d\u521d\u521d\u521d \n    return 0; \n}//\u7ecf\u8fc7\u5b9e\u6d4b\u6d1b\u8c37\u7684\u6570\u636e\u4e3a 12ms\u8fd8\u662f\u6bd4\u8f83\u5feb\u7684^_^\uff1b\n```",
        "postTime": 1495514007,
        "uid": 8742,
        "name": "zhaimingshuzms",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "\u53d1\u4e00\u4e2a\u8bef\u5bfc\u65b0\u4eba\u7684\u89e3\u6cd5\u5427\n\n\u662f\u4e00\u79cd\u57fa\u4e8ehash\u7684\u89e3\u6cd5\uff0c\n\n\u5b57\u7b26\u4e32s\u7684hash=s[0]+s[1]\\*x+s[2]\\*x^2....+s[len-1]\\*x^(len-1)\n\n\u4e8e\u662f\u53ef\u4ee5\u4e00\u6b21O(n)\u5904\u7406\u539f\u4e32\u7684\u540e\u7f00hash\n\n\u5728\u4f7f\u7528\u65f6\u5c31\u53ef\u4ee5O(1)\u6c42\u51fa\u4e00\u6bb5\u7684hash\u4e86\uff08\u9884\u5904\u7406\u597dx^len)\n\n\u8003\u8651\u53ea\u80fd\u628ahash\u4f5c\u4e3a\u552f\u4e00\u5224\u65ad\u6807\u51c6(\u6ca1\u65f6\u95f4strcmp)\n\n\u4e8e\u662f\u6211\u4eec\u8981\u60f3\u529e\u6cd5\u8ba9hash\u91cd\u5408\u7684\u6982\u7387\u5f88\u5c0f\n\n\u6240\u4ee5\u7528unsigned long long\u4fdd\u5b58hash\u503c\n\nx\u4e5f\u53ef\u4ee5\u5c3d\u91cf\u5c0f(\u6362\u4e00\u4e2a\u8d85\u5927\u7d20\u6570\u4e5f\u6ca1\u4ec0\u4e48\u7528)\n\n\u968f\u4fbf\u53d6\u4e00\u4e2ax\u6ca1\u60f3\u5230\u8fc7\u4e86\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#define HX    'F'    //\u968f\u4fbf\u627e\u7684\u4e00\u4e2a\u6570\uff0c'F'=70\ntypedef unsigned long long HSTR;\nint Next[1100];   //\u6253\u6cd5\u8f93\u51fa\u7528\u7684next\u6570\u7ec4\nchar Man[1100000];\nchar Tmp[1100];\nint la,lb;\nHSTR Hash[1100000];\nHSTR Hb;\nvoid CallNext()\n{\n    int wia,wib;\n    Next[0]=-1;\n    for(wia=1;wia<lb;++wia)\n    {\n        wib=Next[wia-1];\n        while(wib+1&&Tmp[wib+1]!=Tmp[wia])\n            wib=Next[wib];\n        if(Tmp[wib+1]==Tmp[wia])\n            Next[wia]=wib+1;\n        else\n            Next[wia]=-1;\n    }\n}\nvoid CallHash()     //\u9884\u5904\u7406\u540e\u7f00hash\n{\n    int wi;\n    for(wi=la-1;wi+1;--wi)\n        Hash[wi]=Man[wi]+Hash[wi+1]*HX;\n    HSTR px=1;\n    for(wi=1;wi<=lb;++wi)\n    {\n        Hb+=px*Tmp[wi-1];\n        px*=HX;\n    }\n}\nHSTR Px;\nvoid CMP()\n{\n    int wi;\n    Px=1;\n    for(wi=1;wi<=lb;++wi)\n        Px*=HX;\n    for(wi=0;wi<=la-lb;++wi)\n        if(Hb==Hash[wi]-Px*Hash[wi+lb])\n            printf(\"%d\\n\",wi+1);\n}\nint main()\n{\n    scanf(\"%s\",Man);\n    scanf(\"%s\",Tmp);\n    la=strlen(Man);\n    lb=strlen(Tmp);\n    CallNext();\n    CallHash();\n    CMP();\n    int wi;\n    for(wi=0;wi<lb;++wi)\n        printf(\"%d \",Next[wi]+1);\n    putchar(10);\n    return 0;\n}\n```",
        "postTime": 1494118190,
        "uid": 25508,
        "name": "Night_Aurora",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u4e2a\u5b66\u4e86\u5341\u591a\u5929KMP\u7684\u4eba\uff0c\u6211\u7ec8\u4e8e\u5b66\u4f1a\u4e86\u4e00\u4e2a\u66f4\u4f18\u79c0\u7684\u7b97\u6cd5\uff1aSunday\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<string>\nusing namespace std;\nint nxt[256]={0},l,ll,pre[1001];\nchar a[1000001],b[1001];\nvoid fai(int n)                            //\u6284\u522b\u4eba\u7684\uff0c\u56e0\u4e3aSunday\u7684\u5931\u914d\u6307\u9488\u4e0d\u4e00\u6837 \n{\n    pre[0]=-1;\n    for(int i=1,k=-1;i<n;pre[i++]=k)\n    {\n        while(k>=0&&b[i]!=b[k+1])\n            k=pre[k];\n        if(b[i]==b[k+1])\n            k++;\n    }\n}\nvoid Sunday()\n{\n    for(int i=0;i<=255;i++)        // \u5931\u914d\u6307\u9488\u521d\u59cb\u5316 \n      nxt[i]=ll+1;\n    for(int i=0;i<ll;i++)           //\u5efa\u5931\u914d\u6307\u9488\n      nxt[b[i]]=ll-i;\n    int i=0,j=0;\n    while((j<ll)&&(i<l))\n    {\n        j=0;\n        for(;j<ll&&i+j<l&&a[i+j]==b[j];++j);\n        if(j==ll)\n        {\n            cout<<i+1<<\"\\n\";\n            i++;\n            j=0;\n            continue;\n        }\n        if(i+ll>=l)\n          return ;\n        i+=nxt[a[i+ll]];\n    }\n    return ;\n}\nint main()\n{\n    cin>>a>>b;\n    l=strlen(a);ll=strlen(b);\n    fai(ll);\n    Sunday();\n    for(int i=0;i<ll;i++)\n      cout<<pre[i]+1<<\" \";\n    return 0;\n}\n```",
        "postTime": 1493186033,
        "uid": 27554,
        "name": "yeke",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "# 0x00 \u524d\u8a00\n\n\u672c\u6587\u548c\u67d0\u64ad\u653e\u8f6f\u4ef6KMPlayer\u6ca1\u6709\u4e00\u6bdb\u94b1\u5173\u7cfb\n\n# 0x01 \u5f15\u5165\u95ee\u9898\n\n\u8bbe\u60f3\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\n\n\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u8ba9\u4f60\u67e5\u627e\u5728\u6587\u672c\u4e32\u4e2d\u6a21\u5f0f\u4e32\u7684\u4f4d\u7f6e\u3002\n\n\u66b4\u529b\u505a\u6cd5\u662f\u663e\u7136\u7684\uff0c\u4e3e\u4f8b\u6765\u8bf4\uff1a\n\n\u6587\u672c\u4e32(text)\uff1a$a\\ b\\ c\\ b\\ c\\ g\\ l\\ x$\n\n\u6a21\u5f0f\u4e32(pattern): $b\\ c\\ g\\ l$\n\n\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u679a\u4e3etext\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u5e76\u4e14\u4f9d\u6b21\u4e0epattern\u4e2d\u7684\u5b57\u7b26\u4ece\u5934\u5f00\u59cb\u5339\u914d\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(nm)$\n\n# 0x02 \u53d1\u73b0\u95ee\u9898\n\n\u8fd9\u6837\u505a\u5176\u5b9e\u6709\u5f88\u591a\u5197\u4f59\u64cd\u4f5c\u3002\u6bd4\u5982\u8bf4\uff1a$b\\ c\\ g\\ l$ \u4e0etext\u4e2d\u7684 $b\\ c\\ b\\ c$ \u4e0d\u5339\u914d\uff0c\u53c8\u4ece\u7b2ctext\u7684\u7b2c\u4e94\u4e2a\u5b57\u6bcd $c$ \u5f00\u59cb\u5339\u914d\u3002\u8fd9\u6837\u505a\u662f\u663e\u7136\u4e0d\u5fc5\u8981\u7684\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6a21\u5f0f\u4e32\u662f\u4ee5  $b$ \u5f00\u5934\u7684\uff0c\u5bf9\u4e8etext\u4e2d\u7b2c\u4e94\u4e2a\u5b57\u6bcd $c$ \u663e\u7136\u6211\u4eec\u53ef\u4ee5\u4e0d\u53bb\u5339\u914d\u3002\u53d1\u73b0\u4e86\u4ec0\u4e48\u5417\uff1f\u6bcf\u6b21\u5931\u914d\u540e\u6211\u4eec\u53ea\u9700\u8981\u4ece\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u90e8\u5206\u5f00\u59cb\u5339\u914d\u5373\u53ef\u3002\u8fd9\u91cc\u770b\u4e0d\u61c2\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u53ea\u8981\u80fd\u7406\u89e3\u540e\u9762\u7684\u4f8b\u5b50\u5c31\u53ef\u4ee5\u4e86\u3002\n\n# 0x03 \u89e3\u51b3\u4e00\u90e8\u5206\u95ee\u9898\n\n$\\qquad\\qquad\\quad\\ 0\\ \\ 1\\ \\ 2\\ \\ 3\\ \\ 4\\ \\ 5\\ \\ 6\\ \\ 7\\ \\ 8\\ \\ 9\\ 10\\ 11$\n\n\u6587\u672c\u4e32(text)\uff1a $a\\ \\ b\\ \\ x\\ \\ a\\ \\ b\\ \\ c\\ \\ a\\ \\ b\\ \\ c\\ \\ a\\ \\ b\\ \\ y$\n\n$\\qquad\\qquad\\qquad\\ \\ \\ 0\\ \\ 1\\ \\ 2\\ \\ 3\\ \\ 4\\ \\ 5$\n\n\u6a21\u5f0f\u4e32(pattern)\uff1a $a\\ \\ b\\ \\ c\\ \\ a\\ \\ b\\ \\ y$\n\n\u6211\u4eec\u6709\u4e24\u4e2a\u6307\u9488i\u548cj\uff0c\u5206\u522b\u6307\u5411\u6587\u672c\u4e32\u548c\u6a21\u5f0f\u4e32\u3002\u5728i=0,j=0\u4ee5\u53cai=1,j=1\u7684\u65f6\u5019\u90fd\u5339\u914d\u4e0a\u4e86\u3002\u4f46\u662f\u5728i=2,j=2\u65f6\u5931\u914d\u4e86\u3002\u5982\u679c\u65f6\u6734\u7d20\u7b97\u6cd5\u7684\u8bdd\u4f1a\u4ee4i=1,j=0\u91cd\u65b0\u5f00\u59cb\u5339\u914d\u3002\u7136\u800c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4ee4i=3,j=0\u6765\u91cd\u65b0\u5339\u914d\u3002\u4e00\u76f4\u5230i=8,j=5\u65f6\uff0c\u5b83\u4eec\u53c8\u5931\u914d\u4e86\u3002\u6211\u4eec\u4ee4j\u7b49\u4e8e\u6a21\u5f0f\u4e32\u548c\u6587\u672c\u4e32\u5df2\u7ecf\u914d\u5bf9\u5b8c\u6210\u7684\u90e8\u5206(\u5373pattern[0]~pattern[4])\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u540e\u7f00(\u5373pattern[0,1]\u548cpattern[3,4])\u7684\u524d\u7f00\u672b\u5c3e\u90e8\u5206+1(\u53731+1=2)\u7684\u5730\u65b9\uff0c\u6b64\u65f6\u7684text[6,7]\u548cpattern[0,1]\u90fd\u662fab\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ecei=8,j=2\u5f00\u59cb\u5339\u914d\uff0c\u5c31\u53ef\u4ee5\u5339\u914d\u5230\u6a21\u5f0f\u4e32\u4e86\u3002\u8fd9\u5c31\u662fKMP\u7384\u5999\u7684\u5730\u65b9\u3002\n\n# 0x04 \u89e3\u51b3\u53e6\u4e00\u90e8\u5206\u95ee\u9898\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff1a\u6211\u4eec\u5982\u4f55\u786e\u5b9a\u6a21\u5f0f\u4e32\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u7684\u524d\u7f00\u672b\u5c3e+1\u7684\u4f4d\u7f6e\u5462\uff1f\u6211\u4eec\u8fd8\u662f\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u611f\u53d7\u3002\n\n$\\qquad\\qquad\\qquad\\ \\ \\ 0\\ \\ 1\\ \\ 2\\ \\ 3\\ \\ 4\\ \\ 5$\n\n\u6a21\u5f0f\u4e32(pattern)\uff1a $a\\ \\ b\\ \\ c\\ \\ a\\ \\ b\\ \\ y$ (\u6ca1\u9519\u5c31\u662f\u4e0a\u9762\u90a3\u4e2a\u6211\u592a\u61d2\u4e86)\n\n\u6211\u4eec\u53ef\u4ee5\u8bbe\u6570\u7ec4$next_i$\u4e3a\u4ee5 $i$ \u4e3a\u7ed3\u5c3e\u7684\u6a21\u5f0f\u4e32\u6700\u957f\u516c\u5171\u524d\u540e\u7f00\u7684\u524d\u7f00\u672b\u5c3e+1\u7684\u4f4d\u7f6e\u3002\n\n$next_0$\u663e\u7136\u4e3a0\u3002\n\n\u6211\u4eec\u4f9d\u7136\u8bbe\u4e24\u4e2a\u6307\u9488i\u548cj\uff0ci\u521d\u59cb\u5316\u4e3a0\uff0c\u5373\u6307\u5411\u6a21\u5f0f\u4e32\u7684\u5f00\u5934\u3002j\u521d\u59cb\u53161\uff0c\u5373i\u540e\u9762\u4e00\u4e2a\u3002\n\npattern[i]\u4e0d\u7b49\u4e8epattern[j]\uff0c\u4ee4next[i]=0\uff0cj+=1\n\npattern[i]\u4f9d\u7136\u4e0d\u7b49\u4e8epattern[j]\uff0c\u4ee4next[i]=0\uff0cj+=1\n\n\u6b64\u65f6pattern[i]\u7b49\u4e8epattern[j]\uff0c\u4ee4next[i]=j+1=1\uff0ci+=1\uff0cj+=1\n\n\u6b64\u65f6pattern[i]\u7b49\u4e8epettern[j]\uff0c\u4ee4next[i]=j+1=2\uff0ci+=1,j+=1\n\n\u6b64\u65f6pattern[i]\u4e0d\u7b49\u4e8epatter[j]\uff0c\u5e76\u4e14j\u4e0d\u5728\u6a21\u5f0f\u4e32\u7684\u5f00\u5934\uff0c\u4ee4j=next[j-1]=2\n\n\u6b64\u65f6pattern[i]\u4f9d\u7136\u4e0d\u7b49\u4e8epattern[j]\uff0c\u5e76\u4e14j\u4e0d\u5728\u6a21\u5f0f\u4e32\u7684\u5f00\u5934\uff0c\u4ee4j=next[j-1]=0\n\n\u6b64\u65f6pattern[i]\u4f9d\u7136\u4e0d\u7b49\u4e8epattern[j]\uff0c\u4f46\u662fj\u5df2\u7ecf\u8dd1\u5230\u5f00\u5934\u53bb\u4e86\uff0c\u4ee4i+=1\n\n\u6b64\u65f6pattern[i]\u4f9d\u7136\u4e0d\u7b49\u4e8epattern[j]\uff0c\u5e76\u4e14i\u5df2\u7ecf\u8dd1\u5230\u4e86\u5c3d\u5934\uff0c\u6c42\u89e3\u7ed3\u675f\u3002\n\n%\u51fa\u6765next\u6570\u7ec4\u662f\u8fd9\u6837\u7684:$[0,0,0,1,2,0]$\n\n# 0x05 \u89e3\u51b3\u6240\u6709\u95ee\u9898\n\n~~\u5176\u5b9e\u5c31\u662f\u653e\u4e00\u4e0b\u4ee3\u7801~~\n\n\u6211\u81ea\u8ba4\u4e3a\u8bb2\u7684\u8fd8\u662f\u6bd4\u8f83\u6e05\u695a\uff0c~~\u81f3\u5c11\u6bd4\u84dd\u4e66\u597d~~\u3002\n\n\u4ee3\u7801\u867d\u7136\u548c\u7f51\u4e0a\u5176\u4ed6\u4eba\u7684\u4e0d\u592a\u4e00\u6837\uff0c\u4e0d\u592a\u6807\u51c6\uff0c\u4f46\u8fd8\u7b97\u7b80\u6d01\uff0c~~\u81f3\u5c11\u6bd4\u84dd\u4e66\u597d~~\u3002\n\n\u603b\u4e4b\u4e00\u53e5\u8bdd\uff0c\u5b66KMP\u4e0d\u8981\u770b\u4e66\uff0c\u4e0d\u8981\u770b\u4e66\uff0c\u4e0d\u8981\u770b\u4e66\uff01\uff01\uff01\u4f1a\u6b7b\u4eba\u7684\uff01\uff01\uff01\n\n\u5bf9\u4e86\u8fd8\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u6211\u8fd9\u4efd\u4ee3\u7801\u7528std::string\u4f1aRE\uff0c~~\u9b3c\u77e5\u9053\u6211\u8c03\u4e86\u4e00\u4e0b\u5348\u53d1\u73b0\u662f\u8fd9\u4e2a\u539f\u56e0\u65f6\u5fc3\u91cc\u6709\u591a\u50bb\u903c~~\n\n\n```cpp\n/*\n * P3375\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d.cpp\n * Created by boringhacker(c20220233wgy)\n*/\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\nnamespace MAIN {\n    const int SIZE = 1000000 + 5;\n    int next[SIZE], n, m;\n    char Text[SIZE], Pattern[SIZE];\n    // string Text, Pattern; \u53bb\u4f60\u7684std::string\n\n    void GetNextVal() {\n        int i = 1, j = 0;\n        *next = 0;\n        while (i < n) {\n            if (Pattern[i] == Pattern[j])\n                next[i] = j + 1, ++i, ++j;\n            else if (j) j = next[j - 1];\n            else ++i;\n        }\n    }\n\n    void GetAnswers() {\n        int st = 0, res = -1;\n        int i = 0, j = 0, flag = 0;\n        while (true) {\n            j = st;\n            if (Text[i] == Pattern[j]) {\n            \tif (!flag) res = i + 1 - st, flag = 1;\n                if (j == n - 1) cout << res << endl, j = 0, flag = 0;\n                else ++i, ++j;\n                st = j;\n                if (i >= m) return ;\n            }\n            else {\n            \tif (j) st = next[j - 1];\n            \telse ++i;\n            \tflag = 0;\n\t\t\t}\n        }\n    }\n\n    void MAIN() {\n        cin >> Text;\n        cin >> Pattern;\n        m = strlen(Text);\n        n = strlen(Pattern);\n        GetNextVal();\n        GetAnswers();\n        for (int i = 0; i < n; ++i) cout << next[i] << ' ';\n    }\n}\n\nsigned main() {\n    MAIN::MAIN();\n    return 0;\n}\n```\n\n# \u6b22\u8fce\u6349\u866b\u5b50",
        "postTime": 1579744546,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "\u8981\u8ba1\u7b97next\u6570\u7ec4,\u7136\u540e\u4f7f\u7528kmp\u4e3b\u4f53\u5c06\u6a21\u5f0f\u5b57\u7b26\u4e32\u5de6\u53f3\u79fb\u52a8\u5230next[i]\u5904\u518d\u5339\u914d\n\n\u8ba1\u7b97\u7b2cn\u4e2a\u5b57\u7b26\u7684next\u503c\n\n\u7b2c\u4e00\u4f4d\u7684next\u503c\u5fc5\u5b9a\u4e3a-1\n\n1.\u67e5\u770b\u7b2cn-1\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684next\u503c\uff0c\u8bbe\u4e3aa\n\n2.\u5224\u65ada\u662f\u5426\u4e3a-1\uff0c\u82e5\u4e3a-1\uff0c\u5219\u7b2cn\u4e2a\u5b57\u7b26next\u503c\u4e3a0\n\n3.\u82e5\u4e0d\u4e3a-1\uff0c\u5c06\u7b2cn-1\u4e2a\u5b57\u7b26\u4e0e\u7b2ca\u4e2a\u5b57\u7b26\u6bd4\u8f83\n\n4.\u5982\u679c\u76f8\u540c\uff0c\u7b2cn\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684next\u503c\u4e3aa+1\n\n5.\u5982\u679c\u4e0d\u540c\uff0c\u4ee4a\u7b49\u4e8e\u7b2ca\u4e2a\u5b57\u7b26\u7684next\u503c\uff0c\u6267\u884c\u7b2c2\u6b65\n\n    \n    \n    \n    \n```cpp\n    #include <iostream>\n    #include <string>\n    using namespace std;\n    //\u7b97nxt\u6570\u7ec4\u5176\u5b9e\u5c31\u662f\u7b97s\u5b50\u4e32\u6700\u957f\u524d\u3001\u540e\u7f00(\u4e0d\u53ef\u4ee5\u662f\u6574\u4e2a\u5b57\u7b26\u4e32)\u76f8\u7b49\u957f\u5ea6 \n    inline void calc_next(string s,int *nxt) {\n        nxt[0]=-1;//-1\u8868\u793a\u4e0d\u5b58\u5728\u8fd9\u79cd\u524d\u540e\u7f00 \n        int k=-1;\n        for(int q=1;q<s.length();q++) {\n            while(k!=-1 && s[k+1]!=s[q]) k=nxt[k];//\u4e0b\u4e00\u4e2a\u4e0d\u540c\u5c31\u53d8\u4e3anxt[k],\u56de\u6eaf \n            if(s[k+1]==s[q]) k++; \n            nxt[q]=k;\n        }\n    }\n    int *kmp(string s,string p) {\n        int slen=s.length();\n        int plen=p.length();\n        int k=-1;//\u79fb\u52a8\u4f4d\u6570 \n        int *nxt=new int[plen];\n        calc_next(p,nxt);//\u4e00\u5b9a\u8981\u8ba1\u7b97!!!!!!!!!!!!!!!!!!!!! \n        for(int i=0;i<slen;i++) {\n            while(k!=-1 && p[k+1]!=s[i]) k=nxt[k];//\u4e0d\u5339\u914d\u5411\u524d\u79fb\n            if(p[k+1]==s[i]) k++;//\u5339\u914d\u5411\u540e\u79fb\n            if(k==plen-1) {//k\u79fb\u52a8\u5230\u6700\u540e,\u5339\u914d\u5b8c\u6210 \n                i=i-(plen-1);\n                //cout << i << endl;\n                cout << i+1 << endl;\n                k=-1;//\u7ee7\u7eed\u5339\u914d\u4e0b\u4e00\u4e2a \n                //return i-(plen-1);//\u8ba1\u7b97\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u4f4d\u7f6e \n            } \n        }\n        //return -1;//\u4e0d\u53ef\u4ee5\u5339\u914d \n        return nxt;//\u9898\u76ee\u8981\u6c42\u8f93\u51fanext\u6570\u7ec4 \n    }\n    int main() {\n        string s,p;\n        cin >> s >> p;\n        int *r = kmp(s,p);\n        //cout << r[i] << \" \";\n        for(int i=0;i<p.length();i++) cout << r[i]+1 << \" \";\n        return 0;\n}\n```",
        "postTime": 1514191314,
        "uid": 50747,
        "name": "OsvaldoAsensioLopez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1000100,M = 1100;\nint next[N];\nvoid getNext(char s[])    //\u627enext\u6570\u7ec4\n{\n    int len=strlen(s+1);    //\u786e\u4fdd\u8c03\u7528s\u4e2d\u7684\u5143\u7d20\u7684\u65f6\u5019\u662f\u4eces[1]\u5f00\u59cb\u800c\u4e0d\u662fs[0]\uff0c\u56e0\u4e3anext\u6570\u7ec4\u4ece1\u5f00\u5934 \n    for (int i=2,j=0;i<=len;i++) {\n    //\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u5339\u914d\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e00\u5b9a\u4e0d\u5b58\u5728\u524d\u7f00\uff0cj=0\u662f\u56e0\u4e3anext[0]=0\n    //next\u6570\u7ec4\u8bb0\u5f55\u7684\u662f\u5230\u7b2ci\u4f4d\u4e3a\u6b62\u524d\u9762\u8fd9\u6bb5\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u548c\u540e\u7f00\u7684\u5171\u6709\u90e8\u5206\u7684\u957f\u5ea6 \n        while (j && s[i]!=s[j+1]) j=next[j];    //\u5c31\u662f\u79fb\u52a8\u8fc7\u7a0b \n        if (s[i]==s[j+1]) j++;    //\u5982\u679c\u5339\u914d\u5c31\u7ee7\u7eed\n        next[i]=j;    //\u8868\u660e\u7b2ci\u4f4d\u7684next[i]\u7684\u503c\u662fj \n    }\n} \nvoid kmp(char s[],char t[])    //\u5728s\u4e2d\u627et\n{\n    int lens=strlen(s+1),lent=strlen(t+1);    //\u540c\u4e0a \n    for (int i=1,j=0;i<=lens;i++) {        //\u6ce8\u610f\u662f\u4eces\u7684\u7b2c\u4e00\u4f4d\u5f00\u59cb\u5339\u914d\n         while (j && s[i]!=t[j+1]) j=next[j];    //\u7ecf\u5178\u79fb\u52a8\u8fc7\u7a0b \n         if (s[i]==t[j+1]) j++;        //\u5982\u679c\u5339\u914d\u5c31\u7ee7\u7eed \n         if (j==lent) printf(\"%d\\n\",i-lent+1);        //\u8f93\u51fa\uff08\u73b0\u5728\u7684\u4f4d\u7f6e-\u9700\u8981\u5bfb\u627e\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6+1\uff09\u5c31\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e \n    } \n} \nint main()\n{\n    char a[N],b[M];\n    cin>>a+1>>b+1;\n    getNext(b);\n    kmp(a,b);\n    return 0;\n    //\u6d1b\u8c37\u8bc4\u6d4b\u6539c++\u522b\u7528c++11\uff0c\u7528\u6d41\u8f93\u5165\u8f93\u51fa\u8981\u5173\u6d41\u8f93\u5165 ios::sync_with_stdio(false) \n}\n```",
        "postTime": 1506515993,
        "uid": 26458,
        "name": "\u4f59\u4e0d\u6e21",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "..\u672c\u4eba\u6bd4\u8f83\u5f31\u6240\u4ee5\u5b8c\u5168\u770b\u4e0d\u61c2\u6c42next\u7684KMP\u505a\u6cd5\uff08\u6d1b\u8c37\u7684kmp\u548c\u4f20\u7edf\u7684\u4e0d\u540c\uff09\n\n\u6240\u4ee5\u6211\u60f3\u4e86\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\uff0c\u5916\u52a0\u6b63\u786e\u7684KMP\u5339\u914d\u3002\u4e00\u6b21AC\u4e86\u3002\n\n\n\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1aABA\n\n           next= 0 0 1\n\n\u600e\u4e48\u5224\u65adnext\u6570\u7ec4\u5462\uff1f\u7b2c\u4e00\u4e2a\u4e3a0\uff08\u4e0d\u61c2\u7684\u767e\u5ea6\uff09\uff0cnext[2]\u5224\u65adnext[1]\u548cnext[2]\uff0cnext[3]\u5224\u65adnext[1]&&next[2]\u548cnext[2]&&next[3]\uff0c\u5982\u679c\u4e0d\u7b49\u518d\u5224\u65adnext[1]\u548cnext[3]\uff0c\u662f\u5411\u4e24\u4fa7\u9010\u6e10\u51cf\u5c0f\u8303\u56f4\u7684\u3002\n\n\n\u60f3\u6cd5\u662f\u8fd9\u6837\uff0cnext\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4e00\u5b9a\u662f0\uff0c\u7136\u540e\u5269\u4e0b\u7684\u7528\u4ee5\u4e0b\u505a\u6cd5\uff08\u6211\u7684nexta[]\u4ece1\u5f00\u59cb\u800c\u4e0d\u662f\u4ece0\u5f00\u59cb\uff0c\u4f46\u662f\u5b57\u7b26\u4e32ab\u90fd\u662f\u4ece0\u5f00\u59cb\u7684\uff09\uff1ab[j-1]=b[i-k+j] -----\u4e00\u4e2a\u5f88\u516d\u516d\u7684\u65b9\u7a0b\uff0c\u7528\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u4f1aTLE\n\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n        \n    \n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nchar a[1000001],b[1001];\nint nexta[1001];\nint main()\n{\n    int na,nb,i,j,k,w,e,s;\n    scanf(\"%s%s\",a,b);\n    na=strlen(a);\n    nb=strlen(b);\n    nexta[1]=0;//\u4e0d\u7528\u89e3\u91ca\u4e0a\u9762\u4e86\u5427...\n       //\u6c42next\u6570\u7ec4\uff1a\n    for(int i=2;i<=nb;i++){//i\u4ece2\u5f00\u59cb\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2anext[1]=0\n        int k=i,ans=0;//\u5b9a\u4e49\u4e00\u4e2ak\u8bb0\u5f55\u6bcf\u4e00\u6b21\u9009\u7684\u6570\uff0cans\u4e3a\u6700\u5927\u89e3\n        while(k!=1){\n            for(int j=1;j<k;j++){\n                if(b[j-1]==b[i-k+j]){//\u8fd9\u5c31\u662f\u91cd\u8981\u7684\u5224\u65ad\u6761\u4ef6\n                    ans++;\n                }else{\n                    ans=0;\n                    break;\n                }\n            }\n            k--;\n            if(ans!=0){\n                nexta[i]=ans;//\u5982\u679c\u6709\u89e3\uff0c\u5c31\u52a0\u5165\uff08\u6b64\u65f6\u80af\u5b9a\u662f\u6700\u5927\u7684\uff09\n                k=1;//\u76f8\u5f53\u4e8e\u8df3\u51fawhile\n            }\n        }\n    }\n//\u4e0b\u9762\u5c31\u662f\u5bfb\u5e38\u7684\u5339\u914d\n    j=0;\n    for(i=0;i<na;i++)\n    {\n        while(j&&a[i]!=b[j])\n        {\n            j=nexta[j];\n        }\n        if(a[i]==b[j])\n        {\n            j++;\n        }\n        if(j==nb)\n        {\n            printf(\"%d\\n\",i-nb+2);\n        }\n    }\n    for(j=1;j<=nb;j++)\n    {\n        printf(\"%d \",nexta[j]);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1502593247,
        "uid": 20609,
        "name": "\u6e21\u6d77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "KMP\u7b97\u6cd5\u7b80\u5355\u8bf4\u5c31\u662f\u5f53\u5339\u914d\u4e0d\u6210\u529f\u7684\u65f6\u5019\u6839\u636enext\u8868\u4e2d\u7684\u503c\u8df3\u8dc3\n\n\u697c\u4e0b\u6ca1\u6709\u7528string\u7684\uff0c\u4f46\u8fd9\u9898\u7528string\u975e\u5e38\u597d\u4f7f\uff0c\u5177\u4f53\u8bf7\u89c1\u4ee3\u7801\n\n\n\n```cpp\n#include <cstring>//\u8fd9\u9898\u7528string\u975e\u5e38\u65b9\u4fbf \n#include <cstdio>\n#include <iostream>\nusing namespace std;\nstring s,s1;\nint next[1000];\nvoid get_next(string s)\n{\n    for (int k=0;k<=s.size();k++)\n    {\n        string st=s.substr(0,k+1);\n        for (int i=1;i<st.size();i++)\n        {\n            string s1=st.substr(0,i),s2=st.substr(st.size()-i,i);//\u524d\u7f00\u4e0e\u540e\u7f00 \n            if(s1==s2) next[k]=i;\n        }\n    }    \n}\nvoid match(string s,string s1)\n{\n    int l=s.size()-1,l1=s1.size()-1;\n    for (int i=0;i<=l;i++)\n    {\n        int j;\n        for (j=0;j<=l1;j++)\n            if (s[i+j]!=s1[j])\n            break;\n        if (j-1==l1)    //j\u8fd8\u662f\u52a0\u4e861\uff0c\u6240\u4ee5\u8981\u51cf1 \n        {\n            printf(\"%d\\n\",i+1);//\u5339\u914d\u6210\u529f \n            continue;\n        }\n        else\n        i+=next[j];     //\u8df3\u8dc3 \n    }\n}\nmain()\n{\n    cin>>s>>s1;\n    get_next(s1);\n    match(s,s1);\n    for (int i=0;i<s1.size();i++)\n        printf(\"%d \",next[i]);\n}\n```",
        "postTime": 1478526821,
        "uid": 17689,
        "name": "\u8fdc\u822a\u4e4b\u66f2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "* KMP\u76f8\u5173\u7684\u6982\u5ff5\u7b80\u4ecb\n\n\u524d\u7f00\u3001\u540e\u7f00\uff1a\u7565\n\n\u6a21\u5f0f\u4e32\uff1a\u5339\u914d\u7528\u7684\u4e32\uff0c\u672c\u9898\u4e2d\u4e3as2\u3002\n\n\u6587\u672c\u4e32\uff1a\u88ab\u5339\u914d\u7684\u4e32\uff0c\u672c\u9898\u4e2d\u4e3as1\n\nBorder \uff1a \u5bf9\u4e8e\u4e00\u4e2a\u4e32s\uff0c\u5f53\u5b83\u7684\u524d\u7f00s[1],s[2],s[3]\u2026\u2026s[k]\u548c\u540e\u7f00s[n - k + 1],s[n - k + 2],s[n - k + 3]\u2026\u2026s[n]\u5b8c\u5168\u76f8\u540c\u65f6\uff0c\u8fd9\u5c31\u662f\u4e32s\u7684\u4e00\u4e2a\u957f\u5ea6\u4e3ak\u7684border\u3002\u6ce8\u610f\uff1aborder\u7684\u957f\u5ea6\u4e0d\u80fd\u4e3an\uff0c\u56e0\u4e3a\u8fd9\u6ca1\u6709\u610f\u4e49\u3002\n\nCABACA\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u4e32\uff0c\u5b83\u53ea\u6709\u4e00\u4e2aborder\uff0c\u662fCA\uff0c\u800c\u957f\u5ea6\u4e3a1\u4f4d\u7684C\u548cA\u5e76\u4e0d\u5339\u914d\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4e00\u4e2a\u4e32\u6700\u957fborder\u957f\u5ea6\u4e3ax\uff0c\u90a3\u4e48\u5b83\u5e76\u4e0d\u4e00\u5b9a\u6709\u957f\u5ea6\u4e3ax-1\u7684border\u3002\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u4e00\u4e2a\u4e32\u7684\u6700\u957fborder\u53c8\u88ab\u79f0\u4e3afail\u6307\u9488\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u9700\u8981\u8ba4\u771f\u7406\u89e3\uff0c\u5426\u5219\u63a5\u4e0b\u6765\u4f60\u5f88\u6709\u53ef\u80fd\u770b\u4e0d\u61c2\u3002\n\n* KMP\u5339\u914d\u65b9\u5f0f\n\n\u4e0b\u6587\u6240\u6709a[i]\u8868\u793a\u6587\u672c\u4e32\u5f53\u524d\u5339\u914d\u5230\u7684\u70b9\uff0cb[j]\u8868\u793a\u6a21\u5f0f\u4e32\u5f53\u524d\u5339\u914d\u5230\u7684\u70b9\u3002\u9ed8\u8ba4b[1]\u5230b[j]\u4e0ea[i - j + 1]\u5230a[i]\u5b8c\u5168\u5339\u914d\u3002\n\n\u9996\u5148\uff0c\u6bcf\u6b21\u90fd\u5c06i\u5411\u53f3\u79fb\u4e00\u683c\uff0c\u8fd9\u65f6\u6709\u4e24\u79cd\u53ef\u80fd\uff1a\n\n\uff081\uff09a[i] == b[j+1]\n\n\u4e0b\u4e00\u4f4d\u4e5f\u5339\u914d\uff0c\u76f4\u63a5j++\n\n\uff082\uff09a[i] != b[j+1]\n\n\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5fc5\u7136\u5e0c\u671b\u63a5\u4e0b\u6765\u4f9d\u7136\u4fdd\u6301\u5339\u914d\uff0c\u4e14j\u8d8a\u5927\u8d8a\u597d\uff0c\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a\n\n\u6a21\u5f0f\u4e32\uff1aACABAC i = 4\n\n\u6587\u672c\u4e32\uff1aACAC j = 3\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u8981\u627e\u5230s2\u7684\u4e00\u4e2a\u524d\u7f00\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u524d\u7f00\uff08\u8bbe\u957f\u5ea6\u4e3ak\uff09\u4e0e\u6a21\u5f0f\u4e32\u7684\u4e00\u6bb5s1[i - k + 1] ~ s1[i]\u5b8c\u5168\u76f8\u540c\uff0c\u8fd9\u6837j\u5c31\u53ef\u4ee5\u53d8\u4e3ak\u3002\n\n\u5982\u679c\u8981\u4f7f\u5f97s2[1] ~ s2[k] == s1[i - k + 1] ~ s1[i]\uff0c\u90a3\u4e48s2[1] ~ s2[k - 1] \u5fc5\u987b\u548c s1[i - k + 1] ~ s1[i - 1]\u5b8c\u5168\u76f8\u540c\uff0c\u6240\u4ee5\u627e\u5230k - 1\u7684\u53ef\u884c\u503c\uff0c\u518d\u5c06s2[k]\u548cs1[i]\u505a\u6bd4\u8f83\u5c31\u597d\u3002\n\n\u800c\u73b0\u5728\u548cs1[i - k + 1] ~ s1[i - 1]\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u5c31\u662fs2\u7684\u540e\u7f00[j - k + 2] ~ s2[j]\uff0c\u68b3\u7406\u4e00\u4e0b\u903b\u8f91\u5173\u7cfb\uff1a\n\n\u5e0c\u671b\u627e\u5230\u4e00\u4e2ak\uff0c\u4f7fs1[i - k + 1] ~ s1[i - 1] == s2[1] ~ s2[k - 1],\u73b0\u5728\u5df2\u77e5s2[j - k + 2] ~ s2[j] == s1[i - k + 1] ~ s1[i - 1]\u3002\u4e5f\u5c31\u662f\u8bf4\u627e\u5230\u4e00\u4e2a\u6700\u5927\u7684k\uff0c\u4f7fs2[1] ~ s2[k - 1] == s2[j - k + 2] ~ s2[j]\n\n\u56de\u5934\u4e00\u770b\u4e0a\u9762\u7684\u5b9a\u4e49\uff0c\u8fd9\u4e2ak - 1\u4e0d\u5c31\u662fs2\u957f\u5ea6\u4e3aj\u7684\u524d\u7f00\u7684border\u5417\uff1f\u6240\u4ee5\u53ea\u9700\u8981\u53bb\u770bs2\u957f\u5ea6\u4e3aj\u7684\u524d\u7f00\u7684\u6240\u6709border\u7684\u4e0b\u4e00\u4f4d\uff0c\u662f\u5426\u548cs1[i]\u5339\u914d\u5c31\u53ef\u4ee5\u4e86\uff0c\u5339\u914d\u5c31\u76f4\u63a5\u5c06j\u8d4b\u503c\u4e3ak + 1\n\n\u4e8b\u5b9e\u4e0a\uff0cs2\u957f\u5ea6\u4e3aj\u7684\u524d\u7f00\u7684\u6b21\u957fborder\uff0c\u5c31\u662fs2\u957f\u5ea6\u4e3aj\u7684\u524d\u7f00\u7684border\u7684border\uff0c\u8bc1\u660e\u9644\u5728\u540e\u9762\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u4eba\u4f30\u8ba1\u5df2\u7ecf\u6ca1\u6709\u8010\u5fc3\u770b\u4e86\uff0c\u5148\u653e\u4e00\u4e0b\u4ee3\u7801\u3002\n\n```cpp\nfor(int i = 1;i <= n;i++){\n\twhile(s2[now + 1] != s1[i] && now){//\u4e00\u76f4\u8df3border\n\t\tnow = fail[now];\n\t}\n\tif(s2[now + 1] == s1[i]){//\u6709\u53ef\u80fdnow\u8df3\u52300\u90fd\u5339\u914d\u4e0d\u4e0a\uff0c\u76f4\u63a5now++\u4e0d\u5224\u65ad\u4f1a\u9519\n\t\tnow++;\n\t}\n\tif(now == m){\n\t    printf(\"%d\\n\",i - m + 1);\n\t}\n}\n```\n\nfail[now]\u8868\u793as2\u957f\u5ea6\u4e3anow\u7684\u524d\u7f00\u7684\u6700\u957fborder\uff0c\u867d\u7136\u8bc1\u660e\u8fc7\u7a0b\u590d\u6742\uff0c\u4f46\u4ee3\u7801\u5f88\u77ed\u3002\n\n* \u5982\u4f55\u6c42border\n\n\u5176\u5b9e\u8fd9\u91cc\u548c\u524d\u9762KMP\u5339\u914d\u539f\u7406\u5dee\u4e0d\u591a\uff0c\u5982\u679c\u770b\u5f97\u61c2\u4e0a\u9762\uff0c\u4e0b\u9762\u5e94\u8be5\u4e5f\u770b\u5f97\u61c2\u3002\n\n\u6587\u672c\u4e32\u81ea\u5df1\u5339\u914d\u81ea\u5df1\u5c31\u53ef\u4ee5\u4e86\uff08\u662f\u4e0d\u662f\u5f88\u79c0\uff09\n\n\u8fd9\u91cc\u597d\u50cf\u4e5f\u591a\u89e3\u91ca\u4e0d\u4e86\u4ec0\u4e48\uff0c\u76f4\u63a5\u7c7b\u63a8\u4e00\u4e0b\uff0c\u5982\u679c\u4f60\u770b\u4e0d\u61c2\uff0c\u80af\u5b9a\u662f\u56e0\u4e3a\u4f60\u4e0a\u9762\u4e0d\u60f3\u770b\u90a3\u4e48\u591a\u6587\u5b57\u800c\u76f4\u63a5\u8df3\u5230\u8fd9\u91cc\u4e86\u3002\n\n```cpp\nfail[1] = 0;//border\u5b9a\u4e49\u957f\u5ea6\u4e0d\u53ef\u4ee5\u4e3an\nint now = 0;\nfor(int i = 2;i <= m;i++){\n    while(s2[now + 1] != s2[i] && now){\n\t    now = fail[now];\n    }\n    if(s2[now + 1] == s2[i]){\n    \tnow++;\n    }\n\tfail[i] = now;\n}\n```\n\n* \u4e3a\u4ec0\u4e48\u6b21\u957fborder\u5c31\u662fborder\u7684border\n\n\u4f7f\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/75171.png)\n\n\u84dd\u7ebf\u8868\u793a\u539f\u4e32\uff0c\u9ec4\u7ebf\u662f\u539f\u4e32\u7684\u6700\u957fborder\uff0c\u7eff\u7ebf\u662f\u9ec4\u7ebf\u7684\u6700\u957fborder\u3002\n\n\u5047\u8bbe\u5b58\u5728\u9ed1\u7ebf\uff0c\u5b83\u662f\u84dd\u7ebf\u7684\u6b21\u957fborder\uff0c\u6839\u636e\u5b9a\u4e49\uff0c\u5176\u957f\u5ea6\u5927\u4e8e\u7eff\u7ebf\uff0c\u5c0f\u4e8e\u9ec4\u7ebf\u3002\n\n\u90a3\u4e48\u65e2\u7136\u5b83\u662f\u84dd\u7ebf\u7684border\uff0c\u6240\u4ee5\u84dd\u7ebf\u7684\u540e\u7f00\u80af\u5b9a\u4e5f\u6709\u4e00\u4e2a\u5b8c\u5168\u4e00\u6837\u7684\u5b50\u4e32\uff1b\u800c\u5b83\u53c8\u88ab\u9ec4\u7ebf\u6240\u5305\u542b\uff0c\u53f3\u8fb9\u7684\u9ec4\u7ebf\u7684\u524d\u7f00\u80af\u5b9a\u4e5f\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002\n\n\u5f88\u660e\u663e\uff0c\u53f3\u8fb9\u7684\u9ed1\u7ebf\u65e2\u662f\u9ec4\u7ebf\u7684\u524d\u7f00\uff0c\u53c8\u662f\u9ec4\u7ebf\u7684\u540e\u7f00\uff0c\u5b83\u5c31\u662f\u9ec4\u7ebf\u7684\u4e00\u4e2aborder\uff0c\u90a3\u4e48\u7eff\u7ebf\u5c31\u4e0d\u662f\u9ec4\u7ebf\u7684\u6700\u957fborder\u4e86\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u9ed1\u7ebf\uff0c\u4e5f\u5c31\u662f\u8bf4\u6b21\u957fborder\u5c31\u662fborder\u7684border\u3002\n\n* \u5173\u4e8eKMP\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n\n\u603b\u662f\u6709\u4eba\u770b\u5230for\u5957while\u5c31\u8bf4\u8fd9\u662f$n ^ 2$\u6216\u8005nm\uff0c\u6211\u4e5f\u662f\u5f88\u65e0\u8bed\uff0c\u770b\u4e00\u4e0b\u8fd9\u4e2a\u7a0b\u5e8f\u3002\n\n```cpp\nint j = 1;\nfor(int i = 1;i <= n;i++){\n   while(j > i && j > 0){\n     j--;\n   }\n   j += 2;\n}                  \n```\n\n\u8fd9\u4e2a\u96be\u9053\u662f$n ^ 2$\u7684\uff1fj\u6bcf\u6b21\u589e\u52a02\uff0c\u6bcf\u4e00\u6b21\u51cf\u5c11\u4e0d\u4f1a\u4f4e\u4e8e0\uff0c\u663e\u7136\u81f3\u591a\u53ea\u4f1a\u67092 * n\u6b21\u51cf\u5c11\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u8fd8\u662fO\uff08n\uff09\u7684\u3002\n\n\u800cKMP\u4e5f\u662f\u5982\u6b64\uff0cj\u6bcf\u6b21\u81f3\u591a\u589e\u52a01\uff0c\u6bcf\u6b21\u51cf\u5c11\u81f3\u5c11\u51cf\u5c111\uff0c\u6240\u4ee5\u6700\u591a\u4e5f\u53ea\u4f1a\u6709n\u6b21\u51cf\u5c11\uff0c\u603b\u590d\u6742\u5ea6\u8fd8\u662fO\uff08n\uff09\n\n\u7efc\u5408\u8d77\u6765\uff0c\u6c42fail O\uff08m\uff09\uff0c\u5339\u914dO\uff08n\uff09\uff0c\u603b\u590d\u6742\u5ea6O\uff08n+m\uff09\uff0c\u662f\u4e00\u79cd\u5341\u5206\u725b\u903c\u7684\u7b97\u6cd5\uff0c\u8fd8\u662f\u5b66\u4e00\u4e0b\u4e3a\u597d\u3002\n\n\u603b\u4ee3\u7801\uff08\u8fd9\u4e2a\u6709\u53d1\u7684\u5fc5\u8981\u5417\uff1f\uff09\n\n```cpp\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint n,m;\nint fail[1000005];\nchar s1[1000005],s2[1000005];\n\nint main(){\n\tscanf(\"%s%s\",&s1[1],&s2[1]);\n\tn = strlen(s1 + 1);\n\tm = strlen(s2 + 1);\n\tfail[1] = 0;\n\tint now = 0;\n\tfor(int i = 2;i <= m;i++){\n\t    while(s2[now + 1] != s2[i] && now){\n\t\t    now = fail[now];\n\t    }\n\t    if(s2[now + 1] == s2[i]){\n\t    \tnow++;\n\t    }\n\t\tfail[i] = now;\n\t}\n\tnow = 0; \n\tfor(int i = 1;i <= n;i++){\n\t\twhile(s2[now + 1] != s1[i] && now){\n\t\t\tnow = fail[now];\n\t\t}\n\t\tif(s2[now + 1] == s1[i]){\n\t\t\tnow++;\n\t\t}\n\t\tif(now == m){\n\t\t    printf(\"%d\\n\",i - m + 1);\n\t\t}\n\t}\n\tfor(int i = 1;i <= m;i++){\n\t\tprintf(\"%d \",fail[i]);\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1566879946,
        "uid": 49776,
        "name": "chenxinyang2006",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "## \u8fd9\u53ef\u662f\u6807\u51c6\u7684KMP\u7b97\u6cd5\uff01\uff01\n\n### ~~HDU\u4e0a\u6570\u636e\u8303\u56f4\u662f1000\uff0c\u66b4\u529b\u90fd\u80fd\u8fc7~~\uff0c**\u4f46\u673a\u667a\u5982\u6d1b\u8c37**\uff0c\u5c06\u6570\u636e\u8303\u56f4\u63d0\u5347\u52301000000\uff01\n\n\u5148\u6765\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bKMP\u7b97\u6cd5\uff1a\n\nKMP\u7b97\u6cd5\u662f\u4e00\u79cd\u6539\u8fdb\u7684\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5\uff0c\u7531D.E.Knuth\uff0cJ.H.Morris\u548cV.R.Pratt\u63d0\u51fa\u7684\uff0c\u56e0\u6b64\u4eba\u4eec\u79f0\u5b83\u4e3a\u514b\u52aa\u7279\u2014\u83ab\u91cc\u65af\u2014\u666e\u62c9\u7279\u64cd\u4f5c\uff08\u7b80\u79f0KMP\u7b97\u6cd5\uff09\u3002KMP\u7b97\u6cd5\u7684\u6838\u5fc3\u662f\u5229\u7528\u5339\u914d\u5931\u8d25\u540e\u7684\u4fe1\u606f\uff0c\u5c3d\u91cf\u51cf\u5c11\u6a21\u5f0f\u4e32\u4e0e\u4e3b\u4e32\u7684\u5339\u914d\u6b21\u6570\u4ee5\u8fbe\u5230\u5feb\u901f\u5339\u914d\u7684\u76ee\u7684\u3002\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u901a\u8fc7\u4e00\u4e2anext()\u51fd\u6570\u5b9e\u73b0\uff0c\u51fd\u6570\u672c\u8eab\u5305\u542b\u4e86\u6a21\u5f0f\u4e32\u7684\u5c40\u90e8\u5339\u914d\u4fe1\u606f\u3002KMP\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6O(m+n)\u3002\n\n\u5b57\u7b26\u4e32\u7684\u6a21\u5f0f\u5339\u914d\u662f\u5bf9\u5b57\u7b26\u4e32\u7684\u57fa\u672c\u64cd\u4f5c\u4e4b\u4e00\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u751f\u7269\u4fe1\u606f\u5b66\u3001\u4fe1\u606f\u68c0\u7d22\u3001\u62fc\u5199\u68c0\u67e5\u3001\u8bed\u8a00\u7ffb\u8bd1\u3001\u6570\u636e\u538b\u7f29\u3001\u7f51\u7edc\u5165\u4fb5\u68c0\u6d4b\u7b49\u9886\u57df\uff0c\u5982\u4f55\u7b80\u5316\u5176\u590d\u6742\u6027\u4e00\u76f4\u662f\u7b97\u6cd5\u7814\u7a76\u4e2d\u7684\u7ecf\u5178\u95ee\u9898\u3002\u5b57\u7b26\u4e32\u7684\u6a21\u5f0f\u5339\u914d\u5b9e\u8d28\u4e0a\u5c31\u662f\u5bfb\u627e\u6a21\u5f0f\u4e32P\u662f\u5426\u5728\u4e3b\u4e32T \u4e2d\uff0c\u4e14\u5176\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u5bf9\u5b57\u7b26\u4e32\u5339\u914d\u7684\u6548\u7387\u7684\u8981\u6c42\u8d8a\u6765\u8d8a\u9ad8\uff0c \u5e94\u4e0d\u65ad\u5730\u6539\u826f\u6a21\u5f0f\u5339\u914d\u7b97\u6cd5\uff0c\u51cf\u5c11\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\nKMP\u7b97\u6cd5\u662f\u7531D.E. Knuth\u3001J.H.Morris\u548cV.R. Pratt\u63d0\u51fa\u7684\uff0c\u53ef\u5728\u4e00\u4e2a\u4e3b\u6587\u672c\u5b57\u7b26\u4e32S\u5185\u67e5\u627e\u4e00\u4e2a\u8bcdW\u7684\u51fa\u73b0\u4f4d\u7f6e\u3002\u6b64\u7b97\u6cd5\u901a\u8fc7\u8fd0\u7528\u5bf9\u8fd9\u4e2a\u8bcd\u5728\u4e0d\u5339\u914d\u65f6\u672c\u8eab\u5c31\u5305\u542b\u8db3\u591f\u7684\u4fe1\u606f\u6765\u786e\u5b9a\u4e0b\u4e00\u4e2a\u5339\u914d\u5c06\u5728\u54ea\u91cc\u5f00\u59cb\u7684\u53d1\u73b0\uff0c\u4ece\u800c\u907f\u514d\u91cd\u65b0\u68c0\u67e5\u5148\u524d\u5339\u914d\u7684\u5b57\u7b26\u3002\u8fd9\u4e2a\u7b97\u6cd5\u662f\u7531\u9ad8\u5fb7\u7eb3\u548c\u6c83\u6069\u00b7\u666e\u62c9\u7279\u57281974\u5e74\u6784\u601d\uff0c\u540c\u5e74\u8a79\u59c6\u65af\u00b7H\u00b7\u83ab\u91cc\u65af\u4e5f\u72ec\u7acb\u5730\u8bbe\u8ba1\u51fa\u8be5\u7b97\u6cd5\uff0c\u6700\u7ec8\u7531\u4e09\u4eba\u4e8e1977\u5e74\u8054\u5408\u53d1\u8868\u3002\u8be5\u7b97\u6cd5\u51cf\u5c11\u4e86BF\u7b97\u6cd5\u4e2di\u56de\u6eaf\u6240\u8fdb\u884c\u7684\u65e0\u8c13\u64cd\u4f5c\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5\u7684\u6548\u7387\u3002\n\n#### \u73b0\u5728\u56de\u5230\u672c\u9898\u3002\n\n\u00a0 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u7ed9\u5b9a\u6587\u672c\u4e32S\u201cBBC ABCDAB ABCDABCDABDE\u201d\uff0c\u548c\u6a21\u5f0f\u4e32P\u201cABCDABD\u201d\uff0c\u73b0\u5728\u8981\u62ff\u6a21\u5f0f\u4e32P\u53bb\u8ddf\u6587\u672c\u4e32S\u5339\u914d\uff0c\u6574\u4e2a\u8fc7\u7a0b\u5982\u4e0b\u6240\u793a\uff1a\n\n1. S[0]\u4e3aB\uff0cP[0]\u4e3aA\uff0c\u4e0d\u5339\u914d\uff0c\u6267\u884c\u7b2c\u2461\u6761\u6307\u4ee4\uff1a\u201c\u5982\u679c\u5931\u914d\uff08\u5373S[i]! = P[j]\uff09\uff0c\u4ee4i = i - (j - 1)\uff0cj = 0\u201d\uff0cS[1]\u8ddfP[0]\u5339\u914d\uff0c\u76f8\u5f53\u4e8e\u6a21\u5f0f\u4e32\u8981\u5f80\u53f3\u79fb\u52a8\u4e00\u4f4d\uff08i=1\uff0cj=0\uff09\n\n![](https://img-blog.csdn.net/20140723224710203)\n\n2. S[1]\u8ddfP[0]\u8fd8\u662f\u4e0d\u5339\u914d\uff0c\u7ee7\u7eed\u6267\u884c\u7b2c\u2461\u6761\u6307\u4ee4\uff1a\u201c\u5982\u679c\u5931\u914d\uff08\u5373S[i]! = P[j]\uff09\uff0c\u4ee4i = i - (j - 1)\uff0cj = 0\u201d\uff0cS[2]\u8ddfP[0]\u5339\u914d\uff08i=2\uff0cj=0\uff09\uff0c\u4ece\u800c\u6a21\u5f0f\u4e32\u4e0d\u65ad\u7684\u5411\u53f3\u79fb\u52a8\u4e00\u4f4d\uff08\u4e0d\u65ad\u7684\u6267\u884c\u201c\u4ee4i = i - (j - 1)\uff0cj = 0\u201d\uff0ci\u4ece2\u53d8\u52304\uff0cj\u4e00\u76f4\u4e3a0\uff09\n\n\n![](https://img-blog.csdn.net/20140726213551553)\n\n  3. \u76f4\u5230S[4]\u8ddfP[0]\u5339\u914d\u6210\u529f\uff08i=4\uff0cj=0\uff09\uff0c\u6b64\u65f6\u6309\u7167\u4e0a\u9762\u7684\u66b4\u529b\u5339\u914d\u7b97\u6cd5\u7684\u601d\u8def\uff0c\u8f6c\u800c\u6267\u884c\u7b2c\u2460\u6761\u6307\u4ee4\uff1a\u201c\u5982\u679c\u5f53\u524d\u5b57\u7b26\u5339\u914d\u6210\u529f\uff08\u5373S[i] == P[j]\uff09\uff0c\u5219i++\uff0cj++\u201d\uff0c\u53ef\u5f97S[i]\u4e3aS[5]\uff0cP[j]\u4e3aP[1]\uff0c\u5373\u63a5\u4e0b\u6765S[5]\u8ddfP[1]\u5339\u914d\uff08i=5\uff0cj=1\uff09\n  \n![](https://img-blog.csdn.net/20140726213602848)\n\n  4. S[5]\u8ddfP[1]\u5339\u914d\u6210\u529f\uff0c\u7ee7\u7eed\u6267\u884c\u7b2c\u2460\u6761\u6307\u4ee4\uff1a\u201c\u5982\u679c\u5f53\u524d\u5b57\u7b26\u5339\u914d\u6210\u529f\uff08\u5373S[i] == P[j]\uff09\uff0c\u5219i++\uff0cj++\u201d\uff0c\u5f97\u5230S[6]\u8ddfP[2]\u5339\u914d\uff08i=6\uff0cj=2\uff09\uff0c\u5982\u6b64\u8fdb\u884c\u4e0b\u53bb\n  \n![](https://img-blog.csdn.net/20140726213343578)\n\n  5. \u76f4\u5230S[10]\u4e3a\u7a7a\u683c\u5b57\u7b26\uff0cP[6]\u4e3a\u5b57\u7b26D\uff08i=10\uff0cj=6\uff09\uff0c\u56e0\u4e3a\u4e0d\u5339\u914d\uff0c\u91cd\u65b0\u6267\u884c\u7b2c\u2461\u6761\u6307\u4ee4\uff1a\u201c\u5982\u679c\u5931\u914d\uff08\u5373S[i]! = P[j]\uff09\uff0c\u4ee4i = i - (j - 1)\uff0cj = 0\u201d\uff0c\u76f8\u5f53\u4e8eS[5]\u8ddfP[0]\u5339\u914d\uff08i=5\uff0cj=0\uff09\n  \n![](https://img-blog.csdn.net/20140726213353687)\n\n  6. \u81f3\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u6309\u7167\u66b4\u529b\u5339\u914d\u7b97\u6cd5\u7684\u601d\u8def\uff0c\u5c3d\u7ba1\u4e4b\u524d\u6587\u672c\u4e32\u548c\u6a21\u5f0f\u4e32\u5df2\u7ecf\u5206\u522b\u5339\u914d\u5230\u4e86S[9]\u3001P[5]\uff0c\u4f46\u56e0\u4e3aS[10]\u8ddfP[6]\u4e0d\u5339\u914d\uff0c\u6240\u4ee5\u6587\u672c\u4e32\u56de\u6eaf\u5230S[5]\uff0c\u6a21\u5f0f\u4e32\u56de\u6eaf\u5230P[0]\uff0c\u4ece\u800c\u8ba9S[5]\u8ddfP[0]\u5339\u914d\u3002\n\n![](https://img-blog.csdn.net/20140726213631208)\n\n#### \u4e0a\u9762\u5c31\u662fKMP\u7b97\u6cd5\u7684\u5177\u4f53\u64cd\u4f5c\uff0c\u8f6c\u8f7d\u81ea\uff1ahttps://blog.csdn.net/v_july_v/article/details/7041827\n\n```cpp\ncin>>str;\ncin>>pattern;\nkmp(str,pattern);\n```\n\u8fd9\u91cc\u9996\u5148\u662f\u8bfb\u5165\u548c\u8c03\u7528\n\n```cpp\nint last=-1;\nslen=strlen(s);\nplen=strlen(p);\ngetfail(p,plen);\n```\n\u5f15\u51fagetfail\u51fd\u6570\u8ba1\u7b97next\u6570\u7ec4\n\n```cpp\nint getfail(char *p,int plen)\n{\n\tNext[0]=0;\n\tNext[1]=0;\n\tfor(int i=1;i<plen;i++)\n\t{\n\t\tint j=Next[i];\n\t\twhile(j&&p[i]!=p[j]) j=Next[j];\n\t\tNext[i+1]=(p[i]==p[j])?j+1:0;\n\t}\n}\n```\ngetfail\u51fd\u6570\n\n\u4e0b\u9762\u7ed9\u51fa\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<string.h>\n#define MAXN 1000001\nusing namespace std;\nchar str[MAXN],pattern[MAXN];\nint Next[MAXN];\nint cnt;\nint slen,plen;\nint getfail(char *p,int plen)\n{\n\tNext[0]=0;\n\tNext[1]=0;\n\tfor(int i=1;i<plen;i++)\n\t{\n\t\tint j=Next[i];\n\t\twhile(j&&p[i]!=p[j]) j=Next[j];\n\t\tNext[i+1]=(p[i]==p[j])?j+1:0;\n\t}\n}\nint kmp(char *s,char *p)\n{\n\tint last=-1;\n\tslen=strlen(s);\n\tplen=strlen(p);\n\tgetfail(p,plen);\n\tint j=0;\n\tfor(int i=0;i<slen;i++)\n\t{\n\t\twhile(j&&s[i]!=p[j]) j=Next[j];\n\t\tif(s[i]==p[j]) j++;\n\t\tif(j==plen)\n\t\t{\n\t\t\tcout<<i+2-plen<<endl;\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>str;\n\tcin>>pattern;\n\tkmp(str,pattern);\n\tfor(int i=1;i<=plen;i++) cout<<Next[i]<<\" \";\n\treturn 0;\n}\n```\n\u8fd9\u4e2a\u4ee3\u7801\u6765\u81ea\u4e8e\u300a\u7b97\u6cd5\u7ade\u8d5b\uff1a\u4ece\u5165\u95e8\u5230\u8fdb\u9636\u300b\uff0c\u7c98\u4e0a\u53bb\u7684\u662f\u6211\u91cd\u6784\u4e4b\u540e\u7684\u4ee3\u7801\n\n",
        "postTime": 1565139502,
        "uid": 156297,
        "name": "\u77ed\u77ed_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "\u770b\u4e86\u5f88\u591a\u8bb2KMP\u7684\uff0c\u5168\u90fd\u6ca1\u770b\u61c2\uff08\u592a\u83dc\u4e86\uff09\uff0c\u76f4\u5230\u770b\u4e86lyd\u5927\u4f6c\u7684\u84dd\u4e66\n\n&emsp;&emsp;\u4e24\u4e2a\u5b57\u7b26\u4e32$\\;A[1\\sim N]\\;$\u548c$\\;B[1\\sim M]\\;$\uff0c\u76ee\u6807\u662f\u5224\u65ad$\\;A\\;$\u662f\u4e0d\u662f$\\;B\\;$\u7684\u5b50\u4e32\u3002\u663e\u7136\uff0c\u6700\u66b4\u529b\u7684\u529e\u6cd5\u662f\uff0c\u679a\u4e3e$\\;B\\;$\u4e2d\u6bcf\u4e00\u4e2a\u4f4d\u7f6e$\\;i\\;$, \u628a$\\;A[\\,1\\,]\\;$\u4e0e$\\;B[\\,i\\,]\\;$\u5bf9\u9f50\uff0c\u7136\u540e\u9010\u4e00\u5411\u540e\u6bd4\u8f83$A[\\,2\\,]$\u548c$\\;B[i+1]\\;...\\;$\u662f\u5426\u76f8\u7b49\u3002\u8fd9\u79cd\u529e\u6cd5\u867d\u7136\u7b80\u5355\u6613\u884c\uff0c\u4f46\u590d\u6742\u5ea6\u9ad8\u8fbe$O(MN)$, \u65e0\u6cd5\u63a5\u53d7\u3002\u4e0b\u9762\u5c1d\u8bd5\u4f18\u5316\u5b83\u3002  \n&emsp;&emsp;\u4e0b\u56fe\u662f\u5c1d\u8bd5\u5728$\\;B[1+j-i]\\;$\u5904\u5339\u914d$\\,B\\,$\u4e32\u7684\u60c5\u5f62\uff0c\u5982\u679c$\\;B[1+j-1\\sim j]\\;$\u4e0e$\\;A[1\\sim j]\\;$\u5339\u914d\uff0c\u800c$\\;B[j+1]\\;$\u4e0e$\\;A[i+1]\\;$\u5931\u914d\uff0c\u6309\u7167\u66b4\u529b\u505a\u6cd5\uff0c\u4e4b\u540e\u9700\u8981\u56de\u6eaf\uff0c\u5c1d\u8bd5\u5bf9\u9f50$\\;B[2+j-i]\\;$\u548c$\\;A[\\,1\\,]\\;$, \u91cd\u65b0\u4ece\u5934\u5339\u914d\u3002\u4ed4\u7ec6\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c**\u8fd9\u4e00\u8d9f\u5339\u914d\u548c\u4e0a\u4e00\u8d9f\u662f\u6709\u91cd\u5408\u90e8\u5206\u7684**\uff0c\u8fd9\u4e00\u8d9f\u7684$\\;A[1\\sim i-1]\\;$\u548c\u4e0a\u4e00\u8d9f\u7684$\\;A[2\\sim i]\\;$\u90fd\u5728\u548c$\\;B[2+j-i\\sim j]\\;$\u8fdb\u884c\u7740\u5339\u914d\u3002\u6240\u4ee5\uff0c\u5982\u679c\u6211\u4eec\u9884\u5148\u77e5\u9053$\\;A[1\\sim i-1]\\neq A[2\\sim i]\\;$\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u65ad\u5b9a\u8fd9\u4e00\u8d9f\u80af\u5b9a\u5931\u914d\uff0c\u56e0\u4e3a\u4e0a\u4e00\u8d9f$\\;A[2\\sim i]=B[2+j-i\\sim j]\\;$\u3002\u540c\u7406\uff0c\u518d\u4e0b\u4e00\u8d9f\u4e5f\u53ef\u4ee5\u8fdb\u884c\u8fd9\u6837\u7684\u5206\u6790\u3002\u4e8e\u662f\uff0c\u5982\u679c\u9884\u5148\u77e5\u9053\u4e86**A\u4e32\u4e2d\u4ee5i\u7ed3\u5c3e\u7684\u975e\u524d\u7f00\u5b50\u4e32\u548cA\u7684\u524d\u7f00\u5339\u914d\u7684\u6700\u957f\u957f\u5ea6$k$**\uff0c\uff08\u5982\u4e0b\u56fe\u7b2c\u4e09\u6761A\u6240\u793a\uff09\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u53bb\u5224\u65ad$\\;B[j+1]\\;$\u548c$\\;A[k+1]\\;$\u662f\u5426\u76f8\u7b49\u3002  \n\n![](https://i.loli.net/2019/07/25/5d39662d0f44522912.png)\n\n&emsp;&emsp;\u6240\u4ee5\uff0c\u63a5\u4e0b\u6765\u7684\u76ee\u6807\u5c31\u662f\uff0c\u9884\u5904\u7406$\\;A\\;$\u4e32\u4e2d\u4ee5$\\;i\\;$\u7ed3\u5c3e\u7684\u975e\u524d\u7f00\u5b50\u4e32\u548c$\\;A\\;$\u7684\u524d\u7f00\u5339\u914d\u7684\u6700\u957f\u957f\u5ea6$\\;k\\;$\uff0c\u7528\u6570\u7ec4$\\;next[\\,]\\;$\u4fdd\u5b58\u4e00\u5bf9 $(i, k)$. \u5373\uff1a\n$$next[i]=max(k),\\qquad k<i\\quad and \\quad A[i-k+1\\sim i]=A[1\\sim k]$$  \n\n&emsp;&emsp;\u4e3a\u4e86\u53d9\u8ff0\u65b9\u4fbf\uff0c\u4e0b\u9762\u79f0\u6ee1\u8db3$\\;k<i\\;$\u4e14$\\;A[i-k+1\\sim i]=A[1\\sim k]$\u7684$k$ \u201d\u5177\u6709$\\;i\\;$\u6027\u8d28\u201c\u3002\n\n&emsp;&emsp;\u663e\u7136\u66b4\u529b\u5730\u6309\u7167\u5b9a\u4e49\u6c42next\u6570\u7ec4\u590d\u6742\u5ea6\u8fc7\u5927\uff0c\u9700\u8981\u5bfb\u6c42\u4f18\u5316\u3002\n\u6b64\u65f6\uff0cKMP\u7b97\u6cd5\u7684\u53d1\u660e\u8005\u53d1\u73b0\u4e86\u4e00\u4e2a\u795e\u5947\u7684\u89c4\u5f8b\uff1a\n\n**\u5f15\u7406**  \n&emsp;&emsp;\u82e5$j_0$\u6ee1\u8db3$\\;i\\;$\u6027\u8d28\uff0c\u5373$\\;j_0<i\\;$\u4e14$\\;A[i-j_0+1\\sim i]=A[1\\sim j_0]$, \u90a3\u4e48\u5c0f\u4e8e$\\,j_0\\,$\u7684\u6700\u5927\u7684\u6ee1\u8db3$\\;i\\;$\u6027\u8d28\u7684\u6570\u662f$\\;next[j_0]\\;$\u3002\n\n**\u8bc1\u660e**\uff08\u4e0d\u559c\u63a0\u8fc7~~\uff09  \n&emsp;&emsp;\u53cd\u8bc1\u3002\u5047\u8bbe\u5b58\u5728$\\;next[j_0]<j_1<j_0\\;$,\u5176\u4e2d$\\,j_1\\,$\u6ee1\u8db3$\\,i\\,$\u6027\u8d28, \u5373$\\;j_1<i\\;$\u4e14$\\;A[i-j_1+1\\sim i]=A[1\\sim j_1]$\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a  \n![](https://i.loli.net/2019/07/26/5d3a767adcf9a69841.png)\n\n\u56fe\u4e2d\u4e0d\u662f\u9ed1\u8272\u7684\u90e8\u5206\u82e5\u989c\u8272\u76f8\u540c\u5219\u8868\u793a\u5b57\u7b26\u4e32\u76f8\u540c\u3002\u5176\u4e2d\u7b2c\u4e8c\u6bb5\u548c\u7b2c\u4e09\u6bb5\u5b58\u5728\u5171\u540c\u90e8\u5206\uff08\u9ec4+\u7eff\uff09\uff0c\u5373$\\;A[j_0-j_1+1\\sim j_0]=A[1\\sim j_1]\\;$, \u8fd9\u8868\u660e$\\;j_1\\;$\u5177\u6709$\\;j_0\\;$\u6027\u8d28\uff0c\u800c\u6839\u636e\u5b9a\u4e49\uff0c$\\;next[j_0]\\;$\u624d\u662f\u5177\u6709$\\;j_0\\;$\u6027\u8d28\u4e2d\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u4f46\u73b0\u5728$\\;j_1>next[j_0]\\;$\uff0c\u77db\u76fe\u3002   \n&emsp;&emsp;\u8bc1\u6bd5\u3002     \n    \n                   \n&emsp;&emsp;\u6240\u4ee5\uff0c\u6839\u636e\u5f15\u7406\uff0c\u5f53$\\;next[i-1]\\;$\u8ba1\u7b97\u5b8c\u4e4b\u540e\uff0c\u6211\u4eec\u7acb\u5373\u5c31\u80fd\u77e5\u9053\uff0c\u6240\u6709\u5177\u6709$\\;i-1\\;$\u6027\u8d28\u7684\u6240\u6709\u6570\u4ece\u5927\u5230\u5c0f\u4e3a\uff1a   \n$\\;next[i-1]\\;,next[next[i-1]]\\;,next[next[next[i-1]]]\\;...$  \n\u53c8\u56e0\u4e3a\uff0c\u5982\u679c$\\;j\\;$\u5177\u6709$\\;i\\;$\u6027\u8d28\uff0c\u90a3\u4e48$\\;j-1\\;$\u4e5f\u4e00\u5b9a\u5177\u6709$\\;i-1\\;$\u6027\u8d28\uff0c\uff08\u5b57\u7b26\u4e32$\\;A[i-j+1\\sim i]\\;$\u548c$\\;A[1\\sim j]\\;$\u76f8\u540c\u7684\u524d\u63d0\u662f$\\;A[i-j+1\\sim i-1]\\;$\u548c$\\;A[1\\sim j-1]\\;$\u76f8\u540c\uff09\u3002\u56e0\u6b64$\\;next[i]\\;$\u6700\u7ec8\u7684\u503c\u4e00\u5b9a\u5728$\\;next[i-1]+1\\;,next[next[i-1]]+1\\;,next[next[next[i-1]]]+1\\;...$ \u4e2d\u3002\u6240\u4ee5\u5728\u8ba1\u7b97$\\;next[i]\\;$\u7684\u65f6\u5019\uff0c\u53ea\u9700\u4ece\u5927\u5230\u5c0f\u4e00\u4e2a\u4e00\u4e2a\u9a8c\u8bc1\u5373\u53ef\u3002\n\n&emsp;&emsp;\u6240\u4ee5\uff0c$\\;next[\\,]\\;$\u6c42\u6cd5\u8fc7\u7a0b\u4e3a\uff1a   \n\n&emsp;&emsp;1. \u521d\u59cb$\\;next[1]=j=0\\;$, \u5047\u8bbe$next[1\\sim i-1]\\;$\u5df2\u7ecf\u6c42\u51fa\uff0c\u4e0b\u6c42$\\;next[i]\\;$  \n&emsp;&emsp;2. \u4e0d\u65ad\u5c1d\u8bd5\u6269\u5c55\u5f53\u524d\u7684\u5339\u914d\u957f\u5ea6$\\;j\\;$,\u5982\u679c\u5931\u8d25\uff0c\u5373\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e0d\u76f8\u7b49\uff0c\u4ee4$\\;j=next[j]\\;$, \u76f4\u5230$\\;j=0\\;$\u4e3a\u6b62  \n&emsp;&emsp;3. \u5982\u679c\u6210\u529f\uff0c$\\;j=j+1\\;$, $\\;next[i]\\;$\u503c\u5373\u4e3a$\\;j\\;$.\n\n```cpp\nnext[1] = 0;\nfor (int i = 2, j = 0; i <= n; i++)\n{\n\t//\u6bcf\u6b21\u8fdbwhile\u65f6j\u4e3a\u4e0a\u6b21next[i-1]\n\twhile (j > 0 && a[i] != a[j + 1])\n\t{\n\t\tj = next[j];//next[next[...next[i-1]]\n\t}\n\tif (a[i] == a[j + 1])//\u6392\u9664\u6700\u540e\u4e00\u6b21\u4ecd\u7136\u4e0d\u5339\u914d\uff0cj=0\u5426\u5219j\u52a0\u4e00\n\t{\n\t\tj++;\n\t}\n    next[i] = j;\n}\n```\n\u6c42\u5b8c$\\;next[\\,]\\;$\u4e4b\u540e\uff0c~~\u4e3a\u4e86\u501f\u7528\u521a\u521a\u7684\u601d\u8def\u65b9\u4fbf\u5077\u61d2~~\uff0c\u5b9a\u4e49$\\;f[\\,]$\u4e3a$\\,B\\,$\u4e2d\u4ee5$\\,i\\,$\u7ed3\u5c3e\u7684\u5b50\u4e32\u548c$\\;A\\;$\u7684\u524d\u7f00\u80fd\u591f\u5339\u914d\u7684\u6700\u957f\u957f\u5ea6\uff0c\u5373\uff1a\n$$next[i]=max(k),\\qquad k<=i\\quad and \\quad B[i-k+1\\sim i]=A[1\\sim k]$$   \n\u4e8e\u662f\u6c42$\\;f[\\,]\\;$\u7684\u65b9\u6cd5\u4e0e$\\;next[\\,]\\;$\u57fa\u672c\u76f8\u540c\n```cpp\nfor (int i = 1, j = 0; i <= m; i++)\n{\n\twhile (j > 0 && (j == n || b[i] != a[j + 1]))\n\t{\n\t\tj = next[j];\n\t}\n\tif (b[i] == a[j + 1])\n\t{\n\t\tj++;\n\t}\n    f[i] = j;\n\t//if(f[i]==n),A\u5728B\u4e2d\u51fa\u73b0\n}\n```",
        "postTime": 1564118948,
        "uid": 159730,
        "name": "Sophon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "KMP\u8fd8\u662f\u5f88\u96be\u7406\u89e3\u554a\u3002\n\n\u5199\u4e86\u4e00\u7bc7\u6781\u4e3a\u8be6\u7ec6\u7684\u7b97\u6cd5\u6559\u7a0b\u6765\u9020\u798f\u7fa4\u4f17\uff08~~\u5feb\u5938\u6211\uff0c\u5feb\u5938\u6211\uff01~~\n\n\u5b66\u5b8c$kmp$\u7384\u5b66\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u6211\u5df2\u7ecf\u5feb\u6ca1\u6709\u52c7\u6c14\u5b66\u51af\u5de8\u4f6cyy\u7684~~\u81ea\u52a8**AK**\u673a\u4e86~~\uff0c\u597d\u50cf\u6211\u786e\u5b9e\u5f88\u83dc\u554a\uff0c\u8fd9\u8fd8\u662f\u4e2a\u9ec4\u9898\u3002\n\n\u770b\u5b8c\u522b\u5fd8\u70b9\u8d5e\u554a\n\n# \u5b57\u7b26\u4e32\u5339\u914d\n\n\u4ec0\u4e48\u662f\u5b57\u7b26\u4e32\u5339\u914d\u5462\uff1f\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u6587\u672c\u4e32$test$\uff08\u4ee5\u4e0b\u7b80\u79f0\u4e3a$t$\uff09\u548c\u4e00\u4e2a\u957f\u5ea6\u4e3a$m$\u7684\u5339\u914d\u4e32$pattern$\uff08\u4ee5\u4e0b\u7b80\u79f0\u4e3a$p$\uff09\uff0c\u95ee\u5728$t$\u4e2d\u6709\u6ca1\u6709$p$\u8fd9\u4e2a\u5b50\u4e32\uff0c\u5982\u679c\u6709\uff0c\u6c42\u51fa\u5176\u5728\u6587\u672c\u4e32\u4e2d\u7684\u6240\u6709\u5339\u914d\u70b9$i$\u3002\n\n### example\uff1a\n\n$t$\uff1a\n\n| \u4e0b\u6807 | 0    | 1    | 2    | 3    | 4    | 5    | 6    | 7    | 8    |\n| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\n| $t$  | a    | b    | a    | x    | y    | a    | b    | c    | a    |\n\n$p$\uff1axyabc\n\n\u663e\u7136\uff0c$p$\u5728$t$\u4e2d\u7684\u5339\u914d\u4e3a\uff1a\n\n| \u4e0b\u6807 | 0    | 1    | 2    | 3     | 4     | 5     | 6     | 7     | 8    |\n| ---- | ---- | ---- | ---- | ----- | ----- | ----- | ----- | ----- | ---- |\n| $t$  | a    | b    | a    | **x** | **y** | **a** | **b** | **c** | a    |\n| $p$  |      |      |      | x     | y     | a     | b     | c     |      |\n\n\u4f4d\u7f6e\u5373\u4e3a$4$\u3002\n\n# \u6734\u7d20\u505a\u6cd5\n\n\u6709\u7684\u4eba\u4f1a\u8bf4\uff0cso easy\uff0c\u6211\u679a\u4e3e\u5224\u65ad\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u4e0d\u662f\u4e00\u4e2a\u5339\u914d\u70b9\uff0c\u9047\u5230\u4e0d\u5339\u914d\u7684\u505c\u6b62\u6bd4\u8f83\u76f4\u63a5\u6362\u4e2a\u4f4d\u7f6e\u4ece\u5934\u679a\u4e3e\u5f97\u4e86\u3002\n\n### \u65f6\u95f4\u590d\u6742\u5ea6\n\n\u53ef\u80fd\u7684\u5339\u914d\u70b9\u53ef\u80fd\u6709$O(m-n)$\u4e2a\uff0c\u6240\u4ee5\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(m(n-1))$\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u679a\u4e3e\u6162\u7684\u4e00\u6279(~~\u771f\u9999\u8b66\u544a~~,\u5bf9\u4e8e\u968f\u673a\u6570\u636e\uff0c\u679a\u4e3e\u5176\u5b9e\u5f88\u4f18\u79c0)\u3002\n\n# KMP\u7384\u5b66\n\n\u90a3\u4e48\u76f8\u5bf9\u4e8e\u6734\u7d20\u7b97\u6cd5\uff0c$KMP$\u5c31\u5f88\u4f18\u79c0\u4e86\u3002\u5b83\u9996\u5148\u7528$O(m)$\u7684\u65f6\u95f4\u5bf9\u6a21\u677f\u8fdb\u884c\u9884\u5904\u7406\uff0c\u7136\u540e\u7528$O(n)$\u7684\u65f6\u95f4\u5339\u914d\u3002\u90a3\u4e48\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(m+n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a$O(m)$\u3002\n\n\u867d\u7136\u4ee3\u7801\u5f88\u77ed\uff0c\u4f46\u662f\u5e76\u4e0d\u5bb9\u6613\u7406\u89e3\uff0c\u6211\u5148\u653e\u51fa\u4ee3\u7801\uff0c\u4e5f\u8bb8\u6709\u4e0d\u770b\u89e3\u91ca\u5c31\u80fd\u61c2\u7684\u5de8\u4f6c\u3002\n\n### code\n\n[\u63d0\u4ea4\u5730\u5740](<https://www.luogu.org/problemnew/show/P3375>)\n\n```c++\n#include<cstdio>\n#include<cstring>\n\nconst int maxn=1e6+10;\n\nchar c[maxn],p[maxn];\nint next[maxn];\n\nvoid find(int lc,int lp);void getfail(int lp);\n\nint main(){\n    scanf(\"%s\",c);scanf(\"%s\",p);\n    int lc=strlen(c),lp=strlen(p);\n    find(lc,lp);\n    for(int i=1;i<=lp;i++) printf(\"%d \",next[i]);\n    return 0;\n}\n\nvoid find(int lc,int lp){\n    getfail(lp);\n    int j=0;\n    for(int i=0;i<lc;i++){\n        while(j&&p[j]!=c[i]) j=next[j];\n        if(p[j]==c[i]) j++;\n        if(j==lp) printf(\"%d\\n\",i-lp+2);\n    }\n    return ;\n}\n\nvoid getfail(int lp){\n    next[0]=0; \n    for(int i=1;i<lp;i++){\n        int j=next[i];\n        while(j&&p[i]!=p[j]) j=next[j];\n        next[i+1]=p[i]==p[j]?j+1:0;\n    }\n    return ;\n}\n```\n\n\u8bb0\u5f55\uff1a\n\n![\u8349\u56fe _2_.png](https://img.langlangago.xyz/2019/04/21/5cbbc25522784.png)\n\n### \u601d\u8def\n\n\u6211\u4eec\u7528\u8fd9\u4e2a\u4f8b\u5b50\u6765\u5e2e\u52a9\u89e3\u91ca\uff1a\n\n$t$\uff1a`abcabdababcabc`\n\n$p$\uff1a`abcabc`\n\n\u5f00\u59cb\u6bd4\u8f83\uff1a\n\n```\n1.\nt:abcabdababcabc\n  |\np:abcabc\nmatch\uff01\n\n2.\nt:abcabdababcabc\n   |   \np:abcabc\nmatch\uff01\n\n3.\nt:abcabdababcabc\n    |\np:abcabc\nmatch\uff01\n\n4.\nt:abcabdababcabc\n     |\np:abcabc\nmatch\uff01\n\n5.\nt:abcabdababcabc\n      |\np:abcabc\nmatch\uff01\n\n6.\nt:abcabdababcabc\n       |\np:abcabc\nit's not a match\uff01\n```\n\n\u770b\uff01\u7b2c\u516d\u6b65\uff0c\u6bd4\u8f83`d`\u4e0e`c`\u53d1\u73b0\u4e0d\u5339\u914d\u3002\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5c06\u6a21\u677f\u4e32\u53f3\u79fb\u4e00\u4f4d\uff0c\u91cd\u65b0\u4ece$p$\u7684\u5f00\u5934\u6bd4\u8f83\u5417\uff1f\u4e0d\uff01\n\n\u6211\u4eec\u53d1\u73b0\u5728$p$\u4e2d\uff0c\u5728\u5931\u914d\u70b9`c`\u4e4b\u524d\uff0c\u6709\u76f8\u540c\u7684\u524d\u7f00\u548c\u540e\u7f00\uff0c\u5373**ab**c**ab**\uff08\u52a0\u7c97\u7684\uff09\uff0c\u8fd9\u8bf4\u660e\u6211\u4eec\u53ea\u9700\u8981\u5c06\u524d\u9762\u7684`ab`\u79fb\u5230\u540e\u9762\u7684`ab`\u5728$t$\u4e2d\u5339\u914d\u597d\u7684`ab`\u4e0b\u9762\uff0c\u76f4\u63a5\u6bd4\u8f83ab**c**ab\u4e2d\u7684c\u4e0e$t$\u4e2d\u7684d\uff0cemmm#(\u5410\u8840\u5012\u5730)\uff0c\u6211\u77e5\u9053\u8fd9\u5f88\u96be\u61c2\uff0c\u4e0d\u8981\u7d27\uff0c\u901a\u8fc7\u4f8b\u5b50\u6765\u7406\u89e3\u4e00\u4e0b\uff1a\n\n```\n6.\nt:abcabdababcabc\n       |\np:abcabc\nit's not a match\uff01\n\n\u5f00\u59cb\u79fb\u52a8\n\n7.\nt:abcabdababcabc\n       |\np:   abcabc\n```\n\n\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\uff0c\u56e0\u4e3a`ab`\u5df2\u7ecf\u6bd4\u8f83\u8fc7\uff0c\u4e14\u5df2\u7ecf\u5339\u914d\uff0c\u6240\u4ee5\u5c31\u4e0d\u9700\u8981\u518d\u6bd4\u8f83\u4e00\u6b21\u4e86\u3002\n\n\u5c31\u8fd9\u6837\u4e00\u76f4\u505a\u4e0b\u53bb\uff1a\n\n```\n7.\nt:abcabdababcabc\n       |\np:   abcabc\nit's not a match\uff01\n\u6ca1\u6709\u76f8\u540c\u7684\u524d\u540e\u7f00\n\u6240\u4ee5\uff0c\n\n8.\nt:abcabdababcabc\n       |\np:     abcabc\nit's not a match\uff01\n\n9.\nt:abcabdababcabc\n        |\np:      abcabc\nmatch\uff01\n\n10.\nt:abcabdababcabc\n         |\np:      abcabc\nmatch\uff01\n\n11.\nt:abcabdababcabc\n          |\np:      abcabc\nit's not a match\uff01\n\n12.\nt:abcabdababcabc\n          |\np:        abcabc\nmatch\uff01\n\n12.\nt:abcabdababcabc\n           |\np:        abcabc\nmatch\uff01\n\n13.\nt:abcabdababcabc\n            |\np:        abcabc\nmatch\uff01\n\n14.\nt:abcabdababcabc\n             |\np:        abcabc\nmatch\uff01\n\n15.\nt:abcabdababcabc\n              |\np:        abcabc\nmatch\uff01\n\n16.\nt:abcabdababcabc\n               |\np:        abcabc\nmatch\uff01\n```\n\n\u7ed3\u675f\u3002\u627e\u5230\u5339\u914d\u70b9\u3002\n\n#### next\u8f85\u52a9\u6570\u7ec4\n\n\u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\u8fd9\u91cc\u9700\u8981\u4f9d\u9760\u4e00\u4e2a$next$\u6570\u7ec4\u3002\n\n\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u7684$next=${$0,0,0,0,1,2,3$}\u3002\n\n\u8bb0\u5f55\u7684\u662f\uff0c\u5f53\u5339\u914d\u5230$p$\u7684\u4e00\u4f4d\u65f6\u5931\u914d\uff0c\u6240\u9700\u8981\u8df3\u8f6c\u5230$p$\u7684\u4f4d\u7f6e\u3002\n\nemmm\u2026\u2026#(\u5410\u8840\u5012\u5730)\n\n\u597d\u5427\uff0c\u53c8\u7384\u5b66\u4e86\u3002\n\n\u7528\u4e0a\u9762\u7684\u4e00\u4e2a\u4f8b\u5b50\u6765\u7406\u89e3\uff1a\n\n```\n6.\nt:abcabdababcabc\n       |\np:abcabc\nnext:0,0,0,0,1,2,3\n               ^\nit's not a match\uff01\n\n\u6b64\u65f6d\u4e0ea\u4e0d\u5339\u914d\uff0c\u5bf9\u5e94\u5230next\u6570\u7ec4\u5c31\u662f2\u3002\n\u90a3\u4e48d\u5c06\u4e0e\u5339\u914d\u4e32\u4e2d\u7684\u7b2c\u4e09\uff08\u4e0b\u6807\u4e3a2\uff09\u4e2a\u8fdb\u884c\u5339\u914d\u3002\n\u4e5f\u5c31\u662f\u8fd9\u6837\uff1a\n\n7.\nt:abcabdababcabc\n       |\np:   abcabc\nnext:0,0,0,0,1,2,3\n         ^\nit's not a match\uff01\n```\n\n\u8fd9\u6837\u7ee7\u7eed\u505a\u4e0b\u53bb\u3002\n\n\u8fd9\u5c31\u662f$next$\u6570\u7ec4\u7684\u7528\u6cd5\u3002\n\n##### \u6784\u9020\n\n\u600e\u4e48\u6784\u9020\u5462\uff1f\n\n\u76f4\u63a5\u4e0a\u4e2a\u4f8b\u5b50\uff1a\n\n```\n1.\n  0123456\np:abcabcd\n  ji\nnext:0,0,0,0,0,0,0,0\n\n2.\n  0123456\np:abcabcd\n  j i\nnext:0,0,0,0,0,0,0,0\n\n3.\n  0123456\np:abcabcd\n  j  i\nnext:0,0,0,0,0,0,0,0\n           ^\n```\n\n\u6211\u4eec\u770b\u5230\uff0c\u5728\u7b2c3\u6b65\u4e2d$p_i==p_j$\uff0c\u6240\u4ee5\u6211\u4eec\u5c06$next_{i+1}$\u8d4b\u503c\u4e3a$j+1$\u3002\n\n\u7136\u540e$j$\u5411\u53f3\u79fb\u52a8\u4e00\u683c\uff0c$i$\u5411\u53f3\u79fb\u52a8\u4e00\u683c\u3002\n\n```\n3.\n  0123456\np:abcabcd\n  j  i\nnext:0,0,0,0,1,0,0,0\n             ^\n\n4.\n  0123456\np:abcabcd\n   j  i\nnext:0,0,0,0,1,2,0,0\n               ^\n             \n5.\n  0123456\np:abcabcd\n    j  i\nnext:0,0,0,0,1,2,3,0\n                 ^\n                 \n6.\n  0123456\np:abcabcd\n  j     i\nnext:0,0,0,0,1,2,3,0\n                   ^\n```\n\n\u6784\u9020\u5b8c\u6210\u3002\n\n##### code\n\n```c++\nvoid getfail(int lp){\n    next[0]=0; \n    for(int i=1;i<lp;i++){\n        int j=next[i];\n        while(j&&p[i]!=p[j]) j=next[j];\n        next[i+1]=p[i]==p[j]?j+1:0;\n    }\n    return ;\n}\n```\n\n\u5269\u4e0b\u7684\u4e5f\u5c31\u6ca1\u4ec0\u4e48\u4e86\uff0c\u7406\u89e3\u4ee3\u7801\u5c31\u597d\u4e86\u3002\n\n[**\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c**](https://www.langlangago.xyz/index.php/archives/31/)",
        "postTime": 1561369192,
        "uid": 70178,
        "name": "noall",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "### KMP\u601d\u60f3\n\n\u7528\u4e8e\u5224\u65ad\u5b57\u7b26\u4e32 $A$ \u662f\u5426\u4e3a\u5b57\u7b26\u4e32 $B$ \u7684\u5b50\u4e32\uff0c\u5e76\u6c42\u51fa\u73b0\u4f4d\u7f6e\n\n\u6211\u4eec\u5c06\u5b57\u7b26\u4e32 $A$ \u79f0\u4e3a\u5f85\u5904\u7406\u7684\u4e32\u3010\u8fd9\u540d\u5b57\u6709\u70b9\u8349\u7387\u3011\uff0c\u5c06\u5b57\u7b26\u4e32 $B$ \u79f0\u4e3a\u6a21\u5f0f\u4e32\n\n\u4e3b\u8981\u5206\u4e3a\u4e24\u6b65\uff1a\n\n1. \u5bf9\u4e8e\u6a21\u5f0f\u4e32 $B$ \u8fdb\u884c\u81ea\u6211\u5339\u914d\uff0c\u751f\u6210\u4e00\u4e2a $nxt[i]$ \u7684\u6570\u7ec4\uff08$nxt[i]$ \u8868\u793a\u4ee5\u7b2c $i$ \u7684\u4f4d\u7f6e\u7684\u5b57\u7b26\u7ed3\u5c3e\u7684\u975e\u524d\u7f00\u5b50\u4e32\u80fd\u4e0e\u81ea\u5df1\u524d\u7f00\u80fd\u5339\u914d\u7684\u6700\u5927\u957f\u5ea6\uff09\n\n\t\u5982 $ababb$ \u7684 $nxt[i]$ \u6570\u7ec4\u5c31\u4e3a $0\\;0\\;1\\;2\\;0$\n\n2. \u5c06 $A$ \u4e0e\u6a21\u5f0f\u4e32 $B$ \u8fdb\u884c\u5339\u914d\uff0c\u751f\u6210 $f[i]$ \u6570\u7ec4\uff08$f[i]$ \u8868\u793a\u4ee5\u5b57\u7b26\u4e32 $A$ \u4e2d\u7b2c $i$ \u4e2a\u5b57\u7b26\u7ed3\u5c3e\u7684\u5b50\u4e32\u4e0e\u6a21\u5f0f\u4e32 $B$ \u7684\u524d\u7f00\u80fd\u5339\u914d\u7684\u6700\u5927\u957f\u5ea6\uff09\n\n\t\u540c\u65f6\uff0c\u5f53 $f[i]==strlen(B)$ \u65f6\uff0c\u8bf4\u660e\u5b57\u7b26\u4e32 $A$ \u5728\u7b2c $i-strlen(B)+1$ \u5904\u4e0e\u6a21\u5f0f\u4e32 $B$ \u5339\u914d\u4e0a\u4e86\uff0c\u8f93\u51fa\u8be5\u4f4d\u7f6e\u5373\u53ef\n\n### $nxt$\u6570\u7ec4\u6c42\u6cd5\n\n\u5982\u6a21\u5f0f\u4e32 $abababb$\n\n1. \u5bf9\u4e8e $nxt[1]=0$ \n2. \u5b9a\u4e49 $now+1$ \u4e3a\u5f53\u524d\u4e0e $s1[i]$ \u5339\u914d\u7684\u4f4d\u7f6e\n\t1. \u5f53 $s1[now+1]==s1[i]$ \u65f6\uff0c$nxt[i]=now+1$\n   2. \u5426\u5219\u53ef\u8bf4\u660e $now==0$\uff0c\u5219 $nxt[i]=0$\n3. \u6bcf\u6b21\u5bf9\u4e8e $now$\n\t1. \u5f53 $s1[now+1]==s1[i]$ \u65f6\uff0c\u9000\u51fa\u5faa\u73af\n   2. \u5426\u5219\uff0c\u4ee4 $now=nxt[now]$\uff0c\u76f4\u5230 $now==0$\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n    nxt[1]=0;\n    for (int i=2,now=0;i<=len1;i++)\n    {\n        while (now && s1[i]!=s1[now+1]) now=nxt[now];\n        now+=(s1[i]==s1[now+1]);\n        nxt[i]=now;\n    }\n```\n\n### $f$\u6570\u7ec4\u6c42\u6cd5\n\n\u540c $nxt$ \u6570\u7ec4\u6c42\u6cd5\uff0c\u5c06\u5176\u4e2d $s1[i]!=s1[now+1]$ \u6539\u4e3a $s2[i]!=s1[now+1]$\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n    f[1]=(s2[1]==s1[1]);\n    for (int i=2,now=(s2[1]==s1[1]);i<=len2;i++)\n    {\n        while (now && s2[i]!=s1[now+1]) now=nxt[now];\n        now+=(s2[i]==s1[now+1]);\n        f[i]=now;\n        if (f[i]==len1) printf(\"%d\\n\",i-len1+1);\n    }\n```\n\n### \u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nchar s1[1000010],s2[1000010];\nint nxt[1000010],f[1000010],len1,len2;\nusing namespace std;\nint main()\n{\n    scanf(\"%s\",s2+1);\n    scanf(\"%s\",s1+1);\n    len1=strlen(s1+1);len2=strlen(s2+1);\n    nxt[1]=0;\n    for (int i=2,now=0;i<=len1;i++)\n    {\n        while (now && s1[i]!=s1[now+1]) now=nxt[now];\n        now+=(s1[i]==s1[now+1]);\n        nxt[i]=now;\n    }\n    f[1]=(s2[1]==s1[1]);\n    for (int i=2,now=(s2[1]==s1[1]);i<=len2;i++)\n    {\n        while (now && s2[i]!=s1[now+1]) now=nxt[now];\n        now+=(s2[i]==s1[now+1]);\n        f[i]=now;\n        if (f[i]==len1) printf(\"%d\\n\",i-len1+1);\n    }\n    for (int i=1;i<len1;i++)\n        printf(\"%d \",nxt[i]);\n    printf(\"%d\\n\",nxt[len1]);\n    return 0;\n}\n```",
        "postTime": 1558617890,
        "uid": 67718,
        "name": "G\u6211\u5c31\u662f\u83dcG",
        "ccfLevel": 6,
        "title": "\u3010\u5b66\u4e60\u7b14\u8bb0\u3011KMP"
    },
    {
        "content": "# \u524d\u8a00\uff1a\nKMP\u5339\u914d\u662f\u5b9e\u73b0\u5b57\u7b26\u4e32\u5339\u914d\u7684\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(m+n)\u3002\n\n# \u849f\u84bbLZ\u7684~~BB~~\u54ed\u8bc9\uff1a\n\u8fa3\u9e21\u7684LZ\u672c\u6765\u5199\u8fd9\u7bc7\u535a\u5ba2\u5199\u4e86\u5f88\u4e45\uff0c\u90fd\u5feb\u5199\u5b8c\u4e86\uff0c\u7ed3\u679c\u626b\u4e86\u4e2a\u5783\u573e\uff0c\u628a\u672c\u6765\u7684\u6587\u6863\u5220\u6389\u4e86\uff0c\u611f\u89c9\u4e0d\u4f1a\u518d\u7231\u4e86QWQ\n\n# \u6b63\u9898\uff1a\n\u4f17\u6240\u5468\u77e5\uff0c\u6211\u4eec\u6700\u521d\u4f7f\u7528\u7684\u5b57\u7b26\u4e32\u5339\u914d\u65b9\u6cd5\u662f\u5728a\u6570\u7ec4\u4ece\u5934\u626b\u5230\u5c3e\uff0c\u6bcf\u4e00\u4f4d\u90fd\u5224\u65ad\u4ee5\u5176\u4e3a\u8d77\u70b9\u65f6\uff0c\u80fd\u5426\u5b8c\u6210\u5339\u914d\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u662fO(mn)\u3002\n\n\u800cKMP\u5219\u5229\u7528\u4e86\u5b57\u7b26\u4e32\u5339\u914d\u7684\u4e00\u4e2a\u5c0f\u6027\u8d28\uff1a\n```cpp\n                  1   2   3   4   5   6   7\n          a[]     B   A   B   A   B   A   C\n          b[]     B   A   B   A   C\n```\n\u82e5\u5339\u914d\u5230\u7b2c4\u4f4d\u65f6\uff0c\u53d1\u73b0\u6700\u540e\u4e00\u4f4d\u65e0\u6cd5\u5339\u914d~~\u8fd9\u771f\u662f\u4ee4\u4ebaf**k~~\u3002\n\n\u8fd9\u91cc\u6309\u7167\u539f\u601d\u8def\uff0c\u5e94\u8be5\u7ee7\u7eed\u8c03\u52a8a\u6570\u7ec4\u4e2d\u7684\u6307\u9488\uff0c\u627e\u65b0\u7684\u8d77\u70b9\n\n\u800c\u53d1\u73b0\u5230b\u6570\u7ec4\u7684\u6700\u540e2\u4f4d\uff0c\u4e0e\u524d2\u4f4d\u5b8c\u5168\u76f8\u540c\uff0c\u6240\u4ee5\u4e4b\u524d\u90a3\u4e2a\u9519\u8bef\u7684\u5339\u914d\u5c31\u5df2\u7ecf\u628a\u8d77\u70b9\u4e3a3\u65f6\u7684\u524d2\u4f4d\u5339\u914d\u5b8c\u4e86\uff0c\u6240\u4ee5\u5f53\u8d77\u70b9\u6307\u9488\u626b\u52303\u65f6\uff0c\u4f1a\u8fdb\u884c\u91cd\u590d\u7684\u5339\u914d\uff0c\u8fd9\u5c31\u5927\u5927\u589e\u957f\u4e86\u65f6\u95f4\u3002\n\n\u56e0\u6b64KMP\u5b9a\u4e49\u4e86\u6570\u7ec4next\uff0cnext[i]=j\u8868\u793ab\u6570\u7ec4\u4e2d1~j\u4f4d\u4e0e(i-j+1)~i\u4f4d\u5b8c\u5168\u76f8\u540c\uff0c\u4e14\u4e0d\u5b58\u5728\u66f4\u5927\u7684j\u6ee1\u8db3\u6761\u4ef6\uff0c\u5373\u5f53\u524d\u7684j\u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927\u503c\u3002\n\n\u90a3\u4e48\u5b83\u662f\u5982\u4f55\u4f7f\u7528\u7684\u5462\uff1f\n\n- \u4e00\u4e2a\u6307\u9488\u5728a\u6570\u7ec4\u4e2d\u79fb\u52a8\uff0c\u8868\u793a\u5df2\u5339\u914d\u5230\u7b2c\u51e0\u4f4d\u3002\n- \u53e6\u4e00\u4e2a\u6307\u9488bj\u5728b\u6570\u7ec4\u4e2d\u79fb\u52a8\uff0c\u8868\u793a\u5df2\u5339\u914d\u6210\u529f\u51e0\u4f4d\u3002\n- \u82e5a\uff0cb\u6570\u7ec4\u4e0b\u4e00\u4f4d\u53ef\u4ee5\u6210\u529f\u5339\u914d\uff0c\u4e24\u4e2a\u6307\u9488\u540c\u65f6\u540e\u79fb\u4e00\u4f4d\u3002\n- \u82e5\u4e0b\u4e00\u4f4d\u65e0\u6cd5\u5339\u914d\uff0c\u5219\u5c06bj\u79fb\u5411next[bj]\uff0c\u76f4\u5230\u4e0b\u4e00\u4f4d\u5339\u914d\u6210\u529f\uff0c\u6216bj\u6307\u54110\uff08\u5373\u4e0b\u4e00\u4f4d\u4f7f\u5f97\u4f60\u600e\u4e48\u4e5f\u5339\u914d\u4e0d\u4e86\uff09\n- \u82e5bj\u6307\u9488\u5df2\u6307\u5411b\u6570\u7ec4\u672b\u5c3e\uff0c\u5219\u8868\u793a\u5df2\u5b8c\u6210\u4e00\u4e2a\u5339\u914d\uff0cbj\u79fb\u5411next[bj]\uff0c***\u8fd9\u91cc\u5f88\u91cd\u8981\uff01\uff01\uff01***\n\n\u90a3\u4e48\u8fd9\u4e2a\u7b97\u6cd5\u4e3a\u4ec0\u4e48\u662f\u6b63\u786e\u7684\u5462\uff1f\n\n\u4e0d\u96be\u53d1\u73b0\u4e0a\u6587\u7684\u6b65\u9aa4\u4e2d\uff0ca\u6570\u7ec4\u5339\u914d\u8fc7\u7684\u5730\u65b9\uff0c\u663e\u7136\u6ca1\u6709\u9000\u56de\u53bb\u68c0\u67e5\u662f\u5426\u4e3a\u53e6\u4e00\u4e2a\u5339\u914d\u7684\u8d77\u70b9\u3002\n\n\u4f46\u5b83\u5176\u5b9e\u662f\u6b63\u786e\u7684\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a\n\n- \u82e5\u5f53\u524d\u5339\u914d\u6210\u529f\n\n![](https://cdn.luogu.com.cn/upload/pic/31210.png)\n\u9ed1\u6846\u4e3a\u539f\u6570\u7ec4\u4e2d\u53ef\u4ee5\u88ab\u5339\u914d\u6210\u529f\u7684\u90e8\u5206\u3002\n\n\u90a3\u4e48\u663e\u7136\uff0c\u4e24\u4e2a\u5339\u914d\u6709\u4e00\u6bb5\u91cd\u53e0\u90e8\u5206\uff0c\u6240\u4ee5next[bj]\u5fc5\u5b9a\u4f1a\u8df3\u5230\u91cd\u53e0\u90e8\u5206\u7684\u672b\u5c3e\uff08\u5426\u5219\u5c31\u4f1a\u8df3\u5230\u53e6\u4e00\u4e2a\u5339\u914d\uff0c\u5982\u679c\u90a3\u4e2a\u5339\u914d\u6210\u529f\uff0c\u5219\u5982\u4e0a\uff0c\u5982\u5931\u8d25\uff0c\u89c1\u4e0b\u6587\uff09\uff0c\u4e5f\u5c31\u662f\u7b97\u5f97\u5230\u53e6\u4e00\u4e2a\u5339\u914d\u3002\n\n- \u82e5\u5f53\u524d\u5339\u914d\u5931\u8d25\n\n![](https://cdn.luogu.com.cn/upload/pic/31213.png)\n\u7ea2\u8272\u65b9\u6846\u662f\u5339\u914d\u6210\u529f\u7684\u90e8\u5206\u3002\n\n\u663e\u7136\u5b83\u7684\u540e\u9762\u4e0e\u5339\u914d\u6570\u7ec4\u6709\u90e8\u5206\u91cd\u5408\uff0c\u800c\u56e0\u4e3a\u5b83\u5df2\u5339\u914d\u6210\u529f\uff0c\u6240\u4ee5\u5b83\u5fc5\u5b9a\u662f\u5339\u914d\u7684\u524d\u4e00\u90e8\u5206\uff08\u4e0a\u65b9\u7ea2\u6846\uff09\uff0c\u6b64\u65f6\u5b83\u7684\u524d\u7f00\u548c\u540e\u7f00\u6709\u4e00\u6bb5\u91cd\u5408\uff0c\u6240\u4ee5next[bj]\u5fc5\u5b9a\u4f1a\u8df3\u5230\u91cd\u53e0\u90e8\u5206\u7684\u672b\u5c3e\uff0c\u5373\u5339\u914d\u5931\u8d25\u7684\u524d\u4e00\u4f4d\uff08\u5426\u5219\uff0c~~WOC\uff0c\u6211\u61d2\u5f97\u5199\u4e86~~\uff09\uff0c\u6b64\u65f6\u53ef\u4ee5\u8ba1\u7b97\u5230\u8d77\u70b9\u88ab\u8df3\u8fc7\u7684\u5339\u914d\u3002\n\n\u4e00\u5207\u90fd\u5df2\u7ecf\u505a\u5b8c\u4e86\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u5c34\u5c2c\u7684\u4e8b\u60c5\uff0cnext\u600e\u4e48\u6c42\uff01\uff01\uff01~~WOC~~\n\n\u5176\u5b9enext\u7684\u6c42\u6cd5\u4e0enext\u7684\u4f7f\u7528~~\u5b8c\u5168~~\u57fa\u672c\u4e00\u6837\u3002\n\n\u5c31\u662f\u628ab\u6570\u7ec4\u5f53\u4f5ca\u6570\u7ec4\uff0c\u548c\u81ea\u5df1\u5339\u914d\u3002\n\n\u6b64\u65f6next[i+1]=bj\uff0c\u4e3a\u4ec0\u4e48\uff1f\u7b2ci+1\u4f4d\u5339\u914d\u6210\u529f\u4e86bj\u4f4d\uff0c\u5373b[1~bj]==b[(i+1)-bj+1~(i+1)]\uff0c\u8fd9\u5c31\u662fnext\u7684\u5b9a\u4e49\u554a\u3002\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\n#include<iomanip>\n#include<cstring>\n#include<algorithm>\n#include<ctime>\n#define ll long long\nusing namespace std;\ninline ll read()\n{\n\tll kkk=0;\n\tint x=1;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9')\n\t{\n\t\tif(c=='-')\n\t\t\tx=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0' && c<='9')\n\t\tkkk=(kkk<<3)+(kkk<<1)+(c-'0'),c=getchar();\n\treturn kkk*x;\n}\nchar s1[1000001],s2[1000001];\nint next[1000001],bj;\nint main()\n{\n\tcin>>s1+1>>s2+1;\n\tint len1=strlen(s1+1),len2=strlen(s2+1);\n\tnext[1]=0;\n\tbj=0;\n\tfor(register int i=1;i<len2;++i)\n\t{\n\t\twhile(s2[i+1]!=s2[bj+1] && bj!=0)\n\t\t\tbj=next[bj];\n\t\tif(s2[i+1]==s2[bj+1])\n\t\t\t++bj;\n\t\tnext[i+1]=bj;\n\t}\n\tbj=0;\n\tfor(register int i=0;i<len1;++i)\n\t{\n\t\twhile(s1[i+1]!=s2[bj+1] && bj!=0)\n\t\t\tbj=next[bj];\n\t\tif(s1[i+1]==s2[bj+1])\n\t\t\t++bj;\n\t\tif(bj==len2)\n\t\t{\n\t\t\tprintf(\"%d\\n\",i-len2+2);\n\t\t\tbj=next[bj];\n\t\t}\n\t}\n\tfor(register int i=1;i<=len2;++i)\n\t\tprintf(\"%d \",next[i]);\n\tputchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1535557239,
        "uid": 36933,
        "name": "zhy12138",
        "ccfLevel": 9,
        "title": "KMP\u5339\u914d"
    },
    {
        "content": "## \u6b22\u8fce\u8bbf\u95ee[juruo\u7684\u535a\u5ba2](https://rec.ac.cn/?p=325)\u67e5\u770b\n\u72b6\u6001\u4e00\u76f4\u5f88\u5dee \u751a\u81f3\u8fde\u8fd9\u4e48\u57fa\u7840\u7684\u7b97\u6cd5\u90fd\u4e0d\u4f1a\u4e86 \u6574\u7406\u590d\u4e60\u4e00\u4e0b\n### \u4ecb\u7ecd\nKMP\u7b97\u6cd5\u662f\u4e00\u79cd\u6539\u8fdb\u7684\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5\uff0c\u7531D.E.Knuth\uff0cJ.H.Morris\u548cV.R.Pratt\u540c\u65f6\u53d1\u73b0\uff0c\u56e0\u6b64\u4eba\u4eec\u79f0\u5b83\u4e3a\u514b\u52aa\u7279\u2014\u2014\u83ab\u91cc\u65af\u2014\u2014\u666e\u62c9\u7279\u64cd\u4f5c\uff08\u7b80\u79f0KMP\u7b97\u6cd5\uff09\u3002KMP\u7b97\u6cd5\u7684\u5173\u952e\u662f\u5229\u7528\u5339\u914d\u5931\u8d25\u540e\u7684\u4fe1\u606f\uff0c\u5c3d\u91cf\u51cf\u5c11\u6a21\u5f0f\u4e32\u4e0e\u4e3b\u4e32\u7684\u5339\u914d\u6b21\u6570\u4ee5\u8fbe\u5230\u5feb\u901f\u5339\u914d\u7684\u76ee\u7684\u3002\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u5b9e\u73b0\u4e00\u4e2anext()\u51fd\u6570\uff0c\u51fd\u6570\u672c\u8eab\u5305\u542b\u4e86\u6a21\u5f0f\u4e32\u7684\u5c40\u90e8\u5339\u914d\u4fe1\u606f\u3002\u65f6\u95f4\u590d\u6742\u5ea6O(m+n)\u3002\n### \u539f\u7406\n\u767e\u79d1\u4e0a\u7684\u4ecb\u7ecd\u5df2\u7ecf\u975e\u5e38\u6e05\u695a\u4e86 \u5c31\u662f\u201c\u5229\u7528\u5339\u914d\u5931\u8d25\u540e\u7684\u4fe1\u606f\u5c3d\u91cf\u51cf\u5c11\u7684\u6a21\u5f0f\u4e32\u4e0e\u4e3b\u4e32\u7684\u5339\u914d\u6b21\u6570\u4ee5\u8fbe\u5230\u5feb\u901f\u5339\u914d\u7684\u76ee\u7684\u201d    \n\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5728\u5f53\u524d\u5339\u914d\u5931\u8d25\u4e4b\u540e\u4e0d\u5b8c\u5168\u56de\u9000\u5230\u521d\u59cb\u72b6\u6001\u800c\u662f\u8df3\u5230\u4e0b\u4e00\u4e2a\u7b26\u5408\u7684\u72b6\u6001   \n\u4e3e\u4e00\u4e2a\u4f8b\u5b50   \n\u4e3b\u4e32\u662f bbaabcdfabcabc    \n\u6a21\u5f0f\u4e32 abcdabc   \n\u6211\u4eec\u5148\u770b\u4e00\u4e0b\u66b4\u529b\u5339\u914d\u7684\u8fc7\u7a0b   \n\u6211\u4eec\u7528\u2018q\u2019\u6682\u65f6\u4ee3\u66ff\u4e00\u4e0b\u7a7a\u683c    \n//\u597d\u50cf\u8fd8\u662f\u6709\u4e9b\u95ee\u9898 \u5bf9\u4ed8\u4e00\u4e0b\u5566qwq    \n\u6211\u4eec\u5148\u5c06\u4e3b\u4e32\u56fa\u5b9a \u7b2c\u51e0\u4f4d\u4ee3\u6307\u6a21\u5f0f\u4e32\u7b2c\u51e0\u4f4d    \n1     \nbbaabcdfabcabc    \nabcdabc    \n\u6211\u4eec\u53d1\u73b0\u7b2c\u4e00\u4f4d\u5339\u914d\u5931\u8d25 \u6a21\u5f0f\u4e32\u5411\u540e\u79fb\u52a8\u4e00\u4f4d    \n2    \nbbaabcdfabcabc    \nqabcdabc    \n\u6211\u4eec\u53d1\u73b0\u7b2c\u4e00\u4f4d\u5339\u914d\u5931\u8d25 \u6a21\u5f0f\u4e32\u5411\u540e\u79fb\u52a8\u4e00\u4f4d    \n3   \nbbaabcdfabcabc    \nqqabcdabc    \n\u6211\u4eec\u53d1\u73b0\u7b2c\u4e8c\u4f4d\u5339\u914d\u5931\u8d25 \u6a21\u5f0f\u4e32\u5411\u540e\u79fb\u52a8\u4e00\u4f4d    \n4   \nbbaabcdfabcabc    \nqqqabcdabc    \n\u6211\u4eec\u53d1\u73b0\u7b2c\u4e94\u4f4d\u5339\u914d\u5931\u8d25 \u6a21\u5f0f\u4e32\u5411\u540e\u79fb\u52a8\u4e00\u4f4d   \n5   \nbbaabcdfabcabc   \nqqqqabcdabc   \n\u6211\u4eec\u53d1\u73b0\u7b2c\u4e94\u4f4d\u5339\u914d\u5931\u8d25 \u6a21\u5f0f\u4e32\u5411\u540e\u79fb\u52a8\u4e00\u4f4d   \n\u3002\u3002\u3002\u3002\u3002\u3002\u3002//\u6b64\u5904\u7701\u7565\u4e00\u4e9b   \nend    \nbbaabcdfabcabc  \nqqqqqqqabcdabc   \n\u5339\u914d\u6210\u529f   \n\n\u5f88\u590d\u6742\u4e5f\u6709\u5f88\u591a\u6d6a\u6d6a\u8d39 \u8003\u8651\u5982\u4f55\u4f18\u5316\u8fd9\u4e00\u8fc7\u7a0b\u5462\uff1f   \n\u4e0d\u96be\u60f3\u5230\u7684~~\u4e3a\u4ec0\u4e48\u4e0d\u4ece\u540e\u5411\u524d\u5339\u914d\u5462\uff1f~~   \n\u6211\u4eec\u4e0d\u8bba\u5728\u7b2c\u51e0\u4e2a\u4f4d\u7f6e\u5339\u914d\u5931\u8d25 \u90fd\u662f\u6574\u4f53\u540e\u79fb\u4e00\u4f4d\u91cd\u65b0\u8fdb\u884c\u5339\u914d \u8fd9\u4e00\u5b9a\u662f\u53ef\u4ee5\u8fdb\u884c\u4f18\u5316\u7684   \n\u4e0d\u59a8\u8bd5\u8bd5\u5982\u679c\u5931\u53bb\u5339\u914d \u6211\u4eec\u76f4\u63a5\u5411\u540e\u8df3\u6a21\u5f0f\u4e32\u5df2\u5339\u914d\u5230\u7684\u957f\u5ea6\uff08\u4e0b\u6587\u7b80\u5199\uff09\u4e2a\u4f4d\u7f6e\u4f1a\u6709\u600e\u6837\u7684\u5f71\u54cd \u663e\u7136\u6709\u4e9b\u60c5\u51b5\u4e0b\u662f\u9519\u7684  \u8fd9\u5c31\u5f88\u597d \u6211\u4eec\u53ea\u89e3\u51b3\u8fd9\u4e9b\u9519\u8bef\u7684\u60c5\u51b5\u5c31\u597d\u4e86   \n\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u5728\u5df2\u5339\u914d\u5230\u7684\u540e\u9762\u4e00\u6bb5\u4e2d \u662f\u5426\u5305\u542b\u6b63\u786e\u5339\u914d\u7684\u524d\u4e00\u6bb5   \n//\u8fd9\u91cc\u81ea\u5df1\u60f3\u4e00\u4e0b\u53ef\u80fd\u4f1a\u66f4\u6709\u6548\u679c \u5199\u4e2a\u4f8b\u5b50\u8bd5\u8bd5\u5c31\u597d\u4e86   \n\u4ec0\u4e48\u65f6\u5019\u4f1a\u6709\u8fd9\u79cd\u5f71\u54cd\u5462\uff1f \u5373\u5df2\u7ecf\u5339\u914d\u5230\u7684\u90e8\u5206\u524d\u9762\u7684\u4e0e\u540e\u4e00\u90e8\u5206\u6709\u76f8\u540c\u7684\u5730\u65b9    \n\u6bd4\u5982\u6a21\u5f0f\u4e32abeabf \u6211\u4eec\u5728\u7b2c\u516d\u4f4d\u2018f\u2019\u5931\u53bb\u5339\u914d\u4e86  \u5411\u540e\u8df3\u8f6c\u4e94\u4f4d \u5c31\u76f8\u5f53\u4e8e\u5728\u4e3b\u4e32\u4e2d\u7684\u7b2c\u4e8c\u4e2aab \u53ea\u4e0e\u6a21\u5f0f\u4e32\u7684\u7b2c\u4e8c\u4e2aab\u5339\u914d\u540e\u5c31\u88ab\u8de8\u4e86\u8fc7\u53bb \u6211\u4eec\u8fd8\u9700\u8981\u8ba9\u6a21\u5f0f\u4e32\u7b2c\u4e00\u4e2aab\u518d\u6b21\u4e0e\u5b83\u5339\u914d \u6240\u4ee5\u8fd9\u91cc\u7684\u8df3\u8f6c\u5e94\u8be5\u662f     \n5\uff08\u5df2\u5339\u914d\u5230\u7684\u957f\u5ea6\uff09 - 2\uff08\u6700\u957f\u516c\u5171\u957f\u5ea6\uff09 = 3   \n\u53ef\u4ee5\u76f8\u89c1 \u8df3\u8f6c\u540e\u4e3b\u4e32\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u201cab\u201d\u5c06\u4f1a\u4e0e\u6a21\u5f0f\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u201cab\u201d\u91cd\u65b0\u91cd\u5408    \n\u5982\u6b64 \u6211\u4eec\u5c31\u8f7b\u677e\u89e3\u51b3\u4e86\u8fd9\u4e00\u95ee\u9898    \n\u90a3\u6211\u4eec\u552f\u4e00\u4f1a\u51fa\u73b0\u9519\u8bef\u7684\u60c5\u51b5\u4e5f\u627e\u5230\u4e86\u89e3\u51b3\u65b9\u6cd5     \n\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u6700\u957f\u516c\u5171\u957f\u5ea6\u662f0 \u51cf\u4e00\u4e0b\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u6b63\u786e\u6027    \n\u6211\u4eec\u53ea\u9700\u8981\u9884\u5904\u7406\u51fa     \n\u6a21\u5f0f\u4e32\u6bcf\u4e00\u4f4d\u7f6e\u7684\u524d\u7f00\u548c\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u5143\u7d20\u7684\u957f\u5ea6   \n\u628a\u8fd9\u4e2a\u5b58\u8fdb\u4e00\u4e2a\u6570\u7ec4\u91cc   \n\u5339\u914d\u65f6\u5c31\u53ef\u4ee5\u7528\u5b83\u6765\u52a0\u901f\u5c31\u53ef\u4ee5\u4e86   \n### \u4ee3\u7801\n[\u6a21\u677f](https://www.luogu.org/problemnew/show/P3375 \"\u6a21\u677f\")~~\u5f53\u65f6\u5927\u6982orz\u4e86\u5148\u8f88\u4ee3\u7801~~\n//\u6570\u7ec4kmp\u5c31\u662f\u90a3\u4e2a\u503c\n```cpp\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nchar a[1000010], b[1000010];\nint kmp[1000010], k, lena, lenb;\nint main(){\n\tscanf(\"%s%s\", a, b);\n\tlena = strlen(a), lenb = strlen(b);\n\tkmp[0] = kmp[1] = 0;\n\tfor(int i = 1; i < lenb; ++ i){\n\t\twhile(k && b[i] != b[k]) k = kmp[k];\n\t\tkmp[i + 1] = b[i] == b[k] ? ++ k : 0;\n\t}\n\tk = 0;\n\tfor(int i = 0; i < lena; ++ i){\n\t\twhile(k && a[i] != b[k]) k = kmp[k];\n\t\tk += a[i] == b[k] ? 1 : 0;\n\t\tif(k == lenb) printf(\"%d\\n\", i - lenb + 2);\n\t}\n\tfor(int i = 1; i <= lenb; ++ i) printf(\"%d \", kmp[i]);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1530683397,
        "uid": 70383,
        "name": "Rec\u00b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "#\u65b0\u5b66\u7684\u7b97\u6cd5\uff0c\u4e00\u904d\u8fc7\u5f88\u6fc0\u52a8\uff0c\u5199\u4e00\u7bc7\u9898\u89e3\n\n###\u82e5\u7528\u66b4\u529b\u5199\uff0c\u5373BF\u7b97\u6cd5\uff0c\u5373\u4ece\u88ab\u5339\u914d\u4e32\uff08\u957f\u4e32\uff09\u7b2c\u4e00\u4f4d\u5f00\u59cb\u5339\u914d\uff0c\u82e5\u4e0d\u5b8c\u5168\u5339\u914d\uff0c\u627e\u5230\u957f\u4e32\u4e0a\u4e00\u6b21\u88ab\u5339\u914d\u7684\u4e0b\u4e00\u4f4d\u7ee7\u7eed\u5339\u914d\uff0c\u8fd9###\u6837\u5982\u679c\u88ab\u5339\u914d\u4e32\u7684\u957f\u5ea6\u4e3am\uff0c\u5339\u914d\u4e32\u7684\u957f\u5ea6\u4e3an\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(mn)\u4f8b\u5982\u6700\u574f\u60c5\u51b5s1:aaaaaaaaaaaab;s2:aab,\u4e4b\u6240\u4ee5\u8fd9\u4e48\u4f4e\u6548\uff0c###\u662f\u56e0\u4e3a\u5047\u5982\u5339\u914d\u5230\u77ed\u4e32\u7684\u6700\u540e\u4e00\u4f4d\u624d\u53d1\u73b0\u4e0d\u5b8c\u5168\u5339\u914d\uff0c\u4e0b\u4e00\u6b65\u4ece\u5934\u5f00\u59cb\u5339\u914d\u5c31\u4ee3\u8868\u8fd9\u4e00\u6b21\u767d\u5339\u914d\u4e86\uff0c\u90a3\u4e48\u80fd\u4e0d\u80fd\u7ee7\u7eed\u4e0a\u4e00\u6b21\u7684\u5339\u914d###\u5462\uff1f\n\n###\u8fd9\u5c31\u9700\u8981kmp\u7b97\u6cd5\u4e86\uff0c\u5176\u4e2dnext\u6570\u7ec4\u8868\u793a\u5339\u914d\u4e32\uff08\u6bcf\u4e00\u4f4d\u4e4b\u524d\u5b57\u7b26\u4e32\u524d\u7f00\u548c\u540e\u7f00\u76f8\u7b49\u6700\u5927\u8303\u56f4\uff09\uff0c\u4ee3\u8868\u52a0\u5165\u8fd9\u6b21\u5339\u914d\u4e0d\u5b8c\u5168\uff0c\u4e0b\u4e00###\u6b65\u76f4\u63a5\u5c06\u77ed\u4e32\u524d\u7f00\u79fb\u5230\u4e0a\u6b21\u540e\u7f00\u7684\u5730\u65b9\uff0c\u800cnext\u6570\u7ec4\u80fd\u786e\u5b9a\u8fd9\u4e00\u6b21\u5339\u914d\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint nxt[1000005],ans[1000005],zz,cur=0,l1,l2;\nvoid calnext(string s){\n    nxt[1]=0;//\u7b2c\u4e00\u4f4d\u65e0\u6cd5\u5339\u914d \n    zz=0;\n    for(int i=2;i<=l2;i++){\n        while(zz&&s[i]!=s[zz+1]) zz=nxt[zz];//\u5982\u679c\u540e\u7f00\u52a0\u4e0ai\u4f4d\u540e\u4e0d\u4e0e\u524d\u7f00\u5339\u914d\uff0c\u5206\u5272\u524d\u7f00\uff0c\u76f4\u81f3\u5339\u914d\u4e3a\u6b62\uff0c\u4e34\u754c\u4e3a\u524d\u7f00\u5206\u5272\u4e3a1\u4e2a \n        if(s[i]==s[zz+1]) zz++;//\u5982\u679c\u7b2ci\u4f4d\u4e0e\u4e4b\u524d\u5df2\u5339\u914d\u7684\u524d\u7f00\u4e2d\u67d0\u4e00\u4f4d\u5339\u914d\uff0c\u5219\u52a0\u4e0ai\u540e\u524d\u7f00\u548c\u540e\u7f00\u5339\u914d\u7684\u6700\u5927\u957f\u5ea6\u4e3anxt[z]+1 \n        nxt[i]=zz;\n    }\n}\n//\u5339\u914d\u7684\u4ee3\u7801\u548c\u6c42next\u6570\u7ec4\u7684\u4ee3\u7801\u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u4e3a\u5339\u914d\u7684\u8fc7\u7a0b\u548c\u6c42next\u6570\u7ec4\u7684\u8fc7\u7a0b\u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002\n//\u5047\u8bbe\u73b0\u5728\u5b57\u7b26\u4e32f\u7684\u524di\u4e2a\u4f4d\u7f6e\u90fd\u548c\u4ece\u67d0\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u7684\u5b57\u7b26\u4e32O\u5339\u914d\uff0c\u73b0\u5728\u6bd4\u8f83\u7b2ci+1\u4e2a\u4f4d\u7f6e\u3002\n//\u5982\u679c\u7b2ci+1\u4e2a\u4f4d\u7f6e\u76f8\u540c\uff0c\u63a5\u7740\u6bd4\u8f83\u7b2ci+2\u4e2a\u4f4d\u7f6e\uff1b\n//\u5982\u679c\u7b2ci+1\u4e2a\u4f4d\u7f6e\u4e0d\u540c\uff0c\u5219\u51fa\u73b0\u4e0d\u5339\u914d\uff0c\u6211\u4eec\u4f9d\u65e7\u8981\u5c06\u957f\u5ea6\u4e3ai\u7684\u5b57\u7b26\u4e32\u5206\u5272\uff0c\u83b7\u5f97\u5176\u6700\u5927\u516c\u5171\u957f\u5ea6next[i]\uff0c\n//\u7136\u540e\u4ecenext[i]\u7ee7\u7eed\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u3002\nvoid kkmmpp(string ss,string tt){\n    zz=0;\n    for(int i=1;i<=l1;i++){//\u4e00\u4f4d\u4e00\u4f4d\u7684\u5339\u914d\u957f\u4e32 \n        while(zz&&ss[i]!=tt[zz+1]) zz=nxt[zz];\n        if(ss[i]==tt[zz+1]) zz++;\n        if(zz==l2){\n            ans[++cur]=i-l2+1;\n            zz=nxt[zz];\n        }\n    }\n}\nint main(){\n    string s,t;\n    cin>>s>>t;\n    l1=s.size();l2=t.size();\n    s=\" \"+s;t=\" \"+t;//\u4ece1\u5f00\u59cb \n    calnext(t);//\u8ba1\u7b97\u5339\u914d\u7684next\u6570\u7ec4 \n    kkmmpp(s,t);//\u5339\u914d \n    for(int i=1;i<=cur;i++) cout<<ans[i]<<\"\\n\";//\u8f93\u51fa\u51fa\u73b0\u4f4d\u7f6e \n    for(int i=1;i<=l2;i++) cout<<nxt[i]<<\" \";//\u8f93\u51fa\u5339\u914d\u5b57\u7b26\u4e32next\u6570\u7ec4 \n    return 0;\n}\n```",
        "postTime": 1504843100,
        "uid": 43195,
        "name": "jiezi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "\u9898\u89e3\u91cc\u90fd\u662f\u5927\u795e\uff0c\u60f3\u5fc5\u4ed6\u4eec\u7684\u4ee3\u7801\u66f4\u52a0\u5b8c\u7f8e~~**\u6bd4\u5982\u697c\u4e0b\u7684yyb\u5927\u795e**~~\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u662f\u60f3\u8981\u8bf4\u4e00\u4e0bC++\u515a\u5728\u8fd9\u4e2a\u9898\u76ee\u63d0\u4ea4\u7684\u6ce8\u610f\u4e8b\u9879\uff1a\n\n1\u3001\u4e0d\u8981\u7528\u7384\u5b66getline\uff0c\u5426\u5219\u76f4\u63a5\u5168WA\n\n2\u3001\u7528scanf\u6ce8\u610fgetchar\uff0c\u5076\u5c14\u820d\u5f03\u4e00\u4e0bstring\u4e5f\u662f\u4e0d\u9519\u7684XD\n\n3\u3001cincout\u4f1a\u8d85\u65f6\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u5173\u95ed\u6d41\u540c\u6b65(std::ios::sync\\_with\\_stdio(false))\n\n4\u3001\u4e0d\u8981\u50cf\u6211\u4e00\u6837\u50bb\u50bb\u7684\u591a\u6b21\u6267\u884cKMP(\u8fd9\u6837\u662f84\u5206)\n\n\u5f53\u7136\uff0c\u4ee3\u7801\u8fd8\u662f\u8981\u8d34\u7684\uff0c\u4e0d\u8fc7\u53ef\u80fd\u6709\u70b9\u4e11233333\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#define f(i,a,b) for(i=a;i<=b;++i)\nint next[10010];\nint m;\nchar s[1000010],p[1010];\nvoid get()//\u8fd9\u4e2anext\u6709\u4e00\u70b9\u7565\u5fae\u7684\u4e0d\u540c\n{\n    int pz=strlen(p);\n    next[0]=-1;\n    int k=-1,j=0;\n    while(j<pz)\n    {  \n        //printf(\"%d %d\\n\",k,j);   \n        if(k==-1||p[j]==p[k])  \n        {\n            ++j,++k;\n            next[j]=k;\n        }  \n        else k=next[k];\n    }\n}\nvoid find()//KMP\u6838\u5fc3\u7b97\u6cd5\uff0c\u4f46\u6211\u611f\u89c9\u6c42next\u624d\u662f\u6838\u5fc3\n{\n    int i=0,j=0;\n    int sz=strlen(s),pz=strlen(p);\n    while(i<sz)\n    {\n        if(j==-1||s[i]==p[j])++i,++j;\n        else j=next[j];\n    if(j==pz)\n        {\n            printf(\"%d\\n\",i-j+1);\n            j=next[j];\n        }\n    }\n}\nint main()\n{\n    int i,j;\n    scanf(\"%s\",s),getchar(),scanf(\"%s\",p);\n    get();\n    find();\n    f(i,1,strlen(p))printf(\"%d \",next[i]);putchar('\\n');\n    return 0;\n}\n```",
        "postTime": 1500772574,
        "uid": 7020,
        "name": "teafrogsf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "\u53ef\u80fd\u5927\u5bb6\u53ea\u77e5\u9053KMP\u7b97\u6cd5\uff0c\u800c\u4e0d\u77e5\u9053MP\u7b97\u6cd5\u3002\n\nKMP\u7b97\u6cd5\u662f\u628aMP\u7b97\u6cd5\u7684\u5931\u914d\u51fd\u6570\u8fdb\u884c\u4e86\u4f18\u5316\u3002\n\n\u4ee3\u7801\u4e2df\u6570\u7ec4\u5c31\u662f\u540e\u7f00\u6570\u7ec4\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\nchar t[1000010],p[1000010];\nint f[1000010];\nvoid getfail(char* p,int* f)\n{\n    int m=strlen(p);\n    f[0]=0;f[1]=0;\n    for (int i=1;i<m;i++) {\n        int j=f[i];\n        while (j && p[i]!=p[j]) j=f[j];\n        f[i+1]=p[i]==p[j]? j+1 : 0;\n    }\n}\nvoid find(char* t,char* p,int* f)\n{\n    int n=strlen(t),m=strlen(p);\n    getfail(p,f);\n    int j=0;\n    for (int i=0;i<n;i++) {\n        while (j && p[j]!=t[i]) j=f[j];\n        if (p[j]==t[i]) j++;\n        if (j==m) printf(\"%d\\n\",i-m+2);\n    }\n}\nint main()\n{\n    scanf(\"%s\",&t);\n    scanf(\"%s\",&p);\n    find(t,p,f);\n    for (int i=1;i<=strlen(p);i++) printf(\"%d \",f[i]);\n}\n```",
        "postTime": 1476108475,
        "uid": 3116,
        "name": "\u98de\u7fd4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "\n# KMP\u7b97\u6cd5\n\n\n\u7528\u4e8e\u89e3\u51b3\u5339\u914d\u95ee\u9898\u3002\n\n\u6734\u7d20\u505a\u6cd5\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5339\u914d\u90fd\u53ef\u80fd\u9700\u8981O(n)\u7684\u590d\u6742\u5ea6\uff0c\u5f80\u5f80\u5bfc\u81f4TLE\u3002\n\nKMP\u7b97\u6cd5\u7684\u601d\u60f3\u5c31\u5728\u4e8e\u5145\u5206\u5229\u7528\u5df2\u7ecf\u5339\u914d\u8fc7\u4f4d\u7f6e\u7684\u4fe1\u606f\uff0c\u4f7f\u5f97\u4e0b\u4e00\u6b21\u5339\u914d\u53ef\u4ee5\u4ece\u6a21\u5f0f\u4e32\u5c3d\u91cf\u9760\u540e\u7684\u4f4d\u7f6e\u5f00\u59cb\u68c0\u6d4b\uff0c\u800c\u4e0d\u7528\u4ece\u5934\u6765\u8fc7\u3002\n\n\u6bd4\u5982\u5bf9\u4e8e\u6a21\u5f0f\u4e32\n```\nabcabcd\n```\n\u8003\u8651\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u4f7f\u5f97\u5339\u914d\u5c3d\u53ef\u80fd\u9760\u540e\u5730\u5f00\u59cb\u3002\n\n\u6bd4\u5982\u5bf9\u4e8e\u6587\u672c\u4e32\n```\nabdabcabcabcd\n```\n\u8fdb\u884c\u5339\u914d\u3002\n```\nabdabcabcabcd\nabcabcd\n```\n\u5339\u914d\u5230c\u65f6\u5931\u914d\u3002\u6b64\u65f6\u6ca1\u6709\u4ece\u67d0\u4e00\u9760\u540e\u4f4d\u7f6e\u5f00\u59cb\u7684\u673a\u4f1a\u3002\n\n\u76f4\u63a5\u8df3\u5230d\u540e\u9762\u7ee7\u7eed\u5339\u914d\u3002\n\n\u8fdb\u884c\u5339\u914d\u3002\n```\nabdabcabcabcd\n   abcabcd\n```\n\u5339\u914d\u5230d\u65f6\u518d\u6b21\u5931\u914d\u3002\n\n\u8003\u8651\u5df2\u7ecf\u5339\u914d\u8fc7\u7684\u90e8\u5206\u2026\u2026\u53d1\u73b0\u53ef\u4ee5\u6a21\u5f0f\u4e32\u5230\u7b2c\u4e00\u4e2ac\u7684\u4f4d\u7f6e\u4ecd\u7136\u662f\u5339\u914d\u5b8c\u6210\u7684\u3002\n\n\u4e8e\u662f\u4ece\u6a21\u5f0f\u4e32\u7684\u7b2c\u4e8c\u4e2aa\u5f00\u59cb\u5339\u914d\uff0c\u53ef\u627e\u5230\u6587\u672c\u4e32\u7684\u4e00\u4e2a\u5339\u914d\u3002\n## border\n\nabcabcd\n\n\u89c2\u5bdf\u6a21\u5f0f\u4e32\uff0c\u53d1\u73b0\u5982\u679c\u5230d\u65f6\u5931\u914d\uff0c\u5219\u53ef\u4ee5\u4ece\u7b2c\u4e8c\u4e2aa\u7ee7\u7eed\u5339\u914d\u3002\n\n\u89c2\u5bdfd\u524d\u9762\u7684\u4e32\uff0c\u53d1\u73b0abc\u65e2\u662f\u524d\u7f00\u53c8\u662f\u540e\u7f00\u3002\n\n\u53ef\u4ee5\u5f97\u51fa\u63a8\u8bba\uff0c\u5230\u6a21\u5f0f\u4e32\u7684\u67d0\u4e00\u4f4d\u7f6e\u7684\u5b50\u4e32\uff0c\u65e2\u662f\u8be5\u5b50\u4e32\u524d\u7f00\u4e5f\u662f\u540e\u7f00\u7684\u4e32\u662f\u4ecd\u7136\u6ee1\u8db3\u5339\u914d\u7684\u4e32\u3002\n\n\u82e5\u6c42\u51fa\u6a21\u5f0f\u4e32\u6bcf\u4e2a\u524d\u7f00\u7684\u6700\u957f\u524d\u7f00/\u540e\u7f00\u4e32\uff0c\u8bb0\u4e3aborder\uff0c\u5219\u53ef\u4ee5\u6709\u5c3d\u91cf\u957f\u7684\u5df2\u5339\u914d\u7684\u4e32\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u4ece\u5931\u914d\u7684\u4f4d\u7f6e\u7ee7\u7eed\u5339\u914d\u5566\uff01\n\n## KMP\u6570\u7ec4\n\u5bf9\u4e8e\u524d\u7f00\u7684border\u7684\u957f\u5ea6\u79f0\u4e3aKMP\u3002\n\n\u6bd4\u5982\n\n| \u6a21\u5f0f\u4e32 |  | a | b | c | a | b | c | d |\n| :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: |\n| KMP | -1 | 0 | 0 | 0 | 1 | 2 | 3 | 0 |\n\n### \u6709\u4e86\u8fd9\u4e2a\u6570\u7ec4\u53ef\u4ee5\u505a\u4ec0\u4e48\uff1f\n\n\n------------\n\n\u6bcf\u6b21\u5339\u914d\uff0c\u82e5\u5931\u914d\uff0c\u5c31\u6cbf\u7740\u4e0a\u4e00\u4e2a\u5b57\u7b26\u7684KMP\u4e00\u76f4\u5411\u524d\u8df3\uff0c\u76f4\u5230\u8df3\u52300\u6216\u8005\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u5339\u914d\u3002\n\n\u53ef\u662f\u5982\u4f55\u6c42\u51faKMP\u6570\u7ec4\u5462\uff1f\n\n\u8003\u8651\u8fd9\u6837\u7684border\uff0c\u5176\u5b9e\u5c31\u662f\u81ea\u5df1\u548c\u81ea\u5df1\u5339\u914d\u7684\u8fc7\u7a0b\u3002\u91c7\u7528\u7c7b\u4f3c\u4e0a\u9762\u7684\u505a\u6cd5\uff0c\u7ef4\u62a4\u4e24\u4e2a\u6307\u9488\u8fdb\u884c\u5339\u914d\u5373\u53ef\u3002\n\n### \u4e0a\u4ee3\u7801\n\n\n------------\n\n```cpp\n#include<bits/stdc++.h>\n#define eps 1e-10\n#define re register\n#define N 2001001\n#define MAX 2001\n#define PI 3.1415926535897932384626\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ninline void read(re ll &ret)\n{\n    ret=0;re ll pd=0;re char c=getchar();\n    while(!isdigit(c)){pd|=c=='-';c=getchar();}\n    while(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c^48);c=getchar();}\n    ret=pd?-ret:ret;\n}\ninline void dbread(re db &ret)\n{\n    ret=0.0;re char c=getchar();re db num=1.0;re ll pd=0;\n    while(!isdigit(c)){pd|=c=='-';c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    if(c!='.'){ret=pd?-ret:ret;return;}\n    c=getchar();\n    while(isdigit(c)){ret+=(num/=10)*(c^48);c=getchar();}\n    ret=pd?-ret:ret;\n    return;\n}\nll kmp[N],lena,lenb;\nchar a[N],b[N];\nint main()\n{\n    scanf(\"%s\",a+1);\n    scanf(\"%s\",b+1);\n    lena=strlen(a+1);\n    lenb=strlen(b+1);\n    re int j=0;\n    for(re int i=2;i<=lenb;i++)\n    {\n        while(j&&b[i]!=b[j+1])j=kmp[j];\n        if(b[i]==b[j+1])j++;\n        kmp[i]=j;\n    }\n    for(re int i=1;i<=lena;i++)\n    {\n        while(j&&a[i]!=b[j+1])j=kmp[j];\n        if(a[i]==b[j+1])j++;\n        if(j==lenb)\n        {\n            printf(\"%lld\\n\",i-lenb+1);\n            j=kmp[j];\n        }\n    }\n    for(re int i=1;i<=lenb;i++)\n        printf(\"%lld \",kmp[i]);\n//    system(\"pause\");\n    return 0;\n}\n```\n",
        "postTime": 1560566626,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "Kmp\u4f5c\u4e3a\u4e00\u5927\u57fa\u7840\u7b97\u6cd5\uff0c\u662f\u5b57\u7b26\u4e32\u5b66\u4e60\u7684\u4e00\u4e2a\u5fc5\u5907\u77e5\u8bc6\u3002\n~~\u5b83\u4e5f\u5f88\u7b80\u5355\u3002~~\n\n---\n## \u7b97\u6cd5\u7528\u9014\uff1a \n\n   \u5728\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u5b50\u4e32\u3002\u4f8b\u5b50\uff1a\u5728BBC   ABCDAB  ABCDABCDABDE\n\u4e2d\u67e5\u627eABCDABD\u3002\n\n   \u6700\u57fa\u7840\u7684\u5b50\u4e32\u67e5\u627e\u5c31\u662f\u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\u4e00\u4e2a\u4e00\u4e2a\u5411\u540e\u79fb\u52a8\u5e76\u8fdb\u884c\u6bd4\u8f83\u3002kmp\u7b97\u6cd5\u5728\u6b64\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u53ef\u4ee5\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u6bd4\u8f83\u3002\u6bcf\u4e00\u6b21\u5931\u8d25\u7684\u6bd4\u8f83\u4e2d\u5fc5\u5b9a\u4f1a\u6709\u5df2\u7ecf\u91cd\u5408\u7684\u90e8\u5206\u548c\u672b\u5c3e\u4e0d\u91cd\u5408\u7684\u90e8\u5206\uff0c\u5982\u679c\u4e0b\u4e00\u6b21\u6bd4\u8f83\u53ea\u662f\u5f80\u540e\u79fb\u52a8\u4e00\u4f4d\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6548\u7387\u7684\u635f\u5931\u2014\u2014\u4e0b\u4e00\u6b65\u76f4\u63a5\u4ece\u4e0d\u5339\u914d\u7684\u5730\u65b9\u5f00\u59cb\uff0c\u8fd9\u624d\u80fd\u4f7f\u6bd4\u8f83\u7684\u6b21\u6570\u6700\u5c0f\u5316\u3002\n\n---\n## \u7b97\u6cd5\u8fc7\u7a0b\uff1a\n\n\u9996\u5148\u9700\u8981\u5bf9\u5b50\u4e32\u5efa\u7acb\u4e00\u4e2a\u5bf9\u5e94\u7684\u6570\u7ec4\uff0c\u5b83\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u4e0b\u6807\u4e0e\u8981\u67e5\u627e\u7684\u5b50\u4e32\u4e2d\u7684\u5b57\u7b26\u4f4d\u7f6e\u76f8\u5bf9\u5e94\uff0c\u5c31\u53ebnext\u597d\u4e86\u2014\u2014\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u8ba1\u7b97**\u6bcf\u6b21\u6bd4\u8f83\u5931\u8d25\u540e\u5411\u540e\u79fb\u52a8\u7684\u957f\u5ea6**\u3002\u8fd9\u4e2a\u6570\u7ec4\u5efa\u7acb\u7684\u539f\u5219\u5982\u4e0b\uff1a\n   \n   1.\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a-1\n   \n   2.\u5bf9\u4e8e\u7b2cn\u4e2a\u5143\u7d20\uff1a\u67e5\u770b\u7b2cn-1\u4e2a\u5143\u7d20\u7684\u503c\u5e76\u8bbe\u4e3aa\uff08\u7528\u70b9\u4f2a\u4ee3\u7801\uff09\n```\n    if(a==-1)\n    \tnext[n]=0;\n    else\n     \tcompare(\u7b2cn-1\u4e2a\u548c\u7b2ca\u4e2a\u5b57\u7b26)\n        \tsame\n            \tnext[n]=a+1;\n            not same\n            {\n            \ta=next[a];\n                back to \"if(a==-1)\";\n            }\n```\n\n    \n  ~~\u5e94\u8be5\u80fd\u770b\u5f97\u61c2~~\n  \n  \u6709\u4e86\u8fd9\u4e2a\u6570\u7ec4\uff0c\u6211\u4eec\u5c31\u80fd\u505a\u9898\u4e86\uff1a\n  \n  \u5728BBC   ABCDAB  ABCDABCDABDE\u4e2d\u627eABCDABD\uff0c\u53ef\u6c42\u51faABCDABD\u7684next\u6570\u7ec4\u503c\u4e3a{-1,0,0,0,0,1,2}\u3002\n  \n  1.\u6bd4\u8f83ABCDABD\u548cBBC ABC\uff0c\u663e\u7136\u4e0d\u5339\u914d\uff0c\u5411\u540e\u79fb\u52a8\u76f4\u5230\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0e\u4e4b\u5339\u914d\uff08\u8fd9\u91cc\u6ca1\u6709\u6280\u5de7\uff0c\u5e38\u89c4\u64cd\u4f5c\uff09\n  \n  2.\u5230\u4e86ABCDABD\u548cABCDAB \uff0c\u8fd9\u91cc\u5c31\u8981\u7528next\u6570\u7ec4\u4e86\u2014\u2014\u6211\u4eec\u5728\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u65f6\u6ca1\u6709\u5339\u914d\u4e0a\uff0c\u5c31\u67e5\u627enext\u6570\u7ec4\u5f97\u5230\u6700\u540e\u4e00\u4e2aD\u503c\u4e3a2\u3002\uff08\u6572\u9ed1\u677f\u5212\u91cd\u70b9\uff09\u8fd9\u91cc\u5c31\u8981\u7528\u5230kmp\u7b97\u6cd5\u4e2d\u7684\u79fb\u52a8\u4e86\uff1a**\u79fb\u52a8\u7684\u4f4d\u6570=\u5df2\u7ecf\u5339\u914d\u4e0a\u7684\u5b57\u7b26\u6570\u91cf-\u6ca1\u6709\u5339\u914d\u4e0a\u7684\u5b57\u7b26\u7684next\u6570\u503c\u3002**\u4e8e\u662f6-2=4\uff0c\u79fb\u52a84\u4f4d\uff0c\u7ee7\u7eed\u6bd4\u8f83\u5e76\u91cd\u590d\u8fd9\u6837\u7684\u64cd\u4f5c\u3002\n  \n  ~~\u55ef\u5bf9\u5230\u8fd9\u513f\u5c31\u7ed3\u675f\u4e86\u3002~~\n  \n~~\u5b8c\u6574\u4ee3\u7801\u662f\u4e0d\u53ef\u80fd\u8d34\u7684\uff0c\u8fd9\u8f88\u5b50\u90fd\u4e0d\u53ef\u80fd\u3002~~\n\n\u60f3\u60f3\u8fd8\u662f\u628a\u5b8c\u6574\u4ee3\u7801\u8d34\u4e0a\u53bb\u6bd4\u8f83\u597d\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nchar a1[2000000],a2[2000000];\nint kmp[2000000];\nint main()\n{\n    cin>>a1>>a2;\n    kmp[0]=kmp[1]=0;\n    int len1=strlen(a1),len2=strlen(a2);\n    int k;\n    k=0;\n    for(int i=1;i<len2;i++)\n    {\n        while(k&&a2[i]!=a2[k])k=kmp[k];\n        kmp[i+1]=a2[i]==a2[k]?++k:0;\n    }\n    k=0;\n    for(int i=0;i<len1;i++)\n    {\n        while(k&&a1[i]!=a2[k])k=kmp[k];\n        k+=a1[i]==a2[k]?1:0;\n        if(k==len2)\n\t\tcout<<i-len2+2<<endl;\n    }\n    for(int i=1;i<=len2;i++)\n\tcout<<kmp[i]<<' ';\n    return 0;\n}\n```\n",
        "postTime": 1545533603,
        "uid": 164532,
        "name": "arthurwalnut",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "\u6ce8\u610f\uff1a\u672c\u6587\u9762\u5411\u5bf9KMP\u6709\u4e86\u89e3\u4f46\u5bf9next\u6570\u7ec4\u4e0d\u5927\u6e05\u695a\u7684\u4eba\uff01\uff01\u840c\u65b0\u8bf7\u5148\u4e86\u89e3\u57fa\u7840\uff01\uff01\n--\n(\u5176\u5b9e[\u82b1\u59d0\u7684\u9898\u89e3](https://pks-loving.blog.luogu.org/zi-fu-chuan-xue-xi-bi-ji-qian-xi-kmp-xuan-xue-di-dan-mu-shi-chuan-pi-post)\u8bb2\u7684\u7279\u522b\u6e05\u695a\u4e86~~\u4f46\u662f\u6211\u7406\u89e3\u7684\u65b9\u6cd5\u6709\u70b9\u4e0d\u540c\u6240\u4ee5\u8fd8\u662f\u4ea4\u9898\u89e3\u4e86QWQ~~)\n\n\u6211\u81ea\u5df1\u770b\u84dd\u4e66(\u5218\u6c5d\u4f73\u7684\u8bad\u7ec3\u6307\u5357)\u5b66\u4e86\u4e0bKMP\uff0c\u7136\u800c\u84dd\u4e66\u4e5f\u6ca1\u6709\u7ec6\u8bb2\uff0c\u53ea\u662f\u8ba9\u6211\u4eec\u67e5\u767e\u5ea6\u5e76\u4e14\u8d34\u4e0a\u4e86\u4ee3\u7801(\u5176\u5b9e\u5e94\u8be5\u662f\u53ef\u4ee5\u7406\u89e3\u7684\u4f46\u662f\u6211\u592a\u83dc\u4e86)\uff0c\u627e\u767e\u5ea6\u770b\u4e86\u56db\u4e2a\u535a\u5ba2\u4e5f\u5e76\u6ca1\u6709\u770b\u592a\u61c2\uff0c\u4f46\u662f\u501f\u9274\u4e86\u4e00\u70b9\u601d\u60f3\u3002\n\u6240\u4ee5\u5c31\u81ea\u5df1\u5bf9\u7740\u4ee3\u7801\u60f3nex\u7684\u610f\u4e49\uff0c\u7136\u540e\u82b1\u4e862\u4e2a\u5c0f\u65f6\u7801\u51fa\u6765\u8fd9\u4e2a\u3002\u3002\u3002\u4ee3\u7801\u91cc\u7684\u6ce8\u91ca\u662f\u6211\u4e3a\u4e86\u7406\u89e3(\u63a8\u5bfc)\u800c\u6572\u51fa\u6765\u7684\u5982\u679c\u770b\u4e0d\u61c2\u53ef\u4ee5\u79c1\u4fe1\u6211\u3002\n\n\u56e0\u4e3a\u6211\u521a\u5b66KMP\u7684\u65f6\u5019\u611f\u53d7\u5230\u4e86\u7edd\u671b\u3002\u3002\u3002\u6240\u4ee5\u5e0c\u671b\u80fd\u5bf9\u540c\u6837\u9047\u5230\u56f0\u96be\u5f97\u4eba\u6709\u6240\u5e2e\u52a9\u3002\n\nps\uff1a\u6ce8\u91ca\u4e2d\u7684$(a...b)=(c...d)$\u8868\u793a\n\n$T[a] = P[c],$\n\n$T[a+1] = P[c+1],$\n\n$.$\n\n$.$\n\n$.$\n\n$T[b-1] = P[d-1],$\n\n$T[b] = P[d].$\n\n(\u5728$getfail$\u4e2dT\u5c31\u662fP)\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n//\u5176\u5b9e\u53ea\u662f\u4e3a\u4e86\u7528strlen\u800c\u5df2\nusing namespace std;\n#define reg register\nconst int N = 1e6+5, INF = 1e9;\n\nchar T[N], P[N];\nint lt, lp;\nint nex[N];  // nex[0]=0\n\t\t\t // nex[1]=x1 -> 0...x1-1=1-x1...1-1 (\u5176\u5b9e\u5c31\u662f\u524d\u7f00\u4e0e\u540e\u7f00\uff0c\u770b\u4e86\u51e0\u4e2a\u4eba\u7684\u535a\u5ba2\u90fd\u6709\u63d0\u5230\u8fd9\u4e2a\u6982\u5ff5)\n\t\t\t // nex[2]=x2 -> 0...x2-1=2-x2...2-1\n\t\t\t // .\n\t\t\t // .\n\t\t\t // .\n\t\t\t // nex[n]=xn -> 0...xn-1=n-xn...n-1(@0) =>\n\t\t\t // if n,i faild -> compare xn,i   (@1) \u5728\u8fd9\u91cc\u663e\u7136@0\u4e0e@1\u4e92\u4e3a\u5145\u8981\u6761\u4ef6\uff08\u4f3c\u4e4e\u8868\u8ff0\u6709\u95ee\u9898\uff1f\uff1f\u7b97\u4e86\u90a3\u662f\u6570\u5b66\u4e0a\u7684\u4e8b\u60c5\u3002\u5c31\u662f\u8bf4\u4e24\u4e2a\u662f\u53ef\u4ee5\u4e92\u63a8\u7684\uff09\n\ninline void getfail() { //\u5176\u5b9e\u5c31\u662f\u7528\u6a21\u677f\u5339\u914d\u6a21\u677f\n\tint j = 0;    //j -> \u6a21\u677f\u7684\u4e0b\u6807   i -> \u5f85\u5339\u914d\u5b57\u4e32\u7684\u4e0b\u6807(\u8fd9\u91cc\u5c31\u662f\u6a21\u677f)    (@2)\n\tfor (reg int i = 1; i < lp; ++i) {\n\t\t// j=0 -> compare P[i], P[0] -> \u4ece\u5934\u5f00\u59cb  =>                   =>//\n\t\t// 1.P[i]!=P[0] -> compare P[++i], P[0] -> (j=0)not change     =>//\n\t\t// 2.P[i]==P[0] -> compare P[++i], P[1(++j)] -> ++j            =>//\n\t\t//                                                             =>//\n\t\t// j>0 -> compare P[i], P[j] -> {*}={0...j-1==i-j...i-1}  =>   =>//  \n\t\t/* 1.P[i]!=P[j] -> (@1) (@2) ->            =>//                =>//\n\t\t\t compare nex[j],i =>                   =>//                =>//\n\t\t\t (1).P[nex[j]]!=P[i] -> (@1) (@2) ->   =>//                =>//\n\t\t\t \t compare nex[nex[j]],i             =>//  j=nex[j]      =>//\n\t\t\t \t .                                 =>//                =>//\n\t\t\t \t .                                 =>//                =>//\n\t\t\t \t .                                 =>//                =>//\n\t\t\t2.P[i]==P[j] -> compare i+1,j+1 => ++j                     =>//\n\t\t*/ \n\t\twhile (j && P[i] != P[j]) j = nex[j];\n\t\t// 1.P[i]==P[j] => (though j==0)  (\u8fd9\u91cc\u53ef\u4ee5\u63a8\u51fa\u4e24\u70b9)\n\t\t//   (1)0...j=i-j...i -> (@0) -> nex[i+1]=j+1\n\t\t//   (2)compare ++j,++i -> ++j\n\t\t//   => ++j, nex[i+1]=j (\u56e0\u4e3afor\u5faa\u73af\u4e2d\u6709++i)\n\t\t// 2.P[i]!=P[j] -> j==0 (\u6ce8\u610fwhile\u91cc\u7684\u6761\u4ef6) -> when i+1!=x \u4ece\u5934\u5f00\u59cb \n        //   (\u56e0\u4e3aP[i]\u4e0eP[0]\u4e5f\u4e0d\u76f8\u7b49\u6240\u4ee5\u5982\u679ci+1\u5931\u914d\u4e86\u90a3\u4e48\u5c31\u53ea\u80fd\u4ece\u6a21\u677f\u7684\u7b2c\u4e00\u4e2a\u5f00\u59cb\u5339\u914d) =>\n\t\t//   compare i+1,0 -> (@0) -> nex[i+1]=0 (j)\n\t\tif (P[i]==P[j]) ++j;\n\t\tnex[i+1] = j;\n\t}\n}\n\ninline void KMP() {\n\tgetfail();\n\tint j = 0;\n\tfor (reg int i = 0; i < lt; ++i) {\n\t\t// most same as getfail()\n\t\twhile (j && T[i] != P[j]) j = nex[j];\n\t\t// 1.j==lp-1 -> success -> print(i-lp+1) \u5339\u914d\u6210\u529f\n\t\t// 2.T[i]==P[j] -> compare i+1,++j  \u5982\u679c\u76f8\u7b49\u5c31\u5e94\u8be5\u7ee7\u7eed\u6bd4\u8f83P[i+1]\u4e0eP[j]\n\t\t// 3.T[i]!=P[j] -> j=0 -> (@0) -> compare i+1, 0(\u5c31\u662fj)\n\t\tif (T[i] == P[j]) ++j;\n\t\tif (j == lp) printf(\"%d\\n\", i-lp+1+1);\n\t}\n}\n\nint main() {\n\tscanf(\"%s %s\", T, P);\n\tlt = strlen(T), lp = strlen(P);\n\tKMP();\n\tfor (reg int i = 1; i <= lp; ++i) { //\u6d1b\u8c37P3375 \u8981\u6c42\u8f93\u51fa\u4f46\u5374\u6ca1\u6709\u89c4\u5b9anext\u6570\u7ec4\uff0c\u6bd5\u7adf\u6bcf\u4e2a\u4eba\u7684\u6a21\u677f\u4e0d\u540c\uff0c\u5728\u89c2\u5bdf\u4e4b\u4e0b\u6211\u53d1\u73b0\u4f3c\u4e4e\u5c31\u662f\u8fd9\u6837\u7ed3\u679cAC\u4e86\u3002\u3002\u3002\n\t\tprintf(\"%d \", nex[i]);          //\u8fd9\u5728KMP\u91cc\u4e0d\u662f\u91cd\u70b9\u5566\u6240\u4ee5\u4e0d\u7528\u7ea0\u7ed3\u8fd9\u4e00\u5757QWQ\n\t}                                   //\u4f3c\u4e4e\u662f\u6709\u5927\u4f6c\u7528hash\u505a\u51fa\u6765\u4e86%%%\n\tputchar('\\n');\n\treturn 0;\n}\n\n```\n\u5176\u5b9e\u8fd9\u4f3c\u4e4e\u662fMP\uff0cKMP\u8fd8\u9700\u8981\u5bf9nex\u6570\u7ec4\u8fdb\u884c\u4f18\u5316(\u8bad\u7ec3\u6307\u5357P213)\uff0c\u4f46\u662fMP\u5df2\u7ecf\u5230\u8fbe\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4e0b\u9650\uff0c\u5e76\u4e14~~\u5728\u5f53\u65f6~~\u5df2\u7ecf\u8db3\u4ee5\u4f7f\u7528\uff0c\u6240\u4ee5\u6709\u60f3\u6cd5\u7684\u540c\u5b66\u5c31\u767e\u5ea6\u5457\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u8ba4\u4e3a\u8fd9\u79cd\u5b66\u4e60\u7684\u65b9\u5f0f\u4e5f\u662f\u53ef\u4ee5\u5c1d\u8bd5\u7684\uff0c\u5c3d\u7ba1\u53ef\u80fd\u6548\u7387\u8f83\u4f4e(\u6211\u4f1a\u8fd9\u4e48\u505a\u7684\u6839\u672c\u539f\u56e0\u53ef\u80fd\u662f\u521d\u4e2d\u4e3b\u8981\u5728\u641e\u6570\u7ade\u4e60\u60ef\u4e86\u81ea\u5df1\u63a8\u5bfc\u7684\u65b9\u6cd5)\n\n~~\u8fd9\u4e5f\u8bf4\u660e\u4e86\u4e00\u4e2a\u5957\u8033\u5f0f3D\u73af\u7ed5\u7acb\u4f53\u97f3\u8033\u673a\u7684\u91cd\u8981(\u6ed1\u7a3d)~~\u5982\u679c\u6ca1\u6709\u6211\u7684\u8033\u673a\uff0c\u5728\u673a\u623f\u5608\u6742\u7684\u73af\u5883\u4e0b\u6211\u6839\u672c\u4e0d\u53ef\u80fd\u9759\u4e0b\u5fc3\u6765\u53bb\u601d\u8003QWQ\u3002\n\nemmmmmm\u4e00\u7247\u597d\u5fc3\u671b\u7ba1\u7406\u5458\u5927\u5927\u4e0d\u8981\u9a73\u56deQAQ\u3002",
        "postTime": 1540382715,
        "uid": 39947,
        "name": "Ameiyo",
        "ccfLevel": 7,
        "title": "KMP\u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "KMP\u7b97\u6cd5\u4e3b\u8981\u7528\u4e8e\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u4f46\u662f\u5176\u6269\u5c55\u80fd\u89e3\u51b3\u5f88\u591a\u5b57\u7b26\u4e32\u95ee\u9898\u3002\u4e0b\u9762\u6211\u6765\u7ed9\u5927\u5bb6\u8bb2\u89e3KMP\u7b97\u6cd5 tips:\u4ee5\u4e0b\u6570\u7ec4\u5747\u4e3a\u4ece0\u5f00\u59cb\n## 1\u3001next\u6570\u7ec4\nnext\u6570\u7ec4\u7684\u5b9a\u4e49\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32str,next[i]\u8868\u793a\u7684\u662f\u5728str\u4e2d\n\n[0,next[i])\u4ee5\u53ca\n[i-next[i],i)\n\n\u8fd9\u4e24\u4e2a\u533a\u95f4\u4e2d\u7684\u5b57\u7b26\u4e25\u683c\u76f8\u7b49\u7684\u6700\u5927next[i]\u503c(\u533a\u95f4\u4e0d\u80fd\u91cd\u53e0\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\n`a b c a b c b b a b c`\n\n`0 0 0 1 2 3 0 0 1 2 3`\n\n`[a]  b   c  [a] `=> `next[4]` = `1`\n\n`[a] [b]  c  [a]  [b]` => `next[5]` = `2`\n\n`[a] [b] [c] [a]  [b]  [c]` => `next[6]`=`3`\n\n\u753b\u4e00\u5f20\u56fe\u610f\u4f1a\n\n![](https://www.z3475.cc/blog/wp-content/uploads/2018/08/temp3-1-300x101.png)\n\n\u5176\u4e2d\u7684\u7ebf\u8868\u793a\u76f8\u540c\u7684\u4e00\u5806\u76f8\u540c\u7684\u5b57\u7b26,\u957f\u65b9\u5f62\u6307\u4e00\u4e2a(\u4e00\u5806)\u5b57\u7b26,\u4e2d\u95f4\u7684\u7701\u7565\u53f7\u7701\u7565\u4e86\u4e00\u5806\u5b57\u7b26\n\n\u624b\u7b97\u4e0d\u96be\u5f97\u51fa\uff0c\u6211\u4eec\u5148\u4e0d\u8bb2\u8fd9\u4e2a\u6570\u7ec4\u901a\u8fc7\u7b97\u6cd5\u600e\u4e48\u751f\u6210\u7684\uff0c\u6211\u4eec\u5148\u8bb2\u600e\u4e48\u7528\u8fd9\u4e2a\u6570\u7ec4\n\n## 2\u3001KM\n\u5728\u4ecb\u7ecd\u666e\u901a\u7684KM\u7b97\u6cd5\u524d\u6211\u4eec\u5148\u56de\u987e\u4e00\u4e0b\u89e3\u51b3\u5b57\u7b26\u4e32\u67e5\u627e\u7684\u6734\u7d20\u7b97\u6cd5\n```cpp\nchar s1[MAXN],s2[MAXN];//s1.find(s2);\nint l1=strlen(s1),l2=strlen(s2);\nint j=0,i=0;\nwhile (i!=l1){\n\tif (s1[i]==s2[j]) i++,j++;//\u5339\u914d\n\telse i-=j-1,j=0;//\u5931\u914d\n    if (j==l2){\n    \tcout << i-j+1 << endl;\n        j=0;//\u76f8\u5f53\u4e8e\u5931\u914d\n\t}\n}\n```\n\u660e\u663e\u5931\u914d\u65f6\u7684\u79fb\u52a8\u53ef\u4ee5\u4f18\u5316,\u90a3\u600e\u4e48\u4f18\u5316\u5462,\u6211\u4eec\u5c31\u8981\u7528\u5230`next[]`\n\n\u6839\u636e`next[]`\u6211\u4eec\u53ef\u4ee5\u753b\u4e00\u5f20\u5173\u4e8e\u5931\u914d\u56fe\n![](https://www.z3475.cc/blog/wp-content/uploads/2018/08/temp1-1-300x107.png)\n\n\u6700\u4f73\u7684\u79fb\u52a8\u662f\u8fd9\u6837\n\n![](https://www.z3475.cc/blog/wp-content/uploads/2018/08/temp2-1-300x86.png)\n\n\u6240\u4ee5\u68c0\u6d4b\u5230\u5931\u914d\u65f6\n\n`i`\u53ef\u4ee5\u4fdd\u7559\uff0c`j` = `next[j-1]`\n\n\u4f46\u662f`j`\u80af\u5b9a\u6709\u7b49\u4e8e`0`\u7684\u60c5\u51b5,`j` - `1` \u4e0d\u5c31\u8d8a\u754c\u4e86\u5417?\n\n-\u6211\u4eec\u5c31\u5728\u8ba1\u7b97\u65f6\u52a0\u4e00\u4e2aF()\u51fd\u6570\u68c0\u6d4b`j` - `1`\u662f\u4e0d\u662f\u8d8a\u754c\u4e86\n\n\u4e8e\u662f\u7528`next[]`\u4f18\u5316\u540e\u7684\u4ee3\u7801\u5c31\u51fa\u6765\u4e86\n\n```\n#define F(x,nxt) (x<0?-1:nxt[x])\nint i=0,j=0;\nwhile (i!=l1){\n\tif (j==-1||s1[i]==s2[j]) i++,j++;\n\telse j=F(j-1,nxt);\n\tif (j==l2){\n\t\tcout << i-j+1 << endl;\n\t\tj=F(j-1,nxt);\n\t}\n}\n```\n\n## next[]\u7684\u8ba1\u7b97\n\u8003\u8651\u4ee5\u4e0b\u5b57\u7b26\u4e32,\u6211\u4eec\u8981\u7b97\u51fa\u5b83\u7684`next[]`\n\na b c a b c a b\n\n\u624b\u7b97\u5f97\n\n0 0 0 1 2 3 1 2\n\n\u663e\u7136\u5bf9\u4e8e\u6bcf\u4e00\u4e2a`next[i]`\u4e00\u79cd\u60c5\u51b5\u53ef\u4ee5\u8fd9\u4e48\u5f04\n\n`next[i]` = `next[i-1]` + `1` **if** `str[i]`==`str[next[i-1]]`\n\n\u90a3\u5f53`str[i]`!=`str[next[i-1]]`\u7684\u60c5\u51b5\u5462\n\n\u5148\u7ed9\u4e00\u4e2a\u7ed3\u8bba,\u7136\u540e\u6211\u4eec\u6765\u8bd5\u7740\u8bc1\u660e\u5b83\n\n\u6211\u4eec\u5c31\u4ee4`j` = `next[i-1]`\n```cpp\nwhile (1){\n\n\tif (str[i]==str[j]) {next[i] = j + 1;break;} //\u2460\n\tif (str[i]!=str[j]) j = next[j] - 1;  //\u2461\n    \n}\n```\n\u5373\n`next[i]` = `j` + `1`,`str[i]`==`str[j]` \u2460\n\n`j` = `next[j]` - `1`,`str[i]`!=`str[j]` \u2461\n\n\u4e00\u65e6\u6267\u884c\u5230\u2460,`next[i]`\u5c31\u7b97\u5b8c\u4e86\n\u8bc1\u660e\u8fc7\u7a0b\u6211\u4eec\u7528\u4e00\u5f20\u56fe\u6765\u610f\u4f1a\n\n![](https://www.z3475.cc/blog/wp-content/uploads/2018/08/temp1-300x44.png)\n\n\u6211\u4eec\u8981\u6c42\u7bad\u5934\u6307\u5411\u7684\u90a3\u4e2a\u5b57\u7b26\u7684next\u503c,\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u524d\u9762\u5b57\u7b26\u7684next\u503c\u5df2\u7ecf\u6c42\u5b8c\u4e86\n\n\u4f46\u662f\u6211\u4eec\u53ef\u80fd\u4f1a\u68c0\u6d4b\u5230\u2461\u8fd9\u79cd\u60c5\u51b5,\u56fe\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\n\n![](https://www.z3475.cc/blog/wp-content/uploads/2018/08/temp2-300x50.png)\n\n\u8fd9\u6837\u7684\u8bdd\u663e\u7136\u662f\u6b63\u786e\u7684,\u5269\u4e0b\u7684\u8bc1\u660e\u8fc7\u7a0b,\u63d0\u4e00\u4e2a\u4e3b\u8981\u601d\u8def\n\n1\u3001\u8bc1\u660e\u771f\u6b63\u7684next\u503c<\u7b97\u51fa\u6765\u7684\u503c\u662f\u5047\u7684\n\n2\u3001\u8bc1\u660e\u771f\u6b63\u7684next\u503c>\u7b97\u51fa\u6765\u7684\u503c\u662f\u5047\u7684\n\n\u53c8\u5728\u4e0a\u4e00\u7ae0\u8bb2\u5230\u6211\u4eec\u8fd8\u8981\u628anext[]\u5f80\u540e\u79fb\u4e00\u4f4d\u4e14next[0]=-1\n\n\u603c\u5728\u4e00\u8d77\u6709\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define F(x,nxt) (x<0?-1:nxt[x])\nusing namespace std;\nchar s2[1000010],s1[1000010];\nint nxt[1000010];\nint main(){\n\tscanf(\"%s%s\",s1,s2);\n\tint l1=strlen(s1),l2=strlen(s2);\n\t//\u8ba1\u7b97nxt[]\n\tnxt[0]=0;\n\tfor (int i=1;i<l2;i++){\n\t\tint j=nxt[i-1];\n\t\twhile (j&&s2[i]!=s2[j]) j=nxt[j-1];\n\t\tif (s2[j]==s2[i]) nxt[i]=j+1;\n\t\telse nxt[i]=0;\n\t}\n\t//\u5339\u914d \n\tint i=0,j=0;\n\twhile (i!=l1){\n\t\tif (j==-1||s1[i]==s2[j]) i++,j++;\n\t\telse j=F(j-1,nxt);\n\t\tif (j==l2){\n\t\t\tcout << i-j+1 << endl;\n\t\t\tj=F(j-1,nxt);\n\t\t}\n\t}\n\tfor(int i=0;i<l2;i++) cout << nxt[i] << ' ';\n\treturn 0;\n}\n```\n",
        "postTime": 1534692344,
        "uid": 46860,
        "name": "z3475",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "KMP\u7b97\u6cd5\u662f\u4e00\u79cd\u6539\u8fdb\u7684\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5\uff0c\u7531D.E.Knuth\uff0cJ.H.Morris\u548cV.R.Pratt\u540c\u65f6\u53d1\u73b0\uff0c\u56e0\u6b64\u4eba\u4eec\u79f0\u5b83\u4e3a\u514b\u52aa\u7279\u2014\u2014\u83ab\u91cc\u65af\u2014\u2014\u666e\u62c9\u7279\u64cd\u4f5c\uff08\u7b80\u79f0KMP\u7b97\u6cd5\uff09\u3002KMP\u7b97\u6cd5\u7684\u5173\u952e\u662f\u5229\u7528\u5339\u914d\u5931\u8d25\u540e\u7684\u4fe1\u606f\uff0c\u5c3d\u91cf\u51cf\u5c11\u6a21\u5f0f\u4e32\u4e0e\u4e3b\u4e32\u7684\u5339\u914d\u6b21\u6570\u4ee5\u8fbe\u5230\u5feb\u901f\u5339\u914d\u7684\u76ee\u7684\u3002\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u5b9e\u73b0\u4e00\u4e2anext()\u51fd\u6570\uff0c\u51fd\u6570\u672c\u8eab\u5305\u542b\u4e86\u6a21\u5f0f\u4e32\u7684\u5c40\u90e8\u5339\u914d\u4fe1\u606f\u3002\u65f6\u95f4\u590d\u6742\u5ea6O(m+n)\u3002\uff08\u6458\u81ea\u767e\u5ea6\u767e\u79d1https://baike.baidu.com/item/kmp%E7%AE%97%E6%B3%95/10951804?fr=aladdin \uff09\n\n\u524d\u51e0\u5929\u521a\u521a\u628aKMP\u7684\u4ee3\u7801\u80cc\u51fa\u6765\uff0c\u7136\u540e\u627e\u5230\u4e86\u8fd9\u4e48\u4e00\u4e2a\u6a21\u677f\u9898\uff0c\u987a\u624b\u6253\u4e86\u4e00\u4e2a\uff0c\u5c45\u7136\u8fc7\u4e86\u2026\u2026\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5e93\nusing namespace std;//std\u547d\u540d\u7a7a\u95f4\nstring T,P;//\u7528C++\u7684string\u4f1a\u66f4\u65b9\u4fbf\nint f[1000001];\nvoid Get_Fail()//\u4ea7\u751ff\u6570\u7ec4\n{\n\tint m=P.length();//\u53ea\u8981\u6a21\u5f0f\u4e32\u957f\u5ea6\u5c31\u591f\u4e86\n\tf[0]=f[1]=0;//\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u7528\uff0c\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u5df2\u7ecf\u81ea\u52a8\u521d\u59cb\u5316\u4e3a0\n\tfor (int i=1;i<m;i++)\n\t{\n\t\tint j=f[i];\n\t\twhile (j&&P[j]!=P[i])\n\t\t{\n\t\t\tj=f[j];\n\t\t}\n\t\tf[i+1]=P[i]==P[j]?j+1:0;\n\t}\n}\nvoid KMP_Find()\n{\n\tint n=T.length(),m=P.length();//\u5206\u522b\u8868\u793a\u6587\u7ae0\u4e32\u548c\u6a21\u5f0f\u4e32\u7684\u957f\u5ea6\n\tGet_Fail();//\u9884\u5904\u7406\u4ea7\u751ff\u6570\u7ec4\n\tint j=0;\n\tfor (int i=0;i<n;i++)\n\t{\n\t\twhile (j&&P[j]!=T[i])\n\t\t{\n\t\t\tj=f[j];\n\t\t}\n\t\tif (P[j]==T[i])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\tif (j==m)\n\t\t{\n\t\t\tcout<<i-m+2<<endl;//\u8f93\u51fa\u5339\u914d\u4f4d\u7f6e\uff08\u504f\u79fb\u91cf\uff09\uff0c\u6ce8\u610f\u4f4d\u7f6e\u662f\u4ece1\u5f00\u59cb\u7684\uff0c\u800c\u4e0d\u662f0\uff01\n\t\t} \n\t}\n}\nint main()\n{\n\tcin>>T>>P;\n\tKMP_Find();//\u8dd1\u4e00\u904dKMP\n\tfor (int i=1;i<=P.length();i++)\n\t{\n\t\tcout<<f[i]<<\" \";//\u8f93\u51faf\u6570\u7ec4\n\t}\n\treturn 0;\n}\n```\n\n\u7eaf\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nstring T,P;\nint f[1000001];\nvoid Get_Fail()\n{\n\tint m=P.length();\n\tf[0]=f[1]=0;\n\tfor (int i=1;i<m;i++)\n\t{\n\t\tint j=f[i];\n\t\twhile (j&&P[j]!=P[i])\n\t\t{\n\t\t\tj=f[j];\n\t\t}\n\t\tf[i+1]=P[i]==P[j]?j+1:0;\n\t}\n}\nvoid KMP_Find()\n{\n\tint n=T.length(),m=P.length();\n\tGet_Fail();\n\tint j=0;\n\tfor (int i=0;i<n;i++)\n\t{\n\t\twhile (j&&P[j]!=T[i])\n\t\t{\n\t\t\tj=f[j];\n\t\t}\n\t\tif (P[j]==T[i])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\tif (j==m)\n\t\t{\n\t\t\tcout<<i-m+2<<endl;\n\t\t} \n\t}\n}\nint main()\n{\n\tcin>>T>>P;\n\tKMP_Find();\n\tfor (int i=1;i<=P.length();i++)\n\t{\n\t\tcout<<f[i]<<\" \";\n\t}\n\treturn 0;\n}\n```\n\n\u7b97\u6cd5\u90e8\u5206\u548c\u9884\u5904\u7406\u90e8\u5206\u795e\u4f3c\u2026\u2026\n\n\u4e0d\u8fc7\u8fd9\u91cc\u7684\u4ee3\u7801\u8fd8\u4e0d\u662f\u5b8c\u6574\u7684KMP\u7b97\u6cd5\uff0c\u771f\u6b63\u7684KMP\u7b97\u6cd5\u8fd8\u5305\u62ec\u5bf9\u5931\u914d\u51fd\u6570\u7684\u4f18\u5316\uff08\u5c31\u662fKMP_Find\u51fd\u6570\uff09\uff0c\u8fd9\u53ea\u662fMP\u7b97\u6cd5\uff0c\u4f46\u662f\u56e0\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5df2\u7ecf\u8fbe\u5230\u4e86O(n+m)\uff0c\u800c\u4e14\u5df2\u7ecf\u591f\u7528\u4e86\uff0c\u6240\u4ee5\u5c31\u62ff\u8fd9\u4e2aMP\u7b97\u6cd5\u6765\u4ea4\u4e86\u5427\uff01\uff08\u53c2\u8003\u81ea\u5218\u6c5d\u4f73\u3001\u9648\u5cf0\u7f16\u8457\u7684\u300a\u7b97\u6cd5\u5165\u95e8\u7ecf\u5178\u2014\u2014\u8bad\u7ec3\u6307\u5357\u300b\u7b2c\u4e8c\u7248\uff09",
        "postTime": 1528161503,
        "uid": 54456,
        "name": "\u9752\u4e18\u6768\u54f2",
        "ccfLevel": 0,
        "title": "P3375 \u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d \u9898\u89e3"
    },
    {
        "content": "# \u6d45\u663e KMP\n\u4e0d\u7ba1\u5728\u641c\u7d22\u5f15\u64ce,\u8fd8\u662fWords\u67e5\u627e\u65f6,\u90fd\u4f1a\u8fd0\u7528\u5230\u5b57\u7b26\u4e32\u5339\u914d\u3002\n\nKMP\u7b97\u6cd5\u662f\u4e00\u79cd\u6539\u8fdb\u7684\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5,\u7531D.E.Knuth\uff0cJ.H.Morris\u548cV.R.Pratt\u540c\u65f6\u53d1\u73b0,\u6240\u4ee5\u53ebKMP\u3002\n\n\n\n---\n\n## \u6734\u7d20\u65b9\u6cd5\n\u5f88\u5bb9\u6613\u7406\u89e3,\u5374\u975e\u5e38\u6162\u7684\u529e\u6cd5\u3002\u4e00\u4e2a\u4e00\u4e2a\u6bd4\u8f83,\u901f\u5ea6\u6700\u6162\u4e3aO(nm);\n\n\u6162\u7684\u539f\u56e0\u5728:\u8981\u4e00\u4e2a\u4e00\u4e2a\u5f80\u4e0b\u627e,\u5931\u914d\u540e\u8981\u91cd\u65b0\u627e\u3002\n\n---\n\n## KMP\n\n\u6211\u4eec\u60f3,\u600e\u6837\u63d0\u9ad8\u901f\u5ea6?\u5f88\u5bb9\u6613\u60f3\u5230,\u5982\u679c\u5931\u914d\u540e\u4e0d\u662f\u91cd\u65b0,\u800c\u662f\u518d\u5f80\u540e\u51e0\u6b65,\u5c82\u4e0d\u662f\u7f8e\u54c9?\n\n\u8fd9\u65f6\u5c31\u51fa\u73b0\u4e86KMP\u7b97\u6cd5,\u5931\u914d\u540e\u4e0d\u662f\u91cd\u65b0\u627e,\u800c\u662f\u5f80\u540e\u51e0\u6b65\u3002\u51e0\u6b65?\n```pascal\n\u5df2\u7ecf\u5339\u914d\u6570\u91cf \u51cf\u53bb \u90e8\u5206\u5339\u914d\u6570\u91cf = \u9000\u540e\u6b65\u6570\n```\n\u90e8\u5206\u5339\u914d\u6570\u91cf\u5e76\u4e0d\u662f\u6307\u5269\u4e0b\u7684\u672a\u5339\u914d\u6570\u91cf,\u800c\u662f\u6709\u4e00\u4e2a**\u90e8\u5206\u5339\u914d\u8868**\u3002(\u5bf9\u4e8e\u8981\u5339\u914d\u7684\u5b57\u7b26\u4e32)\n\n\n### \u90e8\u5206\u5339\u914d\u8868\n\n\u9996\u5148\u6211\u4eec\u4e86\u89e3\u51e0\u4e2a\u5b9a\u4e49:\n```pascal\n1.\u524d\u7f00\n2.\u540e\u7f00\n```\n\u770b\u6837\u4f8b:\n```pascal\nhello\u7684\u524d\u540e\u7f00:\n\u524d\u7f00: h he hel hell\n\u540e\u7f00: o lo llo ello\n```\n\u90a3\u4e48,\u5982\u679c\u6709\u524d\u7f00=\u540e\u7f00\u7684\u60c5\u51b5,s[i]\u7684\u90e8\u5206\u5339\u914d\u6570\u5c31\u662f\u524d\u7f00(\u540e\u7f00)\u7684len\u3002\n\n```pascal\nABAB\n\"A\"\u6ca1\u6709\u524d\u540e\u7f00\u3002\n\"AB\"\u524d\u7f00:\"A\",\u540e\u7f00:\"B\"\u3002(\u65e0\u76f8\u540c)\n\"ABA\"\u524d\u7f00:\"A\",\"AB\",\u540e\u7f00:\"B\",\"BA\"\u3002(\u65e0\u76f8\u540c)\n\"ABAB\"\n\u524d\u7f00:A AB ABA\n\u540e\u7f00:B AB BAB (\u6709\u76f8\u540c)\n\u6240\u4ee5ABAB\u7684\u90e8\u5206\u5339\u914d\u8868\u4e3a\nA  B  A  B\n0  0  0  2(\u957f\u5ea6\"AB\")\n```\n\n\u56de\u5230KMP,\u53ea\u8981\u6211\u4eec\u5931\u914d,\u5c31\u76f4\u63a5\u8df3\u5230\u540e\u9762\u53bb\u5c31\u53ef\u4ee5\u4e86,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n+m),\u90e8\u5206\u5339\u914d\u8868\u9700\u8981\u9884\u5904\u7406\u3002\n\n---\n## \u6f14\u793a:\n```pascal\n\u5339\u914d\u4e32:ABACABADDABBABAB\n\u6a21\u5f0f\u4e32:ABAB\n\nABACABADDABBABAB\nABAB<-\n  (\u5931\u914d,\u5df2\u5339\u914d\u6570\u91cf(3)-\u90e8\u5206\u5339\u914d\u6570(0),\u8df33\u683c)\n  \nABACABADDABBABAB\n   ABAB (\u5931\u914d)\n   \nABACABADDABBABAB\n    ABAB (\u5931\u914d,3-0=3)\n    \nABACABADDABBABAB\n       ABAB (\u5931\u914d,\u4e00\u76f4\u5230...(\u7701\u7565))\n       \nABACABADDABBABAB\n         ABAB (\u5931\u914d,2-0=2) \n         \nABACABADDABBABAB\n           ABAB (\u5931\u914d) \n           \nABACABADDABBABAB\n            ABAB(\u5339\u914d)            \n```\n\n",
        "postTime": 1527391511,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define Ull unsigned long long\nconst int maxn=2000048;\nchar s[maxn],c[maxn];\nint n,m,kase;\nint next[maxn],pre[maxn];\nUll p[maxn],f[maxn],z[maxn],base=131,tmp;\nvoid work()\n{\n\tnext[1]=0;\n\tfor(int i=2,j=0;i<=n;i++)\n\t{\n\t\twhile(j>0&&c[i]!=c[j+1]) j=next[j];\n\t\tif(c[i]==c[j+1]) j++;\n\t\tnext[i]=j;\n\t}\n}\n//\u601d\u8def\uff1a\n/*\n\u6211\u6765\u6559\u54c8\u4f60\u4eec\u54c8\u5e0c\n\u76f4\u63a5\u627e\u7236\u4e32\u4e2d\u9996\u5b57\u6bcd\u4e0e\u5b50\u4e32\u76f8\u540c\u7684\n\u518d\u76f4\u63a5O(1)\u6bd4\u8f83\u957f\u5ea6\u76f8\u540c\u65f6\uff0c\u4e24\u4e32\u5b57\u7b26\u7684hash\u503c\u662f\u5426\u76f8\u540c\n\u5176\u4e2d\n{\n\thash\u503c\u4e3a\u4e00\u4e2a\u7279\u522b\u7684\u4e3a\u4e86\u51cf\u5c0f\u8bef\u5dee\u7684\u4e00\u4e2a\u503c\uff0c\u5373\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3ahash\u503c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u51cf\u5c0f\u8bef\u5dee\n}\nhash\u503c\u7684\u8bbe\u5b9a\n{\n\t\u5c31\u50cf\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3an\u8fdb\u5236\u6570\n    \u5176\u4e2dn=131\u6216\u80051331\u4f1a\u51cf\u5c0f\u8bef\u5dee\n}\n\u7136\u540e\u76f4\u63a5\u6bd4\u8f83\u4e24\u6bb5\u5b57\u7b26hash\u503c\u662f\u5426\u76f8\u7b49\u5c31\u597d\u4e86\n\u6700\u540e\u7684next\u6570\u7ec4\u7528KMP\u7b97\u6cd5\u5c31\u597d\u4e86\n\u6211\u7684\u535a\u5ba2\u4e2d\u4e5f\u6709\u89e3\u91ca\u3001\u3001\u3001\n*/\nint main()\n{\n\tscanf(\"%s\",s+1); scanf(\"%s\",c+1); \n\tn=strlen(s+1); m=strlen(c+1);\n\twork(); \n\tp[0]=1;\n\tfor(int i=1;i<=n;i++)\n\t\ts[i+n]=s[i],f[i]=f[i-1]*base+s[i]-'A'+1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tp[i]=p[i-1]*base;\n\t\tz[i]=z[i-1]*base+c[i]-'A'+1;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(s[i]==c[1])\n\t\t{\n\t\t\tif(z[m]==(f[i+m-1]-f[i-1]*p[m]))\n\t\t\t\tprintf(\"%d\\n\",i);\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)\n\t\tprintf(\"%d \",next[i]);\n\treturn 0;\n} \n```",
        "postTime": 1524129761,
        "uid": 70862,
        "name": "\u98ce\u706b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e2a\u7eaf\u7684KMP\uff0c\u53ea\u662f\u987a\u5e26\u628anext\u6570\u7ec4\u8f93\u51fa\u4e00\u4e0b\u800c\u5df2\n\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint p[1000001];//\u5373\u9898\u76ee\u4e2d\u7684NEXT\nchar a[1000001],b[1000001];//\u6240\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\nint la,lb,j;//la,lb\u5373\u957f\u5ea6\nint main(){\n    cin>>a+1;\n    cin>>b+1;//\u8bfb\u5165\u5b57\u7b26\u4e32\uff0c+1\u662f\u4e3a\u4e86\u8ba9\u5b57\u7b26\u4ecea[1]\u7684\u4f4d\u7f6e\u5f00\u59cb\u8bfb\uff0c\u65b9\u4fbf\u540e\u6765\u64cd\u4f5c\uff1b\n    la=strlen(a+1);\n    lb=strlen(b+1);\n    for (int i=2;i<=lb;i++){    \n        while(j>0&&b[i]!=b[j+1])\n        j=p[j];    \n        if(b[j+1]==b[i])j++;    \n        p[i]=j;\n```\n}//\u6c42p\u7684\u8fc7\u7a0b\n```cpp\n    j=0;\n    for(int i=1;i<=la;i++){\n            while(j>0&&b[j+1]!=a[i])\n            j=p[j];\n            if (b[j+1]==a[i]) \n            j++;\n            if (j==lb) cout<<i-lb+1<<endl;\n```\n}//\u5bfb\u627e\u5b50\u4e32\n```cpp\n    for (int i=1;i<=lb;i++)\n    cout<<p[i]<<' ';//\u8f93\u51fap\u6570\u7ec4\n    return 0;\n}\n\n```",
        "postTime": 1508596638,
        "uid": 54150,
        "name": "\u5c82\u66f0\u65e0\u8863",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nchar s1[1000005],s2[1005]; \nint len1,len2;\nint f[1000005],n[1005];\n//\u770b\u4e86\u5927\u90e8\u5206\u4eba\u4f7f\u7528\u4e86\u5faa\u73af\uff0c\u4f46\u6211\u8ba4\u4e3a\u5229\u7528\u9012\u5f52\u6784\u7b51\u8df3\u8dc3\u8868\u4e5f\u662f\u4e00\u6761\u975e\u5e38\u4e0d\u9519\u7684\u601d\u8def\nint buildn(int i,int j){\n    if(s2[i+1]!=s2[j+1])\n    {\n        if(j==0) return 0;\n        buildn(i,n[j]);\n    }\n    else\n        return j+1; \n} \n//\u6784\u7b51f\u3010\u3011\uff0c\u7c7b\u4f3c\u4e8e\u6784\u7b51\u8df3\u8dc3\u8868\u3002\nint buildf(int i,int j){\n    if(s1[i+1]!=s2[j+1])\n    {\n        if(j==0) return 0;\n        buildf(i,n[j]);\n    }\n    else\n        return j+1; \n}\nint main(){\n    scanf(\"%s\",s1);\n    scanf(\"%s\",s2);\n    len1=strlen(s1);len2=strlen(s2);\n    for(int i=len1;i>=1;i--) s1[i]=s1[i-1];\n    for(int i=len2;i>=1;i--) s2[i]=s2[i-1];\n   //\u4e3a\u4e24\u4e2a\u6570\u7ec4\u8d4b\u521d\u503c\n    n[1]=0;\n    if(s1[1]==s2[1]) f[1]=1;\n    else f[1]=0;\n    for(int i=1;i<len2;i++) n[i+1]=buildn(i,n[i]);\n    for(int i=1;i<=len1;i++) {\n        f[i+1]=buildf(i,f[i]);\n        if(f[i]==len2) printf(\"%d\\n\",i-len2+1);//\u6ce8\u610f\u8f93\u51fa\u7684\u662f\u5b57\u7b26\u4e32\u7684\u9996\u4f4d\uff0c\u9700\u8981\u628af[i]\u7684\u503c\u51cf\u53bb\u957f\u5ea6\u540e+1\n    }\n    for(int i=1;i<=len2;i++) printf(\"%d \",n[i]);\n}\n```",
        "postTime": 1487000116,
        "uid": 20830,
        "name": "dk962725312",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3375 \u3010\u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d\u3011"
    }
]