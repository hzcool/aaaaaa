[
    {
        "content": "\u90fd\u662f\u6253**\u6700\u77ed\u8def**\u6216\u662f**\u514b\u9c81\u65af\u5361\u5c14\u91cd\u6784\u6811**\u7684\u5417??!!\n\n\u6211\u539f\u672c\u4e5f\u60f3\u6253\u4e00\u4e2a**\u514b\u9c81\u65af\u5361\u5c14\u91cd\u6784\u6811**\u6c34\u8fc7\u53bb,\u4f46\u540e\u6765\u53d1\u73b0~~\u5b8c\u5168\u6ca1\u5fc5\u8981\u90a3\u4e48\u9ebb\u70e6~~,\u4e00\u4e2a**\u514b\u9c81\u65af\u5361\u5c14\u6700\u5c0f\u751f\u6210\u6811**\u5c31\u53ef\u4ee5\u6c34\u8fc7\u53bb\u4e86\n\n\u5c06\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f,\u7136\u540e\u514b\u9c81\u65af\u5361\u5c14\u6700\u5c0f\u751f\u6210\u6811\u8fde\u8fb9,\u8fd9\u6837\u5f53S\u548cT\u7b2c\u4e00\u6b21\u8054\u901a\u65f6,\u5f53\u524d\u8fb9\u7684\u6743\u503c\u5c31\u662f\u7b54\u6848\u4e86.\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,s,t,a[20001];\nstruct each\n{\n    int x,y,cost;\n}b[20001];//\u5b58\u8fb9\nbool com(each x,each y)\n{\n    return x.cost<y.cost;\n}\nint read()//\u8bfb\u5165\u4f18\u5316\u6a21\u677f\n{\n    char ch=getchar();\n    int x=0,f=1;\n    while(ch<'0'||ch>'9')\n        {\n        if(ch=='-')\n            f=-1;\n        ch=getchar();\n        }\n    while(ch>='0'&&ch<='9')\n        {\n        x=x*10+ch-'0';\n        ch=getchar();\n        }\n    return x*f;\n}\nint find(int x)//\u5e76\u67e5\u96c6\u57fa\u672c\u64cd\u4f5c\n{\n    if(a[x]==0)\n        return x;\n    a[x]=find(a[x]);\n    return a[x];\n}\nint main()\n{\n    n=read();\n    m=read();\n    s=read();\n    t=read();\n    for(int i=1;i<=m;i++)//\u65e0\u8111\u8f93\u5165\n        {\n        b[i].x=read();\n        b[i].y=read();\n        b[i].cost=read();\n        }\n    sort(b+1,b+m+1,com);//\u6392\u5e8f\n    for(int i=1;i<=m;i++)//\u514b\u9c81\u65af\u5361\u5c14\u6700\u5c0f\u751f\u6210\u6811\u8fde\u8fb9\n        {\n        int X=find(b[i].x),Y=find(b[i].y);\n        if(X!=Y)\n            a[X]=Y;\n        if(find(s)==find(t))//\u5982\u679c\u8054\u901a\u76f4\u63a5\u8f93\u51fa\u9000\u51fa\n            {\n            cout<<b[i].cost<<endl;\n            return 0;\n            }\n        }\n    return 0;\n}\n```",
        "postTime": 1532075293,
        "uid": 88567,
        "name": "lzk5627",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u4e8c\u5206+bfs\u6c34\u8fc7\u3002\u6d1b\u8c37\u7684\u9999\u6e2f\u8bb0\u8005\u5c31\u662f\u5feb\u3002\n\n\u00b7\u00b7\u00b7\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <queue>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint h[50001],ne[50001],w[50001],to[50001],en=0;\nint n,m,S,T;\nint dis[10001];\ninline void add(int a,int b,int c)\n{ne[en]=h[a];w[en]=c;to[en]=b;h[a]=en++;}\ninline bool SPFA(int mid)\n{\n    memset(dis,0x3f,sizeof dis);\n    queue<int>q;\n    q.push(S);\n    dis[S]=1;\n    while (!q.empty())\n    {\n        int x=q.front();q.pop();\n        for (int i=h[x];i>=0;i=ne[i])\n        if (w[i]<=mid){\n            if (dis[to[i]]==0x3f3f3f3f)\n            {\n                dis[to[i]]=1;\n                q.push(to[i]);\n            }\n        }\n    }\n    if (dis[T]==0x3f3f3f3f) return false;\n    else return true;\n}\nint main()\n{\n    memset(h,-1,sizeof h);\n    scanf(\"%d%d%d%d\",&n,&m,&S,&T);\n    for (int i=1;i<=m;++i)\n    {\n        int a,b,c;\n        scanf(\"%d%d%d\",&a,&b,&c);\n        add(a,b,c);\n        add(b,a,c);\n    }\n    int l=0,r=10000;\n    while (l<r)\n    {\n        int mid=(l+r)/2;\n        if (SPFA(mid)) r=mid;\n        else l=mid+1;\n    }\n    printf(\"%d\\n\",l);\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1475163433,
        "uid": 23943,
        "name": "Orion_Rigel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "## \u770b\u4e86\u697c\u4e0b\u5404\u4f4d\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u53d1\u73b0\u5927\u4f6c\u90fd\u662f\u7528\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u70b9\u7384\u5b66SPFA\uff0c\u6240\u4ee5\u672c\u849f\u84bb\u5c31~~\u6beb\u4e0d\u72b9\u8c6b~~\u7684\u5199\u4e86\u4e00\u4e2adijkstra+\u5806\u4f18\u5316\u7684\u7a0b\u5e8f\u3002\n\n\n### \u7136\u540e\u770b\u672c\u9898\uff0c\u5176\u5b9e\u4e2a\u4eba\u8ba4\u4e3a\u548c\u6700\u77ed\u8def\u610f\u4e49\u4e0a\u8fd8\u662f\u6709\u533a\u522b\u7684\uff0c\u56e0\u4e3a\u9898\u76ee\u662f\u6c42\u53ef\u8fbe\u7ec8\u70b9\u7684\u6240\u6709\u7ecf\u8fc7\u8def\u5f84\u4e2d\u6700\u957f\u7684\u4e00\u6bb5\u8fb9\u6743\u7684\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u5b83\u4e0d\u4e00\u5b9a\u8981\u5728s\u5230t\u6700\u77ed\u8def\u4e0a\u3002\u6240\u4ee5\u88f8\u7684\u6700\u77ed\u8def\u677f\u5b50\u80af\u5b9a\u4e0d\u884c\uff08 _**\u4eb2\u6d4b0\u5206**_  \uff09\n# \u4f46\u662f \n### \u6211\u4eec\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u5230\u5b83\u7684\u6700\u5927\u62e5\u6324\u5ea6\u7684\u6700\u5c0f\u503c\u80af\u5b9a\u662f \n##  \u4e0e\u5b83\u76f8\u90bb\u7684\u4e00\u4e2a\u70b9\u7684\u6b64\u503c\u548c\u4ed6\u4eec\u4e4b\u95f4\u7684\u8fb9\u6743\u503c\u53d6\u4e00\u4e2amax\uff0c\u7136\u540e\u5728\u6240\u6709max\u4e2d\u53d6\u4e00\u4e2amin\uff01\n### \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u53ea\u8981\u628a\u677f\u5b50\u91cc\u7684\u677e\u5f1b\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\uff0c\u5373\u53ea\u9700\u628a\u539f\u672c\u7684\u6c42\u548c\u6539\u4e3a\u53d6max\u5c31ok\u4e86\uff01 \n### \u53e6\uff0c\u6ce8\u610f\u6b64\u9898\u5e94\u6784\u65e0\u5411\u56fe\uff01\uff01\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int gi() {\n    int x=0,w=0;char ch=0;\n    while(!(ch>='0'&&ch<='9')) {\n        if(ch=='-') w=1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    return w?-x:x;\n}\t\t\t\t//\u8bfb\u5165\u4f18\u5316\nconst int maxn=3e5+1;\nconst int maxm=1e5+1;\npriority_queue< pair<int,int> > q\uff1b//\u5927\u6839\u5806\uff08\u540e\u53d8\u5c0f\u6839\u5806\uff09\nint n,m,s,t,head[maxm],tot,dis[maxm],vis[maxm];\nstruct Edge {\n\tint next,now,w;\n}edge[maxn];\t\t\nvoid make(int from,int to,int t) {\n\tedge[++tot].next=head[from];\n\tedge[tot].now=to;\n\tedge[tot].w=t;\n\thead[from]=tot;\n}\t\t\t\t\t//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\nvoid dijkstra() {\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tdis[s]=0;\n\tq.push(make_pair(0,s));\n\twhile(!q.empty()) {\n\t\tint x=q.top().second; q.pop();\n\t\tif(vis[x]) continue;\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=edge[i].next) {\n\t\t\tint k=max(dis[x],edge[i].w),r=edge[i].now;\n            //\u53d6max\u800c\u4e0d\u53d6\u548c\n\t\t\t\tif(k<dis[r]) {\n\t\t\t\t\tdis[r]=k;\n\t\t\t\t\tq.push(make_pair(-dis[r],r)); \n                    //\u53d6\u4e00\u4e2a\u8d1f\u5c31\u53ef\u4ee5\u53d8\u4e3a\u5c0f\u6839\u5806\uff01\uff01\n\t\t\t\t}\n\t\t}\n\t}\n\n}\nint main()\n{\n\tn=gi(); m=gi(); s=gi(); t=gi();\n\tfor(int i=1,x,y,z;i<=m;i++) {\n\t\tx=gi(); y=gi(); z=gi();\n\t\tmake(x,y,z);\n\t\tmake(y,x,z);\n        //\u6784\u65e0\u5411\u56fe\n\t}\n\tdijkstra();\n\tprintf(\"%d\",dis[t]);\n\treturn 0;\n}\n\n```",
        "postTime": 1532835443,
        "uid": 93733,
        "name": "\u8584\u8377\u51c9\u4e86\u590f",
        "ccfLevel": 0,
        "title": "\u5927\u80c6\u5199Dijkstra \uff01\uff01"
    },
    {
        "content": "\n\u8fd9\u9898\u5176\u5b9e\u5c31\u662f\u53eb\u6211\u4eec\u6c42$s->t$ \u7684\u6700\u77ed\u8def\u4e2d\u7684\u6700\u957f\u8fb9\uff0c\u53ef\u4ee5\u7528\u6700\u5c0f\u751f\u6210\u6811\u6765\u505a\uff0c\u4e5f\u53ef\u4ee5\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u6765\u505a\uff0c\u8fd8\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6+\u4e8c\u5206\n\n\u597d\u591a\u4eba\u90fd\u5199\u4e86\u6700\u5c0f\u751f\u6210\u6811\u548c\u6700\u77ed\u8def\uff0c\u849f\u84bb\u5c31\u4e0d\u91cd\u590d\u4e86\n### \u3010\u5206\u6790\u3011\n\u9898\u76ee\u6c42\u7ecf\u8fc7\u9053\u8def\u7684\u62e5\u6324\u5ea6\u6700\u5927\u503c\u6700\u5c0f\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e8c\u5206\u3002\u6211\u4eec\u5c31\u5206\u8ddd\u79bb\u3002\n\nL = \uff08\u8fb9\u7684\u6700\u5c0f\u503c\uff09 R = \uff08\u8fb9\u7684\u6700\u5927\u503c\uff09\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\n```cpp\nwhile(l <= r)\n{\n    mid = (l +r) >> 1;\n    if(check(mid)) ans = mid,r = mid - 1;\n    else l = mid + 1;\n}\n```\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662fcheck\u51fd\u6570\u600e\u4e48\u5199\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\u5982\u679c\u7528\u6743\u503c\u5c0f\u4e8e\u7b49\u4e8emid\u7684\u8fb9\u80fd\u5230\u8fbet\uff0creturn 1;\n\nelse return 0;\n\n\u770b\u5230\u6709\u4eba\u5728check\u91cc\u8dd1\u6700\u77ed\u8def\uff0c\u4f46\u662f\u849f\u84bb\u89c9\u5f97\u4e0d\u7528\uff0c\u53ea\u6709\u5c06\u6743\u503c\u5c0f\u4e8e\u7b49\u4e8emid\u7684\u8fb9\u7684\u91cf\u4e2a\u70b9\u5408\u5e76\u8d77\u6765\uff0c\u6700\u540e\u518d\u7528\u5e76\u67e5\u96c6\u5224\u4e00\u4e0b\n```cpp\ninline bool check(int x)\n{\n    for(register int i = 1;i <= n; i++) fa[i] = i;\n    for(int i = 1;i <= m; i++) if(val[i] <= x) H_(u[i],go[i]);\n    //\u5408\u5e76\n    return judge(a,b);\n   //\u7528\u5e76\u67e5\u96c6\u5224\u4e00\u4e0b\n}\n```\n\n### \u3010\u4ee3\u7801\u3011\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define min(x,y)(x<y?x:y)\n#define max(x,y)(x>y?x:y)\n\nusing namespace std;\n\nconst int M = 10001;\nconst int INF = 999999;\nint n,m,u[M<<1],go[M<<1],val[M<<1],ans;\nint fa[M],a,b;\nint l = INF,r,mid;\n\ninline int read() {\n    register int ans=0;register char c=getchar();register bool neg=0;\n    while((c<'0')|(c>'9')) neg^=!(c^'-'),c=getchar();\n    while((c>='0')&(c<='9')) ans=(ans<<3)+(ans<<1)+(c^'0'),c=getchar();\n    return neg?-ans:ans;\n}\n//\u5feb\u8bfb\n\ninline int getfa(int x)\n{\n    if(fa[x] == x) return x;\n    return fa[x] = getfa(fa[x]);\n}\n//\u5e76\u67e5\u96c6\n\ninline bool judge(int x,int y) {\n    if(getfa(x) != getfa(y)) return 0;\n    return 1;\n}\n//\u5e76\u67e5\u96c6\u5224\u65ad\n\ninline void H_(int x,int y)\n{\n    if(getfa(x) != getfa(y)) fa[getfa(x)] = fa[getfa(y)];\n}\n//\u5408\u5e76\n\ninline bool check(int x)\n{\n    for(register int i = 1;i <= n; i++) fa[i] = i;\n    for(int i = 1;i <= m; i++) if(val[i] <= x) H_(u[i],go[i]);\n    //\u5c06\u6743\u503c\u5c0f\u4e8e\u7b49\u4e8emid\u7684\u8fb9\u7684\u91cf\u4e2a\u70b9\u5408\u5e76\n    return judge(a,b);\n}\n\n\nint main(void)\n{\n    n=read();m=read();a=read();b=read();\n    for(register int i = 1;i <= m; i++)\n    {\n        u[i] = read();go[i] = read();val[i] = read();\n        l = min(val[i],l); r = max(val[i],r);\n    }\n    //\u4e8c\u5206\n    while(l <= r)\n    {\n        mid = (l + r) >> 1;\n        if(check(mid)) ans = mid,r = mid - 1;\n        else l = mid + 1;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n\u6700\u540e\u518d\u9644\u4e0aSPFA\u7684\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n//char xB[1<<15],*xS=xB,*xT=xB;\n//#define getchar() (xS==xT&&(xT=(xS=xB)+fread(xB,1,1<<15,stdin),xS==xT)?0:*xS++)\n\nusing namespace std;\n\nconst int M = 30001;\ninline int read() {\n    int ret;bool flag=0;char c;\n    while((c=getchar())<'0'||c>'9')flag^=!(c^'-');ret=c^48;\n    while((c=getchar())>='0'&&c<='9') ret=(ret<<3)+(ret<<1)+(c^48);\n    return flag?-ret:ret;\n}\n//\u5feb\u8bfb\nqueue <int> Q;\nint fir[M>>1],nex[M],go[M],val[M];\nint dis[M>>1],vis[M>>1];\nint n,m,a,b,tot;\n\ninline void add_edge(int x,int y,int z)\n{\n    nex[++tot] = fir[x],fir[x] = tot,go[tot] = y,val[tot] = z;\n}\n//\u524d\u5411\u661f\n\nint main(void)\n{\n    n = read();m = read();a = read();b = read();\n    for(int i = 1;i <= m; i++)\n    {\n        int x,y,z;\n        x = read();y = read();z = read();\n        add_edge(x,y,z);\n        add_edge(y,x,z);\n    }\n    for(int i = 1;i <= n; i++) dis[i] = 1e9  + 7;\n    dis[a] = 0;\n    Q.push(a);\n    vis[a] = 1;\n    while(!Q.empty())\n    {\n        int Now = Q.front();\n        Q.pop();\n        int Go;\n        vis[Now] = 0;\n        for(int i = fir[Now];i,Go = go[i];i=nex[i])\n        {\n            if(dis[Go] > max(dis[Now],val[i]))\n            {\n                dis[Go] = max(dis[Now],val[i]);\n                if(!vis[Go]) Q.push(Go),vis[Go]=1;\n            }\n        }\n    }\n    if(dis[b] == 1e9+7) dis[b] = -1;\n    printf(\"%d\",dis[b]);\n    return 0;\n}\n```\nSPFA\u76f8\u4fe1\u5927\u5bb6\u90fd\u4f1a\u4e86\uff0c\u5c31\u4e0d\u52a0\u4ec0\u4e48\u6ce8\u91ca\u4e86\n\n",
        "postTime": 1541425958,
        "uid": 75093,
        "name": "Awdrgysxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "## \u4ee4\u4eba\u667a\u7184\u7684\u4e8c\u5206\u64cd\u4f5c\r\n\r\n[AC\u8bb0\u5f55](https://www.luogu.org/record/show?rid=6347426)\r\n\r\n_\u8981\u770b\u6b63\u5e38\u7684\u89e3\u6cd5\u8bf7\u770b\u5176\u4ed6\u9898\u89e3_\r\n\r\n\u800c\u4e14\u8fd8\u86ee\u5feb\u7684\u3002\u3002\u3002\r\n\r\n\u5176\u5b9e\uff0c\u8fd9\u662f\u975e\u5e38\u5947\u8469\u7684\u4e00\u4e2a\u60f3\u6cd5\r\n\r\n\u603b\u4f53\u601d\u8def\u5c31\u662f\uff1a\u4e8c\u5206\u7b54\u6848\r\n\r\n\u4f60\u6ca1\u542c\u9519\uff0c\u4e8c\u5206\u7b54\u6848\r\n\r\n\u6211\u4eec\u4ece\u9898\u9762\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5176\u5b9e\u8fd9\u9053\u9898\u7684\u62e5\u6324\u5ea6\u4e5f\u5c31$10000$\u800c\u5df2\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4f1a\u53d1\u73b0\u4e8c\u5206\u4f3c\u4e4e\u53ef\u4ee5\uff1f\uff1f\uff1f\r\n\r\n\u5b58\u56fe\u5b58\u5b8c\u4e4b\u540e\u76f4\u63a5\u4e8c\u5206\uff0c\u4e8c\u5206\u7684$Check()$\u91cc\u9762\u6253\u4e00\u4e2a$BFS$\uff0c\u6765\u6c42\u80fd\u5426\u901a\u5f80\u7ec8\u70b9\uff0c\u5c31\u597d\u4e86\r\n\r\n\u5177\u4f53\u7684\u4e1c\u897f\u5c31\u4e0a\u4ee3\u7801\u6765\u770b\u5427\r\n\r\n****\r\n\r\n```cpp\r\n#include<bits/stdc++.h> // \u4e07\u80fd\u5934\u6587\u4ef6 \r\n\r\nusing namespace std;\r\n \r\n// \u90bb\u63a5\u8868\u5b58\u56fe \r\n// \u7531\u4e8e\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u8fd9\u4e9b\u6570\u7ec4\u8981\u5f00\u5927\u4e00\u500d\uff0c\u6211\u5c31\u662f\u8fd9\u4e48\u88ab\u5751\u6389\u4e8610\u5206 \r\nint End[50100]; // End[i]\u8868\u793a\u7b2ci\u6761\u8fb9\u7684\u7ec8\u70b9 \r\nint Value[50100]; // Value[i]\u8868\u793a\u7b2ci\u6761\u8fb9\u7684\u8fb9\u6743 \r\nint Next[50100]; // Next[i]\u8868\u793a\u7b2ci\u6761\u8fb9\u7684\u4e0b\u4e00\u6761\u8fb9 \r\nint Head[10100]; // Head[i]\u8868\u793a\u7b2ci\u4e2a\u70b9\u7684\u7b2c\u4e00\u6761\u4fbf\r\n \r\nint q[50100]; // BFS\u7684\u961f\u5217 \r\nint n, m, s, t; // \u5982\u9898\u610f \r\nint qf, qe; // BFS\u961f\u5217\u7684\u961f\u9996\u3001\u961f\u5c3e \r\nbool Used[10100]; // BFS\uff0c\u8868\u793a\u662f\u5426\u5230\u8fc7\u8fd9\u4e2a\u70b9 \r\n\r\nbool Check(int x){\r\n\tmemset(Used, false, sizeof(Used)); // \u6734\u5b9e\u65e0\u534e\u7684BFS \r\n\tqf = qe = 1;\r\n\tq[1] = s;\r\n\tUsed[s] = true;\r\n\twhile(qf <= qe){\r\n\t\tint xx = Head[q[qf]];\r\n\t\twhile(xx != -1){\r\n\t\t\tif(!Used[End[xx]] && Value[xx] <= x){ // \u62d3\u5c55 \r\n\t\t\t\tq[++qe] = End[xx];\r\n\t\t\t\tUsed[End[xx]] = true;\r\n\t\t\t}\r\n\t\t\txx = Next[xx]; \r\n\t\t}\r\n\t\tqf++; // \u51fa\u961f \r\n\t}\r\n\treturn Used[t]; // \u8fd4\u56de\u7ec8\u70b9\u6709\u6ca1\u6709\u5230\u8fc7 \r\n}\r\n\r\nint main(){\r\n\tmemset(Next, -1, sizeof(Next));\r\n\tmemset(Head, -1, sizeof(Head));\r\n\tscanf(\"%d %d %d %d\", &n, &m, &s, &t);\r\n\tint r = 0;\r\n\tfor(int i = 1; i <= m; i++){ // \u8bfb\u5165\u3001\u5b58\u56fe \r\n\t\tint a, b, c;\r\n\t\tscanf(\"%d %d %d\", &a, &b, &c);\r\n\t\tValue[i*2] = c;\r\n\t\tEnd[i*2] = b;\r\n\t\tNext[i*2] = Head[a];\r\n\t\tHead[a] = i*2;\r\n\t\tValue[i*2+1] = c; // \u7531\u4e8e\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u8981\u5b58\u4e24\u6b21 \r\n\t\tEnd[i*2+1] = a;\r\n\t\tNext[i*2+1] = Head[b];\r\n\t\tHead[b] = i*2+1;\r\n\t\tif(c > r)\r\n\t\t\tr = c; // \u751f\u6210\u4e00\u4e2a\u503c\u7b49\u4e8e\u6240\u6709\u6700\u9ad8\u62e5\u6324\u5ea6\u7684r\uff0c\u65b9\u4fbf\u4e8c\u5206 \r\n\t}\r\n\t// ------------\u8bfb\u5165\u5b8c\u6bd5---------------\r\n\t// ------------\u4e8c\u5206\u5f00\u59cb--------------- \r\n\tr++;\r\n\tint l = 1;\r\n\twhile(l < r){ // \u540c\u6837\u6734\u7d20\u7684\u4e8c\u5206~~~ \r\n\t\tint Mid = ((l+r) >> 1);\r\n\t\tif(Check(Mid))\r\n\t\t\tr = Mid;\r\n\t\telse l = Mid+1;\r\n\t}\r\n\tprintf(\"%d\", l);\r\n}\r\n```\r\n****\r\n_\u611f\u8c22 `\u5b66\u59d4` \u5bf9\u6211\u7684\u542f\u53d1_",
        "postTime": 1521813931,
        "uid": 36362,
        "name": "Dilute",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "## \u89e3\u9898\u80cc\u666f\uff1a\n\u8ddd\u79bbCSP-S(AFO)\u8fd8\u67095\u5929\uff01\u611f\u89c9\u81ea\u5df1\u628a\u77e5\u8bc6\u70b9\u6beb\u65e0\u9057\u6f0f\u7684\u8fd8\u7ed9\u4e86\u8001\u5e08\u2026\u2026\n\n\u5199\u7bc7\u6700\u77ed\u8def~~\u6c34\u9898~~\u6e29\u4e60\u4e00\u4e0b\u6a21\u677f\u5427\n\n\u5f53\u7136\uff0c\u8fd9\u9053\u9898\u5bf9\u4e8e\u6700\u77ed\u8def\u5165\u95e8\u6765\u8bf4\u8fd8\u662f\u975e\u5e38\u503c\u5f97\u505a\u7684\u4e00\u9053\u9898\n\n## \u4e3b\u8981\u601d\u8def\uff1a\n\u8fd9\u9053\u9898\u8981\u4e8c\u5206\uff1f\u91cd\u6784\u6811\uff1f\u5e76\u67e5\u96c6\uff1fNO\uff01\n\n\u867d\u7136\u4ed6\u4eec\u8dd1\u5f97\u5feb\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\u5199\u554a\uff01 \n\n\u867d\u7136\u88f8\u5954SPFA\u6bd4\u8f83\u6162\uff0c\u4f46\u662f\u80fd\u811a\u6253\u5440\uff01 \n\n\u840c\u65b0\u7684\u798f\u97f3\uff0c\u5165\u95e8\u7684\u5b9d\u5178\uff0c\u56fe\u8bba\u7684\u57fa\u7840\uff01  \n\n\u4e3a\u4f60\u6253\u5f00\u90bb\u63a5\u8868\u5b58\u56fe\u7684\u65b0\u4e16\u754c\uff01\n\n\u5f53\u7136\u76f2\u6253\u4e8c\u5206\u91cd\u6784\u6811\u7684\u5927\u4f6c\u53ef\u4ee5\u7ed5\u8def\u4e86\u2026\u2026 \n\n## \u90bb\u63a5\u8868\u5b58\u56fe\uff1a\n```cpp\n\nadd(ll from,ll to,ll di)    //\u57fa\u672c\u7684\u90bb\u63a5\u8868\u5b58\u56fe \n{          //\u521a\u7406\u89e3\u65f6\u611f\u89c9\u6bc1\u4e09\u89c2\uff0c\u6253\u591a\u4e86\u4e5f\u5c31\u987a\u6e9c\u4e86 \n\te[++cnt].next=head[from];  //next:\u5144\u5f1f\uff0c\u4f60\u4ece\u54ea\u6765\uff1f  head[]\u4fbf\u662f\u7b54\u6848 \n\te[cnt].to=to;      //to:\u5144\u5f1f\uff0c\u4f60\u8981\u53bb\u54ea\uff1f    to\u6765\u89e3\u7b54 \n\te[cnt].dis=di;     //dis:\u5144\u5f1f\uff0c\u8def\u9014\u591a\u8fdc\uff1f   di\u6765\u89e3\u7b54 \n\thead[from]=cnt;    //cnt:\u5144\u5f1f\uff0c\u522b\u5fd8\u56de\u5bb6\uff01   head[]\u5c31\u8bb0\u4f4f\u4e86\u5bb6\u7684\u4f4d\u7f6e \n}\n```\n\u7279\u522b\u751f\u52a8\u5f62\u8c61\u4e86\u5427\uff08\u96fe\n## CODE\n\n\n```cpp\n//Written by  kokodayou\n#include<bits/stdc++.h>\n#define ll long long\n#define R register int\n#define AC return 0         //define\u5927\u6cd5\u597d \nusing namespace std;\nll he,ta=1,cnt,n,m,s,t,a,b,c,team[9876054],head[200000],f[200000];\nbool pd[200000];\nstruct edge{\n\tll next,to,dis;\n}e[200000];\nIL add(ll from,ll to,ll di)    //\u57fa\u672c\u7684\u90bb\u63a5\u8868\u5b58\u56fe \n{          //\u521a\u7406\u89e3\u65f6\u611f\u89c9\u6bc1\u4e09\u89c2\uff0c\u6253\u591a\u4e86\u4e5f\u5c31\u987a\u6e9c\u4e86 \n\te[++cnt].next=head[from];  //next:\u5144\u5f1f\uff0c\u4f60\u4ece\u54ea\u6765\uff1f  head[]\u4fbf\u662f\u7b54\u6848 \n\te[cnt].to=to;      //to:\u5144\u5f1f\uff0c\u4f60\u8981\u53bb\u54ea\uff1f    to\u6765\u89e3\u7b54 \n\te[cnt].dis=di;     //dis:\u5144\u5f1f\uff0c\u8def\u9014\u591a\u8fdc\uff1f   di\u6765\u89e3\u7b54 \n\thead[from]=cnt;    //cnt:\u5144\u5f1f\uff0c\u522b\u5fd8\u56de\u5bb6\uff01   head[]\u5c31\u8bb0\u4f4f\u4e86\u5bb6\u7684\u4f4d\u7f6e \n}\nint main()\n{\n\tcin>>n>>m>>s>>t;      //scanf\u8dd1\u7684\u5feb\uff0ccin\u5199\u5f97\u5feb \n\tfor(R i=1;i<=m;i++)\n\t{\n\t\tcin>>a>>b>>c;\n\t\tadd(a,b,c);\n\t\tadd(b,a,c);         //\u53cc\u5411\u5b58\u8fb9\u5662\uff01 \n\t}\n\tfor(R i=1;i<=n;i++)f[i]=1e9;\n\tf[s]=0;\n\tteam[1]=s,pd[s]=1;\n\tdo{          //SPFA\u677f\u5b50\u90e8\u5206\uff0c\u76f8\u4fe1\u5404\u4f4d\u90fd\u4f1a\u6253 \n\t\the++;\n\t\tll x=team[he];\n\t\tpd[x]=0;       //\u51fa\u961f\uff0c\u4ee5\u540e\u53ef\u80fd\u8fd8\u7528\u5f97\u7740 \n\t\tfor(R i=head[x];i;i=e[i].next)   //\u7279\u522b\u559c\u6b22\u8fd9\u4e2afor\u5faa\u73af\uff0c\u611f\u89c9\u7279\u522b\u5de7\u5999\u2026\u2026 \n\t\t{\n\t\t\tll y=e[i].to,dist=max(f[x],e[i].dis);  //\u56e0\u4e3a\u662f\u627e\u6700\u5927\u62e5\u6324\u503c\uff0c\u6240\u4ee5\u6bd4\u8f83\u51fa\u53d1\u70b9\u548c\u8fb9\u7684\u6743\u503c \n\t\t\tif(f[y]>dist)\n\t\t\t{\n\t\t\t\tf[y]=dist;\n\t\t\t\tif(!pd[y])         //\u5728\u961f\u5217\u4e2d\u7684\u70b9\u5343\u4e07\u4e0d\u8981\u5165\u961f\uff0c\u4e0d\u7136\u590d\u6742\u5ea6\u7206\u70b8 \n\t\t\t\t{\n\t\t\t\t\tteam[++ta]=y;\n\t\t\t\t\tpd[y]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}while(he<ta);\n\tcout<<f[t];      //\u8f93\u51fa\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5c31\u597d\u4e86\u5440 \n\tAC;              //AC\u4f18\u5316\uff08\u9003 \n}\n```\n## \u795d\u5927\u5bb6CSP   rp++\uff01\uff01\uff01\u671b\u7ba1\u7406\u5458\u5927\u5927\u7ed9\u8fc7\uff01\uff01QWQ\n",
        "postTime": 1573369600,
        "uid": 224552,
        "name": "kokodayou",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u6700\u5f00\u59cb\u4ee5\u4e3a\u662f\u6700\u77ed\u8def\u5f84\uff0c\u4f46\u662f\u53d1\u73b0\u62e5\u6324\u5ea6\u8ddf\u6700\u77ed\u8def\u5e76\u65e0\u5375\u5173\u7cfb\u3002\n\n\u8fd9\u9053\u9898\u662f\u6700\u5c0f\u751f\u6210\u6811\uff0c prim\u548c\u514b\u9c81\u65af\u5361\u5c14\u4efb\u610f\u3002\n\n\u6211\u7528\u7684\u662f\u514b\u9c81\u65af\u5361\u5c14\u3002\n\n\u514b\u9c81\u65af\u5361\u5c14\u7684\u8bdd\u53ea\u8981\u8d77\u70b9\u548c\u7ec8\u70b9\u5728\u4e00\u4e2a\u96c6\u5408\u4e86\uff0c\u5c31\u8f93\u51fa\u6700\u540e\u8fdb\u5165\u96c6\u5408\u7684\u90a3\u6761\u8fb9\u7684\u8fb9\u6743\u503c\u3002\u6bd5\u7adf\u4e4b\u524d\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u8fc7\u4e86\u6765\u7740\u3002\n\n```cpp\n\n/*\n\u7b2c\u4e00\u884c\u56db\u4e2a\u6570\u5b57n\uff0cm\uff0cs\uff0ct\u3002\n\u63a5\u4e0b\u6765m\u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6570\u5b57\uff0c\u5206\u522b\u8868\u793a\u4e24\u4e2a\u533a\u548c\u62e5\u6324\u5ea6\u3002\n\uff08\u6709\u53ef\u80fd\u4e24\u4e2a\u533a\u4e4b\u95f4\u6709\u591a\u6761\u5927\u9053\u76f8\u8fde\u3002)\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\u8f93\u51fa\u9898\u76ee\u8981\u6c42\u7684\u62e5\u6324\u5ea6\u3002\n*/\n#include<set>\n#include<map>\n#include<list>\n#include<queue>\n#include<stack>\n#include<string>\n#include<math.h>\n#include<time.h>\n#include<vector>\n#include<bitset>\n#include<memory>\n#include<utility>\n#include<stdio.h>\n#include<sstream>\n#include<iostream>\n#include<stdlib.h>\n#include<string.h>\n#include<algorithm> //\u4e00\u5806\u6ca1\u7528\u7684\u5934\u6587\u4ef6 \n#define LL unsigned long long \nusing namespace std; \nint n,m,s,t,i;\nstruct hhh\n{\n    int u,v,c;\n}a[100000];\nint f[20000];\nint cmp(const hhh &a,const hhh &b)\n{\n    if(a.c<b.c) return 1;\n        else return 0;\n}\nint gf(int x)//\u5e76\u67e5\u96c6\u627e\u7238\u7238 \n{\n    if (f[x]==x) return x; else//\u5982\u679c\u7238\u7238\u662f\u672c\u8eab\u5c31\u8fd4\u56de\u81ea\u5df1 \n    {\n        return f[x]=gf(f[x]);//\u8fd4\u56de\u7956\u5b97 \n    }\n}\nvoid un(int x,int y)//\u5408\u5e76 \n{\n    int xx=gf(x);//\u627ex\u7684\u7956\u5b97 \n    int yy=gf(y);//\u627ey\u7684\u7956\u5b97 \n    if (xx!=yy)//\u5982\u679c\u7956\u5b97\u4e0d\u540c \n    {\n        f[xx]=yy;//\u5408\u5e76\u7956\u5b97 \n    }\n    return;\n}  \nint main()\n{\n    scanf(\"%d %d %d %d\",&n,&m,&s,&t);//n\u4e3a\u57ce\u5e02\u6570\uff0cm\u4e3a\u8fb9\u6570\uff0cs\u4e3a\u8d77\u70b9\uff0ct\u4e3a\u7ec8\u70b9\n    for (i=1;i<=m;i++)\n        scanf(\"%d %d %d\",&a[i].u,&a[i].v,&a[i].c);\n    sort(a+1,a+m+1,cmp);//\u8fb9\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n    int haha=0;int sum=0;\n    for (i=1;i<=n;i++)//f\u6570\u7ec4\u521d\u59cb\u5316\n    {\n        f[i]=i;\n    }\n    for (i=1;i<=m&&haha<=n-1;i++)\n    {\n        if (gf(a[i].u)!=gf(a[i].v))//\u5224\u65ad\u662f\u5426\u5728\u96c6\u5408\u5185 \n        {\n            un(a[i].u,a[i].v);//\u5408\u5e76 \n            haha++;//\u6bcf\u6b21\u5c06\u4e24\u4e2a\u4e0d\u540c\u96c6\u5408\u4e2d\u7684\u70b9\u5408\u5e76\uff0c\u90fd\u5c06\u4f7fhaha\u503c\u51cf1 \n        }\n        if (gf(s)==gf(t))//\u8d77\u70b9\u548c\u7ec8\u70b9\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u3002\n        {\n            cout<<a[i].c;\n            return 0;\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1455523955,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u7531\u4e8e\u6211\u521a\u521a\u4e86\u89e3\u90bb\u63a5\u94fe\u8868\uff08\u4e0d\u4fe1\u81ea\u5df1\u770b\u5b66\u672f\u7248\uff09\uff0c\u6240\u4ee5\u8fd9\u91cc\u53d1\u4e00\u53d1\u9898\u89e3\uff0c\u987a\u4fbf\u91cd\u65b0\u7406\u4e00\u904d                                                \nSPFA\u90fd\u5e94\u8be5\u4e86\u89e3\uff0c\u4e0b\u9762\u6302\u51fa\u6846\u67b6                       \n```\nwhile \u961f\u5217\u4e0d\u4e3a\u7a7a\n{\n\t\u53d6\u961f\u9996\uff0c\u961f\u9996\u51fa\u961f\n    \u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u8d77\u70b9\u4e3a\u961f\u9996                                         \n        \u5bf9\u8fd9\u6761\u8fb9\u8fdb\u884c\u4e00\u6b21\u677e\u5f1b\n        \uff08\u4e5f\u5c31\u662f\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0fdist[s]=min(dist[t]+map[s][t],dist[s])\uff09\n        \u5982\u679c\u6210\u529f\uff0c\u5165\u961f\n}\n```\n\u4e0a\u9762\u7684\u662f\u6ca1\u6709\u4efb\u4f55\u4f18\u5316\u7684\u6734\u7d20SPFA\uff0c\u663e\u7136\uff0c\u8fd9\u79cd\u7b97\u6cd5\u5c06\u6709\u53ef\u80fd\u9000\u5316\u4e3aBellmanFord                                      \n\u8fd9\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5168\u65b0\u7684\u56fe\u5b58\u50a8\u65b9\u5f0f~~\uff0c\u5176\u5b9e\u4e5f\u4e0d\u65b0~~                 \n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u6700\u5371\u9669\u7684\u5730\u65b9\u5c31\u662f\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u80fd\u591f\u76f4\u63a5\u77e5\u9053\u8981\u677e\u5f1b\u54ea\u4e9b\u8fb9\uff0c\u8be5\u591a\u597d\u554a\uff01                 \n\u8fd9\u65f6\u5c31\u8f6e\u5230\u90bb\u63a5\u94fe\u8868\u51fa\u573a\u4e86\u3002\u63a5\u4e0b\u6765\u4ecb\u7ecd\u51e0\u4e2a\u91cd\u8981\u6570\u7ec4\u3002                    \nhead[i]\uff1a\u8d77\u70b9\u662fi\u7684\u7b2c\u4e00\u6761\u8fb9\uff08\u5176\u5b9e\u5927\u90e8\u5206\u65f6\u5019\u662f\u6700\u540e\u4e00\u6761\uff0c\u4f46\u662f\u4e00\u822c\u4ece\u8fd9\u4e2ahead[i]\u5f00\u59cb\u641c\u7d22\uff09               \nnext[i]\uff1a\u8868\u793a\u7b2ci\u6761\u8fb9\u540c\u4e00\u8d77\u70b9\u7684\u4e0b\u4e00\u6761\u8fb9                             \nto[i]\uff1a\u8868\u793a\u7b2ci\u6761\u8fb9\u7684\u7ec8\u70b9\nw[i]\uff1a\u8868\u793a\u7b2ci\u6761\u8fb9\u7684\u8fb9\u6743                     \n\u7814\u7a76\u5b8c\u8fd9\u4e9b\uff0c\u79bb\u6210\u529f\u5c31\u4e0d\u8fdc\u4e86\u3002\u9996\u5148\u770b\u6700\u91cd\u8981\u7684addedge\u51fd\u6570                  \n\uff08\u6ce8\u610f\u662fP\uff0c\u770b\u5f97\u61c2\u5427\uff1f\uff09                            \n```pascal\nprocedure addedge(u,v,w:longint);\nbegin\n  inc(tot); //\u8fb9\u6570\u589e\u52a0\n  e[tot].too:=v; //\u8bbe\u7f6e\u7ec8\u70b9\u4e3av\n  e[tot].l:=w; //\u8fb9\u6743\n  e[tot].nxt:=first[u]; //\u6ce8\u610f\uff01\u5c06\u8001\u7684\u7b2c\u4e00\u6761\u8fb9\u8bbe\u7f6e\u4e3a\u65b0\u7684\u7684\u540e\u7ee7\n  first[u]:=tot; //\u65b0\u7684\u7b2c\u4e00\u6761\u8fb9\nend;\n```                        \n\u4ee5\u4e0a\u5c31\u662f\u8fd9\u4e2a\u7b97\u6cd5\u7684\u7cbe\u534e\uff0c\u8bbe\u961f\u9996\u4e3au\uff0c\u63a5\u4e0b\u6765\u2014\u2014    \n\u6211\u4eec\u5c06SPFA\u4e2d\u7684\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\u6539\u4e3a\u4ecehead[u]\u5f00\u59cb\uff0c\u6bcf\u6b21\u677e\u5f1b\uff0c\u7136\u540e\u5c06u\u66ff\u6362\u4e3anext[u]\uff0c\u5c31\u53ef\u4ee5\u5566\uff01\u5177\u4f53\u770b\u4ee3\u7801\u5427                            \n```pascal\nvar\n  e:array[0..500050] of record //\u7ed3\u6784\u4f53e\uff0c\u5b58to\uff0cw\u548cnext\n              too,l,nxt:longint;\n            end;\n  first,dist,q:array[0..500050] of longint; //head\u3001dist\u3001\u961f\u5217\n  flag:array[0..500050] of boolean; //\u961f\u5217\u6807\u8bb0\n  n,m,i,j,head,tail,s,t,f,g,w,p,tot:longint; //\u5404\u79cd\u53d8\u91cf\n  \nfunction max(x,y:longint):longint; //max\uff0c\u7528\u5b8ccpp\u5076\u5c14\u4e00\u6b21P\u89c9\u5f97\u597d\u9ebb\u70e6\nbegin\n  if (x>y) then exit(x); exit(y);\nend;\n\nprocedure addedge(u,v,w:longint); //\u8fb9\u7684\u6784\u9020\nbegin\n  inc(tot);\n  e[tot].too:=v;\n  e[tot].l:=w;\n  e[tot].nxt:=first[u];\n  first[u]:=tot;  \nend;\n\nbegin\n  readln(n,m,s,t);\n  for i:=1 to m do first[i]:=-1; //\u6ca1\u6709\u4e0b\u4e00\u6761\u8fb9\n  \n  tot:=0;\n  for i:=1 to m do\n    begin\n      readln(f,g,w);\n      addedge(f,g,w);\n      addedge(g,f,w); //\u53cc\u5411\uff01\n    end;\n\n  for i:=1 to n do dist[i]:=maxlongint; //\u5c06dist\u8bbe\u7f6e\u4e3a\u6781\u5927\u503c\n  dist[s]:=0; flag[s]:=true; q[1]:=s; //s\u5165\u961f\u5217\n  head:=1; tail:=1;\n\n  while head<=tail do //while\u961f\u5217\u4e0d\u4e3a\u7a7a\n    begin\n      p:=q[head]; inc(head); //\u51fa\u961f\n      flag[p]:=false;\n      i:=first[p]; //\u627e\u961f\u9996\u8fde\u51fa\u7684\u8fb9\uff0c\u9996\u5148\u662fhead[p]\n      while i>-1 do //\u627e\u6240\u6709\u7684\u8fb9\u76f4\u5230\u6ca1\u6709\u4e0b\u4e00\u6761\u8fb9\n        begin\n          if dist[e[i].too]>max(dist[p],e[i].l) then //\u5982\u679c\u53ef\u4ee5\u677e\u5f1b\n            begin\n              dist[e[i].too]:=max(dist[p],e[i].l); //\u677e\u5f1b\n              if not flag[e[i].too] then //\u5165\u961f\u5217\n                begin\n                  inc(tail);\n                  q[tail]:=e[i].too;\n                  flag[e[i].too]:=true;\n                end;\n            end;\n          i:=e[i].nxt; //\u4e0b\u4e00\u6761\n        end;\n    end;\n  writeln(dist[t]);\nend.\n```                                          \n\u6709\u4ec0\u4e48\u4e0d\u8db3\uff0c\u6b22\u8fce\u62cd\u7816",
        "postTime": 1521206133,
        "uid": 50818,
        "name": "\u66e6\u884c\u591c\u843d",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\n# \u672c\u9898\u601d\u8def\uff1a\n\u5148\u628a\u6bcf\u6761\u9053\u8def\u7528\u62e5\u6324\u5ea6\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u4ece\u62e5\u6324\u5ea6\u6700\u5c0f\u7684\u5f00\u59cb\u8fde\uff0c\u7136\u540e\u67e5S\u4e0eT\u662f\u5426\u8fde\u901a\u3002\u5982\u679c\u4e0d\u8fde\u901a\u5219\u7ee7\u7eed\u8fde\u4e0b\u4e00\u8fb9\u3002\u5f53\u6070\u597d\u8fde\u901a\u65f6\uff0c\u5c31\u662f\u4f60\u8fde\u7684\u6700\u665a\u7684\u4e00\u6761\u8fb9\uff08\u663e\u7136\u6700\u62e5\u6324\uff09\u6700\u5c0f\u3002\u73b0\u5728\u7acb\u523b\u8f93\u51fa\u7b54\u6848\uff0c\u7ed3\u675f\u7a0b\u5e8f\u3002 \\\n\n------------\n\n \u8d34\u4e0a **Accepted** \u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n\tint x;\n\tint y;\n\tint t;\n}a[222222];//x\u5230y\u7684\u8fb9\u62e5\u6324\u5ea6t\nint father[222222],n,m,s,t;\ninline int find(int xx)//\u5e76\u67e5\u96c6\n{\n\twhile(xx!=father[xx])\n\t{\n\t\txx=father[xx];//\u627e\u7956\u5148\n\t}\n\treturn xx;\n}\ninline void unionn(int xx,int yy)//\u8fde\u63a5\n{\n\tfather[yy]=xx;\n}\ninline bool cmp(node p,node q)\n{\n\treturn p.t<q.t;\n}\nint main()\n{\n\tscanf(\"%d%d%d%d\",&n,&m,&s,&t);\n\tfor(int i=0;i<=222221;i++)\n\t{\n\t\tfather[i]=i;//\u5047\u5b9a\u7956\u5148\u662f\u81ea\u5df1\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&a[i].x,&a[i].y,&a[i].t);\n\t}\n\tsort(a+1,a+m+1,cmp);//\u62e5\u6324\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\tint tot=0,num=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint cc=find(a[i].x),dd=find(a[i].y);\n\t\tunionn(cc,dd);\n\t\tif(find(s)==find(t))\n\t\t{\n\t\t\tprintf(\"%d\",a[i].t);\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n```\n### \u8c22\u8c22\u5927\u5bb6\uff0c\u795d\u5927\u5bb6\u597d\u8fd0",
        "postTime": 1562836715,
        "uid": 48306,
        "name": "Zijun_Xu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "/\\*\nP1396 \u9898\u89e3\n\n\u6700\u77ed\u8def\u7b97\u6cd5\u7684\u5e94\u7528\n\n\n\u601d\u8def\uff1a\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u6700\u77ed\u8def\u95ee\u9898\uff0c\u7528$SPFA$\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u4f46\u662f\u6ce8\u610f\u4e86\uff0c\u8fd9\u9053\u9898\u662f\u6c42\u4ece$s$\u70b9\u5230$e$\u70b9\u7684\u8def\u5f84\u6240\u7ecf\u8fc7\u7684\u6240\u6709\u53ef\u80fd\u7684\u8def\u5f84\u6240\u7ecf\u8fc7\u7684\u8fb9\u6743\u7684\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\u3002\n\n\u90a3\u4e48\u5982\u4f55\u505a\u6700\u77ed\u8def\u5462\uff1f\n\n\u5f88\u663e\u7136\uff0c\u6211\u4eec\u662f\u5c06\u5f53\u524d\u8be5\u8fb9\u5de6\u8fb9\u7684\u6700\u4f18\u89e3(\u5373$a[x].q$)\u4e0e\u8fb9\u6743\u4f5c\u6bd4\u8f83(\u5373$b[i].c$)\uff0c\u53d6\u4e8c\u8005\u7684\u6700\u5c0f\u503c\uff0c\u518d\u5c06\u5176\u7ed3\u679c\u4e0e\u8be5\u8fb9\u53f3\u8fb9\u7684\u6700\u4f18(\u5373$a[y].q$)\u4f5c\u6bd4\u8f83\uff0c\u53d6\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u5728\u8dd1\u5b8c\u4e00\u6b21\u6700\u77ed\u8def\u4e4b\u540e\uff0c\u7b54\u6848\u5c31\u662f$a[e].q$\u3002\n\n\u6240\u4ee5\uff1a$a[y].q=min(max(a[x].q,b[i].c),a[y].q);$\n\n\u6240\u4ee5\uff0c\u4ee3\u7801\u4e0e\u6a21\u677f\u4e0d\u540c\u7684\u5730\u65b9\u5982\u4e0b\uff1a\n\n```cpp\nint now=max(a[x].q,b[i].c);\nint y=b[i].y;\nif(now<a[y].q)\n{\n    a[y].q=now;\n}\n```\n\u4e0b\u9762\u4e0aAC\u4ee3\u7801\uff1a\n\\*/\n```cpp\n#include <cstdio>\nstruct nodea{ int h,v,q; } a[1000001];\nstruct nodeb{ int x,y,c,g; } b[1000001];\nint f[1000001],len=0,n=0,m=0,s=0,e=0;\nint ans=999999999;\nint max(int x,int y)\n{\n    return x>y?x:y;\n}\nvoid br(int x,int y,int c)\n{\n    len++;\n    b[len].x=x;\n    b[len].y=y;\n    b[len].c=c;\n    b[len].g=a[x].h;\n    a[x].h=len;\n}\nvoid bfs()\n{\n    int tou=1,wei=2;\n    f[1]=s;\n    a[s].v=1;\n    a[s].q=0;\n    while(tou!=wei)\n    {\n        int x=f[tou];\n        for(int i=a[x].h;i>0;i=b[i].g)\n        {\n            int now=max(a[x].q,b[i].c);\n            int y=b[i].y;\n            if(now<a[y].q)\n            {\n                a[y].q=now;\n                if(a[y].v==0)\n                {\n                    a[y].v=1;\n                    f[wei]=y;\n                    wei++;\n                    if(wei>n)\n                    {\n                        wei=1;\n                    }\n                }\n            }\n        }\n        a[x].v=0;\n        tou++;\n        if(tou>n)\n        {\n            tou=1;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d %d %d %d\",&n,&m,&s,&e);\n    for(int i=1;i<=n;i++)\n    {\n        a[i].h=0;\n        a[i].v=0;\n        a[i].q=999999999;\n    }\n    for(int i=1;i<=m;i++)\n    {\n        int x=0,y=0,c=0;\n        scanf(\"%d %d %d\",&x,&y,&c);\n        br(x,y,c),br(y,x,c);\n    }\n    bfs();\n    printf(\"%d\",a[e].q);\n    return 0;\n}\n```",
        "postTime": 1512892205,
        "uid": 48269,
        "name": "Drinkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\n\u65b9\u6cd5 \uff1a vector + SPFA\n\n\n----------------------------------------------------xcy-AK-IOI----------------------------------------------------\n\n\u4f3c\u4e4e\u8bb8\u591a\u4eba\u90fd\u662f\u4f7f\u7528\u524d\u5411\u661f / \u90bb\u63a5\u8868 / \u90bb\u63a5\u77e9\u9635(\u53ef\u80fd\u4f1a\u70b8)\n\n\u7136\u800c, C++\u515a\u53ef\u4ee5\u7528\n\n## VECTOR \u5efa\u56fe\n\n----------------------------------------------------xcy-AK-IOI----------------------------------------------------\n\n\u63a5\u4e0b\u6765, \u662f\u7b97\u6cd5\u7684\u95ee\u9898:\n\n\u4f3c\u4e4e \u5f88\u591a\u5927\u4f6c \u90fd\u662f \u7528 K\u7b97\u6cd5/ \u4e8c\u5206\u505a\u7684?\n\n\u7136\u9e45 : \u8fd9\u9898\u7528SPFA \u66f4\u7b80\u5355.\n\n\u505a\u6cd5: \u5c06\u8bbf\u95ee\u5230\u7684\u8282\u70b9(v)\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9(u)\u7684\u6700\u4f18\u89e3(d[u]) \u548c u\u70b9\u5230v\u70b9\u7684\u8ddd\u79bb(g[u][v] )\u7684 \u6700\u5927\u503c  \u4e0e  \u88ab\u8bbf\u95ee\u5230\u7684\u8282\u70b9(v)\u7684\u6700\u4f18\u89e3(d[v]) \u6bd4\u8f83, \u5982\u679c\u524d\u8005\u5c0f, \u5c31\u677e\u5f1b\u540e\u8005.\n\n### \u5373 :\n\n#### \u2014\u2014\u6211\u4eec\u662f\u5c06\u5f53\u524d\u8be5\u8fb9\u5de6\u8fb9\u7684\u6700\u4f18\u89e3(\u5373a[x].qa[x].q)\u4e0e\u8fb9\u6743\u4f5c\u6bd4\u8f83(\u5373b[i].cb[i].c)\uff0c\u53d6\u4e8c\u8005\u7684\u6700\u5c0f\u503c\uff0c\u518d\u5c06\u5176\u7ed3\u679c\u4e0e\u8be5\u8fb9\u53f3\u8fb9\u7684\u6700\u4f18(\u5373a[y].qa[y].q)\u4f5c\u6bd4\u8f83\uff0c\u53d6\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u5728\u8dd1\u5b8c\u4e00\u6b21\u6700\u77ed\u8def\u4e4b\u540e\uff0c\u7b54\u6848\u5c31\u662fa[e].qa[e].q\u3002(by \u949f\u6893\u4fca)\n\n```\nso \uff1a\n\u5173\u7cfb\u5f0f: d[v] = min (d[v], max(d[v\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9, \u8bbe\u4e3au] , u \u4e0e v \u7684\u8ddd\u79bb))\n```\n-\n\n----------------------------------------------------xcy-AK-IOI----------------------------------------------------\n\n\u5177\u4f53\u64cd\u4f5c\u89c1\u4ee3\u7801:\n\n```\n#include    <queue>\n#include   <cstdio>\n#include   <vector>  //vector \u5934\u6587\u4ef6\n#include  <cstring>\n#include <iostream>\n#define    _      0 //\u5356\u840c\nusing namespace std;\n\nint n, m, s, t;\nint x, y, z;\n\nstruct edge {\n\tint v, w;\n};\nvector <edge> g[100010];// \u7528\u6765\u5efa\u56fe\n\nint d[100010];\nbool vis[100010];\nqueue <int> q;// \u51c6\u5907\u7528\u961f\u5217\u5b9e\u73b0SPFA\n\nint main() {\n\tscanf(\"%d%d%d%d\", &n, &m, &s, &t);\n\twhile (m--) {\n\t\tscanf(\"%d%d%d\", &x, &y, &z);\n\t\tg[x].push_back((edge){y, z});\n        // \u5c06y \u8282\u70b9\u5b58\u5230x \u8282\u70b9\u540e, \u4e14\u4f7fx \u8282\u70b9\u8ddd y \u8282\u70b9z \u4e2a\u5355\u4f4d\n\t\tg[y].push_back((edge){x, z});\n        // \u5c06x \u8282\u70b9\u5b58\u5230y \u8282\u70b9\u540e, \u4e14\u4f7fy \u8282\u70b9\u8ddd x \u8282\u70b9z \u4e2a\u5355\u4f4d(\u65e0\u5411\u56fe)\n\t}\n\tmemset(d, 127, sizeof(d));// \u521d\u59cb\u5316\n\td[s] = 0, vis[s] = 1, q.push(s);// \u521d\u59cb\u5316\n    // spfa :\n\twhile (!q.empty()) {\n\t\tint x = q.front();\n\t\tq.pop(), vis[x] = 0;\n                // \u904d\u5386: \u4ece\u7b2c\u4e00\u4e2a\u4e0ex \u76f8\u8fde\u7684\u8282\u70b9\u5230\u6700\u540e\u4e00\u4e2a\u4e0ex \u76f8\u8fde\u7684\u8282\u70b9\n                // \u6ce8\u610f: vector \u6570\u7ec4 \u662f\u4ece 0 \u5f00\u59cb \u5b58\u50a8 \u7684!!!!!!\n                // \u56e0\u6b64: \u6211\u4eec\u7684\u5faa\u73af\u5e94\u4ece0 \u5f00\u59cb\n\t\tfor (int i = 0; i < g[x].size(); i++) {\n\t\t\tint y = g[x][i].v, w = g[x][i].w;\n\t\t\tif (max(d[x], w) < d[y]) {\n\t\t\t\td[y] = max(d[x], w);//\u677e\u5f1b\u64cd\u4f5c\n\t\t\t\tif (!vis[y]) q.push(y), vis[y] = 1;//\u5165\u961f\u64cd\u4f5c\n\t\t\t}\n\t\t}\n                // \u904d\u5386\u5b8c\n\t}\n    // spfa \u5b8c\n\tprintf(\"%d\", d[t]);\n\treturn ~~(0 ^ _ ^ 0);// \u5356\u840c\n}\n```\n",
        "postTime": 1565502891,
        "uid": 108393,
        "name": "__AFOier__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u901a\u8fc7\u6c42\u6700\u77ed\u8def\u6c42\u89e3\n\n\u6211\u7528\u4e86dijkstra\uff0c\u53ef\u4ee5\u5b9a\u4e49$dis[x]$\u4e3a$x$\u4e0e\u51fa\u53d1\u70b9$s$\u4e4b\u95f4\u6700\u957f\u8fb9\u7684\u8fb9\u6743\n\n\u8bbe\u5f53\u524d\u6269\u5c55\u7684\u70b9\u4e3a$u$,$u$\u4e0e$x$\u95f4\u8fb9\u6743\u4e3a$w$\n\n\u53ef\u4ee5\u5f97\u5230$dis[x]=min(dis[x],max(dis[u],w))$\n\n\u8d34\u4e00\u6ce2\u4ee3\u7801~\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct Edge\n{\n\tint next,to,w;\n}edge[40003];//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\nint n,m,s,t,cnt;\nint dis[10003],head[10003];\nbool v[10003];\nint read()\n{\n\tint x=0;bool f=true;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=false;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+(c^48);c=getchar();}\n\treturn f?x:-x;\n}\nvoid print(int x)\n{\n\tif(x<0){x=-x;putchar('-');}\n\tif(x>=10) print(x/10);\n\tputchar(x%10+'0');\n}\nvoid addedge(int u,int v,int w)\n{\n\tedge[++cnt].next=head[u];\n\tedge[cnt].to=v;\n\tedge[cnt].w=w;\n\thead[u]=cnt;\n}\nvoid dijkstra()\n{\n\tmemset(dis,0x3f3f3f3f,sizeof(dis));\n\tdis[s]=0;\n\tint x,minn;\n\twhile(1)\n\t{\n\t\tx=0,minn=0x3f3f3f3f;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(!v[i]&&dis[i]<minn)\n\t\t\t{\n\t\t\t\tminn=dis[i];\n\t\t\t\tx=i;\n\t\t\t}\n\t\tif(!x) break;\n\t\tv[x]=true;\n\t\tfor(int i=head[x];i;i=edge[i].next)\n\t\t\tdis[edge[i].to]=min(dis[edge[i].to],max(dis[x],edge[i].w));\n            //\u4e0e\u666e\u901adijkstra\u7684\u552f\u4e00\u4e0d\u540c\u4e4b\u5904\uff0cdis\u6570\u7ec4\u8868\u793a\u8def\u5f84\u4e0a\u7684\u6700\u957f\u8fb9\u7684\u8fb9\u6743\n\t}\n\treturn;\n}\nint main()\n{\n\tn=read(),m=read(),s=read(),t=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read(),w=read();\n\t\taddedge(u,v,w);\n\t\taddedge(v,u,w);//\u65e0\u5411\u56fe\u9700\u8981\u5b58\u4e24\u904d\n\t}\n\tdijkstra();\n\tprint(dis[t]);\n\treturn 0;\n}\n```",
        "postTime": 1541147721,
        "uid": 91889,
        "name": "Dirt\u3001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u7528\u6700\u77ed\u8def**Ford**\u6765\u505a\uff0c\u53ea\u4e0d\u8fc7\u8981\u53d8\u53d8\u5f62\uff0c\u628a\u6c42\u548c\u53d8\u6210\u6c42\u6700\u5927\u503c\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801~~~\n\nuses math;\n\nvar\n\n        n,m,s,t,i,j,check:longint;\n        u,v,w,dis:array[1..100005] of longint;\nbegin\n\n        readln(n,m,s,t);\n        for i:=1 to m do\n                readln(u[i],v[i],w[i]);//\u8fd9\u4ee3\u8868u[i]\u5230v[i]\u7684\u8ddd\u79bb\u662fw[i]\n        for i:=1 to n do\n                dis[i]:=100000000;//\u521d\u59cb\u5316\n        dis[s]:=0;//\u8d77\u59cb\u70b9\u4e3a\u96f6\n        for j:=1 to n-1 do\n        begin\n                check:=0;\n                for i:=1 to m do\n                begin\n                        if dis[v[i]]>max(dis[u[i]],w[i]) then\n                        begin\n                                \t\t\t\t\t    \n                                dis[v[i]]:=max(dis[u[i]],w[i]);\n                                check:=1;\n                        end;\n                        if dis[u[i]]>max(dis[v[i]],w[i]) then\n                        begin\n                                dis[u[i]]:=max(dis[v[i]],w[i]);\n                                check:=1;\n                        end;//\u8981\u505a\u4e24\u6b21\u56e0\u4e3a\u662f\u53cc\u5411\n                end;\n                if check=0 then break\uff1b//\u5f53\u5b83\u6ca1\u6539\u53d8\u65f6\uff0c\u76f4\u63a5\u9000\u51fa\n        end;\n        writeln(dis[t]);//\u8f93\u51fa\nend.//\u518d\u89c1~~~\n\n",
        "postTime": 1561588391,
        "uid": 110685,
        "name": "James0602",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\u7ed9\u4f60\u4e00\u5f20\u56fe\uff0c\u6709\u8fb9\u6743\uff0c\u6c42\u4f7f\u5f97\u6e90\u70b9\u6c47\u70b9\u8054\u901a\u7684\u8def\u5f84\u4e2d\u8fb9\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\u3002\uff08\u8c8c\u4f3c\u8fd8\u662f\u4e0d\u5f88\u6e05\u695a\uff09\n## \u601d\u60f3\n\u770b\u5230\u6700\u5927\u7684\u6700\u5c0f\u5f88\u591a\u4eba\u60f3\u5230\u4e8c\u5206\uff0c\u4f46\u662f\u53ef\u4ee5\u6709\u66f4\u597d\u7684\u89e3\u6cd5\u3002\n\u6211\u4eec\u4e0d\u59a8\u7528**\u5e76\u67e5\u96c6**\u7ef4\u62a4\u8fd9\u4e2a\u56fe\uff0c\u5c06\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6bcf\u6b21\u53d6\u51fa\u8fb9\u6743\u6700\u5c0f\u7684\u8fb9\uff0c\u82e5\u8be5\u8fb9\u7684\u8d77\u70b9\u4e0e\u7ec8\u70b9\u672a\u5728\u4e00\u4e2a\u96c6\u5408\u5185\uff0c\u5c31\u5c06\u5176\u5408\u5e76\u3002\u5f53\u6e90\u70b9\u4e0e\u6c47\u70b9\u5728\u4e00\u4e2a\u96c6\u5408\u5185\u65f6\uff0c\u5f53\u524d\u8fb9\u7684\u6743\u503c\u5c31\u662f\u7b54\u6848\u3002\n## \u5e76\u67e5\u96c6\u57fa\u672c\u64cd\u4f5c\n\u8fd9\u91cc\u6709\u4e00\u4e2a~~\u6bd4\u8f83\u4f18\u7f8e\u7684~~\u8def\u5f84\u538b\u7f29\u7684\u5b9e\u73b0\uff1a\n```cpp\nint find(int x) {return fa[x] = fa[x] == x ? x : find(fa[x]);}\n```\n\u4e00\u884c\u4ee3\u7801\u3002\n**\u5408\u5e76**\u7684\u8bdd\u5728\u4e3b\u51fd\u6570\u5185\u76f4\u63a5\u5199\u5c31\u884c\u4e86\uff0c\u6ca1\u6709\u4e00\u4e9b\u9644\u52a0\u6d88\u606f\u6ca1\u5fc5\u8981\u5355\u72ec\u5199\u51fd\u6570\u3002\n\n## Code\n40\u884c\u4ee3\u7801\uff08\u6709\u5feb\u8bfb\uff09\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <algorithm>\n\ninline int read() {\n\tchar ch = getchar(); int r = 0;\n\twhile(!isdigit(ch)) ch = getchar();\n\twhile(isdigit(ch)) r = r * 10 + ch - '0', ch = getchar();\n\treturn r;\n}\n\nconst int N = 20020;\n\nstruct edge {\n\tint x, y, z;\n} e[N];\n\nint fa[N];\n\ninline bool cmp(edge a, edge b) {return a.z < b.z;}\n\nint find(int x) {return fa[x] = fa[x] == x ? x : find(fa[x]);}\n\nint main() {\n\tint n = read(), m = read(), s = read(), t = read();\n\tfor(register int i = 1; i <= n; i++) fa[i] = i;\n\tfor(register int i = 1; i <= m; i++) {\n\t\tint x = read(), y = read(), z = read();\n\t\te[i] = (edge) {x, y, z};\n\t}\n\tstd::sort(e + 1, e + m + 1, cmp);\n\tfor(register int i = 1; i <= m; i++) {\n\t\tint x = find(e[i].x), y = find(e[i].y);\n\t\tif(x != y) fa[x] = y;\n\t\tif(find(s) == find(t)) {\n\t\t\tprintf(\"%d\", e[i].z);\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n```",
        "postTime": 1555566426,
        "uid": 104841,
        "name": "Minakami_Yuki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u8425\u6551"
    },
    {
        "content": "\u6211\u6765\u5199\u4e00\u4e2a\u9898\u89e3  \n\u672c\u6765\u505a\u8fd9\u9053\u9898\u76ee\u662f\u60f3\u7ec3\u4e00\u7ec3\u6700\u77ed\u8def\u7684  \n\u53ef\u662f\u6211\u5728\u505a\u6700\u77ed\u8def\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u8fd9\u662f\u4e00\u9053  \n**\u6700\u5c0f\u751f\u6210\u6811  **  \n\n\u666e\u53ca\u4e00\u4e0b\u6700\u5c0f\u751f\u6210\u6811\u7684\u7b97\u6cd5\uff1a  \n\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662fPrim\uff0c\u8fd8\u6709\u4e00\u79cd\u662fKruskal  \n\u8fd9\u91cc\u4f7f\u7528Kruskal\u7b97\u6cd5\uff08\u6bd4\u8f83\u65b9\u4fbf\uff09  \n\u4e0b\u9762\u662f\u5206\u6790\uff1a  \n\n\u56e0\u4e3a\u672c\u9898\u662f\u6c42\u6700\u77ed\u8def\u4e2d\u7684\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\u662f\u591a\u5c11  \n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42s\u5230t\u7684\u6700\u77ed\u8def\u4e2d\u6700\u5c0f\u503c\u4e2d\u6700\u5927\u503c\u662f\u591a\u5c11\u5c31\u53ef\u4ee5\u4e86\uff08\u6709\u70b9\u7ed5\u4eba\uff09  \n\u6240\u4ee5\u6211\u5c31\u60f3\u5230\u4e86\u5b8c\u7f8e\u7684Kruskal\u7b97\u6cd5  \n\u6211\u4eec\u53ef\u4ee5\u628a\u6c42\u6700\u5c0f\u503c\u7684\u8fc7\u7a0b\u8f6c\u5316\u4e3a\u8dd1\u4e00\u904d\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fc7\u7a0b  \n\u90a3\u4e48\u4e5f\u5c31\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u5728\u4e00\u4e2a\u65e0\u5411\u56fe\u4e2d\uff0c\u6c42\u5176\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u6743\u503c\u6700\u5927\u7684\u4e00\u6761\u8fb9\u662f\u591a\u5c11\u3002  \n\u4e5f\u5c31\u662f\u6c42\u4e00\u4e2a\u56fe\u7684\u6700\u5c0f\u74f6\u9888\u6811  \n\u597d\u4e86\uff0c\u95ee\u9898\u8f6c\u5316\u5b8c\u6bd5\u3002\n______________________________________\n\u63a5\u4e0b\u6765\u662f\u600e\u4e48\u5b9e\u73b0  \n\u600e\u4e48\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5927\u6743\uff08\u89c1\u6d1b\u8c37OJ\u7684P1547:Out of Hay\uff09  \n\u90a3\u4e48\u600e\u4e48\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5927\u6743\u5462  \n\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u8981\u5728\u7b97\u6700\u5c0f\u751f\u6210\u6811\u7684\u65f6\u5019\u4fdd\u5b58\u4e00\u4e0b\u5f53\u524d\u7684\u6743\u4e0e\u6700\u5927\u503c\u7684\u8f83\u5927\u503c\u5c31\u53ef\u4ee5\u4e86\n______________________________________\n\u8fd8\u6709\u4e00\u4ef6\u4e8b  \n\u600e\u6837\u6c42s\u5230t\u7684\u6700\u5c0f\u751f\u6210\u6811\u5462\uff08\u600e\u6837\u5224\u5b9as\u4e0et\u5df2\u7ecf\u8fde\u63a5\u53d6\u6700\u5927\u503c\u4e86\u5462\uff1f\uff09  \n\n\u8fd9\u4e2a\u60f3\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u56e0\u4e3aKruskal\u6c42\u751f\u6210\u6811\u7684\u8fc7\u7a0b\u662f\u4e00\u70b9\u4e00\u70b9\u7528\u5e76\u67e5\u96c6\u8fde\u63a5\uff08\u5e76\uff09\u7684    \n\u6240\u4ee5\u5728\u7b2c\u4e00\u6b21s\u4e0et\u8fd9\u4e24\u4e2a\u70b9\u8fde\u63a5\u65f6\u6240\u5f97\u5230\u7684\u6700\u5927\u6743\u503c\u5373\u4e3a\u6240\u6c42  \n_______________________________________\n~~\u89e3\u91ca\u5b8c\u7f8e\u7ed3\u675f~~\n\n\u4e0b\u9762\u662f\u7f8e\u4e3d\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nconst int N=20001;\nstruct save {\n\tint x,y,v;\n} a[N];\nint father[N];\nint n,m,s,t,maxn=-0x7fffffff;\nbool cmp(save m,save n) {\n\treturn m.v<n.v;\n}\nint find(int x) {\n\tif(father[x]!=x)\n\t\tfather[x]=find(father[x]);//\u8def\u5f84\u538b\u7f29\n\treturn father[x];\n}\nint main() {\n\tint i;\n\tcin>>n>>m>>s>>t;\n\tfor(i=1; i<=n; i++)\n\t\tfather[i]=i;\n\tfor(i=1; i<=m; i++)\n\t\tcin>>a[i].x>>a[i].y>>a[i].v;\n\tsort(a+1,a+m+1,cmp);//\u6309\u7167\u6743\u503c\u6392\u4e0b\u5e8f\n\tfor(i=1; i<=m; i++) {\n\t\tint t1,t2;\n\t\tt1=find(a[i].x);\n\t\tt2=find(a[i].y);\n\t\tif(t1!=t2) {//\u5982\u679c\u4e0d\u662f\u4e00\u4e2a\u7956\u5148\uff08\u9700\u8981\u8fde\u63a5\uff09\n\t\t\tfather[t1]=t2;\n\t\t\tif(find(s)==find(t)) {//\u5982\u679cs\u4e0et\u8fde\u63a5\u4e86\n\t\t\t\tmaxn=max(maxn,a[i].v);//\u4fdd\u5b58\u6700\u5927\u503c\n\t\t\t\tbreak;//\u6b64\u65f6\u56e0\u4e3a\u5df2\u7ecf\u662f\u7b54\u6848\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u8df3\u51fa\n\t\t\t}\n\t\t\telse\n\t\t\tmaxn=max(maxn,a[i].v);//\u4fdd\u5b58\u6700\u5927\u503c\n\t\t}\n\t}\n\tcout<<maxn<<endl;//\u8f93\u51fa\u6700\u5927\u503c\n\treturn 0;\n}\n```",
        "postTime": 1537594037,
        "uid": 51135,
        "name": "\u661f\u4e4b\u6d77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "----\n2018.9.24\u66f4\u65b0\n\n## \u5173\u4e8espfa\uff0c\u4ed6\u5df2\u7ecf\u6b7b\u4e86\uff0c\u6240\u4ee5\u7ae5\u978b\u4eec\u8fd8\u662f\u5199dijkstr\u5427\u2026\u2026\n\n-------------------------------------------\n\n\n# P1396 \u8425\u6551\n\n\n\t\u554a\uff0c\u8fd9\u662f\u4e00\u9053\u660e\u663e\u7684\u4e8c\u5206\u9898\u76ee\uff0c\u56e0\u4e3a\u4ed6\u8bf4\u201c\u4f7f\u5f97\u7ecf\u8fc7\u9053\u8def\u7684\u62e5\u6324\u5ea6\u6700\u5927\u503c\u6700\u5c0f\u201d\u3002\n\t\uff08\u554a\u4e00\u5b9a\u662f\u56e0\u4e3a\u6211\u592a\u5f31\u4e86\uff0c\u6240\u4ee5\u89c9\u5f97\u8fd9\u79cd\u8bed\u53e5\u80af\u5b9a\u662f\u4e8c\u5206\u5927\u6cd5\uff01\uff09\n\n\t\u7136\u800c\u6211\u8fd8\u662f\u4e27\u5fc3\u75c5\u72c2\u7684\u7528\u6700\u77ed\u8def\u6765\u5199\u4e86.......\uff08\u624d\u4e0d\u544a\u8bc9\u4f60\u6211\u4e0d\u4f1a\u4e8c\u5206\u5462\uff09\n\n\t\u9898\u76ee\u4e2d\u7684\u201c\u6240\u4ee5\u8bf7\u4f60\u5e2e\u5979\u89c4\u5212\u4e00\u6761\u4eces\u81f3t\u7684\u8def\u7ebf\uff0c\u4f7f\u5f97\u7ecf\u8fc7\u9053\u8def\u7684\u62e5\u6324\u5ea6\u6700\u5927\u503c\u6700\u5c0f\u201d\u4e0d\u5c31\u662f\u660e\u663e\u7684\u6700\u77ed\u8def\u5417\uff1f\n\n\t\u6240\u4ee5\u8fd9\u662f\u6700\u77ed\u8def\u6a21\u677f\u9898\uff01\uff08\u662f\u6211\u592a\u81ea\u4fe1\u4e86\uff1f\uff09\n\n\t\u90a3\u4e48\u8fd9\u9898\u76ee\u4e0e\u666e\u901a\u6700\u77ed\u8def\uff0c\u90a3\u4e9b\u6a21\u677f\u9898\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f\n\n\t\u5176\u5b9e\u5c31\u662f\u66f4\u65b0\u8def\u5f84\u957f\u5ea6\u7684\u7ec6\u5c0f\u5dee\u522b\u5566\uff0c\u53ea\u8981\u7a0d\u5fae\u6539\u4e0b\u66f4\u65b0\u8def\u5f84\u65b9\u5f0f\u5c31\u53ef\u4ee5AC\u5566\uff08\u5c3d\u7ba1\u6211\u8fd8\u662fdebug\u4e86\u597d\u4e45......)\n\n~~\u8fd9\u91cc\u6211\u5c31\u7528\u4e00\u4e0bspfa\u6765\u8dd1\u5427,\u4e2a\u4eba\u611f\u89c9\u662f\u6bd4\u8f83\u597d\u7528\u7684\u4e00\u79cd\u8dd1\u6cd5\u6700\u77ed\u8def\u8dd1\u6cd5.~~\n\n####\t\u5176\u5b9e\u548cspfa\u6a21\u677f\u7684\u4e0d\u540c\u53ea\u6709\u4e00\u5904\n\n#####\t\u8fd9\u662f\u73b0\u5728\u7684\u66f4\u65b0\u6700\u77ed\u8def\uff1a\n   ``` c++\nint tmp=max(dis[t],Len[t][i]);\nif(dis[plat[t][i]]>tmp) {\n\tdis[plat[t][i]]=tmp;\n\tif(!flag[plat[t][i]]) {\n\t\tQ.push(plat[t][i]);\n\t\tflag[plat[t][i]]=1;\n\t}\n}\n    ```\n#####\t\u800c\u539f\u6765\u7684\u6a21\u677f\uff1a\n    \n   ```c++\nint tmp=dis[t]+Len[t][i];\nif(dis[plat[t][i]]>tmp) {\n\tdis[plat[t][i]]=tmp;\n\tif(!flag[plat[t][i]]) {\n\t\tQ.push(plat[t][i]);\n\t\tflag[plat[t][i]]=1;\n\t}\n}\n    ```\n\n### \u53ef\u89c1\u66f4\u65b0\u8def\u5f84\u957f\uff0c\u4ece\u628a\u8def\u63a5\u4e0a\u53bb\u53d8\u6210\u4e86\u53d6\u6700\u5927\u503c\u3002\n\n### \u90a3\u4e48\u53ea\u9700\u8981\u628aspfa\u6572\u4e00\u904d\u5c31\u597d\u5566\u3002\n```c++\n#include<bits/stdc++.h>//\u61d2\u61d2\u7684\u4e07\u80fd\u5934\n#define Maxn 100005\nusing namespace std;\nint ax,axx,n,m,beg,fin,len;\nvector<int>plat[Maxn],Len[Maxn];//\u5728\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86vector\uff0c\u53ea\u8981\u8fd8\u662f\u56e0\u4e3a\u61d2....\nint flag[Maxn],dis[Maxn];//\u50a8\u5b58\u662f\u5426\u5165\u961f\u5217\u4ee5\u53ca\u6700\u77ed\u8def\nvoid add(int a,int b,int c) {//\u52a0\u8fb9\uff08\u4e00\u5b9a\u8981\u6ce8\u610f\u662f\u53cc\u5411\u7684\uff01\uff09\n\tplat[a].push_back(b);\n\tLen[a].push_back(c);\n\tplat[b].push_back(a);\n\tLen[b].push_back(c);\n}\nqueue<int>Q;//(\u53c8\u662f\u61d2\u61d2\u7684\u7cfb\u7edf\u961f\u5217\uff09\uff08\u8c8c\u4f3c\u4f1a\u6bd4\u624b\u5199\u5f97\u6162\u4e00\u70b9\u5427\uff09\nvoid spfa() {\n\tfor(int i=1; i<=n; i++)dis[i]=1e9+7,flag[i]=0;//\u521d\u59cb\u5316\u8ddd\u79bb\u65e0\u7a77\u5927\n\tflag[ax]=1;//\u8d77\u70b9\u5165\u961f\n\tdis[ax]=0;//\u8d77\u70b9\u5230\u8d77\u70b9\u8ddd\u79bb\u76f8\u7b49\n\tQ.push(ax);//\u5165\u7cfb\u7edf\u961f\u5217\uff08\u4e0e\u4e0a\u9762\u4e0d\u540c\uff09\n\twhile(!Q.empty()) {\n\t\tint t=Q.front();//\u53d6\u961f\u9996\u5143\u7d20\n\t\tQ.pop();//\u5f39\u51fa\u961f\u9996\u5143\u7d20\n\t\tflag[t]=0;//\u961f\u9996\u5143\u7d20\u51fa\u961f\uff08flag\u7684\u961f\uff01\uff09\uff08\u4e0d\u8981\u770b\u6df7\u4e86\uff09\n\t\tfor(int i=0; i<plat[t].size(); i++) {\n\t\t\tint tmp=max(dis[t],Len[t][i]);//\u552f\u4e00\u548c\u6a21\u677f\u4e0d\u4e00\u6837\u7684\u5730\u65b9\n\t\t\tif(dis[plat[t][i]]>tmp) {\n\t\t\t\tdis[plat[t][i]]=tmp;\n\t\t\t\tif(!flag[plat[t][i]]) {\n\t\t\t\t\tQ.push(plat[t][i]);\n\t\t\t\t\tflag[plat[t][i]]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[axx]==1e9+7)dis[axx]=-1;//\u4e00\u5b9a\u8981\u6ce8\u610f\u9898\u4e2d\u7684-1\uff0c\u4e0d\u7136\u5c31wa\u4e86\n\tprintf(\"%d\\n\",dis[axx]);\n\treturn ;\n}\n\nint main() {\n\tscanf(\"%d%d%d%d\",&n,&m,&ax,&axx);//\u8bfb\u5165\n\tfor(int i=1; i<=m; i++) {\n\t\tscanf(\"%d%d%d\",&beg,&fin,&len);\n\t\tadd(beg,fin,len);\n\t}\n\tspfa();\n}\n```\n\n\t\u7136\u800c\u540e\u6765\u53d1\u73b0.....\n###\t\u8c8c\u4f3c\u6700\u5c0f\u751f\u6210\u6811\u66f4\u597d\u5199\u554a.....\n\t\u8fd9\u91cc\u91c7\u53d6\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5\uff0c\uff08\u540d\u5b57\u6709\u70b9\u957f\u2026\u2026\uff09\n\t\u91c7\u53d6\u5e76\u67e5\u96c6\u8f85\u52a9\uff08\u4e3a\u4ec0\u4e48\u611f\u89c9\u8fd8\u662f\u4e2a\u6a21\u677f\u9898\uff09\n\t\u8fd9\u91cc\u89e3\u91ca\u4e0b\u4e3a\u4ec0\u4e48\u60f3\u5230\u6700\u5c0f\u751f\u6210\u6811\uff0c\u56e0\u4e3a\uff0c\u8fd9\u9898\u91c7\u53d6\u66f4\u65b0\u6700\u5927\u503c\uff0c\u800c\u6700\u5927\u503c\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\n    \u90a3\u4e48\u5728\u7b54\u6848\u51fa\u73b0\u524d\u80af\u5b9a\u76ee\u524d\u503c\u4f1a\u6bd4\u7b54\u6848\u5c0f\u554a\uff0c\u5bf9\u7b54\u6848\u5e76\u6ca1\u6709\u5f71\u54cd.\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nint fa[50005],n,m,ans,tmpf,tmps,cnt,num,s,t;\nstruct node {\n\tint fr,to,cost;\n\tbool operator <(const node &A)const {//\u91cd\u8f7d\u6bd4\u8f83\u6709\u4eba\u4f53\u7f8e\u5b66~\n\t\treturn A.cost>cost;\n\t}\n} A[50005];\nint getfa(int v) {//\u8def\u5f84\u538b\u7f29\uff0c\u4e00\u5b9a\u8981\uff0c\u4e0d\u7136\u5e76\u67e5\u96c6\u5c31\u6ca1\u4ec0\u4e48\u7528\u5904\u4e86\n\twhile(v!=fa[v])v=fa[v]=fa[fa[v]];//\u5c3d\u7ba1\u957f\u4e86\u70b9\uff0c\u4f46\u8fd9\u4e2a\u5e76\u67e5\u96c6\u6548\u7387\u80af\u5b9a\u662f\u6700\u9ad8\u7684\uff08\u771f\u8bda\u63a8\u8350\u4f7f\u7528\uff09\n    //\u4e5f\u5c31\u662f\u624b\u52a8\u52a0\u5e38\u6570\u4f18\u5316233333(\u4e0d\u8981\u52a0\u591a\u4e86\u2026\u2026\u5e76\u67e5\u96c6\u538b\u7f29\u540e\u57fa\u672c\u8def\u5f84\u957f\u5ea6\u5728\u56db\u5de6\u53f3\u2026\u2026)\n\treturn v;\n}\nvoid solve() {\n\tsort(A+1,A+m+1);//\u6392\u5e8f\n\tfor(int i=1; i<=m; i++) {\n\t\ttmpf=getfa(A[i].fr),tmps=getfa(A[i].to);//\u5bfb\u627e\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u662f\u5426\u5df2\u7ecf\u88ab\u653e\u5728\u4e00\u8d77\n\t\tif(tmpf==tmps)continue; //\u82e5\u679c\u662f\u90a3\u5c31\u7ee7\u7eed\n\t\tif(getfa(s)==getfa(t))break;//\u5982\u679c\u8d77\u70b9\u548c\u7ec8\u70b9\u5728\u4e00\u8d77\u4e86\u5c31\u9000\u51fa\u7a0b\u5e8f\u5427\n\t\tnum++;\n\t\tans=max(ans,A[i].cost);//\u4ece\u5c0f\u5230\u5927\u8bb0\u5f55max\u503c\uff0c\uff08\u56e0\u4e3a\u4ece\u6700\u5c0f\u7684\u5f00\u59cb\uff0c\u6240\u4ee5\u7b54\u6848\u80af\u5b9a\u4e0d\u4f1a\u6bd4\u5f53\u524d\u7684\u5c0f\uff09\n\t\tfa[tmps]=tmpf;//\u5408\u5e76\u7236\u4eb2\n\t\tcnt++;\n\t\tif(cnt==n-1) break;\n\t}\n}\nint main() {\n\tscanf(\"%d%d%d%d\",&n,&m,&s,&t);\n\tfor(int i=1; i<=m; i++)scanf(\"%d%d%d\",&A[i].fr,&A[i].to,&A[i].cost),fa[i]=i;//fa[]\u7684\u521d\u59cb\u5316\u4e00\u5b9a\u8981\u8bb0\u5f97\n\tsolve();\n\tprintf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1527464160,
        "uid": 100000,
        "name": "Armand",
        "ccfLevel": 0,
        "title": "P1396 \u8425\u6551"
    },
    {
        "content": "\u5176\u5b9e\u5c31\u662f\u4e00\u9053\u6700\u5c0f\u751f\u6210\u6811\u7684\u6a21\u677f\u9898\uff0c\u6211\u5728\u8fd9\u91cc\u7528\u7684\u662fkruskal\u7b97\u6cd5\uff0c\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\u6bcf\u52a0\u5165\u4e00\u6761\u8fb9\u90fd\u8981\u5224\u65ads\uff0ct\u662f\u4e0d\u662f\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\u9762\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u987a\u5229AC\u4e86\u3002\u3002\u3002\n\n\n\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint fa[10005];\nstruct node{\n    int x,y,z;\n}; \nnode way[20010];\nint n,m,s,t,tot=0;\nint com(const node &c,const node &d)\n{\n    return c.z<d.z;\n}\nint find(int g)  //\u627e\u5230\u8be5\u5143\u7d20\u6240\u5728\u96c6\u5408\u7684\u4ee3\u8868\u5143\u7d20\n{\n    if (fa[g]!=g)\n       fa[g]=find(fa[g]);\n    return fa[g];\n}\nint unionn(int s1,int s2)  //\u5408\u5e76\u96c6\u5408\u7684\u8fc7\u7a0b\n{\n    int r1=find(s1);\n    int r2=find(s2);\n    if (r1!=r2)\n       fa[r1]=r2;\n}\nint js()\n{\n    int i,j,k;\n    k=1;\n    i=1;\n    while (k<n)\n    {\n        while (find(way[i].x)==find(way[i].y))\n            i++;\n        tot=max(way[i].z,tot);   //\u56e0\u4e3a\u6c42\u7684\u662f\u6700\u5927\u503c\uff0c\u6240\u4ee5\u7528\u4e86\u4e00\u4e2amax\uff0c\u5176\u5b9e\u6ca1\u5fc5\u8981\u8fd9\u4e48\u9ebb\u70e6\uff0c\u56e0\u4e3a\u8fb9\u4e00\u5b9a\u662f\u4ece\u5927\u5230\u5c0f\u7684\uff0c\u540e\u52a0\u5165\u7684\u8fb9\u4e00\u5b9a\u8f83\u5927\uff0c\u53ef\u4ee5\u76f4\u63a5\u5199tot=way[i].z;\n        unionn(way[i].x,way[i].y);  //\u8fd9\u91cc\u5c31\u662f\u4e00\u4e2a\u5e76\u67e5\u96c6\u5904\u7406\n        k++;\n        if (find(s)==find(t))  //\u5224\u65ad\uff0c\u81ea\u8ba4\u4e3a\u662f\u8fd9\u9053\u9898\u6700\u91cd\u8981\u7684\u7ec6\u8282\n           break;\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&s,&t);\n    int i;\n    for (i=1;i<=m;i++)\n    {\n       scanf(\"%d%d%d\",&way[i].x,&way[i].y,&way[i].z);\n    }\n    for (i=1;i<=n;i++)\n      fa[i]=i;\n    sort(way+1,way+1+m,com);  //\u628a\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    js();\n    printf(\"%d\",tot);\n    return 0;\n}\n```",
        "postTime": 1477614946,
        "uid": 20874,
        "name": "Coco_T",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u8fd8\u6ca1\u5b66\u56fe\u8bba\uff0c\u7a0d\u5fae\u770b\u4e86\u4e00\u4e0b\u4e66\u5c31\u6c34\u8fc7\u4e86\uff08\u4e8c\u5206\u592a\u96be\uff09\uff0c\u7528dijkstra\u7a0d\u5fae\u53d8\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u5728\u505a\u4e9b\u4f18\u5316\u3002\u8bf7\u53c2\u89c1\u4ee3\u7801\uff0c\u4ee3\u7801\u4e0a\u9762\u6ce8\u91ca\u5f88\u6e05\u6670\uff08\u81ea\u8ba4\u4e3a\uff09\u3002\n# code\uff1a\n```\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<stack>//\u5934\u6587\u4ef6\nusing namespace std;\nbool pc[10010];//dijkstra\u4f7f\u7528\u6240\u9700\u8981\u7684\u5224\u91cd\u6570\u7ec4 \nint n/*\u70b9\u7684\u4e2a\u6570*/,m/*\u8fb9\u7684\u4e2a\u6570*/,start/*\u8d77\u59cb\u70b9*/,end/*\u7ec8\u70b9*/,num[10010]/*\u6bcf\u4e2a\u70b9\u8fde\u7684\u8fb9*/,max_best[10010]/*\u6bcf\u4e2a\u70b9\u8d70\u5230\u7684\u6700\u5927\u7684\u62e5\u6324\u5ea6\u7684\u6700\u5c0f\u503c*/,INF=0x7fffffff/*\u8db3\u591f\u5927\u7684\u503c*/;\nlong long ans=INF/*\u6700\u7ec8\u7b54\u6848\u8d77\u59cb\u8d4b\u503c*/;\nstruct edge\n{\n    int last,next,yj;\n    \n}a[50001];//\u70b9\u548c\u8fb9\u7684\u7ed3\u6784\u4f53 \nint cmp(edge c,edge d)//sort\u4f7f\u7528cmp\u51fd\u6570\u6392\u5e8f \n{\n    if (c.last==d.last)\n        return c.next<d.next;\n    return c.last<d.last;\n}\nvoid createroad()//\u5efa\u56fe \n{\n    for (int i=1;i<=m;i++)\n    {\n        cin>>a[i].last>>a[i].next>>a[i].yj;//\u5148\u5c06\u6570\u636e\u50a8\u5b58\u8d77\u6765 \n        a[i+m].last=a[i].next;\n        a[i+m].next=a[i].last;\n        a[i+m].yj=a[i].yj;//\u56e0\u4e3a\u56fe\u65e0\u5411\uff0c\u6240\u4ee5\u53cd\u8fc7\u6765\u5b58\u4e00\u904d\uff0c\u4ee5\u4fbf\u4e8e\u5feb\u901f\u627e\u5230\u6bcf\u4e2a\u70b9\u6240\u8fde\u7684\u8fb9 \n    }\n    sort(a+1,a+1+m*2,cmp);//\u6392\u5e8f->\u51fa\u53d1\u70b9\u7f16\u53f7\u6392\u5e8f \n    int nn=1;//nn\u521d\u59cb\u503c\u4e3a 1 \n    for (int i=1;i<=2*m;i++)\n    {\n        if (a[i].last!=nn)//\u5047\u5982\u5f53\u524d\u4f4d\u7f6e\u7684\u51fa\u53d1\u70b9\u4e0d\u4e3ann\uff0c\u5219\u51fa\u53d1\u70b9\u53d8\u52a8 \n        {\n            num[nn]=i-1;//\u50a8\u5b58\u51fa\u53d1\u70b9\u6700\u540e\u5230\u8fbe\u7684\u4f4d\u7f6e \n            nn=a[i].last;//\u66f4\u65b0nn\n        }\n    }\n    num[0]=0;//\u5f00\u5934\u7ed3\u5c3e\u7279\u6b8a\u5904\u7406 \n    num[n]=2*m;\n\t//\u5c06\u6bcf\u4e2a\u70b9\u8fde\u63a5\u7684\u70b9\u5728a\u6570\u7ec4\u91cc\u7684\u4f4d\u7f6e\u7528num\u6570\u7ec4\u5b58\u8d77\u6765\uff0c\u4ee5\u4fbf\u4e8e\u67e5\u627e \n}\n\nint find(int aa,int b)//\u67e5\u627e\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8fb9\u7684\u6743\u503c\uff08\u62e5\u6324\u5ea6\uff09 \n{\n\tint anss=INF;//\u56e0\u4e3a\u4e24\u4e2a\u70b9\u4e4b\u95f4\u53ef\u80fd\u6709\u591a\u6761\u8fb9\uff0c\u6240\u4ee5\u6311\u9009\u6743\u503c\u6700\u5c0f\u7684 \n\tfor (int ss=num[aa-1]+1;ss<=num[aa];ss++)\n\t\tif (a[ss].last==aa&&a[ss].next==b)\n\t\t\tanss=min(anss,a[ss].yj);//\u66f4\u65b0\u6700\u5c0f\u6743\u503c \n\tif (anss!=INF) return anss;\n}\nvoid dijkstra(int s)\n{\n\tfill(max_best+1,max_best+1+n,INF);//\u5c06\u6570\u7ec4\u521d\u59cb\u5316\u4e3a\u6700\u5927\u503c \n\tmax_best[s]=0;//\u8d77\u70b9\u5230\u8d77\u70b9\u8ddd\u79bb\u4e3a 0 \n\twhile (1)//\u5f00\u59cb\u641c \n\t{\n\t\tint v=-1;\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tif (!pc[i]&&(v==-1||max_best[i]<max_best[v])) v=i;//\u627e\u5230\u4e0e\u81ea\u5df1\u76f8\u8fde\u4e14\u8fb9\u7684\u6743\u503c\u6700\u5c0f\u7684\u70b9 \n\t\tif (v==-1)//\u5982\u679c\u6ca1\u627e\u5230\u5219\u6240\u6709\u70b9\u904d\u5386 \n\t\t\tbreak;//\u8df3\u51fa\u5faa\u73af \n\t\tpc[v]=true;//\u6807\u8bb0\u8d70\u8fc7 \n\t\tfor (int i=num[v-1]+1;i<=num[v];i++)//\u4ece\u81ea\u5df1\u76f8\u8fde\u7684\u70b9\u5f00\u641c \n\t\t{\n\t\t\tint k=find(v,a[i].next);//\u627e\u5230\u8fb9\u7684\u6743\u503c \n\t\t\tmax_best[a[i].next]=min(max(max_best[v],k),max_best[a[i].next]);//\u66f4\u65b0\u4e0e\u81ea\u5df1\u76f8\u8fde\u7684\u70b9\u7684\u6743\u503c\u7684\u6700\u5927\u503c\t\n\t\t}\n\t}\n\t//\u7ed3\u675f\u641c\u7d22 \n\tans=max_best[end];//ans\u8d4b\u503c \n}\nint main()\n{\n\tmemset(pc,false,sizeof(pc));//memset\u521d\u59cb\u5316 \n    memset(a,-1,sizeof(a));\n    cin>>n>>m>>start>>end;//\u8f93\u5165 \n    createroad();//\u5efa\u56fe \n    dijkstra(start);//\u627e\u51fa\u6700\u5c0f\u503c \n    cout<<ans;//\u8f93\u51fa \n    return 0;\n}\n```\n\u5199\u4e86\u8fd9\u4e48\u591a\uff0c\u6211\u8fd8\u662f\u592a\u83dc\u4e86\uff0c\u6c42\u4e00\u904d\u8fc7\uff0c\u8c22\u8c22\u3002\n### \u672c\u9898\u89e3\u53d7\u673a\u623fCLF\uff0cFXW\uff0cLYH\uff0cHC  ~~\u5927\u4f6c~~\u795e\u4f6c\u542f\u53d1\u800c\u5f97",
        "postTime": 1560751848,
        "uid": 215590,
        "name": "Ckger",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "# \u9898\u76ee\uff1ahttps://www.luogu.org/problemnew/show/P1396\n\n# \u5206\u6790\uff1a\n\u8fd9\u5176\u5b9e\u4e00\u770b\u5c31\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u7684\u8fd1\u4f3c\u6a21\u677f\u7684\u9898\u76ee\uff0c\u4f46\u6211\u4eec\u8981\u6ce8\u610f\u5230\u4e24\u4e2a\u533a\u4e4b\u95f4\u53ef\u80fd\u4f1a\u6709\u591a\u6761\u9053\u8def\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u5728\u6700\u77ed\u8def\u6a21\u677f\u7684\u57fa\u7840\u4e0a\u628a\u52a0\u548c\u6539\u4e3a\u6700\u5927\u503c\u5373\u53ef\uff0c\n\n\u56e0\u4e3a\u9898\u76ee\u8fd8\u8bf4\u4e86\u8981\u6c42\u51fa\u6700\u540e\u7684\u7ed3\u679c\u662f\u6700\u5927\u503c\u7684\u6700\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u80fd\u4f1a\u81ea\u7136\u800c\u7136\u7684\u60f3\u5230\u4e8c\u5206\uff0c\u7136\u800c\u6b64\u9898\u8dd1\u4e2adijkstra\u6216spfa\u751a\u81f3\u662f\u514b\u9c81\u65af\u5361\u5c14\u6700\u5c0f\u751f\u6210\u6811\u90fd\u884c\u3002\n\n\u7136\u800c\u636e\u67d0\u5927\u4f6c\u8bf4\u4e8c\u5206+bfs\u4e5f\u80fd\u8dd1\u51fa\u6765\u3002\n\n\u4e0b\u9762\u63d0\u4f9bdijkstra\u7b97\u6cd5\u3002\n\n# [\u4ee3\u7801\u5728\u8fd9](https://blog.csdn.net/kkkksc03/article/details/83625866)",
        "postTime": 1541072923,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6240\u8981\u6c42\u7684\u662f\u201c\u7ecf\u8fc7\u9053\u8def\u7684\u62e5\u6324\u5ea6\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\u201d\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e5f\u5c31\u662f\u8ba9\u4eces\u5230\u8fbet\u7684\u6240\u6709\u8def\u5f84\u4e2d\u7684\u6700\u5927\u6743\u503c\u6700\u5c0f\uff0c\u5e76\u6c42\u51fa\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\u542c\u8d77\u6765\u5f88\u62d7\u53e3_(\u00b0:\u0437\u300d\u2220)_\n\u7531\u8fd9\u4e2a\u9898\u5e72\uff0c\u4e0d\u96be\u60f3\u5230\uff1aKruskal\u7b97\u6cd5\u6c42MST\u7684\u8d2a\u5fc3\u7b56\u7565\u53ef\u4ee5\u4e00\u7528\u3002\u4e3a\u4e86\u5f97\u5230\u9898\u5e72\u4e2d\u8981\u6c42\u7684\u201c\u6700\u5c0f\u503c\u201d\uff0c\u6211\u4eec\u603b\u662f\u9009\u62e9\u5269\u4e0b\u7684\u8fb9\u4e2d\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u76f8\u8fde\u4e24\u4e2a\u8282\u70b9\uff08\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u4ee5\u907f\u514d\u6210\u73af\uff09\u3002\u9898\u5e72\u4e2d\u8981\u6c42\u7814\u7a76\u7684\u662f\u4eces\u5230t\u7684\u8def\u5f84\uff0c\u867d\u7136\u4e00\u4e9b\u52a0\u5165\u7684\u8fb9\u5e76\u4e0d\u5c5e\u4e8e\u6240\u8981\u6c42\u7684\u8def\u5f84\uff0c\u4f46\u662f\u6070\u597d\u4f7f\u5f97s\u548ct\u8fde\u901a\u7684\u90a3\u6761\u8fb9\uff0c\u4e00\u5b9a\u662fs\u5230t\u7684\u8def\u5f84\u4e2d\u7684\u6700\u5927\u503c\u3002\u800c\u5728Kruskal\u7b97\u6cd5\u7684\u8d2a\u5fc3\u7b56\u7565\u524d\u63d0\u4e0b\uff0c\u8fd9\u4e2a\u6700\u5927\u503c\u4e00\u5b9a\u662f\u9898\u5e72\u6240\u8981\u6c42\u7684\u201c\u6700\u5c0f\u503c\u201d\u3002\n\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u4e00\u89e3\u6cd5\u662f\u57fa\u4e8e\u7a0d\u52a0\u6539\u52a8\u7684Kruskal\u7b97\u6cd5\u3002\nKruskal\u7b97\u6cd5\u6c42MST\u7684\u6838\u5fc3\u6709\u4e24\u4e2a\uff1a\u4e00\u662f\u8fb9\u7684\u6392\u5e8f\uff0c\u4e8c\u662f\u5e76\u67e5\u96c6\u7684\u5224\u662f\u5426\u6210\u73af\u3002\u8fb9\u7684\u6392\u5e8f\u6211\u9009\u62e9\u7528\u7ed3\u6784\u4f53\u50a8\u5b58\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u6743\u503c\uff0c\u5e76\u7528stl\u7684qsort()\u51fd\u6570\u6392\u5e8f\u3002\n\u4e0b\u9762\u8d34\u4e0aAC\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#define maxn 10005\n#define maxm 20005\nusing namespace std;\nstruct node\n{\n  int s,t,w;     \n};\nstruct node g[maxm];\nint n,m,s,t,fa[maxn];\nint cmp(const void *a,const void *b)\n{\n  struct node *p=(struct node *)a,*q=(struct node *)b;\n  return p->w-q->w;  \n} \nvoid init()\n{\n  int u,v,w;\n  scanf(\"%d%d%d%d\",&n,&m,&s,&t);\n  for(int i=1;i<=n;i++)fa[i]=i;\n  for(int i=0;i<m;i++)\n  {\n    scanf(\"%d%d%d\",&u,&v,&w);\n    g[i].s=u;g[i].t=v;g[i].w=w;        \n  }     \n  qsort(g,m,sizeof(g[0]),cmp);\n}\nint find(int x)\n{\n  return fa[x]==x?x:fa[x]=find(fa[x]);  \n}\nvoid merge(int s,int t)\n{\n  fa[find(s)]=find(t);     \n}\nint main()\n{\n  int s1,t1;\n  init();\n  for(int i=0;i<m;i++)\n  {\n    s1=g[i].s;t1=g[i].t;\n    if(find(s1)!=find(t1))\n      merge(s1,t1);        \n    if(find(s)==find(t)) \n    { \n      printf(\"%d\\n\",g[i].w);\n      break; \n    }\n  }\n  return 0;  \n}\n\n```",
        "postTime": 1531405602,
        "uid": 78159,
        "name": "\u4ee5\u68a6\u4e3a\u9a6c",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "```cpp\n\n\u6211\u7528\u7684\u662fprime\u7b97\u6cd5\u52a0\u90bb\u63a5\u8868\uff0c\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u5f88\u5927\uff0c\u6240\u4ee5\u90bb\u63a5\u77e9\u9635\u4f1a\u7206\u5185\u5b58\uff0c\n\u53e6\u5916\u6211\u8fd8\u7528\u4e86\u4e00\u4e2a\u6570\u7ec4f1\u5b58\u7236\u8282\u70b9\uff0c\u65b9\u4fbf\u627e\u6700\u77ed\u8def\u3002\ntype arr=record  \nx,y,z,s:longint;  \nend;  \nvar  n,m,qd,zd,x,y,z,i:longint;  \na:array[0..50000]of arr;c,f1,min:array[0..20000]of longint;  \nf:array[0..20000]of boolean;  \nfunction ans(x:longint):longint;  \nvar minx:longint;  \nbegin  \nif x=qd then exit(0);  \nif min[x]>ans(f1[x])then exit(min[x])else exit(ans(f1[x]));  \nend;  \nprocedure sb(qdb:longint);  \nvar i,min2,k:longint;  \nbegin  \n  if a[qdb].x=zd then exit;  \n  f[a[qdb].x]:=true;  \n  repeat  \n    if (min[a[qdb].y]>a[qdb].z)and(not f[a[qdb].y])then  \n        begin  \n              min[a[qdb].y]:=a[qdb].z;  \n              f1[a[qdb].y]:=a[qdb].x;  \n        end;  \n    qdb:=a[qdb].s;  \n  \n  until qdb=0;  \n  min2:=maxlongint;  \n  for i:=1 to n do  \n  if (not f[i])and(min[i]<min2)then  \n     begin  \n       min2:=min[i];  \n       k:=i;  \n  \n     end;  \n  sb(c[k]);  \nend;  \nbegin  \nread(n,m,qd,zd);  \nfor i:=1 to m do min[i]:=maxlongint;  \nfor i:=1 to m do  \n  begin  \n    read(x,y,z);  \n    a[i*2-1].x:=x;a[i*2-1].y:=y;a[i*2-1].z:=z;  \n    a[i*2-1].s:=c[x];c[x]:=i*2-1;  \n    a[i*2].x:=y;a[i*2].y:=x;a[i*2].z:=z;  \n    a[i*2].s:=c[y];c[y]:=i*2;  \n  \n  end;  \nsb(c[qd]);  \nwrite(ans(zd));  \nend.  \n\n```",
        "postTime": 1454759061,
        "uid": 14968,
        "name": "mmqqdd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u4f7f\u7528\u5e76\u67e5\u96c6\u7684\u89e3\u6cd5\uff0c\u7531P1111\u5f97\u5230\u7684\u7075\u611f\uff0c\u8fd9\u9898\u5b9e\u9645\u4e0a\u6bd4P1111\u66f4\u7b80\u5355\u3002\n\n\u9996\u5148\u5bf9\u6240\u6709\u8fb9\u7684\u62e5\u6324\u5ea6\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u62e5\u6324\u5ea6\u6700\u5c0f\u7684\u8fb9\u5f00\u59cb\uff0c\u5c06\u8fb9\u5de6\u53f3\u8fde\u63a5\u7684\u70b9\u653e\u5165\u5e76\u67e5\u96c6\u4e2d\uff0c\u8fd9\u6837\u540c\u4e00\u5e76\u67e5\u96c6\u4e2d\u7684\u70b9\u5c31\u90fd\u662f\u76f8\u4e92\u8fde\u901a\u7684\u3002\n\n\u5f53s\u548ct\u51fa\u73b0\u5728\u540c\u4e00\u5e76\u67e5\u96c6\u4e2d\u65f6\uff0c\u610f\u5473\u7740s\u548ct\u5df2\u7ecf\u8fde\u901a\u4e86\uff0c\u6b64\u65f6\u7684\u9053\u8def\u62e5\u6324\u5ea6\u5c31\u662f\u6211\u4eec\u8981\u7684\u62e5\u6324\u5ea6\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\u3002\n\n```delphi\n\nprogram save;\ntype roads=record\ntime:integer;\naside:integer;\nbside:integer;\nend;\nvar n,m,s,t,i,p1,p2:integer;\nroad:array[1..20000] of roads;\na:array[1..10000] of integer;\nfunction root(x:integer):integer;\nbegin\nif a[x]=x then\nroot:=a[x]\nelse\nbegin\na[x]:=root(a[x]);\nroot:=a[x];\nend;\n        end;\nprocedure sort(l,r: integer);\n      var\n         i,j,x: integer;\ny:roads;\n      begin\n         i:=l;\n         j:=r;\n         x:=road[(l+r) div 2].time;\n         repeat\n           while road[i].time<x do\n            inc(i);\n           while x<road[j].time do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=road[i];\n                road[i]:=road[j];\n                road[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort(l,j);\n         if i<r then\n           sort(i,r);\n      end;\nbegin\nreadln(n,m,s,t);\nfor i:=1 to m do\nreadln(road[i].aside,road[i].bside,road[i].time);\nsort(1,m);\nfor i:=1 to n do\na[i]:=i;\nfor i:=1 to m do\nbegin\np1:=road[i].aside;\np2:=road[i].bside;\nif root(p1)<>root(p2) then\na[root(p1)]:=root(p2);\nif root(s)=root(t) then\nbegin\nwriteln(road[i].time);\nhalt;\nend;\nend;\nend.\n\n```(pascal)\n",
        "postTime": 1446721602,
        "uid": 11121,
        "name": "chendayy99",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "####  \u5f53\u5e74\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u8fd8\u662f\u4e00\u4e2a\u8d85\u7ea7\u8d85\u7ea7\u8d85\u7ea7\u849f\u84bb\n\n#### \u4e0d\u4f1aspfa\u548ckruskal\n## \u4e8e\u662f\u7528\u4e86\u4e00\u4e2a\u4f2aBellman\u2014ford\u52a0\u4e00\u4e2a\u5c0f\u4f18\u5316\u5c31A\u4e86qwq\n#### \u4ee3\u7801\u77ed\u5f97\u4e0d\u53ef\u601d\u8bae\u5657\u54c8\u54c8\n```\n#include <iostream>\n#include <string.h>\n#include <cmath>\n#define MAXN 0x3f3f3f\nusing namespace std;\nint n,m,s,t;\nint u[20005],v[20005],w[20005];\nint dis[10005],flag;\nint main()\n{\n\tmemset(u,0,sizeof(u));\n\tmemset(v,0,sizeof(v));\n\tmemset(w,0,sizeof(w));\n\tcin>>n>>m>>s>>t;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>u[i]>>v[i]>>w[i];\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdis[i]=MAXN;\n\t}\n\tdis[s]=0;\n\tfor(int i=1;i<n;i++)\n\t {\n\t \tflag=0;\n\t \tfor(int j=1;j<=m;j++)\n\t \t{\n\t \t\tif(dis[u[j]]>max(dis[v[j]],w[j]))\n\t \t\t{\n\t \t\t\tdis[u[j]]=max(dis[v[j]],w[j]);\n\t \t\t\tflag=1;\n\t\t\t }\n\t \t\tif(dis[v[j]]>max(dis[u[j]],w[j]))\n\t \t\t{\n\t \t\t\tdis[v[j]]=max(dis[u[j]],w[j]);\n\t \t\t\tflag=1;\n\t \t\t}\n\t\t }\n\t\t if(flag==0) break;\n\t }\n\t cout<<dis[t];\n\t return 0;\n}\n```",
        "postTime": 1533542977,
        "uid": 84637,
        "name": "\u6789\u5374\u4e1c\u98ce",
        "ccfLevel": 0,
        "title": "bellman\u2014ford+\u4f18\u5316\u9a9a\u64cd\u4f5c"
    },
    {
        "content": "\u672c\u9898\u7684\u610f\u601d\u662f\u8bf4\uff1a\u5f53s\u5230t\u70b9\u8054\u901a\u7684\u65f6\u5019\uff0c\u6700\u5927\u7684\u8fb9\u957f\uff08\u6743\u503c\uff09\u662f\u591a\u5c11\uff1f \u5f53\u7136\u8fd9\u91cc\u7684\u8054\u901a\u8981\u6c42\u8def\u5f84\u6700\u77ed\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\uff0c\u8003\u8651\u5e76\u67e5\u96c6+\u514b\u9c81\u65af\u5361\u5c14\uff0c\u4ee3\u7801\u975e\u5e38\u597d\u5199\uff0c\u597d\u5199\u5230\u8d85\u4e4e\u4f60\u7684\u60f3\u8c61\uff0c\u53e6\u5916\u6ca1\u52a0ios::sync_with_stdio(false)\u4e5f\u6ca1TLE\uff0c\u8fd9\u4e0d\u5e94\u8be5\uff0c\u53ef\u4ee5\u770b\u51fa\u6570\u636e\u662f\u4e0d\u5361\u65f6\u95f4\u7684\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <string.h>\n#include <algorithm>\nusing namespace std;\nint vis[20001];\nstruct sa\n{\n    int a;\n    int b;\n    int val;\n}dp[20001];\nint find(int x)\n{\n    if (x!=vis[x])\n    vis[x]=find(vis[x]);\n    return vis[x];\n}\nint join(int x,int y)\n{\n    int x1=find(x);\n    int y1=find(y);\n    if (x1!=y1)\n      {vis[y1]=x1; return 1;}\n   return 0;\n}\nint cmp(const sa &a,const sa &b)\n{\n    return a.val<b.val;\n}\nint main()\n{\n  int n,m,s,t,num,ans=0;\n  cin>>n>>m>>s>>t;\n  for(int i=1;i<=n;i++) vis[i]=i;\n  for(int i=1;i<=m;i++)\n   cin>>dp[i].a>>dp[i].b>>dp[i].val;\n   sort(dp+1,dp+m+1,cmp);\n   num=0;\n   for(int i=1;i<=m;i++)\n   {\n       if (join(dp[i].a,dp[i].b)==1)\n       {ans=max(ans,dp[i].val);\n        num++;\n       }\n       if (num==n-1) break;\n\n       if (find(s)==find(t)) break;\n   }\n   cout<<ans<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1529717423,
        "uid": 65643,
        "name": "\u5174\u5b89\u9ed1\u718a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u9898\u89e3\uff0c\u5176\u5b9e\u672c\u9898\u53ef\u4ee5\u7406\u89e3\u6210\u4e00\u9053\u6700\u77ed\u8def\u95ee\u9898\u7684\u53d8\u5f62\u3002\n\n\u672c\u9898\u6211\u662f\u7528dijkstra+heap\u4f18\u5316\u7b97\u6cd5\u8fc7\u7684\uff0c\u5f53\u7136spfa\u7684\u601d\u60f3\u4e5f\u662f\u4e00\u6837\u7684\u3002\n\n\u5bf9\u4e8e\u6700\u77ed\u8def\u95ee\u9898\uff0cdijkstra\u7684\u601d\u60f3\u662f\uff1a\n\n1.\u521d\u59cb\u5316v0\u7684\u8def\u5f84\u957f\u5ea6\u4e3ad0 = 0\uff0c\u5176\u4f59\u5404\u70b9di\u957f\u5ea6\u4e3a\u65e0\u7a77\u5927\n\n2.\u6bcf\u6b21\u4ece\u5c1a\u672a\u5f97\u51fa\u7ed3\u8bba\u7684\u70b9\u4e2d\uff0c\u53d6\u51fa\u79bb\u8d77\u59cb\u70b9v0\u6700\u8fd1\u7684\u90a3\u4e2a\u70b9vi\uff0c\u7136\u540e\u5f97\u51fa\u7ed3\u8bba\uff0cv0\u5230\u73b0\u5728\u53d6\u51fa\u7684\u70b9vi\u7684\u6700\u77ed\u8def\u7684\u957f\u5ea6\u5c31\u662f\u76ee\u524d\u8ba1\u7b97\u51fa\u7684di\n\n3.\u901a\u8fc7di + wik\u548cdk\u4f5c\u677e\u5f1b\u64cd\u4f5c\uff0c\u66f4\u65b0\u6240\u6709i\u76f8\u90bb\u7684\u70b9\u7684d\u503c\u3002\n\n4.\u6267\u884c2\uff0c3\u76f4\u5230\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u90fd\u88ab\u786e\u5b9a\u3002\n\n\n\u5bf9\u4e8e\u672c\u9898\u6765\u8bf4\uff0c\u5176\u4ed6\u601d\u60f3\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u53ea\u662f\u677e\u5f1b\u64cd\u4f5c\u7684\u65f6\u5019\u6bd4\u8f83\u7684\u4e0d\u662fdk\u548cdi+wik\uff0c\u800c\u662fdk \u548cmax(di, wik)\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7136\u540e\u7531\u4e8e\u9898\u76ee\u6570\u636en <= 10000, m <= 2n\uff0c\u6240\u4ee5\u662f\u7a00\u758f\u56fe\uff0c\u7528heap\u4f18\u5316\u6bd4\u7eafdijkstra\u66f4\u5feb\u3002\n\n\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801\u3002\n\n\n\n\n\n    \n\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <vector>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n#define MAX_DIS 10000;\nstruct Edge {\n    int from;\n    int to;\n    int dis;\n};\nstruct HeapNode {\n    int u;\n    int d;\n    HeapNode() {}\n    HeapNode(int num, int dis) :u(num), d(dis) {}\n    bool operator<(const HeapNode & n) const {\n        return this->d > n.d; \n    }\n};\nint main {\n    int n, m, s, t, u, dis;\n    cin >> n >> m >> s >> t;\n    vector<vector<Edge> > edges;\n    Edge e;\n    HeapNode node;\n    int *d = new int[n + 1];\n    int *p = new int[n + 1];\n    for (int i = 0; i <= n; i++) {\n        d[i] = MAX_DIS;\n    }\n    d[s] = 0;\n    memset(p, 0, sizeof(int) * (n + 1));\n    priority_queue<HeapNode> que;\n    edges.resize(n + 1);\n    for (int i = 0; i < m; i++) {\n        cin >> e.from >> e.to >> e.dis;\n        edges[e.from].push_back(e);\n        u = e.from;\n        e.from = e.to;\n        e.to = u;\n        edges[e.from].push_back(e);\n    }\n    que.push(HeapNode(s, 0));\n    while (!que.empty()) {\n        node = que.top();\n        que.pop();\n        u = node.u;\n        dis = node.d;\n        if (!p[u]) {\n            p[u] = 1;\n            d[u] = dis;\n            for (int i = 0; i < edges[u].size(); i++) {\n                               // \u53ea\u6709\u8fd9\u6bb5\u548cdijkstra\u7b97\u6cd5\u7684\u601d\u60f3\u4e0d\u4e00\u6837\uff0c\u5229\u7528\u5f53\u524d\u70b9\u7684\u62e5\u6324\u5ea6\u548c\u8def\u5f84\u62e5\u6324\u5ea6\u7684\u6700\u5927\u503c\u5bf9\u76f8\u90bb\u70b9\u505a\u677e\u5f1b\u64cd\u4f5c\n                int testDis = max(dis, edges[u][i].dis);  \n                if (d[edges[u][i].to] > testDis) {\n                    d[edges[u][i].to] = testDis;\n                    que.push(HeapNode(edges[u][i].to, testDis));\n                }\n            }\n        }\n    }\n    cout << d[t];\n    return 0;\n}\n\n```",
        "postTime": 1512737810,
        "uid": 52416,
        "name": "\u795e\u7684\u6cea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u4e0d\u5f97\u4e0d\u6765\u4e00\u53d1\u9898\u89e3\n\n\u672c\u6765\u770b\u5230\u4e8c\u5206\u548c\u5e76\u67e5\u96c6\u548c\u56fe\u8bba\u7684\u6807\u7b7e\u7684\u65f6\u5019\u591a\u5bb3\u6015\u7684\n\n\u540e\u6765\u6211\u6df1\u601d\u719f\u8651\n\n#\u5176\u5b9e\u7528\u6700\u5c0f\u751f\u6210\u6811\u5c31\u884c\u4e86\n\n##\u9996\u5148\u5bf9\u8fb9\u7684\u6743\u503c\u6392\u5e8f\n\n\u4ece\u5c0f\u5230\u5927\u6784\u5efa\u6700\u5c0f\u751f\u6210\u6811\n\n\u6bcf\u52a0\u4e00\u6761\u8fb9\u5c31\u5224\u65ads\uff0ct\u7684\u8054\u901a\n\n\u8054\u901a\u4e86\u5c31\u8f93\u51fa\u5f53\u524d\u8054\u901a\u5757\u7684\u6700\u5927\u6743\u503c\n\n##\u56e0\u4e3a\u4e00\u65e6\u8054\u901a\uff0c\u5c31\u8bf4\u660e\u4e00\u5b9a\u8981\u7ecf\u8fc7\u5f53\u524d\u7684\u8fb9\uff0c\u5373\u5f53\u524d\u7684\u6700\u5927\u6743\u503c\n\n\u7c7b\u4f3c\u8d2a\u5fc3\n\n#\u5176\u6b21\uff0c\u6784\u5efa\u6700\u5c0f\u751f\u6210\u6811\u65f6\u52a0\u5165\u5e76\u67e5\u96c6\u4f18\u5316\n\n##\u538b\u7f29\u8def\u5f84\n\n```cpp\n#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\nint n,m,s,t;\nint f[10001];//father\uff08\u5e76\u67e5\u96c6\u7684\u5185\u5bb9\uff09\nlong long total;\n\nstruct cs\n{\n    int x,y,z;\n}a[20001];\n\nbool comp(cs a1,cs a2)\n{\n    return a1.z<a2.z;\n}\n\nint gf(int k)//getfather\uff08\u5e76\u67e5\u96c6\u7684\u5185\u5bb9\uff09\n{\n    if(f[k]==k)return k;\n    f[k]=gf(f[k]);//\u538b\u7f29\u8def\u5f84\n    return f[k];\n}\n\nvoid un(int b1,int b2)//union\uff08\u5e76\u67e5\u96c6\u7684\u5185\u5bb9\uff09\uff08\u8054\u901ab1\uff0cb2\u6240\u5728\u7684\u8054\u901a\u5757\uff09\n{\n    int fb1=gf(b1);\n    int fb2=gf(b2);\n    f[fb1]=fb2;\n}\n\nint main()\n{\n    cin>>n>>m>>s>>t;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>a[i].x>>a[i].y>>a[i].z;\n    }\n    sort(a+1,a+m+1,comp);//\u4ece\u5c0f\u5230\u5927\n\n    for(int i=1;i<=n;i++)f[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\uff0c\u6bcf\u4e2a\u533a\u81ea\u6210\u4e00\u8054\u901a\u5757\n    \n    for(int i=1;i<=m;i++)\n    {\n        if(gf(a[i].x)!=gf(a[i].y))//\u5982\u679c\u4e0d\u5728\u540c\u96c6\n        {\n            un(a[i].x,a[i].y);\n            total=total>a[i].z? total:a[i].z;\n        }\n        if(gf(s)==gf(t))\n        {\n            break;\n        }\n    }\n    cout<<total;\n    return 0;\n}\n```",
        "postTime": 1512451172,
        "uid": 42196,
        "name": "sshwy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u4e00\u5f00\u59cb\u4ee5\u4e3a\u8981\u7528\u6700\u77ed\u8def\u3002\u4f46\u4ed4\u7ec6\u4e00\u770b\uff0c\u5982\u679c\u7528\u6700\u77ed\u8def\u758f\u677e\u64cd\u4f5c\u7684\u8bdd\uff0c\u6700\u5c0f\u7684\u62e5\u6324\u5ea6\u5f88\u597d\u6c42\uff0c\u4f46\u8fd9\u662f\u6700\u5927\u7684\u62e5\u6324\u5ea6\u7684\u6700\u5c0f\u503c\u554a\u3002\u5982\u679c\u4f60\u6c42\u51fa\u4e86\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u5c0f\u503c\uff0c\u4f60\u600e\u4e48\u77e5\u9053\u4ed6\u662f\u7ecf\u8fc7\u4e86\u54ea\u4e9b\u70b9\u5230\u8fbe\u7684\u90a3\u4e2a\u70b9\u5462\uff0c\u8fd9\u5c31\u5f88\u662f\u7cca\u6d82\u3002\u4e8e\u662f\u6211\u53d7\u5230\u4e86\u6700\u5c0f\u751f\u6210\u6811\u7684\u542f\u53d1\uff0c\u8fd9\u5176\u5b9e\u4e5f\u53ef\u4ee5\u8ba9\u6743\u503c\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u8fde\u63a5\u5404\u4e2a\u70b9\u3002\u6bcf\u8fde\u63a5\u4e00\u6b21\uff0c\u5c31\u770b\u770b\u4ed6\u7684\u6743\u503c\u662f\u5426\u8d85\u8fc7\u5f53\u524d\u6700\u5927\u503c\uff0c\u82e5\u8d85\u8fc7\u5c31\u5c06\u503c\u8d4b\u7ed9\u5b83\u3002\n\n\u53ef\u80fd\u6211\u7684\u524d\u9762\u63cf\u8ff0\u7684\u4e0d\u592a\u6e05\u6670\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n    \n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,m,s,t,maxx=-1;      maxx\u662f\u4ee3\u8868\u6700\u5927\u7684\u503c\nconst int maxn=15000,maxm=35000;\nstruct zhu{              \u4e00\u76f4\u4e0d\u77e5\u9053\u6211\u5728\u5e72\u4ec0\u4e48\u7684\u4eba\u8bf7kruskal\u7b97\u6cd5\u7ec3\u719f\u4e86\n    int u,v,w;\n}e[maxm];\nint fa[maxn];     \u4e0d\u77e5\u9053\u8fd9\u662f\u5e72\u4ec0\u4e48\u7684\u597d\u597d\u5b66\u4e60\u5e76\u67e5\u96c6\nint cmp(const zhu &a,const zhu &b)   \n{\n    return a.w<b.w;                                     \n}\nint find(int k)\n{\n    if(fa[k]==k)return k;\n    else return fa[k]=find(fa[k]);         \n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&s,&t);\n    for(int i=1;i<=m;i++)\n    {\n        int a,b,c;\n        scanf(\"%d%d%d\",&e[i].u,&e[i].v,&e[i].w);\n    }\n    sort(e,e+m+1,cmp);\n    for(int i=1;i<=n;i++)\n    fa[i]=i;\n    for(int i=1;i<=m;i++)\n    {\n        int x=find(e[i].u);\n        int y=find(e[i].v);\n        if(x==y)continue;\n        else{\n            fa[x]=y;\n            if(e[i].w>maxx)maxx=e[i].w;\n            }    \n        find(s);       \u6ce8\u610f\u8fd9\u91cc\u5fc5\u987b\u67e5\u627e\u4e24\u6b21\uff0c\u56e0\u4e3a\u4e0a\u9762\u521a\u521a\u66f4\u65b0\u4e86 fa \uff0c\u5982\u679c\u8fd9\u91cc\u4e0d\u5237\u65b0\u4e00\u6b21\uff0cs\u4e0et\u7684fa\u53ef\u80fd\u6709\u8bef\n        find(t);\n        if(fa[s]==t||fa[s]==fa[t]||s==fa[t])\n        break;                                     \u4e4b\u6240\u4ee5\u6709\u7740\u4e09\u4e2a\uff0c\u662f\u56e0\u4e3a\u8def\u662f\u53cc\u5411\u7684\uff0c\u4e0d\u4e00\u5b9afa\u521a\u597d\u5728t\u8eab\u4e0a\uff0c\u6240\u4ee5\u6709\u4e09\u79cd\u60c5\u51b5\u6765\u9000\u51fa\n    }\n    printf(\"%d\",maxx);\n    return 0;\n}\n```",
        "postTime": 1507858051,
        "uid": 49620,
        "name": "\u859b\u88d5\u9f99",
        "ccfLevel": 6,
        "title": "1396"
    },
    {
        "content": "\u63d0\u4f9b\u4e09\u79cd\u505a\u6cd5\uff1a\n\n1.\u500d\u589elca+\u6700\u5c0f\u751f\u6210\u6811\uff1a\n\n\u57fa\u672c\u4e0a\u540c\u8d27\u8f66\u8fd0\u8f93\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nvoid read(int &y)\n{\n    y=0;char x=getchar();\n    while(x<'0'||x>'9') x=getchar();\n    while(x>='0'&&x<='9')\n    {\n        y=y*10+x-'0';\n        x=getchar();\n    }\n}\nstruct edge\n{\n    int u,v,w;\n}e[50005];\nbool cmp(edge x,edge y)\n{\n    return x.w<y.w;\n}\nint fa[10005][25],maxw[10005][25];\nint f[10005],head[20005],nxt[20005],to[20005],d[20005],dep[10005];\nint n,m,s,t,cnt;\nint find(int x)\n{\n    if(x==f[x]) return x;\n    return f[x]=find(f[x]);\n}\nvoid add(int u,int v,int w)\n{\n    to[cnt]=v;\n    d[cnt]=w;\n    nxt[cnt]=head[u];\n    head[u]=cnt++;\n}\nvoid dfs(int x,int y)\n{\n    for(int i=head[x];i!=-1;i=nxt[i])\n    {\n        if(i!=y)\n        {\n            dep[to[i]]=dep[x]+1;\n            fa[to[i]][0]=x;\n            maxw[to[i]][0]=d[i];\n            dfs(to[i],i^1);\n        }\n    }\n}\nint lca(int x,int y)\n{\n    if(dep[x]>dep[y])\n    {\n        int tmp=x;\n        x=y;\n        y=tmp;\n    }\n    int ans=-1;\n    for(int i=15;i>=0;i--)\n    {\n        if(dep[fa[y][i]]>=dep[x])\n        {\n            ans=max(ans,maxw[y][i]);\n            y=fa[y][i];\n        }\n    }\n    if(x==y) return ans;\n    for(int i=15;i>=0;i--)\n    {\n        if(fa[x][i]!=fa[y][i])\n        {  \n            ans=max(ans,max(maxw[x][i],maxw[y][i]));  \n            x=fa[x][i];\n            y=fa[y][i];\n        }\n    }\n    return ans;\n}\nint main()\n{\n    read(n);read(m);read(s);read(t);\n    for(int i=0;i<m;i++)\n    {\n        read(e[i].u);read(e[i].v);read(e[i].w);\n    }\n    sort(e,e+m,cmp);\n    memset(head,-1,sizeof(head));\n    for(int i=1;i<=n;i++) f[i]=i;\n    for(int i=0;i<m;i++)\n    {\n        if(find(e[i].u)!=find(e[i].v))\n        {\n            add(e[i].u,e[i].v,e[i].w);\n            add(e[i].v,e[i].u,e[i].w);\n            f[find(e[i].u)]=find(e[i].v);\n        }\n    }\n    dep[1]=1,dfs(1,-1);\n    for(int j=1;j<=15;j++)\n    {\n        for(int i=1;i<=n;i++)\n        {\n            fa[i][j]=fa[fa[i][j-1]][j-1];\n            maxw[i][j]=max(maxw[i][j-1],maxw[fa[i][j-1]][j-1]);\n        }\n    }\n    printf(\"%d\",lca(s,t));\n    return 0;\n```\n}2.\u6700\u5c0f\u751f\u6210\u6811+\u66b4\u529b\u516c\u5171\u7956\u5148\uff1a\n\n\u6b64\u9898\u53ea\u6709\u4e00\u7ec4\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u79bb\u7ebf\u7b97\u6cd5\uff0c\u9996\u5148\u6c42\u51fa\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u7136\u540e\u7531s\u8282\u70b9\u66b4\u529b\u5411\u4e0a\u627e\u7236\u4eb2\u8282\u70b9\uff0c\u4e00\u8def\u6807\u8bb0\uff0c\u5230\u8fbe\u6839\u8282\u70b9\u540e\u505c\u6b62\u3002\u5728\u7531t\u8282\u70b9\u5411\u4e0a\u66b4\u529b\u627e\u7236\u4eb2\u8282\u70b9\uff0c\u5230\u8fbe\u6709\u6807\u8bb0\u7684\u70b9\u4e4b\u540e\u505c\u6b62\u3002\n\n\n\u7136\u540e\u4e24\u70b9\u5206\u522b\u518d\u5411\u4e0a\u5230\u516c\u5171\u7956\u5148\uff0c\u66f4\u65b0\u6700\u5927\u503c\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n\n3.\u6700\u5c0f\u751f\u6210\u6811+\u5de7\u5999\u5229\u7528\u5e76\u67e5\u96c6\u6027\u8d28\uff1a\n\n\n\u7ee7\u7eed\u4f7f\u7528\u79bb\u7ebf\u7b97\u6cd5\uff0c\u7136\u540e\u4f7f\u7528\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5f53s\u4e0et\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u65f6\uff0cs\u5230t\u7684\u8def\u5f84\u5c31\u786e\u5b9a\u4e86\uff0c\u6700\u957f\u7684\u8fb9\u5c31\u662f\u5f53\u524d\u8981\u5904\u7406\u7684\u8fb9\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n",
        "postTime": 1506173322,
        "uid": 25426,
        "name": "Excim",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u8fd9\u771f\u662f\u4e00\u9053\u500d\u589eLCA\u7684\u597d\u9898\n\n\u00b7\u00b7\u00b7\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nstruct wn{\n    int x,y,w;\n}e[50005],shu[20005];\nint fa[10005],he[10005],vis[10005],dep[10005],f[10005][20],weight[10005][20],n,m,s,t,q,po=0;\nint cmp(wn x,wn y){\n    return x.w<y.w;\n}\nint find(int x){\n    if(fa[x]==x)return x;\n    fa[x]=find(fa[x]);\n    return fa[x];\n}\nvoid addedge(int x,int y,int w){\n    po++;\n    shu[po].x=y;\n    shu[po].y=w;\n    shu[po].w=he[x];\n    he[x]=po;\n    po++;\n    shu[po].x=x;\n    shu[po].y=w;\n    shu[po].w=he[y];\n    he[y]=po;\n}\nvoid dfs(int x,int faq,int w){\n    dep[x]=dep[faq]+1;\n    f[x][0]=faq;\n    weight[x][0]=w;\n    vis[x]=1;    \n    for(int i=he[x];i!=0;i=shu[i].w){\n        if(!vis[shu[i].x]){\n            dfs(shu[i].x,x,shu[i].y);\n        }\n    }\n}\nvoid csh(){\n    for(int i=1;i<=18;i++){\n        for(int j=1;j<=n;j++){\n            f[j][i]=f[f[j][i-1]][i-1];\n            weight[j][i]=max(weight[j][i-1],weight[f[j][i-1]][i-1]);\n        }\n    }\n}\nvoid hb(int x,int y,int w){\n    int xx=find(x),yy=find(y);\n    if(xx!=yy){\n        fa[xx]=yy;\n        addedge(x,y,w);\n    }\n}\nint lca(int x,int y){\n    if(dep[x]<dep[y])swap(x,y);\n    int minn=0;\n    for(int i=18;i>=0;i--){\n        if(dep[f[x][i]]>=dep[y]){\n            minn=max(weight[x][i],minn);\n            x=f[x][i];    \n        }\n    }\n    if(x==y)return minn;\n    for(int i=18;i>=0;i--){\n        if(f[x][i]!=f[y][i]){\n            minn=max(minn,weight[x][i]);\n            minn=max(minn,weight[y][i]);\n            x=f[x][i];\n            y=f[y][i];            \n        }\n    }\n    minn=max(minn,weight[x][0]);\n    minn=max(minn,weight[y][0]);\n    return minn;\n}\nint main(){\n    scanf(\"%d%d%d%d\",&n,&m,&s,&t);\n    memset(he,0,sizeof(he));\n    for(int i=1;i<=n;i++){\n        fa[i]=i;\n    }\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d%d\",&e[i].x,&e[i].y,&e[i].w);\n    }\n    sort(e+1,e+m+1,cmp);\n    for(int i=1;i<=m;i++){\n        hb(e[i].x,e[i].y,e[i].w);\n    }\n    dep[0]=0;\n    for(int i=1;i<=n;i++){\n        if(!vis[i]){            \n            dfs(i,0,0);\n        }            \n    }\n//    for(int i=1;i<=n;i++)printf(\"%d \",shu[i].x);\n    csh();\n        if(find(s)!=find(t)){\n            printf(\"-1\\n\");\n        }\n        printf(\"%d\\n\",lca(s,t));\n    return 0;\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1477211507,
        "uid": 19241,
        "name": "infinityedge",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u697c\u4e0a\u597d\u591a\u9ad8\u7ea7\u7b97\u6cd5\u2026\u2026\u3002\u3002\n\n\u4e8c\u5206\u4e00\u4e2a\u6700\u5927\u62e5\u6324\u5ea6\n\n\u7136\u540e\u5224\u65ads\u5230t\u7684\u8fde\u901a\u6027\uff08\u6211\u7528\u7684\u662f\u5e7f\u641c\u904d\u5386\uff0c\u6df1\u641c\u4e5f\u53ef\u4ee5\uff09\n\n\u518d\u6ce8\u610f\u4e00\u4e0b\u6570\u7ec4\u4e0a\u754c\uff0c\u65e0\u5411\u56fe\u90bb\u63a5\u8868\u89812m\n\n\u5b8c\u4e86\u3002\n\npascal\uff1a\u5982\u4e0b\u3002\n\n\n```cpp\nvar first,last:array [1..10000] of longint;\nyo,en,next:array [1..40000] of longint;\nn,bs,s,endd,i,x,y,z,top,l,r,m,ans,max,min:longint;\nprocedure add(x,y,z:longint);\nbegin\n  inc(top);\n  if first[x]=0 then first[x]:=top\n  else next[last[x]]:=top;\n  last[x]:=top;\n  en[top]:=y;\n  yo[top]:=z;\nend;//\u90bb\u63a5\u8868\nfunction judge(x:longint):boolean;//\u4e8c\u5206\u7b54\u6848\u7684\u4e3b\u4f53\nvar dl:array [1..10000] of longint;\nb:array [1..10000] of boolean;\ni,h,t:longint;\n procedure push(x:longint);\n begin\n   if b[x] then exit;\n   b[x]:=true;\n   inc(t);\n   dl[t]:=x;\n end;\nbegin\n  fillchar(dl,sizeof(dl),0);\n  fillchar(b,sizeof(b),false);\n  h:=0;\n  t:=1;\n  dl[1]:=s;\n  repeat\n    inc(h);\n    if dl[h]=endd then exit(true);\n    i:=first[dl[h]];\n    while i>0 do\n    begin\n      if yo[i]<=x then push(en[i]);\n      i:=next[i];\n    end;\n  until h=t;\n  exit(false);\nend;\nbegin\n  read(n,bs,s,endd);\n  min:=maxlongint;\n  for i:=1 to bs do\n  begin\n    read(x,y,z);\n    add(x,y,z);\n    add(y,x,z);\n    if z>max then max:=z;\n    if z<min then min:=z;\n  end;\n  l:=min;\n  r:=max;\n  while l<=r do\n  begin\n    m:=(l+r) div 2;\n    if judge(m) then\n    begin\n      ans:=m;\n      r:=m-1;\n    end\n    else l:=m+1;\n  end;\n  //\u4e3b\u7a0b\u5e8f\u4e2d\u7684\u4e8c\u5206\n  write(ans);\nend.\n```",
        "postTime": 1470567930,
        "uid": 13940,
        "name": "pupuvovovovovo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u4e8c\u5206\u7b54\u6848\uff0c\u901a\u8fc7spfa\u9009\u8fb9\uff0c\u51e1\u662f\u5927\u4e8e\u4e8c\u5206\u503c\u7684\u4e00\u5f8b\u4e0d\u9009\uff0c\u6700\u540e\u5224\u65ad\u4eces\u51fa\u53d1\uff0c\u662f\u5426\u80fd\u591f\u5230\u8fbet\u3002\u5c31\u8fd9\u6837\u4e0d\u65ad\u4e8c\u5206\u4e0b\u53bb\u3002\n\n--by uoi \u5927\u4f6c pjx(\u6ce8\uff1a\u6b64\u5904\u7684u\u6307universal)\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<cstring>\nusing namespace std;\nstruct df{\n    int loc,num;\n};\nvector<df>ylx[10005];\nqueue<int>q;\nbool y[10005];\nint n,m,s,t,le,ri,z[10005];\nbool spfa(int v)\n{\n    memset(y,false,sizeof(y));\n    for(int i=1;i<=n;i++)    z[i]=99999999;\n    z[s]=0;\n    y[s]=true;\n    q.push(s);\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        y[x]=false;\n        for(int i=ylx[x].size()-1;i>=0;i--)\n        {\n            if(ylx[x][i].num<=v&&z[ylx[x][i].loc]>z[x]+ylx[x][i].num)\n            {\n                z[ylx[x][i].loc]=z[x]+ylx[x][i].num;\n                if(!y[ylx[x][i].loc])\n                {\n                    y[ylx[x][i].loc]=true;\n                    q.push(ylx[x][i].loc);\n                }\n            }\n        }\n    }\n    if(z[t]<99999999)    return true;\n    else    return false;\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&s,&t);\n    for(int t1,t2,t3,i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&t1,&t2,&t3);\n        df tt;\n        tt.loc=t2;tt.num=t3;ylx[t1].push_back(tt);\n        tt.loc=t1;ylx[t2].push_back(tt);\n    }\n    le=1;ri=10000;\n    while(le<ri)\n    {\n        int mid=(le+ri)/2;\n        if(spfa(mid))    ri=mid;\n        else    le=mid+1;\n    }\n    printf(\"%d\",ri);\n}\n```",
        "postTime": 1469332435,
        "uid": 14390,
        "name": "\u4f3d\u9a6c\u5929\u884c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u561b\u3002\u5176\u5b9e\u8fd9\u9053\u9898\u6ca1\u90a3\u4e48\u590d\u6742\uff0c\u5148\u65e0\u89c6\u80cc\u666f\u7684\u8bf4\u2026\u2026\n\n\n\u5f88\u7b80\u5355\u7684\u4e00\u9053\u5355\u6e90\u6700\u77ed\u8def\u7684\u6539\u677f\u2026\u2026\u597d\u50cf\u5927\u90e8\u5206\u4eba\u7528\u7684SPFA\n\n\n\u53ea\u9700\u8981\u628a\u6c42\u8d39\u7528\u548c\u7684\u90a3\u6bb5\u6539\u4e3a\u6c42\u6700\u5c0f\u5c31\u597d\u4e86\u5566~\n\n\n\u4e0b\u9762\u3002\u3002\u4e00\u90e8\u5206\u7a0b\u5e8f\u3002\n\n\n```delphi\n\nprocedure spfa(s:longint);\nvar i,j,now,sum,point:longint;\nbegin\n  for j := 1 to p do dist[j]:=maxlongint;\n  dist[s]:=0;\n  v[s]:=true;\n  now:=s;\n  head:=0;\n  tail:=1;\n  h1:=0;\n  t1:=1;\n  d[head]:=s;\n\n```\n```delphi\n\n  while h1<t1 do\n    begin\n      now:=d[head];\n      point:=front[now];\n      while point<>-1 do\n        begin\n          if dist[to1[point]]>max(dist[now],vul[point])\n          then\n            begin\n              dist[to1[point]]:=max(dist[now],vul[point]);\n              if not v[to1[point]]\n              then\n                begin\n                  d[tail]:=to1[point];\n                  v[to1[point]]:=true;\n                  tail:=(tail+1) mod 10001; t1:=t1+1;\n                end;\n            end;\n          point:=next[point];\n        end;\n      v[now] := false;\n      head:=(head+1) mod 10001;\n      inc(h1);\n    end;\nend;\n\n```\n\n\n\n\n```delphi\n\n\nvar p,c,s,t,i,x,y,z:longint;\n    a,b:array[1..50001,0..50001] of longint;\n    d:array[0..20001] of longint;\n    v:array[1..10001] of boolean;\n    dist:array[1..10001] of longint;\n    front:array [0..10001] of longint;\n    to1,vul:array [0..40001] of longint;\n    next:array [0..400001] of longint;\n    head,tail,h1,t1:longint;\nfunction min(a,b:longint):longint;\nbegin\n  if a<b then exit(a) else exit(b);\nend;\nfunction max(a,b:longint):longint;\nbegin\n  if a>b then exit(a) else exit(b);\nend;\nprocedure spfa(s:longint);\nvar i,j,now,sum,point:longint;\nbegin\n  for j := 1 to p do dist[j]:=maxlongint;\n  dist[s]:=0;\n  v[s]:=true;\n  now:=s;\n  head:=0;\n  tail:=1;\n  h1:=0;\n  t1:=1;\n  d[head]:=s;\n  while h1<t1 do\n    begin\n      now:=d[head];\n      point:=front[now];\n      while point<>-1 do\n        begin\n          if dist[to1[point]]>max(dist[now],vul[point])\n          then\n            begin\n              dist[to1[point]]:=max(dist[now],vul[point]);\n              if not v[to1[point]]\n              then\n                begin\n                  d[tail]:=to1[point];\n                  v[to1[point]]:=true;\n                  tail:=(tail+1) mod 10001; t1:=t1+1;\n                end;\n            end;\n          point:=next[point];\n        end;\n      v[now] := false;\n      head:=(head+1) mod 10001;\n      inc(h1);\n    end;\nend;\nbegin\n  fillchar(v,sizeof(v),false);\n  readln(p,c,s,t);\n  for i:=0 to 10001 do front[i]:=-1;\n  for i:=1 to c do\n    begin\n      readln(x,y,z);\n      next[i*2-1]:=front[y];\n      vul[i*2-1]:=z;\n      front[y]:=i*2-1;\n      to1[i*2-1]:=x;\n      next[i*2]:=front[x];\n      vul[i*2]:=z;\n      front[x]:=i*2;\n      to1[i*2]:=y;\n    end;\n  spfa(s);\n  writeln(dist[t]);\nend.\n\n\n\n<hr>\n```",
        "postTime": 1375795503,
        "uid": 277,
        "name": "plane",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u4e8c\u5206+\u5e76\u67e5\u96c6\u5224\u65ad\u8054\u901a\u5757\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u4e00\u4e0b\u6700\u5927\u7684\u8fb9\uff0c\u5219\u5c0f\u4e8e\u8fd9\u4e2a\u6700\u5927\u8fb9\u7684\n\n\u8fb9\u90fd\u53ef\u4ee5\u8d70\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u5224\u65ad\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8d77\u70b9\n\n\u548c\u7ec8\u70b9\u662f\u5426\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\u91cc\u5c31\u884c\u4e86\uff1b\u4f7f\u7528\u5e76\u67e5\u96c6\n\n\u6765\u5224\u65ad\uff1b\n\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=1e5+10;\nint n,m,s,t,nl,ans;\nint fa[N],hd[N];\nstruct node\n{\n    int u,v,d,next;\n}edge[N];\nvoid add_edge(int u,int v,int d)\n{\n    edge[++nl].next=hd[u];\n    edge[nl].u=u;edge[nl].v=v;edge[nl].d=d;\n    hd[u]=nl;\n}\nint find(int x)\n{\n    return fa[x]==x?x:fa[x]=find(fa[x]);\n}\nint check(int m)\n{\n    for(int i=1;i<=n;i++)fa[i]=i;     //\u6bcf\u6b21\u91cd\u7f6e\u5e76\u67e5\u96c6\u6570\u7ec4\n    for(int i=1;i<=nl;i++)\n    {\n        if(edge[i].d>m)continue;       //\u5927\u4e8e\u5f53\u524d\u6700\u5927\u8fb9\u5219\u4e0d\u80fd\u8d70\n        int u=edge[i].u,v=edge[i].v;\n        int x=find(u),y=find(v);\n        if(x!=y)\n        {\n            fa[x]=y;\n        }\n    }\n    fa[s]=find(s),fa[t]=find(t);\n    return fa[s]==fa[t];                //s,t\u662f\u5426\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\u91cc\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&s,&t);\n    for(int i=1;i<=m;i++)\n    {\n        int u,v,d;\n        scanf(\"%d%d%d\",&u,&v,&d);\n        add_edge(u,v,d);\n    }\n    int l=0,r=1e5+10,mid;\n    while(r-l>=1)\n    {\n        mid=(l+r)/2;\n        if(check(mid))\n        {\n            ans=mid;\n            r=mid;\n        }\n        else l=mid+1;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1510144045,
        "uid": 34393,
        "name": "cx51y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u7684\u505a\u6cd5\u6709\n\n\u514b\u9c81\u65af\u5361\u5c14 \u500d\u589eLCA dijikstra  \u4e8c\u5206\u7b54\u6848 \u7b49\n\n\u6211\u6765\u4e00\u4e2aspfa\u7684....\n\ndis[i]\u8868\u793ai\u5230s\u7684\u6700\u5927\u8fb9\u7684\u6700\u5c0f\u503c\u3002\u5176\u5b9e\u5c31\u662f\u53d8\u5f62spfa.\n\n\u6838\u5fc3\nif(dis[v]>max(dis[now],edge[i].z))\n\ndis[v]=max(dis[now],edge[i].z)\n\n\u4ee3\u7801\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<queue>\n#include<cstring> \n#include<cstdio>\n#define maxn 10003\nusing namespace std;\nint n,m,s,t,x,y,z,a,sumedge;\nint inq[maxn],dis[maxn],head[maxn];\nqueue<int>q;\nstruct Edge{\n    int x,y,z,nxt;\n    Edge(int x=0,int y=0,int z=0,int nxt=0):\n        x(x),y(y),z(z),nxt(nxt){}\n}edge[maxn<<2];\nvoid add(int x,int y,int z){\n    edge[++sumedge]=Edge(x,y,z,head[x]);\n    head[x]=sumedge;\n}\nvoid spfa(){\n    memset(dis,0x3f,sizeof(dis));\n    dis[s]=0;\n    q.push(s);inq[s]=1;\n    while(!q.empty()){\n        int now=q.front();q.pop();inq[now]=0;\n        for(int i=head[now];i;i=edge[i].nxt){\n            int v=edge[i].y;\n            if(dis[v]>max(dis[now],edge[i].z)){\n                dis[v]=max(dis[now],edge[i].z);\n                if(!inq[v]){\n                    inq[v]=1;\n                    q.push(v); \n                }\n            }\n        }\n    } \n}\nint main(){\n    scanf(\"%d%d%d%d\",&n,&m,&s,&t);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add(x,y,z);add(y,x,z);\n    }\n    spfa();\n    printf(\"%d\\n\",dis[t]);\n    return 0;\n}\n```",
        "postTime": 1503736844,
        "uid": 49431,
        "name": "xun\u85b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    },
    {
        "content": "\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6392\u5e8f\u540e\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u8fb9 \u518d\u4ece\u8fb9\u4e2d\u627e\u6700\u5927\u503c\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\n\n\n\n    \n\n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint n,m,s,t;\nstruct heheda\n{\n    int x,y,z;\n}a[20005];\nint fa[10005]; //\u5e76\u67e5\u96c6 \nint getint()//\u8bfb\u5165\u4f18\u5316 \n{\n    int str=0;\n    char ch;\n    for(ch=getchar();ch<'0' || ch>'9' ; ch=getchar());\n    for(;ch>='0' && ch<='9';ch=getchar())str=10*str+ch-'0';\n    return str;\n}\nbool comp(const heheda &a,const heheda &b)\n{\n    return a.z<b.z;\n}\nint find(int x)\n{\n    int pre=x;\n    while(fa[x]!=x)x=fa[x];//\u627e\u7238\u7238 \n    while(fa[pre]!=pre)//\u8def\u5f84\u538b\u7f29 \n    {\n        fa[pre]=x;\n        pre=fa[pre];\n    }\n    return x;\n}\nint main()\n{\n    int x,y,z;\n    n=getint();\n    m=getint();\n    s=getint();\n    t=getint();\n    for(int i=1;i<=m;i++)\n    {\n        a[i].x=getint();\n        a[i].y=getint();\n        a[i].z=getint();\n    }\n    for(int i=1;i<=n;i++)fa[i]=i;//\u521d\u59cb\u5316 \n    sort(a+1,a+m+1,comp);//\u6392\u5e8f \n    int k=0;\n    int ans=0;\n    for(int i=1;i<=m;i++)\n    {\n        int x1=find(a[i].x);int x2=find(a[i].y);\n        ans=max(ans,a[i].z);\n        if(x1==x2)continue;//\u82e5\u5df2\u7ecf\u8fde\u8d77\u6765\u4e86 \u5c31\u7ee7\u7eed \n        fa[x2]=x1;//\u8fde\u63a5 \n        k++;\n        if(k==n-1)\n        break;\n        if(find(s)==find(t))break;//s\u3001t\u76f8\u8fde \u9000\u51fa \n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1477811384,
        "uid": 22873,
        "name": "Hank",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1396 \u3010\u8425\u6551\u3011"
    }
]