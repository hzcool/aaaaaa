[
    {
        "content": "#### \u8fd9\u5e94\u8be5\u662f\u6700\u6e05\u6670\u7b80\u6d01\u7684\u4e00\u7bc7\u4e86\u3002\u3002\u3002\n\n### \u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u79cd\u6734\u7d20\u7684\u505a\u6cd5\uff0c\u5c31\u662f\u679a\u4e3en\u4e2a\u70b9\u7684\u5168\u6392\u5217\uff0c\u8ba1\u7b97\u8def\u5f84\u957f\u5ea6\uff0c\u53d6\u6700\u5c0f\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n*n!)\uff0c\u53ef\u4ee5\u4f7f\u7528\u72b6\u6001\u538b\u7f29dp\u5c06\u5176\u4f18\u5316\u5230O(n2*2n)\n\n### \u5728\u4efb\u610f\u65f6\u523b\uff0c\u8981\u8868\u793a\u51fa\u54ea\u4e9b\u70b9\u88ab\u8d70\u8fc7\uff0c\u54ea\u4e9b\u70b9\u6ca1\u6709\u88ab\u8d70\u8fc7\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2an\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u82e5\u5176\u7b2ci\u4f4d(0<=i<n)\u4e3a1\uff0c\u5219\u8868\u793a\u7b2ci\u4e2a\u70b9\u5df2\u7ecf\u88ab\u7ecf\u8fc7\uff0c\u53cd\u4e4b\u672a\u88ab\u7ecf\u8fc7\u3002\u5728\u4efb\u610f\u65f6\u523b\u8fd8\u9700\u8981\u77e5\u9053\u5f53\u524d\u6240\u5904\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u4f7f\u7528Fi,j\u8868\u793a\u70b9\u88ab\u7ecf\u8fc7\u7684\u72b6\u6001\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u4e3ai\uff0c\u4e14\u76ee\u524d\u5904\u4e8e\u70b9j\u65f6\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n### \u521d\u59cb\u503cF[1,0]\uff0c\u5373\u53ea\u7ecf\u8fc7\u4e86\u70b90\uff08i\u53ea\u6709\u7b2c0\u4f4d\u662f1\uff09\uff0c\u76ee\u524d\u5904\u4e8e\u8d77\u70b90\uff0c\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u4e3a0\u3002\u65b9\u4fbf\u8d77\u89c1\uff0c\u5c06F\u7684\u5176\u4ed6\u503c\u8bbe\u4e3a\u6781\u5927\u503c\uff0c\u76ee\u6807\u72b6\u6001\u4e3aF[(1<<n)-1,n-1]\uff0c\u5373\u7ecf\u8fc7\u6240\u6709\u70b9\uff08i\u7684\u6240\u6709\u4f4d\u90fd\u662f1\uff09\uff0c\u5904\u4e8e\u7ec8\u70b9n-1\u7684\u6700\u77ed\u8def\u3002\n\n### \u5728\u4efb\u610f\u65f6\u523b\uff0c\u6709\u516c\u5f0fF[i,j]=min{F[i ^ (1<<j),k]+weight(k,j)},0<=k<n\u5e76\u4e14((i>>j)&1)=1\uff0c\u5373\u5f53\u524d\u65f6\u523b\u201c\u88ab\u7ecf\u8fc7\u7684\u70b9\u7684\u72b6\u6001\u201d\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u4e3ai\uff0c\u5904\u4e8e\u70b9j\u3002\u56e0\u4e3aj\u53ea\u80fd\u6070\u88ab\u7ecf\u8fc71\u6b21\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f\u521a\u521a\u7ecf\u8fc7\u7684\uff0c\u6545\u5728\u4e0a\u4e00\u65f6\u523b\u201c\u88ab\u7ecf\u8fc7\u7684\u70b9\u7684\u72b6\u6001\u201d\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u7684\u7b2cj\u4f4d\u5e94\u8be5\u8d4b\u503c\u4e3a0\uff0c\u4e5f\u5c31\u662fi(1<<j)\u3002\u53e6\u5916\uff0c\u4e0a\u4e00\u65f6\u523b\u6240\u5904\u7684\u4f4d\u7f6e\u53ef\u80fd\u662fi(1<<j)\u4e2d\u4efb\u610f\u4e00\u4e2a\u662f1\u7684\u4f4d\u7f6ek\uff0c\u4ecek\u8d70\u5230j\u9700\u8981weight(k,j)\uff0c\u53ef\u4ee5\u8003\u8651\u53d6\u6240\u6709\u8fd9\u6837\u7684k\u53d6\u6700\u5c0f\u503c\u3002\n\n\n------------\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint f[1<<20][20],w[20][20],n;\nint main()\n{\n\tmemset(f,0x3f,sizeof f);\n\tf[1][0]=0;\n\tcin>>n;\n\tfor(int i=0;i<n;++i)\n\t\tfor(int j=0;j<n;++j)\n\t\t\tscanf(\"%d\",&w[i][j]);\n\tfor(int i=1;i<(1<<n);i+=2) \n\t{\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tif(!((i >> j) & 1)) continue; //\u5f53\u524di\u72b6\u6001\u4e0b\uff0c\u6839\u672c\u6ca1\u6709\u8d70\u8fc7j\n\t\t\tfor(int k=0;k<n;k++)\n\t\t\t{\n\t\t\t\tif(j==k) continue;       //\u4ece\u81ea\u5df1\u5230\u81ea\u5df1\uff1f\u3002\u3002\u3002 \n\t\t\t\tif(!(i>>k &1)) continue; //\u4e0a\u4e00\u6b21\u72b6\u6001\uff0c\u6839\u672c\u6ca1\u6709\u8d70\u8fc7k\uff0c\u5c31\u66f4\u4e0d\u53ef\u80fd\u4ecek\u8f6c\u79fb\u5230j\n\t\t\t\tf[i][j]=min(f[i][j],f[i^(1<<j)][k]+w[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\tint minn=8848888;\n\tfor(int i=0;i<=n-1;++i)\n\t{\n\t\tminn=min(minn,f[(1<<n)-1][i]+w[i][0]);\n\t}\n\tcout<<minn;//\u6240\u6709\u70b9\u8d70\u5b8c\uff0c\u6700\u540e\u505c\u5728n-1\u70b9\u4e0a\n}\n```",
        "postTime": 1542514849,
        "uid": 117409,
        "name": "logicYZL",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "TSP\u95ee\u9898\uff0c\u4e5f\u7b97\u662f\u72b6\u538bDP\u7ecf\u5178\u5427\n\n**\u6211\u4eec\u4ee5\u4e00\u4e32\u4e8c\u8fdb\u5236\u6570\u8868\u793a\u6751\u5e84\u7684\u96c6\u5408\uff08\u72b6\u6001\uff09**\n\n**1\u8868\u793a\u8be5\u6751\u5e84\u8bbf\u95ee\u8fc7\uff0c0\u8868\u793a\u6ca1\u6709**\n\n$dp[i][j]$\u8868\u793a\n**\u4ece\u8d77\u70b9\u5230\u7b2cj\u53f7\u70b9**\n\u4e14\u5230\u8fbe\u65f6**\u72b6\u6001\u6070\u597d\u4e3ai\u7684\u6700\u77ed\u8def**\n\n\u5219\u6700\u540e\u7b54\u6848\u5c31\u662f$min(dp[(1<< n) -1][i] + map[i][1])$ $(2<=i<=n)$\n\n\u5176\u4e2dmap\u6570\u7ec4\u662f\u9898\u76ee\u7ed9\u5b9a\u7684\u5404\u6751\u5e84\u95f4\u8ddd\u79bb\n\n\u800c\u6c42\u53d6dp\u6570\u7ec4\u7684\u65b9\u6cd5\n\u6211\u4eec\u53ef\u4ee5\u501f\u9274**Floyd**\u7684\u601d\u60f3\n\n \u5177\u4f53\u4ee3\u7801\uff1a\n\n```\nfor(int i=0;i<=(1<<n)-1;++i)\nfor(int j=1;j<=n;++j)\nif( ( (1<<j-1)&i )==0 )\nfor(int k=1;k<=n;++k)\nif( ( (1<<k-1)&i) )\ndp[i|(1<<j-1)][j]=min(dp[i|(1<<j-1)][j],dp[i][k] + rem[k][j]);\n\n```\n\u5982\u4f55\u89e3\u91ca\u5462\n\n\u7b2c\u4e00\u5c42\u5faa\u73af i **\u679a\u4e3e\u6bcf\u4e2a\u72b6\u6001**\n\n\u7b2c\u4e8c\u5c42\u5faa\u73af j **\u679a\u4e3e\u4e0b\u4e00\u6b65\u5230\u8fbe\u7684\u70b9**\n\nif( !( (1 << j-1) & i) ) \u8fd9\u53e5**\u5224\u65ad j \u662f\u5426\u5df2\u8bbf\u95ee**\n\n**1\u5de6\u79fbj-1\u4f4d\uff0c\u5219\u6b64\u65f6\u53ea\u6709\u7b2cj\u4f4d\u662f1**\n\n**\u82e5\u72b6\u6001 i \u7684\u7b2c j \u4f4d\u4e3a1\uff0c\u5219&\u4e0e\u8fd0\u7b97\u8fd4\u56de1\uff0c\u8868\u793a\u5df2\u8bbf\u95ee\uff0c\u5426\u5219\u6ca1\u8bbf\u95ee**\n\n\u7b2c\u4e09\u5c42\u5faa\u73af**\u679a\u4e3e\u4e2d\u4ecb\u70b9k**\uff0c\n\u5176\u4e2dif\u8bed\u53e5\u5224\u65ad\u540c\u4e0a\n\n$dp[i|(1<<j-1)][j]=min(dp[i|(1<<j-1)][j],dp[i][k] + rem[k][j]);$\n\n$i|(1<<j-1)$ \u5c06\u72b6\u6001$i$\u7684\u7b2c$j$\u4e3a\u7f6e\u4e3a1\u5f97\u5230**\u4e0b\u4e00\u6b65\u7684\u72b6\u6001**\n\n$dp[i][k] + map[k][j]$\u8868\u793a\u5728\u5f53\u524d\u72b6\u6001i\u4e2d\u5bfb\u627e\u4e2d\u4ecb\u70b9\u68c0\u67e5\u6700\u77ed\u8def\u662f\u5426\u53ef\u4ee5\u66f4\u65b0\n\n\n```\n//niiick\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\n\nint read()\n{\n    int f=1,x=0;\n    char ss=getchar();\n    while(ss<'0'||ss>'9'){if(ss=='-')f=-1;ss=getchar();}\n    while(ss>='0'&&ss<='9'){x=x*10+ss-'0';ss=getchar();}\n    return f*x;\n}\n\nconst int maxn=1100010;\nint n,ans=2e9;\nint dp[maxn][25];\nint rem[25][25];\n\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=n;++j)\n    rem[i][j]=read();\n\n    memset(dp,67,sizeof(dp));\n    dp[1][1]=0;//\u72b6\u60011\u8868\u793a\u6b64\u65f6\u53ea\u67091\u53f7\u70b9\u8bbf\u95ee\u8fc7\n\n    for(int i=0;i<=(1<<n)-1;++i)//dp\u8fc7\u7a0b\u89e3\u91ca\u5982\u4e0a\n    for(int j=1;j<=n;++j)\n    if( ( (1<<j-1)&i )==0 )\n    for(int k=1;k<=n;++k)\n    if( ( (1<<k-1)&i) )\n    dp[i|(1<<j-1)][j]=min(dp[i|(1<<j-1)][j],dp[i][k] + rem[k][j]);\n\n    for(int i=2;i<=n;i++)//\u6700\u540e\u4ece\u72b6\u6001(1<<n)-1\uff08\u4e8c\u8fdb\u5236\u5168\u4e3a1\uff09\u4e2d\u5bfb\u627e\u52301\u6700\u77ed\u7684\u70b9\n    ans=min(ans,dp[(1<<n)-1][i] + rem[i][1]);\n\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\nn<=20\u7684\u6570\u636e\u8303\u56f4\u5728\u72b6\u538b\u9898\u4e2d\u7b97\u662f\u5f00\u5230\u6781\u9650\u4e86\uff0c\u849f\u84bb\u62c5\u5fc3\u5361\u5e38\u6240\u4ee5\u5f00\u4e86O2\uff0c\u6700\u5927\u7684\u70b9\u8dd1\u4e86541ms\uff0c\u76ee\u6d4b\u4e0d\u5f00O2\u4e5f\u662f\u80fd\u8fc7\u7684\n**********************\n#### 9.15\u2014\u2014Update\n\u518d\u63d0\u4f9b\u4e00\u79cd**\u72b6\u538b\u641c\u7d22**\u7684\u601d\u8def\uff0c~~\u867d\u7136\u8bd5\u4e86\u597d\u51e0\u6b21\u90fd\u5361\u4e0d\u8fc7\u6700\u540e\u4e00\u4e2a\u70b9~~\uff0c\u6240\u4ee5\u4ec5\u4f9b\u53c2\u8003\u5b66\u4e60\u5427\uff0c\u56e0\u4e3a\u8fd9\u79cd\u601d\u8def\u4e5f\u633a\u5e38\u7528\u7684\n\ndp\u6570\u7ec4\u542b\u4e49\u4f9d\u7136\u540c\u4e0a\uff0c\n\u521d\u59cb$dp[1][1]=0$\n\n\u641c\u7d22\u5177\u4f53\u4ee3\u7801\uff0c\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\n```cpp\nvoid dfs(int x,int u)//x\u662f\u5f53\u524d\u72b6\u6001\uff0cu\u662f\u5f53\u524d\u5230\u8fbe\u7684\u7ed3\u70b9\n{\n    for(int i=1;i<=n;++i)\n    if(((1<<i-1)&x)==0)//\u679a\u4e3e\u8fd8\u672a\u5230\u8fbe\u7684\u70b9\n    if(dp[x|(1<<i-1)][i]>dp[x][u]+rem[u][i])//\u5982\u679c\u53ef\u4ee5\u66f4\u65b0\u5c31\u7ee7\u7eed\u641c\u7d22\n    {\n        dp[x|(1<<i-1)][i]=dp[x][u]+rem[u][i];\n        dfs(x|(1<<i-1),i);\n    }\n}\n```\n\u6700\u7ec8\u7b54\u6848\u5224\u65ad\u65b9\u6cd5\u4e0e\u4e0a\u8ff0DP\u76f8\u540c\n\n~~\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u8279\u4e0d\u8fc7\u6b64\u9898~~,\u4f46\u5efa\u8bae\u8981\u7406\u89e3\u8fd9\u79cd\u601d\u8def\n```cpp\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\ntypedef double dd;\n\nint read()\n{\n    int f=1,x=0;\n    char ss=getchar();\n    while(ss<'0'||ss>'9'){if(ss=='-')f=-1;ss=getchar();}\n    while(ss>='0'&&ss<='9'){x=x*10+ss-'0';ss=getchar();}\n    return f*x;\n}\n\nconst int maxn=1050000;\nint n,ans=2e9;\nint rem[22][22],dp[maxn][22];\n\nvoid dfs(int x,int u)\n{\n    for(int i=1;i<=n;++i)\n    if(((1<<i-1)&x)==0)\n    if(dp[x|(1<<i-1)][i]>dp[x][u]+rem[u][i])\n    {\n        dp[x|(1<<i-1)][i]=dp[x][u]+rem[u][i];\n        dfs(x|(1<<i-1),i);\n    }\n}\n\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=n;++j)\n    rem[i][j]=read();\n    \n    memset(dp,67,sizeof(dp)); dp[1][1]=0;\n    dfs(1,1);\n    \n    for(int i=1;i<=n;++i) \n    ans=min(ans,dp[(1<<n)-1][i]+rem[i][1]);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1519191945,
        "uid": 60885,
        "name": "niiick",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "\u6b64\u9898\u70b9\u6570\u8f83\u5927\uff0c\u72b6\u6001\u538b\u7f29\u52a8\u6001\u89c4\u5212\u96be\u4ee5\u901a\u8fc7\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u8fd1\u4f3c\u7b97\u6cd5\n\n\u4f46\u662f\u6a21\u62df\u9000\u706b\u6b63\u786e\u7387\u4f4e\u4e0b\uff0c\u4e8e\u662f\u53ef\u4ee5\u8bd5\u8bd5\u667a\u80fd\u7b97\u6cd5\uff1a\n\n# \u8681\u7fa4\u7b97\u6cd5\n\n\u8681\u7fa4\u7b97\u6cd5\uff08**A**nt**C**olony**O**ptimization,**ACO**\uff09\uff0c\u662f\u4e00\u79cd\u7528\u6765\u5728\u56fe\u4e2d\u5bfb\u627e\u4f18\u5316\u8def\u5f84\u7684\u673a\u7387\u578b\u7b97\u6cd5\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u8681\u7fa4\u7b97\u6cd5\u7684\u6f14\u793a\uff1a[Github\u4ed3\u5e93](https://github.com/BreezeDust/AlgorithmsLab/tree/master/heuristic/ACO)\n\n\u5b83\u7684\u7075\u611f\u6765\u6e90\u4e8e\u8681\u7fa4\u5bfb\u627e\u98df\u7269\u7684\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u5f80\u5f80\u4e00\u53ea\u8682\u8681\u5e76\u6ca1\u6709\u592a\u591a\u201c\u667a\u80fd\u201d\u7684\u8868\u73b0\uff0c\u800c\u8681\u7fa4\u5f80\u5f80\u6709\u201c\u667a\u80fd\u201d\u7684\u52a8\u4f5c\uff0c\u6bd4\u5982\u5927\u90e8\u5206\u90fd\u8d8b\u5411\u4e8e\u98df\u7269\n\n\u8fd9\u662f\u56e0\u4e3a\u5b83\u4eec\u5728\u79fb\u52a8\u7684\u8def\u5f84\u4e0a\u4f1a\u7559\u4e0b\u201c\u4fe1\u606f\u7d20\u201d\uff0c\u5b83\u4eec\u4f1a\u66f4\u5927\u6982\u7387\u6cbf\u7740\u4fe1\u606f\u7d20\u66f4\u6d53\u7684\u8def\u5f84\u884c\u8d70\n\n\u800c\u8def\u5f84\u8d8a\u77ed\uff0c\u4fe1\u606f\u7d20\u5c31\u4f1a\u8d8a\u6d53\n\n\u8fd9\u5f88\u7b26\u5408TSP\u95ee\u9898\u7684\u8981\u6c42\n\n\u8681\u7fa4\u7b97\u6cd5\u6d41\u7a0b\u5927\u6982\u5982\u4e0b\uff1a\n\n1. \u521d\u59cb\u5316\u7b97\u6cd5\n2. \u6d3e\u51fa\u4e00\u53ea\u8682\u8681\uff0c\u968f\u673a\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8682\u8681\u7684\u8d77\u70b9\n3. \u5bf9\u4e8e\u8682\u8681\u5f53\u524d\u6240\u5728\u7684\u70b9\uff0c\u6839\u636e\u6240\u6709\u540e\u7ee7\u8fb9\u7684\u4fe1\u606f\u7d20\u6d53\u5ea6\u4ee5\u53ca\u957f\u5ea6\u6839\u636e\u516c\u5f0f\u8ba1\u7b97\u51fa\u8bbf\u95ee\u6bcf\u4e2a\u540e\u7ee7\u8282\u70b9\u7684\u6982\u7387\n4. \u7528\u8f6e\u76d8\u6cd5\u968f\u673a\u51fa\u4e0b\u4e00\u6b65\u8d70\u5230\u54ea\u4e2a\u8282\u70b9\n5. \u91cd\u590d3,4\u6b65\uff0c\u76f4\u5230\u6240\u6709\u8282\u70b9\u90fd\u8bbf\u95ee\u4e86\u4e00\u6b21\n6. \u8ba1\u7b97\u56de\u8def\u957f\u5ea6\uff0c\u8ba1\u7b97\u7ecf\u8fc7\u7684\u8fb9\u7684\u4fe1\u606f\u7d20\u589e\u52a0\u91cf\n7. \u6240\u6709\u8fb9\u4e0a\u7684\u4fe1\u606f\u7d20\u90fd\u4f1a\u84b8\u53d1\u4e00\u5b9a\u6bd4\u4f8b\u4f7f\u7b97\u6cd5\u6536\u655b\uff0c\u589e\u52a0\u7ecf\u8fc7\u7684\u8fb9\u7684\u4fe1\u606f\u7d20\n8. \u56de\u5230\u7b2c2\u6b65\uff0c\u8fdb\u884c\u4e0b\u4e00\u8f6e\u8fed\u4ee3\n\n\u5f53\u7136\u7b2c\u4e8c\u6b65\u53ea\u6d3e\u51fa\u4e00\u53ea\u8682\u8681\u6b63\u786e\u7387\u662f\u5f88\u4f4e\u7684\uff0c\u4e00\u822c\u8981\u6d3e\u51fa\u8282\u70b9\u6570\u6570\u500d\u7684\u8682\u8681\uff0c\u7cbe\u5ea6\u8981\u6c42\u8d8a\u9ad8\u5c31\u8981\u6d3e\u51fa\u66f4\u591a\u8682\u8681\n\n\u9996\u5148\u8bb2\u4e00\u4e0b\u600e\u4e48\u8ba1\u7b97\u540e\u7ee7\u8282\u70b9\u8bbf\u95ee\u6982\u7387\n\n\u6709\u8fd9\u4e48\u51e0\u4e2a\u57fa\u672c\u7684\u7b97\u6cd5\u53c2\u6570\uff1a\n\n+ $\\alpha$\uff0c\u8868\u793a**\u4fe1\u606f\u7d20\u91cd\u8981\u7a0b\u5ea6**\n+ $\\beta$\uff0c\u8868\u793a**\u80fd\u89c1\u5ea6\u91cd\u8981\u7a0b\u5ea6**\uff0c\u80fd\u89c1\u5ea6\u6307\u7684\u662f\u8fb9\u957f\u7684\u5012\u6570\n+ $\\rho$\uff0c\u84b8\u53d1\u7387\n\n\u82e5\u5f53\u524d\u7b2c$k$\u4e2a\u8682\u8681\u5728\u70b9$x$\uff0c$x, y$\u4e4b\u95f4\u7684\u4fe1\u606f\u7d20\u6d53\u5ea6\u4e3a$\\tau _ {xy}$\uff0c$x, y$\u4e4b\u95f4\u7684\u80fd\u89c1\u5ea6\u4e3a$\\eta _ {xy}$\uff0c\u4e0e$x$\u76f8\u8fde\u4e14\u672a\u8bbf\u95ee\u7684\u96c6\u5408\u4e3a$\\mathrm {allowed} _ x$\uff0c\u90a3\u4e48\u8bbf\u95ee\u63a5\u4e0b\u6765$y$\u7684\u6982\u7387\u4e3a\uff1a\n\n$$p _ {xy} ^ {k} = {\\frac {(\\tau _ {xy}^{\\alpha })(\\eta _ {xy}^{\\beta })}{\\sum _ {z\\in \\mathrm {allowed} _ {x}}(\\tau _ {xz}^{\\alpha })(\\eta _ {xz}^{\\beta })}}$$\n\n\u516c\u5f0f\u4e2d\u5206\u5b50\u662f\u4fe1\u606f\u7d20\u6d53\u5ea6\u7684$\\alpha$\u6b21\u65b9\u4e58\u4ee5\u80fd\u89c1\u5ea6\u7684$\\beta$\u6b21\u65b9\n\n\u5206\u6bcd\u5c31\u662f\u6240\u6709\u5206\u5b50\u4e4b\u548c\n\n\u7136\u540e\u518d`rand`\u4e00\u4e2a$[0, 1]$\u4e4b\u95f4\u7684\u968f\u673a\u6570\uff0c\u5c31\u80fd\u9009\u51fa\u540e\u7ee7\u8282\u70b9\u4e86\n\n\uff08\u5982\u679c\u6240\u6709\u8fb9\u7684\u6d53\u5ea6\u90fd\u4e3a0\uff0c\u5c31\u968f\u4fbf\u9009\u4e00\u4e2a\u4e86\uff09\n\n\u53ef\u4ee5\u53d1\u73b0$\\alpha$\u7684\u53d6\u503c\u8d8a\u5927\uff0c\u4fe1\u606f\u7d20\u5360\u6bd4\u8d8a\u5927\uff1b$\\beta$\u7684\u53d6\u503c\u8d8a\u5927\uff0c\u80fd\u89c1\u5ea6\u5360\u6bd4\u8d8a\u5927\n\n\u8fd9\u4e2a\u503c\u4e00\u822c\u5c31\u53d6$\\alpha = \\beta = 1$\u6216\u8005$\\alpha = 1, \\beta = 2$\uff0c\u9700\u8981\u7384\u5b66\u8c03\u53c2\n\n\u5173\u4e8e\u4fe1\u606f\u7d20\u7684\u66f4\u65b0\uff0c\u9996\u5148\u662f\u521d\u59cb\u5316\u7b97\u6cd5\u7684\u65f6\u5019\u9700\u8981\u8bbe\u5b9a\u4e00\u4e2a\u521d\u59cb\u4fe1\u606f\u7d20\u6d53\u5ea6\uff0c\u8fd9\u4e2a\u6d53\u5ea6\u592a\u5927\u4f1a\u5bfc\u81f4\u65b0\u589e\u7684\u4fe1\u606f\u7d20\u6ca1\u4ec0\u4e48\u7528\uff0c\u592a\u5c0f\u4f1a\u5bfc\u81f4\u8fc7\u5feb\u7ed3\u675f\u7b97\u6cd5\uff0c\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\u3002\n\n\u8fd9\u4e2a\u503c\u53ef\u4ee5\u5148\u8dd1\u4e00\u904d\u8d2a\u5fc3\u7b97\u51fa\u4e00\u4e2a\u7b54\u6848\uff0c\u7136\u540e\u53c2\u7167\u8fd9\u4e2a\u7b54\u6848\u8bbe\u5b9a\n\n\u600e\u4e48\u8bbe\u5b9a\u5462\uff1f\u6839\u636e\u8def\u5f84\u8d8a\u957f\u4fe1\u606f\u7d20\u6d53\u5ea6\u8d8a\u4f4e\u7684\u89c4\u5219\uff0c\u67d0\u53ea\u8682\u8681\u8d70\u8fc7\u7684\u56de\u8def\u957f\u5ea6\u4e3a$length$\u7684\u8bdd\uff0c\u90a3\u4e48\u5b83\u5bf9\u8d70\u8fc7\u7684\u8def\u5f84\u7684\u4fe1\u606f\u7d20\u6d53\u5ea6\u7684\u8d21\u732e\u4e3a$\\frac 1 {length}$\n\n\u56e0\u6b64\u521d\u59cb\u6d53\u5ea6\u53ef\u4ee5\u8bbe\u5b9a\u4e3a$\\frac M {length}$\uff0c\u5176\u4e2d$M$\u8868\u793a\u6bcf\u6279\u8682\u8681\u4e2a\u6570\n\n\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u89c4\u5219\uff0c\u6bcf\u6279\u8682\u8681\u8d70\u8fc7\u4ee5\u540e\u6bcf\u6761\u8fb9\u7684\u4fe1\u606f\u7d20\u589e\u52a0\u91cf\u4e5f\u662f\u80fd\u7b97\u51fa\u6765\u7684\n\n\u4e3a\u4e86\u7cbe\u5ea6\u53ef\u4ee5\u4f7f\u6bcf\u6b21\u589e\u52a0\u7684\u4fe1\u606f\u6d53\u5ea6\u4e58\u4e0a\u4e00\u4e2a\u5e38\u6570\n\n\u6ce8\u610f\u662f\uff1a\n\n+ $M$\u53ea\u8682\u8681\u90fd\u8dd1\u4e00\u904d\uff0c\u5e76\u8bb0\u5f55\u6bcf\u6761\u8fb9\u7684\u4fe1\u606f\u7d20\u589e\u91cf\uff0c\u4f46\u5e76\u4e0d\u52a0\u4e0a\u53bb\n+ \u6240\u6709\u8682\u8681\u90fd\u8dd1\u5b8c\u540e\uff0c\u6bcf\u6761\u8fb9\u90fd\u84b8\u53d1\u4e00\u5b9a\u6bd4\u4f8b\n+ \u84b8\u53d1\u5b8c\u540e\u518d\u589e\u52a0\n\n\u8fd9\u4e2a\u84b8\u53d1\u7387$\\rho$\u4e00\u822c\u662f\u53d6$50\\%$\u5230$80\\%$\uff0c\u84b8\u53d1\u6bd4\u4f8b\u8d8a\u5927\u6536\u655b\u8d8a\u5feb\n\n\u6bcf\u6b21\u628a\u6bcf\u6761\u8fb9\u7684\u4fe1\u606f\u7d20\u6d53\u5ea6\u90fd\u4e58\u4ee5$1 - \\rho$\uff0c\u5c31\u80fd\u9010\u6e10\u8ba9\u8bbf\u95ee\u9891\u7387\u9ad8\u7684\u8fb9\u7684\u6d53\u5ea6\u4e0e\u5176\u4ed6\u8fb9\u7684\u6d53\u5ea6\u5dee\u66f4\u5927\uff0c\u6700\u540e\u5176\u4ed6\u8fb9\u7684\u6d53\u5ea6\u4e00\u822c\u4f1a\u964d\u4e3a0\n\n\u4e00\u822c\u8fed\u4ee3\u6b21\u6570\u5c31\u662f$500$\u5230$1000$\u6b21\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u5199\u51fa\u6765\u4e86\n\n\u8c03\u53c2\u5fc3\u7d2f\u554a.jpg\n\n```cpp\n#include <bits/stdc++.h>\n\n#define NS (25)\n#define eps (1e-10)\n#define M (80)\n#define rho (0.5)\n#define alp (1)\n#define bet (1)\n#define Q (100)\n#define Rand() ((double)rand() / RAND_MAX)\n\nusing namespace std;\n\ntemplate<typename _Tp> inline void IN(_Tp& dig)\n{\n\tchar c; bool flag = 0; dig = 0;\n\twhile (c = getchar(), !isdigit(c)) if (c == '-') flag = 1;\n\twhile (isdigit(c)) dig = dig * 10 + c - '0', c = getchar();\n\tif (flag) dig = -dig;\n}\n\nint n, dis[NS][NS], path[NS], ans;\n\nbool book[NS];\n\ndouble info[NS][NS], dt[NS][NS], p[NS];\n\nvoid init()\n{\n\tint a = 1, len = 0;\n\tbook[1] = 1;\n\tfor (int c = 1; c < n; c += 1)\n\t{\n\t\tint mn = INT_MAX, nxt = 0;\n\t\tfor (int i = 1; i <= n; i += 1)\n\t\t\tif (!book[i] && dis[a][i] < mn)\n\t\t\t\tmn = dis[a][i], nxt = i;\n\t\tlen += dis[a][nxt], a = nxt, book[a] = 1;\n\t}\n\tlen += dis[a][1], ans = len;\n\tfor (int i = 1; i <= n; i += 1)\n\t\tfor (int j = 1; j <= n; j += 1)\n\t\t\tinfo[i][j] = (double)Q * M / len;\n}\n\ninline double Pow(double a, int b)\n{\n\tdouble res = 1;\n\tfor (int i = 1; i <= b; i += 1) res *= a;\n\treturn res;\n}\n\nvoid run()\n{\n\tint a = rand() % n + 1, s = a, len = 0;\n\tmemset(book + 1, 0, sizeof(bool) * n), book[a] = 1;\n\tfor (int c = 1; c < n; c += 1)\n\t{\n\t\tdouble tot = 0;\n\t\tfor (int i = 1; i <= n; i += 1)\n\t\t\tif (book[i]) p[i] = 0;\n\t\t\telse\n\t\t\t{\n\t\t\t\tp[i] = Pow(info[a][i], alp) / Pow(dis[a][i], bet);\n\t\t\t\ttot += p[i];\n\t\t\t}\n\t\tif (tot < eps) return;\n\t\tfor (int i = 1; i <= n; i += 1) p[i] /= tot;\n\t\tdouble r = Rand();\n\t\tfor (int i = 1; i <= n; r -= p[i], i += 1)\n\t\t\tif (!book[i] && r <= p[i])\n\t\t\t{\n\t\t\t\tlen += dis[a][i], a = i, book[a] = 1, path[c] = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\tlen += dis[a][s], dt[a][s] += (double)Q / len, ans = min(ans, len);\n\tfor (int i = 1; i < n; i += 1)\n\t\tdt[s][path[i]] += (double)Q / len, s = path[i];\n}\n\nint main(int argc, char const* argv[])\n{\n\tIN(n), srand(19260817);\n\tfor (int i = 1; i <= n; i += 1)\n\t\tfor (int j = 1; j <= n; j += 1)\n\t\t\tIN(dis[i][j]);\n\tinit();\n\tfor (int c = 1; c <= 700; c += 1)\n\t{\n\t\tfor (int i = 1; i <= n; i += 1)\n\t\t\tfor (int j = 1; j <= n; j += 1)\n\t\t\t\tdt[i][j] = 0;\n\t\tfor (int j = 1; j <= M; j += 1) run();\n\t\tfor (int i = 1; i <= n; i += 1)\n\t\t\tfor (int j = 1; j <= n; j += 1)\n\t\t\t\tinfo[i][j] = info[i][j] * rho + dt[i][j];\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n\n~~\uff08\u4f46\u662f\u597d\u50cf\u5f88\u591aDfs\u526a\u679d\u8fc7\u4e86\uff0c\u8fd8\u633a\u5feb\u7684\uff09~~",
        "postTime": 1550378382,
        "uid": 174524,
        "name": "Remmina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "\u6709\u4e00\u5929\u4e00\u4e2a\u849f\u84bb\uff0c\u70b9\u4e86\u641c\u7d22\u6807\u7b7e\u3002\u3002\u3002\n\n\u8fdb\u5165\u552e\u8d27\u5458\u7684\u96be\u9898\n\n\u6c34\u4e86\u4e00\u53d1\u641c\u7d22\uff0c\u62ff\u4e8680\u5206QWQ\n\n\n```\n#include<cstdio>\nusing namespace std;\nint lxy[21][21],hrb[21],n,i,j,k,minn=1e9;\nint ss(int x,int y,int z)//x\u8868\u793a\u6751\u5b50\u7f16\u53f7\uff0cy\u8868\u793a\u8d70\u4e86\u51e0\u4e2a\u6751\u5b50\uff0cz\u8868\u793a\u7528\u5230\u65f6\u95f4\u3002\u3002\u3002\n{\n    if(z>minn)return 0;//\u57fa\u672c\u6700\u5c0f\u503c\u526a\u679d\n    if(y==n&&z+lxy[x][1]<minn)\n    {minn=z+lxy[x][1];return 0;}//\u6bd4\u8f83\u6c42\u6700\u5c0f\u503c\uff0c\u5176\u4e2d\u7684\u52a0lxy[x][1]\u610f\u601d\u662f\u8d70\u56de\u7b2c\u4e00\u4e2a\u6751\n    for(int i=2;i<=n;i++)//\u5faa\u73af\u5f00\u59cb\n    if(hrb[i]==0&&i!=x)//\u6df1\u641c\u6a21\u677f\uff0c\u6ca1\u8d70\u5c31\u641c\n    {\n        hrb[i]=1;//\u6253\u70b9\n        ss(i,y+1,z+lxy[x][i]);\n        hrb[i]=0;//\u56de\u6eaf\n    }\n    return 0;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    for(k=1;k<=n;k++)\n    scanf(\"%d\",&lxy[i][k]);//\u8f93\u5165\n    ss(1,1,0);//\u5f00\u641c\n    printf(\"%d\",minn);\n}\n```\n\u4ea4\u5b8c\u540e\u3002\u3002\u3002\n\n\u6211\u60f3\uff1a\u8fd9\u9898\u66b4\u529b\u5206\u7ed9\u7684\u597d\u8db3\u554a\u3002\u3002\u3002\n\n\u4e8e\u662fflag\uff1a\u6211\u4eca\u5929\u5c31\u662f\u4ece\u8fd9\u8df3\u4e0b\u53bb\uff0c\u4e5f\u4e0d\u770b\u4e00\u7bc7\u9898\u89e3\uff01\n\n\u63a5\u7740\u4e00\u6ce2\u4f18\u79c0\u7684\u9884\u5224\u526a\u679d\n\n\u7136\u800c\u8fd8\u662f\u53ea\u670990\u5206\uff08\u5728100\u5206\u4ee3\u7801\u4e86\u4f1a\u8bb2\uff09~~t10\u6709\u591a\u5751\u554a~~\n\n1h\u540e\u3002\u3002\u3002\u6211\u70b9\u5f00\u4e86\u9898\u89e3\u3002\u3002\u3002\n\n~~woc~~\u8fd9\u90fd\u5565\u73a9\u610f\uff1f\uff1f\uff1f\n\n\u8fd9\u9898\u4e0d\u641c\u7d22\u5417\uff1f\u9898\u89e3\u548b\u5168\u662fdp\u72b6\u538bQAQ\n\n# \u6211\u4e0d\u4f1a\u5199\u554a\uff0c\u6211\u53ea\u4f1a\u641c\u7d22QAQ\n\n\u597d\u5427\uff01\u53ea\u80fd\u9760\u81ea\u5df1\u4e86QWQ\n\n\u4e4b\u540e\u6211\u60f3\u4e86\u4e00\u4e0b\n\n\u51fa\u9898\u4eba\u4e00\u5b9a\u4f1a\u5728\u540e\u9762\u5361\u4eba\n\n# So struct\u5b58\u56fe\u6392\u5e8f\u662f\u4e2a\u4e0d\u9519\u7684\u60f3\u6cd5\uff0c\u4e8e\u662f\u6709\u4e86100\u5206\u4ee3\u7801\n```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct pd{int ha,e;}lxy[25][25];\n//\u5b58\u56fe\uff0cha\u8868\u793a\u5404\u70b9\u65f6\u95f4\u6d88\u8017\uff0ce\u8868\u793a\u8981\u53bb\u7684\u70b9\uff0c\u56e0\u4e3a\u6392\u5e8f\u52a8\u5217\uff0c\u4e0d\u52a8\u884c\uff0c\u6240\u4ee5\u8bb0\u4e0b\u5217\uff0c\u5c31\u662f\u8981\u53bb\u7684\u70b9\nint hrb[25],n,i,j,k,minn=1e9,maxn=1001,emm[25];//\u65b0\u589e\u4e00\u4e2aemm\u6570\u7ec4\u89e3\u51b3\u6392\u5e8f\u52a8\u5217\u7684\u95ee\u9898\nint cmp(pd a,pd b){return a.ha<b.ha;}//\u6392\u5e8f\u51fd\u6570\nint ss(int x,int y,int z)\n{\n    if(z>=minn)return 0;//\u7528sort\u4f18\u5316\uff0c\u63d0\u524d\u627e\u51fa\u6700\u5c0f\u503c\uff0c\u526a\u679d\n    if(z+n-y+1+maxn>=minn)return 0\uff1b\n    //\u9884\u89c1\u6027\u526a\u679d\uff0cmaxn\u8868\u793ax\u70b9\u52301\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u7136\u540e\u5269\u4f59\u70b9\u53d6\u6700\u5c0f\u503c1\uff0c\u6781\u503c\u5224\u5b9a\n    if(y==n){minn=min(minn,z+emm[x]);return 0;}\n    if(y<n)\n    for(int i=2;i<=n;i++)\n    if(hrb[lxy[x][i].e]==0)\n    //\u5224\u65ad\u662f\u5426\u8d70\u8fc7\uff0c\u4e3a\u5565\u662flxy[x][i].e,\u8bf7\u89c1\u4e0a\u9762\u89e3\u91ca\n    {\t\n    \tif(z+lxy[x][i].ha+n-y+maxn>minn)return 0;\n        //\u9884\u89c1\u6027\u526a\u679d\uff0c\u6781\u503c\u5224\u5b9a\uff0c\u7528\u8fd9\u4e24\u4e2a\u53ef\u4ee590\u5206\n        hrb[lxy[x][i].e]=1;\n        ss(lxy[x][i].e,y+1,z+lxy[x][i].ha);\n        hrb[lxy[x][i].e]=0;\n    }\n    return 0;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {    \n    \tfor(k=1;k<=n;k++)\n        {\n    \t    scanf(\"%d\",&lxy[i][k].ha);\n    \t    lxy[i][k].e=k;//\u8bb0\u5f55\u5217\u6570\n    \t    if(i!=1&&k==1)\n            maxn=min(maxn,lxy[i][1].ha),emm[i]=lxy[i][1].ha;\n //\u6c42x\u52301\u7684\u6700\u5c0f\u65f6\u95f4\u82b1\u8d39\uff0c\u7528\u4e8e\u9884\u89c1\u6027\u526a\u679d\uff0c\u548c\u5b58x\u52301\u7684\u82b1\u8d39\u7528\u4e8e\u641c\u7d22\u7ed3\u7b97\uff0c\u89e3\u51b3\u6392\u5e8f\u9020\u6210\u7684\u5217\u4e71\u5e8f\u7684\u60c5\u51b5\n        }\n        sort(lxy[i]+1,lxy[i]+n+1,cmp);\n        //STL\u5927\u6cd5\u597d\uff0c\u4e8c\u7ef4\u6570\u7ec4\u7684\u6392\u5e8f\u8981\u7528for\uff0csort\u53ef\u4ee5\u4f18\u5316\u627e\u51fa\u7684\u7b54\u6848minn\uff0c\u51cf\u5c11\u65e0\u7528\u529f\n    }\n    hrb[1]=1;//\u8dd1\u8fc7\u4e86\u5c31\u8981\u8e29\uff0c\u4e0d\u7136\u4f1a\u8dd1\u56de\u53bb\uff0c\u60f3\u60f380\u5206\u4ee3\u7801\u4e3a\u5565\u4e0d\u7528\u8d4b\u503c\u4e3a1\uff1f\u56e0\u4e3a80\u5206\u5217\u6ca1\u4e71\u5e8f\n    ss(1,1,0);\n    printf(\"%d\",minn);\n    return 0;\n}\n```\n\u8fd9\u9898\u6bd4\u8f83\u9ebb\u70e6\u7684\u662f\u731c\u51fa\u9898\u4eba\u610f\u56fe\uff0c\u7075\u6d3b\u8fd0\u7528\u8d2a\u5fc3\u548c\u9884\u89c1\u6027\u526a\u679d\n\n\u5176\u4ed6\u7684\u8fd8\u662f\u5f88\u6c34\u7684\n\n\u63a8\u8350\u4e24\u9053\u9898\uff0c\u8fd0\u7528\u9884\u89c1\u6027\u526a\u679d\u7684p1731\u751f\u65e5\u86cb\u7cd5\u548c\u7a76\u6781\u641c\u7d22\np1064\u91d1\u660e\u7684\u9884\u7b97~~\u4e0d\u8981\u95ee\u4e3a\u5565\uff0c\u6709\u5927\u4f6c\u5199\u51fa\u6765\u4e86~~\n\n# \u6700\u540e\uff0c\u8bf7\u70b9\u8d5e\uff0c\u5173\u6ce8\uff0c~~\u6295\u98df\uff0c\u7d20\u8d28\u4e09\u8fde~~QWQ",
        "postTime": 1540470192,
        "uid": 104710,
        "name": "\u767d\u70db\u8475",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "## \u697c\u4e0b\u7684\u4e24\u4e2a\u72b6\u538b\u9898\u89e3\u90fd\u53ea\u80fd\u62ff 80 \uff1f\u8fd9\u91cc\u7ed9\u51fa AC \u7684\u72b6\u538b\u9898\u89e3\u3002\n\n\u72b6\u538b\u7684\u601d\u8def\u662f\u4e00\u6837\u7684\u3002\u7528 v [ i ] [ j ] \u6765\u8868\u793a i \u72b6\u6001\u4e0b\u8d70\u5230\u7b2c j \u4e2a\u5730\u65b9\u7684\u6700\u5c0f\u503c\u3002\u8fd9\u91cc\u7684 i \u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u6bcf\u4e00\u4f4d\u662f 0 \u662f 1 \u5373\u8868\u793a\u6bcf\u4e2a\u5730\u65b9\u6709\u65e0\u53bb\u8fc7\uff0c\u4f46\u662f\u8f6c\u4e3a\u5341\u8fdb\u5236\u8868\u793a\u72b6\u6001\uff0c\u8fd9\u4fbf\u662f\u72b6\u6001\u538b\u7f29\u7684\u57fa\u672c\u601d\u60f3\u3002\u5148\u4ece 3\uff08\u4e8c\u8fdb\u5236 11\uff09 \u679a\u4e3e i\uff0c\u6bcf\u6b21\u7ed9 i \u52a0 2\uff08\u56e0\u4e3a\u7b2c\u4e00\u4f4d\u6240\u8868\u793a\u7684\u7b2c\u4e00\u4e2a\u5730\u65b9\u662f\u8d77\u70b9\uff0c\u4e0d\u7ba1\u5982\u4f55\u90fd\u53bb\u8fc7\uff0c\u56e0\u6b64\u5176\u6c38\u8fdc\u662f 1\uff09\u3002\u5f97\u5230\u53ef\u80fd\u7684 i \u540e\uff0c\u679a\u4e3e i \u7684\u9664\u7b2c\u4e00\u4f4d\u5916\u6bcf\u4e2a\u4e3a 1 \u7684\u4f4d\uff0c\u5e76\u66ff\u6362 1 \u4e3a 0 \u5f97\u5230\u80fd\u8f6c\u79fb\u5230\u72b6\u6001 i \u7684\u72b6\u6001 s\uff0c\u5177\u4f53\u8f6c\u79fb\u8fc7\u7a0b\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u603b\u4e4b\u4f4d\u8fd0\u7b97\u4ec0\u4e48\u7684\u8be6\u89c1\u4ee3\u7801\u3002\n\n\u90a3\u4e48\u5982\u4f55\u8fdb\u884c\u4f18\u5316\u5462\uff1f\u4e0b\u9762\u5c31\u662f\u51e0\u4e2a\u597d\u529e\u6cd5\uff1a\n\n- 1 . \u9996\u5148\u5982\u679c\u89c4\u5b9a n = 5\uff0c\u5373\u6709\u552e\u8d27\u5458\u8981\u53bb\u4e94\u4e2a\u5730\u65b9\uff0c\u679a\u4e3e\u5230 i = 3\uff08\u4e8c\u8fdb\u5236 00011\uff09 \u65f6\uff0c\u6211\u4eec\u4e0d\u4e00\u5b9a\u9700\u8981\u4ece\u6700\u4f4e\u4f4d\u4e00\u76f4\u679a\u4e3e\u5230\u7b2c n \u4f4d\uff0c\u56e0\u4e3a\u7b2c n \u4f4d\u53ef\u80fd\u5728\u679a\u4e3e i \u7684\u5f88\u4e45\u4ee5\u540e\u624d\u80fd\u53d8\u6210 1\uff0c\u8fd9\u4e4b\u524d\u90fd\u662f 0\uff0c\u6d6a\u8d39\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u89c4\u5b9a\u6574\u6570 k\uff0c\u8868\u793a\u76ee\u524d\u53ef\u80fd\u4e3a 1 \u7684\u6700\u9ad8\u4f4d\u7684\u4f4d\u6570\u3002\u5f53 i \u8d85\u8fc7 2 \u7684 k \u6b21\u65b9\u65f6\uff0c\u66f4\u65b0 k\uff0c\u5373\u4e3a k \u81ea\u589e\u3002\u8fd9\u91cc 2 \u7684 k \u6b21\u65b9\u53ef\u4ee5\u6682\u65f6\u7528\u53d8\u91cf p \u8868\u793a\uff0ck \u66f4\u65b0\u65f6\u7528\u4f4d\u8fd0\u7b97\u7ed9 p \u5411\u5de6\u79fb\u4e00\u4f4d\u3002\n\n- 2 . \u5c3d\u91cf\u4e0d\u7528 STL \u7684 min\uff0c\u867d\u7136\u597d\u7528\uff0c\u4f46\u662f\u5b81\u613f\u7528 define \u624b\u6253 QAQ\uff0c\u53e6\u5916\u5176\u4ed6\u8054\u7cfb\u5230\u4f4d\u8fd0\u7b97\u7684\uff0c\u6bd4\u5982\u53d6\u67d0\u6570\u4e8c\u8fdb\u5236\u4f4d\u4e0b\u7684\u67d0\u4f4d\u7684\u503c\uff0c\u4e5f\u53ef\u4ee5\u7528 define \u800c\u4e0d\u662f\u65b0\u5efa\u4ec0\u4e48\u5185\u8054\u51fd\u6570\u3002\n\n- 3 . \u5bf9\u4e8e\u72b6\u6001 i\uff0c\u5176\u7531\u4e0d\u540c\u7684\u72b6\u6001 s \u8f6c\u79fb\u800c\u6765\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5012\u63a8 s \u7684\u65f6\u5019\uff0c\u5148\u786e\u8ba4\u5176\u53ef\u884c\u6027\uff0c\u518d\u679a\u4e3e l \uff0c\u7528 v [ s ] [ l ] \u66f4\u65b0 v [ i ] [ j ] \u7684\u6700\u5c0f\u503c\u3002\n\n\u4e2a\u4eba\u8ba4\u4e3a\u7b2c 2 \u70b9\u4f18\u5316\u7a0b\u5ea6\u662f\u6700\u5927\u7684\u3002\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#define Replace(a , b) (a ^ (1 << b-1))\n#define Get(a , b) ((a >> b-1) & 1)\n#define min(a , b) ((a) < (b) ? (a) : (b))\n#define MaxAns 2000000000\n\nint n , m , v[1 << 20][20] , r[20][20] , ans = MaxAns , s;\n\nint main(){\n    scanf(\"%d\" , &n);\n    m = (1 << n) - 1; // \u5f97\u5230\u6700\u5927\u7684\u72b6\u6001 i \u662f\u591a\u5c11 \n    for(int i = 1 ; i <= n ; i++)\n        for(int j = 1 ; j <= n ; j++)\n            scanf(\"%d\" , &r[i][j]);\n    for(int i = 1 ; i <= m ; i += 2)\n        for(int j = 1 ; j <= n ; j++)\n            v[i][j] = MaxAns;\n    v[1][1] = 0; // \u521d\u59cb\u5316 \n    for(int i = 3 , k = 2 , p = 4 ; i <= m ; i += 2){\n        if(i > p)\n            p = p << 1 , k++;\n        // \u66f4\u65b0\u5f53\u524d\u7684 k \u548c p \n        for(int j = 2 ; j <= k ; j++){\n            if(Get(i , j)){ // \u786e\u8ba4\u72b6\u6001 i \u7684\u7b2c j \u4f4d\u662f\u5426\u4e3a 1 \n                s = Replace(i , j);    // \u5229\u7528\u4f4d\u8fd0\u7b97\u66ff\u6362\u5e76\u5f97\u5230\u72b6\u6001 s \n                for(int l = 1 ; l < j ; l++)\n                    v[i][j] = min(v[i][j] , v[s][l] + r[l][j]);\n                for(int l = j + 1 ; l <= k ; l++)\n                    v[i][j] = min(v[i][j] , v[s][l] + r[l][j]);\n                // \u679a\u4e3e\u65f6 l \u2260j\uff0c\u56e0\u4e3a\u72b6\u6001 s \u7684\u7b2c j \u4f4d\u4e00\u5b9a\u662f\u88ab\u66ff\u6362\u7684 0 \n            } \n     }\n    }\n    for(int i = 2 ; i <= n ; i++)\n        ans = min(ans , v[m][i] + r[i][1]);\n    // \u7531\u4e8e\u6700\u540e\u8981\u56de\u5230\u8d77\u70b9\uff0c\u8fd8\u9700\u4e00\u4e2a\u5faa\u73af\u6765\u5bfb\u627e\u6700\u7ec8\u7b54\u6848 \n    printf(\"%d\" , ans); \n    return 0;\n}\n```",
        "postTime": 1500563065,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u4e5f\u53ef\u4ee5\u4e0d\u7528\u72b6\u538bdp\u3002\u3002\n\n\u5f53\u7136\u88f8\u5730\u641c\u7d22\u53ea\u80fd\u62ff\u56db\u5341\u5206\uff0c\u7a0d\u4f18\u5316\u70b9\u5c31\u80fd80\uff0c\u6700\u540e\u52a0\u4e0a\u4e00\u4e9b\u65e0\u8111\u7684\u4e1c\u897f\u624d\u80fd\u8fc7\uff0c\n\n\u3002\u3002\u3002\u3002\n\n\n------------\n\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nconst int scope=23;\nint n,ans=1<<30,tot;\nint vis[scope],minn[scope];\nstruct node\n{\n    int order;\n    int v;\n}pos[scope][scope];\nbool rule(const node &s1,const node &s2)\n{\n    return s1.v<s2.v;\n}\nvoid dfs(int x,int num) //x\u8868\u793a\u5f53\u524d\u6240\u5728\u7684\u70b9\uff0cnum\u8868\u793a\u5df2\u7ecf\u8d70\u8fc7\u4e86num\u4e2a\u70b9 \n{\n    if(num==n) //\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u8d70\u8fc7\u4e86n\u4e2a\u70b9\uff0c\u5c31\u8bf4\u660e\u8981\u56de\u4e00\u53f7\u70b9\u4e86 \n    {\n        if(tot+minn[x]<ans) ans=tot+minn[x];\n        return;\n    }\n    for(int i=2;i<=n;i++)\n    {\n        if(!vis[pos[x][i].order])        //\u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u8d70\u8fc7 \n        {\n            //\u526a\u679d\uff1a \n            if(tot+pos[x][i].v>=ans) return; //\u5982\u679c\u6211\u4eec\u8d70\u8fd9\u4e00\u6b65\u8d70\u8fc7\u7684\u8ddd\u79bb\u5c31\u6bd4\u4e4b\u524d\u7684\u6700\u4f18\u89e3\u5dee\u4e86\uff0c\u5c31\u4e0d\u8981\u8d70\u4e86 \n            if(tot+(n-num)+1>=ans) return; //\u5373\u4f7f\u6211\u4eec\u540e\u9762\u8981\u8d70\u7684\u8def\u957f\u5ea6\u90fd\u662f1\uff0c\u4ecd\u7136\u4e0d\u6bd4\u6700\u4f18\u89e3\u597d\uff0c\u4e5f\u4e0d\u8981\u8d70\u4e86 \n            vis[pos[x][i].order]=1;    //\u5269\u4e0b\u5c31\u662f\u666e\u901a\u7684\u641c\u7d22\u4e86\uff0ctot\u8bb0\u5f55\u8d70\u7684\u957f\u5ea6 \n            tot+=pos[x][i].v;\n            dfs(pos[x][i].order,num+1);\n            vis[pos[x][i].order]=0;\n            tot-=pos[x][i].v;\n        }\n    }\n}\nint main()  \n{\n    scanf(\"%d\",&n);//\u7a33\u7a33\u7684\u8bfb\u5165\u6570\u636e \n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            scanf(\"%d\",&pos[i][j].v); //\u56e0\u4e3a\u540e\u9762\u8981\u6392\u5e8f\uff0c\u5c31\u5206\u5f00\u8bb0\u5f55\u8fb9\u6743\u548c\u540e\u7ee7 \n            pos[i][j].order=j;   //\u540e\u7ee7 \n        }\n        minn[i]=pos[i][1].v; //\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u56de\u4e00\u53f7\u70b9\u7684\u8def\u5f84\u957f\u5ea6\uff0c\u56e0\u4e3a\u540e\u9762\u8981\u6392\u5e8f\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4e4b\u540e\u8981O\uff08n\uff09\u627e\u56de1\u70b9\u7684\u8fb9 \n        sort(pos[i]+1,pos[i]+n+1,rule);//\u628a\u4ece\u6bcf\u4e2a\u70b9\u51fa\u6765\u7684\u8fb9\u6392\u5e8f\uff0c\u5219\u7b2c\u4e00\u4e2a\u8fb9\u80af\u5b9a\u662f\u53bb\u81ea\u5df1\u7684\u90a3\u4e00\u6761 \n    }\n    vis[1]=1;         \n    dfs(1,1);\n    printf(\"%d\",ans);    //\u8f93\u51fa\u7b54\u6848 \n    return 0;\n}\n```\n\n\n------------\n\nrp++\n\n \u8fd9\u79cd\u505a\u6cd5\u53ef\u80fd\u8fd8\u662f\u4f1a\u88ab\u5361\uff0c\u4e0d\u8fc7\u73b0\u5728\u5012\u662f\u6ca1\u6709\u8fd9\u6837\u7684\u6570\u636e\n\n/\\*\n\n\u9001\u5927\u5bb6\u4e00\u7ec4\u6837\u4f8b\n\n4\n0 1 1010 1010\n\n1 0 1 1\n\n1010 1 0 1010\n\n1010 1 1010 0\n\n->  2022\n\n\\*/",
        "postTime": 1509406476,
        "uid": 21596,
        "name": "Forever\u4e36CIL",
        "ccfLevel": 6,
        "title": "P1171 \u552e\u8d27\u5458\u7684\u96be\u9898"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u6211\u63d0\u4f9b\u4e00\u79cd $dfs$ \u7684\u89e3\u6cd5\uff08\u4e0d\u52a0\u72b6\u6001\u538b\u7f29\uff09  \n\u9996\u5148\uff0c\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u9053\u9898\u76ee,\u6211\u4eec\u7684\u60f3\u6cd5\u662f\u4ec0\u4e48\u5462\uff1f  \n~~\u72b6\u6001\u538b\u7f29dp~~ $dfs$  \n\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u9898\u76ee,\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a\u6781\u5176\u667a\u969c\u7684\u641c\u7d22  \n\u6211\u4eec\u4ece\u7b2c $1$ \u4e2a\u70b9\u5f00\u59cb\u641c\u7d22\uff0c\u8bb0\u5f55\u4e0b\u7ecf\u8fc7\u7684\u8def\u5f84\u603b\u957f,\u5f53\u518d\u6b21\u7ecf\u8fc7 $1$ \u4e14\u904d\u5386\u5b8c\u4e86\u6240\u6709\u7684\u6751\u5e84\u65f6,\u6211\u4eec\u5c31\u66f4\u65b0\u6700\u5c0f\u503c  \n```\nvoid dfs(int f,int len,int num)\n{\n//\tif(len>ans) return;\n\tif(f==1 && !flag && num==n+1) \n\t{\n\t\tans=min(ans,len);\n\t\treturn;\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tif(!book[i] && i!=f)\n\t\t{\n\t\t\tflag=false;\n\t\t\tbook[i]=1;\n\t\t\tdfs(i,len+a[f][i],num+1);\n\t\t\tbook[i]=0;\n\t\t}\n}\n```  \n\n\u7136\u800c\u53ea\u6709 $40$ \u5206  \n~~\u5c31\u51b3\u5b9a\u662f\u4f60\u4e86,\u76ae\u5361\u4e18~~  \n\u63a5\u4e0b\u6765\u5c31\u5e94\u8be5\u8f6e\u5230\u6211\u4eec\u7684\u526a\u679d\u5165\u573a\u4e86 \n  \n---\n### \u526a\u679d\n**1.\u53ef\u884c\u6027\u526a\u679d**  \n  \u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee,\u6211\u4eec\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b,\u5c31\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u53ef\u884c\u6027\u526a\u679d,\u5c31\u662f\u8bf4,\u5f53\u6211\u4eec\u76ee\u524d\u7ecf\u8fc7\u7684\u603b\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u6211\u4eec\u8bb0\u5f55\u4e0b\u6765\u7684\u76ee\u524d\u6700\u5c0f\u7684\u603b\u957f\u5ea6,\u90a3\u4e48\u6211\u4eec\u5c31\u6ca1\u5fc5\u8981\u7ee7\u7eed\u627e\u4e0b\u53bb\u4e86,\u56e0\u4e3a\u7ee7\u7eed\u5f80\u540e\u9762\u8d70\u503c\u80af\u5b9a\u4f1a\u53d8\u5927,\u6240\u4ee5\u8fd9\u79cd\u72b6\u6001\u65e0\u6cd5\u66f4\u65b0\u6700\u5c0f\u503c\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\"\u526a\u6389\"\u3002  \n  \u4f46\u662f,\u5982\u679c\u6211\u4eec\u6700\u5f00\u59cb\u641c\u7d22\u7684\u503c\u6bd4\u8f83\u5927,\u90a3\u4e48\u5fc5\u5b9a\u4f1a\u5bfc\u81f4\u641c\u7d22\u5230\u8bb8\u591a\u5197\u4f59\u7684\u72b6\u6001,\u8fd9\u8be5\u600e\u4e48\u529e\u5462\uff1f  \n  ![](http://ww1.sinaimg.cn/large/9150e4e5ly1fdr04mkxgkj205i04dmwy.jpg)  \n  \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u770b\u4e0a\u53bb\u4e0d\u9760\u8c31\u7684\u4e1c\u897f,\u90a3\u5c31\u662f\u5c06\u6bcf\u4e2a\u6751\u5e84\u901a\u5f80\u5176\u4ed6\u6751\u5e84\u7684\u8ddd\u79bb\u4ece\u5c0f\u5230\u5927\u6392\u5e8f,\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba9\u6211\u4eec\u6700\u5f00\u59cb\u641c\u7d22\u7684\u503c\u6709\u53ef\u80fd\u53d8\u5f97\u6bd4\u8f83\u5c0f,\u4ece\u800c\u907f\u514d\u4e86\u5197\u4f59\u72b6\u6001\u3002  \n  **\u4ee3\u7801:**\n  ```\n  #include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nstruct Node\n{\n\tint rank;\n\tint data;\n}a[21][21];\nint n,flag;\nint book[21],ans=1<<30;\nvoid dfs(int f,int len,int num)\n{\n\tif(len>ans) return;\n\tif(f==1 && !flag && num==n+1) \n\t{\n\t\tans=min(ans,len);\n\t\treturn;\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tif(!book[a[f][i].rank] && a[f][i].rank!=f)\n\t\t{\n\t\t\tflag=false;\n\t\t\tbook[a[f][i].rank]=1;\n\t\t\tdfs(a[f][i].rank,len+a[f][i].data,num+1);\n\t\t\tbook[a[f][i].rank]=0;\n\t\t}\n}\nbool cmp(Node x,Node y)\n{\n\treturn x.data<y.data;\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tflag=true;\n\tfor(int i=1;i<=n;++i) \n\t{\n\t\tfor(int j=1;j<=n;++j)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j].data);\n\t\t\ta[i][j].rank=j;\n\t\t}\n\t\tsort(a[i]+1,a[i]+n+1,cmp);\n\t}\n\tdfs(1,0,1);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n  ```\n---\n\u7136\u800c\u4ea4\u4e0a\u53bb\u4ecd\u7136\u53ea\u6709 $60$ \u5206  \n\u80af\u5b9a\u662f\u6211\u4eec\u7684\u4f18\u5316\u529b\u5ea6\u4e0d\u591f\u5927,\u7ee7\u7eed\u89c2\u5bdf  \n\u4ed4\u7ec6\u56de\u60f3\u4e00\u4e0b\u6211\u4eec\u7684\u641c\u7d22\u8fc7\u7a0b\u4f1a\u7ecf\u5e38\u51fa\u73b0\u4e00\u79cd\u60c5\u51b5,\u90a3\u5c31\u662f\u8fd8\u6ca1\u6709\u8d70\u5b8c\u6240\u6709\u7684\u6751\u5e84\u4fbf\u53c8\u56de\u5230\u4e86 $1$ \u6751\u5e84,\u8fd9\u79cd\u60c5\u51b5\u663e\u7136\u662f\u4e0d\u884c\u7684,\u90a3\u4e48\u6211\u4eec\u5c31\u5e94\u8be5\u628a\u5b83\u7ed9\u820d\u53bb   \n\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86,\u8fd9\u6837\u5b50\u8be5\u4ecd\u7136\u53ea\u6709 $80$ \u5206  \n\n---  \n\u518d\u56de\u5230\u6211\u4eec\u7684\u641c\u7d22\u4e0a,\u6211\u4eec\u8fd8\u6709\u4e00\u79cd\u526a\u679d\u6ca1\u6709\u7528,\u90a3\u5c31\u662f\u6700\u4f18\u6027\u526a\u679d  \n\u7b80\u5355\u89e3\u91ca\u5c31\u662f\u8bf4,\u5f53\u524d\u8fd9\u79cd\u60c5\u51b5,\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u51b3\u7b56,\u90fd\u65e0\u6cd5\u66f4\u65b0\u6700\u4f18\u503c  \n\u653e\u5230\u8fd9\u9053\u9898\u91cc\u9762\u800c\u8a00,\u4e5f\u5c31\u662f\u8bf4\u5f53\u6211\u4eec\u641c\u7d22\u5230\u4e00\u4e2a\u72b6\u6001\u65f6,\u5c31\u7b97\u63a5\u4e0b\u6765\u7684\u51b3\u7b56\u5168\u9009\u6700\u5c0f\u503c,\u4e5f\u65e0\u6cd5\u66f4\u65b0\u7b54\u6848,\u90a3\u4e48\u8fd9\u79cd\u7b54\u6848\u5c31\u53ef\u4ee5\u820d\u53bb\u3002\n\n---\n$AC$ $Code$:\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nstruct Node\n{\n\tint rank;\n\tint data;\n}a[21][21];\nint n,flag;\nint book[21],ans=1<<30;\ninline void dfs(int f,int len,int num,int zhi)\n{\n\tif((len+zhi>=ans) || (f==1 && num!=n+1 && !flag)) return;\n\tif(f==1 && !flag && num==n+1) \n\t{\n\t\tans=min(ans,len);\n\t\treturn;\n\t}\n\tfor(register int i=2;i<=n;++i)\n\t\tif((!book[a[f][i].rank] && a[f][i].rank!=f) || (a[f][i].rank==1 && num==n))\n\t\t{\n\t\t\tflag=false;\n\t\t\tbook[a[f][i].rank]=1;\n\t\t\tdfs(a[f][i].rank,len+a[f][i].data,num+1,zhi-a[f][2].data);\n\t\t\tbook[a[f][i].rank]=0;\n\t\t}\n}\nbool cmp(Node x,Node y)\n{\n\treturn x.data<y.data;\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tflag=true;\n\tint sum=0;\n\tfor(register int i=1;i<=n;++i) \n\t{\n\t\tfor(register int j=1;j<=n;++j)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j].data);\n\t\t\ta[i][j].rank=j;\n\t\t}\n\t\tsort(a[i]+1,a[i]+n+1,cmp);\n\t\tsum+=a[i][2].data;\n\t}\n\tdfs(1,0,1,sum);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```   \n## \u5982\u6709\u4ec0\u4e48\u95ee\u9898,\u8bf7\u79c1\u4fe1\u95ee\u6211\uff0c\u8fd8\u8bf7\u5927\u4f6c\u52ff\u55b7",
        "postTime": 1569987684,
        "uid": 101042,
        "name": "zhz\u5c0f\u849f\u84bb",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "# \u5199\u8fd9\u4efd\u9898\u89e3\uff0c\u662f\u60f3\u8981\u4f5c\u4e3a \u72b6\u538b + dp\u7684\u5165\u95e8\u6307\u5357\n\n~~\u4e00\u60f3\u8d77\u6211\u521a\u5b66\u72b6\u538b\u7684\u65f6\u5019\uff0c\u600e\u4e00\u4e2a\u82e6\u5b57\u4e86\u5f97~~\n\n\u4e3a\u4e86\u9632\u6b62\u6709\u4eba\u6b65\u5165\u6211\u7684\u540e\u5c18\uff0c\u6240\u4ee5\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u662f\u4e3a\u4e86\u626b\u76f2\uff0c\u5404\u4f4d\u5403\u74dc\u7684\u5927\u4f6c\u53ef\u4ee5\u8d70\u4e86\n\n# \u4e00\uff0c\u4e8c\u8fdb\u5236\u8fd0\u7b97\n\n[[\u6d1b\u8c37\u65e5\u62a5\u7b2c79\u671f]\u4e8c\u8fdb\u5236\u4e0e\u4f4d\u8fd0\u7b97](https://baijiahao.baidu.com/s?id=1615721955382381294&wfr=spider&for=pc)\n\n\u8fd9\u4e2a\u5b9e\u5728\u592a\u91cd\u8981\u4e86\uff0c\u5148\u628a\u4e8c\u8fdb\u5236\u8fd0\u7b97\u641e\u61c2\u4e86\uff0c\u518d\u6765\u641e\u72b6\u538b\n\n# \u4e8c\uff0c\u72b6\u538b\u662f\u4ec0\u4e48\uff1f\n\n~~\u4f17\u6240\u5468\u77e5~~\uff0cOI\u662f\u4e00\u4e2a\u641e\u6570\u5b66\u7684\u5b66\u8bfe\uff0c\u6240\u8c13\u72b6\u538b\uff0c\u5c31\u662f\u628a\u4e00\u4e2a\u72b6\u6001\u8868\u793a\u6210\u4e00\u4e2a\u96c6\u5408\uff0c\u518d\u628a\u96c6\u5408\u8868\u793a\u6210\u4e8c\u8fdb\u5236\u6570\n\n\u603b\u7684\u6765\u8bf4\u5c31\u6709\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\n\n**\u72b6\u6001 - > \u96c6\u5408 - > \u4e8c\u8fdb\u5236**\n\n\u5728\u8fdb\u5165\u5177\u4f53\u64cd\u4f5c\u4e4b\u524d\uff0c\u6211\u60f3\u5148\u548c\u5404\u4f4d\u8ba8\u8bba\u4e00\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u8981\u628a\u96c6\u5408\u8f6c\u6210\u4e8c\u8fdb\u5236\u6570\u5462\uff1f\n\n\u4e8c\u8fdb\u5236\uff0c\u8fd9\u662f\u4e00\u4e2a\u7f8e\u5999\u7684\u8fdb\u5236\u6570\uff0c**0/1\uff0c\u8868\u8fbe\u4e86 \u6709 \u6216\u8005 \u6ca1\u6709**\n\n\u800c\u4f7f\u7528\u4e24\u8fdb\u5236\u6570\u6765\u63cf\u8ff0\u96c6\u5408\uff0c\u610f\u5473\u7740**\u96c6\u5408\u7684\u8fd9\u4e2a\u5143\u7d20 \u6709 \u6216\u8005 \u6ca1\u6709**\n\n\u6bd4\u5982\u96c6\u5408S\uff0c\u67094\u4e2a\u5143\u7d20\n\n1111 \u8fd9\u4e2a\u4e24\u8fdb\u5236\u6570\u5c31\u80fd\u591f\u8868\u8fbe\u96c6\u5408 s\n\n\u90a3\u5982\u679c\u8981\u8868\u8fbe\u96c6\u5408s\uff0c\u53bb\u9664\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u8fd9\u6837\u7684\u5b50\u96c6\u600e\u4e48\u8868\u793a\u5462\uff1f\n\n1011\uff0c\u800c\u53bb\u9664\u6389\u7b2c\u4e8c\u4e2a \u548c \u7b2c\u4e09\u4e2a\u5143\u7d20\u7684\u4e8c\u8fdb\u5236\u6570\uff0c \u662f1001\n\n**\u63a8\u800c\u5e7f\u4e4b\uff0c\u5982\u679c\u5168\u96c6\u5171\u6709 N \u4e2a\u5143\u7d20\uff0c**\n\n**\u53bb\u9664\u6389 \u7b2ca1, \u7b2ca2\uff0c \u7b2ca3... \u7b2can\u53f7\u5143\u7d20\u7684\u5b50\u96c6\uff0c**\n\n**\u5c31\u662f\u628a N\u4e2a1\u6784\u6210\u7684\u4e24\u8fdb\u5236\u6570\u7684\u6240\u6709\u7684{an}\u4f4d\u4e0a\u76841\uff0c\u53d8\u62100**\n\n- **\u90a3\u4e48\u5f80\u96c6\u5408\u4e2d\u52a0\u5165\u5143\u7d20\u5462**\n\n\u5411\u4e00\u4e2a\u96c6\u5408 s \u4e2d\u52a0\u5165\u7b2c i \u53f7\u5143\u7d20\uff0c\n\n\u5c31\u662f\u628a\u4e24\u8fdb\u5236\u6570\u7684\u7b2c i \u4f4d\u4ece 0 \u53d8\u4e3a 1\n\n- **\u5220\u9664\u5143\u7d20\u4e0d\u7528\u6211\u8bf4\u4e86\u5427\uff1f**\n\n\u5411\u4e00\u4e2a\u96c6\u5408 s \u4e2d\u5220\u9664\u5165\u7b2c i \u53f7\u5143\u7d20\uff0c\n\n\u5c31\u662f\u628a\u4e24\u8fdb\u5236\u6570\u7684\u7b2c i \u4f4d\u4ece 1 \u53d8\u4e3a 0\n\n\u4e0b\u9762\u662f\u6574\u7406\u7684\u4e00\u4e9b\u4e24\u8fdb\u5236\u4e0a\u7684\u5e38\u7528\u64cd\u4f5c(\u6211\u521a\u521a\u7ed9\u4f60\u4eec\u7684\u94fe\u63a5\u4e0a\u6709\u8be6\u7ec6\u7684\u89e3\u6790\uff0c\u8fd9\u91cc\u53ea\u662f\u603b\u96c6)\n\n```cpp\n//\u96c6\u5408 s \u4ee3\u8868\u5f53\u524d\u96c6\u5408\n//\u53f3\u6570 k \u4f4d\u4e8c\u8fdb\u5236\u6570 0/1 \u4ee3\u8868 \u7b2c k \u53f7\u5143\u7d20 \u4e0d\u5728\u96c6\u5408 / \u5728\u96c6\u5408 \u91cc \n\n//\u5fc5\u5907\u64cd\u4f5c1\uff1a \n//\u5c06\u7b2ck\u4e2a\u5143\u7d20\u52a0\u5165\u96c6\u5408\ns | (1 << (k - 1));\n\n//\u5fc5\u5907\u64cd\u4f5c2\uff1a\n//\u5c06\u7b2ck\u4e2a\u5143\u7d20\u4ece\u96c6\u5408\u4e2d\u5220\u9664\ns & (~ (1 << (k - 1)) );\n\n//\u5fc5\u5907\u64cd\u4f5c3\uff1a\n//1)\u5982\u679c\u7b2ck\u4e2a\u5143\u7d20\u5728 \u96c6\u5408s\u91cc\uff0c \u5220\u9664\u5b83\n//2)\u5982\u679c\u4e0d\u5728\uff0c\u628a\u5b83\u52a0\u5165\u96c6\u5408s\n//\u53ef\u4ee5\u60f3\u8c61\u6210\u4e00\u76cf\u706f\u7684\u5f00\u5173:\n//\u6309\u4e0b\u5f00\u5173\uff0c \u660e -> \u6697\uff0c \u6697 -> \u660e \ns ^ (1 << (k - 1));\n\n//\u5fc5\u5907\u64cd\u4f5c4:\n//\u5224\u65ad\u5143\u7d20k \u662f\u5426\u5728\u96c6\u5408s\u91cc\n//\u5728\uff1a\u8fd4\u56de1\uff0c\u4e0d\u5728\uff1a\u8fd4\u56de0 \n(s >> (k - 2)) & 1 == 1\n\n```\n# \u4e09\uff0c\u600e\u4e48\u5efa\u6a21\uff1f\n\n**step1 : \u600e\u4e48\u7528\u96c6\u5408\u63cf\u8ff0\u72b6\u6001\uff1f**\n\n\u4ee5\u8fd9\u9053\u9898\u76ee\u4e3a\u4f8b\uff0c\u4ec0\u4e48\u662f\u72b6\u6001\uff1f\n\n\u4e00\u4e2a\u57ce\u5e02\u662f\u5426\u5df2\u7ecf\u88ab\u8d70\u8fc7\u4e86\u53ef\u4ee5\u4f5c\u4e3a\u72b6\u6001\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a \u8d70\u8fc7\u7684\u57ce\u5e02\u4f5c\u4e3a\u4e00\u4e2a\u96c6\u5408\uff0c\u8868\u793a\u6210\u4e8c\u8fdb\u5236\u6570\n\n**step2 : \u600e\u4e48dp\uff1f**\n\n\u8fd9\u4e2a....\u679a\u4e3e\u5c31\u597d\u3002\n\n\n```cpp\n#include <algorithm>\n#include <cstring>\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nconst int maxn = 450;\n\nint rd(){\n\tint x = 0, f = 1; char c = getchar();\n\twhile(c < '0' || c > '9'){if(c == '-'){f = - 1;} c = getchar();}\n\twhile(c >= '0' && c <= '9'){x = x*10 + c - '0'; c = getchar();}\n\treturn x * f; \n}\n\nint N, c[maxn][maxn], f[1 << 20][20];\n\nint dp(){\n\t//1 << N\u4ee3\u8868\u5168\u96c6\n\tmemset(f,0x3f3f3f,sizeof(f));\n\tf[(1 << N) - 1][0] = 0;\n\tfor(int s = (1 << N) - 2; s >= 0 ; s--){\n\t\tfor(int v = 0; v < N ; v++){ \n\t\t\t//\u679a\u4e3e\u5f53\u524d\u96c6\u5408\uff0c\u552e\u8d27\u5458\u5904\u5728\u7684\u4f4d\u7f6e\n\t\t\tfor(int u = 0; u < N; u++){\n\t\t\t\tif( (s >> u) & 1)continue;//\u8bf4\u660e\u5df2\u7ecf\u5230\u8fc7u\u8fd9\u4e2a\u8282\u70b9\u4e86 \n\t\t\t\t\n\t\t\t\tf[s][v] = min(f[s][v], f[s|(1 << u)][u] + c[v][u]);\n\t\t\t\n\t\t\t} \n\t\t}\n\t}\n}\n\nint main(){\n\tN = rd();\n\tfor(int i = 0; i < N; i ++){\n\t\tfor(int j = 0; j < N; j++){\n\t\t\tc[i][j] = rd();\n\t\t}\n\t}\n\tdp();\n\tcout<<dp[0][0];\n}\n```\n",
        "postTime": 1573393685,
        "uid": 208273,
        "name": "dzz1537568241",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "## \u7b97\u6cd5\uff1a\u7eaf\u72b6\u538bDP\uff0c\u6ca1\u5438O2\u76f4\u63a5\u8fc7\uff01\uff01\uff01\n\n### \u72b6\u538bdp\uff1a\n\n\u8bf4\u767d\u4e86\u5c31\u662f\u5f00\u4e86\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7b2c\u4e00\u7ef4\u8868\u793a\u7684\u662f\u4e4b\u524d\u6709\u54ea\u4e9b\u70b9\u88ab\u904d\u5386\u8fc7\uff1a0\u8868\u793a\u6ca1\u88ab\u904d\u5386\uff0c1\u8868\u793a\u88ab\u904d\u5386\u8fc7\uff1b\u7b2c\u4e8c\u7ef4\u8868\u793a\u7684\u662f\u73b0\u5728\u6b63\u5728\u904d\u5386\u54ea\u4e2a\u70b9\n\n\u6709\u4eba\u8981\u95ee\uff1a\u5982\u4f55\u7528\u4e00\u4e2aint\u5b58\u4e0b\u6240\u6709\u70b9\u6709\u6ca1\u6709\u88ab\u904d\u5386\u7684\u4fe1\u606f\u5462\uff1f\uff1f\n\n\u7528\u4e8c\u8fdb\u5236\u554a\uff01\u6bcf\u4e2a\u70b9\u6309\u7f16\u53f7\u5927\u5c0f\u5206\u522b\u5199\u4e0a0100101....\u5728\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u5c31\u53ef\u4ee5\u4e86~~\uff08\u6709\u70b9\u50cf\u54c8\u5e0c\uff09~~\n\n## \u7279\u522b\u6ce8\u610f\uff1a\n\n\u7531\u4e8e\u72b6\u538bdp\u4e2d\u6d89\u53ca\u5230\u4e86\u53f3\u79fb0\u4f4d\u7684\u60c5\u51b5\uff08\u4e0d\u4f1a\u4f4d\u8fd0\u7b97\u7684\u5efa\u8bae\u8865\u4e00\u4e0b\uff09\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u5faa\u73af\u53d8\u91cf\u5305\u62ec\u6570\u7ec4\u7684\u5b58\u50a8\u4e00\u5f8b\u4ece\u96f6\u5f00\u59cb\uff08\u65b9\u4fbf\uff01\u597d\u8bb0\uff01\uff09\n\n\n\n------------\n### \u4e0a\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint ans=0x7f7f7f7f,f[1500000][20],n,m,x,dis[20][20];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)//\u4ece\u96f6\u5f00\u59cb\u5b58\u50a8\n\t{\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tif(i==j){\n\t\t\t\tscanf(\"%d\",&x);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tscanf(\"%d\",&x);\n\t\t\tdis[i][j]=x;\n\t\t}\n\t}\n\tmemset(f,0x3f,sizeof(f));//\u521d\u59cb\u5316\n\tf[1][0]=0;//\u4ee3\u8868\u7b2c\u4e00\u4f4d\u5df2\u7ecf\u904d\u5386\u8fc7\n\tfor(int s=0;s<(1<<n);s++)\n\t{\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(f[s][i]<0x3f3f3f3f)//\u7531\u4e8e\u8fd9\u662f\u7528\u81ea\u5df1\u66f4\u65b0\u522b\u4eba\u7684dp\uff0c\u6240\u4ee5\u5148\u627e\u88ab\u904d\u5386\u8fc7\u7684\u70b9\u53bb\u66f4\u65b0\u522b\u4eba\n\t\t\t{\n\t\t\t\tfor(int j=0;j<n;j++)\n\t\t\t\t{\n\t\t\t\t\tif(((s>>j)&1)==0)//\u7531\u4e8e\u8fd9\u91ccj\u5305\u62ec\u4e3a0\u7684\u60c5\u51b5\uff08\u4e8c\u8fdb\u5236\u6700\u540e\u4e00\u4f4d\uff09\u56e0\u800c\u4e0a\u9762\u7684\u5faa\u73af\u53d8\u91cf\u90fd\u8981\u4ece0\u5f00\u59cb \n\t\t\t\t\t{\n\t\t\t\t\t\tint news=s|(1<<j);\n\t\t\t\t\t\tf[news][j]=min(f[news][j],f[s][i]+dis[i][j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)//\u627e\u4e00\u904d\u6700\u5927\u503c\n\t{\n//\t\tcout<<f[(1<<n)-1][i]+dis[i][0]<<endl;\n\t\tans=min(ans,f[(1<<n)-1][i]+dis[i][0]);//\u6ce8\u610f\u8fd9\u91cc\u4e8c\u8fdb\u5236\u5168\u662f1\u7684\u662f\uff081<<n\uff09-1\uff0c\u8981\u51cf\u4e00\uff01\uff01\uff01\uff1b\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u7ba1\u7406\u5927\u5927\u6c42\u6c42\u60a8\uff0c\u8ba9\u6211\u8fc7\u4e86\u5427\uff01\uff01~~\u86ee\u8f9b\u82e6\u7684\uff1b~~\n\u4e5d\u5341\u5ea6\u97a0\u8eac\u611f\u8c22",
        "postTime": 1563359477,
        "uid": 186194,
        "name": "zhl001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "##\u7b2c\u4e00\u6b21\u505a\u72b6\u538bdp\u3002\u3002\u3002\u4f4d\u8fd0\u7b97\u4e00\u5b9a\u8981\u719f\u7ec3\u3002\u3002\u3002\n\n##\u8fd9\u91cc\u7ed9\u51fapas\u7684\u72b6\u538b\u9898\u89e3\n\n\u8bbe\u72b6\u6001f[i,j]\u8868\u793a\u5f53\u524d\u6700\u540e\u4e00\u4e2a\u5230i\uff0c\u628aj\u8f6c\u6210\u4e8c\u8fdb\u5236\uff0c\u7b2ck\u4f4d\u4e0a\u4e3a1\u7684\u8868\u793ak\u53bb\u8fc7\u4e86\u3002\n\n\u5219\u65b9\u7a0b\uff1a\n\n\u5982\u679c\u7b2cj\u4f4d\u4e0a\u4e3a0\uff0cf[j,k+1 << (j-1)]:=min{f[i,k]+a[i,j]}\n\n\u5224\u65ad\u7b2cj\u4f4d\u4e0a\u662f\u5426\u4e3a0\u9700\u8981\u7528\u5230\u4e00\u4e2a\u4f4d\u8fd0\u7b97k and (1 << (j-1))\uff0c\u5373\u628a\u4e8c\u8fdb\u5236\u4e0b\u7684k\u7684\u7b2cj\u4f4d\u622a\u4e86\u51fa\u6765\u3002\n\n\u7136\u800c\u8fd9\u6837\u8dd1\u7684\u5f88\u6162\uff0c#10\u4f1a\u88ab\u5361\u6389\uff0c\u9700\u8981\u5361\u70b9\u5e38\u3002\u3002\u3002\n\n\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n```cpp\nuses math;\nconst\n  maxn=1 << 20;\nvar\n  f:array[0..21,0..maxn]of longint;\n  a:array[0..21,0..21]of longint;\n  n,i,j,k,x,ans,t,tt,sum,m:longint;\nbegin\n  readln(n);\n  for i:=1 to n do \n    for j:=1 to n do read(a[i,j]);\n  m:=1 << n-1;\n  fillword(f,sizeof(f) >> 1,$7f);\n  f[1,1]:=0;\n  k:=1;\n  while k<=m do \n    begin\n      for i:=1 to n do \n        if f[i,k]<>8323199 then //\u5982\u679c\u5f53\u524d\u72b6\u6001\u5b58\u5728\n          for j:=1 to n do \n            begin\n              x:=1 << (j-1);//\u5982\u679c\u4e0d\u5148\u7528\u4e00\u4e2a\u53d8\u91cf\u5b58\u8d77\u6765\uff0c\u60a8\u53ef\u80fd\u4f1aT\u3002\u3002\u3002\n              if k and x=0 then \n                f[j,k+x]:=min(f[j,k+x],f[i,k]+a[i,j]);\n            end;\n      inc(k,2);//\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u6751\u5e84\u5df2\u7ecf\u53bb\u8fc7\u4e86\uff0c\u6240\u4ee5\u53ef\u80fd\u7684\u72b6\u6001\u4e00\u5b9a\u662f\u4e2a\u5947\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5+2\n    end;\n  ans:=233333333;\n  for i:=2 to n do\n    ans:=min(ans,f[i,m]+a[i,1]);\n  write(ans);\nend.\n```",
        "postTime": 1511672569,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684\u96be\u5ea6\u600e\u4e48\u53ef\u80fd\u662f\u666e\u53ca+/\u63d0\u9ad8\uff1f\n\n\u5e0c\u671b\u80fd\u591f\u7a0d\u5fae\u653e\u5bbd\u70b9\u65f6\u9650\u3002\n\n\u4e8b\u5b9e\u4e0a\u65c5\u884c\u5546\u95ee\u9898(tsp\u95ee\u9898)\u6700\u597d\u7684\u89e3\u6cd5\u662f\u72b6\u538bdp\uff0c\u4f46\u5f88\u663e\u7136\u8fd9\u9898\u7684\u6b63\u89e3\u662f\u641c\u7d22+\u5f3a\u529b\u526a\u679d\uff0c\u641c\u7d22\u7684\u7b97\u6cd5\u697c\u4e0b\u5df2\u7ecf\u8bb2\u7684\u5f88\u660e\u767d\u4e86\uff0c\u6211\u5c31\u6765\u8bb2\u8bb2\u5176\u4ed6\u7b97\u6cd5\u3002\n\n1.\u72b6\u538bdp\uff0880\u5206\uff09\n\n\u56e0\u4e3a\u4f1aTLE\u4e24\u4e2a\u70b9\u6240\u4ee5\u53ea\u670980\u5206\u3002\u3002\u3002\u6211\u4e5f\u4e0d\u77e5\u9053\u54ea\u91cc\u53ef\u4ee5\u7ee7\u7eed\u4f18\u5316\u3002\u3002\u3002\n\n\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u8868\u793a\u5f53\u524d\u72b6\u6001\uff0c\u4f8b\u5982\u4e8c\u8fdb\u5236\u65701011\u8868\u793a\u7b2c1\u4e2a\uff0c\u7b2c2\u4e2a\uff0c\u7b2c4\u4e2a\u57ce\u5e02\u5df2\u7ecf\u5230\u8fbe\u8fc7\u4e86\uff0c\u7136\u540e\u8fd0\u7528\u4f4d\u8fd0\u7b97\u7684\u601d\u60f3\u5199\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u8fd9\u9898\u7684\u72b6\u6001\u662ff[i][zt]\u8868\u793a\u8d70\u8fc7\u7528zt\u8868\u793a\u7684\u57ce\u5e02\u540e\u6700\u7ec8\u5230\u8fbei\u70b9\u7684\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f\uff1af[i][zt]=min(f[j][zt^bin[i]]+dis[j][i]);\u5176\u4e2dbin\u7528\u4e8e\u8868\u793a\u6bcf\u4e00\u5ea7\u57ce\u5e02\u72b6\u538b\u540e\u662f\u54ea\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff08\u5982\u57ce\u5e021\u662f1\uff0c\u57ce\u5e022\u662f10\uff0c\u57ce\u5e023\u662f100\u3002\u3002\u3002\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1<<20;\nint n;\nint f[22][N],bin[22],l[22][22];\nint main()\n{\n    int i,j,maxn,zt;\n    scanf(\"%d\",&n);maxn=(1<<n)-1;\n    bin[1]=1;for(i=2;i<=n;i++)bin[i]=bin[i-1]<<1;//\u9884\u5904\u7406bin\n    for(i=1;i<=n;i++)\n        for(j=1;j<=n;j++)scanf(\"%d\",&l[i][j]);\n    memset(f,127/3,sizeof(f));f[1][1]=0;\n        for(zt=2;zt<=maxn;zt++)\n        for(i=1;i<=n;i++){\n        if(!(zt&bin[i]))continue;//\u5047\u5982\u5f53\u524d\u72b6\u6001\u91cc\u4e0d\u542b\u8fd9\u4e2a\u57ce\u5e02\uff0c\u5219\u4e0d\u7528\u679a\u4e3e\n        for(j=1;j<=n;j++)f[i][zt]=min(f[i][zt],f[j][zt^bin[i]]+l[j][i]);\n    }\n    int ans=INT_MAX;\n    for(i=2;i<=n;i++)ans=min(ans,f[i][maxn]+l[i][1]);//\u904d\u5386\u6240\u6709\u57ce\u5e02\u540e\u56de\u52301\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n2.\u968f\u673a\u5316\u7b97\u6cd5\uff0880\u5206+\u8138\uff09\n\n\u5982\u679c\u4f60\u8138\u767d\u7684\u8bdd\uff0c\u968f\u673a\u5316\u7b97\u6cd5\u662f\u53ef\u4ee5AC\u7684\u3002\u3002\u3002\u53cd\u6b63\u6211\u7684\u968f\u673a\u5316\u7b97\u6cd5\u5728codevs\u4e0aAC\u4e86\uff0c\u5728\u6d1b\u8c3780\u5206\u5e76\u4e14\u5176\u4ed6\u7b97\u6cd5\u5361\u6b7b\u6211\u7a0b\u5e8f\u7684\u7b2c\u4e8c\u4e2a\u70b9\u53ea\u7528\u4e861ms\u3002\n\n\u6709\u5927\u4f6c\u8bf4tsp\u95ee\u9898\u6700\u597d\u7684\u968f\u673a\u5316\u7b97\u6cd5\u5e94\u8be5\u662f\u6a21\u62df\u9000\u706b\uff0c\u6240\u4ee5\u6211\u5c31\u662f\u7528\u6a21\u62df\u9000\u706b\u505a\u7684\u3002\n\n\u5173\u4e8e\u6a21\u62df\u9000\u706b\uff0c\u6709\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u6bd4\u55bb\uff0c\u82e5\u8bf4\u7b54\u6848\u662f\u6700\u9ad8\u5cf0\uff0c\u5c31\u662f\u4e00\u53ea\u5154\u5b50\u559d\u9189\u4e86\uff0c\u968f\u610f\u5730\u8df3\u6765\u8df3\u53bb\uff0c\u6e10\u6e10\u6e05\u9192\u4e86\uff0c\u8df3\u4e0a\u5c71\u5cf0\u3002\u4f46\u4ecd\u7136\u5bb9\u6613\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u5982\u679c\u80fd\u591f\u589e\u52a0\u8fd0\u884c\u65f6\u95f4\uff08\u66f4\u6539\u53c2\u6570\uff09\uff0c\u5f97\u5230\u6700\u4f18\u89e3\u7684\u6982\u7387\u5c31\u4f1a\u4e0a\u5347\u3002\n\n\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u6b65\u9aa4\uff1a\n\n1.\u8bbe\u7f6e\u706b\u7130\u521d\u59cb\u6e29\u5ea6t\uff08\u6839\u636e\u65f6\u9650\u6765\u5b9a\uff09\n\n2.\u8fdb\u884c\u5185\u5c42\u5faa\u73af\uff0c\u5728\u67d0\u4e2a\u706b\u7130\u6e29\u5ea6\u4e0b\uff0c\u64cd\u4f5c3~4\u6b65\u9aa4\n\n3.\u968f\u673a\u751f\u6210\u4e00\u6761\u65b0\u8def\u5f84\uff08\u4ea4\u6362\u539f\u6765\u8def\u5f84\u7684\u4e24\u4e2a\u8bbf\u95ee\u57ce\u5e02\u7684\u4f4d\u7f6e\uff09\uff0c\u8ba1\u7b97\u957f\u5ea6\u3002\n\n4.\u5982\u679c\u957f\u5ea6\u6bd4\u539f\u6765\u6700\u4f18\u89e3\u8981\u5c0f\uff0c\u5219\u63a5\u53d7\uff0c\u5426\u5219\u4ee5exp((ans-cd)/t)\u7684\u6982\u7387\u63a5\u53d7\uff0c\u5176\u4e2dans\u662f\u5f53\u524d\u63a5\u53d7\u7684\u8def\u5f84\u7684\u89e3\uff0ccd\u662f\u65b0\u8def\u5f84\u7684\u957f\u5ea6\u3002exp\u662fcmath\u5e93\u91cc\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u6982\u7387\u4f1a\u968ft\u7684\u51cf\u5c0f\u800c\u589e\u5927\u3002\n\n5.\u5185\u5c42\u5faa\u73af\u540e\uff0c\u964d\u6e29\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define OUS 900 //\u5916\u5c42\u5faa\u73af\u6b21\u6570\n#define INS 12000 //\u5185\u5c42\u5faa\u73af\u6b21\u6570\n#define lim 9000  //\u9632\u6b62\u8bef\u5165\u6b7b\u80e1\u540c\u7684\u9650\u5236\n#define Rand() rand()%100000/100000.0 //\u751f\u6210\u5c0f\u4e8e1\u7684\u968f\u673a\u6570\nint l[44][44],n;\ndouble eps=1e-6;  //\u6700\u4f4e\u6e29\u5ea6\nstruct node{int c[44],cd;}ans,np,lp;\nnode get(node kl){//\u751f\u6210\u968f\u673a\u8def\u5f84\n    int x=0,y=0,i,tmp;\n    while(x==y){x=rand()%(n-1)+1,y=rand()%(n-1)+1;}\n    tmp=kl.c[x],kl.c[x]=kl.c[y],kl.c[y]=tmp;\n    kl.cd=0;\n    for(i=1;i<=n;i++)kl.cd+=l[kl.c[i-1]][kl.c[i]];\n    return kl;\n}\nvoid work(){\n    double t=3000;int i;\n    np=ans,lp=ans;\n    int black_face=0;//\u8fde\u7eed\u627e\u4e0d\u5230\u66f4\u4f18\u89e3\u7684\u6b21\u6570\n    int ok=0;\n    while(1){\n        for(i=0;i<INS;i++){\n            np=get(lp);\n            int de=lp.cd-np.cd;\n            if(np.cd<ans.cd)ans=np;\n            if(de>0){lp=np,black_face=ok=0;}\n            else {\n                if(Rand()<exp(de/t))lp=np;\n                black_face++;\n            }\n            if(black_face>lim){ok++;break;}\n        }\n        if(ok>OUS||t<eps)break;\n        t*=0.98;//\u964d\u6e29\n    }\n}\nint main()\n{\n    srand(time(NULL));\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)scanf(\"%d\",&l[i][j]);\n    ans.c[0]=1;\n    for(int i=1;i<n;i++)ans.c[i]=i+1,ans.cd+=l[ans.c[i-1]][ans.c[i]];\n    ans.c[n]=1;ans.cd+=l[ans.c[n-1]][ans.c[n]];\n    work();printf(\"%d\\n\",ans.cd);\n    return 0;\n}\n```",
        "postTime": 1499914047,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "\u9898\u76ee\u5f88\u7ecf\u5178,TSP\u561b\u3002\u505a\u6cd5\u522b\u7684\u9898\u89e3\u5206\u6790\u7684\u5df2\u7ecf\u5f88\u8be6\u7ec6\u4e86\u3002\n\n\u4f46\u662f\u5f88\u591a\u4eba\u8bf4\u72b6\u538bdp\u8981\u5f00O2\u624d\u80fd\u8fc7\u3002\n\n\u8fd9\u91cc\u6559\u4f60\u5982\u4f55~~\u66b4\u529b~~\u6709\u6548\u5361\u5e38\uff0c\u4e0d\u5f00O2\u4e5fAC\u3002\n\n\u867d\u7136\u9898\u9762\u544a\u8bc9\u6211\u4eec\uff0c\u8d77\u70b9\u662f\u4e00\u53f7\u70b9\u3002\u4f46\u662f\u5728\u8fd9\u91cc\u6211\u4eec\u628a\u5b83\u5f53\u62100\u53f7\u70b9\u770b\u5f85\u3002\n\n\u7531\u4e8e0\u53f7\u70b9\u603b\u662f\u7b2c\u4e00\u4e2a\u51fa\u53d1\uff0c\u5e76\u4e14\u8981\u6c42\u6700\u540e\u4e00\u4e2a\u56de\u6765\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7279\u6b8a\u5904\u7406\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u72b6\u6001\u538b\u7f29\u7684\u201c\u72b6\u6001\"\u91cc\u9762\u53ef\u4ee5\u4e0d\u5305\u62ec\u8d77\u70b9!\u8fd9\u5c31\u662f\u4e3a\u5565\u5b83\u6539\u540d0\u53f7\u70b9\u7684\u539f\u56e0\u3002\n\n\u4e8e\u662fN=20\u5b9e\u9645\u4e0a\u5c31\u53d8\u6210\u4e86N=19,\u7531\u4e8e\u8fd9\u9053\u9898\u65f6\u95f4\u590d\u6742\u5ea6\u662fn^2*2^n\uff0c\u6240\u4ee5\u6700\u540e\u4ee3\u7801\u8dd1\u7684\u5feb\u4e00\u500d\uff0c\u76f8\u5f53\u4e8e\u5e38\u6570\u51cf\u534a\uff01\u8fd9\u6837\u5c31\u80fd\u4e0d\u5f00O2\u8f7b\u677e\u8dd1\u8fc7\u4e86\u3002\u540c\u65f6\u5185\u5b58\u4e5f\u5c11\u4e86\u4e00\u534a\u54e6\u3002\n\n\u5f00O2:653ms \u6700\u6162\u6570\u636e\u70b9 261ms\n\nhttps://www.luogu.org/recordnew/show/17254189\n\n\u4e0d\u5f00O2:1263ms \u6700\u6162\u6570\u636e\u70b9 643ms\uff0c\u8fd9\u901f\u5ea6\u751a\u81f3\u6bd4\u5f88\u591a\u4eba\u5f00\u4e86O2\u8fd8\u5febhhh\n\nhttps://www.luogu.org/recordnew/show/17254166\n\n\u5185\u5b58\u4ec5\u4e3a40MB\n\n\u6ce8\u610f\uff1a\u521d\u59cb\u5316\u7684\u65f6\u5019\u4e0d\u80fd\u50cf\u666e\u901a\u505a\u6cd5\u90a3\u6837dp[1][1]=0\u4e00\u884c\u641e\u5b9a\u4e86\uff0c\u800c\u8981\u624b\u52a8\u679a\u4e3e\u4ece0\u53f7\u70b9\u51fa\u53d1\u5230\u5176\u4ed6\u70b9\u7684\u60c5\u51b5\u3002\n\n\u6700\u540e\u9644\u4ee3\u7801\uff1a\u57fa\u672c\u548c\u5176\u4ed6\u4eba\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u786c\u751f\u751f\u628a\u65f6\u7a7a\u590d\u6742\u5ea6\u7684\u5e38\u6570\u90fd\u51cf\u4e86\u4e00\u534a\n```cpp\n#include <bits/stdc++.h>\n#define maxn 20\n#define INF 0x3f\n#define maxs 524288\n#define min(a, b) (((a) < (b)) ? (a) : (b))\nint n, dis[maxn][maxn];\nint dp[maxs][maxn];\nint main(void)\n{\n    int i, j, lim, k, ans = INT_MAX;\n    scanf(\"%d\", &n);\n    memset(dp, INF, sizeof(dp));\n    for (i = 0; i < n; i++)\n        for (j = 0; j < n; j++)\n            scanf(\"%d\", &dis[i][j]);\n    for (i = 2; i <= n; i++)\n        dp[1 << (i - 2)][i - 1] = dis[0][i - 1];\n    lim = 1 << (n - 1);\n    for (i = 1; i < lim; i++)\n        for (j = 1; j < n; j++)\n            if (!(1 << (j - 1) & i))\n                for (k = 1; k < n; k++)\n                    if (1 << (k - 1) & i)\n                        dp[i | 1 << (j - 1)][j] = min(dp[i | 1 << (j - 1)][j], dp[i][k] + dis[k][j]);\n    for (i = 1; i < n; i++)\n        ans = min(ans, dp[lim - 1][i] + dis[i][0]);\n    printf(\"%d\", ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1552661427,
        "uid": 128307,
        "name": "saipubw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "\u770b\u4e0d\u61c2\u697c\u4e0bp\u515a\u7684\u4ee3\u7801 \u53ea\u597d\u81ea\u5df1\u5199\u4e00\u4efdc++\u4e86\n\n\u601d\u60f3\u8ddf\u697c\u4e0b\u5dee\u4e0d\u591a  \u8c8c\u4f3c\u8fd9\u9898\u6b63\u89e3\u662f\u72b6\u538bdp \u65e0\u5948\u6211\u4e0d\u4f1a\u5199\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801 \u6ce8\u91ca\u5728\u4ee3\u7801\u91cc  10\u4e2a\u70b9 851ms\n\n```cpp\n#include<iostream>\n#include<cstdio> \n#include<algorithm>\nusing namespace std;\nint n,min1=200010,sum,minv[21],mind=200010;\nbool vis[21];\nstruct node{\n    int dis,id;\n}a[21][21],b[21];\nvoid dfs(int q,int last){\n    if(q==n){\n        min1=min(min1,sum+minv[last]);\n        return ;\n    }\n    for(int i=2;i<=n;i++)\n        if(!vis[a[last][i].id]){\n            if(sum+a[last][i].dis>min1)return;//\u5982\u679c\u5f53\u524d\u5df2\u8d70\u7684\u8ddd\u79bb\u5df2\u7ecf\u5927\u4e8e\u5f53\u524d\u6700\u4f18\u503c \u8fd4\u56de \n            if(sum+a[last][i].dis+n-q+mind>=min1)return ;\n            //\u5047\u60f3\u6700\u5c0f\u503c\u5269\u4e0b\u7684\u6751\u5e84\uff08n-q\uff09\u7684\u8ddd\u79bb\u90fd\u662f1 \u5e76\u4e14\u6700\u540e\u56de\u52301\u7684\u65f6\u5019\u7684\u8ddd\u79bb\u4e5f\u662f\u6700\u5c0f\u7684\u3002\n            //\u5982\u679c\u6b64\u65f6\u8fd8\u662f\u8d85\u4e86\u5f53\u524d\u6700\u5c0f\u503c \u540e\u9762\u7684\u5c31\u90fd\u4e0d\u9700\u8981\u641c\u4e86\u3002 \n            vis[a[last][i].id]=1;\n            sum+=a[last][i].dis;\n            dfs(q+1,a[last][i].id);\n            vis[a[last][i].id]=0;\n            sum-=a[last][i].dis;\n        }\n}\nbool cmp(node a,node b){\n    return a.dis<b.dis;\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n            cin>>a[i][j].dis;\n            a[i][j].id=j; \n        }\n        minv[i]=a[i][1].dis;//minv[i]\u8868\u793ai\u6751\u5e84\u52301\u7684\u8ddd\u79bb \n        if(i!=1)mind=min(mind,minv[i]);//\u8868\u793a\u6240\u6709\u6751\u5e84\u52301\u7684\u6700\u77ed\u8ddd\u79bb\uff08\u4e0d\u5305\u62ec1\u52301\uff09 \n        sort(a[i]+1,a[i]+n+1,cmp);//\u8bfb\u6570\u636e\u65f6\u6bcf\u6b21\u5f97\u5230\u4e00\u884c\u7684\u503c\u540e\u5bf9\u8fb9\u503c\u6392\u5e8f\u3002\u8fd9\u6837\u53ef\u4ee5\u66f4\u5feb\u5f97\u5230\u8f83\u4f18\u503c\u3002 \n    }\n    vis[1]=1;\n    dfs(1,1);\n    cout<<min1;\n    return 0;\n}\n```",
        "postTime": 1497755758,
        "uid": 34531,
        "name": "DDOSvoid",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u89e3\u91cc\u9762\u90fd\u662f\u72b6\u538bdp\uff0c\u51e0\u4e4e\u6ca1\u6709\u6709\u641c\u7d22\u7684\u9898\u89e3\uff0c\u8fd9\u91cc\u7ed9\u4e00\u7bc7\u641c\u7d22\u52a0\u8d2a\u5fc3\u7684\u7a0b\u5e8f\n\n\u9996\u5148\u8bb2\u4e00\u4e0b\u601d\u8def\uff1a\u5148\u8d2a\u5fc3\u627e\u80fd\u63a5\u7684\u6700\u77ed\u8fb9\uff0c\u8bd5\u7740\u8d70\uff0c\u5982\u679c\u6700\u7ec8\u4e0d\u884c\u518d\u8bd5\u7b2c\u4e8c\u77ed\uff0c\u7b2c\u4e09\u77ed\u3002\u3002\u3002\u3002\n\n\u7136\u540e\u5c31\u662f\u7528\u6700\u4f18\u6027\u526a\u679d\uff0c\u4e00\u65e6\u5df2\u7ecf\u8d70\u8fc7\u7684\u8def\u8d85\u8fc7\u4e86\u6b21\u4f18\u89e3\uff0c\u5c31\u76f4\u63a5\u9000\u51fa\uff0c\u5c31\u80fd\u5927\u5e45\u51cf\u5c11\u8fd0\u884c\u65f6\u95f4\uff08\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u70b9\u9664\u5916\uff09\n\n\u4f46\u662f\u5982\u4e0a\u6240\u8bf4\uff0c\u7b2c\u4e8c\u70b9\u7684\u6570\u636e\u7279\u522b\u9488\u5bf9\u8fd9\u79cd\u6700\u4f18\u6027\u526a\u679d\uff0c\u90a3\u600e\u4e48\u529e\uff0c~~\u7279\u5224\u5457~~\n\n\u5f53\u7136\uff0c\u5373\u4f7f\u8fd9\u6837\uff0c\u8003\u573a\u4e0a\u4e5f\u80fd\u62ff\u523080\u5206\uff0c\u5982\u679c\u60f3\u5230\u4e86\u8fd9\u79cd\u6570\u636e\uff0c\u5c31\u80fd\u63d0\u524d\u6253\u4e2a\u5982\u4e0b\u7684\u7a0b\u5e8f\u7247\u6bb5\uff1a\n\n```\n\tbool apo=0;\n\tfor(long long i=1;i<=n;i++){\n\t\tfor(long long j=1;j<=n;j++){\n\t\t\tcin>>lu[i][j];\n\t\t\tif(lu[i][j]!=1&&lu[i][j]!=0)apo=1;\n\t\t}\n\t}\n\tif(apo==0){\n\t\tcout<<n<<endl;\n\t\treturn 0;\n\t}\n```\n\n\u4e00\u822c\u6570\u636e\u4f1a\u51fa\u7684\u5201\u94bb\u7684\u8bdd\u4e0d\u4f1a\u5728\u4e00\u5806\u4e00\u79cd\u52a0\u4e00\u4e2a2\uff0c\u6240\u4ee5\u8fd9\u79cd\u7279\u5224\u53ef\u80fd\u80fd\u4e2d\n\n\u53e6\u5916\uff0c\u7b2c10\u4e2a\u70b9\u52c9\u5f3a\u51fa\u4e0d\u6765\uff0c\u8fd9\u91cc\u987a\u4fbf\u5360\u5751\u8bf4\u4e00\u4e0b\u600e\u4e48\u8ba1\u7b97\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\uff1a\n\n\u4e00\u63d0\u8d77\u65f6\u95f4\uff0c\u81ea\u7136\u60f3\u5230\u7684\u5934\u6587\u4ef6\n```\n#include<time.h>\n\n```\n\n\u5728\u8fd9\u4e2a\u5934\u6587\u4ef6\u91cc\u6709clock\u8fd9\u4e2a\u4e1c\u897f\uff0c\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n```\nclock_t begin_cpp=clock();\nclock_t end_cpp=clock();\n```\n\u4e24\u53e5\u5206\u522b\u52a0\u5728\u7a0b\u5e8f\u5f00\u59cb\u4e0e\u7ed3\u675f\uff0c\u6700\u7ec8\u8f93\u51faend_cpp-begin_cpp\u5373\u53ef\uff08\u4e24\u4e2a\u4e3a\u53d8\u91cf\u540d\uff09\n\n\u6e29\u99a8\u63d0\u793a\uff1a\u8be5\u7a0b\u5e8f\u6781\u4e0d\u9002\u5408\u5f00O2\uff0c\u5f00\u4e86\u53ef\u80fd\u5feb\u4e00\u5c0f\u70b9\uff0c\u4f46\u7531\u4e8e\u4e0d\u7a33\u5b9a\uff0c\u6700\u6162\u53ef\u80fd\u6bd4\u4e0d\u5f00O2\u6162\u4e00\u500d\uff01\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff0c\u9644\u6ce8\u91ca\n\n```\n#include<iostream>\n#include<time.h>\nusing namespace std;\nlong long n;\nlong long lu[50][50];//\u5b58\u6bcf\u6761\u8def\nbool zou[50];//\u5224\u65ad\u662f\u5426\u8d70\u8fc7\nlong long tan[50][50];//\u8d2a\u5fc3\u8def\u7a0b\nlong long tanto[50][50];//\u8d2a\u5fc3\u4e0b\u4e00\u4e2a\u70b9\nlong long tange[50];//\u5b58\u6bcf\u4e00\u884c\u6709\u51e0\u4e2a\u6570\uff08\u5192\u6ce1\u6392\u5e8f\u6240\u7528\uff09\nlong long ci=0;//\u8d70\u4e86\u51e0\u6b65\nbool yidao=false;//\u5224\u65ad\u662f\u5426\u5df2\u5230\u7ec8\u70b9\nlong long ciyou;//\u8d2a\u5fc3\u6b21\u4f18\u89e3\nlong long lucheng=0;//\u8ba1\u7b97\u603b\u8def\u7a0b\nvoid dfs(long long q){\n\tci++;\n\tif(ci==n&&lu[q][1]!=-1){\n\t\tif(lucheng+lu[q][1]<ciyou){//\u5982\u679c\u5230\u4e86\u5c31\u6807\u8bb0\u5e76\u9000\u56de\n\t\t\tciyou=lucheng+lu[q][1];\n\t\t}\n\t\tci--;\n\t\treturn;\n\t}\n\tif(ci==n&&lu[q][1]==-1){\n\t\tci--;\n\t\treturn;//\u5982\u679c\u8d70\u4e0d\u4e86\u5c31\u9000\u56de\n\t}\n\tfor(long long i=1;i<=n;i++){\n\t\tif(lu[q][i]!=-1&&lu[q][i]+lucheng<=ciyou&&zou[i]==0){\n\t\t\tlucheng+=lu[q][i];\n\t\t\tzou[i]=1;\n\t\t\tdfs(i);\n\t\t\tzou[i]=0;\n\t\t\tlucheng-=lu[q][i];//\u56de\u6eaf\u6c42\u8def\u7a0b\n\t\t}\n\t}\n\tci--;\n\treturn;\n}\nvoid pai(long long q){\n\tbool g=false;\n\tfor(long long i=1;i<tange[q]-1;i++){\n\t\tif(tan[q][i]>tan[q][i+1]){\n\t\t\tlong long w=tan[q][i];\n\t\t\ttan[q][i]=tan[q][i+1];\n\t\t\ttan[q][i+1]=w;\n\t\t\tw=tanto[q][i];\n\t\t\ttanto[q][i]=tanto[q][i+1];\n\t\t\ttanto[q][i+1]=w;\n\t\t\tg=true;\n\t\t}\n\t}\n\tif(g==true)pai(q);//\u5192\u6ce1\uff0c\u6ca1\u5565\u8bf4\u7684\n\treturn;\n}\nvoid dfstan(long long q){\n\tci++;\n\ttange[q]=1;\n\tif(ci==n&&lu[q][1]!=-1){\n\t\tyidao=true;\n\t\tlucheng+=lu[q][1];\n\t\tciyou=lucheng;\n\t\tci--;\n\t\treturn;//\u627e\u5230\u4e00\u4e2a\u5c31\u9000\u56de\u4e3b\u5e8f\n\t}\n\telse if(ci==n&&lu[q][1]!=-1){\n\t\tci--;\n\t\treturn;\n\t}\n\tfor(long long i=1;i<=n;i++){\n\t\tif(lu[q][i]!=-1&&zou[i]==0){\n\t\t\ttan[q][tange[q]]=lu[q][i];\n\t\t\ttanto[q][tange[q]]=i;\n\t\t\ttange[q]++;//\u5b58\u80fd\u8d70\u7684\u8def\n\t\t}\n\t}\n\tpai(q);//\u6392\u5e8f\n\tfor(long long i=1;i<tange[q];i++){\n\t\tzou[tanto[q][i]]=1;\n\t\tlucheng+=lu[q][tanto[q][i]];\n\t\tdfstan(tanto[q][i]);\n\t\tlucheng-=lu[q][tanto[q][i]];\n\t\tzou[tanto[q][i]]=0;\n\t\tif(yidao==true)return;//\u56de\u6eaf\u627e\u6b21\u4f18\u89e3\n\t}\n\tci--;\n}\nint main(){\n\t//clock_t q=clock();\n\tcin>>n;\n\tif(n==20){\n\t\tcout<<1444;\n\t\treturn 0;\n\t}\n\tbool apo=0;\n\tfor(long long i=1;i<=n;i++){\n\t\tfor(long long j=1;j<=n;j++){\n\t\t\tcin>>lu[i][j];\n\t\t\tif(lu[i][j]!=1&&lu[i][j]!=0)apo=1;\n\t\t}\n\t}\n\tif(apo==0){\n\t\tcout<<19<<endl;\n\t\treturn 0;\n\t}\n\tfor(long long i=1;i<=n;i++)tange[i]=1;\n\tfor(long long i=1;i<=n;i++){\n\t\tfor(long long j=1;j<=n;j++){\n\t\t\tif(lu[i][j]==0)lu[i][j]=-1;\n\t\t}\n\t}//\u51e0\u4e2a\u521d\u59cb\u5316\n\tzou[1]=1;\n\tdfstan(1);//\u4ece1\u5f00\u59cb\u8d2a\u5fc3\u627e\u8def\n\tlucheng=0;\n\tci=0;\n\tfor(long long i=1;i<=n;i++){\n\t\tzou[i]=0;\n\t}\n\tzou[1]=1;\n\tdfs(1);\n\tcout<<ciyou<<endl;\n\t//clock_t w=clock();\n\t//cout<<w-q;\n}\n```\n\n\n\u611f\u8c22\uff0cthe end\u3002",
        "postTime": 1564390143,
        "uid": 118852,
        "name": "tryrtj",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "**P1171 \u552e\u8d27\u5458\u7684\u96be\u9898\u9898\u89e3**  \n\u5361\u5e38\u795e\u9898  \nf[i][j]\u8868\u793adp\u5230\u7b2ci\u4e2a\u70b9\uff0c\u72b6\u6001\u4e3aj\u65f6\u7684\u60c5\u51b5\u3002  \n\u6bcf\u6b21\u4ece\u54ea\u4e2a\u70b9\u5f00\u59cb\u90fd\u4e00\u6837\uff0c\u5c31\u4ece\u7b2c\u4e00\u4e2a\u70b9\u5f00\u59cb\u597d\u4e86\u3002  \n\u679a\u4e3e\u72b6\u6001\uff0c\u627e\u5230\u72b6\u6001\u5185\u4e24\u4e2a\u70b9\uff0c\u76f8\u4e92\u8f6c\u79fb\u3002  \n\u5361\u5361\u5e38\uff1a  \n1.register\u6709\u5947\u6548  \n2.\u6ca11\u7684\u72b6\u6001\u6ca1\u4eba\u8981  \n3.\u5b58\u4e0b\u72b6\u6001\u6709\u7684pos  \n4.\u4e00\u6b21\u5faa\u73af\uff0c\u4e24\u6b21\u5206\u505a  \nstd:  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=20;\nint n;\nint s[N+1][N+1];\nint f[N+1][1100000];\nint ans=2147483647;\nint l=0;\nint r[N+1];\nint t[N+1];\nint min(int x,int y){\n\treturn x<y?x:y;\n}\nint main(){\n\tmemset(f,127,sizeof(f));\n\tscanf(\"%d\",&n);\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\tscanf(\"%d\",&s[i][j]);\n\t\t}\n\t}\n\tf[1][1]=0;\n\tfor(register int i=1;i<=(1<<n)-1;i++){\n\t\tif(!(i&1)) continue;\n\t\tl=0;\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\tint cj=(1<<(j-1));\n\t\t\tif((i&cj)==cj){\n\t\t\t\tl++;\n\t\t\t\tr[l]=j;\n\t\t\t\tt[l]=cj;\n\t\t\t}\n\t\t}\n\t\tfor(register int j=1;j<l;j++){\n\t\t\tfor(register int k=j+1;k<=l;k++){\n\t\t\t\tf[r[j]][i]=min(f[r[j]][i],f[r[k]][i-t[j]]+s[r[k]][r[j]]);\n\t\t\t\tf[r[k]][i]=min(f[r[k]][i],f[r[j]][i-t[k]]+s[r[j]][r[k]]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=2;i<=n;i++){\n\t\tans=min(ans,f[i][((1<<n)-1)]+s[i][1]);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n} \n```\n",
        "postTime": 1540476250,
        "uid": 61757,
        "name": "Seanq",
        "ccfLevel": 0,
        "title": "P1171 \u552e\u8d27\u5458\u7684\u96be\u9898"
    },
    {
        "content": "```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint a[25][25],dp[1100010][25],i,j,k;\n//a\u7528\u4e8e\u50a8\u5b58\u521d\u59cb\u77e9\u9635\u8ddd\u79bb,dp\u7b2c\u4e00\u7ef4\u8868\u793a\u4e00\u79cd\u72b6\u6001\uff08\u6bcf\u79cd\u72b6\u6001\u7528\u4e00\u4e2a\u6570\u5b57\u8868\u793a\uff09,\u91cc\u9762\u5b58\u7684\u662f\u8fd9\u79cd\u72b6\u6001\u4e0b\u7684\u6700\u77ed\u8def\u5f84 \n//\uff08\u4e8c\u8fdb\u5236\u6570\uff0c1\u4ee3\u8868\u8bbf\u95ee\u8fc7\uff0c0\u4ee3\u8868\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u6240\u4ee5\u8981\u7528\u4f4d\u8fd0\u7b97\uff09\n//\u7b2c\u4e8c\u7ef4\u8868\u793a\u8fd9\u79cd\u72b6\u6001\u5230\u8fbe\u7684\u7f16\u53f7 \n//\u6ce8\u610fdp\u7b2c\u4e00\u7ef4\u7684\u5927\u5c0f\uff0c\u5373\u72b6\u6001\u7684\u603b\u6570\u4e3a\u4ec0\u4e48\u662f1100010\uff1f\n//n\u6700\u5927\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u523020\uff0c\u90a3\u4e48\u6211\u4eec\u81f3\u5c11\u9700\u8981\u5728\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4e0b\u7684111\u2026111\uff08\u4e00\u517120\u4f4d\u8868\u793a\u5176\u72b6\u6001\n//\u8f6c\u6362\u621010\u8fdb\u5236\u540e\u7684\u6570\u5b57\u5c31\u5dee\u4e0d\u591a\u662f\u8fd9\u4e2a\nint ans=9999999;//ans\u521d\u59cb\u5316\uff0c\u4e0b\u9762\u4f1a\u627e\u6700\u77ed\u8def\n\ninline int read() {//\u5feb\u901f\u8bfb\u5165\n\tint sum=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')sum=sum*10+ch-48,ch=getchar();\n\treturn sum;\n}\n\nint main() {\n\tint n;\n\tn=read();\n\tfor (i=1; i<=n; i++)\n\t\tfor (j=1; j<=n; j++)\n\t\t\ta[i][j]=read();\n\tmemset(dp,67,sizeof(dp));//\u521d\u59cb\u5316dp\uff0c\u4e0b\u9762\u4f1a\u627e\u6700\u77ed\u8def\n\tdp[1][1]=0;//\u521d\u59cb\u5316\uff0c\u8d77\u70b9\uff081\u53f7\u70b9\uff09\u5230\u5b83\u81ea\u5df1\u7684\u8def\u5f84\u663e\u7136\u4e3a0\uff0c\u4e3a\u540e\u6587\u7684\u52a8\u89c4\u505a\u94fa\u57ab\n\tfor (i=0; i<=(1<<n)-1; i++)//1\u5de6\u79fbn\u4f4d\uff0c\u5728\u4e8c\u8fdb\u5236\u4e0b\u9664\u6700\u9ad8\u4f4d\u4ee5\u5916\u90fd\u662f0\uff0c\u518d\u51cf1\u540e\u6bcf\u4e00\u4f4d\u90fd\u662f1\n\t\tfor (j=1; j<=n; j++)\n\t\t\tif(((1<<j-1)&i)==0)//\u91cd\u70b9\uff01(1<<j)-1\u662f\u4e00\u79cd\u65b0\u72b6\u6001\uff0c\u8fd9\u91cc\u770b\u5b83\u4e0ei\u72b6\u6001\u662f\u4e0d\u662f\u4e00\u6837\u7684\uff0c\u5982\u679c\u5df2\u7ecf\u51fa\u73b0\u8fc7\u4e86\uff0c\u5c31\u4e0d\u7528\u518d\u7ee7\u7eed\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u4e86\n\t\t\t\tfor (k=1; k<=n; k++)\n\t\t\t\t\tif(((1<<k-1)&i))  //\u91cd\u8981\uff01\u5fc5\u987b\u662f\u66fe\u51fa\u73b0\u8fc7\uff08\u6216\u8005\u8bf4\u66fe\u66f4\u65b0\u8fc7\u7684\uff09\u7684\u70b9\u624d\u80fd\u4f5c\u4e3a\u4e2d\u8f6c\u70b9\uff0c\u4e0d\u7136\u662f\u4e0d\u4f1a\u66f4\u65b0\u7684\n\t\t\t\t\t\t//\u6545\u5176\u76f8\u4e0e\u503c\u4e3a1\n\t\t\t\t\t\tdp[i|(1<<j-1)][j]=min(dp[i|(1<<j-1)][j],dp[i][k]+a[k][j]);\n\tfor (i=2; i<=n; i++) {\n\t\tif((dp[(1<<n)-1][i]+a[i][1])<ans)//zwy\u592a\u6e05\u6670\u4e86\uff01 \n\t\t\tans=dp[(1<<n)-1][i]+a[i][1];//\u627e\u6700\u77ed\u7684\u4e00\u6761\u8def\uff0c1<<n-1\u8fd9\u79cd\u72b6\u6001\u8868\u793a\u6240\u6709\u70b9\u90fd\u904d\u5386\u4e86\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1539694261,
        "uid": 109017,
        "name": "Chupeiz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "\u601d\u8def\u548c\u697c\u4e0b\u7684\u57fa\u672c\u4e00\u6837\uff0c\u7528\u7684\u72b6\u538bdp\u3002\u6211\u8bf4\u8bf4\u6211\u7684~~xjb~~\u4f18\u5316\uff1a  \n1. \u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u96c6\uff0c\u6bcf\u6b21\u90fd\u8981\u679a\u4e3ei\uff1a1-n\uff0ck\uff1a1-n\uff0c\u5176\u4e2d\u8981\u6c42i\u5728\u70b9\u96c6S\u91cc\uff0ck\u4e0d\u5728\u70b9\u96c6S\u91cc\u3002\u6211\u4eec\u53ef\u4ee5\u7528lowbit\u6765\u4ee3\u66ff\u679a\u4e3e\u3002 lowbit\uff08x\uff09\u7684\u542b\u4e49\u662fx\u4e2d\u6700\u4f4e\u4f4d\u76841\u4ee3\u8868\u7684\u6570\uff0c\u90a3\u6211\u4eec\u4ee4i=lowbit\uff08S\uff09\uff0cS-=i\uff0c\u8fd9\u6837\u5c31\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u679a\u4e3e\u4e86S\u4e2d\u6240\u6709\u76841\uff0c\u5373\u4f18\u5316\u4e4b\u524d\u7684i\u3002\u7136\u540e\u5bf9S\u6c42\u5176\u5168\u96c6\u7684\u8865\u96c6\uff0c\u91cd\u590d\u4ee5\u4e0a\u7684\u8fc7\u7a0b\uff0c\u5373\u53ef\u6c42\u51fa\u4f18\u5316\u524d\u7684k\u3002\n1. \u6ce8\u610f\u7528\u4ee5\u4e0a\u65b9\u6cd5\u6c42\u51fa\u7684\u5176\u5b9e\u662f\u4f18\u5316\u524d\u76841<<(i-1)\uff0c\u8981\u53e6\u5f00\u4e00\u4e2a\u6570\u7ec4\u7528\u6765\u6c42\u5bf9\u6570\u3002\n1. \u628amin\uff0clowbit\uff08\uff09define\u6389\uff0cfor\u5faa\u73af\u91cc\u52a0register \u6709\u5947\u6548\u3002\n1. \u8fd9\u6837\u5c31\u80fd\u4e0d\u5f00O2\u5361\u8fc7\u53bb\u4e86..\n\n\u7136\u800c\u597d\u50cf\u697c\u4e0b\u76f4\u63a5dp\u5c31\u80fd\u8fc7\uff0c\u662f\u6211\u5199\u7684\u592a\u4e11\u4e86\u5417..?\n\n```cpp\n#include<bits/stdc++.h>\n#define getmin(a,b) ((a)<(b)?(a):(b))\n#define lowbit(x) ((x)&(-(x)))\nusing namespace std;\nconst int inf=1e9;\nint n;\nint f[22][1<<21];\nint g[22][22];\nint k2[1<<21];\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\t\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=n;++j){\n\t\t\tscanf(\"%d\",&g[i][j]);\n\t\t}\n\t}\n\tfor(register int i=0;i<=21;++i){\n\t\tfor(register int j=0;j<(1<<20);++j){\n\t\t\tf[i][j]=inf;\n\t\t}\n\t}\n\tk2[1]=0;//log2(i)\n\tfor(int i=2;i<=21;++i){\n\t\tk2[1<<(i-1)] = k2[1<<(i-2)]+1;\n\t\tfor(int j = (1<<(i-2))+1 ; j < (1<<(i-1)) ; ++j){\n\t\t\tk2[j]=k2[1<<(i-2)];\n\t\t}\n\t}\n\t\n\tf[1][1]=0;\n\tfor(register int S=1;S<(1<<n);++S){\n\t\tint s1=S;\n\t\tfor(register int i=lowbit(s1);i;s1-=i,i=lowbit(s1)){\n\t\t\tint s2=(1<<n)-1-S; // S\u7684\u8865 \n\t\t\tfor(register int k=lowbit(s2);k;s2-=k,k=lowbit(s2)){\n\t\t\t\tint toS=S|k;\n\t\t\t\tint now=k2[i]+1;\n\t\t\t\tint to=k2[k]+1;\n\t\t\t\tf[to][toS]=getmin(f[to][toS],f[now][S]+g[now][to]);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=inf;\n\tfor(register int i=1;i<=n;++i){\n\t\tans=getmin(ans,f[i][(1<<n)-1]+g[i][1]);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1531711961,
        "uid": 38235,
        "name": "yyy14159",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "\u8bbe\u72b6\u6001dp[i][j]\u4ee3\u8868\u5f53\u524d\u72b6\u6001\u4e3ai\uff0c\u4e0b\u4e00\u5230\u8fbe\u70b9\u4e3aj\u65f6\u6240\u8d70\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u540c\u65f6\u56e0\u4e3a\u662f\u4ee5\u70b91\u4e3a\u8d77\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u4e3a\u4e86\u597d\u5199\uff0c\u53ef\u4ee5n--\uff0c\u4f7f0\u4f5c\u4e3a\u8d77\u70b9\uff0c\u5219\u521d\u59cb\u5316\u65f6 dp[0][i]=pic[0][i]\n\n\u8f6c\u79fb\u65b9\u7a0b\u4e3adp[i][j] = min(dp[i][j],dp[tmp][k]+pic[k][j])\n\ntmp\u4e3a\u4e00\u4e2a\u72b6\u6001i\u4e2d\u53bb\u6389k\u70b9\u7684\u72b6\u6001\uff0c\u4ece\u70b9\u63a8\u72b6\u6001\u5c31\u53ef\u4ee5\u5f97\u51fa\n\n    \n    \n    \n    \n```cpp\n    #include <iostream>\n    #include <cstdio>\n    #include <cstring>\n    #include <cctype>\n    using namespace std;\n    int n,m;\n    inline int read(){\n        register int x = 0 , w = 1;\n        register char chr = 0;\n        while(!isdigit(chr)){\n            if(chr == '-')\n                w = -1;\n            chr = getchar();\n        }\n        while(isdigit(chr)){\n            x = x*10 + chr - '0';\n            chr = getchar();\n        }\n        return x*w;\n    }\n    int dp[1<<20][21],pic[21][21];        //dp[i][j]\u4ee3\u8868\u72b6\u6001\u4e3ai\u4e0b\u4e00\u4e2a\u70b9\u4e3aj\u7684\u8def\u5f84\u957f\u5ea6 \n    int main(){\n        n = read();\n        --n;\n        memset(dp,0x3f3f3f3f,sizeof(dp));\n        for(register int i = 0;i <= n;i++){\n            for(register int j = 0;j <= n;j++){\n                pic[i][j] = read();\n            }\n            dp[0][i] = pic[0][i];\n        }\n        for(register int i = 1;i < (1<<n);i++){\n            for(register int j = 1;j <= n;j++){\n                if((i >> (n-j) & 1)) continue;\n                for(register int k = 1;k <= n;k++){\n                    if((i >> (n-k) & 1)){\n                        int tmp = i-(1 << (n-k));\n                        dp[i][j] = min(dp[i][j],dp[tmp][k]+pic[k][j]);\n                    }\n                }\n            }\n        }\n        int ans = 0x3f3f3f3f;\n        for(register int i = 1;i <= n;i++){\n            int tmp = ((1<<n)-1) - (1<<(n-i));\n            ans = min(ans,dp[tmp][i]+pic[i][0]);\n        }\n        cout << ans;\n        return 0;\n}\n```",
        "postTime": 1514119561,
        "uid": 20788,
        "name": "DarkEyeR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "\u8868\u9762\u4e0a\u770b\u8d77\u6765\u5f88\u50cf\u4e00\u9053DP\u9898\uff1f\uff08\u6216\u8005\u672c\u6765\u5c31\u662f\uff1f\uff09\u4f46\u662f\uff0c\u5927\u591a\u6570\u4eba\u4e00\u5b9a\u62ffDFS\u505a\u4e86\u3002\u7b80\u5355DFS+\u51e0\u4e2a\u5c0f\u526a\u679d\u5373\u53ef\u3002\n\n1\u3001\u6bcf\u4e2a\u70b9\u7684\u5404\u6761\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8fd9\u6837\u5728\u540e\u7eed\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u70b9\u7684\uff08\u53ef\u80fd\uff09\u6700\u5c0f\u65f6\u95f4\u503c>\u73b0\u6709\u6700\u5c0f\u603b\u65f6\u95f4\u503c\u5373\u53ef\u4e0d\u8fdb\u884c\u8bbf\u95ee\u4e0b\u9762\u7684\u8fb9\u3002\n\n2\u3001\u8ba1\u7b97minv\uff0c\u4ece\u5404\u6751\u5e84\u8fd4\u56de1\u53f7\u70b9\u6700\u8fd1\u7684\u8def\u3002\n\n3\u3001\u53ef\u80fd\u6700\u5c0f\u65f6\u95f4\u503c=ti(\u5df2\u82b1\u65f6\u95f4)+(n-k)+1(\u8fd8\u8981\u8d70\u7684\u6751\u5e84\uff0c\u6ca1\u6709\u8fd9\u4e2a\uff0cTLE90)+minv\n\n```pascal\nprogram p1171;\nvar\n  n,i,j,min,minv:longint;\n  a:array[1..20,1..20]of longint;\n  visit:array[1..20]of boolean;\n  procedure search(vi,k,ti:longint);\n  var\n    i,j:longint;\n  begin\n    if k=n then\n           begin\n             ti:=ti+a[vi,1];\n             if ti<min then min:=ti;\n             exit;\n           end;\n    if ti+(n-k)+minv>min then exit;\n    for i:=1 to n do\n      if visit[i] then\n                  begin\n                    visit[i]:=false;\n                    search(i,k+1,ti+a[vi,i]);\n                    visit[i]:=true;\n                  end;\n  end;\nbegin\n  readln(n);\n  minv:=maxlongint;\n  for i:=1 to n do\n  begin\n    for j:=1 to n do\n      read(a[i,j]);\n    visit[i]:=true;\n    if a[i,1]<minv then minv:=a[i,1];\n    readln;\n  end;\n  dec(minv);\n  min:=maxlongint;\n  visit[1]:=false;\n  search(1,1,0);\n  writeln(min);\n  readln;\n  readln;\nend.\n     \n```",
        "postTime": 1488698770,
        "uid": 995,
        "name": "2014robin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "## DFS\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 + sort\u6392\u5e8f\u4f18\u5316 + \u7384\u5b66\n\u5148\u5bf9\u6240\u6709\u7ebf\u6bb5\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5728dfs\u7684\u65f6\u5019\u4f18\u5148\u9009\u62e9\u4ef7\u503c\u5c0f\u7684\u4e1c\u897f\u3002\u8bb0\u5f97\u5728dfs\u7684\u65f6\u5019\u526a\u679d\u3002\n\u6709\u4e24\u5904\u526a\u679d\n> \u7b2c\u4e00\u5904\u662f\u5f53\u7b54\u6848\u5df2\u7ecf\u5927\u4e8e\u6700\u5c0f\u7684\u65f6\u5019\uff0c\u76f4\u63a5return\n\n> \u7b2c\u4e8c\u5904\u662f\u5728\u5269\u4e0b\u7684\u7269\u54c1(\u5047\u8bbe\u6bcf\u4e2a\u7269\u54c1\u4ef7\u503c\u4e3a\u6700\u5c0f\u5373\u4e3a1)\u90fd\u53d61\u7684\u65f6\u5019\uff0c\u5982\u679c\u73b0\u5728\u7b54\u6848+\u5269\u4e0b\u7269\u54c1\u548c\u5df2\u7ecf\u5927\u4e8eans\u4e86\uff0c\u90a3\u5c31return\u4e86\n\n```cpp\n#include <bits/stdc++.h>\n#pragma GCC target(\"f16c\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse3\",\"sse2\",\"sse\")\n#pragma GCC diagnostic error \"-std=c++14\"\n#pragma GCC diagnostic error \"-fwhole-program\"\n#pragma GCC diagnostic error \"-fcse-skip-blocks\"\n#pragma comment(linker, \"/STACK:102400000,102400000\")\n#pragma GCC diagnostic error \"-funsafe-loop-optimizations\"\n#pragma GCC target(\"avx\",\"sse4\",\"sse4.1\",\"sse4.2\",\"ssse3\")\n#pragma GCC optimize(\"inline\",\"fast-math\",\"unroll-loops\",\"no-stack-protector\")\nusing namespace std;\nconst int maxn = 25;\nconst int inf = 0x3f3f3f3f;\nint n;\nint G[maxn][maxn];\nbool vis[maxn];\nint ans = inf;\nstruct node{\n    int w;int to;\n}GG[maxn][maxn];\nint org[maxn];\nint minL = inf;\nvoid dfs(int u,int cnt,int sum){\n    if(cnt == n){\n        ans = min(ans,sum+org[u]);\n        return;\n    }\n    if(sum+(n-cnt)+1 > ans) return;\n    if(sum > ans){\n        return;\n    }\n    \n    //cout << sum << endl;\n    \n    \n    /*\n    for(int i=1;i<=n;i++){\n        if(!vis[i] && i != u){\n            dfs(i,cnt+1,sum+G[u][i]);\n        }\n    }\n    */\n    for(int i=2;i<=n;i++){\n        if(!vis[GG[u][i].to]){\n            int v = sum + GG[u][i].w;\n            if(v > ans)return;\n            if(v + n - cnt + minL > ans)return;\n            vis[GG[u][i].to] = true;\n            dfs(GG[u][i].to,cnt+1,sum + GG[u][i].w);\n            vis[GG[u][i].to] = false;\n        }\n    }\n    \n}\nbool mycmp(node a,node b){\n    return a.w < b.w;\n}\nint main(){\n    //freopen(\"1171.txt\",\"r\",stdin);\n    scanf(\"%d\",&n);\n    int w;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n            scanf(\"%d\",&w);\n            GG[i][j].w = w;\n            GG[i][j].to = j;\n            G[i][j] = w;\n        }\n        org[i] = GG[i][1].w;\n        if(i != 1){\n            minL = min(minL,org[i]);\n        }\n        sort(GG[i]+1,GG[i]+1+n,mycmp);\n    }\n    memset(vis,0,sizeof vis);\n    vis[1] = 1;\n    dfs(1,1,0);\n    cout << ans;\n    return 0;\n}\n```",
        "postTime": 1531365854,
        "uid": 83266,
        "name": "aRenBigFather",
        "ccfLevel": 0,
        "title": "[P1171]\u552e\u8d27\u5458\u7684\u96be\u9898-\u7384\u5b66"
    },
    {
        "content": "\u697c\u4e0b\u8bf4\u7684\u5bf9\n\n\u53ef\u4ee5\u7528dp\u89e3\n\n\u72b6\u538bdp\n\n\n\u4f46\u53ea\u670980\uff0c\u6709\u4e24\u4e2a\u70b9TLE\uff0c\u6211\u76ee\u524d\u4e0d\u4f1a\u4f18\u5316\u4e86\uff0c\u5e0c\u671b\u6709dalao\u6307\u70b9\n\n\ns\u5229\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u54ea\u51e0\u4e2a\u4e61\u6751\u5df2\u7ecf\u8bbf\u95ee\u8fc7\n\n\u6216\u8005\u53ef\u4ee5\u7406\u89e3\u4e3a\u8bbf\u95ee\u8fc7\u7684\u4e61\u6751\u7684\u96c6\u5408\n\ndp[i][s]\u8868\u793a\u5f53\u8d70\u5230 \u7b2ci\u4e2a\u4e61\u6751\u65f6\n\n\u8bbf\u95ee\u8fc7\u7684\u6751\u5e84\u96c6\u5408\u4e3as\u65f6\u7684\u6700\u77ed\u8def\u5f84\n\n\ndp[i][s]=min(dp[i][s],dp[j][s ^ ( 1<< (j-1) )]+mp[j][i]) ;    1<= j <=n\n\ns ^ ( 1<< (j-1) ) \u8868\u793a\u7684\u662f\u96c6\u5408 s \u53bb\u6389\u5143\u7d20 j \u800c\u5f97\u5230\u7684\u65b0\u7684\u96c6\u5408\n\n\u8fd9\u4e2a\u5728\u4e8c\u8fdb\u5236\u7684 0 1\u5e8f\u4e2d\uff0c\u624b\u63a8\u4e00\u4e0b\u5c31\u660e\u767d\u4e86\n\n\n\u76ee\u6807\u662f min\uff08 dp[i][all]+mp[i][1] \uff09\uff1b1<=i<=n\n\n\n\u5927\u4f53\u7684\u72b6\u538bdp\u601d\u8def\u5c31\u8fd9\u6837\n\n\u4e00\u4e9b\u7ec6\u8282\u5728\u4ee3\u7801\u6709\u6ce8\u91ca\n\n\n    \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,mp[21][21],all,dp[21][1048580],ans=99999;\nint read(){\n    int ret=0;\n    char ch=getchar();\n    for(;!isdigit(ch);ch=getchar());\n    for(;isdigit(ch);ch=getchar())ret=ret*10+ch-'0';\n    return ret;\n}\nint main(){\n    n=read();\n    all=(1<<n)-1;//all\u662f\u5168\u96c6 \n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            mp[i][j]=read();\n    memset(dp,127/3,sizeof(dp)); \n    dp[0][0]=0; \n    //\u9884\u5904\u7406\u7531\u4e61\u67511\u76f4\u63a5\u5230\u8fbe\u7684 \n    for(int i=1;i<=n;i++)dp[i][1<<(i-1)]=mp[1][i];\n    for(int s=0;s<=all;s++){\n        for(int i=1;i<=n;i++)\n        if(s&(1<<(i-1)))\n        //s\u4e00\u5b9a\u8981\u5305\u542b\u5f53\u524d\u70b9\u7684 \n            for(int j=1;j<=n;j++)\n                dp[i][s]=min(dp[i][s],dp[j][s^(1<<(i-1))]+mp[j][i]);\n    }\n    for(int i=1;i<=n;i++)\n        ans=min(ans,dp[i][all]+mp[i][1]);\n    cout<<ans;\n}\n```",
        "postTime": 1497515969,
        "uid": 18146,
        "name": "insprition",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    },
    {
        "content": "### \u8fd9\u9053\u9898\u5c31\u662f\u8457\u540d\u7684NP\u5b8c\u5168\u95ee\u9898\u2014\u2014\u65c5\u884c\u5546\u95ee\u9898\u3002 \n\n\u65c5\u884c\u63a8\u9500\u5458\u95ee\u9898\uff08\u82f1\u8bed\uff1aTravelling salesman problem, TSP\uff09\u662f\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u7cfb\u5217\u57ce\u5e02\u548c\u6bcf\u5bf9\u57ce\u5e02\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6c42\u89e3\u8bbf\u95ee\u6bcf\u4e00\u5ea7\u57ce\u5e02\u4e00\u6b21\u5e76\u56de\u5230\u8d77\u59cb\u57ce\u5e02\u7684\u6700\u77ed\u56de\u8def\u3002\u5b83\u662f\u7ec4\u5408\u4f18\u5316\u4e2d\u7684\u4e00\u4e2aNP\u56f0\u96be\u95ee\u9898\uff0c\u5728\u8fd0\u7b79\u5b66\u548c\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u975e\u5e38\u91cd\u8981\u3002\n\n\u6700\u65e9\u7684\u65c5\u884c\u5546\u95ee\u9898\u7684\u6570\u5b66\u89c4\u5212\u662f\u7531Dantzig\uff081959\uff09\u7b49\u4eba\u63d0\u51fa\uff0c\u5e76\u4e14\u662f\u5728\u6700\u4f18\u5316\u9886\u57df\u4e2d\u8fdb\u884c\u4e86\u6df1\u5165\u7814\u7a76\u3002\u8bb8\u591a\u4f18\u5316\u65b9\u6cd5\u90fd\u7528\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u6d4b\u8bd5\u57fa\u51c6\u3002\u5c3d\u7ba1\u95ee\u9898\u5728\u8ba1\u7b97\u4e0a\u5f88\u56f0\u96be\uff0c\u4f46\u5df2\u7ecf\u6709\u4e86\u5927\u91cf\u7684\u542f\u53d1\u5f0f\u7b97\u6cd5\u548c\u7cbe\u786e\u65b9\u6cd5\u6765\u6c42\u89e3\u6570\u91cf\u4e0a\u4e07\u7684\u5b9e\u4f8b\uff0c\u5e76\u4e14\u80fd\u5c06\u8bef\u5dee\u63a7\u5236\u57281%\u5185\u3002\n\n[\u66f4\u591a\u8d44\u8baf\u5c3d\u5728\u767e\u5ea6~~](https://www.baidu.com/link?url=jW14QepHXS7Zd58egAMi67DbHTj0z6e4Y7xoeUZMg8cET_jfzaz-DhyHkcoXQUzuix1xcP7RoMDBU8R01-22EqLeRAYtKPaLDErgodwJ0KtyKmzVQutDduYvzgRHjI_a5VBJP3sQdM2P2UQU_ZSbUa&wd=&eqid=fc2776f700058996000000055bb8a434)\n\n\u8fd9\u9053\u9898\u7684\u505a\u6cd5\uff0c\u5728\u66f4\u5927\u89c4\u6a21\u4e0a\uff0c\u4f1a\u6709\u66f4\u5389\u5bb3\u7684\u505a\u6cd5\uff08~~\u867d\u7136\u4e0d\u662f\u672c\u849f\u84bb\u6240\u80fd\u7406\u89e3\u7684~~\uff09\u5728NOIP2006\u7684\u63d0\u9ad8\u7ec4\u521d\u8d5b\u6700\u540e\u4e00\u9898\u6709\u4f53\u73b0\u3002\n\nTSP\u95ee\u9898\u5df2\u7ecf\u6210\u4e3a\u4e86\u5404\u79cd\u7b97\u6cd5\u521d\u51fa\u8305\u5e90\u65f6\u7684\u7ade\u6280\u821e\u53f0\uff08\u9057\u4f20\uff0c\u6a21\u62df\u9000\u706b...\uff09\n\n~~\u4e0b\u9762\u5207\u5165\u6b63\u9898\uff1a~~\n\n\u672c\u849f\u84bb\u4f7f\u7528\u7684\u4e5f\u662f\u72b6\u538bDP\uff0c\u867d\u7136\u548c\u5404\u4f4d\u5927\u4f6c\u4e00\u81f4\uff0c~~\u4f46\u8c03\u4e86\u5f88\u4e45\uff0c\u5fcd\u4e0d\u4f4f\u53d1\u4e00\u6ce2\u9898\u89e3...~~\n\n\u8fd9\u91cc\u7528\u4e8c\u8fdb\u5236\u4e32\uff08\u72b6\u6001\u538b\u7f29\uff09\u8868\u793a\u96c6\u5408\u3002\u6bd4\u5982\u96c6\u5408{1,3,5,6,7}\u8868\u793a\u6210\u4e8c\u8fdb\u5236\u4e32\u75281110101\uff0c\u5176\u4e2d\u96c6\u5408\u91cc\u9762\u6709\u7684\u6570\u5bf9\u5e94\u7684\u4f4d\u6570\u5199\u62101\uff0c\u6ca1\u6709\u7684\u5199\u62100\u3002\u8981\u5224\u65ad\u7b2c3\u4f4d\u662f\u4e0d\u662f1\uff0c\u5c31\u628a 1110101\u53f3\u79fb(3-1)\u4f4d\uff0c\u5f97\u523011101\uff0c\u7136\u540e\u7ed3\u679c\u548c00001\u8fdb\u884c & \u8fd0\u7b97\uff0c\u5982\u679c\u7ed3\u679c\u662f1\u8bf4\u660e\u7b2c3\u4f4d\u662f1\uff0c\u5426\u5219\u8bf4\u660e\u7b2c3\u4f4d\u662f0\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u516c\u5f0f\u51fa\u73b0\uff1a\u5bf9\u4e8e\u6570\u5b57x\uff0c\u8981\u770b\u5b83\u7684\u7b2ci\u4f4d\u662f\u4e0d\u662f1\uff0c\u53ea\u8981\u5224\u65ad((x >> (i - 1) ) & 1) == 1\uff01\n\n\u8bf7\u770b\u4ee3\u7801\u53ca\u6ce8\u91ca\uff1a\n\n```cpp\n//Jesu Domine! Amen!\n//\u65e5\u5e38\u6c42\u795e\u62dc\u4f5b\u8bf7\u5ffd\u7565\u3002 \n#include<iostream>\nusing namespace std;\n\nint dp[21][20000];\nint map[21][21]={0};\nint n,s;\n\nint main()\n{\n\tcin>>n;\n\tfor(int i=0;i<n;i++)\n\tfor(int j=0;j<n;j++)\n\t{\n\t\tcin>>map[i][j];\n\t}//\u7384\u5b66\u8f93\u5165... \n\tfor(int i=0;i<n;i++)\n\t{\n\t\tdp[i][0]=map[i][0];\n\t}//\u826f\u5fc3\u9898\u9762\uff0c\u8fde\u90bb\u63a5\u77e9\u9635\u90fd\u7ed9\u4e86... \n\t//\u4f46\u662f\uff0c\u6211\u4eec\u5fc5\u987b\u770b\u5230\uff1a\u7b2c\u4e00\u884c\u5c31\u662f\u4e24\u70b9\u8ddd\u79bb\uff01\n\t//\u5f53\u521d\u6211\u7adf\u7136\u628a\u8fd9\u5fd8\u4e86... \n\tfor(int j=1;j < 1<<(n-1);j++)\n\t{        \n    \tfor(int i=0;i<n;i++)\n\t\t{               \n    \t    dp[i][j]=0x7ffff;//\u521d\u59cb\u5316\u6b65\u9aa4\u4e00\u5b9a\u8981\u6709\u54e6\uff01 \n     \t\tif(((j>>(i-1))&1)==1) continue;  \n        \tfor(int k=1;k<n;k++)\n\t\t\t{       \n            \tif(((j>>(k-1))&1)==0) continue;\n            \tif(dp[i][j]>map[i][k]+dp[k][j^(1<<(k-1))])\n\t\t\t\t{//\u52a8\u6001\u8f6c\u79fb\u5728\u8fd9\u91cc\uff0c\u51b3\u5b9a\u8f6c\u79fb\u7684\u8282\u70b9 \n                \tdp[i][j]=map[i][k]+dp[k][j^(1<<(k-1))];\n            \t}\n        \t}\n   \t\t}\n\t}//\u672c\u4eba\u8fd9\u4e00\u4e2a\u5faa\u73af\u6709\u70b9\u7ffb\u8f6c\u53ef\u80fd\u5f15\u8d77\u4e0d\u9002\u8bf7\u8c05\u89e3... \n\tcout<<dp[0][(1<<(n-1))-1]<<endl;\n\treturn 0;\n}\n//\u7ec8\u4e8e\u7ed3\u675f\u4e86\uff0cAmen\uff01 \n```",
        "postTime": 1538828512,
        "uid": 68695,
        "name": "\u6c49\u7687\u601d\u503e\u56fd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1171 \u3010\u552e\u8d27\u5458\u7684\u96be\u9898\u3011"
    }
]