[
    {
        "content": "### Description\n\n~~\u5b83 spfa \u4e86~~\n\n### Solution\n\n\u663e\u7136\u76f4\u63a5\u80e1\u4e71\u8f6c\u662f\u884c\u4e0d\u901a\u7684\u3002\n\n\u7136\u800c\u6b63\u89e3\u662f\u56fe\u8bba\u4e2d\u7684\u6700\u77ed\u8def\u3002\n\n\u90a3\u6837\u4f8b1\u6765\u8bf4\uff1a\n\n```plain\nEES\nSSW\nESX\n```\n\n\u5047\u5982\u4f60\u73b0\u5728\u8981\u4ece $(0,1)$ \u8d70\u5230 $(1,1)$\uff0c\u7684\u8bdd\uff0c\u5982\u679c\u4e0d\u7ed5\u5708\u5b50\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5c06\u4f4d\u7f6e $(0,1)$ \u7684\u7bad\u5934\u65cb\u8f6c\u4e00\u6b21\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8d70\u8fc7\u53bb\u4e86\u3002\u8fd9\u53ef\u4ee5\u62bd\u8c61\u6210\uff1a **\u4ece\u9876\u70b9** $(0,1)$ **\u6709\u4e00\u6761\u5230** $(1,1)$ **\u7684\u8fb9\uff0c\u8fb9\u6743\u4e3a1**\u3002\u5176\u4ed6\u7684\u4f4d\u7f6e\u540c\u7406\uff0c**\u4ee5\u4f4d\u7f6e\u4e4b\u95f4\u79fb\u52a8\u7684\u6240\u9700\u65cb\u8f6c\u6b21\u6570\u4e3a\u8fb9\u6743** \u3002\u5982\u679c\u662f ```X``` \u7684\u8bdd\uff0c\u5c31\u628a\u5b83\u7684\u6240\u6709\u51fa\u8fb9\u8fb9\u6743\u8bbe\u6210 ```inf``` \u3002\n\n\u90a3\u4e48\u5bf9\u8fd9\u4e2a\u7bad\u5934\u77e9\u9635\u8fdb\u884c\u8fd9\u6837\u7684\u8f6c\u5316\u4e4b\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u5f20\u8fd9\u6837\u7684\u56fe\uff1a\n\n![e.g.](https://s1.ax1x.com/2020/03/22/85MLdI.png)\n\n\u7136\u540e\uff1f\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\u5c31\u597d\u5566\uff01\n\n\u4e0b\u9762\u7528\u4e86 Dijkstra \u7b97\u6cd5\uff0cspfa \u5e94\u8be5\u53ef\u4ee5\uff08\u8fd9\u4e2a\u5751\u7559\u4e2a\u4e0b\u4e00\u4e2a\u9898\u89e3\uff09\u3002\n\n### Code\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n\nconst int dx[4]={0,0,-1,1};\nconst int dy[4]={-1,1,0,0};\nconst char dir[]=\"WENS\";\n\nint val[256];\nconst int N=502;\nchar s[N][N];\nint dist[N][N];\nbool book[N][N];\nint n,m;\n\nint cost(char a,char b)//\u8ba1\u7b97\u5b57\u7b26\uff08\u7bad\u5934\uff09\u8f6c\u5316\u7684\u82b1\u8d39\n{\n\tint sub=val[(int)b]-val[(int)a];\n\tif(sub<0) sub+=4;\n\treturn sub;\n}\n\nstruct HeapNode\n{\n\tint x,y,dis;\n\tHeapNode(int _x,int _y,int _d):x(_x),y(_y),dis(_d){}\n\tbool operator <(const HeapNode &t)const{return dis>t.dis;}\n};\n\nbool out_of_range(int x,int y)\n{\n\treturn (x<1||y<1||x>n||y>m);\n}\n\nvoid SSSP()//\u5efa\u4e0d\u5efa\u56fe\u5176\u5b9e\u65e0\u6240\u8c13\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u539f\u77e9\u9635\u4e0a\u8dd1\u3002\u4f46\u662f\u5efa\u56fe\u7684\u8bdd\u5c31\u53ef\u4ee5\u76f4\u63a5\u5957\u677f\u5b50\u4e86\uff0c\u5c11\u4e86\u4e00\u4e9b\u5224\u65ad\u3002\n{//\u5806\u4f18\u5316 Dijkstra \u677f\u5b50\n\tpriority_queue<HeapNode> Q;\n\tQ.push(HeapNode(1,1,dist[1][1]=0));\n\twhile(!Q.empty())\n\t{\n\t\tint x=Q.top().x,y=Q.top().y;\n\t\tQ.pop();\n\t\tif(book[x][y]) continue;\n\t\tbook[x][y]=true;\n\t\tif(s[x][y]=='X') continue;\n\t\tfor(register int i=0;i<4;i++)\n\t\t{\n\t\t\tHeapNode nxt(x+dx[i],y+dy[i],dist[x][y]+cost(s[x][y],dir[i]));\n\t\t\tif(out_of_range(nxt.x,nxt.y)) continue;\n\t\t\tif(dist[nxt.x][nxt.y]<=nxt.dis) continue;\n\t\t\tdist[nxt.x][nxt.y]=nxt.dis;\n\t\t\tQ.push(HeapNode(nxt));\n\t\t}\n\t}\n}\n\nsigned main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i=1;i<=n;i++)\n\t\tscanf(\"%s\",s[i]+1);\n\t\n\tmemset(dist,0x3f,sizeof dist);\n\tmemset(book,false,sizeof book);\n\tval['W']=0,val['N']=1;\n\tval['E']=2,val['S']=3;\n\t\n\tSSSP();\n\tprintf(\"%d\\n\",dist[n][m]==0x3f3f3f3f?-1:dist[n][m]);\n\treturn 0;\n}\n```\n\n\u5e94\u8be5\u662f\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u5982\u679c\u5e2e\u5230\u4e86\u4f60\u4e0d\u59a8\u70b9\u4e2a\u8d5e\u554a awa",
        "postTime": 1584856587,
        "uid": 61430,
        "name": "_Wallace_",
        "ccfLevel": 5,
        "title": "\u9898\u89e3\u3010P6233 [eJOI2019]Awesome Arrowland Adventure\u3011"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\n\u76f8\u6bd4\u4e8e\u4e0a\u9762\u7684\u9898\u89e3\uff0c\u6211\u662f\u5148\u5efa\u56fe\u518d\u8dd1\u7684\u6700\u77ed\u8def\u3002\n\n**\u5173\u4e8e\u5efa\u56fe\uff1a**\n\n\u5bf9\u4e8e\u77e9\u9635\u5185\u7684\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u90fd\u53ef\u4ee5\u89c6\u4e3a\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u82e5\u8be5\u4f4d\u7f6e\u6ca1\u6709\u7bad\u5934\uff0c\u5219\u4ee3\u8868\u8be5\u8282\u70b9\u51fa\u5ea6\u4e3a0\uff0c\u6ca1\u6709\u51fa\u53bb\u7684\u8fb9\u3002\n\n\u5426\u5219\u53ea\u8981\u6709\u7bad\u5934\uff0c\u8be5\u8282\u70b9\u90fd\u67094\u6761\u8fb9\uff0c\u901a\u5f80\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u8282\u70b9\uff0c\u8fb9\u7684\u6743\u503c\u5219\u662f\u53bb\u5f80\u54ea\u4e2a\u8282\u70b9\u7bad\u5934\u9700\u8981\u65cb\u8f6c\u7684\u6b21\u6570\u3002\n\n\u5219\u9898\u76ee\u8f6c\u5316\u4e3a\u6c42\u4ece\uff081,1\uff09\u8fd9\u4e2a\u8282\u70b9\u524d\u5f80\uff08m,n\uff09\u8fd9\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u6743\u503c\u548c\u3002\n\n**\u5173\u4e8e\u8282\u70b9\u7684\u7f16\u53f7\uff1a**\n\n\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u4ece1\u53f7\u7f16\u5230n$\\times$m\u53f7\uff0c\u5219\u9898\u76ee\u8f6c\u5316\u4e3a\u4ece1\u53f7\u8282\u70b9\u5230n$\\times$m\u53f7\u8282\u70b9\u7684\u6700\u77ed\u8def\u3002\n\n```cpp\nint cnt=0;\nfor(int i=1;i<=m;i++)\n\tfor(int j=1;j<=n;j++) id[i][j]=++cnt;\n```\n**\u5173\u4e8e\u5efa\u8fb9\uff1a**\n\n\u7ed9\u56db\u4e2a\u65b9\u5411\u5206\u522b\u6807\u53f7\uff0c\u6bd4\u5982\u6211\u7684\u4ee3\u7801\u4e2d\u662f\u8fd9\u6837\u7684\uff1a\u4e0a0\u53f31\u53572\u897f3\u3002\n\n\u5219\u7528\u5f53\u524d\u8981\u53bb\u7684\u65b9\u5411\u6807\u53f7\u51cf\u53bb\u539f\u672c\u7684\u65b9\u5411\u6807\u53f7\uff0c\u5c31\u662f\u8981\u65cb\u8f6c\u7684\u6b21\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u5dee\u662f\u8d1f\u6570\uff0c\u90a3\u518d+4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e3e\u4f8b\u6765\u8bf4\uff1a\u73b0\u5728\u7684\u7bad\u5934\u65b9\u5411\u662f\u53f31\uff0c\u8981\u53bb\u7684\u65b9\u5411\u662f\u4e0a0\uff0c\u5dee\u662f0-1=-1.\u662f\u8d1f\u6570\u6240\u4ee5\u518d+4=3.\u6240\u4ee5\u8981\u65cb\u8f6c\u7684\u6b21\u6570\u5c31\u662f3\u6b21\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint id[505][505];\nint dx[4][2]={{-1,0},{0,1},{1,0},{0,-1}};//\u5411\u56db\u4e2a\u65b9\u5411\u8d70\u540e\u4f4d\u7f6e\u7684\u53d8\u5316\nstruct node{int to;int val;};\nvector<node>edge[250005];\nll dis[250005];\nbool vis[250005];\ntypedef pair<ll,int> pa;\nvoid dijkstra(int start)//dijkstra\u6a21\u677f\u3002\u5173\u4e8eSPFA\uff0c\u5b83\u6b7b\u4e86\n{\n    priority_queue<pa,vector<pa>,greater<pa> >q;\n    memset(vis,0,sizeof(vis));\n    dis[start]=0;\n    q.push(pa(0,start));\n    while(!q.empty())\n    {\n        int now=q.top().second;\n        q.pop();\n        if(vis[now]) continue;\n        vis[now]=1;\n        for(int i=0;i<edge[now].size();i++)\n        {\n            int to=edge[now][i].to;\n            int val=edge[now][i].val;\n            if(dis[to]>dis[now]+val)\n            {\n                dis[to]=dis[now]+val;\n                if(!vis[to]) q.push(pa(dis[to],to));\n            }\n        }\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    int m,n;\n    cin>>m>>n;\n    int cnt=0;\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++) id[i][j]=++cnt;//\u7ed9\u8282\u70b9\u7f16\u53f7\n    for(int i=1;i<=m;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            char in;\n            cin>>in;\n            int now;\n            if(in=='X') continue;\n            if(in=='N') now=0;\n            if(in=='E') now=1;\n            if(in=='S') now=2;\n            if(in=='W') now=3;//\u786e\u5b9a\u5f53\u524d\u65b9\u5411\n            for(int k=0;k<4;k++)\n            {\n                node x;\n                x.to=id[i+dx[k][0]][j+dx[k][1]];//\u8981\u53bb\u7684\u8282\u70b9\n                int cost=k-now;\n                if(cost<0) cost+=4;//\u5904\u7406\u6743\u503c\n                x.val=cost;\n                edge[id[i][j]].push_back(x);\n            }\n        }\n    }\n    for(int i=2;i<=n*m;i++) dis[i]=1e18;//\u521d\u59cb\u5316\n    dijkstra(1);\n    if(dis[n*m]>1e17) cout<<-1<<endl;//\u65e0\u89e3\n    else cout<<dis[n*m]<<endl;\n    return 0;\n}\n\n```\n",
        "postTime": 1588933620,
        "uid": 278190,
        "name": "\u671d\u5915",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6233 \u3010[eJOI2019]Awesome Arrowland Adventure\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u5bb9\u6613\u7684\u6700\u77ed\u8def\u3002\n\n\u4e3b\u8981\u8003\u8651\u5982\u4f55\u5efa\u56fe\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u70b9\u53ea\u8981\u4e0d\u662f `X`\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u548c\u4e0e\u5b83\u56db\u8054\u901a\u7684\u6bcf\u4e2a\u70b9\u5efa\u8fb9\uff0c\u90a3\u4e48\u8fb9\u6743\u662f\u591a\u5c11\u5462\uff1f\n\n\u8bbe\u76ee\u524d\u70b9\u4e3a $(x_1, y_1)$\uff0c\u76ee\u6807\u70b9\u4e3a $(x_2, y_2)$\uff0c$(x_2, y_2)$ \u662f\u4e0e $(x_1, y_1)$ \u56db\u8054\u901a\u7684\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u53ef\u5f97\u8fb9\u6743\u5e94\u8be5\u662f\u76ee\u524d\u70b9\u5230\u76ee\u6807\u70b9\u9700\u8981\u65cb\u8f6c\u7684\u6b21\u6570\u3002\n\n\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u70b9\u4e3a `X` \u600e\u4e48\u529e\uff1f\u6709\u4e24\u79cd\u505a\u6cd5\uff0c\u4e00\u79cd\u662f\u4ecd\u7136\u5efa\u8fb9\uff0c\u4e0d\u8fc7\u8fb9\u6743\u662f $\\infty $\uff0c\u53e6\u4e00\u79cd\u662f\u4e0d\u5efa\u8fb9\uff0c\u8fd9\u4e24\u79cd\u90fd\u53ef\u884c\uff0c\u4f46\u7b2c\u4e8c\u79cd\u66f4\u4f18\u4e00\u4e9b\u3002\n\n\u5efa\u5b8c\u56fe\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fb9\u6743\u5e76\u4e0d\u5b8c\u5168\u76f8\u540c\uff0c\u8003\u8651\u6700\u77ed\u8def\u6216\u8005 01-BFS\uff0c\u5b9e\u6d4b 01-BFS \u5feb\u4e00\u4e9b\u3002\n\n\u53e6\u5916\uff0c\u7f51\u683c\u56fe\u6700\u77ed\u8def\u5efa\u8bae\u9009\u62e9 Dijkstra\uff0cSPFA \u590d\u6742\u5ea6\u4f1a\u5f88\u9ad8\u3002\n\nDijkstra \u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#include <cstring>\nusing namespace std;\n\nconstexpr int N(505), M(1e6 + 5);\n\nint n, m;\nchar c[N][N];\n\nint dx[] = { -1, 1, 0, 0 }; // \u4e0a\u4e0b\u5de6\u53f3\nint dy[] = { 0, 0, -1, 1 };\n\n#define get(x) (x == 'W' ? 2 : (x == 'E' ? 3 : (x == 'N' ? 0 : 1)))\n\n#define change(x) (x == 'W' ? 'N' : (x == 'E' ? 'S' : (x == 'N' ? 'E' : 'W')))\n\n#define cg(x, y) ((x - 1) * m + y)\n\nstruct Edge\n{\n\tint to, cost;\n\tEdge(int _to, int _cost): to(_to), cost(_cost){}\n};\n\nvector<Edge> G[M];\nint dis[M];\nbool f[M];\n\nstruct Node\n{\n\tint place, dist;\n\tNode(int _p, int _d): place(_p), dist(_d){}\n\tbool operator<(const Node& g) const\n\t{\n\t\treturn dist > g.dist;\n\t}\n};\n\ninline void dijkstra()\n{\n\tmemset(dis, 0x3f, sizeof dis);\n\tdis[1] = 0;\n\tpriority_queue<Node> q;\n\tq.push(Node(1, 0));\n\twhile (q.size())\n\t{\n\t\tint l = q.top().place;\n\t\tq.pop();\n\t\tif (f[l]) continue;\n\t\tf[l] = true;\n\t\tfor (register int i(0), j(G[l].size()); i < j; ++i)\n\t\t{\n\t\t\tregister int nx(G[l][i].to);\n\t\t\tif (dis[nx] > dis[l] + G[l][i].cost)\n\t\t\t{\n\t\t\t\tdis[nx] = dis[l] + G[l][i].cost;\n\t\t\t\tif (!f[nx]) q.push(Node(nx, dis[nx]));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (register int i(1); i <= n; ++i)\n\t{\n\t\tfor (register int j(1); j <= m; ++j)\n\t\t{\n\t\t\tscanf(\" %c\", &c[i][j]);\n\t\t\tif (c[i][j] != 'X')\n\t\t\t{\n\t\t\t\tint p(get(c[i][j])), k(cg(i, j)), nx(i + dx[p]), ny(j + dy[p]);\n\t\t\t\tchar h(c[i][j]);\n\t\t\t\tif (nx >= 1 and nx <= n and ny >= 1 and ny <= m)\n\t\t\t\t{\n\t\t\t\t\tG[k].push_back(Edge(cg(nx, ny), 0)); // \u539f\u59cb\u65b9\u5411\n\t\t\t\t}\n\t\t\t\tfor (register int bn(1); bn <= 3; ++bn)\n\t\t\t\t{\n\t\t\t\t\th = change(h);\n\t\t\t\t\tp = get(h);\n\t\t\t\t\tnx = i + dx[p], ny = j + dy[p];\n\t\t\t\t\tif (nx >= 1 and nx <= n and ny >= 1 and ny <= m) G[k].push_back(Edge(cg(nx, ny), bn));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tdijkstra();\n\tprintf(\"%d\\n\", dis[cg(n, m)] == dis[0] ? -1 : dis[cg(n, m)]);\n\treturn 0;\n}\n```\n\n01-BFS \u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#include <cstring>\nusing namespace std;\n\nconstexpr int N(505), M(1e6 + 5);\n\nint n, m;\nchar c[N][N];\n\nint dx[] = { -1, 1, 0, 0 }; // \u4e0a\u4e0b\u5de6\u53f3\nint dy[] = { 0, 0, -1, 1 };\n\n#define get(x) (x == 'W' ? 2 : (x == 'E' ? 3 : (x == 'N' ? 0 : 1)))\n\n#define change(x) (x == 'W' ? 'N' : (x == 'E' ? 'S' : (x == 'N' ? 'E' : 'W')))\n\n#define cg(x, y) ((x - 1) * m + y)\n\nstruct Edge\n{\n\tint to, cost;\n\tEdge(int _to, int _cost): to(_to), cost(_cost){}\n};\n\nvector<Edge> G[M];\nint dis[M];\n\ninline void bfs()\n{\n\tmemset(dis, 0x3f, sizeof dis);\n\tdis[1] = 0;\n\tdeque<int> q;\n\tq.push_back(1);\n\twhile (q.size())\n\t{\n\t\tint l = q.front();\n\t\tq.pop_front();\n\t\tfor (register int i(0), j(G[l].size()); i < j; ++i)\n\t\t{\n\t\t\tregister int nx(G[l][i].to);\n\t\t\tif (dis[nx] > dis[l] + G[l][i].cost)\n\t\t\t{\n\t\t\t\tdis[nx] = dis[l] + G[l][i].cost;\n\t\t\t\tif (G[l][i].cost == 0) q.push_front(nx);\n\t\t\t\telse q.push_back(nx);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (register int i(1); i <= n; ++i)\n\t{\n\t\tfor (register int j(1); j <= m; ++j)\n\t\t{\n\t\t\tscanf(\" %c\", &c[i][j]);\n\t\t\tif (c[i][j] != 'X')\n\t\t\t{\n\t\t\t\tint p(get(c[i][j])), k(cg(i, j)), nx(i + dx[p]), ny(j + dy[p]);\n\t\t\t\tchar h(c[i][j]);\n\t\t\t\tif (nx >= 1 and nx <= n and ny >= 1 and ny <= m)\n\t\t\t\t{\n\t\t\t\t\tG[k].push_back(Edge(cg(nx, ny), 0)); // \u539f\u59cb\u65b9\u5411\n\t\t\t\t}\n\t\t\t\tfor (register int bn(1); bn <= 3; ++bn)\n\t\t\t\t{\n\t\t\t\t\th = change(h);\n\t\t\t\t\tp = get(h);\n\t\t\t\t\tnx = i + dx[p], ny = j + dy[p];\n\t\t\t\t\tif (nx >= 1 and nx <= n and ny >= 1 and ny <= m) G[k].push_back(Edge(cg(nx, ny), bn));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbfs();\n\tprintf(\"%d\\n\", dis[cg(n, m)] == dis[0] ? -1 : dis[cg(n, m)]);\n\treturn 0;\n}\n```\n\n\u6700\u540e\u8bf4\u4e00\u4e2a\u6280\u5de7\uff0c\u5927\u5bb6\u770b\u4ee3\u7801\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u7684\u4ee3\u7801\u6709\u4e00\u4e2a `#define cg(x, y) ((x - 1) * m + y)`\uff0c\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u4e0d\u77e5\u9053\u5927\u5bb6\u53d1\u73b0\u6ca1\u6709\uff0c\u8fd9\u9053\u9898\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u5e73\u9762\uff0c\u6211\u4eec\u6700\u77ed\u8def\u4e0a\u7684 `dis` \u6570\u7ec4\u5e94\u8be5\u662f\u4e8c\u7ef4\uff0c\u4f46\u662f\u6211\u7684\u4e3a\u4ec0\u4e48\u662f\u4e00\u7ef4\u7684\u5462\uff1f\u6211\u4eec\u6709\u4e00\u4e2a\u529e\u6cd5\uff0c\u53ef\u4ee5\u5c06\u5750\u6807 $(x, y)$ \u8f6c\u5316\u4e3a\u4e00\u4e2a\u552f\u4e00\u7684\u503c\uff0c\u5176\u5b9e\u5c31\u662f\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u53f3\u4e0b\u89d2\uff0c\u4ee5 $(1, 1)$ \u4e3a\u5de6\u4e0a\u89d2\u7684\u77e9\u5f62\u5305\u62ec\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u663e\u7136\u8fd9\u4e2a\u503c\u662f\u552f\u4e00\u7684\u3002\n",
        "postTime": 1649770233,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "P6233 [eJOI2019]Awesome Arrowland Adventure"
    },
    {
        "content": "\u89e3\u9898\u601d\u8def:\u5148\u5efa\u56fe\u518d\u8dd1\u6700\u77ed\u8def\u3002\n\n\u5bf9\u4e8e\u77e9\u9635\u5185\u7684\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u90fd\u53ef\u4ee5\u89c6\u4e3a\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u82e5\u8be5\u4f4d\u7f6e\u6ca1\u6709\u7bad\u5934\uff0c\u5219\u4ee3\u8868\u8be5\u8282\u70b9\u51fa\u5ea6\u4e3a\u96f6\uff0c\u6ca1\u6709\u51fa\u53bb\u7684\u8fb9\u3002\n\n\u5426\u5219\u53ea\u8981\u6709\u7bad\u5934\uff0c\u8be5\u8282\u70b9\u90fd\u6709\u56db\u6761\u8fb9\uff0c\u901a\u5f80\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u8282\u70b9\uff0c\u8fb9\u7684\u6743\u503c\u5219\u662f\u53bb\u5f80\u54ea\u4e2a\u8282\u70b9\u7bad\u5934\u9700\u8981\u65cb\u8f6c\u7684\u6b21\u6570\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint id[505][505];\nint dx[4][2]={{-1,0},{0,1},{1,0},{0,-1}};//\u5411\u56db\u4e2a\u65b9\u5411\u8d70\u540e\u4f4d\u7f6e\u7684\u53d8\u5316\nstruct node{int to;int val;};\nvector<node>edge[250005];\nll dis[250005];\nbool vis[250005];\ntypedef pair<ll,int> pa;\nvoid dijkstra(int start)//\u6a21\u677f\n{\n    priority_queue<pa,vector<pa>,greater<pa> >q;\n    memset(vis,0,sizeof(vis));\n    dis[start]=0;\n    q.push(pa(0,start));\n    while(!q.empty())\n    {\n        int now=q.top().second;\n        q.pop();\n        if(vis[now]) continue;\n        vis[now]=1;\n        for(int i=0;i<edge[now].size();i++)\n        {\n            int to=edge[now][i].to;\n            int val=edge[now][i].val;\n            if(dis[to]>dis[now]+val)\n            {\n                dis[to]=dis[now]+val;\n                if(!vis[to]) q.push(pa(dis[to],to));\n            }\n        }\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    int m,n;\n    cin>>m>>n;\n    int cnt=0;\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++) id[i][j]=++cnt;//\u7ed9\u8282\u70b9\u7f16\u53f7\n    for(int i=1;i<=m;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            char in;\n            cin>>in;\n            int now;\n            if(in=='X') continue;\n            if(in=='N') now=0;\n            if(in=='E') now=1;\n            if(in=='S') now=2;\n            if(in=='W') now=3;//\u786e\u5b9a\u5f53\u524d\u65b9\u5411\n            for(int k=0;k<4;k++)\n            {\n                node x;\n                x.to=id[i+dx[k][0]][j+dx[k][1]];//\u8981\u53bb\u7684\u8282\u70b9\n                int cost=k-now;\n                if(cost<0) cost+=4;//\u5904\u7406\u6743\u503c\n                x.val=cost;\n                edge[id[i][j]].push_back(x);\n            }\n        }\n    }\n    for(int i=2;i<=n*m;i++) dis[i]=1e18;//\u521d\u59cb\u5316\n    dijkstra(1);\n    if(dis[n*m]>1e17) cout<<-1<<endl;//\u65e0\u89e3\n    else cout<<dis[n*m]<<endl;\n    return 0;\n}\n```\n\n\u5e0c\u671b\u80fd\u5bf9\u5927\u5bb6\u6709\u6240\u5e2e\u52a9\u3002",
        "postTime": 1628152543,
        "uid": 114015,
        "name": "Marginal_world",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P6233 \u3010[eJOI2019]Awesome Arrowland Adventure\u3011"
    },
    {
        "content": "### \u9898\u610f\u7ffb\u8bd1\n- \u7ed9\u4e00\u4e2a\u5b57\u7b26\u77e9\u9635\u77e9\u9635\uff0c\u77e9\u9635\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u8868\u793a\u4e0a\u4e0b\u5de6\u53f3\uff0c\u5982\u679c\u6309\u5b57\u7b26\u65b9\u5411\u884c\u8d70\u5c31\u4e0d\u9700\u8981\u82b1\u8d39\u4ee3\u4ef7\uff0c\u5426\u5219\u5c31\u9700\u8981\u82b1\u8d39\u5b57\u7b26\u65b9\u5411\u987a\u65f6\u9488\u65b9\u5411\u65cb\u8f6c\u5230 \u6b64\u65b9\u5411\u00f790 \u7684\u4ee3\u4ef7\u3002\n- \u7ed3\u679c\u6c42\u7684\u662f\u4ece $(1,1)$ \u5230 $(n,m)$ \u6240\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n- \u672c\u4eba\u7684\u6570\u7ec4\u662f\u4ece $(1,1)$ \u5f00\u59cb\u8ba1\u7b97\u7684\uff0c\u7528\u4ece $(0,0)$ \u5f00\u59cb\u7684\u4e5f\u884c\u3002\n\n### \u89e3\u9898\u601d\u8def\n- \u6b63\u89e3\u81ea\u7136\u662f\u6700\u77ed\u8def\u3002\n- \u521a\u5f00\u59cb\u5b58\u56fe\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u5b57\u7b26\u5b58\uff0c\u4e5f\u53ef\u4ee5\u50cf\u6211\u4e00\u6837\u7528 `int` \u5b58\u56fe\u3002\n- \u5efa\u8fb9\uff0c\u53ef\u4ee5\u7528 `vector` \u521a\u5f00\u59cb\u9884\u5904\u7406\u597d\u6240\u6709\u8fb9\uff0c\u4e5f\u53ef\u4ee5\u5728\u6700\u77ed\u8def\u9014\u4e2d\u76f4\u63a5\u8ba1\u7b97\u3002\u8fb9\u6743\uff0c\u5c31\u662f\u5f53\u524d\u70b9\u8f93\u5165\u7684\u65b9\u5411\u987a\u65f6\u9488\u65cb\u8f6c\u5230\u6240\u9700\u8981\u7684\u65b9\u5411\u6240\u9700\u8981\u7684\u89d2\u5ea6\u3002\uff08\u6709\u70b9\u96be\u61c2\uff0c\u4ed4\u7ec6\u601d\u8003\u3002\n- \u8fd9\u91cc\u9644\u4e0a\u4e00\u4e9b\u4ee3\u7801\n ```cpp\nint rx[4]={0,0,-1,1},ry[4]={-1,1,0,0};// \u5de6\u53f3\u4e0a\u4e0b\u79fb\u52a8\uff1b\n```\n\n ```cpp\n\u6570\u7ec4\u540d [4][4]={\n{0,2,1,3},\n{2,0,3,1},\n{3,1,0,2},\n{1,3,2,0}};// \u5750\u6807\u6743\u503c\uff1bf[i][j]\u8868\u793a\u65b9\u5411 i \u5230 \u65b9\u5411 j \u6240\u9700\u8981\u65cb\u8f6c\u7684\u89d2\u5ea6\uff1b\n```\n\n### \u6ce8\u610f\u4e8b\u9879\n- \u4ed6\u8fd9\u4e2a\u6837\u4f8b\u76f4\u63a5\u590d\u5236\u4f1a\u51fa\u73b0\u4e00\u4e9b\u5947\u602a\u7684\u7b26\u53f7\u2026\u2026\u8fd9\u91cc\u9644\u4e0a\u6837\u4f8b\n ```cpp\n3 3\nEES\nSSW\nESX\n```\n\n ```cpp\n3 3\nEES\nSSW\nEEX\n```\n\n ```cpp\n3 4\nEXES\nWSNS\nXNNX\n```\n- \u4e0d\u8981\u5fd8\u8bb0\u6709 `-1` \u7684\u60c5\u51b5\n- \u5982\u679c\u7528 `getchar()` \u8981\u6ce8\u610f\u6362\u884c\u65f6\u4e5f\u8981\u8bfb\u5165\u4e00\u4e2a\u6362\u884c\u7b26\uff0c\u5426\u5219\u4f1a\u51fa\u9519\n### \u5173\u4e8e\u6700\u77ed\u8def\n- \u5148\u5206\u6790\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\n\n`dij` $n log n$ , \u4f46\u4e0d\u80fd\u5904\u7406\u8d1f\u6743\n\n`spfa` \u80fd\u5904\u7406\u8d1f\u6743\u8fb9\u6743\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u80fd\u4f1a\u88ab\u5361\u5230 $O(n^2)$ \n- \u6211\u7528\u7684\u662f spfa , \u4f46 TLE \u4e86\u4e00\u4e2a\u6570\u636e\u70b9\uff0c\u5f00 O2 \u5c31\u8fc7\u4e86\uff08\u5207\u52ff\u76f4\u63a5\u590d\u5236\u4ee3\u7801\uff01\uff01\uff01\uff09\n ## Code\n \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\nstruct node\n{\n\tint x,y;\n};\nint n,m,a[505][505];\nint f[505][505]; \nint rx[4]={0,0,-1,1},ry[4]={-1,1,0,0};\nint rr[4][4]={\n{0,2,1,3},\n{2,0,3,1},\n{3,1,0,2},\n{1,3,2,0}};\nint in_queue[505][505];\nvoid spfa(int sx,int sy)\n{\n\tqueue<node> q;\n\tmemset(f,63,sizeof(f));\n\tf[sx][sy]=0;\n\tin_queue[sx][sy]=1;\n\tq.push((node){sx,sy}); \n\twhile(!q.empty())\n\t{\n\t\tint nx=q.front().x,ny=q.front().y;\n\t\tq.pop();\n\t\tif(a[nx][ny]==4) continue;\t\t\t\t// \u5982\u679c\u4e3a'X' \n\t\tfor(int i=0;i<4;i++)\n\t\t{\n\t\t\tint tx=nx+rx[i],ty=ny+ry[i];\n\t\t\tif(tx<1||tx>n||ty<1||ty>m) continue;\n\t\t\tint w=rr[a[nx][ny]][i];\n\t\t\tif(f[tx][ty]>f[nx][ny]+w)\n\t\t\t{\n\t\t\t\tf[tx][ty]=f[nx][ny]+w;\n\t\t\t\tif(in_queue[tx][ty]==0) q.push((node){tx,ty}); \n\t\t\t\tin_queue[tx][ty]=1;\n\t\t\t}\n\t\t}\n\t\tin_queue[nx][ny]=0;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\\n\",&n,&m);\n\tchar c;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tc=getchar();\n\t\t\tswitch(c)\t\t\t\t\t\t// \u5b58\u70b9 \n\t\t\t{\n\t\t\t\tcase 'W':a[i][j]=0;break;\n\t\t\t\tcase 'E':a[i][j]=1;break;\n\t\t\t\tcase 'N':a[i][j]=2;break;\n\t\t\t\tcase 'S':a[i][j]=3;break;\n\t\t\t\tcase 'X':a[i][j]=4;break;\n\t\t\t}\n\t\t}\n\t\tc=getchar();\n\t}\n\tspfa(1,1);\n\tif(f[n][m]==f[0][0]) printf(\"-1\");\t\t// \u4e0d\u80fd\u5230\u8fbe\u7684\u60c5\u51b5 \n\telse printf(\"%d\",f[n][m]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1602904640,
        "uid": 218478,
        "name": "\u7f16\u7a0b\u5ba2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6233 \u3010[eJOI2019]Awesome Arrowland Adventure\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u9898\u89e3\u90fd\u7528\u7684\u662fDijkstra\u6216\u662fSPFA\u5440\u2026\u2026\u4f60\u5c31\u6ca1\u6709\u8003\u8651\u5230\u6bd2\u7624\u51fa\u9898\u4eba\u5982\u679c\u628a\u6570\u636e\u52a0\u5f3a\u5230$5000\\times5000$\u8be5\u600e\u4e48\u8fc7\u5417\u2026\u2026\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u53ef\u4ee5\u901a\u8fc7\u4e0a\u8ff0\u6570\u636e\u8303\u56f4\u7684\u65b9\u6cd5\uff1a**\u53cc\u7aef\u961f\u5217bfs**\u6216\u8005\u53eb**01bfs**\uff0c[\u7ecf\u5178\u4f8b\u9898](https://www.luogu.com.cn/problem/P4667)\u3002\n\n\u8fd9\u4e2a\u65b9\u6cd5\u9002\u7528\u4e8e\u5f53\u4e00\u5f20\u56fe\u4e2d\u6240\u6709\u7684\u8fb9\u7684\u8fb9\u6743\u90fd\u662f$0$\u6216$1$\u7684\u56fe\u4e0a\u7684\u6700\u77ed\u8def\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6211\u4eec\u7528**\u53cc\u7aef\u961f\u5217**\u66ff\u4ee3\u5e38\u89c4\u56fe\uff08\u5373\u8fb9\u6743\u5747\u4e3a$1$\u7684\u56fe\uff09\u4e2d\u7684**\u666e\u901a\u961f\u5217**\uff0c\u5f53\u9047\u5230$0$\u8fb9\u65f6\uff0c\u4ece\u961f\u9996\u5165\u961f\uff1b\u5f53\u9047\u5230$1$\u8fb9\u65f6\uff0c\u4ece\u961f\u5c3e\u5165\u961f\u3002\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u961f\u5217\u4e2d\u7684\u8ddd\u79bb\u59cb\u7ec8\u662f**\u5355\u8c03**\u7684\uff0c\u56e0\u800c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u7528\u53cc\u7aef\u961f\u5217\u66ff\u4ee3\u4e86Dijkstra\u4e2d\u7684**\u4f18\u5148\u961f\u5217**\u3002\u663e\u7136\uff0c\u56e0\u4e3a\u4f7f\u7528\u4e86\u53cc\u7aef\u961f\u5217\uff0c\u590d\u6742\u5ea6\u662f$O(n+m)$\u800c\u975eDijkstra\u7684$O(n+m\\log m)$\uff0c\u5176\u4e2d$n$\u4e3a\u56fe\u4e2d\u70b9\u6570\uff0c$m$\u4e3a\u56fe\u4e2d\u8fb9\u6570\u3002\n\n\u5bf9\u4e8e\u8fd9\u9898\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u65b9\u683c\u62c6\u6210$4$\u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a\u5f53\u8be5\u65b9\u683c\u4e0a\u7684\u7bad\u5934\u6307\u5411$4$\u4e2a\u65b9\u5411\u65f6\u7684\u503c\uff0c\u5219\u6240\u6709\u7684\u8fb9\u6743\u90fd\u4e3a$0$\u6216$1$\uff0c\u5176\u4e2d$1$\u8fb9\u5f53\u4e14\u4ec5\u5f53\u7bad\u5934\u65cb\u8f6c\u65f6\u5b58\u5728\u3002\u76f4\u63a5\u5957\u7528\u4e0a\u6587\u6240\u8ff001bfs\uff0c\u5373\u53ef\u5728$O(nm)$\u65f6\u95f4\u5185\u901a\u8fc7\u672c\u9898\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1},lim;\nstruct node{\n\tint x,y,z,dir;\n\tnode(int a,int b,int c,int d){x=a,y=b,z=c,dir=d;}\n};\nchar g[510][510];\nint dir(char x){\n\tif(x=='N')return 0;\n\tif(x=='E')return 1;\n\tif(x=='S')return 2;\n\tif(x=='W')return 3;\n\treturn 4;\n}\nbool vis[510][510][5];\nbool che(node i){\n\treturn i.x<=n&&i.x>=1&&i.y<=m&&i.y>=1&&(g[i.x][i.y]!='X'||(i.x==n&&i.y==m))&&!vis[i.x][i.y][i.dir];\n}\nint bfs(){\n\tdeque<node>q;\n\tq.push_back(node(1,1,0,dir(g[1][1])));\n\twhile(!q.empty()){\n\t\tnode x=q.front();q.pop_front();\n\t\tif(!che(x))continue;vis[x.x][x.y][x.dir]=true;\n\t\tif(x.x==n&&x.y==m)return x.z;\n\t\tq.push_front(node(x.x+dx[x.dir],x.y+dy[x.dir],x.z,dir(g[x.x+dx[x.dir]][x.y+dy[x.dir]])));\n\t\tq.push_back(node(x.x,x.y,x.z+1,(x.dir+1)%4));\n\t}\n\treturn -1;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%s\",g[i]+1);\n\tif(g[1][1]=='X'&&(n>1||m>1)){puts(\"-1\");return 0;}\n\tprintf(\"%d\\n\",bfs());\n\treturn 0;\n}\n```\n",
        "postTime": 1591179833,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6233 \u3010[eJOI2019]Awesome Arrowland Adventure\u3011"
    },
    {
        "content": "~~\u597d\u6c34\u554a\uff0c\u8fd9\u9898\u771f\u7684\u662f\u84dd\u9898\u5417~~\n\n\u9898\u76ee\u7b80\u8ff0\uff0c\u7ed9\u4f60\u4e00\u4e2a $n,m$ \u7684\u77e9\u9635\uff0c\u6bcf\u4e2a\u5750\u6807\u4e0a\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u6307\u5411\u4e0a\u4e0b\u5de6\u53f3\u7684\u7bad\u5934\uff0c\u53ef\u4ee5**\u987a\u65f6\u9488**\u65cb\u8f6c $90$ \u5ea6\u8ba9\u7bad\u5934\u6307\u5411\u4e0d\u540c\u7684\u65b9\u5411\u3002\u95ee\u6700\u5c11\u65cb\u8f6c\u51e0\u6b21\u53ef\u4ee5\u4ece $1,1$ \u6cbf\u7740\u7bad\u5934\u8d70\u5230 $n,m$\u3002\n\n\u8003\u8651\u4f7f\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u6765\u6c42\u89e3\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5750\u6807 $x,y$ \u4f9d\u636e\u9700\u8981\u65cb\u8f6c\u51e0\u6b21\u6765\u5efa\u8fb9\u3002\n\n\u6211\u4eec\u7528\u4e0b\u9762\u7684\u56fe\u6765\u6253\u4e2a\u6bd4\u65b9\u3002\n\n```cpp\n(1,1) (1,2) (1,3)\n(2,1)  (E)  (2,3)\n(3,1) (3,2) (3,3)\n```\n\n\u5f88\u660e\u663e\uff0c\u6211\u4eec\u7684\u7bad\u5934\u671d\u4e1c\u6307\uff0c\u6240\u4ee5\u6211\u4eec\u5230 $2,3$ \u7684\u8fb9\u6743\u5c31\u4e3a $0$\u3002\n\n\u800c\u5982\u679c\u6211\u4eec\u8981\u5230 $3,2$ \u5462\uff1f\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u65cb\u8f6c\u4e00\u6b21\uff0c\u4e8e\u662f\u8fb9\u6743\u5c31\u4e3a $1$\u3002\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u6ca1\u6709\u7bad\u5934\uff0c\u90a3\u4e48\u6307\u5411\u5176\u4ed6\u70b9\u7684\u8fb9\u6743\u5c31\u662f $\\inf$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5904\u7406\u5b8c\u4e00\u5f20\u56fe\u4e86\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6211\u4eec\u628a\u4e00\u6574\u5f20\u56fe\u90fd\u8fd9\u6837\u5efa\u597d\uff0c\u5c31\u53ef\u4ee5\u8dd1\u6700\u77ed\u8def\u4e86\u3002\n\n\u4e8e\u662f\u7ed9\u51fa\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint b[100001],dis[2500001],jj,ans,n,m,o,x,y,z,head[1000001],cnt,xxx,yyy,flag;\nbool vis[100001];\nstruct node{\n\tint val,to,nex;\n}a[1000001];\nstruct dcz{\n\tint u,d;\n\tbool operator<(const dcz& jntm)const{\n\t\treturn d>jntm.d;\n\t}\n};\ninline void add(int x,int y,int z){\n\ta[++cnt].val=z;\n\ta[cnt].to=y;\n\ta[cnt].nex=head[x];\n\thead[x]=cnt;\n}\ninline void dij(int o){\n\tmemset(dis,0x3f,sizeof dis);\n\tdis[o]=0;\n\tpriority_queue<dcz> q;\n\tq.push((dcz){o,0});\n\twhile(!q.empty()){\n\t\tdcz xx=q.top();\n\t\tq.pop();\n\t\tint u=xx.u;\n\t\tint d=xx.d;\n\t\tif(d!=dis[u])\n\t\t\tcontinue;\n\t\tfor(int i=head[u];i;i=a[i].nex){\n\t\t\tint v=a[i].to;\n\t\t\tint w=a[i].val;;\n\t\t\tif(dis[u]+w<dis[v]){\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tq.push((dcz){v,dis[v]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tchar mp;\n\t\t\tcin>>mp;// \u5efa\u8fb9\u4e71\u641e\n\t\t\tif(mp=='E'){\n\t\t\t\tif(j+1<=m) add((i-1)*m+j,(i-1)*m+j+1,0);\n\t\t\t\tif(i+1<=n) add((i-1)*m+j,(i-1)*m+j+m,1);\n\t\t\t\tif(j-1>=1) add((i-1)*m+j,(i-1)*m+j-1,2);\n\t\t\t\tif(i-1>=1) add((i-1)*m+j,(i-1)*m+j-m,3);\n\t\t\t}\n\t\t\tif(mp=='W'){\n\t\t\t\tif(j+1<=m) add((i-1)*m+j,(i-1)*m+j+1,2);\n\t\t\t\tif(i+1<=n) add((i-1)*m+j,(i-1)*m+j+m,3);\n\t\t\t\tif(j-1>=1) add((i-1)*m+j,(i-1)*m+j-1,0);\n\t\t\t\tif(i-1>=1) add((i-1)*m+j,(i-1)*m+j-m,1);\n\t\t\t}\n\t\t\tif(mp=='N'){\n\t\t\t\tif(j+1<=m) add((i-1)*m+j,(i-1)*m+j+1,1);\n\t\t\t\tif(i+1<=n) add((i-1)*m+j,(i-1)*m+j+m,2);\n\t\t\t\tif(j-1>=1) add((i-1)*m+j,(i-1)*m+j-1,3);\n\t\t\t\tif(i-1>=1) add((i-1)*m+j,(i-1)*m+j-m,0);\n\t\t\t}\n\t\t\tif(mp=='S'){\n\t\t\t\tif(j+1<=m) add((i-1)*m+j,(i-1)*m+j+1,3);\n\t\t\t\tif(i+1<=n) add((i-1)*m+j,(i-1)*m+j+m,0);\n\t\t\t\tif(j-1>=1) add((i-1)*m+j,(i-1)*m+j-1,1);\n\t\t\t\tif(i-1>=1) add((i-1)*m+j,(i-1)*m+j-m,2);\n\t\t\t}\n\t\t\tif(mp=='X'){\n\t\t\t\tif(j+1<=m) add((i-1)*m+j,(i-1)*m+j+1,1061109567);\n\t\t\t\tif(i+1<=n) add((i-1)*m+j,(i-1)*m+j+m,1061109567);\n\t\t\t\tif(j-1>=1) add((i-1)*m+j,(i-1)*m+j-1,1061109567);\n\t\t\t\tif(i-1>=1) add((i-1)*m+j,(i-1)*m+j-m,1061109567);\n\t\t\t}\n\t\t}\n\t}\n\tdij(1);\n\tif(dis[n*m]==1061109567){\n\t\tcout<<-1;\n\t\treturn 0;\n\t}\n\tprintf(\"%d\",dis[n*m]);\n}\n```\n",
        "postTime": 1683096703,
        "uid": 652972,
        "name": "DCZISA___",
        "ccfLevel": 0,
        "title": "P6233 [eJOI2019] Awesome Arrowland Adventure \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\uff0c\u770b\u5230\u8fd9\u9053\u9898\uff0c\u7b2c\u4e00\u53cd\u5e94\u662f bfs\u3002\n\n\u90a3\u4e48\u76ee\u524d\u7684\u96be\u70b9\u5728\u4e8e\uff1a\u76f8\u90bb\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8f6c\u79fb\u7684\u6743\u503c\uff1a\n\n1. \u82e5\u5f53\u524d\u7684\u70b9\u4e3a X\uff0c\u65e0\u6cd5\u8f6c\u79fb\n\n1. \u82e5\u5f53\u524d\u7684\u70b9\u4e0d\u4e3a X\uff0c\u4f7f\u7528\u4e00\u4e2a help \u51fd\u6570\u6c42\u51fa\u4ece\u5f53\u524d\u7684\u70b9\u5230\u4e0b\u4e00\u4e2a\u70b9\u9700\u8981\u7684\u4ef7\u503c\n\n\u5728\u5c06\u6743\u503c\u6c42\u51fa\u4e4b\u540e\u5c31\u662f bfs \u677f\u5b50\u4e86\n\n\n\u867d\u7136\u4f7f\u7528 bfs \u5df2\u7ecf\u80fd\u591f\u901a\u8fc7\u672c\u9898\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u5341\u5206\u9ad8\uff0c\u4e8e\u662f\u8003\u8651\u7528\u7c7b\u4f3c spfa \u7684\u65b9\u6cd5\u4f18\u5316\uff0c$vis_{nx,ny}$ \u8868\u793a\u6b64\u65f6\u6a2a\u5750\u6807\u4e3a $nx$\uff0c\u7eb5\u5750\u6807\u4e3a $ny$ \u7684\u70b9\u662f\u5426\u5728\u961f\u5217\u4e2d\uff0c\u4e0d\u5728\u5219\u5165\u961f\uff0c\u82e5\u5728\u5219\u8df3\u8fc7\u3002\n\n\u4e0b\u9644\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n\twhile (ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+ch-48;ch=getchar();}\n\treturn x*f;\n}\ninline void put(int x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tput(-x);\n\t\treturn;\n\t}\n    if (x > 9) put(x / 10);\n    putchar(x % 10 + 48);\n}\nstruct node{\n\tint x,y;\n};\nint help(char c,int y){//\u53ef\u4ee5\u5199\u5c11\u4e00\u70b9\uff0c\u672c\u4eba\u61d2\u4e86 \n\tif(c=='N'&&y==0)\n\t\treturn 0;\n\telse if(c=='N'&&y==1)\n\t\treturn 1;\n\telse if(c=='N'&&y==2)\n\t\treturn 2;\n\telse if(c=='N'&&y==3)\n\t\treturn 3;\n\telse if(c=='E'&&y==0)\n\t\treturn 3;\n\telse if(c=='E'&&y==1)\n\t\treturn 0;\n\telse if(c=='E'&&y==2)\n\t\treturn 1;\n\telse if(c=='E'&&y==3)\n\t\treturn 2;\n\telse if(c=='S'&&y==0)\n\t\treturn 2;\n\telse if(c=='S'&&y==1)\n\t\treturn 3;\n\telse if(c=='S'&&y==2)\n\t\treturn 0;\n\telse if(c=='S')\n\t\treturn 1;\n\telse if(y==0)\n\t\treturn 1;\n\telse if(y==1)\n\t\treturn 2;\n\telse if(y==2)\n\t\treturn 3;\n\telse\n\t\treturn 0;\n}\nint n=read(),m=read(),dis[1005][1005];\nint dx[4]={-1,0,1,0};\nint dy[4]={0,1,0,-1};\nbool vis[1005][1005];\nint val[100005];\nchar c[1005][1005];\nvoid spfa(int x,int y){\n\tqueue<node> q;\n\tq.push(node{x,y});//\u5c06\u521d\u59cb\u70b9\u5165\u961f \n\tdis[x][y]=0;\n\tvis[x][y]=true;//\u521d\u59cb\u70b9\u5728\u961f\u5217\u4e2d \n\twhile(q.empty()==false){\n\t\tnode cur=q.front();\n\t\tq.pop();\n\t\tvis[cur.x][cur.y]=false;//vis\u6e05\u7a7a \n\t\tif(c[cur.x][cur.y]=='X')\n\t\t\tcontinue;\n\t\tfor(int i=0; i<4; i++){\n\t\t\tint nx=cur.x+dx[i],ny=cur.y+dy[i];\n\t\t\tint w=help(c[cur.x][cur.y],i);\n\t\t\tif(nx>=1&&nx<=n&&ny>=1&&ny<=m&&dis[cur.x][cur.y]+w<dis[nx][ny]){//\u5224\u65ad\u662f\u5426\u5728\u5730\u56fe\u4e2d\uff0c\u80fd\u5426\u66f4\u5feb\u5230\u8fbenx,ny \n\t\t\t\tdis[nx][ny]=dis[cur.x][cur.y]+w;\n\t\t\t\tif(vis[nx][ny]==false){//\u4e0d\u5728\u961f\u5217\u4e2d\uff0c\u5165\u961f \uff0c\u6807\u8bb0vis \n\t\t\t\t\tvis[nx][ny]=true;\n\t\t\t\t\tq.push(node{nx,ny});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nsigned main(){\n\tfor(int i=1; i<=n; i++)\n\t\tfor(int j=1; j<=m; j++)\n\t\t\tcin>>c[i][j],dis[i][j]=1e18;\n\tspfa(1,1);\n\tif(dis[n][m]==1e18)//\u7279\u5224\u8d70\u4e0d\u5230 \n\t\tput(-1);\n\telse\n\t\tput(dis[n][m]);\n\treturn 0;\n }\n \n ```\n",
        "postTime": 1645063379,
        "uid": 400783,
        "name": "_Chtholly_Nephren_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3P6233"
    },
    {
        "content": ">[\u6d1b\u8c37\u9898\u76ee\u9875\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6233)\n\n>\u9898\u610f\u89c1\u6d1b\u8c37\u3002\n\n\u770b\u5230\u8fd9\u79cd\u7f51\u683c\u9898\uff0c\u5c31\u60f3DP\uff0c\u7ed3\u679c\u53d1\u73b0\u6709\u73af\uff0c\u679c\u65ad\u6700\u77ed\u8def\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7f51\u683c\u6709\u5e8f\u5bf9$((a,b),(c,d))$\uff0c\u82e5$(a,b)$\u5904\u6709\u7bad\u5934\uff0c\u90a3\u4e48\u4ece$(a,b)$\u5230$(c,d)$\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u8fb9\u6743\u4e3a\u4ece$(a,b)$\u7684\u521d\u59cb\u7bad\u5934\u65b9\u5411\u5230$(a,b)\\to(c,d)$\u5e94\u8be5\u7684\u65b9\u5411\u9700\u8981\u8f6c\u7684\u6b21\u6570\u3002\u7136\u540e\u5806\u4f18\u5316Dijkstra\u5373\u53ef\u3002$\\mathrm O(nm\\log nm)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define y0 sdfjaewjfwa\n#define mp make_pair\n#define X first\n#define Y second\n#define pb push_back\nconst int inf=0x3f3f3f3f;\nconst int N=500,M=500,ASCII=150;\nint n,m;\nchar a[N+1][M+5];\nint id[ASCII];const int ds[][4]={{0,1,2,3},{3,0,1,2},{2,3,0,1},{1,2,3,0}}/*\u65b9\u5411\u4e0e\u65b9\u5411\u4e4b\u95f4\u7684\u8ddd\u79bb*/,dx[]={-1,0,1,0},dy[]={0,1,0,-1};\nbool vld(int x,int y){return 1<=x&&x<=n&&1<=y&&y<=m;}\nvector<pair<int,int> > nei[N*M+1];//\u90bb\u63a5\u77e9\u9635 \nint dis[N*M+1];\nvoid dijkstra(){//Dijkstra\n\tpriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > q;\n\tmemset(dis,0x3f,sizeof(dis));\n\tq.push(mp(dis[1]=0,1));\n\twhile(q.size()){\n\t\tint x=q.top().Y;\n\t\tq.pop();\n\t\tfor(int i=0;i<nei[x].size();i++){\n\t\t\tint y=nei[x][i].X,len=nei[x][i].Y;\n\t\t\tif(dis[x]+len<dis[y])q.push(mp(dis[y]=dis[x]+len,y));\n\t\t}\n\t}\n//\tfor(int i=1;i<=n*m;i++)cout<<dis[i]<<\" \";puts(\"\");\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)cin>>a[i]+1;\n\tid['N']=0;id['E']=1;id['S']=2;id['W']=3;\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)if(a[i][j]!='X')//\u8fde\u8fb9 \n\t\tfor(int k=0;k<4;k++){\n\t\t\tint x=i+dx[k],y=j+dy[k];\n\t\t\tif(vld(x,y))nei[(i-1)*m+j].pb(mp((x-1)*m+y,ds[id[a[i][j]]][k]));\n\t\t}\n\tdijkstra();//\u6c42\u6700\u77ed\u8def \n\tcout<<(dis[n*m]<inf?dis[n*m]:-1);\n\treturn 0;\n}\n```\n\n\u7136\u540e\u770b\u5230\u795e\u4ed9ymx\u7684[\u9898\u89e3](https://www.luogu.com.cn/blog/Troverld/solution-p6233)\uff0c\u53d1\u73b0\u6709$\\mathrm O(nm)$\u7684\u505a\u6cd5\uff08orzymxtqlddw\uff09\u3002\u8fd9\u91cc\u9700\u8981\u7528\u5230\u4e00\u4e2a\u5c0ftrick\u3002\u5bf9\u4e8e\u4e00\u4e2a\u8fb9\u6743\u53ea\u6709$0,1$\u4e24\u79cd\u56fe\u6c42\u6700\u77ed\u8def\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u628aDijkstra\u91cc\u7684\u5806\u6362\u6210\u53cc\u7aef\u961f\u5217\uff0c\u677e\u5f1b\u6210\u529f\u65f6\u82e5\u8fde\u63a5\u8fb9\u4e3a$0$\u5219\u4ece\u961f\u9996\u52a0\u5165\uff0c\u5426\u5219\u4ece\u961f\u5c3e\u52a0\u5165\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\u5c31\u53bb\u6389\u4e86$\\log$\u3002\u81f3\u4e8e\u8fd9\u9898\uff0c\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u683c\u5b50\u62c6\u6210$4$\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u4ee3\u8868\u4e00\u4e2a\u65b9\u5411\uff0c\u65b9\u5411\u5230\u65b9\u5411\u4e4b\u95f4\u8fde$1$\u8fb9\uff0c\u76f8\u90bb\u683c\u5b50\u4e4b\u95f4\u8fde$0$\u8fb9\uff0c\u7136\u540e\u8dd1\u4e0a\u8ff0trick\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define y0 sdfjaewjfwa\n#define mp make_pair\n#define X first\n#define Y second\n#define pb push_back\n#define pf push_front\n#define ppf pop_front\nconst int inf=0x3f3f3f3f;\nconst int N=500,M=500,ASCII=150;\nint n,m;\nchar a[N+1][M+5];\nint id[ASCII];const int dx[]={-1,0,1,0},dy[]={0,1,0,-1};\nbool vld(int x,int y){return 1<=x&&x<=n&&1<=y&&y<=m;}\nvector<pair<int,bool> > nei[4*N*M+1];//\u90bb\u63a5\u77e9\u9635 \nint dis[4*N*M+1];\nvoid dijkstra(){//Dijkstra \n\tdeque<int> q;//\u53cc\u7aef\u961f\u5217 \n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[4-id[a[1][1]]]=0;q.pb(4-id[a[1][1]]);\n\twhile(q.size()){\n\t\tint x=q[0];\n\t\tq.ppf();\n\t\tfor(int i=0;i<nei[x].size();i++){\n\t\t\tint y=nei[x][i].X;bool len=nei[x][i].Y;\n\t\t\tif(dis[x]+len<dis[y]){\n\t\t\t\tdis[y]=dis[x]+len;\n\t\t\t\tif(len)q.pb(y);//\u961f\u5c3e\u52a0 \n\t\t\t\telse q.pf(y);//\u961f\u9996\u52a0 \n\t\t\t}\n\t\t}\n\t}\n//\tfor(int i=1;i<=4*n*m;i++)cout<<dis[i]<<\" \";puts(\"\");\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)cin>>a[i]+1;\n\tid['N']=0;id['E']=1;id['S']=2;id['W']=3;id['X']=0;\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)if(a[i][j]!='X')//\u8fde\u8fb9 \n\t\tfor(int k=0;k<4;k++){\n\t\t\tint x=i+dx[k],y=j+dy[k];\n\t\t\tnei[4*((i-1)*m+j)-k].pb(mp(4*((i-1)*m+j)-(k+1)%4,1));\n\t\t\tif(vld(x,y))nei[4*((i-1)*m+j)-k].pb(mp(4*((x-1)*m+y)-id[a[x][y]],0));\n\t\t}\n\tdijkstra();//\u6c42\u6700\u77ed\u8def \n\tcout<<(dis[4*n*m-id[a[n][m]]]<inf?dis[4*n*m-id[a[n][m]]]:-1);\n\treturn 0;\n}\n```",
        "postTime": 1591444959,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u6d1b\u8c37 P6233 - Awesome Arrowland Adventure"
    }
]