[
    {
        "content": "##### [\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P6310)\n\n---\n\n\u9996\u5148\uff0c\u672c\u9898\u5e76\u4e0d\u9700\u8981 DP\u3002\n\n\u8003\u8651\u4e00\u4e2a\u57ce\u5e02\u4f5c\u4e3a\u7cae\u4ed3\u65f6\u53ef\u4ee5\u4f7f\u591a\u5c11\u57ce\u5e02\u65e0\u9700\u4f5c\u4e3a\u7cae\u4ed3\u3002\n\n\u5efa\u51fa\u56fe\u7684 Kruskal \u91cd\u6784\u6811\uff0c\u500d\u589e\u5730\u627e\u5230\u6df1\u5ea6\u6700\u6d45\u7684\uff0c\u4e14\u6743\u503c\u4e0d\u5927\u4e8e\u7b2c $i$ \u4e2a\u57ce\u5e02\u8fd0\u7cae\u8f66\u6cb9\u91cf\u7684\u70b9 $loc_i$\uff08\u5728\u539f\u56fe\u4e2d\u662f\u8fb9\uff09\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8ba9\u7236\u4eb2\u4f5c\u4e3a\u7cae\u4ed3\uff0c\u4e00\u5b9a\u6bd4\u8ba9\u513f\u5b50\u4f5c\u4e3a\u7cae\u4ed3\u4f18\u2014\u2014\u53ef\u4ee5\u8986\u76d6\u66f4\u591a\u8282\u70b9\u3002\n\n\u8bb0 $cnt_i$ \u4e3a\u91cd\u6784\u6811\u4e2d $i$ \u8282\u70b9\u662f\u51e0\u4e2a\u53f6\u5b50\u500d\u589e\u627e\u5230\u7684\u6743\u503c\u6700\u5927\u70b9\u3002\n\n\u56e0\u6b64\uff0c\u53ea\u9700\u8981\u4ece\u6839\u8282\u70b9\u5f00\u59cb dfs\uff0c\u9047\u5230\u6700\u8fd1\u7684\u6ee1\u8db3 $cnt_i>0$ \u7684\u8282\u70b9\u5c06\u7b54\u6848\u589e\u52a0 $1$ \u5e76\u8fd4\u56de\u3002\u8fd9\u6837\u5c31\u5f97\u51fa\u4e86\u7b2c\u4e00\u4e2a\u7b54\u6848 $ans$\u3002\n\n\u8be5\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u8003\u8651\u7edf\u8ba1\u6bcf\u4e2a\u8282\u70b9\u4e0d\u4f5c\u4e3a\u7cae\u4ed3\u65f6\u7684\u7b54\u6848\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n- \u5f53 $loc_i$ \u4e0d\u5c5e\u4e8e\u521a\u624d dfs \u51fa\u7684\u70b9\u96c6\u65f6\uff0c\u7b54\u6848\u4e3a $ans$\u3002\n\n- \u5426\u5219\uff0c\u5f53 $cnt_{loc_i}>1$ \u65f6\uff0c\u53ea\u9700\u8981\u628a\u7cae\u4ed3\u6362\u6210\u76f8\u540c\u6548\u679c\u7684\u53e6\u4e00\u4e2a\u70b9\uff0c\u7b54\u6848\u4f9d\u7136\u4e3a $ans$\u3002\n- \u5426\u5219\uff0c\u5f53 $cnt_{loc_i}=1$ \u65f6\uff0c\u6211\u4eec\u6309\u7167\u521a\u521a\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u7684 dfs \u65b9\u5f0f\u4ece $loc_i$ \u5f00\u59cb dfs\uff0c\u7edf\u8ba1\u65b0\u589e\u7684\u70b9\u6570 $k$\uff0c\u7b54\u6848\u4e3a $ans+k-1$\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c dfs \u5230\u4e86 $i$\uff0c\u5219\u65e0\u6cd5\u5c06\u7cae\u98df\u8fd0\u5230 $i$\uff0c\u8f93\u51fa $-1$\u3002\n\n\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n\u524d\u4e24\u79cd\u60c5\u51b5\u5355\u6b21\u90fd\u662f $O(1)$ \u7684\u3002\n\n\u540e\u4e00\u79cd\u60c5\u51b5\uff0c\u8003\u8651\u91cd\u6784\u6811\u88ab\u82e5\u5e72\u4e2a $cnt_i>0$ \u7684\u70b9\u5206\u9694\u6210\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\uff0c\u6bcf\u6b21\u53ea\u4f1a\u8bbf\u95ee\u5230\u5176\u4e2d\u4e00\u4e2a\u3002\u603b\u5171\u8bbf\u95ee\u7684\u70b9\u6570\u662f $O(n)$ \u7ea7\u522b\u7684\u3002\n\n\u56e0\u6b64\uff0c\u8be5\u7b97\u6cd5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n### Code\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int SIZE=6e5+10,BIT=25,inf=0x3f3f3f3f;\ninline int read()\n{\n    int x=0,opr=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')opr=-opr;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=(x*10)+(ch^48),ch=getchar();\n    return x*opr;\n}\nvector<int>son[SIZE];\nint n,m,f[SIZE],val[SIZE],sizep,fa[SIZE][BIT],maxv[SIZE][BIT],g[SIZE],cnt[SIZE],loc[SIZE],ans;\nbool need[SIZE];\nint find(int x){return f[x]==x?x:f[x]=find(f[x]);}\nstruct edge{int u,v,w;inline void build(){u=read(),v=read(),w=read();};inline bool operator<(edge x){return w<x.w;}}e[SIZE];\nvoid dfs(int thisp)\n{\n    for(int i=1;i<BIT;i++)fa[thisp][i]=fa[fa[thisp][i-1]][i-1],maxv[thisp][i]=max(maxv[thisp][i-1],maxv[fa[thisp][i-1]][i-1]);\n    for(int nxt:son[thisp])dfs(nxt);\n}\nint tot;\ninline int get(int x){int G=g[x];for(int i=BIT-1;~i;i--)if(maxv[x][i]<=G)x=fa[x][i];return x;}\nint solve(int thisp){if(cnt[thisp]||thisp<=n)return tot++,need[thisp]=1;int res=0;for(int nxt:son[thisp])res+=solve(nxt);return res;}\nint test(int thisp,int from){if(thisp==from)return SIZE;if(cnt[thisp]&&thisp!=loc[from]||thisp<=n)return 1;int res=0;for(int nxt:son[thisp])res+=test(nxt,from);return res;}\nint main()\n{\n    sizep=n=read(),m=read();\n    for(int i=1;i<=n;i++)f[i]=i;\n    for(int i=1;i<=m;i++)e[i].build();\n    for(int i=1;i<=n;i++)g[i]=read();\n    sort(e+1,e+m+1);\n    for(int i=1,u,v;i<=m;i++)\n    {\n        u=find(e[i].u),v=find(e[i].v);\n        if(u==v)continue;\n        val[++sizep]=e[i].w,maxv[u][0]=maxv[v][0]=e[i].w,fa[u][0]=fa[v][0]=f[u]=f[v]=f[sizep]=sizep,son[sizep].push_back(u),son[sizep].push_back(v);\n    }\n    maxv[sizep][0]=inf,dfs(sizep);\n    for(int i=1;i<=n;i++)cnt[loc[i]=get(i)]++;\n    printf(\"%d \",ans=solve(sizep));\n    for(int i=1,res;i<=n;i++)\n    {\n        if(cnt[loc[i]]>1||!need[loc[i]]){printf(\"%d \",ans);continue;}\n        res=ans-1+test(loc[i],i);\n        printf(\"%d \",res>=SIZE?-1:res);\n    }\n    return 0;\n}\n```",
        "postTime": 1666186669,
        "uid": 327355,
        "name": "FQ04gty",
        "ccfLevel": 0,
        "title": "\u300cWdsr-1\u300d\u4ed3\u5e93\u5efa\u8bbe"
    },
    {
        "content": "\u4e00\u9053kruskal\u91cd\u6784\u6811\u7684\u9898\u76ee\n\n\u601d\u8def\u5e76\u4e0d\u96be\uff0c\u9996\u5148\u628akruskal\u91cd\u6784\u6811\u5efa\u51fa\u6765\uff0c\u63a5\u4e0b\u6765dp\n\ndp\u4e4b\u524d\u8981\u500d\u589e\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u6c42\u51fa\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u63a7\u5236\u7684\u8303\u56f4\uff0c\u5e76\u628a\u90a3\u4e2a\u70b9\u6807\u8bb0+1\n\n\u8bbe $f_u$ \u4e3a\u82e5 $u$ \u53ef\u4ee5\u9009\u5219\u63a7\u5236 $u$ \u7684\u5b50\u6811\u9700\u8981\u591a\u5c11\u4ed3\u5e93\n\n\u660e\u663e\uff0c\u82e5 $u$ \u7684\u6807\u8bb0 $\\geq1$ \u5219 $f_u=1$\uff0c\u5176\u4ed6\u60c5\u51b5 $f_u=\\sum_{v\\in son\\{u\\}} f_v$\n\n\u8bbe $tag_u$ \u4e3a $u$ \u5230\u6839\u6709\u591a\u5c11\u53ef\u63a7\u7684\u8282\u70b9\uff1b\u82e5 $tag_u>1$ \u5219\u8868\u793a $u$ \u8282\u70b9\u4e0d\u9009\u4e0d\u5f71\u54cd\u7b54\u6848\uff1b\u82e5 $tag_u=0$ \u5219\u8868\u793a\u8981\u628a $u$ \u7684\u7b54\u6848\u53d8\u6210 $f_{root}-1+\\sum_{v\\in son\\{u\\}}f_v$\n\n\u5224\u65ad -1\u53ea\u8981\u5224\u65ad\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684 $tag$ \u662f\u5426\u4e3a 1 \u5373\u53ef\n\nstd:\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 1000010\nusing namespace std;\nint n,m;\nstruct Node{int to,fr,val;}Edge[MAXN<<1];int cnt_Edge;\nvoid Add_Edge(int u,int v,int w){Edge[++cnt_Edge]={v,u,w};}\nvector<int>G[MAXN<<1];\nbool cmp(Node x,Node y){return x.val<y.val;}\nint fa[MAXN<<1][31],val[MAXN<<1];\nint tot;\nint fat[MAXN<<1];\nint get(int x){return (x==fat[x])?x:fat[x]=get(fat[x]);}\nvoid dfs(int u)\n{\n\tfor(int i=1;i<=27;i++)\n\t\tfa[u][i]=fa[fa[u][i-1]][i-1];\n\tfor(int i=0;i<G[u].size();i++)\n\t{\n\t\tint v=G[u][i];\n\t\tdfs(v);\n\t}\n}\nvoid kruskal()\n{\n\tsort(Edge+1,Edge+m+1,cmp);\n\ttot=n;\n\tfor(int i=1;i<=n;i++)fat[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=Edge[i].fr,v=Edge[i].to,w=Edge[i].val;\n\t\tint a=get(u),b=get(v);\n\t\tif(a==b)continue;\n\t\ttot++;\n\t\tfat[a]=fat[b]=fat[tot]=tot;\n\t\tval[tot]=w;\n\t\tG[tot].push_back(a);\n\t\tG[tot].push_back(b);\n\t\tfa[a][0]=fa[b][0]=tot;\n\t}\n\tdfs(tot);\n}\nint f[MAXN],pos[MAXN];\nint tag[MAXN];\nvoid dp(int u)\n{\n\tfor(int i=0;i<G[u].size();i++)\n\t{\n\t\tint v=G[u][i];\n\t\tdp(v);\n\t\tf[u]+=f[v];\n\t}\n\tif(pos[u]){f[u]=1;return;}\n}\nvoid dfs2(int u,int fl)\n{\n\ttag[u]=fl;\n\tfor(int i=0;i<G[u].size();i++)\n\t{\n\t\tint v=G[u][i];\n\t\tdfs2(v,fl+pos[u]);\n\t}\n}\nint ans[MAXN];vector<int>pnt[MAXN];\nvoid dfs3(int u)\n{\n\tif(pos[u]>1||tag[u])\n\t\tfor(int i=0;i<pnt[u].size();i++)\n\t\t\tans[pnt[u][i]]=f[tot];\n\telse if(pos[u])\n\t{\n\t\tans[pnt[u][0]]=f[tot]-1;\n\t\tfor(int i=0;i<G[u].size();i++)ans[pnt[u][0]]+=f[G[u][i]];\n\t\tif(tag[pnt[u][0]]<=1)ans[pnt[u][0]]=-1;\n\t}\n\tfor(int i=0;i<G[u].size();i++)\n\t{\n\t\tint v=G[u][i];\n\t\tdfs3(v);\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;scanf(\"%d%d%d\",&u,&v,&w);\n\t\tAdd_Edge(u,v,w);\n\t}\n\tkruskal();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;scanf(\"%d\",&x);\n\t\tint u=i;\n\t\tfor(int j=27;j>=0;j--)\n\t\t\tif(fa[u][j]&&val[fa[u][j]]<=x)\n\t\t\t\tu=fa[u][j];\n\t\tpos[u]++;pnt[u].push_back(i);\n\t}\n\tdp(tot);dfs2(tot,false);dfs3(tot);\n\tprintf(\"%d\",f[tot]);\n\tfor(int i=1;i<=n;i++)printf(\" %d\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1585970809,
        "uid": 65681,
        "name": "UltiMadow",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3]\u4ed3\u5e93\u5efa\u8bbe"
    }
]