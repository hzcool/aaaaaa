[
    {
        "content": "dalao\u4eec\u90fd\u7528KDtree\u505a\u9898\uff0c\u4f46\u662f\u6211\u592a\u84bb\u4e86\u4e0d\u4f1aKDtree\u3002\u6240\u4ee5\u6211\u6765\u5199\u4e00\u4e0b\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\uff0c\u987a\u4fbf\u5e2e\u52a9\u4e00\u4e0b\u548c\u6211\u4e00\u6837\u4e0d\u4f1aKDtree\u7684\u540c\u5b66\u3002\n\n\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u516c\u5f0f\u662f|x1-x2|+|y1-y2|\uff0c\u5e26\u7740\u7edd\u5bf9\u503c\u4e0d\u65b9\u4fbf\u505a\uff0c\u6211\u4eec\u628a\u7edd\u5bf9\u503c\u53bb\u6389\u3002\n\u8fd9\u4e2a\u5f0f\u5b50\u53bb\u7edd\u5bf9\u503c\u540e\u7684\u7ed3\u679c\u67094\u79cd\uff0c\u548c\u6a2a\u7eb5\u5750\u6807\u7684\u5927\u5c0f\u5173\u7cfb\u6709\u5173\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5148\u628a\u4ee5\u4e00\u79cd\u5750\u6807\u4e3a\u5173\u952e\u5b57\u6392\u5e8f(\u4ee5\u6a2a\u5750\u6807\u4e3a\u4f8b)\u3002\u6392\u5b8c\u5e8f\u540e\u5728i\u524d\u9762\u7684\u70b9x\u90fd\u6bd4xi\u5c0f\uff0c\u524d\u9762\u7684\u70b9\u7684\u7eb5\u5750\u6807\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff0cy<=yi\u6216\u8005y>yi\n\n\u5bf9\u4e8ey<=yi\u7684\u60c5\u51b5\u8ddd\u79bb\u4e3axi-x+yi-y\uff0c\u4e5f\u5c31\u662fxi+yi-x-y\uff1b\u5bf9\u4e8ey>yi\u7684\u60c5\u51b5\uff0c\u8ddd\u79bb\u4e3axi-x-yi+y\uff0c\u4e5f\u5c31\u662fxi-yi-x+y\u3002\u56e0\u4e3axi\u548cyi\u662f\u5b9a\u503c\uff0c\u8981\u53d6\u8ddd\u79bb\u6700\u5927\u6216\u6700\u5c0f\u503c\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u8ba9-x-y\u6216\u8005-x+y\u6700\u5927\u6216\u6700\u5c0f\uff0c\u4e5f\u5c31\u662f\u5728\u6240\u6709i\u524d\u9762\u7684\u70b9\u4e2d\u9009\u62e9-x-y\u548c-x+y\u7684\u6700\u5927/\u5c0f\u503c\u3002\n\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u6781\u503c\u7684\u95ee\u9898\uff0c\u8fd9\u79cd\u95ee\u9898\u5f53\u7136\u662f\u9700\u8981\u7528\u7ebf\u6bb5\u6811\u6765\u505a\u554a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u4e00\u68f5\u4ee5y\u503c\u5927\u5c0f\u4e3a\u4e0b\u6807\u7684\u7ebf\u6bb5\u6811\uff0c\u5148\u628ay\u503c\u79bb\u6563\u5316\uff0c\u7136\u540e\u6309\u7167x\u6392\u5e8f\uff0c\u6bcf\u6b21\u9009i\u70b9y\u503c\u6240\u5728\u4f4d\u7f6e\uff0c\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5f80\u524d\u53d6-x-y(\u56e0\u4e3a\u5f80\u524dy\u503c\u6bd4yi\u5c0f)\uff0c\u5f80\u540e\u53d6y-x\u3002\u7136\u540e\u628a-xi-yi\u548cyi-xi\u63d2\u5165\u3002\u5355\u6b21\u64cd\u4f5c\u6548\u7387logn\uff0c\u603b\u6548\u7387(nlogn)\u3002\n\n\u4f46\u662f\u8fd9\u6837\u8fd8\u6ca1\u7b97\u5b8c\u3002\u56e0\u4e3a\u6211\u4eec\u628a\u6bcf\u4e2ai\u548ci\u524d\u9762\u7684\u70b9\u6bd4\u8f83\uff0c\u8fd8\u6ca1\u6709\u548c\u540e\u9762\u7684\u70b9\u6bd4\u3002\n\n\u4e0b\u4e00\u6b65\u5c31\u540c\u7406\u5566\uff0c\u4ece\u540e\u5f80\u524d\u4f9d\u6b21\u63d2\u5165\u70b9\uff0c\u518d\u505a\u4e00\u6b21\u7ebf\u6bb5\u6811\u3002\u4f46\u662f\u56e0\u4e3ai\u540e\u9762\u7684\u70b9\u7684\u6a2a\u5750\u6807x>xi\uff0c\u6b64\u65f6\u8ddd\u79bb\u53d8\u6210\u4e86x+y-xi-yi\u6216\u8005x-y-xi+yi\u3002\u6240\u4ee5\u8bb0\u5f55\u7684\u503c\u5c31\u5bf9\u5e94\u5730\u53d8\u6210x+y\u548cx-y\u3002\n\n\u524d\u540e\u4e24\u904d\u7ebf\u6bb5\u6811\uff0c\u6548\u7387\u90fd\u662fO(nlogn),\u603b\u6548\u7387\u4e5f\u662f\u8fd9\u6837\u3002\n\n\u5f53\u7136\u4f60\u613f\u610f\u6309\u7167x\u5750\u6807\u5efa\u7ebf\u6bb5\u6811\uff0c\u6309\u7167y\u5750\u6807\u6392\u5e8f\u4e5f\u53ef\u4ee5\u3002\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u91cc\u4f7f\u7528\u7684\u662fzkw\u7ebf\u6bb5\u6811\uff0c\u6bd4\u6b63\u5e38\u7684\u9012\u5f52\u7ebf\u6bb5\u6811\u8981\u5feb\u4e0d\u5c11\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int inf=1e9+7;\n#define min(a,b) (a<b?a:b)\n#define max(a,b) (a>b?a:b)\nint n,x,y;\nint m;\nint sum[200010];\nint dis[100010][2];\nint tree[1000001][5];//minsxy maxsxy minbxy maxbxy\nstruct poi{\n    int x,y,num;\n}s[100010];\nint cmp(poi a,poi b)\n{\n    return a.y<b.y;\n}\nint cmp2(poi a,poi b)\n{\n    return a.x<b.x;\n}\nvoid init()\n{\n    for(int i=1;i<=(m<<1|1);i++)\n    tree[i][1]=tree[i][3]=inf,tree[i][2]=tree[i][4]=-inf;\n}\nvoid change(int x,int m1,int m2)\n{\n    x+=m;\n    tree[x][1]=min(tree[x][1],m1);\n    tree[x][2]=max(tree[x][2],m1);\n    tree[x][3]=min(tree[x][3],m2);\n    tree[x][4]=max(tree[x][4],m2);\n    x>>=1;\n    while(x)\n    {\n        tree[x][1]=min(tree[x<<1][1],tree[x<<1|1][1]);\n        tree[x][2]=max(tree[x<<1][2],tree[x<<1|1][2]);\n        tree[x][3]=min(tree[x<<1][3],tree[x<<1|1][3]);\n        tree[x][4]=max(tree[x<<1][4],tree[x<<1|1][4]);\n        x>>=1;\n    }\n}\nint ask(int l,int r,int nm)\n{\n    int ans=nm%2?inf:-inf;\n    for(l+=m-1,r+=m+1;l^r^1;l>>=1,r>>=1)\n    {\n        if(~l&1)\n        ans=nm%2?min(ans,tree[l^1][nm]):max(ans,tree[l^1][nm]);\n        if(r&1)\n        ans=nm%2?min(ans,tree[r^1][nm]):max(ans,tree[r^1][nm]);\n    }\n    return ans;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    m=1;while(m<n+2) m<<=1;\n    --m;\n    for(int i=1;i<=n;i++)\n    scanf(\"%d%d\",&s[i].x,&s[i].y),s[i].num=i,dis[i][0]=inf,dis[i][1]=-inf;\n    sort(s+1,s+n+1,cmp);\n    int tot=1;\n    for(int i=1;i<=n;i++)\n    sum[s[i].num]=s[i].y==s[i-1].y?tot:++tot;\n    sort(s+1,s+n+1,cmp2);\n    init();\n    for(int i=1;i<=n;i++)\n    {\n        int min1=ask(1,sum[s[i].num],1);\n        int max1=ask(1,sum[s[i].num],2);\n        int min2=ask(sum[s[i].num],tot,3);\n        int max2=ask(sum[s[i].num],tot,4);\n        dis[i][0]=min(dis[i][0],min1+s[i].x+s[i].y);\n        dis[i][0]=min(dis[i][0],min2+s[i].x-s[i].y);\n        dis[i][1]=max(dis[i][1],max1+s[i].x+s[i].y);\n        dis[i][1]=max(dis[i][1],max2+s[i].x-s[i].y);\n        change(sum[s[i].num],-s[i].x-s[i].y,s[i].y-s[i].x);\n    }\n    init();\n    for(int i=n;i>=1;i--)\n    {\n        int min1=ask(1,sum[s[i].num],1);\n        int max1=ask(1,sum[s[i].num],2);\n        int min2=ask(sum[s[i].num],tot,3);\n        int max2=ask(sum[s[i].num],tot,4);\n        dis[i][0]=min(dis[i][0],min1-s[i].x+s[i].y);\n        dis[i][0]=min(dis[i][0],min2-s[i].x-s[i].y);\n        dis[i][1]=max(dis[i][1],max1-s[i].x+s[i].y);\n        dis[i][1]=max(dis[i][1],max2-s[i].x-s[i].y);\n        change(sum[s[i].num],s[i].x-s[i].y,s[i].y+s[i].x);\n    }\n    int ans=inf;\n    for(int i=1;i<=n;i++)\n    ans=min(ans,dis[i][1]-dis[i][0]);\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1502432549,
        "uid": 17828,
        "name": "revenger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2479 \u3010[SDOI2010]hideseek\u3011"
    },
    {
        "content": "## \u3010\u9898\u610f\u3011\n\n$dis(A,B)$ \u662f $AB$ \u4e24\u70b9\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\n\n\u6c42 $\\min_{i=1}^{n}(\\max_{j=1}^{n}dis(p_i,p_j)-\\min_{j=1}^{n}dis(p_i,p_j)(i\\ne j))$\u3002\n\n## \u3010\u5206\u6790\u3011\n\n\u5e73\u9762\u4e0a\u7684\u70b9\u53ef\u4ee5\u7528 K-D Tree \u7ef4\u62a4\u3002\n\n\u6c42\u4e0e\u70b9 $p_i$ \u7684\u8ddd\u79bb\u7684\u6700\u5927\uff08\u5c0f\uff09\u503c\uff0c\u53ef\u4ee5\u5728 K-D Tree \u4e0a\u641c\u7d22\u3002\n\n### \u526a\u679d1\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\uff0c\u7ef4\u62a4\u8986\u76d6\u8fd9\u4e2a\u70b9\u96c6\u7684\u77e9\u5f62\u7684\u8fb9\u754c\u3002\n\n\u4f30\u4ef7\u51fd\u6570\u8bbe\u4e3a\u5f53\u524d\u70b9\u4e0e\u8be5\u77e9\u5f62\u7684\u6700\u8fd1\uff08\u8fdc\uff09\u8ddd\u79bb\uff0c\u5224\u65ad\u5f53\u524d\u533a\u95f4\u80fd\u5426\u4ea7\u751f\u66f4\u4f18\u7684\u7b54\u6848\u3002\n\n### \u526a\u679d2\uff1a \n\n\u904d\u5386\u5230\u67d0\u4e2a\u8282\u70b9\u65f6\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u4f30\u4ef7\u51fd\u6570\u3002\n\n\u5148\u904d\u5386\u4f30\u4ef7\u51fd\u6570\u66f4\u4f18\u7684\u5b50\u8282\u70b9\u3002\n\n\u6ce8\u610f\u641c\u7d22\u6700\u8fd1\u8ddd\u79bb\u65f6\u4e0d\u80fd\u8ba1\u7b97\u91cd\u5408\u7684\u70b9\u3002\n\n## \u3010\u7b97\u6cd5\u3011\n\nK-D Tree\n\n## \u3010\u4ee3\u7801\u3011\n\n```cpp\n#include<bits/stdc++.h>\n#define DB double\nusing namespace std;\nconst int maxn=1e5+5,INF=2147483647;\nconst DB A=0.75;\nint n;\nint now1,now2;\nint ans=INF;\nint D;\nstruct point{\n\tint x[2];\n\tbool operator !=(point b)const{return x[0]!=b.x[0]||x[1]!=b.x[1];}\n}p[maxn],a[maxn];\nbool cmp(point x,point y){\n\treturn x.x[D]<y.x[D];\n}\nint max(int x,int y){\n\treturn x>y?x:y;\n}\nint min(int x,int y){\n\treturn x<y?x:y;\n}\nint abs(int x){\n\treturn x>0?x:-x;\n}\nstruct KDT{\n\tint tot,rt;\n\tint top,rub[maxn];\n\tstruct ele{\n\t\tpoint p;\n\t\tint l,r,s,mi[2],mx[2];\n\t}t[maxn];\n\t#define mid (l+r>>1)\n\t#define ls(k) t[k].l\n\t#define rs(k) t[k].r\n\t#define p(k) t[k].p\n\t#define s(k) t[k].s\n\tint New(){\n\t\treturn top?rub[top--]:++tot;\n\t}\n\tvoid pushup(int k){\n\t\tt[k].mi[0]=t[k].mx[0]=p(k).x[0];\n\t\tt[k].mi[1]=t[k].mx[1]=p(k).x[1];\n\t\ts(k)=1;\n\t\tif(ls(k)){\n\t\t\tt[k].mi[0]=min(t[k].mi[0],t[ls(k)].mi[0]);\n\t\t\tt[k].mi[1]=min(t[k].mi[1],t[ls(k)].mi[1]);\n\t\t\tt[k].mx[0]=max(t[k].mx[0],t[ls(k)].mx[0]);\n\t\t\tt[k].mx[1]=max(t[k].mx[1],t[ls(k)].mx[1]);\n\t\t\ts(k)+=s(ls(k));\n\t\t}\n\t\tif(rs(k)){\n\t\t\tt[k].mi[0]=min(t[k].mi[0],t[rs(k)].mi[0]);\n\t\t\tt[k].mi[1]=min(t[k].mi[1],t[rs(k)].mi[1]);\n\t\t\tt[k].mx[0]=max(t[k].mx[0],t[rs(k)].mx[0]);\n\t\t\tt[k].mx[1]=max(t[k].mx[1],t[rs(k)].mx[1]);\n\t\t\ts(k)+=s(rs(k));\n\t\t}\n\t}\n\tint build(int l,int r,int d){\n\t\tif(l>r) return 0;\n\t\tint x=New();\n\t\tD=d;\n\t\tnth_element(p+l,p+mid,p+r+1,cmp);\n\t\tp(x)=p[mid];\n\t\tls(x)=build(l,mid-1,d^1);\n\t\trs(x)=build(mid+1,r,d^1);\n\t\tpushup(x);\n\t\treturn x;\n\t}\n\tvoid clear(int k,int pos){\n\t\tif(ls(k)) clear(ls(k),pos);\n\t\tp[pos+s(ls(k))+1]=p(k);\n\t\trub[++top]=k;\n\t\tif(rs(k)) clear(rs(k),pos+s(ls(k))+1);\n\t}\n\tvoid check(int &k,int d){\n\t\tint c=A*s(k);\n\t\tif(s(ls(k))>c||s(rs(k))>c){\n\t\t\tclear(k,0);\n\t\t\tk=build(1,s(k),d);\n\t\t}\n\t}\n\tvoid insert(int &k,point p,int d){\n\t\tif(!k){k=New();ls(k)=rs(k)=0,p(k)=p,pushup(k);return;}\n\t\tif(p.x[d]<=p(k).x[d]) insert(ls(k),p,d^1);\n\t\telse insert(rs(k),p,d^1);\n\t\tpushup(k);\n\t\tcheck(k,d);\n\t}\n\tint dis1(int x,int y,int x1,int y1,int x2,int y2){\n\t\treturn (x<x1?x1-x:(x>x2?x-x2:0))+(y<y1?y1-y:(y>y2?y-y2:0));\n\t}\n\tvoid query1(int k,point x){\n\t\tif(!k) return;\n\t\tif(dis1(x.x[0],x.x[1],t[k].mi[0],t[k].mi[1],t[k].mx[0],t[k].mx[1])>now1) return;\n\t\tif(p(k)!=x) now1=min(now1,dis1(x.x[0],x.x[1],p(k).x[0],p(k).x[1],p(k).x[0],p(k).x[1]));\n\t\tint dl=ls(k)?dis1(x.x[0],x.x[1],t[ls(k)].mi[0],t[ls(k)].mi[1],t[ls(k)].mx[0],t[ls(k)].mx[1]):INF,\n\t\t\tdr=rs(k)?dis1(x.x[0],x.x[1],t[rs(k)].mi[0],t[rs(k)].mi[1],t[rs(k)].mx[0],t[rs(k)].mx[1]):INF;\n\t\tif(dl<=dr){\n\t\t\tquery1(ls(k),x);\n\t\t\tquery1(rs(k),x);\n\t\t}else{\n\t\t\tquery1(rs(k),x);\n\t\t\tquery1(ls(k),x);\n\t\t}\n\t}\n\tint dis2(int x,int y,int x1,int y1,int x2,int y2){\n\t\treturn max(abs(x-x1),abs(x-x2))+max(abs(y-y1),abs(y-y2));\n\t}\n\tvoid query2(int k,point x){\n\t\tif(!k) return;\n\t\tif(dis2(x.x[0],x.x[1],t[k].mi[0],t[k].mi[1],t[k].mx[0],t[k].mx[1])<now2) return;\n\t\tnow2=max(now2,dis2(x.x[0],x.x[1],p(k).x[0],p(k).x[1],p(k).x[0],p(k).x[1]));\n\t\tint dl=ls(k)?dis2(x.x[0],x.x[1],t[ls(k)].mi[0],t[ls(k)].mi[1],t[ls(k)].mx[0],t[ls(k)].mx[1]):-INF,\n\t\t\tdr=rs(k)?dis2(x.x[0],x.x[1],t[rs(k)].mi[0],t[rs(k)].mi[1],t[rs(k)].mx[0],t[rs(k)].mx[1]):-INF;\n\t\tif(dl>=dr){\n\t\t\tquery2(ls(k),x);\n\t\t\tquery2(rs(k),x);\n\t\t}else{\n\t\t\tquery2(rs(k),x);\n\t\t\tquery2(ls(k),x);\n\t\t}\n\t}\n}T;\nchar gc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\n#define getchar gc\nint read(){\n    int ret=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n    while(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n    return ret*f;\n}\nint main(){\n\tfreopen(\"P2479.in\",\"r\",stdin);\n\tfreopen(\"P2479.out\",\"w\",stdout);\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i].x[0]=read(),a[i].x[1]=read();\n\t\tT.insert(T.rt,a[i],0);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tnow1=INF,now2=-INF;\n\t\tT.query1(T.rt,a[i]),T.query2(T.rt,a[i]);\n\t\tans=min(ans,now2-now1);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1630844418,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2479 \u3010[SDOI2010]\u6349\u8ff7\u85cf\u3011"
    },
    {
        "content": "\u60f3\u5230\u4ee5\u524d\u505a\u8fc7\u7684$poj$\u7684\u4e00\u9053\u9898$stars$\uff08\u597d\u50cf\u662f\u8fd9\u4e48\u53eb\u7684\uff09\n\n\u8003\u8651\u5982\u4f55\u628a\u7edd\u5bf9\u503c\u6254\u6389\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9$(x,y)$\u548c\u5b83\u5de6\u4e0b\u7684\u4e00\u4e2a\u70b9$(x1,y1)(x1<=x,y1<=y)$\uff0c\u90a3\u4e48\u4e24\u70b9\u66fc\u54c8\u987f\u8ddd\u79bb:$x-x1+y-y1=(x+y)-(x1+y1)$\n\n\u5982\u679c\u53ea\u5b58\u5728\u8fd9\u4e00\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u628a\u70b9\u6309\u7167\u7b2c\u4e00\u5173\u952e\u5b57$x$\u7b2c\u4e8c\u5173\u952e\u5b57$y$\u6392\u5e8f\uff0c\u5148\u4fdd\u8bc1x\u5347\u5e8f\u60c5\u51b5\u4e0b\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u6bd4$y$\u5c0f\u7684\u70b9\u4e2d$(x+y)$\u7684\u6700\u5927\u503c/\u6700\u5c0f\u503c\u6c42\u5f97\u7b54\u6848\n\n\u7136\u540e\u5c31\u662f\u63a8\u5e7f\u5230\u56db\u4e2a\u65b9\u5411\uff08\u5de6\u4e0a\uff0c\u5de6\u4e0b\uff0c\u53f3\u4e0a\uff0c\u53f3\u4e0b\uff09\n\n - $x>=x1,y>=y1:dis=(x+y)-(x1+y1)$\n - $x>=x1,y<y1:dis=x-x1+y1-y=(x-y)-(x1-y1)$\n - $x<=x1, y>=y1:dis=x1-x+y-y1=(-x+y)-(-x1+y1)$\n - $x<=x1,y<=y1:dis=(-x-y)-(-x1-y1)$\n\n\u524d\u4e24\u4e2a\u6b63\u7740\u8dd1\uff0c\u540e\u4e24\u4e2a\u5012\u7740\u8dd1\u4fdd\u8bc1x\u7684\u5355\u8c03\u6027\n\n\u5bf9\u4e8e\u56db\u79cd\u60c5\u51b5\u5206\u522b\u5f002\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4$max/min$\n\n\u6ce8\u610f\u9700\u8981\u79bb\u6563\u5316\n\n\u4ee3\u7801\u53ef\u8bfb\u6027\u5f88\u4f4e\uff0c\u4e0d\u4fe1\u4f60\u770b\u770b\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 200010\nusing namespace std;\nstruct point{\n\tint x, y, z;\n}a[maxn], b[maxn];\nint n, m, p, Min[maxn], Max[maxn], min1[maxn], min2[maxn], min3[maxn], min4[maxn], max1[maxn], max2[maxn], max3[maxn], max4[maxn];\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nbool cmp(point x, point y){ return x.x == y.x ? x.y < y.y : x.x < y.x; }\nbool cmp1(point x, point y){ return x.x < y.x; }\nint lowbit(int x){return x & -x; }\nvoid add1(int x, int y){ for (; x <= p; x += lowbit(x)) max1[x] = max(max1[x], y), min1[x] = min(min1[x], y); }\nint query11(int x){ int sum = -1e9; for (; x; x -= lowbit(x)) sum = max(sum, max1[x]); return sum; }\nint query12(int x){ int sum = 1e9; for (; x; x -= lowbit(x)) sum = min(sum, min1[x]); return sum; }\nvoid add2(int x, int y){ for (; x; x -= lowbit(x)) max2[x] = max(max2[x], y), min2[x] = min(min2[x], y); }\nint query21(int x){ int sum = -1e9; for (; x <= p; x += lowbit(x)) sum = max(sum, max2[x]); return sum; }\nint query22(int x){ int sum = 1e9; for (; x <= p; x += lowbit(x)) sum = min(sum, min2[x]); return sum; }\nvoid add3(int x, int y){ for (; x <= p; x += lowbit(x)) max3[x] = max(max3[x], y), min3[x] = min(min3[x], y); }\nint query31(int x){ int sum = -1e9; for (; x; x -= lowbit(x)) sum = max(sum, max3[x]); return sum; }\nint query32(int x){ int sum = 1e9; for (; x; x -= lowbit(x)) sum = min(sum, min3[x]); return sum; }\nvoid add4(int x, int y){ for (; x; x -= lowbit(x)) max4[x] = max(max4[x], y), min4[x] = min(min4[x], y); }\nint query41(int x){ int sum = -1e9; for (; x <= p; x += lowbit(x)) sum = max(sum, max4[x]); return sum; }\nint query42(int x){ int sum = 1e9; for (; x <= p; x += lowbit(x)) sum = min(sum, min4[x]); return sum; }\nvoid Add1(int i){ add1(a[i].z, a[i].x + a[i].y), add2(a[i].z, a[i].x - a[i].y); }\nvoid Add2(int i){ add3(a[i].z, -a[i].x + a[i].y), add4(a[i].z, -a[i].x - a[i].y); }\n\nint main(){\n\tn = read();\n\tfor (int i = 1; i <= n; ++i) a[i] = (point){read(), read()}, b[++m] = (point){a[i].x, m}, b[++m] = (point){a[i].y, m}, Max[i] = -1e9, Min[i] = 1e9;\n\tsort(b + 1, b + 1 + m, cmp1);\n\tb[0].x = b[1].x + 1;\n\tfor (int i = 1; i <= m; ++i){\n\t\tint x = b[i].x == b[i - 1].x ? p : ++p;\n\t\tif (b[i].y % 2 == 0) a[b[i].y >> 1].z = p;\n\t}\n\tsort(a + 1, a + 1 + n, cmp);\n\tfor (int i = 1; i <= p; ++i) min1[i] = min2[i] = min3[i] = min4[i] = 1e9, max1[i] = max2[i] = max3[i] = max4[i] = -1e9;\n\tAdd1(1); \n\tfor (int i = 2; i <= n; ++i){\n\t\tMax[i] = max(Max[i], max(a[i].x + a[i].y - query12(a[i].z), a[i].x - a[i].y - query22(a[i].z))),\n\t\tMin[i] = min(Min[i], min(a[i].x + a[i].y - query11(a[i].z), a[i].x - a[i].y - query21(a[i].z)));\n\t\tAdd1(i);\n\t}\n\tAdd2(n);\n\tfor (int i = n - 1; i; --i){\n\t\tMax[i] = max(Max[i], max(-a[i].x + a[i].y - query32(a[i].z), -a[i].x - a[i].y - query42(a[i].z))),\n\t\tMin[i] = min(Min[i], min(-a[i].x + a[i].y - query31(a[i].z), -a[i].x - a[i].y - query41(a[i].z)));\n\t\tAdd2(i);\n\t}\n\tint ans = 1e9;\n\tfor (int i = 1; i <= n; ++i) ans = min(ans, Max[i] - Min[i]);\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1569842457,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2479 \u3010[SDOI2010]\u6349\u8ff7\u85cf\u3011"
    },
    {
        "content": "\u75282-D\u6811\u7ef4\u62a4\uff08\u867d\u7136\u6211\u7684\u4ee3\u7801\u4e0d\u5f00-O2\u4e5f\u88ab\u5361\u5e38\u4e86QwQ\uff09\u6c42\u67d0\u4e2a\u70b9\u5230\u5176\u4ed6\u4efb\u610f\u70b9\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u90e8\u5206\u5176\u4ed6\u4eba\u7684\u9898\u89e3\u5df2\u7ecf\u8bb2\u8fc7\u4e86\u3002\n\n\u81f3\u4e8e\u6700\u5927\u503c\u5b8c\u5168\u53ef\u4ee5\u4e0d\u75282-D\u6811\u3002\u8003\u8651\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u516c\u5f0f\uff08\u5176\u4e2d$(x,y)$\u4e3a\u5f53\u524d\u6211\u4eec\u8981\u67e5\u8be2\u7684\u8282\u70b9\uff0c$(x_i,y_i)$\u4e3a\u5176\u4ed6\u4efb\u610f\u4e00\u70b9\uff09\uff1a\n\n$\\lvert x-x_i \\rvert + \\lvert y - y_i \\rvert = \\max (A_{i,0}, A_{i,1}, A_{i,2}, A_{i,3})$\n\n- $A_{i, 0} = (x+y) - (x_i + y_i)$\n- $A_{i, 1} = (x-y) - (x_i - y_i)$\n- $A_{i, 2} = (-x+y) - (-x_i + y_i)$\n- $A_{i, 3} = (-x-y) - (-x_i - y_i)$\n\n\u6c42\u70b9$(x,y)$\u5230\u5176\u4ed6\u4efb\u610f\u4e00\u70b9\u66fc\u54c8\u987f\u8ddd\u79bb\u7684\u6700\u5927\u503c\uff0c\u6839\u636emax\u8fd0\u7b97\u7684\u7ed3\u5408\u5f8b\u548c\u5206\u914d\u5f8b\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a\n\n$\\displaystyle\\max_{1 \\le i \\le N} \\lvert x-x_i \\rvert + \\lvert y - y_i \\rvert = \\max(C_0, C_1, C_2, C_3)$\n\n- $C_0 = (x + y) - \\displaystyle\\min_{i \\le i \\le n}(x_i + y_i)$\n- $C_1 = (x - y) - \\displaystyle\\min_{i \\le i \\le n}(x_i - y_i)$\n- $C_2 = (-x + y) - \\displaystyle\\min_{i \\le i \\le n}(-x_i + y_i)$\n- $C_3 = (-x - y) - \\displaystyle\\min_{i \\le i \\le n}(-x_i - y_i)$\n\n\u53f3\u8fb9min\u90e8\u5206\u53ef\u4ee5\u5728\u8f93\u5165\u6240\u6709\u70b9\u7684\u5750\u6807\u540e\u76f4\u63a5$\\text{O}(N)$\u9884\u5904\u7406\u5f97\u5230\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u6027\u80fd\u4e0e\u5c01\u88c5\u597d\u96be\u517c\u5f97\uff0c\u5fc3\u7d2f(\u256f#-_-)\u256f\uff09\uff1a\n```cpp\n#include <cstdio> \n#include <cstring> \n#include <algorithm> \n#include <cstdlib> \n#include <array> \n#include <iterator> \n\nchar buf[100 * 1024 * 1024];\nint buf_pos;\n\nvoid* operator new(size_t n) \n{\n    void* res = buf + buf_pos; \n    buf_pos += n;\n    return res; \n}\n\nstruct Point\n{   \n    using Proj = int Point::*; \n\n    int x, y; \n    bool operator == (const Point& rhs) const {\n        return x == rhs.x && y == rhs.y; \n    }\n    int compare(const Point& rhs, Proj p) const {\n        return this->*p - rhs.*p; \n    }\n    int dist(const Point& rhs) const {\n        return std::abs(x - rhs.x) + std::abs(y - rhs.y); \n    }\n    int dist(int rx, int ry) const {\n        return std::abs(x - rx) + std::abs(y - ry); \n    }\n};\nconstexpr std::array point_projs = {&Point::x, &Point::y}; \n\nstruct Range \n{\n    Point min, max; \n    int min_possible_distance(const Point& p) const \n    {\n        int res = 0;\n        for (auto m: point_projs)\n        {\n            res += std::max(0, p.*m - max.*m);\n            res += std::max(0, min.*m - p.*m);\n        }\n        return res; \n    }\n    void expand(const Range& rhs)\n    {\n        for (auto m: point_projs)\n        {\n            min.*m = std::min(min.*m, rhs.min.*m);\n            max.*m = std::max(max.*m, rhs.max.*m); \n        }\n    }\n};\n\nstruct Node\n{\n    Point point;\n    Range range; \n    Node* ch[2] = {nullptr, nullptr};\n\n    Node(Point p): point(p), range({p, p}) {} \n};\n\ntemplate <int I, class Iter> \nNode* build_2d_tree(Iter first, Iter last)\n{\n    int len = std::distance(first, last); \n    if (len == 0)\n        return nullptr; \n    if (len == 1)\n        return new Node(*first); \n\n    auto mid = first + len / 2; \n    std::nth_element(first, mid, last, [] (const Point& x, const Point& y) {\n        return x.compare(y, point_projs[I]) < 0;\n    });\n\n    Node* res = new Node(*mid); \n    if ((res->ch[0] = build_2d_tree<I ^ 1>(first, mid)) != nullptr)\n        res->range.expand(res->ch[0]->range); \n    if ((res->ch[1] = build_2d_tree<I ^ 1>(mid + 1, last)) != nullptr)\n        res->range.expand(res->ch[1]->range); \n    return res; \n}\n\nvoid query_min_distance_aux(Node* cur, const Point& p, int& cur_res)\n{\n    if (! (p == cur->point))\n        cur_res = std::min(cur_res, p.dist(cur->point)); \n    for (Node* c: cur->ch)\n    {\n        if (c != nullptr && c->range.min_possible_distance(p) < cur_res)\n            query_min_distance_aux(c, p, cur_res); \n    }\n}\n\nint query_min_distance(Node* cur, Point p) \n{\n    int cur_res = std::numeric_limits<int>::max(); \n    query_min_distance_aux(cur, p, cur_res);\n    return cur_res; \n}\n\nconstexpr int maxN = (int)1e5 + 10; \nPoint point[maxN];\nint N; \nint T[4];\n\nint main()\n{\n    scanf(\"%d\", &N);\n    for (int& t: T)\n        t = std::numeric_limits<int>::max(); \n    for (int x, y, i = 0; i < N; i++)\n    {\n        scanf(\"%d%d\", &x, &y);\n        T[0] = std::min(T[0], x + y);\n        T[1] = std::min(T[1], x - y); \n        T[2] = std::min(T[2], -x + y);\n        T[3] = std::min(T[3], -x - y); \n        point[i] = {x, y}; \n    }\n    Node* root = build_2d_tree<0>(point, point + N); \n    int res = std::numeric_limits<int>::max(); \n    for (int i = 0; i < N; i++)\n    {\n        auto [x, y] = point[i]; \n        int max_d = std::max({\n            (x + y) - T[0],\n            (x - y) - T[1],\n            (-x + y) - T[2],\n            (-x - y) - T[3]\n        });\n        int min_d = query_min_distance(root, point[i]); \n        res = std::min(res, max_d - min_d);\n    }\n    printf(\"%d\\n\", res);\n    return 0; \n}\n```\n",
        "postTime": 1558196609,
        "uid": 49526,
        "name": "Orina_zju",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2479 \u3010[SDOI2010]\u6349\u8ff7\u85cf\u3011"
    },
    {
        "content": "\u989d\u2026\u2026\u4e00\u9053K-D-Tree\u7684\u88f8\u9898\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u4e3a\u5565\u6ca1\u6709\u8fd9\u4e2atag\u2026\u2026\n\n\u6240\u8c13kdtree\uff0c\u5c31\u662f\u6309\u7167\u7ef4\u5ea6\u5bf9\u9ad8\u7ef4\u533a\u95f4\u8fdb\u884c\u5212\u5206\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u3002kdtree\u672c\u8d28\u4e0a\u662f\u4e8c\u53c9\u6811\uff0c\u6027\u8d28\u4e0a\u7c7b\u4f3c\u4e8e\u4e8c\u53c9\u6392\u5e8f\u6811\u3002\n\n\u4f46\u662fkdtree\u7684\u5c42\u6570\u548c\u7ef4\u5ea6\u6709\u4e25\u683c\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u50cf\u4e8c\u53c9\u6392\u5e8f\u6811\u4e00\u6837\u8fdb\u884c\u65cb\u8f6c\u3002\n\n\u4f46\u662f\u66ff\u7f6a\u7f8a\u7684\u62cd\u6241\u91cd\u5efa\u6cd5\u5728kdtree\u4e0a\u4f9d\u65e7\u53ef\u4ee5\u4f7f\u7528\u3002\n\n\u8fd9\u9898\u4e0d\u5f00O2\u5361\u5e38\uff08\u53ef\u80fd\u662f\u6211\u6570\u636e\u7ed3\u6784\u65e5\u5e38\u88ab\u5361\uff09\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u66ff\u7f6a\u7f8a\u7ef4\u62a4\uff1f\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 500005\n#define inf 1000000000\nusing namespace std;\nint x[N],y[N];\nint n,f,rt,m,ans;\nstruct Point{\n    int d[2],maxv[2],minv[2],l,r;\n    int& operator[](int x){return d[x];}\n    friend bool operator<(Point a,Point b){return a[f]<b[f];}\n    friend int querydis(Point a,Point b){return abs(a[1]-b[1])+abs(a[0]-b[0]);}\n}p[N];\nstruct K_D_Tree{\n    Point t[N],T;int ans;\n    void pushup(int x){\n        int l=t[x].l,r=t[x].r;\n        for(int i=0;i<=1;i++){\n            t[x].minv[i]=t[x].maxv[i]=t[x][i];\n            if(l){\n                t[x].minv[i]=min(t[x].minv[i],t[l].minv[i]);\n                t[x].maxv[i]=max(t[x].maxv[i],t[l].maxv[i]);\n            }\n            if(r){\n                t[x].minv[i]=min(t[x].minv[i],t[r].minv[i]);\n                t[x].maxv[i]=max(t[x].maxv[i],t[r].maxv[i]);\n            }\n        }\n    }\n    int build(int l,int r,int f){\n        int mid=(l+r)>>1;\n        nth_element(p+l,p+mid,p+r+1);\n        t[mid]=p[mid];\n        for(int i=0;i<=1;i++)t[mid].minv[i]=t[mid].maxv[i]=t[mid][i];\n        if(l<mid)t[mid].l=build(l,mid-1,f^1);\n        if(r>mid)t[mid].r=build(mid+1,r,f^1);\n        pushup(mid);return mid;\n    }\n    int getmin(Point a){\n        int ans=0;\n        for(int i=0;i<=1;i++){\n            ans+=max(T[i]-a.maxv[i],0);\n            ans+=max(a.minv[i]-T[i],0);\n        }\n        return ans;\n    }\n    int getmax(Point a){\n        int ans=0;\n        for(int i=0;i<=1;i++){\n            ans+=max(abs(T[i]-a.maxv[i]),abs(T[i]-a.minv[i]));\n        }\n        return ans;\n    }\n    void querymax(int x){\n        ans=max(ans,querydis(t[x],T));\n        int l=t[x].l,r=t[x].r,dl=-inf,dr=-inf;\n        if(l)dl=getmax(t[l]);if(r)dr=getmax(t[r]);\n        if(dl>dr){\n            if(dl>ans)querymax(l);if(dr>ans)querymax(r);\n        }\n        else{\n            if(dr>ans)querymax(r);if(dl>ans)querymax(l);\n        }\n    }\n    void querymin(int x){\n        int tmp=querydis(T,t[x]);\n        if(tmp)ans=min(ans,tmp);\n        int l=t[x].l,r=t[x].r,dl=inf,dr=inf;\n        if(l)dl=getmin(t[l]);if(r)dr=getmin(t[r]);\n        if(dl<dr){\n            if(dl<ans)querymin(l);if(dr<ans)querymin(r);\n        }else{\n            if(dr<ans)querymin(r);if(dl<ans)querymin(l);\n        }\n    }\n    int query(int f,int x,int y){\n        T[0]=x;T[1]=y;\n        if(!f)ans=inf,querymin(rt);\n        else ans=-inf,querymax(rt);\n        return ans;\n    }\n}kd;\ninline int read(){\n    int f=1,x=0;char ch;\n    do{ch=getchar();if(ch=='-')f=-1;}while(ch<'0'||ch>'9');\n    do{x=x*10+ch-'0';ch=getchar();}while(ch>='0'&&ch<='9');\n    return f*x;\n}\nint main(){\n    n=read();ans=inf;\n    for(int i=1;i<=n;i++){\n        x[i]=read();y[i]=read();\n        p[i][0]=x[i];p[i][1]=y[i];\n    }\n    rt=kd.build(1,n,0);\n    for(int i=1;i<=n;i++){\n        int minv=kd.query(0,x[i],y[i]),maxv=kd.query(1,x[i],y[i]);\n        ans=min(ans,maxv-minv);\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1494429290,
        "uid": 2978,
        "name": "zcysky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2479 \u3010[SDOI2010]hideseek\u3011"
    },
    {
        "content": "\u627e\u4e86\u4e00\u5708\u5c45\u7136\u6ca1\u770b\u5230 cdq \u5206\u6cbb\u7684\u9898\u89e3\uff0c\u6240\u4ee5\u849f\u84bb\u6765\u8865\u5145\u4e00\u7bc7\u3002\n\n# \u9898\u76ee\n[\u6349\u8ff7\u85cf](https://www.luogu.com.cn/problem/P2479)\n\n# \u9898\u610f\n\u521d\u59cb\u7ed9\u6211\u4eec n \u4e2a\u5750\u6807\uff0c\u8be2\u95ee\u6211\u4eec\u5f53\u9009\u62e9\u6700\u4f18\u65f6\uff0c\u6240\u9009\u7684\u521d\u59cb\u70b9\u5230\u6700\u8fdc\u5730\u70b9\u548c\u6700\u8fd1\u5730\u70b9\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u5dee\u6700\u5c0f\u4e3a\u591a\u5c11\u3002\n\n# \u601d\u8def\n~~\u7531\u4e8e\u521a\u5b66\u4e60\u8fc7 cdq \u5206\u6cbb~~\uff0c\u6211\u4eec\u4e00\u4e0a\u6765\u8003\u8651\u628a\u66fc\u54c8\u987f\u8ddd\u79bb\u4e2d\u7684\u7edd\u5bf9\u503c\u5220\u53bb\u3002~~\u8981\u4e0d\u7136\u90fd\u4e0d\u662f\u504f\u5e8f\u5173\u7cfb\u6211\u4eec\u600e\u4e48\u7528 cdq \u7ef4\u62a4\uff1f~~\n\n\u6839\u636e\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u4ee5\u4e0b\u516c\u5f0f\uff1a( j \u8868\u793a\u6240\u9009\u521d\u59cb\u70b9\u7684\u4e0b\u6807)\n\n$\\min_{j=1}^n(\\max_{i=1}^n(\\left\\vert x_i-x_j\\right\\vert+\\left\\vert y_i-y_j\\right\\vert)-\\min_{i=1}^n(\\left\\vert x_i-x_j\\right\\vert+\\left\\vert y_i-y_j\\right\\vert))(i!=j)$\n\n\u5982\u679c\u6309\u7167\u4e0a\u9762\u7684\u516c\u5f0f\u679a\u4e3e\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$ \u7684\u66b4\u529b\u3002(~~\u5e9f\u8bdd~~)\n\n\u4e0a\u9762\u7684\u516c\u5f0f\u5b9e\u5728\u662f\u4ee4\u4eba\u773c\u82b1\u7f2d\u4e71\uff0c\u6211\u4eec\u8003\u8651\u5148\u5c06\u521d\u59cb\u70b9\u5750\u6807\u7528\u53d8\u91cf x\u3001y \u8868\u793a\uff0c\u5219\u53ef\u4ee5\u628a\u4e0a\u8ff0\u516c\u5f0f\u770b\u4f5c\uff1a\n\n$\\max_{i=1}^n(\\left\\vert x_i-x\\right\\vert+\\left\\vert y_i-y\\right\\vert)-\\min_{i=1}^n(\\left\\vert x_i-x\\right\\vert+\\left\\vert y_i-y\\right\\vert)$\n\n\u516c\u5f0f\u91cc\u7684\u7edd\u5bf9\u503c\uff0c\u662f\u4e00\u4e2a\u5f88\u8ba9\u4eba\u8ba8\u538c\u7684\u7b26\u53f7\uff0c\u8003\u8651\u5c06\u7edd\u5bf9\u503c\u53bb\u6389\u2014\u2014\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6211\u4eec\u53ea\u7ef4\u62a4\u5176**\u5de6\u4e0b\u89d2\u7684\u70b9**(\u7b2c\u4e09\u8c61\u9650)\u5bf9\u5b83\u7684**\u8d21\u732e**\uff0c\u5373\u4fdd\u8bc1 $x>=x_i,y>=y_i$ \u65f6\u8ba1\u7b97\u8d21\u732e\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u9898\u76ee\u88ab\u8f6c\u5316\u6210\u4e00\u4e2a**\u4e8c\u7ef4\u504f\u5e8f**\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u7ecf\u5178\u5957\u8def\uff1a\u5148\u5bf9\u4e00\u7ef4( x )\u6392\u5e8f\uff0c\u518d\u5229\u7528 cdq \u5206\u6cbb\u7684\u601d\u60f3\u7ef4\u62a4\u53e6\u4e00\u7ef4( y )\u3002\n\n\u4f60\u4ee5\u4e3a\u5230\u8fd9\u5c31\u7ed3\u675f\u4e86\uff1f NONONO~\n\n\u6309\u7167\u4e0a\u9762\u7684\u601d\u8def\uff0c\u6211\u4eec\u53ea\u7ef4\u62a4\u4e86\u4e00\u4e2a\u70b9\u5b83**\u5de6\u4e0b\u65b9**\u70b9\u5bf9\u5b83\u7684\u8d21\u732e\uff0c\u5b83**\u5de6\u4e0a\u65b9\u3001\u53f3\u4e0a\u65b9\u548c\u53f3\u4e0b\u65b9**\u7684\u70b9\u6211\u4eec\u53ef\u6ca1\u6709\u7ef4\u62a4\u3002\n\n\u5bf9\u4e8e\u5176\u4ed6\u51e0\u4e2a\u65b9\u5411\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5e73\u9762**\u6309\u7167 x \u8f74\u65b9\u5411\u548c y \u8f74\u65b9\u5411\u5206\u522b\u7ffb\u8f6c**\uff0c\u5c31\u53ef\u4ee5\u7edf\u8ba1\u5230\u90a3\u4e9b\u5176\u4ed6\u65b9\u5411\u4e0a\u7684\u70b9\u4e86\u3002( PS\uff1a\u5176\u5b9e\u8fd9\u91cc\u7684\u8bf4\u6cd5\u4e0d\u592a\u4e25\u8c28\uff0c\u5927\u5bb6\u53ef\u4ee5\u6839\u636e\u4ee3\u7801\u6765\u611f\u6027\u7684\u7406\u89e3\u4e00\u4e0b)\n\n\u540e\u9762\u5c31\u662f\u6109\u5feb\u7684\u4ee3\u7801 time~~~\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log_2n)$\u3002\n# \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define inf 1e9\nusing namespace std;\nconst int maxn=2e5+5;\nstruct node\n{\n    int x,y,id;\n    bool operator<(node a)\n    {\n        return x<a.x;//\u6309\u7167x\u6392\u5e8f\u3002\n    }\n}all[maxn],bll[maxn],temp[maxn];\npair<int,int>ans[maxn];//\u4e00\u4e2a\u4e8c\u5143\u7ec4\u5b58\u50a8\u6700\u5927\u503c\u6700\u5c0f\u503c\uff0cfirst\u5b58\u50a8\u6700\u8fdc\u66fc\u54c8\u987f\u8ddd\u79bb\uff0csecond\u5b58\u50a8\u6700\u8fd1\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\nint n,upper,ac,mmax,mmin;\nvoid cdq(int l,int r)\n{\n    if(l==r)\n        return ;\n    int mid=l+r>>1;\n    cdq(l,mid);\n    cdq(mid+1,r);\n    int idx1=l,idx2=mid+1;\n    mmax=-inf,mmin=inf;//\u521d\u59cb\u5316\n    for(int i=l;i<=r;i++)\n    {\n        if(idx1<=mid&&(idx2>r||bll[idx1].y<=bll[idx2].y))\n        {\n            mmax=max(mmax,bll[idx1].x+bll[idx1].y);\n            mmin=min(mmin,bll[idx1].x+bll[idx1].y);\n            temp[i]=bll[idx1++];\n        }\n        else\n        {\n            if(mmin!=-inf)//\u6ce8\u610f\u8fd9\u91cc\u4e0d\u80fd\u7528\u672a\u66f4\u65b0\u8fc7\u7684mmin\u548cmmax\u6765\u66f4\u65b0\u7b54\u6848\uff0c\u849f\u84bb\u5728\u8fd9\u5c31\u88ab\u5751\u4e86\u51e0\u53d1\u3002\n            ans[bll[idx2].id].first=max(bll[idx2].x+bll[idx2].y-mmin,ans[bll[idx2].id].first);\n            if(mmax!=inf)\n            ans[bll[idx2].id].second=min(bll[idx2].x+bll[idx2].y-mmax,ans[bll[idx2].id].second);\n            temp[i]=bll[idx2++];\n        }\n    }\n    for(int i=l;i<=r;i++)//\u5229\u7528\u7c7b\u4f3c\u5f52\u5e76\u6392\u5e8f\u7684\u65b9\u5f0f\u5bf9y\u8fdb\u884c\u6392\u5e8f\u3002\n        bll[i]=temp[i];\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        ans[i].first=-inf,ans[i].second=inf;//\u7b54\u6848\u521d\u59cb\u5316\n        scanf(\"%d %d\",&all[i].x,&all[i].y);\n        all[i].id=i;\n        upper=max(upper,all[i].x);\n        upper=max(upper,all[i].y);\n    }\n    for(int i=1;i<=n;i++)\n        bll[i]=all[i];\n    sort(bll+1,bll+n+1);//\u6ce8\u610f\u5982\u679c\u53cd\u8f6c\u5bfc\u81f4x\u987a\u5e8f\u4e71\u4e86\u8981\u91cd\u65b0sort\uff0c\u8fd9\u91cc\u4e3a\u4e86\u907f\u514d\u51fa\u9519\u6bcf\u6b21\u53cd\u8f6c\u90fdsort\u4e86\u3002\n    cdq(1,n);\n    for(int i=1;i<=n;i++)\n        all[i].x=upper-all[i].x,bll[i]=all[i];//\u5728x\u8f74\u65b9\u5411\u53cd\u8f6c\n    sort(bll+1,bll+n+1);\n    cdq(1,n);\n    for(int i=1;i<=n;i++)\n        all[i].y=upper-all[i].y,bll[i]=all[i];//\u5728y\u8f74\u65b9\u5411\u53cd\u8f6c\n    sort(bll+1,bll+n+1);\n    cdq(1,n);\n    for(int i=1;i<=n;i++)\n        all[i].x=upper-all[i].x,bll[i]=all[i];\n    sort(bll+1,bll+n+1);\n    cdq(1,n);\n    ac=inf;\n    for(int i=1;i<=n;i++)\n        ac=min(ac,abs(ans[i].first-ans[i].second));//\u7edf\u8ba1\u7b54\u6848\u8bb0\u5f97\u52a0\u7edd\u5bf9\u503c\u3002\n    cout<<ac<<endl;\n    return 0;\n}\n\n```\n",
        "postTime": 1645969146,
        "uid": 407489,
        "name": "ekatsim",
        "ccfLevel": 0,
        "title": "\u6349\u8ff7\u85cf"
    },
    {
        "content": "\u8fd9\u9898\u6211\u4eec\u4f7f\u7528kdtree\uff0c\u663e\u7136\u7684\u6a21\u677f\u9898\uff0c\n\n\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u90fd\u505a\u4e00\u904d\u6700\u5c0f\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u548c\u6700\u5927\u66fc\u54c8\u987f\u8ddd\u79bb\u3002\u627e\u4e00\u4e2a\u5dee\u503c\u6700\u5c0f\u5373\u53ef\u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff08pascal\uff09\n\n```cpp\ntype pp=record\n     max,min,d:array[0..1]of longint;\n     l,r:longint;\nend;\nvar ans,mn,mx,anss,root,i,j,n:longint;\n    a:array[0..500005]of pp;\n    t:pp;\nprocedure swap(var x,y:longint);\nvar z:longint;\nbegin\n  z:=x; x:=y; y:=z;\nend;\nprocedure sort(l,r,k,dd:longint);\nvar i,j,x:longint;\nbegin\n  i:=l; j:=r; x:=a[(l+r) div 2].d[dd];\n  while i<=j do\n    begin\n    while a[i].d[dd]<x do inc(i);\n    while x<a[j].d[dd] do dec(j);\n    if i<=j then begin swap(a[i].d[0],a[j].d[0]); swap(a[i].d[1],a[j].d[1]); inc(i); dec(j); end;\n    end;\n  if (l<j)and(k<=j) then sort(l,j,k,dd);\n  if (i<r)and(k>=i) then sort(i,r,k,dd);\nend;\nfunction max(x,y:longint):longint;\nbegin\n  if x>y then exit(x) else exit(y);\nend;\nfunction min(x,y:longint):longint;\nbegin\n  if x<y then exit(x) else exit(y);\nend;\nprocedure get(k:longint);\nvar i:longint;\nbegin\n  for i:=0 to 1 do begin a[k].min[i]:=a[k].d[i]; a[k].max[i]:=a[k].d[i]; end;\nend;\nprocedure update(k:longint);\nvar i:longint;\nbegin\n  if a[k].l<>0 then\n    for i:=0 to 1 do\n      begin\n      a[k].min[i]:=min(a[k].min[i],a[a[k].l].min[i]);\n      a[k].max[i]:=max(a[k].max[i],a[a[k].l].max[i]);\n      end;\n  if a[k].r<>0 then\n    for i:=0 to 1 do\n      begin\n      a[k].min[i]:=min(a[k].min[i],a[a[k].r].min[i]);\n      a[k].max[i]:=max(a[k].max[i],a[a[k].r].max[i]);\n      end;\nend;\nfunction build(l,r,dd:longint):longint;\nvar mid:longint;\nbegin\n  mid:=(l+r) div 2;\n  sort(l,r,mid,dd); get(mid);\n  if mid>l then a[mid].l:=build(l,mid-1,dd xor 1);\n  if mid<r then a[mid].r:=build(mid+1,r,dd xor 1);\n  update(mid);\n  exit(mid);\nend;\nfunction getdis(k:longint):longint;\nbegin\n  exit(abs(a[k].d[0]-t.d[0])+abs(a[k].d[1]-t.d[1]));\nend;\nfunction cal1(k:longint):longint;\nvar i,res:longint;\nbegin\n  res:=0;\n  for i:=0 to 1 do begin inc(res,max(0,a[k].min[i]-t.d[i])); inc(res,max(0,t.d[i]-a[k].max[i])); end;\n  exit(res);\nend;\nprocedure querymn(k:longint);\nvar d0,dl,dr,l,r:longint;\nbegin\n  d0:=getdis(k);\n  if d0<>0 then ans:=min(d0,ans);\n  l:=a[k].l; r:=a[k].r;\n  if l<>0 then dl:=cal1(l) else dl:=100000000;\n  if r<>0 then dr:=cal1(r) else dr:=100000000;\n  if dl<dr then\n    begin\n    if dl<ans then querymn(l);\n    if dr<ans then querymn(r);\n    end\n    else\n    begin\n    if dr<ans then querymn(r);\n    if dl<ans then querymn(l);\n    end;\nend;\nfunction cal2(k:longint):longint;\nvar i,res:longint;\nbegin\n  res:=0;\n  for i:=0 to 1 do inc(res,max(abs(t.d[i]-a[k].max[i]),abs(t.d[i]-a[k].min[i])));\n  exit(res);\nend;\nprocedure querymx(k:longint);\nvar d0,dl,dr,l,r:longint;\nbegin\n  d0:=getdis(k); ans:=max(ans,d0); l:=a[k].l; r:=a[k].r;\n  if l<>0 then dl:=cal2(l) else dl:=-100000000;\n  if r<>0 then dr:=cal2(r) else dr:=-100000000;\n  if dl>dr then\n    begin\n    if dl>ans then querymx(l);\n    if dr>ans then querymx(r);\n    end\n    else\n    begin\n    if dr>ans then querymx(r);\n    if dl>ans then querymx(l);\n    end;\nend;\nfunction query(f,x,y:longint):longint;\nbegin\n  t.d[0]:=x; t.d[1]:=y;\n  if f=0 then begin ans:=100000000; querymn(root); end\n    else begin ans:=-100000000; querymx(root); end;\n  exit(ans);\nend;\nbegin\n  readln(n);\n  for i:=1 to n do readln(a[i].d[0],a[i].d[1]);\n  root:=build(1,n,0); anss:=maxlongint;\n  for i:=1 to n do\n    begin\n    mn:=query(0,a[i].d[0],a[i].d[1]); mx:=query(1,a[i].d[0],a[i].d[1]);\n    anss:=min(mx-mn,anss);\n    end;\n  writeln(anss);\nend.\n```",
        "postTime": 1494223519,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2479 \u3010[SDOI2010]hideseek\u3011"
    }
]