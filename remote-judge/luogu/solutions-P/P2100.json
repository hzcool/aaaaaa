[
    {
        "content": "## \u9898\u610f\n\n$n$ \u4e2a\u7269\u4f53\u653e\u8fdb $n$ \u4e2a\u683c\u5b50\u3002$i$ \u53f7\u7269\u4f53\u53ea\u80fd\u653e\u5728 $i - 1$ \u53f7\uff0c $i$ \u53f7\u6216 $i + 1$ \u53f7\u683c\uff0c\u6709\u591a\u5c11\u79cd\u653e\u6cd5\uff1f\n\n## \u9898\u76ee\u5206\u6790\n\n\u8001\u89c4\u77e9 DP\uff0c$f_n$ \u8868\u793a $n$ \u4e2a\u7269\u4f53\u653e $n$ \u4e2a\u683c\u5b50\u7684\u65b9\u6848\u6570\u3002\u6211\u4eec\u5148\u770b\u770b 0 \u53f7\u7269\u4f53\u653e\u54ea\u513f\uff1a\n- 0 \u53f7\u7269\u4f53\u653e 0 \u53f7\u683c\uff1a\u5269\u4e0b $n - 1$ \u4e2a\u7269\u4f53\u653e $n - 1$ \u4e2a\u683c\u5b50\uff0c\u65b9\u6848\u6570 $f_{n-1}$\u3002\n- 0 \u53f7\u7269\u4f53\u653e 1 \u53f7\u683c\uff1a\u6b64\u65f6 1 \u53f7\u7269\u4f53\u5fc5\u987b\u653e 0 \u53f7\u683c\uff08\u5426\u5219 0 \u53f7\u683c\u5c31\u6ca1\u4e1c\u897f\u53ef\u653e\u4e86\uff09\u3002\u5269\u4e0b $n - 2$ \u4e2a\u7269\u4f53\u653e $n - 2$ \u4e2a\u683c\u5b50\uff0c\u65b9\u6848\u6570 $f_{n-2}$\u3002\n\n\u7efc\u4e0a\u8f6c\u79fb\u51fd\u6570\u662f $f_n = f_{n - 1} + f_{n - 2}$\u3002\u6ca1\u9519\uff0c\u6b64\u9898\u672c\u8d28\u5c31\u662f Fibonacci\uff0c\u5feb\u901f\u6c42 Fibonacci \u6570\u5217\u7b2c n \u9879\u4e00\u822c\u91c7\u7528\u77e9\u9635\u6cd5\uff1a\n\n$$\\begin{bmatrix} f_{n+1} & f_n \\\\ f_n & f_{n-1} \\end{bmatrix} = \\begin{bmatrix} 1 & 1 \\\\ 1 & 0 \\end{bmatrix}^n$$\n\n\u95ee\u9898\u5728\u4e8e\u8fd9\u91cc $n \\leq 10^{1000}$\u3002\u5bf9\u4e8e\u5982\u4f55\u5904\u7406\u8fd9\u4e48\u5927\u7684\u6574\u6570\uff0c\u6bcf\u7bc7\u9898\u89e3\u90fd\u662f\u516b\u4ed9\u8fc7\u6d77\u5404\u663e\u795e\u901a\u3002\u4e0d\u8fc7\u672c\u849f\u84bb\u8fd8\u662f\u60f3\u5230\u4e00\u79cd\u66f4\u7b80\u5355\u6613\u884c\u7684\u65b9\u6cd5\uff08\u660e\u660e\u5f88\u7b80\u5355\u4e3a\u4ec0\u4e48\u5927\u4f6c\u4eec\u90fd\u6ca1\u5199\u5462\uff09\u3002\n\n## \u6838\u5fc3\u5185\u5bb9\n\n\u4e00\u53e5\u8bdd\u6982\u62ec\uff1a\u5c06\u5feb\u901f\u5e42\u4ece\u4e8c\u8fdb\u5236\u6269\u5c55\u5230\u5341\u8fdb\u5236\u3002\u539f\u59cb\u7684\u5feb\u901f\u5e42\u5927\u5bb6\u90fd\u7406\u89e3\u4e86\uff0c\u5728\u8ba1\u7b97 $a^b$ \u65f6\uff1a\n\n- \u5982\u679c $b$ \u7684\u7b2c\u96f6\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e3a $1$\uff0c\u5219\u8fd9\u4e00\u4f4d\u5bf9\u7ed3\u679c\u7684\u8d21\u732e\u4e3a $a$;\n- \u5982\u679c $b$ \u7684\u7b2c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e3a $1$\uff0c\u5219\u8fd9\u4e00\u4f4d\u5bf9\u7ed3\u679c\u7684\u8d21\u732e\u4e3a $a^2$;\n- \u5982\u679c $b$ \u7684\u7b2c\u4e8c\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e3a $1$\uff0c\u5219\u8fd9\u4e00\u4f4d\u5bf9\u7ed3\u679c\u7684\u8d21\u732e\u4e3a $a^4$;\n- ......\n\n\u90a3\u4f55\u4e0d\u5c06\u5176\u6269\u5c55\u5230\u5341\u8fdb\u5236\u7684\u5f62\u5f0f\uff1f\n\n- \u5982\u679c $b$ \u7684\u4e2a\u4f4d\u4e3a $x$\uff0c\u5219\u8fd9\u4e00\u4f4d\u5bf9\u7ed3\u679c\u7684\u8d21\u732e\u4e3a $a^x$;\n- \u5982\u679c $b$ \u7684\u5341\u4f4d\u4e3a $x$\uff0c\u5219\u8fd9\u4e00\u4f4d\u5bf9\u7ed3\u679c\u7684\u8d21\u732e\u4e3a $a^{10x}$;\n- \u5982\u679c $b$ \u7684\u767e\u4f4d\u4e3a $x$\uff0c\u5219\u8fd9\u4e00\u4f4d\u5bf9\u7ed3\u679c\u7684\u8d21\u732e\u4e3a $a^{100x}$;\n- ......\n\n\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f $n$ \u53ef\u4ee5\u76f4\u63a5\u7528\u5b57\u7b26\u4e32\u50a8\u5b58\uff0c\u800c\u4e0d\u9700\u8981\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u5e76\u5c06\u5176\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u53ea\u653e\u6838\u5fc3\u7684\u5feb\u901f\u5e42 $m^{pow}$ \u90e8\u5206\uff0c\u53ef\u4ee5\u770b\u5230 $pow$ \u662f\u5b57\u7b26\u4e32\u800c\u975e\u6574\u6570\uff09\uff1a\n```\n    matrix22 power(matrix22 m, std::string pow)\n    {\n        matrix22 result(1, 0, 0, 1);\n        while(!pow.empty())\n        {\n            int pow_bit = pow.back() - '0';\n            for(int i = 0; i < pow_bit; i++)\n                result = result * m;\n            m = m.pow10();\n            pow.pop_back();\n        }\n        return result;\n    }\n```",
        "postTime": 1663061168,
        "uid": 774217,
        "name": "Archmushroom",
        "ccfLevel": 0,
        "title": "\u51cc\u4e71\u7684\u5730\u4e0b\u5ba4 \u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5206\u6790\n\u56e0\u4e3a\u7b2c i \u4e2a\u65b9\u5757\u53ea\u80fd\u653e\u5230\u7b2c $i-1, i, i+1$ \u4e0a\u3002\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u53ea\u8003\u8651\u5728 n \u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e00\u4e2a\u65b9\u5757\u7684\u60c5\u51b5\u3002\n\n\u56e0\u4e3a\u7b2c n+1 \u4e2a\u65b9\u5757\u53ea\u80fd\u5728 n \u4e0e n+1 \u4e0a\uff0c\u6211\u4eec\u5c31\u5206\u522b\u8003\u8651\u653e\u5230 n \u4e0a\u548c n + 1\u4e0a\u7684\u60c5\u51b5\u3002\n\n- \u5f53\u6211\u4eec\u5c06\u65b0\u52a0\u7684\u65b9\u5757\u653e\u5230 n+1 \u4e0a\u65f6\uff0c\u5bf9 $[1, n]$ \u8fd9\u4e2a\u8303\u56f4\u4e0a\u6ca1\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u653e\u5230 n+1 \u4e0a\u7684\u65f6\u5019\u7684\u7b54\u6848\u5c31\u662f n \u7684\u7b54\u6848\u3002\n\n- \u5f53\u6211\u4eec\u5c06\u65b0\u52a0\u7684\u65b9\u5757\u653e\u5230 n \u4e0a\u65f6\uff0c\u8003\u8651\u5230\u6bcf\u4e2a\u65b9\u5757\u53ea\u80fd\u653e\u5230 $i-1, i, i+1$ \u4e2a\u4f4d\u5b50\u4e0a\u3002\u56e0\u6b64\u53ea\u53ef\u80fd\u662f\uff0c\u7b2c n \u4e2a\u65b9\u5757\u4e0e\u7b2c n+1 \u4e2a\u65b9\u5757\u4e92\u6362\uff0c \u5bf9 $[1,n-1]$ \u8303\u56f4\u5185\u7684\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u56e0\u6b64\u5b83\u7684\u7b54\u6848\u521a\u597d\u662f n-1 \u7684\u7b54\u6848\u3002\n\nn+1 \u7684\u7b54\u6848\u5c31\u662f\u4e0a\u8fb9\u4e24\u79cd\u60c5\u51b5\u7684\u548c\u4e86\u3002\n\n$$\nf_i = \n\\begin{cases}\n1 \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ ,n = 1\\\\\n2 \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ ,n = 2\\\\\nf_{i-1}+f_{i-2} , \\operatorname{otherwise}\n\\end{cases}\n$$\n\n\u56e0\u6b64\u8f6c\u79fb\u77e9\u9635\u8fd8\u662f\u548c fibonacci \u7684\u8f6c\u79fb\u77e9\u9635\u4e00\u6837\uff0c\u521d\u59cb\u77e9\u9635\u5c31\u662f\u5de6\u8fb9\u90a3\u6837\u3002\n\n$$\n\\begin{bmatrix}\n2\\\\\n3\n\\end{bmatrix}\n.\n\\begin{bmatrix}\n1&1\\\\\n1&0\n\\end{bmatrix}\n$$\n\n### code\n\u8fd9\u4e2a\u9898\u8fd8\u9700\u8981\u9ad8\u7cbe\u628a 10 \u8fdb\u5236\u8f6c\u5316\u6210 2 \u8fdb\u5236\uff0c\u4f46\u662f\u9ad8\u7cbe\u677f\u5b50\u592a\u957f\u4e86\u6211\u5c31\u4e0d\u5728\u8fd9\u91cc\u653e\u4e86\u3002\n\n[\u9ad8\u7cbe\u677f\u5b50](https://www.luogu.com.cn/paste/u5kqldz0)\n\n```cpp\nint cnt, er[10000010];\nbignum a;\n\nconst int mod = 100000000;\nstruct node {\n\tlong long a[3][3], r, c;\n};\n\ninline node mul(node x, node y) {\n\tnode p;\n\tmemset(&p, 0, sizeof p);\n\tfor (int i = 1; i <= x.r; i++)\n\t\tfor (int j = 1; j <= y.c; j++)\n\t\t\tfor (int k = 1; k <= x.c; k++)\n\t\t\t\tp.a[i][j] = (p.a[i][j] + x.a[i][k] * y.a[k][j] % mod) % mod; \n\tp.r = x.r, p.c = y.c;\n\treturn p;\n}\n\nvoid q_pow() {\n\tnode ans, p;\n\tmemset(&p, 0, sizeof p);\n\tmemset(&ans, 0, sizeof ans);\n\tans.a[1][1] = 1, ans.a[1][2] = 0, ans.r = 1, ans.c = 2;\n\tp.a[1][1] = p.a[1][2] = p.a[2][1] = 1, p.a[2][2] = 0, p.r = p.c = 2;\n\tint i = 1;\n\twhile (i <= cnt) {\n\t\tif (er[i] == 1) ans = mul(ans, p);\n\t\tp = mul(p, p);\n\t\ti++;\n\t}\n\tcout << ans.a[1][1];\n}\n\nsigned main() {\n\tcin >> a;\n\tif (a <= 3) {\n\t\tif (a == 1) puts(\"1\");\n\t\telse if (a == 2) puts(\"2\");\n\t\telse if (a == 3) puts(\"3\");\n\t} else {\n\t\twhile (a != 0) {\n\t\t\ter[++cnt] = a % 2;\n\t\t\ta /= 2;\n\t\t}\n\t\tq_pow();\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1599701817,
        "uid": 188155,
        "name": "K2sen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2100 \u3010\u51cc\u4e71\u7684\u5730\u4e0b\u5ba4\u3011"
    },
    {
        "content": "- \u6211Viston\u5c31\u7b97\u662f\u6b7b\uff0c\u6b7b\u8fd9\u91cc\uff0c\u4ece\u8fd9\u513f\u8df3\u4e0b\u53bb\uff0c\u6211\u4e5f\u4e0d\u53ef\u80fd\u5199\u9ad8\u7cbe\u5ea6\u3002   \n\n\u5faa\u73af\u8282\u6700\u597d\u7528\u4e86....\u5feb\u8bfb\u6700\u597d\u7528\u4e86.....\u901a\u9879\u516c\u5f0f\u6700\u597d\u7528\u4e86.......     \n\n\u8bc1\u660e\u53ef\u4ee5\u53c2\u7167\u697c\u4e0b\u90a3\u4f4dP\u515a\u5927\u4f6c\uff0c\u6211\u5c31\u8bb2\u8bb2\u7528\u901a\u9879\u516c\u5f0f+\u5faa\u73af\u8282\u7684\u505a\u6cd5\u5427....\u3001   \n\n\u901a\u9879\u516c\u5f0f\uff1a     \n\n\u8bbe $n\\in R$,\u5219\u6709\uff1a\n$$F[2n] = F[n+1]^2-F[n-1]^2 = (2F[n-1]+F[n])F[n]$$\n\n$$F[2n+1] = F[n+1]^2 + F[n]^2 $$     \n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u516c\u5f0f+\u9ad8\u7cbe\u5ea6\u53d6\u819c\u5faa\u73af\u8282\uff08\u9ad8\u7cbe%\u4f4e\u7cbe\u53ef\u4ee5\u76f4\u63a5\u5728\u5feb\u8bfb\u4e2d\u8fdb\u884c\uff09   \n\n\u89c1\u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nmap<long long ,long long>mmp;     //map\u4f18\u5316\u9012\u5f52\u6c42\u6590\u6ce2\u62c9\u5951\nlong long a,b,c,d;\nlong long dfs(long long a){\n\tif(a==1) return 1;\n\tif(a==2) return 1;\n\tif(mmp[a]!=0) return mmp[a];\n\telse return \n\t\tmmp[a]=a%2==0?(dfs(a/2)+2*dfs(a/2-1))*dfs(a/2)%100000000 :\n\t\t (dfs(a/2)*dfs(a/2)+dfs(a/2+1)*dfs(a/2+1))%100000000;\n}        //\u901a\u9879\u516c\u5f0f\u6c42\u6590\u6ce2\u62c9\u5951\ninline long long read(){\n\tlong long X=0;char ch=getchar();\n\twhile(!isdigit(ch)) ch=getchar();\n\twhile(isdigit(ch)) X=(X*10+ch-'0')%150000000,ch=getchar();\n\treturn X;\n}     //\u53d6\u6478150000000\u76f4\u63a5\u5728\u5feb\u901f\u8bfb\u5165\u4e2d\u8fdb\u884c\nint main(){\n\ta=read();\n\tcout<<dfs(a+1);\n}          //\u4e3b\u7a0b\u5e8f\u771f\u77ed\n```",
        "postTime": 1538789883,
        "uid": 107101,
        "name": "Viston",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2100 \u3010\u51cc\u4e71\u7684\u5730\u4e0b\u5ba4\u3011"
    },
    {
        "content": "~~(\u9898\u76ee\u7ed9\u4e86\u53cc\u500d\u65f6\u95f4\u7a7a\u95f4..).~~.\n\n\u9898\u610f.\u7ed9\u51fan\u4e2a\u6570.\u6bcf\u4e2a\u6570\u7684\u4f4d\u7f6e\u53ef\u80fd\u79fb\u52a8.\u4f46\u53ea\u53ef\u80fd\u79fb\u52a8\u5230\u539f\u4f4d\u7f6e+1\u6216-1.\u6c42\u4e0d\u540c\u5e8f\u5217\u7684\u603b\u6570..\n\n\u53ef\u4ee5\u770b\u51fa.\u8fd9\u662f1\u4e2a\u4ea4\u6362\u8fc7\u7a0b..\u4e14\u6bcf\u4e2a\u6570\u6700\u591a\u53ea\u80fd\u88ab\u4ea4\u63621\u6b21...(\u9664\u975e\u53cd\u590d\u4ea4\u6362..)..\n\n\u62ff\u6765P1962\u7a0b\u5e8f\u8dd1\u4e86\u8dd1\u6837\u4f8b..\u679c\u7136\u662f\u7684..\n\n\u4e0b\u9762\u7ed9\u51fa~~\u4f2a~~\u8bc1\u660e..\n```\n\u8bbef[i]\u4e3a\u524di\u4f4d\u53ef\u80fd\u7ec4\u6210\u4e0d\u540c\u5e8f\u5217\u7684\u6570\u91cf.\n\u5c06f[i]\u62c6\u5206.\nf[i,1]\u8868\u793a\u7b2ci\u4e2a\u6570\u4e0e\u7b2ci-1\u4e2a\u6570\u4ea4\u6362\u540e,\u6709\u591a\u5c11\u4e0d\u540c\u5e8f\u5217.\nf[i,2]\u8868\u793a\u7b2ci\u4e2a\u6570\u4e0e\u7b2ci-1\u4e2a\u6570\u4e0d\u4ea4\u6362,\u6709\u591a\u5c11\u4e0d\u540c\u7684\u5e8f\u5217..\n\u663e\u7136\u6709.f[i] = f[i,1]+f[i,2];\n\u5982\u679c\u4ea4\u6362.\u7b2ci-1\u4e2a\u6570\u4e0d\u80fd\u518d\u88ab\u5176\u4ed6\u7684\u6570\u4ea4\u6362..\u6709f[i,1] = f[i-1,2];\n\u6ca1\u6709\u4ea4\u6362.\u4e0d\u4ea7\u751f\u5f71\u54cd.f[i,2] = f[i-1,1]+f[i-1,2];\n\u63a5\u4e0b\u6765.\nf[i,1] = f[i-1,2] = f[i-2,1]+f[i-2,2] = f[i-2];\nf[i,2] = f[i-1,1]+f[i-1,2] = f[i-1];\nf[i] = f[i,1]+f[i,2] = f[i-2]+f[i-1] = f[i-1]+f[i-2];\n```\n**\u6240\u4ee5\u8fd9\u5c31\u662f\u4e2aFibonacci...**.\n\n\u82e5\u4f60\u8fc7\u4e86P1962,\u6216\u8005\u4f1a\u77e9\u9635\u4e58\u6cd5.\u5927\u6982\u5c31\u80fd\u8fc7\u4e86..\n\n\u6211\u7684\u6784\u9020\u65b9\u6cd5:\n```\n1 1   1 1 ^(n-1)\n    *(   )       mot 100000000.\n0 0   1 0\n a     b\nans = a[1,1].\n```\n\u9898\u76ee\u8bf4\u53ea\u7ed90.2s..~~(\u5176\u5b9e\u662f0.4s.).~~.\n\n\u4e8e\u662f\u8dd1\u5230P4000\u8865\u4e86\u8865\u5faa\u73af\u8282\u6c42\u6cd5..\u8bf7\u81f3P4000\u9898\u89e3\u67e5\u770b....\n\n~~(\u61d2\u5f97\u5199..).~~.\n\n\u7ecf\u8fc7\u8ba1\u7b97.\u672c\u9898\u53ef\u4ee5\u8f6c\u5316\u6210:\n\n**\u5148\u5c06n\u5bf9150000000\u53d6\u6a21,\u7528\u77e9\u9635\u4e58\u6cd5\u6c42Fibonacci\u7b2cn+1\u9879\u5bf9100000000\u53d6\u6a21..**.\n\n\u4e22\u4ee3\u7801..\u592a\u4e71\u7684\u8bdd\u5efa\u8bae\u53bb\u6389//\u5e76\u5206\u5f00\u5b50\u7a0b\u5e8f..\n\n~~\u5176\u5b9e\u5efa\u8bae\u4e0d\u8981\u770b..~~.\n```\nprogram P2100;\n type\n  ws=record\n   fc:array[1..2,1..2] of int64; //\u77e9\u9635.\n   x,y:longint;\n  end;\n  wc=record                      //\u5c31\u662f\u4e2a\u5b57\u7b26\u6362\u6570\u5b57\u7684\u4e1c\u897f..\n   case integer of\n    1:(c:char);\n    2:(d:byte);\n  end;\n var\n  a,b,c,d:ws;\n  cc:wc;\n  mot,mots,p:int64;\n function hahainf(p:int64):int64;forward;\n function hahafff(x:int64):int64;forward;\n function hahaggb(P:int64):int64;forward;\n operator **(x,y:int64)z:int64;  //\u5feb\u901f\u5e42..\n  begin\n   z:=1;\n   while y>0 do\n    begin\n     if y and 1=1 then z:=z*x mod mot;\n     x:=x*x mod mot;\n     y:=y>>1;\n    end;\n  end;\n operator *(x,y:ws)z:ws;         //\u77e9\u4e58.\n  var\n   i,j,k:longint;\n  begin\n   fillqword(z,sizeof(z)>>3,0);\n   z.x:=x.x;\n   z.y:=y.y;\n   for i:=1 to x.x do\n    for j:=1 to y.y do\n     for k:=1 to x.y do\n      z.fc[i,j]:=(z.fc[i,j]+x.fc[i,k]*y.fc[k,j]) mod mot;\n  end;\n function hahagcd(x,y:int64):int64;   //\u6c42gcd..\n  begin\n   if x<y then exit(hahagcd(y,x));\n   if y=0 then exit(x);\n   exit(hahagcd(y,x mod y));\n  end;\n function hahaha(p:int64):int64;         //\u7528\u6765\u6c42\u5faa\u73af\u8282.\n  var\n   i:longint;\n   x,y:int64;\n  procedure hahax(var p:int64;i:int64);  //\u8bf7\u51fa\u95e8\u81f3P4000.\n   begin\n    y:=p div i;\n    x:=hahaggb(i);\n    while p mod i=0 do p:=p div i;\n    x:=x*y div p;                           //g(i)*i^(m-1);\n    hahaha:=hahaha div hahagcd(hahaha,x)*x; //\u6c42lcm...\n   end;\n  begin\n   hahaha:=1;\n   for i:=2 to trunc(sqrt(p)) do         //\u5bf9\u819c\u503c\u5206\u89e3..\n    if p mod i=0 then hahax(p,int64(i));\n   if p>1 then hahax(p,p);\n  end;\n function hahaggb(p:int64):int64;        //\u8bf7\u51fa\u95e8\u81f3P4000.\n  var\n   ffiu:array[0..5] of longint=(0,1,3,8,6,20);\n  begin\n   if (p<=5) then exit(ffiu[p]);\n   if 5**((p-1)>>1)=1 then exit(hahainf(p-1))      //\u6b27\u62c9\u51c6\u5219.??\n                      else exit(hahainf((p+1)<<1)); /x^((p-1)>>1) = 1.\n   //writeln(5**((p-1)>>1)=1);\n   //exit(hahainf((p+1)<<1));\n  end;\n function hahainf(p:int64):int64;         //\u6b64\u5904\u672c\u5e94\u8be5\u6c42\u7ea6\u6570..\n  begin                                    /\u7531\u4e8e1E+08 = 2^8*5^8;\n   //if hahafff(f[i]+4)=3 then exit(f[i]); /\u4e5f\u5c31\u6ca1\u7528\u4e86..\n   //exit(5882353);\n  end;\n function hahafff(x:int64):int64;         //\u77e9\u9635\u5feb\u901f\u5e42..\n  begin\n   while x>0 do\n    begin\n     if x and 1=1 then a:=a*b;\n     x:=x>>1;\n     b:=b*b;\n    end;\n   hahafff:=a.fc[1,1];\n  end;\n procedure haharere;        //\u521d\u59cb\u5316..\n  begin\n   fillchar(d,sizeof(d),0);\n   d.x:=2;\n   d.y:=2;\n   b:=d;\n   a:=d;\n   b.fc[1,1]:=1;\n   b.fc[1,2]:=1;\n   b.fc[2,1]:=1;\n   a.fc[1,1]:=1;\n   a.fc[1,2]:=1;\n   a.x:=1;\n  end;\n begin\n  mot:=100000000;\n  //writeln(hahaha(mot));\n  mots:=hahaha(mot);       //\u4e5f\u53ef\u76f4\u63a5\u8d4b\u503c\u4e3a150000000..\n  haharere;\n  //readln(n);\n  //writeln(hahafff(5));\n  p:=0;\n  while not eoln do\n   begin\n    read(cc.c);\n    //writeln(cc.d);\n    p:=(p*10+cc.d-48) mod mots;\n   end;\n  writeln(hahafff(p-1));   //\u7531\u4e8e\u524d2\u9879\u5df2\u7ecf\u5728\u77e9\u9635\u91cc..\u53ea\u8981\u4e58\u4e0an-1\u9879..\n end.\n```\n(\u0ca1\u03c9\u0ca1).\n",
        "postTime": 1519630253,
        "uid": 20454,
        "name": "BFSBFSBFSBFS",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2100 \u3010\u51cc\u4e71\u7684\u5730\u4e0b\u5ba4\u3011"
    },
    {
        "content": "\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u89c4\u5f8b\u4e0b\u9762\u7684julao\u90fd\u8bf4\u7684\u5f88\u660e\u767d\u4e86\n\n\u4e0b\u9762\u8bf4\u4e00\u79cd\u4e71\u641eAC\u7684\u65b9\u6cd5\n\n\u5e38\u6570\u7a0d\u5927\uff0c**\u4e0d\u5f00O2** 200\u591ams~~\u5438\u6c27181ms~~\n\n\u9996\u5148\u8003\u8651\u5feb\u901f\u5e42\u7684\u8fc7\u7a0b\n\u4f1a\u53d1\u73b0\u53ea\u6709\u6309\u4f4d\u7684\u53f3\u79fb\u3001\u67e5\u8be2\u6709\u65e0\u4e3a1\u7684\u4f4d\u3001\u67e5\u8be2\u6700\u4f4e\u4f4d\u4e8c\u8fdb\u5236\u662f\u5426\u4e3a1\u7684\u64cd\u4f5c\uff0c\u90fd\u662f\u5bf9\u4e8c\u8fdb\u5236\u6570\u76f4\u63a5\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u4e86\u663e\u7136\u7684\u60f3\u6cd5\uff0c\u5982\u4f55\u8868\u793a\u8fd9\u4e48\u5927\u7684n\u5462\uff1f\n\n\u5f53\u7136\u662f**bitset**(\u9003\n\n\u6240\u4ee5\u7528bitset\u8868\u793a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u5b9e\u6d4b\u8868\u793a4000\u4f4d\u53ef\u8fc7\n\n\u7136\u540e\u5feb\u901f\u5e42\u7684\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u5982\u4f55\u628a\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u6570\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u6570\uff0c\u8fd9\u6b65\u9700\u8981\u7528\u5230\u5927\u6574\u6570\u5feb\u901f\u8f6c\u6362\u8fdb\u5236\u7684\u79d1\u6280\uff0c\u4e0b\u9762\u5c31\u8bb2\u4e00\u8bb2\u8fd9\u79cd\u8d44\u672c\u64cd\u4f5c\n\n---\n\n\u5177\u4f53\u8fc7\u7a0b\u5f88\u597d\u63cf\u8ff0\uff0c\u5c31\u662f\u7c7b\u6bd4\u6b63\u5e38\u7684\u53d6\u6a21\u8f6c\u6362\u8fdb\u5236\u7684\u65b9\u6cd5\uff0c\u5bf9\u6bcf\u4f4d\u505a\u9664\u6cd5\uff0c\u7528\u4e0a\u4e00\u4f4d\u7684\u9664\u6cd5\u4f59\u6570\u4e58\u4ee5\u539f\u6765\u7684\u8fdb\u5236\u6570\u52a0\u4e0a\u8fd9\u4e00\u4f4d\u7684\u503c\u548c\u8981\u8f6c\u6362\u7684\u8fdb\u5236\u6570\u76f8\u9664\u66ff\u6362\u8fd9\u4e00\u4f4d\u7684\u503c\uff0c\u8fed\u4ee3\u7684\u505a\u4e0b\u53bb\uff0c\u5bf9\u6bcf\u4e00\u4f4d\u90fd\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u8bb0\u5f55\u6bcf\u6b21\u7684\u6700\u7ec8\u4f59\u6570\uff0c\u6700\u540e\u9006\u5e8f\u8f93\u51fa\u5373\u53ef\n\n**\u662f\u4e0d\u662f\u770b\u6655\u4e86\uff1f**\n~~\u90a3\u770b\u4e00\u773c\u4ee3\u7801\u5427~~\n\n```cpp\nint i,m=lennum,t,cnt=0;\nwhile(m>=0){\n\tt=0;\n    for(i=m;i>=0;i--){//lennum\u662f\u6700\u9ad8\u4f4d\n\t\tt=t*oldbase+num[i];\n        num[i]=t/newbase;\n        t=t%newbase;\n\t}\n    for(i=lennum;i>=0&&(!num[i]);i--);\n    result[cnt++]=t;\n    m=i;\n}\n```\n\u5c31\u6ca1\u6709\u4e86\n\u5269\u4e0b\u7684\u5c31\u662f\u77e9\u9635\u5feb\u901f\u5e42\u6c42fib\u7684\u677f\u5b50\n\n\u6700\u540e\u8d34\u4e0a\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <bitset>\n#include <string>\n#include <iostream>\n#define int long long\nusing namespace std;\nconst int MOD = 100000000;\n//int n;\nbitset<4000> n;\nstring nx;\nint num[2000000],numlen;\nvoid basetrun(void){\n\tint cnt=0,m=numlen,t=0;\n\twhile(m>=0){\n\t\tint t=0,i;\n\t\tfor(i=m;i>=0;i--){\n\t\t\tt=t*10+num[i];\n\t\t\tnum[i]=t/2;\n\t\t\tt=t%2;\n\t\t}\n\t\tn[cnt++]=t;\n\t\tfor(i=numlen;i>=0&&(!num[i]);i--);\n\t\tm=i;\n\t}\n}\nvoid getnum(void){\n\tfor(int i=nx.length()-1,j=0;i>=0;i--,j++){\n\t\tnum[j]=nx[i]-'0';\n\t}\n\tnumlen=nx.length()-1;\n}\nstruct Matrix{\n  static const int MAXN = 4;\n  int alpha[MAXN][MAXN];\n  int n,m;\n  void init(void){\n    for(int i=0;i<MAXN;i++)\n      for(int j=0;j<MAXN;j++)\n        alpha[i][j]=0;\n    n=m=0;\n  }\n  void init_f2(void){\n    n=2;m=2;\n    alpha[1][1]=1;\n    alpha[2][1]=1;\n    alpha[1][2]=1;\n    alpha[2][2]=0;\n  }\n  void init_f(void){\n    n=1;m=2;\n    alpha[1][1]=1;\n    alpha[1][2]=1;\n  }\n  void init_pow(int x){\n    for(int i=1;i<=x;i++)\n      alpha[i][i]=1;\n    m=n=x;\n  }\n  Matrix operator * (Matrix b){\n    Matrix c;\n    c.init();\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=b.m;j++)\n        for(int k=1;k<=m;k++)\n          c.alpha[i][j]=(c.alpha[i][j]%MOD+alpha[i][k]*b.alpha[k][j]%MOD)%MOD;\n    c.n=n;\n    c.m=b.m;\n    return c;\n  }\n};\nMatrix pow(Matrix a){\n  Matrix ans;\n  ans.init();\n  ans.init_pow(a.n);\n  while(n.any()){\n    if(n[0])\n      ans=ans*a;\n    a=a*a;\n    n>>=1;\n  }\n  return ans;\n}\nsigned main(){\n  cin>>nx;\n  getnum();\n  basetrun();\n  Matrix f,f2,ans;\n  f.init();\n  f.init_f();\n  f2.init();\n  f2.init_f2();\n  ans=pow(f2);\n//  for(int i=1;i<=ans.n;i++){\n//    for(int j=1;j<=ans.m;j++)\n//      printf(\"%d \",ans.alpha[i][j]);\n//    printf(\"\\n\");\n//    }\n  f=f*ans;\n  printf(\"%lld\",f.alpha[1][2]%MOD);\n  return 0;\n}\n\n\n```",
        "postTime": 1539250009,
        "uid": 75392,
        "name": "dreagonm",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2100 \u3010\u51cc\u4e71\u7684\u5730\u4e0b\u5ba4\u3011"
    }
]