[
    {
        "content": "\u9898\u610f\u7b80\u5316\u540e\u5c31\u662f\u8fd9\u6837\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6bcf\u6761\u8fb9\u6709\u8fb9\u6743\uff0c\u5272\u6389\u4e00\u4e9b\u8fb9\uff0c\u4f7f\u5f97\u88ab\u5272\u6389\u7684\u8fb9\u8fb9\u6743\u548c\u4e0d\u8d85\u8fc7 $k$ \uff0c\u6700\u5c0f\u5316\u5269\u4f59\u8fde\u901a\u5757\u70b9\u6743\u6781\u5dee\u7684\u6700\u5927\u503c\u3002\n\n## subtask 1\n\n\u679a\u4e3e\u5272\u6389\u54ea\u4e9b\u8fb9\uff0c\u5224\u4e00\u4e0b\u662f\u5426\u5408\u6cd5\u518d\u66f4\u65b0\u4e00\u4e0b\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(2^{n-1})$ \u3002\n\n## subtask 2\n\n\u6700\u5c0f\u5316\u5269\u4f59\u8fde\u901a\u5757\u70b9\u6743\u6781\u5dee\u7684\u6700\u5927\u503c\uff0c\u8003\u8651\u4e8c\u5206\u7b54\u6848 $mid$ \uff0c\u9898\u76ee\u8f6c\u5316\u4e3a\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u8981\u6c42\u5272\u6389\u4e00\u4e9b\u8fb9\u540e\u5269\u4f59\u8fde\u901a\u5757\u70b9\u6743\u6781\u5dee\u5c0f\u4e8e $mid$ \uff0c\u6700\u5c0f\u5316\u5272\u6389\u7684\u8fb9\u8fb9\u6743\u548c\u3002\n\n\u8003\u8651 $dp$ \uff0c\u8bbe\u72b6\u6001 $dp_{u,l,r}$ \u8868\u793a\u8003\u8651\u5b8c\u4e86\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5176\u4e2d $u$ \u8fd9\u4e2a\u70b9\u6240\u5728\u7684\u8054\u901a\u5757\u6700\u5c0f\u503c\u6240\u5728\u70b9\u7f16\u53f7\u4e3a $l$ \uff0c\u6700\u5927\u503c\u6240\u5728\u70b9\u7f16\u53f7\u4e3a $r$ \u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u6bcf\u6b21\u90fd\u6811\u5f62dp\u4e00\u904d\u5224\u7b54\u6848\u662f\u5426\u5408\u6cd5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(n^3\\log_2maxh)$ \u3002\n\n## subtask 3\n\n\u6811\u4e3a\u4e00\u6761\u94fe\uff0c\u76f4\u63a5\u8f6c\u533a\u95f4\u95ee\u9898\uff0c\u8bbe $dp_r$ \u8868\u793a\u8003\u8651\u5b8c\u4e86\u524d $1\\sim r$ \u4e2a\u70b9\u6700\u5c0f\u7684\u82b1\u8d39\uff0c\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5408\u6cd5\u7684 $l$ \uff0c\u628a $l\\sim r$ \u4f5c\u4e3a\u4e00\u4e2a\u8fde\u901a\u5757\u8fdb\u884c\u8f6c\u79fb\u5c31\u884c\u4e86\u3002\n\n\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(n\\log_2maxh)$ \u3002\n\n## subtask 4\n\n\u6811\u4e3a\u4e00\u6735~~\u76db\u5f00~~\u7684\u83ca\u82b1\uff0c\u5272\u6389\u4e00\u6761\u8fb9\u5c31\u662f\u5272\u6389\u6839\u4e0e\u53f6\u5b50\u8282\u70b9\uff0c\u6700\u540e\u7684\u8fde\u901a\u5757\u8981\u4e48\u548c\u6839\u8282\u70b9\u8fde\u7740\uff0c\u8981\u4e48\u5927\u5c0f\u4e3a1\uff0c\u79bb\u6563\u5316\u6240\u6709\u70b9\u6743\uff0c\u53cc\u6307\u9488 $l$ \u548c $r$ \u8868\u793a\u628a\u70b9\u6743\u5728 $l$ \u5230 $r$ \u4e4b\u95f4\u8282\u70b9\u7684\u4f5c\u4e3a\u548c\u6839\u8282\u70b9\u8fde\u7740\u7684\u8fde\u901a\u5757\uff0c\u5176\u4ed6\u7684\u70b9\u4f5c\u4e3a\u5355\u72ec\u8fde\u901a\u5757\uff0c\u76f4\u63a5\u626b\u4e00\u904d\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(n\\log_2maxh)$ \u3002\n\n~~\u6240\u4ee5\u5176\u5b9esubtask3\u548csubtask4\u7684\u590d\u6742\u5ea6\u53ef\u4ee5\u66f4\u4f18\uff0c\u539f\u672c\u53ef\u4ee5\u51fa\u4e2a\u6570\u636e\u5206\u6cbb\u5c51\u9898\u7684\u3002~~\n\n## subtask 5\n\n$k=0$ \uff0c \u5f53\u4e14\u4ec5\u5f53\u8fb9\u6743\u4e3a $0$ \u65f6\u53ef\u4ee5\u88ab\u5272\u6389\uff0c\u5272\u6389\u540e\u76f4\u63a5dfs\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(n)$ \u3002\n\n## subtask 6\n\n\u8003\u8651\u4f18\u5316subtask 2\u91cc\u9762\u8bb2\u7684\u7b97\u6cd5\u3002\n\n\u53d1\u73b0\u4e0d\u5fc5\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u90fd\u8bb0\u5f55\uff0c\u53ea\u8981\u8bb0\u5f55\u4e00\u4e2a\u5373\u53ef\u3002\n\n\u4e8c\u5206\u51fa $mid$ \u540e\uff0c\u9996\u5148\u5bf9\u4e8e\u6240\u6709\u70b9\uff0cdfs\u51fa\u6240\u6709\u53ef\u4ee5\u4ee5\u5b83\u4e3a\u6700\u5c0f\u503c\u7684\u70b9\u3002\n\n\u5982\u679c\u4e24\u4e2a\u70b9\u7684\u6700\u5c0f\u503c\u6240\u5728\u70b9\u7f16\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u5b83\u4eec\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u8f6c\u79fb\u5982\u4e0b\uff1a\n\n$$dp_{u,x}=\\sum_{v\\ is\\ u's\\ son}\\min(dp_{v,y}+val_{u,v},dp_{v,x})$$\n\n\u5176\u4e2d\u8981\u6c42 $x,y$ \u5408\u6cd5\uff08\u5373\u70b9 $u$ \u6240\u5728\u8fde\u901a\u5757\u7684\u6700\u5c0f\u503c\u6240\u5728\u70b9\u7f16\u53f7\u53ef\u4ee5\u662f $x$ \uff0c\u70b9 $v$ \u540c\u7406\uff0c\u53ef\u4ee5\u7528 $n$ \u904d $\\rm dfs$ \u9884\u5904\u7406\u51fa\u6765\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(n^2\\log_2maxh)$ \u3002\n\n\u6700\u540e\u653e\u4e00\u4e0b\u6807\u7a0b\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#define inf 0x3f3f3f3f\nusing namespace std;\ntemplate<typename T>void read(T &x){\n\tx=0;int f(1);char c(getchar());\n\tfor(;!isdigit(c);c=getchar())if(c=='-')f=-f;\n\tfor(; isdigit(c);c=getchar())x=(x<<3)+(x<<1)+(c-'0');\n\tx*=f;\n}\ntemplate<typename T>void write(T x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x/10)write(x/10),x%=10;\n\tputchar(x+'0');\n}\nconst int maxn=808;\nstruct Edge{\n\tint v,nt;\n\tEdge(int v=0,int nt=0):\n\t\tv(v),nt(nt){}\n}e[maxn*2];\nint hd[maxn],num;\nvoid add_edge(int u,int v){\n\te[++num]=Edge(v,hd[u]);hd[u]=num;\n}\nint dep[maxn],pa[maxn][12];\nvoid dfs0(int u,int fa,int dp){\n\tdep[u]=dp;pa[u][0]=fa;\n\tfor(int i=1;(1<<i)<=dp;++i)\n\t\tpa[u][i]=pa[pa[u][i-1]][i-1];\n\tfor(int i=hd[u];i;i=e[i].nt){\n\t\tint v=e[i].v;\n\t\tif(v==fa)continue;\n\t\tdfs0(v,u,dp+1);\n\t}\n}\nint lca(int x,int y){\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(int t=dep[x]-dep[y],cn=0;t;t>>=1,++cn)\n\t\tif(t&1)x=pa[x][cn];\n\tif(x==y)return x;\n\tfor(int i=11;i>=0;--i)\n\t\tif(pa[x][i]!=pa[y][i])\n\t\t\tx=pa[x][i],y=pa[y][i];\n\treturn pa[x][0];\n}\nint vis[maxn];\nvoid dfs1(int u,int fa){\n\tfor(int i=hd[u];i;i=e[i].nt){\n\t\tint v=e[i].v;\n\t\tif(v==fa)continue;\n\t\tdfs1(v,u);\n\t\tvis[u]+=vis[v];\n\t}\n}\nint Base,lo[maxn][maxn],h[maxn];\nvoid dfs2(int u,int fa,int ac){\n\tlo[ac][u]=true;\n\tfor(int i=hd[u];i;i=e[i].nt){\n\t\tint v=e[i].v;\n\t\tif(v==fa||h[v]<h[ac]||h[v]-h[ac]>Base)\n\t\t\tcontinue;\n\t\tdfs2(v,u,ac);\n\t}\n}\nint n,dp[maxn][maxn];\nvoid dfs3(int u,int fa){\n\tfor(int i=1;i<=n;++i)\n\t\tif(lo[i][u])dp[i][u]=0;\n\t\telse dp[i][u]=inf;\n\tfor(int i=hd[u];i;i=e[i].nt){\n\t\tint v=e[i].v;\n\t\tif(v==fa)continue;\n\t\tdfs3(v,u);\n\t\tint mn=inf;\n\t\tfor(int j=1;j<=n;++j)\n\t\t\tmn=min(mn,dp[j][v]);\n\t\tmn+=vis[v];\n\t\tfor(int j=1;j<=n;++j)\n\t\t\tif(dp[j][u]<inf)\n\t\t\t\tdp[j][u]+=min(mn,dp[j][v]);\n\t}\n}\nint judge(int pos){\n\tBase=pos;\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=n;++j)\n\t\t\tlo[i][j]=0;\n\t\tdfs2(i,0,i);\n\t}\n\tdfs3(1,0);\n\tint ans=inf;\n\tfor(int i=1;i<=n;++i)\n\t\tans=min(ans,dp[i][1]);\n\treturn ans;\n}\nint main(){\n\tint m,k,l=inf,r=-inf;\n\tread(n),read(m),read(k);\n\tfor(int i=1;i<=n;++i){\n\t\tread(h[i]);\n\t\tl=min(l,h[i]);\n\t\tr=max(r,h[i]);\n\t}\n\tfor(int i=1;i<n;++i){\n\t\tint u,v;\n\t\tread(u),read(v);\n\t\tadd_edge(u,v);\n\t\tadd_edge(v,u);\n\t}\n\tdfs0(1,0,0);\n\twhile(m--){\n\t\tint x,y;\n\t\tread(x),read(y);\n\t\t++vis[x],++vis[y];\n\t\tvis[lca(x,y)]-=2;\n\t}\n\tdfs1(1,0);\n\tr=r-l,l=0;\n\twhile(l+1<r){\n\t\tint mid=(l+r)>>1;\n\t\tif(judge(mid)<=k)\n\t\t\tr=mid;\n\t\telse\n\t\t\tl=mid+1;\n\t}\n\tif(judge(l)<=k)\n\t\twrite(l);\n\telse\n\t\twrite(r);\n\tputchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1589895670,
        "uid": 230249,
        "name": "xiaolilsq",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 [YsOI2020]\u6362\u5bdd\u5ba4"
    },
    {
        "content": "\u4e4b\u524d\u624b\u6ed1\u9898\u89e3\u4ea4\u5230 P6592 \u4e86\uff0c\u7136\u540e\u8fd8\u8fc7\u5ba1\u4e86\u3002\u3002\u3002\n\n----------\n\n\u4f3c\u4e4e\u662f\u4e2a\u4e0e\u5b98\u65b9\u9898\u89e3\u4e0d\u592a\u4e00\u6837\u7684\u65b9\u6cd5\uff1f\n\n\u9996\u5148\u53ef\u4ee5\u7528\u6811\u4e0a\u5dee\u5206\u7b97\u51fa\u6bcf\u6761\u8fb9\u7684\u6743\u503c\uff0c\u7136\u540e\u4e8c\u5206\u7b54\u6848 $k$\u3002\n   \n\u8054\u901a\u5757\u7684\u6743\u503c\u9700\u8981\u90fd\u53ef\u4ee5\u88ab\u4e00\u4e2a\u533a\u95f4 $[x,x + k]$ \u5305\u542b\uff0c\u90a3\u4e48 $x$ \u4e00\u5b9a\u53ef\u4ee5\u662f\u67d0\u4e2a $a_i$\u3002\n   \n\u4e8e\u662f\u8bbe $dp_{u,x}$ \u4e3a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u5df2\u88ab\u5212\u5206\u4e3a\u4e00\u4e9b\u5408\u6cd5\u8054\u901a\u5757\uff0c\u4e14 $u$ \u5c5e\u4e8e\u7684\u8054\u901a\u5757\u7684\u6743\u503c\u90fd\u5728 $[a_x,a_x + k]$ \u4e2d\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n   \n\u5bf9\u4e8e\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c $a_u$ \u5728 $[a_x,a_x + k]$ \u4e2d\uff0c\u90a3\u4e48 $dp_{u,x}$ \u4e3a $0$\uff0c\u5426\u5219\u4e3a $\\infty$\u3002\n   \n\u5bf9\u4e8e\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c $a_u$ \u4e0d\u5728 $[a_x,a_x + k]$ \u4e2d\uff0c\u90a3\u4e48\u4e3a $\\infty$\uff0c\u5426\u5219\u679a\u4e3e\u5176\u6240\u6709\u513f\u5b50 $v$\uff0c$dp_{u,x} = \\sum \\min(dp_{v,x},mn_v + cost(u,v))$\uff0c$mn_v = \\min(dp_{v,k})$\uff0c$cost(u,v)$ \u662f\u5272\u6389 $(u,v)$ \u8fd9\u6761\u8fb9\u7684\u4ee3\u4ef7\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#define inf 1000000000\nusing namespace std;\nint n,m,k,len;\nint a[805];\n\nint cnt;\nint head[805];\nstruct eg{\n\tint to,nxt;\n}edge[1605];\n\nvoid make(int u,int v){\n\tedge[++cnt].to = v;\n\tedge[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\n\nint to[10][805],deep[805];\n\nvoid dfs1(int now,int fa){\n\tdeep[now] = deep[fa] + 1;\n\tto[0][now] = fa;\n\tfor(int i = head[now];i;i = edge[i].nxt){\n\t\tif(edge[i].to == fa) continue;\n\t\tdfs1(edge[i].to,now);\n\t}\n}\n\nint LCA(int u,int v){\n\tif(deep[u] < deep[v]) swap(u,v);\n\tfor(int i = 9;i >= 0;i--) if(deep[to[i][u]] >= deep[v]) u = to[i][u];\n\tif(u == v) return u;\n\tfor(int i = 9;i >= 0;i--){\n\t\tif(to[i][u] != to[i][v]){\n\t\t\tu = to[i][u];\n\t\t\tv = to[i][v];\n\t\t}\n\t}\n\treturn to[0][u];\n}\n\nint cost[805],delta[805];\n\nvoid dfs2(int now,int fa){\n    cost[now] = delta[now];\n    for(int i = head[now];i;i = edge[i].nxt){\n    \tif(edge[i].to == fa) continue;\n    \tdfs2(edge[i].to,now);\n    \tcost[now] += cost[edge[i].to];\n\t}\n}\n\nint dp[805][805],mn[805];\nvector <int> v;\n\n\nvoid dfs3(int u,int fa){\n\tfor(int i = head[u];i;i = edge[i].nxt) if(edge[i].to != fa) dfs3(edge[i].to,u);\n\tfor(int x = 1;x <= n;x++){\n\t\tif(a[u] < a[x] || a[u] > a[x] + len) dp[u][x] = inf;\n\t\telse dp[u][x] = 0;\n\t}\n\tv.clear();\n\tfor(int i = head[u];i;i = edge[i].nxt) if(edge[i].to != fa) v.push_back(edge[i].to);\n\tmn[u] = inf;\n\tfor(int x = 1;x <= n;x++){\n\t\tfor(int i = 0;i < v.size();i++){\n\t\t\tdp[u][x] += min(dp[v[i]][x],mn[v[i]] + cost[v[i]]);\n\t\t}\n\t\tmn[u] = min(mn[u],dp[u][x]);\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i = 1;i <= n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i = 1;i < n;i++){\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tmake(u,v);make(v,u);\n\t}\n\tdfs1(1,0);\n\tfor(int i = 1;i <= 9;i++){\n\t\tfor(int j = 1;j <= n;j++){\n\t\t\tto[i][j] = to[i - 1][to[i - 1][j]];\n\t\t}\n\t}\n\tfor(int i = 1;i <= m;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tint d = LCA(x,y);\n\t\tdelta[x]++;delta[y]++;\n\t\tdelta[d] -= 2;\n\t}\n\tdfs2(1,0);\n    int x = 1000000000;\n\tfor(int i = 30;i >= 0;i--){\n\t\tif(x < (1 << i)) continue;\n\t\tlen = x - (1 << i);\n\t\tdfs3(1,0);\n\t\tif(mn[1] <= k) x -= 1 << i;\n\t}\n\tprintf(\"%d\\n\",x);\n\treturn 0;\n}\n```\n",
        "postTime": 1615001140,
        "uid": 49776,
        "name": "chenxinyang2006",
        "ccfLevel": 0,
        "title": "P6594 \u9898\u89e3."
    }
]