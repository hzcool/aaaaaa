[
    {
        "content": "update:\u4fee\u6539\u4e86\u4e00\u4e2a\u9519\u8bef\u3002\n\n\u7b2c\u4e8c\u5206\u5757\u3002\n\n\u5176\u5b9e\u8fd9\u4e2a\u9898\u8fd8\u662f\u76f8\u5bf9\u597d\u60f3\u7684\uff0c\u4e5f\u6bd4\u8f83\u7b80\u5355\uff08\u4e2a\u4eba\u8ba4\u4e3a\u662f\u5927\u5206\u5757\u7cfb\u5217\u6700\u7b80\u7b54\u7684\u9898\uff09\u3002\n\n\u505a Ynoi \u7684\u9898\u9996\u5148\u770b\u6570\u636e\u8303\u56f4\u548c\u65f6\u7a7a\u9650\u5236\u3002\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u9898\u867d\u7136\u6709 $5\\times 10^5$\uff0c\u4f46\u65f6\u95f4\u7ed9\u4e86 $12s$\uff0c\u4e00\u822c\u4e0d\u778e\u5199\u90fd\u662f\u80fd\u8fc7\u7684\u3002\n\n\u53ef\u662f\u8fd9\u4e2a $62.5 MB$ \u7684\u7a7a\u95f4\u663e\u7136~~\u4f53\u73b0\u4e86 Ynoi \u7684\u6bd2\u7624\u6027\u8d28~~\u662f\u4e0d\u591f\u7684\uff0c\u6211\u4eec\u9700\u8981\u4f18\u5316\u3002\n\n\u800c\u5206\u5757\u6700\u597d\u7684\u7a7a\u95f4\u4f18\u5316\u65b9\u5f0f\u662f\u5272\u5f00\u6765\u4e00\u5757\u4e00\u5757\u5904\u7406\uff0c\u8fd9\u6837\u80fd\u5c06\u7a7a\u95f4\u4f18\u5316\u5230\u7ebf\u6027\u3002\n\n\u4f46\u8fd9\u4e5f\u5c31\u8981\u6c42\u5757\u4e0e\u5757\u4e4b\u95f4\u662f\u72ec\u7acb\u7684\uff0c\u5e76\u4e14**\u5757\u5185\u4fee\u6539\u67e5\u8be2\u603b\u590d\u6742\u5ea6\u5fc5\u987b\u90fd\u662f $\\operatorname{O}(m)$ \u7684** \uff0c\u624d\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\uff08\u8fd9\u5176\u5b9e\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u63d0\u793a\uff09\u3002\n\n\u7531\u4e8e\u5757\u7684\u503c\u57df\u4e0e $n$ \u540c\u9636\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5229\u7528\u8fd9\u4e2a\u503c\u57df\uff08\u5176\u5b9e\u8fd9\u53c8\u662f\u4e00\u4e2a\u63d0\u793a\uff09\u3002\n\n\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u5757\u5185\u90e8\u7684\u6700\u5927\u503c\u3002\u4e0d\u59a8\u5c06\u5176\u8bbe\u7f6e\u4e3a $mx$\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u533a\u95f4\u51cf\u7684 $tag$\uff08\u56e0\u4e3a\u6211\u4eec\u53ea\u4f1a\u5c06\u6570\u503c\u51cf\u5c0f\u800c\u4e0d\u4f1a\u589e\u5927\uff09\u3002\n\n\u5982\u679c $mx\\le x\\times 2$\uff0c\u5219\u6211\u4eec\u76f4\u63a5\u628a\u6240\u6709\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\u3002\n\n\u5982\u679c $mx>x\\times 2$\uff0c\u5219\u6211\u4eec\u628a\u5c0f\u4e8e $x$ \u7684\u6570\u52a0\u4e0a $x$\uff0c\u5e76\u6253\u4e0a\u533a\u95f4\u51cf\u7684\u6807\u8bb0\u3002\n\n\u7136\u540e\u6700\u5927\u503c\u968f\u4e4b\u66f4\u65b0\u5373\u53ef\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53d1\u73b0\uff0c\u7531\u4e8e\u6700\u5927\u503c\u4e0e $n$ \u540c\u9636\uff0c\u56e0\u6b64\u4e00\u4e2a\u5757\u5185\u7684\u603b\u590d\u6742\u5ea6\u662f $\\operatorname{O}(n)$\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u503c\u3002\u4e00\u5f00\u59cb\u6211\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u7528\u4e00\u4e2a\u94fe\u8868\u6765\u7ef4\u62a4\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u503c\uff0c\u78b0\u5230\u5408\u5e76\u76f4\u63a5\u63a5\u5230\u5c3e\u90e8\u3002\n\n\u540e\u6765\u53c2\u8003\u4e86\u4e00\u4e0b[\u51fa\u9898\u4eba\u9898\u89e3](http://olddrivertree.blog.uoj.ac/blog/4715)\uff08\u51fa\u9898\u4eba\u7ed9\u51fa\u4e86 $3$ \u4e2d\u5199\u6cd5\uff09\uff0c\u53d1\u73b0\u90a3\u4e2a\u5e76\u67e5\u96c6\u6700\u597d\u5199\u3002\n\n\u5177\u4f53\u7684\u65b9\u6cd5\u662f\uff0c\u5bf9\u6bcf\u4e2a\u503c\u5f00\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u7136\u540e\u8bb0\u5f55\u8fd9\u4e2a\u5e76\u67e5\u96c6\u7684 $size$\u3002\n\n\u4fee\u6539\u7684\u65f6\u5019\u76f4\u63a5\u5408\u5e76\u4e24\u4e2a\u503c\u7684\u5e76\u67e5\u96c6\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u8f93\u51fa\u8fd9\u4e2a\u5e76\u67e5\u96c6\u7684 $size$\u3002\n\n\u5982\u679c\u662f\u96f6\u6563\u5757\u4fee\u6539\uff0c\u5c31\u76f4\u63a5\u91cd\u6784\uff1b\u96f6\u6563\u5757\u67e5\u8be2\uff0c\u5c31\u901a\u8fc7\u5e76\u67e5\u96c6\u627e\u5230\u8303\u56f4\u5185\u6bcf\u4e2a\u6570\u7684\u503c\uff0c\u66b4\u529b\u7edf\u8ba1\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define rg register\n#define il inline\nusing namespace std;\ninline int read(){\n\tregister int x=0;\n\tregister bool f=0;\n\tregister char c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<3)+(x<<1)+c-48;\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nchar cr[200];int tt;\ninline void print(register int x,register char k='\\n') {\n    if(!x) putchar('0');\n    if(x < 0) putchar('-'),x=-x;\n    while(x) cr[++tt]=x%10+'0',x/=10;\n    while(tt) putchar(cr[tt--]);\n    putchar(k);\n}\nconst int maxn=500050;\nstruct node{\n    int l,r,opt,x;\n}q[maxn];\nint ans[maxn],n,m,fa[maxn],rt[maxn],cnt[maxn],d[maxn];\nint L[maxn],R[maxn],lsh[maxn],tot,a[maxn],bl;\nint mx,tag,l,r,tmp,ql,qr,x;\nil int find(rg int x){\n\treturn x==fa[x]?x:fa[x]=find(fa[x]);\n}\nil void merge(rg int x,rg int y){\n\tif(rt[y]){\n\t\tfa[rt[x]]=rt[y];\n\t}\n\telse{\n\t\trt[y]=rt[x];\t\n\t\tlsh[rt[y]]=y;\n\t}\n\tcnt[y]+=cnt[x];\n\trt[x]=cnt[x]=0;\n}\nil void build(){\n\tmx=tag=tot=0;\n\tmemset(rt,0,sizeof(rt));\n\tmemset(cnt,0,sizeof(cnt));\n\tfor(rg int i=l;i<=r;i++){\n\t\tmx=max(mx,a[i]);\n\t\tif(rt[a[i]])fa[i]=rt[a[i]];\n\t\telse{\n\t\t\trt[a[i]]=fa[i]=i;\n\t\t\tlsh[i]=a[i];\n\t\t}\n\t\tcnt[a[i]]++;\n\t}\n}\nil void modify(){\n\tif((x<<1)<=mx-tag){\n\t\tfor(int j=tag+1;j<=tag+x;j++) \n\t\t\tif(rt[j]) merge(j,j+x);\n\t\ttag+=x;\n\t}\n\telse{\n\t\tfor(int j=mx;j>tag+x;j--) \n\t\t\tif(rt[j]) merge(j,j-x);\n\t\tif(tag+x<mx) mx=tag+x;\n\t}\n}\nvoid rebuild(){\n\tfor(rg int j=l;j<=r;j++){\n\t\ta[j]=lsh[find(j)];\n\t\trt[a[j]]=cnt[a[j]]=0;\n\t\ta[j]-=tag;\n\t}\n\tfor(int j=l-10;j<=r+10;j++) lsh[j]=0;\n\ttag=mx=tot=0;\n\ttmp=min(qr,r);\n\tfor(rg int j=max(ql,l);j<=tmp;j++){\n\t\ta[j]=a[j]>x?a[j]-x:a[j];\n\t}\n\tfor(rg int j=l;j<=r;j++){\n\t\tmx=max(mx,a[j]);\n\t\tif(rt[a[j]])fa[j]=rt[a[j]];\n\t\telse{\n\t\t\trt[a[j]]=fa[j]=j;\n\t\t\tlsh[j]=a[j];\n\t\t}\n\t\tcnt[a[j]]++;\n\t}\n}\nvoid get(rg int i){\n\tif(x+tag>500000) return;\n\tif(ql<=l&&r<=qr) ans[i]+=cnt[x+tag];\n\telse{\n\t\ttmp=min(r,qr);\n\t\tfor(int j=max(l,ql);j<=tmp;j++)\n\t\t\tif(lsh[find(j)]==tag+x) ans[i]++;\n\t}\n}\nsigned main(){\n    n=read();m=read();bl=sqrt(n-1)+1;\n    for(rg int i=1;i<=n;i++){\n    \ta[i]=read();\n\t}\n\tfor(rg int i=1;i<=m;i++){\n\t\tq[i].opt=read();\n\t\tq[i].l=read();\n\t\tq[i].r=read();\n\t\tq[i].x=read();\n\t}\n\tint lxl=1;\n\tL[1]=1;\n\twhile(L[lxl]+bl<n){\n\t\tR[lxl]=L[lxl]+bl-1;\n\t\tlxl++;\n\t\tL[lxl]=R[lxl-1]+1;\n\t}\n\tR[lxl]=n;\n\tfor(rg int srz=1;srz<=lxl;srz++){\n\t\tl=L[srz],r=R[srz];\n\t\tbuild();\n\t\tfor(rg int i=1;i<=m;i++){\n\t\t\tql=q[i].l,qr=q[i].r,x=q[i].x;\n\t\t\tif(r<ql||qr<l) continue;\n\t\t\tif(q[i].opt^2){\n\t\t\t\tif(ql<=l&&r<=qr){\n\t\t\t\t\tmodify();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\trebuild();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tget(i);\n\t\t\t}\n\t\t}\n\t}\n\tfor(rg int i=1;i<=m;i++) \n\t\tif(q[i].opt==2) print(ans[i]);\n    return 0;\n}\n```\n\u6700\u540e\uff0c\u4eca\u5929\u662f lxl \u7684\u751f\u65e5\uff0c\u8ba9\u6211\u4eec\u4e00\u8d77\u795d lxl \u751f\u65e5\u5757\u4e50\u5427\uff01",
        "postTime": 1583899342,
        "uid": 120074,
        "name": "BFqwq",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4117 \u3010[Ynoi2018]\u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c\u3011"
    },
    {
        "content": "\u7b2c\u4e8c\u5206\u5757\u3002\n\n\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\u8fd9\u4e2a\u67e5\u8be2\u64cd\u4f5c\u3002\u628a\u6240\u6709\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\uff0c\u76f8\u5f53\u4e8e\u628a\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e $x$ \u7684\u6570\u52a0\u4e0a $x$\uff0c\u7136\u540e\u5168\u5c40\u51cf $x$\u3002\n\n\u6211\u4eec\u4ee4 $k$ \u8868\u793a\u4e00\u4e2a\u6570\u5217\u4e2d\u7684\u53ef\u80fd\u6700\u5927\u503c\u3002\n\n\u82e5 $2x\\geq k$\uff0c\u5219\u6211\u4eec\u4ee4\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$ \u4e4b\u540e\uff0c\u5c31\u6ca1\u6709\u6bd4 $x$ \u5927\u7684\u6570\u4e86\uff0c\u5219 $k$ \u5728\u64cd\u4f5c\u540e\u81f3\u5c11\u51cf\u5c11 $k-x$\u3002\n\n\u82e5 $2x\\lt k$\uff0c\u5219\u6211\u4eec\u4ee4\u5c0f\u4e8e\u7b49\u4e8e $x$ \u7684\u6570\u52a0\u4e0a $x$\uff0c\u5c31\u6ca1\u6709\u6bd4 $x$ \u5c0f\u7684\u6570\u4e86\uff0c\u7136\u540e\u3002\u6253\u5168\u5c40\u51cf\u7684\u6807\u8bb0\uff0c\u5219 $k$ \u5728\u64cd\u4f5c\u540e\u81f3\u5c11\u51cf\u5c11 $x$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4e0d\u7ba1\u600e\u4e48\u64cd\u4f5c\uff0c\u8fd9\u4e2a $k$ \u90fd\u662f\u5355\u8c03\u4e0d\u589e\u7684\uff0c\u800c $k$ \u521d\u59cb\u6700\u5927\u4e3a $5\\times 10^5$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5982\u679c\u662f\u5bf9\u5168\u5c40\u8fdb\u884c\u4fee\u6539\uff0c\u6309\u7167\u4e0a\u9762\u7684\u5206\u6790\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u9700\u8981\u4fee\u6539\u7684\u90a3\u4e9b\u6570\u503c\u5373\u53ef\u3002\u8fd9\u91cc\u679a\u4e3e\u7684\u6570\u503c\u7684\u603b\u548c\u4e3a $O(n)$\uff08\u9ed8\u8ba4 $n,m$ \u548c\u503c\u57df\u540c\u9636\uff0c\u4e0b\u540c\uff09\u3002\n\n\u6211\u4eec\u5e0c\u671b\u5bf9\u6bcf\u4e2a\u4e0d\u540c\u7684\u503c\u7684\u4fee\u6539\u80fd\u505a\u5230 $O(1)$\u3002\n\n\u8003\u8651\u4f7f\u7528\u5e76\u67e5\u96c6\u628a\u76f8\u540c\u7684\u503c\u5e76\u8d77\u6765\u3002\u90a3\u4e48\u4fee\u6539\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u628a\u4fee\u6539\u524d\u503c\u5bf9\u5e94\u7684\u5e76\u67e5\u96c6\u7684\u6839\uff0c\u8fde\u5230\u4fee\u6539\u540e\u7684\u503c\u7684\u5e76\u67e5\u96c6\u7684\u6839\u4e0a\u5373\u53ef\u3002\u540c\u65f6\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u4fee\u6539\u7684\u65f6\u5019\u76f4\u63a5\u52a0\u8fc7\u53bb\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e9b\u5f88\u597d\u7684\u6027\u8d28\uff1a\u6211\u4eec\u6bcf\u6b21\u7528\u6765\u8fde\u63a5\u7684\u90fd\u662f\u5e76\u67e5\u96c6\u7684\u6839\uff0c\u800c\u4e00\u4e2a\u6839\u8fde\u5230\u53e6\u4e00\u4e2a\u6839\u4e4b\u540e\uff0c\u8fd9\u4e2a\u503c\u672c\u8eab\u5c31\u6d88\u5931\u4e86\u3002\u800c\u4e14\u6211\u4eec\u5728\u8fd9\u91cc\u5e76\u4e0d\u7528\u8fd9\u4e2a\u5e76\u67e5\u96c6\u67e5\u8be2\u3002\u56e0\u6b64\u8fd9\u91cc\u7684\u5e76\u67e5\u96c6**\u5e76\u4e0d\u4f1a\u8fdb\u884c**\u8def\u5f84\u538b\u7f29\uff0c\u662f $O(1)$ \u7684\u3002\n\n\u7136\u540e\u5982\u679c\u662f\u67e5\u8be2\u5168\u5c40\u67d0\u4e2a\u6570\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u90a3\u4e48\u76f4\u63a5 $O(1)$ \u67e5\u8be2\u5373\u53ef\u3002\n\n\u6211\u4eec\u8003\u8651\u67e5\u8be2\u6240\u6709\u4f4d\u7f6e\u7684\u5b9e\u9645\u503c\u3002\u8fd9\u91cc\u5c31\u9700\u8981\u7528\u5230\u5e76\u67e5\u96c6\u7684\u627e\u7236\u4eb2\u7684\u64cd\u4f5c\u4e86\u3002\u7531\u4e8e\u8fd9\u91cc\u8bbf\u95ee\u4e86\u5e76\u67e5\u96c6\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u5e76\u8fdb\u884c\u4e86\u8def\u5f84\u538b\u7f29\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\n\n\u5230\u8fd9\u91cc\uff0c\u63a5\u4e0b\u6765\u7684\u6b65\u9aa4\u5c31\u975e\u5e38\u660e\u663e\u4e86\u3002\u6211\u4eec\u5bf9\u5e8f\u5217\u8fdb\u884c\u5206\u5757\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5757\u7684\u5168\u5c40\u4fee\u6539\u3001\u5168\u5c40\u67e5\u8be2\uff0c\u6211\u4eec\u76f4\u63a5\u6309\u7167\u4e0a\u8ff0\u65b9\u5f0f\u53bb\u505a\u5373\u53ef\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt n)$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5757\u7684\u90e8\u5206\u4fee\u6539\uff0c\u6211\u4eec\u5148\u66b4\u529b\u628a\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5b9e\u9645\u503c\u8fd8\u539f\uff0c\u7136\u540e\u5bf9\u5757\u8fdb\u884c\u91cd\u6784\u5373\u53ef\u3002\u5355\u6b21 $O(\\sqrt n)$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5757\u7684\u90e8\u5206\u67e5\u8be2\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u5e76\u67e5\u96c6\u627e\u5230\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5b9e\u9645\u503c\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002\u5355\u6b21\u4e0d\u8d85\u8fc7 $O(\\sqrt n)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt n)$\u3002\n\n\u6211\u4eec\u6765\u5206\u6790\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u5757\u8bb0\u5f55\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u90a3\u4e48\u81f3\u5c11\u9700\u8981\u4e00\u4e2a $O(n\\sqrt n)$ \u7684\u6570\u7ec4\u3002\u8fd9\u975e\u5e38\u4e0d\u53ef\u63a5\u53d7\u3002\n\n\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u5728\u5206\u5757\u7684\u65f6\u5019\uff0c\u5757\u662f\u72ec\u7acb\u7684\uff0c\u5757\u4e0e\u5757\u4e4b\u95f4\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u64cd\u4f5c\u79bb\u7ebf\uff0c\u5bf9\u6bcf\u4e2a\u5757\u90fd\u6309\u987a\u5e8f\u5904\u7406\u4e00\u904d\u6240\u6709\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u628a\u8be2\u95ee\u7684\u7b54\u6848\u7d2f\u52a0\u5373\u53ef\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5f00\u4e00\u4e2a\u5757\u9700\u8981\u4f7f\u7528\u7684\u7a7a\u95f4\uff0c\u7136\u540e\u5171\u7528\u8fd9\u4e9b\u7a7a\u95f4\u5373\u53ef\u3002\n\n\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002",
        "postTime": 1583687859,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u7b2c\u4e8c\u5206\u5757 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u5148\u641e\u6e05\u695a\u4e00\u4e2a\u524d\u7f6e\u95ee\u9898\uff1a\u628a\u533a\u95f4 $[l,r]$ \u4e2d\u6240\u6709\u7684 $x$ \u53d8\u6210 $y$ \u8be5\u600e\u4e48\u505a\uff1a\n\n\u6211\u4eec\u628a\u62e5\u6709\u540c\u6837\u7684\u503c\u7684\u4e0b\u6807\uff0c\u6254\u8fdb\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u5e76\u5efa\u7acb\u4e00\u4e2a $name$ \u6570\u7ec4\u8868\u793a\u503c $i$ \u6240\u4f7f\u7528\u7684\u96c6\u5408\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8fd9\u4e2a\u64cd\u4f5c\u6d41\u7a0b\u662f\u8fd9\u6837\u7684\uff1a\n\n\u6211\u4eec\u8dd1\u5230\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e14\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u503c\u4e3a $x$\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u4e0b\u6807\u53eb\u505a $i$ \u3002\n\n\u5982\u679c\u503c $y$ \u76ee\u524d\u4e0d\u5b58\u5728\uff0c\u6211\u4eec\u628a $value[i]$ \u8bbe\u4e3a $y$\uff0c\u5e76\u628a $name[y]$ \u8bbe\u4e3a $i$ \u3002\n\n\u5982\u679c\u503c $y$ \u5b58\u5728\uff0c\u90a3\u5c31\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u7684 $pre$ \uff08\u5e76\u67e5\u96c6\u8868\u793a\u7236\u4eb2\u7684\u6570\u7ec4\uff09 \u8bbe\u4e3a $name[y]$ \uff08\u4e5f\u5c31\u662f\u4e4b\u524d\u51fa\u73b0\u8fc7\u7684 $y$ \u7684\u4f4d\u7f6e\uff09\u3002\n\n***\n\n\u8fd9\u4e2a\u95ee\u9898\u641e\u6e05\u695a\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6765\u641e\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u4e86\uff1a\u628a\u533a\u95f4 $[l,r]$ \u4e2d\u5927\u4e8e $x$ \u7684\u6570\u51cf $x$ \u3002\n\n\u6211\u4eec\u8bbe $maxx$ \u4e3a\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u3002\n\n\u5f53 $x > maxx \\div 2$ \u65f6\uff0c\u76f4\u63a5\u66b4\u529b\u628a\u6240\u6709\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$ \u3002\n\n\u8fd9\u4e00\u90e8\u5206\u662f $x + 1$ \u5230\u533a\u95f4\u7684\u6700\u5927\u503c\u3002\n\n\u5f53 $x <= maxx \\div 2$ \u65f6\uff0c\u6211\u4eec\u628a\u5c0f\u4e8e $x$ \u7684\u52a0\u4e0a $x$ \uff0c\u7136\u540e\u6807\u8bb0\u6574\u4e2a\u533a\u95f4\u51cf $x$ \u5373\u53ef\u3002\n\n\u8fd9\u4e00\u90e8\u5206\u662f\u4ece 0 \u5f00\u59cb\u5230 $x$ \u3002\n\n\u6700\u540e\u90fd\u9700\u8981\u52a0\u4e0a $lazy$ \u518d\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u7684 $lazy$ \u662f\u4e00\u4e2a\u51cf\u7684\u6807\u8bb0\u5440\u3002\n\n\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u8f93\u51fa $x$ \u7684\u51fa\u73b0\u6b21\u6570\uff0c\u8fd9\u4e2a\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e00\u4e0b\u5927\u5c0f\u5c31\u884c\u4e86\u3002\n\n***\n\n\u6b64\u65f6\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n})$ \u7684\u505a\u6cd5\uff0c\u5176\u4e2d $\\sqrt{n}$ \u4e3a\u5757\u957f\u3002\n\n\u7a7a\u95f4\u9650\u5236 64MB\uff0c\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u6211\u4eec\u79bb\u7ebf\u5904\u7406\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\uff0c\u5355\u72ec\u64cd\u4f5c\uff0c\u5e76\u5c06\u7b54\u6848\u7d2f\u52a0\uff0c\u6700\u540e\u5904\u7406\u5b8c\u6240\u6709\u7684\u5757\u4e4b\u540e\u8f93\u51fa\u3002\n\n\u8fd9\u6837\uff0c\u6bcf\u4e00\u6b21\u5904\u7406\u5b8c\u4e00\u4e2a\u5757\u4e4b\u540e\u6e05\u7a7a\u5e76\u67e5\u96c6\uff0c\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u7a7a\u95f4\uff0c\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u7136\u540e\u5462\uff0c\u4f60\u9700\u8981\u5927\u529b\u5361\u5e38\uff0c\u6570\u7ec4\u538b\u5230\u6700\u5c0f\uff0c\u574f\u4e60\u60ef\u53bb\u6389\uff0c $x + lazy$ \u5927\u4e8e $10^5$ \u7684\u8be2\u95ee\u4e0d\u5904\u7406\uff0c\u4e0d\u5728\u8303\u56f4\u5185\u7684\u8df3\u8fc7\u3002\n\n\u6700\u91cd\u8981\u7684\u662f\uff0c\u6240\u6709\u7684\u51fd\u6570\u524d\u9762\uff0c\u52a0\u4e0a**inline**\u3002\n\n[no inline](https://www.luogu.com.cn/record/51052546)\n\n[inline](https://www.luogu.com.cn/record/51052683)\n\n\u8dd1\u7684\u5c45\u7136\u8fd8\u4e0d\u662f\u7279\u522b\u6162\uff0c\u5728\u7b2c\u4e8c\u9875\u3002\n\n***\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint read(){\n   int s = 0,w = 1;\n   char ch = getchar();\n   while(ch < '0' || ch > '9'){if(ch == '-')w = -1;ch = getchar();}\n   while(ch >= '0' && ch <= '9')s = s * 10 + ch - '0',ch = getchar();\n   return s * w;\n}\n\nstruct node{\n\tint op;\n\tint l;\n\tint r;\n\tint x;\n}q[1000010];\n\nint n,m;\nint a[1000010];\nint block;\nint len;\nint pre[1000010];\nint name[100010];\nint val[1000010];\nint siz[100010];\nint lazy;\nint maxx;\nint ans[1000010];\n\ninline void build(int x){//\n\tmaxx = -2147483647;\n\tlazy = 0;\n\tint bl,br;\n\tbl = (x - 1) * block + 1;\n\tbr = x * block;\n\tif(x == len)br = n;\n\tfor(int i = bl;i <= br;i ++){\n\t\tmaxx = max(maxx,a[i]);\n\t\tif(!name[a[i]]){\n\t\t\tval[i] = a[i];\n\t\t\tname[a[i]] = i;\n\t\t\tpre[i] = i;\n\t\t}\n\t\telse pre[i] = name[a[i]];\n\t\tsiz[a[i]] ++;\n\t}\n}\n\ninline int find(int x){\n\tif(x == pre[x])return x;\n\telse return pre[x] = find(pre[x]);\n}\n\ninline void change(int x,int y){//\n\tif(name[y]){\n\t\tpre[name[x]] = name[y];\n\t\tsiz[y] += siz[x];\n\t\tname[x] = siz[x] = 0;\n\t}\n\telse {\n\t\tval[name[y] = name[x]] = y;\n\t\tsiz[y] += siz[x];\n\t\tname[x] = siz[x] = 0;\n\t}\n}\n\ninline void update(int num,int l,int r,int x){//\n\tint bl,br;\n\tbl = (num - 1) * block + 1;\n\tbr = num * block;\n\tif(num == len)br = n;\n\tl = max(l,bl),r = min(r,br);\n\tfor(int i = bl;i <= br;i ++){\n\t\tint w = val[find(i)];\n\t\ta[i] = w - lazy;\n\t\tname[w] = 0;\n\t\tsiz[w] = 0;\n\t}\n\tfor(int i = bl;i <= br;i ++)val[i] = 0;\n\tfor(int i = l;i <= r;i ++)if(a[i] > x)a[i] -= x;\n\tbuild(num);\n}\n\ninline void update1(int x){\n\tif(x > (maxx - lazy) / 2){\n\t\tfor(int i = x + 1 + lazy;i <= maxx;i ++)if(name[i])change(i,i - x);\n\t\tmaxx = min(maxx,x + lazy);\n\t}\n\telse {\n\t\tfor(int i = lazy;i <= x + lazy;i ++)if(name[i])change(i,i + x);\n\t\tlazy += x;\n\t}\n}\n\ninline int query(int num,int l,int r,int x){\n\tint ans = 0;\n\tint bl,br;\n\tbl = (num - 1) * block + 1;\n\tbr = num * block;\n\tif(num == len)br = n;\n\tl = max(l,bl),r = min(r,br);\n\tfor(int i = l;i <= r;i ++)if(val[find(i)] - lazy == x)ans ++;\n\treturn ans;\n}\n\ninline void write(int x){\n    if(x < 0)putchar('-'),x = -x;\n    if(x > 9)write(x / 10);\n    putchar(x % 10 + '0');\n}\n\nsigned main(){\n\tcin>>n>>m;\n\tblock = sqrt(n);\n\tlen = ceil(n * 1.0 / block);\n\tfor(int i = 1;i <= n;i ++)a[i] = read();\n\tfor(int i = 1;i <= m;i ++){\n\t\tq[i].op = read();\n\t\tq[i].l = read();\n\t\tq[i].r = read();\n\t\tq[i].x = read();\n\t}\n\tfor(int i = 1;i <= len;i ++){\n\t\tif(i != 1){\n\t\t\tmemset(name,0,sizeof(name));\n\t\t\tmemset(siz,0,sizeof(siz));\n\t\t}\n\t\tlazy = 0;\n\t\tmaxx = -2147483647;\n\t\tint bl,br;\n\t\tbl = (i - 1) * block + 1;\n\t\tbr = i * block;\n\t\tif(i == len)br = n;\n\t\tbuild(i);\n\t\tfor(int j = 1;j <= m;j ++){\n\t\t\tint op,l,r,x;\n\t\t\top = q[j].op;\n\t\t\tl = q[j].l;\n\t\t\tr = q[j].r;\n\t\t\tx = q[j].x;\n\t\t\tif(bl > r || br < l)continue;\n\t\t\tif(op == 1){\n\t\t\t\tif(!(bl >= l && br <= r))update(i,l,r,x);\n\t\t\t\telse update1(x);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(x + lazy > 1e5 + 1)continue;\n\t\t\t\tif(!(bl >= l && br <= r))ans[j] += query(i,l,r,x);\n\t\t\t\telse ans[j] += siz[x + lazy];\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 1;i <= m;i ++)if(q[i].op == 2)write(ans[i]),puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1621763449,
        "uid": 294562,
        "name": "EDqwq",
        "ccfLevel": 7,
        "title": "P4117 [Ynoi2018] \u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c \u9898\u89e3"
    },
    {
        "content": "\u300c\u7a81\u523a\u8d2f\u7a7f\u7b2c\u4e8c\u5206\u5757\u300d\u3002\n\n\u5c5e\u4e8e\u5165\u95e8\u7ea7\u5927\u5206\u5757\uff0c\u4ec5\u7b2c\u4e09\u5206\u5757\u7684\u8bc4\u5206\u4f4e\u4e8e\u6b64\u9898\u3002\n\n\u56e0\u4e3a\u8fd9\u662f Ynoi\uff0c\u6240\u4ee5\u503c\u57df $10^5$ \u4ee3\u8868\u590d\u6742\u5ea6\u4e00\u5b9a\u548c\u503c\u57df\u6709\u5173\u3002\n\n\u4e0b\u9762\u8bb0 $n$ \u4e3a\u5e8f\u5217\u957f\u5ea6\uff0c$m$ \u4e3a\u64cd\u4f5c\u6b21\u6570\uff0c$v$ \u4e3a\u5e8f\u5217\u503c\u57df\u3002\n\n\u53d1\u73b0\u5982\u679c\u5bf9\u5e8f\u5217\u5206\u5757\uff0c\u5219\u6bcf\u4e00\u5757\u7684\u6700\u5927\u503c\u4e00\u5b9a\u662f\u5355\u8c03\u4e0d\u51cf\u7684\uff0c\u4e14\u5982\u679c\u5206\u6210 $k$ \u5757\uff0c\u5219\u6700\u5927\u503c\u603b\u548c\u662f $O(vk)$ \u7684\u3002\n\n\u6211\u4eec\u53bb\u8003\u8651\u6bcf\u6b21\u6574\u4f53\u4fee\u6539\u7684\u65f6\u5019\u90fd\u505a\u4e86\u4ec0\u4e48\uff0c\u53ef\u4ee5\u89c6\u4e3a\u628a\u5927\u4e8e $x$ \u7684\u6570\u51cf\u6389 $x$\uff0c\u4e5f\u53ef\u4ee5\u89c6\u4e3a\u628a\u6240\u6709\u6570\u51cf\u53bb $x$\uff0c\u7136\u540e\u518d\u7ed9\u6240\u6709\u5c0f\u4e8e $0$ \u7684\u6570\u52a0\u4e0a $x$\u3002\n\n\u8bb0\u6700\u5927\u503c\u4e3a $m$\u3002\n\n\u5982\u679c\u6211\u4eec\u80fd\u505a\u5230 $O(d)$ \u5c06\u6700\u5927\u503c\u51cf\u5c11 $1$\uff0c\u5219\u5bf9\u4e8e $2x\\leq m$ \u53ef\u4ee5\u628a\u533a\u95f4 $[1,x]$ \u5e73\u79fb\u5230 $[x+1,2x]$ \u5e76\u8bb0\u5f55\u4e00\u4e2a\u6574\u4f53\u51cf\u7684\u6807\u8bb0\uff0c\u4ee5 $O(dx)$\u7684\u590d\u6742\u5ea6\u51cf\u5c0f $O(x)$ \u6700\u5927\u503c\uff1b\u5bf9\u4e8e $2x>m$ \u53ef\u4ee5\u5c06\u533a\u95f4 $[m-x+1,m]$ \u5e73\u79fb\u5230 $[m-2x+1,m-x]$\uff0c\u4ee5 $O(d(m-x))$ \u7684\u590d\u6742\u5ea6\u51cf\u5c0f $O(m-x)$ \u6700\u5927\u503c\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u533a\u95f4\u5e73\u79fb\u7c7b\u4f3c\u4e8e\u5408\u5e76\u4e24\u4e2a\u70b9\uff0c\u8054\u60f3\u5230\u5e76\u67e5\u96c6\u3002\n\n\u8fd9\u6837\u5408\u5e76\u5c31\u662f $O(\\alpha(n))\\approx O(1)$\uff0c\u6574\u4f53\u4fee\u6539\u5c31\u505a\u597d\u4e86\uff0c\u96f6\u6563\u4fee\u6539\u53ef\u4ee5\u76f4\u63a5\u91cd\u6784\u5757\uff0c\u6574\u4f53\u67e5\u8be2\u53ef\u4ee5\u901a\u8fc7\u5728\u5e76\u67e5\u96c6\u4e0a\u9762\u7ef4\u62a4\u4e00\u4e2a size \u6765\u5b8c\u6210\uff0c\u96f6\u6563\u67e5\u8be2\u53ef\u4ee5\u66b4\u529b\u8ba1\u7b97\u3002\n\n\u53d6\u5757\u957f\u4e3a $O(\\sqrt n)$\uff0c\u5f97\u5230\u590d\u6742\u5ea6\u4e3a\u2014\u2014\u4e0d\u5bf9\uff0c\u521d\u59cb\u5316\u5e76\u67e5\u96c6\u662f\u7ebf\u6027\u7684\uff0c\u6240\u4ee5\u662f $O(vm)$\u2026\u2026\n\n\u6211\u4eec\u53d1\u73b0\u4e3b\u8981\u95ee\u9898\u662f\u5982\u679c\u628a\u4e00\u4e2a\u6570 $x$ \u6539\u6210 $y$ \u4f1a\u591a\u51fa\u6765\u4e00\u4e2a\u9700\u8981\u4fee\u6539\u7684\u4f4d\u7f6e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7684\u5e76\u67e5\u96c6\u4e0d\u7ef4\u62a4\u503c\u57df\uff0c\u7ef4\u62a4\u4e0b\u6807\uff0c\u7136\u540e\u5f00\u4e00\u4e2a\u503c\u57df\u6570\u7ec4\u6765\u8bb0\u5f55\u6bcf\u4e00\u79cd\u6570\u5bf9\u5e94\u7684\u5e76\u67e5\u96c6\u7684\u6839\u3002\n\n\u8fd9\u6837\u6bcf\u6b21\u5c06 $x$ \u5408\u5e76\u5230 $y$ \u65f6\uff0c\u5982\u679c $y$ \u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u76f4\u63a5\u901a\u8fc7\u503c\u57df\u6570\u7ec4\u53d6\u51fa\u6839\u7136\u540e\u5408\u5e76\uff1b\u5982\u679c $y$ \u6ca1\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u76f4\u63a5\u4fee\u6539\u503c\u57df\u6570\u7ec4\uff0c\u4e0d\u9700\u8981\u4fee\u6539\u5e76\u67e5\u96c6\u7684\u7ed3\u6784\u3002\n\n\u8fd9\u6837\u521d\u59cb\u5316\u7684\u65f6\u5019\u56e0\u4e3a\u4e0b\u6807\u7684\u91cf\u7ea7\u662f $O(\\sqrt n)$ \u7684\uff0c\u503c\u57df\u6570\u7ec4\u56e0\u4e3a\u6700\u591a $O(\\sqrt n)$ \u4e2a\u4f4d\u7f6e\u4e0a\u6709\u503c\uff0c\u6240\u4ee5\u521d\u59cb\u5316\u7684\u590d\u6742\u5ea6\u5c31\u538b\u7f29\u5230\u4e86 $O(\\sqrt n)$\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u65f6\u95f4\u4e3a $O(m\\sqrt n)$\uff0c\u7a7a\u95f4\u4e3a $\\color{red}O(v\\sqrt n)$ \u7684\u7b97\u6cd5\u3002\n\n\u8fd9\u600e\u4e48\u529e\uff1f\n\n\u6211\u4eec\u53d1\u73b0\u4fee\u6539\u5bf9\u6bcf\u4e00\u4e2a\u5757\u662f\u72ec\u7acb\u7684\uff0c\u5373\u6211\u4eec\u4fee\u6539\u4e00\u4e2a\u5757\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u5757\u4ea7\u751f\u5f71\u54cd\uff0c\u67e5\u8be2\u7684\u7ed3\u679c\u4e5f\u662f\u72ec\u7acb\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u52a0\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u5148\u5bf9\u7b2c\u4e00\u4e2a\u5757\u8dd1\u4e00\u904d\u6240\u6709\u8be2\u95ee\uff0c\u518d\u5bf9\u7b2c\u4e8c\u4e2a\u5757\u8dd1\u4e00\u904d\u6240\u6709\u8be2\u95ee\u2026\u2026\u5982\u6b64\u7edf\u8ba1\u8d21\u732e\u4e4b\u548c\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u5757\u6765\u5904\u7406\uff0c\u90a3\u4e48\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86~\n\n\u6700\u7ec8\u65f6\u95f4 $O(m\\sqrt n)$\uff0c\u7a7a\u95f4 $O(v)$\u3002\n\n\u8fd9\u9898\u5199\u6cd5\u8db3\u591f\u597d\u8c8c\u4f3c\u662f\u4e0d\u7528\u5361\u5e38\u7684\uff0c\u4f46\u662f\u6211\u7684\u4ee3\u7801\u9700\u8981\u8c03\u4e00\u4e0b\u5757\u957f\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nconst int N = 500005, S = 1000;\n\nint a[N], n, m, opt[N], l[N], r[N], x[N], pos[N], bl[N / S + 5], br[N / S + 5], ans[N];\nstruct Block {\n\tint l, r, f[N], rt[N], siz[N], val[N], tag, mx;\n\tinline int GetRoot(int v) {\n\t\tif (f[v] == v) return f[v];\n\t\tf[v] = GetRoot(f[v]);\n\t\treturn f[v];\n\t}\n\tinline void Merge(int x, int y) {\n\t\tif (rt[y]) {\n\t\t\tf[rt[x]] = rt[y];\n\t\t} else {\n\t\t\trt[y] = rt[x];\n\t\t\tval[rt[y]] = y;\n\t\t}\n\t\tsiz[y] += siz[x];\n\t\trt[x] = siz[x] = 0;\n\t}\n\tinline void Destroy() {\n\t\tfor (register int i = l;i <= r;i++) {\n\t\t\ta[i] = val[GetRoot(i)];\n\t\t\t//printf(\"%d \", a[i]);\n\t\t\trt[a[i]] = 0;\n\t\t\tsiz[a[i]] = 0;\n\t\t\ta[i] -= tag;\n\t\t}\n\t\t//puts(\"\");\n\t\tfor (register int i = l;i <= r;i++) f[i] = 0;\n\t\ttag = 0;\n\t}\n\tinline void Build() {\n\t\tmx = 0;\n\t\tfor (register int i = l;i <= r;i++) {\n\t\t\tif (!rt[a[i]]) {\n\t\t\t\trt[a[i]] = i;\n\t\t\t\tf[i] = i;\n\t\t\t\tval[i] = a[i];\n\t\t\t} else {\n\t\t\t\tf[i] = rt[a[i]];\n\t\t\t}\n\t\t\tsiz[a[i]]++;\n\t\t\tmx = Max(mx, a[i]);\n\t\t}\n\t}\n\tinline void TotalModify(int x) {\n\t\tif (mx - tag >= (x << 1)) {\n\t\t\tfor (register int i = tag + 1;i <= tag + x;i++) {\n\t\t\t\tif (rt[i]) Merge(i, i + x);\n\t\t\t}\n\t\t\ttag += x;\n\t\t} else {\n\t\t\tfor (register int i = mx;i > tag + x;i--) {\n\t\t\t\tif (rt[i]) Merge(i, i - x);\n\t\t\t}\n\t\t\tmx = Min(mx, tag + x);\n\t\t}\n\t}\n\tinline void PartModify(int ll, int rr, int x) {\n\t\tif (ll > rr) return;\n\t\tDestroy();\n\t\tfor (register int i = ll;i <= rr;i++) {\n\t\t\tif (a[i] > x) a[i] -= x;\n\t\t}\n\t\tBuild();\n\t}\n\tinline int TotalQuery(int x) {\n\t\tif (x + tag > 500000) return 0;\n\t\treturn siz[x + tag];\n\t}\n\tinline int PartQuery(int ll, int rr, int x) {\n\t\tregister int ans = 0;\n\t\tfor (register int j = ll;j <= rr;j++) {\n\t\t\tif (val[GetRoot(j)] - tag == x) ans++;\n\t\t}\n\t\treturn ans;\n\t}\n};\nBlock blk;\n\ninline void Read() {\n\tn = qread(); m = qread();\n\tfor (register int i = 1;i <= n;i++) a[i] = qread();\n\tfor (register int i = 1;i <= m;i++) opt[i] = qread(), l[i] = qread(), r[i] = qread(), x[i] = qread();\n}\n\ninline void Solve() {\n\tfor (register int i = 1;i <= n;i++) pos[i] = (i - 1) / S + 1;\n\tfor (register int i = 1;i <= pos[n];i++) {\n\t\tbl[i] = (i - 1) * S + 1;\n\t\tbr[i] = Min(i * S, n);\n\t}\n\tfor (register int i = 1;i <= pos[n];i++) {\n\t\tblk.l = bl[i];\n\t\tblk.r = br[i];\n\t\tblk.Build();\n\t\tfor (register int j = 1;j <= m;j++) {\n\t\t\tif (opt[j] == 1) {\n\t\t\t\tif (l[j] <= blk.l && r[j] >= blk.r) blk.TotalModify(x[j]);\n\t\t\t\telse blk.PartModify(Max(l[j], blk.l), Min(r[j], blk.r), x[j]);\n\t\t\t} else {\n\t\t\t\tif (l[j] <= blk.l && r[j] >= blk.r) ans[j] += blk.TotalQuery(x[j]);\n\t\t\t\telse ans[j] += blk.PartQuery(Max(l[j], blk.l), Min(r[j], blk.r), x[j]);\n\t\t\t}\n\t\t\t//puts(\"---\");\n\t\t\t//for (register int k = 1;k <= n;k++) printf(\"%d \", a[k]);\n\t\t\t//putchar('\\n');\n\t\t}\n\t\tblk.Destroy();\n\t}\n\tfor (register int i = 1;i <= m;i++) {\n\t\tif (opt[i] == 2) printf(\"%d\\n\", ans[i]);\n\t}\n}\n\nint main() {\n\tRead();\n\tSolve();\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1591534836,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4117 \u3010[Ynoi2018]\u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c\u3011"
    },
    {
        "content": "\u7b2c\u4e8c\u5206\u5757\uff0c\u795e\u4ed9\u5927\u5206\u5757\u9898\uff0c\u4e0d\u8fc7\u60f3\u6e05\u695a\u4e86\u540e\u5e94\u8be5\u96be\u5ea6\u76f8\u5bf9\u4e0d\u592a\u5927\u3002\n\n### Part.1\n\n\u5148\u770b\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4$a_i\\leq 5e5$\uff0c\u60f3\u5230\u5206\u5757\u7684\u65b9\u5f0f\u5e94\u8be5\u4e0e\u503c\u57df\u6709\u5173\u3002\u53e6\u5916\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u7684\u503c\u662f\u53ea\u51cf\u5c0f\u4e0d\u589e\u5927\u7684\uff0c\u8003\u8651\u503c\u57df\u4e0a\u5e94\u8be5\u6709\u4e00\u4e2a\u5747\u644a\uff0c\u5bf9\u6bcf\u5757\u505a\u4e00\u4e2a\u503c\u57df\uff0c\u8003\u8651\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u4e0a\u9762~~\u641e\u4e00\u4e9b\u4e8b\u60c5~~\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u4f7f\u590d\u6742\u5ea6\u6b63\u786e\u3002~~\u7136\u540e\u6211\u5c31\u4e0d\u4f1a\u4e86~~\n\n### Part.2\n\n~~\u770b\u4e86\u51fa\u9898\u4eba\u7684\u9898\u89e3\u540e~~\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6709\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684trick\uff0c\u6211\u4eec\u8003\u8651\u503c\u57df\u662f\u4e0d\u589e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba9\u503c\u57df\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\u503c\u8d8a\u6765\u8d8a\u5c0f\u3002\n\n\u8bbe\u5f53\u524d\u4fee\u6539\u64cd\u4f5c\u6709\u4e00\u4e2a$x$\uff0c\u5f53\u524d\u6700\u5927\u503c\u4e3a$mx$\uff0c\u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\u3002\n\n1. $mx \\le x\\times 2$ \u6b64\u65f6\u6211\u4eec\u628a$[x+1,mx]$\u4e0a\u7684\u503c\u66b4\u529b\u51cf\u3002\n2. $mx > x\\times 2$\u6b64\u65f6\u6211\u4eec\u628a$[1,x]$\u4e0a\u7684\u503c\u66b4\u529b\u52a0\uff0c\u7136\u540e\u6253\u4e0a\u5757\u6574\u4f53\u51cf\u7684$tag$\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u603b\u662f\u4f7f\u5f97\u5757\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u8d8a\u6765\u8d8a\u8fd1\uff0c\u6240\u4ee5\u4e00\u4e2a\u5757\u7684\u603b\u590d\u6742\u7684\u662f$O(n)$\u7684\uff0c\u6240\u6709\u5757\u7684\u603b\u590d\u6742\u5ea6\u662f$O(n\\sqrt n)$\u3002\n\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u89e3\u51b3\u4e86\u6700\u91cd\u8981\u7684\u64cd\u4f5c\u3002\n\n### Part.3\n\n\u4f46\u8be2\u95ee\u65f6\u6211\u4eec\u6bcf\u4e2a\u5757\u5982\u679c\u53ea\u8bb0\u5f55\u5f53\u524d\u503c\u5728\u5757\u5185\u51fa\u73b0\u6b21\u6570\u7684\u8bdd\uff0c\u5f88\u663e\u7136\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u96f6\u6563\u5757\u65e0\u6cd5\u5feb\u901f\u627e\u5230\u4e00\u4e2a\u4e0b\u6807\u5bf9\u5e94\u7684\u73b0\u5728\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8ba9\u503c\u57df\u7684\u6bcf\u4e2a\u503c\u8bb0\u5f55\u5979\u6709\u54ea\u4e9b\u4e0b\u6807\u662f\u5f53\u524d\u503c\u3002\u6216\u8005\u6362\u53e5\u8bdd\uff0c\u5bf9\u4e0b\u6807\u6765\u8bf4\uff0c\u5c31\u662f\u7528\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5979\u5f53\u524d\u5728\u503c\u57df\u4e0a\u7684\u503c\u3002\n\n\u6211\u4eec\u91cd\u65b0\u5b9a\u4e49\u4e24\u4e2a\u64cd\u4f5c\u3002\n\n1. $mx \\le x\\times 2$ \u6b64\u65f6\u6211\u4eec\u628a$[x+1,mx]$\u4e0a\u7684\u503c\u6240\u5305\u542b\u7684\u4e0b\u6807\u5f80$[1,x]$\u5408\u5e76\u3002\n2. $mx > x\\times 2$\u6b64\u65f6\u6211\u4eec\u628a$[1,x]$\u4e0a\u7684\u503c\u6240\u5305\u542b\u7684\u4e0b\u6807\u5f80$[x+1,x\\times 2]$\u5408\u5e76\uff0c\u7136\u540e\u6253\u4e0a\u5757\u6574\u4f53\u51cf\u7684$tag$\u3002\n\n\u5982\u679c\u662f\u96f6\u6563\u5757\uff0c\u6211\u4eec\u5c31\u66b4\u529b\u627e\u51fa\u5f53\u524d\u4e0b\u6807\u6307\u5411\u7684\u5b9e\u9645\u7684\u503c\uff0c\u4fee\u6539\u540e\u628a\u6574\u4e2a\u5757\u91cd\u6784\u3002\u8fd9\u6837\u662f$O(\\sqrt n)$\u7684\u3002\n\n\u4ec0\u4e48\u6837\u7684\u6570\u636e\u7ed3\u6784\u80fd\u5b9e\u73b0\u8fd9\u6837\u7684\u64cd\u4f5c\u5462\uff1f\u4e00\u4e2a\u76f4\u63a5\u7684\u60f3\u6cd5\u5c31\u662f\u94fe\u8868\uff0c\u5bf9\u6bcf\u4e2a\u503c\u7ef4\u62a4\u4e00\u4e2a\u94fe\u8868\uff0c\u5408\u5e76\u662f$O(1)$\u7684\uff0c\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\u3002\n\n\u7136\u800c\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u66f4\u9ad8\u6548\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u67e5\u96c6\u3002\u6211\u4eec\u5bf9\u6bcf\u4e2a\u503c\u7ef4\u62a4\u5e76\u67e5\u96c6\uff0c\u5408\u5e76\u662f$O(1)$\u7684\uff0c\u4f46\u5728\u91cd\u6784\u5757\u65f6\u8f83\u94fe\u8868\u5e38\u6570\u66f4\u5c0f\uff0c\u662f\u66f4\u4f18\u79c0\u7684\u9009\u62e9\u3002\n\n### Part.4\n\n\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u6211\u4eec\u8fd8\u662f\u8fc7\u4e0d\u4e86\u8fd9\u9053\u9898\u3002~~\u6211\u6ca1\u6709\u73a9\u4f60\u4eec~~\n\n\u4ed4\u7ec6\u89c2\u5bdf\u7a7a\u95f4\u9650\u5236\uff0c\u53d1\u73b0\u662f**62.50MB**\uff0c~~\u679c\u7136\u524d\u9762\u8fd8\u4e0d\u591fdl~~\uff0c\u6211\u4eec\u8981\u8003\u8651\u4e00\u79cd\u7ebf\u6027\u7a7a\u95f4\u7684\u505a\u6cd5\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u6709\u4e00\u4e2atrick\u53eb\u9010\u5757\u5904\u7406\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u4e2a\u5757\u5bf9\u603b\u7684\u65f6\u95f4\u8d21\u732e\u4e86$O(n+m)$\u7684\u590d\u6742\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5757\u8dd1\u4e00\u904d\u6240\u6709\u8be2\u95ee\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u90a3\u6211\u4eec\u5176\u4ed6\u90a3\u4e48\u591a\u9898\u4e3a\u4ec0\u4e48\u6ca1\u6709\u7528\u8fd9\u4e2atrick\u5462\uff1f\u56e0\u4e3a\u7528\u5b83\u8981\u6ee1\u8db3\u4e0b\u9762\u51e0\u4e2a\u6027\u8d28\u3002\n\n1. \u53ef\u4ee5\u79bb\u7ebf\uff0c\u663e\u7136\u6211\u4eec\u662f\u79bb\u7ebf\u4e0b\u6765\u5bf9\u6bcf\u4e2a\u5757\u8dd1\u8be2\u95ee\u3002\n2. \u5757\u4e4b\u95f4\u4e0d\u4e92\u76f8\u5e72\u6270\u3002\u5982\u679c\u4e00\u4e2a\u5757\u7684\u4fe1\u606f\u53d1\u751f\u6539\u53d8\u5c31\u8981\u5f71\u54cd\u76f8\u90bb\u6216\u66f4\u591a\u7684\u5757\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u7528\u3002\n3. \u7b54\u6848\u53ef\u52a0\u6027\uff0c\u6211\u4eec\u662f\u6bcf\u6b21\u8dd1\u8be2\u95ee\u662f\u628a\u7b54\u6848\u52a0\u5165\u603b\u7b54\u6848\uff0c\u5982\u679c\u4e0d\u53ef\u52a0\uff0c\u90a3\u4e48\u4e5f\u4e0d\u884c\u3002\n\n\u6700\u540e\u544a\u8bc9\u4f60\u4e00\u4e2a\u597d\u6d88\u606f\uff0c**\u8fd9\u4e2a\u9898\u4e0d\u5361\u5e38\uff01\uff01\uff01**\u6240\u4ee5~~\u5feb\u4e50\u7684~~$code$\u5427\uff01~~\u5176\u5b9e\u5c31\u662f\u7ec6\u8282\u6709\u70b9\u591a~~\n\n~~\u8fd8\u662f\u8d34\u4e00\u4e0b\u6211\u4e11\u964b\u7684\u4ee3\u7801\u5427~~\n\n```cpp\ninline int findf(int x) {return x==fa[x]?x:fa[x]=findf(fa[x]);}\n\ninline void merge(int u,int v)//\u5408\u5e76\u4e24\u4e2a\u503c\u7684\u4e0b\u6807\n{\n    if(rt[v]) fa[rt[u]]=rt[v];\n    else rt[v]=rt[u],to[rt[v]]=v;\n    siz[v]+=siz[u];\n    rt[u]=siz[u]=0;\n}\n\nvoid build(int x)//\u65b0\u5efa\u5757\n{\n    mxval=tag=0;\n    for(int i=L[x];i<=R[x];++i)\n    {\n        mxval=max(mxval,a[i]);\n        if(rt[a[i]]) fa[i]=rt[a[i]];\n        else rt[a[i]]=fa[i]=i,to[i]=a[i];\n        ++siz[a[i]];\n    }\n}\n\nvoid restruct(int x,int l,int r,int nx)//\u91cd\u6784\u5757\n{\n    for(int i=L[x];i<=R[x];++i)\n        a[i]=to[findf(i)],rt[a[i]]=siz[a[i]]=0,a[i]-=tag;\n    for(int i=L[x];i<=R[x];++i)\n        to[i]=0;\n    l=max(l,L[x]);r=min(r,R[x]);\n    for(int i=l;i<=r;++i)\n        a[i]=a[i]-(a[i]>nx)*nx;\n    build(x);\n}\n\nvoid modify(int nx)//\u4fee\u6539\n{\n    if((nx<<1)<=mxval-tag)\n    {\n        for(int i=tag+1;i<=tag+nx;++i)\n            if(rt[i]) merge(i,i+nx);\n        tag+=nx;//\u8bb0\u5f97\u4fee\u6539tag\n    }\n    else\n    {\n        for(int i=tag+nx+1;i<=mxval;++i)\n            if(rt[i]) merge(i,i-nx);\n        if(tag+nx<mxval) mxval=tag+nx;//\u8bb0\u5f97\u66f4\u65b0\u6700\u5927\u503c\n    }\n}\n\nvoid query(int x,int i)//\u8be2\u95ee\n{\n    int l=q[i].l,r=q[i].r,nx=q[i].x;\n    if(nx+tag>5e5) return;\n    if(l<=L[x]&&R[x]<=r) ans[i]+=siz[nx+tag];\n    else\n    {\n        l=max(L[x],l);r=min(R[x],r);\n        for(int j=l;j<=r;++j)\n            if(to[findf(j)]-tag==nx) ++ans[i];\n    }\n}\n\nint main()\n{\n    read(n);read(m);\n    klen=sqrt(n);\n    for(int i=1;i<=n;++i)\n        read(a[i]);\n    for(int i=1;i<=m;++i)\n        read(q[i].opt),read(q[i].l),read(q[i].r),read(q[i].x);\n    blocks=(n-1)/klen+1;\n    for(int i=1;i<=blocks;++i)\n        L[i]=R[i-1]+1,R[i]=i*klen;\n    R[blocks]=n;\n    for(int i=1;i<=blocks;++i)//\u5148\u679a\u4e3e\u5757\uff0c\u9010\u5757\u5904\u7406\n    {\n        memset(rt,0,sizeof(rt));\n        memset(siz,0,sizeof(siz));\n        build(i);\n        for(int j=1;j<=m;++j)\n        {\n            if(L[i]>q[j].r||R[i]<q[j].l) continue;\n            else if(q[j].opt==1)\n            {\n                if(q[j].l<=L[i]&&R[i]<=q[j].r)\n                    modify(q[j].x);\n                else restruct(i,q[j].l,q[j].r,q[j].x);\n            }\n            else query(i,j);\n        }\n    }\n    for(int i=1;i<=m;++i)\n        if(q[i].opt==2) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n\n",
        "postTime": 1598576717,
        "uid": 199750,
        "name": "\u8bd5\u8bd5\u4e8b\u5b9e\u4e0a\u5417",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4117 \u3010[Ynoi2018]\u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c\u3011"
    },
    {
        "content": "## \u7b2c\u4e8c\u5206\u5757\u5b66\u4e60\u7b14\u8bb0\n### \u7b2c\u4e8c\u5206\u5757\u89e3\u51b3\u7684\u95ee\u9898\n1. \u533a\u95f4\u5bf9\u4e8e\u6240\u6709\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\n2. \u8be2\u95ee\u533a\u95f4\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u7b49\u4e8e $x$\n\n### \u57fa\u7840\u90e8\u5206\uff08For CF896E\n**\u8fd9\u662f\u4e00\u4e2a\u5728\u7ebf\u505a\u6cd5\uff01\u7b2c\u4e8c\u5206\u5757\u53ef\u4ee5\u5728\u7ebf\uff01**  \n\u6ce8\u610f\u9898\u76ee\u4e2d\u7684\u6570\u636e\u8303\u56f4\uff1a$a_i,x\\le10^5$\uff0c\u8fd9\u4fbf\u662f\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u7684\u5173\u952e\u3002  \n\u5f15\u7528\u67d0\u4f4d\u5de8\u4f6c\u8bf4\u8fc7\u7684\u8bdd\uff1a`\u770b\u5230\u4e00\u9053Ynoi\u9898\uff0c\u6211\u4eec\u7b2c\u4e00\u60f3\u5230\u7684\u5e94\u8be5\u662f\u5361\u5e38\u548c\u5206\u5757`\u3002  \n\u6240\u4ee5\u6211\u4eec\u9996\u5148\u5bf9\u533a\u95f4\u8fdb\u884c\u5206\u5757\u3002  \n\u56e0\u4e3a\u6b64\u9898\u503c\u57df\u5f88\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728\u503c\u57df\u4e0a\u641e\u70b9\u5927\u65b0\u95fb\u3002  \n\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5757\u7684\u503c\u57df\u5f00\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u5e8f\u5217\u4e0a\u7684\u4f4d\u7f6e\uff0c\u6307\u5411\u8fd9\u4e2a\u503c\u57df\u7684\u8282\u70b9\u3002  \n\u7136\u540e\u8fd9\u6837\u67e5\u8be2\u64cd\u4f5c\u4e5f\u5c31\u57fa\u672c\u5b8c\u6210\u4e86\uff0c\u53ea\u9700\u8981\u67e5\u8be2\u6709\u591a\u5c11\u4e2a\u8282\u70b9\u6307\u5411\u503c\u57df\u8282\u70b9\u5c31\u597d\u4e86\u3002  \n\u5177\u4f53\u7ef4\u62a4\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(\\text{\u503c\u57df}\\times\\sqrt{N})$ \u7684\u3002  \n\u63a5\u4e0b\u6765\u6211\u4eec\u8ba8\u8bba\u4e00\u4e0b\u5982\u4f55\u533a\u95f4\u4fee\u6539\u3002  \n\u533a\u95f4\u4fee\u6539\u5176\u5b9e\u5f88\u66b4\u529b\uff0c\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u5c0f\u4e8e\u7b49\u4e8e $x$ \u7684\u503c\u57df\u8282\u70b9\u5c31\u597d\u4e86\u3002  \n\u8fd9\u6837\u590d\u6742\u5ea6\u662f $O(\\text{\u5c0f\u4e8ex\u7684\u4e0d\u540c\u6570\u4e2a\u6570)}$\u7684\uff0c\u663e\u7136\u5f88\u5bb9\u6613\u88ab\u5361\u6389\u3002  \n\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u52a0\u4e00\u4e2a\u5e38\u6570\u4f18\u5316\uff0c\u8bb0\u5f55\u533a\u95f4\u6700\u5927\u503c $max$\uff0c\u5982\u679c $x\\le max$ \u65f6\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u6539\u3002  \n\u5426\u5219\u5bf9\u4e8e\u90a3\u4e9b\u6bd4 $max$ \u5c0f\u7684\u4f4d\u7f6e\uff0c\u5e76\u628a\u5b83\u4eec\u52a0\u4e0a\u4e00\u4e2a $max$\uff0c\u6700\u540e\u6807\u8bb0\u8fd9\u4e2a\u533a\u95f4\u9700\u8981\u5168\u5c40\u51cf\u53bb $max$\uff08\u61d2\u6807\u8bb0\u3002  \n\u52a0\u4e86\u8fd9\u4e2a\u4f18\u5316\u5c31\u8db3\u4ee5\u8fc7\u4e86 CF896E \u4e86QwQ\uff0c\u5728\u8fd9\u91cc\u8d34\u4e00\u4e0b\u4ee3\u7801\u3002  \n\uff08\u8fd8\u662f\u5728\u7ebf\u7b97\u6cd5  \n```cpp\n#include<bits/stdc++.h>\n#define SZ 333//\u5757\u7684\u5927\u5c0f\n#define L(a) ((a)*SZ-SZ+1)//\u67d0\u4e2a\u5757\u5de6\u7aef\u70b9\n#define R(a) ((a)*SZ)//\u67d0\u4e2a\u5757\u53f3\u7aef\u70b9\nusing namespace std;\ntemplate<typename T>inline void read(T &x)\n{//\u5feb\u8bfb\uff0c\u8fd9\u600e\u4e48\u80fd\u53eb\u5361\u5e38\u5462\uff08doge\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tx=(f?-x:x);\n}\ntemplate<typename T>inline void print(T x)\n{\n\tif(x<0) putchar('-'),x=-x;\n\t{if(x>9) print(x/10);}putchar(x%10+48);\n}\nstruct node{int rt,nm;}g[405][110005];//\u6bcf\u4e2a\u5757\u5185\u503c\u57df\u7ed3\u6784\u4f53\uff0crt\u662f\u503c\u57df\u5bf9\u5e94\u7684\u7956\u5148\uff0cnum\u662f\u8fd9\u4e2a\u503c\u51fa\u73b0\u6b21\u6570\nint n,Q,bl[110005],fa[110005],v[110005],a[110005],mx[110005],lz[110005];\n//bl\u662f\u5206\u5757\u4e2d\u7684\u67d0\u4e2a\u8282\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u5757\uff0ca\u662f\u521d\u59cb\u7684\u6570\u7ec4\u503c\uff0cv\u662f\u4e00\u4e2a\u5e76\u67e5\u96c6\u8282\u70b9\u5bf9\u5e94\u7684\u6743\u503c\n//fa\u662f\u5e76\u67e5\u96c6\u7684\u7956\u5148\u6570\u7ec4\uff0cmx\u662f\u533a\u95f4\u6700\u5927\u503c\uff0clz\u662f\u61d2\u6807\u8bb0\ninline int getf(int x) {return x==fa[x]?x:fa[x]=getf(fa[x]);}\n//\u5e76\u67e5\u96c6\u627e\u7956\u5148\uff0c\u81ea\u5e26\u8def\u5f84\u538b\u7f29\uff08\ninline void push(int x)//\u4e0b\u538b\u4e00\u4e2a\u6807\u8bb0\n{\n\tfor(int i=L(x),e=R(x);i<=e;++i) a[i]=v[getf(i)],g[x][a[i]].rt=g[x][a[i]].nm=0,a[i]-=lz[x];\n\t//\u904d\u5386\u8fd9\u4e2a\u5757\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u628a\u8fd9\u4e2a\u5757\u7684\u4e1c\u897f\u585e\u56dea\u4e2d\n\tlz[x]=0;for(int i=L(x),e=R(x);i<=e;++i) fa[i]=0;//\u628a\u8fd9\u4e2a\u533a\u95f4\u6e05\u7a7a\n}\ninline void init(int x)//\u521d\u59cb\u5316\u4e00\u4e2a\u5757\n{\n\tmx[x]=0;\n\tfor(int i=L(x),e=R(x);i<=e;++i)\n\t{\n\t\tmx[x]=max(mx[x],a[i]),++g[x][a[i]].nm;//\u8bb0\u5f55\u533a\u95f4\u6700\u5927\u503c\u4ee5\u53ca\u67d0\u4e2a\u503c\u57df\u4f4d\u7f6e\u5143\u7d20\u4e2a\u6570\n\t\tif(g[x][a[i]].rt) fa[i]=g[x][a[i]].rt;else v[i]=a[i],g[x][a[i]].rt=fa[i]=i;\n\t\t//\u5982\u679c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u6709\u503c\u57df\u8282\u70b9\u5b58\u5728\u4e86\uff0c\u90a3\u5c31\u76f4\u63a5\u628a\u5f53\u524d\u8282\u70b9\u5408\u5e76\u5230\u5148\u524d\u8282\u70b9\u4e0a\u53bb\n\t\t//\u5426\u5219\u65b0\u5efa\u4e00\u4e2a\u503c\u57df\u8282\u70b9\n\t}\n}\ninline void chng(int x,int a,int b)//\u628a\u503c\u57df\u4e3aa\u7684\u4f4d\u7f6e\u548c\u503c\u57df\u4e3ab\u7684\u5408\u5e76\n{\n\tnode &s=g[x][a],&t=g[x][b];//\u627e\u5230\u4e24\u4e2a\u8282\u70b9\n\tif(t.rt) fa[s.rt]=t.rt;else t.rt=s.rt,v[s.rt]=b;\n\tt.nm+=s.nm,s.nm=s.rt=0;//\u76f4\u63a5\u66b4\u529b\u5408\u5e76\uff0c\u5e76\u628as\u7ed9\u5220\u9664\n\t//\u5982\u679cb\u4e0d\u5b58\u5728\u5c31\u76f4\u63a5\u5411a\u8d3a\u5c31\u597d\u4e86\uff0c\u76f4\u63a5\u628aa\u6307\u5411b\n}\ninline void atag(int x,int ad)//\u6253\u6807\u8bb0\n{\n\tif(ad<=mx[x]-lz[x]-ad) {for(int i=lz[x]+1;i<=lz[x]+ad;++i) if(g[x][i].rt) chng(x,i,i+ad);lz[x]+=ad;}\n\telse {for(int i=mx[x];i>lz[x]+ad;i--) if(g[x][i].rt) chng(x,i,i-ad);mx[x]=min(mx[x],lz[x]+ad);}\n\t//\u521a\u521a\u8bf4\u7684\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff0c\u5e94\u8be5\u8fd8\u633a\u597d\u61c2\u7684\u5427\uff0c\u4e0d\u89e3\u91ca\u4e86\n}\ninline void chang(int l,int r,int x)//\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\n{\n\tint p=bl[l],q=bl[r];push(p);if(p^q) push(q);//\u90fd\u5148\u4e0b\u63a8tag\n\tif(p^q)\n\t{\n\t\tfor(int i=l,e=R(p);i<=e;++i) if(a[i]>x) a[i]-=x;\n\t\tfor(int i=L(q);i<=r;++i) if(a[i]>x) a[i]-=x;//\u66b4\u529b\u7684\u8fb9\u5757\n\t\tfor(int i=p+1;i<=q-1;++i) atag(i,x);//\u6574\u5757\u6253\u6807\u8bb0\n\t\tinit(p),init(q);//\u518d\u8bb0\u5f55\u56de\u53bb\u5757\u7684\u4fe1\u606f\n\t}\n\telse {for(int i=l;i<=r;++i) if(a[i]>x) a[i]-=x;init(p);}\n\t//\u5426\u5219\u76f4\u63a5\u5b8c\u5168\u7684\u66b4\u529b\uff01\n}\ninline int query(int l,int r,int x)//\u533a\u95f4\u67e5\u8be2\u64cd\u4f5c\n{\n\t//\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u6765\u67e5\u8be2\u503c\u57df\u4e0a\u6240\u5bf9\u5e94\u7684\u4f4d\u7f6e\u51fa\u73b0\u6b21\u6570\u5373\u53ef\n\tint p=bl[l],q=bl[r],res=0;//\u5206\u5757\u57fa\u672c\u5957\u8def\uff0c\u548cchang\u5dee\u4e0d\u591a\n\tif(p^q)\n\t{\n\t\tfor(int i=l,e=R(p);i<=e;++i) if(v[getf(i)]-lz[p]==x) ++res;\n\t\tfor(int i=L(q);i<=r;++i) if(v[getf(i)]-lz[q]==x) ++res;\n\t\tfor(int i=p+1;i<=q-1;i++) if(x+lz[i]<=100000) res+=g[i][x+lz[i]].nm;//\u9632\u6b62\u8d8a\u754c\n\t}\n\telse for(int i=l;i<=r;++i) if(v[getf(i)]-lz[p]==x) ++res;\n\treturn res;\n}\nint main()\n{\n\tread(n),read(Q);for(int i=1;i<=n;i++) read(a[i]),bl[i]=(i-1)/SZ+1;\n\tfor(int i=bl[1];i<=bl[n];i++) init(i),lz[i]=0;\n\tfor(int f,l,r,x;Q--;)\n\t{\n\t\tread(f),read(l),read(r),read(x);\n\t\tif(f==1) chang(l,r,x);else print(query(l,r,x)),putchar('\\n');\n\t}\n\treturn 0;\n}\n```\n### \u8fdb\u9636\uff08For \u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c\n\u521a\u770b\u5230[\u8fd9\u9898](https://www.luogu.com.cn/problem/P4117)\u7684\u65f6\u5019\uff0c\u6211\u5c31\u5355\u7eaf\u5730\u4ee5\u4e3a\u5b83\u662f\u4e2a\u53cc\u500d\u7ecf\u9a8c\u3002\u4e8e\u662f\u6211\u4ea4\u4e86\u4e00\u53d1\uff0c\u7ed3\u679c\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/np6a9056.png)  \n\u4e8e\u662f\u6211\u53c8\u4ed4\u7ec6\u770b\u4e86\u4e00\u904d\u7ec8\u4e8e\u53d1\u73b0\u6709\u70b9\u4e0d\u5bf9\u52b2\uff0c\u6570\u636e\u8303\u56f4\u6539\u6210\u4e86\uff1a$x\\le5\\times10^5$\u3002  \n\u6539\u4e86\u6570\u636e\u8303\u56f4\u4e4b\u540e\u53c8\u4ea4\u4e86\u4e00\u53d1\uff0c\u7ed3\u679c\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/xevqbxpy.png)  \n~~\u770b\u6765\u8fd8\u662f\u4e0d\u80fd\u6295\u673a\u53d6\u5de7\uff08~~  \n\u8fd9\u9898\u4e3b\u8981\u6bd2\u7624\u4e4b\u5904\u5c31\u662f\u5361\u4e86\u4f60\u7684\u7a7a\u95f4\uff0c\u6211\u4eec\u4e4b\u524d\u7684\u503c\u57df\u5e76\u67e5\u96c6\u5c31\u76f4\u63a5\u6ca1\u7528\u4e86\u3002  \n\u90a3\u8fd9\u9898\u5c31\u4e0d\u80fd\u7528 \u7b2c\u4e8c\u5206\u5757 \u505a\u4e86\u5417\uff1f\u7b54\u6848\u662f\u5426\u5b9a\u7684\u3002  \n\u7528\u4e00\u4e2a\u5e38\u89c4\u5957\u8def\uff1a\u79bb\u7ebf\uff01  \n\u6211\u4eec\u9996\u5148\u628a\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u5206\u522b\u6a21\u62df\u6bcf\u6b21\u8be2\u95ee\u3001\u4fee\u6539\u3002  \n\u6700\u540e\u628a\u6bcf\u4e2a\u5757\u7684\u64cd\u4f5c\u7d2f\u52a0\u8d77\u6765\u5c31\u597d\u4e86\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6b63\u786e\u7684\u7b54\u6848\u3002  \n\uff08\u597d\u50cf\u53ea\u80fd\u79bb\u7ebf\uff0c\u7b14\u8005\u76ee\u524d\u8fd8\u6ca1\u60f3\u5230\u5728\u7ebf\u7684\u505a\u6cd5\u3002  \n\u4ee3\u7801\u81f3\u5c11\u6bd4\u4e0a\u9762\u7684\u5728\u7ebf\u7b97\u6cd5\u7b80\u5355\uff0c\u4e5f\u6ca1\u600e\u4e48\u5361\u5e38\u5c31\u8fc7\u4e86\uff0c\u6240\u4ee5\u5c31\u4e0d\u8d34\u4e86\n\n### \u4e60\u9898\n[\uff08\u6a21\u677f\uff09Link of Luogu](https://www.luogu.com.cn/problem/CF896E)  \n[\uff08\u6a21\u677f\uff09Link of Codeforces](http://codeforces.com/problemset/problem/896/E)  \n[\u6a21\u677f\uff08\u52a0\u5f3a\u7248\uff09](https://www.luogu.com.cn/problem/P4117)  ",
        "postTime": 1603850639,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "P4117[Ynoi2018]\u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u8fd9\u53eb\u7b80\u5355\uff1f\u6211\u5410\u4e86\u597d\u5427\u3002     \n\n\u5176\u5b9e\u4e0d\u7ba1\u662f\u770b\u9898\u89e3\u60f3\u8fd8\u662f\u770b\u5b8c\u9898\u89e3\u540e\u60f3\uff0c\u90fd\u662f\u4e00\u4e2a\u96be\u5ea6\u3002    \n\n\u5b8c\u6210\u5ea6\uff1a $50%$ \u3002    \n\n\u6b7b\u56e0\uff1a\u6211\u7528\u4e0d\u6765\u5e76\u67e5\u96c6\uff1f\u6211\u4e0d\u4f1a\u7528\u503c\u57df\uff1f\u6211\u6211\u4ec0\u4e48\u90fd\u4e0d\u4f1a\uff1f      \n\n\u7b14\u8005\u7684[\u601d\u8def](https://www.luogu.com.cn/blog/LOVENUTMEGFOREVER/ynoi-zuo-ti-sai-lu)\u5728\u8fd9\u91cc\uff0c\u9898\u89e3\u91cc\u9762\u5c31\u4e0d\u82b1\u5927\u91cf\u7b14\u58a8\u8d58\u5199\u8fd9\u4e9b\u4e1c\u897f\u4e86\u3002     \n\n\u9996\u5148\u8fd9\u9053\u9898\u662f\u4e2a\u5206\u5757\uff0c\u770b\u8fd9\u503c\u57df\u5927\u5c0f\uff0c\u5c31\u77e5\u9053\u80af\u5b9a\u5f97\u7528\u503c\u57df\u3002     \n\n(\u4e0b\u9762\u8bb0 $Maxv$ \u4e3a\u5f53\u524d\u5757\u7684\u6700\u5927\u503c)\n\n\u90a3\u4e48\u5148\u4e0d\u7ba1\u7a7a\u95f4\uff0c\u5f88\u660e\u663e\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u5f00 $O(1e5 + 1)$ \u7684\u6570\u7ec4\u6765\u5b58\u5f53\u524d\u5757\u4e0b\u6bcf\u4e2a\u503c\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e $1$ \u64cd\u4f5c\u6211\u4eec\u5c31\u628a $x + 1 \\sim Maxv$ \u5168\u90e8\u4e00\u4e00\u5bf9\u5e94\u5730\u63a5\u5230 $1 \\sim Maxv - x$ \uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u65f6\u95f4\u590d\u6742\u5ea6\u80af\u5b9a\u8981\u7206\u70b8\u3002      \n\n\u63a5\u7740\u8003\u8651\u5f71\u54cd\u5230\u6211\u4eec\u8fd9\u4e00\u4e2a\u64cd\u4f5c\u7684\u56e0\u7d20\uff0c\u5f88\u660e\u663e\u662f\u6211\u4eec\u7684\u533a\u95f4\u6700\u5927\u503c\u548c\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u4e00\u79cd\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u64cd\u4f5c\uff1a\u6bcf\u6b21\u628a\u6211\u4eec\u7684 $Maxv - x$ \uff0c\u5c1d\u8bd5\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f46\u662f\u6bd4\u5982\u8bf4\u6211\u4eec\u5c31\u4e00\u76f4\u67e5 $x = 1$ \u7684\u8bdd\u8fd9\u79cd\u505a\u6cd5\u5c31\u8fd8\u662f\u4f1a\u88ab\u5361\u6389\u3002    \n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e2a\u6bd4\u8f83\u5f3a\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\uff1a     \n\n- $2x \\leq Maxv$ \u6211\u4eec\u628a $[1 , x]$ \u7684\u5bf9\u5e94\u533a\u95f4\u5f80 $[x + 1 , 2x]$ \u4e0b\u9762\u63a5\uff0c\u5c31\u76f8\u5f53\u4e8e\u5c0f\u4e8e $x$ \u7684\u6570\u5168\u90e8\u52a0\u4e86\u4e2a $x$ ,\u73b0\u5728\u6240\u6709\u7684\u6570\u90fd\u9700\u8981\u51cf\u53bb\u4e00\u4e2a $x$ \uff0c\u5373\u628a\u533a\u95f4\u6574\u4f53\u5e73\u79fb\u4e86 $x$ \u3002\u6b64\u65f6\u7528\u4e00\u4e2a\u53d8\u91cf $tag$ \u8bb0\u5f55\u5f53\u524d\u533a\u95f4\u7684\u504f\u79fb\u91cf(\u4e5f\u5c31\u662f\u6b64\u65f6\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u65b9\u4fbf\u6211\u4eec\u5230\u65f6\u5019\u67e5\u8be2)\u3002    \n\n- $Maxv - 1 \\leq 2x$ \uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u540e\u9762\u7684\u6570\u5168\u90e8\u90fd\u7ed9\u5f80\u524d\u9762\u79fb\uff0c\u5373 $[x + 1 , Maxv]$ \u81f3 $[1 , Maxv - 1]$ \uff0c\u7136\u540e\u66f4\u65b0\u4e00\u4e0b $Maxv$ \u5373\u53ef\uff0c\u6bd5\u7adf\u6b64\u65f6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u81f3\u591a\u4e3a $O(x)$ \u3002      \n\n\u8fd9\u6837\u64cd\u4f5c\u7684\u76ee\u7684\uff0c\u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u6bcf\u67e5\u8be2\u4e00\u6b21\u5757\uff0c\u5c31\u628a\u5f53\u524d\u5757\u7684\u503c\u57df\u62c9\u5c0f\u4e86\u4e00\u70b9\uff0c\u5373\u6700\u5c0f\u503c\u53d8\u5927\uff0c\u6700\u5927\u503c\u53d8\u5c0f\uff0c\u7531\u4e8e\u6211\u4eec\u7684 $Minv \\leq Maxv$ \uff0c\u6240\u4ee5\u6700\u540e\u6bcf\u4e2a\u5757\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u9876\u4e86\u5929\u7684 $\\Theta(1e5 + 1)$\uff0c\u800c\u603b\u5171\u53ea\u6709 $\\sqrt n$ \u4e2a\u5757\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5c31\u662f $\\Theta(\\sqrt n100001)$\u3002     \n\n\u5bf9\u4e8e\u201c\u63a5\u201d\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u5e76\u67e5\u96c6\u5b9e\u73b0\u5373\u53ef\u3002     \n\n\u5bf9\u4e8e\u6574\u5757\u7684\u4fee\u6539\u5982\u540c\u4e0a\u8ff0\u3002     \n\n\u5bf9\u4e8e\u6574\u5757\u7684\u67e5\u8be2\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u5757\u518d\u5f00\u4e2a $siz_x$ \u6765\u8868\u793a\u5f53\u524d\u503c\u4e3a $x$ \u7684\u6570\u6709\u591a\u5c11\u4e2a\uff0c\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5e76\u67e5\u96c6\u6765\u5b9e\u73b0\u3002     \n\n\u5bf9\u4e8e\u96f6\u6563\u5757\u7684\u4fee\u6539\uff0c\u6211\u4eec\u53ea\u80fd\u65e0\u5948\u5730\u91cd\u6784\u4e00\u4e0b\uff0c\u53cd\u6b63\u4e5f\u5c31\u662f\u4e00\u4e2a $O(\\sqrt n)$\uff0c\u8fd9\u5c31\u662f\u5206\u5757\u7684\u65e0\u8d56\u4e4b\u5904\u3002     \n\n\u5bf9\u4e8e\u96f6\u6563\u5757\u7684\u67e5\u8be2\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5df2\u6709\u4fe1\u606f\u8fd8\u539f\u5f53\u524d\u4f4d\u7f6e\u7684\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt n)$\u3002      \n\n\u63a5\u7740\u5c31\u662f\u8fd9\u9053\u9898\u53c8\u5f88 $nb$ \u7684\u4e00\u4e2a\u4e1c\u897f\uff1a\u4f18\u5316\u7a7a\u95f4 $trick$ \u3002     \n\n\u5f88\u660e\u663e\uff0c\u770b\u5230\u8fd9\u9053\u9898\u7684\u7a7a\u95f4\uff0c\u4f30\u8ba1\u53ea\u80fd\u65e0\u8bdd\u53ef\u8bf4\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u4e5f\u6709\u4e00\u4e2a\u7a7a\u95f4\u4f18\u5316\u7684 $trick$ \u3002      \n\n\u770b\u770b\u7a7a\u95f4\uff0c\u5f88\u660e\u663e\u53ea\u80fd\u5bb9\u4e0b\u51e0\u4e2a\u5757\u7684\u5927\u5c0f\uff0c\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u601d\u8003\uff1a\u80fd\u5426\u8ba9\u6bcf\u4e2a\u5757\u5171\u7528\u4e00\u4e2a\u5757\u7684\u7a7a\u95f4\u5462\uff1f     \n\n\u79bb\u7ebf\uff0c\u7136\u540e\u5148\u679a\u4e3e\u5757\uff0c\u63a5\u7740\u679a\u4e3e\u8be2\u95ee\u770b\u54ea\u4e9b\u8be2\u95ee\u8981\u7528\u8fd9\u4e9b\u5757\uff0c\u7136\u540e\u7531\u4e8e\u8fd9\u9053\u9898\u7684\u7b54\u6848\u53ef\u4ee5\u7d2f\u52a0\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u628a\u5f53\u524d\u7684\u5757\u5904\u7406\u4e86\u7136\u540e\u5f80\u7b54\u6848\u91cc\u9762\u52a0\u5c31\u884c\u4e86\uff0c\u5b9e\u73b0\u4e86\u7a7a\u95f4\u7684\u538b\u7f29\u3002     \n\n\u4e2a\u4eba\u8ba4\u4e3a\u6b64\u9898\u6700\u7cbe\u534e\u7684\u70b9\uff1a     \n\n- \u7528\u538b\u7f29\u533a\u95f4\u7684\u65b9\u6cd5\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u644a\u3002     \n- \u7528\u79bb\u7ebf\u4ee5\u53ca\u7b54\u6848\u53ef\u7d2f\u52a0\u7684\u6027\u8d28\uff0c\u538b\u7f29\u7a7a\u95f4\u3002      \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int Len = 1e6 + 5 , MAXV = 5e5 + 6 , SQRT = 2e3;\ninline int read() {\n    char ch = getchar();\n    int x = 0;\n    while (ch < '0' || ch > '9') \n        ch = getchar();\n    while ('0' <= ch && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x;\n}\ninline void write(int x) {\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\nint n,m,a[Len],fa[Len],rt[Len],pos[Len],L[SQRT],R[SQRT],siz[Len],ans[MAXV],t,maxval,tag,to[Len];\nstruct node\n{\n    int opt,l,r,x;\n}q[Len];\ninline int findSet(int x){return fa[x] == x ? fa[x] : fa[x] = findSet(fa[x]);}\ninline void unionSet(int u,int v)\n{\n    if(rt[v]) fa[rt[u]] = rt[v];\n    else rt[v] = rt[u] , to[rt[v]] = v;\n    siz[v] += siz[u];\n    siz[u] = rt[u] = 0; \n}\ninline void build(int x)\n{\n    maxval = tag = 0;\n    for(register int i = L[x] ; i <= R[x] ; i ++)\n    {\n        maxval = max(maxval , a[i]);\n        if(rt[a[i]]) fa[i] = rt[a[i]];\n        else rt[a[i]] = fa[i] = i , to[i] = a[i];\n        siz[a[i]] ++;\n    }\n}\n\ninline void rebuild(int x,int l,int r,int Upd)\n{\n    for(register int i = L[x] ; i <= R[x] ; i ++) a[i] = to[findSet(i)] , rt[a[i]] = siz[a[i]] = 0 , a[i] -= tag;\n    for(register int i = L[x] ; i <= R[x] ; i ++) to[i] = 0;\n    l = max(l , L[x]) , r = min(r , R[x]);\n    for(register int i = l ; i <= r ; i ++) a[i] = a[i] - (a[i] > Upd) * Upd;\n    build(x);\n}\ninline void modify(int x)\n{\n    if(maxval - tag <= (x << 1))\n    {\n        for(register int i = tag + x + 1 ; i <= maxval ; i ++) if(rt[i]) unionSet(i , i - x);\n        maxval = min(maxval , tag + x);\n    }\n    else \n    {\n        for(register int i = tag + 1 ; i <= tag + x ; i ++) if(rt[i]) unionSet(i , i + x);\n        tag += x; \n    }\n}\ninline void query(int x,int qnow)\n{\n    int l = q[qnow].l , r = q[qnow].r;\n    if(tag + q[qnow].x > 1e5 + 1) return;\n    if(l <= L[x] && r >= R[x]) ans[qnow] += siz[tag + q[qnow].x];\n    else\n    {\n        l = max(l , L[x]) , r = min(r , R[x]); \n        for(int i = l ; i <= r ; i ++) if(to[findSet(i)] == tag + q[qnow].x) ans[qnow] ++;\n    } \n}\nsigned main()\n{\n    n = read() , m = read();\n    for(register int i = 1 ; i <= n ; i ++) a[i] = read();\n    for(register int i = 1 ; i <= m ; i ++) q[i].opt = read() , q[i].l = read() , q[i].r = read() , q[i].x = read();\n    t = sqrt(n);\n    for(register int i = 1 ; i <= t ; i ++) \n    {\n        L[i] = (i - 1) * t + 1;\n        R[i] = i * t; \n    }\n    R[t] = n;\n    for(register int i = 1 ; i <= t ; i ++)\n        for(register int j = L[i] ; j <= R[i] ; j ++) pos[j] = i;\n    for(register int i = 1 ; i <= t ; i ++)\n    {\n        memset(rt , 0 , sizeof rt);\n        memset(siz , 0 , sizeof siz);\n        build(i);\n        for(register int j = 1 ; j <= m ; j ++)\n        {\n            if(L[i] > q[j].r || R[i] < q[j].l) continue;\n            if(q[j].opt == 1)\n            {\n                if(q[j].l <= L[i] && q[j].r >= R[i]) modify(q[j].x);\n                else rebuild(i , q[j].l , q[j].r , q[j].x);\n            }\n            else query(i , j);\n        }\n    }\n    //for(register int i = 1 ; i <= m ; i ++) if(q[i].opt == 2) printf(\"%d\\n\",ans[i]);\n    for(register int i = 1 ; i <= m ; i ++) if(q[i].opt == 2) write(ans[i]) , putchar('\\n');\n    return 0;\n}\n```",
        "postTime": 1610112724,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4117 \u3010[Ynoi2018] \u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c\u3011"
    },
    {
        "content": "## P4117 \u3010[Ynoi2018]\u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c\u3011\n\n>\"\u7a81\u523a\u8d2f\u7a7f\u7684\u7b2c\u4e8c\u5206\u5757\"\n\n\u8c03\u4e86\u4e00\u5929\u7684\u7b2c\u4e8c\u5206\u5757\u6700\u540e\u53d1\u73b0\u662f memset \u7684\u95ee\u9898\u3002\u3002\u3002\uff08\u673a\u623f\u5de8\u4f6cnb\uff09\n\n\u5927\u81f4\u601d\u8def\u76f8\u4fe1\u7b2c\u4e00\u7bc7\u9898\u89e3\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u73c2\u4ee5\u518d\u4f5c\u9610\u8ff0\uff1a\n\n\u8003\u8651\u5206\u5757\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5927\u5c0f\u4e3a $\\sqrt{n}$ \u7684\u5757\uff0c\n\n\u5148\u8003\u8651\u4fee\u6539\uff1a\n\n\u8bbe\u6574\u4e2a\u5757\u7684\u6700\u5927\u503c\u4e3a maxn \uff0c\u4fee\u6539\u503c\u4e3a x \u73c2\u4ee5\u5206\u4e24\u79cd\u60c5\u51b5\u5904\u7406\uff1a\n\n1. $x*2<=maxn-tag$, \u5bf9\u4e8e\u8fd9\u4e2a\u5757\u91cc\u7684\u503c\uff0c\u5982\u9898\u610f\u4e00\u822c\uff0c\u5c06\u6240\u6709$\\geq x$\u7684\u6570\u90fd$-x$\uff0c\u4fee\u6539\u540e\u7684 $maxn$ \u4f9d\u65e7\u4e0d\u53d8\n\n2. $x*2>maxn-tag$  \u5bf9\u4e8e\u6574\u4e2a\u5757\u7684\u64cd\u4f5c\u5176\u5b9e\u4e5f\u5c31\u7b49\u4ef7\u4e8e\u5c06\u6240\u6709$\\leq x$\u7684$+x$,\u518d\u5c06\u6574\u4e2a\u533a\u95f4\u6253\u4e0a\u4e00\u4e2a$-x$\u7684 $tag$ \n\n\u518d\u7528\u4e00\u4e2a\u5e76\u67e5\u96c6\u7ef4\u62a4\u503c\u57df\uff0c\n\n\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u503c\u4e0b\u7684$size$\uff0c\u4e0e\u8fd9\u4e2a\u503c\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e$st$\uff0c\u8fd8\u6709\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u6240\u5bf9\u5e94\u7684\u6620\u5c04 $rev$ \n\n\n\u64cd\u4f5c1\u4e5f\u5c31\u76f8\u5f53\u4e8e\u5c06$a\\in(tag+x,maxn]$\u4e2d\u7684\u6bcf\u4e2a\u6570\u90fd\u4e0e$a-x$\u5408\u5e76\n\n\u64cd\u4f5c2\u4e5f\u5c31\u76f8\u5f53\u4e8e\u5148\u5c06$a \\in [tag+1,x+tag]$ \u4e0e$a+x$ \u5408\u5e76,\u518d\u6253\u4e0a\u4e00\u4e2a $-x$ \u7684 $tag$\n\n\n\u5bf9\u4e8e\u4e0d\u5c5e\u4e8e\u6574\u5757\u7684\u64cd\u4f5c\u76f4\u63a5\u66b4\u529b\u91cd\u65b0\u6784\u9020\u5c31\u597d\u4e86\n\n\u67e5\u8be2\u7684\u65f6\u5019\u6574\u5757\u76f4\u63a5\u67e5\t$x+tag$ \u7684 $size$ \n\n\u4e0d\u5c5e\u4e8e\u7684\u76f4\u63a5\u66b4\u529b\u6c42\u89e3\u5c31\u597d\u4e86\n\n\u7136\u540e\u51fa\u9898\u4eba\u7684\u9898\u89e3\u4e2d\uff0c[\u6709\u4e00\u4e2a\u9010\u5757\u5904\u7406\u7684trick](https://olddrivertree.blog.uoj.ac/blog/4715)\n\n\u5927\u81f4\u5c31\u662f\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u5757\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u7684\u8d21\u732e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230$O(N+M)$\n\n\u8fd9\u4e2a\u4f18\u5316\u7684\u5f88\u591a\u524d\u63d0\u73c2\u4ee5\u770b[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/sssssm/solution-p4117)\n\n\u8fd8\u6709\u8bb0\u4f4f\u6bcf\u4e00\u6b21\u7edf\u8ba1\u7684\u65f6\u5019\u8bb0\u5f97\u6e05\u7a7a\u5e76\u67e5\u96c6\u4e2d\u7684\u4fe1\u606f\uff0c\u4f46\u662f\u91cd\u6784\u7684\u65f6\u5019\u4e0d\u7528\u6e05\u7a7a\uff0c~~\uff08\u6211\u7684\u60e8\u70c8\u8c03\u8bd5\u8bb0\u5f55\uff09~~\n\n\u4e11\u964b\u7684\u4ee3\u7801~~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n   int x=0,f=1; char ch=getchar();\n  while(!isdigit(ch)){if(ch=='-'){f=-1;}ch=getchar();}\n  while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch-'0');ch=getchar();}\n  return x*f;\n}\ninline void write( int x){\n  if(x==0){putchar(48);putchar('\\n');return;}int len=0,dg[20];\n  while(x>0){dg[++len]=x%10;x/=10;}\n  for( int i=len;i>=1;i--) putchar(dg[i]+48);\n  putchar('\\n');\n}\nconst int MAXN=1e6+5,N=1e6+5,SQRTN=1e4+5,M=1e6+5;;\nint n,m,L[MAXN],R[MAXN],a[N],ans[M];\nint st[MAXN],fa[MAXN],size[MAXN],rev[MAXN],maxn,tag_dec;\nint ql[M],qr[M],qx[M],op[M],len;\ninline int get(int x){return fa[x]==x ? x : fa[x]=get(fa[x]);}\ninline void merge(int x,int y){\n  if(st[y]){fa[st[x]]=st[y];}\n  else{st[y]=st[x];rev[st[y]]=y;}\n  size[y]+=size[x];st[x]=size[x]=0;\n}\ninline void pre_build(){\n  len=sqrt(n);\n  for( int i=1;i<=len;++i){L[i]=(i-1)*len+1;R[i]=i*len;}\n  if(R[len]<n){len++;L[len]=R[len-1]+1;R[len]=n;}\n}\ninline void build_each(int num){\n  maxn=0,tag_dec=0;\n  for( int i=L[num];i<=R[num];++i){\n    maxn=max(maxn,a[i]);\n    if(st[a[i]]){fa[i]=st[a[i]];}\n    else{st[a[i]]=fa[i]=i;rev[i]=a[i];}\n    size[a[i]]++;\n  }\n}\ninline void modify(int x){\n  if(maxn-tag_dec>=x*2){\n    for( int i=tag_dec+1;i<=tag_dec+x;++i){if(st[i]){merge(i,x+i);}}\n    tag_dec+=x;\n  }\n  else{\n    for( int i=x+tag_dec+1;i<=maxn;++i){if(st[i]){merge(i,i-x);}}\n    maxn=min(maxn,tag_dec+x);\n  }\n}\ninline void rebuild(int num,int queryl,int queryr,int x){\n  for( int i=L[num];i<=R[num];++i){\n    a[i]=rev[get(i)];\n    st[a[i]]=size[a[i]]=0;\n    a[i]-=tag_dec;\n  }\n  for( int i=L[num];i<=R[num];++i){rev[i]=0;}\n  int lim=min(queryr,R[num]);\n  int liml=max(L[num],queryl);\n  for( int i=liml;i<=lim;++i){a[i]=a[i]-(a[i]>x)*x;}\n  build_each(num);\n}\ninline void query(int num,int querynum){\n  int x=qx[querynum],queryr=qr[querynum],queryl=ql[querynum];\n  if(x+tag_dec>5e5){return;}\n  if(queryl<=L[num]&&R[num]<=queryr){ans[querynum]+=size[x+tag_dec];}\n  else{\n    int lim=min(queryr,R[num]);\n    int liml=max(queryl,L[num]);\n    for(int i=liml;i<=lim;++i){if(rev[get(i)]==x+tag_dec){ans[querynum]++;}}\n  }\n}\ninline void check(){puts(\"??????woc?????\");}\nint main(){\n  n=read(),m=read();\n  for( int i=1;i<=n;++i){a[i]=read();}\n  pre_build();\n  for( int i=1;i<=m;++i){op[i]=read(),ql[i]=read(),qr[i]=read(),qx[i]=read();}\n  for( int i=1;i<=len;++i){\n    memset(st,0,sizeof(st));\n    memset(size,0,sizeof(size));\n    build_each(i);\n    for( int j=1;j<=m;++j){\n      if(qr[j]<L[i]||ql[j]>R[i]){continue;}\n      if(op[j]==1){\n        if(L[i]>=ql[j]&&R[i]<=qr[j]){modify(qx[j]);}\n        else{rebuild(i,ql[j],qr[j],qx[j]);}\n      }\n      else{query(i,j);}\n    }\n  }\n  for(int i=1;i<=m;++i){if(op[i]==2){write(ans[i]);}}\n  return 0;\n}\n\n\n```\n\n",
        "postTime": 1604584400,
        "uid": 67621,
        "name": "NuoCarter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4117 \u3010[Ynoi2018]\u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c\u3011"
    },
    {
        "content": "~~\u4e3a\u4ec0\u4e48\u4f60\u4eec\u90fd\u7528\u5e76\u67e5\u96c6\u554aqwq~~\n\n\u9996\u5148\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u5757\u7684\u72b6\u6001\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u9010\u5757\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u505a\u5230 $O(n+m)$ \u7a7a\u95f4\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5757\uff0c\u5bf9\u6bcf\u4e2a $a_i$ \u5f00\u4e00\u4e2a\u94fe\u8868\uff0c\u8bb0\u5f55\u503c\u4e3a $a_i$ \u7684\u6570\u7684\u4f4d\u7f6e\u3002\u5bf9\u4e8e\u5757\u5185\u4fee\u6539\uff0c\u628a $a_i$ \u8fd8\u539f\u540e\u66b4\u529b\u91cd\u6784\uff1b\u5bf9\u4e8e\u5168\u5c40\u4fee\u6539\uff0c\u8003\u8651\u8bb0\u5f55 $a_i$ \u7684\u6700\u5927\u503c $maxn$\uff0c\u82e5 $2x\\ge maxn$\uff0c\u5219\u628a $[x+1,maxn]$ \u4e0a\u7684\u94fe\u8868\u5408\u5e76\u5230 $[1,maxn-x]$ \u4e0a\uff1b\u82e5 $2x<maxn$\uff0c\u5219\u628a $[1,x]$ \u5408\u5e76\u5230 $[x+1,2x]$\u4e0a\uff0c\u5168\u5c40\u51cf $x$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u6bcf\u6b21\u5408\u5e76\u90fd\u610f\u5473\u7740\u5408\u6cd5\u503c\u57df\u53d8\u5c0f\uff0c\u56e0\u6b64\u6bcf\u5757\u7684\u5408\u5e76\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7\u503c\u57df\u5927\u5c0f\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O((n+m)\\sqrt{n})$\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff0c\u6574\u5757\u7684\u76f4\u63a5\u8f93\u51fa\u76f8\u5e94\u7684\u94fe\u8868\u5927\u5c0f\uff0c\u5757\u5185\u7684\u628a\u76f8\u5e94\u94fe\u8868\u626b\u63cf\u4e00\u904d\u5373\u53ef\uff0c\u4e0d\u7528\u91cd\u6784\u3002\n\ncode\uff1a\n\n```cpp\n#include<cstdio>\n#define For(i,A,B) for(i=(A);i<=(B);++i)\nconst int N=500050;\nconst short S=750;\nconst int BUF=1<<23;\nchar rB[BUF],*rS,*rT,wB[BUF+50],*wT=wB;\ninline char gc(){return rS==rT&&(rT=(rS=rB)+fread(rB,1,BUF,stdin),rS==rT)?EOF:*rS++;}\ninline void flush(){fwrite(wB,1,wT-wB,stdout);wT=wB;}\ninline int rd(){\n    char c=gc();\n    while(c<48||c>57)c=gc();\n    int x=c&15;\n    for(c=gc();c>=48&&c<=57;c=gc())x=x*10+(c&15);\n    return x;\n}\nshort buf[15];\ninline void wt(int x){\n    short l=-1;\n    if(wT-wB>BUF)flush();\n    while(x>9){\n        buf[++l]=x%10;\n        x/=10;\n    }\n    *wT++=x|48;\n    while(l>=0)*wT++=buf[l--]|48;\n    *wT++='\\n';\n}\nint a[N],opt[N],ql[N],qr[N],qx[N],ps[S+5],st[N+S],sl=-1,s[N],mxn,decv;\n//st \u7528\u4e8e\u8bb0\u5f55\u5386\u53f2\u4e0a\u7684\u975e\u7a7a\u94fe\u8868\uff08\u4e5f\u5c31\u662f\u91cd\u6784\u65f6\u8981\u6e05\u7a7a\u7684\u94fe\u8868\uff09\uff0c\u5b83\u7684\u5927\u5c0f\u548c\u63d2\u5165\u4e0e\u5408\u5e76\u7684\u603b\u6b21\u6570\u7b49\u89c4\u6a21\n//\u6ce8\u610f mxn \u4fdd\u5b58\u7684\u662f\u771f\u5b9e\u7684\u6700\u5927\u503c\nshort nxt[S+5],bg[N],ed[N],cnt[N];\ninline int Min(int a,int b){return a<b?a:b;}\ninline int Max(int a,int b){return a>b?a:b;}\ninline short bel(int x){return (x-1)/S+1;}\ninline void ins(int x,short p){\n\tif(!bg[x]){\n\t\tst[++sl]=x;\n\t\tbg[x]=ed[x]=p;\n\t\tcnt[x]=1;\n\t}else{\n\t\tnxt[ed[x]]=p;\n\t\ted[x]=p;\n\t\t++cnt[x];\n\t}\n}\ninline void merg(int x,int y){\n\tif(!bg[x]){\n\t\tst[++sl]=x;\n\t\tbg[x]=bg[y];ed[x]=ed[y];\n\t\tcnt[x]=cnt[y];\n\t}else{\n\t\tnxt[ed[x]]=bg[y];\n\t\ted[x]=ed[y];\n\t\tcnt[x]+=cnt[y];\n\t}\n\tbg[y]=ed[y]=cnt[y]=0;\n}\ninline void clr(int x){\n\tfor(short i=bg[x],t=nxt[i];i;t=nxt[i=t]){\n\t\ta[ps[i]]=x-decv;\n\t\tnxt[i]=0;\n\t}\n\tbg[x]=ed[x]=cnt[x]=0;\n}\ninline void build(int L,int R){  //\u91cd\u6784\n\tint i;\n\tmxn=0;\n\tFor(i,L,R){\n\t\tins(a[i],i-L+1);\n\t\tmxn=Max(mxn,a[i]);\n\t}\n}\ninline void back(){  //\u62c6\u94fe\u8868\n\twhile(sl>=0){clr(st[sl--]);}\n\tdecv=0;\n}\nint main(){\n\tint n=rd(),m=rd(),q=0,i,j,L,R;\n\tshort k,t,tot=bel(n);\n\tFor(i,1,n)a[i]=rd();\n\tFor(i,1,m){\n\t\topt[i]=rd();ql[i]=rd();qr[i]=rd();qx[i]=rd();\n\t\topt[i]=opt[i]==1?0:++q;\n\t}\n\tFor(k,1,tot){\n\t\tL=(int)(k-1)*S+1;R=Min((int)k*S,n);\n\t\tFor(i,L,R)ps[i-L+1]=i;\n\t\tbuild(L,R);\n\t\tFor(i,1,m){\n\t\t\tif(ql[i]>R||qr[i]<L||mxn<qx[i])continue;\n\t\t\tif(opt[i])if(bel(ql[i])==k||bel(qr[i])==k)for(t=bg[qx[i]+decv];t;t=nxt[t])if(ps[t]>=ql[i]&&ps[t]<=qr[i])++s[opt[i]];  //\u5757\u5185\u67e5\u8be2\n\t\t\telse;\n\t\t\telse s[opt[i]]+=cnt[qx[i]+decv];  //\u6574\u5757\u67e5\u8be2\n\t\t\telse if(bel(ql[i])==k||bel(qr[i])==k){  //\u5757\u5185\u4fee\u6539\n\t\t\t\tback();\n\t\t\t\tFor(j,Max(L,ql[i]),Min(R,qr[i]))if(a[j]>qx[i])a[j]-=qx[i];\n\t\t\t\tbuild(L,R);\n\t\t\t}else if(mxn<=qx[i]*2){\n\t\t\t\tFor(j,qx[i]+decv+1,mxn+decv)if(bg[j])merg(j-qx[i],j);\n\t\t\t\tmxn=qx[i];  //\u5176\u5b9e mxn \u4e0d\u4e00\u5b9a\u662f qx[i]\uff0c\u4f46\u662f\u53ea\u8981\u5b83\u548c\u503c\u57df\u4e00\u8d77\u7f29\u5c0f\u5c31\u4e0d\u4f1a\u5f71\u54cd\u590d\u6742\u5ea6\n\t\t\t}else{\n\t\t\t\tFor(j,1+decv,qx[i]+decv)if(bg[j])merg(j+qx[i],j);\n\t\t\t\tdecv+=qx[i];\n\t\t\t\tmxn-=qx[i];\n\t\t\t}\n//\u6574\u5757\u4fee\u6539\uff0c\u4e24\u7c7b\u60c5\u51b5\u5982\u4e0a\u6240\u8ff0\n\t\t}\n\t\tback();\n\t}\n\tFor(i,1,q)wt(s[i]);\n\tflush();\n\treturn 0;\n}\n```",
        "postTime": 1586570307,
        "uid": 57926,
        "name": "Thinking",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4117 \u3010[Ynoi2018]\u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c\u3011"
    },
    {
        "content": "[$\\texttt{link}$](https://www.luogu.com.cn/problem/P4117)\n\nupdate on 2021.11.12 \u4fee\u6b63\u4e86\u4e00\u4e9b\u9519\u8bef\u3002\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c$m$ \u6b21\u64cd\u4f5c\uff1a  \n+ \u5c06 $a_{l,\\cdots,r}$ \u4e2d\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\u3002  \n+ \u67e5\u8be2\u533a\u95f4 $a_{l,\\cdots,r}$ \u4e2d\u7b49\u4e8e $x$ \u7684\u6570\u7684\u4e2a\u6570\u3002  \n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le n\\le10^5,1\\le m\\le5\\times 10^5,0\\le a_i,x\\le10^5$\n\n## \u9898\u89e3 \n\n\u8bbe $w$ \u4e3a\u503c\u57df\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u5185\uff0c\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6700\u5927\u503c $maxn$ \u548c\u4e00\u4e2a\u533a\u95f4\u51cf\u7684\u6807\u8bb0\u3002  \n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u6563\u5757\u76f4\u63a5\u66b4\u529b\u91cd\u6784\u3002  \n\n\u82e5\u4fee\u6539\u4e00\u4e2a\u6574\u5757\uff0c\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff0c\u8bbe\u66f4\u65b0\u6240\u6709\u503c\u4e3a $v$ \u7684\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\text{ds})$\uff1a  \n\n- \u82e5 $maxn\\le 2x$\uff0c\u628a\u5757\u5185\u6240\u6709\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\u3002\u6b64\u65f6\u9700\u66f4\u65b0\u7684\u533a\u95f4\u4e3a $\\left[x+1,maxn\\right]$\uff0c\u6b64\u65f6\u7528 $O(maxn-x)\\times O(\\text{ds})$ \u7684\u4ee3\u4ef7\u4f7f $maxn$ \u51cf\u5c11\u4e86 $maxn-x$\u3002\n\n- \u82e5 $maxn>2x$\uff0c\u628a\u5757\u5185\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e $x$ \u7684\u6570\u52a0\u4e0a $x$\uff0c\u518d\u6253\u4e0a\u533a\u95f4\u51cf $x$ \u7684\u6807\u8bb0\uff0c\u9700\u66f4\u65b0\u7684\u533a\u95f4\u4e3a $\\left[1,x\\right]$\uff0c\u6b64\u65f6\u7528 $O(x)\\times O(\\text{ds})$ \u7684\u4ee3\u4ef7\u4f7f $maxn$ \u7684\u4ee3\u4ef7\u51cf\u5c11\u4e86 $x$\u3002  \n\n\u9996\u5148\u6240\u6709\u7684\u503c\u4f1a\u8d8a\u6765\u8d8a\u5c0f\uff0c\u53c8 $maxn$ \u6bd4 $2x$ \u5927\u5c31\u4f1a\u6253\u6807\u8bb0\uff0c\u8fd9\u5c31\u4fdd\u8bc1\u4e86 $maxn$ \u4e0d\u4f1a\u6ea2\u51fa\uff0c\u6bcf\u4e2a\u503c\u6bcf\u4e2a\u5757\u6700\u591a\u4f1a\u4fee\u6539 $w$ \u6b21\uff0c\u590d\u6742\u5ea6\u5373\u4e3a $O(w)$\u3002\n\n\u6563\u5757\u67e5\u8be2\u66b4\u529b\u7edf\u8ba1\uff0c\u6574\u5757\u67e5\u8be2\u8fd4\u56de\u5757\u5185\u503c $x$ \u8bb0\u5f55\u7684\u4e2a\u6570\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sqrt{n})$\u3002  \n\n\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\u5373\u4e3a $O(w\\sqrt{n})$\uff0c$w$ \u4e3a\u503c\u57df\u3002\n\n\u8003\u8651\u600e\u4e48\u66f4\u65b0\u6bcf\u4e2a\u503c\u5bf9\u5e94\u7684\u4e00\u5806\u6570\u3002  \n\n\u6bd4\u8f83\u597d\u5199\u7684\u5199\u6cd5\u662f\u5e76\u67e5\u96c6\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5176\u503c\u4e3a $v$ \u7684\u5e76\u67e5\u96c6\uff0c\u7ef4\u62a4\u4e00\u4e2a $rt$\uff0c\u8868\u793a\u5e8f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u503c\u4e3a $v$ \u7684\u6570\u7684\u4e0b\u6807\uff0c\u5bf9\u4e8e\u7b49\u4e8e\u540c\u4e00\u4e2a\u503c $x$ \u7684\u6570\uff0c\u5219\u5168\u5e76\u5230 $fa_{rt_x}$ \u4e0a\u3002  \n\n\u5728\u5408\u5e76\u7684\u65f6\u5019\uff0c\u8bbe\u628a\u503c\u4e3a $x$ \u7684\u5e76\u67e5\u96c6\u5408\u5e76\u5230\u503c\u4e3a $y$ \u7684\u5e76\u67e5\u96c6\u4e0a\u3002  \n\n- \u82e5 $rt_y$ \u4e0d\u5b58\u5728\uff0c\u5219\u628a $rt_x$ \u5168\u653e\u5230 $rt_y$ \u4e0a\uff0c\u5e76\u4f7f $rt_y$ \u6307\u5411 $y$\u3002  \n- \u82e5 $rt_x$ \u5b58\u5728\uff0c\u5219\u76f4\u63a5\u5408\u5e76 $rt_x$ \u548c $rt_y$ \u4e24\u4e2a\u5e76\u67e5\u96c6\u3002  \n\n\u7528\u8fd9\u79cd\u5e76\u67e5\u96c6\u53ef\u628a\u7ef4\u62a4\u6bcf\u4e2a\u5757\u7684\u590d\u6742\u5ea6\u4f18\u5316\u5230\u4e86 $O(\\alpha(n))\\approx O(1)$\uff0c\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O((n+m)\\sqrt{n})$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(w\\sqrt{n})$\u3002  \n\n\n\u6b64\u9898\u5361\u4e86 $O(w\\sqrt{n})$ \u7a7a\u95f4\u3002  \n\n\u6709\u4e2a\u9010\u5757\u5904\u7406\u7684 trick\uff0c\u5373\u79bb\u7ebf\u4e0b\u6765\u4e00\u5757\u4e00\u5757\u5904\u7406\uff0c\u53ef\u628a\u7a7a\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230 $O(w)$\u3002  \n\n\u7136\u800c\u6211\u5e38\u6570\u5927\uff01\uff01\uff01\uff011 \u8fd8\u8981\u5361\u5e38\u624d\u80fd\u8fc7\u3002\n\n\u4e5f\u8bb8\u53ef\u4ee5\u52a0\u542f\u53d1\u5f0f\u5408\u5e76\uff1f\u4f46\u6211\u4e0d\u4f1a\u5199\uff0c\u800c\u4e14\u91cd\u6784\u6b21\u6570\u8f83\u591a\uff0c\u542f\u53d1\u5f0f\u5408\u5e76\u4f18\u5316\u610f\u4e49\u4e0d\u5927\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace IO {\n\t#if ONLINE_JUDGE\n\t#define getc() (IS == IT && (IT = (IS = ibuf) + fread(ibuf, 1, IL, stdin), IS == IT) ? EOF : *IS++)\n\t#else\n\t#define getc() getchar()\n\t#endif\n\tconst int IL = 1 << 20, OL = 1 << 21;\n\tint olen = 0; \n\tchar ibuf[IL], *IS = ibuf, *IT = ibuf, obuf[OL];\n\tinline int read() {\n\t\tregister char ch = getc(); register int f = 1, x = 0;\n\t\twhile(!isdigit(ch)) { if(ch == '-') f = -1; ch = getc(); }\n\t\twhile(isdigit(ch)) x = x * 10 + ch - 48, ch = getc();\n\t\treturn x * f;\n\t}\n\tinline void flush() { fwrite(obuf, 1, olen, stdout); olen = 0; }\n\tinline void putc(register char ch) { obuf[olen++] = ch; }\n\ttemplate<class T>\n\tinline void write(register T x) {\n\t\tif(x < 0) obuf[olen++] = '-', x = -x;\n\t\tif(x > 9) write(x / 10);\n\t\tobuf[olen++] = x % 10 + 48;\n\t}\n} using namespace IO;\nconst int N = 1e6 + 10, M = 5e5 + 10, W = 1e5 + 10;\nint n, m;\nint a[N], val[N], s, t, fa[N], siz[N], rt[W], mx, tag, L;\nstruct ask {\n\tint opt, l, r, x, ans;\n}q[M];\ninline int find(int x) {\n\tif(fa[x] == x)\n\t\treturn x;\n\treturn fa[x] = find(fa[x]);\n}\ninline void init() { L = sqrt(n); }\ninline void build() {\n\tmx = tag = 0;\n\tfor(register int i = s; i <= t; i++) {\n\t\tmx = max(mx, a[i]);\n\t\tif(!rt[a[i]])\n\t\t\tfa[i] = rt[a[i]] = i, val[i] = a[i];\n\t\telse\n\t\t\tfa[i] = rt[a[i]];\n\t\tsiz[a[i]]++;\n\t}\n}\ninline void merge(int x, int y)  {\n\tif(rt[y]) fa[rt[x]] = rt[y];\n\telse {\n\t\trt[y] = rt[x];\n\t\tval[rt[y]] = y;\n\t}\n\tsiz[y] += siz[x];\n\trt[x] = siz[x] = 0;\n}\ninline void total_update(int x) {\n\tif(mx - tag > (x << 1)) {\n\t\tfor(register int i = tag + 1; i <= tag + x; i++)\n\t\t\tif(rt[i])\n\t\t\t\tmerge(i, i + x);\n\t\ttag += x;\n\t}\n\telse {\n\t\tfor(register int i = mx; i > tag + x; i--)\n\t\t\tif(rt[i])\n\t\t\t\tmerge(i, i - x);\n\t\tmx = min(mx, tag + x);\n\t}\n}\ninline void part_update(int l, int r, int x) {\n\tfor(register int i = s; i <= t; i++) {\n\t\ta[i] = val[find(i)];\n\t\trt[a[i]] = siz[a[i]] = 0;\n\t\ta[i] -= tag;\n\t}\n\tint nl = max(s, l), nr = min(t, r);\n\tfor(register int i = s; i <= t; i++)\n\t\tval[i] = fa[i] = 0;\n\tfor(int i = nl; i <= nr; i++)\n\t\ta[i] -= x * (a[i] > x);\n\tbuild();\n} \ninline void query(int num) {\n\tif(q[num].l <= s && t <= q[num].r) \n\t\tq[num].ans += siz[q[num].x + tag];\n\telse {\n\t\tint nl = max(s, q[num].l), nr = min(t, q[num].r);\n\t\tfor(register int i = nl; i <= nr; i++)\n\t\t\tif(val[find(i)] - tag == q[num].x)\n\t\t\t\tq[num].ans++; \n\t}\n}\nint main() {\n\tn = read(), m = read();\n\tfor(register int i = 1; i <= n; i++) \n\t\ta[i] = read();\n\tfor(register int i = 1; i <= m; i++) {\n\t\tq[i].opt = read(), q[i].l = read(), q[i].r = read(), q[i].x = read();\n\t}\n\tL = sqrt(n);\n\tfor(register int now = 1; now <= n; now += L) {\n\t\tmemset(siz, 0, sizeof(siz));\n\t\tmemset(rt, 0, sizeof(rt));\n\t\ts = now, t = min(n, now + L - 1);\n\t\tbuild();\n\t\tfor(register int i = 1; i <= m; i++) {\n\t\t\tif(t < q[i].l || s > q[i].r) \n\t\t\t\tcontinue;\n\t\t\tif(q[i].opt == 1) {\n\t\t\t\tif(q[i].l <= s && q[i].r >= t)\n\t\t\t\t\ttotal_update(q[i].x);\n\t\t\t\telse\n\t\t\t\t\tpart_update(q[i].l, q[i].r, q[i].x);\n\t\t\t}\n\t\t\telse if(tag + q[i].x <= M) \n\t\t\t\tquery(i);\n\t\t}\n\t}\n\tfor(register int i = 1; i <= m; i++)\n\t\tif(q[i].opt == 2)\n\t\t\twrite(q[i].ans), putc('\\n');\n\tflush();\n\treturn 0;\n} \n```",
        "postTime": 1614057938,
        "uid": 365107,
        "name": "Terac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4117 [Ynoi2018] \u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c"
    },
    {
        "content": "## [My Blog](https://yzxoi.top/archives/1736)\n\n## Description\n\n> \u9898\u76ee\u94fe\u63a5\uff1a[P4117](https://www.luogu.com.cn/problem/P4117)\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u6709 $m$ \u4e2a\u64cd\u4f5c\uff1a\n\n1. \u533a\u95f4 $[l,r]$ \u4e2d\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\u3002\n2. \u67e5\u8be2\u533a\u95f4 $[l,r]$ \u4e2d $x$ \u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n$1\\leq n \\leq 10^6,1\\leq m \\leq 5\\times 10^5,1\\leq l \\leq r\\leq n,0\\leq a_i,x\\leq 10^5+1$\n\n## Solution\n\n\u6ce8\u610f\u5230\u6570\u503c\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5229\u7528\u503c\u57df\u3002\n\n\u9996\u5148\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e2a\u5757\u7684\u6700\u5927\u503c\u3002\n\n\u5982\u679c $Max\\leq x\\times 2$\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u628a\u6240\u6709\u5927\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\uff0c\u590d\u6742\u5ea6\u4e3a $O(x)$\u3002\n\n\u5982\u679c $Max>x\\times 2$\uff0c\u90a3\u4e48\u6211\u4eec\u53cd\u8fc7\u6765\uff0c\u628a\u5c0f\u4e8e $x$ \u7684\u6570\u52a0\u4e0a $x$\uff0c\u518d\u6253\u4e0a\u5757\u5185\u5168\u5c40\u51cf $x$ \u7684\u6807\u8bb0\uff0c\u590d\u6742\u5ea6\u4e3a $O(Max-x)$\u3002\n\n\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a $O(\\sqrt{N}V)$\u3002\n\n\u8003\u8651\u5982\u4f55\u5feb\u901f\u7ef4\u62a4\u5408\u5e76\u3001\u52a8\u6001\u67e5\u8be2\u5355\u70b9\u3001\u4e2a\u6570\u67e5\u8be2\uff0c~~\u5f88\u663e\u7136~~\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u3002\n\n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sqrt{N}V\\alpha(N))$\u3002\n\n\u6ce8\u610f\u5230\u6b64\u9898\u7684\u7a7a\u95f4\u53ea\u6709 64MB\u3002\n\n\u6240\u4ee5\u8003\u8651\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u628a\u6bcf\u4e2a\u64cd\u4f5c\u62c6\u5206\u5230\u6bcf\u4e2a\u5757\u4e2d\u5373\u53ef\u3002\n\n\u7136\u540e\u7a0d\u5fae\u5361\u5361\u5e38\u5c31\u8fc7\u4e86\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\n#define Tp template<typename Ty>\n#define Ts template<typename Ty,typename... Ar>\n#define W while\n#define I inline\n#define RI register int\n#define LL long long\n#define Cn const\n#define CI Cn int&\n#define gc getchar\n#define D isdigit(c=gc())\n#define pc(c) putchar((c))\n#define min(x,y) ((x)<(y)?(x):(y))\n#define max(x,y) ((x)>(y)?(x):(y))\nusing namespace std;\nnamespace Debug{\n\tTp I void _debug(Cn char* f,Ty t){cerr<<f<<'='<<t<<endl;}\n\tTs I void _debug(Cn char* f,Ty x,Ar... y){W(*f!=',') cerr<<*f++;cerr<<'='<<x<<\",\";_debug(f+1,y...);}\n\tTp ostream& operator<<(ostream& os,Cn vector<Ty>& V){os<<\"[\";for(Cn auto& vv:V) os<<vv<<\",\";os<<\"]\";return os;}\n\t#define gdb(...) _debug(#__VA_ARGS__,__VA_ARGS__)\n}using namespace Debug;\nnamespace FastIO{\n\tTp I void read(Ty& x){char c;int f=1;x=0;W(!D) f=c^'-'?1:-1;W(x=(x<<3)+(x<<1)+(c&15),D);x*=f;}\n\tTs I void read(Ty& x,Ar&... y){read(x),read(y...);}\n\tTp I void write(Ty x){x<0&&(pc('-'),x=-x,0),x<10?(pc(x+'0'),0):(write(x/10),pc(x%10+'0'),0);}\n\tTp I void writeln(Cn Ty& x){write(x),pc('\\n');}\n}using namespace FastIO;\nCn int N=1e6,S=1272,M=N/S,V=1e5+1,QQ=5e5;\nint n,m,b[M+5][S+5],sz[M+5],tot,F[S+5],G[S+5],H[V+5],mx,T,Ans[QQ+5];\nstruct Que{int opt,l,r,x,id;}q[QQ+5];\nI int find(CI k,CI x){return x==F[x]?x:F[x]=find(k,F[x]);}\nI void Z(CI k,CI l,CI r,CI x){\n\tRI i;for(i=0;i<sz[k];i++) G[H[b[k][i]=b[k][find(k,i)]]]=0;for(mx=0,i=0;i<sz[k];i++) H[b[k][i]]=F[i]=-1,b[k][i]-=T;\n\tfor(i=l;i<=r;i++) b[k][i]>x&&(b[k][i]-=x);for(T=0,i=0;i<sz[k];i++) mx=max(mx,b[k][i]),~H[b[k][i]]?++G[F[i]=H[b[k][i]]]:G[F[i]=H[b[k][i]]=i]=1;\n}\nI void Merge(CI k,CI x,CI y){~H[y]&&(~H[x]?G[F[H[y]]=H[x]]+=G[H[y]],G[H[y]]=0:b[k][H[x]=H[y]]=x,H[y]=-1);}\nI void U(RI l,RI r,CI x){\n\tRI i,j,bL=l/S+1,bR=r/S+1;if(l-=(bL-1)*S,r-=(bR-1)*S,l||r<sz[bL]-1) return Z(bL,l,r,x);//\u6563\u5757\u66b4\u529b\n\tif(2*x>mx-T){for(j=T+x+1;j<=mx;j++) Merge(bL,j-x,j);mx=min(mx,T+x);}\n\telse{for(j=T+x;j>=T+1;j--) Merge(bL,j+x,j);T+=x;}//\u5206\u4e24\u7c7b\u60c5\u51b5\u8ba8\u8bba\n}\nI int Y(CI k,CI l,CI r,CI x){RI X=0,i;for(i=l;i<=r;i++) b[k][find(k,i)]==T+x&&++X;return X;}\nI int Q(RI l,RI r,CI x){\n\tRI i,bL=l/S+1,bR=r/S+1,X=0;if(l-=(bL-1)*S,r-=(bR-1)*S,l||r<sz[bL]-1) return Y(bL,l,r,x);//\u6563\u5757\u66b4\u529b\n\tfor(i=bL;i<=bR;i++) T+x<=V&&~H[T+x]&&(X+=G[H[T+x]]);return X;//\u76f4\u63a5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\n}\nint main(){\n\tRI i,j,p,k,opt,l,r,x;for(read(n,m),i=0;i<n;i++) read(x),b[i/S+1][sz[i/S+1]++]=x;memset(F,-1,sizeof(F)),memset(H,-1,sizeof(H));\n\tfor(i=1;i<=m;i++) read(q[i].opt,q[i].l,q[i].r,q[i].x),q[i].l--,q[i].r--,q[i].id=i;for(i=1;i<=(n-1)/S+1;i++){\n\t\tmemset(H,-1,sizeof(H)),memset(G,0,sizeof(G)),memset(F,-1,sizeof(F));\n\t\tfor(T=mx=0,j=0;j<sz[i];j++) ~H[b[i][j]]?++G[F[j]=H[b[i][j]]]:G[F[j]=H[b[i][j]]=j]=1,mx=max(mx,b[i][j]);\n\t\tfor(j=1;j<=m;j++) if((i-1)*S<=q[j].r&&q[j].l<=min(n-1,i*S-1)) if(q[j].opt==1) U(max(q[j].l,(i-1)*S),min(min(n-1,i*S-1),q[j].r),q[j].x);\n\t\telse Ans[q[j].id]+=Q(max(q[j].l,(i-1)*S),min(min(n-1,i*S-1),q[j].r),q[j].x);//\u79bb\u7ebf\n\t}for(i=1;i<=m;i++) if(q[i].opt==2) writeln(Ans[i]);return 0;\n}\n```\n\n",
        "postTime": 1617602321,
        "uid": 37103,
        "name": "yzxoi",
        "ccfLevel": 7,
        "title": "P4117 [Ynoi2018] \u4e94\u5f69\u6591\u6593\u7684\u4e16\u754c"
    }
]