[
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a$N$\u4e2a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u3002\u4e24\u4e2a\u70b9\u4e4b\u95f4\u80fd\u591f\u8fde\u8fb9\u7684\u6761\u4ef6\u662f\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u5c0f\u4e8e$\\sqrt{\\text{\u82b1\u8d39}}$\uff0c\u7b97\u51fa\u80fd\u591f\u4f7f\u5f97\u6240\u6709\u7684\u70b9\u90fd\u8fde\u901a\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n#### \u89e3\u9898\u601d\u8def\n\n\u6839\u672c\u7528\u4e0d\u7740\u4e8c\u5206\u7b54\u6848\u561b\u3002\u76f4\u63a5$N^2$\u5efa\u8fb9\uff0c\u8dd1\u4e00\u904d$Kruskal$\u3002\u8bb0\u5f55\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684\u6700\u957f\u7684\u4e00\u6761\u8fb9\u3002\u663e\u7136\u53ea\u8981\u4f7f\u5f97\u8fd9\u6761\u8fb9\u80fd\u591f\u5efa\u7acb\uff0c\u90a3\u4e48\u8fd9\u68f5\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684\u6240\u6709\u7684\u8fb9\u90fd\u53ef\u4ee5\u5efa\u7acb\u3002\u7b54\u6848\u5c31\u662f\u6700\u957f\u7684\u8fb9\u7684\u8ddd\u79bb\u7684\u5e73\u65b9\uff0c\u6ce8\u610f\u8981\u7528$double$\u5b58\u8fb9\u6743\u3002\n\n#### \u9644\u4e0a\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nconst int maxn = 1e3+3;\nint n, x[maxn], y[maxn], cnt, tot, f[maxn];\ndouble Ans;\nstruct Edge {\n\tint u, v;\n\tdouble w;\n}ed[maxn * maxn];\ninline bool cmp(Edge a, Edge b) {\n\treturn a.w < b.w;\n}\ninline int find(int x) {\n\tif(x == f[x]) return x;\n\telse return f[x] = find(f[x]);\n}\ninline void Kruskal() {\n\tfor(int i=1; i<=n; i++) f[i] = i;\n\tfor(int i=1; i<=n; i++) {\n\t\tfor(int j=1; j<=n; j++) {\n\t\t\tif(i != j) {\n\t\t\t\t++cnt;\n\t\t\t\ted[cnt].u = i, ed[cnt].v = j, ed[cnt].w = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));\n\t\t\t}\n\t\t}\n\t}\n\tsort(ed+1, ed+1+cnt, cmp);\n\tfor(int i=1; i<=cnt; i++) {\n\t\tint xx = find(ed[i].u), yy = find(ed[i].v);\n\t\tif(xx != yy) {\n\t\t\tf[xx] = find(yy);\n\t\t\ttot ++;\n\t\t\tAns = ed[i].w;\n\t\t}\n\t\tif(tot == n-1) {\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%d%d\", &x[i], &y[i]);\n\t}\n\tKruskal();\n\tprintf(\"%.0lf\", Ans * Ans);\n}\n```",
        "postTime": 1533712197,
        "uid": 60941,
        "name": "\u5954\u6ce2\u513f\u9738",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2847 \u3010[USACO20DEC]Moocast(gold)\u5976\u725b\u5e7f\u64ad-\u91d1\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u7684\u4e8c\u5206\u7b54\u6848\u65b9\u6cd5\u8bf4\u7684\u4e0d\u6e05\u4e0d\u695a\uff0c\u8fd9\u91cc\u8865\u4e00\u7bc7\u4e8c\u5206\u7b54\u6848\u7684\u9898\u89e3\u3002\n\n---\n\n\u4e8c\u5206\u7b54\u6848\uff0c\u5c31\u662f\u4e8c\u5206\u8fd9\u4e00\u9898\u4e2d\u7684 $X$\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u679a\u4e3e\u51fa\u6765\u7684\u503c $k$\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8054\u901a\u5173\u7cfb\u3002\u679a\u4e3e\u4efb\u610f\u4e24\u4e2a\u70b9\uff0c\u82e5\u5b83\u4eec\u95f4\u8ddd\u79bb\u7684\u5e73\u65b9\u5c0f\u4e8e $k$\uff0c\u5219\u5408\u5e76\u4e24\u4e2a\u70b9\u6240\u5728\u7684\u5e76\u67e5\u96c6\u3002\u82e5\u641c\u7d22\u540e\u6240\u6709\u70b9\u5728\u540c\u4e00\u4e2a\u5e76\u67e5\u96c6\u5185\uff0c\u5728\u5f53\u524d\u503c $k$ \u53ef\u7528\u3002\u4e8c\u5206\u533a\u57df\u53ef\u4ee5\u8bbe\u4e3a\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u7684\u5e73\u65b9\uff0c\u61d2\u7684\u8bdd\u8bbe\u6210 $10^9$ \u5c31\u53ef\u4ee5\u4e86\u3002\u603b\u590d\u6742\u5ea6 $O(n^2 \\log 10^9)$\uff08\u5e76\u67e5\u96c6\u7684\u590d\u6742\u5ea6\u5c31\u5f53\u5e38\u6570\u5427\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n---\n\n\u66f4\u597d\u7684\u89e3\u6cd5\u5f53\u7136\u662f\u6700\u5c0f\u751f\u6210\u6811\uff0c\u8fd9\u6b21\u53c2\u89c1\u5176\u5b83\u9898\u89e3\u5427\u3002\n\n---\n\u63d0\u4f9b\u4ee3\u7801\uff0c\u4ec5\u4f9b\u53c2\u8003\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nint read() {\n\tint x=0, f=1; char ch=' ';\n\twhile(!isdigit(ch)) {ch=getchar(); if(ch=='-') f=-1;}\n\twhile(isdigit(ch)) x=(x<<3)+(x<<1)+(ch^48), ch=getchar();\n\treturn x*f;\n}\nint n, x[1005], y[1005], f[1005];\nint find(int x) {\n\tif(f[x]==x) return x;\n\treturn f[x]=find(f[x]);\n}\nbool check(int k) {\n\tfor(int i=1;i<=n;i++) f[i]=i;\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=i+1;j<=n;j++) {\n\t\t\tif((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j])>k) continue;\n\t\t\tint x=find(i), y=find(j);\n\t\t\tif(x!=y) f[x]=y;\n\t\t}\n\t}\n\tfor(int i=2;i<=n;i++) {\n\t\tif(find(i)!=find(i-1)) return false;\n\t}\n\treturn true;\n}\nint main() {\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) x[i]=read(), y[i]=read();\n\tint l=0, r=1e9, mid;\n\twhile(l<r) {\n\t\tmid=(l+r)>>1;\n\t\tif(check(mid)) r=mid;\n\t\telse l=mid+1;\n\t}\n\tcout<<l;\n}\n\n```\n",
        "postTime": 1593744877,
        "uid": 93041,
        "name": "__Watcher",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2847 \u3010[USACO16DEC]Moocast G\u3011"
    },
    {
        "content": "~~\u5f88\u663e\u7136~~\u8fd9\u662f\u4e00\u9053\u6700\u5c0f\u751f\u6210\u6811\u6c34\u9898\uff0c\u53ea\u8981\u6c42\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u6700\u957f\u8fb9\u7684\u5e73\u65b9\u5c31\u884c\u4e86\uff0c\u4f46\u662f\u5728\u67d0\u4e9b\u6570\u636e\u4e0a\u5b9e\u6570\u5e73\u65b9\u8f6c\u6574\u6570\u65f6\u56e0\u4e3a\u9ed8\u8ba4\u53bb\u5c0f\u6570\u90e8\u5206\u6240\u4ee5\u4f1a\u70b8\u7cbe\u5ea6\uff0c\u8981\u52a0\u4e0a\u4e00\u4e2a\u5c0f\u5e38\u6570\u538b\u538b\u60ca\u3002\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,t;bool v[1500];\ndouble x[1500],y[1500],w[1500][1500],d[1500],ans;\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>x[i]>>y[i];\n\t\tfor(int j=1;j<i;j++)w[i][j]=w[j][i]=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));\n\t}\n\tfor(int i=1;i<=n;i++)d[i]=w[1][i];\n\tmemset(v,false,sizeof(v));\n\tv[1]=true;ans=0;\n\tfor(int i=1;i<=n-1;i++){\n\t\tt=1;\n\t\twhile(v[t])t++;\n\t\tfor(int j=t;j<=n;j++)if(!v[j]&&d[j]<d[t])t=j;\n\t\tif(d[t]>ans)ans=d[t];//\u5b58\u6700\u957f\u8fb9\n\t\td[t]=0;\n\t\tv[t]=true;\n\t\tfor(int j=1;j<=n;j++)if(w[t][j]<d[j])d[j]=w[t][j];\n\t\t\n\t}\n\tt=ans*ans+0.000001;//\u9632\u6b62\u70b8\u7cbe\u5ea6\n\tcout<<t;\n}\n```",
        "postTime": 1533269496,
        "uid": 76712,
        "name": "haunter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2847 \u3010[USACO20DEC]Moocast(gold)\u5976\u725b\u5e7f\u64ad-\u91d1\u3011"
    },
    {
        "content": "**P\u515a\u7684\u798f\u5229**\n\n\u6700\u6d45\u663e\u7684\u65b9\u6cd5\uff1a\u8fd9\u9053\u9898\u7684\u5173\u952e\u5c31\u662f\u5efa\u56feO(n^2)+Kruskal\n\n~~\u4e8c\u5206\u7b54\u6848~~\u592a\u590d\u6742\u5566\n\n\u6211\u7684\u5efa\u56fe\u65b9\u6cd5\uff1a\u5bf9\u4e8e\u8bfb\u5165\u7684\u70b9\uff0c\u4e24\u4e24\u4e4b\u95f4\u7528\u8ddd\u79bb\u516c\u5f0f\u7b97\u51fa\u957f\u5ea6\uff0c\u7136\u540e\u5bf9\u4e8e\u5efa\u7acb\u7684\u56fe\uff0c\u8dd1\u4e00\u904dKruskal\u3002**\u5728\u8dd1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bb0\u4e0b\u6700\u957f\u7684\u8fb9\u957f\u5373\u4e3a\u7b54\u6848\u3002**\n\n\u4e3e\u4e2a\u6817\u5b50!\n![](https://cdn.luogu.com.cn/upload/pic/23276.png)\n\u5bf9\u4e8e\u8f93\u5165\u6570\u636e\uff1a\n\n4\n\n1 2\n\n1 3\n\n2 2\n\n2 0\n\n\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u8fd9\u6837\u7684\u56fe\uff0c\u51716\u6761\u8fb9\n\n\u53ef\u4ee5\u63a8\u5f97\u8fb9\u6570\uff1a$\\frac{n(n-1)}{2}$\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u5730Kruskal\u4e86\n\n\u8d34\u4ee3\u7801\uff1a\n```pascal\nvar i,ans,tot,n,j:longint;\nx,y,father:array[0..10000] of longint;\na,b,v:array[0..600000] of longint;\n\nprocedure swap(var x,y:longint);\nvar temp:longint;\nbegin\ntemp:=x;x:=y;y:=temp;\nend;\n\nprocedure sort(l,r:longint);   //\u6392\u5e8f\uff0ckruskal\u57fa\u672c\u64cd\u4f5c\nvar i,j,t,mid:longint;\nbegin\ni:=l;j:=r;\nmid:=v[(l+r) div 2];\nrepeat\n    while v[i]<mid do\n        inc(i);\n    while v[j]>mid do\n        dec(j);\n    if i<=j\n        then begin\n                 swap(a[i],a[j]);\n                 swap(b[i],b[j]);\n                 swap(v[i],v[j]);\n                 inc(i);dec(j);\n             end;\nuntil i>j;\nif l<j\n    then sort(l,j);\nif i<r\n    then sort(i,r);\nend;\n\nfunction getfather(x:longint):longint;   //\u5e76\u67e5\u96c6\nbegin\nif father[x]=x\n    then exit(father[x]);\nfather[x]:=getfather(father[x]);\nexit(father[x]);\nend;\n\nprocedure merge(x,y:longint);\nvar xx,yy:longint;\nbegin\nxx:=getfather(x);\nyy:=getfather(y);\nfather[xx]:=yy;\nend;\n\nfunction query(x,y:longint):boolean;\nbegin\nexit(getfather(x)=getfather(y));\nend;\n\nbegin\nreadln(n);\nfor i:=1 to n do\n    readln(x[i],y[i]);\nfor i:=1 to n-1 do    //O(n^2)\u7684\u5efa\u56fe\n    for j:=i+1 to n do\n        begin\n            inc(tot);\n            a[tot]:=i;b[tot]:=j;\n            v[tot]:=sqr(x[i]-x[j])+sqr(y[i]-y[j]); //\u8ddd\u79bb\u516c\u5f0f\u5efa\u8fb9\n        end;\nsort(1,tot);\nfor i:=1 to n do\n    father[i]:=i;\nfor i:=1 to tot do\n    if query(a[i],b[i])=false\n        then begin\n                 if v[i]>ans   \n                     then ans:=v[i];   //\u4fdd\u5b58\u6700\u957f\u7684\u8fb9\n                 merge(a[i],b[i]);\n             end;\nwriteln(ans);\nend.\n```",
        "postTime": 1531467040,
        "uid": 22658,
        "name": "sleepyNick",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2847 \u3010[USACO20DEC]Moocast(gold)\u5976\u725b\u5e7f\u64ad-\u91d1\u3011"
    },
    {
        "content": "\u660e\u663e\u7684\u4e8c\u5206\u7b54\u6848\uff0c\u4e4b\u524d\u7684\u9898\u89e3\u6709\u70b9\u7e41\u4e86\n```cpp\n#include<iostream>\n#include<cmath>\n#include<vector>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n\nint x;\nint G[1001][1001];\nint A[1001][3];\ntypedef double dd;\nbool R[1001][1001];\nint n;\nint T[1001];\nbool C[1001];\nint ans=0;\n\ninline  void cal(int i,int j){\n\tdd xa=(dd)A[i][1],xb=(dd)A[j][1];\n\tdd ya=(dd)A[i][2],yb=(dd)A[j][2];\n\tdd ans=0;\n\tans=(xa-xb)*(xa-xb)+(ya-yb)*(ya-yb);\n\tG[i][j]=(int)(ceil(ans));\n\tG[j][i]=G[i][j];\n}\nvoid dfs(int x,int k,int be){\n\tfor (int i=1;i<=n;i++){\n\t\tif (G[i][k]<=x and C[i]==0){\n\t\t\tC[i]=1;\n\t\t\tT[be]++;\n\t\t\tdfs(x,i,be);\n\t\t}\n\t}\n}\n\n\nint main(){\n//\tfreopen(\"moocast.in\",\"r\",stdin);\n//\tfreopen(\"moocast.out\",\"w\",stdout);\n\tcin>>n;\n\tfor (int i=1;i<=n;i++)\n\t\tcin>>A[i][1]>>A[i][2];\n\tfor (int i=1;i<n;i++){\n\t\tfor (int j=i+1;j<=n;j++){\n\t\t\tcal(i,j);\n\t\t}\n\t}\n\tint f=1,p=111111111;\n\twhile(f<p-1){\n\t\tmemset(T,0,sizeof(T));\n\t\tmemset(C,0,sizeof(C));\n\t\tx=(f+p)/2;\n\t\tC[1]=1;\n\t\tdfs(x,1,1);\n\t\tif (T[1]==n-1)\n\t\t\tp=x;\n\t\telse\n\t\t\tf=x;\n\t}\n\tx=ceil((f+p)/2);\n\tcout<<x+1<<endl;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1521908277,
        "uid": 36399,
        "name": "blackjack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2847 \u3010[USACO20DEC]Moocast(gold)\u5976\u725b\u5e7f\u64ad-\u91d1\u3011"
    },
    {
        "content": "\u8fd9\u5927\u6982\u662f\u6bd4\u8f83\u88f8\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5199\u4e4b\u524d\u5efa\u8bae\u4ed4\u7ec6\u8bfb\u9898 \u9898\u76ee\u610f\u601d\u662f\u6c42\u53ef\u4ee5\u4f7f\u5f97\u6240\u6709\u5976\u725b\u90fd\u8054\u901a\u7684\u6700\u5927\u503c\u6700\u5c0f\n\n\u90a3\u4e48kruskal\u6c42\u5f97\u6700\u540e\u4e00\u6761\u8fb9\u5373\u53ef\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define N 1100\nusing namespace std;\ninline int qrt(int x){\n    return x*x;\n}\nint num,n,x[N],y[N],fa[N];\ninline int calc(int i,int j){\n    int ans=qrt(x[i]-x[j])+qrt(y[i]-y[j]);\n    return ans;\n}\ninline int read(){\n    int x=0;char ch=getchar();\n    while (ch<'0'||ch>'9') ch=getchar();\n    while (ch>='0'&&ch<='9') {\n        x=x*10+ch-'0';ch=getchar();\n    }\n    return x;\n}\nstruct node{\n    int x,y,w;\n}data[N*N];\ninline void insert1(int x,int y,int w){\n    data[++num].x=x;data[num].y=y;data[num].w=w;\n}\ninline int find(int x){\n    return x==fa[x]?x:fa[x]=find(fa[x]);\n}\ninline bool cmp(node a,node b){\n    return a.w<b.w;\n}\nint main(){\n    freopen(\"2840.in\",\"r\",stdin);\n    freopen(\"2840.out\",\"w\",stdout);\n    n=read();num=0;\n    for (int i=1;i<=n;++i) x[i]=read(),y[i]=read();\n    for (int i=1;i<=n;++i) fa[i]=i;\n    for (int i=1;i<=n;++i){\n        for (int j=i+1;j<=n;++j){\n            insert1(i,j,calc(i,j));\n        }\n    }\n    int tot=0;\n    sort(data+1,data+1+num,cmp);\n    //for (int i=1;i<=num;++i )printf(\"%d %d %d\\n\",data[i].x,data[i].y,data[i].w);\n    int i;\n    for (i=1;i<=num;++i){\n        int p=find(data[i].x),q=find(data[i].y);\n        if (p!=q) fa[p]=q,++tot;\n    //    printf(\"%d %d %d\\n\",data[i].x,data[i].y,data[i].w);\n        if (tot==n-1) break;\n    }\n    printf(\"%d\",data[i].w);\n    return 0;\n}\n```",
        "postTime": 1499750084,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2840 \u3010[USACO20DEC]Moocast(gold)\u5976\u725b\u5e7f\u64ad-\u91d1\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u548c\u6211\u505a\u8fc7\u7684\u4e00\u9053\u9898\u5f88\u50cf\uff08P2504 [HAOI2006]\u806a\u660e\u7684\u7334\u5b50\uff09\u53cd\u6b63\u6211\u7b2c\u4e00\u65f6\u95f4\u60f3\u5230\u7684\u5c31\u662f\u5148\u65e0\u8111Kruscal\u4e00\u904d\u2026\u2026\n\n\u6253\u5b8c\u6700\u5c0f\u751f\u6210\u6811\u540e\uff0c\u6211\u9677\u5165\u4e86\u6c89\u601d\u3002\u7a81\u7136\uff0c\u6211\u7075\u673a\u4e00\u52a8\uff0c\u60f3\u5230\u4e86\u4e00\u4e2a\u7edd\u5999\u7684\u65b9\u6cd5\uff1a\u53ea\u8981\u4ee5\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5927\u7684\u90a3\u4e00\u6761\u8fb9\u4e3a\u51c6\uff0c\u4e0d\u5c31vans\u4e86\u5417\uff1f\uff01\n\n\u6709\u4e24\u70b9\u6bd4\u8f83\u5751\u7684\u662f\uff0cdis\u8981\u7528double\u7c7b\u578b\uff1b\u6570\u7ec4\u4e00\u5b9a\u8981\u5f00\u5927\u4e00\u70b9\uff01\uff08\u6211\u56e0\u4e3a\u8fd9\u4e2aRE\u4e86\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[105][3],k,fa[2000005];\nint find(int x)\n{\n\tif (x==fa[x]) return x;\n\treturn fa[x]=find(fa[x]);\n}\nbool quary(int x,int y)\n{\n\treturn find(x)==find(y);\n}\nvoid merge(int x,int y)\n{\n\tfa[find(x)]=find(y);\n}\nstruct node\n{\n\tint fr,to;\n\tdouble dis;\n}q[2000005];\nbool cmp(node x,node y)\n{\n\treturn x.dis<y.dis;\n}\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor (int i=1;i<=2000004;i++) fa[i]=i;\n\tfor (int i=1;i<=n;i++)\n\t\tcin>>a[i][1]>>a[i][2];\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=n;j++)\n\t\t\tif (i!=j)\n\t\t\t{\n\t\t\t\tk++;\n\t\t\t\tq[k].fr=i;q[k].to=j;q[k].dis=sqrt((a[i][1]-a[j][1])*(a[i][1]-a[j][1])+(a[i][2]-a[j][2])*(a[i][2]-a[j][2]));\n\t\t\t}\n\tsort(q+1,q+k+1,cmp);\n\tint cnt=0; double ans=0;\n\tfor (int i=1;i<=k;i++)\n\t{\n\t\tif (quary(q[i].fr,q[i].to)) continue;\n\t\tmerge(q[i].fr,q[i].to);\n\t\tans=q[i].dis;\n\t\tif (++cnt==n-1) break;\n\t}\n\tprintf(\"%.0lf\", ans*ans);\n\treturn 0;\n}\n```\n\u987a\u4fbf\u63d0\u4e00\u53e5\uff0c\u5f88\u5927\u4e00\u90e8\u5206\u751f\u6210\u6811\uff0c\u5e76\u67e5\u96c6\u7684\u9898\u90fd\u662f\u76f8\u901a\u7684\u3002\u5b66\u4f1a\u591a\u603b\u7ed3\uff0c\u591a\u601d\u8003\uff0c\u5c1d\u8bd5\u5c11\u770b\u9898\u89e3\uff0c\u4e00\u4e9b\u6bd4\u8f83\u96be\u7684\u95ee\u9898\u4e5f\u5c31\u8fce\u5203\u800c\u89e3\u4e86\u3002\n\n\u672c\u83dc\u9e1f\u8fd8\u662f\u592a\u5f31\u4e86\uff0c\u60f3\u4e0d\u5230\u4ec0\u4e48\u597d\u7684\u65b9\u6cd5\uff0c\u6b22\u8fce\u5404\u8def\u5927\u795e\u7206\u8e29\u6211~~",
        "postTime": 1577539626,
        "uid": 235013,
        "name": "OceanLiu",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011 P2847 [USACO16DEC]Moocast(gold)\u5976\u725b\u5e7f\u64ad-\u91d1"
    },
    {
        "content": "$USACO$ ~~\u91d1\u7ec4\u5927\u6c34\u9898~~ \u6700\u5c0f\u751f\u6210\u6811\u5165\u95e8\u7ec3\u624b\u9898\n\n\u65e2\u7136\u662f\u6700\u5c0f\u751f\u6210\u6811\uff0c\n## \u4f55\u5fc5\u8981\u4e8c\u5206\u7b54\u6848\uff1f\n\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4e0d\u7528$Kruskal$\uff0c\n## \u4f55\u5fc5\u8981$O(n^2)$\u5efa\u8fb9\uff1f\n\u663e\u7136\uff0c\u7b54\u6848\u662f\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u6700\u957f\u8fb9\u7684\u5e73\u65b9\uff0c\u76f4\u63a5\u52fe\u80a1\u5b9a\u7406\u5c31\u884c\u2014\u2014\n## \u4f55\u5fc5\u8981\u5904\u7406\u5c0f\u6570\u7cbe\u5ea6\u95ee\u9898\uff1f\n\n\u5bf9\u4e8e\u8fb9\u6743\u9700\u8981\u81ea\u884c\u8ba1\u7b97\u7684\u5b8c\u5168\u56fe\uff08\u5982\u672c\u9898\u53ea\u7ed9\u51fa\u5750\u6807\u7684\u60c5\u51b5\uff09\uff0c\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e00\u822c\u91c7\u7528$Prim$\u7b97\u6cd5\u3002\n\n$Prim$\u7684\u601d\u60f3\u7c7b\u4f3c\u4e8e\u6700\u77ed\u8def\u4e2d\u7684$dijkstra$\u3002\n\n\u521d\u59cb\u65f6\uff0c\u5c06\u4efb\u610f\u7ed3\u70b9\uff08\u901a\u5e38\u9009$1$\u53f7\u7ed3\u70b9\uff09\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\uff0c\u7136\u540e\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a$min[i]$\u6570\u7ec4\u7528\u4e8e\u8bb0\u5f55\u7ed3\u70b9$i$\u5230\u5df2\u7ecf\u786e\u5b9a\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u6bcf\u6b21\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u6839\u636e\u8d2a\u5fc3\u601d\u60f3\uff0c\u627e\u5230\u4e00\u4e2a\u79bb\u6700\u5c0f\u751f\u6210\u6811\u6700\u8fd1\u7684\u4e14\u672a\u88ab\u52a0\u5165\u5230\u6811\u4e2d\u7684\u7ed3\u70b9\uff0c\u6dfb\u52a0\u5230\u6811\u4e2d\uff0c\u5e76\u7528\u5f53\u524d\u7684\u7ed3\u70b9\u53bb\u677e\u5f1b\u4e0e\u5176\u76f8\u8fde\u7684\u7ed3\u70b9\u3002\u91cd\u590d\u8be5\u64cd\u4f5c\u76f4\u5230\u6240\u6709\u5143\u7d20\u88ab\u52a0\u5165\u5230\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\uff0c\u5728\u7a20\u5bc6\u56fe\u4e2d\u6709\u4e0d\u4fd7\u7684\u8868\u73b0\u3002\n\n### $Prim$\u6b63\u786e\u6027\u8bc1\u660e\uff1a\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u9876\u70b9$v$\uff0c\u8fde\u63a5\u5230\u8be5\u9876\u70b9\u7684\u6240\u6709\u8fb9\u4e2d\u7684\u4e00\u6761\u6700\u77ed\u8fb9$(v, vj)$\u5fc5\u7136\u5c5e\u4e8e\u6700\u5c0f\u751f\u6210\u6811\uff08\u5373\u4efb\u610f\u4e00\u4e2a\u5c5e\u4e8e\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fde\u901a\u5b50\u56fe\uff0c\u4ece\u5916\u90e8\u8fde\u63a5\u5230\u8be5\u8fde\u901a\u5b50\u56fe\u7684\u6240\u6709\u8fb9\u4e2d\u7684\u4e00\u6761\u6700\u77ed\u8fb9\u5fc5\u7136\u5c5e\u4e8e\u6700\u5c0f\u751f\u6210\u6811\uff09\n\n\u4f20\u9001\u95e8\uff1a[P3366 \u3010\u6a21\u7248\u3011\u6700\u5c0f\u751f\u6210\u6811](https://www.luogu.org/problem/P3366)\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u7528$Prim$\u6109\u5feb\u5730$AC$\u8fd9\u9053\u91d1\u7ec4~~\u96be\u9898~~\u8fa3\n\n## Code\n```c\nprogram cast;\nconst INF=99999999999999;\nvar ans,m,u:int64;\n    min,x,y:array[0..1010] of int64;\n    vis:array[0..1010] of boolean;\n    i,j,n:longint;\nbegin\n  readln(n);\n  for i:=1 to n do readln(x[i],y[i]);\n  for i:=1 to n do min[i]:=INF;\n  min[1]:=0;\n  for i:=1 to n do\n  begin\n    m:=INF;\n    for j:=1 to n do\n      if (not vis[j])and(min[j]<m) then\n      begin\n        m:=min[j]; u:=j;\n      end;\n    vis[u]:=true;\n    for j:=1 to n do\n      if (not vis[j])and(sqr(x[j]-x[u])+sqr(y[j]-y[u])<min[j]) then\n        min[j]:=sqr(x[j]-x[u])+sqr(y[j]-y[u]);\n  end;\n  for i:=1 to n do\n    if min[i]>ans then ans:=min[i];\n  writeln(ans);\nend.\n\n```",
        "postTime": 1573130332,
        "uid": 82593,
        "name": "Chavapa",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2847 \u3010[USACO16DEC]Moocast(gold)\u5976\u725b\u5e7f\u64ad-\u91d1\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6807\u51c6\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u9898\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u5927\u5bb6\u5e94\u8be5\u90fd\u5b66\u8fc7\u52fe\u80a1\u5b9a\u7406\u5427\uff1f\u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\uff0c\u4e24\u70b9A(x1,y1),B(x2,y2)\u7684\u8ddd\u79bb|AB|\u7b49\u4e8esqrt((x1-x2)^2+(y1-y2)^2\uff09\uff0c\u800c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u6700\u540e\u8981\u6c42\u7684\u662f\u6700\u5927\u7684|AB|^2,\u4e5f\u5c31\u662f(x1-x2)^2+(y1-y2)^2\uff08\u5f53\u7136\u5728C++\u91cc\u5f97\u5199\u6210(x1-x2) * (x1-x2)+(y1-y2) * (y1-y2))\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u8fb9\u6743\u4e3a\u4e24\u70b9\u8ddd\u79bb\u5e73\u65b9\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u6700\u957f\u8fb9\u7684\u957f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u53cc\u91cd\u5faa\u73af\u6c42\u51fa\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u7136\u540e\u518d\u8dd1\u4e00\u8fb9\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5\u3002\n\n\u88ab\u719f\u77e5\u7684\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u7b97\u6cd5\u6709prime\u3001kruskal\u4e24\u79cd\uff0c\u800c\u8fd9\u6b21\u6211\u4eec\u7684\u56fe\u662f\u5b8c\u5168\u56fe\uff08\u5373\u56fe\u7684\u6bcf\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u8fde\u8fb9\uff09\uff0c\u800cprime\u66f4\u9002\u5408\u8dd1\u7a20\u5bc6\u56fe\uff0c\u56e0\u6b64\u6211\u4eec\u9009\u7528prime\u7b97\u6cd5\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,i,j,x[1001],y[1001],p[1001][1001],d[1001],u,max1;\nbool b[1001];\npriority_queue<pair<long long,long long> >q;//\u5806\u4f18\u5316\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tfor (i=1;i<=n;i++)\n\t\tscanf(\"%lld%lld\",&x[i],&y[i]);\n\tfor (i=1;i<=n;i++)\n\t\tfor (j=1;j<=n;j++)\n\t\tp[i][j]=(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);//\u6c42\u51fa\u4e24\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n\tfor (i=1;i<=n;i++) d[i]=1e11;\n\td[1]=0;\n\tmax1=0;\n\tq.push(make_pair(0,1));\n\twhile (q.size())\n\t{\n\t\tu=q.top().second;\n\t\tq.pop();\n\t\tif (b[u]) continue;\n\t\tmax1=max(max1,d[u]);//\u6c42\u51fa\u6700\u5927\u8fb9\u6743\n\t\tb[u]=true;\n\t\tfor (i=1;i<=n;i++)\n\t\t\tif (d[i]>p[u][i])\n\t\t\t{\n\t\t\t\td[i]=p[u][i];\n\t\t\t\tq.push(make_pair(-d[i],i));//prime\n\t\t\t}\n\t}\n\tprintf(\"%lld\",max1);\n\treturn 0;\n}\n```\n\u5176\u5b9e\u8fd9\u9898\u6570\u636e\u8f83\u5c0f\uff0c\u611f\u89c9kruskal\u4e5f\u80fd\u8dd1\u8fc7\uff0c\u4f46\u65e2\u7136\u5df2\u7ecfA\u4e86\u4e5f\u5c31\u61d2\u5f97\u6253\u4e86\u3002",
        "postTime": 1572438519,
        "uid": 33480,
        "name": "szbszb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2847 \u3010[USACO16DEC]Moocast(gold)\u5976\u725b\u5e7f\u64ad-\u91d1\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u6709\u4e0d\u5bf9\u7684\u5730\u65b9\u5e0c\u671b\u6307\u51fa\u3002QwQ\n\n\u9898\u610f\uff1a\u544a\u8bc9\u4f60N\u4e2a\u70b9\u7684\u5750\u6807\uff0c\u8ba9\u4f60\u6c42\u80fd\u4f7f\u8fd9N\u4e2a\u70b9\u8fde\u901a\u7684N-1\u6761\u7ebf\u6bb5\u4e2d\u6700\u957f\u7684\u4e00\u6761\u7ebf\u6bb5\u7684\u6700\u5c0f\u503c\u7684\u5e73\u65b9\uff0c\u4e5f\u5c31\u662f\u4ed6\u4eec\u8981\u82b1\u8d39\u7684\u94b1\u6570\u3002\n\n\u9996\u5148\uff0c \u7528\u52fe\u80a1\u5b9a\u7406\uff0c\u53ea\u8981\u6c42sqr(x1-x2)+sqr(y1-y2)\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u6700\u5c0f\u751f\u6210\u6811\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8c\u5206\uff0c\u4e0b\u9762\u5c31\u53ea\u4ecb\u7ecd\u6700\u5c0f\u751f\u6210\u6811\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08N^2\uff09\u3002\n\n\u9996\u5148\uff0c\u521d\u59cb\u5316\uff1a\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u52a0\u5165\u7b2c\u4e00\u4e2a\u70b9\uff0c\u5e76\u6807\u8bb0\u3002\u7136\u540e\u7b97\u51fa\u5176\u4ed6\u6bcf\u4e2a\u70b9\u5230\u7b2c\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u3002\u6bcf\u6b21\u5faa\u73af\u627e\u4e00\u4e2a\u79bb\u6700\u5c0f\u751f\u6210\u6811\u6700\u8fd1\u7684\u70b9\uff0c\u5e76\u6807\u8bb0\uff0c\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u52a0\u5165\u8fd9\u4e2a\u70b9\uff0c\u5e76\u66f4\u65b0\u90a3\u4e9b\u8fd8\u6ca1\u6709\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u70b9\u79bb\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u77ed\u8ddd\u79bb\u3002\u5faa\u73afN-1\u6b21\uff0c\u628a\u6bcf\u4e2a\u70b9\u90fd\u52a0\u5165\uff0c\u6700\u540e\u53ea\u8981\u627e\u90a3\u6761\u6700\u957f\u7684\u8fb9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u3010\u53c2\u8003\u7a0b\u5e8f\u3011\n\n```cpp\nvar n,i,j,min,max,ll,minl:longint;\n    x,y,l:array[1..1000]of longint;\n    b:array[1..1000]of boolean;\nbegin\n readln(n);\n for i:=1 to n do\n  readln(x[i],y[i]);\n for i:=2 to n do//\u521d\u59cb\u5316\n  l[i]:=sqr(x[1]-x[i])+sqr(y[1]-y[i]);\n b[1]:=true;\n for i:=1 to n-1 do//\u627e\u8fb9\n begin\n  min:=maxlongint;\n  for j:=1 to n do\n   if (not(b[j]))and(l[j]<min) then//\u627e\u6700\u8fd1\u7684\u672a\u6807\u8bb0\u7684\u70b9\n   begin\n    min:=l[j];\n    minl:=j;\n   end;\n  if min>max then max:=min;//\u66f4\u65b0\u6700\u957f\u8fb9\n  b[minl]:=true;//\u6807\u8bb0\n  for j:=1 to n do//\u66f4\u65b0\u6ca1\u6709\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u70b9\u5230\u6700\u5c0f\u751f\u6210\u6811\u7684\u8ddd\u79bb\n   if not(b[j]) then\n   begin\n    ll:=sqr(x[minl]-x[j])+sqr(y[minl]-y[j]);\n    if ll<l[j] then l[j]:=ll;\n   end;\n end;\n writeln(max);\n close(input);close(output);\nend.\n```",
        "postTime": 1509967409,
        "uid": 27711,
        "name": "fangxk2003",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2840 \u3010[USACO20DEC]Moocast(gold)\u5976\u725b\u5e7f\u64ad-\u91d1\u3011"
    },
    {
        "content": "**\u7b80\u5316\u9898\u9762**\n\n\u7ed9\u4f60n\u4e2a\u70b9\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u4e24\u70b9\u95f4\u8fde\u8fb9\uff0c\u4ee3\u4ef7\u4e3a\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\u3002\u5728\u4fdd\u8bc1\u56fe\u8054\u901a\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5c0f\u5316\u6700\u5927\u8fb9\u6743\u3002\u8f93\u51fa\u6700\u5c0f\u7684\u6700\u5927\u8fb9\u6743\u7684\u5e73\u65b9\u3002\n\n**\u601d\u8def**\n\n\u6709\u9898\u89e3\u8bf4\u53ef\u4ee5\u7528\u4e8c\u5206\u7b54\u6848\uff0c\u53ef\u6211\u4e0d\u4f1a\u600e\u4e48\u529e\uff1f\u5176\u5b9e\u5e76\u4e0d\u7528\u4e8c\u5206\u7b54\u6848\uff0c\u6700\u5c0f\u751f\u6210\u6811\u5c31\u884c\uff0c\u8f93\u51fa\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5927\u8fb9\u6743\u3002\n\n**\u8bc1\u660e**\uff08\u81ea\u5df1\u778e\u5199\u7684\uff0c\u4e0d\u4e00\u5b9a\u5b8c\u5584  ~~\u5e94\u8be5\u662f\u4e00\u5b9a\u4e0d~~\uff09\n\n\u9996\u5148\uff0c\u6811\u4fdd\u8bc1\u4e86\u8fde\u901a\uff0c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u5e45\u56fe\uff0c\u53bb\u6389\u4e00\u4e9b\u8fb9\u540e\u53d8\u6210\u6811\uff0c\u5b83\u4f9d\u7136\u6ee1\u8db3\u6761\u4ef6\uff0c\u800c\u4e14\u7b54\u6848\u4e00\u5b9a\u4e0d\u4f1a\u66f4\u5927\u3002\n\n\u7b2c\u4e8c\uff0c\u6700\u5c0f\u751f\u6210\u6811\u662f\u4e0d\u505c\u5730\u627e\u6700\u5c0f\u7684\u8fb9\uff0c\u90a3\u4e48\u5b83\u6700\u5927\u7684\u8fb9\u6743\u4e00\u5b9a\u4f1a\u88ab\u6700\u5c0f\u5316\u3002\u5982\u679c\u6700\u5927\u8fb9\u6743\u53ef\u4ee5\u66f4\u5c0f\uff0c\u90a3\u5b83\u5c31\u4e0d\u662f\u6700\u5c0f\u751f\u6210\u6811\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u5b83\u662f\u6700\u5c0f\u751f\u6210\u6811\uff0c\u90a3\u4e48\u6700\u5927\u7684\u8fb9\u6743\u5c31\u4e0d\u4f1a\u66f4\u5c0f\u3002\u6240\u4ee5\uff0c\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5927\u8fb9\u6743\u5c31\u662f\u7b54\u6848\u3002\n\n**\u5b9e\u73b0**\n\n\u6700\u5c0f\u751f\u6210\u6811\u4e00\u822c\u6709\u4e24\u79cd\u627e\u6cd5\uff0cKruskal\u7b97\u6cd5\u548cPrim\u7b97\u6cd5\u3002\u7531\u4e8e\u4efb\u610f\u4e24\u70b9\u95f4\u90fd\u53ef\u4ee5\u8fde\u8fb9\uff0c\u6240\u4ee5\u9009\u62e9Prim\u7b97\u6cd5\u66f4\u597d\u3002\n\n\u5728\u7b97\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u65f6\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u4e0d\u8981\u5b58\u4ed6\u4eec\u7684\u8ddd\u79bb\uff0c\u800c\u662f\u5b58\u4ed6\u4eec\u7684\u8ddd\u79bb\u7684\u5e73\u65b9\uff0c\u8fd9\u6837\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u5374\u53ef\u4ee5\u907f\u514d\u7384\u5b66\u7684\u7cbe\u5ea6\u5224\u65ad\uff0c\u5199\u8d77\u6765\u4e5f\u7b80\u5355\u4e00\u4e9b\u3002\n\n**code\uff1a**\n\n```cpp\n#include<cstdio>\n#include<cstring>\n//map\u5b58\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\uff0cx\u3001y\u4e3a\u8bfb\u5165\u7684\u5750\u6807\uff0cdis\u4e3a\u6bcf\u4e2a\u70b9\u5230\u539f\u751f\u6210\u6811\u96c6\u5408\u8ddd\u79bb\u7684\u5e73\u65b9\uff0cf\u4e3a\u6bcf\u4e2a\u70b9\u662f\u5426\u5728\u539f\u751f\u6210\u6811\u96c6\u5408\u5185\nint map[1010][1010],x[1010],y[1010],dis[1010],f[1010];\nint main()\n{\n    int n,ans=0;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)//\u8bfb\u5165\u3001\u6784\u56fe\n    {\n        scanf(\"%d%d\",x+i,y+i);\n        for(int j=1;j<i;j++)\n            map[i][j]=map[j][i]=(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);\n    }\n    //\u521d\u59cb\u5316\u6bcf\u4e2a\u70b9\u5230\u539f\u751f\u6210\u6811\u96c6\u5408\u7684\u8ddd\u79bb\n    memset(dis,0x3f,sizeof(dis));\n    dis[1]=0;\n    for(int i=1;i<=n;i++)\n    {\n        int minn=0x3f3f3f3f,minj;\n        for(int j=1;j<=n;j++)\\\\\u5bfb\u627e\u6700\u5c0f\u8ddd\u79bb\n            if(!f[j]&&dis[j]<minn)\n            {\n                minn=dis[j];\n                minj=j;\n            }\n        //\u66f4\u65b0\u7b54\u6848\u5e76\u6807\u8bb0\u8ddd\u79bb\u6700\u5c0f\u70b9\n        ans=ans>minn?ans:minn;\n        f[minj]=1;\n        for(int j=1;j<=n;j++)//\u66f4\u65b0\u8ddd\u79bb\n            if(!f[j]&&dis[j]>map[minj][j])\n                dis[j]=map[minj][j];\n    }\n    printf(\"%d\\n\",ans);//ans\u5373\u4e3a\u6700\u5927\u8fb9\u6743\u7684\u5e73\u65b9\n}\n```",
        "postTime": 1549196174,
        "uid": 151722,
        "name": "hht2005",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2847 \u3010[USACO16DEC]Moocast(gold)\u5976\u725b\u5e7f\u64ad-\u91d1\u3011"
    },
    {
        "content": "\u4e00\u53e5\u8bdd\u9898\u76ee\uff1a\n\u7ed9\u4f60\u4e00\u4e2a\u53ea\u6709\u70b9\uff08n\u4e2a\uff09\u7684\u56fe\uff0c\u627e\u5230\u6700\u5c0f\u7684\u65e0\u5411\u8fb9\u8fb9\u957f\u4f7f\u5f97\u56fe\u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u8fde\u901a\n\n\u90a3\u5c31\u662f\u5178\u578b\u7684\u4e8c\u5206\u7b54\u6848\u561b\n\u5224\u65ad\u65b9\u6cd5\u662f\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\uff08\u6211\u7528\u7684\u7b2c\u4e00\u4e2a\u70b9\uff09\u8fdb\u884c\u641c\u7d22\uff0c\u770b\u662f\u5426\u80fd\u904d\u5386\u6574\u5f20\u56fe \n\n~~\u597d\u6c34~~\n>\n```cpp\n\n#include <cstring>\n#include <cstdio>\n#include <queue>\n#include <cmath>\ninline int read()\n{\n\tint n=0,w=1;register char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\n\twhile(c<='9'&&c>='0')n=n*10+c-'0',c=getchar(); \n\treturn n*w;\n}\nstruct Node{\n\tint x,y;\n}cow[1001];\nint n,emp,tmp;\nbool vis[1001];\nstd::queue<int> q;\ninline int work(int a,int b,int k)\n{\n\temp=cow[a].x-cow[b].x;\n\ttmp=cow[a].y-cow[b].y;\n\treturn k>=emp*emp+tmp*tmp;\n}\ninline bool judge(int k)\n{\n\tmemset(vis,false,sizeof vis);\n\twhile(!q.empty())q.pop();\n\tq.push(1);vis[1]=true;\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();q.pop();\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tif(!vis[i]&&work(now,i,k))\n\t\t\t\tq.push(i),vis[i]=true;\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tif(!vis[i])\n\t\t\treturn false;\n\treturn true;\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t\tcow[i].x=read(),cow[i].y=read();\n\tint ans,l=0,r=1<<31-1,mid;//r\u5f00\u5c0f\u4e86\u7b54\u6848\u4f1a\u662f0\n\twhile(l<=r)\n\t{\n\t\tmid=l+r>>1;\n\t\tif(judge(mid))\n\t\t\tans=mid,r=mid-1;\n\t\telse\tl=mid+1;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1517664208,
        "uid": 39864,
        "name": "\u4e0d\u4e89\u4e0d\u95f9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2840 \u3010[USACO20DEC]Moocast(gold)\u5976\u725b\u5e7f\u64ad-\u91d1\u3011"
    }
]