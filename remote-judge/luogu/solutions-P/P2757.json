[
    {
        "content": "  ## \u7ebf\u6bb5\u6811~~\u597d~~\u9898 ##\n  ### ~~\u53ef\u80fd\u53ea\u6709\u6211\u8fd9\u79cd\u849f\u84bb\u9700\u8981\u6253\u8fd9\u4e48\u4e45~~ ###\n\t\u9996\u5148\u770b\u9898\u76ee\uff0clen>=3,\u597d\u8bf4\uff0c\u53ea\u8981\u627e\u5230\u4e3a3\u7684\u5c31\u884c\u4e86\u5bf9\u5427(len>3\u7684\u7b49\u5dee\u5b50\u5e8f\u5217\u91cc\u9762\u4e5f\u6709\u957f\u4e3a3\u7684\u554a)[\u624b\u52a8\u6ed1\u7a3d]\u3002\n    \u56e0\u4e3a\u7ed9\u7684\u6570\u5217\u662f1~n\u7684\u6392\u5217,\u5e76\u4e14\u5408\u6cd5\u6761\u4ef6\u4e3aa[j]-a[i]=a[k]-a[j],(\u5047\u8bbei<j<k),\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6bcf\u4e2aa[j],\u5982\u679c\u5b83\u524d\u9762\u7684\u67d0\u4e2aa[i],\u5728j\u7684\u524d\u9762\u6ca1\u6709a[k]=2*a[j]-a[i](\u8981\u4fdd\u8bc12*a[j]-a[i]<=n\u554a\uff0c\u4e0d\u7136\u8981\u627e\u7684a[k]\u503c\u4e0d\u5728\u5e8f\u5217\u91cc\u4e86),\u90a3\u4e48\u6ee1\u8db3\u6761\u4ef6\u7684a[k]\u5fc5\u5b9a\u5728\u5b83\u540e\u9762(\u67d0FYJdalao:\u5e9f\u8bdd\uff0c\u8fd9\u662f1~n\u7684\u6392\u5217\u597d\u4e0d\u597d\uff0c\u7528\u4f60\u8bf4?)\n    \u597d\u561b,\u5982\u679c\u6211\u4eec\u679a\u4e3ej,\u95ee\u9898\u5c31\u53d8\u6210\u6c42\u6709\u6ca1\u6709\u4e24\u4e2a\u6570i,k\u90fd\u5728j\u524d\u4e14a[i]+a[k]=2*a[j]\u4e86\uff0c\u5982\u679c\u6bcf\u4e2ai\u90fd\u80fd\u5728j\u524d\u627e\u5230\u8fd9\u6837\u4e00\u4e2ak\uff0c\u5f88\u660e\u663e\u8fd9\u4e2aj\u662f\u4e0d\u6ee1\u8db3\u7684\u3002\u5f00\u4e2a\u6876\u5b58\u4e0b\u6765\u5bf9\u6bd4\uff1f\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u4f18\u79c0\u7684n\u00b2\u505a\u6cd5\u4e86[\u624b\u52a8\u6ed1\u7a3d](\u76d7\u4e2a\u56fe)\n    ![\u6211\u8fc7\u53bb\u5c31\u662f\u4e00\u811a](https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1680736846,2262936555&fm=27&gp=0.jpg)\n    \u600e\u4e48log(n)\u505a\u5230\u67e5\u8be2\u6709\u65e0\u91cd\u590d\u5462\uff1f\u662f\u65f6\u5019\u4f7f\u7528hash\u795e\u6280\u4e86\u3002\u600e\u4e48\u52a8\u6001\u7ef4\u62a4hash\u503c\uff1f\u7ebf\u6bb5\u6811\u554a\u3002\u6211\u7ebf\u6bb5\u6811\u91cc\u5b58\u7684\u662f\u503c\u662f\u8868\u793a\u503c\u5728\u67d0\u4e2a\u533a\u95f4\u7684\u6570\u5b58\u4e0d\u5b58\u5728,\u4e8c\u8fdb\u5236\u538b\u4e00\u4e0b\u5c31\u597d\u4e86,\u5f00\u4e24\u9897\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e24\u4e2ahash\u503c\uff0c\u4e00\u4e2a\u6b63\u5411(\u4ece1\u5230n)\u5b58\u8fd9\u4e2a\u503c\u662f\u5426\u5b58\u5728(0\u548c1\u561b)\uff0c\u4e00\u4e2a\u9006\u5411(\u4ecen\u52301)\u5b58\u8fd9\u4e2a\u503c(\u9006\u5411\u5e72\u561b\uff1f\u4fdd\u6301\u5bf9\u5e94\u5173\u7cfb\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u5224\u65adhash\u503c\u662f\u5426\u76f8\u7b49\u5c31\u884c\u4e86)\uff0c\u4e0d\u5c31log(n)\u4e86\u561b\u3002\u8bbea[j]-a[i]=m,\u5982\u679ca[j]+m>n,\u90a3\u80af\u5b9a\u6ca1\u6709\u6570\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6(\u6240\u6709\u6570)\uff0c\u4e14a[i]\u8981>=1,\u90a3\u4e48m=min(n-a[j],a[j]-1)\u3002\u6211\u4eec\u8981\u627e\u7684a[i]\u533a\u95f4\u5c31\u662f[a[j]-m,a[j]-1],\u5bf9\u5e94\u7684a[k]\u533a\u95f4\u5c31\u662f[a[j]+1,a[j]+m](\u53cd\u5411\u5b58\u5c31\u5f88\u597d\u6ee1\u8db3\u5bf9\u5e94\u5173\u7cfb\u4e86,\u5982\u679c\u90fd\u662f\u6b63\u5411,\u540c\u4e00\u4e2a\u4f4d\u7f6e\u4ee3\u8868\u7684\u90fd\u662f\u7b2ci\u5c0f\u7684\uff0c\u5e76\u4e0d\u80fd\u5bf9\u5e94(\u5982\u679c\u6709\u53cd\u8f6c\u8fd9\u7c7b\u64cd\u4f5c\u5f53\u6211\u6ca1\u8bf4))\n    \u6700\u540e\u6ce8\u610f\u591a\u7ec4\u6570\u636e\uff0c\u8bb0\u5f97\u6e05\u7a7ahash\u6570\u7ec4\n```cpp\n\n#include<bits/stdc++.h>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<queue>\n#include<deque>\n#include<iostream>\n#define ll long long\n#define re register\n#define inf 0x7f7f7f7f\n#define inl inline\n//#define eps 1e-8\n#define debug printf(\"debug\\n\");\n//#pragma comment(linker, \"/STACK:1024000000,1024000000\")\n//#pragma GCC optimize (2)\n//#pragma G++ optimize (2)\nusing namespace std;\nconst ll mod=2147483647;//\u6a21\u6570\u662fint\u6700\u5927\u503c\uff0c\u4e00\u822c\u4e0d\u4f1a\u91cd,,,\u5427\uff1f \ninl ll read() {\n    re ll x = 0; re int f = 1;\n    char ch = getchar();\n    while(ch<'0'||ch>'9') { if(ch== '-' ) f = -1; ch = getchar(); }\n    while(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    return x * f;\n}\ninl void write(ll x){\n    if(x>=10)write(x/10);\n    putchar(x%10+'0');\n}\ninl void writeln(ll x){\n    if(x<0) {x=-x;putchar('-');}\n    write(x); puts(\"\");\n}//\u65e5\u5e38\u4e00\u5806\u5934\u6587\u4ef6+\u8bfb\u4f18,\u8f93\u51fa\u4f18\u5316 \nll ssw[10005];ll Pow[10005];\nll hash1[10005<<2],hash2[10005<<2];\nvoid pushup(ll x,ll m){\n    ll t=m>>1;\n    hash1[x]=(hash1[x<<1]*Pow[t]+hash1[x<<1|1])%mod;//hash1\u662f\u6b63\u5411\u7684 \n    hash2[x]=(hash2[x<<1|1]*Pow[m-t]+hash2[x<<1])%mod;//hash2\u53cd\u5411\u5b58\n}\nvoid update(ll val,ll l,ll r,ll x){//x\u53f7\u8282\u70b9\uff0c\u533a\u95f4\u4e3al\u5230r\uff0c\u8fd9\u6b21\u63d2\u5165\u7684\u503c\u4e3aval \n    if(l==r){hash1[x]=hash2[x]=1;return;}\n    ll mid=(l+r)>>1;\n    if(val<=mid) update(val,l,mid,x<<1);\n    else update(val,mid+1,r,x<<1|1);\n    pushup(x,r-l+1);\n}\nll query1(ll L,ll R,ll l,ll r,ll x){\n    if(L>R) return 0;\n    if(L==l&&r==R){return hash1[x];}\n    ll mid=(l+r)>>1;\n    if(R<=mid) return query1(L,R,l,mid,x<<1);\n    else if(L>mid) return query1(L,R,mid+1,r,x<<1|1);\n    else return (query1(L,mid,l,mid,x<<1)*Pow[R-mid]+query1(mid+1,R,mid+1,r,x<<1|1))%mod;//\u6b63\u5411\u627e \n}\nll query2(ll L,ll R,ll l,ll r,ll x){\n    if(L>R) return 0;\n    if(L==l&&r==R){return hash2[x];}\n    ll mid=(l+r)>>1;\n    if(R<=mid) return query2(L,R,l,mid,x<<1);\n    else if(L>mid) return query2(L,R,mid+1,r,x<<1|1);\n    else return (query2(L,mid,l,mid,x<<1)+query2(mid+1,R,mid+1,r,x<<1|1)*Pow[mid-L+1])%mod;//\u53cd\u5411\u627e \n}//\u7ebf\u6bb5\u6811\u5e38\u89c4\u64cd\u4f5c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u53ea\u662fhash2\u662f\u53cd\u5411\u5b58\u50a8\u7684 \nint main(){\n    re ll T=read();Pow[1]=3;\n    for(re ll i=2;i<=10000;i++) Pow[i]=(3*Pow[i-1])%mod;//pow\u4f1a\u91cd\u540d...\u7136\u540e\u542c\u8bf4\u4e0d\u9884\u5904\u7406\u4f1aT \n    while(T--){\n        memset(hash1,0,sizeof(hash1));\n        memset(hash2,0,sizeof(hash2));//\u8bb0\u5f97\u6e05\u7a7a \n        re ll n=read();\n        for(re ll i=1;i<=n;i++) ssw[i]=read();\n        bool flag=0;\n        for(ll i=1;i<=n;i++){\n            ll len=min(ssw[i]-1,n-ssw[i]);//\u786e\u4fdd\u6211\u4eec\u8981\u627e\u7684\u6570\u57281~n\u7684\u8303\u56f4\u5185 \n            if(query1(ssw[i]-len,ssw[i]-1,1,n,1)!=query2(ssw[i]+1,ssw[i]+len,1,n,1)){//\u627e\u5230\u7684\u4f4d\u7f6e\u76f8\u4e92\u662f\u5bf9\u5e94\u7684\uff0c\u76f4\u63a5\u5224\u65ad\u662f\u5426\u76f8\u7b49 \n                flag=1;break;//\u4e0d\u76f8\u7b49\u4e86\uff0ca[j]\u524d\u67d0\u4e00\u4e2aa[i]\u6ca1\u6709\u5bf9\u5e94\u7684a[k]\u5728a[j]\u524d\u9762\uff0c\u90a3\u8fd9\u4e2aa[k]\u80af\u5b9a\u5728a[j]\u540e\u9762\uff0c\u627e\u5230\u957f\u5ea6\u4e3a3\u7684\u4e86 \n            }\n            update(ssw[i],1,n,1);//\u628a\u8fd9\u6b21\u7684\u503c\u52a0\u5165\u7ebf\u6bb5\u6811 \n        }\n        puts(flag?\"Y\":\"N\");\n    }\n    return 0;\n}\n```\n    ",
        "postTime": 1531571851,
        "uid": 70280,
        "name": "Eziotao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2757 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u7b49\u5dee\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "# Link\n[P2757 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u7b49\u5dee\u5b50\u5e8f\u5217](https://www.luogu.com.cn/problem/P2757)\n\n# Solve\n\n\u5148\u8f6c\u5316\u4e00\u4e0b\u9898\u610f\uff0c\u5bf9\u4e8e\u4e00\u4e2a$a[i]$\u6211\u4eec\u5224\u65ad\u5982\u679c\u5b58\u5728\u4e00\u4e2a$a[i]+k$\u548c$a[i]-k$\u5728$a[i]$\u7684\u5f02\u4fa7\uff0c\u90a3\u4e48\u5c31\u5b58\u5728\u4e00\u4e2a\u89e3\uff0c\u8f93\u51fa$yes$\uff0c\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e2a$a[i]$\u90fd\u4e0d\u5b58\u5728\uff0c\u5c31\u8f93\u51fa$no$\u3002\n\n\u5982\u4f55\u5224\u65ad\u662f\u5426\u5b58\u5728$a[i]+k$\u548c$a[i]-k$\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u60f3\u5230\u4e86\u56de\u6587\uff0c\u5904\u7406\u6bcf\u4e2a$a[i]$\u65f6\uff0c\u6211\u4eec\u628a$a[i]$\u8fd9\u4e2a\u4f4d\u7f6e\u6253\u4e0a$1$\uff0c\u5982\u679c\u6b64\u65f6\u7684\u5e8f\u5217\u4e0d\u662f\u4ee5$a[i]$\u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\uff0c\u90a3\u4e48\u80af\u5b9a\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684$a[i]+k$\u6216\u8005$a[i]-k$\u5728$a[i]$\u540e\u9762\uff0c\u5c31\u5b58\u5728\u89e3\u4e86\uff0c\u5982\u679c\u662f\u56de\u6587\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a$a[i]$\u6bcf\u4e00\u4e2ak\uff0c$a[i]+k$\u548c$a[i]-k$\u90fd\u5728$a[i]$\u540c\u4fa7\u4e86\u3002\n\n\u5982\u4f55\u7ef4\u62a4\u56de\u6587\uff0c\u5f88\u5bb9\u6613\u7684\u60f3\u5230**\u7ebf\u6bb5\u6811+\u54c8\u5e0c**\uff0c\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u6b63\u7740\u54c8\u5e0c\u548c\u53cd\u8fc7\u6765\u54c8\u5e0c\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u5c31\u5efa\u4e24\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e00\u68f5\u8868\u793a\u6b63\u7740\u54c8\u5e0c\uff0c\u4e00\u68f5\u8868\u793a\u53cd\u7740\u54c8\u5e0c\uff0c\u53cd\u7740\u54c8\u5e0c\u7684\u6811\u7edf\u8ba1\u65f6\u5c31\u628a\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u4ea4\u6362\u5c31\u597d\u4e86\uff0c\u76f8\u5f53\u4e8e\u628a\u7ebf\u6bb5\u6811\u505a\u4e86\u4e00\u6b21\u5bf9\u79f0(\u8fd9\u4e48\u8bf4\u4e5f\u4e0d\u591f\u4e25\u8c28\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5c31\u597d\u4e86)\u3002\n\n\u591a\u7ec4\u6570\u636e\u6ce8\u610f\u4e00\u4e0b\u7ec6\u8282\n\n# Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=3e5+5,TT=1e9+7,bas=27;\ntypedef long long LL;\nint N,a[maxn],T,flg;\nLL pw[maxn];\nstruct node{\n\tLL val;\n\tint len;\n\tnode(const LL v=0,const int l=0){val=v;len=1;}\n}ta[maxn<<2],tb[maxn<<2];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch<='9'&&ch>='0')ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nnode merge(node l,node r){\n\tnode ret;\n\tret.val=(l.val*pw[r.len]%TT+r.val)%TT;\n\tret.len=l.len+r.len;\n\treturn ret;\n}\n\nvoid pushup(int k){\n\tta[k]=merge(ta[k<<1],ta[k<<1|1]);\n\ttb[k]=merge(tb[k<<1|1],tb[k<<1]);\n}\n\nvoid update(int k,int l,int r,int x){\n\tif(l==r){\n\t\tta[k]=tb[k]=node(1,1);\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid)update(k<<1,l,mid,x);\n\telse update(k<<1|1,mid+1,r,x);\n\tpushup(k);\n}\n\nnode query1(int k,int l,int r,int x,int y){\n\tif(x<=l&&r<=y)return ta[k];\n\tint mid=r+l>>1;\n\tif(y<=mid)return query1(k<<1,l,mid,x,y);\n\tif(mid<x)return query1(k<<1|1,mid+1,r,x,y);\n\treturn merge(query1(k<<1,l,mid,x,mid),query1(k<<1|1,mid+1,r,mid+1,y));\n}\n\nnode query2(int k,int l,int r,int x,int y){\n\tif(x<=l&&r<=y)return tb[k];\n\tint mid=r+l>>1;\n\tif(y<=mid)return query2(k<<1,l,mid,x,y);\n\tif(mid<x)return query2(k<<1|1,mid+1,r,x,y);\n\treturn merge(query2(k<<1|1,mid+1,r,mid+1,y),query2(k<<1,l,mid,x,mid));\n}\n\nvoid build(int k,int l,int r){\n\tif(l==r){\n\t\tta[k]=tb[k]=node(0,1);\n\t\treturn ;\n\t}\n\tint mid=r+l>>1;\n\tbuild(k<<1,l,mid);build(k<<1|1,mid+1,r);\n\tpushup(k);\n}\n\nint main(){\n\tfreopen(\"P2757.in\",\"r\",stdin);\n\tfreopen(\"P2757.out\",\"w\",stdout);\n\tT=read();\n\twhile(T--){\n\t\tint flg=0;\n\t\tN=read();\n\t\tpw[0]=1;\n\t\tfor(int i=1;i<=N;i++)pw[i]=pw[i-1]*bas%TT;\n\t\tbuild(1,1,N);\n\t\tfor(int i=1;i<=N;i++){\n\t\t\tint x=read();\n\t\t\tif(flg)continue;\n\t\t\tupdate(1,1,N,x);\n\t\t\tint k=min(x-1,N-x);\n\t\t\tif(k<=0) continue;\n\t\t\tif(query1(1,1,N,x-k,x-1).val!=\n\t\t\tquery2(1,1,N,x+1,x+k).val){\n\t\t\t\tprintf(\"Y\\n\");\n\t\t\t\tflg=1;\n\t\t\t}\n\t\t}\n\t\tif(!flg)printf(\"N\\n\");\t\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1603847010,
        "uid": 128822,
        "name": "OI\u754c\u7684\u5c0f\u6df7\u6df7",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2757 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u7b49\u5dee\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811+\u54c8\u5e0c\u597d\u9898\u3002qwaszx \u5b66\u957f\u8bb2\u5b57\u7b26\u4e32\u54c8\u5e0c\u7684\u65f6\u5019\u7528\u4e86\u8fd9\u4e2a\u9898\uff0c\u4e8e\u662f\u62ff\u6765\u7ec3\u624b\u3002\n\n\u5148\u8003\u8651\u4e00\u4ef6\u4e8b\u60c5\uff0c\u9898\u76ee\u95ee\u5b58\u4e0d\u5b58\u5728\u4e00\u4e2a\u957f\u5ea6\u4e0d\u5c0f\u4e8e $3$ \u7684\u7b49\u5dee\u5b50\u5e8f\u5217\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u957f\u5ea6**\u7b49\u4e8e** $3$ \u7684\u7b49\u5dee\u5b50\u5e8f\u5217\u5373\u53ef\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\u95ee\u9898\u4ece\u800c\u5f97\u5230\u5927\u5927\u7b80\u5316\u3002\n\n\u6bcf\u6b21\u8003\u8651\u4e09\u4e2a\u6570\uff0c\u90a3\u4e48\u4e2d\u9879\u5c31\u5341\u5206\u7279\u6b8a\u4e86\uff0c\u56e0\u4e3a\u548c\u53e6\u5916\u4e24\u9879\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u76f8\u7b49\u3002\u8fd9\u65f6\u5019\u8fd8\u6709\u4e00\u6761\u91cd\u8981\u6027\u8d28\uff1a\u7ed9\u51fa\u7684\u5e8f\u5217\u662f $1$ \u5230 $n$ \u7684\u6392\u5217\u3002\u6240\u4ee5\u5bf9\u4e8e\u4f4d\u7f6e $i$\uff0c\u5982\u679c\u4e00\u4e2a\u6570\uff08\u975e $a_i$\uff09\u4e0d\u5728\u5b83\u5de6\u8fb9\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u5728\u5b83\u7684\u53f3\u8fb9\uff08\u5e9f\u8bdd\uff09\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u5f88\u597d\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d\u5e8f\u5217\uff0c\u679a\u4e3e\u4e2d\u9879\uff0c\u5bf9\u4e8e\u5f53\u524d\u679a\u4e3e\u5230\u7684\u4e2d\u9879\u4e0b\u6807 $i$\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a $k$\uff0c\u4f7f\u5f97 $a_i-k$ \u548c $a_i+k$ \u8fd9\u4e24\u4e2a\u6570\u4e00\u4e2a\u5df2\u7ecf\u51fa\u73b0\u8fc7\uff0c\u4e00\u4e2a\u8fd8\u6ca1\u51fa\u73b0\u8fc7\uff08\u201c\u51fa\u73b0\u8fc7\u201d\u6307\u5df2\u7ecf\u626b\u8fc7\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u6570\u5728 $i$ \u5de6\u8fb9\uff09\uff0c\u6211\u4eec\u5c31\u80fd\u5224\u5b9a\u7b54\u6848\u4e3a\u5b58\u5728\u3002\n\n\u63a5\u4e0b\u6765\u4f18\u5316\u8fd9\u4e00\u8fc7\u7a0b\u3002\u6211\u4eec\u5047\u8bbe\u5efa\u7acb\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u521d\u59cb\u5168\u4e3a $0$\uff0c\u626b\u8fc7\u4e00\u4e2a\u6570 $a_i$ \u540e\u5c31\u628a\u6570\u7ec4\u4e0b\u6807 $a_i$ \u7684\u4f4d\u7f6e\u6807\u4e3a $1$\uff0c\u5982\u679c\u6211\u4eec\u4ee5 $a_i$ \u4e3a\u4e2d\u5fc3\u201c\u5bf9\u6298\u201d\u8fd9\u4e2a\u6570\u7ec4\uff0c\u82e5\u5bf9\u4e8e\u6240\u6709\u91cd\u5408\u7684\u4f4d\u7f6e\uff0c\u91cd\u5408\u7684\u4e24\u4e2a\u6570\u76f8\u7b49\uff0c\u5219\u8bf4\u660e\u5bf9\u4e8e\u6240\u6709\u5408\u6cd5\u7684 $k$\uff0c$a_i-k$ \u548c $a_i+k$ \u5fc5\u7136\u5728 $a_i$ \u540c\u4fa7\uff08\u4e5f\u5c31\u662f\u5bf9\u4e8e\u5f53\u524d\u7684\u4e2d\u5fc3\u7b54\u6848\u4e0d\u5b58\u5728\uff09\u3002\u5176\u5b9e\u662f\u4e00\u4e2a\u5224\u65ad\u56de\u6587\u7684\u8fc7\u7a0b\u3002\u8003\u8651\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\u505a\u8fd9\u4ef6\u4e8b\uff0c\u628a\u91cd\u5408\u90e8\u5206\u63d0\u53d6\u51fa\u6765\uff0c\u5982\u679c\u4e2d\u5fc3\u4f4d\u7f6e\u5de6\u534a\u8fb9\u5e8f\u5217\u7684\u54c8\u5e0c\u503c\u7b49\u4e8e\u53f3\u534a\u8fb9\u5e8f\u5217\u7684\u53cd\u5e8f\u5217\u7684\u54c8\u5e0c\u503c\uff0c\u90a3\u4e48\u5c31\u56de\u6587\uff0c\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u54c8\u5e0c\u548c\u53cd\u5e8f\u5217\u54c8\u5e0c\uff0c\u8fd9\u6837\u5bf9\u4e8e\u4e00\u4e2a $a_i$ \u5c31\u80fd\u5feb\u901f\u67e5\u8be2\u4e86\uff0c\u626b\u5b8c $a_i$ \u540e\u4e5f\u80fd\u5feb\u901f\u4fee\u6539\u3002\u533a\u95f4\u5408\u5e76\u5c31\u662f\u5b57\u7b26\u4e32\u54c8\u5e0c\u7684\u57fa\u672c\u64cd\u4f5c\u4e86\uff0c\u4e0d\u5fc5\u591a\u8bf4\u3002\n\nupd\uff1a\u7ebf\u6bb5\u6811\u4e0a\u4e00\u4e2a\u533a\u95f4\u7684\u201c\u53cd\u5e8f\u5217\u54c8\u5e0c\u201d\u6307\u7684\u662f\u628a\u539f\u5e8f\u5217\u4e2d\u8fd9\u4e00\u6bb5\u6570\u53d6\u51fa\uff0c\u7ffb\u8f6c\u540e\u6c42\u5f97\u7684\u54c8\u5e0c\u503c\u3002\u8fd9\u91cc\u7684\u54c8\u5e0c\u91c7\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\u7684\u7ef4\u62a4\u65b9\u5f0f\u3002\u636e\u67d0\u4e9b\u540c\u5b66\u7684\u79c1\u4fe1\uff0c\u8fd9\u91cc\u4f3c\u4e4e\u6709\u70b9\u8868\u610f\u4e0d\u6e05\u3002\n\n\u66f4\u591a\u7ec6\u8282\u770b\u4ee3\u7801\u5427\uff0c\u6709\u4e0d\u7406\u89e3\u7684\u5730\u65b9\u6216\u662f\u6709\u5199\u9519\u7684\u5730\u65b9\u6b22\u8fce\u79c1\u4fe1\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=500010,mod=1e9+7,P=13331;\ntypedef long long ll;\nint read(){\n\tint ss=0,ww=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')\n\t\t\tww=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tss=ss*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn ss*ww;\n}\nint T,n;\nll p[N];\nll hash1[N*4],hash2[N*4];\nint a[N];\nint min(int x,int y){\n\treturn x<y?x:y;\n}\nvoid upd(int root,int l,int r){\n\tint mid=(l+r)/2;\n\thash1[root]=(hash1[root*2+1]+hash1[root*2]*p[r-mid]%mod)%mod;\n\thash2[root]=(hash2[root*2]+hash2[root*2+1]*p[mid-l+1]%mod)%mod;\n}\nvoid add(int root,int l,int r,int x){\n\tif(l==r){\n\t\thash1[root]=hash2[root]=1;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tif(mid>=x)\n\t\tadd(root*2,l,mid,x);\n\telse\n\t\tadd(root*2+1,mid+1,r,x);\n\tupd(root,l,r);\n}\nll res1,res2,nw;\nvoid ask1(int root,int l,int r,int x,int y){\n\tif(l>=x&&r<=y){\n\t\tres1=(res1+hash1[root]*p[nw]%mod)%mod;\n\t\tnw+=(r-l+1);\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tif(mid+1<=y)\n\t\task1(root*2+1,mid+1,r,x,y);\n\tif(mid>=x)\n\t\task1(root*2,l,mid,x,y);\t\n}\nvoid ask2(int root,int l,int r,int x,int y){\n\tif(l>=x&&r<=y){\n\t\tres2=(res2+hash2[root]*p[nw]%mod)%mod;\n\t\tnw+=(r-l+1);\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tif(mid>=x)\n\t\task2(root*2,l,mid,x,y);\n\tif(mid+1<=y)\n\t\task2(root*2+1,mid+1,r,x,y);\n}\nint main(){\n\tT=read();\n\tp[0]=1;\n\tfor(int i=1;i<=5e5;i++)\n\t\tp[i]=p[i-1]*P%mod;\n\twhile(T--){\n\t\tmemset(hash1,0,sizeof(hash1));//\u591a\u6d4b\u8bb0\u5f97\u6e05\u7a7a\n\t\tmemset(hash2,0,sizeof(hash2));\n\t\tn=read();\n\t\tfor(int i=1;i<=n;i++)\n\t\t\ta[i]=read();\n\t\tbool flag=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tadd(1,1,n,a[i]);\n\t\t\tint len=min(a[i],n-a[i]+1);\n\t\t\tres1=res2=nw=0;\n\t\t\task1(1,1,n,a[i]-len+1,a[i]+len-1);\n\t\t\tnw=0;\n\t\t\task2(1,1,n,a[i]-len+1,a[i]+len-1);\n\t\t\tif(res1!=res2){\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag)\n\t\t\tcout<<\"Y\\n\";\n\t\telse\n\t\t\tcout<<\"N\\n\";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1660187566,
        "uid": 140360,
        "name": "LKawaii",
        "ccfLevel": 0,
        "title": "P2757 \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u849f\u84bb\u505a\u4e86\u6574\u6574 $4$ \u4e2a\u5c0f\u65f6\u624d\u505a\u51fa\u6765\uff0c\u6240\u4ee5\u7279\u610f\u5199\u4e00\u7bc7\u9898\u89e3\u8bb0\u5f55\u5e76\u8b66\u793a\u540e\u4eba\u3002\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P2757)\n\n[\u53cc\u500d\u7ecf\u9a8c\u597d\u8bc4](https://www.luogu.com.cn/problem/CF452F)\n\n[\u535a\u5ba2\u98df\u7528\u66f4\u4f73\u54e6](https://www.cnblogs.com/windseekerblog/p/16545871.html)\n\n### \u6838\u5fc3\u505a\u6cd5\n\n~~\u8fd9\u4e2a\u505a\u6cd5\u4e0d\u662f\u849f\u84bb\u60f3\u5230\u7684\uff0c\u849f\u84bb\u8fd8\u662f\u592a\u83dc\u3002~~\n\n\u601d\u8def\u4e3b\u8981\u662f\u679a\u4e3e\u4e00\u4e2a\u4e2d\u95f4\u6570 $a[i]$ \u7136\u540e\u5224\u65ad $a[i]+k$ \u548c $a[i]-k$ \u662f\u5426\u5728 $a[i]$ \u7684\u5f02\u4fa7\u3002\n\n\u7531\u4e8e\u679a\u4e3e $a[i]$ \u5f88\u96be\u4f18\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u4f18\u5316\u5224\u65ad $a[i]+k$ \u548c $a[i]-k$ \u3002\n\n\u5177\u4f53\u505a\u6cd5\u662f\u5728\u539f\u6570\u5217\u4e0a\u6807\u8bb0\u5728 $a[i]$ \u5de6\u8fb9\u7684\u4e3a $1$\uff0c$a[i]$ \u53f3\u8fb9\u7684\u4e3a $0$\u3002\n\n\u7136\u540e\u6211\u4eec\u60f3\uff0c\u5982\u679c\u8fd9\u91cc\u65b0\u5efa\u4e00\u4e2a $1$ \u5230 $n$ \u7684 $01$ \u4e32\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u6570\u5b57\u7684 $01$ \u72b6\u6001\uff0c\u90a3\u4e48\u5f53\u6240\u6709\u7684 $a[i]+k$ \u548c $a[i]-k$ \u90fd\u5728 $a[i]$ \u7684\u540c\u4fa7\u7684\u8bdd\uff08\u4e0d\u6ee1\u8db3\u65f6\uff09\uff0c\u4e5f\u5c31\u610f\u5473\u7740 $a[i]+k$ \u548c $a[i]-k$ \u662f\u540c\u4e00\u4e2a $01$ \u72b6\u6001\uff0c\u90a3\u4e48\u4ee5 $a[i]$ \u4e3a\u4e2d\u5fc3\uff0c\u4e24\u7aef\u4e0d\u8d85\u8fc7\u8fb9\u754c\u7684 $01$ \u4e32\u662f\u4e0d\u662f\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a**\u56de\u6587\u4e32**\u4e86\u5462\u3002\n\n\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u4ece\u5176\u4ed6\u9898\u89e3\u5927\u5bb6\u4e5f\u53ef\u77e5\u9053\u3002\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4 hash \u503c\uff0c\u5de6\u8fb9\u6b63 hash \u503c\u7b49\u4e8e\u53f3\u8fb9\u53cd hash \u503c\u65f6\uff0c\u5176\u4e3a\u56de\u6587\u4e32\u3002\n\n### \u5b9e\u9645\u64cd\u4f5c\n\n1. \u66f4\u65b0 $01$ \u4e32\u3002  \n\u6211\u4eec\u6bcf\u6b21\u679a\u4e3e\u5230 $a[i]$ \u7684\u65f6\u5019\u5c06 $a[i-1]$ \u8d4b\u503c\u4e3a $1$\u3002\n\n2. \u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002  \n\u6211\u4eec\u6bcf\u4e00\u4e2a\u8282\u70b9\u7ef4\u62a4\u5b83\u6240\u5b50\u5b59\u4e2d\u7684\u6240\u6709\u53f6\u5b50\u8282\u70b9(\u53f6\u5b50\u7ed3\u70b9\u8bb0\u5f55\u7684\u5c31\u662f\u6570\u5217\u4e0a\u7684\u6570)\u7684\u6b63\u53cd hash \u503c\uff0c\u548c\u5b83\u5b50\u5b59\u4e2d\u7684\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\uff0c\u8bb0\u5f55\u4e3a\u957f\u5ea6\u3002\u6bcf\u6b21\u4e0a\u4f20\u5c06\u5176\u4e0e\u53e6\u4e00\u4e2a\u5b83\u7236\u4eb2\u7684\u513f\u5b50\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\u3002\n\n3. \u5177\u4f53\u5408\u5e76\u64cd\u4f5c\u3002  \n\u849f\u84bb\u548c\u673a\u623f\u53e6\u4e00\u4e2a\u849f\u84bb\u60f3\u5230\uff0c\u65e2\u7136\u662f $01$ \u4e32\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u91c7\u7528\u4e8c\u8fdb\u5236\uff0c\u5408\u5e76\u7684\u65f6\u5019\u5de6\u79fb\u548c\u53f3\u79fb\u5373\u53ef\uff0c\u540e\u6765\u8c03\u4e86\u5f88\u4e45\u6ca1\u6709\u505a\u51fa\u6765\uff0c\u6570\u636e\u4e00\u5927\u5168\u90fd\u6302\u4e86\uff0c\u662f\u56e0\u4e3a**\u76f4\u63a5\u5de6\u79fb\u548c\u53f3\u79fb\u8fc7\u5927**\uff0c\u6240\u4ee5\u8981\u8fdb\u884c**\u9884\u5904\u7406\u64cd\u4f5c**\u3002\n\n4. \u6b63 hash \u503c\u548c\u53cd hash \u503c\u3002  \n- \u7b97\u6b63 hash \u503c\u65f6\uff0c\u5de6\u513f\u5b50\u6b63 hash \u503c\u5de6\u79fb\u53f3\u513f\u5b50\u7684\u957f\u5ea6\u540e\uff0c\u4e0e\u53f3\u513f\u5b50\u7684\u6b63 hash \u503c\u76f8\u52a0\u3002\n- \u7b97\u53cd hash \u503c\u65f6\uff0c\u53f3\u513f\u5b50\u53cd hash \u503c\u5de6\u79fb\u5de6\u513f\u5b50\u7684\u957f\u5ea6\u540e\uff0c\u4e0e\u5de6\u513f\u5b50\u7684\u53cd hash \u503c\u76f8\u52a0\u3002\n- \u76f4\u63a5 push_up \u65f6\u5de6/\u53f3\u79fb\u957f\u5ea6\u4e3a\u53e6\u4e00\u513f\u5b50\u8bb0\u5f55\u7684\u957f\u5ea6\uff0c\u4f46\u662f query \u7684\u65f6\u5019\u53ef\u80fd\u5e76\u6ca1\u6709\u8bbf\u95ee\u67d0\u4e00\u8282\u70b9\u5b50\u5b59\u7684\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8fdb\u884c\u53d6 $\\min$ \u64cd\u4f5c\u540e\u5de6/\u53f3\u79fb\u3002\n\n5. \u5224\u65ad\u662f\u5426\u5b58\u5728\u3002 \n\u5de6\u8fb9\u53d6\u6b63 hash \u503c\u548c\u53f3\u8fb9\u53d6\u53cd hash \u503c\u76f8\u7b49\u7684\u65f6\u5019\u4e3a\u56de\u6587\u4e32\uff0c\u5f53\u524d\u4e2d\u5fc3\u7684\u7b49\u5dee\u6570\u5217\u4e0d\u5b58\u5728\uff0c\u4e00\u65e6\u51fa\u73b0\u4e0d\u76f8\u7b49\uff0c\u5219\u5b58\u5728\u3002\n\n6. \u4e00\u4e9b\u5c0f\u5751\u70b9\uff08\u53ef\u80fd\u53ea\u6709\u672c\u849f\u84bb\u4f1a\u9519\uff09\u3002\n- \u6bcf\u6b21\u4e00\u5b9a\u8981\u91cd\u65b0 build\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u6bcf\u4e00\u4e2a\u503c\u90fd\u9700\u8981\u6e05\u7a7a\u540e\u91cd\u65b0\u8d4b\u503c\u3002\n- \u8bb0\u5f97\u5148\u9884\u5904\u7406\u5de6\u79fb\u64cd\u4f5c\u548c\u53f3\u79fb\u64cd\u4f5c\u3002\n- \u9047\u5230 $a[i]=1$ \u6216 $a[i]=n$ \u65f6\u76f4\u63a5\u8df3\u8fc7\u3002\n- \u4e00\u5b9a\u8bb0\u5f97\u8981\u5f00 longlong\u3002\n\n### code\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define ls rt<<1\n#define rs rt<<1|1\n#define lson ls,l,mid\n#define rson rs,mid+1,r\nusing namespace std;\nconst int N=5e5+10,mod=1e9+7;\nint T,n,maxn,minn,a[N],base[N];\nstruct node{\n\tint sum[2],len;//sum[0]\u8bb0\u5f55\u6b63hash\u503c\uff0csum[1]\u8bb0\u5f55\u53cdhash\u503c\n}t[N<<2];\nbool flag=false;\ninline int read(){\n\tchar ch=getchar();int res=0,f=1;\n\twhile(ch<'0'||'9'<ch){if(ch=='-')f=-1;ch=getchar();}\n\twhile('0'<=ch&&ch<='9') res=res*10+ch-'0',ch=getchar();\n\treturn res*f;\n}\nvoid init(){\n\tbase[0]=1;\n\tfor(int i=1;i<=N-10+1;i++)\n\t\tbase[i]=base[i-1]*2ll%mod;\n}\nvoid pushup(int rt){\n\tt[rt].sum[0]=((t[ls].sum[0]*base[t[rs].len])%mod+t[rs].sum[0])%mod;\n\tt[rt].sum[1]=((t[rs].sum[1]*base[t[ls].len])%mod+t[ls].sum[1])%mod;\n}\nvoid build(int rt,int l,int r){\n\tif(l==r){t[rt].len=1,t[rt].sum[0]=t[rt].sum[1]=0;return;}\n\tint mid=(l+r)>>1;\n\tbuild(lson),build(rson);\n\tt[rt].len=t[ls].len+t[rs].len;\n\tt[rt].sum[0]=t[rt].sum[1]=0;\n}\nvoid update(int rt,int l,int r,int x){\n\tif(l==r){t[rt].sum[0]=t[rt].sum[1]=1;return;}\n\tint mid=(l+r)>>1;\n\tif(x<=mid) update(lson,x);\n\telse update(rson,x);\n\tpushup(rt);\n}\ninline int query(int rt,int l,int r,int ql,int qr,int k){//k\u4e3a0\u662f\u6c42\u6b63hash\u503c\uff0c1\u662f\u6c42\u53cdhash\u503c\n\tif(ql<=l&&r<=qr) return t[rt].sum[k];\n\tint mid=(l+r)>>1,Llen=max(mid-max(l,ql)+1,0ll),Rlen=max(min(r,qr)-mid,0ll),res=0;\n\tif(!k){\n\t\tif(ql<=mid) res+=(query(lson,ql,qr,k)*base[Rlen])%mod;//\u5de6\u6b63hash\u79fb\u53f3\u513f\u5b50\u957f\u5ea6\n\t\tif(mid<qr) res+=query(rson,ql,qr,k)%mod;\n\t}\n\telse{\n\t\tif(ql<=mid) res+=query(lson,ql,qr,k)%mod;\n\t\tif(mid<qr) res+=(query(rson,ql,qr,k)*base[Llen])%mod;//\u53f3\u53cdhash\u79fb\u5de6\u513f\u5b50\u957f\u5ea6\n\t}\n\treturn res%mod;\n}\nsigned main(){\n\tT=read();init();//\u9884\u5904\u7406\u5de6\u79fb\u53f3\u79fb\u64cd\u4f5c\n\twhile(T--){\n\t\tn=read(),flag=false;build(1,1,n);//\u9884\u5904\u7406\n\t\tfor(int i=1;i<=n;i++) a[i]=read();\n\t\tfor(int i=2;i<n;i++){\n\t\t\tupdate(1,1,n,a[i-1]);//\u66f4\u65b0\u4e0a\u4e00\u4f4d\u4e3a1\n\t\t\tif(a[i]==1||a[i]==n) continue;//1,n\u76f4\u63a5\u8df3\u8fc7\n\t\t\tint L=min(a[i]-1,n-a[i]);\n\t\t\tif(query(1,1,n,a[i]-L,a[i]-1,0)!=query(1,1,n,a[i]+1,a[i]+L,1)){//\u4e0d\u76f8\u7b49\uff0c\u4e0d\u4e3a\u56de\u6587\u4e32\n\t\t\t\tputs(\"Y\"),flag=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flag) puts(\"N\");\n\t}\n\treturn 0;\n}\n//\u4e00\u7ec4no\u7684\u6570\u636e\n/*\n1\n10\n1 9 5 3 7 2 10 6 4 8 \n*/\n/*\nN\n*/\n```",
        "postTime": 1659491403,
        "uid": 557385,
        "name": "cjlak1o1",
        "ccfLevel": 0,
        "title": "P2757 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u7b49\u5dee\u5b50\u5e8f\u5217 \u9898\u89e3"
    },
    {
        "content": "\u53cc\u500d\u7ecf\u9a8c\uff1aCF452F Permutation\n\n**\u7ebf\u6bb5\u6811+\u54c8\u5e0c**\n\n~~\u6211\u83dc\u6b7b\u4e86\u8c03\u4e86\u597d\u4e45\u7136\u540e\u641e\u4e86\u534a\u5929\u624d AC\uff0c~~ \u6240\u4ee5\u5728\u4ee3\u7801\u4e2d\u4f1a\u63d0\u5230\u4e00\u4e9b\u5751\u70b9\n\n\n## \u5206\u6790\n\n\u663e\u7136\u7684\uff0c\u53ea\u8981\u627e\u5230\u4e09\u5143\u7b49\u5dee\u6570\u5217\u5373\u53ef\uff0c\u56e0\u4e3a\n\n- \u9898\u76ee\u8981\u6c42 $len\\geq3$\uff0c\u6240\u4ee5\u53ea\u7528\u6ee1\u8db3\u6700\u4f4e\u6761\u4ef6\n- \u66f4\u591a\u5143\u7684\u90fd\u662f\u5728\u4e09\u5143\u7684\u57fa\u7840\u4e0a\u7684 ~~\u4e09\u751f\u4e07\u7269\uff08~~\n\n\u5bf9\u4e8e\u4e09\u5143\u7b49\u5dee\u6570\u5217\uff0c\u6709\u4e00\u4e2a\u5e38\u89c1\u6280\u5de7\u5c31\u662f\u679a\u4e3e\u4e2d\u503c $b=a_i$\uff0c\u7136\u540e\u627e $b-k,b+k$ \u662f\u5426\u5728\u540c\u4fa7\uff0c\u5982\u679c\u5728\u540c\u4fa7\u5c31\u5bc4\u4e86\uff0c\u4e0d\u5728\u5c31\u8d62\u4e86\n\n\u5982\u679c\u66b4\u529b\u679a\u4e3e $b,k$ \u90a3\u5c31\u662f\u5e73\u65b9\u7ea7\u522b\u4e86\uff0c\u59a5\u59a5 TLE\n\n\u8003\u8651\u4f18\u5316\uff0c\u5bf9\u4e8e\u679a\u4e3e $b$\uff0c\u65e0\u6cd5\u4f18\u5316\uff0c\u53ea\u80fd\u8003\u8651\u4f18\u5316 $k$ \u7684\u5bfb\u627e\n\n\u52a8\u6001\u7ef4\u62a4\u5b58\u5728\u6027 01 \u4e32\uff0c\u8868\u793a\u6bcf\u4e00\u4e2a\u6570\u662f\u5426\u5728\u5de6\u8fb9\u51fa\u73b0\uff0c\u5728\u53f3\u8fb9\u662f\u5426\u51fa\u73b0\uff0c\u5982\u679c\u662f\u56de\u6587\u4e32\uff0c\u90a3\u5c31\u5bc4\u4e86\uff0c\u56e0\u4e3a\u4e00\u5927\u4e00\u5c0f\u5168\u90e8\u96c6\u4e2d\u5728\u5de6\u4fa7\u6216\u53f3\u4fa7\uff0c\u5426\u5219\u5c31\u8d62\u4e86\n\n\u5982\u4f55\u5feb\u901f\u5224\u65ad\u56de\u6587\uff1f\u5b57\u7b26\u4e32\u54c8\u5e0c\uff0c\u5982\u679c\u6b63\u7740\u7684\u54c8\u5e0c\u7b49\u4e8e\u53cd\u7740\u7684\u54c8\u5e0c\uff0c\u90a3\u4e48\u5c31\u56de\u6587\n\n\u90a3\u4e48\u5c31\u662f\u641e\u4e00\u4e2a $\\log$ \u7ea7\u7684\u52a8\u6001\u7ef4\u62a4\u54c8\u5e0c\u503c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u957f\u5ea6\u548c\u6b63\u53cd\u54c8\u5e0c\u503c\n\n\u6ca1\u4e86\uff0c\u601d\u8def\u5c31\u8fd9\u4e48\u7b80\u5355\n\n## \u4ee3\u7801\n\n\u5982\u679c\u6ca1\u6709\u6df1\u5165\u7406\u89e3\u7684\u8bdd\u5751\u70b9\u4f1a\u6bd4\u8f83\u591a\uff0c\u6240\u4ee5\u7ed3\u5408\u6ce8\u91ca\u98df\u7528\n\n```cpp\n#include <bits/stdc++.h>\n#define ll unsigned long long\n#define inl inline\n#define rep(i,a,b) for(int i=(a),i##end=(b);i<=i##end;++i)\n#define pre(i,a,b) for(int i=(a),i##end=(b);i>=i##end;--i)\nusing namespace std;\nconst int N=5e5+10,mod=1e9+7,B=27;\nstruct Node{\n\tll h1,h2;int l1,l2;\n\tNode(const ll v=0,const int l=0){h1=h2=v;l1=l2=1;}\n}t[N<<2];//\u8fd9\u91cc\u7528\u4e86\u4e00\u4e2a\u5927\u7ed3\u6784\u4f53\uff0ch1,h2 \u662f\u6b63\u53cd\u54c8\u5e0c\u503c\uff0cl1,l2\u8868\u793a\u957f\u5ea6\nint n,a[N],T;\nll p[N];\nbool flag;\nNode comp(Node x,Node y){\n\tNode tmp;\n\ttmp.h1=(x.h1*p[y.l1]%mod+y.h1)%mod;\n\ttmp.h2=(y.h2*p[x.l2]%mod+x.h2)%mod;//\u8bf7\u6ce8\u610f h2 \u8868\u793a\u53cd\u54c8\u5e0c\uff0c\u6240\u4ee5\u8981\u76f8\u5bf9\u4e8e\u6b63\u54c8\u5e0c\u53cd\u7740\u64cd\u4f5c\uff0c\u8981\u4e0d\u7136\u5c31 WA 16 pts\n\ttmp.l1=x.l1+y.l1;tmp.l2=x.l2+y.l2;\n\treturn tmp;\n}//\u5408\u5e76\u64cd\u4f5c\uff0c\u7528\u4e8e\u4e0a\u4f20\nnamespace Tree{\n\t#define ls k<<1\n\t#define rs k<<1|1\n\t#define mid (l+r>>1)\n\t#define pushup(k) t[k]=comp(t[ls],t[rs])\n\tinl void update(int k,int l,int r,int x){\n\t\tif(x<l||x>r)return ;\n\t\tif(l==r){\n\t\t\tNode tmp;tmp.h1=tmp.h2=1;tmp.l1=tmp.l2=1;\n\t\t\tt[k]=tmp;\n\t\t\treturn ;\n\t\t}\n\t\tupdate(ls,l,mid,x);update(rs,mid+1,r,x);pushup(k);\n\t}\n\tinl void build(int k,int l,int r){\n\t\tif(l==r){\n\t\t\tNode tmp;tmp.h1=tmp.h2=0;tmp.l1=tmp.l2=1;\n\t\t\tt[k]=tmp;\n\t\t\treturn ;\n\t\t}\n\t\tbuild(ls,l,mid);build(rs,mid+1,r);pushup(k);\n\t}\n\tNode query(int k,int l,int r,int x,int y){\n\t\tif(x<=l&&y>=r)return t[k];\n\t\tif(y<=mid)return query(ls,l,mid,x,y);\n\t\tif(mid<x)return query(rs,mid+1,r,x,y);\n\t\treturn comp(query(ls,l,mid,x,mid),query(rs,mid+1,r,mid+1,y));\n\t}\n}\nusing namespace Tree;\nsigned main(void){\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\tint T;cin>>T;\n\twhile(T--){\n\t\t// rep(i,1,N<<2)t[i].h1=t[i].h2=t[i].l1=t[i].l2=0;\n\t\tp[0]=1;flag=0;\n\t\tcin>>n;\n\t\trep(i,1,n)p[i]=p[i-1]*B%mod;\n\t\tbuild(1,1,n);\n\t\trep(i,1,n){\n\t\t\tint x;cin>>x;//\u4e0d\u8bba\u662f\u5426\u627e\u5230\u4e86\u4e09\u5143\u7b49\u5dee\u6570\u5217\uff0c\u90fd\u8981\u8bfb\u5b8c\uff08\u4e00\u4e0a\u6765\u56e0\u4e3a\u8fd9\u4e2a\u5bc4\u4e86\u4e00\u53d1\uff09\n\t\t\tif(flag)continue;\n\t\t\tupdate(1,1,n,x);\n\t\t\tint len=min(x-1,n-x);\n\t\t\tif(len<=0)continue;//\u4e0d\u5408\u6cd5\u7279\u5224\n\t\t\tif(query(1,1,n,x-len,x-1).h1!=query(1,1,n,x+1,x+len).h2){//\u5982\u679c\u6b63\u54c8\u5e0c\u4e0d\u7b49\u4e8e\u53cd\u54c8\u5e0c\uff0c\u627e\u5230\u4e86\n\t\t\t\tcout<<\"Y\\n\";flag=1;\n\t\t\t}\n\t\t}\n\t\tif(!flag)cout<<\"N\\n\";\n\t}\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1\uff01",
        "postTime": 1658209979,
        "uid": 555059,
        "name": "Stannum7507",
        "ccfLevel": 4,
        "title": "P2757 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u7b49\u5dee\u5b50\u5e8f\u5217"
    },
    {
        "content": "- \u795e\u5947\u7684 trick\u3002\n- \u89c2\u5bdf\u5230 $a$ \u662f\u6392\u5217\uff0c\u8fd9\u662f\u4e2a\u5f88\u6709\u7528\u7684\u6027\u8d28\u3002\n- \u6211\u4eec\u4ece\u5de6\u5230\u53f3\u904d\u5386 $a$ \u6570\u7ec4\u3002\u7ef4\u62a4\u4e00\u4e2a $01$ \u4e32\uff0c\u521d\u59cb\u5168\u662f $0$\uff0c\u626b\u5230 $a_i$ \u5c31\u628a $01$ \u4e32\u7684\u7b2c $i$ \u4f4d\u8bbe\u7f6e\u4e3a $1$\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u8bbe\u4e00\u6574\u6570 $j$ \u6ee1\u8db3 $a_i-j \\in [1,n], a_i+j \\in [1,n], a_i-j=1, a_i+j=0$\uff0c\u5373 $a_i-j$\u3001$a_i$\u3001$a_i+j$ \u4e09\u4e2a\u6570\u5728 $a$ \u4e2d\u6b63\u597d\u987a\u5e8f\u6392\u5217\uff0c\u5219\u8fd9\u4e09\u4e2a\u6570\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a $3$ \u7684\u7b49\u5dee\u5b50\u5e8f\u5217\u3002\n- \u8003\u8651\u5982\u4f55\u5728\u52a0\u5165\u4e00\u4e2a\u6570\u7684\u65f6\u5019\u5feb\u901f\u68c0\u67e5\u4e0a\u9762\u7684\u5224\u65ad\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0a\u9762\u7684\u5f62\u5f0f\u53ef\u4ee5\u8f6c\u5316\u6210\u68c0\u67e5 $01$ \u4e32\u662f\u5426\u5173\u4e8e $a_i$ \u4e3a\u4e2d\u5fc3\u5bf9\u79f0\u3002\u68c0\u67e5\u56de\u6587\u4e32\u7684\u65b9\u5f0f\u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u5b50\u4e32\u7684 hash \u503c\u548c\u628a\u5b57\u7b26\u4e32\u524d\u540e\u7ffb\u8f6c\u65f6\u5b50\u4e32\u7684 hash \u503c\uff0c\u5224\u65ad\u8fd9\u4e24\u4e2a\u503c\u662f\u5426\u76f8\u7b49\u6765\u5224\u5b9a\u662f\u5426\u56de\u6587\u3002\n- \u65f6\u95f4\u590d\u6742\u5ea6 $O(Tn\\log n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n```cpp\nconst int N = 2e6 + 9;\nconst int mo = 1000000021;\nint n, pw[N];\nstruct Seg {\n  struct T {\n    int ha, har;\n  } d[N];\n\n  void Up(int u, int l, int r) {\n    int mid = (l + r) >> 1;\n    d[u].ha = 1ll * d[u << 1].ha * pw[r - mid] % mo;\n    d[u].ha += 1ll * d[u << 1 | 1].ha, umod(d[u].ha);\n    d[u].har = 1ll * d[u << 1 | 1].har * pw[mid - l + 1] % mo;\n    d[u].har += 1ll * d[u << 1].har, umod(d[u].har);\n  }\n\n  void Cha(int p, int x, int u, int l, int r) {\n    if (l == r) return d[u].ha = d[u].har = x, void();\n    int mid = (l + r) >> 1;\n    if (p <= mid)\n      Cha(p, x, u << 1, l, mid);\n    else\n      Cha(p, x, u << 1 | 1, mid + 1, r);\n    Up(u, l, r);\n  }\n\n  int Ha(int L, int R, int u, int l, int r) {\n    if (L <= l && r <= R) return d[u].ha;\n    int mid = (l + r) >> 1;\n    if (R <= mid) return Ha(L, R, u << 1, l, mid);\n    if (mid + 1 <= L) return Ha(L, R, u << 1 | 1, mid + 1, r);\n    return (1ll * Ha(L, R, u << 1, l, mid) * pw[min(r, R) - mid] % mo +\n            Ha(L, R, u << 1 | 1, mid + 1, r)) %\n           mo;\n  }\n\n  int Har(int L, int R, int u, int l, int r) {\n    if (L <= l && r <= R) return d[u].har;\n    int mid = (l + r) >> 1;\n    if (R <= mid) return Har(L, R, u << 1, l, mid);\n    if (mid + 1 <= L) return Har(L, R, u << 1 | 1, mid + 1, r);\n    return (1ll * Har(L, R, u << 1 | 1, mid + 1, r) * pw[mid + 1 - max(l, L)] % mo +\n            Har(L, R, u << 1, l, mid)) %\n           mo;\n  }\n} seg;\n\nvoid Work() {\n  cin >> n;\n  memset(seg.d, 0, sizeof(*seg.d) * (n * 4 + 1));\n  bool fl = 0;\n  re (i, n) {\n    int x;\n    cin >> x;\n    if (fl) continue;\n    seg.Cha(x, 1, 1, 1, n);\n    int len = min(n - x, x - 1), ha = seg.Ha(x, x + len, 1, 1, n),\n        har = seg.Har(x - len, x, 1, 1, n);\n    if (ha != har) cout << \"Y\\n\", fl = 1;\n  }\n  if (!fl) cout << \"N\\n\";\n}\n```",
        "postTime": 1649512063,
        "uid": 207996,
        "name": "yzy1",
        "ccfLevel": 9,
        "title": "P2757 \u9898\u89e3"
    },
    {
        "content": "### \u601d\u8def\n\u7b80\u5316\u9898\u610f\uff0c\u627e\u5230\u4e00\u4e2a\u4e09\u4e2a\u6570\u7684\u7b49\u5dee\u6570\u5217\u5c31\u884c\u4e86\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u53bb\u679a\u4e3e\u4e2d\u95f4\u6570\u503c\uff0c\u5224\u65ad\u53e6\u5916\u4e24\u4e2a\u6570\u503c\u662f\u5426\u90fd\u5728\u5de6\u4fa7\n\n\u52a8\u6001\u7ef4\u62a4\u5b58\u5728\u602701\u5e8f\u5217\uff0c\u770b\u770b\u6709\u54ea\u4e9b\u6570\u5b57\u5df2\u7ecf\u5728\u5de6\u8fb9\u51fa\u73b0\u8fc7\uff0c\u5982\u679c\u8fd9\u4e2a\u5e8f\u5217\u662f\u56de\u6587\u5e8f\u5217\uff0c\u8bf4\u660e\u52a0\u51cf\u516c\u5dee\u540e\u7684\u6570\u503c\u90fd\u5728\u8fd9\u4e2a\u4e2d\u70b9\u7684\u4e00\u7aef\uff0c\u56e0\u6b64\u65e0\u89e3\u3002\u53cd\u4e4b\u5219\u6709\u89e3\n### \u89e3\u6cd5\n~~\u6ca1\u6709\u96be\u7684\u9898\u76ee\uff0c\u53ea\u6709\u96be\u7684\u6570\u636e\u7ed3\u6784~~\n\n\u5982\u4f55\u5feb\u901f\u5224\u65ad\u56de\u6587\uff1fHash\n\n\u5982\u4f55\u52a8\u6001\u66f4\u65b0\u533a\u95f4\u7684Hash\uff1f\u7ebf\u6bb5\u6811\n\n\u5b8c\u4e8b\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef unsigned long long  ull;\nconst ull N=600005;\nconst ull B=13331;\nint n,T;\null p[N];\nint x[N];\nstruct Segment{\n\tint l;\n\tint r;\n\tull h1;\n\tull h2;//\u6ce8\u610f\u7c7b\u578b\n\t\n}tr[4*N];//\u7ebf\u6bb5\u6811\u91cc\u8bb0\u5f55\u6b63\u54c8\u5e0c\u548c\u53cd\u54c8\u5e0c\nvoid input(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&x[i]); \n}\nvoid init(){//\u591a\u7ec4\u6570\u636e\u8bb0\u5f97\u521d\u59cb\u5316\n\tfor(int i=1;i<=4*500001;i++){\n\t\ttr[i]=(Segment){0,0,0,0};\n\t}\n}\nvoid build(int p,int l,int r){//\u5efa\u6811\n\ttr[p].l=l,tr[p].r=r;\n\tif(l==r) return;\n\tint mid=(l+r)/2;\n\ttr[p].h1=tr[p].h2=0;//\u522b\u5fd8\u4e86\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u6709\u591a\u7ec4\u6570\u636e\n\tbuild(p*2,l,mid);\n\tbuild(p*2+1,mid+1,r);\n}\nvoid add(int u,int v){\n\tif(tr[u].l==tr[u].r){\n\t\ttr[u].h1=tr[u].h2=1;\n\t\treturn;\n\t}\n\tif(v<=tr[u*2].r)\n\t\tadd(u*2,v);\n\telse\n\t\tadd(u*2+1,v);\n\ttr[u].h1+=p[tr[u].r-v];\n\ttr[u].h2+=p[v-tr[u].l];//\u6b63\u53cdhash\u7d2f\u52a0 \n}\n//\u5229\u7528Hash\u7684\u6027\u8d28\u4ece\u5b50\u533a\u95f4\u91cc\u62fc\u51d1\u76ee\u6807\u533a\u95f4Hash\u503c\null H1(int u,int l,int r){//\u6b63\u54c8\u5e0c\u6c42\u503c\n\tif(r<tr[u].l||tr[u].r<l) return 0;\n\tif(l<=tr[u].l&&tr[u].r<=r)\n\t\treturn tr[u].h1*p[r-tr[u].r];\n\treturn H1(u*2,l,r)+H1(u*2+1,l,r);\n} \null H2(int u,int l,int r){//\u53cd\u54c8\u5e0c\u6c42\u503c\n\tif(r<tr[u].l||tr[u].r<l) return 0;\n\tif(l<=tr[u].l&&tr[u].r<=r)\n\t\treturn tr[u].h2*p[tr[u].l-l];\n\treturn H2(u*2,l,r)+H2(u*2+1,l,r);\n}\nvoid solve(){\n\tinit();\n\tbuild(1,1,n);\n\tfor(int i=1;i<=n;i++){//\u6309\u987a\u5e8f\u679a\u4e3e\n\t\tint v=x[i];\n\t\tint len=min(v-1,n-v);\n\t\tif(H1(1,v-len,v+len)!=H2(1,v-len,v+len)){//\u5982\u679c\u4e0d\u56de\u6587\u8bf4\u660e\u6709\u89e3\n\t\t\tcout<<\"Y\"<<endl;\n\t\t\treturn;\n\t\t}\n\t\tadd(1,v);//\u5c06\u5176\u572801\u4e32\u4e2d\u7684\u72b6\u6001\u66f4\u65b0\n\t}\n\tcout<<\"N\"<<endl;//\u90fd\u679a\u4e3e\u5b8c\u4e86\u8fd8\u6ca1\u627e\u5230\u7684\u8bdd\u5c31\u6ca1\u6709\u4e86\n}\nint main(){\n\tp[0]=1;\n\tfor(int i=1;i<=500001;i++) p[i]=p[i-1]*B;//\u521d\u59cbp\u503c\u6570\u7ec4\n\tcin>>T;\n\twhile(T--){\n\t\tinput();\n\t\tsolve(); \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1650112784,
        "uid": 135204,
        "name": "\u661f\u68a6\u7a7a\u60f3",
        "ccfLevel": 6,
        "title": "\u7ebf\u6bb5\u6811+Hash \u4ee3\u7801\u8f7b\u4fbf\u7b80\u6d01"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u6392\u5217 $a$\uff0c\u5224\u65ad\u5176\u4e2d\u662f\u5426\u5b58\u5728\u7b49\u5dee\u6570\u5217\u3002\n\n## \u505a\u6cd5\uff1a\n\n\u9996\u5148\u56e0\u4e3a\u8fd9\u4e2a\u9898\u662f\u5224\u65ad\u662f\u5426\u5b58\u5728\u7b49\u5dee\u6570\u5217\u3002\u5982\u679c\u5b58\u5728\u957f\u5ea6\u4e3a $x(x>3)$ \u7684\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u4efb\u610f\u76f8\u90bb $3$ \u9879\u90fd\u662f\u7b49\u5dee\u5e8f\u5217\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3a $3$ \u7684\u7b49\u5dee\u5e8f\u5217\u3002\n\n\u5bf9\u4e8e\u8fd9\u79cd $3$ \u4e2a\u6570\u7684\u95ee\u9898\uff0c\u6211\u4eec\u8003\u8651\u679a\u4e3e\u4e2d\u95f4\u7684\u90a3\u4e2a\u6570\uff0c\u8bbe\u6211\u4eec\u679a\u4e3e\u4f4d\u7f6e\u4e3a $i$\uff0c\u8bbe\u516c\u5dee\u4e3a $v$\uff0c\u53ea\u8981\u6211\u4eec\u53ef\u4ee5\u5728 $1$ \u5230 $i-1$ \u4e2d\u627e\u5230 $a_i-v$\uff0c\u5728 $i+1$ \u5230 $n$ \u4e2d\u627e\u5230 $a_i+v$\uff08\u6216\u8005\u53cd\u8fc7\u6765\uff09\u5c31\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u76f4\u63a5\u601d\u8003\u4e0d\u662f\u5f88\u597d\u60f3\uff0c\u8003\u8651\u5c06\u8fc7\u7a0b\u8f6c\u5316\u6210 $01$ \u5e8f\u5217\uff0c\u5728\u6211\u4eec\u679a\u4e3e\u5230\u7b2c $i$ \u4e2a\u70b9\u65f6\uff0c\u5df2\u7ecf\u51fa\u73b0\u7684\u6570\u4e3a $1$\uff0c\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u6570\u4e3a $0$\uff0c\u76f8\u5f53\u4e8e\u5728\u5e8f\u5217\u7684\u7b2c $a_i$ \u4e2a\u4f4d\u7f6e\uff0c\u82e5 $a_i-v$ \u51fa\u73b0\u8fc7\u4e14 $a_i+v$ \u4e5f\u51fa\u73b0\u8fc7\uff0c\u6216\u8005\u90fd\u6ca1\u6709\u51fa\u73b0\u8fc7\u65f6\uff0c\u56e0\u4e3a $a$ \u662f\u4e00\u4e2a\u6392\u5217\uff0c\u6240\u4ee5 $a_i-v$ \u548c $a_i+v$ \u4e00\u5b9a\u5728 $i$ \u7684\u540c\u4fa7\uff0c\u5bf9\u4e8e\u9009\u7684\u8fd9\u4e00\u4e2a $v$ \u65e0\u89e3\u3002\u90a3\u4e48\u5982\u679c\u8fd9\u4e2a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a $v$ \u90fd\u65e0\u89e3\u7684\u8bdd\uff0c\u8fd9\u4e2a\u5e8f\u5217\u4e00\u5b9a\u662f\u4ee5 $a_i$ \u4e3a\u4e2d\u5fc3\u5bf9\u79f0\u7684\uff0c\u4e5f\u5c31\u662f\u5de6\u8fb9\u4ece\u5de6\u5f80\u53f3\u7684\u5e8f\u5217\u548c\u53f3\u8fb9\u4ece\u53f3\u5f80\u5de6\u7684\u5e8f\u5217\u76f8\u7b49\u3002\n\n\u5224\u65ad\u5e8f\u5217\u76f8\u7b49\uff1fhash\uff01\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u4ece\u5de6\u5f80\u53f3\u548c\u4ece\u53f3\u5f80\u5de6\u7684\u54c8\u5e0c\u503c\uff0c\u8fd8\u8981\u652f\u6301\u4fee\u6539\uff0c\u4e8e\u662f\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\u65f6\u95f4\u590d\u6742\u5ea6$\\mathcal{O}(T n\\log n)$\n\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\ntypedef unsigned long long ull;\nusing namespace std;\nconst ull seed=233;\nint n;\nchar a[500005];\null ksm[500005];\nstruct node{\n\tint l,r;\n\tull vl,vr;\n}Tree[2000005];\nvoid ztree(int p,int l,int r){\n\tTree[p].l=l,Tree[p].r=r;\n\tif(l==r){\n\t\tTree[p].vl=Tree[p].vr=(unsigned long long)a[l];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tztree(p*2,l,mid);\n\tztree(p*2+1,mid+1,r);\n\tTree[p].vl=Tree[p*2].vl*ksm[r-mid]+Tree[p*2+1].vl;\n\tTree[p].vr=Tree[p*2+1].vr*ksm[mid-l+1]+Tree[p*2].vr;\n}\null Getl(int p,int l,int r){\n\tif(l<=Tree[p].l&&Tree[p].r<=r)return Tree[p].vl;\n\tint mid=Tree[p].l+Tree[p].r>>1;\n\tull vl=0,vr=0;\n\tif(l<=mid)vl=Getl(p*2,l,r);\n\tif(r>mid)vr=Getl(p*2+1,l,r);\n\tif(!vl)return vr;\n\tif(!vr)return vl;\n\treturn vl*ksm[min(Tree[p*2+1].r,r)-mid]+vr;\n}\null Getr(int p,int l,int r){\n\tif(l<=Tree[p].l&&Tree[p].r<=r)return Tree[p].vr;\n\tint mid=Tree[p].l+Tree[p].r>>1;\n\tull vl=0,vr=0;\n\tif(l<=mid)vl=Getr(p*2,l,r);\n\tif(r>mid)vr=Getr(p*2+1,l,r);\n\tif(!vl)return vr;\n\tif(!vr)return vl;\n\treturn vr*ksm[mid+1-max(Tree[p*2].l,l)]+vl;\n}\nvoid update(int p,int l){\n\tif(Tree[p].l==Tree[p].r){\n\t\tTree[p].vl=Tree[p].vr=(unsigned long long)a[l];\n\t\treturn;\n\t}\n\tint mid=Tree[p].l+Tree[p].r>>1;\n\tif(l<=mid)update(p*2,l);\n\telse update(p*2+1,l);\n\tTree[p].vl=Tree[p*2].vl*ksm[Tree[p].r-mid]+Tree[p*2+1].vl;\n\tTree[p].vr=Tree[p*2+1].vr*ksm[mid-Tree[p].l+1]+Tree[p*2].vr;\n}\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d\",&n);\n\t\tksm[0]=1;\n\t\tfor(int i=1;i<=n;i++)a[i]='0',ksm[i]=ksm[i-1]*seed;\n\t\tztree(1,1,n);\n\t\tbool fl=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(fl)continue;\n\t\t\tif(x==1||x==n){\n\t\t\t\ta[x]='1';\n\t\t\t\tupdate(1,x);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint lenl=x-1,lenr=n-x;\n\t\t\tif(lenl<lenr)lenr=lenl;\n\t\t\telse lenl=lenr;\n\t\t\tull vl=Getl(1,x-lenl,x-1);\n\t\t\tull vr=Getr(1,x+1,x+lenr);\n\t\t\ta[x]='1';\n\t\t\tupdate(1,x);\n\t\t\tif(vl!=vr)fl=1;\n\t\t}\n\t\tif(!fl)puts(\"N\");\n\t\telse puts(\"Y\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1669686590,
        "uid": 301817,
        "name": "QZJ666",
        "ccfLevel": 7,
        "title": "P2757 \u7b49\u5dee\u5b50\u5e8f\u5217"
    }
]