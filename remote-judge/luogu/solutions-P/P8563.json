[
    {
        "content": "## \u524d\u8a00\n\n\u6211\u6253\u7b97\u5728\u8fd9\u7bc7\u9898\u89e3\u4e2d\u5c06\u7ebf\u6bb5\u6811\u505a\u6cd5\u548c\u7ebf\u6027\u8d2a\u5fc3\u505a\u6cd5\u90fd\u5199\u51fa\u6765\uff0c\u4ee5\u62d3\u5bbd\u5927\u5bb6\u7684\u601d\u8def\uff0c\u8ba9\u5927\u5bb6\u6709\u6240\u6536\u83b7\u3002\n\nps\uff1a\u7ebf\u6bb5\u6811\u7bc7\u5e45\u7565\u957f\uff0c\u60f3\u76f4\u63a5\u770b\u7b80\u5355\u7684\u8d2a\u5fc3\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u3002\n\n------------\n\n## \u89e3\u9898\u601d\u8def\n\n\u5148\u629b\u5f00\u4fee\u6539\u64cd\u4f5c\uff0c\u601d\u8003\u4e00\u4e0b\u5982\u4f55\u8ba1\u7b97\u533a\u95f4\u7684\u6700\u5927\u4e58\u79ef\u3002\n\n\u56e0\u4e3a $\\left | k \\right |,\\left | a_i \\right | \\ge 2$\uff0c\u90a3\u4e48\u5728\u4fdd\u8bc1\u4e58\u79ef\u4e3a\u6b63\u6570\u65f6\uff0c\u4e58\u7684\u6570\u5b57\u8d8a\u591a\uff0c\u4e58\u79ef\u8d8a\u5927\u3002\n\n\u7531\u4e8e\u8d1f\u6570\u7684\u7279\u6b8a\u6027\uff0c\u6240\u4ee5\u8981\u6839\u636e\u8d1f\u6570\u7684\u4e2a\u6570\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\n\n- \u5f53\u8d1f\u6570\u7684\u4e2a\u6570\u4e3a\u5076\u6570\u65f6\uff1a\n\t\n   \u5c31\u53ef\u4ee5\u53d6\u6574\u4e2a\u533a\u95f4\uff0c\u7b54\u6848\u5c31\u662f\u6574\u4e2a\u533a\u95f4\u7684\u4e58\u79ef\u3002\n\n- \u5f53\u8d1f\u6570\u7684\u4e2a\u6570\u4e3a $1$ \u4e14\u533a\u95f4\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\u65f6\uff1a\n\n\t\u7b54\u6848\u5c31\u4e3a $1$\u3002\n\n- \u5f53\u8d1f\u6570\u7684\u4e2a\u6570\u4e3a $1$ \u4e14\u533a\u95f4\u6709\u5927\u4e8e $1$ \u4e2a\u6570\u5b57\u65f6\uff1a\n\n\t\u7b54\u6848\u4e3a\u8d1f\u6570\u4f4d\u7f6e\u5de6\u4fa7\u7684\u4e58\u79ef\u548c\u53f3\u4fa7\u7684\u4e58\u79ef\u4e2d\u7684\u8f83\u5927\u503c\u3002\n\n- \u5f53\u8d1f\u6570\u7684\u4e2a\u6570\u4e3a\u5947\u6570\u65f6\uff1a\n\n\t\u6b64\u65f6\u5c31\u9700\u8981\u820d\u5f03\u4e00\u4e2a\u8d1f\u6570\u3002\u6839\u636e\u4e0a\u9762\u7684\u8bf4\u6cd5\uff0c\u5c31\u9700\u8981\u820d\u5f03\u6700\u5de6\u8fb9\u7684\u8d1f\u6570\uff0c\u6216\u8005\u6700\u53f3\u8fb9\u7684\u8d1f\u6570\uff0c\u5c06\u5269\u4f59\u8fde\u7eed\u7684\u5076\u6570\u4e2a\u8d1f\u6570\u548c\u5176\u4f59\u7684\u6b63\u6570\u76f8\u4e58\uff0c\u4e24\u79cd\u65b9\u6848\u53d6\u6700\u5927\u503c\uff0c\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u3002\n    \n### $\\text{Solution1}$\n    \n\u6839\u636e\u4ee5\u4e0a\u601d\u8def\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u533a\u95f4\u5185\u7684\u503c\u6709\u8fd9\u4e9b\uff1a\u8d1f\u6570\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8d1f\u6570\u7684\u4e2a\u6570\uff0c\u533a\u95f4\u4e58\u79ef\u3002\n\n\u8fd9\u542f\u53d1\u6211\u4eec\u91c7\u7528**\u7ebf\u6bb5\u6811**\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u5728\u67e5\u8be2\u533a\u95f4\u6700\u5de6\u8fb9\u7684\u8d1f\u6570\u4f4d\u7f6e\u65f6\uff0c\u53ef\u4ee5\u7528\u4e8c\u5206\u627e\u51fa\u6700\u5c0f\u7684\u524d\u7f00\u8d1f\u6570\u4e2a\u6570\u4e3a $1$ \u7684\u4f4d\u7f6e\uff0c\u67e5\u8be2\u533a\u95f4\u6700\u53f3\u8fb9\u7684\u8d1f\u6570\u4f4d\u7f6e\u65f6\uff0c\u4e5f\u662f\u5982\u6b64\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log^2n)$\u3002\n\n\u7531\u4e8e\u662f\u5355\u70b9\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u4f7f\u7528\u61d2\u6807\u8bb0\u7ef4\u62a4\u533a\u95f4\u4e58\u79ef\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u3002\u67e5\u8be2\u548c\u4fee\u6539\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a $O(\\log n)$\u3002\n\n\u67e5\u8be2\u6700\u7ec8\u7b54\u6848\u65f6\uff0c\u6839\u636e\u4e0a\u9762\u601d\u8def\u76f4\u63a5\u5199\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\log n)$\u3002\n\n\u7efc\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log^2 n)$\u3002\n\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u6839\u636e\u6570\u636e\u8303\u56f4\u53d1\u73b0\uff0c\u5982\u679c\u76f4\u63a5\u7ef4\u62a4\u533a\u95f4\u4e58\u79ef\uff0c\u8fd9\u4e2a\u503c\u662f\u975e\u5e38\u975e\u5e38\u5de8\u5927\u7684\uff0c\u5e76\u4e14\u65e0\u6cd5\u5b58\u653e\u3002\n\n\u90a3\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u64cd\u4f5c\uff1a\u7531\u4e8e\u8d1f\u6570\u5728\u6700\u7ec8\u4e58\u5b8c\u540e\u4e5f\u53d8\u4e3a\u6b63\u6570\uff0c\u90a3\u4e48\u5728\u8ba1\u7b97\u7684\u65f6\u5019\u5224\u65ad\u8fd0\u7b97\u4e2d\u7684\u503c\u7684\u7edd\u5bf9\u503c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e $2^{30} + 1$\uff0c\u5982\u679c\u7b26\u5408\uff0c\u90a3\u5c31\u5c06\u5176\u4fee\u6539\u4e3a $2^{30}+1$\u3002\u8fd9\u6837\u505a\u51cf\u5c0f\u4e86\u6570\u636e\u89c4\u6a21\uff0c\u5e76\u4e14\u6700\u7ec8\u8ba1\u7b97\u5f97\u5230\u7684\u7ed3\u679c\u4e5f\u4f1a\u5927\u4e8e $2^{30}$ \uff0c\u4e0d\u5f71\u54cd\u6b63\u786e\u6027\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b58\u50a8\u4e0b\u6765\u4e86\u3002\n\n\u7ed9\u51fa\u8f83\u7b80\u6d01\u4e14\u90e8\u5206\u6ce8\u91ca\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nconst int N = 2e5 + 7;\nconst ll P = (1ll << 30) + 1;\n\nint n, q;\nll a[N], sum[N << 2]; //sum\u7ef4\u62a4\u533a\u95f4\u4e58\u79ef\nint num[N << 2], pos[N << 2];//num\u7ef4\u62a4\u533a\u95f4\u8d1f\u6570\u4e2a\u6570\uff0cpos\u7ef4\u62a4\u533a\u95f4\u8d1f\u6570\u4f4d\u7f6e\n\n#define _max(a, b) (a > b ? a : b)\n#define _min(a, b) (a < b ? a : b)\n\nll change (ll x) {\n\treturn abs (x) >= P ? P : x;\n}//\u5c06\u4e00\u4e2a\u7edd\u5bf9\u503c\u5927\u4e8e\u7b49\u4e8e 2^30+1 \u7684\u6570\u5b57\u6539\u4e3a 2^30+1\n\nstruct SegMentTree {\n\tvoid pushup (int p) {\n\t\tsum[p] = change (sum[p << 1] * sum[p << 1 | 1]);//\u7ef4\u62a4\u533a\u95f4\u4e58\u79ef\n\t\tnum[p] = num[p << 1] + num[p << 1 | 1];//\u7ef4\u62a4\u533a\u95f4\u8d1f\u6570\u4e2a\u6570\n\t}\n\t\n\tvoid build (int p, int l, int r) {\n\t\tif (l == r) {\n\t\t\tsum[p] = change (a[l]);//\u51cf\u5c0f\u6570\u636e\u89c4\u6a21\n\t\t\tif (a[l] < 0) {\n\t\t\t\tnum[p] = 1;\n\t\t\t\tpos[p] = l;\n\t\t\t}\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tbuild (p << 1, l, mid);\n\t\tbuild (p << 1 | 1, mid + 1, r);\n\t\t\n\t\tpushup (p);\n\t}//\u5efa\u6811\n\t\n\tvoid update (int p, int l, int r, int qp, int k) {\n\t\tif (l == r) {\n\t\t\tsum[p] = change (k);//\u51cf\u5c0f\u6570\u636e\u89c4\u6a21\n\t\t\tif (k < 0) {\n\t\t\t\tnum[p] = 1, pos[p] = l;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnum[p] = 0, pos[p] = 0;\n\t\t\t}\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tif (qp <= mid) {\n\t\t\tupdate (p << 1, l, mid, qp, k);\n\t\t}\n\t\tif (qp > mid) {\n\t\t\tupdate (p << 1 | 1, mid + 1, r, qp, k);\n\t\t}\n\t\t\n\t\tpushup (p);\n\t}//\u5355\u8c03\u4fee\u6539\u76f4\u63a5\u66b4\u529b logn \u5373\u53ef\n\t\n\tint query_num (int p, int l, int r, int ql, int qr) {\n\t\tif (ql <= l && qr >= r) {\n\t\t\treturn num[p];\n\t\t}\n\t\tint mid = (l + r) >> 1, ans = 0;\n\t\tif (ql <= mid) {\n\t\t\tans += query_num (p << 1, l, mid, ql, qr);\n\t\t}\n\t\tif (qr > mid) {\n\t\t\tans += query_num (p << 1 | 1, mid + 1, r, ql, qr);\n\t\t}\n\t\treturn ans;\n\t}//\u67e5\u8be2\u533a\u95f4\u8d1f\u6570\u4e2a\u6570\n\t\n\tint find_l (int l, int r) {\n\t\tint ans = 0;\n\t\twhile (l <= r) {//\u4e8c\u5206\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif (query_num (1, 1, n, l, mid)) {\n\t\t\t\tr = mid - 1;\n\t\t\t\tans = mid;\n\t\t\t\t//\u627e\u5230\u6700\u5c0f\u7684mid\u6ee1\u8db3\u524d\u7f00\u53ea\u6709\u4e00\u4e2a\u8d1f\u6570\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u6700\u5de6\u8fb9\u7684\u8d1f\u6570\u4f4d\u7f6e\n\t\t\t}\n\t\t\telse {\n\t\t\t\tl = mid + 1;\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n\t\n\tint find_r (int l, int r) {\n\t\tint ans = 0;\n\t\twhile (l <= r) {//\u4e8c\u5206\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif (query_num (1, 1, n, mid, r)) {\n\t\t\t\tl = mid + 1;\n\t\t\t\tans = mid;\n\t\t\t\t//\u627e\u5230\u6700\u5927\u7684mid\u6ee1\u8db3\u540e\u7f00\u53ea\u6709\u4e00\u4e2a\u8d1f\u6570\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u6700\u53f3\u8fb9\u7684\u8d1f\u6570\u4f4d\u7f6e\n\t\t\t}\n\t\t\telse {\n\t\t\t\tr = mid - 1;\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n\t\n\tll query_sum (int p, int l, int r, int ql, int qr) {\n\t\tif (ql > qr) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (ql <= l && qr >= r) {\n\t\t\treturn change (sum[p]);//\u51cf\u5c0f\u6570\u636e\u89c4\u6a21\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tll ans = 1;\n\t\tif (ql <= mid) {\n\t\t\tans = ans * query_sum (p << 1, l, mid, ql, qr);\n\t\t}\n\t\tif (qr > mid) {\n\t\t\tans = ans * query_sum (p << 1 | 1, mid + 1, r, ql, qr);\n\t\t}\n\t\treturn change (ans);//\u51cf\u5c0f\u6570\u636e\u89c4\u6a21\n\t}//\u67e5\u8be2\u533a\u95f4\u4e58\u79ef\n\t\n\tll query_ans (int p, int l, int r) {\n\t\tint tot = query_num (1, 1, n, l, r);\n\t\tif (! (tot % 2)) {\n\t\t\treturn _min (query_sum (1, 1, n, l, r), P);\n\t\t\t//\u5076\u6570\u4e2a\u8d1f\u6570\u65f6\uff0c\u7b54\u6848\u5c31\u662f\u6574\u4e2a\u533a\u95f4\u4e58\u79ef\n\t\t}\n\t\telse {\n\t\t\tint nl = find_l (l, r);\n\t\t\tint nr = find_r (l, r);\n\t\t\tif (nl == nr) {\n\t\t\t\tif (l == r) {//1\u4e2a\u8d1f\u6570\u4e14\u533a\u95f4\u957f\u5ea6\u4e3a1\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\telse {//1\u4e2a\u8d1f\u6570\u4e14\u533a\u95f4\u957f\u5ea6\u5927\u4e8e1\n\t\t\t\t\tll ans1 = abs (query_sum (1, 1, n, l, nl - 1));//\u8d1f\u6570\u5de6\u4fa7\u7684\u4e58\u79ef\uff08\u4e0d\u5305\u62ec\u8d1f\u6570\uff09\n\t\t\t\t\tll ans2 = abs (query_sum (1, 1, n, nl + 1, r));//\u8d1f\u6570\u53f3\u4fa7\u7684\u4e58\u79ef\uff08\u4e0d\u5305\u62ec\u8d1f\u6570\uff09\n\t\t\t\t\treturn _min (_max (ans1, ans2), P);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tll ansl = abs (query_sum (1, 1, n, l, nl));//\u6700\u5de6\u8fb9\u8d1f\u6570\u5de6\u4fa7\u7684\u4e58\u79ef\uff08\u5305\u62ec\u8d1f\u6570\uff09\n\t\t\t\tll ansmid = abs (query_sum (1, 1, n, nl + 1, nr - 1));//\u6700\u5de6\u8fb9\u8d1f\u6570\u548c\u6700\u53f3\u8fb9\u8d1f\u6570\u4e4b\u95f4\u7684\u4e58\u79ef\uff08\u4e0d\u5305\u62ec\u8d1f\u6570\uff09\n\t\t\t\tll ansr = abs (query_sum (1, 1, n, nr, r));//\u6700\u53f3\u8fb9\u8d1f\u6570\u53f3\u4fa7\u7684\u4e58\u79ef\uff08\u5305\u62ec\u8d1f\u6570\uff09\n\t\t\t\treturn _min (_max (ansl, ansr) * ansmid, P);//ansl\u548cansr\u7684\u8f83\u5927\u503c\u4e58\u4ee5ansmid\u5c31\u662f\u533a\u95f4\u6700\u5927\u4e58\u79ef\uff0c\u53ef\u4ee5\u7406\u89e3\u4e00\u4e0b\n\t\t\t}//\u4e0e2^30+1\u53d6min\u4e5f\u662f\u4e3a\u4e86\u51cf\u5c0f\u6570\u636e\u89c4\u6a21\n\t\t}\n\t}//\u67e5\u8be2\u533a\u95f4\u6700\u5927\u4e58\u79ef\n} DS;\n\nint main () {\n\tscanf (\"%d%d\", &n, &q);\n\tfor (int i = 1; i <= n; i ++) {\n\t\tscanf (\"%lld\", &a[i]);\n\t}\n\tDS.build (1, 1, n);\n\twhile (q --) {\n\t\tint op, x, y;\n\t\tscanf (\"%d%d%d\", &op, &x, &y);\n\t\tif (op == 1) {\n\t\t\tDS.update (1, 1, n, x, y);\n\t\t}\n\t\telse if (op == 2) {\n\t\t\tif (DS.query_ans (1, x, y) >= P) {\n\t\t\t\tprintf (\"Too large\\n\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf (\"%lld\\n\", DS.query_ans (1, x, y));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n\n\n------------\n\n### $\\text{Solution2}$\n\u89c2\u5bdf\u5230\u9898\u76ee\u8981\u6c42\u7b54\u6848\u5927\u4e8e $2^{30}$ \u65f6\uff0c\u5c31\u8f93\u51fa `Too large`\u3002\n\n\u800c\u4e14 $\\left | k \\right |,\\left | a_i \\right | \\ge 2$\uff0c\u4ed4\u7ec6\u60f3\u60f3\u8fd9\u6709\u4ec0\u4e48\u5173\u8054\uff1f\n\n\u6ca1\u9519\uff0c\u5f53\u4e00\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\u8fc7\u957f\u65f6\uff0c\u4e0d\u7528\u8ba1\u7b97\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5927\u4e58\u79ef\uff0c\u6211\u4eec\u4e5f\u77e5\u9053\u8fd9\u4e2a\u6700\u5927\u4e58\u79ef\u5927\u4e8e $2^{30}$\uff01\n\n\u56e0\u4e3a\u6bcf\u4e2a\u503c\u6700\u5c0f\u4e3a $2$\uff0c\u5982\u679c\u8d85\u8fc7 $30$ \u4e2a\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u6700\u5927\u4e58\u79ef\u80af\u5b9a\u8d85\u8fc7\u4e86 $2^{30}$\uff01\n\n\u4e3a\u4e86\u4fdd\u9669\u8d77\u89c1\uff0c\u5f53\u67e5\u8be2\u7684\u533a\u95f4\u957f\u5ea6\u5927\u4e8e $70$ \u65f6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa `Too large`\uff01\n\n\u90a3\u4e48\u8fd9\u6837\uff0c\u5bf9\u4e8e\u533a\u95f4\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e $60$ \u65f6\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u4e0a\u6587\u7684\u65b9\u6cd5\u7b97\u51fa\u6700\u5927\u4e58\u79ef\u5e76\u5224\u65ad\uff0c\u4e14\u8fd9\u4e2a\u6570\u5b57\u4e5f\u53ef\u4ee5\u5b58\u50a8\u4e0b\u6765\u3002\n\n\u8fd9\u6837\u7684\u603b\u590d\u6742\u5ea6\u4e3a $O(n)$\uff0c\u4ee3\u7801\u77ed\u5e76\u4e14\u6548\u7387\u9ad8\u3002\n\n\u7ed9\u51fa\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nconst int N = 2e5 + 7;\nconst ll P = (1ll << 30);\n\nint n, q;\nll a[N]; \n\nint main () {\n\tscanf (\"%d%d\", &n, &q);\n\tfor (int i = 1; i <= n; i ++) {\n\t\tscanf (\"%lld\", &a[i]);\n\t}\n\twhile (q --) {\n\t\tint op, l, r;\n\t\tscanf (\"%d%d%d\", &op, &l, &r);\n\t\tif (op == 1) {\n\t\t\ta[l] = r;//O1\u76f4\u63a5\u4fee\u6539\n\t\t}\n\t\telse if (op == 2) {\n\t\t\tif (r - l + 1 > 70) {\n\t\t\t\tprintf (\"Too large\\n\");//\u957f\u5ea6\u8fc7\u957f \u76f4\u63a5\u8f93\u51fa\n\t\t\t} \n\t\t\telse {\n\t\t\t\tint tot = 0;\n\t\t\t\tfor (int i = l; i <= r; i ++) {\n\t\t\t\t\tif (a[i] < 0) {\n\t\t\t\t\t\ttot ++;//\u8d1f\u6570\u4e2a\u6570\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbool output = false;\n\t\t\t\tll ans = 1, p, t = 1ll;\n\t\t\t\tif (!(tot % 2)) {//\u5076\u6570\u4e2a\u8d1f\u6570\n\t\t\t\t\tfor (int i = l; i <= r; i ++) {\n\t\t\t\t\t\tans = ans * abs (a[i]);\n\t\t\t\t\t\tif (ans > P) {//\u5728\u8fd0\u7b97\u8fc7\u7a0b\u4e2d \u65f6\u523b\u9632\u6b62\u6ea2\u51fa\n\t\t\t\t\t\t\tprintf (\"Too large\\n\");\n\t\t\t\t\t\t\toutput = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!output) {\n\t\t\t\t\t\tprintf (\"%lld\\n\", ans);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {//\u5947\u6570\u4e2a\u8d1f\u6570\n\t\t\t\t\tfor (int i = l; i <= r; i ++) {\n\t\t\t\t\t\tif (a[i] < 0) {\n\t\t\t\t\t\t\tp = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (int i = r; i > p; i --) {\n\t\t\t\t\t\tt = t * a[i];\n\t\t\t\t\t\tif (t > P) {//\u5728\u8fd0\u7b97\u8fc7\u7a0b\u4e2d \u65f6\u523b\u9632\u6b62\u6ea2\u51fa\n\t\t\t\t\t\t\tprintf (\"Too large\\n\");\n\t\t\t\t\t\t\toutput = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (output) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tans = max (ans, t);\n\t\t\t\t\tt = 1;\n\t\t\t\t\tfor (int i = r; i >= l; i --) {\n\t\t\t\t\t\tif (a[i] < 0) {\n\t\t\t\t\t\t\tp = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (int i = l; i < p; i ++) {\n\t\t\t\t\t\tt = t * a[i];\n\t\t\t\t\t\tif (t > P) {//\u5728\u8fd0\u7b97\u8fc7\u7a0b\u4e2d \u65f6\u523b\u9632\u6b62\u6ea2\u51fa\n\t\t\t\t\t\t\tprintf (\"Too large\\n\");\n\t\t\t\t\t\t\toutput = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tans = max (ans, t);\n\t\t\t\t\tif (!output) {\n\t\t\t\t\t\tif (ans > P) {//\u5728\u8fd0\u7b97\u8fc7\u7a0b\u4e2d \u65f6\u523b\u9632\u6b62\u6ea2\u51fa\n\t\t\t\t\t\t\tprintf (\"Too large\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tprintf (\"%lld\\n\", ans);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n------------\n\n## \u540e\u8a00\n\u672c\u4eba\u8d5b\u65f6\u7ebf\u6bb5\u6811\u5199\u6302\u6210 $10$ \u5206\uff0c\u6ca1\u6709\u770b\u5230\u8fd9\u4e2a `Too large` \u7684\u4f5c\u7528\uff0c\u53ea\u662f\u5c06\u5176\u5f53\u505a\u4e00\u4e2a\u9650\u5236\uff0c\u8fd9\u544a\u8bc9\u6211\u4eec\u8981**\u597d\u597d\u8bfb\u9898**\u3002\n\n\u5982\u679c\u8bfb\u6e05\u695a\u9898\uff0c\u60f3\u5230\u8fd9\u4e2a\u4f5c\u7528\uff0c\u8fd9\u9898\u5c31\u8fce\u5203\u800c\u89e3\u4e86\uff0c\u800c\u4e14\u4ee3\u7801\u7f16\u5199\u7b80\u5355\u3002\uff08\u54ed\uff09\n\n\u5e0c\u671b\u5927\u5bb6\u4e0d\u8981\u5b66\u6211/bx\n",
        "postTime": 1664812390,
        "uid": 755004,
        "name": "cyhtxdy",
        "ccfLevel": 0,
        "title": "P8563 Magenta Potion \u9898\u89e3"
    },
    {
        "content": "### 0.\u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u6574\u6570\u5e8f\u5217 $a$\uff0c**\u5176\u4e2d\u6240\u6709\u6570\u7684\u7edd\u5bf9\u503c\u5747\u5927\u4e8e\u7b49\u4e8e** $2$\uff0c\u9700\u8981\u652f\u6301\u5355\u70b9\u4fee\u6539\u548c\u67e5\u8be2\u6700\u5927\u5b50\u533a\u95f4\u4e58\u79ef\uff0c\u5982\u679c\u7b54\u6848\u5927\u4e8e $2^{30}$ \u5219\u8f93\u51fa `Too large` \u5373\u53ef\u3002\u7a7a\u533a\u95f4\u7684\u4e58\u79ef\u5b9a\u4e49\u4e3a $1$\u3002\n\n### 1.\u505a\u6cd5\u8be6\u89e3\n\n\u4e0d\u7528\u8111\u5b50\u7684\u7ebf\u6bb5\u6811+\u5e73\u8861\u6811\u505a\u6cd5\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53 $[l,r]$ \u7684\u603b\u4e58\u79ef\u4e3a\u6b63\u6570\uff0c\u5219\u6700\u5927\u5b50\u533a\u95f4\u4e58\u79ef\u5c31\u662f\u8fd9\u4e2a\u603b\u4e58\u79ef\uff1b\u5426\u5219\u8bbe\u8fd9\u6bb5\u533a\u95f4\u7684\u7b2c\u4e00\u4e2a\u8d1f\u5143\u7d20\u7684\u4f4d\u7f6e\u4e3a $\\textit{beg}$\uff0c\u6700\u540e\u4e00\u4e2a\u4e3a $\\textit{ed}$\uff0c\u5219\u6700\u5927\u5b50\u533a\u95f4\u4e58\u79ef\u4e3a $\\max\\{\\prod_{i=beg}^{r}a_i,\\prod_{i=l}^{\\textit{\\textit{beg}}}a_i\\}$\uff0c\u7279\u522b\u5730\uff0c\u82e5\u8fd9\u6bb5\u533a\u95f4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u4e14\u5176\u4e3a\u8d1f\uff0c\u5219\u6700\u5927\u5b50\u533a\u95f4\u4e58\u79ef\u4e3a $1$\u3002\n\n\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u4e58\u79ef\uff0c\u5e73\u8861\u6811\u7ef4\u62a4\u8d1f\u6570\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5f88\u597d\u61c2\uff0c\u4e0d\u89e3\u91ca\u3002\n\n### 2.\u4ee3\u7801\n\n```cpp\n#include<bits/extc++.h>\nusing namespace std;\n//\u5feb\u8bfb\u5feb\u8f93\u90e8\u5206\uff08mmapreader,mmapwriter\uff09\u5df2\u9690\u85cf\nclass segtree {\nprotected:\n    using vt = __int128;\n    static constexpr vt maxsize = 800005, maxval = 1ll << 30;\n    vt v[maxsize], n, cnt = 0;\n    __gnu_pbds::tree<vt, __gnu_pbds::null_type> tr;//gnu \u62d3\u5c55\u5e93\u4e2d\u7684\u5e73\u8861\u6811\n    #define lc    (x << 1)\n    #define rc    (x << 1 | 1)\n    #define m     (l + (r - l >> 1))\n    #define v(x)  (*(v + (x)))\n    #define b1    l, m\n    #define b2    m + 1, r\n    inline bool pushup (vt x) {\n        if ((v (lc) * v (rc) > maxval))v (x) = 0ll;\n        else v (x) = v (lc) * v (rc);\n        return true;\n    }\n    void build (vt l, vt r, vt x) {\n        if (l == r)\n            return (void)((v[x] = mmapreader::read<vt>()) < 0 ? tr.insert (++cnt), 0 : ++cnt);\n        return build (b1, lc), build (b2, rc), (void)pushup (x);\n    }\npublic:\n    segtree (vt N = 0) {\n    \tn = N;\n        build (1, n, 1);\n        tr.insert (numeric_limits<vt>::min ( ));\n        tr.insert (numeric_limits<vt>::max ( ));\n    }\n    vt getmul (vt a, vt b, vt l = 1, vt r = -1, vt x = 1) {\n        if (!~r)r = n;\n        if (l > b || r < a || l <= 0 || r > n)return 1ll;\n        if (l >= a && r <= b)return v (x);\n        vt ans = getmul (a, b, b1, lc) * getmul (a, b, b2, rc);\n        return ans > maxval ? 0ll : ans;\n    }\n    bool change (vt a, vt y, vt l = 1, vt r = -1, vt x = 1) {\n        if (!~r)r = n;\n        if (l > a || r < a || l <= 0 || r > n)return false;\n        if (l == r && r == a) {\n            if (y > 0 && (*tr.lower_bound (a)) == a)tr.erase (a);\n            if (y < 0 && (*tr.lower_bound (a)) != a)tr.insert (a);\n            return v[x] = y;\n        }\n        return change (a, y, b1, lc), change (a, y, b2, rc), pushup (x);\n    }\n    vt ask (vt a, vt b) {\n        vt ans = getmul (a, b);\n        if (!ans)return 0;\n        if (ans > 0)return ans;\n        if (a == b)return 1;\n        vt na = (*tr.lower_bound (a)) + 1, nb = (*(--tr.lower_bound (b + 1))) - 1;\n        static vt X, Y;\n        X = ask (na, b), Y = ask (a, nb);\n        if (!X || !Y)return 0;\n        return max(X, Y) > maxval ? 0 : max(X, Y);\n    }\n    #undef lc  \n    #undef rc  \n    #undef m   \n    #undef v\n    #undef b1  \n    #undef b2  \n};\nsigned main ( ) {\n    mmapreader::prepare (stdin), mmapwriter::prepare (stdout);\n    int n = mmapreader::read<int>(), m = mmapreader::read<int>(), op, x, y, ans;\n    static segtree tr (n);\n    while (m--)mmapreader::read (op, x, y), op - 1 ? ans = tr.ask (x, y),mmapwriter::writeln(ans > 0 && ans <= (1 << 30) ? to_string (ans) : \"Too large\"), true : tr.change (x, y);\n    return 0;\n}\n```\n\n### 3.\u4f18\u52a3\u5206\u6790\n\n\u4f18\u70b9\uff1a\u5f88\u5bb9\u6613\u6269\u5c55\u5230\u6ca1\u6709\u201c\u5982\u679c\u7b54\u6848\u5927\u4e8e $2^{30}$ \u5219\u8f93\u51fa `Too large` \u5373\u53ef\u201d\u8fd9\u4e2a\u6761\u4ef6\u65f6\u7684\u60c5\u5f62\u3002\n\n\u7f3a\u70b9\uff1a\u5f88\u96be\u5199\u3002",
        "postTime": 1665841479,
        "uid": 321566,
        "name": "Suruka",
        "ccfLevel": 0,
        "title": "P8563 Magenta Potion - \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\n\u8fd9\u9053\u9898\u53ea\u9700\u8981\u8bc1\u660e\u4e00\u4e2a\u7ed3\u8bba\uff1a\u957f\u5ea6\u5927\u4e8e $2k+1$ \u7684\u5e8f\u5217\uff0c\u5176\u6700\u5927\u5b50\u6bb5\u4e58\u79ef\u4e00\u5b9a\u5927\u4e8e $2^k$\u3002\n\n\u8bc1\u660e\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u6700\u52a3\u7684\u60c5\u51b5\u80af\u5b9a\u662f\u4e00\u6bb5\u957f\u5ea6\u4e3a $k-1$ \u7684\u6b63\u6570\uff0c\u4e00\u4e2a\u8d1f\u6570\uff0c\u518d\u4e00\u6bb5\u957f\u5ea6\u4e3a $k-1$ \u7684\u6b63\u6570\uff0c\u8fd9\u4e2a\u65f6\u5019\u4e58\u79ef\u81f3\u5c11\u662f $2^{k-1}$\uff0c\u5982\u679c\u518d\u591a\u4e00\u4e2a\u6570\uff0c\u65e0\u8bba\u5b83\u7684\u4f4d\u7f6e\u3001\u6b63\u8d1f\uff0c\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97\u4e58\u79ef\u81f3\u5c11\u662f $2^k$\u3002\n\n\u7531\u4e8e\u8fd9\u9053\u9898\u7b54\u6848 $>2^k$ \u5c31\u4e0d\u9700\u8981\u8f93\u51fa\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u957f\u5ea6\u7684\u9608\u503c $B=2 \\times 30+2=62$\uff0c\u5982\u679c\u957f\u5ea6\u5927\u4e8e\u8fd9\u4e2a\u663e\u7136\u7b54\u6848\u8fdc\u8fdc\u8d85\u51fa\u8303\u56f4\u5c31\u6ca1\u5fc5\u8981\u7b97\u4e86\uff0c\u76f4\u63a5\u8f93\u51fa `Too large`\u3002\n\n\u800c\u5bf9\u4e8e\u957f\u5ea6\u5c0f\u4e8e $62$ \u7684\uff0c\u6211\u4eec\u76f4\u63a5\u8dd1\u4e00\u4e2a\u6700\u5927\u5b50\u6bb5\u79ef\u5c31\u884c\u4e86\uff0c\u5373\u4ee4 $dp_{i,0/1}$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\uff0c\u6700\u5927\u7684\u6b63\u7684\u4e58\u79ef\u548c / \u6700\u5c0f\u7684\u8d1f\u7684\u4e58\u79ef\u548c\uff0c\u6bcf\u6b21\u6309 $a_i$ \u7684\u6b63\u8d1f\u8ba8\u8bba\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int __int128\nusing namespace std;\n\nnamespace io{\n\t... // \u7701\u53bb\u4e86\u7f3a\u7701\u6e90\uff08\u592a\u957f\u4e86\uff0c200 \u591a\u884c\uff09\n}\n\n\nconst int N=(1ll<<30),INF=(1ll<<31)-1;\n\nint dp[200005][2],a[200005],pre[200005];\n\nsigned main(){\n\tint n=read(),q=read();\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\t\n\twhile(q--){\n\t\tint op=read(),l=read(),r=read();\n\t\tif(op==1){a[l]=r;continue;} // \u76f4\u63a5\u5355\u70b9\u4fee\u6539\n\t\t\n\t\tif(r-l>=62){writes(\"Too large\\n\"); continue;} // \u6309\u9608\u503c\u5206\u6cbb\n\t\t\n\t\tint ans=1; dp[0][0]=dp[0][1]=0;\n\t\tfor(int i=l;i<=r;i++){\n\t\t\tint j=i-l+1;\n\t\t\tif(a[i]<0){\n\t\t\t\tdp[j][0]=dp[j-1][1]*a[i];\n\t\t\t\tdp[j][1]=min(dp[j-1][0]*a[i],a[i]);\n\t\t\t}else{\n\t\t\t\tdp[j][0]=max(dp[j-1][0]*a[i],a[i]);\n\t\t\t\tdp[j][1]=dp[j-1][1]*a[i];\n\t\t\t}\n\t\t}\n\t\tfor(int i=l;i<=r;i++) ans=max(ans,dp[i-l+1][0]);\n\t\tif(ans>N) writes(\"Too large\\n\");\n\t\telse write(ans),writechar('\\n');\n\t}\n\treturn flush(),0;\n}\n```",
        "postTime": 1665840189,
        "uid": 195198,
        "name": "E1_de5truct0r",
        "ccfLevel": 7,
        "title": "P8563 \u9898\u89e3"
    },
    {
        "content": "\u5728\u6d1b\u8c37\u6a21\u62df\u8d5b\u4e2d\u505a\u51fatgT1\uff0c\u796d\u4e4b\u3002\n\n\u672c\u849f\u84bb\u7684\u8fa3\u9e21\u505a\u6cd5\uff1a\u7ebf\u6bb5\u6811\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u770b\u5230\u4fee\u6539\u548c\u67e5\u8be2\uff0c\u7b2c\u4e00\u4e2a\u5e94\u8be5\u60f3\u5230\u7684\u5c31\u662f\u6570\u636e\u7ed3\u6784\u3002\n\n\u4f46\u662f\u9898\u9762\u8981\u6c42\u533a\u95f4\u4e2d\u6c42\u6700\u5927\u7684\u5b50\u533a\u95f4\u4e58\u79ef\uff0c\u5237\u8fc7\u90a3\u4e48\u5341\u51e0\u9053\u7ebf\u6bb5\u6811\u9898\u7684\u7ae5\u978b\u5e94\u8be5\u90fd\u4f1a\u60f3\u8d77[\u8fd9\u9898](https://www.luogu.com.cn/problem/P4513)\uff0c\u8fd9\u5c31\u662f\u4e00\u9053\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u4e2d\u5b50\u533a\u95f4\u6700\u5927\u503c\u7684\u4e00\u9053\u677f\u5b50\u9898\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7528 $\\texttt{lmx}$ \u8868\u793a\u533a\u95f4 $[l, r]$ \u4e2d\u4ee5 $l$ \u4e3a\u5de6\u8fb9\u754c\u7684\u5b50\u533a\u95f4\u7684\u6700\u5927\u4e58\u79ef\uff0c$\\texttt{rmx}$ \u8868\u793a\u533a\u95f4 $[l, r]$ \u4e2d\u4ee5 $r$ \u4e3a\u53f3\u8fb9\u754c\u7684\u5b50\u533a\u95f4\u7684\u6700\u5927\u4e58\u79ef\uff0c$\\texttt{mx}$ \u8868\u793a\u533a\u95f4 $[l, r]$ \u4e2d\u6700\u5927\u7684\u5b50\u533a\u95f4\u4e58\u79ef\u3002\n\n\u4f46\u662f\u56e0\u4e3a**\u8d1f\u8d1f\u5f97\u6b63**\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u5f15\u5165 $\\texttt{lmn}$ \u548c $\\texttt{rmn}$\uff0c\u5404\u8868\u793a\u533a\u95f4 $[l, r]$ \u4e2d\u4ee5 $l$ \u4e3a\u5de6\u8fb9\u754c\u7684\u5b50\u533a\u95f4\u7684\u6700\u5c0f\u4e58\u79ef\u548c\u533a\u95f4 $[l, r]$ \u4e2d\u4ee5 $r$ \u4e3a\u53f3\u8fb9\u754c\u7684\u5b50\u533a\u95f4\u7684\u6700\u5c0f\u4e58\u79ef\u3002\n\n\u518d\u7528 $\\texttt{sum}$ \u8868\u793a\u533a\u95f4 $[l, r]$ \u4e2d\u6240\u6709\u5143\u7d20\u7684\u4e58\u79ef\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230 $\\texttt{pushup}$ \u51fd\u6570\u4e86\u3002\n\n```cpp\ntree pushup(tree x, tree y)\n{\n\ttree tmp;\n    \n\t//\u5bf9lmx\u548crmx\u7684\u5904\u7406\uff0c\u59cb\u7ec8\u4fdd\u6301\u5176\u4e3a\u6b63\u6570\u3002\n\ttmp.lmx = x.lmx;\n\tif (x.sum > 0) tmp.lmx = max(tmp.lmx, x.sum * y.lmx);\n\telse tmp.lmx = max(tmp.lmx, x.sum * y.lmn);\n\ttmp.rmx = y.rmx;\n\tif (y.sum > 0) tmp.rmx = max(tmp.rmx, x.rmx * y.sum);\n\telse tmp.rmx = max(tmp.rmx, x.rmn * y.sum);\n    \n\t//\u5bf9lmn\u548crmn\u7684\u5904\u7406\uff0c\u59cb\u7ec8\u4fdd\u6301\u5176\u4e3a\u8d1f\u6570\u62161\u3002\n\ttmp.lmn = x.lmn;\n\tif (x.sum > 0) tmp.lmn = min(tmp.lmn, x.sum * y.lmn);\n\telse tmp.lmn = min(tmp.lmn, x.sum * y.lmx);\n\ttmp.rmn = y.rmn;\n\tif (y.sum > 0) tmp.rmn = min(tmp.rmn, x.rmn * y.sum);\n\telse tmp.rmn = min(tmp.rmn, x.rmx * y.sum);\n\t\n   \t//\u5bf9mx\u7684\u5904\u7406\uff0c\u7b80\u5355\u679a\u4e3e\u51e0\u79cd\u60c5\u51b5\u53d6max\u5373\u53ef\u3002\n\ttmp.mx = max(x.mx, y.mx);\n\ttmp.mx = max(tmp.mx, max(x.rmx * y.lmx, x.rmn * y.lmn));\n\ttmp.mx = max(tmp.mx, max(tmp.lmx, tmp.rmx));\n\ttmp.sum = x.sum * y.sum;\n\n\t//\u8fd9\u4e2awork\u6709\u91cd\u8981\u4f5c\u7528\uff0c\u5f85\u4f1a\u8bb2\u3002\n\twork(tmp.lmn), work(tmp.rmn), work(tmp.lmx), work(tmp.rmx);\n\twork(tmp.mx), work(tmp.sum);\n\treturn tmp;\n}\n```\n\n\u4f46\u662f\u53c8\u51fa\u73b0\u4e86\u95ee\u9898\uff1a\u8fd9\u6837\u4e58\u4f1a\u7206 $\\texttt{long long}$\u3002\n\n\u5176\u5b9e\u4e5f\u5f88\u597d\u89e3\u51b3\uff0c\u6bcf\u6b21\u53ea\u9700\u5224\u65ad\u5b83\u662f\u5426\u5927\u4e8e $2^{30}$\uff0c\u662f\u7684\u8bdd\u628a\u5b83\u8d4b\u6210 $2^{30} + 1$ \u5373\u53ef\uff0c\u8d1f\u6570\u4e5f\u540c\u7406\u3002\n\n\u6240\u4ee5 $\\texttt{work}$ \u5c31\u8ddf\u4ee3\u7801\u4e00\u8d77\u653e\u4e86\u3002\n\n## Code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define gc getchar\nusing namespace std;\ntypedef long long ll;\n#define int long long\n#define ls id << 1\n#define rs (id << 1) | 1\nconst int N = 2e5 + 10;\nconst int maxn = 2e5 + 10;\nconst int mod = 998244353;\nconst int INF = (1 << 30) + 1;\nconst ll inf = 0x3f3f3f3f3f3f3f3f;\ninline int gcd(int a, int b) {return !b ? a : gcd(b, a % b);}\ninline void print(int x) {if (x < 0) putchar('-'), x = -x; if(x > 9) print(x / 10); putchar(x % 10 + '0');}\ninline int ksm(int a, int b) {int base = a % mod, res = 1; while(b){if(b & 1) res = (res * base) % mod; base = (base * base) % mod, b >>= 1;}return res % mod;}\ninline int mul(int a, int b) {int base = a % mod, res = 0; while(b){if(b & 1) res = (res + base) % mod; base = (base + base) % mod, b >>= 1;}return res % mod;}\ninline char readchar() {static char buf[100000], *p1 = buf, *p2 = buf; return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1++;}\ninline int read() {int res = 0, f = 0; char ch = gc();for (; !isdigit(ch); ch = gc()) f |= (ch == '-'); for (; isdigit(ch); ch = gc()) res = (res << 1) + (res << 3) + (ch ^ '0'); return f ? -res : res;}\nint n, q, a[N];\nstruct tree\n{\n\tint sum, lmx, rmx, lmn, rmn, mx;\n}t[N << 2];\nvoid work(int &x)\n{\n\tif (x < 0) x = max(x, -INF);\n\telse x = min(x, INF);\n}\ntree pushup(tree x, tree y)\n{\n\ttree tmp;\n\n\ttmp.lmx = x.lmx;\n\tif (x.sum > 0) tmp.lmx = max(tmp.lmx, x.sum * y.lmx);\n\telse tmp.lmx = max(tmp.lmx, x.sum * y.lmn);\n\ttmp.rmx = y.rmx;\n\tif (y.sum > 0) tmp.rmx = max(tmp.rmx, x.rmx * y.sum);\n\telse tmp.rmx = max(tmp.rmx, x.rmn * y.sum);\n\n\ttmp.lmn = x.lmn;\n\tif (x.sum > 0) tmp.lmn = min(tmp.lmn, x.sum * y.lmn);\n\telse tmp.lmn = min(tmp.lmn, x.sum * y.lmx);\n\ttmp.rmn = y.rmn;\n\tif (y.sum > 0) tmp.rmn = min(tmp.rmn, x.rmn * y.sum);\n\telse tmp.rmn = min(tmp.rmn, x.rmx * y.sum);\n\t\n\ttmp.mx = max(x.mx, y.mx);\n\ttmp.mx = max(tmp.mx, max(x.rmx * y.lmx, x.rmn * y.lmn));\n\ttmp.mx = max(tmp.mx, max(tmp.lmx, tmp.rmx));\n\ttmp.sum = x.sum * y.sum;\n\n\twork(tmp.lmn), work(tmp.rmn), work(tmp.lmx), work(tmp.rmx);\n\twork(tmp.mx), work(tmp.sum);\n\treturn tmp;\n}\nvoid build(int id, int l, int r)\n{\n\tif (l == r)\n\t{\n\t\tint x = a[l];\n\t\tt[id].sum = x;\n\t\tif (x < 0) t[id].mx = max(1ll, x), t[id].lmx = t[id].rmx = t[id].lmn = t[id].rmn = min(1ll, x);\n\t\telse t[id].lmn = t[id].rmn = t[id].lmx = t[id].rmx = t[id].mx = max(1ll, x);\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls, l, mid);\n\tbuild(rs, mid + 1, r);\n\tt[id] = pushup(t[ls], t[rs]);\n}\nvoid update(int id, int l, int r, int p, int x)\n{\n\tif (l == r)\n\t{\n\t\tt[id] = (tree){0, 0, 0, 0, 0, 0};\n\t\tt[id].sum = x;\n\t\tif (x < 0) t[id].mx = max(1ll, x), t[id].lmx = t[id].rmx = t[id].lmn = t[id].rmn = min(1ll, x);\n\t\telse t[id].lmn = t[id].rmn = t[id].lmx = t[id].rmx = t[id].mx = max(1ll, x);\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tif (mid >= p) update(ls, l, mid, p, x);\n\telse update(rs, mid + 1, r, p, x);\n\tt[id] = pushup(t[ls], t[rs]);\n}\ntree query(int id, int l, int r, int a, int b)\n{\n\tif (l >= a && r <= b) return t[id];\n\tint mid = (l + r) >> 1;\n\ttree res;\n\tbool bl = 0;\n\tif (a <= mid) res = query(ls, l, mid, a, b), bl = 1;\n\tif (b > mid)\n\t\tif (bl) res = pushup(res, query(rs, mid + 1, r, a, b));\n\t\telse res = query(rs, mid + 1, r, a, b);\n\treturn res;\n}\nsigned main()\n{\n\t//freopen(\"T1ex2.in\", \"r\", stdin);\n\t//freopen(\"T1.out\", \"w\", stdout);\n\tn = read(), q = read();\n\tfor (int i = 1; i <= n; i++) a[i] = read(), work(a[i]);\n\tbuild(1, 1, n);\n\twhile (q--)\n\t{\n\t\tint opt = read(), x = read(), y = read();\n\t\tif (opt == 1) update(1, 1, n, x, y);\n\t\tif (opt == 2)\n\t\t{\n\t\t\tint xx = query(1, 1, n, x, y).mx;\n\t\t\tif (xx == INF) printf(\"Too large\");\n\t\t\telse print(xx);\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n\u5b8c\u7ed3\u6492\u82b1\u3002",
        "postTime": 1664805406,
        "uid": 570066,
        "name": "Fatal_Cactus",
        "ccfLevel": 6,
        "title": "P8563 Magenta Potion \u9898\u89e3"
    },
    {
        "content": "\u4ee5\u4e0b\u8bb0 $M=2^{30}$\u3002\r\n\r\n#### Solution 1\r\n\r\n\u7531\u4e8e\u5b9a\u4e49\u4e86\u7a7a\u533a\u95f4\u7684\u5143\u7d20\u4e58\u79ef\u4e3a $1$\uff0c\u6211\u4eec\u53ea\u7528\u8003\u8651\u5143\u7d20\u4e58\u79ef\u4e3a\u6b63\u6574\u6570\u7684\u5b50\u533a\u95f4\u3002\r\n\r\n\u8003\u8651\u66b4\u529b\uff0c\u6211\u4eec\u679a\u4e3e\u8be2\u95ee\u5230\u7684\u533a\u95f4\u7684\u6240\u6709\u5b50\u533a\u95f4\uff0c\u5148\u5224\u65ad\u4e58\u79ef\u662f\u5426\u4e3a\u6b63\uff0c\u5982\u679c\u4e3a\u6b63\u5219\u76f4\u63a5\u8ba1\u7b97\u5176\u4e2d\u7684\u5143\u7d20\u4e58\u79ef\u6216\u8005\u5224\u65ad\u51fa\u5927\u4e8e $M$\u3002\r\n\r\n\u5982\u679c\u4efb\u610f\u65f6\u523b\u4e58\u79ef\u7684\u7edd\u5bf9\u503c\u5df2\u7ecf\u5927\u4e8e $M$ \u4e86\uff0c\u7531\u4e8e\u5e8f\u5217\u4e2d\u90fd\u662f\u975e\u96f6\u6574\u6570\uff0c\u6700\u540e\u7684\u4e58\u79ef\u4e5f\u662f\u5927\u4e8e $M$ \u7684\uff0c\u76f4\u63a5\u8f93\u51fa `Too large` \u5373\u53ef\uff1b\u5426\u5219\u8f93\u51fa\u6240\u6709\u4e0d\u662f\u592a\u5927\u7684\u4e58\u79ef\u7684\u6700\u5927\u503c\u3002\r\n\r\n\u76f4\u63a5\u5b9e\u73b0\uff0c\u590d\u6742\u5ea6\u4e3a $O(q(r-l)^3)$\uff0c\u671f\u671b\u901a\u8fc7\u6570\u636e\u70b9 $1\\sim 6$\u3002\r\n\r\n#### Solution 2\r\n\r\n\u7ee7\u7eed\u5206\u6790\u4e00\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u53ef\u80fd\u662f\u4ec0\u4e48\u6837\u3002\r\n\r\n\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u6240\u6709\u6570\u7684\u4e58\u79ef\u975e\u8d1f\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u533a\u95f4\u4e2d\u6240\u6709\u6570\u7684\u4e58\u79ef\uff1b\u5426\u5219\u8bbe\u8fd9\u4e2a\u533a\u95f4\u4ece\u5de6\u5f80\u53f3\u7684\u7b2c\u4e00\u4e2a\u3001\u6700\u540e\u4e00\u4e2a\u8d1f\u6570\u7684\u4f4d\u7f6e\u5206\u522b\u4e3a $x,y$\u3002\u6211\u4eec\u53d1\u73b0\u4efb\u610f\u540c\u65f6\u5305\u542b $x,y$ \u7684\u533a\u95f4\u4e58\u79ef\u90fd\u662f\u8d1f\u6570\uff1b\u800c\u5176\u4ed6\u7684\u533a\u95f4\u4e00\u5b9a\u662f $[l,y-1]$ \u6216\u8005 $[x+1,r]$ \u7684\u5b50\u533a\u95f4\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u5b50\u533a\u95f4\u7684\u4e58\u79ef\u662f\u6b63\u6570\uff0c\u6211\u4eec\u53ea\u7528\u5206\u522b\u8ba1\u7b97\u5373\u53ef\u3002\uff08\u6216\u8005\u5224\u65ad\u5927\u4e8e $M$\uff09\r\n\r\n\u66b4\u529b\u7684\u5b9e\u73b0\u4e0a\u8ff0\u505a\u6cd5\uff0c\u5728\u7edd\u5bf9\u503c\u5927\u4e8e $M$ \u65f6\u7ed3\u675f\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(q(r-l))$\uff0c\u671f\u671b\u901a\u8fc7\u6570\u636e\u70b9 $1\\sim 10$\u3002\r\n\r\n#### Solution 3\r\n\r\n\u5728 $r-l \\le 100$ \u7684\u65f6\u5019\u4f7f\u7528 Solution 2 \u66b4\u529b\u3002\u5426\u5219\u6211\u4eec\u8bc1\u660e\u7b54\u6848\u4e00\u5b9a\u4e3a `Too large`\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u6240\u6709\u6570\u7684\u4e58\u79ef\u975e\u8d1f\uff0c\u81f3\u5c11\u662f $2^{100}$\uff1b\u5426\u5219\u6211\u4eec\u627e\u5230\u7684\u4e24\u4e2a\u533a\u95f4 $[l,y-1]$ \u548c $[x+1,r]$  \u4e00\u5b9a\u6709\u4e00\u4e2a\u957f\u5ea6\u4e0d\u5c0f\u4e8e $50$\uff0c\u90a3\u4e48\u4e58\u79ef\u7684\u7edd\u5bf9\u503c\u81f3\u5c11\u4e3a $2^{50}$\uff0c\u7ed3\u5408\u4e58\u79ef\u975e\u8d1f\u77e5\u9053\u7b54\u6848\u4e3a `Too large`\u3002\r\n\r\n### \u539f\u7248\u672c\r\n\r\n\u539f\u7248\u672c\u5141\u8bb8 $a_i,k$ \u7684\u7edd\u5bf9\u503c\u4e3a $1$\u3002\u9488\u5bf9\u539f\u7248\u672c\u6709\u4ee5\u4e0b\u89e3\u6cd5\uff1a\r\n\r\n#### Solution 4\r\n\r\n\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4 Solution 2 \u5373\u53ef\u3002\u6211\u4eec\u4f7f\u7528\u4e24\u4e2a `set` \u5206\u522b\u7ef4\u62a4\u6570\u5217\u4e2d\u8d1f\u6570\u7684\u4e0b\u6807\u4ee5\u53ca\u7edd\u5bf9\u503c\u5927\u4e8e\u7b49\u4e8e $2$ \u7684\u6570\u7684\u4e0b\u6807\u3002\u5229\u7528 `set` \u4e2d\u81ea\u5e26\u7684 `lower_bound()` \u51fd\u6570\u53ef\u4ee5\u5728 $O(\\log n)$ \u7684\u65f6\u95f4\u5185\u627e\u5230\u4e0a\u8ff0 $x,y$\u3002\u5bf9\u4e8e\u8ba1\u7b97\u533a\u95f4\u4e58\u79ef\uff0c\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u6b63\u8d1f\u6027\uff0c\u53ea\u7528\u8ba1\u7b97\u5927\u4e8e\u7b49\u4e8e $2$ \u7684\u6570\u7684\u7edd\u5bf9\u503c\u7684\u4e58\u79ef\u3002\u5728 `set` \u4e0a\u66b4\u529b\u5f80\u540e\u8df3\uff0c\u76f4\u5230\u5927\u4e8e $M$ \u6216\u8005\u5230 $r$ \u4e3a\u6b62\uff0c\u8fd9\u91cc\u6700\u591a\u8df3\u4e86 $O(\\log M)$ \u6b21\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u4e3a $O((n+q)(\\log n+\\log M))$\uff0c\u671f\u671b\u901a\u8fc7\u6240\u6709\u6570\u636e\u70b9\u3002\r\n\r\n#### Solution 5\r\n\r\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u3002\u8fd9\u4e2a\u505a\u6cd5\u76f8\u8f83\u4e8e\u4e0a\u4e00\u4e2a\u505a\u6cd5\u7ec6\u8282\u66f4\u5c11\u3002\u6bcf\u4e00\u4e2a\u8282\u70b9\u7ef4\u62a4\u5982\u4e0b\u4fe1\u606f\uff1a\u533a\u95f4\u4e58\u79ef\u7684\u7b26\u53f7\uff1b\u533a\u95f4\u4e58\u79ef\u7684\u7edd\u5bf9\u503c\uff08\u5982\u679c\u4e0d\u8d85\u8fc7 $M$ \u5c31\u8bb0\u5f55\u771f\u5b9e\u503c\uff0c\u5426\u5219\u8bb0\u5f55 $M+1$\uff09\uff1b\u533a\u95f4\u5185\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u8d1f\u6570\u7684\u4f4d\u7f6e\u3002\r\n\r\n\u4ee5\u4e0a\u4fe1\u606f\u5bb9\u6613\u5c06\u5de6\u53f3\u513f\u5b50\u5408\u5e76\u3002\u5355\u70b9\u4fee\u6539\u65f6\u4e00\u8def `pushup` \u5373\u53ef\uff1b\u533a\u95f4\u67e5\u8be2\u65f6\u4e5f\u5f88\u597d\u5229\u7528\u7ef4\u62a4\u7684\u4fe1\u606f\u627e\u5230\u7b2c\u4e00\u4e2a\uff0c\u6700\u540e\u4e00\u4e2a\u8d1f\u6570\u7684\u4f4d\u7f6e\uff0c\u518d\u7528\u4e00\u822c\u7684\u5904\u7406\u65b9\u5f0f\u8ba1\u7b97\u533a\u95f4\u4e58\u79ef\u3002\u603b\u590d\u6742\u5ea6 $O(n+q\\log n)$\uff0c\u671f\u671b\u901a\u8fc7\u6240\u6709\u6570\u636e\u70b9\u3002\r\n\r\n#### \u5b9e\u73b0\u7ec6\u8282\r\n\r\n\u6ce8\u610f\u5404\u79cd\u5730\u65b9\u662f\u5426\u8981 $+1,-1$\uff1b\u7b54\u6848\u5e94\u8be5\u521d\u59cb\u5316\u4e3a $1$ \u800c\u4e0d\u662f $0$ \u6216\u8005 $-\\infty$\uff0c\u56e0\u4e3a\u8fd9\u662f\u7a7a\u533a\u95f4\u7684\u7b54\u6848\u3002",
        "postTime": 1664795747,
        "uid": 254752,
        "name": "JohnVictor",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P8563"
    },
    {
        "content": "$\\text{Update 2022/10/04}$ \u88ab\u8ba8\u8bba\u533a\u7684 $\\text{Hack}$ \u6570\u636e\u5361\u4e86\uff0c\u4fee\u6539\u4ee3\u7801\u3002\n\n[\u9898\u76ee\u4f20\u9001\u95e8\u3002](https://www.luogu.com.cn/problem/P8563)\n\n\u4f5c\u8005\u5206\u6210\u4e86\u4e24\u4e2a `namespace`\u3002`namespace subtask1` \u662f\u9488\u5bf9\u6709\u8d1f\u6570\u7684\u60c5\u51b5\uff0c\u800c `namespace subtask2` \u662f\u9488\u5bf9\u6ca1\u6709\u8d1f\u6570\u7684\u60c5\u51b5\u3002\n\n## namespace subtask2\uff08\u7279\u6b8a\u6027\u8d28 A\uff09\n\u56e0\u4e3a\u5168\u90e8\u4e3a\u6b63\u6570\uff0c\u6240\u4ee5\u6700\u5927\u7684\u80af\u5b9a\u662f\u5168\u90e8\u4e58\u8d77\u6765\uff0c\u5982\u679c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4f1a\u8d85\u8fc7 $2^{30}$\uff0c\u90a3\u4e48\u8f93\u51fa `Too large` \u5426\u5219\u8f93\u51fa\u4e58\u79ef\u3002\n\n\n## namespace subtask1\uff08\u4e0d\u6ee1\u8db3\u7279\u6b8a\u6027\u8d28 A\uff09\n\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u533a\u95f4\u5f00\u59cb\u70b9\u3002\n\n\u5982\u679c\u4e58\u51fa\u8d85\u8fc7 $2^{30}$ \u7684\u60c5\u51b5\uff0c\u8f93\u51fa `Too large`\uff1b\u5982\u679c\u4e58\u51fa\u5c0f\u4e8e $-2^{30}$ \u7684\u60c5\u51b5\uff0c\u5982\u679c\u4ece\u5269\u4e0b\u7684\u6570\u5230\u533a\u95f4\u7ed3\u675f\u6ca1\u6cd5\u4f7f\u5b83\u53d8\u6210\u6b63\u6570\u5219\u76f4\u63a5\u9000\u51fa\u679a\u4e3e\u5faa\u73af\u679a\u4e3e\u4e0b\u4e00\u4e2a\u5de6\u7aef\u70b9\u3002\u6bcf\u6b21\u8ba1\u7b97\u90fd\u53d6\u4e00\u6b21 $\\max$\u3002**\u8bf7\u6ce8\u610f\u7b54\u6848\u53ef\u4ee5\u662f\u7a7a\u533a\u95f4\uff0c\u6240\u4ee5 `maxn` \u521d\u59cb\u503c\u5e94\u8bbe\u4e3a $1$\u3002**\n\n\u4e0a\u9762\u7684\u505a\u6cd5\u539f\u6765\u80fd\u901a\u8fc7\u672c\u9898\uff0c\u4f46\u73b0\u5728\u88ab\u5361\u4e86\u3002\n\n\u53d1\u73b0\u6bcf\u4e2a\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u8bbe\u6cd5\u5f80\u540e\u627e\u5230\u8d1f\u6570\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528 `vector` \u7ef4\u62a4\u6240\u6709\u8d1f\u6570\u6240\u5728\u4f4d\u7f6e\uff0c\u5e76\u5728\u6bcf\u6b21\u8fdb\u884c\u4fee\u6539\u64cd\u4f5c\u4e2d\u7ef4\u62a4\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u8c03\u7528\u51fd\u6570 `upper_bound`\uff0c\u6545\u67e5\u627e\u8fd9\u4e2a\u6570\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(\\log n)$\u3002\u56e0\u4e3a\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53ea\u8981\u4e58\u5230 $31$ \u6b21\u5c31\u5fc5\u7136\u4f1a\u4e0d\u5728 $[-2^{30},2^{30}]$ \u8fd9\u4e2a\u533a\u95f4\u5185\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8d85\u65f6\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nint a[200005],opt[200005],l[200005],r[200005],n,q;\nstd::vector<int>v;\ninline int read(){\n    int x=0;\n    short t=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-'){\n            t=-1;\n        }\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=x*10+(ch-'0');\n        ch=getchar();\n    }\n    return x*t;\n}\nconst int MAXN=1<<30;\nint choose=2;\nvoid init(){\n    n=read(),q=read();\n    for(int i=1;i<=n;++i){\n        a[i]=read();\n        if(a[i]<0){\n            choose=1;\n            v.push_back(i);\n        }\n    }\n    for(int i=1;i<=q;++i){\n        opt[i]=read();\n        l[i]=read();\n        r[i]=read();\n        if(r[i]<0)choose=1;\n    }\n}\nnamespace subtask1 {\n    void solve(){\n        for(int I=1;I<=q;++I){\n            if(opt[I]==1){\n                auto it=lower_bound(v.begin(),v.end(),l[I]);\n                if(a[l[I]]<0){\n                    v.erase(it);\n                }\n                if(r[I]<0){\n                    v.insert(it,l[I]);\n                }\n                a[l[I]]=r[I];\n            }\n            else {\n                bool f=1;\n                long long maxn=1;\n                for(int i=l[I];i<=r[I];++i){\n                    long long mul=1;\n                    for(int j=i;j<=r[I];++j){\n                        mul=mul*a[j];\n                        if(mul>MAXN){\n                            f=0;\n                            break;\n                        }\n                        if(mul<-MAXN){\n                            short now=-1;\n                            auto it=upper_bound(v.begin(),v.end(),j);\n                            if(it==v.end())break;\n                            if(*it>r[I])break;\n                            f=0;\n                            break;\n                        }\n                        maxn=std::max(maxn,mul);\n                    }\n                    if(!f)break;\n                }\n                if(!f)puts(\"Too large\");\n                else printf(\"%lld\\n\",maxn);\n            }\n        }\n    }\n};\nnamespace subtask2 {\n    void solve(){\n        for(int i=1;i<=q;++i){\n            long long mul=1;\n            bool f=1;\n            if(opt[i]==1){\n                a[l[i]]=r[i];\n                continue;\n            }\n            for(int j=l[i];j<=r[i];++j){\n                mul=mul*a[j];\n                if(mul>MAXN){\n                    f=0;\n                    break;\n                }\n            }\n            if(!f)puts(\"Too large\");\n            else printf(\"%lld\\n\",mul);\n        }\n    }\n};\nint main(){\n    init();\n    if(choose==2)subtask2::solve();\n    else subtask1::solve();\n}\n```",
        "postTime": 1664792454,
        "uid": 678965,
        "name": "EXCRT",
        "ccfLevel": 0,
        "title": "P8563 Magenta Potion \u9898\u89e3"
    },
    {
        "content": "\u6b63\u89e3\u5c31\u662f\u7ebf\u6bb5\u6811\u561b\uff08\u786e\u4fe1\uff09\u3002\n\n\u6240\u6709\u6570\u7684\u7edd\u5bf9\u503c\u90fd\u5927\u4e8e $2$\uff0c\u5f53\u533a\u95f4\u5185\u8d1f\u6570\u7684\u6570\u91cf\u662f\u4e2a**\u5076\u6570**\u65f6\uff0c\u7b54\u6848\u662f\u6574\u4e2a\u533a\u95f4\u7684\u4e58\u79ef\u3002\n\n\u5982\u679c\u6570\u91cf\u662f\u4e2a\u5947\u6570\uff0c\u90a3\u4e48\u9700\u8981**\u820d\u53bb\u4e00\u4e2a\u8d1f\u6570**\u3002\u53c8\u56e0\u4e3a\u5b50\u533a\u95f4\u8d8a\u5927\u8d8a\u597d\uff0c\u6240\u4ee5\u53ea\u53ef\u80fd\u820d\u53bb\u6700\u5de6\u8fb9\u6216\u8005\u6700\u53f3\u8fb9\u7684\u8d1f\u6570\u3002\n\n\u4e8e\u662f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u7684\u4e58\u79ef\u3001\u8d1f\u6570\u7684\u6570\u91cf\u3001\u6700\u5de6\u548c\u6700\u53f3\u8d1f\u6570\u7684\u4f4d\u7f6e\u5c31\u597d\u4e86\u3002\n\n\u8fd8\u6709\u5c31\u662f\u5904\u7406 ```Too large``` \u7684\u7ec6\u8282\uff0c\u5982\u679c\u4e00\u4e2a\u5b50\u533a\u95f4\u7684\u4e58\u79ef\u5927\u4e8e $2^{30}$ \u6216\u8005\u5c0f\u4e8e $-2^{30}$\uff0c\u5927\u80c6\u5730\u628a\u5b83\u6807\u8bb0\u4e0a\u3002\u53ea\u8981\u7b54\u6848\u5305\u542b\u8fd9\u4e00\u6bb5\u5c31\u662f ```Too large``` \u5450\u3002\n\n\uff08\u6bd4\u8d5b\u65f6\u6ca1\u5224\u65ad\u5c0f\u4e8e $-2^{30}$ \u6302\u4e86 $60$ \u5206\u3002\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\nconst int maxn=2e5+50,INF=pow(2,30);\n#define ll long long\nint n,q;\nll a[maxn*4],tr[maxn*4];\nll tw[maxn*4];\nll lw[maxn*4],rw[maxn*4];\ninline void pushup(int k)\n{\n\ttw[k]=tw[k*2]+tw[k*2+1];\n\tlw[k]=min(lw[k*2],lw[k*2+1]);rw[k]=max(rw[k*2],rw[k*2+1]);\n\ttr[k]=tr[k*2]*tr[k*2+1];\n\tif(tr[k]>INF||tr[k]<-INF)tr[k]=INF+114;\n}\ninline void build(int k,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\ttr[k]=(a[l]>INF||a[l]<-INF)?INF+114:a[l];\n\t\ttw[k]=(a[l]<0)?1:0;\n\t\tlw[k]=(a[l]<0)?l:0x7fffffff;\n\t\trw[k]=(a[l]<0)?l:-1;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(k*2,l,mid);\n\tbuild(k*2+1,mid+1,r);\n\tpushup(k);\n}\ninline void update(int k,int l,int r,int x,int v)\n{\n\tif(r<x||l>x)return;\n\tif(l==r&&l==x)\n\t{\n\t\ttr[k]=(v>INF||v<-INF)?INF+114:v;\n\t\ttw[k]=(v<0)?1:0;\n\t\tlw[k]=(v<0)?x:0x7fffffff;\n\t\trw[k]=(v<0)?x:-1;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x<=mid)update(k*2,l,mid,x,v);\n\tif(x>mid)update(k*2+1,mid+1,r,x,v);\n\tpushup(k);\n}\ninline ll queryT(int k,int l,int r,int x,int y)\n{\n\tif(r<x||l>y)return 0;\n\tif(x<=l&&r<=y)return tw[k];\n\tint mid=(l+r)>>1,ans=0;\n\tif(x<=mid)ans+=queryT(k*2,l,mid,x,y);\n\tif(y>mid)ans+=queryT(k*2+1,mid+1,r,x,y);\n\treturn ans;\n}\ninline ll queryL(int k,int l,int r,int x,int y)\n{\n\tif(r<x||l>y)return 0x7fffffff;\n\tif(x<=l&&r<=y)return lw[k];\n\tint mid=(l+r)>>1;\n\tll ans=0x7fffffff;\n\tif(x<=mid)ans=min(ans,queryL(k*2,l,mid,x,y));\n\tif(y>mid)ans=min(ans,queryL(k*2+1,mid+1,r,x,y));\n\treturn ans;\n}\ninline ll queryR(int k,int l,int r,int x,int y)\n{\n\tif(r<x||l>y)return -1;\n\tif(x<=l&&r<=y)return rw[k];\n\tint mid=(l+r)>>1;\n\tll ans=-1;\n\tif(x<=mid)ans=max(ans,queryR(k*2,l,mid,x,y));\n\tif(y>mid)ans=max(ans,queryR(k*2+1,mid+1,r,x,y));\n\treturn ans;\n}\ninline ll queryS(int k,int l,int r,int x,int y)\n{\n\tif(r<x||l>y)return 1ll;\n\tif(x<=l&&r<=y)return tr[k];\n\tint mid=(l+r)>>1;\n\tll ans=1ll;\n\tans*=queryS(k*2,l,mid,x,y);\n\tif(ans>INF||ans<-INF)return INF+114;\n\tans*=queryS(k*2+1,mid+1,r,x,y);\n\tif(ans>INF||ans<-INF)return INF+114;\n\treturn ans;\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>q;\n\tfor(int i=1;i<=n;i++)cin>>a[i];\n\tbuild(1,1,n);\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint opt,l,r;\n\t\tcin>>opt>>l>>r;\n\t\tif(opt==1)update(1,1,n,l,r);\n\t\telse\n\t\t{\n\t\t\tif(queryT(1,1,n,l,r)%2==0)\n\t\t\t{\n\t\t\t\tll ans=queryS(1,1,n,l,r);\n\t\t\t\tif(ans<=INF&&ans>=-INF)cout<<ans<<\"\\n\";\n\t\t\t\telse cout<<\"Too large\\n\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint L=queryL(1,1,n,l,r),R=queryR(1,1,n,l,r);\n\t\t\t\tll ans=max(queryS(1,1,n,L+1,r),queryS(1,1,n,l,R-1));\n\t\t\t\tif(ans<=INF&&ans>=-INF)cout<<ans<<\"\\n\";\n\t\t\t\telse cout<<\"Too large\\n\";\n\t\t\t}\n\t\t}\n\n}\n```\n",
        "postTime": 1664979165,
        "uid": 343739,
        "name": "Rst_pigeon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P8563"
    },
    {
        "content": "### Solution\n\n\u51fa\u9898\u4eba\u7ed9\u4e86\u4e00\u4e2a\u975e\u5e38\u826f\u5fc3\u7684\u6761\u4ef6\uff1a$a$ \u4e2d\u6240\u6709\u6570\u7684\u7edd\u5bf9\u503c\u90fd $\\ge 2$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6027\u8d28\uff1a\u7531\u4e8e\u6240\u6709\u6570\u7684\u7edd\u5bf9\u503c\u90fd $\\ge 2$\uff0c\u5bf9\u4e8e\u8be2\u95ee $2$ \u8be2\u95ee\u533a\u95f4 $[l,r]$ \u7684\u65f6\u5019\uff0c\u5f53 $r - l + 1 > 61$ \u65f6\uff0c\u663e\u7136\u5e94\u8be5\u8f93\u51fa `Too large`\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5f53 $r - l + 1 = 61$ \u65f6\uff0c\u6709\u4e00\u7ec4\u6700\u574f\u60c5\u51b5\uff1a$30$ \u4e2a $2$\uff0c\u4e00\u4e2a $-2$\uff0c$30$ \u4e2a $2$\u3002\u5982\u679c\u518d\u6dfb\u4e00\u4e2a\u6570\uff0c\u5219\u80af\u5b9a\u80fd\u627e\u5230\u4e58\u79ef $> 2^{30}$ \u7684\u533a\u95f4\u3002\n\n\u4e8e\u662f\u5bf9\u4e8e\u5269\u4e0b\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u66b4\u529b\u6a21\u62df\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6a21\u62df\u65f6\u6ce8\u610f\u7ec6\u8282\uff1a\n\n- \u5f53 $l = r$\uff08\u5373\u533a\u95f4\u957f\u5ea6\u4e3a $1$\uff09\u4e14 $a_l$ \u4e3a\u8d1f\u6570\u65f6\uff0c\u628a\u8fd9\u4e2a\u8d1f\u6570\u5220\u6389\uff0c\u8f93\u51fa $1$\u3002\n- \u5269\u4f59\u60c5\u51b5\u770b\u533a\u95f4\u5185\u8d1f\u6570\u4e2a\u6570\uff0c\u4e3a\u5076\u6570\u76f4\u63a5\u4e58\uff0c\u4e3a\u5947\u6570\u5219\u4ece\u4e24\u8fb9\u627e\u5230\u7b2c\u4e00\u4e2a\u8d1f\u6570\uff0c\u7136\u540e\u628a\u5269\u4f59\u90e8\u5206\u76f8\u4e58\u5c31\u53ef\u4ee5\u4e86\u3002\n- **\u6ce8\u610f\u4e58\u7684\u65f6\u5019\u8981\u4e58\u7edd\u5bf9\u503c\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u7206\u8d1f\u6570\u3002**\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define inf 1<<30\nusing namespace std;\nint n, q;\nll arr[200005];\n\nint main() {\n\tcin >> n >> q;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> arr[i];\n\twhile (q--) {\n\t\tint op, x, y;\n\t\tcin >> op >> x >> y;\n\t\tif (op == 1)\n\t\t\tarr[x] = y;\n\t\telse {\n\t\t\tif (x == y && arr[x] < 0)\n\t\t\t\tcout << 1 << endl;\n\t\t\telse {\n\t\t\t\tif (y - x + 1 > 61)\n\t\t\t\t\tcout << \"Too large\" << endl;\n\t\t\t\telse {\n\t\t\t\t\tint cnt = 0;\n\t\t\t\t\tfor (int i = x; i <= y; i++)\n\t\t\t\t\t\tif (arr[i] < 0)\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\tif (cnt % 2 == 0) {\n\t\t\t\t\t\tll res = 1;\n\t\t\t\t\t\tfor (int i = x; i <= y && res <= inf; i++)\n\t\t\t\t\t\t\tres *= abs(arr[i]);\n\t\t\t\t\t\tif (res > inf)\n\t\t\t\t\t\t\tcout << \"Too large\" << endl;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcout << res << endl;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint l = x, r = y;\n\t\t\t\t\t\twhile (arr[l] > 0 && l <= y)\n\t\t\t\t\t\t\tl++;\n\t\t\t\t\t\twhile (arr[r] > 0 && r >= x)\n\t\t\t\t\t\t\tr--;\n\t\t\t\t\t\tll res1 = 1, res2 = 1;\n\t\t\t\t\t\tfor (int i = l + 1; i <= y && res1 <= inf; i++)\n\t\t\t\t\t\t\tres1 *= abs(arr[i]);\n\t\t\t\t\t\tfor (int i = x; i < r && res2 <= inf; i++)\n\t\t\t\t\t\t\tres2 *= abs(arr[i]);\n\t\t\t\t\t\tif (res1 > inf || res2 > inf)\n\t\t\t\t\t\t\tcout << \"Too large\" << endl;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcout << max(res1, res2) << endl;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1664886988,
        "uid": 531258,
        "name": "Fishmaster",
        "ccfLevel": 5,
        "title": "P8563 \u9898\u89e3"
    },
    {
        "content": "~~T1 \u5199\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6 T2\u5199\u4e86\u4e2a $O(n^3)$ \u540e\u9762\u90fd\u4e0d\u4f1a\u5199\u8fd9\u76f4\u63a5\u803b\u8fb1\u9000\u5f79\u5f97\u4e86\u3002~~\n\n\u636e\u67d0\u7eff\u9e1f\u7ba1\u7406\u8bf4\u8fd9\u9898\u53ef\u4ee5\u66b4\u529b\u2026\u2026\u6211\u611f\u89c9\u6211\u7684\u65f6\u95f4\u88ab\u6d6a\u8d39\u4e86\u3002\n\n\u4f46\u662f\u6211\u89c9\u5f97\u65f6\u95f4\u4e5f\u4e0d\u80fd\u767d\u767d\u6d6a\u8d39\uff0c\u6240\u4ee5\u6211\u4eec\u6765\u8003\u8651\u4e00\u4e0b\u8fd9\u9898\u5982\u679c $\\exists a_i \\in \\{1, -1\\}$ \u600e\u4e48\u7528\u4f18\u96c5\u7684\u65b9\u5f0f\u505a\u51fa\u6765\u3002\n\n\u770b\u5230\u5b58\u5728\u4fee\u6539\u64cd\u4f5c\u548c\u533a\u95f4\u67e5\u8be2\u64cd\u4f5c\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u4fe1\u606f\u3002\n\n\u60f3\u5230\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u7684\u601d\u60f3\uff0c\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u4ece\u5de6\u8fb9\u5f00\u59cb\u7684\u533a\u95f4\u548c\u4ece\u53f3\u8fb9\u5f00\u59cb\u7684\u533a\u95f4\u7684\u4fe1\u606f\u3002\n\n\u8003\u8651\u5230\u4e58\u6cd5\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u5f00\u7ef4\u62a4\u4e58\u79ef\u4e3a\u6b63\u6570\u548c\u8d1f\u6570\u7684\u7edd\u5bf9\u503c\u6700\u5927\u503c\u3002\n\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u4ee4\u67d0\u4e2a\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\uff08\u4e0d\u59a8\u8bbe\u8be5\u8282\u70b9\u5728\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u4e3a $i$\uff09\u4e2d\u6709 $f_i = \\prod\\limits_{j=l}^r a_j$\uff0c\u90a3\u4e48\u5728\u8fd9\u4e2a\u533a\u95f4 $[l, r]$ \u5185\uff0c**\u4e0d\u5b58\u5728\u4e00\u4e2a\u8fde\u7eed\u533a\u95f4\u7684\u4e58\u79ef\u7684\u7edd\u5bf9\u503c\u5927\u4e8e $f_i$\u3002**\n\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e0e $f_i$ \u540c\u53f7\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u65e0\u9700\u8bb0\u5f55\u5de6\u53f3\u533a\u95f4\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u6574\u4e2a\u533a\u95f4\u7684\u4e58\u79ef\u5c31\u662f\u6700\u5927\u7684\u3002\n\n\u5728\u7ef4\u62a4\u4e0e $f_i$ \u5f02\u53f7\u7684\u60c5\u51b5\u65f6\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5206\u5f00\u8bb0\u5f55\u5de6\u53f3\u533a\u95f4\u7684\u4fe1\u606f\uff0c\u7528\u7c7b\u4f3c\u4e8e\u7ef4\u62a4\u6700\u5927\u5b50\u6bb5\u548c\u7684\u601d\u60f3\u6765\u5b8c\u6210\u3002\n\n\u4e0d\u59a8\u8bbe\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u533a\u95f4 $[l, r]$ \u4e2d\u4ece\u5de6\u8fb9\u5f00\u59cb\u7684\u4e00\u4e2a\u533a\u95f4 $[l, r']$ \u4e2d\uff0c\u4e0e $f_i$ \u5f02\u53f7\u7684\u7edd\u5bf9\u503c\u6700\u5927\u7684\u4e58\u79ef\u4e3a $g_i$\u3002\uff08\u8fd9\u8bdd\u597d\u62d7\u53e3\uff09\u4ece\u53f3\u8fb9\u5f00\u59cb\u7684\u4e00\u4e2a\u533a\u95f4 $[l',r]$ \u4e2d\uff0c\u4e0e $f_i$ \u5f02\u53f7\u7684\u7edd\u5bf9\u503c\u6700\u5927\u7684\u4e58\u79ef\u4e3a $h_i$\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u8be5\u533a\u95f4\u5185\u6700\u5927\u7684\u8fde\u7eed\u533a\u95f4\u7684\u4e58\u79ef\u4e3a $\\max\\{1, f_i, g_i, h_i\\}$\u3002\n\n\u5927\u90e8\u5206\u64cd\u4f5c\u90fd\u6bd4\u8f83\u5e38\u89c4\uff0c\u552f\u4e00\u4e00\u4e2a\u6bd4\u8f83\u56f0\u96be\u7684\u64cd\u4f5c\u5728\u4e8e\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u4fe1\u606f\u3002\uff08\u5728 Pushup \u548c Query \u64cd\u4f5c\u4e2d\u90fd\u6709\u7528\u5230\uff09\u5047\u8bbe\u6211\u4eec\u8981\u628a\u533a\u95f4 $j$ \u548c $k$ \u7684\u4fe1\u606f\u5408\u5e76\u5230 $i$\u3002\n\n\u5bf9\u4e8e $f_i$\uff0c\u663e\u7136\u76f4\u63a5\u4ee4\u5176\u4e3a $f_j \\times f_k$ \u5373\u53ef\u3002\n\n\u5bf9\u4e8e $g_i$\uff0c\u7531\u4e8e\u8981\u6c42\u5b83\u4e0e $f_i$ \u5f02\u53f7\uff0c\u6240\u4ee5\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u3002\u6211\u4eec\u53d1\u73b0 $f_j \\times g_k$ \u5fc5\u5b9a\u4e0e $f_i$ \u5f02\u53f7\u3002\u6240\u4ee5\u82e5 $f_i$ \u4e0e $f_j$ \u540c\u53f7\uff0c\u5219 $f_i$ \u53d6 $g_j$ \u4e0e $f_j \\times g_k$ \u4e2d\u7edd\u5bf9\u503c\u8f83\u5927\u7684\u4e00\u4e2a\u3002\u82e5 $f_i$ \u4e0e $f_j$ \u5f02\u53f7\uff0c\u5219 $f_i$ \u53d6 $f_j$ \u4e0e $f_j \\times g_k$ \u4e2d\u7edd\u5bf9\u503c\u8f83\u5927\u7684\u4e00\u4e2a\u3002\uff08$f_j \\times g_k$ \u7684\u7edd\u5bf9\u503c\u4e0d\u4e00\u5b9a\u5927\u4e8e $f_j$ \u7684\u7edd\u5bf9\u503c\uff0c\u56e0\u4e3a\u5728\u7ebf\u6bb5\u6811\u7684\u53f6\u5b50\u7ed3\u70b9\u53ef\u80fd\u51fa\u73b0 $g_k=0$ \u7684\u60c5\u51b5\uff09\n\n\u5bf9\u4e8e $h_i$\uff0c\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u6700\u540e\u6572\u4e00\u4e0b\u4f60\u7956\u4f20\u7684\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\u56e0\u4e3a\u662f\u5355\u70b9\u4fee\u6539\u6240\u4ee5\u61d2\u6807\u8bb0\u4e5f\u4e0d\u7528\u6253\u4e86\uff0c\u592a\u68d2\u4e86\uff01\uff08\uff1f\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int inf = 1 << 30;\nint n, q;\nclass IO {\n    template <class T>\n    void write(T a) {\n        if (a > 9)\n            write(a / 10);\n        putchar(a % 10 + '0');\n    }\npublic:\n    template <class T>\n    IO operator<<(T a) {\n        if (a < 0) {\n            putchar('-');\n            a = -a;\n        }\n        write(a);\n        return *this;\n    }\n    IO operator<<(char a) {\n        putchar(a);\n        return *this;\n    }\n    template <class T>\n    IO operator>>(T &a) {\n        int sign = 1;\n        a = 0;\n        char c = getchar();\n        while (c < '0' || c > '9') {\n            if (c == '-') {\n                sign = -1;\n            }\n            c = getchar();\n        }\n        while (c >= '0' && c <= '9') {\n            a = (a << 1) + (a << 3) + (c ^ 48);\n            c = getchar();\n        }\n        a *= sign;\n        return *this;\n    }\n} io;\nstruct Node {\n    ll f, g, h;\n    ll getval() {\n        return max(1ll, max(f, max(g, h)));\n    }\n} tr[800005];\nll a[200005];\nvoid Pushup(int p) {\n    tr[p].f = tr[p << 1].f * tr[p << 1 | 1].f;\n    if (abs(tr[p].f) > inf) tr[p].f = tr[p].f > 0 ? inf + 1 : -inf - 1;\n\n    if (tr[p].f * tr[p << 1].f < 0) tr[p].g = tr[p << 1].f;\n    else tr[p].g = tr[p << 1].g;\n    if (abs(tr[p].g) < abs(tr[p << 1].f * tr[p << 1 | 1].g)) tr[p].g = tr[p << 1].f * tr[p << 1 | 1].g;\n\n    if (tr[p].f * tr[p << 1 | 1].f < 0) tr[p].h = tr[p << 1 | 1].f;\n    else tr[p].h = tr[p << 1 | 1].h;\n    if (abs(tr[p].h) < abs(tr[p << 1 | 1].f * tr[p << 1].h)) tr[p].h = tr[p << 1 | 1].f * tr[p << 1].h;\n\n    if (abs(tr[p].g) > inf) tr[p].g = tr[p].g > 0 ? inf + 1 : -inf - 1;\n    if (abs(tr[p].h) > inf) tr[p].h = tr[p].h > 0 ? inf + 1 : -inf - 1;\n}\nvoid Build(int l, int r, int p) {\n    if (l == r) {\n        tr[p].f = a[l];\n        tr[p].g = tr[p].h = 0;\n        return;\n    }\n    else {\n        int mid = l + r >> 1;\n        Build(l, mid, p << 1);\n        Build(mid + 1, r, p << 1 | 1);\n        Pushup(p);\n    }\n}\nvoid Modify(int l, int cl, int cr, int p, ll w) {\n    if (cl == cr) {\n        tr[p].f = w;\n        tr[p].g = tr[p].h = 0;\n    }\n    else {\n        int mid = cl + cr >> 1;\n        if (l <= mid) {\n            Modify(l, cl, mid, p << 1, w);\n        }\n        else {\n            Modify(l, mid + 1, cr, p << 1 | 1, w);\n        }\n        Pushup(p);\n    }\n}\nNode Query(int l, int r, int cl, int cr, int p) {\n    if (cl >= l && cr <= r) {\n        return tr[p];\n    }\n    int mid = cl + cr >> 1;\n    Node ans, a, b;\n    if (r <= mid) {\n        ans = Query(l, r, cl, mid, p << 1);\n    }\n    else if (l > mid) {\n        ans = Query(l, r, mid + 1, cr, p << 1 | 1);\n    }\n    else {\n        a = Query(l, r, cl, mid, p << 1);\n        b = Query(l, r, mid + 1, cr, p << 1 | 1);\n        ans.f = a.f * b.f;\n        if (abs(ans.f) > inf) ans.f = ans.f > 0 ? inf + 1 : -inf - 1;\n        if (ans.f * a.f < 0) ans.g = a.f;\n        else ans.g = a.g;\n        if (abs(ans.g) < abs(a.f * b.g)) ans.g = a.f * b.g;\n\n        if (ans.f * b.f < 0) ans.h = b.f;\n        else ans.h = b.h;\n        if (abs(ans.h) < abs(b.f * a.h)) ans.h = b.f * a.h;\n\n        if (abs(ans.g) > inf) ans.g = ans.g > 0 ? inf + 1 : -inf - 1;\n        if (abs(ans.h) > inf) ans.h = ans.h > 0 ? inf + 1 : -inf - 1;\n    }\n    return ans;\n}\nint main() {\n    io >> n >> q;\n    for (int i = 1; i <= n; i++) io >> a[i];\n    Build(1, n, 1);\n    while (q--) {\n        int op, x, y;\n        io >> op >> x >> y;\n        if (op == 1) {\n            Modify(x, 1, n, 1, y);\n        }\n        else {\n            Node res = Query(x, y, 1, n, 1);\n            if (res.getval() > inf) puts(\"Too large\");\n            else printf(\"%lld\\n\", res.getval());\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1664791850,
        "uid": 363415,
        "name": "251Sec",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P8563 Magenta Potion"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u5e8f\u5217\uff0c\u591a\u6b21\u6c42\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u79ef\u3002\n\n## \u89e3\u6cd5\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u3002\n\n\u6bcf\u4e2a\u533a\u95f4\u7ef4\u62a4\u524d\u7f00\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u540e\u7f00\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c`pushup` \u65f6\u53ea\u6709\u53ef\u80fd\u6700\u5927\u4e58\u4ee5\u6700\u5927\u6216\u6700\u5c0f\u4e58\u4ee5\u6700\u5c0f\uff08\u8d1f\u6570\u4e58\u4ee5\u8d1f\u6570\uff09\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll __int128\n\nconst int N = 2e5 + 5, INF = 2e9, MOD = 1e9 + 7;\n\ninline ll read()\n{\n\tll op = 1, x = 0;\n\tchar ch = getchar();\n\twhile ((ch < '0' || ch > '9') && ch != '-') ch = getchar();\n\twhile (ch == '-')\n\t{\n\t\top = -op;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' and ch <= '9')\n\t{\n\t\tx = (x << (ll)1) + (x << (ll)3) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn x * op;\n}\n\ninline void write(ll x)\n{\n\tif (x < 0) putchar('-'), x = -x;\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nint n, q;\nll a[N], nans = LLONG_MIN;\nbool flag;\n\nclass SegmentTree\n{\npublic:\n\tstruct Node\n\t{\n\t\tint l, r;\n\t\tll lmaxn, rmaxn, mul, res;\n\t\tll lminn, rminn, totalres;\n\t\tbool is_bigger;\n\t}tr[N << 2];\n\tNode merge(Node x, Node y)\n\t{\n\t\tif (x.l == -1) return y;\n\t\tif (y.l == -1) return x;\n\t\tNode z;\n\t\tz.mul = x.mul * y.mul;\n\t\tz.l = x.l, z.r = y.r;\n\t\tz.lmaxn = max({x.lmaxn, x.mul * y.lmaxn, x.mul * y.lminn, (ll)1, z.mul});\n\t\tz.rmaxn = max({(ll)1, y.rmaxn, y.mul * x.rmaxn, y.mul * x.rminn, z.mul});\n\t\tz.res = max({ x.res, y.res, x.rmaxn * y.lmaxn, z.mul, (ll)1 });\n\t\tz.lminn = min({x.lminn, x.mul * y.lminn, z.mul, (ll)1, x.mul * y.lmaxn});\n\t\tz.rminn = min({y.rminn, y.mul * x.rminn, z.mul, (ll)1, y.mul * x.rmaxn});\n\t\tz.totalres = max({x.totalres, y.totalres, (ll)1, z.res, x.rminn * y.lminn});\n\t\tif (z.totalres > (__int128)1 << 30)\n\t\t{\n\t\t\tz.is_bigger = 1;\n\t\t}\n\t\telse z.is_bigger = 0;\n\t\tz.is_bigger |= (x.is_bigger | y.is_bigger);\n\t\treturn z;\n\t}\n\tvoid pushup(int u)\n\t{\n\t\ttr[u] = merge(tr[u << 1], tr[u << 1 | 1]);\n\t}\n\tvoid build(int u, int l, int r)\n\t{\n\t\ttr[u] = { l, r, a[l], a[l], a[l], a[l], a[l], a[l], a[l], 0 };\n\t\ttr[u].lmaxn = tr[u].rmaxn = tr[u].res = max(tr[u].res, (ll)1);\n\t\ttr[u].lminn = tr[u].rminn = min(tr[u].lminn, (ll)1);\n\t\ttr[u].totalres = max(tr[u].totalres, (ll)1);\n\t\tif (l == r) return;\n\t\tint mid = l + r >> 1;\n\t\tbuild(u << 1, l, mid);\n\t\tbuild(u << 1 | 1, mid + 1, r);\n\t\tpushup(u);\n\t}\n\tvoid update(int u, int p, ll x)\n\t{\n\t\tif (tr[u].l == tr[u].r)\n\t\t{\n\t\t\ttr[u].lmaxn = tr[u].rmaxn = tr[u].res = max(x, (ll)1);\n\t\t\ttr[u].lminn = tr[u].rminn = min(x, (ll)1);\n\t\t\ttr[u].totalres = max(x, (ll)1);\n\t\t\ttr[u].mul = x;\n\t\t\treturn;\n\t\t}\n\t\tint mid = tr[u].l + tr[u].r >> 1;\n\t\tif (p <= mid) update(u << 1, p, x);\n\t\telse update(u << 1 | 1, p, x);\n\t\tpushup(u);\n\t}\n\tNode query(int u, int l, int r)\n\t{\n\t\tif (tr[u].l >= l and tr[u].r <= r) \n\t\t{\n\t\t\treturn tr[u];\n\t\t}\n\t\tint mid = tr[u].l + tr[u].r >> 1;\n\t\tNode ret;\n\t\tret.l = -1;\n\t\tif (l <= mid) ret = query(u << 1, l, r);\n\t\tif (r > mid) ret = merge(ret, query(u << 1 | 1, l, r));\n\t\treturn ret;\n\t}\n}t;\n\nint main()\n{\n\t//freopen(\"C:\\\\Users\\\\60215\\\\Downloads\\\\T1ex1.in\", \"r\", stdin);\n\t//freopen(\"C:\\\\Users\\\\60215\\\\Downloads\\\\tt.out\", \"w\", stdout);\n\t// freopen(\"*.out\", \"w\", stdout);\n\tscanf(\"%d%d\", &n, &q);\n\tfor (int i = 1; i <= n; i++) a[i] = read();\n\tt.build(1, 1, n);\n\twhile (q--)\n\t{\n\t\tint opt;\n\t\tscanf(\"%d\", &opt);\n\t\tif (opt == 1)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\", &x);\n\t\t\tll y = read();\n\t\t\tt.update(1, x, y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint l, r;\n\t\t\tscanf(\"%d%d\", &l, &r);\n\t\t\tSegmentTree::Node ans = t.query(1, l, r);\n\t\t\tif (ans.is_bigger) printf(\"Too large\\n\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tll res = max((ll)1, ans.totalres);\n\t\t\t\twrite(res);\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1665819532,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "P8563 Magenta Potion"
    }
]