[
    {
        "content": "\u5173\u4e8e$SPFA$\uff0c\u5b83\u8fd8\u6d3b\u7740\n\n\u8fd9\u9898\u6ca1\u5361$SPFA$~~\uff08\u672c\u6765\u6211\u60f3\u9020\u6570\u636e\u5361\u7684\uff0c\u88ab\u51fa\u9898\u4eba\u62d2\u7edd\u4e86\uff09~~\n\n\u6240\u4ee5\u5c31\u662f\u4e00\u4e2a\u5355\u6e90\u6700\u77ed\u8def\u52a0\u4e00\u4e0b\u7b80\u5355\u5224\u65ad\u5373\u53ef\uff0c\u6ca1\u5565\u5751\uff0cTLE\u53ef\u80fd\u662f\u81ea\u5df1\u5199\u6302\u4e86\u5565\u7684\n\n``` cpp\n/*program from Wolfycz*/\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define inf 0x7f7f7f7f\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int ui;\ntypedef unsigned long long ull;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\tfor (;ch<'0'||ch>'9';ch=getchar())\tif (ch=='-')    f=-1;\n\tfor (;ch>='0'&&ch<='9';ch=getchar())\tx=(x<<1)+(x<<3)+ch-'0';\n\treturn x*f;\n}\ninline void print(int x){\n\tif (x>=10)\tprint(x/10);\n\tputchar(x%10+'0');\n}\nconst int N=1e5,M=1e6;\nint pre[(M<<1)+10],now[N+10],child[(M<<1)+10],val[(M<<1)+10];\nint h[N+10],deep[N+10];\nbool vis[N+10];\nint n,m,S,tot;\nstruct S1{\n\tint x,T;\n\tvoid insert(int _x,int _T){x=_x,T=_T;}\n\tbool operator <(const S1 &a)const{return T<a.T;}\n}A[N+10];\nvoid join(int x,int y,int z){pre[++tot]=now[x],now[x]=tot,child[tot]=y,val[tot]=z;}\nvoid SPFA(int x){\n\tint head=0,tail=1;\n\tmemset(deep,63,sizeof(deep));\n\th[1]=x,vis[x]=1,deep[x]=0;\n\twhile (head!=tail){\n\t\tif (++head>N)\thead=1;\n\t\tint Now=h[head];\n\t\tfor (int p=now[Now],son=child[p];p;p=pre[p],son=child[p]){\n\t\t\tif (deep[son]>deep[Now]+val[p]){\n\t\t\t\tdeep[son]=deep[Now]+val[p];\n\t\t\t\tif (!vis[son]){\n\t\t\t\t\tif (++tail>N)\ttail=1;\n\t\t\t\t\tvis[h[tail]=son]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvis[Now]=0;\n\t}\n}\nint main(){\n\tn=read(),m=read(),S=read(),A[0].insert(read(),0);\n\tfor (int i=1;i<=m;i++){\n\t\tint x=read(),y=read(),z=read();\n\t\tjoin(x,y,z),join(y,x,z);\n\t}\n\tSPFA(S);\n\tint T=read();\n\tfor (int i=1;i<=T;i++){\n\t\tint x=read(),y=read();\n\t\tA[i].insert(y,x);\n\t}\n\tA[++T].insert(0,inf);//\u6700\u540e\u9632\u6b62\u4e0d\u51fa\u7b54\u6848\n\tsort(A,A+1+T);\n\tfor (int i=0;i<=T;i++){\n\t\tif (deep[A[i].x]<A[i+1].T){\n\t\t\tprintf(\"%d\\n\",max(deep[A[i].x],A[i].T));\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1536542984,
        "uid": 21633,
        "name": "Wolfycz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4880 \u3010\u6293\u4f4fczx\u3011"
    },
    {
        "content": "   \u6bd4\u8d5b\u7684\u65f6\u5019\u6253\u7684  \u5176\u5b9e\u4e5f\u5c31\u662f\u5728\u539f\u6765spfa\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\u70b9\u5c0f\u64cd\u4f5c\u5c31\u597d\u4e86\n   czx\u771f\u7684\u592a\u76ae\u4e86 \u4ed6\u8001\u5e08\u5728\u8dd1 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\uff1f\uff1f\uff1f \u4ee5\u4e0d\u53d8\u5e94\u4e07\u53d8!\n   \n   1 \u4eceb\u70b9\u8dd1\u4e00\u904dspfa \u9884\u5904\u7406\u51fa\u8d77\u70b9\u5230\u6bcf\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb  \u8fb9\u6743\u4e3a\u901a\u8fc7\u8fd9\u6761\u8fb9\u7684\u65f6\u95f4 \n   \n   2 \u5bf9czx\u53d8\u5316\u7684\u65f6\u95f4###### \u4ece\u5c0f\u5230\u5927\u6392\u5e8f \u4ece\u65f6\u95f4\u6700\u5c0f\u7684\u5730\u70b9\u5f00\u59cb\u5224\u65ad \n     \n     \u5e76\u8bb0\u5f55\u4e00\u4e0b\u5728\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u505c\u7559\u7684\u8d77\u59cb\u65f6\u95f4\u548c\u7ec8\u6b62\u65f6\u95f4\n     \u8d77\u59cb\u65f6\u95f4\u5c31\u662f\u6211\u4eec\u8f93\u5165\u7684  \u7ec8\u6b62\u65f6\u95f4\u5c31\u662f\u5230\u4e0b\u4e00\u4e2a\u5730\u70b9\u7684\u65f6\u95f4-1\n     \n     \u6ce8\u610f\u7ec8\u6b62\u65f6\u95f4\u8981\u5728\u6392\u5e8f\u4e4b\u540e\u5224\u65ad\n     \n     \u7136\u540e\u5bf9czx\u6240\u5728\u7684\u5730\u70b9\u679a\u4e3e\u6392\u5e8f \n     \n     \u5982\u679c\u5230\u8fbe\u8fd9\u4e2a\u70b9\u7684\u6700\u5c0f\u65f6\u95f4 \n     \n     \u4e5f\u5c31\u662f\u6700\u77ed\u8def\u5c0f\u4e8eczx\u5728\u8fd9\u4e2a\u70b9\u7684\u7ec8\u6b62\u65f6\u95f4 \n     \n     \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\n     ##### \u6ce8\u610f \u6211\u4eec\u8f93\u51fa\u7684\u662fmax\uff08\u5230\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c czx\u5728\u8fd9\u4e2a\u70b9\u7684\u521d\u59cb\u65f6\u95f4\uff09\n     \n     \u56e0\u4e3a\u5982\u679c\u6700\u77ed\u8def < \u521d\u59cb\u65f6\u95f4 \u90a3\u4e48\u5c31\u662fczx\u5728\u8fd9\u4e2a\u70b9\u7684\u65f6\u5019 \u6211\u4eec\u4e5f\u5230\u4e86\u8fd9\u4e2a\u70b9\n     \u53cd\u4e4b \u5c31\u662f\u6211\u4eec\u5148\u5230\u4e86\u8fd9\u4e2a\u70b9\u7b49\u7740czx\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int maxn = 100005;\nconst int maxm = 500005;\nint n,m,st,en,top,head[maxn],tttt,dis[maxn];\nbool vis[maxn] ;\nstruct edge {\n\tint to,value,next ;\n}e[maxm << 1];\nstruct nodee{int timst,timen,node ;}t[maxn];  //\u8bb0\u5f55czx\u5730\u70b9\u7684\u7ed3\u679c\u4f53 timst\u4e3a\u8d77\u59cb\u65f6\u95f4 timen\u4e3a\u7ec8\u6b62\u65f6\u95f4 \ninline int read() {\n\tint x = 0; bool flag = 1;\n\tchar k = getchar() ;\n\twhile((k < '0' || k > '9') && k != '-') k = getchar() ;\n\twhile(k == '-'){flag = false ; k = getchar() ;}\n\twhile(k >= '0' && k <= '9'){x = x * 10 + k - '0' ;  k = getchar() ;}\n\treturn flag ? x : -x ;\n}\nvoid add_edge(int u,int v,int w) {\n\te[++top].next = head[u] ;\n\te[top].to = v;\n\te[top].value = w;\n\thead[u] = top ;\n}\nvoid spfa(int s) {\n\tqueue< int >q ;\n\tfor(int i = 1;i <= n ;++i) dis[i] = 1e9,vis[i] = 0 ;\n\tdis[s] = 0;\n\tq.push(s) ; vis[s] = 1;\n\twhile(!q.empty()) {\n\t\tint u = q.front() ;\n\t\tq.pop() ;\n\t\tvis[u] = 0;\n\t\tfor(int i = head[u]; i ;i = e[i].next) \n\t\t\tif(dis[e[i].to] > dis[u] + e[i].value) {\n\t\t\t\tdis[e[i].to] = dis[u] + e[i].value;\n\t\t\t\tif(!vis[e[i].to]) {q.push(e[i].to) ; vis[e[i].to] = 1;}\n\t\t\t}\n\t}\n}\nbool cmp(nodee a,nodee b) { return a.timst < b.timst ;}\nint main() {\n\tscanf(\"%d%d%d%d\",&n,&m,&st,&en) ;\n\tt[1].timst = 1; t[1].node = en;\n\tfor(int i = 1;i <= m ;++i) {\n\t\tint u,v,z; \n\t\tu = read() ; v = read() ; z = read() ;\n\t\tadd_edge(u,v,z) ; add_edge(v,u,z) ; //\u52a0\u8fb9 \n\t}\n\tscanf(\"%d\",&tttt) ; tttt++;\n\tspfa(st) ;  //\u9884\u5904\u7406\u6700\u77ed\u8def \n\tfor(int i = 2;i <= tttt;++i) {\n\t\tint timee,pla; timee = read() ; pla = read() ;\n\t\tt[i].timst = timee ;  //\u8fd9\u70b9\u7684\u8d77\u59cb\u65f6\u95f4\u8f93\u5165\u7684\u65f6\u95f4 \n\t\tt[i].node = pla ;\n\t}\n\tsort(t + 1,t + tttt + 1, cmp) ;\n\tfor(int i = 2;i <= tttt; ++i) \n\t\tt[i - 1].timen = t[i].timst - 1; //\u66f4\u65b0\u7ec8\u6b62\u65f6\u95f4 \n\tt[tttt].timen = 1e9; //czx\u5728\u6700\u540e\u4e00\u4e2a\u70b9\u4e0d\u52a8 \u6240\u4ee5\u7ec8\u6b62\u65f6\u95f4\u65e0\u9650\u5927 \n\tfor(int i = 1;i <= tttt ;++i) \n\t\tif(dis[t[i].node] <= t[i].timen) {printf(\"%d\\n\",max(dis[t[i].node], t[i].timst) ) ;return 0;} //\u53d6max\u8f93\u5165 \u76f4\u63a5return\u5373\u53ef \n\tprintf(\"%d\\n\",max(dis[t[tttt].node] , t[tttt].timst)) ;  //\u5982\u679c\u5728\u524d\u51e0\u4e2a\u70b9\u5230\u4e0d\u4e86\u7684\u8bdd \u5c31\u76f4\u63a5\u5230\u6700\u540e\u4e00\u4e2a\u70b9\u4e86 \u4e0d\u8fc7\u8fd9\u4e00\u53e5\u53ef\u80fd\u6ca1\u4ec0\u4e48\u7528\uff1f\uff1f\uff1f \n\treturn 0;\n}\n```",
        "postTime": 1536408735,
        "uid": 88340,
        "name": "Tiffany_Tendering",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4880 \u3010\u6293\u4f4fczx\u3011"
    },
    {
        "content": "# \u6293\u4f4fczx\n\n[\u6d1b\u8c37P4880  \u6293\u4f4fczx](https://www.luogu.com.cn/problem/P4880)\n\n#### \u524d\u8a00\uff08~~\u5410\u69fd~~ \u73c2\u5ffd\u7565\uff09\n\n\u8fd9\u9053\u9898\u8bf4\u6765\u90fd\u5fc3\u9178\uff0c\u5728\u7b2c\u4e00\u6b21\u5f97\u5230$T=0$\u7684$30pt$s\u540e\uff0c\u5f00\u59cb\u809d\u6b63\u89e3\n\n\u4f46\u662f\u5728\u5224\u65ad\u7684\u65f6\u5019\u5ffd\u7565\u4e86\u4e00\u79cd\u60c5\u51b5\uff08\u6211\u5e76\u6ca1\u6709\u610f\u8bc6\u5230\uff09\uff0c\u4e00\u76f4\u5361\u5728\u4e86$90pts$\uff0c\u751a\u81f3\u8fd8\u53d1\u4e86\u8d34\u53bb\u6c42\u52a9\uff08\u7136\u800c\u5e76\u6ca1\u6709\u4eba\u56de\u6211QAQ\uff09\n\n\u540e\u6765\u5728[\u540c\u684c\u7684\u5e2e\u52a9\u4e0b](https://www.cnblogs.com/Poetic-Rain/?tdsourcetag=s_pctim_aiomsg)\uff0c\u610f\u8bc6\u5230\u4e86\u7f3a\u5c11\u4e00\u79cd\u60c5\u51b5\uff0c\u7136\u540e\u81ea\u5df1\u60f3\u51fa\u4e86\u8fd9\u79cd\u60c5\u51b5\u600e\u4e48\u5904\u7406\uff0c\u4f46\u662f.....\u56e0\u4e3a\u624b\u8d31\u591a\u5199\u4e86\u4e00\u4e2a\u201c$=$\u201d\uff0c\u53c8\u5728#1\u548c#2\u53cd\u590d\u6a2a\u8df3\uff08\u6211\u771f\u60e8~~\u83dc~~\uff09\n\n\u6700\u540e~~\u8010\u5fc3\u5730~~\u53c8\u6572\u4e86\u4e00\u904d\uff0c\u624d\u8270\u96be\u7684A\u6389\u4e86\u8fd9\u9053\u5e76\u4e0d\u96be\u7684\u84dd\u9898\n\n------------\n#### \u89e3\u9898\u601d\u8def\n\n\u597d\u4e86\uff0c\u5410\u69fd\u5b8c\u4e86\uff0c\u5f00\u59cb\u6b63\u9898\u5427\n\n- $T=0$\u7684\u7279\u6b8a\u60c5\u51b5\n\n\u53ea\u8981\u4f1a\u6c42\u6700\u77ed\u8def\u7684\uff0c\u5e94\u8be5\u90fd\u6ca1\u95ee\u9898\u5427\uff0c$30pts$\u7ed9\u5f97\u6b7b\u6b7b\u7684\n\n\u591a\u8bf4\u4e00\u70b9\uff1a$T=0$\u610f\u5473\u7740$czx$\u4e0d\u4f1a\u77ac\u79fb\uff0c\u5219$czx$\u4e00\u76f4\u5728$e$\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u6293\u4f4f\u4ed6\u7684\u6700\u77ed\u65f6\u95f4\u81ea\u7136\u5c31\u662f\u4ece$b$\u5230$e$\u7684\u6700\u77ed\u8def\u957f\u5ea6\u54af\n\n- \u5b8c\u6574\u6b63\u89e3\n\n\u5728\u9664$T=0$\u7684\u7279\u6b8a\u60c5\u51b5\u5916\uff0c\u4e5f\u4f1a\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\u4e0d\u7528\u8003\u8651\u77ac\u79fb\uff1a**\u6211\u4eec\u5728$czx$\u7b2c\u4e00\u6b21\u77ac\u79fb\u4e4b\u524d\u5c31\u6293\u4f4f\u4e86\u4ed6**\uff0c\u5373\u4ece$b$\u5230$e$\u7684\u6700\u77ed\u8def\u957f\u5ea6$\uff1c$\u7b2c\u4e00\u6b21\u77ac\u79fb\u7684\u65f6\u95f4\n\n\u6ce8\u610f\u4e00\u4e0b\uff0c\u8fd9\u91cc\u7684\u201c\u7b2c\u4e00\u6b21\u201d\u5e76\u4e0d\u662f\u6307\u8f93\u5165\u7684\u7b2c\u4e00\u7ec4\u77ac\u79fb\u6570\u636e\uff0c\u800c\u662f\u6392\u5e8f\u540e\u7684\u7b2c\u4e00\u6b21\uff08\u5373\u6211\u4eec**\u5c06\u6240\u6709\u77ac\u79fb\u6309\u7167\u65f6\u95f4\u8282\u70b9\u4ece\u65e9\u5230\u665a\u6392\u5e8f**\u540e\u7684\u7b2c\u4e00\u6b21\u77ac\u79fb\uff09\n\n\u4e4b\u540e\u7684\u60c5\u51b5\u5c31\u90fd\u662f\u9700\u8981\u8003\u8651\u77ac\u79fb\u7684\u4e86\uff08\u6211\u4eec**\u7528$dis[i]$\u8868\u793a\u4ece$1$\u5230$i$\u7684\u6700\u77ed\u65f6\u95f4**\uff09\n\n\u8bbe$czx$\u7b2c$i$\u6b21\u77ac\u79fb\u5230\u7684\u70b9\u4e3a$pi$\u3001\u65f6\u95f4\u4e3a$ti$\n\n- **\u82e5$dis[pi]\u2264ti$\uff0c\u8bf4\u660e\u6211\u4eec\u5728\u7b2c$i$\u6b21\u77ac\u79fb\u540e\u6293\u4f4f\u4e86\u4ed6**\n\n\u8fd9\u91cc\u53ef\u80fd\u5927\u5bb6\u4f1a\u7591\u60d1\uff1a\u4e3a\u4ec0\u4e48\u662f\u201c$\u2264$\u201d\u800c\u4e0d\u662f\u201c$\uff1c$\u201d\uff1f\u9898\u76ee\u4e2d\u4e0d\u662f\u8bf4\u5728\u4e00\u4e2a\u77ac\u79fb\u65f6\u95f4\u70b9\uff0c\u603b\u662f$czx$\u5148\u77ac\u79fb\u8d70\uff0c\u7136\u540e\u6211\u4eec\u624d\u5230\uff0c\u8fd9\u6837\u662f\u6293\u4e0d\u4f4f\u7684\u554a\n\n\u9898\u76ee\u4e2d\u786e\u5b9e\u8bf4\u660e\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f46\u662f\u8fd9\u4e2a\u89c4\u5219\u5e76\u4e0d\u5f71\u54cd\u6211\u4eec\u7684\u8fd9\u4e2a\u5224\u65ad\uff0c\u800c\u662f\u5f71\u54cd\u6211\u4eec\u4e0b\u9762\u7684\u53e6\u4e00\u4e2a\u5224\u65ad\uff08\u4e0b\u9762\u4f1a\u7740\u91cd\u70b9\u51fa\uff09\n\n\u7136\u540e\uff0c\u6211\u4eec\u518d\u6765\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u5224\u65ad\u7684\u539f\u7406\uff08\u4e5f\u80fd\u89e3\u91ca\u4e0a\u9762\u7684\u7591\u60d1\uff09\uff1a\n\n1. \u82e5\u6211\u4eec\u6bd4$czx$**\u5148\u5230\u8fbe**$pi$\u8fd9\u4e2a\u70b9\uff08\u5bf9\u5e94dis[pi]\uff1cti\uff09\uff0c\u90a3\u6211\u4eec\u5c31\u5728$pi$\u8fd9\u4e2a\u70b9**\u7b49\u7740\u6293**\u4ed6\u5c31\u597d\u4e86\uff08\u5b88\u682a\u5f85\u5154\u561b\uff09\n\n2. \u82e5\u6211\u4eec\u548c$czx$**\u540c\u65f6\u5230\u8fbe**$pi$\u8fd9\u4e2a\u70b9\uff08\u5bf9\u5e94dis[pi]\uff1dti\uff09\uff0c\u90a3\u6211\u4eec\u5c31**\u6b63\u597d\u6293\u4f4f**\u4ed6\n\n- **\u82e5$dis[pi]>ti$,\u8bf4\u660e\u6211\u4eec\u65e0\u6cd5\u5728$pi$\u8fd9\u4e2a\u70b9\u6293\u4f4f$czx$\uff0c\u4f46\u662f\u4e5f\u9700\u8981\u52a0\u4ee5\u8ba8\u8bba**\n\n\uff08\u8fd9\u5c31\u662f\u6211\u4e00\u76f4\u5ffd\u7565\u7684\u60c5\u51b5\uff0c\u4e0b\u9762\u7ed9\u51fa\u56fe\u6765\u5e2e\u52a9\u7406\u89e3\uff09\n\n![](https://img2020.cnblogs.com/blog/2055990/202007/2055990-20200702124604433-855615558.png)\n\n\u5728\u7b2c$2$\u65f6\u523b\uff0c$czx$\u5df2\u7ecf\u5230\u8fbe\u70b9$3$\uff0c\u800c\u6211\u4eec\u8fd8\u5728\u4ece$1$\u5230$3$\u7684\u8def\u4e0a\uff0c\u90a3\u663e\u7136\u662f$dis[pi]>ti$\u7684\u60c5\u51b5\n\n\u4f46\u662f\u5728\u7b2c$3$\u65f6\u523b\u6211\u4eec\u5230\u8fbe\u4e86$czx$\u6240\u5728\u7684\u70b9$3$\uff0c\u800c\u6b64\u65f6$czx$\u8fd8\u6ca1\u6709\u8fdb\u884c\u4e0b\u4e00\u6b21\u7684\u77ac\u79fb\uff0c\u6240\u4ee5\u6211\u4eec\u6293\u4f4f\u4e86\u4ed6\n\n\u9762\u5bf9\u4e0a\u9762\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5355\u5355\u56e0\u4e3a$dis[pi]>ti$\u7684\u8bdd\uff0c\u5c31\u4f1a\u9519\u5931\u6389\u5728\u7b2c$3$\u65f6\u523b\u6293\u4f4f$czx$\u662f\u673a\u4f1a\uff01\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981**\u52a0\u4e2a\u5224\u65ad\u9632\u6b62\u8bef\u5224\uff1a$dis[a[i].p]<a[i+1].t$**\n\n\u8fd8\u662f\u6765\u89e3\u91ca\u4e00\u4e0b\u539f\u7406\uff1a**\u5982\u679c\u6211\u4eec\u5230\u8fbe$pi$\u8fd9\u4e2a\u70b9\u7684\u65f6\u95f4\u5728$czx$\u4e0b\u4e00\u6b21\u77ac\u79fb\u4e4b\u524d\uff0c\u90a3\u6211\u4eec\u4f9d\u65e7\u80fd\u591f\u6293\u4f4f\u4ed6\uff0c\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u7b54\u6848\u5c31\u662f\u6211\u4eec\u5230\u8fbe$pi$\u7684\u65f6\u95f4**\n\n\u518d\u7740\u91cd\u8bb2\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8fd9\u91cc\u5c31\u662f\u201c$<$\u201d\u800c\u4e0d\u662f\u201c$\u2264$\u201d\uff0c\u6b63\u5982\u4e0a\u9762\u7684\u7591\u60d1\uff0c\u9898\u76ee\u4e2d\u8bf4\u5b9a\u4e86\u5728\u4e00\u4e2a\u77ac\u79fb\u7684\u65f6\u95f4\u70b9\uff0c\u603b\u662f$czx$\u5148\u77ac\u79fb\u7136\u540e\u6211\u4eec\u518d\u5230\u8fbe\u3002\u6240\u4ee5\u5f53\u6211\u4eec\u5230\u8fbe$pi$\u65f6\uff0c$czx$\u5df2\u7ecf\u77ac\u79fb\u8d70\u4e86\uff0c\u6545\u6211\u4eec\u6293\u4e0d\u4f4f\u4ed6\uff08\u8bf7\u5927\u5bb6\u6ce8\u610f\u533a\u5206qwq\uff09\n\n------------\n#### \u4ee3\u7801Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\npriority_queue<pair<int,int> > q;\nint n,m,t,b,E,x,y,z;\nint tot,dis[1000010],vis[1000010],head[1000010];\n\nstruct node {\n\tint to,net,val;\n} e[1000010];\n\nstruct nodes {\n\tint t,p;\n} a[1000010];\n\ninline void add(int u,int v,int w) {\n\te[++tot].to=v;\n\te[tot].val=w;\n\te[tot].net=head[u];\n\thead[u]=tot;\n}\n\ninline void dijkstra(int s) {  //Dijkstra\u6c42\u6700\u77ed\u8def\u677f\u5b50 \n\tfor(register int i=1;i<=n;i++) {\n\t\tvis[i]=0;\n\t\tdis[i]=2005020600;\n\t}\n\tdis[s]=0;\n\tq.push(make_pair(0,s));\n\twhile(!q.empty()) {\n\t\tint x=q.top().second;\n\t\tq.pop();\n\t\tif(vis[x]) continue;\n\t\tvis[x]=1;\n\t\tfor(register int i=head[x];i;i=e[i].net) {\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]>dis[x]+e[i].val) {\n\t\t\t\tdis[v]=dis[x]+e[i].val;\n\t\t\t\tq.push(make_pair(-dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline bool cmp(nodes x,nodes y) {\n\treturn x.t<y.t;\n}\n\nint main() {\n\tscanf(\"%d%d%d%d\",&n,&m,&b,&E);\n\tfor(register int i=1;i<=m;i++) {\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t}\n\tscanf(\"%d\",&t);\n\tfor(register int i=1;i<=t;i++) {\n\t\tscanf(\"%d%d\",&a[i].t,&a[i].p);\n\t}\n\tsort(a+1,a+1+t,cmp);   //\u5c06\u6240\u6709\u77ac\u79fb\u6309\u7167\u65f6\u95f4\u70b9\u4ece\u65e9\u5230\u665a\u6392\u5e8f \n\tdijkstra(b);\n\tif(dis[E]<a[1].t||t==0) {  //\u4e0d\u7528\u7ba1\u77ac\u79fb\u7684\u4e24\u79cd\u60c5\u51b5 \n\t\tprintf(\"%d\",dis[E]);\n\t\treturn 0;\n\t}\n\tfor(register int i=1;i<=t;i++) {  //\u679a\u4e3e\u77ac\u79fb\u627e\u7b54\u6848 \n\t\tif(dis[a[i].p]<=a[i].t) {  //\u5b88\u682a\u5f85\u5154\u6216\u6b63\u597d\u6293\u4f4f\u7684\u60c5\u51b5 \n\t\t\tprintf(\"%d\",a[i].t);\n\t\t\treturn 0;\n\t\t}\n\t\telse {\n\t\t\tif(dis[a[i].p]<a[i+1].t) {  //\u5728\u4e0b\u4e00\u6b21\u77ac\u79fb\u524d\u6293\u4f4f\u7684\u60c5\u51b5 \n\t\t\t\tprintf(\"%d\",dis[a[i].p]);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n------------\n\n\u6700\u540e\uff0c\u5982\u679c\u6709\u4efb\u4f55\u5730\u65b9\u4e0d\u61c2\u6216\u4e0d\u5bf9\u7684\uff0c\u6b22\u8fce\u5927\u5bb6\u5728\u8bc4\u8bba\u533a\u7559\u8a00\uff0c\u6211\u4f1a\u53ca\u65f6\u56de\u590d\uff0c\u8c22\u8c22\u5927\u5bb6\u554aqwq\n\n------------\n\n",
        "postTime": 1593665823,
        "uid": 145205,
        "name": "Eleven\u8c26",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4880 \u3010\u6293\u4f4fczx\u3011"
    },
    {
        "content": "### \u672c\u9898\u662f\u4e00\u4e2a\u8f83\u4e3a\u590d\u6742\u7684\u6700\u77ed\u8def\u7b97\u6cd5\n\n\u9996\u5148\u5410\u69fd\u4e00\u4e0b\u63cf\u8ff0\u6709\u8bef\uff0c\u8fd9\u9053\u9898\u6709\u81ea\u73af~~\u867d\u7136\u5e76\u65e0\u5f71\u54cd~~\n\n\u672c\u9898\u76f8\u5f53\u4e8e\u5355\u6e90\u591a\u76ee\u6807\u6700\u77ed\u8def\uff0c\u7b97\u6cd5\u4e3b\u4f53\u5982\u4e0b\uff1a\n\n1\u3001\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u7b97\u51fa\u6e90\u70b9\u5230\u5176\u4ed6\u70b9\u7684\u8ddd\u79bb\uff1b\n\n2\u3001\u5bf9czx\u7684\u4f4d\u7f6e\u8fdb\u884c\u5206\u6790\u5904\u7406\n\n\u5bf9\u4e8e\u6700\u77ed\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fea\u6770\u65af\u7279\u62c9\u6216SPFA\uff0c\u4e0d\u4f1a\u7684\u8bdd\u6233[\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P4779)\n\n\u800c\u5bf9\u4e8e\u4f4d\u7f6e\u5206\u6790\uff0c\u9996\u5148\u60f3\u7684\u662f\u5bf9czx\u7684\u65f6\u95f4\u5b9a\u4f4d\uff08\u5373\u5728\u54ea\u6bb5\u65f6\u95f4\u5185\u5728\u54ea\u70b9\uff09\uff0c\u60f3\u5230\u7684\u662f\u7528\u5feb\u6392\uff1a\n```cpp\nvoid qsort(int l,int r)\n{\n\tint mid=ll[(l+r)/2],i=l,j=r;\n\twhile (i<=j)\n\t{\n\t\twhile (ll[i]<mid) i++;\n\t\twhile (ll[j]>mid) j--;\n\t\tif (i<=j)\n\t\t{\n\t\t\tswap(ll[i],ll[j]);\n            swap(dd[i],dd[j]);\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\tif (j>l) qsort(l,j);\n\tif (i<r) qsort(i,r);\n}\n```\n\u8fd9\u6837\u5c31\u80fd\u8ba9\u65f6\u95f4\u6709\u5e8f\uff0c\u5176\u4e2dll\u6570\u7ec4\u8bb0\u5f55\u65f6\u95f4\uff0cdd\u6570\u7ec4\u8bb0\u5f55\u5728\u54ea\u4e2a\u70b9\u3002\n\uff08\u4e4b\u6240\u4ee5\u53cc\u5199\u662f\u56e0\u4e3a\u6709l\u8bb0\u5f55\u5de6\u8fb9\u754c\uff0c\u6709d\u6765\u505a\u6700\u77ed\u8def\uff09\n\n\u5982\u679c\u5acc\u70e6~~\u6216\u4e0d\u4f1a~~\u53ef\u4ee5\u7528stl\u6a21\u677f\u5e93\uff0c\u5373\uff1a\n```cpp\nstruct ss{\n\tlong long dd,ll;//\u7ed3\u6784\u4f53\uff0c\u5176\u4e2dll\uff0cdd\u5982\u4e0a\n}w[100001];\nbool cjj(ss a,ss b)\n{\n\treturn a.ll<b.ll;//\u5224\u65ad\u5927\u5c0f\uff08\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u53ebcjj\uff09\n}\nint main()\n{\n    \u2026\u2026\n\tsort(w+1,w+t+1,cjj);//\u6392\u5e8f\n\t\u2026\u2026\n}\n```\n\u7efc\u4e0a\uff0c\u4ee3\u7801\u5c31\u51fa\u6765\u4e86\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct ss{\n\tlong long dd,ll;\n}w[100001];\nbool cjj(ss a,ss b)\n{\n\treturn a.ll<b.ll;\n}\npriority_queue<pair<long long,long long> >q;\nlong long t,e,b1,n,m,s,i,cnt,x,y,z,he[1000001],ne[2000001],l[2000001],to[2000001],d[1000001];\nbool b[1000001];\nint main()\n{\n\tscanf(\"%lld%lld%lld%lld\",&n,&m,&b1,&e);\n\tfor (i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);//\u90bb\u63a5\u8868\n\t\tcnt++;\n\t\tne[cnt]=he[x];\n\t\tto[cnt]=y;\n\t\tl[cnt]=z;\n\t\the[x]=cnt;\n\t\tcnt++;\n\t\tne[cnt]=he[y];\n\t\tto[cnt]=x;\n\t\tl[cnt]=z;\n\t\the[y]=cnt;\n\t}\n\tfor (i=1;i<=n;i++) d[i]=1e9;\n\t\td[b1]=0;\n\tq.push(make_pair(0,b1));\n\twhile (q.size())\n\t{\n\t\tx=q.top().second;\n\t\tq.pop();\n\t\tif (b[x]) continue;\n\t\tb[x]=true;\n\t\tfor (i=he[x];i!=0 ;i=ne[i])\n\t\t\tif (d[to[i]]>d[x]+l[i])\n\t\t\t{\n\t\t\t\td[to[i]]=d[x]+l[i];\n\t\t\t\tq.push(make_pair(-d[to[i]],to[i]));//\u8fea\u6770\u65af\u7279\u62c9\n\t\t\t}\n\t}\n\tw[0].dd=e;\n\tw[0].ll=0;//\u56e0\u4e3a\u521a\u5f00\u59cb\u4e5f\u7b97\u4e00\u6761\u6570\u636e\n\tscanf(\"%lld\",&t);\n\tfor (i=1;i<=t;i++)\n\t\tscanf(\"%lld%lld\",&w[i].ll,&w[i].dd);\n\tsort(w+1,w+t+1,cjj);\n\tfor (i=0;i<t;i++)\n\t\tif (d[w[i].dd]<w[i+1].ll)//\u6ce8\u610f\u662f\u5c0f\u4e8e\n\t\t{\n\t\t\tprintf(\"%lld\",max(d[w[i].dd],w[i].ll));//\u5212\u91cd\u70b9\uff0c\u56e0\u4e3a\u53ef\u4ee5\u5148\u5230\u7136\u540e\u5b88\u682a\u5f85\u5154\n\t\t\treturn 0;\n\t\t}\n\tprintf(\"%lld\",max(d[w[t].dd],w[t].ll));\n\treturn 0;\n}\n```\n\u5728\u6700\u540e\u5224\u65ad\u65f6\uff0c\u6211\u53ea\u7528\u4e86\u201cd[w[i].dd]<w[i+1].ll\u201d\u56e0\u4e3a\u5047\u5982\u5b83\u5728\u4e4b\u524d\u7684\u8bdd\u4e5f\u6ca1\u5173\u7cfb\uff0c\u6709\u8f93\u51fa\u65f6\u7684\u5224\u65ad\uff0c\u800c\u82e5\u6709\u66f4\u5c0f\uff0c\u7531\u4e8e\u5df2\u6309\u65f6\u95f4\u6392\u5b8c\u5e8f\uff0c\u5b83\u80af\u5b9a\u5728\u4e4b\u524d\u7ed3\u675f\u4e86\uff0c\u4e5f\u5230\u4e0d\u4e86\u8fd9\u513f",
        "postTime": 1560255566,
        "uid": 33480,
        "name": "szbszb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4880 \u3010\u6293\u4f4fczx\u3011"
    },
    {
        "content": "\u601d\u8def\u8fd8\u662f\u4e0d\u96be\u7684\u3002\n\n\u5c31\u662f\u8dd1\u51fa\u6765 $lty$ \u4ece\u8d77\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c\u628a $czx$ \u5230\u6bcf\u4e2a\u70b9\u7684\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u628a $lty$ \u5230\u6bcf\u4e2a\u70b9\u7684\u65f6\u95f4\u4e0e $czx$ \u5230\u4e0b\u4e00\u4e2a\u70b9\u7684\u65f6\u95f4\u5224\u65ad\u4e00\u4e0b\uff0c\u5982\u679c $<$ **\u6ce8\u610f\u662f\u5c0f\u4e8e**\uff0c\u4e5f\u5c31\u662f\u8bf4 $lty$ \u5148\u5230\uff0c\u76f4\u63a5\u8f93\u51fa\u8f83\u5927\u7684\u65f6\u95f4\u3002\n\n\u6700\u540e\u5982\u679c\u6ca1\u6709\u627e\u5230\u7b54\u6848\uff0c\u76f4\u63a5\u8f93\u51fa $lty$ \u548c $czx$ \u5230\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u8f83\u5927\u65f6\u95f4\u3002\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<map>\n#include<algorithm>\n#define N 100010\n#define int long long\n\nusing namespace std;\n\ntypedef pair<int,int> P;\nint n,m,s,e,T;\nstruct node\n{\n\tint to,cost;\n\tnode(int _to,int _cost)\n\t{\n\t\tto=_to,cost=_cost;\n\t}\n};\nstruct path\n{\n\tint t,x;\t//czx\u5728t\u65f6\u95f4\u5230x \n};\nvector<node>G[N];\nint dis[N];\npriority_queue <P,vector<P>,greater<P> > que;\npath a[N];\n\nint read()\t//\u5feb\u8bfb \n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=x*10+c-'0',c=getchar();\n\treturn x;\n}\n\nvoid dijkstra(int s)\t//dijkstra\u5806\u4f18\u5316 \n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[s]=0;\n\tque.push(P(0,s));\n\twhile(!que.empty())\n\t{\n\t\tP p=que.top();\n\t\tque.pop();\n\t\tint u=p.second;\n\t\tif(p.first>dis[u]) continue;\n\t\tfor(int i=0; i<G[u].size(); i++)\n\t\t{\n\t\t\tint v=G[u][i].to,w=G[u][i].cost;\n\t\t\tif(dis[u]+w<dis[v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tque.push(P(dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n\nbool cmp(path x,path y)\n{\n\treturn x.t<y.t;\n}\n\nsigned main()\n{\n\tn=read(),m=read(),s=read(),e=read();\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tint x=read(),y=read(),z=read();\n\t\tG[x].push_back(node(y,z));\n\t\tG[y].push_back(node(x,z));\n\t}\n\tdijkstra(s);\n\tT=read(); \n\tfor(int i=1; i<=T; i++)\n\t\ta[i].t=read(),a[i].x=read();\n\tsort(a+1,a+1+T,cmp);\t//\u6309\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n\ta[++T]=(path){0,e};\t//\u6ce8\u610f\u8fd9\u91cc\u8981\u628a\u8d77\u70b9\u52a0\u8fdb\u53bb \n\tfor(int i=1; i<=T; i++)\n\t{\n\t\tif(dis[a[i].x]<a[i+1].t)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",max(dis[a[i].x],a[i].t));\t//\u8f93\u51fa\u540e\u5230\u7684\u4eba\u7684\u65f6\u95f4 \n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",max(dis[a[T].x],a[T].t));\n\treturn 0;\n}\n```\n\n\n~~\u8bdd\u8bf4\u6211\u4eec\u5b66\u6821\u597d\u50cf\u6709\u4e00\u4e2a\u53eb [$lty$](https://www.luogu.com.cn/user/13352) \u7684\u5b66\u957f~~",
        "postTime": 1592133553,
        "uid": 211300,
        "name": "Acestar",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4880 \u3010\u6293\u4f4fczx\u3011"
    },
    {
        "content": "\u7b14\u8005\uff08\u849f\u84bb\uff09\u8fd1\u6765\u5f00\u4e86\u770b\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u5199\u6b64\u9898\u89e3\u4ee5\u8bb0\u4e4b\u3002\n\n\u9898\u76ee\u5927\u610f\uff1a\u6709$n$\u4e2a\u70b9\uff0c$m$\u6761\u8fb9\u7684\u56fe\uff0c\u7ed9\u5b9a\u8d77\u70b9\u4ee5\u53ca\u7ec8\u70b9\u53d8\u5316\u7684\u65f6\u95f4\u4ee5\u53ca\u4f4d\u7f6e\uff0c\u6c42\u54ea\u4e00\u65f6\u523b\u5230\u8fbe\u7ec8\u70b9\u7684\u8def\u7a0b\u6700\u77ed\u3002\n\n\u9996\u5148\u8003\u8651\u8d77\u70b9\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8d77\u70b9\u662f\u4e0d\u52a8\u7684\uff0c\u7ec8\u70b9\u65e0\u8bba\u5982\u4f55\u4e5f\u603b\u4f1a\u5728\u8fd9\u5f20\u56fe\u4e0a\u53d8\u5316\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5148\u8dd1\u4e00\u904d$dijkstra$\u6c42\u51fa\u8d77\u70b9\u5230\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def$(time)$\uff0c\u6709\u4e86\u65f6\u95f4\uff0c\u65b9\u4fbf\u6211\u4eec\u5bf9\u4e8e\u65f6\u95f4\u53d8\u5316\u505a\u5904\u7406\u3002\n\n\u8003\u8651\u53d8\u5316\u65f6\u95f4\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u9760\u524d\u7684\u65f6\u95f4\u5df2\u7ecf\u53ef\u4ee5\u5230\u8fbe\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u662f$answer$\uff0c\u56e0\u4e3a\u518d\u53d8\u5316\u7684\u8bdd\u65f6\u95f4\u4e00\u5b9a\u9760\u540e\u3002\u4e8e\u662f\uff0c\u6211\u4eec$sort$\u4e00\u904d\u65f6\u95f4\uff0c\u4ee5\u65f6\u95f4\u5347\u5e8f\u6392\u5e8f\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65f6\u523b\u7684\u70b9\uff0c\u6211\u4eec\u66b4\u529b\u679a\u4e3e\uff0c\u5e76\u4e14\u66b4\u529b$check$\u5b83\u80fd\u5426\u5230\u8fbe\u5373\u53ef\u3002\u6ce8\u610f\u9898\u76ee\u7684\u521d\u59cb\u5316\uff0c\u521a\u5f00\u59cb\u7684\u8d77\u70b9\u662f$e$\uff0c\u6700\u540e\u4f1a\u505c\u7559\u5728\u4e00\u4e2a\u70b9\u4e0d\u52a8\u3002\u800c\u4e14\uff0c$czx$\u7684\u53d8\u5316\u603b\u662f\u8981\u63d0\u524d\uff08\u5373\u5982\u679c\u5b83\u53d8\u5316\u7684\u540c\u65f6\u6211\u4eec\u5230\u8fbe\u4e86\uff0c\u5219\u5b83\u5148\u53d8\u5316\uff09\u3002\n\n\u6240\u4ee5\u679a\u4e3e\u6bd4\u8f83\u7684\u65f6\u5019\u4e0d\u80fd\u53d6\u7b49\u53f7\u3002\n\n$Code:$\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n#define inf 2147483647\n#define int long long\nint n,m,b,s;\nstruct edge{\n\tint to,next,dis;\n}e[1100000];\nint dis[1100000],vis[1100000];\nint head[1100000],tot,t;\nstruct cg{\n\tint time,x;\n}c[1100000];\nstruct node{\n\tint dis,pos;\n\tbool operator<(const node&x)const{\n\t\treturn x.dis<dis;\n\t}\n};\npriority_queue<node>q;\ninline void add(int x,int y,int w){\n\te[++tot].to=y;\n\te[tot].next=head[x];\n\te[tot].dis=w;\n\thead[x]=tot;\n}\ninline bool cmp(cg a,cg b){\n\treturn a.time<b.time;\n}\nvoid dijkstra(){\n\tdis[b]=0;\n\tq.push((node){0,b});\n\twhile(!q.empty()){\n\t\tnode tmp=q.top();\n\t\tq.pop();\n\t\tint x=tmp.pos;\n\t\tif(vis[x])continue;\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=e[i].next){\n\t\t\tint y=e[i].to;\n\t\t\tif(dis[y]>dis[x]+e[i].dis){\n\t\t\t\tdis[y]=dis[x]+e[i].dis;\n\t\t\t\tif(!vis[y])q.push((node){dis[y],y});\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main(){\n\tscanf(\"%lld%lld%lld%lld\",&n,&m,&b,&s);\n\tfor(int i=1;i<=n;++i)dis[i]=inf;\n\tfor(int i=1;i<=m;++i){\n\t\tint x,y,z;\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);\n\t}scanf(\"%lld\",&t);\n\tfor(int i=1;i<=t;++i)scanf(\"%lld%lld\",&c[i].time,&c[i].x);\n\tsort(c+1,c+t+1,cmp);//\u79bb\u7ebf\u6392\u5e8f\u5904\u7406 \n\tdijkstra();//dijkstra\n\tc[0].x=s;//\u521d\u59cb\u5316 \n\tfor(int i=1;i<=t;++i)\n\t\tif(dis[c[i].x]<c[i+1].time){//\u5224\u65ad\u80fd\u5426\u5230\u8fbe \n\t\t\tprintf(\"%lld\\n\",max(dis[c[i].x],c[i].time));//\u80fd\u5c31\u8f93\u51fa\u8f83\u5927\u7684\u90a3\u4e2a \n\t\t\treturn 0;\n\t\t}\n\tprintf(\"%lld\\n\",max(dis[c[t].x],c[t].time));//\u4e0d\u80fd\u5219\u4e00\u5b9a\u80fd\u5728\u6700\u540e\u6293\u4f4f \n\treturn 0;\n}\n```\n$Update:$\n\n1.\u7b14\u8005\u56e0\u4e3a\u592a\u61d2\u7528\u4e86\u5b8f\u5b9a\u4e49\u4ee3\u66ff$int$\u5e76\u4e14\u7528\u4e86$signed$ $main$,\u5176\u5b9e\u6b63\u5e38\u5199\u5c31\u597d\n\n2.\u505a\u8fd9\u9898\u7684\u539f\u56e0\u4e4b\u4e00\u662f\u56e0\u4e3a\u7b14\u8005\u4e00\u540c\u5b66\u4e5f\u53eb$czx$\u2026\u2026\n\n3.\u6700\u540e\u5f3a\u884c\u5b89\u5229\u4e00\u6ce2\u6211\u7684\u535a\u5ba2\uff1a[\u8bf7\u5404\u4f4d\u6307\u6559](https://www.cnblogs.com/h-lka/)",
        "postTime": 1563078048,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4880 \u3010\u6293\u4f4fczx\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5c31\u662f\u4e2a\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\uff0c\u5148\u6572\u4e00\u4e2a\u5806\u4f18\u5316$dijkstra$\u6216\u8005$spfa$\uff0c\u7136\u540e\u79bb\u7ebf\u5904\u7406\u6240\u6709\u77ac\u79fb\u7684\u65f6\u523b\uff0c\u5c06\u5b83\u4eec\u6309\u77ac\u79fb\u65f6\u523b\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u540e\u4f4d\u7f6e\u53d8\u5316\u662f\u4f9d\u6b21\u8fdb\u884c\u7684\uff1b\u5047\u8bbe\u5f53\u524d$czx$\u7ecf$i$\u6b21\u77ac\u79fb\u540e\u5230\u8fbe\u70b9$a[i].x$\uff0c\u4e14\u4e0b\u4e00\u6b21\u77ac\u79fb\u65f6\u523b\u4e3a$a[i+1].t$\uff0c\u90a3\u4e48\u82e5$lty$\u6700\u77ed\u5230\u8fbe\u65f6\u95f4$dist[a[i].x]<a[i+1].t$\uff08\u4e0d\u80fd\u53d6\u7b49\u53f7\uff0c\u56e0$czx$\u603b\u662f\u4f18\u5148\u77ac\u79fb\uff09\uff0c\u5219$lty$\u53ef\u4ee5\u5728$a[i].x$\u6293\u5230$czx$\uff1b\u7531\u4e8e\u6392\u5e8f\u540e\u77ac\u79fb\u65f6\u523b\u662f\u9012\u589e\u7684\uff0c\u6545\u5373\u4f7f\u540e\u9762\u7684\u77ac\u79fb\u5730\u70b9\u4e5f\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\u4f7f$lty$\u6293\u5230$czx$\uff0c\u4e5f\u5fc5\u5b9a\u65f6\u95f4\u66f4\u957f\uff08\u5373\u4f7f\u63d0\u524d\u5230\u4e5f\u8981\u7b49$czx$\uff09\uff0c\u6545\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\u3002\n\n\u53e6\u5916\uff0c\u7279\u5224\u4e00\u4e0b\u5728\u6700\u540e\u4e00\u4e2a\u5730\u70b9\u6293\u5230$czx$\u7684\u60c5\u51b5\u3002\n\n```cpp\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\n    struct forward_star\n    {\n        int next,to;\n        long long w;\n    };\n    struct newdata\n    {\n        long long t;\n        int x;\n    };\n    int n,m,b,e,cnt,tot,t;\n    forward_star edge[1000001];\n    int head[100001];\n    int heap[100001];\n    long long dist[100001];\n    newdata a[100001];\nvoid add(int u,int v,long long w)\n{\n    cnt++;\n    edge[cnt].to=v;\n    edge[cnt].w=w;\n    edge[cnt].next=head[u];\n    head[u]=cnt;\n}\nvoid adjust_up(int now)\n{\n    while (now>1&&dist[heap[now/2]]>dist[heap[now]])\n    {\n        swap(heap[now],heap[now/2]);\n        now/=2;\n    }\n}\nvoid adjust_down(int now)\n{\n    if (now*2+1<=tot)\n    {\n        int k;\n        if (dist[heap[now*2]]<dist[heap[now*2+1]]) k=now*2; else k=now*2+1;\n        if (dist[heap[now]]>dist[heap[k]])\n        {\n            swap(heap[now],heap[k]);\n            adjust_down(k);\n        } else return;\n    }\n    else if (now*2<=tot)\n    {\n        if (dist[heap[now]]>dist[heap[now*2]])\n        {\n            swap(heap[now],heap[now*2]);\n            adjust_down(now*2);\n        } else return;\n    }\n    return;\n}\nvoid addheap(int now)\n{\n    heap[++tot]=now;\n    adjust_up(tot);\n}\nvoid remove()\n{\n    heap[1]=heap[tot];\n    tot--;\n    adjust_down(1);\n}\nvoid solve() //\u5806\u4f18\u5316+dijkstra\u8fc7\u7a0b\n{\n    memset(dist,0x7f7f,sizeof(dist));\n    dist[b]=0;\n    tot=0;\n    addheap(b);\n    while (tot>0)\n    {\n        int now=heap[1];\n        int i=head[now];\n        remove();\n        while (i!=0)\n        {\n            if (dist[now]+edge[i].w<dist[edge[i].to])\n            {\n                dist[edge[i].to]=dist[now]+edge[i].w;\n                addheap(edge[i].to);\n            }\n            i=edge[i].next;\n        }\n    }\n}\nbool cmp(newdata i,newdata j)\n{\n    return i.t<j.t;\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&b,&e);\n    for (int i=1;i<=m;i++)\n    {\n        int u,v;\n        long long w;\n        scanf(\"%d%d%lld\",&u,&v,&w);\n        add(u,v,w);\n        add(v,u,w);\n    }\n    scanf(\"%d\",&t);\n    int now=e;\n    solve(); //\u505a\u4e00\u904d\u6700\u77ed\u8def\n    for (int i=1;i<=t;i++)\n        scanf(\"%lld%d\",&a[i].t,&a[i].x);\n    sort(a+1,a+t+1,cmp); //\u79bb\u7ebf\u5904\u7406\uff0c\u6392\u5e8f\u65f6\u95f4\n    a[0].x=e;\n    for (int i=0;i<t;i++)\n    \tif (dist[a[i].x]<a[i+1].t)\n    \t{\n    \t\tprintf(\"%lld\",max(dist[a[i].x],a[i].t));\n    \t\treturn 0;\n    \t}\n    printf(\"%lld\",max(dist[a[t].x],a[t].t));\n    return 0;\n}\n```",
        "postTime": 1536487294,
        "uid": 21760,
        "name": "Forward_Star",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4880 \u3010\u6293\u4f4fczx\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u601d\u8def\u6709\u70b9\u610f\u601d\n\n\u5bf9\u4e8eT\u4e3a0\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u8f93\u51fad[e]\n\nT\u4e0d\u4e3a0\u65f6\uff0c\u7528\u961f\u7ec4\u5b58a[i],x\n\n\u6309a[i]\u6392\u5e8f\n\n\u82e5lty\u5728czx\u79bb\u5f00x\u524d\u5230\u8fbex\uff08d[x]<a[i+1]\uff09\n\n\u5219lty\u53ef\u4ee5\u5728\u70b9x\u5361\u5230czx\n\n\u6700\u540e\u5728\u6240\u6709\u8fd9\u6837\u7684x\u4e2d\u627e\u51famax(a[i],d[x])\uff08a[i]\u3001d[x]\u5206\u4e3a\u4e3aczx\u3001lty\u5230\u8fbex\u7684\u65f6\u523b\uff09\u7684\u6700\u5c0f\u503c\u5373\u53ef\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int MAXN=1e5 + 3;\nint read()\n{\n\tint x=0,w=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') w=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+c-48;c=getchar();}\n\treturn x*w;\n}\n\nstruct Edge\n{\n\tint to,next,w;\n}e[MAXN*10];\nint head[MAXN]={0},cnt=0;\ninline void add(int u,int v,int w)\n{\n\te[++cnt].to=v;\n\te[cnt].w=w;\n\te[cnt].next=head[u];\n\thead[u]=cnt;\n}\n\npriority_queue<pair<int,int> > Q;\nint d[MAXN]={0},vis[MAXN]={0};\nvoid dij(int s)\n{\n\tmemset(d,127,sizeof(d));\n\tmemset(vis,0,sizeof(vis));\t\n\td[s]=0,Q.push(make_pair(-d[s],s));\n\twhile(!Q.empty())\n\t{\n\t\tint u=Q.top().second;\n\t\tQ.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=e[i].next)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\tif(d[v]>d[u]+e[i].w)\n\t\t\t\td[v]=d[u]+e[i].w,Q.push(make_pair(-d[v],v));\n\t\t}\n\t}\n}\n\npair<int,int> p[MAXN];\nint main()\n{\n\tint n=read(),m=read(),s=read(),t=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read(),w=read();\n\t\tadd(u,v,w);\n\t\tadd(v,u,w);\n\t}\n\tint T=read();\n\tfor(int i=1;i<=T;i++)\n\t\tp[i].first=read(),p[i].second=read();\n\tsort(p+1,p+1+T);\n\tdij(s);\n\tint ans=1<<30;\n\tif(T==0)\n\t\tans=d[t];\n\telse\n\t{\n\t\tif(d[t]<p[1].first) ans=d[t];\n\t\tfor(int i=1;i<T;i++)\n\t\t{\n\t\t\tint v=p[i].second;\n\t\t\tif(d[v]<p[i+1].first)//lty\u53ef\u4ee5\u8d76\u5728czx\u79bb\u5f00\u524d\u5230\u8fbev \n\t\t\t\tans=min(ans,max(d[v],p[i].first));\n\t\t}\n\t\tans=min(ans,max(d[p[T].second],p[T].first));\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1556439306,
        "uid": 88736,
        "name": "Sober_Clever",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4880 \u3010\u6293\u4f4fczx\u3011"
    },
    {
        "content": "### \u5355\u6e90\u6700\u77ed\u8def\u6c34\u9898\n\u6839\u636e\u7ed9\u5b9a\u7684\u56fe\u8dd1dij\u53ef\u4ee5\u77e5\u9053lty\u4f55\u65f6\u80fd\u6700\u65e9\u5230\u8fbe\u67d0\u70b9\u3002 \n\u6211\u4eec\u8981\u6c42\u5f97\u6700\u4f18\u7684\u65f6\u95f4\uff0c\u5c31\u8981\u8003\u8651\u80fd\u5426\u66f4\u65e9\u6293\u5230czx\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5c06czx\u51fa\u73b0\u7684\u65f6\u95f4\u6392\u5e8f\uff0c\u4ece\u65e9\u5230\u665a\u8003\u8651\uff0c\u80fd\u5426\u5728\u8fd9\u4e00\u6bb5\u65f6\u95f4\u5185\u6355\u6349\u5230czx\u3002  \n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <algorithm>\n#define pii pair<int, int>\n\nusing namespace std;\n\nconst int maxn = 100010, maxm = 1000010, maxt = 100010;\n\ninline char gc() {\n\tstatic char buf[1<<21], *p1 = buf, *p2 = buf;\n\treturn p1==p2 && (p2=(p1=buf)+fread(buf, 1, 1<<21, stdin), p1==p2) ? EOF : *p1++;\n}\n\ninline void read(int &x) {\n\tx = 0; char ch = gc();\n\twhile(ch < '0' || ch > '9') ch = gc();\n\twhile(ch >= '0' && ch <= '9') x = (x<<3)+(x<<1)+(ch&15), ch = gc();\n}\n\nstruct chg{\n\tint time, pl;\n\tinline bool operator < (const chg & o) const {\n\t\treturn time < o.time;\n\t}\n}cg[maxt];\n\nstruct edges{\n\tint to, wei, nex;\n}e[maxm<<1];\nint head[maxn], tot;\n\ninline void addedge(int u, int v, int w) {\n\te[tot] = (edges){v, w, head[u]}; head[u] = tot++;\n}\n\n\npriority_queue<pii> q;\nint d[maxn];\ninline void dij(int s) {\n\tmemset(d, -1, sizeof(d));\n\td[s] = 0; q.push(make_pair(0, s));\n\twhile(!q.empty()) {\n\t\tint cur = q.top().second, dmen = -q.top().first; q.pop();\n\t\tif(dmen > d[cur]) continue;\n\t\tfor(int i = head[cur]; i != -1; i = e[i].nex) {\n\t\t\tif(d[e[i].to] == -1 || d[e[i].to] > d[cur] + e[i].wei) {\n\t\t\t\td[e[i].to] = d[cur] + e[i].wei;\n\t\t\t\tq.push(make_pair(-d[e[i].to], e[i].to));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tmemset(head, -1, sizeof(head));\n\tint n, m, b, e, u, v, w, t;\n\tread(n); read(m); read(b); read(e);\n\twhile(m--) {\n\t\tread(u); read(v); read(w);\n\t\taddedge(u, v, w);\n\t\taddedge(v, u, w);\n\t}\n\tread(t);\n\tfor(int i = 0; i < t; i++)\n\t\tread(cg[i].time), read(cg[i].pl);\n\tsort(cg, cg+t);\n\tdij(b);\n\tif(t == 0) {\n\t\tprintf(\"%d\\n\", d[e]);\n\t} else if(d[e] < cg[0].time) {\n\t\tprintf(\"%d\\n\", d[e]);\n\t} else {\n\t\tfor(int i = 0; i < t; i++) {\n\t\t\tint pls = cg[i].pl, tm = i != t ? cg[i+1].time : 0x3f3f3f3f;\n\t\t\tif(d[pls] < tm) {\n\t\t\t\tprintf(\"%d\\n\", max(cg[i].time, d[pls]));\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1556289788,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4880 \u3010\u6293\u4f4fczx\u3011"
    }
]