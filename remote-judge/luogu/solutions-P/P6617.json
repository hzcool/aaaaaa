[
    {
        "content": "\u6bd4\u8f83\u663e\u7136\u5730\uff1a\u5b9a\u4e49\u4e00\u4e2a\u4f4d\u7f6e\u7684\u524d\u9a71\u4e3a\u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7b2c\u4e00\u4e2a\u4e0e\u8fd9\u4e2a\u4f4d\u7f6e\u52a0\u8d77\u6765\u7b49\u4e8e $w$ \u7684\u4f4d\u7f6e\uff0c\u6ca1\u6709\u5219\u4e3a $0$\uff0c\u5219\u7b54\u6848\u4e3a\u533a\u95f4\u5185\u6240\u6709\u6570\u524d\u9a71\u7684\u6700\u5927\u503c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e $l$\u3002\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u6837\u7684\u8bdd\u4fee\u6539\u5c31\u70b8\u4e86\uff0c\u56e0\u4e3a\u6709\u5f88\u591a\u6570\u7684\u524d\u9a71\u4f1a\u6539\u53d8\u3002\n\n\u7136\u540e\u6709\u4e00\u4e2a\u6bd4\u8f83\u5de7\u5999\u7684\u8f6c\u5316\uff0c\u5c31\u662f\u5982\u679c\u4e00\u4e2a\u6570\u7684\u524d\u9a71\u6bd4\u5b83\u524d\u9762\u7b2c\u4e00\u4e2a\u4e0e\u4ed6\u76f8\u540c\u7684\u4f4d\u7f6e\u8981\u5c0f\uff0c\u5219\u6211\u4eec\u76f4\u63a5\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u524d\u9a71\u8bbe\u4e3a\u96f6\u3002\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u662f\u5bf9\u7684\u3002\n\n\u8fd9\u4e2a\u5927\u6982\u662f\u6211\u8d5b\u65f6\u7684\u601d\u8def\uff0c\u7136\u540e\u6211\u5c31\u6781\u5176 naive \u5730\u4ee5\u4e3a\u8fd9\u6837\u4e5f\u6ca1\u6cd5\u76f4\u63a5\u4fee\u6539\u2026\u2026\n\n\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u3002\u53d1\u73b0\u65b0\u5b9a\u4e49\u7684\u524d\u9a71\u4f1a\u6539\u53d8\u7684\u4f4d\u7f6e\u6700\u591a\u53ea\u6709\u4e94\u4e2a\uff1a\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u539f\u6765\u540e\u9762\u7b2c\u4e00\u4e2a\u4e0e\u4ed6\u76f8\u540c\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u539f\u6765\u540e\u9762\u7b2c\u4e00\u4e2a\u4e0e\u4ed6\u76f8\u52a0\u5f97 $w$ \u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u540e\u6765\u540e\u9762\u7b2c\u4e00\u4e2a\u4e0e\u4ed6\u76f8\u540c\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u540e\u6765\u540e\u9762\u7b2c\u4e00\u4e2a\u4e0e\u4ed6\u76f8\u52a0\u5f97 $w$ \u7684\u4f4d\u7f6e\u3002\n\n\u76f4\u63a5\u7528 `set` \u7ef4\u62a4\u6bcf\u4e2a\u503c\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u5373\u53ef\u3002\n```cpp\n#include<algorithm>\n#include<set>\n#include<vector>\n#include<cctype>\n#include<cstdio>\nusing namespace std;\ninline int readint(){\n\tint x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)&&c!='-') c=getchar();\n\tif(c=='-'){\n\t\tf=1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nconst int maxn=5e5+5;\nint n,m,w,a[maxn];\nset<int> s[maxn];\ntypedef set<int>::iterator iter;\nstruct node{\n\tint l,r;\n\tnode* ch[2];\n\tint mx;\n\tvoid pushup(){\n\t\tmx=max(ch[0]->mx,ch[1]->mx);\n\t}\n\tnode(int l,int r):l(l),r(r),mx(0){\n\t\tif(l<r){\n\t\t\tint mid=l+(r-l)/2;\n\t\t\tch[0]=new node(l,mid);\n\t\t\tch[1]=new node(mid+1,r);\n\t\t\tpushup();\n\t\t}\n\t}\n\tvoid modify(int x,int k){\n\t\tif(l==r) mx=k;\n\t\telse{\n\t\t\tif(x<=ch[0]->r) ch[0]->modify(x,k);\n\t\t\telse ch[1]->modify(x,k);\n\t\t\tpushup();\n\t\t}\n\t}\n\tint query(int ql,int qr){\n\t\tif(ql<=l&&qr>=r) return mx;\n\t\telse{\n\t\t\tint ans=0;\n\t\t\tif(ql<=ch[0]->r) ans=max(ans,ch[0]->query(ql,qr));\n\t\t\tif(qr>=ch[1]->l) ans=max(ans,ch[1]->query(ql,qr));\n\t\t\treturn ans;\n\t\t}\n\t}\n}*rt;\nint pre(int x){\n\titer it1=s[a[x]].lower_bound(x),it2=s[w-a[x]].lower_bound(x);\n\tif(it2==s[w-a[x]].begin()) return 0;\n\telse if(it1==s[a[x]].begin()) return *--it2;\n\telse if(*--it1>*--it2) return 0;\n\telse return *it2;\n}\nint main(){\n\t#ifdef LOCAL\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n\t#endif\n\tn=readint();\n\tm=readint();\n\tw=readint();\n\tfor(int i=1;i<=n;i++) a[i]=readint();\n\trt=new node(1,n);\n\tfor(int i=1;i<=n;i++){\n\t\trt->modify(i,pre(i));\n\t\ts[a[i]].insert(i);\n\t}\n\tint cnt=0;\n\twhile(m--){\n\t\tint op=readint();\n\t\tif(op==1){\n\t\t\tint x,k;\n\t\t\tx=readint();\n\t\t\tk=readint();\n\t\t\tvector<int> res;\n\t\t\titer it=s[a[x]].upper_bound(x);\n\t\t\tif(it!=s[a[x]].end()) res.push_back(*it);\n\t\t\tit=s[w-a[x]].upper_bound(x);\n\t\t\tif(it!=s[w-a[x]].end()) res.push_back(*it);\n\t\t\ts[a[x]].erase(x);\n\t\t\ts[a[x]=k].insert(x);\n\t\t\tres.push_back(x);\n\t\t\tit=s[a[x]].upper_bound(x);\n\t\t\tif(it!=s[a[x]].end()) res.push_back(*it);\n\t\t\tit=s[w-a[x]].upper_bound(x);\n\t\t\tif(it!=s[w-a[x]].end()) res.push_back(*it);\n\t\t\tfor(int i=0;i<(int)res.size();i++) rt->modify(res[i],pre(res[i]));\n\t\t}\n\t\telse{\n\t\t\tint l,r;\n\t\t\tl=readint()^cnt;\n\t\t\tr=readint()^cnt;\n\t\t\tif(rt->query(l,r)>=l){\n\t\t\t\tcnt++;\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t}\n\t\t\telse printf(\"No\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1592187795,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6617 \u3010\u67e5\u627e Search\u3011"
    },
    {
        "content": "# P6617 \u67e5\u627e Search \u9898\u89e3\n\n**\u8003\u67e5\u65b9\u5411**\n> $\\texttt{set}$ \u7684\u5e94\u7528\u548c\u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\uff0c\u8f83\u5927\u7684\u601d\u7ef4\u91cf\n\n**\u5206\u6790\u9898\u76ee**\n\n\u8bfb\u5b8c\u9898\u76ee\u5e94\u8be5\u53d1\u73b0\u76f8\u52a0\u4e4b\u548c\u7b49\u4e8e $w$ \u7684\u4e24\u4e2a\u5783\u573e\u6876\u662f\u5fc5\u987b\u5904\u7406\u7684\uff0c\u6211\u4eec\u4ece**\u505a\u8d21\u732e**\u7684\u89d2\u5ea6\u53bb\u8003\u8651\uff0c\u5bf9\u4e8e\u4f4d\u7f6e $i$ \uff0c\u5018\u82e5\u540e\u9762\u53c8\u82e5\u5e72\u4e2a\u6570\u4e0e\u4e4b\u76f8\u52a0\u4e4b\u548c\u662f $w$ \u7684\u6570\uff0c\u4e14 $i$ \u662f**\u548c**\u540e\u9762\u6240\u6709\u6570\u53ef\u4ee5\u505a\u51fa\u8d21\u732e\u7684\u6700\u8fd1\u7684\u4e00\u4e2a\u6570\u3002\u90a3\u4e48\u8981\u60f3\u505a\u51fa\u8d21\u732e\uff0c\u53ea\u80fd\u662f\u548c $i$ \u8ddd\u79bb\u662f\u6700\u8fd1\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5176\u4ed6\u7684\u90fd\u4e0d\u505a\u8d21\u732e\u3002\n\n**\u601d\u8def**\n\n\u601d\u8003\u65b9\u5411\u548c [P1972 [SDOI2009]HH\u7684\u9879\u94fe](https://www.luogu.com.cn/problem/P1972) \u5341\u5206\u76f8\u4f3c\uff0c\u53ef\u4ee5\u8bf4\u662f\u53cc\u500d\u7ecf\u9a8c\u3002\u8fd9\u6837\u6211\u4eec\u7528 $nxt_i$ \u8868\u793a $i$ \u70b9\u5f80\u540e\u4e00\u4e2a\u4e0e\u4e4b\u76f8\u52a0\u662f $w$ \u7684\u4f4d\u7f6e\uff0c\u5148\u4e0d\u8003\u8651\u4fee\u6539\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\uff1a\n$$\n\\min_{l}^{r}nxt_i\\le r\n$$\n\u89e3\u91ca\u4e00\u4e0b\u4ec0\u4e48\u610f\u601d\uff0c\u53ea\u8981\u5728\u533a\u95f4 $[l,r]$ \u4e2d\u4f4d\u7f6e\u6700\u5c0f\u7684\u540e\u7f00\u5339\u914d\u6210\u529f $nxt_i$ \u5728\u533a\u95f4\u5185\uff0c\u90a3\u4e48\u5c31\u53ef\u4ea7\u751f\u8d21\u732e\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u64cd\u4f5c\u3002\n\n\u518d\u8003\u8651\u4fee\u6539\uff0c\u5bf9\u4e8e\u4f4d\u7f6e $i$ \u88ab\u4fee\u6539\uff0c\u53ef\u80fd\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\uff1f\n- \u81ea\u8eab\u88ab\u4fee\u6539\uff0c\u91cd\u65b0\u627e\u5230\u81ea\u5df1\u7684\u540e\u7f00\u5339\u914d\u4f4d\u7f6e\uff08\u4e5f\u8bb8\u627e\u4e0d\u5230\uff09\n- \u539f\u6765\u6570\u7684\u540e\u7f00\u5339\u914d\u4f4d\u7f6e\u53d7\u5230\u5f71\u54cd\uff0c\u9700\u8981\u91cd\u65b0\u627e\u5230\u548c\u524d\u9762\u5339\u914d\u7684\u4f4d\u7f6e\uff08\u4e5f\u8bb8\u8fd9\u4e2a\u6570\u6ca1\u6709\uff09\n- \u5728\u4f4d\u7f6e $i$ \u524d\u9762\u7684\u6570\u62e5\u6709\u7684\u540e\u7f00\u5339\u914d\u4f4d\u7f6e\u53ef\u80fd\u9700\u8981\u66f4\u65b0\uff0c\u56e0\u4e3a\u65b0\u7684\u6570\u5728 $i$ \u4e2d\u51fa\u73b0\n\n\u5bf9\u4e8e\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u90fd\u53ef\u4ee5\u7528 $\\texttt{set}$ \u7ef4\u62a4\u524d\u9a71\u540e\u8bb0\u3002\u7136\u540e\u5c31\u5b8c\u6210\u4e86\n\n\u503c\u5f97\u4e00\u8bf4\u7684\u662f\uff1a`int last=*(it--); ` \u6b64\u64cd\u4f5c\u662f\u5148\u8d4b\u503c\u518d\u66f4\u65b0\uff0c\u5404\u4f4d\u4e0d\u8981\u7406\u89e3\u9519\u4e86\u3002\n\n\u5907\u6ce8\uff1a\u601d\u8def\u6765\u6e90\u4e8e\u9898\u89e3\u533a\uff0c\u5728\u6211\u770b\u6765\u66f4\u597d\u7406\u89e3 qwq    \n\n\n```c\n#include <set>\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define ll long long\nusing namespace std;\n\nconst int A = 1e5+10;\nconst int B = 5e5+10;\nconst int mod = 1e9 + 7;\nconst int inf = 0x3f3f3f3f;\n\ninline int read() {\n  char c = getchar();\n  int x = 0, f = 1;\n  for ( ; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n  for ( ; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n  return x * f;\n}\n#define root 1,n,1\n#define lson l,m,rt<<1\n#define rson m+1,r,rt<<1|1\nint a[B];\nint nxt[B];\nnamespace Seg\n{\n    struct node\n    {\n        int l,r;\n        int sum;\n        int minx;\n        node() {l=r=sum=minx=0;}\n        void init(int l_,int r_) {l=l_,r=r_,sum=nxt[l];minx=nxt[l];};\n    }z[B<<2];\n    node operator +(const node &l, const node &r)\n    {\n        node p; p.l=l.l, p.r=r.r; p.minx=min(l.minx,r.minx);\n        return p; \n    } \n    void update(int rt) {z[rt]=z[rt<<1]+z[rt<<1|1];}\n    void build(int l,int r,int rt)\n    {\n        if (l==r) {z[rt].init(l,r); return;}\n        int m=l+r>>1;\n        build(lson), build(rson); update(rt); \n    }\n    void modify(int l,int r,int rt,int x)\n    {\n        if (l==r) {z[rt].minx=nxt[x];return;}\n        int m=l+r>>1;\n        if (x<=m) modify(lson,x);\n        if (x>m) modify(rson,x);\n        update(rt);\n    }\n    node query(int l,int r,int rt,int nowl,int nowr)\n    {\n        if (nowl<=l && r<=nowr) return z[rt];\n        int m=l+r>>1;\n        if (nowl<=m)\n        {\n            if (m<nowr) return query(lson,nowl,nowr)+query(rson,nowl,nowr);\n            return query(lson,nowl,nowr); \n        }\n        return query(rson,nowl,nowr);\n    }\n} \nint n,m,w;\nset<int> se[B];\nint cnt;\n#define tpy set<int>::iterator\nint main()\n{\n    n=read(),m=read(),w=read();\n    for (int i=1;i<=n;i++) \n    {\n        a[i]=read();\n        se[min(a[i],w-a[i])].insert(i);\n    }\n    for (int i=0;i<=w/2;i++) se[i].insert(n+1);\n    for (int i=1;i<=n;i++)\n    {\n        tpy it=se[min(a[i],w-a[i])].upper_bound(i);\n        nxt[i]=(a[*it]+a[i]==w) ? *it : n+1; \n    }\n    Seg::build(root);\n    while (m--)\n    {\n        int opt=read();\n        if (opt==1)\n        {\n            int x=read(),y=read();\n            se[min(a[x],w-a[x])].erase(x);\n            tpy it=se[min(a[x],w-a[x])].lower_bound(x);//\u6539\u539f\u6765\u540e\u9762 \n            if (it!=se[min(a[x],w-a[x])].begin())\n            {\n                int last=*(it--); //\u8fd9\u91cc\u662f\u5148\u8d4b\u503c\u518d--  \u6240\u4ee5\u4e0b\u9762\u7684 *it \u8868\u793a\u662f\u524d\u4e00\u4e2a\u4f4d\u7f6e \n                nxt[*it]=(a[last]+a[*it]==w) ? last : n+1;//\n                Seg::modify(root,*it); \n            } \n            a[x]=y;\n            se[min(y,w-y)].insert(x);\n            it=se[min(y,w-y)].upper_bound(x);\n            nxt[x]=(a[*it]+a[x]==w) ? *it : n+1;\n            Seg::modify(root,x);\n            it=se[min(y,w-y)].lower_bound(x);\n            if (it!=se[x].begin())\n            {\n                int tmp=*(it--);\n                nxt[*it]=a[tmp]+a[*it]==w ? tmp : n+1;\n                Seg::modify(root,*it);\n            }  \n        }\n        else if (opt==2)\n        {\n            int x=read(),y=read();\n            x^=cnt; y^=cnt;\n            if (Seg::query(root,x,y).minx<=y)\n            {\n                cnt++;\n                printf(\"Yes\\n\");\n            }    \n            else printf(\"No\\n\");\n        }\n    }\n}\n```\n\n\u82e5\u6709\u4e0d\u7b26\u5408\u89c4\u77e9\u7684\u5730\u65b9\u8bf7\u7ba1\u7406\u5458\u5927\u5927\u8be6\u7ec6\u70b9\u51fa\uff0c\u6211\u8ba4\u771f\u4fee\u6539\uff0c\u671b\u901a\u8fc7\u3002",
        "postTime": 1626597649,
        "uid": 230808,
        "name": "Zxsoul",
        "ccfLevel": 4,
        "title": "P6617 \u67e5\u627e Search \u9898\u89e3"
    },
    {
        "content": "**\u9898\u89e3**\n\n\u8003\u8651\u8bb0\u6700\u5c0f\u7684\u6ee1\u8db3 $j>i$ \u4e14 $a_i + a_j = w$ \u7684 $j$ \u4e3a $\\operatorname{nxt}_i$\uff0c\u5219\u8be2\u95ee\u7684\u6761\u4ef6\u7b49\u4ef7\u4e8e\uff1a\n\n$$\n\\min_{i=l}^r \\operatorname{nxt}_i \\le r\n$$\n\n\u5e76\u4e14\uff0c\u7531\u4e8e\u5fc5\u6709 $\\operatorname{nxt}_i > i$\uff0c\u6240\u4ee5\u5bf9\u4e8e $i > r$ \u6052\u6709 $\\operatorname{nxt}_i > r$ \u6210\u7acb\uff0c\u6545\u6761\u4ef6\u7b49\u4ef7\u4e8e\uff1a\n\n$$\n\\min_{i=l}^n \\operatorname{nxt}_i \\le r\n$$\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u7b49\u4ef7\u4e8e\u53d6\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u5bf9\u4e8e $\\operatorname{nxt}_i$ \u76f8\u540c\u7684\u6240\u6709 $i$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u6700\u5927\u7684 $i$ \u7684 $\\operatorname{nxt}_i$ \u5373\u53ef\u3002\u8fd9\u6837\u6211\u4eec\u4fee\u6539\u4e00\u4e2a\u70b9\u5c31\u53ea\u5f71\u54cd\u4e86\u5e38\u6570\u4e2a\u4f4d\u7f6e\u7684 $\\operatorname{nxt}_i$\u3002\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u540e\u7f00\u6700\u5c0f\u503c\u3001``std::set`` \u7ef4\u62a4\u524d\u9a71\u540e\u7ee7\u7684\u67e5\u8be2\u5373\u53ef\u505a\u5230 $\\mathcal O(n\\log n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u4e00\u4e2a\u5c0f Trick \u662f\u53ef\u4ee5\u628a $v$ \u548c $w-v$ \u7ef4\u62a4\u5728\u540c\u4e00\u4e2a ``std::set`` \u91cc\u9762\uff0c\u7136\u540e\u5f71\u54cd\u7684\u4ecd\u7136\u53ea\u4f1a\u662f\u524d\u9a71\u540e\u7ee7\u3002\n\n**\u4ee3\u7801**\n\n```cpp\nconst int kN = 5e5 + 5, kInf = 0x3f3f3f3f;\n\nint n, m, w, a[kN], nxt[kN];\nstd::set <int> S[kN];\n\nint seg[kN << 3];\nvoid Update(int o) { seg[o] = std::min(seg[o << 1], seg[o << 1 | 1]); }\nvoid Build(int o, int l, int r) {\n\tif(l < r) {\n\t\tint mid = (l + r) >> 1;\n\t\tBuild(o << 1, l, mid);\n\t\tBuild(o << 1 | 1, mid + 1, r);\n\t\tUpdate(o);\n\t} else seg[o] = nxt[l];\n}\nint Query(int o, int l, int r, int p) {\n\tif(p <= l) return seg[o];\n\tint mid = (l + r) >> 1, ret = kInf;\n\tif(p <= mid) ret = std::min(ret, Query(o << 1, l, mid, p));\n\tret = std::min(ret, Query(o << 1 | 1, mid + 1, r, p));\n\treturn ret;\n}\nvoid Modify(int o, int l, int r, int p) {\n\tif(l == r) seg[o] = nxt[p];\n\telse {\n\t\tint mid = (l + r) >> 1;\n\t\tif(p <= mid) Modify(o << 1, l, mid, p);\n\t\telse Modify(o << 1 | 1, mid + 1, r, p);\n\t\tUpdate(o);\n\t}\n}\n\nint main() { \n\tint T = 1; //rd(T);\n\twhile(T--) {\n\t\tmemset(seg, 0x3f, sizeof(seg));\n\t\tmemset(nxt, 0x3f, sizeof(nxt));\n\t\trd(n, m, w);\n\t\tfor(int i = 1; i <= n; ++i) {\n\t\t\trd(a[i]);\n\t\t\tS[std::min(a[i], w - a[i])].insert(i);\n\t\t}\n\t\tfor(int i = 0; i <= w / 2; ++i) S[i].insert(n + 1);\n\t\tfor(int i = 1; i <= n; ++i) {\n\t\t\tint v = std::min(a[i], w - a[i]);\n\t\t\tauto it = S[v].upper_bound(i);\n\t\t\tnxt[i] = a[*it] + a[i] == w ? *it : n + 1;\n\t\t}\n\t\tBuild(1, 1, n);\n\t\tint cnt = 0;\n\t\twhile(m--) {\n\t\t\tint opt, x, y; rd(opt, x, y);\n\t\t\tif(opt == 1) {\n\t\t\t\tint v_a = std::min(a[x], w - a[x]), v_y = std::min(y, w - y);\n\t\t\t\tS[v_a].erase(x);\n\t\t\t\tauto it = S[v_a].lower_bound(x);\n\t\t\t\tif(it != S[v_a].begin()) {\n\t\t\t\t\tint tmp = *(it--);\n\t\t\t\t\tnxt[*it] = a[tmp] + a[*it] == w ? tmp : n + 1;\n\t\t\t\t\tModify(1, 1, n, *it);\n\t\t\t\t}\n\t\t\t\ta[x] = y;\n\t\t\t\tS[v_y].insert(x);\n\t\t\t\tit = S[v_y].upper_bound(x);\n\t\t\t\tnxt[x] = a[*it] + a[x] == w ? *it : n + 1;\n\t\t\t\tModify(1, 1, n, x);\n\t\t\t\tit = S[v_y].lower_bound(x);\n\t\t\t\tif(it != S[v_y].begin()) {\n\t\t\t\t\tint tmp = *(it--);\n\t\t\t\t\tnxt[*it] = a[tmp] + a[*it] == w ? tmp : n + 1;\n\t\t\t\t\tModify(1, 1, n, *it);\n\t\t\t\t}\n\t\t\t} else if(opt == 2) {\n\t\t\t\tx ^= cnt; y ^= cnt;\n\t\t\t\tbool flag = Query(1, 1, n, x) <= y;\n\t\t\t\tcnt += flag;\n\t\t\t\tprintf(flag ? \"Yes\\n\" : \"No\\n\");\n\t\t\t}\n\t\t}\n\t} return 0;\n}\n```",
        "postTime": 1608033955,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6617 \u3010\u67e5\u627e Search\u3011"
    },
    {
        "content": "\u6570\u636e\u7ed3\u6784\u90e8\u5206\u4e0d\u96be\uff0c\u91cd\u70b9\u5728\u4fee\u6539\u7684\u8ba8\u8bba\u4e0a\uff0c\u6709\u70b9\u50cf [P5278](https://www.luogu.com.cn/problem/P5278)\u3002\n\n\u5b9a\u4e49\u4e00\u4e0b\u4e24\u79cd\u5173\u7cfb\uff1a\n\n- \u201c\u8865\u201d\u8868\u793a\u4e0e\u6570 $x$ \u76f8\u52a0\u4e3a $w$\u3002\n\n- \u201c\u7b49\u201d\u8868\u793a\u4e0e\u6570 $x$ \u76f8\u7b49\u3002\n\n\u9996\u5148\u601d\u8003**\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c**\u600e\u4e48\u505a\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u8bb0\u5f55 $v_i$ \u8868\u793a\u5b83\u7684**\u8865\u524d\u9a71**\u3002\u8be2\u95ee\u533a\u95f4 $[l,r]$\uff0c\u5c31\u8f6c\u5316\u4e3a\u8be2\u95ee $[l,r]$ \u4e2d $v$ \u7684\u6700\u5927\u503c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e $l$\u3002\u8fd9\u6837\u5c31\u662f\u4e00\u4e2a RMQ \u95ee\u9898\u4e86\u3002\n\n\u4f46\u662f\u6709\u4fee\u6539\u64cd\u4f5c\u540e\uff0c\u53ef\u80fd\u6709**\u5f88\u591a\u6570**\u7684\u8865\u524d\u9a71\u53d1\u751f\u53d8\u5316\u3002\u8fdb\u4e00\u6b65\u8f6c\u5316 $v_i$\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6570 $b$\uff0c\u82e5\u5b83**\u7684\u8865\u524d\u9a71\u7684\u8865\u540e\u9a71**\u4ecd\u662f\u8fd9\u4e2a\u6570\uff0c\uff08\u5373 $b$ \u7684\u8865\u524d\u9a71\u8981\u5728 $b$ \u7684\u7b49\u524d\u9a71\u540e\u9762\uff09\u6211\u4eec\u624d\u7ef4\u62a4 $v_i$\uff0c\u5426\u5219\u8ba9 $v_i=0$\uff0c\u663e\u7136\u6b64\u65f6\u4ecd\u7136\u6700\u4f18\u3002\n\n\u8fd9\u6837\u9700\u8981\u4fee\u6539 $v$ \u503c\u7684\u6570\u5c31\u80fd\u591f\u5927\u5927\u51cf\u5c11\u3002\n\n\u7a0d\u5fae\u5206\u6790\u4e00\u4e0b\uff0c\u82e5\u6539\u53d8 $a_x$ \u7684\u503c\u4e3a $y$\uff0c\u5219\u5728\u4f4d\u7f6e $x$ \u4e0a\uff0c\u53ea\u6709 $a_x$ \u7684\u8865\u540e\u9a71\u3001\u7b49\u540e\u9a71\uff0c$y$ \u7684\u8865\u540e\u9a71\u3001\u7b49\u540e\u9a71\u548c $x$ \u7684 $v$ \u503c\u53d1\u751f\u6539\u53d8\u3002\n\n\u7528\u503c\u57df\u4e2a `set` \u7ef4\u62a4\u4e0d\u540c\u6570\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5373\u53ef\u4fee\u6539 $v$ \u503c\uff08\u7528 $b$ \u7684\u8865\u524d\u9a71\u8981\u5728 $b$ \u7684\u7b49\u524d\u9a71\u540e\u9762\u8fd9\u4e2a\u6027\u8d28\u7ef4\u62a4\uff0c\u5c06\u540c\u4e00\u4ef6\u4e8b\u91cd\u590d\u4e94\u6b21\u5c31\u597d\u4e86\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define lson id * 2\n#define rson id * 2 + 1\n#define mid (l + r) / 2\nusing namespace std;\nconst int N = 500005;\nset<int> s[N];\nset<int>::iterator it; \nint n,m,w,a[N],v[N],Max[4*N];\nint rd(){\n\tint x = 0;char ch = getchar();\n\twhile(ch < '0' || ch > '9')ch = getchar();\n\twhile(ch >= '0' && ch <= '9'){x = x * 10 + ch - '0';ch = getchar();}\n\treturn x;\n}\nvoid build(int id,int l,int r){//\u5e73\u51e1\u7684\u7ebf\u6bb5\u6811\u5efa\u6811\n\tif(l == r){\n\t\tMax[id] = v[l];\n\t\treturn;\n\t}\n\tbuild(lson,l,mid);\n\tbuild(rson,mid + 1,r);\n\tMax[id] = max(Max[lson],Max[rson]);\n}\nvoid update(int id,int l,int r,int x,int k){//\u5e73\u51e1\u7684\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\n\tif(l == r){\n\t\tMax[id] = k;\n\t\treturn;\n\t}\n\tif(x <= mid)\n\t\tupdate(lson,l,mid,x,k);\n\telse\n\t\tupdate(rson,mid + 1,r,x,k);\n\tMax[id] = max(Max[lson],Max[rson]);\n}\nint query(int id,int l,int r,int x,int y){//\u5e73\u51e1\u7684\u7ebf\u6bb5\u6811\u8be2\u95ee\u533a\u95f4\u6700\u503c\n\tif(x <= l && r <= y)\n\t\treturn Max[id];\n\tint res = 0;\n\tif(x <= mid)\n\t\tres = max(res,query(lson,l,mid,x,y));\n\tif(y > mid)\n\t\tres = max(res,query(rson,mid + 1,r,x,y));\n\treturn res;\n}\nvoid calc(int x,int y){//\u4fee\u6539v\u503c\n\tset<int>::iterator i = s[y].find(x);//i\u662fy\u7684\u7b49\u524d\u9a71\n\tset<int>::iterator j = s[w - y].upper_bound(x - 1);//j\u662fy\u7684\u8865\u524d\u9a71\n\tif(j != s[w - y].begin()){//\u5224\u65adj\u7684\u4f4d\u7f6e\u662f\u5426\u5927\u4e8e\u7b49\u4e8ei\uff0c\u6ce8\u610f\u7279\u5224\u7b49\u524d\u9a71\u6216\u8865\u524d\u9a71\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\n\t\tif(i == s[y].begin())\n\t\t\tj--,v[x] = *j,update(1,1,n,x,*j);\n\t\telse if(*(--i) <= *(--j))\n\t\t\tv[x] = *j,update(1,1,n,x,*j);\n\t\telse v[x] = 0,update(1,1,n,x,0);\n\t}\n\telse v[x] = 0,update(1,1,n,x,0);\n}\nint main(){\n\tn = rd(),m = rd(),w = rd();\n\tfor(int i = 1;i <= n;i++){\n\t\ta[i] = rd();\n\t\tif(!s[w - a[i]].empty() && (s[a[i]].empty() || *(--s[w - a[i]].end()) >= *(--s[a[i]].end())))//\u6c42\u4e00\u5f00\u59cb\u7684v\u503c\n\t\t\tv[i] = *(--s[w - a[i]].end());\n\t\ts[a[i]].insert(i);\n\t}\n\tbuild(1,1,n);\n\tint op,x,y,t = 0;\n\twhile(m--){\n\t\top = rd();\n\t\tif(op == 1){\n\t\t\tx = rd(),y = rd();\n\t\t\tset<int>::iterator k = ++s[a[x]].find(x);\n\t\t\tset<int>::iterator l = s[w - a[x]].upper_bound(x);//k\u662fa[x]\u7684\u7b49\u540e\u9a71\uff0cl\u662fa[x]\u7684\u8865\u540e\u9a71\n\t\t\ts[a[x]].erase(x),s[y].insert(x);//set\u4fee\u6539\u4e0d\u80fd\u8c03\u6362\u4f4d\u7f6e\n\t\t\tif(k != s[a[x]].end())//\u4fee\u6539k\n\t\t\t\tcalc(*k,a[x]);\n\t\t\tif(l != s[w - a[x]].end())//\u4fee\u6539l\n\t\t\t\tcalc(*l,w - a[x]);\n\t\t\ta[x] = y;\n\t\t\tk = ++s[a[x]].find(x);\n\t\t\tl = s[w - a[x]].upper_bound(x);//k\u662fy\u7684\u7b49\u540e\u9a71\uff0cl\u662fy\u7684\u8865\u540e\u9a71\n\t\t\tif(k != s[a[x]].end())\n\t\t\t\tcalc(*k,a[x]);\n\t\t\tif(l != s[w - a[x]].end())\n\t\t\t\tcalc(*l,w - a[x]);\n\t\t\tcalc(x,a[x]);\n\t\t}\n\t\telse{\n\t\t\tx = rd() ^ t,y = rd() ^ t;\n\t\t\tif(query(1,1,n,x,y) >= x)//\u8be2\u95ee\n\t\t\t\tputs(\"Yes\"),t++;\n\t\t\telse puts(\"No\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1649222862,
        "uid": 400072,
        "name": "sprads",
        "ccfLevel": 7,
        "title": "P6617 \u67e5\u627e Search \u9898\u89e3"
    },
    {
        "content": "[\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6617)\n\n~~\u8c8c\u4f3c\u662f\u66b4\u529b\uff1f~~**\u8fd9\u662f\u4e00\u4e2a\u8f83\u66b4\u529b\u7684\u505a\u6cd5**\n\n## \u9898\u610f\n\u652f\u6301\u5355\u70b9\u4fee\u6539\uff0c\u67e5\u8be2\u533a\u95f4\u5185\u662f\u5426\u5b58\u5728\u4e24\u6570\u76f8\u52a0\u4e3a $w$\u3002\u5f3a\u5236\u5728\u7ebf\u3002\n\n## \u5206\u6790\n\u6211\u4eec\u9996\u5148\u60f3\u5230\uff0c\u5047\u5982\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u6570 $i$ \u5f80\u524d\u6700\u8fd1\u7684\u4f4d\u7f6e $j$ \u6ee1\u8db3 $a_i+a_j=w$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u533a\u95f4 $[l,r]$ \u5185\u662f\u5426\u5b58\u5728\u4e00\u4e2a $i$ \u5bf9\u5e94\u7684 $j$ \u6ee1\u8db3 $l\\le i,j \\le r$\uff0c\u5c31\u77e5\u9053\u8be2\u95ee\u7684\u7ed3\u679c\u4e86\u3002\n\n\u7ee7\u7eed\u8003\u8651\u67e5\u8be2\u3002\u679a\u4e3e $i$ \u663e\u7136\u6162\uff0c\u6211\u4eec\u53d1\u73b0\u53ea\u8981\u6700\u5927\u7684 $j$ \u6ee1\u8db3 $l\\le j$\uff0c\u5219\u7b54\u6848\u4e3a`Yes`\u3002\u6b64\u5904\u662f\u4e00\u4e2a\u5355\u4fee\u533a\u67e5\u7684\u7ebf\u6bb5\u6811\u3002\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u7ef4\u62a4 $j$\u3002\n\n\u5230\u8fd9\u6211\u5c31\u4e0d\u4f1a\u4e86\uff0c\u6240\u4ee5\u6211\u8003\u8651\u4e00\u4e2a\u66b4\u529b\u3002\u7531\u4e8e $w$ \u56fa\u5b9a\uff0c\u503c\u57df\u5c0f\uff0c\u60f3\u5230\u66b4\u529b\u4fee\u6539\u3002\u5f00\u503c\u57df\u4e2a`set`\u3002\u7b2c $i$ \u4e2a`set`\u5b58\u50a8\u6240\u6709\u503c\u4e3a $i$ \u7684\u6570\u7684\u4f4d\u7f6e\u3002\u6bcf\u6b21\u4fee\u6539\u64cd\u4f5c\uff0c\u66b4\u529b\u679a\u4e3e`set`\u4e2d\u7684\u6570\u5e76\u4fee\u6539\u3002\u6ce8\u610f\u4e00\u4e0b\u8d8a\u754c\u95ee\u9898\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm\\log n)$????\n\n\u7ef4\u62a4\u89c1\u4ee3\u7801\uff0c\u6ce8\u91ca\u5f88\u8be6\u7ec6\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<set>\n#include<queue>\n#define int long long\nusing namespace std;\nint n,m,a[1000001],mi[6000001],lmi[1000001]/*\u8868\u793a\u5f80\u524d\u6700\u8fd1\u7684\u4f4d\u7f6ej\uff0c\u4e0e\u7ebf\u6bb5\u6811\u540c\u6b65\u7684\u6570\u7ec4\uff0c\u51cf\u5c0f\u590d\u6742\u5ea6*/,ton[1000001],w,cnt;\nset<int> fun[1000001];\n//\u4ee5\u4e0b\u4e3a\u7ebf\u6bb5\u6811\nvoid add(int o,int l,int r,int x,int y)\n{\n\tif(l==r)\n\t{\n\t\tmi[o]=y;\n\t\treturn;\n\t}\n\tint mid=r+l>>1;\n\tif(x<=mid) add((o<<1),l,mid,x,y);\n\telse add((o<<1)+1,mid+1,r,x,y);\n\tmi[o]=max(mi[(o<<1)],mi[(o<<1)+1]);\n}\nint get(int o,int l,int r,int x,int y)\n{\n\tif(x>r || y<l) return 0;\n\tif(x<=l&&y>=r) return mi[o];\n\tint mid=l+r>>1;\n\treturn max(get(o<<1,l,mid,x,y),get((o<<1)+1,mid+1,r,x,y));\n}\n//\u4ee5\u4e0a\u4e3a\u7ebf\u6bb5\u6811\nsigned main()\n{\n\tscanf(\"%lld%lld%lld\",&n,&m,&w);\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t\tlmi[i]=ton[w-a[i]]; //\u7b2c\u4e00\u6b21\u5904\u7406\u7528\u6876\n\t\tton[a[i]]=i; //\u66f4\u65b0\u6876\n\t\tadd(1,1,n,i,lmi[i]); //\u66f4\u65b0\u7ebf\u6bb5\u6811\n\t\tfun[a[i]].insert(i); //\u66f4\u65b0set\n\t}\n\tfor(int i=1,opt,x,y; i<=m; i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&opt,&x,&y);\n\t\tif(opt==1)\n\t\t{\n\t\t\tset<int>::iterator iw=fun[a[x]].lower_bound(x); //\u5148\u627e\u5230\u4e0b\u4e00\u4e2a\u503c\u76f8\u7b49\u7684\n\t\t\tint fua;\n\t\t\tif(iw==fun[a[x]].begin()) fua=0; //\u627e\u4e0a\u4e00\u4e2a\n\t\t\telse\n\t\t\t{\n\t\t\t\tiw--;\n\t\t\t\tfua=*iw; //\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u8bb0\u5f55\n\t\t\t}\n\n\t\t\tiw=fun[w-a[x]].lower_bound(x) //\u679a\u4e3e\u6bcf\u4e2a\u5f53\u524d\u7b54\u6848\n\t\t\twhile(iw!=fun[w-a[x]].end()&&lmi[*iw]==x) //\u626bset\n\t\t\t{\n\t\t\t\tlmi[*iw]=fua; //\u66f4\u65b0\u4e3a\u524d\u4e00\u4e2a\u76f8\u540c\u503c\n\t\t\t\tadd(1,1,n,*iw,fua); //\u7ebf\u6bb5\u6811\u66f4\u65b0\n\t\t\t\tiw++; //\u6307\u9488\u5f80\u540e\n\t\t\t}\n\n\t\t\tfun[a[x]].erase(x); //set\u4e2d\u5220\u9664\n\t\t\ta[x]=y; //\u6570\u7ec4\u66f4\u65b0\n\t\t\tfun[a[x]].insert(x); //set\u63d2\u5165\n\t\t\tiw=fun[w-a[x]].lower_bound(x); //\u626b\u63cf\u6bcf\u4e2a\u5f71\u54cd\u7684set\n\t\t\twhile(iw!=fun[w-a[x]].end()&&lmi[*iw]<x) //\u626bset\n\t\t\t{\n\t\t\t\tlmi[*iw]=x; //\u66f4\u65b0\u6570\u7ec4\n\t\t\t\tadd(1,1,n,*iw,x); //\u66f4\u65b0\u7ebf\u6bb5\u6811\n\t\t\t\tiw++; //\u6307\u9488\u5f80\u540e\n\t\t\t}\n\t\t\t\n\t\t\tiw=fun[w-a[x]].lower_bound(x); //\u66f4\u65b0\u5f53\u524d\u7684\u524d\u4e00\u4e2a\n\t\t\tif(iw==fun[w-a[x]].begin()) lmi[x]=0; //\u5f80\u524d\u66f4\u65b0\n\t\t\telse\n\t\t\t{\n\t\t\t\tiw--;\n\t\t\t\tlmi[x]=*iw;\n\t\t\t}\n\t\t\tadd(1,1,n,x,lmi[x]); //\u7ebf\u6bb5\u6811\u66f4\u65b0\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx^=cnt;\n\t\t\ty^=cnt;\n\t\t\tif(get(1,1,n,x,y)<x) //\u5982\u679c\u5b58\u5728\n\t\t\t{\n\t\t\t\tprintf(\"No\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcnt++;\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1672921919,
        "uid": 477954,
        "name": "lizhous",
        "ccfLevel": 0,
        "title": "P6617 \u67e5\u627e Search\u9898\u89e3"
    },
    {
        "content": "\u611f\u89c9\u662f\u5206\u7c7b\u8ba8\u8bba\u9898\uff0c\u53ef\u80fd\u4ee3\u7801\u5199\u7e41\u4e86\u3002  \n### \u9898\u610f  \n\u5f3a\u5236\u5728\u7ebf\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u662f\u5426\u5b58\u5728\u4e24\u6570\u4e4b\u548c\u7b49\u4e8e $w$ \uff08\u5168\u5c40\u56fa\u5b9a\uff09\u3002  \n\n$1 \\leq n, q, w \\leq 10^5, 0 \\leq a_i \\leq w$ \u3002  \n### \u9898\u89e3\n\n\u82e5\u4e0d\u5e26\u4fee\uff0c\u533a\u95f4\u7ef4\u62a4\u524d\u4e00\u4e2a\u548c\u5f53\u524d\u6570\u76f8\u7b49\u7684\u6570\u503c\uff0c\u533a\u95f4 $\\max$ \u548c $l$ \u6bd4\u8f83\u5373\u53ef\u3002\n\n\u5e26\u4fee\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u662f\u56f0\u96be\u7684\uff0c\u4f46\u662f\u6211\u4eec\u56de\u7b54\u7684\u662f\u5224\u5b9a\u6027\u7684\u95ee\u9898\u3002 \n\n\u5bf9\u4e8e\u4ee5\u67d0\u4e2a\u6570\u503c\u4e3a\u524d\u9a71\u7684\u4e24\u4e2a\u6570\uff0c\u663e\u7136\u5305\u542b\u9760\u540e\u4e00\u8005\u7684\u533a\u95f4\u4e5f\u4e00\u5b9a\u5305\u542b\u524d\u8005\u8005\uff0c\u56e0\u800c\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u8fd9\u6837\u7684\u70b9\u5bf9\u662f\u5426\u5b58\u5728\uff1a\u4e00\u4e2a\u6570\u4e0e\u524d\u9762\u6700\u8fd1\u7684\u6570\u4e4b\u548c\u4e3a $w$ \uff0c\u4e14\u4e8c\u8005\u4e4b\u95f4\u4e0d\u5305\u542b\u4e0e\u8fd9\u4e2a\u6570\u5b57\u76f8\u7b49\u7684\u6570\u503c\u3002  \n\n\u8fd9\u4e2a\u4e1c\u897f\u7684\u7ef4\u62a4\u662f\u7b80\u5355\u7684\uff0c\u8003\u8651\u4e00\u4e2a\u6570\u503c\u5220\u53bb\u7684\u5f71\u54cd\uff0c\u5148\u770b\u5b83\u662f\u5426\u6321\u4f4f\u4e86\u540e\u9762\u7684\u6570\u503c\uff0c\u518d\u770b\u662f\u5426\u5b58\u5728\u4ee5\u5b83\u4e3a\u524d\u9762\u4e00\u4e2a\u70b9\u7684\u70b9\u5bf9\u3002\u63d2\u5165\u4e00\u4e2a\u6570\u503c\u7684\u5f71\u54cd\u662f\u8003\u8651\u5b83\u662f\u5426\u4f1a\u6321\u4f4f\u5176\u5b83\u6570\uff0c\u4ee5\u53ca\u5b83\u662f\u5426\u4e0e\u5176\u5b83\u6570\u6784\u6210\u70b9\u5bf9\u3002  \n\n$2x = w$ \u7684\u60c5\u51b5\u7528\u4e0a\u8ff0\u65b9\u6cd5\u5904\u7406\u4e5f\u4e0d\u4f1a\u51fa\u95ee\u9898\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u7279\u5224\u4e4b\u540e\u7528\u4e00\u6761\u94fe\u7279\u6b8a\u5904\u7406\u3002  \n\n### \u4ee3\u7801(\u5199\u7684\u597d\u4e11)\n```cpp\n#include <bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);++i)\n#define itra set<int>::iterator\n\nusing namespace std;\n\nconst int maxn = 5e5 + 10, inf = 0x3f3f3f3f;\nset<int> s[maxn];\nint a[maxn], b[maxn];\n\nstruct segTree {\n    int mx[maxn << 2];\n    void update(int p) { mx[p] = max(mx[p<<1], mx[p<<1|1]); }\n    void build(int p, int lp, int rp) {\n        if(lp == rp) { mx[p] = b[lp]; return; }\n        int mid = (lp + rp) >> 1;\n        build(p<<1, lp, mid); build(p<<1|1, mid + 1, rp);\n        update(p);\n    }\n    void modify(int p, int lp, int rp, int x, int v) {\n        if(lp == rp) { mx[p] = v; return; }\n        int mid = (lp + rp) >> 1;\n        if(x <= mid) modify(p<<1, lp, mid, x, v);\n        if(x > mid) modify(p<<1|1, mid+1, rp, x, v);\n        update(p);\n    }\n    int qry(int p, int lp, int rp, int l, int r) {\n        if(l <= lp && rp <= r) return mx[p];\n        int mid = (lp + rp) >> 1, ans = -inf;\n        if(l <= mid) ans = qry(p<<1, lp, mid, l, r);\n        if(r > mid) ans = max(ans, qry(p<<1|1, mid + 1, rp, l, r));\n        return ans;\n    }\n} stre;\n\nint main() {\n\n    if(fopen(\"yl.in\", \"r\")) {\n        freopen(\"yl.in\", \"r\", stdin);\n        freopen(\"yl.out\", \"w\", stdout);\n    }\n\n    int n, m, w, opt, x, y;\n    scanf(\"%d %d %d\", &n, &m, &w);\n    rep(i,0,w) s[i].insert(0), s[i].insert(n + 1);\n    rep(i,1,n) {\n        scanf(\"%d\", a + i);\n        if(a[i] * 2 == w) {\n            itra it = s[a[i]].lower_bound(i);\n            -- it; b[i] = *it;\n        } else {\n            itra it = s[w - a[i]].lower_bound(i);\n            -- it;\n            itra pre = s[a[i]].upper_bound(i);\n            -- pre;\n            b[i] = *it < *pre ? 0 : *it;\n        }\n        stre.modify(1, 0, n + 1, i, b[i]);\n        s[a[i]].insert(i);\n    }\n    stre.build(1, 0, n + 1);\n    int cnt = 0;\n    rep(qr,1,m) {\n        scanf(\"%d %d %d\", &opt, &x, &y);\n        if(opt == 1) {\n            if(a[x] == y) continue;\n            s[a[x]].erase(s[a[x]].find(x));\n            itra nexw = s[w - a[x]].lower_bound(x);\n            itra prew = nexw; -- prew;\n            itra nexx = s[a[x]].lower_bound(x);\n            itra prex = nexx; -- prex;\n            if(b[*nexw] == x) {\n                b[*nexw] = *prew < *prex ? *prex : 0;\n                stre.modify(1, 0, n + 1, *nexw, b[*nexw]);\n            }\n            if(*nexx < *nexw && b[x] != 0 && b[x] != n + 1) {\n                b[*nexx] = *prew;\n                stre.modify(1, 0, n + 1, *nexx, b[*nexx]);\n            }\n            nexw = s[w - y].upper_bound(x);\n            prew = nexw; -- prew;\n            itra nexy = s[y].upper_bound(x);\n            itra prey = nexy; -- prey;\n            b[x] = *prew > *prey ? *prew : 0;\n            stre.modify(1, 0, n + 1, x, b[x]);\n            if(*nexy > *nexw) {\n                b[*nexw] = x; stre.modify(1, 0, n + 1, *nexw, x);\n            } else {\n                b[*nexy] = 0; stre.modify(1, 0, n + 1, *nexy, 0);\n            }\n            s[y].insert(x);\n            a[x] = y;\n        } else {\n            x ^= cnt; y ^= cnt;\n            if(stre.qry(1, 0, n + 1, x, y) >= x) ++ cnt, puts(\"Yes\");\n            else puts(\"No\");\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1640158584,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u533a\u95f4\u5224\u65ad\u5b58\u5728\u4e24\u6570\u548c\u4e3aw"
    },
    {
        "content": "### \u9898\u76ee\u5206\u6790\uff1a\n\n\u6211\u4eec\u8bb0\u524d\u9a71\u4e3a\u6743\u503c $x$ \u8ddd\u79bb $w-x$ \u6700\u8fd1\u7684\u70b9\uff08\u5728\u539f\u5e8f\u5217 $a_i$ \u4e0a\u65f6 $w-x$ \u5e94\u8be5\u5728 $x$ \u7684\u524d\u9762\uff09\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u5f00\u503c\u57df\u4e2a `set` \u8bb0\u5f55\u6bcf\u4e2a\u6743\u503c\u51fa\u73b0\u8fc7\u7684\u4f4d\u7f6e\uff0c\u524d\u9a71\u53ea\u8981\u5728\u4e0a\u9762\u4e8c\u5206\u5c31\u884c\u3002\n\n\u6709\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5bf9\u4e8e $[x_1,y_1]\\in[x_2,y_2]$\uff0c\u5e76\u4e14 $a_{x_1}+a_{y_1}=a_{x_2}+a_{y_2}=w$\uff0c\u90a3\u4e48 $[x_2,y_2]$ \u662f\u65e0\u610f\u4e49\u7684\u3002\u4f60\u8981\u60f3\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b58\u5728\u6027\u95ee\u9898\u3002\u5982\u679c $(x_1,y_1)$ \u6ee1\u8db3\u4e86$a_{x_1}+a_{y_1}$\uff0c\u90a3\u4e48\u533a\u95f4 $[x_2,y_2]$ \u4e5f\u80af\u5b9a\u5b58\u5728\u8fd9\u5bf9\u6570\u3002\n\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u8be2\u95ee\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u524d\u9a71\u6240\u5728\u7684\u4f4d\u7f6e\u7684\u6700\u5927\u503c\u662f\u5426\u4e0d\u5c0f\u4e8e $l$ \u5373\u53ef\u3002\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u663e\u7136\uff0c\u66b4\u529b\u4fee\u6539\u4f1a\u6539\u52a8 $n$ \u4e2a\u6570\u636e\u3002\u4f46\u662f\u7ec6\u7ec6\u5f97\u60f3\u4e00\u60f3\uff0c\u524d\u9a71\u4e3a\u8be5\u6570\u7684\u6570\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u3002\u6240\u4ee5\u5728\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u7528\u4fee\u6539\u5f53\u524d\u6570\u7684\u524d\u9a71\uff0c\u4e3a\u4ee5\u8be5\u6570\u4e3a\u524d\u9a71\u7684\u6570\u7684\u524d\u9a71\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log n)$\u3002\n\n### \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=5e5+10;\n#define pd(x) push_back(x)\n#define rz(x,y) x.resize(y)\n#define all(x) x.begin(),x.end()\n#define First(x) (*x.begin())\n#define End(x) (*x.end())\n#define Avail(x,y) (x.find(y)==x.end())\n//==============================================================================\nll QP(ll x,ll y,ll mod){ll ans=1;for(;y;y>>=1,x=x*x%mod)if(y&1)ans=ans*x%mod;return ans;}\n//==============================================================================\nnamespace IO{\n\tint readInt(){\n\t\tint x=0,y=0;char c=0;\n\t\twhile(!isdigit(c))y|=c=='-',c=getchar();\n\t\twhile(isdigit(c))x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\treturn !y?x:-x;\n\t}ll readLL(){\n\t\tll x=0,y=0;char c=0;\n\t\twhile(!isdigit(c))y|=c=='-',c=getchar();\n\t\twhile(isdigit(c))x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\treturn !y?x:-x;\n\t}void GStr(char *c,bool Ban_Space=true){\n\t\tc[0]=0;int p=0;\n\t\twhile(c[p]!='\\n'&&(c[p]!=' '||Ban_Space))c[++p]=getchar();\n\t\tc[p]='\\0';\n\t}string Gstr(bool Ban_Space=true,int Pr_Space=1){\n\t\tstring s;char c=0;\n\t\tfor(int i=1;i<=Pr_Space;i++)s+=' ';\n\t\twhile(c!='\\n'&&(c!=' '||Ban_Space))c=getchar(),s+=c;s.pop_back();s+='\\0';\n\t\treturn s;\n\t}\n\tchar readChar(){\n\t\tchar c=' ';\n\t\twhile(c==' '&&c=='\\n')c=getchar();\n\t\treturn c;\n\t}void write(int x){\n\t\tif(!x)return;\n\t\twrite(x/10);\n\t\tputchar(x%10+'0');\n\t}void Output(int x){if(x<0)putchar('-'),x=-x;if(!x)putchar('0');else write(x);}\n\tvoid WL(int x){Output(x);putchar('\\n');}\n\tvoid WS(int x){Output(x);putchar(' ');}\n\tvoid Wc(char c){putchar(c);}\n\tvoid writell(ll x){\n\t\tif(!x)return;\n\t\twrite(x/10);\n\t\tputchar(x%10+'0');\n\t}void Outputll(ll x){if(x<0)putchar('-'),x=-x;if(!x)putchar('0');else writell(x);}\n\tvoid WLll(ll x){Outputll(x);putchar('\\n');}\n\tvoid WSll(ll x){Outputll(x);putchar(' ');}\n\tvoid Wstr(string s){for(int i=0;i<s.size();i++)Wc(s[i]);}\n\tvoid Wstr(char *s){int l=strlen(s);for(int i=0;i<l;i++)Wc(s[i]);}\n\t#define PS putchar(' ')\n\t#define Pn putchar('\\n');\n}\n//==============================================================================\nset<int> s[N];\nint n,m,w,a[N];\nint tr[N<<2];\nvoid pushup(int rt){tr[rt]=max(tr[rt<<1],tr[rt<<1|1]);}\nvoid change(int rt,int l,int r,int x,int y){\n\tif(l==r)return tr[rt]=y,void();\n\tint mid=l+r>>1;\n\tif(x<=mid)change(rt<<1,l,mid,x,y);\n\telse change(rt<<1|1,mid+1,r,x,y);\n\tpushup(rt);\n}int query(int rt,int l,int r,int x,int y){\n\tif(x<=l&&r<=y)return tr[rt];\n\tint mid=l+r>>1;int ans=0;\n\tif(x<=mid)ans=max(ans,query(rt<<1,l,mid,x,y));\n\tif(y>mid)ans=max(ans,query(rt<<1|1,mid+1,r,x,y));\n\treturn ans;\n}int Gpr(int x){\n\tauto p1=s[a[x]].lower_bound(x),p2=s[w-a[x]].lower_bound(x);\n\tif(p2==s[w-a[x]].begin())return 0;\n\tif(p1==s[a[x]].begin())return *--p2;\n\treturn *--p1>*--p2?0:*p2;\n}int cnt=0;\nvoid Pd(vector<int> &v,int x,int y){\n\tauto p=s[x].upper_bound(y);\n\tif(p!=s[x].end())v.pd(*p);\n}\nint main(){\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tscanf(\"%d%d%d\",&n,&m,&w);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;i++){\n\t\tchange(1,1,n,i,Gpr(i));\n\t\ts[a[i]].insert(i);\n\t}\n\tint lat=0;\n\twhile(m--){\n\t\tint opt,x,y;scanf(\"%d%d%d\",&opt,&x,&y);\n\t\tif(opt==1){\n\t\t\tvector<int> v;\n\t\t\tPd(v,a[x],x);Pd(v,w-a[x],x);\n\t\t\ts[a[x]].erase(x);a[x]=y;\n\t\t\ts[a[x]].insert(x);v.pd(x);\n\t\t\tPd(v,a[x],x);Pd(v,w-a[x],x);\n\t\t\tfor(auto p:v)change(1,1,n,p,Gpr(p));\n\t\t}else{\n\t\t\tx^=lat,y^=lat;\n\t\t\tif(query(1,1,n,x,y)>=x)puts(\"Yes\"),lat++;\n\t\t\telse puts(\"No\");\n\t\t}\n\t}return 0;\n}\n```\n",
        "postTime": 1681968888,
        "uid": 511271,
        "name": "\u30c0\u6708",
        "ccfLevel": 5,
        "title": "\u67e5\u627e Search"
    },
    {
        "content": "\u9996\u5148\u5f88\u81ea\u7136\u7684\u601d\u8def\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u7ef4\u62a4\u5b83\u6700\u8fd1\u7684\uff0c\u4e0e\u5176\u548c\u4e3a $ w $ \u7684\u524d\u9a71\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u67e5\u8be2\u533a\u95f4 $ l,r $ \u6765\u8bf4\uff0c\u53ea\u8981\u533a\u95f4\u5185\u5b58\u5728\u4e00\u4e2a\u6570\u7684\u524d\u9a71 $ \\ge $ $ l $ \u5373\u53ef\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u4f46\u6709\u4e2a\u95ee\u9898\u5c31\u662f\uff0c\u5982\u679c\u4fee\u6539\u4e86\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u524d\u9a71\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u53ef\u80fd\u8fbe\u5230 $ n $ \u7ea7\u522b\uff0c\u76f4\u63a5\u7206\u70b8\u3002\n\n\u6240\u4ee5\u4fee\u6539\u524d\u9a71\u5b9a\u4e49\uff1a\n\n\u4ee4\u5f53\u524d\u4f4d\u7f6e\u4e3a $ pos $ \uff0c\u524d\u9a71\u4e3a $ pre $ \u3002\n\n\u6ee1\u8db3  $ a_{pos}+a_{pre}=w $ \u4e14 $ (pre,pos) $ \u4e4b\u95f4\u4e0d\u5b58\u5728\u4e0e  $ a_{pos} $ \u548c $ a_{pre} $ \u76f8\u7b49\u3002\n\n\u8fdb\u4e00\u6b65\u7684\u8bf4\uff1a\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u8fd9\u79cd\u5173\u7cfb\u4e3a **\u53cc\u5411** \u7684\uff0c\u4e24\u4e24\u5339\u914d\u5728\u67d0\u4e00\u65f6\u523b\u662f\u4e00\u5b9a\u7684\uff0c\u800c\u82e5\u67d0\u4e2a\u4f4d\u7f6e\u6ca1\u6709\u88ab\u5339\u914d\u7684\u8bdd\uff0c\u4e00\u5b9a\u4e5f\u4e0d\u4f1a\u88ab\u7b54\u6848\u9009\u5230\uff0c\u90a3\u4e48\u8d4b\u503c\u4e3a $ 0 $ \u5373\u53ef\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u7ec6\u8bf4\u5982\u4f55\u8003\u8651\u4fee\u6539\u5bf9\u8fd9\u4e9b\u53cc\u5411\u5173\u7cfb\u7684\u5f71\u54cd\uff1a\n\n\u5047\u8bbe $ a_{pos} =val $ \uff0c\u8bbe\u539f  $ a_{pos} =x$ \u3002\n\n### 1. $ a_{pos} $ \u7684\u539f\u540e\u7ee7\n\n\u5373\u5728 $ pos $ \u4e4b\u540e\uff0c\u4e0b\u4e00\u4e2a\u51fa\u73b0\u7684 $ a_{pos} $ \u7684\u4f4d\u7f6e\u3002\n\n\n\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\uff1a$ w-x....x....x $ \n\n\u5bf9\u4e8e\u4e2d\u95f4\u8fd9\u4e2a $ x $ \u5220\u6389\u4e4b\u540e\uff0c\u539f\u540e\u7ee7\u53ef\u80fd\u53c8\u6709\u673a\u4f1a\u91cd\u65b0\u8fdb\u884c\u4e00\u6b21\u5339\u914d\u3002\n\n### 2.$ a_{pos} $ \u7684\u65b0\u5b9a\u4e49\u540e\u7ee7\n\n\u6839\u636e\u524d\u9762\u5b9a\u4e49\uff0c\u5176\u65b0\u540e\u7ee7\u503c\u4e3a $ w-x $ \u3002\n\n\u5bf9\u4e8e\u4e2d\u95f4\u7684 $ x $ \u88ab\u4fee\u6539\u4e86\uff0c\u53ef\u80fd\u51fa\u73b0\u51e0\u79cd\u60c5\u51b5\uff1a\n\n##### (1) \u4e00\u5f00\u59cb $ w-x $ \u672a\u4e0e $ x $ \u4e0d\u5177\u5907\u53cc\u5411\u5173\u7cfb\n\n\u5373  $ x $ \u5230 $ w-x $ \u4e4b\u95f4\u8fd8\u5b58\u5728 $ x $ \uff0c$ x $ \u627e\u5230\u7684 $ w-x $ \u4ec5\u4ec5\u662f\u5355\u5411\u7684\uff0c\u800c $ w-x $ \u7684\u524d\u9a71\u5e76\u4e0d\u662f $ pos $ \uff0c\u518d\u8fdb\u884c\u4e00\u6b21\u5339\u914d\u4e5f\u4e0d\u5f71\u54cd\u3002\n\n##### (2) \u4e00\u5f00\u59cb $ w-x $ \u672a\u4e0e $ x $ \u5177\u5907\u53cc\u5411\u5173\u7cfb\n\n\u90a3\u4e48\u91cd\u65b0\u8fdb\u884c\u4e00\u6b21\u5339\u914d\u5373\u53ef\u3002\n\n### 3. \u88ab\u4fee\u6539\u540e\u7684 $ a_{pos} $\n\n\u5373\u81ea\u5df1\u88ab\u4fee\u6539\u4e86\uff0c\u5f53\u7136\u8fd9\u4e2a\u4f4d\u7f6e\u524d\u9a71\u4e5f\u88ab\u4fee\u6539\u3002\n\n\u5177\u4f53\u60c5\u51b5\u7c7b\u4f3c $ 2 $ \uff0c\u76f4\u63a5\u5339\u914d\u3002\n\n\u5982\u4f55\u5339\u914d\u540e\u9762\u4f1a\u63d0\u5230\u3002\n\n### 4.  \u88ab\u4fee\u6539\u540e\u7684 $ a_{pos} $ \u7684\u539f\u540e\u7ee7 \n\n\u56e0\u4e3a\u53ef\u80fd\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff1a\n\n$  ....w-val......val(pos).....val $\n\n\u90a3\u4e48\u65b0\u5192\u51fa\u6765\u7684 $ pos $ \u4f1a\u62a2\u6389\u539f\u540e\u7ee7\u7684\u5339\u914d\uff0c\u6240\u4ee5\u8981\u4fee\u6539\u3002\n\n### 5.  \u88ab\u4fee\u6539\u540e\u7684 $ a_{pos} $ \u7684\u65b0\u5b9a\u4e49\u540e\u7ee7\n\n\u5982\u60c5\u51b5 $ 2 $ \u3002\n\n\u5c31\u53ea\u6709\u8fd9 $ 5 $ \u60c5\u51b5\uff0c\u5bb9\u6613\u6f0f\u7684\u5c31\u662f $ 1 ,4 $\n\n\u7136\u540e\u5c31\u662f\u5339\u914d\u8fc7\u7a0b\uff1a\n\n```cpp\nvoid match(int pos,int posl){\n    \n    int v=a[pos];\n    int pre=get_pre(w-a[pos],pos);\n    if(pre==-1||(pre<posl&&posl!=-1)) {\n        t.change(1,1,n,pos,0);\n        return ;\n    }\n    int nxt=get_nxt(a[pos],pre);\n    if(nxt<pos&&nxt!=-1){\n        t.change(1,1,n,pos,0);\n        return ;\n    }\n    t.change(1,1,n,pos,pre);\n}\n```\n\n\n$ posl $ \u5373 $ a_{pos} $ \u8fd9\u4e2a\u6570\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u663e\u7136\u4e0d\u80fd\u8d8a\u8fc7\u4e0e\u81ea\u5df1\u76f8\u540c\u7684\u6570\u3002\n\n$ pre $ \u5373\u65b0\u5b9a\u4e49\u524d\u9a71\u7684\u4f4d\u7f6e\u3002\n\n\u5982\u679c\u6ca1\u6709\u524d\u9a71\uff0c\u6216\u8005 $ (pre,pos) $ \u4e4b\u95f4\u5b58\u5728 $ a_{pos} $\uff0c\u90a3\u4e48\u4e5f\u663e\u7136\u6784\u6210\u4e0d\u4e86\u53cc\u5411\u5173\u7cfb\u3002\n\n\u63a5\u7740\u5224\u65ad $ pre $ \u662f\u5426\u4e0e $ pos $ \u5f62\u6210\u5bf9\u5e94\u5173\u7cfb\uff0c\u5219\u627e\u79bb $ pre $ \u7684\u540e\u7ee7\u662f\u5426\u4e3a $ pos $ \u3002\uff08\u4f46\u5176\u5b9e\u53ef\u52a0\u53ef\u4e0d\u52a0\uff09\n\n\u5982\u679c\u6784\u6210\u5173\u7cfb\uff0c\u5c31\u76f4\u63a5\u5728\u7ebf\u6bb5\u6570\u4e0a\u5355\u70b9\u4fee\u6539\u524d\u9a71\u5373\u53ef\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nusing namespace std;\nconst int N=1e6+5;\nint n,m,w;\nint a[N];\nmap<int,int> id;\nint idx=0;\nset<int> s[N];\nint yes=0;\nstruct Seg{\n    int maxx[N<<4];\n    void pushup(int p){\n        maxx[p]=max(maxx[p*2],maxx[p*2+1]);\n    }\n    void change(int p,int l,int r,int pos,int val){\n        if(l==r){\n            maxx[p]=val;\n            return ;\n        }\n        int mid=(l+r)>>1;\n        if(pos<=mid) change(p*2,l,mid,pos,val);\n        else change(p*2+1,mid+1,r,pos,val);\n        pushup(p);\n    }\n    int query(int p,int l,int r,int x,int y){\n        if(x<=l&&r<=y){\n            return maxx[p];\n        }\n        int mid=(l+r)>>1,res=0;\n        if(x<=mid) res=max(res,query(p*2,l,mid,x,y));\n        if(y>mid) res=max(res,query(p*2+1,mid+1,r,x,y));\n        return res;\n    }\n}t;\nint get_pre(int val,int pos){\n    if(id[val]==0) return -1;\n    auto it=s[id[val]].lower_bound(pos);\n    if(it==s[id[val]].begin()) return -1;\n    it--;\n    return (*it);\n}\nint get_nxt(int val,int pos){\n    if(id[val]==0) return -1;\n    auto it=s[id[val]].upper_bound(pos);\n    if(it==s[id[val]].end()) return -1;\n    return (*it);\n}\nvoid match(int pos,int posl){\n    int v=a[pos];\n    int pre=get_pre(w-a[pos],pos);\n    if(pre==-1||(pre<posl&&posl!=-1)) {\n        t.change(1,1,n,pos,0);\n        return ;\n    }\n    int nxt=get_nxt(a[pos],pre);\n    if(nxt<pos&&nxt!=-1){\n        t.change(1,1,n,pos,0);\n        return ;\n    }\n    t.change(1,1,n,pos,pre);\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&w);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n        if(id[a[i]]==0){\n            id[a[i]]=++idx;\n        }\n        match(i,get_pre(a[i],i));\n        s[id[a[i]]].insert(i);\n    }\n    int dp=0;\n    while(m--){\n        int op,pos,val;\n        int l,r;\n        scanf(\"%d\",&op);\n        if(op==1){\n            scanf(\"%d%d\",&pos,&val);\n            vector<int> v;\n            v.clear();\n            v.push_back(get_nxt(w-a[pos],pos));\n            v.push_back(get_nxt(a[pos],pos));\n            s[id[a[pos]]].erase(pos);\n            a[pos]=val;\n            if(id[a[pos]]==0)\n                id[a[pos]]=++idx;\n            s[id[a[pos]]].insert(pos);\n            v.push_back(pos);\n            v.push_back(get_nxt(w-a[pos],pos));\n            v.push_back(get_nxt(a[pos],pos));\n            match(v[0],get_pre(a[v[0]],v[0]));\n            match(v[1],get_pre(a[v[1]],v[1]));\n            match(v[2],get_pre(a[v[2]],v[2]));\n            match(v[3],get_pre(a[v[3]],v[3]));\n            match(v[4],get_pre(a[v[4]],v[4]));\n        }else{\n            scanf(\"%d%d\",&l,&r);\n            l^=yes,r^=yes;\n            if(t.query(1,1,n,l,r)>=l){\n                puts(\"Yes\");\n                yes++;\n            }else{\n                puts(\"No\");\n            }\n        }\n    }\n    return 0;\n}\n\n/*\n6 4 6\n1 3 2 5 5 6\n2 1 4\n1 4 1\n2 0 5\n2 3 7\n\n10 100000 10\n1 2 3 4 5 6 7 8 9 0\n1 6 2\n1 4 8\n1 5 2\n1 5 8\n2 4 5\n1 4 2\n1 3 8\n1 7 2\n1 6 8\n1 5 5\n1 5 2\n1 5 8\n1 4 5\n2 4 6\n*/\n\n```\n",
        "postTime": 1662520454,
        "uid": 216213,
        "name": "syk666",
        "ccfLevel": 7,
        "title": "P6617 \u67e5\u627e Search \u9898\u89e3"
    },
    {
        "content": "\u8349\uff0c\u4e00\u9053\u6570\u636e\u7ed3\u6784\u9898\u8c03\u4e86\u4e00\u6574\u665a\uff0c\u628a\u6211\u5fc3\u6001\u641e\u5d29\u4e86\u3002\u3002\u3002\n\n\u8fd9\u91cc\u663e\u7136\u6709\u4e00\u4e2a\u7ed3\u8bba\uff0c\u8bbe $lst_i$ \u4e3a $a_i$ \u5de6\u8fb9\u7684\u5143\u7d20\u4e2d\u548c $w-a_i$ \u76f8\u540c\u7684\u4e0b\u6807\u6700\u5927\u503c\uff0c\u90a3\u4e48\u533a\u95f4 $[l,r]$ \u6ee1\u8db3\u6761\u4ef6\u5f53\u4e14\u4ec5\u5f53 $\\max\\{lst_{l,l+1,\u2026\u2026,r}\\}\\ge l$\uff0c\u8fd9\u4e2a\u5c31\u8bf4\u660e\u5b58\u5728\u4e00\u4e2a $i$ \u4f7f\u5f97 $w-a_i$ \u5728 $[l,r]$ \u5185\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u9690\u542b\u6761\u4ef6\u5c31\u662f $lst_i\\le i$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u6ee1\u8db3\u6761\u4ef6\u7684\u533a\u95f4\u6539\u6210 $\\max\\{lst_{1,2,\u2026\u2026,r}\\}\\ge l$\uff0c\u63a5\u4e0b\u6765\u4f1a\u7528\u5230\u8fd9\u4e2a\u6761\u4ef6\u3002\n\n\u90a3\u4e48\u663e\u7136\u9700\u8981\u7528 set \u7ef4\u62a4\u524d\u9a71\uff0c\u5e76\u628a\u6240\u6709\u76f8\u540c\u7684\u6570\u7684\u4e0b\u6807\u653e\u8fdb\u4e00\u4e2a set \u91cc\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u524d\u7f00\u524d\u9a71 $\\max$\u3002\n\n\u4f46\u662f\u8fd9\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4e00\u65e6\u4e00\u4e2a\u6570\u88ab\u4fee\u6539\uff0c\u4f1a\u6709\u5f88\u591a\u4e2a\u6570\u7684\u524d\u9a71\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u6bd5\u7adf\u524d\u9a71\u53ef\u4ee5\u5728\u522b\u7684 set \u91cc\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u4f1a\u6ca6\u4e3a $O(n^2\\log n)$ \u7684\u66b4\u529b\u3002\n\n\u4f46\u662f\u6ca1\u6709\u5173\u7cfb\uff0c\u5982\u679c\u6709\u591a\u4e2a\u4e0b\u6807\u524d\u9a71\u76f8\u540c\uff0c\u6211\u4eec\u53ea\u53d6\u8fd9\u6700\u5c0f\u7684\u4e0b\u6807\uff0c\u5176\u5b83\u7684\u5168\u90e8\u8bbe\u6210 $0$\uff0c\u8fd9\u6837\u7684\u8bdd\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u56e0\u4e3a\u662f**\u524d\u7f00\u67e5\u8be2**\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u4e00\u65e6\u4e0b\u6807 $i$ \u88ab\u4fee\u6539\uff0c\u6700\u591a\u4f1a\u5bf9 $5$ \u4e2a\u4e0b\u6807\u7684\u524d\u9a71\u9020\u6210\u5f71\u54cd\uff1a$i$ \u672c\u8eab\uff0c\u4e0b\u6807\u5927\u4e8e $i$ \u4e14\u5143\u7d20\u4e3a $a_i$ \u7684\u6700\u5c0f\u4e0b\u6807\uff0c\u4e0b\u6807\u5927\u4e8e $i$ \u4e14\u5143\u7d20\u4e3a $w-a_i$ \u7684\u6700\u5c0f\u4e0b\u6807\uff0c\u4e0b\u6807\u5927\u4e8e $i$ \u4e14\u5143\u7d20\u4e3a $now$ \u7684\u6700\u5c0f\u4e0b\u6807\uff0c\u4e0b\u6807\u5927\u4e8e $i$ \u4e14\u5143\u7d20\u4e3a $w-now$ \u7684\u6700\u5c0f\u4e0b\u6807\uff0c$now$ \u4e3a\u4fee\u6539\u540e\u7684\u6570\u3002\n\n\u7b2c\u4e00\u4e2a\u4e0d\u7528\u89e3\u91ca\uff0c\u9700\u8981\u89e3\u91ca\u7684\u662f\u540e\u56db\u4e2a\u3002\n\n\u5176\u5b9e\u540e\u56db\u4e2a\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\u5373\u53ef\uff0c\u867d\u7136\u53f3\u9762\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u4e0e\u8fd9\u4e2a\u5143\u7d20\u76f8\u540c\u7684\u5143\u7d20\uff0c\u4f46\u662f\u65e0\u8bba\u4e0b\u6807 $i$ \u4fee\u6539\u6210\u5565\u6837\uff0c\u6700\u7ec8\u90fd\u4f1a\u5148\u88ab\u8fd9\u4e2a\u5143\u7d20\u5360\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u6709\u8fd9\u4e2a\u5143\u7d20\u5728\uff0c\u53f3\u8fb9\u7684\u6240\u6709\u4e0e\u4e4b\u76f8\u7b49\u7684\u5143\u7d20\u90fd\u6ca1\u6709\u53ef\u4e58\u4e4b\u673a\uff0c\u6240\u4ee5\u81ea\u7136\u4e5f\u5c31\u53ea\u9700\u8981\u8003\u8651\u8fd9\u4e2a\u5143\u7d20\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log n)$\u3002\n# AC code\uff1a\n```\nset<int> s[500005];\nint a[500005],lst[500005],tot,maxl[1000005],ls[1000005],rs[1000005];\nvoid build(int &x,int l,int r){\n\tx=++tot;if(l==r){maxl[x]=lst[l];return ;}\n\tint mid=l+r>>1;\n\tbuild(ls[x],l,mid),build(rs[x],mid+1,r);\n\tmaxl[x]=max(maxl[ls[x]],maxl[rs[x]]);\n}\nvoid modify(int x,int l,int r,int pos){\n\tif(l==r){maxl[x]=lst[l];return ;}\n\tint mid=l+r>>1;\n\tif(pos<=mid) modify(ls[x],l,mid,pos);else modify(rs[x],mid+1,r,pos);\n\tmaxl[x]=max(maxl[ls[x]],maxl[rs[x]]);\n}\nint query(int x,int l,int r,int l1,int r1){\n\tif(l<=l1&&r1<=r) return maxl[x];\n\tint mid=l1+r1>>1,res=0;\n\tif(l<=mid) res=query(ls[x],l,r,l1,mid);if(mid<r) res=max(res,query(rs[x],l,r,mid+1,r1));\n\treturn res;\n}\nbool yes[500005];\nint main(){\n\tint n=read(n),m=read(m),w=read(w),rt,cnt=0,i;\n\tfor(i=1;i<=n;i++){read(a[i]);\n\t\tif(w-a[i]>=0&&!s[w-a[i]].empty()){int tmp=*--s[w-a[i]].end();if(!yes[tmp]) lst[i]=tmp,yes[tmp]=1;}\n\t\ts[a[i]].insert(i);\n\t}\n\tbuild(rt,1,n);\n\twhile(m--){\n\t\tint op=read(op),x=read(x),y=read(y);\n\t\tif(op==1){\n\t\t\ts[a[x]].erase(x);\n\t\t\tyes[lst[x]]=0,lst[x]=0;\n\t\t\tif(!s[a[x]].empty()){\n\t\t\t\tauto r=s[a[x]].ub(x);\n\t\t\t\tif(r!=s[a[x]].end()){\n\t\t\t\t\tyes[lst[*r]]=0,lst[*r]=0;\n\t\t\t\t\tif(w>=a[x]&&!s[w-a[x]].empty()){\n\t\t\t\t\t\tauto it=s[w-a[x]].lb(*r);\n\t\t\t\t\t\tif(it--!=s[w-a[x]].begin()&&!yes[*it]) yes[lst[*r]=*it]=1;\n\t\t\t\t\t}\n\t\t\t\t\tmodify(1,1,n,*r);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(w>=a[x]&&!s[w-a[x]].empty()){\n\t\t\t\tauto r=s[w-a[x]].ub(x);\n\t\t\t\tif(r!=s[w-a[x]].end()){\n\t\t\t\t\tyes[lst[*r]]=0,lst[*r]=0;\n\t\t\t\t\tif(!s[a[x]].empty()){\n\t\t\t\t\t\tauto it=s[a[x]].lb(*r);\n\t\t\t\t\t\tif(it--!=s[a[x]].begin()&&!yes[*it]) yes[lst[*r]=*it]=1;\n\t\t\t\t\t}\n\t\t\t\t\tmodify(1,1,n,*r);\n\t\t\t\t}\n\t\t\t}\n\t\t\ta[x]=y,s[a[x]].insert(x);\n\t\t\tif(!s[a[x]].empty()){\n\t\t\t\tauto r=s[a[x]].ub(x);\n\t\t\t\tif(r!=s[a[x]].end()) yes[lst[*r]]=0,lst[*r]=0;\n\t\t\t}\n\t\t\tif(w>=a[x]&&!s[w-a[x]].empty()){\n\t\t\t\tauto r=s[w-a[x]].ub(x);\n\t\t\t\tif(r!=s[w-a[x]].end()) yes[lst[*r]]=0,lst[*r]=0;\n\t\t\t\tauto l=s[w-a[x]].lb(x);\n\t\t\t\tif(l--!=s[w-a[x]].begin()&&!yes[*l]) yes[lst[x]=*l]=1;\n\t\t\t\tif(r!=s[w-a[x]].end()){\n\t\t\t\t\tauto it=s[a[x]].lb(*r);\n\t\t\t\t\tif(it--!=s[a[x]].begin()&&!yes[*it]) yes[lst[*r]=*it]=1;\n\t\t\t\t\tmodify(1,1,n,*r);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!s[a[x]].empty()){\n\t\t\t\tauto r=s[a[x]].ub(x);\n\t\t\t\tif(r!=s[a[x]].end()){\n\t\t\t\t\tif(w>=a[x]&&!s[w-a[x]].empty()){\n\t\t\t\t\t\tauto it=s[w-a[x]].lb(*r);\n\t\t\t\t\t\tif(it--!=s[w-a[x]].begin()&&!yes[*it]) yes[lst[*r]=*it]=1;\n\t\t\t\t\t}\n\t\t\t\t\tmodify(1,1,n,*r);\n\t\t\t\t}\n\t\t\t}\n\t\t\ts[a[x]].insert(x),modify(1,1,n,x);\n\t\t}\n\t\telse{\n\t\t\tx^=cnt,y^=cnt;\n\t\t\tif(query(1,1,y,1,n)>=x) puts(\"Yes\"),cnt++;\n\t\t\telse puts(\"No\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1639060572,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6617"
    }
]