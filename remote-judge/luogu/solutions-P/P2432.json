[
    {
        "content": "## \u96f6. \u5b89\u5229\uff1a\n\n[\u5b89\u5229\u4e00\u4e0b\u6211\u7684\u535a\u5ba2\u3002](https://rsdbkhusky.github.io/)\n\n## \u4e00. \u5ba1\u9898\uff1a\n\n#### 1.\u5df2\u77e5&\u8f93\u5165\uff1a\n\n- \u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $L$ \u7684\u6587\u672c\u4e32\u3002\n- \u7ed9\u51fa $W$ \u4e2a\u5355\u8bcd\u4e32\u3002\n\n#### 2.\u76ee\u6807&\u8f93\u51fa\uff1a\n\n- \u5728\u6587\u672c\u4e32\u4e2d\u5220\u9664\u5c3d\u91cf\u5c11\u7684\u5b57\u6bcd\u4f7f\u5f97\u6587\u672c\u4e32\u53ea\u6709\u7531\u8bcd\u4e32\u6784\u6210\uff0c\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c11\u5220\u9664\u7684\u5b57\u6bcd\u6570\u3002\n\n## \u4e8c. \u601d\u8def\n\n#### 1. \u601d\u8003\u89e3\u6cd5\n\n- \u6587\u672c\u4e32\u540e\u9762\u7684\u5185\u5bb9\u4e0d\u4f1a\u5f71\u54cd\u6587\u672c\u4e32\u524d\u534a\u90e8\u5206\u7684\u6700\u4f18\u89e3\uff0c**\u7b26\u5408\u65e0\u540e\u6548\u6027**\u3002\n- \u82e5\u628a\u6587\u672c\u4e32\u53f3\u7aef\u4f4d\u7f6e\u4f5c\u4e3a\u72b6\u6001\uff0c\u6587\u672c\u4e32\u53f3\u7aef\u4f4d\u7f6e\u8f83\u9760\u53f3\u7684\u72b6\u6001\u9700\u8981\u901a\u8fc7\u6587\u672c\u4e32\u53f3\u7aef\u4f4d\u7f6e\u8f83\u9760\u5de6\u7684\u72b6\u6001\u5f97\u5230\uff08\u5982 $d_i$ \u9700\u8981\u901a\u8fc7 $d_0 \\dots d_{i-1}$ \u7684\u5176\u4e2d\u4e4b\u4e00\u5f97\u5230\uff09\uff0c**\u7b26\u5408\u5b50\u95ee\u9898\u91cd\u53e0\u6027**\u3002\n\n\u6240\u4ee5\u8003\u8651DP\u3002\n\n#### 2. \u786e\u5b9a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n$d_i$\uff1a\u524d $i$ \u4e2a\u5b50\u6bcd\u7684\u6587\u672c\u4e32\u4e2d\u6700\u5c11\u5220\u9664\u7684\u5b57\u6bcd\u6570\u3002\n\n$txtidx$\uff1a\u7528\u8be5\u7b2c $j$ \u4e2a\u5355\u8bcd\u4e32\u5339\u914d\u524d $i$ \u4e2a\u5b50\u6bcd\u7684\u6587\u672c\u4e32\uff0c\u5339\u914d\u5b8c\u65f6\u6587\u672c\u4e32\u7684\u4e0b\u6807\u3002\uff08**3.** \u4e2d\u6709\u8be6\u89e3\uff09\n\n$delcnt$\uff1a\u7528\u8be5\u7b2c $j$ \u4e2a\u5355\u8bcd\u4e32\u5339\u914d\u524d $i$ \u4e2a\u5b50\u6bcd\u7684\u6587\u672c\u4e32\uff0c\u5339\u914d\u8fc7\u7a0b\u4e2d\u5931\u914d\u7684\u6b21\u6570\u3002\uff08**3.** \u4e2d\u6709\u8be6\u89e3\uff09\n\n$seccessmatch$\uff1a\u7528\u8be5\u7b2c $j$ \u4e2a\u5355\u8bcd\u4e32\u5339\u914d\u524d $i$ \u4e2a\u5b50\u6bcd\u7684\u6587\u672c\u4e32\uff0c\u662f\u5426\u5339\u914d\u6210\u529f\u3002\uff08**3.** \u4e2d\u6709\u8be6\u89e3\uff09\n\n**\u7efc\u4e0a\u6240\u8ff0\uff0c\u72b6\u8f6c\u65b9\u7a0b**\uff1a$d_i=\\min_{j=1}^{W}\\begin{cases}d_{i-1}+1~~~~~~~~~~~~~~~~~(seccessmatch=false)\\\\d_{txtidx}+delcnt~~~~~(seccessmatch=true)\\end{cases}$\n\n#### 3.\u7ec6\u8282&\u8be6\u89e3\n\n~~\u53cd\u6b63\u8ddf\u5b57\u7b26\u4e32\u6709\u5173\u9898\u7684\u9898\u89e3\uff0c\u6ca1\u56fe\u6211\u662f\u770b\u4e0d\u61c2\u3002~~\n\n\u6bd4\u5982\u6587\u672c\u4e32\u662f **cabbcxyz** \uff0c\u6211\u4eec\u73b0\u5728\u6b63\u5728\u6c42 $d_5$ \uff08$i=5$\uff09 \u7528\u5176\u4e2d\u4e00\u4e2a\u5355\u8bcd\u4e32 **abc** \u5339\u914d\uff0c\u7528\u67d0\u4e2a\u5355\u8bcd\u5339\u914d\u65f6\u4e0d\u7528\u7ba1\u5176\u4ed6\u5355\u8bcd\u3002\n\n\u521d\u59cb\u65f6\u628a $txtidx$ \u8bbe\u4e3a $i$ \uff08\u4e5f\u5c31\u662f $5$\uff09\uff0c$wordidx$ \u8bbe\u4e3a\u5355\u8bcd\u957f\u5ea6\uff0c $delcnt$ \u8bbe\u4e3a $0$ \u3002\uff08\u6ce8\u610f $delnum$ \u4e0d\u662f\u6574\u4e2a\u6587\u672c\u4e32\u5220\u53bb\u7684\u5b57\u6bcd\u4e2a\u6570\uff0c\u800c\u662f\u5f53\u524d\u60c5\u51b5\u4e0b\u5339\u914d\u8fc7\u90e8\u5206\u7684\u6587\u672c\u4e32\u7684\u5220\u53bb\u5b57\u6bcd\u4e2a\u6570\u3002**3.** \u4e2d\u6709\u8be6\u89e3\uff09\n\n\u521d\u59cb\u65f6\uff1a\n\n![\u521d\u59cb\u65f6](https://cdn.luogu.com.cn/upload/image_hosting/hj73llvb.png)\n\n\u7b2c\u4e00\u6b21\u5339\u914d\u540e\uff1a\n\n![\u7b2c\u4e00\u6b21\u5339\u914d\u540e](https://cdn.luogu.com.cn/upload/image_hosting/ceegje0t.png)\n\n\u7b2c\u4e8c\u6b21\u5339\u914d\u540e\uff1a\n\n![\u7b2c\u4e8c\u6b21\u5339\u914d\u540e](https://cdn.luogu.com.cn/upload/image_hosting/46jxowqa.png)\n\n\u7b2c\u4e09\u6b21\u5339\u914d\u540e\uff1a\n\n![\u7b2c\u4e09\u6b21\u5339\u914d\u540e](https://cdn.luogu.com.cn/upload/image_hosting/heq6srqt.png)\n\n\u7b2c\u56db\u6b21\u5339\u914d\u540e\uff1a\n\n![\u7b2c\u56db\u6b21\u5339\u914d\u540e](https://cdn.luogu.com.cn/upload/image_hosting/4up8t7by.png)\n\n## \u4e09. \u4ee3\u7801\n\n\u4ee3\u7801\u4e2d\u6709\u6bd4\u8f83\u8be6\u7ec6\u7684\u6ce8\u91ca\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAXwordcnt = 600;//\u5355\u8bcd\u6570\u91cf\u6700\u5927\u503c \nconst int MAXwordlen = 25;//\u5355\u8bcd\u957f\u5ea6\u6700\u5927\u503c \nconst int MAXtxtlen = 300;//\u6587\u672c\u957f\u5ea6\u6700\u5927\u503c \n\nint wordcnt/*\u5355\u8bcd\u6570\u91cf*/, txtlen/*\u6587\u672c\u957f\u5ea6*/;\nchar word[MAXwordcnt + 10][MAXwordlen + 10]/*\u5355\u8bcd*/, txt[MAXtxtlen + 10]/*\u6587\u672c*/;\n\nint d[MAXtxtlen];//DP\u6570\u7ec4 \n\nint main() {\n\tscanf(\"%d %d\", &wordcnt, &txtlen);\n\tscanf(\"%s\", txt + 1);\n\tfor (int i = 1; i <= wordcnt; ++i) {\n\t\tscanf(\"%s\", word[i] + 1);\n\t}\n\td[0] = 0;\n\tfor (int i = 1; i <= txtlen; ++i) {\n\t\td[i] = d[i - 1] + 1;//\u5982\u679c\u6ca1\u6709\u5355\u6b21\u5f97\u4ee5\u518d\u6b21\u4f4d\u7f6e\u5339\u914d\uff0c\u9700\u8981\u5220\u9664\u7684\u5355\u8bcd\u6570++ \n\t\tfor (int j = 1; j <= wordcnt; ++j) {\n\t\t\tint wordidx = strlen(word[j] + 1);//\u6b64\u65f6\u5355\u8bcd\u4e32\u7684\u4e0b\u6807\n\t\t\tint txtidx;//\u6b64\u65f6\u6587\u672c\u4e32\u7684\u4e0b\u6807\n\t\t\tint delcnt = 0;//\u5f53\u524d\u60c5\u51b5\u4e0b\u5339\u914d\u8fc7\u90e8\u5206\u7684\u6587\u672c\u4e32\u7684\u5220\u53bb\u5b57\u6bcd\u4e2a\u6570\n\t\t\tbool seccessmatch = 0;//\u662f\u5426\u5339\u914d\u6210\u529f\n\t\t\tfor (txtidx = i; txtidx >= 1; --txtidx) {\n\t\t\t\tif (wordidx == 0) {//wordidx == 0\u4ee3\u8868\u5355\u8bcd\u5df2\u7ecf\u5339\u914d\u5b8c\u4e86 \n\t\t\t\t\tseccessmatch = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (txt[txtidx] == word[j][wordidx]) {//\u5982\u679c\u5355\u8bcd\u4e32\u4e0e\u6587\u672c\u4e32\u5728\u8be5\u4f4d\u7f6e\u76f8\u540c... \n\t\t\t\t\t--wordidx;\t\t\t\t\t\t  //\u90a3\u4e48\u5339\u914d\u4e0b\u4e00\u4f4d \n\t\t\t\t} else {\t\t\t\t\t\t\t  //\u5426\u5219...\n\t\t\t\t\t++delcnt;\t\t\t\t\t\t  //\u9700\u8981\u5220\u7684\u4e2a\u6570++ \n\t\t\t\t}\n\t\t\t}\n\t\t\tif (wordidx == 0) {//wordidx == 0\u4ee3\u8868\u5355\u8bcd\u5df2\u7ecf\u5339\u914d\u5b8c\u4e86 \n\t\t\t\tseccessmatch = 1;\n\t\t\t}\n\t\t\tif (seccessmatch) {\t\t\t\t\t\t //\u5982\u679c\u6210\u529f\u5339\u914d... \n\t\t\t\td[i] = min(d[i], d[txtidx] + delcnt);//\u8f6c\u79fb\u72b6\u6001\n\t\t\t}\n\t\t} \n\t}\n\tprintf(\"%d\", d[txtlen]);\n}\n```\n\n\n\n",
        "postTime": 1624180078,
        "uid": 392727,
        "name": "rsdbk_husky",
        "ccfLevel": 8,
        "title": "Luogu P2432 zxbsmk\u7231\u67e5\u9519"
    },
    {
        "content": "**\u9898\u76ee\u5927\u610f\uff1a** \u7ed9\u4f60\u4e00\u4e2a\u4e3b\u4e32\u4ee5\u53ca\u82e5\u5e72\u4e2a\u5b50\u4e32\uff0c\u6c42\u6700\u5c11\u9700\u8981\u5220\u9664\u51e0\u4e2a\u5b57\u6bcd\uff0c\u4f7f\u5f97\u4e3b\u4e32\u80fd\u7531\u4e00\u4e9b\u5b50\u4e32\u7ec4\u6210\u3002\n\n**\u601d\u8def\uff1a** \u6c42\u6700\u503c\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8054\u60f3\u5230\u7528dp\u6c42\u89e3\uff0c\u6700\u76f4\u63a5\u7684\u72b6\u6001\u5c31\u662f\uff0c\u8bbe**dp[i]\u8868\u793a\u4e3b\u4e32\u7684\u524di\u4f4d\u6700\u5c11\u9700\u8981\u5220\u9664\u51e0\u4e2a\u5b57\u6bcd\u3002**\n\n- \u65b9\u7a0b\u663e\u7136\uff1a**dp[i]=min{dp[i-1]+1,dp[k]+(i-k-len[j])};**\n\n- \uff08\u5176\u4e2d\uff0ck\u8868\u793a\u4ece\u4e3b\u4e32[k+1...i]\u7684\u533a\u95f4\u4e2d\u5220\u6389\u4e00\u4e9b\u5b57\u7b26\u80fd\u5f97\u5230\u5b50\u4e32j\u7684\u6700\u5927\u5de6\u7aef\u70b9-1\uff0c\u6b64\u65f6(\u663e\u7136\u6b64\u65f6\u7684\u4ee3\u4ef7\u5c31\u4e3a **\u533a\u95f4\u957f\u5ea6-\u5b50\u4e32j\u7684\u957f\u5ea6** )\uff09\n\n**\u4ee3\u7801\u5982\u4e0b\uff1a**\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=605;\nstring s;\t//\u4e3b\u4e32\nstring s1[maxn];//\u5b50\u4e32\nint len,len1[maxn],f[maxn];\nint main()\n{\n    memset(f,0x3f,sizeof(f));\t//\u521d\u59cb\u5316\n    int n,t,i,j,k,l;\n    cin>>n>>t;\n    cin>>s;  len=s.size();\n    for(i=1;i<=n;i++)cin>>s1[i],len1[i]=s1[i].size();\n    f[0]=0;\t//\u8fb9\u754c\u6761\u4ef6\n    for(i=0;i<len;i++)\n    {\n      if(!i)f[i+1]=1;\t\t//\u7279\u6b8a\u60c5\u51b5\uff08\u4e5f\u662f\u76f8\u5f53\u4e8e\u8fb9\u754c\n      else f[i+1]=f[i]+1;\t//\u6700\u52a3\u60c5\u51b5\n      for(j=1;j<=n;j++)\t//\u679a\u4e3e\u5b50\u4e32\n      {\n        int l=i,l1=len1[j]-1;\t//\u7528\u4e24\u4e2a\u6307\u9488\u6765\u5bfb\u627e\u6700\u77ed\u533a\u95f4\u4e14\u5305\u542b\u5b50\u4e32j\n        while(l>=0&&l1>=0)\n        {\n          if(s[l]==s1[j][l1])l--,l1--;\n          else l--;\n        }\n        if(l1<0)f[i+1]=min(f[i+1],f[l+1]+(i-l-len1[j]));\n      }\n    }\n    cout<<f[len]<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1551877420,
        "uid": 48573,
        "name": "lsroi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2432 \u3010zxbsmk\u7231\u67e5\u9519\u3011"
    },
    {
        "content": "\u8003\u8651\u52a8\u6001\u89c4\u5212\u7684\u4f5c\u6cd5\uff0c\u8bbe $dp[i]$ \u8868\u793a\u539f\u5b57\u7b26\u4e32\u7684\u524d $i$ \u4f4d\u6700\u5c11\u9700\u8981\u5220\u9664\u7684\u5b57\u7b26\u7684\u6570\u91cf\uff0c\u663e\u7136\u6700\u540e\u7684\u7b54\u6848\u662f $dp[L]$\u3002\n\n\u5bf9\u4e8e\u521d\u59cb\u503c\uff0c\u56e0\u4e3a\u6c42\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u5148\u628a $dp[i]$ \u5747\u8bbe\u7f6e\u4e3a $+\\infty$\uff0c\u540c\u65f6\u7531\u8f6c\u79fb\u65b9\u7a0b\u7684\u542b\u4e49\u53ef\u77e5 $dp[0] = 0$\u3002\u7136\u540e\u5c31\u662f\u5904\u7406\u5355\u8bcd\u4e0e\u6587\u7ae0\u662f\u5426\u80fd\u5339\u914d\u7684\u6838\u5fc3\u601d\u8def\u4e86\uff0c\u8bbe $dx$ \u8868\u793a\u5f53\u524d\u5339\u914d\u5230\u7684\u4f4d\u7f6e $i$\uff0c$dy$ \u8868\u793a\u7b2c $j$ \u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 $len[j]$\u3002\u4ece $i$ \u4e0e\u5355\u8bcd\u7684\u672b\u5c3e\u5f00\u59cb\uff0c\u82e5\u6210\u529f\u5339\u914d\uff0c\u5219 $dx,dy$ \u5747\u51cf\u4e00\uff0c\u5426\u5219 $dx$ \u51cf\u4e00\u3002\u5982\u679c $dy$ \u7684\u503c\u5148\u53d8\u4e3a $0$ \u6216\u8005 $dx,dy$ \u540c\u65f6\u53d8\u4e3a $0$\uff0c\u8fd9\u8bf4\u660e\u8be5\u5355\u8bcd\u80fd\u591f\u5728\u539f\u5b57\u7b26\u4e32\u4e2d\u5339\u914d\uff1b\u4f46\u662f\u5982\u679c\u4e0d\u80fd\u5339\u914d\uff0c\u663e\u7136\u539f\u5b57\u7b26\u4e32\u7684\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u9700\u8981\u88ab\u5220\u9664\u3002\n\n\u6240\u4ee5\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b $dp[i] = min (dp[i - 1] + 1,dp[dx] + (i - dx - len[j])$\uff0c\u663e\u7136\u6b64\u65f6\u7684 $dx$ \u8868\u793a\u5728\u5339\u914d\u4e4b\u540e $dx$ \u7684\u503c\uff0c\u800c\u4e0d\u662f\u521d\u59cb\u7684 $dx = i$\u3002\n\n\u8bb2\u4e86\u8fd9\u4e48\u591a\uff0c\u518d\u770b\u7740\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\u53ed\uff01\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#define init(x) memset (x,INF,sizeof (x))\n#define ll long long\n#define ull unsigned long long\n#define INF 0x3f3f3f3f\nusing namespace std;\nconst int MAX = 605;\nconst int MOD = 1e9 + 7;\ninline int read ();\nint n,m,dlen[MAX],dp[MAX];\nchar str[MAX >> 1],cor[MAX][30];\t\nint main ()\n{\n\t//freopen (\".in\",\"r\",stdin);\n\t//freopen (\".out\",\"w\",stdout);\n\tn = read ();m = read ();\n\tscanf (\"%s\",str + 1);\n\tfor (int i = 1;i <= n;++i)\n\t{\n\t\tscanf (\"%s\",cor[i] + 1);\n\t\tdlen[i] = strlen (cor[i] + 1);//\u5355\u8bcd\u7684\u957f\u5ea6\n\t}\n\tinit (dp);//\u521d\u59cb\u5316\n\tdp[0] = 0;\n\tfor (int i = 1;i <= m;++i)\n\t{\n\t\tdp[i] = dp[i - 1] + 1;\n\t\tfor (int j = 1;j <= n;++j)//\u5171\u6709 n \u4e2a\u5355\u8bcd\uff0c\u4e00\u4e00\u5339\u914d\n\t\t{\n\t\t\tint dx = i,dy = dlen[j];\n\t\t\twhile (dx && dy)//\u8fb9\u754c\u6761\u4ef6\n\t\t\t{\n\t\t\t\tif (str[dx] == cor[j][dy]) --dx,--dy;\n\t\t\t\telse --dx;\n\t\t\t}\n\t\t\tif (!dy) dp[i] = min (dp[i],dp[dx] + (i - dx - dlen[j]));//\u6210\u529f\u5339\u914d\u624d\u80fd\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\n\t\t}\n\t}\n\tprintf (\"%d\\n\",dp[m]);//\u6b64\u5904\u4e3a m \u800c\u4e0d\u662f n \u54e6\uff01\n\treturn 0;\n}\ninline int read ()\n{\n    int s = 0;int f = 1;\n    char ch = getchar ();\n    while ((ch < '0' || ch > '9') && ch != EOF)\n\t{\n        if (ch == '-') f = -1;\n        ch = getchar ();\n    }\n    while (ch >= '0' && ch <= '9')\n\t{\n        s = s * 10 + ch - '0';\n        ch = getchar ();\n    }\n    return s * f;\n}\n```",
        "postTime": 1635658284,
        "uid": 183603,
        "name": "SUNCHAOYI",
        "ccfLevel": 6,
        "title": "\u9898\u89e3\u3010P2432 zxbsmk\u7231\u67e5\u9519\u3011"
    },
    {
        "content": "### \u7b80\u5316\u9898\u610f\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $L$ \u7684\u5b57\u7b26\u4e32\uff0c \u518d\u7ed9\u51fa $W$ \u4e2a\u5355\u8bcd\uff0c\u95ee\u81f3\u5c11\u4ece $L$ \u4e2d\u53bb\u6389\u591a\u5c11\u5b57\u7b26\u624d\u80fd\u7531\u82e5\u5e72\u4e2a\u5355\u8bcd\u62fc\u6210\uff0c\u5355\u8bcd\u4f7f\u7528\u53ef\u4ee5\u91cd\u590d\u3002\n\n### \u601d\u8def\n\n\u8fd9\u79cd\u9898\u4e00\u770b\u5c31\u662f DP\uff0c\u8003\u8651 $f_{i}$ \u4e3a\u5728 $L$ \u4e2d\u524d $i$ \u4e2a\u5b57\u7b26\u6700\u5c11\u9700\u8981\u5220\u9664\u591a\u5c11\u4e2a\u5b57\u7b26\u3002\u663e\u7136\u7684\uff0c $f_{i}$ \u53ef\u4ee5\u7531 $f_{i - 1} + 1$ \u5f97\u5230\u3002\u5047\u8bbe\u5220\u9664\u540e\u62fc\u6210\u8fd9\u53e5\u8bdd\u7684\u6240\u6709\u5355\u8bcd\u4e2d\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u4e3a $W_{j}$\uff0c\u90a3\u4e48\u65b9\u7a0b\u663e\u7136 \n\n$f_{i} = \\min(f_{i - 1} +1, f_{i - len} + (len - |W_{j}|)$\n\n\u5176\u4e2d\uff0c$len$ \u8868\u793a $L$ \u4e2d\u4ece\u7b2c $i$ \u4e2a\u5b57\u7b26\u5f80\u524d\u6570 $len$ \u4e2a\u5b57\u7b26\uff0c\u4f7f\u5b50\u4e32 $L_{i - len +1} - L_{i}$ \u53ef\u4ee5\u901a\u8fc7\u5220\u9664\u5355\u8bcd\u62fc\u6210 $W_{j}$ \u7684 $len$ \u7684\u6700\u5c0f\u503c\u3002\u6b64\u65f6\u7684 $f_{j}$ \u5c31\u53ef\u4ee5\u7b49\u4e8e\u524d $i - len$ \u4e2a\u5b57\u7b26\u8981\u5220\u9664\u5b57\u7b26\u7684\u6700\u5c0f\u503c\u4e0e $i + len - 1 $ \u4e4b\u540e\u8981\u62fc\u6210 $W_{j}$ \u8981\u5220\u9664\u5b57\u7b26\u7684\u6700\u5c0f\u503c\u4e4b\u548c\u3002\n\n\u81f3\u4e8e\u6c42 $len$ \u53ef\u4ee5\u4ece $L$ \u7684\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e0e $W_{j}$ \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u5411\u524d\u4e00\u4e00\u5339\u914d\uff0c\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\u3002\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <list>\n#include <map>\n#include <set>\nusing namespace std;\n#define int long long\nint f[305] ;\nint n, m ;\nstring s ;\nstring d[605] ;\nsigned main() {\n\tcin >> n >> m ;\n\tcin >> s ;\n\tfor(int i = 1 ; i <= n ; i++) cin >> d[i] ;\n\tmemset(f, 0x3f, sizeof(f)) ; //\u8981\u6c42\u6700\u5c0f\u503c\uff0c\u521d\u59cb\u5316\u6210INF\n\tf[0] = 0 ; //\u8fb9\u754c f[0] = 0 \n\tfor(int i = 1 ; i <= m ; i++) {\n\t\tf[i] = f[i - 1] + 1 ;\n\t\tfor(int j = 1 ; j <= n ; j++) {\n\t\t\tint r1 = i, r2 = d[j].size() ;//\u6307\u9488\u7684\u601d\u60f3\n\t\t\tint flag = 1 ;//\u8bb0\u5f55\u662f\u5426\u53ef\u4ee5\u5339\u914d\u6210\u529f\n\t\t\twhile(r1 && r2) {\n\t\t\t\tif(d[j][r2 - 1] == s[r1 - 1]) r1--, r2-- ; //\u82e5\u5339\u914d\u6210\u529f\uff0c\u5404\u5411\u524d\u79fb\u4e00\u4f4d\n\t\t\t\telse r1-- ; // \u4e0d\u7136 \u628a\u6bcd\u4e32\u6307\u9488\u524d\u79fb\u4e00\u4f4d\n\t\t\t\tif(!r2) flag = 0 ; //\u5339\u914d\u6210\u529f\n\t\t\t}\n\t\t\tif(!flag) f[i] = min(f[r1] + i - r1 - (int)d[j].size(), f[i]) ; // \u82e5\u5339\u914d\u6210\u529f\uff0c\u8f6c\u79fb\n\t\t}\n\t}\n\tcout << f[m] ;\n\treturn 0 ;\n}\n\n```",
        "postTime": 1658023453,
        "uid": 632162,
        "name": "quarmer",
        "ccfLevel": 0,
        "title": "P2432 \u9898\u89e3"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u505a\u6cd5\u3002\n\n\u8003\u8651\u6bcf\u4e00\u4e2a\u5355\u8bcd\u5bf9\u4e8e\u7b54\u6848\u7684\u5f71\u54cd\u3002\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8d77\u59cb\u4f4d\u7f6e\uff0c\u6211\u4eec\u5c3d\u5feb\u62fc\u51fa\u90a3\u4e2a\u5355\u8bcd\uff0c\u627e\u51fa\u7ed3\u5c3e\u7684\u4f4d\u7f6e\u3002\u90a3\u4e48\uff0c\u53ea\u8981\u6211\u4eec\u5230\u8fbe\u4e86\u7ed3\u5c3e\u7684\u90a3\u4e2a\u4f4d\u7f6e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e00\u5b9a\u7684\u4ee3\u4ef7\u8f6c\u6362\u5230\u5f00\u5934\u90a3\u4e2a\u4f4d\u7f6e\u3002\u8fd9\u5c31\u5f88\u50cf\u6700\u77ed\u8def\u3002\n\n\u4e8e\u662f\u505a\u6cd5\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u5efa\u4e00\u4e2a\u6700\u77ed\u8def\u56fe\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32\u7684\u6bcf\u4e00\u4f4d\u5efa\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5355\u8bcd\u5206\u522b\u8fde\u8fb9\uff0c\u6700\u540e\u518d\u8fde `i->i-1` \u957f\u5ea6\u4e3a 1 \u7684\u4e00\u7ec4\u8fb9\u6765\u8868\u793a\u76f4\u63a5\u5220\u3002\n\n\u6709\u4e00\u4e9b\u5c0f\u4f18\u5316\uff0c\u6bd4\u5982\u5982\u679c\u67d0\u4e00\u4e2a\u8d77\u59cb\u4f4d\u7f6e\u4e0d\u662f\u5f85\u5904\u7406\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8d77\u59cb\u4f4d\u7f6e\u53ef\u4ee5\u5ffd\u7565\u3002\n\n\u6700\u540e\u5efa\u51fa\u7684\u662f\u4e00\u4e2a DAG\uff0c\u5e76\u4e14\u62d3\u6251\u5e8f\u5df2\u77e5\uff0c\u76f4\u63a5 DP \u6c42\u6700\u77ed\u8def\u5c31\u597d\u3002\n\n\u8bbe\u5355\u8bcd\u5e73\u5747\u957f\u5ea6\u4e3a $L_W$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(WLL_W)$\u3002\u53ef\u4ee5\u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5728\u5355\u8bcd\u4e2d\u7684\u4f4d\u7f6e\uff0c\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u964d\u4e3a $\\Theta(\\dfrac{WLL_W}{|S|})$\uff0c\u5176\u4e2d $|S|$ \u4e3a\u5b57\u7b26\u96c6\u5927\u5c0f\uff0c\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u662f $\\Theta(WLL_W)$\u3002\n\n\u9644 AC \u4ee3\u7801\uff1a\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nvoid chkmin(int& a,int b)\n{\n    if(b<a) a=b;\n}\n\nint beg[305];\nint ed[183005];\nint nxt[183005];\nint li[183005];\nint top;\n\nvoid addedge(int a,int b,int c)\n{\n\t++top;\n\ted[top] = b;\n\tli[top] = c;\n\tnxt[top] = beg[a];\n\tbeg[a] = top;\n}\n\nint dn;\nint dist[305];\n\nvoid dp()\n{\n    for(int i=0; i<dn; ++i)\n    {\n        dist[i] = 0x7f7f7f7f;\n    }\n    \n    for(int i=dn; i; --i)\n    {\n        for(int p=beg[i]; p; p=nxt[p])\n        {\n            chkmin(dist[ed[p]],dist[i]+li[p]);\n        }\n    }\n}\n\nint lisi[35];\nint listill[35];\nint lisnxt[305];\nint lisval[305];\nint listop;\n\nvoid clearlis()\n{\n\tmemset(lisi,0,sizeof(lisi));\n\tmemset(listill,0,sizeof(listill));\n\tlistop = 0;\n}\n\nvoid addlis(int k)\n{\n\t++listop;\n\tlisval[listop] = k;\n\tlisnxt[listop] = lisi[1];\n\tlisi[1] = listop;\n\tif(!listill[1]) listill[1]=listop;\n}\n\nvoid levup(int x)\n{\n\tif(!lisi[x]) return;\n\tlisnxt[listill[x]] = lisi[x+1];\n\tlisi[x+1] = lisi[x];\n\tif(!listill[x+1]) listill[x+1]=listill[x];\n\tlisi[x] = listill[x] = 0;\n}\n\nchar stri[305];\nchar word[35];\n\nint main()\n{\n\tint w,l;\n\tscanf(\"%d%d\",&w,&l);\n\tscanf(\"%s\",stri+1);\n\n\tfor(int i=1; i<=w; ++i)\n\t{\n\t\tscanf(\"%s\",word+1);\n\t\tclearlis();\n\n\t\tconst int wl = strlen(word+1);\n\t\tfor(int j=1; j<=l; ++j)\n\t\t{\n\t\t\tfor(int h=min(j,wl); h>1; --h)\n\t\t\t\tif(stri[j]==word[h])\n\t\t\t\t\tlevup(h-1);\n\n\t\t\tif(stri[j]==word[1])\n\t\t\t\taddlis(j);\n\n\t\t\tfor(int p=lisi[wl]; p; p=lisnxt[p])\n\t\t\t\taddedge(j,lisval[p]-1,j-lisval[p]+1-wl);\n\t\t\tlevup(wl);\n\t\t}\n\t}\n\n\tfor(int i=1; i<=l; ++i)\n\t\taddedge(i,i-1,1);\n\n\tdn = l;\n\tdp();\n\n\tprintf(\"%d\\n\",dist[0]);\n}\n```",
        "postTime": 1580974624,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2432 \u3010zxbsmk\u7231\u67e5\u9519\u3011"
    }
]