[
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u901a\u8fc7\u6784\u5efa\u5206\u5c42\u56fe\u7684\u65b9\u5f0f\u89e3\u51b3\n\n\u6784\u5efa\u4e24\u4e2a\u56fe\uff0c\u5206\u522b\u662f\u91cd\u529b\u5411\u4e0a\u7684\u548c\u91cd\u529b\u5411\u4e0b\u7684\n\n\u5bf9\u4e8e\u91cd\u529b\u67d0\u79cd\u60c5\u51b5\u4e0b\u53ef\u4ee5\u53cd\u8f6c\u91cd\u529b\u7684\u4f4d\u7f6e\uff0c\u5728\u8be5\u4f4d\u7f6e\u5411\u53e6\u4e00\u5f20\u56fe\u8fde\u6743\u4e3a1\u7684\u5355\u5411\u8fb9\n\n\u5bf9\u4e8e\u67d0\u79cd\u91cd\u529b\u72b6\u51b5\u4e0b\u53ef\u4ee5\u5411\u5de6\u6216\u5411\u53f3\u7684\u4f4d\u7f6e\uff0c\u5411\u5de6\u6216\u5411\u53f3\u8fde0\u8fb9\n\n\u8dd1\u6700\u77ed\u8def\uff0c\u5728\u7ec8\u70b9\u7684\u4e24\u79cd\u60c5\u51b5\u4e0b\u53d6\u6700\u77ed\u8ddd\u79bb\u5373\u53ef\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=1005;\n\nint n,m,np,S,T;\nint ln[MAXN*MAXN<<1],h[MAXN*MAXN<<1];\nint q[MAXN*MAXN<<2];\nbool vis[MAXN*MAXN<<1];\nbool c[MAXN][MAXN];\nstruct rpg{\n\tint li,nx,ln;\n}a[MAXN*MAXN<<2];\n\nint get(int x,int y){return (x-1)*m+y;}\nvoid add(int ls,int nx,int ln){a[++np]=(rpg){h[ls],nx,ln};h[ls]=np;}\n\nvoid SPFA(int S)\n{\n\tmemset(ln,0x7f,sizeof(ln));\n\tint hd=1,tl=1;q[hd]=S;ln[S]=0;vis[S]=1;\n\twhile(hd<=tl){\n\t\tint nw=q[hd++];vis[nw]=0;\n\t\tfor(int i=h[nw];i;i=a[i].li){\n\t\t\tif(ln[a[i].nx]>ln[nw]+a[i].ln){\n\t\t\t\tln[a[i].nx]=ln[nw]+a[i].ln;\n\t\t\t\tif(!vis[a[i].nx]){\n\t\t\t\t\tvis[a[i].nx]=1;\n\t\t\t\t\tq[++tl]=a[i].nx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}return;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tchar ch;cin>>ch;\n\t\t\tif(ch=='#'){c[i][j]=1;continue;}\n\t\t\telse if(ch=='C') S=get(i,j);\n\t\t\telse if(ch=='D') T=get(i,j);\n\t\t}\n\t}for(int i=2;i<n;++i){\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tif(!c[i][j]){\n\t\t\t\tif(!c[i+1][j]) add(get(i,j),get(i+1,j),0);\n\t\t\t\tif(!c[i-1][j]) add(get(i,j)+n*m,get(i-1,j)+n*m,0);\n\t\t\t\tif(c[i+1][j]){\n\t\t\t\t\tif(j<m&&!c[i][j+1]) add(get(i,j),get(i,j+1),0);\n\t\t\t\t\tif(j>1&&!c[i][j-1]) add(get(i,j),get(i,j-1),0);\n\t\t\t\t}if(c[i-1][j]){\n\t\t\t\t\tif(j<m&&!c[i][j+1]) add(get(i,j)+n*m,get(i,j+1)+n*m,0);\n\t\t\t\t\tif(j>1&&!c[i][j-1]) add(get(i,j)+n*m,get(i,j-1)+n*m,0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}for(int i=1;i<=m;++i){\n\t\tif(!c[1][i]&&!c[2][i]) add(i,i+m,0);\n\t\tif(!c[n][i]&&!c[n-1][i])add(get(n,i)+n*m,get(n-1,i)+n*m,0);\n\t}for(int i=2;i<n;++i){\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tif(!c[i][j]){\n\t\t\t\tif(c[i+1][j]) add(get(i,j),get(i,j)+n*m,1);\n\t\t\t\tif(c[i-1][j]) add(get(i,j)+n*m,get(i,j),1);\n\t\t\t}\n\t\t}\n\t}SPFA(S);if(min(ln[T],ln[T+n*m])<2e9)\n\tprintf(\"%d\\n\",min(ln[T],ln[T+n*m]));\n\telse puts(\"-1\");\n\treturn 0;\n}\n```",
        "postTime": 1538115702,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2208 \u3010[USACO13OPEN]\u91cd\u529b\u5f02\u5e38What's Up With Gra\u2026\u3011"
    },
    {
        "content": "\u76f8\u4fe1\u5927\u5bb6\u770b\u5230\u8fd9\u91cc\u7684\u65f6\u5019\uff0c\u5404\u4f4d\u9898\u76ee\u610f\u601d\u90fd\u7406\u89e3\u7684\u6e05\u6e05\u695a\u695a\uff0c\u660e\u660e\u767d\u767d\n\n\u901a\u8fc7\u89c2\u5bdf\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u535a\u58eb\u662f\u5728\u4e24\u79cd\u91cd\u529b\u73af\u5883\u4e0b\u6765\u56de\u8f6c\u6362\uff0c\u53cd\u590d\u6a2a\u8df3\uff0c\u800c\u6bcf\u6b21\u53cd\u590d\u6a2a\u8df3\u7684\u4ee3\u4ef7\u4e3a$1$\n\n\u6211\u4eec\u53ef\u4ee5\u5728\u4e24\u4e2a\u56fe\u4e0a\u8dd1$SPFA$\uff0c\u7528\u6765\u6c42\u5728\u540c\u4e00\u91cd\u529b\u6807\u51c6\u4e0b\uff0c\u67d0\u4e00\u4e2a\u53ef\u4ee5\u5230\u8fbe\n\u7684\u6240\u6709\u4f4d\u7f6e\n\n\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e24\u4e2a\u56fe\u4e0a\u9762\u5bf9\u5e94\u7684\u70b9\u7528\u957f\u5ea6\u4e3a$1$\u7684\n\n\u5728\u4e24\u4e2a\u5927\u56fe\u4e0a\u8dd1$SPFA$,\u6700\u540e\u6bd4\u8f83\u4e24\u4e2a\u56fe\u533b\u751f\u4f4d\u7f6e\u7684\u957f\u5ea6\uff0c\u8f93\u51fa\u6700\u5c0f\u503c\u5373\u53ef\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define MAXN 1010\nusing namespace std;\ninline int read()\n{\n\tint x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile (!isdigit(c))\n\t\t  f|=(c=='-'),c=getchar();\n\twhile (isdigit(c))\n\t\t  x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn f?-x:x;\n}\nvoid write(int x) {\n    if(x<0) {\n        putchar('-');\n        x=-x;\n    }\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint n,m;\nint c[MAXN][MAXN];\nint S,T;\nstruct node{\n\tint nxt;\n\tint to;\n\tint d;\n}e[MAXN*MAXN<<2];\nint cnt;\nint head[MAXN*MAXN<<1];\nint k[MAXN*MAXN<<1];\ninline int getsum(int x,int y){\n\treturn (x-1)*m+y;\n}\ninline void add(int u,int v,int w){\n\t++cnt;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n\te[cnt].to=v;\n\te[cnt].d=w;\n}\nint ll[MAXN*MAXN<<1];\nint q[MAXN*MAXN<<2];\nint vis[MAXN*MAXN<<1];\ninline void spfa(int x){\n\tmemset(k,0x7f,sizeof(k));\n\tint hd=1;\n\tint tail=1;\n\tq[hd]=x;\n\tk[x]=0;\n\tvis[x]=1;\n\twhile(hd<=tail)\n\t\t{\n\t\t\tint now;\n\t\t\tnow=q[hd];\n\t\t\thd++;\n\t\t\tvis[now]=0;\n\t\t\tfor(register int i=head[now];i;i=e[i].nxt)\n\t\t\t\t{\n\t\t\t\t\tint y;\n\t\t\t\t\ty=e[i].to;\n\t\t\t\t\tif(k[y]>k[now]+e[i].d)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tk[y]=k[now]+e[i].d;\n\t\t\t\t\t\t\tif(!vis[y])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvis[y]=1;\n\t\t\t\t\t\t\t\t\t++tail;\n\t\t\t\t\t\t\t\t\tq[tail]=y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\treturn;\n}\nsigned main(){\n\tn=read();\n\tm=read();\n\tfor(register int i=1;i<=n;++i)\n\t\tfor(register int j=1;j<=m;++j)\n\t\t\t{\n\t\t\t\tchar ch;\n\t\t\t\tcin>>ch;\n\t\t\t\tif(ch=='C')\t\n\t\t\t\t\tS=getsum(i,j);\n\t\t\t\tif(ch=='D')\n\t\t\t\t\tT=getsum(i,j);\n\t\t\t\tif(ch=='#')\n\t\t\t\t\tc[i][j]=1;\n\t\t\t}\n\tfor(register int i=2;i<n;++i)\n\t\tfor(register int j=1;j<=m;++j)\n\t\t\t{\n\t\t\t\tif(!c[i][j])\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!c[i+1][j])\n\t\t\t\t\t\t\tadd(getsum(i,j),getsum(i+1,j),0);\n\t\t\t\t\t\tif(!c[i-1][j])\n\t\t\t\t\t\t\tadd(getsum(i,j)+n*m,getsum(i-1,j)+n*m,0);\n\t\t\t\t\t\tif(c[i+1][j])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(j<m && !c[i][j+1])\n\t\t\t\t\t\t\t\t\tadd(getsum(i,j),getsum(i,j+1),0);\n\t\t\t\t\t\t\t\tif(j>1 && !c[i][j-1])\n\t\t\t\t\t\t\t\t\tadd(getsum(i,j),getsum(i,j-1),0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tif(c[i-1][j])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(j<m && !c[i][j+1])\n\t\t\t\t\t\t\t\t\tadd(getsum(i,j)+n*m,getsum(i,j+1)+n*m,0);\n\t\t\t\t\t\t\t\tif(j>1 && !c[i][j-1])\n\t\t\t\t\t\t\t\t\tadd(getsum(i,j)+n*m,getsum(i,j-1)+n*m,0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\tfor(register int i=1;i<=m;++i)\n\t\t{\n\t\t\tif(!c[1][i] && !c[2][i])\n\t\t\t\tadd(i,i+m,0);\n\t\t\tif(!c[n][i] && !c[n-1][i])\n\t\t\t\tadd(getsum(n,i)+n*m,getsum(n-1,i)+n*m,0);\n\t\t}\n\tfor(register int i=2;i<n;++i)\n\t\tfor(register int j=1;j<=m;++j)\n\t\t\t{\n\t\t\t\tif(!c[i][j])\n\t\t\t\t\t{\n\t\t\t\t\t\tif(c[i+1][j])\n\t\t\t\t\t\t\tadd(getsum(i,j),getsum(i,j)+n*m,1);\n\t\t\t\t\t\tif(c[i-1][j])\n\t\t\t\t\t\t\tadd(getsum(i,j)+n*m,getsum(i,j),1);\n\t\t\t\t\t}\n\t\t\t}\n\tspfa(S);\n\tif(min(k[T],k[T+n*m])<2e9)\n\t\twrite(min(k[T],k[T+n*m]));\n\telse\n\t\twrite(-1);\n\treturn 0;\n}\n```\n",
        "postTime": 1611665409,
        "uid": 193541,
        "name": "\u7f9a\u7f8aWANG",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2208 \u3010[USACO13OPEN]What's Up With Gravity S\u3011"
    },
    {
        "content": "\u5751\u70b9\uff1a\u5982\u679c\u5728\u6389\u843d\u8fc7\u7a0b\u4e2d\u78b0\u5230\u4e86D\uff0c\u4e5f\u7b97\u662f\u5230\u8fbe\u4e86\u3002\n\nBfs + N\u591a\u7ec6\u8282\n\n**Bfs\u5207\u8bb0\u6700\u4f18\u72b6\u6001\u4e00\u5b9a\u8981\u653e\u5728\u524d\u9762\uff0c\u4f18\u5148\u5904\u7406\uff0c\u8981\u4e0d\u7b54\u6848\u4f1a\u662f\u9519\u7684\uff01**\n\n\u8bbe\u7acb\u4e00\u4e2avis\u6570\u7ec4\u8868\u793a\u8fd9\u4e2a\u70b9\u66fe\u7ecf\u6709\u6ca1\u6709\u5230\u8fc7\u3002\u82e5\u60f3\u5230\u8fbe\u67d0\u4e2a\u70b9\u5fc5\u987b\u6ee1\u8db3vis[x][y]==true\u548cma[x][y]!='#'\uff0c\u624d\u80fd\u5230\u8fbe\u3002\n\n\u505a\u597d\u5145\u5206\u51c6\u5907\u540e\uff0c\u4ece\u8d77\u70b9\u51fa\u53d1\uff0c\u8fdb\u884c\u5bbd\u641c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684\u5bbd\u641c\uff0c\u4e00\u5b9a\u8981\u591f\u5f7b\u5e95\u3002\u610f\u601d\u5c31\u662f\u4ece\u8fd9\u4e2a\u70b9\u51fa\u53d1\u4e0d\u9700\u8981\u7ecf\u8fc7\u91cd\u529b\u53cd\u8f6c\u5c31\u80fd\u5230\u8fbe\u7684\u70b9\u5168\u90e8\u8bbf\u95ee\u4e00\u904d\uff0c\u91cd\u529b\u53cd\u8f6c\u540e\u80fd\u5230\u8fbe\u7684\u90a3\u4e2a\u70b9\u4e5f\u52a0\u5165\u961f\u5217\u3002\n\n\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u56e0\u4e3abfs\u6709\u4e00\u4e2a\u7279\u70b9\uff0c\u5c31\u662f\u6700\u5c0f\u89e3\u4e00\u5b9a\u5728\u524d\u9762\uff0c\u56e0\u6b64\u8981\u4fdd\u6301\u961f\u5217\u4e2dt\u7684\u503c\u662f\u9012\u589e\u72b6\u6001\u3002\u5982\u679c\u662f\u5728\u4e0d\u8fdb\u884c\u91cd\u529b\u53cd\u8f6c\u65f6\u6328\u4e2a\u70b9\u7684\u8bbf\u95ee\uff0c\u5c31\u4f1a\u4f7f\u8ddd\u79bb\u6700\u8fd1\u7684\u8def\u5f84\u6210\u4e3a\u7b54\u6848\u3002\n\n\u6240\u4ee5\u6bcf\u4e00\u4e2a\u70b9\u5728\u5de6\u53f3\u8d70\u65f6\u4e00\u5b9a\u8981\u8d70\u5b8c\u5b83\u3002\u8fd9\u5305\u62ec\u4ece\u8fd9\u4e2a\u70b9\u5f80\u5de6\u53f3\u4e24\u8fb9\u8d70\u3002\u6389\u843d\u4e4b\u540e\uff0c\u7ee7\u7eed\u5de6\u53f3\u5c1d\u8bd5\u3002\n\n\u800c\u91cd\u529b\u53cd\u8f6c\u540e\u7684\u70b9\u5219\u4e0d\u80fd\u7acb\u523b\u8fdb\u884c\u5982\u4e0a\u7684\u64cd\u4f5c\u3002\n\n\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4fdd\u8bc1\u628a\u540ct\u7684\u70b9\u5168\u90e8\u4f18\u5148\u52a0\u5165\u961f\u5217\uff0c\u5728\u63d2\u5165t+1\u7684\u70b9\u3002\n\u4e3a\u4e86\u907f\u514d\u8fde\u7eed\u4e24\u6b21\u7684\u91cd\u529b\u53cd\u8f6c\uff0c\u6211\u5728\u91cd\u529b\u53cd\u8f6c\u5230\u8fbe\u7684\u70b9\u7684\u4e0a\u9762\uff0c\u5c01\u4e0a\u4e86\u4e00\u4e2a\u5c01\u5370\uff0c\u4e5f\u5c31\u662fvis[x-d[down]][y]=false\u3002\n\n\n\n\u3010\u4ee3\u7801\u3011\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxl=510;\nconst int d[]={-1,1};\n\nint n,m;\nchar ma[maxl][maxl];\nbool vis[maxl][maxl];//vis[x][y]==true\u5219(x,y)\u53ef\u4ee5\u8d70 \n\nstruct node\n{\n\tint x,y,t;\n\tbool down;\n}S,E;\nqueue<node> q;\n\nnode fall(node P)\n{\n\tdo\n\t{\n\t\tif(P.x==E.x&&P.y==E.y)\n\t\t{\n\t\t\tprintf(\"%d\\n\",P.t);\n\t\t\texit(0);\n\t\t}\n\t\tP.x+=d[P.down];\n\t}while(ma[P.x][P.y]!='#');\n\tP.x-=d[P.down];\n\treturn P;\n}\n\nvoid dfs(int x,int y,int t,bool down,bool right)\n{\n\tif(vis[x][y]==false||ma[x][y]=='#') return ;\n\tif(ma[x+d[down]][y]!='#')\n\t{\n\t\tnode Tmp=fall((node){x,y,t,down});\n\t\tx=Tmp.x,y=Tmp.y;\n\t\tif((down&&x==n)||(!down&&x==1)||vis[x][y]==false)\n\t\t{\n\t\t\tvis[x][y]=false;\n\t\t\treturn ;\n\t\t}\n\t\tvis[x][y]=false;\n\t\tq.push(Tmp);\n\t\tdfs(x,y-1,t,down,0);\n\t\tdfs(x,y+1,t,down,1);\n\t}\n\telse\n\t{\n\t\tvis[x][y]=false;\n\t\tif(x==E.x&&y==E.y) \n\t\t{\n\t\t\tprintf(\"%d\\n\",t);\n\t\t\texit(0);\n\t\t}\n\t\tq.push((node){x,y,t,down});\n\t\tdfs(x,y+d[right],t,down,right);\n\t}\n}\n\nvoid bfs()\n{\n\tq.push(S);\n\twhile(!q.empty())\n\t{\n\t\tnode P=q.front();q.pop();\n\t\tint x=P.x,y=P.y,t=P.t;\n\t\tbool down=P.down;\n\t\t\n\t\tdfs(x, y-1, t, down, 0);//\u5de6\n\t\tdfs(x, y+1, t, down, 1);//\u53f3\n\t\t\n\t\tdown=P.down^1;//\u91cd\u529b\u53cd\u8f6c \n\t\tx+=d[down];\n\t\tif(vis[x][y]==true&&ma[x][y]!='#')\n\t\t{\n\t\t\tnode Tmp=fall((node){x,y,t+1,down});\n\t\t\tx=Tmp.x,y=Tmp.y;\n\t\t\tif((down&&x==n)||(!down&&x==1)||vis[x][y]==false)\n\t\t\t{\n\t\t\t\tvis[x][y]=false;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvis[x][y]=false;\n\t\t\tq.push(Tmp);\n\t\t\tvis[x-d[down]][y]=false;\n\t\t}\n\t}\n\tprintf(\"-1\\n\");\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n//\tmemset(vis,false,sizeof(vis));\n\tmemset(ma,'#',sizeof(ma));\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",ma[i]+1);\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(ma[i][j]=='.') vis[i][j]=true;\n\t\t\telse if(ma[i][j]=='C') S=(node){i,j,0,true},ma[i][j]='.',vis[i][j]=false;\n\t\t\telse if(ma[i][j]=='D') E=(node){i,j,0},ma[i][j]='.',vis[i][j]=true;\n\t\t}\n\t}\n\t\n\tS=fall(S);\n\tif(S.x==n)\n\t{\n\t\tprintf(\"-1\\n\");\n\t\texit(0);\n\t}\n\tvis[S.x][S.y]=false;\n\tbfs();\n\treturn 0;\n}\n```",
        "postTime": 1522041780,
        "uid": 31585,
        "name": "2002chenhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2208 \u3010[USACO13OPEN]\u91cd\u529b\u5f02\u5e38What's Up With Gra\u2026\u3011"
    },
    {
        "content": "\u601d\u8def\u548c\u90e8\u5206\u4ee3\u7801\u662f\u501f\u9274\u7684...\n\u5c31\u662f\u4e00\u4e2a\u8d70\u8ff7\u5bab\uff0c\u53ea\u4e0d\u8fc7\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\u91cd\u529b\u7684\u76f8\u5173\u8fc7\u7a0b\n\u4ee3\u7801\u91cc\u8fb9\u6709\u6ce8\u91ca\uff0c\u5199\u7684\u8fd8\u86ee\u6e05\u6670\u7684...\n```c\n#include<map>\n#include<stack>\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<vector> \n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing std::cin;\nusing std::cout;\nvoid gkd()\n{\n\tstd::ios::sync_with_stdio(false);\n\tcout.tie(NULL);\n}\nchar map[555][555];\nbool vis[555][555][4];\nstruct node\n{\n\tint x, y, g, sum;//\u5f53\u524d\u5750\u6807\uff0c\u5f53\u524d\u91cd\u529b\u72b6\u6001:1\u4e3a\u4e0a -1\u4e3a\u4e0b \n}now, top;\nstd::deque<node> q;\nint n, m, x, y;\nsigned main()\n{\n\t//gkd();\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%s\",map[i]+1);\n\t\tfor(int j = 1; j <= m; j++)\n\t\t{\n\t\t\tif(map[i][j] == 'C')\n\t\t\t\tx = i, y = j;\n\t\t}\n\t}\n\tnow.x = x, now.y = y, now.g = 1, now.sum = 0;\n\tq.push_back(now);\n\twhile(!q.empty())\n\t{\n\t\ttop = q.front();\n\t\tq.pop_front();\n\t\tnow.x = top.x + top.g,\n\t\tnow.y = top.y,\n\t\tnow.g = top.g,\n\t\tnow.sum = top.sum; \n\t\tif(map[top.x][top.y] == 'D')\n\t\t\treturn cout << top.sum, 0;\n\t\tif(top.x + top.g < 1 || top.x + top.g > n || top.y < 1 || top.y > m)\n\t\t\tcontinue;//\u8d8a\u4e86\u4e0a\u4e0b\u8fb9\u754c \n\t\tvis[top.x][top.y][top.g + 1] = 1;\n\t\tif(map[top.x  + top.g][top.y] == '#')//\u811a\u4e0b\uff08\u5934\u4e0a\uff09\u80fd\u4e0d\u80fd\u8e29 \n\t\t{\n\t\t\tnow.x = top.x, \n\t\t\tnow.y = top.y + 1, \n\t\t\tnow.g = top.g, \n\t\t\tnow.sum = top.sum;\n\t\t\tif(!vis[top.x][top.y + 1][top.g + 1] && map[top.x][top.y + 1] != '#')\n\t\t\t\tq.push_front(now);//\u5224\u65ad\u5f53\u524d\u7684\u91cd\u529b\u4e0b\u53f3\u79fb \n\t\t\t\n\t\t\tnow.x = top.x, \n\t\t\tnow.y = top.y - 1, \n\t\t\tnow.g = top.g, \n\t\t\tnow.sum = top.sum;\n\t\t\tif(!vis[top.x][top.y - 1][top.g + 1] && map[top.x][top.y - 1] != '#')\n\t\t\t\tq.push_front(now);//\u5224\u65ad\u5f53\u524d\u91cd\u529b\u4e0b\u5de6\u79fb \n\t\t\t\n\t\t\tnow.x = top.x, \n\t\t\tnow.y = top.y, \n\t\t\tnow.g =- top.g, \n\t\t\tnow.sum = top.sum + 1;\n\t\t\tif(!vis[top.x][top.y][-top.g + 1])\n\t\t\t\tq.push_back(now);//\u7ffb\u8f6c\u91cd\u529b\t\t\t\n\t\t} \n\t\telse\n\t\t\tq.push_front(now);//\u5982\u679c\u811a\u4e0b\u4e0d\u662f\u53ef\u4ee5\u8e29\u7684\u683c\u5b50\uff0c\u90a3\u4e48\u5c31\u7ee7\u7eed\u4e0b\u843d\u6216\u8005\u4e0a\u843d\t\n\t}\n\tcout << -1 << '\\n';\n}\n```\n",
        "postTime": 1571562620,
        "uid": 136377,
        "name": "Sunset_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2208 \u3010[USACO13OPEN]\u91cd\u529b\u5f02\u5e38What's Up With Gra\u2026\u3011"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\uff1a\n\u4e00\u9053\u4e0d\u9519\u7684 BFS\u3002\u6211\u4eec\u8003\u8651\u5230\uff0c\u6bcf\u6b21\u53ea\u80fd\u5148\u5904\u7406\u5b8c\u540c\u5c42\u72b6\u6001\uff0c\u624d\u80fd\u5904\u7406\u4e0b\u5c42\u72b6\u6001\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528\u4e00\u4e2a\u5f88\u65b0\u9896\u7684\u505a\u6cd5\u3002\u6211\u4eec\u5f00\u4e24\u4e2a\u961f\u5217\uff0c\u4e00\u4e2a\u5904\u7406\u672c\u5c42\u72b6\u6001\uff0c\u4e00\u4e2a\u5904\u7406\u4e0b\u4e00\u5c42\u72b6\u6001\u3002\u6269\u5c55\u51fa\u6765\u7684\u540c\u5c42\u72b6\u6001\u653e\u5728\u7b2c\u4e00\u4e2a\u961f\u5217\u91cc\uff0c\u4e0b\u5c42\u72b6\u6001\u5219\u653e\u5728\u7b2c\u4e8c\u4e2a\u961f\u5217\u91cc\u3002\u5f53\u7b2c\u4e00\u4e2a\u961f\u5217\u7a7a\u4e86\u4ee5\u540e\uff0c\u5c31\u5904\u7406\u7b2c\u4e8c\u4e2a\u961f\u5217\u5e76\u4ea4\u6362\u4e24\u4e2a\u961f\u5217\u7f16\u53f7\uff08\u4ea4\u6362\u7f16\u53f7\u7684\u5b9e\u73b0\u8bf7\u770b\u4ee3\u7801\uff09\u3002\u5f53\u4e24\u4e2a\u961f\u5217\u90fd\u7a7a\u4e86\uff0c\u5c31\u4ee3\u8868\u5e7f\u641c\u5df2\u7ecf\u7ed3\u675f\u3002\n## \u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <map>\n#include <queue>\n\nusing namespace std;\n\nconst int kMaxN = 501;\nconst int kD[2][2] = {{0, 1}, {0, -1}};\n\nstruct Node {\n  int x, y, d;\n};\n\nint n, m, x1, y1, x2, y2;\nchar c[kMaxN][kMaxN];\nint v[kMaxN][kMaxN];         //\u8bb0\u5f55\u5230\u8fbe\u6bcf\u4e2a\u70b9\u8981\u7ffb\u8f6c\u7684\u6b21\u6570\nbool b[kMaxN][kMaxN][2], z;  //\u6807\u8bb0\u6570\u7ec4\nqueue<Node> q[2];            //\u4e24\u4e2a\u961f\u5217\n\nvoid Record(int x, int y, int d) {  //\u70b9\u7684\u5750\u6807\uff0c\u7ffb\u8f6c\u7684\u6b21\u6570\n  if ((x <= 1 && (d % 2)) || (x >= n && !(d % 2)) || y < 1 || y > m || b[x][y][d % 2] || c[x][y] == '#') {\n    return;\n  }\n  if (d % 2) {  //\u5f53\u524d\u91cd\u529b\u671d\u4e0a\n    while (1) {\n      if (c[x][y] == 'D') {    //\u5982\u679c\u641c\u5230\u7ec8\u70b9\n        b[x2][y2][d % 2] = 1;  //\u6807\u8bb0\u7ec8\u70b9\u5230\u8fbe\n        v[x2][y2] = d;         //\u8bb0\u5f55\u7ffb\u8f6c\u6b21\u6570\n        z = 1;                 //\u6807\u8bb0\u53ef\u4ee5\u9000\u51faBFS\uff0c\u53ef\u4ee5\u4f18\u5316\u4e00\u70b9\u5e38\u6570\n        return;\n      }\n      if (x <= 1 || b[x][y][d % 2]) {  //\u5760\u5165\u6df1\u6e0a\u6216\u5df2\u7ecf\u5230\u8fbe\n        return;\n      }\n      if (c[x - 1][y] == '#') {  //\u4e0a\u9762\u4e0d\u662f\u7a7a\u7684\n        break;\n      }\n      x--;  //\u50cf\u4e0a\u843d\n    }\n  } else {\n    while (1) {\n      if (c[x][y] == 'D') {    //\u5982\u679c\u641c\u5230\u7ec8\u70b9\n        b[x2][y2][d % 2] = 1;  //\u6807\u8bb0\u7ec8\u70b9\u5230\u8fbe\n        v[x2][y2] = d;         //\u8bb0\u5f55\u7ffb\u8f6c\u6b21\u6570\n        z = 1;                 //\u6807\u8bb0\u53ef\u4ee5\u9000\u51faBFS\uff0c\u53ef\u4ee5\u4f18\u5316\u4e00\u70b9\u5e38\u6570\n        return;\n      }\n      if (x >= n || b[x][y][d % 2]) {\n        return;\n      }\n      if (c[x + 1][y] == '#') {  //\u4e0b\u9762\u4e0d\u662f\u7a7a\u7684\n        break;\n      }\n      x++;  //\u5f80\u4e0b\u843d\n    }\n  }\n  b[x][y][d % 2] = 1;        //\u6807\u8bb0\n  v[x][y] = d;               //\u8bb0\u5f55\u7ffb\u8f6c\u6b21\u6570\n  q[d % 2].push({x, y, d});  //\u5165\u961f\n}\n\nvoid Work() {\n  Record(x1, y1, 0);                                              //\u8d77\u70b9\u5165\u961f\n  for (int i = 0; (!q[0].empty() || !q[1].empty()) && !z; i++) {  //\u7ffb\u8f6c\u6b21\u6570\uff0c\u961f\u5217\u4ea4\u6362\u7f16\u53f7\u53ef\u901a\u8fc7i%2\u5b9e\u73b0\n    while (!q[i % 2].empty()) {\n      Node u = q[i % 2].front();\n      q[i % 2].pop();\n      for (int j = 0; j < 2; j++) {  //\u5904\u7406\u540c\u5c42\u72b6\u6001\n        Record(u.x + kD[j][0], u.y + kD[j][1], u.d);\n      }\n      if (i % 2) {                      //\u5904\u7406\u4e0b\u5c42\u72b6\u6001\n        Record(u.x + 1, u.y, u.d + 1);  //\u7ffb\u8f6c\u91cd\u529b\n      } else {\n        Record(u.x - 1, u.y, u.d + 1);  //\u7ffb\u8f6c\u91cd\u529b\n      }\n    }\n  }\n}\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  //freopen(\"gravity.in\", \"r\", stdin);\n  //freopen(\"gravity.out\", \"w\", stdout);\n  cin >> n >> m;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      cin >> c[i][j];\n      if (c[i][j] == 'C') {  //\u8bb0\u5f55\u8d77\u70b9\n        x1 = i, y1 = j;\n      }\n      if (c[i][j] == 'D') {  //\u8bb0\u5f55\u7ec8\u70b9\n        x2 = i, y2 = j;\n      }\n    }\n  }\n  Work();\n  cout << ((b[x2][y2][1]) || (b[x2][y2][0]) ? v[x2][y2] : -1);  //\u5224\u65ad\u7ec8\u70b9\u662f\u5426\u5230\u8fbe\n  return 0;\n}\n```\n",
        "postTime": 1629535718,
        "uid": 392711,
        "name": "jiang_cheng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2208 \u3010[USACO13OPEN]What's Up With Gravity S\u3011"
    },
    {
        "content": "## Sol ##\n\n[blog\u98df\u7528](http://www.caolaoshi.men/index.php/archives/usaco13open-wuwg.html)\n\n~~\u505a\u8fd9\u9053\u9898\u628a\u6211\u7ed9\u505a\u9893\u5e9f\u4e86\uff0c\u4e5f\u505a\u6c14\u4e86~~\u8bf4\u5b9e\u8bdd\uff0c\u4e00\u5f00\u59cb\u6211\u8fde\u9898\u76ee\u90fd\u6ca1\u5f04\u660e\u767d\uff0c\u6b63\u597d\u6559\u7ec3\u4e0d\u5728\uff0c\u800c\u4e14\u5c31\u6211\u4e00\u4e2a\u4eba\u5728\u673a\u623f\uff0c\u4e8e\u662f\u6253\u7b97\u770b\u9898\u89e3\u628a\u8fd9\u9053\u9898\u7684\u610f\u601d\u7ed9\u770b\u660e\u767d\uff0c\u4f46\u662f\u9898\u89e3\u770b\u4e86\u534a\u5929\uff0c\u53d1\u73b0\u6d1b\u8c37\u4e0a\u4e09\u7bc7\u9898\u89e3\u7684\u8111\u6d1e\u771f\u7684\u65e0\u8bed\uff0c\u9898\u89e3\u4e0d\u597d\u597d\u5199\uff0c\u4e00\u53e5\u8bdd\u5e26\u8fc7\uff0c\u4f46\u4f60\u6700\u8d77\u7801\u5750\u6807\u7cfb\u90fd\u4e0d\u592a\u4e00\u6837\u5f97\u8bf4\u4e00\u4e0b\u5427\uff0c\u5509\u3002\u9898\u89e3\u91cc\u9762\u7684\u4e09\u7bc7\u5e9f\u8bdd\u4e86\u534a\u5929\uff0c\u90fd\u8bf4\u7684\u641c\u7d22\u4f46\u90fd\u6ca1\u8bf4\u660e\u767d\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u8003\u5f97\u641c\u7d22\uff0c\u4f60\u53ea\u505a\u5bf9\u4e86\u7ec6\u8282\u90fd\u4e0d\u63d0\u7684\uff0c\u5199\u4ec0\u4e48\u9898\u89e3\u3002\n\n--\u4ee5\u4e0a\u7eaf\u5c5e\u5410\u69fd\uff0c\u65e0\u6076\u610f\uff0c\u4e3a\u6211\u6d6a\u8d39\u4e86\u4e00\u4e0b\u5348\u7684\u65f6\u95f4\u800c\u611f\u6168\u3002--\n\n\u8fd9\u9053\u9898\uff0c\u6700\u77ed\u8def\u53ef\u505a\u3002\u5efa\u56fe\u5c31\u5148\u4e0d\u8bf4\u4e86\uff0c\u7136\u540e\u5c31\u662f\u7c7b\u4f3c\u641c\u7d22\u7684spfa\uff0c\u5728\u641c\u7d22\u4e4b\u524d\uff0c\u5148\u5224\u65ad\u4e00\u4e2a\u6761\u4ef6\uff0c\u8fd9\u5c31\u5f97\u56de\u5230\u9898\u76ee\u4e2d\u6765\uff0c\u9898\u76ee\u4e2d\u8bf4\uff0c\u4e0d\u6ee1\u8db31\u548c2\u7684\u624d\u505a3\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5e94\u8be5\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6ee1\u8db31\u548c2\uff0c\u6211\u5c31\u662f\u9677\u5728\u8fd9\u91cc\u9762\u597d\u957f\u65f6\u95f4\uff0c\uff08\u5410\u69fd\u5c31\u4e0d\u591a\u5410\u69fd\u4e86\uff09\uff0c\u5982\u679c\u90fd\u4e0d\u6ee1\u8db3\uff0c\u518d\u505a3\u3002\u505a3\u7684\u65f6\u5019\uff0c\u5206\u4e09\u79cd\uff0c\u5de6\uff0c\u53f3\uff0c\u7ffb\u8f6c\u91cd\u529b\u3002\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u5c31\u662f\u7ffb\u8f6c\u7684\u6b21\u6570\uff0c\u6240\u4ee5\u6700\u540e\u6700\u77ed\u8def\u5c31\u662f\u6700\u5c11\u7684\u7ffb\u8f6c\u6b21\u6570\u3002\n\n## Code ##\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n\nconst int L = 505;\nstruct Node {\n    int x , y , flag;\n    Node(){}\n    Node(int _x , int _y , int _flag) {x = _x ; y = _y ; flag = _flag;}\n};\nint n , m , Cx , Cy , Dx , Dy , map[L][L];\nint d[L][L][2] , vis[L][L][2] , ans;\nqueue<Node>q;\n\nvoid upd(Node u , Node v) {\n    if(d[u.x][u.y][u.flag] < d[v.x][v.y][v.flag]) {\n        d[v.x][v.y][v.flag] = d[u.x][u.y][u.flag] + (u.flag==v.flag?0:1);\n        if(!vis[v.x][v.y][v.flag]) {\n            vis[v.x][v.y][v.flag] = 1;\n            q.push(v);\t\t\n        }\t\n    }\t\n}\n\nint spfa() {\n    memset(d , 0x3f , sizeof(d));\n    memset(vis , 0 , sizeof(vis));\n    q.push(Node(Cx , Cy , 1));\n    vis[Cx][Cy][1] = 1;\n    d[Cx][Cy][1] = 0;\n    while(!q.empty()) {\n        Node u = q.front();\n        q.pop();\n        vis[u.x][u.y][u.flag] = 0;\n        int dx = (u.flag==1?1:-1);\n        if(u.x + dx >= 1 && u.x + dx <= n) {\n            if(!map[u.x+dx][u.y])\n                upd(u , Node(u.x+dx,u.y,u.flag));\n            else {\n                if(u.y+1<=m && !map[u.x][u.y+1])\n                    upd(u , Node(u.x,u.y+1,u.flag));\n                if(u.y-1>=1 && !map[u.x][u.y-1])\n                    upd(u , Node(u.x,u.y-1,u.flag));\n                upd(u,Node(u.x,u.y,u.flag^1));\n            }\n        }\n    }\n    return min(d[Dx][Dy][0],d[Dx][Dy][1]);\n}\n\nint main() {\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1; i<=n; i++)\n        for(int j=1; j<=m; j++) {\n            char c;\n            cin>>c;\n            if(c == 'C')\n                Cx = i , Cy = j;\n            if(c == 'D')\n                Dx = i , Dy = j;\n            if(c == '#')\n                map[i][j] = 1;\n            else\n                map[i][j] = 0;\n        }\n    ans = spfa();\n    if(ans == 0x3f3f3f3f)\n        printf(\"-1\");\n    else\n        printf(\"%d\",ans);\n    return 0;\n}\n```\n\n\n  [1]: https://www.luogu.org/problemnew/show/P2208",
        "postTime": 1535264394,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2208 \u3010[USACO13OPEN]\u91cd\u529b\u5f02\u5e38What's Up With Gra\u2026\u3011"
    },
    {
        "content": "### \u53cc\u7aef\u961f\u5217 + Hash\u5224\u91cd\u5e7f\u641c ###\n\n\u9996\u5148\u770b\u5230\u8fd9\u4e48\u590d\u6742\u7684\u5730\u56fe\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u5e7f\u641c\u4e86,,,\n\u6211\u89c9\u5f97\u96be\u70b9\u4e3b\u8981\u5728 \n\n 1. \u6bcf\u6b21\u6269\u5c55\u7684\u65f6\u5019\u82b1\u8d39\u4e0d\u4e00\u5b9a\u589e\u5927(\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4f7f\u7528\u666e\u901a\u961f\u5217\u662f\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\u7684, \u7b54\u6848\u53ef\u80fd\u4f1a\u504f\u5927)\n 2. \u5224\u91cd.\n\n\u7b2c\u4e8c\u70b9\u5982\u679c\u60f3\u5077\u61d2\u53ef\u4ee5\u76f4\u63a5\u7528set\u641e\u5b9a, \u5982\u679c\u8ffd\u6c42\u901f\u5ea6\u7684\u8bdd\u53ef\u4ee5\u624b\u5199Hash\u51fd\u6570.   \n\u81f3\u4e8e\u7b2c\u4e00\u70b9\u561b,,,\u6211\u770b\u6709\u7684\u4eba\u662f\u7528SPFA (@\u66f9\u8001\u5e08), \u6709\u7684\u4eba\u662f\u6bcf\u6b21\u628a\u5f53\u524d\u76f8\u540c\u82b1\u8d39\u7684\u72b6\u6001\u6269\u5c55\u5b8c.  \n\u5982\u679c\u6269\u5c55\u5b8c\u7684\u8bdd, \u4e0d\u4ec5\u4ee3\u7801\u4f1a\u53d8\u957f, \u800c\u4e14\u7ec6\u8282\u7e41\u7410. \u6240\u4ee5\u5728\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86\u53cc\u7aef\u961f\u5217(`deque`) \u6765\u5904\u7406.  \n\u5bf9\u4e8e\u5f53\u524d\u72b6\u6001\u6269\u5c55\u6765\u7684\u72b6\u6001, \u53d8\u5316\u4e86\u91cd\u529b\u7684push_back, \u5176\u4f59\u7684push_front, \u8fd9\u6837\u5c31\u80fd\u89e3\u51b3\u961f\u5217\u5355\u8c03\u6027\u7684\u95ee\u9898\u4e86.\n\n```cpp\n#include <set>\n#include <queue>\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <cassert>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\ntypedef pair<int, int> P;\nconst int MAXN = 5e2 + 10;\n\nint N, M;\nchar mp[MAXN][MAXN];\n\nstruct state\n{\n    int x, y, val;\n    bool g;//false->down, true-up;\n\n    inline int Hash(){return ((x * 500 + y) << 1) | g;}\n    inline int fall(){return x + (g ? -1 : 1);}\n    inline bool out(){return !(1 <= x && x <= N && 1 <= y && y <= M);}\n\n    void expand(vector<state> &cur){\n        if(mp[fall()][y] != '#') {\n            cur.push_back((state){fall(), y, val, g});\n            return;\n        }\n        if(mp[x][y + 1] != '#') cur.push_back((state){x, y + 1, val, g});\n        if(mp[x][y - 1] != '#') cur.push_back((state){x, y - 1, val, g});\n        cur.push_back((state){x, y, val + 1, g ^ 1});\n    }\n};\n\nbool vis[600000];\ndeque<state> q;\nint bfs(){\n    P s, t;\n    for(int i = 1; i <= N; i++)\n        for(int j = 1; j <= M; j++){\n            if(mp[i][j] == 'C') s = P(i, j);\n            if(mp[i][j] == 'D') t = P(i, j);\n        }\n    q.push_back((state){s.first, s.second, 0, false});\n\n    while(!q.empty()){\n        state u = q.front(); q.pop_front();\n        if(u.out()) continue;\n\n        vector<state> nxt; u.expand(nxt);\n        for(vector<state>::iterator it = nxt.begin(); it != nxt.end(); ++it){\n            if(P(it->x, it->y) == t) return it->val;\n            if(vis[it->Hash()]) continue;\n            \n            vis[it->Hash()] = true;\n            if(it->val > u.val) q.push_back(*it);\n            else q.push_front(*it);\n        }\n    }\n    return -1;\n}\n\nint main()\n{\n    // freopen(\"p2208.in\", \"r\", stdin);\n    cin>>N>>M;\n    for(int i = 1; i <= N; i++){\n        scanf(\" \");\n        for(int j = 1; j <= M; j++)\n            mp[i][j] = getchar();\n    }\n    cout<<bfs()<<endl;\n    return 0;\n}\n```",
        "postTime": 1536136567,
        "uid": 57705,
        "name": "\u4ffa\u662f\u5c0f\u7a0b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2208 \u3010[USACO13OPEN]\u91cd\u529b\u5f02\u5e38What's Up With Gra\u2026\u3011"
    }
]