[
    {
        "content": "~~\u5343\u4ebf\u7684STL,\u5343\u4ebf\u7684\u8fed\u4ee3\u5668~~  \n\u7b2c\u4e00\u95ee\u597d\u5199\uff0c\u6bcf\u4e2a\u683c\u5b50\u8dd1floodfill\u5c31\u597d\u4e86  \n\u8d77\u521d\u5199\u4e86\u4e2a\u66b4\u529b\u7248\u7684\uff0c\u5c31\u662f\u76f4\u63a5\u679a\u4e3e\u53ef\u80fd\u7684\u53f7\u7801\u7ec4\u5408\u7136\u540e\u7528\u7b2c\u4e00\u95ee\u7ed3\u679c\u7edf\u8ba1  \n\u7136\u540e\u5c31\u7206\u70b8\u4e86  \n\u7136\u540e\u6211\u627e\u5230\u4e86\u5b98\u65b9\uff08\uff1f\uff09\u9898\u89e3\uff0c\u7136\u540e\u90a3\u4ee3\u7801\u5728\u6211\u7684\u7834\u7535\u8111\u4e0a\u7f16\u8bd1\u4e0d\u4e86  \n\u7136\u540e\u6211\u53ea\u597d\u5bf9\u6bcf\u4e00\u7ec4\u53f7\u7801\u7ec4\u5408\u5efa\u4e00\u5f20\u56fe  \n\u90a3\u4e48\u600e\u4e48\u641e\u6620\u5c04\u5462\uff1fmap  \n\u91cd\u590d\u8fb9\u600e\u4e48\u53bb\u91cd\uff1f\u7528map<int,set<int> >\u5b58\u56fe  \n  \u600e\u4e48\u4e0dMLE\u5462\uff1f\u9760\u795e\u5947\u7684STL  \n  \u600e\u4e48\u4e0dTLE\u5462\uff1fO2  \n  \u6240\u4ee5\u6211\u4eec\u628a\u7b2c\u4e00\u95ee\u5904\u7406\u51fa\u7684\u6bcf\u4e00\u4e2a\u8054\u901a\u5757\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u4e4b\u540e\u9488\u5bf9\u6bcf\u4e00\u7ec4\u53ef\u80fd\u7684\u53f7\u7801\u7ec4\u5408\uff08\u539f\u56fe\u4e2d\u76f8\u90bb\u7684\u4e0d\u540c\u53f7\u7801\uff09\u5efa\u4e00\u5f20\u56fe\uff0cmap\u641e\u641e\u6620\u5c04\uff0c\u4e4b\u540e\u6bcf\u4e00\u5f20\u65b0\u56fe\u66b4\u529b\u7edf\u8ba1\u7b54\u6848\u5c31\u597d\u4e86  \n  \u4e11\u964b\u7684\u4ee3\u7801:  \n  ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=256;\ntypedef pair<int,int> pii;\n#define X first\n#define Y second\nint n,a[N][N],id[N][N],arid,clk;\nstruct gph{\n\tmap<int,set<int> > g;\n\tmap<int,int> nsz,rid,rsz;\n};\nmap<int,gph> g1;\nmap<pii,gph> g2;\n\nint dfs(gph &g,int nid,int rid){\n\tif(g.rid.count(nid)>0)return 0;\n\tg.rid[nid]=rid;\n\tint x=g.nsz[nid];\n\tfor(set<int>::iterator i=g.g[nid].begin();i!=g.g[nid].end();i++){\n\t\tx+=dfs(g,*i,rid);\n\t}\n\tg.rsz[rid]=x;\n\treturn x;\n}\nint fuck(gph &g){\n\tint re=0;\n\tfor(map<int,set<int> >::iterator i=g.g.begin();i!=g.g.end();i++)re=max(re,dfs(g,(*i).X,++arid));\n\treturn re;\n}\nvoid add(gph &g,int st,int ed){\n\tg.g[st].insert(ed);\n\tg.g[ed].insert(st);\n\tg.nsz[st]=g.nsz[ed]=1;\n}\nvoid addg2(int x1,int y1,int x2,int y2){\n\tint c1=a[x1][y1],c2=a[x2][y2],id1=id[x1][y1],id2=id[x2][y2];\n\tif(c1>c2)swap(c1,c2),swap(id1,id2);\n\tint r1=g1[c1].rid[id1],r2=g1[c2].rid[id2];\n\tpii p=pii(c1,c2);\n\tadd(g2[p],r1,r2);\n\tg2[p].nsz[r1]=g1[c1].rsz[r1];                                                              \n\tg2[p].nsz[r2]=g1[c2].rsz[r2];  \n}\nint main(){\n\t//printf(\"Dioptic manifold clear.\\n\");\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=n;j++)scanf(\"%d\",&a[i][j]),id[i][j]=++clk;\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=n;j++){\n\t\tadd(g1[a[i][j]],id[i][j],id[i][j]);\n\t\tif(i<n&&a[i+1][j]==a[i][j])add(g1[a[i][j]],id[i][j],id[i+1][j]);\n\t\tif(j<n&&a[i][j+1]==a[i][j])add(g1[a[i][j]],id[i][j],id[i][j+1]);;\n\t}\n\tint ass1=0;\n\tfor(map<int,gph>::iterator i=g1.begin();i!=g1.end();i++){\n\t\tass1=max(ass1,fuck((*i).Y));\n\t}\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=n;j++){\n\t\tif(i<n&&a[i+1][j]!=a[i][j])addg2(i,j,i+1,j);\n\t\tif(j<n&&a[i][j+1]!=a[i][j])addg2(i,j,i,j+1);\n\t}\n\tint ass2=0;\n\tfor(map<pii,gph>::iterator i=g2.begin();i!=g2.end();i++){\n\t\tass2=max(ass2,fuck((*i).Y));\n\t}\n\tprintf(\"%d\\n%d\",ass1,ass2);\n\treturn 0;\n}\n```",
        "postTime": 1525825946,
        "uid": 38725,
        "name": "xiwang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4380 \u3010[USACO18OPEN]Multiplayer Moo\u3011"
    },
    {
        "content": "~~\u81ea\u53e4FJ\u5c41\u4e8b\u591a\uff0c\u4ed6\u7684\u5976\u725b\u5c41\u4e8b\u4e5f\u591a~~\n\n\n\u7ed9\u5404\u4f4d\u5e26\u6765\u4e00\u4e2a\u597d\u73a9\u610f\u513f\n\nC++ STL\u5e93\u7684\n\n# **unordered_map**!!!\n\n(\u9700\u5305\u542b\u5934\u6587\u4ef6<unordered_map>)\n\n~~\u6ca1\u9519bits\u90fd\u6ca1\u6cd5\u7528~~\n\n\u53e6\u5916\uff0c\u8fd9\u662fC++11\u91cc\u7684\u73a9\u610f\u513f\uff0c\u5982\u679c\u4e0d\u652f\u6301C++11\u7684\u5b69\u5b50\u8fd8\u662f\u770b\u770b\u697c\u4e0a\u7684\u5427\n\n\n\u4ecb\u7ecd\u4e00\u4e0b\u54c8\u3002\n\nunordered_map\uff0c\u662f\u65e0\u5e8f\u6620\u5c04\uff0c\uff08\u79bb\u6563\u5316\u7684\u597d\u73a9\u610f\u513f\uff09\uff0c\u4ed6\u548cmap\u4e0d\u540c\u7684\u662f\uff0cmap\u5e95\u5c42\u4f7f\u7528\u7ea2\u9ed1\u5e73\u8861\u6811\u5b9e\u73b0\uff0c\u800cunordered_map\u662f\u4f7f\u7528hash\uff08\u54c8\u5e0c\uff09\u5b9e\u73b0\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f7f\u7528unordered_map\u5efa\u7acb\u6620\u5c04\u7684\u590d\u6742\u5ea6\u662f\u2026\u2026\n\n# $O(1)!!!$\n\n\u672c\u9898\u53ef\u4ee5\u91c7\u7528\u5bbd\u641c\u6c42\u89e3\uff0c\u8fd0\u7528Flood-Fill\u7b97\u6cd5\u6c42\u89e3\u4e24\u95ee\uff0c\u601d\u8def\u5982\u4e0b\uff1a\n\n\u7b2c\u4e00\u95ee\u6bd4\u8f83\u7b80\u5355\uff0c\u679a\u4e3e\u6bcf\u4e00\u70b9\u5e76\u8fdb\u884cflood-fill\uff0c\u5e76\u4e14\u66f4\u65b0\u6700\u5927\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\n```cpp\nint bfs1(int x,int y) {\n\tint ans(0);\n\tqueue<node>que;\n\tnode t,s;\n\tt=(node) {\n\t\tx,y\n\t};\n\tmark[x][y]=1;\n\tque.push(t);\n\twhile(!que.empty()) {\n\t\tt=que.front();\n\t\tque.pop();\n\t\tans++;\n\t\tfor(int i=0; i<4; i++) {\n\t\t\ts.x=t.x+mv[i][0];\n\t\t\ts.y=t.y+mv[i][1];\n\t\t\tif(s.x>=1&&s.x<=n&&s.y>=1&&s.y<=n&&!mark[s.x][s.y]&&mp[s.x][s.y]==mp[t.x][t.y]) {//mp[s.x][s.y]==mp[t.x][t.y]\u662f\u4fdd\u8bc1\u4e0b\u4e00\u4e2a\u70b9\u548c\u8fd9\u4e2a\u70b9\u662f\u540c\u4e00\u4e2a\u6570\u5b57\n\t\t\t\tmark[s.x][s.y]=1;\n\t\t\t\tque.push(s);\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\n```\n\n\u90a3\u4e48\u7b2c\u4e8c\u95ee\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u6211\u4eec\u8fd9\u6837\u5b50\u8003\u8651\uff1a\n\n#### \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u8003\u8651\u4ed6\u80fd\u5426\u4e0e\u56db\u5468\u8fdb\u884c\u7ec4\u961f~~\uff08\u5f00\u9ed1\uff09~~\uff0c\u82e5\u662f\u53ef\u4ee5\u7684\u8bdd\uff0c\u5c06\u4ed6\u4e0e\u56db\u5468\u7684\u70b9\u8fdb\u884c\u7ec4\u961f\u5e76\u8fde\u63a5\uff0c\u82e5\u56db\u5468\u7684\u70b9\u5747\u4e0d\u662f\u672c\u8eab\uff08\u5373\u7b26\u5408\uff09\n\n>\u4e24\u5934\u5976\u725b\u5360\u6709\u7684\u9886\u57df\u5fc5\u987b\u8981\u540c\u65f6\u5305\u542b\u961f\u4f0d\u4e2d\u4e24\u5934\u5976\u725b\u7684\u7f16\u53f7\uff0c\u4e0d\u80fd\u4ec5\u4ec5\u5305\u542b\u4e00\u5934\u3002\n\n#### \u8fd9\u4e2a\u6761\u4ef6\uff0c\u90a3\u4e48\u8fdb\u884cFlood-Fill\uff0c\u5e76\u4e14\u8bb0\u4e3a\u6570\u5b57X\u4e0e\u6570\u5b57Y\u5df2\u7ecf\u7ed3\u4e3a\u4e00\u961f\u3002\u90a3\u4e48\u600e\u4e48\u8bb0\u5f55\u5462\uff1f\n\n# $unordered_{}map!!!$\n\n\u6ce8\u610f\uff0c\u5728\u5224\u65ad\u662f\u5426\u5141\u8bb8\u5c06\u6b64\u70b9\u52a0\u5165\u961f\u5217\u65f6\uff0c\u8981\u5224\u65ad\u7684\u4e0d\u4ec5\u4ec5\u662f$$mp[s.x][s.y]==mp[t.x][t.y]$$\n\n\u8fd8\u6709$$mp[s.x][s.y]$$\u662f\u5426\u4e0e\u4ed6\u7684\u961f\u53cb\u76f8\u540c(**\u6253\u7684\u662f\u53cb\u519b!)\n\n\u4ee3\u7801\u5982\u4e0b\n```\nint bfs2(int x,int y,int x1,int y1) {\n\tmemset(mark,0,sizeof(mark));\n\t//printf(\"%d %d %d %d\\n\",x,y,x1,y1);\n\tint ans(0);\n\tint used1=mp[x][y],used2=mp[x1][y1];//used1\u8868\u793a\u81ea\u5df1\u7684\u6570\u5b57\u7f16\u53f7\n    //used2\u8868\u793a\u961f\u53cb\u7684\u6570\u5b57\u7f16\u53f7\n\tqueue<node>que;\n\tnode t,s;\n\tt=(node) {\n\t\tx,y\n\t};\n\tmark[x][y]=1;\n\tque.push(t);\n\twhile(!que.empty()) {\n\t\tt=que.front();\n\t\tque.pop();\n\t\t//printf(\"%d %d\\n\",t.x,t.y);\n\t\tans++;\n\t\tfor(int i=0; i<4; i++) {\n\t\t\ts.x=t.x+mv[i][0];\n\t\t\ts.y=t.y+mv[i][1];\n\t\t\tif(s.x>=1&&s.x<=n&&s.y>=1&&s.y<=n&&!mark[s.x][s.y]&&(mp[s.x][s.y]==used1||mp[s.x][s.y]==used2)) {//\u6709\u4e86\u4e0a\u9762\u7684\u6ce8\u91ca\uff0c\u95ee\u9898\u5c31\u4e0d\u5927\u4e86\n\t\t\t\tmark[s.x][s.y]=1;\n\t\t\t\tque.push(s);\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\n```\n\n\u5b8c\u5168\u4ee3\u7801\n```\n#include<bits/stdc++.h>\n#include<unordered_map>\n#define FILE(s) freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout)\nusing namespace std;\nint n,ans1,ans2;\nint mv[4][2]= {{1,0},{-1,0},{0,1},{0,-1}};\nint mp[333][333];\nbool mark[333][333];\nunordered_map<int,unordered_map<int,bool> >mmp;\nstruct node {\n\tint x;\n\tint y;\n};\nint bfs1(int x,int y) {\n\tint ans(0);\n\tqueue<node>que;\n\tnode t,s;\n\tt=(node) {\n\t\tx,y\n\t};\n\tmark[x][y]=1;\n\tque.push(t);\n\twhile(!que.empty()) {\n\t\tt=que.front();\n\t\tque.pop();\n\t\tans++;\n\t\tfor(int i=0; i<4; i++) {\n\t\t\ts.x=t.x+mv[i][0];\n\t\t\ts.y=t.y+mv[i][1];\n\t\t\tif(s.x>=1&&s.x<=n&&s.y>=1&&s.y<=n&&!mark[s.x][s.y]&&mp[s.x][s.y]==mp[t.x][t.y]) {\n\t\t\t\tmark[s.x][s.y]=1;\n\t\t\t\tque.push(s);\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nint bfs2(int x,int y,int x1,int y1) {\n\tmemset(mark,0,sizeof(mark));\n\t//printf(\"%d %d %d %d\\n\",x,y,x1,y1);\n\tint ans(0);\n\tint used1=mp[x][y],used2=mp[x1][y1];\n\tqueue<node>que;\n\tnode t,s;\n\tt=(node) {\n\t\tx,y\n\t};\n\tmark[x][y]=1;\n\tque.push(t);\n\twhile(!que.empty()) {\n\t\tt=que.front();\n\t\tque.pop();\n\t\t//printf(\"%d %d\\n\",t.x,t.y);\n\t\tans++;\n\t\tfor(int i=0; i<4; i++) {\n\t\t\ts.x=t.x+mv[i][0];\n\t\t\ts.y=t.y+mv[i][1];\n\t\t\tif(s.x>=1&&s.x<=n&&s.y>=1&&s.y<=n&&!mark[s.x][s.y]&&(mp[s.x][s.y]==used1||mp[s.x][s.y]==used2)) {\n\t\t\t\tmark[s.x][s.y]=1;\n\t\t\t\tque.push(s);\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n\t//FILE(\"multimoo\");\n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++)\n\t\tfor(int j=1; j<=n; j++)\n\t\t\tscanf(\"%d\",mp[i]+j);\n\tfor(int i=1; i<=n; i++)\n\t\tfor(int j=1; j<=n; j++)\n\t\t\tif(!mark[i][j])\n\t\t\t\tans1=max(ans1,bfs1(i,j));//\u7b2c\u4e00\u95ee\u7684Flood-fill\u95ee\u9898\u90fd\u4e0d\u5927\u5427\n\tprintf(\"%d\\n\",ans1);\n\tmemset(mark,0,sizeof(mark));\n\tfor(int i=1; i<=n; i++)\n\t\tfor(int j=1; j<=n; j++)\n\t\t\tfor(int k=0; k<4; k++) {\n\t\t\t\tint frx=i+mv[k][0];\n\t\t\t\tint fry=j+mv[k][1];//\u5224\u65ad\u5468\u56f4\u56db\u4e2a\u70b9\u80fd\u5426\u4e0e\u5f53\u524d\u70b9\u7ed3\u6210\u961f\u53cb(\u7ec4\u961f\u5f00\u9ed1)(\u5212\u6389)\n\t\t\t\tif(frx>=1&&frx<=n&&fry>=1&&fry<=n&&mp[i][j]!=mp[frx][fry]&&!mmp[mp[i][j]][mp[frx][fry]])//mp[i][j]!=mp[frx][fry]\u5373\u5224\u65admp[i][j]\u662f\u5426\u4e0e\u81ea\u5df1\u7ec4\u961f\uff08\u6211 \u548c \u6211 \u81ea \u5df1 \u7ec4 \u961f\uff09\n\t\t\t\t\tans2=max(ans2,bfs2(i,j,frx,fry)),mmp[mp[i][j]][mp[frx][fry]]=mmp[mp[frx][fry]][mp[i][j]]=1;//mmp\u8bb0\u5f55\u5f53\u524d\u70b9\u4e0e\u5468\u56f4\u662f\u5426\u7ec4\u8fc7\u961f\n\t\t\t}\n\tprintf(\"%d\\n\",ans2);//\u534e\u4e3d\u4e3d\u7684\u8f93\u51fa\n\treturn 0;\n}\n```\n\n# The End. Thanks for your watching",
        "postTime": 1540470870,
        "uid": 58399,
        "name": "\u72f8\u72f8\u517b\u7684\u654f\u654f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4380 \u3010[USACO18OPEN]Multiplayer Moo\u3011"
    },
    {
        "content": "\n\u9898\u76ee\u6765\u6e90 : [luogu4380](https://www.luogu.org/problem/P4380)\n\n\u540c\u6b65\u4e8e\u6211\u7684 blog\uff1a [my blog](https://www.cnblogs.com/Mandy-H-Y/p/11529663.html)\n\n# \u5206\u6790\n\n## Part 1 \u5199\u5728\u524d\u9762\n\n\u770b\u5230\u9898\u89e3\u91cc\u597d\u591a\u5927\u4f6c\u7528STL\uff0c\u849f\u84bb\u745f\u745f\u53d1\u6296\uff0c\u6253\u4e86\u4e24\u904dBFS\uff0c~~\u8fc7\u4e86~~\u3002\n\n\u8fd9\u9053\u9898\u672c\u8eab\u662f\u5237\u5e76\u67e5\u96c6\u65f6\u5237\u5230\u7684\uff0c\u7136\u800c\u53d1\u73b0\u81ea\u5df1\u7528\u5e76\u67e5\u96c6\u60f3\u4e0d\u5230\u7b2c\u4e8c\u95ee\u8be5\u600e\u4e48\u505a\u2026\u2026\n\n\uff08\u4e0d\u8fc7luogu\u9898\u89e3\u91cc\u6709\u5927\u4f6c\u662f\u7528\u7684\u5e76\u67e5\u96c6\uff09\n\n\u679c\u65ad\u653e\u5f03\u4e86\u5e76\u67e5\u96c6\u7684\u601d\u8def\u91cd\u65b0\u601d\u8003\u540e\uff0c\u53d1\u73b0\u8fd9\u9053\u9898\u5230\u662f\u7528BFS\u67d3\u8272\u53ef\u4ee5\u505a\u3002\n\n\n## Part 2 BFS \uff1f\n\n\u7b2c\u4e00\u95ee\u5012\u662f\u597d\u60f3\uff0c\u6807\u8bb0\u8fde\u901a\u5757\uff0c\u7edf\u8ba1\u8fde\u901a\u5757\u7684\u5927\u5c0f\uff0c\u6700\u540e\u8f93\u51fa\u6700\u5927\u503c\u5c31\u597d\u3002\n\n```cpp\n\nvoid bfs1(int sx,int sy){\n    ++tot;//\u8fde\u901a\u5757\u7684\u7f16\u53f7 \n    color[tot] = a[sx][sy];//\u8bb0\u4e0b\u8fde\u901a\u5757\u7684\u989c\u8272 \n    queue<Node>q;\n    q.push((Node){sx,sy});\n    vis[sx][sy] = tot;//\u6807\u8bb0\u8d77\u70b9 \n    while(!q.empty()){\n        Node u = q.front();\n        q.pop();\n        cnt[tot]++;//\u8bb0\u8fde\u901a\u5757\u7684\u6570\u91cf \n        for(int i = 0;i < 4; ++ i){\n            int nx = u.x + dx[i];\n            int ny = u.y + dy[i];\n            \n            if(nx <= 0 || ny <= 0 || nx > n || ny > n) continue;\n            if(!vis[nx][ny] && a[nx][ny] == a[sx][sy]){\n                q.push((Node){nx,ny});\n                vis[nx][ny] = tot;//\u4fdd\u8bc1\u53ea\u8fdb\u4e00\u6b21\u961f \n                continue;\n            } \n            \n            if(vis[nx][ny] && vis[nx][ny] < tot){\n                eadd(tot,vis[nx][ny]); \n                eadd(vis[nx][ny],tot); //\u8fde\u53cc\u5411\u8fb9 \n            }\n        }\n    }\n    ans = max(ans,cnt[tot]);\n}\n\n```\n\n\n\u7b2c\u4e00\u95ee\u4e3b\u6a21\u5757\uff1a\n\n\n```cpp\n//-----------------\u7b2c\u4e00\u95ee \n    for(int i = 1;i <= n; ++ i)\n        for(int j = 1;j <= n; ++ j){\n            if(!vis[i][j]) bfs1(i,j);\n        }\n    put(ans);puts(\"\");\n\n\n```\n\n\n\u5173\u952e\u662f\u7b2c\u4e8c\u95ee\u3002\n\n\n\n\u770b\u9898\uff1a\n\n>\u540c\u4e00\u961f\u7684\u4e24\u5934\u5976\u725b\u50cf\u4e4b\u524d\u4e00\u6837\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u9886\u57df\uff0c\u4f46\u662f\u73b0\u5728\u9886\u57df\u4e2d\u7684\u683c\u5b50\u53ef\u4ee5\u5c5e\u4e8e\u961f\u4f0d\u4e2d\u7684\u4efb\u4e00\u5934\u5976\u725b\u3002\n\n>\u4e24\u5934\u5976\u725b\u5360\u6709\u7684\u9886\u57df\u5fc5\u987b\u8981\u540c\u65f6\u5305\u542b\u961f\u4f0d\u4e2d\u4e24\u5934\u5976\u725b\u7684\u7f16\u53f7\uff0c\u4e0d\u80fd\u4ec5\u4ec5\u5305\u542b\u4e00\u5934\u3002\n\n\n\u4e5f\u5c31\u662f**\u53ea\u5305\u542b\u4e24\u4e2a\u989c\u8272\u7684\u6700\u5927\u8fde\u901a\u5757**\n\n\u6211\u4eec\u53ef\u4ee5\u601d\u8003\uff1a\n\n**\u6700\u540e\u5f97\u5230\u7684\u7b54\u6848\u8fde\u901a\u5757\uff0c\u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5355\u8272\u8fde\u901a\u5757\u548c\u53e6\u4e00\u4e2a\u76f8\u8fde\u7684\u4e0d\u540c\u989c\u8272\u7684\u8fde\u901a\u5757\u6269\u5c55\u6240\u5f97\u3002**\n\n\n\u8fd9\u6837\uff0c\n\n**\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7b2c\u4e00\u95ee\u5bfb\u627e\u8fde\u901a\u5757\u7684\u65f6\u5019\uff0c\u4e3a\u6bcf\u4e2a\u8fde\u901a\u5757\u7f16\u53f7\uff0c\u5c06\u8fd9\u4e2a\u8fde\u901a\u5757\u8ddf\u4e0e\u4e4b\u76f8\u90bb\u7684\u8054\u901a\u5757\u4e4b\u95f4\u52a0\u4e00\u6761\u65e0\u5411\u8fb9\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e00\u6761\u8fb9\u7684\u4e24\u7aef\u989c\u8272\u90fd\u662f\u4e0d\u540c\u7684\u3002**\n\n\n**\u5728\u7b2c\u4e8c\u95ee\u65f6\uff0c\u6309\u987a\u5e8f\u904d\u5386\u6bcf\u4e00\u4e2a\u8054\u901a\u5feb\uff0c\u5e76\u5c06\u5176\u8ddf\u4e0e\u5b83\u76f8\u8fde\u7684\u8fde\u901a\u5757\u7ec4\u6210\u7ec4\u5408\uff0c\u4e00\u8d77\u6269\u5c55\uff0c\u6c42\u51fa\u6700\u5927\u7684\u7ec4\u5408\u8fde\u901a\u5757\u5373\u53ef**\n\n```cpp\nvoid bfs2(int s1,int s2){\n    queue<int>q;\n    num++;//num\u662f\u65b9\u6848\u7684\u7f16\u53f7 \uff08\u53cc\u8272\u8fde\u901a\u5757\u7684\u7f16\u53f7\uff09 \n    int tmp = 0;\n    q.push(s2);\n    q.push(s1);\n    used[s1] = num;\n    used[s2] = num; //\u4e0d\u5728\u540c\u4e00\u65b9\u6848\u4e2d\u8d70\u73af \n    \n    while(!q.empty()){\n        int u = q.front();\n        q.pop();\n        tmp += cnt[u];\n        for(int i = first[u];i;i = edge[i].nt){\n            int v = edge[i].v;\n            if(used[v] == num) continue;\n            if(color[v]!=color[s1] && color[v]!=color[s2]) continue;\n            used[v] = num;\n            q.push(v);\n        } \n    }\n    ans = max(ans,tmp);\n}\n```\n\n\n\n\u76f4\u63a5\u5c06\u8fd9\u6837\u7684\u4ee3\u7801\u4ea4\u4e0a\u53bb\uff0c\u8d85\u65f6\uff0c\u4e0d\u8fc7\u670990\u5206\n\n\u4f46\u662f\u6211\u4eec\u6709\u4f18\u5316:\n\n## Part 3 \u4f18\u5316\n\n### \u4f18\u5316 1 \u904d\u5386\u8fb9\u4f18\u5316\n\n\u8fd8\u8bb0\u5f97\u6211\u518d\u5c06\u7b2c\u4e8c\u95ee\u7684\u65f6\u5019\u7279\u522b\u5f3a\u8c03\u4e86\u4e00\u53e5\u8bdd\uff1a\n\n>\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e00\u6761\u8fb9\u7684\u4e24\u7aef\u989c\u8272\u90fd\u662f\u4e0d\u540c\u7684\n\n\u9898\u76ee\u4e2d\u7684\u7b2c\u4e8c\u95ee\u8981\u6c42\uff1a**\u5305\u542b\u4e14\u4ec5\u5305\u542b\u4e24\u5934\u725b**\n\n\u6240\u4ee5\uff0c\u4e00\u6761\u8fb9\uff08u\uff0cv\uff09\uff0c\u786e\u5b9a\u4e86\u5305\u542bu,v\u7684\u65b9\u6848\uff0c\n\n\uff08\u6ce8\u610f\u4e0d\u662f\u5305\u542bu,v\u7684\u989c\u8272\u7684\u65b9\u6848\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u6709\u4e0eu,v\u989c\u8272\u76f8\u540c\u7684\u65b9\u6848\uff0c\u53ea\u662f\u548cu\uff0cv\u4e0d\u8fde\u901a\u3002\u8fd9\u5c31\u662f\u53e6\u4e00\u4e2a\u65b9\u6848\u4e86\uff09\n\n\u800cu\uff0cv\u989c\u8272\u4e0d\u540c\n\n\u6240\u4ee5 **\u4e00\u6761\u8fb9\u5c31\u4ee3\u8868\u4e00\u4e2a\u65b9\u6848**\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5728\u904d\u5386\u5230\u6709\u6807\u8bb0\u7684\u8fb9\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\uff0c\u56e0\u4e3a\u5df2\u7ecf\u904d\u5386\u8fc7\u8fd9\u79cd\u65b9\u6848\u4e86\n\n\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u6761\u8fb9\u53ea\u904d\u5386\u4e00\u6b21\n\n```cpp\nif(usededge[j]) continue;\nusededge[j] = 1;usededge[j^1] = 1;\n//\u6807\u8bb0\u8fb9\u548c\u53cd\u5411\u8fb9\n```\n\n\n\u4f46\u662f\u5176\u5b9e\u6709\u4e9b\u5730\u65b9\u8fd8\u662f\u4e0d\u5fc5\u8981\u904d\u5386\u7684\uff0c\u56e0\u4e3a\u8fde\u901a\u5757\u662f\u4e00\u4e2a\u56fe\uff0c\u6709\u73af\uff0c\u5728\u4fbf\u5386\u65f6\u56e0\u4e3a\u6807\u8bb0\u70b9\u3001\u4e0d\u8d70\u73af\u7684\u539f\u56e0\uff0c\u4e0d\u4e00\u5b9a\u628a\u8fde\u901a\u5757\u4e2d\u6240\u6709\u7684\u8fb9\u90fd\u904d\u5386\u4e86\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u90fd\u6807\u8bb0\u5b8c\uff0c\u4e0b\u4e00\u6b21\u53ef\u80fd\u8fd8\u4f1a\u8d70\u5230\u8fd9\u4e9b\u6ca1\u6807\u8bb0\u7684\u8fb9\uff0c\u4e0d\u8fc7\u8fd8\u6ca1\u60f3\u597d\u600e\u4e48\u4f18\u5316\uff0c\u53ea\u6709\u7528\u6807\u8bb0\u70b9\u7a0d\u5fae\u4f18\u5316\u4e00\u4e0b\u3002\n\n### \u4f18\u5316 2 \u904d\u5386\u70b9\u4f18\u5316\n\n\u8ddf\u8fb9\u4f18\u5316\u5176\u5b9e\u6709\u4e00\u70b9\u91cd\u5408\uff0c\u6ca1\u6709\u8fb9\u4f18\u5316\u5f3a\u5927\uff0c\u4f46\u6211\u8fd8\u662f\u8981\u8bf4\u3002~~\u868a\u5b50\u8089\u4e5f\u662f\u8089~~\n\n\u56e0\u4e3a\u6211\u4eec\u662f\u6309\u987a\u5e8f\u6765\u7684\uff0c**\u904d\u5386\u5b8c\u4e00\u4e2a\u70b9\u540e\uff0c\u5c31\u662f\u628a\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u65b9\u6848\u90fd\u904d\u5386\u5b8c\u4e86\u3002**\n\n\u6240\u4ee5\u9047\u5230\u6bd4\u81ea\u5df1\u5c0f\u7684\u70b9\uff0c\u4e00\u5b9a\u662f\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65b9\u6848\u4e5f\u88ab\u904d\u5386\u8fc7\u4e86\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\n\n```cpp\n\nif(v<u) continue;\n\n\n```\n\n\n### \u4f18\u5316 3 \u7b54\u6848\u4f18\u5316\n\n\u5982\u679c\u7b54\u6848\u5927\u4e8e\u4e86\u9762\u79ef\u7684\u4e00\u534a\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u4e86\n\n```cpp\nif(ans>n*n/2) break;\n```\n\n  \n\u81f3\u6b64\uff0c\u5c31\u53ef\u4ee5\u8fc7\u6389\u8fd9\u9053\u9898\u5566\n\n# \u4ee3\u7801\n\n```cpp\n/*************************\nUser\uff1aMandy.H.Y\nLanguage:c++\nProblem:luogu 4380\n*************************/\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 62505;\n\nint q,n,cnt[maxn],size = 1,first[maxn];\n//size = 1,\u4fbf\u4e8e\u627e\u5230\u53cd\u5411\u8fb9 \nint color[maxn],num;\nint a[255][255];\nint vis[255][255];\nint used[maxn];\nbool usededge[maxn<<2];\n\nint ans = 0,tot;\nint dx[5] = {0,0,1,-1};\nint dy[5] = {1,-1,0,0};\n\nstruct Edge{\n    int v,nt;\n}edge[maxn << 2];\nstruct Node{\n    int x,y;\n};\ntemplate<class T>inline void read(T&x){\n    x = 0;char ch = getchar();bool flag = 0;\n    while(!isdigit(ch)) flag |= ch == '-',ch = getchar();\n    while(isdigit(ch)) x = (x << 1) + (x <<3) + (ch ^ 48),ch = getchar();\n    if(flag) x = -x;\n} \n\ntemplate<class T>void putch(const T x){\n    if(x > 9) putch(x / 10);\n    putchar(x % 10 | 48); \n} \n\ntemplate<class T>void put(const T x){\n    if(x < 0) putchar('-'),putch(-x);\n    else putch(x);\n}\n\nvoid file(){\n    freopen(\"4380.in\",\"r\",stdin);\n//    freopen(\"4380.out\",\"w\",stdout);\n}\n\nvoid readdata(){\n    read(n);\n    for(int i = 1;i <= n; ++ i)\n        for(int j = 1;j <= n; ++ j)\n            read(a[i][j]);\n}\n\nvoid eadd(int u,int v){\n    edge[++size].v = v;\n    edge[size].nt = first[u];\n    first[u] = size;\n}\n\nvoid bfs1(int sx,int sy){\n    ++tot;//\u8fde\u901a\u5757\u7684\u7f16\u53f7 \n    color[tot] = a[sx][sy];//\u8bb0\u4e0b\u8fde\u901a\u5757\u7684\u989c\u8272 \n    queue<Node>q;\n    q.push((Node){sx,sy});\n    vis[sx][sy] = tot;//\u6807\u8bb0\u8d77\u70b9 \n    while(!q.empty()){\n        Node u = q.front();\n        q.pop();\n        cnt[tot]++;//\u8bb0\u8fde\u901a\u5757\u7684\u6570\u91cf \n        for(int i = 0;i < 4; ++ i){\n            int nx = u.x + dx[i];\n            int ny = u.y + dy[i];\n            \n            if(nx <= 0 || ny <= 0 || nx > n || ny > n) continue;\n            if(!vis[nx][ny] && a[nx][ny] == a[sx][sy]){\n                q.push((Node){nx,ny});\n                vis[nx][ny] = tot;//\u4fdd\u8bc1\u53ea\u8fdb\u4e00\u6b21\u961f \n                continue;\n            } \n            \n            if(vis[nx][ny] && vis[nx][ny] < tot){\n                eadd(tot,vis[nx][ny]); \n                eadd(vis[nx][ny],tot); //\u8fde\u53cc\u5411\u8fb9 \n            }\n        }\n    }\n    ans = max(ans,cnt[tot]);\n}\n\nvoid bfs2(int s1,int s2){\n    queue<int>q;\n    num++;//num\u662f\u65b9\u6848\u7684\u7f16\u53f7 \uff08\u53cc\u8272\u8fde\u901a\u5757\u7684\u7f16\u53f7\uff09 \n    int tmp = 0;\n    q.push(s2);\n    q.push(s1);\n    used[s1] = num;\n    used[s2] = num; //\u4e0d\u5728\u540c\u4e00\u65b9\u6848\u4e2d\u8d70\u73af \n    \n    while(!q.empty()){\n        int u = q.front();\n        q.pop();\n        tmp += cnt[u];\n        for(int i = first[u];i;i = edge[i].nt){\n            int v = edge[i].v;\n            if(used[v] == num || v < s1) continue;//\u4f18\u53162 \n            if(color[v]!=color[s1] && color[v]!=color[s2]) continue;\n            if(usededge[i]) return;//\u4f18\u53161 \n            //\u8fd9\u91cc\u76f4\u63a5return\uff0c\u56e0\u4e3a\u662f\u4e00\u4e2a\u65b9\u6848\u90fd\u904d\u5386\u8fc7\n            //\u8fd9\u91cc\u4e5f\u8981\u52a0\u4e0a\u8fd9\u4e2a\u526a\u679d\uff0c \u56e0\u4e3a\u6709\u53ef\u80fd\u662f\u4e0a\u4e00\u6b21\u53cc\u8272\u8fde\u901a\u5757\u5224\u65ad\u70b9\u7684\u65f6\u5019\u5c31\u8fd4\u56de\u4e86\uff0c\u5c31\u6ca1\u6709\u6807\u8bb0\u8fb9\n            //\u4e3b\u7a0b\u5e8f\u91cc\u8fb9\u6ca1\u526a\u5b8c \n            usededge[i] = 1;usededge[i^1] = 1;//\u6807\u8bb0\u8fb9\u4e0e\u53cd\u5411\u8fb9 \n            used[v] = num;\n            q.push(v);\n        } \n    }\n    ans = max(ans,tmp);\n}\n\nvoid work(){\n//-----------------\u7b2c\u4e00\u95ee \n    for(int i = 1;i <= n; ++ i)\n        for(int j = 1;j <= n; ++ j){\n            if(!vis[i][j]) bfs1(i,j);\n        }\n    put(ans);puts(\"\");\n//-----------------\u7b2c\u4e8c\u95ee \n    ans = 0;\n    int maxans = (n*n)>>1;\n    for(int i = 1;i <= tot; ++ i){//\u6309\u5e8f\u904d\u5386\u5355\u8272\u8fde\u901a\u5757 \n        for(int j = first[i];j;j = edge[j].nt){\n            int v = edge[j].v;\n            if(v <= i) continue;//\u4f18\u53162 \n            if(color[v] == color[i]) continue;\n            if(usededge[j]) continue;\n            //\u8fd9\u91cc\u5148\u526a\u4e00\u90e8\u5206\u8fb9\uff0c\u524d\u9762\u904d\u5386\u8fc7\u7684\u53cc\u8272\u8fde\u901a\u5757\u91cc\u7684\u8fb9\u4e0d\u4e00\u5b9a\u90fd\u6807\u8bb0\u5b8c\u4e86 \n            usededge[j] = 1;usededge[j^1] = 1;//\u4f18\u53161 \n            bfs2(i,v);\n            if(ans > maxans) break; //\u4f18\u53163 \n        }\n    }\n    put(ans);\n} \n\nint main(){\n//    file();\n    readdata();\n    work();\n    return 0;\n}\n\n```\n",
        "postTime": 1568637219,
        "uid": 38643,
        "name": "Mandy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4380 \u3010[USACO18OPEN]Multiplayer Moo\u3011"
    },
    {
        "content": "# \u5173\u4e8eHACK\n\n\u4e4b\u524d\u6211\u4e5f\u662f\u50cf\u7b2c\u4e8c\u7bc7\u9898\u89e3\u4e00\u6837\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u53d1\u73b0\u8fd9\u6837\u662f\u9519\u7684\u3002\n\n`(!mmp[mp[i][j]][mp[frx][fry]])`\n\n\n\u8fd9\u4e00\u53e5\u8bdd\u7684\u5224\u65ad\u53c8\u660e\u663e\u7684\u95ee\u9898\uff0c\u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u5728\u5de6\u4e0a\u89d2\u914d\u8fc7\u4e86\u4e24\u79cd\u989c\u8272\uff0c\n\n\u4f46\u540c\u6837\u7684\u989c\u8272\u914d\u5bf9\u5728\u53f3\u4e0b\u89d2\u7684\u8054\u901a\u5757\u5927\u4e8e\u5de6\u4e0a\u89d2\uff0c\u4f46\u56e0\u4e3a\u5de6\u4e0a\u89d2\u5df2\u7ecf\u641c\u8fc7\u4e86\uff0c\u6b64\u65f6\u53f3\u4e0b\u89d2\u4e0d\u4f1a\u641c\u5230\u3002\n\n\u4f8b\u5982\u8fd9\u4e2a\u6570\u636e\n\n```\n5\n5 3 5 7 9\n3 3 3 2 1 \n8 9 10 11 12\n5 5 5 5 5\n3 3 3 3 3\n```\n\u6b63\u786e\u7b54\u6848\u662f10,\u9519\u89e36\u3002\n\n\u6216\u8fd9\u4e2a\n```\n5\n1 1 9 8 8   \n1 2 7 6 1\n5 4 3 2 2\n11 10 9 2 1\n1 2 1 2 1\n```\n\u6b63\u786e\u7b54\u6848\u662f10,\u9519\u89e34\u3002\n\n\u66f4\u591a\u6570\u636e\u8bf7\u770b\u8ba8\u8bba\n\n\u4e0d\u52a0\u8fd9\u4e2a\u4f18\u5316\u53c8\u4f1aTLE\uff0c\u6211\u53c8\u4e0d\u60f3\u6362\u7b97\u6cd5\uff0c\u90a3\u600e\u4e48\u529e\u5462\n\n\u4e8e\u662f\u5728\u6b64\u63d0\u4f9b\u4e00\u79cd\u6bd4\u8f83\u96be\u53c9\u6389\u7684\u968f\u673a\u7b97\u6cd5\n\n~~\uff08\u6b22\u8fce\u5927\u5bb6\u6765\u53c9\u6389\uff09~~\n\n# \u9898\u89e3\n\n\u9996\u5148\u5927\u5bb6\u90fd\u77e5\u9053\u8fd9\u9898\u662f\u4e2a\u66b4\u529b\u641c\u7d22\uff0c\u7b2c\u4e00\u95ee\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u66b4\u529bdfs\n\n\u5173\u952e\u662f\u7b2c\u4e8c\u95ee\uff0c\u6211\u4eec\u5982\u4f55\u627e\u5230\u4e24\u79cd\u989c\u8272\u6765bfs\n\n## - 1.\u6211\u4f1a\u679a\u4e3e\n\n\u65e2\u7136\u5df2\u7ecf\u8bf4\u4e86\u524d\u9762\u4e00\u79cd\u4f18\u5316\u662f\u9519\u7684\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u4e0d\u8003\u8651\u989c\u8272\u3002\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u83b7\u5f97TLE\u4e00\u4e2a\u70b9\u7684\u597d\u6210\u7ee9\n\n\u4ee3\u7801\u5982\u4e0b\n\n```\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int N=300;\nconst int M=1e6+10;\nint mp[N][N],ans2,n,m,ans,col[M],tmp,ans1;\nbool vis[N][N],flag[N][N];\nint dx[]={1,0,-1,0};\nint dy[]={0,-1,0,1};\nmap<int,bool>match[M];\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nvoid dfs(int x,int y)\n{\n    vis[x][y]=1;\n    tmp++;\n    for(int i=0;i<4;i++)\n    {\n        int tx=x+dx[i];\n        int ty=y+dy[i];\n        if(!tx||!ty||tx>n||ty>n||vis[tx][ty])continue;\n        if(mp[tx][ty]==mp[x][y])dfs(tx,ty);\n    }\n}\nstruct point\n{\n    int x,y;\n};\nvoid bfs(int stx,int sty,int sttx,int stty)//\u76f4\u63a5\u66b4\u529bbfs\n{\n    tmp=1;\n    memset(flag,0,sizeof(flag));//\u5176\u5b9e\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u4f18\u5316\n    queue<point>q;\n    q.push((point){stx,sty});\n    flag[stx][sty]=1;\n    while(!q.empty())\n    {\n         int x=q.front().x,y=q.front().y;\n         q.pop();\n         for(int i=0;i<4;i++)\n         {\n             int tx=x+dx[i];\n             int ty=y+dy[i];\n             if(!tx||!ty||tx>n||ty>n||flag[tx][ty])continue;\n             if(mp[tx][ty]!=mp[stx][sty]&&mp[tx][ty]!=mp[sttx][stty])continue;\n             tmp++;\n             flag[tx][ty]=1;\n             q.push((point){tx,ty});\n         }\n\n    }\n    ans2=max(ans2,tmp);\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n        mp[i][j]=read();\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n        if(!vis[i][j])tmp=0,dfs(i,j),col[mp[i][j]]=max(col[mp[i][j]],tmp),ans1=max(ans1,col[mp[i][j]]);\n    printf(\"%d\\n\",ans1);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n    {\n         for(int k=0;k<4;k++)\n         {\n             int tx=i+dx[k];\n             int ty=j+dy[k];\n             if(!tx||!ty||tx>n||ty>n||mp[tx][ty]==mp[i][j])continue;\n             bfs(i,j,tx,ty);//\u6bcf\u6b21\u66b4\u529b\u627e\u5468\u8fb9\u7684\u70b9\u8fdb\u884cbfs\n         }\n     }\n     printf(\"%d\",ans2);\n    return 0;\n}\n```\n\n## - 2.\u6211\u4f1a\u968f\u673a\u5316\n\n\u57fa\u4e8e\u4e4b\u524d\u7684\u679a\u4e3e\uff0c\u6211\u4eec\u52a0\u5165\u968f\u673a\u5316\u64cd\u4f5c\u3002\n\n### 1.\u6211\u4f1arand_shuffle\n\n\u4e4b\u524d\u662f\u4ece\u5934\u679a\u4e3e\u5230\u5c3e\uff0c\u8fd9\u4e00\u6b21\u6211\u4eec\u7528rand_shuffle\u968f\u673a\u4e00\u4e2a\u6392\u5217\uff0c\u6309\u8fd9\u4e2a\u987a\u5e8f\u8fdb\u884cbfs\n\n\u6211\u4eec\u60ca\u5947\u7684\u53d1\u73b0\uff0c\u6210\u529fA\u6389\u4e86\u8fd9\u9898\uff0c\u5305\u62echack\u7684\u6570\u636e\uff01\uff01\uff01\n\n\u5f53\u7136\u6211\u4eec\u8fd8\u8981\u52a0\u5165\u5361\u65f6\u95f4\u64cd\u4f5c\n\n\u7b2c\u4e00\u79cd\u968f\u673a\u5316\u64cd\u4f5c\uff0c\u6b63\u786e\u6027\u8fd8\u662f\u6bd4\u8f83\u9ad8\u7684\n```\n    pair<int,int>rak[N*N];\n    int cnt=0;\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=n;j++)\n      rak[++cnt]=make_pair(i,j);\n      random_shuffle(rak+1,rak+1+cnt);\n      int t=1;\n     while (t <= cnt && t <= n * n && (double)clock() / CLOCKS_PER_SEC < 0.9) \n     {\n     \t  int i=rak[t].first,j=rak[t].second;\n     \t for(int k=0;k<4;k++)\n         {\n             int tx=i+dx[k];\n             int ty=j+dy[k];\n             if(!tx||!ty||tx>n||ty>n||mp[tx][ty]==mp[i][j])continue;\n             bfs(i,j,tx,ty);\n         }\n     \tt++;\n     }\n```\n\n### 2.\u6211\u8fd8\u4f1a\u76f4\u63a5\u66b4\u529brand()\n \n\u6211\u4eec\u4e0d\u7528rand_shuffle\u4e00\u4e2a\u987a\u5e8f\uff0c\u76f4\u63a5\u6bcf\u6b21rand\u4e24\u4e2a\u70b9\uff0c\n\n\u867d\u7136\u6709rand\u5230\u4e24\u4e2a\u76f8\u540c\u70b9\u7684\u673a\u7387\uff0c\u4f46\u662f\u8fd9\u6837\u88ab\u53c9\u6389 \u7684\u673a\u7387\u5f88\u9ad8\n\n\u8fd8\u662frand_shuffle\u66f4\u4f18\u79c0\n\n```\n   srand(unsigned(time(NULL)));\n    for(int s=1;s<=60000;s++)\n    {\n        if( (double)clock() / CLOCKS_PER_SEC >= 0.9)break;\n        int i=rand()%n+1,j=rand()%n+1;\n         for(int k=0;k<4;k++)\n         {\n             int tx=i+dx[k];\n             int ty=j+dy[k];\n             if(!tx||!ty||tx>n||ty>n||mp[tx][ty]==mp[i][j])continue;\n             bfs(i,j,tx,ty);\n         }\n    }\n    \n```\n\n## - 3.\u6211\u8fd8\u4f1a\u65f6\u95f4\u6233\u4f18\u5316\n\n\u6211\u4eec\u53d1\u73b0\u5728\u6bcf\u6b21bfs\u7684\u8fc7\u7a0b\u4e2d\u5176\u5b9e\u6ca1\u5fc5\u8981\u6bcf\u6b21\u90fdmemset\u4e00\u4e0b\uff0c\n\n\u628a`flag`\u53d8\u6210`int`\u7c7b\u578b\uff0c\u589e\u52a0\u4e00\u4e2a\u65f6\u95f4\u53d8\u91cf`TIM_CNT`\n\n```\nvoid bfs(int stx,int sty,int sttx,int stty)\n{\n    tmp=1;\n    TIM_CNT++;//\u65f6\u95f4\u6233\u4f18\u5316\n    queue<point>q;\n    q.push((point){stx,sty});\n    flag[stx][sty]=TIM_CNT;\n    while(!q.empty())\n    {\n         int x=q.front().x,y=q.front().y;\n         q.pop();\n         for(int i=0;i<4;i++)\n         {\n             int tx=x+dx[i];\n             int ty=y+dy[i];\n             if(!tx||!ty||tx>n||ty>n||flag[tx][ty]==TIM_CNT)continue;\n             if(mp[tx][ty]!=mp[stx][sty]&&mp[tx][ty]!=mp[sttx][stty])continue;\n             tmp++;\n             flag[tx][ty]=TIM_CNT;//\u628aflag\u8d4b\u503c\u4e3a\u5f53\u524d\u65f6\u95f4\n             q.push((point){tx,ty});\n         }\n\n    }\n    ans2=max(ans2,tmp);\n}\n```\n\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u6837\u5c31\u53c8\u5feb\u4e86\u63a5\u8fd11000ms\uff0c\u662f\u771f\u7684\u975e\u5e38\u6709\u7528\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u53d1\u73b0\u968f\u673a\u5316\u771f\u7684\u96be\u5361\u6389\uff0c\u53ef\u4ee5\u8bf4\u9664\u4e86\u6162\u4e86\u4e00\u4e9b\u771f\u7684\u975e\u5e38\u4f18\u79c0\u3002\n\n",
        "postTime": 1541647464,
        "uid": 55501,
        "name": "Aoki_\u704f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4380 \u3010[USACO18OPEN]Multiplayer Moo\u3011"
    },
    {
        "content": "### \u524d\u8a00\uff1a\n\u6b64\u9898\u89e3\u975e\u6b63\u89e3\uff08~~\u6211\u662f\u4e0d\u4f1a\u627f\u8ba4\u6211\u4e0d\u4f1a\u6b63\u89e3\u7684~~\uff09\uff0c\u53ea\u80fd\u5199\u4e2a\u66b4\u529b\u5566\uff0c\u51b5\u4e14\u66b4\u529b\u4e0d\u5f00 $O2$ \u4f3c\u4e4e\u4e5f\u80fd\u8fc7\uff08\u53ea\u80fd\u602a\u6570\u636e\u592a\u5f31\uff09\n\n##  \u7b2c\u4e00\u95ee\n\n\u4f3c\u4e4e\u6ca1\u5565\u597d\u8bf4\u7684\uff0c$Dfs$ \u6216 $Bfs$ \u5e76\u8fd0\u7528 Flood-Fill \u7b97\u6cd5\uff08\u8bdd\u8bf4\u6211\u539f\u6765\u8fd8\u4e0d\u77e5\u9053\u8fd9\u4e2a\u8fde\u901a\u5757\u7b97\u6cd5\u6709\u8fd9\u4e2a\u540d\u5b57\uff09\u6c42\u8fde\u901a\u5757\u5373\u53ef ~~\u677f\u5b50\u5927\u6cd5\u597d~~\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\nint bfs1(int x, int y) {\n\tint ans(0);\n\tqueue<node> que;\n\tnode t, s;\n\tt = (node){x, y};\n\tmark[x][y] = 1;\n\tque.push(t);\n\twhile (!que.empty()) {\n\t\tt = que.front();\n\t\tque.pop();\n\t\tans++;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\ts.x = t.x + dxy[i][0];\n\t\t\ts.y = t.y + dxy[i][1];\n\t\t\tif (s.x >= 1 && s.x <= n && s.y >= 1 && s.y <= n && !mark[s.x][s.y] && mp[s.x][s.y] == mp[t.x][t.y]) {\n\t\t\t\tmark[s.x][s.y] = 1;\n\t\t\t\tque.push(s);\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\n```\n\n##  \u7b2c\u4e8c\u95ee\n\n\u4e0a\u66b4\u529b\uff01\n\n**\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\uff0c\u5224\u65ad\u5b83\u4eec\u80fd\u5426\u7ec4\u961f\uff0c\u5982\u679c\u53ef\u4ee5\u5219\u8ba1\u7b97\u7ec4\u961f\u540e\u7684\u6700\u5927\u9886\u57df\u5373\u53ef\u3002**\n\n\u4f46\u662f\uff0c\u8981\u662f\u641c\u91cd\u590d\u4e86\u5462\uff1f\u8981\u77e5\u9053\u8fd9\u662f\u5fc5\u7136\u53d1\u751f\u7684\u3002\u548b\u529e\u5462\uff1f\n\nMAP \u5927\u6cd5\u597d\uff01\uff01\uff01\n\n**\u5b9a\u4e49 ``map<int, map<int, bool> > vis;`` \uff0c\u800c ``vis[a][b]`` \u8868\u793a\u8fd9\u4e24\u70b9\u662f\u5426\u5df2\u7ecf\u8bd5\u7ec4\u961f\u8fc7\uff0c\u518d\u5728\u66b4\u529b\u65f6\u5224\u65ad\u4e00\u4e0b\u5373\u53ef\u3002**\n\n\u4e0a\u4ee3\u7801~~\u83dc~~\uff1a\n\n```cpp\nint bfs2(int x, int y, int x1, int y1) {\n\tmemset(mark, 0, sizeof(mark));\n\tint ans(0);\n\tint used1 = mp[x][y], used2 = mp[x1][y1];\n\tqueue<node> que;\n\tnode t, s;\n\tt = (node){x, y};\n\tmark[x][y] = 1;\n\tque.push(t);\n\twhile (!que.empty()) {\n\t\tt = que.front();\n\t\tque.pop();\n\t\tans++;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\ts.x = t.x + dxy[i][0];\n\t\t\ts.y = t.y + dxy[i][1];\n\t\t\tif (s.x >= 1 && s.x <= n && s.y >= 1 && s.y <= n && !mark[s.x][s.y] && (mp[s.x][s.y] == used1 || mp[s.x][s.y] == used2)) {\n\t\t\t\tmark[s.x][s.y] = 1;\n\t\t\t\tque.push(s);\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\n```\n\n\u4e3b\u7a0b\u5e8f\u90e8\u5206\uff1a\n\n```cpp\nfor (int i = 1; i <= n; i++) {\n\tfor (int j = 1; j <= n; j++) {\n\t\tfor (int k = 0; k < 4; k++) { // \u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9 \n\t\t\tint frx = i + dxy[k][0];\n\t\t\tint fry = j + dxy[k][1];\n\t\t\tif (frx >= 1 && frx <= n && fry >= 1 && fry <= n && mp[i][j] != mp[frx][fry] && !vis[mp[i][j]][mp[frx][fry]]) {\n\t\t\t\tans2 = max(ans2, bfs2(i, j, frx, fry)), vis[mp[i][j]][mp[frx][fry]] = vis[mp[frx][fry]][mp[i][j]] = 1;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\u6700\u7ec8\u4ee3\u7801:\n\n```cpp\n#include <bits/stdc++.h>\nconst int N = 3e2 + 5;\nusing namespace std;\ninline int read() {\n\tint s=0, w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\nint n, ans1, ans2;\nint dxy[4][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\nint mp[N][N];\nbool mark[N][N];\nmap<int, map<int, bool> > vis;\nstruct node {\n\tint x;\n\tint y;\n};\nint bfs1(int x, int y) {\n\tint ans(0);\n\tqueue<node> que;\n\tnode t, s;\n\tt = (node){x, y};\n\tmark[x][y] = 1;\n\tque.push(t);\n\twhile (!que.empty()) {\n\t\tt = que.front();\n\t\tque.pop();\n\t\tans++;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\ts.x = t.x + dxy[i][0];\n\t\t\ts.y = t.y + dxy[i][1];\n\t\t\tif (s.x >= 1 && s.x <= n && s.y >= 1 && s.y <= n && !mark[s.x][s.y] && mp[s.x][s.y] == mp[t.x][t.y]) {\n\t\t\t\tmark[s.x][s.y] = 1;\n\t\t\t\tque.push(s);\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nint bfs2(int x, int y, int x1, int y1) {\n\tmemset(mark, 0, sizeof(mark));\n\tint ans(0);\n\tint used1 = mp[x][y], used2 = mp[x1][y1];\n\tqueue<node> que;\n\tnode t, s;\n\tt = (node){x, y};\n\tmark[x][y] = 1;\n\tque.push(t);\n\twhile (!que.empty()) {\n\t\tt = que.front();\n\t\tque.pop();\n\t\tans++;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\ts.x = t.x + dxy[i][0];\n\t\t\ts.y = t.y + dxy[i][1];\n\t\t\tif (s.x >= 1 && s.x <= n && s.y >= 1 && s.y <= n && !mark[s.x][s.y] && (mp[s.x][s.y] == used1 || mp[s.x][s.y] == used2)) {\n\t\t\t\tmark[s.x][s.y] = 1;\n\t\t\t\tque.push(s);\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n\t// freopen(\"multimoo.in\", \"r\", stdin);\n\t// freopen(\"multimoo.out\", \"w\", stdout);\n\tn = read();\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tmp[i][j] = read();\n\tfor (int i = 1; i <= n; i++) // \u7b2c\u4e00\u95ee \n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tif (!mark[i][j])\n\t\t\t\tans1 = max(ans1, bfs1(i, j)); // \u679a\u4e3e\u6bcf\u4e2a\u70b9\u6c42\u8fde\u901a\u5757 \n\tprintf(\"%d\\n\", ans1);\n\t\n\tmemset(mark, 0, sizeof(mark));\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\tfor (int k = 0; k < 4; k++) { // \u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9 \n\t\t\t\tint frx = i + dxy[k][0];\n\t\t\t\tint fry = j + dxy[k][1];\n\t\t\t\tif (frx >= 1 && frx <= n && fry >= 1 && fry <= n && mp[i][j] != mp[frx][fry] && !vis[mp[i][j]][mp[frx][fry]]) {\n\t\t\t\t\tans2 = max(ans2, bfs2(i, j, frx, fry)), vis[mp[i][j]][mp[frx][fry]] = vis[mp[frx][fry]][mp[i][j]] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans2);\n\treturn 0;\n}\n```\n",
        "postTime": 1604468972,
        "uid": 341650,
        "name": "_504",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4380 \u3010[USACO18OPEN]Multiplayer Moo S\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u7b2c\u4e00\u95ee\u53ef\u4ee5\u76f4\u63a5\u5728\u7ed9\u7684\u5730\u56fe\u4e0a Flood-Fill\uff0c\u53ef\u4ee5 BFS \u4e5f\u53ef\u4ee5\u5e76\u67e5\u96c6\u627e\u8fde\u901a\u5757\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5dee\u4e0d\u591a\u3002\n\n\u7b2c\u4e8c\u95ee\u6bd4\u8f83\u96be\u3002\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u7684\u662f\u66b4\u529b\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u5757\u627e\u4e0e\u5b83\u76f8\u8fde\u7684\u53e6\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u7136\u540e\u8bd5\u56fe\u628a\u8fd9\u4e24\u4e2a\u8fde\u901a\u5757\u7ec4\u5408\uff0c\u6bcf\u6b21\u53bb\u8ba1\u7b97\u4e00\u4e0b\u3002\n\n\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u975e\u5e38\u9ad8\uff0c\u6240\u4ee5\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e\u7684\u505a\u6cd5\u3002\u63a5\u4e0b\u6765\u4ecb\u7ecd\u8fd9\u79cd\u505a\u6cd5\u3002\n\n### 1.1 \u7b2c\u4e00\u6b65\n\n\u65e2\u7136\u8981\u7ed9\u8fde\u901a\u5757\u627e\u4e0e\u5b83\u76f8\u8fde\u7684\u8fde\u901a\u5757\uff0c\u4e0d\u59a8\u628a\u8fde\u901a\u5757\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u5b83\u76f8\u8fde\u7684\u8fde\u901a\u5757\u5efa\u65e0\u5411\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8f83\u5feb\u5730\u77e5\u9053\u5b83\u5468\u56f4\u7684\u8fde\u901a\u5757\u3002\u7531\u8fd9\u4e9b\u8fde\u901a\u5757\u5f97\u5230\u7684\u56fe\u4e0a\u6bcf\u4e2a\u70b9\u5b58\u5728\u70b9\u6743\uff0c\u70b9\u6743\u5373\u4e3a\u5bf9\u5e94\u8fde\u901a\u5757\u7684\u5927\u5c0f\u3002\n\n\u8fd9\u4e00\u6b65\u53ef\u4ee5\u653e\u5728\u89e3\u51b3\u7b2c\u4e00\u95ee\u7684\u65f6\u5019\u987a\u4fbf\u505a\u3002\n\n\u6ce8\u610f\u8981\u7ed9\u6bcf\u4e2a\u8fde\u901a\u5757\u91cd\u65b0\u7f16\u53f7\uff0c\u5426\u5219\u5bf9\u4e8e\u4e24\u5757\u5c5e\u4e8e\u540c\u4e00\u4eba\u4f46\u5206\u5f00\u7684\u8fde\u901a\u5757\uff0c\u4f60\u7684\u7a0b\u5e8f\u4f1a\u8ba4\u4e3a\u662f\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n### 1.2 \u7b2c\u4e8c\u6b65\n\n\u5bf9\u4e8e\u76f8\u90bb\u7684\u8fde\u901a\u5757\u5efa\u65e0\u5411\u8fb9\u540e\uff0c\u4f60\u4fbf\u53ef\u4ee5\u5728\u5f97\u5230\u7684\u56fe\u91cc\uff0c\u9488\u5bf9\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u4e0e\u5b83\u76f8\u90bb\u7684\u8fde\u901a\u5757\u505a BFS \u7b97\u7b2c\u4e8c\u95ee\u7684\u7b54\u6848\uff0c\u53ef\u60dc\u8fd8\u662f\u592a\u6162\u4e86\uff0c\u6240\u4ee5\u8003\u8651\u66f4\u6539 BFS \u7684\u65b9\u5f0f\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u4e00\u79cd\u5361\u6389\u8fd9\u79cd\u505a\u6cd5\u7684\u8f93\u5165\uff1a\n\n```\n250\n1 2 1 2 1 2 ...\n2 1 2 1 2 1 ...\n1 2 1 2 1 2 ...\n...\n```\n\n\u5728\u8fd9\u79cd\u8f93\u5165\u91cc\uff0c\u6bcf\u4e00\u4e2a\u70b9 BFS \u90fd\u4f1a\u4e00\u76f4\u6269\u5c55\u5230\u6574\u4e2a\u68cb\u76d8\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u7b97\u6cd5\u5c31\u88ab\u5361\u6210\u4e86 $O(N^4)$\uff0c\u6240\u4ee5\u8003\u8651\u66f4\u597d\u7684\u65b9\u6cd5\u3002\n\n\u5bb9\u6613\u60f3\u5230\u5728\u8fd9\u9053\u9898\u91cc\uff0c\u591a\u6b21\u8d70\u91cd\u590d\u7684\u8fb9\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\uff0c\u56e0\u6b64\u5f00\u4e00\u4e2a $\\texttt{map}$ \u5b58\u8fb9\u662f\u5426\u8d70\u8fc7\u3002\n\n\u5728\u907f\u514d\u8d70\u91cd\u590d\u8fb9\u7684\u540c\u65f6\u4e5f\u8981\u8bb0\u5f55\u662f\u5426\u8d70\u4e86\u91cd\u590d\u70b9\u3002\u6ce8\u610f\u5728\u8fd9\u91cc BFS \u7684\u65f6\u5019\uff0c\u6bcf\u6b21 BFS \u524d\u8981\u6e05\u6389\u6807\u8bb0\u70b9\u7684\u6570\u7ec4\uff0c\u800c\u4e0d\u8981\u6e05\u6389\u6807\u8bb0\u8fb9\u7684\u6570\u7ec4\u3002\n\n\u5728 BFS \u5185\u8981\u5199\u68c0\u67e5\u662f\u5426\u8d70\u5230\u4e86\u91cd\u590d\u8fb9\u7684\u4ee3\u7801\uff0c\u5982\u679c\u68c0\u67e5\u5230\u4e86\u90a3\u4e48\u8fd9\u6b21 BFS \u6ca1\u6709\u610f\u4e49\uff0c\u76f4\u63a5\u9000\u51fa BFS\u3002\n\n\u5728\u6bcf\u6b21 BFS \u4e2d\uff0c\u5982\u679c\u4e0d\u80fd\u591f\u518d\u6269\u5c55\u4e14\u4e0d\u662f\u65e0\u610f\u4e49\u7684 BFS\uff0c\u5219\u628a BFS \u4e2d\u9047\u5230\u7684\u8fde\u901a\u5757\u7684\u5927\u5c0f\u6c42\u548c\u6700\u540e\u548c\u7b54\u6848\u53d6 $\\max$\u3002\n\n## \u4ee3\u7801\n\n\u524d\u534a\u90e8\u5206\u5c06\u8be6\u7ec6\u89e3\u91ca\u5404\u90e8\u5206\u4ee3\u7801\u7684\u6253\u6cd5\uff0c\u540e\u9762\u4e00\u5c0f\u90e8\u5206\u4f1a\u8bb2\u5982\u4f55\u5361\u5e38\u901a\u8fc7 #9\uff0c#10\uff0chack\u3002\n\n### 2.1 \u89e3\u51b3\u7b2c\u4e00\u95ee\n\n\u4f7f\u7528\u4e00\u4e2a $\\texttt{queue}$ \u8fdb\u884c BFS \u627e\u8fde\u901a\u5757\uff0c\u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u7b97\u51fa\u6765\u7684\u4e1c\u897f\u4e0d\u53ea\u662f\u8fde\u901a\u5757\uff08\u52a1\u5fc5\u4ed4\u7ec6\u770b\u5b83\u4eec\u7684\u4f5c\u7528\uff0c\u7b2c\u4e8c\u95ee\u5c06\u975e\u5e38\u4f9d\u8d56\u5b83\u4eec\uff09\uff1a\n\n- $tnt$ \u662f\u7f16\u53f7\uff0c\u6765\u4e00\u4e2a\u65b0\u7684\u8fde\u901a\u5757\u7ed9\u4e00\u4e2a\u65b0\u7684\u7f16\u53f7\u3002\u6700\u7ec8\u7684\u7f16\u53f7\u662f\u4e92\u4e0d\u76f8\u540c\u7684\u3002\n- $cnt$ \u7528\u4e8e\u5b58\u50a8\u8be5\u4f4d\u7f6e\u6240\u5728\u8fde\u901a\u5757\u7684\u7f16\u53f7\u3002\n- $is$ \u7528\u4e8e\u5b58\u50a8\u8be5\u7f16\u53f7\u4e0b\u7684\u8fde\u901a\u5757\u7684\u5b9e\u9645\u503c\u3002\n- $num$ \u7528\u4e8e\u5b58\u50a8\u8be5\u7f16\u53f7\u8868\u793a\u7684\u8fde\u901a\u5757\u5927\u5c0f\u3002\n\n\n```\nfor(int i=1;i<=n;i++){\n\tfor(int j=1;j<=n;j++){\n\t\tif(!vis[i][j]){\n\t\t\tint sum=0;\n\t\t\tvis[i][j]=1;\n\t\t\tq.push(mp(i,j));//\u521d\u59cb\u5316\n\t\t\twhile(!q.empty()){\n\t\t\t\tsum++;\n\t\t\t\tint x=q.front().first;\n\t\t\t\tint y=q.front().second;\n\t\t\t\tcnt[x][y]=tnt;//\u544a\u8bc9\u8fd9\u4e2a\u70b9\u6240\u5728\u8fde\u901a\u5757\u7684\u7f16\u53f7\n\t\t\t\tq.pop();//\u8bb0\u5f97 pop\n\t\t\t\tfor(int p=0;p<4;p++){\n\t\t\t\t\tint yh=x+dx[p],hx=y+dy[p];\n\t\t\t\t\tif(yh>n||hx>n||yh<1||hx<1||vis[yh][hx]||a[yh][hx]!=a[x][y]){\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvis[yh][hx]=1; \n\t\t\t\t\tq.push(mp(yh,hx));//\u8bb0\u5f97 push\n\t\t\t\t}\n\t\t\t}\n\t\t\tnum[tnt]=sum;//\u5904\u7406\u7f16\u53f7\u4e3a tnt \u7684\u8fde\u901a\u5757\u7684\u5927\u5c0f\n\t\t\tis[tnt]=a[i][j];//\u5904\u7406\u7f16\u53f7\u4e3a tnt \u7684\u8fde\u901a\u5757\u7684\u5b9e\u9645\u503c\n\t\t\ttnt++;\n\t\t\tans=max(ans,sum);\n\t\t}\n\t}\n}\ncout<<ans<<endl;\n```\n\n### 2.2 \u76f8\u90bb\u8fde\u901a\u5757\u5efa\u8fb9\n\n\u4ece\u8fd9\u91cc\u5f00\u59cb\uff0c\u5bf9\u8fde\u901a\u5757\u7684\u64cd\u4f5c\u90fd\u5728\u5b83\u4eec\u7684\u7f16\u53f7\u4e0a\u8fdb\u884c\uff0c\u800c\u4e0d\u4f1a\u5bf9\u68cb\u76d8\u8fdb\u884c\u64cd\u4f5c\u3002\n\n$n^2$ \u679a\u4e3e\u4efb\u610f\u4e24\u70b9\uff0c\u5148\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u5728\u540c\u4e00\u8fde\u901a\u5757\u5185\u4e14\u5728\u68cb\u76d8\u8303\u56f4\u5185\uff08\u4f7f\u7528\u521a\u521a\u7b97\u51fa\u6765\u7684 $cnt$ \u68c0\u67e5\uff09\uff0c\u518d\u7528 $\\texttt{map}$ \u68c0\u67e5\u5206\u522b\u6240\u5728\u7684\u8fde\u901a\u5757\u662f\u5426\u5df2\u7ecf\u5efa\u8fb9\uff08\u9632\u6b62\u5efa\u91cd\u8fb9\u63d0\u5347\u6548\u7387\uff09\u3002\n\n\u5982\u679c\u901a\u8fc7\u4e86\u6240\u6709\u68c0\u67e5\uff0c\u5c06\u8fd9\u4e24\u4e2a\u8fde\u901a\u5757\u95f4\u8fde\u8fb9\u5e76\u6807\u8bb0\u5b83\u4eec\u5df2\u7ecf\u8fde\u8fb9\u3002\n\n```\nfor(int i=1;i<=n;i++){\n\tfor(int j=1;j<=n;j++){\n\t\tfor(int p=0;p<4;p++){\n\t\t\tint yh=i+dx[p],hx=j+dy[p];\n\t\t\tif(yh>n||hx>n||yh<1||hx<1||cnt[yh][hx]==cnt[i][j]){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(mup.count(mp(cnt[i][j],cnt[yh][hx]))){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvp[cnt[i][j]].push_back(cnt[yh][hx]);\n\t\t\tvp[cnt[yh][hx]].push_back(cnt[i][j]);\n\t\t\tmup[mp(cnt[i][j],cnt[yh][hx])]=mup[mp(cnt[yh][hx],cnt[i][j])]=1;\n\t\t}\n\t}\n}\n```\n\n\u8fde\u5b8c\u8fb9\u4e4b\u540e\uff0c\u8fde\u901a\u5757\u5c31\u53d8\u6210\u4e86\u70b9\uff0c\u76f8\u90bb\u7684\u8fde\u901a\u5757\u5efa\u4e86\u8fb9\uff0c\u539f\u9898\u5c31\u53d8\u6210\u4e86\u56fe\u8bba\u3002\n\n### 2.3 \u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u679a\u4e3e\u6bcf\u4e2a\u4e0e\u5b83\u76f8\u90bb\u7684\u70b9\n\n\u8fd9\u4e00\u6b65\u6bd4\u8f83\u590d\u6742\uff0c\u56e0\u6b64\u518d\u505a\u62c6\u5206\u8bb2\u89e3\u3002\n\n\u5728\u8fd9\u4e00\u6bb5\u91cc\u9762\uff0c\u70b9\u548c\u8fde\u901a\u5757\u7684\u610f\u601d\u662f\u4e00\u6837\u7684\u3002\n\n#### 2.3.1 BFS \u4e4b\u524d\u7684\u51c6\u5907\n\n\u7528\u4e00\u4e2a $\\texttt{map}$\uff08\u6b64\u5904\u7684 $muup$\uff09 \u53bb\u6807\u8bb0\u8d70\u8fc7\u7684\u8fb9\u3002\u8fd8\u8981\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\uff08\u6b64\u5904\u7684 $muuup$\uff09\u53bb\u6807\u8bb0\u8d70\u8fc7\u7684\u70b9\u3002BFS \u5f00\u59cb\u4e4b\u524d\u8981\u521d\u59cb\u5316\u3002\n\n\u4f7f\u7528 `q1=queue<int>()` \u53ef\u4ee5\u9ad8\u6548\u7387\u5730\u6e05\u7a7a\u961f\u5217\u3002\n\n\n```\nfor(int i=1;i<tnt;i++){\n\tfor(int j=0;j<vp[i].size();j++){\n\t\tint tql=vp[i][j];//\u53d6\u51fa\u76f8\u90bb\u70b9\n\t\tif(muup.count(mp(i,tql))){//\u82e5\u8fd9\u4e24\u70b9\u95f4\u7684\u8fb9\u66fe\u7ecf\u8d70\u8fc7\uff0c\u76f4\u63a5\u5224\u5b9a\u8fd9\u6b21 BFS \u6ca1\u6709\u610f\u4e49\u3002\n\t\t\tcontinue;\n\t\t}\n        memset(muuup,0,sizeof(muuup));//\u628a\u6e05\u7a7a\u653e\u5728\u5224\u5b9a\u4e4b\u540e\u53ef\u4ee5\u51cf\u5c11\u5f88\u591a\u65e0\u610f\u4e49\u7684\u6e05\u7a7a\uff0c\u6b63\u662f\u56e0\u6b64\uff0c\u6211\u5728\u8fd9\u91cc\u5361\u5e38\u5361\u4e86\u5f88\u4e45\n\t\tint sum=num[i]+num[tql];//sum \u521d\u59cb\u503c\u4e3a\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\u548c\uff0c\u540e\u9762\u6211\u4eec\u6269\u5c55\u7684\u65f6\u5019\u4e0d\u4f1a\u8ba1\u7b97\u521d\u59cb\u7684\u4e24\u4e2a\u8fde\u901a\u5757\n\t\tmuuup[tql]=muuup[i]=true;//\u6807\u8bb0\u521d\u59cb\u7684\u4e24\u4e2a\u8fde\u901a\u5757\u5df2\u7ecf\u88ab\u8d70\u8fc7\u3002\n\t\tmuup[mp(i,tql)]=muup[mp(tql,i)]=true;//\u6807\u8bb0\u8fd9\u4e24\u4e2a\u8fde\u901a\u5757\u4e4b\u95f4\u7684\u8fb9\u8d70\u8fc7\n\t\tq1=queue<int>();\n\t\tq1.push(i);\n\t\tq1.push(tql);\n        //\u5728\u8fd9\u91cc\u63a5 2.3.2 \u7684\u7a0b\u5e8f\n\t}\n}\n```\n\n#### 2.3.2 BFS \u7684\u6269\u5c55\n\n\u4f7f\u7528\u4e00\u4e2a $\\texttt{bool}$ \u578b\u53d8\u91cf\uff08\u8fd9\u91cc\u7684 $f$\uff09\u6807\u8bb0\u8fd9\u6b21 BFS \u662f\u5426\u65e0\u610f\u4e49\u3002\u5982\u679c\u88ab\u6807\u8bb0\u4e86\u90a3\u4e48\u63a5\u4e0b\u6765\u7684 BFS \u5185\u5bb9\u90fd\u4e0d\u80fd\u7ee7\u7eed\u3002\u6700\u7ec8\u9000\u51fa\u53d6\u76f8\u90bb\u70b9\u7684\u5faa\u73af\u540e\uff0c\u7a0b\u5e8f\u4f1a\u76f4\u63a5\u56de\u5230\u9009\u4e24\u4e2a\u76f8\u90bb\u8fde\u901a\u5757\u7684\u5faa\u73af\u3002\n\n\u5728 BFS \u7684\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u6b21\u6269\u5c55\u4e0e\u6211\u4eec\u4e4b\u524d\u9009\u7684\u8fde\u901a\u5757\u6709\u76f8\u540c\u989c\u8272\u7684\u70b9\u8fdb\u884c\u6269\u5c55\uff08\u5982\u4e4b\u524d\u9009\u7684\u989c\u8272\u4e3a $3,1$ \u7684\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u90a3\u4e48\u6269\u5c55\u8fc7\u7a0b\u4e2d\u6211\u4eec\u53ea\u80fd\u8d70\u989c\u8272\u4e3a $3,1$ \u7684\u70b9\uff09\u3002\n\n```\nwhile(!q1.empty()){\n\tint x=q1.front();\n\tq1.pop();\n\tfor(int k=0;k<vp[x].size();k++){\n\t\tint tqll=vp[x][k];\n\t\tif(f||muuup[tqll]||(is[tqll]!=is[i]&&is[tqll]!=is[tql])){//\u8fd9\u91cc\u7b5b\u9664\u4e86\u88ab\u8d70\u8fc7\u7684\u70b9\u548c\u989c\u8272\u4e0d\u884c\u7684\u70b9\uff0c\u8fd9\u91cc\u8bf4\u660e\u4e86 is \u6570\u7ec4\u7684\u4f5c\u7528\n\t\t\tcontinue;\n\t\t}\n\t\tif(muup[mp(x,tqll)]){//\u8d70\u5230\u4e86\u66fe\u7ecf\u8d70\u8fc7\u7684\u8fb9\uff0c\u6807\u8bb0\u8fd9\u6b21 BFS \u65e0\u610f\u4e49\u3002\n\t\t\tf=true;\n\t\t}\n\t\tif(!f){\n\t\t\tmuuup[tqll]=1;//\u6807\u8bb0\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u8d70\u8fc7\n\t\t\tmuup[mp(x,tqll)]=muup[mp(tqll,x)]=1;//\u6807\u8bb0\u8fd9\u6761\u8fb9\u5df2\u7ecf\u8d70\u8fc7\n\t\t\tq1.push(tqll);//\u6269\u5c55\u8fd9\u4e2a\u65b0\u70b9\n\t\t\tsum+=num[tqll];//sum \u8981\u52a0\u4e0a\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u5927\u5c0f\u3002\n\t\t}\n\t}\n\tif(f){\n\t\t\tbreak;//\u9000\u51fa BFS \u7684\u8fc7\u7a0b\n\t}\n} \nif(!f){//\u53ea\u6709\u5728 BFS \u6709\u6548\u65f6\u624d\u5c06 sum \u548c\u76ee\u524d\u7684\u7b54\u6848\u6bd4\u8f83\n\tans2=max(ans2,sum);\n}\n```\n\n\u6700\u540e\u628a\u8fd9\u4efd\u4ee3\u7801[\u4ea4\u4e0a\u53bb](https://www.luogu.com.cn/record/59234622)\uff0c\u4f60\u4f1a\u53d1\u73b0\u65e0\u8bba\u662f\u539f\u9898\u8bb0\u5f55\u8fd8\u662f\u6d4b\u8bd5\u8ba8\u8bba\u533a hack \u7684[\u8bb0\u5f55](https://www.luogu.com.cn/record/59236711)\uff0c\u6700\u6162\u90fd\u8dd1\u4e86 $900ms$ \u4ee5\u4e0a\u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u5e38\u6570\u4f18\u5316\u907f\u514d\u56e0\u4e3a\u7535\u8111\u914d\u7f6e\u7684\u4e0d\u540c\u8d85\u65f6\u3002\n\n### 2.4 \u7b80\u5355\u7684\u526a\u679d\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u9053\u9898\u91cc\u9762\uff0c\u82e5\u7b97\u51fa\u7684\u7b54\u6848\u8fbe\u5230\u4e86\u68cb\u76d8\u5927\u5c0f\u7684\u4e00\u534a\u90a3\u4e48\u8fd9\u4e2a\u7b54\u6848\u5c06\u4f1a\u662f\u6700\u7ec8\u7b54\u6848\uff0c\u4e0d\u5fc5\u7ee7\u7eed BFS\u3002\u56e0\u6b64\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u4ee3\u7801\uff1a\n\n```\nif(!f){\n\tans2=max(ans2,sum);\n}\n```\n\n\u53d8\u6210\n\n```\nif(!f){\n\tif(sum>=sq){\n\t\tcout<<sum<<endl;\n\t\treturn 0;\n\t}\n\tans2=max(ans2,sum);\n}\n```\n\n\u6ce8\u610f\u8fd9\u91cc\u8981\u5728\u524d\u9762\u52a0\u4e0a\u4e00\u53e5`sq=(n*n)>>1`\u3002\n\n\u4e8e\u662f[\u539f\u9898\u7684\u8bb0\u5f55](https://www.luogu.com.cn/record/59237377)\u4e2d\u6d4b\u8bd5\u70b9 9 \u8dd1\u5230\u4e86 $500ms$\uff0c\u6d4b\u8bd5\u70b9 10 \u4e5f\u7a7a\u51fa\u4e86 $50ms$\u3002\n\n[hack \u7684\u8bb0\u5f55](https://www.luogu.com.cn/record/59237526)\u4e5f\u8dd1\u5230\u4e86 $500ms$\u3002\n\n## AC CODE\n\n\u4ee3\u7801\u5df2\u7ecf\u5206\u6bb5\u7ed9\u51fa\u3002\n\n[AC \u8bb0\u5f55](https://www.luogu.com.cn/record/59237377)",
        "postTime": 1633439119,
        "uid": 399150,
        "name": "Shunpower",
        "ccfLevel": 7,
        "title": "P4380 [USACO18OPEN]Multiplayer Moo S \u9898\u89e3"
    },
    {
        "content": "## Sol ##\n\n[blog\u98df\u7528](http://www.caolaoshi.men/index.php/archives/usaco18open-mulmoo.html)\n\n**\u8fd9\u662f\u6d1b\u8c37\u76ee\u524d(2018\u5e748\u670821\u65e516:38:14)\u8dd1\u7684\u6700\u5feb\u7684\u5e76\u67e5\u96c6\u505a\u6cd5\u7684\u4ee3\u7801\uff0c\u88ab\u641c\u7d22\u548c\u526a\u679d\u8650\u60e8\u4e86\u554a\uff01**\n\n\u5bf9\u4e8e\u7b2c\u4e00\u95ee\uff0c\u8fd8\u662f\u5f88\u597d\u6c42\u7684\uff0c\u53ef\u4ee5\u641c\u7d22\u6c42\uff0c\u53ef\u4ee5\u5e76\u67e5\u96c6\u6c42\uff0c\u4f46\u8fd8\u662f\u5efa\u8bae\u5e76\u67e5\u96c6\u6c42\uff0c\u56e0\u4e3a\u6211\u4eec\u7b2c\u4e8c\u95ee\u8981\u7528\u5230\uff0c**\u7b2c\u4e00\u95ee\u5c31\u662f\u628a\u4e24\u4e2a\u76f8\u540c\u989c\u8272(\u4ee5\u4e0b\u53ca\u4ee3\u7801\u4e2d\u90fd\u7528\u7684\u989c\u8272\u6765\u8868\u793a)\u5408\u5e76\uff0c\u7136\u540e\u6c42\u4e00\u4e2a\u6700\u5927\u7684\u5e26\u6743\u5e76\u67e5\u96c6\u5c31\u597d**\uff0c\u6211\u662f\u6309\u6267\u5408\u5e76\u7684\u3002\n\n\u7b2c\u4e8c\u95ee\uff0c\u6211\u4eec\u628a\u7b2c\u4e00\u95ee\u4e2d\u6c42\u51fa\u6765\u7684\u6bcf\u4e2a\u5e76\u67e5\u96c6\u7684\u4ee3\u8868\u5143\u7ed9\u627e\u51fa\u6765\uff0c\u653e\u5230\u4e00\u4e2a\u52a8\u6001\u6570\u7ec4\u4e2d\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u52a0\u8fb9\uff0c\u4e3a\u4e86\u9632\u6b62\u591a\u52a0\u8fb9\uff0c\u53ea\u52a0\u53f3\u9762\u548c\u4e0b\u9762\u7684\u8fb9\u5c31\u597d\uff0c\u5982\u679c\u8bf4\u989c\u8272\u4e0d\u76f8\u540c\uff0c\u5c31\u52a0\u4e00\u6761\u8fb9\uff0c**\u6240\u8c13\u52a0\u8fb9\uff0c\u5176\u5b9e\u5c31\u662f\u5b58\u4e0b\u8fd9\u6761\u8fb9\u7684\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u8fd8\u6709\u989c\u8272\u3002**\u7136\u540e\u6309\u7167\u989c\u8272\u6392\u4e00\u4e0b\u5e8f\uff0c\u8fd9\u6837\u5c31\u4f1a\u5148\u8fde\u989c\u8272\u6bd4\u8f83\u5c0f\u7684\u8fde\u7684\u8fb9\uff0c\u6392\u5e8f\u4e5f\u6b63\u662f\u4e3a\u4e86\u540e\u9762\u7684$while$\u5faa\u73af\uff0c\u7136\u540e\u4fdd\u5b58\u4e00\u4e0b\u6b64\u65f6\u6bcf\u4e2a\u5e76\u67e5\u96c6\u7684\u5927\u5c0f\uff0c**\u6bcf\u6b21\u8fde\u5b8c\u4e24\u4e2a\u6709\u76f8\u540c\u989c\u8272\u7684\u8054\u901a\u5757\uff0c\u5c31\u56de\u6eaf\u4e00\u4e0b\uff0c\u518d\u628a\u4fdd\u5b58\u4e0b\u6765\u7684\u5e76\u67e5\u96c6\u5927\u5c0f\u653e\u56de\u53bb\uff0c\u4fdd\u6301\u521a\u5efa\u5b8c\u56fe\u7684\u72b6\u6001**\u3002\n\n## Code ##\n\n**\u6ce8\u91ca\u6389\u7684\u90e8\u5206\u4e3a\u672a\u4f18\u5316\u524d\uff0c~~\u61d2~~\u5c31\u4e0d\u5220\u6389\u4e86**\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\nconst int L = 255 , L2 = 62505;\nstruct Seg {\n\tint from , to , color1 , color2;\n};\nSeg seg[2*L2];\nint n , map[L][L] , ans1 , ans2 , tot = 0;\nint fa[L2] , size[L2] , num[L2];\nvector<int>v[1000005];\n\ntemplate <typename T> inline void read(T &x) {\n    int c = getchar();\n    bool f = false;\n    for (x = 0; !isdigit(c); c = getchar()) {\n        if (c == '-') {\n            f = true;\n        }\n    }\n    for (; isdigit(c); c = getchar()) {\n        x = x * 10 + c - '0';\n    }\n    if (f) {\n        x = -x;\n    }\n}\n\nvoid put(int x)  \n{  \n    int num = 0; char c[15];\n    while(x) c[++num] = (x%10)+48, x /= 10;\n    while(num) putchar(c[num--]);\n    putchar('\\n'); \n}\n\nint mymx(int x , int y) {\n\treturn x>y?x:y;\n}\n\nvoid myswp(int &x , int &y) {\n\tint t = x;\n\tx = y;\n\ty = t;\n}\n\nbool cmp(Seg a , Seg b) {\n\tif(a.color1 == b.color1)\n\t\treturn a.color2 < b.color2;\n\treturn a.color1 < b.color1;\n}\n\nvoid init() {\n\tfor(int i=1; i<=n*n; i++) {\n\t\tfa[i] = i;\n\t\tsize[i] = 1;\n\t}\n}\n\nint find(int x) {\n\tif(fa[x] != x)\n\t\tfa[x] = find(fa[x]);\n\treturn fa[x];\n}\n\nvoid merge(int x , int y) {\n\tint t1 = find(x) , t2 = find(y);\n\tif(t1 == t2)\n\t\treturn ; \n\tif(size[t2] > size[t1]) \n\t\tmyswp(t1 , t2);\n\tfa[t2] = t1;\n\tsize[t1] += size[t2];\n}\n\nvoid add(int num1 , int num2 , int x , int y , int p) {\n\tif(p == 1) {\n\t\ttot++;\n\t\tseg[tot].from = find(num1);\n\t\tseg[tot].to = find(num2);\n\t\tseg[tot].color1 = min(map[x][y] , map[x+1][y]);\n\t\tseg[tot].color2 = mymx(map[x][y] , map[x+1][y]);\t\t\n\t} else {\n\t\ttot++;\n\t\tseg[tot].from = find(num1);\n\t\tseg[tot].to = find(num2);\n\t\tseg[tot].color1 = min(map[x][y] , map[x][y+1]);\n\t\tseg[tot].color2 = mymx(map[x][y] , map[x][y+1]);\t\t\t\n\t}\n}\n\nvoid Reback(int x) {\n\tfor(int i=0; i<v[x].size(); i++) {\n\t\tint u = v[x][i];\n\t\tfa[u] = u;\n\t\tsize[u] = num[u];\n\t}\n}\n\nint main() {\n\tread(n);\n\t//scanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++)\n\t\tfor(int j=1; j<=n; j++)\n\t\t\tread(map[i][j]);\n\t\t//\tscanf(\"%d\",&map[i][j]);\n\tinit();\n\tfor(int i=1; i<=n; i++)\n\t\tfor(int j=1; j<=n; j++) {\n\t\t\tif(i != n && map[i][j] == map[i+1][j])\n\t\t\t\tmerge((i-1)*n+j , i*n+j);\n\t\t\tif(j != n && map[i][j+1] == map[i][j])\n\t\t\t\tmerge((i-1)*n+j , (i-1)*n+j+1);\n\t\t\tans1 = mymx(ans1 , size[find((i-1)*n+j)]);\n\t\t}\n\t//cout<<ans1;\n\tfor(int i=1; i<=n; i++)\n\t\tfor(int j=1; j<=n; j++) {\n\t\t\tint x = (i-1)*n+j;\n\t\t\tif(find(x) == x)\n\t\t\t\tv[map[i][j]].push_back(x);\n\t\t}\n\tfor(int i=1; i<=n; i++)\n\t\tfor(int j=1; j<=n; j++) {\n\t\t\tif(i != n && map[i][j] != map[i+1][j]) \n\t\t\t\tadd((i-1)*n+j , i*n+j , i , j , 1);\n\t\t\tif(j != n && map[i][j] != map[i][j+1])\n\t\t\t\tadd((i-1)*n+j , (i-1)*n+j+1 , i , j , 2);\n\t\t}\n\tsort(seg+1 , seg+tot+1 , cmp);\n\tfor(int i=1; i<=n*n; i++)\n\t\tnum[i] = size[i];\n\tfor(int i=1; i<=tot;) {\n\t\tint color1 = seg[i].color1 , color2 = seg[i].color2;\n\t\twhile(seg[i].color1 == color1 && seg[i].color2 == color2) {\n\t\t\tmerge(seg[i].from , seg[i].to);\n\t\t\tans2 = mymx(ans2 , size[find(seg[i].from)]);\n\t\t\ti++;\n\t\t}\n\t\tReback(color1);\n\t\tReback(color2);\n\t}\n\tput(ans1);put(ans2); \n//\tprintf(\"%d\\n%d\",ans1,ans2);\n\treturn 0;\n}\n```\n\n\n  [1]: https://www.luogu.org/problemnew/show/P4380",
        "postTime": 1534841827,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4380 \u3010[USACO18OPEN]Multiplayer Moo\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7b2c\u4e00\u95ee\uff1a\u6c42\u6700\u5927\u7684\u8054\u901a\u5757\u7684\u5927\u5c0f\u3002\n\n\u7b2c\u4e8c\u95ee\uff1a\u6c42\u542b\u6709\u4e24\u79cd\u6570\u503c\u7684\u8054\u901a\u5757\u7684\u6700\u5927\u5927\u5c0f\u3002\n\n### \u9898\u76ee\u601d\u8def\n\n\u7b2c\u4e00\u95ee\u5f88\u660e\u663e\u5c31\u662f\u9001\u7684\uff0c\u4e0a floodfill \u7684\u677f\u5b50\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002\n\n\u7b2c\u4e8c\u95ee\u7531\u4e8e\u662f\u6c42\u542b\u6709\u4e24\u79cd\u989c\u8272\u7684\uff0c\u6240\u4ee5\u8981\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u5f80\u4e0a\u4e0b\u5de6\u53f3\u627e\u4e00\u79cd\u4e0d\u540c\u6570\u503c\u7684\u4f4d\u7f6e\uff0c\u518d\u7528\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u7684\u4e0d\u540c\u7684\u989c\u8272\u8fdb\u884c bfs\u3002\n\n\u663e\u7136\uff0c\u4e00\u4e2a\u4f4d\u7f6e\u679a\u4e3e\u662f $O(n^2)$ \u7684\uff0c\u800c\u8fdb\u884c floodfill \u5c31\u53c8\u662f $O(n^2)$ \u7684\uff0c\u603b\u7684\u662f $O(n^4)$\uff0c\u4e0d\u53ef\u8fc7\uff0c\u5fc5\u987b\u526a\u679d\u3002\n\n- \u526a\u679d 1\uff1a\n\n\u53ef\u4ee5\u53ea\u679a\u4e3e\u4e0b\u65b9\u548c\u53f3\u65b9\u7684\u4f4d\u7f6e\uff0c\u4f18\u5316\u5230 $\\frac{1}{2}$\u3002\n\n2.69s -> 1.73s\n\n\u4f46\u8fd8\u662f\u8fc7\u4e0d\u4e86\u3002\n\n- \u526a\u679d 2\uff1a\n\n\u628a\u641c\u5230\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4ee5\u53ca\u548c\u5b83\u7ec4\u5408\u7684\u6570\u503c\u7528 map \u5224\u91cd\uff0c\u5982\u679c\u4e4b\u524d\u8003\u8651\u8fc7\u5c31 ```return 0```\u3002\n\n1.73s -> 884ms\n\n\u7136\u540e\u5c31\u6109\u60a6\u5730 AC \u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define rep1(i, j, n) for (int i(j); i <= n; ++i)\n#define rep2(i, j, n) for (int i(j); i >= n; --i)\nusing namespace std;\nconst int N = 255;\nint n, a[N][N], sz[N][N], mx[4] = {0, 0, -1, 1}, my[4] = {1, -1, 0, 0}; bool vis[N][N], lst[N][N], final[N][N][4];\nmap <int, bool> v[N][N];\nstruct node {int x, y; node(int sx, int sy) {x = sx, y = sy;}} ;\ninline int read(int &x) {\n\tx = 0; char ch = getchar(); int f = 1;\n\twhile (!isdigit(ch)) {if (ch == '-') f = -1; ch = getchar();}\n\twhile (isdigit(ch)) {x = (x << 1) + (x << 3) + (ch & 15); ch = getchar();}\n\tx *= f; return 0;\n}\ninline int bfs(int i, int j) { // \u7b2c\u4e00\u95ee\u627e\u8054\u901a\u5757 \n\tqueue <node> q; q.push(node(i, j)); lst[i][j] = 1; int cnt = 0;\n\twhile (!q.empty()) {\n\t\tnode t = q.front(); q.pop(); ++cnt;\n\t\trep1(i, 0, 3) {\n\t\t\tint nx = mx[i] + t.x, ny = t.y + my[i];\n\t\t\tif (nx && ny && nx <= n && ny <= n)\n\t\t\t\tif (!lst[nx][ny] && !vis[nx][ny] && a[t.x][t.y] == a[nx][ny]) {\n\t\t\t\t\tlst[nx][ny] = vis[nx][ny] = 1;\n\t\t\t\t\tq.push(node(nx, ny));\n\t\t\t\t}\n\t\t}\n\t}\n\tq.push(node(i, j));\n\twhile (!q.empty()) {\n\t\tnode t = q.front(); q.pop(); sz[t.x][t.y] = cnt;\n\t\trep1(i, 0, 3) {\n\t\t\tint nx = t.x + mx[i], ny = t.y + my[i];\n\t\t\tif (nx && ny && nx <= n && ny <= n)\n\t\t\t\tif (lst[nx][ny]) {\n\t\t\t\t\tlst[nx][ny] = 0;\n\t\t\t\t\tq.push(node(nx, ny));\n\t\t\t\t}\n\t\t}\n\t} return 0;\n}\ninline int bfs2(int x, int y, int cl) {\n\tqueue <node> q; q.push(node(x, y)); memset(vis, 0, sizeof vis); vis[x][y] = 1; int ans = 0;\n\tif (v[x][y].count(cl)) return 0; v[x][y][cl] = 1; // \u5224\u91cd\uff0c\u526a\u679d 2 \n\twhile (!q.empty()) {\n\t\tnode t = q.front(); q.pop(); ++ans; v[t.x][t.y][cl] = 1; // \u8bb0\u5f55 \n\t\trep1(i, 0, 3) {\n\t\t\tint nx = t.x + mx[i], ny = my[i] + t.y;\n\t\t\tif (nx && ny && nx <= n && ny <= n) {\n\t\t\t\tif ((a[nx][ny] == cl || a[nx][ny] == a[x][y]) && !vis[nx][ny] && !final[t.x][t.y][i]) {\n\t\t\t\t\tvis[nx][ny] = 1;\n\t\t\t\t\tq.push(node(nx, ny));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nsigned main(void) {\n//\tfreopen(\"multimoo.in\", \"r\", stdin);\n//\tfreopen(\"multimoo.out\", \"w\", stdout);\n\tread(n); \n\tint ans1 = 0, ans2 = 0;\n\trep1(i, 1, n) rep1(j, 1, n) read(a[i][j]);\n\trep1(i, 1, n) rep1(j, 1, n) \n\t\tif (!vis[i][j]) bfs(i, j), ans1 = max(ans1, sz[i][j]);\n\trep1(i, 1, n) rep1(j, 1, n)\n\t\trep1(k, 0, 3) {\n\t\t\tk = (k & 1 ? 0 : 3); /*<- \u526a\u679d 1*/ int nx = i + mx[k], ny = j + my[k];\n\t\t\tif (nx && ny && nx <= n && ny <= n) \n\t\t\t\tif (a[nx][ny] ^ a[i][j]) ans2 = max(ans2, bfs2(i, j, a[nx][ny]));\n\t\t}\n\tprintf(\"%d\\n%d\\n\", ans1, ans2);\n}\n```\n\n",
        "postTime": 1633435485,
        "uid": 377787,
        "name": "Hooch",
        "ccfLevel": 6,
        "title": "P4380"
    }
]