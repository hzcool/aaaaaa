[
    {
        "content": "\u770b\u5b8c\u4e0b\u9762\u7684\u9898\u89e3,\u771f\u5fc3\u60f3\u8bf4,\u4f60\u4eec\u8bb2\u7684\u662f\u4e2aX.(\u987a\u624b\u4e3e\u62a5\u4e00\u4e2a\u9519\u9898\u89e3).\u8fd9\u4e48\u597d\u7684\u4e00\u4e2a\u9898,\u771f\u662f\u6d6a\u8d39\u4e86.\u6211\u4f30\u8ba1\u4e0b\u9762\u7684\u5199\u9898\u89e3\u7684\u4eba\u4e5f\u662f\u4e00\u77e5\u534a\u89e3,\u6ca1\u6709\u660e\u767d\u6b64\u9898\u7684\u7ec6\u8282.\u6709\u4e9b\u7ec6\u8282\u4e0d\u5199\u6ce8\u91ca\u4f30\u8ba1\u81ea\u5df1\u4e5f\u4e0d\u77e5\u9053\u4e3a\u5565\u8fd9\u4e48\u5199.\n\n\n\u8fdb\u5165\u6b63\u9898.\u521d\u770b\u6b64\u9898\u6beb\u65e0\u601d\u8def,\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u7ed9\u51fa\u7684\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u5e76\u6c42\u4e00\u4e0b\u524d\u7f00\u548c.\u7528\u6837\u4f8b\u4e3e\u4e2a\u4f8b\u5b50:\n\n```cpp\n\u5929\u6570    \u4eca\u65e5\u6570\u503c(\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236)    \u524d\u7f00\u548c(\u5047\u8bbe\u4e0d\u8fdb\u4f4d)\n1       7->111                      111\n2       6->110                      221\n3       7->111                      332    \n4       2->010                      342\n5       1->001                      343\n6       4->100                      443\n7       2->010                      453\n```\n\u5f53\u533a\u95f4\u6ee1\u8db3\u662f\u4e00\u4e2a\"\u5747\u8861\u65f6\u671f\",\u5fc5\u6ee1\u8db3\u8be5\u533a\u95f4\u4e2d\u6bcf\u9879\u80fd\u529b\u90fd\u63d0\u5347X\n\n.\u8bbe\u533a\u95f4\u4e3a[L,R],\u5373\u524d\u7f00\u548csum[R]-sum[L-1]\u7684\u6bcf\u4e00\u4f4d\u90fd\u76f8\u7b49.\n\n\u5982\u6837\u4f8b\u4e2d\u4ece\u7b2c\u4e09\u5929\u5230\u7b2c\u516d\u5929,\u524d\u7f00\u548c\u4e3a443-221=222.\u6545\u6bcf\u9879\u80fd\u529b\u90fd\u63d0\u5347\u4e862.\n\n\n\u4ee5\u6b64\u7c7b\u63a8.\u8bbe\u6700\u957f\u533a\u95f4\u7684\u8d77\u59cb\u5929\u7684\u524d\u4e00\u5929(\u56e0\u4e3a\u8981\u7b97\u524d\u7f00\u548c)\u4e3aL,\u672b\u5c3e\u7684\u4e00\u5929\u4e3aR.\u8bbeL\u7684\u6bcf\u4e00\u4f4d(\u4ece\u5de6\u5411\u53f3\u6570)\u4e3a\n\n```math\nL_{1},L_{2},L_{3}...L_{n}\n```\nR\u7684\u6bcf\u4e00\u4f4d(\u4ece\u5de6\u5411\u53f3\u6570)\u4e3a\n\n```math\nR_{1},R_{2},R_{3}...R_{n}\n```\n\u5219\u6709\n```math\nR_{1}-L_{1}=R_{2}-L_{2}=R_{3}-L_{3}...=R_{n}-L_{n}\n```\n\u79fb\u9879\u5f97:\n\n```math\n\\left\\{\\begin{matrix}\n &R_{1}-R_{2} =L_{1}-L_{2} \\\\ \n &R_{1}-R_{3} =L_{1}-L_{3} \\\\ \n &R_{2}-R_{3} =L_{2}-L_{3} \\\\\n &...\n\\end{matrix}\\right.\n```\n\u5176\u5b9e\u6700\u540e\u4e00\u4e2a\u5f0f\u5b50\u662f\u6ca1\u6709\u610f\u4e49\u7684,\u56e0\u4e3a\u7528\u524dN-1\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u63a8\u51fa\u6765\u7b2cN\u4e2a\u5f0f\u5b50.\u4e8e\u662f\u6211\u4eec\u5c06\u8fd9\u4e2a\u5f0f\u5b50\u7528\u4e0a.\u6bcf\u6b21\u8ba1\u7b97\u524d\u7f00\u548c\u540e\u53ef\u4ee5\u51cf\u53bb\u7b2c\u4e00\u4f4d\u7684\u503c.\u4e4b\u540e\u5982\u679c\u5f97\u5230\u7684\u4e24\u4e2a\u503c\u76f8\u7b49.\u90a3\u4e48\u5b83\u4eec\u5c31\u662f\u4e00\u4e2a\u5747\u8861\u533a\u95f4.\n\n\n**\u7b97\u6cd5**:\n\n- \u54c8\u5e0c:\u4fdd\u5b58\u6bcf\u4e2a\u72b6\u6001\u548c\u5b83\u5bf9\u5e94\u7684\u5929\u6570,\u6bcf\u6b21\u63d2\u5165\u4e4b\u524d\u67e5\u8be2\u8fd9\u4e2a\u72b6\u6001\u662f\u5426\u5728\u4e4b\u524d\u51fa\u73b0\u8fc7.\u5982\u679c\u6709,\u7528\u73b0\u5728\u7684\u5929\u6570\u51cf\u53bb\u4e4b\u524d\u7684\u5929\u6570.\u4e0d\u65ad\u6c42ans=max(ans,\u5929\u6570\u5dee),\u5c31\u884c\u4e86.\u53ef\u4ee5\u624b\u5199,\u4e5f\u53ef\u4ee5\u7528map\n\n.\u697c\u4e0b\u7528map\u7684\u9898\u89e3.\u6bcf\u6b21\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u65f6\u987a\u4fbf\u5c31\u51cf\u4e86,\u51cf\u4e4b\u524d\u7684\u5224\u65ad(x&1)\u662f\u5728\u5224\u65ad\u6700\u540e\u4e00\u4f4d\u662f\u5426\u4e3a1.(\u56e0\u4e3a\u4ed6\u8981\u5c06\u6bcf\u4e00\u4f4d\u6570\u51cf\u53bb\u6700\u540e\u4e00\u4f4d\u6570)\n\n\n- \u6392\u5e8f,\u81ea\u5b9a\u4e49\u6bd4\u8f83,\u5c06\u72b6\u6001\u76f8\u540c\u7684\u6392\u5728\u4e00\u8d77.\u7136\u540e\u626b\u4e00\u904d\u6253\u64c2\u53f0\u6c42\u51fa\u6700\u5927\u503c.(\u6700\u597d\u7528\u7ed3\u6784\u4f53\u5b58\u72b6\u6001\u548c\u5bf9\u5e94\u7684\u5929\u6570)\u6709\u4e00\u70b9\u7ec6\u8282:\u8981\u591a\u52a0\u4e00\u4e2a0\u5929.\u5426\u5219\u6709\u6570\u636e\u53ef\u4ee5hack\u6389.\u59821   3\u8fd9\u7ec4\u6570\u636e.\u4f1a\u8f93\u51fa0\u800c\u4e0d\u662f1.\n\n\n\u6211\u89c9\u5f97\u8bb2\u7684\u591f\u8be6\u7ec6\u4e86,\u5c31\u4e0d\u8d34\u4ee3\u7801\u4e86.\u4e0b\u9762\u6709.\u6709\u5174\u8da3\u53ef\u4ee5\u770b\u770b\u8017\u65f6\u6700\u5c11\u7684\u4eba\u7684\u4ee3\u7801,\u6211\u8868\u793a\u770b\u4e0d\u61c2.\u53ef\u80fd\u6709\u4ec0\u4e48\u5feb\u901f\u7684hash\u6280\u5de7.\u6709\u4ec0\u4e48\u9519\u8bef\u8bf7\u79c1\u4fe1\u6307\u51fa,\u8c22\u8c22.\n",
        "postTime": 1510275060,
        "uid": 36075,
        "name": "karma",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]\u9ec4\u91d1\u9635\u5bb9\u5747\u8861Gold Balanced L\u2026\u3011"
    },
    {
        "content": "\u521a\u770b\u5230\u8fd9\u9898\u65f6\u6211\u662f\u61f5\u903c\u7684\uff0c~~\u8fd9TM\u662f\u4ec0\u4e48\u73a9\u610f\uff1f\uff1f\uff1f~~\n\n\u7136\u540e\u7a81\u7136\u7075\u673a\u4e00\u52a8\uff0c\u7528\u4e86\u4e2aSTL\u7684map\uff0c\u5229\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\uff0c\u5c06\u4ee5\u524d\u7684\u72b6\u6001\u76f4\u63a5\u7528map\u5b58\u8d77\u6765\uff0c\n\n\u6bcf\u5230\u65b0\u7684\u4e00\u5929\uff0c\u67e5\u8be2\u4e4b\u524d\u662f\u5426\u6709\u548c\u73b0\u5728\u76f8\u540c\u7684\u72b6\u6001\uff0c\u5982\u679c\u6709\uff0c\u6211\u4eec\u5c31\u66f4\u65b0\u7b54\u6848\uff0c\u4e0d\u7136\u5c31\u76f4\u63a5\u5c06\u8be5\u72b6\u6001\u63d2\u5165map\n\n\u65f6\u95f4\u590d\u6742\u5ea6O\uff08nmlogn\uff09\u53ef\u4ee5\u627f\u53d7\uff0c\u800c\u4e14\u4ee3\u7801\u8d85\u7ea7\u77ed\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio> \n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <map>\n#define LL long long \n#define mod 9901\nusing namespace std;\nmap<vector<int>,int>f;\nint ans;\nint main(){\n    int n,m;scanf(\"%d%d\",&n,&m);\n    vector<int>now(m);\n    f[now]=0;\n    for(int i=1;i<=n;i++){\n        int x;scanf(\"%d\",&x);\n        for(int j=0;j<m;j++)\n            if(x&(1<<j))now[j]++;\n        if(x&1)for(int j=0;j<m;j++)now[j]--;\n        if(f.count(now))ans=max(ans,i-f[now]);\n        else f[now]=i;\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1508145349,
        "uid": 29674,
        "name": "Anoxiacxy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]\u9ec4\u91d1\u9635\u5bb9\u5747\u8861Gold Balanced L\u2026\u3011"
    },
    {
        "content": "\u9996\u5148\u663e\u7136\u5c31\u662f\u7528\u524d\u7f00\u548c\u7edf\u8ba1\u6bcf\u5929\u7684\u80fd\u529b\u503c\uff0c\u8bbe\u524d $i$ \u5929\uff0c$j$ \u53f7\u9b54\u6cd5\u503c\u4e3a $s[i][j]$\u3002\u90a3\u4e48\u5747\u8861\u65f6\u671f\u5982\u679c\u662f\u4ece $l$~$r$\uff0c\u90a3\u4e48 $s[r][i]  - s[l-1][i]$ \u4e3a\u4e00\u4e2a\u5b9a\u503c\u3002\u8003\u8651\u600e\u4e48\u5feb\u901f\u5224\u65ad\u8fd9\u4ef6\u4e8b\u60c5\u3002\n\n\u6bd4\u5982\u4e00\u5929\u7684\u80fd\u529b\u503c\u4e3a $1, 9, 2, 6$\uff0c \u53e6\u4e00\u5929\u4e3a $3, 11, 4, 8$\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a\u5dee\u76f8\u540c\u7684\u80fd\u529b\u503c\u8f6c\u5316\u6210\u4e00\u4e2a\u201c\u6807\u51c6\u5f62\u5f0f\u201d\u3002\u6bd4\u5982 $1,9,2,6\\to 0,8,1,5\\qquad 3,11,4,8 \\to 0, 8, 1, 5$\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u505c\u5730\u628a\u6240\u6709\u6570-1\u76f4\u5230\u6709\u4e00\u4e2a\u4e3a $0$ \u4e3a\u6b62\u3002\n\n\u90a3\u4e48\u7528 map \u548c vector \u7ef4\u62a4\u5373\u53ef\uff0c\u4e0d\u9700\u8981 hash\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <map>\n\nusing namespace std;\n\nmap<vector<int>, int> hsh;\nint n, m, ans;\n\nsigned main() {\n  scanf(\"%d %d\", &n, &m);\n  vector<int> v;\n  v.resize(m);\n  hsh[v] = 0;\n  for (int tc = 1; tc <= n; tc++) {\n    int d; scanf(\"%d\", &d);\n    bool flag = true;\n    for (int i = 0; i < m; i++) {\n      v[i] += ((d >> i) & 1);\n      if (v[i] == 0) flag = false;\n    }\n    for (int i = 0; i < m; i++) {\n      v[i] -= flag;\n    }\n    if (hsh.count(v)) {\n      ans = max(ans, tc - hsh[v]);\n    } else {\n      hsh[v] = tc;\n    }\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n```",
        "postTime": 1597578309,
        "uid": 319914,
        "name": "Aftershock",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]Gold Balanced Lineup G\u3011"
    },
    {
        "content": "7 3\n7\n6\n7\n2\n1\n4\n2\n\n\u8f6c\u5316\u4e3a2\u8fdb\u5236\n\n111\n\n110\n\n111\n\n010\n\n001\n\n100\n\n010\n\n\u9010\u4e2a\u7d2f\u52a0\n\n111\n\n221\n\n332\n\n342\n\n343\n\n443\n\n453\n\n\u5206\u522b\u51cf\u53bb\u6700\u53f3\u8fb9\u7684\u6570\n\n000\n\n110\u300a----\n\n110\n\n120\n\n010\n\n110\u300a----\n\n120\n\u56e0\u4e3a\u6211\u4eec\u6700\u5f00\u59cb\u6c42\u7684\u662f\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u4e00\u4e2a\u524d\u7f00\u548c\u6570\u7ec4\u8bb0\u5f55\u4e86\u4ece1\u5230\u5b83\u672c\u8eab\u7684\u7d2f\u52a0\u548c\uff0c\u51cf\u53bb\u53f3\u8fb9\u7684\u76f8\u540c\u540e\u5982\u679c\u4e24\u6570\u76f8\u540c\uff0c\u53ef\u4ee5\u77e5\u9053\u4ed6\u4eec\u4e24\u4e2a\u533a\u95f4\u5185\u7684\u52a0\u548c\u7684\u6bcf\u4e00\u4f4d\u4e5f\u662f\u76f8\u540c\u7684\u3002\n\u8fd9\u91cc\u6211\u7528\u7684\u662fmap\u5224\u91cd\n\n\u7528map\u8bb0\u5f55\u4ee5\uff08\u6bd4\u5982110\u6216120\u7ed3\u5c3e\u7684\u6700\u5f00\u59cb\u7684\u4f4d\u7f6e\uff09\n\n\u6ce8\u610f\uff1a\u521d\u59cb\u76840\u5929\u5176\u5b9e\u4e5f\u7b97\u4e00\u4e2a\u72b6\u6001\uff01\uff01\uff01\uff01\uff01\uff01\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<map>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,m;\nint a[1000001];\nint book[100050][31];\nint read()\n{\n    register int x = 0,f = 1;register char ch;\n    ch = getchar();\n    while(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n    while(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n    return x * f;\n}\nvoid pre(int num,int x)\n{\n\tfor(int i=1;i<=m;i++)\n\tbook[num][i]=book[num-1][i];\n\tint wei=0;\n\twhile(x>0)\n\t{\n\t\twei++;\n\t\tbook[num][wei]+=x%2;\n\t\tx=x/2;\n\t}\n\treturn ;\n}\nint main()\n{\n\t//freopen(\"num.out\",\"w\",stdout);\n\tcin>>n>>m;\n\t//pre(0,0);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;\n\t\t//cin>>x;\n\t\tx=read();\n\t\tpre(i,x);\n\t}\n\t\n\tfor(int i=0;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\tbook[i][j]-=book[i][m];\n\t}\n\t\n\tint ans=0;\n\tmap < string ,int > mymap;\n\tfor(int i=0;i<=n;i++)\n\t{\n\t\t\n\t\tstring y;\n\t\tfor(int j=1;j<=m;j++)\n\t\ty+=char(book[i][j]+65);\n\t\t\n\t\t//if(i==1)\n\t\t//cout<<y<<endl;\n\t\t\n\t\t//if(i==30000)\n\t\t//cout<<y<<endl;\n\t\t\n\t\tmap <string ,int > :: iterator iter;\n       \titer = mymap.find(y);\n\t\tif(iter != mymap.end())\n\t\t{\n\t\t\tans=max(ans,i-mymap[y]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmymap[y]=i;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1",
        "postTime": 1577777671,
        "uid": 95596,
        "name": "\u82cd\u7a79\u72ee\u9e6b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]\u9ec4\u91d1\u9635\u5bb9\u5747\u8861Gold Balanced L\u2026\u3011"
    },
    {
        "content": "#\u600e\u4e48\u6ca1\u4eba\u5199\u66b4\u529b\uff1f\n\n\u7ed9\u4e2a\u66b4\u529b\u7684\u601d\u8def\uff1a\n\n\u5927\u795e\u4eec\u90fd$hash$\u53bb\u4e86\uff0c\u849f\u84bb\u53ea\u80fd\u5199\u4e2a\u7c7b\uff0c\u6682\u4e14\u53eb\u5b83$ability$\uff1a\n\n$pos$\u8868\u793a\u7b2c$i$\u5929\n\n\u6570\u7ec4$level$\u8868\u793a\u7b2c$i$\u5929\u5c0fR\u5404\u9879\u80fd\u529b\u503c\u51cf\u53bb\u8be5\u5929\u5c0fR\u6700\u5c0f\u7684\u4e00\u9879\u80fd\u529b\u503c\u3002\n\n\n\n\u5219\u82e5\u7b2c$i$~$j$\u5929\u662f\u4e00\u4e2a\u5747\u8861\u65f6\u671f\uff0c\u5219$ability_{i-1}$.$level$=$ability_j$.$level$\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a$ability$\u6392\u5e8f\u4e00\u4e0b\uff0c\u7136\u540e\u5c31\u80fd\u8f7b\u677e\u6c42\u51fa\u7b54\u6848\u4e86\u3002\n\nCODE:\n```cpp\n#ifndef IOOPTIMIZATION_H\n#define IOOPTIMIZATION_H\n#ifndef STDIO_H\n#include<stdio.h>\n#endif\n#ifndef CTYPE_H\n#include<ctype.h>\n#endif\nconst int bufsize=1000000;\nchar buf[bufsize],ch,*p1=buf,*p2=buf;\ninline char nextchar(){\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,bufsize,stdin),p1==p2)?EOF:*p1++;\n}\ninline void getint(int &des){\n    des=ch=0;\n    while(!isdigit(ch))ch=nextchar();\n    while(isdigit(ch))des=des*10+ch-48,ch=nextchar();\n}\n#endif\n#ifndef STRING_H\n#include<string.h>\n#endif\nstruct ability{\n    int level[30];\n    int pos;\n    inline ability(){\n        memset(level,0,sizeof(level));\n    }\n    inline void operator=(ability v){\n        for(int i=0;i<30;i++){\n            level[i]=v.level[i];\n        }\n        pos=v.pos;\n    }\n    inline bool operator<(const ability &v)const{\n        for(int i=0;i<30;i++){\n            if(level[i]<v.level[i])return true;\n            if(v.level[i]<level[i])return false;\n        }\n        return pos<v.pos;\n    }\n    inline bool operator==(const ability &v)const{\n        for(int i=0;i<30;i++)\n            if(level[i]!=v.level[i])return false;\n        return true;\n    }\n};\ninline int min(const int &a,const int &b){\n    return a<b?a:b;\n}\ninline int max(const int &a,const int &b){\n    return a>b?a:b;\n}\n#ifndef _GLIBCXX_ALGORITHM\n#include<algorithm>\n#endif\nint n,m;\nability a[100010];\nint pos[100010];\nconst int INF=0x7fffffff;\nint ans;\nint main(){\n    //freopen(\"in.txt\",\"r\",stdin);\n    //freopen(\"out.txt\",\"w\",stdout);\n    int i,j,k,u;\n    getint(n);\n    getint(m);\n    for(i=1;i<=n;i++){\n        a[i].pos=i;\n        getint(k);\n        u=INF;\n        for(j=0;j<m;j++){\n            a[i].level[j]=a[i-1].level[j]+(bool)(k&(1<<j));\n            u=min(u,a[i].level[j]);\n        }\n        for(j=0;j<m;j++){\n            a[i].level[j]-=u;\n        }\n    }\n    std::stable_sort(a+1,a+n+1);\n    for(j=0;j<30;j++){\n        a[n+1].level[j]=-1;\n    }\n    for(i=0;i<=n;i++){\n        j=i;\n        while(a[j+1]==a[j])j++;\n        ans=max(ans,a[j].pos-a[i].pos);\n        i=j;\n    }\n    printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1502686644,
        "uid": 21903,
        "name": "vegetabird",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]\u9ec4\u91d1\u9635\u5bb9\u5747\u8861Gold Balanced L\u2026\u3011"
    },
    {
        "content": "\u4ece\u9898\u89e3\u533a AnoxiacxyAnoxiacxy\u5927\u4f6c\u4ee3\u7801\u4e2d\u5f97\u5230\u601d\u8def\uff0c\u73b0\u5bf9\u8be5\u5927\u4f6c\u7684\u601d\u8def\u505a\u4e00\u4e2a\u66f4\u52a0\u8be6\u7ec6\u7684\u8bb2\u89e3\n\n\u62ff\u5230\u9898\u4e4b\u540e\u601d\u8003\uff0c\u6211\u4eec\u8bd5\u7740\u53bb\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u5c06\u9886\u7684\u7279\u6027\uff0c\u5e76\u4e14\u6c42\u51fa\u524d\u7f00\u548c\u3002\n\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u6b63\u5728\u8003\u8651\u7b2ci\u4f4d\u5c06\u9886\uff0c\u7b2cj\u4f4d\u5c06\u9886\u4e3a\u7b2ci\u4f4d\u5c06\u9886\u4e4b\u524d\u7684\u67d0\u4e00\u4f4d\u5c06\u9886\u3002\n\n\u90a3\u4e48\u7b2ci\u4f4d\u5c06\u9886\u7684\u524d\u7f00\u548c\u7684\u6bcf\u4e00\u4f4d\u5982\u679c\u80fd\u540c\u65f6\u51cf\u53bb\u4e00\u4e2a\u6570k\u6070\u597d\u4e0e\u7b2cj\u4f4d\u5c06\u9886\u7684\u6bcf\u4e00\u4f4d\u5c06\u9886\u76f8\u540c\uff0c\u90a3\u4e48\u5373\u8bf4\u660e\u7b2cj+1\u4f4d\u5230\u7b2ci\u4f4d\u5c06\u9886\u7684\u6bcf\u4e00\u4f4d\u5c06\u9886\u7684\u524d\u7f00\u548c\u7684\u6bcf\u4e00\u4f4d\u52a0\u8d77\u6765\u7684\u548c\u90fd\u6070\u597d\u662fk\uff0c\u5c31\u6ee1\u8db3\u6761\u4ef6\u4e86\uff0c\u800c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u8fd9\u6837\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u5c06\u9886\u4e2a\u6570\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u601d\u8def\u5df2\u7ecf\u77e5\u9053\uff0c\u8003\u8651\u5982\u4f55\u6765\u5b9e\u73b0\u4ee3\u7801\uff0c\u90a3\u4e48\u9996\u5148\u60f3\u5230\u7684\u80af\u5b9a\u662f\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\u524d\u7f00\u548c\uff0c\u4f46\u662f\u5982\u4f55\u548c\u4e4b\u524d\u7684\u76f8\u4e92\u6bd4\u8f83\u770b\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u5462\uff1f\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5c06\u6570\u7ec4\u6539\u53d8\u6210vector\u6765\u5b58\u50a8\u5f53\u524d\u7684\u524d\u7f00\u548c\uff0c\u5047\u8bbe\u8be5vector\u540d\u4e3anow\uff0c\u7136\u540e\u5efa\u7acb\u4e00\u4e2a\u4ee5now\u4e3a\u6620\u5c04\u7684map,\u5047\u8bbe\u8be5map\u540d\u4e3afound\uff0c\u6bcf\u6b21\u8f93\u5165\u7b2ci\u4e2a\u5c06\u9886\u7684\u7279\u6027\u503c\u65f6\u90fd\u66f4\u65b0now\uff0c\u7136\u540e\u67e5\u8be2\u4e4b\u524d\u7684i-1\u4e2a\u5c06\u9886\u4e2d\u524d\u7f00\u548c\u540c\u6837\u4e3anow\u7684\u5c06\u9886\u6700\u540e\u51fa\u73b0\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u90a3\u4e48i\u8fd9\u4e4b\u95f4\u7684\u6240\u6709\u5c06\u9886\u90fd\u6ee1\u8db3\u6761\u4ef6\uff0c\u800cmap\u5b58\u50a8\u7684\u5c31\u662f\u524d\u7f00\u548c\u4e3anow\u7684\u6700\u540e\u4e00\u4e2a\u5c06\u9886\u3002\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<map>\n#include<vector>\nusing namespace std;\nmap<vector<int>, int> found;\nint main()\n{\n    int maxn = 0;\n    int n,k;\n    scanf(\"%d%d\", &n, &k);\n    vector<int> now(k);\n    found[now] = 0;\n    for (int i = 1;i<=n;i++)\n    {\n        int x;\n        scanf(\"%d\", &x);\n        for (int j = 0; j < k;j++)\n            if(x&(1<<j))\n                now[j]++;\n        if(x&1)\n            for (int j = 0; j < k;j++)\n                now[j]--;//\u6216\u8bb8\u6709\u7684\u540c\u5b66\u4e0d\u7406\u89e3\u8fd9\u4e00\u6b65\uff0c\u8bb2\u89e3\u5982\u4e0b\n        if(found.count(now))\n            maxn = max(maxn, i - found[now]);\n        else\n            found[now] = i;\n    }\n    printf(\"%d\\n\", maxn);\n```\n\u8fd9\u4e00\u6b65\u7684\u610f\u601d\u5c31\u662f\u6bcf\u6b21\u5b58\u50a8\u8fdb\u53bb\u65f6\u5c31\u5c06\u6bcf\u4e00\u4f4d\u51cf1\uff0c\u53ef\u4ee5\u770b\u4f5c\u6bcf\u4e00\u4f4d\u90fd\u662f\u6700\u7b80\u5f62\u5f0f\uff0c\u4f8b\u5982\u7b2ci\u4f4d\u7684\u524d\u7f00\u548c\u4e3a221\uff0c\u90a3\u4e48\u5b58\u8fdb\u53bb\u65f6\u6bcf\u4e00\u4f4d\u51cf\u4e86\u4e00\u76f4\u5230\u6700\u540e\u4e00\u4f4d\u4e3a0\uff0c\u5b58\u8fdb\u53bb\u65f6\u5c31\u53d8\u6210\u4e86110\u3002\n\u800c\u6211\u4eec\u4e4b\u540e\u78b0\u89c1\u4e86\u4e00\u4e2a\u5c06\u9886j\u7684\u524d\u7f00\u548c\u4e3a554\uff0c\u90a3\u4e48\u5b58\u8fdb\u53bb\u65f6\u5373\u4e3a110\uff0c\u4e0e221\u7684\u6700\u7b80\u5f62\u5f0f\u76f8\u540c\uff0c\u90a3\u4e48i+1\u5230j\u4e2d\u7684\u6240\u6709\u5c06\u9886\u90fd\u53ef\u4ee5\u6740\u6b7b\uff0c\u5373\u4e3a\u5408\u6cd5\u65b9\u6848\uff0c\u800c\u6211\u6bcf\u4e00\u6b21\u5b58\u7684\u65f6\u5019\u90fd\u51cf\u4e00\uff0c\u5373\u4fdd\u8bc1\u4e86\u968f\u65f6\u90fd\u662f\u6700\u7b80\u5f62\u5f0f\uff0c\u4e0b\u4e00\u4f4d\u5c06\u9886\u7684\u524d\u7f00\u548c\u72b6\u6001\u4e5f\u662f\u4ece\u5f53\u524d\u8fd9\u4e00\u4f4d\u5c06\u9886\u7684now\u5f97\u5230\uff0c\u90a3\u4e48\u4e0b\u4e00\u4f4d\u5c06\u9886\u7684now\u4e5f\u4e3a\u6700\u7b80\u72b6\u6001\uff0c\u76f4\u63a5\u5b58\u8fdbfound\u5373\u53ef",
        "postTime": 1607945833,
        "uid": 278481,
        "name": "Link_Space",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]Gold Balanced Lineup G\u3011"
    },
    {
        "content": "Hash\u4e5f\u53ef\u4ee5\n\n\u5148\u5904\u7406\u4e00\u4e0b\u524d\u7f00\u548c\n\n\u7136\u540e\u75281~k\u7684\u80fd\u529b\u503c\u5168\u51cf\u53bb1\u7684\u80fd\u529b\u503c\n\n\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u5462\uff1f\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\n1 1 0\n0 1 0\n1 0 1\n0 0 1\n1 0 0\n\u524d\u7f00\u548c\uff1a\n\n1 1 0\n1 2 0\n2 2 1\n2 2 2\n3 2 2\n\u51cf\u4e00\u4e0b\n\n0 0 -1\n0 1 -1\n0 0 -1\n0 0 0\n0 -1 -1\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8el\u548cr\uff0c\u82e5l\u548cr\u6240\u5bf9\u5e8f\u5217\u76f8\u540c\uff0c\u5219[l+1\uff0cr]\u662f\u4e00\u4e2a\u5747\u8861\u671f\uff08\u6613\u8bc1\uff09\n\n\u7136\u540e\u5c31\u53ef\u4ee5Hash\u5566\n\nO\uff08nk\\*\uff08\u4f60\u7684rp\uff09\uff09\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <queue>\n#include <algorithm>\nusing namespace std;\nconst int M=1000007;\nint n,k,i,j,a[35][100005],p,head[1000007],Next[100005],adj[35][100005],s,m,ans,l[100005];\nvoid Push(int u,int i)//Hash\u63d2\u5165\n{\n    int j;\n    Next[++p]=head[u];\n    head[u]=p;\n    l[p]=i;\n    for(j=1;j<=k;j++)\n        adj[j][p]=a[j][i];\n}\nint main(){\n    scanf(\"%d %d\",&n,&k);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&p);\n        for(j=1;j<=k;j++)\n            a[j][i]=a[j][i-1]+((p>>(j-1))&1);\n    }\n    p=0;\n    Push(0,0);//\u6ce8\u610f\u7b2c0\u5929\u4e5f\u8981\u52a0\u8fdb\u53bb\n    for(i=1;i<=n;i++)\n    {\n        s=0;\n        for(j=2;j<=k;j++)\n            s=((s+a[j][i]-a[1][i])*j%M+M)%M;\n        for(j=head[s];j!=0;j=Next[j])\n        {\n            for(m=2;m<=k;m++)\n                if(adj[m][j]-a[m][i]!=adj[1][j]-a[1][i])\n                    break;\n            if(m>k)\n            {\n                ans=max(ans,i-l[j]);\n                break;\n            }\n        }\n        if(j==0)//\u5982\u679ci\u80fd\u627e\u5230\u4e0e\u5b83\u76f8\u540c\u7684\u5e8f\u5217\uff0c\u5c31\u4e0d\u8981\u52a0\u4e86\uff0c\u53ea\u8981\u6700\u65e9\u7684\uff0c\u8981\u4e0d\u7136\u4f1aWA\n            Push(s,i);\n    }\n    printf(\"%d\",ans);\n}\n\n```",
        "postTime": 1508851341,
        "uid": 13185,
        "name": "\u53cc\u7ba1\u8367\u5149\u706f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]\u9ec4\u91d1\u9635\u5bb9\u5747\u8861Gold Balanced L\u2026\u3011"
    },
    {
        "content": "[\u67e5\u770b\u539f\u56fe\u8bf7\u6233\u8fd9\u91cc](https://www.luogu.org/problem/P1360)\n\n\u9996\u5148\u660e\u786e\u4e00\u70b9\uff0c\u9898\u76ee\u6c42\u7684\u662f\u6700\u957f\u7684\u6bcf\u9879\u80fd\u529b\u63d0\u5347\u5927\u5c0f\u90fd\u76f8\u7b49\u7684\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u662f\u4e0d\u7528\u5173\u5fc3\u4e00\u6bb5\u533a\u95f4\u6bcf\u9879\u80fd\u529b\u5230\u5e95\u63d0\u5347\u4e86\u591a\u5c11\uff0c\u53ea\u9700\u8981\u53bb\u8bb0\u5f55\u6bcf\u9879\u80fd\u529b\u7684\u5927\u5c0f\u5173\u7cfb\u5373\u53ef\u3002\u5373\u5982\u679c\u7b2ci\u5929\u80fd\u529bx\u6bd4\u80fd\u529by\u591ak\uff0c\u7b2cj\u5929\u80fd\u529bx\u6bd4\u80fd\u529by\u4e5f\u591ak\uff0c\u90a3\u4e48\u5728i~j\u5929\u4e2dx\u548cy\u7684\u53d8\u5316\u91cf\u90fd\u76f8\u7b49\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u7ef4\u62a4\u4e00\u4e2a\u4e8c\u7ef4\u524d\u7f00\u548c\u6765\u8bb0\u5f55\u6bcf\u4e00\u5929\u6bcf\u4e2a\u80fd\u529b\u7684\u80fd\u529b\u503c\uff0c\u518d\u7528\u76f8\u90bb\u4e24\u884c\u505a\u5dee\u6765\u8bb0\u5f55\u5927\u5c0f\u5173\u7cfb\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53bb\u5bfb\u627ex\uff0cy\uff0c\u4f7f\u5f97\u7b2cx\u5929\u7684\u5927\u5c0f\u5173\u7cfb\u4e0e\u7b2cy\u5929\u76f8\u540c\u4e14y-x\u5c3d\u53ef\u80fd\u5927\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u66b4\u529b\u679a\u4e3e\u53bb\u5bfb\u627e\uff0c\u590d\u6742\u5ea6\u662f$O(n^2)$\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u8fd9\u4e2a\u8868\u793a\u5927\u5c0f\u5173\u7cfb\u7684\u4e8c\u7ef4\u77e9\u9635\u7684\u5217\u6392\u5e8f\uff0c\u518d\u53bb$O(n)$\u7edf\u8ba1\u7b54\u6848\u3002\n\ncode:\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define ll long long\n#define INF 0x7fffffff\n#define re register\n#define rep(i,a,b) for(int i = (a); i <= (b); i++)\n#define qwq printf(\"qwq\\n\");\n\nusing namespace std;\n\nint read()\n{\n\tregister int x = 0,f = 1;register char ch;\n\tch = getchar();\n\twhile(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n\twhile(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n\treturn x * f;\n}\n\nint n,m,x,y,ans,cnt,flag,f[37][1000015],h[37][1000015],e[100005];\n\nstruct two{\n\tint num[47],p;\n}g[1000015];\n\nvoid broke(int x,int i)\n{\n\tint cnt = 0;\n\twhile(x > 0)\n\t{\n\t\tf[++cnt][i] = x & 1;\n\t\tx >>= 1;\n\t}\n}\n\nvoid init()\n{\n\tn = read(); m = read();\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\ty = x;\n\t\tx = read();\n\t\te[i] = x;\n\t\tif(x != y && x > 1) flag = 1;\n\t\tbroke(x,i);\n\t}\n}\n\nvoid make1()\n{\n\tfor(int i = 1; i <= m; i++)\n\t\tfor(int j = 1; j <= n; j++)\n\t\t\tf[i][j] = f[i][j - 1] + f[i][j];\n}\n\nint mysort(two a,two b)\n{\n\tint k = 1;\n\twhile(a.num[k] == b.num[k] && k <= m) k++;\n\tif(k <= m) return a.num[k] < b.num[k];\n\treturn a.p < b.p;\n}\n\nvoid make2()\n{\n\tfor(int i = 2; i <= m; i++)\n\t\tfor(int j = 1; j <= n; j++)\n\t\t\tg[j].num[i] = f[i][j] - f[i - 1][j],g[j].p = j;\n\tsort(g, g + n + 1,mysort);\n}\n\nbool cmp(int a,int b)\n{\n\tfor(int i = 1; i <= m; i++) if(g[a].num[i] != g[b].num[i]) return false;\n\treturn true;\n}\n\nvoid find()\n{\n\tans = 0;\n\tint head = 0;\n\twhile(head < n)\n\t{\n\t\tint k = head;\n\t\twhile(cmp(k + 1,head) && k < n) k++;\n\t\tif(k <= n) ans = max(ans,g[k].p - g[head].p);\n\t\thead = k + 1;\n\t}\n}\n\nint main()\n{\n\tinit();\n\tif(flag == 0)\n\t{\n\t\tint k = 0;\n\t\twhile(e[k + 1] == 0 && k < n) k++;\n\t\tprintf(\"%d\\n\",k);\n\t\treturn 0;\n\t}\n\tmake1();\n\tmake2();\n\tfind();\n\tprintf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1571131849,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]\u9ec4\u91d1\u9635\u5bb9\u5747\u8861Gold Balanced L\u2026\u3011"
    },
    {
        "content": "# P1360 [USACO07MAR]Gold Balanced Lineup G (\u524d\u7f00\u548c+\u601d\u7ef4)\n\n## \u524d\u8a00\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P1360)\n\n\u672c\u9898\u4f5c\u4e3a\u4e00\u9053Stl\u7ec3\u4e60\u9898\u6765\u8bf4\uff0c\u8fd8\u662f\u975e\u5e38\u4e0d\u9519\u7684\uff0c\u89e3\u51b3\u7684\u601d\u7ef4\u6bd4\u8f83\u5de7\u5999\n\n\u7b97\u662f\u4e00\u9053\u4e0d\u9519\u7684\u9898\n\n## \u601d\u8def\u5206\u6790\n\n\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u9898\uff0c\u6211\u8fd8\u4ee5\u4e3a\u662f\u6570\u636e\u7ed3\u6784\u9898\uff0c\u770b\u6765\u534a\u5929\u6ca1\u770b\u51fa\u6765\u6570\u636e\u7ed3\u6784\u548b\n\n\u505a(~~\u6211\u8fd8\u662f\u592a\u83dc\u4e86~~)\u3002\n\n\u6211\u4eec\u5bf9$m$\u79cd\u80fd\u529b\u6709$n$\u6b21\u64cd\u4f5c\uff0c\u9700\u8981\u627e\u5230\u5bf9\u6bcf\u79cd\u80fd\u529b\u63d0\u5347\u76f8\u540c\u7684\u6700\u5927\u64cd\u4f5c\n\n\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u6c42\u6700\u5927\u533a\u95f4\uff0c\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u8fd9 $m$ \u79cd\u6280\u80fd\u63d0\u5347\u503c\u7684\u524d\u7f00\u548c\uff0c\n\n\u5047\u8bbe\u7b2c $l+1$ \u6b21\u64cd\u4f5c\u5230\u7b2c $r$ \u6b21\u64cd\u4f5c\u5bf9 $m$ \u4e2a\u80fd\u529b\u7684\u63d0\u5347\u76f8\u540c\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\n\n\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\uff0c\u4efb\u53d6$m$\u79cd\u64cd\u4f5c\u4e2d\u7684\u4e00\u79cd\u64cd\u4f5c $q$ \uff0c\u6267\u884c\u7b2c $l$ \u6b21\u64cd\u4f5c\n\n\u540e\uff0c\u6bcf\u4e00\u79cd\u6280\u80fd\u63d0\u5347\u503c\u7684\u524d\u7f00\u548c\u4e0eq\u7684\u63d0\u5347\u503c\u524d\u7f00\u548c\u7684\u5dee\u503c\u4e0e\u6267\u884c $r$ \u64cd\u4f5c\n\n\u540e\u76f8\u7b49\uff0c\u8be5\u6027\u8d28\u662f\u5f88\u663e\u7136\u7684\uff0c\n\n\u56e0\u4e3a\u533a\u95f4\u64cd\u4f5c\u540e\u5bf9\u6bcf\u79cd\u6280\u80fd\u63d0\u5347\u76f8\u540c\uff0c\u6240\u4ee5\u5dee\u503c\u4e5f\u4e00\u5b9a\u76f8\u540c\u3002\u6240\u4ee5 $l$ \u5230\n\n$r$\u5c31\u662f\u4e00\u4e2a\u5747\u6a2a\u65f6\u671f\uff0c\u6839\u636e\u6b64\u6027\u8d28\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u51b3\u8be5\u9898\u4e86\u3002\n\n\u6211\u4eec\u5148\u9009\u5b9a\u4e00\u79cd\u80fd\u529b\uff0c\u7528 vector \u7ef4\u62a4\u6240\u6709\u80fd\u529b\u4e0e\u5176\u7684\u5dee\u503c\uff0c\u6267\u884c\u67d0\u4e00\u6b21\u64cd\n\n\u4f5c\u540e\uff0c\u82e5\u53d1\u73b0\u6b64\u65f6\u7684\u5dee\u503c\u4e0e\u8fc7\u53bb\u67d0\u4e00\u6b21\u64cd\u4f5c\u540e\u5dee\u503c\u76f8\u7b49(\u7528map\u7ef4\u62a4)\uff0c\u90a3\n\n\u4e48\u4ece\u8fc7\u53bb\u7684\u90a3\u6b21\u64cd\u4f5c(\u4e0d\u5305\u542b\u5176\u672c\u8eab)\u5230\u5f53\u524d\u64cd\u4f5c\u5c31\u662f\u4e00\u4e2a\u5747\u8861\u65f6\u671f\u3002\u6211\u4eec\n\n\u626b\u4e00\u904d\u64cd\u4f5c\uff0c\u627e\u5230\u6700\u5927\u957f\u5ea6\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n\u6211\u7684\u4ee3\u7801\u501f\u9274\u4e86\u697c\u4e0a\u90a3\u7bc7\u7528map\u5b9e\u73b0\u7684\u8d85\u77ed\u7684\u9898\u89e3\n\norz\u592a\u5f3a\u4e86\uff0c\u5728\u6b64\u6211\u5bf9\u5176\u8fdb\u884c\u90e8\u5206\u89e3\u91ca\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<map>\n#include<string>\n#include<vector>\n#define int long long \nusing namespace std;\nconst int maxn=1e5+10;\ninline int read(){\n\tint ret=0;\n\tint f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')\n\t\t\tf=-f;\n\t\tch=getchar();\n\t}\n\twhile(ch<='9'&&ch>='0'){\n\t\tret=ret*10+(ch^'0');\n\t\tch=getchar();\n\t}\n\treturn ret*f;\n}\nint n,m;\nint ans,q;\nmap<vector<int>,int>a; \nsigned main(){\n\tn=read();\n\tm=read();\n\tvector<int>p(m+10);\n\ta[p]=0;//\u8bb0\u5f97\u521d\u59cb\u5316\uff0c\u4e0d\u7136\u4f1awa\n\tfor(int i=1;i<=n;i++){\n\t\tq=read();\n\t\tfor(int j=0;j<m;j++){\n\t\t\tif(q&(1<<j)){\n\t\t\t\tp[j]++;//\u7ef4\u62a4\u524d\u7f00\u548c\n\t\t\t}\n\t\t}\n        if(q&1)\n        \tfor(int j=0;j<m;j++){\n        \t\tp[j]--;\n\t\t\t}\n/*\u4e0a\u8ff0\u64cd\u4f5c\u662f\u5728\u7ef4\u62a4\u5dee\u503c\uff0c\u6211\u4eec\u9009\u53d6\u7b2c\u4e00\u79cd\u80fd\u529b\u4f5c\u4e3a\u6807\u51c6\u503c\uff0c\u4e5f\u5c31\u662f\u4e0a\u8ff0\n\u7684q,\u5982\u679c\u672c\u6b21\u64cd\u4f5c\u5bf9\u7b2c\u4e00\u79cd\u80fd\u529b\u6709\u63d0\u5347\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u83b7\u5f97\u5dee\u503c\uff0c\u6240\u4ee5\u5c31\u8981\u628a\u6240\u7ed9\u6240\u6709\u80fd\u529b\u51cf1\uff1b\n            */\n        if(a.count(p)){//count\u51fd\u6570\uff0c\u83b7\u5f97\u76f8\u540c\u5224\u65ad\u8fc7\u53bb\u7684\u64cd\u4f5c\u662f\u5426\u6709\u76f8\u540c\u5dee\u503c\n        \tans=max(ans,i-a[p]);//\u83b7\u53d6\u6700\u5927\u957f\u5ea6\uff0c\u4e3a\u4ec0\u4e48\u4e0d+1\uff0c\u5e94\u4e3a\u4e0d\u5305\u542b\u5de6\u7aef\u533a\u95f4\n\t\t}\n        else a[p]=i;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\u5982\u679c\u5bf9\u6b64\u6709\u7591\u60d1\uff0c\u6b22\u8fce\u8bc4\u8bba\u3002",
        "postTime": 1606373725,
        "uid": 250013,
        "name": "keep_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]Gold Balanced Lineup G\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u66f4\u4f73](https://tle666.github.io/2019/11/13/[USACO07MAR]%20Gold%20Balanced%20Lineup/)\n\n# **Description**\n\n\u6709 $n$ \u5929\uff0c $m$ \u79cd\u80fd\u529b\u3002\u6bcf\u5929\u90fd\u5bf9\u5e94\u7740\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u7b2c $i$ \u4f4d\u662f $1$ \u4ee3\u8868\u7b2c $i$ \u79cd\u80fd\u529b\u63d0\u5347 $1$ \u6b21\u3002\u5426\u5219\u4e0d\u63d0\u5347\u3002\u5982\u679c\u5728\u8fde\u7eed\u7684\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u6bcf\u9879\u80fd\u529b\u90fd\u63d0\u5347\u4e86\u76f8\u540c\u7684\u6b21\u6570\uff0c\u5c31\u79f0\u8fd9\u6bb5\u65f6\u95f4\u4e3a\u4e00\u4e2a\u5747\u8861\u65f6\u671f\u3002\u6c42\u5747\u8861\u65f6\u671f\u7684\u6700\u5927\u957f\u5ea6\u3002\n\n\u5bf9\u4e8e $100 \\%$ \u7684\u6570\u636e\uff0c\u6709 $n \\leq 10^5,m \\leq 30$ \n\n[\u9898\u76ee\u94fe\u63a5\u6233\u8fd9\u91cc](https://www.luogu.org/problem/P1360)\n\n# **Solution**\n\n\u6211\u4eec\u53d1\u73b0 $m$ \u4e0d\u5927\uff0c\u4e8e\u662f\u8003\u8651\u4e00\u6b21\u5bf9\u6bcf\u4e2a\u80fd\u529b\u7b97\u51fa\u524d\u7f00\u548c\u3002\u8bbe\u7b2c $i$ \u5929\u6240\u6709 $m$ \u4e2a\u80fd\u529b\u6240\u6784\u6210\u7684\u5e8f\u5217\u4e3a $S_i$ \uff0c\u5219\u4e00\u4e2a\u4ece\u7b2c $l$ \u5929\u5230\u7b2c $r$ \u5929\u7684\u5747\u8861\u65f6\u671f\u80af\u5b9a\u6ee1\u8db3 $S_{l - 1}$ \u548c $S_r$ \u5bf9\u5e94\u6bcf\u9879\u7684\u5dee\u76f8\u540c\u3002\u6bd4\u5982 $\\texttt{[1, 3, 2, 4]}$ \u548c $\\texttt{[3, 5, 4, 6]}$\n\n\u7531\u6b64\uff0c\u6211\u4eec\u80fd\u591f\u60f3\u5230\u54c8\u5e0c\u3002\n\n\u6211\u4eec\u5e0c\u671b\u7ed9\u51fa\u4e00\u79cd\u5bf9\u5e94\u6cd5\u5219\u4f7f\u6240\u6709 \u5bf9\u5e94\u6bcf\u9879\u7684\u5dee\u76f8\u540c \u7684\u5e8f\u5217\u90fd\u5bf9\u5e94\u6210\u4e00\u4e2a\u54c8\u5e0c\u503c\u3002\u56e0\u4e3a\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u5e8f\u5217\u4e4b\u95f4\u4e00\u5b9a\u662f\u4e00\u4e2a\u5747\u8861\u65f6\u671f\u3002\u4f8b\u5982 $\\texttt{[2, 1, 4, 0]}$ \uff0c $\\texttt{[4, 3, 6, 2]}$ \uff0c \u548c $\\texttt{[5, 4, 7, 3]}$ \u8fd9\u4e09\u4e2a\u5e8f\u5217\u5e94\u8be5\u5bf9\u5e94\u540c\u4e00\u79cd\u3002\n\n\u7531\u4e8e $m$ \u5f88\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u628a\u6574\u4e2a\u5e8f\u5217\u52a0\u4e0a\u6216\u51cf\u53bb\u4e00\u4e2a\u6570 $d$ \uff0c\u4f7f\u5f97\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u6570\u4e3a $0$ \uff0c\u4e5f\u5c31\u662f\u628a\u6574\u4e2a\u5e8f\u5217\u540c\u65f6\u51cf\u53bb\u7b2c\u4e00\u4e2a\u6570\u3002\u6bd4\u5982\u628a $\\texttt{[2, 1, 4, 0]}$ \u5168\u90e8\u51cf\u4e8c\uff0c\u53d8\u4e3a $\\texttt{[0, -1, 2, -2]}$ \u3002\uff08\u8d1f\u6570\u4e5f\u65e0\u59a8\uff0c\u6bd5\u7adf\u54c8\u5e0c\u8ddf\u6b63\u8d1f\u65e0\u5173\uff09\n\n\u73b0\u5728\uff0c\u53ea\u9700\u6c42\u51fa\u4f9d\u6b21\u7d2f\u79ef\u7684\u80fd\u529b\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u54c8\u5e0c\u7684\u503c\uff1a\n\n- \u82e5\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u5219\u628a\u5f53\u524d\u65f6\u95f4\uff08\u5929\u6570\uff09\u8bb0\u5f55\u5230\u4e00\u4e2a\u6570\u7ec4\u4e2d\u3002\n- \u82e5\u51fa\u73b0\u8fc7\uff0c\u5373\u5f53\u524d\u54c8\u5e0c\u503c\u5bf9\u5e94\u7684\u6570\u7ec4\u5df2\u7ecf\u6709\u503c\uff0c\u5219\u8bf4\u660e \u5f53\u524d \u4e0e \u6570\u7ec4\u4e2d\u8bb0\u5f55\u7684\u65f6\u95f4 \u8fd9\u4e24\u8005\u95f4\u662f\u4e00\u4e2a\u5747\u8861\u65f6\u671f\u3002\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n**\u7279\u522b\u63d0\u9192\uff1a\u5982\u679c\u7ecf\u8fc7\u64cd\u4f5c\uff08\u5373\u5168\u5e8f\u5217\u51cf\u53bb\u7b2c\u4e00\u4e2a\u6570\uff09\u540e\u5f97\u5230\u5168 0 \u5e8f\u5217\uff0c\u5219\u7b2c 1 \u5929\u5230\u5b83\u4e5f\u662f\u4e00\u4e2a\u5747\u8861\u65f6\u671f\uff0c\u56e0\u4e3a\u7b2c 0 \u5929\u7684\u5e8f\u5217\u4e5f\u662f\u5168 0 \u5e8f\u5217\u3002**\n\n\uff08\u611f\u8c22 $\\text{wzj dalao}$ \u7684\u63d0\u9192\uff09\n\n\u4f8b\u5982\u7b2c $5$ \u5929\u65f6\u5e8f\u5217\u4e3a $\\texttt{[3, 3, 3, 3]}$ \uff0c\u5219\u5bf9\u5e94\u7740 $\\texttt{[0, 0, 0, 0]}$ \u5e8f\u5217\uff0c\u8bf4\u660e\u548c\u7b2c $0$ \u5929\u4e4b\u540e\u4e00\u5929\uff08\u7b2c $1$ \u5929\uff09\u6784\u6210\u4e86\u4e00\u4e2a\u5747\u8861\u65f6\u671f\u3002\n\n# **Code**\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define rep(i, a, b) for (int i = (a); i <= (b); i++)\n#define per(i, a, b) for (int i = (a); i >= (b); i--)\ntypedef long long ll;\nconst int N = 1e5 + 100;\nconst int bas = 29;\nconst int mod = 998244353;\nconst int bs2 = 19;\nconst int md2 = 19260817;\nconst int bs3 = 101;\nconst int md3 = 9291433;\nconst int bs4 = 67;\nconst int md4 = 1e9 + 7;\n\nint n, m, a[N], b[N], ans;\n\nunordered_map <ll, int> mp; // \u54c8\u5e0c\u548c\u65f6\u95f4\u7684\u5bf9\u5e94\n\nll Hash() { // \u591a\u91cd\u54c8\u5e0c\uff0c\u4ee5\u9632\u88ab\u5361\n  ll num = 1, res = 0;\n  rep(i, 1, m) {\n    res += b[i] * num;\n    res %= mod;\n    num *= bas;\n  }\n  ll rs2 = 0; num = 1;\n  rep(i, 1, m) {\n    rs2 += b[i] * num;\n    res %= md2;\n    num *= bs2;\n  }\n  ll rs3 = 0; num = 1;\n  rep(i, 1, m) {\n    rs3 += b[i] * num;\n    res %= md3;\n    num *= bs3;\n  }\n  return (res * bs4 * bs4 + rs2 * bs4 + rs3) % md4; // \u201c\u54c8\u5e0c \u5957 \u54c8\u5e0c\u201d\n}\n\nvoid chg(int x) { // \u5bf9\u5e94\u5e8f\u5217\u3002\u628a b \u6570\u7ec4\u5bf9\u5e94\u6210\u4e0a\u8ff0\u5e8f\u5217\uff08\u5373\u7b2c\u4e00\u4e2a\u6570\u4e3a 0 \uff09\n  per(i, m - 1, 0) {\n    if (x >= (1 << i)) {\n      x -= (1 << i);\n      a[i + 1]++;\n    }\n  }\n  b[1] = 0;\n  rep(i, 2, m) b[i] = a[i] - a[1];\n}\n\nint main() {\n  scanf(\"%d %d\", &n, &m);\n  mp[0] = 0;\n  rep(i, 1, n) {\n    int d;\n    scanf(\"%d\", &d);\n    chg(d);\n    ll tmp = Hash();\n    if (!mp.count(tmp)) mp[tmp] = i; // \u8bb0\u5f55\u7b2c\u4e00\u6b21\u65f6\u95f4\n    else\n      ans = max(ans, i - mp[tmp]); // \u8ba1\u7b97\u7b54\u6848\uff0c\u66f4\u65b0\u7b54\u6848\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n```\n\n",
        "postTime": 1573712652,
        "uid": 54628,
        "name": "eros1on",
        "ccfLevel": 0,
        "title": "\u300cUSACO07MAR\u300dGold Balanced Lineup"
    },
    {
        "content": "\u554a\u6211\u5199\u4e2a\u7a0d\u5fae\u8be6\u7ec6\u4e00\u70b9\u7684\u2026\u2026\n\n\n\u6c42\u4e00\u6bb5\u6700\u957f\u7684\u201c\u5e73\u8861\u533a\u95f4\u201d\uff0c\u5c31\u662f\u5728\u8fd9\u6bb5\u533a\u95f4\u5185\u5404\u79cd\u7279\u5f81\u7684\u6570\u91cf\u548c\u76f8\u7b49\u3002\u9996\u5148\u5341\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236\uff0c\u7136\u540e\u6c42\u524d\u7f00\u548csum\uff0c\u8fd9\u662f\u4e3a\u4e86\u65b9\u4fbf\u4f5c\u5dee\u5224\u65ad\u2014\u2014\u533a\u95f4\u5f00\u5934\u4e24\u7279\u5f81\u7684\u5deesum[start][x]-sum[start][0]==\u7ed3\u5c3e\u4e24\u7279\u5f81\u7684\u5dee(sum[start][x]+y)-(sum[start][0]+y)==sum[end][x]-sum[end][0]\uff0c0<=x<k,y\u662f\u6bcf\u4e2a\u7279\u5f81\u589e\u52a0\u7684\u6570\u91cf\u3002\u90a3\u4e48\uff0c\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e2ax\u90fd\u6ee1\u8db3\u4ee5\u4e0a\u7b49\u5f0f\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u533a\u95f4\u6210\u7acb\u3002\u4e3a\u4e86\u51cf\u5c0f\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u54c8\u5e0c\u64cd\u4f5c\uff0cminus[i][x]=sum[i][x]-sum[i][0],\u5c06\u2211minus[i][x] %mod\u8868\u793a\u4e3akey[i]\uff0c\u5b83\u5c31\u662f\u6211\u4eec\u54c8\u5e0c\u7684\u201c\u94a5\u5319\u201d\u3002\u5f53\u7136\uff0c\u53ea\u662f\u6c42\u548c+mod\u8fd8\u4e0d\u591f\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u6bd4\u8f83\u6bcf\u4e00\u4f4d\u662f\u5426\u90fd\u6ee1\u8db3\uff0c\u66f4\u65b0\u7b54\u6848\u4e3a\u7f16\u53f7\u7684\u5dee\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u80fdAC\u7684\u601d\u8def\u3002\n\n\n\u6b64\u5916\u8fd8\u6709\u597d\u591a\u7ec6\u8282\uff08\u5982\u679c\u4f60\u89c9\u5f97\u592a\u70e6\u53ef\u4ee5\u4e0d\u770b23333333\uff09\u3002\n\n\n\u246022\u884c \u5c06key[i]\u53d8\u4e3a\u6b63\u6570\u518d\u6a21\u2014\u2014\u4e0d\u7136\u5982\u679c\u5b83\u8fd8\u662f\u8d1f\u6570\u5c31\u4f1a\u6570\u7ec4\u8d8a\u754c\u3002\n\n\n\u2461search\u627e\u7b54\u6848\uff0c\u5982\u679c\u5224\u51fa\u76f8\u7b49\u76f4\u63a5return\u800c\u4e0d\u7528\u653e\u5165\u961f\u5217\u2014\u2014\u6211\u4eec\u8bbea,b,c\u4e09\u4e2aminus\uff0cid a<id b<id c\uff0c\u627e\u5230a==b\u66f4\u65b0\u7b54\u6848\uff0c\u5982\u679ca==c\uff0c\u90a3\u4e48id c-id a>id b-id a\uff0c\u663e\u7136b\u6ca1\u6709\u5fc5\u8981\u653e\u5165\u961f\u5217\u3002\n\n\n\u2462\u628alist[0]\u653e\u51650\u2014\u2014\u7ed9\u4e00\u7ec4\u6570\u636e1 3 0\uff0c\u5e94\u8be5\u8f93\u51fa1\u800c\u4e0d\u662f0\u3002\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath> \n#include<vector> \n#define mod 100003 \n#define inf 1<<29\nusing namespace std;\nint n,k,tz[mod][40],ms[mod][40],sum[mod][40],key[mod],ans; \nvector<int>list[mod];\nvoid init()\n{\n    for(int i=0;i<mod;++i) list[i].clear();\n    list[0].push_back(0);\n    for(int i=1;i<=n;++i){\n        for(int j=0;j<k;++j){\n            sum[i][j]=sum[i-1][j]+tz[i][j];\n            ms[i][j]=sum[i][j]-sum[i][0]; \n            key[i]+=ms[i][j]; \n        }\n        key[i]=abs(key[i])%mod; \n    }\n}\nvoid search(int knum,int id)\n{\n    int len=list[knum].size();\n    for(int j=0;j<len;++j){\n        int f=1;\n        for(int l=0;l<k;++l)\n            if(ms[list[knum][j]][l]!=ms[id][l]){\n                f=0;\n                break; \n            } \n        if(f){\n            ans=max(ans,id-list[knum][j]);\n            return; \n        }\n    }\n    list[knum].push_back(id); \n}\nint main()\n{\n    int t; \n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",&t); \n        for(int j=0;j<k;++j){\n            tz[i][j]=t%2;\n            t/=2; \n        }\n    }\n    init();\n    for(int i=1;i<=n;++i) search(key[i],i);\n    printf(\"%d\",ans); \n    return 0;\n}\n```",
        "postTime": 1501725172,
        "uid": 34795,
        "name": "12mango",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]\u9ec4\u91d1\u9635\u5bb9\u5747\u8861Gold Balanced L\u2026\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u4f4d\u6570\u6309\u81ea $0$ \u5230 $m-1$ \u4f4d\u8ba1\u7b97\u3002\n\n\u8003\u8651\u628a\u4e8c\u8fdb\u5236\u4f4d\u505a\u4e00\u4e2a\u524d\u7f00\u548c\u3002\n\n\u524d\u7f00\u548c\u505a\u5b8c\u8bbe\u7b2c $i$ \u5929,\u7b2c $j$ \u4f4d\u4e3a $a[i][j]$\n\n\u9898\u76ee\u8f6c\u5316\u6210\u6c42\u6700\u5927\u533a\u95f4 $[l,r]$ \u4f7f\u5f97\u5bf9\u4e8e\u6bcf\u4e2a $k$ \u6709 $a[r][k]-a[l-1][k]$ \u4f4d\u5b9a\u503c\u3002\n\n\u4e3a\u5b9a\u503c\u5c31\u6709 $a[r][k]-a[l-1][k]=a[r][0]-a[l-1][0]$\n\n\u5373 $a[r][k]-a[r][0]=a[l-1][k]-a[l-1][0]$\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u5bf9\u4e8e\u6240\u6709 $i$ \u628a $a[i][k]$ \u51cf\u53bb $a[i][0]$ \n\n\u73b0\u5728\u5c31\u76f8\u5f53\u4e8e\u6709 $n$ \u5929\uff0c\u6bcf\u5929\u662f\u6709\u4e00\u4e2a\u5e8f\u5217\uff0c\u6c42\u6700\u5927\u533a\u95f4 $[l,r]$ \u4f7f\u5f97\u7b2c $l$ \u4e2a\u5e8f\u5217\u548c\u7b2c $r$ \u7684\u5e8f\u5217\u76f8\u540c\u3002\n\n\u56e0\u4e3a\u8981\u4f7f\u533a\u95f4\u6700\u5927\uff0c\u6240\u4ee5\u5de6\u7aef\u70b9\u8981\u5c3d\u91cf\u5c0f\uff0c\u7528 map \u8bb0\u5f55\u6bcf\u79cd\u5e8f\u5217\u6700\u65e9\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5c31\u505a\u5b8c\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <map>\nusing namespace std;\ninline int read(){\n\tregister int x=0,f=0,ch=getchar();\n\twhile('0'>ch||ch>'9')f^=ch=='-',ch=getchar();\n\twhile('0'<=ch&&ch<='9')x=(x<<1)+(x<<3)+(ch^'0'),ch=getchar();\n\treturn f?-x:x;\n}\nconst int MAX=1e5+5,MAXM=50;\nint n,m;\nint a[MAX][MAXM],x,ans;\nvector<int>v(MAXM);\nmap<vector<int>,int>ma;\nsigned main(){\n//\tfreopen(\"in.in\",\"r\",stdin);\n\tn=read();m=read();\n\tfor(register int i=1;i<=n;++i){\n\t\tx=read();\n\t\tfor(register int j=0;j<m;++j)a[i][j]=a[i-1][j]+(x>>j&1);\n\t}\n\tfor(register int i=1;i<=n;a[i][0]=0,++i)for(register int j=1;j<m;++j)a[i][j]-=a[i][0];\n\tma[v]=0;\n\tfor(register int i=1;i<=n;++i){\n\t\tfor(register int j=0;j<m;++j)v[j]=a[i][j];\n\t\tif(ma.count(v))ans=max(ans,i-ma[v]);\n\t\telse ma[v]=i;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1605954352,
        "uid": 119062,
        "name": "Lates",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]Gold Balanced Lineup G\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P1360)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b2c\u4e00\u6b65\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u4e00\u4e2a$cnt[j][i]$\u7684\u6570\u7ec4\u5b58\u50a8\u5728\u7b2c$j$\u4e2d\u80fd\u529b\u4e0a\u9762\u589e\u52a0\u7684\u524d\u7f00\u548c\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u6211\u4eec\u5148\u601d\u8003\u66b4\u529b\u505a\u6cd5\u3002\u679a\u4e3e\u5e8f\u5217\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u66b4\u529b\u68c0\u67e5\u8fd9\u4e2a\u533a\u95f4\u662f\u5426\u5408\u6cd5\uff0c\u65f6\u95f4\u662f$O(N^2M)$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u4f18\u5316\u3002\u5982\u679c\u6211\u4eec\u786e\u5b9a\u7b2c$i$\u4e2a\u4f4d\u7f6e\u4e3a\u53f3\u7aef\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u6700\u4f18\u5de6\u7aef\u70b9\u5176\u5b9e\u5c31\u662f\u5728$cnt$\u7684\u5dee\u5206\u6570\u7ec4\u4e0a\u548c$i$\u76f8\u540c\u7684\u6700\u5de6\u7684\u4e00\u4e2a\u7aef\u70b9\uff08$cnt$\u7684\u5dee\u5206\u6570\u7ec4\u6307\u7684\u662f\u4e00\u4e2a\u6570\u7ec4$f[j][i]=cnt[j][i]-cnt[j-1][i]$\uff09\u3002\u5bf9\u6bcf\u4e2a$f[i]$\u8fdb\u884c\u54c8\u5e0c\uff0c\u4e22\u5230\u4e00\u4e2a$map$\u6216\u8005$set$\u91cc\u9762\uff0c\u6bcf\u6b21\u67e5\u8be2\uff0c\u5982\u679c\u5f53\u524d\u7684\u54c8\u5e0c\u503c\u5728$map$\u91cc\u9762\u51fa\u73b0\u4e86\uff0c\u5c31\u66f4\u65b0\u7b54\u6848\uff1b\u5426\u5219\u5c31\u5c06\u5f53\u524d\u7684\u54c8\u5e0c\u503c\u653e\u5230$map$\u91cc\u9762\u3002\u65f6\u95f4$O(Nlog_2N)$\u3002  \n# \u4ee3\u7801\n```cpp\n#include <map>\n#include <cstdio>\n#include <utility>\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef long long LL;\n\nconst LL mod = 1e9 + 7;\nconst int base = 200003;\nconst int MAXN = 100005, MAXM = 35; \n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n\treturn a > b ? a : b;\n}\n\nmap<ull, int> mp; \n\null h1[MAXN];\nint pro[MAXN], cnt[MAXM][MAXN];\nint head[MAXM], nxt[MAXN];\nint N, M;\n\nbool chk( const int l, const int r )\n{\n\tint sta = cnt[0][r] - cnt[0][l - 1];\n\tfor( int i = 1 ; i < M ; i ++ ) if( sta ^ ( cnt[i][r] - cnt[i][l - 1] ) ) return false;\n\treturn true;\n}\n\nvoid add( const int indx, const int ID )\n{\n\tnxt[ID] = head[indx];\n\thead[indx] = ID;\n}\n\nint main()\n{\n//\tfreopen( \"testdata.in\", \"r\", stdin );\n\tread( N ), read( M );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tread( pro[i] );\n\t\tfor( int j = 0 ; j < M ; j ++ ) cnt[j][i] = cnt[j][i - 1] + bool( pro[i] & ( 1 << j ) );\n\t}\n\tfor( int i = 0 ; i <= N ; i ++ )\n\t\tfor( int j = 1 ; j < M ; j ++ )\n\t\t\th1[i] = h1[i] * base + ( cnt[j][i] - cnt[j - 1][i] + N );\n\tmp.clear();\n\tmp[h1[0]] = 0;\n    //\u9884\u5148\u5c060\u4f4d\u7f6e\u4e5f\u653e\u5230map\u91cc\u9762\n\tint res = 0;\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tif( mp.find( h1[i] ) != mp.end() ) \n\t\t\tres = MAX( res, i - mp[h1[i]] );\n        //\u5982\u679c\u5f53\u524d\u54c8\u5e0c\u503c\u53ef\u4ee5\u627e\u5230\u5c31\u4e0d\u9700\u8981\u5c06\u5f53\u524d\u7684\u4e0b\u6807\u653e\u5230map\u91cc\u9762\uff0c\u5fc5\u7136\u4e0d\u4f18\n\t\telse \n\t\t\tmp[h1[i]] = i;\n\t}\n\twrite( res ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1567230386,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[P1360][USACO07MAR]\u9ec4\u91d1\u9635\u5bb9\u5747\u8861"
    },
    {
        "content": "# \u9898\u89e3 P1360 \u3010\u9ec4\u91d1\u9635\u5bb9\u5747\u8861\u3011\n## \u8fd9\u9898\u653e\u5728STL\u7684\u4f5c\u4e1a\u9898\u91cc\uff0c\u4f46\u662f\uff0c\u6211\u771f\u7684\u6ca1\u6709\u60f3\u51fa\u4efb\u4f55\u5173\u4e8eSTL\u7684\u505a\u6cd5\u6765\uff0cSTL\u4e5f\u4e0d\u592a\u61c2\uff0c\u6240\u4ee5\u5c31\u624b\u52a8\u968f\u4fbf\u4e71\u5199\u3002\n### \u4e3b\u8981\u9898\u610f\u5c31\u662f\uff0c\u8ba9\u4f60\u5bf9m\u4e2a\u6570\u7ec4\u90fd\u8fdb\u884c\u4e00\u904d\u524d\u7f00\u548c\u64cd\u4f5c\uff0c\u7136\u540e\u8ba9\u4f60\u627e\u51fa\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\uff0c\u4f7f\u5f97\u8fd9\u6bb5\u533a\u95f4\u4e24\u7aef\u70b9\u7684\u5404\u4e2a\u524d\u7f00\u548c\u6570\u7ec4\u5dee\u503c\u90fd\u4e00\u6837\uff0c\u628a\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5927\u957f\u5ea6\u8bb0\u4e3a\u7b54\u6848\u3002\n### \u5904\u7406\u5b8c\u524d\u7f00\u548c\u540e\uff0c\u76f8\u4fe1\u5927\u5bb6\u5bf9\u4e8e O(n^2\uff09\u7684\u7b97\u6cd5\u90fd\u77e5\u9053\uff0c\u66b4\u529b\u679a\u4e3e\u533a\u95f4\u4e24\u7aef\u70b9\u7136\u540e\u5224\u65ad\u662f\u5426\u6210\u7acb\u3002\u4f46\u662f\u80af\u5b9a\u4f1aT\uff0c\u6240\u4ee5\u6211\u60f3\u5230\u53e6\u4e00\u79cd\u67e5\u8be2\u65b9\u6cd5\u3002\u5bf9\u4e8e\u6bcf\u4e00\u5929\u7684m\u4e2a\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5b83\u4eec\u4e4b\u95f4\u7684\u5dee\u503c\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\u6765\u8bf4\uff0c\u82e5\u8fd9\u4e2a\u8bb0\u5f55\u5b83\u4eec\u4e4b\u95f4\u5dee\u503c\u7684\u6570\u7ec4\u90fd\u4e00\u6837\uff0c\u5219\u8bf4\u660e\u8fd9\u6bb5\u533a\u95f4\u5185\u6240\u6709\u7684\u524d\u7f00\u548c\u589e\u52a0\u7684\u503c\u90fd\u4e00\u6837\uff0c\u8fd9\u4e0d\u5c31\u7b26\u5408\u6761\u4ef6\u4e86\u5417\uff1f \u6210\u529f\u8f6c\u5316\u3002\n### O\uff08n\uff09\u5904\u7406\u5b8c\u524d\u7f00\u548c \u4e0e \u6240\u6709\u524d\u7f00\u548c\u4e4b\u95f4\u7684\u5dee\u503c\u4ee5\u540e\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u5dee\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728O\uff08n\uff09\u65f6\u95f4\u5185\u67e5\u8be2\u5230\u6240\u6709\u524d\u7f00\u548c\u5dee\u503c\u90fd\u4e00\u6837\u7684\u7aef\u70b9\u3002\u800c\u4e4b\u524d\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u4e3a n log n\uff0c\u5bf9\u4e8e\u5341\u4e07\u7ea7\u7684\u6570\u636e\uff0c\u5b8c\u5168\u53ef\u4ee5\u8fc7\u3002\n\n## \u4e0b\u9762\u653e\u4ee3\u7801\n\n\n```cpp\n #include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5,M=35;\nint n,m,v,k,b[N][M],sum[N][M],now[M],noww,ans;\nbool jay;\nstruct number{int a[M],id;}num[N];\n\ninline bool cmp(number x,number y){\nfor (register int i=1; i<m; ++i) if (x.a[i]<y.a[i]) return true; else if (x.a[i]>y.a[i]) return false;\nif (x.id<y.id) return true;\nreturn false;\n}\n\nint main(){\nscanf(\"%d%d\",&n,&m); \nmemset(b,0,sizeof(b));\n\tfor (register int i=1; i<=n; ++i)\n\t{\n\tscanf(\"%d\",&v);\n\tk=1;\n\t\twhile (v)\n\t\t{\n\t\tb[i][k]+=(v&1);\n\t\tk++;\t\n\t\tv>>=1;\t\n\t\t}\n\t}\n\nfor (register int i=1; i<=n; ++i)\nfor (register int j=1; j<=m; ++j) sum[i][j]=sum[i-1][j]+b[i][j];\n\t\n\tfor (register int i=1; i<=n; ++i) \n\t{\n\tfor (register int j=1; j<m; ++j) num[i].a[j]=sum[i][j]-sum[i][j+1];\n\tnum[i].id=i;\n\t}\nn++;\nfor (register int i=1; i<m; ++i) num[n].a[i]=0; num[n].id=0;\nsort(num+1,num+n+1,cmp);\n\nfor (register int i=1; i<m; ++i) now[i]=num[1].a[i]; noww=num[1].id;\n\tfor (register int i=2; i<=n; ++i) \n\t{\n\tjay=true;\n\tfor (register int j=1; j<m; ++j) if (num[i].a[j]!=now[j]) {jay=false; break;}\n\t\tif (jay) \n\t\t\tans=max(ans,num[i].id-noww);\n\t\telse \n\t\t\t{\n\t\t\tfor (register int j=1; j<m; ++j) now[j]=num[i].a[j];\n\t\t\tnoww=num[i].id;\n\t\t\t}\n\t}\n\nprintf(\"%d\\n\",ans);\nreturn 0;\t\n}\n```\n",
        "postTime": 1552988305,
        "uid": 73436,
        "name": "\u8bf4\u597d\u4e0d\u54ed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]\u9ec4\u91d1\u9635\u5bb9\u5747\u8861Gold Balanced L\u2026\u3011"
    },
    {
        "content": "\u7c7b\u4f3c\u524d\u7f00\u548c\u3002\u6bcf\u4f4d\u5206\u522b\u505a\u524d\u7f00\u548c\u3002\u7136\u540e\u51cf\u53bb\u7b2c\u4e00\u4f4d\u7684\u6570\u3002\u6bcf\u4f4d\u5747\u76f8\u540c\u5219\u8868\u793a\u533a\u95f4\u53ef\u53d6\u3002\n\n```cpp\n 1 #include <cstdio>\n 2 #include <cstring>\n 3 #include <algorithm>\n 4 #include <set>\n 5 #define inc(i,j,k) for(int i=j;i<=k;i++)\n 6 #define maxn 100010\n 7 using namespace std;\n```\n8\n```cpp\n 9 inline int read(){\n10     char ch=getchar(); int f=1,x=0;\n11     while(ch<'0'||ch>'9'){if(ch=='-')f=-1; ch=getchar();}\n12     while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();\n13     return f*x;\n14 }\n15 int sum[maxn][50],n,k,ans;\n16 struct nd{\n17     int id; int num[50];\n18     bool operator < (const nd &a)const{inc(i,1,k-1)if(num[i]!=a.num[i])return num[i]<a.num[i]; return 0;}\n19 };\n20 multiset<nd>st; nd a;\n21 int main(){\n22     n=read(); k=read();\n23     inc(i,1,n){\n24         int x=read(); inc(j,1,k)sum[i][j]=sum[i-1][j]; for(int j=k-1;j>=0;j--)if(x&(1<<j))sum[i][j+1]++;\n25     }\n26     inc(j,1,k-1)a.num[j]=0; a.id=0; st.insert(a);\n27     inc(i,1,n){\n28         inc(j,1,k-1)a.num[j]=sum[i][j]-sum[i][j+1]; a.id=i;\n29         multiset<nd>::iterator sti=st.find(a); if(sti==st.end())st.insert(a);else{\n30             ans=max(ans,i-sti->id);\n31         }\n32     }\n33     printf(\"%d\",ans); return 0;\n34 }\n```",
        "postTime": 1477387816,
        "uid": 18667,
        "name": "huadongf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]\u9ec4\u91d1\u9635\u5bb9\u5747\u8861Gold Balanced L\u2026\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u6211\u4ee5\u4e3a\u9898\u610f<=>\u6c42\u533a\u95f4\u548cmod(1<<m-1)=0\u7684\u6700\u957f\u533a\u95f4\n\n\u7528\u524d\u7f00\u548c\u8868\u793a\u5c31\u662f(s[r]-s[l-1]) mod (1<<m-1)=0\uff0c<=>s[r]=s[l-1](mod (1<<m-1))\n\n\u4e8e\u662f\u4e00\u904d\u54c8\u5e0c\u540e\u4e00\u904d\u627e\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u7136\u800c\u6211\u9519\u4e86\u3002\u533a\u95f4\u548cmod(1<<m-1)=0\u662f\u80af\u5b9a\u6ee1\u8db3\u7684\uff0c\u4f46\u4e0d\u6b62\u6ee1\u8db3\u8fd9\u4e00\u6761\u3002\n\n\u4f8b\u59821+10+10+10=111\u5c31\u4e0d\u884c\u3002\n\n\u6240\u4ee5\u5f97\u8bb0\u5f55\u6bcf\u4e00\u4f4d\u7684\u4e2a\u6570\u3002\n\n\u4f46\u54c8\u5e0c\u4ecd\u7136\u53ef\u7528\u539f\u6765\u7684\u3002\uff08\u6211\u7adf\u7136\u662f\u5f53\u524d\u6700\u4f18\u89e3\uff09\n\n\u00b7\u00b7\u00b7pascal\n\n\n\n\n\n\n\n\n```cpp\n```\nconst p=10000007;\ntype arr=array[0..30] of longint;\nvar\n n,m,i,j,num,ans,a:longint;\n s:array[0..100000] of int64;\n r:array[0..100000] of arr;\n t:array[0..p] of longint;\n l:array[1..100000,1..2] of longint;\nprocedure chmax(var x:longint;y:longint);\nbegin\n if x<y then x:=y;\nend;\nprocedure jia(x:longint);//\u52a0\u5165\u7b2ci\u4f4d\nbegin\n inc(num);\n l[num,2]:=t[s[x] mod p];l[num,1]:=x;\n t[s[x] mod p]:=num;\nend;\nfunction ok(var x,y:arr):boolean;//\u5224\u65ad\u662f\u5426\u76f8\u7b49\nvar i:longint;\nbegin\n  for i:=1 to m do\n  if x[i]<>y[i] then exit(false);\n  exit(true);\nend;\nfunction find(x:longint):longint;//\u627e\u7b2ci\u4f4d\nvar i:longint;\nbegin\n i:=t[s[x] mod p];\n while i<>0 do\n begin\n  if s[l[i,1]]=s[x] then\n  if ok(r[l[i,1]],r[x]) then exit(l[i,1]);\n  i:=l[i,2];\n end;\n exit(n+1);\nend;\nfunction yi(var a:arr):boolean;//\u662f\u4e0d\u662f\u6bcf\u4f4d\u90fd\u662f\u4e00\uff08\u540c\u65f6\u662f\u7684\u8bdd\u51cf\u6389\uff09\nvar i:longint;\nbegin\n for i:=1 to m do\n if a[i]=0 then exit(false);\n for i:=1 to m do\n  dec(a[i],1);\n exit(true);\nend;\nbegin\n assign(input,'1.in');reset(input);assign(output,'1.out');rewrite(output);\n read(n,m);\n for i:=1 to n do\n begin\n  read(a);  s[i]:=s[i-1]+a;\n  for j:=1 to m do begin r[i,j]:=r[i-1,j]+a and 1;a:=a>>1; end;\n  if s[i]>=(1<<m-1) then\n  if yi(r[i]) then\n   dec(s[i],1<<m-1);\n end;\n for i:=n-1 downto 0 do jia(i);//\u56e0\u4e3as[r]-s[l-1]\u4e2dl\u7684\u8303\u56f4\u662f1..n\n for i:=n downto 1 do\n  chmax(ans, i-find(i) );\n writeln(ans);   close(output)\nend.\n\n```cpp",
        "postTime": 1475747405,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1360 \u3010[USACO07MAR]\u9ec4\u91d1\u9635\u5bb9\u5747\u8861Gold Balanced L\u2026\u3011"
    }
]