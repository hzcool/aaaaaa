[
    {
        "content": "#### Solution\n\n\u7ebf\u6bb5\u6811\u5408\u5e76 + \u7ebf\u6bb5\u6811\u4e8c\u5206\u3002\n\n\u8bbe $f_u$ \u8868\u793a\u6240\u6709\u5b8c\u5168\u5728 $u$ \u5b50\u6811\u5185\u5e76\u5305\u542b $u$ \u7684\u8fde\u901a\u70b9\u96c6\uff0c\u6743\u503c\u4e4b\u548c\u6700\u5927\u7684\u662f\u591a\u5c11\u3002\n\n\u90a3\u4e48\u6709 $f_u = \\displaystyle \\sum_{v \\ is \\ u's \\ son} f_v [f_v \\ge 0]$\u3002\n\n\u8003\u8651\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $x$ \u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u6700\u5c0f\u7684 $x$ \u4f7f\u5f97 $f_{u} \\ge 0$\uff0c\u6211\u4eec\u8bbe\u5bf9\u4e8e $u$ \u8fd9\u4e2a\u6700\u5c0f\u7684 $x$ \u4e3a $t_u$\u3002\n\n\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u6765\u8bf4\uff0c$t_u = -val_u$\uff0c\u4efb\u610f\u4e00\u4e2a $t_u$ \u5747\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u5f97\u5230\uff0c\u4e0d\u59a8\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u4e8c\u5206\u5230\u7684\u503c\u662f $k$\u3002\n\n\u6ce8\u610f\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\n\n\u5f53 $v$ \u662f $u$ \u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\u7684\u65f6\u5019\uff0c\u5fc5\u7136\u5df2\u7ecf\u6c42\u5f97\u4e86 $t_v$\u3002\u90a3\u4e48\u8bbe $u$ \u5230 $v$ \u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u5bf9\u5e94\u7684 $t$ \u7684\u6700\u5927\u503c\u4e3a $t_{max}$ \u7684\u8bdd\uff1a\n\n\u90a3\u4e48\u5f53 $k \\ge t_{max}$ \u7684\u65f6\u5019\uff0c\u8fd9\u4e2a $v$ \u5c31\u4f1a\u5bf9\u4e8e $u$ \u9020\u6210\u8d21\u732e\uff0c\u8fd9\u4e2a\u8d21\u732e\u7684\u503c\u5c31\u4f1a\u662f $k + val$ \u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u60f3\u5230\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u4ee5 $t_u$ \u4e3a\u4e0b\u6807\uff0c\u8282\u70b9 $[l,r]$ \u91cc\u9762\u5b58 $\\sum val$ \u4ee5\u53ca $cnt$ \uff0c\u5176\u4e2d $\\sum val$ \u8868\u793a $t$ \u843d\u5728\u533a\u95f4 $[l,r]$ \u4e2d\u7684\u70b9\u7684\u548c\uff0c$cnt$ \u5373\u4e3a\u6709\u591a\u5c11\u4e2a\u8282\u70b9\u3002\n\n\u4f46\u662f\u6211\u4eec\u8fd9\u91cc\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9 $v$ \u4e0d\u80fd\u4ee5 $t_{v}$ \u4e3a\u4e0b\u6807\uff0c\u800c\u662f\u8981\u4ee5\u4e0a\u6587\u7684 $t_{max}$ \u4e3a\u4e0b\u6807\uff0c\u4e8e\u662f\u8981\u52a8\u6001\u7ef4\u62a4\u4e0b\u6807\uff0c\u5728\u7ebf\u6bb5\u6811\u5408\u5e76\u4e4b\u524d\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u4ee5 $u'$ \u4e3a\u6839\u70b9\u7684\u7ebf\u6bb5\u6811\u4e2d\u6240\u6709 $t < t_{u'}$ \u7684\u70b9\u90fd\u79fb\u52a8\u5230 $t_{u'}$ \u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053 $t$ \u5728 $(-10^8, t_{u'})$ \u7684\u8282\u70b9\u7684\u4e2a\u6570\u4ee5\u53ca\u5b83\u4eec\u7684 $\\sum val$ \u5373\u53ef\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u67e5\uff0c\u4fee\u6539\u5c31\u662f\u5355\u70b9\u4fee\u6539\u3002\n\n\u8003\u8651\u6837\u4f8b\u7684\u90a3\u68f5\u6811\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cyx6p9vl.png)\n\n\u6211\u4eec\u5047\u8bbe\u8981\u6c42 $t_2$\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u77e5\u9053\uff1a$t_{4} = -1,t_{5} = t_{7} = t_{8} = t_9 = 1$\uff08$7,8,9$ \u53f7\u70b9\u90fd\u88ab $5$ \u7ed9\u8986\u76d6\u4e86\uff09\u3002\n\n\u90a3\u4e48\u5047\u8bbe\u4e8c\u5206\u5230 $k = 1$ \u7684\u65f6\u5019\uff0c\u90a3\u4e48\u5c31\u4f1a\u662f $Sum = 1 \\times 5 + 1 + 1 + 1 - 5 + 1 = 4$\uff0c\u663e\u7136\u5927\u4e8e $-val[2]$\uff0c\u8fd9\u4e2a\u65f6\u5019\u8bf4\u660e $k = 1$ \u662f\u53ef\u4ee5\u7684\u3002\n\n\u5f53  $k = 0$ \u7684\u65f6\u5019\uff0c$Sum = 0 \\times 1 + 1 = 1$\uff0c\u4e5f\u5927\u4e8e $-val[2]$\uff0c\u53ef\u884c\u3002\n\n$k = -1, Sum = -1 \\times 1 + 1 = 0$\uff0c\u4e5f\u5927\u4e8e $-val[2]$\uff0c\u53ef\u884c\u3002\n\n\uff08\u4e0a\u9762\u7684\u5f0f\u5b50\u4e2d $Sum$ \u7684\u5f62\u5f0f\u4e3a\uff1a$Sum = k \\times cnt + \\sum val$\uff09\n\n\u90a3\u4e48 $k = -2$ \u5373\u4e3a\u6781\u5c0f\u503c\uff0c\u8bf4\u660e $t_{2} = -2$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $u$ \u6c42\u51fa $t_{u}$\u3002\n\n\u73b0\u5728\u6211\u4eec\u80fd\u591f\u6c42\u51fa $t_{u}$ \u540e\uff0c\u5c31\u76f4\u63a5\u5229\u7528\u7ebf\u6bb5\u6811\u67e5\u8be2\u5f53\u52a0\u4e0a\u7684\u6743\u503c\u4e3a $x$ \u7684\u65f6\u5019\u6240\u6709\u8282\u70b9\u7684\u8d21\u732e\u4e3a\u591a\u5c11\uff08\u4e0e\u6c42 $t_{u}$ \u7684\u65f6\u5019\u6c42 $Sum$ \u662f\u4e00\u6837\u7684\u505a\u6cd5\uff09\u3002\n\n\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $O(n \\log n)$\u3002\n\n#### Code\n\n\u53ef\u80fd\u4eba\u83dc\u5e38\u6570\u5927\uff0c\u8fd9\u4efd\u4ee3\u7801\u6709\u4e00\u70b9\u5361\u5e38\uff08\uff09\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define Rep(i, l, r) for(int i = l ; i <= r ; i ++)\n#define Lep(i, r, l) for(int i = r ; i >= l ; i --)\n\ninline int read() {\n    int x = 0, flag = 1;\n    char ch = getchar();\n    for( ; ch > '9' || ch < '0' ; ch = getchar()) if(ch == '-') flag = -1;\n    for( ; ch >= '0' && ch <= '9' ; ch = getchar()) x = x * 10 + ch - '0';\n    return x * flag;\n}\nconst int MAXN = 1e6 + 50;\ntypedef long long LL;\nint n, val[MAXN], tim[MAXN], siz[MAXN];\nint rt[MAXN], pos[MAXN], cnt = 0, m;\nLL Ans[MAXN], TSUM;\nvector <int> E[MAXN];\nstruct SegmentTree1 {\n    int ls, rs, siz; LL tsum;\n} T[MAXN * 62];\nstruct Qs { \n    int tim, id; \n    bool operator <(const Qs& f) const { return tim < f.tim; }\n} ;\nvector <Qs> Q[MAXN];\nbool cmp(int a, int b) { return tim[a] < tim[b]; }\nvoid erase(int x) { T[x].ls = T[x].rs = T[x].siz = T[x].tsum = 0; }\nint Get(int x, int P, int l, int r, int w, LL Sz, LL tsum) { // \u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u6c42 t[x]\n    if(l == r) return l - 1e8;\n    int mid = (l + r) >> 1; LL SumL = mid - 1e8, sz = 0, t = 0;  //\u4e0b\u9762\u7684\u6240\u6709 1e8 \u90fd\u662f\u4e3a\u4e86\u9632\u6b62\u4e0b\u6807\u4e3a\u8d1f\u6570\n    for(int i = 0 ; i <= P ; i ++) {\n        int u = pos[E[x][i]], ls = T[u].ls, p = mid - 1e8;\n        if(mid - 1e8 < tim[E[x][i]]) continue;\n        SumL += 1ll * p * T[ls].siz - T[ls].tsum;\n        sz += T[ls].siz, t += T[ls].tsum;\n    } SumL -= tsum, SumL += 1ll * (mid - 1e8) * Sz;\n    if(SumL >= w) {\n        Rep(i, 0, P) pos[E[x][i]] = T[pos[E[x][i]]].ls;\n        return Get(x, P, l, mid, w, Sz, tsum);\n    }\n    Rep(i, 0, P) pos[E[x][i]] = T[pos[E[x][i]]].rs;\n    return Get(x, P, mid + 1, r, w, sz + Sz, tsum + t);\n}\nint merge(int x, int y) { // \u7ebf\u6bb5\u6811\u5408\u5e76\n    if(!x || !y) return x | y;\n    int cur = ++ cnt;\n    T[cur].siz = T[x].siz + T[y].siz;\n    T[cur].tsum = T[x].tsum + T[y].tsum;\n    T[cur].ls = merge(T[x].ls, T[y].ls);\n    T[cur].rs = merge(T[x].rs, T[y].rs);\n    erase(x), erase(y); return cur;\n}\nvoid insert(int &x, int l, int r, int pos, int a, LL b) { // \u4fee\u6539\u67d0\u4e2a\u70b9\u7684\u6743\u503c\n    if(!x) x = ++ cnt; int mid = (l + r) >> 1;\n    T[x].siz += a, T[x].tsum += b;\n    if(l == r) return ;\n    if(pos + 1e8 <= mid) insert(T[x].ls, l, mid, pos, a, b);\n    else insert(T[x].rs, mid + 1, r, pos, a, b);\n    T[x].siz = T[T[x].ls].siz + T[T[x].rs].siz;\n    T[x].tsum = T[T[x].ls].tsum + T[T[x].rs].tsum;\n    return ;\n}\nint Cover(int &x, int l, int r, int pos) { //\u533a\u95f4\u5168\u90e8\u7f6e 0\n    int cur = x, Sz = 0;\n    if(l == r) { TSUM += T[x].tsum, Sz = T[cur].siz, erase(x), x = 0; return Sz; }\n    int mid = (l + r) >> 1;\n    if(pos + 1e8 <= mid) Sz = Cover(T[x].ls, l, mid, pos);\n    else {\n        Sz += T[T[x].ls].siz, TSUM += T[T[x].ls].tsum,\n        erase(T[x].ls), T[x].ls = 0, \n        Sz += Cover(T[x].rs, mid + 1, r, pos);\n    }\n    T[x].siz = T[T[x].ls].siz + T[T[x].rs].siz;\n    T[x].tsum = T[T[x].ls].tsum + T[T[x].rs].tsum;\n    return Sz;\n}\nLL Find(int x, int l, int r, int pos) {\n    if(!x) return 0;\n    if(l == r) return 1ll * pos * T[x].siz - T[x].tsum;\n    int mid = (l + r) >> 1;\n    if(pos + 1e8 <= mid) return Find(T[x].ls, l, mid, pos);\n    return Find(T[x].rs, mid + 1, r, pos) +  1ll * pos * T[T[x].ls].siz - T[T[x].ls].tsum;\n}\nvoid dfs1(int x) {\n    int Siz = E[x].size() - 1, now = 0;\n    Rep(i, 0, Siz) {\n        dfs1(E[x][i]);\n        pos[E[x][i]] = rt[E[x][i]]; TSUM = 0;\n        int fs = Cover(rt[E[x][i]], 0, 2e8, tim[E[x][i]] - 1);\n        insert(rt[E[x][i]], 0, 2e8, tim[E[x][i]], fs, TSUM);\n    }\n    tim[x] = Get(x, Siz, 0, 2e8, -val[x], 0, 0);\n    sort(E[x].begin(), E[x].end(), cmp);\n\n    while(now != Q[x].size()) {\n        int Tim = Q[x][now].tim, Id = Q[x][now].id;\n        if(E[x].size() == 0) { Ans[Id] = val[x] + Tim; now ++; continue; }\n        if(Tim < tim[E[x][0]]) { Ans[Id] = val[x] + Tim; now ++; continue; }\n        break;\n    }\n\n    Rep(i, 0, Siz) {\n        rt[x] = merge(rt[x], rt[E[x][i]]);\n        if(now == Q[x].size()) continue;\n        int Tim = Q[x][now].tim, Id = Q[x][now].id, f;\n        while(Tim >= tim[E[x][i]] && now < Q[x].size()) {\n            if(i != Siz) if(Tim >= tim[E[x][i + 1]]) break;\n            Ans[Id] = Find(rt[x], 0, 2e8, Tim) + Tim + val[x];\n            now ++; if(now == Q[x].size()) break;\n            Tim = Q[x][now].tim, Id = Q[x][now].id;\n        }\n    }\n    insert(rt[x], 0, 2e8, tim[x], 1, -val[x]);\n    return ;\n}\ninline void Write(LL x, char c) {\n    LL Putout[35], Numbercnt = 0;\n    if(x < 0) putchar('-'), x = -x;\n    if(!x) { putchar('0'), putchar(c); return ; }\n    while(x) Putout[++ Numbercnt] = x % 10, x /= 10;\n    for(int i = Numbercnt ; i >= 1 ; i --) putchar(Putout[i] + '0');\n    if(Numbercnt == 0) putchar('0'); putchar(c);\n    return ;\n}\n\nint main() {\n    n = read(), m = read();\n    Rep(i, 2, n) E[read()].push_back(i);\n    Rep(i, 1, n) val[i] = read();\n    Rep(i, 1, m)  {\n        int u = read(), x = read();\n        Q[u].push_back((Qs) { x, i } );\n    } \n    Rep(i, 1, n) sort(Q[i].begin(), Q[i].end()); dfs1(1);\n    Rep(i, 1, m) Write(Ans[i], ' '), putchar('\\n');\n    return 0;\n}\n// time limit: 3 s\n// memory limit: 2.00 GB\n// Author: MuYC\n```\n\n",
        "postTime": 1633513786,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "P7889 \u300cMCOI-06\u300dEert Tuc Knil \u9898\u89e3"
    }
]