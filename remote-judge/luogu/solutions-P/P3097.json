[
    {
        "content": "\u770b\u5927\u5bb6\u90fd\u662f\u5199\u7684\u7ebf\u6bb5\u6811\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u5206\u5757\u505a\u6cd5\n\n------------\n\n\u5148\u5c06\u5e8f\u5217\u5206\u6210$\\sqrt n$\u5757\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a\u5757\u5185\u8fdb\u884c$DP$\uff0c\u5904\u7406\u8fd9\u4e2a\u5757\u7684\u5de6\u53f3\u4e24\u7aef\u5206\u522b\u53d6\u6216\u4e0d\u53bb\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u628a\u6bcf\u4e2a\u5757\u770b\u51fa\u4e00\u4e2a\u70b9\uff0c\u518d\u8dd1\u4e00\u904d\uff0c\u8fd9\u6837\u4e00\u6b21\u9884\u5904\u7406\u7684\u590d\u6742\u5ea6\u662f$O(N)$\u3002\n\n\u4fee\u6539\u7684\u8bdd\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u5bf9\u6bcf\u4e00\u5757\u5185\u8fdb\u884c\u5206\u522b$DP$\uff0c\u6240\u4ee5\u6bcf\u4e2a\u5757\u5185\u4e92\u4e0d\u5f71\u54cd\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4fee\u6539\u7684\u90a3\u4e2a\u70b9\u6240\u5728\u7684\u5757\u91cd\u65b0$DP$\u4e00\u904d\u5c31\u884c\n\n\u590d\u6742\u5ea6\u4e3a$O(n \\sqrt n)$\uff0c\u6c34\u8fc7\u53bb\u6ca1\u95ee\u9898\uff0c\u4e0d\u8fc7\u4e0d\u5f00O2\u6700\u5927\u70b9\u8981\u8dd1$500ms$\uff0c\u5982\u679c\u4f1a\u7ebf\u6bb5\u6811\u505a\u6cd5\u5efa\u8bae\u8fd8\u662f\u6253\u7ebf\u6bb5\u6811\uff0c\u5206\u5757\u6bd4\u8f83\u8fd8\u662f\u6bd4\u8f83\u66b4\u529b\n\n## code\n```\n#include<bits/stdc++.h>\n#define maxn 40005\n#define ll long long\nusing namespace std;\nint n,N,Q,x,y,id[maxn],a[maxn],tot[205],A[205][205],Id[maxn];\nll f[205][2],F[205][2][2],G[205][2],Ans,Cnt;\nbool vis[maxn];\ninline int read(){\n\tint ret=0;char ch=getchar();\n\twhile (ch<'0'||ch>'9') ch=getchar();\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret;\n}\ninline ll Solve(){\n\tfor (int i=1;i<=id[n];i++){\n\t\tif (vis[i]) continue;\n\t\tfor (int j=1;j<=tot[i];j++) f[j][0]=max(f[j-1][0],f[j-1][1]),f[j][1]=f[j-1][0]+A[i][j];\n\t\tF[i][1][1]=f[tot[i]][1],F[i][1][0]=f[tot[i]][0];\n\t\tf[1][0]=f[1][1]=0;\n\t\tfor (int j=2;j<=tot[i];j++) f[j][0]=max(f[j-1][0],f[j-1][1]),f[j][1]=f[j-1][0]+A[i][j];\n\t    F[i][0][1]=f[tot[i]][1],F[i][0][0]=f[tot[i]][0];\n\t    vis[i]=1;\n\t}\n\tG[1][0]=max(F[1][0][0],F[1][1][0]),G[1][1]=max(F[1][0][1],F[1][1][1]);\n\tfor (int i=2;i<=id[n];i++) G[i][0]=max(G[i-1][0]+max(F[i][0][0],F[i][1][0]),G[i-1][1]+F[i][0][0]),G[i][1]=max(G[i-1][0]+max(F[i][0][1],F[i][1][1]),G[i-1][1]+F[i][0][1]);\n\treturn max(G[id[n]][0],G[id[n]][1]);\n}\nint main(){\n\tn=read(),Q=read();N=sqrt(n);\n\tfor (int i=1;i<=n;i++) a[i]=read(),id[i]=(i-1)/N+1;\n\tfor (int i=1;i<=n;i++) A[id[i]][++tot[id[i]]]=a[i],Id[i]=tot[id[i]];\n    Cnt=Solve();\n\twhile (Q--) x=read(),y=read(),A[id[x]][Id[x]]=y,vis[id[x]]=0,Ans+=Solve();\n\tprintf(\"%lld\",Ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1596019873,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3097 \u3010[USACO13DEC]Optimal Milking G\u3011"
    },
    {
        "content": "\u6765\u8865\u4e00\u4e2a\u52a8\u6001 dp \u505a\u6cd5\u3002\n\n\n\u9898\u610f\u5927\u81f4\u5c31\u662f\u5355\u70b9\u4fee\u6539\u6c42\u6700\u5927\u72ec\u7acb\u96c6\n\n\u66b4\u529b dp \u5927\u6982\u5c31\u662f\n\n$$\n\\begin{cases}\nf_{i,0}=\\max\\limits \\{ f_{i-1,0},f_{i-1,1}\\} \\\\\nf_{i,1}=f_{i-1,0}+a_i\n\\end{cases}\n\n$$\n\n\u6700\u540e\u662f\u8981\u6c42 $\\max\\{ f_{n,0},f_{n,1} \\}$\n\n\u8003\u8651\u8fd9\u4e2a\u4e1c\u897f\u600e\u4e48\u8f6c\u4e3a\u77e9\u9635\u5f62\u5f0f\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u77e9\u9635\u4e58\u6cd5\u4e3a\n\n$$\nc_{i,j}=\\max\\limits_{k} \\{ a_{i,k}+b_{k,j} \\}\n$$\n\n\u8fd9\u4e2a\u4e1c\u897f\u662f\u6ee1\u8db3\u7ed3\u5408\u5f8b\u7684\u3002\n\n\u4e8e\u662f\u4e0a\u9762\u90a3\u4e2a\u66b4\u529b dp \u53ef\u4ee5\u770b\u6210\u662f\n\n$$\n\\begin{bmatrix}f_{i-1,0}\\\\ f_{i-1,1}\\end{bmatrix}\n\\begin{bmatrix}0 \\  \\ \\ \\  \\ 0 \\\\ a_i\\ \\operatorname{-inf} \\end{bmatrix}= \\begin{bmatrix} f_{i,0} \\\\f_{i,1} \\end{bmatrix}\n$$\n\n\n\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u77e9\u9635\u4e58\u5373\u53ef\u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ls p<<1\n#define rs p<<1|1\nconst int N=40000+5;\n// f[i][0]=max(f[i-1][0],f[i-1][1])\n// f[i][1]=f[i-1][0]+a[i]\n// |  0 0      |  \n// |  a_i -inf |\nstruct mat{\n\tint a[2][2];\n\tmat(){\n\t\tmemset(a,-0x3f,sizeof(a));\n\t}\n\tmat operator *(const mat &b) const{\n\t\tmat res;\n\t\tfor(int i=0;i<2;++i)\n\t\t\tfor(int j=0;j<2;++j)\n\t\t\t\tfor(int k=0;k<2;++k)\n\t\t\t\t\tres.a[i][j]=max(res.a[i][j],a[i][k]+b.a[k][j]);\n\t\treturn res;\n\t}\n}tr[N<<2];\nint a[N];\nvoid pushup(int p){\n\ttr[p]=tr[rs]*tr[ls];\n}\nvoid build(int p,int l,int r){\n\tif(l==r){\n\t\ttr[p].a[0][0]=0;\n\t\ttr[p].a[0][1]=0;\n\t\ttr[p].a[1][0]=a[l];\n\t\ttr[p].a[1][1]=-0x3f3f3f3f;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tpushup(p);\n}\nvoid upt(int p,int l,int r,int pos,int v){\n\tif(l==r){\n\t\ttr[p].a[0][0]=0;\n\t\ttr[p].a[0][1]=0;\n\t\ttr[p].a[1][0]=v;\n\t\ttr[p].a[1][1]=-0x3f3f3f3f;\n\t\treturn;\t\t\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid) upt(ls,l,mid,pos,v);\n\telse upt(rs,mid+1,r,pos,v);\n\tpushup(p);\n}\nint main(){\n\tlong long ans=0;\n\tint n,q;\n\tcin>>n>>q;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>a[i];\n\tint pos,v;\n\tbuild(1,1,n);\n\tmat res,tmp;\n\tres.a[0][0]=0;res.a[0][1]=0;\n\twhile(q--){\n\t\tcin>>pos>>v;\n\t\tupt(1,1,n,pos,v);\n\t\ttmp=res*tr[1];\n\t\tans+=max(tmp.a[0][0],tmp.a[0][1]);\n\t\t//cout<<max(tmp.a[0][0],tmp.a[0][1])<<endl;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1596005602,
        "uid": 344016,
        "name": "wurzang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3097 \u3010[USACO13DEC]Optimal Milking G\u3011"
    },
    {
        "content": "## \u3010\u9898\u610f\u3011\n\u7ed9\u5b9an\u4e2a\u70b9\u6392\u6210\u4e00\u6392\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u70b9\u6743\uff0c\u591a\u6b21\u6539\u53d8\u67d0\u4e2a\u70b9\u7684\u70b9\u6743\u5e76\u5c06\u6700\u5927\u70b9\u72ec\u7acb\u96c6\u8ba1\u5165\u7b54\u6848\uff0c\u8f93\u51fa\u6700\u7ec8\u7684\u7b54\u6848\n## \u3010\u5206\u6790\u3011\n\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u6b21\u64cd\u4f5c\u4e4b\u540e\u7684\u7ed3\u679c\n\n\u95ee\u9898\u5728\u4e8e\u7ef4\u62a4\u548c\u4f20\u9012\u533a\u95f4\u4fe1\u606f\n\n\u5408\u5e76\u5b50\u533a\u95f4\u4fe1\u606f\u65f6\uff0c\u53ea\u6709\u7aef\u70b9\u4f1a\u9650\u5236\u4f20\u9012\u65b9\u5f0f\n\n\u4ee4$f[0/1][0/1]$\u8868\u793a\u67d0\u4e2a\u5b50\u533a\u95f4\u5185\uff0c\u4e24\u7aef\u70b9\u5206\u522b\u53d6/\u4e0d\u53d6\u7684\u6700\u5927\u6536\u76ca\n\n\u5b50\u533a\u95f4\u5c31\u51e0\u79cd\u53ef\u53d6\u7684\u60c5\u51b5\uff0c\u5206\u7c7b\u8ba8\u8bba\u5e76\u7ef4\u62a4\u5373\u53ef\n```cpp\n\nt[k].f[0][0]=max(t[ls].f[0][0]+max(t[rs].f[0][0],t[rs].f[1][0]),t[ls].f[0][1]+t[rs].f[0][0]);\nt[k].f[0][1]=max(t[ls].f[0][0]+max(t[rs].f[0][1],t[rs].f[1][1]),t[ls].f[0][1]+t[rs].f[0][1]);\nt[k].f[1][0]=max(t[ls].f[1][0]+max(t[rs].f[0][0],t[rs].f[1][0]),t[ls].f[1][1]+t[rs].f[0][0]);\nt[k].f[1][1]=max(t[ls].f[1][0]+max(t[rs].f[0][1],t[rs].f[1][1]),t[ls].f[1][1]+t[rs].f[0][1]);\n```\n\u521d\u59cb\u6216\u4fee\u6539\u65f6\uff0c\u53f6\u5b50\u8282\u70b9\u7684$f[1][1]$\u503c\u5c31\u662f\u70b9\u6743\n\n\u522b\u5fd8\u4e86\u5f00$long long$\n## \u3010\u7b97\u6cd5\u3011\n\u7ebf\u6bb5\u6811\n## \u3010\u4ee3\u7801\u3011\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\nusing namespace std;\nconst int maxn=4e4+5,maxt=maxn<<2;\nint n,m;\nstruct segment_tree{\n\tLL f[2][2];\n}t[maxt];\nint read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\n#define ls (k<<1)\n#define rs (k<<1|1)\n#define mid (l+r>>1)\nvoid pushup(int k){\n\tt[k].f[0][0]=max(t[ls].f[0][0]+max(t[rs].f[0][0],t[rs].f[1][0]),t[ls].f[0][1]+t[rs].f[0][0]);\n\tt[k].f[0][1]=max(t[ls].f[0][0]+max(t[rs].f[0][1],t[rs].f[1][1]),t[ls].f[0][1]+t[rs].f[0][1]);\n\tt[k].f[1][0]=max(t[ls].f[1][0]+max(t[rs].f[0][0],t[rs].f[1][0]),t[ls].f[1][1]+t[rs].f[0][0]);\n\tt[k].f[1][1]=max(t[ls].f[1][0]+max(t[rs].f[0][1],t[rs].f[1][1]),t[ls].f[1][1]+t[rs].f[0][1]);\n}\nvoid build(int k,int l,int r){\n\tif(l==r){\n\t\tt[k].f[1][1]=read();\n\t\treturn;\n\t}\n\tbuild(ls,l,mid),build(rs,mid+1,r);\n\tpushup(k);\n}\nvoid update(int k,int l,int r,int x,int v){\n\tif(l==r){\n\t\tt[k].f[1][1]=v;\n\t\treturn;\n\t}\n\tif(x<=mid) update(ls,l,mid,x,v);\n\telse update(rs,mid+1,r,x,v);\n\tpushup(k);\n}\nLL ans;\nint main(){\n\tfreopen(\"P3097.in\",\"r\",stdin);\n\tfreopen(\"P3097.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;i++){\n\t\tint x=read(),v=read();\n\t\tupdate(1,1,n,x,v);\n\t\tans+=max(max(t[1].f[0][0],t[1].f[0][1]),max(t[1].f[1][0],t[1].f[1][1]));\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1603440162,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3097 \u3010[USACO13DEC]Optimal Milking G\u3011"
    },
    {
        "content": "$\\;\\;\\;\\;\\;\\;$\u8fd9\u662f[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3097)\u3002  \n$\\;\\;\\;\\;\\;\\;$\u597d\uff0c\u90fd\u8bfb\u5b8c\u9898\u4e86\u3002\u6211\u4eec\u53d1\u73b0\uff1a\n- \u591a\u6b21\u7684\u5355\u70b9\u4fee\u6539  \n- \u533a\u95f4\u67e5\u8be2\uff08\u6bcf\u6b21\u90fd\u662f\u4ece\u5934\u5230\u5c3e\uff09    \n\n$ $\u6240\u4ee5\u8fd9\u4e2a\u5e94\u5f53\u662f\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u3002\uff08\u6ca1\u5b66\u8fc7\u8fd9\u4e24\u79cd\u7b97\u6cd5\u7684\u8bf7\u81ea\u884c\u767e\u5ea6\u641c\u7d22\u3002\uff09  \n$ $\u4f46\u6811\u72b6\u6570\u7ec4\u80dc\u4efb\u4e0d\u4e86\u8fd9\u6b21\u7684\u4efb\u52a1\u3002\u66f4\u65b0\u4f1a\u5f88\u9ebb\u70e6\u3002\u53ea\u597d\u7528\u4e86\u7ebf\u6bb5\u6811\u3002  \n$ $\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u5206\u522b\u8ba8\u8bba\u51e0\u4e2a\u91cd\u8981\u90e8\u5206\u7684\u5199\u6cd5\u3002\n\n\n------------\n\n### \u7ed3\u6784\u4f53\n$\\;\\;\\;\\;\\;\\;$\u8fd9\u91cc\u8bf4\u7684\u662f\u7ebf\u6bb5\u6811\u7684\u201c\u8282\u70b9\u201d\u3002\u63cf\u8ff0\u5de6\u53f3\u7aef\u70b9\u7684\u53d8\u91cf\u81ea\u7136\u5c11\u4e0d\u4e86\u3002\u5269\u4e0b\u7684\u5e94\u662f\u63cf\u8ff0\u6570\u636e\u7684\u53d8\u91cf\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u4e00\u4e9b\u7ebf\u6bb5\u6811\u7684\u9898\u90fd\u53ef\u4ee5\u7528\u5230\uff1a\u5148\u8003\u8651\u5de6\u53f3\u7aef\u70b9\u3002\u73b0\u5728\u65e0\u975e\u5c31\u662f\u4e0b\u9762\u51e0\u79cd\u60c5\u51b5\uff1a\n- \u4e0d\u53d6\u5de6\u7aef\u70b9\u4e5f\u4e0d\u53d6\u53f3\u7aef\u70b9\uff1b\n- \u4e0d\u53d6\u5de6\u7aef\u70b9\u800c\u53d6\u53f3\u7aef\u70b9\uff1b\n- \u53d6\u5de6\u7aef\u70b9\u800c\u4e0d\u53d6\u53f3\u7aef\u70b9\uff1b\n- \u5de6\u53f3\u7aef\u70b9\u90fd\u53d6\u3002  \n\u5206\u522b\u628a\u8fd9\u56db\u79cd\u60c5\u51b5\u4e0b\u7684\u6b64\u8282\u70b9\u8303\u56f4\u5185\u7684\u7b54\u6848\u5b58\u50a8\uff0c\u5206\u522b\u8bb0\u4e3a\uff1a\n- C_00\n- C_01\n- C_10\n- C_11  \n\u53ef\u4ee5\u7ed9\u4ee3\u7801\u4e86\u3002  \n```cpp\nstruct Node{\n    int l,r;\n    long long C_00,C_01,C_10,C_11;\n}Tree[160000];\n```\n\n\n------------\n\n### pushup() \u51fd\u6570\n$\\;\\;\\;\\;\\;\\;$\u4f60\u4f1a\u95ee\u6211 pushdown() \u51fd\u6570\u54ea\u91cc\u53bb\u4e86\uff0c\u662f\u5417\uff1f\u4e8b\u5b9e\u4e0a\uff0cpushdown() \u51fd\u6570\u662f\u4e3a\u4e86 lazytag \u8bde\u751f\u7684\u3002\u6ca1\u6709 lazytag\uff0c\u4e5f\u5c31\u6ca1\u6709 pushdown() \u51fd\u6570\u3002  \n$\\;\\;\\;\\;\\;\\;$\u597d\u4e86\uff0c\u56de\u5f52\u6b63\u9898\u3002\u6211\u4eec\u62ff C_00 \u4e3e\u4f8b\u5b50\u3002\u5b83\u4e00\u5b9a\u7b49\u4e8e\u5de6\u5b50\u6811\u7684\u4ec0\u4e48\u52a0\u53f3\u5b50\u6811\u7684\u4ec0\u4e48\u3002\u7ecf\u8fc7\u5c1d\u8bd5\u53d1\u73b0\uff0c\u9664\u4e86 C_00 \u4e0d\u7b49\u4e8e\u5de6\u5b50\u6811\u7684 C_01 \u52a0\u53f3\u5b50\u6811\u7684 C_10 \u4ee5\u5916\uff0c\u5176\u4ed6\u90fd\u5408\u6cd5\u3002\u6211\u4eec\u628a\u5176\u4ed6\u60c5\u51b5\u53d6\u4e2a\u6700\u5c0f\u503c\u3002\u5176\u4ed6\u53d8\u91cf(C_01\u3001C_10\u3001C_11)\u4f9d\u6b64\u7c7b\u63a8\u3002\u4ee3\u7801\uff1a\n```cpp\ninline int max(int x,int y,int z,char id1,char id2){return (x>y? x:y)>z? (x>y? x:y):z;}\ninline int max(int x,int y,int z,int w){return ((x>y? x:y)>z? (x>y? x:y):z)>w? ((x>y? x:y)>z?  (x>y? x:y):z):w;}\nvoid pushup(int now){\n    Tree[now].C_00=max(Tree[lson].C_00+Tree[rson].C_10,Tree[lson].C_01+Tree[rson].C_00,Tree[lson].C_00+Tree[rson].C_00,'0','0');\n    Tree[now].C_01=max(Tree[lson].C_00+Tree[rson].C_01,Tree[lson].C_01+Tree[rson].C_01,Tree[lson].C_00+Tree[rson].C_11,'0','0');\n    Tree[now].C_10=max(Tree[lson].C_10+Tree[rson].C_10,Tree[lson].C_10+Tree[rson].C_00,Tree[lson].C_11+Tree[rson].C_00,'0','0');\n    Tree[now].C_11=max(Tree[lson].C_11+Tree[rson].C_01,Tree[lson].C_10+Tree[rson].C_01,Tree[lson].C_10+Tree[rson].C_11,'0','0');\n}\n```\n\n\n------------\n\n$\\;\\;\\;\\;\\;\\;$\u5269\u4e0b\u7684\u5c31\u662f\u6a21\u677f\u4e86\u3002AC\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define lson (now<<1) \n#define rson ((now<<1)|1)\n#define PAUSE printf(\"------------------------------------------------\\nProcess exited with return value 0\\n\");system(\"PAUSE\")\ninline int max(int x,int y,int z,char id,char uid){return (x>y? x:y)>z? (x>y? x:y):z;}\ninline int max(int x,int y,int z,int w){return ((x>y? x:y)>z? (x>y? x:y):z)>w? ((x>y? x:y)>z? (x>y? x:y):z):w;}\ninline int read(){\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n    return s*w;\n}\nstruct Node{\n    int l,r;\n    long long C_00,C_01,C_10,C_11;\n}Tree[160000];\nvoid pushup(int now){\n    Tree[now].C_00=max(Tree[lson].C_00+Tree[rson].C_10,Tree[lson].C_01+Tree[rson].C_00,Tree[lson].C_00+Tree[rson].C_00,'0','0');\n    Tree[now].C_01=max(Tree[lson].C_00+Tree[rson].C_01,Tree[lson].C_01+Tree[rson].C_01,Tree[lson].C_00+Tree[rson].C_11,'0','0');\n    Tree[now].C_10=max(Tree[lson].C_10+Tree[rson].C_10,Tree[lson].C_10+Tree[rson].C_00,Tree[lson].C_11+Tree[rson].C_00,'0','0');\n    Tree[now].C_11=max(Tree[lson].C_11+Tree[rson].C_01,Tree[lson].C_10+Tree[rson].C_01,Tree[lson].C_10+Tree[rson].C_11,'0','0');\n}\nvoid init(int now,int l,int r){\n    Tree[now].l=l;Tree[now].r=r;\n    if(l==r){\n        Tree[now].C_11=read();\n        return;\n    }\n    init(lson,l,(l+r)>>1);\n    init(rson,((l+r)>>1)+1,r);\n    pushup(now);\n}\nvoid upgrade(int now,int target){\n    if(Tree[now].l==Tree[now].r){\n        Tree[now].C_11=read();\n        return;\n    }\n    if(target>((Tree[now].l+Tree[now].r)>>1)) upgrade(rson,target);\n    else upgrade(lson,target);\n    pushup(now);\n}\nint main(){\n    int n,d;\n    long long ans=0;\n    n=read();d=read();\n    init(1,1,n);\n    for(int i=1;i<=d;i++){\n        upgrade(1,read());\n        ans+=max(Tree[1].C_11,Tree[1].C_10,Tree[1].C_01,Tree[1].C_00);\n    }\n    cout<<ans;\n//    PAUSE;\n    return 0;\n}\n```\n**\u8c22\u8c22\u5927\u5bb6\uff01**",
        "postTime": 1585120456,
        "uid": 128136,
        "name": "Zhengsiwei",
        "ccfLevel": 6,
        "title": "P3097\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u4e2a\u8303\u56f4\u80af\u5b9a\u4e0d\u662f\u8ba9\u4f60\u8dd1\u6700\u5927\u70b9\u72ec\u7acb\u96c6\u7684\uff0c\u8fd9\u5f88\u663e\u7136\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4e0b\u53ef\u80fd\u7684\u60c5\u51b5\n\n\u65e0\u975e\u662f\u4e24\u4e2a\u7aef\u70b9\u9009\u6216\u8005\u4e0d\u9009\u7684\u7ec4\u5408\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define N 50010\n#define lson (o<<1)\n#define rson (o<<1|1)\nusing namespace std;\ntypedef long long ll;\nint f[N<<2][4],n,m;\nll ans=0;\ninline int read(){\n    int f=1,x=0;char ch;\n    do{ch=getchar();if(ch=='-')f=-1;}while(ch<'0'||ch>'9');\n    do{x=x*10+ch-'0';ch=getchar();}while(ch>='0'&&ch<='9');\n    return f*x;\n}\ninline int max(int a,int b,int c){return max(max(a,b),c);}\ninline int max(int a,int b,int c,int d){return max(max(a,b),max(c,d));}\ninline void pushup(int o){\n    for(int i=0;i<4;i++)\n        f[o][i]=max(f[lson][i&2]+f[rson][2+(i&1)],f[lson][(i&2)+0]+f[rson][i&1],f[lson][(i&2)+1]+f[rson][i&1]);\n}\nvoid build(int o,int l,int r){\n    if(l==r){f[o][3]=read();return;}\n    int mid=(l+r)>>1;\n    build(lson,l,mid);build(rson,mid+1,r);\n    pushup(o);\n}\nvoid change(int o,int l,int r,int q,int v){\n    if(l==r){f[o][3]=v;return;}\n    int mid=(l+r)>>1;\n    if(q<=mid)change(lson,l,mid,q,v);\n    else change(rson,mid+1,r,q,v);\n    pushup(o);\n}\nint main(){\n    n=read();m=read();\n    build(1,1,n);\n    while(m--){\n        int x=read(),y=read();\n        change(1,1,n,x,y);\n        ans+=max(f[1][0],f[1][1],f[1][2],f[1][3]);\n    }\n    cout<<ans<<endl;\n}\n```",
        "postTime": 1497489520,
        "uid": 2978,
        "name": "zcysky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3097 \u3010[USACO13DEC]\u6700\u4f18\u6324\u5976Optimal Milking\u3011"
    },
    {
        "content": "\n\n#### \u6b22\u8fce\u8bbf\u95ee [My Space](https://www.luogu.org/space/show?uid=143742)\uff0c\u4ee5\u53ca [My Blog](https://www.luogu.org/blog/bosswnx/#)\uff0c\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u8bf7 [Check Me\uff01](https://www.luogu.org/blog/bosswnx/solution-uva710)\n------------\n\n## \u3010\u6807\u7b7e\u3011\n\n\u7ebf\u6bb5\u6811\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4DP\u3002\n\n------\n## \u3010\u5206\u6790\u3011\n\n\u901a\u8fc7**\u7ebf\u6bb5\u6811**\u6765\u8fdb\u884c**\u533a\u95f4DP**\uff0c\u7ef4\u62a4\u6700\u5927\u70b9\u96c6\u3002\n\n#### \u57fa\u672c\u60f3\u6cd5\uff1a\n\n\u5316\u7b80\u9898\u76ee\uff1a\u5c06 $n$ \u4e2a\u70b9\u6392\u6210\u4e00\u6392\uff0c\u6bcf\u4e00\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u70b9\u6743\uff0c\u4ece\u4e2d\u9009\u51fa\u76f8\u4e92\u4e0d\u80fd\u4e34\u8fd1\u7684\u6700\u5927\u70b9\u96c6\u3002\n\n#### \u6539\u8fdb\uff1a\n\n\u7531\u4e8e\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u4fe1\u606f\uff0c\u8003\u8651\u901a\u8fc7\u7ebf\u6bb5\u6811\u6765\u8fdb\u884c\u533a\u95f4DP\u3002\n\n\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u5185\u90fd\u6709\u4e00\u4e2a$F$\u6570\u7ec4\uff1a\n\n1. $F[1][0]$ \u8868\u793a\u533a\u95f4\u5de6\u7aef\u70b9\u53d6\uff0c\u53f3\u7aef\u70b9\u4e0d\u53d6\u7684\u6700\u5927\u70b9\u96c6\u7684\u548c\u3002\n2. $F[0][1]$ \u8868\u793a\u533a\u95f4\u5de6\u7aef\u70b9\u4e0d\u53d6\uff0c\u53f3\u7aef\u70b9\u53d6\u7684\u6700\u5927\u70b9\u96c6\u7684\u548c\u3002\n3. $F[1][1]$ \u8868\u793a\u533a\u95f4\u5de6\u7aef\u70b9\u53d6\uff0c\u53f3\u7aef\u70b9\u4e5f\u53d6\u7684\u6700\u5927\u70b9\u96c6\u7684\u548c\u3002\n4. $F[0][0]$ \u8868\u793a\u533a\u95f4\u5de6\u7aef\u70b9\u3001\u53f3\u7aef\u70b9\u90fd\u4e0d\u53d6\u7684\u6700\u5927\u70b9\u96c6\u7684\u548c\u3002\n\n\u56e0\u4e3a\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\u4e0d\u80fd\u540c\u65f6\u53d6\uff0c\u6240\u4ee5\u66f4\u65b0\u6700\u5927\u503c\u7684\u65f6\u5019\u8981\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff0c**\u5de6\u5b50\u8282\u70b9**\u7684\u53f3\u7aef\u70b9 \u4e0e **\u53f3\u5b50\u8282\u70b9**\u7684\u5de6\u7aef\u70b9\u4e0d\u80fd\u540c\u65f6\u53d6\u3002\n\n\u4e3e\u4f8b\uff0c\u5f53\u524d\u6811\u8282\u70b9\u7684 $F[1][0]$ \u53ef\u4ee5\u7531\uff1a\n\n1. **\u5de6**\u5b50\u8282\u70b9\u7684 $F[1][0]$ $+$ **\u53f3**\u5b50\u8282\u70b9\u7684 $F[1][0]$\uff1b  \n2. **\u5de6**\u5b50\u8282\u70b9\u7684 $F[1][0]$ $+$ **\u53f3**\u5b50\u8282\u70b9\u7684 $F[0][0]$\uff1b\n3. **\u5de6**\u5b50\u8282\u70b9\u7684 $F[1][1]$ $+$ **\u53f3**\u5b50\u8282\u70b9\u7684 $F[0][0]$\uff1b\n\n\u4e09\u79cd\u60c5\u51b5\u53d6\u6700\u5927\u503c $(Max)$ \u66f4\u65b0\u6765\uff0c\u5176\u4ed6\u60c5\u51b5\u540c\u7406\uff0c\u5728\u66f4\u65b0\u65f6\u8ba8\u8bba\u5373\u53ef\u3002\n\n\u6ce8\uff1a\u5728\u5efa\u6811\u65f6\u53f6\u5b50\u8282\u70b9\u7684\u503c\u4e3a$F[1][1] = S[l]$\u3002\n\n\u6bcf\u7ec4\u6570\u636e\u8bfb\u5165\u540e\u8fdb\u884c\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\uff0c$Ans$ \u589e\u52a0\u7ebf\u6bb5\u6811\u6839\u8282\u70b9 $(T[1])$ \u7684\u6240\u6709\u60c5\u51b5\u4e2d\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n------\n\n## \u3010\u4ee3\u7801\u3011\n\n### [C++]\n```cpp\n#include <bits/stdc++.h>\n#define wld(a) while(a(isdigit(c=getchar())))\n#define xpp x=(x<<1)+(x<<3)+(c^48)\n#define LL long long\n#define R k<<1|1\n#define L k<<1\nusing namespace std;\nconst int MAXN = 40000+5;\nstruct T{LL F[2][2];int l, r;}T[MAXN*4];\n\nint S[MAXN], n, d, p, v;\nlong long Ans;\n\ninline int Rd(){char c;wld(!);int x=c^48;wld()xpp;return x;}\ninline void Update(int &k){  //\u66f4\u65b0\u6570\u636e\n\tT[k].F[1][0] = max(max(T[L].F[1][0]+T[R].F[1][0], T[L].F[1][1]+T[R].F[0][0]), T[L].F[1][0]+T[R].F[0][0]);\n\tT[k].F[0][1] = max(max(T[L].F[0][1]+T[R].F[0][1], T[L].F[0][0]+T[R].F[1][1]), T[L].F[0][0]+T[R].F[0][1]);\n\tT[k].F[0][0] = max(max(T[L].F[0][1]+T[R].F[0][0], T[L].F[0][0]+T[R].F[1][0]), T[L].F[0][0]+T[R].F[0][0]);\n\tT[k].F[1][1] = max(max(T[L].F[1][0]+T[R].F[1][1], T[L].F[1][1]+T[R].F[0][1]), T[L].F[1][0]+T[R].F[0][1]);\n}\nvoid Build(int k, int l, int r){  //\u5efa\u6811\n\tT[k].l = l, T[k].r = r;\n\tif(l==r){T[k].F[1][1] = S[l];return;}\n\tint mid = (l+r)>>1;\n\tBuild(L, l, mid);\n\tBuild(R, mid+1, r);\n\tUpdate(k);\n}\nvoid Revise(int k){  //\u5355\u70b9\u4fee\u6539\n\tif(T[k].l==T[k].r){T[k].F[1][1]=v;return;}\n\tint Tmid = (T[k].l+T[k].r)>>1;\n\tif(p<=Tmid) Revise(L);\n\telse Revise(R);\n\tUpdate(k);\n}\nint main(){\n\tn=Rd(), d=Rd();\n\tfor(int i=1; i<=n; i++) S[i]=Rd();\n\tBuild(1, 1, n);\n\twhile(d--){\n\t\tp=Rd(), v=Rd();\n\t\tRevise(1);\n\t\tAns += max(max(T[1].F[1][1], T[1].F[0][0]), max(T[1].F[1][0], T[1].F[0][1]));\n\t}\n\tprintf(\"%lld\", Ans);\n\treturn 0;\n}\n```\n------\n## \u3010\u8865\u5145\u3011\n\n\u5206\u7c7b\u8ba8\u8bba\u65f6\u8981\u7ec6\u5fc3\u4e00\u70b9\uff0c\u8981\u8bb0\u5f97\u662f\u5148\u4fee\u6539\u518d\u7edf\u8ba1\u3002\n\n---\n\n# Over",
        "postTime": 1546666760,
        "uid": 143742,
        "name": "Nelson_Wang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3097 \u3010[USACO13DEC]\u6700\u4f18\u6324\u5976Optimal Milking\u3011"
    },
    {
        "content": "\u6211\u8c8c\u4f3c\u8bfb\u9898\u8bfb\u9519\u4e86\uff0c\u4ee5\u4e3a\u4fee\u6539\u7684\u65b9\u6848\u662f\u81ea\u5df1\u5b9a\u7684\u3002\u3002\u3002\n\n\u8fd9\u9898\u53d1\u73b0\u6570\u5217\u7684\u7b54\u6848\u53ef\u4ee5\u5206\u6cbb\u3002\u7136\u540e\u8003\u8651\u7ebf\u6bb5\u6811\u5408\u5e76\u7b54\u6848\u3002\u5f88\u663e\u7136\u7684\u53ea\u9700\u8981\u8003\u8651\u7aef\u70b9\u9009\u6216\u4e0d\u9009\u7684\u60c5\u51b5\u3002\n\n\u770b\u8d77\u6765\u5f88\u4e00\u773c\u7684\u9898\u76ee\u6211\u8c8c\u4f3c\u6ca1\u79d2\u6389\u3002\u8fd8\u662f\u592a\u83dc\u4e86\u3002\u3002\u3002\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define int long long\nusing namespace std;\nconst int maxn=40005;\nint n,m,q;\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\nstruct node{\n\tint f[2][2],ans;\n}a[maxn<<2];\ninline void pushup(int k){\n\ta[k].f[0][0]=max(a[k<<1].f[0][1]+a[k<<1|1].f[0][0],a[k<<1].f[0][0]+a[k<<1|1].f[1][0]);\n\ta[k].f[0][1]=max(a[k<<1].f[0][1]+a[k<<1|1].f[0][1],a[k<<1].f[0][0]+a[k<<1|1].f[1][1]);\n\ta[k].f[1][0]=max(a[k<<1].f[1][0]+a[k<<1|1].f[1][0],a[k<<1].f[1][1]+a[k<<1|1].f[0][0]);\n\ta[k].f[1][1]=max(a[k<<1].f[1][1]+a[k<<1|1].f[0][1],a[k<<1].f[1][0]+a[k<<1|1].f[1][1]);\n\ta[k].ans=max(a[k].f[0][0],a[k].f[1][1]);\n\ta[k].ans=max(a[k].ans,max(a[k].f[0][1],a[k].f[1][0]));\n}\nvoid build(int k,int l,int r){\n\tif (l==r){\n\t\ta[k].f[1][1]=a[k].ans=read();\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid); build(k<<1|1,mid+1,r);\n\tpushup(k);\n}\nvoid update(int k,int l,int r,int x,int v){\n\tif (l==r){\n\t\ta[k].f[1][1]=a[k].ans=v;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif (mid>=x) update(k<<1,l,mid,x,v);\n\t\telse update(k<<1|1,mid+1,r,x,v);\n\tpushup(k);\t\n}\nint sum;\nsigned main(){\n\tn=read(); q=read();\n\tbuild(1,1,n);\n\tfor (int i=1;i<=q;i++){\n\t\tint x=read(),y=read();\n\t\tupdate(1,1,n,x,y);\n\t\tsum+=a[1].ans;\n\t}\n\twriteln(sum);\n\treturn 0;\n}\n```",
        "postTime": 1523088911,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3097 \u3010[USACO13DEC]\u6700\u4f18\u6324\u5976Optimal Milking\u3011"
    },
    {
        "content": "\n## \u9898\u89e3\uff1a\n\n\u601d\u8def\uff1a\u5355\u70b9\u4fee\u6539+\u6c42\u6700\u5927\u70b9\u6743\u72ec\u7acb\u96c6\u3002\n\n\u8003\u8651\u7528\u533a\u95f4\u6811\u7ef4\u62a4\u3002\u4f46\u662f\u4e00\u65f6\u534a\u4f1a\u6ca1\u660e\u767d\u8981\u7ef4\u62a4\u4ec0\u4e48\u3002~~\uff08\u7ef4\u62a4\u4e86\u4e2a\u5bc2\u5bde\uff09~~\n\n\u540e\u6765\u53d1\u73b0\uff0c\u4f46\u51e1\u4e0d\u662f\u88f8\u7684\u7ebf\u6bb5\u6811\uff0c\u90fd\u53ef\u4ee5\u5148\u8003\u8651\u5206\u7c7b\u8ba8\u8bba+\u5411\u4e0apushup\u533a\u95f4\u5408\u5e76\u3002\n\n\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u7aef\u70b9\u6709\u6ca1\u6709\u88ab\u9009\u7684\u60c5\u51b5\uff0c\u7136\u540e\u5728pushup\u51fd\u6570\u4e2d\u5206\u7c7b\u8f6c\u79fb\u5373\u53ef\u3002\n\nC\u8bed\u8a00\u4ee3\u7801\uff1a\n\n```cpp\n#include<stdio.h>\n#define max(a,b) (a)>(b)?(a):(b)\n#define lson pos<<1\n#define rson pos<<1|1\n#define int long long\nint n,m,q,ans;\nchar *p1,*p2,buf[100000];\n#define nc() (p1==p2 && (p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++)\nint read()\n{\n    int x=0,f=1;\n    char ch=nc();\n    while(ch<48||ch>57)\n    {\n        if(ch=='-')\n            f=-1;\n        ch=nc();\n    }\n    while(ch>=48&&ch<=57)\n        x=x*10+ch-48,ch=nc();\n   \treturn x*f;\n}\nstruct node\n{\n\tint f[2][2],ans;\n}tree[40005<<2];\nvoid pushup(int pos)\n{\n\ttree[pos].f[0][0]=max(tree[rson].f[0][1]+tree[lson].f[0][0],tree[rson].f[0][0]+tree[lson].f[1][0]);\n\ttree[pos].f[0][1]=max(tree[rson].f[0][1]+tree[lson].f[0][1],tree[rson].f[0][0]+tree[lson].f[1][1]);\n\ttree[pos].f[1][0]=max(tree[rson].f[1][0]+tree[lson].f[1][0],tree[rson].f[1][1]+tree[lson].f[0][0]);\n\ttree[pos].f[1][1]=max(tree[rson].f[1][1]+tree[lson].f[0][1],tree[rson].f[1][0]+tree[lson].f[1][1]);\n\ttree[pos].ans=max(tree[pos].f[0][0],tree[pos].f[1][1]);\n\ttree[pos].ans=max(tree[pos].ans,max(tree[pos].f[0][1],tree[pos].f[1][0]));\n}\nvoid build(int pos,int l,int r)\n{\n\tif (l==r)\n    {\n\t\ttree[pos].f[1][1]=tree[pos].ans=read();\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(rson,l,mid); \n    build(lson,mid+1,r);\n\tpushup(pos);\n}\nvoid update(int pos,int l,int r,int x,int v)\n{\n\tif (l==r)\n    {\n\t\ttree[pos].f[1][1]=tree[pos].ans=v;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif (mid>=x) \n        update(rson,l,mid,x,v);\n\telse \n        update(lson,mid+1,r,x,v);\n\tpushup(pos);\t\n}\nsigned main()\n{\n\tn=read();q=read();\n\tbuild(1,1,n);\n\tfor(int i=1;i<=q;i++)\n    {\n\t\tint x=read(),y=read();\n\t\tupdate(1,1,n,x,y);\n\t\tans+=tree[1].ans;\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1603371207,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3097 \u3010[USACO13DEC]Optimal Milking G\u3011"
    },
    {
        "content": "```cpp\nuses math;\ntype\n tree=record\n  l,r:int64;\n  su:array[0..1,0..1] of int64;\n end;\nvar\n n,m,od,ev,x,y,ans:int64;\n a:array[0..40000] of int64;\n t:array[1..130000] of tree;\n i:longint;\nprocedure merge(i:longint);\nbegin\n t[i].su[1,1]:=max(t[i shl 1].su[1,0]+t[i shl 1 or 1].su[1,1],\n  t[i shl 1].su[1,1]+t[i shl 1 or 1].su[0,1]);\n t[i].su[1,0]:=max(t[i shl 1].su[1,0]+t[i shl 1 or 1].su[1,0]\n  ,t[i shl 1].su[1,1]+t[i shl 1 or 1].su[0,0]);\n t[i].su[0,1]:=max(t[i shl 1].su[0,1]+t[i shl 1 or 1].su[1,1],\n  t[i shl 1].su[0,0]+t[i shl 1 or 1].su[1,1]);\n t[i].su[0,0]:=max(t[i shl 1].su[0,0]+t[i shl 1 or 1].su[1,0],\n```\nt[i shl 1].su[0,1]+t[i shl 1 or 1].su[0,0])\n```cpp\nend;\nprocedure build(i,l,r:longint);\nvar\n m:longint;\nbegin\n t[i].l:=l;\n t[i].r:=r;\n if l=r then\n begin\n  t[i].su[1,1]:=a[l];\n```\nexit\n```cpp\n end;\n m:=(l+r) shr 1;\n build(i shl 1,l,m);\n build(i shl 1 or 1,m+1,r);\n merge(i)\nend;\nprocedure change(i:longint);\nvar\n m:longint;\nbegin\n if (t[i].l=x)and(t[i].r=x) then\n begin\n  t[i].su[1,1]:=y;\n```\nexit\n\n```cpp\n end;\n m:=(t[i].l+t[i].r) shr 1;\n if m>=x then change(i shl 1)\n  else change(i shl 1 or 1);\n merge(i)\nend;\nbegin\n readln(n,m);\n for i:=1 to n do readln(a[i]);\n build(1,1,n);\n for i:=1 to m do\n begin\n  readln(x,y);\n  change(1);\n  inc(ans,t[1].su[1,1])\n end;\n writeln(ans)\nend.\n```\n\u5f00\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u56db\u4e2a\u4fe1\u606f\uff1a\n\u533a\u95f4\u5de6\u7aef\u70b9\u4e0d\u9009\uff0c\u53f3\u7aef\u70b9\u4e5f\u4e0d\u9009\u7684\u6700\u5927\u503c\n\n\u533a\u95f4\u5de6\u7aef\u70b9\u9009\u62e9\uff0c\u53f3\u7aef\u70b9\u4e0d\u9009\u7684\u6700\u5927\u503c\n\n\u533a\u95f4\u5de6\u7aef\u70b9\u4e0d\u9009\uff0c\u53f3\u7aef\u70b9\u9009\u62e9\u7684\u6700\u5927\u503c\n\n\u533a\u95f4\u5de6\u7aef\u70b9\u9009\u62e9\uff0c\u53f3\u7aef\u70b9\u4e5f\u9009\u62e9\u7684\u6700\u5927\u503c\n\n\u7136\u540e\u5408\u5e76\u65f6\u8ba8\u8bba\u4e00\u4e0b\u5c31\u884c\u4e86\n",
        "postTime": 1476059540,
        "uid": 19567,
        "name": "zx2003",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3097 \u3010[USACO13DEC]\u6700\u4f18\u6324\u5976Optimal Milking\u3011"
    }
]