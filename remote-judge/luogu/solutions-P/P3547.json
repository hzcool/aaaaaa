[
    {
        "content": "\u7b54\u6848\u67093\u79cd\u53ef\u80fd\u7684\u6765\u6e90\uff0c\u5206\u522b\u662f\n\n$$da;\\lfloor \\frac{d}{2}\\rfloor b+[d\\bmod 2]a;kb$$\n\n\u6ce8\u610f\u5230\u524d\u4e24\u79cd\u90fd\u662f\u53ef\u4ee5\u4e00\u904dBFS\u5f97\u5230\u7684\uff0c\u6211\u4eec\u6765\u5173\u6ce8\u540e\u4e00\u9879\uff1a\u56e0\u4e3ab\u5f88\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u4e3a\u4e86\u4e0d\u8d70a\uff0c\u4e0d\u60dc\u591a\u7ecf\u8fc7\u51e0\u6761\u8fb9\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u8981\u6c42\u4e00\u4e2a\u201c\u6700\u77ed\u5076\u6570\u8def\u201d\u957f\u5ea6\n\n\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e2a\u66b4\u529b\uff1a\u65e2\u7136\u957f\u5ea6\u662f\u5076\u6570\uff0c\u6211\u4eec\u6bcf\u6b21\u8d70\u4e24\u6b65\u4e0d\u5c31\u884c\u4e86\u3002\u5148\u679a\u4e3eu\u7684\u51fa\u8fb9v\uff0c\u518d\u679a\u4e3ev\u7684\u51fa\u8fb9w\uff0c\u5982\u679cu\u548cw\u6ca1\u6709\u8fb9\uff0c\u90a3\u4e48w\u5c31\u80fd\u88abu\u66f4\u65b0\u5230\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u663e\u7136\u662f$O(m^2)$\u7684\uff0c\u5982\u4f55\u4f18\u5316\uff1f\n\n\u50cf\u8fd9\u79cd\u679a\u4e3e\u4e24\u5c42\u51fa\u8fb9\uff0c\u53ef\u4ee5\u8054\u60f3\u5230\u590d\u6742\u5ea6\u4e3a$O(m\\sqrt{m})$\u7684\u4e09\u5143\u73af\u8ba1\u6570\u3002\u89c2\u5bdf\uff0c\u5982\u679cu\u66f4\u65b0\u4e86w\uff0c\u90a3\u4e48$(v,w)$\u8fd9\u6761\u8fb9\u5df2\u7ecf\u53d1\u6325\u4e86\u5b83**\u4f5c\u4e3a\u7b2c\u4e8c\u6761\u8fb9**\u7684\u4f5c\u7528\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u5b83\u5220\u9664\u5373\u53ef\u3002\u8fd9\u53ef\u4ee5\u7528\u53cc\u5411\u94fe\u8868\u5b9e\u73b0\u3002\n\n**\u6ce8\u610f\u6211\u4eec\u8981\u5f00\u4e24\u4e2a\u8fb9\u8868\uff01\u7b2c\u4e00\u5c42\u904d\u5386\u7684\u662f\u539f\u8fb9\u8868\uff0c\u7b2c\u4e8c\u5c42\u904d\u5386\u7684\u662f\u53ef\u5220\u7684\u8fb9\u8868\uff01**\n\n\u81f3\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bc1\u660e\u7684\u8bdd\uff0c\u7b80\u5355\u7684\u60f3\u6cd5\u5c31\u662f\u4e00\u4e2a\u4e09\u5143\u73af\u4f1a\u88ab\u904d\u5386\u4e09\u8fb9\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a$O(m\\sqrt{m})$\uff0c\u800c\u5176\u4ed6\u8fb9\u904d\u5386\u4e00\u6b21\u540e\u5c31\u88ab\u5220\u9664\u4e86\uff1bPOI\u5b98\u65b9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u65b0\u9896\u7684\u590d\u6742\u5ea6\u8bc1\u660e\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u4e00\u4e0b\uff1a\n\n![\u6355\u83b7.png](https://i.loli.net/2019/06/16/5d06474a17d1579712.png)\n\n\n\n```cpp\n#define N 100005\nstruct Graph\n{\n    int head[N],cnte,pr[N*2],nx[N*2],v[N*2];\n    il void adde(int uu,int vv)\n    {\n        v[++cnte]=vv,nx[cnte]=head[uu],pr[head[uu]]=cnte,head[uu]=cnte;\n        v[++cnte]=uu,nx[cnte]=head[vv],pr[head[vv]]=cnte,head[vv]=cnte;\n    }\n    il void del(int x,int i)\n    {\n        nx[pr[i]]=nx[i],pr[nx[i]]=pr[i];\n        if(head[x]==i) head[x]=nx[i];\n    }\n} G,H;\nint n,m,S,a,b;\nint d[N];\nint q[N],hd,tl;\nint ans[N];\nbool vis[N];\nsigned main()\n{\n#ifdef M207\n    freopen(\"in.in\",\"r\",stdin);\n    // freopen(\"ot.out\",\"w\",stdout);\n#endif\n    in(n,m,S,a,b);\n    for(ri i=1,uu,vv; i<=m; ++i)\n    {\n        in(uu,vv);\n        G.adde(uu,vv),H.adde(uu,vv);\n    }\n    d[q[hd=tl=1]=S]=1;\n    while(hd<=tl)\n    {\n        int x=q[hd++];\n        for(ri i=G.head[x]; i; i=G.nx[i])\n            if(!d[G.v[i]]) d[q[++tl]=G.v[i]]=d[x]+1;\n    }\n    for(ri i=1; i<=n; ++i)\n    {\n        if(d[i])\n        {\n            --d[i];\n            ans[i]=min(a*d[i],b*(d[i]>>1)+a*(d[i]&1));\n            d[i]=0;\n        }\n        else ans[i]=1e9;\n    }\n    d[q[hd=tl=1]=S]=1;\n    while(hd<=tl)\n    {\n        int x=q[hd++];\n        for(ri i=G.head[x]; i; i=G.nx[i]) vis[G.v[i]]=1;\n        for(ri i=G.head[x]; i; i=G.nx[i])\n        {\n            int V=G.v[i];\n            for(ri j=H.head[V]; j; j=H.nx[j])\n            {\n                if(d[H.v[j]]||vis[H.v[j]]) continue;\n                d[q[++tl]=H.v[j]]=d[x]+1;\n                H.del(V,j);\n            }\n        }\n        for(ri i=G.head[x]; i; i=G.nx[i]) vis[G.v[i]]=0;\n    }\n    for(ri i=1; i<=n; ++i)\n    {\n        if(d[i]) ckmin(ans[i],b*(d[i]-1));\n        out(ans[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1560692488,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u4e09\u5143\u73af-[POI2013]CEN-Price List-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u8fd9\u4e2a\u5783\u573e\u505a\u6cd5\u7684\u4e0a\u754c\u5927\u6982\u662f\u65f6\u95f4$O(m\\sqrt m\\log n\\log m)$\uff0c\u7a7a\u95f4$O(m\\sqrt m\\log m)$\u7684\uff0c\u7136\u800c\u6570\u636e\u6bd4\u8f83\u6c34\u6240\u4ee5\u8dd1\u4e0d\u6ee1\u2026\u2026\n\n\u9996\u5148\u6211\u4eec\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u66b4\u529b\uff0c\u5728\u4e2d\u5fc3\u70b9\u5904\u4e8c\u91cd\u679a\u4e3e\u51fa\u8fb9\uff0c\u7136\u540e\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6ca1\u6709\u8fde\u7684\u8fb9\u5c31\u8fde\u4e00\u6761$b$\u8fb9\u3002\n\n\u663e\u7136\u6211\u4eec\u9700\u8981\u7528\u5ea6\u6570\u6839\u53f7\u5206\u6cbb\u6765\u4f18\u5316\u8fd9\u4e2a\u66b4\u529b\uff0c\u5982\u679c\u5ea6\u6570$<=\\sqrt m$\u90a3\u4e48\u76f4\u63a5\u66b4\u529b\uff0c\u5426\u5219\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u5728\u5927\u5ea6\u6570\u70b9\u5904\u7ef4\u62a4\u4e00\u4e9b\u4e1c\u897f\u3002\n\n\u4e00\u4e2a\u76f4\u89c2\u7684\u60f3\u6cd5\u662f\u8fde\u6709\u5411\u8fb9\uff0c\u5728\u5927\u5ea6\u6570\u70b9\u5904\u5efa\u4e00\u4e2a\u865a\u70b9\uff0c\u6211\u4eec\u8ba9\u5927\u5ea6\u6570\u70b9\u5468\u56f4\u7684\u4e00\u5708\u70b9\u5411\u865a\u70b9\u8fde$b$\u8fb9\uff0c\u8ba9\u865a\u70b9\u5411\u5468\u56f4\u4e00\u5708\u70b9\u8fde0\u8fb9\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u5468\u56f4\u4e00\u5708\u70b9\u4e4b\u95f4\u4e92\u76f8\u8fde\u8fb9\u3002\n\n\u4f46\u662f\u8fd9\u6837\u505a\u663e\u7136\u4e0d\u5bf9\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4e24\u4e2a\u6709\u76f4\u63a5\u7684$a$\u8fb9\u76f8\u8fde\u7684\u70b9\u4e4b\u95f4\u6ca1\u6709$b$\u8fb9\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u4e0d\u80fd\u8fde\u8fb9\u663e\u7136\u5c31\u662f\u5b83\u4eec\u5728\u4e00\u4e2a\u4e09\u5143\u73af\u91cc\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u627e\u51fa\u6240\u6709\u4e09\u5143\u73af\uff0c\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u5927\u5ea6\u6570\u70b9\u6211\u4eec\u627e\u51fa\u5b83\u6240\u5728\u7684\u6240\u67093\u5143\u73af\uff0c\u5c31\u5f97\u5230\u4e00\u5806\u5f62\u5982\u201c$x$\u548c$y$\u4e0d\u80fd\u8fde\u8fb9\u201d\u7684\u5173\u7cfb\uff0c\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u5927\u5ea6\u6570\u70b9\u5efa\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a$x$\u6211\u4eec\u77e5\u9053\u5b83\u4e0d\u80fd\u548c\u54ea\u4e9b$y$\u8fde\u8fb9\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u5b83\u80fd\u8fde\u7684\u90e8\u5206\u88ab\u5206\u5272\u6210\u4e86\u82e5\u5e72\u4e2a\u533a\u95f4\uff0c\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u5373\u53ef\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <vector>\n#include <algorithm>\n#include <unordered_set>\n#define blo 600\n#define ll long long\nusing namespace std;\nnamespace ywy {\n\tinline int get() {\n\t    int n = 0;\n\t    char c;\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            break;\n\t        if (c == '-')\n\t            goto s;\n\t    }\n\t    n = c - '0';\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 + c - '0';\n\t        else\n\t            return (n);\n\t    }\n\ts:\n\t    while ((c = getchar()) || 23333) {\n\t        if (c >= '0' && c <= '9')\n\t            n = n * 10 - c + '0';\n\t        else\n\t            return (n);\n\t    }\n\t}\n\tvector<int> vec[100001], ds[100001], dt[100001], other[100001];\n\tint dfn[100001];\n\ttypedef struct _b {\n\t    int dest;\n\t    int nxt;\n\t    unsigned char len;\n\t} bian;\n\tbian memchi[13000001];\n\tint gn = 1, heads[1000001], lef[1000001], rgh[1000001], gseg;  //\u8b66\u544a\uff01\uff01\uff01\uff01\uff01\n\tinline void add(int s, int t, int l) {\n\t    memchi[gn].dest = t;\n\t    memchi[gn].nxt = heads[s];\n\t    memchi[gn].len = l;\n\t    heads[s] = gn;\n\t    gn++;\n\t}\n\tint build(int l, int r, int pt) {\n\t    if (l == r)\n\t        return (vec[pt][l]);\n\t    int tree = gseg;\n\t    gseg++;\n\t    int mid = (l + r) >> 1;\n\t    lef[tree] = build(l, mid, pt);\n\t    rgh[tree] = build(mid + 1, r, pt);\n\t    add(tree, lef[tree], 0);\n\t    add(tree, rgh[tree], 0);\n\t    return (tree);\n\t}\n\tint n, a, b;\n\tvoid lb(int rl, int rr, int l, int r, int tree, int pt) {\n\t    if (rl > rr)\n\t        return;\n\t    if (rl == l && rr == r) {\n\t        add(pt, tree, 2);\n\t        return;\n\t    }\n\t    int mid = (l + r) >> 1;\n\t    if (rl > mid)\n\t        lb(rl, rr, mid + 1, r, rgh[tree], pt);\n\t    else {\n\t        if (rr <= mid)\n\t            lb(rl, rr, l, mid, lef[tree], pt);\n\t        else {\n\t            lb(rl, mid, l, mid, lef[tree], pt);\n\t            lb(mid + 1, rr, mid + 1, r, rgh[tree], pt);\n\t        }\n\t    }\n\t}\n\ttypedef struct _n {\n\t    int pt;\n\t    int dis;\n\t    _n(int a, int b) {\n\t        pt = a;\n\t        dis = b;\n\t    }\n\t    friend bool operator<(const _n &a, const _n &b) { return (a.dis > b.dis); }\n\t} node;\n\tpriority_queue<node> que;\n\ttypedef struct _p {\n\t    int a;\n\t    int b;\n\t    _p(int i, int j) {\n\t        if (i > j)\n\t            swap(i, j);\n\t        a = i;\n\t        b = j;\n\t    }\n\t    friend bool operator==(const _p &a, const _p &b) { return (a.a == b.a && a.b == b.b); }\n\t} pair;\n\ttypedef struct _alloc {\n\t    size_t operator()(const pair &a) const { return (((ll)a.a << 32) | a.b); }\n\t} alloc;\n\tunordered_set<pair, alloc> st;\n\tvector<int> dag[100001];\n\tinline void clear(vector<int> &v) {\n\t    vector<int> tmp;\n\t    v = tmp;\n\t}\n\tunsigned char bv[1000001];\n\tint dis[1000001];\n\tint tab[5];\n\tvoid ywymain() {\n\t    n = get();\n\t    int m = get(), k = get();\n\t    a = get();\n\t    b = get();\n\t    for (register int i = 1; i <= m; i++) {\n\t        int s = get(), t = get();\n\t        add(s, t, 1);\n\t        add(t, s, 1);\n\t        vec[s].push_back(t);\n\t        vec[t].push_back(s);\n\t        st.insert(_p(s, t));\n\t    }\n\t    for (register int i = 1; i <= n; i++) {\n\t        for (register int j = 0; j < vec[i].size(); j++) {\n\t            int dst = vec[i][j];\n\t            if (vec[dst].size() > vec[i].size() || (vec[i].size() == vec[dst].size() && dst > i)) {\n\t                dag[i].push_back(dst);\n\t            }\n\t        }\n\t    }\n\t    tab[1] = a;\n\t    tab[2] = b;\n\t    gseg = n + 1;\n\t    for (register int i = 1; i <= n; i++) {\n\t        for (register int j = 0; j < dag[i].size(); j++) {\n\t            for (register int k = 0; k < j; k++) {\n\t                int x = dag[i][j], y = dag[i][k];\n\t                if (st.count(_p(x, y))) {\n\t                    if (vec[i].size() >= blo)\n\t                        ds[i].push_back(x), dt[i].push_back(y);\n\t                    if (vec[x].size() >= blo)\n\t                        ds[x].push_back(i), dt[x].push_back(y);\n\t                    if (vec[y].size() >= blo)\n\t                        ds[y].push_back(i), dt[y].push_back(x);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    for (register int i = 1; i <= n; i++) {\n\t        if (vec[i].size() < blo) {\n\t            for (register int j = 0; j < vec[i].size(); j++) {\n\t                for (register int k = 0; k < j; k++) {\n\t                    if (!st.count(_p(vec[i][j], vec[i][k])))\n\t                        add(vec[i][j], vec[i][k], 2), add(vec[i][k], vec[i][j], 2);\n\t                }\n\t            }\n\t        } else {\n\t            for (register int j = 0; j < vec[i].size(); j++) dfn[vec[i][j]] = j, clear(other[vec[i][j]]);\n\t            int rt = build(0, vec[i].size() - 1, i);\n\t            for (register int j = 0; j < ds[i].size(); j++) {\n\t                other[ds[i][j]].push_back(dfn[dt[i][j]]);\n\t                other[dt[i][j]].push_back(dfn[ds[i][j]]);\n\t            }\n\t            for (register int j = 0; j < vec[i].size(); j++) {\n\t                int me = vec[i][j];\n\t                sort(other[me].begin(), other[me].end());\n\t                int lst = -1;\n\t                for (register int k = 0; k < other[me].size(); k++) {\n\t                    lb(lst + 1, other[me][k] - 1, 0, vec[i].size() - 1, rt, me);\n\t                    lst = other[me][k];\n\t                }\n\t                lb(lst + 1, vec[i].size() - 1, 0, vec[i].size() - 1, rt, me);\n\t            }\n\t        }\n\t    }\n\t    memset(dis, 0x7f, sizeof(dis));\n\t    dis[k] = 0;\n\t    que.push(_n(k, 0));\n\t    while (!que.empty()) {\n\t        node cjr = que.top();\n\t        que.pop();\n\t        if (bv[cjr.pt])\n\t            continue;\n\t        bv[cjr.pt] = 1;\n\t        dis[cjr.pt] = cjr.dis;\n\t        for (register int i = heads[cjr.pt]; i; i = memchi[i].nxt) {\n\t            if (bv[memchi[i].dest])\n\t                continue;\n\t            if (cjr.dis + tab[memchi[i].len] < dis[memchi[i].dest]) {\n\t                que.push(_n(memchi[i].dest, dis[memchi[i].dest] = cjr.dis + tab[memchi[i].len]));\n\t            }\n\t        }\n\t    }\n\t    for (register int i = 1; i <= n; i++) cout << dis[i] << endl;\n\t}\n}\nint main() {\n    ywy::ywymain();\n    return (0);\n}\n```",
        "postTime": 1560769455,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3547 \u3010[POI2013]CEN-Price List\u3011"
    },
    {
        "content": "\u6211\u4eec\u90fd\u77e5\u9053\u5bf9\u4e8e dijkstra \u7b97\u6cd5\uff0c\u6bcf\u6761\u8fb9\u53ea\u4f1a\u88ab\u904d\u5386\u4e00\u6b21\u3002\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $x$\uff0c\u904d\u5386\u5230\u5b83\u65f6\u5b83\u7684 dis \u4e00\u5b9a\u662f\u6700\u5c0f\u7684\u4e14\u4e0d\u4f1a\u518d\u88ab\u66f4\u65b0\u4e86\u3002\n\n\u8fd9\u540c\u6837\u9002\u7528\u4e0e\u7c7b\u4f3c\u7684 bfs \u7b97\u6cd5\u3002\n\n\u5bf9\u4e8e\u672c\u9898\u3002\u539f\u56fe\u4e0a\u7684\u6700\u77ed\u8def\u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa\u6765\uff0c\u7136\u540e\u53ef\u4ee5\u9009\u62e9\u5c06\u8def\u5f84\u4e0a\u76f8\u90bb\u4e24\u6761\u8fb9\u5408\u6210\u4e00\u6761\u8fb9\uff08\u4e00\u5b9a\u80fd\u5408\uff0c\u5426\u5219\u6700\u77ed\u8def\u4f1a\u66f4\u77ed\uff09\u3002\u5f53\u7136\u6700\u540e\u53ef\u80fd\u4f1a\u5269\u4e0b\u4e00\u6761\u957f\u5ea6\u4e3a $1$ \u7684 $a$ \u8fb9\u3002\n\n\u5982\u679c $a$ \u8fdc\u5927\u4e8e $b$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u53ef\u80fd\u989d\u5916\u7ed5\u4e00\u5927\u5708\u7528\u591a\u4e2a $b$ \u6d88\u53bb $a$\uff0c\u6b64\u65f6\u8def\u5f84\u4e00\u5b9a\u5168\u90e8\u4e3a $b$\u3002\n\n\u8003\u8651 BFS\uff0c\u5f53\u524d\u51fa\u961f\u7684\u8282\u70b9\u4e3a $x$\uff0c\u6807\u8bb0 $x$ \u6240\u6709\u7684\u76f8\u90bb\u70b9\uff0c\u679a\u4e3e\u4e00\u6761\u8fb9 $x\\to y$\uff0c\u518d\u679a\u4e3e\u53e6\u4e00\u6761\u8fb9 $y\\to z$\uff0c\u5982\u679c $z$ \u4e0a\u9762\u6ca1\u6709\u6807\u8bb0\uff0c\u663e\u7136\u53ef\u4ee5\u66f4\u65b0 $d_x + 1\\to d_z$\u3002\n\n\u4f46\u662f\u76f4\u63a5\u679a\u4e3e\u662f $\\mathcal{O}(M^2)$ \u7684\uff0c\u4f46\u662f\u6839\u636e BFS \u7684\u6027\u8d28\uff0c\u5982\u679c\u6211\u4eec\u677e\u5f1b\u4e86 $d_x+1\\to d_z$\uff0c\u90a3\u4e48 $y\\to z$ \u4e00\u5b9a\u4e0d\u4f1a\u518d\u88ab\u4f7f\u7528\uff0c\u76f4\u63a5\u5220\u6389\u5373\u53ef\u3002\n\n\u7531\u4e8e\u677e\u5f1b\u4e00\u6b21\u5c31\u5220\u4e00\u6761\u8fb9\uff0c\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u662f $\\mathcal{O}(M)$ \u7684\uff0c\u4f46\u662f\u8003\u8651\u5230\u5b58\u5728 $z$ \u5df2\u7ecf\u88ab\u6807\u8bb0\u7684\u60c5\u51b5\u3002\u8fd9\u79cd\u60c5\u51b5\u4e00\u5b9a\u662f $x,y,z$ \u5b58\u5728\u4e09\u5143\u7ec4\uff0c\u800c\u4e09\u5143\u7ec4\u7684\u6570\u91cf\u662f $\\mathcal{O}(M\\sqrt M)$ \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f $\\mathcal{O}(N + M\\sqrt{M})$\u3002\n\n```cpp\n#define N 100005\nint n, m, s, a, b, ans = inf, d[N], h[N], tot, u[N], f[N], nt[N << 1], ls[N << 1], v[N];\nstruct edge{int to, nxt;}e[N << 1];\nvoid add(int x,int y){e[++tot].nxt = h[x], h[x] = tot, e[tot].to = y;}\nqueue<int>q;\nvoid bfs(){\n\td[s] = 1, q.push(s);\n\twhile(!q.empty()){\n\t\tint x = q.front(); q.pop();\n\t\tfor(int i = h[x]; i; i = e[i].nxt)if(!d[e[i].to])\n\t\t\td[e[i].to] = d[x] + 1, q.push(e[i].to);\n\t}\n\trp(i, n)d[i]--, u[i] = min(a * d[i], b * (d[i] >> 1) + a * (d[i] & 1));\n}\nvoid calc(){\n\trp(x, n){\n\t\tfor(int i = h[x]; i; i = e[i].nxt)\n\t\t\tls[f[x]] = i, nt[i] = f[x], ls[i] = 0, f[x] = i;\n\t}\n\tmemset(d, 0, sizeof(d));\n\td[s] = 1, q.push(s);\n\twhile(!q.empty()){\n\t\tint x = q.front(); q.pop();\n\t\tfor(int i = h[x]; i; i = e[i].nxt)v[e[i].to] = 1;\n\t\tfor(int i = h[x]; i; i = e[i].nxt){\n\t\t\tint y = e[i].to;\n\t\t\tfor(int j = f[y]; j; j = nt[j])if(!v[e[j].to]){\n\t\t\t\tif(ls[j])nt[ls[j]] = nt[j], ls[nt[j]] = ls[j];\n\t\t\t\telse ls[nt[j]] = 0, f[y] = nt[j];\n\t\t\t\tif(!d[e[j].to])d[e[j].to] = d[x] + 1, q.push(e[j].to);\n\t\t\t}\n\t\t}\n\t\tfor(int i = h[x]; i; i = e[i].nxt)v[e[i].to] = 0;\n\t}\n\trp(i, n)if(d[i])d[i]--, u[i] = min(u[i], b * d[i]);\n}\nint main() {\n\tread(n, m, s, a, b);\n\trp(i, m){\n\t\tint x, y; read(x, y);\n\t\tadd(x, y), add(y, x);\n\t}\n\tbfs(), calc();\n\trp(i, n)printf(\"%d\\n\", u[i]);\n\treturn 0;\n}\n```",
        "postTime": 1648906070,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011[POI2013]CEN-Price List"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3547)\n\n\u9898\u9762\u8bb2\u89e3\u5341\u5206\u6e05\u6670\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u9996\u5148\u7ed9\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff1a \u5728\u8fd9\u5f20\u56fe\u4e2d\u7684\u6700\u77ed\u8def\u4e00\u5b9a\u8981\u4e48\u662f\u539f\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u503c\uff08\u4e5f\u5c31\u662f\u5168\u662f $a$ \uff09\uff0c \u8981\u4e48\u5c31\u662f\u9664\u4e86\u5f00\u59cb\u6216\u8005\u672b\u5c3e\u662f $a$ \u5176\u4ed6\u7684\u5730\u65b9\u90fd\u662f $b$ \uff0c \u8981\u4e48\u5c31\u662f\u5168\u90e8\u90fd\u662f $b$ \u3002\n\n\u8fd9\u4e00\u70b9\u662f\u975e\u5e38\u597d\u60f3\u7684\uff0c\u8003\u8651\u5982\u679c $2 \\times a \\le b$ \u5219\u6700\u77ed\u8def\u5c31\u662f\u539f\u8def\u5f84\u4e0a\u7684\u503c\uff0c\u5982\u679c\u8003\u8651 $2 \\times a > b$ \uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u60f3\u65b9\u8bbe\u6cd5\u628a $2 \\times a$ \u7684\u4ee3\u4ef7\u7528 $b$ \u8df3\u8fc7\uff0c \u90a3\u4e48\u6700\u77ed\u7684\u8def\u5f84\u4e5f\u5c31\u662f\u6700\u5c0f\u7684\u8ddd\u79bb $dis_u$ , \u5982\u679c\u4ed6\u662f\u5947\u6570\uff0c\u5c31\u52a0\u4e0a\u6700\u540e\u4e00\u6761\u8fb9\u7684 $a$ , \u5176\u4ed6\u7684\u6bcf\u4e24\u6761\u8def\u5f84\u90fd\u7528 $b$ \u8df3\u8fc7 $2 \\times a$ \u7684\u4ee3\u4ef7\u3002\n\n\u8fd9\u4e24\u79cd\u60c5\u51b5\u53ef\u4ee5\u76f4\u63a5\u7528 $bfs$ \u627e\u5230\u6700\u5c0f\u7684 $dis_u$ \u7136\u540e\u76f4\u63a5\u8ba1\u7b97\uff0c\u5927\u6982\u5c31\u662f\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\u3002\n\n```cpp\nFor(i,1,n) ans[i]=min(dis[i]*a,(dis[i]&1)*a+(dis[i]/2)*b);\n```\n\n\n\u53e6\u5916\u4e00\u79cd\u60c5\u51b5\u662f\u53ef\u80fd\u53ea\u8df3 $b$ , \u8fd9\u4e2a\u65f6\u5019\u5c31\u76f8\u5f53\u4e8e\u6bcf\u6b21\u90fd\u8981\u8df3\u4e24\u6761\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u5f88\u660e\u663e\u6709\u4e00\u4e2a\u66b4\u529b\u5c31\u662f\u8003\u8651 $u$ \u5f53\u524d\u8fde\u4e0a\u7684\u70b9\u96c6\u662f $V$ , \u8003\u8651\u5bf9\u4e8e $\\forall v \\in V$ , \u627e\u51fa\u5176\u8fde\u63a5\u7684\u70b9\u96c6 $nxt$ = { $ x | x \\notin V,x\\ne u$ } , \u7136\u540e\u8003\u8651\u7528 $u$ \u53bb\u66f4\u65b0 $nxt$ \u70b9\u96c6\u91cc\u7684\u70b9 \uff0c \u8fd9\u6837\u505a\u660e\u663e\u662f $O(m^2)$ \u7684\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e $u$ \u66f4\u65b0\u7684\u70b9 $nxt$ , \u90a3\u4e48 $ v \\to nxt$ \u7684\u8fd9\u6761\u8fb9\u5df2\u7ecf\u88ab $u$ \u66f4\u65b0\u8fc7\u4e86\uff0c\u4e0d\u4f1a\u88ab\u5176\u4ed6\u7684\u70b9\u66f4\u65b0\uff0c\u53ef\u4ee5\u5728\u94fe\u8868\u4e2d\u5220\u9664\u8fd9\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u5c31\u4f1a\u4f7f\u5f97\u590d\u6742\u5ea6\u5927\u5927\u964d\u4f4e\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u7528 $list$ , \u4ee3\u7801\u89c1\u4e0b\uff1a\n\n```cpp\n// powered by shenxinge\n#include<bits/stdc++.h>\n#define Debug if(false)\n#define pb push_back\n#define For(i,a,b) for(int i=a;i<=b;i++)\n#define Rep(i,a,b) for(int i=a;i>=b;i--)\nusing namespace std;\nconst int maxn=100500;\ninline int read()\n{\n\tint x=0,f=1;char c;\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-f;\n\tfor(;isdigit(c);c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\treturn x*f;\n}\nint n,m,k,a,b;\n// rec\u4e3a\u5220\u53bb\u4e00\u6761\u8fb9\u7684\u7ed3\u679c\nint ans[maxn],dis[maxn];\nbool vis[maxn];\nlist<int> vec[maxn],rec[maxn];\nsigned main()\n{\n\tn=read(),m=read(),k=read(),a=read(),b=read();\n\tFor(i,1,m)\n\t{\n\t\tint u=read(),v=read();\n\t\tvec[u].pb(v),vec[v].pb(u);\n\t\trec[u].pb(v),rec[v].pb(u);\n\t}\n\tqueue<int> que;\n\tmemset(dis,-1,sizeof dis);\n\tque.push(k),dis[k]=0;\n\twhile(!que.empty())\n\t{\n\t\tint u=que.front();que.pop();\n\t\tfor(int v:vec[u]) if(!~dis[v])\n\t\t\tdis[v]=dis[u]+1,que.push(v);\n\t}\n\tFor(i,1,n)\n\t\tans[i]=min(dis[i]*a,(dis[i]&1)*a+(dis[i]/2)*b);\n\tmemset(dis,-1,sizeof dis);\n\tque.push(k),dis[k]=0;\n\twhile(!que.empty())\n\t{\n\t\tint u=que.front();que.pop();\n\t\tfor(int v:vec[u])\n\t\t\tvis[v]=true;\n\t\tfor(int v:vec[u])\n\t\t{\n\t\t\tauto it=rec[v].begin();\n\t\t\twhile(it!=rec[v].end())\n\t\t\t{\n\t\t\t\tint nxt=(*it);\n\t\t\t\tif(~dis[nxt]||vis[nxt]) it++;\n\t\t\t\telse dis[nxt]=dis[u]+1,\n\t\t\t\t\t que.push(nxt),\n\t\t\t\t\t it=rec[v].erase(it);\n\t\t\t}\n\t\t}\n\t\tfor(int v:vec[u])\n\t\t\tvis[v]=false;\n\t}\n\tFor(i,1,n) if(~dis[i])\n\t\tans[i]=min(ans[i],dis[i]*b);\n\tFor(i,1,n)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1663837844,
        "uid": 431697,
        "name": "QueenSi",
        "ccfLevel": 6,
        "title": "P3547 [POI2013]CEN-Price List \u9898\u89e3"
    },
    {
        "content": "### $\\texttt{Solution}$\n\u8003\u8651\u6700\u77ed\u8def\u7684\u5f62\u5f0f\n\n\u663e\u7136\u53ea\u67093\u79cd\u60c5\u51b5\uff1a\n\n\u5168a\uff0c\u5168b\uff08\u672b\u5c3e\u67091\u4e2aa\uff09\uff0c\u5168b\uff08\u901a\u8fc7\u591a\u8d70\u51e0\u6761\u8fb9\u4f7f\u5f97\u5b8c\u5168\u53bb\u9664a\u8fb9\uff09\n\n\u7b2c\u4e00\u79cd\u5bf9\u5e94 $2a\\leq b$\uff0c\u4e8c\u4e09\u79cd\u4e3a $b<2a$\uff0c\u6839\u636e $b$ \u7a76\u7adf\u6709\u591a\u5c0f\u51b3\u5b9a\u662f\u60c5\u51b5\u4e8c\u8fd8\u662f\u60c5\u51b5\u4e09\n\n\u524d\u4e24\u79cd\u60c5\u51b5\u6211\u4eec\u5bb9\u6613\u5904\u7406\uff0c\u8dd1\u4e00\u8fb9bfs\u5373\u53ef\uff080/1\u6700\u77ed\u8def\uff09\n\n\u6700\u540e\u4e00\u79cd\u60c5\u51b5\u6211\u4eec\u8003\u8651\u7c7b\u4f3c0/1\u6700\u77ed\u8def\u7684\u8f6c\u79fb\n\n\u8bb0 $dis_x$ \u4e3a $k\\to x$ \u7684\u8ddd\u79bb\n\n\u5f53\u7528\u70b9 $u$ \u66f4\u65b0\u6700\u77ed\u8def\u662f\n\n\u679a\u4e3e $u$ \u4e00\u6761\u8fb9\u80fd\u5230\u8fbe\u7684\u70b9 $v$\uff0c\u518d\u679a\u4e3e $v$ \u4e00\u6761\u8fb9\u80fd\u5230\u8fbe\u7684\u70b9 $w$\uff0c\u6ee1\u8db3 $u,w$ \u95f4\u6ca1\u6709\u8fb9,\u7528 $u$ \u8f6c\u79fb $w$ \u5373\u53ef\n\n\u8fd9\u4e2a\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a $O(\\sum_{v}d_v^2)=O(m^2)$\n\n\u6211\u4eec\u8003\u8651\u6211\u4eec\u7b2c\u4e8c\u6b21\u679a\u4e3e\u7684\u8fb9 $(v,w)$ \u51b3\u5b9a\u4e86\u6211\u4eec\u8981\u66f4\u65b0 $w$\n\n\u4e8b\u5b9e\u4e0a\u8be5\u6761\u8fb9\u4f5c\u4e3a\u7b2c\u4e8c\u6761\u679a\u4e3e\u7684\u8fb9\u6709\u6548\u66f4\u65b0\u53ea\u6709\u8fd9\u4e00\u6b21\uff0c\u5b9e\u73b0\u65f6\u6211\u4eec\u53ef\u4ee5\u5728\u8fb9\u96c6\u4e2d\u5220\u53bb\u5b83\n\n\u539f\u56e0\u662f\u8003\u8651\u4e4b\u540e\u7684\u70b9 $x$\uff0c\u4e00\u5b9a\u6709 $dis_x\\geq dis_u$\uff0c\u6240\u4ee5\u4e4b\u540e\u8fb9 $(v,w)$ \u7684\u66f4\u65b0\u90fd\u662f\u65e0\u6548\u7684\n\n\u8003\u8651\u53ea\u67093\u5143\u73af\u88ab\u904d\u5386\u65f6\u4e0d\u4f1a\u5220\u53bb\u8fb9\uff0c\u6bcf\u4e2a\u4e09\u5143\u73af\u53ea\u4f1a\u88ab\u904d\u5386 $O(1)$ \u904d\uff0c\u4e09\u5143\u73af\u7684\u4e2a\u6570\u4e3a $O(m\\sqrt m)$\n\n\u6545\u590d\u6742\u5ea6\u4e3a $O(m\\sqrt m)$\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/txuyrofq)",
        "postTime": 1614505369,
        "uid": 98527,
        "name": "juju527",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3547 \u3010[POI2013]CEN-Price List\u3011"
    }
]