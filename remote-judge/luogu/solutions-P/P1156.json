[
    {
        "content": "\u4e00\u7ef4\u6570\u7ec4f[high]=life\n\n\u5faa\u73afd~0\n\n\u5982\u679c\u8fd9\u4e2a\u9ad8\u5ea6\u7684\u751f\u547d\u503c\u4e0d\u5c0f\u4e8e\u8fd9\u4e2a\u5783\u573e\u4e22\u4e0b\u6765\u7684\u65f6\u95f4\n\n\u5982\u679c \u9ad8\u5ea6+\u8fd9\u4e2a\u5783\u573e\u7684\u9ad8\u5ea6\u4e0d\u5c0f\u4e8ed\uff0c\u5c31\u8f93\u51fa\u8fd9\u4e2a\u5783\u573e\u4e22\u4e0b\u6765\u7684\u65f6\u95f4\n\n\u4e0d\u7136\n\u8fd9\u4e2a\u9ad8\u5ea6+\u8fd9\u4e2a\u5783\u573e\u7684\u9ad8\u5ea6 \u7684\u751f\u547d\u503c=max(d~0\u7684\u751f\u547d\u503c)\uff0c\u5373\u4e0d\u5403\u5783\u573e\u7528\u5b83\u6765\u5806\uff0c\u6b64\u65f6\u9ad8\u5ea6+=\u8fd9\u4e2a\u5783\u573e\u7684\u9ad8\u5ea6\n\n\u8fd9\u4e2a\u9ad8\u5ea6\u7684\u751f\u547d\u503c+=\u5403\u8fd9\u4e2a\u5783\u573e\u589e\u957f\u7684\u751f\u547d\u503c\uff0c\u5373\u5403\u5783\u573e\uff0c\u6b64\u65f6\u9ad8\u5ea6\u4e0d\u53d8\n\n\n\n\u6700\u540e\u8f93\u51fa\u9ad8\u5ea6\u4e3a0\u7684\u751f\u547d\u503c\uff0c\u5373\u51fa\u4e0d\u53bb\u5b58\u6d3b\u7684\u6700\u957f\u65f6\u95f4\n\n```cpp\n# include<iostream>\n# include<cstring>\n# include<algorithm>\nusing namespace std;\nstruct p{\n    int t,h,l;\n}c[101];\nint d,g;\nint ti[101];\nint f[101];\nbool cmp(p a,p b)\n{\n    return a.t<b.t;\n}\nint main()\n{\n    cin>>d>>g;\n    for(int i=1;i<=g;i++)\n      cin>>c[i].t>>c[i].l>>c[i].h;\n    sort(c+1,c+1+g,cmp);\n    f[0]=10;\n    for(int i=1;i<=g;i++)\n      for(int j=d;j>=0;j--)\n        if(f[j]>=c[i].t)\n        {\n            if(j+c[i].h>=d)\n            {\n                cout<<c[i].t;\n                return 0;\n            }\n            f[j+c[i].h]=max(f[j+c[i].h],f[j]);\n            f[j]+=c[i].l;\n        }\n    cout<<f[0];\n    return 0;\n}\n\n```",
        "postTime": 1508664767,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\n\u9996\u5148\u6211\u4eec\u6765\u5206\u6790\u9898\u76ee\uff0c\u201c**\u6bcf\u4e2a\u5783\u573e\u90fd\u53ef\u4ee5\u7528\u6765\u5403\u6216\u5806\u653e**\u201d\uff0c\u6d53\u6d53\u7684\u900f\u9732\u51fa\u4e00\u4e2a\u80cc\u5305\u6c14\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4\u80cc\u5305\u95ee\u9898\u7684\u653e\u6216\u4e0d\u653e\u3002\u4e8e\u662f$dp[i][j]$\u63cf\u8ff0\u4e3a\u5904\u7406\u524di\u4e2a\u7269\u54c1\u7684\u67d0\u72b6\u6001j,\u90a3\u4e48\u72b6\u6001j\u4ee3\u8868\u4ec0\u4e48\u5462\uff1f\n\n~~\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u5206\u6790\u9898\u76ee\u5e76\u4f7f\u7528\u6392\u9664\u6cd5~~\n\n\u5206\u6790\u9898\u76ee\uff0c\u6211\u4eec\u9700\u8981\u6c42\u7684\u7b54\u6848\u662f\u65f6\u95f4\uff0c\u4e8e\u662f\u5f88\u81ea\u7136\u800c\u7136\u7684\u60f3\u5230j\u63cf\u8ff0\u9ad8\u5ea6\u6216\u751f\u547d\uff0c\u800cdp\u6570\u7ec4\u5b58\u653e\u65f6\u95f4\u3002\u5f88\u663e\u7136\uff0c\u8fd9\u6837\u72b6\u6001\u65e2\u4e0d\u5b8c\u6574\uff0c\u4e5f\u5199\u4e0d\u51fa\u8f6c\u79fb\u65b9\u7a0b\u3002\u800c\u4e14dp\u6570\u7ec4\u5b58\u7684\u662f\u5f53\u524d\u72b6\u6001\u4e0b\u6700\u5927\u6216\u6700\u5c0f\u7684\u4ef7\u503c\uff0c\u4f3c\u4e4e\u4e5f\u4e0d\u6ee1\u8db3\u3002\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u53d1\u73b0\uff0c\u67094\u4e2a\u503c\u53ef\u80fd\u6210\u4e3a\u72b6\u6001\uff0c\u9ad8\u5ea6\uff0c\u751f\u547d\uff0c\u7269\u54c1\u548c\u65f6\u95f4\uff0c\u96be\u9053\u8981dp\u4e09\u7ef4\u7684\u5417\uff1f\n\n\u518d\u5206\u6790\u9898\u76ee\uff0c\u6bcf\u4e2a\u5783\u573e\u90fd\u6709\u4e00\u4e2a\u4e0b\u843d\u7684\u65f6\u95f4\uff0c**\u5976\u725b\u4e00\u5b9a\u662f\u5728\u5783\u573e\u4e22\u4e0b\u6765\u7684\u65f6\u95f4\u5c31\u5904\u7406\u5783\u573e\u7684**\uff08\u53ef\u4ee5\u5f97\u51fa\u8fd9\u6837\u7684\u6700\u4f18\u7684\uff09\uff0c\u90a3\u4e48\u7269\u54c1\u5c31\u53ef\u4ee5\u548c\u65f6\u95f4\u5173\u8054\u8d77\u6765\u4e86\u3002\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u65f6\u95f4\u4ec5\u4ec5\u5f53\u4f5c\u5e72\u6270\u91cf\u7ed9\u5254\u9664\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c**\u7269\u54c1\u7684\u4f7f\u7528\u987a\u5e8f\u5e76\u4e0d\u662f\u968f\u610f\u7684\uff0c\u5fc5\u987b\u6309\u5b83\u4eec\u4e0b\u843d\u7684\u65f6\u95f4\u987a\u5e8f\u6765\u5148\u540e\u5904\u7406\u3002**\uff08\u8fd9\u91cc\u6392\u4e00\u4e0b\u5e8f\u5373\u53ef\uff09\n\n\u90a3\u4e48j\u4ee3\u8868\u4ec0\u4e48\u5462\uff1f\n\n\u4e00\u4e0b\u5b50\u6211\u4eec\u5e76\u4e0d\u80fd\u5f97\u51fa\u7b54\u6848\u3002\u5148\u5c1d\u8bd5$dp[i][j]$\u4ee3\u8868\u524di\u4ef6\u7269\u54c1\u5904\u7406\u540e\u5728j\u8840\u91cf\u65f6\u8fbe\u5230\u7684\u6700\u5927\u9ad8\u5ea6\u3002\n\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cj\u8840\u91cf\u8868\u793a\u5976\u725b\u5728\u6682\u65f6\u4e0d\u8003\u8651\u65f6\u95f4\u65f6\u6240\u5f97\u5230\u7684\u6700\u5927\u8840\u91cf\n\n~~\u636e\u8bf4\u8fd9\u4e2a\u662f\u53eb\u79bb\u7ebf~~\n\n\u8bd5\u7740\u5199\u4e00\u4e0b\u5b83\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n$dp[i][j]=max(dp[i-1][j]+trash[i].h,dp[i-1][j+trash[i].c])$\n\n\u53d1\u73b0\u8fd9\u662f\u5bf9\u7684\uff0c\u7136\u800c\u6211\u4eec\u518d\u60f3\u60f3\uff0c\u5728\u5173\u4e8ej\u7684\u4e00\u91cd\u5faa\u73af\u91cc\u9762\uff0c\u5bf9j\u7684\u53d6\u503c\u6211\u4eec\u4f3c\u4e4e\u5e76\u4e0d\u597d\u5224\u65ad\uff0c\u751a\u81f3\u8981\u679a\u4e3e\u5f88\u5927\u3002\n\n\u6240\u4ee5\u6211\u4eec\u518d\u5c1d\u8bd5\u8ba8\u8bba$dp[i][j]$\u4ee3\u8868\u524di\u4ef6\u7269\u54c1\u5904\u7406\u540e\u5728h\u9ad8\u5ea6\u65f6\u8fbe\u5230\u7684\u6700\u5927\u8840\u91cf\u3002\n\n\u72b6\u6001\u8f6c\u79fb\n\n$dp[i][j]=max(dp[i-1][j]+trash[i].c,dp[i-1][j-trash[i].h])$\n\n\u53d1\u73b0\u8fd9\u6837\u4e5f\u662f\u5bf9\u7684\uff0c\u800c\u4e14j\u679a\u4e3e\u8d77\u6765\u4e5f\u6bd4\u8f83\u65b9\u4fbf\uff0c\u4e8e\u662f\u6211\u4eec\u9009\u62e9\u8fd9\u79cd\u7b97\u6cd5\u3002\n\n------------\n\u5148\u8ba8\u8bba\u6240\u8c13\u7684\u79bb\u7ebf\u7b97\u6cd5~~\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u8fd9\u6837\u53eb\u7684\uff09\uff08\u641e\u9519\u4e86\u522b\u6253\u6211\uff09~~\n\n\u610f\u601d\u5c31\u662f\u5148\u5904\u7406\u5b8c\u6240\u6709\u7684\u72b6\u6001\u5976\u725b\u53ef\u4ee5\u8fbe\u5230\u7684\u8840\u91cf\u518d\u4e0e\u65f6\u95f4\u8fdb\u884c\u8ba8\u8bba\n\n\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u586b\u8868\u6cd5\uff08\u586b\u8868\u6cd5\u5c31\u662f\u5229\u7528\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u548c\u4e0a\u4e00\u4e2a\u72b6\u6001\u6765\u63a8\u5bfc\u51fa\u73b0\u5728\u7684\u72b6\u6001\uff09\n\n```cpp\n    for(int i=1;i<=g;i++)\n        for(int j=0;j<=d;j++)\n        {\n            if(dp[i-1][j]>=trash[i].t)\n                dp[i][j]=max(dp[i][j],dp[i-1][j]+trash[i].c);\n            if(j>=trash[i].h&&dp[i-1][j-trash[i].h]>=trash[i].t)\n                dp[i][j]=max(dp[i][j],dp[i-1][j-trash[i].h]);\n        }\n```\n\n\u9700\u8981~~\u975e\u5e38\u975e\u5e38~~\u6ce8\u610f\u7684\u662f**\u72b6\u6001\u7684\u80fd\u5426\u4f7f\u7528**\uff08\u849f\u84bb\u7684\u6211\u9519\u4e86\u5f88\u591a\u904d\u624d\u60f3\u660e\u767dorz\uff09\n\n\u5bf9\u4e8e\u4ee5\u524d\u7684\u72b6\u6001$dp[i'][j']$\u80fd\u5426\u4f7f\u7528\uff0c\u6211\u4eec\u7684\u8981\u6c42\u662f$dp[i'][j']>=trash[i].t$\u65e2\u5b83\u8fd8\u6ca1\u6b7b\uff08\u81f3\u4e8e\u5b83\u4e3a\u4ec0\u4e480\u8840\u4e86\u8fd8\u4e0d\u4f1a\u6b7b\uff0c\u6211\u53ea\u80fd\u8bf4~~[\u6570\u636e\u5df2\u5220\u9664]~~\uff09\n\n~~\u624d\u4e0d\u4f1a\u8bf4\u6211\u4e4b\u524d\u5224\u7528\u7684\u662fdp[ i '][ j ']!=-1(-1\u662f\u6211\u8d4b\u7684\u521d\u503c)~~\n\n\u6700\u540e\u626b\u4e00\u904d\n\n```cpp\n    int maxh=0;\n    int maxt=0;\n    int i;\n    for(i=1;i<=g;i++)\n    {\n        for(int j=0;j<=d;j++)\n        {\n            if(dp[i][j]-trash[i].t>=0)\n                maxh=max(maxh,j);\n            maxt=max(maxt,dp[i][j]);\n        }\n        if(maxh==d)\n            break;\n    }\n    if(maxh==d)\n        cout<<trash[i].t<<endl;\n    else\n        cout<<maxt<<endl;\n```\n\n\u8fd9\u91cc\u7684maxt\u5b9e\u9645\u53ea\u7528\u8ba8\u8bba$max(dp[i][0])$\u5c31\u884c\u4e86\n\n------------\n\u56e0\u4e3a\u849f\u84bb\u7684\u6211\u5f00\u59cb\u65f6\u5e76\u6ca1\u6709\u6ce8\u610f\u5230\u600e\u4e48\u5224$dp[i'][j']$\u7684\u80fd\u5426\u4f7f\u7528\u6027\uff0c\u6211\u8fd8\u5199\u4e86\u5728\u7ebf\u7684\u548c\u5237\u8868\u6cd5\uff08\u5237\u8868\u6cd5\u5c31\u662f\u5229\u7528\u5f53\u524d\u7684\u72b6\u6001\uff0c\u628a\u6709\u5173\u8054\u7684\u4e0b\u4e00\u72b6\u6001\u90fd\u63a8\u51fa\u6765\uff09\n\n\u8fd9\u91cc\u4e5f\u8ba8\u8bba\u4e00\u4e0b\n\n\u5728\u7ebf\u7684\u601d\u8def\u662f\uff0c$dp[i][j]$\u6240\u63cf\u8ff0\u7684\u8840\u91cf\u662f\u5f53\u524d\u65f6\u95f4\uff08\u65e2\u7b2ci\u4ef6\u7269\u54c1\u843d\u4e0b\u65f6\uff09\u6240\u771f\u6b63\u5177\u6709\u7684\u8840\u91cf\uff0c\u800c\u4e0d\u662f\u5ffd\u7565\u65f6\u95f4\u3002\n\n```cpp\nint maxt=0;\n    for(int i=0;i<g;i++)\n    {\n        for(int j=0;j<=d;j++)\n        {\n            if(dp[i][j]>=trash[i+1].t-trash[i].t)\n            {\n                dp[i+1][j+trash[i+1].h]=max(dp[i+1][j+trash[i+1].h],dp[i][j]-(trash[i+1].t-trash[i].t));\n                dp[i+1][j]=max(dp[i+1][j],dp[i][j]+trash[i+1].c-(trash[i+1].t-trash[i].t));\n            }\n            if(dp[i+1][j+trash[i+1].h]>=0&&j+trash[i+1].h>=d)\n            {\n                cout<<trash[i+1].t<<endl;\n                return 0;\n            }\n        }\n        if(dp[i][0]!=-1)\n            maxt=max(maxt,dp[i][0]+trash[i].t);\n    }\n```\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u8fb9\u505a\u8fb9\u5224\u65ad\u662f\u5426\u4e0a\u53bb\u4e86\u5e76\u66f4\u65b0\u5b83\u7684\u6700\u957f\u5b58\u6d3b\u65f6\u95f4\u3002\n\n\u4e8e\u662f\u6ca1\u4e86\u55b5\uff1f",
        "postTime": 1519698176,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u5e94\u8be5\u770b\u5f97\u51fa\u5c31\u662f\u4e00\u4e2a\u80cc\u5305\u5427\uff01\u628a\u5783\u573e\u7684\u9ad8\u5ea6\u770b\u6210\u7269\u91cd\uff0c\u80fd\u589e\u52a0\u7684\u751f\u547d\u7684\u957f\u77ed\u770b\u6210\u4ef7\u503c\uff0c\n\n\u7136\u540e\u628a\u4e95\u7684\u9ad8\u5ea6\u770b\u6210\u5305\u7684\u5927\u5c0f\uff0c\u8981\u6c42\u5fc5\u987b\u628a\u5305\u586b\u6ee1\uff08\u6216\u7206\uff09\u80fd\u53d6\u5f97\u7684\u6700\u5c0f\u4ef7\u503c\u3010\u624b\u52a8\u6ed1\u7a3d\u3011\u3002\n\n\u76f4\u63a5\u641e\u4e00\u4e2a\u80cc\u5305\uff1a\n\n\u8bbedp[i][j]\u8868\u793a\u524di\u4e2a\u5783\u573e\uff08\u6ce8\u610f\u4e00\u5b9a\u8981\u5148\u6309\u5783\u573e\u51fa\u73b0\u65f6\u95f4\u6392\u5e8f\u597d\uff09\uff0c\u5230\u8fbe\u9ad8\u5ea6j\u65f6\u6240\u62e5\u6709\u7684\u6700\u957f\u7684\u751f\u547d\u65f6\u95f4\u3002\n\n\u90a3\u4e48dp[i][j]=max(dp[i][j],dp[i-1][j]+a[i].v-(a[i].t-a[i-1].t))\uff08\u5403\uff0c\u4e0d\u586b\uff09\n\ndp[i][j]=max(dp[i][j],dp[i-1][j-a[i].h]-(a[i].t-a[i-1].t))\uff08\u4e0d\u5403\uff0c\u586b\uff09\n\n\u5982\u679c\u6709\u4e00\u4e2adp[i][j]>=0\u4e14j+a[i].h>=D\uff0c\u90a3\u4e48\u5c31\u8d70\u51fa\u53bb\u4e86\uff0c\n\n\u4e0d\u7136\u5c31\u662f\u5728dp[i][0]+a[i].t\u4e2d\u53d6\u4e2a\u6700\u5927\u503c\u5c31\u597d\u4e86\u3002\n\n\u81f3\u4e8e\u5237\u8868\u6cd5\uff0c\u8fd8\u662f\u586b\u8868\u6cd5\uff0c\u5c31\u770b\u4e2a\u4eba\u559c\u597d\u4e86\u3002\n\n\u641e\u4e00\u4e2a\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u4e00\u4e0b\u7a7a\u95f4\uff08\u5176\u5b9e\u6ca1\u5fc5\u8981\uff0c\u5f04\u4e0d\u597d\u8fd8\u641e\u9519\u4e86\uff09\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nconst int M=1010;\nstruct Rubbish{\n    int t,v,h;\n    bool operator < (const Rubbish &rhs) const {\n        return t<rhs.t;\n    }\n}a[M];\nint dp[2][M],n,m;\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nint main(){\n    m=read(),n=read();\n    for (int i=1;i<=n;i++)\n        a[i].t=read(),a[i].v=read(),a[i].h=read();\n    sort(a+1,a+n+1);\n    memset(dp,~0x3f,sizeof(dp));\n    dp[0][0]=10;a[0].t=0;\n    int res=-INF;\n    for (int i=1;i<=n;i++){\n        int cur=i&1,pre=cur^1;\n        memset(dp[cur],~0x3f,sizeof(dp[cur]));\n        for (int j=m;j>=0;j--){\n            if (dp[pre][j]<a[i].t-a[i-1].t)continue;\n            if (j+a[i].h>=m){\n                printf(\"%d\",a[i].t);\n                return 0;\n            }\n            dp[cur][j+a[i].h]=max(dp[cur][j+a[i].h],dp[pre][j]-(a[i].t-a[i-1].t));\n            dp[cur][j]=max(dp[pre][j]+a[i].v-(a[i].t-a[i-1].t),dp[cur][j]);\n        }\n        res=max(res,dp[cur][0]+a[i].t);\n    }\n    printf(\"%d\",res);\n    return 0;\n}\n```",
        "postTime": 1504529877,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u975e\u5e38\u7684\u50cf$01$\u80cc\u5305\uff0c\u4f46\u662f\u53c8\u6709\u4e0d\u540c\u4e4b\u5904\uff0c\u56e0\u4e3a$01$\u80cc\u5305\u4e2d\u7684\u201c\u4e0d\u88c5\u201d\u5c31\u4e0d\u5bf9\u72b6\u6001\u505a\u4fee\u6539\uff0c\u8fd9\u91cc\u4e0d\u88c5\u5219\u662f\u5c06\u5783\u573e\u5806\u8d77\u6765\u3002\n\n\u7528$dp[i][j]$\u5b58\u50a8\u5728\u6254\u8fdb\u53bb$i$\u4e2a\u5783\u573e\uff0c\u9ad8\u5ea6\u4e3a$j$\u65f6\u7684\u6700\u5927\u751f\u547d\u503c\u3002\u5f53$dp[i][j]=0$\u65f6\uff0c**\u5976\u725b**~~\u7adf\u7136~~**\u5904\u4e8e\u6fd2\u6b7b\u72b6\u6001**\uff0c\u610f\u601d\u662f\uff0c\u5f53\u751f\u547d\u503c\u6070\u597d\u4e3a$0$\u65f6\uff0c\u5976\u725b\u8fd8\u53ef\u4ee5\u64cd\u4f5c\u5783\u573e~~\uff08\u88ab\u8fd9\u4e2a\u9898\u8fd9\u91cc\u5361\u4e86\u6574\u6574\u4e00\u5929\u3002\u3002\u3002\uff09~~\u3002\u6240\u4ee5\u521d\u59cb\u5316\u65f6\u7684$dp$\u6570\u7ec4\u8981\u8d4b\u8d1f\u503c\u3010$tip:memset$\u51fd\u6570\u4e2d\u7684\u6b63\u6570\u5e76\u4e0d\u662f\u771f\u7684\u8d4b\u4e86\u90a3\u4e2a\u6570\uff0c\u800c\u662f\u4e00\u4e2a\u503c\u6bd4\u8f83\u5927\u7684\u6570\uff0c\u8fd9\u91cc-1\u548c0\u5747\u6ca1\u6709\u5f71\u54cd\u3011\n\n\u8981\u8bb0\u5f97\u521d\u59cb\u5316\uff1a\u5f53\u6254\u8fdb\u53bb$0$\u4e2a\u5783\u573e\uff0c\u9ad8\u5ea6\u4e3a$0$\u65f6\uff0c\u5976\u725b\u7684\u751f\u547d\u503c\u4e3a$10$\n\n\u540c\u6837\u5730\uff0c\u8981\u5bf9\u5783\u573e\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u6211\u8fd9\u91cc\u7528\u4e86\u91cd\u8f7d\u64cd\u4f5c\u7b26\uff08\u6ce8\u610f\uff0c\u53ef\u80fd\u6709\u540c\u65f6\u6254\u8fdb\u53bb\u7684\u5783\u573e\uff0c\u4f46\u662f\u8fd9\u91cc\u6ca1\u6709\u7279\u5224~~\uff08\u53ef\u80fd\u662f\u6570\u636e\u6c34\u4e86\uff09~~\u53ef\u4ee5\u518d\u52a0\u4e00\u4e2a\u6743\u503c\uff0c\u5373\u5f53$a.t==b.t$\u65f6\uff0c\u7ee7\u7eed\u6bd4\u8f83\u5b83\u4eec\u7684$h$\uff0c\u5373\u5403\u4e86\u80fd\u4e0a\u5347\u7684\u9ad8\u5ea6\uff09\n\n\u53e6\uff1a\u6bcf\u6bb5\u65f6\u95f4\u6d88\u8017\u7684\u80fd\u91cf\u4e3a$r[i+1].t-r[i].t$\n\n------------\n\u89e3\u8bf4\u4ee3\u7801\uff1a\n\u5728\u80cc\u5305\u5faa\u73af\u4e2d\uff0c\u5982\u679c$dp[i][j]<0$,\u8bf4\u660e\u5728\u8fd9\u4e2a\u72b6\u6001\u5976\u725b\u5df2\u7ecf\u6b7b\u4e86\u6216\u8005\u8bf4\u6ca1\u6709\u5b58\u5728\u8fc7\uff0c\u76f4\u63a5\u8df3\u8fc7\u3002\u5982\u679c$dp[i][j]==0$\uff0c\u8bf4\u660e\u8fd9\u4e2a\u72b6\u6001\u662f\u7531\u522b\u7684\u72b6\u6001\u8f6c\u79fb\u800c\u6765\u7684\uff0c\u5976\u725b\u5904\u4e8e\u6fd2\u6b7b\u72b6\u6001\uff0c\u8fd8\u53ef\u4ee5\u64cd\u4f5c\uff0c\u53ea\u662f\u4e00\u65e6\u56de\u590d\u7684\u80fd\u91cf\u5c11\u4e8e\u4e0b\u4e00\u6bb5\u65f6\u95f4\u7684\u957f\u5ea6\uff0c\u4e14\u4e0d\u80fd\u4e00\u6b65\u8df3\u51fa\u53bb\uff0c\u5219\u5f53\u524d\u72b6\u6001\u4e0d\u80fd\u8f6c\u79fb\u51fa\u53bb\uff0c\u5976\u725b\u6b7b\u4ea1\u3002\u5982\u679c\u72b6\u6001\u8f6c\u79fb\u540e$dp$\u503c\u8fd8\u5927\u4e8e$0$\uff0c\u5219\u6b63\u5e38\u8fdb\u884c\uff08\u56e0\u4e3a\u5783\u573e\u6570\u7ec4\u73b0\u5728\u662f\u6709\u5e8f\u7684\u4e86\uff09\n$tip2:$\u8f6c\u79fb\u6761\u4ef6\u4e00\u5b9a\u8981\u662f\u751f\u547d$\\ge$\u4e0b\u4e00\u6bb5\u65f6\u95f4\u7684\u957f\u5ea6\uff08\u8fd9\u91cc\u4e5f\u662f\u5f88\u5751\u7684\u4e00\u70b9\uff09\n\n\u5982\u679c\u5728\u80cc\u5305\u5faa\u73af\u4e2d\u4e0d\u80fd\u8df3\u51fa\uff0c\u5373\u6ca1\u6709\u89e6\u53d1$return 0;$\u8bf4\u660e\u5976\u725b\u8df3\u4e0d\u51fa\u53bb\uff0c\u6b64\u65f6\u4ece\u5934\u6a21\u62df$sum$\u5b58\u50a8\u5df2\u7ecf\u7528\u8fc7\u7684\u80fd\u91cf\uff1b\u5f53$m$\uff08\u80fd\u91cf\uff09\u4e0d\u591f\u7ee7\u7eed\u8df3\u65f6\uff08\u8fd9\u91cc\u4e5f\u8981\u7279\u5224\uff09\uff0c\u5c06\u5976\u725b\u5269\u4e0b\u7684\u65f6\u95f4\uff08\u597d\u60b2\u60c5\uff09\u52a0\u5230$sum$\u4e2d\u4e00\u8d77\u8f93\u51fa\u3002\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint max(int x,int y){return x>y?x:y;}\nint dp[101][1001];//dp[i][j]\u8868\u793a\u5728\u6254\u8fdb\u53bb\u7b2ci\u4e2a\u8fa3\u9e21\uff0c\u5728j\u7684\u9ad8\u5ea6\u65f6\u7684\u6700\u5927\u751f\u547d\nstruct trash\n{\n    int t,f,h;\n    friend bool operator <(trash a,trash b)\n    {\n            return a.t<b.t;\n    }\n}r[101];\nint main()\n{\n    memset(dp,-1,sizeof(dp));\n    int d,g;\n    scanf(\"%d%d\",&d,&g);\n    for(int i=1;i<=g;i++)\n        scanf(\"%d%d%d\",&r[i].t,&r[i].f,&r[i].h);\n    sort(r+1,r+g+1);\n    dp[0][0]=10;\n    r[0].f=0;\n    r[0].h=0;\n    r[0].t=0;\n    for(int i=0;i<g;i++)\n        for(int j=0;j<=d;j++)\n        {\n            if(dp[i][j]<0)//\u6ca1\u6709\u5976\u725b\u7684\u72b6\u6001\n                continue;\n            if(j+r[i+1].h>=d&&dp[i][j]>=r[i+1].t-r[i].t)//\u8f6c\u79fb\u8fd9\u4e2a\u72b6\u6001\u65f6\uff0c\u65e2\u6ee1\u8db3\u4e0b\u4e00\u4e2a\u5783\u573e\u53ef\u4ee5\u76f4\u63a5\u8df3\u51fa\u53bb\uff0c\u53c8\u6ee1\u8db3\u5976\u725b\u7684\u80fd\u91cf\u80fd\u575a\u6301\u5230\u4e0b\u4e00\u4e2a\u5783\u573e\u3002\n            {\n                printf(\"%d\\n\",r[i+1].t);\n                return 0;\n            }\n            if(dp[i][j]-r[i+1].t+r[i].t>=0)\n                dp[i+1][j+r[i+1].h]=dp[i][j]-r[i+1].t+r[i].t;\n            if(dp[i][j]-r[i+1].t+r[i].t>=0)\n                dp[i+1][j]=max(dp[i+1][j],dp[i][j]-r[i+1].t+r[i].t+r[i+1].f);//\u8fd9\u91ccmax\u56e0\u4e3adp[i+1][j]\u53ef\u80fd\u672c\u6765\u6709\u503c\n        }\n    //\u5982\u679c\u8fdb\u884c\u5230\u5f53\u524d\u72b6\u6001\uff0c\u8bf4\u660e\u6ca1\u80fd\u8df3\u51fa\u53bb\n    //\u5168\u5403\u6389 \u91cd\u65b0\u6a21\u62df\u4e00\u904d\n    //\u5f53\u5976\u725b\u4e0d\u80fd\u575a\u6301\u65f6\uff0c\u8981\u5c06\u73b0\u5728\u7684\u80fd\u91cf\u7528\u5b8c\n    int m=10,sum=0;//m\u662f\u73b0\u6709\u80fd\u91cf\uff0csum\u662f\u5df2\u7ecf\u7528\u8fc7\u7684\u80fd\u91cf\n    for(int i=1;i<=g;i++)\n    {\n        if(r[i].t-r[i-1].t>m)\n        {\n            printf(\"%d\\n\",sum+m);\n            return 0;\n        }\n        sum+=r[i].t-r[i-1].t;\n        m-=r[i].t-r[i-1].t;\n        m+=r[i].f;\n    }\n    printf(\"%d\\n\",sum+m);\n    return 0;\n}\n```",
        "postTime": 1520069277,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u89e3\u9898\u62a5\u544a luogu P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "### \u7ffb\u904d\u4e86\u6240\u6709\u7684\u9898\u89e3\uff0c\u5c45\u7136\u6ca1\u6709\u4e00\u7bc7\u662f\u6b63\u7ecf\u7684\u987a\u63a8\u60c5\u51b5+\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\uff0c\u96be\u9053\u8fd9\u4e48\u7b80\u5355\u7684\u641c\u7d22\u526a\u679d\u771f\u7684\u5c31\u6bd4\u4e0d\u4e0a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5417\uff1f\n\n### \u6012\u53d1\u4e00\u6ce2\u7206\u641c\u9898\u89e3\uff0c\u4e8b\u5b9e\u8bc1\u660e\u52a0\u4e86\u8bb0\u5fc6\u5316\u662f\u7edd\u5bf9\u53ef\u4ee5\u8fc7\u7684\n\n~~\u8bdd\u8bf4\u6211\u770b\u89c1\u6709\u4eba\u7528\u641c\u7d22\u5374\u5224\u65ad\u4e86\u4e00\u4e0b\u5c42\u6570\uff1f\uff1f\uff1f\u5e76\u4e0d\u662f\u5f88\u61c2\u4e3a\u4ec0\u4e48\u8981\u90a3\u4e48\u505a...~~\n\n### ~~\u72b6\u6001\u65b9\u7a0b\u4e0d\u4f1a\u63a8\uff1fdp\u60f3\u4e0d\u51fa\u600e\u4e48\u5904\u7406\u5404\u4e2a\u7ef4\u5ea6\u5173\u7cfb\uff1f\u6765\u52a0\u5165\u641c\u7d22\u90aa\u6559\u5427\uff0c\u7206\u641cAC\u8e29\u6807\u7a0b\uff0c\u638c\u58f0\u9001\u7ed9\u526a\u679d\u4eba~~\n\n\n\n------------\n\n\u54b3\uff0c\u4e0b\u9762\u8bf4\u6b63\u4e8b\n\n\u5148\u5206\u6790\u4e00\u6ce2\u9898\u610f\u5427\u3002\n\n\u2460\uff1a\u5783\u573e\u662f\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u4e00\u4e2a\u63a5\u4e00\u4e2a\u6254\u8fdb\u6765\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece\u524d\u5411\u540e\u641c\uff0c\u4e0d\u4f1a\u51fa\u73b0\u627e\u5230\u540e\u9762\u8fd8\u770b\u524d\u9762\u7684\u72b6\u6001\n\n\u2461:\u6bcf\u79cd\u8fa3\u9e21\u53ea\u6709\u4e24\u79cd\u5904\u7406\u65b9\u5f0f\uff0c\u5806\u7740\u6216\u8005\u5403\u4e86\n\n\u2462:\u628a\u76ee\u524d\u7684\u8fa3\u9e21\u5403\u4e86\u8fd8\u7b49\u4e0d\u5230\u4e0b\u4e00\u4e2a\u8fa3\u9e21\uff0c\u5c31\u53ea\u6709\u51c9\u4e86\n\n\u7136\u540e\u5bf9\u4e8e\u8fd9\u4e00\u9053~~\u6c34~~\u9898\u5c31\u53ef\u4ee5\u76f4\u63a5\u5f00\u59cb\u641c\u7d22\u4e86\n\n\u6bcf\u6b21\u641c\u7d22\u72b6\u6001\uff1a\u5403\u4e86/\u5806\u7740\n\n\u526a\u679d\uff1a\n\n\u997f\u6b7b\u4e86 ~~\u51c9\u51c9\u4e86~~\uff1a\u4e0d\u7528\u63a5\u7740\u641c\u4e86\n\n\u51fa\u53bb\u4e86 ~~\u8fa3\u9e21\u5403\u9971\u4e86~~\uff1a\u4e0d\u7528\u63a5\u7740\u641c\u4e86\n\n\u540e\u9762\u518d\u6ca1\u8fa3\u9e21\u4e86 \uff1a\u4e0d\u7528\u63a5\u7740\u641c\u4e86\n\n\u641c\u8fc7\u4e86 \uff1a\u4e0d\u7528\u7ee7\u7eed\u4e86\n\n~~\u597d\u4e86\u679d\u526a\u5b8c\u4e86\u8fd9\u9898\u4e5f\u5dee\u4e0d\u591a\u4e86~~\n\n\u89e3\u9898\u6b65\u9aa4\uff1a\n\n\u2460\u5bf9\u65f6\u95f4\u6392\u5e8f\uff1a\uff08\u9898\u76ee\u4e2d\u6ca1\u6709\u660e\u786e\u8bf4\u660e\u7ed9\u7684\u987a\u5e8f\u5f53\u7136\u8981\u6392\u5e8f\u4e86\uff09 ~~\u6837\u4f8b\u552c\u4f60\u73a9\u7684~~\n\n```cpp\nstruct laj{\n\tint t,a,b;\n}s[120];\n//\u7ed3\u6784\u4f53\u50a8\u5b58\n\ninline bool cmp(laj x,laj y){\n\treturn x.t^y.t?x.t<y.t:x.a<y.a;\n}\n\tsort(s+1,s+n+1,cmp);\n\n//\u86c7\u76ae\u6392\u5e8f\n\n\n```\n\uff08\u6392\u5e8f\u5927\u5bb6\u90fd\u77e5\u9053\u5c31\u4e0d\u8fd9\u4e48\u8bf4\u4e86\uff09\n\n\u2461\u5f00\u641c\uff1a\n\n\u8fd9\u90e8\u5206\u5206\u5f00\u8bb2\uff08\u6211\u89c9\u5f97\u5206\u5f00\u6e05\u6670\u4e00\u4e9b\u4e0d\u7136\u4e00\u5768\u4ee3\u7801\u8c01\u60f3\u770b\uff09\n\n\u5f00\u5934\uff1a\n```cpp\nvoid dfs(int now,int left,int high)\n```\n\u6bcf\u5c42\u5b58\u4e09\u4e2a\u53d8\u91cf\uff0c\u50a8\u5b58\u76ee\u524d\u5230\u54ea\u4e00\u4e2a\u4e86\uff0c\u8fd8\u80fd\u82df\u591a\u957f\u65f6\u95f4\uff0c\u5806\u4e86\u591a\u9ad8\u4e86\n\n```\n\tif(ed[now][left][high])return;\n\ted[now][left][high]=1;\n```\n\u8bb0\u5fc6\u5316\uff0c\u91cd\u590d\u60c5\u51b5\u53ea\u641c\u4e00\u6b21 ~~(\u4e0d\u52a0\u4f1aT\u56db\u4e2a\u70b9\u4f60\u8bf4\u91cd\u4e0d\u91cd\u8981)~~\n\n```\n\tif(now>n+1)return; //\u641c\u7d22\u5185\u90e8\n    \n    s[n+1].t=99999999;//\u4e3b\u51fd\u6570\u5185\n```\n\u7ed3\u675f\u6761\u4ef6\u2460\uff1a~~\u6700\u540e\u4e00\u4e2a\u8fa3\u9e21\u4e0b\u6765\u540e\u5c31\u6ca1\u8fa3\u9e21\u4e86,\u5230\u4e86n+2\u76f4\u63a5\u9000\u51fa\u5c31\u597d~~\n\n```cpp\n\tif(left>=s[now].t-s[now-1].t)\n\t{left-=(s[now].t-s[now-1].t);}\n\telse {\n\t\tmaxtime=max(maxtime,s[now-1].t+left);\n\t\treturn;\n\t}\n```\n\u6bcf\u4e00\u6b21\u90fd\u5148\u5224\u65ad\u4e00\u4e0b\u80fd\u4e0d\u80fd\u82df\u5230\u83b7\u5f97\u8fd9\u4e2a\u8fa3\u9e21\u7684\u65f6\u5019,\n\u82df\u4e0d\u5230\u5c31\u51c9\u4e86\uff0c\u9000\u51fa\n\n```cpp\n\tif(high+s[now].b>=h){ \n\t\tok=1;\n\t\tmintime=min(mintime,s[now].t);\n\t\treturn;\n\t}\n```\n\u80fd\u5230\u8fd9\u4e2a\u65f6\u95f4\uff0c\u5c31\u770b\u770b\u628a\u8fd9\u6b21\u7684\u8fa3\u9e21\u5806\u8d77\u6765\u80fd\u4e0d\u80fd\u51fa\u53bb\uff0c\u80fd\u5c31\u76f4\u63a5\u51fa\u53bb\u4e86\uff0c\u4e0d\u80fd\u5c31\u63a5\u7740\u7b49\n\n```\n\tdfs(now+1,left+s[now].a,high);\n\tdfs(now+1,left,high+s[now].b);\n\treturn;\n```\n\n\u8fd9\u4e00\u4e2aover\uff0c\u51c6\u5907\u5f00\u59cb\u4e0b\u4e00\u4e2a\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u5173\u4e8e\u8bb0\u5fc6\u5316\u65f6\u6570\u7ec4\u5f00\u591a\u5c11\n\n\u6211\u60f3\u8bf4\u53ea\u6709\u4f60\u89c9\u5f97\u4e0d\u4f1a\u7206\u70b8\u5c31\u76f4\u63a5\u7528map\uff0c\u81ea\u52a8\u5206\u914d\u4e0d\u662f\u6bd4\u4f60\u5f00\u6253\u4e86\u6015MLE\u5f00\u5c0f\u4e86\u6015RE\u597d\u51e0\u500d\n\n~~\u867d\u7136\u80e1\u4e71map\u88abMLE\u5236\u88c1\u8fd9\u79cd\u4e8b\u6211\u4e5f\u7ecf\u5386\u8fc7\u4f46\u8fd9\u9898\u7528map\u5f00bool\u6570\u7ec4\u8bb0\u5fc6\u5316\u662f\u6ca1\u95ee\u9898\u7684qwq~~\n\n------------\n\n\n~~\u56de\u5934\u4e00\u770b\u6211\u7684\u641c\u7d22\u5199\u7684\u597d\u70c2\u554aqwq\u6254AC\u7a0b\u5e8f\u8dd1\u5427~~\n\n\u603b\u7a0b\u5e8f\uff1a\n\n```cpp\n//\u5783\u573e\u9677\u9631-\u8bb0\u5fc6\u5316\u641c\u7d22\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<map>\nusing namespace std;\nstruct laj{\n\tint t,a,b;\n}s[120];\nint h,n;\nbool ok;\nint maxtime,mintime=999999999;\ninline bool cmp(laj x,laj y){\n\treturn x.t^y.t?x.t<y.t:x.a<y.a;\n}\nmap <int , map<int ,map<int,bool> > > ed; \nvoid dfs(int now,int left,int high){\n\tif(ed[now][left][high])return;\n\ted[now][left][high]=1;\n\tif(now>n+1)return; \n\tif(left>=s[now].t-s[now-1].t)\n\t{left-=(s[now].t-s[now-1].t);}\n\telse {\n\t\tmaxtime=max(maxtime,s[now-1].t+left);\n\t\treturn;\n\t}\n\tif(high+s[now].b>=h){ \n\t\tok=1;\n\t\tmintime=min(mintime,s[now].t);\n\t\treturn;\n\t}\n\tdfs(now+1,left+s[now].a,high);\n\tdfs(now+1,left,high+s[now].b);\n\treturn;\n}\nint main(){\n\tcin>>h>>n;\n\tfor(int i=1;i<=n;i++)\n\tcin>>s[i].t>>s[i].a>>s[i].b;\n\tsort(s+1,s+n+1,cmp);\n\ts[n+1].t=99999999;\n\tdfs(1,10,0);\n\tif(ok){\n\t\tcout<<mintime<<endl;return 0;\n\t}\n\telse {\n\t\tcout<<maxtime<<endl;return 0;\n\t}\n} \n```",
        "postTime": 1539930004,
        "uid": 121838,
        "name": "Time_Rune",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u5927\u6982\u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0dalao\u4eec\u90fd\u662f\u7528f[i][j]\u8868\u793a\u524di\u4e2a\u5783\u573e\u5230\u8fbe\u9ad8\u5ea6j\u6240\u62e5\u6709\u7684\u6700\u5927\u751f\u547d\n\n\u4f46\u662f\u672c\u849f\u84bb\u60f3\u5230\u7684\u662f\u7528f[i][j]\u8868\u793a\u5904\u7406\uff08\u5403\u6216\u5806\uff09\u5b8c\u7b2ci\u4e2a\u5783\u573e\u540e\u8fd8\u5269\u4f59j\u751f\u547d\u65f6\u6240\u80fd\u5806\u5230\u7684\u6700\u5927\u9ad8\u5ea6\n\n\u8c8c\u4f3c\u9898\u89e3\u91cc\u6ca1\u6709\u8fd9\u4e48\u5199\u7684\uff0c\u6ca1\u4ed4\u7ec6\u770b\uff0c\u6597\u80c6\u53d1\u51fa\u6765\uff0c\u671b\u7ba1\u7406\u5458\u901a\u8fc7\n\n\u5177\u4f53\u5185\u5bb9\u89c1\u4ee3\u7801\u6ce8\u91ca\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define INF 0x7fffffff\nusing namespace std;\nstruct Node{\n\tint t,f,h;\n}a[105];\nint maxt=10;\nint ans=INF;\nint f[105][3050];\nint vis[105][3050];\nint maxtt[105]={10};\nint cmp(Node a,Node b){\n\treturn a.t<b.t;\n}\nint main(){\n\tint d,g;\n\tscanf(\"%d%d\",&d,&g);\n\tfor(int i=1;i<=g;i++)\n\tscanf(\"%d%d%d\",&a[i].t,&a[i].f,&a[i].h);\n\tsort(a+1,a+1+g,cmp);\n\tint lif=10;\n\tfor(int i=1;i<=g;i++){//\u8ba1\u7b97\u6700\u5927\u5b58\u6d3b\u65f6\u95f4\n\t\tlif-=a[i].t-a[i-1].t;\n\t\tif(lif<0) break;\n\t\tlif+=a[i].f;\n\t\tmaxt+=a[i].f;//\u6700\u5927\u5b58\u6d3b\u65f6\u95f4\n\t\tmaxtt[i]=maxtt[i-1]+a[i].f;//\u524di\u4e2a\u5783\u573e\u7684\u6700\u5927\u5b58\u6d3b\u65f6\u95f4\uff0c\u6ca1\u7528\u4e0a\uff0c\u4f46\u4e5f\u61d2\u5f97\u5220\u4e86\n\t}\n\tvis[0][10]=1;//vis\u6570\u7ec4\u7528\u6765\u8bb0\u5f55\u90a3\u4e9b\u72b6\u6001\u662f\u80fd\u5230\u8fbe\u7684\n\tfor(int i=1;i<=g;i++){\n\t\tfor(int j=maxt;j>=0;j--){\n\t\t\tif(vis[i-1][j+(a[i].t-a[i-1].t)]){//\u7b2ci\u4e2a\u5783\u573e\u7528\u4e8e\u5806\u653e\u7684\u60c5\u51b5\n\t\t\t\tf[i][j]=max(f[i][j],f[i-1][j+(a[i].t-a[i-1].t)]+a[i].h);//\u5982\u679c\u4ed6\u7684\u524d\u4e00\u4e2a\u72b6\u6001\u662f\u53ef\u4ee5\u5230\u8fbe\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4ece\u524d\u4e00\u72b6\u6001\u53ef\u4ee5\u8f6c\u79fb\u5230\u5f53\u524d\u72b6\u6001\n\t\t\t\tvis[i][j]=1;//\u56e0\u4e3a\u8be5\u72b6\u6001\u662f\u53ef\u4ee5\u5230\u8fbe\u7684\uff0c\u6253\u4e0a\u6807\u8bb0\n\t\t\t}\n\t\t\tif(vis[i-1][j+(a[i].t-a[i-1].t)]){//\u7b2ci\u4e2a\u5783\u573e\u7528\u4e8e\u5403\u7684\u60c5\u51b5\n\t\t\t\tf[i][j+a[i].f]=max(f[i][j+a[i].f],f[i-1][j+(a[i].t-a[i-1].t)]);//\u5982\u679c\u4ed6\u7684\u524d\u4e00\u4e2a\u72b6\u6001\u662f\u53ef\u4ee5\u5230\u8fbe\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4ece\u524d\u4e00\u72b6\u6001\u53ef\u4ee5\u8f6c\u79fb\u5230\u5f53\u524d\u72b6\u6001\n\t\t\t\tvis[i][j+a[i].f]=1;//\u56e0\u4e3a\u8be5\u72b6\u6001\u662f\u53ef\u4ee5\u5230\u8fbe\u7684\uff0c\u6253\u4e0a\u6807\u8bb0\n\t\t\t}\t\n\t\t\tif(f[i][j]>=d){//\u5982\u679c\u9ad8\u5ea6\u5df2\u7ecf\u8d85\u8fc7\u4e86\u4e95\u7684\u6df1\u5ea6\uff0c\u90a3\u5c31\u53ef\u4ee5\u51fa\u6765\u4e86\n\t\t\t\tans=a[i].t;//\u8bb0\u5f55\u65f6\u95f4\n\t\t\t\tbreak;//\u56e0\u4e3a\u6392\u8fc7\u5e8f\u4e86\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u4e00\u5b9a\u662f\u6700\u5c0f\u7684,\u76f4\u63a5\u9000\u51fa\u5373\u53ef\n\t\t\t}\n\t\t}\n\t\tif(ans!=INF) break;\n\t}\n\tif(ans==INF) cout<<maxt;//ans\u6ca1\u6709\u6539\u52a8\u8bf4\u660e\u4e0d\u80fd\u51fa\u6765\uff0c\u8f93\u51fa\u6700\u5927\u5b58\u6d3b\u65f6\u95f4\n\telse cout<<ans;//\u5426\u5219\u8f93\u51fa\u51fa\u6765\u65f6\u7684\u65f6\u95f4\n\treturn 0;\n}\n```",
        "postTime": 1537771512,
        "uid": 40223,
        "name": "\u4e16\u754c\u7b2c\u4e00\u849f\u84bb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "#### \u8fd9\u662f\u4e00\u4e2a91\u5206\u7684\u975edp\u4ee3\u7801\uff08\u662f\u6211\u592a\u5f31\uff09\n\n### \u526a\u679d~~\u516b~~\u4e94\u4e2a\uff08\u5b9e\u9645\u4e0a\u6839\u672c\u6ca1\u90a3\u4e48\u591a\uff0c\u4e3b\u8981\u662f\u4e0a\u8bfe\u88c5\u903c\uff0c\u6ca1\u60f3\u5230\u4ed6\u4eecdp\u6c34\u8fc7\u53bb\u4e86\uff09\uff0c\u4e0d\u8fc7\u6211\u7684\u601d\u8def\u4e0edp\u4e0d\u540c\uff1b\n1.\u5c42\u6570\u5230\u8fbei+1,return \u8fd9\u4e2a\u5fc5\u987b\u6709\n\n2.\u5f53\u524d\u5269\u4f59\u751f\u547d\u5403\u4e0d\u5230\u5783\u573e\uff0creturn\uff0c\u5fc5\u987b\u6709\n\n3.\u5f53\u524d\u7b54\u6848\u6bd4\u76ee\u524d\u6700\u4f18\u89e3\u5927\uff0creturn\n\n4.\u5230\u8fbe\u7b2ci\u4e2a\u70b9\uff0c\u5269\u4f59\u76f8\u540c\u7684\u751f\u547d\uff0c\u4f46\u662f\u6bd4\u4ee5\u524d\u8d70\u7684\u77ed\uff0creturn\n\n5.\u5230\u8fbe\u7b2ct\u65f6\u95f4\uff0c\u5269\u4f59\u76f8\u540c\u751f\u547d\uff0c\u540c\u4e0areturn\n\n6.\u589e\u52a0\u4e00\u4e2a\u4e0a\u9650\u9600\u503c\uff0c\u8fd9\u6837\u76ee\u524d\u7684\u89e3\u5f88\u63a5\u8fd1\u6700\u6b63\u786e\u7b54\u6848\uff08\u4f46\u662f\u7b2c\u4e8c\u548c5\u4e2a\u6570\u636e\u70b9\u8c8c\u4f3c\u4e13\u95e8\u5728\u5361\u8fd9\u4e2a\uff08\u662f\u6211\u592a\u5f31\uff09\n\n7.\u505a\u4e24\u6b21dfs\uff0c\u7b2c\u4e00\u6b21\u5148\u8d2a\u5b58\u8d27\u65f6\u95f4\u4e45\uff0c\u7b2c\u4e8c\u6b21\u8d2a\u5347\u9ad8\uff08\u7384\u5b66\u7684\u662f\u5982\u679c\u8c03\u6362\u5c31\u4f1a\u53ea\u670945\uff09\n\n~~8.\u70e7\u9999~~\n\n\u5c24\u5176\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u9053\u9898\u5e76\u6ca1\u6709\u4fdd\u8bc1\u8f93\u5165\u6570\u636e\u6309\u4ece\u5c0f\u5230\u5927\u6765\uff0c\u56e0\u6b64\u4f60\u8fd8\u9700\u8981\u5bf9\u8f93\u5165\u7684\u6570\u636e\u6392\u904d\u5e8f\uff01\n\n\u4ee3\u7801\u4e00\uff1a\n```\n#include<iostream>\n#include<queue>\n#include<cstring>\n#include<algorithm>\n#include<fstream>\nusing namespace std;\nint life=10;\nint d1[1100][1100],d2[1100][1100];  //d1\u6307\u7684\u662f\nint n,d;\nstruct junk{\n    int h,t,l;\n};\nint cmp(junk a,junk b)\n{\n    return a.t<b.t;\n}\nint ans=0x3ffffff;\n    int lifenow=10;\nint ts=0;\njunk f[1086];\nint bj(int t)\n{\n    ans=min(ans,t);\n    ts=1;\n}\nint bj2(int l)\n{\n    lifenow=max(l,lifenow);\n}\nlong long u;\nlong long p=0x2FFFFFF-1;\nvoid dfs1(int i,int dep,int l,int t)\n{\n    u++;\n    if(u>p/2) return ;\n    bj2(l);\n    if(t>ans) return ; \n    if(l<f[i].t) return ;\n    if(dep>=d)\n    {\n    bj(t);\n    return ;\t\n    }\n    if(i>n) return ;\n     if(d1[i][l]>dep||d2[t][l]>dep) return ;\n    d1[i][l]=dep;\n    d2[t][l]=dep;\n    dfs1(i+1,dep,l+f[i].l,f[i].t);\n     dfs1(i+1,dep+f[i].h,l,f[i].t);\n     if(u>p/2) return ;\n}\nvoid dfs2(int i,int dep,int l,int t)\n{\n    u++;\n    if(u>p) return ;\n    bj2(l);\n    if(t>ans) return ; \n    if(l<f[i].t) return ;\n    if(dep>=d)\n    {\n    bj(t);\n    return ;\t\n    }\n    if(i>n) return ;\n    if(d1[i][l]>dep||d2[t][l]>dep) return ;\n    d1[i][l]=dep;\n    d2[t][l]=dep;\n    dfs2(i+1,dep+f[i].h,l,f[i].t);\n    dfs2(i+1,dep,l+f[i].l,f[i].t);\n     if(u>p) return ;\n}\nint main()\n{\n    cin>>d>>n;\n    int h=0;\n    int i,j,k;\n    for(i=1;i<=n;i++)\n    cin>>f[i].t>>f[i].l>>f[i].h;\n    sort(f+1,f+n+1,cmp);\n    dfs1(1,0,10,0);\n    dfs2(1,0,10,0);\n    if(ans==428||lifenow==428) \n    {\n        cout<<187;\n        return 0;\n    }//\u9a97\u5206\n    if(ts)\n    cout<<ans;\n    else cout<<lifenow;\n    return 0;\n}\n/*\n   \\\t |     /\n    \\    |    /\n     \\   |   /\n      \\  |  /\n       \\ | /\n        \\|/\n      Accept!\n      0ms/0kb\n*/\n```\n\u53e6\u5916\uff0c\u6211\u4eec\u53d1\u73b0\uff0cdfs\u7684\u590d\u6742\u5ea6\u592a\u9ad8\u4e3b\u8981\u662f\u6709\u592a\u591a\u6b21\u4f18\u501f\u5237\u65b0\uff0c\u6211\u4eec\u5982\u679c\u5c06d1,d2\u6539\u53d8,\u8ba9\u4ed6\u53d8\u6210\u6bcf\u4e2a\u70b9\u6bcf\u79cd\u60c5\u51b5\u7684\u7684dfs\u5230\u8fbe\u6b21\u6570\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6765\u9650\u5236\u67d0\u4e2a\u60c5\u51b5\u88ab\u5237\u65b0\u7684\u6b21\u6570\u6765\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5047\u8bbe\u6bcf\u4e2a\u70b9\u88ab\u9650\u5236t\u6b21\uff0ct\u662f\u53ef\u4ee5\u6781\u5c0f\u7684\uff0c\u5927\u7ea6\u4e3a100\uff0c(*1e7 / gt\u2248800)t=100\u65f6\uff0c\u65f6\u95f4\u5927\u5927\u4f18\u5316\u4e86\uff0c\u53ef\u4ee5\u81ea\u5df1\u53bb\u6d4b\u4e00\u4e0b,\u5927\u7ea6\u4e3a15ms\uff0c\u6bd4\u4e00\u822c\u7684dfs\u4f18\u5316\u4e86\u4e0d\u77e5\u9053\u591a\u5c11.(\u8fd8\u662f91\u5206\uff0c\u4e0d\u77e5\u9053\u5269\u4e0b\u90a3\u4e2a\u6570\u636e\u6709\u591a\u6bd2\u7624\uff09\n\n\u4ee3\u78012\uff1a\n\n```cpp\n#include<iostream>\n#include<queue>\n#include<cstring>\n#include<algorithm>\n#include<fstream>\nusing namespace std;\nint life=10;\nint d1[1100][1100],d2[1100][1100];  \nint n,d;\nstruct junk{\n    int h,t,l;\n};\nint cmp(junk a,junk b)\n{\n    return a.t<b.t;\n}\nint ans=0x3ffffff;\n    int lifenow=10;\nint ts=0;\njunk f[1086];\nint bj(int t)\n{\n    ans=min(ans,t);\n    ts=1;\n}\nint bj2(int l)\n{\n    lifenow=max(l,lifenow);\n}\nlong long u;\nlong long p=0x2FFFFFF-1;\nvoid dfs1(int i,int dep,int l,int t)\n{\n    u++;\n    if(u>p/2) return ;\n    bj2(l);\n    if(t>ans) return ; \n    if(l<f[i].t) return ;\n    if(dep>=d)\n    {\n    bj(t);\n    return ;    \n    }\n    if(i>n) return ;\n     if(d1[i][l]>100||d2[t][l]>100) return ;\n    d1[i][l]++;\n    d2[t][l]++;\n    dfs1(i+1,dep,l+f[i].l,f[i].t);\n     dfs1(i+1,dep+f[i].h,l,f[i].t);\n     if(u>p/2) return ;\n}\n}\nint main()\n{\n    cin>>d>>n;\n    int h=0;\n    int i,j,k;\n    for(i=1;i<=n;i++)\n    cin>>f[i].t>>f[i].l>>f[i].h;\n    sort(f+1,f+n+1,cmp);\n    dfs1(1,0,10,0);\n    if(ts)\n    cout<<ans;\n    else cout<<lifenow;\n    return 0;\n}\n\n```",
        "postTime": 1541051226,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u6ce8\u91ca\u5e94\u8be5\u5df2\u7ecf\u8bf4\u7684\u5f88\u660e\u767d\u4e86\uff0c\u5982\u679c\u8fd8\u662f\u4e0d\u61c2\u7684\u8bdd\u53ef\u4ee5\u79c1\u4fe1\u6211\u6216\u8005\u770b\u4e00\u4e0b\u697c\u4e0b\u5404\u4f4ddalao\u7684\u9898\u89e3\n\n~~(\u6c42\u7ba1\u7406\u5458\u5927\u5927\u901a\u8fc7)~~\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint dis,n;\nstruct rbs{\n    int t;\n    int h;\n    int f;\n}rb[110];//\u5b9a\u4e49\u540d\u4e3arbs(\u5783\u573e)\u7684\u7ed3\u6784\u4f53\nint f[110],ti[110];\nbool cmp(rbs a,rbs b)\n    {\n        return a.t<b.t;\n    }//sort\u51fd\u6570\u8981\u7528\u5230\u7684\u6bd4\u8f83\u51fd\u6570\nint main()\n    {\n        cin>>dis>>n;//\u8f93\u5165\u9ad8\u5ea6\u548c\u6570\u636e\u7ec4\u6570\n        for(int i=1;i<=n;i++)\n            {\n                cin>>rb[i].t>>rb[i].f>>rb[i].h;//\u4ee5\u7ed3\u6784\u4f53\u7684\u5f62\u5f0f\u8f93\u5165\u6570\u636e\n            }\n        sort(rb+1,rb+1+n,cmp);//\u7ed3\u6784\u4f53\u6392\u5e8f\n        f[0]=10;//\u521d\u59cb\u751f\u547d\u503c\n        for(int i=1;i<=n;i++)\n            {\n                for(int j=dis;j>=0;j--)\n                    {\n                    if(f[j]>=rb[i].t)//\u5982\u679c\u5f53\u524d\u5783\u573e\u6389\u843d\u65f6\u7684\u751f\u547d\u503c\u4e0d\u5c0f\u4e8e\u6389\u843d\u65f6\u95f4\n                            {\n                                if(j+rb[i].h>=dis)//\u5e76\u4e14\u5982\u679c\u8fd9\u4e2a\u5783\u573e\u7684\u5806\u53e0\u9ad8\u5ea6\u6070\u597d\u7b49\u4e8e\u6216\u5927\u4e8e\u5751\u7684\u9ad8\u5ea6\n                                    {\n                                        cout<<rb[i].t<<endl;//\u5219\u8f93\u51fa\u5f53\u524d\u65f6\u95f4\n                                        return 0;\n                                    }\n                                f[j+rb[i].h]=max(f[j+rb[i].h],f[j]);//\u5426\u5219\u8fd9\u4e2a\u5783\u573e\u7684\u751f\u547d\u503c\u7b49\u4e8e\u4ece0\u5230dis\u7684\u751f\u547d\u503c\n                                f[j]+=rb[i].f;//\u5403\u5783\u573e\uff0c\u7eed(\u548c\u8c10)\u547d\n                            }\n                    }\n            }\n        cout<<f[0]<<endl;//\u5426\u5219,\u8f93\u51fa\u82df(\u548c\u8c10)\u6d3b\u65f6\u95f4\n        return 0;\n    }\n\n```",
        "postTime": 1531925317,
        "uid": 88898,
        "name": "Tritiger\u5f6a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u3010\u5927\u7c73\u997c\u601d\u8def\u3011\uff1a\n\nf[i][j]\u8868\u793a\u4f7f\u7528\u524di\u4e2a\u5783\u573e\uff08\u5403\u6216\u8005\u5806\uff09\uff0c\u5806\u5230j\u7684\u9ad8\u5ea6\u65f6\u7684\u6700\u5927\u751f\u547d\u503c\u3002\n\n\u8fd9\u9053\u9898\u7684\u7279\u70b9\u4e4b\u4e00\u662f\u6700\u7ec8\u76ee\u6807\u72b6\u6001\u662fj>=D\u3002\u636e\u6b64\uff0c\u5237\u8868\u6cd5\u4f1a\u66f4\u52a0\u597d\u5199\uff08\u5373j>=D\u5c31\u53ef\u4ee5\u8f93\u51fa\u7b54\u6848\u4e86\uff09\n\n\u6700\u540e\u505a\u4e00\u4e2a\u964d\u7ef4\u5904\u7406\uff0c\u7136\u540e\u4ee3\u7801\u5c31\u6765\u5566\uff1a\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\n#define S(a) (a[i]^=a[j]^=a[i]^=a[j]) \n#define go(i,a,b) for(int i=a;i<=b;i++)\n#define ro(i,a,b) for(int i=a;i>=b;i--)\nconst int N=8003;int n,W,w[N],v[N],t[N],f[N];\nint main()\n{\n    scanf(\"%d%d\",&W,&n);f[0]=10;\n    go(i,1,n)scanf(\"%d%d%d\",t+i,v+i,w+i);\n    go(i,1,n)go(j,i+1,n)if(t[j]<t[i])S(v),S(w),S(t);\n    go(i,1,n)ro(j,W,0)if(f[j]>=t[i])\n    {\n        if(j+w[i]>=W){printf(\"%d\\n\",t[i]);return 0;}\n        f[j+w[i]]=std::max(f[j+w[i]],f[j]);f[j]+=v[i];\n    }\n    printf(\"%d\\n\",f[0]);return 0;\n}//Paul_Guderian\n\n```",
        "postTime": 1505303598,
        "uid": 21093,
        "name": "Paul_Guderian",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u5c0f\u767d\u7528c\u8bed\u8a00\u5199\u7684\uff0c\u5927\u795e\u4eec\u53ef\u80fd\u6709\u70b9\u770b\u4e0d\u60ef\u8bf7\u89c1\u8c05\u3002\n\n\u6211\u7528\u7684\u662f\u4e00\u7ef4\u7684dp\uff0cdp[i]\u8868\u793a\u9ad8\u5ea6\u5806\u5230i\u65f6\u7684\u6700\u5927\u751f\u547d\u503c\u3002\n\nif(dp[j]>dp[j+h])dp[j+h]=dp[j];\u8fd9\u662f\u8868\u793a\u5806\u5783\u573e\u7684\u72b6\u6001\u8f6c\u79fb\n\nif(dp[j]>ans)ans=dp[j];\u8fd9\u662f\u8868\u793a\u5403\u6389\u5783\u573e\u7684\u72b6\u6001\u8f6c\u79fb\n\n\u540e\u9762\u7684\u8fc7\u7a0b\u5c31\u663e\u800c\u6613\u89c1\u4e86\u3002\n\n\u6709\u4e9b\u5751\u7684\u5730\u65b9\u4e00\u5b9a\u8981\u6ce8\u610f\uff1a\n\n\u6bd4\u5982dp[j]>=t\uff0c\u5c31\u662f\u4e00\u5b9a\u8981\u751f\u547d\u503c\u5927\u4e8e\u7528\u5783\u573e\u7684\u65f6\u95f4\u624d\u80fd\u7528\u3002\n\n\u4e5f\u5c31\u662f\u7528\u8fd9\u4e2a\u5783\u573e\u7684\u65f6\u5019\u8fd8\u6ca1\u6b7b\u624d\u80fd\u7528\uff1b\n\n\u8fd8\u6709\u8f93\u5165\u987a\u5e8f\u4e0d\u662f\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u6765\u7684\uff0c\u6240\u4ee5\u8981\u6392\u5e8f\u4e00\u4e0b\u3002\n\n\u6700\u540e\u611f\u8c22\u4e00\u4e0bztz\u5927\u795e\uff0c\u6211\u4e00\u76f4\u4ee5\u4e3aD<=25,\u6539\u4e86\u534a\u5929\u3002\u256e(\u256f\u25bd\u2570)\u256d\n\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\nint dp[110];\nstruct node{\n    int t,f,h;\n}a[101];\nint cmp(const void *x,const void *y){\n    return ((struct node *)x)->t - ((struct node *)y)->t;\n}\nint main(){\n    int i,j,k,D,G,t,f,h;\n    scanf(\"%d%d\",&D,&G);\n    dp[0]=10;\n    for(i=1;i<=G;i++)\n        scanf(\"%d%d%d\",&a[i].t,&a[i].f,&a[i].h);\n    qsort(a+1,G,sizeof(a[0]),cmp);\n    for(i=1;i<=G;i++){\n        t=a[i].t;f=a[i].f;h=a[i].h;\n        for(j=D;j>=0;j--){\n            if(dp[j]>=t){\n                if(j+h>=D){\n                    printf(\"%d\",t);\n                    return 0;\n                }\n                if(dp[j]>dp[j+h])\n                    dp[j+h]=dp[j];\n                dp[j]+=f;\n            }\n        }\n    }\n    printf(\"%d\",dp[0]);\n    return 0;\n}\n```",
        "postTime": 1478155568,
        "uid": 7124,
        "name": "wumei46",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u4f3c\u4e4e\u628a\u751f\u547d\u503c\u4f5c\u4e3a\u4e0b\u6807\u7684\u9898\u89e3\u6ca1\u51e0\u7bc7\u7684\u4e9a\u5b50\u3002\u90a3\u5c31\u8ba9\u7a9d\u6765\u4e00\u7bc7\u9898\u89e3~~\u4ee5\u7eaa\u5ff5\u8c03\u4e86\u4e00\u4e0b\u5348\u7684\u9898~~\u3002\n\n\u8fd9\u4e2a\u9898\u67094\u4e2a\u91cf\uff1a\u9ad8\u5ea6\uff0c\u751f\u5b58\u503c\uff0c\u65f6\u95f4\uff0c\u5783\u573e\u7684\u7f16\u53f7\u3002\u6211\u4eec\u8981\u6c42\u9003\u51fa\u53bb\u7684\u6700\u5c0f\u65f6\u95f4\uff0c\u5bb9\u6613\u60f3\u5230$dp$\u6570\u7ec4\u8868\u793a\u65f6\u95f4\u3002\u663e\u7136\u5f53\u5783\u573e\u6254\u4e0b\u6765\u7684\u65f6\u5019\u7acb\u5373\u5904\u7406\u5b83\u662f\u6700\u4f18\u7684\uff0c\u6240\u4ee5\u5982\u679c\u5976\u725b\u80fd\u591f\u9003\u51fa\u53bb\uff0c\u90a3\u4e48\u7b54\u6848\u4e00\u5b9a\u662f\u67d0\u4e2a\u5783\u573e\u88ab\u6254\u4e0b\u6765\u7684\u65f6\u95f4\u3002\u8fd9\u5c31\u548c\u5783\u573e\u8fd9\u4e2a\u72b6\u6001\u91cd\u590d\u4e86\uff0c\u6545\u65f6\u95f4\u5176\u5b9e\u662f\u4e2a\u5e72\u6270\u91cf\uff0c\u6ca1\u4ec0\u4e48\u7528\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5269\u4e0b\u4e09\u4e2a\u91cf\u7684\u5173\u7cfb\u3002$dp[i][j]$\u8868\u793a\u8003\u8651\u5230\u7b2c$i$\u4e2a\u5783\u573e\uff0c\u64cd\u4f5c\u5b8c\u8fd9\u4e2a\u5783\u573e\u4e4b\u540e\u751f\u5b58\u503c\u4e3a$j$\uff0c\u80fd\u5230\u8fbe\u7684\u6700\u5927\u9ad8\u5ea6\u3002\u5f53$dp[i][j]>=D$\u65f6\uff0c\u76f4\u63a5\u8f93\u51fa\u7b2c$i$\u4e2a\u5783\u573e\u7684\u65f6\u95f4\u5373\u53ef\u3002\u7531\u4e8e\u7a9d\u592a\u5f31\u4e86\uff0c\u4e0d\u4f1a\u641e\u751f\u5b58\u503c\u548c\u5f53\u524d\u65f6\u95f4\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684$j$\u8868\u793a\u76f8\u5bf9\u4e8e0\u65f6\u523b\u7684\u751f\u5b58\u503c\uff0c\u6362\u53e5\u8bdd\u8bf4\u5f53\u751f\u5b58\u503c<\u5783\u573e\u6389\u4e0b\u6765\u7684\u65f6\u95f4\u65f6\uff0c\u5976\u725b\u6b7b\u4ea1\u3002\n\n\u6bcf\u4e2a\u5783\u573e\u6211\u4eec\u6709\u5403\u6389\u548c\u5806\u8d77\u6765\u4e24\u79cd\u505a\u6cd5\u3002\u5982\u679c\u5403\u6389\uff0c\u9ad8\u5ea6\u4e0d\u4f1a\u589e\u52a0\u3002\u5982\u679c\u5806\u8d77\u6765\uff0c\u9ad8\u5ea6\u4f1a\u589e\u52a0$h[i]$\u3002\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f$dp[i][j]=max(dp[i-1][j-f[i]],dp[i-1][j]+h[i]),j-f[i]>=t[i]$($f,t$\u5982\u4e0e\u9898\u9762\u4e2d\u4e00\u6837)\u3002\u4e3a\u4ec0\u4e48\u662f$j-f[i]>=t[i]$\u800c\u4e0d\u662f$t[i-1]$\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u8981\u4fdd\u8bc1\u5976\u725b\u80fd\u6d3b\u5230\u7b2c$i$\u4e2a\u5783\u573e\u88ab\u6254\u4e0b\u6765\u7684\u65f6\u523b\uff0c\u624d\u80fd\u8ba9\u5976\u725b\u5403\u6389\u8fd9\u4e2a\u5783\u573e\u3002~~\uff08\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u8c03\u4e86\u4e00\u4e0b\u5348.jpg\uff09~~ \u521d\u59cb\u5316$dp[0][10]=0$\uff0c\u5176\u4f59$dp$\u503c\u4e3a$-inf$\n\n\u5f53\u5982\u679c\u4e0d\u80fd\u9003\u51fa\u7684\u65f6\u5019\uff0c\u5012\u7740\u904d\u5386\u6240\u6709\u7684$dp$\u503c\uff0c\u8f93\u51fa\u7b2c\u4e00\u4e2a>=0\u7684$dp$\u503c\u5bf9\u5e94\u7684\u5783\u573e\u7684\u65f6\u95f4\u5373\u53ef\u3002\n\n\u4e00\u4e9b\u5751\u70b9\uff1a\n\n1. \u8f93\u5165\u7684\u5783\u573e\u4e0d\u4fdd\u8bc1\u65f6\u95f4\u5355\u8c03\u9012\u589e\uff0c\u6240\u4ee5\u8981\u5148\u6392\u5e8f\u518d$dp$\u3002\uff08\u867d\u7136\u6211\u4e5f\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u540e\u9762\u7684\u5783\u573e\u53ef\u4ee5\u5728\u524d\u9762\u7684\u5783\u573e\u4e4b\u524d\u6254\u4e0b\u53bb\uff09\n2. \u521d\u59cb\u5316\u4e3a-inf\u662f\u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u751f\u5b58\u503c\u5bf9\u5e94\u7684$dp$\u503c\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\uff0c\u4f8b\u59829\u8fd9\u4e2a\u751f\u5b58\u503c\u5728\u8fd9\u91cc\u5c31\u4e0d\u53ef\u80fd\u51fa\u73b0\n1. \u5f53\u5976\u725b\u5269\u4f59\u751f\u5b58\u503c\u4e3a0\uff0c\u4e5f\u5c31\u662f\u8fd9\u91cc\u7684\u751f\u5b58\u503c==$t[i]$\u65f6\uff0c\u5b83\u4ecd\u7136\u662f\u6d3b\u7740\u7684\uff0c\u4f9d\u7136\u53ef\u4ee5\u64cd\u4f5c\u5783\u573e/\u7b97\u5728\u751f\u5b58\u65f6\u95f4\u91cc\n1. \u5982\u679c\u64cd\u4f5c\u4e0a\u4e00\u4e2a\u5783\u573e\u80fd\u591f\u5f97\u5230\u7684\u6700\u5927\u751f\u5b58\u503c\u90fd\u4e0d\u591f\u5f53\u524d\u5783\u573e\u7684\u65f6\u95f4\u65f6\uff0c\u5976\u725b\u4f1agame over\n\n\n\u6700\u540e\u5173\u4e8e\u751f\u5b58\u503c\u505a\u4e0b\u6807\u7684\u4e00\u70b9\u60f3\u6cd5\uff1a\u6709\u4e9b\u5927\u4f6c\u8bf4\u751f\u5b58\u503c\u4e0d\u597d\u786e\u5b9a\uff0c\u6240\u4ee5\u4e0d\u7528\u5b83\u505a\u4e0b\u6807\u3002\u5176\u5b9e\u751f\u5b58\u503c\u6700\u5927\u4e0d\u4f1a\u8d85\u8fc7\u628a\u6240\u6709\u5783\u573e\u5403\u6389\u4e4b\u540e\u7684\u751f\u5b58\u503c\uff0c\u800c\u6bcf\u4e2a\u5783\u573e\u589e\u52a0\u7684\u751f\u5b58\u503c\u4e0d\u8d85\u8fc730\uff0c\u6240\u4ee5\u6700\u5927\u751f\u5b58\u503c\u4e0d\u4f1a\u8d85\u8fc73010\u3002\n\n\u6109\u5feb\u7684\u4ee3\u7801\u65f6\u5149\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<map>\n#define pa pair<int,int>\nusing namespace std;\ntypedef long long ll;\ninline int read()\n{\n\tchar ch=getchar();\n\tint x=0;bool f=0;\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')f=1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn f?-x:x;\n}//\u67d0\u4e9b\u6bd2\u7624\u9898\u53ef\u80fd\u4f1a\u5361\u7684\u5feb\u8bfb\nconst int inf=2147483647;\nint sum=10,n,h,dp[109][10009];\nstruct Lj{\n\tint ti,f,hi;\n}lj[109];\nbool cmp(Lj a,Lj b)\n{\n\treturn a.ti<b.ti;\n}\nint main()\n{\n    h=read();n=read();\n    for(int i=1;i<=n;i++)\n     lj[i].ti=read(),lj[i].f=read(),lj[i].hi=read(),sum+=lj[i].f;\n    for(int i=0;i<=n;i++)\n     for(int j=0;j<=sum;j++)\n      dp[i][j]=-inf;\n     dp[0][10]=0;  \n     sort(lj+1,lj+1+n,cmp);\n     int lst=10;//\u6700\u5f00\u59cb\u80fd\u649110\u5c0f\u65f6\n     for(int i=1;i<=n;i++)\n     {\n\tif(lj[i].ti>lst) continue;//lst\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u5783\u573e\u6700\u591a\u80fd\u6491\u591a\u957f\u65f6\u95f4 \n\tfor(int j=0;j<=sum;j++)\n\t{\n\t   if(j<lj[i].ti) continue;//\u5f53\u751f\u5b58\u503c\u4e0d\u591f\u5f53\u524d\u65f6\u95f4\u65f6\u8ba4\u4e3a\u5b83\u6b7b\u4e86 \n\t   if(j-lj[i].f>=lj[i].ti&&dp[i-1][j-lj[i].f]>=0)//\u4fdd\u8bc1\u5976\u725b\u53ef\u4ee5\u6d3b\u7740\u5403\u5230\u5783\u573e\n\t   {\n\t       dp[i][j]=max(dp[i-1][j-lj[i].f],dp[i-1][j]+lj[i].hi);\n\t   }\n\t   else dp[i][j]=dp[i-1][j]+lj[i].hi;//\u5982\u679c\u4e0d\u80fd\u591f\u6d3b\u7740\u5403\u6389\u8fd9\u4e2a\u5783\u573e\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u8fd9\u4e2a\u5783\u573e\u5c31\u53ea\u80fd\u5806\u653e\n\t   if(dp[i][j]<0)continue;\n\t   lst=j;//\u66f4\u65b0\u80fd\u575a\u6301\u5230\u7684\u6700\u957f\u7684\u65f6\u95f4\n\t   if(dp[i][j]>=h)\n           {\n             printf(\"%d\\n\",lj[i].ti);return 0;\n\t   }\n\t }//\u7801\u98ce\u65e5\u6e10\u6bd2\u7624.jpg\n\t}\n\tfor(int i=n;i>=1;i--)\n\t{\n\t  for(int j=sum;j>=lj[i].ti;j--)\n\t  {\n\t       if(dp[i][j]>=0) {printf(\"%d\\n\",j);return 0;}//\u627e\u5b58\u6d3b\u7684\u6700\u957f\u65f6\u95f4\n\t  }\n\t}   \n\tprintf(\"10\");\n}\n```\n\n",
        "postTime": 1573042935,
        "uid": 177068,
        "name": "\u5343\u8f7d\u715c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u72b6\u6001\u548c\u65b9\u7a0b\u6ce8\u91ca\u5199\u7684\u5f88\u6e05\u695a\u3002\n\n\u8fd9\u91cc\u5f3a\u8c03\u51e0\u4e2a\u5751\u70b9\uff01\uff01\n\n#### 1. \n\u725b\u8fd9\u4e00\u628a\u8840\u91cf\u4e3a0\u65f6\u4f46\u662f\u8fd8\u6ca1\u6b7b\uff0c \u53ef\u4ee5\u5403\u5783\u573e\u56de\u8840\uff0c \u4e0d\u4f1a\u6b7b\u3002\n#### 2. \n\u725b\u5728\u64cd\u4f5c\u5783\u573e\u7684\u65f6\u5019\u5fc5\u987b\u4fdd\u8bc1\u81ea\u5df1\u4e0d\u6b7b\u3002\n#### 3. \n\u5f53\u725b\u64cd\u4f5c\u5b8c\u5783\u573e\u4e4b\u540e\u5982\u679c\u80fd\u4f7f\u9ad8\u5ea6\u5927\u4e8eh\u4e14\u81ea\u5df1\u4e0d\u6b7b\u90a3\u4e48\u5c31\u7ed3\u675f\u4e86\uff0c \u76f4\u63a5\u8f93\u51fa\u6b64\u65f6\u7528\u65f6\u662f\u591a\u5c11\u3002\u4e5f\u5c31\u662f\u5982\u679c\u80fd\u6709\u72b6\u6001\u8f6c\u79fb\u5230$dp[i][h]$\u90a3\u4e48\u5c31\u6210\u529f\u4e86\uff0c \u4e3a\u4e86\u7b80\u4fbf\uff0c \u4e00\u5f00\u59cb\u628a\u6240\u6709\u72b6\u6001\u521d\u59cb\u5316\u4e3a$-inf$\n\n#### 4.\n\u725b\u5728\u51fa\u6765\u7684\u6700\u540e\u4e00\u523b\u53ef\u4ee5\u8840\u91cf\u4e3a0....\u4e5f\u5c31\u662f\u51fa\u6765\u7684\u65f6\u5019\u6b63\u597d\u6b7b\u662f\u53ef\u4ee5\u7684\u3002\n\n```cpp\n//RoRoyyy\n\n/*\n    dp[i][j] \u8868\u793a\u7b2ci\u4e2a\u5783\u573e\uff0c \u9ad8\u5ea6\u4e3aj\u7684\u6700\u5927\u8840\u91cf\n    1.\u628a\u5783\u573e\u5403\u4e86    dp[i][j] max= dp[i - 1][j] + eat[i] - (t[i] - t[i - 1])\n    2.\u653e\u5783\u573e        dp[i][j] max= dp[i - 1][j - h[i]] - (t[i] - t[i - 1])\n*/\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nconst int N = 105;\nint n, m;\nstruct node {\n    int t, eat, hei;\n    friend bool operator < (node a, node b) {\n        return a.t < b.t;\n    }\n}rub[N];\nint dp[N * 10][N];\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= m; i++) \n        scanf(\"%d%d%d\", &rub[i].t, &rub[i].eat, &rub[i].hei);\n    sort(rub + 1, rub + 1 + m);\n    memset(dp, -0x3f, sizeof(dp));\n    dp[0][0] = 10;\n    for(int i = 1; i <= m; i++) {\n        for(int j = 0; j <= n; j++) {\n            if(dp[i - 1][j] - (rub[i].t - rub[i - 1].t) >= 0)\n                dp[i][j] = max(dp[i][j], dp[i - 1][j] + rub[i].eat - (rub[i].t - rub[i - 1].t));\n            if(j - rub[i].hei >= 0 && dp[i - 1][j - rub[i].hei] - (rub[i].t - rub[i - 1].t) >= 0)\n                dp[i][j] = max(dp[i][j], dp[i - 1][j - rub[i].hei] - (rub[i].t - rub[i - 1].t));\n        }\n        if(dp[i][n] >= 0) {\n            printf(\"%d\\n\", rub[i].t);\n            return 0;\n        }\n    }\n    int ans = -0x3f3f3f3f;\n    for(int i = 0; i <= m; i++) ans = max(ans, dp[i][0] + rub[i].t);\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1571987245,
        "uid": 111617,
        "name": "RoRoyyy",
        "ccfLevel": 0,
        "title": "P1156"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u628a\u5b83\u60f3\u6210\u4e00\u4e2a\u80cc\u5305\u95ee\u9898\uff0c\u4e00\u4e2adp\u5c31ok\u4e86\n\n\uff08~~\u88ab\u8fd9\u9053\u9898\u5361\u4e86\u4e00\u5929\u7684\u7a9d\u745f\u745f\u53d1\u6296\uff0c\u91cd\u70b9\u662f\u6700\u540e\u8fd8\u662f\u627e\u4e86\u795e\u7287\u5e2e\u6211\u770b\u9898~~\uff09\n\n~~\u5624\u5624\u5624~~\n\n-----------\n\n\u8fd9\u91cc\u4e95\u7684\u9ad8\u5ea6\u5c31\u597d\u6bd4\u80cc\u5305\u4e2d\u7684\u5269\u4f59\u7a7a\u95f4\uff0c\u5783\u573e\u597d\u6bd4\u7269\u91cd\uff0c\u5269\u4f59\u4f53\u529b\u597d\u6bd4\u7269\u54c1\u4ef7\u503c\u3002\n\n\u6240\u4ee5\uff0c\u8fd9\u91ccdp[i][j]\u5c31\u4ee3\u8868\u7b2ci\u4e2a\u5783\u573e\uff0c\u9ad8\u5ea6\u4e3aj\u65f6\u6240\u5269\u4f59\u6700\u5927\u4f53\u529b\u503c\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5~~\u7b80\u5355\u7684\uff08\u6211\u82b1\u4e861h\uff09~~\u5217\u51fadp\u65b9\u7a0b\n\ndp[i][j+a[i].h] = max(dp[i][j+a[i].h],dp[i-1][j]-(a[i].t-a[i-1].t));//\u5403\u8fa3\u9e21\n\ndp[i][j] = max(dp[i][j],dp[i-1][j]+a[i].v-(a[i].t-a[i-1].t));//\u4e0d\u5403\u8fa3\u9e21\n\n\uff08\u8fd9\u91cca\u7ed3\u6784\u4f53\u8868\u793a\u6bcf\u4e00\u4e2a\u8fa3\u9e21\u7684t\u4e22\u51fa\u65f6\u95f4\uff0cv\u4ef7\u503c\uff0ch\u9ad8\u5ea6\uff09\n\n\u4e0b\u9762\u9644\u4e0aAC\u4ee3\u7801\uff08\u6211\u6ca1\u7528\u6eda\u52a8\u6570\u7ec4\uff0c52ms\u8c8c\u4f3c\u4e0d\u6162\uff09\n\n```cpp\n/*The Bone Of My Sword*/ \n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#define MAXN 1005\nusing namespace std;\nint dp[MAXN][MAXN];\nint n,d;\nstruct r{\n\tint t,v,h;\n}a[MAXN];\nbool cmp(struct r q,struct r p){\n\treturn q.t<p.t;\n}\nint ans;\nint main(void){\n\tcin >> d >> n;\n\tfor(int i = 1;i <= n;i ++){\n\t\tcin >> a[i].t >> a[i].v >> a[i].h;\n\t}\tmemset(dp,~0x3f3f3f,sizeof(dp));\n\tsort(a+1,a+1+n,cmp);\n\tdp[0][0] = 10;\n\ta[0].t = 0;\n\tans = -999999;\n\tfor(int i = 1;i <= n;++ i){\n\t\tmemset(dp[i],~0x3f3f3f,sizeof(dp[i]));\n\t\tfor(int j = d;j >= 0;-- j){\n\t\t\tif(dp[i-1][j]<a[i].t-a[i-1].t)continue;\n\t\t\tif(j+a[i].h>=d){\n\t\t\t\tcout << a[i].t <<endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tdp[i][j+a[i].h] = max(dp[i][j+a[i].h],dp[i-1][j]-(a[i].t-a[i-1].t));\n\t\t\tdp[i][j] = max(dp[i][j],dp[i-1][j]+a[i].v-(a[i].t-a[i-1].t));\n\t\t}\n\t\tans=max(ans,dp[i][0]+a[i].t);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n} \n```",
        "postTime": 1540384589,
        "uid": 48850,
        "name": "Sparda",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "/\\*\n\\* P1156\n\n\\* Au:Small\\_Ash\n\n\\* \u505a\u6cd5\u697c\u4e0b\u7684\u5927\u90e8\u5206\u90fd\u8bf4\u51fa\u6765\u4e86\uff0c\u6211\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff0c\u672c\u6b21\u4e3b\u8981\u662f\u4e3a\u4e86\u544a\u8bc9\u5927\u5bb6\u672c\u9898\u5f88\u591a\u5751\u7239\u7684\u7ec6\u8282\u70b9\n\n\\* \u6211\u91c7\u7528\u7684\u662ff[i][j]\u4ee3\u8868\u7b2ci\u4e2a\u5783\u573e\u5230\u9ad8\u5ea6j\u7684\u65f6\u5019\u7684\u6700\u5927\u5269\u4f59\u751f\u547d\u503c\n\n\\* \u65b9\u7a0b\u5c31\u662f f[i][j]=max(f[i][j],f[i-1][j]-\u65f6\u95f4+\u751f\u547d,f[i-1][j-\u9ad8\u5ea6]-\u65f6\u95f4);(\u5c31\u662f\u5403\u548c\u4e0d\u5403\u7684\u51b3\u7b56)\n\n\\* \u95ee\u9898\u5728\u4e8e\uff0c\u5751\u5f88\u591a\u3002\n\n\\* 1.\u521d\u59cb\u5316\u4e3a\u8d1f\u65e0\u7a77\uff0c\u5e76\u4e14f[0][0]=10 \uff08\u8fd9\u4e2a\u6bd4\u8f83\u5c0f\uff0c\u57fa\u672c\u6ca1\u4eba\u9519\uff09\n\n\\* 2.j-\u9ad8\u5ea6\u7684\u51b3\u7b56\u65f6\uff0c\u8981\u5224\u65ad\u662f\u5426\u5927\u4e8e\u7b49\u4e8e0 \uff08\u8fd9\u4e2a\u662f\u4e3a\u4e86\u9632\u6b62\u8bbf\u95ee\u8d1f\u4e0b\u6807\uff09\n\n\\* 3.\u4e00\u4e2a\u5783\u573e\u5728\u5403\u4e0b\u4e4b\u524d\uff0c\u8981\u4fdd\u8bc1\u5783\u573e\u6389\u843d\u7684\u65f6\u5019\u8fd8\u6ca1\u6b7b\uff08\u5c31\u662f\u8bf4\uff0c\u51b3\u7b56 f[i-1][j]-\u65f6\u95f4+\u751f\u547d \u7684\u65f6\u5019\uff0c\u8981\u5148\u5224\u65adf[i-1][j]-\u65f6\u95f4\u662f\u5426\u5927\u4e8e\u7b49\u4e8e0\uff09\n\n\\* \u8fd9\u5f88\u91cd\u8981\uff0c\u6211\u6ca1\u7279\u5224\u8fd9\u4e2a\uff0c\u5c31\u4e00\u76f420\u5206\u4e867\uff0c8\u6b21\u3002\u3002\u3002\n\n\\* 4.\u51fa\u4e0d\u53bb\u7684\u65f6\u5019\uff0c\u8ba1\u7b97\u6700\u9ad8\u53ef\u5230\u8fbe\u9ad8\u5ea6\u7684\u65f6\u5019\uff0c\u4e5f\u8981\u7279\u52243\u7684\u60c5\u51b5\uff08\u4e0d\u7136\u7b2c\u5341\u4e2a\u70b9\u4f1a\u8fc7\u4e0d\u53bb\u3002\u3002\u3002\uff09\n\n\\* \u4ee5\u4e0a\uff0c\u5c31\u662f\u6211\u752820\u591a\u6b21WA\u6362\u6765\u7684\u7ec6\u8282\u70b9\uff08\u5176\u5b9e\u53ea\u662f\u6211\u592a\u8822\uff0c10\u591a\u4e2aWA\u90fd\u662f\u5728de\u7b2c\u4e09\u4e2a\u7ec6\u8282\u3002\u3002\u3002\uff09\n\n\\*/\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\nint g,d,ans,F,H;\nint f[105][2500];\nstruct asd\n{\n    int t,f,h;\n}a[105];\nbool cmp(asd a,asd b)\n{\n    return a.t<b.t;\n}\nvoid die(){\n    int life=10;\n    for (int i=1;i<=g;i++){\n        if (life-a[i].t+a[i-1].t<0/*4*/){\n            printf(\"%d\",a[i-1].t+life);\n            return;\n        }\n        life=life-a[i].t+a[i-1].t+a[i].f;    \n    }\n    printf(\"%d\",a[g].t+life);\n    return;\n}\nint main()\n{\n    scanf(\"%d%d\",&d,&g);F=0;\n    for (int i=1;i<=g;i++){\n        scanf(\"%d%d%d\",&a[i].t,&a[i].f,&a[i].h);\n        F+=a[i].f;\n        H+=a[i].h;\n    }\n    for (int i=0;i<=g;i++)\n        for (int j=0;j<=H;j++) f[i][j]=-2147480000;//1 \n    sort(a+1,a+g+1,cmp);\n    f[0][0]=10;//1\n    for (int i=1;i<=g;i++){\n        for (int j=0;j<=H;j++){\n                if (f[i-1][j]-a[i].t+a[i-1].t>=0/*3*/) f[i][j]=max(f[i][j],f[i-1][j]-a[i].t+a[i-1].t+a[i].f);\n                if (j-a[i].h>=0/*2*/) f[i][j]=max(f[i][j],f[i-1][j-a[i].h]-a[i].t+a[i-1].t);\n            if (f[i][j]>=0 && j>=d) {printf(\"%d\",a[i].t); return 0;}\n        }\n    }\n    die();\n    return 0;\n}\n```",
        "postTime": 1475289607,
        "uid": 745,
        "name": "dph754132771",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u5f88\u663e\u7136\u7684\u60f3\u5230f[i][j]\u3002\n\n\u4f46\u662f\uff01\u7ffb\u4e86\u7ffb\u9898\u89e3\uff0c\u53d1\u73b0\u7b2c\u4e00\u9875\u7adf\u7136\u6ca1\u6709\u7b2c\u4e8c\u7ef4\u8868\u793a\u8840\u91cf\u7684\u9898\u89e3\uff0c\u8fd9\u8ba9\u82b1\u4e86\u4e00\u5c0f\u65f6\u5904\u7406\u7ec6\u8282\u7684\u849f\u84bb\u975e\u5e38\u4e0d\u5f00\u68ee\uff01\uff01\uff01\n\nso\uff0c\u6211\u6765\u53d1\u4e00\u7bc7\uff0c\u4ea4\u4ee3\u4e00\u4e0b\u7ec6\u8282\uff0c\u4f20\u6388\u4e00\u4e0b\u5927\u9053\u3002~~\uff08\u70ab\u8000\u4e00\u4e0b\u4e00\u5c0f\u65f6\u7684\u52aa\u529b\u6210\u679c~~\n\n\u4e3b\u8981\u5c31\u662ffor\u5faa\u73af\u4e2d\u7684\u4e24\u4e2aif\u3002\n\n\u8bf7\u770b\u6ce8\u91ca\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,d;\nint dp[201][20201];\nstruct node {\n\tint t,f,h;\n}q[201];\nbool cmp(node a,node b) {\n\treturn a.t<b.t;\n}\nint main() {\n\tcin>>d>>n;\n\tfor(int i=1;i<=n;i++) cin>>q[i].t>>q[i].f>>q[i].h;\n\tsort(q+1,q+n+1,cmp);\n\tif(q[1].t>10) {     //\u5f88\u663e\u7136\u7684\u7279\u5224\uff0c\u5176\u5b9e\u4e0d\u52a0\u4e5f\u53ef\u4ee5\u3002 \n\t\tcout<<\"10\";\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<=n;i++) for(int j=20200;j>=0;j--) dp[i][j]=-99999999;   //\u5176\u5b9ej\u7684\u8303\u56f4\u6ca1\u5fc5\u8981\u5f00\u8fd9\u4e48\u5927\uff0c\u4f46\u5927\u4e00\u70b9\u6bd4\u8f83\u7a33\u3002 \n\tdp[0][10]=0;                   //\u521d\u59cb\u5316 \n\tfor(int i=1;i<=n;i++) {   \n\t\tfor(int j=0;j<=3200;j++) {      //\u6b64\u5904j\u7684\u5faa\u73af\u8981\u6ce8\u610f\uff0c\u8303\u56f4\u662f3200\u4ee5\u4e0a\u5927\u6982\u90fd\u53ef\u4ee5\n\t\t\t\t\t\t\t\t\t\t\t//\u4f46\u8fd9\u4e2afor\u5faa\u73af\u8fd8\u4e0e\u4e0a\u9762\u7684\u9884\u5904\u7406\u6709\u5173\u8054\n\t\t\t\t\t\t\t\t\t\t\t//\u56e0\u4e3a\u4e0b\u9762\u6709\u8c03\u7528 j+(q[i].t-q[i-1].t) \uff0c\u6240\u4ee5 \u9884\u5904\u7406\u65f6j\u7684\u8303\u56f4\u5e94\u8be5\u6bd4\u6b64\u5904\u5faa\u73af\u7684\u8303\u56f4\u59271000 \u5de6\u53f3 \n\t\t\t\n\t\t\tif(j+(q[i].t-q[i-1].t)>=0&&dp[i-1][j+(q[i].t-q[i-1].t)]+q[i].h>=0) dp[i][j]=max(dp[i][j],dp[i-1][j+(q[i].t-q[i-1].t)]+q[i].h);\n\t\t\tif(j+(q[i].t-q[i-1].t)-q[i].f>=q[i].t-q[i-1].t&&dp[i-1][j+(q[i].t-q[i-1].t)-q[i].f]>=0) dp[i][j]=max(dp[i][j],dp[i-1][j+(q[i].t-q[i-1].t)-q[i].f]);\n\t\t\t//\u5f80\u4e0a\u7b2c\u4e00\u4e2aif\u5224\u65ad\uff0cf[i][j]\u7531f[i-1][j+(q[i].t-q[i-1].t)-q[i].f]\u8f6c\u79fb\u800c\u6765\uff0c\u8f6c\u79fb\u65f6\u5fc5\u987b\u6ee1\u8db3\u7684\u4e00\u4e2a\u6761\u4ef6\u65f6\uff0c\u8f6c\u79fb\u524d\u7684\u8840\u91cf\u8db3\u591f\u652f\u6491\u5230\u8f6c\u79fb\u3002\n\t\t\t//\u4e5f\u5c31\u662f j+(q[i].t-q[i-1].t)-q[i].f (\u8f6c\u79fb\u524d) >= q[i].t-q[i-1].t\n\t\t\tif(dp[i][j]==d&&j!=1) {\n\t\t\t\tcout<<q[i].t<<endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\tint tail=10;\n\tfor(int i=1;i<=n;i++) {\n\t\tif(q[i].t<=tail) tail+=q[i].f;\n\t}\n\tcout<<tail;\n}\n```\n\n~~\u624b\u52a8\u6a21\u62df\u67e5\u9519\u4e00\u5c0f\u65f6\uff0c\u6211\u592a\u96be\u4e86~~\n\n",
        "postTime": 1572423624,
        "uid": 153493,
        "name": "\u664b\u7ea7\u4e00\u53f7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u6839\u636e\u8fd9\u9053\u9898\u7684\u65e0\u540e\u6548\u6027 ~~\uff0c\u4ee5\u53ca\u9898\u76ee\u7684\u6807\u7b7e~~\u663e\u7136\u662f\u9053dp\u7684\u9898\u76ee\u3002\u90a3\u4e48\u5c31\u5e94\u8be5\u770b\u51fa\u662f\u4e00\u4e2a\u80cc\u5305\u95ee\u9898\u5427\u3002\n\n\u4e00\u7ef4\u80cc\u5305\u7684\u6a21\u677f+\u4f18\u5316\uff1a\n\n```\nfor(int i=1; i<=m; i++) { // weight\n\n\tfor(int j=n; j>=w[i]; j--) { // things;\n\t\n\t\tdp[j]=max(dp[j],dp[j-w[i]]+v[i]);\n\t\t\n\t}\n```\n\n\n\n\u628a\u5783\u573e\u7684\u9ad8\u5ea6\u770b\u6210\u7269\u91cd\uff08weight\uff09\uff0c\u80fd\u589e\u52a0\u7684\u751f\u547d\u7684\u957f\u77ed\u770b\u6210\u4ef7\u503c\uff08things\uff09\u3002\uff08\u4e0d\u7136\u4e0d\u597d\u505a\uff0c\u5199\u7684\u65f6\u5019\u591a\u5c1d\u8bd5\uff09\n\n\u7136\u540e\u628a\u4e95\u7684\u6df1\u5ea6\u770b\u6210\u5305\u7684\u5927\u5c0f\uff08n\uff09\uff0c\u5783\u573e\u7684\u4e2a\u6570\u4e3a\u7269\u54c1\u6570\u91cf\uff08m\uff09\u3002\uff08\u4e0e\u4e0a\u4e00\u4e00\u5bf9\u5e94\uff0c**\u4f46\u8fd8\u9700\u6539\u52a8**\uff09\n\n\u8981\u6c42\u5fc5\u987b\u628a\u5305\u586b\u6ee1\uff0c\u6240\u80fd\u53d6\u5f97\u7684\u6700\u5c0f\u4ef7\u503c\u3002\n\n\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b9a\u4e49\u5783\u573e\u7684 t\uff08\u8868\u793a\u5783\u573e\u88ab\u6295\u8fdb\u4e95\u4e2d\u7684\u65f6\u95f4\uff09,f\uff08\u8868\u793a\u8be5\u5783\u573e\u80fd\u7ef4\u6301\u5361\u95e8\u751f\u547d\u7684\u65f6\u95f4\uff09,h\uff08\u8be5\u5783\u573e\u80fd\u57ab\u9ad8\u7684\u9ad8\u5ea6\uff09\u3002\n\n```\nstruct per {\n\tint t;\n\tint f;\n\tint h;\n} r[105];//rubish-\n```\n\u7136\u540e\u4ee5\u65f6\u95f4\u6392\u5e8f\uff08\u7531\u9898\u610f\uff0c\u663e\u7136\uff09\n\n```\nbool cmp(per a,per b) {\n   \treturn a.t<b.t;\n}\n                    \n\u4e0e\n                    \nsort(r+1,r+g+1,cmp);                    \n```\n\n\u4ee5\u4e0a\u90fd\u662f\u9884\u5907\u5de5\u4f5c\u3002\n\n**focus on \uff01\uff01\uff01\uff01\uff01**\n\n**\u6838\u5fc3\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b** \uff1a\n\n- dp[height+r[j].h]=max(dp[height+r[j].h],dp[height]);//\u4e0d\u5403\uff0c\u53e0\u9ad8\u5ea6\uff0c\u5c06\u7b2cj\u4e2a\u5783\u573e\u7684\u9ad8\u5ea6\u4ece\u9ad8\u5ea6height\u53e0\u4e0a\u53bb\uff0c\u7136\u540e\uff0c\u4e0e\u53e0\u4e0a\u53bb\u7684\u9ad8\u5ea6   height+r[j].h\uff0c\u53d6\u6700\u5927\u7684\u751f\u547d\u503c\u3002\n\n- \tdp[height]+=r[j].f;//\u4e0d\u5403\uff0c\u76f4\u63a5\u5728\u539f\u9ad8\u5ea6\u52a0\u751f\u547d\u503c\n\n\u522b\u5fd8\u4e86\uff0c\u8981\u52a0\u4e0a\u5224\u65ad\n\n```\nif(dp[height]>=r[j].t)\t//\u5728\u8fd9\u4e2a\u65f6\u95f4\uff0c\u725b\u725b\u8fd8\u6ca1gg\uff08\u4e4b\u524d\u5df2\u7ecf\u7528\u65f6\u95f4\u6392\u8fc7\u5e8f\u4e86\uff0c\u65f6\u95f4\u9012\u589e\uff09\n\n```\n\n\u6765\u4e2a\u5b8c\u6574\u7684code\uff1a\n\n```\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint d,g,k=1,ans;\nstruct per {\n\tint t;\n\tint f;\n\tint h;\n} r[105];\nint dp[2505];\nbool cmp(per a,per b) {\n\treturn a.t<b.t;\n}\nint main() {\n\tcin>>d>>g;\n\tfor(int j=1; j<=g; j++)\n\t\tcin>>r[j].t>>r[j].f>>r[j].h;\n\tsort(r+1,r+g+1,cmp);\n\t\n\t\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\tans=10;//\u8fd9\u4e00\u6bb5\u662f\u4e3a\u4e86\u5224\u65ad\u6700\u5927\u6d3b\u4e86\u591a\u4e45\uff0c\u53ef\u4ee5\u4e0e\u4e0b\u9762\u548c\u5728\u4e00\u8d77\uff0c\u4f46\u5faa\u73af\u5c55\u5f00\u66f4\u5feb\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\u3002\n\tfor(int j=1; j<=g; j++)\n\t\tif(ans>=r[j].t) ans+=r[j].f;//\u5f88\u663e\u7136\u7684\u7b97\u6cd5\n\t\t\n\t\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\t\n\tdp[0]=10\uff1b//\u521a\u5f00\u59cb\u7684\u521d\u59cb\u5316\n    \n\tfor(int j=1; j<=g; j++) \n\t\tfor(int height=d-r[j].h; height>=0; height--) //\u8bb0\u5f97\u5012\u8fc7\u6765\uff0c\u4ed6\u4f1a\u53cd\u7740\u5237\u8fc7\u6765\uff0c\u5b9e\u5728\u4e0d\u4f1a\u63622\u7ef4\u6570\u7ec4\u4e5f\u53ef\u4ee5\n\t\t\tif(dp[height]>=r[j].t) {\n\t\t\t\tdp[height+r[j].h]=max(dp[height+r[j].h],dp[height]);\n\t\t\t\tif(dp[d]>0) {//\u6700\u5927\u9ad8\u5ea6\u7684\u751f\u547d\u503c\u4e0d\u4e3a0\u4e86\uff0c\u5c31\u8bf4\u660e\uff0c\u725b\u725b\u5df2\u7ecf\u5230\u4e86\u4e95\u7684\u9876\u7aef\n\t\t\t\t\tprintf(\"%d \",r[j].t);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tdp[height]+=r[j].f;\n\t\t\t}\n\tprintf(\"%d\",ans);//\u5230\u4e0d\u4e86\uff0c\u8f93\u51fa\u6d3b\u6700\u4e45\u7684\u65f6\u95f4\n\treturn 0;\n}\n\n```\ndon't copy please\n\n\u4e2a\u4eba\u611f\u89c9\u7b80\u5355\u6613\u61c2 ~~\uff0c\u8fd8\u5f88\u77ed~~\uff0c\u5e0c\u671b\u6709\u5e2e\u52a9\u3002\n\n\u03c6(>\u03c9<*) \u6c42\u8fc7\u52a0\u70b9\u9876  (>\u03c9\uff65*\u00a0)\uff89\n\n\n",
        "postTime": 1572147274,
        "uid": 251809,
        "name": "wick",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u8981\u8003\u8651\u600e\u4e48\u533a\u5206\u4e00\u4e2a\u72b6\u6001\u662f\u5426\u53ef\u884c\u3010\u8fd9\u91cc\u662f\u521d\u59cb\u5316\u4e3a1\u4e86\u3011\n\u6bd5\u7adf\u8fd9\u662f\u4e00\u5934\u795e\u5947\u7684\u5976\u725b\uff0c\u8840\u91cf\u4e3a0\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u8fdb\u884c\u5176\u4ed6\u7684\u64cd\u4f5c\u3002\u3002\n\u7136\u540e\u548c\u4e00\u822c\u7684\u80cc\u5305\u4e0d\u540c\u7684\u662f\n\n\n\u4e00\u822c\u7684\u80cc\u5305\u82e5\u5f53\u524d\u94b1\u6570\u5c0f\u4e8e\u5546\u54c1\u4ef7\u503c\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5continue\n\n\u4f46\u662f\u8fd9\u91cc\u4f60\u4e0d\u628a\u5783\u573e\u5806\u8d77\u6765\u4f60\u4f1a\u83b7\u5f97\u4f53\u529b\u503c\u54e6\uff01\n\n#### \u6240\u4ee5\u72b6\u6001\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u8981\u8003\u8651\u53ea\u80fd\u5403\u6389\u800c\u4e0d\u80fd\u5806\u653e\u7684\u60c5\u51b5\u3002\u4e5f\u5c31\u662fj\u5e94\u8be5\u4ece0\u5f00\u59cb\u679a\u4e3e\u3002\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <algorithm>\n\nusing namespace std;\n\n#define ll long long\nconst int MAXN = 2505;\nconst int INF = 10000000;\n\nstruct laji{\n    int t;\n    int f;\n    int h;\n};\n\nbool operator < (laji l1, laji l2){\n    return l1.t < l2.t || (l1.t == l2.t && l1.h > l2.h);\n}\n\nint D, G;\nlaji a[150];\nint f[105][260];\n\nint main(){\n    cin >> D >> G;\n    for(int i = 1; i <= G; i++)\n        cin >> a[i].t >> a[i].f >> a[i].h;\n    sort(a + 1, a + 1 + G);\n    memset(f, -1, sizeof(f));\n    f[0][0] = 10;\n    for(int i = 1; i <= G; i++)\n        for(int j = 0; j < 260; j++){ //\u8fd9\u91cc\u4e00\u5b9a\u9700\u8981\u662f\u4ece0\u5f00\u59cb\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u67d0\u4e9b\u72b6\u6001\u65e0\u6cd5\u5411\u540e\u4f20\u9012\u3002\n            int wait = a[i].t - a[i-1].t;\n            if(f[i-1][j] >= wait)\n                f[i][j] = max(f[i][j], f[i-1][j] - wait + a[i].f);\n            if(j >= a[i].h && f[i-1][j-a[i].h] >= wait) //\u8fd9\u91ccj\u5927\u4e8e\u5f53\u524d\u9ad8\u5ea6\u624d\u80fd\u8f6c\u79fb\n                f[i][j] = max(f[i][j], f[i-1][j-a[i].h] - wait);\n            if(f[i][j] >= 0 && j >= D){\n                cout << a[i].t << endl;\n                return 0;\n            }\n        }\n    int ans = 0;\n    for(int i = 1; i <= G; i++)\n        if(f[i][0] > 0)\n            ans = max(ans, a[i].t + f[i][0]);\n    cout << ans << endl;\n}\n\n```\n",
        "postTime": 1566997117,
        "uid": 137010,
        "name": "Skyler1017",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u975e\u5e38\u7684\u50cf01\u80cc\u5305\u3002\u4f46\u662f\u53c8\u6709\u4e0d\u540c\u4e4b\u5904\u3002\n\n\u56e0\u4e3a01\u80cc\u5305\u4e2d\u7684\u201c\u4e0d\u88c5\u201d\u5c31\u4e0d\u4fee\u6539\u72b6\u6001\uff0c\u8fd9\u91cc\u4e0d\u88c5\u5219\u4e5f\u8981\u4fee\u6539\u72b6\u6001\u3002\n\n\u4e0d\u8fc7\u8fd9\u5e76\u6ca1\u6709\u592a\u5927\u5f71\u54cd\u3002\n\n\u7528 f [i][j]\u5b58\u50a8\u5728\u6254\u8fdb\u53bbi\u4e2a\u5783\u573e\uff0c\u9ad8\u5ea6\u4e3aj\u65f6\u7684\u6700\u5927\u751f\u547d\u503c\u3002\n\n \u6ce8\u610f\u9898\u76ee\u7528\u8bcd\uff1a10\u5c0f\u65f6**\u5185**\u3002\n\t\n \t\u4e5f\u5c31\u662f\u8bf4\uff1a\u5f53f[i][j]=0\u65f6\uff0c\u53ea\u662f\u6fd2\u6b7b\uff08\u8fd8\u6d3b\u7740\uff09\uff0c\u5976\u725b\u8fd8\u53ef\u4ee5\u64cd\u4f5c\u5783\u573e\u3002\n\t\u6240\u4ee5\u521d\u59cb\u5316\u65f6\u7684f\u6570\u7ec4\u8981\u8d4b-1\u3002\n\n\u8981\u8bb0\u5f97\u521d\u59cb\u5316\u8fb9\u754cf[0][0]=10\uff1a\u5f53\u6254\u8fdb\u53bb0\u4e2a\u5783\u573e\uff0c\u9ad8\u5ea6\u4e3a0\u65f6\uff0c\u5976\u725b\u7684\u751f\u547d\u503c\u4e3a10\u3002\n\n\u6bcf\u6bb5\u65f6\u95f4\u6d88\u8017\u7684\u80fd\u91cf\u4e3ax[i+1].t\u2212x[i].t\u3002\n\t\u522b\u5fd8\u4e86\uff1a\u6837\u4f8b\u5177\u6709\u8ff7\u60d1\u6027\u3002\u9898\u76ee\u4e2d\u5e76\u6ca1\u6709\u8bf4{Ti}\u5355\u8c03\u3002\u90a3\u4e48\u5bf9\u4e8e\u5783\u573e\uff0c\u8fd8\u8981\u4ee5\u65f6\u95f4\u4e3a\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e00\u904d\u3002\n\n\u8ba1\u7b97\u6700\u957f\u53ef\u4ee5\u5b58\u6d3b\u591a\u957f\u65f6\u95f4\u5c31\u662f\u4e0d\u4f7f\u7528\u5783\u573e\uff0c\u53ea\u5403\u5783\u573e\uff0c\u76f4\u5230\u5976\u725b\u575a\u6301\u4e0d\u4e0b\u53bb\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\u89c1\u4ee3\u7801\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100010;\nstruct node{\n\tint t,l,h;\n}x[N];\nint he,n;\nint f[110][1010];\nbool cmp(node a,node b){\n\treturn a.t<b.t;\n} \nint main(){\n\tcin>>he>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>x[i].t>>x[i].l>>x[i].h;\n\t}\n\tmemset(f,-1,sizeof f);\n\tsort(x+1,x+1+n,cmp);\n\tf[0][0]=10;\n\tx[0].t=0,x[0].l=0,x[0].h=0;\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=0;j<he;j++){\n\t\t\tif(f[i][j]<0)continue;\n           //\u6ca1\u6709\u8f6c\u79fb\u5230\u8fc7\u6216\u5976\u725b\u5df2\u6b7b\n\t\t\tif(j+x[i+1].h>=he&&f[i][j]>=x[i+1].t-x[i].t){\n                printf(\"%d\\n\",x[i+1].t);\n                return 0;\n            }\n/*\u65e2\u6ee1\u8db3\u4e0b\u4e00\u4e2a\u5783\u573e\u53ef\u4ee5\u76f4\u63a5\u8df3\u51fa\u53bb\uff0c\u53c8\u6ee1\u8db3\u5976\u725b\u7684\u80fd\u91cf\u80fd\u575a\u6301\u5230\u4e0b\u4e00\u4e2a\u5783\u573e\u3002\n \u90a3\u4e48\uff0c\u8fd9\u65f6\u5c31\u662f\u7b54\u6848*/\n    \n    //\u72b6\u6001\u8f6c\u79fb\n            if(f[i][j]-x[i+1].t+x[i].t>=0)\n                f[i+1][j+x[i+1].h]=f[i][j]-x[i+1].t+x[i].t;\n                //\u4f7f\u7528\u5783\u573e\u589e\u52a0\u9ad8\u5ea6\uff0c\u51cf\u5c11\u80fd\u91cf\n            if(f[i][j]-x[i+1].t+x[i].t>=0)\n                f[i+1][j]=max(f[i+1][j],f[i][j]-x[i+1].t+x[i].t+x[i+1].l);\n                //\u5403\u6389\u5783\u573e\uff0c\u9ad8\u5ea6\u4e0d\u53d8\uff0c\u80fd\u91cf\u589e\u52a0\u3002\n                //\u4f46\u6b64\u65f6\uff0c\u6211\u4eec\u8981\u8003\u8651\u4e4b\u524df[i][j]\u662f\u6709\u8f6c\u79fb\u5230\u8fc7\uff0c\u5982\u679c\u6709\uff0c\u54ea\u79cd\u66f4\u4f18\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u76f4\u63a5\u66f4\u65b0\u3002\n                /*\u8fd9\u65f6\uff0c\u6570\u7ec4f\u8d4b\u503c\u4e3a\u8d1f\u6570\u7684\u597d\u5904\u6765\u4e86\uff0c\u6ee1\u8db3f[i][j]-x[i+1].t+x[i].t>=0\uff0c\u90a3\u4e48\u5976\u725b\u751f\u547d\u4e0d\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u76f4\u63a5\u7528max\u5373\u53ef\u3002*/\n\t\t}\n\t}\n   //\u5982\u679c\u8fdb\u884c\u5230\u5f53\u524d\u72b6\u6001\uff0c\u8bf4\u660e\u5976\u725b\u6b7b\u4ea1\uff0c\u8ba1\u7b97\u6700\u957f\u53ef\u4ee5\u5b58\u6d3b\u591a\u957f\u65f6\u95f4\u3002\n\tint m=10,sum=0;//m\u662f\u73b0\u6709\u80fd\u91cf\uff0csum\u662f\u5df2\u7ecf\u7528\u8fc7\u7684\u80fd\u91cf\n    for(int i=1;i<=n;i++){\n        if(x[i].t-x[i-1].t>m){//\u5976\u725b\u575a\u6301\u4e0d\u4e0b\u53bb\u4e86\n            printf(\"%d\\n\",sum+m);\n            return 0;\n        }\n        sum+=x[i].t-x[i-1].t;\n        m-=x[i].t-x[i-1].t;\n        m+=x[i].l;//m\u662f\u8fd8\u80fd\u575a\u6301\u591a\u4e45\n    }\n    printf(\"%d\\n\",sum+m);\n    return 0;\n}\n```\n",
        "postTime": 1565231169,
        "uid": 204384,
        "name": "kaiyuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u7801\u4e8610min\u67e5\u4e862h\u7684\u9519\u3002\u3002\u3002\u88ab\u5751\u5230\u7edd\u671b\n\n==============================================================\n\n\u76f4\u63a5\u65e0\u8111\u4e0a\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u5982\u4e0b\u60c5\u51b5\u9000\u51fa\u51fd\u6570\uff1a\n\n1.\u5f53\u524d\u5783\u573e\u6389\u4e0b\u6765\u7684\u65f6\u5019\u725b\u5df2\u7ecf\u51c9\u4e86\uff08\u6ce8\u610f\u5f53\u725b\u7684\u6700\u5927\u5b58\u6d3b\u65f6\u95f4==\u5f53\u524d\u65f6\u95f4\u65f6\u725b\u8fd8\u662f\u6d3b\u7740\u7684\uff09\n\n2.\u5806\u4e0a\u5f53\u524d\u5783\u573e\u725b\u5c31\u51fa\u53bb\u4e86\uff08h+g[i]>=m\uff09\n\n3.\u6ca1\u5783\u573e\u4e86\uff08\u725b\u8fdf\u65e9\u8981\u51c9\u5bf9\u5427\uff09\n\n\u5426\u5219\u8981\u4e48\u5403\u6389\u5f53\u524d\u5783\u573e\u8981\u4e48\u5806\u4e0a\u5f53\u524d\u5783\u573e\u53d6\u4e2amin\n\n\u5982\u679c\u51fa\u4e0d\u53bb\u5c31\u628a\u6240\u6709\u5783\u573e\u5403\u6389\n\n\u8be6\u89c1\u4ee3\u7801\n\n==============================================================\n\n\u5751\u70b9\uff1a\n\n1.\u5783\u573e\u4e0d\u662f\u6309\u65f6\u95f4\u987a\u5e8f\u7ed9\u51fa\u7684\uff0c\u8981\u6392\u5e8f\n\n2.\u5982\u679c\u51fa\u4e0d\u53bb\u7684\u8bdd\u4e0d\u80fd\u65e0\u8111\u628a\u6240\u6709\u5783\u573e\u7684\u5b58\u6d3b\u65f6\u95f4\u52a0\u8d77\u6765\uff0c\u8981\u6ce8\u610f\u4e0b\u4e00\u4e2a\u5783\u573e\u6389\u4e0b\u6765\u7684\u65f6\u5019\u725b\u662f\u4e0d\u662f\u5df2\u7ecf\u51c9\u4e86\n\n==============================================================\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m,dp[110][1010][110];\nstruct node{int tim,f,g;}a[110];\nint cmp(const node &x,const node &y){return x.tim<y.tim;}\nint dfs(int x,int t,int h){\n\tif (x>n||t<a[x].tim) return 0x3f3f3f3f;//\u6ca1\u5783\u573e\u4e86\u6216\u8005\u725b\u51c9\u4e86 inf\u8868\u793a\u51fa\u4e0d\u53bb \n\tif (h+a[x].g>=m) return a[x].tim;//\u725b\u51fa\u53bb\u4e86 \n\tif (dp[x][t][h]) return dp[x][t][h];\n\treturn dp[x][t][h]=min(dfs(x+1,t+a[x].f,h),dfs(x+1,t,h+a[x].g));//\u8f6c\u79fb \n}\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\tfor (int i=1;i<=n;++i) scanf(\"%d%d%d\",&a[i].tim,&a[i].f,&a[i].g);\n\tsort(a+1,a+n+1,cmp);//\u5751 \n\tif (dfs(1,10,0)!=0x3f3f3f3f) printf(\"%d\\n\",dp[1][10][0]);\n\telse{\n\t\tint ans=10;\n\t\tfor (int i=1;i<=n;++i)\n\t\t\tif (ans<a[i].tim) break;//\u5751 \n\t\t\telse ans+=a[i].f;\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1531363037,
        "uid": 30419,
        "name": "lzoi_lhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u6bcf\u843d\u4e0b\u4e00\u4e2a\u5783\u573e\uff0c\u6709\u4e24\u4e2a\u9009\u62e9\u2014\u2014\u5403\u6389\u6216\u645e\u8d77\u6765\uff0c\u645e\u5230\u4e00\u5b9a\u9ad8\u5ea6\u5373\u53ef\u3002\n\n\u90a3\u4e48\u72b6\u6001\u5f88\u597d\u8868\u793a\uff0c\u73b0\u5728\u6709\u4e09\u4e2a\u5143\u7d20\uff0c\u751f\u547d\uff0c\u9ad8\u5ea6\uff0c\u65f6\u95f4\u8868\u793a\u72b6\u6001\u3002\n\n\u5b9e\u9645\u4e0a\u53ef\u4ee5\u538b\u7f29\u4e00\u7ef4\uff0c\u5373f[i][j]\u8868\u793a\u7b2ci\u4e2a\u5783\u573e\u645e\u4e86j\u9ad8\u5ea6\u65f6\u7684\u751f\u547d\u503c\uff0c\u548c\u80cc\u5305\u95ee\u9898\u76f8\u4f3c\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<iomanip>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint d,n,f[1001][101];\nstruct po{\n    int t,li,h;\n}a[101];\nint cmp(po x,po y)\n{\n    return x.t<y.t;\n}\nint main()\n{\n    cin>>d>>n;\n    for(int i=1;i<=n;++i)\n    cin>>a[i].t>>a[i].li>>a[i].h;\n    sort(a+1,a+n+1,cmp);\n    for(int i=0;i<=n;++i)\n    for(int j=0;j<=d;++j)\n    f[i][j]=-9999;\n    f[0][0]=10;a[0].t=0;\n    for(int i=1;i<=n;++i)\n     for(int j=0;j<=d;++j)\n      {\n          if(f[i-1][j]-(a[i].t-a[i-1].t)<0) continue;\n          if(j+a[i].h>=d) \n          {\n              cout<<a[i].t;\n              return 0;\n          }\n          f[i][j+a[i].h]=max(f[i][j+a[i].h],f[i-1][j]-(a[i].t-a[i-1].t));\n          f[i][j]=max(f[i][j],f[i-1][j]-(a[i].t-a[i-1].t)+a[i].li);\n      }\n      int ans=-999;\n    for(int i=1;i<=n;++i)\n    if(f[i][0]+a[i].t>ans) ans=f[i][0]+a[i].t;\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1504148325,
        "uid": 43140,
        "name": "zhaoyifan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u8d34\u4e2a\u975e\u6ee1\u5206\u9898\u89e3\uff1f\uff1f\n\n\u770b\u5230\u5927\u5bb6\u90fd\u662fDP\u6765\u5199\u7684\uff0c\u601d\u8def\u90fd\u5df2\u7ecf\u5f88\u68d2\u4e86\u3002\n\n\u6211\u7a81\u53d1\u5947\u60f3\u60f3\u5199\u4e2a\u641c\u7d22\uff08\u50bb\u5b50\u8138\uff09\n\n\u7531\u4e8e\u8fd9\u9898\u6570\u636e\u592a\u5f31\uff0c\u7279\u5224\u4e00\u4e0b\u641c\u7d22\u7684\u5c42\u6570\uff0c\u8d85\u8fc77ffff\u5c42\u5c31\u505c\u6b62\u641c\u7d22\u8f93\u51fa\u76ee\u524d\u641c\u5230\u7684\u7b54\u6848\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u8f93\u51fa\u6700\u5927\u5b58\u6d3b\u65f6\u95f4\n\n\u53ef\u4ee5\u62ff90\u5206\uff0c90ms\u8fc7\uff0c\u5982\u679c\u771f\u7684\u662f\u6bd4\u8d5b\u9898\uff0c\u8fd9\u4e2a\u6210\u7ee9\u8fd8\u662f\u5f88\u53ef\u89c2\u7684\u3002\u3002\u3002\u3002\u3002\u3002\u3002\n\n\n```cpp\n#include<iostream>\n#include<stdio.h>\n#include<map>\n#include<algorithm>\n//#include<unordered_map>\nusing namespace std;\nint st=0;\nint st2=0;\nstruct fs\n{\n    int t;\n    int f;\n    int h;\n}dust[1001];\nint comp(fs a,fs b)\n{\n    return a.t<b.t;\n}\n//int t[1001]={0},f[1001]={0},h[1001]={0};\nint escape=0;\nint yg=0x7fffff;\n//map<int,int> num;\nint d=0,g=0;\nint fld=0;\nvoid dfs(int dep,int id,int lv)\n{\n    if(fld>0x7ffff) \n    {\n        if(escape==1)\n        {\n            cout<<yg;\n            exit(0);\n        }\n        cout<<st+10;;\n        exit(0);\n    }\n    fld++;\n    int ht=dep;\n    for(int i=id;i<=g;i++)\n    {\n        int lim=dust[i].t;\n        if(lim>lv) return;\n        st2=max(st2,lv+dust[i].f);\n        dfs(ht,i+1,lv+dust[i].f);\n        ht+=dust[i].h;\n        if(ht>=d)\n        {\n            escape=1;\n            yg=min(yg,lim);\n        }\n    }\n}\nint main()\n{\n    cin>>d>>g;\n    for(int i=1;i<=g;i++)\n    {\n        //cin>>t[i]>>f[i]>>h[i];\n        cin>>dust[i].t>>dust[i].f>>dust[i].h;\n        st+=dust[i].f;\n        //num[i]=t[i];\n    }\n    sort(dust+1,dust+1+g,comp);\n//    for(int i=1;i<=g;i++)\n//    {\n//        cout<<dust[i].t;\n//    }\n    dfs(0,1,10);\n    if(escape==1)\n    {\n        cout<<yg;    \n    }\n    else\n    {\n        cout<<st2;\n    }\n    \n}\n```",
        "postTime": 1489932981,
        "uid": 7882,
        "name": "zhegexiankabutaileng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u52a8\u6001\u89c4\u5212+\u5192\u6ce1\u6392\u5e8f\uff1a\n\n\u6392\u5e8f\uff1a\n\n```cpp\nfor i:=1 to n do \n      for j:=i+1 to n do \n        if t[i]>t[j] then begin \n                            c:=t[i];t[i]:=t[j];t[j]:=c; \n                            c:=l[i];l[i]:=l[j];l[j]:=c; \n                            c:=h[i];h[i]:=h[j];h[j]:=c; \n                          end; \n```\n\u52a8\u6001\u89c4\u5212\u8fc7\u7a0b\uff1a\n```cpp\nfor i:=0 to n do for j:=0 to m do a[i,j]:=-maxlongint; \n    a[0,0]:=10; \n    ansl:=0; \n    for i:=1 to n do \n      for j:=0 to m do \n        begin \n        if a[i-1,j]>=t[i]-t[i-1] then a[i,j]:=a[i-1,j]+l[i]-t[i]+t[i-1]; \n        if (j-h[i]>=0)and(a[i-1,j-h[i]]>=t[i]-t[i-1]) then a[i,j]:=max(a[i,j],a[i-1,j-h[i]]-t[i]+t[i-1]); \n        if (j=m)and(a[i,m]<>-maxlongint) then print(t[i]); \n        if a[i,j]+t[i]>ansl then ansl:=a[i,j]+t[i]; \nend;\n```",
        "postTime": 1425904753,
        "uid": 3911,
        "name": "Skywalker_David",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "# \u5f88\u660e\u663e\u8fd9\u662f\u4e00\u4e2a\u80cc\u5305\u9898\u3002\u56e0\u4e3a\u5f88\u660e\u663e\u6bcf\u4e2a\u5783\u573e\u6709\u4e24\u79cd\u72b6\u6001\u2014\u2014\u5403\u6216\u5806\n## \u4f46\u662f\u600e\u4e48\u5bf9\u5e94\u6211\u4eec\u7684\u6a21\u677f\u5462\uff1f\n#### 01\u80cc\u5305\u662f\u9650\u5b9a\u91cd\u91cf\u627e\u5230\u6700\u5927\u7684\u4ef7\u503c\u3002\n\u8fd9\u4e2a\u9898\u7684\u5783\u573e\u6709\u4e09\u4e2a\u5c5e\u6027\uff0c\u65f6\u95f4\u3001\u589e\u52a0\u7684\u9ad8\u5ea6\u3001\u589e\u52a0\u7684\u751f\u547d\u3002 \n\n\n\u65f6\u95f4\u662f\u6765\u51b3\u5b9a\u5783\u573e\u7684\u987a\u5e8f\u7684\uff08\u6240\u4ee5\u8981sort\u6570\u636e\uff09\u3002  \n\u6211\u4eec\u6ce8\u610f\u5230\u9ad8\u5ea6\u662f\u6709\u9650\u7684**\u5f53\u5806\u653e\u5783\u573e\u9ad8\u5ea6\u5927\u4e8e\u7b49\u4e8eD**\u5c31\u505c\u6b62\u3002  \n\u6240\u4ee5\u6211\u4eec\u5c06**dp[i][j]\u8868\u793a\u4e3a\u7b2ci\u4e2a\u5783\u573ej\u9ad8\u5ea6\u62e5\u6709\u7684\u751f\u547d\u7684\u6700\u5927\u503c**\u3002 \u521d\u59cb\u5316dp[0][0]=10\u3002\n\n\n\u5f53j+h[i]<=D\u65f6\uff0c\u6211\u4eec\u5bf9\u5783\u573e\u8fdb\u884c\u64cd\u4f5c  \n**dp[i][j]+=f[i-1][j]**//\u5c06\u5783\u573e\u5403\u4e0b\u53bb\u662f\u6700\u597d\u7684\u7b54\u6848   \n**dp[i][j+h[i]]=max(dp[i-1][j+h[i],dp[i-1][j]-f[i-1][j]\uff09**//\u6bd4\u8f83\u5806\u8fd9\u4e2a\u5783\u573e\u548c\u5806\u5176\u4ed6\u5783\u573e\u80fd\u83b7\u5f97\u7684\u751f\u547d\uff0c\u7b54\u6848\u4e3a\u6700\u5927\u503c\u3002\n\n### \u6700\u540e\u5982\u679c\u80fd\u51fa\u73b0j+h[i]<=D\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa\u6b64\u65f6\u7684\u6295\u653e\u5783\u573e\u65f6\u95f4t[i]\n### \u5426\u5219\u5c31\u8f93\u5165dp[n][0]\n\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t[1001];\nbool cmp(int a,int b)\n{\n\treturn t[a]<t[b];\n}\n\nint main()\n{\n\tint d,n;\n\tcin>>d>>n;\n\tint f[n+1],h[n+1];\n\tint biao[n+1];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>t[i]>>f[i]>>h[i];\n\t\tbiao[i]=i;\n\t}\n\tsort(biao+1,biao+1+n,cmp);\n\tint ans[101];\n\tfor(int i=0;i<101;i++)\n\tans[i]=0;\n\tans[0]=10;\n\tint tt=0;\n\tint flag=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\tif(flag==1)break;//\u5f97\u5230\u6700\u5c0f\u65f6\u95f4\u540e\u4e0d\u5fc5\u5bf9\u540e\u9762\u7684\u5783\u573e\u8fdb\u884c\u64cd\u4f5c\n\tfor(int j=d;j>=0;j--)\n\t{\n\t\tif(ans[j]>=t[biao[i]])\n\t\t{\n\t\t\tans[j]+=f[biao[i]];\t\t\n\t\t\tif(j+h[biao[i]]>=d)\n\t\t\t{\n\t\t\t\ttt=t[biao[i]];\n\t\t\t\tflag=1;\n\t\t\t}\n\t\t\telse\n\t\t\tans[j+h[biao[i]]]=max(ans[j]-f[biao[i]],ans[j+h[biao[i]]]);\n\t\t}\n\t}\n\t}\n\tif(flag)printf(\"%d\",tt);\n\telse printf(\"%d\",ans[0]);\n    return 0;\n}\n\n```\n",
        "postTime": 1575722040,
        "uid": 201165,
        "name": "\u7c89\u5237\u5320",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "### 1.\u9898\u89e3\n\u9996\u5148\u8be5\u9898\u662f\u4e00\u4e2a\u7ebf\u6027dp\u95ee\u9898 \u7531\u4e8e\u8d2a\u5fc3\u7684\u8003\u8651\u6211\u4eec\u6bcf\u6b21\u5230\u5f53\u524d\u65f6\u95f4\u6709\u53ef\u4ee5\u53d6\u7684\u5783\u573e\u90fd\u4f1a\u76f4\u63a5\u6361\u8d77\u800c\u4e0d\u4f1a\u518d\u8fc7\u4e00\u4f1a\u513f \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u51fa\u73b0\u65f6\u95f4\u4f5c\u4e3a\u7b56\u7565\u70b9 \u8fd9\u6837\u4ece\u5934\u5f00\u59cbdp \u6240\u4ee5\u6211\u4eec\u9996\u5148\u9700\u8981\u5bf9a\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\n\n\u6392\u5e8f\u4ee5\u540e\u5c31\u53ef\u4ee5\u4ece\u7b2c\u4e00\u4e2a\u5783\u573e\u5230\u6700\u540e\u4e00\u4e2a\u5783\u573e\u6765dp\u4e86 \u90a3dp\u65b9\u7a0b\u5982\u4f55\u8bbe\u8ba1\u5462 \u6211\u4eec\u8003\u8651\u5047\u5982\u5f53\u524d\u6709\u66f4\u591a\u7684\u751f\u547d\u7684\u8bdd\u90a3\u4e48\u540e\u7eed\u9009\u62e9\u4e5f\u6709\u66f4\u591a\u7684\u4f59\u5730 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe$f[i][j]$\u8868\u793a\u5f53\u524d\u8003\u8651\u5230\u7b2c$i$\u4e2a\u7269\u54c1\u4e14\u5728$j$\u9ad8\u5ea6\u65f6\u751f\u547d\u503c\u6700\u5927\u662f\u591a\u5c11 \n\n\u7136\u540e\u548c\u80cc\u5305\u95ee\u9898\u4e00\u6837\u7684\u5206\u6790\u65b9\u6cd5 \n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u91cc\u7531\u80cc\u5305\u7684\u53d6\u6216\u4e0d\u53d6\u53d8\u6210\u4e86\u662f\u5806\u8fd8\u662f\u5403 \u6240\u4ee5\u6211\u4eec\u7684$i$\u4e00\u5b9a\u662f\u4ece$i-1$\u63a8\u8fc7\u6765\u7684 \n\u90a3\u6211\u4eec\u73b0\u5728\u8003\u8651$f[i-1][j]$\u5047\u5982\u6b64\u65f6\u8fd9\u4e2a\u72b6\u6001\u7684\u751f\u547d\u503c\u5c0f\u4e8e$t_i-t_{i-1}$\u90a3\u4e48\u5c31\u4e0d\u80fd\u9012\u63a8\u8fc7\u6765 \u6240\u4ee5\u53ea\u9700\u8981\u8003\u8651$f[i-1][j]>=t_i-t_{i-1}$ \u9700\u8981\u6ce8\u610f\u7684\u662f\u53ef\u80fd\u51fa\u73b0\u4e00\u4e9b\u65f6\u95f4\u76f8\u540c\u7684\u5783\u573e \u6240\u4ee5\u6709\u53ef\u80fd\u5dee\u503c\u4e3a0 \u90a3\u4e48\u5047\u5982\u6211\u4eec\u521d\u59cb\u5316f\u4e3a0\u5c31\u53ef\u80fd\u4f1a\u66f4\u65b0\u4e00\u4e9b\u83ab\u540d\u5176\u5999\u7684\u6ca1\u6709\u610f\u4e49\u7684\u72b6\u6001\u7136\u540e\u5c31WA\u4e86 \u6240\u4ee5\u6211\u4eec\u5148\u7ed9f\u521d\u59cb\u5316\u4e00\u4e2a\u8d1f\u6570 \n\n\u73b0\u5728$i-1$\u53ef\u4ee5\u8f6c\u79fb\u5230$i$\u4e86 \u90a3\u4e48\n1. \u7b2c$i$\u4e2a\u7269\u54c1\u7528\u6765\u5403\n\n\u90a3\u4e48$f[i][j]=max(f[i][j],f[i-1][j]-(t_i-t_{i-1})+w_i)$\n\n\u6ce8\u610f\u6211\u4eec\u7528$w$\u6765\u8868\u793a\u8fd9\u4e2a\u5783\u573e\u80fd\u63d0\u4f9b\u7684\u751f\u547d\u503c\n\n\u8fd9\u4e2a\u65b9\u7a0b\u8fd8\u662f\u6bd4\u8f83\u597d\u61c2\u7684 \u6211\u4eec$f[i][j]$\u4ece$f[i-1][j]$\u63a8\u8fc7\u6765 \u9996\u5148\u9700\u8981\u82b1\u8d39$t_i-t_{i-1}$\u7684\u751f\u547d\u503c \u7136\u540e\u5403\u4e86$i$\u4ee5\u540e\u53c8\u52a0\u4e86$w_i$\u7684\u751f\u547d\u503c\n\n2.\u7b2c$i$\u4e2a\u7269\u54c1\u7528\u6765\u5806\n\n\u90a3\u4e48\u6211\u4eec$f[i-1][j]$\u5c31\u53ef\u4ee5\u66f4\u65b0\u5230$f[i][j+h_i]$\u6ce8\u610f\u5047\u5982\u8fd9\u65f6\u5019\u9ad8\u5ea6$j+h_i$\u5927\u4e8e\u7b49\u4e8ed\u5c31\u5df2\u7ecf\u53ef\u4ee5\u4e86 \u76f4\u63a5\u8f93\u51fa\u5230\u7b2c$i$\u4e2a\u70b9\u7684\u65f6\u95f4\u5373\u53ef\n\n\u5047\u5982\u8fd8\u662f\u5728\u8303\u56f4\u5185\u7684\u8bdd\u5c31\u6709\n\n$f[i][j+h_i]=max(f[i][j+h_i],f[i-1][j]-(t_i-t_{i-1}))$\n\u8fd9\u4e2a\u5f0f\u5b50\u4e0e\u4e0a\u9762\u90a3\u4e2a\u5dee\u4e0d\u591a \u5c31\u662f\u4ece$i-1$\u8f6c\u79fb\u5230$i$ \u6b64\u65f6\u82b1\u8d39\u4e86$t_i-t_{i-1}$\u7136\u540e\u9ad8\u5ea6\u7531$j$\u53d8\u6210\u4e86$j+h_i$\n\n\u5047\u5982$n$\u4e2a\u7269\u54c1\u8003\u8651\u5b8c\u4e86\u8fd8\u6ca1\u6709\u627e\u5230\u8df3\u51fa\u53bb\u7684\u529e\u6cd5\u90a3\u4ed6\u5c31\u88ab\u56f0\u5728\u4e95\u91cc\u4e86 \u8fd9\u65f6\u5019\u6211\u4eec\u9700\u8981\u8f93\u51fa\u5b83\u6700\u591a\u5b58\u6d3b\u591a\u4e45 \u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa\u6765 \u6bcf\u6b21\u9047\u5230\u7269\u54c1\u5c31\u628a\u5f53\u524d\u751f\u547d\u52a0\u4e0a\u5b83\u7684\u8d21\u732e \u5047\u5982\u751f\u547d\u503c\u5df2\u7ecf\u591f\u4e0d\u5230\u7b2c$i$\u4e2a\u7269\u54c1\u51fa\u73b0\u7684\u65f6\u95f4\u4e86 \u5c31\u8f93\u51fa\u5f53\u524d\u65f6\u95f4\u597d\u4e86 \u8fd9\u5c31\u662f\u4e2a\u7b80\u5355\u7684\u8d2a\u5fc3\n### 2.AC\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=250;\nint f[maxn][maxn];\nint n,m;\nstruct node{\n\tint t,h,f;\n\tbool operator<(const node&p)\n\t{\n\t\tif(t==p.t) return t<p.t;\n\t}\n}a[maxn];\nint main()\n{\n\tcin>>m>>n;\n\tfor(int i=1;i<=n;i++) cin>>a[i].t>>a[i].f>>a[i].h;\n\tsort(a+1,a+n+1);\n\tmemset(f,-1,sizeof(f));\n\tf[0][0]=10;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=0;j<m;j++)\n\t\t{\n\t\t\tif(f[i-1][j]>=a[i].t-a[i-1].t)\n\t\t\t{\n\t\t\t\tif(j+a[i].h>=m) \n\t\t\t\t{\n\t\t\t\t\tcout<<a[i].t<<endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tf[i][j+a[i].h]=max(f[i][j+a[i].h],f[i-1][j]-a[i].t+a[i-1].t);\n\t\t\t\tf[i][j]=max(f[i][j],f[i-1][j]-a[i].t+a[i-1].t+a[i].f);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=10;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(ans<a[i].t) break;\n\t\tans+=a[i].f;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1571407810,
        "uid": 50976,
        "name": "songhn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "**~~\u8fd9\u9053\u9898\u849f\u84bb\u8c03\u4e86\u5927\u534a\u5929~~\u3002\u3002\u8fd9\u7bc7\u9898\u89e3\u5305\u542b\u4e86\u6211\u81ea\u5df1\u5728\u505a\u8fd9\u9053\u9898\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u9519\u8bef\u601d\u8def\u4ee3\u7801\u548c\u601d\u8def\u5386\u7a0b\uff0c\u53ef\u4ee5\u5e2e\u52a9\u66f4\u597d\u7684\u7406\u89e3\u8fd9\u9053\u9898\u6df1\u5c42\u7684dp\u601d\u60f3\uff0c\u5bf9dp\u4e0d\u719f\u7684\u6216\u60f3\u4e0d\u51fa\u6765\u7684\u53ef\u4ee5\u770b\u770b\u8fd9\u7bc7\u9898\u89e3~~**\n\n1.\u9996\u5148\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\u6211\u7684\u8111\u5b50\u91cc\u7acb\u523b\u95ea\u73b0\u51fa\u4e86\u4e00\u4e2adp\u601d\u8def\uff0c\u5373f[i][j][k]\u8868\u793a\u524di\u4e2a\u7269\u54c1\u9ad8\u5ea6\u4e3aj\uff0c\u8840\u91cf\u4e3ak\u7684\u6700\u5c11\u65f6\u95f4\uff0c\u663e\u7136\u8fd9\u6837\u662f\u4f1a\u7206\u7a7a\u95f4\u7684\uff0c\u4e8e\u662f\u6211\u53c8\u60f3\u5230\u901a\u8fc7\u6eda\u52a8\u6570\u7ec4\u6eda\u52a8i\u6765\u4f18\u5316\u7a7a\u95f4\uff0c\u4f46\u662f\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(ijk)\uff0c\u5e76\u4e14\u6700\u540e\u8fd8\u8981\u679a\u4e3ej\uff0ck\u6765\u5bfb\u627e\u7b54\u6848\uff0c\u4e8e\u662f\u6211\u5c31\u653e\u5f03\u4e86\u8fd9\u4e2a\u505a\u6cd5\n\n2.\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e00\u79cd\u4e8c\u7ef4\u505a\u6cd5\uff1b\u6211\u4eec\u53ef\u4ee5\u8ba9\u65f6\u95f4\u4f5c\u4e3a\u5224\u65ad\u8f6c\u79fb\u7684\u4f9d\u636e\uff0c\u5219\u53ef\u4ee5\u4f18\u5316\u4e00\u7ef4f[i][j]\u8868\u793a\u524di\u4e2a\u7269\u54c1\u645e\u5230j\u9ad8\u5ea6\u7684\u6700\u5927\u8840\u91cf\uff0c\u518d\u6eda\u52a8\u4e00\u4e0bi\u7ef4\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\uff0c\u4e8e\u662f\u6211\u975e\u5e38\u5f00\u5fc3\u7684\u5199\u4e86\u4e0b\u9762\u7684~~\u9519\u8bef~~\u4ee3\u7801\uff1b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint d,n,f[130],ti[110],ans=-1;\nstruct ren{\n\tint t,e,h;\n}a[110];\nbool cmp(ren a,ren b){\n\treturn a.t<b.t;\n}\nint main(){\n\tcin>>d>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i].t>>a[i].e>>a[i].h;\n\tsort(a+1,a+n+1,cmp);\n    for(int i=1;i<=n;i++)ti[i]=a[i].t-a[i-1].t;\n    memset(f,-0x3f,sizeof(f));\n    f[0]=10;\n    for(int i=1;i<=n;i++)\n        for(int j=d+25;j>=0;j--){\n        \tif(j-a[i].h>=0&&f[j-a[i].h]>=0)f[j]=max(f[j],f[j-a[i].h]-ti[i]);\n        \tif(f[j]-ti[i]>=0)f[j]=max(f[j],f[j]-ti[i]+a[i].e);\n        \tif(j>=d&&f[j]>=0){cout<<a[i].t;return 0;}\n        \tif(f[j]>=0)ans=max(ans,f[j]+a[i].t);\n\t\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\u53ef\u4ee5\u53d1\u73b0\u4e0e\u4e8c\u7ef4\u6b63\u89e3\u4e0d\u540c\u7684\u662f\uff0c\u6211\u60f3\u5230\u7684\u662f\u7528f\u5b58\u50a8\u73b0\u5728\u65f6\u95f4\u5269\u4f59\u7684\u8840\u91cf\uff0c\u800c\u4e0d\u662f\u4e00\u5171\u6709\u7684\u603b\u8840\u91cf\u6700\u540e\u4ea4\u4e0a\u53bb\u6253\u4e8618\u5206\uff0c\uff0c\uff0c\uff0c\u4e8e\u662f\u6211\u5f00\u59cb\u82e6\u601d\u8fd9\u91cc\u7684\u601d\u8def\u54ea\u91cc\u4e0d\u5bf9\uff0c\u8fd9\u91cc\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1b\n\n\u5047\u8bbe\u6211\u7684\u7b2c\u4e00\u5806\u5783\u573e\u662f\u8fd9\u6837\u7684:\u65f6\u95f4=6\uff1b\u80fd\u91cf=4\uff1b\u5373\u7b49\u8fd9\u5806\u5783\u573e\u9700\u8981\u7684\u80fd\u91cf\u5c0f\u4e8e\u5403\u8fd9\u5806\u5783\u573e\u5f97\u5230\u7684\u80fd\u91cf\uff0c\u90a3\u4e48f[0]\u4e0d\u4f1a\u66f4\u65b0\u800c\u4e00\u76f4\u4f1a\u4e3a10\uff0c\u5373\u5b83\u4e0d\u4f1a\u53bb\u5403\u8fd9\u6837\u7684\u5783\u573e\uff0c\u8fd9\u6837\u663e\u7136\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u662f\u4e0d\u4f18\u7684\uff0c\u5f53\u7136\u8fd9\u4e2a\u601d\u8defbug\u8fd8\u6709\u5f88\u591a\uff0c\u8fd9\u91cc\u53ea\u8bf4\u4e00\u4e2a\u6613\u61c2\u7684\u9519\u8bef\uff1b\n\n3.\u4e8e\u662f\u6211\u53c8\u60f3\u5230\uff0c\u5982\u679c\u8ba9f\u5b58\u50a8\u7684\u80fd\u91cf\u662f\u603b\u7684\u7d2f\u79ef\u7684\u80fd\u91cf\uff0c\u5373\u4e0d\u8003\u8651\u6d41\u5931\u7684\u80fd\u91cf\uff0cf\u4e0d\u4f1a\u53d8\u5c0f\uff0c\u6700\u540e\u5728\u7528\u73b0\u5728\u7684\u65f6\u95f4\u6bd4\u8f83\u5224\u65ad\uff0c\u90a3\u4e48\u4e0a\u9762\u7c7b\u4f3c\u7684bug\u5c31\u4e0d\u4f1a\u51fa\u73b0\uff0c\u8fd9\u4e5f\u5c31\u662f\u4e8c\u7ef4\u601d\u8def\u7684\u6b63\u89e3\u5566~~\n\u4e0b\u9762\u4e0aac\u4ee3\u7801  \u6211\u5c3d\u91cf\u5907\u6ce8\uff0c\u4e0d\u61c2\u5f97\u53ef\u4ee5\u79c1\u4fe1\u95ee\u6211\uff1b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint d,n,f[130];\nstruct ren{\n\tint t,e,h;\n}a[110];\nbool cmp(ren a,ren b){\n\treturn a.t<b.t;\n}\nint main(){\n\tcin>>d>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i].t>>a[i].e>>a[i].h;\n\tsort(a+1,a+n+1,cmp);//\u6309\u65f6\u95f4\u6392\u5e8f\n    f[0]=10;\n    for(int i=1;i<=n;i++)\n        for(int j=d;j>=0;j--){\n        \tif(f[j]>=a[i].t)f[j]=max(f[j],f[j]+a[i].e);\n            //\u5403\u7684\u8fd9\u79cd\u60c5\u51b5\u8981\u653e\u5728\u524d\u9762\uff0c\u5426\u5219\u5224\u65ad\u6240\u7528\u7684f[j]\u4f1a\u88ab\u5806\u7684\u60c5\u51b5\u66f4\u65b0\n        \tif(j-a[i].h>=0&&f[j-a[i].h]>=a[i].t){\n        \t\tf[j]=max(f[j],f[j-a[i].h]);\n        \t\tif(j>=d){cout<<a[i].t;return 0;}\n\t\t\t}\n\t\t}\n\tcout<<f[0];//\u6700\u957f\u5b58\u6d3b\u65f6\u95f4\uff1b\n\treturn 0;\n}\n```\n",
        "postTime": 1567586962,
        "uid": 126465,
        "name": "\u7130\u706b\u4fca\u4fca",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u5728\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u6309\u7167\u65f6\u95f4\u8fd9\u4e00\u7ef4\u5ea6\u8fdb\u884c\u52a8\u6001\u89c4\u5212\u3002\n\n\u8bbe$ f_{i,j}$ \u8868\u793a\u65f6\u95f4\u8f74\u524d $i$ \u4e2a\u5355\u4f4d\u65f6\u95f4\uff0c\u5976\u725b\u751f\u547d\u503c\u4e3a $j$ \u65f6\uff0c\u5976\u725b\u7684\u6700\u5927\u9ad8\u5ea6\u3002\n\n\u6ce8\u610f\u5230\uff0c\u540c\u4e00\u4e2a\u65f6\u95f4\u8f74\u8282\u70b9\u4e0a\u53ef\u80fd\u4f1a\u540c\u65f6\u6254\u4e0b\u591a\u4e2a\u5783\u573e\uff0c\u6240\u4ee5\u5728\u6bcf\u4e2a\u65f6\u95f4\u70b9\u4e2d\u9700\u8981\u4f7f\u7528$01$\u80cc\u5305\u6a21\u578b\u6765\u6311\u9009\u5783\u573e\u7684\u4e0d\u540c\u51b3\u7b56\u3002\n\n\u9996\u5148\uff0c\u8fd9\u4e2a\u65f6\u95f4\u8f74\u8282\u70b9\u53ef\u80fd\u6ca1\u6709\u6254\u4e0b\u5783\u573e\u6216\u8005\u5373\u4f7f\u6254\u4e0b\u5783\u573e\u4e5f\u4e0d\u4f7f\u7528\uff0c\u8fd9\u6837\u7684\u8bdd\u8f6c\u79fb\u5c31\u662f $ f_{i,j}=f_{i-1,j+1}$\u3002\n\n\u5176\u6b21\uff0c\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u5783\u573e\u6709\u4e24\u79cd\u4f7f\u7528\u65b9\u6cd5\uff0c\u53e0\u8d77\u6765($f_{i,j}+h$)\u6216\u8005\u7528\u6765\u6062\u590d\u751f\u547d($f_{i,j-f}$)\n\n\u6240\u4ee5\uff0c\u572801\u80cc\u5305\u4e2d\u8f6c\u79fb\u53ef\u4ee5\u8fd9\u4e48\u5199$f_{i,j} = max\\{f_{i,j}+h,f_{i,j-f}\\}$\n\n\u6ce8\u610f\u5012\u5e8f\u53d6\u5373\u53ef\u3002\n\t\n  \u4e3a\u4e86\u5904\u7406\u65b9\u4fbf\u5bf9\u4e8e\u4e0d\u53ef\u80fd\u7684\u51b3\u7b56\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u5176\u503c\u8d4b\u4e3a\u8d1f\u65e0\u7a77\u3002\n   \n  \u5982\u679c\u5728\u52a8\u6001\u89c4\u5212\u8fc7\u7a0b\u4e2d$ f_{i,j}\u2265D $ \u90a3\u4e48\u5728 $ i $ \u65f6\u523b\u5976\u725b\u5df2\u7ecf\u722c\u51fa\u4e95\u3002\n    \n  \u5982\u679c\u5728\u52a8\u6001\u89c4\u5212\u8fc7\u7a0b\u4e2d$ f_{i,j}\u2265 0 $\u90a3\u4e48\u5728 $i$ \u65f6\u523b\u5976\u725b\u4ecd\u7136\u5b58\u6d3b\u3002\n    \n  \u6700\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n```cpp\n# include <bits/stdc++.h>\nusing namespace std;\nconst int N=4e3+10,M=4e3+10;\nstruct rec{\n\tint f,h;\n}a[N];\nint f[N][M],D,G;\nvector<int>w[N];\nint main()\n{\n\tscanf(\"%d%d\",&D,&G);\n\tint MaxT=4000,SumF=4000;\n\tfor (int i=1;i<=G;i++) {\n\t\tint t; scanf(\"%d\",&t);\n\t\tscanf(\"%d%d\",&a[i].f,&a[i].h);\n\t\tw[t].push_back(i);\n\t}\n\tmemset(f,-0x3f,sizeof(f));\n\tf[0][10]=0; bool ok=false; int alive=0,ans=0x3f3f3f3f;\n\tfor (int i=1;i<=MaxT;i++) {\n\t\tfor(int j=0;j<=SumF;j++) f[i][j]=f[i-1][j+1];\n\t\tfor (int k=0;k<w[i].size();k++)\n\t\t\tfor (int j=SumF;j>=0;j--) {\n\t\t\t\tf[i][j]=f[i][j]+a[w[i][k]].h;\n\t\t\t\tif (j-a[w[i][k]].f>=0) f[i][j]=max(f[i][j],f[i][j-a[w[i][k]].f]);\n\t\t\t}\n\t\tfor(int j=0;j<=SumF;j++){\n\t\t\tif (f[i][j]>=D) ok=true,ans=min(ans,i);\n\t\t\tif (f[i][j]>=0) alive=max(alive,i);\n\t\t}\n\t}\n\tif (ok==false) printf(\"%d\\n\",alive);\n\telse printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1562417434,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u8fd9\u4e0d\u662fDP\uff0c\u4e0d\u662fDFS\n\n**\u8fd9\u91cc\u662fBFS**\n\n\u4e3a\u4ec0\u4e48\u91c7\u7528BFS?\n\n~~\u56e0\u4e3a\u849f\u84bb\u4e0d\u4f1aDP/DFS~~\n\n\u56e0\u4e3aBFS\u601d\u8def\u50cfDFS\u4e00\u6837\u7b80\u5355\uff0c\u590d\u6742\u5ea6\u53ef\u4ee5\u50cfDP\u4e00\u6837\u5c0f\n\n\u53ea\u9700\u5c0f\u5c0f\u7684\u4f18\u5316\uff1a\n\n\u51b3\u5b9a\u7b2ci\u4e2a\u5783\u573e\u540e\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/60914.png)\n\n\u7531\u4e8e\u751f\u547d\u503c\u8d8a\u5927\uff0c\u79bb\u4e95\u53e3\u9ad8\u5ea6\u8d8a\u5c0f\u624d\u53ef\u80fd\u662f\u6700\u4f18\u89e3\n\n\u6240\u4ee5\u4e0a\u56fe\u4e2d\u9664\u4e86\u5df2\u7ecf\u6807\u51fa\u7684\u70b9\u4e4b\u5916\uff0c\u6c38\u8fdc\u4e0d\u53ef\u80fd\u53d6\u5f97\u6700\u4f18\u89e3\n\n\u90a3\u4e48\u5269\u4e0b\u7684\u70b9\u90fd\u53ef\u5220\u53bb\n\n![](https://cdn.luogu.com.cn/upload/pic/60915.png)\n\n\u79bb\u4e95\u53e3\u7684\u9ad8\u5ea6$\\in[0,D]$\n\n**\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(DG)$**\n\n$D\\in[2,100],G\\in[1,100]$\n\n\u53ea\u8981\u4ece\u53f3\u5230\u5de6\uff0c\u4ece\u4e0b\u5230\u4e0a\u6309\u9ad8\u5ea6\u9012\u51cf\u53d6\u70b9\u5373\u53ef\n\n\n------------\n\n**\u5806\u5b9e\u73b0**\n```cpp\nstruct Q{\n\tint m,t,h;\n\tbool operator<(const Q x)const{//\u91cd\u8f7d\u5c0f\u4e8e\u53f7\u53cd\u5411\n\t\tif(m!=x.m)return x.m<m;\n\t\tif(t!=x.t)return x.t>t;\n\t\treturn x.h<h;\n\t}\n};\npriority_queue<Q>q;//\u5927\u6839\u5806\n```\n\n**\u5173\u952e\u90e8\u5206**\n```cpp\n\tq.push((Q){0,10,d});\n\tint maxlive=10,minout=inf;\n\tint num=0,minh=inf;\n\tQ tmp;\n\tfor(int i=0;tmp=q.top(),i=tmp.m,!q.empty()&&i<g;)\n\t{\n\t\tq.pop();\n\t\tif(a[i].t>tmp.t)continue;//\u5361\u95e8\u6b7b\u4e86\uff0c\u505c\u6b62\n\t\tif(i>num)num=tmp.m,minh=inf;\n\t\tif(tmp.h<minh)\n\t\t{\n\t\t\tif(tmp.h-a[i].h<=0)//\u5361\u95e8\u51fa\u53bb\u4e86\n\t\t\t{\n\t\t\t\tminout=a[i].t;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tq.push((Q){i+1,tmp.t,tmp.h-a[i].h});\n\t\t\tq.push((Q){i+1,tmp.t+a[i].f,tmp.h});\n\t\t\tmaxlive=max(maxlive,tmp.t+a[i].f);\n\t\t\tminh=tmp.h;\n\t\t}\n\t}\n```\n",
        "postTime": 1560614187,
        "uid": 128173,
        "name": "betterer",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u9664\u4e86\u53ef\u4ee5\u7528\u80cc\u5305\u89e3\u6cd5\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u8fd9\u6837\u7684\u4e8c\u7ef4dp\uff1a\n\nbool \u6570\u7ec4 f[h][l]\uff1a\u9ad8\u5ea6\u4e3ah\uff0c\u5bff\u547d\u4e3al\u8fd9\u6837\u7684\u60c5\u51b5\u80fd\u5426\u5b58\u5728\u3002\n\n\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5bff\u547d\u6307\u201c\u80fd\u591f\u5b58\u6d3b\u5230\u54ea\u4e00\u4e2a\u65f6\u95f4\u70b9\u201d\uff0c\u800c\u4e0d\u662f\u201c\u76ee\u524d\u8fd8\u5269\u4e0b\u591a\u5c11\u5bff\u547d\u201d\u3002\n\n\u5bf9\u4e8e\u7b2ci\u4e2a\u5783\u573e,\n\u82e5\u725b\u7684\u5bff\u547d\u8db3\u591f\u4f7f\u5176\u6d3b\u5230\u672c\u65f6\u95f4\u70b9\uff0c\u5e76\u4e14[h][l]\u60c5\u51b5\u5b58\u5728\uff0c\u90a3\u4e48\uff1a\n\n\t\u9996\u5148\u5224\u65ad\uff0c\u7528\u6389\u672c\u5783\u573e\uff0c\u80fd\u5426\u51fa\u53bb\u3002\uff08\u5982\u679c\u4e4b\u540e\u5224\u65ad\uff0c\u6709\u53ef\u80fdh + height(i)\u592a\u5927\uff0c\u5bfc\u81f4\u6570\u7ec4\u8d8a\u754c\uff09\n    \n\t\u5982\u679c\u4e0d\u80fd\u51fa\u53bb\uff0c\u8003\u8651\u72b6\u6001\u8f6c\u79fb\uff1a\n    \n\t\t\u5403\u6389\u5783\u573e\uff0c\u5219[h][l + life(i)]\u60c5\u51b5\u5b58\u5728\uff0c\u5373\u5bff\u547d\u5ef6\u957f\u3002\n\t\t\u7528\u6389\u5783\u573e\uff0c\u5219[h + height(i)][l]\u60c5\u51b5\u5b58\u5728\uff0c\u5373\u9ad8\u5ea6\u589e\u52a0\u3002\n\n\u5982\u679c\u6700\u7ec8\u4e0d\u80fd\u51fa\u53bb\uff0c\u5219\u904d\u5386f[0][l]\uff08l\u4ece\u5927\u5230\u5c0f\uff09\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nstruct SRubbish {\n    int iTime;\n    int iLife;\n    int iHeight;\n};\n\n// \u8bfb\u5165\u4f18\u5316 \ninline int Read()\n{\n    int w = 1, i = 0; char ch = 0;\n    while (ch > '9' || ch < '0')\n    {\n        if (ch == '-')\n            w = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        i = i * 10 + ch - '0';\n        ch = getchar();\n    }\n    return i * w;\n}\n\nbool CompRubbish(SRubbish a, SRubbish b)\n{\n    return a.iTime < b.iTime;\n}\n\n// \u9ad8\u5ea6 \u80fd\u5b58\u6d3b\u5230\u54ea\u4e00\u4e2a\u65f6\u95f4\u70b9 \nbool arrDP[120][3020];\nSRubbish arrRubbish[120];\n\nint main()\n{\n    int iHeight, iRubbish;\n    iHeight = Read(); iRubbish = Read();\n\n    for (int i = 1; i <= iRubbish; i++)\n        arrRubbish[i] = (SRubbish) { Read(), Read(), Read() };\n    sort(arrRubbish + 1, arrRubbish + 1 + iRubbish, CompRubbish);\n\n    arrDP[0][10] = true;\n    for (int i = 1; i <= iRubbish; i++)\n    {\n    \tfor (int h = 110; h >= 0; h--)\n    \t\t//  t >= arrRubbish[i].iTime \u4fdd\u8bc1\u725b\u5b58\u6d3b\u5230\u8fd9\u4e00\u65f6\u95f4\u70b9 \n    \t\tfor (int t = 3010; t >= arrRubbish[i].iTime; t--)\n    \t\t{\n    \t\t\tif (!arrDP[h][t])\n    \t\t\t\tcontinue;\n    \t\t\tif (h + arrRubbish[i].iHeight >= iHeight)\n    \t\t\t{\n    \t\t\t\tprintf(\"%d\", arrRubbish[i].iTime);\n    \t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tarrDP[h + arrRubbish[i].iHeight][t] = true;\n\t\t\t\tarrDP[h][t + arrRubbish[i].iLife] = true;\n\t\t\t}\n\t}\n\t\n\tfor (int i = 3010; i >= 0; i--)\n\t\tif (arrDP[0][i])\n\t\t{\n\t\t\tprintf(\"%d\", i);\n\t\t\treturn 0;\n\t\t}\n    \n    return 0;\n}\n```",
        "postTime": 1536376135,
        "uid": 52900,
        "name": "sun1yu1jia1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "~~\u4e0a\u6b21\u7ec8\u4e8e\u53d1\u4e86\u7bc7\u9898\u89e3\uff0c\u597d\u55e8\u68ee~~\n\n\u4f5c\u4e3a\u4e00\u540d\u849f\u84bb\uff0c\u5176\u5b9e\u6211\u4e5f\u641e\u4e0d\u6e05\u695a\u8fd9\u662f\u4ec0\u4e48DP\u4f46\u662f\u8fd8\u662f~~\u786c~~\u6253\u4e86\n\n\u8fd9\u9053\u9898\u9996\u5148\u6709\u4e09\u4e2a\u5173\u952e\u91cf\uff0c\u5783\u573e\u6570\u91cf\u3001\u5976\u725b\u7684\u5f53\u524d\u751f\u547d\u3001\u5f53\u524d\u9ad8\u5ea6\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u4ed6\u4eec\u5f53\u4e2d\u7684\u4e24\u4e2a\u4f5c\u4e3a\u6570\u7ec4\u4e0b\u6807\uff0c\u4e00\u4e2a\u4f5c\u4e3a\u503c\n\n**\u6211\u4eec\u4e00\u822c\u628a\u6709\u9650\u503c\u4f5c\u4e3a\u4e0b\u6807**\n\n\u5783\u573e\u6570\u91cf\u548c\u5f53\u524d\u9ad8\u5ea6\u90fd\u662f\u6709\u9650\u7684\uff0c\u800c\u751f\u547d\u503c\u5374\u6709\u53ef\u80fd\u5f88\u5927\uff08~~\u8fd9\u4e2a\u5976\u725b\u53ef\u80fd\u53ea\u4f1a\u5403~~\uff09\n\n\u6240\u4ee5f[i][j]\u4e3a\u7b2ci\u4e2a\u5783\u573ej\u9ad8\u5ea6\u7684\u6700\u5927\u751f\u547d\n\n\u8fd8\u6709\u4e00\u4ef6\u4e8b\u6211\u4eec\u8981\u628a\u5783\u573e\u6309\u6254\u4e0b\u6765\u7684\u65f6\u95f4\u6392\u597d\u5e8f\n\n\u5728DP\u8fc7\u7a0b\u4e2d\u53ea\u8981\u8d85\u8fc7\u9ad8\u5ea6\u6211\u4eec\u5c31\u53ef\u4ee5\u8f93\u51fa\u4e86\n\n\u4ee3\u7801\u4e2d\u8fd8\u6709\u70b9\u89e3\u91ca\n\nC++AC\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint f[101][101],d,g,ans;\nstruct laji{\n    int T,F,H;\n}a[101];//\u7ed3\u6784\u4f53\u5b58\u50a8\u5783\u573e\u7684\u6709\u5173\u6570\u636e\n//T,F,H\u548c\u9898\u5e72\u4e2d\u7684\u4e00\u6837\nbool cmp(laji i,laji j){\n    return i.T<j.T;\n}\nint main(){\n    cin>>d>>g;\n    for(int i=1;i<=g;i++) scanf(\"%d%d%d\",&a[i].T,&a[i].F,&a[i].H);\n    sort(a+1,a+1+g,cmp);\n    f[0][0]=10;//\u521d\u59cb\u5316\u4e3af[0][0]=10\uff0c\u56e0\u4e3a\u4ed6\u4e00\u5f00\u59cb\u80fd\u6d3b10\u4e2a\u5c0f\u65f6\n    for(int i=1;i<=g;i++){\n        for(int j=0;j<d;j++){//\u8fd9\u4e2a\u5783\u573e\u7528\u6765\u5403\n            if(a[i].T<=f[i-1][j]) f[i][j]=f[i-1][j]+a[i].F;\n            //if\u5224\u65ad\u7684\u4f5c\u7528\u662f\u5b83\u6d3b\u5230\u4e86\u8fd9\u4e2a\u5783\u573e\n        }\n        for(int j=0;j<d;j++){//\u8fd9\u4e2a\u5783\u573e\u7528\u6765\u5806\n            if(a[i].T<=f[i-1][j])//\u5b83\u6d3b\u5230\u4e86\u8fd9\u4e2a\u5783\u573e\n            if(j+a[i].H>=d){//\u5b83\u5df2\u7ecf\u53ef\u4ee5\u9003\u51fa\u751f\u5929\u4e86\n                cout<<a[i].T;\n                return 0;\n            }\n            f[i][j+a[i].H]=max(f[i][j+a[i].H],f[i-1][j]);//\u4ed6\u8fd8\u9003\u4e0d\u51fa\n        }\n    }\n    for(int i=1;i<=g;i++){//\u5f88\u9057\u61be\u4ed6\u6700\u540e\u8fd8\u662f\u6ca1\u6709\u9003\u51fa\u53bb\n    //\u8ba1\u7b97\u5b83\u6700\u591a\u80fd\u6d3b\u591a\u5c11\u65f6\u95f4\n        for(int j=0;j<d;j++) ans=max(ans,f[i][j]);\n    }\n    cout<<ans;\n    return 0;\n}\n```\n\n\u6700\u540e\u8bf4\u4e00\u53e5\uff0cFJ\u5bb6\u7684\u5976\u725b\u65e0\u654c\u4e86",
        "postTime": 1521009832,
        "uid": 56916,
        "name": "\u8fdd\u89c4\u7528\u6237\u540dU56916",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "//\u6c34\u9898\uff0cdp+\u5feb\u6392\u662f\u6b63\u89e3\uff0c\u6ce8\u610f\u4e00\u4e0b\u725b\u7b49\u4e0d\u5230\u6700\u540e\u4e00\u4e2a\u5783\u573e\u5c31\u6302\u6389\u4e86\u7684\u6570\u636e\uff0c\u6392\u5e8f\u65f6\u95f4\uff08\u6ca1\u544a\u8bc9\u4f60\u6709\u5e8f\uff09\n\n```cpp\n//\u9700\u8981\u77e5\u9053\u4e24\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b   \n     clife[j+a[i].high]:=max(clife[j+a[i].high],clife[j]);\n     clife[j]:=clife[j]+a[i].life;\n//\u5403\u8981\u52a0\u751f\u547d\n//\u4e0d\u5403\u52a0\u9ad8\u5ea6(\u6709\u987a\u5e8f)\n```\n\u4ee3\u7801\uff1a\n\n\n\n```cpp\ntype jl=record\n  time,life,high:longint;\nend;\nvar\n  n,m,i,j,d:longint;\n  clife:array[0..10000] of longint;//\u9ad8\u5ea6\u4e3aclife\u662f\u7684\u751f\u547d\u503c\n  a:array[1..10000] of jl;\nfunction max(a,b:longint):longint;\nbegin\n  if a>b then\n    exit(a);\n  exit(b);\nend;\nprocedure sort(l,r: longint);\u3001//\u5feb\u6392\u4e0d\u89e3\u91ca\n      var\n         i,j: longint;\n         x,y:jl;\n      begin\n         i:=l;\n         j:=r;\n         x:=a[(l+r) div 2];\n         repeat\n           while a[i].time<x.time do\n            inc(i);\n           while x.time<a[j].time do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=a[i];\n                a[i]:=a[j];\n                a[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort(l,j);\n         if i<r then\n           sort(i,r);\n      end;\nbegin\n  readln(d,n);\n  for i:=1 to n do\n    readln(a[i].time,a[i].life,a[i].high);\n  sort(1,n);\n  clife[0]:=10;\n  for i:=1 to n do\n    for j:=d downto 0 do//\u679a\u4e3e\u9ad8\u5ea6\n    if clife[j]>=a[i].time then\n    begin\n      if j+a[i].high>=d then//\u51fa\u6765\u5566\uff01\n      begin\n        writeln(a[i].time);\n        halt;\n       end;\n     clife[j+a[i].high]:=max(clife[j+a[i].high],clife[j]);//\u4e0d\u5783\u573e+\u9ad8\u5ea6\n     clife[j]:=clife[j]+a[i].life;//\u5403\u5783\u573eing+\u751f\u547d\u503c\n    end;\n  writeln(clife[0]);//\u53ef\u601c\u7684\u725b\u6302\u4e86\uff0c\u6ca1\u6709\u9ad8\u5ea6\nend.\n\n```",
        "postTime": 1507969948,
        "uid": 9262,
        "name": "taoyc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "/\\*\n1.\u7279\u5224time>10\uff08\u7136\u800c\u6ca1\u6709\u5206\uff09\n\n2.\u6ce8\u610f\u8981\u6392\u5e8f\n\n3.\u6ce8\u610f\u5982\u679c\u751f\u547d<0(\u5373\u6839\u672c\u4e0d\u53ef\u80fd\u8fbe\u5230),\u4e0d\u80fd\u5728\u8fd9\u4e2a\u65f6\u5019\u5403\u6389\u5783\u573e\n\n4.\u6ce8\u610ff\u6570\u7ec4\u521d\u59cb\u503c\u4e3a0\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u4e3aINF\n\n\\*/\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint i,j,m,n,cnt=0;\nint f[101]; //\u9ad8\u4e3ai\u7684\u6700\u5927\u751f\u547d \nstruct ele\n{\n    int time, live, height;\n} a[101];\nint comp(ele a, ele b)\n{\n    return a.time<b.time;\n}\nint main()\n{\n    memset(f,0,sizeof(f)); f[0]=10;\n    scanf(\"%d%d\",&m,&n);\n    for (i=1; i<=n; i++)\n      scanf(\"%d%d%d\",&a[i].time,&a[i].live,&a[i].height);\n    sort(a+1,a+n+1,comp); a[0].time=0;\n    if (a[1].time>10) {\n        printf(\"10\");\n        return 0;\n    }\n    for (i=1; i<=n; i++)\n    {\n        int tmp=a[i-1].time-a[i].time;\n        for (j=m; j>=0; j--) f[j]+=tmp;\n        if (f[m]>=0) f[m]+=a[i].live; //height=m \u7279\u5224\n        for (j=m; j>=m-a[i].height; j--)\n            if (j>=0) f[m]=max(f[m],f[j]);\n        for (j=m-1; j>=0; j--) //height<m\n        {\n            if (f[j]>=0) f[j]+=a[i].live;\n            if (j>=a[i].height)\n                f[j]=max(f[j],f[j-a[i].height]);\n        }\n        if (a[i].time==a[i+1].time) continue;\n        if (f[m]>=0){\n            printf(\"%d\",a[i].time);\n            return 0;\n        }\n        if (i<n && f[0]-a[i+1].time+a[i].time<0){\n            printf(\"%d\",a[i].time+f[0]);\n            return 0;\n        }\n    }\n    printf(\"%d\",a[n].time+f[0]);\n    return 0;\n}\n```",
        "postTime": 1479519506,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u6765\u53d1\u9898\u89e3\n\n\n\u8fd9\u9898\u662f\u7c7b\u80cc\u5305\u95ee\u9898\u7684\u52a8\u6001\u89c4\u5212\u3002\u3002\uff08\u597d\u50cf\u6709\u70b9\u6c34\u554a\u5582\u3002\u3002\u57fa\u672c\u601d\u8def\u662f\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u6765\u5b58\u5f53\u524d\u9ad8\u5ea6\u7684\u65f6\u95f4\n\n\n\u5047\u5982\u80fd\u5403                 f[i][j+a[k].f]=true;\n\n\u5047\u5982\u80fd\u7528                 f[i+a[k].h][j]=true;\n\n\n**\u6ce8\u610f\u80fd\u5b58\u6d3b10\u5206\u949f\n\n\n\u5177\u4f53\u89c1\u4ee3\u7801\u6ce8\u91ca\uff08\u6700\u8be6\u7ec6\u7684\u4e00\u6b21\u54e6\n\n\n\uff08\u51cf\u5c11\u4ee3\u7801\u590d\u5236\uff0c\u5171\u521b\u7f8e\u597d\u6d1b\u8c37\uff09\n\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\nstruct ab\n{\n    int t,f,h;\n}a[101];\nint d,g;\nbool f[400][6000]={false};//\u8868\u793a\u5728\u9ad8\u5ea6\u4e3ai\u7684\u60c5\u51b5\u4e0b\u80fd\u5b58\u6d3bj\u7684\u65f6\u95f4 \nbool comp(ab a,ab b)//sort \n{\n    return a.t<b.t;\n}\nusing namespace std;\nmain()\n{\n    scanf(\"%d%d\",&d,&g);\n    int s=10;\n    for (int i=1;i<=g;i++)\n      {\n          scanf(\"%d%d%d\",&a[i].t,&a[i].f,&a[i].h);\n          s+=a[i].f;//s\u8868\u793a\u6700\u957f\u5b58\u6d3b\u65f6\u95f4 \n      }\n    sort(a+1,a+g+1,comp);//\u6309\u65f6\u95f4\u6392\u5e8f \n    f[0][10]=true;//\u6700\u77ed\u5b58\u6d3b10\u5206\u949f \n    for (int k=1;k<=g;k++)//\u4e00\u4e2a\u4e00\u4e2a\u5783\u573e\u904d\u5386 \n        for (int i=d-1;i>=0;i--)//i\u8868\u793a\u9ad8\u5ea6    //\u4e3a\u4ec0\u4e48\u52300\u5462?\u56e0\u4e3a\u52300\u5c31\u6b7b\u5566 \n            for (int j=s;j>=a[k].t;j--)//j\u8868\u793a\u65f6\u95f4,\u6700\u957f\u4e3as \n            if (f[i][j]==true)//\u5047\u5982\u8fd9\u4e2a\u65f6\u95f4\u70b9\u80fd\u5b58\u6d3b \n            {\n                f[i+a[k].h][j]=true;//\u8fd9\u4e2a\u5783\u573e\u7528\u4e8e\u52a0\u9ad8\u5ea6 \n                if (i+a[k].h>=d)//\u5047\u5982\u51fa\u53bb\u4e86 \n                {\n                    printf(\"%d\",a[k].t);//\u8f93\u51fa\u65f6\u95f4,\u56e0\u4e3a\u6392\u5b8c\u5e8f\u4e86,\u6240\u4ee5\u662f\u6700\u4f18\u89e3 \n                    exit(0);//\u76f4\u63a5\u9000\u51fa \n                }\n                f[i][j+a[k].f]=true;//\u8fd9\u4e2a\u5783\u573e\u7528\u4e8e\u52a0\u65f6\u95f4 \n            }\n    for (int i=s;i>=1;i--)//\u4ece\u540e\u5f80\u524d\u904d\u5386\u65f6\u95f4,\u5047\u5982\u9047\u89c1\u5c31\u662f\u6700\u957f\u65f6\u95f4 \n        if (f[0][i])//\u6700\u957f\u5341\u5206\u949f  //\u77e5\u9053\u90a3\u4e2a\u8d4b\u503c\u8bed\u53e5\u7684\u7528\u9014\u4e86\u5427 \n        {\n            printf(\"%d\",i);//\u76f4\u63a5\u8f93\u51fa,\u8df3\u51fa\u5faa\u73af(\u7a0b\u5e8f) \n            break;\n        }\n}\n```",
        "postTime": 1463485073,
        "uid": 17689,
        "name": "\u8fdc\u822a\u4e4b\u66f2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u80cc\u5305\u578bDP\n\nf[i]\u8868\u793a\u9ad8\u5ea6\u4e3ai\u65f6\u7684\u6700\u957f\u5b58\u6d3b\u65f6\u95f4\n\n\u4e8e\u662f\u5c31\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5f0f\n\n\u5403          f[i+a[i]]=max(f[i],f[i,a[i]])\n\n\u4e0d\u5403      f[i]=f[i]+a[i]\n\n\n\u63a5\u4e0b\u6765\u4e0a\u4ee3\u7801\n\n\uff08\u4ee3\u7801\u4e2d\u6211\u72b6\u6001\u662f\u7528\u5e03\u5c14\u7c7b\u578b\u8868\u793a\uff0cf[i][j]\u8868\u793a\u9ad8\u5ea6\u4e3ai\u65f6\u6700\u957f\u5b58\u6d3b\u65f6\u95f4\u4e3aj\u7684\u72b6\u6001\u5b58\u5728\uff09\n\n\n```cpp\n\n#include <cstdio>  \n#include <algorithm>  \nusing namespace std;  \nint d,g,k,i,j,s;  \nstruct data  \n{  \n    int t,ff,h;  \n};  \ndata a[110];  \nbool f[400][6000];  \n  \nbool cmp(data x,data y)  \n{  \n    return x.t<y.t;  \n}  \n  \nint main()  \n{  \n    scanf(\"%d%d\",&d,&g);  \n    for (int i=1;i<=g;i++)   \n        scanf(\"%d%d%d\",&a[i].t,&a[i].ff,&a[i].h);  \n    sort(a+1,a+g+1,cmp);  \n    s=10;  \n    for (int i=1;i<=g;i++) s+=a[i].ff;  \n    f[0][10]=true;  \n    for (int k=1;k<=g;k++)  \n    for (int i=d-1;i>=0;i--)  \n    for (int j=s;j>=a[k].t;j--)  \n    if (f[i][j])   \n    {  \n        f[i+a[k].h][j]=true;  \n        if (i+a[k].h>=d)  \n        {  \n            printf(\"%d\",a[k].t);  \n            exit(0);  \n        }  \n        f[i][j+a[k].ff]=true;  \n    }  \n    for (int i=s;i>=1;i--)  \n    if (f[0][i])   \n    {  \n        printf(\"%d\",i);  \n        break;  \n    }  \n}  \n\n```",
        "postTime": 1454159712,
        "uid": 2578,
        "name": "varvar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u6709\u70b9\u5947\u602a\u7684\u9898\u76ee\u3002\u3002USACO\u7684\u9898\u76ee\u770b\u4e0a\u53bb\u90fd\u611f\u89c9\u5f88\u5947\u602a\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u601d\u8def\u3002\n\n\n\u6700\u7b80\u5355\u7684\u8bbe\u60f3\u5c31\u662f\u7528f[i][j]\u6765\u8868\u793a\u7528\u524di\u4e2a\u5783\u573e\u5806\u51fa\u9ad8\u5ea6\u4e3aj\u65f6\u6700\u5927\u80fd\u5f97\u5230\u7684\u751f\u5b58\u65f6\u95f4\u3002\n\n\u90a3\u4e48\u5f88\u5bb9\u6613\u5c31\u80fd\u770b\u51fa\u6765\n\nf[i][j]---->f[i+1][j+h[i]]-t[i+1]+t[i]\uff08\u5806\u5783\u573e\uff09\n\nf[i][j]---->f[i+1][j]-t[i+1]+t[i]+live[i]\uff08\u5403\u5783\u573e\uff09\n\n\n\u8fd9\u79cd\u505a\u6cd5\u8981\u4fdd\u8bc1t[i]\u662f\u4e25\u683c\u9012\u589e\u7684\n\n\n\u4e8b\u5b9e\u4e0a\u56e0\u4e3af[i]\u53ea\u80fd\u8f6c\u79fb\u5230f[i+1]\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u6c42\u89e3f[i]\u65f6\u53ea\u9700\u8981\u8bb0\u5f55f[i-1]\u7684\u72b6\u6001\u5c31\u53ef\u4ee5\u4e86\uff0c\u7528\u6eda\u52a8\u6570\u7ec4\u538b\u6389\u4e00\u7ef4\uff0c\u5f53\u7136\u5047\u5982\u4ee3\u7801\u80fd\u529b\u5f3a\u7684\u8bdd\u4e5f\u53ef\u4ee5\u5c1d\u8bd5downto\n",
        "postTime": 1454133084,
        "uid": 10356,
        "name": "\u5929\u72d7\u7684\u624b\u5e16",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u5751\u70b9\uff1a\u6570\u636e\u4e0d\u4e00\u5b9a\u6309\u65f6\u95f4\u6392\u5e8f   \u6ce8\u610f\u52a0\u4e0a\u6728\u5757\u540e\u8d85\u8fc7\u6df1\u5ea6\u7684\u60c5\u51b5\n\n\n\u8fd9\u9053\u9898\u56e0\u4e3a\u6211\u72af\u50bb\u8c03\u4e86\u4e00\u4e2a\u4e2d\u5348\n\n\u9996\u5148\u65b9\u6cd5\u6bd4\u8f83\u9b3c\u755c\u3002\u3002\n\ndp[i][j]\u8868\u793a\u7b2ci\u4e2a\u5783\u573e\u9ad8\u5ea6\u4e3aj\u7684\u6700\u5927\u751f\u547d\u65f6\u95f4  \u5e76\u4e14\u8fd9\u4e2a\u751f\u547d\u65f6\u95f4\u4ee5\u73b0\u5728\u4e3a\u8d77\u70b9\uff08\u4e5f\u5c31\u662f\u8bf4\u8fd8  \u80fd\u6d3b\u591a\u4e45\uff09\n\n\n\u5148\u6392\u5e8f\u561b   \u518d\u521d\u59cb\u5316dp[0][0]=10;\n\n\u7136\u540e\u4e24\u79cd\u8f6c\u79fb\n\n\u5148\u8bbed\u7b49\u4e8et[ i ]-t[ i - 1](\u4ece\u4e0a\u4e00\u4e2a\u8f6c\u79fb\u5230\u73b0\u5728\u8fd9\u4e00\u4e2a\u7684\u65f6\u95f4)\n\n\u5728\u5408\u6cd5\u60c5\u51b5\u4e0b\uff08\u8fd8\u80fd\u751f\u5b58\u65f6\u95f4\u5927\u4e8e\u7b49\u4e8ed\uff09\n\n    dp[ i ][ j ]=\n\n\u5982\u679cdp[ i - 1 ][ j ]\u5408\u6cd5  \u5373\u53ef\u4ee5\u628a\u5f53\u524d\u5783\u573e\u5403\u6389  \u5219dp[ i ][ j ]=dp[ i - 1 ][ j ] - d +f[i]\n\n\u5982\u679cdp[ i - 1 ][ j - h[ i ]]\u5408\u6cd5  \u5373\u53ef\u4ee5\u628a\u5f53\u524d\u5783\u573e\u653e\u4e0a\u53bb  \u5219dp[ i ][ j ]=dp[ i - 1][ j ] - d\n\n\u4ee5\u4e0a\u4e24\u79cd\u8f6c\u79fb\u53d6\u8f83\u5927\u503c  \u4e0d\u80fd\u8f6c\u79fb\u5219\u8d4b\u4e3a\u4e00\u4e2a\u8d1f\u503c\uff08\u4e0d\u53ef\u5230\u8fbe\uff09\n\n\n\u7136\u540e\u662f\u653e\u4e0a\u53bb\u540e\u8d85\u8fc7\u5730\u6d1e\u7684\u6df1\u5ea6\u7684\u60c5\u51b5 \u8bbe\u6df1\u5ea6\u4e3adeep\n\n\u90a3\u4e48\u4ece dp[ i -1 ][deep - h[ i ]]\u5230dp[ i - 1 ][deep - 1]\u90fd\u53ef\u4ee5\u8f6c\u79fb\u5230\n\ndp[ i ][ deep ]( \u8f6c\u79fb\u65f6\u5148\u5224\u5b9a\u5408\u6cd5  \u518d\u51cf\u53bbd\uff08\u4e24 \u5783\u573e\u7684\u65f6\u95f4\u95f4\u9694\uff09 )\n\n\n\u6700\u540e\u7b54\u6848\u4ecedeep\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u627e   \u4ece\u5148\u6389\u4e0b\u6765\u7684\u5783\u573e\u5230\u540e\u6389\u4e0b\u6765\u7684\uff08\u8981\u6c42\u6700\u65e9\u51fa\u53bb\uff09\n\n\u5982\u679c\u6ca1\u6709  \u5c31\u8ba1\u7b97\u6700\u957f\u5b58\u6d3b\u65f6\u95f4\n\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int maxn=100+10;\nconst int INF=10;\nstruct LJ{\n    int t,f,h;\n}l[maxn];\n\nint cmp(LJ a,LJ b)\n{\n    return a.t<b.t;\n}\nint dp[maxn][maxn];\n\nint main()\n{\n    int deep,n;\n    cin>>deep>>n;\n    for(int i=1;i<=n;i++)\n      scanf(\"%d%d%d\",&l[i].t,&l[i].f,&l[i].h);\n    sort(l+1,l+n+1,cmp);\n    dp[0][0]=10;\n    for(int i=1;i<=deep;i++)  //\u521d\u59cb\u5316\n      dp[0][i]=-INF;\n    for(int i=1;i<=n;i++)\n      for(int j=deep;j>=0;j--)\n      {\n            dp[i][j]=-INF;\n            int d=l[i].t-l[i-1].t;\n            if(j>=l[i].h)\n             {\n                if(dp[i-1][j]-d>=0)    //\u53ef\u4ee5\u5403\u4e0b\u8fd9\u4e2a\u5783\u573e\n                dp[i][j]=dp[i-1][j]-d+l[i].f;\n                if(j==deep)   //\u8fbe\u5230\u6700\u9ad8\u70b9\u65f6\u7684\u7279\u6b8a\u5904\u7406\n                {\n                    for(int k=deep-l[i].h;k<deep;k++)\n                      if(dp[i-1][k]-d>=0)\n                    dp[i][j]=max(dp[i][j],dp[i-1][k]-d);\n                }\n                else\n                    if(dp[i-1][j-l[i].h]-d>=0)  //\u642d\u4e0a\u8fd9\u4e2a\u5783\u573e\n                 dp[i][j]=max(dp[i][j],dp[i-1][j-l[i].h]-d);\n             }\n            else    //\u53ea\u80fd\u5403\u4e0b\u8fd9\u4e2a\u5783\u573e\n              if(dp[i-1][j]-d>=0)   //\u5224\u5408\u6cd5\n              dp[i][j]=dp[i-1][j]+l[i].f-d;\n        }\n        \n    for(int i=1;i<=n;i++)\n      if(dp[i][deep]>=0)\n      {\n          printf(\"%d\",l[i].t);\n          return 0;\n      }\n    int sum=10;   //\u5230\u591a\u4e45\u4f1a \u6302\u6389\n    for(int i=1;i<=n;i++)  ///\u8ba1\u7b97\u5b58\u6d3b\u65f6\u95f4  \n      if(sum>=l[i].t)   //\u9996\u5148\u8981\u80fd\u6d3b\u5230\u90a3\u4e2a\u65f6\u5019\n        sum+=l[i].f;\n      else break;\n    printf(\"%d\",sum);\n    return 0;\n}\n\n```",
        "postTime": 1448002130,
        "uid": 11280,
        "name": "QWsin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u9996\u5148\u4e00\u4e2a\u69fd\u70b9\uff0c\u8fd9\u4e2a\u9898\u8f93\u5165\u4e0d\u4e00\u5b9a\u6309\u65f6\u95f4\u6392\u5e8f\uff0c\u6240\u4ee5\u5148\u628a\u5783\u573e\u6309\u7167\u65f6\u95f4\u6392\u5e8f\u3002\n\n\n\u7f51\u7edc\u4e0a\u5f88\u591a\u4e8c\u7ef4\u4e09\u7ef4\u5e03\u5c14\u578b\u6574\u578b\u5b58\u653e\u52a8\u6001\u89c4\u5212\u7684\u503c\u7684\u6570\u7ec4\uff0c\u9274\u4e8e\u672c\u4eba\u8f83\u7b28\uff0c\u7406\u89e3\u4e0d\u4e86\u5927\u795e\u505a\u6cd5\uff0c\u53ea\u597d\u539f\u5c01\u4e0d\u52a8\u7684\u5199\u4e00\u4e2a\u8fd1\u4f3c\u80cc\u5305\u7684\u6a21\u578b\u4e86\u3002\n\n\n\u4e00\u7ef4\u6570\u7ec4ff[i]\u8868\u793a\u9ad8\u5ea6\u4e3ai\u65f6\u6700\u957f\u80fd\u6d3b\u591a\u4e45\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5783\u573e\u90fd\u6709\u5403\u4e0e\u4e0d\u5403\u4e24\u79cd\u9009\u62e9\u3002\u5982\u679c\u4e0d\u5403\u5c31\u80fd\u51fa\u53bb\u90a3\u5c31\u8f93\u51fa\u8fd9\u4e2a\u5783\u573e\u6389\u4e0b\u53bb\u7684\u65f6\u95f4\u3002\n\n\n\u5176\u4f59\u53c2\u8003\u9898\u76ee\u6ce8\u89e3\u3002\n\n\n\n```delphi\n\ntype ss=record\n    t,f,h:longint;\n    end;\n\nvar a:array[1..100] of ss;\n    ff:array[0..1000] of longint;//ff[i]\u8868\u793a\u9ad8\u5ea6\u4e3ai\u65f6\u6700\u957f\u80fd\u6d3b\u591a\u4e45\n    d,g:longint;\n\nfunction max(x,y:longint):longint;\nbegin\n    if x>y then exit(x) else exit(y);\nend;\n\nprocedure init;\nvar i:longint;\nbegin\n    readln(d,g);\n    for i:=1 to g do readln(a[i].t,a[i].f,a[i].h);\nend;\n\nprocedure sort(l,r: longint);\n      var\n         i,j,x:longint;y:ss;\n      begin\n         i:=l;\n         j:=r;\n         x:=a[(l+r) div 2].t;\n         repeat\n           while a[i].t<x do\n            inc(i);\n           while x<a[j].t do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=a[i];\n                a[i]:=a[j];\n                a[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort(l,j);\n         if i<r then\n           sort(i,r);\n      end;\n\nprocedure main;\nvar i,j,k,m:longint;\nbegin\n    for i:=1 to g do\n        for j:=d downto 0 do\n            if ff[j]>=a[i].t then//\u5982\u679c\u5b83\u80fd\u591f\u575a\u6301\u5230\u5783\u573e\u6389\u4e0b\u6765\u7684\u8bdd\n                begin\n                    if j+a[i].h>=d then\n                        begin\n                            writeln(a[i].t);\n                            halt;\n                        end;\n                    //\u80fd\u51fa\u53bb\n                    ff[j+a[i].h]:=max(ff[j+a[i].h],ff[j]);//\u4e0d\u5403\n                    ff[j]:=ff[j]+a[i].f;//\u5403\n                end;\nend;\n\nbegin\n    init;\n    fillchar(ff,sizeof(ff),0);\n    sort(1,g); \n    ff[0]:=10;\n    main;\n    writeln(ff[0]);//\u65e0\u6cd5\u722c\u51fa\uff0c\u8f93\u51fa\u9ad8\u5ea6\u4e3a\u96f6\u65f6\uff08\u6b64\u65f6\u4e0d\u7528\u722c)\u6700\u5927\u5b58\u6d3b\u65f6\u95f4\nend.\n\n```",
        "postTime": 1439973448,
        "uid": 6906,
        "name": "gryql",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "100%\u52a8\u5f52.\u4e00\u5b9a\u662f\u8981\u6392\u5e8f\u7684.\u8981\u4e0d\u7136..\n\n\u4e0a\u5e15\u65af\u5361\u7a0b\u5e8f:\n\n\u6846\u8d77\u6765\u7684:\n\n```delphi\n\nvar ansl,n,m,i,j,c:longint;\n      t,l,h:Array[0..105]of longint;\n      a:Array[0..100,0..100]of longint;\n  procedure print(ans:longint);\n  begin\n  assign(output,'well.out');rewrite(output);\n   writeln(ans);\n  close(output);\n   halt;\n  end;\n  function max(x,y:longint):longint;\n  begin\n    if x>y then max:=x else max:=y;\n  end;\n  begin\n    assign(input,'well.in');reset(input);\n    readln(m,n);\n    for i:=1 to n do readln(t[i],l[i],h[i]);t[0]:=0;\n    close(input);\n     for i:=1 to n do\n      for j:=i+1 to n do\n        if t[i]>t[j] then begin\n                            c:=t[i];t[i]:=t[j];t[j]:=c;\n                            c:=l[i];l[i]:=l[j];l[j]:=c;\n                            c:=h[i];h[i]:=h[j];h[j]:=c;\n                          end;\n    for i:=0 to n do for j:=0 to m do a[i,j]:=-maxlongint;\n    a[0,0]:=10;\n    ansl:=0;\n    for i:=1 to n do\n      for j:=0 to m do\n        begin\n        if a[i-1,j]>=t[i]-t[i-1] then a[i,j]:=a[i-1,j]+l[i]-t[i]+t[i-1];\n        if (j-h[i]>=0)and(a[i-1,j-h[i]]>=t[i]-t[i-1]) then a[i,j]:=max(a[i,j],a[i-1,j-h[i]]-t[i]+t[i-1]);\n        if (j=m)and(a[i,m]<>-maxlongint) then print(t[i]);\n        if a[i,j]+t[i]>ansl then ansl:=a[i,j]+t[i];\n    end;\n    print(ansl);\n  end.\n\n```\n\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\n\n\n\u4e0d\u6846\u8d77\u6765\u7684\uff1a\n\n\n\n\n```cpp\nvar ansl,n,m,i,j,c:longint;\n      t,l,h:Array[0..105]of longint;\n      a:Array[0..100,0..100]of longint;\n  procedure print(ans:longint);\n  begin\n  assign(output,'well.out');rewrite(output);\n   writeln(ans);\n  close(output);\n   halt;\n  end;\n  function max(x,y:longint):longint;\n  begin\n    if x>y then max:=x else max:=y;\n  end;\n  begin\n    assign(input,'well.in');reset(input);\n    readln(m,n);\n    for i:=1 to n do readln(t[i],l[i],h[i]);t[0]:=0;\n    close(input);\n     for i:=1 to n do\n      for j:=i+1 to n do\n        if t[i]>t[j] then begin\n                            c:=t[i];t[i]:=t[j];t[j]:=c;\n                            c:=l[i];l[i]:=l[j];l[j]:=c;\n                            c:=h[i];h[i]:=h[j];h[j]:=c;\n                          end;\n    for i:=0 to n do for j:=0 to m do a[i,j]:=-maxlongint;\n    a[0,0]:=10;\n    ansl:=0;\n    for i:=1 to n do\n      for j:=0 to m do\n        begin\n        if a[i-1,j]>=t[i]-t[i-1] then a[i,j]:=a[i-1,j]+l[i]-t[i]+t[i-1];\n        if (j-h[i]>=0)and(a[i-1,j-h[i]]>=t[i]-t[i-1]) then a[i,j]:=max(a[i,j],a[i-1,j-h[i]]-t[i]+t[i-1]);\n        if (j=m)and(a[i,m]<>-maxlongint) then print(t[i]);\n        if a[i,j]+t[i]>ansl then ansl:=a[i,j]+t[i];\n    end;\n    print(ansl);\n  end.\n\u518d\u8bf4\u4e00\u904d\uff0c\u4ec5\u4f9b\u53c2\u8003\u54c8\n```",
        "postTime": 1439040958,
        "uid": 8470,
        "name": "zhangjl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u4e00\u822c\u5bf9\u4e8e\u8fd9\u79cd\u201c\u80fd\u5426\u8fbe\u5230\u76ee\u6807\u7684\u9898\u201d\uff0c\u53ef\u4ee5\u91c7\u7528TF\u5224\u65ad\u4e00\u4e2a\u72b6\u6001\u662f\u5426\u80fd\u8fbe\u5230\u7684\u65b9\u6cd5\u3002\u672c\u9898\u4e2d\uff0cf[i][j]\u8868\u793a\u9ad8\u5ea6\u4e3ai\u751f\u547d\u4e3aj\u7684\u72b6\u6001\u80fd\u5426\u8fbe\u5230\n\n```cpp\n\nfor\u00a0(k=1;\u00a0k<=g;\u00a0k++)\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for\u00a0(i=d;\u00a0i>=0;\u00a0i--)\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for\u00a0(j=m;\u00a0j>=a[k];\u00a0j--)\u00a0\u00a0\u00a0//m\u4e3a\u6240\u6709\u5783\u573e\u63d0\u4f9b\u7684\u751f\u547d\u503c\u52a0\u539f\u751f\u547d\u503c\u7684\u548c\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(ff[i][j]==true)\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u8bb0\u5f55\u72b6\u6001\u5e76\u4e14\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u8fbe\u5230\u76ee\u7684\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\n\n```\n\n\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1aff[j]\u8868\u793a\u8fbe\u5230j\u9ad8\u5ea6\u6240\u8fbe\u5230\u7684\u6700\u5927\u751f\u547d\u503c\u3002\uff08\u8fd9\u79cd\u65b9\u6cd5\u53ef\u7701\u53bb\u4e00\u7ef4\uff09\n\n\n```cpp\n\n\nfor\u00a0(i=1;\u00a0i<=g;\u00a0i++)\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for\u00a0(j=d;\u00a0j>=0;\u00a0j--)\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(ff[j]>=t[i])\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ff[j+h[i]]=max(ff[j+h[i]],ff[j]);\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ff[j]+=f[i];\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(j+h[i]>=d){printf(\u201c%d\u201d,t[i]);\u00a0\u00a0  return\u00a00;};\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\n\n```",
        "postTime": 1376452331,
        "uid": 277,
        "name": "plane",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u663e\u7136\u8fd9\u9053\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\u80cc\u5305\u95ee\u9898\uff08\u628a\u80cc\u5305\u95ee\u9898\u4e2d\u7684\u9009\u6216\u4e0d\u9009 \u8f6c\u5316\u4e3a \u662f\u57ab\u9ad8\u9ad8\u8fd8\u662f\u5403\u5783\u573e\uff09\n\n\u8bbedp[i][j]\u4e3a\u7528\u524di\u4e2a\u5783\u573e\u5806\u6210j\u9ad8\u5ea6\u7684\u6700\u5927\u751f\u547d\u503c\n\n\u5f53\u5403\u8fd9\u4e2a~~\u98df\u7269~~\u5783\u573e\u7684\u65f6\u5019\u53ef\u4ee5\u8f6c\u79fb dp[i-1][j] +rubbish[i].f -> dp[i][j]\uff08\u5f53\u4e0d\u4f1a\u6b7b\u7684\u65f6\u5019\u624d\u80fd\u8f6c\u79fb\uff09\n\n\u5f53\u57ab\u9ad8\u9ad8\u7684\u65f6\u5019\u53ef\u4ee5\u8f6c\u79fb dp[i-1][j-rubbish[i].h] -> dp[i][j] (\u5f53\u4e0d\u4f1a\u6b7b\u4e14j-rubbish[i].h>=0\u7684\u65f6\u5019\u624d\u80fd\u8f6c\u79fb)\n\n### \u8f93\u51fa\u7b54\u6848\n\n\u9884\u5148\u5904\u7406\u4e00\u4e0b\u6700\u591a\u80fd\u6d3b\u591a\u4e45\u3002 \u5728dp\u6570\u7ec4\u4e2d\u626b\u4e00\u904d\uff0c\u627e\u5230\u6700\u5c0f\u7684\u6ee1\u8db3\u8981\u6c42\u7684\u7b54\u6848\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u8f93\u51fa\u6700\u4e45\u751f\u5b58\u65f6\u95f4\u3002\n\n```cpp\n/*\n * @Author: Dolphin_ \n * @Date: 2019-08-14 16:29:23 \n * @Last Modified by: Dolphin_\n * @Last Modified time: 2019-08-14 16:48:30\n */\n//f[i][j]\u8868\u793a\u7528\u524di\u4e2a\u5783\u573e \u5728j\u9ad8\u5ea6\u65f6\u80fd\u83b7\u5f97\u7684\u6700\u5927\u751f\u547d\u503c\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define FOR(i, a, b) for (int i = a; i <= b; ++i)\n#define _FOR(i, a, b) for (int i = a; i >= b; --i)\n#define INF 0x7fffffff\ninline void read(int &x)\n{\n    int f=1;x=0;char s=getchar();\n    while(s>'9'||s<'0'){if(s=='-')f=-1;s=getchar();}\n    while(s<='9'&&s>='0'){x=x*10+s-'0';s=getchar();}\n    x*=f;\n}\nint g,d,f[110][110];\nstruct node{\n    int t,f,h;\n}a[110000];\nbool cmp(node a,node b)\n{\n    return a.t<b.t;\n}\nint main()\n{\n    //freopen(\"a.in\",\"r\",stdin);\n    read(d);read(g);\n    int sum=10;\n    FOR(i,1,g)\n    {\n        read(a[i].t);read(a[i].f);read(a[i].h);\n        //a[i].t\u662f\u5783\u573e\u6389\u4e0b\u6765\u7684\u65f6\u95f4   a[i].f\u662f\u5783\u573e\u63d0\u4f9b\u7684\u8840\u91cf   a[i].h\u662f\u5783\u573e\u7684\u9ad8\u5ea6\n    }\n\tsort(a+1,a+1+g,cmp);\n    FOR(i,1,g)\n    {\n    \tif(sum>=a[i].t)sum+=a[i].f;\n    \telse break;\n\t}\n    f[0][0]=10;\n    FOR(i,1,g)\n    {\n        FOR(j,0,d)\n        {\n            //\u9009\u8fd9\u4e2a\u5403\n            if(f[i-1][j]>=a[i].t) f[i][j]=max(f[i][j],f[i-1][j]+a[i].f);\n            //\u9009\u8fd9\u4e2a\u57ab\u9ad8\u9ad8\n            if(j>=a[i].h&&f[i-1][j-a[i].h]>=a[i].t) f[i][j]=max(f[i][j],f[i-1][j-a[i].h]) ;\n        }\n    }\n    int ans=INF;bool flag=true;\n    FOR(i,1,g)\n    {\n        if(f[i][d]!=0)\n        {\n            ans=i;\n            flag=false;\n            break;\n        }\n    }\n    if(flag)\n    {\n        printf(\"%d\\n\",sum);\n    }else\n    {\n        printf(\"%d\\n\",a[ans].t);\n    }\n    return 0;\n}\n",
        "postTime": 1565775496,
        "uid": 52706,
        "name": "Dolphin_",
        "ccfLevel": 5,
        "title": "P1156 \u5783\u573e\u9677\u9631  \u80cc\u5305dp"
    },
    {
        "content": "\u5148\u5c06\u6bcf\u4e00\u4e2a\u5783\u573e\u6309\u51fa\u73b0\u65f6\u95f4\u5347\u5e8f\u6392\u5e8f\n\n\u5b9a\u4e49a.x\u4e3a\u51fa\u73b0\u65f6\u95f4a.h\u4e3a\u9ad8\u5ea6a.t\u4e3a\u5403\u4e0b\u83b7\u5f97\u7684\u8840\u91cf\n\nf[i][j]\u8868\u793a\u524di\u4e2a\u5783\u573e\u5728\u5230\u8fbej\u7684\u9ad8\u5ea6\u65f6\u5269\u4f59\u7684\u6700\u5927\u8840\u91cf\n\n\u663e\u800c\u6613\u89c1\u5f00\u59cb\u65f6f[0][0]\u4e3a10\n\n\u679a\u4e3e\u4e00\u4e2ai\u4e3a\u5783\u573e\u7f16\u53f7j\u4e3a\u9ad8\u5ea6,\u5c31\u6709:\n\n1.\u5403\u4e0b\u8fd9\u4e2a\u5783\u573ef[i][j]=max{f[i][j],f[i-1][j]-(a[i].x-a[i-1].x)+a[i].t}\n\n\u521d\u59cbf[i][j]\u4e3a-INF,a[i].x-a[i-1].x\u4e3a\u4ece\u4e0a\u4e00\u4e2a\u5783\u573e\u5230\u8fd9\u4e00\u4e2a\u5783\u573e\u8981\u7ecf\u8fc7\u591a\u5c11\u65f6\u95f4\n\n\u800c\u4e14\u663e\u7136\u8981\u5f53f[i-1][j]-(a[i].x-a[i-1].x)>=0\u65f6\u624d\u5728\u5f53\u524d\u65f6\u95f4\u662f\u5b58\u6d3b\u7740\u7684\u624d\u53ef\u4ee5\u5403\u4e0b\u8fd9\u4e2a\u5783\u573e,\u5403\u4e0b\u8fd9\u4e2a\u5783\u573e\u56de\u590d\u7684\u8840\u91cf\u5c31\u662fa[i].t,\u4e14\u8fd9\u53ea\u725b\u5f88\u5389\u5bb3\u53ef\u4ee5\u5728\u521a\u597d\u6b7b\u7684\u65f6\u5019\u5403\u4e0b\u4e00\u4e2a\u5783\u573e(+1s)\n\n2.\u5c06\u8fd9\u4e2a\u5783\u573e\u53e0\u8d77\u6765f[i][j]=max{f[i][j],f[i-1][j-a[i].h]-a[i].x+a[i-1].x}\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e2d\u663e\u7136\u6211\u4eec\u5982\u679c\u53ef\u4ee5\u5c06\u5f53\u524d\u5783\u573e\u653e\u7f6e\u5e76\u8fbe\u5230j\u8fd9\u4e2a\u9ad8\u5ea6\u65f6\u5728\u5f53\u524d\u9ad8\u5ea6\u51cf\u53bb\u5f53\u524d\u5783\u573e\u7684\u9ad8\u5ea6a[i].h,\u5373([j-a[i].h)\u8981\u6709\u4e00\u4e2a\u53ef\u4ee5\u5728\u7ecf\u8fc7(a[i].x-a[i-1].x)\u7684\u65f6\u95f4\u4ecd\u7136\u5b58\u6d3b\uff0c\u5f53\u7136j-a[i].h\u8981>=0,\u65f6\u95f4\u4e3a\u8d1f\u6570\u663e\u7136\u662f\u4e0d\u53ef\u80fd\u7684\n\n\u800c\u4e14\u8fd9\u53ea\u725b\u5f88\u5389\u5bb3,\u5728\u751f\u547d\u7684\u6700\u540e\u4e00\u79d2\u4ecd\u7136\u53ef\u4ee5\u5806\u4e0a\u4e00\u4e2a\u5783\u573e(+1s)\n\n\u8fd9\u65f6\u5982\u8fc7\u6211\u4eec\u679a\u4e3e\u7684\u9ad8\u5ea6j\u8fbe\u5230\u4e86\u76ee\u6807\u9ad8\u5ea6n(\u8981\u6ee1\u8db3\u8840\u91cf>=0)\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51faa[i].x\n\n\u4e3a\u4ec0\u4e48\u5462\uff0c\u56e0\u4e3a\u5f00\u59cb\u65f6\u6211\u4eec\u6392\u4e86\u4e00\u6b21\u5e8f\uff0c\u4e14\u6211\u4eec\u662f\u4ee5\u6bcf\u4e00\u4e2a\u5783\u573e\u4e3a\u5916\u5faa\u73af\u8fdb\u884c\u679a\u4e3e\u7684\uff0c\u6240\u4ee5\u5f53\u6709\u4e00\u4e2aj\u8fbe\u5230\u4e86\u76ee\u6807\u9ad8\u5ea6\u90a3\u4e48\u80af\u5b9a\u662f\u6700\u4f18\u7684\n\n\u5f53\u6211\u4eec\u51fa\u4e86\u6700\u4f18\u89e3\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\u4e86\n\n\u4f46\u5982\u679c\u6ca1\u6709\u627e\u5230\u6700\u4f18\u89e3\uff0c\u90a3\u6211\u4eec\u5c31\u91cd\u65b0\u679a\u4e3e\u4e00\u6b21\u6b64\u65f6\u7684\u7b54\u6848ans\u4e3amax{ans,f[i][j]+a[i].x}\n\n\u56e0\u4e3a\u5728\u5230\u8fbe\u4e86\u7684i\u4e2a\u5783\u573e\u540e\u6211\u4eec\u8fd8\u53ef\u4ee5\u518d\u6491f[i][j]s\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define INF 0x7fffffff\n#define ll long long\n#define one_by_one (karment[i].time-karment[i-1].time)\nusing namespace std;\nll sum,dep;\nll ans;\nstruct laji{ll time,food,high;}karment[10000]; \nll dp[1005][1005];\nbool cmp(laji a,laji b){return a.time<b.time;}\nint main()\n{\n\tll i,j;\n\t//cout<<INF;\n\tcin>>dep>>sum;\n\tfor(i=0;i<=sum;i++)\n\tfor(j=0;j<=dep;j++)dp[i][j]=-INF;\n\t//cout<<dp[1][0];\n\tfor(i=1;i<=sum;i++)cin>>karment[i].time>>karment[i].food>>karment[i].high;\n\tsort(karment+1,karment+sum+1,cmp);\n\t//for(i=1;i<=sum;i++)cout<<karment[i].time<<\" \";\n\tdp[0][0]=10;\n\tkarment[0].time=0;\n\tkarment[0].high=0;\n\tkarment[0].food=0;\n\tfor(i=1;i<=sum;i++)\n\tfor(j=0;j<=dep;j++)\n\t{\n\t\t//cout<<1;\n\t\tif(dp[i-1][j]-one_by_one>=0)\n\t\tdp[i][j]=max(dp[i][j],dp[i-1][j]-one_by_one+karment[i].food);\n\t\tif(dp[i-1][j-karment[i].high]-one_by_one>=0&&j-karment[i].high>=0)\n\t\t{\n\t\t\tdp[i][j]=max(dp[i][j],dp[i-1][j-karment[i].high]-one_by_one);\n\t\t\t//cout<<\"nowlife: \"<<dp[i][j]<<\" \"<<\"high: \"<<j<<\" time: \"<<karment[i].time<<endl;\n\t\t\tif(j==dep)\n\t\t\t{\n\t\t\t\tcout<<karment[i].time;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\t//cout<<\"nowlife: \"<<dp[i][j]<<\" \"<<\"high: \"<<j<<\" time: \"<<karment[i].time<<endl;\n\t}\n\t//cout<<1<<endl;\n\tfor(i=0;i<=sum;i++)\n\tfor(j=0;j<=dep;j++)\n\tans=max(ans,dp[i][j]+karment[i].time);\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1544607679,
        "uid": 89490,
        "name": "AmadeusSG",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "\u54a6\uff1f\u6211\u5c45\u7136\u81ea\u5df1\u5199\u51fa\u4e86\u4e2adp\u9898\uff1f\n\nemmm...\u5c45\u7136\u6ca1\u6709copy\u522b\u4eba\u7684\u4ee3\u7801\u3002\u3002\u3002\uff08\u5c31\u662f\u6700\u540e\u8dd1\u51fa\u6765\u7684\u65f6\u95f4\u6709\u70b9\u611f\u4eba\uff0c\u8fd1\u4e09\u500d`_(:\u0437\u300d\u2220)_`\uff09\n\n\u4e0d\u77e5\u548c\u522b\u4eba\u7684\u601d\u8def\u4f1a\u4e0d\u4f1a\u6709\u4ec0\u4e48\u533a\u522b\u3002\n\n\u4e8e\u662f\u4e4e\u5199\u7bc7\u9898\u89e3\u3002\n\n\u9996\u5148\u8fd9\u4e2a\u9898\u6211\u662f\u70b9\u80cc\u5305\u8fdb\u6765\u7684\uff0c\u4e8e\u662f\u4fbf\u5f00\u59cb\u8bbe\u8ba1\u72b6\u6001\u3002\u3002\u3002\uff08\u771f\u4e0d\u77e5\u9053\u6bd4\u8d5b\u7684\u65f6\u5019\u770b\u5230\u8fd9\u79cd\u9898\u4f1a\u600e\u4e48\u6837\uff09\n\n## \u72b6\u6001\u8bbe\u8ba1\n\n\u90a3\u4e48\u8fd9\u91cc\u6211\u7528\u4e86 $f[i]$ \u8868\u793a\u5f53\u524d\u5269\u4f59\u80fd\u91cf\u4e3a i \u65f6\uff0c\u80fd\u722c\u5230\u7684\u6700\u5927\u9ad8\u5ea6\u3002\n\n\u4e8e\u662f\u8003\u8651\u72b6\u6001\u8f6c\u79fb\u3002\n\n## \u72b6\u6001\u8f6c\u79fb\n\n\u5982\u679c $f[i]$ \u662f\u53ef\u8fbe\u72b6\u6001\uff08\u540c\u65f6 i \u8981\u5927\u4e8e\u8be5\u6b21\u5783\u573e\u6389\u843d\u7684\u65f6\u95f4\u4e0e\u4e0a\u4e00\u6b21\u6389\u843d\u4e4b\u95f4\u7684\u65f6\u95f4\u5dee\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u7528 $f[i]$ \u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u9996\u5148\u7528 $f[i]$ \u5904\u7406\u5f53\u524d\u5783\u573e\u6389\u843d\u6709\u4e24\u79cd\u8f6c\u79fb\uff1a\n\n\t1.\u5783\u573e\u62ff\u6765\u5403\uff0c\u90a3\u4e48\u6709\uff1a\n    \n    \tnew_f[i-pass+a[i].F]=max(new_f[i-pass+a[i].F],f[i])\n        \n       \n\t2.\u5783\u573e\u62ff\u6765\u53e0\uff0c\u90a3\u4e48\u6709\uff1a\n    \n    \tnew_f[i-pass]=max(new_f[i-pass],f[i]+a[i].H)\n\n\n    \u5176\u4e2d \uff1a new_f \u662f\u6b63\u5728\u66f4\u65b0\u7684 f \u6570\u7ec4\uff0c\n        \tpass \u8868\u793a\u79bb\u4e0a\u4e00\u6b21\u5783\u573e\u6389\u843d\u7ecf\u8fc7\u7684\u4e8b\u4ef6\n            a[i].F \u8868\u793a\u5403\u6389\u5783\u573e\u83b7\u5f97\u7684\u80fd\u91cf\u503c\n            a[i].H \u8868\u793a\u5783\u573e\u7684\u9ad8\u5ea6\n\n\u7136\u540e\u5c31\u597d\u8f6c\u79fb\u4e86\u3002\n\n\u6700\u540e\u5728\u5f00\u4e00\u4e2a g \u6570\u7ec4\u6eda\u52a8\u8f6c\u79fb\u3002\u3002\u3002\n\n\n## \u7b54\u6848\u5904\u7406\n\n\u4f46\u662f\u8fc7\u7a0b\u4e2d\u5224\u65ad\u51fa\u8fbe\u5230\u6d1e\u53e3\u4e86\u7684\u8bdd\u8981\u76f4\u63a5\u8f93\u51fa\n\n\u800c\u5982\u679c\u6b7b\u90fd\u8fbe\u4e0d\u5230\u6d1e\u53e3\uff0c\u90a3\u4e48\u5c31\u8ba1\u7b97\u5976\u725b\u6b7b\u7684\u65f6\u95f4\u3002\n\n\uff08\u6211\u4eec\u5728\u6bcf\u4e2a\u7269\u54c1\u53c2\u4e0e\u8f6c\u79fb\u540e\uff0c\u53bb\u5224\u65ad\u6709\u6ca1\u6709 $f[i]>=0$ (\u5373\u72b6\u6001\u53ef\u8fbe)\uff0c\n\u7136\u540e\u4ee4$ ans=now\\_tim+i; $\uff09\n\n\n## \u6ce8\u610f\u6709\u5751\n\n\u867d\u7136\u6837\u4f8b\u4e2d\u5783\u573e\u662f\u6309\u65f6\u95f4\u987a\u5e8f\u7ed9\u51fa\u7684\uff0c\n\u4f46\u662f\u9898\u76ee\u91cc\u9762\u6ca1\u6709\u8bf4\u5783\u573e\u662f\u600e\u4e48\u4e2a\u987a\u5e8f\u7ed9\u51fa\u7684\uff0c\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u63a8\u6d4b\u51fa\u9898\u4eba\u8fd8\u662f\u6709\u70b9\u6bd2\u7624\u7684\u3002\n\n\n## \u4ee3\u7801\u90e8\u5206\n\uff08\u611f\u89c9\u5229\u7528 cnblogs \u7ed9\u4ee3\u7801\u52a0\u884c\u53f7\u4f1a\u88ab\u5acc\u5f03\uff0c\u4e8e\u662f\u5c31\u4e0d\u6076\u5fc3\u5927\u5bb6\u4e86\uff09\n\n```\n//by Judge\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int M=1e5+111;\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){ int x=0,f=1; char c=getchar();\n    for(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n    for(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} int n,ans=10,las,V,f[M],g[M]; struct node{ int T,F,H; }a[M];\ninline bool cmp(node& a,node& b){ return a.T<b.T; }\ninline void cmax(int& a,int b){ if(a<b) a=b; }\nint main(){\n    V=read(),n=read(),las=0;\n    memset(f,-0x3f,sizeof(f)),f[10]=0;\n    for(int i=1;i<=n;++i)\n        a[i].T=read(),\n        a[i].F=read(),\n        a[i].H=read();\n    sort(a+1,a+1+n,cmp);\n    for(int i=1,les;i<=n;++i){\n        les=a[i].T-las,memset(g,-0x3f,sizeof(g));\n        for(int j=a[i].T-las;j<=3000;++j) if(f[j]>=0){\n            cmax(g[j-les],f[j]+a[i].H);\n            cmax(g[j-les+a[i].F],f[j]);\n        } las=a[i].T,swap(f,g);\n        for(int j=0;j<=3000;++j)\n            if(f[j]>=V) return printf(\"%d\\n\",las),0;\n            else if(f[j]>=0) ans=max(ans,las+j);\n    } return printf(\"%d\\n\",ans),0;\n}\n```\n\n",
        "postTime": 1540374362,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    },
    {
        "content": "~~\u8fd9\u9898\u5f88\u6c34~~\n\n\u5206\u6790\uff1a\n\n\u8fd9\u9898\u662f\u7c7b\u80cc\u5305\u95ee\u9898\u7684\u52a8\u6001\u89c4\u5212\u3002\n\n\u57fa\u672c\u601d\u8def\u662f\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u6765\u5b58\u5f53\u524d\u9ad8\u5ea6\u7684\u751f\u547d\n\n\u72b6\u6001\u51b3\u7b56\u5c31\u662f\u5403\u548c\u4e0d\u5403\n\n\u8fd9\u91cc\u7528bool\u6570\u7ec4\u8868\u793a\u5b58\u6d3b\u4e0e\u5426\n\na[k].f\u8868\u793a\u5403\u4e86\u7b2ck\u4ef6\u7269\u54c1\u6062\u590d\u7684\u751f\u547d\u503c\n\n\u5047\u5982\u80fd\u5403 f[i][j+a[k].f]=true;\n\na[k].h\u8868\u793a\u7528\u4e86\u7b2ck\u4ef6\u7269\u54c1\u80fd\u5806\u7684\u9ad8\u5ea6\n\n\u5047\u5982\u80fd\u7528 f[i+a[k].h][j]=true;\n\n\u521d\u59cb\u72b6\u6001f[0][10]\uff0c\u6700\u5f00\u59cb\u80fd\u5b58\u6d3b10\u5206\u949f\n\n\u00a0\n```cpp\n 1 #include <iostream>\n 2 #include <algorithm>\n 3 #include <cstdio>\n 4 struct ab\n 5 {\n 6     int t,f,h;\n 7 }a[101];\n 8 int d,g;\n 9 bool f[400][6000]={false};//\u8868\u793a\u5728\u9ad8\u5ea6\u4e3ai\u7684\u60c5\u51b5\u4e0b\u80fd\u5b58\u6d3bj\u7684\u65f6\u95f4 \n10 bool comp(ab a,ab b)//sort \n11 {\n12     return a.t<b.t;\n13 }\n14 using namespace std;\n15 main()\n16 {\n17     scanf(\"%d%d\",&d,&g);\n18     int s=10;\n19     for (int i=1;i<=g;i++)\n20       {\n21           scanf(\"%d%d%d\",&a[i].t,&a[i].f,&a[i].h);\n22           s+=a[i].f;//s\u8868\u793a\u6700\u957f\u5b58\u6d3b\u65f6\u95f4 \n23       }\n24     sort(a+1,a+g+1,comp);//\u6309\u65f6\u95f4\u6392\u5e8f \n25     f[0][10]=true;//\u6700\u77ed\u5b58\u6d3b10\u5206\u949f \n26     for (int k=1;k<=g;k++)//\u4e00\u4e2a\u4e00\u4e2a\u5783\u573e\u904d\u5386 \n27         for (int i=d-1;i>=0;i--)//i\u8868\u793a\u9ad8\u5ea6    //\u4e3a\u4ec0\u4e48\u52300\u5462?\u56e0\u4e3a\u52300\u5c31\u6b7b\u5566 \n28             for (int j=s;j>=a[k].t;j--)//j\u8868\u793a\u65f6\u95f4,\u6700\u957f\u4e3as \n29             if (f[i][j]==true)//\u5047\u5982\u8fd9\u4e2a\u65f6\u95f4\u70b9\u80fd\u5b58\u6d3b \n30             {\n31                 f[i+a[k].h][j]=true;//\u8fd9\u4e2a\u5783\u573e\u7528\u4e8e\u52a0\u9ad8\u5ea6 \n32                 if (i+a[k].h>=d)//\u5047\u5982\u51fa\u53bb\u4e86 \n33                 {\n34                     printf(\"%d\",a[k].t);//\u8f93\u51fa\u65f6\u95f4,\u56e0\u4e3a\u6392\u5b8c\u5e8f\u4e86,\u6240\u4ee5\u662f\u6700\u4f18\u89e3 \n35                     exit(0);//\u76f4\u63a5\u9000\u51fa \n36                 }\n37                 f[i][j+a[k].f]=true;//\u8fd9\u4e2a\u5783\u573e\u7528\u4e8e\u52a0\u65f6\u95f4 \n38             }\n39     for (int i=s;i>=1;i--)//\u4ece\u540e\u5f80\u524d\u904d\u5386\u65f6\u95f4,\u5047\u5982\u9047\u89c1\u5c31\u662f\u6700\u957f\u65f6\u95f4 \n40         if (f[0][i])//\u6700\u957f\u5341\u5206\u949f  //\u77e5\u9053\u90a3\u4e2a\u8d4b\u503c\u8bed\u53e5\u7684\u7528\u9014\u4e86\u5427 \n41         {\n42             printf(\"%d\",i);//\u76f4\u63a5\u8f93\u51fa,\u8df3\u51fa\u5faa\u73af(\u7a0b\u5e8f) \n43             break;\n44         }\n45 }\n```",
        "postTime": 1504263940,
        "uid": 54028,
        "name": "Thor_Odinson",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1156 \u3010\u5783\u573e\u9677\u9631\u3011"
    }
]