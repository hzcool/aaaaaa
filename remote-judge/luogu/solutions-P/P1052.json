[
    {
        "content": "# \u9898\u89e3\n\n## step 1\u7406\u89e3\u9898\u610f\n\n\u5728\u505a\u8fd9\u9053\u9898\u4e4b\u524d\uff0c\u4e00\u5b9a\u8981\u7406\u89e3\u597d\u9898\u610f\uff0c\u6709\u4e00\u4e2a\u9700\u8981\u7279\u522b\u6ce8\u610f\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n\n**\u9752\u86d9\u4e0d\u662f\u4e00\u5b9a\u8981\u8df3\u5230\u77f3\u5934\u4e0a**[\u55ef...\u8fd9\u4e00\u70b9\u5751\u4e86\u6211\u597d\u4e45]\u800c\u662f\u6307\u9752\u86d9\u5c3d\u91cf\u4e0d\u8e29\u77f3\u5934\u7684\u60c5\u51b5\u4e0b\u8fd8\u8981\u8df3\u5230\u591a\u5c11\u4e2a\u77f3\u5934\u4e0a[\u8bed\u6587\u6e23\u6c42\u539f\u8c05]\u3002\n\n## step 2\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u65b9\u7a0b\u5f0f\u3002\n\n\u9996\u5148\u8bbef[i]\u4e3a\u5728i\u70b9\u4e0a\u7684\u6700\u5c11\u8e29\u77f3\u5b50\u6570\u5219\u5728\u524d\u9762(i-s)\u5230(i-t)\u7684\u70b9\u90fd\u53ef\u4ee5\u6539\u53d8i\u70b9\u7684\u503c,\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u53d6f[i-s]-f[i-t]\u4e4b\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u53e6\u5916\u5982\u679c\u6709\u77f3\u5934\u5c31\u52a0\u4e0a1\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u4e0d\u52a0\u503c\uff0c\u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u7528flag[i]\u8868\u793a\u8be5\u70b9\u6709\u65e0\u77f3\u5934(\u6709\u5219\u4e3a1\uff0c\u65e0\u5219\u4e3a0)\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5f0f:$f[i]=\\min(f[i-j]+flag[i]|s<=j<=t)$\n\n## step 3\u8def\u5f84\u538b\u7f29\n\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u9898\u8fd8\u6ca1\u5b8c\u5462...\u5982\u679c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2af[10^9]\u7684\u6570\u7ec4\uff0c\u8fd9\u80af\u5b9a\u662f\u4f1a\u7206\u5185\u5b58\u7684\u2014\u2014\u6240\u4ee5...**[\u6211\u5c31\u653e\u5f03\u4e86\u8fd9\u9053\u9898]**[\u989d\uff0c\u53ef\u80fd\u5417]..\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f7f\u5f97\u8fd9\u91cc\u91c7\u7528\u4e00\u79cd\u6700\u5408\u9002\u7684\u65b9\u6cd5\u2014\u2014\u8def\u5f84\u538b\u7f29(\u5176\u5b9e\u8fd8\u6709\u5176\u4ed6\u66f4(bu)\u4f18(kao)\u79c0(pu)\u65b9\u6cd5\u7684)\uff0c\u76ee\u7684\u662f\u8981\u627e\u5230\u4e24\u77f3\u540c\u76f8\u9694\u8f83\u957f\u65f6\u76f4\u63a5\u7f29\u77ed\u7684\u65b9\u6cd5\u3002\n\n**[\u524d\u65b9\u9ad8\u80fd,\u8bf7\u6570\u5b66\u5b66\u79d1\u6050\u60e7\u75c7\u60a3\u8005\u5c3d\u5feb\u64a4\u79bb!!]**:\n\n\u5047\u8bbe\u6bcf\u6b21\u8d70p\u6216\u8005p+1\u6b65.\u6211\u4eec\u77e5\u9053$\\gcd(p,p+1)$=1.\n\n\u7531\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u53ef\u77e5\uff0c\u5bf9\u4e8e\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u7ec4\uff1a\n\n$px+(p+1)y=\\gcd(p,p+1)$\u662f\u6709\u6574\u6570\u89e3\u7684\uff0c\u5373\u53ef\u5f97\uff1a$px+(p+1)y=s$\u662f\u4e00\u5b9a\u6709\u6574\u6570\u89e3\u7684\u3002\n\n\u8bbe$px+(p+1)y=s$\u7684\u89e3\u4e3a\uff1a$x=x0+(p+1)t,y=y0-pt$\u3002\u4ee4$0<=x<=p$(\u901a\u8fc7\u589e\u51cft\u4e2ap+1\u6765\u5b9e\u73b0)\uff0c$s>p*(p+1)-1$,\n\n\u5219\u6709\uff1a$y=\\frac{s-px}{p+1}>=\\frac{s-p^2}{p+1}>\\frac{p*(p+1)-1-px}{p+1}>=0$\n\n\u5373\u8868\u793a\uff0c\u5f53 $s>=p*(p+1)$ \u65f6\uff0c$px+(p+1)y=s$ \u6709\u4e24\u4e2a\u975e\u8d1f\u6574\u6570\u89e3\uff0c\u6bcf\u6b21\u8d70p\u6b65\u6216\u8005 $p+1$ \u6b65\uff0c$p*(p+1)$ \u4e4b\u540e\u7684\u5730\u65b9\u5747\u80fd\u591f\u5230\u8fbe\u3002\n\n\u5982\u679c\u4e24\u4e2a\u77f3\u5b50\u4e4b\u95f4\u7684\u8ddd\u79bb\u5927\u4e8e $p*(p+1)$ \uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u5c06\u4ed6\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u66f4\u6539\u4e3a $p*(p+1)$ \u3002\n\n\u7efc\u4e0a\uff0c\u5f97\u5230\u538b\u7f29\u8def\u5f84\u7684\u65b9\u6cd5\uff1a\u82e5\u4e24\u4e2a\u77f3\u5b50\u4e4b\u95f4\u7684\u8ddd\u79bb> $t*(t-1)$ \uff0c\u5219\u5c06\u4ed6\u4eec\u7684\u8ddd\u79bb\u66f4\u6539\u4e3a $t*(t-1)$ \u3002\n\n\u56e0\u4e3a $t<=10$ \uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u5927\u4e8e10\\*9\u7684\u8ddd\u79bb\u76f4\u63a5\u5316\u4e3a90.\n\n\u4f46\u662f\u8981\u6ce8\u610f\uff0c\u5bf9\u4e8e $s=t$ \u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e0d\u6210\u7acb\u7684\u5e94\u4e3a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6b21\u662f\u4e0d\u80fd\u591f\u8d70p+1\u6b65\u7684\uff0c\u56e0\u6b64\u9700\u8981\u53e6\u5916\u7279\u6b8a\u5224\u65ad\u3002\n\n\u65b9\u7a0b\u5982\u4e0b:\n\n$f[i]=f[i-1]+(i \\mod s ==0)$\n\n# \u4ee3\u7801\u5b9e\u73b0\n\n\n```cpp\n#include<iostream> \n#include<cstdio> \n#include<algorithm> \n#include<climits> \nusing namespace std; \nint f[10005],far[10005],a[10005],flag[10005],p,s,t,n; \nint main() \n{ \n    scanf(\"%d\",&p); \n    scanf(\"%d%d%d\",&s,&t,&n); \n    if(s==t) //\u7279\u6b8a\u60c5\u51b5\u5224\u65ad\n    { \n        int cont=0,qaq; \n        for(int i=1;i<=n;++i)scanf(\"%d\",&qaq),cont+=((qaq%s)==0); \n        printf(\"%d\\n\",cont);return 0; \n    } \n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]); \n    sort(a+1,a+n+1);a[0]=0;f[0]=0; \n    far[n+1]=min(p-a[n],100);p=0; //\u8ba1\u7b97\u7ec8\u70b9\u4e0e\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\n    for(int i=1;i<=n;i++)far[i]=min(a[i]-a[i-1],90),p+=far[i],flag[p]=1; //\u7f29\u77ed\u8def\u5f84\uff0c\u5b58\u50a8\u7f29\u77ed\u540e\u7684\u7ec8\u70b9\u8ddd\u79bb\u5e76\u6807\u8bb0\u77f3\u5934\u4f4d\u7f6e\n    p+=far[n+1]; \n    for(int i=1;i<=p+9;i++) \n    { \n        f[i]=INT_MAX-1; \n        for(int j=s;j<=t;j++)if(i>=j)f[i]=min(f[i],f[i-j]+flag[i]); \n    } \n    int minn=INT_MAX-1; \n    for(int i=p;i<=p+9;i++) //\u56e0\u4e3a\u9752\u86d9\u53ef\u4ee5\u8df3\u51fa\u8fb9\u754c\u4e14t<=10\u56e0\u6b64\u518d\u7ec8\u70b9\u540ep-p+9\u4e2d\u53d6\u6700\u5c0f\u503c\n    minn=min(minn,f[i]); \n    printf(\"%d\",minn); \n} \n```\n[CSDN](http://blog.csdn.net/qq\\_34940287/article/details/77494073)\n\n2020.7.2 UPD:\u60f3\u4e0d\u5230\u8fd9\u7bc7\u535a\u5ba2\u4f1a\u6536\u5230\u8fd9\u4e48\u591a\u7684\u597d\u8bc4...\u8fd9\u7bc7\u535a\u5ba2\u662f\u6211\u521d\u5b66\u52a8\u6001\u89c4\u5212\u7684\u65f6\u5019\u5199\u7684\uff0c\u5e76\u4e14\u5f53\u65f6\u4e5f\u8fd8\u6ca1\u6709\u8003NOIP2017\u3002\u6240\u4ee5\u5b58\u5728\u5f88\u591a\u7406\u89e3\u4e0d\u591f\u6df1\u523b\u4e4b\u5904\u3002\n\n  \u672c\u9898\u9700\u8981\u6211\u4eec\u9700\u8981\u6c42\u5f97\u4e00\u4e2a\u6700\u5c0f\u7684\u503c$t$\u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709$s>t$\u7684$px+(p+1)y=s$\u4e00\u5b9a\u6709\u975e\u8d1f\u6574\u6570\u89e3\u3002\u6839\u636eNOIP2017\u63d0\u9ad8\u7ec4D1T1\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u6570\u4e3a$t=p(p+1)-p-(p+1)$\u3002\n  \u7531\u4e8e\u672c\u9898\u7684\u6700\u5927\u6b65\u957f\u4e3a$10$\uff0c\u56e0\u6b64$t_{max}=9\\times10-9-10=71$\u3002\u56e0\u6b64\u672c\u9898\u6211\u4eec\u7684\u538b\u7f29\u8ddd\u79bb\u6700\u5c0f\u53ef\u4ee5\u8fbe\u5230$71$(\u5728\u672c\u6587\u505a\u6cd5\u4e2d\u4e0d\u662f$72$)\u3002\n\n  \u5148\u524d\u5bf9\u4e8e\u540c\u5b66\u4eec\u7684\u8bef\u5bfc\uff0c\u7b14\u8005\u6df1\u8868\u6b49\u610f\u3002",
        "postTime": 1503628871,
        "uid": 41319,
        "name": "Panda_hu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u8c8c\u4f3c\u67d0\u795e\u7287\u628a\u51e0\u7bc7\u9898\u89e3\u90fdhack\u4e86~~\uff08\u60f6\u6050\uff09~~\u3002\n\n\u672c\u849f\u84bb\u6765\u53d1\u7bc7\u9898\u89e3\u4f9b\u5927\u5bb6\u53c2\u8003\uff08\u5199\u7684\u4e0d\u597d\u7684\u5730\u65b9\u8bf7\u8c05\u89e3\uff09\u3002\n\n\u57fa\u672c\u7684\u601d\u8def\u5f88\u7b80\u5355\uff1a\n\n\u7b2c\u4e00\u773c\u770b\u8fd9\u9898\u7684\u540c\u5b66\u5e94\u8be5\u9996\u5148\u7acb\u5373\u5c31\u4f1a\u60f3\u5230\u52a8\u89c4\u5427\u3002~~\uff08\u663e\u800c\u6613\u89c1\uff09~~\n\n\u56e0\u4e3a\u5b83\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u3002\n\n\u5f53\u524d\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\u90fd\u53ef\u4ee5\u7531\u4e4b\u524d\u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\u3002\n\n\u5f53\u524d\u7684\u51b3\u7b56\u5bf9\u4e4b\u540e\u90fd\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\u3002\n\n$\\color{blue}But$\u52a8\u6001\u89c4\u5212\u6700\u91cd\u8981\u7684\u5c31\u662f\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\n\n\u6069\uff0c\u7ecf\u8fc7\u4e00\u6bb5\u601d\u8003\u6211\u4eec\u4e0d\u96be\u5f97\u51fa\u4ee5\u4e0b\u51e0\u6761\u7ed3\u8bba\uff1a\n\n1. \u5f53\u524d\u7684\u70b9$i$\u53ea\u4e0e\u5b83\u524d$i-j$\u4e2a\u70b9\u6709\u5173($s\\leq j\\leq t$)\n\n2. \u5982\u679c\u5f53\u524d\u7684\u70b9\u662f\u77f3\u5934\u90a3\u4e48\u5c31\u662f\u6240\u6709\u5230\u8fbe\u8be5\u70b9\u7684\u4f4d\u7f6e\u6240\u9700\u8e29\u7684\u6700\u5c11\u77f3\u5934\u6570\u52a0$1$\n\n\u7ecf\u8fc7\u4e0a\u8ff0\u7684\u5206\u6790\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u6211\u4eec\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e86\uff1a\n\n- \u8be5\u70b9\u4e3a\u77f3\u5934\uff1a\n $dp[i] = min(dp[i],dp[i-j] +1)(s\\leq j\\leq t)$\n \n- \u8be5\u70b9\u4e0d\u4e3a\u77f3\u5934\uff1a\n $dp[i] = min(dp[i],dp[i-j])(s\\leq j\\leq t)$\n\n\u5206\u6790\u5230\u8fd9\u597d\u50cf\u5dee\u4e0d\u591a\u4e86\u3002\n\n\u7b49\u7b49\uff01\n\n\u5f53\u6211\u4eec\u731b\u7136\u770b\u5230\u6570\u636e\u8303\u56f4\u65f6\u5c31\u4f1a\u53d1\u73b0\u8fd9\u9898\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\uff1a\n$L\\leq 10^9$\n\n\u8fd9\u4e48\u5927\u7684\u6570\u636e\u8303\u56f4\u7528\u6570\u7ec4\u5b58\u80af\u5b9a\u5b58\u4e0d\u4e0b\u3002\n\n\u4f46\u662f\u6211\u4eec\u5374\u60ca\u5947\u53d1\u73b0\u77f3\u5934\u6570\u5f88\u5c0f\u3002\n\n\u600e\u4e48\u529e\u5462\uff1f\u5148\u8ba9\u6211\u4eec\u6765\u770b\u770b\u8fd9\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/42022.png)\n\u5176\u4e2d$[S_i,T_i]$\u5c31\u662f\u9752\u86d9\u53ef\u4ee5\u5230\u7684\u533a\u95f4\u3002\n\u53ef\u4ee5\u53d1\u73b0\u5f53$\\color{Red}\\textbf{s < t}$\u65f6\uff0c\n$s$\u548c$t$\u4e00\u5b9a\u4f1a\u91cd\u5408\uff08\u5f53\u8ddd\u79bb\u4e3a$lcm(s,t)$\u5373$s$\uff0c$t$\u7684\u6700\u5c0f\u516c\u500d\u6570\u65f6\uff09\n\u800c\u8fd9\u4ee5\u540e\u7684\u6bcf\u4e2a\u70b9\u90fd\u53ef\u4ee5\u5230\u8fbe\uff0c\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u5c06\u6bcf\u4e24\u4e2a\u77f3\u5934\u8d85\u8fc7 $s\\times t$ \u7684\u8ddd\u79bb\u7f29\u6210$s \\times t$\u5c31\u53ef\u4ee5\u4e86\u5f53\u7136\u5982\u679c\u4f60\u6709\u7591\u8651\u7684\u8bdd\u4e5f\u53ef\u4ee5\u5f00\u5927\u4e00\u70b9\u3002\n\n\u5f53$s = t$\u65f6\u6211\u4eec\u53ea\u9700\u679a\u4e3e\u6bcf\u4e2a\u77f3\u5934\u7684\u5750\u6807\u662f\u5426\u4e3a$s$\u7684\u500d\u6570\u5373\u53ef\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn = 150;\nconst int maxl = 300 * 105;\n//\u5176\u5b9e\u5f0090 * 105\u5c31\u53ef\u4ee5\u4e86\uff1b\nint L,s,t,m,stone[maxn],a[maxn],dp[maxl],base;\n//stone\u5c31\u662f\u77f3\u5934\u7684\u521d\u59cb\u4f4d\u7f6e\uff1ba\u4e3a\u6211\u4eec\u5c06\u77f3\u5934\u521d\u59cb\u5316\u540e\u7684\u77f3\u5934\u4f4d\u7f6e\uff1b\nbool vis[maxl];\n//\u6807\u8bb0\u4e00\u4e0b\u5750\u6807\u4e0a\u7684\u8be5\u70b9\u662f\u5426\u4e3a\u77f3\u5934\uff1b\nint main()\n{\n    ios::sync_with_stdio(0);\n//  \u5173\u6389\u540c\u6b65\uff0c\u52a0\u5febcin\u7684\u901f\u5ea6\n    cin >> L;\n    cin >> s >> t >> m;\n    base = s * t;\n    for(int i = 1 ; i <= m ; ++ i)\n        cin >> stone[i];\n    sort(stone + 1,stone + 1 + m);\n//  \u5224\u6bb5s == t\u7684\u60c5\u51b5\n    if(s == t){\n        int cnt =0;\n        for(int i = 1 ; i <= m ; ++ i)\n            if(stone[i] % s == 0)cnt++;\n        cout << cnt << endl;\n        return 0;\n    }\n    for(int i = 1 ; i <= m ; ++ i)\n    {\n//      \u79bb\u6563\u5316\u8fc7\u7a0b\n        int d = stone[i] - stone[i - 1];\n        if(d >= base)d = base;\n        a[i] = a[i - 1] + d;\n        vis[a[i]] = 1;\n    }\n    L = a[m] + base;\n//  \u5c06L\u53d8\u6210\u6700\u540e\u4e00\u4e2a\u77f3\u5934\u7684\u4f4d\u7f6e+s*t\n//  \u5982\u679cL - a[m] >= s * t\u5c31\u7f29\u6210s * t\n//  \u5982\u679cL - a[m] <= s * t\u5c31\u52a0\u4e0a\u4e00\u4e2a\u6570\u4f7f\u5f97\u5b83\u7b49\u4e8e\u8fd9\u4e2a\u8ddd\u79bb\u56e0\u4e3a\u9752\u86d9\u53ef\u80fd\u8df3\u51fa\u72ec\u6728\u6865\n    memset(dp,0x7f,sizeof(dp));\n    dp[0] = 0;\n//  \u521d\u59cb\u5316\u5230\u539f\u70b9\u5bfb\u6700\u5c11\u8e290\u4e2a\u77f3\u5934\n    for(int i = 1 ; i <= L ; ++ i)\n        for(int j = s ; j <= t ; ++ j)\n        {\n            if(i - j >= 0)\n            {\n                if(vis[i])dp[i] = min(dp[i - j] + 1,dp[i]);\n                else dp[i] = min(dp[i - j],dp[i]);\n            }\n        }\n    int ans = maxn;\n//  \u7ed9\u7b54\u6848\u8d4b\u4e00\u4e2a\u8f83\u5927\u7684\u521d\u503c\n    for(int i = a[m] ; i <= L ; ++ i)\n        ans = min(ans,dp[i]);\n    cout << ans << endl;\n    return 0;\n}\n\n```",
        "postTime": 1541327910,
        "uid": 109707,
        "name": "yzpyzp",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "l\u7684\u8303\u56f4\u592a\u5927\uff0c\u65e0\u6cd5\u4f5c\u4e3a\u6570\u7ec4\u4e0b\u6807\uff0c\u6240\u4ee5\u5148\u79bb\u6563\u5316\uff0c\u518dDP\u3002\u4e24\u70b9\u95f4\u7684\u8ddd\u79bbd\u5927\u4e8et\u65f6\uff0c\u4e00\u5b9a\u53ef\u4ee5\u7531d%t\u8df3\u8fc7\u6765\uff0c\u6240\u4ee5\u6700\u591a\u53ea\u9700\u8981t+d%t\u79cd\u8ddd\u79bb\u7684\u72b6\u6001\u5c31\u53ef\u4ee5\u8868\u793a\u8fd9\u4e24\u4e2a\u77f3\u5b50\u4e4b\u95f4\u7684\u4efb\u610f\u8ddd\u79bb\u5173\u7cfb\u3002\u8fd9\u6837\u5c31\u628a\u9898\u76ee\u4e2d\u768410^9\u538b\u7f29\u6210\u4e862\\*t\\*m\u6700\u591a\u4e0d\u8d85\u8fc72000\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u653e\u5fc3\u5927\u80c6\u5730\u7528DP\u4e86\u3002\u4e0d\u8fc7\u8981\u6ce8\u610f\u9898\u76ee\u4e2d\u7684\u201c\u5f53\u9752\u86d9\u8df3\u5230\u6216\u8df3\u8fc7\u5750\u6807\u4e3aL\u7684\u70b9\u65f6\uff0c\u5c31\u7b97\u9752\u86d9\u5df2\u7ecf\u8df3\u51fa\u4e86\u72ec\u6728\u6865\u201d\uff0c\u6240\u4ee5DP\u7684\u7ec8\u70b9\u662f\u4e00\u4e2a\u8303\u56f4\u800c\u975e\u786e\u5207\u7684\u4e00\u4e2a\u70b9\uff0c\u6700\u540e\u8fd8\u8981\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u53d6\u6700\u5c0f\u503c\u3002\n\n\n```cpp\n#include<bits/stdc++.h>  \n#define ll long long  \nusing namespace std;  \nint f[20000],v[20000],a[211],b[211];  \nint main()  \n{  \n    lll;  \n    ints,t,m;  \n    cin>>l;  \n    cin>>s>>t>>m;  \n    memset(f,0x3f,sizeof(f));  \n    memset(v,0,sizeof(v));  \n    a[0]=0;  \n    for(int i=1;i<=m;i++)  \n        cin>>a[i];  \n    a[m+1]=l;  \n    sort(a,a+m+2);  \n    b[0]=0;  \n    intcnt=0;  \n    for(int i=1;i<=m+1;i++)  \n    {  \n       if(a[i]-a[i-1]>=t)  \n           cnt+=(a[i]-a[i-1])%t+t;   //\u8fd9\u91cc\u4e00\u5b9a\u8981\u5728\u53d6\u6a21\u540e\u52a0t\uff0c\u5426\u5219\u4f1aWA\uff1b  \n       elsecnt+=a[i]-a[i-1];  \n       v[cnt]=1;  //\u8868\u793a\u6b64\u5904\u6709\u77f3\u5b50\uff1b  \n    }  \n    v[cnt]=0,v[0]=0;  \n    f[0]=0;  \n    for(int i=1;i<=cnt+t-1;i++)  \n    {  \n       for(int j=s;j<=t;j++)  \n           if(i-j>=0) f[i]=min(f[i],f[i-j]+v[i]);  \n    }  \n    intans=2100000000;  \n    for(int i=cnt;i<=cnt+t-1;i++)   //\u7ec8\u70b9\u53ef\u80fd\u7684\u8303\u56f4\uff1b \n        ans=min(f[i],ans);  \n    cout<<ans;  \n    return0;  \n}\n```",
        "postTime": 1516775854,
        "uid": 40198,
        "name": "FP\u00b7\u8377\u5170\u732a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u6570\u636e\u8303\u56f4\u662f$10^9$\uff0c\u663e\u7136\u662f\u8981\u79bb\u6563\u5316\u7684\uff0c\u6700\u65b9\u4fbf\u7684\u529e\u6cd5\u662f\u7f29\u70b9\uff0c\u56e0\u4e3a\u6700\u591a\u53ea\u6709$100$\u4e2a\u77f3\u5934\u4e14\u4e00\u6b65\u6700\u8fdc\u53ea\u80fd\u8df3$10$\u4e2a\u5355\u4f4d\u3002\n\n\u5728\u8fd9\u91cc\u4ecb\u7ecd\u51e0\u4e2a\u7f29\u70b9\u65b9\u6cd5\u4ee5\u53ca\u8bf4\u660e\uff1a\n\n\u9996\u5148\u662f$2520$\u7f29\uff0c$2520$\u662f$\\text{lcm}(1,...,10)$\uff0c\u56e0\u6b64\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u65e0\u8bba\u9752\u86d9\u80fd\u8df3\u7684\u8ddd\u79bb\u662f\u591a\u5c11\uff0c\u5b83\u4e00\u5b9a\u53ef\u4ee5\u5230\u8fbe\u8ddd\u79bb$2520$\u5904\u3002\u6240\u4ee5\u5728\u524d\u65b9$2520$\u6ca1\u6709\u77f3\u5934\u65f6\uff0c\u53ef\u4ee5\u5c06\u5f53\u524d\u70b9\u5411\u540e\u79fb$2520$\u6216\u8005\u5c06\u540e\u9762\u7684\u70b9\u5411\u524d\u79fb$2520$\uff1b\n\n\u8fd8\u6709\u4e00\u79cd\u662f$72$\u7f29\uff0c\u56e0\u4e3a$1\\sim 10$\u8fd9\u4e9b\u6570\u5b57\u6700\u5927\u4e0d\u80fd\u8868\u793a\u7684\u6570\u662f$71$\uff08\u89c1NOIP2017D1T1\u5c0f\u51ef\u7684\u7591\u60d1\uff09\uff0c\u800c\u5982\u679c\u524d\u65b9$71$\u8ddd\u79bb\u4ee5\u5185\u6ca1\u6709\u77f3\u5934\u5c31\u53ef\u4ee5\u7f29\u4e86\u3002\n\n\u6211\u5199\u7684\u662f\u52a8\u6001\u7f29\u70b9\uff0c\u5c31\u662f\u5224\u65ad\u5f53\u524d\u70b9\u524d\u9762$t$\u4e2a\u70b9\uff08$t$\u540c\u9898\u610f\uff09\u662f\u5426\u90fd\u76f8\u540c\uff0c\u5982\u679c\u90fd\u76f8\u540c\uff0c\u8bf4\u660e\u8fd9\u4e2a\u70b9\u4ece\u524d\u9762\u8fd9$s-t$\u7684\u70b9\u8f6c\u79fb\u90fd\u662f\u76f8\u540c\u60c5\u51b5\uff0c\u8fd9\u6837\u9012\u63a8\u5230\u4e0b\u4e00\u4e2a\u77f3\u5934\u4e4b\u524d\u90fd\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u77f3\u5934\u79fb\u5230\u8fd9\u4e2a\u70b9\u7684\u4e0b\u4e00\u4e2a\u70b9\uff08\u4e5f\u53ef\u4ee5\u662f\u8fd9\u4e2a\u70b9\uff09\u8fd9\u6837\u5c31\u628a\u8be5\u7f29\u7684\u70b9\u90fd\u7f29\u4e86\uff0c**\u4e0d\u9700\u8981\u501f\u52a9\u4efb\u4f55\u6570\u8bba\u77e5\u8bc6**\uff0c\u4f46\u662f\u5f53$s==t$\u65f6\u9700\u8981\u7279\u5224\u3002\n\n### Code:\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nint f[10000002];\nint a[102];\nint main()\n{\n    int l,s,t,m;\n    scanf(\"%d%d%d%d\",&l,&s,&t,&m);\n    for(int i=1;i<=m;i++)\n        scanf(\"%d\",&a[i]);\n    a[m+1]=l;\n    std::sort(a+1,a+m+2);//\u77f3\u5934\u7ed9\u51fa\u7684\u987a\u5e8f\u4e0d\u4e00\u5b9a\u662f\u5347\u5e8f\n    if(s==t)\n    {\n        int sum=0;\n        for(int i=1;i<=m;i++)\n            if(a[i]%s==0)\n                sum++;\n        printf(\"%d\\n\",sum);\n        return 0;\n    }\n    memset(f,0x3f,sizeof(f));\n    f[0]=0;\n    int sam=0,p=0;//sam\u5b58\u50a8\u5230\u73b0\u5728\u6709\u51e0\u4e2af\u76f8\u540c,p\u5b58\u5f53\u524d\u662f\u7b2c\u51e0\u9897\u77f3\u5934\n    bool flag;\n    for(int i=1;i<=a[m+1];i++)\n    {\n        if(sam>=t)//\u7f29\u70b9\u64cd\u4f5c\n        {\n            sam=1;\n            int d=a[p+1]-i;\n            for(int j=p+1;j<=m+1;j++)\n                a[j]-=d;\n        }\n        flag=false;\n        if(i==a[p+1])\n        {\n            p++;\n            flag=true;//\u58f0\u660e\u5f53\u524d\u662f\u77f3\u5934\n        }\n        for(int j=s;j<=t;j++)\n            if(i-j>=0&&f[i]>f[i-j])\n                f[i]=f[i-j]+(flag?1:0);\n        if(f[i]==f[i-1])\n            sam++;\n        else\n            sam=1;\n    }\n    int minn=f[a[m+1]]-1;//\u56e0\u4e3a\u6700\u540e\u4e00\u4e2a\u70b9\u88ab\u5f53\u6210\u77f3\u5934\u4e86\n    for(int i=a[m+1]-s;i<=a[m+1];i++)\n        if(f[i]<minn)\n            minn=f[i];\n    printf(\"%d\\n\",minn>0?minn:0);\n    return 0;\n}\n\n```",
        "postTime": 1525420463,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u8fc7\u6cb3 \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "## NOIP2005 \u63d0\u9ad8\u7ec4\u2014\u2014\u8fc7\u6cb3\n\n\u200b\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$by - Actinoi $\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$2019/5/30$\n\n## \u4e3a\u83b7\u53d6\u6700\u4f73\u9605\u8bfb\u6548\u679c\uff0c\u5efa\u8bae\u8bbf\u95ee[Actinoi's blog:\u8fc7\u6cb3](https://www.actinoi.com/2019/05/30/noip2005\u63d0\u9ad8\u7ec4\u2014\u2014\u8fc7\u6cb3/)\n\n\u200b\t&emsp;\u89c2\u5bdf\u6570\u636e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u72ec\u6728\u6865\u7684\u957f\u5ea6 $L\\leq10^9$ \uff0c\u800c\u77f3\u5b50\u7684\u6570\u91cf\u6700\u591a\u53ea\u6709 $100$ \u4e2a\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u8003\u8651\u7528\u79bb\u6563\u5316\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\u3002\n\n\u200b\t&emsp;\u6211\u4eec\u7528 $stone$ \u6570\u7ec4\u6765\u5b58\u50a8\u6bcf\u4e2a\u77f3\u5b50\u7684\u5750\u6807\uff0c\u8bfb\u5165\u4e4b\u540e\u8fdb\u884c\u79bb\u6563\u5316\u64cd\u4f5c\u3002\n\n### \u79bb\u6563\u5316\u5177\u4f53\u5b9e\u73b0\u8fc7\u7a0b\n\n\u200b\t&emsp;\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u8f93\u5165\u662f\u4e0d\u662f\u6309\u4ece\u5c0f\u5230\u5927\u6709\u5e8f\u8f93\u5165\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5148\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n&emsp;\u6392\u5b8c\u5e8f\u4e4b\u540e\uff0c\u6211\u4eec\u4ece\u7b2c\u4e00\u4e2a\u77f3\u5b50\u5f00\u59cb\u8fdb\u884c\u79bb\u6563\u5316\u3002\n\n\u200b&emsp;\u82e5\u7b2c $i$ \u77f3\u5b50\u4e0e\u7b2c $i - 1$ \u4e2a\u77f3\u5b50\u4e4b\u95f4\u7684\u8ddd\u79bb\u5927\u4e8e $s \\times t$ \uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5c06\u8fd9\u9897\u77f3\u5b50\u4e0e\u4e0a\u4e00\u9897\u77f3\u5b50\u7684\u8ddd\u79bb\u7b80\u5316\u4e3a $(stone[i] - stone[i - 1]) \\% t + t * s$ \uff0c\u8fd9\u6837\u53ef\u4ee5\u5c06\u6865\u957f $L$ \u538b\u7f29\u5230 $10000$ \u4ee5\u5185\u3002\u7136\u540e\u7528 $bridge$ \u6570\u7ec4\u6765\u5b58\u50a8\u79bb\u6563\u5316\u4e4b\u540e\u6865\u4e0a\u77f3\u5b50\u7684\u5206\u5e03\u60c5\u51b5\u3002\n\n![1.jpg](https://i.loli.net/2019/06/06/5cf90c6d7749283226.png)\n\n> \u5982\u56fe\uff0c\u6211\u4eec\u8bbestone[1] = 3, stone[2] = 10, s = 1, t = 2\u7684\u8bdd\uff0c\u4fbf\u4f1a\u5f97\u5230\u4e0a\u56fe\u3002\u7136\u540e\u6211\u4eec\u538b\u7f29 stone[2] \u4e0e stone[1] \u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u4fbf\u4f1a\u5f97\u5230\u4e0b\u56fe\u7684 birdge[2] \u3002\n\n![2.jpg](https://i.loli.net/2019/06/06/5cf90c6d9650a35158.png)\n\n> \u90a3\u4e48\uff0c\u8fd9\u4e3a\u4ec0\u4e48\u662f\u6b63\u786e\u7684\u5462\uff1f\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0cstone[2] \u51cf\u53bb n \u4e2a t \u4e4b\u540e\u5c31\u53ef\u4ee5\u5f97\u5230 bridge[2] \uff0c\u6240\u4ee5\u8bf4\uff0c\u51e1\u662f\u80fd\u591f\u5230\u8fbe stone[2] \u7684\u70b9\u4e5f\u4e00\u5b9a\u53ef\u4ee5\u5230\u8fbe bridge[2] \uff0c\u6240\u4ee5\u8fd9\u4e2a\u601d\u8def\u662f\u6b63\u786e\u7684\u3002\n\n\u200b&emsp;\u4e4b\u540e\uff0c\u6211\u4eec\u7528 $identifier$ \u6570\u7ec4\u5b58\u50a8\u79bb\u6563\u5316\u4e4b\u540e\u7684\u6865\u957f\uff0c\u7528 $sum$ \u6570\u7ec4\u5b58\u50a8\u8df3\u5230\u6865\u4e0a\u6bcf\u4e00\u70b9\u6700\u5c11\u9700\u8981\u8e29\u5230\u7684\u77f3\u5b50\u6570\u3002\u6211\u4eec\u4ece\u8df3\u8dc3\u7684\u6700\u5c0f\u8ddd\u79bb $s$ \u679a\u4e3e\u5230\u6700\u5927\u8ddd\u79bb $t$ \uff0c\u7528\u53d8\u91cf $j$ \u5b58\u50a8\u6240\u679a\u4e3e\u7684\u8ddd\u79bb\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b $sum[i] = min(sum[i], sum[i - j] + bridge[i])$ \u3002\u4f46\u662f\uff0c\u4ece\u79bb\u6563\u5316\u4e4b\u540e\u6865\u4e0a\u7b2c $1$ \u4e2a\u70b9\u5f00\u59cb\u8ba1\u7b97\u6700\u5c0f\u7ecf\u8fc7\u7684\u77f3\u5b50\u6570\uff0c\u4f46\u662f\u8981\u8ba1\u7b97\u5230\u54ea\u5462\uff1f\u89c2\u5bdf\u4e0b\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728$identifier$ \uff5e $identifier + t$ \u4e4b\u5185\u90fd\u53ef\u4ee5\u8df3\u5230\u7ec8\u70b9\uff0c\u56e0\u6b64\u8ba1\u7b97\u8303\u56f4\u4e3a $1$ \uff5e  $identifier + t $ \u3002\n\n![3.jpg](https://i.loli.net/2019/06/06/5cf90c6dadc3987322.png)\n\n\u200b\t&emsp;\u5269\u4e0b\u7684\u5c31\u5f88\u7b80\u5355\u5566\uff0c\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u7b54\u6848\u5c31\u5728 $identifier$ ~ $identifier + t $ \u4e4b\u5185\uff0c\u56e0\u6b64\u6211\u4eec\u679a\u4e3e\u8fd9\u4e2a\u533a\u95f4\u5185\u7684 $sum$ \u503c\uff0c\u627e\u51fa\u6700\u5c0f\u503c\uff0c\u8fd9\u4fbf\u662f\u6211\u4eec\u7684\u7b54\u6848\u8fa3!\n\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801:\n\n\n```cpp\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint stone[101], sum[10001];\nbool bridge[100001]; //\u5b58\u50a8\u79bb\u6563\u5316\u4e4b\u540e\u6865\u4e0a\u77f3\u5b50\u7684\u5206\u5e03\u60c5\u51b5\nint main(){\n    int l, s, t, m; //\u6865\u957f\uff0c\u9752\u86d9\u4e00\u6b21\u8df3\u8dc3\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u6700\u5927\u8ddd\u79bb\u53ca\u6865\u4e0a\u77f3\u5b50\u7684\u4e2a\u6570\n    cin >> l >> s >> t >> m;\n    memset(sum, 0x3f, sizeof(sum)); //\u521d\u59cb\u5316sum\u6570\u7ec4\n    for(int i = 1; i <= m; i++)\n        cin >> stone[i];\n    sort(stone, stone + m + 2);\n    int identifier = 0;\n    for (int i = 1; i <= m + 1; i++) {\n        if (stone[i] - stone[i - 1] <= t * s)\n            identifier += stone[i] - stone[i - 1];\n        else\n            identifier += (stone[i] - stone[i - 1]) % t + t;\n        bridge[identifier] = true;\n    }\n    sum[0] = 0;\n    for (int i = 1; i <= identifier + t; i++)\n        for (int j = s; j <= t; j++)\n            if ((i - j) >= 0)\n                sum[i] = min(sum[i], sum[i - j] + bridge[i]);\n    int ans = 0x3f;\n    for (int i = identifier; i <= identifier + t; i++)\n        ans = min(ans, sum[i]);\n    cout << ans;\n    return 0;\n}\n```\n## \u82e5\u60a8\u6709\u4efb\u4f55\u5efa\u8bae\u4e0e\u7ea0\u6b63\uff0c\u6b22\u8fce\u63d0\u51fa\uff01\u8c22\u8c22\uff01\n\n",
        "postTime": 1559828668,
        "uid": 84217,
        "name": "Actinoi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "# [\u535a\u5ba2\u56ed\u4f53\u9a8c\u66f4\u4f73](https://www.cnblogs.com/zhaohaikun/p/12182689.html)\n\n\u663e\u7136\u662f$dp$\uff0c\u662f\u7528$STL$\u5f53\u4e2d\u7684[$map$](https://zhaohaikun.blog.luogu.org/solution-p1305)\u53ef\u4ee5\u505a\u5230[30\u5206](https://www.luogu.org/record/27685820)\n\n```cpp\n#include <bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint l,n,s,t;\nmap<int,bool>m;//\u8bb0\u6709\u6ca1\u6709\u77f3\u5934\nmap<int,int>dp;//\u6700\u5c11\u8e29\u5230\u77f3\u5934\u7684\u4e2a\u6570\nint main(){\n    cin>>l>>s>>t>>n;\n    for(int i=1;i<=n;i++){\n        int x;\n        cin>>x;\n        m[x]=true;\n    }\n    for(int i=1;i<=l+t-1;i++){\n    \tdp[i]=INT_MAX/2;\n    \tfor(int j=s;j<=t&&j<=i;j++)dp[i]=min(dp[i],dp[i-j]);//\u5012\u9000\n    \tif(m[i])dp[i]++;\n\t}int s=dp[l];\n\tfor(int i=l+1;i<=l+t-1;i++)s=min(s,dp[i]);\n\tcout<<s;\n    return 0;\n}\n```\n\u4e4b\u540e\uff0c\u6211\u4eec\u8be5\u60f3\u4e00\u60f3\u5982\u4f55$AC$\u8fd9\u9053\u9898\n\n\u6211\u4eec\u53d1\u73b0\u77f3\u5934\u6570\u91cf\u5f88\u5c11\uff0c\u800c\u72ec\u6728\u6865\u5374\u5f88\u957f\n\n![360\u622a\u56fe18141224304435.png](https://i.loli.net/2019/11/23/MndaCKcbu7ZoUyi.png)\n\n\u9047\u5230\u8fd9\u5f20\u56fe\uff0c\u6211\u4eec\u53ef\u80fd\u8fd8\u4f1a\u9009\u62e9\u66b4\u529b\u7684\u65b9\u6cd5\n\n![360\u622a\u56fe170405117195111.png](https://i.loli.net/2019/11/23/6mNA9akXPqD7pQv.png)\n\n\u4f46\u662f\u9047\u5230\u8fd9\u5f20\u56fe\uff0c\u4f60\u8fd8\u4f1a\u7528\u66b4\u529b\u5417\uff1f\n\n\u7a7a\u7684\u5730\u65b9\u5c31\u662f\u968f\u4fbf\u8d70\u5c31\u884c\u4e86\uff0c\u5b8c\u5168\u53ef\u4ee5\u4e0d\u7528\u8001\u8001\u5b9e\u5b9e\u7684\u53bb\u770b\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8def\u5f84\u538b\u7f29\uff0c\u66f4\u7b80\u5355\u5730\u8bf4\u5c31\u662f\u5982\u679c\u540e\u9762\u7684\u4e00\u4e2a\u77f3\u5934\u4e0e\u524d\u9762\u7684\u4e00\u4e2a\u77f3\u5934\u8ddd\u79bb\u592a\u8fdc\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u540e\u9762\u4e00\u4e2a\u77f3\u5934\u63a8\u5230\u524d\u4e00\u4e2a\u77f3\u5934\u9644\u8fd1\uff0c\u81f3\u4e8e\u8fd9\u4e2a\u91cf\u662f\u591a\u5c11\u5462\uff0c\u9700\u8981\u81ea\u5df1\u628a\u63e1\u3002\n\n\u6211\u81ea\u5df1\u8fd8\u662f\u89c9\u5f97\u7a0d\u5fae\u4fdd\u9669\u4e00\u70b9\uff0c\u4e0d\u8981$TLE$\u5c31\u884c\u4e86\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u628a\u8fd9\u4e2a\u6570\u5b9a\u5728$1000$\uff0c\u5f53\u7136\u542c\u540c\u5b66\u8bf4\uff0c\u4ed6\u5b9a\u7684\u6bd4\u8f83\u5c0f\u4e5f\u8fc7\u4e86\uff0c\u8fd9\u5e76\u6ca1\u6709\u5173\u7cfb\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u4ee3\u7801\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint l,s,t,m,a[110],dp[100010],b[110];\nbool x[100010];\nint main(){\n    cin>>l;\n    cin>>s>>t>>m;\n    for(int i=1;i<=m;i++)cin>>a[i];\n    sort(a+1,a+1+m);\n    if(s==t){//\u8fd9\u4e2a\u5e94\u8be5\u5f88\u7b80\u5355\uff0c\u6211\u4e0a\u9762\u6ca1\u6709\u8bf4\n        int ans=0;\n        for(int i=1;i<=m;i++)\n            if(a[i]%s==0)ans++;//\u5982\u679c\u4f1a\u7ecf\u8fc7\u5b83\uff0c\u7b54\u6848+1\n        cout<<ans;//\u8f93\u51fa\n        return 0;\n    }\n    for(int i=1;i<=m;i++)\n        if(a[i]-a[i-1]>1000)b[i]=b[i-1]+1000;//\u6ce8\u610f\u5566\uff0c\u5982\u679c\u539f\u6765\u7684\u8ddd\u79bb\u5c0f\u4e8e1000\uff0c\u4f60\u8981\u4fdd\u6301\u4e0d\u53d8\n        else b[i]=a[i]-a[i-1]+b[i-1];\n\tfor(int i=1;i<=m;i++)x[b[i]]=true;//\u77f3\u5934\n\tl=b[m];\n    for(int i=1;i<=l+t-1;i++){\n    \tdp[i]=INT_MAX/2;\n    \tfor(int j=s;j<=t&&j<=i;j++)dp[i]=min(dp[i],dp[i-j]);//\u8f6c\u79fb\u72b6\u6001\n    \tif(x[i])dp[i]++;\n\t}int ans=dp[l];\n\tfor(int i=l;i<=l+t-1;i++)ans=min(ans,dp[i]);//\u6253\u64c2\u6cd5\u6c42\u6700\u5c0f\u503c\n\tcout<<ans;//\u8f93\u51fa\n    return 0;\n}\n```\n",
        "postTime": 1574499565,
        "uid": 180242,
        "name": "orzdevinwang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u5168\u90e8\u7684\u9898\u89e3\uff0c\u57fa\u672c\u4e0a\u4e3a\u538b\u7f29\u8def\u5f84\u548c\u5355\u8c03\u961f\u5217\uff0c\u82b1\u4e86\u4e00\u4e2a\u4e0a\u5348\u7684\u65f6\u95f4\uff0c\u7ec8\u4e8e\u60f3\u51fa\u4e86\u4e00\u79cd\u5168\u9898\u89e3\u90fd\u6ca1\u7684\u65b9\u6cd5\n\n\u9996\u5148**\u6700\u66b4\u529b**\u7684**DP**\u76f8\u4fe1\u5927\u5bb6\u5e94\u8be5\u90fd\u6ca1\u95ee\u9898\uff0c\u8bb0\u5f55\u4e00\u4e0b\u8d70\u5230\u6bcf\u4e2a\u70b9\u81f3\u5c11\u8981\u8e29\u51e0\u4e2a\u77f3\u5934\uff0c\u5373\uff1a\n```\nf[i]=min(f[j]) {j|S=<i-j<=T}  (\u521d\u4e2d\u751f\u4e0d\u4f1a\u96c6\u5408\u554a\uff0c\u53ef\u80fd\u683c\u5f0f\u6709\u95ee\u9898\uff09\n\n```\n\u800c\u770b\u5230 { j | S <= i - j <= T } \u8fd9\u6837\u4e00\u4e2a\u533a\u95f4\uff0c\u81ea\u7136\u800c\u7136\uff08~~\u5343\u8f9b\u4e07\u82e6~~\uff09\u5c31\u4f1a\u60f3\u5230**\u5355\u8c03\u961f\u5217**\uff0c\u4f46\u6211\u4eec\u4eca\u5929\u8bb2\u7684\u5e76\u4e0d\u662f\u4ed6\uff0c\u6bd5\u7adf\u6709\u5f88\u591a\u9898\u89e3\u8be6\u7ec6\u7684\u4ecb\u7ecd\u4e86\uff0c\u6211\u4eec\u4eca\u5929\u6765\u8bb2\u70b9\u4e0d\u4e00\u6837\u7684\n\n\u66b4\u529b\u4e3a\u4ec0\u4e48\u4e0d\u884c\u5462\uff1f\u5148\u5f80\u4e0b\u7ffb\uff0c\u770b\u770b\u6570\u636e\u89c4\u6a21\uff0c**L<=1e9** \uff0c\u6240\u4ee5\u66b4\u529b\u4e0d\u4ec5\u8d85\u65f6\uff0c\u800c\u4e14\u8fde\u6570\u7ec4\u90fd\u5f00\u4e0d\u4e86\n\n\u518d\u5f80\u4e0b\uff08~~\u4e5f\u597d\u50cf\u662f\u4e0a~~\uff09\u7ffb\u5c31\u80fd\u611f\u53d7\u5230\u51fa\u9898\u4eba\u7684**\u53cb\u597d**\u4e86\n\n1 \u2264 S \u2264 T \u2264 10\uff0c1 \u2264 M \u2264 100\n\n\u8fd9\u4e0d\u660e\u6446\u7740\u8ba9\u4f60\u5bf9**\u77f3\u5934\u8fdb\u884cDP**\uff1f\n\n\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u7ed3\u8bba\uff1a**\u5982\u679c\u9752\u86d9\u8df3\u5230\u4e86X\u7684\u4f4d\u7f6e\uff0c\u5bf9\u4e8e\u4f4d\u7f6e\u5c0f\u4e8eX\u7684\u6bcf\u4e00\u4e2a\u77f3\u5934\uff0c\u8fd9\u5757\u77f3\u5934\u7684\u4f4d\u7f6e\u4e3aa[i],\u90a3\u4e48\u9752\u86d9\u81f3\u5c11\u5728a[i]\u3001a[i+1]\u3001a[i+2]\u3001a[i+3]\u3001......\u3001a[i+T-1]\u7684\u4f4d\u7f6e\u8df3\u8fc7\u4e00\u6b21\u3002**\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\u9752\u86d9\u4e00\u6b21\u53ea\u80fd\u8df3**S~T\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u5728\u4e00\u6bb5S~T\u4e4b\u95f4\u7684\u533a\u95f4\uff0c\u9752\u86d9\u4e0d\u53ef\u80fd\u76f4\u63a5\u8d8a\u8fc7\uff0c\u80af\u5b9a\u8981\u5728\u8fd9\u533a\u95f4\u4e2d\u8df3\u4e00\u6b21**\n\n\u61c2\u4e86\u5417\uff1f\u6ca1\u61c2\u81ea\u5df1\u62ff\u7b14\u753b\u753b\u5c31\u6e05\u695a\u4e86\u3002\n\n### \u8f6c\u79fb\u65b9\u7a0b\n\n\u90a3\u4e48\u77e5\u9053\u8fd9\u4e2a\u6027\u8d28\u540e\uff0c\u800c\u4e14S\u548cT\u53c8\u90a3\u4e48\u5c0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e49f\u6570\u7ec4\u4e86\n\n**f[i][j]\u8868\u793a\u8df3\u5230\u4e86\u7b2ci\u4e2a\u77f3\u5934\u540ej\u4e2a\u4f4d\u7f6e\u6700\u5c11\u8e29\u51e0\u4e2a\u77f3\u5934**\n\n\u5b9a\u4e49\u4e86f\u6570\u7ec4\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u89e3\u8f6c\u79fb\u65b9\u7a0b\u4e86\n\n\u8bf4\u5b9e\u8bdd\uff0c\u8fd9\u8f6c\u79fb\u65b9\u7a0b\u6709\u70b9\u7e41\u7410\uff0c\u8c03\u8bd5\u4e86\u4e00\u4e0a\u5348\u624dA\u7684\n\n\u5bf9\u4e8ef[i][j]\uff0c\u80af\u5b9a\u8981\u4ecef[k][x]\u4e2d\u8f6c\u79fb\u8fc7\u6765\uff0c\u5176\u4e2d\uff0c**a[k]+x\u548ca[i]+j\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e0d\u80fd\u8d85\u8fc7T\uff0c\u4e5f\u540c\u6837\u4e0d\u80fd\u5c11\u4e8eS**\uff0c\u5373\uff1a\n```\nf[i][j]=min(f[k][x]) (S<=a[i]+j-a[k]+x<=T)\n```\n\u540c\u5b66\u4eec\u60f3\u60f3\uff0c\u8fd9\u6837\u505a\u6709\u4ec0\u4e48\u6f0f\u6d1e\uff08\u601d\u8003\uff09\uff1f\n\n\u662f\u7684\uff0c\u5982\u679c\u5728\u524di-1\u4e2a\u77f3\u5934\u4e2d\u627e\u4e0d\u5230\u7b26\u5408\u8981\u6c42\u7684k\u3001i\uff0cf[i][j]\u5c31\u65e0\u6cd5\u66f4\u65b0\uff0c\u5c31\u6210\u4e86INF\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e5f\u5c31\u662f\u5982\u679c\u7b2ci\u4e2a\u77f3\u5934\u79bb\u524d\u9762\u7684\u77f3\u5934\u592a\u8fdc\uff0c**\u90fd\u5927\u4e8eT\u4e86**\uff0c\u4e5f\u5c31\u65e0\u6cd5\u66f4\u65b0\u4e86\n\n\u518d\u60f3\u60f3\uff0c\u5982\u679c\u4e24\u4e2a\u77f3\u5934\u95f4\u9694\u592a\u8fdc\uff0c\u90a3\u4e48\u4e5f\u5c31\u610f\u5473\u7740\u4e2d\u95f4\u90fd\u662f\u6ca1\u6709\u77f3\u5934\u7684\uff08~~\u8fd9\u4e0d\u5e9f\u8bdd\u5417~~\uff09\uff0c**\u90a3\u4e48\u7ba1\u5b83\u4e2d\u95f4\u600e\u4e48\u8d70\uff0c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u800c\u53c8\u56e0\u4e3a\u9752\u86d9\u662f\u4e00\u5b9a\u4f1a\u8df3\u5230a[i]\u3001a[i-1]\u3001a[i-2]\u3001...\u3001a[i+T-1]\u4e4b\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u53ea\u8981\u5bf9a[i-1][j1]\u7684\u6bcf\u4e2a\u72b6\u6001\u5224\u65ad\u80fd\u5426\u8df3\u5230a[i][j2]\uff0c\u5982\u679c\u80fd\uff0c\u90a3\u4e48f[i][j2]=f[i-1][j1]**\n\n\u542c\u5230\u8fd9\u91cc\u4f60\u5e94\u8be5\u7ed5\u6655\u4e86\u5427\uff1f\u6240\u4ee5\u53c8\u600e\u4e48\u5224\u65ad\u4e24\u4e2a\u70b9\u95f4\u662f\u5426\u80fd\u8d70\u5230\u5462\uff1f\n\n\u4e00\u5f00\u59cb\u6211\u7684\u60f3\u6cd5\u662f\u80cc\u5305\uff0c\u7136\u540e\u7a81\u7136\u4e00\u60f3\u6570\u636e\u8303\u56f4L<=1e9\uff0c\u5199\u80cc\u5305\u8fd8\u4e0dT\u98de\u3002\n\n\u9047\u5230\u4e86\u56f0\u96be\uff0c\u6240\u4ee5\u6211\u5c31\uff08~~\u653e\u5f03~~\uff09\u8be2\u95ee\u4e86\u4e00\u4e0b\u6d1b\u8c37\u7684\u5927\u4f6c\u4eec%%%\uff08~~\u867d\u7136\u4ed6\u4eec\u8bf4\u7684\u6211\u90fd\u6ca1\u7528~~\uff09\n\n\u7136\u540e\u6211\u5c31\u60f3\u5230\u4e86\u5c0f\u51ef\u7684\u6570\u5b57\uff0c\u597d\u50cf\u5f88\u53ef\u884c\uff0c\u7136\u540e...\n\n\u5c31\u60f3\u5230\u4e86O\uff081\uff09\u7684\n\n**\u8bbeM\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0cX=[M/R] * R ([ ]\u8868\u793a\u5411\u4e0a\u53d6\u6574\uff09**\n\n**\u5982\u679cX-M<=[M/R] * (T-S)\uff0c\u5c31\u662f\u53ef\u4ee5\u5230\u8fbe\u7684\uff0c\u5426\u5219\u4e0d\u884c**\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u6211\u4eec\u5148\u5047\u8bbe\u6211\u4eec\u90fd\u8d70\u6700\u8fdc\u7684\u8ddd\u79bb\uff0c\u770b\u770b\u8981\u8df3\u591a\u5c11\u6b21\uff0c\u7136\u540e\u518d\u628a\u8df3\u7684\u6b21\u6570 * \uff08T-S\uff09\u51cf\u6389\uff0c\u53ef\u4ee5\u5f62\u8c61\u7684\u7406\u89e3\u4e3a\u9000\u6b65\uff0c**\u5148\u8df3T\uff0c\u518d\u5012\u9000T-S\uff0c\u4e5f\u5c31\u662f\u8df3\u4e86S\uff0cT-(T-S)=S**,\uff08\u8fd9\u4e2a\u90fd\u770b\u4e0d\u61c2\u7684\u8bdd\u53ef\u4ee5\u53bb\u5c0f\u5b66\u4e8c\u5e74\u7ea7**\u56de\u7089\u91cd\u9020\u4e86**\uff09\uff0c\u90a3\u4e48**\u51cf\u53bb\u524d\u548c\u51cf\u53bb\u540e\u7684\u533a\u95f4**\uff0c\u5c31\u662f\u9752\u86d9\u53ef\u4ee5\u5230\u8fbe\u7684\u533a\u95f4\uff0c\u518d\u770b\u770b**M\u662f\u5426\u5728\u533a\u95f4\u91cc**\u5c31\u597d\u4e86\uff08\u53ef\u4ee5\u63e3\u6469\u4e00\u4e0b\uff09\n\n### \u7ed9\u521d\u503c\n\n\u8fd9\u4e2a\u60f3\u901a\u4e86\uff0c\u521d\u503c\u7684\u95ee\u9898\u5c31\u5f88\u8f7b\u677e\u4e86\n\n\u5982\u679cf[i][j] \uff0cS<=a[i]+j<=T\uff0c\u90a3\u4e48f[i][j]=0\n\n\u8fd9\u6837\u5c31\u597d\u4e86\u5417\uff1f\u4e0d\u4e0d\u4e0d\n\n\u5982\u679c\u6bcf\u4e00\u4e2a\u77f3\u5934\u90fd\u79bb\u8d77\u70b9\u975e\u5e38\u975e\u5e38\u8fdc\uff08~~\u5176\u5b9e\u53ea\u8981\u5927\u4e8e10\u5c31\u597d\u4e86~~\uff09\uff0c\u90a3\u4e48\u6240\u6709\u7684\u503c\u5c31\u90fd\u4e3aINF\u4e86\uff0c\u8f6c\u79fb\u65b9\u7a0b\u600e\u4e48\u8f6c\u90fd\u4e0d\u4f1a\u51fa\u7ed3\u679c\u7684\n\n\u90a3\u600e\u4e48\u505a\uff1f\n\n**\u56e0\u4e3a\u9752\u86d9\u662f\u80af\u5b9a\u4f1a\u8df3\u8fc7a[i]\u3001a[i-1]\u3001a[i-2]\u3001...\u3001a[i+T-2]\u4e4b\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u6240\u6709\u6211\u4eec\u53ea\u8981\u7ed9f[1][0]\u3001f[1][1]\u3001f[1][2]\u3001...\u3001f[1][T-2]\u8d4b\u521d\u503c\u5c31OK\u4e86**\n\n\u6240\u4ee5\u600e\u4e48\u8d4b\u5462\uff1f\n\n\u522b\u6025\n\n\u56e0\u4e3a**\u5982\u679c\u80fd\u4ece\u8d77\u70b9\u8df3\u82e5\u5e72\u6b21\u800c\u4e0d\u8e29\u4efb\u4f55\u77f3\u5b50\u8df3\u5230a[1]+j\uff0c\u90a3\u4e48f[1][j]\u5c31\u4e3a0\u3002\u800c\u56e0\u4e3a\u9752\u86d9\u6700\u5c11\u8df3S\uff0c\u6240\u4ee5a[1]~a[1]+S-1\u90fd\u662f\u4ece\u975e\u77f3\u5b50\u7684\u5730\u65b9\u8df3\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8ef[1][0]~f[1][S-1]\u7684\u503c\uff0c\u53ea\u8981\u5224\u65ad\u80fd\u5426\u4ece\u8d77\u70b9\u8df3\u8fc7\u6765\uff0c\u80fd\u5c31\u4e3a0\uff0c\u4e0d\u80fd\u5c31\u4e3aINF\uff0cf[1][0]\u8981\u7279\u5224\uff0c\u56e0\u4e3a\u672c\u8eab\u4f4d\u5b50\u4e0a\u6709\u4e00\u4e2a\u77f3\u5b50\uff0c\u6240\u4ee5\u8981+1**\u3002\u800c\u600e\u4e48\u5224\u65ad\u662f\u5426\u8df3\u7684\u5230\uff0c\u521a\u521a\u4e0d\u662f\u8bb2\u8fc7\u4e86\u5417\uff1f\n\n### \u7edf\u8ba1\u7b54\u6848\n\n\u7edf\u8ba1\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u5373\uff1a\n```\nif (a[i]+j>a[n]) Ans=min(Ans,f[i][j])\n```\n\u4f60\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u7591\u95ee\uff0c\u4e3a\u4ec0\u4e48\u7edf\u8ba1\u65f6\u662f\u5224\u65ad\u662f\u5426\u5927\u4e8e**a[n]**\uff0c\u800c\u4e0d\u662f**L**\u5462\uff1f\n\n\u6709\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\uff0c**\u5982\u679c\u9752\u86d9\u8df3\u8fc7\u4e86\u6700\u540e\u4e00\u9897\u77f3\u5b50\uff0c\u90a3\u4e48\u4ed6\u518d\u4e5f\u4e0d\u53ef\u80fd\u8e29\u5230\u77f3\u5b50\u4e86**\uff0c\u50bb\u86d9\u624d\u4f1a\u5012\u7740\u8df3\u53bb\u8e29\u77f3\u5b50\uff0c\u4e0d\u8fc7\u6211\u4eec\u8fd9\u53ea\u86d9\u662f\u806a\u660e\u7684\n\n\u6240\u4ee5\u53ea\u8981**\u4f4d\u7f6e\u5927\u4e8e\u6700\u540e\u4e00\u9897\u77f3\u5b50a[n]**\uff0c\u4e0d\u7ba1\u4ed6\u600e\u4e48\u8df3\u90fd\u4e0d\u4f1a\u518d\u5f71\u54cd\u7b54\u6848\u4e86\uff0c\u5373\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u7b54\u6848\u4e86\n\n**\u5047**\u5b8c\u7ed3\u6492\u82b1\n\n### \u6ce8\u610f\u4e8b\u9879\n\n\u53ef\u80fd\uff08**\u4e00\u5b9a**\uff09\u662f\u6211\u592a**\u83dc**\u4e86\uff0c\u8c03\u8bd5\u4e0a\u51fa\u4e86\u5f88\u591a\u95ee\u9898\uff0c\u6bcf\u4e2a\u70b9\u90fd\u82b1\u5f0fWA\u8fc7\uff0c\u8fd9\u91cc\u7ed9\u5927\u5bb6\u4e00\u4e00\u5217\u51fa\u6765\u65b9\u4fbf\u67e5\u9519\n\n1. **\u6392\u5e8f\u3001\u6392\u5e8f\u3001\u6392\u5e8f**\n\n\u9898\u76ee\u6ca1\u660e\u8bf4\u77f3\u5b50\u4f4d\u7f6e\u662f\u5426\u6709\u5e8f\uff08\u4e5f\u53ef\u80fd\u662f\u6211\u773c\u778e\uff09\uff0c\u4e0d\u8fc7\u6837\u4f8b\u662f\u5347\u5e8f\uff0c\u6240\u4ee5\u4ee5\u4e3a\u77f3\u5b50\u7ed9\u51fa\u662f\u5448\u5347\u5e8f\u7684\uff0c\u4f46\u662f\u6570\u636e\u7ed9\u51fa\u5374\u4e0d\u7136\uff0c\u6240\u4ee5**\u8bfb\u8fdb\u4f4d\u7f6e\u540e\u679c\u65adsort\u4e00\u904d**\n\n2. **\u8ba1\u7b97\u91cd\u590d\u7684\u4f4d\u7f6e**\n\nf[i][j]\u548cf[k][x]\u770b\u4f3c\u4e92\u76f8\u72ec\u7acb\uff0c\u5176\u5b9e\u5f88\u5bb9\u6613\u6709\u4ea4\u96c6\uff0c\u6240\u4ee5\u5728\u66f4\u65b0\u5176\u4e2d\u4e00\u4e2a\u65f6\uff0c\u4e5f\u8981\u540c\u65f6\u66f4\u65b0\u53e6\u4e00\u4e2a\uff0c\u600e\u4e48\u66f4\u65b0\u5462\uff1f\u7528**\u4e8c\u5206\u67e5\u627e**\uff0c\u8fd9\u91cc\u5c31\u4e0d\u7ec6\u8bf4\u4e86\n\n3. **Ans\u7ed9\u521d\u503c**\n\n\u8c03\u4e86\u534a\u5929\u624d\u53d1\u73b0\u662f**Ans\u6ca1\u7ed9\u521d\u503c**\u7684\u60b2\u4f24\u76f8\u4fe1\u4f60\u4e5f\u4e0d\u60f3\u6709\n\n4. **\u5176\u4ed6**\n\n\u5176\u4ed6\u7684\u9519\u8bef\u76f8\u4fe1\u53ea\u6709\u6211\u8fd9\u4e2a\u849f\u84bb\u4f1a\u72af\uff0c\u5404\u4f4d\u5927\u4f6c\u4e0d\u53ef\u80fd\u4f1a\u72af\u7684\uff0c\u5c31\u4e0d\u8bf4\u4e86\uff08~~\u61d2\u5f97\u6253\u5b57~~\uff09\n\n\u6700\u540e\u8d34\u4e0a\u6211\u65e0\u6bd4\u4e11\u964b\u7684\u4ee3\u7801\uff08\u56e0\u4e3a\u8fb9\u5199\u8fb9\u6539\uff0c\u65e9\u5df2\u7ecf\u9762\u76ee\u5168\u975e\u4e86\uff0c\u53ef\u89c2\u6027\u4e3a0\uff09\n\n\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\n#define maxn 105\nusing namespace std;\nint f[maxn][15],n,L,S,T,Ans,a[maxn],X,M;\ninline int read(){\n\tint ret=0;char ch=getchar();\n\twhile (ch<'0'||ch>'9') ch=getchar();\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret;\n}\ninline int check(int id,int x){\n\tint L=id+1,R=n,mid;\n\twhile (L<=R){\n\t\tmid=L+R>>1;\n\t\tif (x>=a[mid]){\n\t\t\tif (x==a[mid]) return mid;\n\t\t\tL=mid+1;\n\t\t}\n\t\telse R=mid-1;\n\t}\n\treturn 0;\n}\ninline int dv(int a,int b){\n\tif (a%b) return a/b+1;\n\treturn a/b;\n}\nint main(){\n\tL=read();\n\tS=read(),T=read(),n=read();\n\tfor (int i=1;i<=n;i++) a[i]=read();\n\tsort(a+1,a+n+1);\n    memset(f,63,sizeof f);int inf=f[0][0];\n    for (int i=1;i<=n;i++)\n    for (int j=0;j<T;j++){\n    \tif (a[i]+j>T) break;\n    \tif (a[i]+j>=S){\n\t\t    X=check(0,a[1]+j);\n\t\t    if (X) f[1][j]=1,f[a[1]+j][0]=1;\n\t\t    else f[1][j]=0;\n\t\t}\n\t}\n\tfor (int j=0;j<S;j++)\n\t  if (a[1]+j>=S){\n\t  \tM=a[1]+j;X=dv(M,T)*T;\n\t\tif (M>=X-dv(M,T)*(T-S)){\n\t\t    X=check(0,a[1]+j);\n\t\t    if (X) f[1][j]=1,f[X][0]=1;\n\t\t    else f[1][j]=0;\n\t\t}\n      }\n    for (int i=S;i<T;i++){\n    \tif (a[1]+i-S>=S){\n    \t\tfor (int j=S;j<=T&&a[1]+i-j>=S;j++){\n    \t\t\tif (j==i) continue;\n    \t\t\tM=a[1]+i-j;X=dv(M,T)*T;\n    \t\t\tif (M>=X-dv(M,T)*(T-S)){f[1][i]=0,f[check(1,a[1]+i)][0]=0;break;}\n\t\t\t}\n\t\t}\n\t}\n\tAns=inf;\n\tfor (int i=1;i<=n;i++)\n   \tfor (int j=0;j<T;j++){\n      \tif (a[i]+j>=S&&f[i][j]==inf){\n      \t\tfor (int k=0;k<j&&j-k>=S;k++) if (j-k<=T) f[i][j]=min(f[i][j],f[i][k]);\n            for (int k=i-1;k;k--)\n            for (int x=T-1;x>=0&&a[k]+x+T>=a[i]+j;x--) if (a[i]+j-a[k]-x>=S) f[i][j]=min(f[i][j],f[k][x]);\n            if (i>1) for (int k=0;k<T&&a[i-1]+k<=a[i]+j;k++){\n              \tM=a[i]+j-a[i-1]-k;X=dv(M,T)*T;\n\t\t\t\tif (M>=X-dv(M,T)*(T-S)) f[i][j]=min(f[i][j],f[i-1][k]);\n\t\t\t}\n            if (check(i-1,a[i]+j)) f[i][j]++;\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++)\n\tfor (int j=0;j<T;j++) if (a[i]+j+T>a[n]) Ans=min(Ans,f[i][j]);\n\tprintf(\"%d\",Ans);\n\treturn 0;\n}\n```\n\n**\u771f**\u5b8c\u7ed3\u6492\u82b1 ~",
        "postTime": 1578463626,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u9996\u5148\u7c7b\u4f3c\u6211\u4eec\u7684\u8d70\u697c\u68af\u95ee\u9898\u8fd9\u9898\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u8fd9\u6837\u4e00\u4e2a\u72b6\u6001 $dp_i$ \u4ee3\u8868\u8d70\u5230 $i$ \u7684\u6700\u5c11\u77f3\u5b50\u6570\uff0c\u663e\u7136\u6709 $dp_i=\\min\\limits_{i-t \\le j \\le i-s}dp_j+a_i$\uff08$a_i$ \u4ee3\u8868 $i$ \u6709\u6ca1\u6709\u77f3\u5b50\uff09\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a $L$ \u592a\u5927\u4e86\uff0c\u4e0d\u80fd\u76f4\u63a5\u505a\u3002\n\n\u8003\u8651\u4e00\u79cd\u5bf9\u4e8e\u9012\u63a8\u6570\u5217\u7684\u901a\u7528\u505a\u6cd5\u2014\u2014\u77e9\u9635\u4e58\u6cd5\u4f18\u5316\u3002\u8fd9\u91cc $s,t$ \u90fd\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a $t\\times t$ \u7684\u77e9\u9635\uff0c\u7136\u540e\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u5e7f\u4e49\u7684\u77e9\u9635\u4e58\u6cd5\uff0c\u53ef\u662f\u6211\u4eec\u53d1\u73b0\u5f53\u67d0\u4e2a\u70b9\u662f\u77f3\u5b50\u548c\u4e0d\u662f\u77f3\u5b50\u7684\u8f6c\u79fb\u77e9\u9635\u4e0d\u540c\uff0c\u800c\u6709\u77f3\u5b50\u7684\u70b9\u6700\u591a\u53ea\u6709 $m$ \u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6309\u77f3\u5b50\u4f4d\u7f6e\u5212\u5206\uff0c\u7136\u540e\u6bcf\u4e00\u6bb5\u5185\u5feb\u901f\u5e42\u6ca1\u6709\u77f3\u5b50\u7684\u8f6c\u79fb\u77e9\u9635\uff0c\u518d\u4e58\u4e0a\u5f53\u524d\u6709\u77f3\u5b50\u7684\u8f6c\u79fb\u77e9\u9635\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(t^3m\\log{L})$\u3002\n\n\u5bf9\u4e8e\u6837\u4f8b\u7684\u975e\u77f3\u5b50\u8f6c\u79fb\u77e9\u9635\u5927\u6982\u662f\uff1a\n\n$$\n\\begin{gathered}\n\\begin{bmatrix} \\infty & 0 & \\infty \\\\ 0 & \\infty & 0 \\\\ 0 & \\infty & \\infty\\end{bmatrix}\n\\quad\n\\end{gathered}\n$$\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u6ce8\u610f\u6700\u540e\u7b54\u6848\u4e0d\u662f $dp_L$ \u800c\u662f $\\max\\limits_{L \\le i \\le L + t - 1}dp_i$\u3002\n\n\u8fd9\u79cd\u65b9\u6cd5\u6211\u89c9\u5f97\u5f88\u5957\u8def\uff0c\u6bd4\u4ec0\u4e48\u8def\u5f84\u538b\u7f29\u597d\u60f3\uff0c\u53e6\u5916\u4e5f\u4e0d\u4f1a\u51fa\u4e00\u4e9b\u7384\u5b66\u9519\u8bef\uff0c\u867d\u7136\u5b9e\u73b0\u8d77\u6765\u7a0d\u5fae\u9ebb\u70e6\u4e00\u70b9\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nstruct Matrix{\n\tint arr[11][11];\n\tint size;\n}ans, g1, g2;\nint L;\nint s, t, m;\nint p[101];\nbool vis[11];\nvoid init(Matrix &a) {\n\tfor (int i = 1; i <= a.size; ++i) {\n\t\tfor (int j = 1; j <= a.size; ++j) {\n\t\t\ta.arr[i][j] = inf;\n\t\t}\n\t}\n}\nMatrix mul(Matrix a, Matrix b) {\n\tMatrix ret;\n\tret.size = a.size;\n\tinit(ret);\n\tfor (int i = 1; i <= a.size; ++i) {\n\t\tfor (int k = 1; k <= a.size; ++k) {\n\t\t\tif (a.arr[i][k] == inf) continue;\n\t\t\tfor (int j = 1; j <= a.size; ++j) {\n\t\t\t\tret.arr[i][j] = min(ret.arr[i][j], a.arr[i][k] + b.arr[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\nMatrix ksm(Matrix a, int b) {\n\tMatrix ret;\n\tret.size = a.size;\n\tinit(ret);\n\tfor (int i = 1; i <= ret.size; i++) ret.arr[i][i] = 0;\n\twhile (b) {\n\t\tif (b & 1) ret = mul(ret, a);\n\t\ta = mul(a, a);\n\t\tb >>= 1;\n\t}\n\treturn ret; \n}\nint main() {\n\tscanf(\"%d\", &L);\n\tscanf(\"%d%d%d\", &s, &t, &m);\n\tfor (int i = 1; i <= m; i++) scanf(\"%d\", &p[i]);\n\tsort(p + 1, p + 1 + m);\n\tans.size = t;\n\tinit(ans);\n\tfor (int i = 1; i <= m; i++) {\n\t\tif (p[i] < t) vis[p[i]] = true;\n\t\telse break;\n\t}\n\tans.arr[1][t] = vis[0];\n\tfor (int i = 1; i < t; i++) {\n\t\tfor (int j = max(i - t, 0); j <= i - s; j++) {\n\t\t\tans.arr[1][t - i] = min(ans.arr[1][t - i], ans.arr[1][t - j] + vis[i]);\n\t\t}\n\t}\n\tif (L < t) printf(\"%d\", ans.arr[1][t - L]);\n\telse {\n\t\tg1.size = g2.size = t;\n\t\tinit(g1); init(g2);\n\t\tfor (int i = s; i <= t; i++) {\n\t\t\tg1.arr[i][1] = 0;\n\t\t\tg2.arr[i][1] = 1; \n\t\t}\n\t\tfor (int i = 2; i <= t; i++) {\n\t\t\tg1.arr[i - 1][i] = g2.arr[i - 1][i] = 0;\n\t\t}\n\t\tfor (int i = 1; i <= m; i++) {\n\t\t\tif (p[i] < t) continue;\n\t\t\tans = mul(ans, ksm(g1, p[i] - max(p[i - 1] + 1, t)));\n\t\t\tans = mul(ans, g2);\n\t\t}\n\t\tans = mul(ans, ksm(g1, L + t - 1 - p[m]));\n\t\tint out = inf;\n\t\tfor (int i = 1; i <= t; i++) out = min(out, ans.arr[1][i]);\n\t\tprintf(\"%d\", out);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1601304425,
        "uid": 328405,
        "name": "Gemini7X",
        "ccfLevel": 9,
        "title": "\u6d1b\u8c371052 \u8fc7\u6cb3"
    },
    {
        "content": "#### ~~\u5148\u8bfb\u8bfb\u9898~~(\u6ca1\u8bfb\u9898\u7684\u8bf7\u56de\n\n\u4e00\u52a8\u70b9\u5728\u6570\u8f74\u4e0a\u8df3\uff0c\u6570\u8f74\u4e0a\u6709\u4e9b\u5b9a\u70b9\uff0c\u8981\u6c42\u6c42\u51fa\u8df3\u8fc7\u76ee\u6807\u70b9\u6700\u5c0f\u78b0\u5230\u90a3\u4e9b\u5b9a\u70b9\u7684\u6b21\u6570\u3002\n\n### METHOD 1.\n\n\u66b4\u529bDP\uff0c~~\u9996\u5148\u8fd9\u662f\u9898\u63d0\u9ad8\u7ec4\u7684\u9898\u76ee\uff0c\u6709\u53ef\u80fd\u66b4\u529b\u5417~~\uff0c\u7ecf\u8fc7\u6df1\u601d\u719f\u8651\u540e\uff0c\u6211\u4eec\u7684\u53ef\u4ee5\u4ee5\u6709\u4ee5\u4e0b\u601d\u8def\uff1a\n\n1. \u5bf9\u4e8e\u8df3\u5230\u7b2c$i$\u4e2a\u70b9\uff0c\u6211\u4eec\u628a\u6b64\u65f6\u6700\u5c11\u78b0\u5230\u77f3\u5934\u7684\u6b21\u6570\u8bb0\u4e3a$f[i]$\uff0c\u5bf9\u4e8e\u7b2c$i$\u4e2a\u70b9\u6709\u77f3\u5b50\uff0c$bo[i]=1$\uff0c\u53cd\u4e4b\u540c\u7406\u3002\n\n2. \u7b80\u5355\u7684\u5f97\u5230\u65b9\u7a0b$f[i]=min(f[i],f[i-j])+bo[i]$ \u5176\u4e2d$s\u2264j\u2264t$\uff0c$s\u2264i<l+t$\u3002\n\n\u4f46\u662f\u8fd9\u4e2a~~\u5c0f\u522b\u81f4~~\u7684\u65f6\u95f4\u6548\u7387\u5b9e\u5728\u592a\u4f4e\u8fbd\uff0c\u5927\u6982\u662f$O(l)$\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n### METHOD 2.\n\n\u5728\u7b2c\u4e00\u79cd\u65b9\u6cd5\u4e2d\u6211\u4eec\u53ef\u4ee5~~\u5f88\u5bb9\u6613\u7684~~\u5f97\u51fa\uff1a\u65f6\u95f4\u6548\u7387\u4f4e\n\n\u90a3\u4e48\u5230\u5e95\u4f4e\u5728\u54ea\u91cc? \n\n\u7ec6\u7ec6\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff1a$L\u226410^9 $\uff0c$1\u2264M\u2264100$\uff1b\n\n\u5728\u4e00\u4ebf\u4e4b\u5185\u53ea\u6709100\u4e2a\u5b9a\u70b9\uff0c\u663e\u7136\u6709\u4e9b\u5730\u65b9\u662f\u6ca1\u6709\u77f3\u5934\uff08\u4e00\u76f4\u90fd\u662f\u7a7a\u7684\u6570\u8f74\uff09\uff0c\u5728\u8fd9\u4e9b\u8303\u56f4\u5185\uff0cMETHOD 1\u7684\u65b9\u6cd5\u6d6a\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\u3002\n\n\u987a\u7740\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u597d\u5730\u60f3\u5230\u5c06\u4e2d\u95f4\u6ca1\u6709\u4e1c\u897f\u7684\u90e8\u5206\u5220\u6389\u3002\n\n\u697c\u4e0a\u5927\u4f6c\u4e5f\u89e3\u91ca\u8fc7\u4e86~~\u90a3\u6211\u5c31\u518d\u590d\u8bfb\u4e00\u904d~~\uff1a\u53ef\u4ee5\u75282520\u6765\u5220\u53bb\u90a3\u51e0\u6bb5\u6ca1\u6709\u5b9a\u70b9\u7684\u533a\u57df\uff0c\u56e0\u4e3a2520\u662f$lcm(1,2,3,..,10)$[1,2,3,..,10\u7684\u6700\u5c0f\u516c\u500d\u6570]\uff0c\u6240\u4ee5\u53ea\u8981\u6bcf\u4e00\u6bb5\u5927\u4e8e2520 * 2\uff0c\u5c31\u75282520~~\u524a\u4ed6~~\n\n#### Q\uff1a\u4e3a\u4ec0\u4e48\u8981\u75282520 * 2\u4f5c\u4e3a\u662f\u5426\u524a\u53bb\u7684\u6839\u636e\uff1f\n\n\n\n##### A\uff1a\u56e0\u4e3a\u5982\u679c\u5c062520\u4f5c\u4e3a$\u2265$\u7684\u754c\u9650\uff0c\u5982\u679c\u521a\u521a\u597d\u7b49\u4e8e\u7684\u8bdd\uff0c\u4f1a\u88ab\u526a\u6210\u540c\u4e00\u4e2a\u70b9\uff0c\u8fd9\u5f53\u7136\u5c31\u4e0d\u7b26\u5408\u73b0\u5b9e\u4e86\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u5c31\u662f\u90a3\u4e48\u591a\u4e86\uff0c2520\u7f29\u7684\u65b9\u6cd5\uff0c\u7c98\u4e0b\u9762\u4e86\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define maxm 104\n#define maxn 2000001\nusing namespace std;\nint l,s,t,m,ans;\nint pos[maxm],f[maxn];\t//f\u610f\u4e49\u5982\u4e0a \nbool bo[maxn];\t\t\t//bo[i]=1 \u8868\u793a\u5728i\u4f4d\u7f6e\u6709\u77f3\u5b50 \nint min(int a,int b){return a<b?a:b;}\nint main()\n{\n    scanf(\"%d%d%d%d\",&l,&s,&t,&m);\n    for(int i=1;i<=m;++i) scanf(\"%d\",&pos[i]);\n    memset(f,127,sizeof f);f[0]=0;//\u521d\u59cb\u5316 \n\tpos[m+1]=l; \t\t//\u5c06pos[m+1]\u9644\u4e3al\u53ef\u4ee5\u65b9\u4fbf\u4e00\u70b9\uff0c\u540e\u6765\u7f29\u7684\u65f6\u5019\u4e5f\u8981\u7528\u5230 \n    sort(pos+1,pos+m+1);//\u4e00\u5b9a\u8981\u6392\u5e8f\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u6ca1\u6709\u8bf4\u662f\u6b63\u5e8f\u7684\n\tint d=2520,dec=0;\t//d\u5c31\u662f2520\uff0cdec\u5c31\u662f\u6bcf\u4e2a\u70b9\u8981\u5728\u7f29\u524d\u5411\u524d\u79fb\u7684\u957f\u5ea6 \n    if(s==t)\t\t\t//\u7279\u5224s=t\u65f6\n    {\n        for(int i=1;i<=m;++i) if(pos[i]%s==0) ans++;\n        printf(\"%d\\n\",ans);return 0;\n    }\n    for(int i=1;i<=m+1;++i)\t\t\t\t//i=m+1\u4e5f\u8981\u88ab\u8003\u8651\uff0c\u8981\u7f29\u6700\u540e1\u4e2a\u77f3\u5934\u548c\u7ec8\u70b9\u7684\u70b9 \n    {\n        pos[i]-=dec;\t\t\t\t\t//\u7f29\u8fd9\u6761\u8fb9\u4e4b\u524d\u5148\u628a\u70b9\u524d\u79fb \n        while(pos[i]-pos[i-1]>d*2){pos[i]-=d; dec+=d;}//\u5c06\u70b9\u5411\u524d\u632a\u52a8d\u683c\uff0c\u540e\u9762\u79fb\u52a8\u7684\u6570\u91cf\u8981\u79fbdec+d\u683c\uff08\u81ea\u884c\u7406\u89e3\uff09 \n        bo[pos[i]]=1;\t\t\t\t\t//\u8fd9\u4e2a\u70b9\u5c31\u6709\u77f3\u5b50\u4e86 \n    }\n    int ans=2147483647;bo[pos[m+1]]=0;\t//\u5728pos[m+1]\u7684\u4f4d\u7f6e\u662f\u6ca1\u6709\u77f3\u5b50\u7684\uff0c\u662f\u7ec8\u70b9\uff0c\u8981\u9644\u56de\u6765 \n    for(int i=s;i<=pos[m+1]-1+t;++i)\t//\u8df3\u8fc7\u7ec8\u70b9\u4e5f\u7b97 \n        for(int j=s;j<=t;++j) \n        \tif(i-j>=0) f[i]=min(f[i],f[i-j])+bo[i];//\u65b9\u7a0b\u4e0a\u9762\u6709\u89e3\u91caQWQ \n    for(int i=pos[m+1];i<=pos[m+1]-1+t;++i) ans=min(ans,f[i]); //\u8df3\u8fc7\u7ec8\u70b9\u4e5f\u7b97\u7b54\u6848\u7684\uff0c\u53d6\u6700\u5c0f \n    printf(\"%d\\n\"); return 0;\n}\n```\n\n### ____________ END ________________",
        "postTime": 1554962748,
        "uid": 71960,
        "name": "\u9ec4\u6bdb\u732b_HYX",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u4e00\u76f480\u5206\uff0c\u6ca1\u627e\u5230\u539f\u56e0\u3002\n\n\u6bd4\u5bf9\u4e86\u5404\u5927\u9898\u89e3\uff0c\u4f7f\u7528\u4e86\u591a\u79cddp\u65b9\u5f0f\uff0c\u9012\u5f52\u975e\u9012\u5f52\u90fd\u6253\u8fc7\uff0c\u6b63\u7740\u53cd\u7740\u90fd\u6253\u8fc7\uff0c\u8fb9\u754c\u6761\u4ef6\u4e5f\u4ed4\u7ec6\u7814\u7a76\u8fc7\uff0c\u9898\u76ee\u8fd8\u91cd\u8bfb\u4e86\u51e0\u904d.....\n\n\u4f46\u5c31\u662f80\u5206\uff0c\u4e00\u76f4\u6ca1100\u5206\u3002\n\n\u6700\u540e\u76ef\u4e2d\u4e86\u9898\u89e3\u91cc\u9762s==t\u7684\u5224\u65ad\u3002\n\n\u60f3\u4e86\u60f3\uff0c\u604d\u7136\u5927\u609f\u3002\n\n\u7531\u4e8e\u6211\u770b\u5230\u7684\u697c\u4e0b\u7684\u51e0\u4e2a\u9898\u89e3\u91cc\u90fd\u6ca1\u7279\u610f\u63d0\u5230\u8fd9\u4e00\u70b9\u7684\u6837\u5b50\uff0c\u6211\u5c31\u63d0\u4e00\u4e0b.....\n\n\u8ddd\u79bb\u538b\u7f29\u7684\u524d\u63d0\u6761\u4ef6\u662f\uff0c\u5728\u8fd9\u6bb5\u8ddd\u79bb\u91cc\u4f60\u6709\u8db3\u591f\u7684\u7f13\u51b2\u8ddd\u79bb\u6765\u8c03\u6574\u4f60\u7684\u884c\u6b65\u65b9\u6848\uff0c\u4f7f\u5f97\u51fa\u4e86\u8fd9\u6bb5\u8ddd\u79bb\u4ee5\u540e\u4f60\u80fd\u8986\u76d6\u5230\u7684\u8ddd\u79bb\u8f83\u5927\uff0c\u518d\u5f80\u5927\u5219\u8986\u76d6\u5230\u7684\u8ddd\u79bb\u4e0d\u53d8\uff0c\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u8fdb\u884c\u8ddd\u79bb\u538b\u7f29\u3002\n\n\u4f46\u662fs==t\u7684\u65f6\u5019\uff0c\u4efb\u4f60\u600e\u4e48\u6d6a\uff0c\u4f60\u662f\u6ca1\u6709\u51b3\u5b9a\u884c\u6b65\u65b9\u6848\u7684\u6743\u9650\u7684\u3002\u8fd9\u65f6\u5019\u82e5\u5bf9\u8ddd\u79bb\u8fdb\u884c\u4e0d\u9002\u5f53\u7684\u7279\u5b9a\u8c03\u6574\uff08\u6bd4\u5982\u76f4\u63a5\u6539\u621090\uff09\uff0c\u5f97\u5230\u7684\u663e\u7136\u662f\u9519\u89e3\u3002\n\n\u6240\u4ee5\u5bf9\u4e8es==t\u7684\u60c5\u51b5\u8fdb\u884c\u7279\u5224\uff0c\u6b64\u65f6a[i]%s==0\u65f6\uff0c\u8fd9\u4e2a\u77f3\u5934i\u80af\u5b9a\u4f1a\u88ab\u8e29\u5230\u3002\u5bf9\u7b54\u6848\u76f4\u63a5\u8fdb\u884c\u7edf\u8ba1\u5373\u53ef\u3002\n\ndp\u4e0b\u9762\u5df2\u7ecf\u8bf4\u7684\u5f88\u6e05\u6670\u4e86\u3002\n\nupd: @cz666 \u95ee\u9898\u5df2\u4fee\u590d\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int M=110,N=1e4+100;\nint a[M],d[M];\nint stone[N];\nint f[N];\nint main(){\n    ios::sync_with_stdio(false);\n    int l,s,t,m;\n    cin>>l>>s>>t>>m;\n    int spec=-1;\n    if(s==t)spec=0;\n    for(int i=0;i<m;i++){\n        cin>>a[i];\n        if(spec>=0)spec+=!(a[i]%s);\n        if(a[i]>l){m--;i--;continue;}\n    }\n    if(spec>=0)cout<<spec<<endl,exit(0);\n    sort(a,a+m);\n    d[0]=a[0];\n    if(d[0]>90)d[0]=90;\n    for(int i=1;i<m;i++){\n        d[i]=a[i]-a[i-1];\n        if(d[i]>90)d[i]=90;\n    }\n    int nd=0;\n    for(int i=0;i<m;i++){\n        nd+=d[i];\n        stone[nd]++;\n    }\n    l=nd;\n    int ans=0x7fffffff;\n    memset(f,0x3f,sizeof(f));\n    f[0]=0;\n    for(int i=0;i<=l+t;i++){\n        for(int j=max(i-t, 0);j<=i-s;j++)f[i]=min(f[i],f[j]);\n        f[i]+=stone[i];\n        if(i>=l)ans=min(ans,f[i]);\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1508933147,
        "uid": 5554,
        "name": "Sino_E",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u4f3c\u4e4e\u6709\u597d\u591a\u7bc7\u9898\u89e3\u90fd\u88ab hack \u6389\u4e86\n\n\u8fd9\u4e2a\u505a\u6cd5\u76ee\u524d\u80fd\u901a\u8fc7\u8bc4\u8bba\u533a\u7684\u6240\u6709 hack \u6570\u636e\uff0c\u5982\u679c\u8fd8\u80fd\u88ab hack \u7684\u8bdd\u8bf7\u7559\u8a00\n\n\u9996\u5148\u6734\u7d20\u7684 DP \u65b9\u7a0b\u5e94\u8be5\u90fd\u6e05\u695a\uff0c$f_i = \\min_{s \\leq j \\leq t} f_{i-j}$\uff0c\u5982\u679c $i$ \u4f4d\u7f6e\u6709\u77f3\u5934\u5c31\u52a0\u4e00\n\n$l$ \u662f $10^9$ \u7684\u663e\u7136\u8fc7\u4e0d\u4e86\uff0c\u9700\u8981\u4f18\u5316\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u4e24\u4e2a\u77f3\u5934\u4e4b\u95f4\u9694\u7684\u5f88\u8fdc\uff0c\u90a3\u5b83\u4eec\u4e4b\u95f4\u7684\u5f88\u591a\u72b6\u6001\u663e\u7136\u662f\u6ca1\u6709\u7528\u7684\uff0c\u56e0\u4e3a\u80af\u5b9a\u80fd\u8d70\u5230\u3002\n\n\u8003\u8651\u7b2c $i$ \u5757\u77f3\u5934\u4f4d\u7f6e\u5728 $a_i$\uff0c\u90a3\u4e48\u8fd9\u5757\u77f3\u5934\u53ea\u4f1a**\u76f4\u63a5**\u5f71\u54cd\u4ece $f_{a_i}$ \u5230 $f_{a_i+t}$ \u7684\u7ed3\u679c\u3002\n\n\u518d\u4ece $a_i+t$ \u4f4d\u7f6e\u51fa\u53d1\uff0c\u5982\u679c\u524d\u8def\u4e0a\u6ca1\u6709\u77f3\u5934\uff0c\u65e0\u8bba\u600e\u4e48\u8d70\uff0c\u90fd\u53ef\u4ee5\u4e0d\u589e\u52a0\u989d\u5916\u4ee3\u4ef7\u5c31\u80fd\u5230\u8fbe\u4f4d\u7f6e $a_i+t+k \\times\\operatorname{lcm}[s,s+1,\\dots,t],k \\in \\mathbf{N}$\n\n\u56e0\u6b64\u4e2d\u95f4\u7684\u8fd9\u4e9b\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u88ab\u538b\u7f29\u6389\u3002\n\n\u603b\u95f4\u8ddd\u4e0a\u754c\u4e3a $m \\times (t + \\operatorname{lcm})$\uff0c\u56e0\u4e3a $\\operatorname{lcm}[1,2,\\ldots,10] =2520$\uff0c\u590d\u6742\u5ea6\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\n\u6bcf\u6b21\u6c42\u4e00\u904d $\\operatorname{lcm}$ \u6bd4\u8f83\u9ebb\u70e6\uff0c\u53ef\u4ee5\u76f4\u63a5\u6309 2520 \u538b\u7f29\u3002\u5224\u65ad\u77f3\u5934\u95f4\u8ddd\u65f6\uff0c\u7528\u95f4\u8ddd $\\bmod \\operatorname{lcm}$\uff0c\u5982\u679c\u4f59\u6570\u5c0f\u4e8e\u7b49\u4e8e $t$ \u8981\u52a0\u4e0a\u4e00\u4e2a $\\operatorname{lcm}$\u3002\n\n\u4e00\u4e9b hack \u6570\u636e\uff1a\n\n```\n13 3 4 4 1 10 11 12 Output: 0\n5044 2 3 3 1 2522 5043 Output: 0\n10000 8 9 2 2528 5049 Output: 0\n10 2 3 5 3 4 6 7 8 Output: 1\n3000 2 3 2 2522 2523 Output: 0\n```\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 260000, M = 110;\nint l, s, t, m;\nint a[M], c[N], dp[N];\nbool v[N];\nint main() {\n\tscanf(\"%d\", &l);\n\tscanf(\"%d%d%d\", &s, &t, &m);\n\tfor(int i=1; i<=m; ++i) {\n\t\tscanf(\"%d\", a+i);\n\t}\n\ta[m+1] = l;\n\tsort(a+1, a+m+2);\n\tfor(int i=1; i<=m+1; ++i) {\n\t\tif(a[i]-a[i-1] >= 2520 && (a[i]-a[i-1]) % 2520 <= t) {\n\t\t\tc[i] = c[i-1] + (a[i]-a[i-1]) % 2520 + 2520;\n\t\t} else \n\t\tc[i] = c[i-1] + (a[i]-a[i-1]) % 2520;\n\t\tv[c[i]] = true;\n\t}\n\tv[c[m+1]] = false; l = c[m+1];\n\t\n\tmemset(dp, 0x3f, sizeof dp);\n\tdp[0] = 0; int ans = INT_MAX;\n\tfor(int i=1; i<=l+t-1; ++i) {\n\t\tfor(int j=i-t; j<=i-s; ++j) {\n\t\t\tif(j>=0) dp[i] = min(dp[i], dp[j]);\n\t\t}\n\t\tif(v[i]) ++dp[i];\n\t\tif(i>=l) ans = min(ans, dp[i]);\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1606917322,
        "uid": 125032,
        "name": "SerokSSR",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\n\nupd on 2020/11/15 \uff1a\u4fee\u6539\u4e86\u505a\u6cd5\uff0c\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7hack\u6570\u636e\n\nupd on 2020/07/25 : \u4fee\u4e86\u4e00\u4e0b $\\LaTeX$\n\n---\n\n### \u8bf4\u5728\u524d\u9762\uff1a\n\n\u4e3a\u4e86\u8ba9\u5927\u5bb6\u6709\u66f4\u597d\u7684\u7406\u89e3\uff0c\u6211\u4f1a\u5c3d\u91cf\u8bf4\u7684\u6e05\u6670\uff0c\u7b80\u6d01\u4e00\u4e9b\u3002\n\n------\n### \u8bfb\u9898\uff08\u53ea\u770b\u601d\u8def\u8bf7\u8df3\u8fc7\u8fd9\u4e00\u6bb5\uff09\n\n\u7b80\u5316\u4e00\u4e0b\u672c\u9898\u7684\u9898\u610f\uff1a\n\n\u5728\u4e00\u4e2a\u6570\u8f74\u4e0a\u6709 $M$ \u4e2a\u70b9\u3002\n\n\u4f60\u4e00\u6b21\u7684\u79fb\u52a8\u8ddd\u79bb\u53ef\u4ee5\u662f $S$ \u5230 $T$ \u533a\u95f4\u4e2d\u4efb\u610f\u4e00\u4e2a\u6570\uff0c\u6c42\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u6700\u5c11\u78b0\u5230\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n----------\n\n### \u601d\u8def\uff1a\n\n\u5f88\u660e\u663e\u7684\uff0c\u8fd9\u662f\u4e00\u9053 $DP$ \u7684\u4f8b\u9898\u3002\n\n\n\u4ece\u4ee5\u4e0b\u4e24\u4e2a\u89d2\u5ea6\u51fa\u53d1\uff1a\n\n+ \u6211\u4ece\u54ea\u91cc\u6765\uff1f\uff08\u5f53\u524d\u72b6\u6001\u53ef\u4ee5\u7531\u54ea\u4e9b\u72b6\u6001\u5f97\u5230\uff1f\uff09\n\n+ \u6211\u5230\u54ea\u91cc\u53bb\uff1f\uff08\u5f53\u524d\u72b6\u6001\u53ef\u4ee5\u53bb\u5230\u54ea\u51e0\u4e2a\u72b6\u6001\uff1f\uff09\n\n\u6211\u4eec\u4e0d\u96be\u60f3\u5230\uff1a\n\n\u6211\u4eec\u5f53\u524d\u7684\u70b9\u53ef\u4ee5\u4ece\u524d $S$ \u5230 $T$ \u4e2a\u70b9\u5230\u8fbe\u3002\n\n\u5230\u8fbe\u65f6\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u8e29\u5230\u77f3\u5b50\u6216\u8005\u6ca1\u8e29\u5230\u77f3\u5b50\u3002\n\n\u4e0d\u59a8\u8bbe $f[i]$ \u8868\u793a\u5728\u7b2c $i$ \u4e2a\u70b9\u65f6\u8e29\u5230\u7684\u6700\u5c11\u7684\u77f3\u5b50\u6570\u3002\n\n\u5982\u679c\u6ca1\u8e29\u5230\u77f3\u5b50\uff1a$f[i]=min(f[i],f[i-j])$\n\n\u8e29\u5230\u4e86\u8bdd: $f[i]=min(f[i],f[i-j])+1$\n\n\u601d\u8def\u7406\u6e05\u695a\u4e86\u4e48\uff1f\n\n\u8fd9\u91cc\u7ed9\u51fa\u4ee3\u7801\uff1a\n\n```cpp\n    for(register int i=1;i<=L+t;i++){\n        for(register int j=s;j<=t;j++){\n            if(i-j>=0){\n            \tf[i]=min(f[i],f[i-j]);  \n\t\t\t}\n            f[i]+=rock[i];\n        }\n    }\n```\n\n\n-------\n\n### \u4f18\u5316\uff1a\n\n\u5728\u4e00\u756a\u6df1\u601d\u719f\u8651\u4e4b\u540e\uff0c\u6211\u60f3\u5230\u4e86\u8fd9\u9053\u9898\u7684\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u3002\n\n\u5982\u679c\u6570\u636e\u7ed9\u51fa\u6765\u7684\u77f3\u5b50\u95f4\u8ddd\u4e0d\u5927\uff0c\u90a3\u8fd8\u597d\u3002\n\n\u5982\u679c\u50cf\u8fd9\u6837\u7684\u8bdd\u5462\uff1f\uff08\u7eff\u8272\u5c0f\u661f\u661f\u4ee3\u8868\u77f3\u5b50\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/b5nr70cw.png)\n\n\u4e00\u4e2a\u77f3\u5b50\u548c\u4e00\u4e2a\u77f3\u5b50\u4e2d\u95f4\u9694\u5f97\u975e\u5e38\u5f00($1\\times 10^8$\u4e4b\u7c7b\u7684\u6570\u636e)\uff0c\u4f60\u8fd8\u4f1a\u50bb\u50bb\u7684\u66b4\u529b\u5168\u8dd1\u4e00\u904d\uff1f\n\n\uff08\u4e0d $T$ \u98de\u5c31\u6709\u9b3c\u54af\uff01\uff09\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u81ea\u7136\u800c\u7136\u7684\u60f3\u5230\u4e86\u538b\u7f29\u8def\u5f84\u3002\n\n\u5982\u679c\u6709\u4e24\u4e2a\u77f3\u5b50\u7684\u95f4\u8ddd\u5f88\u957f\uff0c\u90a3\u6211\u4eec\u62ff\u533a\u95f4 $[S,T]$ \u6240\u6709\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u5bf9\u5b83\u53d6\u4f59\u6765\u5f97\u5230\u65b0\u7684\u95f4\u8ddd\uff0c\u4e5f\u4e0d\u4f1a\u5bf9\u7ed3\u679c\u6709\u4ec0\u4e48\u5f71\u54cd\u3002\n\n\u4e3a\u5565\uff1f\u8fd9\u4e0d\u662f\u660e\u6446\u7740\u4e48\uff1f\n\n\u4f60\u65e2\u7136\u53ef\u4ee5\u8df3 $[S,T]$ \u533a\u95f4\u91cc\u4efb\u610f\u4e00\u4e2a\u6570\uff0c\u90a3\u4f60\u628a\u8fd9\u4e2a\u533a\u95f4\u5bf9 $lcm(S...T)$ \u53d6\u4f59\u3002\n\n\u538b\u7f29\u6389\u7684\u90a3\u90e8\u5206\u53c8\u6ca1\u6709\u77f3\u5b50\uff0c\u4f60\u80af\u5b9a\u53ef\u4ee5\u5230\u8fbe\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u90a3\u538b\u7f29\u6389\u8fd9\u90e8\u5206\u5bf9\u7ed3\u679c\u80af\u5b9a\u6ca1\u6709\u5f71\u54cd\u554a\u3002\n\n\u5728\u6211\u5199\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u5199\u7740\u66f4\u8212\u670d\uff08\u4e0d\u7528\u6bcf\u6b21\u90fd\u6c42\u4e00\u904d\u6700\u5c0f\u516c\u500d\u6570\uff09\uff0c\u6211\u7528\u4e86 $2520$ \u6765\u4f5c\u4e3a\u6a21\u6570\u3002\n\n\u56e0\u4e3a $lcm(1,2,3,4,...,10) = 2520$ \u3002\n\n\u4e5f\u5c31\u662f\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u4e00\u6bb5\u4ee3\u7801\uff1a\n\n```cpp\n    for(register int i=1;i<=m;i++){\n        re[i]=(a[i]-a[i-1])%2520; \n\t}\n```\n\n\n\u4f46\u662f `test#1` \u662f\u4e00\u7ec4hack\u6570\u636e\uff0c\u4f1a\u8ba9\u6211\u7684\u8fd9\u4e2a\u505a\u6cd5wa\u6389\u3002\n\n\u89e3\u51b3\u65b9\u6cd5\u5176\u5b9e\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5728\u4ee3\u7801\u91cc\u52a0\u4e0a\u8fd9\u4e00\u884c\uff1a\n\n```cpp\n\tif((a[i]-a[i-1])>=2520&&re[i]<=t){\n\t\tre[i]+=2520;\n\t}\n```\n\n\n\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u3002\n\n\u5982\u679c\u6211\u4eec\u5148\u5904\u7406\u51fa\u6765\u7684\u90a3\u4e2a $a[i]-a[i-1]$ \u662f\u5927\u4e8e $2520$ \u7684\uff0c\u90a3\u4e48\u6a21\u5b8c\u5c31\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u65b0\u7684 $re[i]$ \u5c0f\u4e8e $t$ \u7684\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u610f\u5473\u7740\u4ec0\u4e48\u5462\uff1f\n\n\u4e24\u5757\u77f3\u5b50\u53ef\u80fd\u4f1a\u91cd\u5408\u5728\u4e00\u8d77\u3002\n\n\u90a3\u60a8\u5c31\u6302\u4e86\u554a\u3002\n\n\u6240\u4ee5\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u65f6\u5019\u518d\u7ed9 $re[i]$ \u52a0\u4e0a $2520$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n---\n\ncode\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint a[104];\nint re[104];\nint rock[1000005];\nint f[1000005]; \nint L,s,t,m;\n\nint main(){\n    cin>>L;\n\tcin>>s>>t>>m;\n    for(register int i=1;i<=m;i++){\n    \tcin>>a[i];\n\t} \n    sort(a+1,a+m+1); \n    for(register int i=1;i<=m;i++){\n        re[i]=(a[i]-a[i-1])%2520; \n\t\tif((a[i]-a[i-1])>=2520&&re[i]<=t){\n\t\t\tre[i]+=2520;\n\t\t}\n\t}\n    for(register int i=1;i<=m;i++){\n        a[i]=a[i-1]+re[i];\n        rock[a[i]]=1; \n    }\n    L=a[m];\n    for(register int i=0;i<=L+t;i++){\n    \tf[i]=m;\n\t} \n    f[0]=0;\n    for(register int i=1;i<=L+t;i++){\n        for(register int j=s;j<=t;j++){\n            if(i-j>=0){\n            \tf[i]=min(f[i],f[i-j]);  \n\t\t\t}\n            f[i]+=rock[i];\n        }\n    }\n    \n    int res=m;\n    \n\tfor(register int i=L;i<L+t;i++){\n\t\tres=min(res,f[i]);\n\t}\n    cout<<res<<endl;\n    return 0;\n}\n```\n\n\n\n----\n\n\u8c28\u4ee5\u6b64\u9898\u89e3\u7eaa\u5ff5\u6211AC\u7684\u7b2c\u4e00\u9053\u84dd\u9898\u3002\n",
        "postTime": 1595663075,
        "uid": 304550,
        "name": "black_trees",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\n### [\u5e7f\u544a\u4e00\u53d1\u6211\u7684\u535a\u5ba2](https://blog.csdn.net/liusu201601)\n\n ***\n  ### \u9898\u76ee\u5927\u610f\n1. \u5728\u4e00\u4e2a\u957f\u5ea6\u662fn\u7684\u6570\u8f74\u4e0a\uff0c\u6709m\u4e2a\u683c\u5b50\u6709\u77f3\u5934\uff1b\n2. \u4ece0\u51fa\u53d1\uff0c\u8df3\u51fa\u6570\u8f74\uff0c\u6bcf\u6b21\u53ef\u4ee5\u8df3 s-t \u7684\u8ddd\u79bb\uff1b\n3. \u95ee\uff1a\u8981\u6c42\u8e29\u5230\u5c3d\u53ef\u80fd\u5c11\u77f3\u5934\u7684\u60c5\u51b5\u4e0b\uff0c\u8e29\u4e86\u591a\u5c11\u77f3\u5934\u3002\n4. n\u662f10^9^ \uff0cm\u7684\u8303\u56f4\u662f100\uff08\u6700\u591a100\u4e2a\u77f3\u5934\uff09\uff1b\n\n  ***\n### \u9898\u76ee\u5206\u6790\n\n- \u5728\u6ca1\u770b\u5230n\u7684\u8303\u56f4\u4e4b\u524d\uff0c\u8fd9\u662f\u4e00\u9053\u975e\u5e38\u76f4\u89c2\u7684\u7ebf\u6027DP\uff0c30%\u7684\u5206\u6570\u7a33\u4e86\u3002\n\n- 100%\u7684\u6570\u636e\uff0c\u663e\u7136\u8981\u60f3\u4f18\u5316\u624d\u884c\u3002\n\n- 30\u5206\u601d\u8def\u4e0e\u4ee3\u7801\n- 100\u5206\u601d\u8def\u4e0e\u4ee3\u7801\n\n\n\n\n\n ***\n#### 30\u5206\u601d\u8def\uff1a\u7ebf\u6027DP\uff0c\u62ff\u4e86\u5206\u518d\u8bf4\n- \u95ee\u4ec0\u4e48\u8bbe\u4ec0\u4e48\uff1af[i]\u4ece\u8d77\u70b9\u7b2c0\u683c\u8df3\u5230\u7b2c i \u683c\uff0c\u8e29\u5230\u7684\u6700\u5c11\u77f3\u5934\u662f\u591a\u5c11\uff1b\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190628101347561.png)\n- \u89c2\u5bdf\u4e0a\u56fe\uff0ci \u70b9\u53ea\u80fd\u4ece j \u70b9\u8df3\u8fc7\u6765\u6240\u4ee5\u53ef\u4ee5\u5f88\u5bb9\u6613\u60f3\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a\n```\nf[i]= min(f[i], f[j]| i-t<=j<=i-s))+a[i]; //a\u6570\u7ec4\u8868\u793a\u7b2c i \u70b9\u662f\u5426\u6709\u77f3\u5934\uff1b\n```\n- \u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff0c\u9898\u76ee\u8bf4\u8df3\u8fc7\u7ec8\u70b9\u5c31\u53ef\u4ee5\uff0c\u4e0d\u4e00\u5b9a\u8981\u5230\u8fbe\u7ec8\u70b9\uff0c\u6240\u4ee5\u6570\u7ec4\u7a0d\u5fae\u5f00\u5927\u4e00\u70b9\uff0c\u6700\u540e\u8be2\u95ee\u4ece\u7ec8\u70b9 n \u5230 n+t \u7684\u8303\u56f4\uff0c\u624d\u662f\u7b54\u6848\u3002\n##### 30\u5206\u53c2\u8003\u4ee3\u7801\n\n```cpp\n//luogu1052\uff1a\u8fc7\u6cb3\n//30%\u7684\u505a\u6cd5\uff1a\u7ebf\u6027DP \n\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,s,t,ans=999999999; \nint a[100005],f[100005];\n\nint main()\n{\n\tscanf(\"%d\",&n);//\u6865\u7684\u957f\u5ea6\n\t\n\tscanf(\"%d %d %d\",&s,&t,&m);\n\t\n\tfor(int i=1;i<=m;i++) \n\t{\n\t\tint x; scanf(\"%d\",&x);\n\t\ta[x]=1;\n\t}\n\t\n\tmemset(f,127,sizeof(f));\n\tf[0]=0;\t\n\tfor(int i=s;i<n+t;i++)\n\t{\n\t\tfor(int j=s;j<=t;j++)\n\t\t{\n\t\t\tif(i-j>=0) f[i]=min(f[i],f[i-j])+a[i];\n\t\t}\n\t}\n\t\n\tfor(int i=n;i<n+t;i++) ans=min(ans,f[i]);\n\t \n\tprintf(\"%d\",ans);\n\t\n\treturn 0;\n}\n```\n\n\n***\n#### 100\u5206\u601d\u8def\uff1a\u8def\u5f84\u7a7a\u95f4\u538b\u7f29\n- DP\u7684\u57fa\u7840\u601d\u8def\u4e0d\u53d8\uff0c\u4f46\u662f\u56e0\u4e3an\u7684\u8303\u56f4\u662f10^9^\uff0c\u6240\u4ee5 f \u6570\u7ec4\u7684\u7a7a\u95f4\u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\uff1b\n- \u4ed4\u7ec6\u5206\u6790\u9898\u76ee\uff0c\u4f1a\u53d1\u73b0\uff0c\u77f3\u5934\u7684\u6700\u5927\u503c\u53ea\u6709100\u4e2a\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c**\u5728\u4e00\u4e2a\u5f88\u957f\u7684\u6570\u8f74\u4e0a\uff0c\u53ea\u6709\u5f88\u5c11\u7684\u70b9**\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u7a00\u758f\u7684\u56fe\uff0c \u6839\u636e\u79bb\u6563\u7684\u601d\u7ef4\uff0c\u53ef\u4ee5\u628a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5927\u5e45\u5730\u7f29\u51cf\u3002\n##### \u8def\u5f84\u538b\u7f29\u5206\u6790\n- \u538b\u7f29\u7684\u8303\u56f4\u53ef\u4ee5\u4ece\u9898\u76ee\u4e2d\u627e\u65b9\u6cd5\uff0c\u9898\u76ee\u8bf4\u9752\u86d9\u6bcf\u6b21\u53ea\u80fd\u8df31<=s<=t<=10\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5**\u5bf91-10\u6c42\u6700\u5c0f\u516c\u500d\u6570\uff0c\u7b54\u6848\u662f2520**\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4ecea\u70b9\u51fa\u53d1\uff0c\u4e00\u5b9a\u80fd\u8df3\u5230 a+2520 \u70b9\u548c a+x*2520\u7684\u70b9\uff0c\u5982\u4e0b\u56fe\uff1a\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190628105954794.png)\n- \u8bbe\u5f53\u524d\u662f\u4ece a \u70b9\u8df3\u5230 b \u70b9\uff0c b \u70b9\u53ef\u80fd\u6709\u77f3\u5934\uff08**\u8bf4\u660e a \u70b9\u548c b \u70b9\u4e4b\u95f4\uff0c\u4e00\u5b9a\u6ca1\u6709\u77f3\u5934\uff0c\u600e\u4e48\u8df3\u90fd\u4e0d\u5f71\u54cd\u7b54\u6848**\uff09\uff1b\n- \u6309\u7167\u4e0b\u9762\u7684\u56fe\u5206\u6790\uff1a\u53ef\u4ee5\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n1 \u5982\u679c a < **b**< a+2520\uff0c\u5219\u6b63\u5e38\u64cd\u4f5c\uff1b\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190628110516575.png)\n2 \u5982\u679c a + 2520 < **b**\uff0c\u5219\u8ba9 a \u5148\u8df3\u5230 a+2520 \u7684\u70b9\u4e0a\uff0c\u518d\u91cd\u590d 1 \u7684\u64cd\u4f5c\uff1b\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/2019062811064951.png)\n3 \u4f9d\u6b21\u7c7b\u63a8\uff0c\u5982\u679c a + x * 2520 < **b**\uff0c\u53ef\u4ee5\u770b\u4f5c a \u53ef\u4ee5\u76f4\u63a5\u98de\u8fc7\u4e2d\u95f4\u7684x\u4e2a\u533a\u95f4\uff0c\u5230\u79bb b \u6700\u8fd1\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5728\u6309\u71671\u7684\u64cd\u4f5c\u6267\u884c\uff1b\n- \u6839\u636e\u4ee5\u4e0a\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u628a\u4efb\u610f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bbd\uff0c\u538b\u7f29\u5230 2520 \u4ee5\u5185\uff0c\u56e0\u6b64 f \u6570\u7ec4\u7684\u7a7a\u95f4\u5c31\u53ef\u4ee5\u4ece\u539f\u6765 10^9^ \u7f29\u5c0f\u5230  50W\u4ee5\u5185\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38\u8dd1DP\u4e86\u3002\n- \u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u77f3\u5934\u7684\u4f4d\u7f6e\u9700\u8981\u5148\u6392\u5e8f\uff08\u9898\u76ee\u6ca1\u6709\u8bf4\u6309\u987a\u5e8f\u7ed9\uff09\uff1b\n##### 100\u5206\u53c2\u8003\u4ee3\u7801\n```cpp\n//luogu1052\uff1a\u8fc7\u6cb3\n//\u7ebf\u6027DP+\u72b6\u6001\u538b\u7f29 \n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,s,t,ans=999999999; \nint a[210];\nint f[1000005];\nint b[1000005];\nint d[210];\nint main()\n{\n\tscanf(\"%d\",&n);//\u6865\u7684\u957f\u5ea6\n\t\n\tscanf(\"%d %d %d\",&s,&t,&m);\n\t\n\tfor(int i=1;i<=m;i++) scanf(\"%d\",&a[i]);\n\t\n\tsort(a+1,a+1+m);\n\t\n\t//\u8ddd\u79bb\u538b\u7f29 \n\tfor(int i=1;i<=m;i++) d[i]=(a[i]-a[i-1])%2520;//\u8ba1\u7b97\u51fa\u77f3\u5b50\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u538b\u7f29\u540e\uff09 \n\tfor(int i=1;i<=m;i++)\n\t{\n\t\ta[i]=a[i-1]+d[i];//\u66f4\u65b0\u77f3\u5b50\u7684\u4f4d\u7f6e\n\t\tb[a[i]]=1; \n\t}\n\tn=a[m];//\u56e0\u4e3a\u8ddd\u79bb\u538b\u7f29\u4e86\uff0c\u5bf9\u5cb8\u4e5f\u538b\u7f29\u4e86 \n\t\n\t//\u6b63\u5e38\u8dd1DP \n\tmemset(f,127,sizeof(f));\n\tf[0]=0;\n\tfor(int i=1;i<=n+t;i++)\n\t{\n\t\tfor(int j=s;j<=t;j++)\n\t\t{\n\t\t\tif(i-j>=0) f[i]=min(f[i],f[i-j])+b[i];\n\t\t}\n\t}\n\t\n\tfor(int i=n;i<n+t;i++) ans=min(ans,f[i]);\n\t\n\tprintf(\"%d\",ans);\n\n\treturn 0;\n}\n```\n",
        "postTime": 1561692022,
        "uid": 30744,
        "name": "liusu201601",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u539f\u6587\uff1a[blog](http://zory.cf/2018-04/\u8fc7\u6cb3.html)\n\n## Analysis\n\u5728\u9898\u76ee\u8ba8\u8bba\u4e2d\uff0c\u6709\u4eba\u63d0\u5230\uff1a10000 8 9 2 2528 5049 \u5e94\u8be5\u8f93\u51fa0\uff0c\u4f46\u4e00\u4e9b\u9898\u89e3\u662f1\n\u90a3\u4e48\u5e94\u8be5\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u5176\u5b9e\u95ee\u9898\u5f88\u7b80\u5355\uff1a\n%\u5b8c\u4e4b\u540e\uff0c\u82e5\u679c\u5728\u6b65\u5e45\u4e4b\u5185\uff0c\u52a0\u4e0a2520\u5373\u53ef\u3002\n\n\u597d\u4e86\u9762\u5bf9\u6ca1\u770b\u8fc7\u522b\u7684\u9898\u89e3\u7684\u540c\u5b66\uff0c\u6211\u91cd\u65b0\u8bb2\u8bb2\u8fd9\u9053\u9898\u5427\u3002\n\n\u9996\u5148\u52a8\u6001\u89c4\u5212\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4f46\u5982\u679c\u76f4\u63a5\u5bf9\u5e9e\u5927\u7684DP\uff0c\u4f1aT\u98de\u7684\uff0c\u800c\u5bf9\u77f3\u5934DP\u5219\u96be\u4ee5\u5b9e\u73b0\u3002\n\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\u867d\u7136\u8bf4s\u548ct\u90fd\u662f\u4e0d\u56fa\u5b9a\u7684\uff0c\u4f46\u5b83\u4eec\u7684\u8303\u56f4\u90fd\u975e\u5e38\u5c0f\uff0c\u4e00\u79cd\u65b9\u6848\u662f\u72b6\u538b\uff0c\u4f46\u4ee3\u7801\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u800c\u4e14\u5bf9\u65b0\u624b\u4e0d\u53cb\u597d\uff0c\u6309\u4e0b\u4e0d\u8868\u3002\n\n\u5176\u5b9e\uff0c\u65e2\u7136\u6b65\u6570\u53ea\u6709\u53ef\u80fd\u662f1\u523010\uff0c\u90a3\u4e48\u7531\u4e8e\u9898\u76ee\u6839\u672c\u4e0d\u5173\u5fc3\u5177\u4f53\u662f\u600e\u4e48\u8d70\u8fc7\u53bb\u7684\uff0c\u751a\u81f3\u603b\u6b65\u6570\u90fd\u4e0d\u5173\u5fc3\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u6bb5\u5f88\u957f\u7684\u8ddd\u79bb\uff0c\u600e\u4e48\u8d70\u51e0\u4e4e\u662f\u968f\u4fbf\u7684\u3002\u90a3\u4e48\u5176\u5b9e\uff0c\u65e0\u8bbas\u548ct\u7684\u53d6\u503c\u662f\u4ec0\u4e48\uff0c\u5bf9\u4e8e1\u523010\u7684\u6700\u5c0f\u516c\u500d\u65702520\uff08\u6709\u7684\u4eba\u4f1a\u95ee\u600e\u4e48\u8ba1\u7b97\uff1f\u628a\u6240\u6709\u6570\u5b57\u5217\u51fa\u6765\uff0c\u7136\u540e\u8bf8\u59824\u548c8\uff0c\u5c31\u53ea\u53d68\uff0c\u5269\u4e0b7\u30018\u30019\u300110\uff0c\u90a3\u4e48\u56e0\u4e3a10\u91cc\u9762\u67092,8\u53d8\u62104\uff0c\u4e8e\u662f\u5b83\u4eec\u7684\u4e58\u79ef\u53732520\u4e86\uff09\n\u7136\u540e\u6839\u636e\u4f4d\u7f6e\u5dee\uff0c\u6392\u5e8f\u540e\u538b\u7f29\u8def\u5f84\uff0c\u7528bool\u6570\u7ec4\u5bf9\u70b9\u8bb0\u5f55\u5373\u53ef\n\n\n## Code\n```cpp\nconst int INF=0x3f3f3f3f;\nint a[110],b[110],c[110];\nint f[610000];\nbool v[610000];\n//****************\u4e3b\u51fd\u6570****************\nint main()\n{\n\tint l,s,t,m;scanf(\"%d%d%d%d\",&l,&s,&t,&m);\n\tfor(int i=1;i<=m;i++) scanf(\"%d\",&a[i]);\n\tsort(a+1,a+1+m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tb[i]=a[i]-a[i-1];\n\t\tint tmp=b[i]%2520;\n\t\tif(b[i]>=2520 and tmp<=t) tmp+=2520;//\u786e\u4fdd\u6b63\u786e\u6027\n\t\tc[i]=c[i-1]+tmp;\n\t\tv[ c[i] ]=1;\n\t}\n\t\n\tmemset(f,63,sizeof(f));f[0]=0;\n\t\n\tint tmp=(l-a[m])%2520;\n\tif((l-a[m])>=2520 and tmp<=t) tmp+=2520;//\u786e\u4fdd\u6b63\u786e\u6027\n\tl=c[m]+tmp;\n\t\n\tint ans=INF;\n\tfor(int i=1;i<=l+t-1;i++)\n\t{\n\t\tfor(int p=s;p<=t;p++)\n\t\t\tif(i-p>=0) f[i]=min(f[i],f[i-p]+v[i]);\n\t\tif(i>=l) ans=min(ans,f[i]);\n\t}\n\tprintf(\"%d\",ans);\n}\n```\n\n\u5982\u679c\u8fd8\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u53ef\u524d\u5f80\u6211\u7684\u7f51\u7ad9\u8bc4\u8bba\u533a\u8be2\u95ee\uff0c\u5e0c\u671b\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9",
        "postTime": 1522814380,
        "uid": 30058,
        "name": "Zory",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u770b\u89c1\u5f88\u591a\u9ad8\u624b\u4eec\u7528\u72b6\u6001\u538b\u7f29\uff0c\u8fd9\u91cc\u8bb2\u4e00\u79cd\u849f\u84bb\u597d\u61c2\u7684\u79bb\u6563\u5316\u7684\u65b9\u6cd5\u3002\n\n\n\u770b\u5230\u8fd9\u9898\u7684\u7b2c\u4e00\u60f3\u6cd5\u80af\u5b9a\u662f\u7b80\u5355\u7684\u7ebf\u6027DP\uff0c\u7528f[i]\u8868\u793a\u5230\u7b2ci\u4f4d\u6700\u5c11\u80fd\u7ecf\u8fc7\u51e0\u4e2a\u77f3\u5b50,data[i]\u8868\u793a\u7b2ci\u4f4d\u662f\u5426\u6709\u77f3\u5b50\uff0c\u6240\u6709f[i]\u521d\u59cb\u5316\u65e0\u9650\u5927\uff0cf[0]\u521d\u59cb\u53160\n\n\u90a3\u4e48\u663e\u7136f[i]=min(f[i],f[j]+data[i])\uff0c\u5176\u4e2dj\u679a\u4e3ei-s\u5230i-t\u7684\u4f4d\u7f6e\uff0c\u800c\u4e14\u786e\u4fddj\u5927\u4e8e\u7b49\u4e8e0\n\n\u8fd9\u6837\u7ed3\u679c\u5c31\u662f\u5728f[(l-t)~l]\u4e2d\u53d6\u6700\u5c0f\u503c\n\n\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u7279\u70b9\uff0c\u5c31\u662f\u8981\u8df3\u7684\u8ddd\u79bbL\u975e\u5e38\u5927\uff0810^9\uff09\u800c\u6bcf\u6b21\u8df3\u7684\u8ddd\u79bb\u975e\u5e38\u5c0f\uff0810\uff09\n\n{\u8fd9\u9752\u86d9\u4f3c\u4e4e\u5f88\u7d2f}\n\n\u6240\u4ee5\u5047\u5982\u76f4\u63a5\u8fd9\u6837\u641e\u7684\u8bdd\u8fde\u5185\u5b58\u90fd\u627f\u53d7\u4e0d\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u540c\u6837\u76f4\u63a5\u70b8\u7834\u5929\u9645\u3002\n\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u6700\u591a\u53ea\u6709100\u4e2a\u77f3\u5b50\uff0c\u8fd9\u4e5f\u5c31\u662f\u8bf4\u5728\u8fd9\u5de8\u5927\u7684L\u4e2d\u77f3\u5b50\u7684\u5206\u5e03\u975e\u5e38\u7a00\u758f\n\n\u800c\u8df3\u7684\u8ddd\u79bb\u53c8\u975e\u5e38\u7684\u5c0f\uff0c\u90a3\u4e48\u663e\u7136\u8fd9\u9752\u86d9\u8981\u8df3\u5f88\u591a\u6b65\u624d\u4f1a\u9047\u5230\u4e00\u4e2a\u9700\u8981\u8003\u8651\u7684\u77f3\u5b50\u3002\n\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u8bc1\u660e2\u4e2a\u547d\u9898\u6765\u5b8c\u6210\u9898\u76ee\n\n1\uff1a\u628aL\u7684\u503c\u6539\u4e3a\u6700\u540e\u4e00\u4e2a\u77f3\u5b50\u7684\u4f4d\u7f6e\u52a01\uff0c\u4e0d\u5f71\u54cd\u95ee\u9898\u7684\u89e3\n\n{\u8fd9\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u53ea\u8981\u8df3\u5230\u6700\u540e\u4e00\u4e2a\u77f3\u5b50\u4e4b\u540e\u5c31\u53ef\u4ee5\u968f\u4fbf\u8df3}\n\n2\uff1a\u5f53s\u4e0d\u7b49\u4e8et\u65f6\uff0c\u5982\u679c\u6211\u4eec\u8981\u4ecex\u5f00\u59cb\uff0c\u8003\u8651\u4e0b\u4e00\u4e2a\u7684\u77f3\u5b50\u4f4d\u7f6e\u5728y\uff0c\u90a3\u4e48\u628ax\u5230y\u76f4\u63a5\u5927\u4e8et\u7684\u90e8\u5206\u90fd\u88c1\u6389\uff0c\u4e0d\u5f71\u54cd\u95ee\u9898\u7684\u89e3\n\n{\u628ay-x\u8868\u793a\u6210kt+b\u7684\u5f62\u5f0f\uff0c\u5047\u5982b\u4e0d\u4e3a0\u90a3\u8fd9\u4e2a\u77f3\u5b50\u663e\u7136\u6ca1\u6709\u8003\u8651\u7684\u4ef7\u503c\uff0c\u56e0\u4e3a\u663e\u7136\u6709\u907f\u5f00\u7684\u7b56\u7565\uff0c\u628a\u8ddd\u79bb\u6539\u4e3at\u4ecd\u7136\u53ef\u4ee5\u907f\u5f00\uff0c\u6240\u4ee5\u53ea\u6709b\u7b49\u4e8e0\u65f6\u624d\u5bf9\u95ee\u9898\u7684\u89e3\u6709\u5f71\u54cd\u3002\u6b64\u65f6\u7531\u4e8es\u662f\u4e0d\u7b49\u4e8et\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u63a7\u5236\u6bcf\u6b21\u8df3\u4e0d\u5168\u4e3at\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898 \uff0c\u4e5f\u5c31\u662f\u8bf4k\u4e0e\u95ee\u9898\u662f\u65e0\u5173\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u5728\u5728\u4ec0\u4e48\u65f6\u5019\u8df3\u51fa\u4e00\u6bb5\u4e0d\u4e3at\u7684\u8ddd\u79bb}\n\n\n\u901a\u8fc7\u4e0a\u9762\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4efb\u610f\u8ba9\u4e2a\u77f3\u5b50\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7t\n\n\u8fd9\u6837L\u7684\u89c4\u6a21\u5728s\u4e0d\u7b49\u4e8et\u65f6\u5c31\u88ab\u538b\u7f29\u5230\u4e8610\\*100+1\u7684\u8303\u56f4\n\n\uff08\u6240\u4ee5\u5176\u5b9e\u8fd9\u9053\u9898\u7684\u6570\u636e\u89c4\u6a21\u7b97\u662f\u975e\u5e38\u5c0f\u7684\uff09\n\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u80fd\u5728\u9650\u5b9a\u7684\u65f6\u95f4\u548c\u5185\u5b58\u4e4b\u5185\u7528DP\u89e3\u51b3\u5f53s\u4e0d\u7b49\u4e8et\u65f6\u95ee\u9898\u4e86\n\n\n\u5f53s\u7b49\u4e8et\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u9752\u86d9\u8df3\u7684\u8f68\u8ff9\u662f\u56fa\u5b9a\u7684\uff0c\u90a3\u4e48\u53ea\u8981O(n)\u5224\u65ad\u4e00\u4e2a\u77f3\u5b50\u662f\u5426\u5728\u9752\u86d9\u8df3\u8fc7\u7684\u8f68\u8ff9\u4e0a\u5c31\u53ef\u4ee5\u4e86\n",
        "postTime": 1454942594,
        "uid": 10356,
        "name": "\u5929\u72d7\u7684\u624b\u5e16",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u53e6\u4e00\u79cddp\u7684\u65b9\u5411\n\n\u9996\u5148\u770b\u9898\uff0c1\u2264L\u226410^9\uff0c\u6211\u4eec\u53ef\u4ee5\u611f\u53d7\u5230\u6765\u81ea\u51fa\u9898\u4eba\u7684~~\u68ee\u68ee\u6076\u610f~~\uff0c\u518d\u770b1\u2264S\u2264T\u226410,1\u2264M\u2264100\uff0c~~\u591a\u4e48\u53cb\u597d~~\uff0c\u6709\u6ca1\u6709\u60f3\u5230\u4ec0\u4e48\u6709\u8da3\u7684\u5730\u65b9\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u53cd\u8fc7\u6765\u5904\u7406\u77f3\u5934\uff01\n\n\u4ec0\u4e48\u6837\u7684\u60c5\u51b5\u4e0b\u4f1a\u8e29\u4e0a\u77f3\u5934\u5462\uff1f\u5f53\u7136\u662f\u4e0b\u4e00\u6b65\u65e0\u8bba\u662f\u8d70S\u5230T\u7684\u6bcf\u4e00\u6b65\u90fd\u6709\u77f3\u5934\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u77f3\u5934\u7684\u5750\u6807\u4ece\u540e\u5f80\u524d\u63a8\uff0c\u8d70\u5230\u54ea\u4e2a\u70b9\uff0c\u4f1a\u8e29\u5230\u51e0\u5757\u77f3\u5934\u3002\n\n\u62ff\u6837\u4f8b\u4e3e\u4f8b\n\n10\n\n2 3 5\n\n2 3 5 6 7\n\n\u6211\u4eec\u4ece\u540e\u5f80\u524d\u63a8\uff0c\u4ece6,7\u662f\u77f3\u5934\u53d1\u73b0\u8d70\u52304\u4e00\u5b9a\u4f1a\u8e29\u5230\u4e00\u5757\u77f3\u5934\uff0c\u71364\u4e0d\u662f\u77f3\u5934\uff0c\u4e8e\u662f\u52a0\u5165\u961f\u5217\uff0c\u8bb04\u7684cnt\u4e3a1\uff0c\u540c\u7406\uff0c3\u4e5f\u662f\uff0c\u7136\u800c3\u672c\u8eab\u4e5f\u662f\u77f3\u5934\uff0c\u4e8e\u662f3\u7684cnt++\uff0c2\u540c\u7406\uff0c\u63a8\u51fa0\u7684cnt\u6700\u5c11\u4e3a2\n\n\u5f53\u7136\uff0c\u8fd9\u6837\u5e76\u4e0d\u80fd\u89e3\u51b3L\u6570\u636e\u8303\u56f4\u8fc7\u5927\u7684\u95ee\u9898\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\n1000000000\n\n1 2 2\n\n179783935 179783936\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u770b\u7740\u6ca1\u6709\u77f3\u5934\u7684\u5730\u65b9\u90a3\u4e48\u591a~~\u8ba9\u4f60TLE~~\uff0c\u5fc3\u91cc\u4e0d\u96be\u53d7\u5417\uff1f\n\n\u6211\u4eec\u5f53\u7136\u8981\u5c06\u8fd9\u4e9b\u5730\u65b9\u526a\u6389\u3002\u5927\u90e8\u5206\u9898\u89e3\u90fd\u6709\u8bb2\u8fc7\uff0c\u5728\u6b64\u4e0d\u505a\u8d58\u8ff0\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include<algorithm>\nusing namespace std;\nint l;\nint s,t;\nint m;\nint x[10000005];//\u7edf\u8ba1\u77f3\u5934\u4f4d\u7f6e\nint y[10000005];//\u65b0\u77f3\u5934\u4f4d\u7f6e\nint cnt[10000005];//\u7edf\u8ba1\u8e29\u8fd9\u4e2a\u5730\u65b9\u9700\u8e29\u51e0\u5757\u77f3\u5934\nint cmp(int a,int b)\n{\n\treturn a>b;\n}\nint main()\n{\n\tcin>>l>>s>>t>>m;\n\tint i,j;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tcin>>y[i];\n\t\tcnt[i]=1;\n\t}\n\tsort(y+1,y+m+1,cmp);//\u6392\u5e8f\n\tfor(i=m;i>=1;i--)\n\t{\n\t\tint p=(y[i]-y[i+1])%25200;//\u91cd\u70b9\u5f3a\u8c03\uff0c\u4e0d\u662f2520\uff01\uff01\uff01\n\t\tx[i]=x[i+1]+p;\t\t\t//eg:2528 5049\n\t}\t\t\t\t\t//\u5982\u679c\u662f2520\uff0c\u4e24\u4e2a\u70b9\u5c31\u4f1a\u6328\u5728\u4e00\u8d77\n\tint tail=m;\t\t\t\t//\u56e0\u4e3a\u8fd9\u4e2a\u88abWA\u4e86\u597d\u4e45\n\ti=1;\n\twhile(i<=tail&&x[i]>=t)//\u53ea\u8981\u8fd8\u6709\u77f3\u5934\u6216\u8005\u8fd8\u6ca1\u6709\u62b5\u8fbe\u51fa\u53d1\u70b9\n\t{\n\t\tint tag=0;\n\t\tint ct1=cnt[i];\n\t\tfor(j=1;j<=t-s;j++)\n\t\t{\n\t\t\tif(x[i+j]!=x[i+j-1]-1)//\u5224\u65ad\u662f\u5426\u5168\u90e8\u76f8\u90bb\n\t\t\t{\n\t\t\t\ttag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t\tct1=min(ct1,cnt[i+j]);//\u7edf\u8ba1\u6700\u5c0f\u503c\n\t\t}\n\t\tif(tag==1)\n\t\t{\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\t\tj=i+t-s+1;\n\t\twhile(x[j]>x[i]-t)//\u627e\u65b0\u7684\u4f4d\u7f6e\n\t\t\tj++;\n\t\tif(x[j]==x[i]-t&&x[j]!=0)//\u662f\u77f3\u5934\uff0ccnt\u6c42\u548c\n\t\t\tcnt[j]+=ct1;\n\t\telse\n\t\t{\n\t\t\tint k=j;\n\t\t\tfor(k=tail;k>=j;k--)\n\t\t\t{\n\t\t\t\tx[k+1]=x[k];\n\t\t\t\tcnt[k+1]=cnt[k];\n\t\t\t}\n\t\t\tx[j]=x[i]-t;\n\t\t\tcnt[j]=ct1;\n\t\t\ttail++;\n\t\t}//\u5982\u679c\u4e0d\u662f\u77f3\u5934\uff0c\u5f53\u505a\u65b0\u7684\u77f3\u5934\u52a0\u5165\u961f\u5217\n\t\ti++;\n\t}\n\tif(i==tail+1||x[i-1]<t)//\u6ca1\u77f3\u5934\n\t{\n\t\tcout<<\"0\";\n\t\treturn 0;\n\t}\n\tfor(j=i;j<=tail;j++)//\u56de\u5230\u51fa\u53d1\u70b9\n\t{\n\t\tif(x[j]==0)\n\t\t{\n\t\t\tcout<<cnt[j];\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}",
        "postTime": 1601970940,
        "uid": 78380,
        "name": "Rina_048",
        "ccfLevel": 0,
        "title": "P1052\u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/P1052)\n\n~~\u5728\u67d0\u4eba\u7684\u6311\u5506\u4e4b\u4e0b~~\u6765\u505a\u4e86\u8fd9\u9053\u9898\uff0c\u8bf4\u662f\u8def\u5f84\u538b\u7f29dp\uff0c\u7136\u9e45\u6211\u505a\u5b8c\u4ee5\u540e\u5e76\u6ca1\u6709\u53d1\u73b0\u4ec0\u4e48\u548c\u8def\u5f84\u538b\u7f29\u6709\u5173\u7684\u4e1c\u897f\u3002\n\n\u9898\u76ee\u7684\u610f\u601d\u5927\u6982\u5c31\u662f\u7ed9\u4f60\u4e00\u6761\u6570\u8f74\u548c\u4e00\u4e9b\u77f3\u5b50\uff0c\u518d\u7ed9\u4f60\u6bcf\u4e00\u6b21\u53ef\u4ee5\u5f80\u524d\u8d70\u7684\u957f\u5ea6\u533a\u95f4\uff0c\u6c42\u60f3\u8981\u8d70\u5b8c\u8fd9\u6761\u6570\u8f74\u6700\u5c11\u9700\u8981\u7ecf\u8fc7\u591a\u5c11\u4e2a\u77f3\u5b50\u3002\n\n\u9996\u5148\u5bf9\u4e8e30%\u7684\u6570\u636e\uff0c$L \\leq 10000$\uff0c\u5927\u6982\u5c31\u662f\u4e00\u4e2a\u7ebf\u6027dp\u3002\n\n\u4e0d\u96be\u60f3\u5230\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9$i$\uff0c\u90fd\u53ef\u4ee5\u7531$[i-s,i-t]$\u8f6c\u79fb\u8fc7\u6765\u3002\n\n\u8bbe$f[i]$\u8868\u793a\u5728\u70b9$i$\u65f6\u7684\u6700\u5c0f\u7b54\u6848\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u8f6c\u79fb\u65b9\u7a0b\uff1a$f[i]=min(f[k])$\u3002\n\n\u5f53\u7136\u5982\u679c$i$\u5904\u6709\u77f3\u5b50\uff0c$f[i]++$\u3002\n\n\u8fd9\u6837\u662f\u4ece\u540e\u5f80\u524d\u63a8\u7684\uff0c\u4e5f\u53ef\u4ee5\u4ece\u524d\u5f80\u540e\u3002\n\n\u5927\u6982\u5c31\u662f\u8fd9\u6837\uff1a\n\n```cpp\nfor(int i = 0; i < L; i ++)\n\t{\n\t\tif(a[i] == 1) f[i] += 1;\n\t\tfor(int j = s; j <= t; j ++)\n\t\t{\n\t\t\tif(i + j >= l) ans = min(ans, f[i]);\n\t\t\tf[i + j] = min(f[i], f[i + j]);\n\t\t}\n\t}\n```\n\n100%\u7684\u6570\u636e\uff1a$L \\leq 10^9$\n\n\u663e\u7136\u8fd9\u79cd\u60c5\u51b5\u5982\u679c\u76f4\u63a5\u5f00$L$\u7684\u6570\u7ec4\u4f1aMLE\uff0c\u6211\u4eec\u8fd8\u662f\u6309\u7167\u5e38\u89c4\u601d\u8def\uff0c\u60f3\u4e00\u60f3\u6709\u54ea\u4e9b\u5730\u65b9\u662f\u591a\u4f59\u7684\uff0c\u53ef\u4ee5\u4f18\u5316\u6389\u3002\n\n\u53ef\u4ee5\u89c2\u5bdf\u5230\u9898\u76ee\u4e2d$1\\leq S \\leq T \\leq 10, 1\\leq M\\leq 100$\n\n\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e00\u6b21\u8d70\u4e0d\u8d85\u8fc7\u5341\u6b65\uff0c\u4e00\u5171\u4e0d\u8d85\u8fc7100\u4e2a\u77f3\u5b50\u3002\n\n\u663e\u7136\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e24\u4e2a\u77f3\u5b50\u4e4b\u95f4\u7684\u8ddd\u79bb\u4f1a\u975e\u5e38\u7684\u957f\uff0c\u5e76\u4e14\u8981\u8d70\u7684\u6b65\u6570\u4e5f\u975e\u5e38\u7684\u591a\u3002\u800c\u8fd9\u4e9b\u6b65\u6570\u4e2d\u7edd\u5927\u591a\u6570\u90fd\u662f\u6ca1\u6709\u7528\u7684\uff0c\u90a3\u4e48\u4e00\u4e2a\u81ea\u7136\u7684\u60f3\u6cd5\u5c31\u662f\u628a\u4e24\u4e2a\u77f3\u5b50\u4e4b\u95f4\u7684\u8ddd\u79bb\u7f29\u77ed(~~\u96be\u9053\u8fd9\u5c31\u662f\u4f20\u8bf4\u4e2d\u7684\u8def\u5f84\u538b\u7f29\uff1f~~)\n\n\u5148\u4ece\u6700\u7b80\u5355\u7684\u60f3\u8d77\uff0c\u5047\u5982\u4e00\u6b21\u53ea\u80fd\u8d70$S$\u6216\u8005$T$\u6b65\uff0c\u4ece\u539f\u70b9\u5f00\u59cb\u8d70\uff0c\u90a3\u4e48\u663e\u7136\u4e00\u5b9a\u53ef\u4ee5\u8d70\u5230$lcm(S,T)$\u8fd9\u4e2a\u4f4d\u7f6e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c$(0, lcm(S,T)]$\u4e4b\u95f4\u6ca1\u6709\u77f3\u5b50\uff0c\u90a3\u4e48$(0,lcm(S,T)]$\u5c31\u662f\u65e0\u7528\u7684\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e00\u6bb5\u5220\u53bb\u3002\n\n\u63a8\u5e7f\u4e00\u4e0b\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u4ece\u70b9$i$\u5f00\u59cb\uff0c\u4e00\u6b21\u8d70$[S,T]$\u6b65\uff0c\u4e00\u5b9a\u53ef\u4ee5\u5230\u8fbe$i+lcm(S...T)$\u8fd9\u4e2a\u70b9\n\n\u518d\u5229\u7528\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u5c31\u53ef\u4ee5\u5bf9\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u8fdb\u884c\u7f29\u77ed\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nfor(int i = 1; i <= n; i ++) \n\t{\n\t\tif(b[i] - last >= mod) b[i] = last + (b[i] - last) % mod;\n\t\ta[b[i]] = 1;\n\t\tlast = b[i];\n\t}\n```\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int L = 5000005;\nint n, s, t, l, b[L], a[L], f[L], mod;\nint main()\n{\n\tscanf(\"%d\", &l);\n\tscanf(\"%d%d%d\", &s, &t, &n);\n\tmod = 10;//\u8fd9\u91cc\u662f\u4e3a\u4e86\u589e\u52a0\u95f4\u9694 \n\tfor(int i = s; i <= t; i ++) mod  *= i;\n\tmemset(f, 0x3f, sizeof(f));\n\tint ans = 0x3f3f3f3f, last = 0; f[0] = 0;\n\tfor(int i = 1; i <= n; i ++) scanf(\"%d\", &b[i]);\n\tsort(b + 1, b + 1 + n);\n\tfor(int i = 1; i <= n; i ++) \n\t{\n\t\tif(b[i] - last >= mod) b[i] = last + (b[i] - last) % mod;\n\t\ta[b[i]] = 1;\n\t\tlast = b[i];\n\t}\n\tif(l - last >= mod) l = last + (l - last) % mod;\n\tfor(int i = 0; i < l; i ++)\n\t{\n\t\tif(a[i] == 1) f[i] += 1;\n\t\tfor(int j = s; j <= t; j ++)\n\t\t{\n\t\t\tif(i + j >= l) ans = min(ans, f[i]);\n\t\t\tf[i + j] = min(f[i], f[i + j]);\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i ++) cout<<b[i] << endl;\n\tcout << ans;\n}\n```\n\n\u672c\u9898\u89e3\u540c\u6b65\u53d1\u5e03\u4e8e[\u4e2a\u4eba\u535a\u5ba2](https://www.cnblogs.com/lcezych/p/12114219.html)",
        "postTime": 1577584006,
        "uid": 177510,
        "name": "\u5c0f\u849f\u84bb\u76ae\u76ae\u9c7c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5728DP\u7684\u65b9\u9762\u5e94\u8be5\u662f\u6ca1\u6709\u4ec0\u4e48\u601d\u7ef4\u96be\u5ea6\n\n\u96be\u5c31\u96be\u5728$1<L<10^9$\u8fd9\u4e2a\u8303\u56f4\uff0c\u65e0\u8bba\u662f\u65f6\u95f4\u8fd8\u662f\u7a7a\u95f4\u90fd\u4f1a\u7206\uff0c\u6240\u4ee5\u4e0d\u96be\u60f3\u5230\u7528\u72b6\u6001\u538b\u7f29\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a$1<M<100$\u8fd9\u4e2a\u7684\u6570\u636e\u662f\u975e\u5e38\u5c0f\u7684\u6240\u4ee5\u76f4\u63a5\u5c06\u6865\u7f29\u621025501\u957f\u5c31\u53ef\u4ee5\u4e86\uff08\u5176\u5b9e\u8fd8\u53ef\u4ee5\u66f4\u77ed\u4e00\u70b9\uff09\n\n\n\u7136\u540e\u5c06\u6bcf\u4e2a\u77f3\u5934\u7684\u4f4d\u7f6e`mod 25501`\u5b58\u5728\u6570\u7ec4\u4e2d\u5c31\u53ef\u4ee5\u4e86\uff0c\u518d\u63a5\u4e0b\u6765\u5c31\u662fDP\u7684\u8fc7\u7a0b\u4e86\uff0c\u8fd9\u4e2a\u6ca1\u6709\u4ec0\u4e48\u597d\u8bb2\u7684\n\n\n\u8fd8\u6709\u4e00\u70b9\u503c\u5f97\u8981\u8bf4\u5f53`s==t`\u65f6\u6211\u4eec\u9700\u8981\u7279\u5224\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u79cd\u8df3\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u76f4\u63a5\u5c06\u77f3\u5934\u7684\u4f4d\u7f6e`mod t\u5982\u679c\u7b49\u4e8e0\uff0c\u90a3\u4e48cnt++\uff0c\u6700\u540e\u8f93\u51facnt\u5c31\u597d`\n\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#define MAXN 1<<30\n#define N 25501\n#define pb push_back\nusing namespace std;\nint l,s,t,m,is[30000],f[30000],ans=MAXN,cnt;\nint main(){\n    scanf(\"%d%d%d%d\",&l,&s,&t,&m);\n    for(int i=1;i<=m;i++){\n        int x;scanf(\"%d\",&x);is[x%N]=1;//\u7384\u5b66\u538b\u7f29\n        if(s==t&&x%s==0)cnt++\uff1b//s==t\u7684\u7279\u5224\n    }\n    if(s==t){printf(\"%d\",cnt);return 0;}\n    for(int i=1;i<=N;i++)f[i]=MAXN;f[0]=0;//f\u6570\u7ec4\u521d\u59cb\u5316\n    for(int i=1;i<=N;i++)//DP\u8fc7\u7a0b\n        for(int j=s;j<=t;j++){\n            int pos=i%N;//\u5c06\u6b64\u4f4d\u7f6e\u53d6\u6a21\u6765\u5224\u65ad\u662f\u5426\u6709\u77f3\u5934\n            if(i>=j)f[i]=min(f[i-j]+is[pos],f[i]);//\u6b64\u4f4d\u7f6e\u7684\u6700\u4f18\u65b9\u6848\u662f\u4e0a\u4e00\u4e2a\u8df3\u8fc7\u6765\u7684\u77f3\u5934\u7684\u503c\u52a0\u4e0a\u6b64\u6b21\u6709\u6ca1\u6709\u8e29\u4e2d\u77f3\u5934\u548c\u6b64\u6b21\u7684\u503c\u7684\u6700\u5c0f\u503c\n        }\n    printf(\"%d\",f[N]);//\u8f93\u51fa\u6700\u4f18\u65b9\u6848\n    return 0;\n}\n//4 2 3 1 2  \u81ea\u5df1\u9020\u7684\u6570\u636e\n```\nOVER",
        "postTime": 1509639243,
        "uid": 50971,
        "name": "ViXbob",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "# \u8fc7\u6cb3\u89e3\u9898\u62a5\u544a\n\nhttp://oj.jzxx.net/problem.php?id=2540\n\nhttps://www.luogu.org/problemnew/show/P1052\n\nhttp://acm.hdu.edu.cn/showproblem.php?pid=4842\n\n## \u9898\u9762\n\n\u9898\u76ee\u63cf\u8ff0\n\n\u5728\u6cb3\u4e0a\u6709\u4e00\u5ea7\u72ec\u6728\u6865\uff0c\u4e00\u53ea\u9752\u86d9\u60f3\u6cbf\u7740\u72ec\u6728\u6865\u4ece\u6cb3\u7684\u4e00\u4fa7\u8df3\u5230\u53e6\u4e00\u4fa7\u3002\u5728\u6865\u4e0a\u6709\u4e00\u4e9b\u77f3\u5b50\uff0c\u9752\u86d9\u5f88\u8ba8\u538c\u8e29\u5728\u8fd9\u4e9b\u77f3\u5b50\u4e0a\u3002\u7531\u4e8e\u6865\u7684\u957f\u5ea6\u548c\u9752\u86d9\u4e00\u6b21\u8df3\u8fc7\u7684\u8ddd\u79bb\u90fd\u662f\u6b63\u6574\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u72ec\u6728\u6865\u4e0a\u9752\u86d9\u53ef\u80fd\u5230\u8fbe\u7684\u70b9\u770b\u6210\u6570\u8f74\u4e0a\u7684\u4e00\u4e32\u6574\u70b9\uff1a0\uff0c1\uff0c\u2026\u2026\uff0cL\uff08\u5176\u4e2dL\u662f\u6865\u7684\u957f\u5ea6\uff09\u3002\u5750\u6807\u4e3a0\u7684\u70b9\u8868\u793a\u6865\u7684\u8d77\u70b9\uff0c\u5750\u6807\u4e3aL\u7684\u70b9\u8868\u793a\u6865\u7684\u7ec8\u70b9\u3002\u9752\u86d9\u4ece\u6865\u7684\u8d77\u70b9\u5f00\u59cb\uff0c\u4e0d\u505c\u7684\u5411\u7ec8\u70b9\u65b9\u5411\u8df3\u8dc3\u3002\u4e00\u6b21\u8df3\u8dc3\u7684\u8ddd\u79bb\u662fS\u5230T\u4e4b\u95f4\u7684\u4efb\u610f\u6b63\u6574\u6570\uff08\u5305\u62ecS,T\uff09\u3002\u5f53\u9752\u86d9\u8df3\u5230\u6216\u8df3\u8fc7\u5750\u6807\u4e3aL\u7684\u70b9\u65f6\uff0c\u5c31\u7b97\u9752\u86d9\u5df2\u7ecf\u8df3\u51fa\u4e86\u72ec\u6728\u6865\u3002\n\n\u9898\u76ee\u7ed9\u51fa\u72ec\u6728\u6865\u7684\u957f\u5ea6L\uff0c\u9752\u86d9\u8df3\u8dc3\u7684\u8ddd\u79bb\u8303\u56f4S,T\uff0c\u6865\u4e0a\u77f3\u5b50\u7684\u4f4d\u7f6e\u3002\u4f60\u7684\u4efb\u52a1\u662f\u786e\u5b9a\u9752\u86d9\u8981\u60f3\u8fc7\u6cb3\uff0c\u6700\u5c11\u9700\u8981\u8e29\u5230\u7684\u77f3\u5b50\u6570\u3002\n\n\u5bf9\u4e8e30%\u7684\u6570\u636e\uff0cL  < =  10000\uff1b\n\n\u5bf9\u4e8e\u5168\u90e8\u7684\u6570\u636e\uff0cL  < =  10^9\u3002\n\n\u8f93\u5165\n\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u6709\u4e00\u4e2a\u6b63\u6574\u6570L\uff081  < =  L  < =  10^9\uff09\uff0c\u8868\u793a\u72ec\u6728\u6865\u7684\u957f\u5ea6\u3002\n\n\u7b2c\u4e8c\u884c\u6709\u4e09\u4e2a\u6b63\u6574\u6570S\uff0cT\uff0cM\uff0c\u5206\u522b\u8868\u793a\u9752\u86d9\u4e00\u6b21\u8df3\u8dc3\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u6700\u5927\u8ddd\u79bb\uff0c\u53ca\u6865\u4e0a\u77f3\u5b50\u7684\u4e2a\u6570\uff0c\u5176\u4e2d1  < =  S  < =  T  < =  10\uff0c1  < =  M  < =  100\u3002\n\n\u7b2c\u4e09\u884c\u6709M\u4e2a\u4e0d\u540c\u7684\u6b63\u6574\u6570\u5206\u522b\u8868\u793a\u8fd9M\u4e2a\u77f3\u5b50\u5728\u6570\u8f74\u4e0a\u7684\u4f4d\u7f6e\uff08\u6570\u636e\u4fdd\u8bc1\u6865\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u5904\u6ca1\u6709\u77f3\u5b50\uff09\u3002\u6240\u6709\u76f8\u90bb\u7684\u6574\u6570\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\n\n\u8f93\u51fa\n\u8f93\u51fa\u53ea\u5305\u62ec\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u9752\u86d9\u8fc7\u6cb3\u6700\u5c11\u9700\u8981\u8e29\u5230\u7684\u77f3\u5b50\u6570\u3002\n\n\u6837\u4f8b\u8f93\u5165\n\n10\n2 3 5\n2 3 5 6 7\n\n\u6837\u4f8b\u8f93\u51fa\n\n2\n\u6765\u6e90\nNOIP 2005 \u7b2c\u4e8c\u9898\n\n\u8fd9\u662foj.jzxx.net\u7684\u9752\u86d9\u8fc7\u6cb3\u95ee\u9898\uff0c\u6d1b\u8c37\u3001HDU\u7b49\u7f51\u7ad9\u7684\u8fc7\u6cb3\u95ee\u9898\uff0c\u6982\u8ff0\u5dee\u4e0d\u591a\uff0c\u9898\u610f\u3001\u7a0b\u5e8f\u76f8\u540c\uff0c\u5c31\u4ee5oj.jzxx.net\u4e3a\u4f8b\u6765\u8bb2\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u3002\n\n## V1.0\u66b4\u529b\uff0c\u679a\u4e3e\uff0c\u641c\u7d22\n\n\uff08\u7531\u4e8e\u6548\u7387\u6781\u5dee\uff0c\u672c\u4eba\u6ca1\u6709\u4ee3\u7801\uff1b\u7531\u4e8e\u4ee3\u7801\u590d\u6742\uff0c\u672c\u4eba\u61d2\u5f97\u518d\u5199\u3002\u6240\u4ee5\uff0c\u6ca1\u6709\u53c2\u8003\u4ee3\u7801\u3002\uff09\n\n### V1.0.0\u66b4\u529b\u679a\u4e3e\n\n\u8fd9\u9898\u7ed9\u6211\u4eec\u7684\u76f4\u89c9\u662f\u679a\u4e3e\u6bcf\u4e00\u6761\u9752\u86d9\u7684\u7ebf\u8def\uff0c\u627e\u5230\u6700\u5c0f\u7684\u77f3\u5b50\u6570\u3002\n\n### V1.0.1\u641c\u7d22\n\n\u5206\u4e3a\u6df1\u641c\u548c\u5e7f\u641c\u3002\u601d\u8def\u4e0e\u4e0a\u57fa\u672c\u76f8\u540c\uff0c\u53ef\u4ee5\u8fdb\u884c\u7b80\u5355\u7684\u8bb0\u5f55\u4f18\u5316\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u4e0d\u591f\u3002\n\n## V2.0\u52a8\u6001\u89c4\u5212\n\n\u5982\u679c\u4f60\u6c34\u5e73\u8f83\u5dee\uff0c\u771f\u7684\u6309\u524d\u9762\u4e00\u6b65\u4e00\u4e2a\u811a\u5370\u5730\u8d70\u8fc7\u6765\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u4f1a\u60f3\u5230\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u4f46\u662f\uff2c\u592a\u5927\uff08HDU\u91cc\u9762\u5176\u5b9e\u662f109\uff09\uff0c\u60f3\u60f3\u80af\u5b9a\u4f1a\u6808\u5185\u5b58\u6ea2\u51fa\uff0c\u63a5\u7740\u60f3\u5230\u7684\u5c31\u662f\u7c7b\u4f3c\u4e8e\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u52a8\u6001\u89c4\u5212\u4e86\u3002\n\n### V2.0.0\u666e\u901a\u52a8\u6001\u89c4\u5212\n\nstone[i]\u4ee3\u8868i\u5904\u662f\u5426\u6709\u77f3\u5b50\uff0cdp[i]\u4ee3\u8868\u4ecei\u8df3\u5230L\u7684\u6700\u5c11\u8e29\u5230\u7684\u77f3\u5b50\u6570\uff0c\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n\u3000\u3000dp[i] = min(dp[j]|s+i<=j<=t+i)+stone[i]\n\n\u5c06stone\u548cdp\u5408\u5e76\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u4fbf\u662f\u4e0b\u9762\u7684\u4ee3\u7801\uff08\u7531\u4e8e\u5185\u5b58\u9650\u5236\uff0c\u4e0d\u80fd\u62ff\u6ee1\u5206\uff09\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint a[1000002];\nint main(){\n  int l,s,t,m,i,j,x;\n  scanf(\"%d%d%d%d\",& l,& s,& t,& m);\n  for(i = 1; i <= m; i ++){\n    scanf(\"%d\",& x);\n    a[x] = 1;\n  }\n  for(i = l - t - 1; i >= 0; i --){\n    x = 101;\n    for(j = i + s; j <= i + t; j ++)\n      x = min(x,a[j]);\n    a[i] += x;\n    if(i == 10)\n      continue;\n  }\n  printf(\"%d\\n\",a[0]);\n  return 0;\n}\n```\n### V2.0.1\u8def\u5f84\u538b\u7f29\n\u63a5\u7740\uff0c\u5c31\u5f97\u628a\u6570\u7ec4\u538b\u7f29\u4e00\u4e0b\uff0c\u628a\u4e2d\u95f4\u591a\u4f59\u7684\u7a7a\u4f4d\u62ff\u6389\uff0c\u4e00\u9897\u77f3\u5b50\u540ecycle\u8d77\u6bcf\u5904\u90fd\u80fd\u5230\u8fbe\uff0c\u4e8e\u662f\u6bd4cycle+t\u591a\u7684\u7a7a\u4f4d\u5c31\u53ef\u4ee5\u53bb\u6389\uff0c\u518d\u7565\u4f5c\u4fee\u6539\uff0c\u4fbf\u662f\u6700\u7ec8\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint stone[102];//stone[i]\u4ee3\u8868\u7b2ci\u9897\u77f3\u5b50\nint a[80001];\nint main(){\n  int l,s,t,m,i,j,x,y,cycle;\n  scanf(\"%*d%d%d%d\",& s,& t,& m);\n  if(s == t){\n    int ans = 0;\n    for(i = 1; i <= m; i ++){\n      scanf(\"%d\",& x);\n      if(x % s == 0)\n        ans ++;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n  }\n  cycle = s * ((s - 2) / (t - s) + 1);\n  if(cycle == 0)\n    cycle ++;\n  for(i = 1; i <= m; i ++)\n    scanf(\"%d\",stone + i);\n  sort(stone + 1,stone + 1 + m);\n  x = stone[1];\n  for(i = 1; i <= m; i ++){\n    y = stone[i + 1] - stone[i];\n    stone[i] = stone[i - 1] + x;\n    x = y;\n    if(stone[i] - stone[i - 1] > cycle + t)\n      stone[i] = stone[i - 1] + cycle + t;\n    a[stone[i]] = 1;\n  }\n  l = stone[m] + 1;\n  for(i = l - t; i >= 0; i --){\n    x = 101;\n    for(j = i + s; j <= i + t; j ++)\n      x = min(x,a[j]);\n    a[i] += x;\n  }\n  printf(\"%d\\n\",a[0]);\n  return 0;\n}\n\n```\n## \u540e\u8bb0:\u5355\u8c03\u961f\u5217\n\u5f53\u7136\u8fd9\u4e2adp\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\uff0c\u4e0d\u505a\u91cd\u70b9\u8bb2\u89e3\uff0c\u4ec5\u63d0\u4f9b\u4ee3\u7801\u3002\n```\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <deque>\n#define max_s 10\n#define max_t 10\n#define max_m 100\n#define max_cycle (max_s*max_s+1)\n#define max_l (max_cycle*max_m+1)\nusing namespace std;\nint stone[max_m+1];//stone[i]\u4ee3\u8868\u7b2ci\u9897\u77f3\u5b50\nint a[max_l+1];\ntemplate<typename T> struct monotonic_queue{//tim-,que+\n    deque<T> que,tim;\n    void build(){\n        que.clear(),tim.clear();\n    }\n    void push(T node,int _tim){\n        while(!que.empty()&&node<=que.back())\n            que.pop_back(),tim.pop_back();\n        que.push_back(node),tim.push_back(_tim);\n    }\n    void pop(int _tim){\n        while(!que.empty()&&tim.front()>=_tim)\n            tim.pop_front(),que.pop_front();\n    }\n    T top(){\n        return que.front();\n    }\n};\nmonotonic_queue<int> que;\nint main() {\n    int l,s,t,m,i,x,y,cycle;\n    while(scanf(\"%*d%d%d%d\",& s,& t,& m)==3){\n        if(s == t) {\n            int ans = 0;\n            for(i = 1; i <= m; i ++) {\n                scanf(\"%d\",& x);\n                if(x % s == 0)\n                    ans ++;\n            }\n            printf(\"%d\\n\",ans);\n            return 0;\n        }\n        cycle = s*((s-2)/(t-s)+2)+1;\n        if(cycle == 0)\n            cycle ++;\n        for(i = 1; i <= m; i ++)\n            scanf(\"%d\",stone + i);\n        stable_sort(stone + 1,stone + 1 + m);\n        x = stone[1];\n        memset(a,0,sizeof(a));\n        for(i = 1; i <= m; i ++) {\n            y = stone[i + 1] - stone[i];\n            stone[i] = stone[i - 1] + x;\n            x = y;\n            if(stone[i] - stone[i - 1] > cycle)\n                stone[i] = stone[i - 1] + cycle;\n            a[stone[i]] = 1;\n        }\n        l = stone[m] + 1;\n        que.build();\n        for(i = l; i >= l-t+s+1; -- i)\n            que.push(a[i],i);\n        for(i = l - t; i >= 0; i --) {\n            que.push(a[i+s],i+s);\n            a[i] += que.top();\n            que.pop(i+t);\n        }\n        printf(\"%d\\n\",a[0]);\n    }\n    return 0;\n}\n```\nUPDATE 4/4:\u8c03\u6574\u4e86\u4e00\u4e0b\u4ee3\u7801\u7684\u90e8\u5206\u7ec6\u8282~~**\uff08\u4e3a\u4ec0\u4e48\u5ba1\u6838\u53c8\u901a\u4e0d\u8fc7\u4e86 $QAQ$ \uff09**~~\nUPDATE 7/20\uff1a\u589e\u52a0\u5355\u8c03\u961f\u5217\u90e8\u5206",
        "postTime": 1515321727,
        "uid": 35347,
        "name": "wangzhifang",
        "ccfLevel": 0,
        "title": "\u8fc7\u6cb3\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u4e5f\u662f\u81ea\u5df1\u7684\u601d\u8def\uff0c\u6211\u60f3\u5230\u4e86\u9012\u5f52\u6c42\u89e3\u6b64\u95ee\u9898\u3002\u867d\u7136\u5bf9\u4e8e\u6837\u4f8b\u5f88\u5bb9\u6613\u7684\u901a\u8fc7\uff0c\u4f46\u662f\u63d0\u4ea4\u4e4b\u540e10\u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\u6ca1\u6709\u4e00\u5bf9\u662f\u6b63\u786e\u7684\uff0c\u5404\u79cd\u7a98\u8feb\uff0c\u8003\u8651\u5230\u6570\u636e\u89c4\u6a21\u8fd8\u4ee5\u4e3a\u662f\u81ea\u5df1\u7684\u6570\u636e\u7c7b\u578b\u5b9a\u4e49\u7684\u592a\u5c0f\uff0c\u8fd8\u4e13\u95e8\u6362\u6210\u4e86long\u7c7b\u578b\uff0c\u4f46\u662f\u63d0\u4ea4\u4e4b\u540e\u4ecd\u7136\u51fa\u9519\uff0c\u8fd9\u662f\u5173\u6ce8\u9519\u8bef\u4fe1\u606f\uff0c\u53d1\u73b0\u7ed9\u51fa\u7684\u662f\u5806\u6808\u6ea2\u51fa\uff0c\u8fd9\u65f6\u5019\u5c31\u662f\u50bb\u5b50\u4e5f\u4f1a\u60f3\u5230\u5e94\u8be5\u662f\u9012\u5f52\u5c42\u6b21\u592a\u591a\u5bfc\u81f4\u7684\uff0c\u770b\u5230\u90a3\u4e2aL\u7684\u8303\u56f4\uff0c\u6ea2\u51fa\u4e5f\u662f\u7406\u6240\u5e94\u5f53\u7684\u3002\u4e0d\u5f97\u4e0d\u653e\u5f03\u8fd9\u79cd\u601d\u8def\uff0c\u4f46\u662f\u81ea\u5df1\u6709\u4e0d\u4f1a\u522b\u7684\u601d\u8def\uff0c\u53ea\u80fd\u53c2\u8003\u7f51\u53cb\u4e0a\u5404\u79cd\u725b\u4eec\u63d0\u4f9b\u7684\u4ee3\u7801\u3002\u4e0b\u9762\u662f\u81ea\u5df1\u7684\u9012\u5f52\u4ee3\u7801\uff0c\u8fd8\u662f\u8d34\u51fa\u6765\u5427\u3002\n\n\n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n      \n```cpp\n#include <stdio.h>  \n#include <stdlib.h>  \n#include <Windows.h>  \n int NumStone = 101;  \n int IsStone(int destinaton,unsigned int Stone[],int M)  \n {  \n    int high = M -1;  \n    int low = 0;  \n     while(low <= high)  \n    {  \n        int mid = (low + high) / 2;  \n        if(destinaton == Stone[mid])  \n            return mid+1;  \n        if (destinaton <Stone[mid])  \n            high = mid - 1;  \n        else  \n            low = mid + 1;  \n    }  \n    return 0;  \n }  \n void select(unsigned int a[], int count)   /* \u5c06\u77f3\u5b50\u51fa\u73b0\u7684\u4f4d\u7f6e\u6392\u5e8f */  \n {  \n    int i,j,temp;  \n    for(i=0;i<count;i++)           \n    {  \n        temp=a[i];  \n        j=i-1;  \n        while(j>=0 && temp<a[j])  \n        {  \n            a[j+1]=a[j];  \n            j--;  \n        }  \n        a[j+1]=temp;  \n    }  \n }  \n void cal(int location,int num,long int L,int S,int T,unsigned int Stone[],int M)  \n {  \n    int swap;  \n    if(location >= L)  \n    {  \n        if(num < NumStone)  \n        {  \n            NumStone = num;  \n        }  \n    }  \n    else  \n    {  \n        for(swap=S;swap<=T;swap++)  \n        {  \n            if (IsStone(location,Stone,M))  \n            {  \n                num++;  \n            }  \n            cal(location+swap,num,L,S,T,Stone,M);  \n        }  \n    }  \n }  \n int main()  \n {  \n    unsigned int L;  \n    int S,T,M,Temp,n;  \n    scanf(\"%ld\",&L);  \n    scanf(\"%d %d %d\",&S,&T,&M);  \n    unsigned int *Stone = (unsigned int *)malloc(sizeof(unsigned int)*M);  \n    for (n=0;n<M;n++)  \n        scanf(\"%u\",&Stone[n]);  \n    select(Stone,M);  \n    cal(0,0,L,S,T,Stone,M);  \n    printf(\"%d\",NumStone);  \n    system(\"pause\");  \n    return 0;  \n }  \n\n```",
        "postTime": 1515808036,
        "uid": 49027,
        "name": "\u65af\u8482\u82ac\u00b7\u5e93\u91cc30",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u6b64\u9898\u521d\u770b\u662f\u4e00\u4e2a\u5178\u578b\u7684\u641c\u7d22\u9898\u3002\u4ece\u6cb3\u7684\u4e00\u4fa7\u5230\u6cb3\u7684\u53e6\u4e00\u4fa7\uff0c\u8981\u627e\u6700\u5c11\u8e29\u5230\u7684\u77f3\u5934\u6570\u3002\u4f46\u4ece\u6570\u636e\u8303\u56f4\u6765\u770b\u30021..10^9\u957f\u5ea6\u7684\u6865\u3002\u5c31\u7b97\u662fO(n)\u7684\u7b97\u6cd5\u4e5f\u4e0d\u80fd\u5728\u4e00\u79d2\u5185\u51fa\u89e3\u3002\n\n\u5982\u679c\u641c\u7d22\u77f3\u5b50\uff0c\u65b9\u6cd5\u66f4\u56f0\u96be\u3002\u8fd9\u8981\u8003\u8651\u5230\u524d\u9762\u4ee5\u53ca\u540e\u9762\u8fde\u7eed\u7684\u77f3\u5b50\u3002\u82e5\u6362\u4e00\u79cd\u65b9\u6cd5\u3002\u7528\u52a8\u6001\u89c4\u5212\uff0c\u4ee5\u77f3\u5b50\u5206\u9636\u6bb5\u7684\u4e00\u7ef4\u52a8\u89c4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n^2)\u3002\u6700\u591a\u4e5f\u53ea\u6709100\u00d7100\u7684\u65f6\u95f4\u3002\u4f46\u662f\u8fd9\u6837\u5206\u72b6\u6001\u5c31\u5341\u5206\u590d\u6742\u3002\u56e0\u4e3a\u77f3\u5934\u7684\u5206\u5e03\u662f\u6ca1\u6709\u4efb\u4f55\u89c4\u5f8b\uff0c\u800c\u4e14\u4f1a\u6709\u540e\u6548\u6027\u3002\n\n\u8fd9\u6837\u53ea\u597d\u6709\u56de\u5230\u641c\u7d22\u3002\u641c\u7d22\u77f3\u5b50\u4f1a\u548c\u52a8\u89c4\u4e00\u6837\u6ca1\u6709\u89c4\u5f8b\u3002\u6211\u4eec\u4e00\u6865\u7684\u957f\u5ea6\u4e3a\u5bf9\u8c61\u8fdb\u884c\u641c\u7d22\uff0c\u7136\u540e\u518d\u52a0\u4e0a\u4e00\u4e2a\u5de7\u5999\u7684\u526a\u679d\u5c31\u53ef\u4ee5\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u51fa\u89e3\u3002\u53ef\u4ee5\u53f7\u79f0\u4e3aO(m^2)\u3002[\u6279\u6ce8\uff1a\u53f7\u79f0\u4e00\u8bcd\u5df2\u6210\u4e3a\u6e56\u5357OI\u672c\u4e16\u7eaa\u6d41\u884c\u8bcd\u6c47 ]\n\n\n[\u9898\u76ee\u5b9e\u73b0]\n\n\u5148\u4ee5\u65f6\u95f4\u4e3a\u5bf9\u8c61\u8fdb\u884c\u641c\u7d22\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(L)\u3002\u4ece\u6865\u7684\u4e00\u4fa7\u5230\u53e6\u4e00\u4fa7\uff0c\u4e2d\u95f4\u6700\u591a\u53ea\u6709100\u4e2a\u77f3\u5b50\u3002\u5047\u8bbe\u6865\u957f\u4e3a\u6700\u5927\u503c(10^9)\uff0c\u77f3\u5934\u6570\u4e5f\u4e3a\u6700\u5927\u503c(100)\u3002\u8fd9\u6837\u4e2d\u95f4\u4e00\u5b9a\u4f1a\u6709\u5f88\u591a\u201c\u7a7a\u957f\u6761\u201d (\u4e24\u4e2a\u77f3\u5b50\u4e2d\u7684\u7a7a\u5730)\uff0c\u5904\u7406\u65f6\u628a\u8fd9\u4e9b\u8df3\u8fc7\uff0c\u5c31\u53ea\u4f1a\u6709M\u6b21\u8fd0\u7b97\u3002\u5173\u952e\u662f\u627e\u51fa\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u8df3\u8fc7\u7684\u201c\u7a7a\u957f\u6761\u201d\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u9752\u86d9\u53ef\u4ee5\u8df3\u51fa\u7684\u6240\u6709\u53ef\u80fd\u6c42\u51fa\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6c42\u51fa\u53ef\u4ee5\u5ffd\u7565\u7684\u201c\u7a7a\u957f\u6761\u201d\u3002\n\n\nF[i]=Min{F[i-s]\u2026\u2026\u2026f[i-t]} \uff08\u5982\u679ci\u4e3a\u77f3\u5b50\uff0c\u90a3\u4e48\u52a01\uff0c\u5426\u5219\u4e0d\u52a01\uff09\u8fd9\u6837f[l]\u5373\u4e3a\u6240\u6c42\uff0c\u6ce8\u610f\u521d\u59cb\u503cf[0..s-1]\u4e3a\u4e00\u4e2a\u8f83\u5927\u7684\u6570\uff0cf[s\u2026t-1]\u4e3a\u4ed6\u4eec\u672c\u8eab\u7684\u503c\u3002\uff08\u6709\u77f3\u5934\u4e3a1\uff0c\u6ca1\u6709\u77f3\u5934\u4e3a0\uff09\n\n\n\u4f46\u7531\u4e8en\u8f83\u5927\u76f4\u63a5\u52a8\u89c4\u4f1a\u8d85\u65f6\u3002\u6240\u4ee5\u8981\u5c06n\u538b\u7f29\n\n\u67e5\u770b\u5750\u6807\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679cb[i]-b[i-1]>t\uff0c\u663e\u7136\u5bf9\u4e8eb[i-1]+t<n<b[i]\uff0ca[n]\u603b\u662f\u7b49\u4e8ea[b[i-1]]..a[b[i-1]+t]\u4e2d\u7684\u6570\uff0c\u56e0\u6b64\u53ef\u5bf9\u5176\u8fdb\u884c\u538b\u7f29\u3002\n\n\n\n```cpp\nvar a:array[0..100] of longint;\n    f:array[0..10000] of longint;\n    i,j,l,s,t,m,x:longint;\nbegin\n readln(l);\n readln(s,t,m);\n for i:=1 to m do read(a[i]);\n  if s=t then\n  begin\n   for i:=1 to m do\n   if a[i] mod t=0 then j:=j+1;\n   writeln(j);\n   halt;\n  end;\n  for i:=1 to m-1 do\n   for j:=i+1 to m do\n    if a[i]>a[j] then\n     begin\n      x:=a[i];a[i]:=a[j];a[j]:=x;\n     end;\n  for i:=1 to m do\n   begin\n     if a[i]-a[i-1]>100 then\n     begin\n      x:=a[i]-a[i-1]-100;\n      for j:=i to m do a[j]:=a[j]-x;\n     end;\n   end;\n   for i:=1 to s-1 do f[i]:=100;\n   for i:=1 to m do f[a[i]]:=1;\n   for i:=s to a[m]+t do\n   begin\n    x:=100;\n     for j:=i-t to i-s do\n     if j>=0 then\n       if f[j]<x then x:=f[j];\n    f[i]:=f[i]+x;\n   end;\n   x:=100;\n   for i:=a[m] to a[m]+t do if f[i]<x then x:=f[i];\n   writeln(x);\nend.\n```",
        "postTime": 1453432394,
        "uid": 7161,
        "name": "sunjunhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "/\\*\n\u4e00\u9053\u7b80\u5355\u7684DP,\u91cd\u70b9\u5728\u95f4\u8ddd\u538b\u7f29\n\n\u521a\u770b\u5230\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u65f6,100\u4e2a\u77f3\u5b50\u5206\u5e03\u572810^9\u7684\u6865\u4e0a,\u4ee5\u4e3a\u8981\u7528\u79bb\u6563\u5316\n\n\u7136\u800c,\u9700\u8981\u7ef4\u62a4\u77f3\u5b50\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8,\u7ee7\u800c\u538b\u7f29\u6865\u957f\n\n\u5f53\u76f8\u90bb\u4e24\u77f3\u5b50\u95f4\u8ddd\u5927\u4e8eLCM(S,S+1,...,T-1,T)\u65f6,\u4e0e\u95f4\u8ddd\u4e3aLCM\u65f6\u7b49\u6548,\u4ee5\u6b64\u4e3a\u4f9d\u636e\u538b\u7f29\n\n\u540c\u65f6\u53ef\u77e5,\u8df3\u8fc7\u6700\u540e\u4e00\u4e2a\u77f3\u5b50\u540e,\u4fbf\u4e0d\u4f1a\u518d\u8e29\u5230\u77f3\u5b50,\u90a3\u4e48,N\u5c31\u53d8\u5f97\u65e0\u5173\u7d27\u8981\u4e86\n\n\u53ea\u9700\u6c42\u51faMIN(DP[LAST\u77f3\u5b50+(0~T)])\u5373\u4e3a\u7b54\u6848\n\nDP\u65b9\u7a0bDP[i]=MIN(DP[i-(S~T)]+\u6709\u65e0\u77f3\u5b50)\n\n\u8fd9\u9053\u9898\u6709\u5f88\u591a\u5751,\u53ef\u80fdS==T,\u4e14\u8f93\u5165\u77f3\u5b50\u7684\u4f4d\u7f6e\u65f6\u4e0d\u6309\u987a\u5e8f\n\n\u5f53S==T\u65f6,\u8df3\u8dc3\u4f4d\u7f6e\u4fbf\u662f\u56fa\u5b9a\u7684,\u9700\u8981\u7279\u5224\n\n\\*/\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ninline int intin(){register char c=getchar();while(c<48||c>57)c=getchar();register int a=0;while(c>47&&c<58){a=(a<<1)+(a<<3)+c-48;c=getchar();}return a;}\ninline void intot(int a){if(a>9)intot(a/10);putchar(a%10+48);}\ninline int gcd(int a,int b){if(a>b)return gcd(b,a);if(a==0||a==b)return b;return gcd(b%a,a);} \nbool rbq[6666666];int xcs=1,dp[6666666],wyf[111],czh=0;\nint main()\n{\n    int n=intin(),l=intin(),r=intin(),m=intin();\n    for(int i=l;i<=r;i++)xcs=xcs*i/gcd(xcs,i);//\u6c42LCM\n    wyf[0]=0;for(int i=1;i<=m;i++)wyf[i]=intin();//\u8f93\u5165\u77f3\u5b50 \n    if(l==r){for(int i=1;i<=m;i++)if(wyf[i]%l==0)wyf[0]++;intot(wyf[0]);return 0;}//\u5f53S==T\u65f6  \n    sort(wyf+1,wyf+(m+1));//\u65e0\u5e8f\u53d8\u4e3a\u6709\u5e8f \n    for(int i=1;i<=m;i++)//\u538b\u7f29\n    {\n        n=wyf[i];//\u6682\u65f6\u8bb0\u5f55\u6b64\u77f3\u5b50\u4f4d\u7f6e \n        if(wyf[i]-czh>=xcs)//\u4e0e\u4e0a\u4e00\u9897\u77f3\u5b50\u95f4\u8ddd \n            wyf[i]=wyf[i-1]+xcs;//\u95f4\u8ddd\u53d8\u4e3aLCM  \n        else    wyf[i]+=wyf[i-1]-czh;//\u4e0d\u6539\u53d8\u76f8\u5bf9\u4f4d\u7f6e\n        czh=n;//\u5c06\u6b64\u77f3\u5b50\u4f4d\u7f6e\u50a8\u5b58,\u4ee5\u4fbf\u4e0b\u4e00\u6b21\u6bd4\u8f83 \n        rbq[wyf[i]]=1;//\u8bb0\u5f55\u6b64\u5904\u4e3a\u77f3\u5b50 \n    }\n    dp[0]=0;for(int i=1;i<=wyf[m]+r;i++)dp[i]=999999999;//\u9884\u5904\u7406\n    for(int i=l;i<=wyf[m]+r;i++)for(int j=i-r;j<=i-l;j++)if((j>=0)&&(dp[i]>dp[j]+rbq[i]))dp[i]=dp[j]+rbq[i];//\u7b80\u5355DP \n    dp[0]=999999999;for(int i=wyf[m];i<=wyf[m]+r;i++)if(dp[i]<dp[0])dp[0]=dp[i];//\u627eMIN(DP[LAST\u77f3\u5b50+(0~T)])\n    intot(dp[0]);\n    return 0;\n}\n```",
        "postTime": 1509092244,
        "uid": 31890,
        "name": "\u516b\u91cd\u6a31",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u7ef4dp\uff0c\u4e3b\u8981\u96be\u5728\u5c06\u6865\u957f\u538b\u7f29\u3002\n\n\u5148\u4e0d\u8003\u8651\u538b\u7f29\uff0c\u90a3\u4e48dp[i]=min(dp[j])+is\\_stone[i](i-T<=j<=i-S)\n\n\u7136\u540e\u7b54\u6848\u5c31\u662f\u5728dp[L]~dp[L+T)\u4e2d\u53d6\u4e2a\u6700\u5c0f\u503c\u3002\n\n\u4f46\u662f\u7531\u4e8e\u8fd9\u4e2aL\u975e\u5e38\u5927\uff0c\u7136\u800c\u77f3\u5934\u7684\u6570\u91cfM\u5374\u975e\u5e38\u5c0f\uff0c\u6240\u4ee5\u8003\u8651\u79bb\u6563\u5316\u4e00\u4e0b\u3002\n\n\u79bb\u6563\u5316\u7684\u5b97\u65e8\u5c31\u662f\u5728\u4e0d\u6539\u53d8\u6570\u636e\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5173\u7cfb\u4e0b\u7f29\u5c0f\u6570\u636e\u89c4\u6a21\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5c06\u4e24\u4e2a\u8ddd\u79bb\u5f88\u8fdc\u7684\u77f3\u5934\u7684\u8ddd\u79bb\u7f29\u77ed\u5230\u4ec0\u4e48\u65f6\u5019\u662f\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u7684\n\n\u5f53\u7136\uff0c\u53ef\u4ee5\u53c2\u8003\u697c\u4e0bdalao\u4eec\u4e25\u683c\u7684\u8bc1\u660eT\\*(T-1)\u5c31\u662f\u4e0b\u9650\u3002\n\n\u8fd9\u4e2a\u5176\u5b9e\u5728\u8003\u8bd5\u7684\u65f6\u5019\uff0c\u56e0\u4e3aM\u975e\u5e38\u5c0f=100\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u5927\u4e8e10^5\u7684\u6539\u621010^5\u5176\u5b9e\u90fd\u662f\u53ef\u4ee5\u8fc7\u7684\u3002\n\n\u8fd8\u6709\u4e00\u79cd\u60f3\u6cd5\uff0c\u5c31\u662f\u53bb1~10\u7684\u6700\u5c0f\u516c\u500d\u6570\uff0c\u8fd9\u4e2alcm=2520\u4e00\u5b9a\u53ef\u4ee5\u7528S~T\u7684\u4e00\u79cd\u9009\u6cd5\u8df3\u8fc7\u53bb\uff0c\n\n\u6240\u4ee5\u8fd9\u4e2a\u538b\u7f29\u8fd8\u662f\u4e0d\u96be\u7684\u3002\n\n\u8fd9\u662f\u51e0\u4e2a\u5c0f\u6280\u5de7\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint L,S,T,M;\nconst int N=110;\nint a[N],b[N*N*10],f[N*N*10];\nint main(){\n    scanf(\"%d%d%d%d\",&L,&S,&T,&M);\n    for (int i=1;i<=M;i++)\n        scanf(\"%d\",&a[i]);\n    sort(a+1,a+M+1);\n    if (S==T){\n        int ans=0;\n        for (int i=1;i<=M;i++)\n            if (a[i]%S==0)ans++;\n        printf(\"%d\",ans);\n        return 0;\n    }\n    int last=0;\n    for (int i=1;i<=M;i++){\n        int tmp=a[i];\n        if (a[i]-last>=90)a[i]=a[i-1]+90;\n            else a[i]=a[i-1]+a[i]-last;\n        last=tmp;\n        b[a[i]]=1;\n    }\n    memset(f,0x3f,sizeof(f));\n    f[0]=0;\n    for (int i=S;i<=a[M]+T;i++)\n        for (int j=i-T;j<=i-S;j++)\n            if (j>=0)f[i]=min(f[i],f[j]+b[i]);\n    int ans=0x3f3f3f3f;\n    for (int i=a[M];i<=a[M]+T;i++)\n        ans=min(ans,f[i]);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1504272258,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u5148\u60f3\u4e00\u4e0b\u601d\u8def\uff0c\u7531\u4e8e\u662f\u533a\u95f4\u8df3\u8dc3\uff0c\u4e0d\u80fd\u7528\u8d2a\u5fc3\uff0cdp\u8868\u793a\u72b6\u6001\uff0c\u90a3\u4e48f[i]\u8868\u793a\u8df3\u5230i\u65f6\u6700\u5c11\u8e29\u5230\u7684\u77f3\u5b50\u6570\uff0ci\u53ea\u80fd\u7531i-t~i-s\u8f6c\u79fb\u8fc7\u6765\uff0c\u6240\u4ee5\u9009\u62e9\u5176\u4e2d\u7684\u6700\u5c0f\u503c\u8df3\uff0c\u4fdd\u8bc1f[i]\u6700\u5c0f\u3002\n\n\u4f46\u662fl\u592a\u5927\u4e86\uff0c1e9\uff0c\u4f46\u662fm\u548ct\u5f88\u5c0f\uff0c\u5c31\u662f1e9\u4e2d\u6709\u5f88\u591a\u6ca1\u6709\u7528\u7684\u7a7a\u95f4\uff0c\u6211\u4eec\u6c42\u7ec8\u70b9\u7684\u503c\uff0c\u6240\u4ee5\u4e2d\u95f4\u5e9f\u6389\u7684\u7a7a\u95f4\u53ef\u4ee5\u7701\u7565\uff0c\u538b\u7f29\u4e00\u4e0b\u7a7a\u95f4\u4e4b\u540e\u7528\u8fd8\u80fd\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u4e00\u4e0b\u3002\n\n\u6ca1\u6709\u4eba\u7528\u5355\u8c03\u961f\u5217\uff0c\u52a0\u5165\u5355\u8c03\u961f\u5217\u53ef\u4ee5\u5904\u74061000\u4ee5\u4e0a\u7684t\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<iomanip>\n#include<algorithm>\nusing namespace std;\nint r,s,t,m,a[10001],b[101],maxx,f[10001],cha[102],q[100001],head=1,tail=0;\nint cmp(int x,int y)\n{\n    return x<y;\n}\nint main()\n{\n    cin>>r>>s>>t>>m;\n    for(int i=1;i<=m;++i)\n    cin>>a[i];\n    if(s==t)\n    {\n        int ans=0;\n        for(int i=1;i<=m;++i)\n        if(a[i]%s==0) ans++;\n        cout<<ans;\n        return 0;\n    }\n    sort(a+1,a+m+1,cmp);\n    for(int i=1;i<=m;++i)\n    {\n        cha[i]=a[i]-a[i-1];\n        if(cha[i]>90) cha[i]=90;\n    }cha[m+1]=min(r-a[m],100);\n    memset(a,0,sizeof(a));int l=0;\n    for(int i=1;i<=m;++i)\n    {\n        l+=cha[i];\n        a[l]=1;\n    }\n    l+=cha[m+1];\n    for(int i=0;i<=l+10;++i)\n    f[i]=99999;\n    f[0]=0;int cnt=1;\n    for(int i=1;i<l+10;++i)\n     {\n         if(q[head]<i-t&&head<=tail) head++;\n         while(f[i-s]<=f[q[tail]]&&head<=tail) tail--;\n         if(i-s>=0)q[++tail]=i-s;\n         f[i]=f[q[head]]+a[i];\n         if(i-s<0) f[i]=999999;\n     }int ans=999999;\n    for(int i=l;i<l+10;++i)\n    if(f[i]<ans) ans=f[i];\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1504249828,
        "uid": 43140,
        "name": "zhaoyifan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u6211\u4eec\u7528f[i]\u8868\u793a\u5230\u7b2ci\u4e2a\u4f4d\u7f6e\u65f6\uff0c\u6700\u5c11\u8e29\u5230\u7684\u77f3\u5934\u6570\uff0cfalg[i]\u8868\u793a\u7b2ci\u4e2a\u4f4d\u7f6e\u6709\u6ca1\u6709\u77f3\u5934\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u5f71\u54cd\u5230\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u5c31\u662fi-s\u5230i-t;\n\n\u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n  f[i]=min(f[i\u2212j]+flag[i]\u2223s<=j<=t)\n\n\u4f46\u662f\u770b\u4e0b\u8303\u56f4\uff1a\n\n  1 <= L <= 10^9,1 <= S <= T <= 10\uff0c1 <= M <= 100\n\n10^9\u663e\u7136\u4f1a\u8d85\u51fa\u7a7a\u95f4\uff0c\u4f46\u662f\u53e6\u5916\u4e09\u4e2aS\uff0cT\uff0cM\u90fd\u5f88\u5c0f\u3002\n\n\u4ed4\u7ec6\u601d\u8003\u4fbf\u53ef\u4ee5\u53d1\u73b0\uff0c\u56e0\u4e3ai\u70b9\u7684\u503c\u4f1a\u5f71\u54cd\u5230i+s\u81f3i+t\uff0ci+s\u81f3i+t\u4f1a\u5f71\u54cd\u5230i+2s\u5230i+2t\uff0ci+2s\u5230i+2t\u4f1a\u5f71\u54cd\u5230i+3s\u5230i+3t...\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5f53(k-1)\u5c0f\u4e8e\u7b49\u4e8ekt\u65f6\uff0c\u524d\u540e\u4e24\u6bb5\u8303\u56f4\u91cd\u53e0\uff0c\u6240\u4ee5\u4f1a\u8d8b\u4e8e\u7a33\u5b9a\uff0c\u800cK\uff0cS\u7684\u6700\u5c0f\u516c\u500d\u6570\u4e3a90,\u6240\u4ee5\u5f53\u4e24\u4e2a\u77f3\u5934\u4e4b\u95f4\u8ddd\u79bb\u8d85\u51fa90\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u538b\u7f29\u4e3a90\uff0890\u4ee5\u540e\u7684f\u503c\u4e0e90\u76f8\u540c\uff09\uff0c\u8fd9\u65f6\u6570\u7ec4\u5927\u6982\u5c31\u53ea\u670990\u00d7100=9000\u4e86\u3002\n\n\u6ce8\u610f\uff1a\u56e0\u4e3a\u9752\u86d9\u7684\u6700\u540e\u4e00\u8df3\u4e0d\u4e00\u5b9a\u6b63\u597d\u843d\u5728\u7ec8\u70b9\uff0c\u6709\u53ef\u80fd\u8d85\u51fa\u7ec8\u70b9\uff0c\u6240\u4ee5\u7b54\u6848\u662f\u7ec8\u70b9\u5230\u7ec8\u70b9+t-1\u4e2d\u95f4\u7684\u6700\u5c0f\u503c\u3002\n\n\u6700\u540e\u662f\u4e00\u4efd\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool cl[10020];\nint main()\n{\n    int f[10020],p=0,s,t,l,n,k,a[10020],len[10020],i,ans=0;\n    scanf(\"%d%d%d%d\",&l,&s,&t,&n);\n    for(i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    sort(a+1,a+1+n);\n    if(s==t)\n      {\n    for(i=1;i<=n;i++)\n            if(a[i]%t==0) ans++;\n                 else continue;\n    cout<<ans;\n      }\n       else\n         {\n       p=min(a[1],90);\n       len[1]=p;\n       cl[p]=1;\n       for(i=2;i<=n;i++)\n        { \n        k=min(a[i]-a[i-1],90);      \n              p+=k;\n          cl[p]=1;\n          len[i]=p;\n             }\n       p+=min(l-a[n],90);\n       for(i=1;i<=p+9;i++)\n           {\n             f[i]=3000000;\n              for(int j=s;j<=t;j++)\n              if(i-j>=0) f[i]=min(f[i],f[i-j]+cl[i]);\n             }\n         ans=9000000;\n       for(i=p;i<=p+9;i++)\n           ans=min(ans,f[i]);\n           cout<<ans;\n     }\n           return  0; \n}\n```",
        "postTime": 1504099248,
        "uid": 26317,
        "name": "_Lemon_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u76f4\u63a5\u8f93\u51faf[L]\u4e0d\u80fd\u4fdd\u8bc1\u662f\u6b63\u786e\u7b54\u6848\uff0c\u4f46\u662f\u53ef\u4ee5\u8fc7\u6570\u636e\u2026\u2026\u8bf7\u770b\u8fd9\u4e2a\uff1a\n\n4\n2 3 1\n2\n```cpp\n\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint l,s,t,m,a[100],ans,f[10000],i,j,tt;\nchar st[10000];\nint main()\n{\n    for(cin>>l>>s>>t>>m;i<m;i++)cin>>a[i];\n    if(s==t){for(i=0;i<m;i++)if(!(a[i]%s))ans++;cout<<ans;return 0;}\n    sort(a,a+m);\n    for(st[tt=*a%90]=i=1;i<m;i++)st[tt+=(a[i]-a[i-1])%90]=1;\n    l=tt+(l-a[m-1])%90;\n    for(i=s;i<=t;i++)f[i]=st[i];\n    for(i=t+1;i<=l+t-1;i++)f[i]=200;\n    for(i=s*2;i<=l+t-1;i++){\n        for(j=i-s;j>=i-t&&j>=s;j--)\n            if(f[j]<f[i])f[i]=f[j];\n        f[i]+=st[i];\n    }\n    for(ans=f[l],i=l+1;i<=l+t-1;i++)if(f[i]<ans)ans=f[i];\n    cout<<ans;\n    \n    return 0;\n}\n\nf[L]=1\uff0c\u800c\u6b63\u786e\u7b54\u6848\u4e3a0\u3002\n\n```",
        "postTime": 1443517418,
        "uid": 7487,
        "name": "plazum",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u4e00\u3001DP\u6c42\u89e3 \uff1a\u82e5s==t,\u6bcf\u6b21\u8df3\u53ea\u6709\u5355\u4e2a\u51b3\u7b56\uff0c\u76f4\u63a5\u679a\u4e3e\u6240\u6709\u77f3\u5b50\u4f4d\u7f6e\uff0c\u662ft\u7684\u500d\u6570\u5219ans++\uff1b\n\n F[i]\u8868\u793a\u8df3\u5230\u7b2ci\u6b65\u7684\u6700\u5c0f\u77f3\u5b50\u6570\uff0cF[i]=F[i]+min{F[j] | j=i-T...i-S \u4e14j>=0}(\u82e5F[i]\u521d\u59cb\u5316\u4e3a1\u8868\u793a\u4f4d\u7f6ei\u6709\u4e00\u4e2a\u77f3\u5b50)\u3002 \u8bbe\u7ec8\u70b9\u4e3adis\uff0c\u5219\u843d\u70b9\u53ef\u80fd\u4e3adis....dis+T-1\uff0cans=min{F[i]|i=dis...dis+T-1}\n\u4e8c\u3001\u72b6\u6001\u538b\u7f29\uff1a\u7531\u4e8e\u72b6\u6001\u6709\u4e00\u4ebf\u4e2a\uff0c\u800c\u77f3\u5b50\u53ea\u6709100\u4e2a\uff0c\u4ece\u7b2ci\u4e2a\u77f3\u5b50\u8df3\u5230\u7b2ci+1\u4e2a\u77f3\u5b50\u4f1a\u7ecf\u8fc7\u5927\u91cf\u6ca1\u6709\u77f3\u5b50\u7684\u8def\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e00\u5927\u6bb5\u8def\u53bb\u6389\u3002\n\nstone[i]\u4e3a\u7b2ci\u4e2a\u77f3\u5b50\u4f4d\u7f6e(\u5347\u5e8f)\uff0cpos[i]=1\u62160\u8868\u793a\u538b\u7f29\u540e\u4f4d\u7f6ei\u6709\u4e00\u4e2a\u77f3\u5b50\u3002\n\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\nint s,t,m,stone[101],F[2000],pos[2000],i,j,ans,dis,delta;\nint cmp(const void *a,const void *b){return *(int*)a-*(int*)b;}\nint main(void)\n{\n    scanf(\"%d%d%d%d\",&dis,&s,&t,&m);\n    for(i=1;i<=m;i++)scanf(\"%d\",&stone[i]);\n    if(s==t)//\u53ea\u6709\u5355\u4e2a\u51b3\u7b56\u7684\u60c5\u51b5 \n    {\n        for(i=1;i<=m;i++) if(stone[i]%t==0) ans++;\n        printf(\"%d\",ans);    return 0;\n    }\n    qsort(&stone[1],m,sizeof(stone[0]),cmp);\n    for(i=1;i<=m;i++)//\u72b6\u6001\u538b\u7f29 \n    {\n        if(stone[i]-stone[i-1]>t) //\u5982s==3,t==4,\u538b\u7f29\u524dstone={1,10,11,12} \n            delta+=stone[i]-stone[i-1]-t; //delta\u8bb0\u5f55\u538b\u7f29\u8981\u6d88\u9664\u7684\u7a7a\u95f4\u5927\u5c0f\n        pos[stone[i]-delta]=1;//\u538b\u7f29\u540e\u76f8\u5f53\u4e8estone={1,10-5,11-5,12-5}\uff0c\u7528pos\u8bb0\u5f55\u8fd9\u56db\u4e2a\u4f4d\u7f6e\u6709\u65e0\u77f3\u5b50\u3002\n    }\n    dis=stone[m]-delta;//\u7ec8\u70b9\u66f4\u6362\u6210\u538b\u7f29\u540e\u6700\u540e\u4e00\u4e2a\u77f3\u5b50\u7684\u4f4d\u7f6e\n    for(i=1;i<dis+t;i++) //\u666e\u901aDP \n    {\n        F[i]=999999;\n        for(j=i-s;j>=i-t&&j>=0;j--)\n            if(F[j]<F[i]) F[i]=F[j];\n        F[i]+=pos[i];//\u4f4d\u7f6ei\u6709\u77f3\u5b50\u5219F[i]++\n    }\n    for(i=dis,ans=999999;i<dis+t;i++) //\u9009\u53d6\u6700\u4f73\u843d\u70b9 \n        if(ans>F[i]) ans=F[i];\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1439288760,
        "uid": 4693,
        "name": "CoolTeam",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u672c\u9898\u4e2d\uff0cL<=10^9; M<=100\uff0c\u8fd9\u662f\u4e00\u4e2a\u957f\u5ea6\u5f88\u957f\u4f46\u70b9\u5f88\u7a00\u758f\u7684\u7ebf\u6bb5\uff0c\u6240\u4ee5\u8003\u8651\u72b6\u6001\u538b\u7f29\u3002\n\n\u538b\u7f29\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\u82e5s!=t,\u5219\u5bf9\u77f3\u5934\u6392\u5e8f\u540e\u628a\u4e24\u4e2a\u77f3\u5934\u4e4b\u95f4\u8ddd\u79bb\u5927\u4e8et\u7684\u6539\u6210t\u5373\u53ef\uff08\u53ef\u4ee5\u8bc1\u660e\u901a\u8fc7\u6539\u53d8x\u4e0ex+1\u7684\u7ec4\u5408\u80fd\u4f7f\u4e24\u70b9\u95f4\u8ddd\u79bb\u6539\u53d81\u4ece\u800c\u8fbe\u5230\u76ee\u7684\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\n\n\n\n\n\n\n              \n```cpp\n#include <iostream>\n#include <stdio.h>\nusing namespace std;\nint a[101],b[1000001],f[1000001];\nint i,j,k,l,m,n,p,q,s,t,x,y,z,ans;\nint main()\n{\n     scanf(\"%d\",&l);\n     scanf(\"%d%d%d\",&s,&t,&n);\n     for (i=1; i<=n; i++) scanf(\"%d\",&a[i]);\n     sort(a+1,a+n+1);\n     ans=0;\n     if (s==t)\n     {\n              for (i=1; i<=n; i++)\n              {\n                  if (a[i]%s==0) ans++;\n              }\n              cout<<ans<<endl;\n              system(\"pause\");\n              return 0;\n     }\n     for (i=1; i<=n; i++)\n     {\n         x=a[i]-a[i-1]-t;\n         if (x>0)\n         {\n                 for (j=i; j<=n; j++) a[j]-=x;\n         }\n     }\n     for (i=1; i<=n; i++) b[a[i]]=1;\n     l=a[n]+t;\n     memset(f,100,sizeof(f));\n     f[s]=b[s];\n     for (i=s; i<=l; i++)\n     {\n         for (j=s; j<=t; j++) f[i]=min(f[i],f[i-j]);\n         f[i]+=b[i];\n     }\n     cout<<f[l]<<endl;\n     system(\"pause\");\n     return 0;\n}\n\n```",
        "postTime": 1375186845,
        "uid": 184,
        "name": "shutdown",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u6b64\u9898\u96be\u70b9\u5728\u4e8e\u72b6\u6001\u538b\u7f29\n\n\n\u547d\u9898\uff1a\u5bf9\u4e8e\u6b65\u5e45s\u5230t\u82e5\u76ee\u6807\u4f4d\u7f6e\u8ddd\u8d77\u59cb\u70b9\u8ddd\u79bbD\u2265s\uff08s-1\uff09\u5219\u4e00\u5b9a\u53ef\u4ee5\u5230\u8fbe\u76ee\u6807\u70b9\n\n\n\u8bc1\u660e\uff1a\n\n\n\u8bbe\u4e00\u6b21\u53ef\u4ee5\u8d70p\u6b65\u6216p+1\u6b65\n\n\n\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u53d6\u8d77\u59cb\u4f4d\u7f6e\u4e3a\u5750\u68070\u70b9\n\n\n\u90a3\u4e48p\uff08p-1\uff09\u70b9\u4e00\u5b9a\u53ef\u4ee5\u8fbe\u5230\uff08\u6bcf\u6b21\u8d70p\u7684\u8ddd\u79bb\uff0c\u8d70p-1\u6b21\uff09\n\n\n\u56e0\u4e3a\u6211\u4eec\u4e5f\u53ef\u4ee5\u6bcf\u6b21\u8d70p+1\u6b65\n\n\n\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u5c06\u4e00\u6b21p\u8ddd\u79bb\u7684\u884c\u8d70\u66ff\u6362\u4e3ap+1\u8ddd\u79bb\u7684\u884c\u8d70\u6765\u5b9e\u73b0\u603b\u8ddd\u79bb+1\n\n\n\u73b0\u5728\u6211\u4eec\u4ece\uff08p-1\uff09\u00d7p\u4f4d\u7f6e\u5f00\u59cb\u9010\u4e00\u63a8\u7b97\u53ef\u884c\u6027\n\n\n\n\n\n(p-1)p+1=(p-2)p+(p+1)\n\n(p-1)p+2=(p-3)p+2(p+1)\n\n(p-1)p+3=(p-4)p+3(p+1)\n\n\u2026\u2026\n\n\n(p-1)p+(p-1)=(p-p)p+(p-1)(p+1)\n\n\u6211\u4eec\u5df2\u7ecf\u7528\u5149\u4e86\u6240\u6709\u53ef\u4ee5\u66ff\u6362\u7684p\u8ddd\u79bb\u884c\u8d70\u3002\n\n\n\u6700\u540e\u6574\u7406\u5f97p\u00d7p\n\n\n\u53ea\u9700\u8981\u8fdb\u884cp\u6b21p\u8ddd\u79bb\u7684\u884c\u8d70\u5c31\u53ef\u4ee5\u5230\u8fbe\u76ee\u6807\n\n\n\u6211\u4eec\u901a\u8fc7\u7528p+1\u4ee3\u6362p\u7684\u65b9\u6cd5\u524d\u8fdbp-1\u6b65\n\n\n\u5728\u524d\u8fdb\u7b2cp\u6b65\u65f6\u91cd\u65b0\u6574\u5408\u6210\u5173\u4e8ep\u7684\u591a\u9879\u5f0f\uff08\u4e00\u5b9a\u662fp\u7684\u500d\u6570\uff09\u5982\u6b64\u5f80\u590d\u3002\n\n\n\u800c\u6211\u4eec\u8981\u524d\u8fdbp-1\u6b65\u81f3\u5c11\u9700\u8981p-1\u4e2ap\u3002\u6240\u4ee5\u4e0b\u9650\u4e3ap\u00d7\uff08p-1\uff09\n\n\n\ns(s-1)=90\u5373\u4e3a\u5220\u9664\u4e0b\u7ebf\u3002\n\n\u6211\u8fd9\u91cc\u53d6100\u4f5c\u4e3a\u8ddd\u79bb\uff0c\u5373\u4e24\u77f3\u5934\u95f4\u8ddd\u79bb\u5927\u4e8e100\u7684\u90fd\u6539\u4e3a100\n\n\n\u5219\u6211\u4eec\u5b9e\u9645\u5904\u7406\u7684L\u2264100m=10000.\n\n\n\u72b6\u6001\u538b\u7f29\u641e\u5b9a\u4e86\u4ee5\u540e\uff0c\u5c31\u662f\u7b80\u5355\u7684\u7ebf\u6027\u52a8\u89c4\uff08\u7565\uff09\u3002\n\n\n\u8d34\u4e2a\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath> \nusing namespace std;\nint a[20001]={},b[20001]={},c[20001]={},f[20001]={};\nint main()\n{\n    int l,s,t,m,ans=0;\n    scanf(\"%d%d%d%d\",&l,&s,&t,&m);\n    for (int i=1;i<=m;i++) scanf(\"%d\",&a[i]);\n    if (s==t)\n    {\n             for (int i=1;i<=m;i++) ans+=!(a[i]%s);\n             cout << ans ;\n             return 0; \n    }\n    sort(a+1,a+m+1);\n    for (int i=1;i<=m;i++)\n     if (a[i]-a[i-1]>=100) b[i]=b[i-1]+100;\n     else b[i]=b[i-1]+a[i]-a[i-1];\n    for (int i=1;i<=m;i++) c[b[i]]=1;\n    for (int i=1;i<s;i++) f[i]=10000;\n    for (int i=s;i<=b[m]+t;i++)\n    {\n        int k=10000;\n        for (int j=i-s;j>=i-t;j--)\n         if (j>=0 && f[j]<k) k=f[j];\n        f[i]=c[i]+k; \n    }\n    ans=10000;\n    for (int i=b[m];i<=b[m]+t;i++) ans=min(ans,f[i]);\n    cout << ans << endl ;\n    return 0 ;\n}\n\n```",
        "postTime": 1372130244,
        "uid": 192,
        "name": "VengefulSpirit",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "## \u786e\u5b9a\u7b97\u6cd5\n    \u6bcb\u5eb8\u7f6e\u7591\uff0c\u8fd9\u662f\u4e00\u9053dp\uff0c\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u6bd4\u8f83\u597d\u4e9b \uff08\u867d\u7136\u6211\u4e5f\u60f3\u4e86\u4e0d\u5c11\u65f6\u95f4\n    dp[i] \u2014\u2014 \u5230\u4f4d\u7f6ei\u6700\u5c11\u8e29\u5230\u7684\u77f3\u5b50\u6570\u3002\n    \u8f6c\u79fb\u65b9\u7a0b \u2014\u2014 if(i-j>=0) dp[i]=min(dp[i],dp[i-j]) (0<=i<=l+t, s<=j<=t)\n\n\u5c31\u8fd9\u4e48\u7b80\u5355\uff1f\u8fd9\u5c31\u80fd\u6109\u5feb\u7684\u63d0\u4ea4\u4e86\uff1f\n\n\u4f60\u89c9\u5f97\u51fa\u9898\u4eba\u8fd9\u4e48\u50bb\u5417\u3002\u3002\u3002\n\n\u8bf7\u6ce8\u610f\uff1a1\u2264L\u226410^9\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u8981\uff1a\n\n _~~\uff08\u653e\u5f03\u8fd9\u4e00\u9898\uff01\uff01\uff01\uff09~~_ \n\n## \u72b6\u6001\u538b\u7f29\n\n    \u867d\u7136L\u5230\u4e8610^9\uff0c\u4f46\u662f\u77f3\u5b50\u5c11\u554a\uff0c\u53ea\u5230100\uff0c\u6240\u4ee5\u8bf4\u5728\u6b64\u4e4b\u95f4\u4f1a\u6709\u5f88\u591a\u7a7a\u6321\uff0c\u4f1a\u9020\u6210\u5f88\u591a\u5197\u6742\u7684\u72b6\u6001\u3002\n    \u6240\u4ee5\u8bf4\u5462\uff0c\u6211\u4eec\u8981\u628a\u4e2d\u95f4\u7a7a\u7740\u7684\u72b6\u6001\u8fdb\u884c\u538b\u7f29\u3002\n    \u600e\u4e48\u538b\u7f29\u5462\uff1f\u9996\u5148\uff0c1\u2264S\u2264T\u226410\u3002\u90a3\u6211\u4eec\u628a\u77f3\u5b50\u4e4b\u95f4\u7684\u7a7a\u9699 % lcd(1,2,3,4,5,6,7,8,9,10)\uff0c\u4e5f\u5c31\u662f % 2520\u3002\n    \u4e3a\u5565\u8fd9\u6837\u505a\uff1f\u65e0\u8bba\u9752\u86d9\u80fd\u8df3\u591a\u5c11\uff0c\u4ed6\u4e00\u5b9a\u80fd\u5230\u8fbe2520\u5904\uff0c\u5982\u679c2520\u6ca1\u6709\u77f3\u5934\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u538b\u7f29\u4e00\u4e0b\u3002\n\nok\uff0c\u8fd9\u6837\u5c31\u80fd\u63d0\u4ea4\u4e86\uff0c\u4e0a\u4e00\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <cerrno>\n#include <clocale>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <limits>\n#include <list>\n#include <map>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <utility>\n#include <vector>\n#include <cwchar>\n#include <cwctype>\n//#pragma GCC target(\"avx\")\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC optimize(\"inline\")\n//#pragma GCC optimize(\"-fgcse\")\n//#pragma GCC optimize(\"-fgcse-lm\")\n//#pragma GCC optimize(\"-fipa-sra\")\n//#pragma GCC optimize(\"-ftree-pre\")\n//#pragma GCC optimize(\"-ftree-vrp\")\n//#pragma GCC optimize(\"-fpeephole2\")\n//#pragma GCC optimize(\"-ffast-math\")\n//#pragma GCC optimize(\"-fsched-spec\")\n//#pragma GCC optimize(\"unroll-loops\")\n//#pragma GCC optimize(\"-falign-jumps\")\n//#pragma GCC optimize(\"-falign-loops\")\n//#pragma GCC optimize(\"-falign-labels\")\n//#pragma GCC optimize(\"-fdevirtualize\")\n//#pragma GCC optimize(\"-fcaller-saves\")\n//#pragma GCC optimize(\"-fcrossjumping\")\n//#pragma GCC optimize(\"-fthread-jumps\")\n//#pragma GCC optimize(\"-funroll-loops\")\n//#pragma GCC optimize(\"-fwhole-program\")\n//#pragma GCC optimize(\"-freorder-blocks\")\n//#pragma GCC optimize(\"-fschedule-insns\")\n//#pragma GCC optimize(\"inline-functions\")\n//#pragma GCC optimize(\"-ftree-tail-merge\")\n//#pragma GCC optimize(\"-fschedule-insns2\")\n//#pragma GCC optimize(\"-fstrict-aliasing\")\n//#pragma GCC optimize(\"-fstrict-overflow\")\n//#pragma GCC optimize(\"-falign-functions\")\n//#pragma GCC optimize(\"-fcse-skip-blocks\")\n//#pragma GCC optimize(\"-fcse-follow-jumps\")\n//#pragma GCC optimize(\"-fsched-interblock\")\n//#pragma GCC optimize(\"-fpartial-inlining\")\n//#pragma GCC optimize(\"no-stack-protector\")\n//#pragma GCC optimize(\"-freorder-functions\")\n//#pragma GCC optimize(\"-findirect-inlining\")\n//#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n//#pragma GCC optimize(\"-frerun-cse-after-loop\")\n//#pragma GCC optimize(\"inline-small-functions\")\n//#pragma GCC optimize(\"-finline-small-functions\")\n//#pragma GCC optimize(\"-ftree-switch-conversion\")\n//#pragma GCC optimize(\"-foptimize-sibling-calls\")\n//#pragma GCC optimize(\"-fexpensive-optimizations\")\n//#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n//#pragma GCC optimize(\"inline-functions-called-once\")\n//#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n//#pragma GCC optimize(4)\nusing namespace std;\nint a[110],d[110],r[300010],dp[300010];\nint main() {\n\tint l,s,t,m,ans;\n\tcin>>l>>s>>t>>m;\n\tfor(int i=1;i<=m;i++) cin>>a[i];\n\tsort(a+1,a+1+m);\n\tfor(int i=1;i<=m;i++)\n\t\td[i]=(a[i]-a[i-1])%2520,a[i]=a[i-1]+d[i],r[a[i]]=1;\n\tl=a[m];\n\tfor(int i=0;i<=l+t;i++) dp[i]=m;\n\tdp[0]=0;\n\tfor(int i=1;i<=l+t;i++)\n\t\tfor(int j=s;j<=t;j++) {\n\t\t\tif(i-j>=0) dp[i]=min(dp[i],dp[i-j]);\n\t\t\tdp[i]+=r[i];\n\t\t}\n\tans=m;\n\tfor(int i=l;i<l+t;i++) ans=min(ans,dp[i]);\n\tcout<<ans<<endl;\n    return 0;\n}\n```\n\n\u6ce8\u610f\uff0c\u5ffd\u7565\u5934\u6587\u4ef6\u3002\u3002\u3002",
        "postTime": 1543325706,
        "uid": 43640,
        "name": "t14Zack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u52a8\u5f52\u601d\u8def\u975e\u5e38\u7b80\u5355,\u5c31\u662f\u4ece\u524d\u72b6\u6001\u63a8\u51fa\u6765.\n\n\u5c31\u662f\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u8fd8\u6709\u8fd9\u4e2a\u77f3\u5b50\u7a00\u758f\u7684\u8981\u547d~\n\n\u6240\u4ee5\u5fc5\u987b\u6c42\u4f59\u53bb\u91cd,\u7f29\u77ed\u8ddd\u79bb\n\n\u4ee3\u7801\u5982\u4e0b:\u6ca1\u6709tight 30\u5206\n\n\u6709tight   AC\n\n```cpp\n/**\nluogu P1052\n*/\n\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cstdlib>\n\n#include <string>\n#include <cstring>\n#include <cmath>\n#include <cctype>\n\n#include <algorithm>\n#include <queue>\n#include <stack>\n\nusing namespace std;\n\n#define INF 0x3f3f3f3f\n#define DBG //while(0)\nint L,S,T,M,ans=INF;\nint dp[1000010];\n\nint sto[110];\nvoid tight()\n{\n    for(int i=0;i<=M-1;i++)\n    {\n        int s=sto[i];\n        int t=sto[i+1];\n        if((t-s-2*T)/T>=1)\n        {\n            int del=(t-s-2*T)/T*T;\n            L-=del;\n            for(int j=i+1;j<=M;j++)\n                sto[j]-=del;\n        }\n    }\n    int stoMax=sto[M];\n    int del=(L-stoMax-2*T)/T*T;\n    L-=del;\n}\nint main()\n{\n    std::ios::sync_with_stdio(false);\n    memset(dp,0x3f,sizeof(dp));\n    cin>>L>>S>>T>>M;\n    for(int i=1; i<=M; i++)\n        cin>>sto[i];\n    sort(sto+1,sto+M+1);\n    dp[0]=0;\n    tight();\n    for(int i=1; i<=M; i++)\n        dp[sto[i]]+=1;\n    for(int i=1; i<=L; i++)\n    {\n        bool b=(dp[i]==INF+1);\n        for(int j=i-S; j>=0&&j>=i-T; j--)\n            dp[i]=min(dp[i],dp[j]);\n        dp[i]+=b;\n    }\n    for(int i=L; i>=L-S; i--)\n        ans=min(ans,dp[i]);\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1490356315,
        "uid": 20565,
        "name": "wzj423",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u9996\u5148\u5462\uff0c\u5982\u679c\u6570\u636e\u6ca1\u90a3\u4e48\u5927\uff0c\u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684dp\uff0c\u53ef\u662f\u5b9e\u9645\u4e0a10^9\u6b21\u65b9\u786e\u5b9e\u5f88\u5927\uff0c\u4e8e\u662f\u89c2\u5bdf\u5176\u4ed6\u6570\u636e\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u77f3\u5b50\u6570\u5f88\u5c11\uff0c\n\n\n\u53ea\u6709100\uff0c\u90a3\u4e48\u77f3\u5b50\u4e0e\u77f3\u5b50\u4e4b\u95f4\u5c31\u4f1a\u6709\u5f88\u5927\u7684\u7a7a\u767d\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u6bb5\u7a7a\u767d\u7b49\u6548\u4e8e\u4e00\u6bb5\u5f88\u5c0f\u7684\u7a7a\u767d\uff0c\u5b9e\u9645\u4e0a\u7531\u4e8e\u8df3\u7684\u8303\u56f4\u662f1-10\uff0c\u90a3\u4e48\u6700\u591a\uff0c\u53ef\u4ee5\u752810\\*\uff0810-1\uff09\u6765\u4ee3\u66ff\n\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u6211\u4e0d\u60f3\u8bc1\u5566\u3002\n\n\n\u7136\u540e\uff0c\u5c31\u6ca1\u6709\u7136\u540e\u5462\u3002\n\nhttp://www.cnblogs.com/Ateisti/p/5631179.html\n",
        "postTime": 1467290611,
        "uid": 18819,
        "name": "Jellyfool",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    },
    {
        "content": "\u5176\u5b9e\u4e00\u5f00\u59cb\u5e76\u4e0d\u77e5\u9053\u957f\u5ea6\u53ef\u4ee5\u538b\u7f29\uff0c\u6240\u4ee510^9\u7684DP\u4f1a\u8d85\u65f6\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u4f46\u662f\u6559\u7ec3\u8bc1\u660e\u4e86\u4e00\u904d\uff0c\u5177\u4f53\u600e\u4e48\u8bc1\u660e\u770b\u697c\u4e0b\u7684\u89e3\u91ca\u3002\n\n\n```cpp\n\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint L,s,t,n,ans;\nint f[10001],stone[10001],road[120],mark[120];\n\nvoid solve(){\n    memset(stone,0,sizeof(stone));\n    mark[0]=0;\n    for(int i=1;i<=n;i++){\n        road[i]=mark[i]-mark[i-1];//\u72b6\u6001\u538b\u7f29\uff0c\u53ef\u4ee5\u8bc1\u660e\uff0c\u5f53\u4e24\u9897\u77f3\u5b50\u4e4b\u95f4\u7684\u8ddd\u79bb\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u662f\u53ef\u4ee5\u7f29\u77ed\u4ed6\u4eec\u4e4b\u95f4\u8ddd\u79bb\u7684\u3002\u6700\u5dee\u662f90\u5de6\u53f3\uff0c\u65b9\u4fbf\u8d77\u89c1\u4e0d\u6839\u636es\u548ct\u6765\u7b97\uff0c\u76f4\u63a5\u53d6\u6700\u5dee\u503c\u3002\u8981\u9501\u540e\u957f\u5ea6\u6700\u957f\u4e3a9000\uff1b\n        if(road[i]>90) road[i]=90;\n    }\n    road[n+1]=min(L-mark[n],100);//\u52a0\u4e0a\u6700\u540e\u4e00\u9897\u77f3\u5b50\u548c\u7ec8\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\n    L=0;\n    for(int i=1;i<=n;i++){\n        L+=road[i];\n        stone[L]=1;//\u6807\u8bb0\u54ea\u4e9b\u5730\u65b9\u6709\u77f3\u5b50\u3002\n    }\n    L+=road[n+1];\n    for(int i=1;i<L+10;i++){//\u7531\u4e8e\u8d77\u54c7\u6700\u8fdc\u53ef\u4ee5\u5230\u8fbeL+9\uff0c\u90a3\u4e48\uff0c\u4e5f\u9700\u8981\u5728DP\u662f\u8003\u8651\u5230\u3002\n        f[i]=1000;\n        for(int j=s;j<=t;j++)\n            if(i>=j) f[i]=min(f[i],f[i-j]+stone[i]);//f[i]=min{f[i-j]+stone[I],f[I]};\u679a\u4e3e\u9752\u86d9\u5230\u8fbe\u8fd9\u91cc\u8d70\u7684\u6b65\u6570\uff0c\u5728\u5bf9\u5e94\u7684\u60c5\u51b5\u7684\u6700\u4f18\u503c\u4e2d\u53d6\u6700\u4f18\u503c\u3002\n    }\n    ans=10000;\n    for(int i=L;i<L+10;i++)\n        ans=min(ans,f[i]);\n    cout<<ans;\n    \n    return;\n}\n\nint main(){\n    \n    cin>>L>>s>>t>>n;\n    for(int i=1;i<=n;i++)\n        cin>>mark[i];\n    sort(mark+1,mark+n+1);//\u9898\u76ee\u6ca1\u8bf4\u6570\u636e\u5df2\u7ecf\u6392\u597d\u54e6\u3002\n    if(s==t){//\u4e0d\u8981\u5fd8\u8bb0s==t\u65f6\uff0c\u72b6\u6001\u65b9\u7a0b\u4e0d\u5408\u9002\u3002\n        ans=0;\n        for(int i=1;i<=n;i++)\n            if(mark[i]%s==0) ans++;\n        cout<<ans;\n        return 0;\n    }\n    solve();\n\n    return 0;\n}\n```",
        "postTime": 1462674966,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1052 \u3010\u8fc7\u6cb3\u3011"
    }
]