[
    {
        "content": "&emsp;&emsp;[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1607)\n\n&emsp;&emsp;\u5178\u578b\u7684\"\u7ebf\u6bb5\u6811\u53ea\u662f\u5de5\u5177\u4eba\"\u9898\u76ee\n\n&emsp;&emsp;\u5927\u4f6c\u4eec\u7adf\u7136\u90fd\u6ca1\u6709\u600e\u4e48\u8bc1\u660e\u8d2a\u5fc3\uff1f~~\u849f\u84bb\u6c34\u793e\u533a\u5206\u7684\u673a\u4f1a\u5230\u4e86~~\n\n&emsp;&emsp;\u628a $m$ \u4e2a $s$ \u5230 $e$ \u7684\u5976\u725b\u5206\u5f00\u770b\u4f5c $m$ \u4e2a $s$ \u5230 $e$ \u7684\u533a\u95f4\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u8003\u8651\u533a\u95f4\u7684\u4e2a\u6570\u95ee\u9898\u4e86\u3002\n\n&emsp;&emsp;\u8bbe $F_{i,j}$ \u662f\u5730\u70b9 $i...j$ \u6240\u80fd\u9009\u62e9\u7684\u6700\u5927\u533a\u95f4\u6570\u3002\n\n&emsp;&emsp;\u6309\u7167\u533a\u95f4\u8d2a\u5fc3\u7684\u5957\u8def\uff0c\u5148\u8bd5\u8bd5\u53f3\u7aef\u70b9\u6392\u5e8f\u3002\u6211\u4eec\u5047\u8bbe $a_i$ \u662f\u6240\u6709\u5728 $i...j$ \u8fd9\u6bb5\u91cc\u7684\u533a\u95f4\u4e2d\u7ed3\u675f\u6700\u65e9\u7684\u90a3\u4e2a\u3002\u5047\u8bbe\u6700\u4f18\u89e3**\u6ca1\u6709** $a_i$\u3002\u90a3\u4e48\u6211\u4eec\u5bf9\u6700\u4f18\u89e3\u7684\u6240\u6709\u533a\u95f4\u7684 **\u5de6\u7aef\u70b9\u6392\u5e8f**\uff0c\u628a\u6b64\u65f6\u5f00\u59cb\u65f6\u95f4\u6700\u65e9\u7684\u533a\u95f4\u8bb0\u4f5c $a_j$\u3002\n\n- \u5982\u679c$a_i,a_j$ \u4e0d\u4ea4\uff0c\u4e00\u5b9a\u53ef\u4ee5\u9009\u62e9 $a_i$\uff0c\u6b64\u65f6\u4e0d\u662f\u6700\u4f18\u89e3\n\n- \u5982\u679c$a_j$ \u5b8c\u5168\u5305\u542b $a_i$\uff0c\u4f18\u5148\u9009 $a_i$ \u663e\u7136\u53ef\u4ee5\u8ba9\u540e\u9762\u5269\u4e0b\u7684\u8d44\u6e90\u66f4\u591a\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u539f\u6765\u7684\u65b9\u6848\u91cc $e_{a_i}...e_{a_j}$ \u8fd9\u4e00\u6bb5\u7684\u7a7a\u95f4\u6bd4\u4f18\u5148\u9009\u62e9 $a_i$ **\u5c111**\uff0c\u90a3\u4e48\u5fc5\u7136\u89e3\u4e0d\u4f1a\u6bd4\u9009\u62e9 $a_i$ \u66f4\u4f18\u3002\n\n- \u5426\u5219 $s_{a_i} < s_{a_j},e_{a_i} < e_{a_j}$\uff0c\u6b64\u65f6\u9009\u62e9 $a_i$ \uff0c\u90a3\u4e48 $e_{a_i}... e_{a_j}$ \u8fd9\u6bb5\u7a7a\u95f4\u5c31\u4f1a**\u591a1**\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u66f4\u591a\u7684\u5976\u725b\u4e0a\u8f66\uff0c\u5373\u81f3\u5c11\u4e0d\u4f1a\u5f97\u5230\u66f4\u5dee\u89e3\u3002\n\n&emsp;&emsp;\u7efc\u4e0a\uff0c$F_i,j$ \u7684\u6700\u4f18\u89e3\u4e2d\u4e00\u5b9a\u6709\u4e00\u4e2a\u89e3\u662f\u5305\u542b **\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684** \u90a3\u4e2a\u6d3b\u52a8\u7684\u3002\n\n&emsp;&emsp;\u4e0d\u8fc7\u8fd9\u53ea\u662f\u5728\u6700\u521d\u7684\u65f6\u5019\u5982\u6b64\u3002\u8003\u8651\u90a3\u4e2a\u719f\u7684\u4e0d\u80fd\u518d\u719f\u7684\u533a\u95f4\u8c03\u5ea6\u95ee\u9898\uff0c\u6211\u4eec\u4e5f\u4e0d\u662f\u4e00\u9f13\u4f5c\u6c14\u628a\u6392\u5b8c\u5e8f\u4ee5\u540e\u627e\u5230\u6700\u524d\u9762\u7684\u4e00\u53e3\u6c14\u9009\u62e9\uff0c\u800c\u662f\u627e\u5230\u7b2c\u4e00\u4e2a\u548c\u4e0a\u4e00\u4e2a\u9009\u62e9\u517c\u5bb9\u7684\u533a\u95f4\u3002\u8fd9\u9898\u7a0d\u6709\u6539\u52a8\uff0c\u6211\u4eec\u5982\u679c\u8981\u9009\u62e9\u533a\u95f4 $a_i$\uff0c\u90a3\u4e48\u5fc5\u987b\u4fdd\u8bc1 $s_{a_i}...e_{a_i}$ \u8fd9\u4e00\u6bb5\u91cc\u9762\u7684\u4efb\u4f55\u4e00\u4e2a\u65f6\u523b\u503c\u90fd\u662f\u5c0f\u4e8e $c$ \u7684\uff0c\u800c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u6700\u5927\u503c\u5373\u53ef\u3002\n\n&emsp;&emsp;\u6700\u540e\uff0c\u9898\u76ee\u672c\u8eab\u4e00\u4e2a\u533a\u95f4\u91cc\u662f\u6709 $m$ \u5934\u5976\u725b\u7684\uff0c\u901a\u8fc7\u6211\u4eec\u4e0a\u9762\u7684\u63a8\u65ad\uff0c\u5982\u679c\u9009\u4e86\u7b2c $i$ \u4e2a\u533a\u95f4\uff0c\u90a3\u4e48\u5c3d\u53ef\u80fd\u591a\u7684\u5148\u628a\u7b2c $i$ \u4e2a\u533a\u95f4\u7684\u5976\u725b\u9009\u4e0a\uff0c\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c $maxn$\uff0c$\\min(m_i,c-maxn)$ \u5c31\u662f\u5f53\u524d\u9009\u62e9\u80fd\u9009\u62e9\u7684\u4e2a\u6570\u3002\u9009\u62e9\u5b8c\u4e86\u4ee5\u540e\u628a\u533a\u95f4\u6574\u4f53\u52a0\u4e0a\u4e00\u4e2a\u9009\u62e9\u4e2a\u6570\u5373\u53ef\u3002\n\n&emsp;&emsp;\u672c\u4eba\u672c\u7740\u4ee3\u7801\u80fd\u66b4\u529b\u5c31\u66b4\u529b\u7684\u539f\u5219\u4ea4\u4e86\u4e00\u53d1\u66b4\u529b\u4ee3\u7801\u4e0a\u53bb\uff0c\u7ed3\u679c 64 \u5206 TLE \u6cea\u76ee\u3002\u4e0d\u8fc7\u770b\u5230\"\u533a\u95f4\u52a0\"\"\u533a\u95f4\u6700\u5927\u503c\"\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u7ebf\u6bb5\u6811\u4e86\u3002\n\n&emsp;&emsp;\u4e0e\u591a\u6570\u7ebf\u6bb5\u6811\u7684\u9898\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e00\u9898\u96be\u7684\u4e0d\u662f\u6570\u636e\u7ed3\u6784\uff0c\u800c\u662f\u8d2a\u5fc3\u7684\u731c\u6d4b\u4e0e\u8bc1\u660e\uff08\u53cd\u6b63\u6211\u4e00\u5f00\u59cb\u6ca1\u60f3\u51fa\u6765\uff09\uff0c\u6240\u4ee5\u9898\u89e3\u90fd\u6ca1\u6709\u5199\u8bc1\u660e\u8ba9\u6211\u5f88\u5bb3\u6015QwQ\n\n&emsp;&emsp;\u5f53\u7136\uff0cdalao\u4eec\u505a\u8d2a\u5fc3\u9898\u90fd\u662f\"\u76f4\u89c9\u731c\u6d4b\u663e\u7136\u6210\u7acb\"\u7684\uff0c\u53ea\u6709\u6211\u8fd9\u79cd\u849f\u84bb\u9700\u8981\u8bc1\u660e\u3002\n\n&emsp;&emsp;\u732e\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=5e4+10;\nint n,k,ans,c;\nstruct Line{\n\tint m,l,r;\n\tbool operator<(const Line& l2)const{\n\t\treturn r < l2.r;\n\t}\n}line[MAXN];\nint zt[MAXN];\nint tree[MAXN<<2],tag[MAXN<<2];\ninline int lc(int x){return x<<1;}\ninline int rc(int x){return lc(x)|1;}\nvoid push_up(int);\nvoid push_down(int);\nint query(int,int,int,int,int);\nvoid update(int,int,int,int,int,int);\nint main(){\n\tscanf(\"%d%d%d\",&k,&n,&c);\n\tfor(int i=1;i<=k;i++){\n\t\tscanf(\"%d%d%d\",&line[i].l,&line[i].r,&line[i].m);\n\t}\n\tsort(line+1,line+1+k);\n\tfor(int i=1;i<=k;i++){\n\t\tint l = line[i].l,r = line[i].r,m = line[i].m;\n\t\t//max [l,r)\n\t\tint maxn = query(1,1,n,l,r-1);\n\t\tint chose =((c-maxn) < m)?(c-maxn):m;\n\t\tans += chose;\n\t\t//[l,r) += chose\n\t\tupdate(1,1,n,l,r-1,chose);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\nvoid push_up(int x){\n\ttree[x] = max(tree[lc(x)],tree[rc(x)]);\n}\nvoid push_down(int x){\n\t//\u53ea\u7ef4\u62a4max\u751a\u81f3\u4e0d\u9700\u8981l,r\uff1f\n\ttree[lc(x)] += tag[x];\n\ttree[rc(x)] += tag[x];\n\ttag[lc(x)] += tag[x];\n\ttag[rc(x)] += tag[x]; \n\ttag[x] = 0; \n}\nint query(int x,int l,int r,int ql,int qr){\n\tif(ql <= l && qr >= r){\n\t\treturn tree[x];\n\t}\n\tint mid = (l+r)>>1;\n\tint ans = 0;\n\tpush_down(x);\n\tif(ql <= mid){\n\t\tans = max(ans,query(lc(x),l,mid,ql,qr));\n\t}\n\tif(qr > mid){\n\t\tans = max(ans,query(rc(x),mid+1,r,ql,qr));\n\t}\n\tpush_up(x);\n\treturn ans;\n}\nvoid update(int x,int l,int r,int ql,int qr,int value){\n\tif(ql <= l && qr >= r){\n\t\ttree[x] += value;\n\t\ttag[x] += value;\n\t\treturn;\n\t}\n\tint mid = (l+r)>>1;\n\tpush_down(x);\n\tif(ql <= mid){\n\t\tupdate(lc(x),l,mid,ql,qr,value);\n\t}\n\tif(qr > mid){\n\t\tupdate(rc(x),mid+1,r,ql,qr,value);\n\t}\n\tpush_up(x);\n}\n```\n\n&emsp;&emsp;END",
        "postTime": 1600857152,
        "uid": 340632,
        "name": "Cry_For_theMoon",
        "ccfLevel": 8,
        "title": "\u7ebf\u6bb5\u6811\uff1aFair Shuttle"
    },
    {
        "content": "\u8d2a\u5fc3\u6709\u4e00\u9053\u5f88\u7ecf\u5178\u7684\u4f8b\u9898\uff1a\u6d3b\u52a8\u5b89\u6392\u3002\n\n\u53ea\u6709\u4e00\u95f4\u6559\u5ba4\uff0c\u8981\u5b89\u6392\u5c3d\u53ef\u80fd\u591a\u7684\u6d3b\u52a8\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7528\u4e00\u4e2a\u53d8\u91cft\u8868\u793a\u5df2\u5b89\u6392\u6700\u540e\u4e00\u4e2a\u6d3b\u52a8\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u8d4b\u521d\u503c\u4e3a-1\uff0c\u6309\u6d3b\u52a8\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\uff0c\u4f9d\u6b21\u63a5\u53d7\uff0c\u63a5\u53d7\u7684\u65f6\u5019\u6ce8\u610f\u5224\u65ad\uff0c\u4e00\u5b9a\u8981\u8be5\u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4>=\u4e0a\u4e00\u4e2a\u6d3b\u52a8\u7684\u7ed3\u675f\u65f6\u95f4\u3002\n\n\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u6211\u4eec\u6765\u770b\u8fd9\u9053\u9898\u3002\n\nC\u7684\u7a7a\u95f4\u53ef\u4ee5\u770b\u4f5c\u662f\u5171C\u95f4\u6559\u5ba4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5e94\u8be5\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\u50a8\u6bcf\u4e00\u7a7a\u95f4\u4f4d\u7f6e\u4e0a\u5976\u725b\u7684\u4e0b\u8f66\u5730\u70b9\uff08\u6bcf\u4e00\u95f4\u6559\u5ba4\u6d3b\u52a8\u7ed3\u675f\u7684\u65f6\u95f4\uff09\u3002\u8d2a\u5fc3\u7b56\u7565\uff1a\u540c\u6837\u6309\u7167\u7ed3\u675f\u65f6\u95f4\u6392\u597d\uff0c\u6bcf\u4e00\u6b21\u4e0a\u5c3d\u53ef\u80fd\u591a\u7684\u5976\u725b\uff0c\u4e0a\u4e86\u4e4b\u540e\uff0c\u5728\u5bf9\u5e94\u7a7a\u95f4\u4f4d\u7f6e\u4e0a\u5b58\u653e\u8be5\u5976\u725b\u7684\u4e0b\u8f66\u5730\u70b9\uff0c\u5f53\u4e00\u53ea\u5976\u725b\u4e0a\u8f66\u65f6\uff0c\u4f18\u5148\u8003\u8651\u4e0e\u4e0a\u4e00\u53ea\u5976\u725b\u65f6\u95f4\u70b9\u76f8\u8fd1\u7684\uff08\u5c3d\u91cf\u4f7f\u8f66\u53ef\u4ee5\u5750\u6ee1\uff09\n\n\u6240\u4ee5\u8981\u7528\u5230\u6392\u5e8f\uff0c\u63d2\u5165\u6392\u5e8f\uff0c\u5728\u6bcf\u4e00\u7ec4\u5976\u725b\u4e0a\u8f66\u540e\uff08\u53ef\u4ee5\u53ea\u4e0a\u4e00\u90e8\u5206\uff09\uff0c\u5c06\u6bcf\u4e2a\u7a7a\u95f4\u4f4d\u7f6e\u7684\u4e0b\u8f66\u5730\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n\u5177\u4f53\u89c1\u4ee3\u7801\n\n\n\n\n\n        \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n//\u7528\u4e00\u4e2a\u961f\u5217\u6765\u5b58\u50a8\u6bcf\u4e2a\u5355\u4f4d\u7a7a\u95f4\u88ab\u5360\u7528\u7684\u7ed3\u675f\u65f6\u95f4 \nstruct cow{\n    int begin,end;\n    int num;\n}a[50001];\nint h[200]={0};//\u4ece1\u5f00\u59cb\u8ba1\u6570 \nint N,K,C,ans=0;\nint rd()\n{\n    int x=0;\n    char c=getchar();\n    while (c<'0'||c>'9') c=getchar();\n    while (c>='0'&&c<='9') \n    {\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return x;\n}\nbool cmp(cow a,cow b)\n{\n    return a.end<b.end||(a.end==b.end&&a.begin>b.begin);\n}\nint main()\n{\n    freopen(\"cow.in\",\"r\",stdin);\n    K=rd();N=rd();C=rd();\n    for (int i=1;i<=K;i++)\n    {\n        a[i].begin=rd();\n        a[i].end=rd();\n        a[i].num=rd();\n    }\n    sort(a+1,a+K+1,cmp);//\u6309\u7167\u7ed3\u675f\u70b9\u6392\u5e8f \n    for (int i=1;i<=K;i++)\n    {\n        if (a[i].begin<h[1]) continue;\n        int x=1;//\u67d0\u4e00\u7ec4\u4e2d\u53ef\u4ee5\u4e58\u8f66\u7684\u5976\u725b\u6570\u91cf\n        while (x<=a[i].num&&x<=C&&a[i].begin>=h[x]) x++;\n        x--;\n        //\u5220\u53bb\u6570\u7ec4\u4e2d\u6bd4a[i].begin\u5c0f\u7684\u6700\u5927\u7684x\u4e2a\u6570 \n        int p;\n        for (p=1;p<=C;p++) if (h[p]>a[i].begin) break;//p\u662f\u7b2c\u4e00\u4e2a\u5927\u4e8ebegin\u7684\u4f4d\u7f6e \n        p-=x;\n        while (h[p+x]<a[i].end&&p+x<=C) h[p]=h[p+x],p++;\n        for (int w=1;w<=x;w++) h[p++]=a[i].end;\n        ans+=x;\n    }\n    printf(\"%d\",ans);\n    fclose(stdin);\n    return 0;\n}\n```",
        "postTime": 1499004273,
        "uid": 47654,
        "name": "\u79df\u9165\u96e8",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1607 \u3010[USACO09FEB]\u5e99\u4f1a\u73ed\u8f66Fair Shuttle\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053\u5178\u578b\u7684\u8d2a\u5fc3\u9898\uff0c\u7531\u4e8e\u6b64\u9898\u6570\u636e\u5f88\u6c34\uff0c\u6240\u4ee5\u53ef\u7528\u66b4\u641c\u89e3\u51b3\uff08\u6709\u6781\u7aef\u6570\u636e\u5c31\u8981\u7528\u7ebf\u6bb5\u6811\u7b49\u9ad8\u7ea7\u4e1c\u897f\u4e86\uff0c\u800c\u6211\u8fd9\u79cd\u5c0f\u849f\u84bb\u662f\u4e0d\u61c2\u7684\uff09\u3002\n\n1\u3001\u6ce8\u610f\u5404\u7ec4\u7684\u5976\u725b\u53ef\u5206\u5f00\uff1b\uff08\u6211\u5728\u8fd9\u91cc\u88ab\u5361\u4e86\u597d\u4e45\u3002\u3002\u3002\uff09\n\n2\u3001\u7a0b\u5e8f\u5f00\u59cb\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u7b2c\u4e00\u8981\u6c42\u662f\u7ec8\u70b9\u9760\u524d\uff0c\u7b2c\u4e8c\u8981\u6c42\u662f\u8d77\u70b9\u9760\u524d\uff08\u5c31\u662f\u7ec8\u70b9\u76f8\u540c\u65f6\u6bd4\u8d77\u70b9\uff09\uff1b\n\n3\u3001\u8fd9\u4e2a\u7a0b\u5e8f\u5e94\u8be5\u6bd4\u4e0a\u9762\u7684\u9898\u89e3\u7b80\u5355\u6613\u61c2\u4e14\u6765\u7684\u7c97\u66b4\u3002\u3002\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nstruct yun\n{\n  int q;//\u8d77\u70b9\n  int z;//\u7ec8\u70b9\n  int sum;//\u4e00\u7ec4\u5976\u725b\u6570\n} a[50001]={};\nbool com1(yun a,yun b)\n{\n  return (a.z<b.z)||(a.z==b.z&&a.q<b.q);//\u6392\u5e8f\u89c4\u5219\n}\nint k,n,c,b[20001]={},f,ans=0,ans1=0;\nint main()\n{\n  int i,j,Min;\n  cin>>k>>n>>c;//\u8fd9\u9053\u9898\u91ccn\u597d\u50cf\u6ca1\u4ec0\u4e48\u7528\n  for(i=0;i<k;i++)\n    cin>>a[i].q>>a[i].z>>a[i].sum;\n  sort(a,a+k,com1);\n    ans=0;\n    for(i=0;i<k;i++)\n    {\n      Min=2147483647;\n      if(b[a[i].q]<c)//\u8d77\u70b9\u90fd\u6ee1\u4e86\u5c31\u522b\u4e0a\u8f66\u4e86\u5427\n      {\n          for(j=a[i].q;j<a[i].z;j++) {Min=min(c-b[j],Min);if(Min==0) break;}//\u5bfb\u627e\u4e00\u7ec4\u5976\u725b\u4e58\u5750\u8def\u7a0b\u4e2d\u5df4\u58eb\u5269\u4e0b\u7684\u6700\u5c11\u4f4d\u7f6e\uff0c\u8fd9\u7ec4\u5976\u725b\u6700\u591a\u80fd\u4e0a\u5df4\u58eb\u7684\u4e2a\u6570\u7b49\u4e8eMin\uff08Min\u7b49\u4e8e0\u65f6\u4fdd\u6301\u539f\u6837\u5c31\u884c\uff0c\u8fd9\u662f\u6700\u4f18\u60c5\u51b5\uff09\n          if(Min!=0)//\u6ce8\u610fMin\u4e3a\u8d1f\u6570\u4e5f\u8981\u7b97\uff0c\u51cf\u53bb\u591a\u4f59\u7684\u5976\u725b\n          {\n            if(Min>=a[i].sum)\n            {\n            for(j=a[i].q;j<a[i].z;j++) {b[j]+=a[i].sum;}\n            ans+=a[i].sum;\n          }  \n          else \n          {\n            for(j=a[i].q;j<a[i].z;j++) {b[j]+=Min;}\n            ans+=Min;//\u5c3d\u91cf\u591a\u7684\u5976\u725b\u4e0a\u8f66\n          }\n        }\n      }\n    }\n  cout<<ans<<endl;\n  return 0;\n}\n```",
        "postTime": 1499004264,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1607 \u3010[USACO09FEB]\u5e99\u4f1a\u73ed\u8f66Fair Shuttle\u3011"
    },
    {
        "content": "### \u89e3\u9898\u4e4b\u524d\n\u521d\u770b\u8fd9\u9053\u9898\uff0c\u6211\u60f3\u8d77\u4e86[P1937 USACO10MAR \u4ed3\u914d\u7f6eBarn Allocation](https://www.luogu.org/problem/P1937),\u4e24\u8005\u5728\u6211\u770b\u6765\u786e\u5b9e\u6bd4\u8f83\u76f8\u4f3c\uff0c\u56e0\u4e3a\u4ed6\u4eec\u90fd\u663e\u7136\u53ef\u4ee5\u7528\u8d2a\u5fc3+\u7ebf\u6bb5\u6811~~\u88ab\u6b63\u5728\u9605\u8bfb\u8fd9\u7bc7\u9898\u89e3\u7684\u5de8\u4f6c\u79d2\u5207~~\u3002\u4f46\u662f\u4e24\u9898\u7684\u8d2a\u5fc3\uff08\u6211\u7684\u60f3\u6cd5\uff09\u7565\u6709\u4e0d\u540c\uff0c\u800c\u4e14\u5728$\\mathbb{AC}$\u4e4b\u524d\uff0c\u6211$\\mathbb{WA}$\u4e86\u3002\u4e8e\u662f\u6211\u6765\u5199\u8fd9\u7bc7\u9898\u89e3\u3002\n### \u9898\u76ee\u5206\u6790\n\u4e4d\u4e00\u770b\u6b64\u9898\uff0c\u5e94\u8be5\u4e0d\u96be\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u6392\u5e8f+\u8d2a\u5fc3~~\u79d2\u5207~~\u3002~~\u7136\u800c\u6211\u5c31\u60f3\u5199\u7ebf\u6bb5\u6811\u3002~~\n\n\u7531\u4e8eFJ\u7684\u73ed\u8f66\u53ea\u80fd\u4ece$1$\u5230$N$\u8dd1\u4e00\u6b21\uff0c\u800c\u4e14\u6bcf\u4e00\u7ec4\u5976\u725b\u4e5f\u53ea\u4ece$s$\u5230$t$\u8dd1\u4e00\u6b21\uff0c\u518d\u52a0\u4e0a\u8981\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u6211\u4eec\u8003\u8651\u505a\u5982\u4e0b\u8f6c\u6362\uff1a\n\n- FJ\u7684\u73ed\u8f66 $\\rightarrow$ \u4e00\u4e2a\u7aef\u70b9\u4e3a1\u548cN\u7684\u533a\u95f4\n- \u4e00\u7ec4\u8981\u4ece$s$\u8dd1\u5230$t$\u7684$m$\u5934\u5976\u725b $\\rightarrow$ \u4e00\u4e2a\u7aef\u70b9\u4e3a$s$\u548c$t$\u7684\u5360\u7528\u7a7a\u95f4\u4e3a$m$\u7684\u533a\u95f4\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e9b\u533a\u95f4\u3002\u4f46\u662f\uff0c\u7ebf\u6bb5\u6811\u8981\u7ef4\u62a4\u4ec0\u4e48\u5462\uff1f\u53c8\u600e\u4e48\u5224\u65ad\u73ed\u8f66\u5728\u67d0\u4e2a\u4f4d\u7f6e\u65f6\u8fd8\u6709\u591a\u5c11\u7a7a\u95f4\u5462\uff1f\n\n\u5176\u5b9e\u975e\u5e38\u7b80\u5355\u3002\u56e0\u4e3a\u5bf9\u4e8e\u4e00\u7ec4\u8981\u4ece$s$\u8dd1\u5230$t$\u7684\u5976\u725b\uff0c\u5982\u679c\u5728$s$\u5230$t$\u8fd9\u4e2a\u533a\u95f4\u5185\u6709\u4e00\u4e2a\u65f6\u523b\u73ed\u8f66\u88c5\u4e0d\u4e0b\u8fd9\u4e00\u7ec4\u6240\u6709\u7684\u5976\u725b\uff0c\u90a3\u4e48\u8fd9\u6574\u7ec4\u5976\u725b\u662f\u4e0d\u53ef\u80fd\u5168\u90e8\u4ece$s$\u8dd1\u5230$t$\u7684\u3002\u7531\u6b64\uff0c\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\uff08\u6700\u5c0f\u503c\u5176\u5b9e\u4e5f\u884c\uff09\uff0c\u7136\u540e\u5728\u5904\u7406\u4e00\u7ec4\u5976\u725b\u65f6\uff0c\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u7ec4\u5976\u725b\u7684\u4e0a\u8f66\u60c5\u51b5\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u600e\u6837\u8fbe\u5230\u9898\u76ee\u7684\u8981\u6c42\u5462\uff1f\n\n> \u8ba1\u5212\u4e00\u4e2a\u5c3d\u53ef\u80fd\u6ee1\u8db3\u66f4\u591a\u5976\u725b\u613f\u671b\u7684\u65b9\u6848\u3002\n\n\u5176\u5b9e\u8fd9\u8ddf\u6392\u5e8f+\u8d2a\u5fc3\u7684\u601d\u8def\u662f\u4e00\u6837\u7684\uff0c\u5373\uff1a\u4ee5$t$\u4ece\u5c0f\u5230\u5927\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4ee5$s$\u4ece\u5c0f\u5230\u5927\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u628a\u5976\u725b\u6392\u5e8f\u3002\u7136\u540e\u6309\u8fd9\u4e2a\u987a\u5e8f\u8fdb\u884c\u64cd\u4f5c\uff0c\u5e76\u8bb0\u5f55\u4e0a\u8f66\u7684\u5976\u725b\u7684\u603b\u6570\u5373\u53ef\u3002\n\n### \u5bb9\u6613\u758f\u5ffd\u7684\u5730\u65b9\n1. \u5141\u8bb8\u4e00\u7ec4\u4e2d\u7684\u4e00\u90e8\u5206\u5976\u725b\u4e58\u5750\u73ed\u8f66~~\u800c\u629b\u5f03\u5269\u4e0b\u7684\u5976\u725b~~\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u6b21\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u65f6\uff0c\u5e94\u8be5\u8ba1\u7b97\u51fa\u6700\u591a\u8fd8\u6709\u591a\u5c11\u5976\u725b\u53ef\u4ee5\u4e0a\u8f66\u3002~~\u4e0d\u7136\u8fde\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\u3002~~\n2. \u6839\u636e\u9898\u76ee\u63cf\u8ff0\uff0cFJ\u7684\u5976\u725b\u4eec\u88ab\u5206\u6210\u4e86$K(1 \\leq K \\leq 5 \\times 10^4)$\u5c0f\u7ec4\uff0c\u7b2c$i$\u7ec4\u6709$M_i(1 \\leq M_i \\leq 2 \\times 10^4)$\u5934\u5976\u725b\u3002$Therefore, theoretically speaking,$ FJ\u6700\u591a\u6709$1 \\times 10^8$\u5934\u5976\u725b\u3002\u6240\u4ee5\uff0cFJ\u5176\u5b9e\u633a\u6709\u94b1\u3002\n\n\u4ee5\u4e0b\u4e3a\u6211\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MXN 20010\n#define MXQ 50010\n#define Min(a,b) ((a)<(b)?(a):(b))\n#define Max(a,b) ((a)>(b)?(a):(b))\nint N,M,C;\nstruct Queries {int l,r,val;}q[MXQ];\nstruct SegmentTree {int l,r,minval,tag;}tr[MXN<<2];\ninline int rd()\n{\n\tint ret=0,f_f=1; char c=getchar();\n\twhile(c<'0' || c>'9') {if(c=='-') f_f=-1; c=getchar();}\n\twhile(c>='0' && c<='9') ret=(ret<<1)+(ret<<3)+c-'0',c=getchar();\n\treturn ret*f_f;\n}\ninline bool cmp(Queries x,Queries y) {return x.r == y.r ? (x.l < y.l) : (x.r < y.r);}\ninline void PushUp(int u) {tr[u].minval=Min(tr[u<<1].minval,tr[u<<1|1].minval);}\ninline void Build(int u,int l,int r)\n{\n\ttr[u].l=l,tr[u].r=r;\n\ttr[u].tag=0,tr[u].minval=C;\n\tif (l == r) return;\n\tint mid=(l+r)>>1;\n\tBuild(u<<1,l,mid);\n\tBuild(u<<1|1,mid+1,r);\n\tPushUp(u);\n}\ninline void PushDown(int u)\n{\n\tif (tr[u].tag == 0) return;\n\ttr[u].minval+=tr[u].tag;\n\tif (tr[u].l != tr[u].r)\n\t{\n\t\ttr[u<<1].tag+=tr[u].tag;\n\t\ttr[u<<1|1].tag+=tr[u].tag;\n\t}\n\ttr[u].tag=0;\n}\ninline void Modify(int u,int l,int r,int dt)\n{\n\tPushDown(u);\n\tif (tr[u].l >= l && tr[u].r <= r)\n\t{\n\t\ttr[u].tag+=dt;\n\t\treturn;\n\t}\n\tint mid=(tr[u].l+tr[u].r)>>1;\n\tif (l <= mid) Modify(u<<1,l,r,dt);\n\tif (r >= mid+1) Modify(u<<1|1,l,r,dt);\n\tPushDown(u<<1),PushDown(u<<1|1),PushUp(u);\n}\ninline void Query(int u,int l,int r,int &res)\n{\n\tPushDown(u);\n\tif (tr[u].l >= l && tr[u].r <= r)\n\t{\n\t\tres=Min(res,tr[u].minval);\n\t\treturn;\n\t}\n\tint mid=(tr[u].l+tr[u].r)>>1;\n\tif (l <= mid) Query(u<<1,l,r,res);\n\tif (r >= mid+1) Query(u<<1|1,l,r,res);\n\tPushDown(u<<1),PushDown(u<<1|1),PushUp(u);\n}\nint main()\n{\n\tN=rd(),M=rd(),C=rd();\n\tfor (int i=1;i<=N;i++)\n\t\tq[i].l=rd(),q[i].r=rd()-1,q[i].val=rd();\n\tsort(q+1,q+1+N,cmp);\n\tBuild(1,1,M);\n\tint minv,ans=0;\n\tfor (int i=1;i<=N;i++)\n\t{\n\t\tminv=C+1,Query(1,q[i].l,q[i].r,minv);\n\t\tif (minv != 0) Modify(1,q[i].l,q[i].r,-Min(minv,q[i].val)),ans+=Min(minv,q[i].val);\n\t}\n\treturn printf(\"%d\\n\",ans),0;\n}\n```",
        "postTime": 1565675331,
        "uid": 41450,
        "name": "KobeWu",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P1607 [USACO09FEB]\u5e99\u4f1a\u73ed\u8f66Fair Shuttle"
    },
    {
        "content": "\u9898\u610f\u662f\u7ed9\u4f60\u51e0\u5806\u5976\u725b\uff0c\u6bcf\u4e2a\u5976\u725b\u90fd\u6709\u60f3\u53bb\u7684\u5730\u65b9\uff0c\u7ed9\u4f60\u4e00\u4e2a\u6c7d\u8f66\uff0c\u6c7d\u8f66\u6709\u4e00\u4e2a\u5bb9\u91cf\u548c\u56fa\u5b9a\u7684\u884c\u8d70\u8def\u7ebf\uff0c\u8be2\u95ee\u6700\u591a\u80fd\u642d\u8f7d\u7684\u5976\u725b\u7684\u6570\u91cf\u3002\n\n\u6211\u4eec\u6765\u8003\u8651\u4e00\u79cd\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u6309\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u4e00\u904d\u5e8f\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u540e\u9762\u8bf4\uff0c\u7136\u540e\u5bf9\u6392\u597d\u5e8f\u7684\u6bcf\u5806\u5976\u725b\u4f9d\u6b21\u8fdb\u884c\u904d\u5386\uff0c\u5982\u679c\u5f53\u524d\u6709\u7a7a\u4f4d\uff0c\u7a7a\u4f4d\u5927\u4e8e\u8fd9\u5806\u5976\u725b\u7684\u6570\u91cf\uff0c\u90a3\u5c31\u5168\u4e0a\u53bb\uff0c\u4e0d\u7136\u7684\u8bdd\uff0c\u5c31\u80fd\u4e0a\u53bb\u51e0\u4e2a\u5c31\u4e0a\u53bb\u51e0\u4e2a\u3002\u8fd9\u6837\u4e0b\u6765\u7684\u8bdd\uff0c\u7ed3\u679c\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u5176\u6b63\u786e\u6027\u4e0d\u96be\u8bc1\u660e\uff0c\u56e0\u4e3a\u521a\u5f00\u59cb\u6211\u4eec\u5bf9\u6bcf\u5806\u5976\u725b\u8981\u5230\u7684\u5730\u65b9\u4ece\u5c0f\u5230\u5927\u6392\u4e86\u5e8f(\u5373\u7ec8\u70b9)\uff0c\u90a3\u4e48\u6bcf\u4e2a\u4f4d\u7f6e\u6700\u591a\u53ea\u6709\u4e00\u6b21\u5976\u725b\u4e0a\u8f66\uff0c\u800c\u4e14\u8fd9\u4e9b\u5976\u725b\u6765\u81ea\u540c\u4e00\u7fa4\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u6bcf\u5806\u5976\u725b\u5206\u522b\u8fdb\u884c\u8003\u8651\u5373\u53ef\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8981\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\u7684\u539f\u56e0\u3002\u8d2a\u5fc3\u8fc7\u7a0b\u4e2d\uff0c\u8981\u7ef4\u62a4\u6700\u5927\u503c\u3002\u56e0\u4e3a\u8981\u7b97\u6700\u5c11\u7684\u7a7a\u4f4d\u5b50\uff0c\u4e0b\u9762\u7ed9\u51fa\u4e24\u79cd\u4ee3\u7801\uff1a\n\n1\u3001\u7eaf\u8d2a\u5fc3&\u8d2a\u5fc3\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#define maxn 50007\nusing namespace std;\nint ans,n,m,k,w[maxn];\ninline int qread() {\n  char c=getchar();int num=0,f=1;\n  for(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n  for(;isdigit(c);c=getchar()) num=num*10+c-'0';\n  return num*f;\n}\nstruct node {\n  int u,v,c;\n}e[maxn];\nconst int inf=0x7fffffff;\ninline bool cmp(node a, node b) {\n  if(a.v!=b.v) return a.v<b.v;\n  return a.u<b.u;\n}\nint main() {\n  k=qread(),n=qread(),m=qread();\n  for(int i=1;i<=k;++i) e[i].u=qread(),e[i].v=qread(),e[i].c=qread();\n  sort(e+1,e+1+k,cmp);\n  for(int i=1;i<=k;++i) {\n    if(w[e[i].u]>=m) continue;\n    int minn=inf;\n    for(int j=e[i].u;j<=e[i].v;++j) {\n      minn=min(m-w[j],minn);\n      if(minn<=0) break;\n    }\n    if(minn>0) {\n      if(minn>=e[i].c) { \n        for(int j=e[i].u;j<e[i].v;++j)\n          w[j]+=e[i].c;\n        ans+=e[i].c;\n      }\n      else {\n        for(int j=e[i].u;j<e[i].v;++j)\n          w[j]+=minn;\n        ans+=minn;\n      }\n    }\n  }\n  printf(\"%d\\n\",ans);\n  return 0;\n}\n```\n\n2\u3001\u7ebf\u6bb5\u6811&\u8d2a\u5fc3&\u6392\u5e8f\uff1a\n\n``` cpp\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#define maxn 20007\n#define ls rt<<1\n#define rs rt<<1|1\nusing namespace std;\nconst int inf=0x7fffffff;\nint n,k,m,maxx[maxn<<2],lazy[maxn<<2],zrj,w[50007];\ninline int qread() {\n  char c=getchar();int num=0,f=1;\n  for(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n  for(;isdigit(c);c=getchar()) num=num*10+c-'0';\n  return num*f;\n}\nstruct node {\n  int u,v,c;\n}e[50007];\ninline bool cmp(node a, node b) {\n  if(a.v!=b.v) return a.v<b.v;\n  return a.u<b.u;\n}\ninline void pushup(int rt) {\n  maxx[rt]=max(maxx[ls],maxx[rs]);\n}\ninline void pushdown(int rt) {\n  if(lazy[rt]) {\n    maxx[ls]+=lazy[rt],lazy[ls]+=lazy[rt];\n    maxx[rs]+=lazy[rt],lazy[rs]+=lazy[rt];\n    lazy[rt]=0;\n  }\n}\nvoid modify(int rt, int l, int r, int L, int R, int val) {\n  if(L>r||R<l) return;\n  if(L<=l&&r<=R) {\n    lazy[rt]+=val,maxx[rt]+=val;\n    return;\n  }\n  int mid=(l+r)>>1;\n  pushdown(rt);\n  modify(ls,l,mid,L,R,val),modify(rs,mid+1,r,L,R,val);\n  pushup(rt);\n}\nint cmax(int rt, int l, int r, int L, int R) {\n  if(L>r||R<l) return -inf;\n  if(L<=l&&r<=R) return maxx[rt];\n  int mid=(l+r)>>1,ans=-inf;\n  pushdown(rt);\n  if(L<=mid) ans=max(ans,cmax(ls,l,mid,L,R));\n  if(R>mid) ans=max(ans,cmax(rs,mid+1,r,L,R));\n  return ans;\n}\nint main() {\n  k=qread(),n=qread(),m=qread();\n  for(int i=1;i<=k;++i) e[i].u=qread(),e[i].v=qread(),e[i].c=qread();\n  sort(e+1,e+1+k,cmp);\n  for(int i=1;i<=k;++i) {\n    int p=cmax(1,1,n,e[i].u,e[i].v-1);\n    int minn=min(m-p,e[i].c);\n    zrj+=minn,w[i]+=minn;\n    modify(1,1,n,e[i].u,e[i].v-1,w[i]);\n  }\n  printf(\"%d\\n\",zrj);\n  return 0;\n}\n```\n\n\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u5bf9\u5927\u5bb6\u80fd\u6709\u6240\u5e2e\u52a9\u3002",
        "postTime": 1546689738,
        "uid": 68622,
        "name": "King\u4e28\u5e1d\u5fa1\u5a01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1607 \u3010[USACO09FEB]\u5e99\u4f1a\u73ed\u8f66Fair Shuttle\u3011"
    },
    {
        "content": "**\u4eff\u4f5b\u6ca1\u6709\u8be6\u7ec6\u7684\u7ebf\u6bb5\u6811\u7248\u9898\u89e3,\u6765\u4e00\u53d1**:\n\n**\u9996\u5148\u539f\u5219\u662f\u4f18\u5148\u9009\u7ed3\u675f\u4f4d\u7f6e\u6700\u5c0f\u7684,\u80fd\u9009\u5c31\u9009,\u7136\u540e\u5c31\u662f\u600e\u4e48\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u9009,\u90a3\u4e48\u53ef\u4ee5\u9009\u7684\u6761\u4ef6\u662f\u8fd9\u4e2a\u7ec4\u7684[L,R]\u4e4b\u95f4\u7684\u6700\u5927\u503c\u52a0\u4e0a\u8fd9\u4e2a\u7ec4\u7684\u4eba\u4e0d\u4f1a\u8d85\u8fc7\u6700\u5927\u5bb9\u91cfC,\u6240\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6700\u5927\u503c\u5c31\u597d,\u672c\u849f\u84bb\u7528\u7684\u662f\u7ebf\u6bb5\u6811,\u7136\u540e\u6bcf\u4e00\u6b21\u9009\u5b8c\u540e\u5c31\u5728\u7ebf\u6bb5\u6811\u4e2d[L,R-1] \u52a0\u4e0a\u8fd9\u4e2a\u7ec4\u7684\u4eba\u6570\u5373\u53ef**\n\n[\u4ee3\u7801\u770b\u8fd9\u91cc](http://www.cnblogs.com/Yuzao/p/7435869.html)\n",
        "postTime": 1503744265,
        "uid": 22873,
        "name": "Hank",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1607 \u3010[USACO09FEB]\u5e99\u4f1a\u73ed\u8f66Fair Shuttle\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\u6392\u5e8f\u7684\u601d\u60f3\u5f88\u591a\u5927\u4f6c\u5df2\u7ecf\u8bb2\u4e86\uff0c \u8fd9\u91cc\u672c\u849f\u84bb\u5c31\u7ed9\u5927\u5bb6\u63d0\u4f9b\u4e00\u79cd\u65e0\u8111\u7684multiset\u505a\u6cd5\u3002\n\n\u5f00\u4e00\u4e2amultiset (\u6ce8\u610f\u4e0d\u662fset, \u56e0\u4e3a\u5141\u8bb8\u91cd\u590d)\u5f53\u505a\u8f66\uff0c \u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u8f66\u4e0a\u7684\u6bcf\u4e00\u53ea\u5976\u725b\u7684\u7ec8\u70b9\uff0c\u6bcf\u8bbf\u95ee\u5230\u4e00\u4e2a\u70b9\uff0c \u904d\u5386\u4e00\u4e0b\u4ee5\u8be5\u70b9\u4f5c\u4e3a\u8d77\u70b9\u7684\u6240\u6709\u5976\u725b\u5206\u7ec4\u3002 \u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\u2014\u2014\u8ba9\u5148\u4e0b\u8f66\u7684\u4e0a\u8f66\u4e00\u5b9a\u6bd4\u540e\u4e0b\u8f66\u7684\u66f4\u4f18\uff0c \u6240\u4ee5\u6211\u4eec\u5c31\u628a\u540e\u4e0b\u8f66\u7684\u5c3d\u53ef\u80fd\u591a\u7684\u66ff\u6362\u6210\u5148\u4e0b\u8f66\u7684\uff0c \u7136\u540e\u6bcf\u5230\u4e00\u4e2a\u70b9\u65f6\u7edf\u8ba1\u4e00\u4e0b\u7b54\u6848\u3002\n\n\u600e\u4e48\u6837\uff0c \u662f\u4e0d\u662f\u975e\u5e38\u66b4\u529b?\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c \u8fd9\u4e48\u66b4\u529b\u7684\u4e1c\u897f\uff0c \u4e3a\u5565\u80fd\u8fc7\u5462\uff1f\uff1f\n\n1.~~\u6570\u636e\u6c34~~\n\n2.\u6ce8\u610f\u770b\u5566\uff0c \u9898\u76ee\u4e2d\u6709\u4e2a\u91cd\u8981\u7684\u6027\u8d28\u2014\u2014$c<=100$\uff0c \u6240\u4ee5\u5462\u6bcf\u4e2a\u70b9\u6700\u591a\u8fdb\u884c100\u6b21\u66ff\u6362\u64cd\u4f5c\uff0c \u6700\u574f\u590d\u6742\u5ea6\u4e5f\u5c31\u662f $O(100 * 20000 * log 100)$ \uff0c\u59a5\u59a5\u7684\uff01\n\n\u751f\u547d\u82e6\u77ed\uff0c \u76f4\u63a5\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include <iostream>\n#include <vector>\n#include <cstdio>\n#include <set>\n#define pr pair<int, int>\n#define mk make_pair\nusing namespace std;\nconst int N=20010;\nint k, n, c, ans;\nvector <pr> v[N];\nmultiset <int> s;\nmultiset <int> :: iterator it;\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>k>>n>>c;\n\tfor(int i=1, S, T, num; i<=k; i++)\n\t{\n\t\tcin>>S>>T>>num;\n\t\tv[S].push_back(mk(T, num));\n\t}\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\twhile(*s.begin()==i) \n\t\t\ts.erase(s.begin()), ans++;\n\n\t\tfor(int j=0; j<v[i].size(); j++)\n\t\t{\n\t\t\tint t=v[i][j].first, \n\t\t\t\tnum=v[i][j].second;\n\t\t\twhile(s.size()<c && num) \n\t\t\t\ts.insert(t), num--;\n\t\t\tit=s.end(), it--;\n\t\t\twhile(*it>t && num) \n\t\t\t\ts.erase(it), s.insert(t), num--, \n\t\t\t\tit=s.end(), it--;\n\t\t}\n\t}\n\tcout<<ans;\n\treturn ~~ (0 ^ 0) ;\n}\n```\n",
        "postTime": 1572479947,
        "uid": 130422,
        "name": "_\u849f\u84bb__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1607 \u3010[USACO09FEB]\u5e99\u4f1a\u73ed\u8f66Fair Shuttle\u3011"
    },
    {
        "content": "[P1607 [USACO09FEB]Fair Shuttle G](https://www.luogu.com.cn/problem/P1607)\n\n#### \u8d2a\u5fc3\n\n\u7b56\u7565\uff1a\u9996\u5148\u5bf9\u53f3\u7aef\u70b9\u5347\u5e8f\u6392\u5e8f\uff0c\u53f3\u7aef\u70b9\u76f8\u540c\u5219\u6309\u5de6\u7aef\u70b9\u5347\u5e8f\u6392\u5e8f.\u6392\u5b8c\u5e8f\u540e\u4e00\u4e00\u679a\u4e3e\uff0c\u82e5\u6709\u7a7a\u4f4d\uff0c\u5219\u4e58\u8f66\uff0c\u5426\u5219\u4e0d\u4e58\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u79cd\u505a\u6cd5\u662f\u6700\u4f18\u7684.\n\n\u7565\u8bc1\uff1a\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u6240\u4ee5\u5047\u8bbe\u5f53\u524d\u8f66\u6ee1\u4e86\u7684\u8bdd\uff0c\u6211\u4eec\u5018\u82e5\u5c06\u5148\u524d\u4e0a\u8f66\u7684\u5976\u725b\u8e22\u51fa\uff0c\u90a3\u4e48\u65e0\u6cd5\u83b7\u5f97\u66f4\u591a\u4ee3\u4ef7\uff0c\u4e14\u5f53\u524d\u5976\u725b\u4e0a\u8f66\u540e\u53f3\u7aef\u70b9\u66f4\u5927\uff0c\u5bf9\u540e\u9762\u5976\u725b\u4e0a\u8f66\u8d8a\u4e0d\u5229\uff0c\u6545\u6b64\u7b56\u7565\u6210\u7acb.\n\n\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u5bfb\u627e\u5f53\u524d\u6bb5\u8f66\u4e0a\u7684\u7a7a\u4f4d.\u4f55\u4ee5\u7ef4\u62a4\uff1f\u7ebf\u6bb5\u6811\u6c38\u4e45\u5316\u6807\u8bb0\u5373\u53ef.\n\n$O(nlogn)$\n\n```cpp\nll k, n, c;\n\nstruct node{\n\tll l, r, v;\n\t\n\tnode(){}\t\n\tnode(ll LL, ll RR, ll VV):l(LL), r(RR), v(VV){}\n\t\n\tinline bool operator <(const node &X)const{\n\t\treturn this->r==X.r?this->l<X.l:this->r<X.r;  //\u6392\u5e8f\n\t}\n}o[M];\n\nnamespace seg{\n\tll dat[N<<2], lazy[N<<2]; //\u6c38\u4e45\u5316\u6807\u8bb0\uff0c\u67e5\u8be2\u53ca\u4e0a\u4f20\u7684\u65f6\u5019\u7edf\u8ba1\u5373\u53ef\n\t\n\tinline void update(ll p, ll l, ll r, ll u, ll v, ll val){\n\t\tif (u<=l && r<=v) return (void) (dat[p]+=val, lazy[p]+=val);\n\t\tll mid=l+r>>1;\n\t\tif (u<=mid) update(p<<1, l, mid, u, v, val);\n\t\tif (v>mid) update(p<<1|1, mid+1, r, u, v, val);\n\t\tdat[p]=max(dat[p<<1], dat[p<<1|1])+lazy[p];  \n\t}\n\t\n\tinline ll query(ll p, ll l, ll r, ll u, ll v){\n\t\tif (u<=l && r<=v) return dat[p];\n\t\tll mid=l+r>>1, res=0;\n\t\tif (u<=mid) chkmax(res, query(p<<1, l, mid, u, v));\n\t\tif (v>mid) chkmax(res, query(p<<1|1, mid+1, r, u, v));\n\t\treturn res+lazy[p];  //\u52ff\u5fd8\u6807\u8bb0\n\t}\n\t\n}\n\nll res;\nint main(){\n\tread(k); read(n); read(c);\n\tfor (R ll i=1, l, r, v; i<=k; i++){\n\t\tread(l); read(r); read(v); --r;\n\t\to[i]=node(l, r, v);\n\t}\n\tsort(o+1, o+k+1);  //\u7ed3\u6784\u4f53\u6392\u5e8f\n\tfor (R ll i=1, tmp, rem; i<=k; i++){\n\t\trem=seg::query(1, 1, n, o[i].l, o[i].r);\n\t\tif (rem<c){   //\u82e5\u6709\u7a7a\u4f4d\n\t\t\ttmp=min(c-rem, o[i].v);  //\u5bfb\u627e\u80fd\u4e0a\u8f66\u7684\u5976\u725b\u6700\u5927\u6570\n\t\t\tres+=tmp;\n\t\t\tseg::update(1, 1, n, o[i].l, o[i].r, tmp); \n\t\t}\n\t}\n\twriteln(res);\n}\n```\n",
        "postTime": 1605188025,
        "uid": 220285,
        "name": "Saber_Master",
        "ccfLevel": 7,
        "title": "P1607 [USACO09FEB]Fair Shuttle G"
    },
    {
        "content": "\u60f3\u5237\u4e00\u4e0b\u7ebf\u6bb5\u6811\u9898\u7136\u540e\u5c31\u5199\u4e86\u4e2a\u7ebf\u6bb5\u6811\u3002\u3002\n\n\u6392\u5e8f\u540e\u8d2a\u5fc3\u601d\u8def\u662f\u663e\u7136\u6b63\u786e\u7684\u56e0\u4e3a\u627e\u4e0d\u51fa\u66f4\u4f18\u89e3\u3002\u3002\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u52a0\u533a\u95f4max\n\n\u8fde\u6807\u8bb0\u4e0b\u4f20\u90fd\u4e0d\u7528\uff0c\u76f4\u63a5\u6c38\u4e45\u5316\u597d\u4e86\n\n\u53ef\u4ee5\u8bf4\u5f88\u50bb\u4e86\n\n\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint k,n,c,ans,ma[1000000],lazy[1000000];\nstruct lsg{int x,y,z;}a[1000000];\nint read(){\n    char c=getchar();while (c!='-'&&(c<'0'||c>'9'))c=getchar();\n    int kk=1,k=0;if (c=='-')kk=-1,c=getchar();\n    while (c>='0'&&c<='9')k=k*10+c-'0',c=getchar();return kk*k;\n}int findit(int x,int y,int l,int r,int d){//\u67e5\u8be2max\u64cd\u4f5c\n    if (x<=l&&y>=r)return ma[d];\n    int m=(l+r)/2,ans=lazy[d];\n    if (x<=m)ans=max(ans,findit(x,y,l,m,d*2)+lazy[d]);\n    if (y>m)ans=max(ans,findit(x,y,m+1,r,d*2+1)+lazy[d]);\n    return ans;\n}void putit(int x,int y,int z,int l,int r,int d){//\u533a\u95f4\u52a0\n    if (x<=l&&y>=r){lazy[d]+=z;ma[d]+=z;return;}\n    int m=(l+r)/2;if (x<=m)putit(x,y,z,l,m,d*2);\n    if (y>m)putit(x,y,z,m+1,r,d*2+1);\n    ma[d]=max(ma[d*2],ma[d*2+1])+lazy[d];\n}bool pd(lsg x,lsg y){return x.y<y.y;}//\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\nint main(){\n    k=read();n=read();c=read();for (int i=1;i<=k;i++)a[i].x=read(),a[i].y=read()-1,a[i].z=read();\n    sort(a+1,a+1+k,pd);for (int i=1;i<=k;i++){\n        int x=findit(a[i].x,a[i].y,1,n,1),y=min(c-x,a[i].z);//\u8d2a\u5fc3\n        ans+=y;putit(a[i].x,a[i].y,y,1,n,1);\n    }cout<<ans<<endl;\n}\n\n```",
        "postTime": 1509281806,
        "uid": 44165,
        "name": "Starria\u7684\u8111\u6b8b\u7c89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1607 \u3010[USACO09FEB]\u5e99\u4f1a\u73ed\u8f66Fair Shuttle\u3011"
    },
    {
        "content": "\u636e\u8bf4$NOIp$\u524d\u53d1\u9898\u89e3\u53ef\u4ee5$\\mathfrak{RP}$++\n\n---\n\n\u56e0\u4e3a\u8981\u5c3d\u53ef\u80fd\u6ee1\u8db3\u66f4\u591a\u5976\u725b\uff0c\u6240\u4ee5\u6309\u7167\u8fd9\u79cd\u533a\u95f4\u8d2a\u5fc3\u9898\u7684\u5957\u8def\uff0c\u5148\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u904d\u5386\uff0c\u80fd\u5750\u8f66\u7684\u5c31\u8ba9\u5b83\u4eec\u5750\u8f66\uff0c\u8fd9\u6837\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002  \n\u5728\u8d2a\u5fc3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u77e5\u9053\u5728\u8f66\u5728\u5f53\u524d\u7684\u65f6\u95f4\u6bb5\u4e2d\u6700\u5c11\u6709\u591a\u5c11\u7a7a\u4f4d\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff08\u4e5f\u53ef\u4ee5\u4e0d\u7528\u7ebf\u6bb5\u6811\uff0c\u4f46\u4e2a\u4eba\u611f\u89c9\u7528\u7ebf\u6bb5\u6811\u6bd4\u8f83\u597d\u7406\u89e3\uff09\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ls p<<1\n#define rs p<<1|1\n#define mid ((l+r)>>1)\nusing namespace std;\nint read(){\n\tint k=0; char c=getchar();\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9')\n\t  k=k*10+c-48,c=getchar();\n\treturn k;\n}\nstruct zzz{\n\tint st,en,num;\n}cow[50010];\nbool cmp(zzz x,zzz y){ //\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\n\treturn x.en < y.en;\n}\nint tree[20010<<2],tag[20010<<2];  //\u4ee5\u4e0b\u4e3a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\ninline void down(int l,int r,int p){\n\ttree[ls]+=tag[p]; tree[rs]+=tag[p];\n\ttag[ls]+=tag[p]; tag[rs]+=tag[p];\n\ttag[p]=0;\n}\ninline void up(int p){\n\ttree[p]=max(tree[ls],tree[rs]);\n}\nvoid update(int l,int r,int p,int nl,int nr,int k){\n\tif(l>=nl&&r<=nr){\n\t\ttree[p]+=k; tag[p]+=k; return ;\n\t}\n\tdown(l,r,p);\n\tif(nl<=mid) update(l,mid,ls,nl,nr,k);\n\tif(nr>mid) update(mid+1,r,rs,nl,nr,k);\n\tup(p);\n}\nint query(int l,int r,int p,int nl,int nr){\n\tint ans=0;\n\tif(l>=nl&&r<=nr) return tree[p];\n\tdown(l,r,p);\n\tif(nl<=mid) ans=max(ans,query(l,mid,ls,nl,nr));\n\tif(nr>mid) ans=max(ans,query(mid+1,r,rs,nl,nr));\n\treturn ans;\n}\nint main(){\n\tint k=read(),n=read(),c=read();\n\tfor(int i=1;i<=k;i++)\n\t  cow[i].st=read(),cow[i].en=read()-1,cow[i].num=read();\n\tsort(cow+1,cow+k+1,cmp);\n\tint maxn=0;\n\tfor(int i=1;i<=k;i++){  //\u904d\u5386\u533a\u95f4\n\t\tint x=query(1,n,1,cow[i].st,cow[i].en);\n\t\tif(x<c){\n\t\t\tint f=min(c-x,cow[i].num);  //\u5f53\u524d\u80fd\u6709\u51e0\u5934\u5976\u725b\u4e0a\u8f66\n\t\t\tmaxn+=f;\n\t\t\tupdate(1,n,1,cow[i].st,cow[i].en,f);\n\t\t}\n\t}\n\tcout<<maxn;\n\treturn 0;\n}\n```",
        "postTime": 1541661283,
        "uid": 34188,
        "name": "MorsLin",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1607 \u3010[USACO09FEB]\u5e99\u4f1a\u73ed\u8f66Fair Shuttle\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\uff0c\u6309\u7167\u7ed3\u675f\u7684\u65f6\u95f4\u6392\u5e8f\uff0c\u53d6\u6700\u591a\u7684\uff0c\u53ef\u4ee5\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e\u5176\u6700\u4f18\u6027\n\n        \n        \n        \n```cpp\n#include <bits/stdc++.h>\n#define rep( i , l , r ) for( int i = (l) ; i <= (r) ; ++i )\n#define per( i , r , l ) for( int i = (r) ; i >= (l) ; --i )\n#define erep( i , u ) for( int i = head[(u)] ; ~i ; i = e[i].nxt )\n#define PII pair<int,int> \n#define MP make_pair\n#define PB push_back\nusing namespace std;\ninline int _read(){\n    register int x = 0 , f = 1;\n    register char ch = getchar();\n    while( ch > '9' || ch < '0' ) { if( ch == '-' ) f = -1; ch = getchar(); }\n    while( ch >= '0' && ch <= '9' ){\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\nconst int maxn = 20000 + 5;\nint t[maxn];\nvector<PII> g[maxn];\nset<int> s;\n#define now g[i][j].first\n#define own g[i][j].second\n#define head (*s.begin())\n#define rear (*s.rbegin())\nint main(){\n    int M = _read() , N = _read() , c = _read();\n    int u , v , w;\n    while( M-- ){\n        u = _read() , v = _read() , w = _read();\n        g[u].PB( MP( v , w ) );\n    }\n    rep( i , 1 , N ) sort( g[i].begin() , g[i].end() );\n    int res = 0 , incar = 0 , _in = 0;\n    for( int i = 1 , j ; i <= N ; ++i ){\n        while( !s.empty() && head == i ){\n            res += t[head] , incar -= t[head];\n            s.erase( head );\n        }\n        for( j = 0 ; j < g[i].size() && incar < c ; ++j ){\n            _in = min( c - incar , own );\n            t[now] += _in , incar += _in , own -= _in;\n            s.insert( now );\n            if( incar == c ) break; \n        }\n        for( ; j < g[i].size() && rear > now ; ++j ){\n            while( !s.empty() && own ){\n                _in = min( own , t[rear] );\n                t[rear] -= _in , t[now] += _in;\n                s.insert( now );\n                if( !t[rear] ) s.erase( rear );\n                own -= _in;\n            }\n        }\n    } \n    cout << res << endl;\n    return 0;\n}\n\n```",
        "postTime": 1475763515,
        "uid": 22733,
        "name": "eternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1607 \u3010[USACO09FEB]\u5e99\u4f1a\u73ed\u8f66Fair Shuttle\u3011"
    }
]