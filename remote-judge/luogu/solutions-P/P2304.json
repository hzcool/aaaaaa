[
    {
        "content": "# \u9898\u76ee\u5206\u6790\n\n[\u7231\u6211\u8bf7\u6233\u8fd9\u91cc](https://blog.csdn.net/litble/article/details/80463466)\n\n[\u56fe\u6302\u4e86\u8bf7\u6233\u8fd9\u91cc](https://blog.csdn.net/litble/article/details/80463466)\n\n## \u8001\u53f8\u673a\n\u5173\u4e8e\u8001\u53f8\u673a\u7684\u8fd9\u4e00\u90e8\u5206\uff0c\u663e\u800c\u6613\u89c1\u662f\u4e2adp\u3002\u5c06\u7eb5\u5750\u6807\u76f8\u7b49\u7684\u70b9\u7ec4\u6210\u7684\u96c6\u5408\u79f0\u4e3a\u5c42\uff0c\u5219\u6211\u4eec\u8981\u9010\u5c42dp\u3002\n\n\u5c06(0,0)\u8fd9\u4e2a\u70b9\u770b\u4f5c\u4e00\u68f5\u6811\uff0c\u7b97\u51fa\u7b54\u6848\u540e\u518d\u51cf\u53bb\u5b83\u7684\u8d21\u732e\u3002\n\n\u9996\u5148\u9884\u5904\u7406\u51fa\u6bcf\u68f5\u6811\u5411\u5de6\u4e0a\uff0c\u4e0a\uff0c\u53f3\u4e0a\u4f1a\u5230\u54ea\u68f5\u6811\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u79bb\u6563+\u6876\u5b8c\u6210\uff0c\u6b63\u4e0a\u7684\u5904\u7406\u5c31\u662f\u5c06x\u5750\u6807\u653e\u6876\u91cc\uff0c\u5de6\u4e0a\u53f3\u4e0a\u7684\u5c31\u628a\u7ecf\u8fc7\u8be5\u70b9\u7684\u76f4\u7ebf$y=x+b_1$\u548c$y=x-b_2$\u5bf9\u5e94\u7684$b_1$\uff0c$b_2$\u641e\u8fdb\u53bb\u3002\n\n\u7136\u540e\u5c31\u9010\u5c42dp\u6492\uff0c\u5982\u56fe\uff0c\u4f1a\u53d1\u73b0\u5047\u5982\u6211\u4eec\u4ecei\u70b9\u5230\u8fbe\u8be5\u5c42\uff0c\u4ecej\u70b9\u79bb\u5f00\u8be5\u5c42\u3002\u5982\u679c$i<j$\uff0c\u5219\u8be5\u5c42\u5728$j$\u5de6\u8fb9\u7684\u6811\u90fd\u4f1a\u88ab\u8d70\u5230\u3002\u5982\u679c$i>j$\uff0c\u5219\u8be5\u5c42\u5728$j$\u53f3\u8fb9\u7684\u6811\u90fd\u4f1a\u88ab\u8d70\u5230\u3002\u5f53\u7136\u5566\uff0c\u5982\u679c$i=j$\uff0c\u5c31\u53ea\u6709\u8fd9\u68f5\u6811\u4f1a\u88ab\u8d70\u5230\u3002\n\n~~\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u4e00\u5f00\u59cb\u6ca1\u60f3\u6e05\u695a\u5fc5\u987b\u662f\u6ca1\u8bb8\u613f\u7684\u6811\u624d\u80fd\u5728\u6b64\u8f6c\u5411\u800cGG\u4e86\u4e00\u4e2a\u5c0f\u65f6\u5462~~\n\n![\u7075\u9b42\u753b\u624blitble](https://img-blog.csdn.net/20180526170855289?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdGJsZQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe$f(i)$\u8868\u793a\u4ecei\u6811\u8fdb\u5165i\u6240\u5728\u5c42\uff0c\u53ef\u4ee5\u8d70\u7684\u6811\u7684\u6700\u5927\u503c\u3002\u4ecey\u6700\u5927\u7684\u5c42\u5f80y\u6700\u5c0f\u7684\u5904\u7406\uff0c\u5bf9\u6bcf\u4e00\u5c42\u6309x\u6392\u5e8f\u540e\uff0c\u5148\u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d\uff0c\u518d\u4ece\u53f3\u5f80\u5de6\u626b\u4e00\u904d\uff0c\u540c\u65f6\u8bb0\u5f55\u4e00\u79cd\u65b9\u6848\uff08\u8bb0\u5f55\u4ee5i\u8fdb\u5165\u8be5\u5c42\uff0c\u8981\u4ee5\u54ea\u4e2a\u70b9\u51fa\u53bb\u6700\u4f18\u548c\u4ee5j\u51fa\u53bb\uff0c\u662f\u8d70\u5de6\u4e0a\u53f3\u4e0a\u8fd8\u662f\u6b63\u4e0a\uff09\u3002\n\n\u5229\u7528\u6211\u4eec\u8bb0\u5f55\u7684\u4fe1\u606f\u9012\u5f52\u8f93\u51fa\u4e00\u79cd\u65b9\u6848\uff0c\u5373\u53ef\u83b7\u5f9740\u5206\u3002\n\n## \u5c0f\u56ed\u4e01\n\n\u7531\u4e8e\u6709\u6bcf\u5c42\u6811\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc71000\u6216\u53ea\u6709\u4e00\u6761\u8def\u5f84\u7684\u9650\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ecey\u6700\u5c0f\u7684\u5c42\u5f80y\u6700\u5927\u7684\u5904\u7406\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u201c\u53ef\u4ee5\u4f5c\u4e3a\u8fd9\u5c42\u8d77\u70b9\u201d\u7684\u6811i\uff0c\u679a\u4e3e\u8fd9\u5c42\u6240\u6709\u6811j\uff0c\u770b\u662f\u5426\u53ef\u4ee5\u4ecej\u51fa\u53bb\u3002\u5982\u679c\u53ef\u4ee5\uff0c\u90a3\u4e48j\u51fa\u53bb\u8fbe\u5230\u7684\u6811\u4e5f\u8981\u6807\u8bb0\u4e3a\u201c\u53ef\u4ee5\u4f5c\u4e3a\u8fd9\u5c42\u8d77\u70b9\u201d\uff0c\u5982\u6b64\u5982\u6b64\uff0c\u53ef\u4ee5\u5f04\u51fa\u6240\u6709\u9700\u8981\u538b\u8def\u673a\u538b\u7684\u8def\u5f84\uff0c\u4f46\u662f\u5343\u4e07\u522b\u5f04\u51fa\u91cd\u8fb9\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6709\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u7684\u6a21\u578b\uff0c\u5373\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u4e0a\u4e0b\u754c\u4e3a$[1,inf]$\uff0c\u7136\u540e\u5efa\u7acb\u6e90\u70b9$S$\u548c\u6c47\u70b9$T$\uff0c$S$\u5f80\u6bcf\u4e2a\u70b9\u8fde\u4e00\u6761$[0,inf]$\u7684\u8fb9\uff0c\u6bcf\u4e2a\u70b9\u5f80$T$\u8fde\u4e00\u6761$[0,inf]$\u7684\u8fb9\u3002\n\n\u4ec0\u4e48\uff1f\u4f60\u4e0d\u4f1a\u6709\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\uff1f[\u8fd8\u4e0d\u53bb\u5b66!](https://blog.csdn.net/litble/article/details/78757040)\u5c31\u662f\u8fd9\u7bc7\u6587\u7ae0\u8bb2\u7684\u201c\u6709\u6e90\u6c47\u6700\u5c0f\u6d41\u201d\u7684\u6a21\u578b\u3002\n\n\u53ef\u662f\u5982\u679c\u4f60\u6253\u5b8c\uff0c\u5c31TLE\u4e86\u3002\n\n\u4ee5\u4e0b\u6ca1\u770b\u61c2\u6587\u5b57\u8bf7\u76f4\u63a5\u770b\u4ee3\u7801\u3002\n\n\u8fd9\u5f20\u56fe\u7531\u4e8e\u6bd4\u8f83\u7279\u6b8a\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\uff0c\u6211\u4eec\u9996\u5148\u8ba9\u6bcf\u6761\u8fb9\u6d41\u91cf\u7b49\u4e8e\u5176\u4e0b\u754c\uff0c\u90a3\u4e48\u6709\u4e9b\u70b9\u8fdb\u51fa\u4e0d\u5e73\u8861\u4e86\u561b\uff0c\u7531\u4e8e$S$\u548c$T$\u4e0e\u6240\u6709\u70b9\u90fd\u6709\u65e0\u9650\u6d41\u91cf\u7684\u8fb9\uff0c\u6240\u4ee5\u5728\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8ba9\u201c\u79ef\u84c4\u201d\u4e86\u6d41\u91cf\u7684\u70b9\u5c06\u6d41\u91cf\u6392\u5230$T$\uff0c\u201c\u7f3a\u5c11\u201d\u6d41\u91cf\u7684\u70b9\u4ece$S$\u62ff\u4e00\u70b9\u6765\u8865\u5145\uff0c\u90a3\u4e48\u6b64\u65f6\u7684\u6d41\u4e3a\u6240\u6709\u201c\u79ef\u84c4\u201d\u7684\u6d41\u91cf\u4e4b\u548c\u3002\n\n\u7136\u540e\u6211\u5e0c\u671b\u6700\u5c0f\u6d41\uff0c\u4e5f\u5c31\u662f\u60f3\u8ba9\u8fd9\u5f20\u56fe\u81ea\u5df1\u201c\u6d88\u5316\u8c03\u6574\u201d\uff0c\u90a3\u4e48\u6c42\u4e00\u6b21\u8d85\u7ea7\u6e90\u6c47\u4e4b\u95f4\u7684\u6700\u5927\u6d41$kans$\uff0c\u8fd9\u5c31\u662f\u8fd9\u5f20\u56fe\u81ea\u5df1\u4e0d\u7ecf\u8fc7S\u548cT\u505a\u8c03\u8282\u7684\u6700\u5927\u9650\u5ea6\uff0c\u201c\u79ef\u84c4\u201d\u6d41\u91cf\u4e4b\u548c\u51cf\u53bb$kans$\u5c31\u662f\u7b54\u6848\u3002\n\n```cpp\nvoid work2() {\n\tbuild();\n\tS=n+1,T=n+2,ss=n+3,tt=n+4;//\u5443\uff0c\u5176\u5b9e\u8fd9\u4e2aS\u548cT\u53ef\u4ee5\u5220\u6389\n\tfor(RI i=1;i<=n;++i) {\n\t\tif(du[i]>0) adde(ss,i,du[i]),ans+=du[i];//du:\u5982\u679c\u6709[1,inf]\u8fb9(x,y)\uff0c\u90a3\u4e48++du[y],--du[x]\n\t\telse adde(i,tt,-du[i]);\n\t}\n\twhile(bfs(ss,tt)) ans-=dfs(ss,inf,tt);\n\tprintf(\"%d\\n\",ans);\n}\n```\n\n# \u4ee3\u7801\n\n~~\u54c8\u54c8\u54c8\u54c8\u6211\u6ca1\u75af\u653e\u5f00\u6211\u6211\u600e\u4e48\u53ef\u80fd\u6572\u7801\u519c\u9898\u6572\u4e86\u4e00\u4e0b\u5348\u5c31\u75af\u4e86\u5462\u54c8\u54c8\u54c8\u54c8~~\n\n\u5982\u679c\u662f\u8003\u573a\u4e0a\u6211\u80af\u5b9a\u9009\u62e9\u5f03\u7597\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read() {\n\tint q=0,w=1;char ch=' ';\n\twhile(ch!='-'&&(ch<'0'||ch>'9')) ch=getchar();\n\tif(ch=='-') w=-1,ch=getchar();\n\twhile(ch>='0'&&ch<='9') q=q*10+ch-'0',ch=getchar();\n\treturn q*w;\n}\n#define RI register int\nconst int N=50010,inf=0x3f3f3f;\nint n,jsx,jsy,js1,js2;\nstruct node{int x,y,b1,b2,id;}p[N];\nint bx[N],by[N],bb1[N],bb2[N];\n\nint up[N],lup[N],rup[N],f[N],Tx[N],Tb1[N],Tb2[N],bj[N],tx[N],ty[N],gup[N],bup[N];\n//gup:\u5f80\u4e0a\u8d70\u6700\u591a\u8d70\u51e0\u68f5\u6811\uff0cbup:\u5f80\u4e0a\u8d70\u8d70\u6700\u591a\u7684\u6811\uff0c\u4e0b\u4e00\u6b65\u8d70\u5230\u54ea\u9897\u6811,bj:\u8bb0\u5f55\u65b9\u6848,T\u5f00\u5934\u7684\u90fd\u662f\u6876\nbool cmpy(node a,node b) {return a.y>b.y;}\nbool cmpx(node a,node b) {return a.x<b.x;}\nvector<int> iny[N];\nvoid prework() {//\u9884\u5904\u7406\u6bcf\u4e2a\u70b9\u5de6\u4e0a\uff0c\u53f3\u4e0a\uff0c\u6b63\u4e0a\u662f\u90a3\u4e9b\u70b9\n\tsort(bx+1,bx+1+n),sort(by+1,by+1+n);\n\tsort(bb1+1,bb1+1+n),sort(bb2+1,bb2+1+n);\n\tjsx=1;for(RI i=2;i<=n;++i) if(bx[i]!=bx[jsx]) bx[++jsx]=bx[i];\n\tjsy=1;for(RI i=2;i<=n;++i) if(by[i]!=by[jsy]) by[++jsy]=by[i];\n\tjs1=1;for(RI i=2;i<=n;++i) if(bb1[i]!=bb1[js1]) bb1[++js1]=bb1[i];\n\tjs2=1;for(RI i=2;i<=n;++i) if(bb2[i]!=bb2[js2]) bb2[++js2]=bb2[i];\n\tfor(RI i=1;i<=n;++i) {\n\t\tp[i].x=lower_bound(bx+1,bx+1+jsx,p[i].x)-bx,tx[i]=p[i].x;\n\t\tp[i].y=lower_bound(by+1,by+1+jsy,p[i].y)-by,ty[i]=p[i].y;\n\t\tp[i].b1=lower_bound(bb1+1,bb1+1+js1,p[i].b1)-bb1;\n\t\tp[i].b2=lower_bound(bb2+1,bb2+1+js2,p[i].b2)-bb2;\n\t}\n\tsort(p+1,p+1+n,cmpy);\n\tfor(RI i=1;i<=n;++i) {\n\t\tint k=p[i].id;\n\t\tup[k]=Tx[p[i].x],lup[k]=Tb1[p[i].b1],rup[k]=Tb2[p[i].b2];\n\t\tTx[p[i].x]=Tb1[p[i].b1]=Tb2[p[i].b2]=k;\n\t}\n\tsort(p+1,p+1+n,cmpx);\n\tfor(RI i=1;i<=n;++i) iny[p[i].y].push_back(p[i].id);\n}\nvoid print(int num) {//\u8f93\u51fa\u65b9\u6848\n\tint y=ty[num],sz=iny[y].size(),nxt=bj[num];\n\tif(num!=n) printf(\"%d \",num);\n\tif(tx[nxt]<tx[num]) {\n\t\tfor(RI i=0;i<sz;++i)\n\t\t\tif(tx[iny[y][i]]>tx[num]) printf(\"%d \",iny[y][i]);\n\t\tfor(RI i=sz-1;i>=0;--i)\n\t\t\tif(tx[iny[y][i]]<tx[num]&&tx[iny[y][i]]>=tx[nxt]) printf(\"%d \",iny[y][i]);\n\t}\n\telse if(tx[nxt]>tx[num]) {\n\t\tfor(RI i=sz-1;i>=0;--i)\n\t\t\tif(tx[iny[y][i]]<tx[num]) printf(\"%d \",iny[y][i]);\n\t\tfor(RI i=0;i<sz;++i)\n\t\t\tif(tx[iny[y][i]]>tx[num]&&tx[iny[y][i]]<=tx[nxt]) printf(\"%d \",iny[y][i]);\n\t}\n\tif(bup[nxt]) print(bup[nxt]);\n}\nvoid work1() {//DP\u4e3b\u4f53\n\tprework();\n\tfor(RI y=jsy;y>=1;--y) {\n\t\tint kmx=0,kbj=0,sz=iny[y].size();\n\t\tfor(RI i=0;i<sz;++i) {\n\t\t\tint k=iny[y][i];\n\t\t\tif(up[k]&&f[up[k]]>gup[k]) gup[k]=f[up[k]],bup[k]=up[k];\n\t\t\tif(lup[k]&&f[lup[k]]>gup[k]) gup[k]=f[lup[k]],bup[k]=lup[k];\n\t\t\tif(rup[k]&&f[rup[k]]>gup[k]) gup[k]=f[rup[k]],bup[k]=rup[k];\n\t\t\tf[k]=kmx,bj[k]=kbj;\n\t\t\tif(sz-i+gup[k]>kmx) kmx=sz-i+gup[k],kbj=k;\n\t\t}\n\t\tkmx=kbj=0;\n\t\tfor(RI i=sz-1;i>=0;--i) {\n\t\t\tint k=iny[y][i];\n\t\t\tif(kmx>f[k]) f[k]=kmx,bj[k]=kbj;\n\t\t\tif(gup[k]+1>f[k]) f[k]=gup[k]+1,bj[k]=k;\n\t\t\tif(i+1+gup[k]>kmx) kmx=i+1+gup[k],kbj=k;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",f[n]-1),print(n),puts(\"\");\n}\n\nint tot=1,S,T,ss,tt,ans;\nint ok[N],du[N],h[N],ne[N*10],to[N*10],flow[N*10],lev[N],q[N];\nvoid adde(int x,int y,int z) {\n\tto[++tot]=y,ne[tot]=h[x],h[x]=tot,flow[tot]=z;\n\tto[++tot]=x,ne[tot]=h[y],h[y]=tot,flow[tot]=0;\n}\nvoid add(int x,int y) {\n\tfor(RI i=h[x];i;i=ne[i]) if(to[i]==y) return;//\u6ce8\u610f\u4e0d\u8981\u91cd\u590d\uff08\u7531\u4e8e\u6570\u636e\u7279\u6b8a\u6027\u4e0d\u4f1a\u5f88\u6162\uff09\n\tok[y]=1,++du[y],--du[x],adde(x,y,inf);\n}\nvoid calc(int y,int i) {//\u66b4\u529b\u67e5\u770b\u7b26\u5408\u6761\u4ef6\u7684\u70b9\n\tint sz=iny[y].size(),num=iny[y][i];\n\tfor(RI j=0;j<i;++j) {\n\t\tint k=iny[y][j];\n\t\tif(up[k]&&f[up[k]]+sz-j==f[num]) add(k,up[k]);\n\t\tif(lup[k]&&f[lup[k]]+sz-j==f[num]) add(k,lup[k]);\n\t\tif(rup[k]&&f[rup[k]]+sz-j==f[num]) add(k,rup[k]);\n\t}\n\tfor(RI j=i+1;j<sz;++j) {\n\t\tint k=iny[y][j];\n\t\tif(up[k]&&f[up[k]]+j+1==f[num]) add(k,up[k]);\n\t\tif(lup[k]&&f[lup[k]]+j+1==f[num]) add(k,lup[k]);\n\t\tif(rup[k]&&f[rup[k]]+j+1==f[num]) add(k,rup[k]);\n\t}\n\tif(up[num]&&f[up[num]]+1==f[num]) add(num,up[num]);\n\tif(lup[num]&&f[lup[num]]+1==f[num]) add(num,lup[num]);\n\tif(rup[num]&&f[rup[num]]+1==f[num]) add(num,rup[num]);\n}\nvoid build() {//\u7f51\u7edc\u6d41\u5efa\u56fe\n\tok[n]=1;\n\tfor(RI y=1;y<=jsy;++y) {\n\t\tint sz=iny[y].size();\n\t\tfor(RI i=0;i<sz;++i) if(ok[iny[y][i]]) calc(y,i);\n\t}\n}\nint dfs(int x,int liu,int t) {//dinic\u7684dfs\n\tif(x==t) return liu;\n\tint kl,sum=0;\n\tfor(RI i=h[x];i;i=ne[i])\n\t\tif(flow[i]>0&&lev[to[i]]==lev[x]+1) {\n\t\t\tkl=dfs(to[i],min(flow[i],liu-sum),t);\n\t\t\tsum+=kl,flow[i]-=kl,flow[i^1]+=kl;\n\t\t\tif(sum==liu) return sum;\n\t\t}\n\tif(!sum) lev[x]=-1;\n\treturn sum;\n}\nint bfs(int s,int t) {//dinic\u7684bfs\n\tfor(RI i=1;i<=n+4;++i) lev[i]=0;\n\tint he=1,ta=1; lev[s]=1,q[1]=s;\n\twhile(he<=ta) {\n\t\tint x=q[he];++he;\n\t\tif(x==t) return 1;\n\t\tfor(RI i=h[x];i;i=ne[i])\n\t\t\tif(flow[i]>0&&!lev[to[i]])\n\t\t\t\tlev[to[i]]=lev[x]+1,q[++ta]=to[i];\n\t}\n\treturn 0;\n}\nvoid work2() {\n\tbuild();\n\tS=n+1,T=n+2,ss=n+3,tt=n+4;\n\tfor(RI i=1;i<=n;++i) {\n\t\tif(du[i]>0) adde(ss,i,du[i]),ans+=du[i];\n\t\telse adde(i,tt,-du[i]);\n\t}\n\twhile(bfs(ss,tt)) ans-=dfs(ss,inf,tt);\n\tprintf(\"%d\\n\",ans);\n}\n\nint main()\n{\n\tn=read();\n\tfor(RI i=1;i<=n;++i) {\n\t\tbx[i]=p[i].x=read(),by[i]=p[i].y=read();\n\t\tbb1[i]=p[i].b1=p[i].y-p[i].x,bb2[i]=p[i].b2=p[i].x+p[i].y;\n\t\tp[i].id=i;\n\t}\n\t++n,p[n].id=n;\n\twork1(),work2();\n    return 0;\n}\n```\n",
        "postTime": 1527326852,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2304 \u3010[NOI2015]\u5c0f\u56ed\u4e01\u4e0e\u8001\u53f8\u673a\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a **\u4e0d\u4f9d\u8d56\u4e8e\u9898\u9762\u4e2d\u7ed9\u51fa\u7684\u300c\u4ec5\u6709\u4e00\u6761\u6700\u4f18\u8def\u5f84\u6216\u8005 $y$ \u76f8\u540c\u7684\u6811\u4e0d\u8d85\u8fc7 $1000$ \u68f5\u300d\u8fd9\u4e00\u9650\u5236** \u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u5bf9\u4e8e Mr. P \u7684\u90e8\u5206\u6709\u4e00\u4e2a DP\uff1a\n\n\u8003\u8651\u6bcf\u4e00\u5c42\uff0c\u8fd9\u4e00\u5c42\u6709\u82e5\u5e72\u4e2a\u70b9\uff0c\u5f62\u6210\u4e00\u6761\u94fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0iq58rm6.png)\n\n\u7136\u540e\uff0c\u8003\u8651\u5728\u8fd9\u4e00\u5c42\u4ece\u4e00\u4e2a\u70b9\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u5982\u4f55\u6700\u5927\u5316\u7ecf\u8fc7\u7684\u70b9\u6570\u3002\n\n\u53d1\u73b0\uff1a\n\n- \u5f53\u6211\u4eec\u8981\u4ece\u5de6\u8fb9\u7684\u67d0\u4e2a\u70b9\u79fb\u52a8\u5230\u53f3\u8fb9\u7684\u67d0\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7ecf\u8fc7\u6240\u6709\u5de6\u8fb9\u7684\u8fd9\u4e2a\u70b9\u5de6\u8fb9\u7684\u70b9\u3002\u4f8b\u5982\u4e0a\u56fe\u4ece $3$ \u79fb\u52a8\u5230 $4$\uff0c\u6700\u4f18\u65b9\u6848\u4e00\u5b9a\u662f $3\\rightarrow 2\\rightarrow 1\\rightarrow 4$\u3002\n- \u5f53\u6211\u4eec\u8981\u4ece\u53f3\u8fb9\u7684\u67d0\u4e2a\u70b9\u79fb\u52a8\u5230\u5de6\u8fb9\u7684\u67d0\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7ecf\u8fc7\u6240\u6709\u53f3\u8fb9\u7684\u8fd9\u4e2a\u70b9\u53f3\u8fb9\u7684\u70b9\u3002\u4f8b\u5982\u4e0a\u56fe\u4ece $4$ \u79fb\u52a8\u5230 $2$\uff0c\u6700\u4f18\u65b9\u6848\u4e00\u5b9a\u662f $4\\rightarrow 5\\rightarrow 3\\rightarrow 2$\u3002\n\n\u6240\u4ee5\u5bf9\u5411\u5de6\u8d70\u548c\u5411\u53f3\u8d70\u5206\u5f00\u5efa\u56fe\uff0c\u518d\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u5728\u56fe\u91cc\u9762\u5efa\u4e00\u4e2a\u70b9\u7528\u4e8e\u5411\u5916\u8fde\u8fb9\u3002\u663e\u7136\u6bcf\u5411\u5de6/\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\u5c31\u591a 1 \u4e2a\u8bb8\u613f\u7684\u4f4d\u7f6e\uff0c\u800c\u4ece\u5728\u94fe\u4e0a\u79fb\u52a8\u7684\u70b9\u8d70\u5230\u79bb\u5f00\u8fd9\u6761\u94fe\u7684\u70b9\u663e\u7136\u4e0d\u4f1a\u591a\u8d21\u732e\u3002\u5efa\u51fa\u6709\u6743\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bvhlhbjl.png)\n\n\u8fd9\u6837\uff0c\u5982\u679c\u4e00\u4e2a\u70b9 $S$ \u53ef\u4ee5\u5230\u70b9 $3$\uff0c\u90a3\u4e48\u5728\u65b0\u56fe\u4e0a\u4f53\u73b0\u4e3a\uff1a\n\n1. \u4e0d\u5728\u94fe\u4e0a\u79fb\u52a8\uff1a$S$ \u5411 $3\\text{U}$ \u8fde\u6743\u503c\u4e3a $1$ \u7684\u8fb9\u3002\n2. \u5728\u94fe\u4e0a\u5411\u5de6\u79fb\u52a8\uff1a$S$ \u5411 $\\text{2L}$ \u8fde\u6743\u503c\u4e3a $(5-3+1)+1=4$ \u7684\u8fb9\u3002\uff08**\u6ce8\u610f\u4e0d\u662f\u5411 $\\text{3L}$ \u8fde\u8fb9\uff0c\u56e0\u4e3a\u5fc5\u987b\u5411\u5de6\u79fb\u52a8\u624d\u80fd\u83b7\u5f97\u53f3\u8fb9\u7684\u70b9**\uff09\n3. \u5728\u94fe\u4e0a\u5411\u53f3\u79fb\u52a8\uff1a\u7c7b\u4f3c\u5411\u5de6\uff0c$S$ \u5411 $\\text{4R}$ \u8fde\u6743\u503c\u4e3a $3+1=4$ \u7684\u8fb9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/o42c795c.png)\n\n\u8fd9\u663e\u7136\u662f\u4e00\u4e2a DAG\u3002\u4e0d\u59a8\u8bbe $(0,0)$ \u4e3a\u70b9 $n+1$\uff0c\u4ece $(n+1)\\text U$ \u5f00\u59cb\u5728 DAG \u4e0a\u6c42\u6700\u957f\u8def\uff0c\u5c31\u662f\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u4e86\u3002\n\n\u4efb\u610f\u53d6\u4e00\u6761\u6700\u957f\u8def\u51fa\u6765\uff0c\u6309\u987a\u5e8f\u8003\u8651\u8fb9\u7684\u79cd\u7c7b\uff1a\n\n- $a\\text U\\rightarrow b\\text U$\uff1a\u8f93\u51fa $b$\u3002\n- $a\\text U\\rightarrow b\\text L$\uff1a\u8f93\u51fa $b$ \u4ee5\u53ca $b$ \u53f3\u8fb9\u7684\u6240\u6709\u70b9\u3002\n- $a\\text U\\rightarrow b\\text R$\uff1a\u8f93\u51fa $b$ \u4ee5\u53ca $b$ \u5de6\u8fb9\u7684\u6240\u6709\u70b9\u3002\n- $a\\text L\\rightarrow b\\text L$\uff1a\u8f93\u51fa $b$\u3002\n- $a\\text R\\rightarrow b\\text R$\uff1a\u8f93\u51fa $b$\u3002\n- \u5176\u4ed6\u7c7b\u578b\u7684\u8fb9\uff1a\u4ec0\u4e48\u4e5f\u4e0d\u8f93\u51fa\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u51b3\u6389\u7b2c\u4e8c\u95ee\u3002\n\n\u7b2c\u4e09\u95ee\u5f88\u7b80\u5355\uff0c\u5efa\u4e00\u4e2a\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\uff0c\u76f4\u63a5\u4ece\u539f\u70b9\u5f00\u59cb DFS\uff0c\u8003\u8651\u6240\u6709 $a\\text U\\rightarrow b\\text{U/L/R}$ \u7684\u8fb9\uff0c\u5982\u679c $a\\text U$ \u7684 DP \u503c\u7b49\u4e8e\u5bf9\u5e94\u8fb9\u7684\u7ec8\u70b9\u7684 DP \u503c\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u5c31\u53ef\u4ee5\u5728\u6700\u957f\u8def\u4e0a\uff0c\u5728\u7f51\u7edc\u4e2d\u5efa\u4e00\u6761\u4ece $a$ \u5230 $b$\uff08\u6ce8\u610f\u5728\u7f51\u7edc\u4e2d\u4e0d\u9700\u8981\u4f53\u73b0\u51fa $\\text{U/L/R}$ \u7684\u533a\u522b\uff09\uff0c\u4e0b\u754c\u4e3a $1$\uff0c\u4e0a\u754c\u4e3a $+\\infty$ \u7684\u8fb9\u3002\n\n\u7136\u540e\u4ece $0$ \u5411\u6240\u6709\u70b9\u8fde\u4e0b\u754c $0$\uff0c\u4e0a\u754c $+\\infty$ \u7684\u8fb9\uff1b\u4ece\u6240\u6709\u70b9\u5411 $T$ \u8fde\u4e0b\u754c $0$\uff0c\u4e0a\u754c $+\\infty$ \u7684\u8fb9\u3002\n\n\u4ece $S$ \u5230 $T$ \u8dd1\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41\uff0c\u5c31\u662f\u7b2c\u4e09\u95ee\u7684\u7b54\u6848\u4e86\u3002\n\n\u590d\u6742\u5ea6 $O(\\text{Dinic})$\u3002\u7531\u4e8e\u8fd9\u9898\u7684\u56fe\u4e0d\u662f\u4efb\u610f\u7ed9\u5b9a\u6240\u4ee5\u8dd1\u5f97\u975e\u5e38\u5feb\u3002\n\n```cpp\nstruct Edge {\n\tint to, nxt, len;\n\tEdge() {\n\t\tnxt = -1;\n\t}\n};\nEdge e[1000005];\nint n, hd[150055], pnt, x[50055], y[50055], s[50055], d[50055], tmp[50055], lcnt[50055], rcnt[50055], dp[150055], vi[50055], vj[50055];\nbool vis[150055];\nvector <int> vc[50055], vc2[50055];\nvector <pair <int, int> > gt[150005];\n\nnamespace Dinic {\n\tstruct Edge2 {\n\t\tint to, nxt, cap;\n\t\tEdge2() {\n\t\t\tnxt = -1;\n\t\t}\n\t};\n\tint hd[50055], pnt, d[50055], iter[50055], lv[50055];\n\tEdge2 e[3000015];\n\tset <int> st[50055];\n\tinline void AddEdge(int u, int v, int l, int r) {\n\t\tif (st[u].find(v) != st[u].end()) return;\n\t\tif (l) st[u].insert(v);\n\t\td[u] -= l; d[v] += l;\n\t\te[pnt].to = v;\n\t\te[pnt].nxt = hd[u];\n\t\te[pnt].cap = r - l;\n\t\thd[u] = pnt;\n\t\tpnt++;\n\t\te[pnt].to = u;\n\t\te[pnt].nxt = hd[v];\n\t\te[pnt].cap = 0;\n\t\thd[v] = pnt;\n\t\tpnt++;\n\t}\n\tinline void Bfs(int s) {\n\t\tqueue <int> que;\n\t\tque.push(s);\n\t\tmemset(lv, -1, sizeof(lv));\n\t\tlv[s] = 0;\n\t\twhile (!que.empty()) {\n\t\t\tint u = que.front();\n\t\t\tque.pop();\n\t\t\tfor (int i = hd[u];~i;i = e[i].nxt) {\n\t\t\t\tif (e[i].cap && !~lv[e[i].to]) {\n\t\t\t\t\tlv[e[i].to] = lv[u] + 1;\n\t\t\t\t\tque.push(e[i].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tinline int Dfs(int u, int t, int f) {\n\t\tif (u == t) return f;\n\t\tint flw = 0;\n\t\tfor (int &i = iter[u];~i;i = e[i].nxt) {\n\t\t\tif (e[i].cap && lv[e[i].to] == lv[u] + 1) {\n\t\t\t\tint d = Dfs(e[i].to, t, Min(f - flw, e[i].cap));\n\t\t\t\tif (d) {\n\t\t\t\t\tflw += d;\n\t\t\t\t\te[i].cap -= d;\n\t\t\t\t\te[i ^ 1].cap += d;\n\t\t\t\t} else lv[e[i].to] = -1;\n\t\t\t}\n\t\t\tif (flw == f) break;\n\t\t}\n\t\treturn flw;\n\t}\n\tinline int Flow(int s, int t) {\n\t\tint ans = 0;\n\t\tfor (;;) {\n\t\t\tBfs(s);\n\t\t\tif (!~lv[t]) break;\n\t\t\tmemcpy(iter, hd, sizeof(iter));\n\t\t\tans += Dfs(s, t, 0x3f3f3f3f);\n\t\t}\n\t\treturn ans;\n\t}\n\tinline int solve(int s, int t) {\n\t\tint ans = 0;\n\t\tfor (int i = s;i <= t;i++) {\n\t\t\tif (d[i] > 0) AddEdge(t + 1, i, 0, d[i]), ans += d[i];\n\t\t\tif (d[i] < 0) AddEdge(i, t + 2, 0, -d[i]);\n\t\t}\n\t\tans -= Dinic::Flow(t + 1, t + 2);\n\t\t//AddEdge(t, s, 0, 0x3f3f3f3f);\n\t\t//Dinic::Flow(t + 1, t + 2);\n\t\treturn ans;\n\t}\n}\n\ninline void AddEdge(int u, int v, int w) {\n\t//printf(\"%d->%d %d\\n\", u, v, w);\n\te[++pnt].to = v;\n\te[pnt].len = w;\n\te[pnt].nxt = hd[u];\n\thd[u] = pnt;\n\tgt[v].push_back(make_pair(u, w));\n}\n\ninline void Read() {\n\tn = qread();\n\tfor (int i = 1;i <= n;i++) {\n\t\tx[i] = qread(); y[i] = qread();\n\t\ts[i] = x[i] + y[i];\n\t\td[i] = x[i] - y[i];\n\t}\n\tn++;\n}\n\ninline bool cmp1(int i, int j) {\n\treturn y[i] < y[j];\n}\n\ninline bool cmp2(int i, int j) {\n\treturn x[i] < x[j];\n}\n\ninline void Construct(int *x, bool clr) {\n\tmemcpy(tmp, x, sizeof(tmp));\n\tsort(tmp + 1, tmp + n + 1);\n\tfor (int i = 1;i <= n;i++) {\n\t\tint cur = lower_bound(tmp + 1, tmp + n + 1, x[i]) - tmp;\n\t\tvc[cur].push_back(i);\n\t}\n\tfor (int i = 1;i <= n;i++) sort(vc[i].begin(), vc[i].end(), cmp1);\n\tif (clr) {\n\t\tfor (int i = 1;i <= n;i++) {\n\t\t\tint siz = vc[i].size();\n\t\t\tfor (int j = 0;j < siz - 1;j++) {\n\t\t\t\tAddEdge(vc[i][j] + 2 * n, vc[i][j + 1] + 2 * n, 1);\n\t\t\t\tint nxt = vj[vc[i][j + 1]] + 1;\n\t\t\t\tif (nxt < vc2[vi[vc[i][j + 1]]].size()) AddEdge(vc[i][j] + 2 * n, vc2[vi[vc[i][j + 1]]][nxt] + n, lcnt[vc[i][j + 1]] + 1);\n\t\t\t\tint pre = vj[vc[i][j + 1]] - 1;\n\t\t\t\tif (pre >= 0) AddEdge(vc[i][j] + 2 * n, vc2[vi[vc[i][j + 1]]][pre], rcnt[vc[i][j + 1]] + 1);\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1;i <= n;i++) vc[i].clear();\n\t}\n}\n\ninline void BuildG() {\n\t// horizontal\n\tmemcpy(tmp, y, sizeof(tmp));\n\tsort(tmp + 1, tmp + n + 1);\n\tfor (int i = 1;i <= n;i++) {\n\t\tvi[i] = lower_bound(tmp + 1, tmp + n + 1, y[i]) - tmp;\n\t\tvc2[vi[i]].push_back(i);\n\t}\n\tfor (int i = 1;i <= n;i++) sort(vc2[i].begin(), vc2[i].end(), cmp2);\n\tfor (int i = 1;i <= n;i++) {\n\t\tint siz = vc2[i].size();\n\t\tfor (int j = 0;j < siz;j++) {\n\t\t\tvj[vc2[i][j]] = j;\n\t\t\tlcnt[vc2[i][j]] = j + 1;\n\t\t\trcnt[vc2[i][j]] = siz - j;\n\t\t}\n\t\tfor (int j = 0;j < siz - 1;j++) {\n\t\t\tAddEdge(vc2[i][j + 1], vc2[i][j], 1);\n\t\t\tAddEdge(vc2[i][j] + n, vc2[i][j + 1] + n, 1);\n\t\t}\n\t}\n\t//printf(\"(%d,%d)\\n\", lcnt[1], rcnt[1]);\n\tConstruct(x, 1);\n\tConstruct(d, 1);\n\tConstruct(s, 1);\n\tfor (int i = 1;i <= n;i++) {\n\t\tAddEdge(i, 2 * n + i, 0);\n\t\tAddEdge(i + n, 2 * n + i, 0);\n\t}\n\tAddEdge(3 * n + 1, n, 0); AddEdge(3 * n + 1, 2 * n, 0); AddEdge(3 * n + 1, 3 * n, 0);\n}\n\ninline int Dfs(int u) {\n\tif (vis[u]) return dp[u];\n\t//printf(\"DFS %d\\n\", u);\n\tvis[u] = 1;\n\tfor (int i = hd[u];~i;i = e[i].nxt) {\n\t\tdp[u] = Max(dp[u], Dfs(e[i].to) + e[i].len);\n\t}\n\treturn dp[u];\n}\n\ninline void Dfs2(int u) {\n\tfor (int i = hd[u];~i;i = e[i].nxt) {\n\t\tif (dp[e[i].to] + e[i].len == dp[u]) {\n\t\t\tint v = e[i].to;\n\t\t\tif (u > 2 * n && u <= 3 * n && v <= 3 * n) {\n\t\t\t\tif (v <= n) {\n\t\t\t\t\tint siz = vc2[vi[v]].size();\n\t\t\t\t\t//printf(\"v=%d vi=%d vj=%d siz=%d\\n\", v, vj[v], siz);\n\t\t\t\t\tfor (int j = vj[v] + 1;j < siz;j++) printf(\"%d \", vc2[vi[v]][j]);\n\t\t\t\t\tprintf(\"%d \", (v - 1) % n + 1);\n\t\t\t\t} else if (v <= 2 * n) {\n\t\t\t\t\tfor (int j = vj[v - n] - 1;j >= 0;j--) printf(\"%d \", vc2[vi[v - n]][j]);\n\t\t\t\t\tprintf(\"%d \", (v - 1) % n + 1);\n\t\t\t\t} else {\n\t\t\t\t\tprintf(\"%d \", (v - 1) % n + 1);\n\t\t\t\t}\n\t\t\t} else if (v <= 2 * n) printf(\"%d \", (v - 1) % n + 1);\n\t\t\t//printf(\"v=%d\\n\", v);\n\t\t\tDfs2(v);\n\t\t\treturn;\n\t\t}\n\t}\n}\n\ninline void Dfs3(int u) {\n\tif (vis[u]) return;\n\tvis[u] = 1;\n\tfor (int i = hd[u];~i;i = e[i].nxt) {\n\t\tif (dp[e[i].to] + e[i].len == dp[u]) {\n\t\t\tint v = e[i].to;\n\t\t\tif (u > 2 * n && u <= 3 * n && v <= 3 * n) {\n\t\t\t\tif (v <= n) {\n\t\t\t\t\tint nxt = vc2[vi[v]][vj[v] + 1];\n\t\t\t\t\tDinic::AddEdge(u - 2 * n, nxt, 1, 0x3f3f3f3f);\n\t\t\t\t} else if (v <= 2 * n) {\n\t\t\t\t\tint pre = vc2[vi[v - n]][vj[v - n] - 1];\n\t\t\t\t\tDinic::AddEdge(u - 2 * n, pre, 1, 0x3f3f3f3f);\n\t\t\t\t} else Dinic::AddEdge(u - 2 * n, v - 2 * n, 1, 0x3f3f3f3f);\n\t\t\t}\n\t\t\t//printf(\"v=%d\\n\", v);\n\t\t\tDfs3(v);\n\t\t}\n\t}\n}\n\ninline void Solve() {\n\tmemset(Dinic::hd, -1, sizeof(Dinic::hd));\n\tmemset(vis, 0, sizeof(vis));\n\tDfs3(3 * n + 1);\n\tprintf(\"%d\", Dinic::solve(0, n + 1));\n}\n```",
        "postTime": 1619942919,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2304 \u3010[NOI2015] \u5c0f\u56ed\u4e01\u4e0e\u8001\u53f8\u673a\u3011"
    },
    {
        "content": "\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5728\u975e\u5de6\u53f3\u65b9\u5411\u79bb\u8be5\u70b9\u6700\u8fd1\u7684\u70b9\uff0c\u7136\u540e\u4ee5\u7eb5\u5750\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u6a2a\u5750\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002\u4ee5\u7eb5\u5750\u6807\u4e3a\u9636\u6bb5\u505adp\uff0c\u540c\u5c42\u7684\u4e5f\u505adp\u3002\u8fd9\u91cc\u53ea\u8bb2\u540c\u5c42\u5982\u4f55dp\u3002\n\n\u679a\u4e3e\u4ece\u54ea\u4e00\u4e2a\u70b9\u5411\u4e0a\u8d70(i)\uff0c\u5047\u8bbe\u4e4b\u524d\u5728\u4e0b\u4e00\u5c42\u5f80\u4e0a\u8d70\u5230j\uff0c\u5982\u679cxj<xi\uff0c\u90a3\u4e48\u4e0ei\u540c\u5c42\u7684\uff0c\u4e14\u5728i\u5de6\u8fb9\u7684\u90fd\u53ef\u4ee5\u5230\u8fbe\uff08\u4ecej\u8d70\u5230\u540c\u5c42\u7684\u6700\u5de6\u8fb9\uff0c\u7136\u540e\u8d70\u5230j+1\uff0c\u518d\u8d70\u5230i\uff09\uff0c\u5982\u679cxi<xj\uff0c\u90a3\u4e48\u4e0ei\u540c\u5c42\u7684\uff0c\u4e14\u5728i\u53f3\u8fb9\u7684\u90fd\u53ef\u4ee5\u5230\u8fbe\uff08\u4ecej\u8d70\u5230\u540c\u5c42\u7684\u6700\u53f3\u8fb9\uff0c\u7136\u540e\u8d70\u5230j\u22121,\u518d\u8d70\u5230i\uff09\uff0c\u90a3\u4e48\u6b63\u5411\u505a\u4e00\u6b21\uff0c\u53cd\u5411\u505a\u4e00\u6b21\u5c31\u53ef\u4ee5\u77e5\u9053\u6700\u5927\u503c\u4e86\uff0c\u540c\u65f6\u8bb0\u4f4f\u65b9\u6848\u3002\n\n\u6839\u636e\u65b9\u6848\u5c06\u975e\u5de6\u53f3\u65b9\u5411\u7684\u8fb9\u627e\u51fa\uff0c\u5e76\u6784\u51fa\u65b0\u56fe\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u591a\u6761\u6700\u957f\u8def\u5f84\u540c\u65f6\u7ecf\u8fc7\u67d0\u4e9b\u8fb9\uff0c\u56e0\u6b64\u6bcf\u6761\u8fb9\u7684\u4e0b\u754c\u4e3a1\uff0c\u505a\u4e00\u6b21\u6700\u5c0f\u6d41\u5373\u53ef\u3002\n",
        "postTime": 1442579649,
        "uid": 5390,
        "name": "jamespaul",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2304 \u3010\u5c0f\u56ed\u4e01\u4e0e\u8001\u53f8\u673a\u3011"
    },
    {
        "content": "**\u6bcf\u5468\u6587\u7ae0\u8ba1\u5212 2021.12 \u7b2c\u56db\u5468**\n\n\u89e3\u6cd5\u5176\u5b9e\u6700\u9876\u4e0a\u7684\u9898\u89e3\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u6765\u8865\u5145\u4e00\u4e9b\u5b9e\u73b0\u7ec6\u8282\u4ee5\u53ca\u6ce8\u91ca\u4ee3\u7801\n\n\u7ba1\u7406\u6c42\u8fc7\n\n\u9884\u5904\u7406\u65f6\u4ece\u4e0a\u5f80\u4e0b\u9884\u5904\u7406\u6bcf\u4e00\u884c\uff0c\u7528\u4e09\u4e2a\u6876\u5904\u7406\u6bcf\u6761\u7ad6\u7ebf\u548c\u659c\u7ebf\u5728\u8fd9\u4e00\u5c42\u4ea4\u7684\u70b9\uff0c\u4e4b\u540e\u6bcf\u4e00\u5c42\u4ece\u4e0a\u4e00\u5c42\u7684\u6876\u91cc\u63d0\u53d6\u70b9\n\n$dp$ \u65f6\u4f9d\u65e7\u662f\u4ece\u4e0a\u5f80\u4e0b\u5904\u7406\u6bcf\u4e00\u5c42\uff0c\u5148\u5904\u7406\u51fa\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u51fa\u70b9\u5230\u4e0a\u4e00\u5c42\u7684\u6700\u5927\u503c\uff0c\u5728\u5904\u7406\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u5165\u70b9\u5230\u8fd9\u4e00\u5c42\u51fa\u53bb\u7684\u6700\u5927\u503c\uff0c\u8bb0\u4e0b\u540e\u9a71\uff0c\u4ee5\u4fbf\u8f93\u51fa\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u7f51\u7edc\u6d41\uff0c\u56e0\u4e3a\u8981\u6c42\u6bcf\u4e2a\u975e\u5de6\u53f3\u8fb9\u81f3\u5c11\u6709\u4e00\u4e2a\u8f67\u8def\u673a\u7ecf\u8fc7\uff0c\u6240\u4ee5\u662f\u8dd1\u6709\u4e0b\u754c\u7684\u6700\u5c0f\u7f51\u7edc\u6d41\uff0c\u5177\u4f53\u5efa\u6a21\u65b9\u6cd5\u89c1\u6700\u4e0a\u3002\n\n\u4ee3\u7801\u624d\u662f\u91cd\u70b9\n\n```cpp\n//Linky\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 50010\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nstruct node{\n\tint x,y,b1,b2,id;\n}p[N];\nint n,bx[N],by[N],tb1[N],tb2[N];//\u7528\u4e8e\u79bb\u6563 \nint tx[N],ty[N]; //\u672a\u6392\u5e8f\u7f16\u53f7\u4e0b\u7684xy \nint up[N]/*\u5411\u4e0a\u8d70*/,rup[N]/*\u5411\u53f3\u4e0a\u8d70*/,lup[N]/*\u5411\u5de6\u4e0a\u8d70*/; \nint bacx[N],bacb1[N],bacb2[N];//\u4e0a\u4e00\u5c42\u5728x\u7684\u70b9\uff0c\u4e0a\u4e00\u5c42\u5728b1\u659c\u7ebf\u7684\u70b9\uff0c\u4e0a\u4e00\u5c42\u5728b2\u659c\u7ebf\u7684\u70b9 \nvector<int> row[N];\nbool cmp1(node a1,node a2) {return a1.y>a2.y;}\nbool cmp2(node a1,node a2) {return a1.x<a2.x;}\nint t1,t2,t3,t4;\nint lst[N]/*\u4e0d\u540c\u5c42\u540e\u9a71\u70b9*/;\nint cen[N]/*\u540c\u5c42\u540e\u9a71\u70b9*/; \nint f[N]/*\u4ece\u6b64\u70b9\u8fdb\u5165\u7684\u6700\u5927\u6743\u503c*/;\nint gup[N]/*\u4ece\u6b64\u70b9\u5f80\u4e0a\u8d70\u7684\u6700\u5927\u503c*/;\nvoid prework() {\n\tsort(bx+1,bx+n+1),sort(by+1,by+n+1);\n\tsort(tb1+1,tb1+n+1),sort(tb2+1,tb2+n+1);\n\tt1=unique(bx+1,bx+n+1)-bx-1;\n\tt2=unique(by+1,by+n+1)-by-1;\n\tt3=unique(tb1+1,tb1+n+1)-tb1-1;\n\tt4=unique(tb2+1,tb2+n+1)-tb2-1;\n\tfor(int i=1; i<=n; i++) {\n\t\tp[i].x=lower_bound(bx+1,bx+t1+1,p[i].x)-bx,tx[i]=p[i].x;\n\t\tp[i].y=lower_bound(by+1,by+t2+1,p[i].y)-by,ty[i]=p[i].y;\n\t\t//tx,ty\u8bb0\u5f55\u539f\u7f16\u53f7\u7684xy \n\t\tp[i].b1=lower_bound(tb1+1,tb1+t3+1,p[i].b1)-tb1;\n\t\tp[i].b2=lower_bound(tb2+1,tb2+t4+1,p[i].b2)-tb2;\n\t}\n\tsort(p+1,p+n+1,cmp1);\n\tfor(int i=1; i<=n; i++) {\n\t\tint id=p[i].id;\n\t\tup[id]=bacx[p[i].x];\n\t\trup[id]=bacb1[p[i].b1];\n\t\tlup[id]=bacb2[p[i].b2]; \n\t\tbacx[p[i].x]=bacb1[p[i].b1]=bacb2[p[i].b2]=id;\n\t}\n\tsort(p+1,p+n+1,cmp2);\n\tfor(int i=1; i<=n; i++) row[p[i].y].push_back(p[i].id);\n}\nvoid print(int num)//\u8f93\u51fa\u65b9\u6848\n{\n    int y=ty[num],siz=row[y].size(),nxt=cen[num];\n\tif(num!=n) printf(\"%d \",num);\t\n\tif(tx[nxt]<tx[num]) {//\u53f3\u8fdb\u5de6\u51fa\n\t    for(int i=0; i<siz; i++)\n\t\t    if(tx[row[y][i]]>tx[num]) printf(\"%d \",row[y][i]);//\u5148\u8f93\u51fa\u8fdb\u70b9\u53f3\u8fb9\n\t\tfor(int i=siz-1; i>=0; i--)\n\t\t    if(tx[row[y][i]]<tx[num]&&tx[row[y][i]]>=tx[nxt]) printf(\"%d \",row[y][i]);//\u8f93\u51fa\u8fdb\u70b9\u5230\u51fa\u70b9\u4e4b\u95f4\u7684 \t\t\n\t}  else if(tx[nxt]>tx[num]) {//\u5de6\u8fdb\u53f3\u51fa\uff0c\u4ee5\u4e0b\u540c\u7406 \n\t\tfor(int i=siz-1; i>=0; i--)\n\t\t    if(tx[row[y][i]]<tx[num]) printf(\"%d \",row[y][i]);\n\t\tfor(int i=0; i<siz; i++)\n\t\t    if(tx[row[y][i]]>tx[num]&&tx[row[y][i]]<=tx[nxt]) printf(\"%d \",row[y][i]);\n\t}\n\tif(lst[nxt]) print(lst[nxt]);//\u5f80\u51fa\u70b9\u8fde\u63a5\u7684\u4e0a\u4e00\u5c42 \n}\nvoid work1()\n{\n\tprework();\n\tfor(int y=t2; y>0; y--) {\n\t\tint mx=0,bak=0,siz=row[y].size();\n\t\tfor(int i=0; i<siz; i++) {//\u53f3\u8fdb\u5de6\u51fa \n\t\t\tint k=row[y][i];\n\t\t\tif(up[k]&&f[up[k]]>gup[k]) gup[k]=f[up[k]],lst[k]=up[k];\n\t\t\tif(rup[k]&&f[rup[k]]>gup[k]) gup[k]=f[rup[k]],lst[k]=rup[k];\n\t\t\tif(lup[k]&&f[lup[k]]>gup[k]) gup[k]=f[lup[k]],lst[k]=lup[k];\n\t\t\tf[k]=mx,cen[k]=bak;\n\t\t\tif(siz-i+gup[k]>mx) mx=siz-i+gup[k],bak=k;//\u51fa\u70b9\u53f3\u8fb9\u7684\u70b9\u6709siz-i\u4e2a \n\t\t}\n\t\tmx=bak=0;\n\t\tfor(int i=siz-1; i>=0; i--) {//\u5de6\u8fdb\u53f3\u51fa \n\t\t\tint k=row[y][i];\n\t\t\tif(mx>f[k]) f[k]=mx,cen[k]=bak;\n\t\t\tif(gup[k]+1>f[k]) f[k]=gup[k]+1,cen[k]=k;//\u4ece\u6b64\u70b9\u5165\u6b64\u70b9\u51fa\n\t\t\tif(i+1+gup[k]>mx) mx=i+1+gup[k],bak=k; //\u51fa\u70b9\u5de6\u8fb9\u7684\u70b9\u6709i+1\u4e2a \n\t\t}\n\t}\n\tprintf(\"%d\\n\",f[n]-1);\n\tprint(n);//\u4ece\u539f\u70b9\u5f00\u59cb\uff08n\uff09 \n\tcout<<endl;\n}\nint s,t,ans;\nint dep[N];\nint cnt=1,head[N],nxt[N*20],to[N*20],val[N*20];\nvoid insert(int u,int v,int w) {\n\tcnt++;\n\tto[cnt]=v;\n\tval[cnt]=w;\n\tnxt[cnt]=head[u];\n\thead[u]=cnt;\n} \nvoid ins(int u,int v,int w) {\n\tinsert(u,v,w);\n\tinsert(v,u,0);\n}\nint ok[N],du[N];//\u662f\u5426\u53ef\u4ee5\u4f5c\u4e3a\u6b64\u5c42\u8d77\u70b9 \nvoid add(int x,int y) //\u8fde\u4e0a\u4e0b\u754c\u4e3a[1,INF\uff09\u7684\u8fb9\n{\n\tfor(int i=head[x]; i; i=nxt[i]) if(to[i]==y) return ;\n\tok[y]=1,++du[y],--du[x],ins(x,y,INF);\n}\nvoid calc(int y,int i) {//\u66b4\u529b\u68c0\u6d4b\u7b26\u5408\u4f5c\u4e3a\u6700\u4f18\u8def\u5f84\u672c\u5c42\u8d77\u70b9\u7684\u8fb9 \n\tint siz=row[y].size(),num=row[y][i];\n\tfor(int j=0; j<i; j++) {//\u53f3\u8fdb\u5de6\u51fa \n\t\tint k=row[y][j];\n\t\tif(up[k]&&f[up[k]]+siz-j==f[num]) add(k,up[k]);\n\t\tif(rup[k]&&f[rup[k]]+siz-j==f[num]) add(k,rup[k]);\n\t\tif(lup[k]&&f[lup[k]]+siz-j==f[num]) add(k,lup[k]);\n\t}\n\tfor(int j=i+1; j<siz; j++) {//\u5de6\u8fdb\u53f3\u51fa \n\t\tint k=row[y][j];\n\t\tif(up[k]&&f[up[k]]+j+1==f[num]) add(k,up[k]); \n\t\tif(rup[k]&&f[rup[k]]+j+1==f[num]) add(k,rup[k]);\n\t\tif(lup[k]&&f[lup[k]]+j+1==f[num]) add(k,lup[k]);\n\t}\n\t//\u76f4\u8fdb\u76f4\u51fa \n\tif(up[num]&&f[up[num]]+1==f[num]) add(num,up[num]);\n\tif(rup[num]&&f[rup[num]]+1==f[num]) add(num,rup[num]);\n\tif(lup[num]&&f[lup[num]]+1==f[num]) add(num,lup[num]);\n} \nvoid build() {//\u9010\u5c42\u5411\u4e0a\u5efa\u8fb9\n\tok[n]=1;\n\tfor(int y=1; y<=t2; y++) {\n\t\tint siz=row[y].size();\n\t\tfor(int i=0; i<siz; i++) if(ok[row[y][i]]) calc(y,i);\n\t}\n}\nbool bfs() {\n\tmemset(dep,0,sizeof(dep));\n\tqueue<int> q;\n\tq.push(s),dep[s]=1;\n\twhile(!q.empty()) {\n\t\tint now=q.front();q.pop();\n\t\tfor(int i=head[now]; i; i=nxt[i])\n\t\t    if(val[i]&&!dep[to[i]])\n\t\t        dep[to[i]]=dep[now]+1,\n\t\t        q.push(to[i]);\n\t}\n\treturn dep[t]>0;\n}\nint dfs(int now,int dis) \n{\n\tif(now==t) return dis;\n\tint res=0;\n\tfor(int i=head[now]; i; i=nxt[i])\n\t    if(val[i]&&dep[to[i]]==dep[now]+1) {\n\t    \tint tmp=dfs(to[i],min(val[i],dis-res));\n\t    \tres+=tmp,val[i]-=tmp,val[i^1]+=tmp;\n\t    \tif(res==dis) return res;\n \t\t}\n \tif(!res) dep[now]=-1;\n \treturn res;\n}\nvoid work2() {//\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41 \n\tbuild();\n\ts=n+1,t=n+2;\n\tfor(int i=1; i<=n; i++)\n\t    if(du[i]>0) ins(s,i,du[i])/*\u7f3a\u5c11\u7684\u4eces\u8981*/,ans+=du[i]/*\u9884\u5148\u6d41\u7684\u6700\u5927\u6d41*/; \n\t    else ins(i,t,-du[i])/*\u591a\u4f59\u7684\u5411t\u6d41*/;\n\twhile(bfs()) ans-=dfs(s,INF);/*\u8c03\u6574*/ \n\tprintf(\"%d\",ans);\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1; i<=n; i++) {\n\t\tcin>>p[i].x>>p[i].y;\n\t\tbx[i]=p[i].x,by[i]=p[i].y;\n\t\ttb1[i]=p[i].b1=p[i].y-p[i].x;//\u5f80\u53f3\u4e0a\u659c\u7684\u7ebf \n\t\ttb2[i]=p[i].b2=p[i].x+p[i].y;//\u5f80\u5de6\u4e0a\u659c\u7684\u7ebf \n\t\tp[i].id=i;\n\t}\n\tp[++n].id=n;//\u6700\u540e\u4e00\u4e2a\u70b9\u662f\uff080,0\uff09 \n\twork1(),work2();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1640097788,
        "uid": 124918,
        "name": "LinkyChristian",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011P2304 [NOI2015] \u5c0f\u56ed\u4e01\u4e0e\u8001\u53f8\u673a"
    },
    {
        "content": "\u5173\u952e\u8bcd\uff1a\u79bb\u6563\u5316\uff0cDP\uff0c\u5206\u5c42\u56fe\uff0c\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41\u3002\n\n### \u9884\u5904\u7406\n\n\u9996\u5148\u5c06\u5750\u6807\u6309 y \u79bb\u6563\u5316\uff0c\u6bcf\u5c42\u6253\u5305\u88c5\u8fdb vector \u91cc\uff0c\u6309 x \u5750\u6807\u6392\u5e8f\u3002\n\n\u5206\u522b\u7528 $to[i,0/1/2]$ \u4ee3\u8868\u5411\u6b63\u4e0a\u65b9/\u5de6\u4e0a/\u53f3\u4e0a\u53ef\u4ee5\u8d70\u5230\u7684\u70b9\u3002\n\n\u8ba1\u7b97\u7684\u65f6\u5019\u53ef\u4ee5\u91c7\u7528\u7f16\u53f7\u6392\u5e8f\u7684\u65b9\u5f0f\uff0c\u5206\u522b\u6309\u7167 3 \u4e2a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u53ea\u9700\u68c0\u67e5\u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\u6ce8\u610f\u4e0d\u540c\u7f16\u53f7\u4e0d\u8981\u6df7\u6dc6\u3002\n\n### DP\n\n\u8fd9\u9898 DP \u7684\u65b9\u5f0f\u591a\u79cd\u591a\u6837\uff0c\u8fd9\u91cc\u7ed9\u51fa\u6211\u7684\u505a\u6cd5\u3002\n\n\u6ce8\u610f\u5230\u4e0d\u540c\u5c42\u4e4b\u95f4\u8f6c\u79fb\u662f\u6ca1\u6709\u540e\u6548\u6027\u7684\uff0c\u53ea\u6709\u5c42\u4e4b\u95f4\u8f6c\u79fb\u624d\u6709\u540e\u6548\u6027\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u72b6\u6001\u5177\u4f53\u5316\u4e00\u53d1\uff0c$f[u,0]$ \u4ee3\u8868\u6cbf\u975e\u5de6\u53f3\u65b9\u5411\u7684\u8fb9\u5230\u8fbe u\uff0c\u7ecf\u8fc7\u6700\u591a\u6811\u7684\u6570\u76ee\uff1b$f[u,1]$ \u4ee3\u8868\u6cbf\u6240\u6709\u65b9\u5411\u8d70\u5230 u\uff0c\u7ecf\u8fc7\u6700\u591a\u6811\u7684\u6811\u6728\u3002\n\n\u5c42\u6570\u4ece\u5c0f\u5230\u5927\u5faa\u73af\uff0c\u5c42\u4e4b\u95f4\u8f6c\u79fb\u65f6\u7528 $f[u,1]+1$ \u66f4\u65b0 $f[v,0]$ (\u5b58\u5728\u8fb9 $u\\to v$)\u3002\n\n\u5c42\u5185\u8f6c\u79fb\u65f6\uff0c\u5982\u679c\u4ece u \u5de6\u8fb9\u8fdb\u5165\u8be5\u5c42\uff0c\u90a3\u4e48 u \u5de6\u8fb9\u7684\u70b9\u90fd\u53ef\u4ee5\u53d6\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u6839\u636e\u5b9a\u4e49\uff0c\u8fd8\u8981\u7528 $f[u,0]$ \u66f4\u65b0\u4e00\u4e0b $f[u,1]$\u3002\n\n\u521d\u72b6\u6001\uff1a$f[0,1]=0$ ($f[0,0]$ \u4e0d\u7528\u7ba1\uff0c\u56e0\u4e3a\u6811\u7684 x \u5750\u6807\u4e00\u5b9a\u5927\u4e8e 0)\n\n\u76ee\u6807\u72b6\u6001\uff1a$\\max_{u=1}^n{\\{ f[u,1]\\}}$\u3002\n\n\u9898\u76ee\u8fd8\u8981\u6c42\u8f93\u51fa\u65b9\u6848\uff0c\u7528 $pre[i,0/1]$ \u8bb0\u5f55\u4e00\u4e0b\u4ece\u54ea\u4e2a\u72b6\u6001\u66f4\u65b0\u8fc7\u6765\uff0c\u7136\u540e\u9012\u5f52\u8f93\u51fa\uff0c\u6ce8\u610f\u4e00\u4e0b\u5b9e\u73b0\u7ec6\u8282\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### \u7f51\u7edc\u6d41\n\n\u9996\u5148\u662f\u5224\u65ad\u54ea\u4e9b\u8fb9\u9700\u8981\u88ab\u7ecf\u8fc7\u3002\u5b9e\u9645\u4e0a\u5c31\u662f\u5012\u7740\u505a\u4e00\u904d DP\uff0c\u5c42\u6570\u4ece\u5927\u5230\u5c0f\u5faa\u73af\uff0c$ok[i,0/1]$ \u4ee3\u8868\u4ece $f[i,0/1]$ \u80fd\u5426\u8f6c\u79fb\u5230\u6700\u4f18\u89e3\uff0c$need[i,0/1/2]$ \u4ee3\u8868\u8fd9\u6761\u8fb9\u662f\u5426\u9700\u8981\u88ab\u7ecf\u8fc7\u3002\u5b9e\u73b0\u4e0a\u8981\u7279\u522b\u4ed4\u7ec6\u3002\n\n\u6700\u540e\u8dd1\u4e00\u4e2a\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41\u5c31\u53ef\u4ee5\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\u6211\u7684 dinic \u52a0\u5165\u4e86\u4e00\u4e9b\u526a\u679d\uff0c\u6240\u4ee5\u8dd1\u5f97\u98de\u5feb\u3002\n\n### \u603b\u7ed3\n\n+ \u5b9e\u73b0\u7684\u65f6\u5019\u8981\u7279\u522b\u6ce8\u610f\u53d8\u91cf\u7684\u542b\u4e49\uff0c\u5fc5\u8981\u7684\u5730\u65b9\u52a0\u4e0a\u6ce8\u91ca\u3002~~\u4e0d\u8981\u50cf\u6211\u4e00\u6837\u4e71\u7528\u7f16\u53f7\uff0c\u7136\u540e\u4e00\u4e2a\u5c0f\u65f6\u8c03\u4e0d\u51fa\u6765~~\n\n\u8d85\u4e11\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 50009\n#define rep(i,x,y) for(int i=(x);i<=(y);++i)\n#define per(i,x,y) for(int i=(x);i>=(y);--i)\n#define pII pair<int,int>\n#define fi first\n#define se second\n#define pb push_back\nint n,pos[N][3],num[N],cnt,dep[N],to[N][3],id[N];//id[i]\u4ee3\u8868\u6392\u5e8f\u540e\u7f16\u53f7\u4e3ai\u7684\u5143\u7d20\u539f\u6765\u5904\u4e8e\u7b2c\u51e0\u4f4d\nvector<int> v[N];\npII p[N];\nint gethash(int x){return lower_bound(num+1,num+cnt+1,x)-num;}\nbool cmp1(const int &a,const int &b){return p[a]<p[b];}\nbool cmp2(const int &a,const int&b){return p[a].fi+p[a].se<p[b].fi+p[b].se||p[a].fi+p[a].se==p[b].fi+p[b].se&&p[a].se<p[b].se;}\nbool cmp3(const int &a,const int &b){return p[a].se-p[a].fi<p[b].se-p[b].fi||p[a].se-p[a].fi==p[b].se-p[b].fi&&p[a].se<p[b].se;}\nvoid prework(){\n\tnum[++cnt]=0;\n\trep(i,1,n)scanf(\"%d %d\",&p[i].fi,&p[i].se),num[++cnt]=p[i].se;\n\tsort(num+1,num+cnt+1);cnt=unique(num+1,num+cnt+1)-num-1;//\u79bb\u6563\u5316\n\trep(i,0,n){\n\t\tint x=gethash(p[i].se);v[x].pb(i);dep[i]=x;\n\t\tid[i]=i;\n\t}//\u6309\u71673\u4e2a\u5173\u952e\u5b57\u6392\u5e8f\n\tsort(id,id+n+1,cmp1);\n\trep(i,0,n-1)\n\t\tif(p[id[i]].fi==p[id[i+1]].fi)to[id[i]][0]=id[i+1];\n\tsort(id,id+n+1,cmp2);\n\trep(i,0,n-1){\n\t\tint b1=p[id[i]].fi+p[id[i]].se,b2=p[id[i+1]].fi+p[id[i+1]].se;\n\t\tif(b1==b2)to[id[i]][1]=id[i+1];\n\t}\n\tsort(id,id+n+1,cmp3);\n\trep(i,0,n-1){\n\t\tint b1=p[id[i]].se-p[id[i]].fi,b2=p[id[i+1]].se-p[id[i+1]].fi;\n\t\tif(b1==b2)to[id[i]][2]=id[i+1];\n\t}\n}\nconst int inf=0x3f3f3f3f;\nint f[N][2],rk[N];\nstruct dat{int i;bool j;} pre[N][2],res;\nbool upd(int&a,int b){if(a<b){a=b;return 1;}return 0;}\nvoid print(int i,bool j){\n\tif(!i)return;\n\tprint(pre[i][j].i,pre[i][j].j);\n\tif(!j)printf(\"%d \",i);\n\telse if(pre[i][j].i!=i){\n\t\tint k=pre[i][j].i,x=rk[i],y=rk[k],sz=v[dep[i]].size();//x,y\u7f16\u53f7\u4e3ai,k\u70b9\u6392\u5e8f\u540e\u7684\u6392\u540d\n\t\t//v[dep[i]][w]\u662f\u539f\u59cb\u7f16\u53f7\n\t\tif(y<x){\n\t\t\tper(w,y-1,0)printf(\"%d \",v[dep[i]][w]);\n\t\t\trep(w,y+1,x)printf(\"%d \",v[dep[i]][w]);\n\t\t}else {\n\t\t\trep(w,y+1,sz-1)printf(\"%d \",v[dep[i]][w]);\n\t\t\tper(w,y-1,x)printf(\"%d \",v[dep[i]][w]);\n\t\t}\n\t}\n}\nint ans;\nbool need[N][3],ok[N][2];\nvoid check(){//\u5224\u65ad\u5408\u6cd5\n\trep(i,1,n)rep(j,0,1)if(f[i][j]==ans)ok[i][j]=1;\n\tper(x,cnt,1){\n\t\tint sz=v[x].size();\n\t\trep(i,0,sz-1){\n\t\t\tint p=v[x][i];//\n\t\t\trep(j,0,2)if(to[p][j]&&ok[to[p][j]][0]&&f[to[p][j]][0]==f[p][1]+1)ok[p][1]=1,need[p][j]=1;\n\t\t\tif(ok[p][1]){\n\t\t\t\tif(f[p][0]==f[p][1])ok[p][0]=1;\n\t\t\t\trep(j,0,i-1){\n\t\t\t\t\tint q=v[x][j];\n\t\t\t\t\tif(f[p][1]==f[q][0]+i)ok[q][0]=1;\n\t\t\t\t}\n\t\t\t\trep(j,i+1,sz-1){\n\t\t\t\t\tint q=v[x][j];\n\t\t\t\t\tif(f[p][1]==f[q][0]+sz-1-i)ok[q][0]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid DP(){\n\trep(i,1,cnt){\n\t\tsort(v[i].begin(),v[i].end(),cmp1);\n\t\trep(j,0,(int)v[i].size()-1)rk[v[i][j]]=j;\n\t}\n\trep(i,0,n)rep(j,0,1)f[i][j]=-inf;\n\tf[0][1]=0;\n\trep(x,1,cnt){\n\t\tint sz=v[x].size();\n\t\trep(i,0,sz-1){\n\t\t\tint p=v[x][i];//\u5f53\u524d\u8282\u70b9\u7f16\u53f7\n\t\t\tif(upd(f[p][1],f[p][0]))pre[p][1]=(dat){p,0};\n\t\t\trep(j,0,i-1){\n\t\t\t\tint q=v[x][j];\n\t\t\t\tif(upd(f[p][1],f[q][0]+i))pre[p][1]=(dat){q,0};\n\t\t\t}\n\t\t\trep(j,i+1,sz-1){\n\t\t\t\tint q=v[x][j];\n\t\t\t\tif(upd(f[p][1],f[q][0]+sz-1-i))pre[p][1]=(dat){q,0};\n\t\t\t}\n\t\t}\n\t\trep(i,0,sz-1){\n\t\t\tint p=v[x][i];\n\t\t\trep(j,0,2)if(to[p][j]){\n\t\t\t\tint k=to[p][j];\n\t\t\t\tif(upd(f[k][0],f[p][1]+1))pre[k][0]=(dat){p,1};\n\t\t\t}\n\t\t}\n\t}\n\trep(i,1,n)if(upd(ans,f[i][1]))res=(dat){i,1};\n\tcout<<ans<<endl;\n\tprint(res.i,res.j);puts(\"\");\n}\n#undef N\n#define N 100009\n#define M 350009\nnamespace flow{\n\tint hd[N],tot,d[N],now[N],s,t,ss,tt,nV,deg[N],minflow;\n\tstruct edge{int t,w,nxt;} es[M<<1];\n\tvoid adde(int u,int v,int w){es[++tot]=(edge){v,w,hd[u]},hd[u]=tot;}void add(int u,int v,int w){adde(u,v,w),adde(v,u,0);}\n\tbool bfs(){queue<int> q;fill(d+1,d+nV+1,0);q.push(s);d[s]=1;now[s]=hd[s];while(q.size()){int u=q.front();q.pop();for(int i=hd[u],v;i;i=es[i].nxt)if(es[i].w&&!d[v=es[i].t]){d[v]=d[u]+1;now[v]=hd[v];q.push(v);if(v==t)return 1;}}return 0;}\n\tint dinic(int u,int flow){if(u==t)return flow;int rest=flow;for(int i=now[u],v;i&&rest;i=es[i].nxt)if(es[now[u]=i].w&&d[v=es[i].t]==d[u]+1){int k=dinic(v,min(rest,es[i].w));if(!k)d[v]=0;es[i].w-=k,es[i^1].w+=k;rest-=k;}return flow-rest;}\n\tvoid FLOW(){\n\t\tcheck();\n\t\tnV=n+5;s=nV-1,t=nV,ss=nV-3,tt=nV-2;tot=1;//\u7f16\u53f7\u4ece1\u5f00\u59cb\uff01\n\t\trep(u,0,n)rep(j,0,2)if(need[u][j]){\n\t\t\tint v=to[u][j];\n\t\t\tadd(u+1,v+1,inf);++deg[v+1],--deg[u+1];\n\t\t}\n\t\trep(i,1,n+1){\n\t\t\tadd(ss,i,inf),add(i,tt,inf);\n\t\t\tif(deg[i]>0)add(s,i,deg[i]);else if(deg[i]<0)add(i,t,-deg[i]);\n\t\t}\n\t\tadd(tt,ss,inf);\n\t\twhile(bfs())dinic(s,inf);\n\t\tfor(int  i=hd[ss];i;i=es[i].nxt)if(es[i].t==tt){\n\t\t\tminflow=es[i].w;hd[ss]=es[hd[ss]].nxt;hd[tt]=es[hd[tt]].nxt;//\u5220\u8fb9\n\t\t\tbreak;\n\t\t}\n\t\ts=tt,t=ss;\n\t\twhile(bfs())minflow-=dinic(s,inf);\n\t\tcout<<minflow<<endl;\n\t}\t\n}\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\".in\",\"r\",stdin);freopen(\".out\",\"w\",stdout);\n\t#endif\n\tcin>>n;\n\tprework();DP();flow::FLOW();\n\treturn 0;\n}\n```",
        "postTime": 1657119955,
        "uid": 362346,
        "name": "TianyiLemon",
        "ccfLevel": 0,
        "title": "P2304 \u5c0f\u56ed\u4e01\u4e0e\u8001\u53f8\u673a \u9898\u89e3"
    }
]