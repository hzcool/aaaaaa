[
    {
        "content": "\u9996\u5148\uff0c\u6b22\u8fce\u52a0\u5165EI\u961f\u957f\u7c89\u4e1d\u88d9:450567214\n\n\u672c\u9898\u7684\u4e00\u4e2a $O((n+m)\\log^3 n+q\\log n)$ \u505a\u6cd5\u7531 EI \u961f\u957f\u5728\u5979\u7684\u96c6\u8bad\u961f\u8bba\u6587\u300a\u6d45\u8c08\u51fd\u6570\u6700\u503c\u7684\u52a8\u6001\u7ef4\u62a4\u300b\u4e2d\u7ed9\u51fa\uff0c\u5176\u4e2d $n,m,q$ \u5206\u522b\u4ee3\u8868\u5e8f\u5217\u957f\u5ea6\u3001\u4fee\u6539\u6b21\u6570\u3001\u67e5\u8be2\u6b21\u6570. \u8be5\u6570\u636e\u7ed3\u6784\u88ab\u79f0\u4e3a Kinetic Tournament \u6811 (KTT).\n\n\u8be5\u505a\u6cd5\u7684\u539f\u7406\u5728 [EI's blog](https://blog.csdn.net/EI_Captain/article/details/101040226) \u6216\u8bba\u6587\u4e2d\u6709\u8be6\u7ec6\u9610\u8ff0\uff0c\u8fd9\u91cc\u4ec5\u7ed9\u51fa\u4e00\u4e2a\u76f4\u63a5\u5b9e\u73b0\u53ca\u53ef\u53c2\u8003\u7684\u4ee3\u7801.\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=400500;\nconst long long INF=2e18;\nint n,w[N],m;\nlong long tag[N<<2];\nstruct LINE//\u4e00\u6b21\u51fd\u6570\n{\n    int k;long long b;\n    LINE operator +(const LINE &a)const{return (LINE){k+a.k,b+a.b};}\n};\npair<LINE,long long> max(LINE a,LINE b)//\u5bf9\u4e24\u4e2a\u4e00\u6b21\u51fd\u6570\u53d6x=0\u65f6\u7684\u6700\u503c\uff0c\u540c\u65f6\u7ed9\u51famax\u7684\u9009\u53d6\u4e0d\u53d1\u751f\u53d8\u5316\u7684\u6700\u5927\u503cC(\u5373 x>C \u65f6max\u53d8\u6210\u53e6\u4e00\u4e2a)\n{\n    if(a.k<b.k||(a.k==b.k&&a.b<b.b))swap(a,b);\n    if(a.b>=b.b){return make_pair(a,INF);}\n    return make_pair(b,(b.b-a.b)/(a.k-b.k));\n}\nstruct Node\n{\n    LINE ls,rs,ans,sum;long long x;//\u589e\u91cf>x\u65f6\u5b50\u6811\u5185\u4f1a\u6709max\u7684\u9009\u53d6\u53d1\u751f\u53d8\u5316\n    Node operator +(const Node &a)const\n    {\n        Node t;t.x=min(x,a.x);\n        pair<LINE,long long>tmp=max(ls,sum+a.ls);\n        t.ls=tmp.first,t.x=min(t.x,tmp.second);\n        tmp=max(a.rs,rs+a.sum);\n        t.rs=tmp.first,t.x=min(t.x,tmp.second);\n        tmp=max(ans,a.ans);t.x=min(t.x,tmp.second);\n        tmp=max(tmp.first,rs+a.ls);\n        t.ans=tmp.first,t.x=min(t.x,tmp.second);\n        t.sum=sum+a.sum;\n        return t;\n    }\n}a[N<<2];\nvoid build(int rot,int lt,int rt)\n{\n    if(lt==rt)\n    {\n        LINE t={1,w[lt]};\n        a[rot]=(Node){t,t,t,t,INF};\n        return;\n    }\n    int mid=(lt+rt)>>1;\n    build(rot<<1,lt,mid),build(rot<<1|1,mid+1,rt);\n    a[rot]=a[rot<<1]+a[rot<<1|1];\n}\nvoid upd(int rot,long long w)\n{\n    tag[rot]+=w;a[rot].x-=w;\n    a[rot].ls.b+=a[rot].ls.k*w;\n    a[rot].rs.b+=a[rot].rs.k*w;\n    a[rot].ans.b+=a[rot].ans.k*w;\n    a[rot].sum.b+=a[rot].sum.k*w;\n}\nvoid upd(int rot,int lt,int rt,long long w)\n{\n    if(w>a[rot].x)//\u5982\u679c\u589e\u91cf\u4f7f\u5f97\u5b50\u6811\u5185\u6709max\u53d1\u751f\u53d8\u5316\u5219\u9012\u5f52\u4e0b\u53bb\u91cd\u6784\n    {\n        long long t=tag[rot]+w;tag[rot]=0;int mid=(lt+rt)>>1;\n        upd(rot<<1,lt,mid,t),upd(rot<<1|1,mid+1,rt,t);\n        a[rot]=a[rot<<1]+a[rot<<1|1];\n    }\n    else upd(rot,w);\n}\nvoid pushdown(int rot)\n{\n    if(tag[rot])\n    {\n        long long t=tag[rot];tag[rot]=0;\n        upd(rot<<1,t),upd(rot<<1|1,t);\n    }\n}\nvoid update(int rot,int lt,int rt,int lq,int rq,int x)\n{\n    if(lt>=lq&&rt<=rq){upd(rot,lt,rt,x);return;}\n    pushdown(rot);\n    int mid=(lt+rt)>>1;\n    if(lq<=mid)update(rot<<1,lt,mid,lq,rq,x);\n    if(rq>mid)update(rot<<1|1,mid+1,rt,lq,rq,x);\n    a[rot]=a[rot<<1]+a[rot<<1|1];\n}\nNode query(int rot,int lt,int rt,int lq,int rq)\n{\n    if(lt>=lq&&rt<=rq)return a[rot];\n    pushdown(rot);\n    int mid=(lt+rt)>>1;\n    if(rq<=mid)return query(rot<<1,lt,mid,lq,rq);\n    if(lq>mid)return query(rot<<1|1,mid+1,rt,lq,rq);\n    return query(rot<<1,lt,mid,lq,mid)+query(rot<<1|1,mid+1,rt,mid+1,rq);\n}\nint getin()\n{\n    int x=0,f=1;char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n    if(ch=='-')f=-1,ch=getchar();\n    while(ch>='0'&&ch<='9')x=x*10+ch-48,ch=getchar();\n    return x*f;\n}\nint main()\n{\n    n=getin(),m=getin();\n    for(int i=1;i<=n;i++)w[i]=getin();\n    build(1,1,n);\n    for(int i=1,opt,l,r,x;i<=m;i++)\n    {\n        opt=getin(),l=getin(),r=getin();\n        if(opt==1)x=getin(),update(1,1,n,l,r,x);\n        else printf(\"%lld\\n\",max(0ll,query(1,1,n,l,r).ans.b));\n    }\n}\n```",
        "postTime": 1598594388,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5693 \u3010EI\u7684\u7b2c\u516d\u5206\u5757\u3011"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P5693)\n\n\u201c$\\text{KTT}$\u201d\u5b66\u4e60\u7b14\u8bb0\u3002\n\n\u4e0d\u542b\u590d\u6742\u5ea6\u5206\u6790\u3002\u7406\u89e3\u4e0a\u53c2\u8003\u5b66\u4e60\u4e86 @[optimize_2](https://www.luogu.com.cn/user/224978) \u7684[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/_post/476943)\u3002\n\n## \u9898\u610f\n\n\u533a\u95f4\u52a0\u6b63\u6570\uff0c\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u3002\n\n$n,q\\le4\\times10^5$\u3002\n\n## \u601d\u8def\n\u7ebf\u6bb5\u6811\u6c42\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u9700\u8981\u7ef4\u62a4\u7684\u6709\u533a\u95f4\u548c $sum$\uff0c\u6700\u5927\u524d\u7f00\u548c $lmax$\uff0c\u6700\u5927\u540e\u7f00\u548c $rmax$\uff0c\u6700\u5927\u5b50\u6bb5\u548c $totmax$ \u56db\u4e2a\u53c2\u6570\u3002\n\n\u8003\u8651\u4fee\u6539\u64cd\u4f5c\u5bf9\u8fd9\u51e0\u4e2a\u503c\u7684\u5f71\u54cd\u3002\n\n\u5bf9\u533a\u95f4\u52a0\u4e0a $k$\uff0c\u5982\u679c\u9009\u62e9\u7684\u533a\u95f4\u6ca1\u6709\u53d1\u751f\u6539\u53d8\uff0c\u5219\u8fd9\u4e2a\u7b54\u6848\u4f1a\u53d8\u5927 $lk$\uff0c\u5176\u4e2d $l$ \u4e3a\u9009\u62e9\u7684\u533a\u95f4\u957f\u5ea6\u3002\n\n\u6211\u4eec\u8003\u8651\u5c06\u4e0a\u8ff0\u56db\u4e2a\u503c\u6362\u7528\u4e00\u6b21\u51fd\u6570\u8868\u793a\uff0c\u4f7f\u5176\u8868\u793a\u4e3a $ls+b$\uff0c\u5982\u679c\u6ca1\u6709\u6539\u53d8\u9009\u62e9\u7684\u533a\u95f4\u5219 $s$ \u6bcf\u6b21\u589e\u52a0 $k$\u3002\n\n\u4e3a\u4e86\u5224\u65ad\u9009\u62e9\u7684\u533a\u95f4\u662f\u5426\u6539\u53d8\uff0c\u9664\u4e86\u52a0\u6cd5\u6807\u8bb0\uff0c\u6211\u4eec\u9700\u8981\u989d\u5916\u7ef4\u62a4\u4e00\u4e2a $x$\uff0c\u8868\u793a\u5982\u679c $s\\ge x$\uff0c\u5219 $lmax,rmax,totmax$ \u9009\u62e9\u7684\u533a\u95f4\u81f3\u5c11\u6709\u4e00\u4e2a\u4e00\u5b9a\u4f1a\u6539\u53d8\u3002\n\n\u8003\u8651 `pushup`\uff1a$+$ \u64cd\u4f5c\u4e3a\u4e00\u6b21\u51fd\u6570\u76f8\u52a0\uff0c$\\max$ \u64cd\u4f5c\u4e3a\u4e00\u6b21\u51fd\u6570\u5728 $s=0$ \u5904\u7684\u6bd4\u8f83\u3002\n- $sum=l.sum+r.sum$\n- $lmax=\\max(l.lmax,l.sum+r.lmax)$\n- $rmax=\\max(r.rmax,l.rmax+r.sum)$\n- $totmax=\\max(l.totmax,r.totmax,l.rmax+r.lmax)$\n- $x$ \u5728 $\\min(l.x,r.x)$ \u7684\u57fa\u7840\u4e0a\uff0c\u5bf9 $lmax,rmax$ \u7684\u4e24\u79cd\u65b9\u6848\u3001$totmax$ \u7684\u4e09\u79cd\u65b9\u6848\u7684\u4e00\u6b21\u51fd\u6570\u4ea4\u70b9\u4f4d\u7f6e\u53d6 $\\min$\uff08\u5c0f\u4e8e $0$ \u6216\u65e0\u4ea4\u70b9\u53d8\u4e3a `INF`\uff09\n\n\u5728\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u6bcf\u6b21\u628a $x$ \u51cf\u5c0f $k$\uff0c\u5982\u679c $x$ \u5728\u4e00\u6b21\u51cf\u5c0f\u540e\u5c0f\u4e8e $0$\uff0c\u5219\u66b4\u529b\u91cd\u6784\u8fd9\u4e2a\u5b50\u6811\u3002\n\n\u901a\u8fc7\u590d\u6742\u7684\u52bf\u80fd\u5206\u6790\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u590d\u6742\u5ea6\u4e3a $O((n+m)\\log^3n+q\\log n)$\uff0c\u5176\u4e2d $m$ \u4e3a\u4fee\u6539\u6b21\u6570\uff0c$q$ \u4e3a\u67e5\u8be2\u6b21\u6570\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{//by cyffff\n\t\n}\nconst int N=4e5+10;\nconst ll INF=1e15;\nint n,Q,p[N];\n#define ls (rt<<1)\n#define rs (rt<<1|1)\nstruct Func{\n\tint k;\n\tll b;\n\tinline friend Func operator+(const Func &a,const Func &b){\n\t\treturn (Func){a.k+b.k,a.b+b.b};\n\t}\n\tinline void add(ll v){ b+=k*v; }\n};\ninline pair<Func,ll> max(Func a,Func b){\n\tif(a.k<b.k||a.k==b.k&&a.b<b.b) swap(a,b);\n\tif(a.b>=b.b) return make_pair(a,INF);\n\treturn make_pair(b,(b.b-a.b)/(a.k-b.k));\n}\nstruct node{\n\tFunc lmax,rmax,totmax,sum;\n\tll x;\n\tinline friend node operator+(const node &a,const node &b){\n\t\tnode t;\n\t\tpair<Func,ll> tmp;\n\t\tt.x=min(a.x,b.x);\n\t\ttmp=max(a.lmax,b.lmax+a.sum);\n\t\tt.lmax=tmp.first,t.x=min(t.x,tmp.second);\n\t\ttmp=max(b.rmax,a.rmax+b.sum);\n\t\tt.rmax=tmp.first,t.x=min(t.x,tmp.second);\n\t\ttmp=max(a.totmax,b.totmax);\n\t\tt.x=min(t.x,tmp.second);\n\t\ttmp=max(tmp.first,a.rmax+b.lmax);\n\t\tt.totmax=tmp.first,t.x=min(t.x,tmp.second);\n\t\tt.sum=a.sum+b.sum;\n\t\treturn t;\n\t}\n};\nstruct KTT{\n\tnode a[N<<2];\n\tll tag[N<<2];\n\tinline void pushup(int rt){\n\t\ta[rt]=a[ls]+a[rs];\n\t}\n\tinline void push(int rt,ll v){\n\t\ttag[rt]+=v;\n\t\ta[rt].x-=v;\n\t\ta[rt].lmax.add(v);\n\t\ta[rt].rmax.add(v);\n\t\ta[rt].sum.add(v);\n\t\ta[rt].totmax.add(v);\n\t}\n\tinline void pushdown(int rt){\n\t\tif(tag[rt]){\n\t\t\tll bas=tag[rt];\n\t\t\ttag[rt]=0;\n\t\t\tpush(ls,bas);\n\t\t\tpush(rs,bas);\n\t\t}\n\t}\n\tinline void build(int rt,int l,int r){\n\t\tif(l==r){\n\t\t\tFunc q={1,p[l]};\n\t\t\ta[rt]=(node){q,q,q,q,INF};\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(ls,l,mid);\n\t\tbuild(rs,mid+1,r);\n\t\tpushup(rt);\n\t}\n\tinline void defeat(int rt,int l,int r,ll v){\n\t\tif(v>a[rt].x){\n\t\t\tint mid=l+r>>1;\n\t\t\tll t=tag[rt]+v;\n\t\t\ttag[rt]=0;\n\t\t\tdefeat(ls,l,mid,t);\n\t\t\tdefeat(rs,mid+1,r,t);\n\t\t\tpushup(rt);\n\t\t}else{\n\t\t\tpush(rt,v);\n\t\t}\n\t}\n\tinline void update(int rt,int l,int r,int L,int R,int k){\n\t\tif(L<=l&&r<=R){\n\t\t\tdefeat(rt,l,r,k);\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(rt);\n\t\tint mid=l+r>>1;\n\t\tif(L<=mid) update(ls,l,mid,L,R,k);\n\t\tif(R>mid) update(rs,mid+1,r,L,R,k);\n\t\tpushup(rt);\n\t}\n\tinline node query(int rt,int l,int r,int L,int R){\n\t\tif(L<=l&&r<=R){\n\t\t\treturn a[rt];\n\t\t}\n\t\tpushdown(rt);\n\t\tint mid=l+r>>1;\n\t\tif(R<=mid) return query(ls,l,mid,L,R);\n\t\tif(L>mid) return query(rs,mid+1,r,L,R);\n\t\treturn query(ls,l,mid,L,mid)+query(rs,mid+1,r,mid+1,R);\n\t}\n}t;\nint main(){\n\tn=read(),Q=read();\n\tfor(int i=1;i<=n;i++){\n\t\tp[i]=read();\n\t}\n\tt.build(1,1,n);\n\twhile(Q--){\n\t\tint opt=read();\n\t\tswitch(opt){\n\t\t\tcase 1:{\n\t\t\t\tint l=read(),r=read(),v=read();\n\t\t\t\tt.update(1,1,n,l,r,v);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2:{\n\t\t\t\tint l=read(),r=read();\n\t\t\t\twrite(max(0ll,t.query(1,1,n,l,r).totmax.b)),putc('\\n');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tflush();\n    return 0;\n} \n```\n\u518d\u89c1 qwq~",
        "postTime": 1675864864,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5693\u3010EI \u7684\u7b2c\u516d\u5206\u5757\u3011"
    },
    {
        "content": "\u5173\u4e8e EI \u7684\u8fd9\u4e2a\u505a\u6cd5\u7684\u8bb2\u89e3\u4e0d\u591a\uff0c\u6211\u770b\u4e86\u4e00\u4f1a\u624d\u61c2\uff0c\u8fd9\u91cc\u653e\u4e00\u4e0b\u8f83\u4e3a\u8be6\u7ec6\u7684\u6d41\u7a0b\u8bb2\u89e3\uff08\u4e0d\u542b\u590d\u6742\u5ea6\u8bc1\u660e\uff09\n\n\u9996\u5148\u8003\u8651\u7ecf\u5178\u4e0d\u5e26\u4fee\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u95ee\u9898\u7684\u7ebf\u6bb5\u6811\u505a\u6cd5\uff0c\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4 $tot, sum, pre, suf$ \u5206\u522b\u8868\u793a\u5f53\u524d\u8282\u70b9\u6240\u4ee3\u8868\u7684\u533a\u95f4 $[l, r]$ \u7684\u603b\u548c\uff0c\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u524d\u7f00\u6700\u5927\u5b50\u6bb5\u548c\uff08\u5fc5\u987b\u5305\u542b $l$\uff09\uff0c\u540e\u7f00\u6700\u5927\u5b50\u6bb5\u548c\uff08\u5fc5\u987b\u5305\u542b $r$\uff09\u3002\n\n\u7136\u540e\u9012\u5f52\u5de6\u53f3\u5b50\u6811\u540e `pushup` \u66f4\u65b0\u4e00\u4e0b\u5f53\u524d\u8282\u70b9\u7684\u7b54\u6848\u3002\n\n\u5f53\u524d\u8282\u70b9\u7684\u6700\u5927\u5b50\u6bb5\u548c\u4ece \u5de6\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u53f3\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u5de6\u540e\u7f00 + \u53f3\u524d\u7f00\u4e2d\u53d6\u6700\u5927\u503c\u3002\n\n\u5f53\u524d\u8282\u70b9\u7684\u524d\u7f00\u6700\u5927\u5b50\u6bb5\u4ece \u5de6\u524d\u7f00\uff0c\u6574\u4e2a\u5de6\u533a\u95f4 + \u53f3\u524d\u7f00 \u4e2d\u53d6\u6700\u5927\u503c\u3002\n\n\u5f53\u524d\u8282\u70b9\u7684\u540e\u7f00\u6700\u5927\u5b50\u6bb5\u548c\u4ece \u53f3\u540e\u7f00\uff0c\u6574\u4e2a\u53f3\u533a\u95f4 + \u5de6\u540e\u7f00 \u4e2d\u53d6\u6700\u5927\u503c\u3002\n\n\u5f53\u524d\u8282\u70b9\u7684\u603b\u548c\u5c31\u662f\u5de6\u603b\u548c\u52a0\u53f3\u603b\u548c\u3002\n\n\u73b0\u5728\u770b\u770b\u4fee\u6539\uff0c\u5982\u679c\u4e00\u6b21\u533a\u95f4\u52a0\u5e76\u6ca1\u6709\u5bfc\u81f4\u51b3\u7b56\u53d1\u751f\u53d8\u5316\uff08\u53e6\u4e00\u4e2a\u5b50\u6bb5\u7684\u548c\u8d85\u8fc7\u4e86\u539f\u5148\u7684\u5b50\u6bb5\u79f0\u4e3a\u8be5\u533a\u95f4\u7684\u51b3\u7b56\u53d8\u5316\uff09\uff0c\u8be5\u533a\u95f4\u7684\u7b54\u6848\u4f1a\u589e\u5927 $lx$\u3002\uff08$l$ \u662f\u8fd9\u4e2a\u533a\u95f4\u539f\u5148\u7684\u6700\u5927\u5b50\u6bb5\u548c\u9009\u62e9\u7684\u5b50\u6bb5\u7684\u957f\u5ea6\uff0c$x$ \u662f\u672c\u6b21\u4fee\u6539\u7ed9\u6bcf\u4e2a\u8282\u70b9\u589e\u52a0\u7684\u503c\uff09\n\n\u6240\u4ee5\u539f\u5148\u7684 $tot, sum, pre, suf$ \u4e0d\u5728\u8868\u793a\u4e00\u4e2a\u503c\uff0c\u800c\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(l, v)$\uff0c$v$ \u5c31\u662f\u539f\u6765\u7684\u503c\uff0c$l$ \u662f\u5f53\u524d\u9009\u62e9\u7684\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u7528\u6765\u5728\u6709\u4fee\u6539\u7684\u65f6\u5019\u66f4\u65b0\u7b54\u6848\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5199\u6210\u4e00\u4e2a\u4e00\u6b21\u51fd\u6570\u6765\u8868\u793a\u4e00\u4e2a\u51b3\u7b56\uff1a$y = lx+v$\uff0c$x$ \u5c31\u8868\u793a\u51b3\u7b56\u6240\u5728\u7684\u533a\u95f4\u88ab\u6574\u4f53\u52a0\u4e86\u591a\u5c11\u3002\uff08\u5206\u6563\u52a0\u7684\u8bdd\u4f1a\u5728 `pushup` \u4e2d\u88ab\u66f4\u65b0\uff09\n\n\u90a3\u8fd9\u662f\u4fee\u6539\u4e0d\u4f7f\u51b3\u7b56\u6539\u53d8\u7684\u60c5\u51b5\uff0c\u5982\u679c\u4fee\u6539\u4f7f\u51b3\u7b56\u6539\u53d8\u4e86\uff0c\u539f\u6765\u7684\u51b3\u7b56 $(l_1, v_1)$ \u53d8\u6210\u4e86\u65b0\u7684\u51b3\u7b56 $(l_2, v_2)$\uff0c\u76f8\u5f53\u4e8e\u56e0\u4e3a $x$ \u7684\u589e\u5927 $y_1 = l_1x + v_1$ \u53d8\u5f97\u6bd4 $y_2 = l_2x + v_2$ \u5c0f\u4e86\u3002`pushup` \u7684\u65f6\u5019\u4e0d\u662f\u7ed9\u8fd9\u4e24\u4e2a\u51b3\u7b56\u53d6\u8fc7 $\\max$ \u5417\uff1f\u5728\u53d6 $\\max$ \u7684\u65f6\u5019\u987a\u4fbf\u8bb0\u5f55\u4e00\u4e0b\u51b3\u7b56\u7684\u9619\u503c\uff0c\u8be6\u7ec6\u5730\u8bf4\uff1a\n\n\u5728\u5408\u5e76\u4e24\u4e2a\u51b3\u7b56 $p = (l_1, v_1)$ \u548c $q = (l_2, v_2)$ \u65f6\uff08\u4e0d\u59a8\u8bbe $v_1 \\geq v_2$\uff09\uff0c\u7531\u4e8e\u521d\u59cb\u65f6\u6ca1\u6709\u4fee\u6539\uff0c\u6240\u4ee5\u80af\u5b9a\u9009 $p$\uff0c\u8fd9\u4e2a\u65f6\u5019\u987a\u4fbf\u8bb0\u5f55\u4e00\u4e2a\u9619\u503c $x$\uff0c\u4ee3\u8868\u5f53\u4fee\u6539\u5927\u4e8e\u7b49\u4e8e $x$ \u7684\u65f6\u5019\uff0c\u51b3\u7b56\u5c31\u4f1a\u6539\u53d8\uff08$x$ \u5373\u4e3a\u4ea4\u70b9\u6a2a\u5750\u6807\uff09\uff0c\u82e5\u4e0d\u4f1a\u6539\u53d8\uff08\u4ea4\u70b9\u5728 $y$ \u8f74\u5de6\u8fb9\uff09\u5219 $x = inf$\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u60c5\u51b5\uff0c\u5c31\u662f $l_1 < l_2$ \u800c\u4e14 $v_1 = v_2$\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9009 $q$\uff0c$x$ \u8bb0 $inf$\u3002\n\n\u4e00\u4e2a\u8282\u70b9\u7684\u9619\u503c\u4ee3\u8868\u5f53\u4fee\u6539\u5927\u4e8e\u7b49\u4e8e $x$ \u65f6\uff0c\u5b83\u7ef4\u62a4\u7684\u4e09\u4e2a\u51b3\u7b56 $sum, pre, suf$ \u4e2d\u6709\u4e00\u4e2a\u4f1a\u6539\u53d8\u3002\uff08\u53d6 $\\min$ \u5373\u53ef\uff09\n\n\u7136\u540e\u5728\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u751f\u4e86\u51b3\u7b56\u6539\u53d8\uff0c\u5c31\u76f4\u63a5\u91cd\u6784\u8fd9\u68f5\u5b50\u6811\u3002\uff08\u66b4\u529b\u66f4\u65b0\u5de6\u53f3\u5b50\u6811\u7136\u540e `pushup`\uff09\n\n\u770b\u8d77\u6765\u5f88\u66b4\u529b\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u662f\u5bf9\u7684\uff0cEI \u8bf4\u662f $O(n\\log^3n + m\\log^4n + q\\log n)$\uff0c\u5177\u4f53\u8bc1\u660e\u53ef\u4ee5\u770b [EI \u7684\u535a\u5ba2](https://entropyincreaser.blog.uoj.ac/blog/5217)\u3002",
        "postTime": 1662347439,
        "uid": 224978,
        "name": "optimize_2",
        "ccfLevel": 6,
        "title": "\u9898\u89e3"
    },
    {
        "content": "\u65f6\u95f4\u590d\u6742\u5ea6\u8bc1\u660e EI \u5199\u7684\u633a\u597d\u7684\uff0c\u53bb\u4ed6\u535a\u5ba2\u770b\u5c31\u884c\u4e86\u3002\u8fd9\u4e2a\u9898\u89e3\u4e3b\u8981\u5c31\u662f\u8bb2\u8bb2\u6b63\u786e\u6027\u548c\u600e\u4e48\u505a\u7684\u3002\n\n[link](https://blog.csdn.net/EI_Captain/article/details/101040226)\n\n\u4e3b\u8981\u601d\u8def\u5c31\u662f\uff0c\u5957\u7528 TB6 \u524d\u4f53\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u4e00\u4e2a\u65b9\u6848\u5199\u6210\u4e00\u6b21\u51fd\u6570\uff0c\u5373 $\\text{kx} + \\text b$ \u8868\u793a\u9009\u62e9\u533a\u95f4\u957f\u5ea6\u4e3a $\\text k$ \u65f6\u533a\u95f4\u548c\u4e3a $\\text b$ \u7684\u4e00\u79cd\u65b9\u6848\uff0c\u5176\u4e2d $\\text x$ \u662f\u533a\u95f4\u6574\u4f53\u589e\u91cf\u3002\n\n\u5bf9\u4e8e\u65e0\u533a\u95f4\u52a0\u7684\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u534a\u7fa4\u4fe1\u606f $(\\text{lmx},\\text {rmx},\\text {mx},\\text {sum})$ \u5373\u53ef\u3002\u4e0d\u7f57\u5217\u5177\u4f53\u7684\u8f6c\u79fb\u4e86\u3002\n\n\u8003\u8651\u76f4\u63a5\u5c06\u8fd9\u56db\u4e2a\u53d8\u91cf\u5199\u6210\u4e00\u6b21\u51fd\u6570\u3002\u6ce8\u610f\u6b64\u65f6\u4ece\u513f\u5b50\u5411\u4e0a\u7684\u8f6c\u79fb**\u90fd\u4ee5 $\\text x = \\text 0$ \u4e3a\u57fa\u51c6\u8f6c\u79fb\uff0c\u5373\u5047\u8bbe\u5b50\u6811\u5185\u7684\u6240\u6709\u8f6c\u79fb\u6ca1\u6709\u88ab\u533a\u95f4\u52a0\u5f71\u54cd\u5230\u3002**\n\n\u66f4\u65b0\u4fe1\u606f\u65f6\u5176\u4e2d\u6709\u4e00\u4e2a\u4e00\u6b21\u51fd\u6570\u7684\u8f6c\u79fb\u56fa\u5b9a\uff0c\u4e24\u4e2a\u4e00\u6b21\u51fd\u6570\u6bcf\u6b21\u6709\u4e24\u79cd\u8f6c\u79fb\uff0c\u4e00\u4e2a\u4e00\u6b21\u51fd\u6570\u6bcf\u6b21\u6709\u4e09\u79cd\u8f6c\u79fb\u3002\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u9608\u503c $\\text T$ \u8868\u793a**\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u7684\u67d0\u4e2a\u4e00\u6b21\u51fd\u6570\u8981\u5207\u6362\u8f6c\u79fb\u8def\u5f84\u7684\u6700\u5c0f\u9700\u8981\u589e\u52a0\u7684 $\\Delta \\text x$\uff0c\u5373\u533a\u95f4\u52a0\u7684\u503c\u3002**\n\n\u6839\u636e\u6b64\u5b9a\u4e49\u53ef\u4ee5\u5199\u51fa\u7ef4\u62a4\u3002\u6ce8\u610f\u5230\u8fd9\u4e2a $\\text T$ \u7684\u5b9a\u4e49\u5f88\u5de7\u5999\uff0c\u56e0\u4e3a\u6211\u4eec\u5047\u8bbe\u4e86**\u5b50\u6811\u4e2d\u6240\u6709\u8282\u70b9\u90fd\u4e0d\u4f1a\u88ab\u533a\u95f4\u52a0\u5f71\u54cd\u5230**\uff0c\u6545\u5bf9\u4e8e $\\text T$ \u7684\u8f6c\u79fb\u76f4\u63a5\u4ece\u5b50\u6811\u4e2d\u8f6c\u79fb\u4e0a\u6765\u5e76\u4e14\u52a0\u5165\u6240\u6709\u7684\u4e24\u8fb9\u5bf9\u5e94\u8f6c\u79fb\u7684\u4e00\u6b21\u51fd\u6570\u7684\u4ea4\u70b9\u5c31\u662f\u6b63\u786e\u7684\u3002\n\n\u8d34\u4e00\u4e0b\u8f6c\u79fb\u7684\u4ee3\u7801\uff1a\n\n```cpp\nstruct line\n{\n\tint k;ll b;\n\tline(){k = b = 0;}\n\tline(int K,ll B){k = K , b = B;}\n\tinline line operator + (const line &Ano) const\n\t{return line(k + Ano.k , b + Ano.b);}\n\tinline void ad(const ll V){b += 1ll * k * V;}\n};\n#define pll pair<line,ll> \n#define mk(x,y) make_pair(x , y)\n#define fs first \n#define sc second \npll rt;\ninline pll merge(line x,line y)\n{\n\tif(x.k < y.k || (x.k == y.k && x.b < y.b)) swap(x , y);\n\tif(x.b >= y.b) return mk(x , Inf);\n\treturn mk(y , (y.b - x.b) / (x.k - y.k));\n}\ninline info operator + (const info &Ano) const\n{\n\tinfo t;\n\tpll ret;\n\tt.x = min(x , Ano.x);\n\tt.sm = sm + Ano.sm;\n\tret = merge(lm , sm + Ano.lm) , t.lm = ret.fs , t.x = min(t.x , ret.sc);\n\tret = merge(Ano.rm , Ano.sm + rm) , t.rm = ret.fs , t.x = min(t.x , ret.sc);\n\tret = merge(Ano.mx , mx) , t.mx = ret.fs , t.x = min(t.x , ret.sc);\n\tret = merge(t.mx , rm + Ano.lm) , t.mx = ret.fs , t.x = min(t.x , ret.sc);\n\treturn t;\n}\n```\n\n\u8003\u8651\u6bcf\u6b21\u4fee\u6539\u65f6\u5982\u679c $\\Delta \\text x > \\text T_{\\text i}$ \u5c31\u5411\u4e0b\u9012\u5f52\u91cd\u6784\uff0c\u5426\u5219\u76f4\u63a5\u6253\u4e2a\u6807\u8bb0\u5c31\u80fd\u5f97\u5230\u5f53\u524d\u8282\u70b9\u6b63\u786e\u7684\u4fe1\u606f\u3002\n\n\u8fd9\u4e2a\u7ef4\u62a4\u597d\u4e86\u67e5\u8be2\u5c31\u76f4\u63a5\u67e5\u5c31\u884c\u4e86\u3002\u6ce8\u610f\u5230\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u4fee\u6539\u548c\u67e5\u8be2\u65f6\u7684\u4fe1\u606f\u662f\u5bf9\u7684\u5c31\u884c\u4e86\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u5728\u8fd9\u4e24\u4e2a\u5730\u65b9\u4fee\u6539/\u67e5\u8be2\u4fe1\u606f\u7684\u65f6\u5019\u9012\u5f52\u5904\u7406\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 EI \u8bc1\u660e\u4e86\u662f $\\text O((\\text n + \\text m) \\log ^ 3 \\text n + \\text q \\log \\text n)$\u3002\n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\n#define ll long long\nconst int Len = 4e5 + 5;\nconst ll Inf = 1e15;\nint n,m,a[Len];\nstruct line\n{\n\tint k;ll b;\n\tline(){k = b = 0;}\n\tline(int K,ll B){k = K , b = B;}\n\tinline line operator + (const line &Ano) const\n\t{return line(k + Ano.k , b + Ano.b);}\n\tinline void ad(const ll V){b += 1ll * k * V;}\n};\n#define pll pair<line,ll> \n#define mk(x,y) make_pair(x , y)\n#define fs first \n#define sc second \npll rt;\ninline pll merge(line x,line y)\n{\n\tif(x.k < y.k || (x.k == y.k && x.b < y.b)) swap(x , y);\n\tif(x.b >= y.b) return mk(x , Inf);\n\treturn mk(y , (y.b - x.b) / (x.k - y.k));\n}\nstruct info\n{\n\tline lm,rm,sm,mx;\n\tll x;\n\tinfo(){x = Inf;}\n\tinfo(line LM,line RM,line SM,line MX,ll X){lm = LM , rm = RM , sm = SM , mx = MX , x = X;}\n\tinline info operator + (const info &Ano) const\n\t{\n\t\tinfo t;\n\t\tpll ret;\n\t\tt.x = min(x , Ano.x);\n\t\tt.sm = sm + Ano.sm;\n\t\tret = merge(lm , sm + Ano.lm) , t.lm = ret.fs , t.x = min(t.x , ret.sc);\n\t\tret = merge(Ano.rm , Ano.sm + rm) , t.rm = ret.fs , t.x = min(t.x , ret.sc);\n\t\tret = merge(Ano.mx , mx) , t.mx = ret.fs , t.x = min(t.x , ret.sc);\n\t\tret = merge(t.mx , rm + Ano.lm) , t.mx = ret.fs , t.x = min(t.x , ret.sc);\n\t\treturn t;\n\t}\n}O[Len << 2],ep;\nll tag[Len << 2];\n#define ls(p) (p << 1)\n#define rs(p) (p << 1 | 1)\ninline void push_up(int p){O[p] = O[ls(p)] + O[rs(p)];}\ninline void cg(int p,ll w)//\u66f4\u65b0\u4e0d\u88ab\u5f71\u54cd\u7684 \n{\n\ttag[p] += w , O[p].x -= w;\n\tO[p].lm.ad(w) , O[p].rm.ad(w) , O[p].sm.ad(w) , O[p].mx.ad(w);\n}\ninline void push_down(int p)\n{\n\tif(tag[p])\n\t{\n\t\tcg(ls(p) , tag[p]) , cg(rs(p) , tag[p]);\n\t\ttag[p] = 0;\n\t}\n}\nvoid get(int p,int l,int r)\n{\n\tif(O[p].x >= 0) return;\n\tpush_down(p);\n\tint mid = (l + r) >> 1;\n\tget(ls(p) , l , mid) , get(rs(p) , mid + 1 , r);\n\tpush_up(p);\n}\nvoid build(int p,int l,int r)\n{\n\ttag[p] = 0;\n\tif(l == r)\n\t{\n\t\tline d = line(1 , a[l]);\n\t\tO[p] = info(d , d , d , d , Inf);\n\t\treturn;\n\t} \n\tint mid = (l + r) >> 1;\n\tbuild(ls(p) , l , mid) , build(rs(p) , mid + 1 , r);\n\tpush_up(p);\n}\nvoid update(int p,int l,int r,int nl,int nr,ll w)\n{\n\tif(nl <= l && nr >= r) \n\t{\n\t\tcg(p , w);\n\t\tget(p , l , r);\n\t\treturn;\n\t}\n\tpush_down(p);\n\tint mid = (l + r) >> 1;\n\tif(nl <= mid) update(ls(p) , l , mid , nl , nr , w);\n\tif(nr > mid) update(rs(p) , mid + 1 , r , nl , nr , w);\n\tpush_up(p);\n}\ninfo ret;bool fg;\nvoid Q(int p,int l,int r,int nl,int nr)\n{\n\tif(nl <= l && nr >= r)\n\t{\n\t\tget(p , l , r);\n\t\tif(!fg) fg = 1 , ret = O[p];\n\t\telse ret = ret + O[p];\n\t\treturn;\n\t}\n\tpush_down(p);\n\tint mid = (l + r) >> 1;\n\tif(nl <= mid) Q(ls(p) , l , mid , nl , nr);\n\tif(nr > mid) Q(rs(p) , mid + 1 , r , nl , nr); \n\tpush_up(p);\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i = 1 ; i <= n ; i ++) scanf(\"%d\",&a[i]);\n\tbuild(1 , 1 , n);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint op,l,r,x;scanf(\"%d %d %d\",&op,&l,&r);\n\t\tif(op == 1)\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tupdate(1 , 1 , n , l , r , x);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret = ep , fg = 0;\n\t\t\tQ(1 , 1 , n , l , r);\n\t\t\tprintf(\"%lld\\n\",max(0ll , ret.mx.b));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1676976543,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u8d1a\u9f6c\u8af6\u5199 KTT"
    }
]