[
    {
        "content": "\u9996\u5148\u5b9a\u4e0b\u4e00\u4e2a\u76ee\u6807\uff1a\u5982\u679c\u6211\u4eec\u9884\u5904\u7406\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\uff0c**\u81f3\u5c11**\u8981\u5e26\u7740\u591a\u5c11\u4e2a\u82f9\u679c\u8fdb\u5165\u5b83\u7684\u5b50\u6811\uff0c\u624d\u80fd\u591f\u8d5a\u5230\u82e5\u5e72\u4e2a\u82f9\u679c\u4e4b\u540e\u518d\u51fa\u6765\uff0c\u5c31\u76f4\u63a5\u4ece\u6839\u7ed3\u70b9\u5f00\u59cb\uff0c\u6bcf\u6b21\u628a\u6240\u6709\u6709\u5f97\u8d5a\u7684\u7ed3\u70b9\u653e\u8fdb\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u4e2d\uff0c\u8fdb\u884c\u4e00\u6b21 bfs \u5373\u53ef\u3002\u7531\u4e8e\u6bcf\u6b21\u6211\u4eec\u90fd\u80fd\u591f\u8d5a\u5230\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u82f9\u679c\u6570\u5c31\u4f1a\u8d8a\u6765\u8d8a\u591a\uff0c\u4e8e\u662f\u4e4b\u524d\u80fd\u8fdb\u53bb\u7684\u7ed3\u70b9\uff0c\u73b0\u5728\u4e5f\u80fd\u8fdb\u5f97\u53bb\uff08\u201c\u8fdb\u5f97\u53bb\u201d\u7684\u542b\u4e49\u662f\u8fdb\u53bb\u4e4b\u540e\u5728\u51fa\u6765\u4e4b\u524d\u80fd\u591f\u8d5a\u5230\uff09\u3002\u4e00\u76f4\u5230\u4efb\u4f55\u4e00\u4e2a\u5b50\u6811\u90fd\u8d5a\u4e0d\u5230\u4e3a\u6b62\u5373\u53ef\u3002\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5982\u4f55\u6c42\u51fa\u8fdb\u5165\u4e00\u4e2a\u5b50\u6811\u6240\u9700\u7684\u82f9\u679c\u6570\uff0c\u8bbe\u4e3a $f_u$\u3002  \n\n\u63d2\u4e00\u53e5\uff0c\u4e3a\u4ec0\u4e48\u8981\u80fd\u591f\u8d5a\u5f97\u5230\u624d\u8fdb\u5165\u4e00\u68f5\u5b50\u6811\u5462\uff1f\u56e0\u4e3a\u8981\u662f\u4f60\u8fdb\u53bb\u4e86\u4ec0\u4e48\u4e5f\u6ca1\u8d5a\u5230\uff0c\u53cd\u800c\u4e8f\u4e86\uff0c\u90a3\u4e48\u539f\u6765\u53bb\u4e0d\u4e86\u7684\u5730\u65b9\uff0c\u73b0\u5728\u8fd8\u662f\u53bb\u4e0d\u4e86\uff1b\u53cd\u800c\u6709\u53ef\u80fd\u539f\u6765\u80fd\u53bb\u7684\u5730\u65b9\uff0c\u73b0\u5728\u4e5f\u53bb\u4e0d\u4e86\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u73b0\u5728\u53bb\u5f97\u4e86\u7684\u5730\u65b9\uff0c\u73b0\u5728\u5c31\u53bb\u5457\uff0c\u5148\u5403\u4e86\u4e8f\u518d\u53bb\u5e72\u561b\uff1f\u4f60\u60f3\u53bb\uff0c\u7b49\u628a\u80fd\u8d5a\u7684\u90fd\u8d5a\u5b8c\u4e86\u518d\u53bb\u597d\u5427\u3002\u90a3\u65f6\u5019\uff0c\u80fd\u53bb\u5f97\u4e86\u5c31\u53bb\uff0c\u53bb\u4e0d\u4e86\u5c31\u7f62\u4e86\u3002  \n\n\u63a5\u4e0b\u6765\u6c42 $f_u$\u3002\u7528\u540c\u6837\u7684\u601d\u8def\uff0c$f_u$ \u7f6e\u4e3a $0$\uff0c\u5e76\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf $cur$\uff0c\u4ee3\u8868\u5f53\u524d\u62e5\u6709\u7684\u82f9\u679c\u6570\u3002\u5f00\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u4e00\u5f00\u59cb\u585e\u5165 $u$ \u7684\u6240\u6709\u5b50\u7ed3\u70b9\u3002\u6bcf\u6b21\u53d6\u51fa\u4e00\u4e2a $f$ \u503c\u6700\u5c0f\u7684\u7ed3\u70b9 $v$\uff0c\u770b\u770b\u662f\u5426\u6709 $f_u \\geq f_v$\uff0c\u82e5\u662f\uff0c\u5219\u8fdb\u53bb $v$\uff0c\u5e76\u66f4\u65b0 $cur$\uff1b\u82e5\u4e0d\u7136\uff0c\u5219\u4ee4 $cur \\leftarrow f_v$\uff0c\u8fd9\u6837\u5c31\u610f\u5473\u7740\u4e00\u5f00\u59cb\u8981\u591a\u62ff $f_v-f_u$ \u4e2a\u82f9\u679c\uff0c\u56e0\u6b64\u518d\u4ee4 $f_u \\leftarrow f_u+(f_v-cur)$\u3002\u5f53 $cur>f_u$ \u65f6\u5c31\u610f\u5473\u7740\u73b0\u5728\u7684\u82f9\u679c\u6570\u591a\u4e8e\u62ff\u8fdb\u6765\u7684\u82f9\u679c\u6570\uff0c\u53ef\u4ee5\u505c\u6b62\u4e86\uff0c\u6b64\u65f6 $f_u$ \u5373\u4e3a\u6240\u6c42\u3002\u82e5 $cur$ \u59cb\u7ec8\u5c0f\u4e8e $f_u$\uff0c\u8bf4\u660e\u600e\u4e48\u641e\u90fd\u8d5a\u4e0d\u5230\uff0c\u90a3\u4e48 $f_u=inf$\u3002  \n\n\u4ee3\u7801\u5982\u4e0b\uff1a  \n\n```cpp\n#include <bits/stdc++.h>\n#define For(i,a,b) for(int i=a;i<=b;i++)\n#define Rev(i,a,b) for(int i=a;i>=b;i--)\n#define clr(a,v) memset(a,v,sizeof(a))\n#define int long long\nusing namespace std;\n\nconst int N=1e4+5,INF=1e16;\n\nstruct cpdd{\n\tint pos,need;\n\tbool operator< (const cpdd& cp) const\n\t{\n\t\treturn need>cp.need;\n\t}\n};\n\nint n,a[N],fa[N];\nvector<int> son[N];\n\nint f[N];\n\npriority_queue<cpdd> q;\n\nvoid dp(int u)\n{\n\tint sz=son[u].size();\n\t\n\tFor(i,0,sz-1){\n\t\tint v=son[u][i];\n\t\tdp(v);\n\t}\n\t\n\tif(a[u]>=0){\n\t\tf[u]=0;\n\t\treturn;\n\t}\n\t\n\twhile(q.size()) q.pop();\n\t\n\tFor(i,0,sz-1){\n\t\tint v=son[u][i];\n\t\tq.push((cpdd){v,f[v]});\n\t}\n\t\n\tf[u]=-a[u];\n\t\n\tint cur=0,ok=0;\n\t\n\twhile(q.size()){\n\t\tif(cur-f[u]>=0){\n\t\t\tok=1;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tint v=q.top().pos; q.pop();\n\t\t\n\t\tif(cur<f[v]){\n\t\t\tf[u]+=f[v]-cur;\n\t\t\tcur=f[v];\n\t\t}\n\t\t\n\t\tcur+=a[v];\n\t\tassert(cur>=0);\n\t\t\n\t\tint szv=son[v].size();\n\t\tFor(i,0,szv-1){\n\t\t\tint w=son[v][i];\n\t\t\tq.push((cpdd){w,f[w]});\n\t\t}\n\t}\n\t\n\tif(cur-f[u]>=0) ok=1;\n\t\n\tif(!ok) f[u]=INF;\n}\n\nsigned main()\n{\n\tint s;\n\tcin>>n>>s;\n\t\n\tFor(i,2,n){\n\t\tcin>>fa[i];\n\t\tson[fa[i]].push_back(i);\n\t}\n\t\n\tFor(i,1,n) cin>>a[i];\n\t\n\tdp(1);\n\t\n\twhile(q.size()) q.pop();\n\t\n\tq.push((cpdd){1,f[1]});\n\t\n\tint ans=s;\n\t\n\twhile(q.size()){\n\t\tint u=q.top().pos; q.pop();\n\t\t\n\t\tif(ans<f[u]) break;\n\t\t\n\t\tans+=a[u];\n\t\t\n\t\tint sz=son[u].size();\n\t\t\n\t\tFor(i,0,sz-1){\n\t\t\tint v=son[u][i];\n\t\t\tq.push((cpdd){v,f[v]});\n\t\t}\n\t}\n\t\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n\n/*\n20 76\n1 1 1 3 5 2 4 3 1 3 9 7 1 11 7 1 17 16 18 \n43 -91 -38 -22 26 98 -84 73 77 1 47 62 -12 76 12 42 59 -11 100 23 \n*/\n\n/*\n30 98\n1 2 2 2 3 4 7 5 5 9 6 7 3 11 12 8 3 15 1 8 2 9 22 15 17 11 7 11 5\n-1 -45 -69 -92 80 3 -35 71 91 30 -83 -31 -80 5 47 70 -78 -40 79 -74 -24 -83 94 -69 54 20 -66 46 -25 2\n*/\n\n/*\n10 29\n1 1 1 3 4 1 5 8 8 \n70 61 -23 -4 -13 6 89 -75 84 -98 \n*/\n```",
        "postTime": 1634127779,
        "uid": 340903,
        "name": "\u51b7\u6708\u846cT\u9b42",
        "ccfLevel": 8,
        "title": "\u7ae5\u5e74 \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6811\u4e0a\u6bcf\u4e2a\u70b9\u6709\u6574\u6570\u70b9\u6743\u3002\n\n\u73b0\u5728\u4ece\u6839\u8282\u70b9\u5f80\u4e0b\u53d6\u6570\uff0c\u5bf9\u4e8e\u9664\u6839\u8282\u70b9\u4ee5\u5916\u7684\u8282\u70b9\u5fc5\u987b\u5148\u53d6\u5176\u7236\u8282\u70b9\u3002\n\n\u53d6\u8d1f\u503c\u70b9\u6743\uff0c\u5f53\u524d\u62e5\u6709\u7684\u6743\u503c\u51cf\u53bb**\u5b83\u7684\u7edd\u5bf9\u503c**\uff0c\u5982\u679c\u5f97\u8d1f\u6570\uff0c\u5219\u4e0d\u80fd\u53d6\u6b64\u8282\u70b9\u3002\n\n# \u89e3\u51b3\n## DP \n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7edf\u8ba1\u4e24\u4e2a\u4fe1\u606f\uff1a\n- $f_x$ \u8868\u793a\u4ece $x$ \u8282\u70b9\u51fa\u53d1\uff0c\u5728\u5b83\u7684\u5b50\u6811\u4e2d\u80fd\u53d6\u5230\u7684**\u6b63\u6570\u6743\u503c\u548c**\u3002\n\n\u5219 $f_x=f_x+f_y$\uff0c\u6761\u4ef6\u4e3a**\u70b9\u6743** $a_y>0$\u3002\n\n- $g_x$ \u8868\u793a\u4ece $x$ \u8282\u70b9\u51fa\u53d1\uff0c\u5728\u5b83\u7684\u5b50\u6811\u4e2d\u80fd\u53d6\u5230\u7684**\u6700\u5927\u503c**\u3002\n\n\u5219 $g_x=\\max(g_x,g_x+g_y)$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $f_x$ \u548c $g_x$ \u521d\u503c\u90fd\u4e3a $a_x$\u3002\n\n\u4f46\u662f dp \u53ea\u662f\u505a\u51c6\u5907\uff0c\u91cd\u70b9\u662f\u4e4b\u540e\u7684**\u8d2a\u5fc3\u7b56\u7565**\u3002\n## \u8d2a\u5fc3\n\u5148\u5bfc\u5165\u4e00\u4e2a\u6982\u5ff5\uff0c\u6309\u8d1f\u6743\u8282\u70b9\u7684\u4f4d\u7f6e\u5206\u5c42\uff0c\u5982\u56fe\u6240\u793a\uff08\u84dd\u8272\u4e3a\u8d1f\u6743\u8282\u70b9\uff0c\u767d\u8272\u4e3a\u6b63\u6743\u8282\u70b9\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/s8lfeb28.png)\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u5b83\u7684\u5c42\u6570\u4e3a**\u4ece\u5b83\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u8d1f\u6743\u8282\u70b9\u7684\u4e2a\u6570**\u3002\n\n\u5f00\u59cb\u8d2a\u5fc3\uff08\u4e00\u5f00\u59cb\u5806\u4e3a\u7a7a\uff0c\u5c42\u6570\u4e3a $0$\uff09\uff1a\n1. \u627e\u5230**\u4e0b\u4e00\u5c42**\u6240\u6709 $g_x>0$ \u7684\u8d1f\u6743\u8282\u70b9\u52a0\u5165\u961f\u5217\uff0c\u6309\u7edd\u5bf9\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n2. \u53d6\u51fa\u5806\u9876\u5143\u7d20 $x$\uff0c\u53d6\u5b8c\u4e0e $x$ \u8282\u70b9**\u540c\u4e00\u5c42**\u7684\u6b63\u6743\u8282\u70b9\uff0c$ans$ \u52a0\u4e0a $f_x$\u3002\n\n\u4e24\u6b65\u4ea4\u66ff\u8fdb\u884c\uff0c\u76f4\u5230\u5806\u4e3a\u7a7a\u3002\n\n## \u4ee3\u7801\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#define int long long\n\nusing namespace std;\nconst int N=2e4+5;\nstruct Node{\n\tint ver,nxt;\n}List[N<<1];\nint head[N],tot;\nint fa[N],a[N],f[N],g[N],vis[N],ans,max_ans;\npriority_queue<pair<int,int> > Q;\nint n,s;\n\nvoid add(int x,int y){\n\tList[++tot].ver=y;\n\tList[tot].nxt=head[x];\n\thead[x]=tot;\n\treturn;\n}\n\nvoid Dfs1(int x){\n\tint i;\n\tf[x]+=a[x];\n\tfor(i=head[x];i;i=List[i].nxt){\n\t\tint y=List[i].ver;\n\t\tDfs1(y);\n\t\tif(a[y]>0) f[x]+=f[y];\n\t}\n\treturn;\n}\n\nvoid Dfs2(int x){\n\tint i;\n\tg[x]+=a[x];\n\tfor(i=head[x];i;i=List[i].nxt){\n\t\tint y=List[i].ver;\n\t\tDfs2(y);\n\t\tg[x]=max(g[x],g[x]+g[y]);\n\t}\n\treturn;\n}\n\nvoid Find(int x){\n\tint i;\n\tfor(i=head[x];i;i=List[i].nxt){\n\t\tint y=List[i].ver;\n\t\tif(a[y]<0){\n\t\t\tif(!vis[y]) Q.push(make_pair(a[y],y));\n\t\t\tvis[y]=1;\n\t\t\tcontinue;\n\t\t}\n\t\tFind(y);\n\t}\n\treturn;\n}\n\nsigned main(){\n\tint i;\n\tscanf(\"%lld%lld\",&n,&s);\n\tfor(i=2;i<=n;i++){\n\t\tscanf(\"%lld\",&fa[i]);\n\t\tadd(fa[i],i);\n\t}\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&a[i]);\n\tg[1]=f[1]=s;\n\tDfs1(1);Dfs2(1);\n\tif(a[1]<0&&(s+a[1]<0||(s+a[1]==0&&f[1]<=0))){\n\t\tprintf(\"%lld\\n\",s);\n\t\treturn 0;\n\t}//\u7279\u5224s\u6700\u4f18\u7684\u60c5\u51b5\n\tmemset(vis,0,sizeof(vis));\n\tfor(i=1;i<=n;i++) if(a[i]<=0&&g[i]<=0) vis[i]=1;\n        //\u5148\u6253\u6807\u8bb0\u8868\u793a\u53d6\u5b83\u65e0\u610f\u4e49\n\tFind(1);\n\tmax_ans=max(s,f[1]);//\u5751\u70b9\uff0cs\u6bd4f[1]\u5927\n\tans=f[1];\n\twhile(!Q.empty()){\n\t\tint val=Q.top().first,id=Q.top().second;\n\t\tQ.pop();\n\t\tif(ans<-val) break;\n\t\tans+=f[id];\n\t\tmax_ans=max(max_ans,ans);\n\t\tFind(id);\n\t}\n\tprintf(\"%lld\\n\",max_ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1655437892,
        "uid": 209541,
        "name": "huayt",
        "ccfLevel": 0,
        "title": "P7925 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8\u3002](https://www.luogu.com.cn/problem/P7925)\n\n\u63d2\u5634\uff1a\u611f\u89c9\u6ca1\u6709\u84dd\u7684\u96be\u5ea6\u3002\n\n\u89e3\u9898\u601d\u8def\uff1a\n- \u4e86\u89e3\u9898\u610f\u540e\u8003\u8651\u6a21\u62df\u6458\u82f9\u679c\u7684\u8fc7\u7a0b\uff0c\u5373\u8d2a\u5fc3\u3002\n\n- \u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5148\u6458\u82f9\u679c\u540e\u5904\u7406\u9e1f\u5de2\uff0c\u800c\u4e14\u6458\u5b8c\u4e00\u4e2a\u5b50\u6811\u4e0a\u6240\u6709\u82f9\u679c\u540e\u624b\u4e2d\u7684\u82f9\u679c\u5fc5\u5b9a\u662f\u6700\u5927\u503c\uff0c\u6240\u4ee5\u6458\u5b8c\u82f9\u679c\u540e\u4ecd\u65e7\u4e0d\u80fd\u901a\u8fc7\u9e1f\u5de2\u7684\u8bdd\uff0c\u5176\u4ed6\u60c5\u51b5\u4e5f\u4e0d\u884c\u3002\u53c8\u56e0\u4e3a\u6bcf\u4e2a\u5b50\u6811\u4e0a\u82f9\u679c\u6570\u56fa\u5b9a\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5728\u4ee5\u9e1f\u5de2\u4e3a\u6839\u7684\u5b50\u6811\u4e0a\uff0c\u5148\u6458\u5b50\u6811\u4e0a\u82f9\u679c\u591a\u7684\u90a3\u4e2a\u5b50\u6811\u3002\n\n- \u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u5b50\u6811\u4e0a\u70b9\u6743\u4e4b\u548c\uff0c\u7136\u540e\u6b63\u6570\u6309\u7167\u70b9\u6743\uff0c\u8d1f\u6570\u6309\u5b50\u6811\u548c\u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u6ee1\u8db3\u8d2a\u5fc3\u4e86\u3002\n\n- \u6a21\u62df\u6458\u82f9\u679c\u7684\u8fc7\u7a0b\uff0c\u8fdb\u5165\u6bcf\u4e2a\u5b50\u6811\uff0c\u82e5\u6458\u51fa\u6765\u540e\u7684\u82f9\u679c\u8fd8\u6ca1\u6709\u539f\u5148\u7684\u591a\uff0c\u5219\u4e0d\u53bb\u6458\uff0c\u603b\u82f9\u679c\u6570\u4e0d\u53d8\uff0c\u53cd\u5219\u53d8\u4e3a\u6458\u540e\u7684\u82f9\u679c\u6570\u3002\n\n- \u7136\u540e\u7279\u5224\u4e00\u4e0b\u7279\u6b8a\u60c5\u51b5\uff0c\u6bd4\u5982\u8fdb\u4e0d\u53bb\u3001\u4e0d\u5982\u4e0d\u6458\u3001\u94fe\u7b49\u60c5\u51b5\uff0c\u4fbf\u53ef\u901a\u8fc7\u672c\u9898\u3002\n\nAC \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M(6001);\n#define int long long\nstruct node{int to,next;};\nnode t[M<<1];int tot,head[M];\nint n,siz[M],fa[M],val[M];\nstruct poss{int id,val,siz;};\nposs dp[M];int cnt,s,flag;\nvector<poss> son[M];\ninline bool cmp(poss x,poss y){\n\tif(x.val<0&&y.val<0) return x.siz>y.siz;\n\treturn x.val>y.val;\n}\ninline void add(int u,int v){\n\tt[++tot]={v,head[u]};head[u]=tot;\n\tt[++tot]={u,head[v]};head[v]=tot;\n}\ninline void _dfs(int x){\n\tsiz[x]=val[x];\n\tfor(int y,i(head[x]);i;i=t[i].next){\n\t\tif((y=t[i].to)==fa[x]) continue;\n\t\tfa[y]=x;_dfs(y);siz[x]+=siz[y];\n\t\tdp[++cnt]={y,val[y],siz[y]};\n\t\tson[x].push_back(dp[cnt]);\n\t}\n}\ninline void dfs(int x,int &b){\n\tif(son[x].size()<1) return ;\n\tint top(b);\n\tsort(son[x].begin(),son[x].end(),cmp);\n\tfor(int i(0);i<son[x].size();++i){\n\t\tif(val[son[x][i].id]<0&&-val[son[x][i].id]<=b){\n\t\t\tb+=val[son[x][i].id];\n\t\t\tdfs(son[x][i].id,b);\n\t\t}\n\t\telse if(val[son[x][i].id]>=0){\n\t\t\tb+=val[son[x][i].id];\n\t\t\tdfs(son[x][i].id,b);\n\t\t}\n\t\tif(b<top) b=top;\n\t\telse top=b;\n\t}\n}\nsigned main(){\n\tcin>>n>>s;\n\tfor(int i(2),u;i<=n;++i){\n\t\tcin>>u;add(u,i);\n\t\tif(u!=i-1) flag=1;\n\t}\n\tfor(int i(1);i<=n;++i)\n\t\tcin>>val[i];\n\tif(!flag){\n\t\tint ans(s),sum(s);\n\t\tfor(int i(1);i<=n;++i){\n\t\t\tsum+=val[i];\n\t\t\tif(sum<0) break;\n\t\t\tans=max(sum,ans);\n\t\t}\n\t\tcout<<ans;return 0;\n\t}\n\t_dfs(1); \n\tif(s>-val[1]&&val[1]<0) s+=val[1];\n\telse if(val[1]>0) s+=val[1];\n\telse {\n\t\tcout<<s;return 0;\n\t}\n\tdfs(1,s);\n\tcout<<s;return 0;\n}\n```",
        "postTime": 1655435216,
        "uid": 192615,
        "name": "_Yoimiya_",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P7925 \u300cEVOI-RD2\u300d\u7ae5\u5e74"
    }
]