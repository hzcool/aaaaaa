[
    {
        "content": "\u9996\u5148\u6ce8\u610f\u5230\uff0c\u5fc5\u987b\u770b\u5230\u6240\u6709\u7684\u753b\u5e08\u7684\u753b\u624d\u884c\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u5185\uff0c\u6bcf\u4e2a\u753b\u5e08\u6709\u591a\u5c11\u753b\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u7ef4\u62a4\n\n\u7b2c\u4e00\u4e2a\u5faa\u73af\u4e2d\uff0c\u628a\u533a\u95f4\u53f3\u7aef\u70b9\u4e0d\u65ad\u53f3\u79fb\uff0c\u5e76\u7ef4\u62a4\u8be5\u753b\u7684\u753b\u5e08\u51fa\u73b0\u6b21\u6570\uff0c\u51fa\u73b0\u65b0\u7684\u753b\u5e08\u628a\u8ba1\u6570\u5668\u52a0\u4e00\uff0c\u76f4\u5230\u770b\u5230\u6240\u6709\u753b\u5e08\u7684\u753b\uff0c\u7136\u540e\u5faa\u73af\u5224\u65ad\u5de6\u7aef\u70b9\u7684\u753b\u5e08\u662f\u5426\u51fa\u73b0\u4e00\u6b21\u4ee5\u4e0a\uff0c\n\n\u8fd9\u65f6\u5019\u5e94\u7528\u8d2a\u5fc3\u601d\u60f3\uff0c\u53ea\u8981\u51fa\u73b0\u8fc7\u4e00\u6b21\u4ee5\u4e0a\uff0c\u90a3\u4e48\u5de6\u7aef\u70b9\u5c31\u4e00\u5b9a\u53ef\u4ee5\u5f39\u51fa\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u7684\u5b58\u5728\u53ea\u4f1a\u8ba9\u533a\u95f4\u66f4\u957f\uff0c\u800c\u4e0d\u4f1a\u8ba9\u533a\u95f4\u5305\u542b\u753b\u5e08\u66f4\u591a\uff0c\u6211\u4eec\u53ea\u8981\u4fdd\u8bc1\u8fd9\u4e2a\u533a\u95f4\u6709\u6bcf\u4e2a\u753b\u5e08\u7684\u753b\u5c31\u884c\u4e86\uff0c\n\n\u8fd9\u65f6\u7528\u4e24\u4e2a\u53d8\u91cf\u6765\u8bb0\u5f55\u5f53\u524d\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u4f5c\u4e3a\u521d\u59cb\u7b54\u6848\n\n\u7136\u540e\u7b2c\u4e8c\u6b21\u5faa\u73af\uff0c\u7ee7\u7eed\u5faa\u73af\u5269\u4e0b\u7684\u753b\uff0c\n\n\u6bcf\u6b21\u5c06\u53f3\u7aef\u70b9+1\uff0c\u7ef4\u62a4\u753b\u7684\u753b\u5e08\u51fa\u73b0\u6b21\u6570\uff0c\u5e76\u4e0d\u65ad\u5f39\u51fa\u6ca1\u5fc5\u8981\u5b58\u5728\u7684\u5de6\u7aef\u70b9\uff0c\u56e0\u4e3a\u5728\u7b2c\u4e8c\u4e2a\u5faa\u73af\u91cc\u4efb\u4f55\u65f6\u523b\u7684\u533a\u95f4\u90fd\u4fdd\u8bc1\u6ee1\u8db3\u80fd\u770b\u5230\u6240\u6709\u753b\u5e08\u7684\u753b\uff0c\u6240\u4ee5\u5e94\u8be5\u5728\u5faa\u73af\u91cc\u9762\u5224\u65ad\u5f53\u524d\u533a\u95f4\u662f\u5426\u6bd4\u5df2\u77e5\u7b54\u6848\u7684\u533a\u95f4\u66f4\u77ed\uff0c\u5982\u679c\u66f4\u77ed\uff0c\u66f4\u65b0\u7b54\u6848\n\n\u6211\u7684\u4ee3\u7801\u533a\u95f4\u662f\u4ece\u96f6\u8ba1\u7684\uff0c\u6240\u4ee5\u8f93\u51fa\u65f6+1\n\n\u867d\u7136\u5faa\u73af\u5d4c\u5957\uff0c\u4f46\u662f\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u90fd\u53ea\u4f1a\u6700\u591a\u51fa\u5165\u4e00\u6b21\u533a\u95f4\uff0c\u6240\u4ee5\u590d\u6742\u5ea6O(n)\uff0c\u53ea\u662f\u5e38\u6570\u7565\u5927\n\n\n        \n\n```cpp\n#include<stdio.h>\nint m[2001],num;\nint n[1000000];\nint main()\n{\n    int R=-1,L=0,N,M,t,i=0,ansL,ansR;\n    scanf(\"%d%d\",&N,&M);\n    for(i=0;i<N;i++)\n    scanf(\"%d\",n+i);\n    i=0;\n    while(num!=M)\n    {\n        if(m[n[i]]==0)num++;\n        m[n[i]]++;\n        R++;\n        i++;\n    }\n    while(m[n[L]]>1)\n        m[n[L++]]--;\n    ansL=L;ansR=R;\n    while(i<N)\n    {\n        m[n[i]]++;\n        R++;\n        i++;\n        while(m[n[L]]>1)\n            m[n[L++]]--;\n        if(ansR-ansL>R-L)\n        {\n            ansR=R;\n            ansL=L;\n        }\n    }\n    printf(\"%d %d\",ansL+1,ansR+1);\n}\n\n```",
        "postTime": 1510478246,
        "uid": 58279,
        "name": "cuking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "## \u65b9\u6cd5\uff1a**\u533a\u95f4\u4f38\u7f29**\n\n### \u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\n\n\u7528\u4e24\u4e2a\u53d8\u91cf$l$\u548c$r$\u6765\u679a\u4e3e\u533a\u95f4\n\n\u5982\u679c$l$\u5230$r$\u7684\u533a\u95f4\u4e0d\u6ee1\u8db3\u8981\u6c42,$r$++\n\n\u5982\u679c$l$\u5230$r$\u7684\u533a\u95f4\u6ee1\u8db3\u8981\u6c42,\u8bb0\u5f55\u7b54\u6848,$l$++\n\n## \u4ee3\u7801\uff1a \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a[1000005],b[2005],k,ans,l,r,ll,rr;\n//b[i]\u8868\u793a\u5f53\u524d\u533a\u95f4\u753b\u5bb6i\u7684\u56fe\u753b\u6570\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tl=1; r=1; k=1; b[a[1]]=1; ans=1000005;\n    //k\u8bb0\u5f55\u5f53\u524d\u533a\u95f4\u4e2d\u6709\u591a\u5c11\u753b\u5bb6\u7684\u56fe\u753b\n\twhile(l<=r && r<=n)\n\t{\n\t\tif(k==m)//\u5224\u65ad\u662f\u5426\u7b26\u5408\u8981\u6c42\n\t\t{\n\t\t\tif(ans>r-l+1)\t\n\t\t\t{\n\t\t\t\tans=r-l+1;//ans\u8bb0\u5f55\u6700\u5c0f\u533a\u95f4\u957f\u5ea6\n\t\t\t\tll=l; rr=r;\n    //ll\u8bb0\u5f55\u6700\u5c0f\u533a\u95f4\u7684\u5de6\u7aef\u70b9,rr\u8bb0\u5f55\u6700\u5c0f\u533a\u95f4\u7684\u53f3\u7aef\u70b9\n\t\t\t}\n\t\t\tb[a[l]]--;\n\t\t\tif(b[a[l]]==0) k--;\n\t\t\tl++;\n\t\t}\n\t\telse{\n\t\t\tr++;\n\t\t\tb[a[r]]++;\n\t\t\tif(b[a[r]]==1) k++;\n\t\t}\n\t}\n\tprintf(\"%d %d\",ll,rr);\n\treturn 0;\n}\n```",
        "postTime": 1546567676,
        "uid": 39484,
        "name": "\u7c73\u5947",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u7c7b\u4f3c\u6ed1\u52a8\u7a97\u53e3\u7684\u8d2a\u5fc3\u3002\n\n\u8003\u8651\u66b4\u529b\u3002\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u8d2a\u5fc3\u627e\u5230\u4e00\u4e2a**\u6700\u4f18\u7684**\u5de6\u7aef\u70b9\uff0c\u5224\u65ad\u533a\u95f4\u957f\u5ea6\u662f\u5426\u66f4\u4f18\uff0c\u66f4\u65b0\u7b54\u6848\u3002\n\n\u5c1d\u8bd5\u5c06\u8fd9\u4e2a\u66b4\u529b\u4f18\u5316\u3002\n\n\u8003\u8651\u53f3\u7aef\u70b9\u4ece1\u5f00\u59cb\u4e00\u6b65\u4e00\u6b65\u5f80\u53f3\u8fb9\u63a8\u3002\u6211\u4eec\u589e\u52a0\u4e00\u4e2a\u6570\u7ec4pos\u8bb0\u5f55\u5927\u5e08\u6700\u665a\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u663e\u7136\u6bcf\u6b21\u53f3\u7aef\u70b9\u5f80\u53f3\u79fb\u4e00\u4f4d\uff0c\u5c31\u4f1a\u6709\u4e00\u4e2a\u5927\u5e08\u7684pos\u88ab\u66f4\u65b0\u3002\n\n\u82e5\u5de6\u7aef\u70b9\u5728\u4e0a\u4e00\u4e2a\u53f3\u7aef\u70b9\u7684\u6700\u4f18\u89e3\u4e3al\uff0c\u6211\u4eec\u8003\u8651\u5de6\u7aef\u70b9\u4e0a\u7684\u753b\u662fk\u3002\u82e5l<pos[k]\uff0c\u662f\u4e0d\u662f\u8fd9\u4e2a\u753b\u6839\u672c\u5c31\u6ca1\u6709\u5fc5\u8981\u770b\u4e0b\u53bb\u4e86\uff1f\u56e0\u4e3a\u8fd9\u4e2a\u753b\u5728\u540e\u9762\u80fd\u591f\u770b\u5230\uff0c\u800c\u8fd9\u4e2a\u753b\u53c8\u5904\u4e8e\u6700\u5de6\u8fb9\uff0c\u53ef\u4ee5\u9009\u62e9\u4e0d\u770b\uff0c\u4e8e\u662f\u6b64\u65f6\u6211\u4eec\u5e94\u8be5\u628al\u5f80\u53f3\u79fb\u4e00\u4f4d\uff0c\u663e\u7136\u8fd9\u662f\u7b26\u5408\u8d2a\u5fc3\u7b56\u7565\u7684\u3002\u4f46\u82e5l==pos[k]\uff0cl\u663e\u7136\u4e0d\u80fd\u53f3\u79fb\uff0c\u56e0\u4e3a\u8fd9\u6837\u4e0d\u7b26\u5408**\u5305\u542b\u6240\u6709\u79cd\u7c7b\u7684\u753b**\u7684\u6761\u4ef6\u3002\n\n\u4e8e\u662f\u6211\u4eec\u4fbf\u53ef\u4ee5\u5728\u6bcf\u6b21\u53f3\u7aef\u70b9\u5411\u53f3\u79fb\u4e00\u4f4d\uff0c\u518d\u8d2a\u5fc3\u5730\u66f4\u65b0\u5de6\u7aef\u70b9\u7684\u4f4d\u7f6e\u6765\u627e\u5230\u5de6\u7aef\u70b9\u7684\u6700\u4f18\u89e3\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u4f18\u5316\u7684\u66b4\u529b\u3002\u7136\u540e\u6bcf\u6b21\u5c31\u5224\u65ad\u533a\u95f4\u957f\u5ea6\u662f\u5426\u66f4\u4f18\u5c31\u884c\u4e86\u3002\n\n**\u4e00\u4e9b\u7ec6\u8282\uff1a** \u9996\u5148\u8fd9\u4e2a\u533a\u95f4\u91cc\u9762\u5fc5\u987b\u5305\u542b\u6240\u6709\u7684\u753b\u3002\u4e00\u5f00\u59cb\u628apos\u521d\u59cb\u5316\u4e3a-1\uff0c\u5219\u5982\u679c\u5de6\u7aef\u70b9\u7684\u753b\u4ec5\u51fa\u73b0\u8fc7\u4e00\u6b21\uff0c\u90a3\u4e48\u5de6\u7aef\u70b9\u4e0d\u4f1a\u66f4\u65b0\u3002\u5f53\u6240\u6709\u7684pos\u90fd\u4e0d\u4e3a-1\u7684\u65f6\u5019\uff0c\u624d\u53ef\u4ee5\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u561b\uff0c\u5f88\u50cf\u6ed1\u52a8\u7a97\u53e3\u3002\n\n\u7ec6\u8282\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=1e6+10,M=2e3+10;\nint mlen=0x7fffffff,ml,mr; // \u8bb0\u5f55\u7b54\u6848\nint pos[M]; // \u8bb0\u5f55\u79cd\u7c7b\u753b\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\nint pic[N],l=1,cnt; // \u753b\u3001\u5de6\u7aef\u70b9\u548c\u5df2\u7ecf\u5305\u542b\u4e86\u591a\u5c11\u79cd\u7c7b\u7684\u753b\n\nint main(){\n    ios::sync_with_stdio(false);\n    int n,m;\n    cin>>n>>m;\n    int na;\n    memset(pos,-1,sizeof(pos));\n    for(int i=1;i<=n;i++){\n        cin>>pic[i];\n        if(pos[pic[i]]==-1) cnt++; // \u5982\u679c\u6ca1\u6709\u51fa\u73b0\uff0c\u7edf\u8ba1+1\n        pos[pic[i]]=i; // \u66f4\u65b0\u4f4d\u7f6e\n        while(l!=i && l<pos[pic[l]]) l++; // \u66f4\u65b0\u5de6\u7aef\u70b9\n        if(cnt==m && i-l+1<mlen)\n            mlen=i-l+1,ml=l,mr=i; // \u5982\u679c\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u6709\u79cd\u7c7b\u7684\u753b\uff0c\u800c\u4e14\u533a\u95f4\u8f83\u4e4b\u524d\u66f4\u5c0f\uff0c\u66f4\u65b0\u7b54\u6848\n    }\n    cout<<ml<<' '<<mr<<endl;\n    return 0;\n}\n```",
        "postTime": 1510220946,
        "uid": 5554,
        "name": "Sino_E",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u770b\u5230\u4e8c\u5206\u7684\u9898\u89e3\u597d\u5c11\uff0c\u672c\u849f\u84bb\u6765\u4e00\u53d1   \n\u672c\u9898\u5c31\u662f\u6ed1\u52a8\u7a97\u53e3+\u4e8c\u5206\uff0c\u4e8c\u5206\u6ed1\u52a8\u7a97\u53e3\u7684\u957f\u5ea6\uff0c\u5e76\u5728\u6bcf\u6b21\u68c0\u67e5\u4e8c\u5206\u7b54\u6848\u7684\u6b63\u786e\u6027\u65f6\uff0c\u66f4\u65b0\u7b54\u6848\u3002       \n\u56e0\u4e3al\u548cr\u7684\u8303\u56f4\u4e0d\u65ad\u51cf\u5c0f\uff0c\u4e0d\u4f1a\u51fa\u73b0\u5148\u6709\u7b54\u6848\u6bd4\u65b0\u7b54\u6848\u66f4\u4f18\u7684\u60c5\u51b5\uff0c\u5176\u4f59\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <valarray>\nusing namespace std;\ntypedef long long ll;\ninline int max(int a,int b){return a>b?a:b;}\ninline int min(int a,int b){return a<b?a:b;}\ninline void read(int &a)//\u5feb\u901f\u8bfb\u5165 \n{\n\ta=0;char ch;\n\twhile ((ch=getchar())<48);\n\twhile (ch>47) a=(a<<1)+(a<<3)+(ch^48),ch=getchar();\n}\n#define N 1000100\n#define M 2020\nint ansa,ansb,n,m;\nint a[N];\nint flag[M];//\u8bb0\u5f55\u5728\u957f\u5ea6\u4e3ap\u7684\u533a\u95f4\uff0cm\u4e2a\u753b\u5e08\u753b\u7684\u753b\u6709\u51e0\u5e45 \nbool isok(int p)\n{\n\tint i,tmp=0;\n\tmemset (flag,0,sizeof(flag));//\u8981\u7f6e\u96f6 \n\tfor (i=1;i<=p;i++){//\u5148\u5c061~p\u7684\u753b\u8bb0\u4e0b \n\t\tif (flag[a[i]]==0)//\u82e5\u6709\u65b0\u51fa\u73b0\u7684\uff0c\u51fa\u73b0\u4e2a\u6570tmp++ \n\t\ttmp++;\n\t\tflag[a[i]]++;\n\t}\n\tif (tmp>=m) {//\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 \n\t\tansa=1;ansb=p;//\u66f4\u65b0\u7b54\u6848 \n\t\treturn true;\n\t}\n\tfor (i=p+1;i<=n;i++){//\u4e0d\u65ad\u6ed1\u52a8\u7a97\u53e3 \n\t\tflag[a[i-p]]--;\n\t\tif (flag[a[i-p]]==0) tmp--;\n\t\tif (flag[a[i]]==0) tmp++;\n\t\tflag[a[i]]++;\n\t\tif (tmp>=m){\n\t\t\tansa=i-p+1;ansb=i; //\u66f4\u65b0\u7b54\u6848 \n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nint main ()\n{\n\tint i,l,r,mid;\n\tread(n);read(m);\n\tfor (i=1;i<=n;i++)\n\tread(a[i]);\n\tl=0;r=n+1;//\u8981\u5c06l,r\u591a\u8d4b\u503c\u4e00\u4e2a\uff0c\u5426\u521991\u5206 \n\twhile (l<r){//\u4e8c\u5206 \n\t\tmid=(l+r)>>1;\n\t\tif (isok(mid))\n\t\tr=mid;//\u4e0a\u754c\u4e0b\u53d6\u6574 \n\t\telse\n\t\tl=mid+1;//\u4e0b\u754c\u4e0a\u53d6\u6574 \n\t}\n\tcout<<ansa<<' '<<ansb<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1527342475,
        "uid": 42978,
        "name": "\u661f\u738b\u6850",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "# Two pointers\n\u8bb2\u8fd9\u9053\u9898\u4e4b\u524d\u5148\u8bb2\u4e00\u4e0bTwo pointers.\n\nTwo pointers\u5c31\u662f\u4e24\u4e2a\u6307\u9488\u5728\u5e8f\u5217\u4e0a\u79fb\u52a8\u3002\uff08\u6ce8\u610f\u8fd9\u91cc\u7684\u6307\u9488\u4e0d\u662fC/C++\u4e2d\u4fdd\u5b58\u5730\u5740\u7684\u6307\u9488\u53d8\u91cf\uff0c\u5c31\u662f\u4e24\u4e2a\u5e8f\u5217\u7684\u4e0b\u8868\uff0c\u6bd4\u5982i,j,k\uff09\n\n### \u6211\u4eec\u5148\u6765\u770b\u4e00\u9053\u9898\n\n\u7ed9\u5b9as\u548c\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u6b63\u6574\u6570\u5e8f\u5217A\u3002\u6c42\u51fa\u6700\u77ed\u7684\u5b50\u533a\u95f4\u957f\u5ea6\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u5b50\u533a\u95f4\u7684\u548c\u4e0d\u5c0f\u4e8es.\n\n\u4f8b\uff1an = 5, s = 11, A = (1,2,3,4,5). (3, 4 ,5)\u7684\u548c\u4e3a12\uff0c\u4e0d\u5c0f\u4e8e11\u4e14\u6700\u77ed\u3002\n\nn <= 10 ^ 7\n\n#### \u66b4\u529b\u505a\u6cd5\uff1f \u679a\u4e3e\u5de6\u53f3\u7aef\u70b9\u3002\nO(n^2), \u65e0\u6cd5\u901a\u8fc7\u3002\n\n#### \u600e\u4e48\u4f18\u5316\uff1f\n\u8fd8\u8bb0\u5f97\u4e8c\u5206\u6cd5\u5417\uff1f\n\n\u4e8c\u5206\u6240\u6c42\u533a\u95f4\u957f\u5ea6k\uff0c\u7136\u540e\u8dd1\u4e00\u904d\u6574\u4e2a\u5e8f\u5217\u6c42\u51fa\u6240\u6709\u957f\u5ea6\u4e3ak\u7684\u533a\u95f4\u7684\u548c\uff0c\u770b\u770b\u6709\u6ca1\u6709\u8d85\u8fc7\u7ed9\u5b9a\u7684s\u3002\n\n\u590d\u6742\u5ea6O(n log n)\u3002\u4f46\u8fd8\u662f\u4e0d\u591f\u4f18\u3002\n\n#### Two pointers\n\n\u7528two pointers\u53ef\u4ee5\u505a\u5230O(n).\n\n\u6211\u4eec\u53d6\u4e24\u4e2a\u6307\u9488i, j,\u6700\u5f00\u59cb\u90fd\u653e\u57281\u4f4d\u7f6e\u3002\n\n\u8fd9\u4e24\u4e2a\u6307\u9488\u4f1a\u5939\u4f4f\u533a\u95f4a[i,j]\u3002\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u79fb\u52a8\u8fd9\u4e24\u4e2a\u6307\u9488\u6765\u8868\u793a\u4efb\u610f\u4e00\u6bb5\u533a\u95f4\u3002\n\n\u6307\u9488\u79fb\u52a8\u65f6\uff0c\u533a\u95f4\u548c\u7684\u53d8\u5316\u53ef\u4ee5\u5feb\u901f\u5f97\u5230\u3002\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u5f53\u524d\u4e24\u6307\u9488\u8303\u56f4\u5185\u6240\u6709\u6570\u7684\u548c\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\u5e8f\u5217\u4e2d\u53ea\u5305\u542b\u6b63\u6570\uff0c\u90a3\u4e48\u533a\u95f4\u8d8a\u957f\u5176\u5143\u7d20\u548c\u5c31\u8d8a\u5927\u3002\n\n\u5f00\u59cb\u65f6\uff0c\u6211\u4eec\u5c06\u53f3\u6307\u9488j\u5411\u53f3\u4e00\u76f4\u79fb\u52a8\uff0c\u76f4\u5230\u533a\u95f4\u548c\u5927\u4e8es\uff0c\u7136\u540e\u7528\u6b64\u65f6\u7684\u533a\u95f4\u957f\u5ea6\u66f4\u65b0\u7b54\u6848\u3002\u6b64\u65f6\u6211\u4eec\u5f97\u5230\u7684\u662f\u533a\u95f4\u5de6\u7aef\u70b9\u4e3ai\u65f6\u6700\u77ed\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u3002\n\n\u7136\u540e\u6211\u4eec\u5c06i\u53f3\u79fb\u4e00\u683c\uff0c\u6b64\u65f6\u53ef\u80fd\u533a\u95f4\u548c\u53d8\u5c0f\u800c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u7ee7\u7eed\u5c06j\u4ece\u4e4b\u524d\u4f4d\u7f6e\u5411\u53f3\u79fb\u52a8\uff0c\u76f4\u5230\u533a\u95f4\u548c\u5927\u4e8es\u3002\n\n\u53cd\u590d\u8fdb\u884c\uff0c\u5c06\u5f97\u5230\u6574\u4e2a\u9898\u76ee\u7684\u7b54\u6848\u3002\n\n```cpp\nscanf(\"%d%d\", &n, &s);\nfor(int i = 1; i <= n; i++)\n    scanf(\"%d\", a + i);\nint l = 1, r = 1, su = a[1];\nwhile(l <= n)\n{\n    while(su < s && r <= n)\n        r++, su += a[r];\n    if(su >= s) ans = min(ans, r - l + 1);\n    su -= a[l];\n    l++;\n}\nprintf(\"%d\\n\", ans);\n```\n\u6ce8\u610f\u5230\u4e24\u4e2a\u6307\u9488\u5747\u53ea\u4f1a\u53f3\u79fb\uff0c\u6240\u4ee5\u6bcf\u4e2a\u6700\u591a\u79fb\u52a8n\u6b21,\n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n)\n\n### \u6211\u4eec\u518d\u6765\u770b\u4e00\u9053\u9898\n\n\u7ed9\u5b9an,\u95ee\u5c06n\u62c6\u6210\u8fde\u7eed\u7684\u6574\u6570\u7684\u5e73\u65b9\u548c\u7684\u65b9\u6848\u3002\n\n\u8f93\u51fa\u8fd9\u4e9b\u65b9\u6848\u3002  n <= 10 ^ 14.\n\n\u4f8b\u5982\uff0c2030 = 21 ^ 2 + 22 ^ 2 + 23 ^ 2 + 24 ^2 = 25 ^ 2 + 26 ^ 2 + 27 ^ 2\u3002\n\n#### \u63d0\u793a\n\n\u65e2\u7136n<=10^14,\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651<=10^7\u7684\u6570\u7684\u5e73\u65b9\u3002\n\u7b97\u51fa\u6570\u7ec4a\uff0c\u5176\u4e2da[i]=i^2;\n\n\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u5728a\u4e0a\u9762\u53d6\u5b50\u533a\u95f4\uff0c\u4f7f\u5f97\u533a\u95f4\u548c\u6070\u4e3an.\u628a\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u7a0d\u4fee\u6539\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n### Two pointers\n\n\u8fd9\u91cc\u603b\u7ed3\u4e86\u4e00\u7cfb\u5217two-pointers\u7b97\u6cd5\u3002\n\n\u4f5c\u8005forever97.\n\n[Two pointers](https://www.cnblogs.com/forever97/category/909925.html )\n\n### \u8ba9\u6211\u4eec\u518d\u56de\u6765\u770b\u8fd9\u9053\u9898\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u7ec4\u5b58\u5165\u8f93\u5165\u7684\u6570\u636e\uff0c\u7136\u540e\u7531\u4e8ewangjy\u8981\u770b\u904d\u6bcf\u4e2a\u753b\u5bb6\u7684\u81f3\u5c11\u4e00\u5e45\u753b\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2acheck\u6570\u7ec4\u6765\u5b58\u5165\u5f53\u524di,j\u4e4b\u95f4\u6bcf\u4e2a\u753b\u5bb6\u753b\u7684\u4e2a\u6570\u3002\n\n\u6700\u540e\u8fd8\u9700\u8981\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u904d\u5386check\u6570\u7ec4\uff0c\u4f46\u662fM\u5c0f\u8fd8\u53ef\u4ee5\uff0c\u5927\u4e86\u5219\u662f\u4e00\u4e2a\u4e0d\u5c0f\u7684\u5f00\u652f\uff0c\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2acnt\u53d8\u91cf\uff0c\u6bcf\u5f53check[j]\u75310\u53d8\u52301\uff0c\u4fbf++\uff0c\u6bcf\u5f53check[i]\u75311\u53d8\u52300,\u4fbf--.\n\n\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\nint check[2001], paint[1000001];\nint main()\n{\n\tint n, m, cnt = 0, minn = 1000001, j = 0, i = 1;\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1; i <= n; i++)\n\t\tscanf(\"%d\", paint + i);\n\tint a = 1, b = n;\n\twhile(i <= n)\n\t{\n\t\twhile(cnt < m && j < n) {\n\t\t\tj++;\n\t\t\tif(check[paint[j]] == 0) cnt++;\n\t\t\tcheck[paint[j]]++;\n\t\t}\n\t\tcheck[paint[i]]--;\n\t\tif(check[paint[i]] == 0) cnt--;\n\t\ti++;\n\t\tif(j - i + 1 < minn && cnt == m) a = i, b= j, minn = j - i + 1;\n\t}\n\tprintf(\"%d %d\", a, b);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1564494796,
        "uid": 183629,
        "name": "jiaomingyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "###\u5c3a\u53d6\u6cd5###\n\n**\u601d\u8def\uff1a**\u9996\u5148\u8fd9\u662f\u5c3a\u53d6\u6cd5\u7684\u677f\u5b50\u9898\uff0c\u6211\u4eec\u5047\u8bbe\u4ece\u7b2cs\u5e45\u753b\u5f00\u59cb\u770b\uff0c\u4e3a\u4e86\u8986\u76d6\u6240\u6709\u5927\u5e08\u7684\u753b\u9700\u8981\u770b\u5230t\u3002\u8fd9\u6837\u7684\u8bdd\u53ef\u4ee5\u77e5\u9053\u5982\u679c\u4eces+1\u5f00\u59cb\u770b\u7684\u8bdd\uff0c\u90a3\u4e48\u5fc5\u987b\u770b\u5230t\u2018>=t\u5e45\u753b\u4e3a\u6b62\u3002so\uff0c\u6211\u4eec\u4ece\u533a\u95f4\u7684\u6700\u5f00\u5934\u628as\u53d6\u51fa\u4e4b\u540e\uff0cs\u8fd9\u5e45\u753b\u6240\u5c5e\u7684\u5927\u5e08\u51fa\u73b0\u6b21\u6570\u5c31\u8981\u51cf1,\u5982\u679c\u6b64\u65f6\u8fd9\u4e2a\u5927\u5e08\u51fa\u73b0\u6b21\u6570\u4e3a0\u4e86\uff0c\u5728\u540c\u4e00\u4e2a\u5927\u5e08\u518d\u6b21\u51fa\u73b0\u4e4b\u524d\uff0c\u4e0d\u505c\u5c06\u533a\u95f4\u672b\u5c3et\u5411\u540e\u63a8\u8fdb\u5373\u53ef\u3002\u6bcf\u6b21\u5728\u533a\u95f4\u672b\u5c3e\u8ffd\u52a0\u753bt\u65f6\u5c06t\u6240\u5c5e\u7684\u5927\u5e08\u51fa\u73b0\u6b21\u6570\u52a01,\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e0b\u4e00\u4e2a\u533a\u95f4\u4e0a\u5404\u4e2a\u5927\u5e08\u51fa\u73b0\u6b21\u6570\u7684\u66f4\u65b0\uff0c\u91cd\u590d\u8fd9\u4e00\u64cd\u4f5c\u4fbf\u80fd\u5728O(nlogn)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0b\u89e3\u51b3\u8fd9\u9053\u9898\u3002\n\n**\u6ce8\u610f\uff1a**\u672c\u9898\u6570\u636e\u5f88\u5927\uff0c\u5efa\u8bae\u8bfb\u5165\u4f18\u5316\uff0c\u4f46m\u5f88\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u8ba1\u6570\uff0c\u5982\u679cm\u5f88\u5927\u53ef\u4ee5\u79bb\u6563\u6216\u8005\u7528stl\u7684map\u3002\n\n**\u4ee3\u7801\uff1a**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int gi()\n{\n    int a=0;char x=getchar();bool f=0;\n    while((x<'0'||x>'9')&&x!='-')x=getchar();\n    if(x=='-')x=getchar(),f=1;\n    while(x>='0'&&x<='9')a=a*10+x-48,x=getchar();\n    return f?-a:a;\n}\nint countt[2005];\nint n,m,a[1000005];\nint main()\n{\n    n=gi(),m=gi();\n    for(int i=0;i<n;i++)a[i]=gi();\n    int s=0,t=0,num=0,res=n,l=1,r=n;\n    for(;;){\n    while(t<n&&num<m){\n        if(countt[a[t++]]++==0)num++;\n    }\n    if(num<m)break;\n    if(res>t-s){res=t-s;l=s+1;r=t;}\n    if(--countt[a[s++]]==0)num--;    \n    }\n    cout<<l<<' '<<r;\n    return 0;\n}\n```",
        "postTime": 1509695118,
        "uid": 44000,
        "name": "\u6d45\u8272\u8c03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "### \u65b9\u6cd5\uff1a\u5355\u8c03\u961f\u5217\n### \u6570\u636e\u7ed3\u6784\uff1a\u53cc\u7aef\u961f\u5217\n\n\u770b\u8fd9\u4e48\u591a\u9898\u89e3\u90fd\u6ca1\u6709STL\u7684\u961f\u5217\uff0c\u53ea\u6709\u624b\u5199\u7684\u961f\u5217\uff0c\u90a3\u6211\u5c31\u6765\u53d1\u4e00\u6ce2STL\u7684\u5427\n\n\u904d\u53861~n\u6bcf\u4e2a\u70b9\uff0c\u628a\u6bcf\u4e2a\u70b9\u90fd\u52a0\u5165\u5230\u961f\u5217\u4e2d\uff0c\u8fd9\u65f6\u5982\u679c\u961f\u5934\u548c\u961f\u5c3e\u7684\u753b\u5e08\u76f8\u540c\uff0c\u5c31\u8981\u628a\u961f\u5934\u5f39\u51fa\uff0c\u4f7f\u8fd9\u4e2a\u961f\u5217\u7684\u957f\u5ea6\u5c3d\u53ef\u80fd\u7684\u5c0f\u3002\n\n\n\u5177\u4f53\u64cd\u4f5c\u89c1\u4ee3\u7801\u6ce8\u91ca\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\ndeque<int>que;\n#define N 10001000\nconst int INF=1e8;\nint sz=INF;\nint n,m,ar[N],ans[2001];\nint main()\n{\n\tint i,j,l,r;\n\tscanf(\"%d%d\",&n,&m);\n\tint tot=0;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&ar[i]);\n\t\tif(!ans[ar[i]])//\u8ba1\u7b97\u5f53\u524d\u961f\u5217\u4e2d\u4e00\u5171\u51fa\u73b0\u4e86\u591a\u5c11\u79cd\u753b\n\t\t\ttot++;\n\t\tans[ar[i]]++;//\u8bb0\u5f55\u6bcf\u79cd\u753b\u51fa\u73b0\u7684\u6b21\u6570\n\t\tque.push_back(i);\n\t\twhile(!que.empty() && ans[ar[que.front()]]>1)\n\t\t{\n\t\t\tans[ar[que.front()]]--;//\u628a\u6bcf\u5e45\u753b\u51fa\u73b0\u7684\u6b21\u6570\u90fd\u53d8\u4e3a1\uff0c\u76f8\u5f53\u4e8e\u79cd\u6570,\u9632\u6b62\u4e0a\u9762\u7684tot\u591a\u8bb0\u5f55\u5bfc\u81f4\u51fa\u9519\n\t\t\tque.pop_front();//\u5982\u679c\u961f\u5217\u4e2d\u5b58\u5728\u4e0e\u961f\u5934\u76f8\u540c\u7684\u753b\uff0c\u90a3\u4e48\u961f\u5934\u8fd9\u5e45\u753b\u5c31\u6ca1\u5fc5\u8981\u5b58\u5728\uff0c\u5f39\u51fa\u961f\u5934\uff0c\u4fdd\u8bc1\u961f\u5217\u957f\u5ea6\u4e3a\u5f53\u524d\u6700\u5c0f\n\t\t}\n\t\tif(tot==m)//\u5f53\u961f\u5217\u4e2d\u5df2\u7ecf\u5b58\u5728\u6240\u6709\u753b\u5e08\u7684\u753b\u65f6\n\t\t\tif(que.size()<sz)//\u8bb0\u5f55\u6bcf\u6b21\u904d\u5386\u7684\u961f\u5217\u7684\u6700\u5c0f\u957f\u5ea6\n\t\t\t{\n\t\t\t\tsz=que.size();\n\t\t\t\tl=que.front();\n\t\t\t\tr=que.back();\n\t\t\t}\n\t}\n\tprintf(\"%d %d\",l,r);\n}\n```\n",
        "postTime": 1566358953,
        "uid": 178906,
        "name": "Wind_yu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u524d\u9762\u7684\u9898\u89e3\u90fd\u9ebb\u70e6\u4e86\uff0c\u6240\u4ee5\u6765\u4e00\u53d1\u7b80\u5355\u7684\u9898\u89e3\n\n\u56e0\u4e3a\u662f\u8981\u6c42\u770b\u7684\u753b\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5c3a\u53d6\u6cd5\uff08\u53cc\u6307\u9488\u6cd5\uff09\n\n\u65e2\u7136\u8981\u6c42\u8981\u770b\u5230M\u4f4d\u753b\u5bb6\u7684\u753b\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4[l,r]\uff0c\u4fdd\u8bc1\u8fd9\u4e2a\u533a\u95f4\u662f\u542b\u6709M\u4f4d\u753b\u5bb6\u4e14\u4ee5l\u5f00\u5934\u6700\u5c0f\u7684\u533a\u95f4\uff0c\u5219\u5982\u679c\u60f3\u66f4\u65b0\u7b54\u6848\u83b7\u5f97\u66f4\u5c0f\u533a\u95f4\uff0c\u53ea\u80fd\u53f3\u79fbl\uff0c\u800c\u4e0d\u80fd\u5de6\u79fbr\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u8003\u8651\u53cd\u8bc1\u6cd5\u3002\n\n\u5047\u8bbe\u6709\u4e00\u4e2a\u533a\u95f4[l,r-k]\u6bd4[l,r]\u66f4\u4f18\uff0c\u5219\u8fd9\u6bb5\u533a\u95f4\u4f1a\u5728r\n=r-k\u7684\u65f6\u5019\u5c31\u88ab\u66f4\u65b0\uff0c\u6240\u4ee5\u5de6\u79fbr\u65e0\u7528\u3002\n\n\u6240\u4ee5r\u5c31\u6ee1\u8db3\u5355\u8c03\u6027\uff08\u53ea\u589e\u4e0d\u51cf\uff09\uff0c\u53ef\u4ee5\u7528\u5c3a\u53d6\u6cd5\u505a\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=1000005;\nint n,m,a[MAXN],ans,b[MAXN],cnt,ansl,ansr;\ninline void I(int x){if(b[x]==0)cnt++;b[x]++;}//\u52a0\u5165\u7b2cx\u4f4d\u753b\u5bb6\u7684\u753b\ninline void D(int x){if(b[x]==1)cnt--;b[x]--;}//\u5220\u9664\u7b2cx\u4f4d\u753b\u5bb6\u7684\u753b\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)scanf (\"%d\",&a[i]);\n    ans=n;\n    for(int r=1,l=1;r<=n;r++){\n        I(a[r]);//\u9996\u5148\u63d2\u5165a[r]\u7684\u753b\n        while(true){\n            D(a[l]);//\u5148\u5220a[l]\u7684\u753b\n            if(cnt==m)l++;//\u5982\u679c\u5220\u4e86\u6ca1\u4e8b\uff0c\u52a0l\n            else{I(a[l]);break;}//\u5220\u4e86\u6709\u4e8b\uff0c\u8fd8\u7559\u7740\n        }\n        if(cnt==m&&r-l+1<ans)ans=r-l+1,ansl=l,ansr=r;\n    }\n    if (ansl!=0)printf (\"%d %d\",ansl,ansr);\n    else printf (\"1 %d\",n);//\u8f93\u51fa+\u7279\u5224\uff1a\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u2264n\u7684\u533a\u95f4\u4e0d\u6ee1\u8db3\u8981\u6c42\uff0c\u5219\u53ea\u597d\u9009\u62e9\u533a\u95f4[1,n]\n    return 0;\n}\n```",
        "postTime": 1550055711,
        "uid": 39863,
        "name": "\u5f15\u9886\u5929\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u5982\u679c\u7ed9\u5b9a\u62e5\u6709\u94b1\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728O(n)\u7684\u65f6\u95f4\u5185\u679a\u4e3e\u6240\u6709\u7684\u60c5\u51b5\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0c\u4e8c\u5206\u62e5\u6709\u94b1\u7684\u6570\u91cf\uff0c\u7136\u540e\u53bb\u5224\u65ad\u662f\u5426\u53ef\u884c\u3002\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define maxn 1000005\n#define maxm 2005\nint flag[maxm],n,m,a[maxn],cnt;\nint ansL,ansR;\nbool check(int x)\n{\n    cnt=0;\n    memset(flag,0,sizeof flag);\n    for (int i=1;i<=x;i++) \n    {\n        if (!flag[a[i]]) cnt++;    \n        flag[a[i]]++;\n    }\n    if (cnt==m) \n    {\n        ansL=1;ansR=x;\n        return 1;    \n    }\n    int y=1;\n    while (x<n) \n    {\n        flag[a[y]]--;\n        if (!flag[a[y]]) cnt--;\n        y++;\n        x++;\n        flag[a[x]]++;\n        if (flag[a[x]]==1) cnt++;\n        if (cnt==m) \n        {\n            ansL=y;ansR=x;\n            return 1;\n        }\n    }\n    return 0;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=n;i++) scanf(\"%d\",a+i);\n    int l=1,r=n;\n    while (l<=r) \n    {\n        int mid=(l+r)>>1;\n        if (check(mid)) r=mid-1;\n        else l=mid+1;    \n    }\n    printf(\"%d %d\\n\",ansL,ansR);\n    return 0;    \n}\n```",
        "postTime": 1470966409,
        "uid": 12736,
        "name": "LVYOUYW",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\n\u53cc\u6307\u9488    \n\u679a\u4e3e\u8d77\u70b9a    \n\u7ec8\u70b9b\uff08\u5c3e\u6307\u9488\uff09\u7d2f\u52a0    \n\u76f4\u5230\u53ef\u4ee5\u770b\u5230\u6bcf\u4e00\u4f4d\u540d\u5e08\u7684\u753b\u4f5c    \n\u7136\u540e\u6bd4\u8f83\u8bb0\u5f55\u7684\u533a\u95f4\u957f\u5ea6    \n\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u5c0f\u90a3\u5c31a\uff0cb\u66ff\u4ee3\u4e4b\u524d\u8bb0\u5f55\u4e0b\u6765\u7684     \n\n\u600e\u4e48\u5224\u65ad\u6bcf\u4e00\u4f4d\u540d\u5e08\u7684\u753b\u4f5c\u662f\u5426\u88ab\u770b\u8fc7\uff1f    \n\u7528\u4e00\u4e2a\u6876\uff0c    \n\u5982\u679c\u8fd9\u4f4d\u540d\u5e08\u7684\u753b\u4f5c\u52a0\u5165\u8fdb\u6765\u90a3\u5c31\u5728\u4ed6\u7684\u6876\u4e0a\u7d2f\u52a0    \n\u5982\u679c\u662f\u4ece0\u53d8\u4e3a1\u7684\u4e00\u4e2a\u6876\u90a3\u5c31\u662f\u65b0\u52a0\u5165\u4e86\u4e00\u4f4d\u753b\u5e08     \n\u6240\u4ee5\u8ba1\u6570\u5668\u7d2f\u52a0\uff08\u8ba1\u6570\u5668\u7528\u6765\u8ba1\u6570\u76ee\u524d\u53ef\u4ee5\u770b\u5230\u753b\u5e08\u753b\u4f5c\u7684\u6570\u91cf\uff09    \n\u5982\u679c\u662f\u4e00\u4e2a\u4ece1\u53d8\u4e3a0\u7684\u6876    \n\u90a3\u5c31\u662f\u5c11\u770b\u5230\u4e00\u4f4d\u753b\u5e08\u7684\u753b\u4f5c     \n\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u8981\u8ba1\u6570\u5668\u7d2f\u51cf     \n\n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n\n```cpp\n#include<iostream>\n#include<cstdio>\n\nusing namespace std;\nint l = 1,r = 1;\nint acioi[1000006];\nint tong[2020];\nint js = 0;\nint L,R,M = 0x7fffffff;\n\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i = 1;i <= n;++ i)\n\t\tscanf(\"%d\",&acioi[i]);\n\ttong[acioi[1]] ++;\n\tjs ++;\n\tfor(l = 1,r = 1;l <= n;++ l)\n\t{\n\t\ttong[acioi[l - 1]] --;\n\t\tif(tong[acioi[l - 1]] == 0)\n\t\t\tjs --;\n\t\twhile(js < m && r <= n)\n\t\t{\n\t\t\t++r;\n\t\t\ttong[acioi[r]] ++;\n\t\t\tif(tong[acioi[r]] == 1)\n\t\t\t\tjs ++;\n\t\t}\n\t\tif(js == m && r - l + 1 < M)\n\t\t{\n\t\t\tM = r - l + 1;\n\t\t\tL = l;R = r;\n\t\t}\n\t}\n\tcout << L << \" \" << R << endl;\n\treturn 0;\n}\n```",
        "postTime": 1570666419,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u4e0d\u7528\u771f\u5b9e\u7684\u961f\u5217\uff0c\u53ea\u8981\u7528\u4e24\u4e2a\u53d8\u91cf\u6a21\u62df\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5566\n\n\u4e5f\u53ef\u4ee5\u8bf4\u662f\u679a\u4e3e\u7684\u601d\u60f3\uff1a\u8fd9\u9898\u5f88\u5bb9\u6613\u60f3\u5230O(n^2)\u7684\u679a\u4e3e\u533a\u95f4\u7684\u7b97\u6cd5\uff0c\u5bb9\u6613TLE\u3002\u5148\u627e\u5230\u7b2c\u4e00\u4e2a\u5305\u542b\u6240\u6709\u4e0d\u540c\u6570\u5b57\u7684\u533a\u95f4[i,j]\uff0c\u7136\u540e\u8ba9i+1\uff0c\u540c\u65f6\u679a\u4e3ej\u627e\u5230\u53e6\u4e00\u4e2a\u533a\u95f4\uff0c\u7136\u540e\u53d6j-i\u7684\u6700\u5c0f\u503c\u5c31OK\u8fa3\u3002\u5224\u65ad\u4e0d\u540c\u7684\u6570\u5b57\u5b8c\u5168\u53ef\u4ee5\u7528\u6876\u89e3\u51b3\n\n\u53ef\u80fd\u6211\u7684\u8bed\u6587\u5dee\u4e86\u4e00\u70b9\uff0c\u5177\u4f53\u770b\u6211\u7684\u4ee3\u7801\u5427\uff08\u597d\u96be\u8868\u8ff0\u554aQAQ\uff09\n\n```cpp\n#include<cstdio>\nconst int N=1000005,M=2017;\nint a[N],b[M],n,m,l,r=1<<30;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    for(int i=1,j=0,k=0;i<=n;i++) //\u679a\u4e3e\u533a\u95f4[i,j]\n    {\n        while(k<m) //\u679a\u4e3ej\u627e\u5230\u5305\u542bm\u4e2a\u4e0d\u540c\u5143\u7d20\u7684\u533a\u95f4[i,j].\uff08k\u8868\u793a\u4e0d\u540c\u7684\u6570\u7684\u4e2a\u6570\uff09\n        {\n            j++; //\u5c0f\u7ec6\u8282\uff1aj\u521d\u503c\u4e3a0\uff0c\u63d0\u524d\u81ea\u589e\uff0c\u907f\u514d\u4e86\u4e00\u4e9b\u9ebb\u70e6\n            if(j>n) break;\n            if(b[a[j]]==0) k++; //\u6b64\u6570\u672a\u51fa\u73b0\u8fc7,k++\n            b[a[j]]++;\n        }\n        if(k==m&&r-l>j-i) l=i,r=j; //\u4fee\u6539\u6700\u5c0f\u503c\n        b[a[i]]--; //i+1\u524d\u5c06\u7b2ci\u4e2a\u6570\u79fb\u51fa\u533a\u95f4\n        if(b[a[i]]==0) k--; //\u5982\u679c\u6b64\u6570\u5728[i,j]\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\u5e76\u4e14\u73b0\u5728\u88ab\u79fb\u51fa\uff0c\u90a3\u4e48k--\n    }\n    printf(\"%d %d\",l,r); //\u6700\u540e\u8f93\u51fa\u7b54\u6848\u533a\u95f4\uff0c\u7ed3\u675f~\n}\n```",
        "postTime": 1489127222,
        "uid": 9757,
        "name": "x_faraway_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u4e0eP2564\u7684\u601d\u60f3\u662f\u76f8\u8fd1\u7684 \u7528\u7c7b\u4f3c\u94fe\u8868\u7684\u65b9\u5f0f\u5b58\u50a8\u6bcf\u4e00\u5e45\u753b\u7684\u4e0b\u4e00\u5e45\u540c\u753b\u5e08\u7684\u753b\u7684\u4f4d\u7f6e\n\n\u521a\u5f00\u59cb\u628a\u6bcf\u4e00\u4e2a\u753b\u5e08\u7684\u753b\u7684\u6700\u5f00\u59cb\u7684\u4f4d\u7f6e\u5b58\u8fdb\u5355\u8c03\u961f\u5217\uff08\u961f\u9996\u5143\u7d20\u6700\u5927\uff09 \u7136\u540e\u521d\u59cb\u7684\u7b54\u6848\u5c31\u662f\uff081\uff0c\u961f\u9996\u5143\u7d20\uff09\n\n\u63a5\u4e0b\u6765\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5f00\u59cb\u7684\u4f4d\u7f6e\uff0c\u7528\u4e0a\u9762\u7684\u65b9\u5f0f\uff0c\u65b0\u7684\u7b54\u6848\u4e3a\uff08i\uff0c\u961f\u9996\u5143\u7d20\uff09\n\n\u8fd9\u6b21\u7edf\u8ba1\u5b8c\u7b54\u6848\u4ee5\u540e\uff0c\u628ai\u8fd9\u5e45\u753b\u53bb\u6389\uff0c\u7528\u4e4b\u524d\u5904\u7406\u51fa\u6765\u7684\u90bb\u63a5\u8868\u628a\u4e0b\u4e00\u5e45\u548ci\u540c\u753b\u5e08\u7684\u753b\u7684\u4f4d\u7f6e\u52a0\u5230\u5355\u8c03\u961f\u5217\u91cc\u53bb\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u4f60\u7edf\u8ba1\u7684\u753b\u91cc\u8fb9\u4e00\u5b9a\u6709\u6240\u6709\u753b\u5e08\u7684\u753b\uff0c\u5e76\u4e14\u662f\u4ee5i\u4e3a\u8d77\u70b9\u7684\u6700\u4f18\u89e3\u3002\n\n\u6bd4\u5982\u6837\u4f8b\uff1a\n\n2 5 3 1 3 2 4 1 1 5 4 3\n\n\u7b2c\u4e00\u6b21     2 5 3 1       4\n\n\u7b2c\u4e8c\u6b21        5 3 1    2 4\n\n\u7b2c\u4e09\u6b21           3 1    2 4       5\n\n\u7b2c\u56db\u6b21              1 3 2 4       5\n\n\u7b2c\u4e94\u6b21                 3 2 4 1    5\n\n\u7b2c\u516d\u6b21                    2 4 1    5   3\n\n\u7b2c\u4e03\u6b21 \u5f00\u59cb\u76842\u540e\u9762\u6ca1\u67092\u4e86 \u5c31\u505c\u6b62\u4e86\u5427\n\n\u6700\u540e\u4e00\u4e2a\u52a0\u8fdb\u6765\u7684\u6570\u662f\u7528\u5355\u8c03\u961f\u5217\u6765\u7b97\u7684\n\n\u9884\u8ba1\u590d\u6742\u5ea6O\uff08n\uff09 \u7ed9\u51faAC\u4ee3\u7801\n\n\n\n```cpp\n#include <cstring>\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <cstdlib>\nusing namespace std;\n#define MAXN 1000010\n#define    MAXM 1010\nint last[MAXM],yest[MAXN],a[MAXN],used[MAXM],tot,n,m;\nvoid adde(int pos,int col){\n    yest[pos]=last[col];\n    last[col]=pos;\n}\nstruct monotonic_queue{\n    int head,tail,flag;\n    int line[MAXN];\n    void init(int f){\n        head=1;\n        tail=0;\n        flag=f;\n    }\n    void push(int x){\n        while(head<=tail&&x*flag>line[tail]*flag) tail--;\n        line[++tail]=x;\n    }\n    int headx(){return line[head];}\n}maxq;\nint main(){\n    maxq.init(1);\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    for(int i=n;i>=1;i--) adde(i,a[i]);\n    for(int i=1;i<=n;i++){\n        if(!used[a[i]]){\n            maxq.push(i);\n            used[a[i]]=1;\n            tot++;\n        }\n        if(tot==m) break;\n    }\n    int min=MAXN,ma,mb;\n    for(int i=1;i<=n;i++){\n        if(maxq.headx()-i<min){\n            min=maxq.headx()-i;\n            ma=i;\n            mb=maxq.headx();\n        }\n        last[a[i]]=yest[i];\n        if(!last[a[i]]) break;\n        maxq.push(last[a[i]]);\n    }\n    printf(\"%d %d\\n\",ma,mb);\n    return 0;\n}\n```",
        "postTime": 1493816213,
        "uid": 9431,
        "name": "cabasky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u4f7f\u7528\u961f\u5217\u7ed3\u6784\uff0c\u4f9d\u6b21\u5c06\u6570\u636e\u63d2\u5165\u961f\u5217\uff0c\u5982\u679c\u961f\u5934\u4e0e\u961f\u5c3e\u76f8\u540c\uff0c\u6216\u961f\u5934\u5728\u961f\u5217\u4e2d\u51fa\u73b0\u8d85\u8fc7\u4e00\u6b21\uff0c\u5c31\u5c06\u5b83\u5220\u6389\u3002\u52a8\u6001\u7edf\u8ba1\u961f\u5217\u957f\u5ea6\uff0c\u53d6\u6700\u5c0f\u8005\u3002\n\n```delphi\n\nvar q:array[1..1000000]of longint;\n    v:array[1..2000]of longint;\n    n,m,i,x,f,ans,s,t:longint;\nbegin\n  readln(n,m);  \n  f:=1;ans:=maxlongint;\n  for i:=1 to n do\n  begin\n    read(x);\n    if v[x]=0 then dec(m);\n    inc(v[x]);q[i]:=x;\n    while(f<i)and((q[f]=x)or(v[q[f]]>1))do\n    begin\n      dec(v[q[f]]);\n      inc(f);\n    end;\n    if(m=0)and(i-f+1<ans)then\n    begin\n      ans:=i-f+1;\n      s:=f;\n      t:=i;\n    end\n  end;\n  writeln(s,' ',t);\nend.\n\n```",
        "postTime": 1443939065,
        "uid": 2248,
        "name": "\u6c47\u6587\u5ba2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "# \u601d\u8def\n\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff0c\u4e0d\u65ad\u8bfb\u5165\uff0c\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u753b\u5bb6\u5728\u961f\u5217\u4e2d\u6709\u591a\u5c11\u753b\uff0c\u8bb0\u5f55\u961f\u5217\u4e2d\u753b\u7684\u79cd\u7c7b\u4e2a\u6570\uff0c\u5982\u679c\u5230\u4e86m\u79cd\uff0c\u5c31\u5f00\u59cb\u51fa\u961f\uff0c\u4e00\u76f4\u51fa\u961f\uff0c\u76f4\u5230\u753b\u7684\u6570\u91cf\u51cf\u4e00\uff0c\u505c\u6b62\u51fa\u961f\u3002\u6b64\u65f6\u961f\u5217\u91cc\u7684\u5143\u7d20\u6570\u91cf+1\u5c31\u662f\u7b54\u6848\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u66f4\u65b0\u4e00\u4e0b\u5de6\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u7ee7\u7eed\u8fdb\u961f\u51fa\u961f\uff0c\u76f4\u5230\u904d\u5386\u5b8c\u6574\u4e2a\u5e8f\u5217\uff0c\u5f97\u5230\u6700\u4f18\u89e3\u3002\n# \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\n\nconst int N=1000005;\nint n,m,cnt[2005],kin,minn=0x7fffffff,a,b;\n\nqueue<int> q;\n\nint main()\n{\n\tint x;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tcnt[x]++;\n\t\tif(cnt[x]==1) kin++;\n\t\tq.push(x);\n\t\tif(kin==m)\n\t\t\twhile(1)\n\t\t\t{\n\t\t\t\tint y=q.front();\n\t\t\t\tcnt[y]--;\n\t\t\t\tq.pop();\n\t\t\t\tif(cnt[y]==0)\n\t\t\t\t{\n\t\t\t\t\tkin--;\n\t\t\t\t\tif(q.size()+1<minn)\n\t\t\t\t\t{\n\t\t\t\t\t\tminn=q.size()+1;\n\t\t\t\t\t\tb=i;\n\t\t\t\t\t\ta=i-q.size();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t}\n\tcout<<a<<\" \"<<b<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1572593930,
        "uid": 113696,
        "name": "Hanzire76",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6709$n$\u4e2a\u6570\u7684\u5e8f\u5217\uff0c\u6709$k$\u79cd\u6570\uff0c\u6c42\u4e00\u6bb5\u6700\u5c0f\u7684\u533a\u95f4\u4f7f\u5f97\u5305\u62ec\u6240\u6709k\u79cd\u6570\u5b57\u3002\n\n$1\\le n\\le 1000000$\n\n## \u601d\u8def\n\n\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u53cc\u6307\u9488\u7684\u7ebf\u6027\u7b97\u6cd5\u3002\n\n\u6211\u4eec\u8fd8\u662f\u8003\u8651\u4e24\u4e2a\u53d8\u91cf$l,r$\uff0c\u5bf9\u4e8e$r$\u5bf9\u5e94\u7684\u6bcf\u4e00\u4e2a$l$\uff0c\u611f\u6027\u7406\u89e3\u6765\u8bf4\u4ed6\u4eec\u662f\u6b63\u76f8\u5173\u7684\u3002\n\n\u518d\u901a\u4fd7\u4e00\u70b9\uff0c\u5c31\u662f\u8bf4$r$\u8d8a\u5927\uff0c\u5bf9\u5e94\u7684$l$\u4e0d\u4f1a\u66f4\u5c0f\u3002\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece1\u5230n\u679a\u4e3e\u6bcf\u4e00\u4e2a$r$\uff0c\u7136\u540e\u4f7f$\\ l\\ $\u5c3d\u53ef\u80fd\u7684\u5411\u540e\u5373\u53ef\u3002\n\n\u6700\u540e\u7edf\u8ba1\u4e00\u4e0b\u7b54\u6848\u5373\u53ef\u3002\n\n$Code :$\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 1000000 + 10;\n\nint n , m , a[maxn] , cnt , ansl , ansr , tot = 0x7fffffff;\nint flag[maxn];\n\nint main () {\n    scanf(\"%d%d\" , &n , &m);\n    for(int i = 1 ; i <= n ; ++ i) scanf(\"%d\" , a + i);\n    int l = 1 , r = 1; \n    for(r = 1 ; r <= n ; ++ r) {\n        if(!flag[a[r]]) cnt ++; flag[a[r]] ++;\n        while(flag[a[l]] > 1) {flag[a[l]] --; l ++;}\n        if(cnt == m) {if(r - l + 1 < tot) tot = r - l + 1 , ansl = l , ansr = r;}\n        \n    }\n    printf(\"%d %d\" , ansl , ansr);\n    return 0;\n}\n```",
        "postTime": 1570189954,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u76f4\u63a5\u5c31\u662f\u6ed1\u52a8\u7a97\u53e3\u6a21\u677f\u9898\u3002\u4e0d\u65ad\u8ba9\u7a97\u53e3\u589e\u5927\uff0c\u77e5\u9053\u7a97\u53e3\u4e2d\u4e0d\u540c\u7684\u5143\u7d20\u5230m\u4e2a\u4e3a\u6b62\uff0c\u8fd9\u4e2a\u65f6\u5019\u7a97\u53e3\u7684\u53f3\u7aef\u70b9\u7ee7\u7eed\u5411\u524d\u79fb\u52a8\uff0c\u79fb\u52a8\u7684\u540c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u79fb\u52a8\u5de6\u7aef\u70b9\u3002\u6574\u4e2a\u8fc7\u7a0b\u4e00\u5b9a\u8981\u4fdd\u8bc1\u4e0d\u540c\u7684\u5143\u7d20\u4e2a\u6570\u4e3am\u3002\u4e0e\u6b64\u540c\u65f6\u53ea\u8981\u4e0d\u65ad\u66f4\u65b0\u7a97\u53e3\u7684\u6700\u5c0f\u503c\u5c31\u597d\u4e86\u3002\u4e3a\u4e86\u8868\u793a\u5143\u7d20\u4e0d\u540c\uff0c\u6211\u4eec\u4f7f\u7528STL\u4e2dmap\u6765\u5904\u7406\u3002\u8fd9\u4e2a\u9898\u548c\u5218\u6c5d\u4f73\u4e66\u4e2d\u300a\u4e0d\u540c\u7684\u96ea\u82b1\u300b\u4e00\u6a21\u4e00\u6837\u3002\n\n```c\n#include<stdio.h>\n#include<iostream>\n#include<string>\n#include<map>\nusing namespace std;\n\nmap<int,int> K;\nint n,m,sum;\nint val[MAXN];\nint minn,pos;\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    int Left=1;\n    int Right=1;\n    minn=INF;\n    sum=0;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&val[i]);\n        if(!K.count(val[i]))  //\u53ea\u662f\u4e3a\u4e86\u521d\u59cb\u5316\u7a97\u53e3\uff0c\u4f7f\u5f97\u4e0d\u540c\u5143\u7d20\u4e2a\u6570\u6ee1\u8db3m\u4e2a\n        {\n            K[val[i]]=0;\n            sum++;\n        }\n        K[val[i]]++;\n        //Right++;\n        if(sum==m)\n        {\n            while(K[val[Left]]>1)   //\u8ba9\u5de6\u7aef\u70b9\u6ed1\u52a8\uff0c\u5168\u7a0b\u4fdd\u6301\u4e0d\u540c\u7684\u5143\u7d20\u4e2a\u6570\u4e3am\u4e2a\u3002\n            {\n                K[val[Left]]--;\n                Left++;\n            }\n            if(minn>(i-Left)+1)\n            {\n                minn=i-Left+1;\n                pos=Left;\n            }\n        }\n    }\n    printf(\"%d %d\\n\",pos,pos+minn-1);//minn\u662f\u533a\u95f4\u957f\u5ea6\n    return 0;\n}\n```\n\n",
        "postTime": 1568381684,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u51fa\u7bc7\u9898\u89e3\u8bd5\u8bd5~\n\n\u4e8c\u5206\u533a\u95f4\u957f\u5ea6L\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3aL\u7684\u533a\u95f4\u4f7f\u5f97\u6240\u6709\u5927\u5e08\u90fd\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\n\n~~\u4ee3\u7801\u6709\u70b9\u957f\uff0c\u6392\u7248\u4e00\u822c\uff0c\u8bf8\u4f4d\u8c05\u89e3~~\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int MAXN=1000000 + 2;\nconst int MAXM=2000 + 2;\nint pic[MAXN]={0},cnt[MAXM]={0},n,m,a,b;\n//cnt[i]\u8868\u793a\u5927\u5e08i\u5728\u5f53\u524d\u533a\u95f4\u5185\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\n//cnt1\u8868\u793a\u5f53\u524d\u533a\u95f4\u5185\u4e00\u5171\u51fa\u73b0\u4e86\u51e0\u4e2a\u5927\u5e08\ninline bool check(int mid)\n{\n\tint cnt1=0;\n\tmemset(cnt,0,sizeof(cnt));\n\tfor(int i=1;i<=mid;i++)\n\tif(!cnt[pic[i]])\n\t\t++cnt[pic[i]],++cnt1;\n\telse\n\t\t++cnt[pic[i]];\n\tif(cnt1==m) {a=1,b=mid;return true;}\n\tfor(int i=mid+1;i<=n;i++)\n\t{\n\t\tint x=pic[i-mid],y=pic[i];\n\t\t--cnt[x];\n\t\tif(!cnt[x])\n\t\t\t--cnt1;\n\t\tif(!cnt[y])\n\t\t\t++cnt1;\n\t\t++cnt[y];\n\t\tif(cnt1==m) {a=i-mid+1,b=i;return true;}\n\t}\n\treturn false;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&pic[i]);\n\tint l=0,r=n,ansa,ansb;\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid))\n\t\t{\n\t\t\tansa=a,ansb=b;\n\t\t\tr=mid-1;\n\t\t}\n\t\telse\n\t\t\tl=mid+1;\n\t}\n\tprintf(\"%d %d\\n\",ansa,ansb);\n\treturn 0;\n}\n```",
        "postTime": 1546775375,
        "uid": 88736,
        "name": "Sober_Clever",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011p1638 \u901b\u753b\u5c55"
    },
    {
        "content": "72ms\uff0c\u52a0\u4e2a\u8bfb\u5165\u4f18\u5316\u53ef\u4ee5\u66f4\u5feb\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint ls1=1,ls2,to=0x7f7f7f7f,jl1,jl2=0x7f7f7f7f,m,n,js[1000010],tong[2010];\nint main()\n{\n\tint k=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&js[i]);\n\t\tls2=i;\n\t\tif(tong[js[i]]==0)k++;//k\u8bb0\u5f55\u5f53\u524d\u7684\u4eba\u7684\u6570\u91cf\n\t\ttong[js[i]]++;//\u5f53\u524d\u7f16\u53f7\u6876++\n\t\twhile(ls2!=ls1&&js[ls2]==js[ls1]||tong[js[ls1]]>1)//\u7f29\u51cf\n\t\t{\n\t\t\ttong[js[ls1]]--;\n\t\t\tls1++;\n\t\t}\n\t\tif(k==m&&ls2-ls1<jl2-jl1)\n\t\t{\n\t\t\tjl2=ls2;\n\t\t\tjl1=ls1;\n\t\t}\n\t}\n\tprintf(\"%d %d\",jl1,jl2);\n}\n```",
        "postTime": 1534305506,
        "uid": 110871,
        "name": "\u7070\u767d\u9aa8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": ">>\u65b0\u624b\u9898\u89e3\uff0c\u8bf7\u591a\u5305\u6db5\n>>p'\u7528\u6765\u8bb0\u5f55\u56fe\u753b >>flag\u8868\u793a\u753b\u5bb6\n        \n            \n```cpp\n#include <cstdio>\nint p[1000002],flag[2008];\nint a,b,n,m;\nint main()\n{\n    int i,head,ans;\n    int x;\n    head=1; ans=200000000;\n    scanf(\"%d%d\",&n,&m);\n    for (i=1; i<=n; ++i)\n    {\n        scanf(\"%d\",&p[i]);  >>\u8282\u7701\u65f6\u95f4\uff0c\u628a\u8bfb\u5165\u548c\u8ba1\u7b97\u653e\u5728\u4e00\u8d77\n        if (flag[p[i]]==0)\n          m--;\n        flag[p[i]]++;\n        while ((head<i) && ((p[head]==p[i]) || (flag[p[head]]>1))) \n        {\n            flag[p[head]]--;\n            head++;\n         } \n        if ((m==0) && (i-head+1<ans))\n        {\n            ans=i-head+1;  //cost=i-head+1\n            a=head;\n            b=i;\n         } \n    }\n    printf(\"%d %d\\n\",a,b);\n}\n```",
        "postTime": 1481340423,
        "uid": 22841,
        "name": "Right",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u57fa\u672c\u601d\u8def\u5c31\u662f\u4e0e\u5355\u8c03\u961f\u5217\u7c7b\u4f3c\u7684\u5c3a\u53d6\u6cd5\uff0c\u5373\u4e0d\u65ad\u5c06\u53f3\u7aef\u70b9\u53f3\u79fb\uff0c\u5e76\u5728\u6761\u4ef6\u5408\u9002\u65f6\u5c06\u5de6\u7aef\u70b9\u5de6\u79fb\uff0c\u5e76\u5b9e\u65f6\u66f4\u65b0\u6700\u4f18\u89e3\u3002\u4e0d\u8fc7\u5bf9\u4e8e\u8fd9\u4e2a\u7aef\u70b9\u5224\u65ad\u6761\u4ef6\uff0c\u6211\u4e0e\u5176\u4ed6\u7684\u9898\u89e3\u5199\u7684\u4e0d\u592a\u4e00\u6837\uff0c\u6211\u4f7f\u7528\u4e86\u4e00\u4e2aM\u5927\u5c0f\u7684\u6570\u7ec4T\uff0c\u50cf\u6876\u4e00\u6837\u5b9e\u65f6\u4fdd\u5b58\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u82e5\u8fd9\u4e2a\u6570\u5728\u4ee5\u540e\u5df2\u7ecf\u51fa\u73b0\u8fc7\uff0c\u5c31\u53f3\u79fb\u5de6\u7aef\u70b9\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define MAXN (1000000+50)\n#define MAXM (2000+50)\nusing namespace std;\n\nint N,M,cnt,x=1,L,R,ans=0x7fffffff,T[MAXM],d[MAXN];\n//x\u76f8\u5f53\u4e8e\u5de6\u7aef\u70b9\u3002\n\ninline void read(int &a)\n{\n    register char c=getchar();\n    for (a=0; c<'0'||'9'<c; c=getchar());\n    for (; '0'<=c && c<='9'; c=getchar())\n        a=(a<<3)+(a<<1)+(c^48);\n}\n\nint main()\n{\n    read(N); read(M);\n    for (register int i=1; i<=N; i++)\n    {//\u8fd9\u91cc\u7684i\u5c31\u76f8\u5f53\u4e8e\u53f3\u7aef\u70b9\n        read(d[i]); T[d[i]]++;//\u8bb0\u5f55\u8fd9\u4e2a\u6570\u51fa\u73b0\u8fc7\u4e00\u6b21\u3002\n        if (T[d[i]]==1) cnt++;//\u52a0\u5b8c1\u4e4b\u540e\u624d\u662f1\uff0c\u8bf4\u660e\u662f\u4e00\u4e2a\u65b0\u6570\u5b57\n        while (T[d[x]]>1) //\u5982\u679c\u73b0\u5728\u7684\u5de6\u7aef\u70b9\u51fa\u73b0\u8d85\u8fc7\u4e00\u6b21\n            T[d[x]]--, x++;//\u51fa\u73b0\u6b21\u6570\u51cf1\uff0c\u5de6\u7aef\u70b9\u5411\u53f3\u79fb\u52a8\n\t\t//\u6ce8\u610f\uff0ccnt\u8fd9\u91cc\u4e0d\u80fd\u51cf1\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6570\u8fd8\u662f\u51fa\u73b0\u8fc7\u81f3\u5c11\u4e00\u6b21\u7684\u3002\n        if (cnt==M && ans>i-x+1)//\u6570\u5b57\u7684\u79cd\u7c7b\u591f\u4e86\uff0c\u5e76\u4e14\u6bd4\u4e4b\u524d\u7684\u7b54\u6848\u66f4\u77ed\n        //ans>i-x+1\u4e2d\u6ca1\u6709\u53d6\u7b49\uff0c\u8fd9\u6837\u51fa\u73b0\u4e00\u6837\u957f\u4f46\u66f4\u9760\u540e\u7684\u7b54\u6848\u5c31\u4e0d\u4f1a\u66f4\u65b0\uff0c\u7b26\u5408\u7b54\u6848\u8981\u6c42\u3002\n\t\t\tans=i-x+1, L=x, R=i;//\u66f4\u65b0\u7b54\u6848\n    }\n    printf(\"%d %d\",L,R);\n    return 0;\n}\n```\n\n",
        "postTime": 1546089558,
        "uid": 73489,
        "name": "NyaRu_Official",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u76f4\u63a5\u7528\u6876\u6765\u505a\uff0c\u800c\u4e14\u4e0d\u6bd4\u5355\u8c03\u961f\u5217\u6162\u3002\n\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801,\u5b9e\u6d4b36ms\u3002\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<bits/stdc++.h>\nusing namespace std;\nconst int INF=0x7f7f7f7f;\nconst int MAXN=1000005;\nconst int MAXM=2005;\nint s[MAXN],p[MAXM];//s\u5b58\u6bcf\u4e00\u5e45\u753b\u7684\u753b\u5e08 \uff0cp\u662f\u4e00\u4e2a\u6876p[i]\u8868\u793a\u5f53\u524d\u533a\u95f4\u91cc \u753b\u5e08i \u7684\u753b\u6709\u591a\u5c11\u5e45\uff1b \nint N,M;\nint read()//\u52a0\u4e86\u8bfb\u5165\u4f18\u5316\u5927\u6982\u53ef\u4ee5\u5feb30\u6beb\u79d2\u5de6\u53f3 \n{\n    int n=0;char ch=getchar();\n    while(ch<'0'||'9'<ch)ch=getchar();\n    while(ch>='0'&&ch<='9'){n=n*10+ch-'0';ch=getchar();}\n    return n;\n}\nvoid init()//\u8bfb\u5165 \n{\n    cin>>N>>M;\n    for(int i=1;i<=N;i++)\n        s[i]=read();\n}\nvoid work()\n{\n    int i=1,j=1;//\u533a\u95f4\u5de6\u7aef\u70b9\uff1ai\uff0c\u533a\u95f4\u53f3\u7aef\u70b9\uff1aj \n    int ans=INF,kind=0;//kind\u8868\u793a\u5f53\u524d\u533a\u95f4\u91cc\u753b\u7684\u79cd\u6570\uff08\u5373\uff0c\u6709\u54ea\u4e9b\u753b\u5e08\u7684\u753b\uff09\u4e3a\u591a\u5c11 \n    int a,b;\n    for(;i<=N;i++)\n    {\n        for(;j<=N;j++)\n        {\n            if(kind==M)break;//\u7b2c\u4e00\u6b21\u6ee1\u8db3\u6761\u4ef6\u5c31\u8df3\u51fa \n            if(!p[s[j]])\n                kind++;\n            p[s[j]]++;\n        }\n        if(kind==M&&j-i<ans)//\u7edf\u8ba1\u7b54\u6848 \n        {\n            ans=j-i;\n            a=i;\n            b=j-1;\n        }\n        p[s[i]]--;//\u628a\u533a\u95f4\u6700\u5de6\u7aef\u7684\u753b\u7ed9\u5220\u6389 \n        if(!p[s[i]])kind--;//\u4fee\u6539kind \n        if(j==N)break;\n    }\n    cout<<a<<' '<<b<<endl;//\u8f93\u51fa \n}\nint main()\n{\n    init();\n    work();\n    return 0;\n}\n```",
        "postTime": 1506660629,
        "uid": 9282,
        "name": "\u6d6e\u5c18ij",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u6709\u70b9\u5c0f\u6fc0\u52a8\u554a\uff0c\u5c45\u7136\u662f\u63d0\u4ea4\u7684\u4eba\u91cc\u6700\u5feb\u7684\n\n\u4e00\u5b9a\u662f\u4f18\u5316\u8f93\u5165\u8f93\u51fa\u7684\u539f\u56e0\u3002orz\u4f18\u5316\u3002\n\n\u5f00\u4e2a\u961f\u5217\u6a21\u62df\u4e00\u4e0b\uff0c\u5f53\u961f\u5217\u7684\u957f\u5ea6\u7b49\u4e8em\u65f6\u5c31\u548c\u4e0a\u4e00\u6b21\u7684\u6bd4\u8f83\u3002\u4ece\u5de6\u5230\u53f3\u626b\u63cf\uff0c\u626b\u5230\u7684a\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\u3002\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int maxn = (int)1e6 + 10, maxm = 2010, INF = 0xfffff;\nint n, m;\nint painting[maxn], artist[maxm];\nint front = 1, tail = 0, l, r, ans = INF;\ninline char getc(void){\n    static char buf[1000000], *p1 = buf, *p2 = buf;\n    if(p1 == p2){\n        p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin);\n        if(p1 == p2) return EOF;\n    }\n    return *p1++;\n}\ninline void read(int& x){\n    x = 0; int f = 1; char ch = getc();\n    for(;!(ch>='0'&&ch<='9');ch=getc()) if(ch == '-') f = -1;\n    for(;(ch>='0'&&ch<='9');x=x*10+ch-'0', ch=getc());\n    x *= f;\n}\ninline void write(int x){\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint main()\n{\n    read(n); read(m);\n    for(int i=1;i<=n;i++){\n        int x;\n        read(x);\n        if(artist[x] == 0) tail++;\n        ++artist[x];\n        painting[i] = x;\n        while(front < i && artist[painting[front]] > 1){\n            --artist[painting[front]];\n            front++;\n        }\n        if(tail == m)\n            if(ans > i-front+1){\n                ans = i - front + 1;\n                l = front, r = i;\n            }\n    }\n    write(l); putchar(' '); write(r);\n}\n```",
        "postTime": 1484826279,
        "uid": 31766,
        "name": "LoliconAutomaton",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u672c\u9898\u662f\u5230\u597d\u9898\u554a\uff0c\u6211\u62ff\u5c0f\u53f7\u4ea4\u62ff\u4e8690\uff0c\u6700\u540e\u4e00\u4e2a\u8d85\u65f6\n\n\u5176\u5b9e\u672c\u9898\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u8981\u4e8c\u5206\u679a\u4e3e\u5e8f\u5217\u957f\u5ea6logn\u7684\uff0c\u7136\u540e\u4e00\u4e2a\u961f\u5217\uff0c\u5206\u522b\u4ece\u5934\u626b\u5230\u5c3e\u90e8O\uff08n\uff09\uff0c\u7136\u540e\u5224\u65adO\uff08m\uff09\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\uff08logn \\*N\\* M\uff09\u7531\u4e8e\u8fd9\u662f\u4e0d\u53ef\u8fbe\u7684 \uff0c\u7136\u540e\u641e\u4e00\u70b9\u5c0f\u4f18\u5316\u554a\uff0c\u6216\u8bb8\u80fd\u5361\u4e00\u5361\uff0c\u7136\u800c\u8fd9\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u3002\u8fd9\u662f90\u5206\u7684\u66b4\u529b\n\n\n\n\n\n    \n    \n\n    \n        \n        \n   \n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int MAXN1 = 1000005;\nconst int MAXN2 = 2005;\nint N,M,K = (1 << 30);\nint S[MAXN2],data[MAXN1]; \nint L[MAXN1]; \nvoid init(){\n    scanf(\"%d%d\",&N,&M);\n    for(int i = 1; i <= N; i++)\n    {\n       scanf(\"%d\",&data[i]);\n       L[i] = (1 << 30);\n    }\n}\nint check(int P)\n{\n    int Q[MAXN2];\n    int Ans = (1 << 30);\n    memset(Q,0,sizeof(Q));\n    int Head = 1,Tail = P;\n    for(int i = 1; i <= P; i++)\n        Q[data[i]]++;\n    while(Tail <= N)\n    {\n        int F = 1;\n        for(int i = 1; i <= M; i++)\n            if(Q[i] == 0)\n            {\n                F = 0; break;\n            }\n        if(F == 1){Ans = Head;break;}\n        else\n        {\n            Q[data[Head]]--;\n            Head++;\n            ++Tail;\n            Q[data[Tail]]++;\n        }\n    }\n    if(Ans != (1 << 30))\n    {\n        L[P] = min(L[P],Ans);\n        return 1;\n    }\n    else \n        return 0;\n}\nint main(){\n    init();\n    int i = M,j = N;\n    while(i <= j)\n    {\n        int mid = (i+j) / 2;\n        if(check(mid) == 1)\n        {\n           j = mid - 1;\n        }\n        else \n           i = mid + 1;\n    }\n    printf(\"%d %d\",L[j+1],j+1+L[j+1]-1);\n    return 0;\n}\n```\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u4e0d\u5224\u65ad\u5e8f\u5217\u662f\u5426\u5408\u6cd5\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u503c\u8bb0\u5f55\n\u5982\u679c\u539f\u6765\u8fd9\u4e2a\u6570\u67090\u4e2a\uff0c\u73b0\u5728\u53d8\u62101\u4e2a\u5219\u591a\u4e86\u4e00\u79cd\u753b\n\n\u5982\u679c\u539f\u6765\u8fd9\u4e2a\u6570\u67091\u4e2a\uff0c\u73b0\u5728\u53d8\u62100\u4e2a\u5219\u5c11\u4e86\u4e00\u79cd\u753b\n\n\u6240\u4ee5\u7ef4\u62a4\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u753b\u7684\u79cd\u6570\u5373\u53ef\n\n\n\n\n\n    \n    \n\n    \n        \n        \n   \n\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int MAXN1 = 1000005;\nconst int MAXN2 = 2005;\nint N,M,K = (1 << 30);\nint S[MAXN2],data[MAXN1]; \nint L[MAXN1]; \nvoid init(){\n    scanf(\"%d%d\",&N,&M);\n    for(int i = 1; i <= N; i++)\n    {\n       scanf(\"%d\",&data[i]);\n       L[i] = (1 << 30);\n    }\n}\nint check(int P)\n{\n    int Q[MAXN2],Num = 0;\n    int Ans = (1 << 30);\n    memset(Q,0,sizeof(Q));\n    int Head = 1,Tail = P;\n    for(int i = 1; i <= P; i++)\n    {\n        Q[data[i]]++;\n        if(Q[data[i]] == 1)\n           Num++;//\u7ef4\u62a4\u79cd\u6570\u7684\u53d8\u91cf\u3002\n    }\n    while(Tail <= N)\n    {\n        int F = 0;\n        if(Num == M) F = 1;\n        if(F == 1){Ans = Head;break;}\n        else\n        {\n            Q[data[Head]]--;\n            if(Q[data[Head]] == 0)\n               Num--;\n            Head++;\n            ++Tail;\n            Q[data[Tail]]++;\n            if(Q[data[Tail]] == 1)\n               Num++;\n        }\n    }\n    if(Ans != (1 << 30))\n    {\n        L[P] = min(L[P],Ans);\n        return 1;\n    }\n    else \n        return 0;\n}\nint main(){\n    init();\n    int i = M,j = N;\n    while(i <= j)\n    {\n        int mid = (i+j) / 2;\n        if(check(mid) == 1)\n        {\n           j = mid - 1;\n        }\n        else \n           i = mid + 1;\n    }\n    printf(\"%d %d\",L[j+1],j+1+L[j+1]-1);\n    return 0;\n}\n\n```",
        "postTime": 1476631485,
        "uid": 6982,
        "name": "xuan__xuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    },
    {
        "content": "\u961f\u5217\uff0c\u865a\u62df\u7684front\u548ctail\uff0c\u7528flag\u548csize\u4fdd\u5b58\u5f53\u524d\u67d0\u4e2a\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u548c\u5f53\u524d\u4e0d\u540c\u5143\u7d20\u6709\u591a\u5c11\uff0c\u961f\u9996\u51fa\u73b0\u8fc7front++\u884c\u4e86 size==m\u65f6\u66f4\u65b0\u7b54\u6848\uff08\u5176\u5b9e\u7b2c\u4e00\u6b21size==m\u540e\u4ee5\u540esize\u4e0d\u4f1a\u51cf\u5c11\uff09\n\n\n    \n        \n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int N=1e6+5,M=2005;\ninline int read(){\n    char c=getchar(); int x=0,f=1;\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\nint n,m,q[N];\nint flag[M],front=1,tail=0,size=0,ans=1e9,ans1,ans2;\nint main(int argc, const char * argv[]) {\n    n=read();m=read();\n    for(int i=1;i<=n;i++) q[i]=read();\n    for(int i=1;i<=n;i++){\n        if(flag[q[i]]==0) size++;\n        ++tail;\n        flag[q[i]]++;\n        while(flag[q[front]]>=2) {flag[q[front]]--;front++;}\n        if(size==m&&(tail-front+1)<ans){//printf(\"q %d %d\\n\",front,tail);\n            ans1=front;ans2=tail;ans=tail-front+1;\n        }\n    }\n    cout<<ans1<<\" \"<<ans2;\n    return 0;\n}\n```",
        "postTime": 1471879979,
        "uid": 13863,
        "name": "thwfhk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1638 \u3010\u901b\u753b\u5c55\u3011"
    }
]