[
    {
        "content": "\u9898\u89e3\u91cc\u597d\u50cf\u53ea\u6709\u4ece\u6839\u6df1\u641c\u7684\uff0c~~\u4ece\u6839\u641c\u7d22\u592a\u590d\u6742\u849f\u84bb\u6211\u770b\u4e0d\u61c2\u554a\u3002~~\u90a3\u6211\u6765\u6c34\u4e00\u7bc7\u66b4\u529bQAQ\u3002\n\n%\u4e0b\u9762\u5927\u4f6c\uff0c\u7528LCA\u7b49\u590d\u6742\u65b9\u6cd5\u8fc7\u7684\n\n------------\n\n[\u5b89\u5229\u535a\u5ba2](https://www.cnblogs.com/enceladus-return0/)\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P3252)\n\n\n------------\n\n\n\u5148\u8ba9\u6211\u4eec\u770b\u8fd9\u53e5\u8bdd\n\n>\u8def\u5f84\u4e2d\u8282\u70b9\u7684\u6df1\u5ea6\u5fc5\u987b\u662f\u5347\u5e8f\u7684\u3002\n\n\u90a3\u5c31\u8981\u4fdd\u8bc1\u662f\u5411\u4e0b\u641c\u7684\u5457\u3002\n\n\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\uff0c\u8bb0\u5f55\u7236\u4eb2\uff0c _\u53ea\u8981\u4fdd\u8bc1\u4e0b\u4e2a\u8282\u70b9\u4e0d\u662f\u4ed6\u7684\u7236\u4eb2\u5373\u53ef_ \n\n#### \u8bfb\u5165\u65f6\n```cpp\nfor(int i=1;i<=n-1;i++)\n\t{\n\t\tcin>>x>>y;\n\t\tadd(x,y);\n\t\tfa[y]=x;\n\t}\n```\n#### \u641c\u7d22\u65f6\n```cpp\nif(fa[x]!=nxt)\n```\n\n------------\n\n\u518d\u770b\u8fd9\u53e5\u8bdd\n\n>\u8def\u5f84\u4e0d\u5fc5\u4e00\u5b9a\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u3002\n\n\n\u90a3\u5c31\u628a\u70b9\u5168\u679a\u4e3e\u4e00\u8fb9\u5c31\u884c\u554a\uff0c\n\n```cpp\nfor(int i=1;i<=n;i++)\n\t{\n\t    dfs(i,w[i]);\t\n\t}\n```\n\n------------\n>\u95ee\u6709\u591a\u5c11\u6761\u8def\u5f84\u7684\u8282\u70b9\u603b\u548c\u8fbe\u5230S\n\n\u5f53\u65f6\u672c\u4eba\u4e0d\u592a\u660e\u767d\u7684\uff0c\u662f\u8981\u5230s\u624d\u884c\uff0c\u4e0d\u80fd\u8d85\u8fc7s\u3002\u6240\u4ee5\u53ef\u4ee5\u52a0\u5165\u526a\u679d\n\n**\u8d85\u8fc7s\u5c31\u4e0d\u7528\u641c\u4e86qwq\u3002\n\u8fbe\u5230s\u540eans++\uff0c\u4e0d\u7528\u641c\u4e86**\n\n```cpp\nif(dis>s)\n\t    return;\n\tif(dis==s)\n\t{\n\t\tans++;\n\t\treturn;\n\t}\n```\n\n\n------------\n\u4e0b\u9762\u732e\u4e0a\u7b80\u964b\u7684\u4ee3\u7801\n\n\u4e0d\u8981\u6284\u88ad\uff0c\u4ee3\u7801\u6709\u9505QAQ\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define ll long long\n#define IL inline\n#define R register\nusing namespace std;\nstruct node{\n\tint u,v;\n}fuck[100007];\nint head[100007],fa[100007],x,y,w[100007],n,s,tot=0,ans=0;\nIL void read(int &x)\n{\n\tint f=1;x=0;char s=getchar();\n\twhile (s<'0'||s>'9'){if(s=='-') f=-1 s=getchar();}\n\twhile (s>='0'&&s<='9'){ x=x*10+s-'0'; s=getchar();}\n\tx*=f; \n}\nvoid add(int x,int y)\n{\n\tfuck[++tot].u=head[x];//++?\n\tfuck[tot].v=y;\n\thead[x]=tot;\n}\n\nIL void dfs(int x,int dis)\n{\n\tif(dis>s)\n\t    return;\n\tif(dis==s)\n\t{\n\t\tans++;\n\t\treturn;\n\t}\n\tfor(int i=head[x];i;i=fuck[i].u)\n\t{\n\t\tint nxt=fuck[i].v;\n\t\tif(fa[x]!=nxt)\n\t\t    dfs(nxt,dis+w[nxt]);\n\t}\n}\n\nint main()\n{\n    read(n);read(s);\n    for(int i=1;i<=n;i++)\n    \tcin>>w[i];\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tcin>>x>>y;\n\t\tadd(x,y);\n\t\tfa[y]=x;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t    dfs(i,w[i]);\t\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```\n${\\color{Gold}By}$\n\n${\\color{Gold}enceladsu}$",
        "postTime": 1536029020,
        "uid": 88127,
        "name": "enceladus",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u6ca1\u9519\uff0c\u6211\u5c31\u662f\u62c9\u697c\u4e0b\u540c\u5b66\u505a\u9898\u7684\u540c\u5b660.0\uff08\u96fe\uff09\u3002\n\n\n\u6211\u7684\u601d\u8def\u4e0e\u5927\u5bb6\u7684\u76f8\u4f3c\uff0c\u4f46\u53c8\u4e0d\u540c\u3002\n\n\n\u8003\u8651\u4e00\u79cd\u6700\u57fa\u672c\u7684\u66b4\u529b\u7b97\u6cd5\uff0c\u4ece\u6bcf\u4e2a\u70b9\u5f00\u59cb\u505aDFS\uff0c\u627e\u5230\u4e00\u6761\u4ef7\u503c\u4e3as\u7684\u8def\u5f84\u5c31\u8fd4\u56de\u3002\u8fd9\u6837\u4f60\u53ef\u4ee5\u5f97\u523090\u5206\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u70b9\u8c8c\u4f3c\u662f\u4e00\u6761\u94fe\u3002\n\n\n\u5982\u4f55\u4f18\u5316\u8fd9\u4e2a\u641c\u7d22\u5462\uff1f\n\n\n\u6211\u4eec\u53d1\u73b0\u5f53\u641c\u5230\u4e00\u6761\u4ef7\u503c\u5c0f\u4e8es\u7684\u8def\u5f84\u65f6\uff0c\u5b83\u7684\u5b50\u6811\u4e0d\u4f1a\u5b58\u5728\u4ef7\u503c\u4e3as\u7684\u8def\u5f84\uff0c\u76f4\u63a5\u526a\u679d\u5373\u53ef\u3002\n\n\n\u849f\u84bb\u4ee3\u7801\uff0c\u5927\u4f6c\u4eec\u52ff\u55b7\u3002\u3002\u3002\n\n\n\n\n\n\n```cpp\n#include <bits/stdc++.h>\n#define N 100010\nusing namespace std;\nint n, s, tot, en, x, y;\nint a[N], head[N];\nstruct Edge{\n    int to, next;\n}e[N << 1];\n//\u8bfb\u5165\u4f18\u5316\ninline int get_num()\n{\n    int now = 0;\n    bool fh = false;\n    char ch = getchar();\n    while(ch < '0' || ch > '9'){\n        if(ch == '-') fh = true;\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9'){\n        now = (now << 1) + (now << 3) + ch - '0';\n        ch = getchar();\n    }\n    return (fh == true ? - now : now);\n}\nbool ans = false;\n//ans\u8bb0\u5f55\u662f\u5426\u641c\u5230\u5c0f\u4e8es\u7684\u8def\u5f84\uff0cfalse\u4e3a\u641c\u5230\u5c0f\u4e8es\u7684\u8def\u5f84\ninline void dfs(int now, int tmp)\n{\n    if(tmp == s){\n        ans = true;\n        ++tot;\n        return;\n    }else if(tmp > s){\n        ans = true;\n        return;//\u6ce8\u610f\u8fd9\u4e2a\u526a\u679d\uff01\uff01\uff01\uff01\uff01\n    }else for(int i = head[now]; i; i = e[i].next){\n        dfs(e[i].to, tmp + a[e[i].to]);\n    }\n}\ninline void mdfs(int now)\n{\n    for(int i = head[now]; i; i = e[i].next){//\u4f7f\u7528\u4e24\u4e2adfs\u5d4c\u5957\uff0c\u4fbf\u4e8e\u7406\u89e3\n        ans = false;\n        dfs(e[i].to, a[e[i].to]);\n        if(ans == false) continue;\n        mdfs(e[i].to);\n    }\n}\nint main()\n{\n    n = get_num(), s = get_num();\n    for(register int i = 1; i <= n; ++i){\n        a[i] = get_num();\n    }\n    for(register int i = 1; i < n; ++i){\n        x = get_num(), y = get_num();//\u6ce8\u610f\u8fd9\u91cc\u662f\u5355\u5411\u8fb9\n        e[++en].to = y;\n        e[en].next = head[x];\n        head[x] = en;\n    }\n    dfs(1, a[1]);\n    ans = false;\n    mdfs(1);\n    printf(\"%d\\n\", tot);\n    return 0;\n}\n```",
        "postTime": 1511617912,
        "uid": 19182,
        "name": "Johnson_sky",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u6811\u4e0a\u524d\u7f00\u548c\u3002\n\n\u5728\u6811\u4e0a\u627e\u4e00\u6761\u6743\u503c\u548c\u4e3a s \u7684\u94fe\uff0c\u5176\u4e2d\u8fd9\u4e2a\u94fe\u4e0a\u7684\u70b9\u6309\u6df1\u5ea6\u9012\u589e\uff08\u9012\u51cf\uff09\uff08\u4e0d\u540c\uff09\n\ndfs\n\u6bcf\u641c\u5230\u4e00\u4e2a\u70b9\u6c42\u5b83\u7684\u524d\u7f00\u548c sum[x]\uff0c\u653e\u5165 set \u4e2d\u3002\n\n\u5728 set \u4e2d\u627e sum[x] - s \u7684\u70b9\uff0c\u5982\u679c\u6709\uff0cans++\n\n\u9000\u51fa dfs \u7684\u65f6\u5019\u518d\u628a sum[x] \u4ece set \u4e2d\u5220\u9664\n\n\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u6743\u90fd\u662f\u6b63\u6574\u6570\uff0c\u6240\u4ee5 set \u4e2d\u6ca1\u6709\u91cd\u590d\u5143\u7d20\u3002\n\n\u540c\u65f6\u4e5f\u662f\u5355\u8c03\u9012\u589e\uff0c\u6240\u4ee5\u7b80\u5355\u4e9b\u4e0d\u7528 set\uff0c\u5f00\u4e2a\u6570\u7ec4\u518d lower\\_bound \u4e5f\u884c\u3002\n\n\u2014\u2014\u4ee3\u7801\n\n\n\n\n\n\n```cpp\n#include <set>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nconst int MAXN = 100001;\nint n, s, cnt, ans;\nint a[MAXN], head[MAXN], to[MAXN << 1], next[MAXN << 1], f[MAXN], sum[MAXN];\nstd::set <int> S;\ninline int read()\n{\n    int x = 0, f = 1;\n    char ch = getchar();\n    for(; !isdigit(ch); ch = getchar()) if(ch == '-') f = -1;\n    for(; isdigit(ch); ch = getchar()) x = (x << 1) + (x << 3) + ch - '0';\n    return x * f;\n}\ninline void add(int x, int y)\n{\n    to[cnt] = y;\n    next[cnt] = head[x];\n    head[x] = cnt++;\n}\ninline void dfs(int u)\n{\n    sum[u] = sum[f[u]] + a[u];\n    S.insert(sum[u]);\n    if(S.count(sum[u] - s)) ans++;\n    for(int i = head[u]; i ^ -1; i = next[i]) dfs(to[i]);    \n    S.erase(sum[u]);\n}\nint main()\n{\n    int i, x, y;\n    n = read();\n    s = read();\n    memset(head, -1, sizeof(head));\n    for(i = 1; i <= n; i++) a[i] = read();\n    for(i = 1; i < n; i++)\n    {\n        x = read();\n        y = read();\n        f[y] = x;\n        add(x, y);\n    }\n    S.insert(0);\n    dfs(1);\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1495803268,
        "uid": 8220,
        "name": "zht467",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u6700\u5f00\u59cb\u88ab\u540c\u5b66\u62c9\u7740\u505a\u8fd9\u9053\u9898\u65f6\u6211\u662f\u61f5\u903c\u7684\u3002\u3002\u8fd8\u4ee5\u4e3a\u4f1a\u662f\u4e2a\u72b6\u538bdp\u3002\u3002\n\n\n\u4ed4\u7ec6\u4e00\u770b\u9898\u76ee\u6027\u8d28\uff0c\u53d1\u73b0\u53ef\u4ee5\u91c7\u7528\u7c7b\u4f3c\u4e8e\u500d\u589e\u6c42LCA\u7684\u505a\u6cd5\uff0c\u590d\u6742\u5ea6\u4e3aO(N\\*log(n))\u3002\n\n\n\u76f8\u4fe1\u5199\u8fc7\u500d\u589e\u6c42LCA\u7684\u4eba\u90fd\u80fd\u770b\u61c2\u8fd9\u4e2a\u4ee3\u7801\u3002\n\n\n\u4e3b\u8981\u662f\u5229\u7528\u4e86\u70b9\u6743\u4e3a\u6b63\u6574\u6570\u548c\u6240\u6c42\u8def\u5f84\u6df1\u5ea6\u5fc5\u987b\u5355\u8c03\u8fd9\u4e24\u4e2a\u6027\u8d28\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint len[100003][18];//len[i][j]\u8868\u793a\u4ee5i\u4e3a\u8d77\u70b9\u5411\u4e0a\u957f\u5ea6\u4e3a2^j\u7684\u8def\u5f84\u957f\u5ea6\nint fa[100003][18];//i\u7684\u7236\u4eb2 \u7c7b\u4f3c\u4e8e\u500d\u589e\u6c42LCA\nint n,m,s,x,y,ans;\nint main()\n{\n  scanf(\"%d %d\",&n,&s);\n  for (int i=1;i<=n;i++)\n  {\n    scanf(\"%d\",&len[i][0]);\n  }\n  for (int i=1;i<n;i++)\n  {\n    scanf(\"%d %d\",&x,&y);\n    fa[y][0]=x;\n  }\n  for (int i=1;i<=17;i++)\n  {\n    for (int j=1;j<=n;j++)\n    {\n      fa[j][i]=fa[fa[j][i-1]][i-1];\n      len[j][i]=len[j][i-1]+len[fa[j][i-1]][i-1];\n    }\n  }\n  for (int i=1;i<=n;i++)\n  {\n    x=0;//\u5f53\u524d\u5df2\u6709\u8def\u5f84\u7684\u957f\u5ea6\n    y=i;//\u5f53\u524d\u8df3\u5230\u4e86\u54ea\u4e2a\u70b9\n    for (int j=17;j>=0;j--)\n    {\n      if (len[y][j]+x<=s)\n      {\n        x+=len[y][j];//\u8fd9\u91cc\u5c31\u548c\u67e5LCA\u65f6\u8df3\u5230\u76f8\u540c\u6df1\u5ea6\u7684\u6b65\u9aa4\u5dee\u4e0d\u591a\uff0c\u5982\u679c\u4e0d\u8d85\u8fc7s\u5c31\u5c3d\u53ef\u80fd\u5f80\u4e0a\u8df3\n        y=fa[y][j];\n      }\n      if (x==s)\n      {\n        ans++;\n        break;\n      }\n    }\n  }\n  printf(\"%d\\n\",ans);\n  return 0;\n}\n```",
        "postTime": 1511617036,
        "uid": 19239,
        "name": "Sky_crystal",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "### ~~\u8003\u573a\u4e0a\u83ab\u540d\u53ea\u62ff\u4e8610\u5206\u7684\u9898\uff08\u88ab\u8650\u76841P\uff09~~\n\n### ~~\u53c8\u770b\u4e86\u9898\u89e3\u91cc\u7684\u5927\u4f6c\u7684\u601d\u8def\uff08e.g. LCA  \u6811\u4e0a\u524d\u7f00\u548c \uff09 \u5ffd\u7136\u53d1\u73b0\u4e86\u81ea\u5df1\u7684\u5351\u5fae~~\n\n#### \u8bf4\u4e00\u4e0b\u601d\u8def\u5427\n\n\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u628a\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u548c\u4ed6\u7684\u7236\u4eb2\u5b58\u8d77\u6765\uff08\u4e0d\u7528\u5b58\u513f\u5b50\uff0c\u6ca1\u4ec0\u4e48\u7528\uff09\n\n\u4e4b\u540e\u904d\u5386\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5c06\u8fd9\u4e2a\u70b9\u5411\u4e0a\u641c\u5982\u679c\u641c\u5230\u4e86\u6839\u8282\u70b9\u4f46\u70b9\u6743\u4e4b\u548c\u8fd8\u662f\u6ca1\u6709\u5230\u8fbes\u6216\u8005\u70b9\u6743\u4e4b\u548c\u5927\u4e8e\u4e86s \u8fd4\u56de false \n\n```cpp\n//sum\u4e3a\u70b9\u6743\u4e4b\u548c \n\tif(sum>s||!e[u].fa) return false;\n```\n\n\n\u5982\u679c\u70b9\u6743\u4e4b\u548c==s \u8fd4\u56de true \u4e4b\u540eans++\n\n```cpp\nbool dfs(int u)\n\nif(sum==s) return true;\n\nif(dfs(i)) ans++;\n```\n\n\u5982\u679c\u90fd\u4e0d\u6ee1\u8db3\u7684\u8bdd\u5c31\u5411\u4e0a\u7ee7\u7eed\u641c\n\n```cpp\n\n\t\tdfs(e[u].fa);\n        \n```\n\n\u6216\u8005\n\n```cpp\n\t\tu=e[u].fa;\n```\n\n\n\u4e8e\u662f\u4e4e \u6211\u4eecdfs \u7684\u8fb9\u754c\u5c31\u51fa\u6765\u4e86 \u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u77ed\u7684\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,s,ans,sum;\nstruct io\n{\n\tint fa,num;\n}e[100001];\nbool dfs(int u)\n{\n//\tsum=0;\n\n\t\tsum+=e[u].num;\n\t\tif(sum==s) return true;\n\t\tif(sum>s||!e[u].fa) return false;\n\t\tdfs(e[u].fa);\n}\nint main()\n{\n//\tfreopen(\"tree.in\",\"r\",stdin);\n//\tfreopen(\"tree.out\",\"w\",stdout);\n\tcin>>n>>s;\n\t\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>e[i].num;\n\t}\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tint fa,son;\n\t\tcin>>fa>>son;\n\t\te[son].fa=fa;\n\t}for(int i=1;i<=n;i++)\n\t{\n\t\tsum=0;\n\t\tif(dfs(i)) ans++;\n\t}\n\t\n\tcout<<ans;\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n} \n```\n",
        "postTime": 1568197775,
        "uid": 122757,
        "name": "PrefixAMS",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u76ee\u89c9\u5f97\u5e94\u8be5\u7528\u53cc\u7aef\u961f\u5217\u505a\uff0c~~\u7136\u800c\u770b\u5230\u9898\u89e3\u91cc\u5168\u662f\u524d\u7f00\u548c+\u66b4\u529b\u8fd8\u4e00\u5ea6\u4ee5\u4e3a\u81ea\u5df1\u5ba1\u9519\u4e86\u9898~~\n\n\u5927\u81f4\u601d\u8def\u5c31\u662f\u5148\u626b\u4e00\u8fb9\u627e\u51fa\u6839\uff0c\u4ece\u6839\u5f00\u59cbdfs\uff0c\u6bcfdfs\u5230\u4e00\u4e2a\u70b9\u5c31\u5148\u628a\u5b83\u52a0\u5230\u961f\u5217\u5c3e\u90e8\uff0c\u7136\u540e\u518d\u524d\u79fb\u961f\u5217\u5934\u90e8\u76f4\u5230\u961f\u5217\u91cc\u5143\u7d20\u7684\u548c\u5c0f\u4e8e\u7b49\u4e8e **s** \uff0c\u524d\u79fb\u5b8c\u5982\u679c\u5143\u7d20\u548c\u6b63\u597d\u7b49\u4e8e **s** \u5c31 **ans++** \u3002\u6700\u540e\u6bcf\u4e2a\u70b9dfs\u7ed3\u675f\u7684\u65f6\u5019\u518d\u628a\u961f\u5217\u6062\u590d\u5c31\u597d\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <vector>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nvector<int> son[100010];\nint n,s,v[100010],fa[100010]={0},a,b,root,qsum=0,ans=0,q[100010]={0},l=0,r=-1;\n\nvoid dfs(int x){\n    q[++r]=v[x]; qsum+=v[x];\n    while(qsum>s) qsum-=q[l++];\n    if(qsum==s) ans++;\n    for(int j=0;j<(int)son[x].size();j++) dfs(son[x][j]);\n    qsum-=q[r--];\n    while(l && qsum+q[l-1]<=s) qsum+=q[--l];\n}\n\nint main() {\n    scanf(\"%d %d\",&n,&s);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&v[i]);\n    for(int i=1;i<=n-1;i++){\n        scanf(\"%d %d\",&a,&b);\n        son[a].push_back(b);\n        fa[b]=a;\n    }\n    for(int i=1;i<=n;i++) if(!fa[i]) {root=i; break;}\n    dfs(root);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1535813129,
        "uid": 100037,
        "name": "kkxhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "```cpp\n/*\n\u8fd9\u9053\u9898\u7684\u6570\u636e\u4e0d\u662f\u5f88\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u679a\u4e3e+\u9012\u5f52\uff0c\u53ef\u4ee5\u83b7\u5f97\u6b63\u786e\u7b54\u6848\u4e14\u4e0d\u4f1a\u8d85\u65f6\u3002\n\u601d\u8def\uff1a\u4f7f\u7528\u7236\u4eb2\u8868\u793a\u6cd5\uff0c\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u8282\u70b9\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff0c\u6240\u4ee5\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4e3a\u8d77\u70b9\u7684\u8def\u5f84\u662f\u552f\u4e00\u7684\uff0c\u4fdd\u8bc1\u4e86\u7b54\u6848\u7684\u6b63\u786e\uff0c\u6570\u636e\u572810000\u4e4b\u5185\uff0co\uff08nlogn\uff09\u662f\u53ef\u4ee5\u66b4\u529b\u8fc7\u7684\n*/\n#include <bits/stdc++.h>\nstruct tree{\n\tint data,fa;\n}a[100001];\nusing namespace std;\nint n,RT,ans=0,s,len;\nint work(int x){\n\tint i,k;\n\tfor(i=1;i<=n;i++){//\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u8282\u70b9\n\t\tx=0;//\u521d\u59cb\u7ed3\u679c\n\t\tlen=0;//\u8bb0\u5f55\u5f53\u524d\u8def\u5f84\u957f\u5ea6\n\t\tk=i;//\u4ee5k\u627f\u8f7di\uff0c\u514d\u5f97\u5f71\u54cd\u5faa\u73af\u5143\u7d20\n\t\twhile(k!=RT){//\u5982\u679c\u6ca1\u6709\u5230\u6811\u6839\uff08\u5230\u6811\u6839\u8fd8\u6ca1\u627e\u5230\u90a3\u4e48\u5c31\u662f\u6ca1\u6709\uff09\n\t\t\tlen++;//\u8def\u5f84\u7684\u957f\u5ea6++\n\t\t\tx+=a[k].data;//\u7ed3\u679c+\u4e0a\u5f53\u524d\u8282\u70b9\u7684\u503c\n\t\t\tk=a[k].fa;//\u9012\u5f52\u5230\u5f53\u524d\u7b80\u5355\u7684\u7236\u8282\u70b9\n\t\t\tif(x==s){ans++;break;}/*\u5f53x==s\u65f6\uff0c\u5c31\u8bf4\u660e\u8fd9\u6761\u8def\u5f84\u53ef\u884c\uff0c\u9000\u51fa\u5faa\u73af\u679a\u4e3e\u4e0b\u4e00\u4e2a\u8282\u70b9*/\n\t\t\tif(x>s)//\u5f53\u5f53\u524d\u8282\u70b9\u5df2\u7ecf\u5927\u4e8es\u65f6\uff0c\u518d\u641c\u4e5f\u6ca1\u6709\u610f\u4e49\u4e86\uff0c\u9000\u51fa\uff0c\u9632\u6b62\u8d85\u65f6\n\t\t\tbreak;\n\t\t}\n\t\tx+=a[k].data;//\u56e0\u4e3a\u6211\u53ea\u679a\u4e3e\u5230\u4e86\u6811\u6839\u7684\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u8981\u52a0\u4e0a\u6811\u6839\u7684\u503c\n\t\tif(x==s)ans++;//\u5982\u679c\u6b64\u65f6s==x\uff0cans\u4e5f++\n\t}\n}\nint main(){\n\tint i,j,k,m,fa,son;\n//\tfreopen(\"b.in\",\"r\",stdin);\n//\tfreopen(\"b.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&s);\n\tfor(i=1;i<=n;i++)\n\tscanf(\"%d\",&a[i].data);\n\tfor(i=1;i<=n-1;i++){//\u8bfb\u5165\n\t\tscanf(\"%d%d\",&fa,&son);\n\t\ta[son].fa=fa;//\u521d\u59cb\u5316\u6811\u7684\u7236\u8282\u70b9\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(a[i].fa==0){\n\t\tRT=i;//\u627e\u6811\u6839\n\t\tbreak;}\n\t}\n\twork(0);//\u5f00\u59cb\u679a\u4e3e\n\tprintf(\"%d\",ans);//\u8f93\u51fa\u7ed3\u679c\n\treturn 0;\n}\n```",
        "postTime": 1534052045,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "## \u8003\u5bdf\u70b9\uff1a\u6811\u4e0a\u500d\u589e\n\n\u6ce8\uff1a\u540e\u6587$L$\u4e3a\u9898\u76ee$S$.\n\n\u6211\u4eec\u8bbe\u7acb\u4e00\u4e2a$fa$\u6570\u7ec4\uff0c\u5176$fa[i][j]$\u8868\u793a\u5bf9\u4e8ei\u8282\u70b9\uff0c\u5411\u4e0a\u7684$2^j$\u4e2a\u8282\u70b9\u7684\u7f16\u53f7,$fa[i][0]\n$\u5c31\u662f$i$\u7684\u7236\u4eb2\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u8bbe\u4e00\u4e2a\u50a8\u5b58\u70b9\u6743\u548c\u7684\u500d\u589e\u6570\u7ec4\uff0c\u8bbe\u7acbw\u6570\u7ec4\uff0c\u5176\u4e2d$w[i][j]$\u8868\u793a\u5bf9\u4e8ei\u8282\u70b9\uff0c\u5411\u4e0a$2^j$\u4e2a\u8282\u70b9\u7684\u6743\u503c\u548c(\u4e0d\u5305\u62ec$2^j$\u8fd9\u4e2a\u8282\u70b9\u4f46\u662f\u5305\u62ec$i$\u672c\u8eab)~~\u663e\u800c\u6613\u89c1~~\uff0c \u5c31\u8868\u793a$i$\u8282\u70b9\u672c\u8eab\u7684\u70b9\u6743\u3002\n\n\u7136\u540e\u6211\u4eec\u5f97\u5230\uff1a\n\n$fa[i][j]=fa[fa[i][j-1]][j-1]$\n$w[i][j]=w[fa[i][j-1]][j-1]+w[i][j-1]$\n\n\n\u8fd9\u4e24\u4e2a\u6570\u7ec4\u5728$O(n)$\u7684\u65f6\u95f4\u5c31\u53ef\u4ee5\u6c42\u51fa\u6765\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u5f00\u59cb\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9$i$\uff0c\u8bbe\u7acb\u4e34\u65f6\u8282\u70b9$p$\u3002$p$\u521d\u59cb\u5316\u4e3a$i$\uff1b\n\n\u6211\u4eec\u8bbe$k$\u4e3a$20$\uff0c\u4ece$20->1$\uff0c\u5bf9\u4e8e$w[p][k]$,\u82e5\u5176\u5c0f\u4e8e$L$\uff0c\u5219$L-=w[p][k],p=fa[p][k]$\n\n\u5982\u6b64\u500d\u589e\u5411\u4e0a\u8df3\uff0c\u82e5\u662f\u8df3\u5b8c\u7684\u65f6\u5019\u6743\u503c\u548c\u6b63\u597d\u7b49\u4e8e$L$\uff0c\u90a3\u4e48\u5c31\u5bf9$ans$\u8d21\u732e$1$\uff0c\u5373$ans++$\n\n\u8ba1\u7b97\u5b8c\u6bcf\u4e2a\u70b9\u8d21\u732e\u4ee5\u540e\u5373\u4e3a\u7b54\u6848\u3002\n\n\u5b9e\u73b0\u5c31\u662f$LCA$\u9884\u5904\u7406\u90e8\u5206\uff0cdfs\u4e00\u904d\u5c31\u884c\u4e86\u3002\n\n```\n#include<stdio.h>\n#define R register\n#define maxn 100001\n#define maxm 200001\nint n,L,ans,x,y,tot;\nint f[maxn][31],w[maxn][31],a[maxn],Last[maxn],Next[maxm],End[maxm];//\u53cc\u5411\u8fb9\u7a7a\u95f4\u53cc\u500d\uff01\uff01\uff01\ninline void dfs(int x,int fa)\n{\n\tf[x][0]=fa;\n\tw[x][0]=a[x];\n\tfor(R int i=1; i<=20; i++)\n\t{\n\t\tf[x][i]=f[f[x][i-1]][i-1];\n\t\tw[x][i]=w[x][i-1]+w[f[x][i-1]][i-1];\n\t}\n\tint p=x,Len=L;\n\tfor(R int i=20; i>=0; i--)\n\t{\n\t\tif(f[p][i]&&w[p][i]<Len)\n\t\t{\n\t\t\tLen-=w[p][i];\n\t\t\tp=f[p][i];\n\t\t}\n\t}\n\tif(w[p][0]==Len)\n\t{\n\t\tans++;\n\t}//\u8df3\u5b8c\u7684\u65f6\u5019\u6743\u503c\u548c\u6b63\u597d\u7b49\u4e8eL\uff0c\u90a3\u4e48\u5c31\u5bf9ans\u8d21\u732e1\n\tfor(R int i=Last[x]; i; i=Next[i])\n\t{\n\t\tif(End[i]!=fa)\n\t\t{\n\t\t\tdfs(End[i],x);\n\t\t}//\u907f\u514d\u53cd\u590d\u8ba8\u8bba\n\t}\n\treturn ;\n}\nint main(void)\n{\n\tscanf(\"%d%d\",&n,&L);\n\tfor(R int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(R int i=1; i<n; i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tEnd[++tot]=y;\n\t\tNext[tot]=Last[x];\n\t\tLast[x]=tot;\n\t\tEnd[++tot]=x;\n\t\tNext[tot]=Last[y];\n\t\tLast[y]=tot;//\u53cc\u5411\u8fb9\uff01\uff01\uff01\n\t}\n\tdfs(1,0);//\u904d\u5386\u8fd9\u68f5\u6811\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\n\tprintf(\"%d\",ans);//\u5e76\u4e0d\u7528\u5f00long long\n\treturn 0;\n}\n```",
        "postTime": 1566722816,
        "uid": 164437,
        "name": "yeaDonaby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "~~\u8fd9\u9053\u9898\u8fd8\u662f\u6bd4\u8f83\u6c34\u7684\uff0c\u5c31\u8fde\u6211\u8fd9\u6837\u7684\u849f\u84bb\u90fd\u8fc7\u4e86\u3002~~\n\n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u641c\u7d22\u3002~~\u4e0d\u77e5\u9053\u6807\u7b7e\u4e0a\u7684\u72b6\u538b\u662f\u54ea\u6765\u7684\uff0c\u53ef\u80fd\u662f\u849f\u84bb\u592a\u5f31\u6253\u4e0d\u51fa\u6765~~\n\n\u6211\u4eec\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\n\n```cpp\nstruct edge{\n\tint from,to,val,next;\n\tvoid read()\n\t{\n\t\tscanf(\"%d\",&val);\n\t}\n}r[N<<1];\n```\n\n\u6309\u7167\u9898\u76ee\u8981\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\u627e\u8def\u5f84\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u679a\u4e3e\u6bcf\u4e2a\u70b9\u5f80\u4e0b\u641c\u7d22\n\ndfs\u51fd\u6570\u4e2d\uff1as\u662f\u76ee\u6807\u503c\uff0cu\u4e3a\u5f53\u524d\u7236\u4eb2\u8282\u70b9\u7684\u7f16\u53f7\uff0csum\u4e3a\u7d2f\u52a0\u7684\u6743\u503c\u3002\n```cpp\nvoid dfs(int u,int s)\n{\n\tfor(int i=head[u];i;i=r[i].next)\n\t{\n\t\tsum+=r[r[i].to].val;\n\t\tif(sum>s){sum-=r[r[i].to].val;continue;}\n\t\telse if(sum==s){++ans;sum-=r[r[i].to].val;continue;}//\u8fd9\u91cc\u4e0d\u80fd\u76f4\u63a5\u8fd4\u56de\uff0c\u5fc5\u987b\u7ee7\u7eed\u5faa\u73af\uff0c\u4e0d\u7136\u4f1a\u6f0f\u641c\u5144\u5f1f\u8282\u70b9\u3002\n\t\tdfs(r[i].to,s);\n\t\tsum-=r[r[i].to].val;\n\t}\n}\n```\n\u672c\u6765\u60f3\u7740\u8fd9\u4e2a\u641c\u7d22\u6781\u5176\u7b80\u5355\uff0c\u4f46\u6211\u5c45\u7136\u70b8\u4e86\uff0c\u7136\u540e\u75af\u72c2\u627e\u9519\u8bef\u8fd8\u8003\u8651\u4e00\u6ce2\u662f\u4e0d\u662f\u6709\u8d1f\u6743\u503c\u4ec0\u4e48\u7684\uff0c~~\u7ed3\u679c\u662f\u6211\u6570\u7ec4\u4e0b\u6807\u6253\u9519\u4e86\u3002~~\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b~~\uff08\u6211\u89c9\u5f97\u6211\u7684\u4ee3\u7801\u8fd8\u662f\u5f88\u597d\u770b\u61c2\u7684\uff0c\u5c31\u61d2\u5f97\u52a0\u6ce8\u91ca\u4e86\uff09~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nconst int N = 100000 + 5;\nstruct edge{\n\tint from,to,val,next;\n\tvoid read()\n\t{\n\t\tscanf(\"%d\",&val);\n\t}\n}r[N<<1];//r \u5b58\u56fe\nint t;\nll ans,sum;\nint head[N];\nvoid add(int a,int b)\n{\n\tt++;\n\tr[t].from=a;r[t].to=b;\n\tr[t].next=head[a];head[a]=t;\n}\nvoid dfs(int u,int s)\n{\n\tfor(int i=head[u];i;i=r[i].next)\n\t{\n\t\tsum+=r[r[i].to].val;//\u52a0\u4e0a\u5f53\u8282\u70b9\u7684\u6743\u503c\u548c\n\t\tif(sum>s){sum-=r[r[i].to].val;continue;}\n\t\telse if(sum==s){++ans;sum-=r[r[i].to].val;continue;}//\u5982\u679csum\u5927\u4e8e\u6216\u7b49\u4e8e\u76ee\u6807\u503c\uff0c\u5c31\u4e0d\u9700\u8981\u5f80\u4e0b\u641c\u4e86\u3002\n\t\tdfs(r[i].to,s);//\u7ee7\u7eed\u641c\u5176\u5b50\u8282\u70b9\n\t\tsum-=r[r[i].to].val;\n    }\n}\nint main()\n{\n\tint n,s;\n\tscanf(\"%d%d\",&n,&s);\n\tfor(int i=1;i<=n;i++)r[i].read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(r[i].val>s)continue;\n\t\tif(r[i].val==s)ans++;\n\t\telse sum=r[i].val,dfs(i,s);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n~~\u5e0c\u7ba1\u7406\u5927\u5927\u8ba9\u6211\u8fc7\u5ba1\u6838orz~~",
        "postTime": 1563448444,
        "uid": 116160,
        "name": "Y_inG",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u542c\u8bf4\u8fd9\u662f\u4e00\u9053\u72b6\u538bdp\uff0c\u4f46\u662f\u9898\u89e3\u6ca1\u6709\u72b6\u538b\u5199\u6cd5\uff0c\u4e8e\u662f\u6211\u8fd9\u4e2a\u5c0f\u849f\u84bb\u5c31\u6765\u63d0\u4f9b\u4e00\u4e0b\u6211\u81ea\u5df1\u7684**\u4e8c\u5206**\u5199\u6cd5\uff08\u8fd9\u79cd\u5199\u6cd5\u7684\u6700\u5927\u65f6\u95f4\u590d\u6742\u5ea6\uff08\u4e00\u6761\u94fe\u65f6\uff09\u5e94\u8be5\u662f$n^2 log n$\uff0c\u5927\u4f6c\u53ef\u4ee5\u81ea\u884c\u8df3\u8fc7\uff09\n\n**\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\uff1a**\n\u4ee3\u7801\u4e2d\u7684dp[i]\u8868\u793a\u7684\u662f\u5230\u6df1\u5ea6\u4e3ai\u7684\u70b9\u7684\u524d\u7f00\u6743\u503c\u662f\u591a\u5c11\uff0c\u7531\u4e8e\u662fdp[i]=dp[i-1]+r[x]\uff08r[x]\u4e3ax\u70b9\u7684\u6743\u503c\uff09\u6240\u4ee5\u6211\u628a\u6839\u8282\u70b9\u6df1\u5ea6\u94a6\u5b9a\u4e3a1\u800c\u4e0d\u662f0\u3002\n\n\u7136\u540e\u5728\u51fa\u73b0dp[i]==s\u7684\u65f6\u5019ans++\uff0cdp[i]>s\u7684\u65f6\u5019\u4e8c\u5206\u4e00\u4e0b\u524d\u9762\u662f\u5426\u54ea\u4e2a\u6df1\u5ea6j\u6ee1\u8db3dp[i]-dp[j]==s\uff0c\u6709\u7684\u8bddans++\u5c31\u53ef\u4ee5\u4e86\uff08\u4e8c\u5206\u6027\u7684\u8bdd\uff0c~~\u663e\u7136~~dp[]\u662f\u9012\u589e\u7684\u554a\uff09\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48dp[]\u5728\u56de\u6eaf\u7684\u65f6\u5019\u4e0d\u7528dp[i]-=r[x]\u5462\uff1f\u56e0\u4e3a\u5728\u641c\u540c\u4e00\u6df1\u5ea6\u7684\u67d0\u4e2a\u70b9\u65f6\u4f1a\u76f4\u63a5dp[i]=dp[i-1]+r[y]\u8986\u76d6\u6389\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u6570\u7ec4\u53ebdp\u800c\u4e0d\u662fap\u5462\uff1f~~\u56e0\u4e3a\u8fd9\u662f\u4e00\u9053\u72b6\u538bdp\u9898\u554a~~\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int N=100005;\nint n,s,ans;\nint r[N];\nint sum,h[N];\nstruct Edge\n{\n\tint v,nxt;\n} e[N];\nvoid adde(int x,int y)\n{\n\tsum++;\n\te[sum].v=y;\n\te[sum].nxt=h[x];\n\th[x]=sum;\n}\nint dp[N];\nvoid solve(int x)\n{\n\tint l=1,r=x-1,mid=(l+r)>>1,now;\n\twhile(l<=r)\n\t{\n\t\tmid=(l+r)>>1;\n\t\tif(dp[x]-dp[mid]>=s)\n\t\t{\n\t\t\tnow=dp[x]-dp[mid];\n\t\t\tif(now==s) ans++;\n\t\t\tl=mid+1;\n\t\t}\n\t\telse r=mid-1;\n\t}\n\t//if(now==s) ans++;\n\t/*for(int i=1;i<=x-1;i++)\n\t\tif(dp[x]-dp[i]==s) ans++;*/\n}\nvoid dfs(int x,int d)\n{\n\tdp[d]=dp[d-1]+r[x];\n\tif(dp[d]==s) ans++;\n\telse if(dp[d]>s) solve(d);\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t\tdfs(e[i].v,d+1);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&s); \n\tfor(int i=1;i<=n;i++) scanf(\"%d\",r+i); \n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadde(x,y);\n\t}\n\tdfs(1,1);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1547694852,
        "uid": 59700,
        "name": "salix_leaf",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "###\u641c\u7d22\u53ef\u8fc7\n\n###dfs(i)\u8868\u793a\u4ee5i\u4e3a\u8d77\u70b9\u7684\u8def\u5f84\u6709\u591a\u5c11\u6761\u7684\u70b9\u6743\u548c\u662fs\uff0c\u641cn\u904d...\n\n###\u6570\u636e\u592a\u6c34\u4e86...\n\n###\u4ee3\u7801\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define LL long long\n#define maxn 100008\nusing namespace std;\nint n,s,sumedge;\nint head[maxn],w[maxn];\nlong long ans;\nstruct Edge{\n    int x,y,nxt;\n    Edge(int x=0,int y=0,int nxt=0):\n        x(x),y(y),nxt(nxt){}\n}edge[maxn];\nvoid add(int x,int y){\n    edge[++sumedge]=Edge(x,y,head[x]);\n    head[x]=sumedge;\n}\nLL dfs(int x,int sum){\n    if(sum>s)return 0;\n    if(sum==s)return 1;\n    long long js=0;\n    for(int i=head[x];i;i=edge[i].nxt){\n        int v=edge[i].y;\n        js+=dfs(v,sum+w[v]);\n    }\n    return js;\n}\nint main(){\n    scanf(\"%d%d\",&n,&s);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&w[i]);\n    for(int i=1;i<n;i++){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n    }\n    for(int i=1;i<=n;i++)if(w[i]==s)ans++;else ans+=dfs(i,w[i]);\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1506333115,
        "uid": 49431,
        "name": "xun\u85b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "DFS\uff0c\uff08\u4e5f\u8bb8\u662f\u9012\u5f52\u5b9e\u73b0\u7684DP\uff1f\uff09\u3002\u6839\u636e\u6811\u7684\u7ed3\u6784\u904d\u5386\u5404\u4e2a\u8282\u70b9\uff0cf\u6570\u7ec4\u4fdd\u5b58\u4ece\u6839\u8282\u70b9\u5230\u5f53\u524d\u8282\u70b9\u6743\u503c\u7684\u524d\u7f00\u548c\u3002\u6bcf\u641c\u7d22\u5230\u4e00\u4e2a\u7ed3\u70b9\u5c31\u5411\u524d\u679a\u4e3e\u5404\u7ea7\u7236\u8282\u70b9\uff0c\u5982\u679c\u5f53\u524d\u7ed3\u70b9\u7684\u524d\u7f00\u548c\u4e0e\u67d0\u4e2a\u7236\u8282\u70b9\u524d\u7f00\u548c\u4e4b\u5dee\u4e3a0\u5c31\u7d2f\u52a0ans\u3002\n\n```cpp\n#define maxn 100000\n#include<cstdio>\n#include<vector>\nusing namespace std;\nint n,s,a[maxn],f[maxn],ans=0,front[maxn];\nvector<int> map[maxn];\nvoid dfs(int node) {\n    f[node]=f[front[node]]+a[node];//\u9012\u63a8\u8bb0\u5f55\u524d\u7f00\u548c\uff0c\u4ece\u7236\u8282\u70b9\u96c6\u6210\u4e0b\u6765\n    int p=node;\n    while(p!=-1) {//\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u5411\u524d\u679a\u4e3e\u4e4b\u524d\u7684\u7236\u8282\u70b9\uff0c\u82e5\u524d\u7f00\u548c\u4e4b\u5dee\u4e3as\u5c31\u7d2f\u52a0ans\n        if((f[node]-f[p])==s) ans++;\n        if((f[node]-f[p])>=s) break;\n        p=front[p];\n    }\n    if(f[node]==s) ans++;\n    while(!map[node].empty()) {//\u679a\u4e3e\u6240\u6709\u7684\u5b50\u8282\u70b9\uff0cvector\u7684\u4f18\u52bf\u4f53\u73b0\u51fa\u6765\u4e86\n        dfs(map[node].back());\n        map[node].pop_back();\n    }\n    return;\n}\nint main() {\n    scanf(\"%d%d\",&n,&s);\n    for(int i=0;i<n;i++) scanf(\"%d\",a+i);\n    front[0]=-1;\n    for(int i=1;i<n;i++) {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        map[x-1].push_back(y-1);//\u8bb0\u5f55\u6811\u7684\u7ed3\u6784\n        front[y-1]=x-1;//\u8bb0\u5f55\u6bcf\u4e2a\u7ed3\u70b9\u7684\u7236\u8282\u70b9\n    }\n    dfs(0);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1486376596,
        "uid": 10086,
        "name": "skylee",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u6211\u6700\u8fd1\u8ddf\u7740\u5b66\u6821\u96c6\u8bad\uff0c\u5237\u7d2b\u9898\uff0c\u9ed1\u9898\u90fd\u5feb\u5237\u5230\u5410\u4e86\uff0c\u7a81\u7136\u770b\u5230\u8001\u5e08\u5e03\u7f6e\u7684\u8fd9\u9053\u9898\u7adf\u7136\u662f\u4e2a\u9ec4\u9898\uff0c\u8fd8\u4ee5\u4e3a\u81ea\u5df1\u627e\u9519\u4e86\u3002\n\n\u6570\u636e\u662f\u771f\u7684\u6c34\uff0c\u5404\u79cd\u771fO\uff08n^2\uff09\u6216\u4f2aO(n * log(n) )\u5c42\u51fa\u4e0d\u7a77\uff0c\u4e8e\u662f\u6211\u5c31\u5199\u4e86\u4e2a\u500d\u589eO\uff08n*log(n)\uff09\u3002\n\n\u7b97\u6cd5\u6ca1\u4ec0\u4e48\u96be\u70b9\uff0c\u4e3b\u8981\u5c31\u662f\u770b\u9898\u610f\uff0c\u7531\u4e8e\u8def\u5f84\u4e0a\u8282\u70b9\u6df1\u5ea6\u9012\u589e\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u6709\u62d0\u70b9\uff0c\u6240\u4ee5\u5f80\u4e0a\u722c\u5c31\u884c\u4e86\uff0c\u7136\u540e\u5c31\u662f\u500d\u589e\u4f18\u5316\u3002\n\n\u628a\u8fd9\u9053\u9898\u5f53\u500d\u589e\u5165\u95e8\u6765\u8bb2\uff1a\n\ndp[i][k]: \u8868\u793a\u4ecei\u70b9\u5411\u4e0a\u722c2^k\u6b65\u662f\u54ea\u4e2a\u70b9\u3002\n\nup[i][k]: \u8868\u793a\u5305\u62eci\u70b9\u5728\u5185\uff0c\u5411\u4e0a2^k\u4e2a\u70b9\u7684\u548c\u662f\u591a\u5c11\u3002\n\u6ce8\u610f\uff1a\u8fd9\u91cc\u662f\u70b9\uff0c\u4e0a\u9762\u662f\u6b65\uff0c\u6240\u4ee5dp\u722c\u5230\u7684\u70b9\u662f\u6ca1\u6709\u8ba1\u7b97\u7684\u3002\n\n\u770b\u8fd9\u9053\u9898\u662f\u8981\u51d1S\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u53ea\u6709\u4e00\u6761\u4ee5\u4ed6\u4e3a\u8d77\u70b9\u7684\u8def\u5f84\uff0c\u6240\u4ee5\u51d1\u5230S\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\u5927\u610f:\u5982\u679c\u5411\u4e0a\u52a02^k\u4e2a\u70b9\u7684\u503c\u5927\u4e8e\u4e86S\uff0c\u5c31\u5c1d\u8bd5\u52a02^k-1\u4e2a\u70b9\uff0c\u5426\u5219\u5c1d\u8bd5\u52a02^k+2^k-1\u4e2a\u70b9\u3002\n\ncode:\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#include<cmath>\nusing namespace std;\n#define LL long long\n#define M 100005\nconst  LL Inf=0x3f3f3f3f;\nconst int K = 21;\nvector<LL>G[M];\nLL read() {\n\tLL x=0;\n\tLL f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9') {\n\t\tif(c=='-')\n\t\t\tf=-f;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9') {\n\t\tx=(x<<1)+(x<<3)+c-'0';\n\t\tc=getchar();\n\t}\n\tx*=f;\n\treturn x;\n}\nvoid write(LL x) {\n\tif(x / 10) write(x / 10);\n\tputchar(x % 10 + '0');\n}\nLL up[M][K],dp[M][K];\nvoid dfs(LL u,LL fa){\n\tdp[u][0]=fa;\n\tfor(int i=1;i<K;i++){\n\t\tdp[u][i]=dp[dp[u][i-1]][i-1];\n\t\tup[u][i]=up[u][i-1]+up[dp[u][i-1]][i-1];\n\t}\n\tfor(int i=G[u].size()-1;~i;--i){\n\t\tLL v = G[u][i];\n\t\tif(v==fa)\n\t\t\tcontinue;\n\t\tdfs(v,u);\n\t}\n\treturn ;\n}\nLL n=read(),s=read(),ans;\nint main(){\n\tfor(int i=1;i<=n;i++)\n\t\tup[i][0]=read();\n\tfor(int i=1;i<n;i++){\n\t\tLL u=read(),v=read();\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t}\n\tdfs(1,0);\n\tfor(int i=1;i<=n;i++){\n\t\tLL u=i;\n\t\tLL t=0;\n\t\tfor(int j=K-1;(~j)&&u;--j){\n\t\t\tif(up[u][j]+t>s)\n\t\t\t\tcontinue;\n\t\t\tt+=up[u][j];\n\t\t\tu=dp[u][j];\n\t\t}\n\t\tif(t==s)\n\t\t\tans++;\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1566911846,
        "uid": 105090,
        "name": "wyl_AC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "# \u3010dfs\u3011\u3010\u54c8\u5e0c\u8868\u3011P3252 [JLOI2012]\u6811\n\n\u56e0\u4e3a\u6240\u6709\u70b9\u6743\u90fd\u662f\u6b63\u7684\uff0c\u6240\u4ee5\u5bf9\u6bcf\u4e2a\u7ed3\u70b9u\u6765\u8bf4\uff0c\u6bcf\u6761\u4ece\u6839\u5230\u5b83\u7684\u8def\u5f84\u4e0a\u53ea\u6709\u6700\u591a\u4e00\u4e2a\u7ed3\u70b9v\u7b26\u5408d(u,v)=S\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fb9dfs\u8fb9\u628a\u6bcf\u4e2a\u7ed3\u70b9\u7684\u524d\u7f00\u548cpre[u]\u5b58\u5230\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u91cc\u9762\uff0c\u540c\u65f6\u67e5\u8be2pre[u]-S\u662f\u5426\u5b58\u5728\u3002\n\n\u6570\u636e\u7ed3\u6784\u7528set\u3001hashtable(\u968f\u4fbf\u5361)(\u9700\u8981\u652f\u6301\u5220\u9664\uff0c\u7531\u4e8e\u603b\u662f\u5220\u6389\u6700\u540e\u4e00\u4e2a\uff0c\u56e0\u6b64\u53ef\u4ee5\u5b9e\u73b0)\u90fd\u884c\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define MAXN 100001\n#define MOD 100003\nstruct HashTable\n{\n    int v[MAXN],next[MAXN],first[MOD],en;\n    HashTable(){memset(first,-1,sizeof(first));en=0;}\n    void Insert(const int &x)\n    {int o=x%MOD; v[en]=x; next[en]=first[o]; first[o]=en++;}\n    void Delete(const int &x) {first[x%MOD]=next[--en];}\n    bool Find(const int &x)\n    {int o=x%MOD; for(int i=first[o];i!=-1;i=next[i]) if(v[i]==x) return 1; return 0;}\n}T;\nint n,K,w[MAXN],ans;\nint v[MAXN],first[MAXN],next[MAXN],en;\nvoid AddEdge(const int &U,const int &V){v[++en]=V; next[en]=first[U]; first[U]=en;}\nvoid dfs(int U,int W)\n{\n    if(K<=W) ans+=T.Find(W-K);\n    T.Insert(W);\n    for(int i=first[U];i;i=next[i])\n      dfs(v[i],W+w[v[i]]);\n    T.Delete(W);\n}\nint main()\n{\n    int a,b;\n    scanf(\"%d%d\",&n,&K);\n    for(int i=1;i<=n;++i) scanf(\"%d\",&w[i]);\n    for(int i=1;i<n;++i) {scanf(\"%d%d\",&a,&b); AddEdge(a,b);}\n    T.Insert(0); dfs(1,w[1]); printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1565332539,
        "uid": 108750,
        "name": "quotient_0",
        "ccfLevel": 0,
        "title": "P3252 [JLOI2012]\u6811"
    },
    {
        "content": "# \u55ef\uff0cbitset\u662f\u4e2a\u597d\u4e1c\u897f\u3002\n\n\u5176\u5b9e\u4e00\u5f00\u59cb\u6211\u89c9\u5f97\u5e76\u4e0d\u80fd\u5b58\u7684\u4e0b\uff0c\u540e\u6765\u4e00\u770b\u6570\u636e\u8303\u56f4\uff08~~\u6781\u6c34~~\uff09\uff0c\u4e8e\u662f\u5c31\u5199\u4e86\u4e2abitset\u3002\n\n\u6211\u4eec\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u5b9a\u4e49\u4e00\u4e2abitset<1001> bs[N]\uff0c\u7528bs[i]\u7684\u7b2cj\u4f4d\u8868\u793a\u4ee5\u70b9i\u4e3a\u7ec8\u70b9\u7684\u94fe\u80fd\u4e0d\u80fd\u53d6\u5230j\uff0c,\u518d\u5b9a\u4e49h[i]\u8868\u793ai\u70b9\u7684\u70b9\u6743\u3002\n\n\u7136\u540e\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u641c\u7d22\uff0c\u6bcf\u5230\u4e00\u4e2a\u70b9i\uff0c\u5c31\u628a\u70b9i\u7236\u4eb2\u7684bs\u5de6\u79fbh[i]\u4f4d\u8d4b\u7ed9bs[i]\uff0c\u518d\u628a\u7b2cbs[i][h[i]]\u4f4d\u7f6e\u4e3a1\u3002\u5982\u679cbs[i][s]\u662f1\uff0c\u90a3\u4e48ans++\u3002\u7edf\u8ba1\u5b8c\u4e4b\u540e\uff0c\u628aans\u8f93\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<bitset>\n#define N 100001\nusing namespace std;\nint n,m,h[N],q[N*2],hd,tl,ans;\nint nex[N*2],fir[N],poi[N*2],sum;\nbool v[N];\nbitset<1001> bs[N];\ninline void re(int &num)\n{\n\tchar c;num=0;\n\twhile((c=getchar())<'0'||c>'9'); num=c-'0';\n\twhile((c=getchar())>='0'&&c<='9') num=num*10+c-'0';\n}\ninline void ins(int a,int b)\n{sum++;nex[sum]=fir[a];fir[a]=sum;poi[sum]=b;}\nvoid bfs(int x)\n{\n\tq[++tl]=x;bs[x][h[x]]=1;\n\twhile(hd<tl)\n\t{\n\t\tint now=q[++hd];\n\t\tif(bs[now][m]) ans++;\n\t\tfor(int i=fir[now];i;i=nex[i])\n\t\t{\n\t\t\tint p=poi[i];\n\t\t\tq[++tl]=p;\n\t\t\tbs[p]=bs[now];\n\t\t\tbs[p][0]=1;\n\t\t\tbs[p]<<=h[p];\n\t\t}\n\t}\n}\nint main()\n{\n\tint a,b;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\tre(h[i]);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tre(a);re(b);\n\t\tins(a,b);\n\t\tv[b]=1;\n\t}\n\tfor(int i=1;i<=n;i++)\n\tif(!v[i]) {bfs(i);break;}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1558862692,
        "uid": 88329,
        "name": "Orzalpha",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u4e24\u79cd\u505a\u6cd5\u3002  \n\u9996\u5148\u636e\u8001\u5e08\u8bf4\uff0cdp\u7684\u5927\u90e8\u5206\u6c34\u9898\u548c\u6811\u4e0a\u7684dp\u90fd\u9700\u8981\u5148\u4e0a\u4e00\u4e2a~~\u7b80\u5355\u7684~~dfs\u3002  \n\u4f46\u662f\u6211\u4eec\u9700\u8981\u6253\u4e00\u4e2a\u4f18\u96c5\u7684\u6df1\u641c\u3002  \n\n-------\n\n### \u4e8e\u662f\u2014\u2014\u505a\u6cd51\uff1a\n~~\u6bd4\u8f83\u66b4\u529b~~\u7684dfs\uff08\u7adf\u7136AC\u4e86\uff0c\u4e0d\u53ef\u601d\u8bae\uff09  \n\u6211\u4eec\u8981\u77e5\u9053\uff0c\u6bcf\u4e00\u4e2a\u70b9\u90fd\u53ef\u80fd\u662f\u8d77\u70b9\uff0c\u5e76\u4e14\u662f\u5411\u4e0b\u6df1\u641c\uff0c  \n\u539f\u56e0\uff1a\u9898\u9762\u8bf4\u662f\u8981\u6df1\u5ea6\u9012\u589e\u3002  \n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u4e00\u4e2adfs\uff0c\u4e24\u4e2a\u53c2\u6570\uff0c\u8282\u70b9p\u4ee5\u53ca\u4ece\u641c\u7684\u5f00\u59cb\u8282\u70b9\u5230\u5f53\u524d\u8282\u70b9\u7684\u6743\u503c\u548csum\u3002  \n\u90a3\u4e48\u73b0\u5728\u5c31\u6709\u4e09\u79cd\u72b6\u6001\uff1a  ~~\u72b6\u6001\uff1fdp\u9884\u8b66~~\n1. sum is S\uff0cso ans++\u3002\n2. sum > S\uff0cso return\uff08\u65e2\u7136\u90fd\u6bd4S\u5927\u4e86\u90a3\u4e48\u518d\u5411\u4e0bdfs\u4e5f\u6ca1\u7528\u4e86\uff0c\u56e0\u4e3a\u6743\u503c\u90fd\u662f\u6b63\u6574\u6570\uff09\n3. sum < S\uff0cso \u904d\u5386\u6bcf\u4e00\u4e2ap\u7684\u513f\u5b50\u518d\u8dd1dfs \n\n\u4e8e\u662f\u8fd9\u4e2a\u9898\u5c31\u8fd9\u4e48\u505a\u5b8c\u4e86\uff1f ~~\u597d\u50cf\u6709\u70b9\u5feb~~  \n**Code:**\n```cpp\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\ntypedef long long int lli;\nstruct edge{\n    int to,next;\n}Edge[100001];\n\nint head[100001],fa[100001],cnt=1;\ninline void add_edge(int from,int son)\n{\n    Edge[cnt].to=son;\n    Edge[cnt].next=head[from];\n    head[from]=cnt++;\n}\n\nlli ans=0;\nint value[100001],n,s;\nint dp[100001];\nvoid dfs(int, int);\n\nint main()\n{\n    scanf(\"%d%d\",&n,&s);\n    for (register int i=1;i<=n;i++)\n        scanf(\"%d\",&value[i]);\n    for (register int i=1;i<=n-1;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add_edge(x,y);\n        fa[y]=x;\n    }\n    for (register int i=1;i<=n;i++)\n        dfs(i,value[i]);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\nvoid dfs(int p,int sum)\n{\n    if (sum>s)return;\n    else if (sum==s)\n    {\n        ans++;\n        return;\n    }\n    else\n        for (int i=head[p];i;i=Edge[i].next)\n            dfs(Edge[i].to,sum+value[Edge[i].to]);\n}\n```\n\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u904d\u5386\u4e00\u4e2a\u70b9\u591a\u6b21\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u53ef\u4ee5\u8bb0\u5fc6\u5316\u4f18\u5316\u3002  \n\u90a3\u4e48\u5982\u679c\u6570\u636e\u6bd2\u7624\u4e00\u70b9\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u5c31T\u7684\u98de\u8d77\u4e86\uff1f  \n\u6211\u4eec\u8003\u8651\u4f18\u5316\u8fd9\u4e2adfs\u3002  \n~~\u4e0d\u521a\u8bf4\u4e86\u5417 dp\u9884\u8b66~~   \n\n------\n\n### \u505a\u6cd52\uff1a\u8bb0\u5fc6\u5316dfs\n\u6839\u636e\u6211\u4eec\u521a\u521a\u7684\u4e09\u4e2a\u201c\u72b6\u6001\u201d\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u53ef\u4ee5\u5199\u4e00\u4e2a\u8bb0\u5fc6\u5316dfs\u3002  \n\u90a3\u4e0d\u5c31\u662fdp\u561b\uff01  \n\u6211\u4eec\u628a\u6bcf\u4e00\u6b21\u7684\u72b6\u6001\u90fd\u8bb0\u5f55\u4e0b\u6765\uff0c\u5982\u679c\u8003\u8651\u7528`dp[\u5f53\u524d\u8282\u70b9][\u5f53\u524d\u548c]`\u8868\u793a\u4ece\u5f53\u524d\u8282\u70b9\u5f00\u59cb\u5411\u4e0bsum\u7684\u548c\u6709\u591a\u5c11\u79cd\u65b9\u6848\u3002  \n\u8fd9\u65e2\u6d6a\u8d39\u53c8MLE\u7684\u98de\u8d77\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u6362\u6389\u8fd9\u4e2a\u65b9\u6848\u3002  \n\u56e0\u4e3a\u4e00\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u7236\u8282\u70b9\u6216\u6ca1\u6709\uff0c\u90a3\u4e48\u5411\u4e0a\u904d\u5386\u7684\u548c\u4e00\u5b9a\u662f\u4e00\u6837\u7684\u3002  \n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u7528\u5230`dp[\u5f53\u524d\u8282\u70b9][\u5f53\u524dstep]`\uff0c\u8868\u793a\u4ecep\u5f00\u59cb\u5411\u4e0bstep\u6709\u591a\u5c11\u8def\u5f84\u6570\u3002  \n\u7136\u540e\u6df1\u641c\u81ea\u5e26sum\uff0c\u4e0e\u4e0a\u9762\u7684\u6548\u679c\u5c31\u53d8\u6210\u662f\u4e00\u6837\u7684\u3002  \n\u518d\u6839\u636e\u6bcf\u4e00\u4e2a\u72b6\u6001\uff0c\u5199\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a  \n1. \u5f53$sum>S$\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4e00\u6761\u8def\u5f84\n$$\ndp[p][step]=0(sum>S)\n$$\n2. \u5f53$sum = S$\u7684\u65f6\u5019\uff0c\u53ea\u6709\u4e00\u6761\u8def\u5f84\n$$\ndp[p][step]=1(sum = S)\n$$\n3. \u5f53$sum < S$\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5b50\u72b6\u6001\u6765\u786e\u5b9a\uff0c\u5c06\u6240\u6709\u7684\u5b50\u72b6\u6001\u6c42\u548c\u5c31\u5b8c\u4e86\u3002\n$$\ndp[p][step]=\\sum^{i\\in p\\texttt{\u7684\u5b50\u8282\u70b9}}_{i=head[p]}dp[i][step+1]\n$$\n\n\u53ef\u4ee5\u81ea\u884c\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\u3002  \n**Code:**\n```cpp\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\ntypedef long long int lli;\nstruct edge\n{\n    int to,next;\n}Edge[100001];\nint head[100001],fa[100001],cnt=1;\ninline void add_edge(int from,int son)\n{\n    Edge[cnt].to=son;\n    Edge[cnt].next=head[from];\n    head[from]=cnt++;\n}\nlli ans=0;\nint value[100001],n,s;\nint dp[100001][50];\nlli dfs(int, int, int);\n\nint main()\n{\n    scanf(\"%d%d\",&n,&s);\n    for (register int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&value[i]);\n    }\n    for (register int i=1;i<=n-1;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add_edge(x,y);\n        fa[y]=x;\n    }\n    for (register int i=1;i<=n;i++)\n    {\n        ans+=dfs(i,value[i],1);\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\nlli dfs(int p, int sum, int step)\n{\n    if (dp[p][step])return dp[p][step];\n    if (sum>s)return 0;\n    if (sum==s)return dp[p][step]=1;\n    lli cnt=0;\n    for (register int i=head[p];i;i=Edge[i].next)\n    {\n        cnt+=dfs(Edge[i].to,sum+value[Edge[i].to],step+1);\n    }\n    return dp[p][step]=cnt;\n}\n```\n\u7a9djio\u7684\u8ba4\u771f\u770b\u8fd9\u7bc7\u9898\u89e3\u90fd\u80fd\u505a\u5bf9qwq\n\n-----\n\n### End.\n(\u8bdd\u8bf4\u8fd9\u4e2a\u4e0e\u72b6\u6001\u538b\u7f29\u6709\u4ec0\u4e48\u5173\u7cfborz",
        "postTime": 1556641911,
        "uid": 122927,
        "name": "Jelly_Goat",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u9898\u610f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8ba9\u4f60\u5728\u4e00\u68f5\u6811\u4e2d\u627e\u4e00\u6761\u8def\u5f84\u7b49\u4e8es\u7684(\u8def\u5f84\u7684\u8282\u70b9\u6df1\u5ea6\u5fc5\u987b\u9012\u589e)\n\n\u5927\u4f6c\u4eec\u7528\u7684\u4ec0\u4e48LCA,\u72b6\u538b\u6211\u90fd\u4e0d\u61c2QAQ\n\n\u672c\u849f\u84bb\u5c31\u8bf4\u4e00\u4e0b\u8fd9\u9053\u9898\u7528\u961f\u5217\u600e\u4e48\u505a\n\n\u5982\u679c\u4e00\u6761\u8def\u5f84\u7684\u5927\u5c0f\u8d85\u8fc7\u4e86\u9898\u76ee\u7684S(\u9650\u5236)\n\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u65e0\u8bba\u600e\u4e48\u5ef6\u4f38\u90fd\u4e0d\u80fd\u4e3a\u7b54\u6848\u505a\u51fa\u8d21\u732e~~(\u5c31\u662f\u5e9f\u4e86)~~\n\n\u6211\u4eec\u53ea\u80fd\u8ba9\u8def\u5f84\u6536\u7f29\uff0c\u624d\u80fd\u8ba9\u5b83\u4e3a\u7b54\u6848\u4f5c\u51fa\u8d21\u732e\n\n\u8981\u4e48\u628a\u6df1\u5ea6\u6700\u5927\u7684\u90a3\u4e2a\u53bb\u6389\uff0c\u8981\u4e48\u628a\u6df1\u5ea6\u6700\u5c0f\u7684\u8282\u70b9\u53bb\u6389\n\n\u8fd9\u4e0d\u5c31\u662f\u961f\u5217\u5417\uff1f\n\n\u6211\u4eec\u4ece\u6bcf\u4e00\u4e2a\u8282\u70b9\u5411\u5b83\u7684\u7236\u8282\u70b9\u8fdb\u884c\u641c\u7d22\n\n\u6309\u7167\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662fo(n^2),\u663e\u7136\u662f\u4e0d\u884c\u7684\n\n\u90a3\u4e48\u6211\u4eec\u4f18\u5316\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\n\n\u6211\u4eec\u6bcf\u4e00\u6b21\u641c\u7d22\u90fd\u7ed9\u8282\u70b9\u67d3\u4e00\u6b21\u8272(\u770b\u4e0d\u61c2\u7684\u8bdd\u53ef\u4ee5\u7ed3\u5408\u7a0b\u5e8f\u7406\u89e3)\n\n\u5982\u679c\u6211\u4eec\u9047\u5230\u4e86\u4e00\u4e2a\u8bbf\u95ee\u8fc7\u7684\u70b9\uff0c\u6211\u4eec\u8fd9\u65f6\u5019\u7ed3\u675f\u641c\u7d22\uff0c\u90a3\u4e48\u5c31\u4f1a\u5ffd\u7565\u4e00\u4e9b\u60c5\u51b5\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u628a\u8fd9\u4e9b\u60c5\u51b5\u90fd\u7b97\u51fa\u6765\n\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u961f\u5934(head)\u4e5f\u88ab\u8bbf\u95ee\u8fc7\u7684\u8bdd\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u9000\u51fa(return)\u641c\u7d22\u4e86\n\n\u56e0\u4e3a\u4e4b\u540e\u7684\u60c5\u51b5\u6211\u4eec\u5df2\u7ecf\u7b97\u8fc7\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662fo(n+m) m\u662f\u4e00\u4e2a\u5e38\u6570\n\n\u5982\u679c\u6837\u4f8b\u4e0d\u9488\u5bf9\u7684\u8bdd\u8fd8\u662f\u53ef\u4ee5\u8fc7\u7684\n\n\u8bb2\u5b8c\u4e86\uff0c\u732e\u4e0a\u849f\u84bb\u7684\u4ee3\u7801 :\n\n```cpp\n#include<cmath>\nusing namespace std;\nint n,s,i,a[100005]; //ai\u662fi\u8282\u70b9\u7684\u6743\u503c \nint f[100005];//fi\u662fi\u7684\u7236\u8282\u70b9\uff0c\u6ca1\u6709\u5219\u4e3a0 \nint x,y,num_color,ans; //num_color\u662f\u67d3\u8272\u7f16\u53f7\uff0cans\u5c31\u4e0d\u8bf4\u4e86\uff0c\u5927\u5bb6\u90fd\u61c2 \nint color[100005]; //\u6bcf\u4e2a\u8282\u70b9\u7684\u989c\u8272 \nbool vis[100005]; //\u6807\u8bb0\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7 \nvoid dfs(int x,int sum,int head,int num_color) //x\u662f\u5f53\u524d\u8282\u70b9,sum\u662f\u8def\u5f84\u7684\u603b\u6743\u503c,head\u662f\u961f\u5934\uff0cnum_color\u662f\u67d3\u8272\u7f16\u53f7\n{\n\tif (!vis[x]) color[x]=num_color; //\u5982\u679c\u4e4b\u524d\u6ca1\u88ab\u8bbf\u95ee\u8fc7\uff0c\u90a3\u4e48\u7ed9\u4ed6\u67d3\u8272\uff0c\u5426\u5219\u4e0d\u7ed9\u4ed6\u67d3\u8272\n\tvis[x]=true;//\u6807\u8bb0 \n\twhile (sum>s) {sum-=a[head]; head=f[head]; if (color[head]<num_color) break;} //\u5982\u679c\u603b\u6743\u503c\u5927\u4e8es,\u5c31\u961f\u5934\u51fa\u961f \n\tif (color[head]<num_color) return ; \n\t//\u5982\u679c\u961f\u5934head\u6240\u5728\u7684\u8282\u70b9\u5728\u672c\u6b21\u904d\u5386\u4e4b\u524d\u5df2\u7ecf\u88ab\u67d3\u8fc7\u8272\uff0c\u5c31\u9000\u51fa\uff0c\u56e0\u4e3a\u4e4b\u540e\u7684\u60c5\u51b5\u6211\u4eec\u90fd\u8003\u8651\u8fc7\u4e86\uff0c\u518d\u904d\u5386\u6ca1\u6709\u610f\u4e49 \n\tsum+=a[x];\n\tif (sum==s) ans++;\n\tif (f[x]!=0) dfs(f[x],sum,head,num_color); //\u5982\u679c\u5b83\u4e0d\u662f\u6839\u8282\u70b9\uff0c\u5c31\u7ee7\u7eed\u8bbf\u95ee \n\treturn ;\n}\nint main()\n{\n\tcin>>n>>s;\n\tfor (i=1; i<=n; i++) scanf(\"%d\",&a[i]);\n\tfor (i=1; i<=n-1; i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tf[y]=x;//\u8bb0\u5f55\u7236\u8282\u70b9 \n\t}\n\tfor (i=1; i<=n; i++) if (!vis[i]) dfs(i,0,i,++num_color); //num_color\u662f\u67d3\u8272\u7f16\u53f7 \n\t//\u8fd9\u91cc\u7684dfs\u5e76\u4e0d\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684dfs\uff0c\u53ea\u662f\u6211\u4e0d\u77e5\u9053\u53eb\u4ec0\u4e48\u597d\u5c31\u7528\u4e86dfs \n\tcout<<ans<<endl;\n\treturn 0; \n}\n```\n\u8bdd\u8bf4\u8fd9\u9898\u548c\u72b6\u538b\u6709\u4ec0\u4e48\u5173\u7cfb",
        "postTime": 1548904406,
        "uid": 16833,
        "name": "Blue_Sky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u66b4\u529b\u641c\u4e00\u4e0b\u5373\u53ef\n\n\u4ee5\u6811\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e3a\u641c\u7d22\u7684\u8d77\u70b9\uff0c\u4e0d\u65ad\u5f80\u4e0b\u641c\u3002\n\n\u6ce8\u610f:\u5728\u641c\u7684\u65f6\u5019\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u526a\u679d\uff1a\u5982\u679c\u5230\u5f53\u8282\u70b9\u8be5\u8def\u5f84\u7684\u603b\u548c\u5df2\u7ecf\u5927\u4e8e$s$\uff0c\u5c31\u53ef\u4ee5\u7ed3\u675f\u641c\u7d22\uff08\u56e0\u4e3a\u4e0b\u9762\u4f1a\u8d8a\u52a0\u8d8a\u5927\uff0c\u4e0d\u53ef\u80fd\u7b49\u4e8e$s$\uff09\u3002\n\n$AC$ $code$(\u5185\u542b\u6ce8\u91ca)\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nstruct node\n{\n\tint data;\n\tvector<int> son;//\u9898\u9762\u4e2d\u5e76\u6ca1\u8bf4\u8be5\u6811\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u6811\uff0c\u6709\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u5b69\u5b50\n\t\t\t\t\t//\u4e14\u5982\u679c\u7528\u6570\u7ec4\u5f00\u7684\u8bdd\uff0c\u7a7a\u95f4\u4f1a\u7206\u70b8\n\t\t\t\t\t//\u6545\u4f7f\u7528\u4e0d\u5b9a\u957f\u6570\u7ec4vector\u5b58\u50a8\u5b69\u5b50\u8282\u70b9\u4fe1\u606f\n};\n\nint n;\n\nint s;\n\nnode tree[100010];\n\nint ans;\n\nvoid dfs(int id,int sum){//id\u6307\u5f53\u524d\u8282\u70b9\u7684\u7f16\u53f7\uff0csum\u6307\u5230\u5f53\u524d\u8282\u70b9\u6240\u679a\u4e3e\u7684\u8def\u5f84\u7684\u548c\n\tif(sum>s)\n\t\treturn ;//\u4e0a\u6587\u6240\u8ff0\u7684\u526a\u679d\n\tif(sum==s){\n\t\tans++;\n\t\treturn ;\n\t}//\u5982\u679c\u7b49\u4e8es,\u8bf4\u660e\u5b58\u5728\u8fd9\u6837\u7684\u8def\u5f84,ans++,\u5e76\u8fd4\u56de\n\tif(id==0)\n\t\treturn ;//\u5982\u679c\u5f53\u524d\u8282\u70b9\u4e3a\u7a7a\uff0c\u8fd4\u56de\n\tfor(int i=0;i<tree[id].son.size();i++){//\u679a\u4e3e\u5b69\u5b50\u8282\u70b9\n\t\tdfs(tree[id].son[i],sum+tree[tree[id].son[i]].data);//\u5f80\u4e0b\u641c\n\t}\n}\n\nint main(){\n\tcin>>n>>s;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>tree[i].data;\n\t}//\u8f93\u5165\u6811\u4e0a\u8282\u70b9\u7684\u4fe1\u606f\n\tfor(int i=1;i<=n-1;i++){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\ttree[x].son.push_back(y);\n\t}//\u5b58\u50a8\u8fd9\u68f5\u6811\u7684\u4fe1\u606f\n\tfor(int i=1;i<=n;i++){\n\t\tdfs(i,tree[i].data);\n\t}//\u6bcf\u4e2a\u8282\u70b9\u679a\u4e3e\u7740\u641c\n\tcout<<ans<<endl;//\u8f93\u51fa\u7b54\u6848\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\n}\n```",
        "postTime": 1544369484,
        "uid": 88213,
        "name": "zhangyuhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u4e00\u9053\u4e0d\u9519\u7684DP\u9898\n\n\u7531\u4e8e\u8bb0\u641c\u4fbf\u4e8e\u7406\u89e3\uff0c\u4e8e\u662f\u7528\u8bb0\u641c\u89e3\u6b64\u9898~~\u7531\u4e8e\u6211\u592a\u83dc~~\n\n\u8bbe\u8ba1\u72b6\u6001\uff1a\n\nf[u][w]\u8868\u793a\u5728\u7b2cu\u53f7\u8282\u70b9\u65f6\u6743\u503c\u548c\u4e3aw\u7684\u65b9\u6848\u6570  \n\u4f46\u662f\u8fd9\u6837\u4f1aMLE\n\n\u91cd\u65b0\u8bbe\u8ba1\uff1a\n\nf[u][step]\u8868\u793a\u5728\u7b2cu\u53f7\u8282\u70b9\u662f\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u7b2cstep\u6b65\u65f6\u7684\u65b9\u6848\u6570  \n\u7531\u4e8e\u81f3\u591alogn\u5c42\uff0c\u6240\u4ee5step\u53ea\u8981\u5f0050\uff0c\u4e0d\u4f1aMLE\n\n\u7efc\u4e0a\uff0c\u6b64\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u662f$O(nlogn)$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\ntypedef long long ll;\nconst ll INF=1ll<<60;\nstruct tree\n{\n\tll fa,w;\n\tstd::vector<ll>son;//vector\u7528\u7684\u65b9\u4fbf\n}t[100001];\nll f[100001][51];\nll n,s,ans=0;\nvoid start()\n{\n\tscanf(\"%lld%lld\",&n,&s);\n\tll u,v;\n\tfor(ll i=1;i<=n;++i)scanf(\"%lld\",&t[i].w);\n\tfor(ll i=1;i<n;++i)\n\t{\n\t\tscanf(\"%lld%lld\",&u,&v);\n\t\tt[u].son.push_back(v);\n\t}\n}\nll dfs(ll u,ll step,ll sum)\n{\n\tif(f[u][step])return f[u][step];//\u8bb0\u5fc6\u5316\n\tsum+=t[u].w;\n\tif(sum>s)return 0;//\u8fb9\u754c\n\tif(sum==s)return f[u][step]=1;\n\tll res=0;\n\tfor(ll i=t[u].son.size()-1;i>=0;--i)\n\t{\n\t\tres+=dfs(t[u].son[i],step+1,sum);//\u7c7b\u4f3c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\t}\n\treturn f[u][step]=res;\n}\nint main()\n{\n\tstart();\n\tfor(ll i=1;i<=n;++i)\n\t\tans+=dfs(i,1,0);//\u4efb\u610f\u4e00\u4e2a\u70b9\u5f00\u59cb\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1544170455,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u76f4\u63a5\u66b4\u529b\u5373\u53ef\uff0c\u4e00\u904dDFS\u8ba1\u7b97\u6df1\u5ea6\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u70b9\u4e00\u904dDFS\u627e\u7b54\u6848\n\n\uff08\u6570\u636e\u662f\u771f\u7684\u6c34\uff09\n\n\u89c1\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint cnt,fst[100005],nxt[200005],to[200005];\nint n,S,a[100005],dep[100005],ans;\nvoid AddEdge(int u,int v)\n{\n\tto[++cnt]=v;\n\tnxt[cnt]=fst[u];\n\tfst[u]=cnt;\n}\nvoid Dfs1(int u,int faz)//\u8ba1\u7b97\u6df1\u5ea6\n{\n\tdep[u]=dep[faz]+1;\n\tfor(int i=fst[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(v==faz) continue;\n\t\tDfs1(v,u);\n\t}\n}\nvoid Dfs2(int u,int sum)//\u5411\u4e0b\u627e\u7b54\u6848\n{\n\tif(sum>S) return;\n\tif(sum==S) ans++;\n\tfor(int i=fst[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(dep[v]<=dep[u]) continue;\n\t\tDfs2(v,sum+a[v]);\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&S);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tAddEdge(y,x);\n\t\tAddEdge(x,y);\n\t}\n\tdep[0]=-1;//\u8fd9\u91cc\u8bbe\u4e0d\u8bbe\u90fd\u65e0\u6240\u8c13\n\tDfs1(1,0);\n\tfor(int i=1;i<=n;i++) Dfs2(i,a[i]);//n\u904dDFS\u5373\u53ef\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1541063887,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u8fc7\u9898\u540e\u770b\u4e86\u51e0\u7bc7\u9898\u89e3\uff0c\u53d1\u73b0\u5927\u5bb6\u90fd\u662f\u7528\u524d\u7f00\u548c\u505a\u7684\uff0c\u600e\u4e48\u6211\u5c31\u5148\u60f3\u5230\u540e\u7f00\u548c\u5462\uff1f\uff1f\uff08\u9003\u5566\u9003\u5566\u03b5=\u03b5=\u03b5=\u250f(\u309c\n\n\n\u8003\u8651\u4ece\u6bcf\u4e2a\u7ed3\u70b9\u5f00\u59cb\u5411\u4e0b\u8d70\uff0c\u6743\u503c\u548c\u4e3aS\u7684\u7b54\u6848\u6570\uff0c\u8fd9\u5c31\u662fDsu on tree \u7684\u601d\u8def\u4e86\u5427\u3002\n\n\u5728\u4e00\u6761\u91cd\u94fe\u4e0a\u7edf\u8ba1\u7b54\u6848\u65f6\uff0c\u5047\u8bbe\u5df2\u7ecf\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u6574\u9897\u5b50\u6811\u7684\u4fe1\u606f\uff0c\u90a3\u4e48\u8981\u5411\u5176\u7236\u8282\u70b9\u8f6c\u79fb\u65f6\uff0c\u5c31\u6240\u6709\u4fe1\u606f\u90fd\u52a0\u4e0a\u7236\u8282\u70b9\u7684\u6743\u503c\u3002\u849f\u84bb\u84bb\u6ca1\u60f3\u5230\u4ec0\u4e48\uff0c\u5c31\u9009\u4e86\u4f38\u5c55\u6811\u5566~~\n\n\u7136\u540e\u5c31\u662fdsu on tree \u7684\u66b4\u529b\u904d\u5386\u4e86\u3002\n\n\u6bcf\u6b21\u4fee\u6539\u4fe1\u606f  logn ,dsu on tree \u6807\u51c6\u590d\u6742\u5ea6n*logn\u603b\u590d\u6742\u5ea6 n*logn*logn  ~~(\u5b57\u4f53\u600e\u4e48\u6539\u6765\u7740\uff1f\uff1f~~\n\n~~569ms \u8ddf\u524d\u7f00\u548c\u6bd4\u4e0d\u4e86\u554a~~\n\n------------\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int N=1e5+5;\nint he[N],ver[N],nex[N],tot;\ninline void add(int&,int&);\nint sp[N][2],fa[N],val[N],sz[N],ct,laz[N],rt;\n#define lc sp[p][0]\n#define rc sp[p][1]\ninline int newnode(int,int);\ninline void up(int),down(int),rota(int,int&),splay(int,int&);\nvoid insert(int&,int,int);\nint find(int,int);\nvoid dfs(int);\nint siz[N],big[N];\nint n,S;\nint a[N];\nvoid dfs(int,int),Add(int,int);\nint ans;\nint main(){\n    scanf(\"%d%d\",&n,&S);\n    for(int i=1;i<=n;i++) scanf(\"%d\",a+i);\n    int u,v;tot=1;\n    for(int i=1;i<n;i++){\n        scanf(\"%d%d\",&u,&v);\n        add(u,v);\n    }\n    dfs(1);\n    dfs(1,1);\n    printf(\"%d\",ans);\n    return 0;\n}\nvoid dfs(int u,int kp){\n    int mx=0,son=0;\n    for(int i=he[u];i;i=nex[i]){\n        int&v=ver[i];\n        if(mx<siz[v]) mx=siz[v],son=v;\n    }\n    for(int i=he[u];i;i=nex[i]){\n        int&v=ver[i];\n        if(v==son) continue;\n        dfs(v,0);\n    }\n    if(son) dfs(son,1),big[son]=1;\n    val[rt]+=a[u];\n    laz[rt]+=a[u];\n    down(rt);\n    Add(u,0);\n    ans+=find(rt,S);\n    big[son]=0;\n    if(!kp) ct=0,rt=0;\n}\nvoid dfs(int u){\n    siz[u]=1;\n    for(int i=he[u];i;i=nex[i]){\n        int&v=ver[i];\n        dfs(v);\n        siz[u]+=siz[v];\n    }\n}\nvoid Add(int u,int d){\n    insert(rt,d+a[u],0);\n    for(int i=he[u];i;i=nex[i]){\n        int&v=ver[i];\n        if(big[v]) continue;\n        Add(v,d+a[u]);\n    }\n}\nint find(int p,int x){\n    while(p){\n        down(p);\n        if(val[p]==x) return sz[p];\n        if(x<val[p]) p=lc;\n        else p=rc;\n    }\n    return 0;\n}\nvoid insert(int&p,int x,int f){\n    if(!p){\n        p=newnode(x,f);\n        splay(p,rt);\n        return;\n    }\n    down(p);\n    if(val[p]==x){\n        sz[p]++;\n        return;\n    }\n    if(x<val[p]) insert(lc,x,p);\n    else insert(rc,x,p);\n}\nvoid splay(int p,int&tar){\n    int f,ff;\n    while(p!=tar){\n        f=fa[p],ff=fa[f];\n        if(f!=tar){\n            if((sp[f][1]==p)^(sp[ff][1]==f)) rota(p,tar);\n            else rota(f,tar);\n        }\n        rota(p,tar);\n    }\n}\nvoid rota(int p,int&tar){\n    int f=fa[p],ff=fa[f],l,r;\n    l=sp[f][1]==p,r=l^1;\n    if(f==tar) tar=p;\n    else sp[ff][sp[ff][1]==f]=p;\n    fa[p]=ff,fa[f]=p,fa[sp[p][r]]=f;\n    sp[f][l]=sp[p][r],sp[p][r]=f;\n}\nvoid down(int p){\n    if(!laz[p]) return;\n    val[lc]+=laz[p],val[rc]+=laz[p];\n    laz[lc]+=laz[p],laz[rc]+=laz[p];\n    laz[p]=0;\n}\nint newnode(int x,int f){\n    int&p=++ct;\n    val[p]=x,fa[p]=f;\n    lc=rc=laz[p]=0;\n    sz[p]=1;\n    return p;\n}\nvoid add(int&u,int&v){\n    ver[tot]=v;nex[tot]=he[u];he[u]=tot++;\n}\n\n```",
        "postTime": 1536566313,
        "uid": 65351,
        "name": "Lich_Ning",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u6742\u6280\u4e00\u822c\u7684\u6811\u94fe\u5256\u5206\u3002\u4e3b\u8981\u662f\u770b\u89c1\u8ba8\u8bba\u91cc\u6709\u4eba\u518d\u7528\u6811\u94fe\u5256\u5206\u5728\u505a\uff0c\u90a3\u80af\u5b9a\u6709\u5176\u4ed6\u7684\u4eba\u5728\u7528\u8fd9\u9053\u9898\u7ec3\u4e60\uff0c\u6240\u4ee5\u5199\u4e86\u8fd9\u7bc7\u6811\u94fe\u5256\u5206\u7684\u9898\u89e3\u3002\u8be6\u7ec6\u5728\u4ee3\u7801\u4e2d\u89e3\u91ca\n```\n#include<cstdio>\n#include<algorithm>\nusing std::lower_bound;\nconst int N=100010;\nclass L{\n\tpublic:\n\t\tint to;\n\t\tint next;\n};\n//\u5b58\u56fe \nL l[N];\nint head[N];\nint lcount;\nvoid add(int from,int to){\n\tl[++lcount].to=to;\n\tl[lcount].next=head[from];\n\thead[from]=lcount;\n}\nint f[N];\nint son[N];\nint top[N];\nint dep[N];\nint sum[N];\n/*\n\u4f7f\u7528\u524d\u7f00\u548c\u7ef4\u62a4\u6811\u94fe\n\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u524d\u7f00\u548c\u4e0b\u6807\u662f\u6307\u7ecf\u8fc7dfs_2\u5904\u7406\u540e\u6bcf\u4e2a\u70b9\u7684\u6807\u53f7\n\u800c\u4e0d\u662f\u539f\u672c\u7684\u70b9\u7684\u6807\u53f7 \n*/\nint num[N]; \nint size[N];\nint maxnum;\nint a[N];\nint n,s;\nvoid dfs_1(int now=1,int dep_=0,int f_=0\n/*\u5c061\u53f7\u70b9\u7684\u7236\u4eb2\u5b9a\u4e3a0\uff0c\u5728\u5411\u4e0a\u8df3\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5224\u65ad\u6709\u6ca1\u6709\u8df3\u51fa\u6574\u68f5\u6811*/){\n\tdep[now]=dep_;\n\tsize[now]++;\n\tf[now]=f_;\n\tfor(int i=head[now];i;i=l[i].next){\n\t\tdfs_1(l[i].to,dep[now]+1,now);\n\t\tsize[now]+=size[l[i].to];\n\t\tif(size[son[now]]<size[l[i].to]){\n\t\t\tson[now]=l[i].to;\n\t\t}\n\t}\n}\nvoid dfs_2(int now=1,int top_=1){\n\ttop[now]=top_;\n\tnum[now]=++maxnum;\n\tsum[num[now]]=sum[num[now]-1]+a[now];//\u7edf\u8ba1\u524d\u7f00\u548c \n\tif(son[now]){\n\t\tdfs_2(son[now],top[now]);\n\t\tfor(int i=head[now];i;i=l[i].next){\n\t\t\tif(l[i].to!=son[now]){\n\t\t\t\tdfs_2(l[i].to,l[i].to);\n\t\t\t}\n\t\t}\n\t}\n}\nbool is_ok(int x/*\u8868\u793a\u5f53\u524d\u70b9*/){ \n\tint need=s;\n/* \nneed\u8868\u793a\u5f53\u524d\u70b9\u9700\u8981\u4e0e\u53e6\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u4e3aneed\uff0c\u624d\u53ef\u4ee5\u8d21\u732e\u7b54\u6848 \n*/ \n\twhile(x){\n\t\tif(sum[num[x]]-sum[num[top[x]]-1]<=need){\n\t\t\tneed-=sum[num[x]]-sum[num[top[x]]-1];//\u8df3\u8fc7\u4e00\u6bb5\u8ddd\u79bb\u540e\u66f4\u65b0need \n\t\t\tx=f[top[x]];\n\t\t}else{\n/*\n\u5982\u679cx\u4e0etop\u4e4b\u95f4\u7684\u8ddd\u79bb\u5927\u4e8eneed\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e4b\u63a5\u5728\u8fd9\u6bb5\u4e4b\u95f4\u627e\u7b54\u6848\u4e86 \n*/ \n\t\t\treturn *lower_bound(sum+num[top[x]],sum+num[x]+1,sum[num[x]]-need)==sum[num[x]]-need;\n/*\n\u5229\u7528lower_bound\u67e5\u627e\uff0c\u82e5\u67e5\u627e\u503c\u4e0e\u9700\u6c42\u76f8\u540c\u5c31\u8bf4\u660e\u5b58\u5728\u7b54\u6848 \n*/ \n\t\t}\n\t}\n\treturn !need;//\u5982\u679c\u8df3\u51fa\u4e86\u8fd9\u68f5\u6811\uff0c\u90a3\u4e48\u5f53\u4e14\u4ec5\u5f53need\u4e3a0\u662f\u53ef\u4ee5\u8d21\u732e\u7b54\u6848 \n}\nint main(){\n\tscanf(\"%d%d\",&n,&s);\n\tint p1,p2;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",a+i);\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%d%d\",&p1,&p2);\n\t\tadd(p1,p2);\n\t}\n\tdfs_1();\n\tdfs_2();\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tans+=is_ok(i);//\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u70b9\u662f\u5426\u53ef\u4ee5\u8d21\u732e\u7b54\u6848\u5373\u53ef \n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1536375866,
        "uid": 81705,
        "name": "\u5bc6\u671f\u671b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "P3252 \u3010[JLOI2012]\u6811\u3011\n\n\u9898\u76ee\u63cf\u8ff0\n\n\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u503cS\u548c\u4e00\u68f5\u6811\u3002\u5728\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u95ee\u6709\u591a\u5c11\u6761\u8def\u5f84\u7684\u8282\u70b9\u603b\u548c\u8fbe\u5230S\u3002\u8def\u5f84\u4e2d\u8282\u70b9\u7684\u6df1\u5ea6\u5fc5\u987b\u662f\u5347\u5e8f\u7684\u3002\u5047\u8bbe\u8282\u70b91\u662f\u6839\u8282\u70b9\uff0c\u6839\u7684\u6df1\u5ea6\u662f0\uff0c\u5b83\u7684\u513f\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a1\u3002\u8def\u5f84\u4e0d\u5fc5\u4e00\u5b9a\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c\u662f\u4e24\u4e2a\u6574\u6570N\u548cS\uff0c\u5176\u4e2dN\u662f\u6811\u7684\u8282\u70b9\u6570\u3002 \u7b2c\u4e8c\u884c\u662fN\u4e2a\u6b63\u6574\u6570\uff0c\u7b2ci\u4e2a\u6574\u6570\u8868\u793a\u8282\u70b9i\u7684\u6b63\u6574\u6570\u3002 \u63a5\u4e0b\u6765\u7684N-1\u884c\u6bcf\u884c\u662f2\u4e2a\u6574\u6570x\u548cy\uff0c\u8868\u793ay\u662fx\u7684\u513f\u5b50\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\u8f93\u51fa\u8def\u5f84\u8282\u70b9\u603b\u548c\u4e3aS\u7684\u8def\u5f84\u6570\u91cf\u3002\n\n\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\n\u8f93\u5165\u6837\u4f8b#1\uff1a \u590d\u5236\n3 3\n1 2 3\n1 2\n1 3\n\u8f93\u51fa\u6837\u4f8b#1\uff1a \u590d\u5236\n2\n\u8bf4\u660e\n\n\u5bf9\u4e8e100%\u6570\u636e\uff0cN<=100000\uff0c\u6240\u6709\u6743\u503c\u4ee5\u53caS\u90fd\u4e0d\u8d85\u8fc71000\u3002\n\n\u601d\u8def\uff1a\u6570\u636e\u592a\u6c34\uff0c\u76f4\u63a5\u7206\u641c\uff0c\u4e0a\u5927\u6cd5\u5e08\uff08dfs\uff09\uff1b\n\n\u4ee3\u7801\uff1a\uff08\u9644\u6709\u8be6\u7ec6\u89e3\u91ca\uff09\n\n```cpp\n#include <iostream> \n#define maxN 100010\nusing namespace std;\nint N,M;\nint x[maxN];\nstruct edge {\n\tint son;\n\tint next;\n} E[maxN];\nint first[maxN];\nint fa[maxN];  //\u5b58father,fa[i]=i\u5219\u4e3aroot\uff1b \nint root;  //\u6839\u8282\u70b9\uff1b \nint ans;\nint sum[maxN];  //\u5b58\u4eceroot\u5230\u6b64\u70b9\u548c\uff1b \nvoid dfs(int s);\nint main()  {\n\tcin>>N>>M;\n\tfor(int i=1;i<=N;i++)  {\n\t\tcin>>x[i];\n\t\tfa[i]=i;  //\u521d\u59cb\u5316\uff1b \n\t}\n\tint a,b;  //b\u4e3aa\u7684son\uff1b \n\tfor(int i=1;i<N;i++)  {  //N-1\u6761\u8fb9\uff1b \n\t\tcin>>a>>b;\n\t\tfa[b]=a;  //\u8bb0\u5f55father\uff1b \n\t\tE[i].son=b;//\u7531father\u6307\u5411son\uff1b\n\t\tE[i].next=first[a];\n\t\tfirst[a]=i;\n\t}\n\t//find root;\n\tfor(int i=1;i<=N;i++)  {\n\t\tif(fa[i]==i)  {  //fa[i]=i\u5219\u4e3aroot\uff1b \n\t\t    root=i;\n\t\t\tbreak; \n\t\t}\n\t}\n\tdfs(root);\n\tcout<<ans;\n\treturn 0;\n}\nvoid dfs(int s)  {\n\tsum[s]=sum[fa[s]]+x[s];  //\u7c7b\u4f3cdp\uff1b\n\tif(sum[s]==M)  {  //\u6ee1\u8db3\u9898\u610f\uff1b\n\t  ans++; \n\t} \n\telse if(sum[s]>M)  {  //\u8d85\u8fc7S\uff0c\u5219\u60f3\u641c\uff1b\n\t    int summ=0;\n\t\tfor(int i=s;fa[i]!=i;i=fa[i])  {\n\t\t\tsumm+=x[i];\n\t\t\tif(summ==M)  {  //\u6ee1\u8db3\u9898\u610f\uff1b\n\t\t\t    ans++;\n\t\t\t}\n\t\t\telse if(summ>M)  {  //\u8d85\u8fc7M\uff0c\u4e0d\u5b58\u5728\uff1b\n\t\t\t    break; \n\t\t\t}\n\t\t} \n\t}\n\tfor(int i=first[s];i;i=E[i].next)  {\n\t    dfs(E[i].son);\n\t}\n\treturn;\n}\n```",
        "postTime": 1535418800,
        "uid": 58374,
        "name": "\u901d\u661fDS",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6570\u636e\u5df2\u7ecf\u662f\u975e\u5e38\u7684\u6c34\u4e86\uff0c\u76f4\u63a5dfs\u66b4\u529b\u679a\u4e3e\u5c31\u8fc7\u4e86\u3002\n\n\u4f46\u662f\u770b\u6570\u636en\u662f10w\uff0c\u5982\u679c\u5f3a\u5ea6\u5927\u7684\u8bddn\u65b9\u662f\u8fc7\u4e0d\u4e86\u7684\u3002\n\n\u697c\u4e0a\u5df2\u7ecf\u8bf4\u8fc7\u4e86\u500d\u589e\u6cd5\u4e86\uff0c\u5176\u5b9e\u500d\u589e\u5c31\u662f\u6811\u4e0a\u7684\u4e8c\u5206\uff0c\u53ea\u4e0d\u8fc7\u6362\u4e86\u79cd\u505a\u6cd5\u7f62\u4e86\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u7528\u7ebf\u6027\u8868\u4e2d\u7684\u4e8c\u5206\u601d\u60f3\u505a\u8fd9\u9053\u9898\uff0c\u697c\u4e0a\u4e5f\u8bf4\u8fc7\u4e86\uff0c\u7528lower_bound\n\u6709\u5173\u4e8elower_bound\u53ef\u4ee5\u770b\u6211\u7684\u53e6\u4e00\u4e2a\u9898\u89e3\uff0c\u91cc\u9762\u6709\u8be6\u7ec6\u7684\u89e3\u91ca\uff0c\u5c31\u662f\u7528\u4e8c\u5206\u6cd5\u67e5\u627e\u6570\u7ec4\u4e2d\u4e00\u5b9a\u503c\u7684\u5143\u7d20\u7684\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u6211\u4eec\u600e\u4e48\u5c06\u6811\u94fe\u8f6c\u6362\u4e3a\u7ebf\u6027\u8868\u5462\uff1f\u5c31\u662f\u7528\u6808\u5566\uff0c\u6211\u4eec\u624b\u52a8\u6a21\u62df\u4e00\u4e2a\u6808\uff0c\u6808\u4e2d\u8bb0\u5f55\u7684\u5c31\u662f\u524d\u7f00\u548c\uff0c\u6bcf\u5230\u8fbe\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u6211\u4eec\u5c31\u5c06\u5176\u52a0\u5165\u6808\u4e2d\uff0c\u6ce8\u610f\u9898\u4e2d\u8bf4\u8fc7\u5143\u7d20\u90fd\u662f\u6b63\u6574\u6570\uff0c\u90a3\u4e48\u6570\u7ec4\u6709\u5e8f\u4e14\u4e3a\u5347\u5e8f\uff0c\u6ee1\u8db3\u4e8c\u5206\u6027\u8d28\u3002\u6211\u4eec\u4e8c\u5206\u503c\u4e3a\uff08\u5f53\u524d\u524d\u7f00\u548c\u51cf\u53bbs\uff09\u7684\u4e2a\u6570\u3002\u5176\u5b9e\u6700\u591a\u662f\u4e00\u4e2a\u3002\u5982\u679c\u6709\u7684\u8bddans++\uff0c\u6ca1\u6709\u5c31\u5f00\u59cbdfs\u5b50\u8282\u70b9\uff0c\u7136\u540e\u7ed3\u675fdfs\u7684\u65f6\u5019top--\uff0c\u9000\u6808\u3002\u590d\u6742\u5ea6nlogn\n\u7ec6\u8282\u5728\u4ee3\u7801\u4e2d\u89e3\u91ca\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint tot,n,s,ans;\nint value[100050],g[100050],stack[100050],top,ind[100050];\t\t//value\u662f\u7ed3\u70b9\u503c\uff0cg\u662f\u90bb\u63a5\u8868\u8868\u5934\uff0cstack\u4e3a\u6808\uff0cind\u662f\u5165\u5ea6 \nstruct line\n{\n\tint to,next;\n}edge[100050];\nvoid add1(int a,int b)\n{\n\tedge[++tot].to=b;\n\tedge[tot].next=g[a];\n\tg[a]=tot;\n}\nvoid dfs(int u)\n{\n\tstack[++top]=stack[top-1]+value[u];\t\t\t\t//\u5c06\u5f53\u524d\u8282\u70b9\u52a0\u5165\u6808\u4e2d\u3002\u5e76\u66f4\u65b0\u524d\u7f00\u548c \n\tint k=upper_bound(stack,stack+1+top,stack[top]-s)-lower_bound(stack,stack+1+top,stack[top]-s);\t//\u627e\u6570\u7ec4\u4e2d\u503c\u4e3astack[top]-s\u7684\u4e2a\u6570\uff0cstack[top]\u5373\u4e3a\u5f53\u524d\u524d\u7f00\u548c\uff0c\u8fd9\u91cc\u6ce8\u610f\u7b2c\u4e00\u4e2a\u53c2\u6570stack\u662f\u6ca1\u6709\u52a01\u7684\uff0c\u56e0\u4e3a\u6ce8\u610f\u524d\u7f00\u548c\u7684\u6027\u8d28\uff0csum[i,j]=pre[j]-pre[i-1]\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u627e\u5230\u7684\u7ed3\u70b9\u5b9e\u9645\u4e0a\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u7684\u524d\u4e00\u4e2a\uff0c\u5982\u679c\u6839\u8282\u70b9\u4e5f\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u6839\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u5c31\u662f0\uff0c\u6240\u4ee5\u6211\u4eec\u4ecestack[0]\u5f00\u59cb\u627e\u8d77\uff0c\u800c\u975e1. \n\tif(k)ans++;\t\t//\u5982\u679c\u6709\uff0cans++\t\t\n\tint temp=g[u];\n\twhile(temp)\t\t//\u627e\u5b50\u8282\u70b9 \n\t{\n\t\tdfs(edge[temp].to);\n\t\ttemp=edge[temp].next;\n\t}\n\ttop--;\t\t\t//\u9000\u6808 \n}\nint main()\n{\n\tcin>>n>>s;\t\t\t\t\t\t\t//\u521d\u59cb\u5316 \n\tfor(int i=1;i<=n;i++)cin>>value[i];\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tint x=0,y=0;\n\t\tcin>>x>>y;\n\t\tadd1(x,y);\n\t\tind[y]++;\n\t}\n\tint source=0;\t\t\t//\u56e0\u4e3a\u6211\u4eec\u4e0d\u77e5\u9053\u54ea\u4e2a\u662f\u6839\u8282\u70b9\uff0c\u627e\u5230\u5165\u5ea6\u4e3a0\u7684\u70b9\u8bbe\u4e3a\u6839\u8282\u70b9\u3002\n\tfor(int i=1;i<=n;i++)\n\t\tif(ind[i]==0)\n\t\t{\n\t\t\tsource=i;\n\t\t\tbreak;\n\t\t}\n\tdfs(source);\t\t\t//\u5bf9\u6839\u8282\u70b9\u8fdb\u884cdfs\uff0c\u4e00\u904d\u5373\u53ef\u3002 \n\tcout<<ans;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1532071781,
        "uid": 54825,
        "name": "ysj1173886760",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u6b64\u9898\u53ef\u4ee5\u8f6c\u6362\u4e00\u4e0b\u601d\u8def\uff0c\u4ece\u6bcf\u4e2a\u70b9\u5411\u4e0a\u8d70\uff0c\u4f46\u4f1a\u4e0d\u4f1a\u6709\u95ee\u9898\u5462\uff1f\n\n\u9898\u76ee\u4e2d\u8bf4\u5fc5\u987b\u4ece\u4e0a\u5f80\u4e0b\u8d70\uff0c\u4f46\u6ce8\u610f\u5230\u5982\u679c\u5b58\u5728\u4e00\u6761\u8def\u5f84a-b(\u4ece\u4e0a\u5f80\u4e0b\uff09\uff0c\u5c31\u4f1a\u5728\u679a\u4e3e\u5230b\u65f6\u627e\u5230\u8fd9\u6761\u8def\uff0c\u6240\u4ee5\u6ca1\u95ee\u9898\u7684\u3002\n\n\u8fd9\u6837\u8fd9\u9053\u9898\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u4e0d\u8981dfs\uff0c\u6bcf\u4e2a\u70b9\u4e0d\u65ad\u5411\u7236\u4eb2\u8d70\uff0c\u7edf\u8ba1\u70b9\u6743\u548c\uff0c\u5982\u679c\u6b63\u597d\u7b49\u4e8es\uff0c\u5c31\u7d2f\u52a0\uff0c\u56e0\u4e3a\u70b9\u6743>0\uff0c\u6240\u4ee5\u52a0\u5230>s\uff0c\u76f4\u63a5\u8df3\u51fa\uff0c\u5982\u679c\u8d70\u5230\u6839\u90fd<s\uff0c\u90a3\u4e48\u8fd9\u6761\u521a\u8d70\u8fc7\u7684\u8def\u4e0a\u7684\u6240\u6709\u70b9\u90fd\u4e0d\u4f1a\u5b58\u5728\u6709\u6548\u8def\u5f84\uff0c\u7528\u4e00\u4e2abool\u6570\u7ec4\u6807\u8bb0\u4e00\u4e0b\uff0c\u53ef\u4ee5\u5feb\u4e00\u70b9\u3002\n\n\u9644\u4e0ac++AC\u7a0b\u5e8f\uff08\u5e94\u8be5\u4e0d\u662f\u6700\u597d\u505a\u6cd5\uff09\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,s,ans=0,w[100010],fa[100010];\nbool pd[100000];\nvoid dfs(int x)//\u5ffd\u7565\u8fd9\u4e2a\u51fd\u6570\u540d\uff0c\u5e94\u8be5\u4e0d\u7b97dfs\n{\n    int t=0,y=x;\n    while (x!=0)//\u56e0\u4e3a\u6839\u4e5f\u6709\u6743\u503c\uff0c\u6240\u4ee5\uff01=0\n    {\n        t+=w[x];//\u7d2f\u52a0\n        x=fa[x];//\u4e0d\u505c\u5411\u4e0a\u8d70\n        if (t==s) {\n        ans++;return;}//\u627e\u5230\uff0c\u56e0\u4e3a\u70b9\u6743>0\uff0c\u6240\u4ee5\u6bcf\u70b9\u6700\u591a\u53ea\u67091\u6761\n        if (t>s) return;//\u526a\u679d\n    }\n    if (t<s) while (y!=0) {\n    pd[y]=true;y=fa[y];}//\u6807\u8bb0\u90a3\u4e9b\u4e0d\u53ef\u80fd\u7684\u70b9\n}\nint main()\n{\n    memset(fa,0,sizeof(fa));\n    memset(pd,false,sizeof(pd));\n    scanf(\"%d %d\",&n,&s);\n    for (int i=1;i<=n;i++) scanf(\"%d\",&w[i]);\n    for (int i=1;i<n;i++)\n    {\n        int x,y;\n        scanf(\"%d %d\",&x,&y);\n        fa[y]=x;\n    }\n    for (int i=n;i>=1;i--)\n        if (pd[i]==false)dfs(i);//\u5982\u679ci\u70b9\u6709\u53ef\u80fd\u5c31\u679a\u4e3e\u4e00\u6b21\n    cout<<ans<<endl;\n}\n```",
        "postTime": 1516597000,
        "uid": 5912,
        "name": "laduiw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    },
    {
        "content": "\u4ec0\u4e48\u72b6\u538bDP\u3002\u8fd9\u4e0d\u5c31\u662f\u7b80\u5355\u7684\u6a21\uff08\u5e7f\uff09\u62df\uff08\u641c\uff09\u3002\u592a\u6c34\u4e86\\*0xFFFFFFFFFF\u3002\n\ntnode\u662f\u4e00\u4e2a\u7528\u6765\u4fdd\u5b58\u5f53\u524d\u8282\u70b9\u7684\u7ed3\u6784\u4f53\u3002\u56e0\u4e3a\u8282\u70b9\u7684\u503c>0\uff0c\u6240\u4ee5\u5728\u5224\u65ad\u548c\u65f6\u5f53\u76ee\u524d\u548c\u5927\u4e8eS\u5c31\u76f4\u63a5\u526a\u6389\u3002\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u8bd5\u8bd5DFS\u3002\n\n```cpp\n[language = cpp]\n<code>\n#include<cstdio>\n#include<vector>\n#include<queue>\nusing namespace std;\nint n, s;\nint total = 0;\nstruct tnode{\n    int value;\n    int father;\n    vector<int> child;\n    tnode(){\n        this->child.clear();\n        this->value = 0;\n        this->father = -1;\n    }\n}a[100000];\nbool isOK(const tnode &n){\n    tnode p = n;\n    int nsum = n.value;\n    while(nsum < s){\n        p = a[p.father];\n        nsum += p.value;\n        if(p.father == -1)break;\n    }\n    if(nsum == s)return true;\n    return false;\n}\nvoid bfs(){\n    queue<tnode> Q;\n    Q.push(a[0]);\n    while(!Q.empty()){\n        tnode head = Q.front();\n        if(isOK(head))total++;\n        if(!head.child.empty()){\n            for(unsigned int i = 0;i < head.child.size();i++){\n                Q.push(a[head.child[i]]);\n            }\n        }\n        Q.pop();\n    }\n}\nint main(){\n    scanf(\"%d%d\", &n, &s);\n    for(int i = 0;i < n;i++)scanf(\"%d\", &a[i].value);\n    for(int i = 0;i < n - 1;i++){\n        int x, y;\n        scanf(\"%d%d\", &x, &y);\n        a[x-1].child.push_back(y-1);\n        a[y-1].father = x - 1;\n    }\n    bfs();\n    printf(\"%d\\n\", total);\n    return 0;\n}\n</code>\n[end]\n```",
        "postTime": 1486376497,
        "uid": 26282,
        "name": "__asm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3252 \u3010[JLOI2012]\u6811\u3011"
    }
]