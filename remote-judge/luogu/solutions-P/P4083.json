[
    {
        "content": "### \u770b\u5230\u5176\u5b83\u9898\u89e3\u90fd\u4e0d\u592a\u5b8c\u5584\uff0c\u90fd\u53ef\u4ee5\u88ab\u5361\u6210$O(n^2)$\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e25\u683c\u7684$O(nlogn)$\u7b97\u6cd5\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u628a$Bessie$\u505a\u7684\u9985\u997c\u6309\u7167$Elsie$\u7684\u770b\u6cd5\u6392\u5e8f\uff08\u56e0\u4e3a$Bessie$\u8981\u9001\u4ec0\u4e48\u9985\u997c\u53d6\u51b3\u4e8e$Elsie$\u5bf9\u86cb\u7cd5\u7684\u8bc4\u4ef7\uff09\uff0c$Elsie$\u7684\u9985\u997c\u540c\u7406\u3002\n\n\u63a5\u4e0b\u6765\u8981\u7528\u5230\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u601d\u60f3\uff1a\u5012\u5e8f\u5904\u7406\uff01\u6211\u4eec\u628a\u539f\u9898\u8f6c\u5316\u6210\u4ece\u6bcf\u4e00\u4e2a\u4ef7\u503c\u4e3a$0$\u7684\u9985\u997c\uff08\u5728\u53e6\u4e00\u4e2a\u4eba\u7684\u770b\u6cd5\u4e4b\u4e0b\uff09\u8bbe\u4e3a\u8d77\u70b9\uff0c\u9001\u9985\u997c\u8868\u793a\u4ece\u4e00\u4e2a\u9985\u997c\u8f6c\u5316\u5230\u53e6\u4e00\u4e2a\u9985\u997c\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u53ea\u8981\u628a\u6bcf\u4e2a\u9985\u997c\u5411\u63a5\u4e0b\u6765\u53ef\u4ee5\u9001\u7684\u9985\u997c\uff08\u6ce8\u610f\uff01\u7531\u4e8e\u6211\u4eec\u662f\u53cd\u5411\u8003\u8651\uff0c\u4e8e\u662f\u53ef\u9001\u4ef7\u503c\u533a\u95f4\u4e3a$[x-d,x]$\uff0c\u5176\u4e2d$x$\u8868\u793a\u5f53\u524d\u9985\u997c\u5728\u522b\u4eba\u770b\u6765\u7684\u4ef7\u503c\uff09\u8fde\u8fb9\uff0c\u5c31\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u6700\u77ed\u8def\u95ee\u9898\uff01\n\n\u90a3\u4e48\u672c\u9898\u5c31\u505a\u5b8c\u4e86\u2026\u2026\u5417\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u4e2a\u70b9\uff08\u9985\u997c\uff09\u53ef\u80fd\u4f1a\u5411\u5f88\u591a\u70b9\u8fde\u8fb9\uff0c\u6700\u591a$n$\u4e2a\uff0c\u8fd9\u5bfc\u81f4\u7a7a\u95f4\u590d\u6742\u5ea6\u53ef\u80fd\u4f1a\u8fbe\u5230$O(n^2)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u540c\u6837\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u5df2\u7ecf\u628a\u9985\u997c\u6392\u5e8f\uff0c\u800c\u53ef\u9001\u4ef7\u503c\u4e5f\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u6240\u4ee5\u8fde\u8fb9\u80af\u5b9a\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\uff0c\u627e\u5230\u533a\u95f4\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u5355\u70b9\u5411\u533a\u95f4\u8fde\u8fb9\u5f88\u719f\u6089\uff0c\u8fd9\u4e0d\u5c31\u662f\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u5f31\u5316\u7248\u5417\uff1f\n\n\u8fd9\u91cc\u518d\u8bb2\u4e00\u4e0b\u5177\u4f53\u8fc7\u7a0b\uff1a\u9996\u5148\u5efa\u4e00\u68f5$2*n$\u7684\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7684\u7ed3\u70b9\uff0c\u5411\u5b83\u7684\u4e24\u4e2a\u5b50\u7ed3\u70b9\u8fde\u4e24\u6761$0$\u8fb9\u3002\u63a5\u4e0b\u6765\uff0c\u5018\u82e5\u6709\u7ed3\u70b9$x$\u5411\u533a\u95f4$[l,r]$\u8fde\u8fb9\uff0c\u5c31\u628a$[x,x]$\u8fd9\u4e2a\u7ed3\u70b9\uff0c\u5411\u7ebf\u6bb5\u6811\u7684\u4fee\u6539\u64cd\u4f5c\u90a3\u6837\uff0c\u8fde\u8fb9\u5373\u53ef\u3002\uff08\u5177\u4f53\u7ec6\u8282\u53c2\u89c1\u4ee3\u7801\uff09\u3002\u8fd9\u79cd\u7b97\u6cd5\u5373\u4f7f\u662f\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709\u5b66\u771f\u6b63\u7684\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\uff08\u533a\u95f4\u8fde\u533a\u95f4\uff09\u7684\u540c\u5b66\uff08\u6bd4\u5982\u6211\uff09\u4e5f\u5f88\u597d\u7406\u89e3\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u6211\u4eec\u53d1\u73b0\u6309\u7167\u4e0a\u8ff0\u60c5\u51b5\uff0c\u8fb9\u6743\u53ea\u6709$0$\u548c$1$\uff0c\u4e8e\u662f\uff0c\u8dd1\u6700\u77ed\u8def\u65f6\uff0c\u6211\u4eec\u5c31\u4e0d\u5fc5\u7528\u4f18\u5148\u961f\u5217\uff0c\u7528\u53cc\u7aef\u961f\u5217\u5373\u53ef\u3002\n\nP.S. \u6700\u540e\u6211\u770b\u4e86\u4e00\u4e0b\u6700\u4f18\u89e3\uff0c\u53d1\u73b0\u6709\u4e00\u4e2a\u5e76\u67e5\u96c6\u4f18\u5316\uff0c\u800c\u4e14\u9664\u53bb\u6392\u5e8f\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fbe\u5230$O(n)$\uff0c\u4f46\u662f\u6211\u65e0\u6cd5\u8bc1\u660e\u5b83\u7684\u6b63\u786e\u6027\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u4e0d\u7ed9\u51fa\u4e86\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u53bb\u770b\u770b\u3002\n\n#### \u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<utility>\n#include<cstring>\n#include<deque>\n#include<algorithm>\nusing namespace std;\n#define res register int\n#define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++) //fread\u4f18\u5316\nchar buf[1<<21],*p1=buf,*p2=buf;\ntemplate<typename T>\ninline void read(T &x) //\u5feb\u8bfb\n{\n    static char ch;bool f=1;\n    for(x=0,ch=getchar();!isdigit(ch);ch=getchar()) if(ch=='-') f=0;\n    for(;isdigit(ch);x=(x<<1)+(x<<3)+ch-48,ch=getchar());x=f?x:-x;\n}\ntemplate<typename T> //\u5feb\u8f93\ninline void print(T x,char ch) {\n\tif(!x) {putchar(48);if(ch) putchar(ch);return;}\n\tif(x<0) putchar('-'),x=-x;\n\tstatic int Stack[sizeof(T)*3],top=-1;\n\tfor(;x;Stack[++top]=x%10,x/=10);\n\tfor(;~top;putchar(Stack[top--]+48));\n\tif(ch) putchar(ch);\n}\ntemplate<typename T>\ninline T max(T x,T y) {return x>y?x:y;}\ntemplate<typename T>\ninline T min(T x,T y) {return x<y?x:y;}\ntemplate<typename T>\ninline void chkmax(T &x,T y) {x=x>y?x:y;}\ntemplate<typename T>\ninline void chkmin(T &x,T y) {x=x<y?x:y;}\nstruct node{\n\tint x,y,id;\n} a[200001];\nint b[200001],ver[1600001],nxt[1600001],head[1600001],edge[1600001],ans,n,m,d[800001],tot[100001];\ninline void add(int x,int y,int z) {ver[++ans]=y,edge[ans]=z,nxt[ans]=head[x],head[x]=ans;}\ninline bool cmp1(node x,node y) {return x.x<y.x;}\ninline bool cmp2(node x,node y) {return x.y<y.y;}\nvoid build(int q,int l,int r) {\n\tif(l==r) {b[l]=q;return;}\n\tint mid=l+r>>1;\n\tbuild(q<<1,l,mid),build(q<<1|1,mid+1,r),add(q,q<<1,0),add(q,q<<1|1,0); //\u5411\u513f\u5b50\u7ed3\u70b9\u8fde\u8fb9\n} \nvoid change(int q,int l1,int r1,int l,int r,int k) { //\u5355\u70b9\u5411\u533a\u95f4\u8fde\u8fb9\n\tif(r<l1||r1<l) return;\n\tif(l<=l1&&r1<=r) {add(k,q,1);return;}\n\tint mid=l1+r1>>1;\n\tchange(q<<1,l1,mid,l,r,k),change(q<<1|1,mid+1,r1,l,r,k);\n}\ninline int erfen1(int x) {\n\tint l=n+1,r=n<<1,tot;\n\tif(a[r].x<x) return -1;\n\twhile(l<=r) {\n\t\tint mid=l+r>>1;\n\t\tif(a[mid].x>=x) tot=mid,r=mid-1;else l=mid+1;\n\t}\n\treturn tot;\n}\ninline int erfen2(int x) {\n\tint l=n+1,r=n<<1,tot;\n\tif(a[l].x>x) return -1;\n\twhile(l<=r) {\n\t\tint mid=l+r>>1;\n\t\tif(a[mid].x<=x) tot=mid,l=mid+1;else r=mid-1;\n\t}\n\treturn tot;\n}\ninline int erfen3(int x) {\n\tint l=1,r=n,tot;\n\tif(a[r].y<x) return -1;\n\twhile(l<=r) {\n\t\tint mid=l+r>>1;\n\t\tif(a[mid].y>=x) tot=mid,r=mid-1;else l=mid+1;\n\t}\n\treturn tot;\n}\ninline int erfen4(int x) {\n\tint l=1,r=n,tot;\n\tif(a[l].y>x) return -1;\n\twhile(l<=r) {\n\t\tint mid=l+r>>1;\n\t\tif(a[mid].y<=x) tot=mid,l=mid+1;else r=mid-1;\n\t}\n\treturn tot;\n} //\u56db\u4e2a\u4e8c\u5206\u90fd\u5f97\u6ce8\u610f\u8303\u56f4\uff0c\u4e0d\u8981\u641e\u9519\u4e86\u3002\ndeque<int> q;\ninline void dijkstra() { //\u53cc\u7aef\u961f\u5217\u4f18\u5316dijkstra\n\tfor(res i=1;i<=n&&!a[i].y;++i) q.push_back(b[i]),d[b[i]]=1;\n\tfor(res i=n+1;i<=n<<1&&!a[i].x;++i) q.push_back(b[i]),d[b[i]]=1; //\u8fd9\u91cc\u8981\u7279\u522b\u6ce8\u610f\uff01\u8d77\u70b9\u5fc5\u987b\u662f\u5728\u522b\u4eba\u770b\u6765\u4ef7\u503c\u4e3a0\u7684\u9985\u997c\u3002\n\twhile(!q.empty()) {\n\t\tint x=q.front();q.pop_front();\n\t\tfor(res i=head[x];i;i=nxt[i])\n\t\t  if(d[ver[i]]>d[x]+edge[i]) d[ver[i]]=d[x]+edge[i],edge[i]?q.push_back(ver[i]):q.push_front(ver[i]);\n\t}\n\tfor(res i=1;i<=n;++i) tot[a[i].id]=d[b[i]];\n}\nint main()\n{\n    read(n),read(m);\n    for(res i=1;i<=n<<1;++i) read(a[i].x),read(a[i].y),a[i].id=i;\n    sort(a+1,a+1+n,cmp2),sort(a+1+n,a+1+(n<<1),cmp1),build(1,1,n<<1),memset(d,0x3f,sizeof(d));\n    for(res i=1;i<=n;++i) {\n    \tint L=erfen1(a[i].x-m),R=erfen2(a[i].x);\n    \tif(L<0||R<0) continue;\n    \tchange(1,1,n<<1,L,R,b[i]);\n\t}\n\tfor(res i=n+1;i<=n<<1;++i) {\n\t\tint L=erfen3(a[i].y-m),R=erfen4(a[i].y);\n\t\tif(L<0||R<0) continue;\n\t\tchange(1,1,n<<1,L,R,b[i]);\n\t}\n\tdijkstra();\n\tfor(res i=1;i<=n;++i) if(tot[i]>1e9) puts(\"-1\");else printf(\"%d\\n\",tot[i]);\n    return 0;\n}\n```",
        "postTime": 1560613397,
        "uid": 43697,
        "name": "chenyewei_1234",
        "ccfLevel": 7,
        "title": "P4083 [USACO17DEC]A Pie for a Pie"
    },
    {
        "content": "1.\u586b\u697c\u4e0a\u5de8\u4f6c\u7684\u5751\uff0c\u8fd9\u662f\u5e76\u67e5\u96c6\u5199\u6cd5\n\n2.\u5177\u4f53\u548c\u4e0d\u540c\u4ee3\u7801\u91cc\u6709\uff08~~\u4f60\u4eec\u770b\u4e0d\u51fa\u6765\u8fd9\u662f\u6c34\u8d34\u7684\u5427~~\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=200005;\nint N,D,INF,fa[M],dis[M],Q[M],ans[M];\nstruct node{\n    int A,B,id;\n}a[M];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9') {if (ch=='-')f=-f;ch=getchar();}\n\twhile (ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nbool cmp1(const node &a, const node &b){return a.B<b.B;}\nbool cmp2(const node &a, const node &b){return a.A<b.A;}\nint get(int x){return fa[x]==x?x:fa[x]=get(fa[x]);}\nint bin1(int L,int R,int x){\n    if (a[R].A<x) return -1;\n    while (L<=R){\n        int mid=(R-L>>1)+L;\n        if (a[mid].A<x) L=mid+1;else R=mid-1;\n    }\n    return L;\n}\nint bin2(int L,int R,int x){\n    if (a[L].A>x) return -1;\n    while (L<=R){\n        int mid=(R-L>>1)+L;\n        if (a[mid].A>x) R=mid-1;else L=mid+1;\n    }\n    return R;\n}\nint bin3(int L,int R,int x){\n    if (a[R].B<x) return -1;\n    while (L<=R){\n        int mid=(R-L>>1)+L;\n        if (a[mid].B<x) L=mid+1;else R=mid-1;\n    }\n    return L;\n}\nint bin4(int L,int R,int x){\n    if (a[L].B>x) return -1;\n    while (L<=R){\n        int mid=(R-L>>1)+L;\n        if (a[mid].B>x) R=mid-1;else L=mid+1;\n    }\n    return R;\n}\nvoid BFS(){//\u5012\u5237\u6700\u77ed\u8def\uff0c\u501f\u52a9\u4e8e\u5e76\u67e5\u96c6\u8fdb\u884c\u5408\u5e76\uff0c\u5426\u5219\u5355\u63a8\u592a\u6162 \n\tsort(a+1,a+1+N,cmp1),sort(a+1+N,a+1+2*N,cmp2);\n\tmemset(dis,63,sizeof dis);INF=dis[0];\n\tint hed=0,til=0;\n    for (int i=1;i<=N&&!a[i].B;i++) Q[++til]=i,dis[i]=1;\n    for (int i=N+1;i<=2*N&&!a[i].A;i++) Q[++til]=i,dis[i]=1;\n    while (hed!=til){\n        int u=Q[++hed],L,R;\n        if (u<=N){//\u5b9e\u8d28\u662fElsie\u6536\u5230\u4e86Bessie\u9001\u6765\u7684\u4e00\u4e2a\u997cu\uff0c\u90a3\u4e48\u524d\u4e00\u6b65\u5c31\u662fElsie\u7684\u997c\u4e2d(Bessie\u770b)\u5728[a[u].A-D,a[u].A]\u5bfb\u627e\u4e00\u4e2a\u5408\u9002\u7684\u997c \n            L=bin1(N+1,2*N,a[u].A-D);\n            R=bin2(N+1,2*N,a[u].A);\n        }\n        else{//\u5230Beesie\u7684\u997c\u4e2d(Elsie\u770b)\u5728[a[u].B-D,a[u].B]\u5bfb\u627e\u4e00\u4e2a\u5408\u9002\u7684\u997c \n            L=bin3(1,N,a[u].B-D);\n            R=bin4(1,N,a[u].B);\n        }\n        if (L==-1 || R==-1) continue;\n        for (int i=L,father;i<=R;i=father+1){\n            fa[father=get(i)]=get(R);\n            if (dis[u]+1<dis[i]) dis[i]=dis[u]+1,Q[++til]=i;\n        }\n    }\n    for (int i=1;i<=N;i++) ans[a[i].id]=dis[i];\n}\nint main(){\n    N=read(),D=read();\n    for (int i=1;i<=2*N;i++) a[i].A=read(),a[i].B=read(),a[i].id=i,fa[i]=i;\n    BFS();\n    for (int i=1;i<=N;i++)\n      if (ans[i]<INF) printf(\"%d\\n\",ans[i]);else printf(\"-1\\n\");\n    return 0;\n}\n```\n",
        "postTime": 1566565128,
        "uid": 125322,
        "name": "bessie_goes_moo",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4083 \u3010[USACO17DEC]A Pie for a Pie\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\u7eaa\u5ff5\u6211\u901d\u53bb\u7684 80 pts\u3002\n\n## \u9898\u76ee\u5206\u6790\n\u5bb9\u6613\u60f3\u5230\u8f6c\u5316\u95ee\u9898\u4e3a\u6700\u77ed\u8def\uff0c\u5c06\u4e00\u4e2a\u793c\u7269\u5411\u5b83\u53ef\u4ee5\u56de\u5e94\u7684\u793c\u7269\u8fde\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\uff0c\u4ee5\u8d60\u9001\u540e\u53ef\u76f4\u63a5\u5f62\u6210 Happy End \u7684\u793c\u7269\u4f5c\u4e3a\u6e90\u70b9 bfs \u5373\u53ef\u3002\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u4e2a\u70b9\u7684\u51fa\u8fb9\u8fde\u5411\u7684\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u5176\u5de6\u53f3\u7aef\u70b9\u53ef\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u5f97\u5230\u3002\n\n\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u89e3\u51b3\u3002\u4f46\u6b64\u9898\u7531\u4e8e\u8fb9\u6743\u4e3a $1$\uff0c\u6bcf\u4e2a\u70b9\u4e8b\u5b9e\u4e0a\u53ea\u4f1a\u88ab bfs \u65f6\u641c\u7d22\u5230\u5b83\u7684\u9996\u6761\u5165\u8fb9\u677e\u5f1b\u3002\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u4e0d\u663e\u5f0f\u6dfb\u52a0\u8fb9\uff0c\u800c\u662f\u4f7f\u7528 `multiset` \u7ef4\u62a4\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u70b9\u96c6\uff0c\u6bcf\u6b21\u7528 bfs \u961f\u9996\u677e\u5f1b\u5e76\u5220\u53bb\u70b9\u96c6\u4e2d\u53ef\u8fbe\u7684\u70b9\u5373\u53ef\u3002\n\n\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u5728 `multiset` \u88ab\u677e\u5f1b\u4e00\u6b21\u3002\u5bb9\u6613\u5f97\u77e5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\operatorname{O}(n\\log n)$\u3002\n\n## \u4ee3\u7801\n\u8003\u573a\u5fd8\u4e86\u5224\u65ad Bad End\u2026\u2026\n\n```cpp\n#include<cctype>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<set> \nusing namespace std;\nconst int maxn=1e5;\nint n,d,score[maxn<<1|1][2],f[maxn<<1|1];\nqueue<int> que;\nmultiset<pair<int,int> > rest[2];\nvoid read(int &x)\n{\n\tx=0;\n\tchar t=getchar();\n\twhile(!isdigit(t))\n\t\tt=getchar();\n\twhile(isdigit(t))\n\t{\n\t\tx=x*10+t-'0';\n\t\tt=getchar();\n\t}\n\treturn;\n}\nint main()\n{\n\tmemset(f,0x3f,sizeof f);\n\tread(n);\n    read(d);\n\tfor(int i=1;i<=(n<<1);++i)\n    {\n        read(score[i][0]);\n        read(score[i][1]);\n    }\n\tfor(int i=1;i<=(n<<1);++i)\n\t\tif(!score[i][i<=n])\n\t\t{\n\t\t\tf[i]=1;\n\t\t\tque.push(i);\n\t\t}\n\t\telse rest[i>n].insert(make_pair(score[i][i<=n],i));\n\twhile(!que.empty())\n\t{\n\t\tint front=que.front();\n\t\tque.pop();\n\t\tint opt=(front>n);\n\t\tmultiset<pair<int,int> >::iterator iter1=rest[opt^1].lower_bound(make_pair(score[front][opt]-d,-0x3f3f3f3f)),\n\t\t\t\t\t\t\t\t\t\t   iter2=rest[opt^1].upper_bound(make_pair(score[front][opt],0x3f3f3f3f));\n\t\tif(iter1==rest[opt^1].end())\n\t\t\tcontinue;\n\t\tfor(multiset<pair<int,int> >::iterator iter=iter1;iter!=iter2;)\n\t\t{\n\t\t\tf[iter->second]=f[front]+1;\n\t\t\tque.push(iter->second);\n\t\t\trest[opt^1].erase(iter++);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tprintf(\"%d\\n\",f[i]>=0x3f3f3f3f?-1:f[i]);\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1615014660,
        "uid": 67952,
        "name": "\u767d\u9c9f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4083 [USACO17DEC]A Pie for a Pie G"
    },
    {
        "content": "### \u4e3b\u8981\u7ea0\u6b63\u4e00\u4e0b\u697c\u4e0a\u7684\u9898\u89e3\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u660e\u663e\u662f\u4ece$Bessie$\u7684\u997c\u5e72\u4e2d$Elsie$\u89c9\u5f97\u7f8e\u5473\u5ea6\u4e3a$0$\u7684\u997c\u5e72\u548c$Elsie$\u7684\u997c\u5e72\u4e2d$Bessie$\u89c9\u5f97\u7f8e\u5473\u5ea6\u4e3a$0$\u7684\u997c\u5e72\u5165\u624b\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5efa\u56fe\u624b\u6bb5\uff0c\u5373\u4ece$0$\u7684\u70b9\u5f00\u59cb\u5165\u624b\u53cd\u5411\u5efa\u56fe\uff0c\u5bfb\u627e\u53ef\u4ee5\u4ece\u54ea\u4e9b\u70b9\u8d70\u5230\u8fd9\u4e2a\u70b9\u5373$Good End$\u3002\u5177\u4f53\u6765\u8bb2\uff0c\u5c31\u662f\u5c06\u539f\u672c$Bessie$\u7ed9$Elsie$\u67d0\u4e2a\u997c\u5e72\uff0c$Elsie$\u53ef\u4ee5\u9009\u62e9\u7ed9\u51fa\u7684\u997c\u5e72\u7684\u5efa\u56fe\u65b9\u5f0f\uff0c\u53d8\u6210$Elsie$\u7ed9\u51fa\u8fd9\u4e2a\u997c\u5e72\uff0c\u4ed6\u53ef\u80fd\u6536\u5230\u4ec0\u4e48\u997c\u5e72\u5373\u53ef\u3002\n\n\u7531\u4e8e\u6570\u636e\u8303\u56f4\u662f $1e5$\uff0c$n^2$\u7684\u679a\u4e3e\u4e0d\u53ef\u53d6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06$Bessie$\u7684\u997c\u5e72\u6839\u636e$Elsie$\u7684\u7f8e\u5473\u5ea6\u6765\u6392\u5e8f\u3002\u4e8c\u5206\u67e5\u627e\u5373\u53ef\u3002\u5efa\u56fe\u540e$BFS$\u5373\u53ef\u3002\n\n\u7531\u4e8e\u6709$D$\u7684\u9650\u5236\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u5728$nlogn$\u5de6\u53f3\u3002\u82e5\u6570\u636e\u4e0d\u5584\u826f\uff0c\u53ef\u80fd\u4f1a\u88ab\u5361\u5230\u63a5\u8fd1$n^2$\uff0c\u7531\u4e8e\u6211\u4e0d\u4f1a\u8bc1\u660e\u6240\u4ee5\u8bc1\u660e\u7565\u8fc7\u3002\u4f46\u662f\u6211\u7684\u731c\u60f3\u662f\u6ca1\u6709\u88ab\u5361\u5230$n^2$\u7684\u53ef\u80fd\u6027\uff0c\u56e0\u4e3a\u6570\u636e\u53ea\u80fd\u6ee1\u8db3\u4e00\u90e8\u5206\u7684\u70b9\u5f88\u6ee1\uff0c\u800c\u5e94\u8be5\u53ef\u4ee5\u4fdd\u8bc1\u5e73\u5747\u4e0b\u6765\u662f$nlogn$\u7684\u3002\n\n\u89e3\u91ca\u53d8\u91cf\u540d\u79f0: \n\n$in$ \u8bfb\u5165\u7684\u8bb0\u5f55\n\n$in$ $B[]$ Bessie\u7684\u997c\u5e72\n\n$in$ $E[]$ Elsie\u7684\u997c\u5e72\n\n$cmp$ \u6392\u5e8f\n\n$cop$ \u4e8c\u5206\u67e5\u627e\n\n$edges$ \u56fe\n\n$vis$ & $dis$ \u8ddd\u79bb\u548c\u8d70\u8fc7\u7684\u8bb0\u5f55\n\nNote: \u697c\u4e0a\u5efa\u56fe\u5efa\u9519\u4e86\n\n\u53ef\u80fd\u548c\u697c\u4e0a\u7684\u4ee3\u7801\u6709\u76f8\u4f3c\u4e4b\u5904\uff0c\u4e3b\u8981\u6307\u51fa\u95ee\u9898\u6240\u5728\u6307\u51fa\u3002\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<climits>\n#include<algorithm>\n#include<map>\n#include<queue>\n#include<set>\n#include<vector>\ntypedef long long ll;\nusing namespace std;\n\nvoid prepare() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n}\n\nint n,m;\nconst int maxn = 1e5+5;\nstruct in {\n    int B, E;\n    int id;\n};\nvector<int> edges[maxn*2];\nin B[maxn];\nin E[maxn];\n\nbool cmp1(const in &a,const in &b){\n    return a.B<b.B;\n}\nbool cmp2(const in &a,const in &b){\n    return a.E<b.E;\n}\nstruct BB {\n    bool operator() (const in &a,const in &b) {\n        return a.B < b.B;\n    }\n};\nstruct EE {\n    bool operator()(const in &a,const in &b) {\n        return a.E < b.E;\n    }\n};\n\nqueue<int> q;\nint vis[2*maxn];\nint dis[2*maxn];\n\nint main () {\n    prepare();\n    cin>>n>>m;\n    memset(dis,-1,sizeof(dis));\n    for (int i=1;i<=n;i++) {\n        cin>>B[i].B>>B[i].E;\n        B[i].id = i;\n        if (!B[i].E) {\n            q.push(i);\n            vis[i] = true;\n            dis[i] = 1;\n        }\n    }    \n    for (int i=1;i<=n;i++) {\n        cin>>E[i].B>>E[i].E;\n        E[i].id = i;\n        if (!E[i].B) {\n            q.push(i+n);\n            vis[i+n] = true;\n            dis[i+n] = 1;\n        }\n    }\n    sort(E+1,E+1+n,cmp1);\n    sort(B+1,B+1+n,cmp2);\n    for (int i=1;i<=n;i++) {\n        in cur = B[i];\n        cur.B = B[i].B-m;\n        int s = lower_bound(E+1,E+n+1,cur,BB())-E;\n        for (int j=s;j<=n;j++) {\n            if (E[j].B>B[i].B) break;\n            edges[B[i].id].push_back(E[j].id+n);\n        }\n    }\n    for (int i=1;i<=n;i++) {\n        in cur = E[i];\n        cur.E = E[i].E-m;\n        int s = lower_bound(B+1,B+n+1,cur,EE())-B;\n        for (int j=s;j<=n;j++) {\n            if (B[j].E>E[i].E) break;\n            edges[E[i].id+n].push_back(B[j].id);\n        }\n    }\n    while (!q.empty()) {\n        int t = q.front();\n        q.pop();\n        for (int i=0;i<edges[t].size();i++) {\n            int cur = edges[t][i];\n            if (vis[cur]) continue;\n            vis[cur] = 1;\n            dis[cur] = dis[t]+1;\n            q.push(cur);\n        }\n    }\n    for (int i=1;i<=n;i++) cout<<dis[i]<<\"\\n\";\n    return 0;\n}\n```\n",
        "postTime": 1596105115,
        "uid": 320309,
        "name": "KarL05",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4083 \u3010[USACO17DEC]A Pie for a Pie G\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u4e0d\u7b97\u4e25\u683c\u7684 $O(nlog n)$ \u7b97\u6cd5\n\n## \u65b9\u6cd5\u4e00\uff1a40pts\n\n\u9996\u5148\u8fd9\u9053\u9898\u5f88\u660e\u663e\u662f\u4e00\u4e2a\u56fe\u8bba\u9898\uff0c\u6700\u6734\u7d20\u7684\u60f3\u6cd5\u5c31\u662f\u5bf9\u4efb\u610f\u4e24\u4e2a\u6d3e\u8fdb\u884c $O(n^2)$ \u7684\u5339\u914d\uff0c\u5982\u679cA\u7684\u6d3e $a$ \u53ef\u4ee5\u88ab\u5f53\u505a\u6d3e $b$ \u7684\u56de\u793c\uff0c\u5219\u4ece $a$ \u5411 $b$ \u8fde\u4e00\u6761 **\u6709\u5411\u8fb9** \uff0c\u5efa\u51fa\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u7136\u540e\u518d\u4ece\u5de6\u8fb9\u540e\u6743\u503c\u4e3a $0$ \u7684\u70b9\u548c\u53f3\u8fb9\u524d\u6743\u503c\u4e3a $0$ \u7684\u70b9\u5f00\u59cb\u8dd1\u6700\u77ed\u8def\uff0c\u4ece\u800c\u6c42\u51fa\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5efa\u56fe $O(n^2)$ +\u6700\u77ed\u8def $O(n)$ \uff08\u8fd9\u91cc\u56e0\u4e3a\u8fb9\u6743\u4e3a1\u6240\u4ee5\u53ef\u4ee5\u5e7f\u641c\u8dd1\u4e00\u904d\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u8fdb\u8fc7\u961f\u5c31\u7528\u4e0d\u7740\u4e86\uff09\n\n## \u65b9\u6cd5\u4e8c\uff1a100pts (O2)\n\n\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u5bf9\u4e8e\u4e00\u4e2a\u5de6\u4fa7\u7684\u70b9 $a$ \u6765\u8bf4\u5b83\u80fd\u591f\u8fde\u63a5\u7684\u70b9 $b$ \u5fc5\u7136\u6709 $b$ \u7684\u524d\u6743\u503c\u662f\u5728 $a$ \u7684\u524d\u6743\u503c\u5230 $a$ \u7684\u524d\u6743\u503c\u51cf $d$ \u8fd9\u4e2a\u533a\u95f4\u4e2d\uff0c\u53f3\u4fa7\u70b9\u540c\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u81ea\u7136\u53ef\u4ee5\u60f3\u5230\u53ef\u4ee5\u5bf9\u5de6\u4fa7\u7684\u70b9\u6309\u540e\u6743\u503c\u6392\u5e8f\uff0c\u53f3\u4fa7\u7684\u70b9\u6309\u524d\u6743\u503c\u6392\u5e8f\uff0c\u7136\u540e\u4e8c\u5206\u67e5\u627e\u3002\n\n(\u7406\u8bba)\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6392\u5e8f $O(nlogn)$ +\u5efa\u56fe\u4e8c\u5206 $O(nlogn+n^2)$ +\u6700\u77ed\u8def  $O(n)$\n\n## \u65b9\u6cd5\u4e09\uff1a100pts\n\n\u5f88\u660e\u663e\u5728\u5efa\u56fe\u8fc7\u7a0b\u4e2d\u6211\u4eec\u662f\u5411 $(l,r)$ \u7684\u4e00\u4e2a\u533a\u95f4\u8fde\u8fb9\u7684\uff0c\u800c\u4e14\u5728\u5e7f\u641c\u8fc7\u7a0b\u4e2d\u6211\u4eec\u8fd8\u4f1a\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u8bbf\u95ee\u8fc7\uff0c\u90a3\u4e48\u5b83\u5c31\u4e0d\u4f1a\u518d\u6b21\u505a\u51fa\u8d21\u732e\u4e86\uff0c\u4ece\u800c\u6211\u4eec\u53ef\u4ee5\u4e0d\u5728\u6700\u5f00\u59cb\u5efa\u56fe\uff0c\u800c\u662f\u7b49\u5230\u641c\u5230\u7b2c $i$ \u4e2a\u70b9\u65f6\u518d\u8fdb\u884c\u8fde\u8fb9\u5efa\u56fe\u3002\n\n\u4ece\u800c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u9898\u7684\u5efa\u56fe\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u8986\u76d6\u95ee\u9898\uff0c\u4ece\u800c\u6211\u4eec\u81ea\u7136\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u8fdb\u884c\u5feb\u901f\u67e5\u8be2\u548c\u8fde\u8fb9\n\n\uff08\u7406\u8bba\uff09\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6392\u5e8f $O(nlogn)$ +\u5efa\u56fe $O(nlogn+n)$ +\u6700\u77ed\u8def $O(n)$\n\n### AC Code\n\n```cpp\n#include <bits/stdc++.h>\n#define mn 100005\nusing namespace std;\nstruct it\n{\n\tint af,bf,id;\n}e[mn*2];\nint n,d,dis[mn*2],fa[mn*2],ans[mn];\nbool cm1(it a,it b)\n{\n\treturn a.af<b.af;\n}\nbool cm2(it a,it b)\n{\n\treturn a.bf<b.bf;\n}\nqueue<int>q;\nint er1(int num)\n{\n\tint l=n+1,r=2*n;\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r+1)/2;\n\t\tif(e[mid].af<=num)\n\t\t\tl=mid;\n\t\telse\n\t\t\tr=mid-1;\n\t}\n\tif(e[l].af<=num)\n\t\treturn l;\n\treturn -1;\n}\nint er2(int num)\n{\n\tint l=n+1,r=2*n;\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r)/2;\n\t\tif(e[mid].af>=num)\n\t\t\tr=mid;\n\t\telse\n\t\t\tl=mid+1;\n\t}\n\tif(e[l].af>=num)\n\t\treturn l;\n\treturn -1;\n}\nint er3(int num)\n{\n\tint l=1,r=n;\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r+1)/2;\n\t\tif(e[mid].bf<=num)\n\t\t\tl=mid;\n\t\telse\n\t\t\tr=mid-1;\n\t}\n\tif(e[l].bf<=num)\n\t\treturn l;\n\treturn -1;\n}\nint er4(int num)\n{\n\tint l=1,r=n;\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r)/2;\n\t\tif(e[mid].bf>=num)\n\t\t\tr=mid;\n\t\telse\n\t\t\tl=mid+1;\n\t}\n\tif(e[l].bf>=num)\n\t\treturn l;\n\treturn -1;\n}\nint gf(int x)\n{\n\tif(x==fa[x])\n\t\treturn x;\n\treturn fa[x]=gf(fa[x]);\n}\nint main()\n{\n\tcin>>n>>d;\n\tfor(int i=1;i<=2*n;i++)\n\t\tcin>>e[i].af>>e[i].bf,e[i].id=i,fa[i]=i,dis[i]=-1;\n\tfa[2*n+1]=2*n+1;\n\tsort(e+1,e+1+n,cm2);\n\tsort(e+1+n,e+1+2*n,cm1);\n\tfor(int i=1;i<=n&&e[i].bf==0;i++)\n\t\tq.push(i),dis[i]=1,fa[i]=i+1;\n\tfor(int i=n+1;i<=2*n&&e[i].af==0;i++)\n\t\tq.push(i),dis[i]=1,fa[i]=i+1;\n\twhile(!q.empty())\n\t{\n\t\tint temp=q.front();\n\t\tq.pop();\n\t\tif(temp<=n)\n\t\t{\n\t\t\tint r=er1(e[temp].af),l=er2(e[temp].af-d);\n\t\t\tif(l==-1||r==-1)\n\t\t\t\tcontinue;\n\t\t\tfor(int i=gf(l);i<=r;i=gf(i))\n\t\t\t{\n\t\t\t\tdis[i]=dis[temp]+1;\n\t\t\t\tfa[i]=i+1;\n\t\t\t\tq.push(i);\n\t\t\t\tif(i==2*n)\n\t\t\t\t\tfa[i]=2*n+1;\n\t\t\t\ti=gf(i);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint r=er3(e[temp].bf),l=er4(e[temp].bf-d);\n\t\t\tif(l==-1||r==-1)\n\t\t\t\tcontinue;\n\t\t\tfor(int i=gf(l);i<=r;i=gf(i))\n\t\t\t{\n\t\t\t\tdis[i]=dis[temp]+1;\n\t\t\t\tfa[i]=i+1;\n\t\t\t\tq.push(i);\n\t\t\t\tif(i==n)\n\t\t\t\t\tfa[i]=2*n+1;\n\t\t\t\ti=gf(i);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tans[e[i].id]=dis[i];\n\tfor(int i=1;i<=n;i++)\n\t\tcout<<ans[i]<<endl;\n}\n```\n",
        "postTime": 1612149959,
        "uid": 331897,
        "name": "C1R1A1E1F1",
        "ccfLevel": 0,
        "title": "4083\u5927\u6742\u70e9"
    },
    {
        "content": "## \u53ea\u7528 STL \u505a\u5230 $\\mathrm O(n\\log n)$\n\n\u5efa\u56fe\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003\u5176\u4ed6\u9898\u89e3\u3002\u7531\u4e8e\u6bcf\u5f20\u997c\u53ea\u80fd\u7528\u4e00\u6b21\uff08BFS \u4e2d\u7b2c\u4e00\u6b21\u904d\u5386\u5230\u4e00\u5f20\u997c\u65f6\u6df1\u5ea6\u6700\u5c0f\uff0c\u5728\u672c\u9898\u4e2d\u5373\u4e3a\u6700\u4f18\uff09\uff0c\u6211\u4eec\u5c06\u6240\u6709\u997c\u5b58\u8fdb `std::set`\u3002\u904d\u5386\u8fc7\u4e00\u5f20\u997c\uff0c\u5c31\u5220\u9664\u4e4b\uff0c\u56e0\u4e3a `std::set` \u4e2d\u67e5\u627e\u548c\u8fed\u4ee3\u5668\u7d2f\u52a0\u90fd\u662f $\\mathrm O(\\log n)$\uff0c\u4e00\u5171 $2n$ \u5f20\u997c\uff0c\u5c31\u662f $\\mathrm O(n\\log n)$\u3002\n\n```c++\n#include <cstring>\n#include <iostream>\n#include <set>\n#include <queue>\n#define F(var, start, end) for\\\n\t(int var = (start), var##_done = (end); var <= var##_done; ++var)\n\nconst int oxis = 200003;\n\nint score_self[oxis], // \u5236\u4f5c\u997c\u7684\u4e00\u65b9\u8ba4\u4e3a\u7684\u7f8e\u5473\u5ea6\n\tscore_other[oxis], // \u5bf9\u65b9\u8ba4\u4e3a\u7684\u7f8e\u5473\u5ea6\n\tans[oxis]; // \u6700\u5c0f\u6df1\u5ea6\uff0c\u5373\u7b54\u6848\n\n// \u4f7f std::set \u4e2d\u6309\u5bf9\u65b9\u8ba4\u4e3a\u7684\u7f8e\u5473\u5ea6\u6392\u5e8f\uff0c\u4ece\u800c\u53ef\u4ee5\u67e5\u627e\nstruct compare {\n\tbool operator()(const int &u, const int &v) const {\n\t\treturn  score_other[u] != score_other[v] ?\n\t\t\tscore_other[u] <  score_other[v] : u < v;\n\t}\n};\n\nint main()\n{\n\tstd::ios::sync_with_stdio(false);\n\tint n, d;\n\tstd::cin >> n >> d;\n\tmemset(ans, 127, sizeof(ans));\n\tstd::set<int, compare> bessie, elsie; // bessie \u5b58 bessie \u6536\u5230\u7684\u997c\n\tstd::queue<int> bfs;\n\tF (i, 1, n) {\n\t\tstd::cin >> score_self[i] >> score_other[i];\n\t\telsie.insert(i);\n\t}\n\tF (i, 1 + n, 2 * n) {\n\t\tstd::cin >> score_other[i] >> score_self[i];\n\t\tbessie.insert(i);\n\t}\n\tF (i, 1, 2 * n)\n\t\tif (score_other[i] == 0) {\n\t\t\tbfs.push(i);\n\t\t\tans[i] = 1;\n\t\t\tstd::set<int, compare> &cow = i > n ? bessie : elsie;\n\t\t\tcow.erase(i);\n\t\t}\n\twhile (!bfs.empty()) {\n\t\tint now = bfs.front();\n\t\tbfs.pop();\n\t\tint tastiness = score_self[now], depth = 1 + ans[now];\n\t\tstd::set<int, compare> &cow = now > n ? elsie : bessie;\n// \u6536\u5230\u997c\u7684\u7f8e\u5473\u5ea6 >= \u7ed9\u51fa\u997c\u7684\u7f8e\u5473\u5ea6 - d\n// \u5c06\u4e0b\u754c\u653e\u5230 score_other[0] \u4ee5\u5229\u7528 lower_bound\n\t\t*score_other = tastiness - d;\n\t\tfor (auto i = cow.lower_bound(0);\n\t\t\t\ti != cow.end() && score_other[*i] <= tastiness;\n\t\t\t\tcow.erase(i++)) {\n\t\t\tint received = *i;\n\t\t\tbfs.push(received);\n\t\t\tans[received] = depth;\n\t\t}\n\t}\n\tF (i, 1, n)\n\t\tif (ans[i] == 2139062143)\n\t\t\tstd::cout << \"-1\\n\";\n\t\telse\n\t\t\tstd::cout << ans[i] << '\\n';\n}\n\n```",
        "postTime": 1647439598,
        "uid": 70578,
        "name": "\u7269\u7075",
        "ccfLevel": 0,
        "title": "P4083 \u9898\u89e3"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u7528\u5e73\u8861\u6811\u6765\u4f18\u5316\u5355\u70b9\u5411\u533a\u95f4\u8fde\u8fb9\u7684\u505a\u6cd5\u3002\n\n\u4ee5\u4e0b\u628aBessie\u7b80\u79f0B\uff0cElsie\u7b80\u79f0E\u3002\n\n------------\n\u4e0d\u8fc7\u8fd8\u662f\u5148\u8bb2\u4e00\u4e0b\u5927\u81f4\u601d\u8def\uff0c\u5982\u679c\u5df2\u7ecf\u6e05\u695a\u53ef\u4ee5\u8df3\u8fc7\uff1a\n\n\n\u53ef\u4ee5\u628a\u6570\u636e\u5206\u6210\u201c\u56db\u4e2a\u8c61\u9650\u201d\uff08\u6bcf\u4e2a\u8c61\u9650\u90fd\u662f\u7ad6\u7740\u7684$n$\u4e2a\u6570\u5b57\uff09\u3002\n\n|  |B\u7684\u8bc4\u5206  | E\u7684\u8bc4\u5206 |\n| :----------: | :----------: | :----------: |\n| B\u505a\u7684 | \u7b2c\u4e8c\u8c61\u9650 | \u7b2c\u4e00\u8c61\u9650 |\n|  E\u505a\u7684| \u7b2c\u4e09\u8c61\u9650 | \u7b2c\u56db\u8c61\u9650 |\n\n\u5f88\u663e\u7136\uff0c\u8981\u62ff\u8bc4\u4ef7\u4e3a0\u7684\u997c\u5f80\u524d\u5012\u63a8\uff0c\u5e76\u4e14\u8fd9\u4e2a\u8bc4\u4ef7\u4e3a0\u7684\u997c\u80af\u5b9a\u4e0d\u662f\u81ea\u5df1\u505a\u7684\uff0c\u6240\u4ee5**\u4e00\u4e09\u8c61\u9650**\u76840\u6570\u636e\u624d\u662f\u672b\u72b6\u6001\u3002\n\n\u5982\u679c\u662f\u7b2c\u4e00\u8c61\u9650\uff1a\n\n- \u8fd9\u4e2a\u997c\u6700\u540e\u662f\u9001\u5230E\u624b\u91cc\uff0c\u4e14\u8bc4\u5206\u4e3a0\uff08\u7b2c\u4e00\u8c61\u9650\uff09\u3002\n- \u4f46\u5728B\u770b\u6765\uff0c\u8fd9\u4e2a\u997c\u7684\u8bc4\u5206\u662f$x$\uff08\u7b2c\u4e8c\u8c61\u9650\uff09\u3002\n- \u6240\u4ee5\u4e4b\u524dE\u9001B\u7684\u997c\uff0c\u5728B\u770b\u6765\uff0c\u8bc4\u5206\u533a\u95f4\u5728$[x-d,x]$\uff08\u7b2c\u4e09\u8c61\u9650\uff09\n\n\u5230\u6b64\u6211\u4eec\u5c31\u627e\u5230\u8fd9\u4e2a\u997c\u7684\u4e0a\u4e00\u4e2a\u72b6\u6001\u5728\u7b2c\u4e09\u8c61\u9650\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\n- \u6211\u4eec\u8981\u62ff\u8bc4\u5206\u4e3a0\uff08\u7b2c\u4e00\u8c61\u9650\uff09\u7684\u997c$A$\uff0c\n- \u53bb\u5bf9\u5e94$x$(\u7b2c\u4e8c\u8c61\u9650\uff09\uff0c\n- \u627e\u5230\u8bc4\u5206\u4e3a$[x-d,x]$\uff08\u7b2c\u4e09\u8c61\u9650\uff09\u7684\u997c$B$\uff08\u53ef\u80fd\u6709\u591a\u4e2a\uff0c\u6240\u4ee5\u662f\u4e00\u4e2a\u533a\u95f4\uff09\uff0c\u628a\u997c$A$\u5411\u6bcf\u4e2a\u997c$B$\u8fde\u8fb9\n\n\u5bf9\u4e8e\u5176\u4ed6\u4e0d\u662f0\u7684\u997c\uff0c\u5176\u5b9e\u94fe\u63a5\u65b9\u6cd5\u4e5f\u662f\u4e00\u6837\u7684\u3002\n\u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u8c61\u9650\uff0c\u662f\u7b2c\u4e09\u8c61\u9650\u505a\u6cd5\u4e5f\u7c7b\u4f3c\uff0c\u4e0d\u8d58\u8ff0\u3002\n\n\u5bf9\u4e8e\u6700\u540e\u7684\u56fe\uff0c\u6211\u4eec\u4ece\u5728\u7b2c\u4e00\u7b2c\u4e09\u8c61\u9650\u8bc4\u4ef7\u4e3a0\u7684\u70b9\u4e3a\u8d77\u70b9\uff0c\u8dd1\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e2a\u997c\u7684\u7b54\u6848\u4e86\u3002\n\n\u56e0\u4e3a\u8fb9\u7684\u957f\u5ea6\u90fd\u662f1\uff0c\u4e14\u997c\u4e0d\u80fd\u91cd\u590d\u9001\uff0c\u5982\u679c\u76f4\u63a5\u8fde\u6700\u574f\u4f1a\u8fde\u51fa$n^2$\u6761\u8fb9\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7528BFS\u8dd1\u6700\u77ed\u8def\uff0c\u5e76\u4e14\u52a8\u6001\u201c\u8fde\u8fb9\u201d\uff08\u5176\u5b9e\u5c31\u662f\u4e22\u8fdb\u961f\u5217\u561b\uff09\u3002\t\u6240\u8c13\u52a8\u6001\u5c31\u662f\u8fde\u8fb9\u7684\u65f6\u5019**\u53ea\u8fde\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684**\u997c\u3002\n\n\u8fd9\u5c31\u5f15\u51fa\u4e86\u95ee\u9898\uff1a\u90a3\u4e48\u600e\u4e48\u5feb\u901f\u8bbf\u95ee\u8fd9\u4e9b\u8bbf\u95ee\u7684\u997c\uff1f\n\n\n------------\n\n\u7b2c\u4e00\u79cd\uff1a\u7528FHQ Treap\u7ef4\u62a4\u533a\u95f4\u3002\n\n\u719f\u6089FHQ Treap\u7684\u670b\u53cb\u5f88\u5feb\u5c31\u80fd\u60f3\u5230\uff0c\u76f4\u63a5\u88c2\u51fa\u4e00\u4e2a$[x,x-d]$\u7684\u533a\u95f4\uff0c\u628a\u8fd9\u4e2a\u533a\u95f4\uff08\u6811\uff09DFS\uff0c\u4e00\u4e2a\u4e00\u4e2a\u548c\u5f85\u8fde\u70b9\u94fe\u63a5\u5c31\u53ef\u4ee5\u4e86\uff0c\u6700\u540e\u8fd9\u4e2a\u533a\u95f4\u5c31\u4e0d\u5408\u5e76\u56de\u53bb\uff08\u76f8\u5f53\u4e8e\u5220\u6389\uff09\u3002\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u53ea\u9700\u8981\u5206\u522b\u5bf9B\u548cE\u5f00\u4e00\u9897\u5e73\u8861\u6811\uff0c\u7b2c\u4e00\u5173\u952e\u5b57\u8bb0**\u53e6\u4e00\u4e2a\u4eba\u5bf9\u81ea\u5df1\u997c\u7684\u8bc4\u5206**\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u624d\u662f\u81ea\u5df1\u5bf9\u81ea\u5df1\u997c\u7684\u8bc4\u5206\uff0c\u5e76\u4e14\u8fd8\u8981\u8bb0\u5f55\u997c\u7684\u7f16\u53f7\uff08\u7b2c\u4e09\u5173\u952e\u5b57\uff09\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u770b\u4ee3\u7801\u4f1a\u66f4\u6e05\u695a\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u8bbf\u95ee\u4e00\u6b21\uff0c\u5e76\u4e14\u6bcf\u6b21\u88c2\u5f00\u5e73\u8861\u6811\u53ea\u9700\u8981\u82b1\u8d39$log(n)$\u7684\u590d\u6742\u5ea6\uff0c\u6700\u591a\u8fde$n$\u6b21\u8fb9\uff0c\u663e\u7136\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$\uff0c~~\u800c\u4e14\u8fd8\u4e0d\u9700\u8981\u6392\u5e8f\u4ec0\u4e48\u7684~~\u3002\n\n------------\n\n\u7b2c\u4e8c\u79cd\uff1a\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u7ef4\u62a4\u533a\u95f4\uff08\u53ef\u80fd\u662f\u53e6\u5916\u4e00\u7bc7\u9898\u89e3\u7684\u505a\u6cd5\uff1f\u6ca1\u6709\u4ed4\u7ec6\u770b\uff09\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u8bbf\u95ee\u8fc7\u4e86\uff0c\u76f4\u63a5\u548c\u524d\u4e00\u4e2a\u70b9\u7684\u96c6\u5408\u5408\u5e76\u3002\n\n\u6bcf\u6b21\u8bbf\u95ee\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u4e0d\u662f\u5f53\u524d\u6807\u8bb0$+1$\u8df3\u5230\u4e0b\u4e00\u4e2a\u70b9\uff0c\u800c\u662f$+$\u8be5\u70b9**\u96c6\u5408\u7684\u603b\u70b9\u6570**\u3002\u56e0\u6b64\u6bcf\u4e2a\u96c6\u5408\u7684\u521d\u59cb\u603b\u70b9\u6570\u5c31\u662f1\u3002\u62bd\u8c61\u7406\u89e3\u4e00\u70b9\u5c31\u662f\u628a\u4e00\u5806\u6570\u7ed1\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a\u533a\u95f4\uff0c\u53ea\u6709\u7b2c\u4e00\u4e2a\u6570\u662f\u6709\u6548\u7684\uff0c\u53ef\u8bbf\u95ee\u7684\uff0c\u5176\u4ed6\u90fd\u662f\u8bbf\u95ee\u8fc7\u7684\u3002\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u53ea\u9700\u8981lower_bound\u627e\u51fa\u7b2c\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u70b9\uff0c\u518d\u627e\u5230\u8be5\u70b9\u7684\u7956\u5148\uff08\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u53ef\u80fd\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u4e86\uff09$+$**\u96c6\u5408\u7684\u603b\u70b9\u6570**\u5230\u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u70b9\uff08\u6ce8\u610f\u8fd9\u4e2a\u70b9\u4e5f\u6709\u53ef\u80fd\u8d85\u51fa\u8303\u56f4\u4e86\uff09\u3002\n\n\u849f\u84bb\u4e4b\u524d\u505a\u8fc7\u4e00\u9053\u7528\u8fd9\u79cd\u65b9\u6cd5\u505a\u7684\u9898\uff0c\u4f46\u662f\u5b9e\u5728\u60f3\u4e0d\u8d77\u6765\u662f\u54ea\u9053\u4e86\u3002\u8fd9\u79cd\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u5176\u5b9e\u4f1a\u6bd4\u5e73\u8861\u6811\u7684\u65b9\u6cd5\u9ebb\u70e6\u8bb8\u591a\uff0c\u8fd8\u662f\u4e0d\u592a\u63a8\u8350\u3002~~(\u90a3\u9053\u9898\u8bb0\u5f97\u8c03\u4e86\u4e0d\u5c11\uff0c\u800c\u7528\u5e73\u8861\u6811\u8fd9\u98981A\u4e86\uff09~~\n\n------------\n\n\u7b2c\u4e09\u79cd\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5176\u4ed6\u9898\u89e3\u6709\uff0c\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002~~\uff08\u5176\u5b9e\u662f\u4e0d\u4f1a\uff09~~\n\n\n------------\n\n\u53ea\u6709\u7b2c\u4e00\u79cd\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\nusing namespace std;\nconst int MAXN=2e5+5;\nint ans[MAXN];//\u6700\u7ec8\u7b54\u6848\nint n,d;\nstruct Node{int x,id,cnt;};\nqueue<Node> Q;//BFS\u6c42\u6700\u77ed\u8def\u7684\u961f\u5217\n\nstruct FHQ_Treap//\u53ef\u7231\u7684\u5e73\u8861\u6811\n{\n\tint val[MAXN],self[MAXN],id[MAXN],heap[MAXN],lt[MAXN],rt[MAXN],sz[MAXN];\n\t\t\n\tinline void PushUp(int x){sz[x]=sz[lt[x]]+sz[rt[x]]+1;}\n\tinline int Merge(int x,int y)\n\t{\n\t\tif(!x||!y) return x|y;\n\t\tif(heap[x]<heap[y]) return rt[x]=Merge(rt[x],y),PushUp(x),x;\n\t\telse return lt[y]=Merge(x,lt[y]),PushUp(y),y;\n\t}\n\tinline void Split(int x,int k,int &u,int &v)\n\t{\n\t\tif(!x) {u=v=0;return;}\n\t\tif(val[x]<=k) u=x,Split(rt[x],k,rt[u],v),PushUp(x);\n\t\telse v=x,Split(lt[x],k,u,lt[v]),PushUp(x);\n\t}\n\t\n\tint root,x,y,z,tot;\n\tinline int New(int a,int b,int c){return val[++tot]=a,self[tot]=b,heap[tot]=rand(),sz[tot]=1,id[tot]=c,tot;}\n\tinline void Insert(int a,int b,int c){Split(root,a,x,y),root=Merge(x,Merge(New(a,b,c),y));}\n\t\n\tinline void DFS(int p,Node t){if(p) Q.push({self[p],id[p],t.cnt+1}),DFS(lt[p],t),DFS(rt[p],t);}\n\t//\u76f4\u63a5\u904d\u5386\u6574\u68f5\u6811\u5e76\u4e14\u201c\u8fde\u8fb9\u201d\uff08\u5c31\u4e22\u8fdb\u961f\u5217\u800c\u5df2\uff09\n\t\n\tinline void Modify(Node t){Split(root,t.x-d-1,x,y),Split(y,t.x,y,z),root=Merge(x,z),DFS(y,t);}\n\t//\u88c2\u51fa[x-d,x]\u8fd9\u4e2a\u533a\u95f4\n\t\n}B,E;\n\nsigned main(void)\n{\n\tcin>>n>>d;\n\tfor(int i=1,b,e;i<=n;i++)\n\t{\n\t\tscanf(\"%d %d\",&b,&e);\n\t\tif(e==0) Q.push({b,i,1});//\u5982\u679c\u8bc4\u4ef7\u4e3a0\u5c31\u53ef\u4ee5\u76f4\u63a5\u5f53\u8d77\u70b9\u4e86\uff0c\u4e0d\u653e\u5165\u5e73\u8861\u6811\n\t\telse B.Insert(e,b,i);\n\t}\n\tfor(int i=1,b,e;i<=n;i++)\n\t{\n\t\tscanf(\"%d %d\",&b,&e);\n\t\tif(b==0) Q.push({e,i+n,1});//\u5982\u679c\u8bc4\u4ef7\u4e3a0\u5c31\u53ef\u4ee5\u76f4\u63a5\u5f53\u8d77\u70b9\u4e86\uff0c\u4e0d\u653e\u5165\u5e73\u8861\u6811\n\t\telse E.Insert(b,e,i+n);\n\t}\n\t//id<=n\u662fBessie\u7684\u997c\n\twhile(!Q.empty())\n\t{\n\t\tNode t=Q.front();Q.pop();\n\t\tif(t.id<=n) E.Modify(t),ans[t.id]=t.cnt;//\u8981\u53bb\u5bf9\u65b9\u7684\u5e73\u8861\u6811\u5185\u627e\uff0c\u4e0a\u4e2a\u997c\u53ef\u80fd\u7684\u8bc4\u4ef7\n\t\telse B.Modify(t);\n\t}\n\tfor(int i=1;i<=n;i++) printf(\"%d\\n\",ans[i]?ans[i]:-1);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1610533412,
        "uid": 29354,
        "name": "CodyTheWolf",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4083 \u3010[USACO17DEC]A Pie for a Pie G\u3011"
    },
    {
        "content": "\u5c06\u6bcf\u4e2a\u997c\u89c6\u4f5c\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff0c\u8868\u793a\u5982\u4e0b\uff1a\n\n$$(x_1,y_1),(x_2,y_2)\\dots(x_n,y_n)$$\n\n$$(x_{n+1},y_{n+1}),(x_{n+2},y_{n+2})\\dots(x_{2n},y_{2n})$$\n\n\u8bbe\u6bcf\u6b21\u9009\u62e9\u7684\u997c\u7684\u5e8f\u5217\u4e3a $a_1,a_2,a_3\\dots a_p$\uff0c\u6ee1\u8db3\uff1a\n\n$$y_{a_1}<y_{a_2}\\le y_{a_1}+d$$\n\n$$x_{a_2}<x_{a_3}\\le x_{a_2}+d$$\n\n$$y_{a_3}<y_{a_4}\\le y_{a_3}+d$$\n\n\n$$\\dots\\dots$$\n\n\u6839\u636e\u8fd9\u4e2a\u7279\u5f81\u5c31\u53ef\u4ee5\u5efa\u8fb9\uff0c\u4f46\u662f $n\\le 10^5$\u3002\n\n\u8fd9\u4e2a\u56fe\u5728\u6781\u5ea6\u6124\u6012\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u7ed9\u4f60\u585e $10^{10}$ \u6761\u8fb9\u3002\n\n\u53ef\u8fd9\u4e2a\u6027\u8d28\u5e76\u4e0d\u4f1a\u56e0\u6b64\u800c\u65e0\u7528\uff0c\u5148\u6362\u4e2a\u89d2\u5ea6\u8003\u8651\u3002\n\n\u8bbe\u997c $i,x$\uff0c\u6ee1\u8db3\uff1a$x\\in Z,i\\in Z,i\\in[1,n],x\\in[n+1,2n]$\n\n\u5982\u679c\u628a\u4e0b\u9762\u7684\u4e8c\u5143\u7ec4\u6309 $y$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u8fc7\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u997c $i\\le n$\uff0c\u6240\u6709\u6ee1\u8db3 $i\\to x$ \u7684 $x$ \u5728\u6392\u5e8f\u540e\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u3002\n\n\u76f8\u540c\u7684\uff0c\u5bf9\u4e8e $x\\to i$ \u4e5f\u662f\u53ef\u4ee5\u4e00\u6837\u6c42\u51fa\u5bf9\u5e94\u7684\u533a\u95f4\u7684\u3002\n\n\u5bf9\u4e8e\u4efb\u610f\u7684 $i\\le n$\uff0c$(x_i,0)$ \u548c $(0,y_{i+n})$ \u90fd\u53ef\u4ee5\u4f5c\u4e3a\u7ed3\u675f\u3002\n\n\u90a3\u4e48\u6240\u6709\u548c\u7ed3\u675f\u6807\u5fd7\u76f8\u8fde\u7684\u997c\u4e5f\u53ef\u4ee5\u8fbe\u5230 Happy End\uff0c\u6613\u8bc1\u660e\uff0c\u5728\u4e00\u8f6e\u6765\u56de\u9001\u793c\u4e2d\uff0c\u53ea\u6709\u7ec8\u70b9\u624d\u53ef\u80fd\u662f\u7ec8\u6b62\u8282\u70b9\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6240\u6709\u53ef\u4ee5\u8fbe\u5230 Happy End \u7684\u997c\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u627e\u5230\u81ea\u5df1\u5bf9\u5e94\u7684\u90a3\u4e00\u6bb5\u533a\u95f4\u53bb\u7ee7\u7eed\u66f4\u65b0\u7b54\u6848\uff0c\u56e0\u4e3a\u6bcf\u6761\u8fb9\u6743\u4e3a $1$\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5 Dijkstra \u8dd1\u6700\u77ed\u8def\uff0c\u5728\u6240\u6709 Bessie \u7684\u997c\u90fd\u66f4\u65b0\u8fc7\u6743\u503c\u4ee5\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u51fa\u53bb\u4e86\u3002\n\n~~\u56e0\u4e3a\u6570\u636e\u8fc7\u6c34\u5c31\u76f4\u63a5\u8dd1\u8fc7\u53bb\u4e86~~\n\n\u7136\u540e\u56e0\u4e3a\u7ffb\u8bd1\u7684\u9505\u5bb3\u6211\u8c03\u4e86\u597d\u4e45\uff0c\u56de\u793c\u662f\u9700\u8981**\u5927\u4e8e\u7b49\u4e8e**\u800c\u4e0d\u662f**\u5927\u4e8e**\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\nconst int MAX=1e5+3;\nstruct milk\n{\n    int x,y;\n    int l,r;\n};\nmilk a[MAX];\nmilk b[MAX];\nint d[MAX<<1];\nint ans[MAX<<1];\nint n_a[MAX];\nint n_b[MAX];\nint n,D;\ninline bool myru_n_a(int x,int y){return a[x].y<a[y].y;}\ninline bool myru_n_b(int x,int y){return b[x].x<b[y].x;}\nLL rin()\n{\n    LL s=0;\n    char c=getchar();\n    bool bj=0;\n    for(;(c>'9'||c<'0')&&c!='-';c=getchar());\n    if(c=='-')c=getchar(),bj=true;\n    for(;c>='0'&&c<='9';c=getchar())s=(s<<1)+(s<<3)+(c^'0');\n    if(bj)return -s;\n    return s;\n}\nint main()\n{\n    n=rin();D=rin();\n    for(int i=1;i<=n;i++)a[i].x=rin(),a[i].y=rin();\n    for(int i=1;i<=n;i++)b[i].x=rin(),b[i].y=rin();\n    for(int i=1;i<=n;i++)n_a[i]=n_b[i]=i;\n    sort(n_a+1,n_a+n+1,myru_n_a);\n    sort(n_b+1,n_b+n+1,myru_n_b);\n\n    int head=1,tail=0;\n    int sum=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i].y==0)d[++tail]=i,ans[i]=1,sum++;\n        int l,r;\n        a[i].l=n+1;a[i].r=0;\n        l=1;r=n;\n        for(;l<=r;)\n        {\n            int mid=(l+r)>>1;\n            if(b[n_b[mid]].x<=a[i].x)a[i].r=mid,l=mid+1;\n            else r=mid-1;\n        }\n        int now=a[i].x-D;\n        l=1;r=n;\n        for(;l<=r;)\n        {\n            int mid=(l+r)>>1;\n            if(b[n_b[mid]].x>=now)a[i].l=mid,r=mid-1;\n            else l=mid+1;\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(b[i].x==0)d[++tail]=i+n,ans[i+n]=1;\n        int l,r;\n        b[i].l=n+1;b[i].r=0;\n        for(l=1,r=n;l<=r;)\n        {\n            int mid=(l+r)>>1;\n            if(a[n_a[mid]].y<=b[i].y)b[i].r=mid,l=mid+1;\n            else r=mid-1;\n        }\n        int now=b[i].y-D;\n        for(l=1,r=n;l<=r;)\n        {\n            int mid=(l+r)>>1;\n            if(a[n_a[mid]].y>=now)b[i].l=mid,r=mid-1;\n            else l=mid+1;\n        }\n    }\n    for(;head<=tail;)\n    {\n        int x=d[head++];\n        int y=ans[x];\n        if(x>n)\n        {\n            x-=n;\n            int l=b[x].l,r=b[x].r;\n            for(int i=l;i<=r;i++)if(!ans[n_a[i]])ans[n_a[i]]=y+1,d[++tail]=n_a[i],sum++;\n        }\n        else\n        {\n            int l=a[x].l,r=a[x].r;\n            for(int i=l;i<=r;i++)if(!ans[n_b[i]+n])ans[n_b[i]+n]=y+1,d[++tail]=n_b[i]+n;\n        }\n        if(sum==n)break;\n    }\n    for(int i=1;i<=n;i++)if(!ans[i])printf(\"-1\\n\");else printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n\u5982\u679c\u9700\u8981\u6b63\u786e\u7684\u590d\u6742\u5ea6\uff0c\u90a3\u80af\u5b9a\u5c31\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u8fde\u8fb9\uff0c\u7136\u540e\u8dd1\u6700\u77ed\u8def\uff0c\u8fd9\u4e2a\u662f\u53ef\u4ee5\u8bc1\u660e\u6700\u591a\u53ea\u6709 $2n\\ \\log n$ \u6761\u8fb9\u7684\u3002\n\n\u524d\u9762\u7684\u66b4\u529b\u662f\u5b8c\u5168\u53ef\u4ee5\u5361\u5230 $\\operatorname O(n^2)$ \u7684\uff0c\u53ea\u662f\u5728\u6570\u636e\u6c34\u7684\u60c5\u51b5\u4e0b\u751a\u81f3\u53ef\u4ee5\u78be\u6807\u7b97\uff0c\u6bd5\u7adf\u7ebf\u6bb5\u6811\u81ea\u5e26\u5e38\u6570\u3002",
        "postTime": 1599273289,
        "uid": 73551,
        "name": "zjjws",
        "ccfLevel": 7,
        "title": "P4083 [USACO17DEC]A Pie for a Pie G"
    },
    {
        "content": "\u8bed\u8a00\u80fd\u529b\u8f83\u5dee\uff0c\u5c31\u628a\u6ce8\u91ca\u5199\u5728\u4ee3\u7801\u91cc\u5566\uff01\n\n$code$ :\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=200005;\nint N,D,INF,nxt[M],dis[M],Q[M],ans[M];\nstruct node{\n    int A,B,id;\n}a[M];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9') {if (ch=='-')f=-f;ch=getchar();}\n\twhile (ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nbool cmp1(const node &a, const node &b){return a.B<b.B;}\nbool cmp2(const node &a, const node &b){return a.A<b.A;}\nint get(int x){return nxt[x]==x?x:nxt[x]=get(nxt[x]);}\nint bin1(int L,int R,int x){\n    if (a[R].A<x) return -1;\n    while (L<=R){\n        int mid=(R-L>>1)+L;\n        if (a[mid].A<x) L=mid+1;else R=mid-1;\n    }\n    return L;\n}\nint bin2(int L,int R,int x){\n    if (a[L].A>x) return -1;\n    while (L<=R){\n        int mid=(R-L>>1)+L;\n        if (a[mid].A>x) R=mid-1;else L=mid+1;\n    }\n    return R;\n}\nint bin3(int L,int R,int x){\n    if (a[R].B<x) return -1;\n    while (L<=R){\n        int mid=(R-L>>1)+L;\n        if (a[mid].B<x) L=mid+1;else R=mid-1;\n    }\n    return L;\n}\nint bin4(int L,int R,int x){\n    if (a[L].B>x) return -1;\n    while (L<=R){\n        int mid=(R-L>>1)+L;\n        if (a[mid].B>x) R=mid-1;else L=mid+1;\n    }\n    return R;\n}\nvoid BFS(){//\u5012\u5237\u6700\u77ed\u8def\uff0c\u501f\u52a9\u4e8e\u5e76\u67e5\u96c6\u8fdb\u884c\u5408\u5e76\uff0c\u5426\u5219\u5355\u63a8\u592a\u6162\n\tsort(a+1,a+1+N,cmp1),sort(a+1+N,a+1+2*N,cmp2);\n\tmemset(dis,63,sizeof dis);INF=dis[0];\n\tint hed=0,til=0;\n    for (int i=1;i<=N&&!a[i].B;i++) Q[++til]=i,dis[i]=1;\n    for (int i=N+1;i<=2*N&&!a[i].A;i++) Q[++til]=i,dis[i]=1;\n    while (hed!=til){\n        int u=Q[++hed],L,R;\n        if (u<=N){//\u5b9e\u8d28\u662fElsie\u6536\u5230\u4e86Bessie\u9001\u6765\u7684\u4e00\u4e2a\u997cu\uff0c\u90a3\u4e48\u524d\u4e00\u6b65\u5c31\u662fElsie\u7684\u997c\u4e2d(Bessie\u770b)\u5728[a[u].A-D,a[u].A]\u5bfb\u627e\u4e00\u4e2a\u5408\u9002\u7684\u997c \n            L=bin1(N+1,2*N,a[u].A-D);\n            R=bin2(N+1,2*N,a[u].A);\n        }\n        else{//\u5230Beesie\u7684\u997c\u4e2d(Elsie\u770b)\u5728[a[u].B-D,a[u].B]\u5bfb\u627e\u4e00\u4e2a\u5408\u9002\u7684\u997c \n            L=bin3(1,N,a[u].B-D);\n            R=bin4(1,N,a[u].B);\n        }\n        if (L==-1 || R==-1) continue;\n        for (int i=L,father;i<=R;i=father+1){//\u4e3a\u4ec0\u4e48\u5e76\u67e5\u96c6\u53ef\u4ee5\u4f18\u5316\uff1f\u539f\u7406\u4f55\u5728\uff1f\u5176\u5b9e\u5c31\u662f\u6bcf\u4e2a\u8282\u70b9\u5f53\u4e14\u4ec5\u5f53\u4fee\u6b631\u6b21\u5373\u53ef\uff0c\u56e0\u4e3aBFS\u8d8a\u65e9\u904d\u5386\u7684\u8282\u70b9dis[]\u5c06\u4f1a\u8d8a\u5c0f \n            nxt[father=get(i)]=get(R);        //\u5e76\u67e5\u96c6\u8d77\u5230\u4e86next\u7684\u4f5c\u7528,\u6362\u4e00\u4e2a\u60f3\u6cd5\u89e3\u91ca\u5c31\u662f\u7ed3\u5408\u4e0a\u9762\u7684\u8d2a\u5fc3\u7684\u60f3\u6cd5,BFS\u8d8a\u65e9\u904d\u5386\u8d8a\u597d,\u4e5f\u53ef\u4ee5\u8bf4\u6bcf\u4e2a\u8282\u70b9\u904d\u53861\u6b21\u5c31OK,\n            if (dis[u]+1<dis[i]) dis[i]=dis[u]+1,Q[++til]=i;//\u90a3\u7b28\u86cb\u7684\u60f3\u6cd5\u5c31\u662f\u628a\u904d\u5386\u7684\u8282\u70b9\u7528bool\u7c7b\u578b\u6570\u7ec4\u6807\u8bb0,\u6807\u8bb0\u4e00\u4f1a\u513f,\u4f60\u4f1a\u53d1\u73b01\u8fde\u6210\u4e00\u7247\u4e86,\u4e3a\u4e86\u8df3\u8f6c\u52a0\u901f,\u6240\u4ee5\u501f\u52a9\u4e8e\u5e76\u67e5\u96c6\u4f18\u5316 \n        }\n    }\n    for (int i=1;i<=N;i++) ans[a[i].id]=dis[i]==INF?-1:dis[i];\n}\nint main(){\n    N=read(),D=read();\n    for (int i=1;i<=2*N;i++) a[i].A=read(),a[i].B=read(),a[i].id=i,nxt[i]=i;\n    BFS();\n    for (int i=1;i<=N;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1601894338,
        "uid": 370354,
        "name": "yxy666",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4083 \u3010[USACO17DEC]A Pie for a Pie G\u3011"
    },
    {
        "content": "~~\u4ee3\u780190\u5206\uff01\uff01\uff01~~\n\n**\u5efa\u56fe + \u6700\u77ed\u8def**\n\n\u5728\u8f93\u5165\u7684\u65f6\u5019 \u7279\u5224\u4e00\u4e0b\u4e24\u4e2a\u4eba\u7684\u7ec8\u6b62\u6761\u4ef6\n\n\uff08\u5373\uff1aBessie\u7279\u5224\u7b2c\u4e8c\u4e2a\u6570\u5b57 Elsie\u7279\u5224\u7b2c\u4e00\u4e2a\u6570\u5b57 \u5747\u5224\u65ad\u662f\u5426\u4e3a0\uff09\n\n~~\u2191\u2191\u2191\u4e0a\u9762\u662f\u4ece\u5e95\u90e8\u5f80\u4e0a\u641c\u7684\u51c6\u5907~~\n\n\u7136\u540e\u5c31\u662f\u5efa\u56fe build **\u8bb0\u5f97\u4fdd\u5b58\u7684\u662f\u7236\u8282\u70b9\u800c\u4e0d\u662f\u513f\u5b50\u8282\u70b9**\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u4ece\u56fe\u7684\u6700\u4f4e\u7aef\u5f00\u59cb\u641c \u4e5f\u5c31\u662f\u4ece\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u5f00\u59cb\u641c\u5168\u56fe\n\n\u5426\u5219\u6309\u7167\u9898\u76ee\u6a21\u62df\u7740\u641c\u4f1aTLE ~~\u522b\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684~~\n\n\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u7684dfs\u51fd\u6570\uff08\u6ed1\u7a3d\n\n\u5fd8\u4e86\u4e00\u70b9\uff1a\n\n\u5f00\u59cb\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6392\u5e8f \u800c\u4e14\u4e24\u4e2a\u4eba\u4e00\u5b9a\u8981\u6309\u7167\u4e0d\u540c\u7684\u987a\u5e8f\u6392\u5e8f\n\n\u800c\u4e14\u5728\u5efa\u56fe\u7684\u65f6\u5019 \u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9898\u76ee\u4e2d\u63d0\u4f9b\u7684 d \u6765\u786e\u5b9a\u533a\u95f4\n\n\u7136\u540e\u7528\u4e8c\u5206 \u627e\u51fa\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\n\n```cpp\nss=lower_bound(wb+1,wb+n+1,lo,com1())-wb;\n```\n\n\u6700\u540e\u8f93\u51fa\u5355\u6e90\u70b9\u8def\u5f84 dis \u5c31\u597d\u4e86~\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<queue> \n#define MAXN 100005\n#define LL long long\n#define INF 2147483640\n#define MOD 100000007\n#define free(s) freopen(\"s.txt\",\"r\",stdin);\n#define init(n) scanf(\"%d\",&n);\n#define ans() printf(\"%d\",ans);\n#define initt(n,m) scanf(\"%d%d\",&n,&m);\nusing namespace std;\nstruct pic{\n    int a,b,num;\n};\nbool cmp1(const pic &c,const pic &d){\n    return c.b<d.b;\n}\nbool cmp2(const pic &c,const pic &d){\n    return c.a<d.a;\n}\nstruct com1\n{\n    bool operator()(const pic &aa,const pic &bb)\n    {\n        return aa.b < bb.b;\n    }\n};\nstruct com2\n{\n    bool operator()(const pic &aa,const pic &bb)\n    {\n        return aa.a < bb.a;\n    }\n};\nstruct last{\n    int cc,deep;\n};\nconst int L=100005;\nbool vis[2*L];\npic wa[2*L],wb[2*L];\nint n,m,cnt[2*L],cntb[2*L],ans[L],head=1,tail=0,dis[2*L];\nvector<int>cet[2*L],p;\nqueue<int>q;\nvoid in()\n{\n    initt(n,m);\n    memset(dis,-1,sizeof(dis));\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&wa[i].a,&wa[i].b);\n        if(wa[i].b==0)\n\t\t{\n\t\t\tdis[i]=1;\n\t\t\tq.push(i);\n\t\t}\n        wa[i].num=i;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&wb[i].a,&wb[i].b);\n        if(wb[i].a==0)\n\t\t{\n\t\t\tdis[i+n]=1;\n\t\t\tq.push(i+n);\n\t\t}\n        wb[i].num=i+n;\n    }\n    sort(wa+1,wa+n+1,cmp2);\n    sort(wb+1,wb+n+1,cmp1);\n}\nvoid build()\n{\n    for(int i=1;i<=n;i++)\n    {\n        pic lo;\n        lo.a=lo.b=wa[i].b;\n        int ro=wa[i].b+m;\n        int ss=lower_bound(wb+1,wb+n+1,lo,com1())-wb;\n        for(int j=ss;j<=n;j++)\n        {\n            if(wb[j].b>ro)\n                break;\n        \tcet[wb[j].num].push_back(wa[i].num);\n        }\n    }\n    for(int i=n+1;i<=2*n;i++)\n    {\n        pic lo;\n        lo.a=lo.b=wb[i-n].a;\n        int ro=wb[i-n].a+m;\n        int ss=lower_bound(wa+1,wa+n,lo,com2())-wa;\n        for(int j=ss;j<=n;j++)\n        {\n            if(wa[j].a>ro)\n                break;\n        \tcet[wa[j].num].push_back(wb[i-n].num);\n        }\n    }\n}\nvoid bfs()\n{\n    while(!q.empty())\n\t{\n        int u=q.front();\n\t\tq.pop();\n        for(int i=0;i<cet[u].size();i++)\n\t\t{\n            int v=cet[u][i];\n            if(dis[v]!=-1)\n\t\t\t\tcontinue;\n            dis[v]=dis[u]+1;\n            q.push(v);\n        }\n    }\n}\nvoid print()\n{\n    for(int i=1;i<=n;i++)\n\t\tprintf(\"%d\\n\",dis[i]);\n}\nint main()\n{\n    in();\n    build();\n    bfs();\n\tprint();\n    return 0;\n}\n```",
        "postTime": 1525255136,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4083 \u3010[USACO17DEC]A Pie for a Pie\u3011"
    }
]