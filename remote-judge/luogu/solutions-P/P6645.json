[
    {
        "content": "\u9996\u5148\u94a6\u5b9a\u4e00\u4e2a\u7ed3\u8bba\uff1a\u6bcf\u6b21\u6c42\u89e3\u65f6\u6700\u591a\u53ea\u9700\u8981\u7528\u4e24\u4e2a\u533a\u95f4\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u5185\u8981\u6c42\u6700\u5927\u516c\u5171\u5b50\u533a\u95f4\u548c\u6700\u5c0f\u516c\u5171\u8d85\u533a\u95f4\u90fd\u6700\u5c0f\uff0c\u591a\u4f59\u7684\u533a\u95f4\u663e\u7136\u662f\u65e0\u7528\u7684\u3002\n\n\u5f53\u6240\u6709\u7684\u533a\u95f4\u7684\u6700\u5927\u516c\u5171\u5b50\u533a\u95f4\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u4e5f\u5373 $\\max\\{l\\} < \\min\\{r\\}$ \u65f6\uff0c\u80af\u5b9a\u9009\u7528\u4ee5\u4e0b\u4e24\u4e2a\u533a\u95f4\uff1a\n\n- \u4ee5 $\\max\\{l\\}$ \u4e3a\u5de6\u7aef\u70b9\u7684\uff0c\u53f3\u7aef\u70b9\u6700\u5c0f\u7684\u533a\u95f4\u3002\n- \u4ee5 $\\min\\{r\\}$ \u4e3a\u53f3\u7aef\u70b9\u7684\uff0c\u5de6\u7aef\u70b9\u6700\u5927\u7684\u533a\u95f4\u3002\n\n\u8fd9\u6837\u5728\u4fdd\u8bc1\u6700\u5927\u516c\u5171\u5b50\u533a\u95f4\u6700\u5c0f\u7684\u524d\u63d0\u4e0b\u4f7f\u6700\u5c0f\u516c\u5171\u8d85\u533a\u95f4\u6700\u5c0f\u3002\n\n\u5f53\u6240\u6709\u7684\u533a\u95f4\u7684\u6700\u5927\u516c\u5171\u5b50\u533a\u95f4\u4e3a\u7a7a\u65f6\uff0c\u5b58\u5728\u4e00\u4e2a $p$\uff0c\u4f7f $[1,p]$ \u548c $[p,10^6]$ \u90fd\u5b58\u5728\u5b8c\u6574\u533a\u95f4\u3002\n\n\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4fe1\u606f\u3002\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u5176\u4ee3\u8868\u7684\u533a\u95f4\u4e3a $[l,r]$\uff0c\u7ef4\u62a4\u4e09\u4e2a\u4fe1\u606f\uff1a\n\n- \u5de6\u7aef\u70b9\u5c5e\u4e8e $[l,r]$ \u533a\u95f4\u4e2d\u7684\uff0c\u6700\u5c0f\u7684\u53f3\u7aef\u70b9\u3002\n- \u53f3\u7aef\u70b9\u5c5e\u4e8e $[l,r]$ \u533a\u95f4\u4e2d\u7684\uff0c\u6700\u5927\u7684\u5de6\u7aef\u70b9\u3002\n- \u5206\u5272\u70b9 $p$ \u5c5e\u4e8e $[l,r]$ \u533a\u95f4\u65f6\u7684\u7b54\u6848\u3002\u4e5f\u5373 $\\min\\limits_{i=l}^r\\{R(\\operatorname{sufL}(p))-L(\\operatorname{preR}(p))\\}$\u3002\n\n\u7136\u540e\u5728\u6bcf\u6b21\u52a0\u5165\u548c\u5220\u9664\u533a\u95f4\u65f6\uff0c\u4f7f\u7528 multiset \u6765\u7ef4\u62a4\u533a\u95f4\uff0c\u5e76\u5728\u7ebf\u6bb5\u6811\u4e0a\u4f5c\u76f8\u5e94\u7ef4\u62a4\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MAXN 1000005\n#define INF 0x3f3f3f3f\n#define ls(p) (p<<1)\n#define rs(p) (p<<1|1)\nconst int maxn=1000000;\nmultiset<int> L,R,mL[MAXN],mR[MAXN];\nint sum[MAXN<<2],le[MAXN<<2],ri[MAXN<<2];\ninline void push_up(int p)\n{\n\tle[p]=max(le[ls(p)],le[rs(p)]);\n\tri[p]=min(ri[ls(p)],ri[rs(p)]);\n\tsum[p]=min({sum[ls(p)],sum[rs(p)],ri[rs(p)]-le[ls(p)]});\n}\ninline void build(int p,int l,int r)\n{\n\tif(l==r) \n\t{\n\t\tle[p]=-INF,ri[p]=INF,sum[p]=2*INF;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(ls(p),l,mid);\n\tbuild(rs(p),mid+1,r);\n\tpush_up(p);\n}\ninline void modify(int x,int l,int r,int p)\n{\n\tif(l==r)\n\t{\n\t\tif(!mR[l].empty()) ri[p]=(*mR[l].begin());\n\t\telse ri[p]=INF;\n\t\tif(!mL[r].empty()) le[p]=(*mL[r].rbegin());\n\t\telse le[p]=-INF;\n\t\tsum[p]=ri[p]-le[p];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x<=mid) modify(x,l,mid,ls(p));\n\telse modify(x,mid+1,r,rs(p));\n\tpush_up(p);\n}\n\nchar opt[15];\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tbuild(1,1,maxn);\n\twhile(n--)\n\t{\n\t\tint l,r;\n\t\tscanf(\"%s%d%d\",opt,&l,&r);\n\t\tif(opt[0]=='A')\n\t\t{\n\t\t\tL.insert(l),R.insert(r);\n\t\t\tmL[r].insert(l),mR[l].insert(r);\n\t\t\tmodify(l,1,maxn,1),modify(r,1,maxn,1);\n\t\t}\n\t\tif(opt[0]=='R')\n\t\t{\n\t\t\tL.erase(L.find(l)),R.erase(R.find(r));\n\t\t\tmL[r].erase(mL[r].find(l)),mR[l].erase(mR[l].find(r));\n\t\t\tmodify(l,1,maxn,1),modify(r,1,maxn,1);\n\t\t}\n\t\tif((*L.rbegin())<(*R.begin()))\n\t\t\tprintf(\"%d\\n\",(*mR[*L.rbegin()].begin())-(*mL[*R.begin()].rbegin()));\n\t\telse\n\t\t\tprintf(\"%d\\n\",sum[1]);\n\t}\n}\n```",
        "postTime": 1662420629,
        "uid": 123026,
        "name": "\u65f6\u5f8b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6645 \u3010[CCO2020] Interval Collection\u3011"
    }
]