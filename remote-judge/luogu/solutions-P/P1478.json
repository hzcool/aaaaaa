[
    {
        "content": "# _~~**\u6ed1\u7a3d\u9898\u89e3\u7b2c\u4e8c\u5f39**~~_\n\u5927\u5bb6\u597d\uff0c\u6211\u662f\u4e00\u4e2a\u5165\u95e8\u4e00\u5e74\u8fd8\u5728\u5165\u95e8\u7684\u849f\u84bb\u3002\n\n\u4eca\u5929\u5929\u6c14\u4e0d\u592a\u597d\uff0c\u6211\u51b3\u5b9a\u56de\u65b0\u624b\u6751\u770b\u770b\u3002\n\n\u7136\u540e\u6211\u5c31\u968f\u624b\u70b9\u5f00\u4e86\u4e00\u4e2a\u9898\u3002\n\n\u770b\u5230\u9898\u9762\u4e00\u5f00\u59cb\u6211\u6709\u70b9\u60ca\u2026\u2026\u73b0\u5728\u65b0\u624b\u6751\u5c31\u5f00\u59cb\u7528\u80cc\u5305\u4e86\u5417\uff1f\n\n\u7136\u800c\u4e8b\u540e\u6211\u53d1\u73b0\u8fd9\u4e2a\u9898\u597d\u50cf\u5e76\u6ca1\u6709\u60f3\u8c61\u4e2d\u7684\u90a3\u4e48\u96be\u2026\u2026\n\n\u7136\u540e\u6211\u5c31\u770b\u4e86\u770b\u6211\u5f53\u65f6\u4ea4\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nint n,s,a,b,c,d,e;\nint p[5001][2];\nvoid qkst(int l,int r){\n\tint i,j,md;\n\ti=l;\n\tj=r;\n\tmd=p[(l+r)/2][1];\n\twhile(i<=j){\n\t\twhile(p[i][1]<md) i++;\n\t\twhile(p[j][1]>md) j--;\n\t\tif(i<=j){\n\t\t\tint tm=p[i][1];\n\t\t\tp[i][1]=p[j][1];\n\t\t\tp[j][1]=tm;\n\t\t\tint tp=p[i][0];\n\t\t\tp[i][0]=p[j][0];\n\t\t\tp[j][0]=tp;\n\t\t\ti++;j--;\n\t\t}\n\t}\n\tif(l<j) qkst(l,j);\n\tif(i<r) qkst(i,r);\n}\nint main(){\n\tmemset(p,0,sizeof(p));\n\te=0;\n\tcin>>n>>s>>a>>b;\n\tc=a+b;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>p[i][0]>>p[i][1];\n\t}\n\tqkst(1,n);\n\tfor(int i=1;i<=n;i++){\n\t\tif(s>=p[i][1]&&c>=p[i][0]){\n\t\t\ts-=p[i][1];\n\t\t\te++;\n\t\t\tcontinue;\n\t    }\n\t\tif(s<p[i][1]){\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout<<e;\n}\n```\nemmmmmm\u2026\u2026\n\n\u6211\u5c45\u7136\u5f53\u5e74\u5c31\u4f1a\u7528\u8d2a\u5fc3\u4e86\u2026\u2026\u6392\u5e8f\u7528\u7684\u8fd8\u662f\u5feb\u6392\u2026\u2026\u6211\u73b0\u5728\u5feb\u6392\u90fd\u5fd8\u5f97\u4e00\u5e72\u4e8c\u51c0\u4e86\u2026\u2026\n\n\u6240\u4ee5\u8fd9\u9898\u53c8\u6fc0\u8d77\u4e86\u6211\u4e00\u9898\u591a\u89e3\u7684\u6b32\u671b\u3002\n\n\u90a3\u4e48\u4e0b\u9762\u5c31\u8ba9\u6211\u6765\u5206\u4eab\u4e00\u4e0b\u6211\u60f3\u5230\u7684\u51e0\u79cd\u529e\u6cd5\n\n\uff08\u4e0a\u4e00\u7248\u7531\u4e8e\u5199\u4e8615\u7248\u4ee3\u7801\uff0c\u5bfc\u81f4\u7bc7\u5e45\u8fc7\u957f\uff0c\u4e3a\u4e86\u7cbe\u7b80\u9898\u89e3\uff0c\u6211\u53ea\u597d\u5c06\u8bb8\u591a\u77e5\u8bc6\u70b9\u7565\u8fc7\u53bb\u6216\u8005\u7c97\u8bb2\u3002\u8fd9\u6b21\u4e3a\u4e86\u6539\u5584\u5927\u5bb6\u7684\u5b66\u4e60\u4f53\u9a8c\uff0c\u4ee5\u4e0b\u77e5\u8bc6\u70b9\u90fd\u4f1a\u5c3d\u529b\u7ec6\u8bb2\uff09\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n### \u5f80\u671f\u94fe\u63a5\uff1a\n\u7b2c\u4e00\u5f39\uff1a\u4e00\u4e2a\u7ea2\u9898\u5e26\u4f60\u4e86\u89e3\u7eff\uff08\u9ec4\uff09\u9898\u77e5\u8bc6\u70b9 ([\u4f20\u9001\u95e8](https://www.luogu.org/blog/funny-talk/funny-solution-p1427))\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n------------\n## 1.\u641c\u7d22\n\u641c\u7d22\u662f\u4e00\u79cd\u5f88\u57fa\u672c\u7684\u7b97\u6cd5\uff0c\u5f88\u591a\u7b97\u6cd5\u6216\u591a\u6216\u5c11\u90fd\u662f\u5efa\u7acb\u5728\u641c\u7d22\u7684\u57fa\u7840\u4e0a\u7684\u3002\u641c\u7d22\u601d\u8def\u7b80\u5355\uff0c\u9002\u7528\u6027\u5e7f\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u65f6\u95f4\u6216\u7a7a\u95f4\u7684\u9650\u5236\u7684\u8bdd\uff0c\u57fa\u672c\u4e0a\u6ca1\u6709\u641c\u7d22\u89e3\u4e0d\u4e86\u7684\u9898\u3002\n\n\u4f46\u662f\u641c\u7d22\u7684\u7f3a\u70b9\u4e5f\u540c\u6837\u660e\u663e\uff0c\u7531\u4e8e\u5b83\u8fc7\u4e8e\u57fa\u7840\uff0c\u96be\u514d\u6709\u70b9\u7c97\u679d\u5927\u6761\uff0cDFS\u5bb9\u6613TLE\uff08\u8fd0\u884c\u8d85\u65f6\uff09\uff0cBFS\u5bb9\u6613MLE\uff08\u8fd0\u884c\u5185\u5b58\u8d85\u7a7a\u95f4\uff09\uff0c\u6709\u65f6DFS\u8fd8\u9762\u4e34\u7740\u9012\u5f52\u5c42\u6570\u8fc7\u591a\u7206\u6808\u7684\u98ce\u9669\u2026\u2026\n\n\u6211\u4eec\u5728\u8fd9\u91cc\u91cd\u70b9\u8bb2DFS\u641c\u7d22\u4f18\u5316\uff0cBFS\u505a\u6cd5\u6682\u4e14\u5148\u4e0d\u8bb2\u4e86\u3002\n### \uff081\uff09\u7b2c\u4e00\u7248:\u65e0\u4f18\u5316\u5199\u6cd5\n\u641c\u7d22\u4e4b\u6240\u4ee5\u53ef\u4ee5\u88ab\u5e7f\u6cdb\u5730\u88ab\u4f7f\u7528\u4e8e\u5404\u79cd\u9898\u76ee\uff0c\u5c31\u662f\u56e0\u4e3a\u5b83\u601d\u8def\u7b80\u5355\uff0c\u5b9e\u73b0\u5bb9\u6613\u3002\n\n\u641c\u7d22\u7684\u57fa\u672c\u601d\u8def\u5c31\u662f\u679a\u4e3e\uff0c\u679a\u4e3e\u53ef\u80fd\u51fa\u73b0\u7684\u5404\u79cd\u60c5\u51b5\uff0c\u7136\u540e\u4ece\u4e2d\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u7ed3\u679c\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u6734\u7d20\u7684\u641c\u7d22\u65b9\u6cd5\u5c31\u662fDFS\u641c\u7d22\u6bcf\u4e2a\u82f9\u679c\uff0c\u6bcf\u4e2a\u82f9\u679c\u53ef\u5206\u652f\u51fa\u4e24\u4e2a\u641c\u7d22\u5b50\u6811\uff1a\u6458\u8fd9\u4e2a\u82f9\u679c\u6216\u8005\u4e0d\u6458\u8fd9\u4e2a\u82f9\u679c\u3002\u6bd4\u5982\u8fd9\u6837\u7684\u4e00\u68f5\u641c\u7d22\u6811\uff1a\n![\u641c\u7d22\u6811\u56fe\u793a](https://cdn.luogu.com.cn/upload/pic/41182.png)\n\n\u90a3\u6211\u4eec\u7684\u4ee3\u7801\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\uff1a\n\n\u6211\u4eec\u4f7f\u7528\u9012\u5f52\u51fd\u6570\uff0c\u4ece\u7b2c\u4e00\u4e2a\u82f9\u679c\u5f00\u59cb\u9012\u5f52\u8bbf\u95ee\uff0c\u5982\u679c\u8fd9\u4e2a\u82f9\u679c\u53ef\u4ee5\u53d6\uff08\u9ad8\u5ea6\u591f\u5f97\u5230\u6216\u8005\u5f53\u524d\u5269\u4e0b\u7684\u4f53\u529b\u8fd8\u591f\u7528\uff09\uff0c\u5219\u9012\u5f52\u641c\u7d22\u53d6\u8fd9\u4e2a\u82f9\u679c\u7684\u5b50\u6811\u3002\u7136\u540e\u65e0\u8bba\u80fd\u4e0d\u80fd\u53d6\u90fd\u9012\u5f52\u641c\u7d22\u4e0d\u53d6\u8fd9\u4e2a\u82f9\u679c\u7684\u5b50\u6811\u3002\n\n\u5f53\u641c\u7d22\u5230\u53f6\u5b50\u8282\u70b9\u4e5f\u5c31\u662f\u7b2cn+1\u4e2a\u82f9\u679c\uff08\u8fd9\u4e2a\u82f9\u679c\u5e76\u4e0d\u5b58\u5728\uff09\u7684\u65f6\u5019\uff0c\u8fd4\u56de0\u3002\u5bf9\u4e8e\u5176\u4ed6\u82f9\u679c\u8282\u70b9\uff0c\u8fd4\u56de\u4e24\u4e2a\u641c\u7d22\u5b50\u6811\u8fd4\u56de\u503c\u4e2d\u7684\u8f83\u5927\u503c\uff08\u53ea\u6709\u4e00\u4e2a\u5219\u8fd4\u56de\u90a3\u4e2a\u503c\uff09\u3002\n\n\u90a3\u4e48\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u8fd4\u56de\u503c\u8868\u793a\u8fd9\u4e2a\u82f9\u679c\u7684\u641c\u7d22\u5b50\u6811\u91cc\u7684\u6700\u5927\u80fd\u53d6\u7684\u82f9\u679c\u6570\u91cf\u3002\n\n\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u8fd9\u4efd\u4ee3\u7801\uff08\u8fd9\u4efd\u4ee3\u7801\u5e76\u4e0d\u80fd\u901a\u8fc7\uff09\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nint n,s,a,b,ans;\nint xi[5005],yi[5005];\nint dfs(int num,int rest){\n    if(num>n) return 0;//\u5982\u679c\u5230\u4e86\u7b2cn+1\u4e2a\u82f9\u679c,\u5c31\u8bf4\u660eDFS\u9012\u5f52\u5230\u5e95\u4e86\n    int maxn=0;\n    if(xi[num]<=a+b&&rest>=yi[num]){\n        maxn=dfs(num+1,rest-yi[num])+1>dfs(num+1,rest)?dfs(num+1,rest-yi[num])+1:dfs(num+1,rest);//dfs()+1\u8868\u793a\u53d6\u5f53\u524d\u641c\u7d22\u5230\u7684\u82f9\u679c\uff0c\u56e0\u6b64\u6458\u5230\u82f9\u679c\u7684\u603b\u6570+1\n    }//\u8fd4\u56de\u4e24\u4e2a\u641c\u7d22\u5b50\u6811\u91cc\u6700\u5927\u503c\u7684\u8f83\u5927\u503c\n    return maxn;\n}\nint main(){\n    cin>>n>>s>>a>>b;\n    for(int i=1;i<=n;i++){\n        cin>>xi[i]>>yi[i];\n    }\n    cout<<dfs(1,s);//\u4ece\u7b2c\u4e00\u4e2a\u82f9\u679c\u5f00\u59cb\u9012\u5f52\u6c42\u89e3\n    return 0;\n} \n```\n\u4f46\u662f\u8fd9\u4e2a\u4ee3\u7801\u5982\u679c\u4f60\u63d0\u4ea4\u7684\u8bdd\uff0c\u5c31\u4f1a\u5b8c\u7f8e\u7684TLE\u6389\u3002\u6211\u4eec\u770b\u4e00\u4e0b\u8fd9\u4e2a\u9898\u7684\u6570\u636e\u8303\u56f4\uff0cn\u6700\u5927\u67095000\u4e2a\uff0c\u6bcf\u4e2a\u82f9\u679c\u6709\u53d6\u6216\u4e0d\u53d6\u4e24\u4e2a\u9009\u62e9\uff0c\u90a3\u4e48\u641c\u7d22\u5b8c\u6240\u6709\u7684\u5b50\u6811\u5dee\u4e0d\u591a\u5c31\u662f$2^{5000}$\u6b21\u8fd0\u7b97\u3002\u800c\u8ba1\u7b97\u673a\u4e00\u79d2\u53ea\u80fd\u8fd0\u7b97\u5927\u7ea6$10^7$\u6b21\u5de6\u53f3\uff0c\u5f53\u7136\u4f1aTLE\u4e86\u3002\n\n\u8fd9\u79cd\u6700\u6734\u7d20\u7684\u641c\u7d22\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u5dee\u4e0d\u591a\u662f$O(2^n)$\u7684\u2026\u2026\u51e0\u4e4e\u7edd\u5927\u90e8\u5206\u7684\u9898\u76ee\u7684\u8f83\u5927\u7684\u6570\u636e\u90fd\u8fc7\u4e0d\u53bb\u2026\u2026\u90a3\u4e48\u6211\u4eec\u6709\u4ec0\u4e48\u597d\u529e\u6cd5\u5417\uff1f\u786e\u5b9e\u5b58\u5728\u65b9\u6cd5\u2014\u2014\u526a\u679d\u548c\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n### \uff082\uff09\u7b2c\u4e8c\u7248:\u4f18\u5316\u5199\u6cd5\n\u6240\u8c13\u526a\u679d\uff0c\u5c31\u662f\u5c06\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\u7684\u641c\u7d22\u5b50\u6811\u526a\u53bb\uff0c\u4ece\u800c\u51cf\u5c11\u641c\u7d22\u6b21\u6570\uff0c\u63d0\u9ad8\u8fd0\u884c\u901f\u5ea6\u7684\u4e00\u79cd\u641c\u7d22\u4f18\u5316\u65b9\u6cd5\u3002\u526a\u679d\u5bf9\u4e8eDFS\u7684\u4f18\u5316\u6548\u679c\u6bd4\u8f83\u660e\u663e\uff0c\u4e0a\u9762\u4e00\u7248\u4ee3\u7801\u7684\u8fd0\u884c\u65f6\u95f4\u8dd1\u5230\u4e863500\u591a\u6beb\u79d2\uff0c\u4f46\u662f\u4f18\u5316\u540e113\u6beb\u79d2\u5c31\u8dd1\u5b8c\u4e86\uff08\u867d\u7136\u8fd9\u6837\u8fd8\u4e0d\u662f\u6700\u5feb\uff09\u3002\u90a3\u8fd990%\u5de6\u53f3\u7684\u65f6\u95f4\u662f\u600e\u4e48\u4f18\u5316\u6389\u7684\u5462\uff1f\n\n\u9996\u5148\u5148\u4e0d\u53bb\u8003\u8651\u526a\u679d\u90a3\u4e48\u96be\u7684\u4e1c\u897f\uff0c\u5927\u5bb6\u6709\u6ca1\u6709\u6ce8\u610f\u5230\u4e0a\u9762\u7684\u4ee3\u7801\u91cc\u6709\u8fd9\u4e48\u4e00\u884c\uff1a\n```cpp\nmaxn=dfs(num+1,rest-yi[num])+1>dfs(num+1,rest)?dfs(num+1,rest-yi[num])+1:dfs(num+1,rest);\n```\n\u6211\u4eec\u8981\u77e5\u9053\uff0c\u5982\u679c\u60f3\u5f97\u5230\u4e00\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u9996\u5148\u5c31\u8981\u8fd0\u884c\u4e00\u904d\u8fd9\u4e2a\u51fd\u6570\u3002\u590d\u6742\u5ea6\u5982\u6b64\u9ad8\u7684\u51fd\u6570\u5728\u6bd4\u8f83\u548c\u8c03\u7528\u503c\u7684\u65f6\u5019\u5206\u522b\u8fd0\u7b97\u4e86\u4e00\u6b21\uff0c\u5c31\u76f8\u5f53\u4e8e\u7ed9\u641c\u7d22\u6811\u51ed\u7a7a\u52a0\u4e86\u597d\u591a\u65e0\u7528\u7684\u641c\u7d22\u5b50\u6811\u3002\u90a3\u4e48\u6211\u4eec\u80fd\u4e0d\u80fd\u7528\u4e24\u4e2a\u4e2a\u53d8\u91cf\u6765\u5b58\u50a8$dfs(num+1,rest-yi[num])$\u548c$dfs(num+1,rest)$\u7684\u503c\u5462\uff1f\u8fd9\u6837\u7ecf\u8fc7\u6d4b\u8bd5\u53ef\u4ee5\u8282\u7701\u5927\u7ea630%\u7684\u65f6\u95f4\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nint n,s,a,b,ans;\nint xi[5005],yi[5005];\nint dfs(int num,int rest){\n    if(num>n) return 0;\n    int maxn=dfs(num+1,rest);\n    if(xi[num]<=a+b&&rest>=yi[num]){\n        int t=dfs(num+1,rest-yi[num])+1;\n        maxn=t>maxn?t:maxn;\n    }\n    return maxn;\n}\nint main(){\n    cin>>n>>s>>a>>b;\n    for(int i=1;i<=n;i++){\n        cin>>xi[i]>>yi[i];\n    }\n    cout<<dfs(1,s);\n    return 0;\n} \n```\n\u4f46\u662f\u8fd9\u8fd8\u8fdc\u8fdc\u4e0d\u591f\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u65f6\u95f4\u662f\u4ece\u54ea\u91cc\u4f18\u5316\u51fa\u6765\u7684\u5462\uff1f\u8fd9\u91cc\u5c31\u8981\u7528\u5230\u8bb0\u5fc6\u5316\u641c\u7d22\u4e86\u3002\n\n\u6211\u4eec\u56de\u60f3\u4e00\u4e0b\u521a\u624d\u7684\u6539\u52a8\uff0c\u5c31\u662f\u7528\u4e24\u4e2a\u53d8\u91cf\u5b58\u50a8\u4e86\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4ece\u800c\u907f\u514d\u4e86\u51fd\u6570\u56e0\u4e3a\u4e24\u6b21\u8c03\u7528\u800c\u505a\u65e0\u7528\u529f\u3002\u90a3\u4e48\u6211\u4eec\u81ea\u7136\u800c\u7136\u5730\u60f3\u5230\uff0c\u5047\u5982\u67d0\u4e2a\u51fd\u6570\u53ef\u80fd\u4ee5\u76f8\u540c\u7684\u53c2\u91cf\u88ab\u8c03\u7528\u591a\u6b21\u7684\u8bdd\uff0c\u90a3\u4e48\u591a\u8c03\u7528\u7684\u8fd9\u51e0\u6b21\u4e0d\u5c31\u4e5f\u662f\u6d6a\u8d39\u4e86\u5417\uff1f\u90a3\u4e48\u6709\u6ca1\u6709\u8fd9\u6837\u7684\u60c5\u51b5\u5462\uff1f\u6709\u7684\u3002\u5927\u5bb6\u5982\u679c\u5728\u6bcf\u4e2aDFS\u51fd\u6570\u7684\u6700\u540e\u52a0\u4e00\u53e5\uff1a\n```cpp\ncout<<\"num:\"<<num<<\" rest:\"<<rest<<endl;\n```\n\u5c31\u4f1a\u53d1\u73b0\u5728\u8f93\u51fa\u7684\u6bcf\u6b21\u8c03\u7528\u7684\u51fd\u6570\u4e2d\uff0c\u6709\u5f88\u591a\u6b21\u8c03\u7528\u7684num\u548crest\u662f\u76f8\u540c\u7684\uff0c\u8fd9\u5c31\u8bf4\u660e\u6211\u4eec\u505a\u4e86\u5f88\u591a\u65e0\u7528\u529f\u3002\u90a3\u4e48\u600e\u4e48\u4f18\u5316\u5462\uff1f\u8fd9\u65f6\u5019\u8bb0\u5fc6\u5316\u641c\u7d22\u5c31\u95ea\u4eae\u767b\u573a\u4e86\uff1a\n\n\u6240\u8c13\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u5c31\u662f\u5c06\u6bcf\u4e2a\u4e0d\u540c\u53c2\u91cf\u7684\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5b58\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u5f53\u518d\u6b21\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u7528\u518d\u6b21\u8d39\u65f6\u95f4\u8ba1\u7b97\u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e86\u3002\u8fd9\u91cc\u6211\u4eec\u8fd8\u662f\u7ed3\u5408\u4ee3\u7801\u8bb2\u4e00\u4e0b\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nint n,s,a,b,ans;\nint xi[5005],yi[5005];\nbool visit[5005][1001];//\u5b58\u50a8\u662f\u5426\u8bbf\u95ee\u8fc7\u8c03\u7528\u8fd9\u4e24\u4e2a\u53c2\u91cf\u7684\u51fd\u6570\nint mem[5005][1001];//\u5b58\u50a8\u8c03\u7528\u8fd9\u4e24\u4e2a\u53c2\u91cf\u7684\u51fd\u6570\u7684\u8fd4\u56de\u503c\nint dfs(int num,int rest){\n    if(num>n) return 0;\n    if(visit[num][rest]) return mem[num][rest];//\u5982\u679c\u8c03\u7528\u8fd9\u4e24\u4e2a\u53c2\u91cf\u7684\u51fd\u6570\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u4e4b\u524d\u5b58\u50a8\u7684\u503c\u5373\u53ef\n    visit[num][rest]=true;\n    int maxn=dfs(num+1,rest);\n    if(xi[num]<=a+b&&rest>=yi[num]){\n        int  t=dfs(num+1,rest-yi[num])+1;\n        maxn=t>maxn?t:maxn;\n    }\n    return mem[num][rest]=maxn;//\u8fd4\u56de\u503c\u7684\u540c\u65f6\u5b58\u50a8\u8fd9\u6b21\u8fd0\u7b97\u7684\u8fd4\u56de\u503c\n}\nint main(){\n    cin>>n>>s>>a>>b;\n    for(int i=1;i<=n;i++){\n        cin>>xi[i]>>yi[i];\n    }\n    cout<<dfs(1,s);\n    return 0;\n} \n\n```\n\u8fd9\u6837\u7684\u8bdd\u5c31\u51cf\u5c11\u4e86\u5f88\u591a\u6b21\u4e0d\u5fc5\u8981\u7684\u8bbf\u95ee\u548c\u8ba1\u7b97\uff0c\u5927\u5927\u52a0\u5feb\u4e86\u8fd0\u884c\u901f\u5ea6\u3002\n\n\u63a5\u4e0b\u6765\u8bb2\u526a\u679d\u3002\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u80fd\u591f\u91c7\u5230\u7684\u82f9\u679c\uff0c\u6211\u4eec\u641c\u7d22\u5b83\u4eec\u53ea\u4f1a\u767d\u767d\u6d6a\u8d39\u65f6\u95f4\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u82f9\u679c\u6392\u9664\u6389\uff0c\u8fd9\u6837\u5c31\u4f7f\u5f97\u641c\u7d22\u5b50\u6811\u88ab\u7f29\u5c0f\u4e86\u3002\u8fd9\u5c31\u662f\u526a\u679d\u3002\n\n\u6211\u4eec\u600e\u4e48\u624d\u80fd\u907f\u514d\u641c\u7d22\u5230\u8fd9\u4e9b\u82f9\u679c\u88ab\u641c\u7d22\u5230\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u7684\u82f9\u679c\u6309\u7167\u9ad8\u5ea6\u4ece\u77ee\u5230\u9ad8\u6392\u5e8f\uff08\u6392\u5e8f\u7684\u77e5\u8bc6\u5728\u7b2c\u4e00\u5f39\u91cc\u8bb2\u8fc7\uff0c\u4e0d\u4f1a\u7684\u540c\u5b66\u53ef\u4ee5\u53bb\u770b\u4e00\u4e0b\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5f53\u6211\u4eec\u641c\u7d22\u5230\u4e00\u4e2a\u591f\u4e0d\u5230\u7684\u82f9\u679c\u65f6\uff0c\u65e0\u8bba\u6211\u4eec\u518d\u5f80\u4e0b\u641c\u7d22\u591a\u4e45\uff0c\u6211\u4eec\u90fd\u4e0d\u4f1a\u518d\u641c\u7d22\u5230\u53ef\u4ee5\u591f\u5f97\u5230\u7684\u82f9\u679c\u4e86\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5 $return \\ 0$ \u4e86\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#include<algorithm> \nusing namespace std;\nint n,s,a,b,ans;\nbool visit[5005][1001];\nint mem[5005][1001];\nstruct apple{\n    int xi,yi;\n}ap[5005];\nint dfs(int num,int rest){\n    if(num>n||ap[num].xi>a+b) return 0;//\u5f53\u641c\u7d22\u5230\u591f\u4e0d\u5230\u7684\u82f9\u679c\u540e\uff0c\u5c31\u4e0d\u518d\u7ee7\u7eed\u5411\u4e0b\u641c\u7d22\u4e86\n    if(visit[num][rest]) return mem[num][rest];\n    visit[num][rest]=true;\n    int maxn=dfs(num+1,rest);\n    if(ap[num].xi<=a+b&&rest>=ap[num].yi){\n        int  t=dfs(num+1,rest-ap[num].yi)+1;\n        maxn=t>maxn?t:maxn;\n    }\n    return mem[num][rest]=maxn;\n}\nint cmp(apple x,apple y){\n    return x.xi<y.xi;\n}\nint main(){\n    cin>>n>>s>>a>>b;\n    for(int i=1;i<=n;i++){\n        cin>>ap[i].xi>>ap[i].yi;\n    }\n    sort(ap+1,ap+n+1,cmp);//\u6309\u7167\u9ad8\u5ea6\u4ece\u77ee\u5230\u9ad8\u6392\u5e8f\n    cout<<dfs(1,s);\n    return 0;\n} \n```\n\u8fd9\u79cd\u65b9\u6cd5\u6bd4\u8d77\u526a\u679d\u524d\uff0c\u53c8\u5feb\u4e86\u5927\u7ea615%\u3002\n\n\n------------\n## 2.\u52a8\u6001\u89c4\u5212\u2014\u2014\u80cc\u5305\n\u6211\u4eec\u505a\u9898\u4e0d\u80fd\u53ea\u9760\u641c\u7d22\uff0c\u4e16\u754c\u4e0a\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u4e5f\u4e0d\u662f\u53ea\u6709\u641c\u7d22\u8fd9\u4e00\u79cd\u7b97\u6cd5\uff0c\u8981\u4e0d\u7136\u8fd8\u8981OI\u5e72\u5417\uff1f\n\n\u4e8e\u662f\uff0c\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u641c\u7d22\u95ee\u9898\u5c31\u88ab\u4f18\u5316\u4e86\uff0c\u5e76\u4e14\u5f62\u6210\u4e86\u4e00\u7c7b\u65b0\u7684\u7b97\u6cd5\uff1a\u52a8\u6001\u89c4\u5212\u3002\u52a8\u6001\u89c4\u5212\u7684\u79cd\u7c7b\u5f88\u591a\uff1a\u6709\u7ebf\u6027\u52a8\u6001\u89c4\u5212\u3001\u591a\u7ef4\u52a8\u6001\u89c4\u5212\u3001\u533a\u95f4\u52a8\u6001\u89c4\u5212\u7b49\u3002\u6211\u4eec\u8fd9\u91cc\u5148\u53ea\u8bb2\u4e00\u7c7b\u7279\u6b8a\u7684\u591a\u7ef4\u52a8\u6001\u89c4\u5212\uff1a\u80cc\u5305\u95ee\u9898\u3002\n\n\u52a8\u6001\u89c4\u5212\u6700\u6838\u5fc3\u7684\u601d\u60f3\u5c31\u662f\u72b6\u6001\u8f6c\u79fb\u3002\u5373\u4efb\u4f55\u72b6\u6001\u7684\u89e3\u90fd\u53ef\u4ee5\u5efa\u7acb\u5728\u5df2\u77e5\u72b6\u6001\u7684\u57fa\u7840\u4e0a\u5feb\u901f\u6c42\u51fa\u3002\u8fd9\u662f\u4e0d\u662f\u548c\u8bb0\u5fc6\u5316\u641c\u7d22\u6709\u4e9b\u7c7b\u4f3c\u5462\uff1f\u4e8b\u5b9e\u4e0a\u52a8\u6001\u89c4\u5212\u548c\u8bb0\u5fc6\u5316\u641c\u7d22\u771f\u7684\u5dee\u4e0d\u591a\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22\u9700\u8981\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\u50a8\u4e0d\u540c\u53c2\u91cf\u7684\u9012\u5f52\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u52a8\u6001\u89c4\u5212\u9700\u8981\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u6570\u7ec4\u6765\u5b58\u50a8\u5df2\u6c42\u89e3\u7684\u72b6\u6001\u7684\u89e3\u3002\u800c\u52a8\u6001\u89c4\u5212\u76f8\u6bd4\u641c\u7d22\u7684\u9ad8\u660e\u4e4b\u5904\u5c31\u5728\u4e8e\uff0c\u52a8\u6001\u89c4\u5212\u53ef\u4ee5\u5c06\u641c\u7d22\u6709\u5411\u5316\uff0c\u800c\u4e0d\u662f\u6f2b\u65e0\u76ee\u7684\u5730\u904d\u5386\u641c\u7d22\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u72b6\u6001\uff0c\u76f8\u5f53\u4e8e\u81ea\u52a8\u526a\u679d\u3002\n\n\u6211\u4eec\u524d\u9762\u8bb2\u8fc7\uff0c\u52a8\u6001\u89c4\u5212\u5b9e\u8d28\u4e0a\u662f\u5bf9\u641c\u7d22\u7684\u4f18\u5316\uff0c\u4e4b\u524d\u6211\u4eec\u641c\u7d22\uff0c\u662f\u4ece\u524d\u5411\u540e\u9012\u5f52\u641c\u7d22\uff0c\u6839\u636e\u4e4b\u540e\u72b6\u6001\u8fd4\u56de\u7684\u503c\u6765\u51b3\u5b9a\u5411\u524d\u8fd4\u56de\u4ec0\u4e48\u503c\u3002\u800c\u52a8\u6001\u89c4\u5212\u7528\u7684\u65b9\u6cd5\u6070\u6070\u76f8\u53cd\uff0c\u662f\u4ece\u524d\u5411\u540e\u9012\u63a8\u641c\u7d22\uff0c\u6839\u636e\u4e4b\u524d\u72b6\u6001\u4f20\u9012\u6765\u7684\u503c\u51b3\u5b9a\u5411\u540e\u4f20\u9012\u4ec0\u4e48\u503c\u3002\u8fd9\u5c31\u662f\u52a8\u6001\u89c4\u5212\u7701\u65f6\u7684\u4e3b\u8981\u539f\u56e0\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u8bb2\u80cc\u5305\u95ee\u9898\u3002\u80cc\u5305\u95ee\u9898\u89e3\u51b3\u7684\u4e00\u7c7b\u95ee\u9898\u662f\uff1a\u5bf9\u4e8e\u7a7a\u95f4\u6709\u9650\u7684\u80cc\u5305\uff0c\u548c\u4e00\u4e9b\u6709\u7740\u5df2\u77e5\u4f53\u79ef\u4e0e\u4ef7\u503c\u7684\u7269\u54c1\uff0c\u4f18\u5316\u53d6\u7269\u54c1\u7b56\u7565\u4f7f\u5f97\u80cc\u5305\u91cc\u7269\u54c1\u7684\u4ef7\u503c\u603b\u548c\u6700\u5927\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u603b\u529b\u6c14\u5c31\u662f\u80cc\u5305\u7684\u7a7a\u95f4\uff0c\u6458\u6bcf\u4e2a\u82f9\u679c\u6240\u9700\u8981\u7684\u529b\u6c14\u5c31\u662f\u82f9\u679c\u5360\u80cc\u5305\u7684\u7a7a\u95f4\uff0c\u6bcf\u4e2a\u82f9\u679c\u7684\u4ef7\u503c\u90fd\u662f1\uff0c\u6211\u4eec\u53ea\u9700\u8ba9\u80cc\u5305\u91cc\u7684\u82f9\u679c\u4ef7\u503c\u548c\u6700\u5927\u5373\u53ef\u3002\n\n\u4e0a\u9762\u8bb2\u5230\uff0c\u52a8\u6001\u89c4\u5212\u7684\u6838\u5fc3\u662f\u72b6\u6001\u7684\u8f6c\u79fb\uff0c\u4e0e\u6b64\u76f8\u5bf9\u5e94\u7684\uff0c\u6bcf\u7c7b\u52a8\u6001\u89c4\u5212\u95ee\u9898\u4e5f\u90fd\u6709\u5b83\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u6bd4\u5982\u80cc\u5305\u95ee\u9898\uff0c\u5b83\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f\uff1a$dp[i][j]=max(dp[i-1][j],dp[i-1][j-v[i]]+w[i])$\u3002\u8fd9\u4e4b\u4e2d\uff0c$dp[i][j]$\u8868\u793a\u5bf9\u4e8e\u7a7a\u95f4\u5927\u5c0f\u4e3aj\u7684\u80cc\u5305\u8003\u8651\u524di\u4e2a\u7269\u54c1\u6240\u80fd\u5f97\u5230\u7684\u6700\u5927\u603b\u4ef7\u503c\uff0c$v[i]$\u8868\u793a\u7b2ci\u4e2a\u7269\u54c1\u7684\u5360\u7a7a\u95f4\u5927\u5c0f\uff0c$w[i]$\u8868\u793a\u7b2ci\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u3002\n\n\u4e0d\u8fc7\u8bb2\u4e86\u8fd9\u4e48\u591a\uff0c\u5927\u5bb6\u4f30\u8ba1\u4e5f\u542c\u70e6\u4e86\uff0c\u6211\u4eec\u5148\u4e0a\u4ee3\u7801\uff0c\u7136\u540e\u518d\u6839\u636e\u4ee3\u7801\u8bb2\u4e00\u4e0b\u80cc\u5305\u95ee\u9898\u7684\u89e3\u6cd5\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream> \nusing namespace std;\nint dp[5005][1001];\nint xi[5005],yi[5005],n,s,a,b;\nint main(){\n    cin>>n>>s>>a>>b;\n    for(int i=1;i<=n;i++){\n        cin>>xi[i]>>yi[i];\n    }\n    for(int i=1;i<=n;i++)//\u679a\u4e3e\u8003\u8651\u6bcf\u4e00\u4e2a\u82f9\u679c\n    for(int j=0;j<=s;j++){//\u679a\u4e3e\u80cc\u5305\u5927\u5c0f\n        dp[i][j]=dp[i-1][j];//\u4e0d\u80fd\u53d6\u5c31\u76f4\u63a5\u8f6c\u79fb\u8003\u8651\u4e4b\u524d\u82f9\u679c\u7684\u6700\u5927\u503c\n        if(xi[i]<=a+b&&j>=yi[i])//\u5982\u679c\u80fd\u591f\u53d6\n        dp[i][j]=dp[i-1][j-yi[i]]+1>dp[i][j]?dp[i-1][j-yi[i]]+1:dp[i][j];//\u8fd9\u4e2a\u5c31\u662f\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002max\u51fd\u6570\u8fd0\u884c\u592a\u6162\uff0c\u6211\u4eec\u8fd9\u91cc\u9009\u62e9\u4e09\u76ee\u8fd0\u7b97\u7b26\u53d6\u8f83\u5927\u503c\n    }\n    cout<<dp[n][s];//\u56e0\u4e3a\u662f\u4ece\u524d\u5411\u540e\u9012\u63a8\uff0c\u56e0\u6b64\u63a5\u6536\u6700\u7ec8\u7b54\u6848\u7684\u4f4d\u7f6e\u4e5f\u4ece\u6700\u524d\u9762\u8f6c\u5230\u4e86\u6700\u540e\u9762\n    return 0;\n}\n```\n\u4e3a\u4ec0\u4e48\u80cc\u5305\u95ee\u9898\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u662f$dp[i][j]=max(dp[i-1][j],dp[i-1][j-v[i]]+w[i])$\u5462\uff1f\u6211\u4eec\u8fd8\u662f\u56de\u5230\u4e4b\u524d\u8bb2\u8fc7\u7684\u77e5\u8bc6\u70b9\uff1a\u52a8\u6001\u89c4\u5212\u5b9e\u8d28\u4e0a\u662f\u5bf9\u641c\u7d22\u7684\u4f18\u5316\u3002\u56de\u60f3\u4e00\u4e0b\u6211\u4eec\u5f53\u65f6\u662f\u600e\u4e48\u641c\u7d22\u7684\uff1f\u5bf9\u4e8e\u641c\u7d22\u5230\u7684\u6bcf\u4e2a\u82f9\u679c\uff0c\u90fd\u6709\u4e24\u79cd\u9009\u62e9\uff1a\u53d6\u6216\u8005\u4e0d\u53d6\u3002\u4e0d\u53d6\u5219\u5bf9\u5e94\u8fd4\u56de\u4e0d\u53d6\u8fd9\u4e2a\u82f9\u679c\u540e\u5269\u4e0b\u7684\u82f9\u679c\u6700\u591a\u80fd\u53d6\u7684\u4e2a\u6570\uff0c\u53d6\u5219\u5bf9\u5e94\u8fd4\u56de\u53d6\u8fd9\u4e2a\u82f9\u679c\u540e\u5269\u4e0b\u7684\u82f9\u679c\u6700\u591a\u80fd\u591f\u53d6\u7684\u4e2a\u6570\u52a01\u3002\u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u5c06\u8fd9\u4e2a\u8f6c\u5316\u4e3a\u9012\u63a8\u5173\u7cfb\u5462\uff1f\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\uff0c\u5f53\u6211\u4eec\u53d6\u4e86\u4e00\u4e2a\u82f9\u679c\uff0c\u5c31\u76f8\u5f53\u4e8e\u628a\u80cc\u5305\u91cc\u5bb9\u7eb3\u8fd9\u4e2a\u82f9\u679c\u7684\u7a7a\u95f4\u5206\u7ed9\u4e86\u8fd9\u4e2a\u82f9\u679c\uff0c\u5269\u4e0b\u7684\u7a7a\u95f4\u518d\u7531\u8fd9\u4e2a\u82f9\u679c\u4e4b\u524d\uff08\u4e3a\u4ec0\u4e48\u662f\u4e4b\u524d\u7b49\u4e00\u4e0b\u4f1a\u8bb2\u5230\uff09\u7684\u82f9\u679c\u6765\u5206\u3002\u90a3\u4e48\u4e0d\u5c31\u76f8\u5f53\u4e8e\u628a\u80cc\u5305\u7f29\u5c0f\u540e\u518d\u8003\u8651\u524d\u9762\u7684\u82f9\u679c\u4e86\u5417\uff1f\u90a3\u4e48\u4e0d\u53d6\u5c31\u662f\u80cc\u5305\u5927\u5c0f\u4e0d\u53d8\uff0c\u7531\u4e4b\u524d\u7684\u82f9\u679c\u6765\u5206\u8fd9\u4e2a\u80cc\u5305\u7684\u7a7a\u95f4\u3002\u57fa\u4e8e\u8fd9\u6837\u7684\u601d\u60f3\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6bd4\u8f83\u5728\u5f53\u524d\u80cc\u5305\u5927\u5c0f\u4e0b\uff0c\u662f\u53d6\u8fd9\u4e2a\u82f9\u679c\u66f4\u503c\u8fd8\u662f\u4e0d\u53d6\u8fd9\u4e2a\u82f9\u679c\u66f4\u503c\u3002\u800c\u7f29\u5c0f\u80cc\u5305\u8003\u8651\u4e4b\u524d\u7684\u82f9\u679c\u7684\u5de5\u4f5c\uff0c\u5728\u8003\u8651\u4e0a\u4e00\u4e2a\u82f9\u679c\u65f6\u5c31\u5df2\u7ecf\u6c42\u89e3\u8fc7\u4e86\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e0d\u65ad\u5730\u8003\u8651\u4e00\u4e2a\u53c8\u4e00\u4e2a\u7684\u82f9\u679c\uff0c\u4e0d\u65ad\u5730\u9012\u63a8\u4e0b\u53bb\uff0c\u6700\u7ec8\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002\n\n\u90a3\u4e48\u5b9e\u73b0\u601d\u8def\u5c31\u662f\u8fd9\u6837\u7684\uff1a\u9996\u5148\u7528\u4e00\u4e2a\u5faa\u73af\u679a\u4e3e\u6bcf\u4e2a\u82f9\u679c\uff0c\u7136\u540e\u5728\u8003\u8651\u6bcf\u4e2a\u82f9\u679c\u65f6\uff0c\u518d\u7528\u4e00\u4e2a\u5faa\u73af\u679a\u4e3e\u80cc\u5305\u5927\u5c0f\uff08\u4e3a\u4ec0\u4e48\u8981\u679a\u4e3e\u80cc\u5305\u5927\u5c0f\uff1f\u2014\u2014\u6bd4\u8f83\u6700\u5927\u503c\u65f6\u4e0d\u662f\u8981\u7f29\u5c0f\u80cc\u5305\u5417\uff1f\u8fd9\u91cc\u5c31\u662f\u4e3a\u4e0b\u4e00\u6b65\u9012\u63a8\u6bd4\u8f83\u505a\u51c6\u5907\uff09\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5927\u5c0f\u7684\u80cc\u5305\uff0c\u5982\u679c\u80fd\u591f\u53d6\u8fd9\u4e2a\u82f9\u679c\uff08\u591f\u5f97\u7740**\u800c\u4e14**\u5f53\u524d\u80cc\u5305\u5927\u5c0f\u88c5\u5f97\u4e0b\u8fd9\u4e2a\u82f9\u679c\uff09\uff0c\u5c31\u6bd4\u8f83\u53d6\u8fd9\u4e2a\u82f9\u679c\u548c\u4e0d\u53d6\u8fd9\u4e2a\u82f9\u679c\u54ea\u4e2a\u66f4\u503c\uff1b\u5982\u679c\u4e0d\u80fd\u53d6\uff08\u591f\u4e0d\u5230**\u6216\u8005**\u5f53\u524d\u80cc\u5305\u5927\u5c0f\u88c5\u4e0d\u4e0b\u8fd9\u4e2a\u82f9\u679c\uff09\uff0c\u5c31\u5c06\u8fd9\u4e2a\u5927\u5c0f\u7684\u80cc\u5305\u88c5\u4e4b\u524d\u7684\u82f9\u679c\u7684\u6700\u5927\u503c\u4f20\u9012\u7ed9\u8fd9\u4e2adp\u503c\u3002\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u4e0a\u9762\u7684\u4ee3\u7801\u3002\u73b0\u5728\u518d\u56de\u53bb\u770b\u770b\u4e4b\u524d\u7684\u4ee3\u7801\uff0c\u662f\u4e0d\u662f\u5c31\u660e\u767d\u4e86\u5462\uff1f\n\n\n------------\n\n## 3.\u8d2a\u5fc3\u7b97\u6cd5\n\u6709\u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u7ed9\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u91cc\u6709\u4e00\u4e2a\u53d8\u91cf$w[i]$\uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u9898\u91cc\u6211\u4eec\u6ca1\u6709\u7528$w[i]$\uff0c\u800c\u662f\u76f4\u63a5\u75281\u8868\u793a\uff0c\u8ba9\u4eba\u5bf9\u7167\u8d77\u6765\u770b\u96be\u514d\u6709\u4e9b\u522b\u626d\u3002\u5982\u679c\u4f60\u89c9\u5f97\u522b\u626d\u7684\u8bdd\uff0c\u90a3\u6211\u8981\u5938\u5956\u4f60\uff0c\u56e0\u4e3a\u4e00\u773c\u5c31\u770b\u51fa\u4e86\u8fd9\u4e2a\u95ee\u9898\u5176\u5b9e\u52a8\u6001\u89c4\u5212\u5e76\u4e0d\u662f\u6700\u4f18\u89e3\u3002\n\n\u6211\u4eec\u6700\u5f00\u59cb\u7528\u65e0\u4f18\u5316\u641c\u7d22\u8dd1\u4e863500\u591a\u6beb\u79d2\u624d\u8dd1\u5b8c\uff0c\u4e4b\u540e\u8bb0\u5fc6\u5316\u641c\u7d22\u76f4\u63a5\u63d0\u5347\u5230130\u591a\u6beb\u79d2\uff0c\u7136\u540e\u526a\u679d\u53c8\u4f18\u5316\u5230110\u591a\u6beb\u79d2\uff0c\u4e4b\u540e\u52a8\u6001\u89c4\u5212\u76f4\u63a560\u591a\u6beb\u79d2\u89e3\u51b3\u95ee\u9898\u3002\u90a3\u4f60\u4ee5\u4e3a\u8fd9\u5c31\u662f\u8fd9\u4e2a\u9898\u7684\u6781\u9650\u901a\u8fc7\u65f6\u95f4\u4e86\u5417\uff1f\u63a5\u4e0b\u6765\u4ecb\u7ecd\u7684\u8d2a\u5fc3\u7b97\u6cd515\u6beb\u79d2\u5c31\u901a\u8fc7\u4e86\u8fd9\u4e2a\u9898\u3002\n\n\u8d2a\u5fc3\u7b97\u6cd5\u5176\u5b9e\u6bd4\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u8981\u4f4e\u7ea7\u4e0d\u5c11\uff0c\u56e0\u4e3a\u5b83\u9002\u7528\u9762\u5b9e\u5728\u662f\u6709\u70b9\u7a84\u3002\u4f46\u662f\u5bf9\u4e8e\u67d0\u4e9b\u95ee\u9898\uff0c\u8d2a\u5fc3\u6cd5\u5374\u80fd\u8dd1\u51fa\u6bd4\u52a8\u6001\u89c4\u5212\u5feb\u4e0d\u5c11\u7684\u6210\u7ee9\u3002\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u9898\u53ef\u4ee5\u7528\u8d2a\u5fc3\u7b97\u6cd5\u89e3\u51b3\u5462\uff1f\u6211\u4eec\u770b\u4e00\u4e0b\uff0c\u5728\u8fd9\u4e2a\u9898\u91cc\uff0c\u6240\u6709\u82f9\u679c\u8d39\u529b\u6c14\u4e5f\u5c31\u662f\u5360\u80cc\u5305\u7a7a\u95f4\u4e0d\u540c\uff0c\u4f46\u662f\u4ef7\u503c\u90fd\u662f1\u3002\u80cc\u5305\u95ee\u9898\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3\u62ff\u5f97\u591a\u5374\u4e0d\u4e00\u5b9a\u4ef7\u503c\u6700\u5927\uff0c\u62ff\u4ef7\u503c\u5927\u7684\u5374\u53ef\u80fd\u88c5\u4e0d\u4e0b\u5176\u4ed6\u6709\u4ef7\u503c\u7684\u4e1c\u897f\u800c\u4f7f\u4eba\u9677\u5165\u4e24\u96be\u624d\u88ab\u53d1\u660e\u7684\u7b97\u6cd5\u3002\u5bf9\u4e8e\u4ef7\u503c\u76f8\u540c\u4f53\u79ef\u5374\u4e0d\u540c\u7684\u7269\u54c1\uff0c\u6211\u4eec\u6bcf\u6b21\u53ea\u53d6\u4f53\u79ef\u6700\u5c0f\u7684\uff0c\u4e0d\u5c31\u80fd\u5728\u53d6\u5f97\u5f53\u524d\u4ef7\u503c\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u5316\u5269\u4f59\u7a7a\u95f4\uff0c\u4ece\u800c\u62ff\u66f4\u591a\u82f9\u679c\u4e86\u5417\uff1f\n\n\u8bb2\u5230\u8fd9\u91cc\uff0c\u5927\u5bb6\u53ef\u80fd\u5c31\u6709\u70b9\u660e\u767d\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9002\u7528\u8303\u56f4\u4e86\u3002\u6211\u4e4b\u6240\u4ee5\u5148\u5f15\u4f8b\uff0c\u5c31\u662f\u56e0\u4e3a\u4e0b\u9762\u8fd9\u6bb5\u8bdd\u5b9e\u5728\u6709\u70b9\u6666\u6da9\u96be\u61c2\uff1a\n\n\u767e\u5ea6\u767e\u79d1\u5b9a\u4e49\uff1a\u8d2a\u5fc3\u7b97\u6cd5\u662f\u6307\uff0c\u5728\u5bf9\u95ee\u9898\u6c42\u89e3\u65f6\uff0c**\u603b\u662f\u505a\u51fa\u5728\u5f53\u524d\u770b\u6765\u662f\u6700\u597d\u7684\u9009\u62e9**\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u4ece\u6574\u4f53\u6700\u4f18\u4e0a\u52a0\u4ee5\u8003\u8651\uff0c\u4ed6\u6240\u505a\u51fa\u7684\u662f**\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u7684\u5c40\u90e8\u6700\u4f18\u89e3**\u3002\u8d2a\u5fc3\u7b97\u6cd5\u4e0d\u662f\u5bf9\u6240\u6709\u95ee\u9898\u90fd\u80fd\u5f97\u5230\u6574\u4f53\u6700\u4f18\u89e3\uff0c\u5173\u952e\u662f\u8d2a\u5fc3\u7b56\u7565\u7684\u9009\u62e9\uff0c**\u9009\u62e9\u7684\u8d2a\u5fc3\u7b56\u7565\u5fc5\u987b\u5177\u5907\u65e0\u540e\u6548\u6027\uff0c\u5373\u67d0\u4e2a\u72b6\u6001\u4ee5\u524d\u7684\u8fc7\u7a0b\u4e0d\u4f1a\u5f71\u54cd\u4ee5\u540e\u7684\u72b6\u6001\uff0c\u53ea\u4e0e\u5f53\u524d\u72b6\u6001\u6709\u5173\u3002**\n\n\u6211\u8bed\u8a00\u529f\u5e95\u6709\u9650\uff0c\u5c31\u4e0d\u518d\u7528\u6211\u8d2b\u7620\u7684\u8bed\u8a00\u6765\u7ed9\u5927\u5bb6\u8be6\u7ec6\u89e3\u91ca\u8fd9\u6bb5\u8bdd\u4e86\u3002\u603b\u4e4b\uff0c\u8fd9\u4e2a\u9898\uff0c\u7528\u8d2a\u5fc3\u786e\u5b9e\u662f\u6700\u4f18\u89e3\u3002\u8fd9\u70b9\u4ece\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u5c31\u80fd\u770b\u51fa\u6765\uff1a\n\n\u641c\u7d22\u7684\u57fa\u7840\u590d\u6742\u5ea6\uff08\u4e0d\u52a0\u4f18\u5316\uff09\u662f$O(k^n)$\uff08k\u6307\u6bcf\u4e2a\u8282\u70b9\u7684\u9009\u62e9\u5206\u652f\u7684\u4e2a\u6570\uff09\u7684\uff0c\u52a8\u6001\u89c4\u5212\u7684\u57fa\u7840\u590d\u6742\u5ea6\u662f$O(nm)$\uff08n,m\u5206\u522b\u6307\u7684\u662f\u7269\u54c1\u6570\u91cf\u548c\u80cc\u5305\u5927\u5c0f\uff09\uff0c\u800c\u8d2a\u5fc3\u5374\u53ea\u6709$O(n)$\u3002\u641c\u7d22\u9002\u7528\u8303\u56f4\u6700\u5e7f\uff0c\u540c\u6837\u5730\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u6700\u9ad8\uff1b\u52a8\u6001\u89c4\u5212\u9002\u7528\u8303\u56f4\u6709\u6240\u7f29\u5c0f\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u76f8\u5e94\u5730\u63d0\u9ad8\u4e86\uff1b\u8d2a\u5fc3\u7b97\u6cd5\u9002\u7528\u8303\u56f4\u6781\u7a84\uff0c\u4f46\u5374\u62e5\u6709\u6781\u4f18\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4e07\u4e8b\u4e07\u7269\u90fd\u662f\u8fd9\u6837\uff0c\u65e2\u6709\u957f\u5904\uff0c\u53c8\u6709\u77ed\u5904\uff0c\u957f\u77ed\u4e92\u8865\uff0c\u5411\u6765\u5982\u6b64\u3002\n\n\u54b3\u54b3\u2026\u2026\u626f\u8fdc\u4e86\u3002\u4e0b\u9762\u653e\u4e0a\u8d2a\u5fc3\u7b97\u6cd5\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u5c31\u4e0d\u52a0\u6ce8\u91ca\u4e86\uff0c\u5927\u5bb6\u501f\u6b64\u673a\u4f1a\u953b\u70bc\u4e00\u4e0b\u81ea\u5df1\u7684\u8bfb\u4ee3\u7801\u80fd\u529b\u5427\u3002\n```cpp\n#include<iostream>\n#include<algorithm> \nusing namespace std;\nint n,s,a,b,x_,y_,can,rest,ans;\nstruct apple{\n    int xi,yi;\n}ap[50005];\nint cmp(apple x,apple y){\n    return x.yi<y.yi;\n}\nint main(){\n    cin>>n>>s>>a>>b;\n    for(int i=1;i<=n;i++){\n        cin>>x_>>y_;\n        if(x_<=a+b){\n            can++;\n            ap[can].xi=x_;\n            ap[can].yi=y_;\n        }\n    }\n    sort(ap+1,ap+can+1,cmp);\n    rest=s;\n    ans=0;\n    for(int i=1;rest>=ap[i].yi&&i<=can;i++){\n        ans++;\n        rest-=ap[i].yi;\n    }\n    cout<<ans;\n    return 0;\n} \n```\n\n\n------------\n\u603b\u4e4b\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u5c31\u662f\u8fd9\u4e2a\u9898\u7684\u6700\u4f18\u89e3\u4e86\u3002\u5f53\u7136\u4e86\uff0c\u5982\u679c\u8fd9\u4e2a\u9898\u518d\u52a0\u6761\u4ef6\uff0c\u6bd4\u5982\u6bcf\u4e2a\u82f9\u679c\u90fd\u6709\u5176\u4e0d\u540c\u7684\u4ef7\u503c\uff0c\u90a3\u4e48\u8d2a\u5fc3\u7b97\u6cd5\u5c31\u4e0d\u518d\u9002\u7528\u4e86\uff0c\u5c31\u9700\u8981\u4f7f\u7528\u80cc\u5305\u4e86\u3002\u5f53\u7136\u5982\u679c\u518d\u52a0\u6761\u4ef6\u8bf4\u4e0d\u5b9a\u8fde\u52a8\u6001\u89c4\u5212\u90fd\u4e0d\u80fd\u7528\u4e86\u2026\u2026\u4e0d\u8fc7\u5927\u5bb6\u8fd8\u662f\u8981\u76f8\u4fe1\uff0c\u9898\u8bbe\u8ba1\u51fa\u6765\u5c31\u662f\u7ed9\u4eba\u505a\u7684\uff0c\u65e0\u8bba\u4ec0\u4e48\u6837\u7684\u9898\u76ee\uff0c\u53ea\u8981\u6211\u4eec\u638c\u63e1\u7684\u65b9\u6cd5\u591f\u591a\uff0c\u603b\u6709\u4e00\u79cd\u65b9\u6cd5\u9002\u5408\u4f60\u3002\u597d\u7684\uff0c\u672c\u671f\u7684~~_**\u6ed1\u7a3d\u9898\u89e3**_~~\u5230\u8fd9\u91cc\u5c31\u7ed3\u675f\u4e86\u3002\u8ba9\u6211\u4eec\u4e0b\u671f\u518d\u89c1\u5427\uff01",
        "postTime": 1540981528,
        "uid": 65960,
        "name": "ASZIIIS",
        "ccfLevel": 0,
        "title": "\u4ece\u641c\u7d22\u5230\u8d2a\u5fc3\u2014\u2014\u6c42\u89e3\u7b97\u6cd5\u7684\u4f18\u5316"
    },
    {
        "content": "  ### \u672c\u840c\u65b0\u7b2c\u4e00\u6b21\u53d1\u5e03\u9898\u89e3\uff0c\u82e5\u6709\u4e0d\u4e25\u8c28\u5904\u8bf7\u8c05\u89e3\u3002 \n  \n  \u6211\u770b\u4e86\u524d\u9762\u51e0\u4f4d\u5927\u4f6c\u7684\u624b\u7b14\uff0c\u8868\u793a\u81ea\u5df1\u8fd8\u662f\u6bd4\u8f83\u949f\u7231\u6876\u6392\u5e8f\u7684\u3002\u5b83\u975e\u5e38\u7b80\u6613\u76f4\u63a5\uff0c\u8fd8\u7701\u65f6\u95f4\uff0c\u5c24\u5176\u5bf9\u4e8e\u8fd9\u7c7b\u9898\u76ee\u5360\u7528\u7684\u7684\u7a7a\u95f4\u4e5f\u5f88\u5c0f\u3002\n  \n  \u6211\u4eec\u770b\u5230\u9898\u76ee\u4e0b\u9762\u7684\u8bf4\u660e\uff1axi<=280  yi<=100 \u8fd9\u7b80\u76f4\u5c31\u662f\u4e3a\u6876\u6392\u5e8f\u91cf\u8eab\u5b9a\u5236\u554a\uff01\n  \n  \u56e0\u4e3a\u6dd8\u6dd8\u8981\u6458\u5230\u6700\u591a\u7684\u82f9\u679c\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u82f9\u679c\u6240\u9700\u7684\u529b\u6c14\u8fdb\u884c\u6876\u6392\u5e8f\u3002\u4e0b\u9762\u8fdb\u5165\u6b63\u6587\uff1a\n  ## \u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u9898\u89e3\n```cpp\n#include<iostream>\nusing namespace std;\nint c[101];//\u5b9a\u4e49\u4e00\u767e\u4e2a\u6876\u5b50\uff0cc[i]\u4ee3\u8868\u7528i\u4e2a\u529b\u6c14\u80fd\u6458\u5230\u7684\u82f9\u679c\u7684\u6570\u76ee\nint main(){\n    int n,s,h,a,b,i,t=0; \n    cin>>n>>s>>h>>i;h+=i;//\u8f93\u5165\uff0c\u501f\u7528\"i\"\u5c06\u6dd8\u6dd8\u7528\u51f3\u5b50\u8fbe\u5230\u7684\u6700\u5927\u9ad8\u5ea6\u590d\u5236\u7ed9\"h\"\n    for(i=1;i<=n;i++){\n        cin>>a>>b;\n        if(a<=h)c[b]++;//\u5982\u679c\u80fd\u6458\u5230\uff0c\u5c31\u5728\u7528b\u4e2a\u529b\u6c14\u80fd\u6458\u5230\u82f9\u679c\u7684\u6876\u5b50\u4e2d\u52a0\u4e00\n    }\n    //\u63a5\u4e0b\u6765 \u6309\u529b\u6c14\u4ece\u5c0f\u5230\u5927\u9009\u82f9\u679c\n    for(i=0;i<=100&&s>=0;i++){//\u6ce8\u610f\u8981\u4ece\"0\"\u5f00\u59cb\uff0c\u6709\u82f9\u679c\u662f\u514d\u8d39\u7684\n        while(c[i]){//\u4e00\u4e2a\u6876\u5b50\u91cc\u4e5f\u53ef\u6709\u591a\u4e2a\u82f9\u679c\n            s-=i;//\u51cf\u53bb\u6458\u8fd9\u4e2a\u82f9\u679c\u7684\u529b\u6c14\n            t++;//\u6458\u5230\u7684\u82f9\u679c\u6570\u52a0\u4e00 \n            c[i]--;//\u6876\u91cc\u7684\u82f9\u679c\u51cf\u4e00\u4e2a \n            if(s<0){//\u5f53\u529b\u6c14\u6ca1\u4e86\u65f6\u7ed3\u675f \n                t--;//\u8fd9\u4e2a\u82f9\u679c\u6ca1\u6709\u8db3\u591f\u529b\u6c14\u6458\u4e0d\u4e86(s<0) \n                break;\n            }\n        }\n    }\n    cout<<t;//\u8f93\u51fa\u3002 \n    return 0;\n}\n```\n  \u600e\u4e48\u6837\uff0c\u662f\u4e0d\u662f\u975e\u5e38\u7b80\u77ed\uff0c\u65f6\u95f4\u7a7a\u95f4\u90fd\u7528\u7684\u5f88\u5c11\uff0c\u90a3\u4e48\u70b9\u4e2a\u8d5e\u5427\uff01",
        "postTime": 1532853478,
        "uid": 111334,
        "name": "\u706f\u82af\u7cd5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6700\u5f00\u59cb\u662f\u6a21\u62df\u9676\u9676\u6458\u82f9\u679c\uff0c\u6bcf\u4e2a\u82f9\u679c\u9009\u6216\u4e0d\u9009\uff0c\u56e0\u6b64\u5f97\u51fa\u4ee5\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\n\nint n,s,a,b,ans=0;\nint xi[5010],yi[5010]; \n\nvoid f(int cnt,int l,int la){\n    for(int i=la;i<n;i++){\n        if(xi[i]>a||yi[i]>l)\tcontinue;\n        f(cnt+1,l-yi[i],i+1);\n    }\n    if(ans<cnt) ans=cnt;\n}\n\nint main(){\n    cin>>n>>s>>a>>b;\n    a+=b;\n    for(int i=0;i<n;i++)\n        cin>>xi[i]>>yi[i];\n    f(0,s,0);\n    cout<<ans;\n    return 0;\n}\n```\n\u5f88\u660e\u663e\u8fd9\u6837\u662f\u8d85\u65f6\u7684\u3002\n\u56e0\u4e3a\u5728\u5f88\u591a\u82f9\u679c\u90fd\u91cd\u590d\u9009\u5230\u4e86\uff0c\u800c\u9898\u76ee\u6ca1\u6709\u6c42\u603b\u7684\u65b9\u6848\uff0c\u56e0\u6b64\u505a\u4e86\u591a\u4f59\u7684\uff0c\u53ea\u9700\u8981\u627e\u51fa\u9700\u8981\u529b\u6c14\u6700\u5c0f\u7684\uff0c\u6211\u7528\u7684\u5192\u6ce1\u6392\u5e8f\uff1a\n```\nfor(int i=1;i<n;i++)\n\tfor(int j=i+1;j<=n;j++){\n\t\tif(yi[i]>yi[j]){\n\t\t\tt1=xi[i],t2=yi[i];\n\t\t\txi[i]=xi[j],yi[i]=yi[j]; //\u76f8\u5f53\u4e8eswap(x[i],x[j]); swap(y[i],y[j]);\n\t\t\txi[j]=t1,yi[j]=t2;\n\t\t}\n```\n\u8fd9\u6837\u5c31\u628a\u529b\u6c14\u5c0f\u7684\u6392\u5728\u524d\u9762\u4e86\uff0c\u4e0b\u9762\u662f\u5b8c\u6574\u7684\u4ee3\u7801\uff1a\n```\n#include<iostream>\nusing namespace std;\n\nint n,s,a,b,ans=0,t1,t2;\nint xi[5010],yi[5010];\n\nint main(){\n\tcin>>n>>s>>a>>b;\n\ta+=b;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>xi[i]>>yi[i];\n\tfor(int i=1;i<n;i++)//\u5192\u6ce1\u628a\u529b\u6c14\u5c11\u7684\u6392\u5230\u524d\u9762\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tif(yi[i]>yi[j]){\n\t\t\t\tt1=xi[i],t2=yi[i];\n\t\t\t\txi[i]=xi[j],yi[i]=yi[j];\n\t\t\t\txi[j]=t1,yi[j]=t2;\n\t\t\t}\n\t\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(xi[i]<=a&&yi[i]<=s){//\u5224\u65ad\u8d85\u51fa\u9ad8\u5ea6\u6216\u4e0d\u591f\u529b\u6c14\n\t\t\tans++;\n\t\t\ts-=yi[i];\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\u5c31\u8fd9\u6837\u4e86\uff0c\u611f\u8c22\u652f\u6301\uff01\uff01",
        "postTime": 1517917557,
        "uid": 39654,
        "name": "LW_h_FP",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\n\u9762\u5411\u5bf9\u8c61\u5927\u6cd5\u597d\n\n\u6838\u5fc3\u601d\u8def\uff1a\u5b9e\u73b0\u6bd4\u8f83\u63a5\u53e3\u5c31\u884c\u4e86\n\n\n```cpp\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.Iterator;\nimport java.util.TreeSet;\n```\npublic class Main\n        \n        \n        \n        \n        \n```cpp\n{\n    public static void main(String[] args) throws IOException\n    {\n        int power=0,count=0;\n        BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(System.in));\n        String[] strings=bufferedReader.readLine().split(\" \");\n        Tree.number=Integer.parseInt(strings[0]);\n        TaoTao.power=Integer.parseInt(strings[1]);\n        strings=bufferedReader.readLine().split(\" \");\n        TaoTao.handle=Integer.parseInt(strings[0])+Integer.parseInt(strings[1]);\n        for (int i = 0; i < Tree.number; i++)\n        {\n            strings=bufferedReader.readLine().split(\" \");\n            Tree.treeSet.add(new Apple(Integer.parseInt(strings[0]), Integer.parseInt(strings[1])));\n        }\n//        System.out.println(Tree.number+\" \"+TaoTao.power+\" \"+TaoTao.handle);\n        TreeSet<Apple> treeSet=Tree.treeSet;\n        for (Iterator iterator = treeSet.iterator(); iterator.hasNext();)\n        {\n            Apple apple = (Apple) iterator.next();\n            if(apple.appleHigh<=TaoTao.handle&&apple.needpower+power<=TaoTao.power)\n            {\n                count++;\n                power+=apple.needpower;\n                //System.out.println(apple);\n            }\n        }\n        System.out.println(count);\n    }\n}\n```\nclass TaoTao\n    \n```cpp\n{\n    static int power;\n    static int handle;\n}\nclass Apple implements Comparable<Apple>\n{\n    int appleHigh;\n    int needpower;\n    public Apple(int appleHigh, int needpower)\n    {\n        super();\n        this.appleHigh = appleHigh;\n        this.needpower = needpower;\n    }\n```\n@Override\n```cpp\n    public int compareTo(Apple o)\n    {\n        // TODO Auto-generated method stub\n        if(needpower==o.needpower)\n        {\n            if(appleHigh==o.appleHigh)\n            {\n                return -1;\n            }\n            return appleHigh-o.appleHigh;\n        }\n        return needpower-o.needpower;\n    }\n```\n@Override\n    \n    \n```cpp\n    public String toString()\n    {\n        return \"Apple [appleHigh=\" + appleHigh + \", needpower=\" + needpower + \"]\";\n    }\n}\n```\nclass Tree\n{\n    static int number;\n\n    static TreeSet<Apple>treeSet=new TreeSet<>();\n\n}",
        "postTime": 1512270798,
        "uid": 43671,
        "name": "\u5b64\u72ec\u7684\u89c2\u6d4b\u8005",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "```cpp\n#include\"iostream\"\n#include\"cstdio\"\n#include\"algorithm\"\nusing namespace std;\nint force[5010],high[5010];//\u6700\u597d\u6bd45000\u5927\u4e00\u4e9b\nint main()\n{\n int i,n,s,tot=0,a,b,t,p,j;//t,p\u540e\u9762\u7528\u6765\u53d8\u91cf\u4ea4\u6362\n cin>>n>>s>>a>>b;\n int sum=a+b;//\u603b\u5171\u80fd\u591f\u5230\u7684\u9ad8\u5ea6\u5e94\u4e3a\u51f3\u5b50\u9ad8\u5ea6+\u624b\u80fd\u591f\u5230\u7684\u9ad8\u5ea6\n for(i=0;i<n;i++)   \n cin>>high[i]>>force[i];\n for (i=0;i<n-1;i++)//\u5192\u6ce1\u6392\u5e8f\u8fc7\u7a0b\uff0c\u867d\u7136\u7528\u7ed3\u6784\u4f53\u65b9\u4fbf\u4e9b\uff0c\u4f46\u672c\u4eba\u8fd8\u4e0d\u719f\u6089\u7528......    \n for (j=0;j<n-i-1;j++)\n if (force[j] > force[j+1] )  \n {\n t=force[j];force[j]=force[j+1];force[j+1]=t;\n p=high[j];high[j]=high[j+1];high[j+1]=p;//\u6bcf\u4e2aforce[i]\u5bf9\u5e94\u7684\u9ad8\u5ea6\u4e5f\u5e94\u8ddf\u7740\u4ea4\u6362\n }\n for(i=0;i<n;i++)  \n {\n  if(s>=0&&sum>=high[i]&&s>=force[i]) {tot++;s-=force[i];}//\u5224\u65ad\u6761\u4ef6\uff0c\u6ee1\u8db3tot+1,\u529b\u6c14-force[i]                 \n }\n cout<<tot<<endl;\n return 0; \n}\n\n```",
        "postTime": 1483527781,
        "uid": 27114,
        "name": "BlueArc",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "##### \u8fd9\u662f\u672c\u840c\u65b0\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u4e0d\u597d\u4e4b\u5904\u591a\u591a\u8c05\u89e3= =\n\n### \u8fd9\u9053\u9898\u662f\u4e00\u9053\u975e\u5e38\u7ecf\u5178\u7684\u6a21\u62df\u9898\uff0c\u672c\u9898\u89e3\u5c06\u4f7f\u7528*struct*\u6765\u505a\u3002\u601d\u8def\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u7c7b\u4f3c\u4e8e\u8d2a\u5fc3\uff0c\u56e0\u4e3a\u6709\u529b\u6c14s\u7684\u9650\u5236\uff0c*\u6240\u4ee5\u53ea\u8981\u8003\u8651\u6bcf\u4e00\u6b21\u5c3d\u53ef\u80fd\u7684\u4f7f\u8017\u8d39\u7684\u529b\u6c14\u5c3d\u91cf\u7684\u5c0f\u3002*\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u9700\u8981\u7528\u5230\u6392\u5e8f\u7684\u601d\u60f3\u3002\n\n#### \u4e0a\u5934\u6587\u4ef6\u7b49\u7b49\n\n```cpp\n#include <bits/stdc++.h>//van \u2642 \u80fd\u5e93\nusing namespace std;\n\nint n, s, a, b, ans;//\u524d\u56db\u4e2a\u5982\u9898\uff0cans\u662f\u7b54\u6848\u3002\n\nint main() {\n\tscanf(\"%d %d\", &n, &s);//\u8bfb\u5165\u4e0d\u591a\u8bf4\n\tscanf(\"%d %d\", &a, &b);//\u540c\u4e0a\n\tstruct k{//\u884c1\n\t\tint sa;//\u884c2\n\t\tint sh;//\u884c3\n\t}x[n + 1];//\u884c4\n    /*\n    \u8fd9\u5c31\u662f\u672c\u9898\u7684\u91cd\u70b9\u4e86\u3002\n    \u7ed3\u6784\u4f53\u6709\u70b9\u7c7b\u4f3c\u4e0e\u5176\u4ed6\u8bed\u8a00\u7684\u8bb0\u5f55\uff0c\u5c31\u662f\u4f60\u81ea\u5df1\u5b9a\u4e49\u7684\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u3002\u5f53\u4e2d\u53ef\u4ee5\u5305\u542b\u4f60\u7533\u660e\u7684\u4efb\u610f\u5e93\u6570\u636e\u7c7b\u578b\u3002\u4f8b\u5982\u672c\u9898\u7684\u7ed3\u6784\u4f53k\u4e2d\u5c31\u542b\u6709sa\uff08\u6bcf\u4e00\u4e2a\u82f9\u679c\u6240\u8017\u529b\u6c14\uff09\uff0csh\uff08\u6bcf\u4e00\u4e2a\u82f9\u679c\u7684\u9ad8\u5ea6\uff09\u3002\u884c4\u4e2d\u7684x[n+1]\u4ee3\u8868\u7ed3\u6784k\u7c7b\u578b\u7684\u6570\u7ec4x\uff0c\u5176\u5927\u5c0f\u4e3a[n+1]\u3002\n    \u4e3a\u4ec0\u4e48\u5927\u5c0f\u542b\u6709\u53d8\u91cf\u5462\uff0c\u7ed9\u5404\u4f4d\u8bf4\u4e00\u4e0b\u8fd9\u91cc\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u975e\u5e38\u5b9e\u7528\u7684\u5c0f\u6280\u5de7\u2014\u2014\u5728int main\uff08\uff09\u91cc\u9762\u5f00\u6570\u7ec4\uff0c\u5927\u5c0f\u53ef\u4ee5\u7531\u4e4b\u524d\u5df2\u7ecf\u8bfb\u5165\u7684\u53d8\u91cf\uff08n\uff09\u7ec4\u6210\u3002\n    n+1\u662f\u4e3a\u4e86\u6570\u7ec4\u4e0d\u8d8a\u754c\u3002\n    */\n```\n#### \u4ee5\u4e0a\u5c31\u662f\u4e00\u4e9b\u6240\u8c13\u7684\u201c\u9884\u5904\u7406\u201d\u3002\n#### \u4e0b\u9762\u4e00\u6bb5\u662f\u5982\u4f55\u8bfb\u5165struct \u4e0a\u4ee3\u7801~~\n```cpp\nfor (int i = 1; i <= n; ++i) {//\u884c1\n\tscanf(\"%d %d\", &x[i].sh, &x[i].sa);//\u884c2\n}//\u884c3\n/*\n\u884c1\u4e0d\u89e3\u91ca\n\u884c2\u7684&x[i].sh, &x[i].sa\u4e2d\u7684\u4e24\u4e2a\u201c.\u201d\u662f\u6210\u5458\u8fd0\u7b97\u7b26\uff0c\u8868\u793a\u7ed3\u6784\u4f53\u4e2d\u7684\u67d0\u4e2a\u6570\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684\u201c.\u201d\u7684\u610f\u601d\u662f\u7ed3\u6784\u4f53k\u7c7b\u578b\u7684\u6570\u7ec4x\u4e2d\u4e0b\u6807\u4e3ai\u7684\u90a3\u4e00\u9879\u4e2d\u7684int sh\n*/\n```\n\n#### \u4e0b\u9762\u662f\u91cd\u4e2d\u4e4b\u91cd\u2014\u2014\u7ed3\u6784\u4f53\u6392\u5e8f\uff08\u5192\u6ce1\u6392\u5e8f\n\n######  \uff08\u548c\u771f\u6b63\u7684\u7ed3\u6784\u4f53\u6392\u5e8f\u4e0d\u662f\u4e00\u56de\u4e8b\u3002\u3002\uff09\n```cpp\nfor (int i = n - 1; i >= 1; --i) {//line 1\n\tfor (int j = 1; j <= i; ++j) {//line 2\n\t\tif (x[j].sa > x[j + 1].sa) {//line 3\n\t\t\tswap(x[j].sa, x[j + 1].sa);//line 4\n\t\t\tswap(x[j].sh, x[j + 1].sh);//line 5\n\t\t}//line qwq\n\t}//line CyC\n}//line 233\n/*\n\u5192\u6ce1\u6392\u5e8f\u7684\u539f\u7406\u5341\u5206\u7b80\u5355\u2014\u2014\u53ea\u8981\u6709\u4e24\u4e2a\u6570\u4e0d\u662f\u524d\u4e00\u4e2a\u6bd4\u540e\u4e00\u4e2a\u5c0f\uff0c\u53eb\u8ba9\u8fd9\u4e24\u4e2a\u6570\u662f\uff08\u4ea4\u6362\u4e24\u4e2a\u6570\uff09\uff0c\u8fd9\u6837\u91cd\u590d\u51e0\u6b21\u5c31\u4f1a\u53d1\u73b0\u6392\u597d\u5e8f\u4e86\u3002\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u91cd\u590d\u51e0\u6b21\u5462\uff1f\uff1f\n\u8bf7\u770b\u7f51\u57401\n*/\n```\n[\u7f51\u57401](https://baike.baidu.com/item/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F)\n#### \u6392\u5e8f\u5b8c\u4e86\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u7ed3\u6784\u4f53\u4eec\u5df2\u7ecf\u6210\u4e86\u6309\u7167\u8bdd\u8d39\u529b\u6c14\u5927\u5c0f\u6392\u5e8f\u7684\u7ed3\u6784\u4f53\u4eec\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u80fd\u6458\u5230\u5c31\u884c\u4e86\u3002\n```cpp\nfor (int i = 1; i <= n; ++i) {//line 1\n\t\tif (x[i].sh <= b + a) {//line 2\n\t\t\ts -= x[i].sa;//line 3\n\t\t\tif (s < 0) {//line 4\n\t\t\t\tbreak;//line 5\n\t\t\t} else {//line 6\n\t\t\t\tans++;//line 7\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n/*\n\u503c\u5f97\u4e00\u63d0\u7684\u4f7fline 5\u7684break\u662f\u9000\u51fa\u7684\u6574\u4e2afor\u5faa\u73af\uff0c\u8be6\u60c5\u8bf7\u89c1\u4e0b\u9762\u7684\u7f51\u57402\n\u53ea\u8981\u9676\u9676\u80fd\u591f\u6458\u5230\u82f9\u679c\uff0c\u90a3\u4e48\u5c31\u51cf\u53bb\u529b\u6c14++\u7b54\u6848\uff0c\u5f88\u597d\u7406\u89e3\u5bf9\u5427\u3002\n*/\n```\n[\u7f51\u57402](https://wenwen.sogou.com/z/q794582159.htm)\n# \u4f60\u4eec\u6700\u7231\u7684\u5b8c\u6574\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, s, a, b, ans, sum;\nbool contr;\n\nint main() {\n\tscanf(\"%d %d\", &n, &s);\n\tscanf(\"%d %d\", &a, &b);\n\tstruct k{\n\t\tint sa;\n\t\tint sh;\n\t}x[n + 1];\n\tfor (int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d %d\", &x[i].sh, &x[i].sa);\n\t}\n\tfor (int i = n - 1; i >= 1; --i) {\n\t\tfor (int j = 1; j <= i; ++j) {\n\t\t\tif (x[j].sa > x[j + 1].sa) {\n\t\t\t\tswap(x[j].sa, x[j + 1].sa);\n\t\t\t\tswap(x[j].sh, x[j + 1].sh);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (x[i].sh <= b + a) {\n\t\t\ts -= x[i].sa;\n\t\t\tif (s < 0) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```\n# thanks\uff01",
        "postTime": 1526562873,
        "uid": 80937,
        "name": "\u5929\u624dbyt",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P1478"
    },
    {
        "content": "\u840c\u65b0\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\u3002\u601d\u8def\u633a\u76f4\u63a5\u7684\uff0c\u4e00\u5f00\u59cb\u5148\u628a\u6458\u4e0d\u5230\u7684\u82f9\u679c\u7b5b\u6389\uff0c\u7136\u540e\u76f4\u63a5\u628a\u53ef\u4ee5\u6458\u5230\u7684\u82f9\u679c\u6240\u9700\u7684\u529b\u6c14\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7d2f\u52a0\u8ba1\u6570\u5c31\u884c\u3002\n```\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,s,a,b,xi[5001],yi[5001],t=0,g[5001],q=0;\nint main()\n{\n\tcin>>n>>s>>a>>b;\n\tfor(int i=1;i<=n;i++)\n\tcin>>xi[i]>>yi[i];\n\ta+=b;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a>=xi[i])\n\t\tg[i]=yi[i];\t\t//\u5c06\u6458\u5f97\u5230\u7684\u82f9\u679c\u6240\u9700\u529b\u6c14\u5b58\u4e0b\n\t}\n\t\n```\n\u7136\u540e\u8fd9\u91cc\u5c31\u4f1a\u51fa\u73b0\u6458\u4e0d\u5230\u7684\u82f9\u679c\u529b\u6c14\u76f4\u63a5\u5bf9\u5e94\u6210\u96f6\u4e86...\u4f46\u662f\u6807\u8bb0\u4e00\u4e0b\u5c31ok\u4e86\n```\n\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(g[i]==0&&a<xi[i])\n\t\tg[i]=1001;    //\u56e0\u4e3a\u529b\u6c14\u672c\u6765\u5c31\u53ef\u4ee5\u4e3a\u96f6\u6240\u4ee5\u6807\u8bb0\u5176\u4ed6\u6570\n\t}\n\t\n```\n\n\u7136\u540e\u662f\u4e2a\u5192\u6ce1\u6392\u5e8f\u529b\u6c14\u7684\u5927\u5c0f\n```\n\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=i+1;j<=n;j++)\n\t\t{\n\t\t\tif (g[i]>g[j])\n\t\t\tswap(g[i],g[j]);\n\t\t}\n\t}  \n\t\n```\n\n\u6700\u540e\u5c31\u662f\u7d2f\u52a0\u8ba1\u6570\u5566\n```\n\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(g[i]!=1001)\n\t\t{\n\t\t\tq+=g[i];\n\t\t    t++;\n\t\t}\n\t\tif(q>s)\n\t\t{\n\t\t\tt--;\n\t\t    break;\n\t\t}\n\t}\n\n```\n\n\u6700\u540e\u662f\u4e2a\u5b8c\u6574\u4ee3\u7801\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<stdio.h>\nusing namespace std;\nint n,s,a,b,xi[5001],yi[5001],t=0,g[5001],q=0;\nint main()\n{\n\t//freopen(\"in.txt\",\"r\",stdin); \n\t//freopen(\"out.txt\",\"w\",stdout); \n\tcin>>n>>s>>a>>b;\n\tfor(int i=1;i<=n;i++)\n\tcin>>xi[i]>>yi[i];\n\ta+=b;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a>=xi[i])\n\t\tg[i]=yi[i];\t\t\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(g[i]==0&&a<xi[i])\n\t\tg[i]=1001; \n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=i+1;j<=n;j++)\n\t\t{\n\t\t\tif (g[i]>g[j])\n\t\t\tswap(g[i],g[j]);\n\t\t}\n\t}  \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(g[i]!=1001)\n\t\t{\n\t\t\tq+=g[i];\n\t\t    t++;\n\t\t}\n\t\tif(q>s)\n\t\t{\n\t\t\tt--;\n\t\t    break;\n\t\t}\n\t}\n    cout<<t<<endl;\n    return 0;\n}\n```",
        "postTime": 1540645315,
        "uid": 104276,
        "name": "Drunk_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "# \u8fd9\u4e2a\u9898\u5f88\u7b80\u5355\n## \u4e00\u4e2a\u7b80\u5355\u7684\u6392\u5e8f\u518d\u7b80\u5355\u7684\u5224\u65ad\u5c31\u51fa\u6765\u4e86\n### ~~\u621110\u5206\u949f\u5c31AC\u4e86~~\n#### \u4e0b\u9762\u662f\u4ee3\u7801\n\n##### #include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\n```cpp\nusing namespace std;\n\nint main()\n{\n\n    int ans=0,tot,j,g,n,s,a,b,x[10001],y[10001],x1[10001],y1[10001];\n    memset(x,0,sizeof(x));\t\t//\u521d\u59cb\u5316\n    memset(y,0,sizeof(y));\t\t//\u8fd8\u662f\u521d\u59cb\u5316\n    memset(x1,0,sizeof(x1));\t  //\u4f9d\u65e7\u662f\u521d\u59cb\u5316\n    memset(y1,0,sizeof(y1));\t  //\u5168\u90e8\u521d\u59cb\u5316\n    \n    cin>>n>>s;\t\t\t\t\t//\u8f93\u5165\u82f9\u679c\u6570\u548c\u529b\u6c14\n    cin>>a>>b;\t\t\t\t\t//\u8f93\u5165\u6905\u5b50\u7684\u9ad8\u5ea6\u548c\u9676\u9676\u624b\u4f38\u76f4\u7684\u6700\u5927\u957f\u5ea6\n    g=a+b;\t\t\t\t\t\t//\u8fd9\u91cc\u662f\u9676\u9676\u6700\u9ad8\u80fd\u6458\u5230\u7684\u82f9\u679c\u7684\u9ad8\u5ea6\n    \n    for(int i=1;i<=n;i++)\n    {\n        cin>>x[i]>>y[i];\t\t  //\u8f93\u5165 \u82f9\u679c\u9ad8\u5ea6\u548c\u6458\u8fd9\u4e2a\u82f9\u679c\u9700\u8981\u7684\u529b\u6c14\n        x1[i]=x[i];\n        y1[i]=y[i];\n    }\n    \n```\n###### \u4e0b\u9762\u662f\u5224\u65ad\uff08\u5206\u5272\u7ebf\uff09\n```\nfor(int i=1;i<n;i++)\t\t\t  //\u8fd9\u91cc\u662f\u628a\u6240\u6709\u6570\u636e\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    for(j=i+1;j<=n;j++)\n    {\n        if(y1[i]>y1[j])\t\t\t//\u6392\u5e8f\n        {\n            swap(x1[i],x1[j]);\n            swap(y1[i],y1[j]);\n        }\n    }\n    \n    for(int i=1;i<=n;i++)\n    {\n        if(s>=y1[i])\t\t\t  //\u5148\u5224\u65ad\u4f53\u529b\u662f\u5426\u591f\uff08\u5b9e\u9645\u4e0a\u8fd8\u53ef\u4ee5\u5148\u5224\u65ad\u662f\u5426\u80fd\u591f\u5230\uff09\n        {\n            if(g>=x1[i])\t\t  //\u5224\u65ad\u662f\u5426\u80fd\u591f\u5230\n            {\n                ans++;\t\t\t//\u4e34\u65f6\u503c+1\n                s-=y1[i];\n            }\n        }\n    }\n    \n    cout<<ans<<endl;\t\t\t  //\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1540462999,
        "uid": 101608,
        "name": "livealone",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u6709\u8d2a\u5fc3\u7684\u601d\u60f3\u5b58\u5728\uff0c\u5c31\u5c11\u4e0d\u4e86DP\u3002\u770b\u770b\u9898\u89e3\u91cc\u6ca1\u6709DP\uff0c\u5c31\u5c1d\u8bd5\u53d1\u4e2aDP\u7684\u9898\u89e3\u5427.\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u6709\u70b9\u96be\u60f3\u5230\uff1a   **max{f[j-a[i]]+1>f[j]}**\n\n\u4e00\u7ef4\u7684\u4e0d\u4ec5\u4ee3\u7801\u77ed\uff0c\u800c\u4e14\u80fd\u51cf\u5c11\u5197\u4f59        ~~p.s.\u4e8c\u7ef4DP\u6700\u540e\u4e00\u4e2a\u70b9\u8fc7\u4e0d\u4e86~~\n\n\u89e3\u91ca\uff1a\u6bd4\u8f83\u6458\u4e86\u4ee5\u540e\u7684\u82f9\u679c\u4e2a\u6570\u548c\u6ca1\u6458\u7684\u82f9\u679c\u4e2a\u6570\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n\n```cpp\nprogram sss;\n  var t,m,i,j,k,c:longint;\n      a,b,f:array[0..5002] of longint;\n  begin\n  read(m,t);\n  read(c,k);\n  k:=c+k;                                        //\u6700\u9ad8\u9ad8\u5ea6\n  for i:=1 to m do read(b[i],a[i]);      //b[i]:\u82f9\u679c\u9ad8\u5ea6\uff0ca[i]\u6240\u82b1\u529b\u6c14\n  for i:=1 to m do\n   for j:=t downto a[i] do          \n   if b[i]<=k then                            //\u592a\u9ad8\u4e86\u5c31\u4e0d\u7528\u4e86\n    if f[j-a[i]]+1>f[j] then inc(f[j]);       //\u5982\u679c\u65b9\u6848\u66f4\u4f18\uff0c\u5c31\u4fee\u6539\n  writeln(f[t]);\nend.\n```",
        "postTime": 1489468084,
        "uid": 27019,
        "name": "shenyi1343395317",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\n#include<map>\n#include<iomanip>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n using namespace std;\nstruct apple{//\u5f00\u4e2a\u7ed3\u6784\u4f53\u5c31\u597d\u54e9\n    int x;\n    int y;\n}gi[50005];\nbool cmp(struct apple a,struct apple b)\n{\n    return a.y<b.y;\n}\nint main(){\n    freopen(\"ii.in\",\"r\",stdin);\n    freopen(\"ii.out\",\"w\",stdout);\n    int n,s,a,b,ans=0;\n    cin>>n>>s>>a>>b;\n    for(int i=0;i<n;i++)cin>>gi[i].x>>gi[i].y;\n    sort(gi,n+gi,cmp);\n    for(int i=0;i<n;i++)\n    {\n        if(s-gi[i].y<0)break;\n        if(gi[i].x>a+b)continue;\n        else {s-=gi[i].y;ans++;}\n    }\n    cout<<ans;\n    return 0;\n}\n\n```",
        "postTime": 1463299575,
        "uid": 17506,
        "name": "\u8f69\u69ff",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "## ~~\u6765\u6c34\u4e00\u53d1\u9898\u89e3~~\n###  \u5176\u5b9e\u6b64\u9898\u5f88\u7b80\u5355\uff0c\u6bd5\u7adf\u662f\u65b0\u624b\u6751\u7684\u9898\u76ee\u3002    \n#### \u601d\u8def\u5982\u4e0b\uff1a     \n-  \u628a\u6bcf\u4e2a\u82f9\u679c\u6240\u9700\u7684\u4f53\u529b\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u56e0\u4e3a\u5728\u6458\u82f9\u679c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f53\u529b\u503c\u4f1a\u6539\u53d8\uff0c\u4f46\u5c0f\u7ea2\u7684\u9ad8\u5ea6\u4e0d\u53d8\uff08\u4f1a\u4e0d\u4f1a\u6458\u82f9\u679c\u6458\u7740\u6458\u7740\u5c31\u957f\u9ad8\u4e86\uff1f~~**\u624b\u52a8\u6ed1\u7a3d**~~\uff09\n-  \u6392\u5b8c\u5e8f\u540e\uff0c\u5f00\u59cb\u8fdb\u884c\u8d2a\u5fc3\u7b56\u7565\uff0c\u5c0f\u7ea2\u8eab\u9ad8\u6458\u7684\u5230\u82f9\u679c\u5c31\u6458\uff0c\u7b54\u6848+1\u5e76\u51cf\u5c11\u5c0f\u7ea2\u7684\u4f53\u529b\u503c\uff0c\u4e0d\u7136\u5c31\u4e0d\u6458\uff01\u56e0\u4e3a\u6211\u4eec\u5728\u4e4b\u524d\u5df2\u7ecf\u5bf9\u6458\u6bcf\u4e2a\u82f9\u679c\u6240\u9700\u7684\u4f53\u529b\u6392\u8fc7\u5e8f\u4e86\uff0c\u5bf9\u82f9\u679c\u6240\u9700\u4f53\u529b\u503c\u8fdb\u884c\u4e86\u8d2a\u5fc3\u7b56\u7565\uff08\u5373\u5148\u8003\u8651\u6240\u9700\u4f53\u529b\u503c\u5c0f\u7684\uff0c\u5728\u8003\u8651\u5927\u7684\uff09\u3002\n-  \u8f93\u51fa   \n    \n**\u6c34\u6c34**\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,phigh,pliqi,chigh,res=0; //phigh \u5c0f\u7ea2\u7684\u624b\u957f\u5ea6\uff1bpliqi \u5c0f\u7ea2\u7684\u539f\u4f53\u529b\u503c\uff1bchigh \u6905\u5b50\u9ad8\u5ea6\uff1bres\u7b54\u6848\nstruct node{\n\tint high,need;             //high \u6bcf\u4e2a\u82f9\u679c\u7684\u9ad8\u5ea6\uff1bneed \u6bcf\u4e2a\u82f9\u679c\u6240\u9700\u7684\u4f53\u529b\u503c\u3002\n}a[5010];                      //\u7528\u7ed3\u6784\u4f53\u6765\u50a8\u5b58\u6bcf\u4e2a\u82f9\u679c\u7684\u9ad8\u5ea6\uff0c\u6240\u9700\u4f53\u529b\u503c\ninline int read(){             //\u8bfb\u5165\u4f18\u5316\uff0c\u8f93\u5165\u901f\u5ea6\u66f4\u5feb\uff08\u849f\u84bb\u614e\u7528\uff09\n\tint x=0;                   \n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();   //\u5982\u679c\u8bfb\u5165\u7684\u5b57\u7b26\u975e\u6570\u5b57\uff0c\u7ee7\u7eed\u8bfb\u5165\n\twhile(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();//\u5982\u679c\u8bfb\u5165\u7684\u662f\u6570\u5b57\uff0c\u8bb0\u5f55\uff0c\u7ee7\u7eed\u8bfb\u5165\n\treturn x;                         //\u8fd4\u56de\u8bfb\u5165\u7684\u6570\n}                                     //\u5bf9\u4e8e\u8bfb\u5165\u4f18\u5316\uff0c\u6709\u4e9b\u5c0f\u849f\u84bb\u53ef\u80fd\u770b\u4e0d\u61c2\uff0c\u6ca1\u5173\u7cfb\uff0c\u5f53\u6210\uff0ccin\u6216scanf\u5c31\u597d\u4e86\u3002\\( ^_^ )|\ninline void out(int x){               //\u8f93\u51fa\u4f18\u5316\n\tif(x>10)out(x/10);\n\tputchar(x%10+48);\n\treturn ;\n}\ninline void print(){                  //\u8f93\u51fa\u7b54\u6848\n\tout(res);putchar('\\n');\n\treturn ;\n}\ninline bool cmp(node x,node y){return x.need<y.need;}\nint main(){\n\tn=read();pliqi=read();chigh=read();phigh=read();   //\u8f93\u5165\n\tfor(register int i=1;i<=n;i++)a[i].high=read(),a[i].need=read();//\u8f93\u5165\n\tsort(a+1,a+n+1,cmp);                 //\u601d\u8def\u4e2d\u7684\u7b2c\u4e00\u6b65\uff0c\u5bf9\u6bcf\u4e2a\u82f9\u679c\u6240\u9700\u8981\u7684\u4f53\u529b\u503c\u6392\u5e8fing\n\tint s=chigh+phigh;\n\tfor(register int i=1;i<=n;i++){\n\t\tif(pliqi<a[i].need)break;        //\u5982\u679c\u5c0f\u7ea2\u7684\u529b\u6c14\uff0c\u4e0d\u8db3\u4ee5\u6458\u5230\u5f53\u524d\u641c\u7d22\u5230\u7684\u82f9\u679c\u6240\u9700\u7684\u4f53\u529b\u503c\uff0c\u76f4\u63a5\u9000\u51fa\u5faa\u73af\u3002\n                                         //\u56e0\u4e3a\u4e4b\u540e\u7684\u82f9\u679c\u6240\u9700\u4f53\u529b\u503c\u66f4\u5927\uff0c\u82e5\u5f53\u524d\u82f9\u679c\u4e0d\u591f\u529b\u6c14\u6458\uff0c\u4e4b\u540e\u7684\u66f4\u52a0\u4e0d\u7528\u8bf4\u3002\n                                         //\u56e0\u6b64\uff0c\u8fd9\u4e00\u6b65\u662f\u5bf9\u4e8e\u6574\u4e2a\u7a0b\u5e8f\u7684\u538b\u7f29\u3002\n\t\tif(s<a[i].high)continue;         //\u5982\u679c\u5c0f\u7ea2\u7684\u8eab\u9ad8\u4e0d\u591f\u9ad8\uff0c\u6458\u4e0d\u5230\u5f53\u524d\u82f9\u679c\uff0c\u5c31\u6362\u4e00\u4e2a\u82f9\u679c\uff08\u601d\u8def\u4e2d\u7684\u7b2c\u4e8c\u6b65\uff09\n\t\tpliqi-=a[i].need;                //\u5982\u679c\u6458\u7684\u5230\uff0c\u51cf\u5c11\u5c0f\u7ea2\u7684\u4f53\u529b\u503c\uff0c\u7b54\u6848+1\uff08\u601d\u8def\u4e2d\u7684\u7b2c\u4e8c\u6b65\uff09\n\t\tres++;\n\t}\n\tprint();                             //\u8f93\u51fa\n\treturn 0;\n}\n```     \n# ~~\u5982\u679c\u6b64\u9898\u89e3\u8fc7\u4e86\uff0c\u8fd9\u5c31\u662f\u6211\u8fc7\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c**\u6c42\u8fc7**\uff01\uff01~~",
        "postTime": 1548334820,
        "uid": 115923,
        "name": "\u60c5\u8c0a\u3001\u66b4\u8d70",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u9996\u5148\u60f3\u5230\u7684\u662f\u5efa\u4e8c\u7ef4\u6570\u7ec4\u5c06\u82f9\u679c\u9ad8\u5ea6\u548c\u6240\u82b1\u8d39\u529b\u6c14\u5b58\u8fdb\u53bb\uff0c\u518d\u6309\u529b\u6c14\u6392\u5e8f\uff0c\u4ece\u5c0f\u5230\u5927\u9009\u62e9\u6027\u6458\u82f9\u679c\uff0c\u867d\u7136\u8fd9\u7684\u786e\u5f88\u7b80\u5355\uff0c\u4f46\u6700\u8fd1\u5b66\u4e86\u52a8\u6001\u89c4\u5212\uff0c\u5c31\u62ff\u52a8\u6001\u89c4\u5212\u6765\u505a\u8fd9\u9898\u7ec3\u4e60\u4e00\u4e0b\u3002\n\u4e0d\u591a\u8bf4\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n```java\nimport java.util.Scanner;\n\npublic class Main {\nstatic int n,s,a,b;//\u5404\u53c2\u6570\u53c2\u89c1\u9898\u76ee\n\tpublic static void main(String args[]){\n\tScanner sc=new Scanner(System.in);\n\tn=sc.nextInt();s=sc.nextInt();\n\ta=sc.nextInt();b=sc.nextInt();\n\tint h[]=new int[n];//\u82f9\u679c\u8ddd\u5730\u9762\u7684\u9ad8\u5ea6\n\tint st[]=new int[n];//\u6bcf\u4e2a\u82f9\u679c\u6240\u9700\u529b\u6c14\n\tint m[][]=new int[5001][1001];//\u6240\u6709\u6570\u636e\uff1an<=5000 a<=50 b<=200 s<=1000\n\t//m[i][j]\u8868\u793a\u9762\u5bf9\u7b2ci\u4e2a\u82f9\u679c\uff08\u9ad8\u5ea6\u80fd\u6458\u5230\u7684\u60c5\u51b5\u4e0b\uff09\u4e14\u529b\u6c14\u4e3aj\u65f6\u80fd\u6458\u5230\u7684\u6700\u5927\u82f9\u679c\u6570\n\tfor(int i=0;i<n;i++){\n\t\th[i]=sc.nextInt();\n\t\tst[i]=sc.nextInt();\n\t}\n\t\tfor(int j=1;j<=n;j++){//\u6458\u7b2ci\u4e2a\u82f9\u679c\t\t\t\t\n\t\t\tfor(int k=1;k<=s;k++){//\u529b\u6c14\n\t\t\t\tif(k>=st[j-1]&&a+b>=h[j-1]){//\u5f53j\u7b49\u4e8e1\u65f6\uff0c\u8868\u793a\u6458\u7b2c\u4e00\u4e2a\u82f9\u679c\u8fd9\u91ccj-1\u662f\u56e0\u4e3ast[]\u6570\u7ec4\u662f\u4ece\u4e0b\u6807\u4e3a0\u5f00\u59cb\u5b58\u7684\n\t\t\t\t\t\t\t//\u4e5f\u5c31\u662f\u8bf4st[0]\u4ee3\u8868\u6458\u7b2c\u4e00\u4e2a\u82f9\u679c\u82b1\u7684\u529b\u6c14\n\t\t\t\t\t\t\t//h[]\u6570\u7ec4\u540c\u7406\u54e6\n\t\t\t\t\tm[j][k]=Math.max(m[j-1][k], m[j-1][k-st[j-1]]+1);\n\t\t\t\t\t//\u4e0d\u6458\u7b2cj\u4e2a\u82f9\u679c\u4e0e\u6458\u7b2cj\u4e2a\u82f9\u679c\uff0c+1\u5bf9\u5e9401\u80cc\u5305\u95ee\u9898\u7684****+v[j];\n\t\t\t\t\t}\n\t\t\t\t\telse{ \n\t\t\t\t\t\tm[j][k]=m[j-1][k];\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(m[n][s]);\n//\tfor(int i=1;i<=n;i++){\n//\t\tfor(int j=1;j<=s;j++){\n//\t\t\tSystem.out.print(m[i][j]+\" \");\n//\t\t}\n//\t\tSystem.out.print(\"\\n\");\n//\t}\n\t}\n}\n```",
        "postTime": 1522482474,
        "uid": 93583,
        "name": "fanmeng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "~~\u53c8\u6765\u5199\u6c34\u9898\u9898\u89e3~~\n\n\u9996\u5148\u8bfb\u5230\u8fd9\u4e2a\u9898\u9762\uff0c\u53d1\u73b0\u53ea\u662f\u6bd4\u539f\u9898\u591a\u4e86\u4e00\u4e2a\u529b\u6c14\u503c\uff0c\u4ece\u539f\u9898\u53ef\u77e5\uff0c\u9ad8\u5ea6\u9ad8\u4e8e\u9676\u9676\u624b\u957f+\u51f3\u5b50\u957f\u7684\u82f9\u679c\u4e0d\u80fd\u6458\uff0c\u5176\u4ed6\u7684\u5168\u90e8\u6458\u6389\u5373\u53ef\u3002\u4f46\u662f\u8fd9\u9053\u9898\u91cc\u9762\u6bcf\u4e2a\u82f9\u679c\u8981\u6d88\u8017\u529b\u6c14\uff0c\u9676\u9676\u7684\u529b\u6c14\u53c8\u662f\u6709\u9650\u7684\uff0c\u90a3\u4e48\u81ea\u7136\u5c31\u4e0d\u80fd\u5168\u90e8\u6458\u6389\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u53d6\u529b\u6c14\u5c0f\u82f9\u679c\u7684\u6458\u3002\n\n\u597d\u5566\u8fd9\u5c31\u662f\u601d\u8def\u3002\n\n\u4f46\u662f\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u4e3a\u4e86~~\u6bd2\u5bb3~~\u5173\u6000\u65b0\u4eba\uff0c\u6211\u6765\u8bb2\u4e00\u8bb2\u4e00\u79cd\u6392\u5e8f\u7684\u65b9\u6cd5\uff1asort\u6392\u5e8f\u3002\n\nsort\u662fSTL\uff08\u6807\u51c6\u6a21\u677f\u5e93\uff09\u91cc\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u5bf9\u6570\u7ec4\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b:\n\n**sort(a+1,a+1+n);**\n\n\u5176\u4e2da\u4e3a\u6570\u7ec4\u540d\uff0c1\u4e3a\u6392\u5e8f\u7684\u8d77\u70b9\uff0c1+n\uff08\u6570\u636e\u4e2a\u6570\uff09\u662f\u6392\u5e8f\u7684\u7ec8\u70b9\uff08\u5f53\u7136\u5982\u679c\u4f60\u4e60\u60ef\u4ee50\u5f00\u59cb\u5b58\u7684\u8bdd\u4e5f\u53ef\u4ee5\u5199sort(a,a+n)\uff09;\n\nsort\u8fd8\u652f\u6301\u81ea\u5b9a\u4e49\u6392\u5e8f\u65b9\u5f0f\uff0c\u9700\u8981\u81ea\u5df1\u6253\u4e00\u4e2a\u51fd\u6570\uff0c\u4f8b\u5982\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u5c31\u9700\u8981\u8fd9\u6837\u7684\u51fd\u6570\uff1a\n\n```cpp\nbool cmp(int d1,int d2)\n{\n\treturn d1>d2;//   >\u7684\u610f\u601d\u5c31\u662f\u6392\u5e8f\u540e\u524d\u9762\u7684\u6570\u6bd4\u540e\u9762\u5927\uff0c\u5373\u4e3a\u4ece\u5927\u5230\u5c0f\n}\n```\n\n\u7136\u540e\u8fd9\u6837\u653e\u5165sort\u4e2d:\n\n**sort(a+1,a+1+n,cmp);**\n\n\u5229\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0csort\u8fd8\u80fd\u5bf9\u7ed3\u6784\u4f53\u8fdb\u884c\u6392\u5e8f\uff08\u6ce8\u610f\uff1a\u5fc5\u9700\u8981\u52a0\u51fd\u6570\uff09\n\n\u4e3e\u4e2a\u6817\u5b50\uff0c\u6211\u8981\u5c06\u7ed3\u6784\u4f53\u6570\u7ec4a\u6309\u7167x\u7684\u5927\u5c0f\u6765\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n```cpp\nstruct s\n{\n\tint x,y;\n}a[10];\n```\n\u4eff\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\uff0c\u51fd\u6570\u5982\u4e0b\uff1a\n\n```cpp\nbool cmp(sb d1,sb d2)\n{\n \treturn d1.x<d2.x;\n}\n```\n\n\u5176\u5b9esort\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u66f4\u7075\u6d3b\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u4e0d\u4ec5\u4ec5\u662f\u6539\u53d8\u65b9\u5411\u3002\n\n\u4f8b\u5982\u4e00\u7fa4\u5b66\u751f\u6309\u6210\u7ee9\u6392\u5e8f\uff0c\u8bed\u6587\u6210\u7ee9\u9ad8\u7684\u6392\u524d\u9762\uff0c\u8bed\u6587\u76f8\u540c\u65f6\u6570\u5b66\u6210\u7ee9\u9ad8\u5f97\u6392\u524d\u9762:\n\n```cpp\nstruct stu\n{\n\tint y;\n\tint s;\n};\nbool cmp(stu d1,stu d2)\n{\n\tif(d1.y!=d2.y)return d1.y>d2.y;\n\telse return d1.s>d2.s;\n}\n```\n\n\u6700\u540e\u624d\u662f\u5927\u5bb6\u90fd\u559c\u6b22\u7684\u7684\u4ee3\u7801:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint p[5010];\nint n,s,a,b,cnt,ans;\nint main()\n{\n\tscanf(\"%d%d\",&n,&s);\n\tscanf(\"%d%d\",&a,&b);\n\tfor(int i=1;i<=n;i++)//\u5728\u8bfb\u5165\u7684\u65f6\u5019\u5c31\u628a\u4e0d\u53ef\u80fd\u6458\u5230\u7684\u82f9\u679c\u7ed9\u53bb\u6389\n\t{\n\t\tint u,m;\n\t\tscanf(\"%d%d\",&u,&m);\n\t\tif(u>a+b)continue;\n\t\tcnt++;\n\t\tp[cnt]=m;\n\t}\n\tsort(p+1,p+1+cnt);\n\tfor(int i=1;i<=cnt;i++)//\u6309\u529b\u6c14\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u4f18\u5148\u9009\u62e9\u6d88\u8017\u529b\u6c14\u5c0f\u7684\u82f9\u679c\n\t{\n\t\ts=s-p[i];\n\t\tif(s>=0)ans++;\n\t\telse break;\n\t} \n\tprintf(\"%d\",ans);\nreturn 0;\n}\n```",
        "postTime": 1531819548,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u7531\u4e8e\u8fd9\u6b21\u591a\u4e86\u4e2a\u529b\u6c14  \u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u5148\u628a\u529b\u6c14\u7684\u5927\u5c0f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \u540c\u65f6\u5c06\u5176\u5bf9\u5e94\u7684\u9ad8\u5ea6\u8ddf\u968f\u5b83\u7684\u529b\u6c14\u8c03\u6362\u4f4d\u7f6e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u6709\u4e86\u4ee5\u4e0b\u7684\u4ee3\u7801\uff1a\n\n\uff08\u6b64\u5904\u7528\u4e86\u5b57\u7b26\u6570\u7ec4\u56e0\u4e3a\u6211\u4eec\u4f5c\u4e1a\u6709\u51fd\u6570\u7ec3\u4e60\uff0c\u6240\u4ee5\u5c31\u7528\u51fd\u6570\u7ec3\u4e60\u4e86\u4e00\u4e0b\u8f6c\u5316\u3002\uff09\n------------\n```c\nint i,j,n,s,a,b,k,e[5001],sum=0;\n\tchar c[5001][5],f[5001];\n\tscanf(\"%d%d\",&n,&s);\n\tscanf(\"%d%d\",&a,&b);\n\tfor(i=0;i<n;i++)\n\t    scanf(\"%s %d\",c[i],&e[i]);\n\tfor(j=1;j<n;j++)\n\t    for(i=0;i<n-j;i++)\n\t\t    if(e[i]>e[i+1]) \n\t\t\t{  k=e[i+1];  e[i+1]=e[i];  e[i]=k; strcpy(f,c[i+1]);  strcpy(c[i+1],c[i]);  strcpy(c[i],f); }\n\n\n```\n\n\n------------\n\n\u65e2\u7136\u5982\u6b64 \u6211\u4eec\u6709\u4e86\u521d\u6b65\u7ed3\u6784\uff1b\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5b9a\u4e49\u4e8c\u7ef4\u6570\u7ec4\u7684\u8bdd\uff0c\u662f\u56e0\u4e3a~~\u5728\u4e0b\u5b9e\u5728\u662f\u4e0d\u77e5\u9053~~\u5982\u4f55\u7528\u4e00\u4f4d\u6570\u7ec4\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u7531\u4e8e\u6211\u4eec\u5728\u5b9a\u4f4d\u4e8c\u7ef4\u6570\u7ec4\u7684\u65f6\u5019\u4f7f\u7528\u7684\u662f\u5b57\u7b26\u6570\u7ec4\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5c06\u5b57\u7b26\u6570\u7ec4\u8fdb\u884c\u8f6c\u5316\uff0c\u53d8\u6210\u6570\u5b57\u3002\u6240\u4ee5\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u3002\n\n\n------------\n\n```c\nint numb(char a[5])\n{\n    int i,j,sum=0,n,t;\n\tn=strlen(a);\n\tfor(i=0;i<n;i++)\n\t{\n\t    j=pow(10,n-i-1);\n\t    t=(a[i]-'0')*j;\n\t    sum+=t;\n\t}\n\treturn sum;\n}\n```\n\n\n------------\n\n\u8fd9\u4e2a\u51fd\u6570\u5b9a\u4e49\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b57\u7b26\u7684\u6570\u5b57\u8f6c\u5316\u4e3a\u771f\u6b63\u7684\u6570\u5b57\u4e86\u3002\n\u7136\u540e\u6211\u4eec\u770b\u5224\u65ad\u6761\u4ef6\uff0c\u53ea\u9700\u8981\u8ba9\u6211\u4eec\u7684\u5f53\u524d\u529b\u6c14\u5148\u4e0d\u5c0f\u4e8e\u6458\u8fd9\u4e2a\u82f9\u679c\u7684\u529b\u6c14\uff08\u5df2\u7ecf\u6392\u8fc7\u5e8f\uff0c\u6ca1\u6709\u51fa\u5927\u529b\u7684\u95ee\u9898\u4e86\uff09\u5373\u53ef\uff0c\u7136\u540e\u518d\u5224\u65ad\u6211\u4eec\u4e0a\u51f3\u5b50\u80fd\u4e0d\u80fd\u78b0\u5230\u5373\u53ef\uff0c\u5c31\u6709\u4e86\uff1a\n\n\n------------\n\n```c\nfor(i=0;i<n;i++)\n\t\tif(s>=e[i]&&(a+b>=numb(c[i]))) \n\t\t   {\n\t\t\t   s=s-e[i];\n\t\t\t   sum++;\n\t\t}\n```\n\n\n------------\n\u90a3\u4e48\u6211\u4eec\u6574\u4f53\u7684\u5e03\u5c40\u5df2\u7ecf\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u5c31\u7ec4\u6210\u4e86\u5b8c\u6574\u7684\u4ee3\u7801\uff1a\n\n\n------------\n```c\n#include<stdio.h>\n#include<string.h>\n#include<math.h>\nint numb(char a[5])\n{\n    int i,j,sum=0,n,t;\n\tn=strlen(a);\n\tfor(i=0;i<n;i++)\n\t{\n\t    j=pow(10,n-i-1);\n\t    t=(a[i]-'0')*j;\n\t    sum+=t;\n\t}\n\treturn sum;\n}\nint main()\n{\n\tint i,j,n,s,a,b,k,e[5001],sum=0;\n\tchar c[5001][5],f[5001];\n\tscanf(\"%d%d\",&n,&s);\n\tscanf(\"%d%d\",&a,&b);\n\tfor(i=0;i<n;i++)\n\t    scanf(\"%s %d\",c[i],&e[i]);\n\tfor(j=1;j<n;j++)\n\t    for(i=0;i<n-j;i++)\n\t\t    if(e[i]>e[i+1]) \n\t\t\t{  k=e[i+1];  e[i+1]=e[i];  e[i]=k; strcpy(f,c[i+1]);  strcpy(c[i+1],c[i]);  strcpy(c[i],f); }\n\tfor(i=0;i<n;i++)\n\t\tif(s>=e[i]&&(a+b>=numb(c[i]))) \n\t\t   {\n\t\t\t   s=s-e[i];\n\t\t\t   sum++;\n\t\t}\n\tprintf(\"%d\\n\",sum);\n\n}\n\n```\n\n\n------------\n\u4e0d\u7528\u5b57\u7b26\u6570\u7ec4\u7684\u8bdd\u5176\u5b9e\u66f4\u5feb\uff1a\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n\n\n------------\n```c\n#include<stdio.h>\nint main()\n{\n\tint i,j,n,s,a,b,k,e[5001],sum=0;\n\tint c[5001],f;\n\tscanf(\"%d%d\",&n,&s);\n\tscanf(\"%d%d\",&a,&b);\n\tfor(i=0;i<n;i++)\n\t    scanf(\"%d%d\",&c[i],&e[i]);\n\tfor(j=1;j<n;j++)\n\t    for(i=0;i<n-j;i++)\n\t\t    if(e[i]>e[i+1]) \n\t\t\t{  k=e[i+1];  e[i+1]=e[i];  e[i]=k; f=c[i+1];  c[i+1]=c[i];  c[i]=f;  }\n\tfor(i=0;i<n;i++)\n\t\tif(s>=e[i]&&(a+b>=c[i])) \n\t\t   {\n\t\t\t   s-=e[i];\n\t\t\t   sum++;\n\t\t}\n\tprintf(\"%d\\n\",sum);\n\n}\n\n```\n---\n\u5176\u5b9e\u5728s=0\u7684\u65f6\u5019 \u7a0b\u5e8f\u5c31\u5df2\u7ecf\u53ef\u4ee5\u505c\u4e0b\u6765\u7684\uff0c\u53ef\u4ee5\u52a0\u6761\u4ef6\u51cf\u5c0f\u8fd0\u884c\u65f6\u95f4\uff0c\u4f46\u662f\u597d\u50cf\u6ca1\u6709\u592a\u5927\u7684\u5fc5\u8981\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6ca1\u6709\u8d85\u65f6\uff0c\u6240\u4ee5\u4e5f\u5c31\u4e0d\u52a0\u4e86\u3002~~\u5927\u4f6c\u4eec\u4e0d\u559c\u52ff\u55b7\u5440\u3002~~",
        "postTime": 1555123474,
        "uid": 196726,
        "name": "Aatroy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "# \u7b2c\u4e00\u6b21\u53d1\u5e03\u9898\u89e3.\n\u8fd9\u9053\u9898\u7684\u4eae\u70b9\uff1a\u53ef\u4ee5\u4f18\u5316\u8f93\u5165\u3002\n\n\u901a\u8fc7\u89c2\u5bdf\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6709\u4e9b\u6570\u636e\u662f\u6ca1\u6709\u5fc5\u8981\u8bfb\u5165\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8f93\u5165\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u8fc7\u6ee4\u6389\n\n\u7136\u540e\u62ff\u82f9\u679c\u65f6\u5148\u62ff\u9700\u8981\u529b\u6c14\u503c\u5c0f\u7684\uff0c\u8fd9\u5c31\u662f\u8d2a\u5fc3\u7684\u5185\u5bb9\u4e86\u3002\n\n\u4ee3\u7801\u5448\u4e0a\n```\n#include<stdio.h>\n#include<stdlib.h>\n int tree_force[5000]; //\u6bcf\u68f5\u6811\u6240\u9700\u8981\u7684\u529b\u6c14\u503c\nint findPos(int data[], int low, int high) {\n    //\u5c06\u5927\u4e8et\u7684\u5143\u7d20\u8d76\u5230t\u7684\u5de6\u8fb9\uff0c\u5927\u4e8et\u7684\u5143\u7d20\u8d76\u5230t\u7684\u53f3\u8fb9\n    int t = data[low];\n    while(low < high) {\n        while(low < high && data[high] >= t) {\n            high--;\n        }\n        data[low] = data[high];\n        while(low < high && data[low] <=t) {\n            low++;\n        }\n        data[high] = data[low];\n    }\n    data[low] = t;\n    //\u8fd4\u56de\u6b64\u65f6t\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\n    return low;\n}\n//\u5728\u6570\u7ec4\u4e2d\u627e\u4e00\u4e2a\u5143\u7d20\uff0c\u5bf9\u5927\u4e8e\u8be5\u5143\u7d20\u548c\u5c0f\u4e8e\u8be5\u5143\u7d20\u7684\u4e24\u4e2a\u6570\u7ec4\u8fdb\u884c\u518d\u6392\u5e8f\n//\u518d\u5bf9\u4e24\u4e2a\u6570\u7ec4\u5206\u4e3a4\u4e2a\u6570\u7ec4\uff0c\u518d\u6392\u5e8f\uff0c\u76f4\u5230\u6700\u540e\u6bcf\u7ec4\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u4e3a\u6b62\nvoid quickSort(int data[], int low, int high) {\n    if(low > high) {\n        return;\n    }\n    int pos = findPos(data, low, high);\n    quickSort(data, low, pos-1);\n    quickSort(data, pos+1, high); \n}\n//\u6458\u5f55\u81f3https://blog.csdn.net/change_on/article/details/56927267 \n\nint main()\n{\n\tint n,s,i;\n\tint ans=0;\n\tint k=0;\n\tint a,b;\n\tscanf(\"%d%d\\n\",&n,&s);\n    scanf(\"%d%d\\n\",&a,&b);\t\n\t int heigh=a+b;//\u8e29\u7740\u6905\u5b50\u7684\u6700\u5927\u9ad8\u5ea6\n\tint cnt=0,temp,temp2,trash;//\u6811\u7684\u9ad8\u5ea6\u53ea\u9700\u8981\u7528\u4e8e\u5224\u65ad\u662f\u5426\u9700\u8981\u7eb3\u5165force\u6570\u7ec4 \n\tfor(i=0;i<n;i++) \n\t{\n\t\tscanf(\"%d\",&temp);\n\t\tif(heigh>=temp)\n\t\t{\n\t\t\tscanf(\"%d\",&temp2);\n\t\t\ttree_force[cnt]=temp2;//\u5982\u679c\u591f\u5f97\u5230\uff0c\u5c31\u7eb3\u5165\u6570\u7ec4 \n\t\t\tcnt++;\n\t\t}\n\t\telse\t\t\n\t\t{\n\t\t\tscanf(\"%d\\n\",&trash);//\u8df3\u5230\u4e0b\u4e00\u884c \n\t\t}; \n\t}\n\tquickSort(tree_force,0,cnt-1);//\u5feb\u901f\u6392\u5e8f\uff0c\u505a\u8d2a\u5fc3\u7684\u57fa\u7840 \n\n\twhile(s>0)\n\t{ \n\t    ans++;\n\t    s=s-tree_force[k];\n\t    k++;\n\t} \n\tif(s<0)ans--;//\u5982\u679c\u529b\u6c14\u4e3a\u8d1f\u6570\uff0c\u8bf4\u660e\u529b\u6c14\u4e0d\u591f\u62ff\u6700\u540e\u4e00\u4e2a\u82f9\u679c \n\tprintf(\"%d\",ans) ;\n} \n\n```\n",
        "postTime": 1544706796,
        "uid": 111880,
        "name": "liuyinglun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "**python\u9898\u89e3**\n\n\u770b\u5230\u5404\u4f4d\u7287\u7287\u90fd\u63d0\u8d2a\u5fc3\u7b97\u6cd5\u6709\u70b9\u5bb3\u6015\n\n```python\n#\u8f93\u5165\u53d8\u91cf\uff0c\u5b9a\u4e49\u53d8\u91cf\napple_num,total_strength = map(int,input().split())\nheight = sum(map(int, input().split()))\napples = []\npick_apples = count = 0\n#\u8bfb\u5165\u82f9\u679c\u6570\u636e\uff0c\u5e76\u7b5b\u9009\u51fa\u591f\u5f97\u7740\u7684\u82f9\u679c\nfor i in range(apple_num) :\n    apple_height, apple_strength = map(int,input().split())\n    if apple_height <= height :\n        apples.append(apple_strength)\n#\u6839\u636e\u6bcf\u4e2a\u82f9\u679c\u7684\u529b\u6c14\u5927\u5c0f\u6392\u5e8f\napples.sort()\nwhile total_strength > 0:\n    if apples[count]<= total_strength:\n        pick_apples +=1\n    total_strength -= apples[count]\n    count += 1\nprint(pick_apples)\n```",
        "postTime": 1545628233,
        "uid": 168387,
        "name": "AlexZy",
        "ccfLevel": 0,
        "title": "Python\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u6c42\u8f7b\u55b7\uff0c\u987a\u4fbf\u95ee\u95ee\u5404\u4f4d\u5927\u7287\u53c8\u6ca1\u6709\u66f4\u5feb\u7684\u6392\u5e8f\u7b97\u6cd5\n```\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main(){\n    int a, b, n, s;//\u9898\u8bbe\u53d8\u91cf:\u51f3\u5b50\u9ad8\u5ea6a\uff0c\u624b\u957fb\uff0cn\u4e2a\u82f9\u679c\uff0c\u529b\u6c14s\n    int *height = NULL, *cost = NULL, *mark = NULL;//\u52a8\u6001\u6570\u7ec4\u6307\u9488\n    int cost_max, count=0;//\u529b\u6c14\u8303\u56f4\u5185\u8017\u8d39\u6700\u591a\u7684\u529b\u6c14\uff0c\u548c\uff0c\u82f9\u679c\u8ba1\u6570\u5668\n    int i,j;\n    \n    \n    scanf(\"%d%d%d%d\", &n, &s, &a, &b);\n    if (s==0 || n==0) printf(\"0\"); //\u6ca1\u529b\u6c14\u751a\u81f3\u6ca1\u82f9\u679c\u76f4\u63a5\u8f93\u51fa0\n    \n    \n    height = (int *)malloc(sizeof(int)*n);//\u82f9\u679c\u9ad8\u5ea6\u6570\u7ec4\n    cost   = (int *)malloc(sizeof(int)*n);//\u6240\u9700\u529b\u6c14\u6570\u7ec4\n    mark   = (int *)malloc(sizeof(int)*n);//\u662f\u5426\u53ef\u53d6\u6570\u7ec4\uff0c1\u4e3a\u4e0d\u53ef\u53d6\uff0c0\u4e3a\u53ef\u53d6\n    memset(height, 0, sizeof(int)*n);//\n    memset(cost, 0, sizeof(int)*n);//\n    memset(mark, 0, sizeof(int)*n);//\u6e05\u96f6\n    \n    \n    a += b;//\u5408\u5e76\u9ad8\u5ea6\n    \n    \n    for (i=0; i<n; ++i){    \n        scanf (\"%d%d\",&height[i],&cost[i]);//\u5f55\u5165\u6bcf\u4e2a\u82f9\u679c\u7684\u9ad8\u5ea6\u548c\u6240\u9700\u529b\u6c14\n        if (height[i] > a || cost[i] > s) mark[i] = 1; //\u5982\u679c\u9ad8\u5ea6\u8fc7\u9ad8\u6216\u8005\u529b\u6c14\u4e0d\u591f\uff0c\u6807\u8bb0\u4e3a1\n        cost_max = cost_max < cost[i] ? cost[i] : cost_max;\n    }\n    \n    \n    for (i=0; i<=cost_max; ++i){  //\u5148\u4ece\u8d39\u529b\u5c11\u7684\u5f00\u59cb\u6458\n        for (j=0; j<n; ++j){      //\u89c2\u5bdf\u6bcf\u4e2a\u82f9\u679c\n            if (mark[j]) continue;//\u88ab\u6807\u8bb0\u8fc7\u4e86\u5c31\u8df3\u8fc7\uff0c\u770b\u4e0b\u4e00\u4e2a\u82f9\u679c\n            if (cost[j] == i){      //\u5982\u679c\u8981\u8d39\u7684\u529b\u6c14\u7b49\u4e8ei\n                if (s-cost[j] >= 0){//\u800c\u4e14\u5269\u4e0b\u529b\u6c14\u591f\n                        s -= cost[j];//\u6478\u4e86\n                        ++count;     \n                        mark[j] = 1;\n                }\n                else{//\u5426\u5219\u5df2\u7ecf\u6ca1\u529b\u6c14\u4e86\uff0c\u8f93\u51fa\u6458\u7684\u4e2a\u6570\n                    printf(\"%d\", count);\n                    return 0;\n                }  \n            }\n        }\n    }\n    printf(\"%d\", count);//\u529b\u6c14\u8db3\u591f\u6458\u5b8c\u6240\u6709\u591f\u5f97\u7740\u7684\n    return 0;\n}\n\n```\n\n\n",
        "postTime": 1543317177,
        "uid": 141507,
        "name": "worijibama",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "### \u601d\u8def\n\n1. \u7b5b\u9009\u51fa\u9676\u9676\u80fd\u6458\u5230\u7684\u82f9\u679c\n2. \u6458\u5c3d\u91cf\u591a\u7684\u82f9\u679c\n\n### \u505a\u6cd5\n\n1. \u5b9a\u4e49\u7ed3\u6784\u4f53 `Apple`\n    ```c++\n    struct Apple {\n        int height;\n        int weight;\n    };\n    ```\n\n    - `height`: \u82f9\u679c\u7684\u9ad8\u5ea6\n    - `weight`: \u6458\u82f9\u679c\u9700\u8981\u7684\u4f53\u529b\n\n2. \u8f93\u5165\n    ```c++\n    Apple apples[MaxN];\n    int n, s, a, b, h;\n    scanf(\"%d%d%d%d\", &n, &s, &a, &b);\n    h = a + b;\n    for (int i = 1; i <= n; ++i) {\n        scanf(\"%d%d\", &apples[i].height, &apples[i].weight);\n    }\n    ```\n\n3. \u8fdb\u884c\u7b5b\u9009\n    ```c++\n    Apple selected[MaxN];\n    int cnt = 0;\n    for (int i = 1; i <= n; ++i) {\n        if (apples[i].height <= a + b) {\n            selected[cnt++] = temp;\n        }\n    }\n    ```\n\n4. \u8d2a\u5fc3\n    \u8981\u6458\u5c31\u6458\u9700\u8981\u7684\u4f53\u529b\u6700\u5c0f\u7684\uff0c\u8fd9\u6837\u624d\u80fd\u6458\u5f97\u591a\u3002\n    ```c++\n    bool cmp(const Apple& a1, const Apple& a2) {\n        return a1.weight < a2.weight;\n    }\n\n    sort(selected, selected + cnt, cmp)\n    int ans;\n    for (ans = 0; ans < cnt; ++cnt) {\n        if (s -= selected[ans].weight < 0) {\n            break;\n        }\n    }\n    ```\n\n5. \u8f93\u51fa\n    ```c++\n    printf(\"%d\\n\", ans);\n    ```\n\n\u4ee5\u4e0a\u662f\u5e38\u89c4\u505a\u6cd5\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8fd0\u7528\u6807\u51c6\u5e93~~\u9b54\u6cd5~~\u4e0e C++11 \u8bed\u6cd5\u7b80\u5316~~\u770b\u4e0d\u61c2\u5316~~\u6211\u4eec\u7684\u4ee3\u7801\n\n~~\u5176\u5b9e\u8fd9\u624d\u662f\u91cd\u70b9~~\n\n1. \u8f93\u5165+\u7b5b\u9009\n    ```c++\n    istream& operator>>(istream& in, Apple& a) {\n        in >> a.height >> a.weight;\n        return in;\n    }\n\n    vector<Apple> apples;\n    copy_if(\n        istream_iterator<Apple>(cin),\n        istream_iterator<Apple>(),\n        back_inserter(apples),\n        [h](const Apple& a) { return a.height <= h; }\n    );\n    ```\n\n2. \u8d2a\u5fc3+\u8f93\u51fa\n    ```c++\n    sort(apples.begin(), apples.end(), [](const Apple& a1, const Apple& a2) {\n        return a1.weight < a2.weight;\n    });\n    cout << count_if(apples.begin(), apples.end(), [&s](const Apple& a) {\n        return (s -= a.weight) >= 0;\n    });\n    ```\n\n### \u77e5\u8bc6\u70b9\n- [`copy_if`](https://zh.cppreference.com/w/cpp/algorithm/copy)\n- [`count_if`](https://zh.cppreference.com/w/cpp/algorithm/count)\n- [`istream_iterator`](https://zh.cppreference.com/w/cpp/iterator/istream_iterator)\n- [`back_inserter`](https://zh.cppreference.com/w/cpp/iterator/back_inserter)\n- [`Lambda \u8868\u8fbe\u5f0f`](https://zh.cppreference.com/w/cpp/language/lambda)\n\n### \u5b8c\u6574\u4ee3\u7801\n```c++\n#include <iostream>\n#include <iterator>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nstruct Apple {\n    int height;\n    int weight;\n};\n\nistream& operator>>(istream& in, Apple& a) {\n    in >> a.height >> a.weight;\n    return in;\n}\n\nint main() {\n    int n, s, a, b, h;\n    cin >> n >> s >> a >> b;\n    h = a + b;\n    vector<Apple> apples;\n    copy_if(\n        istream_iterator<Apple>(cin),\n        istream_iterator<Apple>(),\n        back_inserter(apples),\n        [h](const Apple& a) { return a.height <= h; }\n    );\n    sort(apples.begin(), apples.end(), [](const Apple& a1, const Apple& a2) {\n        return a1.weight < a2.weight;\n    });\n    cout << count_if(apples.begin(), apples.end(), [&s](const Apple& a) {\n        return (s -= a.weight) >= 0;\n    });\n    return 0;\n}\n```\n\n`C#`: \u4ee5\u4e0a\u90fd\u662f\u6e23\u6e23\uff0c\u770b\u6211 Linq \u5927\u6cd5\n```c#\nint ans = apples.Where(a => a.height <= h).OrderBy(a => a.weight).Count(a => (s -= a.weight) >= 0);\n```\n\n### \u9644\n[**My Blog**](https://tengkaize.github.io/)",
        "postTime": 1543075333,
        "uid": 67939,
        "name": "tengkaize",
        "ccfLevel": 7,
        "title": "P1478 \u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09"
    },
    {
        "content": "\u6211\u4eec\u5728\u8f93\u5165\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u7b5b\u6389\u591f\u4e0d\u5230\u7684\uff0c\u5148\u8bfb\u5165\u7b2c\u4e00\u4e2a\u6570\uff0c\u5224\u65ad\u662f\u5426\u591f\u7684\u7740\uff0c\u5982\u679c\u4e0d\u884c\uff0c\u5c31\u628a\u540e\u9762\u8fdb\u8ddf\u7740\u7684\u201c\u529b\u6c14\u201d\u4e22\u5230\u4e00\u4e2a\u540d\u4e3a`hao_wu_luan_yong`\u7684\u6beb\u65e0\u7528\u5904\u7684\u53d8\u91cf\u4e22\u5f03\u3002\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u8282\u7701\u6389\u4e00\u4e2axi\u6570\u7ec4\uff0c\u6700\u540e\u53ea\u7559\u4e0b\u529b\u6c14\u6570\u7ec4\u3002\u4e4b\u540e\uff0c\u6392\u5e8f\uff0c\u5224\u5b9a\u5373\u53ef\u3002\n\n\u8fd9\u91cc\uff0c\u6211\u4f7f\u7528\u4e86`vector`\uff0c\u5c31\u4e0d\u7528\u7ba1\u957f\u5ea6\u4ec0\u4e48\u4e8b\u60c5\u4e86\uff0c\u6211\u4e00\u5f00\u59cb\u7528\u6570\u7ec4\u6392\u5e8f\u7684\u65f6\u5019\uff0c\u524d\u9762\u83ab\u540d\u591a\u4e86\u4e24\u4e2a\u96f6\u2026\u2026\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nint main(int argc, char const *argv[]) //\u8fd9\u91cc\u662fVS Code\u81ea\u5df1\u8865\u5168\u7684\n{\n    int n, s, a, b;   //\u5bf9\u5e94\u9898\u76ee\u91cc\u7684\u91cf\n    int hao_wu_luan_yong;   //\u7b5b\u6389\u7684\u591f\u4e0d\u5230\u7684\u82f9\u679c\u5bf9\u5e94\u7684\u529b\u6c14\n    vector<int> y;\n    cin >> n >> s >> a >> b;\n    \n    int sum = a + b; \n    for (int i = 0; i < n; i++) {\n        int j;\n        cin >> j; \n        if (j > sum) {\n            cin >> hao_wu_luan_yong;   //\u5982\u679c\u591f\u4e0d\u5230\uff0c\u628a\u5bf9\u5e94\u7684\u529b\u6c14\u4e22\u6389\n        }\n        else {\n            int k; cin >> k;\n            y.push_back(k);           //\u5982\u679c\u53ef\u4ee5\uff0c\u5b58\u8fdb\u529b\u6c14\u6570\u7ec4\n        }\n        \n    }\n\n    int ans = 0;\n    sort(y.begin(), y.end());             //\u6392\u5e8f\n    for (int i = 0; i < n; i++) {\n        if (y[i] <= s) {\n            ans++; s = s - y[i];\n        } else break;\n    }\n\n    cout << ans << \"\\n\";\n    \n    return 0;\n}\n```",
        "postTime": 1541319206,
        "uid": 116120,
        "name": "GE_gb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u8bf4\u5b9e\u8bdd\uff0c\u697c\u4e0a\u7684dalao\u4eec\u5199\u7684\u4ee3\u7801\u672c\u849f\u84bb\u662f\u771f\u770b\u4e0d\u61c2\n\n\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u4e2a\u9898\u9996\u5148\u60f3\u5230\u4e8601\u80cc\u5305\n\n\u4f46\u662f\u4e00\u8bfb\u9898\u53d1\u73b0\u6ca1\u6709\u90a3\u4e48\u590d\u6742\uff0c\u7528\u8d2a\u5fc3\u7684\u529e\u6cd5\u5c31\u53ef\u4ee5\u89e3\u51fa\u6765\n\n\u672c\u4eba\u7684\u601d\u8def\u662f\u8fd9\u6837\u7684\n\n\u8bfb\u5165\u6570\u636e\u540e\uff0c\u5148\u628a\u6240\u9700\u8981\u7684\u529b\u6c14s\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u518d\u628as\u5bf9\u5e94\u7684\u82f9\u679ch\u6309s\u7684\u987a\u5e8f\u91cd\u6392\n\n\u672c\u4eba\u7528\u4e86\u4e24\u4e2afor\u6765\u5b9e\u73b0\uff0c\u5982\u4e0b\n\n```cpp\nfor(int i=1;i<=nall;i++) \n{\n        int minn=s[i],p=i,q;\n        for(int j=i+1;j<=nall;j++)\n          if(minn>s[j]) {p=j;minn=s[j];}\n        q=s[i];\n        s[i]=s[p];\n        s[p]=q;\n        q=h[i];\n        h[i]=h[p];\n        h[p]=q;\n }\n```\n\u8fd9\u6837\u4e00\u6765\uff0c\u8f93\u51fa\u53ea\u9700\u8981\u628as\u4ece\u5c0f\u5230\u5927\u5faa\u73af\uff0c\u5224\u65ad\u5bf9\u5e94\u7684h\u80fd\u5426\u88ab\u6dd8\u6dd8\u6458\u5230\uff0c\u662f\u4e00\u4e2a\u5341\u5206\u7b80\u5355\u7684\u8fc7\u7a0b\n\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\n\nint ans=0\uff0cnall\uff0cmaxt\uff0csall;//sall\u662f\u6dd8\u6dd8\u529b\u91cf\u7684\u603b\u548c\uff0cmaxt\u662f\u6dd8\u6dd8\u7684\u9ad8\u5ea6\uff08\u52a0\u4e0a\u6905\u5b50\u4e86\uff09\uff0cnall\u662f\u82f9\u679c\u603b\u6570\n\nfor(int i=1;i<=nall;i++)\n\n      if(maxt>=h[i]&&sall>=s[i]) {ans++;sall-=s[i];}\n\n\u6700\u540e\uff0c\u8f93\u51fa\u4fbf\u53ef\u3002\n\n\u770b\u8d77\u6765\u597d\u50cf\u6709\u70b9\u4e71\uff0c\u53d1\u4e00\u4e0b\u5b8c\u6574\u6e90\u7801\n\n```cpp\n#include<iostream>\nusing namespace std;\nint h[5001],s[5001],nall,sall,maxt,maxc,ans=0;\nint main()\n{\n    cin>>nall>>sall>>maxc>>maxt;\n    maxt+=maxc;\n    for(int i=1;i<=nall;i++)\n      cin>>h[i]>>s[i];\n    for(int i=1;i<=nall;i++)\n    {\n        int minn=s[i],p=i,q;\n        for(int j=i+1;j<=nall;j++)\n          if(minn>s[j]) {p=j;minn=s[j];}\n        q=s[i];\n        s[i]=s[p];\n        s[p]=q;\n        q=h[i];\n        h[i]=h[p];\n        h[p]=q;\n    }\n    for(int i=1;i<=nall;i++)\n      if(maxt>=h[i]&&sall>=s[i]) {ans++;sall-=s[i];}\n    cout<<ans;\n    return 0;\n}\n\u671b\u8bf8\u4f4ddalao\u6307\u6559\n```",
        "postTime": 1510667428,
        "uid": 70177,
        "name": "big_news",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u563f\u563f\u563f\u563f\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n```cpp\n\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint a[5001];\nint main()\n{\n    int n,s,x,y,shou,deng,k=0,num=0,daan=0;\n    cin>>n>>s>>deng>>shou;\n    for(int i=0;i<n;i++)\n    {\n        cin>>x>>y;\n        if(deng+shou>=x)\n        {\n            a[k]=y;\n            num++;\n            k++;//\u628a\u6240\u6709\u53ef\u6458\u7684\u5168\u8bb0\u4e0b\u6765\n        }\n    }\n    sort(a,a+num);//\u6392\u5e8f\u554a\n    for(int i=0;i<num;i++)\n    {\n        if(s-a[i]>=0)\n        {\n            daan++;\n            s-=a[i];\n        }//\u4ece\u5c0f\u5f00\u59cb\uff0c\u6ce8\u610f\u82e5\u4e00\u4e2a\u82f9\u679c\u6458\u5b8c\u540es=0\u4ecd\u7b97\u7684\uff0c\u7b2c\u4e00\u4e2a\u70b9\u5c31\u662f\n        else\n            break;\n    }\n    cout<<daan<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1456142010,
        "uid": 8174,
        "name": "Cyamuleaf",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u6bcf\u4e2a\u82f9\u679c\uff0c\u65e0\u8bba\u82b1\u8d39\u591a\u5c11\u529b\u6c14\uff0c \u5f97\u5230\u7684\u90fd\u662f\u4e00\u4e2a\u82f9\u679c\uff08\u591a\u52b3\u4e0d\u591a\u5f97\u554a\uff09\uff0c\u81ea\u7136\u9700\u8981\u529b\u6c14\u5c0f\u7684\u82f9\u679c\u6458\u8d8a\u591a\u8d8a\u597d\u4e86\uff08\u8d2a\u5fc3\uff09\u3002\u8fd9\u91cc\u7684\u4ee3\u7801\u4f7f\u7528\u4e86STL\u7684pair\u628a\u4e24\u4e2a\u6570\u636e\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u7b80\u5316\u4e86\u4ee3\u7801\u3002\n\n```cpp\n\n#include <iostream>\n#include <algorithm>\n#include <utility>\n\nusing namespace std;\n\nint n, a, b, s, ans;\npair<int,int> t[5005];  // second = xi; first = yi;\n\nint main()\n{\n    cin >> n >> s >> a >> b;\n    for (int i = 0; i < n; ++i)\n    {\n        cin >> t[i].second >> t[i].first;\n    }\n    sort(t, t + n);\n    for (int i = 0; i < n; ++i)\n    {\n        if (t[i].second <= a + b && t[i].first <= s)\n        {\n            s -= t[i].first;\n            ++ans;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\n```",
        "postTime": 1435917490,
        "uid": 7507,
        "name": "abtd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u6570\u636e\u6c34\uff0c\u4e0d\u89e3\u91ca\u3002\u76f4\u63a5\u5feb\u6392\u4e00\u4e0b\uff0c\u7136\u540e\u7531\u82f9\u679c\u4e3a\u4e3b\uff0c\u5982\u679c\u53ef\u4ee5\u6458\u9676\u9676\u90a3\u4e48\u5c31\u6458\uff08\u6b64\u65f6\u8df3\u5230\u4e0b\u4e00\u4e2a\u82f9\u679c\u548c\u4e0b\u4e00\u4e2a\u9676\u9676\uff09\u5982\u679c\u4e0d\u80fd\u6458\uff0c\u90a3\u4e48\u5c31\u5bfb\u627e\u4e0b\u4e00\u4e2a\u9676\u9676\u662f\u5426\u80fd\u6458\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u7531\u4e8e\u6392\u5e8f\u662f\u7531\u5c0f\u5230\u5927\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u9519\n\n```cpp\nvar  \n x,y:array [1..5000] of longint;  \n a,b,i,j,yy,n,s,ans,temp:longint;  \nprocedure sort(l,r: longint);  \n var  \n  i,j,x1,y1:longint;  \n begin  \n  i:=l;  \n  j:=r;  \n  x1:=x[(l+r) div 2];  \n  repeat  \n   while x[i]<x1 do  \n    inc(i);  \n   while x1<x[j] do  \n    dec(j);  \n   if not(i>j) then  \n                begin  \n                 y1:=x[i];  \n                 x[i]:=x[j];  \n                 x[j]:=y1;  \n                 y1:=y[i];  \n                 y[i]:=y[j];  \n                 y[j]:=y1;  \n                 inc(i);  \n                 dec(j);  \n                end;  \n  until i>j;  \n  if l<j then sort(l,j);  \n  if i<r then sort(i,r);  \n end;  \nprocedure sort1(l,r: longint);  \n var  \n  i,j,x1,y1:longint;  \n begin  \n  i:=l;  \n  j:=r;  \n  x1:=y[(l+r) div 2];  \n  repeat  \n   while y[i]<x1 do  \n    inc(i);  \n   while x1<y[j] do  \n    dec(j);  \n   if not(i>j) then  \n                begin  \n                 y1:=y[i];  \n                 y[i]:=y[j];  \n                 y[j]:=y1;  \n                 y1:=x[i];  \n                 x[i]:=x[j];  \n                 x[j]:=y1;  \n                 inc(i);  \n                 dec(j);  \n                end;  \n  until i>j;  \n  if l<j then sort1(l,j);  \n  if i<r then sort1(i,r);  \n end;  \nbegin  \n readln(n,s);  \n readln(a,b);  \n for i:=1 to n do  \n  readln(x[i],y[i]);  \n sort(1,n);  \n yy:=n;  \n while x[yy]>(a+b) do  \n  yy:=yy-1;  \n sort1(1,yy);  \n for i:=1 to yy do  \n  if s-y[i]>=0 then begin  \n                       s:=s-y[i];  \n                       ans:=ans+1;  \n                      end  \n                 else begin  \n                       writeln(ans);  \n                       exit;  \n                      end;  \n if ans=0 then writeln(0);  \nend.\n```",
        "postTime": 1387255092,
        "uid": 1740,
        "name": "zhao981029",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\n```cpp\n#include<iostream>\nusing namespace std;\nint h[5002],m[5002],i=1,s,n,a,b,j=1,ans;\nvoid kp(int l,int r)\n{\n  int i=l,j=r,x,t;\n  x=m[(i+j)/2];  \n  while(i<=j) {\n     while(m[i]<x) i++; \n     while(x<m[j]) j--; \n     if(i<=j) {t=m[i];m[i]=m[j];m[j]=t;i++;j--;}\n       }  \n  if(l<j) kp(l,j); \n  if(i<r) kp(i,r);\n} \nint main()\n{\n    cin>>n>>s>>a>>b;\n    for(i=1;i<=n;i++)\n    {cin>>h[j]>>m[j];if(h[j]<=a+b){j++;}}j--;\n    kp(1,j);\n    for(i=1;i<=j;i++)\n    {if(m[i]<=s){s-=m[i];ans++;}}\n    cout<<ans;\n    system(\"pause\");\n    return 0;\n}\n\u81f3\u4e8e\u7b97\u6cd5\uff0c\u4e0b\u9762\u7684\u5df2\u7ecf\u8bf4\u4e86\uff0c\u6ce8\u610f\u6570\u7ec4\u5f00\u52305000\uff0c\u6211\u6570\u7ec4\u624d\u5f00\u5230100\uff0c\u540e\u6765\u6539\u6210100\uff0c\u90fd\u6ca1\u8fc7\uff0c\u770b\u770b\u9898\u624d\u53d1\u73b0\u662f5000\u3002\u3002\u3002\n```",
        "postTime": 1380201321,
        "uid": 181,
        "name": "chenyx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u4e00\u905301\u80cc\u5305\u9898\uff0c\u529b\u6c14s\u76f8\u5f53\u4e8e\u80cc\u5305\u5bb9\u91cf\uff0c\u6458\u4e00\u4e2a\u82f9\u679c\u9700\u8981\u7684\u529b\u6c14\u76f8\u5f53\u4e8e\u7269\u54c1\u91cd\u91cf\u3002\u7269\n\n\u54c1\u7684\u4ef7\u503c\u5168\u90e8\u4e3a1\u3002\u4e3a\u4e86\u64cd\u4f5c\u65b9\u4fbf\uff0c\u5c06\u9676\u9676\u6458\u4e0d\u5230\u7684\u82f9\u679c\u5148\u5e72\u6389\uff0c\u7136\u540e\u5c31\u5b8c\u5168\u6309\u716701\u80cc\u5305\n\n\u7684\u65b9\u7a0b\u6765\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u6682\u4e14\u4e0d\u8bb201\u80cc\u5305\u662f\u548b\u64cd\u4f5c\u7684\uff0c\u4e0d\u4f1a\u7684\u540c\u5b66\u53bb\u67e5\u4e00\u4e0b\u8d44\u6599\u5427\n\n\u5927\u5bb6\u6700\u559c\u6b22\u7684\u73af\u8282\uff1a\u4e0aCODE\uff01\n\n```cpp\n    #include <iostream>\n    #include <cmath>\n    #include <cstring>\n    #include <cstdio>\n    using namespace std;\n    struct apple //\u8868\u793a\u82f9\u679c\u7684\u7ed3\u6784\u4f53\n    {\n        int s,w;\n        apple(){w=1;}//\u521b\u5efa\u65f6\u5c06\u4ef7\u503c\u521d\u59cb\u5316\u4e3a1\n    };\n    int main()\n    {\n        int n,a,b,s,f[1001];\n        apple ap[5001];\n        scanf(\"%d%d\",&n,&s);\n        scanf(\"%d%d\",&a,&b);\n        int maxh=a+b;\n        for(int i=1;i<=n;i++)\n        {\n            int h;\n            scanf(\"%d%d\",&h,&ap[i].s);\n            if(h>maxh){i--;n--;}//\u5e72\u6389\u6458\u4e0d\u5230\u7684\u82f9\u679c\n        }\n        //01\u80cc\u5305\n        for(int i=1;i<=n;i++)\n            for(int j=s;j>=ap[i].s;j--)\n                f[j]=max(f[j],f[j-ap[i].s]+ap[i].w);\n        printf(\"%d\",f[s]);\n    }\n\n```",
        "postTime": 1512874037,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1478"
    },
    {
        "content": "## \u7528\u4e86\u4e00\u70b9\u9762\u5411\u5bf9\u8c61\n\n## \u6240\u4ee5\u8bf4 C++\u5927\u6cd5\u597d\n\n\n\u672c\u9898\u7684\u601d\u8def\u5728\u4e8e\u6a21\u62df\uff0c\u91cd\u70b9\u5728\u4e8e\u6309\u7167\u4f53\u529b\u5347\u5e8f\u6392\u5e8f\uff0c\u7528\u529b\u5c11\u7684\u5148\u5c1d\u8bd5\u3002\n\n\u540c\u65f6\u6211\u58f0\u660e\u4e86\u4e00\u4e2aclass\u7528\u4e8e\u5b58\u653e\u82f9\u679c\u3002\u3002\u5176\u5b9e\u5c31\u662f\u4e2a\u7b80\u5355\u7684pair\u3002\u867d\u7136\u4ee3\u7801\u91cf\u5f88\u591a\u4f46\u662f\u5b9e\u9645\u4e0a\u903b\u8f91\u7edd\u5bf9\u7b80\u5355\u4e8e\u5927\u90e8\u5206\u7b97\u6cd5w\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n#define forUntil(i,j) for (int i = 0; i < j ; i++) // \u5faa\u73af\u7528\uff0ci=0...j\nnamespace P1478 { // \u547d\u540d\u7a7a\u95f4\u9632\u6b62\u51b2\u7a81\n    int count;\n    class apple { // \u91cd\u8981\uff01\u8fd9\u91cc\u58f0\u660e\u4e86\u4e00\u4e2aC++ \u91cc\u9762\u7684class\uff0c\u4e3a\u4e86\u65b9\u4fbf\u540e\u9762\u7528\u6765\u6392\u5e8f\u82f9\u679c\n```\npublic:\n\n\n\n\n\n\n\n\n\n    \n```cpp\n        int height, useEnergy; // \u9ad8\u5ea6\uff0c\u7528\u6389\u7684\u4f53\u529b\n        apple(int height, int useEnergy) { // \u6784\u9020\u51fd\u6570\uff0c\u56e0\u4e3a\u91cc\u9762\u6ca1\u7528\u5230\u522b\u7684class\u6240\u4ee5\u4e0d\u5fc5\u5199\u6790\u6784\u51fd\u6570\n            this->height = height;\n            this->useEnergy = useEnergy;\n        }\n    };\n    bool cmpAppleByEnergy(const apple &a, const apple &b) { // \u5bf9\u4e8eapple\u5bf9\u8c61a, b\u5e94\u8be5\u6bd4\u8f83\u4ed6\u4eec\u7684\u9700\u6c42\u4f53\u529b\u5927\u5c0f\n        return a.useEnergy < b.useEnergy;\n    }\n    vector<apple> apples; // \u5b58\u653eapple\u5bf9\u8c61\u7684vector\n}\nusing namespace P1478; // \u5f15\u7528\u521b\u5efa\u7684\u547d\u540d\u7a7a\u95f4\nint main() {\n    int countApples, energy, stoolHeight, taotaoHeight;\n    cin >> countApples >> energy >> stoolHeight >> taotaoHeight; // \u8f93\u5165\u6570\u636e\n    taotaoHeight += stoolHeight; // \u52a0\u4e0a\u51f3\u5b50\u9ad8\u5ea6\n    forUntil(i, countApples) { // \u8f93\u5165\u82f9\u679c\u6570\u636e\n        int height, useEnergy;\n        cin >> height >> useEnergy;\n        apples.push_back(apple(height, useEnergy)); // \u63a8\u8fdbvector\u91cc\u9762\n    }\n    sort(apples.begin(), apples.end(), cmpAppleByEnergy); // \u6309\u7167\u7528\u7684\u4f53\u529b\u6392\u5e8f\uff01\n    for (vector<apple>::iterator it = apples.begin();\n        it != apples.end();\n        it++) { // \u904d\u5386\u82f9\u679c\n        apple theApple = *it;\n        if (taotaoHeight >= theApple.height) // \u5148\u770b\u9ad8\u5ea6\n            if (energy >= theApple.useEnergy) { // \u518d\u770b\u4f53\u529b\n                energy -= theApple.useEnergy; // \u6d88\u8017\u4f53\u529b\n                P1478::count++; // \u6458\u82f9\u679c\n            }\n    }\n    cout << P1478::count << endl;\n    return 0;\n}\n```",
        "postTime": 1487603198,
        "uid": 36787,
        "name": "charliejiang_0w0_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "//\u8fd9\u4e2a\u63d0\u4e0eP1190\u63a5\u6c34\u95ee\u9898\u975e\u5e38\u50cf\uff0c\u5148\u7b5b\u9009\u51fa\u80fd\u6458\u5230\u7684\u82f9\u679c\uff0c\u7528sort\u628a\u4ed6\u4eec\u82b1\u8d39\u7684\u529b\u6c14\u6392\u5e8f\uff0c\u82b1\u8d39\u529b\u6c14\u5c11\u7684\u5148\u6458\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nint n,h[5001],c[5001],d[5001],s,a,b,i,j,ans=0;//h\u662f\u6bcf\u4e2a\u82f9\u679c\u7684\u9ad8\u5ea6\uff0cc\u662f\u82b1\u8d39\u7684\u529b\u6c14\uff0cd\u662f\u80fd\u591f\u5230\u7684\u82f9\u679c\u82b1\u7684\u529b\u6c14 \nint main()\n{\n    scanf(\"%d %d\",&n,&s);\n    scanf(\"%d %d\",&a,&b);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&h[i],&c[i]);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(a+b>=h[i]) d[j++]=c[i];//\u5982\u679c\u8fd9\u4e2a\u82f9\u679c\u80fd\u591f\u5230\uff0c\u5219\u5b83\u82b1\u8d39\u7684\u529b\u6c14\u4fdd\u5b58\u5728d\u4e2d \n    }\n    sort(d,d+j);//std\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \u5148\u6458\u82b1\u8d39\u529b\u6c14\u6700\u5c0f\u7684 \n    for(i=0;i<j;i++)\n    {\n        if(s>=d[i])\n        {\n            s-=d[i];\n            ans++;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1484625007,
        "uid": 25426,
        "name": "Excim",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "```cpp\n//\u5947\u602a\u7684\u505a\u6cd5......\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nstruct gq{      //\u60f3\u8ba9\u5927\u5bb6\u7406\u89e3\uff0c\u7528\u4e86\u7ed3\u6784\u4f53...\n    int hi;            //\u6bcf\u4e2a\u82f9\u679c\u9ad8\u5ea6\n    int N;            //\u591f\u6bcf\u4e2a\u82f9\u679c\u7684\u529b\u6c14\uff0cN\u662f\u529b\u7684\u5355\u4f4d(-_-)!\n};\ngq pl[10001];\nint fuzhi[10001];\nint main() {\n    int n,s,i,ban,shou,t=0,j,l=0,f=0,w=100000;\n    cin>>n>>s>>ban>>shou;\n    for(i=1;i<=n;i++){\n        cin>>pl[i].hi>>pl[i].N;\n    }\n//\u8f93\u5165\uff0c\u4e0d\u7528\u591a\u8bf4\u4e86\n    for(i=1;i<=n;i++){\n        fuzhi[i]=pl[i].N;    //\u590d\u5236\u7ed9\u4e00\u4e2a\u6570\u7ec4\uff0c\u4e3a\u4e0b\u9762\u5bfb\u627e\u505a\u51c6\u5907\n    }\n    sort(fuzhi,fuzhi+n+1);          //\u70b9\u4e2a\u8d5e\uff01\uff08\u5c06\"\u529b\"\u6392\u5e8f\uff09\n    for(i=1;i<=n;i++){\n        for(j=1;j<=n;j++){\n            if(fuzhi[i]==pl[j].N){  //\u5bfb\u627e\u76f8\u540c\u7684\u201c\u529b\u201d\n                if(ban+shou>=pl[j].hi){\n                    if(s-pl[j].N<0){        //\u9884\u5224\u4e00\u4e0bs\u662f\u5426<0\n                        f=1;\n                        break;\n                    }\n                    else{\n                        s-=pl[j].N;\n                        t++;\n                    }\n                }\n                pl[j].N=w;w++;  //\u6700\u72ec\u7279\u7684\u5730\u65b9\uff0c\u627e\u5230\u201c\u529b\u201d\u5c31\u66ff\u6362\uff0c\u4f46\u66ff\u6362\u7684\u6570\u9700\u4e0d\u4e00\u6837\n            }\n        }\n        if(f==1)\n        break;\n    }\n    cout<<t;      //\u8f93\u51fa\n    return 0;\n}\n//\u672c\u9898\u4e3b\u8981\u601d\u60f3\uff1a\u4ece\u201c\u529b\u201d\u6700\u5c0f\u7684\u5f00\u59cb\u627e\u8d77\uff01\uff01\uff01\n```",
        "postTime": 1484571677,
        "uid": 34256,
        "name": "2022135551q",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u611f\u89c9\u6211\u7684\u4ee3\u7801\u5f88low\uff0c\u4e0d\u8fc7\u9002\u7528\u4e8e\u521d\u5b66\u8005\uff0c\u6709\u9519\u8bef\u5fd8\u9ad8\u624b\u6307\u70b9\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint x[10001],y[10001];//\u82f9\u679c\u7684\u9ad8\u5ea6\u548c\u6240\u9700\u529b\u6c14\nint main()\n{\n    int n,s; scanf(\"%d %d\",&n,&s);\n    int a,b,m=0;\n    scanf(\"%d %d\",&a,&b);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d %d\",&x[i],&y[i]);//\u4ee5\u4e0a\u76f8\u4fe1\u5927\u5bb6\u770b\u5f97\u61c2\n    for(int i=1;i<=n;i++)\n        if(a+b<x[i]) y[i]=-1;//\u628a\u591f\u4e0d\u5230\u7684\u82f9\u679c\u6240\u9700\u529b\u6c14\u6539\u4e3a-1\uff0c\u8fd9\u91cc\u8bf4\u660e\u4e00\u4e0b\uff0c\u4e0d\u80fd\u6539\u4e3a0\uff0c\u56e0\u4e3a\u6570\u636e\u4e2d\u672c\u8eab\u5c31\u6709\u9700\u8981\u529b\u6c14\u4e3a0\u7684\u82f9\u679c\u3002\n    sort(y+1,y+n+1);//c++\u4e2d\u7684\u6392\u5e8f\u51fd\u6570\uff0c\u65b9\u4fbf\u5feb\u6377\uff01\n    for(int i=1;i<=n;i++)\n         if(y[i]!=-1)//\u5982\u679c\u6240\u9700\u529b\u6c14\u4e0d\u662f-1\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u591f\u5f97\u7740\uff0c\u90a3\u4e48\u2026\u2026\n         {\n             s-=y[i]; //\u51cf\u529b\u6c14\n             if(s>=0) m++;//\u82f9\u679c\u6570+1\n             else break;//\u5982\u679c\u529b\u6c14\u7528\u5149\u4e86\uff0c\u8df3\u51fa\u5faa\u73af\n         }\n    //for(int i=1;i<=n;i++)  //\u6d4b\u8bd5\u7528\u7684\uff0c\u771f\u6b63\u4ea4\u7684\u65f6\u5019\u8981\u5220\u3002\u5f53\u7136\u52a0\u4e0a'//'\u5c31\u6ca1\u4e8b\u4e86\n    //    printf(\"%d \",y[i]);\n    printf(\"%d\",m);//\u8f93\u51fa\n    return 0;\n}\n```\n\u6838\u5fc3\u662f\u628a\u82f9\u679c\u7684\u529b\u6c14\u6392\u5e8f\u4ece\u5c0f\u7684\u5f00\u59cb\u6458\uff0c\u4fdd\u8bc1\u80fd\u6458\u7684\u6700\u591a\uff1b\nthe end\u3002\n\n\u518d\u6b21\u611f\u8c22\u5927\u5bb6\uff0c\u611f\u8c22\u6d1b\u8c37\n",
        "postTime": 1474889209,
        "uid": 24248,
        "name": "SAVEN",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\n```cpp\nvar\n  j,t,ans,n,s,h,h1,i:longint;\n  x,y:array[1..5000]of longint;\n  procedure swap(p:longint);   //\u8fd9\u4e2a\u8fc7\u7a0b\u53ea\u662f\u4e3a\u4e86\u88c5\u5e05\n  begin\n    if p=1 then begin\n      t:=x[i];\n      x[i]:=x[i+1];\n      x[i+1]:=t;\n    end;\n    if p=2 then begin\n      t:=y[i];\n      y[i]:=y[i+1];\n      y[i+1]:=t;\n    end;\n  end;\n  procedure SXsort;         //5000\u7684\u6570\u636e\u5192\u6ce1\u6392\u5e8f\u5c31\u591f\u4e86\u5e76\u4e14\u597d\u5199\n  begin\n    for j:=1 to n do\n      for i:=1 to n-j do\n        if y[i]>y[i+1]then     //\u9488\u5bf9\u8017\u8d39\u529b\u6c14\u6392\u5e8f\n          begin\n            swap(1); swap(2);\n          end;\n  end;\nbegin\n  readln(n,s);\n  readln(h,h1);\n  inc(h,h1);   //\u5176\u5b9e\u80fd\u8fbe\u5230\u7684\u9ad8\u5ea6\u5c31\u662f\u8eab\u9ad8\u52a0\u6905\u5b50\u9ad8\u54af\n  for i:=1 to n do\n    read(x[i],y[i]);\n  SXsort;\n  t:=0;            //t\u8bb0\u5f55\u5df2\u6d88\u8017\u7684\u4f53\u529b\n  ans:=0;          //ans\u8bb0\u5f55\u5df2\u6458\u5230\u7684\u82f9\u679c\u6570\n  for i:=1 to n do\n    if x[i]<=h then    //\u5224\u65ad\u9ad8\u5ea6\u662f\u5426\u8fbe\u5230\n      if t<=s then      //\u5224\u65ad\u4f53\u529b\u662f\u5426\u8db3\u591f\n        begin\n          if((t+y[i])>s)then begin      //\u5982\u679c\u6458\u4e86\u8fd9\u4e2a\u82f9\u679c\u540e\u8d85\u8fc7\u4f53\u529b\u4e0a\u9650\uff0c\u76f4\u63a5\u8f93\u51fa\u5e76\u7ed3\u675f\n            write(ans);\n            exit;\n          end;\n          inc(ans);               //\u6458\u5230\u7684\u82f9\u679c+1\n          inc(t,y[i]);            //\u8017\u8d39\u4f53\u529b\u503c+y[i]\n        end;\n  write(ans);                     //\u5faa\u73af\u6b63\u5e38\u7ed3\u675f\u540e\u8f93\u51fa\n  readln;readln;\nend.\n```",
        "postTime": 1470832516,
        "uid": 20046,
        "name": "Demo_ShitKing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "```cpp\n//\u6bcf\u6b21\u6458\u9700\u8981\u529b\u6c14\u5c0f\u7684\u5c31\u80fd\u6458\u5230\u6700\u591a\u7684\u82f9\u679c\nvar n,m,a,b,i,t,j,zs:longint;\n    lq,gd:array[0..10000] of longint;\nbegin\n  readln(n,m);\n  readln(a,b);\n  a:=a+b;  //\u7ad9\u5728\u6905\u5b50\u4e0a\u6458\u82f9\u679c\n  for i:=1 to n do\n    readln(gd[i],lq[i]);\n  for i:=1 to n-1 do\n    for j:=i+1 to n do\n      if lq[i]>lq[j] then   //\u6309\u7167\u6240\u9700\u8981\u7684\u529b\u6c14\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n        begin\n          t:=lq[i];lq[i]:=lq[j];lq[j]:=t;\n          t:=gd[i];gd[i]:=gd[j];gd[j]:=t;\n        end;\n  for i:=1 to n do\n    if (a>=gd[i]) and (m-lq[i]>=0) then\n      begin\n        inc(zs);\n        m:=m-lq[i];\n      end;\n  writeln(zs);\nend.\n```",
        "postTime": 1448071311,
        "uid": 12335,
        "name": "\u9093\u6653\u84dd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u5927\u6c34\u9898\u4e00\u9053\uff0c\u628a\u9676\u9676\u6458\u82f9\u679c\u666e\u901a\u7248\u7684\u7a0b\u5e8f\u4fee\u6539\u4e00\u4e0b\u5373\u53ef\n\n```cpp\n\nvar n,s,i,j,a,b,num,temp:longint;\n    xi,yi:array [1..5000] of longint;\nbegin\n  read(n,s);\n  read(a,b);\n  for i:=1 to n do read(xi[i],yi[i]);\n  b:=b+a;//\u76f4\u63a5\u8ba9\u9676\u9676\u7ad9\u4e0a\u51f3\u5b50\u6458\u82f9\u679c\u3002 \n  for i:=1 to n-1 do\n    for j:=i+1 to n do\n    if xi[i]>xi[j] then begin \n                          temp:=xi[i];\n                          xi[i]:=xi[j];\n                          xi[j]:=temp;\n                          temp:=yi[i];\n                          yi[i]:=yi[j];\n                          yi[j]:=temp;\n                        end;//\u5148\u6309\u7167\u9ad8\u5ea6\u6392\u5e8f\u3002 \n  for i:=1 to n-1 do\n    for j:=i+1 to n do\n    if yi[i]>yi[j] then begin\n                          temp:=yi[i];\n                          yi[i]:=yi[j];\n                          yi[j]:=temp;\n                          temp:=xi[i];\n                          xi[i]:=xi[j];\n                          xi[j]:=temp;\n                        end;//\u518d\u6309\u7167\u6240\u9700\u8981\u7528\u7684\u529b\u6c14\u6392\u5e8f\u3002 \n  for i:=1 to n do\n    if (s>=yi[i])and(xi[i]<=b) then begin\n                                      inc(num);\n                                      dec(s,yi[i]);\n                                    end;//\u5982\u679c\u9676\u9676\u6458\u7684\u4e0b\u6765\uff0c\u603b\u6570+1\uff0c\u540c\u65f6\u7ed9\u9676\u9676\u7684\u4f53\u529b\u51cf\u53bb\u6458\u82f9\u679c\u6240\u8981\u7684\u4f53\u529b\u3002 \n  writeln(num);\nend.\n\n```",
        "postTime": 1447824490,
        "uid": 6322,
        "name": "woshiren",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u6c34\u9898\uff0c\u5c06\u6458\u5f97\u5230\u7684\u529b\u6c14\u6392\u5e8f\uff0c\u4ece\u5c0f\u5230\u5927\uff0c\u76f4\u5230\u529b\u6c14<0 or \u53ef\u6458\u7684\u82f9\u679c=0\uff0c\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\n\n\n```cpp\n#include<stdio.h>\nint main(){\n    int m,j=0,x,y,n,q,a,b,i,k=0,s[5010],e=0;\n    scanf(\"%d%d\",&n,&q);\n    scanf(\"%d%d\",&a,&b);\n    a=a+b;\\\u8868\u793a\u53ef\u4ee5\u591f\u5230\u7684max\u503c\n    for (i=1;i<=n;i++){\n        scanf(\"%d%d\",&x,&y);\n        if (a>=x)\n            s[++j]=y;\n    }\\\u628a\u53ef\u4ee5\u6458\u5230\u7684\u653e\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\n    for (i=1;i<j;i++)\n        for (k=i+1;k<=j;k++)\n            if (s[i]>s[k]){\n                m=s[i];s[i]=s[k];s[k]=m;\n            }\\\u628a\u7528\u7684\u529b\u8d77\u6392\u5e8f\n    while (q>=0){\n        q=q-s[++e];\n        if (e>j) {\n            e=j+1;\n            goto v;\n        }\\\u5f53\u65e0\u6570\u53ef\u53d6\u662f\uff0c\u76f4\u63a5out\n    }\n    v:;\n    printf(\"%d\",e-1);\\\u7b97\u7684\u65f6\u5019\u591a\u7b97\u4e86\u4e00\u4e2a(\u529b\u6c14<0\u4e0d\u80fd\u6458\u4e86)\n    return 0;\n}",
        "postTime": 1441718530,
        "uid": 9008,
        "name": "eagadsgbsadfhb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u4e2a\u6bd4\u697c\u4e0b\u90a3\u51e0\u4e2a\u7565\u597d\u7406\u89e3\uff0c\u5148\u628a\u9ad8\u5ea6\u80fd\u6458\u4e0b\u6765\u7684\u82f9\u679c\u9700\u8981\u7684\u529b\u6c14\u7528\u6570\u7ec4\u4fdd\u5b58\u4e0b\u6765\uff0c\u628a\u8fd9\u4e9b\u82f9\u679c\u6309\u529b\u6c14\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u5148\u6458\u82b1\u529b\u6c14\u5c11\u7684\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n[Pascal]\n\n```cpp\nvar n,s,a,b,i,c,j,xi,yi,k,t,p:integer;\nx,y:array[1..5001]of integer;\nbegin\n readln(n,s);\n readln(a,b);\n c:=0;\n k:=0;\n p:=0;\n for i:=1 to n do\n  begin\n   readln(xi,yi);\n   if (a+b)>=xi then\n    begin\n     k:=k+1;\n     y[k]:=yi;//\u80fd\u6458\u4e0b\u6765\u5c31\u628a\u82f9\u679c\u6570\u4ece0\u5f00\u59cb\u52a0\u4e00\uff0c\u7136\u540e\u628a\u76f8\u5e94\u7684\u82f9\u679c\u529b\u6c14\u4fdd\u5b58\u4e0b\u6765\uff08\u56e0\u4e3a\u540e\u9762\u6839\u672c\u4e0d\u9700\u8981\u9ad8\u5ea6\uff09\n    end;\n  end;\n for i:=1 to k-1 do\n  for j:=1 to k-i do\n   if y[j]>y[j+1]then\n    begin\n     t:=y[j];\n     y[j]:=y[j+1];\n     y[j+1]:=t;//\u4f3c\u4e4e\u662f\u4e2a\u5192\u6ce1\u6392\u5e8f~\n    end;\n while (s>0)and(p<=k) do\n  begin\n   p:=p+1;//\u7eaf\u7cb9\u4e3a\u7ed9\u540e\u9762\u51cf\u529b\u6c14\u8ba1\u6570\n   c:=c+1;//\u80fd\u6458\u4e0b\u6765\u7684\u82f9\u679c\u6570\n   s:=s-y[p];//\u51cf\u53bb\u76f8\u5e94\u7684\u529b\u6c14\uff0c\u7ee7\u7eed\n   if s<0 then\n    c:=c-1;//\u5982\u679c\u82f9\u679c\u8fd8\u6709\uff0c\u529b\u6c14\u4e5f\u5927\u4e8e\u96f6\uff0c\u4f46\u662f\u5269\u4e0b\u7684\u82f9\u679c\u9700\u8981\u7684\u529b\u6c14\u6bd4\u9676\u9676\u5269\u4e0b\u7684\u529b\u6c14\u8981\u591a\uff0c\u6240\u4ee5\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u91cc\u4f1a\u591a\u52a0\u4e00\u4e2a\uff0c\u628a\u5b83\u51cf\u6389\n  end;\n writeln(c);\nend.\n```",
        "postTime": 1440328913,
        "uid": 8632,
        "name": "ws_pt1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u3010\u601d\u8def\u3011\n\n\n\u672c\u6765\u6211\u4ee5\u4e3a\u8fd9\u4e2a\u9898\u662fDP\uff0c\u5bf9\u4e8e\u82f9\u679c\u6709\u53d6\u548c\u4e0d\u53d6\u4e24\u79cd\u72b6\u6001\uff0c\u50cf\u662f\u4e00\u79cd\u80cc\u5305\u6a21\u578b\uff0c\u540e\u6765\u53d1\u73b0\u8f6c\u79fb\u65b9\u7a0b\u51e0\u4e4e\u5199\u4e0d\u51fa\u6765\u3002\u518d\u540e\u6765\u53d1\u73b0\u53ea\u8981\u5728\u8bfb\u5165\u7684\u65f6\u5019\u505a\u4e00\u6b21\u9884\u5904\u7406\uff0c\u518d\u5feb\u6392\u8d39\u5f97\u4f53\u529b\u503c\uff0c\u6700\u540e\u7d2f\u52a0\u5668\u7d2f\u52a0\u8d85\u8fc7\u9000\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u53cd\u800c\u662f\u5728\u6392\u5e8f\u4e0a\uff0cO(N\\*logN)\u3002\n\n\n\n\n\n```cpp\ntype apple=record\n    x1,y1:longint;\n    end;\n//xx\u662f\u9ad8\u5ea6\uff0cyy\u662f\u529b\u6c14\nvar app:array[1..1000] of apple;\n    n,s,a,b,xx,yy,i:longint;\n    sum:longint=0;\n    sum1:longint=0;\n    ans:longint=0;\nprocedure sort(l,r: longint);\n      var\n         i,j,x:longint;y:apple;\n      begin\n         i:=l;\n         j:=r;\n         x:=app[(l+r) div 2].y1;\n         repeat\n           while app[i].y1<x do\n            inc(i);\n           while x<app[j].y1 do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=app[i];\n                app[i]:=app[j];\n                app[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort(l,j);\n         if i<r then\n           sort(i,r);\n      end;\nbegin\n    readln(n,s);\n    readln(a,b);\n    for i:=1 to n do\n        begin\n            readln(xx,yy);\n            if a+b>=xx then\n                begin\n                    inc(sum);\n                    app[sum].x1:=xx;\n                    app[sum].y1:=yy;\n                end;\n        end;\n    sort(1,sum);\n    for i:=1 to sum do\n        begin\n            inc(sum1,app[i].y1);\n            if sum1<=s then inc(ans) else break;\n        end;\n    writeln(ans);\nend.\n```",
        "postTime": 1439081602,
        "uid": 6906,
        "name": "gryql",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "      \n```cpp\n#include<cstdio>  \nint A[5000+10]; //\u8868\u793a\u7b2ci\u4e2a\u82f9\u679c\u7684\u9ad8\u5ea6   \nint B[5000+10];  //B[i]  \u8868\u793a\u6458\u7b2ci\u4e2a\u82f9\u679c\u82b1\u7684\u529b\u6c14   \nint n,s,deng,gao;   \nint main()  \n{  \n    scanf(\"%d %d\",&n,&s);  \n    scanf(\"%d %d\",&deng,&gao);  \n    //\u6392\u5e8f\u524d\u8f93\u51fa\u4e00\u6b21\u6570\u7ec4  \n    for(int i=0;i<n;i++)  \n    {  \n        scanf(\"%d %d\",&A[i],&B[i]);  \n    }  \n    //===========================================  \n    for(int i=0;i<=n-2;i++)  //i\u4ece\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e0b\u6807  \u4e00\u76f4\u5230 \u6570\u7ec4\u5012\u6570\u7b2c\u4e8c\u4e2a\u4e0b\u6807  i\u5411\u53f3\u8d70   \n    {  \n        for(int j=n-1;j>i;j--)  //j\u4ece\u6570\u7ec4\u7684\u6700\u540e\u5143\u7d20\u4e0b\u6807 j\u4e00\u76f4\u5230i\u53f3\u8fb9\u505c\u4e0b  j\u5411\u5de6\u8d70   \n        {  \n            if(B[j-1]>B[j])  \n            {  \n                int t=A[j-1];A[j-1]=A[j];A[j]=t;  \n                t=B[j-1];B[j-1]=B[j];B[j]=t;  \n            }  \n        }  \n    }   \n    //===========================================  \n    //\u6392\u5e8f\u540e  \n    int ans=0;  \n    for(int i=0;i<n && s>0;i++)  \n    {  \n        if(A[i]<=deng+gao && s-B[i]>=0)  \n        {  \n            ans++;  \n            s-=B[i];  \n        }  \n    }  \n    printf(\"%d\",ans);  \n    return 0;   \n}\n```",
        "postTime": 1430912122,
        "uid": 5390,
        "name": "jamespaul",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u5f88\u660e\u663e\u7684\u8d2a\u5fc3\u6cd5\u95ee\u9898\n\n\u5148\u628a\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u6458\u5230\u7684\u82f9\u679c\u5217\u51fa\u6765\n\n\u518d\u628a\u5b83\u4eec\u7684\u529b\u6c14\u6392\u5e8f\n\n\u7136\u540e\u7528\u8d2a\u5fc3\u6cd5\u53d6\u51fa\u524dn\u4e2a\n\n\u6700\u540e\u8f93\u51fa\u7ed3\u679c\n",
        "postTime": 1379563931,
        "uid": 174,
        "name": "\u4f60\u82e5\u5b89\u597d\uff0c\u4fbf\u662f\u6674\u5929",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u4f30\u8ba1\u5927\u4f6c\u4e00\u770b\u5c31\u61c2\uff1a\u6211\u60f3\uff0c\u4e00\u4e2a\u82f9\u679c\u5bf9\u5e94\u4e00\u4e2a\u529b\u91cf\u503c\u4ee5\u53ca\u4e00\u4e2a\u9ad8\u5ea6\uff0c\u90a3\u4e0d\u5982\u6309\u7167\u529b\u91cf\u6392\u5e8f\uff0c\u80fd\u8fbe\u5230\u9ad8\u5ea6\u5e76\u4e14\u529b\u91cf\u503c\u6700\u5c0f\u7684\u4f18\u5148\uff0c\u90a3\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2abool\u7c7b\u578b\u7684\u6392\u5e8f\u89c4\u5219\u6309\u7167\u529b\u91cf\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\n\n\u4e0b\u9762\u4f1a\u6709\u6ce8\u91ca\u54df\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,s,a,b,ans;\n\nstruct apple{//\u7ed3\u6784\u4f53\u5b9a\u4e49\u82f9\u679c\u4ee5\u53ca\u9ad8\u5ea6\u548c\u6458\u53d6\u6240\u7528\u7684\u529b\u91cf\n    int high,pow;\n}app[5010];\n\ninline bool cmp(apple x,apple y){\n    return x.pow<y.pow;\n}\n\ninline int canget(apple x)//\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u6458\uff0c\u5982\u679c\u53ef\u4ee5\u6458\u5c31\u8fd4\u56de1\uff0c\u5426\u5219\u968f\u4fbf\u8fd4\u56de\u5427\n{\n    if(x.high<=a+b)return 1;\n    else return 99;\n}\nint main (){\n    \n    scanf(\"%d%d%d%d\",&n,&s,&a,&b);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&app[i].high,&app[i].pow);\n    }\n    \n    sort(app+1,app+1+n,cmp);//\u6309\u7167\u529b\u91cf\u503c\u6392\n    for (int i=1;i<=n;i++)\n    {\n        if (canget(app[i])==1)//\u5982\u679c\u53ef\u4ee5\u6458\u82f9\u679c\uff0c\u5c31\u8ba9\u529b\u91cf\u503c\u51cf\u53bb\u8fd9\u4e2a\u82f9\u679c\u6240\u9700\u8981\u7684\u529b\u91cf\n        {\n            s-=app[i].pow;\n            if(s<0)break;//\u5982\u679c\u6ca1\u529b\u91cf\u4e86\uff0c\u90a3\u5c31\u7ed3\u675f\u5427\n        else ans++;\u5426\u5219\uff0c\u80fd\u6458\u5f97\u6570\u91cf++\n        }\n        \n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1540861471,
        "uid": 89545,
        "name": "world_romantic_xebec",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u4ee3\u7801\u90fd\u90a3\u4e48\u957f\uff0c\u672c\u849f\u84bb\u5c31\u628ac++\u4e00\u7ef401\u80cc\u5305\u8d34\u4e0a\n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,s,a,b,x[5010],y[5010],m[5010];\n\nint main()\n{\n\tscanf(\"%d%d%d%d\",&n,&s,&a,&b);//\u4f7f\u7528scanf\u662f\u4e00\u4e2a\u597d\u4e60\u60ef\uff0cn s a b \u5168\u662f\u6839\u636e\u9898\u76ee\u5b9a\u4e49\u7684\n    //cin>>n>>s>>a>>b;\n\tint h=a+b;\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&x[i],&y[i]);\n        //cin>>x[i]>>y[i];\n    //01\u80cc\u5305\u6eda\u52a8\u4f18\u5316\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=s;j>=y[i];j--)\n\t\t\tif(x[i]<=h)\n\t\t\t\tm[j]=max(m[j-y[i]]+1,m[j]);\n\tprintf(\"%d\",m[s]);\n    //cout<<m[s]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1538058041,
        "uid": 44032,
        "name": "chsw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\u601d\u8def\uff1a\u5148\u6458\u6d88\u8017\u4f53\u529b\u5c0f\u4e14\u80fd\u6458\u5230\u7684\u82f9\u679c\uff08\u6309\u751f\u6d3b\u7ecf\u9a8c\u4e5f\u662f\u8fd9\u6837~~\u5c3d\u7ba1C\u8bed\u8a00\u7ecf\u5e38\u4e0d\u9075\u5faa\u751f\u6d3b\u5b9e\u9645~~\uff09\u3002\n\n\u6240\u4ee5\u7528sort\u7ed3\u6784\u4f53\u6392\u5e8f\u5373\u53ef\uff08\u5177\u4f53\u770b\u4ee3\u7801\uff09\uff1a\n```\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=5005;\nstruct Node\n{\n\tint x;//\u9ad8\u5ea6 \n\tint y;//\u6d88\u8017\u4f53\u529b \n}a[MAXN];\nbool cmp(Node a,Node b)\n{//\u5148\u4ee5\u6d88\u8017\u4f53\u529b\u5347\u5e8f\u6392\u5e8f\uff0c\u6d88\u8017\u4f53\u529b\u76f8\u540c\uff0c\u6309\u82f9\u679c\u9ad8\u5ea6\u6392\u5e8f \n\tif(a.y==b.y)\n\t    return a.x<b.x;\n\treturn a.y<b.y;\n} \nint main()\n{\n\tfreopen(\"\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09.in\",\"r\",stdin);\n\tfreopen(\"\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09.out\",\"w\",stdout);\n\tint n,s;\n\tscanf(\"%d%d\",&n,&s);\n\tint h,b;\n\tscanf(\"%d%d\",&h,&b);\n\th+=b;//\u9676\u9676\u7ad9\u5728\u51f3\u5b50\u4e0a\u80fd\u591f\u5230\u7684\u6700\u5927\u9ad8\u5ea6 \n\tfor(int i=1;i<=n;i++)\n\t    scanf(\"%d%d\",&a[i].x,&a[i].y);\n\tsort(a+1,a+1+n,cmp);\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)//\u626b\u4e00\u904d\u627e\u5230\u82b1\u4f53\u529b\u800c\u4e14\u80fd\u6458\u5230\u7684 \n\t\tif(a[i].x<=h&&s>=a[i].y)\n\t\t{\n\t\t\tans++;\n\t\t\ts-=a[i].y;\n\t\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1530630775,
        "uid": 29387,
        "name": "DrunkXT",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "    \n```cpp\n//\u5f88\u5947\u8469\u7684\u60f3\u6cd5\n#include<iostream>\nusing namespace std;\nint x[5001],y[5001],a,b,n,s,t=0;\nbool used[5001];//\u6807\u8bb0\u8be5\u82f9\u679c\u662f\u5426\u88ab\u6458\nint main()\n{\n    cin>>n>>s;\n    cin>>a>>b;\n    a=a+b;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>x[i];\n        cin>>y[i];\n        used[i]=0;\n    }\n    for(int i=1;i<=n;i++)\n    if(x[i]>a) used[i]=1;//\u82e5\u6458\u4e0d\u5230\uff0c\u89c6\u4e3a\u5df2\u6458\n        int i=0;\n        while(s>=0)\n        {\n           int j=10000,k=1;\n           i=1;\n           while(used[i]&&i<=n) i++; //\u82e5\u82f9\u679c\u88ab\u6458\uff0c\u4e0b\u4e00\u4e2a\n           while(i<=n)\n               {\n                   if(j>y[i]&&!used[i])\n               {\n                   j=y[i];//j\u6807\u8bb0\u6240\u7528\u6700\u5c0f\u7684\u529b\u6c14\n                   k=i;//k\u6807\u8bb0\u8981\u6458\u7684\u82f9\u679c\n               }    \n                   i++;\n               }\n            used[k]=1;//\u82f9\u679c\u5df2\u6458\n            s-=j;//\u529b\u6c14\u51cf\u5c11\n            t++;//\u4e2a\u6570\u52a0\u4e00\n        }\n    cout<<t-1;//s\u5c0f\u4e8e\u96f6\u4e2a\u6570\u624d\u52a0\u4e00\uff0c\u51cf\u53bb\u6700\u540e\u4e00\u4e2a\u5b9e\u9645\u6458\u4e0d\u5230\u7684\n    return 0;\n}\n```",
        "postTime": 1485408198,
        "uid": 33677,
        "name": "jhsg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "  \n        \n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct FM{int x,y;}a[5010];//\u5b9a\u4e49\u7ed3\u6784\u4f53\nbool cmp(const FM& a,const FM& b){return a.y<b.y;}//\u5b9a\u4e49\u6bd4\u8f83\u89c4\u5219\nint main(){\n    int n,m,i,s,sum=0,c,b;\n    scanf(\"%d%d\",&n,&s);//\u82f9\u679c\u6570\u4e0e\u529b\u6c14\u503c\n    scanf(\"%d%d\",&c,&b);//\u6905\u5b50\u9ad8\u548c\u8eab\u9ad8\n    for(i=1;i<=n;i++)scanf(\"%d%d\",&a[i].x,&a[i].y);//\u8f93\u5165\u6bcf\u4e00\u4e2a\u9ad8\u5ea6\u548c\u6240\u9700\u8981\u7684\u529b\u6c14\u503c\n    sort(a+1,a+n+1,cmp);//\u5bf9\u6240\u9700\u8981\u529b\u6c14\u8fdb\u884c\u6392\u5e8f\n    for(i=1;i<=n;i++){\n        if(s-a[i].y<0)break;//\u529b\u6c14\u4e0d\u591f\u8df3\u51fa\n        if(a[i].x<=c+b){s-=a[i].y;sum++;}else continue;//\u5982\u679c\u9ad8\u5ea6\u4e0d\u591f\u5219\u8df3\u8fc7\uff0c\u5bf9\u4e0b\u4e00\u4e2a\u8fdb\u884c\u5224\u5b9a\n    }\n    printf(\"%d\\n\",sum);//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1470533525,
        "uid": 21188,
        "name": "kidsking",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u601d\u8def\u5f88\u7b80\u5355\u7684\u4e00\u9053\u8d2a\u5fc3\uff0c\u4f46\u662f\u6709\u4e9b\u5730\u65b9\u6709\u70b9\u7e41\u7410\u3002\n\n\u6211\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u7565\u957f\uff0c\u4f46\u6ca1\u6709\u4ec0\u4e48\u9ad8\u7ea7\u7684\u4e1c\u897f\uff0c\u53ea\u5305\u542b\u4e86\u4e24\u4e2a\u5e93\uff0c\u5f88\u5bb9\u6613\u770b\u61c2\u3002\n\n```cpp\n\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nstruct apfel    //\u7528\u6765\u4fdd\u5b58\u82f9\u679c\u6570\u636e\u7684\u7ed3\u6784\u4f53;\n{\n  int hi;/*\u82f9\u679c\u7684\u9ad8\u5ea6*/\n  int need;/*\u82f9\u679c\u9700\u8981\u7684\u4f53\u529b\u503c*/\n  int ablt;/*\u8bb0\u5f55\u6dd8\u6dd8\u6709\u6ca1\u6709\u6458\u5230\u82f9\u679c\u7684\u80fd\u529b*/\n\n};\n\n\nint n=0,hTao=0,hChair=0,h=0,s=0,ans=0;\n//\u5206\u522b\u662f \u82f9\u679c\u603b\u6570\uff0c\u6dd8\u6dd8\u7684\u8eab\u9ad8\uff0c\u6905\u5b50\u9ad8\uff0c\u603b\u9ad8\u5ea6\uff0c\u5269\u4f59\u4f53\u529b\uff0c\u80fd\u6458\u5230\u7684\u4e2a\u6570;\n\nbool byH(const apfel a,const apfel b){return a.hi<b.hi;}\n//\u8ba9sort()\u51fd\u6570\u4ee5\u82f9\u679c\u7684\u9ad8\u5ea6\u4e3a\u6807\u51c6\u6392\u5e8f\u7684\u51fd\u6570;\nbool byN(const apfel a,const apfel b){return a.need<b.need;}\n//\u8ba9sort()\u51fd\u6570\u4ee5\u82f9\u679c\u9700\u8981\u7684\u4f53\u529b\u4e3a\u6807\u51c6\u6392\u5e8f\u7684\u51fd\u6570;\n\nint main()\n{\n    /*Input*/\n    cin>>n>>s>>hChair>>hTao;\n    apfel apple[n];//\u5b58\u50a8\u82f9\u679c\u6570\u636e\u7684\u6570\u7ec4\n    for (int i=0;i<n;i++)\n    {\n        cin>>apple[i].hi>>apple[i].need;\n        apple[i].ablt=0;\n //\u8f93\u5165\u7684\u8fc7\u7a0b\uff0c\u987a\u4fbf\u628a\u82f9\u679c\u7684ablt\u521d\u59cb\u5316(\u7ed3\u6784\u4f53\u5185\u76f4\u63a5\u9ed8\u8ba4\u521d\u59cb\u5316\u7684\u8bed\u6cd5\u53ea\u9002\u7528\u4e8eC++11;\n    }\n    h=hTao+hChair;//\u8ba1\u7b97\u603b\u9ad8\u5ea6;\n\n    /*Scan for apples which can be caught*/\n    sort(apple,apple+n,byH);//\u4ee5\u9ad8\u5ea6\u6392\u5e8f;\n    for (int i=0;i<n;i++)\n    {\n        if (apple[i].hi>h) break;\n        if (apple[i].hi<=h)apple[i].ablt=1;//\u5c06\u80fd\u591f\u5230\u7684\u82f9\u679c\u6807\u8bb0;\n    }\n\n    /*Scan for apples which we should catch*/\n    sort(apple,apple+n,byN);//\u4ee5\u9700\u8981\u7684\u4f53\u529b\u6392\u5e8f;\n    for (int i=0;i<n;i++)\n    {\n        if (!apple[i].ablt) continue;//\u5982\u679c\u591f\u4e0d\u5230\u8df3\u8fc7;\n        if (apple[i].need<=s)//\u5982\u679c\u80fd\u591f\u5230\u4e14\u6709\u8db3\u591f\u7684\u529b\u6c14\u591f;\n        {\n            s-=apple[i].need;//\u4f53\u529b\u51cf\u5c11;\n            ans++;//\u8ba1\u6570;\n        }\n        if (apple[i].need>s) break;//\u56e0\u4e3a\u5df2\u7ecf\u662f\u6392\u597d\u5e8f\u7684,\u6240\u4ee5\u53ea\u8981\u9047\u5230\u591f\u4e0d\u5230\u7684\u5373\u53ef\u4ee5\u505c\u6b62;\n    }\n    /*Print out*/\n    cout<<ans<<endl;//\u8f93\u51fa;\n\n    return 0;\n}\n\n```\n\n\u7efc\u4e0a\uff0c\u5b8c\u6bd5,\u5e0c\u671b\u53ef\u4ee5\u6709\u5e2e\u52a9\u3002\n",
        "postTime": 1463724851,
        "uid": 17041,
        "name": "CallMeTewi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    },
    {
        "content": "\u6ca1\u4ec0\u4e48\u6280\u672f\u542b\u91cf\uff0c\u662f\u6c34\u9898\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint a[6000];\nint main()\n{\n    int pingguoshu,liqi,yizihigh,shoulong,x,y,num = 0;\n    cin>>pingguoshu>>liqi>>yizihigh>>shoulong;\n    for(int i = 0;i<pingguoshu;i++)\n    {\n            cin>>x>>y;\n            if(yizihigh+shoulong>=x)//\u76f4\u63a5\u8bb0\u5f55\u53ef\u4ee5\u6458\u5230\u7684\n            {\n               a[num] = y;\n               num++;\n            }\n    }\n    sort(a,a+num);//\u5feb\u6392\n    int jishu = 0;\n    for(int i=0;i<num;i++)\n    {\n        if(liqi-a[i]>=0)\n        {\n            jishu++;\n            liqi-=a[i];\n        }\n        else\n            break;//\u5c0f\u4f18\u5316\n    }\n    cout<<jishu<<endl;\n    return 0;\n}\n```",
        "postTime": 1458305648,
        "uid": 15214,
        "name": "Juliet",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1478 \u3010\u9676\u9676\u6458\u82f9\u679c\uff08\u5347\u7ea7\u7248\uff09\u3011"
    }
]