[
    {
        "content": "# [P6517 [CEOI2010 day1] alliances](https://www.luogu.com.cn/problem/P6517)\n\n## \u7b97\u6cd5\n\n- \u7f51\u7edc\u6d41\u9ed1\u767d\u67d3\u8272\n\n## \u9898\u76ee\n\n\u4e00\u5171\u7ed9\u51fa\u4e86 $4$ \u79cd\u9650\u5236\u3002\n\n\u7b2c $1$ \u79cd\u7ed3\u70b9\uff1a\u4e0e\u56db\u8fde\u901a\u7684 $1$ \u4e2a\u90bb\u5c45 Union\u3002\n\n\u7b2c $2$ \u79cd\u7ed3\u70b9\uff1a\u4e0e\u56db\u8fde\u901a\u7684 $2$ \u4e2a\u90bb\u5c45 Union\u3002\n\n\u7b2c $3$ \u79cd\u7ed3\u70b9\uff1a\u4e0e\u56db\u8fde\u901a\u7684 $3$ \u4e2a\u90bb\u5c45 Union\u3002\n\n\u7b2c $4$ \u79cd\u7ed3\u70b9\uff1a\u4e0e\u56db\u8fde\u901a\u7684 $4$ \u4e2a\u90bb\u5c45 Union\u3002\n\n\u4f46\u662f\u7b2c $2$ \u79cd\u7ed3\u70b9\u8fd8\u6709\u4e00\u4e2a**\u5751**\uff1a\u5c31\u662f\u4e0d\u80fd\u540c\u65f6\u4e0e**\u4e0a\u4e0b**\u6216**\u5de6\u53f3** Union\u3002\n\n\u6700\u540e\u8f93\u51fa\u4e00\u79cd\u53ef\u884c\u65b9\u6848\u3002\n\n## \u601d\u8def\n\n\u770b\u5230\u8fd9\u79cd**\u914d\u5bf9**\u7684\u95ee\u9898\uff0c\u81ea\u7136\u8981\u8003\u8651**\u7f51\u7edc\u6d41\u9ed1\u767d\u67d3\u8272**\u601d\u60f3\u4e86\u3002\n\n\u89c4\u5b9a\uff1a\u5bf9\u4e8e\u4e8c\u5143\u7ec4 $(i,j)$\uff0c\u82e5 $i+j$ \u4e3a**\u5947\u6570**\uff0c\u5219\u4e3a**\u9ed1\u70b9**\uff1b\u5426\u5219\uff0c\u4e3a**\u767d\u70b9**\u3002\u800c\u4e14\uff1a**\u9ed1\u70b9**\u53ea\u5411**\u767d\u70b9**\u8fde\u8fb9\uff0c\u4f46\u662f**\u767d\u70b9**\u4e0d\u5411**\u9ed1\u70b9**\u8fde\u8fb9\u3002\n\n### \u6709\u65e0\u89e3\n\n\u5224\u65ad\u662f\u5426\u6709\u89e3\u53ea\u9700\u8981\u5224\u65ad\uff1a**\u9ed1\u70b9\u7684\u6743\u503c\u548c\u662f\u5426\u7b49\u4e8e\u7ed3\u76df\u6570\uff08\u4e5f\u5c31\u662f\u6700\u5927\u6d41\uff09**\u3002\n\n### \u5efa\u56fe\n\n#### \u521d\u59cb\u5316\n\n\u6e90\u70b9 $s$ \u5411\u6240\u6709**\u9ed1\u70b9**\u8fde\u8fb9\uff0c\u6743\u503c\u4e3a\u8f93\u5165\u7684\u6570\u636e\u3002\n\n\u6240\u6709**\u767d\u70b9**\u5411\u6c47\u70b9 $t$ \u8fde\u8fb9\uff0c\u6743\u503c\u4e3a\u8f93\u5165\u7684\u6570\u636e\u3002\n\n#### \u8054\u76df\u5173\u7cfb\n\n\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\n\n\u5148\u8003\u8651\u4e0d\u5305\u62ec\u7b2c $2$ \u79cd\u7ed3\u70b9\u7684\u60c5\u51b5\uff08~~\u975e\u4eba\u7c7b\u70b9~~\uff09\uff1a\n\n\u9996\u5148\uff0c\u5224\u65ad\u9ed1\u767d\u70b9\uff0c\u82e5\u662f\u767d\u70b9\uff0c\u8df3\u8fc7\uff1b\u5426\u5219\uff1a\u9ed1\u70b9\u5411\u767d\u70b9\u8fde\u8fb9\uff0c\u6743\u503c\u4e3a $1$\u3002\n\n\u518d\u8003\u8651\u5305\u62ec\u7b2c $2$ \u79cd\u7ed3\u70b9\u7684\u60c5\u51b5\uff1a\n\n\u53d1\u73b0\u4eba\u7c7b\u6bd4\u8f83\u7279\u6b8a\uff0c\u542b\u6709\u4e24\u6761\u9650\u5236\uff1a\u4e0d\u80fd\u540c\u65f6\u4e0e**\u4e0a\u4e0b**\u6216**\u5de6\u53f3** Union\u3002\n\n\u90a3\u6211\u4eec\u53ea\u9700\u8981\u628a\u4eba\u7c7b\u62c6\u4e3a $3$ \u4e2a\u70b9\uff1a\u7b2c\u4e00\u4e2a\u4e3a\u521d\u59cb\u70b9 $x$\uff0c\u7b2c\u4e8c\u4e2a\u4e3a\u7ba1\u7406\u4e0a\u4e0b\u65b9\u5411\u7684\u7ed3\u70b9 $x_1$\uff0c\u7b2c\u4e09\u4e2a\u4e3a\u7ba1\u7406\u5de6\u53f3\u7684\u7ed3\u70b9 $x_2$\u3002\n\n\u5bf9\u4e8e\u521d\u59cb\u70b9\uff0c\u4ecd\u7136\u9650\u6d41\u4e3a $2$\u3002\n\n\u5bf9\u4e8e\u5176\u4ed6\u4e24\u4e2a\u7ed3\u70b9\uff1a\n\n\u82e5\u6b64\u8282\u70b9\u4e3a**\u9ed1\u70b9**\uff1a\n\n\u4ece\u521d\u7ed3\u70b9\u5206\u522b\u5411 $x_1$ \u548c $x_2$ \u8fde\u63a5\u4e00\u6761\u6743\u503c\u4e3a $1$ \u7684\u8fb9\u3002\u7136\u540e $x_1$ \u5411\u8fd9\u4e2a\u7ed3\u70b9\u7684**\u4e0a\u4e0b**\u7ed3\u70b9\u8fde\u8fb9\uff0c\u6743\u503c\u4e3a $1$\uff1b$x_2$ \u5411\u8fd9\u4e2a\u7ed3\u70b9\u7684**\u5de6\u53f3**\u7ed3\u70b9\u8fde\u8fb9\uff0c\u6743\u503c\u4e3a $1$\u3002\n\n\u82e5\u6b64\u8282\u70b9\u4e3a**\u767d\u70b9**\uff1a\n\n\u4ece $x_1$ \u548c $x_2$ \u5206\u522b\u5411\u521d\u7ed3\u70b9\u8fde\u63a5\u4e00\u6761\u6743\u503c\u4e3a $1$ \u7684\u8fb9\u3002\u7136\u540e\u8fd9\u4e2a\u7ed3\u70b9\u7684**\u4e0a\u4e0b**\u7ed3\u70b9\u5411 $x_1$ \u8fde\u8fb9\uff0c\u6743\u503c\u4e3a $1$\uff1b\u8fd9\u4e2a\u7ed3\u70b9\u7684**\u5de6\u53f3**\u7ed3\u70b9\u5411 $x_2$ \u8fde\u8fb9\uff0c\u6743\u503c\u4e3a $1$\u3002\n\n\u53d1\u73b0**\u9ed1\u767d\u70b9**\u5c31\u662f\u53cd\u7740\u5efa\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zhiw1nl0.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ib7mpgvb.png)\n\n#### \u5efa\u56fe\u603b\u7ed3\n\n\u6e90\u70b9 $s$ \u5411\u9ed1\u70b9\u8fde\u8fb9\u3002\n\n\u767d\u70b9\u5411\u6c47\u70b9 $t$ \u8fde\u8fb9\u3002\n\n\u9ed1\u70b9\u5411\u767d\u70b9\u8fde\u8fb9\u3002\n\n\u628a\u7b2c $2$ \u79cd\u7ed3\u70b9\u2014\u2014\u4eba\u7c7b\u62c6\u4e86\u3002\n\n### \u6700\u5927\u6d41\n\n\u7f51\u7edc\u6d41\u6a21\u677f\u3002\n\n### \u7edf\u8ba1\u7b54\u6848\n\n**\u6b63\u8fb9\u6ca1\u6709\u6d41**\u6216\u8005**\u53cd\u8fb9\u6709\u6d41**\u5219\u8bc1\u660e\u8fd9\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u7ed3\u70b9 Union\u3002\n\n## \u63d0\u9192\n\n\u6ce8\u610f\u666e\u901a\u70b9 $1,3,4$ \u5411\u4eba\u7c7b\u70b9 $2$ \u8fde\u8fb9\u65f6**\u4e0d\u662f\u5411\u521d\u59cb\u70b9** $x$ \u8fde\u8fb9\uff0c\u800c**\u662f**\u5411\u53e6\u5916\u4e24\u4e2a**\u7ba1\u8f96\u65b9\u5411\u7684\u70b9**\u8fde\u8fb9\u3002\uff08\u6211\u5403\u4e8f\u4e86\uff09\n\n\u7f51\u7edc\u6d41**\u53cd\u8fb9**\u6d41\u91cf\u4e3a $0$\u3002\uff08\u6211\u53c8\u5403\u4e8f\u4e86\uff09\n\n\u7b54\u6848\u7684\u56fe\u7684\u5927\u5c0f\u662f\u539f\u56fe\u7684 $3$ \u500d\u3002\uff08\u6211\u53c8\u53cc\u5403\u4e8f\u4e86\uff09\n\n\u6700\u597d\u5c06 $(1,1)$ \u7ed3\u70b9\u8bbe\u4e3a\u9ed1\u70b9\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u7279\u5224\u53ea\u6709\u4e00\u4e2a\u70b9\u7684\u60c5\u51b5\u4e86\uff08\u4e0d\u7279\u5224 $98$ \u5206\uff09\u3002\u56e0\u4e3a\u5982\u679c $(1,1)$ \u662f\u767d\u70b9\uff0c**\u9ed1\u70b9\u8d21\u732e**\uff08\u8054\u76df\u6570\u91cf\uff09\u4e3a $0$\uff0c\u6700\u5927\u6d41\u4e5f\u662f $0$\uff0c\u5c31\u5224\u65ad\u4e3a\u6709\u89e3\u4e86\uff0c\u663e\u7136\u9519\u8bef\u3002\uff08\u6211\u53c8\u53cc\u53d2\u5403\u4e8f\u4e86\uff09\n\n\u7f16\u53f7\u65b9\u5f0f\uff1a\n\n$n$ \u884c $m$ \u5217\uff1a\n\n\u5bf9\u4e8e\u4e8c\u5143\u7ec4 $(i,j)$\uff0c\u7f16\u53f7\u4e3a $i\\times(m-1)+j$\u3002\n\n\u5bf9\u4e8e\u7b2c $k$ \u4e2a\u4eba\u7c7b\u7684\u7ba1\u8f96\u65b9\u5411\u7684\u70b9\uff0c\u7f16\u53f7\u4e3a $n\\times m+2\\times k-x\\qquad x\\in[0,1]$\u3002\n\n\u7edf\u8ba1\u7b54\u6848\u65f6\u8981**\u539f\u56fe\u7ed3\u70b9\u7684\u5750\u6807**\uff0c\u5f00\u4e2a**\u6876**\uff0c\u4e0b\u6807\u4e3a\u4e8c\u5143\u7ec4\u5bf9\u5e94\u7684\u7f16\u53f7\uff0c\u5185\u5bb9\u5b58\u76f8\u5e94\u7684\u4e8c\u5143\u7ec4\u5c31\u884c\u4e86\u3002\n\n~~\u8fd9\u662f\u6211\u7684\u7f16\u53f7\u65b9\u5f0f\u3002\uff08\u8fd9\u6b21\u6ca1\u5403\u4e8f\uff09~~\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define judge ((i + dx[k] >= 1 && j + dy[k] >= 1 && i + dx[k] <= n && j + dy[k] <= m) && (a[i + dx[k]][j + dy[k]]))\n//judge \u5224\u65ad\u662f\u5426\u8d8a\u754c\uff0c\u662f\u5426\u4e3a\u65e0\u4eba\u533a\u3002\nconst int inf = 1 << 30;\nconst int N = 70 + 5;\nconst int M = 3 * N * N;\nconst int s = M - 1;//\u539f\u70b9\nconst int t = M - 2;//\u6c47\u70b9\nnamespace IO\n{\n    struct type//\u4e8c\u5143\u7ec4\uff0c\u5176\u5b9e\u5c31\u662fpair<int,int>\n    {\n        int x, y;\n        friend bool operator<(const type &A, const type &B){return A.x != B.x ? A.x < B.x : A.y < B.y;}\n        type(int x = 0, int y = 0) : x(x), y(y){}\n    };\n    template <typename Type> void read(Type &n)\n    {\n        Type w=1;char x=getchar();n=0;\n        while(x<'0'||x>'9'){if(x=='-')w=-1;x=getchar();}\n        while(x>='0'&&x<='9'){n=(n<<1)+(n<<3)+(x^48);x=getchar();}\n        n*=w;\n    }\n    template <typename Type,typename...Etc> void read(Type &n,Etc &...etcs)\n    {\n        read(n);read(etcs...);\n    }\n    template <typename Type> void write(Type x)\n    {\n        if(x<0) putchar('-'),x=-x;\n        if(x>9) write(x/10);\n        putchar(x%10+'0');\n    }\n}\nusing namespace IO;\nnamespace network//\u7f51\u7edc\u6d41\u6a21\u677f\uff0c\u6b64\u90e8\u5206\u4e0d\u89e3\u91ca\n{\n    struct edge\n    {\n        int u;\n        int v;\n        int w;\n        int nxt;\n        edge(int u = 0, int v = 0, int w = 0, int nxt = 0) : u(u), v(v), w(w), nxt(nxt){}\n    };\n    edge e[M << 4];\n    int head[M];\n    int dep[M];\n    int cur[M];\n    int ecnt = 1;\n    void add(int u, int v, int w)\n    {\n        e[++ecnt] = edge(u, v, w, head[u]); head[u] = ecnt;\n        e[++ecnt] = edge(v, u, 0, head[v]); head[v] = ecnt;\n    }\n    bool bfs()\n    {\n        queue<int> q;\n        memcpy(cur, head, sizeof(cur));\n        memset(dep, 0, sizeof(dep));\n        dep[s] = 1;\n        q.push(s);\n        while (!q.empty())\n        {\n            int u = q.front();\n            q.pop();\n            for (int i = head[u]; i; i = e[i].nxt)\n            {\n                int v = e[i].v;\n                if (e[i].w && !dep[v])\n                {\n                    dep[v] = dep[u] + 1;\n                    q.push(v);\n                }\n            }\n        }\n        return dep[t];\n    }\n    int dfs(int u, int flow)\n    {\n        if (u == t)\n            return flow;\n        int i, rest = flow;\n        for (i = cur[u]; i; i = e[i].nxt)\n        {\n            int v = e[i].v;\n            if (e[i].w && dep[v] == dep[u] + 1)\n            {\n                int k = dfs(v, min(e[i].w, rest));\n                rest -= k;\n                e[i].w -= k;\n                e[i ^ 1].w += k;\n                if (!rest)\n                    break;\n            }\n        }\n        cur[u] = i;\n        return flow - rest;\n    }\n    int maxflow()\n    {\n        int ans = 0;\n        while (bfs())\n            ans += dfs(s, inf);\n        return ans;\n    }\n}\nusing namespace network;\nint n, m, sum;\nint a[N][N], b[N * 3][N * 3];//\u539f\u56fe\u548c\u7b54\u6848\u56fe\uff0c\u8bb0\u5f97\u5f00 3 \u500d\nint dx[4] = {0, 0, 1, -1};\nint dy[4] = {1, -1, 0, 0};\n//\u4e0b\uff0c\u4e0a\uff0c\u53f3\uff0c\u5de6\nint personcnt;\n//\u4eba\u7684\u4e2a\u6570\nmap<type, type> person;\n//\u4eba\u62c6\u51fa\u6765\u7684\u4e24\u4e2a\u7ba1\u8f96\u65b9\u5411\u7684\u70b9\nmap<type, bool> Union;\n//\u5224\u65ad\u4e24\u4e2a\u70b9\u662f\u5426\u8054\u5408\u3002\ntype point[M];\n//\u6876\u5b58\u76f8\u5e94\u7684\u70b9\u7684\u5750\u6807\nbool black(type p)//\u5224\u65ad\u662f\u5426\u4e3a\u9ed1\u70b9\n{\n    return !((p.x + p.y) & 1);\n}\nint get_num(type p)//\u5f97\u5230\u4e8c\u5143\u7ec4\u7684\u7f16\u53f7\n{\n    return (p.x - 1) * m + p.y;\n}\nvoid get_edge()//\u5efa\u8fb9\n{\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= m; j++)\n        {\n            read(a[i][j]);\n            type now = type(i, j);\n            sum += a[i][j] * black(now);\n            if (black(now))//s->\u9ed1\u70b9\n                add(s, get_num(now), a[i][j]);\n            else//\u767d\u70b9->t\n                add(get_num(now), t, a[i][j]);\n            point[get_num(now)] = now;\n            if (a[i][j] == 2)\n            {\n                ++personcnt;//\u4eba\u7c7b+1\n                person[now] = type(n * m + 2 * personcnt - 1, n * m + 2 * personcnt);//\u62c6\u70b9\n                point[person[now].x] = now;\n                point[person[now].y] = now;\n                if (black(now))//\u9ed1\u70b9->x1,x2\n                {\n                    add(get_num(now), person[now].x, 1);\n                    add(get_num(now), person[now].y, 1);\n                }\n                else//x1,x2->\u767d\u70b9\n                {\n                    add(person[now].x, get_num(now), 1);\n                    add(person[now].y, get_num(now), 1);\n                }\n            }\n        }\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= m; j++)\n        {\n            type u = type(i, j);\n            if (!black(u) || a[i][j] == 0)\n                continue;//\u767d\u70b9\uff0c\u65e0\u4eba\u533a\u4e0d\u8fde\u8fb9\n            for (int k = 0; k < 4; k++)\n            {\n                type v = type(i + dx[k], j + dy[k]);\n                if (judge)\n                {\n                    if (a[i + dx[k]][j + dy[k]] == 2)//\u8fde\u5411\u7684\u70b9\u662f\u4eba\u7c7b\n                    {\n                        if (a[i][j] == 2)//\u5f53\u524d\u70b9\u662f\u4eba\u7c7b\n                        {\n                            if (k < 2)//\u4e0a\u4e0b\n                                add(person[u].x, person[v].x, 1);\n                            else//\u5de6\u53f3\n                                add(person[u].y, person[v].y, 1);\n                        }\n                        else//\u5f53\u524d\u70b9\u662f\u666e\u901a\u70b9\n                        {\n                            if (k < 2)\n                                add(get_num(u), person[v].x, 1);\n                            else\n                                add(get_num(u), person[v].y, 1);\n                        }\n                    }\n                    else//\u8fde\u5411\u7684\u70b9\u662f\u666e\u901a\u70b9\n                    {\n                        if (a[i][j] == 2)\n                        {\n                            if (k < 2)\n                                add(person[u].x, get_num(v), 1);\n                            else\n                                add(person[u].y, get_num(v), 1);\n                        }\n                        else\n                            add(get_num(u), get_num(v), 1);\n                    }\n                }\n            }\n        }\n    }\n}\nvoid get_map()\n{\n    for (int i = 1; i <= n * 3; i++)\n        for (int j = 1; j <= m * 3; j++)\n            b[i][j] = '.';//\u521d\u59cb\u5316\u5168\u90e8\u6ca1\u4eba\n    for (int i = 2; i <= ecnt; i += 2)//Union\n    {\n        if (e[i].u != s && e[i].v != t && !e[i].w)\n        {\n            int u = get_num(point[e[i].u]);\n            int v = get_num(point[e[i].v]);\n            Union[type(u, v)] = true;\n            Union[type(v, u)] = true;\n        }\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= m; j++)\n        {\n            if (a[i][j])//\u82e5\u5f53\u524d\u4e0d\u662f\u65e0\u4eba\u533a\n            {\n                int xl = 3 * (i - 1) + 1, xr = 3 * i;\n                int yl = 3 * (j - 1) + 1, yr = 3 * j;\n                int xmid = (xl + xr) >> 1, ymid = (yl + yr) >> 1;\n                b[xmid][ymid] = 'O';\n                for (int k = 0; k < 4; k++)\n                    if (judge && Union.count(type(get_num(type(i, j)), get_num(type(i + dx[k], j + dy[k])))))//\u5224\u65ad\u56db\u4e2a\u65b9\u5411\u662f\u5426 Union\n                        b[xmid + dx[k]][ymid + dy[k]] = 'X';\n            }\n        }\n    }\n}\nsigned main()\n{\n    int total = 0;\n    read(n, m);\n    get_edge();//\u5efa\u8fb9\n    if (sum != maxflow())//\u5224\u65ad\n    {\n        printf(\"Impossible!\");\n        return 0;\n    }\n    get_map();//\u7b54\u6848\n    for (int i = 1; i <= n * 3; i++)//print\n    {\n        for (int j = 1; j <= m * 3; j++)\n        {\n            putchar(b[i][j]);\n        }\n        putchar('\\n');\n    }\n    return 0;//never give up.\n}\n```\n## \u540e\u8a00\n\n\u611f\u8c22 @[Ptilopsis_w](https://www.luogu.com.cn/user/239167) DaLao \u5bf9\u672c\u4eba\u9519\u8bef\u601d\u60f3\u7684\u6307\u51fa\u53ca\u6b63\u786e\u601d\u60f3\u7684\u63d0\u4f9b\u3002\n\n\u611f\u8c22\u7ba1\u7406\u5458\u5927\u5927\u62bd\u51fa\u65f6\u95f4\u5ba1\u6838\u3002",
        "postTime": 1663684476,
        "uid": 239163,
        "name": "MarchKid_Joe",
        "ccfLevel": 6,
        "title": "P6517 [CEOI2010 day1] alliances \u9898\u89e3"
    },
    {
        "content": "# \u4e00\u9053\u7b80\u5355\u7684\u7f51\u7edc~~\u7624~~\u6d41\n[Maybe\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://chen-jia-liang.gitee.io/blog/2020/07/07/%E9%A2%98%E8%A7%A3-P6517-%E3%80%90-CEOI2010-day1-alliances%E3%80%91/)~~$\\LaTeX$\u70b8\u4e86\u8bf7\u5237\u65b0\u4e00\u4e0b~~\n\n\u770b\u5230$\\color{white}\\colorbox{red}{\\texttt{\u6700\u5927\u6d41}}$\u7684\u6807\u7b7e\uff0c\u6211\u4eec\u5c31\u8981\u60f3\u7740\u53bb\u6784\u9020\u5408\u9002\u7684\u6a21\u578b\u3002\n\n\u9996\u5148\u6211\u4eec\u6839\u636e$x+y$\u7684\u5947\u5076\u6027\u628a\u6240\u6709\u7684\u5750\u6807\u5206\u6210\u4e24\u7c7b\uff0c\u6253\u4e0a\u4e0d\u540c\u7684\u8bb0\u53f7\uff0c\u6574\u5e45\u56fe\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\uff1a\n\n![\u68cb\u76d8](https://cdn.luogu.com.cn/upload/image_hosting/993pqtgp.png)\n\n~~\u8fd9\u771f\u7684\u4e0d\u662f\u68cb\u76d8~~\n\n\u6211\u4eec\u770b\u5230\uff0c\u9898\u76ee\u4e2d\n> \u5b9a\u4e49**\u6bcf\u4e2a\u6751\u5e84\u76f8\u90bb\u56db\u4e2a\u65b9\u5411\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\u7684\u6751\u5e84**\u4e3a\u8fd9\u4e2a\u6751\u5e84\u7684\u90bb\u5c45\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u540c\u8272\u7684\u5757\u4e4b\u95f4\u662f\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u7684\uff0c\u4ed6\u4eec\u4e0d\u53ef\u80fd\u662f\u90bb\u5c45\u3002\n\n\u6b64\u65f6\u82e5\u5ffd\u7565```\n\u4e14\u8fd9\u4e24\u4e2a\u90bb\u5c45\u4e0d\u80fd\u5728\u4e0a\u4e0b\u6216\u8005\u5de6\u53f3\u65b9\u5411```\uff0c\u6b64\u9898\u5c31\u662f\u4e00\u9053\u7b80\u5355\u7684\u6700\u5927\u5339\u914d\u95ee\u9898\u3002\u6211\u4eec\u53ea\u9700\u8981\n1. \u5c06**\u6e90\u70b9$S$** \u8fde\u5230\u9ed1\u8272\u5757\uff0c\u6d41\u91cf\u4e3a\u6b64\u5757\u7684\u7ed3\u76df\u6570\uff0c\u8868\u793a\u6b64\u5757\u6700\u591a\u7ed3\u76df\u7684\u6570\u91cf\uff1b\n1. \u5c06\u9ed1\u8272\u5757\u8fde\u5230\u76f8\u90bb\u7684\u767d\u8272\u5757\uff0c\u6d41\u91cf\u4e3a$1$\uff0c\u8868\u793a\u4ed6\u4eec\u4e4b\u95f4\u6700\u591a\u7ed3\u76df\u4e00\u6b21\uff1b\n1. \u5c06\u767d\u8272\u5757\u8fde\u5230**\u6c47\u70b9$T$** \uff0c\u6d41\u91cf\u4e3a\u6b64\u5757\u7684\u7ed3\u76df\u6570\uff0c\u8868\u793a\u6b64\u5757\u6700\u591a\u7ed3\u76df\u7684\u6570\u91cf\uff1b\n1. \u82e5\u6700\u5927\u6d41\u91cf=\u9ed1\u5757\u7684\u7ed3\u76df\u6570\u603b\u548c\uff0c\u5219\u6709\u89e3\uff0c\u5e76\u5c06$\\texttt{dinic}$\u4e4b\u540e\u6d41\u91cf\u4e3a0\u7684\u70b9\u8bb0\u5f55\u4e0b\u6765\u8868\u793a\u7ed3\u76df\uff0c\u5426\u5219\u65e0\u89e3\n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u7684\u95ee\u9898\u53d8\u4e3a\u5982\u4f55\u5904\u7406\u4f7f\u5176\u65e0\u6cd5\u5728\u4e0a\u4e0b\u6216\u8005\u5de6\u53f3\u65b9\u5411\uff0c~~\u6839\u636e\u505a\u9898\u7684\u5957\u8def~~\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u53ef\u4ee5\u628a\u4eba\u7c7b\u62c6\u6210\u4e24\u4e2a\u70b9~~\u597d\u6b8b\u5fcd~~\uff0c\u5206\u522b\u8868\u793a\u5176\u5de6\u53f3\u548c\u4e0a\u4e0b\uff0c\u6e90\u70b9\u5206\u522b\u4e0e\u5b83\u4eec\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a$1$\u7684\u8fb9\uff0c\u8868\u793a\u5de6\u53f3/\u4e0a\u4e0b\u90fd\u53ea\u80fd\u6709$1$\u4e2a\uff0c\u5b8c\u7f8e\u89e3\u51b3\u4e86\u4eba\u7c7b\u7684\u9650\u5236\n\n## \u4ee3\u7801\n\u601d\u8def\u6709\u4e86\u5176\u5b9e\u633a\u7b80\u5355\u7684\uff0c\u53ea\u662f\u7ec6\u8282\u6709\u70b9\u591a\n```cpp\n//#pragma GCC optimize(3,\"Ofast\",\"inline\")\n#include<bits/stdc++.h>\nnamespace in{\n\tchar buf[1<<21],*p1=buf,*p2=buf;\n\tinline int getc(){\n\t    return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;\n\t}\n\ttemplate <typename T>inline void read(T& t){\n\t    t=0;int f=0;char ch=getc();\n\t    while (!isdigit(ch)){\n\t        if(ch=='-')f = 1;\n\t        ch=getc();\n\t    }\n\t    while(isdigit(ch)){\n   \t    \tt=t*10+ch-48;\n   \t    \tch = getc();\n   \t\t}\n\t\tif(f)t=-t;\n\t}\n\ttemplate <typename T,typename... Args> inline void read(T& t, Args&... args){\n\t    read(t);read(args...);\n\t}\n\tchar get(char &c){\n\t\tc=getc();\n\t\twhile(!isalpha(c))\n\t\t\tc=getc();\n\t\treturn c;\n\t}\n\tvoid deal(){\n\t\tchar c=getc();\n\t\twhile(isalpha(c))\n\t\t\tc=getc();\n\t}\n}\nnamespace out{\n\tchar buffer[1<<21];\n\tint p1=-1;\n\tconst int p2 = (1<<21)-1;\n\tinline void flush() {\n\t\tfwrite(buffer,1,p1+1,stdout),\n\t\tp1=-1;\n\t}\n\tinline void putc(const char &x) {\n\t\tif(p1==p2)flush();\n\t\tbuffer[++p1]=x;\n\t}\n\ttemplate <typename T>void write(T x) {\n\t\tstatic char buf[15];\n\t\tstatic int len=-1;\n\t\tif(x>=0){\n\t\t\tdo{\n    \t\t\tbuf[++len]=x%10+48,x/=10;\n    \t\t}while (x);\n\t\t}else{\n    \t\tputc('-');\n\t\t\tdo {\n    \t\t\tbuf[++len]=-(x%10)+48,x/=10;\n\t\t\t}while(x);\n\t\t}\n\t\twhile (len>=0)\n\t\t\tputc(buf[len]),--len;\n\t}\n}\nusing namespace std;\nconst int maxn=70*70*5,maxe=1000010*2;\nstruct Graph{\n\tstruct node{\n\t\tint v,w,nxt;\n\t}e[maxe<<1];\n\tint head[maxn],cur[maxn],tot;\n\tint dis[maxn];\n\tint s,t;\n\tvoid init(int _s,int _t){s=_s,t=_t;tot=1;memset(head,0,sizeof head);}\n\tGraph(int _s=0,int _t=0){init(_s,_t);}\n\tvoid add(int u,int v,int w){\n\t\t//printf(\"%d %d %d\\n\",u,v,w);\n\t\te[++tot]=(node){v,w,head[u]},head[u]=tot;\n\t\te[++tot]=(node){u,0,head[v]},head[v]=tot;\n\t}\n\t#define v e[i].v\n\tinline bool bfs(){\n\t\tqueue<int>q;\n\t\tmemset(dis,0,sizeof dis);\n\t\tmemcpy(cur,head,sizeof head);\n\t\tdis[s]=1;q.push(s);\n\t\twhile(q.size()){\n\t\t\tint u=q.front();q.pop();\n\t\t\tfor(int i=head[u];i;i=e[i].nxt)\n\t\t\t\tif(!dis[v]&&e[i].w){\n\t\t\t\t\tdis[v]=dis[u]+1,q.push(v);\n\t\t\t\t\tif(v==t)return true;\n\t\t\t\t}\n\t\t}\n\t\treturn  false;\n\t}\n\tint dfs(int u,int flow){\n\t\tif(u==t)return flow;\n\t\tint rest=flow;\n\t\tfor(int i=cur[u];i&&rest;i=e[i].nxt){\n\t\t\tif(dis[v]==dis[u]+1&&e[i].w){\n\t\t\t\tint tmp=dfs(v,min(rest,e[i].w));\n\t\t\t\trest-=tmp,e[i].w-=tmp,e[i^1].w+=tmp;\n\t\t\t}\n\t\t\tcur[u]=i;\n\t\t}\n\t\tif(rest==0)dis[u]=-1;\n\t\treturn flow-rest;\n\t}\n\t#undef v\n\tint dinic(){\n\t\tint ans=0;\n\t\twhile(bfs())\n\t\t\twhile(int sth=dfs(s,2e9))\n\t\t\t\tans+=sth;\n\t\treturn ans;\n\t}\n}G; \nint r,c;\nint a[80][80];\nbool f[80][80];//\u6807\u8bb0\u51fa\u5165\nvector<int>v[80][80];\nbool t[80][80][4];\nint x[64000],y[64000];\nint tot=0;\nchar ch[900][900];\nvector<int> newn(int X,int Y,int len){\n\tvector<int>c;\n\tfor(int i=1;i<=len;i++)\n\t\tc.push_back(++tot),x[tot]=X,y[tot]=Y;\n\treturn c;\n} \n#define LR  0\n#define UD  1\nsigned main(){\n\t//freopen(\"1.in\",\"r\",stdin);\n\tin::read(r,c);\n\tfor(int i=1;i<=r;i++)\n\t\tfor(int j=1;j<=c;j++)\n\t\t\tin::read(a[i][j]);\n\tfor(int i=1;i<=r;i++)\n\t\tfor(int j=1;j<=c;j++)\n\t\t\tf[i][j]=(i+j)&1^1;\n\t//S\u8fde\u5411f[i][j]\u4e3a1\n\t//f[i][j]\u4e3a1\u8fde\u5411f[i][j]\u4e3a0\n\t//f[i][j]\u4e3a0\u8fde\u5411T\n\tint sum=0;\n\tfor(int i=1;i<=r;i++)\n\t\tfor(int j=1;j<=c;j++)\n\t\t\tif(f[i][j])sum+=a[i][j];\n\tfor(int i=1;i<=r;i++)\n\t\tfor(int j=1;j<=c;j++){\n\t\t\tif(a[i][j]==2)v[i][j]=newn(i,j,2);\n\t\t\telse if(a[i][j])v[i][j]=newn(i,j,1);\n\t\t}\n\tG.init(0,++tot);\n\tfor(int i=1;i<=r;i++)\n\t\tfor(int j=1;j<=c;j++)if(a[i][j]){\n\t\t\tif(f[i][j]){\n\t\t\t\tif(a[i][j]==2)G.add(G.s,v[i][j][0],1),G.add(G.s,v[i][j][1],1);\n\t\t\t\telse G.add(G.s,v[i][j][0],a[i][j]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(a[i][j]==2)G.add(v[i][j][0],G.t,1),G.add(v[i][j][1],G.t,1);\n\t\t\t\telse G.add(v[i][j][0],G.t,a[i][j]);\n\t\t\t}\n\t\t}\n\tfor(int i=1;i<=r;i++)\n\t\tfor(int j=1;j<=c;j++)\n\t\t\tif(f[i][j]&&a[i][j]){//\u6709\u6751\u5e84\u5e76\u4e14\u4e3a1 \n\t\t\t\tif(a[i][j]==2){\n\t\t\t\t\tif(a[i][j-1]){\n\t\t\t\t\t\tif(a[i][j-1]==2)G.add(v[i][j][LR],v[i][j-1][LR],1);\n\t\t\t\t\t\telse G.add(v[i][j][LR],v[i][j-1][0],1);\n\t\t\t\t\t}\n\t\t\t\t\tif(a[i][j+1]){\n\t\t\t\t\t\tif(a[i][j+1]==2)G.add(v[i][j][LR],v[i][j+1][LR],1);\n\t\t\t\t\t\telse G.add(v[i][j][LR],v[i][j+1][0],1);\n\t\t\t\t\t}\n\t\t\t\t\tif(a[i-1][j]){\n\t\t\t\t\t\tif(a[i-1][j]==2)G.add(v[i][j][UD],v[i-1][j][UD],1);\n\t\t\t\t\t\telse G.add(v[i][j][UD],v[i-1][j][0],1);\n\t\t\t\t\t}\n\t\t\t\t\tif(a[i+1][j]){\n\t\t\t\t\t\tif(a[i+1][j]==2)G.add(v[i][j][UD],v[i+1][j][UD],1);\n\t\t\t\t\t\telse G.add(v[i][j][UD],v[i+1][j][0],1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(a[i][j-1]){\n\t\t\t\t\t\tif(a[i][j-1]==2)G.add(v[i][j][0],v[i][j-1][LR],1);\n\t\t\t\t\t\telse G.add(v[i][j][0],v[i][j-1][0],1);\n\t\t\t\t\t}\n\t\t\t\t\tif(a[i][j+1]){\n\t\t\t\t\t\tif(a[i][j+1]==2)G.add(v[i][j][0],v[i][j+1][LR],1);\n\t\t\t\t\t\telse G.add(v[i][j][0],v[i][j+1][0],1);\n\t\t\t\t\t}\n\t\t\t\t\tif(a[i-1][j]){\n\t\t\t\t\t\tif(a[i-1][j]==2)G.add(v[i][j][0],v[i-1][j][UD],1);\n\t\t\t\t\t\telse G.add(v[i][j][0],v[i-1][j][0],1);\n\t\t\t\t\t}\n\t\t\t\t\tif(a[i+1][j]){\n\t\t\t\t\t\tif(a[i+1][j]==2)G.add(v[i][j][0],v[i+1][j][UD],1);\n\t\t\t\t\t\telse G.add(v[i][j][0],v[i+1][j][0],1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t} \n\tif(G.dinic()!=sum)printf(\"Impossible!\");\n\telse{\n\t\t#define UP 0\n\t\t#define DO 1\n\t\t#define LE 2\n\t\t#define RI 3\n\t\tfor(int i=1;i<=r;i++)\n\t\t\tfor(int j=1;j<=c;j++){\n\t\t\t\tvector<pair<int,int> >ttt;\n\t\t\t\tif(f[i][j]&&a[i][j]){\n\t\t\t\t\t//printf(\"%d %d\\n\",i,j);\n\t\t\t\t\tif(a[i][j]==2){\n\t\t\t\t\t\tfor(int w=G.head[v[i][j][0]];w;w=G.e[w].nxt)\n\t\t\t\t\t\t\tif(G.e[w].w==0&&G.e[w].v!=G.s&&G.e[w].v!=G.t)\n\t\t\t\t\t\t\t\tttt.push_back(make_pair(x[G.e[w].v],y[G.e[w].v]));\n\t\t\t\t\t\tfor(int w=G.head[v[i][j][1]];w;w=G.e[w].nxt)\n\t\t\t\t\t\t\tif(G.e[w].w==0&&G.e[w].v!=G.s&&G.e[w].v!=G.t)\n\t\t\t\t\t\t\t\tttt.push_back(make_pair(x[G.e[w].v],y[G.e[w].v]));\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tfor(int w=G.head[v[i][j][0]];w;w=G.e[w].nxt)\n\t\t\t\t\t\t\tif(G.e[w].w==0&&G.e[w].v!=G.s&&G.e[w].v!=G.t)\n\t\t\t\t\t\t\t\tttt.push_back(make_pair(x[G.e[w].v],y[G.e[w].v]));\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tfor(vector<pair<int,int> >::iterator it=ttt.begin();it!=ttt.end();it++){\n\t\t\t\t\t\tint X=(*it).first,Y=(*it).second;\n\t\t\t\t\t\t//printf(\"   %d %d\\n\",X,Y);\n\t\t\t\t\t\tif(X==i-1){\n\t\t\t\t\t\t\tt[i][j][LE]=1;\n\t\t\t\t\t\t\tt[X][Y][RI]=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(X==i+1){\n\t\t\t\t\t\t\tt[i][j][RI]=1;\n\t\t\t\t\t\t\tt[X][Y][LE]=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(Y==j-1){\n\t\t\t\t\t\t\tt[i][j][UP]=1;\n\t\t\t\t\t\t\tt[X][Y][DO]=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(Y==j+1){\n\t\t\t\t\t\t\tt[i][j][DO]=1;\n\t\t\t\t\t\t\tt[X][Y][UP]=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=1;i<=3*r;i++)\n\t\t\t\tfor(int j=1;j<=3*c;j++)\n\t\t\t\t\tch[i][j]='.';\n\t\t\tfor(int i=1;i<=r;i++)\n\t\t\t\tfor(int j=1;j<=c;j++)\n\t\t\t\t\tif(a[i][j]){\n\t\t\t\t\t\tint X=3*(i-1)+2,Y=3*(j-1)+2;\n\t\t\t\t\t\tch[X][Y]='O';\n\t\t\t\t\t\tif(t[i][j][UP])ch[X][Y-1]='X';\n\t\t\t\t\t\tif(t[i][j][DO])ch[X][Y+1]='X';\n\t\t\t\t\t\tif(t[i][j][LE])ch[X-1][Y]='X';\n\t\t\t\t\t\tif(t[i][j][RI])ch[X+1][Y]='X';\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\tfor(int i=1;i<=3*r;i++){\n\t\t\t\tfor(int j=1;j<=3*c;j++)\n\t\t\t\t\tout::putc(ch[i][j]);\n\t\t\t\tout::putc('\\n');\n\t\t\t}\n\t}\n\tout::flush();\n\treturn 0;\n}\n```",
        "postTime": 1594121717,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6517 \u3010[CEOI2010 day1] alliances\u3011"
    },
    {
        "content": "## \u3010\u6700\u5927\u6d41\u3011\u3010P6517\u3011 [CEOI2010 day1] alliances\n\n### Analysis\n\n\u9996\u5148\u8003\u8651\u5982\u679c\u6ca1\u6709\u4eba\u7c7b\u7684\u201c\u4e24\u4e2a\u7ed3\u76df\u4e0d\u80fd\u540c\u65f6\u5904\u5728\u4e0a\u4e0b\u6216\u5de6\u53f3\u65b9\u5411\u201d\u5e94\u8be5\u600e\u4e48\u505a\uff1a\n\n\u5982\u679c\u4ee5\u90bb\u5c45\u5173\u7cfb\u8fde\u8fb9\uff0c\u90a3\u4e48\u5efa\u51fa\u7684\u56fe\u663e\u7136\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\u90bb\u5c45\u4e4b\u95f4\u5de6\u90e8\u70b9\u5411\u53f3\u90e8\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u6e90\u70b9\u5206\u522b\u5411\u5de6\u90e8\u70b9\u8fde\u4ee5\u8be5\u70b9\u6240\u9700\u8981\u7684\u7ed3\u76df\u6570\u4e3a\u6d41\u91cf\u7684\u8fb9\uff0c\u53f3\u90e8\u70b9\u5411\u6c47\u70b9\u540c\u7406\u8fde\u8fb9\uff0c\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u662f\u5426\u80fd\u8fbe\u5230\u7ed3\u76df\u6570\u8981\u6c42\u3002check \u56fe\u4e0a\u5de6\u53f3\u90e8\u70b9\u4e4b\u95f4\u7684\u8fb9\u662f\u5426\u5728\u53c2\u91cf\u7f51\u7edc\u4e0a\u6709\u6d41\u91cf\u5373\u53ef\u8f93\u51fa\u65b9\u6848\u3002\n\n\u8003\u8651\u52a0\u5165\u4e86\u4eba\u7c7b\u7684\u9650\u5236\uff1a\n\n\u6ce8\u610f\u5230\u4eba\u7c7b\u7684\u4e24\u4e2a\u7ed3\u76df\u4e00\u5b9a\u662f\u4e24\u4e2a\u65b9\u5411\u5404\u4e00\u4e2a\uff0c\u4e5f\u5373\u6a2a\u5411\u6709\u4e00\u4e2a\u7ed3\u76df\uff0c\u7eb5\u5411\u6709\u4e00\u4e2a\u7ed3\u76df\u3002\u56e0\u6b64\u5c06\u4eba\u7c7b\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u4e00\u4e2a\u70b9\u8868\u793a\u6a2a\u5411\u7ed3\u76df\uff0c\u4e00\u4e2a\u70b9\u8868\u793a\u7eb5\u5411\u7ed3\u76df\u5373\u53ef\u3002\n\n### Code\n\n\u5b9e\u73b0\u7684\u65f6\u5019\u4e0d\u8981\u5fd8\u8bb0\u56e0\u4e3a\u4eba\u7c7b\u4f1a\u88ab\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u6240\u4ee5\u603b\u70b9\u6570\u5e94\u8be5\u5927\u7ea6\u662f $r \\times c \\times 2$\uff0c\u4e0d\u8981\u628a\u4e58\u4e8c\u843d\u4e0b\u3002\n\n```cpp\nnamespace Fusu {\n\nconst int maxt = 75;\nconst int maxn = 100050;\nconst int INF = 0x3f3f3f3f;\n\nvoid Init();\nvoid Solve();\n\nvoid Main() {\n  Init();\n  Solve();\n}\n\nint r, c, n, s, t, aa, bb;\n\nint a[maxt][maxt], id[maxt][maxt];\nstd::pair<int, int> pos[maxn];\n\nstruct Edge {\n  int v, f;\n  Edge *nxt, *bk;\n};\nEdge *hd[maxn];\ninline void cont(const int u, const int v, const int w) {\n  auto x = new Edge({v, w, hd[u], nullptr}), y = new Edge({u, 0, hd[v], nullptr});\n  hd[u] = y->bk = x;\n  hd[v] = x->bk = y;\n}\n\nconst int dx[] = {-1, 0, 1, 0};\nconst int dy[] = {0, -1, 0, 1};\n\nvoid Init() {\n  qr(r); qr(c);\n  s = 2 * r * c + 1; t = s + 1;\n  for (int i = 1; i <= r; ++i) {\n    for (int j = 1; j <= c; ++j) {\n      qr(a[i][j]);\n      if (a[i][j] == 0) continue;\n      pos[id[i][j] = ++n] = std::make_pair(i, j);\n      bool isleft = (i & 1) == (j & 1);\n      for (int k = 0, p, q; k < 2; ++k) {\n        if ((a[i][j] == 2) && (k == 1)) {\n          pos[++n] = std::make_pair(i, j);\n        }\n        if ((p = (i + dx[k])) && (q = j + dy[k]) && a[p][q]) {\n          int o = id[p][q];\n          if ((k == 1) && (a[p][q] == 2)) ++o;\n          if (isleft) {\n            cont(n, o, 1);\n          } else {\n            cont(o, n, 1);\n          }\n        }\n      }\n      if (a[i][j] != 2) {\n        if (isleft) {\n          cont(s, n, a[i][j]);\n          aa += a[i][j];\n        } else {\n          cont(n, t, a[i][j]);\n          bb += a[i][j];\n        }\n      } else {\n        if (isleft) {\n          cont(s, n, 1);\n          cont(s, n - 1, 1);\n          aa += 2;\n        } else {\n          cont(n, t, 1);\n          cont(n - 1, t, 1);\n          bb += 2;\n        }\n      }\n    }\n  }\n}\n\nstd::queue<int> Q;\nint dist[maxn];\nEdge *tmp[maxn];\nbool bfs() {\n  Q.push(s);\n  memset(dist, -1, sizeof dist);\n  dist[s] = 0;\n  for (int u, d, v; !Q.empty(); Q.pop()) {\n    d = dist[u = Q.front()] + 1;\n    for (auto e = tmp[u] = hd[u]; e; e = e->nxt) if ((e->f > 0) && (dist[v = e->v] == -1)) {\n      dist[v] = d;\n      Q.push(v);\n    }\n  }\n  return dist[t] != -1;\n}\n\nint dfs(const int u, int f) {\n  if (u == t) return f;\n  int ret = 0;\n  int v, d = dist[u] + 1, k;\n  for (auto &e = tmp[u]; e; e = e->nxt) if ((dist[v = e->v] == d) && (e->f > 0)) {\n    k = dfs(v, std::min(e->f, f));\n    ret += k;\n    e->f -= k;\n    e->bk->f += k;\n    if ((f -= k) == 0) break;\n  }\n  return ret;\n}\n\nbool lnk[maxt][maxt][maxt][maxt];\nchar opt[maxt][maxt][3][3];\nvoid Solve() {\n  if (aa != bb) {\n    puts(\"Impossible!\");\n    return;\n  }\n  int ans = 0;\n  while (bfs()) ans += dfs(s, INF);\n  if (ans != aa) {\n    puts(\"Impossible!\");\n    return;\n  }\n  for (auto e = hd[s]; e; e = e->nxt) {\n    int u = e->v, x = pos[u].first, y = pos[u].second;\n    for (auto ee = hd[u]; ee; ee = ee->nxt) if (ee->f == 0) {\n      int p = pos[ee->v].first, q = pos[ee->v].second;\n      lnk[x][y][p][q] = lnk[p][q][x][y] = true;\n    }\n  }\n  for (int i = 1; i <= r; ++i) {\n    for (int j = 1; j <= c; ++j) {\n      for (int k = 0; k < 3; ++k) {\n        for (int h = 0; h < 3; ++h) {\n          opt[i][j][k][h] = '.';\n        }\n      }\n      if (a[i][j]) opt[i][j][1][1] = 'O';\n      for (int k = 0, x, y; k < 4; ++k) {\n        x = i + dx[k]; y = j + dy[k];\n        if ((x == 0) || (y == 0) || (x > r) || (y > c)) continue;\n        if (lnk[i][j][x][y]) {\n          opt[i][j][1 + dx[k]][1 + dy[k]] = 'X';\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= r; ++i) {\n    for (int k = 0; k < 3; ++k) {\n      for (int j = 1; j <= c; ++j) {\n        for (int h = 0; h < 3; ++h) {\n          putchar(opt[i][j][k][h]);\n        }\n      }\n      putchar('\\n');\n    }\n  }\n}\n\n} // namespace Fusu\n```\n\n\n\n",
        "postTime": 1588702705,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6517 \u3010[CEOI2010 day1] alliances\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u56ed\u67e5\u770b](https://www.cnblogs.com/AIskeleton/p/16333922.html)\n\n\u7f51\u7edc\u6d41\uff0c\u4f46\u662f\u5927\u6a21\u62df\u3002\n\n> [P6517 [CEOI2010 day1] alliances](https://www.luogu.com.cn/problem/P6517)\n\n> \u9898\u9762\u6709\u70b9\u957f\uff0c\u4e0d\u653e\u4e86\u3002\n\n\u9996\u5148\uff0c\u9898\u76ee\u7ed9\u51fa\u7684\u662f\u4e00\u4e2a**\u65b9\u683c\u56fe**\uff0c\u800c\u4e14\u8fde\u8fb9\u662f\u5728**\u76f8\u90bb\u56db\u4e2a\u65b9\u5411\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09**\u4e4b\u95f4\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5bf9\u65b9\u683c\u56fe\u8fdb\u884c**\u9ed1\u767d\u67d3\u8272**\uff0c\u8fd9\u6837\u76f8\u540c\u989c\u8272\u7684\u70b9\u4e4b\u95f4\u5c31\u4e0d\u4f1a\u8fde\u8fb9\u3002\n\n\u5148\u8003\u8651\u6ca1\u6709\u4eba\u7c7b\u8fde\u8fb9\u7684\u9650\u5236\uff0c\u5219\u76f4\u63a5\u8dd1\u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d\u5373\u53ef\u3002\n\n\u5efa\u56fe\u65b9\u6cd5\uff08\u5176\u4e2d\u7684\u70b9\u90fd\u4e0d\u662f\u7a7a\u5730\uff09\uff1a\n- \u6e90\u70b9\u5411\u6bcf\u4e2a\u9ed1\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u5f53\u524d\u9ed1\u70b9\u9700\u8981\u8fde\u8fb9\u6570\u3002\n- \u6bcf\u4e2a\u9ed1\u70b9\u5411\u5468\u56f4\u56db\u4e2a\u70b9\u8fde\u5bb9\u91cf\u4e3a 1 \u7684\u8fb9\u3002\n- \u6bcf\u4e2a\u767d\u70b9\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u5f53\u524d\u767d\u70b9\u6240\u9700\u8fde\u8fb9\u6570\u3002\n\n\u53ef\u4ee5\u60f3\u5230\uff0c\u4eba\u7c7b\u7684\u8fde\u8fb9\u65b9\u6cd5\u4e00\u5b9a\u662f\u4e00\u6a2a\u4e00\u7ad6\u3002\n\n\u6240\u4ee5\u53ea\u8981\u628a\u6bcf\u4e2a\u8868\u793a\u4eba\u7c7b\u7684\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u4e00\u4e2a\u70b9\u53ea\u6a2a\u5411\u8fde\u8fb9\uff0c\u53e6\u4e00\u4e2a\u70b9\u53ea\u7ad6\u5411\u8fde\u8fb9\u5373\u53ef\u3002\u62c6\u6210\u7684\u70b9\u7684\u8fde\u8fb9**\u5bb9\u91cf\u8981\u51cf\u534a**\u3002\n\n\u5982\u679c\u6ee1\u6d41\u8bf4\u660e\u6709\u89e3\u3002\n\u8f93\u51fa\u65b9\u6848\u5c31\u904d\u5386\u6240\u6709\u8fb9\u67e5\u770b\u5339\u914d\u60c5\u51b5\u3002\n\n\u601d\u8def\u4e0d\u7b97\u7279\u522b\u6076\u5fc3\uff0c\u4f46\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u5f88\u591a\uff0c\u7801\u91cf\u4e5f\u6bd4\u8f83\u5927\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint rd(){\n\tint v=1,w=0;char c=getchar();while(c<'0'||c>'9'){if(c=='-')v=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')w=(w<<1)+(w<<3)+(c&15),c=getchar();return w*v;\n}void wr(int x){if(x<0)putchar('-'),x=-x;if(x>9)wr(x/10);putchar(x%10+'0');}\nconst int N=2003,INF=2e9;\nint n,m,st,ed,tot,ans,sum;\nint a[N][N],f[N][N],bh[N][N][2];\nchar out[N][N];\n\nint fir[N<<6],cnt=1;\nstruct E{int v,w,nt;}e[N*10000];\nvoid I(int u,int v,int w){\n\te[++cnt]=(E){v,w,fir[u]};fir[u]=cnt;\n\te[++cnt]=(E){u,0,fir[v]};fir[v]=cnt;\n}void init(){memset(e,0,sizeof(e));cnt=1;memset(fir,0,sizeof(fir));}\n\nint cur[N*1000],d[N*1000];queue <int>q;\nbool bfs(){\n\tmemset(d,0,sizeof(d));\n\tfor(int i=0;i<=ed;i++)\tcur[i]=fir[i];\n\tq.push(st);d[st]=1;\n\twhile(q.size()){\n\t\tint u=q.front(),V;q.pop();\n\t\tfor(int i=fir[u];i;i=e[i].nt)\n\t\t\tif(e[i].w&&!d[V=e[i].v])\n\t\t\t\tq.push(V),d[V]=d[u]+1;\n\t}return d[ed];\n}int dfs(int u,int fl){\n\tif(u==ed)return fl;int f,V,s=0;\n\tfor(int i=cur[u];i;i=e[i].nt){\n\t\tcur[u]=i;\n\t\tif(e[i].w&&d[V=e[i].v]==d[u]+1){\n\t\t\tf=dfs(V,min(fl,e[i].w));\n\t\t\te[i].w-=f;e[i^1].w+=f;\n\t\t\ts+=f;fl-=f;if(!fl)break;\n\t\t}\n\t}if(!s)d[u]=0;return s;\n}int dinic(){int ans=0;while(bfs())ans+=dfs(st,INF);return ans;}\n\nint main(){\n\tn=rd(),m=rd();st=n*m*2+99,ed=n*m*2+100;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\ta[i][j]=rd();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tf[i][j]=(i+j)&1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(a[i][j])\n\t\t\t\tbh[i][j][0]=++tot;\n\t\t\tif(a[i][j]==2)\n\t\t\t\tbh[i][j][1]=++tot;\n\t\t}\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(!a[i][j])continue;\n\t\t\tif(f[i][j]){\n\t\t\t\tif(a[i][j]==2)\n\t\t\t\t\tI(bh[i][j][0],ed,1),I(bh[i][j][1],ed,1);\n\t\t\t\telse\n\t\t\t\t\tI(bh[i][j][0],ed,a[i][j]);\n\t\t\t}else{\n\t\t\t\tsum+=a[i][j];\n\t\t\t\tif(a[i][j]==2)\n\t\t\t\t\tI(st,bh[i][j][0],1),I(st,bh[i][j][1],1);\n\t\t\t\telse\n\t\t\t\t\tI(st,bh[i][j][0],a[i][j]);\n\t\t\t\tif(a[i][j]==2){\n\t\t\t\t\tif(a[i+1][j])\n\t\t\t\t\t\tI(bh[i][j][0],bh[i+1][j][0],1);\n\t\t\t\t\tif(a[i-1][j])\n\t\t\t\t\t\tI(bh[i][j][0],bh[i-1][j][0],1);\n\t\t\t\t\tif(a[i][j+1])\n\t\t\t\t\t\tif(a[i][j+1]==2)\n\t\t\t\t\t\t\tI(bh[i][j][1],bh[i][j+1][1],1);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tI(bh[i][j][1],bh[i][j+1][0],1);\n\t\t\t\t\tif(a[i][j-1])\n\t\t\t\t\t\tif(a[i][j-1]==2)\n\t\t\t\t\t\t\tI(bh[i][j][1],bh[i][j-1][1],1);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tI(bh[i][j][1],bh[i][j-1][0],1);\n\t\t\t\t}else{\n\t\t\t\t\tif(a[i+1][j])\n\t\t\t\t\t\tI(bh[i][j][0],bh[i+1][j][0],1);\n\t\t\t\t\tif(a[i-1][j])\n\t\t\t\t\t\tI(bh[i][j][0],bh[i-1][j][0],1);\n\t\t\t\t\tif(a[i][j+1])\n\t\t\t\t\t\tif(a[i][j+1]==2)\n\t\t\t\t\t\t\tI(bh[i][j][0],bh[i][j+1][1],1);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tI(bh[i][j][0],bh[i][j+1][0],1);\n\t\t\t\t\tif(a[i][j-1])\n\t\t\t\t\t\tif(a[i][j-1]==2)\n\t\t\t\t\t\t\tI(bh[i][j][0],bh[i][j-1][1],1);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tI(bh[i][j][0],bh[i][j-1][0],1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\tif(dinic()<sum){\n\t\tputs(\"Impossible!\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n*3;i++)\n\t\tfor(int j=1;j<=m*3;j++)\n\t\t\tout[i][j]='.';\n\tfor(int i=1,x=2;i<=n;i++,x+=3){\n\t\tfor(int j=1,y=2;j<=m;j++,y+=3){\n\t\t\tif(a[i][j])out[x][y]='O';\n\t\t\telse continue;\n\t\t\tif(f[i][j])continue;\n\t\t\tif(a[i][j]==2){\n\t\t\t\tfor(int k=fir[bh[i][j][0]];k;k=e[k].nt){\n\t\t\t\t\tif((e[k].v==bh[i+1][j][1]||e[k].v==bh[i+1][j][0])&&!e[k].w)\n\t\t\t\t\t\tout[x+1][y]='X',out[x+2][y]='X';\n\t\t\t\t\tif((e[k].v==bh[i-1][j][1]||e[k].v==bh[i-1][j][0])&&!e[k].w)\n\t\t\t\t\t\tout[x-1][y]='X',out[x-2][y]='X';\n\t\t\t\t}for(int k=fir[bh[i][j][1]];k;k=e[k].nt){\n\t\t\t\t\tif((e[k].v==bh[i][j+1][1]||e[k].v==bh[i][j+1][0])&&!e[k].w)\n\t\t\t\t\t\tout[x][y+1]='X',out[x][y+2]='X';\n\t\t\t\t\tif((e[k].v==bh[i][j-1][1]||e[k].v==bh[i][j-1][0])&&!e[k].w)\n\t\t\t\t\t\tout[x][y-1]='X',out[x][y-2]='X';\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tfor(int k=fir[bh[i][j][0]];k;k=e[k].nt){\n\t\t\t\t\tif((e[k].v==bh[i+1][j][1]||e[k].v==bh[i+1][j][0])&&!e[k].w)\n\t\t\t\t\t\tout[x+1][y]='X',out[x+2][y]='X';\n\t\t\t\t\tif((e[k].v==bh[i-1][j][1]||e[k].v==bh[i-1][j][0])&&!e[k].w)\n\t\t\t\t\t\tout[x-1][y]='X',out[x-2][y]='X';\n\t\t\t\t\tif((e[k].v==bh[i][j+1][1]||e[k].v==bh[i][j+1][0])&&!e[k].w)\n\t\t\t\t\t\tout[x][y+1]='X',out[x][y+2]='X';\n\t\t\t\t\tif((e[k].v==bh[i][j-1][1]||e[k].v==bh[i][j-1][0])&&!e[k].w)\n\t\t\t\t\t\tout[x][y-1]='X',out[x][y-2]='X';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}for(int i=1;i<=n*3;i++){\n\t\tfor(int j=1;j<=m*3;j++)\n\t\t\tputchar(out[i][j]);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1654059010,
        "uid": 540715,
        "name": "A_I_Skeleton",
        "ccfLevel": 0,
        "title": "P6517"
    }
]