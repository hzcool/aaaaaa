[
    {
        "content": "[$\\text{\u66f4\u4f73\u7684\u9605\u8bfb\u4f53\u9a8c}$](https://www.cnblogs.com/do-while-true/p/13566274.html)\n\n#### 2020-11-12 update\uff1a\u4fee\u4e86\u4e00\u64cd\u4f5c\u7684\u9505\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5076)\n\nQ: \u5b66\u4e60\u4e8c\u53c9\u641c\u7d22\u6811\u6709\u4ec0\u4e48\u7528\uff1f\n\nA: \u6211\u4eec\u5e73\u5e38\u6240\u8bf4\u7684\"\u5e73\u8861\u6811\"\uff08\u4f38\u5c55\u6811Splay\uff0c\u66ff\u7f6a\u7f8a\u6811\u7b49\uff09\u5b9e\u9645\u4e0a\u90fd\u5c5e\u4e8e\"\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\"\uff0c\u4e5f\u5c31\u662f\u65e2\u6ee1\u8db3\"\u5e73\u8861\u6811\"\u53c8\u6ee1\u8db3\"\u4e8c\u53c9\u641c\u7d22\u6811\"\u3002\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6548\u7387\u6bd4\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6548\u7387\u4f4e\u5f88\u591a\uff0c\u4f46\u662f\u5728\u5b66\u4e60\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\u4e4b\u524d\u4e5f\u8981\u7406\u89e3\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5b9e\u73b0\u539f\u7406\uff0c\u6b64\u6587\u5c31\u662f\u6765\u5e2e\u52a9\u7406\u89e3\u7684\u3002\n\nQ: \u9700\u8981\u80cc\u8fc7\u4ee3\u7801\u5417\uff1f\n\nA: \u4e0d\u9700\u8981\uff0c\u76f8\u6bd4\u80cc\u8fc7\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u4e0d\u5982\u591a\u5b66\u4e00\u4e24\u4e2a\u5e73\u8861\u6811\u3002\n\n---\n\n\u66b4\u529bBST\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O(n^2)}$\u3002\n\nBST\u5c31\u662f\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u8fd9\u91cc\u8bb2\u7684\u662f\u6700\u666e\u901a\u7684BST\u3002\n\n------------\n\nBST\uff08Binary Search Tree\uff09\uff0c\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u53c8\u53eb\u4e8c\u53c9\u6392\u5e8f\u6811\n\n\u662f\u4e00\u68f5\u7a7a\u6811\u6216\u5177\u6709\u4ee5\u4e0b\u51e0\u79cd\u6027\u8d28\u7684\u6811:\n\n1. \u82e5\u5de6\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219\u5de6\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u5c0f\u4e8e\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\n\n1. \u82e5\u53f3\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219\u53f3\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u5927\u4e8e\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\n\n1. \u5de6\u3001\u53f3\u5b50\u6811\u4e5f\u5206\u522b\u4e3a\u4e8c\u53c9\u6392\u5e8f\u6811\n\n1. \u6ca1\u6709\u6743\u503c\u76f8\u7b49\u7684\u7ed3\u70b9\u3002\n\n\u770b\u5230\u7b2c4\u6761\uff0c\u6211\u4eec\u4f1a\u6709\u4e00\u4e2a\u7591\u95ee\uff0c\u5728\u6570\u636e\u4e2d\u9047\u5230\u591a\u4e2a\u76f8\u7b49\u7684\u6570\u8be5\u600e\u4e48\u529e\u5462\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u591a\u52a0\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u5c31\u662f\u5f53\u524d\u8fd9\u4e2a\u503c\u51fa\u73b0\u4e86\u51e0\u904d\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u4fe1\u606f:\n\n1. \u5f53\u524d\u8282\u70b9\u7684\u6743\u503c\uff0c\u4e5f\u5c31\u662f\u5e8f\u5217\u91cc\u7684\u6570\n\n1. \u5de6\u5b69\u5b50\u7684\u4e0b\u6807\u548c\u53f3\u5b69\u5b50\u7684\u4e0b\u6807\uff0c\u5982\u679c\u6ca1\u6709\u5219\u4e3a0\n\n1. \u8ba1\u6570\u5668\uff0c\u4ee3\u8868\u5f53\u524d\u7684\u503c\u51fa\u73b0\u4e86\u51e0\u904d\n\n1. \u5b50\u6811\u5927\u5c0f\u548c\u81ea\u5df1\u7684\u5927\u5c0f\u7684\u548c\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u67094.\u6211\u4eec\u653e\u5230\u540e\u9762\u8bb2\u3002\n\n\u8282\u70b9\u662f\u8fd9\u6837\u7684:\n\n```cpp\nstruct node{\n\tint val,ls,rs,cnt,siz;\n}tree[500010];\n```\n\n\u5176\u4e2d $val$ \u662f\u6743\u503c\uff0c$ls$ / $rs$ \u662f\u5de6/\u53f3 \u5b69\u5b50\u7684\u4e0b\u6807\uff0c$cnt$ \u662f\u5f53\u524d\u7684\u6743\u503c\u51fa\u73b0\u4e86\u51e0\u6b21\uff0c$siz$ \u662f\u5b50\u6811\u5927\u5c0f\u548c\u81ea\u5df1\u7684\u5927\u5c0f\u7684\u548c\u3002\n\n\u4ee5\u4e0b\u5747\u4ee5\u9012\u5f52\u65b9\u5f0f\u5448\u73b0\u3002\n\n------------\n\n### \u63d2\u5165: \n\n$x$ \u662f\u5f53\u524d\u8282\u70b9\u7684\u4e0b\u6807\uff0c$v$ \u662f\u8981\u63d2\u5165\u7684\u503c\u3002\u8981\u5728\u6811\u4e0a\u63d2\u5165\u4e00\u4e2a $v$ \u7684\u503c\uff0c\u5c31\u8981\u627e\u5230\u4e00\u4e2a\u5408\u9002 $v$ \u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u672c\u8eab\u6811\u7684\u8282\u70b9\u5185\u6709\u4ee3\u8868 $v$ \u7684\u503c\u7684\u8282\u70b9\uff0c\u5c31\u628a\u8be5\u8282\u70b9\u7684\u8ba1\u6570\u5668\u52a0 $1$ \uff0c\u5426\u5219\u4e00\u76f4\u5411\u4e0b\u5bfb\u627e\uff0c\u76f4\u5230\u627e\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u8fde\u51fa\u4e00\u4e2a\u513f\u5b50\uff0c\u4ee3\u8868 $v$ \u7684\u8282\u70b9\u3002\u5177\u4f53\u5411\u4e0b\u5bfb\u627e\u8be5\u8d70\u5de6\u513f\u5b50\u8fd8\u662f\u53f3\u513f\u5b50\u662f\u6839\u636e\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6027\u8d28\u6765\u7684\u3002\n\n```cpp\nvoid add(int x,int v)\n{\n\ttree[x].siz++;\n\t//\u5982\u679c\u67e5\u5230\u8fd9\u4e2a\u8282\u70b9\uff0c\u8bf4\u660e\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u91cc\u9762\u80af\u5b9a\u662f\u6709v\u7684\uff0c\u6240\u4ee5siz++\n\tif(tree[x].val==v){\n\t\t//\u5982\u679c\u6070\u597d\u6709\u91cd\u590d\u7684\u6570\uff0c\u5c31\u628acnt++\uff0c\u9000\u51fa\u5373\u53ef\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6ee1\u8db3\u7b2c\u56db\u6761\u6027\u8d28\n\t\ttree[x].cnt++;\n\t\treturn ;\n\t}\n\tif(tree[x].val>v){//\u5982\u679cv<tree[x].val\uff0c\u8bf4\u660ev\u5b9e\u5728x\u7684\u5de6\u5b50\u6811\u91cc\n\t\tif(tree[x].ls!=0)\n\t\t  add(tree[x].ls,v);//\u5982\u679cx\u6709\u5de6\u5b50\u6811\uff0c\u5c31\u53bbx\u7684\u5de6\u5b50\u6811\n\t\telse{//\u5982\u679c\u4e0d\u662f\uff0cv\u5c31\u662fx\u7684\u5de6\u5b50\u6811\u7684\u6743\u503c\n\t\t\tcont++;//cont\u662f\u76ee\u524dBST\u4e00\u5171\u6709\u51e0\u4e2a\u8282\u70b9\n\t\t\ttree[cont].val=v;\n\t\t\ttree[cont].siz=tree[cont].cnt=1;\n\t\t\ttree[x].ls=cont;\n\t\t}\n\t}\n\telse{//\u53f3\u5b50\u6811\u540c\u7406\n\t\tif(tree[x].rs!=0)\n\t\t  add(tree[x].rs,v);\n\t\telse{\n\t\t\tcont++;\n\t\t\ttree[cont].val=v;\n\t\t\ttree[cont].siz=tree[cont].cnt=1;\n\t\t\ttree[x].rs=cont;\n\t\t}\n\t}\n}\n```\n\n------------\n\n### \u627e\u524d\u9a71:\n\n$x$ \u662f\u5f53\u524d\u7684\u8282\u70b9\u7684\u4e0b\u6807\uff0c$val$ \u662f\u8981\u627e\u524d\u9a71\u7684\u503c\uff0c$ans$ \u662f\u76ee\u524d\u627e\u5230\u7684\u6bd4 $val$ \u5c0f\u7684\u6570\u7684\u6700\u5927\u503c\u3002\n\n\u627e\u524d\u9a71\u7684\u65b9\u6cd5\u4e5f\u662f\u4e0d\u65ad\u7684\u5728\u6811\u4e0a\u5411\u4e0b\u722c\u627e\u5177\u4f53\u8282\u70b9\uff0c\u5177\u4f53\u722c\u7684\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u6ce8\u91ca\u90e8\u5206\u3002\n\n```cpp\nint queryfr(int x, int val, int ans) {\n\tif (tree[x].val>=val)\n\t{//\u5982\u679c\u5f53\u524d\u503c\u5927\u4e8eval\uff0c\u5c31\u8bf4\u660e\u67e5\u7684\u6570\u5927\u4e86\uff0c\u6240\u4ee5\u8981\u5f80\u5de6\u5b50\u6811\u627e\n\t\tif (tree[x].ls==0)//\u5982\u679c\u6ca1\u6709\u5de6\u5b50\u6811\u5c31\u76f4\u63a5\u8fd4\u56de\u627e\u5230\u7684ans\n\t\t\treturn ans;\n\t\telse//\u5982\u679c\u4e0d\u662f\u7684\u8bdd\uff0c\u53bb\u67e5\u5de6\u5b50\u6811\n\t\t\treturn queryfr(tree[x].ls,val,ans);\n\t}\n\telse\n\t{//\u5982\u679c\u5f53\u524d\u503c\u5c0f\u4e8eval\uff0c\u5c31\u8bf4\u660e\u6211\u4eec\u627e\u6bd4val\u5c0f\u7684\u4e86\n\t\tif (tree[x].rs==0)//\u5982\u679c\u6ca1\u6709\u53f3\u5b69\u5b50\uff0c\u5c31\u8fd4\u56detree[x].val\uff0c\u56e0\u4e3a\u8d70\u5230\u8fd9\u4e00\u6b65\u65f6\uff0c\u6211\u4eec\u540e\u627e\u5230\u7684\u4e00\u5b9a\u6bd4\u5148\u627e\u5230\u7684\u5927(\u53c2\u8003\u7b2c\u4e8c\u6761\u6027\u8d28)\n\t\t\treturn (tree[x].val<val) ? tree[x].val : ans\n\t\t//\u5982\u679c\u6709\u53f3\u5b69\u5b50\uff0c\uff0c\u6211\u4eec\u8fd8\u8981\u627e\u8fd9\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\uff0c\u56e0\u4e3a\u4e07\u4e00\u53f3\u5b50\u6811\u6709\u6bd4\u5f53\u524d\u8282\u70b9\u8fd8\u5927\u5e76\u4e14\u5c0f\u4e8e\u8981\u627e\u7684val\u7684\u8bdd\uff0cans\u9700\u8981\u66f4\u65b0\n\t\tif (tree[x].cnt!=0)//\u5982\u679c\u5f53\u524d\u8282\u6570\u7684\u4e2a\u6570\u4e0d\u4e3a0\uff0cans\u5c31\u53ef\u4ee5\u66f4\u65b0\u4e3atree[x].val\n\t\t\treturn queryfr(tree[x].rs,val,tree[x].val);\n\t\telse//\u53cd\u4e4bans\u4e0d\u9700\u8981\u66f4\u65b0\n\t\t\treturn queryfr(tree[x].rs,val,ans);\n\t}\n}\n```\n\n------------\n\n### \u627e\u540e\u7ee7\n\n\u4e0e\u627e\u524d\u9a71\u540c\u7406\uff0c\u53ea\u4e0d\u8fc7\u53cd\u8fc7\u6765\u4e86\uff0c\u5728\u8fd9\u91cc\u6211\u5c31\u4e0d\u591a\u8d58\u8ff0\u4e86\u3002\n\n```cpp\nint queryne(int x, int val, int ans) {\n\tif (tree[x].val<=val)\n\t{\n\t\tif (tree[x].rs==0)\n\t\t\treturn ans;\n\t\telse\n\t\t\treturn queryne(tree[x].rs,val,ans);\n\t}\n\telse\n\t{\n\t\tif (tree[x].ls==0)\n\t\t\treturn (tree[x].val>val)? tree[x].val : ans;\n\t\tif (tree[x].cnt!=0)\n\t\t\treturn queryne(tree[x].ls,val,tree[x].val);\n\t\telse\n\t\t\treturn queryne(tree[x].ls,val,ans);\n\t}\n}\n```\n\n------------\n\n### \u6309\u503c\u627e\u6392\u540d:\n\n\u8fd9\u91cc\u6211\u4eec\u5c31\u8981\u7528\u5230 $siz$ \u4e86\uff0c\u6392\u540d\u5c31\u662f\u6bd4\u8fd9\u4e2a\u503c\u8981\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u518d $+1$\uff0c\u6240\u4ee5\u6211\u4eec\u6309\u503c\u627e\u6392\u540d\uff0c\u5c31\u53ef\u4ee5\u770b\u505a\u627e\u6bd4\u8fd9\u4e2a\u503c\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff0c\u6700\u540e\u52a0\u4e0a $1$ \u5373\u53ef\u3002\n\n```cpp\nint queryval(int x,int val)\n{\n\tif(x==0) return 0;//\u6ca1\u6709\u6392\u540d \n\tif(val==tree[x].val) return tree[tree[x].ls].siz;\n\t//\u5982\u679c\u5f53\u524d\u8282\u70b9\u503c=val\uff0c\u5219\u6211\u4eec\u52a0\u4e0a\u73b0\u5728\u6bd4val\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u5b83\u5de6\u5b50\u6811\u7684\u5927\u5c0f \n\tif(val<tree[x].val) return queryval(tree[x].ls,val);\n\t//\u5982\u679c\u5f53\u524d\u8282\u70b9\u503c\u6bd4val\u5927\u4e86\uff0c\u6211\u4eec\u5c31\u53bb\u5b83\u7684\u5de6\u5b50\u6811\u627eval\uff0c\u56e0\u4e3a\u5de6\u5b50\u6811\u7684\u8282\u70b9\u503c\u4e00\u5b9a\u662f\u5c0f\u7684 \n\treturn queryval(tree[x].rs,val)+tree[tree[x].ls].siz+tree[x].cnt;\n\t//\u5982\u679c\u5f53\u524d\u8282\u70b9\u503c\u6bd4val\u5c0f\u4e86\uff0c\u6211\u4eec\u5c31\u53bb\u5b83\u7684\u53f3\u5b50\u6811\u627eval\uff0c\u540c\u65f6\u52a0\u4e0a\u5de6\u5b50\u6811\u7684\u5927\u5c0f\u548c\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u51fa\u73b0\u6b21\u6570 \n\t//\u56e0\u4e3a\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u5c0f\u4e8eval\uff0c\u8fd9\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\u7684\u5404\u4e2a\u8282\u70b9\u7684\u503c\u4e00\u5b9a\u4e5f\u5c0f\u4e8eval \n}\n//\u6ce8:\u8fd9\u91cc\u6700\u7ec8\u8fd4\u56de\u7684\u662f\u6392\u540d-1\uff0c\u4e5f\u5c31\u662f\u6bd4val\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5728\u8f93\u51fa\u7684\u65f6\u5019\u8bb0\u5f97+1\n```\n\n------------\n\n### \u6309\u6392\u540d\u627e\u503c:\n\n\u56e0\u4e3a\u6027\u8d281\u548c\u6027\u8d282\uff0c\u6211\u4eec\u53d1\u73b0\u6392\u540d\u4e3a $n$ \u7684\u6570\u5728BST\u4e0a\u662f\u7b2c $n$ \u9760\u5de6\u7684\u6570\u3002\u6216\u8005\u8bf4\u6392\u540d\u4e3a $n$ \u7684\u6570\u7684\u8282\u70b9\u5728BST\u4e2d\uff0c\u5b83\u7684\u5de6\u5b50\u6811\u7684 $siz$ \u4e0e\u5b83\u7684\u5404\u4e2a\u7956\u5148\u7684\u5de6\u5b50\u6811\u7684 $siz$ \u76f8\u52a0\u6070\u597d $=n$ (\u8fd9\u91cc\u76f8\u52a0\u662f\u8981\u51cf\u53bb\u91cd\u590d\u90e8\u5206)\u3002\n\n\u6240\u4ee5\u95ee\u9898\u53c8\u8f6c\u5316\u6210\u4e0a\u4e00\u6bb5 **\u6216\u8005\u8bf4** \u7684\u540e\u9762\u7684\u90e8\u5206\n\n$rk$ \u662f\u8981\u627e\u7684\u6392\u540d\n\n```cpp\nint queryrk(int x,int rk)\n{\n\tif(x==0) return INF; \n\tif(tree[tree[x].ls].siz>=rk)//\u5982\u679c\u5de6\u5b50\u6811\u5927\u5c0f>=rk\u4e86\uff0c\u5c31\u8bf4\u660e\u7b54\u6848\u5728\u5de6\u5b50\u6811\u91cc \n\t\treturn queryrk(tree[x].ls,rk);//\u67e5\u5de6\u5b50\u6811 \n\tif(tree[tree[x].ls].siz+tree[x].cnt>=rk)//\u5982\u679c\u5de6\u5b50\u6811\u5927\u5c0f\u52a0\u4e0a\u5f53\u524d\u7684\u6570\u7684\u591a\u5c11\u6070\u597d>=k\uff0c\u8bf4\u660e\u6211\u4eec\u627e\u5230\u7b54\u6848\u4e86 \n\t\treturn tree[x].val;//\u76f4\u63a5\u8fd4\u56de\u6743\u503c \n\treturn queryrk(tree[x].rs,rk-tree[tree[x].ls].siz-tree[x].cnt);\n\t//\u5426\u5219\u5c31\u67e5\u53f3\u5b50\u6811\uff0c\u540c\u65f6\u51cf\u53bb\u5f53\u524d\u8282\u70b9\u7684\u6b21\u6570\u4e0e\u5de6\u5b50\u6811\u7684\u5927\u5c0f \n}\n```\n\n------------\n\n### \u5220\u9664:\n\n\u5177\u4f53\u5c31\u662f\u5229\u7528\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6027\u8d28\u5728\u6811\u4e0a\u5411\u4e0b\u722c\u627e\u5230\u5177\u4f53\u8282\u70b9\uff0c\u628a\u8ba1\u6570\u5668-1\u3002\u4e0e\u4e0a\u6587\u540c\u7406\u5c31\u4e0d\u7c98\u8d34\u4ee3\u7801\u4e86\n\n---\n\nBST\u7684\u5f0a\u7aef: \u65f6\u95f4\u590d\u6742\u5ea6\u6700\u574f\u4e3a $\\mathcal{O(n^2)}$ \u3002\n\n\u770b\u5b8c\u4e0a\u6587\uff0c\u4f60\u4e00\u5b9a\u7406\u89e3\u4e86\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5177\u4f53\u5b9e\u73b0\u539f\u7406\u548c\u65b9\u6cd5\uff0c\u4f46\u662f\u5982\u679c\u6784\u5efa\u51fa\u7684\u4e00\u68f5BST\u662f\u4e2a\u94fe\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u9000\u5316\u5230 $\\mathcal{O(n^2)}$ \u7ea7\u522b\uff0c\u56e0\u4e3a\u5982\u679c\u6bcf\u6b21\u90fd\u67e5\u627e\u94fe\u6700\u4f4e\u7aef\u7684\u53f6\u5b50\u8282\u70b9\u7684\u590d\u6742\u5ea6\u662f $\\mathcal{O(n)}$ \u7684\u3002\u800c\u53bb\u4fdd\u6301\u8fd9\u4e2a\u6811\u662f\u4e2a\u5e73\u8861\u6811\uff0c\u5c31\u53ef\u4ee5\u9632\u6b62\u51fa\u73b0\u8fd9\u4e2a\u9519\u8bef\u7684\u590d\u6742\u5ea6\u3002\u8fd9\u4e2a\u65f6\u5019\u5c31\u6709\u4e86\u5e73\u5e38\u6240\u8bf4\u7684[\u5e73\u8861\u6811](https://www.luogu.com.cn/problem/P3369)\u3002\n\n---\n\n\u5b8c\u6574\u7248\u4ee3\u7801\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\n\n### $\\mathcal{Code}:$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define re register\nusing namespace std;\nconst int INF=0x7fffffff;\nint cont;\nstruct node{\n    int val,siz,cnt,ls,rs;\n}tree[1000010];\nint n,opt,xx;\ninline void add(int x,int v)\n{\n    tree[x].siz++;\n    if(tree[x].val==v){\n        tree[x].cnt++;\n        return ;\n    }\n    if(tree[x].val>v){\n        if(tree[x].ls!=0)\n          add(tree[x].ls,v);\n        else{\n            cont++;\n            tree[cont].val=v;\n            tree[cont].siz=tree[cont].cnt=1;\n            tree[x].ls=cont;\n        }\n    }\n    else{\n        if(tree[x].rs!=0)\n          add(tree[x].rs,v);\n        else{\n            cont++;\n            tree[cont].val=v;\n            tree[cont].siz=tree[cont].cnt=1;\n            tree[x].rs=cont;\n        }\n    }\n}\nint queryfr(int x, int val, int ans) {\n    if (tree[x].val>=val)\n    {\n        if (tree[x].ls==0)\n            return ans;\n        else\n            return queryfr(tree[x].ls,val,ans);\n    }\n    else\n    {\n        if (tree[x].rs==0)\n            return tree[x].val;\n        return queryfr(tree[x].rs,val,tree[x].val);\n    }\n}\nint queryne(int x, int val, int ans) {\n    if (tree[x].val<=val)\n    {\n        if (tree[x].rs==0)\n            return ans;\n        else\n            return queryne(tree[x].rs,val,ans);\n    }\n    else\n    {\n        if (tree[x].ls==0)\n            return tree[x].val;\n        return queryne(tree[x].ls,val,tree[x].val);\n    }\n}\nint queryrk(int x,int rk)\n{\n    if(x==0) return INF;\n    if(tree[tree[x].ls].siz>=rk)\n        return queryrk(tree[x].ls,rk);\n    if(tree[tree[x].ls].siz+tree[x].cnt>=rk)\n        return tree[x].val;\n    return queryrk(tree[x].rs,rk-tree[tree[x].ls].siz-tree[x].cnt);\n}\nint queryval(int x,int val)\n{\n    if(x==0) return 0;\n    if(val==tree[x].val) return tree[tree[x].ls].siz;\n    if(val<tree[x].val) return queryval(tree[x].ls,val);\n    return queryval(tree[x].rs,val)+tree[tree[x].ls].siz+tree[x].cnt;\n}\ninline int read()\n{\n    re int r=0;\n    re char ch=getchar();\n    while(ch<'0'||ch>'9')\n        ch=getchar();\n    while(ch>='0'&&ch<='9'){\n        r=(r<<3)+(r<<1)+(ch^48);\n        ch=getchar();\n    }\n    return r;\n}\nsigned main()\n{\n    n=read();\n    while(n--){\n        opt=read();xx=read();\n        if(opt==1) printf(\"%d\\n\",queryval(1,xx)+1);\n        else if(opt==2) printf(\"%d\\n\",queryrk(1,xx));\n        else if(opt==3) printf(\"%d\\n\",queryfr(1,xx,-INF));\n        else if(opt==4) printf(\"%d\\n\",queryne(1,xx,INF));\n        else{\n            if(cont==0){\n                cont++;\n                tree[cont].cnt=tree[cont].siz=1;\n                tree[cont].val=xx;\n            }\n            else add(1,xx);\n        }\n    }\n    return 0;\n}\n```\n\n\n---\n\n\u76f8\u4fe1\u4f60\u5df2\u7ecf\u638c\u63e1\u4e86\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u57fa\u672c\u5b9e\u73b0\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u6765\u5c1d\u8bd5\u5faa\u73af\u5b9e\u73b0\u7684BST\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#define pb push_back\nconst int N = 10010;\nconst int INF = 0x7fffffff;\ninline int read() {\n\tint r = 0; bool w = 0; char ch = getchar();\n\twhile(ch < '0' || ch > '9') w = ch == '-' ? 1 : w, ch = getchar();\n\twhile(ch >= '0' && ch <= '9') r = (r << 3) + (r << 1) + (ch ^ 48), ch = getchar();\n\treturn w ? ~r + 1 : r;\n}\n#define ls tree[x].son[0]\n#define rs tree[x].son[1]\nstruct Node {\n\tint val, siz, cnt, son[2];\n}tree[N];\nint n, root, tot;\ninline void add(int v) {\n\tif(!tot) {\n\t\troot = ++tot;\n\t\ttree[tot].cnt = tree[tot].siz = 1;\n\t\ttree[tot].son[0] = tree[tot].son[1] = 0;\n\t\ttree[tot].val = v;\n\t\treturn ;\n\t}\n\tint x = root, last = 0;\n\tdo {\n\t\t++tree[x].siz;\n\t\tif(tree[x].val == v) {\n\t\t\t++tree[x].cnt;\n\t\t\tbreak;\n\t\t}\n\t\tlast = x;\n\t\tx = tree[last].son[v > tree[last].val];\n\t\tif(!x) {\n\t\t\ttree[last].son[v > tree[last].val] = ++tot;\n\t\t\ttree[tot].son[0] = tree[tot].son[1] = 0;\n\t\t\ttree[tot].val = v;\n\t\t\ttree[tot].cnt = tree[tot].siz = 1;\n\t\t\tbreak;\n\t\t}\n\t} while(true);//Code by do_while_true qwq\n}\nint queryfr(int val) {\n\tint x = root, ans = -INF;\n\tdo {\n\t\tif(x == 0) return ans;\n\t\tif(tree[x].val >= val) {\n\t\t\tif(ls == 0) return ans;\n\t\t\tx = ls;\n\t\t}\n\t\telse {\n\t\t\tif(rs == 0) return tree[x].val;\n\t\t\tans = tree[x].val;\n\t\t\tx = rs;\n\t\t}\n\t} while(true);\n}\nint queryne(int v) {\n\tint x = root, ans = INF;\n\tdo {\n\t\tif(x == 0) return ans;\n\t\tif(tree[x].val <= v) {\n\t\t\tif(rs == 0) return ans;\n\t\t\tx = rs;\n\t\t}\n\t\telse {\n\t\t\tif(ls == 0) return tree[x].val;\n\t\t\tans = tree[x].val;\n\t\t\tx = ls;\n\t\t}\n\t} while(true);\n}\nint queryrk(int rk) {\n\tint x = root;\n\tdo {\n\t\tif(x == 0) return INF;\n\t\tif(tree[ls].siz >= rk) x = ls;\n\t\telse if(tree[ls].siz + tree[x].cnt >= rk) return tree[x].val;\n\t\telse rk -= tree[ls].siz + tree[x].cnt, x = rs;\n\t} while(true);\n}\nint queryval(int v) {\n\tint x = root, ans = 0;\n\tdo {\n\t\tif(x == 0) return ans;\n\t\tif(tree[x].val == v) return ans + tree[ls].siz;\n\t\telse if(tree[x].val > v) x = ls;\n\t\telse ans += tree[ls].siz + tree[x].cnt, x = rs;\n\t} while(true);\n}\nint main() {\n\tn = read();\n\twhile(n--) {\n\t\tint opt = read(), x = read();\n\t\tif(opt == 1) printf(\"%d\\n\", queryval(x) + 1);\n\t\tif(opt == 2) printf(\"%d\\n\", queryrk(x));\n\t\tif(opt == 3) printf(\"%d\\n\", queryfr(x));\n\t\tif(opt == 4) printf(\"%d\\n\", queryne(x));\n\t\tif(opt == 5) add(x);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1582949726,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u6d45\u6790BST"
    },
    {
        "content": "## \u4f7f\u7528\u5bb9\u5668\uff1astd::multiset\n\n\n\n------------\n\n### mulitset\u662f\u4ec0\u4e48\uff1f\n\nmultiset\u662fC++ STL\u91cc\u7684\u4e00\u79cd\u5bb9\u5668\u3002\n\n\u5934\u6587\u4ef6  `#include<set>`\n\n\n------------\n\n### multiset\u6709\u4ec0\u4e48\u6027\u8d28\uff1f\n\n* \u91cc\u9762\u7684\u5143\u7d20\u6309\u987a\u5e8f\u6392\u5217\uff0c\u9ed8\u8ba4\u5347\u5e8f\u3002\n* \u4e0d\u53bb\u91cd\uff08\u8fd9\u70b9\u548cset\u662f\u4e0d\u540c\u7684\uff09\u3002\n\n----------\n\n### \u5e38\u7528\u65b9\u6cd5\n\n```cpp\nmultiset<int>q;\n//\u5b9a\u4e49\u4e00\u4e2amultiset\uff0c\u5c16\u62ec\u53f7\u91cc\u5199\u7c7b\u578b\n//\u5982\u679c\u662f\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u9700\u8981\u91cd\u8f7d\u5c0f\u4e8e\u53f7 \n\nq.insert(x);\n//\u63d2\u5165\u4e00\u4e2a\u6570 x \n\nq.clear();\n//\u6e05\u7a7a \n\nq.erase(x);\n//\u5220\u9664\u5bb9\u5668\u4e2d\u7684\u6240\u6709\u503c\u4e3a x \u7684\u6570 \n\nq.erase(it);\n//\u5220\u9664\u5bb9\u5668\u4e2d\u8fed\u4ee3\u5668it\u6307\u5411\u7684\u5143\u7d20 \n\nq.empty();\n//\u8fd4\u56debool\u503c\uff0c\u5982\u679c\u5bb9\u5668\u4e3a\u7a7a\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse \n\nq.size()\n//\u8fd4\u56de\u5143\u7d20\u4e2a\u6570\n\nq.begin();\n//\u8fd4\u56de\u9996\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668 \n\nq.end();\n//\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668 \n\nq.count(x);\n//\u8fd4\u56de\u5bb9\u5668\u4e2d x \u7684\u4e2a\u6570 \n\nq.find(x);\n//\u8fd4\u56de\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2ax\u7684\u4f4d\u7f6e\uff08\u8fed\u4ee3\u5668\uff09\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u8fd4\u56deq.end() \n\nq.lower_bound(x);\n//\u8fd4\u56de\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ex\u7684\u6570\u7684\u8fed\u4ee3\u5668 \n\nq.upper_bound(x);\n//\u8fd4\u56de\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8ex\u7684\u6570\u7684\u8fed\u4ee3\u5668 \n\n```\n\u4ee5\u4e0a\u662f\u5e38\u7528\u7684\u65b9\u6cd5\u3002\n\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0clower_bound\u65b9\u6cd5\u4e0eupper_bound\u65b9\u6cd5\uff0c\u90fd\u662f\u5185\u7f6e\u4e8c\u5206\u67e5\u627e\uff0c\u901f\u5ea6\u8981\u6bd4\u904d\u5386\u66b4\u529b\u67e5\u627e\u5feb\u5f88\u591a\u3002\n\n--------------\n\n### \u5206\u6790\u9898\u76ee\n\n#### 1. \u67e5\u8be2 x \u6570\u7684\u6392\u540d\n\n\u6392\u540d\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u6392\u5e8f\u4e4b\u540e\u7684x\u7684\u4e0b\u6807\u3002\n\n\u6211\u4eec\u53ea\u8981\u7528lower_bound\u65b9\u6cd5\uff0c\u627e\u5230\u7b2c\u4e00\u4e2ax\u7684\u4f4d\u7f6e\u3002\n\n\u7136\u540e\u4ecebegin\u5f00\u59cb\u5f80\u540e\u904d\u5386\u5bb9\u5668\uff0c\u53ea\u8981\u8fbe\u5230\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u5c31\u8f93\u51fa\u5f53\u524d\u4e0b\u6807\u5373\u53ef\u3002\n\n#### 2.\u67e5\u8be2\u6392\u540d\u4e3a x \u7684\u6570\n\n\u904d\u5386\u5bb9\u5668\uff0c\u53ea\u8981\u5f53\u524d\u6392\u540d\u5230\u8fbex\uff0c\u5c31\u8f93\u51fa\u5f53\u524d\u503c\u3002\n\n\uff08\u56e0\u4e3amultiset\u5bb9\u5668\u65e0\u6cd5\u8fdb\u884c\u968f\u673a\u8bbf\u95ee\uff09\n\n#### 3.\u6c42 x \u7684\u524d\u9a71\uff08\u524d\u9a71\u5b9a\u4e49\u4e3a\u5c0f\u4e8e x\uff0c\u4e14\u6700\u5927\u7684\u6570\uff09\n\n\u524d\u9a71\uff0c\u4e5f\u5c31\u662fx\u7684\u524d\u4e00\u4e2a\u3002\n\n\u6211\u4eec\u53ea\u8981\u7528lower_bound\u65b9\u6cd5\u627e\u5230\u7b2c\u4e00\u4e2ax\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u8f93\u51fa\u4e0a\u4e00\u4e2a\u5c31OK\u4e86\u3002\n\n#### 4.\u6c42 x \u7684\u540e\u7ee7\uff08\u540e\u7ee7\u5b9a\u4e49\u4e3a\u5927\u4e8e x\uff0c\u4e14\u6700\u5c0f\u7684\u6570\uff09\u3002\n\n\u540e\u7ee7\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\u5927\u4e8ex\u7684\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528upper_bound\u65b9\u6cd5\uff0c\u76f4\u63a5\u627e\u5230\u8fd9\u4e2a\u503c\u3002\n\n#### 5.\u63d2\u5165\u4e00\u4e2a\u6570 x\n\n\u76f4\u63a5\u7528insert\u65b9\u6cd5\u63d2\u5165\u5373\u53ef\u3002\n\n--------------\n\n### \u5751\u70b9\n\n\u9898\u76ee\u63cf\u8ff0\u5176\u5b9e\u662f\u4e0d\u5168\u7684\uff0c\u8fd9\u4e00\u70b9\u6211\u4e5f\u662f\u770b\u8ba8\u8bba\u7248\u624d\u77e5\u9053\u7684\u3002\n\n* \u5982\u679cx\u6ca1\u6709\u524d\u9a71\u8981\u8f93\u51fa`-0x7fffffff`\n\n* \u5982\u679cx\u6ca1\u6709\u540e\u7ee7\u8981\u8f93\u51fa `0x7fffffff`\n\n\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u628a\u8fd9\u4e24\u4e2a\u503c\u653e\u5230\u5bb9\u5668\u91cc\uff0c\u90a3\u4e48\uff0c\u6ca1\u6709\u524d\u9a71\u7684\u6570\u7684\u524d\u9a71\u4e00\u5b9a\u662f`-0x7fffffff`\uff1b\u6ca1\u6709\u540e\u7ee7\u7684\u6570\u7684\u540e\u7ee7\u4e00\u5b9a\u662f`0x7fffffff`\u3002\n\n---------------------\n\n### \u4ee3\u7801\n\n\uff08\u8be6\u89c1\u6ce8\u91ca\uff09\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<set>\nusing namespace std;\nmultiset<int>q;\nint n,t,x,order;\nint main()\n{\n    q.insert(-0x7fffffff);\n    q.insert(0x7fffffff);\n    //\u63d0\u524d\u653e\u5165\u8fd9\u4e24\u4e2a\u6570\uff0c\u907f\u514d\u9519\u8bef\n    scanf(\"%d\",&n);\n    while(n--)\n    {\n        scanf(\"%d%d\",&t,&x);\n        if(t==1)\n        {\n            auto it=q.lower_bound(x);\n            //auto\u662f\u81ea\u52a8\u5224\u65ad\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u6709C++14\u4ee5\u4e0a\u624d\u652f\u6301\n            //\u53ef\u4ee5\u5199\u4f5cmultiset<int>::iterator\uff0c\u56e0\u4e3alower_bound\u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u8fed\u4ee3\u5668\n            // it \u53d6\u5f97 x \u7684\u4f4d\u7f6e\n            \n            order=0;\n            //order\u4e3a\u6392\u540d\n            \n            for(auto i=q.begin();i!=it;i++,order++);\n            //\u8fd9\u91cc\u7684auto\u540c\u7406\uff0c\u4e5f\u662f\u8fed\u4ee3\u5668\n            //\u8fd9\u91cc\u5c31\u5904\u7406\u51fa\u4e86x\u7684\u6392\u540d\u2014\u2014order\n            \n            printf(\"%d\\n\",order);\n            //\u8f93\u51faorder\u5373\u4e3a\u7b54\u6848\n        }\n        else if(t==2)\n        {\n            order=-1;\n            //\u521d\u503c\u4e3a-1\u662f\u56e0\u4e3a\u524d\u9762\u6709\u4e00\u4e2a-0x7fffffff\uff0c\u6240\u4ee5order\u8981\u591a\u8dd1\u4e00\u6b65\n\n            for(int i:q)\n                if(++order==x)\n                //\u7f29\u5199\uff0corder\u5148\u81ea\u589e\u4e00\uff0c\u518d\u5224\u65ad\u662f\u5426\u4e0ex\u76f8\u7b49\n                //\u5982\u679c\u662f(order++==x)\uff0c\u90a3\u5c31\u662f\u5148\u5224\u65ad\u518d\u81ea\u589e\uff0c\u8fd9\u91cc\u8981\u5c24\u5176\u6ce8\u610f\n                    printf(\"%d\\n\",i);\n                //i\u5c31\u662f\u5bb9\u5668\u91cc\u7684\u503c\uff0c\u8f93\u51fai\n\n            //\u6ce8\u610f\u8fd9\u91cc\u7684for(:)\u5faa\u73af\uff0c\u662f\u53ea\u6709C++11\u4ee5\u4e0a\u624d\u652f\u6301\u7684\n            //\u548cauto\u4e00\u6837\uff0c\u90fd\u662fnoip\u4e0d\u80fd\u7528\u7684\n            //\u8fd9\u79cd\u5faa\u73af\uff0ci\u5c31\u662f\u5bb9\u5668\u91cc\u7684\u503c\u800c\u4e0d\u662f\u4e0b\u6807\n            //\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u5668\u5faa\u73af\uff0c\u4e0a\u9762\u7684\u5faa\u73af\u7b49\u4ef7\u4e8e\n            /*\n                for(multiset<int>::iterator it=q.begin();it!=q.end();it++)\n                {\n                    order++;\n                    if(order==x)\n                        printf(\"%d\\n\",*it);\n                }\n            */\n            //\u8fd9\u79cd\u5faa\u73af\u662fnoip\u53ef\u4ee5\u4f7f\u7528\u7684\n        }\n        else if(t==3)\n        {\n            auto it=q.lower_bound(x);\n            //\u53d6\u5f97\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ex\u7684\u503c\n            //\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2ax\u7684\u4f4d\u7f6e\n            //\u7531\u4e8e\u6211\u4eec\u8981\u53d6\u5f97\u524d\u9a71\uff0c\u6240\u4ee5it\u8981\u81ea\u51cf\u4e00\n            printf(\"%d\\n\",*--it);\n            //\u8fd9\u53e5\u662f\u5148\u81ea\u51cf\uff0c\u518d\u8f93\u51fa\uff0c\u662f\u7f29\u5199\n            //\u7b49\u4ef7\u4e8e\uff1a\n            /*\n                it--;\n                printf(\"%d\\n\",*it);\n            */\n            //\u56e0\u4e3a\u662f\u8fed\u4ee3\u5668\uff08\u6307\u9488\uff09\uff0c\u6240\u4ee5\u8f93\u51fa\u524d\u9762\u52a0 *\n        }\n        else if(t==4)\n        {\n            printf(\"%d\\n\",*q.upper_bound(x));\n            //\u8981\u53d6\u5f97\u540e\u7ee7\uff0c\u5c31\u662f\u7b2c\u4e00\u4e2a\u5927\u4e8ex\u7684\u503c\n            //\u7528upper_bound\u65b9\u6cd5\u53d6\u5f97\u7b2c\u4e00\u4e2a\u5927\u4e8ex\u7684\u8fed\u4ee3\u5668\n            //\u8f93\u51fa\u5373\u53ef\n            //\u56e0\u4e3a\u662f\u8fed\u4ee3\u5668\uff08\u6307\u9488\uff09\uff0c\u6240\u4ee5\u8f93\u51fa\u524d\u9762\u52a0 *\n        }\n        else\n        {\n            q.insert(x);\n            //\u76f4\u63a5\u6dfb\u52a0\u5373\u53ef\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1585805852,
        "uid": 203102,
        "name": "Diamiko",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5076 \u3010\u3010\u6df1\u57fa16.\u4f8b7\u3011\u666e\u901a\u4e8c\u53c9\u6811\uff08\u7b80\u5316\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u5c31\u662f\u628aSplay\u7684\u5220\u9664\u529f\u80fd\u53bb\u4e86\u3002\n\n\u4f46\u662f\u7531\u4e8e\u849f\u84bb\u4e0d\u4f1aSplay\uff0c\u800c\u4e14\u8fd9\u9898\u6570\u636e\u660e\u663e\u5f31\u4e00\u4e9b\uff0c\u5c31\u53ea\u597d\u8003\u8651\u4e00\u4e0b\u5176\u4ed6\u505a\u6cd5\u3002\n\n\n------------\n\u5176\u4ed6\u505a\u6cd5\u600e\u4e48\u505a\u5462\uff1f\n\n\u5f88\u663e\u7136\uff0c\u5982\u679c\u6211\u4eec\u80fd\u4e00\u76f4\u7ef4\u62a4\u4e00\u4e2a**\u6709\u5e8f**\u5e8f\u5217$a$\uff0c\u90a3\u4e48\uff1a\n\n1. \u67e5\u8be2$x$\u7684\u6392\u540d\uff0c\u90a3\u5c31\u4e8c\u5206\u67e5\u627e$x$\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u4e3a$O(logn)$\n\n2. \u67e5\u8be2\u6392\u540d\u4e3a$x$\u7684\u6570\uff0c\u76f4\u63a5\u8f93\u51fa$a_{x}$\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u4e3a$O(1)$\n\n3. \u6c42$x$\u7684\u524d\u8d8b\uff0c\u4e5f\u662f\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e$x$\u7684\u6570\u7684\u4f4d\u7f6e$p$,\u663e\u7136\u524d$p-1$\u4e2a\u6570\u5747\u5c0f\u4e8e$x$,\u90a3$a_{p-1}$\u5c31\u662f$x$\u7684\u524d\u7f00\uff0c\u8f93\u51fa\u5373\u53ef,\u5355\u6b21\u590d\u6742\u5ea6\u4e3a$O(logn)$\n\n4. \u6c42$x$\u7684\u540e\u7ee7\uff0c\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e$x$\u7684\u6570\u5e76\u8f93\u51fa\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\u4e00\u70b9\u5c31\u662f**\u5982\u679c$x$\u6ca1\u6709\u540e\u7ee7\uff0c\u9700\u8981\u8f93\u51fa2147483647**\u3002\n\n------------\n\u90a3\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u7ef4\u62a4\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217$a$\uff0c\u5176\u5b9e\u4e5f\u5f88\u7b80\u5355\uff1a\n\n\u5728\u63d2\u5165$x$\u65f6\uff0c\u9996\u5148**\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e$x$\u7684\u6570\u7684\u4f4d\u7f6e**$p$\uff0c\n\n\u518d\u628a\u533a\u95f4$[p+1,n]$\u7684\u6570\u5168\u90e8**\u540e\u79fb\u4e00\u4f4d**\uff0c\u5c06x\u63d2\u5165\u5230$a_{p}$\u4e0a\u3002\n\n\u8fd9\u6837\u5c31\u7ef4\u62a4\u4e86\u5e8f\u5217\u7684\u6709\u6548\u6027\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u4e3a$O(n+logn)$\u3002\n\n\u81f3\u4e8e\u4e8c\u5206\u67e5\u627e\uff0cSTL\u81ea\u5e26\u7684**lower_bound**\u548c**upper_bound**\u5c31\u80fd\u80dc\u4efb\n\n\uff08\u4e0d\u4f1alower_bound\u548cupper_bound\uff1f[\u6233\u8fd9](https://blog.csdn.net/qq_40632760/article/details/86317548)\uff09\n\n------------\nOK\uff0c\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\u73af\u8282\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n//upper_bound\u548clower_bound\u5305\u542b\u5728algorithm\u5e93\u4e2d\n#define fo(i,x,y) for(register int i=x;i<=y;++i)\n//\u5b8f\u5b9a\u4e49\u7b80\u5316for\u5faa\u73af\n#define go(i,x,y) for(register int i=x;i>=y;--i)\nusing namespace std;\n\ninline int read(){//\u5feb\u8bfb\n\tint x=0,fh=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') fh=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<1)+(x<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*fh;\n}\n\nconst int maxn=1e5+1;\nint a[maxn],n;//a\u662f\u7ef4\u62a4\u7684\u5e8f\u5217\uff0cn\u4e3a\u5e8f\u5217\u957f\u5ea6\n\nint main(){\n\tint q=read();\n\twhile(q--){\n\t\tint opt=read(),x=read();\n\t\tif(opt==1){//\u67e5\u8be2x\u7684\u6392\u540d\n\t\t\tint k=lower_bound(a+1,a+1+n,x)-a;\n            //\u4e8c\u5206\u67e5\u627ex\uff0c\u6ce8\u610f\u8fd4\u56de\u503c\u662f\u6307\u9488\u56e0\u6b64\u8981\u51cf\u53bba\n\t\t\tprintf(\"%d\\n\",k);\n\t\t}\n\t\tif(opt==2){//\u67e5\u8be2\u6392\u540d\u4e3ax\u7684\u6570\n\t\t\tprintf(\"%d\\n\",a[x]);//\u76f4\u63a5\u8f93\u51fa\n\t\t}\n\t\tif(opt==3){//\u67e5\u8be2x\u7684\u524d\u8d8b\n\t\t\tint k=lower_bound(a+1,a+1+n,x)-a;\n\t\t\t//\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ex\u7684\u6570\n\t\t\tprintf(\"%d\\n\",a[k-1]);\n            //\u8f93\u51fa\u524d\u4e00\u4e2a\n\t\t}\n\t\tif(opt==4){//\u67e5\u8be2x\u7684\u540e\u7ee7\n\t\t\tint k=upper_bound(a+1,a+1+n,x)-a;\n            //\u4e8c\u5206\u67e5\u627e\n\t\t\tif(k!=n+1) printf(\"%d\\n\",a[k]);\n    \t\t//\u627e\u5f97\u5230\uff0c\u8f93\u51fa\n\t\t\telse printf(\"2147483647\\n\");\n            //\u627e\u4e0d\u5230\uff0c\u6ce8\u610f\u8981\u8f93\u51fa2147483647\n\t\t}\n\t\tif(opt==5){//\u63d2\u5165x\n\t\t\tint k=lower_bound(a+1,a+1+n,x)-a;\n            //\u4e8c\u5206\u67e5\u627e\n\t\t\tif(k==n+1) a[++n]=x;\n            //\u627e\u4e0d\u5230\uff0c\u90a3\u8bf4\u660ex\u662f\u6700\u5927\u7684\u6570\uff0c\u76f4\u63a5\u63d2\u5728\u540e\u9762\n\t\t\telse{//\u533a\u95f4[k+1,n]\u6574\u4f53\u540e\u79fb\u4e00\u4f4d\n\t\t\t\tgo(i,n,k) a[i+1]=a[i];\n\t\t\t\ta[k]=x;//\u63d2\u5165x\n\t\t\t\t++n;//\u6ce8\u610f\u8981\u628an\u7684\u503c\u4e5f\u4fee\u6539\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\u4f60AC\u4e86\u6ca1\uff1fAC\u4e86\u5c31\u7ed9\u4e2a\u8d5e\u5457\u3002",
        "postTime": 1582725736,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5076 \u3010\u3010\u6df1\u57fa16.\u4f8b7\u3011\u666e\u901a\u4e8c\u53c9\u6811\uff08\u7b80\u5316\u7248\uff09\u3011"
    },
    {
        "content": "\u6b63\u89e3\u80af\u5b9a\u662fBST\uff0c\u4f46\u6211\u4e0d\u4f1aBST\uff0c\u8fd9\u53ef\u548b\u529e\u561b\n\u8bfb\u4e86\u4e00\u904d\u9898\uff0c\u53d1\u73b0\u5176\u5b9e\u4e3b\u8981\u64cd\u4f5c\u5c31\u662f\u627e\u524d\u9762\u4e00\u4e2a\u6bd4\u4ed6\u5c0f\u7684\uff0c\u6216\u8005\u540e\u9762\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\uff0c\u4e5f\u5c31\u662f**\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u961f\u5217**\uff0c\u90a3stl\u4e2d\u6709\u4e2a\u597d\u4e1c\u897f\u5440\uff0c**multiset**\uff0c\u81ea\u52a8\u6392\u5e8f\uff0c\u8fd8\u4e0d\u4f1a\u50cfset\u4e00\u6837\u53bb\u91cd\uff0c\u7136\u540e\u7528lower_bound\u548cupper_bound\u53bb\u4e8c\u5206\u67e5\u627e\u76f8\u5e94\u7684\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u8fd9\u9898\u6709\u4e2a\u5751\u70b9\uff0c\u8981\u662f\u6ca1\u6709\u540e\u7ee7\u7684\u8bdd\uff0c\u9700\u8981\u8f93\u51fa**2147483647**\uff0c\uff08\u9898\u76ee\u4e5f\u6ca1\u8bf4\u5440\uff0c\u5bfc\u81f4\u6211\u7b2c\u4e00\u904d\u5c3140\u5206\uff09\uff0c\u6240\u4ee5\u5728\u5f00\u59cb\u524d\uff0c\u5148\u624b\u52a8\u6dfb\u52a0\u4e00\u4e2a2147483647\u4f5c\u4e3a\u6700\u5927\u503c\uff0c\u8fd9\u6837\u5373\u4f7f\u672c\u6765\u6ca1\u6709\u540e\u7ee7\u4e86\uff0c\u5c31\u81ea\u52a8\u6307\u54112147483647\u4e86\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef multiset<int>::iterator sett;//\u6bcf\u6b21\u90fd\u5199\u592a\u957f\u4e86\uff0ctypedef\u4e00\u4e0b \nsett c,d;//\u5b9a\u4e492\u4e2a\u8fed\u4ee3\u5668 \nint main()\n{\n\tint n,a,x;\n\tmultiset<int> s1;\n\tcin>>n;\n\ts1.insert(2147483647);//\u4e3a\u9632\u6b62\u6ca1\u6709\u540e\u7ee7\uff0c\u624b\u52a8\u6dfb\u52a0\u4e00\u4e2a\u6700\u5927\u503c \n\twhile(n--)\n\t{\n\t\tcin>>a>>x;\n\t\tswitch(a){\n\t\t\tcase 1:{//\u67e5\u8be2 x\u6570\u7684\u6392\u540d \n\t\t\t\tc=s1.lower_bound(x);//\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2ax\u51fa\u73b0\u7684\u4f4d\u7f6e \n\t\t\t\tint num=1;//\u8ba1\u6570\u5668 \n\t\t\t\tfor(d=s1.begin();d!=c;++d)//\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\u8dd1\uff0c\u76f4\u5230\u5230\u4e86\u7b2c\u4e00\u4e2ax \n\t\t\t\t++num;\n\t\t\t\tcout<<num<<\"\\n\";//\u8f93\u51fanum \n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2:{//\u67e5\u8be2\u6392\u540d\u4e3ax\u7684\u6570\n\t\t\t\tint num=1;\n\t\t\t\tfor(d=s1.begin();num<x;++num)//\u4e0d\u4f1apbds,\u53ea\u80fd\u624b\u52a8\u4e00\u4e2a\u4e00\u4e2a\u52a0\u4e86 \n\t\t\t\t++d;\n\t\t\t\tcout<<*d<<\"\\n\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3:{//\u6c42x\u7684\u524d\u9a71 \n\t\t\t\tc=s1.lower_bound(x);//\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2ax\u51fa\u73b0\u7684\u4f4d\u7f6e \n\t\t\t\t--c;//\u90a3\u4ed6\u524d\u9762\u4e00\u4e2a\u5fc5\u7136\u662f\u524d\u9a71 \n\t\t\t\tcout<<*c<<\"\\n\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 4:{//\u6c42x\u7684\u540e\u7ee7\n\t\t\t\tc=s1.upper_bound(x);//\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8ex\u7684\u4f4d\u7f6e \n\t\t\t\tcout<<*c<<\"\\n\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 5:{//\u63d2\u5165\u4e00\u4e2a\u6570x\n\t\t\t\ts1.insert(x);//\u63d2\u5165\u5143\u7d20 \n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1585681959,
        "uid": 251466,
        "name": "wwldx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5076 \u3010\u3010\u6df1\u57fa16.\u4f8b7\u3011\u666e\u901a\u4e8c\u53c9\u6811\uff08\u7b80\u5316\u7248\uff09\u3011"
    },
    {
        "content": "### luogu5076\n\n\n#### BST\n\n* \u67e5\u8be2\u6392\u540d\u4e3a$K$\u7684\u503c\n  1. \u7c7b\u4f3c\u4e8e\u6743\u503c\u7ebf\u6bb5\u6811, \u5982\u679croot\u7684\u5de6\u5b50\u6811\u8282\u70b9\u4e2a\u6570$+1$\u5927\u4e8e$K$\n\n  2. \u5219$K$\u5927\u503c\u4e00\u5b9a\u5728\u5de6\u5b50\u6811    \u53cd\u4e4b\u5728\u53f3\u8fb9\u5b50\u6811\n\n  3. ```c++\n     int kth(Node* now, int K) { //\u7b2ck\u5c0f\u7684\u503c\n     \tif(!now) //\u9898\u76ee\u8981\u6c42\u4e00\u4e2a\u610f\u4e49\u4e0d\u660e\u7684\u8fd4\u56de\u503c\n           return 2147483647; \n     \tint tmp = now->lsum + 1;\n     \tif(tmp == K) \n     \t\treturn now->val;\n     \tif(tmp < K) //\u67e5\u53f3\u8fb9\u8bb0\u5f97\u51cf\u53bblsum+1\n     \t\treturn kth(now->rig, (K-tmp));\n     \telse \n     \t\treturn kth(now->lef, K);\n     }\n     ```\n\n* \u67e5\u8be2$x$\u7684\u6392\u540d\n\n  1. $x$\u7684\u6392\u540d\u4e3a: $x$\u7684\u5de6\u5b50\u6811\u4e2a\u6570$+1$,\u5982\u679c\u5728root\u5411\u53f3\u67e5\u8be2\u4e86\u8981\u8bb0\u5f97\u52a0\u4e0aroot\u7684\u5de6\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\n\n  2. ```c++\n     int xth(Node* now, int x, int K) { //\u67e5\u8be2x\u7684\u6392\u540d\n     \tif(!now) return K;\n     \tif(now->val == x) \n           return K+now->lsum+1;\n     \tif(now->val < x) \n     \t\treturn xth(now->rig, x, K+(now->lsum+1));\n     \telse\n     \t\treturn xth(now->lef, x, K);\n     }\n     ```\n\n     \u200b\n\n* \u67e5\u8be2\u4e00\u4e2a\u6570$x$\u7684\u524d\u9a71\n\n  1. \u5982\u679c$root$\u6bd4$x$\u5c0f,\u90a3\u4e48$root$\u53ef\u80fd\u662f$x$\u7684\u524d\u9a71, \u4e14$root$\u7684\u53f3\u5b50\u6811\u4e5f\u53ef\u80fd\u6709$x$\u7684\u524d\u9a71\n\n  2. ```c++\n     int get_pre(int key) {\n     \tint ret = -2147483647;\n     \tNode* p = root;\n     \twhile(p) {\n     \t\tif(key > (p->val)) {\n     \t\t\tret = p->val;\n     \t\t\tp = p->rig;\n     \t\t} else {\n     \t\t\tp = p->lef;\n     \t\t}\n     \t}\n     \treturn ret;\n     }\n     ```\n\n* \u67e5\u8be2\u4e00\u4e2a\u6570$x$\u7684\u540e\u7ee7\n\n  1. \u5982\u679c$root$\u6bd4$x$\u5927, \u90a3\u4e48$root$\u53ef\u80fd\u662f$x$\u7684\u540e\u7ee7, \u4e14$root$\u7684\u5de6\u5b50\u6811\u4e5f\u53ef\u80fd\u6709$x$\u7684\u540e\u7ee7\n\n  2. ```c++\n     int get_suf(int key) {\n     \tint ret = 2147483647;\n     \tNode* p = root;\n     \twhile(p) {\n     \t\tif(key < p->val) {\n     \t\t\tret = p->val;\n     \t\t\tp = p->lef;\n     \t\t} else {\n     \t\t\tp = p->rig;\n     \t\t}\n     \t}\n     \treturn ret;\n     }\n     ```\n\n**\u5b8c\u6574\u4ee3\u7801**\n```c++\n#define debug\n#ifdef debug\n#include <time.h>\n#include \"/home/majiao/mb.h\"\n#endif\n//luoguP5076\n\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string.h>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#define MAXN ((int)1e5+7)\n#define ll long long int\n#define QAQ (0)\n\nusing namespace std;\n\nstruct Node {\n\tNode* lef;\n\tNode* rig;\n\tint val, lsum, rsum; //lsum,rsum\u5b9a\u4e49\u5de6\u53f3\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\n\tNode(int _val) : lef(0), rig(0), val(_val), lsum(0), rsum(0) { }\n} *root;\n\nvoid insert(Node*& now, int key) { //\u63d2\u5165\u8bb0\u5f97\u589e\u52a0\u5b50\u6811\u4e2a\u6570\n\tif(!now) {\n\t\tnow = new Node(key);\n\t\treturn ;\n\t}\n\tif(now->val <= key) \n\t\tinsert(now->rig, key), now->rsum ++;\n\telse \n\t\tinsert(now->lef, key), now->lsum ++;\n}\n\nbool find_key(Node* now, int key) {\n\tif(!now) return false;\n\tif(now->val == key) return true;\n\tif(now->val < key) \n\t\treturn find_key(now->rig, key);\n\telse\n\t   \treturn find_key(now->lef, key);\n}\n\nint kth(Node* now, int K) { //\u7b2ck\u5c0f\u7684\u503c\n\tif(!now) return 2147483647;\n\tint tmp = now->lsum + 1;\n\tif(tmp == K) \n\t\treturn now->val;\n\tif(tmp < K) \n\t\treturn kth(now->rig, (K-tmp));\n\telse \n\t\treturn kth(now->lef, K);\n}\n\nint xth(Node* now, int x, int K) { //\u67e5\u8be2x\u7684\u6392\u540d\n\tif(!now) return K;\n\tif(now->val == x) return K+now->lsum+1;\n\tif(now->val < x) \n\t\treturn xth(now->rig, x, K+(now->lsum+1));\n\telse\n\t\treturn xth(now->lef, x, K);\n}\n\nint get_pre(int key) {\n\tint ret = -2147483647;\n\tNode* p = root;\n\twhile(p) {\n\t\tif(key > (p->val)) {\n\t\t\tret = p->val;\n\t\t\tp = p->rig;\n\t\t} else {\n\t\t\tp = p->lef;\n\t\t}\n\t}\n\treturn ret;\n}\n\nint get_suf(int key) {\n\tint ret = 2147483647;\n\tNode* p = root;\n\twhile(p) {\n\t\tif(key < p->val) {\n\t\t\tret = p->val;\n\t\t\tp = p->lef;\n\t\t} else {\n\t\t\tp = p->rig;\n\t\t}\n\t}\n\treturn ret;\n}\n\nvector<int> vec;\nvoid dfs(Node* now) {\n\tif(!now) return ;\n\tdfs(now->lef);\n\tvec.push_back(now->val);\n\tdfs(now->rig);\n}\n\nint main() {\n#ifdef debug\n\tfreopen(\"test\", \"r\", stdin);\n\tfreopen(\"out_main\", \"w\", stdout);\n\tclock_t stime = clock();\n#endif\n\tint n, x, op;\n\tscanf(\"%d \", &n);\n\twhile(n--) {\n\t\tscanf(\"%d %d \", &op, &x);\n\t\tif(op == 5) insert(root, x);\n      //\u8fd9\u91cc\u7684\u6392\u540d\u83ab\u540d\u5176\u5999\u7684\u8981\u52a01\n\t\tif(op == 1) printf(\"%d\\n\", xth(root, x, 0)+1);\n\t\tif(op == 2) printf(\"%d\\n\", kth(root, x));\n\t\tif(op == 3) printf(\"%d\\n\", get_pre(x));\n\t\tif(op == 4) printf(\"%d\\n\", get_suf(x));\n\t}\n/**\n\twhile(n--) {\n\t\tscanf(\"%d \", &x);\n\t\tinsert(root, x);\n\t}\n//\tdfs(root);\n\n\t//for(auto it : vec)\n\t//\tprintf(\"%d %d\\n\", it, xth(root, it, 0));\n\n//\tfor(int i=1; i<=9; i++)\n//\t\tprintf(\"%d\\n\", kth(root, i));\n//\tfor(auto it : vec)\n//\t\tprintf(\"%d %d\\n\", it, get_suf(it));\n\n*/\n\n\n\n\n\n#ifdef debug\n\tclock_t etime = clock();\n\tprintf(\"rum time: %lf \u79d2\\n\",(double) (etime-stime)/CLOCKS_PER_SEC);\n#endif \n\treturn 0;\n}\n\n\n```\n\n",
        "postTime": 1584545039,
        "uid": 204114,
        "name": "\u9a6c\u89d2\u7684\u9006\u88ad",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5076 BST\u6c42\u524d\u9a71\u540e\u7ee7,k\u5927\u503c,\u503c\u7684\u6392\u540d"
    },
    {
        "content": "# P5076\u9898\u89e3\n### \u8fd9\u9898\u6807\u51c6\u7b54\u6848\u662f\u7528\u4e8c\u53c9\u6811\uff0c\u4f46\u662f\u5462\uff0c\u8003\u8651\u5230\u4e8c\u53c9\u6811\u6bd4\u8f83\u96be\uff0c\u6211~~\u849f\u84bb~~\u5c31\u53d1\u4e00\u7bc7\u7b80\u5355\u6613\u61c2~~\u66b4\u529b~~\u7684\u505a\u6cd5\uff01\uff01\n\u672c\u9898\u89e3\u8981\u7528\u5230\u6570\u7ec4\u548c\u4e24\u4e2a\u51fd\u6570$lower\\_bound()$\u548c$upper\\_bound()$\u4e0d\u4f1a\u7684\u6233[\u8fd9\u91cc](https://blog.csdn.net/qq_40160605/article/details/80150252)\n\n\u5177\u4f53\u542b\u4e49\u5728\u4ee3\u7801\u91cc\u5566\n#### \u5148\u770b\u4e00\u4e0b\u4e94\u79cd\u64cd\u4f5c\n1. \u67e5\u8be2 x \u7684\u6392\u540d\uff08\u6392\u540d\u5b9a\u4e49\u4e3a\u6bd4\u5f53\u524d\u6570\u5c0f\u7684\u6570\u7684\u4e2a\u6570+1\u3002\u82e5\u6709\u591a\u4e2a\u76f8\u540c\u7684\u6570\uff0c\u56e0\u8f93\u51fa\u6700\u5c0f\u7684\u6392\u540d\uff09\u3002\n\n   \u8fd9\u4e2a\u5c31\u662f\u6807\u51c6\u7684$lower\\_bound()$\u51fd\u6570\u7684\u4f5c\u7528\u5566\n\n\t```cpp\n\t\tif(num==1){\n\t\t\tcin>>number;\n\t\t\tcout<<lower_bound(a+1,a+size+1,number)-a<<endl;\n\t\t}\n\t```\n1. \u67e5\u8be2\u6392\u540d\u4e3a x \u7684\u6570\u3002\n\n\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u8f93\u51fa\u6392\u540d\u5c31\u597d\n\n```cpp\n\t\telse if(num==2){\n\t\t\tcin>>number;\n\t\t\tcout<<a[number]<<endl;\n\t\t}\n```\n3.\u6c42 x \u7684\u524d\u9a71\uff08\u524d\u9a71\u5b9a\u4e49\u4e3a\u5c0f\u4e8e x\uff0c\u4e14\u6700\u5927\u7684\u6570\uff09\u3002\n\n\u8fd9\u4e2a\u6709\u70b9\u7ed5\uff0c\u5927\u5bb6\u81ea\u5df1\u591a\u60f3\u60f3\uff0c\u5c31\u662f\u666e\u901a\u7684$lower\\_bound()$\u518d\u51cf\u63891\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n\t\telse if(num==3){\n\t\t\tcin>>number;\n\t\t\tint p=lower_bound(a+1,a+size+1,number)-a;\n\t\t\tif(p==1) printf(\"-2147483647\\n\");\n\t\t\telse cout<<a[p-1]<<endl;\n\t\t}\n```\n4.\u6c42 x \u7684\u540e\u7ee7\uff08\u540e\u7ee7\u5b9a\u4e49\u4e3a\u5927\u4e8e x\uff0c\u4e14\u6700\u5c0f\u7684\u6570\uff09\u3002\n\n\u6807\u51c6\u7684$upper\\_bound()$\u5566\n\n```cpp\n\t\telse if(num==4){\n\t\t\tcin>>number;\n\t\t\tint *p=upper_bound(a+1,a+size+1,number);\n\t\t\tif(p==a+size+1) printf(\"2147483647\\n\");\n\t\t\telse cout<<*p<<endl;\n\t\t}\n```\n5.\u63d2\u5165\u4e00\u4e2a\u6570 x\u3002\n\n\u8fd9\u91cc\u9700\u8981\u5bf9\u65b0\u63d2\u5165\u7684\u6570\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u4fdd\u8bc1\u540e\u9762$lower\\_bound()$\u548c$upper\\_bound()$\u7684\u6b63\u5e38\u8fd0\u884c\n\n\u8fd9\u91cc\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u4f46\u8fd9\u9053\u9898\u8fd8\u662f\u8dd1\u7684\u8fc7\u53bb\u7684\n\n```\n\t\telse if(num==5){\n\t\t\tcin>>number;\n\t\t\ta[++size]=number;\n\t\t\tsort(a+1,a+size+1);\n\t\t}\n```\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u672c\u9898\u65f6\u95f4\u590d\u6742\u5ea6\u5728O(nlogn)\u5de6\u53f3\uff08n\u4e3a\u8be2\u95ee\u6b21\u6570\uff09\uff0c\u5927\u6982\u53ef\u4ee5\u8dd1\u8fc7\n\n### \u6ce8\u610f\uff0c\u6709\u5751\uff01\uff01\n\u6ce8\u610f\u8fd9\u4e24\u53e5\n```\n\t\t\tif(p==1) printf(\"-2147483647\\n\");\n\t\t\tif(p==a+size+1) printf(\"2147483647\\n\");\n```\n\n\u5c31\u662f\u627e\u4e0d\u5230\u5c31\u8981\u8f93\u51fa\u8fd9\u4e24\u4e2a\u5947\u5947\u602a\u602a\u7684\u6570~~\u5751\u4e86\u6211\u597d\u51e0\u4e2a\u5c0f\u65f6~~\n\n### \u9644\u4e0aAC\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nint a[10010];\n//upper_bound(begin,end,number)\u51fd\u6570\u662f\u6c42begin-end\u4e2d\uff08\u6392\u597d\u5e8f\uff09\u7b2c\u4e00\u4e2a\u5927\u4e8e number\u7684\u6570\n//lower_bound(begin,end,number)\u51fd\u6570\u662f\u6c42begin-end\u4e2d\uff08\u6392\u597d\u5e8f\uff09\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e number\u7684\u6570\n//\u4ee5\u4e0a\u4e24\u4e2a\u51fd\u6570\u4f20\u56de\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u9488-a\u5c31\u662f\u4e00\u4e2a\u76f8\u5bf9\u4f4d\u7f6e\uff08\u6240\u6c42number\u7684\u4e0b\u6807\uff09 \nint main(){\n\tint q,num,number,size=0;\n\tcin>>q;\n\twhile(q--){\n\t\tcin>>num;\n\t\tif(num==1){\n\t\t\tcin>>number;\n\t\t\tcout<<lower_bound(a+1,a+size+1,number)-a<<endl;\n\t\t}\n\t\telse if(num==2){\n\t\t\tcin>>number;\n\t\t\tcout<<a[number]<<endl;\n\t\t}\n\t\telse if(num==3){\n\t\t\tcin>>number;\n\t\t\tint p=lower_bound(a+1,a+size+1,number)-a;\n\t\t\tif(p==1) printf(\"-2147483647\\n\");\n\t\t\telse cout<<a[p-1]<<endl;\n\t\t}\n\t\telse if(num==4){\n\t\t\tcin>>number;\n\t\t\tint *p=upper_bound(a+1,a+size+1,number);\n\t\t\tif(p==a+size+1) printf(\"2147483647\\n\");\n\t\t\telse cout<<*p<<endl;\n\t\t}\n\t\telse if(num==5){\n\t\t\tcin>>number;\n\t\t\ta[++size]=number;\n\t\t\tsort(a+1,a+size+1);\n\t\t}\n\t}\n}\n```\n\u6b22\u8fcedalao\u6279\u8bc4\u6307\u6b63\n\nUpdate \u66f4\u6539\u6587\u98ce\n\n\u6c42\u8fc7\uff01\uff01\uff01",
        "postTime": 1584014212,
        "uid": 231800,
        "name": "Veranda",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5076 \u3010\u3010\u6df1\u57fa16.\u4f8b7\u3011\u666e\u901a\u4e8c\u53c9\u6811\uff08\u7b80\u5316\u7248\uff09\u3011"
    },
    {
        "content": "# \u9898\u610f\n\n\u8fd9\u9898\u662f\u6811\u5806\u7684\u5f31\u5316\u7248\n\n\u5c31\u662f\u6bd4\u6807\u51c6\u6811\u5806\u5c11\u4e86\u4e00\u4e2a\u5220\u9664\u529f\u80fd\n\n# \u5206\u6790\n\n#### \u4ec0\u4e48\u662f\u6811\u5806\n\n\u6811\u5806\u7b49\u4e8e\u4e8c\u53c9\u6811\u6392\u5e8f\u6811+\u5806\n\n1\uff0c\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\n\n2\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ed3\u70b9\n\n\u5b83\u7684\u5de6\u5b69\u5b50\u5c0f\u4e8e\u5b83\uff0c\u53f3\u5b69\u5b50\u5927\u4e8e\u5b83\n\n3\uff0c\u6709\u4e00\u4e2a\u968f\u673a\u9644\u52a0\u57df\u6ee1\u8db3\u5806\u7684\u6027\u8d28\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5176\u7ed3\u6784\u76f8\u5f53\u4e8e\u4ee5\u968f\u673a\u6570\u636e\u63d2\u5165\u7684\u4e8c\u53c9\u641c\u7d22\u6811\n\n\n#### \u5173\u4e8e\u6811\u7684\u5de6\u65cb\u4e0e\u53f3\u65cb\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zlgevfte.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u8fd9\u662f\u5e73\u8861\u6811\u7684\u77e5\u8bc6\u70b9\n\n\u65cb\u8f6c\u53ef\u4ee5\u7ef4\u62a4\u6811\u5806\u7684\u6027\u8d28\uff0c\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8d8b\u4e8e$O(logn)$\n\n#### \u6811\u5806\u7684\u57fa\u672c\u64cd\u4f5c\n\n\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\u6811\u5806\u652f\u6301\u54ea\u4e9b\u64cd\u4f5c\n\n\n1\uff0c\u63d2\u5165$x$\n\n2\uff0c\u5220\u9664$x$(\u6b64\u9898\u7528\u4e0d\u5230\uff09\n\n3\uff0c\u67e5$x$\u7684\u6392\u540d\n\n4\uff0c\u67e5\u6392\u540d\u4e3a$x$\u7684\u6570\n\n5\uff0c\u67e5$x$\u7684\u524d\u9a71\n\n6\uff0c\u67e5$x$\u7684\u540e\u7ee7\n\n\u6211\u4eec\u8fd8\u5f97\u77e5\u9053\u4e00\u4e9b\u6570\u7ec4\u6765\u50a8\u5b58\n\n$siz_i$\uff1a\u4ee5$i$\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u8282\u70b9\u603b\u6570\n\n$v_i$\uff1a$i$\u8282\u70b9\u7684\u6743\u503c\n\n$tot_i$:\u4e3a$i$\u7684\u70b9\u6709\u591a\u5c11\u4e2a\n\n$son[i][2]$,$son[i][0]$\u662f\u6307$i$\u7684\u5de6\u513f\u5b50\n\n$son[i][1]$\u662f\u6307$i$\u7684\u53f3\u513f\u5b50\n\n$rd_i$\uff1a$i$\u8282\u70b9\u7684\u968f\u673a\u503c\u3002\n\n\u6bcf\u6b21\u8981\u63d2\u5165\u65b0\u8282\u70b9$i$\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u4e3a$i$\u8282\u70b9\u5206\u914d\u4e00\u4e2a\u968f\u673a\u503c\u00a0$rd_i$\n\n\u5e76\u8ba9\u5168\u90e8\u8282\u70b9\u6309\u7167\u8fd9\u4e2a\u968f\u673a\u503c\u6392\u6210\u4e00\u4e2a\u5806\u3002\n\n\uff08\u6709\u70b9\u96be\u7406\u89e3\uff0c\u591a\u8bfb\u51e0\u904d\uff09\n\n# \u4ee3\u7801\n\n\u7edf\u8ba1\u4ee5$p$\u7684\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2a\u6570\n\n```cpp\nvoid pushup(int x)\n{\n\tsiz[x]=siz[son[x][0]]+siz[son[x][1]]+tot[x];\n\treturn;\n}\n```\n\n\u65cb\u8f6c\u3002\u5f53$d==0$\u65f6 \u5de6\u65cb\uff1b\u5f53$d==1$\u65f6\uff0c\u53f3\u65cb\n\n```cpp\nvoid xun(int &p,int d)\n{\n\tint k=son[p][d^1];\n\tson[p][d^1]=son[k][d];\n\tson[k][d]=p;\n\tpushup(p);\n\tpushup(k);\n\tp=k;\n\treturn;\n}\n```\n#### \u63d2\u5165\u4e00\u4e2a\u6570x\uff1b\n\n\u5f53$x$\u672a\u51fa\u73b0\u8fc7\uff0c\u5c31\u662f\u5f53$p==0$\u65f6\n\n\u5c31\u968f\u673a\u7ed9\u5b83\u4e00\u4e2a\u503c\uff1b\n\n\u5f53$x$\u51fa\u73b0\u8fc7\u4e86\uff0c$v_p==x$\u65f6\n\n\u5c31\u53ea\u5728$tot_p$++,$siz_p$++\u5373\u53ef\uff1b\n\n\u5426\u5219\uff0c\u5f53$x<v_p$\u65f6\uff0c\u8fdb\u5de6\u5b50\u6811\uff0c$d=0$;\u5426\u5219\u8fdb\u53f3\u5b50\u6811,$d=1$\uff1b\n\n\u5f53\u5b83\u63d2\u5165\u5de6\u5b50\u6811\u65f6\uff0c$p$\u7684$rd$\u5e94\u8be5\u5c0f\u4e8e\u5de6\u5b50\u6811\u7684$rd$\n\n\u6b64\u65f6\u53f3\u65cb\n\n\u5f53\u5b83\u63d2\u5165\u53f3\u5b50\u6811\u65f6\uff0c$p$\u7684$rd$\u5e94\u8be5\u5c0f\u4e8e\u53f3\u5b50\u6811\u7684$rd$\n\n\u6b64\u65f6\u5de6\u65cb\n\n```cpp\nvoid cha(int &p,int x)\n{\n\tif(p==0)\n\t{\n\t\tp=++sum;\n\t\tsiz[p]=tot[p]=1;\n\t\tv[p]=x;\n\t\trd[p]=rand();\n\t\treturn;\n\t}\n\tif(v[p]==x)\n\t{\n\t\tsiz[p]++;\n\t\ttot[p]++;\n\t\treturn ;\n\t } \n\tint d=(x>v[p]);\n\tcha(son[p][d],x);\n\tif(rd[p]<rd[son[p][d]])\n       xun(p,1-d);\n\tpushup(p);\t\n}\n```\n\u5220\u9664\u6211\u5c31\u4e0d\u8bf4\u4e86\n\n\u6bd5\u7adf\u8fd9\u9898\u6ca1\u7528\u5230\n\n#### \u67e5x\u7684\u6392\u540d\n\n\u5f53$x$\u672a\u51fa\u73b0\uff0c\u5c31\u8fd4\u56de$0$\n\n\u5f53$x==v_p$\u65f6\uff0c\u5c31\u8fd4\u56de$p$\u7684\u5de6\u5b50\u6811\u4e2a\u6570$+1$\n\n\u5f53$x>v_p$\u65f6\uff0c\u5c31\u8fd4\u56de$p$\u7684\u5de6\u5b50\u6811\u4e2a\u6570+$p$\u7684\u8282\u70b9\u6570+$x$\u5728$p$\u7684\u53f3\u5b50\u6811\u7684\u6392\u540d\n\n\u5f53$x<v_p$\u65f6\uff0c\u5c31\u8fd4\u56dex\u5728p\u7684\u5de6\u5b50\u6811\u7684\u6392\u540d\n\n```cpp\nint pai(int p,int x)\n{\n\tif(!p)return 0;\n\tif(v[p]==x) return siz[son[p][0]]+1;\n\tif(v[p]<x) return siz[son[p][0]]+tot[p]+pai(son[p][1],x);\n\tif(v[p]>x) return pai(son[p][0],x);\n}\n```\n#### \u67e5\u6392\u540d\u4e3ax\u7684\u6570\n\n\u7a7a\u8282\u70b9\u672a\u51fa\u73b0\uff0c\u5c31\u8fd4\u56de$0$\n\n\u5f53\u5de6\u5b50\u6811\u7684\u8282\u70b9\u5927\u4e8e$x$\u65f6\uff0c\u53bb\u5de6\u5b50\u6811\n\n\u5f53\u6b64\u8282\u70b9\u7684\u4e2a\u6570$>=x-$\u5de6\u8282\u70b9\u7684\u4e2a\u6570\u65f6\uff0c\u5c31\u8fd4\u56de$v[p]$\n\n\u5f53\u5de6\u5b50\u6811\u7684\u8282\u70b9\u6570$+$\u6b64\u8282\u70b9\u7684\u4e2a\u6570$<x$\u65f6\uff0c\u53bb\u53f3\u5b50\u6811\n\n```cpp\nint ming(int p,int x)\n{\n\tif(!p)return 0;\n\tif(x<=siz[son[p][0]]) return ming(son[p][0],x);\n\telse if(x>siz[son[p][0]]+tot[p])\n\t  return ming(son[p][1],x-siz[son[p][0]]-tot[p]);\n\telse return v[p];\n}\n```\n#### \u6c42x\u7684\u524d\u9a71\n\n  \n\u5f53$x$\u6ca1\u6709\u524d\u9a71\u65f6\uff0c\u8981\u8f93\u51fa$-2147483647$\n\n\n\u5982\u679c$v_p>=x$\u65f6\uff0c\u53bb\u5de6\u5b50\u6811\n\n\u5426\u5219\uff0c\u5c31\u8fd4\u56de$max$($v_p,$\u53f3\u5b50\u6811\u8fd4\u56de\u6765\u7684\u6570\uff09\n\n```cpp\nint qian(int p,int x)\n{\n\tif(!p)return -2147483647;\n\tif(x<=v[p]) return qian(son[p][0],x);\n\telse return max(v[p],qian(son[p][1],x));\n  }  \n\n```\n\n\n#### \u6c42x\u7684\u540e\u7ee7\n\n\u5f53$x$\u6ca1\u6709\u540e\u7ee7\u65f6\uff0c\u8981\u8f93\u51fa$2147483647$\n\n\u5982\u679c$v_p<=x$,\u53bb\u53f3\u5b50\u6811\n\n\u5426\u5219\uff0c\u5c31\u8fd4\u56de$min$($v_p,$\u5de6\u5b50\u6811\u8fd4\u56de\u6765\u7684\u6570\uff09\n\n```cpp\nint hou(int p,int x)\n{\n\tif(!p)return 2147483647;\n\tif(x>=v[p]) return hou(son[p][1],x);\n\telse return min(v[p],hou(son[p][0],x));\n}\n\n```\n#### \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing  namespace std;\n\n#define INF INT_MAX\n\nconst int N=1e5+10;\n\nint n,a,x,tot[N],siz[N],rd[N],v[N],son[N][2],d,r,sum;\n\nvoid pushup(int x)\n{\n\tsiz[x]=siz[son[x][0]]+siz[son[x][1]]+tot[x];\n\treturn;\n}\n\nvoid xun(int &p,int d)\n{\n\tint k=son[p][d^1];\n\tson[p][d^1]=son[k][d];\n\tson[k][d]=p;\n\tpushup(p);\n\tpushup(k);\n\tp=k;\n\treturn;\n}\n\nvoid cha(int &p,int x)\n{\n\tif(p==0)\n\t{\n\t\tp=++sum;\n\t\tsiz[p]=tot[p]=1;\n\t\tv[p]=x;\n\t\trd[p]=rand();\n\t\treturn;\n\t}\n\tif(v[p]==x)\n\t{\n\t\tsiz[p]++;\n\t\ttot[p]++;\n\t\treturn ;\n\t } \n\tint d=(x>v[p]);\n\tcha(son[p][d],x);\n\tif(rd[p]<rd[son[p][d]])\n       xun(p,d^1);\n\tpushup(p);\t\n}\n\nvoid shan(int &p,int x)\n{\n\tif(!p) return;\n\tif(x<v[p]) shan(son[p][0],x);\n\telse if(x>v[p]) shan(son[p][1],x);\n\telse\n\t{\n\t\tif(son[p][0]==0&&son[p][1]==0)\n\t\t{\n\t\t\ttot[p]--;\n\t\t\tsiz[p]--;\n\t\t\tif(tot[p]==0) p=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(son[p][1]==0)\n\t\t\t{\n\t\t\t\txun(p,1);\n\t\t\t\tshan(son[p][1],x);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(son[p][0]==0)\n\t\t\t\t{\n\t\t\t\t\txun(p,0);\n\t\t\t\t\tshan(son[p][0],x);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t   int d=(rd[son[p][0]]>rd[son[p][1]]);\n\t\t\t\t   xun(p,d);\n\t\t\t\t   shan(son[p][d],x);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpushup(p);\n}\n\nint pai(int p,int x)\n{\n\tif(!p)return 0;\n\tif(v[p]==x) return siz[son[p][0]]+1;\n\tif(v[p]<x) return siz[son[p][0]]+tot[p]+pai(son[p][1],x);\n\tif(v[p]>x) return pai(son[p][0],x);\n}\n\nint ming(int p,int x)\n{\n\tif(!p)return 0;\n\tif(x<=siz[son[p][0]]) return ming(son[p][0],x);\n\telse if(x>siz[son[p][0]]+tot[p])\n\t  return ming(son[p][1],x-siz[son[p][0]]-tot[p]);\n\telse return v[p];\n}\n\nint qian(int p,int x)\n{\n\tif(!p)return -2147483647;\n\tif(x<=v[p]) return qian(son[p][0],x);\n\telse return max(v[p],qian(son[p][1],x));\n  }  \n\nint hou(int p,int x)\n{\n\tif(!p)return 2147483647;\n\tif(x>=v[p]) return hou(son[p][1],x);\n\telse return min(v[p],hou(son[p][0],x));\n}\n\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a>>x;\n\t\tif(a==5)\n\t\t{\n\t\t\tcha(r,x);\n\t\t}\n\t\tif(a==1)\n\t\t{\n\t\t\tcout<<pai(r,x)+1<<endl;\n\t\t}\n\t\tif(a==2)\n\t\t{\n\t\t\tcout<<ming(r,x)<<endl;\n\t\t}\n\t\tif(a==3)\n\t\t{\n\t\t\tcout<<qian(r,x)<<endl;\n\t\t}\n\t\tif(a==4)\n\t\t{\n\t\t\tcout<<hou(r,x)<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1582781116,
        "uid": 188885,
        "name": "Edmundino",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5076 \u3010\u3010\u6df1\u57fa16.\u4f8b7\u3011\u666e\u901a\u4e8c\u53c9\u6811\uff08\u7b80\u5316\u7248\uff09\u3011"
    },
    {
        "content": "\u8003\u573a\u4e0a\u6700\u5feb\u7684\u89e3\u51b3\u65b9\u5f0f\n\n\u8fd8\u662f\u7528lower_bound\u548cupper_bound\n\n\u672c\u8eab\u590d\u6742\u5ea6\u4e3aO(logn)\uff0c\u5f88\u5feb\n\n\u6700\u91cd\u8981\u7684\u662f\u4ee3\u7801\u8fd8\u597d\u5199\n\n~~\u5c31\u662fvector\u7684insert\u6162\u4e86\u4e00\u4e22\u4e22~~\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nint main()\n{\n    int i,j,n,x,y;\n    cin>>n;\n    vector<int> v;\n    for(i=0;i<n;i++){\n        cin>>x>>y;\n        if(x == 5){\n            if(v.empty()) v.push_back(y);\n            else{\n                auto it = upper_bound(v.begin(),v.end(),y);\n                v.insert(it, y);\n            }\n        }\n        else if(x == 1){\n            auto it = lower_bound(v.begin(),v.end(),y);\n            cout<<it-v.begin()+1<<endl;\n        }\n        else if(x == 2){\n            cout<<v[y-1]<<endl;\n        }\n        else if(x == 3){\n            auto it = lower_bound(v.begin(),v.end(),y);\n            cout<<*(it-1)<<endl;\n        }\n        else{\n            auto it = upper_bound(v.begin(),v.end(),y);\n            if(it != v.end()) cout<<*it<<endl;\n            else cout<<\"2147483647\"<<endl;//\u672c\u9898\u5751\u70b9\uff0c\u9700\u8981\u8fd9\u4e2a\u5947\u602a\u7684\u7279\u5224\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1584275197,
        "uid": 296830,
        "name": "YuJieSong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5076 \u3010\u3010\u6df1\u57fa16.\u4f8b7\u3011\u666e\u901a\u4e8c\u53c9\u6811\uff08\u7b80\u5316\u7248\uff09\u3011"
    },
    {
        "content": "\u6b64\u9898\u7528\u4e8c\u53c9\u67e5\u627e\u6811\u5c31\u884c\uff0c\u65e0\u9700\u4f18\u5316\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\u95ee\u9898\u662f\uff0cx\u4e0d\u4e00\u5b9a\u5728\u6811\u5185\uff0c\u5982\u679c\u627e\u4e0d\u5230\u9700\u8981\u8f93\u51fa-2147483647\u6216\u80052147483647\uff0c\u8fd9\u4e2a\u662f\u9898\u76ee\u63cf\u8ff0\u95ee\u9898\uff0c\u6709\u5f85\u89e3\u51b3\u3002\n\n\u6b64\u9898\u6c42x\u7684\u524d\u9a71\u6216\u8005\u540e\u9a71\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u6392\u540d\u6c42\uff0c\u7b97\u662f\u4e00\u4e2a\u7b80\u5316\u4ee3\u7801\u7684\u5c0f\u6280\u5de7\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <cstring>\n#define maxn 100000\nusing namespace std;\n\nint n,son[maxn][2],v[maxn],tot[maxn],s[maxn],f[maxn];\nint root,sz;\n\nvoid insert(int y)\n{\n\tint p=root;\n\twhile (true)\n\t{\n\t\tif (v[p]==-1) \n\t\t{\n\t\t\tv[p]=y;\n\t\t\tson[p][0]=++sz;\n\t\t\tf[sz]=p;\n\t\t\tson[p][1]=++sz;\n\t\t\tf[sz]=p;\n\t\t\ttot[p]=s[p]=1;\n\t\t\tbreak;\n\t\t}\n\t\tif (v[p]==y)\n\t\t{\n\t\t\ttot[p]++;\n\t\t\ts[p]++;\n\t\t\tbreak;\n\t\t}\n\t\tif (v[p]>y)\n\t\t{\n\t\t\ts[p]++;\n\t\t\tp=son[p][0];\n\t\t}\n\t\telse \n\t\t{\n\t\t\ts[p]++;\n\t\t\tp=son[p][1];\n\t\t}\n\t}\n}\n\nint solve1(int y)\n{\n\tint p=root;\n\tint ans=s[son[p][0]]+1;\n\twhile (v[p]!=-1)\n\t{\n\t\tif (v[p]==y) return ans;\n\t\tif (v[p]<y)\n\t\t{\n\t\t\tif (v[son[p][1]]==-1) return ans+tot[p];\n\t\t\tp=son[p][1];\n\t\t\tans+=s[son[p][0]]+tot[f[p]];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (v[son[p][0]]==-1) return ans;\n\t\t\tp=son[p][0];\n\t\t\tans-=s[son[p][1]]+tot[p];\n\t\t}\n\t}\n\treturn -1;\n}\n\nint solve2(int y)\n{\n\tint p=root;\n\tint ans=s[son[p][0]]+1;\n\twhile (v[p]!=-1)\n\t{\n\t\tif (ans<=y && y<=ans+tot[p]-1)\n\t\t{\n\t\t\treturn v[p];\n\t\t}\n\t\tif (ans+tot[p]-1<y)\n\t\t{\n\t\t\tp=son[p][1];\n\t\t\tans+=s[son[p][0]]+tot[f[p]];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tp=son[p][0];\n\t\t\tans-=s[son[p][1]]+tot[p];\n\t\t}\t\n\t}\n\treturn 2147483647;\n}\n\nint find(int y)\n{\n\tint p=root;\n\twhile (v[p]!=-1)\n\t{\n\t\tif (v[p]==y) return p;\n\t\tif (v[p]>y) p=son[p][0];\n\t\telse p=son[p][1];\n\t}\n\treturn -1;\n}\n\nint solve3(int y)\n{\n\tint p=solve1(y);\n\tif (p==1) return -2147483647;\n\treturn solve2(p-1);\n}\n\nint solve4(int y,int i)\n{\n\tint p=solve1(y),p2=find(y);\n\tif (p2==-1) return solve2(p);\n\treturn solve2(p+tot[p2]);\n}\n\nint main()\n{\n\tcin >> n;\n\tmemset(v,-1,sizeof(v));\n\tmemset(f,-1,sizeof(f));\n\tmemset(s,0,sizeof(s));\n\tmemset(son,0,sizeof(son));\n\tmemset(tot,0,sizeof(tot));\n\tsz=root=0;\n\tfor (int i=0;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tcin >> x >> y;\n\t\tif (x==1) cout << solve1(y) << endl;\n\t\tif (x==2) cout << solve2(y) << endl;\n\t\tif (x==3) cout << solve3(y) << endl;\n\t\tif (x==4) cout << solve4(y,i+1) << endl;\n\t\tif (x==5) insert(y);\n\t}\n}\n```\n",
        "postTime": 1585648339,
        "uid": 320329,
        "name": "\u5c71\u86d9or\u5c71\u5154",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5076 \u3010\u3010\u6df1\u57fa16.\u4f8b7\u3011\u666e\u901a\u4e8c\u53c9\u6811\uff08\u7b80\u5316\u7248\uff09\u3011"
    },
    {
        "content": "[P5076 \u3010\u3010\u6df1\u57fa16.\u4f8b7\u3011\u666e\u901a\u4e8c\u53c9\u6811\uff08\u7b80\u5316\u7248\uff09\u3011](https://www.luogu.com.cn/problem/P5076)\n\n\u5176\u5b9e\u4f7f\u7528\u7b80\u5355\u7684BST\u5c31\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\uff0c\u4f46\u662f\u5f88\u591a\u795e\u7287\u5df2\u7ecf\u8bb2\u8fc7BST\u4e86\uff0c\u5c31\u8bb2\u4e00\u8bb2vector\u7684\u5177\u4f53\u5b9e\u73b0\u5427\u3002\n\n[vector](https://www.luogu.com.cn/record/31306175) 21ms\uff0c\u82df\u8fdb\u6700\u4f18\u89e3\u7684\u7b2c\u4e00\u9875\u4e86\u3002\n\n\u6ce8\uff1a\u672c\u7bc7\u9898\u89e3\u662f\u4ee5\u672c\u9898\u4e3a\u4e3b\u7684\uff0c\u5982\u679c\u60f3\u770b\u66f4\u597d\u7684\u5b66\u4e60vector\uff0c\u8bf7\u53c2\u8003[\u8fd9\u91cc](https://zh.cppreference.com/w/cpp/container/vector)\u8fdb\u884c\u5b66\u4e60\u3002\n\nvector\u5728[\u8c37\u6b4c\u7ffb\u8bd1](https://translate.google.co.jp/?hl=zh-CN&tab=rT1#view=home&op=translate&sl=auto&tl=zh-CN&text=vector)\u4e0a\u7ffb\u8bd1\u4e3a\u5411\u91cf\uff0c\u8fd9\u91cc\u5462\u6211\u4eec\u628a\u5b83\u5f53\u505a\u4e00\u4e2a\u5e8f\u5217\u5904\u7406\u3002(\u6211\u4eec\u8981\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\u7684**\u5355\u8c03\u6027**\uff0c\u5373**\u4f7f\u8fd9\u4e2a\u5e8f\u5217\u6709\u5e8f**)\n\n---\n\n## \u6211\u4eec\u6765\u770b\u8fd9\u9053\u9898\u8981\u6c42\u7684\u51e0\u4e2a\u64cd\u4f5c:\n\n- \u67e5\u8be2 x \u6570\u7684\u6392\u540d\n\n- \u67e5\u8be2\u6392\u540d\u4e3a x \u7684\u6570\u3002\n\n- \u6c42 x \u7684\u524d\u9a71\n\n- \u6c42 x \u7684\u540e\u7ee7\n\n- \u63d2\u5165\u4e00\u4e2a\u6570 x\n\n## \u90a3\u6211\u4eec\u600e\u4e48\u5b9e\u73b0\u8fd9\u4e9b\u64cd\u4f5c\u5462\uff1f\n\n- \u4e8c\u5206\u67e5\u627e\n\n- \u8f93\u51fa\u7b2cx\u4e2a\u6570\n\n- \u4e8c\u5206\u67e5\u627e\u524d\u9a71\n\n- \u4e8c\u5206\u67e5\u627e\u540e\u7ee7\n\n- \u66b4\u529b\u53f3\u79fb\n\n## \u6211\u4eec\u6765\u770b\u770b\u5177\u4f53\u7684\u5b9e\u73b0:\n\n### \u67e5\u8be2 x \u7684\u6392\u540d\n\nSTL\u91cc\u6709\u4e24\u4e2a\u8d85\u7ea7\u597d\u7528\u7684\u51fd\u6570:\n\nlower_bound \u548c upper_bound\n\n\u5b83\u4eec\u6709\u4ec0\u4e48\u7528\u5462\uff1f\n\n\u5206\u522b\u53ef\u4ee5\u627e\u51fa\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217\u91cc\u7b2c\u4e00\u4e2a\u5927\u4e8e\u6216\u7b49\u4e8e x \u7684\u6570\u7684\u6307\u9488\u548c\u7b2c\u4e00\u4e2a\u5927\u4e8e x \u7684\u6570\u7684\u6307\u9488\u3002\n\n\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u4ee5\u770b\u770b\u8fd9\u7bc7[\u6587\u7ae0](http://blog.sina.com.cn/s/blog_ebd950590102vl88.html)\u3002\n\n```cpp\nprintf(\"%d\\n\",lower_bound(a.begin(),a.end(),x)-a.begin()+1);\n//\u56e0\u4e3a\u8fd4\u56de\u503c\u662f\u6307\u9488\u6240\u4ee5\u5c31\u51cf\u53bba.begin()\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210a\u3002\n```\n\n\u8fd9\u6837\u5c31\u80fd\u627e\u51fa\u6392\u540d\u4e86\uff0c\u590d\u6742\u5ea6$O(log n)$.\n\n### \u67e5\u8be2\u6392\u540d\u4e3a x \u7684\u6570\u3002\n\n\u56e0\u4e3a\u6570\u7ec4\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u8f93\u51fa\u7b2c x \u4e2a\u6570\u5373\u53ef\u3002\n\n```cpp\nprintf(\"%d\\n\",a[x-1]);//\u8f93\u51fa\u7b2cx\u4e2a\u6570\n```\n\u5c31\u9171\uff0c\u590d\u6742\u5ea6$O(1)$\n\n### \u6c42\u524d\u9a71\n\n\u540c\u6837\u5229\u7528lower_bound\u627e\u51fa\u5927\u4e8e\u7b49\u4e8e x \u7684\u7b2c\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u8f93\u51fa\u524d\u4e00\u4e2a\u6570\uff0c\u81ea\u7136\u5c31\u662f x \u7684\u524d\u9a71\u4e86\u3002\n\n```cpp\nvector<int>::iterator p=lower_bound(a.begin(),a.end(),x);//\u627e\u5230\u5927\u4e8e\u7b49\u4e8ex\u7684\u7b2c\u4e00\u4e2a\u6570\nif(p==a.begin()) printf(\"-2147483647\\n\");//\u5982\u679c\u6ca1\u6709\u5c0f\u4e8ex\u7684\u6570\uff0c\u5c31\u8f93\u51fa-2148473647\nelse printf(\"%d\\n\",*(p-1));//\u8f93\u51fax\u7684\u524d\u9a71\n```\n\n\u590d\u6742\u5ea6$O(log n)$\n\n### \u6c42\u540e\u7ee7\n\n\u548c\u6c42\u524d\u9a71\u64cd\u4f5c\u76f8\u4f3c\uff0c\u5177\u4f53\u5c31\u5728\u4ee3\u7801\u91cc\u89e3\u91ca\u4e86\u3002\n\n```cpp\nvector<int>::iterator p=upper_bound(a.begin(),a.end(),x);//\u627e\u5230\u5927\u4e8ex\u7684\u7b2c\u4e00\u4e2a\u6570\nif(p==a.end()) printf(\"2147483647\\n\");//\u5982\u679c\u6ca1\u6709\u5927\u4e8ex\u7684\u6570\uff0c\u5c31\u8f93\u51fa2148473637\nelse printf(\"%d\\n\",*p);//\u8f93\u51fax\u7684\u540e\u7ee7\n```\n\n\u590d\u6742\u5ea6$O(log n)$\n\n### \u63d2\u5165\n\n\u5148\u7528lower_bound\u627e\u51fa\u5927\u4e8e\u7b49\u4e8e x \u7684\u6570\u7684\u6307\u9488\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8bf4\u660e\uff0c\u6211\u4eec\u4e0d\u59a8\u5c06\u8fd9\u4e2a\u6570\u8bbe\u4e3a $a[k]$\u3002\n\n\u7136\u540e\u6211\u4eec\u53ea\u7528\u628a $a[k]$\u5230$a[n-1]$\u5168\u90e8\u53f3\u79fb\u4e00\u4f4d\uff0c\u7136\u540e\u5c06$a[k]$\u8d4b\u503c\u4e3a$x$\u3002\n\n~~\u5982\u679c\u4f60\u662f\u61d2\u4eba\uff0c\u4ee5\u4e0a\u5168\u90e8\u4e3a\u5047\uff0c\u53ea\u7528\u770b\u4e0b\u9762\u7684\u5185\u5bb9\u5373\u53ef~~\n\n\u5982\u679c\u4f60\u4ed4\u7ec6\u8bfb\u8fc7\u6211\u5728\u6700\u5f00\u59cb\u7684\u5730\u65b9\u63a8\u8350\u7684\u90a3\u4e2a*\u8fd9\u91cc*\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u6709\u4e00\u4e2aSTL\u4e2d\u7684\u51fd\u6570\uff0c**insert**\u3002\n\n\u8fd9\u4e2a**insert**\u80fd\u5e72\u561b\u5462\uff1f\u5b83\u5bf9\u5e94\u7684\u64cd\u4f5c\u5c31\u662f\u66b4\u529b\u53f3\u79fb\uff0c\u4e5f\u5c31\u662f\u61d2\u4eba\u4e0d\u7528\u770b\u7684\u90a3\u4e24\u53e5\u8bdd\u3002\n\n```cpp\n\na.insert(upper_bound(a.begin(),a.end(),x),x);\n//\u63d2\u5165\n\n```\n\u590d\u6742\u5ea6$O(n)$\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934 \n#pragma GCC target(\"sse,sse2,sse3,sse4.1,sse4.2,popcnt,abm,mmx,avx,ssse3,f16c,fma,avx2,xop,fma4\")\n#pragma GCC optimize(3,\"-fpeephole2,-ftree-vrp,-ftree-pre,-fipa-sra,Ofast,inline,-fgcse,-fgcse-lm,-ffast-math,-fsched-spec,unroll-loops,-falign-jumps,-falign-loops,-falign-labels,-fdevirtualize,-fcaller-saves,-fcrossjumping,-fthread-jumps,-funroll-loops,-fwhole-program,-freorder-blocks,-fschedule-insns,inline-functions,-ftree-tail-merge,-fschedule-insns2,-fstrict-aliasing,-fstrict-overflow,-falign-functions,-fcse-skip-blocks,-fcse-follow-jumps,-fsched-interblock,-fpartial-inlining,no-stack-protector,-freorder-functions,-findirect-inlining,-fhoist-adjacent-loads,-frerun-cse-after-loop,inline-small-functions,-finline-small-functions,-ftree-switch-conversion,-foptimize-sibling-calls,-fexpensive-optimizations,-funsafe-loop-optimizations,inline-functions-called-once,-fdelete-null-pointer-checks\")\n#pra\\\ngma GCC diagnostic ignored \"-Wnarrowing\"\nusing namespace std;\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int getc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\ninline int read() {\n    int ret=0,f=0;char ch=getc();\n    while(!isdigit(ch)){if(ch=='-') f=1;ch=getc();}\n    while(isdigit(ch)){ret=ret*10+ch-48;ch=getc();}\n    return f?-ret:ret;\n}//\u4ee5\u4e0a\u7686\u4e3a\u5947\u5947\u602a\u602a\u7684\u4f18\u5316\u548cfread\u5feb\u8bfb \nvector <int> a;//\u5f00\u4e00\u4e2avector \nint main(void) {//\u6807\u51c6main\u51fd\u6570\u5199\u6cd5 \n    int n=read();//\u63a5\u4e0b\u6765\u5c31\u4e0d\u7528\u6ce8\u8bd1\u4e86 \uff0c\u81ea\u5df1\u53ef\u4ee5\u56de\u53bb\u770b \n    for(int i=0;i<n;++i) {\n        int c=read(),x=read();\n        if(c==1) printf(\"%d\\n\",lower_bound(a.begin(),a.end(),x)-a.begin()+1);\n        else if(c==2) printf(\"%d\\n\",a[x-1]);\n        else if(c==3) {\n\t\t\tvector<int>::iterator p=lower_bound(a.begin(),a.end(),x);\n        \tif(p==a.begin()) printf(\"-2147483647\\n\");\n        \telse printf(\"%d\\n\",*(p-1));\n\t\t}\n        else if(c==4) {\n            vector<int>::iterator p=upper_bound(a.begin(),a.end(),x);\n            if(p==a.end() printf(\"2147483647\\n\");\n            else printf(\"%d\\n\",*p);\n        }\n        else if(c==5) a.insert(upper_bound(a.begin(),a.end(),x),x);\n    }\n    return 0;\n}\n```\n\n\u5982\u679c\u7a0b\u5e8fCE\u4e86\u4e0d\u8981\u602a\u6211\u3002\n\n\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u7ba1\u7406\u5458\u6c42\u8fc7\u3002\n\n\u611f\u8c22\u5404\u4f4d\u7684\u5b66\u4e60\u3002",
        "postTime": 1583237529,
        "uid": 320832,
        "name": "do_while_false",
        "ccfLevel": 4,
        "title": "\u3010\u9898\u89e3\u3011P5076"
    }
]