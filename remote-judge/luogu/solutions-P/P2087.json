[
    {
        "content": "\u8fd9\u9898\u6ca1\u6709\u9898\u89e3\uff1f\uff1f\u505a\u7684\u4eba\u592a\u5c11\u4e86\u3002\u3002\n\n\u4e3a\u4ec0\u4e48\u6807\u7b7e\u662f\u5e73\u8861\u6811\u548c\u7ebf\u6bb5\u6811\u3002\u3002\u3002\n\n\u81ea\u5df1\u5b8c\u5168\u662f\u6309\u7167\u63d0\u793a\u5168STL\u6c34\u8fc7\u7684\u554a set map\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u9898\u5f00\u59cb\u80fd\u60f3\u5230\u4e00\u4e9b\u601d\u8def\uff0c\u4f46\u662f\u4e0d\u61c2\u600e\u4e48hash\u3002\u3002\n\n\u73b0\u5728\u77e5\u9053\u96c6\u5408hash\u53ef\u4ee5\u7528xor\u7684\u554a~\n\n\u5148\u968f\u673a\u4e00\u4e2along long\u8303\u56f4\u7684\u6570\u5b57\uff0c\u4e4b\u540exor\u5c31\u662f\u6574\u4e2a\u96c6\u5408\u7684hash\u503c\u4e86\u3002\u3002\n\n~~\u542c\u8bf4\u7528\u59b9\u5b50\u751f\u65e5\u505asrand()\u7684\u79cd\u5b50\u4f1a\u6709\u795e\u79d8\u52a0\u6210~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <set>\n#include <map>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib> \n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define uLL unsigned long long\n#define MAXN 0x186AF\nmap<uLL,bool> hash;\nset<int> zt;\nuLL h[MAXN],an[MAXN],size[MAXN];\nint at[MAXN];\nchar ch[8];\nint main(){\n    freopen(\"input2.txt\",\"r\",stdin);\n    freopen(\"input2.out\",\"w\",stdout);\n    srand(2001+06+28);  //\u8fd9\u4e2a\u6570\u591a\u5c11\u4e0d\u91cd\u8981\u5566\uff0c\u4e0d\u5c0f\u5fc3\u88ab\u5361\u5c31\u6362\u4e2a\u5c31\u884c\u4e86\u3002\u3002\n    int n,m,q; cin>>n>>m>>q;    \n    for(int i=1;i<=n;i++){\n        int k1=rand()<<16|rand()%1000000000,\n            k2=rand()<<16|rand()%2000000000;\n        an[i]=(uLL)k1*k2; h[1]^=an[i]; at[i]=1;  //\u871c\u6c41hash\n    }\n    hash.clear(); zt.insert(1); size[1]=n;\n    for(int i=1;i<=q;i++){\n        int x,y; scanf(\"%s%d%d\",ch,&x,&y);\n        if(ch[0]=='C'){\n            if(at[x]==y) continue;\n            zt.erase(at[x]); zt.erase(y);\n            h[at[x]]^=an[x]; size[at[x]]--;\n            if(!hash[h[at[x]]]) zt.insert(at[x]);        \n            at[x]=y; h[y]^=an[x]; size[y]++;             \n            if(!hash[h[y]]) zt.insert(y); //\u76f4\u63a5\u6a21\u62df\uff0c\u6709\u91cd\u590d\u7684\u5c31\u5220\n        }\n        else{\n            int ans=0; \n            set<int>::iterator it=zt.lower_bound(x);\n            for(;it!=zt.end()&&*it<=y;it=zt.lower_bound(x)){\n                ans+=size[*it]; hash[h[*it]]=1; zt.erase(it);\n            } //\u628a\u6ee1\u8db3\u6761\u4ef6\u7684i\u90fd\u52a0\u4e0a (x<=i<=y)\n            printf(\"%d\\n\", ans);\n        }\n    }\n}\n```\n~~\u5176\u5b9e\u51fa\u9898\u4eba\u4e0d\u60f3\u8ba9\u6211\u4eec\u8fd9\u4e48\u6c34\u7684\u662f\u4e48~~\n",
        "postTime": 1487328746,
        "uid": 18455,
        "name": "Enzymii",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2087 \u3010GTY\u7684\u4eba\u7c7b\u57fa\u56e0\u7ec4\u8ba1\u52122\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2087)\n\n\u8fd9\u91cc\u662f\u4e00\u7bc7 **\u7ebf\u6bb5\u6811** \u9898\u89e3~\n\n\u770b\u5230\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u533a\u95f4\u6c42\u548c\u64cd\u4f5c\u4ee5\u53ca\u4e00\u4e9b\u7279\u6b8a\u7684\u7edf\u8ba1\u8981\u6c42\uff0c\u5f88\u81ea\u7136\u7684\u5c31\u53ef\u4ee5\u60f3\u5230\u4f7f\u7528\u7ebf\u6bb5\u6811\u5904\u7406\u8fd9\u7c7b\u95ee\u9898\u3002\n\n\u9898\u76ee\u7684\u4e00\u4e2a\u96be\u70b9\u662f\u5982\u4f55\u5feb\u901f\u5224\u65ad\u65b0\u7684\u623f\u95f4\u662f\u5426\u53ef\u4ee5\u53c2\u4e0e\u65b0\u7684\u8d21\u732e\uff0c\u4ee5\u53ca\u5feb\u901f\u5904\u7406\u63d2\u5165\u5220\u9664\u64cd\u4f5c\u3002\u9898\u76ee\u4e2d\u53ea\u5b58\u5728\u5355\u4eba\u7684\u63d2\u5165\u5220\u9664\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8003\u8651\u5f02\u6216\u7684\u7279\u6b8a\u6027\u8d28\uff0c\u5373 $x=x \\oplus y \\oplus y$\uff0c\u5c06\u672c\u623f\u95f4\u5185\u6240\u6709\u5143\u7d20\u7684\u968f\u673a\u5173\u952e\u503c\u5f02\u6216\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u623f\u95f4\u7684\u5f02\u6216\u548c\u3002\u7528\u54c8\u5e0c\u8868\u6216\u662f map \u7ef4\u62a4\u8fd9\u4e9b\u5f02\u6216\u548c\uff0c\u5c31\u53ef\u4ee5\u5feb\u901f\u5f97\u5230\u65b0\u7684\u623f\u95f4\u7ec4\u6210\u662f\u5426\u6709\u8d21\u732e\u3002\n\n\u5728\u672c\u9898\u4e2d\uff0c\u67e5\u8be2\u64cd\u4f5c\u7684\u540c\u65f6\u4e5f\u8981\u8fdb\u884c\u533a\u95f4\u8d4b\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ed9\u8fd9\u6bb5\u533a\u95f4\u6253\u4e0a\u4e0d\u53ef\u8d21\u732e\u7684 tag\uff0c\u5148\u4e0d\u6025\u7740\u628a\u6bcf\u4e2a\u65b0\u51fa\u73b0\u7684\u4e0d\u53ef\u8d21\u732e\u623f\u95f4\u7edf\u8ba1\u8fdb\u54c8\u5e0c\u8868\u91cc\u53bb\u3002\u7b49\u67d0\u4e00\u6b21\u8be2\u95ee\u6216\u662f\u67d0\u4e00\u6b21\u4fee\u6539\u9012\u5f52\u8fdb\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u65f6\u518d\u8fdb\u884c\u7edf\u8ba1\u8fdb\u54c8\u5e0c\u8868\u53bb\u3002\n\n**\u4e0a\u8ff0\u505a\u6cd5\u6b63\u786e\u6027\u8bc1\u660e\uff1a** \u672c\u9898\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u662f\u5f7c\u6b64\u4e0d\u540c\u4e14\u72ec\u7acb\u7684\uff0c\u79fb\u52a8\u4eba\u7684\u64cd\u4f5c\u540c\u65f6\u81f3\u591a\u53ea\u4f1a\u79fb\u52a8 $1$ \u4e2a\u4eba\u3002\u7531\u4e8e\u6bcf\u4e2a\u4eba\u5f7c\u6b64\u4e0d\u540c\uff0c\u90a3\u4e48\u5728\u79fb\u52a8\u67d0\u4eba\u524d\u4e00\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u53e6\u4e00\u4e2a\u623f\u95f4\u542b\u6709\u8fd9\u4e2a\u4eba\u3002\u6240\u4ee5\u5728\u5bf9\u8be5\u623f\u95f4\u8fdb\u884c\u4fee\u6539\u4e4b\u524d\u5c31\u4e0d\u4f1a\u51fa\u73b0\u53e6\u4e00\u4e2a\u623f\u95f4\u4e0e\u8be5\u623f\u95f4\u7ec4\u6210\u76f8\u540c\u3002\u53c8\u56e0\u4e3a\u6bcf\u6b21\u81f3\u591a\u79fb\u52a8 $1$ \u4eba\uff0c\u90a3\u4e48\u5728\u6bcf\u6b21\u79fb\u52a8\u64cd\u4f5c\u5c31\u5fc5\u5b9a\u4f1a\u8bbf\u95ee\u5230\u8fd9\u4e2a\u4eba\u6709\u5173\u8054\u7684\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u8be2\u95ee\u5230\u53f6\u5b50\u8282\u70b9\u65f6\u518d\u628a\u5b83\u7edf\u8ba1\u8fdb\u54c8\u5e0c\u8868\u3002\n\n\u8fd9\u4e2a\u9898\u7528\u7ebf\u6bb5\u6811\u505a\u8fd8\u662f\u633a\u9ebb\u70e6\u7684\uff0c\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u5efa\u8bae\u7528 set \u8fc7\u7684\u4e5f\u7528\u7ebf\u6bb5\u6811\u5199\u4e00\u5199\uff0c\u975e\u5e38\u8003\u9a8c\u4ee3\u7801\u80fd\u529b\u3002\n\n\u6ce8\u610f\u5728\u5b9e\u73b0\u7684\u65f6\u5019\u8be2\u95ee\u540e\u53f6\u5b50\u8282\u70b9\u7684\u548c\u4e0d\u8981\u771f\u7684\u7f6e\u4e3a $0$\uff0c\u800c\u662f\u8ba9 tag \u4e3a $0$\u3002\u4f7f\u7528 pushdown \u4fdd\u8bc1\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9 tag \u4e0d\u4e3a $0$\u3002\u6ce8\u610f\u4e0d\u8981\u5fd8\u8bb0\u672c\u9898\u7684\u8be2\u95ee\u4e5f\u662f\u4e00\u79cd\u66f4\u6539\uff0c\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u8d21\u732e\u3002\n\n\u4ee3\u7801\u4e2d\u6ce8\u91ca\u5199\u7684\u5f88\u8be6\u7ec6\uff0c\u8fd8\u6ca1\u770b\u61c2\u53ef\u4ee5\u53bb\u770b\u4e00\u4e0b\u4ee3\u7801\u3002\n\n```cpp\n//\u4ee3\u7801\u4e2d\u4e0d\u540c\u51fd\u6570\u7ebf\u6bb5\u6811\u8282\u70b9\u6307\u9488\u547d\u540d\u53ef\u80fd\u6709\u6240\u4e0d\u540c\uff0c\u8bf7\u6ce8\u610f\n//\u6ce8\u610f\u4ee3\u7801\u4e2d\u90e8\u5206\u51fd\u6570\u53ef\u80fd\u591a\u6b21\u5b9a\u4e49pos\uff0cC++\u8c03\u7528\u53d8\u91cf\u65f6\u4f1a\u4f18\u5148\u8c03\u7528\u5c40\u90e8\u53d8\u91cf \n#include <cstdio>\n#include <unordered_map>//\u8bf7\u6ce8\u610funordered_map\u4ec5\u53ef\u5728C++11\u53ca\u4ee5\u4e0a\u7248\u672c\u4f7f\u7528 \n#include <cstdlib>\n#include <random>\nusing namespace std;\nint n,m,q,x,y,tmp,pos[100010],rd[100010];\nchar op[5];\nunordered_map <int,int> umap,umap1;//\u4f7f\u7528unordered_map\u4f1a\u6bd4\u666e\u901amap\u5feb\u5f88\u591a\n/*\u91c7\u7528unordered_map\u5b9e\u73b0hash\uff0c\n\u7f3a\u70b9\uff1a\u5e38\u6570\u5927\uff0c\u7406\u8bbaO(1)\uff0c\u6709\u51e0\u7387n^2\n\u4f18\u70b9\uff1a\u7801\u91cf\u5c0f\uff0c\u53ef\u9760\u6027\u9ad8\uff0c\u6613\u8c03\u8bd5*/ \nmt19937 rnd(1919810);\nstruct Node{//\u7ebf\u6bb5\u6811\u8282\u70b9\uff0c\u672c\u4eba\u559c\u6b22\u6307\u9488\u5efa\u6811 \n\tint l,mid,r;\n\tint sum,xr;//xr\u4e3a\u8be5\u8282\u70b9\u6240\u6709\u4ebaxor\u8d77\u6765\u4e4b\u540e\u7684\u503c \n\tint tag;//\u6807\u8bb0\u8be5\u8282\u70b9\u662f\u5426\u53ef\u4ee5\u5411\u4e0a\u8d21\u732e\uff0c1\u4e3a\u53ef\u8d21\u732e\uff0c0\u4e3a\u4e0d\u53ef\u8d21\u732e \n\tNode *lson,*rson;//lson=left_son rson=right_son \n}*head;\nNode* build(int l,int r){//\u5efa\u6811 \n\tNode *p=new(Node);\n\tp->l=l;p->r=r;p->mid=(l+r)>>1;\n\tp->sum=0;p->xr=tmp;p->tag=1;\n\tif(l==r){\n\t\tif(l==1){//\u5efa\u6811\u7684\u540c\u65f6\u7ed91\u53f7\u623f\u95f4\u8d4b\u521d\u503c \n\t\t\tp->sum=n;\n\t\t\tfor(int i=1;i<=n;i++){\n                do{\n                    rd[i]=rnd();\n                }while(umap1[rd[i]]==1);//\u6d88\u8017\u4e00\u70b9\u65f6\u95f4\u9632\u6b62\u975e\u914b\u60c5\u51b5\u51fa\u73b0~ \n                umap1[rd[i]]=1;\n\t\t\t\tp->xr^=rd[i];\n\t\t\t\tpos[i]=1;//pos[i]\u8868\u793a\u7f16\u53f7\u4e3ai\u7684\u4eba\u5f53\u524d\u6240\u5728\u7684\u623f\u95f4\u53f7 \n\t\t\t}\n\t\t}\n\t\treturn p;\n\t}\n\telse{\n\t\tp->lson=build(p->l,p->mid);\n\t\tp->rson=build(p->mid+1,p->r);\n\t\tp->sum=p->lson->sum+p->rson->sum;//\u7531\u4e8e\u521d\u59cbtag\u90fd\u662f1\u6240\u4ee5\u73b0\u5728\u4e0d\u9700\u4e58tag \n\t\treturn p;\n\t}\n}\nvoid pushdown(Node *p){//\u5f88\u7b80\u5355\u7684pushdown\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u601d\u8003\u4e00\u4e0b \n\tif(p->tag==0){\n\t\tp->lson->tag=0;\n\t\tp->rson->tag=0;//\u5de6\u53f3\u513f\u5b50\u5206\u522b\u7ee7\u627f\u7236\u4eb2\u7684\u4e0d\u53ef\u8d21\u732e\u72b6\u6001 \n\t\tp->tag=1;p->sum=0;//\u6807\u8bb0\u4e3a\u53ef\u8d21\u732e\u72b6\u6001\uff0c\u5e76\u628a\u8d21\u732e\u6e05\u7a7a \n\t}\n}\nint query(Node *nod){//\u67e5\u8be2\u64cd\u4f5c \n\tif(nod->l>=x&&nod->r<=y){\n\t\tif(nod->tag==0) return 0;//\u82e5\u8be5\u8282\u70b9\u4e0d\u53ef\u8d21\u732e\uff0c\u76f4\u63a5\u8fd4\u56de0 \n\t\tif(nod->l==nod->r){//\u6bcf\u6b21\u78b0\u5230\u5b50\u8282\u70b9\u4e0d\u53ef\u8d21\u732e\u65f6\u90fd\u5355\u72ec\u5904\u7406 \n\t\t\tumap[nod->xr]=1;\n\t\t}\n\t\tnod->tag=0;//\u67e5\u8be2\u540e\u8be5\u8282\u70b9\u53ca\u5176\u5b50\u6811\u5728\u4e0b\u6b21\u4fee\u6539\u524d\u4e00\u5b9a\u65e0\u6cd5\u8d21\u732e \n\t\treturn nod->sum;\n\t}\n\tpushdown(nod);\n\tint res=0;\n\tif(x<=nod->mid){\n\t\tres+=query(nod->lson);\n\t}\n\tif(y>nod->mid){\n\t\tres+=query(nod->rson);\n\t}\n\tnod->sum=nod->lson->tag*nod->lson->sum+nod->rson->tag*nod->rson->sum;//\u5411\u4e0a\u8d21\u732e \n//\u6ce8\u610f\u8fd9\u4e2a\u9898\u7684\u8be2\u95ee\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e00\u79cd\u4fee\u6539\uff0c\u6240\u4ee5\u8bb0\u5f97\u53ca\u65f6\u8ba1\u7b97\u8d21\u732e\n//\u5728\u8fd9\u91cc\u8c03\u4e86\u597d\u4e45 \n\treturn res;\n}\nvoid subch1(int pos,Node *nod){//\u5220\u9664\u51fd\u6570 \n\tif(nod->l==nod->r){\n\t\tif(nod->tag==0){//\u6bcf\u6b21\u78b0\u5230\u5b50\u8282\u70b9\u4e0d\u53ef\u8d21\u732e\u65f6\u90fd\u5355\u72ec\u5904\u7406 \n\t\t\tumap[nod->xr]=1;\n\t\t}\n\t\tnod->xr^=rd[x];\n\t\tif(umap[nod->xr]==0){//\u5224\u65ad\u53bb\u6389\u8fd9\u4e2a\u4eba\u65b0\u7684\u623f\u95f4\u7ec4\u6210\u662f\u5426\u53ef\u4ee5\u8d21\u732e \n\t\t\tnod->tag=1;\n\t\t}\n\t\telse{\n\t\t\tnod->tag=0;\n\t\t}\n\t\tnod->sum--;//\u51cf\u6389\u8fd9\u4e2a\u4eba \n\t\treturn;\n\t}\n\tpushdown(nod);\n\tif(pos<=nod->mid){\n\t\tsubch1(pos,nod->lson);\n\t}\n\telse{\n\t\tsubch1(pos,nod->rson);\n\t} \n\tnod->sum=nod->lson->tag*nod->lson->sum+nod->rson->tag*nod->rson->sum;\n//\u8ba1\u7b97\u5220\u9664\u540e\u7684\u8d21\u732e \n}\nvoid subch2(int pos,Node *nod){//\u91cd\u65b0\u63d2\u5165\u51fd\u6570 \n\tif(nod->l==nod->r){\n\t\tif(nod->tag==0){//\u6bcf\u6b21\u78b0\u5230\u5b50\u8282\u70b9\u4e0d\u53ef\u8d21\u732e\u65f6\u90fd\u5355\u72ec\u5904\u7406 \n\t\t\tumap[nod->xr]=1;\n\t\t}\n\t\tnod->xr^=rd[x];\n\t\tnod->sum++;\n\t\tif(umap[nod->xr]==0){//\u5224\u65ad\u52a0\u4e0a\u8fd9\u4e2a\u4eba\u65b0\u7684\u623f\u95f4\u7ec4\u6210\u662f\u5426\u53ef\u4ee5\u8d21\u732e \n\t\t\tnod->tag=1;\n\t\t}\n\t\telse{\n\t\t\tnod->tag=0;\n\t\t}\n\t\treturn;\n\t}\n\tpushdown(nod);\n\tif(pos<=nod->mid){\n\t\tsubch2(pos,nod->lson);\n\t}\n\telse{\n\t\tsubch2(pos,nod->rson);\n\t}\n\tnod->sum=nod->lson->tag*nod->lson->sum+nod->rson->tag*nod->rson->sum;\n//\u8ba1\u7b97\u8d21\u732e \n}\nvoid change(int pos){//C\u64cd\u4f5c\u7684\u51fd\u6570\uff0c\u5176\u4e2dpos\u4e3a\u6267\u884cC\u64cd\u4f5c\u524di\u53f7\u4eba\u7684\u4f4d\u7f6e \n\tsubch1(pos,head);//\u5148\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u628ai\u53f7\u4eba\u4ece\u539f\u6765\u7684\u623f\u95f4\u91cc\u5220\u6389 \n\tsubch2(y,head);//\u518d\u628ai\u53f7\u4eba\u63d2\u8fdby\u53f7\u623f\u95f4\u91cc \n}\nint main(){\n\ttmp=rnd();//\u6240\u6709\u623f\u95f4\u7684\u521d\u59cbxr\u503c \n\tscanf(\"%lld%lld%lld\",&n,&m,&q);\n\thead=build(1,m);//\u5efa\u6811 \n\tfor(int i=1;i<=q;i++){\n\t\tscanf(\"%s%lld%lld\",op,&x,&y);\n\t\tif(op[0]=='C'){\n\t\t\tchange(pos[x]);\n\t\t\tpos[x]=y;//\u66f4\u65b0\u4e00\u4e0bi\u53f7\u4eba\u73b0\u5728\u7684\u623f\u95f4\u4f4d\u7f6e \n\t\t}\n\t\telse{\n\t\t\tprintf(\"%lld\\n\",query(head));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1653902722,
        "uid": 359845,
        "name": "\u5c82\u975e",
        "ccfLevel": 4,
        "title": "\u9898\u89e3-P2087 GTY\u7684\u4eba\u7c7b\u57fa\u56e0\u7ec4\u8ba1\u52122"
    },
    {
        "content": "\uff08\u611f\u8c22\u7ba1\u7406\u5927\u5927\u767e\u5fd9\u4e4b\u4e2d\u62bd\u7a7a\u5ba1\u6838\uff01\uff09\n\n\u542c\u5230\u6c5f\u6e56\u4e0a\u8bf4\u8fd9\u9053\u9898\u8003STL\u8d76\u5feb\u5c31\u8fc7\u6765\u505a\u4e86\u3002\u3002\u3002\n\n~~\u7136\u540e\u6807\u7b7e\u662f\u5e73\u8861\u6811~~\n\n\u786e\u5b9e\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u505a\uff0c\u4f46\u662f\u4e0d\u7275\u626f\u5230\u6392\u540d\u65f6\u76f8\u6bd4\u4e0e130\u884c\u7684SPLAY\uff0c\u4f3c\u4e4eSET\u8981\u9999\u4e00\u70b9\u3002\n\n\u7136\u540e\u8fd9\u9053\u9898\u7684\u57fa\u7840\u601d\u8def\u4e5f\u5f88\u7b80\u5355\uff0c\u6309\u9898\u610f\u6a21\u62df\u5373\u53ef\u3002\n\n1.\u5efa\u7acb\u54c8\u5e0c\u8868\uff0c\u8bb0\u5f55\u4f7f\u7528\u8fc7\u7684\u7ec4\u5408\u3002\uff08\u8bb0\u5f55\u7ec4\u5408\u65f6\u53ef\u4ee5\u7528\u5f02\u6216\uff0c\u56e0\u4e3a\u5982\u679c\u7ec4\u5408\u4e2d\u4e0d\u5b58\u5728\u8be5\u6570\uff0c\u5f02\u6216\u53ef\u4ee5\u76f8\u5f53\u4e8e\u52a0\u6cd5\u52a0\u5165\u8fd9\u4e2a\u6570\u7684\u72b6\u6001\uff0c\u800c\u5b58\u5728\u8fd9\u4e2a\u6570\u65f6\uff0c\u53c8\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6570\u7684\u72b6\u6001\u62b5\u6d88\u6389\uff0c\u4e0d\u7528\u9ebb\u70e6\u7684\u5199\u52a0\u51cf\u6cd5\uff09\n\n2.\u5efa\u7acb\u6bcf\u4e2a\u6570\u7684\u54c8\u5e0c\u503c\uff08\u8d8a\u4e71\u8d8a\u597d\uff0c~~\u6211\u8c03\u8fd9\u4e2a\u8c03\u4e86\u4e00\u665a\u4e0a~~\uff0c\u8fd9\u9053\u9898\u5361\u54c8\u5e0c\uff09\n\n3.\u5efa\u7acb\u5e73\u8861\u6811\uff0c\u901a\u8fc7\u5e73\u8861\u6811\u6765\u8fdb\u884c\u533a\u95f4\u8bbf\u95ee\uff0c\u4ece\u800c\u51cf\u5c11\u5de5\u4f5c\u91cf\uff08\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u623f\u95f4\u662f\u4e0d\u4f1a\u52a0\u5165\u5e73\u8861\u6811\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u5feb\u901f\u67e5\u8be2\u6240\u9700\u623f\u95f4\uff09\n\n4.\u6bcf\u8fdb\u884c\u4e00\u6b21\u8f6c\u79fb\u4eba\u5458\uff0c\u90fd\u8981\u7ef4\u62a4\u4e00\u4e0b\u5f53\u524d\u503c\u80fd\u4e0d\u80fd\u91cd\u65b0\u52a0\u5165\u5e73\u8861\u6811\u3002\n\n5.\u4e0b\u9762\u662f\u4ee3\u7801\n\n6.\u63a8\u9500[\u6ca1\u4eba\u770b\u89c1\u6211](https://tian0-hjyh.blog.luogu.org/)\n\n```cpp\n#define BOLI_LINGMEN\n#define ITC_TL\n#include<bits/stdc++.h>\n#include<unordered_map>\nusing namespace std;\n#define ll long long int\nll n,m,q,l,r,at[2123456],siz[2123456],room[2123456],val[2123456];\nset<ll>s;\nset<ll>::iterator it;\nll sum1=0;\nunordered_map<ll,ll>h;\nll rethash(ll t) {\n\treturn (rand()%381278*rand()%101710171017ll*rand()*1949100871)%192608170817ll;\n}\nchar op[1];\nint main() {\n\tsrand(time(0));\n\tsrand(rand()%10171120);\n\tscanf(\"%lld%lld%lld\",&n,&m,&q);\n\tfor(register int i=1; i<=n; i++) val[i]=rethash(i);\n\tfor(register int i=1; i<=n; i++) at[i]=1,room[1]^=val[i];\n\tsiz[1]=n;\n\ts.insert(1);\n\twhile(q--) {\n\t\tscanf(\"%s%lld%lld\",&op,&l,&r);\n\t\tif(op[0]=='C') {\n\t\t\tif(at[l]==r) continue;\n\t\t\ts.erase(at[l]);\n\t\t\ts.erase(r);\n\t\t\tsiz[at[l]]--;\n\t\t\tsiz[r]++;\n\t\t\troom[at[l]]^=val[l];\n\t\t\troom[r]^=val[l];\n\t\t\tif(!h[room[at[l]]]) s.insert(at[l]);\n\t\t\tif(!h[room[r]]) s.insert(r);\n\t\t\tat[l]=r;\n\t\t} else {\n\t\t\tsum1=0;\n\t\t\tit=s.lower_bound(l);\n\t\t\tfor(; it!=s.end()&&*it<=r; it=s.lower_bound(l)) {\n\t\t\t\th[room[*it]]=1;\n\t\t\t\tsum1+=siz[*it];\n\t\t\t\ts.erase(it);\n\t\t\t}\n\t\t\tprintf(\"%lld\\n\",sum1);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u4f60\u4f1a\u53d1\u73b0\u65e0\u6cd5\u7f16\u8bd1\uff0c\u5173\u4e8e\u4e3a\u4ec0\u4e48\u3002\u3002\u3002\u3002\n\n\u4f60\u53ef\u4ee5\u5728\u7f16\u8bd1\u5668\u4e2d\u4f7f\u7528\u201c-std=c++11\u201d\n\n\u4e5f\u53ef\u4ee5\u5220\u53bbunordered\u8fd9\u4e2a\u4e1c\u897f\uff0c\u563f\u563f\u3002",
        "postTime": 1604363889,
        "uid": 242235,
        "name": "ITC_\u5929\u6ce0",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2087 \u3010GTY\u7684\u4eba\u7c7b\u57fa\u56e0\u7ec4\u8ba1\u52122\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2087)\n\n## \u601d\u8def\u89e3\u6790\n\u672c\u8d28\u4e0a\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u9053\u7eaf\u7cb9\u7684**\u6a21\u62df\u9898**\uff0c\n\n\u5bf9\u4e8e\u6bcf\u6b21\u7edf\u8ba1\u7b54\u6848\uff0c\u6bcf\u4e00\u4e2a\u623f\u95f4\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5b9e\u9645\u4e0a\u662f\u8fd9\u4e2a\u623f\u95f4\u4eba\u6570\u7684\u5927\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528\u6570\u7ec4\u6a21\u62df\u623f\u95f4\u7684\u4eba\u5458\u6d41\u52a8\u7684\u60c5\u51b5\uff0c\u5e76\u4e14\u7ef4\u62a4\u623f\u95f4\u4eba\u6570\u7684\u5927\u5c0f\u3002\n\n\u672c\u9898\u6700\u5927\u7684\u96be\u70b9\u5728\u4e8e\uff0c\u5728\u533a\u95f4\u67e5\u8be2\u65f6\u5e76\u4e0d\u662f\u6240\u6709\u7684\u623f\u95f4\u90fd\u53ef\u4ee5\u5bf9\u7b54\u6848\u7edf\u8ba1\u8d21\u732e\uff0c\u51fa\u73b0\u8fc7\u7684\u623f\u95f4**\u4eba\u5458\u7ec4\u5408\u60c5\u51b5**\u5373\u4e3a\u672c\u9898\u4e2d**\u4e0d\u5408\u6cd5**\u7684\u7b54\u6848\u8d21\u732e\uff0c\u53cd\u4e4b\u5373\u4e3a**\u5408\u6cd5**\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u7ef4\u62a4\u6bcf\u4e00\u6b21\u51fa\u73b0\u8fc7\u7684\u60c5\u51b5\u5e76\u6253\u4e0a\u6807\u8bb0\uff0c\u56e0\u6b64\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u8981\u4f7f\u7528 STL map \u6765\u5bf9\u6bcf\u79cd\u60c5\u51b5\u6253\u6807\u8bb0\u3002\n\n\u4f46\u662f\uff0c\u8981\u5982\u4f55\u628a\u7ea6 $n!$ \u79cd\u7ec4\u5408\u60c5\u51b5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u53ef\u6620\u5c04\u7684**\u91cf**\u5462\uff1f\u6211\u4eec\u56e0\u6b64\u8054\u60f3\u5230**\u96c6\u5408\u7684\u54c8\u5e0c\u503c**\u3002\n\n\u8ba1\u7b97\u96c6\u5408\u7684\u54c8\u5e0c\u503c\u6709\u8bb8\u591a\u65b9\u6cd5\uff0c\u800c\u672c\u9898\u4e2d\u6700\u597d\u9009\u7528\u5c06\u6bcf\u4e2a\u5143\u7d20\u7684\u54c8\u5e0c\u503c\u5f02\u6216\u8d77\u6765\u5f97\u5230\u96c6\u5408\u54c8\u5e0c\u503c\u7684\u65b9\u6cd5\uff0c\n\n\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u672c\u9898\u4e2d\u6709\u4fee\u6539\u64cd\u4f5c\uff0c\u8981**\u52a8\u6001\u7ef4\u62a4**\u6bcf\u4e00\u4e2a\u623f\u95f4\u7684\u4eba\u5458\u7ec4\u5408\u60c5\u51b5\u7684\u54c8\u5e0c\u503c\uff0c\n\n\u90a3\u4e48\u7531\u4e8e\u5f02\u6216\u8fd0\u7b97\u672c\u8eab\u7684\u6027\u8d28\uff0c$a\\oplus b\\oplus b=a$\uff0c\u5305\u542b\u4e86\u8fd9\u79cd\u72b6\u6001\u7684\u96c6\u5408\u5f02\u6216\u4e0a\u8fd9\u79cd\u72b6\u6001\u672c\u8eab\uff0c\u5c31\u53ef\u4ee5**\u53bb\u9664**\u8fd9\u79cd\u72b6\u6001\uff0c\u800c\u82e5\u662f\u539f\u672c\u4e0d\u5305\u542b\u8fd9\u79cd\u72b6\u6001\u7684\u96c6\u5408\u5219\u4f1a**\u7ee7\u627f**\u4e0a\u8fd9\u79cd\u72b6\u6001\uff0c\n\n\u56e0\u6b64\uff0c\u4f7f\u7528\u5f02\u6216\u8fd0\u7b97\u5c31\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5feb\u6377\u5730\u66f4\u65b0\u4eba\u5458\u6d41\u52a8\u5bf9\u4e8e\u54c8\u5e0c\u503c\u7684\u5f71\u54cd\uff0c\u5728\u4eba\u5458\u53d8\u52a8\u65f6\uff0c\u6211\u4eec\u53ea\u8981\u7b80\u5355\u5730\u5c06\u539f\u59cb\u623f\u95f4\u548c\u8f6c\u79fb\u7684\u623f\u95f4\u7684\u54c8\u5e0c\u503c\u5f02\u6216\u4e0a\u53d8\u52a8\u4eba\u5458\u7684\u54c8\u5e0c\u503c\u5c31\u53ef\u4ee5\u5b8c\u6210\u66f4\u65b0\u4e86\u3002\n\n\u90a3\u4e48\u5728\u533a\u95f4\u8be2\u95ee\u7edf\u8ba1\u7b54\u6848\u65f6\uff0c\u6211\u4eec\u8981\u67e5\u8be2**\u8fde\u7eed**\u533a\u95f4\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u8981\u5904\u7406\u5408\u6cd5\u6570\u636e\u7684\u63d2\u5165\u548c\u975e\u6cd5\u6570\u636e\u7684\u5220\u9664\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5e73\u8861\u6811\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u9700\u652f\u6301\u8fd9\u6837\u4e00\u4e9b\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 STL set\uff0c\u7ef4\u62a4**\u76ee\u524d\u5408\u6cd5**\u7684\u623f\u95f4\u53f7\u7801\u3002\n\n\u5728\u533a\u95f4\u8be2\u95ee\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 `lower_bound` \u8fc5\u901f\u5b9a\u4f4d\u5230\u533a\u95f4\u5de6\u7aef\u70b9\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u4e0d\u65ad\u5411\u53f3\u7aef\u70b9\u641c\u7d22\u8bbf\u95ee\uff0c\n\n\u5c06\u8bbf\u95ee\u5230\u7684 `set` \u4e2d\u5b58\u50a8\u7684\u623f\u53f7\u5f53\u524d\u4eba\u5458\u7ec4\u5408\u7684\u54c8\u5e0c\u503c\u7d2f\u52a0\u5165\u7b54\u6848\uff0c\u518d\u5728 `set` \u4e2d\u5220\u9664\uff0c\u5728 `map` \u4e2d\u6807\u8bb0\u3002\n\n## \u5176\u4ed6\u7ec6\u8282\n\u672c\u9898\u5bf9\u4e8e\u54c8\u5e0c\u503c\u7684\u5f3a\u5ea6\u8981\u6c42\u8f83\u9ad8\uff0c\n\n\u6211\u4eec\u5e38\u7528\u7684\u751f\u6210\u968f\u673a\u6570\u7684 `rand()` \u51fd\u6570\u5728 Windows \u7cfb\u7edf\u4e0b\u8fd4\u56de\u503c\u7684\u53d6\u503c\u8303\u56f4\u4e3a $[0,2^{15})$\uff0c\u5728 Linux \u73af\u5883\u4e0b\u4e5f\u4ec5\u4e3a $[0,2^{31})$\uff0c\u53ef\u80fd\u4e0d\u8db3\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\uff0c\n\n\u5982\u679c\u9700\u8981\u66f4\u5927\u7684\u968f\u673a\u6570\uff0c\u6211\u4eec\u9700\u8981\u5bf9 `rand()` \u7684\u7ed3\u679c\u8fdb\u884c\u4e00\u4e9b\u5904\u7406\u3002\n\n\u5f53\u7136\u6211\u4eec\u8fd8\u6709\u5176\u4ed6\u7684\u9009\u62e9\uff0c\u50cf\u6807\u51c6\u5e93\u4e2d\u7684\u9884\u5b9a\u4e49\u968f\u673a\u6570\u751f\u6210\u5668\uff0c\u4f8b\u5982 `mt19937_64`\uff0c\u5b83\u53ef\u4ee5\u8fd4\u56de\u8d28\u91cf\u66f4\u9ad8\u7684 $64$ \u4f4d\u968f\u673a\u6570\uff0c\u9664\u6b64\u4e4b\u5916\u7684\u5176\u4ed6\u4f18\u52bf\u548c\u5177\u4f53\u7528\u6cd5\uff0c\u53ef\u4ee5\u53c2\u8003[\u6b64\u5904](https://oi-wiki.org/misc/random/)\uff0c\u672c\u6587\u5c31\u4e0d\u591a\u8d58\u8ff0\u4e86\u3002\n\n## \u9644\u4e0a\u4ee3\u7801\n\u5728\u4ee5\u4e0b\u4ee3\u7801\u4e2d\uff0c\u7528 $hs$ \u6570\u7ec4\u8868\u793a\u6bcf\u4e2a\u4eba\u7684\u54c8\u5e0c\u503c\uff0c$siz$ \u6570\u7ec4\u8868\u793a\u6bcf\u4e2a\u623f\u95f4\u76ee\u524d\u7684\u4eba\u6570\uff0c$rm$ \u6570\u7ec4\u8868\u793a\u6bcf\u4e2a\u623f\u95f4\u76ee\u524d\u7684\u4eba\u5458\u7ec4\u5408\u7684\u54c8\u5e0c\u503c\uff0c$p$ \u6570\u7ec4\u8868\u793a\u6bcf\u4e2a\u4eba\u76ee\u524d\u6240\u5728\u7684\u623f\u53f7\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define maxn 100010\n#define INF LLONG_MAX\nusing namespace std;\nint n,m,q;\nint hs[maxn],siz[maxn],rm[maxn],p[maxn];\nmap<int,bool>Map;\nset<int>s;\nvoid change(int x,int y)\n{\n    s.erase(p[x]); s.erase(y);//\u6682\u65f6\u5168\u90e8\u5220\u9664\n    rm[p[x]]^=hs[x]; rm[y]^=hs[x];\n    siz[p[x]]--; siz[y]++;\n    if(Map.find(rm[p[x]])==Map.end())s.insert(p[x]);//\u53ea\u52a0\u5165\u4ecd\u53ef\u4ee5\u4ea7\u751f\u8d21\u732e\u7684\u623f\u95f4\u53f7\n    if(Map.find(rm[y])==Map.end())s.insert(y);//\u540c\u4e0a\n    p[x]=y;\n}\nint query(int x,int y)\n{\n    int ans=0;\n    for(auto it=s.lower_bound(x);it!=s.end();it=s.lower_bound(x))\n    {\n        int temp=*it;\n        if(temp>y)break;//\u5927\u4e8e\u533a\u95f4\u53f3\u7aef\u70b9\n        Map[rm[temp]]=1; s.erase(it);\n        ans+=siz[temp];\n    }\n    return ans;\n}\nsigned main()\n{\n    cin>>n>>m>>q;\n    mt19937_64 Rand(time(0));\n    for(int i=1;i<=n;++i)\n    {\n        hs[i]=Rand()%INF;\n        p[i]=1;\n        rm[1]^=hs[i];//\u521d\u59cb\u53161\u53f7\u623f\u95f4\u7684\u4fe1\u606f\n    }\n    siz[1]=n;\n    while(q--)\n    {\n        char op;\n        int x,y;\n        cin>>op>>x>>y;\n        if(op=='C')change(x,y);\n        else cout<<query(x,y)<<'\\n';\n    }\n\treturn 0;\n}\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1664537852,
        "uid": 625380,
        "name": "FriedrichC",
        "ccfLevel": 0,
        "title": "P2087 GTY\u7684\u4eba\u7c7b\u57fa\u56e0\u7ec4\u8ba1\u52122 \u9898\u89e3"
    },
    {
        "content": "\u5f88\u597d\u7684\u6570\u636e\u7ed3\u6784\u5e94\u7528\u9898\u3002\n\n\u672c\u9898\u7684\u4e00\u4e2a\u6838\u5fc3\u64cd\u4f5c\u5c31\u662f\u8981\u7edf\u8ba1\u4e0d\u540c\u96c6\u5408\u7684\u6570\u91cf\u3002\u8bf4\u7684\u66f4\u51c6\u786e\u4e00\u4e9b\uff0c\u8fd9\u4e9b\u4e0d\u540c\u96c6\u5408\u662f**\u4e00\u4e2a\u53ef\u91cd\u8d85\u96c6\u7684\u4e0d\u540c\u53ef\u91cd\u5b50\u96c6**\u3002\u8981\u6c42\u7edf\u8ba1\u4e0d\u540c\u96c6\u5408\u6570\u91cf\uff0c\u5f88\u81ea\u7136\u5c31\u80fd\u60f3\u5230\u54c8\u5e0c\u503c\u3002\n\n\u54c8\u5e0c\u503c\u7684\u8ba1\u7b97\u65b9\u5f0f\u6709\u5f88\u591a\uff0c\u5728\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e2a\u5b9e\u73b0\u7b80\u5355\u4e14\u6709\u6548\u7684\u6280\u5de7\uff1a\u7ed9\u6bcf\u4e2a\u5143\u7d20\u4e00\u4e2a\u4e0d\u540c\u7684\u54c8\u5e0c\u503c\uff0c\u90a3\u4e48\u6bcf\u4e2a\u96c6\u5408\u7684\u54c8\u5e0c\u503c\u5c31\u53ef\u4ee5\u7528**\u7ec4\u6210\u5143\u7d20\u7684\u5f02\u6216\u548c**\u6765\u8868\u793a\u3002\n\n\u7531\u4e8e\u5f02\u6216\u8ba1\u7b97\u7684\u7279\u6b8a\u6027 $a \\operatorname{xor} b \\operatorname{xor}b=a$\uff0c\u5f88\u65b9\u4fbf\u5730\u5c31\u80fd\u8ba1\u7b97\u96c6\u5408\u4e2d\u589e\u51cf\u67d0\u4e2a\u5143\u7d20\u540e\u7684\u7ed3\u679c\uff1a\u76f4\u63a5\u5c06\u8be5\u96c6\u5408\u7684\u54c8\u5e0c\u503c\u5f02\u6216\u4e0a\u8fd9\u4e2a\u5143\u7d20\u7684\u54c8\u5e0c\u503c\u3002\u7edf\u8ba1\u4e0d\u540c\u7684\u54c8\u5e0c\u503c\u53ef\u4ee5\u4f7f\u7528\u5e73\u8861\u6811\uff0c\u4f46\u662f\u672c\u9898\u4f7f\u7528\u5230\u7684\u5e73\u8861\u6811\u64cd\u4f5c\u975e\u5e38\u7684\u5c11\uff08\u4ec5\u9650\u4e8e\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u91cd\uff09\uff0c\u4f7f\u7528\u73b0\u6210\u7684 `std::set` \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u672c\u9898\u9700\u8981\u4e24\u4e2a `set`\uff1a\u4e00\u4e2a\u7528\u4f5c\u7edf\u8ba1**\u88ab\u6807\u8bb0\u8fc7\u7684**\u96c6\u5408 $A$\uff1b\u4e00\u4e2a\u7528\u4f5c\u7edf\u8ba1**\u5f53\u524d\u51fa\u73b0\u7684**\u96c6\u5408 $B$\u3002\u540c\u65f6\u8fd8\u9700\u8981\u4fdd\u5b58\u6240\u6709\u96c6\u5408\u7684\u54c8\u5e0c\u503c\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u5b9e\u73b0\u3002\n\n**\u8f6c\u79fb\u64cd\u4f5c**\u3002\u5c06\u539f\u5c5e\u96c6\u5408\u3001\u8f6c\u79fb\u76ee\u6807\u5f02\u6216\u4e0a\u8be5\u5143\u7d20\u7684\u54c8\u5e0c\u503c\uff0c\u540c\u65f6\u4ece $B$ \u4e2d\u53bb\u9664\u539f\u5c5e\u96c6\u5408\u3001\u8f6c\u79fb\u76ee\u6807\u3002\u5982\u679c\u53d1\u73b0\u751f\u6210\u4e86\u65b0\u7684\u96c6\u5408\u4e14\u8fd9\u4e9b\u96c6\u5408\u6ca1\u6709\u88ab\u6807\u8bb0\u8fc7\uff08\u4e0d\u5c5e\u4e8e $B$\uff09\uff0c\u90a3\u4e48\u653e\u5230 $A$ \u4e2d\u3002\n\n**\u7edf\u8ba1\u64cd\u4f5c**\u3002\u56e0\u4e3a `set` \u662f\u81ea\u5e26\u6392\u5e8f\u7684\uff0c\u9700\u8981\u4f7f\u7528 `lower_bound` \u6765\u7d22\u5f15\u5230**\u5927\u4e8e $l$ \u6240\u6709\u96c6\u5408**\u3002\u5c06\u7d22\u5f15\u5230\u7684\u96c6\u5408\u6807\u8bb0\uff08\u52a0\u5165 $B$\uff09\u3001\u4ece $A$ \u4e2d\u53bb\u9664\u3001\u5e76\u7d2f\u52a0\u7b54\u6848\u3002\u5f53\u7d22\u5f15\u5230\u5927\u4e8e $r$ \u7684\u96c6\u5408\u65f6\u9000\u51fa\u5faa\u73af\u3002\n\n\u54c8\u5e0c\u503c\u7684\u9009\u53d6\u5c3d\u91cf\u4f7f\u7528\u503c\u57df\u6bd4\u8f83\u5927\u7684 $\\texttt{long long}$\uff0c\u7531\u4e8e `rand` \u51fd\u6570\u8fd4\u56de\u7684\u503c\u57df\u6bd4\u8f83\u5c0f\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86\u5f02\u6216\u9b54\u6cd5\u6570\u5b57\u7684\u65b9\u5f0f\uff0c\u51b2\u7a81\u7387\u6bd4\u8f83\u5c0f\u3002\u5177\u4f53\u7ec6\u8282\u53ef\u89c1\u4ee3\u7801\uff08\u7701\u7565\u5934\u6587\u4ef6\u548c\u90e8\u5206\u58f0\u660e\uff09\uff1a\n\n```\nint room[maxn];\nint size[maxn];\nint pos[maxn];\nint hsh[maxn];\n\nset<long long> A;\nset<long long> B;\n\nint Rand() {\n\treturn (rand() << 8) xor (rand()) xor 0xc612ec3f; // 0xc612ec3f\u9b54\u6cd5\u503c\uff0c\u53ef\u4efb\u610f\u6307\u5b9a\n}\n\nint main() {\n\tint n, m, q; cin >> n >> m >> q;\n\tfor(int i = 1; i <= n; i++) hsh[i] = Rand();\n\tfor(int i = 1; i <= n; i++) pos[i] = 1, room[1] = room[1] xor hsh[i];\n\tsize[1] = n;\n\twhile(q--) {\n\t\tchar k;\n\t\tint x, y; cin >> k >> x >> y;\n\t\tif(k == 'C') {\n\t\t\tA.erase(pos[x]); A.erase(y);\n\t\t\tsize[pos[x]]--, size[y]++;\n\t\t\troom[pos[x]] = room[pos[x]] xor hsh[x];\n\t\t\troom[y] = room[y] xor hsh[x];\n\t\t\tif(!B.count(room[pos[x]])) A.insert(pos[x]);\n\t\t\tif(!B.count(room[y])) A.insert(y);\n\t\t\tpos[x] = y;\n\t\t}\n\t\telse {\n\t\t\tint ans = 0;\n\t\t\tfor(\n\t\t\t\tset<long long>::iterator it = A.lower_bound(x);\n\t\t\t\tit != A.end();\n\t\t\t\tit = A.lower_bound(x)\n\t\t\t) {\n\t\t\t\tint cur = *it;\n\t\t\t\tif(cur > y) break;\n\t\t\t\tB.insert(room[cur]), A.erase(it);\n\t\t\t\tans += size[cur];\n\t\t\t}\n\t\t\tcout << ans << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n_\u9644\uff1a\u9898\u9762\u4e2d\u5bf9\u4eba\u505a\u5b9e\u9a8c\u4e4b\u7c7b\u7684\uff0c\u672c\u4eba\u8ba4\u4e3a\u53ef\u80fd\u9700\u8981\u548c\u8c10\u3002_",
        "postTime": 1649303521,
        "uid": 188950,
        "name": "UruhaRushia",
        "ccfLevel": 6,
        "title": "P2087"
    },
    {
        "content": "\u5212\u6c34\u4e86\u3002              \n\n\u8fd9\u9898\u9762\u786e\u5b9e\u96be\u770b\u2026\u2026\u4e0d\u96be\u53d1\u73b0\u4e00\u6b21\u4e00\u4e2a\u4eba\u7684\u79fb\u52a8\u6700\u591a\u53ea\u4f1a\u591a\u51fa\u6765\u4e24\u79cd\u8d21\u732e\uff0c\u5e76\u4e14\u4e00\u79cd\u8d21\u732e\u8d21\u732e\u5b8c\u4e86\u4e4b\u540e\u5c31\u4e0d\u4f1a\u518d\u8d21\u732e\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u533a\u95f4\u6709\u54ea\u4e9b\u623f\u95f4\u8981\u8d21\u732e\u5373\u53ef\u3002          \n\n\u8003\u8651\u5927\u529b Hash\uff0c\u6211\u4eec\u76f4\u63a5\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u968f\u673a\u4e00\u4e2a\u503c\uff0c\u4e00\u4e2a\u623f\u95f4\u7684 Hash \u503c\u5c31\u662f\u5176\u4e2d\u6240\u6709\u4eba\u7684\u968f\u673a\u503c\u6309\u4f4d\u5f02\u6216\u8d77\u6765\uff0c\u7136\u540e\u4fee\u6539\u64cd\u4f5c\u66b4\u529b\u6539\u67e5\u8be2\u64cd\u4f5c\u5f00\u4e2a set\uff0c\u5927\u529b\u7ef4\u62a4\u4e00\u4e0b\u4e2d\u95f4\u6709\u54ea\u4e9b\u623f\u95f4\u8981\u8d21\u732e\uff0c\u8d21\u732e\u5b8c\u4e4b\u540e\u5220\u6389\u5c31\u53ef\u4ee5\u4e86\uff0c\u6700\u540e\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(q \\log n)$\u3002\n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 1e5 + 5;\n#define ull unsigned long long\nmap<ull,int> mp;\nset<int> st;\nset<int>::iterator it;\nunsigned long long val[Len],Num[Len],Sd;\nint n,m,q,sum[Len],bel[Len],l,r,del[Len],delcnt;bool flag[Len];\nchar s[5];\nint main()\n{\n\tsrand(114514);\n\tSd = rand();\n\tscanf(\"%d %d %d\",&n,&m,&q);\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tval[i] = 1ull * rand() * rand() * rand() , val[i] *= Sd;\n\t\tNum[1] ^= val[i];\n\t\tsum[1] ++;\n\t\tbel[i] = 1;\n\t}\n\tst.insert(1);\n\twhile(q --)\n\t{\n\t\tscanf(\"%s\",s);scanf(\"%d %d\",&l,&r);\n\t\tif(s[0] == 'C')\n\t\t{\n\t\t\tif(bel[l] == r) continue;\n\t\t\tif(flag[bel[l]]) st.erase(bel[l]) , flag[bel[l]] = 0;\n\t\t\tif(flag[r]) st.erase(r) , flag[r] = 0;\n\t\t\tsum[bel[l]] --;\n\t\t\tsum[r] ++;\n\t\t\tNum[bel[l]] ^= val[l];\n\t\t\tNum[r] ^= val[l];\n\t\t\tif(!mp[Num[bel[l]]]) st.insert(bel[l]) , flag[bel[l]] = 1;\n\t\t\tif(!mp[Num[r]]) st.insert(r) , flag[r] = 1;\n\t\t\tbel[l] = r;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint res = 0;delcnt = 0;\n\t\t\tit = st.lower_bound(l);\n\t\t\tfor(; it != st.end() && *it <= r ; it ++) \n\t\t\t{\n\t\t\t\tmp[Num[*it]] = 1;\n\t\t\t\tres += sum[*it];\n\t\t\t\tdel[++ delcnt] = *it;\n\t\t\t}\n\t\t\tfor(int i = 1 ; i <= delcnt ; i ++) \n\t\t\t{\n\t\t\t\tit = st.lower_bound(del[i]);\n\t\t\t\tst.erase(it);\n\t\t\t\tflag[del[i]] = 0;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",res);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1630389923,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2087 GTY\u7684\u4eba\u7c7b\u57fa\u56e0\u7ec4\u8ba1\u52122"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2087)\n\n----\n\n\u8981\u6c42\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\u79fb\u52a8\u548c\u533a\u95f4\u6c42\u548c\u3002\n\n\u533a\u95f4\u6c42\u548c\u6709\u7279\u6b8a\u8981\u6c42\uff0c\u5df2\u7ecf\u4f5c\u4e3a\u7ec4\u4e3a\u5355\u4f4d\u7684\u6c42\u8fc7\u70b9\u6570\uff0c\n\n\u4e4b\u540e\u8fd9\u4e2a\u7ec4\u4e0d\u80fd\u5728\u8d21\u732e\u70b9\u6570\u3002\n\n----\n\n\u201c\u5982\u679c\u4e00\u4e2a\u623f\u95f4\u91cc\u7684\u4e00\u7fa4\u4eba\u5df2\u7ecf\u505a\u8fc7\u5b9e\u9a8c\u4e86\u90a3\u4e48\u8fd9\u4e9b\u4eba\u5c06\u4e0d\u4f1a\u589e\u52a0\u5b9e\u9a8c\u4fe1\u606f\u70b9\u6570\u3002\u201d\n\n\u770b\u5230\u8fd9\u53e5\u8bdd\u7684\u65f6\u5019\u5c31\u8be5\u60f3\u5230\u7528$\\texttt{hash}$\u5224\u91cd\uff0c\u901a\u8fc7\u5f02\u6216\u6765\u4fee\u6539$\\texttt{hash}$\u503c\uff0c\n\n$\\texttt{map}$\u5224\u91cd\uff0c\u4f46\u8fd9\u91cc\u5361\u79cd\u5b50\uff0c\u6240\u4ee5\u6253\u4e86\u4e2a\u53cc\u54c8\u5e0c\u3002\n\n$\\texttt{set}$\u6765\u7ef4\u62a4\u53ef\u8fdb\u884c\u5b9e\u9a8c\u7684\u623f\u53f7\u3002\n\n---\n\n$\\texttt{sum,bel}$\u5206\u522b\u662f\u5bf9\u5e94\u623f\u53f7\u7684\u4eba\u6570\u548c\u4eba\u5bf9\u5e94\u54ea\u4e2a\u623f\u53f7\u3002\n\n$\\texttt{p,p2}$\u662f\u968f\u673a\u5206\u914d\u7ed9\u4eba\u7684$\\texttt{hash}$\u503c\u3002\n\n$\\texttt{ha,h}$\u662f\u5bf9\u5e94\u623f\u95f4\u7684$\\texttt{hash}$\u503c\n\n----\n\n```cpp\n#include <map>\n#include <set>\n#include <ctime>\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <climits>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\ntemplate<typename T>void read(T &x) {\n\tT f = 1;x = 0;char s = getchar();\n\twhile(s < '0' || s > '9') {if(s == '-')f = -1;s = getchar();}\n\twhile(s >= '0' && s <= '9') {x = x * 10 + s - '0';s = getchar();}\n\tx *= f;\n}\ntemplate<typename T>void print(T x) {\n\tif(x < 0) putchar('-'),x = -x;\n\tif(x > 9\t) print(x / 10);\n\tputchar(x % 10 + '0');\n}\ntypedef unsigned long long ull;\nmap<ull,int> vis;\nmap<ull,int> vis2;\nset<int> s;\null p[100005],p2[100005],ha[100005],h[100005];\nint n,m,q,sum[100005],bel[100005];\nint main() {\n\tread(n);read(m);read(q);\n\tint seed  = rand();\n\tfor (int i = 1 ; i <= n ; ++ i) {\n\t\tp[i] = rand() * rand() * rand() * rand() * seed;\n\t\tp2[i] = rand() * seed;\n\t\tseed = rand() * rand();\n\t\tbel[i] = 1;\n\t\tha[1] ^= p[i];\n\t\th[1] ^= p2[i];\n\t}\n\tsum[1] = n;\n\ts.insert(1);\n\tchar str[3];\n\tint x,y;\n\tfor (int i = 1 ; i <= q ; ++ i) {\n\t\tscanf (\"%s %d %d\",str,&x,&y);\n\t\tif (*str == 'C') {\n\t\t\tint xx = bel[x];\n\t\t\tif (xx == y) continue;\n\t\t\ts.erase(xx);s.erase(y);\n\t\t\tbel[x] = y;\n\t\t\tha[xx] ^= p[x];\n\t\t\th[xx] ^= p2[x];\n\t\t\tsum[xx] --;\n\t\t\tif (!vis[ha[xx]] || !vis2[h[xx]]) s.insert(xx);\n\t\t\tha[y] ^= p[x];\n\t\t\th[y] ^= p2[x];\n\t\t\tsum[y] ++;\n\t\t\tif (!vis[ha[y]] || !vis2[h[y]]) s.insert(y);\n\t\t}\n\t\telse {\n\t\t\tset<int>::iterator it = s.lower_bound(x);\n\t\t\tint ans = 0;\n\t\t\tfor (; it != s.end() && *it <= y ; it = s.lower_bound(x)) {\n\t\t\t\tans += sum[*it];\n\t\t\t\ts.erase(it);\n\t\t\t\tvis[ha[*it]] = 1;\n\t\t\t\tvis2[h[*it]] = 1;\n\t\t\t}\n\t\t\tprint(ans),putchar('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1596081308,
        "uid": 163516,
        "name": "Strelitzia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2087 \u3010GTY\u7684\u4eba\u7c7b\u57fa\u56e0\u7ec4\u8ba1\u52122\u3011"
    },
    {
        "content": "\u592a\u849f\u84bb\u4e86\u3002 \u53d1\u9898\u89e3\uff01\uff01\uff01\n\n\u3010\u9898\u89e3\u3011\u3010STL\u7684\u5e94\u7528\uff0c\u4e00\u6539\u5f80\u5e38\u4e00\u7528STL\u5c31\u8363\u83b7TLE\u7684\u7ecf\u5386\u554a\uff0c\u770b\u6765\u4ee5\u524d\u8fd8\u662f\u4f7f\u7528\u7684\u4e0d\u591f\u4f18\u8d8a\u3011\n\n\u3010\u8fd9\u9053\u9898\uff0c\u5148\u7ed9\u6240\u6709\u7684\u4eba\u968f\u673a\u4e00\u4e2a\u503c\uff0c\u56e0\u4e3a\u662f\u7ed9\u4e00\u4e2a\u96c6\u5408\u5224\u91cd\uff0c\u6240\u4ee5\u5224\u91cd\u7684\u65f6\u5019\uff0c\u5c06\u51e0\u4e2a\u4eba\u7684\u503c\u5f02\u6216\u8d77\u6765\uff0c\u7528map\u5224\u65ad\u662f\u5426\u51fa\u73b0\u8fc7\uff1b\u5c06\u6bcf\u4e00\u6b21\u79fb\u52a8\u540e\u5408\u6cd5\u7684\u96c6\u5408\u5373\u623f\u95f4\u53f7\u5b58\u5728set\u91cc\uff0c\u6bcf\u4e00\u6b21\u79fb\u52a8\u65f6\uff0c\u5148\u5c06\u76f8\u5173\u7684\u4e24\u4e2a\u623f\u95f4\u7684\u5e8f\u53f7\u5148\u4eceset\u91cc\u5220\u6389\uff0c\u518d\u5c06\u5408\u6cd5\u7684\u52a0\u5165\u3002\n\n\u8bb0\u5f55\uff1a\u6bcf\u4e2a\u623f\u95f4\u7684\u4eba\u6570\uff0c\u6bcf\u4e2a\u4eba\u7684\u7f16\u53f7\uff0c\u6bcf\u4e2a\u623f\u95f4\u7684\u5f53\u524d\u5f02\u6216\u503c\u3002\u3011\n\ncode\uff1a\n\n```cpp\n#include<map>\n#include<set>\n#include<ctime>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nset<int>s;//\u5b58\u5408\u6cd5\u7684\u623f\u95f4\u53f7 \nmap<long long,bool>mp;//\u5224\u91cd \nlong long  num[100010],p[1000010],b[1000010],h[1000010];\nint n,m,q;\n\nint main()\n{\n    int i,j;\n    srand(1289);\n\n    scanf(\"%d%d%d\\n\",&n,&m,&q);\n    for(i=1;i<=n;++i) num[i]=(long long)rand()*rand()%1000000000*(rand()*rand()%2000000000);//\u7ed9\u6bcf\u4e2a\u4eba\u968f\u673a\u4e00\u4e2a\u503c \n    s.insert(1);//\u56e0\u4e3a\u521a\u5f00\u59cb\u6240\u6709\u4eba\u90fd\u5728\u7b2c\u4e00\u4e2a\u623f\u95f4\uff0c\u5148\u5c06\u7b2c\u4e00\u4e2a\u623f\u95f4\u52a0\u5165set \n    for(i=1;i<=n;++i) h[1]^=num[i],p[1]++,b[i]=1;//h\u5b58\u5f53\u524d\u623f\u95f4\u7684\u5f02\u6216\u503c\uff1bp\u5b58\u5f53\u524d\u623f\u95f4\u7684\u4eba\u6570\uff1bb\u5b58\u5f53\u524d\u6bcf\u4e2a\u4eba\u5728\u54ea\u4e2a\u623f\u95f4 \n    for(i=1;i<=q;++i)//\u8be2\u95ee\u548c\u64cd\u4f5c\u603b\u5171\u4e0d\u8d85\u8fc710^5,\u4e14\u6bcf\u6b21\u64cd\u4f5c\u53ea\u79fb\u52a8\u4e00\u4e2a\u4eba\uff0c\u6240\u4ee5\u8303\u56f4\u53ef\u4ee5\u4f7f\u7528STL \n     {\n        char c;\n        int x,y;\n        scanf(\"%c\",&c);\n        scanf(\"%d%d\\n\",&x,&y);\n        if(c=='C')\n          {\n            if(b[x]==y) continue;//\u770b\u64cd\u4f5c\u540e\u662f\u5426\u6362\u4e86\u623f\u95f4 \n            s.erase(b[x]); s.erase(y);//\u5c06\u539f\u6765\u7684\u72b6\u6001\u79fb\u51faset \n\n            h[b[x]]^=num[x];\n            p[b[x]]--;\n            if (!mp[h[b[x]]]) s.insert(b[x]);\n\n            h[y]^=num[x];\n            p[y]++;\n            if (!mp[h[y]]) s.insert(y);\n\n            b[x]=y;\n          }\n         else\n          if(c=='W')\n           {\n             int ans=0;\n             set<int>::iterator it=s.lower_bound(x);\n             for(;it!=s.end()&&*it<=y;it=s.lower_bound(x))\n              {\n                mp[h[*it]]=1;\n                ans+=p[*it];\n                s.erase(it);\n              } \n             printf(\"%d\\n\",ans);\n          }\n     }\n     return 0;\n}\n```",
        "postTime": 1537001841,
        "uid": 104321,
        "name": "yi_heng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2087 \u3010GTY\u7684\u4eba\u7c7b\u57fa\u56e0\u7ec4\u8ba1\u52122\u3011"
    }
]