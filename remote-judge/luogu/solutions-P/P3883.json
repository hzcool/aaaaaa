[
    {
        "content": "\u4e4d\u4e00\u770b\u5b57\u7b26\u96c6\u662f\u6240\u6709\u7684\u8d70\u6cd5\uff0c\u5e94\u8be5\u662f$6*8*8*2$\u7684\u5927\u5c0f\uff0c\u4f46\u5176\u5b9e\u5b57\u7b26\u96c6\u5e94\u8be5\u662f\u53ef\u80fd\u51fa\u73b0\u7684\u6240\u6709\u5355\u4e2a\u5b57\u7b26\u5171$6+8+8+1$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528AC\u81ea\u52a8\u673a\u4e86\uff0c\u901f\u5ea6\u4e0e\u540e\u7f00\u6570\u7ec4\u505a\u6cd5\u57fa\u672c\u76f8\u5f53\uff0c\u4f46\u662f\u7a7a\u95f4\u5360\u7528\u8981\u5927\u4e00\u4e9b\n```\n#include<iostream>\n#include<queue>\n#include<string>\nusing namespace std;\n\nint trans[128];\nint cnt=0;\nvoid init()\n{\n\t//\u5efa\u7acb\u5b57\u7b26\u5230\u6574\u6570\u7684\u6620\u5c04\n    int cnt=0;\n    trans['K']=++cnt;\n    trans['Q']=++cnt;\n    trans['B']=++cnt;\n    trans['N']=++cnt;\n    trans['R']=++cnt;\n    trans['P']=++cnt;\n    trans['x']=++cnt;\n    trans[0]=++cnt;\n    for(char i='a';i<='h';++i)\n    {\n        trans[i]=++cnt;\n    }\n    for(char i='1';i<='8';++i)\n    {\n        trans[i]=++cnt;\n    }\n}\n\nstring name[2005];\n//\u5b9a\u5f0f\u540d\nbool vis[2005];\n//\u662f\u5426\u51fa\u73b0\n\nstruct Tree\n{\n    int fail;\n    int vis[26];\n    int num;\n}AC[800005];\n//Trie\u6811\n\ninline void Build(string s,int num)\n{\n\t//\u5efa\u6811\n    int l=s.length();\n    int now=0;\n    for(int i=0;i<l;++i)\n    {\n        if(AC[now].vis[trans[s[i]]]==0)\n        AC[now].vis[trans[s[i]]]=++cnt;\n        now=AC[now].vis[trans[s[i]]];\n    }\n    AC[now].num=num;\n}\n\nvoid Get_fail()\n{\n\t//BFS\u6c42fail\n    queue<int> Q;\n    for(int i=0;i<26;++i)\n    {\n        if(AC[0].vis[i]!=0)\n        {\n            AC[AC[0].vis[i]].fail=0;\n            Q.push(AC[0].vis[i]);\n        }\n    }\n    while(!Q.empty()) \n    {\n        int u=Q.front();\n        Q.pop();\n        for(int i=0;i<26;++i)\n        {\n            if(AC[u].vis[i]!=0)\n            {\n                AC[AC[u].vis[i]].fail=AC[AC[u].fail].vis[i];\n                Q.push(AC[u].vis[i]);\n            }\n            else\n            AC[u].vis[i]=AC[AC[u].fail].vis[i];\n        }\n    }\n}\n\nvoid AC_Query(string s)\n{\n    int l=s.length();\n    int now=0;\n    for(int i=0;i<l;++i)\n    {\n        now=AC[now].vis[trans[s[i]]];\n        for(int t=now;t;t=AC[t].fail)\n        {\n            vis[AC[t].num]=1;\n        } \n    }\n}\n\nint main()\n{\n    init();\n    ios::sync_with_stdio(false);\n    int n,m,k;\n    string s;\n    cin>>n>>m;\n    for(int i=1;i<=n;++i)\n    {\n        string now;\n        cin>>k;\n        //\u8bfb\u5165k\u4ee5\u540e\u8fd8\u6ca1\u6709\u6362\u884c\uff0c\u6b64\u5904\u9700\u8981getline\u4e00\u4e0b\n        getline(cin,name[i]);\n        getline(cin,name[i]);\n        for(int j=0;j<k;++j)\n        {\n            cin>>s;\n            now+=s;\n            //\u5168\u90fd\u63a5\u8d77\u6765\n        }\n        Build(now,i);\n    }\n    AC[0].fail=0;\n    Get_fail();\n    \n    string now;\n    for(int i=0;i<m;++i)\n    {\n        cin>>s;\n        now+=s;\n        //\u63a5\u8d77\u6765\n    }\n    AC_Query(now);\n    //\u5339\u914d\n    for(int i=1;i<=n;++i)\n    {\n        if(vis[i])\n        cout<<name[i]<<'\\n';\n    }\n    return 0;\n}\n```\n![](https://cdn.luogu.com.cn/upload/pic/15339.png )",
        "postTime": 1520646492,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3883 \u3010[JLOI2008]\u68cb\u5c40\u5b9a\u5f0f\u3011"
    },
    {
        "content": "### \u5206\u6790\n\n\u8fd9\u9898\u672c\u8d28\u4e0a\u8fd8\u662f\u4e2a AC \u81ea\u52a8\u673a\u7684\u677f\u5b50\uff0c\u53ea\u9700\u8981\u5b58\u4e0b\u5b9a\u5f0f\u5bf9\u5e94\u7684\u540d\u79f0\u7136\u540e\u8f93\u51fa\u5c31\u597d\u4e86\u3002\u4e0d\u4f1a AC \u81ea\u52a8\u673a\u7684\u53ef\u4ee5\u53bb[\u5b66\u4e60\u4e00\u4e0b](https://www.luogu.com.cn/problem/P3796)\u3002\n\n\u53ea\u662f\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u76f4\u63a5\u5efa\u6811\u5b57\u7b26\u96c6\u4f1a\u8fc7\u5927\uff0c\u5bfc\u81f4 MLE\u3002\n\n\u8003\u8651\u5230\u5b9e\u9645\u68cb\u8c31\u4e2d\u4f1a\u51fa\u73b0\u7684\u5b57\u7b26\u5176\u5b9e\u5f88\u6709\u9650\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5efa\u7acb\u552f\u4e00\u7684\u6620\u5c04\u3002\u8fd9\u6837\u518d\u5efa\u6811\u5c31\u4e0d\u4f1a MLE \u4e86\u3002\n\n\u5269\u4e0b\u7684\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <cstring>\n#include <iostream>\n#include <queue>\n\nconst int MAX_N = 700050;\nconst int MAX_M = 2050;\nconst int CHA_SIZE = 35;\n\nint tree[MAX_N][CHA_SIZE], exi[MAX_N], nxt[MAX_N], ans[MAX_M];\nint tot;\nstd::string s[MAX_M];\n\nint tt[255];  // \u5b57\u7b26\u6620\u5c04\n\nvoid init();\n\nvoid build();\n\nvoid insert(std::string s, int c);\n\nvoid query(std::string s);\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    init();\n\n    int n, m;\n    std::cin >> n >> m;\n\n    auto* nam = new std::string[n + 5];\n    for (int i = 1; i <= n; i++) {\n        int k;\n        std::cin >> k;\n        std::getline(std::cin, nam[i]);  // \u8fd8\u6709\u6362\u884c\u7b26\u672a\u88ab cin \u8bfb\u5165\n        std::getline(std::cin, nam[i]);\n\n        for (int j = 1; j <= k; j++) {\n            std::string x;\n            std::cin >> x;\n            s[i] += x;  // \u5c06\u6bcf\u4e2a\u5b9a\u5f0f\u5f53\u4f5c\u4e00\u4e2a\u5b57\u7b26\u4e32\n        }\n        insert(s[i], i);\n    }\n    build();\n\n    std::string k;\n    for (int i = 1; i <= m; i++) {\n        std::string s;\n        std::cin >> s;\n        k += s;  // \u540c\u7406\n    }\n    query(k);\n\n    for (int i = 1; i <= n; i++) {\n        if (ans[i]) {  // \u51fa\u73b0\u8fc7\u5c31\u8f93\u51fa\n            std::cout << nam[i] << '\\n';\n        }\n    }\n\n    return 0;\n}\n\nvoid build() {\n    std::queue<int> q;\n    for (int i = 0; i < CHA_SIZE; i++) {\n        if (tree[0][i]) {\n            q.push(tree[0][i]);\n        }\n    }\n    while (!q.empty()) {\n        int x = q.front();\n        q.pop();\n        for (int i = 0; i < CHA_SIZE; i++) {\n            if (!tree[x][i]) {\n                tree[x][i] = tree[nxt[x]][i];\n            } else {\n                q.push(tree[x][i]);\n                nxt[tree[x][i]] = tree[nxt[x]][i];\n            }\n        }\n    }\n}\n\nvoid init() {\n    int cnt = 0;\n    for (int i = '1'; i <= '8'; ++i) {\n        tt[i] = ++cnt;\n    }\n    tt['B'] = ++cnt;\n    tt['K'] = ++cnt;\n    tt['N'] = ++cnt;\n    tt['P'] = ++cnt;\n    tt['Q'] = ++cnt;\n    tt['R'] = ++cnt;\n    for (int i = 'a'; i <= 'h'; ++i) {\n        tt[i] = ++cnt;\n    }\n    tt['x'] = ++cnt;\n}\n\nvoid insert(std::string s, int c) {\n    int x = 0;\n    for (int i = 0; s[i]; i++) {\n        int ch = tt[s[i]];\n        if (!tree[x][ch]) {\n            tree[x][ch] = ++tot;\n        }\n        x = tree[x][ch];\n    }\n    exi[x] = c;\n}\n\nvoid query(std::string s) {\n    int x = 0;\n    for (int i = 0; s[i]; i++) {\n        int ch = tt[s[i]];\n        x = tree[x][ch];\n        for (int j = x; j; j = nxt[j]) {\n            ans[exi[j]]++;\n        }\n    }\n}\n```\n",
        "postTime": 1636526688,
        "uid": 367404,
        "name": "Kris_hukr",
        "ccfLevel": 0,
        "title": "P3883 \u9898\u89e3"
    }
]