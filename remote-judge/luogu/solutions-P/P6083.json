[
    {
        "content": "~~\u672c\u9898\u600e\u4e48\u8fd9\u4e48\u5c11\u4eba\u63d0\u4ea4~~\n\n\u6211\u4eec\u5148\u8003\u8651\u6784\u9020\u51fa\u539f\u6b63\u65b9\u5f62\u7ecf\u8fc7 $4$ \u79cd\u8f74\u5bf9\u79f0\u53d8\u6362\u4ee5\u53ca $2$ \u79cd\u65cb\u8f6c\u53d8\u6362\u4e4b\u540e\u7684\u6b63\u65b9\u5f62\u90fd\u6784\u9020\u51fa\u6765\uff0c\u7136\u540e\u5bf9\u6240\u5f97\u7684 $7$ \u4e2a\u6b63\u65b9\u5f62\u90fd\u8dd1\u4e00\u904d\u4e8c\u7ef4\u54c8\u5e0c\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\uff0c\u5728 $O(n^2)$ \u65f6\u95f4\u5185\u5224\u65ad\u539f\u6b63\u65b9\u5f62\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e00\u7c7b\u578b\u7684\u67d0\u4e00\u5927\u5c0f\u7684\u5b50\u6b63\u65b9\u5f62\u3002\n\n#### \u4f46\u662f\u5982\u679c\u6211\u4eec\u679a\u4e3e\u8fb9\u957f\uff0c\u590d\u6742\u5ea6\u5c31\u4f1a\u8fbe\u5230 $O(n^3)$ \u7ea7\u522b\uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\u3002\n\n\u8003\u8651\u4f18\u5316\uff1a\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u4efb\u610f\u4e00\u79cd\u7c7b\u578b\u7684\u6b63\u65b9\u5f62\uff0c\u5b83\u628a\u6700\u5916\u9762\u4e00\u5708\u53bb\u6389\u4e4b\u540e\u8fd8\u662f\u6ee1\u8db3\u539f\u6765\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u6765\u6c42\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u4e0d\u597d\u540c\u65f6\u8ba1\u7b97\u5947\u6570\u8fb9\u957f\u548c\u5076\u6570\u8fb9\u957f\u7684\u6b63\u65b9\u5f62\uff0c\u6240\u4ee5\u8981\u4e8c\u5206\u4e24\u6b21\u3002\n\n### \u53c2\u8003\u4ee3\u7801\uff1a\n```cpp:\n#include <cstdio>\n#define rg register\n#define file(x) freopen(x\".in\", \"r\", stdin), freopen(x\".out\", \"w\", stdout)\ntemplate < class T > inline T max(T a, T b) { return a > b ? a : b; }\ntemplate < class T > inline void read(T& s) {\n    s = 0; int f = 0; char c = getchar();\n    while ('0' > c || c > '9') f |= c == '-', c = getchar();\n    while ('0' <= c && c <= '9') s = s * 10 + c - 48, c = getchar();\n    s = f ? -s : s;\n}\n \ntypedef unsigned long long ull;\nconst int _ = 502;\nconst ull base1 = 19491001, base2 = 19260817;\nint n; ull pw1[_], pw2[_], h[7][_][_];\n \ninline ull gethash(int k, int x1, int y1, int x2, int y2) {\n    int w = x2 - x1 + 1;\n    return h[k][x2][y2] - h[k][x1 - 1][y2] * pw1[w] - h[k][x2][y1 - 1] * pw2[w] + h[k][x1 - 1][y1 - 1] * pw1[w] * pw2[w];\n}\n \ninline bool check_90(int x1, int y1, int x2, int y2) {\n    return gethash(0, x1, y1, x2, y2) == gethash(5, y1, n - x2 + 1, y2, n - x1 + 1);\n}\n \ninline bool check_180(int x1, int y1, int x2, int y2) {\n    return gethash(0, x1, y1, x2, y2) == gethash(6, n - x2 + 1, n - y2 + 1, n - x1 + 1, n - y1 + 1);\n}\n \ninline bool check_diag(int x1, int y1, int x2, int y2) {\n    return gethash(0, x1, y1, x2, y2) == gethash(1, x1, n - y2 + 1, x2, n - y1 + 1)\n        || gethash(0, x1, y1, x2, y2) == gethash(2, n - x2 + 1, y1, n - x1 + 1, y2)\n        || gethash(0, x1, y1, x2, y2) == gethash(3, y1, x1, y2, x2)\n        || gethash(0, x1, y1, x2, y2) == gethash(4, n - y2 + 1, n - x2 + 1, n - y1 + 1, n - x1 + 1);\n}\n \ninline bool check_4(int x1, int y1, int x2, int y2) {\n    return check_180(x1, y1, x2, y2) && check_diag(x1, y1, x2, y2);\n}\n \ninline bool check_8(int x1, int y1, int x2, int y2) {\n    return check_90(x1, y1, x2, y2) && check_diag(x1, y1, x2, y2);\n}\n \ntemplate < class T > inline bool check(T f, int x) {\n    for (rg int i = x; i <= n; ++i)\n        for (rg int j = x; j <= n; ++j)\n            if  (f(i - x + 1, j - x + 1, i, j)) return 1;\n    return 0;\n}\n \ntemplate < class T > inline int solve(T f) {\n    int res = 0, l, r, mid;\n    l = 0, r = (n - 1) >> 1;\n    while (l < r) {\n        mid = (l + r + 1) >> 1;\n        if (check(f, mid << 1 | 1)) l = mid; else r = mid - 1;\n    }\n    res = max(res, l << 1 | 1);\n    l = 1, r = n >> 1;\n    while (l < r) {\n        mid = (l + r + 1) >> 1;\n        if (check(f, mid << 1)) l = mid; else r = mid - 1;\n    }\n    res = max(res, l << 1);\n    return res;\n}\n \nint main() {\n#ifndef ONLINE_JUDGE\n    file(\"cpp\");\n#endif\n    read(n);\n    for (rg int i = 1; i <= n; ++i)\n        for (rg int j = 1; j <= n; ++j) {\n            scanf(\"%1d\", &h[0][i][j]);\n            h[1][i][n - j + 1] = h[0][i][j];\n            h[2][n - i + 1][j] = h[0][i][j];\n            h[3][j][i] = h[0][i][j];\n            h[4][n - j + 1][n - i + 1] = h[0][i][j];\n            h[5][j][n - i + 1] = h[0][i][j];\n            h[6][n - i + 1][n - j + 1] = h[0][i][j];\n        }\n    pw1[0] = 1; for (rg int i = 1; i <= n; ++i) pw1[i] = pw1[i - 1] * base1;\n    pw2[0] = 1; for (rg int i = 1; i <= n; ++i) pw2[i] = pw2[i - 1] * base2;\n    for (rg int k = 0; k < 7; ++k) {\n        for (rg int i = 1; i <= n; ++i) for (rg int j = 1; j <= n; ++j) h[k][i][j] += h[k][i - 1][j] * base1;\n        for (rg int i = 1; i <= n; ++i) for (rg int j = 1; j <= n; ++j) h[k][i][j] += h[k][i][j - 1] * base2;\n    }\n    printf(\"%d %d %d %d %d\\n\", solve(check_8), solve(check_90), solve(check_4), solve(check_180), solve(check_diag));\n    return 0;\n}\n```",
        "postTime": 1629333223,
        "uid": 550572,
        "name": "\u9614\u8010\u6ef4\u5c0f\u4e91\u5440",
        "ccfLevel": 0,
        "title": "\u9898\u89e3"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://m-sea-blog.com/archives/4716/)\n\n---\n\n\u5728\u539f\u65b9\u9635\u7684\u57fa\u7840\u4e0a\u6784\u9020\u51fa $6$ \u4e2a\u65b9\u9635\uff0c\u5206\u522b\u4e3a\u539f\u65b9\u9635\u6cbf $4$ \u6761\u8f74\u5bf9\u79f0\u4e4b\u540e\u7684\u65b9\u9635\u3001\u65cb\u8f6c $90^\\circ$ \u540e\u7684\u65b9\u9635\u3001\u65cb\u8f6c $180^\\circ$ \u540e\u7684\u65b9\u9635\u3002\u7136\u540e\u5bf9\u8fd9 $7$ \u4e2a\u65b9\u9635\u505a\u4e00\u904d\u54c8\u5e0c\u3002\n\n\u73b0\u5728\u4e00\u4e2a\u66b4\u529b\u505a\u6cd5\u662f\uff0c\u679a\u4e3e\u8fb9\u957f\u548c\u5de6\u4e0a\u89d2\u7684\u5750\u6807\uff0c\u7136\u540e\u5229\u7528\u54c8\u5e0c\u5224\u65ad\u5b83\u662f\u5426\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u3002\u8fd9\u6837\u5b50\u662f $\\mathcal{O}(n^3)$ \u7684\uff0c\u5e76\u8dd1\u4e0d\u8fc7\u3002\n\n\u8003\u8651\u5230\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u8fb9\u957f\u4e3a $k$ \u7684\u65b9\u9635\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u8fb9\u957f\u4e3a $k-2$ \u7684\u65b9\u9635\u540c\u6837\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u3002\u4e8e\u662f\u5c06\u679a\u4e3e\u8fb9\u957f\u66ff\u6362\u4e3a\u5bf9\u5947\u6570\u548c\u5076\u6570\u5404\u4e8c\u5206\u4e00\u904d\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n^2\\log n)$\u3002\n\n\u4ee3\u7801\u4e2d\u7528\u4e86\u4e00\u4e9b\u6280\u5de7\u6765\u7f29\u5c0f\u4ee3\u7801\u91cf\u3002\n\n```cpp\n// ===================================\n//   author: M_sea\n//   website: http://m-sea-blog.com/\n// ===================================\n#include <bits/stdc++.h>\n#define re register\nusing namespace std;\ntypedef unsigned long long ull;\n\ninline int read() {\n    int X=0,w=1; char c=getchar();\n    while (c<'0'||c>'9') { if (c=='-') w=-1; c=getchar(); }\n    while (c>='0'&&c<='9') X=X*10+c-'0',c=getchar();\n    return X*w;\n}\n\nconst int N=500+10;\nconst ull BASE1=19260817,BASE2=19491001;\n\nint n; char s[N][N];\null pw1[N],pw2[N];\null h[8][N][N];\n\ninline void init_hash() {\n    pw1[0]=1; for (re int i=1;i<=n;++i) pw1[i]=pw1[i-1]*BASE1;\n    pw2[0]=1; for (re int i=1;i<=n;++i) pw2[i]=pw2[i-1]*BASE2;\n    for (re int i=1;i<=n;++i)\n        for (re int j=1;j<=n;++j) {\n            h[1][i][j]=s[i][j];\n            h[2][j][i]=s[i][j];\n            h[3][n-j+1][n-i+1]=s[i][j];\n            h[4][n-i+1][j]=s[i][j];\n            h[5][i][n-j+1]=s[i][j];\n            h[6][j][n-i+1]=s[i][j];\n            h[7][n-i+1][n-j+1]=s[i][j];\n        }\n    for (re int k=1;k<=7;++k)\n        for (re int i=1;i<=n;++i)\n            for (re int j=1;j<=n;++j) {\n                h[k][i][j]=h[k][i-1][j]*BASE1+h[k][i][j-1]*BASE2\n                          -h[k][i-1][j-1]*BASE1*BASE2+h[k][i][j];\n            }\n}\n\ninline ull gethash(int id,int lx,int ly,int rx,int ry) {\n    int l=rx-lx+1;\n    return h[id][rx][ry]-h[id][lx-1][ry]*pw1[l]-h[id][rx][ly-1]*pw2[l]\n          +h[id][lx-1][ly-1]*pw1[l]*pw2[l];\n}\n\ninline int check_axis(int lx,int ly,int rx,int ry) {\n    return gethash(1,lx,ly,rx,ry)==gethash(2,ly,lx,ry,rx)\n         ||gethash(1,lx,ly,rx,ry)==gethash(3,n-ry+1,n-rx+1,n-ly+1,n-lx+1)\n         ||gethash(1,lx,ly,rx,ry)==gethash(4,n-rx+1,ly,n-lx+1,ry)\n         ||gethash(1,lx,ly,rx,ry)==gethash(5,lx,n-ry+1,rx,n-ly+1);\n}\ninline int check_90(int lx,int ly,int rx,int ry) {\n    return gethash(1,lx,ly,rx,ry)==gethash(6,ly,n-rx+1,ry,n-lx+1);\n}\ninline int check_180(int lx,int ly,int rx,int ry) {\n    return gethash(1,lx,ly,rx,ry)==gethash(7,n-rx+1,n-ry+1,n-lx+1,n-ly+1);\n}\ninline int check_8(int lx,int ly,int rx,int ry) {\n    return check_90(lx,ly,rx,ry)&&check_axis(lx,ly,rx,ry);\n}\ninline int check_4(int lx,int ly,int rx,int ry) {\n    return check_180(lx,ly,rx,ry)&&check_axis(lx,ly,rx,ry);\n}\n\ntemplate<typename T>\ninline int check(T f,int l) {\n    for (re int x=1;x+l-1<=n;++x)\n        for (re int y=1;y+l-1<=n;++y)\n            if (f(x,y,x+l-1,y+l-1)) return 1;\n    return 0;\n}\n    \ntemplate<typename T>\ninline int solve(T f) { int L,R,res=0;\n    L=0,R=(n-1)>>1;\n    while (L<R) {\n        int mid=(L+R+1)>>1;\n        if (check(f,mid<<1|1)) L=mid;\n        else R=mid-1;\n    }\n    res=max(res,L<<1|1);\n    L=1,R=n>>1;\n    while (L<R) {\n        int mid=(L+R+1)>>1;\n        if (check(f,mid<<1)) L=mid;\n        else R=mid-1;\n    }\n    res=max(res,L<<1);\n    return res;\n}\n\nint main() {\n    n=read();\n    for (re int i=1;i<=n;++i) scanf(\"%s\",s[i]+1);\n    init_hash();\n    printf(\"%d \",solve(check_8));\n    printf(\"%d \",solve(check_90));\n    printf(\"%d \",solve(check_4));\n    printf(\"%d \",solve(check_180));\n    printf(\"%d\\n\",solve(check_axis));\n    return 0;\n}\n```",
        "postTime": 1581477929,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6083 \u3010[JSOI2015]symmetry\u3011"
    }
]