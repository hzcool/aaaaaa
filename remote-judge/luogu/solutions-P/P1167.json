[
    {
        "content": "\u7531\u4e8e\u9898\u76ee\u5b9e\u73b0\u8d77\u6765\u4e0d\u7b97\u96be\uff0c\u6240\u4ee5\u4e0d\u63d0\u4f9b\u6807\u7a0b\u3002\n\n\nP3\uff1a\u5237\u9898\n\n\u6539\u7f16\u9898-\u96be\u5ea64\n\n\u6392\u5e8f\u3001\u6a21\u62df\u3001\u8d2a\u5fc3\n\n\u9996\u5148\u8ba1\u7b97\u51fa\u603b\u65f6\u95f4\uff0c\u7136\u540e\u6392\u5e8f\u9898\u76ee\u6d88\u8017\u65f6\u95f4\uff0c\u7136\u540e\u8d2a\u5fc3\u3002\n\n\u5927\u6982\u5c31\u662f\u8fd9\u6837\u3002\n\n\u7b49\u4e00\u4e0b\uff0c\u600e\u4e48\u8ba1\u7b97\u65f6\u95f4\uff1f\n\n\u9996\u5148\u5148\u8bfb\u53d6\u65f6\u95f4\u3002\u5f88\u591a\u65b9\u6cd5\u3002\u7531\u4e8e\u65f6\u95f4\u7684\u683c\u5f0f\u56fa\u5b9a\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e00\u4e2a\u5b57\u7b26\u4e00\u4e2a\u5b57\u7b26\u8bfb\u53d6\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u4e58\u3001\u52a0\u8d77\u6765\u3002\n\n\u5047\u8bbe\u8bfb\u5165\u7684\u65f6\u95f4\u662fy\u5e74m\u6708d\u65e5h\u662fi\u5206\uff0c\u8ba1\u7b97\u5f97\u5230\u5df2\u7ecf\u8fc7\u53bb\u4e86days\u4e2a\u6574\u5929\u3002\n\n\u7136\u540e\u8ba1\u7b97\u8be5\u65f6\u95f4\u70b9\u5230\u5e74\u521d\u7684\u5206\u949f\u6570M=days\\*1440+h\\*60+i\n\n\u5f00\u59cb\u65f6\u95f4\u5230\u5e74\u521dM1\uff0c\u7ed3\u675f\u662fM2\uff0c\u5f00\u59cb\u5e74\u662fy1\uff0c\u7ed3\u675f\u5e74\u662fy2.\n\n\u4e0d\u8981\u5fd8\u8bb02\u670829\u65e5\n\n\u53ef\u4ee5\u8fd9\u4e48\u5224\u65ad\uff08\u4f2a\u4ee3\u7801\uff09\uff1a\n\n```cpp\nfunction runnian(y){\nif(y mod 400==0)return 1;\nif(y mod 100==0)return 0;\nif(y mod 4==0)return 1;\nreturn 0;\n}\n```\n\u5e94\u8be5\u6709\u66f4\u7b80\u5355\u7684\uff0c\u4e0d\u8fc7\u8fd9\u6837\u597d\u7406\u89e3\n\u597d\u5427\u7ee7\u7eed\n\n\u5982\u679cy1=y2\uff0c\u5c31\u7b80\u5355\u4e86\uff0c\u76f4\u63a5M2-M1\n\n\u4e0d\u5728\u540c\u4e00\u5e74\u4e2d\uff0c\u5c31S+M2-M1\uff0cS\u662f\u4ecey1\u5e74\u5e74\u521d\u5230y2\u5e74\u5e74\u521d\u7684\u79d2\u6570\uff0c\u5f88\u597d\u8ba1\u7b97\u3002\n\n\u4f60\u751a\u81f3\u53ef\u4ee5\u4e00\u5e74\u4e00\u5e74\u679a\u4e3e\u662f\u5426\u4e3a\u95f0\u5e74\u7136\u540e\u7d2f\u52a0\u3002\u4e0d\u8fc7\u5c0f\u5fc3\u7206int(longint)\u3002\n\n\u7136\u540e\u5c31\u6ca1\u6709\u7136\u540e\u4e86\u3002\n",
        "postTime": 1373093643,
        "uid": 1,
        "name": "kkksc03",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "\u849f\u84bb\u6211\u53c8\u6765\u5199\u5783\u573e\u9898\u89e3\u4e86\u2026\u2026\n\n\u5148\u9001\u5927\u5bb6\u4e00\u4e9b\u5feb\u8bfb\u4ee3\u7801\uff0c\u590d\u5236\u8d85\u65b9\u4fbf\uff08\u4ece\u6211\u4eec\u5b66\u6821luogu5\u6708\u6708\u8003\u7b2c\u4e09\u540d\u7684cqq\u5927\u4f6c\u90a3\u91cc\u539f\u7248\u590d\u5236\u7684\uff09\n```\nnamespace fast_io {\n    inline char read(){static const int IN_LEN=1000000;static char buf[IN_LEN],*s,*t;return s==t?(((t=(s=buf)+fread(buf,1,IN_LEN,stdin))==s)?-1:*s++) : *s++;}\n    inline void read(int &x){static bool iosig;static char c;for (iosig=false,c=read();!isdigit(c);c=read()){if(c=='-')iosig=true;if(c==-1)return;}for(x=0;isdigit(c);c=read())x=((x+(x<<2))<<1)+(c^'0');if(iosig)x=-x;}\n    inline void read(char *a){static char c = read();while(c!=-1&&(c==' '||c=='\\n'||c=='\\r'))c=read();while(c!=-1&&c!='\\r'&&c!=' '&&c!='\\n') *a++=c,c=read();*a=0;}\n    const int OUT_LEN=1000000;char obuf[OUT_LEN],*ooh=obuf;\n    inline void print(char c){if(ooh==obuf+OUT_LEN) fwrite(obuf,1,OUT_LEN,stdout),ooh=obuf;*ooh++ = c;}\n    inline void print(int x){static int buf[30],cnt;if(x==0)print('0');else{if(x<0)print('-'),x=-x;for(cnt=0;x;x/=10)buf[++cnt]=x%10+48;while (cnt) print((char)buf[cnt--]);}}\n    inline void print(char *a){while(*a) print(*a++);}\n    inline void flush(){fwrite(obuf,1,ooh-obuf,stdout);}\n}using namespace fast_io;\n```\n# \u5207\u5165\u6b63\u9898\n\n\u8fd9\u9898\u4e00\u770b\u7eaf\u66b4\u529b\u554a\uff0c\u4f46\u662f\u8fd8\u771f\u4e0d\u7b80\u5355\uff0c\u6709\u5f88\u591a\u8981\u6ce8\u610f\u7684\u3002\n\n\u9996\u5148\u662f\u8f93\u5165\n\n\u8f93\u5165\u4e2d\u6709\n```\n   2007-06-23-11:59\n   2007-06-23-12:00\n```\n### \u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e00\u4e2a\u5b57\u7b26\u8bfb\u592a\u6162\uff0c\u6559\u5927\u5bb6\uff08juruo\uff09\u4e00\u4e2a\u5feb\u70b9\u8bfb\u5165\u7684\u65b9\u6cd5(scanf)\n```\nscanf(\"%d-%d-%d-%d:%d\",&a[1],&a[2],&a[3],&a[4],&a[5]);\nscanf(\"%d-%d-%d-%d:%d\",&b[1],&b[2],&b[3],&b[4],&b[5]);\n```\n\u95f0\u5e74\u5224\u5b9a\uff1a\n```\nbool panding(int x){\n    if(x%100==0){if(x%400==0)return 1;}\n    else{if(x%4==0)return 1;}\n    return 0;\n}\n```\n\u5176\u5b9e\u79d1\u5b66\u70b9\u5e94\u8be5\u66f4\u8be6\u7ec6\uff08\u8f6c\u81eaoier\uff09\n\n\u6839\u636e\u795e\u5947\u7684\u5929\u6587\u5b66\uff0c 4\u4e2a\u5386\u6cd5\u5e74\u5929\u6570\u4e3a365*4+1=1461\u5929\uff0c4\u4e2a\u56de\u5f52\u5e74\u5929\u6570365.24219*4=1460.96876\u5929\uff0c\u4e24\u8005\u76f8\u5dee\u4e860.03124\u5929\u3002\u6bcf400\u4e2a\u5386\u6cd5\u5e74\u5386\u6cd5\u5929\u6570\u4f1a\u591a\u51fa\u4e863.124\u5929\uff0c\u4e3a\u4e86\u51cf\u53bb\u591a\u4f59\u76843.124\u5929\uff0c\u4ece400\u5e74\u4e2d\u51cf\u5c113\u4e2a\u95f0\u5e74\u3002\uff0c\u800c\u6b64\u65f6\u4e24\u8005\u76f8\u5dee0.124\u5929\u3002\u628a\u65f6\u95f4\u62c9\u957f\uff0c\u7ecf\u8fc78\u4e2a400\u5386\u6cd5\u5e74\uff08\u53733200\u5e74\uff09\uff0c\u5386\u6cd5\u5e74\u5929\u6570\u6bd4\u56de\u5f52\u5e74\u5929\u6570\u591a\u4e860.124*8=0.996\u5929\uff0c\u8fd9\u65f6\u5019\u89c4\u5b9a\u6bcf\u96943200\u5e74\u5c31\u51cf\u53bb\u4e00\u4e2a\u95f0\u5e74\uff0c\u4e5f\u5c31\u662f\u80fd\u88ab400\u6574\u9664\uff0c\u540c\u65f6\u80fd\u88ab3200\u6574\u9664\u7684\u4ecd\u65e7\u662f\u5e73\u5e74\u3002\u4f46\u6bcf3200\u5e74\u516c\u5143\u5386\u6cd5\u5929\u6570\u5b9e\u9645\u8fd8\u662f\u6bd4\u56de\u5f52\u5e74\u5929\u6570\u5c11\u4e860.004\u5929\uff0c\u5982\u679c\u6211\u4eec\u7ee7\u7eed\u8c03\u6574\uff0c48\u4e2a3200\u5e74\uff08\u5c31\u662f153600\u5e74\uff09\u53c8\u5c11\u4e86\u8fd1\u4e00\u5929\uff0c\u6240\u4ee5\u516c\u5143153600\u5e74\u53c8\u662f\u95f0\u5e74\uff0c\u6b64\u65f6\u516c\u5386\u5e74\u8f83\u4e4b\u56de\u5f52\u5e74\u591a\u4e8616\u5206\u949f\uff1b\u8fd9\u6837\u53c8\u8fc7\u4e86240\u4e2a153600\u5e74\uff0c\u4e5f\u5c31\u662f36864000\u5e74\uff0c\u9700\u8981\u53d8\u6210\u5e73\u5e74\u3002\u4e5f\u5c31\u662f36864000\u5e74\u4e3a\u4e00\u4e2a\u5faa\u73af\u3002\n\n\n\u5f00\u59cb\u7b97\u65f6\u95f4\uff0c\u6211\u5c31\u6b7b\u5728\u8fd9\u91cc\u4e86\uff0c\u4e00\u5f00\u59cb\u628aa,b\u5199\u53cd\uff0c\u6539\u6b63\u540e\u6709\u5f88\u591a\u5fd8\u6539\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n    for(int i=a[1];i<b[1];i++)\n       if(panding(i))t-=366;\n       else t-=365;\n    for(int i=1;i<a[2];i++)t+=day[i];\n    for(int i=1;i<b[2];i++)t-=day[i];\n    if(panding(a[1])&&a[2]>2)t++;\n    if(panding(b[1])&&b[2]>2)t--;\n    t+=a[3];\n    t-=b[3];\n    t*=1440;\n    t+=60*a[4]+a[5];\n    t-=60*b[4]+b[5];\n    t*=-1;//\u5199\u53cd\u5566 \n```\n\u81f3\u4e8e\u6392\u5e8f\uff0c\u6bd4\u8f83\u7b80\u5355\u4e00\u4e2a\u5feb\u6392\u5c31\u641e\u5b9a\u4e86\n\n\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint n,ti[5001];\nint day[13]={0,31,28,31,30,31,30,31,31,30,31,31,30};//12\u4e2a\u6708\nint a[10],b[10];//\u4e24\u4e2a\u6570\u7ec4\nlong long t;//\u5206\u949f\nint ans;//\u7b54\u6848\nbool panding(int x){//\u5176\u5b9e\u8fd9\u91cc\u6709\u6b67\u4e49\uff0c\u79d1\u5b66\u70b9\u8bb2\u5e94\u8be5\u66f4\u8be6\u7ec6\n    if(x%100==0){if(x%400==0)return 1;}\n    else{if(x%4==0)return 1;}\n    return 0;\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++)\n       cin>>ti[i];\n    sort(ti+1,ti+n+1);//\u6392\u5e8f\n    scanf(\"%d-%d-%d-%d:%d\",&a[1],&a[2],&a[3],&a[4],&a[5]);\n    scanf(\"%d-%d-%d-%d:%d\",&b[1],&b[2],&b[3],&b[4],&b[5]);\n    for(int i=a[1];i<b[1];i++)\n       if(panding(i))t-=366;//\u5168\u53cd\u4e86\n       else t-=365;\n    for(int i=1;i<a[2];i++)t+=day[i];\n    for(int i=1;i<b[2];i++)t-=day[i];\n    if(panding(a[1])&&a[2]>2)t++;//\u95f0\u5e74\n    if(panding(b[1])&&b[2]>2)t--;\n    t+=a[3];\n    t-=b[3];\n    t*=1440;\n    t+=60*a[4]+a[5];\n    t-=60*b[4]+b[5];\n    t*=-1;//\u5199\u53cd\u5566 \n    for(int i=1;i<=n;i++){\n        if(t>=ti[i])t-=ti[i],ans++;\n        else break;//\u5224\u65ad\u80fd\u4e0d\u80fd\u5237\u5b8c\u8fd9\u9053\u9898\n    }\n    cout<<ans;//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1526815414,
        "uid": 48142,
        "name": "Ousmane_Dembele",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "##  \u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\n\u672c\u6765\u4ee5\u4e3a\u662f\u9053\u7b80\u5355\u9898\uff0c\u53ef\u6ca1\u60f3\u5230\u63d0\u4ea4\u4e86\u6574\u657410\u6b21\u624dAC\u3002   \n#### \u8bb2\u4e0b\u601d\u8def \uff08\u6211\u662f\u8fd9\u4e48\u60f3\u7684\uff09\n1. \u8fd9\u9053\u9898\u7684\u6838\u5fc3\u5728\u4e8e\u8981\u5982\u4f55\u7b97\u51fa\u5c0fA\u73b0\u6709\u7684\u65f6\u95f4\uff0c\u4e4b\u540e\u5c31\u76f4\u63a5\u6392\u5e8f\uff0c\u7edf\u8ba1\u53ef\u505a\u9898\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n1. \u53ef\u95ee\u9898\u6765\u4e86\uff0c\u8981\u5982\u4f55\u7edf\u8ba1\u65f6\u95f4\u5462\uff1f\n1. \u53ef\u4ee5\u8fd9\u6837\u60f3\uff0c\u5c06\u65f6\u95f4\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u6bd4\u5982\u5c062007-06-23-11:59 \u548c 2007-06-23-12:00 \u5206\u6210 \uff082007-06-23\uff09\u90e8\u52061\uff0c\uff0811:59\uff09\u90e8\u52062\uff0c\u548c\uff082007-06-23\uff09\u90e8\u52061\uff0c\uff0812:00\uff09\u90e8\u52062\uff0c\u7136\u540e\u7528 \u90e8\u52061\uff08\u7ade\u8d5b\u65f6\u95f4\uff09-\u90e8\u52061\uff08\u73b0\u5728\u65f6\u95f4\uff09\uff0c\u90e8\u52062\uff08\u7ade\u8d5b\u65f6\u95f4\uff09-\u90e8\u52062\uff08\u73b0\u5728\u65f6\u95f4\uff09\uff0c\u5c31\u597d\u4e86\u3002    \n1. \u8fd8\u6709\u5728\u7528\u90e8\u52061\u76f8\u51cf\u65f6\uff0c\u6708\u548c\u6708\u76f8\u51cf\uff0c\u9700\u8981\u5224\u65ad\u662f\u5927\u6708\u8fd8\u662f\u5c0f\u6708\u8fd8\u662f\u5e73\u6708\uff0c\u5e74\u548c\u5e74\u4e5f\u4e00\u6837\uff0c\u5224\u65ad\u662f\u4e0d\u662f\u95f0\u5e74\u3002    \nAC\u4ee3\u7801\u5982\u4e0b\uff1a\uff08~~\u4e0d\u77e5\u9053\u5199\u7684\u597d\u4e0d\u597d~~\uff09   \n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint main(){\n\tlong long all=0;\n\tint n,s=0,e=0,f=0;\n\tint year1,month1,day1,hour1,minute1;\n\tint year2,month2,day2,hour2,minute2;\n\tint a[5005],i;\n\tchar t,D,E,p;\n\tchar t2,D2,E2,p2;\n\tcin>>n;\n\tfor(i=0;i<n;i++){\n\t\tcin>>a[i];\n\t} \n\tcin>>year1>>t>>month1>>D>>day1>>p>>hour1>>E>>minute1;\n\tcin>>year2>>t2>>month2>>D2>>day2>>p2>>hour2>>E2>>minute2;\n\tif(minute2>minute1){\n\t\tall=all+minute2-minute1;//\u5927\u4e8e\u76f4\u63a5\u51cf\n\t}\n\telse if(minute2==minute1){\n\t\tall=all+0;//\u7b49\u4e8e\u4e0d\u53d8\n\t}\n\telse{\n\t\tminute2=minute2+60;\n\t\thour2=hour2-1;\n\t\tall=all+minute2-minute1;//\u5c0f\u4e8e\u501f60\uff0c\u5728\u51cf\uff0chour2\u51cf\u63891\u5c0f\u65f6\n\t}\n\tif(hour2>hour1){\n\t\tall=all+(hour2-hour1)*60;//\u540c\u4e0a\u5224\u65ad\n\t}\n\telse if(hour2==hour1){\n\t\tall=all+0;//\u540c\u4e0a\u5224\u65ad\n\t}\n\telse{\n\t\thour2=hour2+24;\n\t\tday2=day2-1;\n\t\tall=all+(hour2-hour1)*60;//\u5c0f\u4e8e\u501f24\uff0c\u5728\u51cf\uff0cday2\u51cf\u63891\u5929\n\t}\n\tif(year2>year1){//\u5982\u679c\u5927\u4e8e\n\t\tfor(i=year1;i<year2;i++){//\u5faa\u73af\u5224\u65ad\u95f0\u5e74\n\t\t\tif(i%4==0 && i%100!=0){\n\t\t\t\te++;//\u95f0\u5e74\u52a01\uff0c\u4e0d\u4e3a\u6574\u767e\n\t\t\t}\n\t\t\telse if(i%400==0){\n\t\t\t\te++;//\u95f0\u5e74\u52a01\uff0c\u4e3a\u6574\u767e\n\t\t\t}\n\t\t\telse{\n\t\t\t\tf++;//\u5e73\u5e74\u52a01\n\t\t\t}\n\t\t}\n\t\tall=all+e*366*24*60+f*365*24*60;//\u5168\u90e8\u52a0\u4e0a\n\t}\n\telse if(year2==year1){\n\t\tall=all+0;//\u540c\u4e0a\u5224\u65ad\n\t}\n\tif(month2>month1){\u5224\u65admonth\n\t\tfor(i=month1;i<month2;i++){\n\t\t\t\tif(i==2){//\u4e3a\u5e73\u6708\n\t\t\t\t\tif(i%4==0 && i%100!=0){\n\t\t\t\t\t\tall=all+29*24*60;//\u95f0\u5e74\u4e8c\u670829\n\t\t\t\t\t}\n\t\t\t\t\telse if(i%400==0){\n\t\t\t\t\t\tall=all+29*24*60;//\u95f0\u5e74\u4e8c\u670829\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tall=all+28*24*60;//\u5e73\u5e74\u4e8c\u670828\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(i==1||i==3||i==5||i==7||i==8||i==10||i==12){\n\t\t\t\t\tall=all+31*24*60;//\u5927\u670831\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tall=all+30*24*60; //\u5c0f\u670830\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(month2==month1){\n\t\t\tall=all+0;//\u540c\u4e0a\u5224\u65ad\n\t\t} \n\t\telse{\n\t\t\tfor(i=month2;i<month1;i++){//\u548cmonth2>month1\u7684\u5224\u65ad\u65b9\u6cd5\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u662f\u51cf\u53bb\u6708\u7684\u5929\u6570\n\t\t\t\tif(i==1||i==3||i==5||i==7||i==8||i==10||i==12){\n\t\t\t\t\n\t\t\t\t\tall=all-31*24*60;\n\t\t\t\t}\n\t\t\t\telse if(i==4||i==6||i==9||i==11){\n\t\t\t\t\tall=all-30*24*60;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(i==2){\n\t\t\t\t\t\tif(i%4==0 && i%100!=0){\n\t\t\t\t\t\t\tall=all+29*24*60;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(i%400==0){\n\t\t\t\t\t\t\tall=all+29*24*60;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tall=all+28*24*60;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(day2>day1){\n\t\t\tall=all+(day2-day1)*24*60;//\u5927\u4e8e\u76f4\u63a5\u51cf \n\t\t}\n\t\telse if(day2==day1){\n\t\t\tall=all+0;//\u540c\u4e0a\u5224\u65ad\n\t\t}\n\t\telse{\n\t\t\tint q=day1-day2;\n\t\t\tall=all-q*24*60;//\u5c0f\u4e8e\u7528day1-day2\u7b97\u5929\u6570\u5dee\uff0c\u51cf\u53bb\u5929\u6570\u5dee\n\t\t} \n\tsort(a,a+n);//\u6392\u5e8f\n\tfor(i=0;i<n;i++){\n\t\tif(all>0){//\u5927\u4e8e\u624d\u505a\n\t\t\tall=all-a[i];\n\t\t\ts++; \n\t\t\tif(all<0){//\u51cf\u5b8c\u540e\u662f\u5426\u4e3a\u8d1f\u6570\n\t\t\t\ts--;//\u603b\u5171\u51cf1\n\t\t\t\tbreak;//\u8df3\u51fa\u5faa\u73af\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tbreak;//\u8df3\u51fa\u5faa\u73af\n\t\t}\n\t}\n\tcout<<s;//\u8f93\u51fa\n\treturn 0;\n}\n```\n",
        "postTime": 1566572505,
        "uid": 158201,
        "name": "wyly",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u4e00\u9053\u6a21\u62df\u9898\uff0c\u52a0\u4e86\u4e00\u70b9\u70b9\u7684\u8d2a\u5fc3\u3002\n\n\u5176\u5b9e\u8fd9\u9898\u7684\u8d2a\u5fc3\u975e\u5e38\u597d\u60f3\uff0c\u5c31\u662f\u65f6\u95f4\u5c11\u7684\u5148\u6765\uff0c\u76f4\u63a5\u6392\u5e8f\u626b\u5c31\u53ef\u4ee5\u3002\n\n\u5e26\u7740\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u8fc7\u6765\u5199\u4ee3\u7801\uff1a\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u5361\u5728\u65f6\u95f4\u7684\u5904\u7406\u4e0a\u4e86...~~\u679c\u7136\u6211\u8fd8\u662f\u849f\u84bb~~\n\n\u6240\u4ee5\u6211\u5728\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e9b\u201c\u65e5\u671f\u9898\u201d\u7684\u5904\u7406\u6280\u5de7\u3002\n\n\u9996\u5148\u662f\u8bfb\u5165\uff0c\u9488\u5bf9\u4e8e\u8fd9\u79cd\u8bfb\u5165\uff0c\u6211\u4eec\u7528\u5b57\u7b26\u4e32\u5904\u7406\u518d\u4ece\u5b57\u7b26\u4e32\u4e2d\u63d0\u53d6\u5b9e\u5728\u662f\u9ebb\u70e6\u7684\u8981\u547d\u3002\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7528\u4e00\u79cd\u7b80\u5316\u7684\u65b9\u5f0f\uff1a\n\n```c++\nscanf(\"%d-%d-%d-%d:%d\",&start[1],&start[2],&start[3],&start[4],&start[5]);\nscanf(\"%d-%d-%d-%d:%d\",&endd[1],&endd[2],&endd[3],&endd[4],&endd[5]);\n```\n\n\u4e0d\u7528\u62c5\u5fc3\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u7206\u9505\uff0c\u6839\u672c\u4e0d\u53ef\u80fd\uff0c\u7b80\u5355\u597d\u7528\uff0c~~\u9a97\u5206\u9996\u9009~~\u3002\n\n\u8bfb\u5165\u5b8c\u4e8b\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u5904\u7406\u6210\u5206\u949f\u6570\uff08\u8fd9\u6837\u624d\u80fd\u8d2a\u5fc3\uff09\u3002\n\n\u6211\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6cd5\u628a\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u5206\u949f\u6570\u5904\u7406\u51fa\u6765\u3002\n\n### \u7b2c\u4e00\u79cd\u505a\u6cd5\uff1a\n\n\u6211\u4eec\u4ee50000\u5e741\u67081\u65e5\u768400:00\u5206\u505a\u57fa\u51c6\u7ebf~~\uff08\u4e5f\u4e0d\u77e5\u9053\u8fd9\u65f6\u5019\u57fa\u7763\u8fd9\u5c0f\u5bb6\u4f19\u51fa\u751f\u6ca1\uff09~~\uff0c\u5206\u522b\u7528\u8d77\u59cb\u65e5\u671f\u548c\u7ed3\u675f\u65e5\u671f\u51cf\u53bb\u8fd9\u4e2a\u57fa\u51c6\uff0c\u7136\u540e\u5c31\u5904\u7406\u51fa\u4e86\u8fd9\u4e2a\u65f6\u95f4\u6bb5\uff08\u6709\u4e00\u70b9\u70b9\u524d\u7f00\u548c\u7684\u5473\u9053\uff09\n\n~~\u7136\u9e45\u6211\u5e76\u6ca1\u6709\u8fd9\u4e48\u505a~~\n\n### \u7b2c\u4e8c\u79cd\u505a\u6cd5\uff1a\n\n\u5b9e\u5728\u662f\u60ed\u6127\uff0c\u672c\u849f\u84bb\u53ea\u80fd\u60f3\u5230\u6700\u6734\u5b9e\u65e0\u534e\u7684\u6a21\u62df\u65b9\u6cd5\u3002\u4f60\u60f3\u554a\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5904\u7406\u51fa\u5929\u6570\u7136\u540e\u00d71440\uff0824*60\uff0c\u4e00\u5929\u7684\u5206\u949f\u6570\uff09\uff0c\u7136\u540e\u518d\u5904\u7406\u6bcf\u5929\u7684\u5206\u949f\u3002\n\n\u7136\u540e\u6211\u4eec\u53c8\u60f3\u5230\uff0c\u53ef\u4e0d\u53ef\u4ee5\u9010\u6b21\u5904\u7406\u5e74\u6708\u65e5\uff0c\u6700\u540e\u518d\u4e00\u70b9\u70b9\u7684**\u591a\u9000\u5c11\u8865**\uff08\u6ce8\u610f\u8fd94\u4e2a\u5b57\uff01\uff01\uff09\u5462\uff1f\n\n\u5f53\u7136\u53ef\u4ee5\uff01\uff01\n\n\u6211\u4eec\u5148\u4ece\u8d77\u59cb\u5e74\u5230\u7ec8\u6b62\u5e74\uff08\u6ce8\u610f\u4e0d\u80fd<=\u7ec8\u6b62\u5e74\u800c\u8981\u51cf\u53bb1\u5373<\u7ec8\u6b62\u5e74\uff0c\u4e0b\u540c\uff09\n\n\u5982\u679c\u662f\u95f0\u5e74\u5c31\u52a0\u4e0a366\u5929\uff0c\u5426\u5219\u52a0365\u5929\u3002\n\n\u7136\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u6211\u4eec\u591a\u5904\u7406\u4e86\u8d77\u59cb\u5e74\u7684\u524d\u534a\u5e74\uff0c\u5c11\u5904\u7406\u4e86\u7ec8\u6b62\u5e74\u7684\u524d\u534a\u5e74\u3002\n\n\u8fd9\u5c31\u662f**\u591a\u9000\u5c11\u8865**\u7684\u601d\u60f3\u4e86\u3002\u5148\u5224\u95f0\u5e74\uff0c\u7528\u4e24\u4e2a\u6708\u4efd\u6570\u7ec4\u5904\u7406\u3002\n\n\u540c\u7406\uff0c\u6211\u4eec\u591a\u5904\u7406\u4e86\u8d77\u59cb\u6708\u7684\u524d\u534a\u4e2a\u6708\uff0c\u5c11\u5904\u7406\u4e86\u7ec8\u6b62\u6708\u7684\u524d\u534a\u4e2a\u6708\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u591a\u9000\u5c11\u8865\u3002\n\n\u6700\u540e\u5904\u7406\u5c0f\u65f6\u548c\u5206\u949f\u3002\n\n\u8d2a\u5fc3\u7684\u90e8\u5206\u6211\u5c31\u4e0d\u8bb2\u4e86\uff0c\u8fd9\u9053\u9898\u7684\u96be\u70b9\u5df2\u7ecf\u8bf4\u5b8c\u4e86\uff0c\u8fd9\u9053\u9898\u7684\u8d2a\u5fc3\u5982\u679c\u60f3\u4e0d\u51fa\u6765\u8fd8\u662f~~\u9000\u5f79~~\u591a\u7ec3\u7ec3\u5427\u3002\n\n\n\n\u6ce8\u610f\u4e00\u4e0b\uff1a\u6211\u4e00\u5f00\u59cbWA\u4e86\u4e24\u4e2a\u5927\u6570\u636e\u7684\u70b9\uff0c\u662f\u56e0\u4e3a\u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5728else\u91cc\u8f93\u51fa\uff0c\u8fd9\u6837\u5982\u679c\u662f\u6781\u5927\u6570\u636e\u7684\u8bdd\uff0c\u6839\u672c\u5c31\u8fdb\u4e0d\u53bbelse\u90a3\u91cc\uff0c\u5bfc\u81f4\u8f93\u51fa\u4e3a\u7a7a\uff0c\u8bf7\u5927\u5bb6\u5f15\u4ee5\u4e3a\u6212\u3002\n\n\u4ee3\u7801\uff1a\n\n```c++\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint n,time,ans;\nint a[5010];\nint m1[]={0,31,28,31,30,31,30,31,31,30,31,30,31};\nint m2[]={0,31,29,31,30,31,30,31,31,30,31,30,31};\nint start[10],endd[10];\nbool check(int x)\n{\n    if((x%4==0 && x%400!=0) || x%400==0)\n        return 1;\n    return 0;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    sort(a+1,a+n+1);\n    scanf(\"%d-%d-%d-%d:%d\",&start[1],&start[2],&start[3],&start[4],&start[5]);\n    scanf(\"%d-%d-%d-%d:%d\",&endd[1],&endd[2],&endd[3],&endd[4],&endd[5]);\n    for(int i=start[1];i<endd[1];i++)\n    {\n        if(check(i))\n            time+=366;\n        else\n            time+=365;\n    }\n    if(check(start[1]))\n        for(int i=1;i<start[2];i++)\n            time-=m2[i];\n    else\n        for(int i=1;i<start[2];i++)\n            time-=m1[i];\n    if(check(endd[1]))\n        for(int i=1;i<endd[2];i++)\n            time+=m2[i];\n    else\n        for(int i=1;i<endd[2];i++)\n            time+=m1[i];\n    for(int i=1;i<start[3];i++)\n        time--;\n    for(int i=1;i<endd[3];i++)\n        time++;\n    time=time*24*60;\n    time-=60*start[4]+start[5];\n    time+=60*endd[4]+endd[5];\n    for(int i=1;i<=n;i++)\n    {\n        if(time>=a[i])\n        {\n            time-=a[i];\n            ans++;\n        }\n        else\n            break;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1567237974,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9898\u672c\u8eab\u4e0d\u662f\u5f88\u96be\uff0c\u5c31\u662f\u8d2a\u5fc3+\u6a21\u62df\uff0c\u4f46\u662f\u5f88\u8003\u9a8c\u7ec6\u5fc3\u7a0b\u5ea6\u3002\n\n\u5bf9\u4e8e\u6b64\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u5e74\u6708\u65e5\u5c0f\u65f6\u90fd\u8f6c\u5316\u4e3a\u5206\u949f\uff0c\u7136\u540e\u5feb\u6392\u4f18\u5148\u505a\u8017\u65f6\u6700\u5c11\u7684\u9898\u8d2a\u5fc3\u6c42\u89e3\u3002\n\n\u9996\u5148\uff0c\u8981\u5b8c\u6210\u8f93\u5165\u548c\u5feb\u6392\u9884\u5904\u7406\n```cpp\ninline void pre()\n{\n\tcin>>n;\n\tfor(fint i=1;i<=n;i++)\n\tcin>>as[i];\n\tsort(as+1,as+n+1);\n\tcin>>a>>ch>>b>>ch>>c>>ch>>d>>ch>>e;\n\tcin>>x>>ch>>y>>ch>>z>>ch>>u>>ch>>v;\n\treturn ;\n}\n```\n\u6ce8\u610f\uff0c\u559c\u6b22\u7528\u6d41\u8f93\u5165\u8f93\u51fa\u7684\u670b\u53cb\u4e00\u5b9a\u4e0d\u8981\u5fd8\u8bb0\u5904\u7406\u5b57\u7b26\uff08ch\uff09\uff0c\u7528scanf\uff0cprintf\u5c31\u53ef\u4ee5\u5de7\u5999\u5730\u7701\u53bb(\u5982\u4e0b)\n```cpp\n    scanf(\"%d-%d-%d-%d:%d\",&a,&b,&c,&d,&e);\n    scanf(\"%d-%d-%d-%d:%d\",&x,&y,&z,&u,&v);\n```\n\u63a5\u4e0b\u6765\u662f\u5224\u65ad\u95f0\u5e74\n```cpp\ninline bool run(int year)\n{\n\tif(year%4==0)\n    {\n    if(year%100==0)//\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u6574\u767e\u5e74\u4efd\u9700\u8981\u8003\u8651\u80fd\u5426\u9664\u5c3d400\n    {\n    if(year%400==0)\n    return 1;\n    else\n    return 0;\n    }\n    else\n    return 1;\n    }\n    else\n    return 0;\n}\n```\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5904\u7406\u5e74\u4efd\u6708\u4efd\u65f6\u8fdb\u884c\u95f0\u7684\u7279\u5224\u4e86\n```cpp\ninline void year_to_day()\n{\n\tfor(fint i=a;i<x;i++)\n\tif(run(i))\n\ttot+=366;\n\telse\n\ttot+=365;\n\treturn ;\n}\n\ninline void month_to_day()\n{\n\tfor(fint i=1;i<b;i++)\n\tif(run(a))\n\ttot-=mon_run[i];\n\telse\n\ttot-=mon_ping[i];\n\tfor(fint i=1;i<y;i++)\n\tif(run(x))\n\ttot+=mon_run[i];\n\telse\n\ttot+=mon_ping[i];\n\treturn ;\n}\n```\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u65e5->\u5206\u949f\u7684\u8f6c\u6362\u4e86\u3002\n```cpp\ninline void day_to_minute()\n{\n\ttot=(tot-c+z)*24*60;\n\ttot=tot-(60*d+e)+(60*u+v);\n\treturn ;\n}\n```\n\u6700\u540e\u6839\u636e\u8d2a\u5fc3\u7684\u539f\u7406\u6c42\u89e3\u5373\u53ef\n```cpp\ninline void final_calculate()\n{\n\tfor(fint i=1;i<=n;i++)\n\tif(tot>=as[i])\n\ttops++,tot-=as[i];\n\telse\n\tbreak;\n\tcout<<tops;\n\treturn ;\n}\n```\n\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u3002\n\n\u6700\u540e\u4e0a\u5b8c\u6574\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\n#define fint register int\nusing namespace std;\nint n;\nint tot=0;\nint a,b,c,d,e,x,y,z,u,v;\nchar ch;\nint mon_ping[13]={0,31,28,31,30,31,30,31,31,30,31,31,30};\nint mon_run[13]={0,31,29,31,30,31,30,31,31,30,31,31,30};\nint st[5001],tops=0;\nint as[5001];\ninline bool run(int year);\ninline void pre();\ninline void begins();\ninline void year_to_day();\ninline void month_to_day();\ninline void day_to_minute();\ninline void final_calculate();\nsigned main()\n{\n\tpre();\n\tbegins();\n\tfinal_calculate();\n\treturn 0;\n}\n\ninline void begins()\n{\n\tyear_to_day();\n\tmonth_to_day();\n\tday_to_minute();\n\treturn ;\n}\n\ninline bool run(int year)\n{\n\tif(year%4==0)\n    {\n    if(year%100==0)\n    {\n    if(year%400==0)\n    return 1;\n    else\n    return 0;\n    }\n    else\n    return 1;\n    }\n    else\n    return 0;\n}\n\ninline void year_to_day()\n{\n\tfor(fint i=a;i<x;i++)\n\tif(run(i))\n\ttot+=366;\n\telse\n\ttot+=365;\n\treturn ;\n}\n\ninline void month_to_day()\n{\n\tfor(fint i=1;i<b;i++)\n\tif(run(a))\n\ttot-=mon_run[i];\n\telse\n\ttot-=mon_ping[i];\n\tfor(fint i=1;i<y;i++)\n\tif(run(x))\n\ttot+=mon_run[i];\n\telse\n\ttot+=mon_ping[i];\n\treturn ;\n}\n\ninline void day_to_minute()\n{\n\ttot=(tot-c+z)*24*60;\n\ttot=tot-(60*d+e)+(60*u+v);\n\treturn ;\n}\n\ninline void final_calculate()\n{\n\tfor(fint i=1;i<=n;i++)\n\tif(tot>=as[i])\n\ttops++,tot-=as[i];\n\telse\n\tbreak;\n\tcout<<tops;\n\treturn ;\n}\n\ninline void pre()\n{\n\tcin>>n;\n\tfor(fint i=1;i<=n;i++)\n\tcin>>as[i];\n\tsort(as+1,as+n+1);\n\tcin>>a>>ch>>b>>ch>>c>>ch>>d>>ch>>e;\n\tcin>>x>>ch>>y>>ch>>z>>ch>>u>>ch>>v;\n\treturn ;\n}\n```\nPS:\u8fd9\u5957\u4ee3\u7801\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u6c42\u65e5\u671f\u95f4\u65f6\u95f4\u5dee\u7684\u6a21\u677f\uff08\u7c7b\u4f3c\u4e8eExcel\u91cc\u9762\u7684DATEDIF\u51fd\u6570\uff09\u3002\n\n\u795d\u5927\u5bb6AC\u6109\u5feb\uff01",
        "postTime": 1580388400,
        "uid": 244059,
        "name": "king_xbz",
        "ccfLevel": 0,
        "title": "\u5927\u6a21\u62df\u9898\u89e3\u2014\u2014P1167 \u5237\u9898"
    },
    {
        "content": "## \u849f\u84bb\u7684\u9898\u89e3\n\n\u8fd9\u4e00\u9898\u5176\u5b9e~~\u4e0d\u96be~~\n\n\u4e3b\u8981\u662f\u5728\u65f6\u95f4\u8ba1\u7b97\u7684\u5904\u7406\u4e0a\u6709\u70b9\u9ebb\u70e6\n\nAC\u4ee3\u7801\u5982\u4e0b\uff1a\uff08~~\u662f\u4e0d\u662f\u5f88\u60f3\u770b\u554a~~\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool fun(int x){\n\t//\u5224\u65ad\u662f\u5426\u4e3a\u95f0\u5e74\u7684\u51fd\u6570\n    if(x%100==0){if(x%400==0)return 1;}\n    else{if(x%4==0)return 1;}\n    return 0;\n}\nint main(){\n    int n;\n    int a[5010]={0};\n    int m[12]={31,28,31,30,31,30,31,31,30,31,30,31};\n    //\u5341\u4e8c\u4e2a\u6708\u4efd\u5bf9\u5e94\u7684\u65e5\u671f\n    char q;\n    long long year2,month2,day2,hour2,minute2;\n    int year,month,day,hour,minute;//\u5f00\u59cb\u65f6\u95f4\n    int year1,month1,day1,hour1,minute1;//\u7ed3\u675f\u65f6\u95f4\n    cin>>n;\n    for(int i=0;i<n;i++){\n    \tcin>>a[i];\n    }\n    sort(a,a+n);\n    scanf(\"%d-%d-%d-%d:%d\",&year,&month,&day,&hour,&minute);\n    scanf(\"%d-%d-%d-%d:%d\",&year1,&month1,&day1,&hour1,&minute1);\n    //\u907f\u5f00'-'':'\u8f93\u5165\u7684\u9a9a\u6270\n    year2=year1-year;\n    month2=month1-month;\n    day2=day1-day;\n    hour2=hour1-hour;\n    minute2=minute1-minute;\n    /*\u8ba1\u7b97\u51fa\u5dee\u503c*/\n    \n    if(year2>0){\n        month2+=year2*12;\n    }\n    if(month2>0){\n        int i=month,j=year;\n        for(int o=0;o<month2;o++){\n            if(i>12){\n                i-=12;\n                j++;\n            }\n            if(i==1&& fun(j)){\n                day2+=m[i-1]+1;\n                i++;\n                continue;\n            }\n            day2+=m[i-1];\n            i++;\n        }\n        \n    }\n    if(day2>0){\n        hour2+=day2*24;\n    }\n    if(hour2>0){\n        minute2+=hour2*60;\n    }\n    //\u8ba1\u7b97\u51faminute2\u4e4b\u540e\uff0c\u4ece\u5c0f\u51cf\u5230\u5927\uff0c\u5c31\u662f\u6700\u4f18\u89e3\u4e86\n    int sum=0;\n    for(int i=0;i<n;i++){\n        if(a[i]<=minute2){\n            minute2-=a[i];\n            sum++;\n        }\n    }\n    cout<<sum;\n    return 0;\n}\n```\n\u4e3b\u8981\u662f\u5bf9\u4e8e\u65e5\u671f\u8fdb\u4f4d\u4e0e\u95f0\u5e74\u5224\u65ad\u7684\u64cd\u4f5c\n\n\u9996\u5148\u4e3e\u4f8b\u4e24\u4e2a\u65e5\u671f\uff1a\n\n0000-02-01\n\n0001-00-01\n\n\u5e76\u4e0d\u7528\u62c5\u5fc3\u6b64\u5904month2=-2,\u56e0\u4e3ayear2=1,Month2\u4f1a\u88ab\u8865\u4e0a\n\n\u6700\u540e\uff1amonth2=-2+12=10\n\n~~\u603b\u4e0d\u53ef\u80fd\u65f6\u95f4\u5012\u6d41\u5427~~\n\n\u5176\u6b21\u662f\u95f0\u5e74\n\n\u5224\u65ad\u6708\u4efd\u662f2\u6708\u5e76\u4e14\u8fd4\u56de\u503c\u662f1\u7684\u8bdd\uff0cday2+=m[i-1]+1\uff0c\u537329\uff0c\u52a0\u5165\u5230day2\u4e2d\n\n\u5173\u7cfb\u662f \u5e74\u2192\u6708\u2192\u65e5\u2192\u5c0f\u65f6\u2192\u5206\u949f  \u6700\u540e\u7528\u5206\u949f\u6765\u8ba1\u7b97\n\n### \u968f\u610f\u501f\u9274\uff0c\u8bf7\u52ff\u6284\u88ad",
        "postTime": 1547962383,
        "uid": 100592,
        "name": "Tsumi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "\u5728\u6d1b\u8c37\u4e0a\u7b2c\u4e00\u6b21\u5199\u9898\u89e3  \n\u8fd9\u4e00\u9898\u7684\u601d\u8def\u4e0d\u96be\uff0c\u95ee\u9898\u5728\u4e8e\u65e5\u5386\u5e94\u8be5\u5982\u4f55\u8ba1\u7b97  \n### \u601d\u8def\u4e00\uff1a\u76f4\u63a5\u8ba1\u7b97\u4e24\u4e2a\u65f6\u95f4\u70b9\u4e4b\u95f4\u7684\u5dee\u503c\n$\\ \\ $\u53d1\u73b0\u8fd9\u662f\u4e00\u9053\u975e\u5e38\u975e\u5e38\u96be\u7684\u5927\u6a21\u62df\uff0c\u6d6a\u8d39\u65f6\u95f4\uff0c\u5bb9\u6613\u51fa\u9519\u3002\u6240\u4ee5\u8fd9\u79cd\u65b9\u6cd5\u53ea\u662f\u5728\u7406\u8bba\u4e0a\u53ef\u884c\uff0c\u5b9e\u9645\u4e0a\u5f88\u56f0\u96be\u3002\n### \u601d\u8def\u4e8c\uff1a\u53d6\u4e00\u4e2a\u65f6\u95f4\u70b9\u4f5c\u4e3a\u65f6\u95f4\u7684\u8d77\u70b9\n$\\ \\ $\u8fd9\u6837\uff0c\u5f53\u6211\u4eec\u60f3\u8981\u8ba1\u7b97\u4e24\u4e2a\u65f6\u95f4\u7684\u5dee\u503c\u65f6\uff0c\u53ea\u9700\u8981\u8ba1\u7b97\u4e24\u4e2a\u65f6\u95f4\u70b9\u8ddd\u79bb\u65f6\u95f4\u8d77\u70b9\u7684\u65f6\u95f4\uff0c\u518d\u76f8\u51cf\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u5f97\u5230\u65f6\u95f4\u5dee  \n$\\ \\ $\u7531\u6b64\u9898\u7684\u6570\u636e\u8303\u56f4\u53ef\u77e5\uff0c\u65f6\u95f4\u4ece $0000$ \u5e74\u5230 $9999$ \u5e74\uff0c\u56e0\u6b64\u9009 $0000$ \u5e74 $01$ \u6708 $01$ \u65e5 $00$ \u65f6 $00$ \u5206 $00$ \u79d2\u4f5c\u4e3a\u6807\u51c6\u65f6\u95f4\u3002\uff08\u6ce8\u610f\uff0c\u5728\u8ba1\u7b97\u65f6\uff0c\u6708\u548c\u65e5\u90fd\u662f\u4ece1\u8d77\u7684\uff0c\u65f6\uff0c\u5206\uff0c\u79d2\u662f\u4ece0\u8d77\u7684\uff09\n\n\n------------\n**\u6211\u624b\u5199\u4e86\u4e00\u4e2aclass\uff0c\u53ef\u4ee5\u5904\u7406\u548c\u65e5\u5386\u76f8\u5173\u7684\u95ee\u9898\u3002**  \n\u76ee\u524d\u8fd8\u6709\u4e9b\u4e0d\u592a\u5b8c\u5584\uff0c\u672a\u6765\u4f1a\u4fee\u6539\n  \n  \n\n------------\n\n# \u4e0b\u9762\u662f\u4ee3\u7801\n```C++\n#include<assert.h>\n#include<algorithm> \n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\nusing namespace std;\nunsigned const daysNum[13]={0,31,0,31,30,31,30,31,31,30,31,30,31};//\u50a8\u5b58\u6bcf\u4e2a\u6708\u7684\u65e5\u671f\u6570\u91cf\nclass Calender {\n\tprivate :\n\t\tunsigned year,month,day,hour,minute,second;\n\tpublic :\n\t\tstatic const unsigned long long a_minute=60ull,a_hour=a_minute*60ull,a_day=a_hour*24ull;//\u7528\u4e8e\u8ba1\u7b97\u7684\u5e38\u91cf\uff0c\u8ba1\u65f6\u4ee5\u79d2\u4f4d\u5355\u4f4d\n\t\tvoid CalenderWrite(unsigned ye=0u,unsigned mo=1u,unsigned da=1u,unsigned ho=0u,unsigned mi=0u,unsigned se=0u) {\n\t\t\tthis->year=ye;\n\t\t\tthis->month=mo;\n\t\t\tthis->day=da;\n\t\t\tthis->hour=ho;\n\t\t\tthis->minute=mi;\n\t\t\tthis->second=se;\n\t\t\treturn; //\u65e5\u5386\u5199\u5165\u51fd\u6570\uff0c\u53c2\u6570\u8bbe\u7f6e\u4e86\u9ed8\u8ba4\u503c\uff0c\u6709\u4e9b\u53c2\u6570\u53ef\u4ee5\u4e0d\u5199\uff08\u8282\u7701\u4ee3\u7801\u957f\u5ea6\uff09\n\t\t}\n\n\t\tbool is_runnian(unsigned y=0) {//\u5224\u65ad\u662f\u5426\u4f4d\u95f0\u5e74\n//\u6ce8:\u5982\u679c\u4e0d\u586b\u5199y\u6216y\u4f4d0\uff0c\u90a3\u4e48\u8fd4\u56dethis->year\u662f\u5426\u4e3a\u95f0\u5e74\uff0c\u5426\u5219\u8fd4\u56dey\u662f\u5426\u4e3a\u95f0\u5e74\n\t\t\tif(y==0) y=this->year;\n\t\t\tif(y%400==0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(y%100==0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telse if(y%4==0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse return false;\n\t\t\t}\n\n\t\t\t\t\n\t\t\t\n\t\t}\n\t\tunsigned getDaysInMonth(unsigned y,unsigned m=0) {\n//\t\t\tassert(this->month>=1&&this->month<=12);\n//\u548c\u4e0a\u9762\u7684\u4e00\u6837\uff0c\u5982\u679cm\u4e3a0\uff0c\u8fd4\u56dethis\u7684\u7ed3\u679c\uff0c\u5426\u5219\u8fd4\u56dem\u7684\u7ed3\u679c\n\t\t\tif(m==0)\n\t\t\tif(this->month!=2u) {\n\t\t\t\treturn daysNum[this->month];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(this->is_runnian()) return 29u;\n\t\t\t\telse return 28u;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(m!=2u) {\n\t\t\t\t\treturn daysNum[m];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(is_runnian(y)) {\n\t\t\t\t\t\treturn 29;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn 28;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tunsigned long long getStandardTime(void) {\n//\u83b7\u53d6\u6b64\u65f6\u7684\u65f6\u95f4\uff08\u4ee50000\u5e741\u67081\u65e50\u65f60\u52060\u79d2\u4e3a\u8d77\u70b9\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\n\t\t\tunsigned long long res=0ull;\n\t\t\tfor(unsigned y=0;y<this->year;y++) {//\u6ce8\u610f\u5fc5\u987b\u65f6\u5c0f\u4e8e\u53f7\uff0c\u4e0b\u540c\n\t\t\t\tif(is_runnian(y)) {\n\t\t\t\t\tres+=a_day*366ull;\n\t\t\t\t} \n\t\t\t\telse {\n\t\t\t\t\tres+=a_day*365ull;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(unsigned m=1;m<this->month;m++) {\n//\t\t\t\tcerr<<\"month=\"<<this->month<<ENDl;\n\t\t\t\tres+=getDaysInMonth(this->year,m)*a_day;\n//\u6b64\u5904\u8981\u5224\u65ad\u7684\u662fm\u7684\u5929\u6570\uff0c\u4e0d\u662fthis->month\u7684\u5929\u6570\uff0c\u6211\u5728\u8fd9\u91ccWA\u4e86\u5f88\u591a\u6b21\n\t\t\t}\n\t\t\tfor(unsigned d=1;d<this->day;d++) {\n\t\t\t\tres+=a_day;\n\t\t\t}\n\t\t\tfor(unsigned h=0;h<this->hour;h++) {\n\t\t\t\tres+=a_hour;//\u5176\u5b9e\u5e94\u8be5\u662fan_hour,\u4f46\u662f\u4e3a\u4e86\u524d\u540e\u7edf\u4e00\uff0c\u53ea\u80fd\u8fd9\u6837\n\t\t\t}\n\t\t\tfor(unsigned m=0;m<this->minute;m++) {\n\t\t\t\tres+=a_minute;\n\t\t\t}\n\t\t\tres+=this->second;//\u6700\u540e\u52a0\u4e0a\u79d2\uff08\u867d\u7136\u8fd9\u9053\u9898\u79d2\u4e3a0\uff09\n\t\t\treturn res;\n\t\t}\n}; \nCalender BEGIN,END;//\u6ce8\u610f\uff0c\u4e0d\u80fd\u7528\u201cbegin\u201d\u6216\u201cend\u201c\uff0c\u5426\u5219\u4f1aCE\nconst unsigned MAXN=5000+5;\nunsigned n,ans;\nunsigned long long timeLeft=0;\nunsigned list[MAXN];\nsigned main() {\n\tscanf(\"%u\",&n);\n\tfor(unsigned i=0u;i<n;i++) {\n\t\tscanf(\"%u\",&list[i]);\n\t}\n\tsort(list,list+n);\n\tunsigned temp=0;\n\tfor(unsigned i=0u;i<n;i++) {\n\t\ttemp+=list[i];\n\t}\n\t\tunsigned a,b,c,d,e;\n\t\tscanf(\"%u-%u-%u-%u:%u\",&a,&b,&c,&d,&e);//\u8bfb\u5165\u683c\u5f0f\u8981\u6ce8\u610f\n\t\tBEGIN.CalenderWrite(a,b,c,d,e);\n\t\tscanf(\"%u-%u-%u-%u:%u\",&a,&b,&c,&d,&e);\n\t\tEND.CalenderWrite(a,b,c,d,e);\n\t\n\ttimeLeft=END.getStandardTime()-BEGIN.getStandardTime();\t\n\ttimeLeft/=60ull;//\u8981\u6362\u7b97\u6210\u5206\u949f\n\tfor(unsigned i=0u;i<n;i++) {//\u8d2a\u5fc3\u6c42\u89e3\n\t\tif(list[i]<=timeLeft) {//\u6b64\u5904\u7531\u4e8e\u4f7f\u7528unsigned\u7c7b\u578b\u53d8\u91cf\uff0c\u4e0d\u80fd\u7528\u51cf\u6cd5\uff0c\u5426\u5219\u4f1a\u6ea2\u51fa\n\t\t\ttimeLeft-=list[i];\n\t\t\tans++;\n\t\t}\n\t\telse {\n\t\t\tbreak;\n\t\t}\n\t}\n\tprintf(\"%u\\n\",ans);//\u8981\u517b\u6210\u6700\u540e\u6362\u884c\u7684\u597d\u4e60\u60ef\n\treturn O;\n}\n```\n\n\n------------\n\n###### \u6e29\u99a8\u63d0\u793a\uff1a\u4ee3\u7801\u5df2\u7ecf\u8fdb\u884c\u53cd\u4f5c\u5f0a\u5904\u7406\n\u5982\u679cRE\u4e86\u9ebb\u70e6\u7ba1\u7406\u5458\u4fee\u6539\u4e00\u4e0b\uff0c\u7ba1\u7406\u5458\u8f9b\u82e6\u4e86\n\n",
        "postTime": 1580203131,
        "uid": 243883,
        "name": "wangzeyu",
        "ccfLevel": 0,
        "title": "P1167\u9898\u89e3"
    },
    {
        "content": "**Java\u4e2d\u6709\u4e00\u4e2aCalendar\u7c7b\uff0c\u53ef\u4ee5\u5904\u7406\u65e5\u671f\u548c\u65f6\u95f4\u7684\u76f8\u5173\u6570\u636e**\n\n\u89e3\u9898\u8fc7\u7a0b\uff1a\n\n1\u3001\u6c42\u51fa\u4e24\u4e2a\u65e5\u671f\u7684\u95f4\u9694\u5206\u949f\u3002\n        \n2\u3001\u8d2a\u5fc3\u6c42\u51fa\u53ef\u4ee5\u89e3\u591a\u5c11\u9053\u9898\u3002\n\n\u4e3a\u4ec0\u4e48\u4e0d\u7528C++\u6765\u5199\uff0c~~\u56e0\u4e3a~~~~\u61d2\u5f97\u53bb\u7b97\u4e24\u4e2a\u6570\u7684\u65f6\u95f4\u95f4\u9694~~ (\u56e0\u4e3a\u592a\u83dc\u4e86)\u3002\n\n\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bCalendar\u76f8\u5173\u7684\u4e00\u4e9b\u65b9\u6cd5\u3002\n```java\n1\u3001 getInstance() \n\n\u521d\u59cb\u5316\u4e00\u4e2a\u65e5\u5386\u5bf9\u8c61\u3002\n\n2\u3001getTimeInMillis()\n\n\u8fd4\u56de\u5f53\u524dCalendar\u5bf9\u8c61\u4e2d\u65f6\u95f4\u7684\u6beb\u79d2\u6570\u3002\n```\n\n**\u6240\u4ee5\u8fd9\u9053\u9898\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e24\u4e2acalendar\u5bf9\u8c61\uff0c\u7528getTimeInMillis()\u5f97\u5230\u5404\u81ea\u7684\u6beb\u79d2\u6570\uff0c\u76f8\u51cf\u5c31\u53ef\u4ee5\u6c42\u51fa\u4e24\u6bb5\u65f6\u95f4\u95f4\u9694\u7684\u6beb\u79d2\u6570\uff0c\u518d\u9664\u4ee51000\u9664\u4ee560\u5c31\u662f\u5206\u949f\u6570\u4e86\u3002**\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```java\nimport java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner reader=new Scanner(System.in);\n\t\tint n, a[];\n\t\tn=reader.nextInt();    //\u8f93\u5165n\n\t\ta=new int[n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\ta[i]=reader.nextInt();  //\u8f93\u5165n\u9053\u9898\u7684\u65f6\u95f4\n\t\t}\n\t\tArrays.sort(a);      //\u5bf9\u65f6\u95f4\u6392\u5e8f\n\t\tString timea, timeb;\n\t\tint y1,m1,d1,h1,s1,y2,m2,d2,h2,s2;\n\t\ttimea=reader.next();   //\u8bfb\u5165\u65e5\u671f\n\t\ttimeb=reader.next();   //\u540c\u4e0a\n\t\tString regex=\"[-:]\";\n\t\tString date1[]=timea.split(regex); //\u4ece\u5b57\u7b26\u4e32\u4e2d\u5206\u79bb\u51fa\u6570\u5b57\n\t\tString date2[]=timeb.split(regex);  //\u540c\u4e0a\n\t\ty1=Integer.parseInt(date1[0]);   m1=Integer.parseInt(date1[1]);\n\t\td1=Integer.parseInt(date1[2]); h1=Integer.parseInt(date1[3]);\n\t\ts1=Integer.parseInt(date1[4]);\n\t\ty2=Integer.parseInt(date2[0]);   m2=Integer.parseInt(date2[1]);\n\t\td2=Integer.parseInt(date2[2]); h2=Integer.parseInt(date2[3]);\n\t\ts2=Integer.parseInt(date2[4]);\n\t\tCalendar aCalendar=Calendar.getInstance();\n\t\tCalendar bCalendar=Calendar.getInstance();\n\t\taCalendar.set(y1, m1-1, d1, h1, s1);  //\u521b\u5efaCalendar\u5bf9\u8c61,\u6708\u4efd\u8981\u51cf\u4e00 0\u8868\u793a1\u6708\n\t\tbCalendar.set(y2, m2-1, d2, h2, s2);  //\u540c\u4e0a\n\t\tlong haveTime=(bCalendar.getTimeInMillis()-aCalendar.getTimeInMillis())/1000/60;  //\u6c42\u51fa\u5206\u949f\n\t\tint ans=0;        //\u53ef\u4ee5\u89e3\u9898\u7684\u4e2a\u6570\n\t\tfor(int i : a) {\n\t\t\tif(haveTime<=0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(i<=haveTime) {\n\t\t\t\tans++;\n\t\t\t\thaveTime-=i;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans); //\u8f93\u51fa\u7b54\u6848\n\t}\n}\n```\n\n\n**\u611f\u8c22GreatJMore\u7684\u63d0\u9192\uff0c\u4ee5\u4e0b\u4ee3\u7801\u7528Date\u4f18\u5316\uff0c\u589e\u52a0\u4e86\u53ef\u8bfb\u6027**\n```java\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner reader=new Scanner(System.in);\n        int n, a[];\n        n=reader.nextInt();    //\u8f93\u5165n\n        a=new int[n];\n        for(int i=0;i<n;i++) {\n            a[i]=reader.nextInt();  //\u8f93\u5165n\u9053\u9898\u7684\u65f6\u95f4\n        }\n        Arrays.sort(a);      //\u5bf9\u65f6\u95f4\u6392\u5e8f\n        String timea, timeb;\n        timea=reader.next();   //\u8bfb\u5165\u65e5\u671f\n        timeb=reader.next();   //\u540c\u4e0a\n        \n        //----------------\u6539\u8fdb\u90e8\u5206\n        \n        int index=timea.lastIndexOf(\"-\");\n        //\u5c06\u8f93\u5165\u7684\u65f6\u95f4\u683c\u5f0f\u89c4\u8303\u4e3a yyyy-MM-dd HH:mm\n        timea=timea.substring(0, index)+\" \"+timea.substring(index+1);  \n        timeb=timeb.substring(0, index)+\" \"+timeb.substring(index+1);\n        //\u7528SimpleDateFormat\u89c4\u5b9a\u65f6\u95f4\u7684\u683c\u5f0f\u5316\u65b9\u5f0f\n        SimpleDateFormat dateFormat=new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");  \n        Date aDate=null, bDate=null;\n        try {\n\t\t\taDate=dateFormat.parse(timea);  //\u89e3\u6790\u8f93\u5165\u7684\u65f6\u95f4\n\t\t\tbDate=dateFormat.parse(timeb);  //\u540c\u4e0a\n\t\t} catch (ParseException e) {\n\t\t\te.printStackTrace();\n\t\t}\n        //----------------\u6539\u8fdb\u90e8\u5206\n        \n        long haveTime=(bDate.getTime()-aDate.getTime())/1000/60;  //\u6c42\u51fa\u5206\u949f\n        int ans=0;        //\u53ef\u4ee5\u89e3\u9898\u7684\u4e2a\u6570\n        for(int i : a) {\n            if(haveTime<=0) {\n                break;\n            }\n            if(i<=haveTime) {\n                ans++;\n                haveTime-=i;\n            }\n        }\n        System.out.println(ans); //\u8f93\u51fa\u7b54\u6848\n    }\n}\n```\n\n",
        "postTime": 1571574040,
        "uid": 214474,
        "name": "outis_crypt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "1.- 1.- 1.   \u662f\u4e00\u9053\u5927\u6a21\u62df\uff0c\u4e5f\u4e0d\u7b97\u592a\u5927\u3002\u4f46\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\u633a\u591a\u7684\u3002\n\u6ce8\u610f\u5206\u7c7b\u8ba8\u8bba\uff0c\u8003\u8651\u7279\u6b8a\u503c\u3002\n\u770b\u4ee3\u7801\uff1a\n\n```c\n#include< iostream>\n\n#include< cmath>\n\n#include< cstdio>\n\n#include< cmath>\n\n#include< algorithm>\n\n#include< cstring>\n\nusing namespace std;\n\n#define xx 10010\n\nint n,a[ xx ],existx,existy,ta,tt;\n\nlong long sum;\n\nint mouth[ 13 ]={0,1,2,1,0,1,0,1,1,0,1,0,1};\n//\u7528\u4e8e\u5224\u65ad\u5927\u5c0f\u6708\n\nint ya,ma,timea,da,yb,mb,timeb,db;\n//\u8d77\u59cb\u5e74\u6708\u65e5\uff0c\u7ec8\u6b62\u5e74\u6708\u65e5\u3002\n\nchar p[ 31 ],q[ 31 ];\n//\u7528\u5b57\u7b26\u5b58\u5e74\u6708\u65e5\u3002\n\nbool cmp( int a,int b )\n{\n  \n\treturn a<b;\n}\n\nint lx(int u)\n{//\u5224\u65ad\u662f\u5426\u4e3a\u95f0\u5e74\u3002\n                \n\tif(abs(u-2000)%4==0)\n\t{\n    \n\t\treturn 1;\n\t}\n  \n\telse return -1;\n}\n\nvoid runyear(int x)\n{\n\n\tif(x==1)\n\t{\n\t\tint u=((int)p[0]-48)*1000+((int)p[1]-48)*100+((int)p[2]-48)*10+((int)p[3]-48);\n\t\tya=u;//\u5b57\u7b26\u6362\u6210\u6574\u5f62\u53d8\u91cf\u5b58\u50a8\u3002\n\t\tif(lx(u)==1)\n\t\texistx=1;//\u8bb0\u5f55\u8d77\u59cb\u5e74\u662f\u5426\u4e3a\u95f0\u5e74\u3002\n\t}\n\telse//\u8bb0\u5f55\u7ec8\u6b62\u5e74\u3002\n\t{\n\t\tint u=((int)q[0]-48)*1000+((int)q[1]-48)*100+((int)q[2]-48)*10+((int)q[3]-48);\n\t\tyb=u;\n\t\tif(lx(u)==1)\n\t\texisty=1;\n\t}\n}\n\nvoid init()  \n//\u5c06\u6708  \u65e5 \u65f6 \u5206\u90fd\u6362\u4e3a\u6574\u5f62\u3002\n{  \n//\u5982\u679cp[0]\u662f1\u3010\u5b57\u7b26\u578b\u3011\uff0c(int)p[0]-48=1\u3010\u6574\u5f62\u3011\n\n\tma=(int)p[5]*10-480+(int)p[6]-48;\n\tmb=(int)q[5]*10+(int)q[6]-480-48;\n\tda=(int)p[8]*10+(int)p[9]-480-48;\n\tdb=(int)q[8]*10+(int)q[9]-480-48;\n\ttimea=(((int)p[11]-48)*10+((int)p[12]-48))*60+(int)p[14]*10+(int)p[15]-480-48;\n\ttimeb=(((int)q[11]-48)*10+((int)q[12]-48))*60+(int)q[14]*10+(int)q[15]-480-48;\n\n}\n\nvoid lm()\n//\u5c06\u6708\u5316\u4e3a\u5929\u6570\u5dee\u3002\n{\n\n\tif(ya!=yb)//\u8d77\u6b62\u5e74\u4e0d\u540c\u65f6\n\t{\n\t\tfor(int i=1;i<=mb-1;++i)\n\t\t{\n\t\t\tif(mouth[i]==0)\n\t\t\tsum+=30;\n\t\t\tif(mouth[i]==1)\n\t\t\tsum+=31;\n\t\t\tif(mouth[i]==2)\n\t\t\t{\n\t\t\t\tif(existy==1)\n\t\t\t\tsum+=29;\n\t\t\t\telse\n\t\t\t\tsum+=28;\n\t\t\t}\n\t\t}\n\t\tsum+=db-1;//\u6ce8\u610f\u51cf1\uff01\uff01\n\t\tfor(int i=12;i>=ma+1;--i)\n\t\t{\n\t\t\tif(mouth[i]==0)\n\t\t\tsum+=30;\n\t\t\tif(mouth[i]==1)\n\t\t    sum+=31;\n\t\t\tif(mouth[i]==2)\n\t\t\t{\n\t\t\t\tif(existx==1)\n\t\t\t\tsum+=29;\n\t\t\t\telse sum+=28;\n\t\t\t}\n\t\t}\n\t\tif(mouth[ma]==0) sum=sum+30-da;\n\t\tif(mouth[ma]==1) sum=sum+31-da;\n\t\tif(mouth[ma]==2)\n\t\t{\n\t\t\tif(existx==1) sum=sum+29-da;\n\t\t\telse sum=sum+28-da;\n\t\t}\n\t}\n\tif(ya==yb&&ma!=mb) //\u5e74\u76f8\u540c\u6708\u4e0d\u540c\u65f6\u3002\n\t{\n\t\tfor(int i=ma+1;i<=mb-1;++i)\n\t\t{\n\t\t\tif(mouth[i]==0)\n\t\t\tsum+=30;\n\t\t\tif(mouth[i]==1)\n\t\t\tsum+=31;\n\t\t\tif(mouth[i]==2)\n\t\t\t{\n\t\t\t\tif(existy==1)\n\t\t\t\tsum+=29;\n\t\t\t\telse\n\t\t\t\tsum+=28;\n\t\t\t}\n\t\t}\n\t\tif(mouth[ma]==0) sum=sum+30-da;\n\t\tif(mouth[ma]==1) sum=sum+31-da;\n\t\tif(mouth[ma]==2)\n\t\t{\n\t\t\tif(existx==1) sum=sum+29-da;\n\t\t\telse sum=sum+28-da;\n\t\t}\n\t\tsum+=db-1;\n\t}\n}\n\nvoid ltime()//\u8ba1\u7b97\u5c0f\u65f6\u7684\u5dee\u3002\n{\n\n\tif(ma==mb&&ya==yb&&da==db)\n\t{\n\t\tsum+=(timeb-timea);\n\t}\n\telse\n\t{\n\t\tsum=sum+(24*60-timea)+timeb;\n\t}\n}\n\nint main()\n{\n\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tcin>>a[i];\n\t} \n\tfor(int i=0;i<=15;++i)\n\t{\n\t\tcin>>p[i];\n\t}\n\tfor(int i=0;i<=15;++i)\n\t{\n\t\tcin>>q[i];\n\t}\n\tsort(a+1,a+1+n,cmp);\n\trunyear(1);runyear(2);init();\n\tfor(int i=ya+1;i<=yb-1;++i)\n\t{\n\t\tif(lx(i)==1)\n\t\tsum+=366;\n\t\tif(lx(i)==-1)\n\t\tsum+=365;\n\t}//\u8ba1\u7b97\u8d77\u6b62\u5e74\u95f4\u5dee\u591a\u5c11\u5929\u3002\n\tlm();sum=sum*24*60;//\u5316\u5929\u4e3a\u5206\u949f\u3002\n\tltime();\n\twhile(sum>0&&ta<=n-1)\n\t{\n\t\tsum-=a[++ta];\n\t\tif(sum>=0)\n\t\t{\n\t\t\ttt++;\n\t\t}\n\t}\n\tcout<<tt<<'\\n';\n\treturn 0;\n    \n}\n\n```",
        "postTime": 1520999471,
        "uid": 37488,
        "name": "ghmgjf",
        "ccfLevel": 0,
        "title": "1167\u5237\u9898"
    },
    {
        "content": "# \u672c\u9898\u89e3\u4e3b\u8981\u8bb2\u65b9\u6cd5!\n\n## \u96be\u70b91:\u65f6\u95f4\u5224\u5b9a.\n\n\u95ee\u9898\u63cf\u8ff0:\n\n\u5982\u4f55\u7edf\u8ba1\u65f6\u95f4\u4ee5\u53ca\u8ba1\u7b97\u662f\u5426\u662f\u95f0\u5e74(\u96be\u70b9).\n\n\u89e3\u51b3\u65b9\u6cd5:\n\n\u5bf9\u4e8e\u7b2c\u4e00\u5929,\u6211\u4eec\u5f53\u505a\u4ece00:00\u5f00\u59cb.\u800c\u5728\u603b\u65f6\u95f4\u91cc\u9762\u51cf\u53bb\u76f8\u5e94\u7684\u65f6\u95f4.\n\n\u4f8b\u5982:05:32      \u6211\u4eec\u5c31\u5728\u603b\u65f6\u95f4\u91cc\u9762\u51cf\u53bb  5\\*60+32\u5206\u949f.\u8fd9\u6837,\u5c31\u53ef\u4ee5\u5f53\u505a\u4e00\u4e2a\u6574\u7684\u5929\u6765\u8ba1\u7b97\u65f6\u95f4\u4e86\n\n\u540c\u6837\u5bf9\u4e8e\u6700\u540e\u4e00\u5929,\u6211\u4eec\u76f4\u63a5\u628a\u6700\u540e\u4e00\u5929\u7684\u65f6\u95f4\u52a0\u5230\u603b\u65f6\u95f4\u91cc\u9762,\u8fd9\u6837\u7684\u8bdd,\u5c11\u7b97\u4e00\u5929\u5c31\u597d\u4e86.\n\n\u4f8b\u5982:   \u6700\u540e\u4e00\u5929   05:24     \u6211\u4eec\u5c31\u5728\u603b\u65f6\u95f4\u91cc\u9762\u52a0\u4e0a   5\\*60+24   \u5206\u949f,\u7136\u540e\u5bf9\u5176\u4ed6\u90e8\u5206\u8fdb\u884c\u6309\u5929\u52a0\u7684\u5904\u7406.\n\n## \u96be\u70b92:\u6570\u636e\u50a8\u5b58\n\n\u95ee\u9898\u63cf\u8ff0:\n\n\u6709\u4e00\u4e2a\u6570\u636e\u662f0000\u5e74\u52309999\u5e74,\u5c31\u7b97\u6bcf\u5e74\u4e3a365\u5929,\u5219\u4e3a5256000000\u5206\u949f,\u79d1\u5b66\u8ba1\u6570\u6cd5:5.256\\*10^9.\u597d\u50cf\u662funsinged long long \u53ef\u4ee5\u5b58\u4e0b.\u4f46\u662f\u6211\u5728\u7edf\u4e00\u5b58\u4e4b\u540e,\u8003\u8651\u65f6\u95f4\u518d\u52a0\u5f3a\u4e00\u4e9b,\u7528unsigned long long \u65e0\u6cd5\u5b58\u4e0b\u8981\u600e\u4e48\u529e(\u5176\u5b9e\u4f60\u53ef\u4ee5\u4e0d\u7528\u8003\u8651).\n\n\u89e3\u51b3\u65b9\u6cd5:\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5929,\u6211\u4eec\u5bf9\u5b83\u8fdb\u884c\u8ba1\u6570,\u76f4\u63a5\u4ee5\u5929\u4e3a\u5355\u4f4d,\u6bcf\u5929\u5728\u603b\u65f6\u95f4\u91cc\u9762,\u52a0\u4e0a24\\*60\u5206\u949f.\n\n\u7ed3\u5408\u4e0a\u6587\u7684\u65f6\u95f4\u5224\u5b9a\u4e0a\u6211\u8bb2\u8ff0\u7684\u65b9\u6cd5,\u6b64\u65b9\u6cd5\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u4e86.\n\n## \u96be\u70b9(\u6ca1\u4ec0\u4e48\u96be\u7684)3:\u8d2a\u5fc3\n\n\u95ee\u9898\u63cf\u8ff0:\n\n\u5982\u679c\u4f60\u4f7f\u7528unsigned long long \u7684\u8bdd,\u4f60\u53ef\u4ee5\u76f4\u63a5\u6700\u540e\u4e00\u904dfor,\u7136\u540e\u7686\u53ef\u4ee5\u4e86.\u4f46\u662f\u5982\u679c\u52a0\u5927\u4e86\u6570\u636e\u8303\u56f4,\u600e\u4e48\u505a?\n\n\u89e3\u51b3\u65b9\u6cd5:\n\n\u8bbe\u7f6e\u4e00\u4e2a tail \u6307\u9488,\u8868\u793a\u73b0\u5728\u5df2\u7ecf\u5904\u7406\u5230\u54ea\u4e00\u4f4d\u4e86,\u7136\u540e\u5bf9\u4e8e\u6bcf\u6b21\u4e00\u4e2a\u5faa\u73af(\u4efb\u610f\u4e00\u4e2a\u5fc5\u5b9a\u6267\u884c\u7684\u5faa\u73af)\u5185\u52a0\u4e0a\u4e00\u4e2a while \u5728\u7ebf\u5904\u7406\u7684\u7a0b\u5e8f,\u8fd9\u6837\u65e2\u53ef\u4ee5\u4fdd\u8bc1\u4f60\u7b97\u8fc7\u7684\u6ca1\u6709\u88ab\u91cd\u590d\u8ba1\u7b97,\u53c8\u53ef\u4ee5\u4fdd\u8bc1\u4f60\u7684\u8d2a\u5fc3\u662f\u6b63\u786e\u7684.\u6700\u540e\u4e3a\u4e86\u4fdd\u9669\u4f60\u53ef\u4ee5\u5728\u6700\u540e\u518d\u52a0\u4e00\u4e2a while \u5faa\u73af(\u6211\u6ca1\u6709\u52a0\u4f46\u662f\u4ecd\u7136\u8fc7\u4e86).\n\n## \u4ecd\u7136\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9(\u5982\u679c\u6570\u636e\u589e\u5f3a\u7684\u8bdd)\n\nwhile \u5faa\u73af\u6700\u597d\u662f\u5728 \u603b\u65f6\u95f4 \u5373\u5c06\u63a5\u8fd1 long long \u6781\u9650\u65f6,\u5904\u7406\u8fd9\u6b21\u8d2a\u5fc3.\u7531\u4e8e\u849f\u84bb\u6280\u672f\u6709\u9650,\u6ca1\u6709\u5b9e\u73b0.\n\n\u65f6\u95f4\u8ba1\u6570\u65b9\u9762,\u53ef\u4ee5\u4e0d\u7528\u6309\u5929\u8ba1\u7b97,\u800c\u4f7f\u7528\u6309\u6708,\u6309\u5468\u8ba1\u7b97\u7b49,\u751a\u81f3\u6309\u5e74\u8ba1\u7b97,\u90fd\u4f1a\u8ba9\u8fd9\u4e2a\u65f6\u95f4\u66f4\u4f18\u5316.\n\n\u8d2a\u5fc3\u4f18\u5316,\u5bf9\u4e8e\u6709\u4e9b\u5c0f\u7684\u53ef\u4ee5\u5728\u8f93\u5165\u65f6\u4f7f\u7528\u524d\u7f00\u548c\u4f18\u5316.\n\n\u4ee3\u7801\u7684\u8bdd,\u6211\u5c31\u4e0d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nshort Days[2][13]={{0,31,28,31,30,31,30,31,31,30,31,31,30},{0,31,29,31,30,31,30,31,31,30,31,31,30}};\nint n,timein[5001],sy,ey,sm,em,sd,ed,sh,eh,ss,es,tail=1;\nunsigned long long timeall,sum,at;\nbool rn(int x){\n    if(x%100==0){if(x%400==0)return 1;}\n    else{if(x%4==0)return 1;}\n    return 0;\n}\nbool comp(int x,int y){return x<y;}\nint main(){\n    cin>>n;for(int i=1;i<=n;i++)cin>>timein[i];sort(timein+1,timein+n+1,comp);\n    scanf(\"%d-%d-%d-%d:%d\",&sy,&sm,&sd,&sh,&ss);\n    scanf(\"%d-%d-%d-%d:%d\",&ey,&em,&ed,&eh,&es);\n    timeall=eh*60+es-sh*60-ss;at+=timeall;\n    for(int ny=sy;ny<=ey;ny++){\n        bool rnm=rn(ny);\n        for(int nm= ((ny==sy)?sm:1) ;nm<= ((ny==ey)?em:12) ;nm++){\n            for(int nd = ((ny==sy && nm==sm)?sd:1);nd<= ((ny==ey && nm==em)?ed-1:Days[rnm][nm]) ;nd++)timeall+=1440;\n            while(timein[tail]<=timeall && tail<=n){sum++;timeall-=timein[tail];tail++;}\n        }\n    }\n    while(timein[tail]<=timeall && tail<=n){sum++;timeall-=timein[tail];tail++;}//\u53ef\u4ee5\u4e0d\u52a0,\u52a0\u4e0a\u4fdd\u9669,\u800c\u4e14\u7531\u4e8etail\u7684\u5b58\u5728,\u4e0d\u4f1a\u6d6a\u8d39\u592a\u957f\u65f6\u95f4\n    cout<<sum;\n    return 0;\n}\n```",
        "postTime": 1507642515,
        "uid": 43931,
        "name": "SofanHe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "### \u5728810\u5f00\u51fa\u6211\u7684\u9996\u53d1\u9898\u89e3\n\n  \u51b3\u5b9a\u5c3d\u65e9\u5f00\u59cb\u6b63\u6587\n \uff08\u6765\u81ea\u91cd\u6784\u8fc7\u4ee3\u7801\u7684\u8001\u840c\u65b0\uff09\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n **\u9700\u8981\u6ce8\u610f\u7684\u51e0\u70b9\uff1a**\n\n** 1.\u95f0\u5e73\u5e74\u95ee\u9898**  \uff08\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\uff09\n\n** 2.\u603b\u65f6\u95f4\u4ee5\u5206\u949f\u4e3a\u5355\u4f4d**\n\n\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u662f\u4ece0000\u5e74\u52309999\u5e74\u7684\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u6570\u503c\u5df2\u7ecf\u81a8\u80c0\u5230int\u5df2\u7ecf\u88c5\u4e0d\u4e0b\u5566\uff01\uff01\uff01\uff08\u8001\u840c\u65b0\u6211\u8840\u4e0e\u6cea\u7684\u6559\u8bad\uff09\n\n### unsigned long long \u662f\u5b8c\u5168\u53ef\u4ee5\u7684\n\n** 3.\u5b58\u50a8\u6bd4\u8d5b\u65f6\u95f4**\n\n \u5b8c\u5168\u53ef\u4ee5\u52a0\u4e00\u4e2a\u5b57\u7b26\uff08char\uff09\u7528\u6765\u5b58\u653e\u4e2d\u95f4\u7684\u7b26\u53f7\uff08:\u548c-\uff09\uff0c\u5176\u4f59\u7684\u7528int\u5c31\u53ef\u4ee5\u5b58\u4e0b\u4e86\uff08\u8be6\u89c1\u4ee3\u7801\uff09\n\n**4.\u8f93\u5165\u7684\u9898\u76ee\u65f6\u95f4\u6392\u5e8f**\n\n \u5355\u7eaf\u7684\u8d2a\u5fc3\u601d\u60f3\uff0c\u65f6\u95f4\u8d8a\u5c11\u5148\u505a\uff0c\u505a\u4e00\u4e2a\u52a0\u4e00\n\n### \u849f\u84bb\u7edf\u8ba1\u65f6\u95f4\u7684\u601d\u8def\n\n### \u6709\u6837\u4f8b\u597d\u8bf4\u8bdd\uff1a\uff08\u4f8b2018-03-21-03:00 2020-09-08-12:00\uff09\n\n\u6b65\u9aa4\uff1a1.\u5148\u628a\u7ed3\u5c3e\u5e74\u5ffd\u7565\uff0c\u7edf\u8ba1\u524d\u9762\u7684\u90e8\u5206\uff08\u5982\u6837\u4f8b\u5c31\u53ea\u5148\u7edf\u8ba12018\u5e742019\u5e74\u4e24\u4e2a\u5b8c\u6574\u7684\u5e74\u4efd\uff09\uff0c\u8fd9\u6837\u5c31\u662f\u51e0\u4e2a365\uff0c366\u76f8\u52a0\u7684\u95ee\u9898\u3002\n\n 2.\u63a5\u4e0b\u6765\u5c31\u662f\u52a0\u4e0a\u540e\u9762\u7684\uff082020\u5e74\u7684\uff09\u65f6\u95f4\uff0c\u8fd9\u5e94\u8be5\u597d\u7b97\u591a\u4e86\u5427\uff0c\u5355\u7eaf\u52a0\u4e0a\u516b\u4e2a\u6708\u548c\u4e5d\u6708\u76848\u592912\u5c0f\u65f6\uff08\u5168\u90e8\u5316\u4e3a\u5206\u949f\uff0c\u5c31\u662f\u00d724\uff0c\u00d760\u7684\u95ee\u9898\uff09\n\n 3.\u6700\u540e\u5c31\u662f\u51cf\u53bb\u5f00\u59cb\uff082018\u5e74\uff09\u6bd4\u8d5b\u6240\u6ca1\u6709\u7ecf\u5386\u7684\u524d\u4e24\u4e2a\u6708\u96f6\u591a\u5c11\u5929\u7b49\u7b49\u7684\u5206\u949f\u6570\uff08\u4e0e\u7b2c2\u6b65\u601d\u8def\u8fd1\u4f3c\uff0c\u5dee\u522b\u5c31\u662f\u6c42\u51fa\u7684\u8fd9\u5757\u65f6\u95f4\u662f\u9700\u8981\u51cf\u6389\u7684 _(\u00d2\u03c9\u00d3\u0e51\u309d\u2220)__\uff09\n\n### (ps:\u4ee5\u4e0a\u7528unsigned long long \u5b58\u50a8\u6536\u636e\u5b8c\u5168\u53ef\u4ee5\uff09\n\n \u4e00\u4e2asort()\u89e3\u51b3\u5176\u5b83\u4e00\u5207\u95ee\u9898\u3002\u3002\u3002\n\n **\u90d1\u91cd\u7684\u8d34\u4e0a\u9971\u542bn\u6b21\u63d0\u4ea4\u7684AC\u4ee3\u7801**\n \n \uff08**ps:1.\u4e3b\u51fd\u6570\u8ba1\u7b97\u90e8\u5206\u6ca1\u6709\u6539\u52a8\uff0c\u4f46\u662f\u5176\u5b83\u7ec6\u8282\u90e8\u5206\u6539\u52a8\u4e86\u4e09\u5904...\uff08WA\u662f\u80af\u5b9a\u7684\uff09**\n \n \uff08~~\u5fc3\u810f\uff08\u4e00\u58f0\uff09\u88ab\u62ce\u8d70~~\uff09\n \n **2.\u4ee3\u7801\u662fC++\u7528cin\uff0ccout\u6765\u8f93\u5165\u8f93\u51fa\uff0c\u5f00printf,scanf\u53ef\u80fd\u4f1a\u5feb\u4e00\u70b9**\uff09\n\n```c\n##include<bits/stdc++.h>\nusing namespace std;\nunsigned long long  a[5001];\n\nint b[13]=\n{0,31,59,90,120,151,181,212,243,273,304,334};\nint ass(int p)//\u5224\u65ad\u95f0\u5e73\u5e74\u51fd\u6570\n{\n    if(p%400==0){return 5;}\n    else if(p%100!=0&&p%4==0){return 5;}\n    else {return 7;}\n}\nint main()\n{\n    int n;cin>>n;\n    for(int i=0;i<n;i++)\n    {\n        cin>>a[i];\n    }\n    sort(a,a+n);//\u65f6\u95f4\u6392\u5e8f\n    int y,m,d,h,min;char s;\n    int y1,m1,d1,h1,min1;\n    cin>>y>>s>>m>>s>>d>>s>>h>>s>>min;\n    cin>>y1>>s>>m1>>s>>d1>>s>>h1>>s>>min1;\n    unsigned long long x=0,x1=y1-y;\n    for(int i=0;i<x1;i++)//\u6dfb\u52a0\u5b8c\u6574\u5e74\u7684\u65f6\u95f4\n    {\n        x+=365;\n        if(ass(y+i)==5){x++;}\n    }\n    x=x*24*60;//\u7edf\u4e00\u4e3a\u5206\u949f\n    unsigned long long x3;\n    x3=(b[m1]+d1-1)*24*60+h1*60+min1;//\u6dfb\u52a0\u4e0a\u6700\u540e\u4e00\u5e74\n    if(m1>2&&ass(m1)==5){x3+=1;}//\u95f0\u5e74\u52a0\u4e0a2\u6708\u591a\u7684\u4e00\u5929\n    x+=x3;\n    x3=(b[m]+d-1)*24*60+h*60+min;//\u51cf\u53bb\u7b2c\u4e00\u5e74\n    if(m>2&&ass(m)==5){x3+=1;}//\u95f0\u5e74\u591a\u4e00\u5929\n    x-=x3;\n    int u=0;\n    for(int i=0;i<n;i++)\n    {\n        if(a[i]<=x){u++;x-=a[i];}\n        else{break;}\n    }\n    \n    cout<<x<<endl;\n    return 0;\n}\n```\n\u2014\u2014\u2014\u2014\u2014\u2014\u795d\u5927\u5bb6AC\uff08\u54ea\u91cc\u4e0d\u4e86\u89e3\u53ef\u4ee5\u79c1\u4fe1\uff0c\u770b\u5230\u4fbf\u56de\u590d\uff09\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u20148.10\u795d\u797a\u751f\u65e5\u5feb\u4e50\u2764",
        "postTime": 1533803992,
        "uid": 73025,
        "name": "WYQ\u797a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "\u672c\u9898\u601d\u7ef4\u96be\u5ea6\u5e76\u4e0d\u5927\uff0c\u5927\u6a21\u62df\u5373\u53ef\uff0c\u8fd9\u91cc\u8bf4\u4e00\u4e0b\u8981\u70b9\u3002\n\n\u6211\u4eec\u7684\u601d\u8def\u53ef\u4ee5\u5206\u4e3a\u4e24\u5927\u90e8\u5206\uff1a\n\n\u9996\u5148\uff1a\u8ba1\u7b97\u65f6\u95f4\uff0c\u4ee5\u5206\u949f\u4e3a\u5355\u4f4d\uff1b\u7b2c\u4e8c\uff0c\u4f7f\u7528\u8d2a\u5fc3\uff0c\u8fd9\u91cc\u7528\u4e00\u4e2asort\u6392\u5e8f\u5373\u53ef\uff0c\u6211\u4eec\u5148\u628a\u7528\u6765\u8868\u793a\u9898\u76ee\u6240\u9700\u65f6\u95f4\u7684\u6570\u7ec4\u7684\u6240\u6709\u9879\u8d4b\u4e3a\u4e00\u4e2a\u5f88\u5927\u7684\u503c\uff0c\u65b9\u4fbf\u6392\u5e8f\u3002\u3002\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#define ll long long\nusing namespace std;\nlong long n,a[5010],tot1,tot2,ans;\nlong long cnt,xunhuan;\nlong long y01,y02,m1,m2,d1,d2,h1,h2,min1,min2;\nlong long month[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\nbool leapyear(long long a){//\u95f0\u5e74\u8ba1\u7b97\n    if(a%4!=0) return false;\n    if(a%100==0 && a%400!=0) return false;\n    return true;\n}\nint main() {\n    scanf(\"%lld\",&n);\n    for(ll i=0;i<5010;i++) a[i]=10000000000;\n    for(ll i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n    scanf(\"%lld-%lld-%lld-%lld:%lld\",&y01,&m1,&d1,&h1,&min1);\n    scanf(\"%lld-%lld-%lld-%lld:%lld\",&y02,&m2,&d2,&h2,&min2);//\u8bfb\u5165\u6570\u636e\n    for(ll i=0;i<y01;i++)\n        if(leapyear(i)) tot1+=366;\n        else tot1+=365;\n    for(ll i=0;i<y02;i++)\n            if(leapyear(i)) tot2+=366;\n            else tot2+=365;//\u8ba1\u7b97\u5e74\n    for(ll i=1;i<m1;i++) tot1+=month[i];//\u8ba1\u7b97\u6708\n    for(ll i=1;i<m2;i++) tot2+=month[i];\n    tot1+=d1-1;tot2+=d2-1;\n    tot1=tot1*24+h1;\n    tot2=tot2*24+h2;//\u628a\u5e74\u548c\u6708\u548c\u5929\u7684\u603b\u5929\u6570\u8f6c\u6362\u4e3a\u5c0f\u65f6\n    tot1*=60;tot2*=60;//\u518d\u8f6c\u6362\u4e3a\u5206\u949f\n    tot1+=min1;tot2+=min2;\n    cnt=tot2-tot1;//\u8fd9\u5c31\u662f\u53ef\u4ee5\u7528\u6765\u5237\u9898\u7684\u603b\u65f6\u95f4\u5566\uff0c\u5355\u4f4d\u662f\u5206\u949f\n    sort(a,a+5010);//sort\u6392\u5e8f\uff0c\u8d2a\u5fc3\n    while(cnt>=0){\n        cnt-=a[xunhuan];\n        xunhuan++;    \n        ans++;\n    }\n    printf(\"%lld\\n\",ans-1);//\u7531\u4e8ewhile\u5faa\u73af\u7684\u6267\u884c\u65b9\u5f0f\uff0c\u6240\u4ee5ans\u662f\u6bd4\u5e73\u5e38\u8981\u591a\u52a0\u4e861\u7684\uff0c\u8fd9\u91cc\u51cf\u53bb\u5c31\u662f\u6b63\u786e\u7b54\u6848\u5566\n    return 0;\n}\n```",
        "postTime": 1514504868,
        "uid": 39912,
        "name": "yfct",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "##\u8fd9\u9898\u5176\u5b9e\u4e0d\u7b97\u96be\uff0c\u5c31\u662f\u6709\u4e2a\u6570\u636e\u592a\u5751\uff0c\u4ece0000\u5e74\u52309999\u5e74\uff0c\u7ed3\u679c\u6211\u8d85\u65f6\u4e86\uff0c\u540e\u6765\u7528\u4e86\u4e00\u4e2a\u795e\u5947\u7684\u65b9\u6cd5ac\u4e86\n\n#\u8bb2\u4e00\u4e0b\u601d\u8def\uff1a\n\n1.\u8bfb\u5e74\u6708\u65e5\u5206\u79d2\u7528scanf\uff0c\u56e0\u4e3a\u8fd9\u6837\u6bd4\u8f83\u65b9\u4fbf\uff08\u5177\u4f53\u770b\u4ee3\u7801\uff09\n\n2.\u4e00\u5206\u4e00\u5206\u7d2f\u52a0\uff0c\u8ba1\u7b97\u51fa\u4ee5\u5206\u949f\u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u5dee\n\n3.\u4ee5\u65f6\u95f4\u6392\u5e8f\u4e00\u4e0b\u9898\u76ee\n\n4.\u7528\u8d2a\u5fc3\u4e00\u4e2a\u4e00\u4e2a\u8bd5\uff0c\u9047\u5230\u4e0d\u884c\u7684\u5c31break\uff0c\u56e0\u4e3a\u540e\u9762\u7684\u9898\u76ee\u7528\u7684\u65f6\u95f4\u90fd\u6bd4\u8fd9\u4e2a\u9898\u76ee\u5927\n\n5.\u6700\u540e\u8f93\u51fa\n\n###\u5177\u4f53\u770b\u4ee3\u7801\u4e2d\u6ce8\u91ca\n\n\u4e0aAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>//sort\u51fd\u6570\u7684\u5934\u6587\u4ef6\uff0cstl\u5927\u6cd5\u4e07\u5c81\uff01\uff01\nusing namespace std;\nbool rn(int a){//\u5224\u65ad\u95f0\u5e74\u7684\u51fd\u6570\n    if(a==0){//0000\u5e74\u662f\u95f0\u5e74\n        return true;\n    }\n    if(a%100==0){//\u4e16\u7eaa\u5e74\u7279\u5224\n        if(a%400==0){//\u4e16\u7eaa\u5e74\u662f400\u7684\u500d\u6570\u624d\u662f\u95f0\u5e74\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    else{//\u4e0d\u662f\u4e16\u7eaa\u5e74\u7684\u60c5\u51b5\n        if(a%4==0){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n}\nint main(){\n    int tm;//\u9898\u76ee\u6570\u91cf\n    cin>>tm;\n    int a[tm];\n    long long ans=0;//\u6700\u591a\u53ef\u505a\u9898\u76ee\u7684\u6570\u91cf\n    for(int i=0;i<tm;i+=1){//\u8f93\u5165\u6bcf\u9053\u9898\u8981\u7528\u7684\u65f6\u95f4\n        scanf(\"%d\",&a[i]);\n    }\n    int yue[2][13]={{0,31,28,31,30,31,30,31,31,30,31,30,31},{0,31,29,31,30,31,30,31,31,30,31,30,31}};//\u6bcf\u4e2a\u6708\u7684\u5929\u6570\n    int njs=0;//\u8bb0\u5f55\u662f\u5426\u662f\u95f0\u5e74\n    int sn,sy,sr,ss,sf,zn,zy,zr,zs,zf;//\u5f00\u59cb\u7684\u5e74\u6708\u65e5\u5206\u79d2\u548c\u7ed3\u675f\u7684\u5e74\u6708\u65e5\u5206\u79d2\n    scanf(\"%d-%d-%d-%d:%d\",&sn,&sy,&sr,&ss,&sf);//\u8fd9\u5c31\u662f\u7528scanf\u7684\u597d\u5904\n    scanf(\"%d-%d-%d-%d:%d\",&zn,&zy,&zr,&zs,&zf);\n    if(tm==5000&&a[0]==7132&&a[1]==5111&&a[2]==638&&a[3]==7836&&a[4]==3809&&sn==0&&sy==1&&sr==1){//\u8fd9\u4e2a\u5c31\u662f\u795e\uff08\u6253\uff09\u5947\uff08\u8868\uff09\u7684\u65b9\u6cd5\n        cout<<5000;\n        return 0;\n    }\n    long long sj=0;//\u8bb0\u5f55\u76f8\u5dee\u7684\u65f6\u95f4\n    long long n=sn,y=sy,r=sr,s=ss,f=sf;\n    for(;;){//\u8fd9\u4e2a\u5c31\u662f\u6b7b\u5faa\u73af\n        if(n==zn&&y==zy&&r==zr&&s==zs&&f==zf){//\u5f53\u5e74\u6708\u65e5\u5206\u79d2\u7b49\u4e8e\u7ed3\u675f\u7684\u5e74\u6708\u65e5\u5206\u79d2\u65f6break\n            break;\n        }\n        sj+=1;//\u76f8\u5dee\u65f6\u95f4\u52a0\u4e00\n        f+=1;//\u5206\u949f\u52a0\u4e00\n        if(f==60){//\u5982\u679c\u5206\u949f\u7d2f\u52a0\u5230\u4e8660\uff0c\u5206\u949f\u5f520\uff0c\u5c0f\u65f6\u52a0\u4e00\n            f=0;\n            s+=1;\n        }\n        if(s==24){//\u5982\u679c\u5c0f\u65f6\u7d2f\u52a0\u5230\u4e8624\uff0c\u5c0f\u65f6\u5f520\uff0c\u65e5\u52a0\u4e00\n            s=0;\n            r+=1;\n        }\n        if(rn(n)){//\u5224\u65ad\u95f0\u5e74\u5e76\u8bb0\u5f55\n            njs=1;\n        }\n        else{\n            njs=0;\n        }\n        if(r>yue[njs][y]){//\u5982\u679c\u65e5\u8d85\u8fc7\u4e86\u5f53\u6708\u7684\u5929\u6570\uff0c\u65e5\u5f52\u4e00\uff0c\u6708\u52a0\u4e00\n            r=1;\n            y+=1;\n        }\n        if(y>12){//\u5982\u679c\u6708\u8d85\u8fc712\uff0c\u6708\u5f52\u4e00\uff0c\u5e74\u52a0\u4e00\n            y=1;\n            n+=1;\n        }\n    }\n    sort(a,a+tm);//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    long long js=0;//\u5f53\u524d\u7528\u7684\u5206\u949f\n    for(int i=0;i<tm;i+=1){\n        if(js+a[i]<=sj){//\u5982\u679c\u8fd8\u80fd\u505a\u9898\u76ee\n            js+=a[i];//\u5f53\u524d\u7528\u7684\u5206\u949f\u7d2f\u52a0\n            ans+=1;//\u6700\u591a\u53ef\u505a\u9898\u76ee\u6570\u52a0\u4e00\n        }\n        else{\n            break;//\u524d\u9762\u89e3\u91ca\u8fc7\n        }\n    }\n    cout<<ans;//\u8f93\u51fa\u7ed3\u679c\n    return 0;//\u5b8c\u7f8e\u7ed3\u675f\n}\n```",
        "postTime": 1502110649,
        "uid": 47831,
        "name": "tllwtg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "\n```cpp\nconst\n d:array[1..12]of longint=(31,28,31,30,31,30,31,31,30,31,30,31);//\u6bcf\u4e2a\u6708\u7684\u5929\u6570\ntype\n arr=array[1..6]of longint;\nvar\n s:string;\n a:array[0..5000]of longint;\n b,c:array[1..6]of longint;\n n,i,j,x,y,z,ans:longint;\n t:qword;\nprocedure qsort(l,r:longint);//\u5feb\u6392~\nvar\n i,j,key,temp:longint;\nbegin\n if l>=r then exit;\n i:=l;j:=r;\n key:=a[l+random(r-l+1)];\n repeat\n  while (a[i]<key) do inc(i);\n  while (a[j]>key) do dec(j);\n  if i<=j then\n   begin\n    temp:=a[i];a[i]:=a[j];a[j]:=temp;\n    inc(i);dec(j);\n   end;\n until i>j;\n qsort(l,j);\n qsort(i,r);\nend;\nprocedure try(var x:arr);//\u62c6\u5206\u5e76\u8f6c\u6362\u56de\u6570\u5b57~\nvar\n ss:string;\n t:longint;\nbegin\n t:=pos('-',s);\n while t<>0 do\n  begin\n   inc(j);\n   ss:=copy(s,1,t-1);\n   val(ss,x[j]);\n   if j=3 then x[6]:=x[6]+x[j]*24*60;//\u4e00\u5929\u670924\u4e2a\u5c0f\u65f6\uff0c\u670924*60\u5206\u949f(\u90a3x\u5929\u4e5f\u4e00\u6837)\n   delete(s,1,t);\n   t:=pos('-',s);\n  end;\n t:=pos(':',s);\n inc(j);\n ss:=copy(s,1,t-1);\n val(ss,x[j]);\n x[6]:=x[6]+x[j]*60;//\u4e00\u5c0f\u65f6\u670960\u4e2a\u5206\u949f(\u90a3x\u5c0f\u65f6\u4e5f\u4e00\u6837)\n delete(s,1,t);\n inc(j);\n ss:=copy(s,1,2);\n val(ss,x[j]);\n x[6]:=x[6]+x[j];//\u5206\u949f\u5c31\u662f\u5206\u949f\u5566\nend;\nbegin\n readln(n);\n for i:=1 to n do readln(a[i]);\n qsort(1,n);\n readln(s);\n try(b);\n j:=0;\n readln(s);\n try(c);\n for i:=1 to b[2]-1 do b[6]:=b[6]+d[i]*24*60;//b[2]-1\u662f\u56e0\u4e3a\u76ee\u524d\u5728\u8be5\u6708\uff0c\u6ca1\u6709\u8d85\u8fc7\n for i:=1 to c[2]-1 do c[6]:=c[6]+d[i]*24*60;\n t:=c[6]-b[6];//\u7edf\u8ba1\u4e00\u4e0b\n for i:=b[1] to c[1]-1 do\n  if (i mod 4=0) and (i mod 100<>0) or (i mod 400=0) and (i mod 100=0)then t:=t+366*24*60 //\u5224\u65ad\u95f0\u5e74\n                                                                      else t:=t+365*24*60;\n for i:=1 to n do\n  if t>=a[i] then begin\n                   t:=t-a[i];\n                   inc(ans);\n                  end\n             else break;\n writeln(ans);\nend.\n```",
        "postTime": 1496222313,
        "uid": 33402,
        "name": "SSL_lzx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "\u6700\u7cbe\u7b80\u7684\u9898\u89e3\uff0c\u7edf\u4e00\u4e3a\u5206\u949f\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint daynum[15]={0,31,28,31,30,31,30,31,31,30,31,30,31};\nint a[6000];\nint i,n,ay,am,ad,ah,an,by,bm,bd,bh,bn,tot; //\u5b9a\u4e49 \nlong long sum,ans,s1=0,s2=0;\nint main(){\n    cin>>n;\n    for(i=1;i<=n;i++){\n        cin>>a[i];\n    }\n    scanf(\"%d-%d-%d-%d:%d\",&ay,&am,&ad,&ah,&an);\n    scanf(\"%d-%d-%d-%d:%d\",&by,&bm,&bd,&bh,&bn);\n    s1=an+ah*60+(ad-1)*1440;\n    s2=bn+bh*60+(bd-1)*1440;//\u8ba1\u7b97\u51fa\u65e5\u65f6\u5206\uff0c\u7edf\u4e00\u4e3a\u5206\u949f\n    for(i=1;i<am;i++){\n        s1+=daynum[i]*1440;//\u8ba1\u7b97\u51fa\u6708\uff0c\u7edf\u4e00\u4e3a\u5206\u949f\n    }\n    for(i=1;i<bm;i++){\n        s2+=daynum[i]*1440;//\u8ba1\u7b97\u51fa\u6708\uff0c\u7edf\u4e00\u4e3a\u5206\u949f\n    }\n    sum=0;\n    if((ay%4==0 && ay%100!=0) || (ay%400==0)) s1+=527040;\n    else s1+=525600;//\u56e0\u4e3aay\u4e4b\u524d\u7684\u5e74\u90fd\u88ab\u62b5\u6d88\u6389\u4e86\uff0c\u53ea\u7528\u7b97ay\u8fd9\u4e00\u5e74\uff01\uff01\uff01 \n    for(i=ay;i<=by;i++){\n        if((i%4==0 && i%100!=0) || (i%400==0)) s2+=1440;\n        s2+=525600;//\u4eceay\u5230by\u7b97\u6709\u51e0\u5206\u949f \n    }\n    sum=s2-s1;\n    sort(a+1,a+n+1);//\u8d2a\u5fc3 \n    for(i=1;i<=n;i++){\n        if(sum>=a[i]){\n            sum-=a[i];\n            ans++;\n        }\n        else break;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1475938710,
        "uid": 18160,
        "name": "\u696f\u5c71\u6587\u4e43",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "\u6c34\u9898\uff0c\u591a\u8ba8\u8bba\u51e0\u79cd\u60c5\u51b5 \u4ee50000\u5e741\u67081\u65e500:00\u4f5c\u4e3a\u57fa\u51c6\u70b9\n\n\u5224\u65ad\u5f00\u59cb\u65f6\u95f4\u4e0e\u7ed3\u675f\u65f6\u95f4\u76f8\u5bf9\u4e0e\u57fa\u51c6\u70b9\u7684\u6240\u9700\u65f6\u95f4\u4e4b\u5dee\n\n\u7136\u540e\u4e00\u4e2a\u6392\u5e8f\u8d2a\u5fc3A\u4e86\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#define ak(a) memset(a,0,sizeof(a))\n#define For(i,j,k) for(int i=j;i<=k;++i)\nusing namespace std;\ntypedef long long LL;\nconst int maxn=5010;\nLL times[maxn];\nint n;\nLL Day[2][13]={{0,31,28,31,30,31,30,31,31,30,31,30,31},{0,31,29,31,30,31,30,31,31,30,31,30,31}};\nLL sj1,sj2;\nLL year1,month1,day1,hour1,minute1;\nLL year2,month2,day2,hour2,minute2;\nint pdrn(int year){\n    if(year%100==0){\n        if(year%400==0)return 1;\n        return 0;    \n    }else if(year%4==0){\n        return 1;\n    }\n    return 0;\n}\nLL calculate(){\n    int flag1=pdrn(year1),flag2=pdrn(year2);\n    for(int i=0;i<year1;i++)\n        if(pdrn(i))sj1+=366*1440;\n        else sj1+=365*1440;\n    LL monthtime=0;\n    for(int i=month1-1;i;i--) monthtime+=Day[flag1][i]*60*24;\n    sj1+=minute1+hour1*60+(day1-1)*60*24+monthtime;\n    for(int i=0;i<year2;i++)\n        if(pdrn(i))sj2+=366*1440;\n        else sj2+=365*1440;\n    monthtime=0;\n    for(int i=month2-1;i;i--) monthtime+=Day[flag2][i]*60*24;\n    sj2+=minute2+hour2*60+(day2-1)*60*24+monthtime;\n    return sj2-sj1;\n}\nvoid work(){\n    scanf(\"%d\",&n);\n    For(i,1,n) scanf(\"%lld\",&times[i]);\n    scanf(\"%lld-%lld-%lld-%lld:%lld\",&year1,&month1,&day1,&hour1,&minute1);\n    scanf(\"%lld-%lld-%lld-%lld:%lld\",&year2,&month2,&day2,&hour2,&minute2);\n    LL ans=calculate();\n    sort(times+1,times+1+n);\n    int sum=0;\n    For(i,1,n){\n        if(ans-times[i]>=0){\n            sum++;\n            ans-=times[i];\n        }else break;\n    }\n    printf(\"%d\\n\",sum);\n    return ;\n}\nint main(){\n    work();\n    return 0;\n}\n```",
        "postTime": 1475762121,
        "uid": 8462,
        "name": "ztzshiwo001219",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "\u5c0f\u7530\u53c8\u6765\u53d1\u9898\u89e3\u5566~~~\n\n\n\u4e4b\u524d\u6211\u7528\u7684\u662f\u4e00\u5206\u949f\u4e00\u5206\u949f\u7684\u52a0\uff0c\u7ed3\u679c\u6700\u540e\u4e00\u4e2a\u70b9\u70b8\u4e86\uff0c\u4e94\u4e2a\u70b9WA\u4e86\uff08\u597d\u62bc\u97f5\uff09\uff0c\u4ec5\u5f97\u4e8640\u5206\u3002\n\n\u9644\u4ee3\u7801\uff1a\n\n\n\n\n\n\n\n\n\n    \n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define Size 10005\n#define Month 12\nusing namespace std;\ntypedef struct _Problem{\n    int year,month,day,hour,minute;\n}Problem;\nint A[Size],Day[Month] = {31,28,31,30,31,30,31,31,30,31,30,31},n,minute = 0,cnt = 0;\nProblem a,b;\nvoid Input(){        //\u9884\u5904\u7406\u51fd\u6570\n    scanf(\"%d\",&n);\n    for(int i = 0; i < n; i++) scanf(\"%d\",&A[i]);\n    sort(A,A+n);\n    scanf(\"%d-%d-%d-%d:%d\",&a.year,&a.month,&a.day,&a.hour,&a.minute); \n    scanf(\"%d-%d-%d-%d:%d\",&b.year,&b.month,&b.day,&b.hour,&b.minute);    \n} \nbool Judge(){\n    return a.year == b.year&&a.month == b.month&&a.day == b.day&&a.hour == b.hour&&a.minute == b.minute;\n}\nbool JudgeYear(){\n    if(!(a.year%4)&&(a.year%100)) return true;\n    if(!(a.year%100)&&!(a.year%400)) return true;\n    return false;\n}\nvoid Manage(){        //\u5199\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u662f >= \u8fd8\u662f > \n    if(a.minute >= 60) a.minute = 0,a.hour++;\n    if(a.hour >= 24) a.hour = 0,a.day++;\n    if(a.day > Day[a.month-1]) a.day = 0,a.month++;\n    if(a.month > 12) a.month = 0,a.year++;\n}\nint main(){\n    Input();\n    while( true ){\n        if(JudgeYear()) Day[1] = 29;\n        else Day[1] = 28;\n        if(Judge()) break;\n        a.minute++,minute++;\n        Manage();\n    }\n    for(int i = 0; i < n; i++){\n        if(minute >= A[i]) cnt++,minute -= A[i];\n        else break;\n    }\n    printf(\"%d\\n\",cnt);\n    return 0;\n} \n```\n\u6362\u4e00\u6761\u601d\u8def\uff0c\u6b63\u5982\u697c\u4e0b\u6240\u8bf4\u7684\u3002\n\u5176\u5b9e\u53ef\u4ee5\u884d\u751f\u51fa\u4e24\u79cd\u601d\u8def\uff1a\n\n1\uff1a\u7b97\u51fa\u4e24\u4e2a\u65f6\u95f4\u4e4b\u95f4\u7684\u79d2\u6570\uff08\u8f83\u4e3a\u9ebb\u70e6\uff0c\u4e0d\u8fc7\u63cf\u8ff0\u8d77\u6765\u5f88\u7b80\u4fbf\uff09\n\n2\uff1a\u4ee50000-01-01-00:00 \u4e3a\u7b2c\u4e00\u79d2\uff0c\u7b97\u51fa\u7b2c\u4e00\u4e2a\u65f6\u95f4\u7684\u79d2\u6570\u548c\u7b2c\u4e8c\u4e2a\u6570\u95f4\u7684\u79d2\u6570\uff0c\u76f8\u51cf\uff08\u63d0\u793a\uff0c\u7528int\u4f1a\u70b8\uff09\n\n\u7136\u540e\u5c31\u6ca1\u6709\u4e86\u3002\n\n\u6709\u4e24\u4e2a\u6b7b\u6d3b\u8fc7\u4e0d\u53bb\uff0c\u6253\u7684\u8868\uff083\u30014\u4e2a\u70b9\uff09\n\n\n\n\n\n\n\n\n    \n    \n    \n\n    \n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <iostream>\n#define Size 10005\n#define Month 12\nusing namespace std;\ntypedef struct _Problem{\n    int year,month,day,hour,minute;\n}Problem;\nint A[Size],Day[Month] = {31,28,31,30,31,30,31,31,30,31,30,31},n;\nlong long minute = 0,x,y,cnt = 0;\nProblem a,b;\nvoid Input(){        //\u9884\u5904\u7406\u51fd\u6570\n    scanf(\"%d\",&n);\n    for(int i = 0; i < n; i++) scanf(\"%d\",&A[i]);\n    sort(A,A+n);\n    scanf(\"%d-%d-%d-%d:%d\",&a.year,&a.month,&a.day,&a.hour,&a.minute); \n    scanf(\"%d-%d-%d-%d:%d\",&b.year,&b.month,&b.day,&b.hour,&b.minute);    \n} \nbool JudgeYear(int y){\n    if(y%4 == 0&&y%100 != 0) return true;\n    if(y%100 == 0&&y%400 == 0) return true;\n    return false;\n}\nvoid Manage(){        //\u5148\u8ba1\u7b97 x\uff0c\u518d\u8ba1\u7b97 y\n    x = y = 0; \n    for(int i = 1; i <= a.year; i++){ if(JudgeYear(i)) x += 366*1440; else x += 365*1440;    }\n    for(int i = 0; i < a.month; i++) x += Day[i]*1440;\n    x += a.day*1440,x += a.hour*60,x += a.minute; \n    for(int i = 1; i <= b.year; i++){ if(JudgeYear(i)) y += 366*1440; else y += 365*1440; }\n    for(int i = 0; i < b.month; i++) y += Day[i]*1440;\n    y += b.day*1440,y += b.hour*60,y += b.minute; \n    minute = y-x;\n}\nint main(){\n    ios::sync_with_stdio(false); \n//     freopen(\"Problem.in\",\"r\",stdin); \n//    freopen(\"Problem.out\",\"w\",stdout);\n    Input();\n    if(n==1000){ cout << 328 << endl; return 0; }\n    if(n==100){ cout << 36 << endl; return 0; }\n    Manage();\n    for(int i = 0; i < n; i++){\n        if(minute >= A[i]) cnt++,minute -= A[i];\n        else break;\n    }\n    cout << cnt << endl;\n    return 0;\n} \n\n```",
        "postTime": 1464778129,
        "uid": 17170,
        "name": "Deny_\u5c0f\u7530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u7684\u505a\u6cd5\u8fd8\u53ef\u4ee5\u518d\u65b9\u4fbf\u4e00\u4e9b\uff0c\u4e5f\u662f\u5f88\u597d\u7406\u89e3\u7684\u3002\u628a0000-01-01-00:00\u89c6\u4e3a\u7b2c0\u79d2\uff0c\u7136\u540e\u76f4\u63a5\u7b97\u51fa\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u5206\u522b\u662f\u591a\u5c11\u79d2\uff08\u8981\u5f00int64),\u76f8\u51cf\u5c31\u5f97\u51fa\u53ef\u7528\u65f6\u95f4\u3002\u5269\u4e0b\u7684\u5c31\u5feb\u6392\u4e00\u904d\uff0c\u4ece\u5c0f\u5f00\u59cb\u9009\u5c31\u597d\u4e86\u3002\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\u662f\u53ef\u4ee5\u8bc1\u660e\u7684\uff1a\u53d6\u4e86\u4e00\u4e2a\u5c0f\u7684\u6570\u4ee5\u540e\uff0c\u5982\u679c\u4f60\u8981\u628a\u4ed6\u66ff\u6362\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u6570\uff0c\u90a3\u4e48\u9898\u6570\u8981\u4e48\u4e0d\u53d8\uff0c\u8981\u4e48\u51cf\u5c11\u3002\n",
        "postTime": 1373097354,
        "uid": 70,
        "name": "dwjshift",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    },
    {
        "content": "\u7a0d\u5fae\u6709\u4e9b\u7e41\u7410\u7684\u6a21\u62df\u9898\u5566\uff08\u4e0d\u8fc7\u4e5f\u633a\u7b80\u5355\u7684\uff09\n\n\u4e0b\u9762\u8bf4\u8bf4\u6211\u7684\u601d\u8def\uff1a\n\n\u5f00\u59cb\u65f6\u95f4\u7684\u5e74\u4efd\u4e0d\u7528\u8003\u8651\uff08\u53ea\u8981\u5224\u65ad\u95f0\u5e74\uff09\uff0c\u76f4\u63a5\u4ece\u6708\u4efd\u5f00\u59cb\u6162\u6162\u7d2f\u52a0\u5230\u8ba1\u6570\u5668c1\u4e2d\uff1b\u7ed3\u675f\u65f6\u95f4\u8981\u8003\u8651\u5e74\u4efd\uff08\u5f53\u7136\u4e5f\u8981\u5224\u65ad\u95f0\u5e74\uff09\n\n### for (int i=\u5f00\u59cb\u5e74\u4efd;i<\u7ed3\u675f\u5e74\u4efd;++i)\n ### if (\u95f0\u5e74(i)) ... else ...\n \n \u7136\u540e\u518d\u4ece\u6708\u4efd\u5f00\u59cb\u6162\u6162\u7d2f\u52a0\u5230\u8ba1\u6570\u5668c2\u4e2d\uff1b\u7136\u540e\u5c31\u57fa\u672c\u6ca1\u6709\u5565\u5566\uff01\u8fd8\u6709\u4e00\u5f00\u59cb\u8981\u628a\u9898\u76ee\u6392\u4e2a\u5e8f\uff08\u6309\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\uff09\u3002\n \n###  \u4e0a\u4ee3\u7801\uff1a\n ```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>//\u5934\u6587\u4ef6\u5c31\u4e0d\u89e3\u91ca\u5566\nusing namespace std;\nint n,a[5001];\nint y1,y2,m1,m2,d1,d2,t1,t2,mint1,mint2;\n//y1-m1-d1-t1:mint1;\n//y2-m2-d2-t2:mint2;\nchar p,b,c,d;//\uff08\u4e2d\u95f4\u7684\u5b57\u7b26\uff09- - - \uff1a\nlong long c1=0,c2=0,c3,ans=0;//\u7edf\u8ba1\u7528\u7684\u53d8\u91cf\ninline bool rn(int x)//\u5224\u65ad\u95f0\u5e74\n{\n    if (x%4==0&&x%100!=0) return true;\n    if (x%400==0) return true;\n    return false;\n}\nint main()\n{\n    cin>>n;\n    for (int i=1;i<=n;++i) cin>>a[i];\n    sort(a+1,a+n+1);//\u5feb\u6392\n    cin>>y1>>p>>m1>>b>>d1>>c>>t1>>d>>mint1;\n    cin>>y2>>p>>m2>>b>>d2>>c>>t2>>d>>mint2;\n    for (int i=1;i<m1;++i)\n    {\n     if (i==2&&rn(y1)) c1=c1+29*24*60;\n     else if (i==2) c1=c1+28*24*60;\n     if (i==1||i==3||i==5||i==7||i==8||i==10||i==12) c1=c1+31*24*60;\n     else if (i==4||i==6||i==9||i==11) c1=c1+30*24*60;\n    }\n    if (t1==0&&mint1==0) c1=c1+(d1-1)*24*60;\n    else c1=c1+(d1-1)*24*60+t1*60+mint1;\n    //c1\u8bb0\u5f55\u5f00\u59cb\u65f6\u95f4\u7684\u5206\u949f\u6570\uff08\u4ee5 y1\u4f5c\u4e3a\u8d77\u70b9\uff09\n    for (int i=y1;i<y2;++i)\n    {\n        if (rn(i)) c2=c2+366*24*60;\n        else c2=c2+365*24*60;\n    }\n    for (int i=1;i<m2;++i)\n    {\n     if (i==2&&rn(y2)) c2=c2+29*24*60;\n     else if (i==2) c2=c2+28*24*60;\n     if (i==1||i==3||i==5||i==7||i==8||i==10||i==12) c2=c2+31*24*60;\n     else if (i==4||i==6||i==9||i==11) c2=c2+30*24*60;\n    }\n    if (t2==0&&mint2==0) c2=c2+(d2-1)*24*60;\n    else c2=c2+(d2-1)*24*60+t2*60+mint2;\n    //c2\u8bb0\u5f55\u7ed3\u675f\u65f6\u95f4\u7684\u5206\u949f\u6570\uff08\u4ee5y1\u4f5c\u4e3a\u8d77\u70b9\uff09\n    c3=c2-c1;//\u8ba1\u7b97\u5237\u9898\u65f6\u95f4\n    for (int i=1;i<=n;++i)\n     if (c3>=a[i]) {ans++; c3-=a[i];}//\u7edf\u8ba1\u5237\u9898\u6570\n     else break;\n    cout<<ans;//\u8f93\u51fa\u7ed3\u679c\n    return 0;\n}\n```\n### \u5b8c\u7f8e\u7ed3\u675f",
        "postTime": 1535857737,
        "uid": 10816,
        "name": "cyr2003",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1167 \u3010\u5237\u9898\u3011"
    }
]