[
    {
        "content": "\u5c06\u64cd\u4f5c\u5e8f\u5217\u79bb\u7ebf\u4e0b\u6765\u3002\u4e0d\u59a8\u5148\u8003\u8651\u53ea\u6709 `H` \u64cd\u4f5c\u7684\u60c5\u51b5\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u6b21\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5c06 $x$ \u5750\u6807\u5728 $[0,l]$ \u8303\u56f4\u5185\u7684\u70b9\u7684 $y$ \u5750\u6807\u5168\u90e8\u5bf9 $n-l$ \u53d6\u6700\u5927\u503c\u3002\u56e0\u800c\u6211\u4eec\u8bbe\u8ba1\u7684\u7b97\u6cd5\u4e5f\u7b80\u5355\u660e\u4e86\uff1a\u626b\u63cf\u6240\u6709\u64cd\u4f5c\uff0c\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u70b9\u67e5\u8be2\u8be5\u4f4d\u7f6e\u4e0a\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u63a5\u7740\u6211\u4eec\u8003\u8651\u53ea\u6709 `H,V` \u64cd\u4f5c\u800c\u6ca1\u6709\u63d2\u5165\u70b9\u64cd\u4f5c\u7684\u60c5\u51b5\u3002\u8fd9\u65f6\u6211\u4eec\u4e0d\u80fd\u518d\u7b80\u5355\u5730\u53d6\u6700\u5927\u503c\u4e86\uff1a`V` \u64cd\u4f5c\u5bf9\u540e\u9762\u7684 `H` \u64cd\u4f5c\u662f\u6709\u5f71\u54cd\u7684\uff0c`H` \u64cd\u4f5c\u4e5f\u5bf9\u540e\u9762\u7684 `V` \u64cd\u4f5c\u6709\u5f71\u54cd\u3002\u600e\u4e48\u529e\u5462\uff1f\n\n\u5047\u8bbe\u6211\u4eec\u5728\u8fdb\u884c\u4e00\u6b21\u53c2\u6570\u4e3a $l_h$ \u7684 `H` \u64cd\u4f5c\u524d\uff0c\u5df2\u7ecf\u8fdb\u884c\u4e86\u4e00\u6b21\u53c2\u6570\u4e3a $l_v$ \u7684 `V` \u64cd\u4f5c\uff0c\u4e14 $l_h+l_v < n$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fcmxft5m.png)\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u7531\u4e8e\u5728\u4e4b\u524d\u7684 `H` \u64cd\u4f5c\u4e2d\uff0c\u5728\u533a\u57df $[0,l_h]\\times [0,n-l_h]$ \u7684\u70b9\u90fd\u88ab\u79fb\u52a8\u5230\u4e86\u76f4\u7ebf $y=n-l_h$ \u4e0a\uff08\u8fd9\u91cc\u533a\u57df $[l_x,r_x]\\times [l_y,r_y]$ \u63cf\u8ff0\u6240\u6709\u6a2a\u5750\u6807\u5728 $[l_x,r_x]$ \u4e14\u7eb5\u5750\u6807\u5728 $[l_y,r_y]$ \u5185\u7684\u70b9\uff09\u3002\u90a3\u4e48 `V` \u64cd\u4f5c\u5b9e\u9645\u4e0a\u53ea\u80fd\u5f71\u54cd\u90a3\u4e9b\u6a2a\u5750\u6807\u5728 $[l_h+1,n-l_v]$ \u7684\u70b9\uff0c\u800c\u7eb5\u5750\u6807\u7684\u5f71\u54cd\u8303\u56f4\u4f9d\u65e7\u662f $[0,l_v]$\uff0c\u800c\u5185\u5bb9\u4f9d\u65e7\u662f\u5c06\u5b83\u4eec\u7684\u6a2a\u5750\u6807\u5bf9 $n-l_v$ \u53d6\u6700\u5927\u503c\u3002`V` \u64cd\u4f5c\u5bf9 `H` \u64cd\u4f5c\u7684\u5f71\u54cd\u540c\u7406\u3002\u6211\u4eec\u8003\u8651\u8ba1\u7b97\u51fa\uff0c\u5bf9\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u5b83\u80fd\u5f71\u54cd\u5230\u7684**\u6700\u5c0f\u5750\u6807** $p$ \u503c\u662f\u591a\u5c11\uff08\u8fd9\u91cc\u7684 $p$ \u4e5f\u5c31\u662f\u4e0a\u6587\u4e2d\u7684 $l_h+1$\uff09\u3002\u5982\u679c\u80fd\u8ba1\u7b97\u51fa $p$ \u503c\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e8b\u5b9e\u4e0a `H,V` \u64cd\u4f5c\u5df2\u7ecf\u4e92\u76f8\u72ec\u7acb\u4e86\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06 `H,V` \u64cd\u4f5c\u5206\u522b\u6309\u7167 $p$ \u503c\u6392\u5e8f\uff0c\u7136\u540e\u8be2\u95ee\u70b9\u4e5f\u5206\u522b\u6309\u7167\u6a2a\u3001\u7eb5\u5750\u6807\u6392\u5e8f\uff0c\u987a\u5e8f\u626b\u63cf\u5e76\u5728\u7ebf\u6bb5\u6811\u4e0a\u66f4\u65b0\u5373\u53ef\u3002\u4e8e\u662f\uff0c\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e $p$ \u503c\u7684\u8ba1\u7b97\u3002\n\n\u5bf9\u4e8e $p$ \u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u987a\u5e8f\u626b\u63cf\u6bcf\u4e00\u4e2a\u64cd\u4f5c\uff0c\u540c\u65f6\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4 $H,V$\u2014\u2014$V_i$ \u8868\u793a\u53c2\u6570\u4e3a $l=i$ \u7684 `V` \u64cd\u4f5c\u6b64\u65f6\u7684 $p$ \u503c\u3002\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u8bbe\u626b\u63cf\u5230\u4e86\u4e00\u4e2a `V` \u64cd\u4f5c\uff0c\u6211\u4eec\u53d6\u51fa\u5176\u53c2\u6570\u503c $l$\uff0c\u63a5\u7740\uff1a\n\n- \u8be5\u64cd\u4f5c\u7684 $p$ \u5373\u4e3a $V_l$\u3002\n- \u5bf9\u4e8e\u6bcf\u4e2a $p\\leq i < n-l-1$\uff0c$H_i$ \u4f1a\u53d7\u5230 $l+1$ \u7684\u5f71\u54cd\uff0c\u5c06\u5176\u5bf9 $l+1$ \u53d6\u6700\u5927\u503c\u3002\n\n\u89c2\u5bdf\u5230 $H,V$ \u7684\u7ef4\u62a4\u548c\u5750\u6807\u7684\u7ef4\u62a4\u7c7b\u4f3c\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\u6ce8\u610f\u5230 $n$ \u7684\u8303\u56f4\u5f88\u5927\uff0c\u53ef\u4ee5\u91c7\u7528\u79bb\u6563\u5316\u6216\u8005\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7684\u65b9\u6cd5\u3002\n\n\u6700\u540e\u6211\u4eec\u5904\u7406\u6709\u63d2\u5165\u64cd\u4f5c\u7684\u60c5\u5f62\u3002\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u6c42\u51fa\u63d2\u5165\u8be5\u70b9\u540e\u7684\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u548c\u8be2\u95ee\u524d\u7684\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u3002\u518d\u5efa\u7acb\u4e00\u68f5\u4ee5\u4fee\u6539\u64cd\u4f5c\u4e3a\u4e0b\u6807\u7684\u7ebf\u6bb5\u6811\uff0c\u5c06\u6bcf\u4e2a\u8be2\u95ee\u7684\u4fee\u6539\u533a\u95f4\u63d2\u5165\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u5728\u5bf9\u7ebf\u6bb5\u6811 DFS \u7684\u8fc7\u7a0b\u4e2d\u5957\u7528\u524d\u9762\u7684\u505a\u6cd5\u5373\u53ef\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O((m+q)\\log q\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O((m+q)\\log n)$\uff08\u4e3b\u8981\u6765\u81ea\u4e8e\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u4f7f\u7528\u79bb\u6563\u5316\u53ef\u4f18\u5316\u5230 $O((m+q)\\log (m+q))$\uff09\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#include<set>\n#include<iostream>\n\nusing namespace std;\n\nint n=0,m=0,q=0;\n\nstruct pnt\n{\n\tint x,y;pnt(int xx=0,int yy=0):x(xx),y(yy){}\n}P[1500000],A[1500000],F[1500000],tmp[1500000];int ql[1500000],qr[1500000],ins[1500000];\n\nbool xcmp(int a,int b){return A[a].x<A[b].x;}\nbool ycmp(int a,int b){return A[a].y<A[b].y;}\nbool operator<(pnt a,pnt b){return a.x<b.x;}\n\nstruct President\n{\n\tstruct nd\n\t{\n\t\tint val,lc,rc;\n\t}t[30000000];int used;\n\tint new_node(){++used;t[used].val=t[used].lc=t[used].rc=0;return used;}\n\tvoid clear()\n\t{\n\t\tfor(int i=0;i<=used;i++)t[i].val=t[i].lc=t[i].rc=0;\n\t\tused=0;new_node();\n\t}\n\tvoid modify(int x,int y,int val,int l,int r,int k=1)\n\t{\n\t\tif(l>y||r<x)return;if(x<=l&&r<=y){t[k].val=max(t[k].val,val);return;}\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid){if(!t[k].lc)t[k].lc=new_node();modify(x,y,val,l,mid,t[k].lc);}\n\t\tif(y>mid){if(!t[k].rc)t[k].rc=new_node();modify(x,y,val,mid+1,r,t[k].rc);}\n\t}\n\tint query(int pos,int l,int r,int k=1)\n\t{\n\t\tif(!k)return 0;\n\t\tif(l==r)return t[k].val;\n\t\tint x=t[k].val,mid=(l+r)>>1;\n\t\treturn pos<=mid?max(x,query(pos,l,mid,t[k].lc)):max(x,query(pos,mid+1,r,t[k].rc));\n\t}\n}T,S;\n\nstruct Segment_Divide\n{\n\tstruct nd\n\t{\n\t\tint l,r;vector<int> P;\n\t}t[4000000];\n\tvoid build(int l,int r,int k=1)\n\t{\n\t\tt[k].l=l,t[k].r=r;if(l==r)return;int mid=(l+r)>>1;build(l,mid,k<<1),build(mid+1,r,k<<1|1);\n\t}\n\tvoid ins(int l,int r,int id,int k=1)\n\t{\n\t\tif(l>t[k].r||r<t[k].l)return;\n\t\tif(l<=t[k].l&&t[k].r<=r){t[k].P.push_back(id);return;}\n\t\tins(l,r,id,k<<1),ins(l,r,id,k<<1|1);\n\t}\n\tvoid solve(int k=1)\n\t{\n\t\tif(t[k].P.size())\n\t\t{\n\t\t\tvector<pnt> X,Y;\n\t\t\tT.clear(),S.clear();\n\t\t\tfor(int i=t[k].l;i<=t[k].r;i++)\n\t\t\t{\n\t\t\t\tint l=F[i].y;\n\t\t\t\tif(F[i].x)\n\t\t\t\t{\n\t\t\t\t\tint p=T.query(l,0,n);Y.push_back(pnt(p,l));\n\t\t\t\t\tS.modify(p,n-l-1,l+1,0,n);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tint p=S.query(l,0,n);X.push_back(pnt(p,l));\n\t\t\t\t\tT.modify(p,n-l-1,l+1,0,n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<t[k].P.size();i++){tmp[t[k].P[i]]=A[t[k].P[i]];}\n\t\t\t\n\t\t\tsort(t[k].P.begin(),t[k].P.end(),xcmp);\n\t\t\tsort(X.begin(),X.end());\n\t\t\tT.clear();\n\t\t\tfor(int i=0,j=0;i<t[k].P.size();i++)\n\t\t\t{\n\t\t\t\tint u=t[k].P[i];\n\t\t\t\twhile(j<X.size()&&X[j].x<=A[u].x)\n\t\t\t\t{\n\t\t\t\t\tT.modify(0,X[j].y,n-X[j].y,0,n);\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\ttmp[u].x=max(tmp[u].x,T.query(A[u].y,0,n)); \n\t\t\t}\n\t\t\t\n\t\t\tsort(t[k].P.begin(),t[k].P.end(),ycmp);\n\t\t\tsort(Y.begin(),Y.end());\n\t\t\tT.clear();\n\t\t\tfor(int i=0,j=0;i<t[k].P.size();i++)\n\t\t\t{\n\t\t\t\tint u=t[k].P[i];\n\t\t\t\twhile(j<Y.size()&&Y[j].x<=A[u].y)\n\t\t\t\t{\n\t\t\t\t\tT.modify(0,Y[j].y,n-Y[j].y,0,n);\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\ttmp[u].y=max(tmp[u].y,T.query(A[u].x,0,n)); \n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0;i<t[k].P.size();i++)A[t[k].P[i]]=tmp[t[k].P[i]];\n\t\t}\n\t\tif(t[k].l==t[k].r)return;solve(k<<1);solve(k<<1|1);\n\t}\n}D;\n\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1;i<=m;i++)scanf(\"%d%d\",&P[i].x,&P[i].y);\n\tint c=0,k=0;\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint op=0;scanf(\"%d\",&op);\n\t\tif(op==1)\n\t\t{\n\t\t\tint t=0;scanf(\"%d\",&t);c++;A[c]=P[t];ql[c]=ins[t]+1,qr[c]=k;\n\t\t}\n\t\telse if(op==2)\n\t\t{\n\t\t\tk++;F[k].x=0;scanf(\"%d\",&F[k].y);\n\t\t}\n\t\telse if(op==3)\n\t\t{\n\t\t\tk++;F[k].x=1;scanf(\"%d\",&F[k].y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tm++;scanf(\"%d%d\",&P[m].x,&P[m].y);ins[m]=k;\n\t\t}\n\t}\n\tif(k==0){for(int i=1;i<=c;i++)printf(\"%d %d\\n\",A[i].x,A[i].y);return 0;}\n    \n\tD.build(1,k);for(int i=1;i<=c;i++)if(ql[i]<=qr[i])D.ins(ql[i],qr[i],i);\n    D.solve();\n\tfor(int i=1;i<=c;i++){printf(\"%d %d\\n\",A[i].x,A[i].y);}\n}",
        "postTime": 1616749244,
        "uid": 112794,
        "name": "\u5468\u5b50\u8861",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P7220 \u3010[JOISC2020] \u6383\u9664\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e0a\u4e00\u4e2a\u7b49\u8170\u76f4\u89d2\u4e09\u89d2\u5f62\uff0c\u7ef4\u62a4 $4$ \u79cd\u64cd\u4f5c\uff1a\n\n1. \u52a0\u5165 $(x,y)$\n2. \u628a $y\\le l$ \u7684\u70b9\u6a2a\u5750\u6807\u53d8\u6210 $\\max(x,n-l)$\n3. \u628a $x\\le l$ \u7684\u70b9\u7eb5\u5750\u6807\u53d8\u6210 $\\max(y,n-l)$\n4. \u67e5\u8be2\u7b2c $i$ \u4e2a\u70b9\u73b0\u5728\u7684\u4f4d\u7f6e\u3002\n\n## \u9898\u89e3\n\u4ece\u6d4b\u8bd5\u70b9\u51fa\u53d1\u3002 \u524d\u4e24\u4e2a subtask \u6211\u5565\u90fd\u6ca1\u770b\u51fa\u6765\uff0c\u6240\u4ee5\u4ece\u7b2c\u4e09\u4e2a\u5f00\u59cb\u3002\n\n\u8fd9\u4e2a\u5c31\u662f\u6ca1\u6709\u52a0\u70b9\u64cd\u4f5c\uff0c\u5e76\u4e14\u5f62\u72b6\u662f $\\ddots$\u3002\u8fd9\u4e2a\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u624b\u73a9\u4e00\u4e0b\u53d1\u73b0\u5982\u679c\u4e00\u5f00\u59cb\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\uff0c\u90a3\u4e48\u88ab\u63a8\u4e00\u6b21\u4e4b\u540e\u4ecd\u7136\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\uff0c\u5e76\u4e14\u6bcf\u6b21\u66f4\u6539\u7684\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u70b9\u3002\u7136\u540e\u8fd9\u4e2a\u73a9\u610f\u513f\u5f88\u5bb9\u6613\u7ef4\u62a4\uff0c\u76f4\u63a5\u5199\u5e73\u8861\u6811\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $\\mathcal O(Q\\log Q)$\uff0c\u53ef\u4ee5\u53c2\u8003\u8fd9\u4efd [11\u5206\u4ee3\u7801](https://loj.ac/s/1461007)\u3002\n\n\u7136\u540e\u770b\u7b2c\u56db\u4e2a subtask\uff0c\u6ca1\u6709\u4e86 $x$ \u9012\u589e $y$ \u9012\u51cf\u7684\u6027\u8d28\uff0c\u600e\u4e48\u529e\u5462\uff1f\u7ee7\u7eed\u624b\u73a9\uff0c\u53d1\u73b0\u6240\u6709\u63a8\u8fc7\u4e00\u6b21\u4e4b\u540e\u7684\u70b9\u90fd\u6ee1\u8db3\u4e0a\u9762\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u70b9\u7b2c\u4e00\u6b21\u88ab\u63a8\u7684\u65f6\u95f4\u7136\u540e\u5728\u90a3\u4e2a\u65f6\u95f4\u52a0\u5165\u5373\u53ef\u3002\u6c42\u7b2c\u4e00\u6b21\u88ab\u63a8\u7684\u65f6\u95f4\u6c42\u76f8\u5f53\u4e8e\u6c42\u7b2c\u4e00\u4e2a\u8986\u76d6\u7684\u77e9\u5f62\uff0c\u53ef\u4ee5\u6b63\u7740\u6c42\u76f4\u63a5\u627e\u4f46\u662f\u6211\u53ea\u4f1a\u4e24\u53ea $\\log$ \u7684\uff0c\u8003\u8651\u5012\u8fc7\u6765\uff0c\u4e00\u4e2a\u5305\u542b $(a,b)$ \u7684\u77e9\u5f62\u7684\u53f3\u7aef\u70b9\u7684\u6a2a\u5750\u6807\u5728 $[a,N-b]$\uff0c\u4e8e\u662f\u5355\u70b9\u6539\u533a\u95f4\u67e5\u5c31\u662f\u4e00\u53ea $\\log$ \u4e86\uff0c\u603b\u7684\u590d\u6742\u5ea6\u8fd8\u662f $\\mathcal O(Q\\log Q)$\uff0c\u53ef\u4ee5\u53c2\u8003\u8fd9\u4efd [64\u5206\u4ee3\u7801](https://loj.ac/s/1461102)\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u73b0\u5728\u4e0d\u652f\u6301\u4e2d\u95f4\u52a0\u70b9\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u6709\u8fd9\u4e2a\u64cd\u4f5c\u3002\u53ef\u4e0d\u53ef\u4ee5\u6ca1\u6709\u8fd9\u4e2a\u64cd\u4f5c\u5462\uff1f\u5176\u5b9e\u53ef\u4ee5\u7528\u4e00\u53ea $\\log$ \u7684\u4ee3\u4ef7\u6254\u6389\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u5c31\u662f\u7ebf\u6bb5\u6811\u5206\u6cbb\uff0c\u6bcf\u6b21\u8be2\u95ee\u653e\u5230 $\\log Q$ \u4e2a\u533a\u95f4\u4e0a\uff0c\u90a3\u4e48\u6bcf\u4e2a\u533a\u95f4\u5185\u90fd\u662f\u4e00\u4e2a subtask4\uff0c\u56e0\u6b64\u603b\u7684\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal O(Q\\log^2Q)$\uff0c\u5f97\u5230\u4e86 [100\u5206\u4ee3\u7801](https://loj.ac/s/1461094)\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define mp make_pair\n#define mt make_tuple\n#define eb emplace_back\n#define pb push_back\n#define pc putchar\n#define chkmx(a,b) (a)=max((a),(b))\n#define chkmn(a,b) (a)=min((a),(b))\n#define fi first\n#define se second\nusing namespace std;\ntemplate<class T>\nvoid read(T&x){x=0;char c=getchar();bool f=0;for(;!isdigit(c);c=getchar())f^=c=='-';for(;isdigit(c);c=getchar())x=x*10+c-'0';if(f)x=-x;}\ntemplate<class T,class ...ARK>void read(T&x,ARK&...ark){read(x);read(ark...);}\ntemplate<class T>void write(T x){if(x<0)pc('-'),x=-x;if(x>=10)write(x/10);pc(x%10+'0');}\ntemplate<class T,class ...ARK>void write(T x,ARK...ark){write(x);pc(' ');write(ark...);}\ntemplate<class ...ARK>void writeln(ARK...ark){write(ark...);pc('\\n');}\ntypedef long long ll;\nconst int mod=998244353;\nstruct mint{\n\tint x;mint(int o=0){x=o;}mint&operator+=(mint a){return(x+=a.x)%=mod,*this;}mint&operator-=(mint a){return(x+=mod-a.x)%=mod,*this;}\n\tmint&operator*=(mint a){return(x=1ll*x*a.x%mod),*this;}mint&operator^=( int b){mint a=*this;x=1;while(b)(b&1)&&(*this*=a,1),a*=a,b>>=1;return*this;}\n\tmint&operator/=(mint a){return*this*=(a^=mod-2);}friend mint operator+(mint a,mint b){return a+=b;}friend mint operator-(mint a,mint b){return a-=b;}\n\tfriend mint operator*(mint a,mint b){return a*=b;}friend mint operator/(mint a,mint b){return a/=b;}friend mint operator^(mint a, int b){return a^=b;}\n};\n#define lowbit(x) ((x)&-(x))\n#define mid ((l+r)>>1)\nconst int N=2e6+100;\nint n,m,q,root,cnt;\nmt19937 myrnd(114514);\nnamespace fhq{\n\t//x\u5355\u8c03\u4e0d\u964d\uff0cy\u5355\u8c03\u4e0d\u5347\n\tstruct node{\n\t\tint x,y,tagx,tagy,lc,rc,rnd,fa;\n\t\tnode(){tagx=tagy=-1,rnd=myrnd();}\n\t\tvoid clr(){x=y=lc=rc=fa=0;tagx=tagy=-1;}\n\t}t[N];\n\tvoid pushup(int x){\n\t\tif(t[x].lc)t[t[x].lc].fa=x;\n\t\tif(t[x].rc)t[t[x].rc].fa=x;\n\t}\n\tvoid pushtag(int x,int tagx,int tagy){\n\t\tif(!x)return;\n\t\tif(~tagx)t[x].x=t[x].tagx=tagx;\n\t\tif(~tagy)t[x].y=t[x].tagy=tagy;\n\t}\n\tvoid pushdown(int x){\n\t\tpushtag(t[x].lc,t[x].tagx,t[x].tagy);\n\t\tpushtag(t[x].rc,t[x].tagx,t[x].tagy);\n\t\tt[x].tagx=t[x].tagy=-1;\n\t}\n\tvoid splitX(int x,int&a,int&b,int k){\n\t\t//\u6309x\u5206\u88c2 <=k \u7684\u7ed9 a >k \u7684\u7ed9 b\n\t\tif(!x)return a=b=0,void();\n\t\tpushdown(x);\n\t\tif(t[x].x<=k){\n\t\t\ta=x;splitX(t[x].rc,t[x].rc,b,k);\n\t\t\tpushup(a);\n\t\t}else{\n\t\t\tb=x;splitX(t[x].lc,a,t[x].lc,k);\n\t\t\tpushup(b);\n\t\t}\n\t}\n\tvoid splitY(int x,int&a,int&b,int k){\n\t\t//\u6309y\u5206\u88c2 >=k \u7684\u7ed9 a <k \u7684\u7ed9 b\n\t\tif(!x)return a=b=0,void();\n\t\tpushdown(x);\n\t\tif(t[x].y>=k){\n\t\t\ta=x;splitY(t[x].rc,t[x].rc,b,k);\n\t\t\tpushup(a);\n\t\t}else{\n\t\t\tb=x;splitY(t[x].lc,a,t[x].lc,k);\n\t\t\tpushup(b);\n\t\t}\n\t}\n\tint merge(int x,int y){\n\t\tif(!x||!y)return x^y;\n\t\tpushdown(x);pushdown(y);\n\t\tif(t[x].rnd<t[y].rnd){\n\t\t\tt[x].rc=merge(t[x].rc,y);\n\t\t\tpushup(x);return x;\n\t\t}else{\n\t\t\tt[y].lc=merge(x,t[y].lc);\n\t\t\tpushup(y);return y;\n\t\t}\n\t}\n\tvoid dfs(int x){\n\t\tif(!x)return;\n\t\tpushdown(x);\n\t\tdfs(t[x].lc);\n\t\tdfs(t[x].rc);\n\t}\n};\nint x[N],y[N],tim[N];\nint op[N],l[N];int qid[N];\nnamespace sgt{\n\t#define lc (x<<1)\n\t#define rc (x<<1|1)\n\t//\u5355\u70b9\u8986\u76d6 \u533a\u95f4\u6700\u5c0f\u503c\n\tvector<int>num;\n\tint mn[N<<2];\n\tvoid pushup(int x){mn[x]=min(mn[lc],mn[rc]);}\n\tvoid build(int x,int l,int r){mn[x]=q+1;if(l==r)return;build(lc,l,mid);build(rc,mid+1,r);}\n\tvoid mdf(int x,int l,int r,int p,int v){if(l==r)return mn[x]=v,void();if(p<=mid)mdf(lc,l,mid,p,v);else mdf(rc,mid+1,r,p,v);pushup(x);}\n\tint qry(int x,int l,int r,int ql,int qr){if(ql<=l&&r<=qr)return mn[x];if(r<ql||qr<l)return q+1;return min(qry(lc,l,mid,ql,qr),qry(rc,mid+1,r,ql,qr));}\n\tvoid init(){\n\t\tsort(num.begin(),num.end());num.resize(unique(num.begin(),num.end())-num.begin());\n\t\tbuild(1,0,num.size());\n\t}\n\tvoid mdf(int p,int v){\n\t\tp=lower_bound(num.begin(),num.end(),p)-num.begin();\n\t\tmdf(1,0,num.size(),p,v);\n\t}\n\tint qry(int ql,int qr){\n\t\tql=lower_bound(num.begin(),num.end(),ql)-num.begin();\n\t\tqr=lower_bound(num.begin(),num.end(),qr)-num.begin();\n\t\treturn qry(1,0,num.size(),ql,qr);\n\t}\n}\nint xx[N],yy[N],vcnt;vector<int>ids[N];\nvoid ins(int id){\n\tfhq::t[id].x=xx[id],fhq::t[id].y=yy[id];\n\tint a,b,c;\n\tfhq::splitX(root,a,c,xx[id]);fhq::splitY(a,a,b,yy[id]);\n\troot=fhq::merge(fhq::merge(a,id),fhq::merge(b,c));\n}\nvector<int>qrys[N<<2];\nvoid add(int x,int l,int r,int ql,int qr,int v){\n\tif(ql<=l&&r<=qr)return qrys[x].pb(v);\n\tif(r<ql||qr<l)return;\n\tadd(lc,l,mid,ql,qr,v);add(rc,mid+1,r,ql,qr,v);\n}\nvoid solve(int x,int l,int r){\n\tsgt::num.clear();\n\tfor(int i=l;i<=r;i++){\n\t\tids[i].clear();\n\t\tif(op[i]==2)sgt::num.pb(n-::l[i]);\n\t\tif(op[i]==3)sgt::num.pb(::l[i]);\n\t}\n\tfor(auto id:qrys[x])sgt::num.pb(xx[id]),sgt::num.pb(n-yy[id]);\n\tsgt::init();\n\tfor(int i=r;i>=l;i--){\n\t\tif(op[i]==2)sgt::mdf(n-::l[i],i);\n\t\tif(op[i]==3)sgt::mdf(::l[i],i);\n\t}\n\troot=0;\n\tfor(auto id:qrys[x])fhq::t[id].clr(),fhq::t[id].x=xx[id],fhq::t[id].y=yy[id],ids[sgt::qry(xx[id],n-yy[id])].pb(id);\n\tfor(int i=l;i<=r;i++){\n\t\tif(op[i]==2){\n\t\t\tint a,b,c;\n\t\t\tfhq::splitX(root,a,c,n-::l[i]);\n\t\t\tfhq::splitY(a,a,b,::l[i]+1);\n\t\t\tfhq::pushtag(b,n-::l[i],-1);\n\t\t\troot=fhq::merge(fhq::merge(a,b),c);\n\t\t\tfor(auto id:ids[i])xx[id]=n-::l[i],ins(id);\n\t\t}else if(op[i]==3){\n\t\t\tint a,b,c;\n\t\t\tfhq::splitX(root,a,c,::l[i]);\n\t\t\tfhq::splitY(a,a,b,n-::l[i]);\n\t\t\tfhq::pushtag(b,-1,n-::l[i]);\n\t\t\troot=fhq::merge(fhq::merge(a,b),c);\n\t\t\tfor(auto id:ids[i])yy[id]=n-::l[i],ins(id);\n\t\t}\n\t}\n\tfhq::dfs(root);\n\tfor(auto id:qrys[x])xx[id]=fhq::t[id].x,yy[id]=fhq::t[id].y;\n\tif(l==r)return;\n\tsolve(lc,l,mid);solve(rc,mid+1,r);\n}\nsigned main(){\n\tread(n,m,q);\n\tfor(int i=1;i<=m;i++)cnt++,read(x[cnt],y[cnt]);\n\tfor(int i=1;i<=q;i++){\n\t\tread(op[i]);\n\t\tif(op[i]!=4)read(l[i]);\n\t\telse tim[++cnt]=i,read(x[cnt],y[cnt]);\n\t\tif(op[i]==1){\n\t\t\tqid[i]=++vcnt;xx[vcnt]=x[l[i]],yy[vcnt]=y[l[i]];\n\t\t\tadd(1,1,q,tim[l[i]],i,vcnt);\n\t\t}\n\t}\n\tsolve(1,1,q);\n\tfor(int i=1;i<=q;i++)if(op[i]==1)writeln(xx[qid[i]],yy[qid[i]]);\n}\n```",
        "postTime": 1652246518,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P7220 \u3010[JOISC2020] \u6383\u9664\u3011"
    },
    {
        "content": "# \u9898\u76ee\n\n[\u70b9\u8fd9\u91cc](https://loj.ac/p/3273)\u770b\u9898\u76ee\u3002\n\n# \u5206\u6790\n\n\u89c2\u5bdf\u4e00\u4e0b\u90e8\u5206\u5206\uff0c\u524d\u4e09\u4e2a subtasks \u90fd\u6bd4\u8f83\u7b80\u5355\u3002\n\n\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\uff0c\u53d1\u73b0\u4e4b\u540e\u7684\u96be\u70b9\u90fd\u5728\u4e8e **$x,y$ \u4e24\u4e2a\u5750\u6807\u5206\u79bb\u5904\u7406**\uff0c\u8fd9\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u8f7b\u6613\u5730\u627e\u51fa\u9700\u8981\u88ab\u4fee\u6539\u7684\u70b9\u3002\u4e0d\u8fc7\uff0c\u4e00\u65e6\u627e\u51fa\u4e86\u9700\u8981\u88ab\u4fee\u6539\u7684\u70b9\uff0c\u6211\u4eec\u53cd\u800c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u4fee\u6539\uff0c\u53ea\u4e0d\u8fc7**\u9700\u8981\u4fdd\u8bc1\u76f8\u540c\u5750\u6807\u7684\u70b9\u5728\u5408\u5e76\u8fc7\u7a0b\u4e2d\u4e0d\u88ab\u62c6\u5f00**\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u624d\u662f\u5bf9\u7684\u3002\n\n\u518d\u601d\u8003\u4e00\u4e0b\uff0c\u64cd\u4f5c\u8fd9\u4e48\u96be\u53d7\uff0c\u4e3b\u8981\u539f\u56e0\u662f\u56fe\u5f62\u592a\u5947\u602a\u4e86\u3002\u5982\u679c\u6574\u4e2a\u56fe\u5f62\u662f\u4e00\u4e2a\u77e9\u5f62/\u6b63\u65b9\u5f62\uff0c\u90a3\u4e48 $x,y$ \u4e24\u4e2a\u5750\u6807\u5c31\u53ef\u4ee5\u5206\u79bb\u5904\u7406\u3002\u4e3a\u4e86\u8fbe\u6210\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u8003\u8651\u4e00\u79cd\u5e38\u89c1\u7684\u7b56\u7565\u2014\u2014**\u5206\u6cbb**\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/oufhid2h.png)\n\n\u5177\u4f53\u7684\u601d\u8def\u662f\uff0c\u6211\u4eec\u6bcf\u6b21\u9009\u53d6\u4e00\u4e2a\u53f3\u4e0a\u89d2\u5728\u76f4\u7ebf $x+y=N$ \u4e0a\u7684\u77e9\u5f62\uff0c**\u5904\u7406\u5728\u8fd9\u4e00\u5c40\u90e8\u4e2d\u7684\u6240\u6709\u64cd\u4f5c**\u3002\u5904\u7406\u5b8c\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u9012\u5f52\u5230\u5b50\u4e09\u89d2\u5f62\u4e2d\uff0c\u5e76\u7ee7\u7eed\u8fdb\u884c\u5212\u5206\u3002\u4e8e\u662f\u6211\u4eec\u770b\u5230\u4e86\u5982\u4e0a\u56fe\u6240\u793a\u7684\u5212\u5206\u5f62\u6001\u2014\u2014\u84dd\u8272\u8868\u793a\u7b2c\u4e00\u5c42\u3001\u7ea2\u8272\u8868\u793a\u7b2c\u4e8c\u5c42\u3001\u7eff\u8272\u8868\u793a\u7b2c\u4e09\u5c42......\n\n\u90a3\u4e48\uff0c\u7c97\u7cd9\u5730\u770b\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u5206\u6cbb\u77e9\u5f62\u4e2d\u9700\u8981\u505a\u7684\u5c31\u662f\u5feb\u901f\u5730\u5904\u7406\u64cd\u4f5c\uff0c\u4ee5\u6c42**\u5728\u8fd9\u4e00\u7cfb\u5217\u64cd\u4f5c\u7ed3\u675f\u540e\uff0c\u786e\u5b9a\u6240\u6709\u70b9\u7684\u53bb\u5411**\uff08\u8981\u4e48\u662f\u5230\u67d0\u4e2a\u5b50\u4e09\u89d2\u5f62\u4e2d\uff0c\u8981\u4e48\u662f\u7559\u5728\u77e9\u5f62\u5185\uff09\uff0c\u5e76\u4e14\u76f8\u5e94\u5730\u5904\u7406\u8be2\u95ee\u3002\u7531\u4e8e\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u6709\u8f83\u4e25\u683c\u7684\u65f6\u95f4\u987a\u5e8f\uff0c\u5e76\u4e14\u8fd9\u6837\u7684\u5206\u6cbb\u7ed3\u6784\u5e76\u4e0d\u80fd\u5e2e\u52a9\u6211\u4eec\u8c03\u6574\u8fd9\u4e00\u987a\u5e8f\uff0c\u6211\u4eec\u9700\u8981**\u6309\u7167\u65f6\u95f4\u626b\u63cf\u6240\u6709\u7684\u64cd\u4f5c**\u2014\u2014\u6362\u8a00\u4e4b\uff0c\u201c\u5728\u7ebf\u201d\u5904\u7406\u3002\n\n------------\n\n\u5728\u4e00\u4e2a\u5206\u6cbb\u77e9\u5f62\u4e2d\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u6ce8 H,V \u4e24\u79cd\u64cd\u4f5c\u7684\u6267\u884c\u903b\u8f91\u3002\u4ee5 H \u64cd\u4f5c\u4e3a\u4f8b\uff0c\u5047\u8bbe\u77e9\u5f62\u7684\u957f\u4e3a $x$\uff0c\u5bbd\u4e3a $N-x$\uff0c\u626b\u5e1a\u7684\u957f\u5ea6\u4e3a $l$\uff0c\u90a3\u4e48\uff1a\n\n1. \u5982\u679c $l<N-x$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u77e9\u5f62\u5185\u7684\u64cd\u4f5c\u76f8\u5f53\u4e8e\u662f\u628a $y\\le l$ \u7684\u70b9\u5168\u90e8\u63a8\u5230\u53f3\u4fa7\u7684\u5b50\u4e09\u89d2\u5f62\u4e0a\u3002\u4e3a\u4e86\u7ef4\u62a4\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981**\u80fd\u591f\u5c06\u70b9\u6309\u7167 $y$ \u4ece\u5c0f\u5230\u5927\u53d6\u51fa**\uff0c\u7528\u4e00\u4e2a\u5806\u5373\u53ef\u3002\n\n   \u8fd9\u4e00\u7c7b\u64cd\u4f5c\u4e4b\u540e\u53ea\u4f1a\u5f71\u54cd\u53f3\u4fa7\u4e09\u89d2\u5f62\u7684\u70b9\uff0c\u6240\u4ee5\u5b83\u53ea\u9700\u8981\u4e0b\u653e\u5230\u53f3\u4fa7\u4e09\u89d2\u5f62\u5904\u7406\u3002\n\n   ![](https://cdn.luogu.com.cn/upload/image_hosting/sehy8ddw.png)\n\n2. \u5982\u679c $l\\ge N-x$\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u5c06\u6240\u6709 $x<N-l$ \u7684\u70b9\u7684 $x$ \u5750\u6807\u6539\u6210 $N-l$\u3002\u8fd9\u4e2a\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u7528\u5806\u7ef4\u62a4\uff1a\u66b4\u529b\u5730\u5f39\u51fa $x<N-l$ \u7684\u70b9\uff0c\u4fee\u6539\u4e4b\u540e\u653e\u56de\u5806\u3002\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c**\u6211\u4eec\u9700\u8981\u8fd9\u4e9b\u70b9\u5168\u90e8\u5408\u5728\u4e00\u8d77\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u5904\u7406**\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u590d\u6742\u5ea6\u5206\u6790\u8bf4\u660e\u6211\u4eec\u4e0d\u9700\u8981\u7ef4\u62a4\u5168\u5c40\u7684\u7b49\u4ef7\u7c7b\uff0c\u53ea\u9700\u8981\u5728\u6bcf\u4e2a\u5206\u6cbb\u77e9\u5f62\u7684\u5c40\u90e8\u7ef4\u62a4\u8fd9\u6837\u7684\u7b49\u4ef7\u7c7b\u3002\n\n   \u8fd9\u4e00\u7c7b\u64cd\u4f5c\u4e4b\u540e\u53ea\u4f1a\u5f71\u54cd\u4e0a\u4fa7\u4e09\u89d2\u5f62\u7684\u70b9\uff0c\u6240\u4ee5\u5b83\u53ea\u9700\u8981\u4e0b\u653e\u5230\u4e0a\u4fa7\u4e09\u89d2\u5f62\u5904\u7406\u3002\n\n   ![](https://cdn.luogu.com.cn/upload/image_hosting/3rxuvrxy.png)\n\nV \u64cd\u4f5c\u4e5f\u7c7b\u4f3c\u3002\u8fd9\u662f\u4e00\u90e8\u5206\uff0c\u5bf9\u4e8e\u5269\u4e0b\u7684\u201c\u70b9\u201d\u548c\u201c\u8be2\u95ee\u201d\uff0c\u6267\u884c\u903b\u8f91\u662f\uff1a\n\n- \u70b9\uff1a\u5982\u679c\u9047\u5230\u4e86\u7b2c\u4e00\u7c7b H \u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u5c06\u53d6\u51fa\u6765\u7684 $y\\le l$ \u7684\u70b9\u5168\u90e8\u63a8\u9001\u5230\u53f3\u4fa7\u5b50\u4e09\u89d2\u5f62\u4e2d\uff0c\u7559\u7740\u4e4b\u540e\u5904\u7406\uff1b\u5982\u679c\u9047\u5230\u4e86\u7b2c\u4e8c\u7c7b H \u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u597d\u5750\u6807\u3002\n\n  \u800c\u5bf9\u4e8e V \u64cd\u4f5c\u7684\u5904\u7406\u65b9\u5f0f\u5b8c\u5168\u5bf9\u79f0\u3002\n\n- \u8be2\u95ee\uff1a\u56e0\u4e3a\u64cd\u4f5c\u662f\u6309\u7167\u65f6\u95f4\u626b\u63cf\u7684\uff0c\u6240\u4ee5\u626b\u63cf\u5230\u8be2\u95ee\u65f6\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5bf9\u5e94\u70b9\u662f\u5426\u8fd8\u5728\u77e9\u5f62\u5185\u3002\u5982\u679c\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u89e3\u51b3\u5b83\uff1b\u5426\u5219\uff0c\u9012\u5f52\u5230\u5bf9\u5e94\u7684\u5b50\u4e09\u89d2\u5f62\u5904\u7406\u3002\n\n\u5806\u91cc\u9762\u7ef4\u62a4\u7684\u662f\u7b49\u4ef7\u7c7b\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u80fd\u591f\u679a\u4e3e\u7b49\u4ef7\u7c7b\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5e76\u4e14\u652f\u6301\u5feb\u901f\u5408\u5e76\u2014\u2014\u7528\u81ea\u9876\u5411\u4e0b\u7684\u6811\u5f62\u7ed3\u6784\u7ef4\u62a4\u5373\u53ef\u3002\u5728\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u5feb\u901f\u67e5\u8be2\u67d0\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u7684\u5750\u6807\u503c\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\n\n\u6240\u4ee5\uff0c\u5982\u679c\u67d0\u4e00\u5c42\u5206\u6cbb\u77e9\u5f62\u4e2d\u4e00\u5171\u6709 $c$ \u4e2a\u64cd\u4f5c\uff0c\u8fd9\u4e00\u5c42\u7684\u590d\u6742\u5ea6\u5373\u4e3a $O(c\\log c)$\u3002\n\n----------\n\n\u5168\u5c40\u7684\u7ec6\u8282\uff1a\u867d\u7136\u6211\u4eec\u8981\u6c42\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u5904\u7406\uff0c\u4f46\u662f**\u540c\u4e00\u5c42\u7684\u5b50\u4e09\u89d2\u5f62\u662f\u5b8c\u5168\u72ec\u7acb\u7684**\uff0c\u5b83\u4eec\u4e4b\u95f4\u6ca1\u6709\u65f6\u95f4\u7684\u7f81\u7eca\uff0c\u6240\u4ee5\u53ef\u4ee5\u5206\u522b\u5904\u7406\u3002\n\n\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5b83\u81f3\u591a\u51fa\u73b0\u5728 $O(\\log n)$ \u4e2a\u5206\u6cbb\u77e9\u5f62\u4e2d\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u5b9e\u9645\u4e0a\u4e3a $O((m+q)\\log (m+q)\\log n)$\uff0c\u7a7a\u95f4\u662f\u7ebf\u6027\u7684\u3002\u770b\u8d77\u6765\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u4f46\u662f\u8dd1\u8d77\u6765\u8fd8\u662f\u975e\u5e38\u4e4b\u4f18\u79c0\u7684\u3002\n\n\u53e6\u5916\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u5168\u5c40\u4e2d\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5206\u6cbb\u6811\u7684\u7ed3\u6784\uff0c\u5e76\u4e14\u6839\u636e\u64cd\u4f5c\u7684\u6027\u8d28\uff0c\u6309\u6811\u7684\u904d\u5386\u987a\u5e8f\u800c\u975e\u65f6\u95f4\u5904\u7406\u6240\u6709\u64cd\u4f5c\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5206\u6cbb\u7b97\u6cd5**\u53ef\u4ee5\u5012\u56de\u53bb\u8fd8\u539f\u51fa\u4e00\u4e2a\u5728\u7ebf\u7684\u7b97\u6cd5**\uff0c\u552f\u4e00\u7684\u95ee\u9898\u5c31\u662f\u7a7a\u95f4\u4f1a\u589e\u5927\u5230 $O((m+q)\\log (m+q))$\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <vector>\n#include <utility>\n\n#define rep( i, a, b ) for( int i = (a) ; i <= (b) ; i ++ )\n#define per( i, a, b ) for( int i = (a) ; i >= (b) ; i -- )\n\nconst int MAXM = 1.5e6 + 5;\n\ntemplate<typename _T>\ninline void Read( _T &x ) {\n    x = 0; char s = getchar(); bool f = false;\n    while( s < '0' || '9' < s ) { f = s == '-', s = getchar(); }\n    while( '0' <= s && s <= '9' ) { x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar(); }\n    if( f ) x = -x;\n}\n\ntemplate<typename _T>\ninline void Write( _T x ) {\n    if( x < 0 ) putchar( '-' ), x = -x;\n    if( 9 < x ) Write( x / 10 );\n    putchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\ninline _T Max( const _T &a, const _T &b ) {\n    return a > b ? a : b;\n}\n\nstruct Operation {\n    int opt, arg1, arg2, id;\n\n    Operation(): opt(), arg1(), arg2(), id( 0 ) {}\n    Operation( int O, int A1, int A2, int I ): opt( O ), arg1( A1 ), arg2( A2 ), id( I ) {}\n};\n\nstruct Point {\n    int x, y, id;\n\n    Point(): x( 0 ), y( 0 ), id( 0 ) {}\n    Point( int X, int Y, int I ): x( X ), y( Y ), id( I ) {}\n};\n\nstruct PointCompByX {\n    inline bool operator () ( const Point &a, const Point &b ) const {\n        return ! ( a.x < b.x );\n    }\n};\n\nstruct PointCompByY {\n    inline bool operator () ( const Point &a, const Point &b ) const {\n        return ! ( a.y < b.y );\n    }\n};\n\nstruct UFS {\n    int fa[MAXM];\n\n    UFS(): fa{} {}\n\n    inline void MakeSet( const int &n ) {\n        rep( i, 1, n ) fa[i] = i;\n    }\n\n    int FindSet( const int &u ) {\n        return fa[u] == u ? u : ( fa[u] = FindSet( fa[u] ) );\n    }\n\n    inline void UnionSet( const int &u, const int &v ) {\n        fa[FindSet( u )] = FindSet( v );\n    }\n};\n\nUFS faX, faY;\n\nstd :: priority_queue<Point, std :: vector<Point>, PointCompByX> srtByX;\nstd :: priority_queue<Point, std :: vector<Point>, PointCompByY> srtByY;\nstd :: vector<Operation> ini; \nstd :: vector<int> sonX[MAXM], sonY[MAXM];\n\nint q[MAXM];\n\nbool imp[MAXM];\n\nint extc[MAXM];\nint ansX[MAXM], ansY[MAXM];\nint posX[MAXM], posY[MAXM];\n\nint N, M, Q;\n\ninline void Read( Operation &op ) {\n    Read( op.opt ), Read( op.arg1 );\n    if( op.opt == 4 ) Read( op.arg2 );\n}\n\nvoid Divide( const int &sL, const int &sR, std :: vector<Operation> &glb ) {\n    if( sL > sR || glb.empty() ) return ;\n    if( sL == sR ) {\n        for( const auto &x : glb ) if( x.opt == 1 )\n            ansX[x.id] = sL, ansY[x.id] = N - sL;\n        return ;\n    }\n    bool any = false;\n    for( const auto &x : glb )\n        if( x.opt == 1 ) {\n            any = true; break;\n        }\n    if( ! any ) return ;\n    std :: vector<Operation> sub[2];\n    int mid = ( sL + sR ) >> 1;\n    // use potential to handle merging\n    while( ! srtByX.empty() ) srtByX.pop();\n    while( ! srtByY.empty() ) srtByY.pop();\n    for( const auto &x : glb ) {\n        if( x.opt == 1 ) {\n            if( ~ extc[x.arg1] )\n                sub[extc[x.arg1]].push_back( x );\n            else\n                ansX[x.id] = posX[faX.FindSet( x.arg1 )],\n                ansY[x.id] = posY[faY.FindSet( x.arg1 )];\n        }\n        if( x.opt == 2 ) {\n            if( x.arg1 < N - mid ) {\n                // push out\n                Point tmp;\n                while( ! srtByY.empty() ) {\n                    tmp = srtByY.top();\n                    if( tmp.y > x.arg1 ) break;\n                    srtByY.pop();\n                    int h = 1, t = 0; q[++ t] = tmp.id;\n                    while( h <= t ) {\n                        int u = q[h ++];\n                        if( extc[u] == -1 )\n                            sub[extc[u] = 1].push_back( Operation( 4, mid + 1, posY[tmp.id], u ) );\n                        for( const int &x : sonY[u] ) q[++ t] = x;\n                        std :: vector<int>().swap( sonY[u] );\n                    }\n                }\n                sub[1].push_back( x );\n            } else {\n                // add a tag on\n                if( x.arg1 > N - mid ) sub[0].push_back( x );\n                int prev = 0; Point lst;\n                while( ! srtByX.empty() && srtByX.top().x <= N - x.arg1 ) {\n                    lst = srtByX.top(), srtByX.pop();\n                    posX[lst.id] = lst.x = N - x.arg1;\n                    if( prev ) \n                        faX.UnionSet( prev, lst.id ), \n                        sonX[lst.id].push_back( prev );\n                    prev = lst.id;\n                }\n                if( lst.id ) srtByX.push( lst );\n            }\n        }\n        if( x.opt == 3 ) {\n            if( x.arg1 < mid ) {\n                // push out\n                Point tmp;\n                while( ! srtByX.empty() ) {\n                    tmp = srtByX.top();\n                    if( tmp.x > x.arg1 ) break;\n                    srtByX.pop();\n                    int h = 1, t = 0; q[++ t] = tmp.id;\n                    while( h <= t ) {\n                        int u = q[h ++];\n                        if( extc[u] == -1 )\n                            sub[extc[u] = 0].push_back( Operation( 4, posX[tmp.id], N - mid + 1, u ) );\n                        for( const int &x : sonX[u] ) q[++ t] = x;\n                        std :: vector<int>().swap( sonX[u] );\n                    }\n                }\n                sub[0].push_back( x );\n            } else {\n                // add a tag on\n                if( x.arg1 > mid ) sub[1].push_back( x );\n                int prev = 0; Point lst;\n                while( ! srtByY.empty() && srtByY.top().y <= N - x.arg1 ) {\n                    lst = srtByY.top(), srtByY.pop();\n                    posY[lst.id] = lst.y = N - x.arg1;\n                    if( prev ) \n                        faY.UnionSet( prev, lst.id ),\n                        sonY[lst.id].push_back( prev );\n                    prev = lst.id;\n                }\n                if( lst.id ) srtByY.push( lst );\n            }\n        }\n        if( x.opt == 4 ) {\n            if( x.arg2 > N - mid ) {\n                sub[extc[x.id] = 0].push_back( x ); continue;\n            }\n            if( x.arg1 > mid ) {\n                sub[extc[x.id] = 1].push_back( x ); continue;\n            }\n            sonX[x.id].clear(), sonY[x.id].clear();\n            faX.fa[x.id] = x.id, faY.fa[x.id] = x.id;\n            extc[x.id] = -1, posX[x.id] = x.arg1, posY[x.id] = x.arg2;\n            srtByX.push( Point( posX[x.id], posY[x.id], x.id ) );\n            srtByY.push( Point( posX[x.id], posY[x.id], x.id ) );\n        }\n    }\n    std :: vector<Operation> ().swap( glb );\n    Divide( sL, mid - 1, sub[0] );\n    Divide( mid + 1, sR, sub[1] );\n}\n\nint main() {\n    Read( N ), Read( M ), Read( Q ), ini.reserve( M + Q );\n    rep( i, 1, M ) {\n        int x, y; Read( x ), Read( y );\n        ini.push_back( Operation( 4, x, y, i ) );\n    }\n    rep( i, 1, Q ) {\n        Operation tmp; Read( tmp );\n        tmp.id = tmp.opt == 4 ? ++ M : i;\n        ini.push_back( tmp ), imp[i] = tmp.opt == 1;\n    }\n    Divide( 0, N, ini );\n    rep( i, 1, Q ) if( imp[i] )\n        Write( ansX[i] ), putchar( ' ' ), Write( ansY[i] ), putchar( '\\n' );\n    return 0;\n}\n```",
        "postTime": 1673484219,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "\u300cJOISC2020\u300d\u626b\u9664"
    },
    {
        "content": "**P7220** \n\n\u6b64\u9898\u7684\u52a0\u5f3a\u7248\u5373\u4e3a Ynoi \u7684 T166\uff0c\u671f\u671b\u5728 2077 \u5e74\u52a0\u5165\u51fa\u9898\u5e93\u3002\n\n**\u65e0\u5e8f\u6027**\uff1a\u89c2\u5bdf\u5230\u4e00\u6bb5\u8fde\u7eed\u7684 $H/V$ \u64cd\u4f5c\u5176\u5b9e\u662f\u53ef\u4ee5\u65e0\u7eed\u64cd\u4f5c\u7684\u3002\n\n**\u975e\u5bb9\u65a5\u4e8b\u4ef6\u7684\u65e0\u5e8f\u6027**\uff1a\u89c2\u5bdf\u5230\u5bf9\u4e8e\u4e00\u4e2a\u95f4\u63a5\u7684\u63d2\u5165\uff0c\u6839\u636e\u4e0a\u6587\u540c\u7c7b\u64cd\u4f5c\u7684\u65e0\u5e8f\u6027\uff0c\u6211\u4eec\u7ef4\u62a4\u5f02\u7c7b\u64cd\u4f5c\u4e92\u76f8\u7684\u5f71\u54cd\u3002\n\n\u8fd9\u91cc\u7684\u5f71\u54cd\u662f\u62bd\u8c61\u7684\uff0c\u4ee5 $H$ \u64cd\u4f5c\u4e3e\u4f8b\uff0c\u6211\u4eec\u7ef4\u62a4 $l_V$ \u5728\u8be5\u64cd\u4f5c\u4e4b\u524d\u5c0f\u4e8e\u8be5 $n - l_{H_i}$ \u6700\u5927\u7684 $l_V$\uff0c\u5373\u786e\u5b9a\u4e86\u8be5 $H$ \u64cd\u4f5c\u5b9e\u9645\u5f71\u54cd\u7684\u77e9\u5f62\u3002\n\n\u8003\u8651\u4efb\u610f\u4e00\u4e2a\u67e5\u8be2\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u70b9\u4ece\u7b2c $l$ \u4e2a\u4fee\u6539\u5f00\u59cb\u5230\u7b2c $r$ \u4e2a\u4fee\u6539\u7ed3\u675f\u540e\u7684\u70b9\u72b6\u6001\u3002\n\n\u95ee\u9898\u53d8\u6210\uff1a\u7ed9\u5b9a $m$ \u4e2a\u4fee\u6539\u64cd\u4f5c\uff0c\u7b49\u4ef7\u4e8e\u5c06\u4e00\u4e2a\u77e9\u5f62\u5185\u7684\u70b9\u7684 $(x,y)$ \u4e2d\u7684\u4e00\u7ef4\u53d6\u5230\u4e00\u4e2a\u7ed9\u5b9a\u7684\u77e9\u5f62\u8fb9\u754c\uff0c\u7ed9\u5b9a $q$ \u4e2a\u8be2\u95ee\uff0c\u4e14\u6bcf\u4e2a\u77e9\u5f62\u4fe1\u606f\u7531\u67e5\u8be2\u7684\u533a\u95f4\u4fe1\u606f\u51b3\u5b9a\uff0c\u4f46\u4fee\u6539\u5177\u6709\u5b50\u95ee\u9898\u5212\u5206\u7684\u6027\u8d28\u3002\n\n\u8003\u8651\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4fee\u6539\u533a\u95f4 $[l,r]$ \u7ef4\u62a4\u51fa\u5f53\u524d\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u77e9\u5f62\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u5c06\u4fee\u6539\u770b\u4f5c\u4e00\u4e2a\u51fd\u6570\u5c42\u9762\u4e0a\u7684\u6620\u5c04\uff0c\u6240\u4ee5\u5c06\u4e00\u4e2a\u70b9 $x \\rightarrow f_1(x) = y,y \\rightarrow f_2(y) = z$ \u8fd9\u6837\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u505a $O(\\log n)$ \u6b21\u65e0\u5e8f\u7684\u4e8c\u7ef4\u6570\u70b9\uff0c\u5373\u6392\u4e00\u4e0b\u5e8f\u9000\u5316\u5230\u4e00\u7ef4\u7684\u6570\u70b9\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m \\log q \\log n)$\u3002\n\n\u6b64\u9898\u5728\u8c37\u4e0a\u7a7a\u95f4\u9650\u5236\u592a\u5c0f\uff0c\u5efa\u8bae\u53bb loj \u4ea4\u3002",
        "postTime": 1673341099,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u771f\u7ea2\u7a7f\u7740\u7ef4\u591a\u5229\u52a0\u7684\u8863\u670d\u95ee\u9053\uff1a\u201c\u6c5d\u4e3a\u4eba\u5426\uff1f\u201d\u4e03\u4e2a\u5c11\u5973\u5f00\u59cb\u4e86\u5723\u676f\u6218\u4e89\u5374\u5728\u7b2c\u4e00\u96c6\u5c31 tick \u4e24\u4eba\uff0c\u8fd9\u662f\u4ec0\u4e48\u6837\u7684\u5f00\u7aef\u5462\uff1f\u8537\u8587\u5c11\u5973\u770b\u4e0d\u61c2\u554a\uff0c\u600e\u4e48\u529e\u5462\uff1f"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P7220)\n\n## \u9898\u76ee\u5927\u610f\n\n- \u4e00\u5f00\u59cb\u6240\u6709 $m$ \u4e2a\u70b9\u90fd\u5728 $x=0,y=0,x+y=n$ \u56f4\u6210\u7684\u4e09\u89d2\u5f62\u5185\u3002\n\n- \u652f\u6301\u56db\u79cd\u64cd\u4f5c\uff1a\n\n1. \u67e5\u8be2\u67d0\u4e2a\u70b9\u7684\u4f4d\u7f6e\u3002\n\n2. \u628a $y\\leq l$ \u7684\u70b9\u7684 $x$ \u4e0e $n-l$ \u53d6\u6700\u5927\u503c\u3002\n\n3. \u628a $x\\leq l$ \u7684\u70b9\u7684 $y$ \u4e0e $n-l$ \u53d6\u6700\u5927\u503c\u3002\n\n4. \u63d2\u5165\u4e00\u4e2a\u5728\u4e09\u89d2\u5f62\u5185\u7684\u70b9\u3002\n\n- $m\\leq 5\\times 10^5$\uff0c$q \\leq 10^6$\uff0c\u5750\u6807 $\\leq 10^9$\uff0c11s\u3002\n\n\u9898\u9762\u91cc H \u548c V \u7684\u542b\u4e49\u53cd\u4e86\uff0c\u5e95\u4e0b\u7684\u6837\u4f8b\u89e3\u91ca\u662f\u5bf9\u7684\u3002\n\n# Solution\n\n\u7ed9\u4e2a CDQ\u5206\u6cbb \u7684\u505a\u6cd5\u3002\n\n\u4e00\u822c\u7684 CDQ \u662f\u901a\u8fc7\u65f6\u95f4\u4e0a\u7684\u5206\u6cbb\u505a\u5230\u8ba1\u7b97\u6bcf\u5bf9 \u4fee\u6539-\u67e5\u8be2 \u7684\u5f71\u54cd\uff0c\u5728\u8fd9\u9898\u91cc\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u5bf9 \u63d2\u5165-\u82e5\u5e72\u4fee\u6539-\u67e5\u8be2\u3002\n\n\u7c7b\u4f3c\u4e8e\u732b\u6811\uff0c\u6bcf\u4e2a \u63d2\u5165-\u67e5\u8be2 \u5728\u4e2d\u70b9\u5206\u5272\u4ed6\u4eec\u7684\u5206\u6cbb\u533a\u57df\u5185\u5904\u7406\u597d\u3002\u6bd4\u5982\u73b0\u5728 CDQ \u7684\u5de6\u533a\u95f4\u4e3a $[L,mid]$\uff0c\u53f3\u533a\u95f4\u4e3a $(mid,R]$\uff0c\u9996\u5148\u6240\u6709\u5728\u5de6\u533a\u95f4\u63d2\u5165\u7684\u70b9\u90fd\u5f97\u5904\u4e8e\u5b8c\u6210\u4e86 $[L,mid]$ \u6240\u6709\u4fee\u6539\u540e\u7684\u72b6\u6001\uff0c\u8fd9\u4e2a\u6ce8\u610f\u4e00\u4e0b CDQ \u7684\u987a\u5e8f\u5373\u53ef\uff0c\u53ef\u4ee5\u5148\u9012\u5f52 $[L,mid]$ \u518d\u9012\u5f52 $(mid,R]$\uff0c\u7136\u540e\u5904\u7406\u8de8\u8fc7 $mid$ \u7684 \u63d2\u5165-\u67e5\u8be2\uff0c\u6700\u540e\u60f3\u529e\u6cd5\u628a\u5de6\u533a\u95f4\u63d2\u5165\u7684\u70b9\u90fd\u6539\u6210\u7ecf\u8fc7 $(mid,R]$ \u6240\u6709\u4fee\u6539\u540e\u7684\u72b6\u6001\u3002\n\n\u6bcf\u4e2a\u5206\u6cbb\u533a\u57df\u5185\u90fd\u662f\u4e00\u7ec4\u9759\u6001\u95ee\u9898\uff0c\u5373\u6ca1\u6709\u63d2\u5165\u53ea\u6709\u4fee\u6539\u548c\u67e5\u8be2\u3002\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u4fee\u6539\u7684\u77e9\u5f62\u7684\u5e76\u7684\u8f6e\u5ed3\u7ebf\u4e0a\u7684\u70b9\u5f88\u597d\u7ef4\u62a4\uff0c\u56e0\u4e3a\u5982\u679c\u628a\u4ed6\u4eec\u5148\u6309 $x$ \u540e\u6309 $y$ \u5750\u6807\u6392\u597d\u5e8f\uff0c\u6bcf\u6b21\u4fee\u6539\u76f8\u5f53\u4e8e\u533a\u95f4 x/y \u8d4b\u503c\u3002\u6240\u4ee5\u53ef\u4ee5\u5148\u626b\u63cf\u7ebf\u6c42\u51fa\u6bcf\u4e2a\u70b9\u79fb\u52a8\u5230\u8f6e\u5ed3\u7ebf\u4e0a\u7684\u65f6\u95f4\uff0c\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u65f6\u95f4 $O((m+q)\\log^2 (m+q))$\uff0c\u7a7a\u95f4 $O(m+q)$\u3002\n\n\u6240\u4ee5\u5176\u5b9e\u53bb\u6389\u4fee\u6539\u5168\u5728\u659c\u8fb9\u4e0a\u7684\u9650\u5236\u4e5f\u80fd\u8fd9\u6837\u505a\u3002\n\n# Code\n\n```cpp\n#include<bits/stdc++.h>\n#define Lson(x) node[x].Son[0]\n#define Rson(x) node[x].Son[1]\n#define fa(x) node[x].father\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN=1e9,MAXM=5e5,MAXQ=1e6,MAXT=MAXM+MAXQ;\n\ninline int Read()\n{\n\tint res;char c;\n\twhile(1) {c=getchar();if('0'<=c && c<='9') {res=c-'0';break;}}\n\twhile(1) {c=getchar();if('0'<=c && c<='9') res=res*10+c-'0';else break;}\n\treturn res;\n}\n\nint n,m,q;\n\nstruct Query\n{\n\tint opt,x,ID;\n\tinline int X()\n\t{\n\t\tif(opt==2) return n-x;\n\t\treturn x;\n\t}\n}ope[MAXT+5];int T;\n\nstruct Point\n{\n\tint x,y;\n\tinline void Scan() {x=Read(),y=Read();}\n\tinline void Print() {printf(\"%d %d\\n\",x,y);}\n}ver[MAXT+5];\n\nPoint ans[MAXQ+5];int anum;\nint Tim[MAXT+5];//\u6bcf\u4e2a\u70b9\u51fa\u73b0\u7684\u65f6\u95f4\n\nstruct fhqTreap\n{\n\tint Son[2],tag1,tag2,KEY;\n\t//\u5bf9\u4e8e\u64cd\u4f5c\uff1a\u6700\u5c0f\u65f6\u95f4\u6233\uff0c\u64cd\u4f5c x \u5750\u6807\n\t//\u5bf9\u4e8e\u7070\u5c18\uff1ax \u61d2\u6807\u8bb0\uff0cy \u61d2\u6807\u8bb0\n\tint father;\n}node[MAXT+5];int root;\n\ninline void PushUp(int now)\n{\n\tnode[now].tag1=now;\n\tif(Lson(now)) node[now].tag1=min(node[now].tag1,node[Lson(now)].tag1);\n\tif(Rson(now)) node[now].tag1=min(node[now].tag1,node[Rson(now)].tag1);\n}\nvoid SplitOpe(int now,int &a,int &b,int x)\n{\n\tif(!now) {a=b=0;return;}\n\tif(node[now].tag2<=x) a=now,SplitOpe(Rson(now),Rson(a),b,x);\n\telse b=now,SplitOpe(Lson(now),a,Lson(b),x);\n\tPushUp(now);\n}\nint MergeOpe(int a,int b)\n{\n\tif(!a || !b) return a^b;\n\tif(node[a].KEY>node[b].KEY)\n\t{\n\t\tRson(a)=MergeOpe(Rson(a),b);\n\t\tPushUp(a);\n\t\treturn a;\n\t}\n\tLson(b)=MergeOpe(a,Lson(b));\n\tPushUp(b);\n\treturn b;\n}\ninline int GetMin(int L,int R)\n{\n\tint a,b,c;\n\tSplitOpe(root,a,b,L-1);\n\tSplitOpe(b,b,c,R);\n\tint res=node[b].tag1;\n\troot=MergeOpe(MergeOpe(a,b),c);\n\treturn res;\n}\ninline void InsertOpe(int x)\n{\n\tLson(x)=Rson(x)=0;\n\tnode[x].tag1=x;\n\tnode[x].tag2=ope[x].X();\n\tnode[x].KEY=rand();\n\tint a,b;\n\tSplitOpe(root,a,b,node[x].tag2);\n\troot=MergeOpe(MergeOpe(a,x),b);\n}\n\nPoint Ask(int x)\n{\n\tPoint res=ver[x];\n\twhile(1)\n\t{\n\t\tif(node[x].tag1) res.x=node[x].tag1;\n\t\tif(node[x].tag2) res.y=node[x].tag2;\n\t\tif(fa(x)) x=fa(x);\n\t\telse break;\n\t}\n\treturn res;\n}\ninline void PushDown(int now)\n{\n\tif(node[now].tag1)\n\t{\n\t\tif(Lson(now)) node[Lson(now)].tag1=ver[Lson(now)].x=node[now].tag1;\n\t\tif(Rson(now)) node[Rson(now)].tag1=ver[Rson(now)].x=node[now].tag1;\n\t\tnode[now].tag1=0;\n\t}\n\tif(node[now].tag2)\n\t{\n\t\tif(Lson(now)) node[Lson(now)].tag2=ver[Lson(now)].y=node[now].tag2;\n\t\tif(Rson(now)) node[Rson(now)].tag2=ver[Rson(now)].y=node[now].tag2;\n\t\tnode[now].tag2=0;\n\t}\n}\nvoid SplitX(int now,int &a,int &b,int x)\n{\n\tif(!now) {a=b=0;return;}\n\tPushDown(now);\n\tif(ver[now].x<=x)\n\t{\n\t\ta=now;\n\t\tif(Rson(a)) fa(Rson(a))=0;\n\t\tSplitX(Rson(now),Rson(a),b,x);\n\t\tif(Rson(a)) fa(Rson(a))=a; \n\t}\n\telse\n\t{\n\t\tb=now;\n\t\tif(Lson(b)) fa(Lson(b))=0;\n\t\tSplitX(Lson(now),a,Lson(b),x);\n\t\tif(Lson(b)) fa(Lson(b))=b;\n\t}\n}\nvoid SplitY(int now,int &a,int &b,int y)\n{\n\tif(!now) {a=b=0;return;}\n\tPushDown(now);\n\tif(ver[now].y<=y)\n\t{\n\t\tb=now;\n\t\tif(Lson(b)) fa(Lson(b))=0;\n\t\tSplitY(Lson(now),a,Lson(b),y);\n\t\tif(Lson(b)) fa(Lson(b))=b;\n\t}\n\telse\n\t{\n\t\ta=now;\n\t\tif(Rson(a)) fa(Rson(a))=0;\n\t\tSplitY(Rson(now),Rson(a),b,y);\n\t\tif(Rson(a)) fa(Rson(a))=a;\n\t}\n}\nvoid SplitXY(int now,int &a,int &b,int x,int y)\n{\n\tif(!now) {a=b=0;return;}\n\tPushDown(now);\n\tif(ver[now].x<x || (ver[now].x==x && ver[now].y>y))\n\t{\n\t\ta=now;\n\t\tif(Rson(a)) fa(Rson(a))=0;\n\t\tSplitXY(Rson(now),Rson(a),b,x,y);\n\t\tif(Rson(a)) fa(Rson(a))=a; \n\t}\n\telse\n\t{\n\t\tb=now;\n\t\tif(Lson(b)) fa(Lson(b))=0;\n\t\tSplitXY(Lson(now),a,Lson(b),x,y);\n\t\tif(Lson(b)) fa(Lson(b))=b;\n\t}\n}\nint MergeAsh(int a,int b,int c)\n{\n\tif(!a || !b) {if(a^b) fa(a^b)=c; return a^b;}\n\tPushDown(a),PushDown(b);\n\tif(node[a].KEY>node[b].KEY)\n\t{\n\t\tfa(a)=c;\n\t\tRson(a)=MergeAsh(Rson(a),b,a);\n\t\treturn a;\n\t}\n\tfa(b)=c;\n\tLson(b)=MergeAsh(a,Lson(b),b);\n\treturn b;\n}\ninline void InsertAsh(int x)\n{\n\tLson(x)=Rson(x)=fa(x)=0;\n\tnode[x].tag1=node[x].tag2=0;\n\tnode[x].KEY=rand();\n\tint a,b;\n\tSplitXY(root,a,b,ver[x].x,ver[x].y);\n\troot=MergeAsh(MergeAsh(a,x,0),b,0);\n}\ninline void Hmove(int x)\n{\n\tint a,b,c;\n\tSplitX(root,b,c,n-x);\n\tSplitY(b,a,b,x);\n\tif(b) node[b].tag1=ver[b].x=n-x;\n\troot=MergeAsh(MergeAsh(a,b,0),c,0);\n}\ninline void Vmove(int x)\n{\n\tint a,b,c;\n\tSplitX(root,b,c,x);\n\tSplitY(b,a,b,n-x);\n\tif(b) node[b].tag2=ver[b].y=n-x;\n\troot=MergeAsh(MergeAsh(a,b,0),c,0);\n}\n\nvoid AllPushDown(int now)\n{\n\tif(!now) return;\n\tPushDown(now);\n\tAllPushDown(Lson(now));\n\tAllPushDown(Rson(now));\n}\n\nint Head[MAXT+5],nxt[MAXT+5];\ninline void Push(int x,int v)\n{\n\tif(!x) return;\n\tnxt[v]=Head[x],Head[x]=v;\n}\nbool V[MAXT+5];\nvoid CDQ(int L,int R)\n{\n\tif(L==R) return;\n\tint mid=(L+R)>>1;\n\tCDQ(L,mid),CDQ(mid+1,R);\n\troot=0;\n\tfor(int i=mid+1;i<=R;i++)\n\t\tif(ope[i].opt==2 || ope[i].opt==3) InsertOpe(i),Head[i]=0;\n\tfor(int i=L,x;i<=mid;i++)\n\t\tif(ope[i].opt==4)\n\t\t{\n\t\t\tx=ope[i].x;//\u7070\u5c18\u7f16\u53f7 \n\t\t\tPush(GetMin(ver[x].x,n-ver[x].y),x);\n\t\t\tV[x]=0;\n\t\t}\n\troot=0;\n\tfor(int i=mid+1;i<=R;i++)\n\t\tif(ope[i].opt==1)\n\t\t{\n\t\t\tif(L<=Tim[ope[i].x] && Tim[ope[i].x]<=mid)\n\t\t\t{\n\t\t\t\tif(V[ope[i].x]) ans[ope[i].ID]=Ask(ope[i].x);\n\t\t\t\telse ans[ope[i].ID]=ver[ope[i].x];\n\t\t\t}\n\t\t}\n\t\telse if(ope[i].opt==2)\n\t\t{\n\t\t\tHmove(ope[i].x);\n\t\t\tfor(int j=Head[i];j;j=nxt[j])\n\t\t\t\tV[j]=1,ver[j].x=n-ope[i].x,InsertAsh(j);\n\t\t}\n\t\telse if(ope[i].opt==3)\n\t\t{\n\t\t\tVmove(ope[i].x);\n\t\t\tfor(int j=Head[i];j;j=nxt[j])\n\t\t\t\tV[j]=1,ver[j].y=n-ope[i].x,InsertAsh(j);\n\t\t}\n\tAllPushDown(root);\n}\n\nint main()\n{\n\tsrand(unsigned(time(0)));\n\tn=Read(),m=Read(),q=Read();\n\tfor(int i=1;i<=m;i++) ver[i].Scan(),ope[++T]=Query{4,i,0},Tim[i]=T;\n\tfor(int opt,x;q--;)\n\t{\n\t\topt=Read();\n\t\t\t if(opt==1) x=Read(),ope[++T]=Query{1,x,++anum};\n\t\telse if(opt==2) x=Read(),ope[++T]=Query{2,x,0};//\u5411\u53f3 \n\t\telse if(opt==3) x=Read(),ope[++T]=Query{3,x,0};//\u5411\u4e0a \n\t\telse ver[++m].Scan(),ope[++T]=Query{4,m,0},Tim[m]=T;\n\t}\n\tCDQ(1,T);\n\tfor(int i=1;i<=anum;i++) ans[i].Print();\n\treturn 0;\n}\n```\n",
        "postTime": 1671893855,
        "uid": 54591,
        "name": "Seauy",
        "ccfLevel": 9,
        "title": "[JOISC2020] \u6383\u9664 \u7684\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\uff1a\u6240\u6709\u4fee\u6539\u8fdb\u884c\u540e\u518d\u8be2\u95ee\uff0c\u600e\u4e48\u5f04\u3002\n\n\u6211\u4eec\u628a\u6240\u6709 $y:=n-y$ \uff0c\u5219\u4e24\u4e2a\u4fee\u6539\u53d8\u6210\uff1a\u6bcf\u6b21\u7ed9\u5b9a\u4e00\u4e2a $x$ \uff0c\u5bf9\u4e8e$l\\le x\\le r$ \u7684\u7ebf\u6bb5 $[l,r]$ \uff0c\u628a\u5b83\u53d8\u6210 $[l,x]$ \u6216 $[x,r]$ \u3002\u79f0\u6539\u6210 $[x,r]$ \u4e3a\u64cd\u4f5c $1$ \uff0c\u6539\u6210 $[l,x]$ \u4e3a\u64cd\u4f5c $2$ \u3002\n\n\u5982\u679c\u53ea\u6709\u64cd\u4f5c $1$\uff0c\u53d1\u73b0\u8fd9\u4e9b\u64cd\u4f5c\u662f **\u65e0\u5e8f** \u7684\uff0c\u5bf9\u4e8e\u521d\u59cb\u7684 $[l,r]$ \uff0c\u67e5\u8be2 $\\le r$ \u7684 $x$ \u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u73b0\u5728\u6211\u4eec\u6709\u4e24\u79cd\u64cd\u4f5c\uff0c\u4e0d\u540c\u7684\u64cd\u4f5c\u4e4b\u95f4\u4f1a\u4e92\u76f8\u5236\u7ea6\u3002\u8003\u5bdf\u4e00\u4e2a\u5148\u53d1\u751f\u7684\u53d8\u6210\u64cd\u4f5c $2$ (\u6743\u503c\u4e3a $x$)\uff0c\u5982\u4f55\u5f71\u54cd\u540e\u53d1\u751f\u7684\u64cd\u4f5c $1$ (\u6743\u503c\u4e3a $y$)\u3002\n\n\u4f60\u53d1\u73b0\uff0c\u5982\u679c $x<y$ \uff0c\u90a3\u4e48 $y$ \u64cd\u4f5c\u80fd\u5f71\u54cd\u7684\u7ebf\u6bb5 $[l,r]$ \u4e00\u5b9a\u6ee1\u8db3 $x<l\\le y\\le r$ \u3002\n\n\u7531\u6b64\u53ef\u6c42\u51fa\u4e00\u4e2a\u64cd\u4f5c\u7684\u5f71\u54cd\u8303\u56f4\u3002\u5c31\u628a\u4e24\u79cd\u64cd\u4f5c\u62c6\u5f00\u4e86\u3002\u4f46\u73b0\u5728\uff0c\u6211\u4eec\u540c\u79cd\u4e4b\u95f4\u7684\u64cd\u4f5c\u4f3c\u4e4e\u53d8\u5f97**\u6709\u5e8f**\u4e86\uff0c\u4e0d\u597d\u641e\u3002\n\n\u4ee5\u64cd\u4f5c $1$ \u4e3a\u4f8b\uff1a\n\n\u6211\u4eec\u4ee4 $p_i$ \u8868\u793a\u4e00\u4e2a\u64cd\u4f5c $x_i$ \u5f71\u54cd\u8303\u56f4\u662f $p_i\\le l\\le x_i\\le r$ \u3002\n\n\u6309 $x_i$ \u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8fdb\u884c\u64cd\u4f5c\uff0c\u5b83\u5c31\u662f\u6b63\u786e\u7684\u3002\n\n---\n\n\u539f\u56e0\uff1a\u5982\u679c\u6709\u4e24\u4e2a\u64cd\u4f5c $i,j$ \u6ee1\u8db3 $x_i>x_j,t_i<t_j$ \uff0c\u90a3\u6211\u4eec\u62c5\u5fe7\uff0c\u662f\u5426\u6709 $l<p_i$ \uff0c\u56e0\u4e3a\u987a\u5e8f\u4ea4\u6362\u4f7f\u4e4b\u6700\u540e\u80fd\u53d8\u6210 $x_i$ \u3002\n\n\u5206\u7c7b\u8ba8\u8bba\uff1a\u5982\u679c $p_i\\le x_j$ \uff0c\u90a3\u7531 $p$ \u7684\u5b9a\u4e49\uff0c$p_i\\le p_j$ \uff0c\u6240\u4ee5 $l$ \u4e0d\u4f1a\u88ab $i$ \u548c $j$ \u64cd\u4f5c\u3002\n\n\u5982\u679c $p_i>x_j$ \uff0c\u90a3\u5373\u4f7f $l$ \u5148\u88ab $j$ \u64cd\u4f5c\u53d8\u6210 $x_j$\uff0c\u5b83\u4e5f\u65e0\u6cd5\u88ab $i$ \u64cd\u4f5c\u3002\n\n---\n\n\u7531\u6b64\uff0c\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 $f(l)$ \u8868\u793a $l$ \u7ecf\u8fc7\u5f53\u524d\u7684\u6240\u6709\u64cd\u4f5c\u540e\u4f1a\u53d8\u6210\u4ec0\u4e48\u3002\u90a3\u63d2\u5165\u4e00\u4e2a $(p,x)$ \u7b49\u540c\u4e8e\u5c06\u6240\u6709 $p\\le f(l)\\le x$ \u7684 $f(l)$ \u6539\u6210 $x$ \u3002\n\n\u6211\u4eec\u5728\u63d2\u5165\u6240\u6709 $x\\le r$ \u7684\u64cd\u4f5c\u540e\u8be2\u95ee $f(l)$ \u5373\u53ef\u3002\u64cd\u4f5c $2$ \u5c31\u7c7b\u4f3c\u7684\u505a\u5c31\u597d\u4e86\u3002\n\n\u73b0\u5728\u4e2d\u9014\u6709\u67e5\u8be2\u548c\u63d2\u5165\uff0c\u5957\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5206\u6cbb\u5c31\u8f6c\u5316\u6210\u4e0a\u8ff0\u505a\u6cd5\u4e86\u3002\u590d\u6742\u5ea6 $O(n\\log^2 n)$ \u3002\n",
        "postTime": 1679366692,
        "uid": 319444,
        "name": "Coward2008",
        "ccfLevel": 0,
        "title": "JOISC2020 \u6383\u9664"
    }
]