[
    {
        "content": "\u8003\u8651\u7528\u77e9\u9635\u63cf\u8ff0\u533a\u95f4\u64cd\u4f5c\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u5bf9\u4e8e\u70b9 $(x,y)$\uff0c\u8868\u4e3a\u884c\u5411\u91cf $\\begin{bmatrix}x&y\\end{bmatrix}$\uff0c\u5219\uff1a\n- \u5e73\u79fb\uff1a$\\begin{bmatrix}x'&y'\\end{bmatrix}=\\begin{bmatrix}x&y\\end{bmatrix}+\\begin{bmatrix}a&b\\end{bmatrix}$\u3002\n- \u65cb\u8f6c\uff1a\u4e0d\u59a8\u8bbe\u5173\u4e8e $(0,0)$ \u65cb\u8f6c\uff08\u4e0d\u6ee1\u8db3\u5f62\u5f0f\u53ef\u4ee5\u5148\u5e73\u79fb\u8fc7\u53bb\uff09\uff0c$\\begin{bmatrix}x'&y'\\end{bmatrix}=\\begin{bmatrix}x&y\\end{bmatrix}\\begin{bmatrix}\\cos g^{\\circ}&\\sin g^{\\circ}\\\\-\\sin g^{\\circ}&\\cos g^{\\circ}\\end{bmatrix}$\u3002\n- \u4f4d\u4f3c\uff1a\u4e0d\u59a8\u8bbe\u5173\u4e8e $(0,0)$ \u4f4d\u4f3c\uff08\u4e0d\u6ee1\u8db3\u5f62\u5f0f\u53ef\u4ee5\u5148\u5e73\u79fb\u8fc7\u53bb\uff09\uff0c$\\begin{bmatrix}x'&y'\\end{bmatrix}=\\begin{bmatrix}x&y\\end{bmatrix}\\begin{bmatrix}0&\\frac pq\\\\\\frac pq&0\\end{bmatrix}$\u3002\n\n\u533a\u95f4\u67e5\u8be2\u53ea\u9700\u8981\u6c42\u533a\u95f4\u7684\u5411\u91cf\u548c\u5373\u53ef\uff0c\u76f8\u5f53\u4e8e\u533a\u95f4\u52a0\u533a\u95f4\u4e58\u533a\u95f4\u6c42\u548c\uff0c\u8fd9\u5c31\u662f\u7ebf\u6bb5\u6811 2\u3002\u4e8e\u662f\u95ee\u9898\u88ab $\\Theta(q\\log n)$ \u89e3\u51b3\u3002\n\n\u7136\u800c\u5982\u679c\u76f4\u63a5\u5199\u5e38\u6570\u6bd4\u8f83\u5927\u53ef\u80fd\u9700\u8981\u5c55\u5f00\u77e9\u9635\u4e58\u6cd5\u53bb\u6389\u4e00\u4e9b\u6ca1\u7528\u7684\u64cd\u4f5c\u8fd9\u6837\u5c31\u80fd\u8fc7\u4e86\u3002",
        "postTime": 1677482358,
        "uid": 347089,
        "name": "STA_Morlin",
        "ccfLevel": 5,
        "title": "P8105"
    },
    {
        "content": "# P8105 \u9898\u89e3\n\n[2022/12/30]\uff1aupdate\uff0c\u4fee\u590d\u4e86\u51e0\u5904\u7b14\u8bef\u3002\n\n\u5efa\u8bae\u5728[\u535a\u5ba2](https://www.luogu.com.cn/blog/453059/solution-p8105)\u91cc\u98df\u7528\u3002\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P8105)\n\n## 1.\u9898\u76ee\u7b80\u8ff0\n\n\u7ef4\u62a4 $n$ \u4e2a\u5750\u6807 $(x_i,y_i)$\uff0c\u652f\u63014\u79cd\u64cd\u4f5c\uff1a\n\n1. \u79fb\u52a8\uff1a$x$ \u5230 $y$ \u53f7\u5976\u725b\u7684 $x_i\\to x_i+a$\uff0c$y_i\\to y_i+b$\u3002\n1. \u65cb\u8f6c\uff1a$x$ \u5230 $y$ \u53f7\u5976\u725b\u4ee5 $(a,b)$ \u4e3a\u65cb\u8f6c\u4e2d\u5fc3\u987a\u65f6\u9488\u65cb\u8f6c $g\u00b0$\u3002\n1. \u6563\u5f00\uff1a$x$ \u5230 $y$ \u53f7\u5976\u725b\u4ee5 $(a,b)$ \u4e3a\u4e2d\u5fc3\u6563\u5f00\u4e3a $\\dfrac{p}{q}$ \u500d\u3002\u5373\u8bbe\u4e4b\u524d\u5976\u725b\u5750\u6807\u4e3a $A$\uff0c\u6563\u5f00\u540e\u5750\u6807\u4e3a $B$\uff0c$(a,b)$ \u4e3a $G$\uff0c$\\overrightarrow{GB}=\\dfrac{p}{q}\\overrightarrow{GA}$\u3002\n1. \u67e5\u8be2\uff1a\u6c42 $x$ \u5230 $y$ \u53f7\u5976\u725b\u7684\u5e73\u5747\u4f4d\u7f6e $(\\frac{\\sum\\limits^y_{i=x}x_i}{y-x+1},\\frac{\\sum\\limits^y_{i=x}y_i}{y-x+1})$ \u3002\n\n## 2.\u5206\u6790\n\n\u5f88\u660e\u663e\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u4e8e\u662f\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u64cd\u4f5c\u6765\u5206\u6790\uff08\u8bb0 $l,r$ \u5206\u522b\u4e3a\u533a\u95f4\u7684\u4e24\u7aef\uff09\uff1a\n\n### \u64cd\u4f5c4\n\n\u5bf9\u4e8e\u64cd\u4f5c 4 \uff0c\u5c31\u5f88\u76f4\u63a5\u5730\u8bf4\u660e\u6211\u4eec\u8981\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u5373 $sx=\\sum\\limits_{i=l}^rx_i$\uff0c$sy=\\sum\\limits_{i=l}^ry_i$\u3002\n\n### \u64cd\u4f5c1\n\n\u5206\u6790\u5b83\u7684\u5b9e\u8d28\uff1a\u533a\u95f4\u52a0\uff0c\u5373 $(x,y)\\leftarrow(x+a,y+b)$\u3002\n\n### \u64cd\u4f5c2\n\n\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u7528\u5230[\u65cb\u8f6c\u516c\u5f0f](https://www.luogu.com.cn/paste/313pgbdj)\uff1a\n\n\u82e5\u70b9 $(x,y)$ \u7ed5\u70b9 $(a,b)$ \u987a\u65f6\u9488\u65cb\u8f6c $\\alpha$ \u89d2\u5ea6\uff0c\u5219\u65b0\u7684\u70b9\u7684\u5750\u6807\u4e3a\uff1a\n\n$$\\begin{aligned}&((x-a)\\cos\\alpha+(y-b)\\sin\\alpha+a,-(x-a)\\sin\\alpha+(y-b)\\cos\\alpha+b)\\\\\\text{\u5373}&(\\cos\\alpha\\cdot x+\\sin\\alpha\\cdot y+a-a\\cos\\alpha-b\\sin\\alpha,-\\sin\\alpha\\cdot x+\\cos\\alpha\\cdot x+b+a\\sin\\alpha-b\\cos\\alpha)\\end{aligned}$$\n\n\u6240\u4ee5\u5b83\u7684\u672c\u8d28\u4e3a $(x,y)\\leftarrow(\\cos g\\degree\\cdot x+\\sin g\\degree\\cdot y+a-a\\cos g\\degree-b\\sin g\\degree,-\\sin g\\degree\\cdot x+\\cos g\\degree\\cdot y+b+a\\sin g\\degree-b\\cos g\\degree)$\u3002\n\n### \u64cd\u4f5c3\n\n\u9898\u76ee\u7528\u5411\u91cf\u89e3\u91ca\u5f97\u5f88\u6e05\u695a\uff0c\u90a3\u6211\u4eec\u518d\u4ed4\u7ec6\u63a8\u4e00\u63a8\uff1a\n\n$$\\begin{aligned}&\\because G(a,b),A(x,y)\\\\&\\therefore\\overrightarrow{GA}=(x-a,y-b)\\\\&\\therefore\\overrightarrow{GB}=\\frac p q\\overrightarrow{GA}=(\\frac p q(x-a),\\frac p q(y-b))\\\\&\\because G(a,b)\\\\&\\therefore B(\\frac p q(x-a)+a,\\frac p q(y-b)+b)\\end{aligned}$$\n\n\u5c06\u5176\u5c55\u5f00\uff0c\u53ef\u4ee5\u77e5\u9053\u5b83\u7684\u672c\u8d28\u4e3a $(x,y)\\leftarrow(\\dfrac p q\\cdot x+a(1-\\dfrac p q),\\dfrac p q\\cdot y+b(1-\\dfrac p q))$\u3002\n\n### \u603b\u7ed3\n\n1. \u6c42\u503c\u53ea\u9700\u7ef4\u62a4\u533a\u95f4\u548c\u3002\n\n1. \u4fee\u6539\u6211\u4eec\u53ef\u4ee5\u5c06\u64cd\u4f5c 1, 2, 3 \u770b\u6210\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5373\uff1a\u5bf9\u4e8e\u5b9e\u6570 $A,B,C,D$ \uff0c\u5c06 $(x,y)$ \u6539\u4e3a $(Ax+By+C,-Bx+Ay+D)$\n\n\u5177\u4f53\u6765\u8bf4\uff1a\n\n\u64cd\u4f5c 1 \uff1a\n\n$$\\begin{aligned}&A=1\\\\&B=0\\\\&C=a\\\\&D=b\\end{aligned}$$\n\n\u64cd\u4f5c 2 \uff1a\n\n$$\\begin{aligned}&A=\\sin g\\degree\\\\&B=\\cos g\\degree\\\\&C=a-a\\cos g\\degree-b\\sin g\\degree\\\\&D=b+a\\sin g\\degree-b\\cos g\\degree\\end{aligned}$$\n\n\u64cd\u4f5c 3 \uff1a\n\n$$\\begin{aligned}&A=\\frac p q\\\\&B=0\\\\&C=a(1-\\frac p q)\\\\&D=b(1-\\frac p q)\\end{aligned}$$\n\n## 3.\u63a8\u5bfc&\u5b9e\u73b0\n\n\u6839\u636e 2 \u4e2d\u7684\u603b\u7ed3\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u8981\u7ef4\u62a4\u7684\u61d2\u6807\u8bb0\uff0c\u5373\uff1a\n\n```cpp\ndouble sumx[S<<2],sumy[S<<2];\n// \u533a\u95f4\u548c\ndouble taga[S<<2],tagb[S<<2],tagc[S<<2],tagd[S<<2];\n// \u61d2\u6807\u8bb0\n```\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5728\u6253\u61d2\u6807\u8bb0\u65f6\u518d\u8003\u8651\u4ee5\u4e0b\u4e24\u70b9\uff08\u6838\u5fc3\uff09\uff1a\n\n1. \u61d2\u6807\u8bb0\u5bf9\u533a\u95f4\u548c\u7684\u5f71\u54cd\uff1a\n\n\u8bb0 $x_i^\\prime$ \u4e3a\u4fee\u6539\u540e\u7684 $x_i$\uff0c$y_i^\\prime$ \u4e3a\u4fee\u6539\u540e\u7684 $y_i$\uff0c\u90a3\u4e48\uff1a\n\n$$\\begin{aligned}\\sum_{i=l}^rx_i^\\prime&=\\sum_{i=l}^r(Ax_i+By_i+C)\\\\&=\\sum_{i=l}^r(Ax_i)+\\sum_{i=l}^r(By_i)+\\sum_{i=l}^rC\\\\&=A\\sum_{i=l}^rx_i+B\\sum_{i=l}^ry_i+C(r-l+1)\\\\&=A\\cdot sx+B\\cdot sy+C(r-l+1)\\end{aligned}$$\n\n$$\\begin{aligned}\\sum_{i=l}^ry_i^\\prime&=\\sum_{i=l}^r(-Bx_i+Ay_i+D)\\\\&=\\sum_{i=l}^r(-Bx_i)+\\sum_{i=l}^r(Ay_i)+\\sum_{i=l}^rD\\\\&=-B\\sum_{i=l}^rx_i+A\\sum_{i=l}^ry_i+D(r-l+1)\\\\&=-B\\cdot sx+A\\cdot sy+D(r-l+1)\\end{aligned}$$\n\n\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```cpp\ninline void pushone(int o,int l,int r,double a,double b,double c,double d)//\u6253\u61d2\u6807\u8bb0\u64cd\u4f5c\n{\n    //\u5176\u4e2da,b,c,d\u5206\u522b\u5bf9\u5e944\u4e2a\u61d2\u6807\u8bb0\n    int len=r-l+1;\n    double sx=sumx[o],sy=sumy[o];\n    sumx[o]=a*sx+b*sy+len*c;\n    sumy[o]=a*sy-b*sx+len*d;\n}\n```\n\n2. \u61d2\u6807\u8bb0\u5bf9\u61d2\u6807\u8bb0\u7684\u5f71\u54cd\uff08\u61d2\u6807\u8bb0\u53e0\u52a0\uff09\uff1a\n\n\u8003\u8651\u5bf9\u4e00\u6bb5\u533a\u95f4\u6253\u61d2\u6807\u8bb0\u3002\u8bb0\u533a\u95f4\u7684\u539f\u61d2\u6807\u8bb0\u5206\u522b\u4e3a $A_1,B_1,C_1,D_1$\uff0c\u65b0\u6253\u7684\u61d2\u6807\u8bb0\u5206\u522b\u4e3a $A_2,B_2,C_2,D_2$\uff0c\u53e0\u52a0\u540e\u7684\u61d2\u6807\u8bb0\u5206\u522b\u4e3a $A,B,C,D$\uff0c$x^\\prime$ \u4e3a\u4fee\u6539\u4e00\u6b21\u540e\u7684 $x$\u3002$x^{\\prime\\prime}$ \u4e3a\u4fee\u6539\u4e24\u6b21\u540e\u7684 $x$\uff0c\u5bf9\u4e8e $y$ \u540c\u7406\uff0c\u90a3\u4e48\uff1a\n\n$$\\begin{aligned}&x^\\prime=A_1x+B_1y+C_1\\\\&y^\\prime=-B_1x+A_1y+D_1\\end{aligned}$$\n\n$$\\begin{aligned}&x^{\\prime\\prime}=A_2x^\\prime+B_2y^\\prime+C_2=Ax+By+C\\\\&y^{\\prime\\prime}=-B_2x^\\prime+A_2y^\\prime+D_2=-Bx+Ay+D\\end{aligned}$$\n\n\u4ee3\u5165\uff0c\u5c55\u5f00\uff1a\n\n$$\\begin{aligned}x^{\\prime\\prime}&=A_2(A_1x+B_1y+C_1)+B_2(-B_1x+A_1y+D_1)+C_2\\\\&=(A_1A_2-B_1B_2)x+(A_1B_2+A_2B_1)y+(A_2C_1+B_2D_1+C_2)\\\\y^{\\prime\\prime}&=-B_2(A_1x+B_1y+C_1)+A_2(-B_1x+A_1y+D_1)+D_2\\\\&=-(A_1B_2+A_2B_1)x+(A_1A_2-B_1B_2)y+(A_2D_1-B_2C_1+D_2)\\end{aligned}$$\n\n\u4e0e\u61d2\u6807\u8bb0\u7684\u683c\u5f0f\u5bf9\u6bd4\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff1a\n\n$$\\begin{aligned}&A=A_1A_2-B_1B_2\\\\&B=A_1B_2+A_2B_1\\\\&C=A_2C_1+B_2D_1+C_2\\\\&D=A_2D_1-B_2C_1+D_2\\end{aligned}$$\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u5df2\u5305\u542b\u61d2\u6807\u8bb0\u5bf9\u533a\u95f4\u548c\u7684\u5f71\u54cd\uff09\uff1a\n\n```cpp\ninline void pushone(int o,int l,int r,double a,double b,double c,double d)\n{\n    //\u5176\u4e2da,b,c,d\u5206\u522b\u5bf9\u5e944\u4e2a\u61d2\u6807\u8bb0\n    int len=r-l+1;\n    double sx=sumx[o],sy=sumy[o];\n    double A=taga[o],B=tagb[o],C=tagc[o],D=tagd[o];\n    //\u4e0b\u9762\u76f4\u63a5\u8fd0\u7528\u7ed3\u8bba\n    sumx[o]=a*sx+b*sy+len*c;\n    sumy[o]=a*sy-b*sx+len*d;\n    taga[o]=a*A-b*B;\n    tagb[o]=a*B+b*A;\n    tagc[o]=a*C+b*D+c;\n    tagd[o]=a*D-b*C+d;\n}\n```\n\n\u4ee5\u53ca\u6700\u7ec8\u7684\u4fee\u6539\u4ee3\u7801\uff1a\n\n```cpp\ninline void pushdown(int o,int l,int r)\n{//\u4e0b\u653e\u61d2\u6807\u8bb0\n    int mid=(l+r)>>1;\n    pushone(ls,l,mid,taga[o],tagb[o],tagc[o],tagd[o]);\n    pushone(rs,mid+1,r,taga[o],tagb[o],tagc[o],tagd[o]);\n    taga[o]=1,tagb[o]=tagc[o]=tagd[o]=0;\n}\ninline void move(int o,int l,int r,int ql,int qr,double x,double y)\n{//\u79fb\u52a8\n    if(ql<=l&&r<=qr) {pushone(o,l,r,1,0,x,y);return;}\n    pushdown(o,l,r);\n    int mid=(l+r)>>1;\n    if(ql<=mid) move(ls,l,mid,ql,qr,x,y);\n    if(qr>mid) move(rs,mid+1,r,ql,qr,x,y);\n    pushup(o);\n}\ninline void rotate(int o,int l,int r,int ql,int qr,double x,double y,double g)\n{//////////\u65cb\u8f6c\n    if(ql<=l&&r<=qr)\n    {\n        double sing=sin(g),cosg=cos(g);\n        pushone(o,l,r,cosg,sing,x-x*cosg-y*sing,y+x*sing-y*cosg);\n        return;\n    }\n    pushdown(o,l,r);\n    int mid=(l+r)>>1;\n    if(ql<=mid) rotate(ls,l,mid,ql,qr,x,y,g);\n    if(qr>mid) rotate(rs,mid+1,r,ql,qr,x,y,g);\n    pushup(o);\n}\ninline void disperse(int o,int l,int r,int ql,int qr,double x,double y,double k)\n{//\u6563\u5f00\n    if(ql<=l&&r<=qr) {pushone(o,l,r,k,0,x-k*x,y-k*y);return;}\n    pushdown(o,l,r);\n    int mid=(l+r)>>1;\n    if(ql<=mid) disperse(ls,l,mid,ql,qr,x,y,k);\n    if(qr>mid) disperse(rs,mid+1,r,ql,qr,x,y,k);\n    pushup(o);\n}\n```\n\n## 4.\u7ec6\u8282&\u4ee3\u7801\n\n\u6ce8\u610f\u65cb\u8f6c\u64cd\u4f5c\u7ed9\u51fa\u7684\u662f\u89d2\u5ea6\uff0c\u800c `cmath` \u5e93\u91cc\u7684\u4e09\u89d2\u51fd\u6570\u662f\u5f27\u5ea6\u5236\uff0c\u56e0\u6b64\u8981\u628a\u89d2\u5ea6\u8f6c\u5316\u4e3a\u5f27\u5ea6\uff08\u5177\u4f53\u770b\u4ee3\u7801\uff09\u3002\n\n\u4ee5\u53ca\u521d\u59cb\u61d2\u6807\u8bb0\u7684\u8bbe\u7f6e\u3002\u7531\u4e8e\u4e00\u5f00\u59cb $x_i^\\prime=x_i$\uff0c$y_i^\\prime=y_i$\uff0c\u4e8e\u662f $A=1,B=C=D=0$\u3002\n\n\u56e0\u4e3a\u7bc7\u5e45\u6709\u9650\uff08\u51b5\u4e14\u5df2\u7ecf\u628a\u4e3b\u8981\u7684\u51fd\u6570\u7ed9\u51fa\u4e86\uff09\uff0c\u6240\u4ee5\u5b8c\u6574\u4ee3\u7801\u653e\u5230[\u4e91\u526a\u5207\u677f](https://www.luogu.com.cn/paste/9255iz2f)\u3002",
        "postTime": 1664016946,
        "uid": 453059,
        "name": "kbtyyds",
        "ccfLevel": 5,
        "title": "P8105 \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\u8fd9\u4e2a\u9898\u662f\u5bf9\u4e8esubtask\u8fdb\u884c\u5904\u7406\uff08\u6709\u7684\u4e0d\u80fd\u540c\u65f6\u5f97\u5206\uff0c\u4f8b\u5982 subtask $2$ \u548c subtask $3$\uff09\u3002\n### subtask 1\n\u66b4\u529b\u5c31\u597d\u4e86\u3002\n### subtask 2\n\u7ef4\u62a4\u533a\u95f4\u65cb\u8f6c\u89d2\u5ea6\uff0c\u533a\u95f4\u548c\uff0c\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n### subtask 3\n\u7ef4\u62a4\u533a\u95f4\u653e\u5927\u500d\u6570\uff0c\u533a\u95f4\u548c\uff0c\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n### subtask 4\n\u7ef4\u62a4\u533a\u95f4\u5e73\u79fb\uff0c\u4e24\u4e2a\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n### subtask 5\n\u66b4\u529b\u3002\n### subtask 6\n\u548c\u6b63\u89e3\u51e0\u4e4e\u4e00\u6837\u4f46\u6709\u7f3a\u9677\u7684\u505a\u6cd5\u3002\n### subtask 7\n\u7559\u7ed9\u5e38\u6570\u8f83\u5927\u7684\u540c\u6b63\u89e3\u76f8\u540c\u7684\u505a\u6cd5\u3002\n### subtask 8\n\u6ce8\u610f\u5230\u533a\u95f4\u65cb\u8f6c\u4f4d\u4f3c\u90fd\u53ef\u4ee5\u62ff\u77e9\u9635\u7ef4\u62a4\uff0c\u5c31\u76f8\u5f53\u4e8e\u77e9\u9635\u52a0\u548c\u77e9\u9635\u4e58\uff0c\u6216\u8005\u7528\u865a\u6570\u7ef4\u62a4\u3002\n\n\u5bf9\u4e8e\u5e73\u79fb\u64cd\u4f5c\uff0c\u5c31\u662f\u52a0\u4e0a\u4e00\u4e2a\u865a\u6570\u3002\n\n\u5bf9\u4e8e\u65cb\u8f6c\u548c\u4f4d\u4f3c\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5148\u628a\u8fd9\u4e2a\u4e2d\u5fc3\u79fb\u5230\u539f\u70b9\uff0c\u518d\u4e58\u4e0a\u4e00\u4e2a\u865a\u6570\u5373\u53ef\uff0c\u7ef4\u62a4\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u4e58\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $\\Theta(n\\log n)$\u3002\n## code\n\u8fd9\u4e00\u9898\u6bd4\u8f83\u826f\u5fc3\uff0c\u4e0d\u7528\u5feb\u8bfb\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 300010\nint n,m;\nint x,y,a,b,p,q,opt;\nconst double eps=1e-6;\nstruct Cp{\n\tdouble a,b;\n\tCp(double aa=0,double bb=0):a(aa),b(bb){}\n\tCp operator+(Cp x)const{return Cp(a+x.a,b+x.b);}\n\tCp operator-(Cp x)const{return Cp(a-x.a,b-x.b);}\n\tCp operator*(Cp x)const{return Cp(a*x.a-b*x.b,a*x.b+x.a*b);}\n\tCp operator*(int x)const{return Cp(a*x,b*x);}\n\tbool operator==(double x)const{return fabs(b)<eps&&fabs(a-x)<eps;}\n\tbool operator==(Cp x)const{return fabs(a-x.a)<eps&&fabs(b-x.b)<eps;}\n\tvoid print(){\n\t\tprintf(\"%.6lf %.6lf\\n\",a,b);\n\t}\n};\nCp e(int a){\n\tdouble r=a*3.14159265358979323846/180;\n\treturn Cp(cos(r),-sin(r));\n}\n\tstruct sto_DX_orz{\n\t\tint l,r;\n\t\tCp sum,mul,add;\n\t}tree[maxn<<2];\n\tvoid pushup(int x){\n\t\ttree[x].sum=tree[x<<1].sum+tree[x<<1|1].sum;\n\t}\n\tvoid pushdown(int x){\n\t\tif(!(tree[x].mul==1.0)){\n\t\t\ttree[x<<1].add=tree[x<<1].add*tree[x].mul;\n\t\t\ttree[x<<1|1].add=tree[x<<1|1].add*tree[x].mul;\n\t\t\ttree[x<<1].sum=tree[x<<1].sum*tree[x].mul;\n\t\t\ttree[x<<1|1].sum=tree[x<<1|1].sum*tree[x].mul;\n\t\t\ttree[x<<1].mul=tree[x<<1].mul*tree[x].mul;\n\t\t\ttree[x<<1|1].mul=tree[x<<1|1].mul*tree[x].mul;\n\t\t\ttree[x].mul=Cp(1,0);\n\t\t}\n\t\tif(!(tree[x].add==0)){\n\t\t\ttree[x<<1].add=tree[x<<1].add+tree[x].add;\n\t\t\ttree[x<<1|1].add=tree[x<<1|1].add+tree[x].add;\n\t\t\ttree[x<<1].sum=tree[x<<1].sum+tree[x].add*(tree[x<<1].r-tree[x<<1].l+1);\n\t\t\ttree[x<<1|1].sum=tree[x<<1|1].sum+tree[x].add*(tree[x<<1|1].r-tree[x<<1|1].l+1);\n\t\t\ttree[x].add=Cp(0,0);\n\t\t}\n\t}\n\tvoid build(int x,int l,int r){\n\t\ttree[x].l=l,tree[x].r=r;\n\t\ttree[x].mul=Cp(1,0);\n\t\tif(l==r){\n\t\t\tint a,b;\n\t\t\tcin>>a>>b;\n\t\t\ttree[x].sum=Cp((double)a,(double)b);\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(x<<1,l,mid),build(x<<1|1,mid+1,r);\n\t\tpushup(x);\n\t}\n\tvoid change1(int x,int l,int r,Cp k){\n\t\tif(tree[x].l>=l&&tree[x].r<=r){\n\t\t\ttree[x].add=tree[x].add+k;\n\t\t\ttree[x].sum=tree[x].sum+k*(tree[x].r-tree[x].l+1);\n\t\t\treturn;\n\t\t}\n\t\tpushdown(x);\n\t\tint mid=(tree[x].l+tree[x].r)>>1;\n\t\tif(l<=mid)change1(x<<1,l,r,k);\n\t\tif(r>mid)change1(x<<1|1,l,r,k);\n\t\tpushup(x);\n\t}\n\tvoid change2(int x,int l,int r,Cp k){\n\t\tif(tree[x].l>=l&&tree[x].r<=r){\n\t\t\ttree[x].add=tree[x].add*k;\n\t\t\ttree[x].mul=tree[x].mul*k;\n\t\t\ttree[x].sum=tree[x].sum*k;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(x);\n\t\tint mid=(tree[x].l+tree[x].r)>>1;\n\t\tif(l<=mid)change2(x<<1,l,r,k);\n\t\tif(r>mid)change2(x<<1|1,l,r,k);\n\t\tpushup(x);\n\t}\n\tCp ask(int x,int l,int r){\n\t\tif(tree[x].l>=l&&tree[x].r<=r)return tree[x].sum;\n\t\tpushdown(x);\n\t\tint mid=(tree[x].l+tree[x].r)>>1;\n\t\tCp val;\n\t\tif(l<=mid)val=(val+ask(x<<1,l,r));\n\t\tif(r>mid)val=(val+ask(x<<1|1,l,r));\n\t\treturn val;\n\t}\nsigned main(){\n  srand(time(NULL));\n\tscanf(\"%d%d\",&n,&m);\n\tbuild(1,1,n);\n\twhile(m--){\n\t\tscanf(\"%d%d%d\",&opt,&x,&y);\n\t\tif(opt==4){\n\t\t\tCp DX=ask(1,x,y);\n\t\t\tDX.a/=(y-x+1),DX.b/=(y-x+1);\n\t\t\tDX.print();\n\t\t}else{\n\t\t\tscanf(\"%d%d\",&a,&b);\n\t\t\tCp A((double)a,(double)b);\n\t\t\tif(opt==1)change1(1,x,y,A);\n\t\t\telse{\n\t\t\t\tscanf(\"%d\",&p);\n\t\t\t\tCp E;\n\t\t\t\tif(opt==2)E=e(p);\n\t\t\t\telse scanf(\"%d\",&q),E=Cp((double)p/q,0);\n\t\t\t\tchange2(1,x,y,E);\n\t\t\t\tchange1(1,x,y,A*(Cp(1,0)-E));\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1643973224,
        "uid": 357311,
        "name": "little_cindy",
        "ccfLevel": 6,
        "title": "P8105 [LCOI RI]Cow Dance \u9898\u89e3"
    },
    {
        "content": "### \u5410\u69fd\u4e00\u4e0b\n\n\u8fd9\u5c31\u662f\u84dd\u9898\u7684\u96be\u5ea6\u5417\uff1f\u6211\u771f\u7684\u722c\u4e86\u3002\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u5e73\u9762\u4e0a $n$ \u4e2a\u70b9\uff08$n \\leq 3 \\times 10 ^ 5$\uff09\uff0c\u7b2c $i$ \u4e2a\u70b9\u4e3a $p_i$\u3002\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\u3002\n\n1. \u79fb\u52a8\uff1a$\\forall i \\in [l, r]$\uff0c $x_i\\to x_i+a$\uff0c$y_i\\to y_i+b$\u3002\n2. \u65cb\u8f6c\uff1a$\\forall i \\in [l, r]$\uff0c $p_i$ \u4ee5 $(a,b)$ \u4e3a\u65cb\u8f6c\u4e2d\u5fc3\u987a\u65f6\u9488\u65cb\u8f6c $g\\degree$\u3002\n3. \u6563\u5f00: $\\forall i \\in [l, r]$\uff0c$p_i$ \u4ee5 $(a,b)$ \u4e3a\u4e2d\u5fc3\u6563\u5f00\u4e3a $\\dfrac{p}{q}$ \u500d\u3002\n4. \u67e5\u8be2\uff1a\u8f93\u51fa $(\\frac{\\sum\\limits^r_{i=l}x_i}{r-l+1},\\frac{\\sum\\limits^r_{i=l}y_i}{r-l+1})$\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u9010\u4e2a\u64cd\u4f5c\u5206\u6790\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c\u4e00\uff0c\u9700\u8981\u5b9e\u73b0\u533a\u95f4\u52a0\u7684\u6570\u636e\u7ed3\u6784\u3002\u53ef\u4ee5\u8003\u8651\u5efa\u4e24\u68f5\u7ebf\u6bb5\u6811\u3002\u5bf9 $x, y$ \u5206\u522b\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c\u4e8c\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u6bcf\u4e2a\u70b9\u79fb\u52a8\u5230\u539f\u70b9\uff0c\u65cb\u8f6c\u540e\u79fb\u52a8\u56de\u53bb\u3002\u79fb\u52a8\u64cd\u4f5c\u53ef\u4ee5\u5957\u7528\u64cd\u4f5c $1$\uff0c\u5173\u952e\u662f\u65cb\u8f6c\u64cd\u4f5c\u3002\n\n~~\u767e\u5ea6\u4e00\u4e0b~~ \u65cb\u8f6c\u516c\u5f0f\uff1a\u5bf9\u4e8e\u70b9 $(x, y)$ \uff0c\u7ed5\u539f\u70b9\u65cb\u8f6c $\\theta \\degree$ \u4e4b\u540e\u7684\u5750\u6807\u4e3a\uff1a\n\n$$(x \\cos \\theta + y \\sin \\theta , - x\\sin\\theta + y \\cos \\theta)$$\n\n\u6211\u770b\u5230\u8fd9\u4e2a\u5f0f\u5b50\u662f\u7b2c\u4e00\u773c\u5c31\u60f3\u5230\u77e9\u9635\u7684\u3002\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u5411\u91cf $\\begin{bmatrix}x & y\\end{bmatrix}$\uff0c\u6784\u9020\u8f6c\u79fb\u77e9\u9635\u3002\u624b\u73a9\u4e00\u4e0b\u53ef\u4ee5\u5f97\u5230\u4e0b\u9762\u5f0f\u5b50\uff1a\n\n$$\\begin{bmatrix}x & y\\end{bmatrix} \\times \\begin{bmatrix}\\cos \\theta & \\sin \\theta \\\\ - \\sin \\theta & \\cos \\theta\\end{bmatrix} = \\begin{bmatrix}x_1 & y_1\\end{bmatrix}$$\n\n\u5bf9\u4e8e\u64cd\u4f5c\u4e09\uff0c\u4e5f\u53ef\u4ee5\u5c06\u70b9\u79fb\u52a8\u5230\u539f\u70b9\u5728\u8fdb\u884c\u64cd\u4f5c\u3002\u653e\u7f29\u5373\u5bf9\u5411\u91cf $\\overrightarrow{OP}$ \u6570\u4e58 $\\dfrac{p}{q}$\u3002\u5bf9\u4e8e\u77e9\u9635\u8fd0\u7b97\u5373\u4e3a\uff08\u5176\u4e2d $k = \\dfrac{p}{q}$\uff09\uff1a\n\n$$\\begin{bmatrix}x & y\\end{bmatrix} \\times \\begin{bmatrix}k & 0 \\\\ 0 & k\\end{bmatrix} = \\begin{bmatrix}x_1 & y_1\\end{bmatrix}$$\n\n\u8fd9\u6837\u64cd\u4f5c\u4e00\u4e5f\u53ef\u4ee5\u5728\u77e9\u9635\u4e2d\u5b8c\u6210\u4e86\u3002\u77e9\u9635\u52a0\u6cd5\u7684\u5f0f\u5b50\u5c31\u4e0d\u653e\u4e86\u3002\n\n\u597d\uff0c$O(n \\log n)$ \u7684\u5927\u5e38\u6570\u77e9\u9635\u7ebf\u6bb5\u6811\u51fa\u6765\u4e86\uff08[\u4ee3\u7801\u5728\u8fd9\u91cc](https://www.luogu.com.cn/paste/iiojdhn4)\uff09\n\n\u7136\u800c\uff0c\u4f46\u662f\uff0c\u5927\u5e38\u6570\u7684\u77e9\u9635\u7ebf\u6bb5\u6811\u53ea\u80fd\u591f\u5f97\u5230 $70$ \u5206\uff0c\u65e0\u6cd5\u901a\u8fc7\u6700\u540e\u4e00\u4e2a $\\text{substack}$\u3002\u8003\u8651\u5bf9\u4e0a\u8ff0\u8fc7\u7a0b\u8fdb\u884c\u4f18\u5316\u3002\n\n\u6709\u4e00\u4e2a\u4e1c\u897f\u53eb\u505a\u590d\u5e73\u9762\uff0c\u6211\u4eec\u628a\u70b9 $(x, y)$ \u62bd\u8c61\u6210\u590d\u6570 $xi + y$\uff0c\u53ef\u4ee5\u5c06\u4ed6\u4e58\u4ee5\u65cb\u8f6c\u5b50 $R_\\theta = i\\sin \\theta + \\cos \\theta$ \u8fdb\u884c\u65cb\u8f6c\u3002\u5f53\u7136\uff0c\u79fb\u52a8\u548c\u653e\u7f29\u5206\u522b\u641e\u590d\u6570\u52a0\u51cf\u548c\u590d\u6570\u4e58\u5b9e\u6570\u5c31\u597d\u4e86\u3002[\u53c2\u8003\u6587\u732e](https://www.cnblogs.com/noluye/p/11964513.html)\n\n~~\u6211\u662f\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u628a `double` \u5199\u6210 `int` \u8c03\u4e86\u4e24\u5929\u7684\u3002~~\n\n### \u4ee3\u7801\u793a\u4f8b\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#define rep(i, a, b) for (int i = (a); i <= (b); i ++ )\n#define rop(i, a, b) for (int i = (a); i < (b); i ++ )\n#define dep(i, a, b) for (int i = (a); i >= (b); i -- )\n#define dop(i, a, b) for (int i = (a); i > (b); i -- )\n\nusing namespace std;\n\nusing LL = long long;\nusing PII = pair<int, int>;\nusing PLL = pair<LL, LL>;\n\nconst int N = 300010;\nconst double pi = acos(-1);\ndouble Sin[360], Cos[360];\nint n, m;\nPII p[N];\n\n// \u5feb\u8bfb\u6d88\u5931\u4e86\n\nstruct Complex { // \u624b\u5199\u865a\u6570\u5e93\uff0cx \u4e3a\u865a\u90e8\uff0cy \u4e3a\u5b9e\u90e8\n\tdouble x, y;\n\tComplex(){}\n\tComplex(double _x, double _y) { x = _x, y = _y; }\n\tComplex operator + (const Complex& tmp)const {\n\t\treturn Complex(x + tmp.x, y + tmp.y);\n\t}\n\tComplex operator * (const Complex& tmp)const {\n\t\treturn Complex(x * tmp.y + y * tmp.x, y * tmp.y - x * tmp.x);\n\t}\n\tComplex operator - (const Complex& tmp)const {\n\t\treturn Complex(x - tmp.x, y - tmp.y);\n\t}\n\tComplex operator * (const double &tmp)const {\n\t\treturn Complex(x * tmp, y * tmp);\n\t}\n\tComplex &operator += (Complex& tmp) {\n\t\tthis -> x += tmp.x; this -> y += tmp.y;\n\t\treturn *this;\n\t}\n\tComplex &operator *= (Complex& tmp) {\n\t\t*this = (*this * tmp);\n\t\treturn *this;\n\t}\n\tvoid clear() { x = y = 0; }\n\tvoid makeI() { x = 0, y = 1; }\n\tbool empty() { return (x == 0) and (y == 0); }\n\tbool isI() { return (x == 0) && (y == 1); }\n};\n\nstruct Tree {\n\tint l, r;\n\tComplex add, mul;\n\tComplex sum;\n\tint len() { return r - l + 1; }\n}tr[N << 2];\n#define ls u << 1\n#define rs u << 1 | 1\n\nvoid pushup(int u) {\n\ttr[u].sum = tr[ls].sum + tr[rs].sum;\n}\nvoid push_add(int u, Complex add) {\n\tif (tr[u].l == tr[u].r) {\n\t\ttr[u].sum = tr[u].sum + (add * tr[u].len());\n\t\treturn;\n\t}\n\ttr[u].add = tr[u].add + add;\n\ttr[u].sum = tr[u].sum + (add * tr[u].len());\n}\nvoid push_mul(int u, Complex mul) {\n\tif (tr[u].l == tr[u].r) {\n\t\ttr[u].sum = tr[u].sum * mul;\n\t\treturn;\n\t}\n\ttr[u].mul *= mul; tr[u].sum *= mul; tr[u].add *= mul;\n}\nvoid pushdown(int u) {\n\tif (tr[u].l == tr[u].r) return;\n\tif (!tr[u].mul.isI()) {\n\t\tpush_mul(ls, tr[u].mul);\n\t\tpush_mul(rs, tr[u].mul);\n\t\ttr[u].mul.makeI();\n\t}\n\tif (!tr[u].add.empty()) {\n\t\tpush_add(ls, tr[u].add);\n\t\tpush_add(rs, tr[u].add);\n\t\ttr[u].add.clear();\n\t}\n}\nvoid build(int u, int l, int r) {\n\ttr[u] = {l, r}, tr[u].mul.makeI();\n\tif (l == r) {\n\t\ttr[u].sum = Complex(p[r].first, p[r].second);\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tbuild(ls, l, mid), build(rs, mid + 1, r);\n\tpushup(u);\n}\nvoid Multiply(int u, int l, int r, Complex k) {\n\tif (tr[u].l >= l && tr[u].r <= r) {\n\t\tpush_mul(u, k); return;\n\t}\n\tpushdown(u);\n\tint mid = tr[u].l + tr[u].r >> 1;\n\tif (l <= mid) Multiply(ls, l, r, k);\n\tif (r > mid) Multiply(rs, l, r, k);\n\tpushup(u);\n}\nvoid Add(int u, int l, int r, Complex k) {\n\tif (tr[u].l >= l && tr[u].r <= r) {\n\t\tpush_add(u, k); return;\n\t}\n\tpushdown(u);\n\tint mid = tr[u].l + tr[u].r >> 1;\n\tif (l <= mid) Add(ls, l, r, k);\n\tif (r > mid) Add(rs, l, r, k);\n\tpushup(u);\n}\nComplex query(int u, int l, int r) {\n    if (tr[u].l >= l && tr[u].r <= r) return tr[u].sum;\n    pushdown(u);\n    int mid = tr[u].l + tr[u].r >> 1;\n    if(r <= mid) return query(ls, l, r);\n    if(l > mid) return query(rs, l, r);\n    return query(ls, l, r) + query(rs, l, r);\n}\nvoid modify1(int l, int r, int a, int b) {\n\tComplex A(a, b); Add(1, l, r, A);\n}\nvoid modify2(int l, int r, int a, int b, int alpha) {\n\tComplex t(Sin[alpha], Cos[alpha]); Complex M(-a, -b);\n\tMultiply(1, l, r, t); Add(1, l, r, M * t - M);\n}\nvoid modify3(int l, int r, int a, int b, double k) {\n\tComplex t(0, k); Complex M(-a, -b);\n\tMultiply(1, l, r, t), Add(1, l, r, M * t - M);\n}\n\nint main() {\n\tread(n, m);\n\tfor (int i = 1; i <= n; i ++ )\n\t\tread(p[i].first, p[i].second);\n\tbuild(1, 1, n);\n\tfor (int i = 0; i < 360; i ++ )\n\t\tSin[i] = sin((double)i * pi / 180.00), Cos[i] = cos((double)i * pi / 180.00);\n\t\n\twhile (m -- ) {\n\t\tint op, l, r, a, b;\n\t\tint g, p, q;\n\t\tread(op, l, r);\n\t\tif (op == 1) read(a, b), modify1(l, r, a, b);\n\t\tif (op == 2) read(a, b, g), modify2(l, r, a, b, g);\n\t\tif (op == 3) read(a, b, p, q), modify3(l, r, a, b, (double)p / q);\n\t\tif (op == 4) { Complex ans = query(1, l, r); printf(\"%.4lf %.4lf\\n\", (double)ans.x / (r - l + 1), (double)ans.y / (r - l + 1)); }\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1672637722,
        "uid": 519384,
        "name": "Link_Cut_Y",
        "ccfLevel": 0,
        "title": "P8105 \u300cLCOI2022\u300d Cow Dance"
    },
    {
        "content": "# P8105 \u300cLCOI2022\u300d Cow Dance\u9898\u89e3\n\n## \u524d\u8a00\uff1a\n\n\u4e00\u9053\u5f88\u597d\u7684\u7ebf\u6bb5\u6811\u597d\u9898\uff0c\u8ba9\u6211\u4e00\u6b65\u6b65\u538b\u7f29\u4e86\u64cd\u4f5c\u6570\u91cf\u3002\n\n## \u9898\u610f\uff1a\n\n\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u5185\u7ed9\u5b9a\u4e86 n \u4e2a\u70b9\uff0cm \u6b21\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u64cd\u4f5c 1\uff0c2\uff0c3\uff0c\u5206\u522b\u4e3a\u5e73\u79fb\uff0c\u65cb\u8f6c\uff0c\u4f4d\u4f3c\uff0c\u5bf9\u4e8e\u64cd\u4f5c 4\uff0c\u6c42\u51fa x\uff0cy \u8f74\u7684\u533a\u95f4\u548c\uff0c\u5e76\u5206\u522b\u9664\u4ee5\u533a\u95f4\u957f\u5ea6\u540e\u8f93\u51fa\u3002\n\n## \u524d\u7f6e\u829d\u58eb\uff08\u5927\u4f6c\u53ef\u8df3\u8fc7\uff09\uff1a\n\n\u9996\u5148\u4f60\u5f97\u628a\u64cd\u4f5c 2\uff0c3 \u6362\u6210\u6570\u5b66\u516c\u5f0f\u8868\u8fbe\u3002\n\n\u6c42\u4e00\u4e2a\u70b9 $(x, y)$ \u7ed5\u70b9 $(a, b)$ \u65cb\u8f6c $\\alpha$ \u540e\u7684\u70b9 $(m, n)$\u3002\n\n\u516c\u5f0f\uff1a\n\n$m = (x - a) * \\cos \\alpha + (y - b) * \\sin \\alpha + a$\u3002\n\n$n = (y - b) * \\cos \\alpha + (x - a) * -\\sin \\alpha + b$\u3002\n\n\u6c42\u4e00\u4e2a\u70b9 $(x, y)$ \u4ee5 $(a, b)$ \u4e3a\u4e2d\u5fc3\u4f4d\u4f3c k \u500d\u540e\u7684\u5750\u6807 $(m, n)$\u3002\n\n\u516c\u5f0f\uff1a\n\n$m = (x - a) * k + a$\u3002\n\n$n = (y - b) * k + b$\u3002\n\n\u4ee5\u4e0a\u77e5\u8bc6\u5ea6\u5a18\u90fd\u53ef\u4ee5\u6709\uff0c\u63a8\u5bfc\u8fc7\u7a0b\u4e0d\u5728\u8d58\u8ff0\u3002\n\n## \u601d\u8def\uff1a\n\n\u770b\u5b8c\u4e09\u79cd\u64cd\u4f5c\u5c31\u5f88\u660e\u663e\u7684\u53cd\u5e94\u8fc7\u6765\uff0c\u53ea\u6709\u533a\u95f4\u52a0\u533a\u95f4\u4e58\uff0c\u7528\u7ebf\u6bb5\u6811\u77f3\u9524\u4e86\u3002\n\n\u5f88\u660e\u663e\uff0c\u7b2c\u4e00\u601d\u8def\u5c31\u662f\u505a\u4e24\u4e2a\u7ebf\u6bb5\u6811\uff0c\u4e00\u4e2a\u8868\u793a x \u8f74\uff0c\u518d\u6765\u4e00\u4e2a\u8868\u793a y \u8f74\uff0c\u8fd9\u6837\u53ef\u4ee5\u89e3\u51b3\u64cd\u4f5c 1 \u548c\u64cd\u4f5c 3\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ea\u662f\u5355\u7eaf\u7684\u5bf9\u4e00\u4e2a\u7ebf\u6bb5\u6811\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u4f46\u662f\u4f60\u770b\u770b\u64cd\u4f5c\u4e8c\u2026\u2026\uff0c\u662f\u4e0d\u662f\u611f\u5230\u6781\u5176\u4e0d\u53cb\u5584\u4e86\u3002\n\n\u6539\u53d8\u4e00\u4e2a\u503c\uff0c\u8981\u4e24\u9897\u7ebf\u6bb5\u6811\u4e00\u8d77\u5f71\u54cd\uff1f\n\n\u4f46\u662f\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728\u5efa\u4e24\u9897\u7ebf\u6bb5\u6811\uff0c\u5728\u9762\u5bf9\u64cd\u4f5c 2 \u7684\u65f6\u5019\uff0c\u4fee\u6539\u524d\u5148\u5c06\u539f\u6765\u7684\u533a\u95f4 $(x, y)$ \u8d4b\u503c\u8fdb\u53bb\uff0c\u5728\u5bf9\u5176\u5206\u522b\u4fee\u6539\uff0c\u6700\u540e\u5c06\u4e24\u4e2a\u76f8\u52a0\u5373\u53ef\u3002\n\n\u4e0d\u7ba1\u8fd9\u6837\u53d1\u73b0\u4f60\u4f1a\u5bf9\u64cd\u4f5c 2 \u8fdb\u884c\u4e86 18 \u6b21\u7684\u64cd\u4f5c\uff0c\u5f88\u660e\u663e\uff0c\u8fd9\u662f\u4e0d\u80fd\u627f\u53d7\u7684\uff0c\u8003\u8651\u4e00\u4e0b\u4e0b\u4f18\u5316\u3002\n\n\u53d1\u73b0\u4e0d\u5fc5\u5efa\u56db\u9897\uff0c\u56e0\u4e3a x, y \u4e24\u9897\u53ef\u4ee5\u5206\u522b\u7528\u7ed3\u6784\u4f53\u6765\u50a8\u5b58\uff0c\u6240\u4ee5\u53ea\u9700\u8981 2 \u68f5\u5c31\u591f\u4e86\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u5c31\u628a\u64cd\u4f5c\u6b21\u6570\u51cf\u534a\u4e86\uff0c\u64cd\u4f5c 2 \u53ea\u9700\u8981\u8fdb\u884c 8 \u6b21\u4e86\uff01\n\n\u8fd9\u90e8\u5206\u4ee3\u7801\u8fc7\u4e8e\u5197\u957f\uff0c\u7701\u7565\uff0c\u5e76\u4e14\u4e5f\u5f88\u597d\u5b9e\u73b0\u7684\u5462\u3002\n\n\u4f46\u662f\u6253\u5b8c\u53d1\u73b0\u4f60\u4ea4\u4e0a\u53bb\u53ea\u6709 34 \u5206\uff0c\u53ea\u80fd\u8fc7\u6d4b\u8bd5\u70b9 1\uff0c3\uff0c4\u3002\n\n\u5f88\u660e\u663e\u7684\uff0c\u4f60\u7684\u64cd\u4f5c 2 \u8fd8\u662f\u70b8\u4e86\uff0c\u8fd8\u5f97\u63a5\u7740\u4f18\u5316\u4e0b\u3002\n\n\u8003\u8651\u5c06\u64cd\u4f5c 2\uff0c3 \u7684\u8868\u8fbe\u67ff\u5b50\u5c55\u5f00\u3002\n\n\u64cd\u4f5c 2\uff1a\n\n$m = (x * \\cos \\alpha + y * \\sin \\alpha) + (-a * \\cos \\alpha - b * \\sin \\alpha + a)$\u3002\n\n$n = (y * \\cos \\alpha + x * -\\sin \\alpha) + (-b * \\cos \\alpha - a * -\\sin \\alpha + b)$\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u7531\u4e8e\u548c y \u6709\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u64cd\u4f5c\u7ed1\u5b9a\u8d77\u6765\uff0c\u5373\u4fee\u6539\u65f6 x\uff0cy \u4e00\u8d77\u5728\u7ed3\u6784\u4f53\u4e2d\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u6539\u4e86 y \u7684\u503c\u800c\u91cd\u5efa\u68f5\u6811\u3002\n\n\u4e58\u6cd5\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n```cpp\n\tnode operator * (node p) {\n\t\treturn (node) {1.0 * x * p.x - 1.0 * y * p.y, 1.0 * y * p.x + 1.0 * x * p.y};\n\t}\n```\n\n\u8fd8\u662f\u5f88\u597d\u7406\u89e3\u7684\uff0c\u4e0d\u7406\u89e3\u7684\u81ea\u5df1\u5e26\u5165\u7b97\u4e00\u4e0b\u3002\n\n\u73b0\u5728\u89e3\u51b3\u540e\u534a\u90e8\u5206\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u5176\u5b9e\u5c31\u662f\u8fd9\u6837\uff1a\n\n```cpp\n(node) {-a, -b} * (node) {COS(g), -SIN(g)} + (node) {a, b}\n```\n\n\u73b0\u5728\u8003\u8651\u4e0b\u64cd\u4f5c 3\u3002\n\n\u5c55\u5f00\u5f0f\u5b50\uff1a\n\n$m = x * k + (-a * k + a)$\u3002\n\n$n = y * k + (-b * k + b)$\u3002\n\n\u53d1\u73b0\u633a\u5bf9\u79f0\u7684\u4fe9\u67ff\u5b50\uff0c\u4f46\u662f\u4e0d\u53cb\u5584\u7684\u53d1\u73b0\u662f\u4e58\u6cd5\u88ab\u6539\u53d8\u4e86\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u6211\u4eec\u5982\u679c\u8ba9 $p.x == k$\uff0c$p.y == 0$ \u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u8ba9 x\uff0cy \u5206\u522b\u4e58 k \u4e86\u5462\u3002\n\n\u91cc\u9762\u7684 a\uff0cb \u540c\u7406\u3002\n\n\u5269\u4e0b\u7684\u64cd\u4f5c\u5c31\u662f\u57fa\u672c\u4e86\uff0c\u533a\u95f4\u548c\uff0c\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u4e58\uff0c\u4e0d\u4f1a\u7684\u53bb\u5b66\u4e60\u6a21\u677f\u4e8c\u3002\n\n\u633a\u597d\u7684\u9898\u76ee\uff0c\u4e3b\u8981\u8003\u8651\u5982\u4f55\u8f6c\u6362\uff0c\u5efa\u8bae\u6253\u6253\u3002\n\n\n## \u4ee3\u7801\uff1a\n\n\u7801\u91cf\u770b\u7740\u5f88\u5927\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u6253\uff0c\u91cc\u9762\u52a0\u4e86\u5bf9\u62cd\u548c debug\uff0c\u4ee5\u53ca\u6211\u90a3\u677e\u6563\u7684\u9a6c\u8702\uff0c\u6240\u4ee5\u770b\u7740 300 \u591a\u884c\uff0c\u5b9e\u9645\u4e0a\u53ea\u6709200\u884c\u5de6\u53f3\u3002\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n\nconst int N = 3e5 + 7;\nconst double pai = 3.14159265358979323846;\n\nint n, m;\n\nstruct node {\n\tdouble x, y;\n\t\n\tnode operator + (node p) {\n\t\treturn (node) {1.0 * x + 1.0 * p.x, 1.0 * y + 1.0 * p.y};\n\t}\n\t\n\tnode operator * (node p) {\n\t\treturn (node) {1.0 * x * p.x - 1.0 * y * p.y, 1.0 * y * p.x + 1.0 * x * p.y};\n\t}\n\t\n\tnode operator * (double p) {\n\t\treturn (node) {1.0 * x * p, 1.0 * y * p};\n\t}\n} pos[N];\n\nstruct SegmentTree {\n\tint l, r;\n\tnode sum, add, mul;\n} tree[N << 2 | 1];\n\nstruct SeTr {\n\tinline void push_up(int dep) {\n\t\ttree[dep].sum = tree[dep << 1].sum + tree[dep << 1 | 1].sum;\n\t}\n\t\n\tinline void push_down(int dep) {\n\t\tif (tree[dep].mul.x != 1.0 || tree[dep].mul.y != 1.0) {\n\t\t\ttree[dep << 1].mul = tree[dep << 1].mul * tree[dep].mul;\n\t\t\ttree[dep << 1].sum = tree[dep << 1].sum * tree[dep].mul;\n\t\t\ttree[dep << 1].add = tree[dep << 1].add * tree[dep].mul;\n\t\t\t\n\t\t\ttree[dep << 1 | 1].mul = tree[dep << 1 | 1].mul * tree[dep].mul;\n\t\t\ttree[dep << 1 | 1].sum = tree[dep << 1 | 1].sum * tree[dep].mul;\n\t\t\ttree[dep << 1 | 1].add = tree[dep << 1 | 1].add * tree[dep].mul;\n\t\t\t\n\t\t\ttree[dep].mul = (node) {1.0, 0}; \n\t\t}\n\t\t\n\t\tif (tree[dep].add.x || tree[dep].add.y) {\n\t\t\ttree[dep << 1].add = tree[dep << 1].add + tree[dep].add;\n\t\t\ttree[dep << 1 | 1].add = tree[dep << 1 | 1].add + tree[dep].add;\n\t\t\t\n\t\t\ttree[dep << 1].sum = tree[dep << 1].sum + tree[dep].add * (tree[dep << 1].r - tree[dep << 1].l + 1);\n\t\t\ttree[dep << 1 | 1].sum = tree[dep << 1 | 1].sum + tree[dep].add * (tree[dep << 1 | 1].r - tree[dep << 1 | 1].l + 1);\n\t\t\t\n\t\t\ttree[dep].add = (node) {0, 0};\n\t\t}\n\t}\n\t\n\tvoid build(int dep, int l, int r) {\n\t\ttree[dep].l = l, tree[dep].r = r;\n\t\ttree[dep].mul = (node) {1.0, 0};\n\t\t\n\t\tif (l == r) {\n\t\t\ttree[dep].sum = (node) {pos[l].x, pos[l].y};\n\t\t\t\n\t\t\treturn ;\n\t\t}\n\t\t\n\t\tint mid = l + r >> 1;\n\t\t\n\t\tbuild(dep << 1, l, mid);\n\t\tbuild(dep << 1 | 1, mid + 1, r);\n\t\t\n\t\tpush_up(dep);\n\t} \n\t\n\tvoid update_add(int dep, int x, int y, node val) {\n\t\tif (tree[dep].l >= x && tree[dep].r <= y) {\n\t\t\ttree[dep].add = tree[dep].add + val;\n\t\t\ttree[dep].sum = tree[dep].sum + val * (tree[dep].r - tree[dep].l + 1); \n\t\t\t\n\t\t\treturn ;\n\t\t}\n\t\t\n\t\tpush_down(dep);\n\t\t\n\t\tint mid = tree[dep].l + tree[dep].r >> 1;\n\t\t\n\t\tif (x <= mid) update_add(dep << 1, x, y, val);\n\t\tif (y > mid) update_add(dep << 1 | 1, x, y, val);\n\t\t\n\t\tpush_up(dep);\n\t}\n\t\n\tvoid update_mul(int dep, int x, int y, node val) {\n\t\tif (tree[dep].l >= x && tree[dep].r <= y) {\n\t\t\ttree[dep].mul = tree[dep].mul * val;\n\t\t\ttree[dep].add = tree[dep].add * val;\n\t\t\ttree[dep].sum = tree[dep].sum * val;\n\t\t\t\n\t\t\treturn ;\n\t\t}\n\t\t\n\t\tpush_down(dep);\n\t\t\n\t\tint mid = tree[dep].l + tree[dep].r >> 1;\n\t\t\n\t\tif (x <= mid) update_mul(dep << 1, x, y, val);\n\t\tif (y > mid) update_mul(dep << 1 | 1, x, y, val);\n\t\t\n\t\tpush_up(dep);\n\t}\n\t\n\tnode query(int dep, int x, int y) {\n\t\tnode ans = (node) {0, 0};\n\t\t\n\t\tif (tree[dep].l >= x && tree[dep].r <= y)\n\t\t\treturn tree[dep].sum;\n\t\t\n\t\tpush_down(dep);\n\t\t\n\t\tint mid = tree[dep].l + tree[dep].r >> 1;\n\t\t\n\t\tif (x <= mid) ans = ans + query(dep << 1, x, y);\n\t\tif (y > mid) ans = ans + query(dep << 1 | 1, x, y);\n\t\t\n\t\treturn ans;\n\t}\n} segment;\n\ninline int read() {\n\tint n = 0, f = 1;\n\tchar c = getchar();\n\t\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -f;\n\t\t\n\t\tc = getchar();\n\t}\n\t\n\twhile (c >= '0' && c <= '9') {\n\t\tn = (n << 3) + (n << 1) + (c ^ '0');\n\t\t\n\t\tc = getchar();\n\t}\n\t\n\treturn n * f;\n}\n\ninline double COS(int g) {\n\treturn cos(g * pai / 180);\n}\n\ninline double SIN(int g) {\n\treturn sin(g * pai / 180);\n}\n\nint main() {\n\tn = read(), m = read();\n\t\n\tfor (int i = 1; i <= n; i ++)\n\t\tpos[i].x = read(), pos[i].y = read();\n\t\n\tsegment.build(1, 1, n);\n\t\n\tfor (int i = 1; i <= m; i ++) {\n\t\tint op, x, y, a, b, p, q, g;\n\t\t\n\t\top = read();\n\t\t\n\t\tif (op == 1) {\n\t\t\tx = read(), y = read(), a = read(), b = read();\n\t\t\t\n\t\t\tsegment.update_add(1, x, y, (node) {a, b}); \n\t\t} else if (op == 2) {\n\t\t\tx = read(), y = read(), a = read(), b = read(), g = read();\n\t\t\t\n\t\t\tsegment.update_mul(1, x, y, (node) {COS(g), -SIN(g)});\n\t\t\tsegment.update_add(1, x, y, (node) {-a, -b} * (node) {COS(g), -SIN(g)} + (node) {a, b});\n\t\t} else if (op == 3) {\n\t\t\tx = read(), y = read(), a = read(), b = read(), p = read(), q = read();\n\t\t\t\n\t\t\tdouble k = (1.0 * p) / (1.0 * q);\n\t\t\t\n\t\t\tsegment.update_mul(1, x, y, (node) {k, 0});\n\t\t\tsegment.update_add(1, x, y, (node) {-a, -b} * (node) {k, 0} + (node) {a, b});\n\t\t} else {\n\t\t\tx = read(), y = read();\n\t\t\t\n\t\t\tnode ans = segment.query(1, x, y);\n\t\t\t\n\t\t\tprintf(\"%0.6lf %0.6lf\\n\", ans.x / (1.0 * (y - x + 1)), ans.y / (1.0 * (y - x + 1)));\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n\n$Atlantis.$",
        "postTime": 1645352589,
        "uid": 328170,
        "name": "Kalium",
        "ccfLevel": 0,
        "title": "P8105 \u300cLCOI2022\u300d Cow Dance\u9898\u89e3"
    },
    {
        "content": "CF618E \u6765\u7684 idea\u3002\n\n\u7ed9\u4e00\u4e2a[\u539f\u9898\u9762](https://www.luogu.com.cn/problem/U168596)\uff0c\u6211\u89c9\u5f97\u6211\u5199\u7684\u5f88\u597d\u554a\n\n\u9898\u610f\uff1a\u7ed9\u5b9a\u70b9\u96c6\u652f\u6301\u533a\u95f4\u5e73\u79fb\u533a\u95f4\u7ed5\u67d0\u4e2a\u70b9\u65cb\u8f6c\u6216\u4f4d\u4f3c\uff0c\u548c\u8be2\u95ee\u533a\u95f4\u70b9\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807\u5206\u522b\u7684\u5e73\u5747\u6570\u3002\n\n\u9898\u89e3\uff1a\n\n1.\u66b4\u529b\u3002\n\n2.\u7ef4\u62a4\u533a\u95f4\u65cb\u8f6c\u89d2\u5ea6\uff0c\u533a\u95f4\u52a0\uff0c\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n3.\u7ef4\u62a4\u533a\u95f4\u653e\u5927\u500d\u6570\uff0c\u533a\u95f4\u52a0\uff0c\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n4.\u7ef4\u62a4\u533a\u95f4\u5e73\u79fb\uff0c\u4e24\u4e2a\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n5.\u66b4\u529b\u3002\n\n6.\u7559\u7ed9\u4f1a\u6b63\u89e3\u4f46\u4e0d\u5b8c\u5168\u4f1a\u7684\u9009\u624b\u3002\n\n7.\u7559\u7ed9\u5e38\u6570\u5927\u9009\u624b\u3002\n\n8.\u6ce8\u610f\u5230\u533a\u95f4\u65cb\u8f6c\u4f4d\u4f3c\u90fd\u53ef\u4ee5\u62ff\u77e9\u9635\u7ef4\u62a4\uff0c\u5c31\u76f8\u5f53\u4e8e\u77e9\u9635\u52a0\u548c\u77e9\u9635\u4e58\uff0c\u6216\u8005\u7528\u865a\u6570\u7ef4\u62a4\u3002\n\n\u5bf9\u4e8e\u5e73\u79fb\u64cd\u4f5c\uff0c\u5c31\u662f\u52a0\u4e0a\u4e00\u4e2a\u865a\u6570\u3002\n\n\u5bf9\u4e8e\u65cb\u8f6c\u548c\u4f4d\u4f3c\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5148\u628a\u8fd9\u4e2a\u4e2d\u5fc3\u79fb\u5230\u539f\u70b9\uff0c\u518d\u4e58\u4e0a\u4e00\u4e2a\u865a\u6570\u5373\u53ef\uff0c\u7ef4\u62a4\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u4e58\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\u3002",
        "postTime": 1638333518,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "P8105 \u300cLCOI2021\u300d Cow Dance"
    }
]