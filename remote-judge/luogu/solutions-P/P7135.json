[
    {
        "content": "\u8fd9\u91cc\u662f\u51fa\u9898\u4eba\uff08\n\n\u672c\u9898\u5176\u5b9e\u53ef\u4ee5\u8f6c\u5316\u6210\u7ecf\u5178\u7684\u201c\u4e95\u5b57\u68cb\u201d\u6e38\u620f\uff0c\u6784\u9020\u5982\u4e0b\uff1a\n\n|  2   |  9   |  4   |\n| :--: | :--: | :--: |\n|  7   |  5   |  3   |\n|  6   |  1   |  8   |\n\n\u5f53\u7136\u4e0d\u77e5\u9053\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u6570\u636e\u89c4\u6a21\u8fd9\u4e48\u5c0f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u9884\u5904\u7406\u641c\u7d22\u3002\n\n\u8bb0\u5f55\u603b\u5c40\u6570\u548c\u83b7\u80dc\u5c40\u6570\uff0c\u641c\u7d22\u5230\u6bcf\u4e00\u5c42\uff0c\u5982\u679c\u8f6e\u5230\u81ea\u5df1\u9009\u53d6\uff0c\u5219\u53d6\u83b7\u80dc\u6982\u7387\u6700\u5927\u7684\u7b56\u7565\uff0c\u5426\u5219\u5c06\u603b\u5c40\u6570\u548c\u83b7\u80dc\u5c40\u6570\u6c42\u548c\u3002\n\n\u641c\u7d22\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u5168\u90e8\u60c5\u51b5\uff0c\u5148\u624b\u83b7\u80dc\u6982\u7387\u5927\u4e8e $99\\%$\uff0c\u540e\u624b\u83b7\u80dc\u6982\u7387\u5927\u4e8e $88\\%$ \uff0c\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u53ea\u8981\u4f60\u719f\u6089\u4e95\u5b57\u68cb\u5373\u53ef\u3002\n\n\u641c\u7d22\u6807\u7a0b\uff08\u5f88\u4e45\u4ee5\u524d\u5199\u7684\uff0c\u5199\u5f97\u6bd4\u8f83\u4e11\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 12\nusing namespace std;\nint Pow[maxn];\nbool fg;\n\nstruct st {\n\tint a[maxn];\n\tint Hash() {\n\t\tint h = 0;\n\t\tfor (int i = 1; i <= 9; i++) {\n\t\t\th += a[i] * Pow[i - 1];\n\t\t}\n\t\treturn h;\n\t}\n\tint win() {\n\t\tbool flag = true;\n\t\tfor (int i = 1; i <= 9; i++) {\n\t\t\tif (!a[i]) flag = false;\n\t\t\tfor (int j = 1; j <= 9; j++) {\n\t\t\t\tint k = 15 - i - j;\n\t\t\t\tif (a[i] == 0 || a[i] != a[j] || i == j || i == k || j == k || k < 1 || k > 9) continue;\n\t\t\t\tif (a[k] == a[i]) return a[i];\n\t\t\t}\n\t\t}\n\t\tif (flag) return 3;\n\t\treturn 0;\n\t}\n} now, s;\n\nstruct rec {\n\tint win, tot, chs;\n\trec operator + (const rec& x)const {\n\t\trec res;\n\t\tres.win = win + x.win;\n\t\tres.tot = tot + x.tot;\n\t\treturn res;\n\t}\n} f[40000][3];\nint nowdfs;\nvoid dfs(int key, st x, int pos)\n{\n\n\tif (f[key][nowdfs].tot) return;\n\tint p = x.win();\n\tif (p) {\n\t\tf[key][nowdfs].tot = 1;\n\t\tif (p == 1) f[key][nowdfs].win = -1e5;\n\t\telse if (p == 2) f[key][nowdfs].win = 1;\n\t\treturn;\n\t}\n\tdouble Max = -1e9;\n\tfor (int i = 1; i <= 9; i++) {\n\t\tif (x.a[i]) continue;\n\t\tst v = x;\n\t\tv.a[i] = pos;\n\t\tint h = v.Hash();\n\t\tdfs(h, v, pos == 1 ? 2 : 1);\n\t\tif (pos == 1) f[key][nowdfs] = f[key][nowdfs] + f[h][nowdfs];\n\t\telse {\n\t\t\tif ((double)f[h][nowdfs].win / f[h][nowdfs].tot > Max) {\n\t\t\t\tMax = (double)f[h][nowdfs].win / f[h][nowdfs].tot;\n\t\t\t\tf[key][nowdfs] = f[h][nowdfs];\n\t\t\t\tf[key][nowdfs].chs = i;\n\t\t\t}\n\t\t}\n\t}\n}\n\nextern \"C\" void init()\n{\n\tPow[0] = 1;\n\tfor (int i = 1; i <= 8; i++)\n\t\tPow[i] = Pow[i - 1] * 3;\n\tnowdfs = 1;\n\tdfs(0, s, 1);\n\tnowdfs = 0;\n\tdfs(0, s, 2);\n}\n\nextern \"C\" void newgame(bool flag) { fg = flag; memset(now.a, false, sizeof(now.a)); }\n\nextern \"C\" int choose(int x)   //x\u4e3a\u9009\u53d6\u7684\u9762\u5305\n{\n\tif (x != 0) now.a[x] = 1;\n\tint key = now.Hash();\n\tint p = f[key][fg].chs;\n\tnow.a[p] = 2;\n\treturn p;\n}\n```\n\n",
        "postTime": 1607834283,
        "uid": 148050,
        "name": "tuxiaobei",
        "ccfLevel": 7,
        "title": "\u5c0f B \u7684\u9762\u5305"
    },
    {
        "content": "## Tag\n\n\u535a\u5f08\u8bba\uff0c\u51b3\u7b56\u6811\u3002\n\n## Preface\n\n\u505a\u7684\u7b2c\u4e00\u4e2a\u4ea4\u4e92\u9898\u3002\n\n## Solution\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u5c40\u9762 $S$ \u5728\u8fd9\u6b65\u81ea\u5df1\u9009\u62e9\u65f6\u7684\u671f\u671b\u5f97\u5206\u662f $f_S$\uff0c\u540e\u624b\u65f6\u7684\u671f\u671b\u5f97\u5206\u662f $g_S$\uff0c\u53ef\u4ee5\u53d8\u6210\u7684\u5c40\u9762\u96c6\u5408\u4e3a $w(S)$\u3002\n\n\u90a3\u4e48\u5f53\u81ea\u5df1\u9009\u62e9\u65f6\uff0c\u9009\u62e9 $w(S)$ \u4e2d\u6700\u4f18\u7684\uff1b\n\n\u5f53\u5bf9\u65b9\u9009\u62e9\u65f6\uff0c\u7531\u4e8e\u9898\u76ee\u5df2\u7ecf\u4fdd\u8bc1\u968f\u673a\uff0c\u90a3\u4e48\u5c31\u662f\u6240\u6709 $w(S)$ \u4e2d\u5c40\u9762\u7684\u548c\u3002\n\n\u4e0d\u59a8\u628a\u671f\u671b\u7528\u4e00\u4e2a\u4e8c\u5143\u7ec4 $\\{s,c\\}$ \u8868\u793a\uff0c\u5176\u4e2d $s$ \u4ee3\u8868\u5f97\u5206\u603b\u548c\uff0c\u800c $c$ \u4ee3\u8868\u53ef\u80fd\u7684\u5c40\u9762\u4e2a\u6570\u3002\u90a3\u4e48\u5b9a\u4e49\u4e24\u4e2a\u671f\u671b\u503c $A\\{s_A,c_A\\},B\\{s_B,c_B\\}$ \u7684\u548c\u4e3a $C\\{s_A+s_B,c_A+c_B\\}$\uff0c\u800c\u5f53\u4e14\u4ec5\u5f53 $\\frac{s_A}{c_A}<\\frac{s_B}{c_B}$ \u65f6\uff0c\u6709 $A<B$\u3002\n\n\u90a3\u4e48\u5f53\u535a\u5f08\u8fd8\u6ca1\u6709\u7ed3\u679c\u65f6\uff1a\n\n$$\\begin{cases}f_S=\\max_{S'\\in w(S)}g_{S'}\\\\\ng_S=\\sum_{S'\\in w(S)}f_{S'}\n\\end{cases}$$\n\n\u5f53\u535a\u5f08\u5df2\u7ecf\u6709\u7ed3\u679c\u65f6\uff1a\n\n\u5f53\u6211\u80dc\u5229\u4e86\uff0c$f_S=g_S=\\{1,1\\}$\uff1b\n\n\u5f53\u5e73\u5c40\u4e86\uff0c$f_S=g_S=\\{0,1\\}$\uff1b\n\n\u5f53\u6211\u8f93\u4e86\uff0c$f_S=g_S=\\{-10,1\\}$\uff1b\n\n\u63a5\u4e0b\u6765\u6765\u770b\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bbe\u8ba1\uff1f\u56e0\u4e3a\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u65b9\u662f\u968f\u673a\u9009\u62e9\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u80dc\u7387\u662f\u5f88\u9ad8\u7684\uff0c\u56e0\u6b64\u9700\u8981\u52a0\u5927\u5bf9\u4e8e\u8f93\u4e86\u7684\u60e9\u7f5a\uff0c\u901a\u4fd7\u7684\u8bb2\u5c31\u662f\u8f93\u4e86\u4e00\u5c40\u5c31\u50cf\u8f93\u4e86 $10$ \u5c40\u4e00\u6837\u3002\n\n\u7136\u540e\u628a\u72b6\u6001\u538b\u7f29\u4e00\u4e0b\uff0c\u7136\u540e\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u5f53\u81ea\u5df1\u9009\u62e9\u65f6\u627e\u5230 $f$ \u6570\u7ec4\u7684\u6700\u4f73\u51b3\u7b56\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#include <iostream>\n#include <vector>\nusing ll = long long;\n\nstruct exp {\n  int s, c;\n  exp(int _s = 0, int _c = 0) { s = _s, c = _c; }\n  exp operator+(exp rhs) { return exp{s + rhs.s, c + rhs.c}; }\n  bool operator>(exp rhs) {\n    if (s * rhs.c != rhs.s * c) return s * rhs.c > rhs.s * c;\n    return c > rhs.c;\n  }\n};\nexp win(1, 1), draw(0, 1), lose(-10, 1);\n// 0: O, 1: X, 2: []\nexp g[19683][2];\nbool vis[19683][2];\nint ch[19683];\nint p3[9];\nint check(int x, int y, int z) {\n  if (x == y && y == z && x != 2) return x;\n  return 2;\n}\nvoid dfs(int h, bool p) {\n  if (vis[h][p]) return;\n  vis[h][p] = true;\n  int H = h;\n  std::vector<int> o(9);\n  for (auto& i : o) {\n    i = h % 3;\n    h /= 3;\n  }\n  h = H;\n  bool flag = false;\n  if (check(o[0], o[4], o[8]) == 0) g[h][p] = lose, flag = true;\n  if (check(o[0], o[4], o[8]) == 1) g[h][p] = win, flag = true;\n  if (check(o[0], o[5], o[7]) == 0) g[h][p] = lose, flag = true;\n  if (check(o[0], o[5], o[7]) == 1) g[h][p] = win, flag = true;\n  if (check(o[1], o[3], o[8]) == 0) g[h][p] = lose, flag = true;\n  if (check(o[1], o[3], o[8]) == 1) g[h][p] = win, flag = true;\n  if (check(o[1], o[5], o[6]) == 0) g[h][p] = lose, flag = true;\n  if (check(o[1], o[5], o[6]) == 1) g[h][p] = win, flag = true;\n  if (check(o[1], o[4], o[7]) == 0) g[h][p] = lose, flag = true;\n  if (check(o[1], o[4], o[7]) == 1) g[h][p] = win, flag = true;\n  if (check(o[2], o[3], o[7]) == 0) g[h][p] = lose, flag = true;\n  if (check(o[2], o[3], o[7]) == 1) g[h][p] = win, flag = true;\n  if (check(o[2], o[4], o[6]) == 0) g[h][p] = lose, flag = true;\n  if (check(o[2], o[4], o[6]) == 1) g[h][p] = win, flag = true;\n  if (check(o[3], o[4], o[5]) == 0) g[h][p] = lose, flag = true;\n  if (check(o[3], o[4], o[5]) == 1) g[h][p] = win, flag = true;\n  if (flag) return;\n  flag = true;\n  for (auto i : o) {\n    if (i == 2) {\n      flag = false;\n      break;\n    }\n  }\n  if (flag) {\n    g[h][p] = draw;\n    return;\n  }\n  if (p) {\n    exp e = lose;\n    for (int i = 0; i < 9; ++i) {\n      if (o[i] == 2) {\n        dfs(h - p3[i], false);\n        if (g[h - p3[i]][false] > e) {\n          ch[h] = i + 1;\n          e = g[h - p3[i]][false];\n        }\n      }\n    }\n    g[h][true] = e;\n  } else {\n    exp e;\n    for (int i = 0; i < 9; ++i) {\n      if (o[i] == 2) {\n        dfs(h - 2 * p3[i], true);\n        e = e + g[h - 2 * p3[i]][true];\n      }\n    }\n    g[h][false] = e;\n  }\n}\nint G;\nbool P;\nextern \"C\" void init() {\n  p3[0] = 1;\n  for (int i = 1; i < 9; ++i) p3[i] = p3[i - 1] * 3;\n  dfs(19682, true);\n  dfs(19682, false);\n}\nextern \"C\" void newgame(bool f) {\n  P = !f;\n  G = 19682;\n}\nextern \"C\" int choose(int x) {\n  if (x) {\n    G -= 2 * p3[x - 1];\n  }\n  int y = ch[G];\n  G -= p3[y - 1];\n  return y;\n}\n```",
        "postTime": 1667996996,
        "uid": 306090,
        "name": "0x3b800001",
        "ccfLevel": 5,
        "title": "P7135 \u5c0f B \u7684\u9762\u5305"
    }
]