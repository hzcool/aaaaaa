[
    {
        "content": "## \u80cc\u666f\n\t7\u67082*\u65e5\u65e2\u662f\u67d0\u4f4d\u5154\u5b50/\u72d0\u72f8/\u5deb\u5973/\u2026\u2026\u5c0f\u59d0\u7684\u751f\u65e5,7\u67082*\u65e5\u53c8\u662f\u672c\u849f\u84bb\t\n    \u7684\u751f\u65e5\uff08\u6d1b\u8c37\u9001\u4e86\u6211\u4e2a\u6a59\u540d),\u6a31(\u5624)\u6b64\u5199\u4e86\u4e00\u9053\u53eb\u505a\u751f\u65e5\u793c\u7269\u7684\u9898\u3002\n## \u5ba1\u9898\n1.\u901a\u8fc7\u5ba1\u9898\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u4e00\u9053\u7c7b\u4f3c\u7684\u9898\u76ee\u2014\u2014\u901b\u753b\u5c55\u3002\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u57fa\u672c\u65ad\u5b9a\n  \u8fd9\u9053\u9898\u5e94\u8be5\u7528\u5355\u8c03\u961f\u5217\u3002\n\n2.\u4e24\u9053\u9898\u7684\u552f\u4e00\u533a\u522b\u5728\u4e8e\u2014\u2014\u4e00\u4e2a\u7ed3\u70b9\u4e0a\u53ef\u4ee5\u6709\u591a\u4e2a\u5f69\u7403\u3002\n\n3.\u6700\u540e\u770b\u6570\u636e\u89c4\u6a21\u2014\u2014n\u5df2\u5230\u8fbe10e6\u7684\u89c4\u6a21,\u56e0\u6b64\u66b4\u529b~~\u8bf4\u4e0d\u5b9a\u80fd\u9a97\u70b9\u5206~~\u662f\u4e0d   \u53ef\u884c\u7684\u201c\u4e0d\u53ef\u4ee5~\u201d\u2014\u2014zjh\n\n## \u601d\u8def\n1.\u201c\u65e2\u7136\u4e24\u9053\u9898\u7c7b\u4f3c\uff0c\u90a3\u80fd\u4e0d\u80fd\u7ee7\u627fP1638\u7684\u601d\u8def\u5462\u201d\u61d2\u60f0\u7684jl\u60f3\u5230\u3002\n\t\u5176\u5b9e\u4e24\u9053\u9898\u662f\u53ef\u4ee5\u4e92\u76f8\u8f6c\u6362\u7684\uff1a\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u7ed3\u6784\u4f53\u5185\u50a8\u5b58\n    \u4e24\u4e2a\u5173\u952e\u8bcd\u2014\u2014\u7c7b\u578b\u548c\u4f4d\u7f6e\u3002\n\n2.\u4ee5\u4f4d\u7f6e\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\u3002\n\n3..\u6211\u4eec\u628a\u540c\u4e00\u4f4d\u7f6e\u7684\u4e24\u4e2a\u5f69\u7403\u62c6\u5f00\u6765\u770b\uff0c\u5373\u4e24\u4e2a\t\u7c7b\u578b\u4e0d\u540c\uff0c\u4f4d\u7f6e\u76f8\u540c\u7684\u5c0f\u7403\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7ee7\u627fP1638\u7684\u601d\u8def\u4e86\u2014\u2014\u56e0\u4e3a\u5728\u6267\u884c\u7b97\u6cd5\u65f6\uff0c\u4e24\u8005\u662f\u6ca1\u6709\u533a\u522b\u7684\n\n## \u4ee3\u7801(\u7406\u8bba\u4e0aAC\u4e86)\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000005;\nint n,k,t,len=0x3f3f3f3f;\nint id[maxn],b;\nstruct node{\n\tint pos;\n\tint val;\n}f[maxn];\nbool cmp\uff08n0de a,node b\uff09\n{\n\treturn a.pos<b.pos;\n}\nint main()\n{\n\tmemset(id,-1,sizeof(id));\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tfor(int j=1;j<=t;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&f[++b].pos);\n\t\t\tf[b].val=i;\n\t\t}\n\t}\n\tsort(f+1,f+n+1,cmp);\n\tint hd=1,cnt=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(id[f[i].val]==-1) cnt++;\n\t\tid[f[i].val]=f[i].pos;\n\t\twhile(hd<=i&&f[hd].pos!=id[f[hd].val]) hd++;\n\t\tif(cnt==k&&f[i].pos-f[hd].pos<len) len=f[i].pos-f[hd].pos;\n\t}\n\tprintf(\"%d\",len\uff09;\n\treturn o;\n}\n\n```cpp",
        "postTime": 1564496986,
        "uid": 218430,
        "name": "\u8587\u84bb\u4e00\u679a",
        "ccfLevel": 0,
        "title": "P2564  \u751f\u65e5\u793c\u7269\u9898\u89e3"
    },
    {
        "content": "## \u7b97\u6cd5:\u533a\u95f4\u4f38\u7f29\n\n### \u65f6\u95f4\u590d\u6742\u5ea6:$O(n)$\n\n\u6211\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u6ca1\u6709\u9898\u89e3\u662f\u7528\u533a\u95f4\u4f38\u7f29\u7684\u65b9\u6cd5\uff0c\u51b3\u5b9a\u5199\u4e00\u7bc7\u9898\u89e3\n\n\u8fd9\u9898\u548cP1638 \u901b\u753b\u5c55\u5f88\u50cf,\u51e0\u4e4e\u5c31\u662f\u4e00\u6a21\u4e00\u6837\u3002\u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\u53ef\u80fd\u540c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u53ef\u80fd\u90fd\u6709\u591a\u4e2a\"\u5f69\u73e0\"\n\n\u7136\u800c\u6709\u591a\u4e2a\"\u5f69\u73e0\"\u8fd9\u70b9\u6709\u548cP2698[USACO12MAR]\u82b1\u76c6Flowerpot\u8fd9\u9898\u4e00\u6837\n\n\u901b\u753b\u5c55\u548c\u82b1\u76c6\u4e24\u9898\u4e2d\u6709\u6211\u7684\u9898\u89e3,\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u53bb\u770b\u4e00\u4e0b\n\n\u8bb2\u4e00\u4e0b\u533a\u95f4\u4f38\u7f29\u662f\u600e\u4e48\u505a\u7684\u5427\n\n\u7528\u4e24\u4e2a\u53d8\u91cf$l$\u548c$r$\u6765\u679a\u4e3e\u533a\u95f4\n\n\u5982\u679c$l$\u5230$r$\u7684\u533a\u95f4\u4e0d\u6ee1\u8db3\u8981\u6c42,$r$++\n\n\u5982\u679c$l$\u5230$r$\u7684\u533a\u95f4\u6ee1\u8db3\u8981\u6c42,\u8bb0\u5f55\u7b54\u6848,$l$++\n\n### \u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1000005;\nint l,r,n,m,k,t,b[105],cnt,ans;\n//cnt\u8bb0\u5f55\u5f53\u524d\u533a\u95f4\u6709\u51e0\u79cd\u4e0d\u540c\u7684\u989c\u8272\nstruct node{\n\tint val,id;\n}a[N];\nbool cmp(node a,node b)\n{\n\treturn a.val<b.val;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&k);\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[++t].val);\n\t\t\ta[t].id=i;\n\t\t}\n\t}\n\tans=1e9;\n\tsort(a+1,a+t+1,cmp);//\u6392\u5e8f\u662f\u4e3a\u4e86\u4f7f\u4f4d\u7f6e\u76f8\u540c\u7684\"\u5f69\u73e0\"\u5728\u4e00\u8d77\n\tl=r=1;b[a[1].id]=1;cnt=1;\n\tfor(int i=2;i<=n;i++)\n\t\tif(a[i].val==a[i-1].val)\n\t\t{\n\t\t\tr++;\n\t\t\tb[a[i].id]++;\n\t\t\tif(b[a[i].id]==1)cnt++;\n\t\t}\n\t\telse break;\n    //\u6ce8\u610f\u6bcf\u6b21\u8981\u628a\u540c\u4e00\u4e2a\u4f4d\u7f6e\u7684\"\u5f69\u73e0\"\u5168\u90e8\u7b97\n\twhile(l<=n&&r<=n)\n\t{\n\t\tif(cnt==m)//\u6ee1\u8db3\u6761\u4ef6\n\t\t{\n\t\t\tans=min(ans,a[r].val-a[l].val);\n\t\t\tb[a[l].id]--;if(b[a[l].id]==0)cnt--;\n\t\t\tl++;if(l>n)break;//\u6ce8\u610f\u8fb9\u754c\n\t\t\twhile(a[l].val==a[l-1].val)\n\t\t\t{\n\t\t\t\tb[a[l].id]--;if(b[a[l].id]==0)cnt--;\n\t\t\t\tl++;if(l>n)break;//\u6ce8\u610f\u8fb9\u754c\n\t\t\t}\n\t\t}\n\t\telse{//\u4e0d\u6ee1\u8db3\u6761\u4ef6\n\t\t\tr++;if(r>n)break;//\u6ce8\u610f\u8fb9\u754c\n\t\t\tb[a[r].id]++;if(b[a[r].id]==1)cnt++;\n\t\t\twhile(a[r+1].val==a[r].val)\n\t\t\t{\n\t\t\t\tr++;if(r>n)break;//\u6ce8\u610f\u8fb9\u754c\n\t\t\t\tb[a[r].id]++;if(b[a[r].id]==1)cnt++;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans;\n}\n```",
        "postTime": 1549365231,
        "uid": 39484,
        "name": "\u7c73\u5947",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u8001\u5e08\u96c6\u8bad\u7684\u9898\uff0c\u731b\u7136\u53d1\u73b0\u81ea\u5df1\u7684\u89e3\u6cd5\u5c45\u7136\u72ec\u4e00\u65e0\u4e8c\uff01\n\n\u89e3\u6cd5\u5c31\u662f\uff1a$dfs!$\u518d\u52a0\u4e0a2\u5c422\u5206\u3002\u662f\u4e0d\u662f\u6709\u70b9\u60ca\u4eba\uff1f\u800c\u4e14\u5e76\u6ca1\u6709\u6570\u636e\u5361\u6389\u4e86\u6211\u8fd9\u79cd\u63a5\u8fd1\u66b4\u529b\u7684\u89e3\u6cd5\u3002\n\n\u5206\u6790\u53ef\u5f97\uff0c$k$\u5c0f\u7684\u60ca\u4eba\uff0c\u6240\u4ee5$dfs$\u4e5f\u5c31\u53ef\u4ee5\u4e86\u3002\u800c\u6734\u7d20\u7684$dfs$\u7edd\u5bf9\u8fc7\u4e0d\u4e86\uff0c\u6240\u4ee5\u8981\u52a0\u4e0a\u4f18\u5316\u3002\n\n\u5916\u5c42\u7684\u4e8c\u5206\u5c31\u662f\u6765\u4f18\u5316\u7684\uff0c\u5176\u5b9e\u66f4\u591a\u7684\u8fd8\u662f\u8ba9\u601d\u8def\u66f4\u6e05\u6670\uff0c\u8fd9\u4e2a\u4e8c\u5206\u662f\u4e8c\u5206\u7b54\u6848\u3002\u8fd9\u6837\uff0c$dfs$\u5c31\u6210\u4e86\u5224\u65ad\u4e86\uff0c\u53ef\u4ee5\u8fdb\u884c\u526a\u679d\u4e86\u3002\n\n\u7136\u800c\uff0c\u8fd9\u4e2a\u4f18\u5316\u4ecd\u5fae\u4e0d\u8db3\u9053\uff0c\u5728$dfs$\u91cc\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7684\u4f18\u5316\u3002\n\n\u5047\u8bbe\u73b0\u5728\u7684\u8303\u56f4\u4e3a$[x,y]$\uff0c\u641c\u5230\u4e86\u7b2c$i$\u4e2a\u54c1\u79cd\uff0c\u90a3\u4e48\u5982\u679c\u6709\u4f4d\u7f6e\u5728$[x,y]$\u95f4\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de$dfs(i+1,x,y)$\u7684\u503c\uff0c\u56e0\u4e3a\u8fd9\u6837\u5fc5\u5b9a\u4e3a\u6700\u4f18\u3002\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de$dfs(i+1,t,y)|dfs(i+1,x,l)$\uff0c($t$\u4e3a\u5c0f\u4e8e$x$\u7684\u6700\u5927\u503c\uff0c$l$\u4e3a\u5927\u4e8e$y$\u7684\u6700\u5c0f\u503c\uff09\u8fd9\u6837\uff0c\u518d\u52a0\u4e0a\u524d\u9762\u7684\u526a\u679d\uff0c\u5c31\u53ef\u4ee5\u5361\u8fc7\u65f6\u9650\u4e86\u3002\n\n\u7136\u800c\uff0c\u8fd8\u662f\u62c5\u5fc3\u4f1a\u88ab\u5361\uff0c\u90a3\u5c31\u662f\u91cc\u5c42\u4e8c\u5206\u7684\u4f5c\u7528\u4e86\u3002\u56e0\u4e3a\u679a\u4e3e\u4e0a\u9762\u7684$t$\u53ef\u80fd\u4f1a\u8d85\u65f6\uff0c\u56e0\u4e3a\u4f4d\u7f6e\u90fd\u662f\u6709\u5e8f\u7684\uff0c\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u8fd9\u6837\u65f6\u95f4\u6548\u7387\u63d0\u9ad8\u4e86\u4e00\u4e9b\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u4e0b\u8c03\u8bd5\u7ec6\u8282\u4e86\u3002\n\u4e0b\u9762\u662f\u96c6\u8bad\u65f6\u4ea4\u7684\u4ee3\u7801\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <bits/stdc++.h>\n#include <queue>\nusing namespace std;\n#define re register int\ninline int read(){\n    int x=0,ff=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')ff=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    return x*ff;\n} \nint n,k,a[65][1000005],tt[65],opt,mx=0,mn=2147483647;\nbool dfs(int i,int x,int y){\n    if(i>k)return (y-x)<=opt;\n    if(y-x>opt)return 0;\n    int j=1,t,ll=1,rr=tt[i],mid;\n    //while(a[i][j]<x&&j<=tt[i])j++;\n    while(ll<=rr){\n        mid=(ll+rr)>>1;\n        if(a[i][mid]>=x)rr=mid-1;\n        else ll=mid+1;\n    }\n    j=ll;\n    if(a[i][j]==x)return dfs(i+1,x,y);\n    if(j>tt[i])return dfs(i+1,a[i][tt[i]],y);\n    if(a[i][j]>=x&&a[i][j]<=y)return dfs(i+1,x,y);\n    if(j>1){\n        t=j-1;\n        if(y-a[i][t]<=opt)\n        if(dfs(i+1,a[i][t],y))return 1;\n    }\n    if(a[i][j]-x<=opt)return dfs(i+1,x,a[i][j]);\n    return 0;\n}\nbool ok(int x){\n    opt=x;\n    for(int i=1;i<=tt[1];i++){\n        if(dfs(2,a[1][i],a[1][i]))return 1;\n    }\n    return 0;\n}\nsigned main(){\n    n=read();k=read();int l,r,mid;\n    for(int i=1;i<=k;i++){\n        tt[i]=read();\n        for(int j=1;j<=tt[i];j++){\n            a[i][j]=read();\n        }\n        mx=max(mx,a[i][tt[i]]);mn=min(mn,a[i][1]);\n    }\n    if(k==1){cout<<0<<endl;return 0;}\n    l=0;r=mx-mn;\n    while(l<=r){\n        mid=(l+r)>>1;\n        if(ok(mid))r=mid-1;\n        else l=mid+1;\n    }\n    printf(\"%d\\n\",l);\n    return 0;\n}\n```\n\u8003\u8bd5\u540e\uff0c\u542c\u540c\u5b66\u8bf4\u6d1b\u8c37\u6709\u539f\u9898\uff0c\u4e8e\u662f\u4ea4\u4e86\u4e0a\u53bb\uff0c$AC$\u4e86\u3002\u4e00\u9635\u9ad8\u5174\u52a0\u6fc0\u52a8\u3002\u6bd5\u7adf\u89e3\u6cd5\u633a\u65b0\u5947\u3002\n\u7136\u800c......\u8001\u5e08\u90a3\u513f\u7206\u96f6\u4e86\uff01$rank$\u6389\u4e8610\u4f4d\u3002\n\n\u539f\u6765\u6570\u7ec4\u5f00\u7206\u4e86\uff0c\u6d1b\u8c37\u7684\u8bc4\u6d4b\u662f\u770b\u8fd0\u884c\u7a7a\u95f4\u3002\u3002\u3002\u3002\n\n\u4e8e\u662f\u6570\u7ec4\u6539\u6210$vector$\u5c31\u8fc7\u4e86\u3002\u3002\u3002\u3002\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <bits/stdc++.h>\n#include <queue>\nusing namespace std;\n#define re register int\ninline int read(){\n    int x=0,ff=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')ff=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    return x*ff;\n} \nint n,k,tt[65],opt,mx=0,mn=2147483647;\nvector<int>a[65];\nbool dfs(int i,int x,int y){\n    if(i>k)return (y-x)<=opt;\n    if(y-x>opt)return 0;\n    int j=1,t,ll=0,rr=tt[i]-1,mid;\n    //while(a[i][j]<x&&j<=tt[i])j++;\n    while(ll<=rr){\n        mid=(ll+rr)>>1;\n        if(a[i][mid]>=x)rr=mid-1;\n        else ll=mid+1;\n    }\n    j=ll;\n    if(a[i][j]==x)return dfs(i+1,x,y);\n    if(j>=tt[i])return dfs(i+1,a[i][tt[i]],y);\n    if(a[i][j]>=x&&a[i][j]<=y)return dfs(i+1,x,y);\n    if(j>0){\n        t=j-1;\n        if(y-a[i][t]<=opt)\n        if(dfs(i+1,a[i][t],y))return 1;\n    }\n    if(a[i][j]-x<=opt)return dfs(i+1,x,a[i][j]);\n    return 0;\n}\nbool ok(int x){\n    opt=x;\n    for(int i=0;i<tt[1];i++){\n        if(dfs(2,a[1][i],a[1][i]))return 1;\n    }\n    return 0;\n}\nsigned main(){\n    n=read();k=read();int l,r,mid;\n    for(int i=1;i<=k;i++){\n        tt[i]=read();\n        for(int j=1;j<=tt[i];j++){\n            //a[i][j]=read();\n            a[i].push_back(read());\n        }\n        mx=max(mx,a[i][tt[i]-1]);mn=min(mn,a[i][0]);\n    }\n    if(k==1){cout<<0<<endl;return 0;}\n    l=0;r=mx-mn;\n    while(l<=r){\n        mid=(l+r)>>1;\n        if(ok(mid))r=mid-1;\n        else l=mid+1;\n    }\n    printf(\"%d\\n\",l);\n    return 0;\n}\n```\n\u6240\u4ee5\uff0c\u7b97\u7d27\u4e86\u65f6\u95f4\uff0c\u4e0d\u8981\u5fd8\u4e86\u7a7a\u95f4\u554a\uff01\uff01\uff01\n",
        "postTime": 1565448577,
        "uid": 114059,
        "name": "fscbti",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "## \u89e3\u6cd5\u4e00\u3001\u7ebf\u6bb5\u6811\n\n   \u8fd9\u4e2a\u9898\u53ef\u4ee5\u5148\u6392\u5e8f\uff0c\u4ece\u5de6\u5230\u53f3\u505a\uff0c\u6bcf\u6b21\u66f4\u65b0\u8fd9\u4e2a\u989c\u8272\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u653e\u5165\u7ebf\u6bb5\u6811\u3002\u5982\u679c\u6240\u6709\u989c\u8272\u90fd\u51fa\u73b0\u8fc7\uff0c\u5c31\u53bb\u7ebf\u6bb5\u6811\u4e2d\u67e5\u8be2\u6240\u6709\u989c\u8272\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u65f6\u95f4\u7684\u6700\u5c0f\u503c\u3002\u6bcf\u6b21\u66f4\u65b0**\u5f53\u524d\u4f4d\u7f6e\u4e0e\u8fd9\u4e2a\u6700\u5c0f\u503c\u4e4b\u5dee**\u7684\u6700\u5c0f\u503c\u4f5c\u4e3a\u7b54\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(N(\\log n+\\log k))$\u3002\u7ebf\u6bb5\u6811\u957f\u5ea6\u53ea\u7528\u5f00$k$\u5373\u53ef\u3002\n\n## \u89e3\u6cd5\u4e8c\u3001two-pointer\n\n\u00a0 \u00a0\u6b63\u89e3\u662f\u7c7b\u4f3ctwo-pointer\u7684\u5c3a\u53d6\u6cd5\uff0c\u4e5f\u5c31\u662f\u5148\u6392\u5e8f\uff0c\u4ece\u5de6\u5230\u53f3\u627e\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5de6\u7aef\u70b9\u521d\u59cb\u5316\u4e3a0\u3002\u6bcf\u6b21\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u989c\u8272\u5c31\u628a\u524d\u9762\u7684\u989c\u8272\u6253\u4e0a**\u5220\u9664\u6807\u8bb0**\uff0c\u7b49\u627e\u5230\u5168\u90e8\u989c\u8272\u4ee5\u540e\u5c31\u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u679a\u4e3e\uff0c\u628a\u5de6\u7aef\u70b9\u8c03\u6574\u5230\u7b2c\u4e00\u4e2a\u6ca1\u6709\u5220\u9664\u6807\u8bb0\u7684\u4f4d\u7f6e\uff0c\u8fd9\u5c31\u662f\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u6700\u4f18\u7b54\u6848\u3002\n   \n![](http://www.wjyyy.top/wp-content/uploads/2018/08/201808052008.png)\n\n\u00a0 \u00a0\u5f53\u6211\u4eec\u7b2c\u4e00\u6b21\u53d1\u73b0\u6240\u6709\u7684\u989c\u8272\uff0c\u662f\u5728\u7b2c7\u4e2a\u4f4d\u7f6e\uff0c\u6b64\u65f6\u7684\u5de6\u7aef\u70b9\u4e3a1\uff0c\u6211\u4eec\u4ece\u5de6\u8fb9\u5f00\u59cb\u68c0\u7d22\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5220\u9664\u7684\u4f4d\u7f6e\uff1a2\u3002\u90a3\u4e48\u6211\u4eec\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u7b54\u6848\u5c31\u662f7-2=5\uff0c\u66f4\u65b0\u5230\u6700\u5c0f\u503c\u4e2d\u53bb\u3002\u518d\u7ee7\u7eed\u904d\u5386\uff0c\u53d1\u73b02\uff0c\u6b64\u65f6\u628a\u5de6\u8fb9\u76842\u5220\u9664\uff0c\u8fd9\u65f6\u5de6\u7aef\u70b9\u53ef\u4ee5\u88ab\u79fb\u52304\u53f7\u4f4d\u7f6e\u53bb\uff0c\u66f4\u65b0\u6700\u5c0f\u503c\u5c31\u662f8-4=4\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(N\\log N+K)$\n   \n   \u4e0d\u8fc7\u8fd9\u4e2a\u9898\u7684\u6570\u636e\u89c4\u6a21\u662f$10^6$\uff0c\u8dd1$O(N\\log N)$\u7684\u6392\u5e8f~~\u6709\u7684~~\u8bc4\u6d4b\u673a\u5c31\u53ef\u80fd\u5403\u4e0d\u6d88\u3002\u6211\u4eec\u5176\u5b9e\u8fd8\u53ef\u4ee5\u4f18\u5316\u3002\n   \n## \u89e3\u6cd5\u4e8c\u4e4b\u5806\u4f18\u5316\n\u00a0\n\u00a0 \u00a0\u6ce8\u610f\u5230\u9898\u76ee\u7ed9\u51fa\u7684\u4f4d\u7f6e\u90fd\u662f**\u5347\u5e8f**\uff0c\u90a3\u8054\u60f3\u5230\u5f52\u5e76\u6392\u5e8f\u5408\u5e76\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ea\u8981\u6bcf\u6b21\u627e\u5230$k$\u5217\u4e2d\u5269\u4e0b\u7684\u6700\u5c0f\u7684\u5143\u7d20\u53d6\u51fa\u6765\u4e0d\u5c31\u53ef\u4ee5\u4e86\u5417\u3002\u5728$k$\u5217\u4e2d\u627e\u6700\u5c0f\u53ea\u9700\u8981\u4e00\u4e2a$k$\u5927\u5c0f\u7684\u5806\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837\u6392\u5e8f\uff0c\u5bf9\u4e8e\u5f88\u5c0f\u5f88\u5c0f\u7684$k$\u6765\u8bf4\uff0c\u8fd1\u4f3c$O(N)$\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(N\\log K+K)$\u3002\n   \n## Code of two-pointer\uff1a\n```\ncpp\n#include<cstdio>\n#include<cstring>\n#include<vector>\nusing std::vector;//\u56e0\u4e3a\u4e0d\u77e5\u9053\u6bcf\u4e00\u79cd\u989c\u8272\u6709\u591a\u5c11\u4e2a\u6240\u4ee5\u7528vector\nstruct node\n{\n    int c,v;\n    node(int c,int v)\n    {\n        this->c=c;\n        this->v=v;\n    }\n    node()\n    {}\n    friend bool operator <(node a,node b)\n    {return a.v<b.v;}\n\n    friend bool operator >(node a,node b)\n    {return a.v>b.v;}\n\n}h[128],b[1000100];\nint l=0;\n//\u624b\u5199\u5806\u90e8\u5206\uff0c\u4f18\u5316\u5e38\u6570\nvoid push(node k)\n{\n    h[++l]=k;\n    int i=l;\n    while(i>1&&h[i]<h[i>>1])\n    {\n        node t=h[i];\n        h[i]=h[i>>1];\n        h[i>>1]=t;\n        i>>=1;\n    }\n    return;\n}\nvoid pop()\n{\n    int i=1;\n    h[1]=h[l--];\n    while((i<<1)<=l&&(h[i]>h[i<<1]||h[i]>h[i<<1|1]))\n        if((i<<1)==l||h[i<<1]<h[i<<1|1])\n        {\n            node t=h[i];\n            h[i]=h[i<<1];\n            h[i<<1]=t;\n            i<<=1;\n        }\n        else\n        {\n            node t=h[i];\n            h[i]=h[i<<1|1];\n            h[i<<1|1]=t;\n            i=i<<1|1;\n        }\n    return;\n}\nvector<int> v[66];\nint tt[66],now[66];//tt\u662f\u603b\u5171\u7684\u4e2a\u6570\uff0cnow\u662f\u73b0\u5728\u7684\u4e2a\u6570\uff0c\u7528\u4e8e\u5806\u6392\u5e8f\nint lst[66];//\u67d0\u79cd\u989c\u8272\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\nint used[66];//\u989c\u8272\u51fa\u73b0\u8fc7\u6ca1\u6709\uff0cused[0]\u8868\u793a\u4e00\u5171\u51fa\u73b0\u4e86\u591a\u5c11\u79cd\u989c\u8272\nint del[1000100],st=1;//\u5220\u9664\u6807\u8bb0\u548c\u5de6\u7aef\u70b9\nint main()\n{\n    memset(lst,0,sizeof(lst));\n    int n,k,u;\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=k;i++)\n        now[i]=1;\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d\",&tt[i]);\n        for(int j=1;j<=tt[i];j++)\n        {\n            scanf(\"%d\",&u);\n            v[i].push_back(u);\n        }\n    }\n\n    for(int i=1;i<=k;i++)\n        push(node(i,v[i][0]));\n    for(int i=1;i<=n;i++)//\u6392\u5e8f\u8fc7\u7a0b\n    {\n        b[i]=h[1];\n        pop();\n        if(now[b[i].c]<tt[b[i].c])\n            push(node(b[i].c,v[b[i].c][now[b[i].c]]));\n        now[b[i].c]++;\n    }\n    int ans=0x7fffffff;\n    for(int i=1;i<=n;i++)\n    {\n        if(!used[b[i].c])\n        {\n            used[b[i].c]=1;\n            used[0]++;\n        }\n        del[lst[b[i].c]]=true;\n        lst[b[i].c]=i;\n        if(used[0]==k)\n        {\n            while(del[st])//\u5220\u9664\u8be5\u5220\u9664\u7684\n                st++;\n            ans=ans<(b[i].v-b[st].v)?ans:(b[i].v-b[st].v);//\u66f4\u65b0\u7b54\u6848\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n## Code of Segmentree\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ls (k<<1)\n#define rs (k<<1|1)\n#define mid (l+r>>1)\n#define Mid (t[k].l+t[k].r>>1)\nint Min(int x,int y)\n{\n    return x<y?x:y;\n}\nstruct node\n{\n    int l,r,v;\n    node(int l,int r)\n    {\n        this->l=l;\n        this->r=r;\n        v=-1;\n    }\n    node()\n    {\n        v=-1;\n    }\n}t[500];\nvoid build(int k,int l,int r)\n{\n    t[k]=node(l,r);\n    if(l==r)\n        return;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n}\nvoid change(int k,int p,int x)\n{\n    if(t[k].l==t[k].r)\n    {\n        t[k].v=x;\n        return;\n    }\n    if(p<=Mid)\n        change(ls,p,x);\n    else\n        change(rs,p,x);\n    t[k].v=Min(t[ls].v,t[rs].v);\n    return;\n}\nint ask(int k,int l,int r)\n{\n    if(t[k].l==l&&t[k].r==r)\n        return t[k].v;\n    if(r<=Mid)\n        return ask(ls,l,r);\n    else if(l>Mid)\n        return ask(rs,l,r);\n    else\n        return Min(ask(ls,l,Mid),ask(rs,Mid+1,r));\n}\n\nstruct ball\n{\n    int c,p;\n    friend bool operator <(ball a,ball b)\n    {\n        return a.p<b.p;\n    }\n}a[1000010];\nint cnt=0;\nint main()\n{\n    int n,k,t,u;\n    scanf(\"%d%d\",&n,&k);\n    build(1,1,k);\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d\",&t);\n        for(int j=1;j<=t;j++)\n        {\n            scanf(\"%d\",&u);\n            a[++cnt].c=i;\n            a[cnt].p=u;\n        }\n    }\n    std::sort(a+1,a+1+n);\n    int ans=0x7fffffff;\n    for(int i=1;i<=n;i++)\n    {\n        change(1,a[i].c,a[i].p);\n        int tmp=ask(1,1,k);//\u66f4\u65b0\u6700\u665a\u503c\n        if(tmp==-1)//\u4e3a-1\u8bf4\u660e\u8fd8\u6709\u989c\u8272\u6ca1\u627e\u5230\n            continue;\n        ans=ans<(a[i].p-tmp)?ans:(a[i].p-tmp);\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1533471961,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011 \u5806\u4f18\u5316"
    },
    {
        "content": "\u7b14\u8005\u4e00\u5f00\u59cb\u5728\u8bd5\u70bc\u573a\u4e0a\u7684\u5355\u8c03\u961f\u5217\u680f\u76ee\u770b\u5230\u8fd9\u9898\uff0c\u770b\u5b8c\u9898\u76ee\u540e\uff0c\u9996\u5148\u60f3\u5230\u7684\u505a\u6cd5\u5374\u6ca1\u6709\u7528\u5230\u5355\u8c03\u961f\u5217\uff0c\u8fd9\u91cc\u59d1\u4e14\u5199\u4e00\u5199\u5427\u3002\n\t\n\u8fd9\u91cc\u8bb0\u7b54\u6848\uff08\u6700\u77ed\u5f69\u5e26\u957f\u5ea6\uff09\u4e3aans\u3002\n\t\n(1)\u9996\u5148\uff0c\u53d6\u6bcf\u79cd\u5f69\u73e0\u4e2d\u7684\u5750\u6807\u6700\u5c0f\u5f69\u73e0\uff0c\u5b58\u5165\u4e00\u4e2a\u96c6\u5408\uff08\u59d1\u4e14\u8bb0\u8fd9\u4e2a\u96c6\u5408\u4e3aA\uff09\u3002\n    \n(2)\u53d6\u96c6\u5408A\u4e2d\u7684\u5750\u6807\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\u66f4\u65b0ans\u3002\n    \n(3)\u63a5\u7740\uff0c\u628a\u5750\u6807\u6700\u5c0f\u503c\u7684\u5f69\u73e0\u4ece\u96c6\u5408A\u4e2d\u5220\u9664\uff0c\u53d6\u4e0e\u8be5\u5f69\u73e0\u540c\u79cd\u7c7b\u7684\u3001\u5750\u6807\u5927\u4e8e\u8be5\u5f69\u73e0\u5750\u6807\u7684\u5f69\u73e0\u4e2d\uff0c\u5750\u6807\u6700\u63a5\u8fd1\u8be5\u5f69\u73e0\u5750\u6807\u7684\u5f69\u73e0\uff0c\u653e\u5165\u96c6\u5408A\uff0c\u5982\u679c\u6ca1\u6709\u7b26\u5408\u8981\u6c42\u7684\u5f69\u73e0\uff0c\u5219\u6267\u884c(4)\uff0c\u5426\u5219\u56de\u5230(2)\u3002\n    \n(4)\u6b64\u65f6ans\u4e3a\u6700\u77ed\u5f69\u5e26\u957f\u5ea6\u3002\n\t\n\u56e0\u4e3a\u7ed9\u51fa\u7684\u5f69\u73e0\u5df2\u5206\u7c7b\uff0c\u4e14\u540c\u79cd\u5f69\u73e0\u7684\u5750\u6807\u5df2\u7ecf\u6309\u5347\u5e8f\u6392\u597d\u5e8f\uff0c\u6240\u4ee5\u5bf9\u4e8e\u201c\u4e0e\u8be5\u5f69\u73e0\u540c\u79cd\u7c7b\u7684\u3001\u5750\u6807\u5927\u4e8e\u8be5\u5f69\u73e0\u5750\u6807\u7684\u5f69\u73e0\u4e2d\uff0c\u5750\u6807\u6700\u63a5\u8fd1\u8be5\u5f69\u73e0\u5750\u6807\u7684\u5f69\u73e0\u201d\uff0c\u5176\u5b9e\u53d6\u4e0b\u4e00\u4e2a\u5f69\u73e0\u5c31\u597d\u4e86\u3002\n    \n\u5bf9\u4e8e\u96c6\u5408A\u4e2d\u7684\u5750\u6807\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\uff0c\u53ef\u5206\u522b\u7528**\u5927\u6839\u5806\u4e0e\u5c0f\u6839\u5806**\u7ef4\u62a4\uff0c\u6216\u8005\u662f\u7528**\u5e73\u8861\u6811**\u6765\u7ef4\u62a4\u4e5f\u53ef\u4ee5\u3002\n    \n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlogk)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u3002\n    \n\u4ee3\u7801\u5982\u4e0b\uff1a\n ```cpp\n#include<cstdio>\n#define maxn 1000005\n#define maxk 66\nint T[maxk],head[maxk],pos[maxk];\n//head[x]\u8868\u793a\u4e3a\u7b2c\u4e00\u4e2a\u79cd\u7c7bx\u7684\u5f69\u73e0\uff08\u4e5f\u662f\u79cd\u7c7bx\u4e2d\u5750\u6807\u6700\u5c0f\u7684\u5f69\u73e0\uff09\u5728\u6570\u7ec4a\u4e2d\u7684\u4f4d\u7f6e\n//pos[x]\u8868\u793a\u5f53\u524d\u53d6\u7684\u79cd\u7c7bx\u7684\u5f69\u73e0\u5728\u6570\u7ec4a\u4e2d\u7684\u4f4d\u7f6e\nint heap[2][maxk],location[2][maxk];\n//heap[0]\u4e3a\u5c0f\u6839\u5806\uff0cheap[1]\u4e3a\u5927\u6839\u5806\n//location[0][x]\u4e3a\u5f53\u524d\u53d6\u7684\u79cd\u7c7bx\u7684\u5f69\u73e0\u5728\u5c0f\u6839\u5806\u4e2d\u7684\u4f4d\u7f6e\n//location[1][x]\u4e3a\u5f53\u524d\u53d6\u7684\u79cd\u7c7bx\u7684\u5f69\u73e0\u5728\u5927\u6839\u5806\u4e2d\u7684\u4f4d\u7f6e\nint a[maxn];//\u5b58\u5f69\u73e0\u7684\u5750\u6807\nint n,k,cnt;\nint ans=0x3f3f3f3f;\nbool cmp(int x,int y,bool flag)\n{\n\tif (flag) return (a[pos[x]]>a[pos[y]]);\n\telse return (a[pos[x]]<a[pos[y]]);\n}\ninline void shiftup(int x,bool flag)\n{\n\twhile (x>1)\n\t\tif (cmp(heap[flag][x],heap[flag][x/2],flag))\n\t\t{\n\t\t\theap[flag][x]^=heap[flag][x/2]^=heap[flag][x]^=heap[flag][x/2];\n\t\t\tlocation[flag][heap[flag][x]]=x;\n\t\t\tlocation[flag][heap[flag][x/2]]=x/2;\n\t\t\tx/=2;\n\t\t}else break;\n}\ninline void shiftdown(int x,bool flag)\n{\n\tint i;\n\twhile (x*2<=heap[flag][0])\n\t{\n\t\ti=x*2;\n\t\tif (i+1<=heap[flag][0]&&cmp(heap[flag][i+1],heap[flag][i],flag)) i++;\n\t\tif (cmp(heap[flag][i],heap[flag][x],flag) )\n\t\t{\n\t\t\theap[flag][i]^=heap[flag][x]^=heap[flag][i]^=heap[flag][x];\n\t\t\tlocation[flag][heap[flag][x]]=x;\n\t\t\tlocation[flag][heap[flag][i]]=i;\n\t\t\tx=i;\n\t\t}else break;\n\t}\n}\ninline void add(int x)\n{\n\theap[1][++heap[1][0]]=heap[0][++heap[0][0]]=x;\n\tlocation[1][x]=location[0][x]=heap[0][0];\n\tshiftup(heap[0][0],0);\n\tshiftup(heap[1][0],1);\n}\ninline void repair(int x)\n{\n\tshiftup(location[0][x],0);\n\tshiftdown(location[0][x],0);\n\tshiftup(location[1][x],1);\n\tshiftdown(location[1][x],1);\n}\nint main()\n{\n\tint i,j;\n\tscanf(\"%d%d\",&n,&k);\n\tfor(i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%d\",&T[i]);\n\t\thead[i]=cnt+1;\n\t\tpos[i]=head[i];\n\t\tfor(j=1;j<=T[i];j++,cnt++) scanf(\"%d\",&a[cnt+1]);\n\t\tadd(i);\n\t}\n\twhile (1<2)\n\t{\n\t\tif (ans>a[pos[heap[1][1]]]-a[pos[heap[0][1]]])\n\t\t\tans=a[pos[heap[1][1]]]-a[pos[heap[0][1]]];\n\t\ti=heap[0][1];\n\t\tpos[i]++;//\u628a\u6240\u53d6\u7684\u79cd\u7c7bi\u7684\u5f69\u73e0\u6539\u4e3a\u79cd\u7c7bi\u7684\u4e0b\u4e00\u4e2a\u5f69\u73e0\n\t\tif (pos[i]>=head[i]+T[i]) break;\n\t\t//\u82e5\u539f\u672c\u6240\u53d6\u7684\u79cd\u7c7bi\u7684\u5f69\u73e0\u5750\u6807\u4e3a\u79cd\u7c7bi\u4e2d\u7684\u6700\u5927\u5750\u6807\uff0c\u5219\u9000\u51fa\u5faa\u73af\n\t\trepair(i);//\u7ef4\u62a4\u5927\u6839\u5806\u4e0e\u5c0f\u6839\u5806\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\t\n\u5176\u5b9e\u53ea\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\u7ef4\u62a4\u6700\u5c0f\u503c\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u5404\u4e2a\u79cd\u7c7b\u7684\u5f69\u73e0\u7684\u5750\u6807\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u6700\u5927\u503c\u4e5f\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6700\u5927\u503c\uff0c\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u53d8\u91cf\u7ef4\u62a4\u5c31\u597d\uff0c\u7b14\u8005\u65e2\u7528\u5c0f\u6839\u5806\u53c8\u7528\u5927\u6839\u5806\uff0c\u672a\u514d\u592a\u9ebb\u70e6\u4e86\u3002\n    \n\u611f\u8c22qinhaoyun\u7684\u6307\u5bfc\u3002\n    \n\u7b14\u8005\u7684\u8bed\u8a00\u8868\u8fbe\u80fd\u529b\u6709\u9650\uff0c\u53ef\u80fd\u6709\u4e9b\u5730\u65b9\u8868\u8fbe\u4e0d\u6e05\uff0c\u5982\u6709\u7591\u95ee\uff0c\u53ef\u4e0e\u7b14\u8005\u5728\u79c1\u4e0b\u4ea4\u6d41\u3002\n    ",
        "postTime": 1531659050,
        "uid": 21935,
        "name": "\u9505\u94a2Carl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u9605\u8bfb\u6548\u679c\u66f4\u4f73\u54e6](http://www.cnblogs.com/henry-1202/p/8666497.html)\n\n\u9898\u76ee\uff1a\n\nDescription\n\n\u5c0f\u897f\u6709\u4e00\u6761\u5f88\u957f\u7684\u5f69\u5e26\uff0c\u5f69\u5e26\u4e0a\u6302\u7740\u5404\u5f0f\u5404\u6837\u7684\u5f69\u73e0\u3002\u5df2\u77e5\u5f69\u73e0\u6709N\u4e2a\uff0c\u5206\u4e3aK\u79cd\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u53ef\u4ee5\u5c06\u5f69\u5e26\u8003\u8651\u4e3ax\u8f74\uff0c\u6bcf\u4e00\u4e2a\u5f69\u73e0\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u5750\u6807(\u5373\u4f4d\u7f6e)\u3002\u67d0\u4e9b\u5750\u6807\u4e0a\u53ef\u4ee5\u6ca1\u6709\u5f69\u73e0\uff0c\u4f46\u591a\u4e2a\u5f69\u73e0\u4e5f\u53ef\u4ee5\u51fa\u73b0\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u3002 \u5c0f\u5e03\u751f\u65e5\u5feb\u5230\u4e86\uff0c\u4e8e\u662f\u5c0f\u897f\u6253\u7b97\u526a\u4e00\u6bb5\u5f69\u5e26\u9001\u7ed9\u5c0f\u5e03\u3002\u4e3a\u4e86\u8ba9\u793c\u7269\u5f69\u5e26\u8db3\u591f\u6f02\u4eae\uff0c\u5c0f\u897f\u5e0c\u671b\u8fd9\u4e00\u6bb5\u5f69\u5e26\u4e2d\u80fd\u5305\u542b\u6240\u6709\u79cd\u7c7b\u7684\u5f69\u73e0\u3002\u540c\u65f6\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5c0f\u897f\u5e0c\u671b\u8fd9\u6bb5\u5f69\u5e26\u5c3d\u53ef\u80fd\u77ed\uff0c\u4f60\u80fd\u5e2e\u52a9\u5c0f\u897f\u8ba1\u7b97\u8fd9\u4e2a\u6700\u77ed\u7684\u957f\u5ea6\u4e48\uff1f\u5f69\u5e26\u7684\u957f\u5ea6\u5373\u4e3a\u5f69\u5e26\u5f00\u59cb\u4f4d\u7f6e\u5230\u7ed3\u675f\u4f4d\u7f6e\u7684\u4f4d\u7f6e\u5dee\u3002\n\nInput\n\n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570N, K\uff0c\u5206\u522b\u8868\u793a\u5f69\u73e0\u7684\u603b\u6570\u4ee5\u53ca\u79cd\u7c7b\u6570\u3002\u63a5\u4e0b\u6765K\u884c\uff0c\u6bcf\u884c\u7b2c\u4e00\u4e2a\u6570\u4e3aTi\uff0c\u8868\u793a\u7b2ci\u79cd\u5f69\u73e0\u7684\u6570\u76ee\u3002\u63a5\u4e0b\u6765\u6309\u5347\u5e8f\u7ed9\u51faTi\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u4e3a\u8fd9Ti\u4e2a\u5f69\u73e0\u5206\u522b\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\nOutput\n\n\u5e94\u5305\u542b\u4e00\u884c\uff0c\u4e3a\u6700\u77ed\u5f69\u5e26\u957f\u5ea6\u3002\n\nSample Input\n\n6 3\n\n1 5\n\n2 1 7\n\n3 1 3 8\n\nSample Output\n\n3\n\nHINT\n\n\u6709\u591a\u79cd\u65b9\u6848\u53ef\u9009\uff0c\u5176\u4e2d\u6bd4\u8f83\u77ed\u7684\u662f1~5\u548c5~8\u3002\u540e\u8005\u957f\u5ea6\u4e3a3\u6700\u77ed\u3002\n\n\u3010\u6570\u636e\u89c4\u6a21\u3011\n\n\u5bf9\u4e8e50%\u7684\u6570\u636e\uff0c N\u226410000\uff1b\n\n\u5bf9\u4e8e80%\u7684\u6570\u636e\uff0c N\u2264800000\uff1b\n\n\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c1\u2264N\u22641000000\uff0c1\u2264K\u226460\uff0c0\u2264\u5f69\u73e0\u4f4d\u7f6e<2^31\u3002\n\n\u9898\u89e3\uff1a\n\n\u5199\u6cd5\u5927\u610f\uff1a\u5355\u8c03\u961f\u5217\n\nsort\u4e00\u904d\u4fdd\u8bc1\u4f4d\u7f6e\u7684\u5355\u8c03\u6027\uff0c\u5f00\u4e00\u4e2apos\u6570\u7ec4\u5b58\u7b2ci\u79cd\u5f69\u5e26\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u51fa\u961f\u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\u90a3\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u662f\u5426\u4e0epos\u6570\u7ec4\u76f8\u540c\u5373\u53ef\uff08\u4e0d\u540c\u624d\u80fd\u51fa\u961f\uff09\n\n\u5c31\u6837\u4f8b\u6765\u6a21\u62df\u4e00\u6ce2\uff1a\n\n6 3\n1 5\n2 1 7\n3 1 3 8\n\n\u8fdb\u884c\u6392\u5e8f\u4ee5\u540e\u7684f\u6570\u7ec4\uff1a\n\nf[i].x\t2\t3\t3\t1\t2\t3\n\nf[i].y\t1\t1\t3\t5\t7\t8\n\n\uff08pos\u6570\u7ec4\u8981\u5148\u521d\u59cb\u5316\u4e3a-1\uff09\n\n\uff08len\u8981\u521d\u59cb\u5316\u4e3af[n].y-f[1].y\uff0c\u5373\u6700\u574f\u7684\u60c5\u51b5\uff08\u5426\u5219\u4f1a\u67095\u4e2a\u70b9\u6302\u6389(luogu\u4f1a\uff0cbzoj\u6ca1\u8bd5\u8fc7)\uff09\uff09\n\n\u5f53i=1\u65f6\n\npos[f[i].x]\u4e3a-1\uff0c\u90a3\u4e48f[i]\u5165\u961f\uff0c\u961f\u5217\u4e2d\u7684\u73e0\u5b50\u591a\u4e86\u4e00\u4e2a\u4e86\uff0ccnt++\n\n\u66f4\u65b0pos[f[i].x]\u7684\u503c\u4e3af[i].y\n\n\u5f00\u59cb\u51fa\u961f\u64cd\u4f5c\uff1a\n\n\u5f53\u961f\u5934head<=\u961f\u5c3ei\u4e14\u961f\u5934\u7684\u5143\u7d20\u6240\u5728\u4f4d\u7f6ef[head].y\uff01=\u8be5\u4f4d\u7f6e\u73e0\u5b50\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\uff08\u5373pos[f[head].x]\uff09\u65f6\u5c31\u53ef\u4ee5\u51fa\u961f\u4e86\uff01\n\n\u6700\u540e\u66f4\u65b0\u4e00\u4e0b\u7b54\u6848\uff1a\n\n\u5f53cnt\uff08\u961f\u5217\u5185\u73e0\u5b50\u79cd\u6570\uff09=k\uff08\u73e0\u5b50\u79cd\u6570\uff09\u65f6\u5c31\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\u4e86\uff01\n\nlen=min(len,f[i].y-f[head].y)\n\n\u8fd9\u6837\u4ece\u5934\u679a\u4e3e\u5230\u5c3e\u5c31\u597d\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\uff08nlogn\uff09\uff08\u6392\u5e8f\u9700\u8981nlogn\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff09\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define ll int\n#define min(x,y) x<y?x:y\ninline void read(ll &x){\n    x=0;ll f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    x*=f;\n}\nusing namespace std;\n#define N 1000010\nstruct node{ll x,y;}f[N];\n//x\u8868\u793a\u6240\u5c5e\u5f69\u73e0\u7c7b\u578b\uff0cy\u8868\u793aw\u4f4d\u7f6e\nll n,k,len,pos[N];\nbool cmp(node x,node y){return x.y<y.y;}\nint main(){\n    read(n);read(k);ll a,b=0;\n    for(ll i=1;i<=k;i++){\n        read(a);pos[i]+=a;\n        for(ll j=1;j<=a;j++){\n            read(f[++b].y);\n            f[b].x=i;\n        }\n    }\n    sort(f+1,f+n+1,cmp);\n    len=f[n].y-f[1].y;ll head=1,cnt=0;\n    memset(pos,-1,sizeof(pos));\n    for(ll i=1;i<=n;i++){\n        if(pos[f[i].x]==-1)cnt++;\n        pos[f[i].x]=f[i].y;\n        while(head<=i&&f[head].y!=pos[f[head].x])head++;\n        if(cnt==k&&f[i].y-f[head].y<len)len=f[i].y-f[head].y;\n    }\n    printf(\"%d\",len);\n    return 0;\n}\n```",
        "postTime": 1522498156,
        "uid": 36526,
        "name": "henry_y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "### \u770b\u4e86\u4e0b\u9898\u89e3\u91cc\u7684\u8bb2\u6cd5\u611f\u89c9\u6ca1\u592a\u7406\u89e3\uff0c\u81ea\u5df1\u5199\u4e00\u7bc7\u5427...\n\n\u9898\u76ee\u5927\u610f\uff1a\u6709n\u4e2ak\u79cd\u989c\u8272\u7684\u70b9\uff0c\u9009\u51fa\u4e00\u4e2a\u957f\u5ea6\u5c3d\u91cf\u77ed\u7684\u533a\u95f4\uff0c\u4f7f\u5f97\u6bcf\u79cd\u989c\u8272\u7684\u70b9\u90fd\u5728\u533a\u95f4\u5185\u51fa\u73b0\u3002\n\n\u7528\u961f\u5217\u5b9e\u73b0\u5373\u53ef\u3002\uff08\u8bf4\u771f\u7684\u4e0d\u592a\u61c2\u8fd9\u4e2a\u7b97\u4e0d\u7b97\u5355\u8c03\u961f\u5217\uff09\n\n\u9996\u5148\u6309\u7167\u5750\u6807\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\u6392\u5e8f\uff0c\u6709\u4e00\u4ef6\u4e8b\u662f\u663e\u7136\u7684\uff1a\u53f3\u7aef\u70b9\u6700\u9760\u5de6\u7684\u53ef\u9009\u533a\u95f4\u5e94\u8be5\u662f\u6bcf\u79cd\u989c\u8272\u5750\u6807\u7684\u6700\u5c0f\u503c\u7684\u6700\u5927\u503c\u3002\u4e5f\u5c31\u662f$\\max \\limits _{1<=i<=k}l[i]$\uff0c\u5176\u4e2d$l[i]$\u6307\u7b2c$i$\u79cd\u5f69\u73e0\u6700\u9760\u5de6\u7684\u4f4d\u7f6e\u3002\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u6bd4\u5982\u8bf4\u6837\u4f8b\uff0c\u8003\u8651\u5230\u5982\u679c\u53f3\u7aef\u70b9\u5c0f\u4e8e5\uff0c\u5219\u65e0\u8bba\u5982\u4f55\u4e5f\u4e0d\u53ef\u80fd\u5728\u533a\u95f4\u91cc\u51fa\u73b0\u7b2c\u4e00\u79cd\u5f69\u73e0\uff0c\u56e0\u6b64\u53f3\u7aef\u70b9\u7684\u6700\u5c0f\u503c\u4e3a5\u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u53d8\u91cfal\uff0c\u8868\u793a\u76ee\u524d\u5df2\u7ecf\u51fa\u73b0\u591a\u5c11\u79cd\u5f69\u73e0\uff0c\u53ea\u6709\u5f53$al=k$\u65f6\u624d\u66f4\u65b0\u7b54\u6848\u3002\n\n\u53e6\u5916\uff0c\u6211\u4eec\u8003\u8651\u5728\u53f3\u7aef\u70b9\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\u51b3\u5b9a\u6700\u4f18\u7684\u5de6\u7aef\u70b9\u4f4d\u7f6e\uff08\u5176\u5b9e\u5c31\u662f\u8981\u5c3d\u91cf\u9760\u53f3\uff09\uff0c\u4fdd\u8bc1\u6bcf\u79cd\u5f69\u73e0\u90fd\u6709\u51fa\u73b0\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f00\u53d8\u91cf$cnt[i]$\u8868\u793a\u7b2c$i$\u79cd\u5f69\u73e0\u76ee\u524d\u5728\u533a\u95f4\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u53e6\u5916\u7528\u4e00\u4e2a\u961f\u5217$q$\u4fdd\u5b58\u5f53\u524d\u5728\u533a\u95f4\u91cc\u7684\u5f69\u73e0\u3002\n\n\u5982\u679c\u961f\u9996\u5143\u7d20\uff08\u5750\u6807\u6700\u5c0f\uff09\u51fa\u73b0\u7684\u6b21\u6570\u5927\u4e8e1\uff0c\u5219\u53ef\u4ee5\u5220\u53bb\uff0c\u8fd9\u662f\u56e0\u4e3a\u5220\u53bb\u540e\u4f9d\u7136\u6709\u8fd9\u79cd\u5f69\u73e0\u5b58\u5728\uff0c\u5982\u679c\u51fa\u73b0\u7684\u6b21\u6570\u6070\u597d\u7b49\u4e8e1\uff0c\u5219\u4e0d\u80fd\u5220\u53bb\uff0c\u56e0\u4e3a\u5220\u53bb\u540e\u8fd9\u79cd\u5f69\u73e0\u5c31\u4e0d\u518d\u51fa\u73b0\u518d\u961f\u5217\u4e2d\u3002\n\n\u56e0\u6b64\u53ea\u8981\u7ef4\u62a4$cnt$\u6570\u7ec4\uff0c\u5e76\u5728\u679a\u4e3e\u65f6\u5c06\u5f53\u524d\u5f69\u73e0\u52a0\u5165\u961f\u5217\uff0c\u68c0\u67e5\u961f\u9996\u662f\u5426\u53ef\u4ee5\u5220\u53bb\uff0c\u5373\u53ef\u89e3\u51b3\u95ee\u9898\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u6392\u5e8f\u7684$O(nlogn)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct P {\n\tint x,u;\n}p[1000010];\nint cnt[70],al,n,k,t,ans,cnt1;\nqueue <P> q;\nbool cmp (P a,P b) {\n\treturn a.x<b.x;\n}\nint main () {\n\tans=1e9;\n\tscanf(\"%d%d\",&n,&k);\n\tfor (int i=1;i<=k;i++) {\n\t\tscanf(\"%d\",&t);\n\t\tfor (int j=1;j<=t;j++) {\n\t\t\tscanf(\"%d\",&p[++cnt1].x);\n\t\t\tp[cnt1].u=i;\n\t\t}\n\t}\n\tsort(p+1,p+n+1,cmp);\n\tfor (int i=1;i<=n;i++) {\n\t\tif (cnt[p[i].u]==0) {\n\t\t\tal++;\n\t\t}\n\t\tcnt[p[i].u]++;\n\t\tq.push(p[i]);\n\t\twhile (!q.empty()&&cnt[q.front().u]>1) {\n\t\t\tcnt[q.front().u]--;\n\t\t\tq.pop();\n\t\t}\n\t\tif (al==k) {\n\t\t\tans=min(ans,p[i].x-q.front().x);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1550577986,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "**~~\u4eca\u5929\u542c\u8001\u5e08\u8bb2\u5b8c\u624d\u604d\u7136\u5927\u609f~~**\n-\n\n**\u8fd9\u9898\u7684\u505a\u6cd5\u53eb\u201c\u53cc\u6307\u9488\u201d\uff0c\u5148\u662f\u5c06\u6240\u6709\u7684\u989c\u8272\u548c\u5b83\u7684\u4f4d\u7f6e\u653e\u5165\u5230\u4e00\u4e2a\u6570\u7ec4\u5185\uff0c\u6309\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u7528\u4e24\u4e2a\u6307\u9488\u6307\u5411\u5f00\u5934\uff0c\u6bcf\u6b21\u632a\u52a8\u5c3e\u6307\u9488\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u79cd\u989c\u8272\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u82e5\u7b2c\u4e00\u6b21\u4e3a1\uff0c\u5219\u989c\u8272\u603b\u6570\u52a0\u52a0\uff0c\u5f53\u989c\u8272\u603b\u6570\u4e3ak\u65f6\uff0c\u5148\u66f4\u65b0\u7b54\u6848\uff0c\u518d\u4e00\u6b21\u6b21\u632a\u52a8\u5934\u6307\u9488\uff0c\u6bcf\u6b21\u66f4\u65b0\u7b54\u6848\uff0c\u76f4\u5230\u989c\u8272\u603b\u6570\u4e0d\u4e3ak\u65f6\uff0c\u518d\u8df3\u51fa\u5faa\u73af\uff0c\u7ee7\u7eed\u53f3\u6307\u9488\u52a0\u52a0\uff0c\u76f4\u5230\u53f3\u6307\u9488\u5927\u4e8en\u65f6\uff0c\u6b64\u65f6\u518d\u632a\u52a8\u5de6\u6307\u9488\u5c31\u6ca1\u6709\u610f\u4e49\uff0c\u56e0\u4e3a\u989c\u8272\u603b\u6570\u6c38\u8fdc\u4e0d\u53ef\u80fd\u8fbe\u5230k\u4e86\uff0c\u6700\u540e\u8f93\u51fa\u7b54\u6848**\n\n**\u4e0b\u9762\u5c31\u662f\u4ee3\u7801\u5566**\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,s,b[61],cnt,ans=(1<<31)-1;\nstruct Node{\n\tint v,id;\n\tinline friend bool operator <(const Node &x,const Node &y){\n\t\treturn x.id<y.id;\n\t}\n}a[1000001];\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(register int i=1;i<=k;++i){\n\t\tint m;\n\t\tscanf(\"%d\",&m);\n\t\tfor(register int j=1;j<=m;++j){\n\t\t    a[++s].v=i;\n\t\t    scanf(\"%d\",&a[s].id);\n\t\t}\n\t}\n\tsort(a+1,a+n+1);\n\tfor(register int l=1,r=1;r<=n;){\n\t\tb[a[r].v]++;\n\t\tif(b[a[r].v]==1)cnt++;\n\t\tif(cnt==k){\n\t\t\tans=min(ans,a[r].id-a[l].id);\n\t\t\twhile(1){\n\t\t\t\tb[a[l].v]--;\n\t\t\t\tif(b[a[l].v]==0)cnt--;\n\t\t\t\tl++;\n\t\t\t\tif(cnt<k)break;\n\t\t\t\telse ans=min(ans,a[r].id-a[l].id);\n\t\t\t}\n\t\t}\n\t\tr++;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1565448960,
        "uid": 116078,
        "name": "\u98ce\u4e4b\u57ce0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "### \u601d\u8def\n\n\u6211\u89c9\u5f97\u5f88\u83ab\u540d\u5176\u5999\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u9053\u9898\u662f\u5355\u8c03\u961f\u5217\uff1f\u8fd8\u5728\u8bd5\u70bc\u573a\u3002\u53ea\u662f\u5177\u6709\u5355\u8c03\u6027\uff0c\u5e0c\u671b\u540c\u5b66\u4eec\u522b\u60f3\u590d\u6742\u4e86\n\n\u5c31\u4e00\u4e2a**two-pointer**\uff1b\n\n\u5148\u6309\u4f4d\u7f6e\u6392\u5e8f\uff0c\u7136\u540e\u76f4\u63a5\u4e0a\u53cc\u6307\u9488\u5373\u53ef\n\n\u6807\u5fd7\u662f:\u4e00\u4e2a\u6307\u9488\u5411\u4e00\u4e2a\u65b9\u5411\u52a8\uff0c\u53e6\u4e00\u4e2a\u6307\u9488\u4e5f\u53ea\u4f1a\u5355\u5411\u79fb\u52a8\u3002\n\n\u867d\u7136\u5f88\u663e\u7136\uff0c\u8fd8\u662f\u7ed9\u4e2a\u8bc1\u660e\uff1a\u53cd\u8bc1\u6cd5\u5373\u53ef\n\n\u8bbel1,r1,l2,r2\u4e3a\u4e24\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5c0f\u533a\u95f4\u4e14l1<l2,r2>r1\u3002\n\n\u90a3\u4e48\u663e\u7136l1\u4e0er2\u53ef\u4ee5\u518d\u7ec4\u6210\u4e00\u4e2a\u6700\u5c0f\u533a\u95f4\uff0c\u77db\u76fe\n\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000000+100;\nint vis[60+5];\nstruct node{\n\tint c,p;\n\tbool operator <(const node &rhs){\n\t\treturn p<rhs.p;\n\t}\n}a[maxn];\nint n,k,t,cnt,ans=INT_MAX;\nint main(){\n\tios::sync_with_stdio(false);\n    cin>>n>>k;\n\tfor(int i=1;i<=k;++i){\n\t\tcin>>t;\n\t\tfor(int j=1;j<=t;++j)\n\t\t\ta[++cnt].c=i,cin>>a[cnt].p;\n    }\n    sort(a+1,a+1+n);\n    int l=1,r=0;\n    cnt=0;\n    while(r<n){\n    \tif(!vis[a[++r].c])++cnt;\n    \tvis[a[r].c]++;\n\t\tif(cnt==k){\n\t\t\twhile(vis[a[l].c]!=1)vis[a[l++].c]--;\n\t\t\tif(ans>a[r].p-a[l].p)ans=a[r].p-a[l].p;\n\t\t\tvis[a[l++].c]--,cnt--;\n\t\t} \n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n\n\n```",
        "postTime": 1572262429,
        "uid": 58707,
        "name": "Edward_Elric",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "**\u5355\u8c03\u961f\u5217**\n\n[\u9898\u76ee](https://www.luogu.org/problem/P2564)\n\n\u5c06\u73e0\u5b50\u6309\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f9d\u6b21\u626b\u8fc7\u6bcf\u4e00\u9897\u73e0\u5b50\u3002\u5982\u679c\u8be5\u73e0\u5b50\u7684\u989c\u8272\u4e0e\u5355\u8c03\u961f\u5217\u5934\u90e8\u7684\u73e0\u5b50\u989c\u8272\u4e0d\u540c\uff0c\u5c06\u5176\u585e\u5165\u5355\u8c03\u961f\u5217\u672b\u5c3e\uff0c$tail++$ \u3002\u5982\u679c\u989c\u8272\u76f8\u540c\uff0c\u5219\u5c06\u5934\u90e8\u73e0\u5b50\u53bb\u6389$head++$ \u3002 \u5982\u679c\u52a0\u5165\u67d0\u9897\u73e0\u5b50\u540e\u6240\u6709\u989c\u8272\u7684\u73e0\u5b50\u90fd\u6709\u4e86\uff0c\u5219\u66f4\u65b0\u7b54\u6848\u3002**\u6ce8\u610f\u7ec6\u8282**\n\n\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nlong long n,k;\nstruct node{\n\tlong long val,pos;\n};\nnode a[1000010];\nstruct data{\n\tlong long poss,col;\n};\ndata q[1000010];\nlong long vis[70];        //\u7edf\u8ba1\u6bcf\u79cd\u989c\u8272\u7684\u73e0\u5b50\u5728\u5355\u8c03\u961f\u5217\u4e2d\u7684\u6570\u91cf \nlong long head,tail;\nbool cmp(const node &qw,const node &we){\n\treturn qw.pos<we.pos;\n}\nint main(){\n\t//freopen(\"data.in\",\"r\",stdin);\n\t//freopen(\"my.out\",\"w\",stdout);\n\tscanf(\"%lld %lld\",&n,&k);\n\tlong long num;\n\tlong long las=0;\n\tfor(long long i=1;i<=k;i++){\n\t\tscanf(\"%lld\",&num);\n\t\tfor(long long j=1;j<=num;j++){\n\t\t\tscanf(\"%lld\",&a[las+j].pos);\n\t\t\ta[las+j].val=i;\n\t\t}\n\t\tlas+=num;             //\u8bfb\u5165 \n\t}\n\tsort(a+1,a+las+1,cmp);\n\thead=1;\n\ttail=0;\n\tlong long ans=10000000000;\n\tfor(long long i=1;i<=las;i++){\n\t\tvis[a[i].val]++;\n\t\tq[++tail].poss=a[i].pos;\n\t\tq[tail].col=a[i].val;\n\t\twhile(head<=tail && vis[q[head].col]>1) vis[q[head].col]--,head++; //\u5224\u65ad\u5355\u8c03\u961f\u5217\u5934\u90e8\u73e0\u5b50\u662f\u5426\u5220\u53bb \n\t\tbool s=0;\n\t\tfor(long long j=1;j<=k;j++)\n\t\t\tif(!vis[j]){\n\t\t\t\ts=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(s==0){\n\t\t\tif(ans>q[tail].poss-q[head].poss) ans=q[tail].poss-q[head].poss;  //\u66f4\u65b0\u7b54\u6848 \n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n[\u53cc\u500d\u7ecf\u9a8c\uff1f\uff1f\uff1f\uff01\uff01\uff01](https://www.luogu.org/problem/P1638)",
        "postTime": 1565243278,
        "uid": 55843,
        "name": "ueettttuj",
        "ccfLevel": 0,
        "title": "P2564 [SCOI2009]\u751f\u65e5\u793c\u7269"
    },
    {
        "content": "\u6b64\u9898\u4e0d\u9700\u8981\u8003\u8651x\u8f74\u5750\u6807\uff0c\u53ea\u9700\u8003\u8651\u73e0\u5b50\uff0c\u601d\u8def\u90fd\u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u679a\u4e3e\u6700\u5de6\u8fb9\u7684\u73e0\u5b50\uff0c\n\n\u7136\u540e\u5411\u53f3\u5ef6\u4f38\u76f4\u5230\u73e0\u5b50\u79cd\u7c7b\u6570\u8fbe\u5230k\uff0c\u8fbe\u5230k\u4e4b\u540e\u518d\u5c06\u5de6\u7aef\u70b9\u53f3\u79fb\uff0c\u518d\u8fbe\u5230k\u79cd\uff0c\u66f4\u65b0\n\n\u6700\u5c0f\u503c\uff0c\u5927\u5bb6\u6ca1\u6709\u7528STL\u7684\uff0c\u6211\u5c31\u53d1\u4e00\u6ce2\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct cc{\n    int kind,p;\n};\nconst int maxn=1000010;\ncc a[maxn];\nint zhong[70],ans=0x7fffffff,m,n,l=0,k,sum=0;\nbool cmp(cc x,cc y)\n{\n    return x.p<y.p;\n}\nint main()\n{\n    scanf(\"%d %d\",&n,&k);\n    for (int i=1;i<=k;i++) \n        {\n            scanf(\"%d\",&m);\n            for (int j=1;j<=m;j++)\n            {\n                int pa;\n                scanf(\"%d\",&pa);\n                a[++l].p=pa;a[l].kind=i;\n            }    \n        }\n//\u9884\u5904\u7406\u73e0\u5b50\n    sort(a+1,a+n+1,cmp);//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    queue <cc> q;//\u5f00\u4e2a\u961f\u5217\n    for (int i=1;i<=n;i++)//\u679a\u4e3e\u5de6\u7aef\u70b9\n    {\n        q.push(a[i]);//\u8fdb\u961f\n        zhong[a[i].kind]++;\n        if (zhong[a[i].kind]==1) sum++;\n        while (sum==k)\n        {\n            cc e=q.back(),s=q.front();\n            if (ans>e.p-s.p) ans=e.p-s.p;//\u66f4\u65b0\n            q.pop();\n            zhong[s.kind]--;\n            if (zhong[s.kind]==0) sum--;\n        }\n    }\n    cout<<ans<<endl;\n}\n```",
        "postTime": 1509003268,
        "uid": 5912,
        "name": "laduiw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u4ece\u8bd5\u70bc\u573a\u770b\u5230\u8fd9\u9898\uff0c\u70b9\u8fdb\u6765\u4e00\u770b\uff0c\u54c7\u597d\u6e05\u771f\u3002\n\n\u5207\u5b8c\u9898\u540e\u70b9\u8fdb\u9898\u89e3\uff0c\u770b\u770b\u6709\u6ca1\u6709\u5176\u4ed6\u597d\u601d\u8def\u3002\u770b\u5230\u4e00\u4e2a\u201c\u533a\u95f4\u4f38\u7f29\u201d\uff0c\u7136\u540e\u770b\u4e86\u770b\u4ed6\u7684\u5199\u6cd5\uff0c\u53d1\u73b0\u6bd4\u8f83\u795e\u5947\uff0c\u53c8\u53d1\u73b0\u6211\u7684\u601d\u8def\u548c\u4ed6\u7684\u5dee\u4e0d\u591a\u3002\u5c31\u6765\u5199\u4e00\u7bc7\u9898\u89e3\u8865\u5145\u548c\u5b8c\u5584\u4e00\u4e0b\u4ed6\u7684\u9898\u89e3\u3002\n\n\u9996\u5148\u770b\u5230\u8fd9\u9053\u9898\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u5f88\u597d\u7528\u7684\u6027\u8d28\u3002\u5bf9\u4e8e\u9009\u5b9a\u4e00\u4e2a\u533a\u95f4$(l ,r)$, \u5f53\u6709\u4e00\u4e2a\u5b83\u540e\u9762\u7684\u533a\u95f4\u4e5f\u53ef\u4ee5\u6210\u4e3a\u7b54\u6848\u65f6\uff0c\u533a\u95f4\u53f3\u6bb5\u70b9\u5355\u8c03\u4e0d\u964d\u3002\u8bc1\u660e\u663e\u7136\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u53cc\u6307\u9488\u5207\u4e86\u8fd9\u9898\u3002\n\n\u8f93\u5165\u7684\u65f6\u5019\u53d1\u73b0\uff1a\u6b38\u8fd9\u4e2a\u4f4d\u7f6e\u600e\u4e48\u5230$2^{31}$\u6b21\u65b9\u554a\u3002\u6de6\uff0c\u79bb\u6563\u5316\u5427\u3002\n\n\u7136\u540e\u5b8c\u6210\u4e86\u8fd9\u4e48\u4e00\u4efd\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define N 1000005\n#define K 65\n\nint n, k, a[N][K], pos[K][N], b[N], num = 0, h[K];\n\nbool check()\n{\n\tfor(int i = 1; i <= k; i++) if(!h[i]) return 0;\n\treturn 1;\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &k);\n\tfor(int i = 1; i <= k; i++)\n\t{\n\t\tscanf(\"%d\", &pos[i][0]);\n\t\tfor(int j = 1; j <= pos[i][0]; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &pos[i][j]);\n\t\t\tb[++num] = pos[i][j];\n\t\t}\n\t}\n\tsort(b + 1, b + num + 1);\n\tnum = unique(b + 1, b + num + 1) - b - 1;\n\tfor(int i = 1; i <= k; i++)\n\t{\n\t\tfor(int j = 1; j <= pos[i][0]; j++)\n\t\t{\n\t\t\tint x = lower_bound(b + 1, b + num + 1, pos[i][j]) - b;\n\t\t\ta[x][i] = 1;\n\t\t}\n\t}\n\tint r = 0, ans = INT_MAX;\n\tfor(int l = 1; l <= num; l++)\n\t{\n\t\tfor(int j = 1; j <= k; j++) h[j] -= a[l - 1][j];\n\t\twhile(!check() && r < num)\n\t\t{\n\t\t\tr++;\n\t\t\tfor(int j = 1; j <= k; j++) h[j] += a[r][j];\n\t\t}\n\t\t// cout << l << ' ' << r << endl;\n\t\tif(check()) ans = min(ans, b[r] - b[l]);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n\u4e00\u4ea4\uff0c\u6b38\u4ed6\u600e\u4e48MLE\u4e86\u3002\n\n\u8d76\u7d27\u6539\u4e00\u53d1vector\uff0c \u6539\u5b8c\u4e00\u4ea4\uff0c\u6b38\u4ed6\u600e\u4e48TLE\u4e86\u3002\u5f00\u4e2aO2\uff0c\u7ec8\u4e8e\u8fc7\u4e86\u3002\n\n\u6700\u540e\u9644\u4e0aAC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define N 1000005\n#define K 61\n\nint n, k, b[N], num = 0, h[K], T[K];\n\nvector <int> pos[K];\nvector <int> a[N];\n\nbool check()\n{\n\tfor(int i = 1; i <= k; i++) if(!h[i]) return 0;\n\treturn 1;\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &k);\n\tfor(int i = 1; i <= k; i++)\n\t{\n\t\tscanf(\"%d\", &T[i]);\n\t\tfor(int j = 1; j <= T[i]; j++)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\", &x);\n\t\t\tpos[i].push_back(x);\n\t\t\tb[++num] = x;\n\t\t}\n\t}\n\tsort(b + 1, b + num + 1);\n\tnum = unique(b + 1, b + num + 1) - b - 1;\n\tfor(int i = 1; i <= k; i++)\n\t{\n\t\tfor(int j = 0; j < T[i]; j++)\n\t\t{\n\t\t\t// cout << j << endl;\n\t\t\tint x = lower_bound(b + 1, b + num + 1, pos[i][j]) - b;\n\t\t\ta[x].push_back(i);\n\t\t}\n\t}\n\tint r = 0, ans = INT_MAX;\n\tfor(int l = 1; l <= num; l++)\n\t{\n\t\tfor(int j = 0; j < a[l - 1].size(); j++) \n\t\t{\n\t\t\th[a[l - 1][j]]--;\n\t\t}\n\t\twhile(!check() && r < num)\n\t\t{\n\t\t\tr++;\n\t\t\tfor(int j = 0; j < a[r].size(); j++) h[a[r][j]]++;\n\t\t}\n\t\tif(check()) ans = min(ans, b[r] - b[l]);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1581580073,
        "uid": 54544,
        "name": "LJB00131",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "## \u9898\u76ee\n\n[\u94fe\u63a5](<https://www.luogu.com.cn/problem/P2564>)\n\n\u8fd9\u9898\u867d\u7136\u662f\u5355\u8c03\u961f\u5217\uff0c\u4f46\u6211\u5e76\u6ca1\u6709\u7528\u5b83\u3002\n\n\n## \u601d\u8def\n\n\u4e4b\u524d\u88abAkarui\u6293\u53bb\u505acodechef\u65f6\u6709\u4e00\u9053\u8f6c\u6362\u4e00\u4e0b\u540e\u548c\u8fd9\u9898\u6709\u70b9\u50cf\u7684\u9898\uff0c\u5c31\u8fd9\u6837\u505a\u6389\u4e86\u3002\n\n\u8003\u8651\u8981\u5305\u542b\u6240\u6709\u79cd\u7c7b\u7684\u73cd\u73e0\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e00\u79cd\u73cd\u73e0\u5728\u54ea\u4e9b\u4f4d\u7f6e\u5904\u7406\u51fa\u6765\u3002\u53ea\u8981\u6bcf\u4e00\u79cd\u73cd\u73e0\u90fd\u6709\u81f3\u5c11\u53d6\u4e00\u4e2a\u4f4d\u7f6e\u5c31\u7b26\u5408\u8981\u6c42\u4e86\u3002\n\n\u8fd9\u4e00\u6761\u5f69\u5e26\u7684\u957f\u5ea6\u5c31\u662f\u6211\u4eec\u4ece\u6bcf\u4e00\u79cd\u73cd\u73e0\u4e2d\u53d6\u51fa\u7684\u4f4d\u7f6e\u4e2d\u7684**\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee**\u3002\n\n\u8003\u8651\u5c06**\u6bcf\u4e00\u79cd\u73cd\u73e0\u770b\u6210\u4e00\u884c**\uff0c\u8fd9\u4e00\u884c\u7684\u6570\u5b57\u5c31\u662f\u8fd9\u79cd\u73cd\u73e0\u51fa\u73b0\u7684\u90a3\u4e9b\u4f4d\u7f6e\u3002\n\n\u9898\u76ee\u5c31\u662f\u8981\u4f60\u6c42\u51fa\u5728\u6bcf\u4e00\u884c\u4e2d\u53d6\u51fa\u4e00\u4e2a\u6570\uff0c\u8fd9\u4e9b\u6570\u4e2d\u7684**\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee**\u7684\u6700\u5c0f\u503c\u3002\n\n\u662f\u4e0d\u662f\u770b\u5230\u8fd9\u5c31\u60f3\u660e\u767d\u4e86\u5440\uff1f \u90a3\u7ee7\u7eed\u3002\n\n\u5c06\u6bcf\u4e00\u884c\u7684\u6570**\u4ece\u5c0f\u5230\u5927\u6392\u5e8f**\uff0c\u6bcf\u4e00\u884c\u90fd\u6709\u4e00\u4e2a\u6307\u9488\uff0c\u521d\u59cb\u65f6\u6307\u7740\u7b2c\u4e00\u4e2a\u6570\n\n\u627e\u5230\u6bcf\u4e00\u884c\u6307\u9488\u6307\u7684\u6570\u4e2d\u7684\u6700\u5c0f\u503c\u3001\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u8fd9\u4e00\u884c\u3002\n\n\u66f4\u65b0\u4e00\u4e0b\u7b54\u6848\uff0c\u518d\u5c06\u6700\u5c0f\u503c\u8fd9\u4e00\u884c\u7684\u6307\u9488\u5411\u540e\u79fb\u4e00\u4f4d\u3002\u6700\u5c0f\u503c\u6539\u53d8\u3002\n\n \u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u590d\u6742\u5ea6$O(n log_2 n+n )$?\uff08\u611f\u89c9\u5f88\u5c11\u88ab\u5361\u6ee1\uff0c\u8fd8\u6709\u6392\u5e8f\u8fd9\u91cc\u5e94\u8be5\u4e0d\u5230$O(n log_2 n)$\uff09\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6+7,maxk=66,inf=(1ll<<31)-1;\ninline int read(){\n\tint x=0,f=1;char C=getchar();\n\twhile(!isdigit(C)) {if(C=='-') f=-1;C=getchar();}\n\twhile(isdigit(C)) x=(x<<1)+(x<<3)+C-'0',C=getchar();\n\treturn x*f;\n}\nint n,k,len[maxk],p[maxn],ans;\nvector<int> a[maxk];\nint main(){\n\tn=read(),k=read();\n\tfor(int i=1;i<=k;i++){\n\t\tlen[i]=read();\n\t\tfor(int j=1,x;j<=len[i];j++)\n\t\t  x=read(),a[i].push_back(x);\n\t\tsort(a[i].begin(),a[i].end());\n\t} ans=inf;\n\twhile(1){\n\t\tint Max=0,Min=inf,k1,k2;\n\t\tfor(int i=1;i<=k;i++){\n\t\t\tif(a[i][p[i]]>Max) Max=a[i][p[i]],k1=i;\n\t\t\tif(a[i][p[i]]<Min) Min=a[i][p[i]],k2=i;\n\t\t}\n\t\tans=min(ans,Max-Min);\n\t\tp[k2]++;\n\t\tif(p[k2]==len[k2]) break;//\u8fd9\u65f6\u518d\u5f80\u540e\u79fb\u6700\u5c0f\u503c\u4e0d\u4f1a\u53d8\uff0c\u76f4\u63a5\u7ed3\u675f\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u7b80\u5355\u5427\uff01\u5bf9\u5427\uff01\uff08\u8457\u540d$Venus$\u5728\u6307\u5bfc\u849f\u84bb\u65f6\u5e38\u8bf4\u7684\u8bdd\uff09\n\n\u89e3\u91ca\u4e00\u4e0b\u6211\u4e3a\u4ec0\u4e48\u6ca1\u4e00\u904dA\uff0c\u56e0\u4e3a\u6211$Min$\u8fd9\u91cc\u521d\u59cb\u5316\u7684$inf$\u4e0d\u591f\u5927\u3002\u3002\u3002\uff08\u76f4\u63a52147483647)",
        "postTime": 1574951534,
        "uid": 47757,
        "name": "dunko",
        "ccfLevel": 6,
        "title": "\u751f\u65e5\u793c\u7269"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\u7ed9\u5b9a$n$($<=1e6$)\u4e2a\u73e0\u5b50\uff0c\u5206\u4e3a$k$\u4e2a\u79cd\u7c7b\u3002\u63a5\u4e0b\u6765$k$\u884c\u6bcf\u884c\u4e00\u4e2a$t_i$\uff08\u4fdd\u8bc1$t_i$\u7684\u548c$=n$\uff09\uff0c\u8868\u793a\u8fd9\u79cd\u73e0\u5b50\u6709$t_i$\u4e2a\u3002\u7136\u540e\u662f$t_i$\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u8868\u793a\u8fd9\u79cd\u73e0\u5b50\u51fa\u73b0\u7684\u4f4d\u7f6e\uff08\u4f4d\u7f6e$<=1e9$\uff09\u3002\n\u8bf7\u4f60\u627e\u4e00\u6bb5\u533a\u95f4\uff0c\u4f7f\u5f97\u5b83\u5305\u542b\u6240\u6709\u7c7b\u578b\u7684\u73e0\u5b50\u5e76\u4e14\u957f\u5ea6\u6700\u5c0f\u3002\n### \u6570\u636e\n\u8f93\u5165\uff1a    \n6 3    \n1 5    \n2 1 7    \n3 1 3 8    \n\u8f93\u51fa\uff1a    \n3\n##### \u89e3\u91ca\uff1a\n![blog1.png](https://i.loli.net/2019/04/16/5cb596a28b358.png)\n\u7ea2\u8272\uff1a\u7b2c\u4e00\u7c7b\n\u84dd\u8272\uff1a\u7b2c\u4e8c\u7c7b\n\u7eff\u8272\uff1a\u7b2c\u4e09\u7c7b\n\u6709\u591a\u79cd\u65b9\u6848\u53ef\u9009\uff0c\u5176\u4e2d\u6bd4\u8f83\u77ed\u7684\u662f1~ 5\u548c5 ~8\u3002\u540e\u8005\u957f\u5ea6\u4e3a3\u6700\u77ed\u3002\n\n### \u601d\u8def\nwoc\u73e0\u5b50\u4f4d\u7f6e\u600e\u4e48\u8fd9\u4e48\u5927\u3002\u3002\u3002\u6240\u4ee5\u8fd9\u544a\u8bc9\u6211\u4eec\u8981\u6253\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58\u4e0b\u6240\u6709\u73e0\u5b50\uff0c\u7136\u540e\u6309\u4f4d\u7f6e\u8fdb\u884c\u4e00\u6b21\u6392\u5e8f\u3002\n\u7136\u540e\u624d\u8fdb\u884c\u66b4\u529b\u3002\u679a\u4e3e\u4e00\u4e2a$l$\uff0c\u8868\u793a\u6211\u4eec\u73b0\u5728\u8003\u8651\u7684\u73e0\u5b50\u662f\u6392\u5e8f\u540e\u7684\u7b2c$l$\u4e2a\u3002\u7136\u540e\u6211\u4eec\u627e\u4e00\u4e2a$r$\uff08$O(n)$\u66b4\u529b\u627e\uff09\uff0c\u4f7f\u5f97\u4ece$l$\u5230$r$\u4e4b\u95f4\u5305\u542b\u6240\u6709\u7c7b\u578b\u7684\u73e0\u5b50\uff0c\u7136\u540e\u53d6\u4e00\u4e0b\u6700\u5c0f\u503c\u4fdd\u5b58\u5230$ans$\u3002\n\u8fd9\u662f$O(n^2)$\u7684\u3002\u4f46\u662f\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u3002\u3002\u3002\n\n\u6bcf\u6b21$l$\u5f80\u53f3\u79fb\u7684\u65f6\u5019\uff0c\u73e0\u5b50\u662f\u4e0d\u4f1a\u66f4\u591a\u7684\uff0c\u53ea\u4f1a\u5c11\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u7684$r$\u4e0d\u4f1a\u6bd4\u4e0a\u4e00\u6b21\u7684$r$\u5c0f\uff0c\u5373$r$\u4e5f\u662f\u5355\u8c03\u975e\u964d\u7684\u3002\u8fd9\u4e2ar\u597d\u50cf\u662f\u5355\u8c03\u975e\u964d\u7684\uff0c\u4e0d\u5982\u6211\u4eec\u628a\u5b83\u3002\u3002\u3002~~\u5403\u4e86~~ \u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u6bcf\u6b21\u4e0d\u65ad\u53f3\u79fb\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u4f46\u73b0\u5728\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u5982\u4f55\u8bb0\u5f55$l++$\u4e4b\u540e\u7684\u5269\u4f59\u5143\u7d20\u60c5\u51b5\u4ee5\u53ca\u5143\u7d20\u4e2a\u6570\u5462\uff1f\n\u5f00\u4e00\u4e2a$cnt$\u6570\u7ec4\uff0c$cnt[i]$\u8bb0\u5f55\u79cd\u7c7b$i$**\u51fa\u73b0\u4e86\u51e0\u6b21**\uff0c\u8fd8\u6709\u4e00\u4e2a$total$\u8bb0\u5f55**\u6709\u591a\u5c11\u5143\u7d20**\u3002    \n\u7136\u540e$l++$\u7684\u65f6\u5019\uff0c\u5148\u628a$l$\u8fd9\u4e2a\u73e0\u5b50\u4e0a\u7684$cnt--$\uff0c\u7136\u540e\u5982\u679c$cnt==0$\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u73e0\u5b50\u6ca1\u4e86\uff0c\u5c31\u8981\u628a$total$\u4e5f$--$\u3002\u8bb0\u5f55\u5b8c\u4e4b\u540e\u518d$l++$\u3002\n$r++$\u7684\u65f6\u5019\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u987a\u5e8f\u4e0d\u4e00\u6837\uff0c\u662f\u5148$r++$\uff0c\u7136\u540e\u8bb0\u5f55\u3002\uff08\u60f3\u60f3\u4e3a\u4ec0\u4e48\uff09\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define N 1001000\n#define K 61\nusing namespace std;\n\nstruct node//\u73e0\u5b50\n{\n    int type,pos;\n    const bool operator<(const node CompWith) const//\u6309\u4f4d\u7f6e\u6392\u5e8f\n    {\n        return pos<CompWith.pos;\n    }\n}pearl[N];\nint n,k;\nint R;\nvoid Input()\n{\n    scanf(\"%d%d\",&n,&k);\n    int p_pearl=0;//\u8bb0\u5f55\u662f\u603b\u5171\u591a\u5c11\u4e2a\uff0c\u7531\u9898\u610f\uff0c\u5230\u6700\u540e\u8fd9\u4e2ap_pearl\u5e94\u8be5=n\n    for(int i=1;i<=k;i++)\n    {\n        int t;scanf(\"%d\",&t);\n        while(t--)\n        {\n            int pos;\n            scanf(\"%d\",&pos);\n            pearl[++p_pearl]=(node){i,pos};\n            R=max(R,pos);//\u4e00\u5f00\u59cb\u60f3\u7528\u7684\uff0c\u540e\u6765\u53d1\u73b0\u6ca1\u7528\u3002\u3002\u3002\u8bf7\u5ffd\u7565\u5b83\u3002\u3002\u3002\n        }\n    }\n\n\n}\n\nint cnt[K],total;\nvoid Solve()\n{\n    memset(cnt,0,sizeof(cnt));\n    total=0;\n    sort(pearl+1,pearl+n+1);//\u4e0d\u6392\u5e8f\u89c1\u6bd4\u5229\u4e86\u3002\u3002\u3002\n\n    int l=1,r=0;//\u8c03\u4e86\u597d\u4e45\u624d\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u3002\u3002\u3002\n    while(r<=n and total<k)\n    {\n        ++r;//r\u5148\u52a0\n        //\u539f\u56e0\u662fl++\u7684\u65f6\u5019\u6211\u4eec\u662f\u8981\u5220\u9664\u7684\u662fl\uff0c\u7136\u540el++\u3002\u5728r++\u7684\u65f6\u5019\uff0c\u6211\u4eec\u662f\u8981\u52a0\u5165r+1,\u7136\u540er++\u3002\u6240\u4ee5\u8fd8\u4e0d\u5982\u5148r++\u7136\u540e\u5904\u7406\uff0c\u5426\u5219\u4e0b\u9762\u5c31\u8981\u5199\u6210\n        /*\n        ++cnt[pearl[r+1].type];\n        if (cnt[pearl[r+1].type]==1)\n        {\n            ++total;\n        }\n        r++;\n        */\n        //\u591a\u9ebb\u70e6\u3002\u3002\u3002\n        ++cnt[pearl[r].type];\n        if (cnt[pearl[r].type]==1)//\u8bf4\u660er\u7684\u8fd9\u4e2a\u79cd\u7c7b\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u6240\u4ee5total++\n        {\n            ++total;\n        }//\u518d\u8bb0\u5f55\n    }\n\n    int ans=pearl[r].pos-pearl[l].pos;\n    while(l<=n and r<=n)\n    {\n        ans=min(ans,pearl[r].pos-pearl[l].pos);//\u6ce8\u610f:\u4e0d\u7528+1\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf45\u548c8\u7684\u8ddd\u79bb\u662f3\u3002\u3002\u3002\n\n        cnt[pearl[l].type]--;\n        if (cnt[pearl[l].type]==0)\n        {\n            total--;\n        }//\u5148\u5220\u9664\n        l++;//\u518dl++\n\n        while(total<k and r<=n)\n        {\n            ++r;//\u5148++r(++r\u548cr++\u867d\u7136\u6709\u533a\u522b\uff0c\u4f46\u662f\u5728\u8fd9\u91cc\u662f\u4e00\u6837\u7684\uff0c\u5148\u5199++\u8fd8\u662f\u5148\u5199r\u6309\u5fc3\u60c5\u3002\u3002\u3002)\n            cnt[pearl[r].type]++;\n            if (cnt[pearl[r].type]==1)\n            {\n                total++;\n            }//\u7136\u540e\u8bb0\u5f55\n        }\n        if (r==n+1) break;//\u9632\u7206\n    }\n    printf(\"%d\\n\",ans);\n}\nmain()\n{\n    Input();\n    Solve();\n    return 0;\n}\n```\n\u683c\u5f0f\u6ca1\u7206\uff0c\u5b8c\u7f8e",
        "postTime": 1555414623,
        "uid": 106252,
        "name": "LightningUZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u5b9e\u9645\u4e0a\u5c31\u6392\u4e86\u4e2a\u5e8f...\\_(:\u0437\u309d\u2220)_\n\n\u73e0\u5b50\u8f93\u5165\u540e\u6309\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u7136\u540e\u53f3\u7aef\u70b9\u4ece\u5de6\u5230\u53f3\u679a\u4e3e\uff0c\u7ef4\u62a4\u4e00\u4e0b\u5de6\u7aef\u70b9\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u91cc\u7684\u5de6\u53f3\u7aef\u70b9\u662f\u6307\u73e0\u5b50\u6570\u7ec4\u91cc\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u540c\u65f6\u4e5f\u7b26\u5408\u5b9e\u9645\u5750\u6807\u91cc\u7684\u5de6\u53f3\u7aef\u70b9\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u7ef4\u62a4\u6bcf\u79cd\u73e0\u5b50\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\uff08\u4e00\u5f00\u59cb\u662f-1\uff09\u3002\u82e5\u5de6\u7aef\u70b9\u7684\u73e0\u5b50\u5df2\u7ecf\u5728\u540e\u9762\u51fa\u73b0\u8fc7\uff0c\u5219\u5de6\u7aef\u70b9++\u3002\n\n\u7136\u540e\u5982\u679c\u6240\u6709\u7684\u73e0\u5b50\u90fd\u5df2\u7ecf\u51fa\u73b0\u8fc7\u4e86\uff0c\u5219\u5de6\u7aef\u70b9\u66f4\u6539\u4e4b\u540e\u66f4\u65b0\u7b54\u6848\u3002\n\n\u590d\u6742\u5ea6$O(n\\ log\\ n)$ \\_(:\u0437\u309d\u2220)_ \u5e38\u6570\u8f83\u5c0f\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n// Code by ajcxsu\n// Problem: P2564\n#include<bits/stdc++.h>\n#define rint register int\nusing namespace std;\n\nconst int N=1e6+10;\nconst int K=61;\nint pos[K];\nstruct Jewel {\n    int t,p;\n} je[N];\nint p;\n\ninline bool cmp(const Jewel &a, const Jewel &b) {\n    return a.t<b.t;\n}\n\ninline void gn(int &x) {\n    x=0;\n    register char ch=getchar();\n    while(ch<'0' || ch>'9') ch=getchar();\n    while(ch>='0' && ch<='9') x=x*10+ch-'0', ch=getchar();\n}\n\nint main() {\n    memset(pos,-1,sizeof(pos));\n    int n,k;\n    int ans=0x3f3f3f3f;\n    gn(n), gn(k);\n    int ti;\n    for(int i=0;i<k;i++) {\n        gn(ti);\n        for(rint j=0;j<ti;j++)\n            gn(je[p].t), je[p++].p=i;\n    }\n    sort(je,je+p,cmp);\n    \n    int l,r,cnt=0;\n    l=0;\n    for(int i=0;i<n;i++) {\n        if(pos[je[i].p]==-1) cnt++;\n        pos[je[i].p]=je[i].t;\n        while(l!=i && je[l].t<pos[je[l].p]) l++;\n        if(cnt==k && ans>je[i].t-je[l].t) ans=je[i].t-je[l].t;\n    }\n    \n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1517910897,
        "uid": 5554,
        "name": "Sino_E",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u4f60\u4eec\u60f3\u554a\uff0c\u4e0d\u5c31\u662f\u8981\u96c6\u9f50\u6240\u6709\u7684\u7684\u79cd\u7c7b\u561b\n\n\u6211\u4eec\u5c31\u5148\u628an\u4e2a\u6570\u6392\u4e2a\u5e8f\uff0c\u8ba9\u4ed6\u4eec\u7684\u5750\u6807\u4ece\u5c0f\u5230\u5927\n\n\u7136\u540e\u641e\u4e2a\u961f\u5217\uff0c\u628a\u6570\u4e00\u4e2a\u4e00\u4e2a\u585e\u8fdb\u53bb\uff0c\u5f53\u961f\u5217\u4e2d\u7684\u79cd\u7c7b\u9f50\u5168\u65f6\u66f4\u65b0\u7b54\u6848\uff0c\u518d\u628a\u6570\u5b57\u5148\u8fdb\u5148\u51fa\u5730\u5f39\u51fa\uff0c\n\n\u4e0d\u5c31\u597d\u4e86\u5417\n\nO\uff08N\uff09AC\u554a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct xxx{\n    int x,y;//x\u662f\u5750\u6807 y\u662f\u79cd\u7c7b \n}a[1000001],f[1000001];\nint b[100];\nint n,m,N,l,ans,sum,r;\nbool cmp(xxx x,xxx y){\n    return x.x<y.x;\n}\nvoid in(xxx a){\n    r++;\n    f[r]=a;\n    b[a.y]++;\n    if(b[a.y]==1)sum++;\n}\nvoid out(){\n    b[f[l].y]--;\n    if(b[f[l].y]==0)sum--;\n    l++;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&N);\n    for(int i=1;i<=N;i++){\n        scanf(\"%d\",&m);\n        for(int j=1;j<=m;j++){\n            l++;\n            scanf(\"%d\",&a[l].x);\n            a[l].y=i;\n        }\n    }\n    sort(a+1,a+n+1,cmp);\n    l=1;r=0;ans=1e9;\n    for(int i=1;i<=n;i++){\n        in(a[i]);\n        while(sum==N){//sum\u5c31\u662f\u5f53\u524d\u961f\u5217\u91cc\u6709\u591a\u5c11\u603b\u7c7b \n            ans=min(ans,f[r].x-f[l].x);\n            out();\n        }\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1484034909,
        "uid": 7442,
        "name": "\u5de8\u578b\u65b9\u5757",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u5f88\u660e\u663e\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u7684$l$\uff0c$r$\u8d8a\u5927\u8d8a\u53ef\u80fd\u6210\u7acb\n\n\u8fd9\u7b26\u5408\u5355\u8c03\u6027\uff0c\u5bf9\u4e8e\u7b26\u5408\u6761\u4ef6\u7684\u67d0\u4e2a$r$\uff0c\u5c06\u5de6\u7aef\u70b9\u4e00\u76f4\u79fb\u52a8\u5230\u521a\u597d\u7b26\u5408\u6761\u4ef6\u4e00\u5b9a\u6700\u4f18\n\n\u76f4\u63a5\u53cc\u6307\u9488\uff0c\u6ce8\u610f\u4e00\u6b21\u5220\u9664\u8981\u5220\u9664\u6240\u6709\u4f4d\u7f6e\u76f8\u540c\u7684\u5f69\u73e0\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<set>\n#include<queue>\n#define M 2000100\n#define inf 2e9\n#define LL long long\n#define ull unsigned long long\nconst int mod=998244353;\nconst int base=137;\nconst int maxval=200000;\nusing namespace std;\ninline int read(){\n\tint f=1,x=0;char s=getchar();\n\twhile (!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n\twhile (isdigit(s)){x=(x<<1)+(x<<3)+(s^48),s=getchar();}\n\treturn x*f;\n}\nint n,k,tot,cnt[100],ans=inf,cnte;\nstruct node{\n\tint pos,val;\n\tbool operator <(const node&a)const{\n\t\treturn pos<a.pos;\n\t}\n}st[M];\ninline void add(int x){\n\tif (!cnt[x]) tot++;cnt[x]++;\n}\ninline void dele(int x){\n\tif (cnt[x]==1) tot--;cnt[x]--;\t\n}\nsigned main(void){\n\tn=read(),k=read();\n\tfor (int i=1;i<=k;i++){\n\t\tint x=read();\n\t\tfor (int j=1;j<=x;j++) st[++cnte].pos=read(),st[cnte].val=i;\n\t}int l=1,r=0;sort(st+1,st+n+1);\n\twhile (r<n){\n\t\tr++,add(st[r].val);\n\t\twhile (tot==k){\n\t\t\tans=min(ans,st[r].pos-st[l].pos);\n\t\t\tdele(st[l].val),l++;\n\t\t\twhile (st[l-1].pos==st[l].pos) dele(st[l].val),l++;\n\t\t}\n\t}printf(\"%d\",ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1596253590,
        "uid": 78290,
        "name": "Polaris_Dane",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u53d1\u73b0\u6ca1\u6709\u548c\u6211\u7684\u60f3\u6cd5\u76f8\u540c\u7684\u9898\u89e3\uff08\u4e3b\u8981\u662f\u6211\u601d\u8def\u50f5\u5316\u60f3\u5230\u7684\u65b9\u6cd5\u4e0d\u592a\u6b63\u5e38\uff09\n\n### \u7b97\u6cd5\u6d41\u7a0b\n\nStep 1\n\n\u9009\u62e9\u4e00\u79cd\u4e2a\u6570\u6700\u5c11\u7684\u989c\u8272\uff0c\u679a\u4e3e\u5176\u4e2d\u6bcf\u4e00\u679a\u73e0\u5b50\uff0c\u5047\u5b9a\u65b9\u6848\u5305\u542b\u8be5\u679a\u73e0\u5b50\u5e76\u8fdb\u884c\u4e0b\u5217\u7b97\u6cd5\u3002 \n\n\u89e3\u91ca\uff1a\u5408\u6cd5\u7684\u7b54\u6848\u5fc5\u987b\u5305\u542b\u6240\u6709\u989c\u8272\u7684\u73e0\u5b50\uff0c\u6240\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e00\u79cd\u989c\u8272\u679a\u4e3e\u6bcf\u4e00\u79cd\u9009\u62e9\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5305\u62ec\u6700\u4f18\u65b9\u6848\u3002\n\nStep 2\n\n\u5bf9\u4e8e\u5269\u4f59\u7684\u6bcf\u4e00\u79cd\u989c\u8272\uff0c\u7528\u4e8c\u5206\u5206\u522b\u627e\u51fa\u5750\u6807\u4f4d\u4e8e\u6307\u5b9a\u73e0\u5b50\u5de6\u8fb9\u548c\u53f3\u8fb9\u79bb\u5b83\u6700\u8fd1\u7684\u73e0\u5b50\uff0c\u8ba1\u7b97\u51fa\u8ddd\u79bb\uff08\u5f53\u7136\u5982\u679c\u91cd\u5408\u7684\u8bdd\u5c31\u662f0\uff0c\u4e0d\u5b58\u5728\u7684\u8bdd\u8bb0\u4e3a\u65e0\u7a77\uff09\u3002\n\n\u89e3\u91ca\uff1a\u5bb9\u6613\u9a8c\u8bc1\uff0c\u5bf9\u4e8e\u5728\u6307\u5b9a\u73e0\u5b50\u540c\u4fa7\u7684\u540c\u8272\u73e0\u5b50\uff0c\u9009\u62e9\u79bb\u5b83\u66f4\u8fd1\u7684\u73e0\u5b50\u66f4\u4f18\u3002\n\nStep 3\n\n\u628a\u4e0a\u4e00\u6b65\u4e2d\u7684\u73e0\u5b50\u5206\u6210\u5de6\u8fb9\u548c\u53f3\u8fb9\u4e24\u7ec4\uff0c\u5206\u522b\u6309\u8ddd\u79bb\u4ece\u5927\u5230\u5c0f\u3001\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u628a\u4ed6\u4eec\u62fc\u5728\u4e00\u8d77\u3002\u521a\u5f00\u59cb\u5168\u90e8\u9009\u5de6\u8fb9\u7684\u70b9\uff0c\u4e1d\u5e26\u957f\u5ea6\u4e3a\u6700\u5927\u8ddd\u79bb\u3002\u7136\u540e\u5411\u53f3\u62d3\u5c55\uff0c\u66f4\u65b0\u957f\u5ea6\uff08\u957f\u5ea6\u5373\u53f3\u8fb9\u6700\u5927\u8ddd\u79bb+\u5de6\u8fb9\u6700\u5927\u8ddd\u79bb\uff09\u6bcf\u62d3\u5c55\u4e00\u4e2a\u70b9\u5c31\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u5220\u9664\u5de6\u8fb9\u7684\u70b9\uff08\u5373\u5728\u6700\u5de6\u7aef\u4e14\u5df2\u7ecf\u5728\u53f3\u8fb9\u51fa\u73b0\uff09\u3002\n\n\u89e3\u91ca\uff1a\u5176\u5b9e\u8fd9\u91cc\u5c31\u76f8\u5f53\u4e8e\u5927\u591a\u6570\u9898\u89e3\u4e2d\u7684\u53cc\u6307\u9488\u3002\n\n### \u65f6\u95f4\u590d\u6742\u5ea6 O(n log n)\n\n\u7531\u5e73\u5747\u503c\u539f\u7406\u77e5\u9053\uff0c\u6700\u5c11\u7684\u90a3\u79cd\u989c\u8272\u4e0d\u591a\u4e8en/k\u79cd\uff0c\u800c\u4e8c\u5206\u7684\u590d\u6742\u5ea6\u662flog n\uff0c\u53cc\u6307\u9488\u7684\u590d\u6742\u5ea6\u4e3aK\u3002\u5f53\u7136\u5e38\u6570\u6bd4\u6b63\u5e38\u505a\u6cd5\u7a0d\u5fae\u5927\u4e00\u4e9b\u3002\n\n\n### \u4ee3\u7801\n\n```\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,k;\nint l[100],r[100];\nlong long p[1000010];\nint mn=9999999,flag;\nlong long bl[100],ab[100];\nlong long ans;\nlong long inf=1;\nint vis[100],stack1[200],stack2[200],top1,top2;\nbool cmp1(int a,int b)\n{\n\treturn bl[a]<bl[b];\n}\nbool cmp2(int a,int b)\n{\n\treturn ab[a]<ab[b];\n}\nint main()\n{\n\tinf=inf<<33;\n\tans=inf;\n\tcin>>n>>k;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tint t;\n\t\tcin>>t;\n\t\tl[i]=r[i-1]+1;\n\t\tr[i]=l[i]+t-1;\n\t\tfor(int j=l[i];j<=r[i];j++)\n\t\t\tcin>>p[j];\n\t\tif(t<mn) {mn=t;flag=i;}//\u6307\u5b9a\u73e0\u5b50\n\t}\n\tfor(int i=l[flag];i<=r[flag];i++)\n\t{\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\tif(j==flag) continue;\n\t\t\tint ll,rr,mid;\n\t\t\tll=l[j];\n\t\t\trr=r[j]+1;\n\t\t\twhile(ll<rr)//\u4e8c\u5206\n\t\t\t{\n\t\t\t\tmid=(ll+rr)/2;\n\t\t\t\tif(p[mid]<=p[i])\n\t\t\t\t\tll=mid+1;\n\t\t\t\telse rr=mid;\n\t\t\t}\n\t\t\t//cout<<ll<<' '<<rr<<' ';\n\t\t\tif(rr>r[j]) ab[j]=inf;\n\t\t\telse ab[j]=p[rr]-p[i];\n\t\t\tif(rr==l[j]) bl[j]=inf;\n\t\t\telse bl[j]=p[i]-p[rr-1];\n\t\t\t//cout<<bl[j]<<' '<<ab[j]<<endl;\n\t\t}\n\t\ttop1=0;\n\t\tfor(int j=1;j<=k;j++)\n\t\t\tif(j!=flag) stack1[++top1]=j;\n\t\tsort(stack1+1,stack1+top1+1,cmp1);\n\t\ttop2=0;\n\t\tfor(int j=1;j<=k;j++)\n\t\t\tif(j!=flag) stack2[++top2]=j;\n\t\tsort(stack2+1,stack2+top2+1,cmp2);\n\t\tlong long tmp=0;\n\t\ttmp=bl[stack1[top1]];\n\t\tans=min(ans,tmp);\n\t\tfor(int j=1;j<=k;j++) vis[j]=0;\n\t\tfor(int j=1;j<=top2;j++)//\u53cc\u6307\u9488\uff0c\u6211\u8fd9\u91cc\u5199\u7684\u6bd4\u8f83\u602a\u5f02\u56e0\u4e3a\u5199\u7684\u65f6\u5019\u6bd4\u8f83\u56f0\n\t\t{\n\t\t\ttmp=tmp+ab[stack2[j]]-ab[stack2[j-1]];\n\t\t\t//cout<<ab[stack2[j]]<<' '<<ab[stack2[j-1]]<<endl;\n\t\t\tvis[stack2[j]]=1;\n\t\t\twhile(vis[stack1[top1]]&&top1>0)\n\t\t\t{\n\t\t\t\ttmp=tmp-bl[stack1[top1]]+bl[stack1[top1-1]];\n\t\t\t\t//cout<<bl[stack1[top1]]<<' '<<bl[stack1[top1-1]]<<endl;\n\t\t\t\ttop1--;\n\t\t\t}\n\t\t\tans=min(ans,tmp);\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1553687514,
        "uid": 76655,
        "name": "cultry",
        "ccfLevel": 6,
        "title": "[SCOI2009]\u751f\u65e5\u793c\u7269 \u9898\u89e3(cultry)"
    },
    {
        "content": "\u5728lyd\u7684\u4e66\u770b\u5230\u7684\u4e60\u9898  \n\u601d\u8def\u548c\u201c\u9505\u94a2Carl\u201d\u57fa\u672c\u4e00\u6837\n\u7ec6\u8282\u4e0a\u6709\u4e9b\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u53d1\u7bc7\u9898\u89e3  \n\t\u5148\u9009\u4e0a\u6bcf\u79cd\u73e0\u5b50\u7684\u6700\u5c0f\u503c\uff0c\u7531\u4e8e\u6570\u636e\u5df2\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u90a3\u4e48\u6b64\u65f6\u8ba9\u6700\u5927\u503c\u53d8\u5f97\u66f4\u5927\u4e00\u5b9a\u4e0d\u4f18\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba9\u6700\u5c0f\u503c\u53d8\u5f97\u5927\u4e00\u4e9b\uff0c\u4e5f\u5c31\u662f\u8ba9\u6700\u5c0f\u6570\u53d8\u6210\u4e0b\u4e00\u4e2a  \n   \u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\u6765\u7ef4\u62a4\u96c6\u5408\u4e2d\u7684\u6700\u5c0f\u503c  \n\t\u6b64\u65f6\u7528\u6240\u9009\u73e0\u5b50\u5750\u6807\u96c6\u5408\u4e2d\u7684\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c\u66f4\u65b0\u7b54\u6848  \n\t\u6ce8\u610f\u5230\u6700\u5927\u503c\u4e00\u5b9a\u5355\u8c03\u9012\u589e\uff0c\u5e76\u4e14\u53ea\u6709\u6bcf\u6b21\u5165\u5806\u65f6\u624d\u53ef\u80fd\u66f4\u65b0\u6700\u5927\u503c\uff0c\u6240\u4ee5\u53ea\u8981\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf\u6253\u64c2\u53f0\u5373\u53ef\uff0c\u65e0\u9700\u518d\u7ef4\u62a4\u5927\u6839\u5806  \n   \u5e76\u4e14\u5982\u679c\u6700\u5c0f\u503c\u65e0\u6cd5\u53d8\u5f97\u66f4\u5927\u4e86\uff0c\u90a3\u4e48\u6b64\u65f6\u8ba9\u5176\u4ed6\u503c\u53d8\u5f97\u66f4\u5927\u4e00\u5b9a\u4e0d\u4f18\uff0c\u6240\u4ee5\u76f4\u63a5\u9000\u51fa\u5faa\u73af\u8f93\u51fa\u7b54\u6848\u5373\u53ef  \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n#include <cstdlib>\n#include <vector>\n#include <queue>\n\n#define readint(x) scanf(\"%d\",&(x))\n#define rint register int\n#define putint(x) printf(\"%d\",(x))\n#define lol long long\n\nusing namespace std;\nint n, m;\nvector<int> ma[62];\nint nmax = 0;\nint ans = INT_MAX;\n\nstruct num{\n\tint id , pos, val;\n\tnum(){}\n\tnum(int _id, int _pos): id(_id), pos(_pos) {\n\t\tval = ma[id][pos];\n\t}\n\tint nxt(){\n\t\tif(pos + 1 < ma[id].size()) return (val = ma[id][++pos]);\n\t\telse return 0;\n\t}\n\tbool operator < (const num& b) const{\n\t\treturn val > b.val;\n\t}\n};\n\npriority_queue<num> q; \n\nint main(){\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n\tint mm , temp;\n\treadint(n), readint(m);\n\tfor(rint i=1; i<=m; i++){\n\t\treadint(mm);\n\t\tfor(rint j=0; j<mm; j++){\n\t\t\treadint(temp);\n\t\t\tma[i].push_back(temp);\n\t\t}\n\t}\n\tfor(rint i=1; i<=m; i++){\n\t\tq.push(num(i,0));\n\t\tnmax = max(nmax,ma[i][0]);\n\t}\n\twhile(!q.empty()){\n\t\tnum now = q.top();\n\t\tq.pop();\n\t\tans = min(ans,nmax - now.val);\n\t\tif(now.nxt()){\n\t\t\tq.push(now);\n\t\t\tnmax = max(nmax,now.val);\n\t\t}\n\t\telse break;\n\t}\n\tputint(ans);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1543625137,
        "uid": 107978,
        "name": "Rintaro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u521a\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u60f3\u5230\u4e86\u4e8c\u5206\u7b54\u6848\n\n\u6ca1\u9519\u5c31\u662f\u4e8c\u5206\u7b54\u6848\n\n\u590d\u6742\u5ea6\u7279\u522b\u9ad8\u7684\u4e8c\u5206\u7b54\u6848+\u961f\u5217\n\n3000ms\uff08\u6211\u5f53\u65f6\u8fd8\u8be7\u5f02\u8fd9\u9898\u6570\u636e\u8fd9\u4e48\u5927\u5e38\u6570\u4e00\u70b8\u4e0d\u5c31\u5b8c\u4e86\u5417\n\n\u540e\u6765\u53d1\u73b0\u662f\u81ea\u5df1\u50bb\u4e86\n\n\u65e2\u7136\u4f18\u79c0\u7684\u505a\u6cd5dalao\u4eec\u90fd\u8bb2\u8fc7\u4e86\n\n\u6211\u5c31\u628a\u8fd9\u4e2a\u6254\u4e0a\u53bb\u5427\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=1e6+5;\n\nint n,k;\nint cnt[65];\nint q[MAXN];\nstruct rpg{\n\tint x,v;\n}a[MAXN];\n\ninline int read()\n{\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||'9'<ch) ch=getchar();\n\twhile('0'<=ch&&ch<='9') x=(x<<3)+(x<<1)+(ch^'0'),ch=getchar();\n\treturn x;\n}\n\nbool cmp(rpg a,rpg b){return a.x<b.x;}\n\nbool check(int L)\n{\n\tmemset(cnt,0,sizeof(cnt));\n\tint hd=1,tl=0;cnt[0]=k;\n\tfor(int i=1;i<=n;++i){\n\t\tq[++tl]=i;\n\t\tif(!cnt[a[i].v]) --cnt[0];\n\t\t++cnt[a[i].v];\n\t\twhile(a[i].x-a[q[hd]].x>L){\n\t\t\t--cnt[a[q[hd]].v];\n\t\t\tif(!cnt[a[q[hd]].v]) ++cnt[0];\n\t\t\t++hd;\n\t\t}if(!cnt[0]) return 1;\n\t}return 0;\n}\n\nint main()\n{\n\tn=read();k=read();\n\tfor(int i=1;i<=k;++i){\n\t\tint T=read();\n\t\twhile(T--) a[++a[0].x]=(rpg){read(),i};\n\t}sort(a+1,a+a[0].x+1,cmp);\n\tint l=1,r=a[a[0].x].x;\n\twhile(l<r){\n\t\tint mid=l+r>>1;\n\t\tif(check(mid)) r=mid;\n\t\telse l=mid+1;\n\t}printf(\"%d\\n\",l);\n\treturn 0;\n}\n```",
        "postTime": 1530790135,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u9700\u8981\u5c06\u6240\u6709\u5f69\u73e0\u7684\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff1b\n\n\u679a\u4e3e\u4e00\u4e2a\u4f4d\u7f6ex\uff0c\u9700\u8981\u5feb\u901f\u77e5\u9053\u6bcf\u79cd\u5f69\u73e0\u2264x\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u9700\u8981\u5c06\u6bcf\u79cd\u5f69\u73e0\u51fa\u73b0\u7684\u4f4d\u7f6e\u6309\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u5b58\u5728\u94fe\u8868\u4e2d\uff1b\n\n\u4e00\u4e2a\u4f18\u5316\uff1a\u56e0\u4e3a\u4ece\u5927\u5230\u5c0f\u679a\u4e3ex\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u6bcf\u79cd\u5f69\u73e0\u4f4d\u7f6e\u6240\u5728\u7684\u94fe\u8868\u4e2d\u4f4d\u7f6e>x\u7684\u8282\u70b9\u90fd\u5220\u9664\n\n\n\n\u9644\u4e0a\u4ee3\u7801\n\n\n```cpp\n#include <iostream>\nusing namespace std;\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <memory.h>\n#include <cstdlib>\nconst int N=1000005;\nconst int oo=2147483647;\ntypedef long long LL;\ninline void get(int &x){char c=getchar();x=0;\n    while(c<'0'||c>'9') c=getchar();\n    while(c>='0'&&c<='9') x=x*10+c-'0',c=getchar();\n    return ;\n}\nint n,k;\nstruct node{\n    LL x;\n    int id;\n    bool operator < (const node& y) const{\n        return x<y.x;\n        }\n    }p[N];\nint len=0;\nint a[N];\nLL ans=0;\nint maxm=0,minm=oo;\nint main(){\n    get(n);get(k);\n    int i,j,x;\n    for(i=1;i<=k;i++){\n        int t;\n        get(t);\n        for(j=1;j<=t;j++){\n            get(x);\n            p[++len].x=x;\n            p[len].id=i;\n            maxm=max(x,maxm);\n            minm=min(x,minm);\n            }\n        }\n    sort(p+1,p+n+1);\n    j=x=0; ans=maxm-minm;\n    memset(a,0,sizeof(a));\n    for(i=1;i<=n;i++){\n        while(j<n&&x<k){\n            j++;\n            if(!a[p[j].id]) x++;\n            a[p[j].id]++;\n            }\n            if(x<k) break;\n            ans=min(ans,p[j].x-p[i].x);\n            a[p[i].id]--;\n            if(!a[p[i].id]) x--;\n        }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1509803381,
        "uid": 3606,
        "name": "vgccyaj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6570\u636e\u6709\u6bd2\u554a\uff0c\u4ee3\u7801\u65f6\u65f6\u88ab\u5361\uff0c\u4e0d\u7981\u8ba9\u4eba\u611f\u5230\u7edd\u671b\u2026\u2026\n\n\u9898\u610f\u975e\u5e38\u597d\u7406\u89e3\uff0c\u5c31\u662f\u56fa\u5b9a\u4e00\u4e2a\u533a\u95f4\uff0c\u4f7f\u533a\u95f4\u5185\u7684\u5143\u7d20\u79cd\u7c7b\u9f50\u5168\uff0c\u627e\u51fa\u6700\u5c0f\u7684\u533a\u95f4\uff0c\u4e0d\u7981\u4f7f\u4eba\u60f3\u5230\u9898\u76ee\u201duva11572\u552f\u4e00\u7684\u96ea\u82b1\u201c\u4f7f\u7528\u7684\u6ed1\u52a8\u7a97\u53e3\u6cd5\uff0c\u5373\u4f7f\u7528\u4e00\u4e2a\u4e0d\u5b9a\u957f\u7684\u6ed1\u52a8\u7a97\u53e3\uff0c\u5de6\u53f3\u7aef\u70b9\u518d\u53f3\u79fb\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u66f4\u65b0ans\u7684\u6700\u5c0f\u503c\u3002\n\n\u518d\u6765\u8bf4\u8bf4\u6570\u636e\u7684\u5b58\u50a8\uff0c\u770b\u4e86\u770b\u8fd9\u4e2a\u6709\u6bd2\u7684\u8bfb\u5165\u65b9\u5f0f\uff0c\u672c\u6765\u6211\u662f\u60f3\u4f7f\u7528$map<int,vector<int> >$\u8fd9\u79cd\u64cd\u4f5c\u7684\uff0c\u4f46\u662f\u540e\u6765\u53d1\u73b0\u73e0\u5b50\u53ea\u6709$1e6$\u4e2a\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6574\u4e2a\u9898\u76ee\u6211\u4eec\u53ea\u7528\u5b58\u50a8\u6bcf\u4e2a\u73e0\u5b50\u7684\u4f4d\u7f6e\u548c\u989c\u8272\u5c31\u53ef\u4ee5\u4e86\uff0c\u5b58\u50a8\u5b8c\u4e4b\u540e\u6309\u4f4d\u7f6e\u6392\u4e00\u4e0b\u5e8f\uff0c\u76f4\u63a5\u8fdb\u5165\u7b97\u6cd5\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u9898\u7684\u6570\u636e\u5361\u7ec6\u8282\uff0c$if()$\u548c$while()$\u91cc\u7684\u6761\u4ef6\u8981\u63a7\u5236\u597d\u3002\n\n\u732e\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1000001;\nstruct zhuzi\n{\n    long long int pos,color;\n}a[maxn];\nbool cmp(const zhuzi &a,const zhuzi &b)\n{\n    return a.pos<b.pos;\n}\nlong long int n,m,k,no,x,cnt,now=1,ans=999999999;\nint vis[maxn];\nvoid init()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>no;\n        while(no--)\n        {\n        cin>>x;\n        a[++cnt].pos=x;\n        a[cnt].color=i;    \n        }\n    }\n    sort(a+1,a+1+n,cmp);\n}\nvoid in_solve1()\n{\n    for(int l=1,r=0;l<=n;l++)\n    {\n        vis[a[l-1].color]--;\n        if(vis[a[l-1].color]<=0) now--;\n        while(now<m&&r<=n)\n        {\n            r++;\n            if(!vis[a[r].color]) now++;\n            vis[a[r].color]++; \n        }\n        if(now==m) ans=min(ans,a[r].pos-a[l].pos);\n    }\n    cout<<ans;\n}\nvoid solve()\n{\n    init();\n    in_solve1();\n}\nint main()\n{\n    solve();\n    return 0;\n}\n```",
        "postTime": 1505984512,
        "uid": 47497,
        "name": "FendtSilence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u5355\u8c03\u961f\u5217\n\n\n\u5176\u5b9e\u5c31\u662f\u7ef4\u62a4\u5e8f\u5217\u7684\u5de6\u53f3\u7aef\u70b9\u3002\n\n\n\u73b0\u5c06\u6240\u6709\u7684\u73e0\u5b50\u6309\u7167\u4f4d\u7f6e\u6392\u5e8f\uff0c\u7136\u540e\u8003\u8651\u6bcf\u6b21\u8ba9\u5de6\u7aef\u70b9\u540e\u79fb\uff0c\u53f3\u7aef\u70b9\u4e5f\u540e\u79fb\u76f4\u5230\u6070\u597d\u6709k\u79cd\u989c\u8272\u4e3a\u6b62\uff0c\u66f4\u65b0\u7b54\u6848\u3002\n\n\n\u7ef4\u62a4\u5de6\u53f3\u7aef\u70b9\uff0c\u5bf9\u4e8e\u5de6\u7aef\u70b9\uff0c\u4e00\u76f4\u679a\u4e3e\uff0c\u5bf9\u4e8e\u53f3\u7aef\u70b9\uff0c\u76f4\u5230size == k || cnt == r\uff0c\u56e0\u4e3al\u5411\u53f3size\u53ea\u53ef\u80fd\u51cf\u5c11\uff0c\u6240\u4ee5r\u4e00\u5b9a\u53ea\u4f1a\u5411\u53f3\u79fb\u52a8\u3002\u89e3\u51b3\n\nc++\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define rep(i,x,y) for(register int i = x;i <= y;++i)\nusing namespace std;\ninline void read(int& x){\n    int sign =1;x = 0;char c;\n    for(c=getchar();(c < '0' || c > '9') && c != '-';c = getchar());\n    if(c == '-') sign = -1;else x = c - '0';\n    for(c=getchar();c <= '9' && c >= '0';x = x*10 + c - '0',c = getchar());\n    x = x*sign;\n}\nconst int N = 1e6 + 50;\nint n,k,ti,cnt,size,vis[63];\nstruct str\n{\n    int pos,color;\n}a[N];\nconst bool cmp(str a,str b){ return a.pos < b.pos; }\nvoid change(int x,int v)\n{\n    if(v == 1 && !vis[a[x].color]) ++size;\n    if(v == -1 && vis[a[x].color] == 1) --size;\n    vis[a[x].color] += v;\n}\nint main()\n{\n    read(n);read(k);\n    rep(i,1,k)\n    {\n        read(ti);\n        rep(j,1,ti)\n        {\n            int x;read(x);\n            a[++cnt].pos = x;a[cnt].color = i;\n        }\n    }\n    sort(a+1,a+1+cnt,cmp);\n    int l = 1,r = 1;change(1,1);\n    int ans = a[cnt].pos;\n    while(l<=r)\n    {\n        while(size < k && r < cnt)change(++r,1);\n        if(size == k) ans = min(ans,a[r].pos - a[l].pos);\n        change(l++,-1);\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\nBLOG:Tgotp.science\n```",
        "postTime": 1500685790,
        "uid": 23087,
        "name": "Tgotp",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u533a\u95f4\u4f38\u7f29\u5927\u6cd5\u597d\uff01\uff01\uff01\n\n\u5148\u9884\u5904\u7406\u6bcf\u4e2a\u73e0\u5b50\u7684\u989c\u8272\uff0c\u5750\u6807\uff0c\u6309\u7167\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff08\u533a\u95f4\u4f38\u7f29\uff09\uff0c\u8bb0\u5f55\u6700\u5c0f\u503c\n\n\u8fd9\u4e1c\u897f\u901f\u5ea6\u8fd8\u4e00\u822c\uff081956ms\uff09\u5728bzoj\u91cc\u597d\u50cf\u53c8\u6162\u4e86\u70b9\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\nstruct rppr{\n    int a,b;\n}a[1000001];int jzq[1000001]={0};//jzq\u6570\u7ec4\u8bb0\u5f55\u6bcf\u79cd\u989c\u8272\u7684\u73e0\u5b50\u5728\u961f\u5217\u91cc\u6709\u51e0\u4e2a\nrppr q[1000001];//\u961f\u5217\nbool cmp(rppr a,rppr b){\n    return a.b<b.b;\n}\nint main()\n{\n    int n,m;scanf(\"%d%d\",&n,&m);\n    int ans=0x7fffffff,k=0;\n    for(int i=1;i<=m;i++){\n        int x;scanf(\"%d\",&x);\n        for(int j=1;j<=x;j++){\n            int y;scanf(\"%d\",&y);\n            k++;a[k].a=i;a[k].b=y;//\u9884\u5904\u7406\u73e0\u5b50\n        }\n    }\n    sort(a+1,a+n+1,cmp);//\u6309\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    int l=1,r=1,sum=1,i=1;q[1]=a[1];jzq[a[1].a]++;//\u9884\u5904\u7406\u961f\u5217\uff0c\u5c06\u7b2c\u4e00\u4e2a\u73e0\u5b50\u5165\u961f\n    while(l<=r){\n        if(sum==m&&q[r].b-q[l].b<ans)ans=q[r].b-q[l].b;//\u961f\u5217\u4e2d\u989c\u8272\u5df2\u6709m\u79cd\u8bb0\u5f55\u6700\u5c0f\u503c\n        if(sum==m||sum<m&&i==n){\n            jzq[q[l].a]--;if(jzq[q[l].a]==0)sum--;//\u961f\u5217\u4e2d\u989c\u8272\u5df2\u6709m\u79cd\u65f6\u5de6\u7aef\u70b9\u5411\u53f3\u6536\u7f29\uff08\u6216\u8005\u73e0\u5b50\u53d6\u5b8c\u65f6\uff09\n            l++;//\u51fa\u961f\n        }else{\n            i++;\n            if(jzq[a[i].a]==0)sum++;jzq[a[i].a]++;//\u961f\u5217\u4e2d\u989c\u8272\u672a\u5230\u8fbem\u79cd\u65f6\u53f3\u7aef\u70b9\u5411\u53f3\u4f38\u5c55\u627e\u73e0\u5b50\uff08\u8fd9\u5c31\u662f\u533a\u95f4\u4f38\u7f29\uff09\n            r++;q[r]=a[i];//\u5165\u961f\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1484182458,
        "uid": 5716,
        "name": "jzqjzq",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u7ed9\u7684\u73e0\u5b50\u662f\u5347\u5e8f\uff0c\u5e76\u4e14\u6bcf\u79cd\u90fd\u8981\u9009\u5230\u3002\n\n\u53ea\u8981\u7ef4\u62a4\u4e00\u4e2a\u9009\u53d6\u5f53\u524d\u79cd\u7c7b\u7684\u7b2cx\u7684\u73e0\u5b50\u7684\u6570\u7ec4\uff0c\u548c\u6700\u5927\u6700\u5c0f\u503c\u5c31\u884c\u3002\n\n\u7b54\u6848\u5c31\u662f \u6700\u5927\u51cf\u53bb\u6700\u5c0f\n\n\u4ee3\u7801\u5982\u4e0b\n\n\n\n\n```cpp\nprogram searc;\nconst maxn=1000001;\n      maxt=61;\nvar max,min,ans,i,t,j,k,l,m,n:longint;\n    a:array[1..maxt,1..5*maxt]of longint;\n    tail,tot:array[1..maxn]of longint;\nprocedure init;\nbegin\n    readln(n,m);min:=maxn;\n    for i:=1 to m do\n    begin\n      read(tot[i]);\n      if tot[i]=0 then\n      begin\n        writeln(0);\n        halt;\n      end;\n      for j:=1 to tot[i] do read(a[i,j]);\n      readln;tail[i]:=1;\n      if a[i,tail[i]]>max then max:=a[i,tail[i]];\n      if a[i,tail[i]]<min then min:=a[i,tail[i]];\n    end;\nend;\nprocedure solve;\nvar i,j,k:longint;\n    nmax,nmin:longint;\n    toend,toup:longint;\n    tf:boolean;\nbegin\n    ans:=max-min;toend:=m;\n    while toend<n do\n    begin\n      nmin:=maxlongint;tf:=false;\n      nmax:=max;toup:=0;\n      for i:=1 to m do\n        if(min=a[i,tail[i]])then\n        begin\n          if tot[i]=tail[i] then\n          begin\n            tf:=true;\n            break;\n          end;\n          inc(tail[i]);inc(toup);\n          if nmax<a[i,tail[i]] then nmax:=a[i,tail[i]];\n          if nmin>a[i,tail[i]] then nmin:=a[i,tail[i]];\n        end\n        else\n        if a[i,tail[i]]<nmin then nmin:=a[i,tail[i]];\n      if tf then break;\n      if nmin<>maxlongint then min:=nmin;\n      max:=nmax;inc(toend,toup);\n      if max-min< ans then ans:=max-min;\n    end;\n    writeln(ans);\nend;\nbegin\n    init;\n    solve;\nend.\n\n```",
        "postTime": 1476273643,
        "uid": 20390,
        "name": "lwhllw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u6b64\u9898\u96be\u5ea6\u5e94\u8be5\u4e3a **\u666e\u53ca/\u63d0\u9ad8-**\n\n\u663e\u7136\u6211\u4eec\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u53d1\u73b0\u73e0\u5b50\u7684\u79cd\u7c7b\u6700\u591a\u53ea\u6709 $60$ \u79cd\uff0c\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\n\n\u6211\u4eec\u7528 $pos[i]$ \u8868\u793a $i$ \u79cd\u73e0\u5b50\u5f53\u524d\u6700\u9760\u53f3\u7684\u51fa\u73b0\u4f4d\u7f6e\n\n\u5c06\u6bcf\u4e2a\u73e0\u5b50\u7528\u7ed3\u6784\u4f53\u5b58\u4e00\u4e0b\u76f4\u63a5\u6309\u7167\u4f4d\u7f6e\u6392\u5e8f\n\n\u66b4\u529b\u626b\u4e00\u904d\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nk)$ \uff0c\u7a33\u8fc7\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1e6+10;\nconst long long inf=1LL<<50;\nstruct item\n{\n\tint col,pos;\n\tbool operator < (const item &b)const \n\t{\n\t\treturn pos<b.pos;\n\t}\n}p[maxn];\nint top=0;\nint pos[61],n,m;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint k;\n\t\tscanf(\"%d\",&k);\n\t\tfor(int j=1;j<=k;j++)++top,scanf(\"%d\",&p[top].pos),p[top].col=i;\n\t}\n\tsort(p+1,p+1+n);\n\tlong long ans=inf;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tlong long Min=inf;\n\t\tpos[p[i].col]=p[i].pos;\n\t\tfor(int j=1;j<=m;j++)Min=min(Min,pos[j]*1LL);\n\t\tif(Min==0)continue;\n\t\tans=min(ans,p[i].pos*1LL-Min);\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n```\n\n",
        "postTime": 1550367519,
        "uid": 19951,
        "name": "Reaepita",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    },
    {
        "content": "\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u6b64\u9898\u6709\u84dd\u9898\u7684\u96be\u5ea6\u3002\u4f46\u662f\u4e0e\u53e6\u4e00\u9053\u9ec4\u9898[**P1638** \u901b\u753b\u5c55](https://www.luogu.org/problemnew/show/P1638)\u51e0\u4e4e\u6709\u4e00\u6a21\u4e00\u6837\u7684\u601d\u60f3\u3002\n\n[\u6211\u5199\u7684\u90a3\u9053\u9898\u7684\u9898\u89e3](https://www.luogu.org/blog/ofnoname/solution-p1638)\n\n\u5f53\u7136\uff0c\u8fd9\u9053\u9898\u7684\u96be\u70b9\u4e0e\u65b0\u5947\u7684\u5730\u65b9\u5c31\u662f\u4ed6\u7528\u5750\u6807\u8868\u793a\u4f4d\u7f6e\uff0c\u5750\u6807\u8303\u56f4\u6781\u5927\u3002\u6240\u4ee5\u6211\u5c31\u7528\u7ed3\u6784\u4f53\u987a\u5e8f\u5b58\u50a8\u6bcf\u4e00\u4e2a\u73e0\u5b50\u7684\u4f4d\u7f6e\u548c\u79cd\u7c7b\u3002\n\n\u4e4b\u540e\uff0c\u628a\u73e0\u5b50\u6309\u4f4d\u7f6e\u6392\u5e8f\uff0c\u4ece\u524d\u5f80\u540e\u7528\u5c3a\u53d6\u6cd5\u626b\u63cf\uff0c\u5982\u679c\u5de6\u8fb9\u754c\u7684\u73e0\u5b50\u4e4b\u540e\u51fa\u73b0\u8fc7\u5c31\u628a\u5de6\u8fb9\u754c\u53f3\u79fb\u3002\u6bcf\u6b21\u66f4\u65b0\u7b54\u6848\u3002\u5224\u65ad\u4e4b\u540e\u662f\u5426\u51fa\u73b0\u8fc7\u7684\u65b9\u6cd5\u6709\u8bb8\u591a\u79cd\uff0c\u6211\u4f7f\u7528\u6876\u4fdd\u5b58\u6bcf\u4e00\u79cd\u73e0\u5b50\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define MAX (1000000+50)\nusing namespace std;\n\nstruct node{\n    int x,y;\n}d[MAX];\n\nint N,K,cnt,C,L=1,ans=0x7fffffff,T[61];\ninline bool cmp(node a,node b)\n{\n    if (a.x!=b.x)\n        return a.x<b.x;\n    return a.y<b.y;\n}\n\ninline void read(int &a)\n{\n    register char c=getchar(); \n    for (a=0; c<'0'||'9'<c; c=getchar());\n    for (; '0'<=c && c<='9'; c=getchar())\n        a=(a<<3)+(a<<1)+(c^48);\n}\n\nint main()\n{\n    read(N); read(K);\n    for (register int i=1,x=0,y=0; i<=K; i++)\n    {\n        read(x);//\u989c\u8272\u7f16\u53f7\u4e3ai\u7684\u73e0\u5b50\n        while (x--)\n        {\n            read(y);\n            d[++cnt]=(node){y,i};//\u52a0\u4e00\u4e2a\u4f4d\u7f6e\u4e3ay\uff0c\u79cd\u7c7b\u4e3ai\u7684\u73e0\u5b50\n        }\n    }\n    sort(d+1,d+cnt+1,cmp);//\u6392\u5e8f\n    for (register int i=1; i<=cnt; i++)\n    {\n        T[d[i].y]++;\n        if (T[d[i].y]==1) C++;//C\u7edf\u8ba1\u4e00\u5171\u6709\u591a\u5c11\u79cd\u7c7b\u7684\u73e0\u5b50\n        while (T[d[L].y]>1)//\u5de6\u8fb9\u754c\u7684\u73e0\u5b50\u5728\u4ee5\u540e\u51fa\u73b0\u8fc7\n            T[d[L].y]--, L++;//\u5de6\u8fb9\u754c\u53f3\u79fb\n        if (C==K)//\u5df2\u7ecf\u96c6\u6ee1K\u79cd\u73e0\u5b50\n            ans=min(ans,d[i].x-d[L].x);//\u66f4\u65b0\u7b54\u6848\n    }\n    printf(\"%d\",ans); return 0;\n}\n```\n\n",
        "postTime": 1547104892,
        "uid": 73489,
        "name": "NyaRu_Official",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2564 \u3010[SCOI2009]\u751f\u65e5\u793c\u7269\u3011"
    }
]