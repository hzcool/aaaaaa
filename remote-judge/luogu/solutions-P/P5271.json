[
    {
        "content": "\u795e\u4ed9\u6784\u9020\u9898\u2026\u2026\n\n\u819c\u795eO\n\n__________________\n\n## \u672c\u9898\u9898\u89e3\n\n\u9898\u610f\u7b80\u5355\u660e\u4e86\u6b64\u5904\u4e0d\u5728\u8d58\u8ff0\n\n\u90a3\u4e48\u9996\u5148\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u4e2d\u8981\u6c42\u6211\u4eec\u6784\u9020\u7684\u65b9\u6848\u662f$P^k$\uff0c\u8fd9\u4e2a\u9650\u5236\u6761\u4ef6\u7edd\u5bf9\u662f\u5728\u544a\u8bc9\u6211\u4eec\"\u8981\u5206\u6cbb\"\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u901a\u8fc7\u5206\u6cbb\u6cd5\u6765\u6784\u9020\u6211\u4eec\u7684\u65b9\u6848\n\n\u6362\u53e5\u8bdd\u8bb2\uff0c\u6211\u4eec\u5e0c\u671b\u6784\u9020\u51fa\u5927\u5c0f\u4e3a$P^k$\u7684\u65b9\u6848\uff0c\u53ef\u4ee5\u91c7\u53d6\u8fd9\u6837\u7684\u4e00\u4e2a\u7b97\u6cd5\u6d41\u7a0b\n\n\u5982\u679c$k=1$\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa$0\\dots P-1$\n\n\u5426\u5219\u6211\u4eec\u9012\u5f52\u4e0b\u53bb\u6784\u9020\u51fa\u4e00\u4e2a$P^{k-1}$\u7684\u89e3\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u89e3\u5f53\u4e2d\u7684\u70b9\u7684\u7f16\u53f7\u5206\u522b\u52a0\u4e0a$0,P^{k-1},2P^{k-1} \\dots (P-1)P^{k-1}$\u5404\u8f93\u51fa\u4e00\u4e0b\n\n\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\u5982\u679c\u4e24\u4e2a\u70b9\u7684\u7f16\u53f7\u9664P\u4e0b\u53d6\u6574\u4e00\u6837\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u5728\u4e4b\u524d\u7684\u5206\u6cbb\u5f53\u4e2d\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\u4e86\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u4e3a\u6240\u6709\u70b9\u88ab\u5206\u6210\u4e86$P$\u5757\uff0c\u6bcf\u5757\u7684\u957f\u5ea6\u90fd\u662f$P^{k-1}$\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u6240\u5728\u7684\u5757\u4e0d\u540c\u5219\u6ca1\u6709\u8fb9\n\n**\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\u6211\u4eec\u628a\u70b9\u91cd\u65b0\u6807\u53f7\uff0c\u819c$P^{k-1}$\u540c\u4f59\u7684\u70b9\u6807\u53f7\u76f8\u540c**\uff0c\u8fd9\u6837\u4f1a\u65b9\u4fbf\u6211\u4eec\u6784\u9020\u4e4b\u540e\u7684\u89e3\uff0c\u8f93\u51fa\u7684\u65f6\u5019\u53ea\u9700\u8981\u628a\u70b9\u7684\u6807\u53f7\u52a0\u4e0a\u6240\u5728\u5757\u7684\u7f16\u53f7\u00d7$P^{k-1}$\u5373\u53ef\u8fd8\u539f\u771f\u5b9e\u7684\u89e3\n\n\u6b64\u65f6\u6211\u4eec\u5e0c\u671b\u9009\u62e9\u4e00\u4e9b\u56e2\u8986\u76d6\u8fd9\u5f20\u56fe\u7684\u6240\u6709\u8fb9\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u505a\u5b8c\u8fd9\u9053\u9898\u5566~\n\n\u90a3\u548b\u505a\u5462\uff1f\n\n\u9996\u5148\u5148\u6765\u601d\u8003\u4e00\u4e2a\u5f88trivial\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5230\u5e95\u8981\u8f93\u51fa\u591a\u5c11\u4e2a\u56e2\u5462\uff1f\n\n\u4e00\u5171\u6709$(P^{k-1})^2{P \\choose 2}$\u6761\u8fb9\uff0c\u6bcf\u4e2a\u56e2\u53ef\u4ee5\u8986\u76d6${P \\choose 2}$\u6761\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8f93\u51fa$(P^{k-1})^2$\u4e2a\u56e2\n\n\u90a3\u6211\u4eec\u4e0d\u59a8\u5bf9\u7740\u8fd9\u4e2a\u5e73\u65b9\u5f00\u59cb\u7f16\n\n\u4e0d\u5982\u91cd\u65b0\u6574\u7406\u4e00\u4e0b\u6211\u4eec\u7684\u9650\u5236\u6761\u4ef6\uff0c\u5728\u8fd9\u4e00*-\u5c42\u5206\u6cbb\u6211\u4eec\u8981\u505a\u7684\u4e8b\u60c5\u662f\uff0c\u786e\u5b9a$P^{k-1}$\u4e2a\u957f\u5ea6\u4e3a$P$\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u5f53\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u5728$[0,P^{k-1}]$\u4e4b\u95f4\uff0c\u5e76\u4e14\u6ee1\u8db3\u8fd9\u4e2a\u9650\u5236\u6761\u4ef6\n\n**\u4efb\u610f\u4e24\u4e2a\u6570\u7ec4\u81f3\u591a\u67091\u4f4d\u76f8\u540c**\n\n\u6ce8\u610f\u5230\u6211\u4eec\u8981\u6784\u9020\u5e73\u65b9\u4e2a\u6570\u7ec4\uff0c\u8fd9\u6837\u5b9e\u5728\u662f\u597d\u70e6\u554a\uff0c\u6211\u4eec\u60f3\u4e00\u60f3\u80fd\u4e0d\u80fd\u628a\u6211\u4eec\u7684\u5de5\u4f5c\u91cf\u51cf\u5c11\u4e00\u4e9b\uff0c\u73b0\u5728\u5047\u88c5\u6211\u4eec\u6784\u9020\u4e86$P^{k-1}$\u4e2a\u7b26\u5408\u4e0a\u8ff0\u6761\u4ef6\u7684\u6570\u7ec4\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u6570\u7ec4\u7684\u6bcf\u4e00\u4f4d\u52a0\u4e0a$0,1,2, \\dots P^{k-1}-1$\u4e4b\u540e\u5bf9$P^{k-1}$\u53d6\u819c\uff0c\u8fd9\u6837\u6211\u4eec\u5c06**\u6709\u53ef\u80fd**\u4ece$P^{k-1}$\u4e2a\u6570\u7ec4\u62d3\u5c55\u51fa\u4e00\u4e2a\u6709$(P^{k-1})^2$\u4e2a\u6570\u7ec4\n\n~~\u5594\uff0c\u4f60\u95ee\u6211\u600e\u4e48\u7f16\u51fa\u6765\u7684\uff1f\u5404\u79cd\u5e38\u89c1\u7684\u6784\u9020\u65b9\u5f0f\u6328\u4e2a\u8bd5\u4e00\u8bd5\uff0c\u78b0\u5de7\u8fd9\u79cd\u5bf9\u7740\u65b9\u6848\u6570\u7f16\u6784\u9020\u7684\u65b9\u6cd5\u594f\u6548\u4e86\u800c\u5df2~~\n\n\u91c7\u53d6\u4e0a\u8ff0\u65b9\u5f0f\u6784\u9020\u7684\u8bdd,\u521d\u59cb\u7684\u89e3\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u7684\u6761\u4ef6\n\n**\u4efb\u610f\u4e24\u4e2a\u6570\u7ec4\u5bf9\u5e94\u4f4d\u7f6e\u505a\u5dee\uff0c\u4e0d\u80fd\u5b58\u5728\u76f8\u7b49\u7684\u6570\u5b57**\n\n\u90a3\u8fd9\u6837\u7684$P^{k-1}$\u4e2a\u6570\u7ec4\u600e\u4e48\u6784\u9020\u5462\uff1f\n\n\u7a0d\u5fae\u7f16\u4e86\u4e00\u4f1a\u4e4b\u540e\u6211\u4eec\u53d1\u73b0\u8ba9\u7b2c$i$\u4e2a\u6570\u7ec4\u7684\u7b2c$j$\u4f4d\u4e3a$i\u00d7j \\mod P^{k-1}$\n\u5c31\u884c\u4e86\uff0c\u8fd9\u6837\u663e\u7136\u4efb\u610f\u4e24\u4e2a\u6570\u7ec4\u505a\u5dee\u4e4b\u540e\u90fd\u4e0d\u5b58\u5728\u76f8\u7b49\u7684\u6570\u5b57\u554a\n\n~~\u5594\uff0c\u4f60\u95ee\u6211\u8fd9\u662f\u600e\u4e48\u7f16\u51fa\u6765\u7684?\u5f53\u7136\u8fd8\u662f\u5404\u79cd\u6570\u7ec4\u80e1\u4e71\u8bd5\u4e00\u8bd5\u7136\u540e\u8fd9\u4e2a\u78b0\u5de7\u594f\u6548\u5566~~\n\n\u90a3\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e86\u4f5c\u4e3a\"\u79cd\u5b50\"\u7684\u521d\u59cb$P^{k-1}$\u4e2a\u89e3\uff0c\u5c31\u53ef\u4ee5\u7528\u5b83\u5012\u8fc7\u6765\u751f\u6210 \u90a3$(P^{k-1})^2$\u4e2a\u6570\u7ec4\u5566\uff0c\u4e8e\u662f\u6211\u4eec\u7684\u5206\u6cbb\u6cd5\u6210\u529f\u594f\u6548\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u2026\u2026\n\n\u542c\u8bf4\u8fd9\u9898\u5361\u8f93\u51fa\u4e8e\u662f\u5199\u4e86\u4e2a\u5feb\u901f\u8f93\u51fa\u2026\u2026\u901f\u5ea6\u60ca\u4eba\n\n```C\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int N=2010;typedef long long ll;\ninline ll po(ll a,ll p){ll r=1;for(;p;p>>=1,a=a*a)if(p&1)r=r*a;return r;}\nchar mde[N][6];int hd[N];\ninline void pre()//\u8fd9\u91cc\u5199\u4e86\u4e2a\u5feb\u901f\u8f93\u51fa \n{\n    mde[0][0]=' ';mde[0][1]='0';hd[0]=1;\n    for(int i=1;i<N;i++)\n    {\n        int p=i;mde[i][0]=' ';\n        while(p){mde[i][++hd[i]]='0'+p%10;p/=10;}\n    }\n}inline void prit(int x){for(int i=hd[x];i>=0;i--)putchar(mde[x][i]);}\nint a[N];int b[N];\ninline void cons(int ad,int p,int k,int tot)//\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u5c31\u662f\u76f4\u63a5\u5206\u6cbb\u5c31\u597d\u4e86 \n{\n    if(k==1){for(int i=0;i<p;i++)prit(ad+i);putchar('\\n');return;}//\u8fb9\u754c\u6761\u4ef6 \n    int bl=tot/p;for(int i=0;i<tot;i+=bl)cons(ad+i,p,k-1,bl);//\u6328\u4e2a\u9012\u5f52 \n    for(int i=0,id=0;i<tot;i+=bl,id++)a[id]=i;\n    for(int st=0;st<bl;st++)\n    {\n        b[0]=0;b[1]=st;for(int i=2;i<=p-1;i++)b[i]=(st+b[i-1])%bl;\n        for(int plus=0;plus<bl;plus++)//\u8f93\u51fa\u8fd9\u4e00\u5c42\u7684\u89e3 \n        {for(int i=0;i<p;i++)prit(ad+a[i]+(b[i]+plus)%bl);putchar('\\n');}\n    }\n}int main(){pre();int p;int k;scanf(\"%d%d\",&p,&k);printf(\"YES\\n\");cons(0,p,k,po(p,k));}\n```\n\n",
        "postTime": 1553348744,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5271 \u3010OwenOwl \u4e0d\u5b66\u8f66\u4e5f\u4e0d\u5220\u5e93\u3011"
    },
    {
        "content": "\u9898\u76ee Idea \u6765\u81ea call_me_std\u3002\n\n\u51fa\u9898\u4eba\u505a\u6cd5\u4e0d\u662f\u9012\u5f52\u6784\u9020\uff0c\u662f\u76f4\u63a5\u6784\u9020\u3002\n\n\u5efa\u7acb\u4e00\u4e2a\u6a21 $p$ \u610f\u4e49\u4e0b\u7684 $k$ \u7ef4\u7a7a\u95f4\uff0c\u8fd9\u6837\u7a7a\u95f4\u4e2d\u6070\u597d\u6709 $p^k$ \u4e2a\u70b9\uff0c\u6211\u4eec\u8ba9\u539f\u56fe\u6bcf\u4e00\u4e2a\u70b9\u5bf9\u5e94\u7a7a\u95f4\u4e2d\u4e00\u4e2a\u70b9\u3002\n\n\u679a\u4e3e\u4e00\u4e2a\u975e\u96f6\u5411\u91cf $v$ \u548c\u8d77\u70b9 $x$\uff0c\u628a $x, x+v, x+2v,\\ldots, x+(p-1)v$ \u5206\u4e3a\u4e00\u7ec4\u5373\u53ef\u3002\n\n\u663e\u7136\u4e24\u4e2a\u4e0d\u540c\u70b9\u552f\u4e00\u786e\u5b9a\u540c\u4e00\u7ec4\u91cc\u5269\u4e0b $p-2$ \u4e2a\u70b9\u3002\n\n\u8bc1\u660e\u53ef\u4ee5\u8003\u8651\u5728\u6a21 $p$ \u610f\u4e49\u4e0b\u8fd0\u7b97\u7684\u552f\u4e00\u6027\uff08$p$ \u4e0d\u4e3a\u8d28\u6570\u65f6\u5e76\u4e0d\u80fd\u8fd9\u6837\u6784\u9020\uff09\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int p, k, n = 1;\n  scanf(\"%d%d\", &p, &k);\n  puts(\"YES\");\n  for (int i = 0; i < k; i++) {\n    n *= p;\n  }\n  std::function<int(int, int)> add = [&] (int x, int y) {\n    int result = 0, power = 1;\n    for (int i = 0; i < k; i++, x /= p, y /= p, power *= p) {\n      result = result + (p + x % p + y % p) % p * power;\n    }\n    return result;\n  };\n  std::vector<std::vector<bool>> visit(n, std::vector<bool>(n));\n  for (int i = 0; i < n; i++) {\n    for (int j = i + 1; j < n; j++) if (!visit[i][j]) {\n      //\u627e\u4e00\u6761\u8fd8\u6ca1\u5904\u7406\u7684\u8fb9(i,j)\uff0c\u6c42\u51fa\u540c\u4e00\u7ec4\u5269\u4e0b\u7684\u70b9\n      std::vector<int> index(1, i);\n      int v = add(j, -i);\n      for (int l = 1; l < p; l++) {\n        index.push_back(add(index.back(), v));\n      }\n      for (auto x : index) {\n        printf(\"%d \", x);\n        for (auto y : index) {\n          visit[x][y] = true;\n        }\n      }\n      puts(\"\");\n    }\n  }\n  return 0;\n}\n```",
        "postTime": 1553351309,
        "uid": 50882,
        "name": "OwenOwl",
        "ccfLevel": 10,
        "title": "5271 \u9898\u89e3"
    }
]