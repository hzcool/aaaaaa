[
    {
        "content": "\u6211\u7684\u601d\u8def\u662f...**\u7528\u5355\u8c03\u961f\u5217\u5206\u522b\u7ef4\u62a4\u884c\u4e0e\u5217\u3002**\n\n\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5:\u662f\u5148\u7528\u5355\u8c03\u961f\u5217\u5bf9\u6bcf\u4e00\u884c\u7684\u503c\u7ef4\u62a4\uff0c\u5e76\u5c06**a[][]**\u6bcf\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\u5206\u522b\u5b58\u5728**X[][]**\u548c**x[][]**\u4e2d\u3002\n\n\u90a3\u4e48**X[][]**\u4e0e**x[][]**\u6240\u5b58\u50a8\u7684\u5206\u522b\u662f**1\u00d7n**\u7684\u957f\u65b9\u5f62\u5185\u7684\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\u3002**X[i][j]**\u5b58\u50a8\u7b2c**i**\u884c\u7b2c**j~j+n-1**\u5217\u7684\u957f\u65b9\u5f62\u4e2d\u7684\u6700\u5927\u503c\u3002\u540c\u7406\uff0c**x[i][j]**\u5b58\u50a8\u7b2c**i**\u884c\u7b2c**j~j+n-1**\u5217\u7684\u957f\u65b9\u5f62\u4e2d\u7684\u6700\u5c0f\u503c\u3002  \n\n\u8fd9\u65f6\u518d\u5bf9\u8fd9\u4e24\u4e2a\u6570\u7ec4\u7684\u6bcf\u4e00\u5217\u4e0a\u7684\u503c\u8fdb\u884c\u7ef4\u62a4\uff0c\u5c06**X[][]**\u4e2d\u6bcf\u4e2a\u533a\u95f4\u7684\u7684\u6700\u5927\u503c\u7528**Y[][]**\u7ef4\u62a4\uff0c\u5c06**x[][]**\u4e2d\u7684\u6bcf\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\u7528**y[][]**\u7ef4\u62a4\u3002\u90a3\u4e48**Y[i][j]**\u5b58\u50a8**X[][]**\u4e2d\u7b2c**i~i+n-1**\u884c\u7b2c**j**\u5217\u7684\u957f\u65b9\u5f62\u7684\u6700\u5927\u503c\u3002\u540c\u7406**y[i][j]**\u5b58\u50a8**x[][]**\u4e2d\u7b2c**i~i+n-1**\u884c\u7b2c**j**\u5217\u7684\u957f\u65b9\u5f62\u7684\u6700\u5c0f\u503c\u3002\n\n\u6545**Y[i][j]**\u5b58\u50a8\u7684\u5b9e\u4e3a\u4ee5**a[i~i+n-1][j~j+n-1]**\u4e2d\u7684\u6700\u5927\uff0c\u5373\u4ee5**i,j**\u4e3a\u5de6\u4e0a\u89d2\uff0c\u8fb9\u957f\u4e3a**n**\u7684\u6b63\u65b9\u5f62\u4e2d\u7684\u6700\u5927\u503c\u3002\u540c\u7406\uff0c**y[i][j]**\u5b58\u50a8\u7684\u5373\u4ee5**i,j**\u4e3a\u5de6\u4e0a\u89d2\uff0c\u8fb9\u957f\u4e3a**n**\u7684\u6b63\u65b9\u5f62\u4e2d\u7684\u6700\u5c0f\u503c\u3002\n\n\u6a21\u62df\u8fc7\u7a0b\u89c1\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/15313.png)\n\n\u9644\u4e0a\u4ee3\u7801\uff08\u7531\u4e8e\u4e00\u4e9b\u4e60\u60ef\uff0c\u6709\u4e9b\u53d8\u91cf\u548c\u9898\u76ee\u89c4\u5b9a\u7684\u4e0d\u592a\u4e00\u6837\u3002\u3002\u3002\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n,m,k,front,FRONT,back,BACK,ans;\nint a[1001][1001],q[1001],Q[1001];\nint x[1001][1001],X[1001][1001];\nint y[1001][1001],Y[1001][1001];\n\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor (int I=1;I<=n;I++)\n\t\tfor (int i=1;i<=m;i++)\n\t\t\tscanf(\"%d\",&a[I][i]);\n\tfor (int I=1;I<=n;I++)\n\t\t{\n\t\t\tFRONT=BACK=front=back=Q[1]=q[1]=1;\n\t\t\tfor (int i=2;i<=m;i++)\n\t\t\t\t{\n\t\t\t\t\twhile (a[I][i]>=a[I][Q[BACK]]&&FRONT<=BACK) BACK--;\n\t\t\t\t\twhile (a[I][i]<=a[I][q[back]]&&front<=back) back--;\n\t\t\t\t\tBACK++;back++;Q[BACK]=i;q[back]=i;\n\t\t\t\t\twhile (i-Q[FRONT]>=k) FRONT++;\n\t\t\t\t\twhile (i-q[front]>=k) front++;\n\t\t\t\t\tif (i>=k) X[I][i-k+1]=a[I][Q[FRONT]],x[I][i-k+1]=a[I][q[front]];\n\t\t\t\t}\n\t\t}\n\tfor (int I=1;I<=m-k+1;I++)\n\t\t{\n\t\t\tFRONT=BACK=front=back=Q[1]=q[1]=1;\n\t\t\tfor (int i=2;i<=n;i++)\n\t\t\t\t{\n\t\t\t\t\twhile (X[i][I]>=X[Q[BACK]][I]&&FRONT<=BACK) BACK--;\n\t\t\t\t\twhile (x[i][I]<=x[q[back]][I]&&front<=back) back--;\n\t\t\t\t\tBACK++;back++;Q[BACK]=i;q[back]=i;\n\t\t\t\t\twhile (i-Q[FRONT]>=k) FRONT++;\n\t\t\t\t\twhile (i-q[front]>=k) front++;\n\t\t\t\t\tif (i>=k) Y[i-k+1][I]=X[Q[FRONT]][I],y[i-k+1][I]=x[q[front]][I];\n\t\t\t\t}\n\t\t}\n    ans=0x3f3f3f3f;\n\tfor (int I=1;I<=n-k+1;I++)\n\t\tfor (int i=1;i<=m-k+1;i++)\n\t\t\tans=min(ans,Y[I][i]-y[I][i]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n \n```\n\n",
        "postTime": 1520517480,
        "uid": 12191,
        "name": "\uff43\uff48\uff49\uff4c\uff4c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u697c\u4e0b\u51e0\u4f4d\u7684\u5355\u8c03\u961f\u5217\u5f88\u5de7\u5999\uff0c\u4f46\u4ee3\u7801\u6bd4\u8f83\u590d\u6742\uff0c\u4e0d\u662f\u5f88\u597d\u8c03\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u7a0d\u5fae\u7b80\u5355\u4e00\u70b9\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u770b\u4e00\u4e0b\u6734\u7d20\u505a\u6cd5\uff1a\u76f4\u63a5O(a\\*b)\u679a\u4e3e\u77e9\u5f62\uff0c\u518dO(n\\*n)\u7edf\u8ba1\u77e9\u5f62\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6O(a\\*b\\*n\\*n)\uff0c\u663e\u7136\u4f1a\u8d85\u65f6\u3002\n\n\u5176\u4e2dO(a\\*b)\u662f\u7406\u8bba\u4e0b\u9650\uff0c\u80af\u5b9a\u662f\u6ca1\u6cd5\u4f18\u5316\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u529e\u6cd5\u4f18\u5316O(n\\*n)\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u5feb\u901f\u6c42\u51fa\u77e9\u5f62\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\n\n\u6211\u6700\u5f00\u59cb\u60f3\u7684\u529e\u6cd5\u662f\u9884\u5904\u7406\u9012\u63a8\u51fa\u77e9\u5f62\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u5373\uff1a\u7528**maxv(i,j,k)**\u8868\u793a\u4ee5\u70b9**(i,j)**\u4e3a\u5de6\u4e0a\u89d2\u7684\u8fb9\u957f\u4e3ak\u7684\u77e9\u5f62\u4e2d\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u7528\u9012\u63a8\u516c\u5f0f\n\n**maxv(i,j,k)=max{maxv(i,j,k-1), maxv(i+1,j+1,k-1), maxv(i+1,j,k-1), maxv(i,j+1,k-1)}**\n\n\u7528O(a\\*b\\*n)\u7684\u65f6\u95f4\u9012\u63a8\u51fa\u6240\u6709\u8fb9\u957f\u4e3an\u7684\u77e9\u5f62\u4e2d\u7684\u6700\u5927\u503c\uff08\u6700\u5c0f\u503c\uff09\uff0c\u518dO(a\\*b)\u6c42\u6700\u5c0f\u7684\u5dee\u503c\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6O(a\\*b\\*n)\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\n\nconst int INF = 1000000000;\nconst int maxm = 1000 + 10;\nconst int maxn = 100 + 10;\n\nint a, b, n;\nint grid[maxm][maxm];\nint maxv[maxm][maxm], minv[maxm][maxm];\n\nint main ()\n{\n//    freopen(\"in.txt\", \"r\", stdin);\n    cin >> a >> b >> n;\n    for (int i = 0; i < a; i++)\n        for (int j = 0; j < b; j++) {\n            scanf(\"%d\", &grid[i][j]);\n            maxv[i][j] = minv[i][j] = grid[i][j];\n        }\n    \n    for (int k = 2; k <= n; k++)\n        for (int i = 0; i+1 < a; i++)\n            for (int j = 0; j+1 < b; j++) {\n                maxv[i][j] = max(grid[i][j], max(maxv[i+1][j+1], max(maxv[i+1][j], maxv[i][j+1])));\n                minv[i][j] = min(grid[i][j], min(minv[i+1][j+1], min(minv[i+1][j], minv[i][j+1])));\n            }\n    \n    int ans = INF;\n    for (int i = 0; i <= a-n; i++)\n        for (int j = 0; j <= b-n; j++)\n            ans = min(ans, maxv[i][j]-minv[i][j]);\n    \n    cout << ans;\n    fclose(stdin);\n    return 0;\n}\n```\n\u56e0\u4e3a\u7a0b\u5e8f\u7684\u5e38\u6570\u5f88\u5c0f\uff0c\u6211\u672c\u6765\u4ee5\u4e3a\u53ef\u4ee5\u8fc7\uff0c\u4f46\u662f\u5f88\u53ef\u60dc\u53ea\u5f97\u4e8650\u5206\u3002\n\n\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u5373\u4f7f\u7528O(n)\u7684\u65f6\u95f4\u7edf\u8ba1\u6700\u5927\u503c\uff08\u6700\u5c0f\u503c\uff09\u4e5f\u4e0d\u884c\uff0c\u90a3\u6211\u4eec\u5c31\u5411O(logn)\u4f18\u5316\u3002\n\n\u518d\u770b\u4e00\u4e0b\u4e0a\u9762\u7684\u9012\u63a8\u516c\u5f0f\uff0c\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u8fd9\u4e2a\u516c\u5f0f\u5f88\u50cfRMQ\u95ee\u9898\u7684\u9884\u5904\u7406\u4ee3\u7801\u3002\u90a3\u4e48\u8fd9\u6837\u4ee5\u6765\u95ee\u9898\u5c31\u6e05\u6670\u4e86\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u9053\u4e8c\u7ef4RMQ\u95ee\u9898\uff1a\u7528**maxv(i,j,k)**\u8868\u793a\u4ee5\u70b9**(i,j)**\u4e3a\u5de6\u4e0a\u89d2\u8fb9\u957f\u4e3a2^k\u7684\u77e9\u5f62\u4e2d\u7684\u6700\u5927\u503c\uff0c\u9012\u63a8\u516c\u5f0f\u4e3a\n\n**maxv(i,j,k)=max{maxv(i,j,k), maxv(i+2^(k-1),j+2^(k-1),k-1),maxv(i,j+2^(k-1),k-1), maxv(i+2^(k-1),j,k-1) }**\n\n\u67e5\u8be2\u8fb9\u957f\u4e3an\u7684\u77e9\u5f62\u7684\u6700\u5927\u503c\u4e5f\u662f\u7c7b\u4f3c\u7684\u516c\u5f0f\uff0c\u8be6\u89c1\u4ee3\u7801\u3002\n\n\u8fd9\u6837\u4ee5\u6765\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u590d\u6742\u5ea6\u4e3aO(a\\*b\\*logn)\u7684\u7b97\u6cd5\uff0c\u56e0\u4e3an\u53ea\u6709100\uff0c\u6240\u4ee5logn\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u4ee3\u7801\u5982\u4e0b\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\n\nconst int INF = 1000000000;\nconst int maxm = 1000 + 100;\nconst int maxn = 100 + 10;\nconst int maxlog = 10;\n\nint a, b, n;\nint logn;\nint grid[maxm][maxm];\nint maxv[maxm][maxm], minv[maxm][maxm];\n\nint query (int x, int y){\n    int _max = 0, _min = 0;\n    _max = max(maxv[x][y], max(maxv[x+n-(1<<logn)][y+n-(1<<logn)], max(maxv[x+n-(1<<logn)][y], maxv[x][y+n-(1<<logn)])));\n    _min = min(minv[x][y], min(minv[x+n-(1<<logn)][y+n-(1<<logn)], min(minv[x+n-(1<<logn)][y], minv[x][y+n-(1<<logn)])));\n    return _max - _min;\n}\n\nint main ()\n{\n//    freopen(\"in.txt\", \"r\", stdin);\n    cin >> a >> b >> n;\n    for (int i = 0; i < a; i++)\n        for (int j = 0; j < b; j++) {\n            scanf(\"%d\", &grid[i][j]);\n            maxv[i][j] = minv[i][j] = grid[i][j];\n        }\n    \n    for (logn = 0; ((1<<(logn+1)) <= n); logn++);\n    for (int k = 0; k < logn; k++)\n        for (int i = 0; i+(1<<k) < a; i++)\n            for (int j = 0; j+(1<<k) < b; j++) {\n                maxv[i][j] = max(maxv[i][j], max(maxv[i+(1<<k)][j+(1<<k)], max(maxv[i+(1<<k)][j], maxv[i][j+(1<<k)])));\n                minv[i][j] = min(minv[i][j], min(minv[i+(1<<k)][j+(1<<k)], min(minv[i+(1<<k)][j], minv[i][j+(1<<k)])));\n            }\n    \n    int ans = INF;\n    for (int i = 0; i <= a-n; i++)\n        for (int j = 0; j <= b-n; j++)\n            ans = min(ans, query(i, j));\n    \n    cout << ans;\n    fclose(stdin);\n    return 0;\n}\n```",
        "postTime": 1476960890,
        "uid": 22127,
        "name": "Aisaka1436",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "### \u76f8\u6bd4\u505a\u6cd5\u800c\u8a00\uff0c\u8fd9\u4e2a\u9898\u7684\u601d\u8def\u66f4\u6709\u610f\u601d\u3002\u8fd9\u91cc\u672c\u849f\u84bb\u63d0\u4f9b\u51e0\u79cd\u505a\u6cd5\u4f9b\u5927\u5bb6\u53c2\u8003\uff08\u6ca1\u6709\u5355\u8c03\u961f\u5217\u5199\u6cd5qwq\u56e0\u4e3a\u6211\u592a\u84bb\u4e86+\u61d2\uff09\n#### \u9996\u5148\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u672c\u9898\u6570\u636e\u5361\u7684\u975e\u5e38\u7d27\uff0c\u4ece20\u5206\u5230100\u5206\u53ea\u662f100\u52301000\u7684\u5dee\u8ddd\uff0c\u4f46\u662f\u4f9d\u7136\u4f1a\u5361\u6389\u5927\u591a\u6570\u4e0d\u4f18\u79c0\u7684\u5199\u6cd5\u3002\n\n### 1. \u9996\u5148\u6765\u8bb2\u6700\u76f4\u89c2\u7684\u60f3\u6cd5\uff1a\u9012\u63a8\uff0870pts\uff09\n\t\n\u5f88\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u7528DP\u6c34\u6389\u8fd9\u9053\u9898\u7684\u5927\u591a\u6570\u5206\u3002\u8bbef_max[i][j][k]\u8868\u793a\u4ee5\u5750\u6807[i,j]\u4e3a\u53f3\u4e0b\u89d2\uff0c\u8fb9\u957f\u4e3ak\u7684\u6b63\u65b9\u5f62\u7684\u6700\u5927\u503c,\u6700\u5c0f\u503c\u540c\u7406\u518d\u8bbe\u4e00\u4e2a\u3002\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u81ea\u5df1\u4f18\u96c5\u5730\u7206\u4e86\u7a7a\u95f4QWQ\n   \n\u90a3\u4e48\u600e\u4e48\u529e\u5462\uff1f\u56e0\u4e3a\u6bcf\u6b21\u5904\u7406\u7684\u65f6\u5019\u6b63\u65b9\u5f62\u8fb9\u957f+1\uff0c\u6211\u4eec\u8003\u8651\u538b\u7f29\u6389\u8fb9\u957f\u8fd9\u4e2a\u7ef4\u5ea6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5148\u9884\u5904\u7406\u4e0a\u8fb9\u957f\u4e3a1\u7684\u6b63\u65b9\u5f62\uff08\u86e4\u86e4\u86e4\u5c31\u662f\u8f93\u5165\u5566\uff09\uff0c\u7136\u540e\u8fdb\u884ck-1\u6b21\u77e9\u9635\u9012\u63a8\uff0c\u5f97\u5230\u7684\u6570\u636e\u5c31\u4e00\u5b9a\u662f\u4ee5k\u4e3a\u8fb9\u957f\u7684\u6b63\u65b9\u5f62\u7684\u5927\u5c0f\u5566~\n    \n\u968f\u624b\u4e00\u6c34\u5c31\u670970\u5206\uff0c\u662f\u4e0d\u662f\u5f88\u5f00\u5fc3\u5450QWQ\n    \n\u4e0b\u9762\u653e\u4ee3\u7801\uff0c\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u53ef\u4ee5\u81ea\u5df1\u770b\u4e00\u4e0b\n    \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define INF 2147483647\n#define Anti_copy() printf(\"\u6211\u6c38\u8fdc\u559c\u6b22CYDqwq\\n\")\nusing namespace std;\nint n,m,k,ans=INF,mp[1010][1010],f_max[1010][1010],f_min[1010][1010];\ninline int max(int x,int y){return x>y?x:y;}\ninline int min(int x,int y){return x<y?x:y;}\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(register int i=1;i<=n;++i){\n        for(register int j=1;j<=m;++j){\n            scanf(\"%d\",&mp[i][j]);\n            f_max[i][j]=mp[i][j];//init \n            f_min[i][j]=mp[i][j];\n        }\n    }\n    for(register int l=2;l<=k;++l){\n        for(register int i=n;i>=l;i--){\n            for(register int j=m;j>=l;j--){\n                f_max[i][j]=max(mp[i][j],max(f_max[i-1][j],max(f_max[i][j-1],f_max[i-1][j-1])));\n                f_min[i][j]=min(mp[i][j],min(f_min[i-1][j],min(f_min[i][j-1],f_min[i-1][j-1])));\n            }\n        }\t\t\n    }/**\n    for(int i=1;i<=n;++i){\n        for(int j=1;j<=m;++j){\n            printf(\"%2d \",f_max[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    printf(\"\\n\");\n    for(int i=1;i<=n;++i){\n        for(int j=1;j<=m;++j){\n            printf(\"%2d \",f_min[i][j]);\n        }\n        printf(\"\\n\");\n    }*/\n    for(register int i=k;i<=n;++i){\n        for(register int j=k;j<=m;++j){\n            ans=min(ans,f_max[i][j]-f_min[i][j]);\n        }\n    }\n    printf(\"%d\\n\",ans);\n    Anti_copy();\n    return 0;\n} \n```\n\n### 2. \u4f18\u5148\u961f\u5217\u5199\u6cd5\uff0880pts\uff09\n\n\u539f\u7406\u548c\u5355\u8c03\u961f\u5217\u662f\u4e00\u81f4\u7684\uff0c\u90fd\u662f\u9884\u5904\u7406\u6bcf\u4e00\u884c\u7684\u60c5\u51b5\uff0c\u5b58\u5230\u4e00\u4e2a\u6570\u7ec4\u91cc\u3002\u6211\u8fd9\u91cc\u653e\u7684\u662f\u4e00\u4e2amax_m\u548cmin_m,i\u548cj\u8868\u793a\u5728\u7b2ci\u884c\u4ece[j-k+1,j]\u90e8\u5206\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u5c31\u5f97\u5230\u4e86\u597d\u591a\u597d\u591a\u957f\u6761\u7684\u60c5\u51b5\u3002\u67e5\u8be2\u7684\u65f6\u5019\u53ea\u9700\u8981O(n^2)\u628a\u4e4b\u524d\u641e\u7684\u957f\u6761\u62fc\u5728\u4e00\u5757\u5c31\u53ef\u4ee5\u4e86\u3002\n    \n\u4e0d\u8fc7\u590d\u6742\u5ea6\u7a0d\u9ad8\u4e8e\u5355\u8c03\u961f\u5217\uff0c\u6240\u4ee5\u5e76\u4e0d\u80fd\u901a\u8fc7\u6240\u6709\u7684\u70b9\uff0c\u4f46\u662f\u5374\u5361\u51fa\u6765\u4e86\u4e00\u4e2a\u975e\u5e38\u9b3c\u755c\u7684\u5206\u6570\u3002\n    \n\u601d\u8def\u7b80\u5355\uff0c\u76f4\u63a5\u7801\u5c31\u53ef\u4ee5\u3002\n    \n\u975e\u5e38\u559c\u6b22\u6216\u8005\u64c5\u957f\u5199\u5355\u8c03\u961f\u5217\u7684\u540c\u5b66\u8bf7\u65e0\u89c6\u8fd9\u91cc\u3002\n    \n```cpp\n#include<queue>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define INF 2147483647\n#define Anti_copy() printf(\"\u6211\u6c38\u8fdc\u559c\u6b22CYDqwq\\n\")\nusing namespace std;\nstruct node{\n\tint pos,val;\n\tbool operator>(const node &tmp)const{return val>tmp.val;};\n\tbool operator<(const node &tmp)const{return val<tmp.val;};\n};\nint n,m,k,mp[1010][1010];\nint max_m[1010][1010],min_m[1010][1010];//max_n[1010][1010],min_n[1010][1010],\n\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tscanf(\"%d\",&mp[i][j]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tpriority_queue<node,vector<node>,less<node> >que_max;\n\t\tpriority_queue<node,vector<node>,greater<node> >que_min;\n\t\tfor(int j=1;j<=k-1;j++){//\u9884\u5904\u7406\u524d\u9762\u7684\u90e8\u5206 \n\t\t\tque_max.push((node){j,mp[i][j]});\n\t\t\tque_min.push((node){j,mp[i][j]});//\u628a...push\u5165\u961f \n\t\t}\n\t\tfor(int j=k;j<=m;j++){\n\t\t\tque_max.push((node){j,mp[i][j]});\n\t\t\tque_min.push((node){j,mp[i][j]});\n\t\t\twhile(que_max.top().pos<=j-k)que_max.pop();\n\t\t\twhile(que_min.top().pos<=j-k)que_min.pop();\n\t\t\tmax_m[i][j]=que_max.top().val;//max_m[i][j]\u8868\u793a\u7b2ci\u884c[j-k+1,j]\u8fd9\u90e8\u5206\u7684\u6700\u5927\u503c\n\t\t\tmin_m[i][j]=que_min.top().val;//\u540c\u7406 \n\t\t}\n\t}/*\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tprintf(\"%2d \",min_m[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\tprintf(\"\\n\");\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tprintf(\"%2d \",min_n[j][i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}*/\n\tint ans=INF;\n\tfor(int i=1;i<=n-k+1;i++){\n\t\tfor(int j=k;j<=m;j++){\n\t\t\tint maxx=0,minx=INF;\n\t\t\tfor(int l=i;l<=i+k-1;l++){\n\t\t\t\tmaxx=max(maxx,max_m[l][j]);\n\t\t\t\tminx=min(minx,min_m[l][j]);\n\t\t\t}\n\t\t\tans=min(ans,maxx-minx);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\tAnti_copy(); \n\treturn 0;\n} \n```\n\n### 3.\u4e8c\u7ef4ST\u8868/\u500d\u589e\u5199\u6cd5\uff08100pts\u4f46\u662f\u5361\u7684\u7565\u7d27\uff09\n\t\n\u4e0d\u4e86\u89e3ST\u8868\u7684\u540c\u5b66\u8bf7\u79fb\u6b65\u8fd9\u91cc: \n[https://www.luogu.org/problemnew/show/P3865](P3865\u3010\u6a21\u677f\u3011ST\u8868)\n    \n\u600e\u4e48\u5199\u5462\uff1f\u5728\u7eb8\u4e0a\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u63a8\u4e00\u63a8\u5c31\u4f1a\u53d1\u73b0\u5199\u6cd5\u5f88\u663e\u7136:\u500d\u589e\u5904\u7406\u6b63\u65b9\u5f62\u8fb9\u957f\uff0c\u65b9\u6cd5\u548c\u8f6c\u79fb\u90fd\u662f\u57fa\u4e8eDP\u7684\uff0c\u53ea\u662f\u590d\u6742\u5ea6\u4eceO\uff08a*b*n\uff09\u964d\u4f4e\u5230\u4e86O\uff08a*b*logn\uff09\uff0c\u867d\u7136n\u4e0d\u5927\uff0c\u4f46\u662f\u56e0\u4e3a\u9898\u76ee\u5361\u7684\u7d27\uff0c\u6240\u4ee5\u8fd9\u79cd\u65b9\u6cd5\u5c31\u6210\u529f\u5730\u901a\u8fc7\u4e86\u8fd9\u4e2a\u9898\uff0c\u800cDP\u5c31\u88ab\u5361\u6389\u4e86\u3002\n    \n\u5176\u4e2d\u6709\u5f88\u591a\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\uff0c\u6bd4\u5982\u8bf4logn\u8bbe\u7f6e\u6210log2(n)\u5411\u4e0b\u53d6\u6574\uff0c\u9884\u5904\u7406\u53ea\u9700\u8981\u5904\u7406\u5230logn-1(\u4ed4\u7ec6\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48)\uff0c\u5176\u4ed6\u7684\u5c31\u662f\u76f4\u63a5\u5904\u7406\u76f4\u63a5DP\u76f4\u63a5\u67e5\u8be2\u5c31\u53ef\u4ee5\u4e86\u3002\n    \n\u56e0\u4e3a\u6211\u5b9e\u5728\u592a\u84bb\u4e86\uff0c\u6240\u4ee5\u6700\u5f00\u59cb\u5199\u7684\u65f6\u5019\u4e5f\u5199\u4e0d\u51fa\u6765\uff0c\u501f\u9274\u4e86\u4e00\u4e0b@caesar \u7684\u4ee3\u7801\uff0c\u5e76\u4e0d\u662f\u6284\u88ad\u54e6~\n    \n\u53e6\u5916\u7531\u4e8e\u4e2a\u4eba\u4e60\u60ef\uff0c\u672c\u4eba\u5728\u8fd9\u51e0\u4efd\u4ee3\u7801\u4e2d\u90fd\u5c06a,b,n\u8fd9\u4e9b\u53d8\u91cf\u6539\u6210\u4e86n,m,k,\u4e0d\u9002\u5e94\u7684\u8bdd\u53ef\u4ee5\u81ea\u884c\u4fee\u6539~\n    \n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define Anti_copy() printf(\"\u6211\u6c38\u8fdc\u559c\u6b22CYD\\n\") \nusing namespace std;\nconst int INF=2147483647;\nint n,m,k,logk,grid[1010][1010],maxv[1010][1010],minv[1010][1010];\n\nint query(int x, int y){\n    int _max=0,_min=0;\n    _max=max(maxv[x][y],max(maxv[x+k-(1<<logk)][y+k-(1<<logk)],max(maxv[x+k-(1<<logk)][y],maxv[x][y+k-(1<<logk)])));\n    _min=min(minv[x][y],min(minv[x+k-(1<<logk)][y+k-(1<<logk)],min(minv[x+k-(1<<logk)][y],minv[x][y+k-(1<<logk)])));\n    return _max-_min;\n}\n\nint main (){\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            scanf(\"%d\",&grid[i][j]);\n            maxv[i][j]=minv[i][j]=grid[i][j];\n        }    \t\n\t}\n\tlogk=floor(log2(k));\n//\tprintf(\"logk=%d\\n\",logk);\n    for(int s=0;s<=logk-1;s++){\n        for(int i=1;i+(1<<s)<=n;i++){\n            for(int j=1;j+(1<<s)<=m;j++){\n                maxv[i][j]=max(maxv[i][j],max(maxv[i+(1<<s)][j+(1<<s)],max(maxv[i+(1<<s)][j],maxv[i][j+(1<<s)])));\n                minv[i][j]=min(minv[i][j],min(minv[i+(1<<s)][j+(1<<s)],min(minv[i+(1<<s)][j],minv[i][j+(1<<s)])));\n        \t}        \t\n\t\t}    \t\n\t}\n\t/*\n\t\t\u6b64\u5904\u5e94\u8be5\u6ce8\u610f\uff1a\u4e3a\u4ec0\u4e48\u662f\u5904\u7406\u6210logk\u5462\uff1f\u56e0\u4e3a\u8fd9\u4e2a\u6570\u7ec4\u91cc\u9762\u6bcf\u4e00\u6b21\u90fd\u4f1a\u6269\u5f201\u500d\uff0c\u8fd8\u8981\u5305\u62ec\u539f\u6765\u5df2\u7ecf\u5904\u7406\u7684\u5927\u5c0f\uff0c\u6240\u4ee5\u5904\u7406\u5230logk-1\u5c31\u53ef\u4ee5\u5566 \n\t\t*/\n    int ans=INF;\n    for(int i=1;i<=n-k+1;i++){//\u5230n-k+1\u7684\u539f\u56e0\u662f\u8fd8\u8981\u5305\u62ec\u540e\u9762k\u9762\u79ef\u4e3ak\u7684\uff0c\u9700\u8981+1 \n        for(int j=1;j<=m-k+1;j++){\n        \t\n            ans=min(ans,query(i,j));            \t\n\t\t} \t\n\t}\n\tprintf(\"%d\",ans);\n\tAnti_copy();\n    return 0;\n}\n```\n### 4. \u5355\u8c03\u961f\u5217\u5199\u6cd5\n\n#### \u56e0\u4e3a\u8fd9\u4e2a\u4eba\u5b9e\u5728\u592a\u84bb\u4e86\u6240\u4ee5\u4e0d\u4f1a\u5199\uff0c\u8bf7\u79fb\u6b65\u5176\u4ed6\u9898\u89e3qwq\uff08\u9003\n\n\n#### \u5982\u679c\u5bf9\u4f60\u6709\u5e2e\u52a9\u7684\u8bdd\u5c31\u70b9\u4e2a\u8d5e\u5427qwq",
        "postTime": 1536545706,
        "uid": 58698,
        "name": "Nativ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "# \u524d\u8a00\n\n\u4e71\u641e\u4e86\u4e00\u4e0a\u5348\uff0c\u90a3\u4e48\u8ba9\u6211\u6765\u4e71\u641e\u4e00\u7bc7\u9898\u89e3\u5427\n\n\u8fd9\u9898\u6211\u672c\u6765\u662f\u7528\u5355\u8c03\u961f\u5217\u8fc7\u7684\uff0c\u4f46\u662f\u968f\u624b\u7ffb\u4e86\u7ffb\u9898\u89e3\uff0c\u770b\u89c1\u4e00\u4e2a\u5927\u4f6c\u62ff\u968f\u673a\u4e71\u641e\u8fc7\u4e86\uff0c\u4e8e\u662f\u731b\u7136\u60f3\u8d77\u8fd9\u662f\u4e00\u4e2a\u591a\u5cf0\u7684\u51fd\u6570\uff1a\n\n> $f(x, y) = max\\{w[i][j]\\} - min\\{w[i][j]\\}$\n> \n> \u5176\u4e2d$x\u2208[n,a], y\u2208[n,b], i\u2208[x-n+1,x], j\u2208[y-n+1]$\n\n\u53ef\u4e0d\u53ef\u4ee5\u9000\u4ed6\u4e00\u706b\u5462\uff1f\n\n\u6240\u4ee5\u6211\u4eec\u6765\u7528\u7384\u5b66\u7b97\u6cd5\u505a\u4e00\u505a\u3002\n\n# \u4e25\u6b63\u58f0\u660e\n\n\u672c\u9898\u89e3\u975e\u6b63\u89e3\uff0c\u800c\u4e14\u5f88\u6162\uff0c\u751a\u81f3\u53ef\u4ee5\u8bf4\u4ec5\u4f9b\u89c2\u8d4f\u3002\u6240\u4ee5\u5982\u679c\u60a8\u628a\u8fd9\u4e2a\u4ee3\u7801\u4ea4\u4e86\u4e0a\u53bbA\u4e0d\u4e86\uff0cemm\u3002\n\n\u4f46\u662f\u4e3a\u4e86\u907f\u514d\u8fd9\u7bc7\u9898\u89e3\u8fc7\u4e8e\u65e0\u610f\u4e49\uff0c\u6211\u628a\u6211\u5199\u7684\u5355\u8c03\u961f\u5217\u4f18\u5316DP\u7684\u601d\u8def\u4e5f\u5199\u5728\u8fd9\u91cc\u5427\u3002\n\n# \u5355\u8c03\u961f\u5217\u505a\u6cd5\n\n### \u601d\u8def\n\n\u5982\u679c\u4e0d\u4f1a\u5355\u8c03\u961f\u5217\uff0c\u8bf7\u79fb\u6b65[P1886 \u6ed1\u52a8\u7a97\u53e3](https://www.luogu.org/problem/P1886)\u3002\n\n\u8fd9\u9053\u9898\u5c31\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u6ed1\u52a8\u7a97\u53e3\u3002\u6211\u4eec\u9996\u5148\u8bbe$fmax[i][j]$\u8868\u793a\u7b2c$i$**\u884c**\uff0c\u8fd9\u4e00**\u884c**\u5230$j$\uff0c\u5173\u952e\u5b57\u662f\u539f\u77e9\u9635\u7684\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\u540c\u7406\u3002\n\n\u7136\u540e\u6211\u4eec\u8bbe$gmax[i][j]$\u4e3a\u7b2c$i$**\u5217**\u5230\u7b2c$j$\u4e2a\u6570\uff0c\u5173\u952e\u5b57\u662f$fmax$\u6570\u7ec4\u7684\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\u540c\u7406\u3002\n\n\u7528OI\u961f\u5217\u7ef4\u62a4\u3002\n\n### \u6ce8\u610f\n\n\u7b2c\u4e8c\u6b21\u7684\u5faa\u73af\u53d8\u91cf\u8981\u53cd\u7740\u5199\u3002\n\n### \u4ee3\u7801\n\n\u8bf4\u4e86\u8fd9\u4e48\u591a\u6709\u70b9\u62bd\u8c61\uff0c\u6765\u770b\u4e00\u4e0b\u4ee3\u7801\u3002\uff08\u90a3\u4e00\u5929\u548c\u540c\u684c\u6bd4\u8c01\u7684\u9a6c\u8702\u6bd2\u7624\uff0c\u4e8e\u662f\u5199\u4e86\u4e00\u4e2a~~NOIP\u521d\u8d5b~~CSP\u7b2c\u4e00\u8f6e\u7684\u4ee3\u7801\uff09\n\n```cpp\n#include \"iostream\"\n#include \"cstdio\"\n#include \"cstring\"\n\nconst int N = 1005;\nint a, b, n;\nint w[N][N];\nint fmax[N][N], fmin[N][N];\nint gmax[N][N], gmin[N][N];\nint minn[10005], h1 = 0, t1 = 0;\nint maxn[10005], h2 = 0, t2 = 0;\n\nint main()\n{\n\tstd::ios::sync_with_stdio(0);\n\tstd::cin.tie(NULL);\n\tstd::cout.tie(NULL);\n\tstd::cin >> a >> b >> n;\n\tfor (int _ = 1; _ <= a; _++) {\n\t\tfor (int __ = 1; __ <= b; __++) {\n\t\t\tstd::cin >> w[_][__];\n\t\t}\n\t} \n\tfor (int _ = 1; _ <= a; _++) { //\u6a2a\u7740DP\n\t\tmemset(minn, 0, sizeof(minn)); h1 = 1; t1 = 0; //\u6ce8\u610f\u6bcf\u6b21\u90fd\u8981\u6e05\u7a7a\n\t\tmemset(maxn, 0, sizeof(maxn)); h2 = 1; t2 = 0;\n\t\tfor (int __ = 1; __ <= b; __++) {\n\t\t\twhile (minn[h1] < __ - n + 1 && h1 <= t1) h1++;\n\t\t\twhile (maxn[h2] < __ - n + 1 && h2 <= t2) h2++; //\u8001\u5e74\u9009\u624b\u9000\u5f79\n\t\t\twhile (w[_][minn[t1]] >= w[_][__] && h1 <= t1) t1--; \n\t\t\twhile (w[_][maxn[t2]] <= w[_][__] && h2 <= t2) t2--; //\u5982\u679c\u4e00\u4e2a\u4eba\u6bd4\u4f60\u5c0f\u8fd8\u6bd4\u4f60\u5f3a\uff0c\u90a3\u4f60\u5c31\u6253\u4e0d\u8fc7\u4ed6\u4e86\n\t\t\tminn[++t1] = __;\n\t\t\tmaxn[++t2] = __; //\u65b0\u9009\u624b\u52a0\u5165OI\u961f\u5217\n\t\t\tfmin[_][__] = w[_][minn[h1]];\n\t\t\tfmax[_][__] = w[_][maxn[h2]]; //\u6700\u5f3a\u9009\u624b\u8fdb\u7701\u961f\n\t\t}\n\t}\n\tfor (int _ = 1; _ <= b; _++) { //\u7ad6\u7740DP\n\t\tmemset(minn, 0, sizeof(minn)); h1 = 1; t1 = 0;\n\t\tmemset(maxn, 0, sizeof(maxn)); h2 = 1; t2 = 0; //\u6ce8\u610f\u6bcf\u6b21\u90fd\u8981\u6e05\u7a7a\n\t\tfor (int __ = 1; __ <= a; __++) {\n\t\t\twhile (minn[h1] < __ - n + 1 && h1 <= t1) h1++;\n\t\t\twhile (maxn[h2] < __ - n + 1 && h2 <= t2) h2++; //\u8001\u5e74\u9009\u624b\u9000\u5f79\n\t\t\twhile (fmin[minn[t1]][_] >= fmin[__][_] && h1 <= t1) t1--;\n\t\t\twhile (fmax[maxn[t2]][_] <= fmax[__][_] && h2 <= t2) t2--; //\u5982\u679c\u4e00\u4e2a\u4eba\u6bd4\u4f60\u5c0f\u8fd8\u6bd4\u4f60\u5f3a\uff0c\u90a3\u4f60\u5c31\u6253\u4e0d\u8fc7\u4ed6\u4e86\n\t\t\tminn[++t1] = __;\n\t\t\tmaxn[++t2] = __; //\u65b0\u9009\u624b\u52a0\u5165OI\u961f\u5217\n\t\t\tgmin[__][_] = fmin[minn[h1]][_];\n\t\t\tgmax[__][_] = fmax[maxn[h2]][_]; //\u6700\u5f3a\u9009\u624b\u8fdb\u7701\u961f\n\t\t}\n\t}\n\tint ZnS = 0x3f3f3f3f; //\u7eaa\u5ff5\u4e00\u4e2a\u5927\u4f6c\n\tfor(int _ = n; _ <= a; _++) {\n\t\tfor(int __ = n; __ <= b; __++) {\n\t\t\tZnS = std::min(ZnS, gmax[_][__] - gmin[_][__]);\n\t\t}\n\t}\n\tstd::cout << ZnS << std::endl;\n}\n```\n\n\u4e0b\u9762\u8fdb\u5165\u6b63\u9898\u3002\n\n# \u6a21\u62df\u9000\u706b\u505a\u6cd5\n\n## \u601d\u8def\n\n\u5982\u679c\u4e0d\u4f1a\u6a21\u62df\u9000\u706b\uff0c\u8bf7\u79fb\u6b65[1337 \\[JSOI2004\\]\u5e73\u8861\u70b9 / \u540a\u6253XXX](https://www.luogu.org/problem/P1337)\n\n\u6211\u4eec\u8fd9\u91cc\u6bcf\u6b21\u751f\u6210\u4e00\u4e2a\u5411\u91cf\uff0c\u8fd9\u4e2a\u5411\u91cf\u7684\u957f\u5ea6\u548c\u6e29\u5ea6\u6709\u5173\uff0c\u5373\n\n```cpp\nint X = (x + ((rand() << 1) - RAND_MAX) % (int)round(T * 10)) % a + 1;\nint Y = (y + ((rand() << 1) - RAND_MAX) % (int)round(T * 10)) % b + 1;\nif(X < n || X > a || Y < n || Y > b) {T *= delta; continue;} \n//\u8fd9\u6b65\u4e00\u5b9a\u8981\u4e58\u4e0adelta\uff0c\u4e0d\u7136\u4f1a\u7531\u4e8e\u8138\u9ed1\u9677\u5165\u9ed1\u6d1e\u51fa\u4e0d\u6765\u3002\n//\uff08\u8fd9\u4e2a\u968f\u673a\u6570\u5e76\u4e0d\u662f\u5b8c\u5168\u968f\u673a\uff0c\u800c\u662f\u53d6\u51b3\u4e8e\u5b83\u7684\u79cd\u5b50\u7684\u4f2a\u968f\u673a\u6570\uff09\n```\n\n\u7136\u540e\u7528\u8fd9\u4e24\u4e2a\u65b0\u7684\u70b9\u8fdb\u884c\u6a21\u62df\u8ba1\u7b97\uff0c\u6c42\u51fa\u589e\u91cf\n\n```cpp\ndouble now = calc(X, Y);\ndouble Delta = now - ans;\n```\n\n\u5982\u679c$Delta$\u5c0f\u4e8e0\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2a\u66f4\u4f18\u89e3\uff0c\u63a5\u53d7\uff0c\u5176\u4ed6\u60c5\u51b5\u4ee5\u4e00\u4e2a\u548c\u6e29\u5ea6\u3001\u589e\u91cf\u5927\u5c0f\u6709\u5173\u7684\u6982\u7387\u63a5\u53d7\u5b83\uff0c\u6e29\u5ea6\u8d8a\u5c0f\u3001\u589e\u91cf\u8d8a\u5927\u6982\u7387\u8d8a\u5c0f\n\n```cpp\nif(Delta < 0) {\n\tans = now;\n\tx = X;\n\ty = Y;\n\tansx = x;\n\tansy = Y;\n}\nelse if(exp(-Delta / T) * RAND_MAX > rand()) {\n\tx = X;\n\ty = Y;\n}\nT *= delta;\n```\n\n\u7136\u540e\u518d\u65f6\u95f4\u5141\u8bb8\u7684\u8303\u56f4\u5185\u5c3d\u53ef\u80fd\u591a\u7684\u8dd1\u6a21\u62df\u9000\u706b\u3002\n\n## \u6ce8\u610f\n\n\u4e0b\u9762\u7684\u8fd9\u4efd\u4ee3\u7801\u4f7f\u7528\u7684\u968f\u673a\u79cd\u5b50\u662f$time(NULL)$\uff0c\u7136\u540e\u5b83\u5728\u4e8c\u3007\u4e00\u4e5d\u5e74\u4e5d\u6708\u5341\u4e09\u65e5\u4e5d\u65f6\u4e09\u5341\u4e5d\u5206\u4e8c\u5341\u4e8c\u79d2\u4e0d\u77e5\u9053\u591a\u5c11\u6beb\u79d2\u4ea7\u751f\u4e86\u53ef\u4ee5AC\u6b64\u9898\u7684\u79cd\u5b50\u3002\u6b64\u5916\u5e73\u5747\u5f97\u5206\u4e3a$90$\u5de6\u53f3\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1005;\nint a, b, n;\nint w[N][N];\n\nconst double MAX_TIME = 0.9;\nconst double delta = 0.996;\nint ans = INT_MAX;\nint ansx, ansy;\n\nint calc(int x, int y)\n{\n\tint minn = INT_MAX;\n\tint maxn = -INT_MAX;\n\tfor(int i = x - n + 1; i <= x; i++) {\n\t\tfor(int j = y - n + 1; j <= y; j++) {\n\t\t\tminn = min(minn, w[i][j]);\n\t\t\tmaxn = max(maxn, w[i][j]);\n\t\t}\n\t}\n\treturn maxn - minn;\n}\n\nvoid Simulate_Anneal()\n{\n\tdouble T = max(a, b);\n\tint x = ansx, y = ansy;\n\twhile(T > 0.1) {\n\t\tint X = (x + ((rand() << 1) - RAND_MAX) % (int)round(T * 10)) % a + 1;\n\t\tint Y = (y + ((rand() << 1) - RAND_MAX) % (int)round(T * 10)) % b + 1;\n\t\t//cout << T << \" \" << X << \" \" << Y << \" : \" << endl;\n\t\t//system(\"pause\");\n\t\tif(X < n || X > a || Y < n || Y > b) {T *= delta; continue;}\n\t\tdouble now = calc(X, Y);\n\t\tdouble Delta = now - ans;\n\t\t//cout << T << \" \" << now << endl;\n\t\tif(Delta < 0) {\n\t\t\tans = now;\n\t\t\tx = X;\n\t\t\ty = Y;\n\t\t\tansx = x;\n\t\t\tansy = Y;\n\t\t}\n\t\telse if(exp(-Delta / T) * RAND_MAX > rand()) {\n\t\t\tx = X;\n\t\t\ty = Y;\n\t\t}\n\t\tT *= delta;\n\t}\n}\n\nint main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tsrand(time(NULL));\n\tcin >> a >> b >> n;\n\tfor(int i = 1; i <= a; i++) \n\t\tfor(int j = 1; j <= b; j++) \n\t\t\tcin >> w[i][j];\n\tansx = ansy = n;\t\n\twhile ((double)clock() / CLOCKS_PER_SEC * 1.0 < MAX_TIME) Simulate_Anneal();\n\tcout << ans << endl;\n}\n```\n\n# \u603b\u7ed3\n\n\u5728\u8fd9\u79cd\u9898\uff0c\u5982\u679c\u4e0d\u4f1a\u6b63\u89e3\uff0c\u53ef\u4ee5\u8003\u8651\u968f\u673a\u7b97\u6cd5\uff0c\u9a97\u5230\u5206\u5c31\u8dd1\u3002\n\n\u6211\u4e5f\u8be5\u8dd1\u4e86\u3002",
        "postTime": 1568341385,
        "uid": 92254,
        "name": "Social_Zhao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u4f5c\u4e3aLevel 3\u7684DP\u9898\u6211\u7adf\u7136\u5f3a\u884c\u7ebf\u6bb5\u6811\u8fc7\u4e86\n\n\u901a\u8fc7\u591a\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6bcf\u4e2a\u65b9\u5f62\u533a\u57df\u91cc\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u4f46\u662f\u53ea\u80fd\u5f9780\u5206\uff0cT\u4e86\u4e24\u4e2a\u70b9\n\n\u61d2\u7684\u5199SBT BST\u4ec0\u4e48\u7684\uff0c\u4e8e\u662f\u7528\u4e86\u4e2a\u5c0f\u4f18\u5316\uff1a\u6bcf\u6b21\u4fdd\u5b58\u6bcf\u884c\u6bcfN\u4e2a\u6570\u6700\u5927\u6700\u5c0f\u503c\u65f6\u68c0\u6d4b\u52a0\u5165\u90a3\u4e2a\u6570\u548c\u5220\u53bb\u90a3\u4e2a\u6570\u662f\u5426\u5f71\u54cd\u4e0a\u6b21\u7684\u7ed3\u679c\uff0c\u5426\u5219\u76f4\u63a5\u62f7\u8d1d\n\n\u4ee3\u7801\u5728\u6700\u4e0b\u9762\uff0c\u7b80\u5355\u4f18\u5316\u4e86\u4e00\u4e0b\u8f7b\u6613\u8fc7\u4e86\uff0c\u4e8e\u662f\u6559\u4f1a\u4e86\u6211\u4e24\u4ef6\u4e8b\n\n1.1e6\u7684\u8bfb\u5165\u4f18\u5316\u4e1d\u6beb\u6ca1\u7528\uff08\u9664\u975e\u5361980ms\uff09\n\n2.\u7406\u60f3\u590d\u6742\u5ea6\u80fd\u8fc7\uff0c\u4f46\u7ebf\u6bb5\u6811\u7684\u590d\u6742\u5ea6\u7cfb\u6570\u592a\u5927\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n        \n\n\n\n```cpp\n#include <stdio.h>\n#include <stdlib.h>\n#define INFINITE    0x7FFFFFFFFF\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)>(b)?(b):(a))\ntypedef struct LTREE\n{\n    int Mm;\n    short F,T,M;\n    LTREE*L,*R;\n    int MakeTree(int Fr,int To,bool Ts,int*Dat);\n    int Search(int Fr,int To,bool Ts);\n}LTR,*LPLTR;\nLTR Pool[3000];\nint TP;\nint LTR::MakeTree(int Fr,int To,bool Ts,int*Dat)\n{\n    if(Fr==To)\n    {\n        F=T=Fr;\n        L=R=0;\n        Mm=Dat[F];\n        return Mm;\n    }\n    F=Fr,T=To;\n    M=(F+T)>>1;\n    L=Pool+TP++;\n    R=Pool+TP++;\n    int ma,mb;\n    ma=L->MakeTree(Fr,M,Ts,Dat);\n    mb=R->MakeTree(M+1,To,Ts,Dat);\n    Mm= Ts?(min(ma,mb)):(max(ma,mb));\n}\nint LTR::Search(int Fr,int To,bool Ts)\n{\n    if(Fr==F&&To==T)\n        return Mm;\n    if(M>=To)\n        return L->Search(Fr,To,Ts);\n    if(Fr>M)\n        return R->Search(Fr,To,Ts);\n    int ma,mb;\n    ma=L->Search(Fr,M,Ts);\n    mb=R->Search(M+1,To,Ts);\n    return Ts?(min(ma,mb)):(max(ma,mb));\n}              //\u7ebf\u6bb5\u6811\u5185\u90e8\u4ee3\u7801\u6b7b\u6d3b\u6ca1\u6cd5\u518d\u4f18\u5316\u4e86\uff0cinline\u4e0d\u652f\u6301\u9012\u5f52\u51fd\u6570\u8c8c\u4f3c\nLTR ML;\nint Map[1010][1010];\nint LMMap[1010][1010],HMMap[1010][1010];      //\u5206\u522b\u4fdd\u5b58\u5904\u7406\u597d\u7684\u4ee5\u5750\u6807(a,b)\u4e3a\u5f00\u5934\u7684n\u4e2a\u6570\u548cn*n\u4e2a\u6570\u7684\u6700\u5927\u503c\nint LmMap[1010][1010],HmMap[1010][1010];     //\u540c\u7406\u662f\u6700\u5c0f\u503c\nint A,B,N,AA,AB;\nvoid Input()\n{\n    scanf(\"%d %d %d\",&A,&B,&N);\n    int wia,wib,b;\n    char c;\n    AA=A-N+1;\n    AB=B-N+1;\n    for(wia=1;wia<=A;++wia)\n        for(wib=1;wib<=B;++wib)\n        {\n            c=getchar();\n            while(c<'0'||c>'9')c=getchar();\n            b=0;\n            while(c>='0'&&c<='9')\n            {\n                b=b*10+c-'0';\n                c=getchar();\n            }\n            Map[wia][wib]=b;\n        }\n}\nvoid DPA()\n{\n    int wia,wib,b;\n    for(wia=1;wia<=A;++wia)\n    {\n        ML.MakeTree(1,B,0,Map[wia]);\n        LMMap[1][wia]=ML.Search(1,1+N-1,0);\n        for(wib=2;wib<=AB;++wib)\n            if(Map[wia][wib+N-1]<=LMMap[wib-1][wia]&&Map[wia][wib-1]!=LMMap[wib-1][wia])\n                LMMap[wib][wia]=LMMap[wib-1][wia];\n            else    LMMap[wib][wia]=ML.Search(wib,wib+N-1,0);\n        TP=0;\n    }\n    for(wib=1;wib<=AB;++wib)\n    {\n        ML.MakeTree(1,A,0,LMMap[wib]);\n        for(wia=1;wia<=AA;++wia)\n            HMMap[wia][wib]=ML.Search(wia,wia+N-1,0);\n        TP=0;\n    }\n    for(wia=1;wia<=A;++wia)\n    {\n        ML.MakeTree(1,B,1,Map[wia]);\n        LmMap[1][wia]=ML.Search(1,N,1);\n        for(wib=2;wib<=AB;++wib)\n            if(Map[wia][wib+N-1]>=LmMap[wib-1][wia]&&Map[wia][wib-1]!=LmMap[wib-1][wia])\n                LmMap[wib][wia]=LmMap[wib-1][wia];\n            else    LmMap[wib][wia]=ML.Search(wib,wib+N-1,1);\n        TP=0;\n    }\n    for(wib=1;wib<=AB;++wib)\n    {\n        ML.MakeTree(1,A,1,LmMap[wib]);\n        for(wia=1;wia<=AA;++wia)\n            HmMap[wia][wib]=ML.Search(wia,wia+N-1,1);\n        TP=0;\n    }\n}\nint main()\n{\n    Input();\n    DPA();\n    int wia,wib,m=0x7FFFFFFF;\n    for(wia=1;wia<=AA;++wia)\n        for(wib=1;wib<=AB;++wib)\n            m=min(m,HMMap[wia][wib]-HmMap[wia][wib]);\n    printf(\"%d\\n\",m);\n    return 0;\n}\n```",
        "postTime": 1486203511,
        "uid": 25508,
        "name": "Night_Aurora",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u5ffd\u7136\u60f3\u968f\u673a\u4e71\u641e\u4e86 \u4e8e\u662f\u5c31\u5f00\u59cb\u968f\u673a\u4e71\u641e \u7136\u540e\u8bd5\u4e86\u51e0\u6b21\u5c31\u8fc7\u4e86\n\n\u6bcf\u6b21\u968f\u673a\u679a\u4e3e\u65b9\u9635\u7684\u5de6\u4e0a\u89d2 \u5982\u679c\u53d1\u73b0\u5f53\u524d\u7684\u5dee\u6bd4\u4ee5\u627e\u5230\u6700\u5c0f\u5dee\u5927 \u76f4\u63a5\u8df3\u51fa\u5faa\u73af\n\n\u5176\u4e2d\u67099\u4e2a\u70b9\u5f88\u7a33 \u7b2c4\u4e2a\u70b9\u6709\u70b9\u5751\n~~~cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<ctime>\nusing namespace std;\nint a,b,s[1010][1010],n,t1,t2,mx,mn,ans=1999999999,check[1010][1010];\nint main()\n{\n    int i,j,k;\n    srand( (unsigned)(time) (NULL));\n    cin>>a>>b>>n;\n    for(i=1;i<=a;i++)\n     for(j=1;j<=b;j++)\n      scanf(\"%d\",&s[i][j]);\n    for(i=1;i<=300000;i++)//\u6ca1\u9519\u5c31\u662f30w \u4e0d\u4f1a\u8d85\u65f6\n    {\n        t1=rand()%(a-n+1)+1;\n        t2=rand()%(b-n+1)+1;\n        if(check[t1][t2]==1) continue;//\u4e00\u4e9b\u526a\u679d\n        check[t1][t2]=1;\n        mn=1999999999;\n        mx=0;\n        for(j=t1;j<t1+n;j++)\n        {\n         for(k=t2;k<t2+n;k++)\n         {\n             if(s[j][k]>mx) mx=s[j][k];\n             if(s[j][k]<mn) mn=s[j][k];\n             if(mx-mn>ans) break;//\u4e00\u4e9b\u526a\u679d\n         }\n         if(mx-mn>ans) break;\n        }\n        //cout<<t1<<\" \"<<t2<<\" \"<<mx<<\" \"<<mn<<endl;\n        //system(\"pause\");\n        ans=min(ans,mx-mn);\n    }\n    cout<<ans; \n    return 0;\n}\n~~~",
        "postTime": 1522413288,
        "uid": 31476,
        "name": "\u6211\u6ca1\u6709\u540d\u79f0",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684st+\u5355\u8c03\u961f\u5217\n\n\u56e0\u4e3an\uff0cm\u4e0d\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u7528:\n\nma[i][j][k]\u548cmi[i][j][k]\u5206\u522b\u8868\u793a\u4ece(i,j)\u5f00\u59cb\u5f80\u53f3\u7684$2^k$\u7684\u6570\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\n\n\u7b97\u4e86\u4e0b\u5185\u5b58\u5927\u6982\u662f2000w\u4e2aint\uff0c\u5e76\u4e0d\u4f1aMle\u3002\u3002\n\n\u65b9\u7a0b\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u53bbbaidu\u4e0bst\u8868\u3002\u3002\u3002\n\n\u7136\u540e\u6211\u4eec\u600e\u4e48\u8fd0\u7528\u9884\u5904\u7406\u51fa\u6765\u7684ma\u548cmi\u6570\u7ec4\u6765\u6c42\u6700\u7ec8\u7684\u7b54\u6848\uff1f\n\n\u663e\u7136\u5982\u679c\u679a\u4e3e\u8fd9\u4e2an\\*n\u7684\u77e9\u9635\u7684\u53f3\u4e0a\u89d2\uff0c\u7136\u540e\u518d\u4e00\u884c\u4e00\u884c\u7684\u627emax\u548cmin\uff0c\u8fd9\u6837\u662f\u4f1aTLE\u7684\u3002\n\n\u600e\u4e48\u529e\u5462\u3002\u3002\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u4e2a\u5355\u8c03\u961f\u5217\u6765\u4f18\u5316\uff0c\u5148\u679a\u4e3e\u8fd9\u4e2a\u77e9\u9635\u7684\u5de6\u8fb9\u754c\uff0c\u90a3\u4e48\u53f3\u8fb9\u754c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f97\u5230\uff0c\u7136\u540e\u4e00\u884c\u4e00\u884c\u5f80\u4e0b\uff0c\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7528\u7740\u8fd9\u4e24\u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#define For(i,x,y) for (int i=x;i<=y;i++)\n#define N 1010\n#define inf 1<<30\nusing namespace std;\nint a[N][N],ma[N][N][11],mi[N][N][11],qmi[N][2],qma[N][2];\nint n,m,t,h1,t1,h2,t2,ans,x;\ninline int read(){\n    int x=0;int ch=getchar(),f=1;\n    while (!isdigit(ch)&&(ch!='-')&&(ch!=EOF)) ch=getchar();\n    if (ch=='-'){f=-1;ch=getchar();}\n    while (isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n    return x*f;\n} //\u8bfb\u4f18\nint queryma(int k,int x,int y){\n    int l=log2(y-x+1);\n    return max(ma[k][x][l],ma[k][y-(1<<l)+1][l]);\n} //\u67e5\u8be2\u7b2ck\u884c\u7684\u7b2cx\u5217\u5230\u7b2cy\u5217\u7684\u6700\u5927\u503c\nint querymi(int k,int x,int y){\n    int l=log2(y-x+1);\n    return min(mi[k][x][l],mi[k][y-(1<<l)+1][l]);\n} //\u67e5\u8be2\u7b2ck\u884c\u7684\u7b2cx\u5217\u5230\u7b2cy\u5217\u7684\u6700\u5c0f\u503c\nint main(){\n    n=read(),m=read(),t=read();\n    int l=log2(max(n,m));\n    For(i,1,n)\n      For(j,1,m){\n          a[i][j]=read();\n          ma[i][j][0]=mi[i][j][0]=a[i][j];\n          For(k,1,10) \n            mi[i][j][k]=inf;\n      }\n    For(i,1,n)\n      For(k,1,l){\n          x=1<<(k-1);\n          For(j,1,m-x){\n                ma[i][j][k]=max(ma[i][j][k-1],ma[i][j+x][k-1]);\n                mi[i][j][k]=min(mi[i][j][k-1],mi[i][j+x][k-1]);\n          }\n      } //\u6c42ma\u548cmi\u6570\u7ec4\n    ans=inf;\n    For(i,1,m){\n        if (i+t-1>m) break;\n        h1=h2=1,t1=t2=0;\n        For(j,1,n){\n            x=queryma(j,i,i+t-1);\n            while (x>=qma[t1][1]&&h1<=t1) t1--;\n            qma[++t1][1]=x;\n            qma[t1][0]=j;\n            x=querymi(j,i,i+t-1);\n            while (x<=qmi[t2][1]&&h2<=t2) t2--;\n            qmi[++t2][1]=x;\n            qmi[t2][0]=j;//\u4e24\u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\n            if (j>=t){\n                while (j-t>=qma[h1][0]) h1++;\n                while (j-t>=qmi[h2][0]) h2++;\n                if (qma[h1][1]-qmi[h2][1]<ans) ans=qma[h1][1]-qmi[h2][1];\n            }\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1514629540,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u540d\u849f\u84bb\uff0c\u6211\u8868\u793a\u6211\u4e0d\u4f1a\u7528\u5927\u4f6c\u4eec\u7684\u5355\u8c03\u961f\u5217\u505a\u8fd9\u9053\u9898\n\n\u6240\u4ee5\u6211\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a\n### ST\u8868\u7b97\u4e24\u904d\n\u5177\u4f53\u662f\u8fd9\u4e48\u64cd\u4f5c\u7684\uff1a\n\n\u6211\u4eec\u8bbema[i][j][k]\u4e3a\u7b2ci\u884c\u7b2cj\u5217\u7684\u683c\u5b50\uff0c\u5f80\u53f3\u7684$2^k$\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\n\n\u8bbemi[i][j][k]\u4e3a\u5f80\u53f3$2^k$\u4e2a\u6570\u4e2d\u7684\u6700\u5c0f\u503c\n\n\u7b2c\u4e00\u904dST\u8868\uff1a\n\n\u5f88\u6a21\u677f\uff0c\u60f3\u5fc5\u5927\u5bb6\u90fd\u4f1a\n\n```cpp\nfor(int i=1;i<=a;i++)\n  for(int j=1;j<=b;j++)\n    ma[i][j][0]=mi[i][j][0]=data[i][j];//data\u662f\u8bfb\u8fdb\u6765\u7684a*b\u7684\u77e9\u9635\nfor(int i=1;i<=a;i++)\n  for(int k=1;k<=logmaxx;k++)//logmaxx\u662f\u5e38\u91cf\uff0c\u5373log(max(a,b))\n\tfor(int j=1;j+(1<<k)-1<=b;j++){\n\t    ma[i][j][k]=max(ma[i][j][k-1],ma[i][j+(1<<k-1)][k-1]);\n\t    mi[i][j][k]=min(mi[i][j][k-1],mi[i][j+(1<<k-1)][k-1]);\n\t}\n```\n\n\u968f\u540e\uff0c\u6211\u4eec\u628a\u7b97\u597d\u7684ma[i][j][k]\u548cmi[i][j][k]\u4e2d\u6240\u6709\u533a\u95f4\u957f\u5ea6\u4e3an\u7684\u6570\u503c\u5b58\u5165f[i][j]\u4e0ez[i][j]\uff0c\u5373\uff1a\n\nf[i][j]\u8868\u793a\u7b2ci\u884c\u7b2cj\u5217\u7684\u683c\u5b50\uff0c\u5f80\u53f3\u7684n\u4e2a\u6570\u7684\u6700\u5927\u503c\n\nz[i][j]\u8868\u793a\u5f80\u53f3\u7684n\u4e2a\u6570\u7684\u6700\u5c0f\u503c\n\n\u5982\u679c\u7b2ci\u884c\u7b2cj\u5217\u7684\u683c\u5b50\u5f80\u53f3\u8fb9\u4e0d\u5230n\u4e2a\u6570\uff0c\u90a3f[i][j]\u548cz[i][j]\u5c31\u5b58\u53f3\u8fb9b-j+1\u4e2a\u6570\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff08\u5426\u5219\u540e\u9762\u8981\u51fa\u9505\uff09\n\n```cpp\nfor(int i=1;i<=a;i++)\n  for(int j=1;j<=b;j++){//\u76f8\u4fe1\u5927\u5bb6\u5e94\u8be5\u5df2\u7ecf\u638c\u63e1ST\u8868\u7684\u533a\u95f4\u67e5\u8be2\n    int x=j,y=min(j+n-1,b);\n    int s=Log[y-x+1];\n    f[i][j]=max(ma[i][x][s],ma[i][y-(1<<s)+1][s]);\n    z[i][j]=min(mi[i][x][s],mi[i][y-(1<<s)+1][s]);\n}\n```\n\n\u55ef\uff0c\u7136\u540e\u6211\u4eec\u5c31\u8981\u518d\u5f04\u4e24\u4e2a\u6570\u7ec4\uff1a\n\nma2[i][j][k]\u8868\u793a\u7b2ci\u884c\u7b2cj\u4e2a\u6570**\u5f80\u4e0b**\u7684$2^k$\u533a\u95f4\u4e2d\uff0c**f[i][j]**\u7684\u6700\u5927\u503c\n\nmi2[i][j][k]\u8868\u793a\u7b2ci\u884c\u7b2cj\u4e2a\u6570**\u5f80\u4e0b**\u7684$2^k$\u533a\u95f4\u4e2d\uff0c**z[i][j]**\u7684\u6700\u5c0f\u503c\n\n### \u6211\u4eec\u77e5\u9053\uff0c\u521a\u521a\u7684f[i][j]\u548cz[i][j]\u8868\u793a\u7684\u662f\u5f80\u53f3\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u800c\u6211\u4eec\u73b0\u5728\u5728\u8fd9\u4e9b\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e0a\u5f80\u4e0b\u518d\u6c42\u4e00\u6b21\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6574\u4e2a\u5f80\u53f3\u4e0b\u65b9\u7684\u77e9\u9635\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u5f00\u59cb\u7b2c\u4e8c\u904dST\u8868\uff1a\n```cpp\n for(int i=1;i<=a;i++)\n   for(int j=1;j<=b;j++){\n     ma2[i][j][0]=f[i][j];\n     mi2[i][j][0]=z[i][j];\n   }\n for(int j=1;j<=b;j++)\n   for(int k=1;k<=logmaxx;k++)\n     for(int i=1;i+(1<<k)-1<=a;i++){\n        ma2[i][j][k]=max(ma2[i][j][k-1],ma2[i+(1<<k-1)][j][k-1]);\n        mi2[i][j][k]=min(mi2[i][j][k-1],mi2[i+(1<<k-1)][j][k-1]);\n     }\n```\n\u6700\u540e\uff0c\u6211\u4eec\u7684\u7b54\u6848\u5c31\u662f\u6240\u6709\u533a\u95f4\u957f\u5ea6\u4e3an\uff08\u56e0\u4e3af[i][j]\u4e0ez[i][j]\u4e5f\u662f\u957f\u5ea6\u4e3an\u7684\u533a\u95f4\uff0c\u6240\u4ee5\u8fd9\u6070\u597d\u662f\u4e00\u4e2an*n\u7684\u77e9\u9635\uff09\u7684ma2[i][j]\u4e0emi2[i][j]\u7684\u5dee\u7684\u6700\u5c0f\u503c\n\n\u5b8c\u7f8e\u89e3\u51b3\uff01\n\n\u7136\u800c\u6211\u4eec\u5c31\u9047\u5230\u4e86\u4e00\u4e2a\u795e\u5947\u7684\u95ee\u9898\n\nMemory Limit Exceeded\n\n\u662f\u7684\uff0c\u521a\u521a\u6211\u4eec\u5f00\u4e86\u56db\u4e2a\u4e09\u7ef4int\u6570\u7ec4\uff0c\u5916\u52a0\u4e09\u4e2a\u4e8c\u7ef4int\u6570\u7ec4\uff0c\u5185\u5b58\u80af\u5b9a\u70b8\n\n\u6240\u4ee5\u6211\u4eec\u518d\u56de\u8fc7\u53bb\u770b\uff1a\n\n1.\u6709\u6ca1\u6709\u53d1\u73b0f\u6570\u7ec4\u548cz\u6570\u7ec4\u90fd\u5f88\u591a\u4f59\uff1f\u5b83\u4eec\u90fd\u53ea\u662f\u4e34\u65f6\u8bb0\u5f55\u7b54\u6848\u7684\u4e2d\u8f6c\u7ad9\uff0c\u5176\u5b9e\u90fd\u53ef\u4ee5\u4e0d\u8981\uff0c\u6211\u4eec\u53ea\u8981\u628ama[i][j]\u548cmi[i][j]\u5728\u533a\u95f4\u957f\u5ea6\u4e3an\u7684\u65f6\u5019\u7684\u7b54\u6848\uff0c\u76f4\u63a5\u8d4b\u7ed9ma2[i][j][0]\u4e0emi2[i][j][0]\u5373\u53ef\u3002\u540c\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u628adata\u6570\u7ec4\u4e5f\u7701\u6389\n\n2.\u6709\u6ca1\u6709\u53d1\u73b0ma2[i][j][k]\u4e0emi2[i][j][k]\u5176\u5b9e\u4e5f\u5f88\u591a\u4f59\uff1f\u6211\u4eec\u76f4\u63a5\u628ama[i][j][k]\u4e0emi[i][j][k]\u5faa\u73af\u5229\u7528\u5c31\u53ef\u4ee5\u4e86\n\n\u55ef\uff0c\u73b0\u5728\u6211\u4eec\u6210\u529f\u5730\u7b80\u5316\u6210\u4e86\u4e24\u4e2a\u4e09\u7ef4\u7684int\u6570\u7ec4\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1aMLE\u4e86\uff08~~\u867d\u7136\u4f9d\u65e7\u670979036KB\u7684\u53ef\u6015\u5185\u5b58~~\uff09\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint const maxx=1001;\nint const logmaxx=10;\nint ma[maxx][maxx][logmaxx];\nint mi[maxx][maxx][logmaxx];\nint Log[maxx],a,b,n;\ninline int read(){//\u8bfb\u5165\u4f18\u5316\n\tint sum=0;\n\tbool fushu=false;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9'){\n\t\tif(c=='-') fushu=true;\n\t\tc=getchar();\n\t}\n\twhile(c>='0' && c<='9'){\n\t\tsum=(sum<<1)+(sum<<3)+(c^48);\n\t\tc=getchar();\n    }\n    if(fushu) sum=-sum;\n    return sum;\n}\nsigned main(){\n\ta=read(),b=read(),n=read();\n\tfor(int i=1;i<=a;i++)\n\t  for(int j=1;j<=b;j++){\n\t  \tint data=read();\n\t  \tma[i][j][0]=mi[i][j][0]=data;\n\t  }\n    //C++\u81ea\u5e26\u7684log2\u6548\u7387\u4e0d\u9ad8\uff0c\u6211\u4eec\u76f4\u63a5O(n)\u9884\u5904\u7406\n\tLog[0]=-1;//\u53ea\u6709\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1Log[1]=0\n\tfor(int i=1;i<=max(a,b);i++) Log[i]=Log[i>>1]+1;\n\tfor(int i=1;i<=a;i++)\n\t  for(int k=1;k<=logmaxx;k++)\n\t    for(int j=1;j+(1<<k)-1<=b;j++){\n\t    \tma[i][j][k]=max(ma[i][j][k-1],ma[i][j+(1<<k-1)][k-1]);\n\t    \tmi[i][j][k]=min(mi[i][j][k-1],mi[i][j+(1<<k-1)][k-1]);\n\t    }\n    for(int i=1;i<=a;i++)\n      for(int j=1;j<=b;j++){\n      \tint x=j,y=min(j+n-1,b);//\u6ce8\u610f,\u662fj+n-1\uff0c\u4e0d\u662fj+n\n      \tint s=Log[y-x+1];\n      \tma[i][j][0]=max(ma[i][x][s],ma[i][y-(1<<s)+1][s]);//\u5faa\u73af\u5229\u7528\n      \tmi[i][j][0]=min(mi[i][x][s],mi[i][y-(1<<s)+1][s]);\n      }\n    for(int j=1;j<=b;j++)\n      for(int k=1;k<=logmaxx;k++)\n        for(int i=1;i+(1<<k)-1<=a;i++){\n        \tma[i][j][k]=max(ma[i][j][k-1],ma[i+(1<<k-1)][j][k-1]);\n        \tmi[i][j][k]=min(mi[i][j][k-1],mi[i+(1<<k-1)][j][k-1]);\n        }\n    int ans=2147483647;\n    for(int i=1;i+n-1<=a;i++)\n      for(int j=1;j+n-1<=b;j++){\n      \tint x=i,y=i+n-1;\n      \tint s=Log[y-x+1];\n      \tans=min(ans,max(ma[x][j][s],ma[y-(1<<s)+1][j][s])-min(mi[x][j][s],mi[y-(1<<s)+1][j][s]));\n      }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n\u672c\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(a*b log n)\uff0c\u8fd8\u662f\u53ef\u4ee5\u63a5\u53d7\u7684~~\uff08\u5c31\u662f\u7a7a\u95f4\u590d\u6742\u5ea6\u5927\u4e86\u4e00\u70b9\uff09~~\n\n\u770b\u4e0d\u61c2\u53ef\u4ee5\u79c1\u4fe1\u6211",
        "postTime": 1548660622,
        "uid": 115351,
        "name": "\u03c9\u03b1\u03b7g",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u53c8\u6765\u53d1\u9898\u89e3\u4e86\n\n\u8fd9\u9898\u662f\u8981\u6c42\u89e3\u4e00\u4e2a\u6700\u5927\u503c\u548c\u4e00\u4e2a\u6700\u5c0f\u503c\uff0c\u5e76\u4f7f\u4ed6\u4eec\u7684\u5dee\u6700\u5c0f\n\n\u5982\u679c\u53ea\u6709\u4e00\u884c\u7684\u8bdd\uff0c\u95ee\u9898\u5c31\u53d8\u6210\uff1a\n\n\u4e00\u4e2a\u5e8f\u5217\uff0c\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3ak\u7684\u533a\u95f4\uff0c\u6c42\u4ece1\u5230n\u533a\u95f4\u6700\u5927\uff08\u5c0f\uff09\u503c\n\n\u6ed1\u52a8\u7a97\u53e3\uff0c\u5355\u8c03\u961f\u5217\n\n\u95ee\u9898\u662f\u73b0\u5728\u662f\u4e00\u4e2a\u5e73\u9762\n\n\u7136\u800c\u6211\u4eec\u770b\u5230\uff0cn\u548cm\u90fd\u53ea\u67091000\n\n\u90a3\u4e48\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u505an\u904d\u5355\u8c03\u961f\u5217\u5462\uff1f\n\n\u663e\u7136\u662f\u53ef\u4ee5\u7684\n\n\u6211\u4eec\u6a2a\u5411\u505an\u904d\u5355\u8c03\u961f\u5217\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6a2a\u5411\u4e0a\u7684\u6700\u5927\uff08\u5c0f\uff09\u503c\n\n\u5c06m\uff0cn\u53cd\u8fc7\u6765\u7eb5\u5411\u505am\u904d\u5355\u8c03\u961f\u5217\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7eb5\u5411\u4e0a\u7684\u6700\u5927\uff08\u5c0f\uff09\u503c\n\n\u6700\u7ec8\u4f1a\u5f97\u5230\u4e24\u4e2a\u6240\u6c42\u77e9\u9635\uff0c\u5728\u4ed6\u4eec\u7684\u5dee\u503c\u4e2d\u53d6min\u5c31\u597d\u5566\n\n\n\u4ee3\u7801\u5982\u4e0b\n\n## code\n\n```cpp\n#include<bits/stdc++.h>\n#define R register\n\nusing namespace std;\nint n,m,k,s[1005][1005];\nint head,tail,ans = 2147483647;\nint f[1005][1005],g[1005][1005];\nint x[1005][1005],y[1005][1005];\nint q[1005];\t\n\nint main() {\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(R int i = 1;i <= n;++ i)\n\t\tfor(R int j = 1;j <= m;++ j)\n\t\t\tscanf(\"%d\",&s[i][j]);\n\tfor(R int i = 1;i <= n;++ i) {\n\t\thead = tail = q[1] = 1;\n\t\tfor(R int j = 2;j <= m;++ j) {\n\t\t\twhile(head <= tail && s[i][q[tail]] <= s[i][j]) tail --;\n\t\t\tq[++tail] = j;\n\t\t\twhile(head <= tail && q[head] <= j - k) head ++;\n\t\t\tif(j >= k) f[i][j - k + 1] = s[i][q[head]];\n\t\t}\n\t}\n\tmemset(q,0,sizeof(q));\n\tfor(R int i = 1;i <= m - k + 1;++ i) {\n\t\thead = tail = q[1] = 1;\n\t\tfor(R int j = 1;j <= n;++ j) {\n\t\t\twhile(head <= tail && f[q[tail]][i] <= f[j][i]) tail --;\n\t\t\tq[++tail] = j;\n\t\t\twhile(head <= tail && q[head] <= j - k) head ++;\n\t\t\tif(j >= k) x[j - k + 1][i] = f[q[head]][i];\n\t\t}\n\t}\n\tmemset(q,0,sizeof(q));\n\tfor(R int i = 1;i <= n;++ i) {\n\t\thead = tail = q[1] = 1;\n\t\tfor(R int j = 2;j <= m;++ j) {\n\t\t\twhile(head <= tail && s[i][q[tail]] >= s[i][j]) tail --;\n\t\t\tq[++tail] = j;\n\t\t\twhile(head <= tail && q[head] <= j - k) head ++;\n\t\t\tif(j >= k) g[i][j - k + 1] = s[i][q[head]];\n\t\t}\n\t}\n\tmemset(q,0,sizeof(q));\n\tfor(R int i = 1;i <= m - k + 1;++ i) {\n\t\thead = tail = q[1] = 1;\n\t\tfor(R int j = 1;j <= n;++ j) {\n\t\t\twhile(head <= tail && g[q[tail]][i] >= g[j][i]) tail --;\n\t\t\tq[++tail] = j;\n\t\t\twhile(head <= tail && q[head] <= j - k) head ++;\n\t\t\tif(j >= k) y[j - k + 1][i] = g[q[head]][i];\n\t\t}\n\t}\n\tfor(R int i = 1;i <= n - k + 1;++ i)\n\t\tfor(R int j = 1;j <= m - k + 1;++ j) \n\t\t\tans = min(ans,x[i][j] - y[i][j]);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1568210208,
        "uid": 160654,
        "name": "\u707c\u773c\u7684\u590f\u5a1c",
        "ccfLevel": 4,
        "title": "P2216"
    },
    {
        "content": "\u849f\u84bb\u4e0d\u4f1a\u7528\u5355\u8c03\u961f\u5217\uff0c\u4e8e\u662f\u5c31\u62ff\u57fa\u4e8edp\u7684st\u8868\u505a\n\n\u9996\u5148\uff0c\u7531\u4e8en\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c11\u4e00\u7ef4\u6216\u8005\u4e24\u7ef4\n\n\u56e0\u6b64\u5f002\u7ef4\u6570\u7ec4dp[i][k]\n\n\u8868\u793ai k\u8fd9\u4e2a\u70b9,\u9762\u79ef\u4e3a2\u7684k\u6b21\u65b9\uff0c2\u7684j\u6b21\u65b9\u5185\u6700\u5927(\u6700\u5c0f\u503c)\u521d\u59cbk=0\uff0c\u8fd0\u7b97\u5b8c\u4e4b\u540e\uff0c2\u7684j\u6b21\u65b9<n<2\u7684j+1\u6b21\u65b9\n\n\u7136\u540e\u5c31\u662f\u8fd0\u7528\u500d\u589e\u7684\u601d\u60f3\u5566\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n    int X=0,w=1; char ch=0;\n    while(ch<'0' || ch>'9') {if(ch=='-') w=-1;ch=getchar();}\n    while(ch>='0' && ch<='9') X=(X<<3)+(X<<1)+ch-'0',ch=getchar();\n    return X*w;\n}\nint dp1[1005][1005],dp2[1005][1005],a,b,n,ans=INT_MAX;\nint maxx(int a,int b,int c,int d){\n    int e=max(a,b);\n    int f=max(c,d);\n    return max(e,f);\n}\nint minn(int a,int b,int c,int d){\n    int e=min(a,b);\n    int f=min(c,d);\n    return min(e,f);\n}/*algorithm\u91ccmax,min\u51fd\u6570\u4e0d\u597d\u7528..\u4e0d\u652f\u6301n\u4e2a\u6570\u8fd4\u56de\u6700\u5927\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a*/\nint query(int x,int y){\n    int mmax,mmin;\n    int k=0;\n        for(;;){\n            if((x+(1<<k))>(x+n-1-(1<<k)))break;\n            k++;\n```\n}/\\*\u5f53\u7136\uff0c\u56e0\u4e3a\u662f\u6b63\u65b9\u5f62\uff0c\u6240\u4ee5\u770b\u4e00\u4e2a\u65b9\u5411\u4e0a\u6709\u6ca1\u6709\u8986\u76d6\u67e5\u8be2\u7684\u6b63\u65b9\u5f62\u5c31\u884c\u4e86\uff0c\u5982\u679cx\u5230x+2\u7684j\u6b21\u65b9\u8986\u76d6\u4e86x+n-1\u5230x+n-1-2\u7684j\u6b21\u65b9\uff0c\u6b64\u65f6\u4ee5\u4e0b\u56db\u4e2a\u70b9\u53ef\u4ee5\u5168\u90e8\u8986\u76d6\u88ab\u67e5\u8be2\u7684\u6b63\u65b9\u5f62\\*/\nmmax=maxx(dp1[x][y],dp1[x+n-(1<<k)][y],dp1[x][y+n-(1<<k)],dp1[x+n-(1<<k)][y+n-(1<<k)]);\n\nmmin=minn(dp2[x][y],dp2[x+n-(1<<k)][y],dp2[x][y+n-(1<<k)],dp2[x+n-(1<<k)][y+n-(1<<k)]);\n\n```cpp\n    return mmax-mmin;\n}\nint main(){\n    a=read(),b=read(),n=read();\n    for(int i=1;i<=a;i++){\n        for(int j=1;j<=b;j++){\n            dp1[i][j]=read();\n            dp2[i][j]=dp1[i][j];\n        }\n```\n}/\\*\u521d\u59cbdp[i][k]\u8868\u793a\u4ee5\u5f53\u524d\u70b9\u8d77\u70b9\uff0c2\u76840\u6b21\u65b9\u5185\u6700\u5927\u6700\u5c0f\u503c\\*/\n```cpp\n    int j;\n    for(j=1;(j<<1)<=n;j=(j<<1)){\n        for(int i=1;i+j<=a;i++){\n            for(int k=1;k+j<=b;k++){\n                dp1[i][k]=maxx(dp1[i][k],dp1[i+j][k],dp1[i][k+j],dp1[i+j][k+j]);/*\u6bcf\u6b21\u4e00\u4e2a\u5927\u5faa\u73af\u4e4b\u540e\uff0cdp[i][j]\u7684\u503c\u5c31\u66f4\u65b0\u6210\u539f\u6765\u56db\u500d\u5927\u5c0f\u9762\u79ef\u7684\u6700\u5927\u6700\u5c0f\u503c*/\n                dp2[i][k]=minn(dp2[i][k],dp2[i+j][k],dp2[i][k+j],dp2[i+j][k+j]);/*\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u5f88\u5bb9\u6613\u7684...*/\n            }\n        }\n```\n}/\\*\u5c24\u5176\u6ce8\u610f\u4e0d\u8981\u8d8a\u754c\uff0cj<<1\u8868\u793aj\\*2.\\*/\n```cpp\n    for(int i=1;i+n-1<=a;i++){\n        for(int j=1;j+n-1<=b;j++){\n            ans=min(ans,query(i,j));\n        }\n```\n}/\\*\u56e0\u4e3an\u4e0d\u4e00\u5b9a\u662f2\u7684\u51e0\u6b21\u65b9\u6570\uff0c\u6240\u4ee5\u8981\u67e5\u8be2\uff0c\u5426\u5219\u5c3110\u5206...\\*/\n```cpp\n    cout<<ans;\n}\n//Handan No.1 high school\n//by DefFrancis\n/*\u901f\u5ea6\u8fd8\u662f\u53ef\u4ee5\uff0c\u5f00\u542f\u81ed\u6c27\u4f18\u5316(O3)\u53ef\u4ee51000ms\u5de6\u53f3\uff0c\u6bd4\u4e09\u7ef4\u5feb\u4e00\u70b9\u70b9*/\n```",
        "postTime": 1506307993,
        "uid": 46750,
        "name": "DefFrancis",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "#### \u7b80\u5355\u6765\u8bf4\u6211\u7684\u505a\u6cd5\u5c31\u662f\u7528\u5355\u8c03\u961f\u5217\u6765\u7ef4\u62a4\u5355\u8c03\u961f\u5217\n\n\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230\u66b4\u529b\uff08$O(n^2ab)$\uff09\u7684\u505a\u6cd5\u3002  \n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u5c06\u66b4\u529b\u627e\u6700\u5927\u6700\u5c0f\u503c\u7684\u8fc7\u7a0b\u8fdb\u884c\u4f18\u5316\uff0c\u6bcf\u884c\u7684\u6700\u5927\u6700\u5c0f\u503c\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\uff0c\u6bcf\u6b21\u679a\u4e3e\u5217\uff0c\u5728\u6bcf\u8fde\u7eed$n$\u884c\u7684\u6700\u5927\u6700\u5c0f\u503c\u4e2d\u627e\u6700\u5927\u548c\u6700\u5c0f\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u627e\u5230\u4e86\u4e00\u4e2a $O(nab)$ \u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u9760\u5438\u6c27\u8fc7\u3002  \n\u4e0d\u5438\u6c27 = 50pts \uff08\u672c\u4eba\u4ee3\u7801\uff09  \n\u5438\u6c27 = 100pts \uff081.85s\uff09\n\n\u7ee7\u7eed\u5728\u4e0a\u4e00\u4e2a\u65b9\u6cd5\u7684\u57fa\u7840\u4e0a\u4f18\u5316\uff0c\u53d1\u73b0\u5728\u627e\u6bcf\u8fde\u7eed $n$ \u884c\u65f6\u8017\u8d39\u4e86\u4e0d\u5c0f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4ed4\u7ec6\u770b\u770b\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u518d\u7528\u4e00\u6b21\u5355\u8c03\u961f\u5217\u6765\u7ef4\u62a4\u4e4b\u524d\u7684\u5355\u8c03\u961f\u5217\u7684\u6700\u503c\uff0c\u8fd9\u6837\u5c31\u80fd\u4f18\u5316\u5230 $O(ab)$ \uff0c\u53ef\u4ee5\u4e0d\u5438\u6c27\u8fc7\u8fd9\u9898\u3002  \n\u4e0d\u5438\u6c27 =100pts \uff083.11s\uff09\n\n\u6700\u540e\u603b\u7ed3\u4e00\u53e5\uff0c $O2$ \u8fd8\u662f\u5f88\u7ed9\u529b\u7684\n\n```cpp\n#include <bits/stdc++.h> \nusing namespace std;\nint a, b, n, p[1010][1010], ans = 0x7fffffff;\ndeque<int> que1[1010], que2[1010];//\u5b58\u6bcf\u884c\u7684\u6700\u5927\u3001\u6700\u5c0f\u503c\u7684\u5355\u8c03\u961f\u5217\n//que1[i]\u548cque2[i]\u5b58\u7b2ci\u884c\u67d0\u5143\u7d20\u7684\u4e0b\u6807\ndeque<pair<int, int> > que3, que4;//\u5b58\u5355\u8c03\u961f\u5217\u7684\u5355\u8c03\u961f\u5217\n//first\u5b58\u884c\u53f7\uff0csecond\u5b58\u503c\nint main() {\n\tscanf(\"%d%d%d\", &a, &b, &n);\n\tfor (int i = 1; i <= a; ++i) {\n\t\tfor (int j = 1; j <= b; ++j) {\n\t\t\tscanf(\"%d\", &p[i][j]);\n\t\t}\n\t}\n\tfor (int j = 1; j <= b; ++j) {\n\t\tfor (int i = 1; i <= a; ++i) {\n\t\t\tif (!que1[i].empty() && j - que1[i].front() >= n)  que1[i].pop_front();\n\t\t\tif (!que2[i].empty() && j - que2[i].front() >= n)  que2[i].pop_front();\n\t\t\twhile (!que1[i].empty() && p[i][j] >= p[i][que1[i].back()])  que1[i].pop_back();\n\t\t\twhile (!que2[i].empty() && p[i][j] <= p[i][que2[i].back()])  que2[i].pop_back();\n\t\t\tque1[i].push_back(j);  que2[i].push_back(j);\n\t\t}\n\t\tif (j >= n) {\n\t\t\twhile (!que3.empty())  que3.pop_back();\n\t\t\twhile (!que4.empty())  que4.pop_back();\n\t\t\tfor (int i = 1; i <= a; ++i) {//\u5904\u7406\u8fde\u7eedn\u884c\u7684\u6700\u503c\n\t\t\t\tif (!que3.empty() && i - que3.front().first >= n)  que3.pop_front();\n\t\t\t\tif (!que4.empty() && i - que4.front().first >= n)  que4.pop_front();\n\t\t\t\twhile (!que3.empty() && p[i][que1[i].front()] >= que3.back().second)  que3.pop_back();\n\t\t\t\twhile (!que4.empty() && p[i][que2[i].front()] <= que4.back().second)  que4.pop_back();\n\t\t\t\tque3.push_back(make_pair(i, p[i][que1[i].front()]));\n\t\t\t\tque4.push_back(make_pair(i, p[i][que2[i].front()]));\n\t\t\t\tif (i >= n)  ans = min(ans, que3.front().second - que4.front().second);\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1568276696,
        "uid": 37539,
        "name": "_Qer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "## \u601d\u8def\n\u8fd9\u662f\u4e00\u9053\u4e8c\u7ef4\u5355\u8c03\u961f\u5217\u9898\u554a\uff08~~\u5176\u5b9e\u5c31\u662f\u4e24\u6b21\u5355\u8c03\u961f\u5217~~\uff09\n\n\u6839\u636e\u9898\u610f\u8981\u6c42$([i-n+1,i],[j-n+1,j])$\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u505a\u5dee\u3002\n\n\u5148\u5904\u7406$(i,[j-n+1,j])$\u7684\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4$C$\uff0c\u53bb\u5b58\u50a8\u503c\u3002\n\n\n\u7ef4\u62a4\u6700\u5927\u503c\u7528\u4e00\u4e2a\u4e0b\u964d\u5e8f\u5217$q1$\uff0c\u7ef4\u62a4\u6700\u5c0f\u503c\u7528\u4e00\u4e2a\u4e0a\u5347\u5e8f\u5217$q2$.\n\n$cmax[i][j]=\\max(c[i][j-n+1,j])$\n\n$cmin[i][j]=\\min(c[i][j-n+1,j])$\n\n\u8fd9\u65f6\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5bf9\u4e8e\u6700\u5927\u503c\uff0c\u5982\u679c$c[q1[tail]]\\le c[i]$\uff0c\u8bf4\u660e\u5f53\u524d\u4f4d\u7f6e\u6bd4\u961f\u5c3e\u66f4\u540e\uff0c\u4e14\u5bf9\u4e8e\u540e\u9762\u72b6\u6001\u66f4\u4f18\uff0c\u56e0\u6b64\uff0c\u961f\u5c3e\u5c31\u6ca1\u6709\u5b58\u5728\u7684\u5fc5\u8981\uff0c\u53ef\u4ee5\u8e22\u51fa\u3002\n\n```cpp\nwhile(l1<=r1&&j-q1[l1]>=n)++l1;//\u8fc7\u8fdc\u7684\u8e22\u6389\nwhile(l2<=r2&&j-q2[l2]>=n)++l2;\nwhile(l1<=r1&&c[j]>=c[q1[r1]])--r1;\nwhile(l2<=r2&&c[j]<=c[q2[r2]])--r2;\nq1[++r1]=j;q2[++r2]=j;\ncmax[i][j]=c[q1[l1]];cmin[i][j]=c[q2[l2]];\n```\n\n\u63a5\u4e0b\u6765\uff0c\u5904\u7406$([i-n+1,i])$\n\n\u56e0\u4e3a$cmax[i][j],cmin[i][j]$\u5df2\u7ecf\u8bb0\u5f55\u4e86$c[i][j-n+1,j]$\u4e4b\u95f4\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\uff0c\n\n\u518d\u7528\u5355\u8c03\u961f\u5217\u6c42$\\max(cmax[i-n+1,i][j])-\\min(cmin[i-n+1,i][j])$\uff0c\u66f4\u65b0\u7b54\u6848\u3002\n\n```cpp\nif(i>=n)ans=min(ans,cmax[q1[l1]][j]-cmin[q2[l2]][j]);\n```\n\n## AC code\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#define gc getchar()\nusing namespace std;\nconst int N=1e3+10;\ninline void qr(int &x)\n{\n    x=0;int f=1;char c=gc;\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=gc;}\n    while(c>='0'&&c<='9'){x=x*10+(c^48);c=gc;}\n    x*=f;\n}\nvoid qw(int x)\n{\n    if(x<0)x=-x,putchar('-');\n    if(x/10)qw(x/10);\n    putchar(x%10+48);\n}\nint c[N],cmax[N][N],cmin[N][N];\nint q1[N],q2[N],l1,l2,r1,r2;\nint main()\n{\n\tint a,b,n;qr(a),qr(b),qr(n);\n\tfor(int i=1;i<=a;i++)\n\t{\n\t\tl1=l2=1;r1=r2=0;\n\t\tfor(int j=1;j<=b;j++)\n\t\t{\n\t\t\tqr(c[j]);\n\t\t\twhile(l1<=r1&&j-q1[l1]>=n)++l1;\n\t\t\twhile(l2<=r2&&j-q2[l2]>=n)++l2;\n\t\t\twhile(l1<=r1&&c[j]>=c[q1[r1]])--r1;\n\t\t\twhile(l2<=r2&&c[j]<=c[q2[r2]])--r2;\n\t\t\tq1[++r1]=j;q2[++r2]=j;\n\t\t\tcmax[i][j]=c[q1[l1]];cmin[i][j]=c[q2[l2]];\n\t\t}\n\t}\n\tint ans=1e9;\n\tfor(int j=n;j<=b;j++)\n\t{\n\t\tl1=l2=1;r1=r2=0;\n\t\tfor(int i=1;i<=a;i++)\n\t\t{\n\t\t\twhile(l1<=r1&&i-q1[l1]>=n)++l1;\n\t\t\twhile(l2<=r2&&i-q2[l2]>=n)++l2;\n\t\t\twhile(l1<=r1&&cmax[i][j]>=cmax[q1[r1]][j])--r1;\n\t\t\twhile(l2<=r2&&cmin[i][j]<=cmin[q2[r2]][j])--r2;\n\t\t\tq1[++r1]=i;q2[++r2]=i;\n\t\t\tif(i>=n)ans=min(ans,cmax[q1[l1]][j]-cmin[q2[l2]][j]);\n\t\t}\n\t}\n\tqw(ans);puts(\"\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1561684756,
        "uid": 106232,
        "name": "_Sein",
        "ccfLevel": 0,
        "title": "[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62"
    },
    {
        "content": "\u65e0\u8111\u66b4\u529b~~\u662f\u7edd\u5bf9\u4f1aT\u7684~~   \n\u7136\u800c\u6211\u4eec\u5374\u53cd\u5176\u9053\u800c\u884c\u4e4b\uff01    \n\uff08\u5c31\u662f\u559c\u6b22\u66b4\u529b\uff09   \n\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u5b58\u4e00\u4e2a\u6700\u5927\u6700\u5c0f\u7684\u4f4d\u7f6e\uff0c\u5982\u679c~~\u679a\u4e3e~~\u8d85\u51fa\u4f4d\u7f6e\u4e86\u5c31\u66b4\u529b\u904d\u5386\u4e00\u904d\u3002   \n\u4e5f\u8bb8\u662f\u6570\u636e\u6bd4\u8f83\u6c34\u5427\uff0c\u4e0d\u5f00O2\u90fd\u8fc7\u4e86\u3002   \n\u8fd9\u4e2a\u65b9\u6cd5\u6784\u9020\u6570\u636e\u662f\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u5361\u6389\u7684\uff0c\u6240\u4ee5\u8fd9\u79cd\u65b9\u6cd5\u6700\u597d\u4e0d\u8981\u4f7f\u7528\u3002   \n```\n#include<bits/stdc++.h>\n#define rint register int \n#define maxn 2147483644\nusing namespace std;\ninline int read(){\n\tint X=0;char ch=getchar();\n\twhile(!isdigit(ch))ch=getchar();\n\twhile(isdigit(ch))X=X*10+ch-'0',ch=getchar();\n\treturn X;\n}\nint a,b,c,d[1002][1002],ans=maxn,maxx=-maxn,minn=maxn;\nint zd[2],zx[2];\ninline void find(int a,int b){\n\tmaxx=-maxn,minn=maxn;\n\tfor(rint qq=a;qq<=a+c-1;++qq)\n\t\tfor(rint ww=b;ww<=b+c-1;++ww){\n\t\t\tif(maxx<d[qq][ww]){\n\t\t\t\tzd[0]=qq,zd[1]=ww;\n\t\t\t\tmaxx=d[qq][ww];\n\t\t\t}\n\t\t\tif(minn>d[qq][ww]){\n\t\t\t\tzx[0]=qq,zx[1]=ww;\n\t\t\t\tminn=d[qq][ww];\n\t\t\t}\n\t\t}\n\tans=min(ans,maxx-minn);\n}//\u66b4\u529b\u5bfb\u627e\nint main(){\n\ta=read(),b=read(),c=read();\n\tfor(rint i=1;i<=a;++i)\n\t\tfor(rint j=1;j<=b;++j)\n\t\t\td[i][j]=read();\n\tfind(1,1);\n\tfor(rint i=1;i<=a-c+1;++i){\n\t\tif(zd[0]<=i&&zd[0]>=i+c-1&&zx[0]<=i&&zx[0]>=i+c-1)//\u5224\u65ad\u662f\u5426\u8d85\u51fa\u4f4d\u7f6e\n\t\t\tfind(i,1);\n\t\tfor(rint j=1;j<=b-c+1;++j)\n\t\t\tif(zd[1]>=j&&zd[1]<j+c&&zx[1]>=j&&zx[1]<j+c){//\u540c\u6837\u5224\u65ad\u662f\u5426\u8d85\u51fa\u4f4d\u7f6e\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse find(i,j);\n\t}\n\tcout<<ans;\n}\n```\n\u4e5f\u8bb8\u8fd9\u79cd\u65b9\u6cd5\u8fc7\u8fd9\u9053\u9898\u8fd8\u662f\u9700\u8981\u4e00\u4e9b\u5982registerint\u4e4b\u7c7b\u7684\u5c0f\u7684\u5361\u5e38\u6280\u5de7\u548c\u5feb\u901f\u8bfb\u5165",
        "postTime": 1537363742,
        "uid": 107101,
        "name": "Viston",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u6ca1\u51e0\u4e2a\u4eba\u7528\u7ebf\u6bb5\u6811\u505a\u8fd9\u9053\u9898\uff0c\u4e8e\u662f\u51b3\u5b9a\u8865\u4e00\u53d1\u3002\n\n------------\n\n\n\u9996\u5148\u4e00\u770b\u5b8c\u8fd9\u9053\u9898\uff0c\u5c31\u53d1\u73b0\u8fd9\u662f\u4e00\u9053\u975e\u5e38\u660e\u663e\u7684\u533a\u95f4\u6781\u503c\u95ee\u9898\uff0c\u90a3\u4e48\u5c31\u81ea\u7136\u800c\u7136\u60f3\u5230\u4e86\u7ebf\u6bb5\u6811\uff0cST\u8868\u548c\u5206\u5757 ~~\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u7528\u5206\u5757\u8bd5\u8bd5\uff09~~ \u4f46\u662f\u6211\u592a\u5f31\u4e86\uff0cST\u8868\u548c\u5206\u5757\u90fd\u4e0d\u4f1a\uff0c~~\uff08\u6839\u672c\u6ca1\u60f3\u5230dp\uff09~~ \u4e8e\u662f\u5c31\u53ea\u80fd\u7528\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u3002\n\n\u521a\u5f00\u59cb\uff0c\u6211\u8111\u888b\u77ed\u8def\u4e86\uff0c\u6253\u4e86\u4e00\u4e2a\u5957\u5faa\u73af\u7684\u4e00\u7ef4\u7ebf\u6bb5\u6811\u2014\u2014\n\n```cpp\n#include<iostream>\nusing namespace std;\nint a,b,n,maxx[1010][1010],c[10001],minn[1010][1010];\nvoid build(int x,int k,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tmaxx[x][k]=c[l];\n\t\tminn[x][k]=c[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(x,k*2,l,mid);\n\tbuild(x,k*2+1,mid+1,r);\n\tmaxx[x][k]=max(maxx[x][k*2],maxx[x][k*2+1]);\n\tminn[x][k]=min(minn[x][k*2],minn[x][k*2+1]);\n}\nint query(int i,int k,int l,int r,int x,int y)\n{\n\tif(x<=l&&r<=y)\n\t{\n\t\treturn maxx[i][k];\n\t}\n\tint mid=(l+r)/2,ma=0;\n\tif(x<=mid) ma=max(ma,query(i,k*2,l,mid,x,y));\n\tif(mid<y) ma=max(ma,query(i,k*2+1,mid+1,r,x,y));\n\treturn ma;\n}\nint query1(int i,int k,int l,int r,int x,int y)\n{\n\tif(x<=l&&r<=y)\n\t{\n\t\treturn minn[i][k];\n\t}\n\tint mid=(l+r)/2,mi=0x7FFFFFFF;\n\tif(x<=mid) mi=min(mi,query1(i,k*2,l,mid,x,y));\n\tif(mid<y) mi=min(mi,query1(i,k*2+1,mid+1,r,x,y));\n\treturn mi;\n}\nint main()\n{\n\tcin>>a>>b>>n;\n\tfor(int i=1;i<=a;i++)\n\t{\n\t\tfor(int j=1;j<=b;j++)\n\t\t{\n\t\t\tcin>>c[j];\n\t\t}\n\t\tbuild(i,1,1,b);\n\t}\n\tint ans=0x7FFFFFFF;\n\tfor(int i=1;i<=a-n+1;i++)\n\t{\n\t\tfor(int j=1;j<=b-n+1;j++)\n\t\t{\n\t\t\tint maxx1=0,minn1=0x7FFFFFFF;\n\t\t\tfor(int k=i;k<=i+n-1;k++)\n\t\t\t{\n\t\t\t\tmaxx1=max(maxx1,query(k,1,1,b,j,j+n-1));\n\t\t\t\tminn1=min(minn1,query1(k,1,1,b,j,j+n-1));\n\t\t\t}\n\t\t\tans=min(ans,maxx1-minn1);\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n} \n```\n\n\u5b83\u7684\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(abnlogn)\uff0c\u4ec5\u4f18\u4e8e\u6700\u6734\u7d20\u7684\u66b4\u529b\u7b97\u6cd5O(abn^2)\uff0c\u4f46\u662f\u7531\u4e8e\u5b83\u5de8\u5927\u7684\u5e38\u6570\uff0c\u5b83\u8fde\u66b4\u529b\u90fd\u4e0d\u5982\u3002\u4ee3\u7801\u6bd4\u66b4\u529b\u957f\u4e86\u4e24\u500d\u591a\uff0c\u5f00\u4e8602\u8fd8\u6bd4\u66b4\u529b\u591aT\u4e86\u4e24\u4e2a\u70b9\u3002\n\n\u7136\u540e\u89c2\u5bdf\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u9996\u5148\u533a\u95f4\u8be2\u95ee\u64cd\u4f5c\u53ef\u4ee5\u632a\u51fa\u5faa\u73af\uff0c\u8fd9\u6837\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e3a\u4e86O(ab(n+logb))\uff0c\u4f46\u662f\u5b83\u80af\u5b9a\u8fd8\u662f\u4f1aT\u5f97\u5f88\u60e8\u3002\u4f18\u5316\u7248\u7684\u66b4\u529b\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(abn)\uff0c\u6bd4\u5b83\u7684\u5c0f\uff0c\u4f46\u662f\u4ecd\u7136\u4f1aT\u63891\u52303\u4e2a\u70b9\uff08\u770b\u5177\u4f53\u4ee3\u7801\u60c5\u51b5\uff09\uff0c\u7ebf\u6bb5\u6811\u8fd8\u8981\u7b97\u4e0a\u5b83\u5de8\u5927\u7684\u5e38\u6570\uff0c\u4f30\u8ba1\u8fd9\u6837\u80fd\u8fc7\u4e00\u534a\u6570\u636e\u5c31\u9876\u5929\u4e86\u3002\n\n\u518d\u89c2\u5bdf\u4ee3\u7801\uff0c\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u7b2c\u4e09\u91cd\u5faa\u73af\u4e0d\u5c31\u662f\u5728\u7b2c\u4e00\u8f6e\u533a\u95f4\u8be2\u95ee\u7684\u57fa\u7840\u4e0a\u5728\u7ebf\u6027\u6570\u636e\u4e2d\u627e\u6781\u503c\u561b\uff0c\u90a3\u5c31\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\uff0c\u4ee3\u7801\u5982\u4e0b\u2014\u2014\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint a,b,n,maxx[1010][4010],c[1010],minn[1010][4010];\nint maxx1[1010][4010],minn1[1010][4010],maxx2[1010][4010],minn2[1010][4010];\ninline int read(void) {\n    int x=0,f=1; char ch=getchar();\n    for(;ch<'0'||ch>'9';ch=getchar()) if(ch=='-') f=-1;\n    for(;ch>='0'&&ch<='9';x=(x<<3)+(x<<1)+(ch^48),ch=getchar());\n    return x*f;\n}\nvoid build(int x,int k,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tmaxx[x][k]=c[l];\n\t\tminn[x][k]=c[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(x,k*2,l,mid);\n\tbuild(x,k*2+1,mid+1,r);\n\tmaxx[x][k]=max(maxx[x][k*2],maxx[x][k*2+1]);\n\tminn[x][k]=min(minn[x][k*2],minn[x][k*2+1]);\n}\nvoid build1(int x,int k,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tmaxx2[x][k]=maxx1[x][l];\n\t\tminn2[x][k]=minn1[x][l];\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild1(x,k*2,l,mid);\n\tbuild1(x,k*2+1,mid+1,r);\n\tmaxx2[x][k]=max(maxx2[x][k*2],maxx2[x][k*2+1]);\n\tminn2[x][k]=min(minn2[x][k*2],minn2[x][k*2+1]);\n}\nint query(int i,int k,int l,int r,int x,int y)\n{\n\tif(x<=l&&r<=y)\n\t{\n\t\treturn maxx[i][k];\n\t}\n\tint mid=(l+r)/2,ma=0;\n\tif(x<=mid) ma=max(ma,query(i,k*2,l,mid,x,y));\n\tif(mid<y) ma=max(ma,query(i,k*2+1,mid+1,r,x,y));\n\treturn ma;\n}\nint query1(int i,int k,int l,int r,int x,int y)\n{\n\tif(x<=l&&r<=y)\n\t{\n\t\treturn minn[i][k];\n\t}\n\tint mid=(l+r)/2,mi=1000000010;\n\tif(x<=mid) mi=min(mi,query1(i,k*2,l,mid,x,y));\n\tif(mid<y) mi=min(mi,query1(i,k*2+1,mid+1,r,x,y));\n\treturn mi;\n}\nint query2(int i,int k,int l,int r,int x,int y)\n{\n\tif(x<=l&&r<=y)\n\t{\n\t\treturn maxx2[i][k];\n\t}\n\tint mid=(l+r)/2,ma=0;\n\tif(x<=mid) ma=max(ma,query2(i,k*2,l,mid,x,y));\n\tif(mid<y) ma=max(ma,query2(i,k*2+1,mid+1,r,x,y));\n\treturn ma;\n}\nint query3(int i,int k,int l,int r,int x,int y)\n{\n\tif(x<=l&&r<=y)\n\t{\n\t\treturn minn2[i][k];\n\t}\n\tint mid=(l+r)/2,mi=1000000010;\n\tif(x<=mid) mi=min(mi,query3(i,k*2,l,mid,x,y));\n\tif(mid<y) mi=min(mi,query3(i,k*2+1,mid+1,r,x,y));\n\treturn mi;\n}\nint main()\n{\n\ta=read(),b=read(),n=read();\n\tfor(register int i=1;i<=a;i++)\n\t{\n\t\tfor(register int j=1;j<=b;j++)\n\t\tc[j]=read();\n\t\tbuild(i,1,1,b);\n\t}\n\tfor(register int j=1;j<=b-n+1;j++)\n\t{\n\t\tfor(register int i=1;i<=a;i++)\n\t\t{\n\t\t\tmaxx1[j][i]=query(i,1,1,b,j,j+n-1);\n\t\t\tminn1[j][i]=query1(i,1,1,b,j,j+n-1);\n\t\t}\n\t\tbuild1(j,1,1,a);\n\t}\n\tint ans=1000000010;\n\tfor(register int j=1;j<=b-n+1;j++)\n\t{\n\t\tfor(register int i=1;i<=a-n+1;i++)\n\t\t{\n\t\t\tint t;\n\t\t\tt=query2(j,1,1,a,i,i+n-1)-query3(j,1,1,a,i,i+n-1);\n\t\t\tans=min(ans,t);\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n} \n```\n\n\u8fd9\u6837\uff0c\u4ee3\u7801\u5c31\u4ece~~\u5783\u573e\u822c\u7684~~\u5faa\u73af\u5957\u7ebf\u6bb5\u6811\u4f18\u5316\u6210\u4e86\u6811\u5957\u6811\uff0c\u4e00\u4e2a\u771f\u6b63\u7684\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u3002\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u6709\u4e86\u5de8\u5927\u6539\u89c2\uff0c\u662fO(ab(loga+logb))\uff0c\u7531\u4e8e\u6570\u636e\u8303\u56f4\u662f2<=a,b<=1000\uff0c\u6240\u4ee5loga+logb\u7684\u503c\u975e\u5e38\u5c0f\uff0c\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\uff0c~~\u6240\u4ee5\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(ab)\uff0c~~ \u4f46\u662f\uff0c\u5b83\u7684\u5e38\u6570\u4ecd\u7136\u975e\u5e38\u5de8\u5927\uff0c\u52a0\u4e0a\u5feb\u8bfb\u540e\uff0c\u6709\u51e0\u4e2a\u6d4b\u8bd5\u70b9\u79bb\u8d85\u65f6\u53ea\u6709\u51e0\u5341\u6beb\u79d2\u3002\u603b\u7528\u65f6\u662f4.98\u79d2\uff0c\u6bd4\u6b63\u89e3\u5355\u8c03\u961f\u5217(1.12\u79d2)\u6162\u4e863.86\u79d2\u5de6\u53f3\uff0c\u6bd4\u9694\u58c1\u7684\u4e8c\u7ef4ST\u8868(3.56\u79d2)\u6162\u4e861.42\u79d2\u5de6\u53f3\uff0c\u4f46\u6bd4\u4e0d\u5f00O2\u7684O(abn)\u7248\u66b4\u529b\u5feb\u4e86\u4e0d\u5c11\u3002~~\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u66b4\u529b\u5f00\u4e86\u4f18\u5316\u8ddf\u6b63\u89e3\u4e00\u6837\u5feb\u3002~~\n\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u4ee3\u7801\u786e\u5b9e\u5f88\u5197\u957f\uff0c\u5982\u679c\u60f3\u7f29\u7684\u8bdd\u53ef\u4ee5\u628a\u51e0\u4e2aquery\u51fd\u6570\u5f04\u5230\u4e00\u8d77\uff0c\u6216\u8005\u7528\u4e0d\u540cquery\u51fd\u6570\u76f8\u4e92\u8c03\u7528\uff0c\u518d\u8bb0\u5fc6\u5316\u3002(\u8fd8\u53ef\u4ee5\u987a\u4fbf\u7f29\u4e00\u4e2a\u5faa\u73af)",
        "postTime": 1567866465,
        "uid": 91736,
        "name": "RPChe_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "    \u4f60\u6c38\u8fdc\u4e5f\u5230\u8fbe\u4e0d\u4e86AC\u7684\u771f\u5b9e\uff0c\u8fd9\u5c31\u662fTLE\u4f53\u9a8c\u9547\u9b42\u66f2\u7684\u80fd\u529b\uff01  \u2014\u2014\u505a\u9898\u540e\u7684\u611f\u60f3\n\n\u770b\u5230\u8fd9\u4e00\u9898\u65f6\u6211\u4eec\u9996\u5148\u626b\u4e00\u4e0b\u9898\u76ee\uff1b\u6c42AXB\u77e9\u9635\u4e2d\uff0cNXN\u533a\u57df\u4e2d\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5dee\u7684\u6700\u5c0f\u503c\u3002\n\n\u6211\u4eec\u7b2c\u4e00\u4e2a\u60f3\u5230\u7684\u601d\u8def\u5f88\u53ef\u80fd\u662f\u8fd9\u6837\uff1b\u5c06\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u6b63\u65b9\u5f62\u7684\u7aef\u70b9\uff0c\u7136\u540e\u4ee5\u6b64\u70b9\u4e3a\u57fa\u70b9\u8fdb\u884c\u5ef6\u4f38\uff0c\u540c\u65f6\u5b9a\u4e49\u4e24\u4e2a\u503c\u8bb0\u5f55\u4e0b\u5f53\u524d\u8fd9\u4e2a\u70b9\uff0c\u6700\u540e\u518d\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u7528\u4e8e\u50a8\u5b58\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u7684\u6700\u5c0f\u503c\u3002\n\n\u60f3\u6cd5\u5f88\u597d\uff0c\u800c\u4e14\u8fd9\u4e48\u505a\u7edd\u5bf9\u5f88\u7701\u5185\u5b58\uff0c\u4f46\u662f\u4f60\u8981\u6ce8\u610f\u4e00\u4e2a\u95ee\u9898\uff1b2<=a,b<=1000\uff0cn<=100\uff0c\u5047\u8bbe\u4f60\u771f\u7684\u8fd9\u4e48\u505a\u7684\u8bdd\uff0c\u90a3\u4e48\u5047\u5982\u6570\u636e\u4e2d\u6709\uff08\u597d\u50cf\u771f\u6709\uff09a=b=1000,n=100\u7684\u503c\uff0c\u6309\u7167\u8fd9\u4e2a\u65b9\u6cd5\u53bb\u505a\u7684\u8bdd\uff0c~~\u6587\u660e6\u90fd\u80fd\u518d\u5f00\u4e00\u5c40\u4e86~~TLE\u662f\u5fc5\u5b9a\u7684\u3002\n\n\u90a3\u4e48\u5bf9\u4ed8TLE\u4f53\u9a8c\u6211\u4eec\u8be5\u600e\u4e48\u529e\u5462\uff1f\u5f53\u7136\u662f\u7528\u65e0\u654c\u7684~~\u767d\u91d1~~\u4f18\u5316\u4e4b\u661f\u5bf9\u4ed8\u554a\u3002\n\n\u6211\u4eec\u6709\u4ee5\u4e0b\u51e0\u70b9\u53ef\u4ee5\u4f18\u5316\uff1b\n\n1.\u8bfb\u5165\u4f18\u5316\uff0c\n    \u7531\u4e8e\u6211\u4eec\u8981\u53ef\u80fd\u8bfb\u51651000X1000\u6b21\uff0c\u56e0\u6b64\u8bfb\u5165\u4f18\u5316\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u5373\u4f7f\u4e0d\u4f1a\uff0c\u4ed6\u4e5f\u8db3\u591f\u5e2e\u4f60\u7701\u4e0b\u4e0d\u5c11\u65f6\u95f4\uff1b\n    \n```\n    inline int read(){\n    int x=0; bool f=1; char c=getchar();\n    for(;!isdigit(c);c=getchar()) if(c=='-') f=0;\n    for(; isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n    if(f) return x;\n    return 0-x;}   //\u7b80\u5355\u7684\u8bfb\u5165\u4f18\u5316\n```\n\n~~2.\u8f93\u51fa\u4f18\u5316\uff0c\u56e0\u4e3a\u7528\u5904\u4e0d\u5927\u6240\u4ee5\u53bb\u4ed6\u7684\u5427~~\n\n3.\u672c\u9898\u76ee\u7684\u6838\u5fc3\uff1b**\u5355\u8c03\u961f\u5217**\n\n\u5728\u6b64\u6211\u8981\u611f\u8c22SWEETLEMON\u5927\u4f6c\u4ee5\u4e00\u79cd\u901a\u4fd7\u6613\u61c2\u7684\u65b9\u5f0f\u8ba9\u6211\u660e\u767d\u4e86\u5355\u8c03\u961f\u5217\uff08\u97a0\u8eac\uff09\n\n\u5355\u8c03\u961f\u5217\u7684\u601d\u8def\uff1b\u5728\u4e00\u4e2a\u961f\u5217\u5185\uff0c\u6c42\u51fa\u6bcf\u4e2a\u4e00\u5b9a\u533a\u95f4\u5185\u7684\u6700\u5927/\u6700\u5c0f\u503c\u3002 \u8bf6~\u8fd9\u4e0d\u5c31\u548c\u6211\u4eec\u8981\u7684NXN\u6709\u70b9\u76f8\u4f3c\u4e86\u5417\uff1f\n\n\u5355\u8c03\u961f\u5217\u57fa\u672c\u64cd\u4f5c\uff08\u8fd9\u91cc\u6211\u5f15\u7528\u4e86SWEETLEMON\u7684\u5185\u5bb9\uff0c\u6b64\u65f6\u60c5\u666f\u4e3a\u9009\u62d4\u961f\u5458\uff09\uff1b\n\n    \u5165\u961f/\u6ed1\u52a8\u7a97\u53e3\u53f3\u6ed1\u3002\u6bcf\u5e74\u9009\u62d4\u65b0\u961f\u5458\u65f6\uff0c\u6dd8\u6c70\u6bd4\u8fd9\u540d\u65b0\u961f\u5458\u5f31\u7684\u8001\u961f\u5458\u3002\u5bf9\u4e8e\u5355\u8c03\u961f\u5217\uff0c\u5c31\u662f\u63d2\u5165\u65b0\u5143\u7d20\u65f6\uff0c\u628a\u5148\u524d\u5b58\u5728\u7684\u6bd4\u5f53\u524d\u5143\u7d20\u5c0f\u7684\u5143\u7d20\u5f39\u51fa\uff08\u4ece\u961f\u5c3e\u9000\u961f\uff09\u3002\n    \u9000\u5f79/\u6ed1\u52a8\u7a97\u53e3\u53f3\u6ed1\u3002\u53ea\u9700\u5224\u65ad\u6700\u8001\u7684\u961f\u5458\u662f\u5426\u9700\u8981\u9000\u961f\u3002\u5bf9\u4e8e\u5355\u8c03\u961f\u5217\uff0c\u53ea\u9700\u5224\u65ad\u961f\u5934\u662f\u5426\u5df2\u7ecf\u8d85\u51fa\u6ed1\u52a8\u7a97\u53e3\u8303\u56f4\uff0c\u82e5\u8d85\u51fa\uff0c\u5219\u4ece\u961f\u5934\u9000\u961f\u3002\n    \u53c2\u8d5b/\u67e5\u8be2\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c\u3002\u76f4\u63a5\u6d3e\u6700\u8001\u7684\u961f\u5458\u53c2\u8d5b/\u76f4\u63a5\u8fd4\u56de\u961f\u5934\u5143\u7d20\u3002\n    \n\u518d\u56de\u5230\u6211\u4eec\u7684\u9898\u76ee\uff0c\u5c31\u7b97\u6211\u4eec\u540c\u65f6\u8981\u6700\u5927\u548c\u6700\u5c0f\u503c\uff0c\u4e5f\u4e0d\u8fc7\u662f\u5728\u67d0\u4e9b\u65b9\u9762\u5fae\u8c03\u800c\u5df2\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u59a8\u5f00\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u50a8\u5b58\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e0d\u5c31\u53ef\u4ee5\u4e86\u2014\u2014\n\n\u8bf6\u8bf6\u8bf6\u505c\u4e00\u4e0b\uff01\u8fd9\u4e00\u9898\u4e0d\u662f\u4e8c\u7ef4\u7684\u5417\uff1f\u4f46\u5355\u8c03\u961f\u5217\u53ea\u662f\u5728\u4e00\u7ef4\u4e0a\u8fdb\u884c\u7b5b\u9009\u554a\uff01\n\n\u5f88\u597d\u4f60\u53d1\u73b0\u4e86\u95ee\u9898\uff0c\u4f46\u662f\u8fd9\u4e5f\u4e0d\u8981\u7d27\uff0c\u6211\u4eec\u53ea\u9700\u8fdb\u884c\u4e24\u6b21\u5355\u8c03\u961f\u5217\uff0c\u4e00\u6b21\u6a2a\u5411\u4e00\u6b21\u7eb5\u5411\uff0c\u540e\u9762\u4e00\u6b21\u5728\u524d\u9762\u4e00\u6b21\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u5c31\u53ef\u4ee5\u4e86\u3002\uff08\u597d\u597d\u60f3\u60f3\u4e3a\u4ec0\u4e48\uff09\n\n\u6700\u540e\u662f\u603b\u4ee3\u7801\uff1b\n```\n#include<iostream>\n#include<algorithm>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nlong long t[1001][1001];  //\u50a8\u5b58\u56fe \nlong long zd[1001][1001],zx[1001][1001];   //\u50a8\u5b58\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u5de6\u4e0a\u89d2\u65f6nxn\u5185\u6b63\u65b9\u5f62\u7684\u6700\u5927\u4e0e\u6700\u5c0f\u503c\uff0c\u5373\u7eb5\u5411\u5355\u8c03\u961f\u5217 \nlong long d[1001][1001],x[1001][1001];    // \u50a8\u5b58\u4ee5\u8be5\u70b9\u4e3a\u5de6\u7aef\u70b9\uff0c1XN\u7684\u957f\u65b9\u5f62\u4e2d\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c \uff0c\u5373\u6a2a\u5411\u5355\u8c03\u961f\u5217 \nint a,b,n;   //  \u884c\u6570\uff0c\u5217\u6570\u4ee5\u53ca\u6240\u9700\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\nint front,back,quin,hou,qd[1001],qx[1001];    //\u7528\u4e8e\u50a8\u5b58\u4e00\u4e2a\u961f\u5217\u4e2d\u641c\u5bfb\u5230\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5750\u6807\uff0c\u867d\u7136\u8fd9\u4e2a\u6700\u5c0f\u503c\u7684\u5750\u6807\u5e26\u7740\u4e22\u4eba\u7684\u6c14\u606f  \ninline int read(){\n    int x=0; bool f=1; char c=getchar();\n    for(;!isdigit(c);c=getchar()) if(c=='-') f=0;\n    for(; isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n    if(f) return x;\n    return 0-x;\n}   //\u7b80\u5355\u7684\u8bfb\u5165\u4f18\u5316\nint main()\n{\n\ta=read(),b=read(),n=read();\n\tfor (int i=1;i<=a;i++)\n\t{\n\t\tfor (int j=1;j<=b;j++)\n\t\t{\n\t\t\tt[i][j]=read();\n\t\t}\n\t}\n\tfor (int i=1;i<=a;i++)    //\u5355\u8c03\u961f\u5217\u6a2a\u5411\u641c\u7d22 \n\t{\n\t\tfront=quin=back=hou=qd[1]=qx[1]=1;\n\t\tfor (int j=2;j<=b;j++)\n\t\t{\n\t\t\twhile (t[i][j]>=t[i][qd[back]]&&front<=back) back--;      //\u786e\u8ba4\u8be5\u6a2a\u5411\u961f\u5217\u4e2d\u7684\u6700\u5927\u503c \n\t\t\twhile (t[i][j]<=t[i][qx[hou]]&&quin<=hou) hou--;         //\u786e\u8ba4\u8be5\u6a2a\u5411\u961f\u5217\u4e2d\u7684\u6700\u5c0f\u503c \n\t\t\tqd[++back]=j,qx[++hou]=j;\n\t\t\twhile (j-qd[front]>=n) front++;    //\u5934\u8d85\u51fa\u4e86\u8303\u56f4\uff0c\u5f80\u53f3\u8fb9\u79fb \n\t\t\twhile (j-qx[quin]>=n) quin++;\n\t\t\tif (j>=n) \n\t\t\t{\n\t\t\t\td[i][j-n+1]=t[i][qd[front]];\n\t\t\t\tx[i][j-n+1]=t[i][qx[quin]];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i=1;i<=b-n+1;i++)    //\u5355\u8c03\u961f\u5217\u7eb5\u5411\u641c\u7d22\uff0c\u7531\u4e8e\u8fdb\u884c\u8fc7\u4e00\u6b21\u6a2a\u5411\u641c\u7d22\uff0c\u6b64\u65f6\u5982\u679c\u6cbf\u7528\u4e0a\u4e00\u6b21\u6240\u83b7\u5f97\u7684\u56fe\u5c31\u53ef\u4ee5\u7b49\u4ef7\u4e8e\u8fdb\u884c\u6b63\u65b9\u5f62\u7684\u786e\u8ba4 \n\t{   //\u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u53bb\u641c\u7d22\u90e8\u5206\u7528\u4e0d\u4e86\u7684\u70b9\u8282\u7ea6\u4e86\u65f6\u95f4,\u5373\u53f3\u8fb9\u591a\u51fa\u7684\u90a3\u51e0\u5757  \n\t\tfront=quin=back=hou=qd[1]=qx[1]=1;\n\t\tfor (int j=2;j<=a;j++)\n\t\t{\n\t\t\twhile (d[j][i]>=d[qd[back]][i]&&front<=back) back--;      //\u786e\u8ba4\u8be5\u7ad6\u5411\u961f\u5217\u4e2d\u7684\u6700\u5927\u503c \n\t\t\twhile (x[j][i]<=x[qx[hou]][i]&&quin<=hou) hou--;         //\u786e\u8ba4\u8be5\u7ad6\u5411\u961f\u5217\u4e2d\u7684\u6700\u5c0f\u503c \n\t\t\tqd[++back]=j,qx[++hou]=j;\n\t\t\twhile (j-qd[front]>=n) front++;   \n\t\t\twhile (j-qx[quin]>=n) quin++;\n\t\t\tif (j>=n) \n\t\t\t{\n\t\t\t\tzd[j-n+1][i]=d[qd[front]][i];\n\t\t\t\tzx[j-n+1][i]=x[qx[quin]][i];\n\t\t\t}\n\t\t}\n\t}\n\tlong long ans=0x3f3f3f3f;\n\tfor (int i=1;i<=a-n+1;i++)\n\t{\n\t\tfor (int j=1;j<=b-n+1;j++)\n\t\t{\n\t\t\tans=min(ans,zd[i][j]-zx[i][j]);\n\t\t}    //\u5bf9\u6bcf\u4e00\u683c\u8fdb\u884c\u7b5b\u9009 \n\t}\n\tcout<<ans;\n\treturn 0;\n} \n```\n\n    \u8001\u4e1c\u897f\u3002\u4f60\u7684TLE\u4f53\u9a8c\u6700\u6ca1\u7528\u5566\uff01",
        "postTime": 1566453056,
        "uid": 104409,
        "name": "huanzi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\u4e8c\u7ef4\u6ed1\u52a8\u7a97\u53e3\u3002\u7ed9\u5b9a\u4e00\u4e2a$a\\times b$\u7684\u77e9\u9635\uff0c\u548c\u4e00\u4e2a\u5927\u5c0f\u4e3a$k\\times k$\u7684\u6ed1\u52a8\u7a97\u53e3\uff0c\u6c42\u8fd9\u4e2a\u7a97\u53e3\u5728\u6ed1\u52a8\u8fc7\u7a0b\u4e2d\u6240\u770b\u5230\u7684\uff08\u6700\u5927\u503c-\u6700\u5c0f\u503c\uff09\u6700\u5c0f\u80fd\u5230\u591a\u5c11\u3002\n### \u6570\u636e\n\u8f93\u5165   \n5 4 2   \n1 2 5 6   \n0 17 16 0   \n16 17 2 1   \n2 10 2 1   \n1 2 2 2   \n\u8f93\u51fa   \n1   \n### \u601d\u8def\n\u7406\u8bba\u4e0a\u662f\u73c2\u4ee5\u8dd1\u4e24\u7ef4\u5355\u8c03\u961f\u5217\u7684\uff0c\u5f53\u7136\u4e5f\u73c2\u4ee5\u8dd1\u4e8c\u7ef4$ST$\u8868\u3002\u7531\u4e8e\u6211\u4e0d\u4f1a\u4e8c\u7ef4\uff0c\u6240\u4ee5\u6211\u53ea\u80fd$ST$\u8868\u5957\u5355\u8c03\u961f\u5217\u6765\u5199\uff08\u7fa4\u4f17\uff1awdnmd\u60a8\u662f\u6c99\u96d5\u4e48\uff1f\uff1f\uff1f\uff09   \n\u597d\u7684\u6211\u4eec\u6765\u770b\u770b\u6211\u7684\u778e\u641e\u505a\u6cd5\u3002\u3002\u3002   \n\u8bbe\u8eab\u5904\u5730\u7684\u60f3\u4e00\u4e0b\uff0c\u5982\u679c\u4f60\u4e0d\u4f1a\u4e8c\u7ef4\u7684\u5355\u8c03\u961f\u5217\u6216$ST$\u8868\uff0c\u4f60\u4f1a\u600e\u4e48\u529e\uff1f   \n\u9996\u5148\u8981\u5148\u679a\u4e3e\u533a\u95f4\u5de6\u7aef\u70b9$i$\uff0c\u7136\u540e\u628a\u6240\u6709\u884c\u4e0a\u4ece$i$\u5230$i+x-1$\u4e4b\u95f4\u7684\u6700\u5927/\u6700\u5c0f\u6c42\u51fa\u6765\uff08\u6240\u4ee5\u8fd9\u544a\u8bc9\u6211\u4eec\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e00\u884c\u90fd\u8981\u5199\u4e00\u4e2a$ST$\u8868\uff09\u3002\u5982\u4e0b\u56fe\uff1a   \n![blog1.png](https://i.loli.net/2019/04/16/5cb5c078346c0.png)\n\u84dd\u8272\u90e8\u5206\u5c31\u662f\u6211\u4eec\u6309\u884c\u5904\u7406\u7684\u6700\u5927/\u6700\u5c0f\u503c\u3002\u6211\u4eec\u628a\u6bcf\u4e00\u884c\u7684\u6700\u5927/\u6700\u5c0f\u503c\u653e\u5230\u6570\u7ec4\u91cc\u9762\uff0c\u7136\u540e\u5c31\u53d8\u6210\u4e00\u7ef4\u7684\u95ee\u9898\u4e86\u3002\u5982\u4e0b\u56fe\uff1a   \n![blog2.png](https://i.loli.net/2019/04/16/5cb5c2f8e4717.png)\n\u5bf9\u4fdd\u5b58\u884c\u6700\u5927\u503c\u90a3\u4e2a\u6570\u7ec4\uff08\u8bbe\u4e3a$tmpx$\uff09\uff0c\u6211\u4eec\u8dd1\u4e00\u904d\u7ef4\u62a4\u6700\u5927\u503c\u7684\u5355\u8c03\u961f\u5217\u3002\u5bf9\u4fdd\u5b58\u884c\u6700\u5c0f\u503c\u7684\u90a3\u4e2a\u6570\u7ec4\uff08\u8bbe\u4e3a$tmpn$\uff09\uff0c\u6211\u4eec\u8dd1\u4e00\u904d\u7ef4\u62a4\u6700\u5c0f\u503c\u7684\u5355\u8c03\u961f\u5217\uff0c\u53d6\u4e24\u4e2a\u961f\u9996\u76f8\u51cf\u7684\u6700\u5c0f\u503c\u5373\u53ef\u6c42\u51fa\u7b54\u6848\u3002   \n\u4ee3\u7801\uff08\u6709\u5f88\u591a\u6ce8\u91ca\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define N 1010\n#define LogN 11\n#define K 110\nusing namespace std;\nint mp[N][N];\nint n,m,x;\nvoid Input()//\u8bfb\u5165\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\u3002\u3002\n{\n    scanf(\"%d%d%d\",&n,&m,&x);\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&mp[i][j]);\n        }\n    }\n}\n\n//\u4ee5\u4e0b\u53d8\u91cf\u540d\u4e2d\uff0c\u4ee5x\u7ed3\u5c3e\u7684\u662f\u6c42\u6700\u5927\u7528\u7684\uff0c\u4ee5n\u7ed3\u5c3e\u7684\u662f\u6c42\u6700\u5c0f\u7528\u7684\n//\u6bd4\u5982stx\u5c31\u662f\u6700\u5927\u503c\u7684st\u8868\uff0cstn\u5c31\u662f\u6700\u5c0f\u503c\u7684st\u8868\nint stx[N][N][LogN],stn[N][N][LogN],lg[N];\nint tmpx[N],tmpn[N];\nvoid BuildST()\n{\n    for(int i=1;i<=n;i++)//\u9884\u5904\u7406\u6bcf\u4e2a\u6570\u7684log2\u503c\uff0c\u5e38\u6570\u5c0f\u4e00\u70b9\n    {\n        lg[i]=lg[i-1]+((1<<(lg[i-1]+1))==i);\n    }\n\n    for(int i=1;i<=n;i++)//ST\u8868\u7684\u8fb9\u754c\uff08\u8fd9\u4e2a\u5c11\u4e86\u836f\u4e38\u554a\u3002\u3002\u3002\uff09\n    {\n        for(int j=1;j<=m;j++)\n        {\n            stn[i][j][0]=stx[i][j][0]=mp[i][j];\n        }\n    }\n    for(int i=1;i<=n;i++)//\u8f6c\u79fb\n    {\n        for(int k=1;(1<<k)<=m;k++)\n        {\n            for(int j=1;j+(1<<(k-1))<=m;j++)\n            {\n                stx[i][j][k]=max(stx[i][j][k-1],stx[i][j+(1<<(k-1))][k-1]);\n                stn[i][j][k]=min(stn[i][j][k-1],stn[i][j+(1<<(k-1))][k-1]);\n            }\n        }\n    }\n}\nint Query(int st[][N][LogN],int i,int l,int r)//\u6c42\u6700\u5927/\u6700\u5c0f\n//\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u662fstn\u5c31\u8868\u793a\u8be2\u95ee\u6700\u5c0f\uff0c\u662fstx\u5c31\u8868\u793a\u8be2\u95ee\u6700\u5927\n{\n    int lc=lg[x];//r-l+1==x\n    if (st==stx)//\u8be2\u95ee\u6700\u5927\n    {\n        return max(st[i][l][lc],st[i][r-(1<<lc)+1][lc]);\n    }\n    else//\u8be2\u95ee\u6700\u5c0f\n    {\n        return min(st[i][l][lc],st[i][r-(1<<lc)+1][lc]);\n    }\n}\nint Qx[N],hx,tx;int Qn[N],hn,tn;\nvoid Solve()\n{\n    int totans=0x3f3f3f3f;//\u603b\u5171\u7684\u7b54\u6848\n    for(int i=1;i+x-1<=m;i++)\n    {\n        memset(tmpn,0,sizeof(tmpn));\n        memset(tmpx,0,sizeof(tmpx));\n        for(int j=1;j<=n;j++)//\u4e0a\u56fe\u7684\u84dd\u8272\u90e8\u5206\uff08\u964d\u7ef4\u6253\u51fb\uff09\n        {\n            tmpx[j]=Query(stx,j,i,i+x-1);\n            tmpn[j]=Query(stn,j,i,i+x-1);\n        }\n\n\t\t//\u4ee5\u4e0b\u662f\u6d1b\u8c371886\u6ed1\u52a8\u7a97\u53e3\u7684\u4ee3\u7801\n        hx=tx=hn=tn=1;\n        for(int j=1;j<=x;j++)\n        {\n            while(hx<tx and tmpx[Qx[tx-1]]<=tmpx[j]) tx--;\n            Qx[tx]=j,tx++;\n            while(hn<tn and tmpn[Qn[tn-1]]>=tmpn[j]) tn--;\n            Qn[tn]=j,tn++;\n        }\n\n        int ans=tmpx[Qx[hx]]-tmpn[Qn[hn]];\n        for(int j=x+1;j<=n;j++)\n        {\n            while(hx<tx and tmpx[Qx[tx-1]]<=tmpx[j]) tx--;\n            Qx[tx]=j,tx++;\n            while(hn<tn and tmpn[Qn[tn-1]]>=tmpn[j]) tn--;\n            Qn[tn]=j,tn++;\n\n            if (j-Qx[hx]+1>x)\n            {\n                ++hx;\n            }\n            if (j-Qn[hn]+1>x)\n            {\n                ++hn;\n            }\n            //ans\u8bb0\u5f55\u4ee5i\u4e3a\u5de6\u7aef\u70b9\u7684\u84dd\u8272\u90e8\u5206\u6700\u5927-\u6700\u5c0f\u7684\u6700\u5c0f\u503c\n            ans=min(ans,tmpx[Qx[hx]]-tmpn[Qn[hn]]);\n        }\n        totans=min(totans,ans);//\u8ba1\u7b97\u5230\u603b\u7b54\u6848\n    }\n    printf(\"%d\\n\",totans);\n}\n\nmain()\n{\n    Input();\n    BuildST();\n    Solve();\n    return 0;\n}\n\n```\n\n",
        "postTime": 1555416145,
        "uid": 106252,
        "name": "LightningUZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u6700\u8fd1\u505a\u6811\u72b6\u6570\u7ec4\u4e0a\u763e\u4e86\uff0c\u6765\u4e00\u7bc7**\u6811\u72b6\u6570\u7ec4+\u5355\u8c03\u961f\u5217**\u7684\u9898\u89e3\uff0c~~\u987a\u4fbf\u7eaa\u5ff5\u4e00\u4e0b\u81ea\u5df1\u534a\u5c0f\u65f6\u4e0d\u770b\u9898\u89e3A\u6389\u4e00\u9053\u7701\u9009\u9898\u7684\u7ecf\u5386\u3002~~\n\n$~$\n \n\u7531\u4e8e\u4f5c\u8005\u4e60\u60ef\uff0c\u672c\u6587\u4e2d\u7684\u53d8\u91cf\u53ef\u80fd\u548c\u9898\u76ee\u4e2d\u7684\u6709\u6240\u4e0d\u540c\u3002\n**\u5728\u6b64\u5b9a\u4e49\u4e00\u4e0b\u53d8\u91cf**\uff1a\n\n\u9898\u76ee\u4e2d\u7684 $a,b,n$ \u5728\u6587\u4e2d\u5206\u522b\u4e3a $n,m,k$ \uff1b $a[i][j]$ \u8868\u793a\u77e9\u9635\uff1b $c[i][j]$ \u4e3a\u6811\u72b6\u6570\u7ec4\uff0c\u7ef4\u62a4\u7684\u662f\u7b2c $i$ \u884c\u7684\u6700\u503c\uff1b $num[i],val[i]$ \u5206\u522b\u662f\u5355\u8c03\u961f\u5217\u7684\u7f16\u53f7\u548c\u503c\uff1b $h,t$ \u5206\u522b\u4e3a\u5934\u6307\u9488\u548c\u5c3e\u6307\u9488\u3002\n\n$~$\n\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u9898\u76ee\uff0c\u8ba9\u6211\u4eec\u6c42\u533a\u95f4\u5185\u7684\u6700\u503c\u3002\n\n$~$\n\n\u7b2c\u4e00\u601d\u8def\uff1a\u66b4\u529b\uff0c\u679a\u4e3e\u6240\u6709 $k^2$ \u77e9\u9635\u3002\u590d\u6742\u5ea6\uff1a $O(nmk^2)$ \u3002\u7b97\u4e86\u5427 . . . . . .\uff08\u81f3\u5c11\u6211\u89c9\u5f97\u4e0d\u884c\uff09\n### ~~\uff08\u4e0d\u8fc7\u540e\u9762\u6709\u5f69\u86cb\uff0c\u6559\u4f60\u5982\u4f55\u7528\u66b4\u529bAC\u7701\u9009\u9898\uff09~~\n\n$~$\n\n\u7b2c\u4e8c\u601d\u8def\uff1a $DP$ \uff0c\u4f18\u5316\u540e\u8fd9\u662f\u53ef\u884c\u7684\uff0c\u4f46\u849f\u84bb\u6211\u4e0d\u4f1a . . . . . .\n\n\u65e2\u7136\u4e0d\u4f1a $DP$ \uff0c\u53c8\u6709\u70b9\u50cf $RMQ$\uff08\u4e8c\u7ef4\u7684\uff09\uff0c\u90a3\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5355\u8c03\u961f\u5217\u3002\u4e0d\u8fc7\u6211\u592a\u84bb\u4e86\uff0c\u4e8c\u7ef4\u7684\u5355\u8c03\u961f\u5217\u4e0d\u4f1a\u554a\uff01\u7b97\u4e86\uff0c\u5148\u8bd5\u8bd5\u4e00\u7ef4\u5355\u8c03\u961f\u5217\u3002\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\u5c06\u603b\u77e9\u9635\u5212\u5206\u6210\u6570\u4e2a $k*n$ \u7684\u77e9\u9635\uff0c\u6ed1\u5757\u6bcf\u79fb\u52a8\u4e00\u6b21\uff0c\u5c06\u65b0\u7684\u4e00\u884c\u7684 $k$ \u4e2a\u6570\u538b\u5165\u961f\u5217\uff0c\u6700\u540e\u6c42\u6700\u503c\u3002\u590d\u6742\u5ea6\uff1a$O(nmk)$ \u3002\u597d\u50cf\u53ef\u4ee5\uff0c\u4f46\u662f\u6781\u9650\u662f $1000*1000*100=1e8$ \uff0c\u8fd8\u662f $TLE$ \uff0c\u7ecf\u8fc7\u5b9e\u6d4b\uff0c\u53ea\u6709 $50$ \u5206\uff08\u8bc4\u6d4b\u673a\u5982\u679c\u4e0d\u5fd9\u7684\u8bdd\u6709 $60$ \u5206\uff09 \u3002\n\n$~$\n\n\u7b2c\u4e09\u601d\u8def\uff1a\u63a5\u7740\u4f18\u5316\u3002\u663e\u7136\uff0c $n,m$ \u4f18\u5316\u4e0d\u4e86\uff0c\u90a3\u4e48\u5c1d\u8bd5\u7740\u4f18\u5316 $k$ \u3002\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u6b21\u66f4\u65b0\u6211\u4eec\u7684\u5355\u8c03\u961f\u5217\u65f6\uff0c\u90fd\u4f1a\u66f4\u65b0 $k$ \u4e2a\u6570\uff0c\u8fd9\u6837\u7684\u8bdd\u5728 $O(nm)$ \u7684\u5faa\u73af\u4e2d\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\uff0c\u80fd\u4e0d\u80fd\u5c1d\u8bd5\u7740\u9884\u5904\u7406\u51fa\u8fd9 $k$ \u4e2a\u6570\u7684\u6700\u503c\uff1f\u663e\u7136\uff0c\u53ef\u4ee5\u4ee4 $f[i][l][r]$ \u8868\u793a\u7b2c $i$ \u884c\u7b2c $l$ \u4e2a\u6570\u5230\u7b2c $r$ \u4e2a\u6570\u7684\u6700\u503c\uff0c\u8fd9\u6837\u770b\u4e0a\u53bb\u597d\u50cf\u53ef\u4ee5 $O(1)$ \u51fa\u89e3\uff01\n~~\u4e0d\u8fc7\u4f60\u8fd9\u4e48\u60f3\u7684\u8bdd\uff0c\u4f60\u5f97\u5148\u53bb\u95ee\u95ee\u7f16\u8bd1\u5668\u540c\u4e0d\u540c\u610f\u3002~~ $f[1001][1001][1001]$ \u7684\u5de8\u578b\u6570\u7ec4\u663e\u7136\u4f1a $CE$ \uff0c\u8981\u77e5\u9053\uff0c $MLE$ \u53ef\u662f $0$ \u5206\u3002\u8fd9\u79cd\u601d\u8def\u80af\u5b9a\u4e0d\u884c\u3002\n\n$~$\n\n\u7b2c\u56db\u601d\u8def\uff1a\u65e2\u7136\u5982\u6b64\uff0c\u80fd\u4e0d\u80fd\u7528 $O(nm)$ \u7684\u7a7a\u95f4\u5f00\u9500\uff0c\u5728 $O(log_2k)$ \u6216 $O(\\sqrt k)$ \u7684\u65f6\u95f4\u5f00\u9500\u5185\u51fa\u89e3\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff1a\n\n-  $1.$  \u7ebf\u6bb5\u6811\uff08\u5e38\u6570\u592a\u5927\uff09\n\n-  $2.$  $ST$ \u8868\uff08 $1e7$ \u53ef\u4ee5\u8fc7\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u4e0d\u8bb2\uff0c\u548c\u65b9\u6848 $3$ \u57fa\u672c\u7b49\u6548\uff0c\u4f1a\u65b9\u6848 $3$ \u7684\u4e00\u5b9a\u4f1a $ST$ \u8868\uff09\n\n- $3.$ \u6811\u72b6\u6570\u7ec4\n\n\u5bf9\u4e8e\u6811\u72b6\u6570\u7ec4\uff0c\u8bbe $c[i][j]$ \u8868\u793a\u7b2c $i$ \u884c\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u9884\u5904\u7406\u51fa\u6700\u503c\u3002\u5728\u67e5\u8be2\u65f6\u91c7\u7528\u5206\u6cbb\u601d\u60f3\uff0c\u5373\uff1a\n\n$~~~~~~~~~~query(l,r)=\\max(query(l,r-lowbit(r)-1),c[r]),r-lowbit(r)>l$\n\n$~~~~~~~~~~query(l,r)=\\max(query(l,r-1),a[r]),r-lowbit(r)\u2264l$\n\n\u63a5\u4e0b\u6765\u5c31\u80fd\u6109\u5feb\u7684 $AC$ \u5566\uff01\n\n\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(nmlog_2k)$ \uff0c\u53ef\u4ee5\u5728\u4e0d\u5438\u6c27\u7684\u65f6\u5019 $AC$ \uff0c\u7ea6 $2000ms$ \uff0c\u56e0\u4e3a\u8fd9\u662f\u7701\u9009\u9898\uff0c\u53ef\u4ee5\u5438\u6c27\u4f18\u5316\uff0c\u4f18\u5316\u4ee5\u540e\u7ea6 $800ms$ ~~\uff08\u9b3c\u77e5\u9053\u4e3a\u4ec0\u4e48\u65f6\u95f4\u5c11\u4e86\u8fd9\u4e48\u591a\uff09~~\u3002\u6b64\u5916\uff0c\u82e5\u91c7\u7528\u8bfb\u5165\u4f18\u5316\uff0c\u53ef\u4ee5\u51cf\u5c11 $200ms$ \u3002\n\n$~$\n\n## Code\n```\n#include \"bits/stdc++.h\"\n#define lowbit(x) ((x)&(-(x)))\n#define N 1001\nusing namespace std;\n\nint n,m,k,a[N][N],ans=INT_MAX;\nstruct str\n{\n\tint max,min;\n}c[N][N],num[N],val[N],h,t;\n\ninline void read(int &x)//\u8bfb\u5165\u4f18\u5316\n{\n\tint s=1;\n\tchar ch=0;\n\tx=0;\n\twhile(ch^'-'&&!isdigit(ch))\n\t\tch=getchar();\n\tif(ch=='-')\n\t{\n\t\ts=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))\n\t{\n\t\tx=(x<<1)+(x<<3)+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=s;\n}\n\nvoid update_min(int i,int j,int x)//\u6811\u72b6\u6570\u7ec4\u66f4\u65b0\n{\n\twhile(j<=m)\n\t\tif(c[i][j].min>x)\n\t\t\tc[i][j].min=x,j+=lowbit(j);\n\t\telse\n\t\t\tbreak;\n}\n\nvoid update_max(int i,int j,int x)\n{\n\twhile(j<=m)\n\t\tif(c[i][j].max<x)\n\t\t\tc[i][j].max=x,j+=lowbit(j);\n\t\telse\n\t\t\tbreak;\n}\n\nint query_min(int i,int l,int r)//\u6811\u72b6\u6570\u7ec4\u6c42\u6700\u503c\n{\n\tint t=INT_MAX;\n\twhile(l<=r)\n\t\tif(r-lowbit(r)>l)\n\t\t\tt=min(t,c[i][r].min),r-=lowbit(r);\n\t\telse\n\t\t\tt=min(t,a[i][r]),r--;\n\treturn t;\n}\n\nint query_max(int i,int l,int r)\n{\n\tint t=INT_MIN;\n\twhile(l<=r)\n\t\tif(r-lowbit(r)>l)\n\t\t\tt=max(t,c[i][r].max),r-=lowbit(r);\n\t\telse\n\t\t\tt=max(t,a[i][r]),r--;\n\treturn t;\n}\n\nvoid push(int i,int l,int r)//\u5165\u961f\n{\n\tint x;\n\tx=query_max(i,l,r);\n\twhile(val[t.max].max<=x&&h.max<=t.max)\n\t\tt.max--;\n\tt.max++;\n\tnum[t.max].max=i;\n\tval[t.max].max=x;\n\tx=query_min(i,l,r);\n\twhile(val[t.min].min>=x&&h.min<=t.min)\n\t\tt.min--;\n\tt.min++;\n\tnum[t.min].min=i;\n\tval[t.min].min=x;\n}\n\nvoid pop(int i)//\u51fa\u961f\n{\n\tif(i-k>=num[h.max].max)\n\t\th.max++;\n\tif(i-k>=num[h.min].min)\n\t\th.min++;\n}\n\nint main()\n{\n\tread(n),read(m),read(k);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)//\u521d\u59cb\u5316\n\t\t{\n\t\t\tc[i][j].max=INT_MIN;\n\t\t\tc[i][j].min=INT_MAX;\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tread(a[i][j]);\n\t\t\tupdate_min(i,j,a[i][j]);\n\t\t\tupdate_max(i,j,a[i][j]);\n\t\t}\n\tfor(int T=k;T<=m;T++)\n\t{\n\t\th.max=h.min=1,t.max=t.min=0;\n\t\tfor(int i=1;i<k;i++)\n\t\t\tpush(i,T-k+1,T);//\u907f\u514d\u4e09\u91cd\u5faa\u73af,\u5927\u5e45\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\n\t\tfor(int i=k;i<=n;i++)\n\t\t{\n\t\t\tpush(i,T-k+1,T);\n\t\t\tpop(i);\n\t\t\tans=min(ans,val[h.max].max-val[h.min].min);\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n$~$\n\n\n## \u5f69\u86cb\n\u5982\u679c\u6211\u4eec\u5728\u8003\u8bd5\u4e2d\u9047\u5230\u96be\u9898\u4e0d\u4f1a\u600e\u4e48\u529e\uff1f\u80af\u5b9a\u4e0d\u80fd\u5584\u7f62\u7518\u4f11\uff0c\u6700\u8d77\u7801\u4e5f\u8981\u62ff\u5230\u66b4\u529b\u5206\u3002\u4f46\u662f$O(nmk^2) $ \u7684\u505a\u6cd5\u53ea\u6709 $20$ \u5206,\u90a3\u4e48\u6211\u4eec\u6709\u6ca1\u6709\u66f4\u597d\u7684\u529e\u6cd5\u9a97\u5206\uff1f\n\n\u6709\u7684\uff0c\u53ea\u8981\u4f60\u4f1a\u8fd9\u4e00\u884c\u4ee3\u7801\uff1a\n```\n               srand(time(0));\n```\n\u5bf9\u4e8e $1000*1000*100$ \u7684\u6781\u9650\u6570\u636e\uff0c\u6211\u4eec\u5982\u679c\u771f\u7684\u4e0d\u4f1a\u505a\uff0c\u6253\u66b4\u529b\u7684\u8bdd\uff0c\u80af\u5b9a\u6ca1\u6709\u65f6\u95f4\u679a\u4e3e\u6240\u6709\u7684\u77e9\u9635\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u968f\u673a\u9009\u53d6\u4e00\u4e9b\u77e9\u9635\uff08\u5728\u4e0d $TLE$ \u7684\u60c5\u51b5\u4e0b\u8d8a\u591a\u8d8a\u597d\uff09\uff0c\u6c42\u51fa\u9009\u53d6\u7684\u77e9\u9635\u7684\u6700\u503c\uff0c\u76f4\u63a5\u51fa\u7ed3\u679c\u3002\n\n\u4e0d\u8fc7\u8fd9\u6837\u53ef\u4ee5\u5417\uff1f\u70b9\u5f00\u4e0b\u9762\u7684\u94fe\u63a5\uff0c\u8fd9\u4e2a $AC$ \u8bb0\u5f55\u7684\u4ee3\u7801\u5c31\u5728\u4e0b\u9762\uff1a\n\n[\u66b4\u529b\u51fa\u5947\u8ff9$~~$\u9a97\u5206\u8fc7\u6837\u4f8b$~~$\u7206\u641c\u6302\u7740\u673a$~~$\u6253\u8868\u51fa\u7701\u4e00](https://www.luogu.org/recordnew/show/11339591)\n\n```\n//\u8fd9\u53ea\u662f\u4e00\u4e2a\u968f\u673a\u6a21\u677f,\u5e76\u4e0d\u662f\u6700\u4f18\u7684\u968f\u673a\u5316\u7b56\u7565\n#include \"bits/stdc++.h\"\n#define N 1001\nusing namespace std;\n\nint MIN,MAX,x,y,n,m,k,a[N][N],ans=INT_MAX;\n\ninline void read(int &x)//\u8bfb\u5165\u4f18\u5316\n{\n    int s=1;\n    char ch=0;\n    x=0;\n    while(ch^'-'&&!isdigit(ch))\n        ch=getchar();\n    if(ch=='-')\n    {\n        s=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        x=(x<<1)+(x<<3)+ch-'0';\n        ch=getchar();\n    }\n    x*=s;\n}\n\nint main()\n{\n    srand(time(0));//\u91cd\u70b9\n    read(n),read(m),read(k);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            read(a[i][j]);\n    for(int T=1;T<=50000;T++)//\u5faa\u73af\u6b21\u6570\u81ea\u5df1\u770b\u7740\u529e\n    {\n        x=rand()%(n-k+1)+1;//\u968f\u673a\u6570\u5927\u6cd5\u597d\n        y=rand()%(m-k+1)+1;//\u968f\u673a\u6570\u5927\u6cd5\u597d\n        MIN=INT_MAX;\n        MAX=INT_MIN;\n        for(int i=0;i<k;i++)\n            for(int j=0;j<k;j++)\n            {\n                MIN=min(MIN,a[x+i][y+j]);\n                MAX=max(MAX,a[x+i][y+j]);\n            }\n        ans=min(ans,MAX-MIN);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n$~$\n\n\u5176\u4e2d\u53e6\u5916 $9$ \u4e2a\u70b9\u5f88\u7a33\uff0c\u7b2c $4$ \u4e2a\u70b9\u8981\u770b\u8fd0\u6c14\uff0c\u6211\u8bd5\u4e86 $10$ \u6b21\u5de6\u53f3\u624d $AC$ \u3002\n\n**\u4e00\u4e2a $5min$ \u6253\u51fa\u7684\u4ee3\u7801\u80fd\u9a97\u5230\u8fd1 $90$ \u5206\uff08\u6b27\u7687 $5min~~AC$\uff09\uff0c\u8fd9\u867d\u7136\u4e0d\u662f\u4e00\u822c\u4eba\u7684\u6700\u4f18\u89e3\uff08\u4f46\u662f\u662f\u6b27\u7687\u7684\u6700\u4f18\u89e3\uff09\uff0c\u4f46\u5728\u6781\u77ed\u7684\u65f6\u95f4\u5185\u62ff\u5230\u8db3\u591f\u7684\u5206\u6570\u5012\u662f\u53ef\u4ee5\u501f\u9274\u7684\u3002\u6bd5\u7adf\u5927\u90e8\u5206\u4eba\u6c34\u5e73\u6709\u9650\uff08\u849f\u84bb\u6211\u7684\u6c34\u5e73\u66f4\u5dee\uff09\uff0c\u65e0\u6cd5\u8fbe\u5230 $AK~~IOI$ \u7684\u6210\u5c31\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u4e07\u4e0d\u5f97\u5df2\u8fd9\u6837\u505a\uff0c\u4e5f\u662f\u6211\u4eec\u53ef\u4ee5\u63a5\u53d7\u7684\u7ed3\u679c\u3002**\u6362\u4e2a\u89d2\u5ea6\u601d\u8003\uff0c\u4f60\u968f\u673a\u5316\u9a97\u5206\uff0c $5min$\u5c31\u6709 $90$ \u5206,\u5e73\u5747 $18pts/min$ \uff0c\u5373\u4f7f\u673a\u623f\u5927\u4f6c $30min~~AC$ \u4e86\u8fd9\u9053\u9898\uff0c\u4ed6\u7684\u5f97\u5206\u6548\u7387\u624d $3.333pts/min$ \uff0c\u600e\u4e48\u7b97\u90fd\u662f\u4f60\u8d5a~~\uff08\u624b\u52a8\u6ed1\u7a3d\uff09~~~~~\n\n\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u8003\u8651\u4f18\u5316\u6211\u4eec\u7684\u968f\u673a\u7b97\u6cd5\u3002\u867d\u7136\u968f\u673a\u6570\u4e0d\u662f\u4f60\u638c\u63a7\u7684\uff08\u663e\u7136\uff09\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u901a\u8fc7\u7384\u5b66\u53d6\u6a21\uff08 $998244353~,~10000019~,~$ \u4ee5\u53ca\u67d0\u4e2a $8$ \u4f4d\u8d28\u6570\uff09\u6765\u9a97\u5206\u3002\u5f53\u7136\u8fd9\u90fd\u4e0d\u6b63\u7ecf\u3002\u6b63\u7ecf\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u968f\u673a\u4e00\u4e9b\u77e9\u9635\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u77e9\u9635\u7684\u91cd\u53e0\u90e8\u5206\u5c3d\u91cf\u5c0f\uff0c\u5728\u9009\u62e9\u8d8b\u5411\u4e8e\u5bb9\u6613\u627e\u5230\u7b54\u6848\u7684\u5730\u65b9\u7ee7\u7eed\u7ec6\u8282\u5316\u7684\u968f\u673a\uff0c\u5728\u770b\u4f3c\u4e0d\u6613\u5f97\u5230\u7b54\u6848\u7684\u5730\u65b9\u6709\u4e00\u5b9a\u6982\u7387\u968f\u673a\u641c\u7d22\uff0c\u8ddd\u79bb\u60f3\u8981\u7684\u76ee\u6807\u7b54\u6848\u8d8a\u8fdc\u7684\u8bdd\u641c\u7d22\u51e0\u7387\u8d8a\u4f4e~~\uff08\u600e\u4e48\u6709\u70b9\u50cf\u6a21\u62df\u9000\u706b . . . . . .\uff09~~\u3002\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u8003\u8651\u5728\u77e9\u9635\u7684\u6781\u5927\u503c\u6781\u5c0f\u503c\u9644\u8fd1\u7ec6\u8282\u968f\u673a\u5316\uff0c\u5c3d\u53ef\u80fd\u6c42\u51fa\u6b63\u89e3\u3002\u5177\u4f53\u4ee3\u7801\u6211\u5c31\u4e0d\u53d1\u4e86~~\uff08\u624d\u4e0d\u662f\u6211\u61d2\u5f97\u6253\uff09~~\uff0c\u4f46\u662f\u4ece\u5e94\u8bd5\u7684\u89d2\u5ea6\u8bb2\uff0c\u8fd9\u662f\u4e00\u79cd\u503c\u5f97\u501f\u9274\u7684\u601d\u8def\u3002\n\n$~$\n\n\u6700\u540e\uff0c\u611f\u8c22\u5927\u5bb6\u7684\u8010\u5fc3\u9605\u8bfb\uff0c\u4e5f\u5728\u6b64\u611f\u8c22$~~$ @\u6211\u6ca1\u6709\u540d\u79f0 $~~$\u4e4b\u524d\u5199\u7684\u9898\u89e3\u7ed9\u6211\u7684\u5f69\u86cb\u63d0\u4f9b\u4e00\u5b9a\u7684\u601d\u8def\uff0c\u8c22\u8c22\uff01",
        "postTime": 1538395001,
        "uid": 31317,
        "name": "nothingness",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u7eaa\u5ff5\u53c8\u53cc\u53d2\u53d5\u7684\u4e00\u9053\u66b4\u529b\u78be\u6807\u7b97\u7684\u9898\n\n\u6211\u4eec\u8003\u8651\u7eaf\u66b4\u529b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint a,b,n;\nint map[1010][1010];\nint ans=0x3f3f3f3f;\nint main()\n{\n\tscanf(\"%d%d%d\",&a,&b,&n);\n\tfor(int i=1;i<=a;i++)\n\t  for(int j=1;j<=b;j++)\n\t\tscanf(\"%d\",&map[i][j]);\n    for(int i=1;i+n-1<=a;i++)\n      for(int j=1;j+n-1<=b;j++){\n\t\tint maxx=0,minn=0x3f3f3f3f;\n    \tfor(int l=i;l<=n+i-1;l++)\n          for(int r=j;r<=n+j-1;r++)\n            maxx=max(maxx,map[l][r]),\n            minn=min(minn,map[l][r]);\n\t\tans=min(ans,maxx-minn);\n    }\n    printf(\"%d\",ans);\n    return 20020902;\n}\n```\n\n\u7136\u540e\u663e\u7136\uff0c\u679c\u65ad$TLE$\n\n[\u5475\u5475\u5475](https://www.luogu.org/recordnew/show/9227593)\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u600e\u4e48\u4f18\u5316\u66b4\u529b\n\n~~\u522b\u8ddf\u6211\u63d0\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u554a\uff0c\u5355\u8c03\u961f\u5217~~\n\n~~\u672c\u5c0f\u53ef\u7231\u4e00\u4e2a\u4e5f\u4e0d\u4f1a~~\n\n\u6211\u4eec\u56de\u5934\u770b\u770b\u8fd9\u4e24\u9053\u9898[P2038](https://www.luogu.org/problemnew/show/P2038)\n[P2280](https://www.luogu.org/problemnew/show/P2280)\n\n\u8fd9\u4e24\u9053\u9898\u4e5f\u662f\u77e9\u9635\uff0c\u7136\u540e\u6211\u4eec\u662f\u7528\u7684\u7ef4\u62a4\u4e8c\u7ef4\u524d\u7f00\u548c\u6765\u627e\u7684\u5728\u4e00\u4e2a\u77e9\u5f62\u5185\u7684\u67d0\u4e9b\u6570\u503c\n\n\u90a3\u4e48\uff0c\u8fd9\u9053\u9898\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u7c7b\u4f3c\u7684\u505a\u5462?\n\n\u7531\u4e8e\u8be2\u95ee\u7684\u90fd\u662f\u6b63\u65b9\u5f62\uff0c\n\n\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6765\n\n\u6240\u6709\u6b63\u65b9\u5f62\u7684\u6700\u5927\u6700\u5c0f\u503c\n\n($ps:$\u4ece$(1,1)$\u5f00\u59cb\u8ba1\u6570)\n\n\u5b9a\u4e49$maxx[i][j][k]$\u8868\u793a\u4ee5$(i,j)$\u4e3a\u5de6\u4e0a\u7aef\u70b9\uff0c\u7136\u540e\u8fb9\u957f\u4e3a$k$\u7684\u6b63\u65b9\u5f62\u6700\u5927\u503c\uff0c$minn[i][j][k]$\u8868\u793a\u6700\u5c0f\u3002\n\n\u901a\u8fc7\u7c7b\u6bd4\u4e0a\u4e24\u9053\u9898\uff0c\u8fd8\u6709\u753b\u56fe\uff0c\u5f97\u51fa\n\n$$maxx[i][j][k]=max(max(maxx[i][j][k-1],maxx[i+1][j+1][k-1]),max(maxx[i][j+1][k-1],maxx[i+1][j][k-1]))$$\n\n$$minn[i][j][k]=min(min(minn[i][j][k-1],minn[i+1][j+1][k-1]),min(minn[i][j+1][k-1],minn[i+1][j][k-1]))$$\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u6765$maxx[][][n],minn[][][n]$\n\n\u7136\u540e\u679a\u4e3e\u5de6\u4e0a\u89d2\u7aef\u70b9\u7136\u540e\u66f4\u65b0\u7b54\u6848\u5c31\u884c\n\n---\n\n\u522b\u4ee5\u4e3a\u8fd9\u6837\u5c31\u597d\u4e86\n\n\u60a8\u5199\u5b8c\u4e86\u4e4b\u540e\u672c\u5730\u7f16\u8bd1\u4e86\u4e48\uff1f\n\n\u662f\u4e0d\u662f\u7f16\u8bd1\u672a\u6210\u529f\uff1f\n\n\u56e0\u4e3a$maxx,minn$\u8fd9\u6837\u8981\u5f00$1001*1001*1001=1e9$\u8fa3\u4e48\u5927\u7684\u6570\u7ec4\n\n\u663e\u7136\u5f00\u4e0d\u4e0b\u554a$qwq$\n\n\u90a3\u600e\u4e48\u529e\uff1f\n\n\u51c9\u62cc\u554a\uff01\n\n\u53d1\u73b0\u6211\u4eec\u63a8$maxx,minn$\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u53ea\u6d89\u53ca\u5230$k,k-1$\uff0c\u5e76\u4e14\u53ea\u6d89\u53ca\u5230$i+1,j+1,i,j$\u8fd9\u51e0\u4e2a\u4e1c\u4e1c\uff0c\u6240\u4ee5\u53ef\u4ee5\u7c7b\u4f3c\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\uff0c\u6eda\u6389$k$\u8fd9\u4e00\u7ef4\n\n\u7136\u540e\u53c8\u662f\u7701\u9009\u9898\n\n\u5f00\u4e2a$O2$\u4e5f\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\n\n~~\u5176\u5b9e\u662f\u672c\u5b9d\u5b9d\u61d2\u5f97\u5199\u4f18\u5316\u4e86~~\n\n\u4e0a\u4ee3\u7801:\n\n\u770b\uff0c\u8fde$1kb$\u90fd\u4e0d\u5230\n\n\u771f\u662f\u66b4\u529b\u78be\u6807\u7b97\u7684\u597d\u9898\u554a$qwq$\n\n```cpp\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint a,b,n;\nint map[1010][1010];\nint maxx[1010][1010];\nint minn[1010][1010];\nint ans=0x3f3f3f3f;\nint main()\n{\n    scanf(\"%d%d%d\",&a,&b,&n);\n    for(int i=1;i<=a;i++)\n      for(int j=1;j<=b;j++)\n        scanf(\"%d\",&map[i][j]),\n        maxx[i][j]=minn[i][j]=map[i][j];\n\n    for(int k=2;k<=n;k++)\n      for(int i=1;i+k<=a+1;i++)\n        for(int j=1;j+k<=b+1;j++)\n          maxx[i][j]=max(max(maxx[i][j],maxx[i+1][j+1]),max(maxx[i][j+1],maxx[i+1][j])),\n          minn[i][j]=min(min(minn[i][j],minn[i+1][j+1]),min(minn[i][j+1],minn[i+1][j])),\n          ans=k==n?min(ans,maxx[i][j]-minn[i][j]):0x3f3f3f3f;\n\n    printf(\"%d\",ans);\n    return 20020209;//\u9632\u6284\uff0c\u6302\u4e0acp\u7684\u751f\u65e5\n}\n/*\n5   4   2\n1   2   5   6\n0   17  16  0\n16  17  2   1\n2   10  2   1\n1   2   2   2\n\n*/\n```",
        "postTime": 1533264337,
        "uid": 57699,
        "name": "Arcturus1350",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u987a\u4fbf\u5b89\u5229\u4e0b\u849f\u84bb\u7684blog(http://www.elijahqi.win/2017/10/30/luogu2216-haoi2007%e7%90%86%e6%83%b3%e7%9a%84%e6%ad%a3%e6%96%b9%e5%bd%a2/)\n\n\n\u5355\u8c03\u961f\u5217\u641e \u5bf9\u4e8e\u6bcf\u4e00\u884c\u5efa\u7acb\u4e24\u4e2a\u5355\u8c03\u961f\u5217 \u7ef4\u62a4\u6700\u5927\u548c\u6700\u5c0f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5217\u5efa\u7acb\u4e24\u4e2a\u5355\u8c03\u961f\u5217 \u7ef4\u62a4\u6700\u5927\u548c\u6700\u5c0f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u77e9\u5f62\u7684\u524dn\u5217\u5747\u66b4\u529b\u91cd\u5efa \u5217\u548c\u884c\u7684\u5355\u8c03\u961f\u5217\n\n\u6211\u9488\u5bf9\u6bcf\u4e00\u5217\u90fd\u5efa\u7acb\u5355\u8c03\u961f\u5217 q3[j]q4[j] \u8868\u793a\u7b2cj\u5217\u7684\u9012\u589e\u548c\u9012\u51cf\u5355\u8c03\u961f\u5217\n\nq1 q2\u8868\u793a\u8fd9\u4e00\u884c\u7684\u9012\u589e\u548c\u9012\u51cf\u5355\u8c03\u961f\u5217 \u6ce8\u610f:\u8981\u5c06\u7ad6\u7740\u7684\u4e00\u5217\u7684\u503c\u548cmap[i][j]\u505a\u6bd4\u8f83 \u7136\u540e\u518d\u505aq1\u548cq2 \u8fd9\u4e24\u4e2a\u5355\u8c03\u961f\u5217\n\n\u849f\u84bb\u5b9e\u5728\u662f\u592a\u5f31\u4e86deque\u5199\u7684 \u4ee3\u7801\u5197\u957f  \u800c\u4e14\u6162qwq \u6b22\u8fce\u52a0qq\u4ea4\u6d41\uff08\u5728blog\u91cc\u6709\n\n```cpp\n#include<cstdio>\n#define N 1100\n#define inf 0x7f7f7f7f\n#include<deque>\n#include<algorithm>\nusing namespace std;\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++;\n}\ninline int read(){\n    int x=0,f=1;char ch=gc();\n    while (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=gc();}\n    while (ch<='9'&&ch>='0'){x=x*10+ch-'0';ch=gc();}\n    return x*f;\n}\nstruct node{\n    int x,y,v;\n};//q1->max  q2->min q3->max q4->min\nint map[N][N],a,b,n;\ndeque<node> q1,q2,q3[N],q4[N]; \nint main(){\n    freopen(\"2216.in\",\"r\",stdin);\n    a=read();b=read();n=read();int ans=inf;\n    for (int i=1;i<=a;++i)\n        for (int j=1;j<=b;++j) map[i][j]=read();\n    int op1=1,cl1=0,op2=1,cl2=0;\n    for (int k=1;k<=b-n+1;++k){\n        int min1=inf,max1=0;\n        for (int j=k;j<=k+n-1;++j){\n            for (int i=1;i<=n;++i){\n                while (!q3[j].empty()&&q3[j].back().v<map[i][j]) q3[j].pop_back();\n                while (!q4[j].empty()&&q4[j].back().v>map[i][j]) q4[j].pop_back();\n                max1=max(max1,map[i][j]);min1=min(min1,map[i][j]);\n                node tmp;tmp.v=map[i][j];tmp.x=i;tmp.y=j;q3[j].push_back(tmp);q4[j].push_back(tmp);\n            }\n        }ans=min(ans,max1-min1);\n    }\n    for (int i=n+1;i<=a;++i){\n        q1.clear();q2.clear();\n        for (int j=1;j<=n;++j){\n            while (!q3[j].empty()&&q3[j].front().x<=i-n) q3[j].pop_front();\n            while (!q4[j].empty()&&q4[j].front().x<=i-n) q4[j].pop_front();\n            while (!q3[j].empty()&&q3[j].back().v<map[i][j]) q3[j].pop_back();\n            while (!q4[j].empty()&&q4[j].back().v>map[i][j]) q4[j].pop_back();\n            node tmp;tmp.v=map[i][j];tmp.x=i;tmp.y=j;node max2,min2;max2.v=0;min2.v=inf;\n            q3[j].push_back(tmp);q4[j].push_back(tmp);max2.x=i;max2.y=j;min2.x=i;min2.y=j;max2.v=min2.v=map[i][j];\n            if (q4[j].front().v<min2.v) {min2.v=q4[j].front().v;min2.x=q4[j].front().x;min2.y=q4[j].front().y;}\n            if (q3[j].front().v>max2.v) {max2.v=q3[j].front().v;max2.x=q3[j].front().x;max2.y=q3[j].front().y;}\n            while (!q1.empty()&&q1.back().v<max2.v) q1.pop_back();\n            while (!q2.empty()&&q2.back().v>min2.v) q2.pop_back();\n            q1.push_back(max2);q2.push_back(min2);\n        }\n        for (int j=1;j<=n;++j)\n            ans=min(ans,max(q1.front().v,q3[j].front().v)-min(q2.front().v,q4[j].front().v));\n        for (int j=n+1;j<=b;++j){\n            while (!q3[j].empty()&&q3[j].front().x<=i-n) q3[j].pop_front();\n            while (!q4[j].empty()&&q4[j].front().x<=i-n) q4[j].pop_front();\n            while (!q3[j].empty()&&q3[j].back().v<map[i][j]) q3[j].pop_back();\n            while (!q4[j].empty()&&q4[j].back().v>map[i][j]) q4[j].pop_back();\n            node tmp;tmp.v=map[i][j];tmp.x=i;tmp.y=j;node max2,min2;max2.v=0;min2.v=inf;\n            q3[j].push_back(tmp);q4[j].push_back(tmp);max2.x=i;max2.y=j;min2.x=i;min2.y=j;max2.v=min2.v=map[i][j];\n            if (q4[j].front().v<min2.v) {min2.v=q4[j].front().v;min2.x=q4[j].front().x;min2.y=q4[j].front().y;}\n            if (q3[j].front().v>max2.v) {max2.v=q3[j].front().v;max2.x=q3[j].front().x;max2.y=q3[j].front().y;}\n            while (!q1.empty()&&q1.front().y<=j-n) q1.pop_front();\n            while (!q2.empty()&&q2.front().y<=j-n) q2.pop_front();\n            while (!q1.empty()&&q1.back().v<max2.v) q1.pop_back();\n            while (!q2.empty()&&q2.back().v>min2.v) q2.pop_back();\n            q1.push_back(max2);q2.push_back(min2);\n            ans=min(ans,max(q1.front().v,q3[j].front().v)-min(q2.front().v,q4[j].front().v));\n        }\n    }printf(\"%d\",ans);\n    return 0;\n} \n```",
        "postTime": 1509369354,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "# \u9898\u610f\n\n\u6709\u4e00\u4e2a$a\\times b\u200b$\u7684\u6574\u6570\u7ec4\u6210\u7684\u77e9\u9635\uff0c\u73b0\u8bf7\u4f60\u4ece\u4e2d\u627e\u51fa\u4e00\u4e2a$n\\times n\u200b$\u7684\u6b63\u65b9\u5f62\u533a\u57df\uff0c\u4f7f\u5f97\u8be5\u533a\u57df\u6240\u6709\u6570\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u6700\u5c0f\u3002\n\n# \u5206\u6790\n\n\u597d\u591a\u4eba\u7528\u4ec0\u4e48\u500d\u589e\u7684\u7b97\u6cd5\uff0c\u8fd8\u6709\u7528\u7ebf\u6bb5\u6811\u7684\u3002\u3002\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u8981\u6c42\u4ee5$(i,j)$\u4e3a\u53f3\u4e0b\u89d2\u7684$n\\times n$\u7684\u6b63\u65b9\u5f62\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff08\u4ee5\u6700\u5927\u503c\u4e3a\u4f8b\uff09\n\n## \u66b4\u529b\n\n$n^2$\u66b4\u529b\uff0c\u603b\u590d\u6742\u5ea6$O(abn^2)$.\n\n## \u66b4\u529bDP\n\n$f[i][j][k]$\u8868\u793a$(i,j)$\u4e3a\u53f3\u4e0b\u89d2\uff0c$k\\times k$\u7684\u6b63\u65b9\u5f62\u4e2d\u7684\u6700\u5927\u503c\u3002\n\n$$\nf[i][j][k]=max(f[i][j-1][k-1],f[i-1][j][k-1],f[i-1][j-1][k-1])\n$$\n\u590d\u6742\u5ea6$O(abn)$.\n\n## \u500d\u589eDP\n\n$f[i][j][k]$\u8868\u793a$(i,j)$\u4e3a\u53f3\u4e0b\u89d2\uff0c$2^k\\times2^k$\u7684\u6b63\u65b9\u5f62\u4e2d\u7684\u6700\u5927\u503c\n$$\nf[i][j][k]=max(f[i][j][k-1],f[i-2^{k-1}][j][k-1],f[i][j-2^{k-1}][k-1],f[i-2^{k-1}][j-2^{k-1}][k-1])\n$$\n\u590d\u6742\u5ea6$O(ablog_2n)$.\n\n## \u5355\u8c03\u961f\u5217\n\n\u6ca1\u9519\uff0c\u8fd9\u5c31\u662f\u6211\u8981\u8bb2\u7684\u7b97\u6cd5\n\n\u53d7\u5230\u66b4\u529bDP\u7684\u542f\u53d1\uff0c\u6211\u4eec\u53d1\u73b0\u66b4\u529bDP\u7528\u4e86\u4e09\u4e2a\u8fb9\u957f\u5c0f1\u7684\u6b63\u65b9\u5f62\u6765\u66f4\u65b0\u5f53\u524d\u7684\u6b63\u65b9\u5f62\n\n\u800c\u8fd9\u6709\u70b9\u6d6a\u8d39\uff0c\u56e0\u4e3a\u4e09\u4e2a\u6b63\u65b9\u5f62\u6709\u91cd\u590d\u90e8\u5206\uff08\u5373$(i-k+2,j-k+2)$\u4e3a\u5de6\u4e0a\u89d2\uff0c$(i-1,j-1)$\u4e3a\u53f3\u4e0b\u89d2\u7684\u90e8\u5206\uff09\n\n\u90a3\u4e48\u5982\u4f55\u4f18\u5316\u5462\u3002\u3002\u3002\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u7528\u4e92\u4e0d\u91cd\u53e0\u7684\u4e00\u7ec4\u77e9\u5f62\u5728\u51d1\u51fa\u6b63\u65b9\u5f62\u554a\n\n\u8003\u8651$d[i,j]$\u8868\u793a\u4ee5$(i,j)$\u4e3a\u53f3\u4e0b\u89d2\uff0c\u5bbd\u5ea6\u4e3a$n$\uff0c\u9ad8\u5ea6\u4e3a$1$\u7684\u6761\u72b6\u77e9\u5f62\u4e2d\u7684\u6700\u5927\u503c\n\n\u663e\u7136\u5bf9\u4e8e$d[i,1]\\cdots d[i,b]$\uff0c\u53ef\u4ee5\u5355\u8c03\u961f\u5217\u4e00\u8d77\u6c42\u554a\uff0c\u4e5f\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u4ece\u961f\u9996\u5230\u961f\u5c3e\u5355\u8c03\u9012\u51cf\u961f\u5217\uff0c\u4fdd\u8bc1\u961f\u9996\u4e0b\u6807\u4e0e\u5f53\u524d\u4e0b\u6807\u8ddd\u79bb\u4e0d\u8d85\u8fc7n\uff0c\u7136\u540e\u7ef4\u62a4\u4e00\u4e0b\n\n\u90a3\u4e48\u6709\u4e86$d[i][j]$\uff0c\u6211\u4eec\u518d\u7528$d[i][j]$\u6765\u4e00\u6b21\u7eb5\u5411\u7684\u5bbd\u5ea6\u4e3a$1$\uff0c\u9ad8\u5ea6\u4e3a$n$\u7684\u6761\u72b6\u77e9\u5f62\u4e2d\u7684\u6700\u5927\u503c\u4e0d\u5c31\u5b8c\u4e86\u5417\n\n\u590d\u6742\u5ea6$O(ab)$\u5462\n\n\u6700\u540e\uff0c\u672c\u5ea7\u4e3a\u4e86\u907f\u514d\u5199\u592a\u591a\u4ee3\u7801\uff0c\u6c42\u4e86$d[i][j]$\u4e4b\u540e\uff0c\u6a2a\u7ad6\u4ea4\u6362\uff0c\u518d\u6c42\u4e00\u6b21\u6a2a\u5411\u7684\u5373\u53ef\n\n# \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n#define FOR(i,j,k) for(int i=j;i<=k;i++)\n#define swap(x,y) (x^=y^=x^=y)\nusing namespace std;\nconst int N=1003;\nint a,b,n,ans=0x3f3f3f3f;\nint c[N][N],d[N][N],g[N][N],h[N][N],f[N][N];\n//\u5feb\u8bfb\nchar nc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\nint rd(){\n\tint res=0;char c=nc();\n\twhile(!isdigit(c))c=nc();\n\twhile(isdigit(c))res=res*10+c-'0',c=nc();\n\treturn res;\n}\nint calc1(int * v,int * ans){//\u5355\u8c03\u961f\u5217\u8ba1\u7b97v[i-n+1..i]\u7684\u6700\u5927\u503c\uff0c\u4fdd\u5b58\u5728ans[i]\u4e2d\n\tint q[N*2][2],l=1,r=0;\n\tFOR(i,1,b){\n\t\twhile(l<=r&&q[r][0]<=v[i])r--;\n\t\twhile(l<=r&&q[l][1]+n<=i)l++;\n\t\tq[++r][0]=v[i],q[r][1]=i;\n\t\tans[i]=q[l][0];\n\t}\n}\nint calc2(int * v,int * ans){//\u5355\u8c03\u961f\u5217\u8ba1\u7b97v[i-n+1..i]\u7684\u6700\u5c0f\u503c\uff0c\u4fdd\u5b58\u5728ans[i]\u4e2d\n\tint q[N*2][2],l=1,r=0;\n\tFOR(i,1,b){\n\t\twhile(l<=r&&q[r][0]>=v[i])r--;\n\t\twhile(l<=r&&q[l][1]+n<=i)l++;\n\t\tq[++r][0]=v[i],q[r][1]=i;\n\t\tans[i]=q[l][0];\n\t}\n}\nint main(){\n\ta=rd(),b=rd(),n=rd();\n\tFOR(i,1,a)FOR(j,1,b)c[i][j]=rd();//\u8bfb\u5165\n\tFOR(i,1,a)calc1(c[i],d[i]),calc2(c[i],h[i]);//\u6a2a\u5411\u8ba1\u7b97\u6700\u5927\u6700\u5c0f\n\tFOR(i,1,a)FOR(j,i+1,b)swap(d[i][j],d[j][i]),swap(h[i][j],h[j][i]);//\u6a2a\u7ad6\u4ea4\u6362\n\tswap(a,b);//\u6a2a\u7ad6\u4ea4\u6362\uff0c\u4e4b\u524d\u7684\u6a2a\u5411\u7684\u6700\u5927\u6700\u5c0f\u53d8\u6210\u4e86\u7eb5\u5411\u7684\u6700\u5927\u6700\u5c0f\n\tFOR(i,1,a)calc1(d[i],g[i]),calc2(h[i],f[i]);//\u5728\u4e4b\u524d\u7b97\u51fa\u7684\u7ed3\u679c\u4e0a\u518d\u6b21\u6a2a\u5411\u8ba1\u7b97\uff0c\u5f97\u5230\u6b63\u65b9\u5f62\u7684\u6700\u5927\u6700\u5c0f\n\tFOR(i,n,a)FOR(j,n,b)ans=min(ans,g[i][j]-f[i][j]);//\u7edf\u8ba1\u7b54\u6848\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1544239145,
        "uid": 42196,
        "name": "sshwy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u76ee\u63cf\u8ff0 \u80fd\u770b\u51fa\u6765\u5c31\u662f\u6c42n^2\u533a\u57df\u5185\u7684RMQ\n\u53ef\u662f\u672c\u849f\u84bb\u6ca1\u6709\u5b66\u8fc7\u4e8c\u7ef4\u7684RMQ\n\u4e8e\u662f\u5199\u4e86\u4e00\u7ef4RMQ\n\u975e\u5e38\u8f7b\u677e\u7684T\u6389\u4e865\u4e2a\u70b9\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<utility>\n#include<queue>\n#include<map>\n#include<set>\n#define N 1001\n#define M 101\nusing namespace std;\nint n,b,a;\nint ma[N][N];\nint fa[N][N][10];\nint fi[N][N][10];\nint Log[M];\nint main()\n{\n    scanf(\"%d%d%d\",&a,&b,&n);\n    memset(fi,0x3f,sizeof fi);\n    for(int i=1;i<=a;i++)\n    {\n        for(int j=1;j<=b;j++)\n        {\n            scanf(\"%d\",&ma[i][j]);\n            fa[i][j][0]=ma[i][j];\n            fi[i][j][0]=ma[i][j];\n        }\n    }\n    for(int i=2;i<=n;i++)\n    {\n        Log[i]=Log[i/2]+1;\n    }\n    \n    for(int k=1;k<=a;k++)\n    {\n        for(int j=1;(1<<j)<=n;j++)\n        {\n            for(int i=1;i+(1<<j)-1<=b;i++)\n            {\n                fa[k][i][j]=max(fa[k][i+(1<<(j-1))][j-1],fa[k][i][j-1]);\n                fi[k][i][j]=min(fi[k][i+(1<<(j-1))][j-1],fi[k][i][j-1]);\n            }\n        }\n    }\n    int t=Log[n];\n    int ans=1000000010;\n    for(int i=1;i<=a;i++)\n    {\n        if(i+n-1>a) continue;\n        for(int j=1;j<=b;j++)\n        {\n            if(j+n-1>b) continue;\n            int ansm=0;\n            int ansmin=1000000010;\n            for(int k=0;k<n;k++)\n            {\n                ansm=max(max(fa[i+k][j][t],fa[i+k][j+n-(1<<t)][t]),ansm);\n                ansmin=min(min(fi[i+k][j][t],fi[i+k][j+n-(1<<t)][t]),ansmin);\n            }\n            ans=min(ans,ansm-ansmin);\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\u540e\u6765\u53c2\u8003\u4e86\u9898\u89e3\u533a\u5404\u4f4d\u5927\u4f6c\u7684\u601d\u8def\uff08%%%\uff09\n\u53ef\u4ee5\u5f97\u77e5\u4e8c\u7ef4\u7684RMQ\u5373\u628a\u4e00\u4e2a\u6b63\u65b9\u5f62\u5206\u89e3\u4e3a\u56db\u4e2a\u5c0f\u6b63\u65b9\u5f62\n\uff08\u4e00\u7ef4\u7684\u5206\u6210\u4e24\u4efd \u90a3\u4e8c\u7ef4\u7684\u4e0d\u5c31\u5206\u6210\u56db\u4efd\u5417\uff08\u672c\u849f\u84bb\u81ea\u5df1\u6ca1\u6709\u60f3\u51fa\u6765orz\uff09\uff09\n\u6240\u4ee5\u53ef\u5f97\u5230\u8fd9\u4e2a\u8f6c\u6362\u65b9\u7a0b\uff08\u6700\u5927\u503c\u540c\u7406\uff09\n```cpp\n fi[i][j][k]=min(min(fi[i+(1<<(k-1))][j+(1<<(k-1))][k-1],fi[i][j][k-1]),min(fi[i][j+(1<<(k-1))][k-1],fi[i+(1<<(k-1))][j][k-1]));\n```\nAC\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<utility>\n#include<queue>\n#include<map>\n#include<set>\n#define N 1001\n#define M 101\nusing namespace std;\nint n,b,a;\nint ma[N][N];\nint fa[N][N][10];\nint fi[N][N][10];\nint Log[M];\nint main()\n{\n\tscanf(\"%d%d%d\",&a,&b,&n);\n\tmemset(fi,0x3f,sizeof fi);\n\tfor(int i=1;i<=a;i++)\n\t{\n\t\tfor(int j=1;j<=b;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&ma[i][j]);\n\t\t\tfa[i][j][0]=ma[i][j];\n\t\t\tfi[i][j][0]=ma[i][j];\n\t\t}\n\t}\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tLog[i]=Log[i/2]+1;\n\t}\n\tfor(int k=1;(1<<k)<=n;k++)\n\t{\n\t\tfor(int i=1;i+(1<<k)-1<=a;i++)\n\t\t{\n\t\t\tfor(int j=1;j+(1<<k)-1<=b;j++)\n\t\t\t{\n\t\t\t\tfi[i][j][k]=min(min(fi[i+(1<<(k-1))][j+(1<<(k-1))][k-1],fi[i][j][k-1]),min(fi[i][j+(1<<(k-1))][k-1],fi[i+(1<<(k-1))][j][k-1]));\n\t\t\t\tfa[i][j][k]=max(max(fa[i+(1<<(k-1))][j+(1<<(k-1))][k-1],fa[i][j][k-1]),max(fa[i][j+(1<<(k-1))][k-1],fa[i+(1<<(k-1))][j][k-1]));\n\t\t\t}\n\t\t}\n\t}\n\tint t=Log[n];\n\tint ans=1000000001;\n\tfor(int i=1;i+n<=a+1;i++)\n\t{\n\t\tfor(int j=1;j+n<=b+1;j++)\n\t\t{\n\t\t\tint minn=min(min(fi[i][j][t],fi[i+n-(1<<t)][j][t]),min(fi[i][j+n-(1<<t)][t],fi[i+n-(1<<t)][j+n-(1<<t)][t]));\n\t\t\tint maxn=max(max(fa[i][j][t],fa[i+n-(1<<t)][j][t]),max(fa[i][j+n-(1<<t)][t],fa[i+n-(1<<t)][j+n-(1<<t)][t]));\n\t\t\tans=min(maxn-minn,ans);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1541162470,
        "uid": 47743,
        "name": "cocovigour",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u5929\u6a21\u62df\u8003\u7684\u9898\u3002\u3002\u3002\u8003\u573a\u53ea\u60f3\u51fa\u6765\u4e86\u4e00\u7ef4st\u8868\u5f88gg\u3002\u3002\u3002\u65c1\u8fb9\u7684dalao\u75af\u72c2\u7528\u5355\u8c03\u961f\u5217\u590d\u6742\u5ea6\u540a\u6253\u6211\u3002\u3002\u3002\u6700\u540e\u56e0\u4e3a\u6570\u636e\u5dee\u8ddd\u5e76\u4e14\u8001\u7237\u673a\u8dd1\u7684\u8d3c\u6162\u548c\u66b4\u529b\u62ff\u4e86\u4e00\u4e2a\u5206\u6570\uff08\u96fe\n\n\u8003\u573a\u540e\u4f9d\u7136\u4e0d\u653e\u5f03st\u8868\u7684\u505a\u6cd5\uff0c\u5b66\u4e60\u4e86\u4e00\u4e0b\u4e8c\u7ef4st\u8868\u3002\u3002\u3002\u7ec8\u4e8e\u6c34\u8fc7\u4e86\u3002\u3002\u3002\u53d1\u4e00\u7bc7\u9898\u89e3\u7eaa\u5ff5\u3002\n\n\nst[i][j][k]\u8868\u793a\u4ee5(i,j)\u8282\u70b9\u4e3a\u5de6\u4e0a\u89d2\uff0c\u8fb9\u957f\u4e3ak\u7684\u6b63\u65b9\u5f62\u7684\u6700\u5927\u503c    \nst1\u540c\u7406\n\n\u590d\u6742\u5ea6n2logn\uff1f\u597d\u50cf\u6bd4\u8003\u573a\u64b8\u51fa\u6765n2\u7684\u505a\u6cd5\u7684dalao\u4eec\u8fd8\u8981\u6162\u4e0d\u5c11\u5462\u3002\u3002\u3002\n\n\u4e0d\u8fc7\u56e0\u4e3a\u8fd9\u9053\u9898\u7684k\u662f\u56fa\u5b9a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u51cf\u5c11\u679a\u4e3ek\u7684\u6b21\u6570\u3002\u3002\u3002\u4f46\u662f\u8fd9\u79cd\u4f18\u5316\u6211\u4e0d\u4f1a\u554a\u3002\u3002\u3002dalao\u4eec\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5f3a\u554a\u3002\u3002\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n\nusing namespace std;\n\nlong long n,m,c;\nint st[1010][1010][11],st1[1010][1010][11];\nint mina=0x3f3f3f3f;\n\nvoid init(){\n    for(int k=1;k<=log2(min(n,m));k++)\n        for(int i=1;i+(1<<k)-1<=n;i++)\n            for(int j=1;j+(1<<k)-1<=m;j++)\n                st[i][j][k]=max(max(max(st[i][j][k-1],st[i+(1<<(k-1))][j][k-1]),st[i][j+(1<<(k-1))][k-1]),st[i+(1<<(k-1))][j+(1<<(k-1))][k-1]);\n    for(int k=1;k<=log2(min(n,m));k++)\n        for(int i=1;i+(1<<k)-1<=n;i++)\n            for(int j=1;j+(1<<k)-1<=m;j++)\n                st1[i][j][k]=min(min(min(st1[i][j][k-1],st1[i+(1<<(k-1))][j][k-1]),st1[i][j+(1<<(k-1))][k-1]),st1[i+(1<<(k-1))][j+(1<<(k-1))][k-1]);        \n}\n\nint ans(int x1,int y1,int x2,int y2){\n    int k=log2(c);\n    return max(max(max(st[x1][y1][k],st[x2-(1<<k)+1][y1][k]),st[x1][y2-(1<<k)+1][k]),st[x2-(1<<k)+1][y2-(1<<k)+1][k]);\n}\n\nint ans1(int x1,int y1,int x2,int y2){\n    int k=log2(c);\n    return min(min(min(st1[x1][y1][k],st1[x2-(1<<k)+1][y1][k]),st1[x1][y2-(1<<k)+1][k]),st1[x2-(1<<k)+1][y2-(1<<k)+1][k]);\n}\n\ninline int read(){\n    int x=0,gf=1;char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-') gf=-1;c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=x*10+c-48;c=getchar();\n    }\n    return x*gf;\n}\n\nint main(){\t\n    n=read(),m=read(),c=read();\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++){\n            int x=read();st[i][j][0]=x;st1[i][j][0]=x;\n        }\n    init();\n    for(int i=1;i<=n;i++){\n        if(i+c-1>n) break;\n        for(int j=1;j<=m;j++){\n            if(j+c-1>m) break;\n            int maxa=0;\n            maxa=max(maxa,ans(i,j,i+c-1,j+c-1));\n            mina=min(mina,maxa-ans1(i,j,i+c-1,j+c-1));\n        }\n    }\n    cout<<mina;\n    return 0;\n}\n```",
        "postTime": 1540042956,
        "uid": 80434,
        "name": "\u9a6c\u5cf0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3P2216"
    },
    {
        "content": "\u5f88\u591a\u6b21\u5355\u8c03\u961f\u5217\u5373\u53ef\u3002\n\n\u53ef\u4ee5\u7528cmp\u51fd\u6570\u7b80\u5316\u4ee3\u7801\u3002\n\n\nmn[I][j]\u4ee3\u8868\u5305\u62ec(I,j)\u5411\u53f3n\u4e2a\u6570\u7684min.\u3002mx[I][j]\u7c7b\u4f3c\u5730\u53d6max\u3002\n\n\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u3002\n\nsn[I][j]\u4ee3\u8868\u4ee5(I,j)\u4e3a\u5de6\u4e0a\u89d2\u7684n\\*n\u77e9\u5f62\u7684min\u3002sx[I][j]\u7c7b\u4f3c\u3002\n\n\u663e\u7136\u6709$sn[I][j]=min{mn[I+k][j]}|0\\leq k \\le n$\n\n\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u3002\n\n\n\u5176\u4e2dmn,mx\u7684\u8ba1\u7b97\u53ef\u4ee5\u5408\u5e76,sn,sx\u7684\u8ba1\u7b97\u53ef\u4ee5\u5408\u5e76\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n//#define DBG\nusing std::min;\nusing std::max;\nconst int MAXN=1010,INF=1<<30;\nstruct NODE{int i,a;\nNODE(int x=0,int y=0):i(x),a(y){}\n}q[MAXN];\nint n,a,b,dg[MAXN][MAXN],ans=INF,mx[MAXN][MAXN],mn[MAXN][MAXN],sx[MAXN][MAXN],sn[MAXN][MAXN],front=0,rear=0;\nint cmp1(int a,int b){\n    return a>=b;\n}\nint cmp2(int a,int b){\n    return a<=b;\n} \nvoid dp(int t[MAXN][MAXN],int (*cmp)(int,int)){\n    for(int i=1;i<=a;i++) {\n        for(int j=1;j<=n;j++){\n            //while(front!=rear&&cmp(q[front].a,dg[i][j])) front=(front+1)%MAXN;\n            while(front!=rear&&cmp(q[rear-1].a,dg[i][j])) rear=(rear-1+MAXN)%MAXN;\n            q[rear]=NODE(j,dg[i][j]);\n            rear++;\n            rear%=MAXN;\n        }\n        t[i][1]=q[front].a;\n        for(int j=2;j<=b-n+1;j++){\n            while(front!=rear&&q[front].i<j) front=(front+1)%MAXN;\n            //while(front!=rear&&cmp(q[front].a,dg[i][j+n-1])) front=(front+1)%MAXN;\n            while(front!=rear&&cmp(q[rear-1].a,dg[i][j+n-1])) rear=(rear-1+MAXN)%MAXN;\n            q[rear]=NODE(j+n-1,dg[i][j+n-1]);\n            rear++;\n            rear%=MAXN;\n            t[i][j]=q[front].a;\n        }\n        front=rear=0;\n    }\n}\nvoid dp2(int s[MAXN][MAXN],int t[MAXN][MAXN],int (*cmp)(int,int)){\n    for(int j=1;j<=b-n+1;j++){\n        for(int i=1;i<=n;i++){\n            //while(front!=rear&&cmp(q[front].a,s[i][j])) front=(front+1)%MAXN;\n            while(front!=rear&&cmp(q[rear-1].a,s[i][j])) rear=(rear-1+MAXN)%MAXN;\n            q[rear]=NODE(i,s[i][j]);\n            rear++;\n            rear%=MAXN;\n        }\n        t[1][j]=q[front].a;\n        for(int i=2;i<=a-n+1;i++){\n            while(front!=rear&&q[front].i<i) front=(front+1)%MAXN;\n            //while(front!=rear&&cmp(q[front].a,s[i+n-1][j])) front=(front+1)%MAXN;\n            while(front!=rear&&cmp(q[rear-1].a,s[i+n-1][j])) rear=(rear-1+MAXN)%MAXN;\n            q[rear]=NODE(i+n-1,s[i+n-1][j]);\n            rear++;\n            rear%=MAXN;\n            t[i][j]=q[front].a;\n        }\n        front=rear=0;\n    }\n} \nvoid show(int t[MAXN][MAXN]){\n    for(int i=1;i<=a;i++,printf(\"\\n\")) for(int j=1;j<=b;j++) printf(\"%d \",t[i][j]);\n    printf(\"\\n\");\n}\nint main(){\n    scanf(\"%d%d%d\",&a,&b,&n);\n    for(int i=1;i<=a;i++) for(int j=1;j<=b;j++) scanf(\"%d\",&dg[i][j]);\n    dp(mn,cmp1),dp(mx,cmp2);\n    #ifdef DBG\n    show(mn),show(mx);\n    #endif\n    dp2(mn,sn,cmp1),dp2(mx,sx,cmp2);\n    for(int i=1;i<=a-n+1;i++) for(int j=1;j<=b-n+1;j++) {\n        if(sx[i][j]-sn[i][j]<ans) ans=sx[i][j]-sn[i][j];\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1475171056,
        "uid": 15183,
        "name": "Rapiz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u5148\u7528\u6ed1\u52a8\u7a97\u53e3+\u5355\u8c03\u961f\u5217\u6c42\u51fa\u6bcf\u4e00\u884c\u957f\u5ea6\u4e3an\u7684\u8fde\u7eed\u5e8f\u5217\u4e2d\u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\uff0c\u5b58\u5230rmin[i][j],rmax[i][j]\u4e24\u4e2a\u6570\u7ec4\u91cc\uff0c\u518d\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u6c42\u8fd9\u4e24\u4e2a\u6570\u7ec4\u4e2d\u6bcf\u4e00\u5217\u957f\u5ea6\u4e3an\u7684\u8fde\u7eed\u5e8f\u5217\u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u5b58\u5230gmin[i][j],gmax[i][j]\u4e2d\uff08\u540e\u6765\u53d1\u73b0\u76f4\u63a5\u8986\u76d6\u5230rmin,rmax\u4e2d\u4e5f\u6ca1\u5173\u7cfb\uff09\u3002\u6700\u540eO(ab)\u904d\u5386gmin,gmax\u5f97\u51fa\u7b54\u6848\u3002\n\n\u5355\u8c03\u961f\u5217\u6211\u7528\u7cfb\u7edf\u7684deque\uff0c\u5de8\u6162\u3002\u3002\n\n\u5177\u4f53\u770b\u4ee3\u7801\u5427\uff0c\u770b\u8d77\u6765\u6709\u70b9\u957f\u554a\uff0c\u4e0d\u8fc7\u90fd\u662f\u590d\u5236\u7c98\u8d34\u5566\u3002\n\n```cpp\n\n#include<iostream>  \n#include<algorithm>  \n#include<queue>  \n#define mk(a,b) make_pair(a,b)  \nusing namespace std;  \nint m[1001][1001], rmin[1001][1001], rmax[1001][1001], gmin[1001][1001], gmax[1001][1001];  \ndeque<pair<int, int> > qmin, qmax;  \nint main()  \n{  \n    ios::sync_with_stdio(false);  \n    int a, b, n;  \n    cin >> a >> b >> n;  \n    for (int i = 1; i <= a; i++)  \n    {  \n        for (int j = 1; j <= b; j++)  \n        {  \n            cin >> m[i][j];  \n        }  \n    }  \n    for (int i = 1; i <= a; i++)  \n    {  \n        for (int j = 1; j < n; j++)  \n        {  \n            while (!qmin.empty() && qmin.back().second > m[i][j]) qmin.pop_back();  \n            qmin.push_back(mk(j, m[i][j]));  \n            while (!qmax.empty() && qmax.back().second < m[i][j]) qmax.pop_back();  \n            qmax.push_back(mk(j, m[i][j]));  \n        }  \n        for (int j = 1; j + n - 1 <= b; j++)  \n        {  \n            while (!qmin.empty() && qmin.back().second > m[i][j + n - 1]) qmin.pop_back();  \n            qmin.push_back(mk(j + n - 1, m[i][j + n - 1]));  \n            while (!qmax.empty() && qmax.back().second < m[i][j + n - 1]) qmax.pop_back();  \n            qmax.push_back(mk(j + n - 1, m[i][j + n - 1]));  \n            while (qmin.front().first < j) qmin.pop_front();  \n            while (qmax.front().first < j) qmax.pop_front();  \n            rmin[i][j] = qmin.front().second;  \n            rmax[i][j] = qmax.front().second;  \n        }  \n        qmin.clear();  \n        qmax.clear();  \n    }  \n    for (int j = 1; j <= b; j++)  \n    {  \n        for (int i = 1; i < n; i++)  \n        {  \n            while (!qmin.empty() && qmin.back().second > rmin[i][j]) qmin.pop_back();  \n            qmin.push_back(mk(i, rmin[i][j]));  \n            while (!qmax.empty() && qmax.back().second < rmax[i][j]) qmax.pop_back();  \n            qmax.push_back(mk(i, rmax[i][j]));  \n        }  \n        for (int i = 1; i + n - 1 <= a; i++)  \n        {  \n            while (!qmin.empty() && qmin.back().second > rmin[i + n - 1][j]) qmin.pop_back();  \n            qmin.push_back(mk(i + n - 1, rmin[i + n - 1][j]));  \n            while (!qmax.empty() && qmax.back().second < rmax[i + n - 1][j]) qmax.pop_back();  \n            qmax.push_back(mk(i + n - 1, rmax[i + n - 1][j]));  \n            while (qmin.front().first < i) qmin.pop_front();  \n            while (qmax.front().first < i) qmax.pop_front();  \n            gmin[i][j] = qmin.front().second;  \n            gmax[i][j] = qmax.front().second;  \n        }  \n        qmin.clear();  \n        qmax.clear();  \n    }  \n    int ans = 1000000000;  \n    for (int i = 1; i + n - 1 <= a; i++)  \n    {  \n        for (int j = 1; j + n - 1 <= b; j++)  \n        {  \n            ans = min(ans, gmax[i][j] - gmin[i][j]);  \n        }  \n    }  \n    cout << ans;  \n}\n\n```",
        "postTime": 1428920073,
        "uid": 6210,
        "name": "sqc1999",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8ba9\u6c42n*n\u7684\u6b63\u65b9\u5f62\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u5dee\u6700\u5927\n\u6211\u4eec\u60f3\u5bf9\u4e8e\u6bcf\u4e2a\u6b63\u65b9\u5f62 \u5206\u522b\u8bb0\u5f55\u5b83\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c \u7136\u540e\u76f8\u51cf\u627e\u5dee\u7684\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u4e86\n\n\u4f46\u600e\u4e48\u7ef4\u62a4\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\u5185\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5462\uff1f\u4e00\u4e2a\u5f88\u597d\u7684\u601d\u8def\u5c31\u662f\u5c06\u4e8c\u7ef4\u8f6c\u5316\u4e3a\u4e00\u7ef4 \n \u6bd4\u5982\u6c42\u4e8c\u7ef4\u524d\u7f00\u548c\u65f6 \u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u4ee4b[i][j]=sigma(a[i][k]) \uff08k<=j\uff09 \u7136\u540esum[i][j]=sum[i-1][j]+b[i][j] \n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\u6765\u8bf4 \u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u4e00\u4e2an*n\u7684\u6b63\u65b9\u5f62\u4e2d\u6bcf\u4e00\u884c\u7684\u6700\u5927\uff08\u5c0f\uff09\u503c \u7136\u540e\u533a\u95f4\u7684\u6700\u5927\uff08\u5c0f\uff09\u503c\u5c31\u662f\u6bcf\u4e00\u884c\u7684\u6700\u5927\uff08\u5c0f\uff09\u503c\u7684\u6700\u5927\uff08\u5c0f\uff09\u503c \u663e\u7136 \u5bf9\u4e8e\u4e00\u4e2a\u4e00\u7ef4\u5e8f\u5217 \u8981\u6c42\u957f\u5ea6\u4e3an\u7684\u6570\u4e2d\u6700\u5927\uff08\u5c0f\uff09\u503c\u53ef\u4ee5\u7528\u6ed1\u52a8\u7a97\u53e3O(N)\u5730\u89e3\u51b3 \u6211\u4eec\u8bbe\u6570\u7ec4minn[i][j]\u548cmaxn[i][j] \u8868\u793a\u7b2ci\u884c\u4ecej\u5f00\u59cb\u7684n\u4e2a\u6570\u4e2d\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\n\n\u5904\u7406\u5b8c\u540e\u518d\u679a\u4e3e\u6bcf\u4e2an\u6b63\u65b9\u5f62\u7684\u5de6\u4e0a\u89d2 \u7b97\u51fa\u5411\u4e0bn\u884c\u7684min(minn[i][j])\u548cmax(maxn[i][j]) \u518d\u628a\u5dee\u6c42\u4e00\u4e2a\u6700\u5927\u503c\u5373\u53ef \u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(a*b *n\uff09\n\n\u4ee3\u7801\uff1a\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int INF=1000000000;\nint a,b,w[1010][1010],minn[1010][1010],maxn[1010][1010];\nint fp,rp,exp=INF,xmin=INF,xmax=INF;\nstruct node\n{ int val,pos;}q[1000001];\nint main()\n{ int i,j,k,n;\n  scanf(\"%d%d%d\",&a,&b,&n);\n  for(i=1;i<=a;i++)\n   for(j=1;j<=b;j++) scanf(\"%d\",&w[i][j]);\n  for(i=1;i<=a;i++)\n  { fp=rp=1;q[fp].val=w[i][1];q[fp].pos=1; \n    for(j=2;j<n;j++)\n    { while(fp<=rp&&q[rp].val>w[i][j]) rp--;\n      q[++rp].val=w[i][j];q[rp].pos=j;}\n    for(j=n;j<=b;j++)\n    { while(fp<=rp&&q[rp].val>w[i][j]) rp--;\n      q[++rp].val=w[i][j];q[rp].pos=j;\n      while(fp<=rp&&q[fp].pos<j-n+1) fp++;\n      minn[i][j-n+1]=q[fp].val;}}\n  for(i=1;i<=a;i++)\n  { fp=rp=1;q[fp].val=w[i][1];q[fp].pos=1;\n    for(j=2;j<n;j++)\n    { while(fp<=rp&&q[rp].val<w[i][j]) rp--;\n      q[++rp].val=w[i][j];q[rp].pos=j;}\n    for(j=n;j<=b;j++)\n    { while(fp<=rp&&q[rp].val<w[i][j]) rp--;\n      q[++rp].val=w[i][j];q[rp].pos=j;\n      while(fp<=rp&&q[fp].pos<j-n+1) fp++;\n      maxn[i][j-n+1]=q[fp].val;}} \n  for(i=1;i<=a-n+1;i++)\n   for(j=1;j<=b-n+1;j++)\n  { xmin=INF;xmax=0;\n    for(k=0;k<=n-1;k++)\n    { xmin=min(xmin,minn[i+k][j]);\n      xmax=max(xmax,maxn[i+k][j]);}\n    exp=min(exp,xmax-xmin);}\n  printf(\"%d\",exp);\n  return 0;\n}\n```\n",
        "postTime": 1570954310,
        "uid": 52952,
        "name": "Barcelona_Messi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u5361\u5e38\u795e\u9898\u4e2d & \u6574\u6570\u9000\u706b\u677f\u5b50\u9898\n\n\u7531\u4e8e\u6211\u83dc\u5230\u4e0d\u4f1a\u6253\u4efb\u4f55\u4e00\u79cd\u4e8c\u7ef4\u6570\u636e\u7ed3\u6784\n\n\u4e00\u5f00\u59cb\u5c31\u6253\u4e86\u4e2a\u7ebf\u6bb5\u6811\u5957st\uff0c\u53d1\u73b0\u5f00\u5fc3\u7684TLE3\n\n\u6012\u800c\u9000\u706b\n\n\u672c\u9898\u4e2d\u5b50\u6b63\u65b9\u5f62\u4f1a\u6709\u4e0d\u5c11\u91cd\u53e0\uff0c\u6240\u4ee5\u9000\u706b\u663e\u7136\u6bd4\u76f4\u63a5\u968f\u673a\u5316\u73c2\u5b66\n\n\u53e6\u5916\uff0c\u672c\u9898\u7684\u5b9a\u4e49\u57df\u4e0d\u8fde\u7eed\uff0c\u6240\u4ee5\u6e29\u5ea6\u7684\u9009\u53d6\u4e0d\u80fd\u76f4\u63a5\u5f00\u7684\u5de8\u5927\uff0c\u6bcf\u6b21\u90fd\u8981\u4fdd\u8bc1\u5750\u6807\u662f\u6574\u6570\n\n\u9000\u706b\u4ee3\u7801\u90fd\u5dee\u4e0d\u591a\u5427\uff0c\u53d1\u4e0d\u53d1\u610f\u4e49\u4e0d\u5927\n\n\u5f00\u4f18\u5316\u57fa\u672cAC\u662f\u7a33\u7684\n```cpp\n#pragma GCC optimize(3)\n#include<cstdio>\n#include<ctime>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<cmath>\n#define double double\n#define RAND_INT (rand() << 1) -RAND_MAX\n#define max(a,b) a>b?a:b\n#define min(a,b) a<b?a:b\nint a[1001][1001],n,m,k,ans=1e9,ans_x,ans_y;\ninline int read() {\n\tchar x =getchar();\tint a =0;\n\twhile(!isdigit(x))\tx =getchar();\n\twhile(isdigit(x))\ta =a*10+x-48,x =getchar();\n\treturn a;\t\n}\ninline int calc(int rx,int ry){\n\tint mx =-1e9,mn =1e9;\n\tfor(int x=rx;x<=rx+k-1;++x)\n\t\tfor(int y=ry;y<=ry+k-1;++y)\n\t\t\tmx =max(a[x][y],mx),\n\t\t\tmn =min(a[x][y],mn);\n\treturn mx-mn;\n}\ninline void SA(){\n\tint x =ans_x,y =ans_y;\n\tfor(double T =max(n,m);T>=0.1;T *=0.997){\n\t\tint X =(x+RAND_INT %(int)(T*10)) %(n-k+1)+1,\n\t\t\tY =(y+RAND_INT %(int)(T*10)) %(m-k+1)+1;\n\t\tif(X<1 || Y<1 || X>n-k+1 || Y>m-k+1)\tcontinue;\n\t\tint now =calc(X,Y);\n\t\tdouble delta =now -ans;\n\t\tif(delta < 0){\n\t\t\tans =now;\n\t\t\tans_x =x =X;\n\t\t\tans_y =y =Y;\n\t\t}\n\t\telse if(exp(-delta/T)*RAND_MAX > rand()) x =X,y =Y;\n\t}\n}\nint main(){\n\tn =read();\tm =read();\tk =read();\n\tfor(int i=1;i<=n;++i)\tfor(int j=1;j<=m;++j)\ta[i][j] =read();\n\tans_x =(n+1)>>1;\n\tans_y =(m+1)>>1;\n\twhile ((double)clock() / CLOCKS_PER_SEC < 0.9) SA();\n\tprintf(\"%d\",ans);\n}\n```\n\n",
        "postTime": 1568987975,
        "uid": 104000,
        "name": "Kisaragi_77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e00\u770b\u5c31\u548cpoj\u7684\u6ed1\u52a8\u7a97\u53e3\u5f88\u50cf\uff0c\u4e0d\u8fc7\u662f\u4e8c\u7ef4\u7684\u6ed1\u52a8\u7a97\u53e3\uff0c\u6211\u4eec\u5728\u7ef4\u62a4\u6bcf\u884c\u5355\u8c03\u961f\u5217\u7684\u57fa\u7840\u4e0a\uff0c\u518d\u7ef4\u62a4\u4e00\u4e2a\u4e8c\u7ef4\u7684\u5355\u8c03\u961f\u5217\uff0c\u5c31\u53ef\u4ee5\u8fbe\u5230\u6211\u4eec\u7684\u76ee\u7684\n\n\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\n\n\u5047\u8bben \u4e3a 3\n\n\u628a\u6bcf\u884c\u524d\u4e09\u4e2a\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u6c42\u51fa\n\n\u518d\u7ad6\u7740\u6765\u4e00\u6b21\u5355\u8c03\u961f\u5217\uff0c\u6c42\u51fa\u6bcf\u4e09\u884c\uff0c\u6bcf\u4e09\u5217\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e86\n\n\u6700\u540e\u5168\u90e8\u627e\u4e00\u904d\u5373\u53ef\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <queue>\n#include <algorithm>\nusing namespace std;\nconst int M = 1000;\nint f[M + 5][M + 5];\nint dmax[M + 5][M + 5];\nint dmin[M + 5][M + 5];\nint dmax_1[M + 5][M + 5];\nint dmin_1[M + 5][M + 5];\nsigned main(){\n\tint a,b,n;\n\tscanf(\"%d%d%d\",&a,&b,&n);\n\tfor(int i = 1;i <= a;i ++){\n\t\tfor(int j = 1;j <= b;j ++){\n\t\t\tscanf(\"%d\",&f[i][j]);\n\t\t}\n\t}\n\tfor(int i = 1;i <= a;i ++){\n\t\tdeque<int> que;\n\t\tdeque<int> que_1;\n\t\tfor(int j = 1;j <= b;j ++){\n\t\t\tif(que.empty()){\n\t\t\t\tque.push_back(j);\n\t\t\t}\n\t\t\telse{\n\t\t\t\twhile(! que.empty() && j - que.front() >= n){\n\t\t\t\t\tque.pop_front();\n\t\t\t\t}\n\t\t\t\twhile(! que.empty() && f[i][j] > f[i][que.back()]){\n\t\t\t\t\tque.pop_back();\n\t\t\t\t}\n\t\t\t\tque.push_back(j);\n\t\t\t}\n\t\t\tdmax[i][j] = f[i][que.front()];\n\t\t\tif(que_1.empty()){\n\t\t\t\tque_1.push_back(j);\n\t\t\t}\n\t\t\telse{\n\t\t\t\twhile(! que_1.empty() && j - que_1.front() >= n){\n\t\t\t\t\tque_1.pop_front();\n\t\t\t\t}\n\t\t\t\twhile(! que_1.empty() && f[i][j] < f[i][que_1.back()]){\n\t\t\t\t\tque_1.pop_back();\n\t\t\t\t}\n\t\t\t\tque_1.push_back(j);\n\t\t\t}\n\t\t\tdmin[i][j] = f[i][que_1.front()];\n\t\t}\n\t}\n\t/*for(int i = 1;i <= a;i ++){\n\t\tfor(int j = 1;j <= b;j ++){\n\t\t\tprintf(\"%lld %lld|\",dmax[i][j],dmin[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}*/\n\tfor(int i = 1;i <= b;i ++){\n\t\tdeque<int> que;\n\t\tdeque<int> que_1;\n\t\tfor(int j = 1;j <= a;j ++){\n\t\t\tif(que.empty()){\n\t\t\t\tque.push_back(j);\n\t\t\t}\n\t\t\telse{\n\t\t\t\twhile(! que.empty() && j - que.front() >= n){\n\t\t\t\t\tque.pop_front();\n\t\t\t\t}\n\t\t\t\twhile(! que.empty() && dmax[j][i] > dmax[que.back()][i]){\n\t\t\t\t\tque.pop_back();\n\t\t\t\t}\n\t\t\t\tque.push_back(j);\n\t\t\t}\n\t\t\tdmax_1[j][i] = dmax[que.front()][i];\n\t\t\tif(que_1.empty()){\n\t\t\t\tque_1.push_back(j);\n\t\t\t}\n\t\t\telse{\n\t\t\t\twhile(! que_1.empty() && j - que_1.front() >= n){\n\t\t\t\t\tque_1.pop_front();\n\t\t\t\t}\n\t\t\t\twhile(! que_1.empty() && dmin[j][i] < dmin[que_1.back()][i]){\n\t\t\t\t\tque_1.pop_back();\n\t\t\t\t}\n\t\t\t\tque_1.push_back(j);\n\t\t\t}\n\t\t\tdmin_1[j][i] = dmin[que_1.front()][i];\n\t\t}\n\t}\n\t/*for(int i = 1;i <= a;i ++){\n\t\tfor(int j = 1;j <= b;j ++){\n\t\t\tprintf(\"%lld %lld|\",dmax_1[i][j],dmin_1[i][j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}*/\n\tlong long minn = 1000000000;\n\tfor(int i = n;i <= a;i ++)\n\t\tfor(int j = n;j <= b;j ++){\n\t\t\tminn = min(1ll * minn,1ll * dmax_1[i][j] - dmin_1[i][j]);\n\t\t}\n\tprintf(\"%lld\",minn);\n\treturn 0;\n}\n```\n",
        "postTime": 1567594473,
        "uid": 54135,
        "name": "king_more",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u505a\u6389\u8fd9\u9898\u633a\u4e0d\u5bb9\u6613\u7684\uff0c\u662f\u4ece\u8bd5\u7ec3\u573a\u7684\u5355\u8c03\u961f\u5217\u5173\u70b9\u8fdb\u6765\u7684\uff0c\u4f46\u662f\u770b\u5230\u9898\u76ee\u7b2c\u4e00\u79d2\u60f3\u5230\u7684\u662f\u4e8c\u7ef4St\u8868\u2026\u2026\u9605\u8bfb\u65f6\u5efa\u8bae\u76f4\u63a5\u8df3\u8f6c\u81f3\u601d\u8def\u3002\u4ed4\u7ec6\u5730\u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3\u5355\u8c03\u961f\u5217\u91cc\u57fa\u672c\u90fd\u662f\u628a\u9884\u5904\u7406\u548c\u8ba1\u7b97\u5206\u5f00\u7684\uff0c\u6211\u8fd9\u79cd\u5199\u6cd5\u597d\u50cf\u6ca1\u6709\uff0c\u81ea\u5df1\u89c9\u5f97\u6211\u7684\u903b\u8f91\u6bd4\u8f83\u6e05\u6670\u4e00\u4e9b\u3002\n\n\u867d\u7136\u4e4b\u540e\u770b\u5230\u5f88\u591a\u5de8\u4f6c\u90fd\u6210\u529f\u7684\u4f7f\u7528\u6539\u8fdb\u540e\u7684\u4e8c\u7ef4st\u8868\u5207\u4e86\u8fd9\u9898\uff0c\u4f46\u662f\u76f4\u63a5yy\u677f\u5b50\u7684\u6211\u56e0MLE\u53ea\u62ff\u4e8620\u5206\u3002\n##### \u4e8c\u7ef4st\u8868\u6a21\u677f/\u4e0d\u80fdAC\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n#define reg register\n#define type int//\u770b\u60c5\u51b5\u4fee\u6539\u8fd4\u56de\u7c7b\u578b\ninline char nc()\n{\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ninline type read()\n{\n    bool minus=false;\n    char ch=nc();type sum=0;\n    while(!(ch>='0'&&ch<='9')&&ch!='-')ch=nc();\n    if(ch=='-')minus=true,ch=nc();//\u5224\u8d1f\u6ca1\u5fc5\u8981\u7684\u65f6\u5019\u8bb0\u5f97\u5220\uff0c\u5f71\u54cd\u6548\u7387\n    while(ch>='0'&&ch<='9')sum=(sum<<1)+(sum<<3)+ch-48,ch=nc();\n    return sum;\n}\nconst int maxn = 1e3 + 10;\nconst int maxlog = 10 + 1;\nconst int INF = 0x7fffffff;\nint n, m, k;\nint a[maxn][maxn];\nint st1[maxn][maxn][maxlog][maxlog], st2[maxn][maxn][maxlog][maxlog];\nint Log2[maxn];\ninline int query1(int x1, int y1, int x2, int y2)\n{\n    int k1 = Log2[x2 - x1 + 1], k2 = Log2[y2 - y1 + 1];\n    return max(st1[x1][y1][k1][k2], max(st1[x2-(1<<k1)+1][y1][k1][k2], max(st1[x1][y2-(1<<k2)+1][k1][k2], st1[x2-(1<<k1)+1][y2-(1<<k2)+1][k1][k2])));\n}\ninline int query2(int x1, int y1, int x2, int y2)\n{\n    int k1 = Log2[x2 - x1 + 1], k2 = Log2[y2 - y1 + 1];\n    return min(st2[x1][y1][k1][k2], min(st2[x2-(1<<k1)+1][y1][k1][k2], min(st2[x1][y2-(1<<k2)+1][k1][k2], st2[x2-(1<<k1)+1][y2-(1<<k2)+1][k1][k2])));\n}\nint main()\n{\n    n = read(), m = read(), k = read();\n    for(int i = 2; i <= max(n, m); i++){\n        if((1 << (Log2[i-1]+1)) > i)\n            Log2[i] = Log2[i-1];\n        else\n            Log2[i] = Log2[i-1]+1;\n    }\n\n    for (reg int i = 1 ; i <= n ; ++i)\n        for (reg int j = 1 ; j <= m ; ++j)\n            st2[i][j][0][0] = st1[i][j][0][0] = a[i][j] = read();\n\n    for (reg int p = 0 ; p <= 10 ; p ++)\n        for (reg int q = 0 ; q <= 10 ; q ++)\n            if (p != 0 || q != 0){\n                for (reg int i = 1 ; i + (1<<p) - 1 <= n ; i ++)\n                    for (reg int j = 1 ; j + (1<<q) - 1 <= m ; j ++)\n                        if (!p) st1[i][j][p][q] = max(st1[i][j][p][q - 1], st1[i][j+(1<<(q-1))][p][q - 1]);\n                        else st1[i][j][p][q] = max(st1[i][j][p-1][q], st1[i+(1<<(p-1))][j][p-1][q]);\n            }//i\u8d70p\u6b21\u65b9\uff0cq\u8d70j\u6b21\u65b9for (reg int p = 0 ; p <= 10 ; p ++)\n    for (reg int p = 0 ; p <= 10 ; p ++)\n        for (reg int q = 0 ; q <= 10 ; q ++)\n            if (p != 0 || q != 0)\n                for (reg int i = 1 ; i + (1<<p) - 1 <= n ; i ++)\n                    for (reg int j = 1 ; j + (1<<q) - 1 <= m ; j ++)\n                        if (!p) st2[i][j][p][q] = min(st2[i][j][p][q - 1], st2[i][j+(1<<(q-1))][p][q - 1]);\n                        else st2[i][j][p][q] = min(st2[i][j][p-1][q], st2[i+(1<<(p-1))][j][p-1][q]);\n\n    int ans = INF;\n    for(int i = 1; i <= n - k + 1; i++){\n        for(int j = 1; j <= m - k + 1; j++){\n            int temp = query1(i, j, i + k - 1, j + k - 1) - query2(i, j, i + k - 1, j + k - 1);\n            ans = min(temp, ans);\n        }\n    }\n\n    cout << ans << endl;\n    return 0;\n}\n\n```\n\u4e0a\u8ff0\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6$O(N*M*logN*logM)$\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0e\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\uff0c\u4e0d\u8fc7\u7531\u4e8e\u7a7a\u95f4\u590d\u6742\u5ea6\u7565\u5927\uff0c\u8be5\u7b97\u6cd5MLE\uff0c\u6539\u8fdb\u540e\u53ef\u4ee5\u5229\u7528\u6b63\u65b9\u5f62\u8fb9\u957f\u76f8\u7b49\u7684\u6027\u8d28\u7701\u53bb\u4e00\u7ef4$O(LogN)$\u8fbe\u5230\u6781\u5927\u7684\u8282\u7ea6\u7a7a\u95f4\u7684\u76ee\u7684\u4ece\u800cAC\u672c\u9898\uff0c\u4ee5\u4e0a\u4ee3\u7801\u7684\u5b58\u5728\u4ef7\u503c\u4ec5\u4e3a\u8bfb\u8005\u63d0\u4f9b\u53ef\u76f4\u63a5\u5957\u7528\u7684\u4e8c\u7ef4st\u8868\u6a21\u677f\uff0c\u4e0d\u4f5c\u5197\u4f59\u8bb2\u89e3\uff0c\u5982\u9700\u8bb2\u89e3\u53ef\u8f6c\u9605\u4ed6\u4eba\u9898\u89e3\u3002\n\n\u60eb\u61d2\u7684\u6211\u867d\u7136\u77e5\u9053\u6b63\u65b9\u5f62\u7684\u6027\u8d28\u4f46\u662f\u81ea\u7136\u662f\u4e0d\u613f\u610f\u7ee7\u7eed\u60f3\u8fd9\u4e2a\u5361\u6ee1\u7684\u52a3\u8d28\u7b97\u6cd5\u7684\u3002\u4e8e\u662f\u56de\u5230\u5355\u8c03\u961f\u5217\uff0c\u5bf9\u4e8e\u5355\u8c03\u961f\u5217\u7684\u8bb2\u89e3\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u53e6\u4e00\u7bc7\u9898\u89e3[\u5355\u8c03\u961f\u5217-\u6700\u5927\u5b50\u6bb5\u548c](https://andrewwayne.blog.luogu.org/solution-p1115)\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u8bb2\u7684\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u6b22\u8fce\u5404\u4f4d\u6307\u6b63\u3002\n\nB\u514b\u66fe\u7ecf\u544a\u8bc9\u8fc7\u6211\uff0c\u5355\u8c03\u961f\u5217\u53ef\u4ee5\u89e3\u51b3\u8be2\u95ee\u6ca1\u6709\u91cd\u590d\u533a\u95f4\u7684RMQ\u95ee\u9898\u3002\u5f15\u5165\u601d\u8003\uff0c\u672c\u95ee\u9898\u5b9e\u9645\u4e5f\u4e0d\u8fc7\u662f\u4e00\u79cd\u53d8\u76f8\u7684\u4e8c\u7ef4RMQ\u95ee\u9898\uff0c\u518d\u679a\u4e3e$N*M$\u4e2a\u70b9\u7f62\u4e86\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u65b9\u5f62\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5730\u7528\u5355\u8c03\u961f\u5217\u5904\u7406\u51fa\u6bcf\u4e00\u884c\u7684\u6700\u5927\u503c\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u5bf9\u4e8e\u6bcf\u4e00\u884c\u7684\u503c\u5728\u5217\u4e0a\u5904\u7406\u51fa\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u89c4\u5b9a$Aque1[i]$\u4e3a\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e86\u7b2ci\u884c\u4e2d\u7684\u6700\u5c0f\u503c\uff0c$Aque2[i]$\u4e3a\u6700\u5927\u503c\uff0c$Bque1$\u8868\u793a\u7ef4\u62a4\u5230\u7b2ci\u5217$min(Aque1[1 \\dots n])$$Bque2$\u4e3a$max(  Aque2[1 \\dots n])$\n\n\u7136\u540e\u6211\u4eec\u679a\u4e3e\u6b63\u65b9\u5411\u7684\u53f3\u4e0b\u89d2\u6807$(j,i)$\u679a\u4e3e\u7684\u65f6\u5019\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u51fa\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u6700\u7ec8\u6bcf\u4e2a\u70b9\u5728Aque\u4e2d\u6700\u591a\u8fdb\u4e00\u6b21\u51fa\u4e00\u6b21\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6$O(N*M)$\u4ed4\u7ec6\u5730\u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3\u53d1\u73b0\u90fd\u662f\u628a\u9884\u5904\u7406\u548c\u8ba1\u7b97\u5206\u5f00\u7684\uff0c\u4f46\u5176\u5b9e\u5e76\u6ca1\u6709\u8fd9\u4e2a\u5fc5\u8981\uff0c\u4e3a\u4e86\u8282\u7ea6\u7a7a\u95f4\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u679a\u4e3e\u70b9\u7684\u65f6\u5019\u66f4\u65b0\uff0c\u5b9e\u73b0\u4e2d\u7684\u601d\u8def\u5728\u4ee3\u7801\u4e2d\u6709\u6ce8\u91ca\u3002\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <queue>\nusing namespace std;\nconst int MAXN = 1e3 + 10;\nint N, M, L, A[MAXN][MAXN];\ndeque<pair<int,int> > Aque1[MAXN], Aque2[MAXN], Bque1, Bque2;//\u5b9a\u4e49\u5982\u4e0a\u6587\u6240\u8ff0\nint ANS = 0x7fffffff;\nint main(){\n    cin >> N >> M >> L;\n    for(int i = 1; i <= N; i++)\n        for(int j = 1; j <= M; j++)\n            cin >> A[i][j];\n    int val = 0;\n    \n    for(int i = 1; i <= M; i++){\n        Bque1.clear();\n        Bque2.clear();//\u6e05\u7a7a\u662f\u5f88\u6709\u5fc5\u8981\u7684\uff0c\u7531\u4e8e\u6bcf\u8fdb\u5165\u65b0\u7684\u4e00\u5217\u90fd\u662f\u4e00\u4e2a\u65b0\u7684Bque\uff0c\u4e0e\u4e0a\u4e00\u5217\u7684\u503c\u65e0\u5173\uff0c\u800c\u6bcf\u4e00\u8f6e\u7ed3\u675f\u540e\u5e76\u4e0d\u4e00\u5b9a\u80fd\u591f\u4f7f\u6240\u6709\u5143\u7d20\u51fa\u961f\u3002\n        for(int j = 1; j <= N; j++){//\u6211\u7684\u626b\u63cf\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u77e9\u9635\u4e00\u5217\u4e00\u5217\u7684\u7ad6\u7740\u63a8\u8fdb\u8fc7\u53bb\n            while(!Aque1[j].empty() && Aque1[j].front().first <= i - L)\n                Aque1[j].pop_front();//\u629b\u5f03\u8fc7\u671f\u51b3\u7b56\n            while(!Aque2[j].empty() && Aque2[j].front().first <= i - L)\n                Aque2[j].pop_front();\n            while(!Bque1.empty() && Bque1.front().first <= j - L)\n                Bque1.pop_front();\n            while(!Bque2.empty() && Bque2.front().first <= j - L)\n                Bque2.pop_front();\n            \n            while(!Aque1[j].empty() && Aque1[j].back().second > A[j][i])\n                Aque1[j].pop_back();\n            Aque1[j].push_back(make_pair(i, A[j][i]));\n            while(!Aque2[j].empty() && Aque2[j].back().second < A[j][i])\n                Aque2[j].pop_back();\n            Aque2[j].push_back(make_pair(i, A[j][i]));//\u629b\u5f03\u4e0d\u4f18\u51b3\u7b56\uff0c\u4fdd\u8bc1\u7ef4\u62a4\u51faA[j][i-L+1] \uff5e A[j]i]\u4e2d\u7684\u6700\u4f18\u51b3\u7b56\u70b9\n            \n            while(!Bque1.empty() && Bque1.back().second > Aque1[j].front().second)\n                Bque1.pop_back();\n            Bque1.push_back(make_pair(j, Aque1[j].front().second));\n            while(!Bque2.empty() && Bque2.back().second < Aque2[j].front().second)\n                Bque2.pop_back();\n            Bque2.push_back(make_pair(j, Aque2[j].front().second));//\u7ef4\u62a4\u51faAque[j-L+1] \uff5e Aque[j]\u4e4b\u95f4\u7684\u6700\u4f18\u51b3\u7b56\n            \n            if(i >= L && j >= L)//\u82e5\u662f\u53f3\u4e0b\u89d2\u8868\u8fc7\u5c0f\u4e0d\u6210\u6b63\u65b9\u5f62\u5219\u4e0d\u8bb0\u5f55\n                ANS = min(ANS, Bque2.front().second - Bque1.front().second);\n        }\n    }\n    cout << ANS << endl;\n    return 0;\n}\n\n```\n\u601d\u8def\u5e94\u8be5\u662f\u5c5e\u4e8e\u8f83\u5bb9\u6613\u60f3\u5230\u7684\uff0c\u552f\u72ec\u5229\u7528\u4e00\u4e2a\u7ef4\u62a4\u5217\u4e0a\u7684\u5355\u8c03\u961f\u5217\u6765\u7ef4\u62a4\u884c\u961f\u5217\u7684\u6709\u4e00\u4e1d\u5999\u5904\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e25\u683c$O(N*M)$\u4e0d\u8fc7\u56e0\u4e3a\u6211\u6ee5\u7528STL\u548ccin\u6240\u4ee5\u5e38\u6570\u5927\u5230\u98de\u8d77\u6240\u4ee5\u603b\u65f6\u95f4\u5e76\u4e0d\u662f\u5f88\u5feb\u3002OI\u4e4b\u4e50\u4fbf\u662f\u5728\u4e8e\u7ecf\u8fc7\u4e00\u756a\u82e6\u601d\u4e4b\u540e\u60f3\u5230\u6700\u4f18\u89e3\u548c\u591a\u89e3\u5427\u3002\n",
        "postTime": 1553788129,
        "uid": 100514,
        "name": "\u5c0f\u9ed1AWM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u6709\u5907\u4e8e\u521d\u8d5b\uff0c\u597d\u4e45\u6ca1\u53d1\u9898\u89e3\u4e86\u3002\n\u5355\u8c03\u961f\u5217\u662f\u4e2a\u5f88\u795e\u5947\u7684\u4e1c\u897f \u51ed\u4e2a\u4eba\u7406\u89e3 \u628a\u8fd9\u4e2a\u4f53\u7684\u601d\u8def\u8bf4\u4e00\u904d \uff08\u501f\u9274\u4e8e\u9898\u89e3\u5927\u4f6c\uff01\uff09\n\n**\u8fd9\u4e2a\u9898\u7684\u601d\u8def\u5e94\u8be5\u662f\u5bf9\u6bcf\u4e00\u884c\u90fd\u5f00\u4e24\u4e2a\u961f\u5217\uff0c\u4e00\u4e2a\u5b58\u6700\u5927\u503c\uff0c\u4e00\u4e2a\u5b58\u6700\u5c0f\u503c\u3002 \u672c\u4eba\u7684\u4e60\u60ef\u662f\u7528qmax [i][j]\u8868\u793a\u7b2ci\u884c \u4ece\u7b2cj\u5217\u5f00\u59cb \u5f80\u540en\u5217\u7684\u6700\u5927\u503c qmin[i][j]\u5c31\u662f\u5b58\u6700\u5c0f\u503c\u3002\u6700\u540e\u5c06\u6bcf\u4e00\u884c\u91cc\u6bcf\u4e00\u5217\u7684\u6700\u5927\u6700\u5c0f\u503c\u7528\u4e00\u4e2a\u4e8c\u7ef4\u7ed3\u6784\u4f53\u5b58\u8d77\u6765\uff08\u6bd4\u5982\u8bf4\u662frow[i][j]\uff09**\n\n\u4e4b\u540e \u8fd9\u4e2a\u5e94\u8be5\u624d\u662f\u5173\u952e\n**\u5bf9\u4e8e\u6bcf\u4e00\u5217 \u548c\u884c\u4e00\u6837\uff0c\u4e5f\u662f\u5f00\u4e24\u4e2a\u961f\u5217\uff0c\u4e5f\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58\u8d77\u6765\uff08\u6bd4\u5982\u8bf4\u662fcol[i][j]\uff09\u3002\n\u4f46\u662f \u8fd9\u4e2acol[i][j]\u5b58\u7684\u662f\u4ece\u7b2ci\u884c\u7b2cj\u5217\u8fd9\u4e2a\u683c\u5b50\u5f00\u59cb \u5f80\u540en\u5217 \u5f80\u4e0bn\u884c\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002**\n**\u53ef\u80fd\u6709\u90a3\u4e48\u4e00\u70b9\u62bd\u8c61\uff0c\u5176\u5b9e\u5c31\u662f\u7528\u6211\u4eec\u7684row[i][j]\u7ed3\u6784\u4f53\u53bb\u66f4\u65b0col[i][j],\u56e0\u4e3a\u5728\u6bcf\u4e00\u884c\u91cc\u4ece\u67d0\u4e2a\u683c\u5b50\u5f00\u59cb\u5f80\u540en\u5217\u7684\u6700\u5927\u6700\u5c0f\u503c\u5df2\u7ecf\u6c42\u51fa\u6765\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u4e3b\u8981\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u3002**\n\n\u5355\u8c03\u961f\u5217\u91cc\u5b58\u7684\u5e94\u8be5\u662f\u4e0b\u6807\uff08\u6a2a\u5750\u6807\u6216\u7eb5\u5750\u6807\uff09 \uff01\uff01\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\nusing namespace std ;\nconst int maxn = 1005;\nint n,m,k,qmax[maxn],qmin[maxn],a[maxn][maxn];\nstruct ROW {int maxx,minn;} row[maxn][maxn];\nstruct COL {int maxx,minn;} col[maxn][maxn];\nint main() {\n\tscanf(\"%d%d%d\",&n,&m,&k) ;\n\tfor(int i = 1; i <= n ;++i)\n\t  for(int j = 1;j <= m ;++j) scanf(\"%d\",&a[i][j]) ; \n\tfor(int h = 1;h <= n ;++h) {\n\t\tmemset(qmax,0,sizeof(qmax)) ;\n\t\tmemset(qmin,0,sizeof(qmin)) ;\n\t\tint headmax = 1,headmin = 1,tailmax = 0,tailmin = 0;\n\t\tfor(int i = 1;i <= m ;++i) {\n\t\t\twhile(headmax <= tailmax && a[h][qmax[tailmax]] <= a[h][i]) tailmax-- ;\n\t\t\tqmax[++tailmax] = i ;\n\t\t\twhile(headmin <= tailmin && a[h][qmin[tailmin]] >= a[h][i]) tailmin-- ;\n\t\t\tqmin[++tailmin] = i ;\n\t\t\twhile(qmax[headmax] < i - k + 1) headmax++ ;\n\t\t    while(qmin[headmin] < i - k + 1) headmin++ ;\n\t\t    if(i >= k) \n\t\t        row[h][i - k + 1].maxx = a[h][qmax[headmax]] ,\n\t\t        row[h][i - k + 1].minn = a[h][qmin[headmin]] ;\n\t\t}\n    }\n\tfor(int c = 1;c <= m - k + 1; ++c) {\n\t\tmemset(qmax,0,sizeof(qmax)) ;\n\t\tmemset(qmin,0,sizeof(qmin)) ;\t\t\n\t    int headmax = 1,headmin = 1,tailmax = 0,tailmin = 0;\n\t    for(int i = 1;i <= n ;++i) {\n\t    \twhile(headmax <= tailmax && row[qmax[tailmax]][c].maxx <= row[i][c].maxx) tailmax-- ;\n\t    \tqmax[++tailmax] = i;\n\t    \twhile(headmin <= tailmin && row[qmin[tailmin]][c].minn >= row[i][c].minn) tailmin-- ;\n\t    \tqmin[++tailmin] = i;\n\t    \twhile(qmax[headmax] < i - k + 1) headmax++ ;\n\t    \twhile(qmin[headmin] < i - k + 1) headmin++ ;\n\t    \tif(i >= k)\n\t    \t  col[i - k + 1][c].maxx = row[qmax[headmax]][c].maxx ,\n\t    \t  col[i - k + 1][c].minn = row[qmin[headmin]][c].minn ;\n\t\t}\n\t}\n\tint ans = 1e9;\n\tfor(int i = 1;i <= n - k + 1;++i)\n\t  for(int j = 1;j <= m - k + 1;++j)\n\t    ans = min(ans,col[i][j].maxx - col[i][j].minn) ;\n\tprintf(\"%d\",ans) ;\n\treturn 0;\n}\n```",
        "postTime": 1539475480,
        "uid": 88340,
        "name": "Tiffany_Tendering",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u6709\u70b9\u5f31\uff0c\u5c45\u7136\u8bc4\u6d4b\u901f\u5ea6\u6ca1\u8dd1\u8fc761\u7ea7\u5b66\u5f1f\n\n\t\u601d\u8def\uff1a\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u6bcf\u4e00\u884c\u6bcf\u8fde\u7eed\u7684n\u4e2a\u6570\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\n    \n    \t\u4e4b\u540e\u518d\u8dd1\u4e00\u8fb9\u5355\u8c03\u961f\u5217\uff0c\u4ece\u7b2c\u4e00\u884c\u524dn\u4e2a\u5f00\u59cb\uff0c\u4ece\u4e0a\u5411\u4e0b\uff0c\u4ece\u5de6\u5411\u53f3\u8dd1\u5355\u8c03\u961f\u5217\u5373\u53ef\n\n\n```\n#include<bits/stdc++.h>\n#define N 2010050\nusing namespace std;\n\nvoid in(int &x){\n    register char c=getchar();x=0;int f=1;\n    while(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n    while(isdigit(c)){x=x*10+c-'0';c=getchar();}\n    x*=f;\n}\n\nint a,b,n,ma[1005][1005],mx[1005][1005],mi[1005][1005];\nint qa[N],qb[N],ans;//dandiaoduilie\nint main()\n{\n\tin(a);in(b);in(n);\n\tfor(int i=1;i<=a;i++)\n\t\tfor(int j=1;j<=b;j++)\n\t\t\tin(ma[i][j]);\n\tfor(int i=1;i<=a;i++){\n\t\tint head=1,tail=0,hhead=1,ttail=0;\n\t\tfor(int j=1;j<=b;j++){\n\t\t\twhile(head<=tail&&ma[i][qa[tail]]<=ma[i][j]) --tail;//max \u5355\u8c03\u9012\u51cf\u5e8f\u5217 \n\t\t\tqa[++tail]=j;\n\t\t\twhile(qa[head]<=j-n) ++head;\n\t\t\t\n\t\t\twhile(hhead<=ttail&&ma[i][qb[ttail]]>=ma[i][j]) --ttail;//min \u5355\u8c03\u9012\u589e\u5e8f\u5217 \n\t\t\tqb[++ttail]=j;\n\t\t\twhile(qb[hhead]<=j-n) ++hhead;\n\t\t\t\n\t\t\tif(j>=n) mx[i][j]=ma[i][qa[head]],mi[i][j]=ma[i][qb[hhead]];\n\t\t}\n\t}ans=0x7fffffff;\n\t/*\n\tputs(\"\");\n\tfor(int i=1;i<=a;i++){\n\t\tfor(int j=1;j<=b;j++){\n\t\t\tcout<<mx[i][j]<<\" \";\n\t\t}puts(\"\");\n\t}puts(\"\");\n\tfor(int i=1;i<=a;i++){\n\t\tfor(int j=1;j<=b;j++){\n\t\t\tcout<<mi[i][j]<<\" \";\n\t\t}puts(\"\");\n\t}\n\t*/\n\tfor(int j=n;j<=b;j++){\n\t\tint head=1,tail=0,hhead=1,ttail=0;\n\t\tfor(int i=1;i<=a;i++){\n\t\t\twhile(head<=tail&&mx[qa[tail]][j]<=mx[i][j]) --tail;\n\t\t\tqa[++tail]=i;\n\t\t\twhile(qa[head]<=i-n) ++head;\n\t\t\t\n\t\t\twhile(hhead<=ttail&&mi[qb[ttail]][j]>=mi[i][j]) --ttail;\n\t\t\tqb[++ttail]=i;\n\t\t\twhile(qb[hhead]<=i-n) ++hhead;\n\t\t\tif(i>=n) ans=min(ans,mx[qa[head]][j]-mi[qb[hhead]][j]);\n\t\t}\n\t}printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1533903974,
        "uid": 60939,
        "name": "\u6e05\u98ce\u6211\u5df2\u901d",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\u62a5\u544a P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u8ddf\u7740\u6807\u7b7e\u7684\u5355\u8c03\u961f\u5217\u8fdb\u6765\uff0c\u7ed3\u679c\u770b\u5b8c\u9898\u76ee\u4e0d\u60f3\u5199\u5355\u8c03\u961f\u5217 :D \n\n\u9996\u5148\uff0c\u8fd9\u9898\u53ef\u4ee5\u5199st\u8868\u3002\u7136\u800c\u8fd9\u4e2ast\u8868\u4e8c\u7ef4\u7684\uff0c\u4e8e\u662f\u6211\u5c31\u60f3\uff1a\u6bcf\u884c\u90fd\u5f00\u4e00\u4e2ast\u8868\u4e0d\u5c31\u53d8\u6210\u4e00\u7ef4\u4e86\u5417XD\u3002\u5f00\u59cb\u62c5\u5fc3MLE\uff0c\u7ed3\u679c\u662fTTTTTT\u2026\u2026 QAQ\n\n\u522b\u65e0\u4ed6\u6cd5\uff0c\u6211\u53ea\u597d\u53c8yy\u4e86\u4e00\u4e2a\u4e8c\u7ef4st\u8868=v=\n\n\u4ee5\u6700\u5927\u503c\u4e3a\u4f8b,f1[i][j][k]\u8868\u793a\u4ece\u5de6\u4e0a\u89d2\u4e3a\uff08i,j\uff09\u53f3\u4e0b\u89d2\u4e3a\uff08i+2^k,j+2^k\uff09\u7684\u77e9\u9635\u4e2d\u5143\u7d20\u7684\u6700\u5927\u503c\u3002\u5c06\u8fd9\u4e2a\u77e9\u9635\u62c6\u5206\u6210\u56db\u5757\uff0c\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\uff1a\n\nf1[i][j][k]=max{f1[i][j][k-1],f1[i+2^(k-1)][j][k-1],f1[i][j+2^(k-1)][k-1],f1[i+2^(k-1)][j+2^(k-1)][k-1]};\n\n\u6700\u5c0f\u503c\u4e0d\u5728\u8d58\u8ff0\uff0c\u67e5\u8be2\u8be6\u89c1\u4ee3\u7801\uff0c\u4e00\u7ef4st\u4e0d\u4f1a\u7684\u53f3\u8f6c\u767e\u5ea6XD\n\ncode(\u6709\u5f69\u86cbXD)\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint a,b,n;\nint f1[1010][1010][15],f2[1010][1010][15],log[1010];\ninline int MAX(int x1,int x2,int x3,int x4){\n\treturn max(x1,max(x2,max(x3,x4)));\n}\ninline int MIN(int x1,int x2,int x3,int x4){\n\treturn min(x1,min(x2,min(x3,x4)));\n}\nvoid make_st(){\n\tint N=min(a,b);\n\tfor (int k=1;k<=log[N];k++)\n\t\tfor (int i=1;i+(1<<k)-1<=a;i++)\n\t\t\tfor (int j=1;j+(1<<k)-1<=b;j++){\n\t\t\t\tf1[i][j][k]=MAX(f1[i][j][k-1],f1[i][j+(1<<k-1)][k-1],f1[i+(1<<k-1)][j][k-1],f1[i+(1<<k-1)][j+(1<<k-1)][k-1]);\n\t\t\t\tf2[i][j][k]=MIN(f2[i][j][k-1],f2[i][j+(1<<k-1)][k-1],f2[i+(1<<k-1)][j][k-1],f2[i+(1<<k-1)][j+(1<<k-1)][k-1]);\n\t\t\t}\n\treturn;\n}\nint qmax(int x,int y,int x1,int y1){//\u67e5\u8be2\u6700\u5927\u503c\n\tint k=log[n];\n\tint t1=f1[x][y][k],\n\t\tt2=f1[x][y1-(1<<k)+1][k],\n\t\tt3=f1[x1-(1<<k)+1][y][k],\n\t\tt4=f1[x1-(1<<k)+1][y1-(1<<k)+1][k];\n\treturn MAX(t1,t2,t3,t4);\n}\nint qmin(int x,int y,int x1,int y1){//\u67e5\u8be2\u6700\u5c0f\u503c\n\tint k=log[n];\n\tint t1=f2[x][y][k],\n\t\tt2=f2[x][y1-(1<<k)+1][k],\n\t\tt3=f2[x1-(1<<k)+1][y][k],\n\t\tt4=f2[x1-(1<<k)+1][y1-(1<<k)+1][k];\n\treturn MIN(t1,t2,t3,t4);\n}\nint main(){\n\tlog[0]=-1;\n\tfor (int i=1;i<=1000;i++)\tlog[i]=log[i>>1]+1;\n\tscanf(\"%d%d%d\",&a,&b,&n);\n\tfor (int i=1;i<=a;i++)\n\t\tfor (int j=1;j<=b;j++){\n\t\t\tint in;\n\t\t\tscanf(\"%d\",&in);\n\t\t\tf1[i][j][0]=f2[i][j][0]=in;\n\t\t}\n\tmake_st();\n\tint ans=1e9+7;\n\tfor (int i=1;i+n-1<=a;i++)\n\t\tfor (int j=1;j+n-1<=b;j++)\n\t\t\tans=min(ans,qmax(i,j,i+n-1,j+n-1)-qmin(i,j,i+n-1,j+n-1));\n\tcout<<ans<<endl;\n    cout<<\"\u9632\u590d\u5236\u9ecf\u8d34\u8bed\u53e5\uff1a\"<<endl;\n    cout<<\"-Like you,Linkiki.   \u2014\u2014yzcc\"<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1533786088,
        "uid": 17540,
        "name": "yangzechenc",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "//\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u7684\u535a\u5ba2QvQ\uff1a[\u4f20\u9001\u95e8=\uffe3\u03c9\uffe3=](http://www.k-xzy.xyz/archives/4113)\n# \u9898\u89e3\n\u542c\u8bf4\u6b63\u89e3\u662f\u52a8\u6001\u89c4\u5212QvQ\uff0c\u4f46\u6211\u7684\u662f\u66b4\u529b\u5806+\u54c8\u5e0c\u8868\u3002\u3002\u3002\n\n\u5bb3\u6015.jpg\n\n\u4f46\u662f\u6211\u6c89\u8ff7\u66b4\u529b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e8e\u662f\u5148\u5199\u4e86\u4e2akd-tree\u7248\u7684\uff0c\u7136\u540e\u6beb\u65e0\u7591\u95ee\u5730TLE\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u4f1aT\u4e0d\u7528\u8bd5\u4e86\uff09\n```cpp\n#include <bits/stdc++.h>\n\n#define DS (2)\n#define NS (1005)\n#define INF (1000000005)\n#define FIR first\n#define SEC second\n\nusing namespace std;\n\ntypedef pair<int, int> PII;\n\n\ntemplate <typename _Tp> inline void IN(_Tp& dig)\n{\n\tchar c; bool flag = 0; dig = 0;\n\twhile (c = getchar(), !isdigit(c));\n\twhile (isdigit(c)) dig = dig * 10 + c - '0', c = getchar();\n}\n\nint A, B, n, root, sz, D, ans = INT_MAX;\n\nstruct N\n{\n\tint d[DS], mnd, mxd, data, mn[DS], mx[DS], l, r;\n\tint& operator [] (const int a){return d[a];}\n}arr[NS * NS], e[NS * NS];\n\nbool cmp(N a, N b){return a[D] < b[D];}\n\nvoid pup(int a)\n{\n\tint l = e[a].l, r = e[a].r;\n\tif (l)\n\t{\n\t\te[a].mnd = min(e[a].mnd, e[l].mnd);\n\t\te[a].mxd = max(e[a].mxd, e[l].mxd);\n\t}\n\tif (r)\n\t{\n\t\te[a].mnd = min(e[a].mnd, e[r].mnd);\n\t\te[a].mxd = max(e[a].mxd, e[r].mxd);\n\t}\n\tfor (int i = 0; i < DS; i += 1)\n\t{\n\t\te[a].mn[i] = e[a].mx[i] = e[a][i];\n\t\tif (l)\n\t\t{\n\t\t\te[a].mn[i] = min(e[a].mn[i], e[l].mn[i]);\n\t\t\te[a].mx[i] = max(e[a].mx[i], e[l].mx[i]);\n\t\t}\n\t\tif (r)\n\t\t{\n\t\t\te[a].mn[i] = min(e[a].mn[i], e[r].mn[i]);\n\t\t\te[a].mx[i] = max(e[a].mx[i], e[r].mx[i]);\n\t\t}\n\t}\n}\n\nint Build(int l, int r, int d = 0)\n{\n\tif (l > r) return 0;\n\tD = d;\n\tint mid = ((l + r) >> 1), a = ++sz;\n\tnth_element(arr + l, arr + mid, arr + r + 1, cmp);\n\te[a] = arr[mid];\n\te[a].l = Build(l, mid - 1, d ^ 1);\n\te[a].r = Build(mid + 1, r, d ^ 1);\n\tpup(a); return a;\n}\n\nbool jud_in(int x1, int y1, int x2, int y2, int a)\n{\n\treturn x1 <= e[a].mn[0] && y1 <= e[a].mn[1] \\\n\t\t&& x2 >= e[a].mx[0] && y2 >= e[a].mx[1];\n}\n\nbool jud_out(int x1, int y1, int x2, int y2, int a)\n{\n\treturn x1 > e[a].mx[0] || y1 > e[a].mx[1] \\\n\t || x2 < e[a].mn[0] || y2 < e[a].mn[1];\n}\n\nbool jud_point(int x1, int y1, int x2, int y2, int a)\n{\n\treturn x1 <= e[a][0] && y1 <= e[a][1] \\\n\t\t&& x2 >= e[a][0] && y2 >= e[a][1];\n}\n\nvoid jud_res(PII& res, PII a)\n{\n\tres.FIR = min(res.FIR, a.FIR), res.SEC = max(res.SEC, a.SEC);\n}\n\nPII query(int x1, int y1, int x2, int y2, int a = root)\n{\n\tif (!a) return PII(INF, -INF);\n\tif (jud_in(x1, y1, x2, y2, a)) return PII(e[a].mnd, e[a].mxd);\n\tif (jud_out(x1, y1, x2, y2, a)) return PII(INF, -INF);\n\tPII res(INF, -INF);\n\tif (jud_point(x1, y1, x2, y2, a))\n\t\tjud_res(res, PII(e[a].data, e[a].data));\n\tjud_res(res, query(x1, y1, x2, y2, e[a].l));\n\tjud_res(res, query(x1, y1, x2, y2, e[a].r));\n\treturn res;\n}\n\nint main (int argc, char const* argv[])\n{\n\tIN(A), IN(B), IN(n);\n\tfor (int i = 1, k, tot = 1; i <= A; i += 1)\n\t\tfor (int j = 1; j <= B; j += 1)\n\t\t\tIN(k), arr[tot++] = (N){i, j, k, k, k};\n\troot = Build(1, A * B);\n\tfor (int i = 1; i <= A - n + 1; i += 1)\n\t\tfor (int j = 1; j <= B - n + 1; j += 1)\n\t\t{\n\t\t\tPII tmp = query(i, j, i + n - 1, j + n - 1);\n\t\t\tans = min(ans, tmp.SEC - tmp.FIR);\n\t\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n\n\u4e0d\u7518\u5fc3\u7684\u6211\u7ee7\u7eed\u7814\u7a76\u66b4\u529b\u65b9\u6cd5\u3002\n\n\u4e8e\u662f\u60f3\u5230\u4e86\u8fd9\u4e2a\u601d\u8def\uff1a\n\n\u9996\u5148\u8bbe$mx[i,j]$\u8868\u793a\u7b2c$i$\u884c\u7684\u533a\u95f4$[j,j+n-1]$\u5185\u7684\u6700\u5927\u503c\u3002\n\n\u800c$mn[i,j]$\u8868\u793a\u7b2c$i$\u884c\u7684\u533a\u95f4$[j,j+n-1]$\u5185\u7684\u6700\u5c0f\u503c\u3002\n\n\u5373\uff1a\n$$mx[i,j]=MAX(a[i,k]|k\\in [j,j+n-1])$$\n$$mn[i,j]=MIN(a[i,k]|k\\in [j,j+n-1])$$\n\n\u600e\u4e48\u6c42$mx,mn$\u5462\uff1f\n\n\u4e0d\u96be\u60f3\u5230\u7528\u4e00\u9897\u5e73\u8861\u6811\u7ef4\u62a4\n\n\u9996\u5148\u679a\u4e3e\u884c\u6570$i$\uff0c\u7136\u540e\u628a\u7b2c$i$\u884c\u7684\u533a\u95f4$[1,n]$\u5185\u7684\u5143\u7d20\u4e22\u5230\u5e73\u8861\u6811\u91cc\uff0c\u8fd9\u6837$mx[i,1]$\u5c31\u662f\u5e73\u8861\u6811\u4e2d\u6700\u5927\u7684\u5143\u7d20\uff0c$mn[i,1]$\u5c31\u662f\u5e73\u8861\u6811\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\u3002\n\n\u63a5\u7740\u679a\u4e3e$j$\uff0c\u6bcf\u6b21\u5c06\u7b2c$i$\u884c\u7b2c$j-1$\u4e2a\u5143\u7d20\u4ece\u5e73\u8861\u6811\u4e2d\u5220\u9664\uff0c\u518d\u5411\u5e73\u8861\u6811\u4e2d\u6dfb\u52a0\u7b2c$i$\u884c\u5730$j+n-1$\u4e2a\u5143\u7d20\u3002\u7136\u540e\u4f9d\u7136\u662f\u5e73\u8861\u6811\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\u662f$mn[i,j]$\uff0c\u6700\u5927\u7684\u662f$mx[i,j]$\n\n\u6c42\u51fa\u4e86$mn,mx$\u53c8\u6709\u4ec0\u4e48\u7528\u5462\uff1f\n\n\u6211\u4eec\u518d\u8bbe$min[i,j]$\u4e3a\u77e9\u5f62$(i,j)(i+n,j+n)$\uff08\u8fd9\u91cc\u7ed9\u51fa\u7684\u4e24\u4e2a\u5750\u6807\u8868\u793a\u77e9\u5f62\u7684\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2\uff09\u5185\u7684\u6700\u5c0f\u503c\uff0c$max[i,j]$\u8868\u793a\u77e9\u5f62$(i,j)(i+n,j+n)$\u5185\u7684\u6700\u5927\u503c\n\n\u5f88\u660e\u663e\uff1a\n$$max[i,j]=MAX(mx[k,j]|k\\in [i,i+n-1])$$\n$$min[i,j]=MIN(mn[k,j]|k\\in [i,i+n-1])$$\n\n\u6240\u4ee5\u6c42\u6cd5\u548c\u6c42$mx,mn$\u662f\u76f8\u540c\u7684\uff01\n\n\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u5373\u53ef\n\n\u590d\u6742\u5ea6\u662f$O(ABlog_2n)$\u7684\u3002\n\n\u4f46\u662f\u6211\uff0c\uff0c\uff0c\u5f88\u61d2\uff0c\u5c31\u4e0d\u60f3\u624b\u6253\u5e73\u8861\u6811\n\n\u7136\u540e\u53d1\u73b0multiset\u5f88\u6162\uff08map\u4e5f\u5f88\u6162\uff09\uff0c\u56e0\u4e3a\u5b83\u63d2\u5165\u3001\u5220\u9664\u3001\u53d6\u6700\u5927\u6700\u5c0f\u90fd\u662f\u5f88\u6162\u7684\u3002\u6700\u5927\u7684\u70b9\u5f00O2\u8fd8\u89813s+\n\n\u6240\u4ee5\u6211\u4eec\u7528\u5806\u6765\u66ff\u6362\u5b83\n\n\u641e\u4e24\u4e2a\u5806\uff0c\u4e00\u4e2a\u5927\u6839\u5806\u4e00\u4e2a\u5c0f\u6839\u5806\u3002\n\n\u81f3\u4e8e\u5220\u9664\uff0c\u5c31\u641e\u4e24\u4e2a\u54c8\u7cfb\u8868\u5206\u522b\u5bf9\u5e94\u4e24\u4e2a\u5806\uff0c\u5206\u522b\u50a8\u5b58\u67d0\u4e2a\u6570\u5b57\u88ab\u5220\u9664\u4e86\u591a\u5c11\u6b21\u3002\u5982\u679c\u67d0\u6b21\u53d6\u51fa\u7684\u5806\u9876\uff0c\u53d1\u73b0\u5b83\u88ab\u5220\u9664\u6b21\u6570\u5927\u4e8e0,\u5c31\u76f4\u63a5\u628a\u5b83\u5f39\u6389\uff0c\u5e76\u4e14\u54c8\u7cfb\u8868\u4e2d\u5b83\u5bf9\u5e94\u7684\u6620\u5c04\u503c\u51cf\u4e00\u3002\n\n\u5c31\u8fd9\u6837\u53ef\u4ee5\u5feb\u5f88\u591a\u3002\n\n\u5806\u6211\u7528\u7684\u662fstl\u7684\u4f18\u5148\u961f\u5217\uff0c\u54c8\u5e0c\u8868\u7528\u7684\u662fpbds\u7684gp_hash_table\u3002\n\n\u6211\u8bd5\u4e86\u8bd5\u53d1\u73b0pbds\u91cc\u4e5f\u6709\u4f18\u5148\u961f\u5217\uff0c\u8dd1\u7684\u5feb\u4e00\u4e9b\u3002\u4f46\u662f\uff0c\uff0c\uff0c\u6ca1\u6709\u672c\u8d28\u4e0a\u5feb\u5f88\u591a\uff0c\u6240\u4ee5\u5c31\u61d2\u5f97\u6539\u4e86\u3002\u3002\u3002\n\nBZOJ\u4e0a\u53ef\u4ee5\u76f4\u63a5\u8fc7\uff0c6s\n\nluogu\u4e0a\u7684\u8bdd\u65f6\u95f4\u4e25\u683c\u4e9b\uff0c\u9700\u8981\u5f00O2\u624d\u80fd\u8fc7\n\n\u8c01\u53eb\u6211\u5199\u7684\u66b4\u529b\u5462QvQ\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n\n#define NS (1005)\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntemplate <typename _Tp> inline void IN(_Tp& dig)\n{\n\tchar c; bool flag = 0; dig = 0;\n\twhile (c = getchar(), !isdigit(c));\n\twhile (isdigit(c)) dig = dig * 10 + c - '0', c = getchar();\n}\n\nint A, B, n, mp[NS][NS], ans = INT_MAX, mx[NS][NS], mn[NS][NS];\n\ncc_hash_table<int,int> hmx, hmn;\n\npriority_queue<int> qmx;\n\npriority_queue<int, vector<int>, greater<int> > qmn;\n\nint main (int argc, char const* argv[])\n{\n\tIN(A), IN(B), IN(n);\n\tfor (int i = 1; i <= A; i += 1)\n\t\tfor (int j = 1; j <= B; j += 1)\n\t\t\tIN(mp[i][j]);\n\tfor (int i = 1; i <= A; i += 1)\n\t{\n\t\twhile (!qmx.empty()) qmx.pop();\n\t\twhile (!qmn.empty()) qmn.pop();\n\t\thmx.clear(), hmn.clear();\n\t\tfor (int j = 1; j <= n; j += 1) qmx.push(mp[i][j]), qmn.push(mp[i][j]);\n\t\tfor (int j = 1; j + n - 1 <= B; j += 1)\n\t\t{\n\t\t\twhile (hmx[qmx.top()] > 0) hmx[qmx.top()]--, qmx.pop();\n\t\t\twhile (hmn[qmn.top()] > 0) hmn[qmn.top()]--, qmn.pop();\n\t\t\tmx[i][j] = qmx.top(), mn[i][j] = qmn.top();\n\t\t\tqmx.push(mp[i][j + n]), hmx[mp[i][j]]++;\n\t\t\tqmn.push(mp[i][j + n]), hmn[mp[i][j]]++;\n\t\t}\n\t}\n\tfor (int i = 1; i + n - 1 <= B; i += 1)\n\t{\n\t\twhile (!qmx.empty()) qmx.pop();\n\t\twhile (!qmn.empty()) qmn.pop();\n\t\thmx.clear(), hmn.clear();\n\t\tfor (int j = 1; j <= n; j += 1) qmx.push(mx[j][i]), qmn.push(mn[j][i]);\n\t\tfor (int j = 1; j + n - 1 <= A; j += 1)\n\t\t{\n\t\t\twhile (hmx[qmx.top()] > 0) hmx[qmx.top()]--, qmx.pop();\n\t\t\twhile (hmn[qmn.top()] > 0) hmn[qmn.top()]--, qmn.pop();\n\t\t\tans = min(ans, qmx.top() - qmn.top());\n\t\t\tqmx.push(mx[j + n][i]), hmx[mx[j][i]]++;\n\t\t\tqmn.push(mn[j + n][i]), hmn[mn[j][i]]++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n\n# Update\n\u7a81\u7136\u53d1\u73b0\u81ea\u5df1\u5236\u6756\u4e86\n\n\u660e\u660e\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u66ff\u6362\u6389\u4f18\u5148\u961f\u5217\u7684\n\nQvQ\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f$O(AB)$\u7684\u4e86\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n\n#define NS (1005)\n\nusing namespace std;\n\ntemplate <typename _Tp> inline void IN(_Tp& dig)\n{\n\tchar c; bool flag = 0; dig = 0;\n\twhile (c = getchar(), !isdigit(c));\n\twhile (isdigit(c)) dig = dig * 10 + c - '0', c = getchar();\n}\n\nint A, B, n, mp[NS][NS], ans = INT_MAX, mx[NS][NS], mn[NS][NS];\n\nstruct N\n{\n\tint d, t;\n\tbool operator < (N a) const {return d < a.d;}\n\tbool operator > (N a) const {return d > a.d;}\n};\n\ntemplate <typename _Tp, typename _Cmp = less<_Tp> > struct que\n{\n\t_Tp d[NS]; int head, tail; _Cmp cmp;\n\tvoid init(){head = tail = 1;}\n\tvoid push(_Tp a)\n\t{\n\t\twhile (head < tail && cmp(a, d[tail - 1])) tail--;\n\t\td[tail++] = a;\n\t}\n\t_Tp top(){return d[head];}\n\tvoid pop(){head++;}\n};\n\nque <N, greater<N> > qmx;\nque <N, less<N> > qmn;\n\nint main (int argc, char const* argv[])\n{\n\tIN(A), IN(B), IN(n);\n\tfor (int i = 1; i <= A; i += 1)\n\t\tfor (int j = 1; j <= B; j += 1)\n\t\t\tIN(mp[i][j]);\n\tfor (int i = 1; i <= A; i += 1)\n\t{\n\t\tqmx.init(), qmn.init();\n\t\tfor (int j = 1; j <= n; j += 1)\n\t\t\tqmx.push((N){mp[i][j], j}), qmn.push((N){mp[i][j], j});\n\t\tfor (int j = 1; j + n -1 <= B; j += 1)\n\t\t{\n\t\t\twhile (qmx.top().t < j) qmx.pop();\n\t\t\twhile (qmn.top().t < j) qmn.pop();\n\t\t\tmx[i][j] = qmx.top().d, mn[i][j] = qmn.top().d;\n\t\t\tqmx.push((N){mp[i][j + n], j + n});\n\t\t\tqmn.push((N){mp[i][j + n], j + n});\n\t\t}\n\t}\n\tfor (int i = 1; i + n - 1 <= B; i += 1)\n\t{\n\t\tqmx.init(), qmn.init();\n\t\tfor (int j = 1; j <= n; j += 1)\n\t\t\tqmx.push((N){mx[j][i], j}), qmn.push((N){mn[j][i], j});\n\t\tfor (int j = 1; j + n - 1 <= A; j += 1)\n\t\t{\n\t\t\twhile (qmx.top().t < j) qmx.pop();\n\t\t\twhile (qmn.top().t < j) qmn.pop();\n\t\t\tans = min(ans, qmx.top().d - qmn.top().d);\n\t\t\tqmx.push((N){mx[j + n][i], j + n});\n\t\t\tqmn.push((N){mn[j + n][i], j + n});\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1518065983,
        "uid": 22388,
        "name": "XZYQvQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u8ba9\u6211\u4eec\u4ee4Min\\[i\\]\\[j\\]\\[k\\]\u4e3a\u4ee5(i,j)\u4e3a\u5de6\u4e0a\u89d2\u7684\u8fb9\u957f\u4e3a$2^k$\u7684\u6b63\u65b9\u5f62\u7684\u6700\u5c0f\u503c\uff0cMax\\[i\\]\\[j\\]\\[k\\]\u540c\u7406\u3002\n\n\u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\u663e\u7136\u7684\u4e8c\u7ef4ST\u8868\u4e86\u3002\u3002\uff08\u9003\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\ninline char getc(void) { \n\tstatic char buf[1 << 18], *fs, *ft;\n\treturn (fs == ft && (ft = (fs = buf) + fread(buf, 1, 1 << 18, stdin)), fs == ft) ? EOF : *fs++;\n}\n\ninline int read(void) { \n\tchar tmp = getc();\n\tint res = 0;\n\tfor(; !isdigit(tmp); tmp = getc());\n\tfor(; isdigit(tmp); tmp = getc())\n\t\tres = ((res + (res << 2)) << 1) + (tmp ^ 0x30);\n\treturn res;\n}\n\nconst int MAXN = 1010, INF = 0x7fffffff;\n\nint Work(int x, int y);\n\nint Min[MAXN][MAXN][11], Max[MAXN][MAXN][11];\nint N, M, K, L, P;\n\nint main() { \n\tmemset(Min, 0x3f, sizeof(Min));\n\tmemset(Max, 0x00, sizeof(Max));\n\tN = read(), M = read(), K = read();\n\tfor(int i = 1; i <= N; ++i)\n\t\tfor(int j = 1; j <= M; ++j)\n\t\t\tMin[i][j][0] = Max[i][j][0] = read();\n\tL = log2(min(N, M)), P = log2(K);\n\tfor(int k = 1; k <= L; ++k) { \n\t\tint x = 1 << (k - 1);\n\t\tfor(int i = 1; i <= N - x; ++i)\n\t\t\tfor(int j = 1; j <= M - x; ++j) { \n\t\t\t\tMin[i][j][k] = min( min(Min[i][j][k-1], Min[i+x][j+x][k-1]), min(Min[i+x][j][k-1], Min[i][j+x][k-1]));\n\t\t\t\tMax[i][j][k] = max( max(Max[i][j][k-1], Max[i+x][j+x][k-1]), max(Max[i+x][j][k-1], Max[i][j+x][k-1]));\n\t\t\t}\n\t}\n\tint ans = INF;\n\tfor(int i = 1; i <= N - K + 1; ++i)\n\t\tfor(int j = 1; j <= M - K + 1; ++j) { \n\t\t\tans = min(ans, Work(i, j));\n\t\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n\nint Work(int x, int y) { \n\tint x1 = x + K - 1, y1 = y + K - 1;\n\tint mi = min(\n\t\tmin(Min[x][y][P], Min[x1-(1<<P)+1][y1-(1<<P)+1][P]),\n\t\tmin(Min[x1-(1<<P)+1][y][P], Min[x][y1-(1<<P)+1][P]));\n\tint mx = max(\n\t\tmax(Max[x][y][P], Max[x1-(1<<P)+1][y1-(1<<P)+1][P]),\n\t\tmax(Max[x1-(1<<P)+1][y][P], Max[x][y1-(1<<P)+1][P]));\n\treturn mx - mi;\n}\n```\n\n",
        "postTime": 1517727173,
        "uid": 24932,
        "name": "wanzzhehe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u5176\u5b9e\u5c31\u662f\u4e00\u9053\u7528ST\u8868\u89e3RMQ\u95ee\u9898\u7684\u6a21\u677f\u3002\n\n\u5bf9\u6bcf\u4e00\u884c\u90fd\u6c42\u89e3\u4e00\u6b21RMQ\u5b58\u5728\u4e09\u4f4d\u6570\u7ec4a[i][j][k]\u4e2d\uff0c\u5176\u4e2da[i]\u8868\u793a\u7b2ci\u884c\u7684ST\u8868\u3002\n\n\u7136\u540e\u6211\u4eec\u679a\u4e3e\u8d77\u59cb\u5217j,\u6211\u4eec\u628a\u6bcf\u4e00\u884cj~j+n-1\u7684\u6700\u5927\u6700\u5c0f\u503c\u90fd\u5b58\u8d77\u6765\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u8fd9a\u4e2a\u6570\u505a\u4e00\u6b21RMQ\uff0c\u63a5\u7740\u679a\u4e3e\u8d77\u59cb\u884ci\uff0c\u5229\u7528\u521a\u624d\u7684ST\u8868\u5c31\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(N^2\\*log2(n))\u3002\n\n\u9644\u4e0aST\u8868\u7684\u89e3\u6cd5\uff1af[i][j]\u8868\u793a\u7b2ci\u4e2a\u6570\u5f00\u59cb\uff08\u5305\u62ec\u7b2ci\u4e2a\u6570\uff092^j\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\uff08\u6700\u5c0f\u503c\uff09\u3002\n\n\u7136\u540e\u7528\u52a8\u6001\u89c4\u5212\u7684\u65b9\u6cd5\u6c42\u51fa\u6bcf\u4e00\u4e2af[i][j]\uff0c\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\nf[i][j]=max(min)(f[i][j-1],f[i+(1<<(j-1))][j-1]))\n\n\u6c42[x,y]\u533a\u95f4\u7684\u6700\u5927\u503c\uff08\u6700\u5c0f\u503c\uff09\u7684\u65f6\u5019\uff0c\u76f4\u63a5max(f[x][k],f[y-k+1][k])(k=ceil(log(y-x+1)/log(2)))\n\n\u5f53\u7136\u4e86pascal\u8dd1\u7684\u6bd4c++\u5feb\uff0cPascal\u9009\u624b\u53ef\u4ee5\u76f4\u63a5\u7528\u8fd9\u4e2a\u65b9\u6cd5AC\uff0cc++\u8fd8\u8981\u4f18\u5316\u4e00\u4e0b\u3002\n\n\u6ce8\u610f\u5230n\u53ea\u6709100,\u6211\u4eec\u5728\u6c42ST\u8868\u7684\u65f6\u5019\u4e0d\u7528\u8986\u76d6\u5230\u6700\u540e\uff0c\u53ea\u8986\u76d6\u5230n\u5c31\u591f\u4e86\u3002\n\n\u8fd8\u6709\u53d1\u73b0\u6bcf\u6b21\u6c42log\u51fd\u6570\u7684\u65f6\u5019\u51fa\u73b0\u4e86\u5f88\u591a\u6b21\u91cd\u590d\uff0c\u6240\u4ee5\u5148\u9884\u5904\u7406\u51fa\u6765\uff0c\u7136\u540e\u76f4\u63a5\u8c03\u7528\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5176\u5b9e\u5462\uff0cc++\u52a0\u4e86\u8fd9\u4e24\u4e2a\u4f18\u5316\u8fd8\u662f\u4f1aTLE\uff08\u7b11\u54ed\uff09\uff0c\u5927\u725b\u5206\u7ad9\u6bd4\u666e\u901a\u7684\u6d1b\u8c37\u5feb\uff0c\u6211\u5361\u4e86\u56db\u6b21\u624d\u5361\u8fc7\u3002\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n    while (ch<='9'&&ch>='0'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nusing namespace std;\nint a[1001][1001][11],b[1001][1001][11],c[1001][11],d[1001][11],s[1001][1001],two[11];\ndouble xxx;\nint fd1(int o,int p,int q)\n{\n    int yu=(int)(log(q-p+1)/xxx);\n    return max(a[o][p][yu],a[o][q-two[yu]+1][yu]);\n}\nint fd2(int o,int p,int q)\n{\n    int yu=(int)(log(q-p+1)/xxx);\n    return min(b[o][p][yu],b[o][q-two[yu]+1][yu]);\n}\nint fd3(int p,int q)\n{\n    int yu=(int)(log(q-p+1)/xxx);\n    return max(c[p][yu],c[q-two[yu]+1][yu]);\n}\nint fd4(int p,int q)\n{\n    int yu=(int)(log(q-p+1)/xxx);\n    return min(d[p][yu],d[q-two[yu]+1][yu]);\n}\nint main()\n{\n    xxx=log(2);\n    two[0]=1;\n    for(int i=1;i<=11;i++) two[i]=two[i-1]*2;\n    int n,m,k1;\n    cin>>n>>m>>k1;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            s[i][j]=read();\n    for(int i=1;i<=n;i++)//\u679a\u4e3e\u6bcf\u4e00\u884c\n    {\n        for(int j=1;j<=m;j++) {a[i][j][0]=s[i][j];b[i][j][0]=s[i][j];}\n        for(int j=m;j>=1;j--)\n            for(int k=1;k<=(int)(ceil(log(min(m-j+1,k1))/xxx));k++)\n            {\n                a[i][j][k]=max(a[i][j][k-1],a[i][j+two[k-1]][k-1]);//\u6700\u5927\u503cST\u8868\n                b[i][j][k]=min(b[i][j][k-1],b[i][j+two[k-1]][k-1]);//\u6700\u5c0f\u503cST\u8868\n            }\n    }\n    int ans=1000000000;\n    for(int i=1;i<=m-k1+1;i++)//\u679a\u4e3e\u8d77\u59cb\u5217\n    {\n        for(int j=1;j<=n;j++) {c[j][0]=fd1(j,i,i+k1-1);d[j][0]=fd2(j,i,i+k1-1);}\n        for(int j=n;j>=1;j--)\n            for(int k=1;k<=(int)(ceil(log(min(n-j+1,k1))/xxx));k++)\n            {\n                c[j][k]=max(c[j][k-1],c[j+two[k-1]][k-1]);\n                d[j][k]=min(d[j][k-1],d[j+two[k-1]][k-1]);\n```\n}//\u65b0\u7684ST\u8868\n```cpp\n        for(int j=1;j<=n-k1+1;j++)\n            ans=min(ans,fd3(j,j+k1-1)-fd4(j,j+k1-1));//\u6c42\u503c\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1514440785,
        "uid": 79044,
        "name": "\u7834\u58c1\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u5355\u8c03\u961f\u5217\uff08\u4e0d\u77e5\u4e3a\u4ec0\u4e48\u8bd5\u70bc\u573a\u91cc\u628a\u5b83\u653e\u5728DP\u4efb\u52a1\u91cc\uff09\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff0c\u6211\u4eec\u7ef4\u62a4\u5b9a\u957f\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0cmaxv[i][j]\u8868\u793a\u7b2ci\u884c\u7b2cj\u5217\uff0c\u4ecej-k+1~j\u8fd9\u4e9b\u6570\u7684\u6700\u5927\u503c\uff0cminv[i][j]\u540c\u7406\u3002\u8fd9\u91cc\u7684k\u662f\u9898\u76ee\u4e2d\u7684n\uff0c\u4e5f\u5c31\u662f\u6b63\u65b9\u5f62\u7684\u957f\u3002\u7136\u540e\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u6bcf\u4e00\u884c\u5b9a\u957f\u533a\u95f4\u5185\u7684\u6700\u503c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c\u6211\u4eec\u4e5f\u540c\u6837\u7ef4\u62a4\u8fd9\u4e00\u5217\u5b9a\u957f\u533a\u95f4\u7684\u6700\u503c\uff0c\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u201c\u5b9a\u6b63\u65b9\u5f62\u201d\u5185\u7684\u6700\u503c\u3002\n\n\u81f3\u4e8e\u5b9a\u957f\u533a\u95f4\u7684\u6700\u503c\u600e\u4e48\u6c42\uff0c\u90a3\u5c31\u662f\u7528\u5230\u6211\u4eec\u7684\u5355\u8c03\u961f\u5217\u4e86\uff0c\u8fd9\u9053\u9898\u5176\u5b9e\u662f\u4e2a\u6a21\u677f\u3002\u8fd9\u91cc\u6211\u662f\u5f00\u4e24\u4e2a\u53cc\u7aef\u961f\u5217\uff0cmaxq\u548cminq\uff0c\u5206\u522b\u7ef4\u62a4\u3002\uff08\u5f53\u7136\u5f00\u4e00\u4e2a\u4e5f\u53ef\u4ee5\uff0c\u90a3\u6837\u4ee3\u7801\u5c31\u6bd4\u8f83\u957f\u4e86\uff09\n\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u8bf7\u52ff\u590d\u5236QAQ\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<algorithm>\nusing namespace std;\n\nconst int N = 1010;\nconst int INF = 1e9;\nint n, m, k, a[N][N], maxv[N][N], minv[N][N];\n\nint main()\n{\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for (int i=1; i<=n; i++)\n        for (int j=1; j<=m; j++) scanf(\"%d\", &a[i][j]);\n    //\u4ee5\u4e0b\u5bf9\u4e8e\u6bcf\u4e00\u884c\u7528\u5355\u8c03\u961f\u5217\u6c42\u51famaxv[i][j]\u548cminv[i][j]\n    for (int i=1; i<=n; i++){\n        deque<int> maxq, minq;\n        maxv[i][0] = 0;\n        minv[i][0] = INF;\n        for (int j=1; j<=m; j++){\n            while (!maxq.empty() && maxq.front() < j-k+1) maxq.pop_front();  //\u5982\u679c\u8303\u56f4\u8d85\u8fc7k\u5c31\u5f39\u51fa\u961f\u5217\n            while (!maxq.empty() && a[i][maxq.back()] <= a[i][j]) maxq.pop_back();   //\u7ef4\u62a4\u5355\u8c03\u9012\u51cf\u7684\u961f\u5217\u4f7f\u5f97\u961f\u9996\u4e3a\u6700\u5927\u503c\n            maxq.push_back(j);\n            maxv[i][j] = a[i][maxq.front()];\n            while (!minq.empty() && minq.front() < j-k+1) minq.pop_front();\n            while (!minq.empty() && a[i][minq.back()] >= a[i][j]) minq.pop_back();  //\u7ef4\u62a4\u5355\u8c03\u9012\u589e\u7684\u961f\u5217\u4f7f\u5f97\u961f\u9996\u4e3a\u6700\u5c0f\u503c\n            minq.push_back(j);\n            minv[i][j] = a[i][minq.front()];\n        }\n    }\n    //\u4ee5\u4e0b\u5bf9\u4e8e\u6bcf\u4e00\u5217\u7528\u5355\u8c03\u961f\u5217\u6c42\u51fa\u201c\u5b9a\u6b63\u65b9\u5f62\u201d\u5185\u6700\u503c\uff0c\u5e76\u76f4\u63a5\u8ba1\u7b97\u7b54\u6848\n    int ans = INF;\n    for (int j=k; j<=m; j++){  //\u6ce8\u610f\u679a\u4e3e\u8303\u56f4\u4ecek\u5f00\u59cb\n        deque<int> maxq, minq;\n        int MaxV = 0;\n        int MinV = INF;\n        for (int i=1; i<=n; i++){\n            //\u5355\u8c03\u961f\u5217\u7528\u6cd5\u540c\u4e0a\n            while (!maxq.empty() && maxq.front() < i-k+1) maxq.pop_front();\n            while (!maxq.empty() && maxv[maxq.back()][j] <= maxv[i][j]) maxq.pop_back();\n            maxq.push_back(i);\n            MaxV = maxv[maxq.front()][j];\n            while (!minq.empty() && minq.front() < i-k+1) minq.pop_front();\n            while (!minq.empty() && minv[minq.back()][j] >= minv[i][j]) minq.pop_back();\n            minq.push_back(i);\n            MinV = minv[minq.front()][j];\n            if (i >= k) ans = min(ans, MaxV - MinV);  //\u6ce8\u610fi >= k\u65f6\u624d\u80fd\u66f4\u65b0\u7b54\u6848\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1503507683,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u6211\u7ed9\u4e2a\u4e0e\u697c\u4e0b\u4e0d\u540c\u7684\u89e3\u9898\u65b9\u6cd5\n\n\u4e8c\u7ef4RMQ\u3002\u679a\u4e3e\u77e9\u9635\u7684\u5de6\u4e0a\u70b9\u7684\u5750\u6807I\uff0cJ\uff0c\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u77e9\u9635\u53f3\u4e0b\u70b9\u5750\u6807\u4e3a\uff08I+LEN-1\uff0c J+LEN-1\uff09 \u3002\n\n\u5c06\u77e9\u9635\u5206\u4e3a\u56db\u4efd\uff0c\u53d6\u56db\u4efd\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\uff0c\u7531\u4e8e\u5b50\u95ee\u9898\u7684\u91cd\u53e0\u6027\uff0c\u53ef\u4ee5\u5f97\u51fa\u89e3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08N\\*N\uff09\uff1b\n\n\n```cpp\nvar\n  f1,f2:array[0..1005,0..1005,0..11]of longint;\n  n,m,len,i,j,ans,x,k,tot:longint;\n  l,r:longint;\n  p1,p2,p3,p4:longint;\nfunction max(a,b,c,d:longint):longint;\nvar o:longint;\nbegin\n  o:=-maxlongint;\n  if a>o then o:=a;\n  if b>o then o:=b;\n  if c>o then o:=c;\n  if d>o then o:=d;\n  exit(o);\nend;\nfunction min(a,b,c,d:longint):longint;\nvar o:longint;\nbegin\n  o:=maxlongint;\n  if a<o then o:=a;\n  if b<o then o:=b;\n  if c<o then o:=c;\n  if d<o then o:=d;\n  exit(o);\nend;\nbegin\n  readln(n,m,len);\n  for i:=1 to n do\n    for j:=1 to m do\n    begin\n      read(f1[i,j][0]);\n      f2[i,j][0]:=f1[i,j][0];\n    end;\n  if n>m then x:=n else x:=m;\n  for k:=1 to trunc(ln(x)/ln(2)) do\n  for i:=1 to n-1 shl k+1 do\n    for j:=1 to m-1 shl k+1 do\n    begin\n      f1[i,j][k]:=max(f1[i,j][k-1],\n                      f1[i+1 shl (k-1),j][k-1],\n                      f1[i,j+1 shl (k-1)][k-1],\n                      f1[i+1 shl (k-1),j+1 shl (k-1)][k-1]);\n      f2[i,j][k]:=min(f2[i,j][k-1],\n                      f2[i+1 shl (k-1),j][k-1],\n                      f2[i,j+1 shl (k-1)][k-1],\n                      f2[i+1 shl (k-1),j+1 shl (k-1)][k-1]);\n    end;\n  tot:=maxlongint;\n  for i:=1 to n-len+1 do\n   for j:=1 to m-len+1 do\n   begin\n     l:=i+len-1; r:=j+len-1;\n     k:=trunc(ln(len)/ln(2));\n     p1:=f1[i,j][k];\n     p2:=f1[L-1 shl k+1,j][k];\n     p3:=f1[L-1 shl k+1,R-1 shl k+1][k];\n     p4:=f1[i,R-1 shl k+1][k];\n     ans:=max(p1,p2,p3,p4);\n     p1:=f2[i,j][k];\n     p2:=f2[L-1 shl k+1,j][k];\n     p3:=f2[L-1 shl k+1,R-1 shl k+1][k];\n     p4:=f2[i,R-1 shl k+1][k];\n     ans:=ans-min(p1,p2,p3,p4);\n     if ans<tot then tot:=ans;\n   end;\n   writeln(tot);\nend.\n\n```",
        "postTime": 1488375392,
        "uid": 34910,
        "name": "\u91cd\u56de\u5dc5\u5cf0\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u6211\u8bf4\u771f\u7684\u3002\u3002\u697c\u4e0b\u7684\u9898\u89e3\u6211\u770b\u7684\u4ee3\u7801\u6050\u60e7\u75c7\u90fd\u8981\u51fa\u6765\u4e86\u3002\u3002\u3002\n\n\u601d\u8def\u4e0e\u4e0b\u9762\u7684\u4e00\u4f4d\u6709\u4e9b\u76f8\u4f3c\uff1a\n\n\u7b2c\u4e00\u6b65\uff1a\u9884\u5904\u7406ma[i][j],mi[i][j]\u8868\u793a\u4ee5\uff08i,j\uff09\u4f4d\u7f6e\u7ed3\u5c3e\u7684\u957f\u5ea6\u4e3a\u6b63\u65b9\u5f62\u8fb9\u957f\u7684  **\u6b64\u884c\u6700\u5927\u503c**  \u5373max(f[i][j-\u8fb9\u957f]...f[i][j]);\n\n\u8003\u8651\u5230\u65f6\u95f4\u95ee\u9898\uff0c\u76f4\u63a5\u66b4\u529bO\uff08n^3\uff09\u4f1aTLE\uff0c\u56e0\u6b64\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u3002\n\n\u7b2c\u4e8c\u6b65\uff1a\u76f4\u63a5\u679a\u4e3e\u5217\uff0c\u518d\u6b21\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u6bcf\u4e00\u5217\u7684\u7b54\u6848\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5217\u7684\u6700\u5c0f\u503c\u4e0e\u7b54\u6848\u4f5c\u6bd4\u8f83\u8bb0\u5f55\u5373\u53ef\u3002\n\n\nCODE\uff1a\n\n         \n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nint q[1001],d[1001],ma[1001][1001],a[1001][1001],mi[1001][1001],n,m,nee;\ninline void fir_do()\n{\n    int l=0,r=0;\n    for (int i=1;i<=n;i++)\n    {\n        l=1;r=1;\n        for (int j=1;j<=m;j++)//\u5355\u8c03\u961f\u5217\u5f97\u5230\u884c\u6700\u5927\u503c\n        {\n            while (l<r&&q[r-1]<=a[i][j]) r--;//\u4e0d\u7b26\u5408\u5355\u8c03\u961f\u5217\u6027\u8d28\u7684\u5143\u7d20\u51fa\u961f\n            q[r]=a[i][j];d[r]=j;r++;//\u8fdb\u961f\n            if (d[l]==j-nee) l++;//\u82e5\u4e0e\u5f53\u524d\u7684\u8ddd\u79bb\u8d85\u8fc7\u4e86\u6b63\u65b9\u5f62\u8fb9\u957f\uff0c\u5219q[l]\u51fa\u961f\n            if (j>=nee) ma[i][j]=q[l];\n        }\n        l=1;r=1;\n        for (int j=1;j<=m;j++)//\u5355\u8c03\u961f\u5217\u5f97\u5230\u884c\u6700\u5c0f\u503c\n        {\n            while (l<r&&q[r-1]>=a[i][j]) r--;\n            q[r]=a[i][j];d[r]=j;r++;\n            if (d[l]==j-nee) l++;\n            if (j>=nee) mi[i][j]=q[l];\n        }\n    }\n}\ninline void doit()\n{\n    int ans=1e9,ta[1001]={0},ti[1001]={0},l,r;\n    for (int i=nee;i<=m;i++)\n    {\n        l=1;r=1;\n        for (int j=1;j<=n;j++)\n        {\n            while (l<r&&q[r-1]<=ma[j][i]) r--;//\u7531\u4e8ei\u679a\u4e3e\u7684\u662f\u5217\uff0c\u56e0\u6b64\u53bbma[j][i];\n            q[r]=ma[j][i];d[r]=j;r++;\n            if (d[l]==j-nee) l++;\n            if (j>=nee)  ta[j]=q[l];\n        }\n        l=1;r=1;\n        for (int j=1;j<=n;j++)\n        {\n            while (l<r&&q[r-1]>=mi[j][i]) r--;\n            q[r]=mi[j][i];d[r]=j;r++;\n            if (d[l]==j-nee) l++;\n            if (j>=nee) ti[j]=q[l];\n        }\n        for (int j=nee;j<=n;j++) ans=min(ans,ta[j]-ti[j]);//\u8bb0\u5f55\u6700\u5c0f\u503c\n    }\n    cout<<ans;\n}\nint main()\n{\n    cin>>n>>m>>nee;//nee\u4e3a\u6240\u6c42\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=m;j++)\n            cin>>a[i][j];\n    fir_do();//\u9884\u5904\u7406\n    doit();//\u5f97\u51fa\u7b54\u6848\n}\n```",
        "postTime": 1484029818,
        "uid": 19028,
        "name": "VCVCVCFop_zz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u80af\u5b9a\u8981\u9884\u5904\u7406\uff0c\u76f4\u63a5dp\u5e94\u8be5\u662f\u4e0d\u80fd\u6ee1\u8db3\u590d\u6742\u5ea6\u9700\u6c42\u7684\n\n\u590d\u6742\u5ea6\u5927\u6982\u5728O(n^2)\u6216\u8005\u662fO(n^2logn)\n\n\u4e0b\u9762\u5168\u90e8\u4f7f\u7528\u5355\u8c03\u961f\u5217\uff0c\u4e00\u4e2a\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u4e00\u4e2a\u7ef4\u62a4\u6700\u5c0f\u503c\n\n\u6c42\u51fa\u6bcf\u6a2a\u7740n\u4e2a\u8fde\u7eed\u6570\u4e2d\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\uff0cO(n^2)\n\n\u7136\u540e\u5f00\u59cb\u8ba1\u7b97\u77e9\u9635\n\n\u9996\u5148\u6c42\u51fa\u6700\u5de6\u4e0a\u89d2\u7684n\\*n\u77e9\u9635\u4e2d\u7684\u4e24\u4e2a\u5355\u8c03\u961f\u5217\uff0cO(n)\uff0c\u5e76O(1)\u7b97\u51fa\u53d6\u5de6\u4e0a\u89d2\u7684\u89e3\n\n\u7136\u540e\u6bcf\u5f80\u4e0b\u79fb\u52a8\u4e00\u5217\uff0c\u5c31\u6267\u884c\u4e00\u6b21\u5355\u8c03\u961f\u5217\uff0c\u6bcf\u6b21\u662fO(1)\uff0c\u6bcf\u884c\u662fO(n)\uff0c\u603b\u5171\u662fO(n^2)\n\n\u5b8c\n\u672c\u4eba\u6ca1\u6709\u7528stl\u7684\u961f\u5217\uff0c\u6240\u4ee5\u4ee3\u7801\u53ef\u80fd\u4f1a\u6709\u70b9\u957f\u3002\u3002\u3002\u56e0\u4e3a\u81ea\u5df1\u5b9e\u73b0\u4e86deque\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nconst int INF = 1e9+1;\nstruct dequeue\n{\n    static const int MAXSIZE = 110;\n    int front,rear;\n    int elem[MAXSIZE];\n    dequeue()\n    {\n        clear();\n    }\n    void clear()\n    {\n        front = rear = 0;\n    }\n    bool empty()\n    {\n        return front == rear;\n    }\n    int iter_next( int idx )\n    {\n        return (idx+1)%MAXSIZE;\n    }\n    int iter_prior( int idx )\n    {\n        return (idx-1+MAXSIZE)%MAXSIZE;\n    }\n    void push_back( int num )\n    {\n        elem[rear] = num;\n        rear = iter_next(rear);\n    }\n    void pop_back()\n    {\n        rear = iter_prior(rear);\n    }\n    int& get_back()\n    {\n        return elem[iter_prior(rear)];\n    }\n    void push_front( int num )\n    {\n        front = iter_prior(front);\n        elem[front] = num;\n    }\n    void pop_front()\n    {\n        front = iter_next(front);\n    }\n    int &get_front()\n    {\n        return elem[front];\n    }\n};\nstruct simpleq\n{\n    dequeue smallq;\n    dequeue largeq;\n    simpleq()\n    {\n        clear();\n    }\n    void clear()\n    {\n        smallq.clear();\n        largeq.clear();\n    }\n    void push( int num )\n    {\n        while( !smallq.empty() && smallq.get_back() > num )\n        {\n            smallq.pop_back();\n        }\n        smallq.push_back(num);\n        while( !largeq.empty() && largeq.get_back() < num )\n        {\n            largeq.pop_back();\n        }\n        largeq.push_back(num);\n    }\n    void pop( int num )\n    {\n        if( smallq.get_front() == num )\n        {\n            smallq.pop_front();\n        }\n        if( largeq.get_front() == num )\n        {\n            largeq.pop_front();\n        }\n    }\n    int get_small()\n    {\n        return smallq.get_front();\n    }\n    int get_large()\n    {\n        return largeq.get_front();\n    }\n};\nint a,b,n;\nint m[1010][1010];\nint large[1010][1010]; // \u4ece(i,j)\u5f00\u59cb\u7684\u6a2a\u7740n\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c \nint small[1010][1010]; \nsimpleq tmpq;\nsimpleq tmpq2;\nvoid debug_print_small_and_large()\n{\n    printf( \"small: \\n\" );\n    for( int i = 0 ; i < a ; ++i )\n    {\n        for( int j = 0 ; j+n <= b ; ++j )\n        {\n            printf( \"%d \" , small[i][j] );\n        }\n        putchar( '\\n' );\n    }\n    printf( \"large: \\n\" );\n    for( int i = 0 ; i < a ; ++i )\n    {\n        for( int j = 0 ; j+n <= b ; ++j )\n        {\n            printf( \"%d \" , large[i][j] );\n        }\n        putchar( '\\n' );\n    }\n}\nint main()\n{\n    scanf( \"%d%d%d\" , &a , &b , &n );\n    if( n == 1 )\n    {\n        putchar( '0' );\n        return 0;\n    }\n    for( int i = 0 ; i < a ; ++i )\n    {\n        for( int j = 0 ; j < b ; ++j )\n        {\n            scanf( \"%d\" , &m[i][j] );\n        }\n    }\n    for( int i = 0 ; i < a ; ++i )\n    {\n        tmpq.clear();\n        for( int j = 0 ; j < n ; ++j )\n        {\n            tmpq.push( m[i][j] );\n        }\n        small[i][0] = tmpq.get_small();\n        large[i][0] = tmpq.get_large();\n        for( int j = 1 ; j+n <= b ; ++j )\n        {\n            tmpq.pop( m[i][j-1] );\n            tmpq.push( m[i][j+n-1] );\n            small[i][j] = tmpq.get_small();\n            large[i][j] = tmpq.get_large();\n        }\n    }\n    //debug_print_small_and_large();\n    int rst = INF;\n    for( int j = 0 ; j+n <= b ; ++j )\n    {\n        tmpq.clear(); // \u7ef4\u62a4\u6700\u5c0f \n        tmpq2.clear(); // \u7ef4\u62a4\u6700\u5927 \n        for( int i = 0 ; i < n ; ++i )\n        {\n            tmpq.push( small[i][j] );\n            tmpq2.push( large[i][j] );\n        }\n        rst = min( rst , tmpq2.get_large() - tmpq.get_small() );\n        for( int i = 1 ; i+n <= a ; ++i )\n        {\n            tmpq.pop( small[i-1][j] );\n            tmpq.push( small[i+n-1][j] );\n            tmpq2.pop( large[i-1][j] );\n            tmpq2.push( large[i+n-1][j] );\n            rst = min( rst , tmpq2.get_large() - tmpq.get_small() );\n        }\n    }\n    printf( \"%d\\n\" , rst );\n    return 0;\n}\n```",
        "postTime": 1478071336,
        "uid": 8212,
        "name": "__stdcall",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u601d\u8def\u4e3b\u8981\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u5982\u679c\u5199\u8fc7\u659c\u7387\u4f18\u5316\u7684\u9898\u8fd9\u9053\u9898\u5c31\u80fd\u5f88\u5feb\u5730ac\uff0c\u5176\u5b9e\u5199\u6cd5\u5dee\u4e0d\u591a\uff0c\u8fd9\u91ccf1[i,j]\u8868\u793a\u7b2ci\u884c\u7b2cj\u4e2a\u683c\u5b50\u5f00\u59cb\u8fde\u7eedn\u4e2a\u683c\u5b50\u7684\u503c\u7684\u6700\u5927\u503c\n\nf2[i,j]\u662f\u6700\u5c0f\u503c\uff0cff1[i,j]\u8868\u793a\u4ee5\uff08i,j\uff09\u4e3a\u5de6\u4e0a\u89d2\u7684n\\*n\u4e2d\u7684\u6700\u5927\u503c\uff0cff2\u4e3a\u6700\u5c0f\u503c\n\n```delphi\nprogram p2216;\nvar\n  f1,f2,ff1,ff2,map:array[1..1000,1..1000]of longint;\n    i,j,a,b,n,op1,op2,cl1,cl2,ans,maxk,mink:longint;\n    q1,q2:array[1..1000]of longint;\nfunction min(x,y:longint):longint;\nbegin\n  if x<y then exit(x) else exit(y);\nend;\nbegin\n \n    readln(a,b,n);\n    for i:=1 to a do begin\n      for j:=1 to b do read(map[i,j]);\n        readln;\n    end;\n    for i:=1 to a do begin\n        q1[1]:=1;q2[1]:=1;\n    cl1:=1;cl2:=1;\n    for j:=2 to n do begin\n      while (cl1>=1)and(map[i,q1[cl1]]<=map[i,j])do dec(cl1);\n      inc(cl1);q1[cl1]:=j;\n      while (cl2>=1)and(map[i,q2[cl2]]>=map[i,j])do dec(cl2);\n      inc(cl2);q2[cl2]:=j;\n    end;\n        f1[i,1]:=map[i,q1[1]];f2[i,1]:=map[i,q2[1]];\n        op1:=1;op2:=1;\n        for j:=2 to b-n+1 do begin\n          while (op1<=cl1)and(map[i,q1[cl1]]<=map[i,j+n-1])do dec(cl1);\n          inc(cl1);q1[cl1]:=j+n-1;\n            if q1[op1]<j then inc(op1);\n          f1[i,j]:=map[i,q1[op1]];\n            while (op2<=cl2)and(map[i,q2[cl2]]>=map[i,j+n-1])do dec(cl2);\n            inc(cl2);q2[cl2]:=j+n-1;\n            if q2[op2]<j then inc(op2);\n            f2[i,j]:=map[i,q2[op2]];\n        end;\n    end;\n    for j:=1 to b-n+1 do begin\n      q1[1]:=1;q2[1]:=1;\n    cl1:=1;cl2:=1;\n    for i:=2 to n do begin\n      while (cl1>=1)and(f1[q1[cl1],j]<=f1[i,j])do dec(cl1);\n      inc(cl1);q1[cl1]:=i;\n      while (cl2>=1)and(f2[q2[cl2],j]>=f2[i,j])do dec(cl2);\n      inc(cl2);q2[cl2]:=i;\n    end;\n        ff1[1,j]:=f1[q1[1],j];ff2[1,j]:=f2[q2[1],j];\n    op1:=1;op2:=1;\n        for i:=2 to a-n+1 do begin\n          while (op1<=cl1)and(f1[i+n-1,j]>=f1[q1[cl1],j]) do dec(cl1);\n          inc(cl1);q1[cl1]:=i+n-1;\n          if q1[op1]<i then inc(op1);\n            ff1[i,j]:=f1[q1[op1],j];\n            while (op2<=cl2)and(f2[i+n-1,j]<=f2[q2[cl2],j])do dec(cl2);\n            inc(cl2);q2[cl2]:=i+n-1;\n            if q2[op2]<i then inc(op2);\n            ff2[i,j]:=f2[q2[op2],j];\n        end;\n    end;\n    ans:=maxlongint;\n    for i:=1 to  a-n+1 do\n      for j:=1 to b-n+1 do\n          ans:=min(ans,ff1[i,j]-ff2[i,j]);\n    writeln(ans);\nend.\n\n```",
        "postTime": 1445871689,
        "uid": 5272,
        "name": "slothfulxtx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2216 \u3010[HAOI2007]\u7406\u60f3\u7684\u6b63\u65b9\u5f62\u3011"
    }
]