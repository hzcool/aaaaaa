[
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u522b\u6837\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u5199\u6cd5\u3002\n\n# $\\mathcal Magic$\n\n[\u9b54\u6cd5\u6811](https://www.luogu.com.cn/problem/P6847)\n\n> \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6709\u4e9b\u8282\u70b9\u4e0a\u6709\u679c\u5b9e\uff0c\u6709\u503c $d,w$\uff0c\u5206\u522b\u8868\u793a\u679c\u5b9e\u6210\u719f\u7684\u65e5\u671f\u548c\u4ef7\u503c\u3002\n>\n> \u5982\u679c\u6070\u597d\u5728\u65e5\u671f\u5f53\u5929\u5207\u6389\u8be5\u8282\u70b9\u4e0e\u6839\u7684\u8fde\u901a\uff0c\u90a3\u4e48\u5c31\u80fd\u5f97\u5230\u8be5\u4ef7\u503c\u3002\u6c42\u80fd\u5f97\u5230\u7684\u4ef7\u503c\u7684\u6700\u5927\u503c\u3002\n\n\u8f6c\u5316\u4e00\u4e0b\u9898\u610f\uff0c\u5728\u6811\u4e0a\u9009\u62e9\u4e00\u4e9b\u70b9\uff0c\u4f7f\u5f97\u6240\u6709\u88ab\u9009\u62e9\u7684\u70b9\u5bf9 $(u,v)$\uff0c\u82e5 $v$ \u5728\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u90a3\u4e48\u6709 $d(v)\\leq d(u)$\u3002\n\n\u8003\u8651\u6700\u6734\u7d20\u7684\u6811\u5f62 DP\uff0c\u8bbe $f(u,i)$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u6240\u6709\u5207\u65ad\u64cd\u4f5c\u90fd\u5728 $\\leq i$ \u5929\u5185\u5b8c\u6210\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e $u$ \u7684\u4e00\u4e2a\u513f\u5b50 $v$\uff0c\u5b83\u7684\u8d21\u732e\u6709\uff1a\n\n1. \u4e0d\u8003\u8651\u52a0\u5165 $u$ \u70b9\u7684\u4ef7\u503c\uff1a$f(u,i)=\\sum f(v,i)$\u3002\n2. \u8003\u8651\u52a0\u5165 $u$ \u70b9\u7684\u4ef7\u503c\uff1a$f(u,j)=w(u)+\\sum f(v,d(u))$\uff0c\u5176\u4e2d $j\\geq d(u)$\u3002\n\n\u56e0\u4e3a\u4e24\u8005\u662f\u4e92\u65a5\u5173\u7cfb\uff0c\u6240\u4ee5\u9700\u8981\u53d6\u4e2a $\\max$\u3002\n\n\u8fd9\u6837\u5c31\u5f97\u5230\u4e86 $O(nk)$ \u7684\u66b4\u529b\u7b97\u6cd5\uff0c\u8003\u8651\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\u5b83\uff0c\u4e0d\u96be\u60f3\u5230\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\u5bf9\u4e8e\u8f6c\u79fb\u4e00\u53ef\u4ee5\u76f4\u63a5\u5408\u5e76\uff0c\u6253\u4e0a\u4e2a\u533a\u95f4\u52a0\u6807\u4ef7\u5373\u53ef\uff0c\u5bf9\u4e8e\u4e8c\u76f8\u5f53\u4e8e\u662f\u533a\u95f4 $[d(u),k]$ \u5bf9\u90a3\u4e2a\u503c\u53d6 $\\max$\u3002\n\n\u7136\u540e\u63d0\u4f9b\u4e00\u4e2a\u5c0f trick\uff0c\u4e0d\u8003\u8651\u4f7f\u7528\u666e\u901a\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u8d4b\u503c\u6807\u8bb0\uff08\u6bd4\u8f83\u96be\u5408\u5e76\uff09\uff0c\u800c\u662f\u8bb0\u5f55\u4e0b\u533a\u95f4 $\\min,\\max$\u3002\n\n\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u7684 $\\min=\\max$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u6240\u6709\u503c\u76f8\u7b49\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\n\n\u5408\u5e76\u65f6\u76f4\u63a5\u88ab\u5408\u5e76\uff0c\u66f4\u65b0\u65f6\u76f4\u63a5\u5220\u6389\u5de6\u53f3\u513f\u5b50\uff0c\u4fee\u6539\u65f6\u6dfb\u52a0\u5de6\u53f3\u513f\u5b50\uff0c\u5c31\u76f8\u5f53\u4e8e\u6709\u4e86\u533a\u95f4\u8d4b\u503c\u7684\u4f5c\u7528\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u82e5\u5199\u4e2a\u7a7a\u95f4\u56de\u6536\u90a3\u4e48\u7a7a\u95f4\u590d\u6742\u5ea6\u540c\u6837\u4e3a $O(n\\log n)$\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u5199\u6cd5\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n\ntypedef long long LL;\nconst int N = 100010;\nconst int M = N * 40;\n\nint n, m, k, tot, d[N], w[N], rt[N];\nstruct Tree{int l, r; LL mx, mn, add;} t[M];\nvector<int> bac, G[N];\n\nint read(){\n\tint x = 0, f = 1; char c = getchar();\n\twhile(c < '0' || c > '9') f = (c == '-') ? -1 : 1, c = getchar();\n\twhile(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n\treturn x * f;\n}\n\nbool Same(int p){return (t[p].mx == t[p].mn);}\n\nint New(){\n\tif(!bac.empty()){\n\t\tint p = bac.back();\n\t\tbac.pop_back();\n\t\treturn p;\n\t}\n\treturn ++ tot;\n}\n\nvoid Delet(int &x){\n\tif(!x) return;\n\tbac.push_back(x);\n\tt[x].l = t[x].r = 0;\n\tt[x].mx = t[x].mn = t[x].add = 0;\n\tx = 0;\n}\n\nvoid Plus(int p, LL v){\n\tif(!p) return;\n\tt[p].mx += v;\n\tt[p].mn += v;\n\tt[p].add += v;\n}\n\nvoid Push_Down(int p){\n\tif(!t[p].add) return;\n\tPlus(t[p].l, t[p].add);\n\tPlus(t[p].r, t[p].add);\n\tt[p].add = 0;\n}\n\nvoid Push_Up(int p){\n\tint l = t[p].l, r = t[p].r;\n\tt[p].mx = max(t[l].mx, t[r].mx);\n\tt[p].mn = min(t[l].mn, t[r].mn);\n\tif(t[p].mn == t[p].mx)\n\t\tDelet(t[p].l), Delet(t[p].r);\n}\n\nint Merge(int p, int q){\n\tif(!p || !q) return p + q;\n\tif(Same(q)){Plus(p, t[q].mx); return p;}\n\tif(Same(p)){Plus(q, t[p].mx); return q;}\n\tPush_Down(p), Push_Down(q);\n\tt[p].l = Merge(t[p].l, t[q].l);\n\tt[p].r = Merge(t[p].r, t[q].r);\n\tPush_Up(p);\n\treturn p;\n}\n\nLL Query(int p, int l, int r, int k){\n\tif(Same(p)) return t[p].mx;\n\tint mid = (l + r) >> 1;\n\tPush_Down(p);\n\tif(k <= mid)\n\t\treturn Query(t[p].l, l, mid, k);\n\telse\n\t\treturn Query(t[p].r, mid + 1, r, k);\n}\n\nvoid Modify(int p, int l, int r, int L, int R, LL v){\n\tif(t[p].mn >= v) return;\n\tif(L <= l && r <= R && t[p].mx <= v){\n\t\tt[p].mx = t[p].mn = v; t[p].add = 0;\n\t\tDelet(t[p].l), Delet(t[p].r);\n\t\treturn;\n\t}\n\tPush_Down(p);\n\tif(Same(p)){\n\t\tt[p].l = New(), t[p].r = New();\n\t\tint ls = t[p].l, rs = t[p].r;\n\t\tt[ls].mx = t[ls].mn = t[rs].mx = t[rs].mn = t[p].mx;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(L <= mid)\n\t\tModify(t[p].l, l, mid, L, R, v);\n\tif(R > mid)\n\t\tModify(t[p].r, mid + 1, r, L, R, v);\n\tPush_Up(p);\n}\n\nvoid dfs(int u){\n\trt[u] = New();\n\tfor(int i = 0; i < (int) G[u].size(); i ++){\n\t\tint v = G[u][i];\n\t\tdfs(v);\n\t\trt[u] = Merge(rt[u], rt[v]);\n\t}\n\tif(d[u]){\n\t\tLL val = Query(rt[u], 1, k, d[u]);\n\t\tModify(rt[u], 1, k, d[u], k, val + w[u]);\n\t}\n}\n\nint main(){\n\tn = read(), m = read(), k = read();\n\tfor(int v = 2; v <= n; v ++){\n\t\tint u = read();\n\t\tG[u].push_back(v);\n\t}\n\tfor(int i = 1; i <= m; i ++){\n\t\tint p = read();\n\t\td[p] = read(), w[p] = read();\n\t}\n\tdfs(1);\n\tprintf(\"%lld\\n\", t[rt[1]].mx);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1626876921,
        "uid": 117941,
        "name": "_LPF_",
        "ccfLevel": 9,
        "title": "P6847 [CEOI2019] Magic Tree"
    },
    {
        "content": "\u9996\u5148\u6709\u4e00\u4e2a\u663e\u7136\u7684\u66b4\u529bdp\n\n\u8bbe $f_{u,t}$ \u8868\u793a $t$ \u65f6\u523b\u524d\u65ad\u6389 $u$ \u548c $u$ \u7684\u7236\u4eb2\u8fd9\u6761\u8fb9\u7684\u6700\u5927\u6536\u76ca\n\n\u663e\u7136\u6709 $f_{u,t}=val(u,t)+\\sum\\limits_{v\\in son(u)} f_{v,t}$\uff0c$val(u,t)$ \u8868\u793a $t$ \u65f6\u523b\u4e4b\u524d\u65ad\u6389 $u$ \u548c $u$ \u7236\u4eb2\u8fd9\u6761\u8fb9\u8282\u70b9 $u$ \u7684\u6536\u76ca\n\n\u6709 $val(u,t)=w_u\\times [d_u\\le t]$\n\n\u4e0d\u96be\u53d1\u73b0 $f_u$ \u662f\u5355\u8c03\u4e0d\u964d\u7684\uff0c\u5e76\u4e14\u8fde\u7eed\u7684\u4e00\u6bb5\u503c\u662f\u76f8\u7b49\u7684\uff0c\u800c\u4e14\u62d0\u70b9\u4e0d\u4f1a\u5f88\u591a\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a map \u5b58\u50a8\u8fd9\u4e9b\u62d0\u70b9\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684 $f$ \u503c\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u548c\u5b83\u7684\u513f\u5b50 $v$\uff0c\u6211\u4eec\u53ea\u8981\u628a $v$ \u7684 map \u4e2d\u6240\u6709\u503c\u90fd\u52a0\u5230 $u$ \u7684 map \u4e2d\u5373\u53ef\n\n\u63a5\u4e0b\u6765\u8003\u8651 $u$ \u81ea\u5df1\u7684\u8d21\u732e\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6240\u6709 $\\ge d_u$ \u7684 $f$ \u90fd\u52a0\u4e0a $w_u$\uff0c\u4e8e\u662f\u5c31\u662f\u8981\u8fdb\u884c\u4e00\u4e2a\u540e\u7f00\u52a0\u64cd\u4f5c\uff0c\u53ef\u4ee5\u628a map \u4e2d\u7ef4\u62a4\u7684\u4e1c\u897f\u6362\u6210 $f$ \u7684\u5dee\u5206\u6570\u7ec4\uff08\u5f53\u7136\u5982\u679c\u4f60\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u8bdd\u76f4\u63a5\u533a\u95f4\u52a0\u5c31\u884c\u4e86\uff09\n\n\u6bcf\u6b21\u66b4\u529b\u5408\u5e76 map \u663e\u7136\u4f1a\u8d85\u65f6\uff0c\u4e8e\u662f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n\\log k)$\n\ncode:\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 100010\n#define int long long\n#define iter map<int,int>::iterator \nusing namespace std;\nint n,m,K;\nint rt[MAXN],fa[MAXN],d[MAXN],w[MAXN];\nmap<int,int>f[MAXN];\nvoid merge(int &a,int b){\n\tif(f[a].size()<f[b].size())swap(a,b);\n\tfor(iter it=f[b].begin();it!=f[b].end();it++)\n\t\tf[a][it->first]+=it->second;\n}\nsigned main(){\n\tscanf(\"%lld%lld%lld\",&n,&m,&K);\n\tfor(int i=2;i<=n;i++)scanf(\"%lld\",&fa[i]);\n\tfor(int i=1;i<=m;i++){\n\t\tint p;scanf(\"%lld\",&p);\n\t\tscanf(\"%lld%lld\",&d[p],&w[p]);\n\t}\n\tfor(int i=1;i<=n;i++)rt[i]=i;\n\tfor(int i=n;i;i--){\n\t\tf[rt[i]][d[i]]+=w[i];iter it;\n\t\tfor(it=f[rt[i]].find(d[i]),it++;it!=f[rt[i]].end();){\n\t\t\tif(it->second>w[i]){it->second-=w[i];break;}\n\t\t\tw[i]-=it->second;iter tmp=it;it++;f[rt[i]].erase(tmp);\n\t\t}\n\t\tmerge(rt[fa[i]],rt[i]);\n\t}int ans=0;\n\tfor(iter it=f[rt[1]].begin();it!=f[rt[1]].end();it++)\n\t\tans+=it->second;\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1611413699,
        "uid": 65681,
        "name": "UltiMadow",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6847 \u3010[CEOI2019] Magic Tree\u3011"
    },
    {
        "content": "\u8bbe $f_{u,i}$ \u8868\u793a\u7b2c $i$ \u5929\u6536\u83b7 $u$ \u70b9\u65f6 $u$ \u5b50\u6811\u5185\u7684\u7b54\u6848\u3002\n\n\u8003\u8651\u5408\u5e76 $u$ \u548c\u513f\u5b50 $v$ \u7684\u7b54\u6848\u3002  \n\u6709\n$$\nf'_{u,i} = \\max\\{\\max\\limits_{j=0}^i\\{f_{u,i}+f_{v,j}\\}.\\max\\limits_{j=0}^i\\{f_{u,j}+f_{v,i}\\}\\}\n$$\n\n\u53d1\u73b0\u662f\u4e00\u4e2a max \u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\u3002  \n\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int N = 1e5;\nint n,m,k;\nint d[N + 5],w[N + 5];\nint to[N + 5],pre[N + 5],first[N + 5];\ninline void add(int u,int v)\n{\n\tstatic int tot = 0;\n\tto[++tot] = v,pre[tot] = first[u],first[u] = tot;\n}\nnamespace SEG\n{\n\tstruct node\n\t{\n\t\tlong long val,tag;\n\t\tint ls,rs;\n\t} seg[(N << 6) + 5];\n\tinline void push(int p)\n\t{\n\t\tif(seg[p].tag)\n\t\t{\n\t\t\tif(seg[p].ls)\n\t\t\t\tseg[seg[p].ls].val += seg[p].tag,\n\t\t\t\tseg[seg[p].ls].tag += seg[p].tag;\n\t\t\tif(seg[p].rs)\n\t\t\t\tseg[seg[p].rs].val += seg[p].tag,\n\t\t\t\tseg[seg[p].rs].tag += seg[p].tag;\n\t\t\tseg[p].tag = 0;\n\t\t}\n\t}\n\tvoid insert(int x,long long k,int &p,int tl,int tr)\n\t{\n\t\tstatic int tot = 0;\n\t\t!p && (seg[p = ++tot] = seg[0],1),seg[p].val = max(seg[p].val,k);\n\t\tif(tl == tr)\n\t\t\treturn ;\n\t\tpush(p);\n\t\tint mid = tl + tr >> 1;\n\t\tx <= mid ? insert(x,k,seg[p].ls,tl,mid) : insert(x,k,seg[p].rs,mid + 1,tr);\n\t}\n\tlong long query(int r,int p,int tl,int tr)\n\t{\n\t\tif(!p || r >= tr)\n\t\t\treturn seg[p].val;\n\t\tpush(p);\n\t\tint mid = tl + tr >> 1;\n\t\tlong long ret = -0x3f3f3f3f3f3f3f3f;\n\t\tret = max(ret,query(r,seg[p].ls,tl,mid));\n\t\tr > mid && (ret = max(ret,query(r,seg[p].rs,mid + 1,tr)));\n\t\treturn ret;\n\t}\n\tlong long val(int x,int p,int tl,int tr)\n\t{\n\t\tif(tl == tr)\n\t\t\treturn seg[p].val;\n\t\tpush(p);\n\t\tint mid = tl + tr >> 1;\n\t\treturn x <= mid ? val(x,seg[p].ls,tl,mid) : val(x,seg[p].rs,mid + 1,tr);\n\t}\n\tint merge(int p,int q,long long ptag,long long qtag,int tl,int tr)\n\t{\n\t\tif(!p && !q)\n\t\t\treturn 0;\n\t\tif(!p)\n\t\t{\n\t\t\tseg[q].val += qtag,seg[q].tag += qtag;\n\t\t\treturn q;\n\t\t}\n\t\tif(!q)\n\t\t{\n\t\t\tseg[p].val += ptag,seg[p].tag += ptag;\n\t\t\treturn p;\n\t\t}\n\t\tif(tl == tr)\n\t\t{\n\t\t\tptag = max(ptag,seg[q].val),qtag = max(qtag,seg[p].val);\n\t\t\tseg[p].val = max(seg[p].val + ptag,seg[q].val + qtag);\n\t\t\treturn p;\n\t\t}\n\t\tpush(p),push(q);\n\t\tint mid = tl + tr >> 1;\n\t\tlong long plval = seg[seg[p].ls].val;\n\t\tlong long qlval = seg[seg[q].ls].val;\n\t\tseg[p].ls = merge(seg[p].ls,seg[q].ls,ptag,qtag,tl,mid);\n\t\tseg[p].rs = merge(seg[p].rs,seg[q].rs,max(ptag,qlval),max(qtag,plval),mid + 1,tr);\n\t\tseg[p].val = max(seg[seg[p].ls].val,seg[seg[p].rs].val);\n\t\treturn p;\n\t}\n}\nint fa[N + 5];\nint rt[N + 5];\nvoid dfs(int p)\n{\n\tfor(register int i = first[p];i;i = pre[i])\n\t\tdfs(to[i]),\n\t\trt[p] = SEG::merge(rt[p],rt[to[i]],0,0,1,N);\n\td[p] && (SEG::insert(d[p],w[p] + max(SEG::query(d[p],rt[p],1,N),0LL),rt[p],1,N),1);\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(register int i = 2;i <= n;++i)\n\t\tscanf(\"%d\",fa + i),add(fa[i],i);\n\tint x,y,z;\n\tfor(register int i = 1;i <= m;++i)\n\t\tscanf(\"%d%d%d\",&x,&y,&z),d[x] = y,w[x] = z;\n\tdfs(1);\n\tprintf(\"%lld\\n\",SEG::seg[rt[1]].val);\n}\n```",
        "postTime": 1611572599,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6847 \u3010[CEOI2019] Magic Tree\u3011"
    },
    {
        "content": "\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u6211 $\\color{red}{-17}$ \u7684\u5149\u8f89\u63d0\u4ea4\u4ee5\u53ca\u4e09\u4e2a\u5047\u7b97\u6cd5\u3002~~\u987a\u4fbf\u62a2\u4e86\u4e2a\u6700\u4f18\u89e3\u3002~~\n\n## \u9898\u610f\u7b80\u8ff0\n\n> \u6bcf\u5929\u4f60\u53ef\u4ee5\u780d\u4e0b\u6811\u4e0a\u7684\u67d0\u4e9b\u8fb9\uff0c\u7136\u540e\u5f53\u5929\u4e0e $1$ \u8282\u70b9\u4e0d\u518d\u8054\u901a\u7684\u679c\u5b9e\u5982\u679c\u6070\u597d\u5728\u5f53\u5929\u6210\u719f\uff0c\u5219\u80fd\u591f\u6536\u83b7\u8be5\u679c\u5b9e\u7684\u679c\u6c41\u3002\n>\n> \u6c42\u6700\u5927\u80fd\u6536\u83b7\u7684\u679c\u6c41\u91cf\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148**\u9700\u8981**\u60f3\u5230\u4e00\u4e2a\u7ef4\u5ea6\u542b\u6709\u65f6\u95f4\u7684\u66b4\u529b dp.\n\n\u8bbe $f_u(t)$ \u8868\u793a\u5728\u7b2c $t$ \u5929\u780d\u65ad $(u,\\mathrm{fa}_u)$ \u7684\u6700\u5927\u6536\u76ca\uff0c\u5219\u6709\uff1a\n\n$$f_u(t)\\gets w_u[t=d_u] + \\sum_v \\min_{i=1}^tf_v(i)$$\n\n\u66b4\u529b\u8f6c\u79fb\u53ef\u4ee5\u505a\u5230 $O(n^3)$\u3002\n\n\u8bbe $g_u(t)=\\min_{i=1}^tf_u(t)$\uff0c\u5219\u53ef\u4ee5\u628a\u4e0a\u9762\u7684\u8f6c\u79fb\u4f18\u5316\u5230 $O(n^2)$\u3002\u4e0d\u8fc7\u540c\u65f6\u5b58\u5728 $f$ \u548c $g$ \u5e76\u4e0d\u5f88\u96c5\u89c2\uff0c\u800c\u4e14\u96be\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\n\n\u8bd5\u7740\u76f4\u63a5\u8f6c\u79fb $g$\uff0c\u5219\u53ef\u4ee5\u5f97\u5230\uff1a\n\n$$\\begin{aligned} g_u(t)&\\gets\\sum_vg_v(t) \\\\\n\ng_u(j) &\\gets \\max \\left\\{ g_u(j), w_u+\\sum_v g_v(d_u) \\right\\} \\ (j \\in [d_u,k])\\end{aligned}$$\n\n\u8fd9\u6837\uff0c\u5219\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002\u8fd9\u91cc\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c 1\uff0c\u76f4\u63a5\u5408\u5e76\u5373\u53ef\u3002\u64cd\u4f5c 2 \u7684\u533a\u95f4\u53d6 $\\max$ \u5219\u4e0d\u597d\u5904\u7406\u3002\u4e00\u79cd\u66b4\u529b\u7684\u505a\u6cd5\u662f\u5bf9\u4e8e\u533a\u95f4\u6253\u53d6 $\\max$ \u7684 tag, \u5408\u5e76\u7684\u65f6\u5019\u66b4\u529b\u4e0b\u4f20\uff08\u9700\u8981\u65b0\u5efa\u70b9\uff09\u3002\u4f46\u662f\u8fd9\u6837\u505a\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u9519\u7684\u3002\n\n\u8fd8\u6709\u4e00\u79cd\u7ecf\u5178\u505a\u6cd5\u662f\uff0c\u628a\u53d6 $\\max$ \u7684\u533a\u95f4\u5206\u89e3\u4e3a\u4e00\u4e9b\u6700\u5927\u503c\u5c0f\u4e8e $\\max$ \u7684\u533a\u95f4\uff0c\u518d\u628a\u8fd9\u4e9b\u533a\u95f4\u63a8\u5e73\u3002\u672c\u9898\u5c31\u53ef\u4ee5\u8fd9\u6837\u505a\uff01\u4e3a\u4ec0\u4e48\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u5462\uff1f**\u6b64\u65f6\u4e0d\u59a8\u56de\u987e\u4e00\u4e0b\u8f6c\u79fb\u7684\u5f0f\u5b50\u3002**\u6240\u6709\u7684\u64cd\u4f5c 2 \u4e2d\uff0c\u88ab\u53d6 $\\max$ \u7684\u90fd\u662f\u4e00\u6bb5\u540e\u7f00\u3002\u56e0\u6b64\uff0c**$f_u(t)$ \u5173\u4e8e $t$ \u5355\u8c03\u4e0d\u964d**\u3002\u8fd9\u8bf4\u660e\u6211\u4eec\u53ea\u9700\u8981**\u63a8\u5e73\u4e00\u6bb5\u533a\u95f4**\u3002\n\n\u6b64\u5916\uff0c\u60f3\u8981\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\uff0c\u5c31\u8981\u6c42\u4e0d\u80fd\u4e0b\u4f20\u6807\u8bb0\u3002\u53ea\u6709\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u7ebf\u6bb5\u6811\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u3002\u8fd9\u8981\u6c42\u4fe1\u606f\u662f\u53ef\u53e0\u52a0\u7684\u3002\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u533a\u95f4\u52a0\u7ebf\u6bb5\u6811\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u5c1d\u8bd5\u7528\u5b83\u7ef4\u62a4\u533a\u95f4\u63a8\u5e73\u3002\n\n\u533a\u95f4\u63a8\u4e3a $0$\uff0c\u53ef\u4ee5\u7528\u5220\u9664\u4e00\u4e2a\u5b50\u6811\u5b9e\u73b0\u3002\u4e4b\u540e\u518d\u628a\u8fd9\u4e2a\u533a\u95f4\u52a0\u4e0a $\\max$ \u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst int N = 100005;\nint n, m, k;\n// \u8bbe f[u][t] \u4e3a\u5728\u7b2c t \u5929\u5272\u6389 u, u \u5b50\u6811\u5185\u6700\u5927\u6536\u76ca\u3002\n// \u82e5\u5728\u7b2c t \u5929\u5272\u6389 u, \u5219\u5b50\u6811\u5185\u6240\u6709\u5272\u7684\u64cd\u4f5c\u53ea\u80fd\u5728\u7b2c [1..t] \u5929\u5b8c\u6210\n\n// \u65bd\u52a0 u \u7684\u9650\u5236:\n// f[u][d[u]]=w[u]+\\sum{g[v][d[u]]}\n// g[u][i]=sum{g[u][i]+g[v][i]}\n// g[u][d[u]..k] \\gets w[u]+\\sum{g[v][d[u]]}\n\nstruct Node { ll mn, mx, tag; int ls, rs; } tr[N << 6];\n#define mid ((l + r) >> 1)\n#define LS(p) tr[p].ls\n#define RS(p) tr[p].rs\n#define TAG(p) tr[p].tag\n#define N(p) tr[p].mn\n#define X(p) tr[p].mx\n\nint trash[N << 6], tp, ap;\n#define alloc() (tp ? trash[tp--] : ++ap);\n#define del(p) if (p) { trash[++tp] = p; p = LS(p) = RS(p) = X(p) = TAG(p) = N(p) = 0; }\n\n// \u6807\u8bb0\u6c38\u4e45\u5316\u7ebf\u6bb5\u6811\n// \u652f\u6301\u533a\u95f4 min max, \u533a\u95f4\u63a8\u5e73\u4e3a 0, \u533a\u95f4\u52a0\n// \u52a0\u6cd5\u662f\u5178\u578b\u7684\u53ef\u52a0\u4fe1\u606f\u3002\n#define maintain(p) { \\\n    N(p) = min(N(LS(p)), N(RS(p))) + TAG(p); \\\n    X(p) = max(X(LS(p)), X(RS(p))) + TAG(p); \\\n}\nvoid merge(int &p, int &q, int l = 1, int r = k) {\n    if (!p || !q) { p = p | q; return; }\n    if (l == r) {\n        TAG(p) += TAG(q);\n        X(p) = N(p) = TAG(p);\n        del(q);\n        return;\n    }\n    TAG(p) += TAG(q);\n    merge(LS(p), LS(q), l, mid);\n    merge(RS(p), RS(q), mid + 1, r);\n    del(q);\n    maintain(p);\n}\n// [b, e] \u5220\u9664\u5e76\u52a0\u4e0a v\n// \u5176\u4e2d f[e]<=v\nvoid cover(int b, ll v, int &p, int l = 1, int r = k) {\n    if (!p) p = alloc();\n    if (b <= l) {\n        if (X(p) <= v) {\n            del(LS(p)); del(RS(p));\n            TAG(p) = X(p) = N(p) = v;\n        } else {\n            v -= TAG(p);\n            if (N(LS(p)) <= v)\n                cover(b, v, LS(p), l, mid);\n            if (N(RS(p)) <= v)\n                cover(b, v, RS(p), mid + 1, r);\n            maintain(p);\n        }\n        return;\n    }\n    v -= TAG(p);\n    if (b <= mid) cover(b, v, LS(p), l, mid);\n    cover(b, v, RS(p), mid + 1, r);\n    maintain(p);\n}\nll query(int x, int p, int l = 1, int r = k) {\n    if (!p) return 0;\n    if (l == r) return TAG(p);\n    return TAG(p) + ((x <= mid) ? query(x, LS(p), l, mid) : query(x, RS(p), mid + 1, r));\n}\n\n\nint fa[N], root[N];\nint d[N]; ll w[N];\n\nint main() {\n    rd(n); rd(m); rd(k);\n    U (i, 2, n) rd(fa[i]);\n    U (i, 1, m) {\n        int u, td; ll tw;\n        rd(u); rd(td); rd(tw);\n        d[u] = td;\n        w[u] = tw;\n    }\n\n    D (u, n, 2) {\n        if (d[u]) cover(d[u], w[u] + query(d[u], root[u]), root[u]);\n        merge(root[fa[u]], root[u]);\n    }\n\n    ll f = 0;\n    U (i, 1, k) f = max(f, query(i, root[1]));\n    printf(\"%lld\", f);\n}\n```\n\n## \u51e0\u79cd\u9519\u8bef\u89e3\u6cd5\n\n### \u8d2a\u5fc3\n\n\u6309 $d$ \u4ece\u5c0f\u5230\u5927\u52a0\u5165\uff0c\u82e5 $w_u > \\sum_{1\\to u}$ \u5219\u628a\u8fd9\u4e9b\u70b9\u5220\u6389\u3002\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u4e0b\u9762\u6709\u5f88\u591a $w$ \u8f83\u5c0f\u4f46\u662f $\\sum w$ \u8f83\u5927\u7684\u70b9\u5c31\u5bc4\u4e86\u3002\n\n### \u4e0d\u542b\u65f6\u95f4\u7684 dp\n\n\u5206\u4e3a\u780d\u4e0b $u$ \u548c\u4e0d\u780d\u4e0b $u$ \u4e24\u7c7b\uff0c\u5728\u4e0a\u65b9\u51cf\u53bb\u8d21\u732e\u3002\n\n\u8fd9\u6837\u65e0\u6cd5\u5904\u7406\u4e0d\u6458\u53d6 $u$ \u4f46\u5b50\u6811\u5185\u5bf9\u65f6\u95f4\u6709\u9650\u5236\u7684\u60c5\u51b5\u3002\n\n### \u66b4\u529b pushdown\n\n\u82e5\u5bf9\u4e00\u68f5\u6ee1\u6811\u8fdb\u884c 2 \u64cd\u4f5c\uff0c\u5219\u590d\u6742\u5ea6\u9000\u5316\u4e3a $O(n)$\u3002\u6ee1\u6811\u662f\u5bb9\u6613\u6784\u9020\u7684\u3002\n\n~~\u8fd9\u4e9b\u9519\u8bef\u4f8b\u6211\u5168\u5199\u8fc7\u3002~~",
        "postTime": 1661351947,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3] P6847 [CEOI2019] Magic Tree"
    },
    {
        "content": "\u597d\u9898\uff01\n\n\u5148\u8003\u8651\u4e00\u4e2a\u66b4\u529b\u7684 DP\uff0c\u8bbe $f_{i,j}$ \u4e3a $i$ \u53f7\u70b9\u5b50\u6811\u5728 $j$ \u65f6\u523b\u4e4b\u524d\u7684\u6700\u5927\u6536\u76ca\uff0c\u8003\u8651 $u$ \u53f7\u70b9\u5728\u65f6\u523b $j$ \u662f\u5426\u6536\u83b7\uff1a\n\n- $u$ \u6b64\u65f6\u4e0d\u6536\u83b7\uff1a\n\n$$f_{u,j} = \\sum_{v \\in son_u}f_{v,j}$$\n\n- $u$ \u6b64\u65f6\u6536\u83b7\uff0c\u90a3\u4e48\u5bf9\u4e8e $u$ \u4e0a\u7684\u679c\u5b9e $i$\uff0c\u9700\u8981\u4fdd\u8bc1 $j \\geq d_i$\uff0c\u6b64\u65f6\u6709\uff1a\n\n$$f_{u,j} = w_i + \\sum_{v \\in son_u} f_{v, d_i}$$\n\n\u6700\u540e\u6211\u4eec\u4ee4 $f_{u,i} = \\max( f_{u,i},f_{u,i -1})$\u3002\u5bb9\u6613\u53d1\u73b0\u53ea\u6709 $O(n)$ \u4e2a\u65f6\u523b\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5bf9\u65f6\u523b\u79bb\u6563\u5316\uff0c\u8fd9\u6837\u66b4\u529b\u8f6c\u79fb\u662f $O(n^2)$ \u7684\u3002\n\n\u7b80\u5355\u7684\u89c2\u5bdf\u662f\uff0c$f_{u,i}$ \u968f\u7740 $i$ \u7684\u589e\u52a0\u662f\u5355\u8c03\u4e0d\u964d\u7684\u3002\u8fdb\u4e00\u6b65\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e8b\u5b9e\u4e0a $f_{u,i}$ \u6709\u5f88\u957f\u7684\u6bb5\u503c\u90fd\u662f\u76f8\u540c\u7684\uff0c\u5b83\u7684\u62d0\u70b9\u5e76\u4e0d\u4f1a\u5f88\u591a\uff0c\u4e5f\u5c31\u662f\u8bf4 $f_u$ \u7684\u5dee\u5206\u6570\u7ec4\u53ea\u6709 $O(n)$ \u7684\u4f4d\u7f6e\u6709\u503c\uff08\u6211\u4eec\u7a0d\u540e\u5bf9\u8fd9\u90e8\u5206\u8fdb\u884c\u66f4\u5177\u4f53\u7684\u8bf4\u660e\uff09\u3002\n\n\u6211\u4eec\u8003\u8651\u7528 map \u7ef4\u62a4\u8fd9\u4e9b\u5dee\u5206\u3002\u53d1\u73b0\u5728\u7b2c\u4e8c\u79cd\u8f6c\u79fb\u4e2d\u6211\u4eec\u9700\u8981\u67e5\u8be2 $\\sum f_{v,d_i}$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u5b8c\u6210\u7b2c\u4e00\u79cd\u8f6c\u79fb\uff0c\u8fd9\u6837\u5728\u7b2c\u4e8c\u79cd\u8f6c\u79fb\u4e2d\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728\u5df2\u7ecf\u8f6c\u79fb\u597d\u7684 map \u4e2d\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e $u$ \u4e0d\u6536\u83b7\u7684\u60c5\u51b5\u9700\u8981\u628a $u$ \u548c $v$ \u5bf9\u5e94\u7684 map \u5408\u5e76\uff0c\u6211\u4eec\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u6765\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\u5bf9\u4e8e $u$ \u6536\u83b7\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u662f\u5bf9\u5408\u5e76\u540e\u7684\u4e00\u4e2a\u540e\u7f00\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u76f8\u5f53\u4e8e\u5728\u4f4d\u7f6e $d_i$ \u63d2\u5165\u4e86\u5dee\u5206 $w_i$\uff0c\u4f46\u6b64\u65f6\u53ef\u80fd\u4f1a\u5220\u6389\u540e\u9762\u7684\u4e00\u90e8\u5206\u5dee\u5206\uff0c\u5e76\u5bf9\u5e38\u6570\u4e2a\u5dee\u5206\u8fdb\u884c\u4fee\u6539\uff0c\u7c7b\u4f3c\u4e8e\u4e0b\u56fe\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/b2vglp0z.png)\n\n\u7eff\u8272\u90e8\u5206\u5185\u7684\u5dee\u5206\u88ab $w_i$ \u5e72\u6389\u4e86\uff0c\u540e\u9762\u7684\u90a3\u4e2a\u5dee\u5206\u4e5f\u88ab $w_i$ \u622a\u6389\u4e86\u4e00\u6bb5\u3002\u4e8c\u5206\u627e\u5230\u63d2\u5165\u5dee\u5206\u7684\u4f4d\u7f6e\uff0c\u76f4\u63a5\u4fee\u6539\u5373\u53ef\u3002\n\n\u4e0b\u9762\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u590d\u6742\u5ea6\uff1a\u89c2\u5bdf\u8f6c\u79fb\uff0c\u6bcf\u4e2a\u70b9 $u$ \u7684 map \u662f\u6240\u6709\u513f\u5b50 map \u7684\u5e76\u518d\u52a0\u4e0a $u$ \u4e0a\u7684\u4e00\u4e2a\u5dee\u5206\uff0c\u5e76\u4e14\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u5220\u6389\u4e00\u4e9b\u5dee\u5206\u3002\u56e0\u6b64\uff0c\u70b9 $u$ \u7684 map \u4e2d\u7684\u5dee\u5206\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7\u5b50\u6811\u5927\u5c0f\u3002\u90a3\u4e48\u6839\u636e\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u7ecf\u5178\u7ed3\u8bba\uff0c\u5408\u5e76\u7684\u590d\u6742\u5ea6\u662f $O(n \\log^2 n)$\u3002\u800c\u6bcf\u4e2a\u5dee\u5206\u81f3\u591a\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log^2 n)$\u3002\n\n\n```cpp\n/*\n\u4e5f\u8bb8\u6240\u6709\u7684\u6267\u5ff5 \u5c31\u50cf\u56db\u5b63\u7684\u66f4\u8fed\n\u6ca1\u6709\u56e0\u7f18 \u4e0d\u9700\u81f4\u6b49\n\u662f\u5426\u62e5\u62b1\u7740\u544a\u522b \u5c31\u66f4\u80fd\u8bfb\u61c2\u4eba\u95f4\n\u8fd8\u662f\u611f\u6168 \u66f4\u591a\u4e00\u70b9\n*/\n#define int long long\n\nconst int MN = 1e5 + 5;\nint N, M, K, d[MN], w[MN], vr[MN];\nmap <int, int> f[MN];\n\nvector <int> G[MN];\n\ninline void DFS(int u) {\n    for (int v : G[u]) {\n        DFS(v);\n        if (f[u].size() > f[v].size())\n            swap(f[u], f[v]);\n        for (auto it = f[v].begin(); it != f[v].end(); it++)\n            f[u][it -> fi] += it -> se;\n        f[v].clear();\n    }\n    if (vr[u]) {\n        int i = vr[u];\n        f[u][d[i]] += w[i];\n        int rest = w[i];\n        for (auto it = f[u].upb(d[i]), t = it; it != f[u].end(); ) {\n            if (rest >= it -> se) {\n                rest -= it -> se, t = it++;\n                f[u].erase(t);\n            } else {\n                it -> se -= rest;\n                break;\n            }\n        }\n    }\n}\n\nsigned main(void) {\n    N = read(), M = read(), K = read();\n    for (int i = 2; i <= N; i++) {\n        int fa = read();\n        G[fa].pb(i);\n    }\n    for (int i = 1; i <= M; i++) {\n        int v = read(); d[i] = read(), w[i] = read();\n        vr[v] = i;\n    }\n    DFS(1);\n    int ans = 0;\n    for (auto it = f[1].begin(); it != f[1].end(); it++)\n        ans += it -> se;\n    printf(\"%lld\\n\", ans);\n    return 0;       \n}\n```\n",
        "postTime": 1649854277,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4022 \u3010 [CEOI2019] Magic Tree\u3011"
    },
    {
        "content": "\u8003\u8651 DP\u3002\u8bbe $f_{i,j}$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u5728\u7b2c $j$ \u5929**\u524d**\u5168\u90e8\u526a\u6389\u6536\u83b7\u7684\u6700\u5927\u679c\u6c41\u91cf\u3002\u6ce8\u610f\u5230\u5728\u526a\u6389 $(p_i,i)$ \u524d\u5c06\u5176\u5b50\u6811\u5168\u90e8\u526a\u6389\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u6545\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f_{i,j}=\\max\\left\\{f_{i,j-1},w_x[v_x=i]+\\sum_{k \\in \\mathrm{son}(i)}f_{k,j}\\right\\}$$\n\n\u7531\u4e8e $v_j \\geq 2$ \u7684\u6570\u636e\u8303\u56f4\uff0c\u4e0d\u5fc5\u5bf9 $i=1$ \u7684\u60c5\u51b5\u5206\u7c7b\u8ba8\u8bba\u3002\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u5c06\u7b2c\u4e8c\u7ef4\u538b\u6389\u3002\u53d1\u73b0\u4ece $i$ \u7684\u5b50\u8282\u70b9\u8f6c\u79fb\u5230 $i$ \u7684\u8fc7\u7a0b\u5e76\u6ca1\u6709\u6d89\u53ca $j$ \u7684\u6539\u53d8\uff0c\u6240\u4ee5\u8fd9\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u5408\u5e76\u7684\u8fc7\u7a0b\u3002\u5177\u4f53\u5730\uff0c\u6211\u4eec\u7ef4\u62a4 $f_i$ \u7684\u300c\u62d0\u70b9\u300d\uff0c\u4e5f\u5c31\u662f\u6ee1\u8db3 $f_{i,j} \\neq f_{i,j-1}$ \u7684\u70b9\u3002$w_x[v_x=i]$ \u9020\u6210\u4e86\u8fd9\u4e9b\u300c\u62d0\u70b9\u300d\uff0c\u800c $\\sum_{k \\in \\mathrm{son}(i)} f_{k,j}$ \u5219\u8d1f\u8d23\u5c06\u5b50\u6811\u4e2d\u7684\u300c\u62d0\u70b9\u300d\u5408\u5e76\u3002\u6240\u4ee5\uff0c\u300c\u62d0\u70b9\u300d\u6570\u91cf\u4e0d\u8d85\u8fc7 $i$ \u7684\u5b50\u6811\u5927\u5c0f\uff0c\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u5373\u53ef\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u53e6\u5916\uff0c$w_x[v_x=i]$ \u8fd9\u4e00\u9879\u76f8\u5f53\u4e8e\u540e\u7f00\u52a0\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u9700\u8981\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\u3002\u5b9e\u73b0\u7684\u7ec6\u8282\u8f83\u591a\uff0c\u7ed9\u51fa\u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nconst int MAXN = 100005;\ntypedef long long LL;\nint n, m, k, d[MAXN], w[MAXN], son[MAXN], sz[MAXN];\nstd::vector<int> G[MAXN];\nstd::map<int, LL> f[MAXN]; //\u6ce8\u610flong long\n\nvoid DFS(int x) { //\u627e\u91cd\u513f\u5b50\n\tsz[x] = 1;\n\tfor(int v : G[x]) {\n\t\tDFS(v);\n\t\tsz[x] += sz[v];\n\t\tif(sz[son[x]] < sz[v])\n\t\t\tson[x] = v;\n\t}\n}\n\nvoid Merge(int x) {\n\tif(son[x] != 0)\n\t\tMerge(son[x]), f[x] = std::move(f[son[x]]);\n\tfor(int v : G[x])\n\t\tif(v != son[x]) {\n\t\t\tMerge(v);\n\t\t\tfor(auto t : f[v]) {\n\t\t\t\tauto p = f[x].insert(t);\n\t\t\t\tif(p.second == false)\n\t\t\t\t\tp.first->second += t.second;\n\t\t\t}\n\t\t}\n   //\u8fd9\u91cc\u8981\u5148\u5168\u90e8\u5408\u5e76\u518d\u63d2\u5165\n\tif(d[x] != 0) {\n\t\tauto p = f[x].insert({d[x], w[x]}); // insert \u8fd4\u56de\u503c\u4e3a pair<iterator, bool>\uff0c\u524d\u8005\u8868\u793a\u63d2\u5165\u6216\u963b\u6b62\u63d2\u5165\u7684\u8fed\u4ee3\u5668\uff0c\u540e\u8005\u8868\u793a\u662f\u5426\u6210\u529f\u63d2\u5165\n\t\tauto it = p.first;\n\t\tif(p.second == false)\n\t\t\tit->second += w[x]; // \u62d0\u70b9\u5df2\u5b58\u5728\uff0c\u76f4\u63a5\u52a0\u4e0a\n\t\tif(++it == f[x].end()) // \u5224\u8fb9\u754c\u3002\u5982\u679c\u5148\u63d2\u5165\u518d\u5408\u5e76\uff0c\u8fd9\u91cc\u4f1a\u4ee5\u4e3a\u540e\u9762\u6ca1\u6709\u62d0\u70b9\u800c\u9519\u8bef\u5730\u7ed3\u675f\n\t\t\treturn ;\n\t\tLL sum = it->second; // sum \u4e5f\u8981\u5f00long long\uff0c\u5426\u5219\u65f6\u95f4\u5168\u90e8\u76f8\u540c\u65f6\u53ea\u662f it->second \u4e5f\u6709\u53ef\u80fd\u5bfc\u81f4\u6ea2\u51fa\n\t\twhile(sum <= w[x]) {\n\t\t\tauto t = it++;\n\t\t\tf[x].erase(t);\n\t\t\tif(it == f[x].end()) // \u5224\u8fb9\u754c\n\t\t\t\treturn ;\n\t\t\tsum += it->second;\n\t\t}\n\t\tit->second = sum - w[x];\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\tfor(int i = 2; i <= n; ++i) {\n\t\tint p;\n\t\tscanf(\"%d\", &p);\n\t\tG[p].push_back(i);\n\t}\n\tfor(int i = 1; i <= m; ++i) {\n\t\tint v;\n\t\tscanf(\"%d\", &v);\n\t\tscanf(\"%d%d\", &d[v], &w[v]);\n\t}\n\tDFS(1);\n\tMerge(1);\n\tLL ans = 0;\n\tfor(auto it = f[1].begin(); it != f[1].end(); ++it)\n\t\tans += it->second;\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1659090887,
        "uid": 225734,
        "name": "derta",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011\u3010[CEOI2019] Magic Tree\u3011"
    }
]