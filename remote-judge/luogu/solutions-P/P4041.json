[
    {
        "content": "[\u4f20\u9001\u95e8](https://www.lydsy.com/JudgeOnline/problem.php?id=3878)\n\u7ebf\u6bb5\u6811\u7efc\u5408\u3002\n\u8ba9\u6211\u60f3\u8d77\u4e00\u9053\u53eb\u505a[$siano$](https://blog.csdn.net/dreaming__ldx/article/details/81170850)\u7684\u9898\uff0c\u8fd9\u9898\u5c31\u662f\u90a3\u9898\u7684\u5f3a\u5316\u7248\u672c\u3002\n\u8bf4\u8bf4\u505a\u6cd5\u5427\uff1a\n\u8ddf$saino$\u4e00\u6837\uff0c\u5f53\u6211\u4eec\u628a$a[i]$\u6392\u6210\u6709\u5e8f\u7684\u4e4b\u540e\uff0c\u5c31\u4f1a\u4fdd\u8bc1\u5728\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u6574\u4e2a\u6570\u5217\u4ecd\u7136\u662f\u5355\u8c03\u7684\u3002\n\u9996\u5148\u52a0\u51cf\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u64cd\u4f5c\uff0c$L,R$\u7684\u9650\u5236\u4e5f\u53ea\u76f8\u5f53\u4e8e\u4e00\u4e2a\u64cd\u4f5c\uff0c\u56e0\u6b64\u8fd9\u9053\u9898\u8981\u6211\u4eec\u7ef4\u62a4\u8fd9\u51e0\u4e2a\u64cd\u4f5c\uff1a\n1.\u533a\u95f4\u52a0\n2.\u533a\u95f4\u4e58\n3.\u533a\u95f4\u52a0\u53d8\u5f62\uff08\u52a0\u4e0a\u539f\u6570$a[i]$\u7684$k$\u500d\uff09\n4.\u533a\u95f4\u8986\u76d6\n\u7ef4\u62a4\uff1a\u533a\u95f4\u6700\u5927\u6700\u5c0f\uff0c\u5355\u70b9\u503c\u3002\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u795e\u5947\u7684\u66f4\u65b0\u51fd\u6570$f(p,k_1,k_2,k_3)$\uff0c\u8868\u793a\u6574\u4e2a\u533a\u95f4\u7684\u503c\u7684\u53d8\u5316\u65b9\u5f0f\uff1a\n$c[i]=c[i]*k_1+k_2*a[i]+k_3$\uff0c\u7136\u540e\u6211\u4eec\u53c8\u53ef\u4ee5\u60ca\u5947\u7684\u53d1\u73b0\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u7528\u4e8e\u6240\u6709\u7684\u533a\u95f4\u4fee\u6539\u51fd\u6570\u3002\n1.\u533a\u95f4\u52a0\uff1a$f(p,1,0,add)$\u3002\n2.\u533a\u95f4\u4e58\uff1a$f(p,mul,0,0)$\u3002\n3.\u533a\u95f4\u52a0\u53d8\u5f62\uff1a$f(p,1,addx,0)$\u3002\n4.\u533a\u95f4\u8986\u76d6\uff1a$f(p,0,0,set)$\u3002\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u8fde\u524d\u4e09\u4e2a\u64cd\u4f5c\u7684\u5355\u72ec\u7684\u4fee\u6539\u51fd\u6570\u90fd\u4e0d\u7528\u5199\uff0c\u7b80\u6d01\u81ea\u7136\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\n#define ll long long\n#define N 100005\n#define lc (p<<1)\n#define rc (p<<1|1)\n#define p1 T[p].lz1\n#define p2 T[p].lz2\n#define p3 T[p].lz3\n#define mid (T[p].l+T[p].r>>1)\nusing namespace std;\nstruct Node{int l,r;ll mn,mx,lz1,lz2,lz3;}T[N<<2];\nstruct Query{int op;ll v;}q[N];\nstruct Ans{int id;ll v;}a[N];\nint n,m;\nll ans[N],L,R;\ninline ll max(ll a,ll b){return a>b?a:b;}\ninline ll min(ll a,ll b){return a<b?a:b;}\ninline void pushup(int p){T[p].mx=T[rc].mx,T[p].mn=T[lc].mn;}\ninline void pushnow(int p,ll k1,ll k2,ll k3){\n\tp1*=k1,p2=p2*k1+k2,p3=p3*k1+k3;\n\tT[p].mx=T[p].mx*k1+k2*a[T[p].r].v+k3;\n\tT[p].mn=T[p].mn*k1+k2*a[T[p].l].v+k3;\n}\ninline void pushdown(int p){pushnow(lc,p1,p2,p3),pushnow(rc,p1,p2,p3),p1=1,p2=0,p3=0;}\ninline void build(int p,int l,int r){\n\tT[p].l=l,T[p].r=r,p1=1,p2=p3=0,T[p].mx=a[r].v,T[p].mn=a[l].v;\n\tif(l==r)return;\n\tbuild(lc,l,mid),build(rc,mid+1,r);\n}\ninline void modify1(int p){\n\tif(T[p].l==T[p].r)return pushnow(p,0,0,L);\n\tpushdown(p);\n\tif(T[rc].mn<L)pushnow(lc,0,0,L),modify1(rc);\n\telse modify1(lc);\n\tpushup(p);\n}\ninline void modify2(int p){\n\tif(T[p].l==T[p].r)return pushnow(p,0,0,R);\n\tpushdown(p);\n\tif(T[lc].mx>R)pushnow(rc,0,0,R),modify2(lc);\n\telse modify2(rc);\n\tpushup(p);\n}\ninline bool cmp(Ans a,Ans b){return a.v<b.v;}\ninline void query(int p){\n\tif(T[p].l==T[p].r){ans[a[T[p].l].id]=T[p].mn;return;}\n\tpushdown(p),query(lc),query(rc);\n}\nint main(){\n\tscanf(\"%d%lld%lld\",&m,&L,&R);\n\tfor(int i=1;i<=m;++i){\n\t\tchar s[2];\n\t\tscanf(\"%s%lld\",s,&q[i].v);\n\t\tswitch(s[0]){\n\t\t\tcase '+':{q[i].op=1;break;}\n\t\t\tcase '-':{q[i].op=2;break;}\n\t\t\tcase '*':{q[i].op=3;break;}\n\t\t\tdefault:{q[i].op=4;break;}\n\t\t}\n\t}\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)scanf(\"%lld\",&a[i].v),a[i].id=i;\n\tsort(a+1,a+n+1,cmp),build(1,1,n);\n\tfor(int i=1;i<=m;++i){\n\t\tswitch(q[i].op){\n\t\t\tcase 1:{pushnow(1,1,0,q[i].v);break;}\n\t\t\tcase 2:{pushnow(1,1,0,-q[i].v);break;}\n\t\t\tcase 3:{pushnow(1,q[i].v,0,0);break;}\n\t\t\tdefault:{pushnow(1,1,q[i].v,0);break;}\n\t\t}\n\t\tif(T[1].mn<L)modify1(1);\n\t\tif(T[1].mx>R)modify2(1);\n\t}\n\tquery(1);\n\tfor(int i=1;i<=n;++i)cout<<ans[i]<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1532580675,
        "uid": 47765,
        "name": "ldxcaicai",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4041 \u3010[AHOI2014/JSOI2014]\u5947\u602a\u7684\u8ba1\u7b97\u5668\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u51fa $N$ \u6b21\u64cd\u4f5c\uff0c\u5b58\u50a8\u8303\u56f4 $L$ \u548c $R$\uff0c\u4ee5\u53ca\u4e00\u4e2a\u957f\u5ea6\u4e3a $Q$ \u7684\u5e8f\u5217\u3002\n\n\u6709 4 \u79cd\u64cd\u4f5c\uff1a\n1. $+a$\uff1a\u8868\u793a\u5c06\u5f53\u524d\u7684\u7ed3\u679c\u52a0\u4e0a $a$\u3002\n\n1. $-a$\uff1a\u8868\u793a\u5c06\u5f53\u524d\u7684\u7ed3\u679c\u51cf\u53bb $a$\u3002\n\n1. $*a$\uff1a\u8868\u793a\u5c06\u5f53\u524d\u7684\u7ed3\u679c\u4e58\u4ee5 $a$\u3002\n\n1. $@a$\uff1a\u8868\u793a\u5c06\u5f53\u524d\u7684\u7ed3\u679c\u52a0\u4e0a $a*X$\uff08$X$ \u662f\u4e00\u5f00\u59cb\u8f93\u5165\u7684\u6570\uff09\u3002\n\n\u5f53\u6267\u884c\u5b8c\u4e00\u6b21\u64cd\u4f5c\uff0c\u5927\u4e8e $R$ \u7684\u6570\u628a\u5b83\u53d8\u4e3a $R$\uff0c\u5c0f\u4e8e $L$ \u7684\u6570\u628a\u5b83\u53d8\u4e3a $L$\u3002\n\n\u8f93\u51fa\u7ecf\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\u7684\u5e8f\u5217\u3002\n## \u601d\u8def\n\n\u6ce8\u610f\u5230\u6bcf\u6b21\u64cd\u4f5c\u5bf9\u5168\u5c40\u53bb\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u548c\u533a\u95f4\u6700\u5927\u503c\uff0c\u5982\u679c\u533a\u95f4\u6700\u5927\u503c\u5927\u4e8e $R$ \u5219\u5c06\u5927\u4e8e $R$ \u7684\u90e8\u5206\u8d4b\u503c\u4e3a $R$\uff0c\u533a\u95f4\u6700\u5c0f\u503c\u5c0f\u4e8e $L$ \u540c\u7406\u3002\n\n\n------------\n\n\u524d\u4e09\u79cd\u64cd\u4f5c\u5c31\u662f\u533a\u95f4\u52a0\uff08\u51cf\uff09\uff0c\u533a\u95f4\u4e58\u3002\u7b2c\u56db\u79cd\u64cd\u4f5c\u6bd4\u8f83\u5947\u602a\u5148\u4e0d\u7ba1\u5b83\uff0c\u627e\u4e00\u4e2a\u6807\u8bb0\u8bb0\u5f55\u4e00\u4e0b\u3002\n\n\n------------\n\n\u89c2\u5bdf\u5230\u6bcf\u6b21\u90fd\u5bf9\u4e8e\u6574\u4e2a\u5e8f\u5217\u8fdb\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u4e0d\u6539\u53d8\u5404\u4e2a\u6570\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u53ef\u4ee5\u5c06\u5e8f\u5217\u6392\u5e8f\u4e4b\u540e\u518d\u505a\u3002\u90a3\u4e48\u5927\u4e8e $R$ \u7684\u6570\u80af\u5b9a\u5728\u53f3\u8fb9\u8fde\u7eed\u4e00\u6bb5\uff0c\u5c0f\u4e8e $L$ \u7684\u6570\u540c\u7406\u3002\n\n\n------------\n\u518d\u6765\u770b\u7b2c\u56db\u79cd\u64cd\u4f5c\u3002\u867d\u7136\u5b83\u5f88\u5947\u602a\uff0c\u4f46\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\u800c\u56e0\u4e3a\u6211\u4eec\u5c06\u5e8f\u5217\u6392\u8fc7\u5e8f\uff0c\u6240\u4ee5\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u53ea\u53d7\u7aef\u70b9\u503c\u7684\u5f71\u54cd\u3002\u66f4\u65b0\u65f6\u53ea\u9700\u8fd9\u6837\u5c31\u597d\u5566\u3002\n```cpp\nvoid pushad(int rt, int l, int r, ll x) \n{\n    minn[rt] += num[l].val * x;\n    maxx[rt] += num[r].val * x;\n    tad[rt]+=x; \n}\n```\n\n\n------------\n## Code\n\uff08\u4f1a\u6709\u4ebf\u70b9\u70b9\u957f\uff0c\u56e0\u4e3a\u6211\u6728\u6709\u5c06\u4e09\u79cd\u6807\u8bb0\u5408\u8d77\u6765\u5199\uff0c\u611f\u89c9\u5206\u5f00\u4f1a\u5bb9\u6613\u7406\u89e3\u4e00\u70b9\u5427\uff0c~~\u5176\u5b9e\u4e3b\u8981\u539f\u56e0\u662f\u6211\u4e5f\u4e0d\u4f1a~~\uff09\u3002\n```\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 100005;\nconst int T = 4 * N + 5;\nint n, mn, mx, q;\nll minn[T], maxx[T], tadd[T], tmul[T], tad[T], tset[T];\nstruct node1 {\n    char s;\n    ll a;\n} op[N];\nstruct node2 \n{\n    ll id, val, ans;\n} num[N];\nbool cmp1(node2 a, node2 b) //\u6309\u503c\u6392\u5e8f\n{\n    return a.val < b.val;\n}\nbool cmp2(node2 a, node2 b) //\u6309\u7f16\u53f7\u6392\u5e8f\uff08\u8f93\u51fa\u65f6\uff09\n{\n    return a.id < b.id;\n}\nvoid build(int rt, int l, int r) \n{\n    if (l == r) \n\t{\n        minn[rt] = num[l].val;\n        maxx[rt] = num[l].val;\n        return ;\n    }\n    tmul[rt] = 1;\n    int mid = l + r >> 1;\n    build(rt << 1, l, mid);\n    build(rt << 1 | 1, mid + 1, r);\n    minn[rt] = min(minn[rt << 1], minn[rt << 1 | 1]);\n    maxx[rt] = max(maxx[rt << 1], maxx[rt << 1 | 1]);\n}\nvoid pushadd(int rt, int l, int r, ll x)\n{\n    minn[rt] += x;\n    maxx[rt] += x;\n    tadd[rt] += x;\n}\nvoid pushmul(int rt, int l, int r, ll x)\n{\n    minn[rt] *= x;\n    maxx[rt] *= x;\n    tmul[rt] *= x;\n    tadd[rt] *= x;\n    tad[rt] *= x;\n}\nvoid pushad(int rt, int l, int r, ll x) //\u5947\u602a\u7684\u64cd\u4f5c4\n{\n    minn[rt] += num[l].val * x;\n    maxx[rt] += num[r].val * x;\n    tad[rt]+=x; \n}\nvoid pushset(int rt, int l, int r, ll x)\n{\n    minn[rt] = maxx[rt] = x;\n    tset[rt] = x;\n    tadd[rt] = 0;\n    tmul[rt] = 1;\n    tad[rt] = 0;\n}\nvoid pushdown(int rt, int l, int r)\n{\n    int mid = l + r >> 1;\n    if (tset[rt] != 0) \n\t{\n        pushset(rt << 1, l, mid, tset[rt]);\n        pushset(rt << 1 | 1, mid + 1, r, tset[rt]);\n        tset[rt] = 0;\n    }\n    if (tmul[rt] != 1) \n\t{\n        pushmul(rt << 1, l, mid, tmul[rt]);\n        pushmul(rt << 1 | 1, mid + 1, r, tmul[rt]);\n        tmul[rt] = 1;\n    }\n    if (tadd[rt] != 0) \n\t{\n        pushadd(rt << 1, l, mid, tadd[rt]);\n        pushadd(rt << 1 | 1, mid + 1, r, tadd[rt]);\n        tadd[rt] = 0;\n    }\n    if (tad[rt] != 0) \n\t{\n        pushad(rt << 1, l, mid, tad[rt]);\n        pushad(rt << 1 | 1, mid + 1, r, tad[rt]);\n        tad[rt] = 0;\n    }\n}\nvoid setmin(int rt, int l, int r) \n{\n    if (maxx[rt] < mn) //\u5982\u679c\u533a\u95f4\u6700\u5927\u503c\u90fd\u5c0f\u4e8eL\n\t{\n        pushset(rt, l, r, mn);//\u5168\u90e8\u8d4b\u4e3aL\n        return ;\n    }\n    if (l == r)//\u627e\u4e0d\u5230\u5c0f\u4e8eL\u7684\u6570\u4e86\n        return ;\n    pushdown(rt, l, r);\n    int mid = l + r >> 1;\n    setmin(rt << 1, l, mid);//\u5728\u5de6\u533a\u95f4\u4e00\u5b9a\u6709\u5c0f\u4e8eL\u7684\u6570\n    if (minn[rt << 1 | 1] < mn)//\u5982\u679c\u53f3\u533a\u95f4\u4e5f\u6709\u5c0f\u4e8eL\u7684\u6570\n        setmin(rt << 1 | 1, mid + 1, r);\n    minn[rt] = min(minn[rt << 1], minn[rt << 1 | 1]);\n    maxx[rt] = max(maxx[rt << 1], maxx[rt << 1 | 1]);\n}\nvoid setmax(int rt, int l, int r) //\u53c2\u8003setmin\n{\n    if (minn[rt] > mx) \n\t{\n        pushset(rt, l, r, mx);\n        return ;\n    }\n    if (l == r)\n        return ;\n    pushdown(rt, l, r);\n    int mid = l + r >> 1;\n    setmax(rt << 1 | 1, mid + 1, r);\n    if (maxx[rt << 1] > mx)\n        setmax(rt << 1, l, mid);\n    minn[rt] = min(minn[rt << 1], minn[rt << 1 | 1]);\n    maxx[rt] = max(maxx[rt << 1], maxx[rt << 1 | 1]);\n}\nvoid sett(int rt, int l, int r) //\u627e\u7b54\u6848\n{\n    if (l == r) {\n        num[l].ans = minn[rt];\n        return ;\n    }\n    pushdown(rt, l, r);\n    int mid = l + r >> 1;\n    sett(rt << 1, l, mid);\n    sett(rt << 1 | 1, mid + 1, r);\n}\nint main() \n{\n    scanf(\"%d%d%d\", &n, &mn, &mx);\n    for (int i = 1; i <= n; i++) \n        scanf(\"%s%lld\", &op[i].s, &op[i].a);\n    scanf(\"%d\", &q);\n    for (int i = 1; i <= q; i++) \n    {\n        scanf(\"%lld\", &num[i].val);\n        num[i].id = i;\n    }\n    sort(num + 1, num + q + 1, cmp1);\n    build(1, 1, q);\n    for (int i = 1; i <= n; i++) \n    {//\u56e0\u4e3a\u9898\u76ee\u6bcf\u6b21\u90fd\u5bf9\u4e8e\u6574\u4e2a\u5e8f\u5217\u8fdb\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u6253\u6807\u8bb0\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c11\u4e9b\u4e00\u70b9\n        if (op[i].s == '+') \n            pushadd(1, 1, q, op[i].a);\n        else if (op[i].s == '-')\n            pushadd(1, 1, q, -op[i].a);\n        else if (op[i].s == '*')\n            pushmul(1, 1, q, op[i].a);\n        else if (op[i].s == '@')\n            pushad(1, 1, q, op[i].a);\n        setmin(1, 1, q);\n        setmax(1, 1, q);\n    }\n    sett(1, 1, q);\n    sort(num + 1, num + q + 1, cmp2);\n    for (int i = 1; i <= q; i++)\n        cout << num[i].ans << endl;\n    return 0;\n}\n```\n",
        "postTime": 1627744917,
        "uid": 299865,
        "name": "tytyty",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4041 [AHOI2014/JSOI2014]\u5947\u602a\u7684\u8ba1\u7b97\u5668"
    },
    {
        "content": "## \u4e8b\u524d\u89c4\u5b9a\n\n\u6211\u4eec\u628a $L$ \u5199\u6210 $l$\uff0c$R$ \u5199\u6210 $r$\u3002\n\n## \u95ee\u7b54\u73af\u8282\n\nQ\uff1a\u4e3a\u4ec0\u4e48\u770b\u4e86\u770b\u522b\u4eba\u7684\u9898\u89e3\uff0c\u90fd\u662f\u7528\u7684\u7ebf\u6bb5\u6811\u5440\uff1f\n\nA\uff1a\u56e0\u4e3a\u64cd\u4f5c\u65e2\u8981\u533a\u95f4\u4fee\u6539\uff0c\u4e5f\u8981\u5bf9 $l$ \u548c $r$ \u53d6 $\\max$ \u548c $\\min$\uff0c\u666e\u901a\u7684\u6a21\u62df\u65e0\u6cd5\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7528\u7ebf\u6bb5\u6811\u3002\n\nQ\uff1a\u90a3\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u4ec0\u4e48\u5462\uff1f\n\nA\uff1a\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6700\u540e\u7ed9\u51fa\u7684 $q$ \u4e2a\u503c\n\nQ\uff1a\u4e3a\u4ec0\u4e48\u672c\u9898\u7684\u7ebf\u6bb5\u6811\u9700\u8981\u7ef4\u62a4 $\\min$ \u548c $\\max$ \u5462\uff1f\n\nA\uff1a\u56e0\u4e3a\u5728\u6700\u540e\u6211\u4eec\u9700\u8981\u5bf9\u5c0f\u4e8e $l$ \u7684\u6570\u8d4b\u503c\u4e3a $l$\uff0c\u5927\u4e8e $r$ \u7684\u6570\u8d4b\u503c\u4e3a $r$\uff0c\u53c8\u56e0\u4e3a\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u4e0d\u80fd\u4e00\u8fb9\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\uff0c\u6240\u4ee5\u53ea\u80fd\u5728\u6700\u540e\u6839\u636e $\\min$ \u503c \u4e0e $\\max$ \u503c\u6765~~\u66b4\u529b~~\u8d4b\u503c\u3002\n\nQ\uff1a\u4e3a\u4ec0\u4e48\u522b\u7684\u9898\u89e3\u9700\u8981\u5199\u5173\u4e8e\u8d4b\u503c\u7684 $tag$\uff0c\u4e0d\u662f\u76f4\u63a5\u8d4b\u503c\u5c31\u53ef\u4ee5\u4e86\u5417\uff1f\n\nA\uff1a\u60f3\u5565\u5462\uff1f\u6211\u4eec\u7684\u8d4b\u503c\u9700\u8981\u6309\u7167\u7ebf\u6bb5\u6811\u533a\u95f4\u4fee\u6539\u7684\u65b9\u5f0f\u6765\u4fee\u6539\uff0c\u5426\u5219\u4f1a\u8d85\u65f6\u7684\uff01\n\n## \u601d\u8def\n\n\u4ee5\u4e0a\u51e0\u70b9\uff0c\u90fd\u662f\u840c\u65b0\u559c\u6b22\u95ee\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u73b0\u5728\u6765\u8bb2\u4e00\u4e0b\u601d\u8def\uff1a\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u9488\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff0c\u90fd\u662f\u5bf9\u4e8e\u6574\u4e2a\u533a\u95f4\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u52a0\u4e0a $tag$\uff0c\u4e0d\u7528\u518d\u5199\u4e00\u5927\u5806\u7684 update \u51fd\u6570\u4e86\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u5c0f\u4e8e $l$ \u7684\u6570\u6216\u662f\u5927\u4e8e $r$ \u7684\u6570\uff0c\u6709\u7684\u8bdd\u5c31\u76f4\u63a5\u8d4b\u503c\u3002\n\n\u63a5\u4e0b\u6765\u5206\u51e0\u4e2a\u5c42\u6b21\u6765\u8bb2\uff1a\n\n1. addtag1\uff1a\u6253\u52a0/\u51cf\u6cd5\u6807\u8bb0\u3002\n\n2. addtag2\uff1a\u6253\u4e58\u6cd5\u6807\u8bb0\u3002\n\n3. addtag3\uff1a\u6253\u64cd\u4f5c $4$ \u7684\u6807\u8bb0\u3002\n\n4. addtag4\uff1a\u6253\u533a\u95f4\u8d4b\u503c\u7684\u6807\u8bb0\u3002\n\n### addtag1\n\n\u6211\u4eec\u53ef\u4ee5\u666e\u901a\u7684\u6253\u6807\u8bb0\uff0c\u7531\u4e8e\u52a0/\u51cf\u6cd5\u662f\u6700\u4f4e\u7ea7\u7684\u8fd0\u7b97\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u4efb\u4f55\uff0c\u76f4\u63a5\u52a0\u4e0a\u52a0\u6cd5\u6807\u8bb0\u5373\u53ef\u3002\n\nCode:\n\n```cpp\nvoid addtag1(int node, int val){\n  maxi[node] += val;    // maxi \u548c mini \u6570\u7ec4\u540c\u6837\u4e5f\u5f97\u52a0\u4e0a val\n  mini[node] += val;\n  tag1[node] += val;\n}\n```\n\n### addtag2\n\n\u6211\u4eec\u6839\u636e\u8fd0\u7b97\u77e5\u9053\uff1a\u7b2c\u4e00\u6b21\u5982\u679c\u4e58\u4e86 $3$\uff0c\u7b2c\u4e8c\u6b21\u4e58\u4e86 $5$\uff0c\u90a3\u4e48\u6700\u540e\u5c31\u4e58\u4e86 $3 \\times 5 = 15$\uff0c\u6240\u4ee5\u4e58\u6cd5\u6807\u8bb0\u662f\u4e58\u8d77\u6765\u7684\u5173\u7cfb\u3002\u6211\u4eec\u6839\u636e\u8fd0\u7b97\u53c8\u77e5\u9053\uff1a\u7b2c\u4e00\u6b21\u5982\u679c\u52a0\u4e86 $3$\uff0c\u7b2c\u4e8c\u6b21\u4e58\u4e86 $5$\uff0c\u90a3\u4e48\u6700\u540e\u5c31\u4e0d\u7ecf\u8ba9**\u539f\u6570**\u4e58\u4e86 $5$ \u800c\u4e14\u8fd8\u52a0\u4e86 $3 \\times 5 = 15$\uff0c\u6240\u4ee5\u52a0\u6cd5\u6807\u8bb0\u4e5f\u662f\u4e58\u7684\u5173\u7cfb\u3002\u7531\u4e8e\u64cd\u4f5c $4$ \u7684\u6807\u8bb0\u4e5f\u662f\u52a0\u6cd5\u8fd0\u7b97\uff0c\u6240\u4ee5\u8ddf\u4e0a\u9762\u540c\u7406\u3002\n\nCode:\n\n```cpp\nvoid addtag2(int node, int val){\n  maxi[node] *= val;   //\u8fd9\u91cc\u4ecd\u8981\u4e58\u4e0a\n  mini[node] *= val;\n  tag2[node] *= val;\n  tag1[node] *= val;\n  tag3[node] *= val;\n}\n```\n\n### addtag3\n\n\u7531\u4e8e\u8fd9\u4e2a\u64cd\u4f5c\u6709\u70b9\u602a\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u5de7\u5999\u7684\u89e3\u51b3\u5b83\uff1a\n\n\u6211\u4eec\u9996\u5148\u6309\u7167 $a$ \u7684\u503c\u6392\u4e2a\u5e8f\uff0c\u7531\u4e8e\u64cd\u4f5c\u65f6\u5168\u5c40\u4fee\u6539\uff0c\u6240\u4ee5\u4e0d\u8bba\u600e\u4e48\u4fee\u6539\uff0c\u6700\u5c0f\u7684\u4ecd\u7136\u8fd8\u662f\u6700\u5c0f\u7684\uff0c\u6700\u5927\u7684\u4ecd\u7136\u8fd8\u662f\u6700\u5927\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u52a0\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u8003\u8651\u53d8\u52a8\u7684\u6570\u4e86\u3002\n\nCode:\n\n```cpp\nvoid addtag3(int node, int lt, int rt, int val){\n  mini[node] += a[lt].x * val;   //\u76f4\u63a5\u52a0\u4e0a\u6700\u5c0f\u7684\u4e58\u4e0a val\u7684\u53ef\u4ee5\u4e86\uff0c\u6700\u5927\u503c\u540c\u7406\n  maxi[node] += a[rt].x * val;\n  tag3[node] += val;   //\u8fd9\u91cc\u662f\u52a0\u6cd5\u8fd0\u7b97\uff0c\u6240\u4ee5\u9700\u8981\u52a0\u8d77\u6765\n}\n```\n\n### addtag4\n\n\u7b80\u5355\u7684\u8d4b\u503c\uff0c\u53ea\u9700\u8981\u628a\u6240\u6709\u6807\u8bb0\u8fd8\u539f\u4e3a\u521d\u59cb\u72b6\u6001\u5c31\u884c\u4e86\u3002\n\nCode:\n\n```cpp\nvoid addtag4(int node, int val){\n  maxi[node] = mini[node] = val;\n  tag4[node] = val;\n  tag1[node] = 0;\n  tag2[node] = 1;\n  tag3[node] = 0;\n}\n```\n\n\u56db\u4e2a\u6807\u8bb0\u5168\u90e8\u8bb2\u5b8c\u4e86\uff0c\u7136\u540e pushdown \u5c31\u76f4\u63a5\u6309\u7167\u8fd0\u7b97\u4f18\u5148\u7ea7\u53bb\u6253\u6807\u8bb0\u5c31\u53ef\u4ee5\u4e86\u3002\n\npushdown\uff1a\n\n```cpp\nvoid pushdown(int node, int lt, int rt){   //\u4e00\u5b9a\u6309\u7167\u4f18\u5148\u7ea7\u53bb\u4e0b\u4f20\u6807\u8bb0\n  if(tag4[node] != 0){\n    addtag4(node << 1, tag4[node]);\n    addtag4(node << 1 | 1, tag4[node]);\n    tag4[node] = 0;\n  }\n  if(tag2[node] != 1){\n    addtag2(node << 1, tag2[node]);\n    addtag2(node << 1 | 1, tag2[node]);\n    tag2[node] = 1;\n  }\n  if(tag1[node] != 0){\n    addtag1(node << 1, tag1[node]);\n    addtag1(node << 1 | 1, tag1[node]);\n    tag1[node] = 0;\n  }\n  if(tag3[node] != 0){\n    int mid = lt + rt >> 1;\n    addtag3(node << 1, lt, mid, tag3[node]);\n    addtag3(node << 1 | 1, mid + 1, rt, tag3[node]);\n    tag3[node] = 0;\n  }\n}\n```\n\n\u6700\u540e\u7b80\u7b80\u5355\u5355\u7684\u8d4b\u503c\u64cd\u4f5c\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8d4b\u503c\u64cd\u4f5c\uff1a\n\n```cpp\nvoid Update_Max(int node, int lt, int rt){\n  if(mini[node] > R){\n    addtag4(node, R);   //\u76f4\u63a5\u6253\u6807\u8bb0\n    return ;\n  }\n  if(maxi[node] <= R){   //\u5982\u679c\u5c0f\u4e8e\u5c31\u4e0d\u9700\u8981\u7ee7\u7eed\u9012\u5f52\u4e86\n    return ;\n  }\n  if(lt == rt){\n    return ;\n  }\n  pushdown(node, lt, rt);\n  int mid = lt + rt >> 1;\n  Update_Max(node << 1, lt, mid);\n  Update_Max(node << 1 | 1, mid + 1, rt);\n  pushup(node);\n}\n\nvoid Update_Min(int node, int lt, int rt){   //\u540c\u7406\n  if(maxi[node] < L){\n    addtag4(node, L);\n    return ;\n  }\n  if(mini[node] >= L){\n    return ;\n  }\n  if(lt == rt){\n    return ;\n  }\n  pushdown(node, lt, rt);\n  int mid = lt + rt >> 1;\n  Update_Min(node << 1, lt, mid);\n  Update_Min(node << 1 | 1, mid + 1, rt);\n  pushup(node);\n}\n```\n\n\u6700\u540e\u53d6\u4e2a\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\uff1a\n\n```cpp\nvoid Have_ans(int node, int lt, int rt){\n  if(lt == rt){\n    a[lt].ans = mini[node];\n    return ;\n  }\n  pushdown(node, lt, rt);\n  int mid = lt + rt >> 1;\n  Have_ans(node << 1, lt, mid);\n  Have_ans(node << 1 | 1, mid + 1, rt);\n  pushup(node);\n}\n```\n\n\u6700\u540e\u7684\u4ee3\u7801\uff0c\u5c31\u4e0d\u7ed9\u4e86\u3002",
        "postTime": 1654240830,
        "uid": 363006,
        "name": "_Alexande_",
        "ccfLevel": 5,
        "title": "P4041 \u9898\u89e3"
    },
    {
        "content": "\u4e00\u4e2a $O(n\\log^2 n)$ \u7684\u795e\u5947\u505a\u6cd5\u3002\n\n\u8fd9\u9053\u9898\u548c\u90a3\u4e2a [P4588 \u6570\u5b66\u8ba1\u7b97](https://www.luogu.com.cn/problem/P4588)\u5f88\u50cf\uff0c\u6240\u4ee5\u80fd\u60f3\u5230\u628a\u6240\u6709\u6570\u4fdd\u5b58\u8d77\u6765\u505a\u64cd\u4f5c\u3002\n\n\u5148\u60f3\u60f3\u4e0a\u4e0b\u754c\u3002\u6211\u4eec\u73c2\u4ee5\u5148\u6392\u5e8f\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4 Min,Max\uff0c\u518d\u4e8c\u5206\u8981\u4fee\u6539\u7684\u4f4d\u7f6e\uff0c\u4e8c\u5206\u51fa\u6765\u540e\u533a\u95f4\u8d4b\u503c\u3002\u73c2\u4ee5\u7528\u7ebf\u6bb5\u6811\u3002\uff08\u8fd9\u91cc\u6211\u7684\u533a\u95f4\u8d4b\u503c\u662f\u5148\u4e58 $0$ \u518d\u52a0\u503c\uff09\n\n\u8fd9\u6837 $O(n\\log^2n)$ \u7684\u590d\u6742\u5ea6\uff1a\n\n```cpp\ninline void erfen1(){\n\tint le=1,ri=q;\n\twhile(le<=ri){\n\t\tint Mid=le+ri>>1;\n\t\tif(query2(1,1,q,1,Mid)<=L)le=Mid+1;\n\t\telse ri=Mid-1;\n\t}\n    if(le>=2){\n\t    modify2(1,1,q,1,le-1,0);\n\t    modify1(1,1,q,1,le-1,L);\n    } \n}\ninline void erfen2(){\n\tint le=1,ri=q;\n\twhile(le<=ri){\n\t\tint Mid=le+ri>>1;\n\t\tif(query3(1,1,q,Mid,q)>=R)ri=Mid-1;\n\t\telse le=Mid+1;\n\t}\n    if(ri<=q-1){\n\t    modify2(1,1,q,ri+1,q,0);\n\t    modify1(1,1,q,ri+1,q,R); \n    }\n}\n```\n\n\u7b2c\u4e00\u3001\u4e8c\u3001\u4e09\u4e2a\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001\u4e58\u6cd5\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u7ebf\u6bb5\u6811\u3002\n\n\u7b2c\u56db\u4e2a\u73c2\u4ee5\u60f3\u5230\u7528\u53e6\u4e00\u68f5\u7ebf\u6bb5\u6811\u5904\u7406\u4e00\u4e0b\u539f\u6570\u5217\u533a\u95f4\u6700\u5c0f\u3001\u5927\u503c\uff0c\u518d\u6253\u6807\u8bb0\u3002\n\n\u4f46\u5176\u5b9e\u4e0d\u9700\u8981\u3002\n\n\u56e0\u4e3a\u6392\u8fc7\u5e8f\uff0c\u800c\u4e58\u6cd5\u7684\u6570\u5b57\u90fd\u5927\u4e8e\u96f6\uff0c\u6240\u4ee5**\u76f8\u5bf9\u4f4d\u7f6e**\u4e0d\u4f1a\u6539\u53d8\u3002\n\n\u6240\u4ee5\u6211\u4eec\u73c2\u4ee5\u76f4\u63a5\u53d6\u5de6/\u53f3\u7aef\u70b9\u3002\n\n\u5c31\u662f\u8fd9\u6837\uff1a\n\n```cpp\n\ninline void GAN(int k,int l,int r,int v){\n\txds2[k]+=a[r].x*v;\n\txds3[k]+=a[l].x*v;\n\tgan[k]+=v;\n}\n```\n\u6700\u540e\uff0c\u5438\u53e3~~\u8001~~\u6c27\u5c31\u53ef\u4ee5\u5feb\u4e50\u5730\u8dd1\u8fc7\u53bb\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;//add mul gan min max sum\n#define int long long\nconst int maxn=1e5+5;\nint xds2[maxn<<2]/*\u6700\u5927*/,xds3[maxn<<2]/*\u6700\u5c0f*/,add[maxn<<2],mul[maxn<<2],gan[maxn<<2],ans[maxn];\nint op[maxn],num[maxn],n,L,R,q;//gan\u662f\u64cd\u4f5c4\nstruct nice{\n    int x,id;\n    bool operator <(const nice &b)const{return x<b.x;}\n}a[maxn];\n#define ls (k<<1)\n#define rs (k<<1|1)\n#define mid (l+r>>1)\ninline void pushup(int k){\n\txds2[k]=max(xds2[ls],xds2[rs]);\n\txds3[k]=min(xds3[ls],xds3[rs]);\n}\ninline void GAN(int k,int l,int r,int v){\n\txds2[k]+=a[r].x*v;\n\txds3[k]+=a[l].x*v;\n\tgan[k]+=v;\n}\ninline void ADD(int k,int l,int r,int v){\n\txds2[k]+=v,xds3[k]+=v;\n\tadd[k]+=v;\n}\ninline void MUL(int k,int l,int r,int v){\n\txds2[k]*=v,xds3[k]*=v,add[k]*=v,mul[k]*=v;gan[k]*=v;\n}\nvoid build(int k,int l,int r){\n\tmul[k]=1;\n\tif(l==r){\n\t\txds2[k]=xds3[k]=a[l].x;\n\t\treturn ;\n\t}\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tpushup(k); \n}\ninline void pushdown(int k,int l,int r){\n    if(mul[k]!=1){\n    \tMUL(ls,l,mid,mul[k]);\n\t    MUL(rs,mid+1,r,mul[k]);\n\t    mul[k]=1;\n    }\n    if(add[k]!=0){\n    \tADD(ls,l,mid,add[k]);\n    \tADD(rs,mid+1,r,add[k]);\n    \tadd[k]=0;\n    }\n    if(gan[k]!=0){\n    \tGAN(ls,l,mid,gan[k]);\n    \tGAN(rs,mid+1,r,gan[k]);\n    \tgan[k]=0;\n    }\n}\nvoid modify1(int k,int l,int r,int x,int y,int v){\n\tif(x<=l&&r<=y)return ADD(k,l,r,v);\n\tpushdown(k,l,r);\n\tif(x<=mid)modify1(ls,l,mid,x,y,v);\n\tif(mid<y)modify1(rs,mid+1,r,x,y,v);\n\tpushup(k);\n}\nvoid modify2(int k,int l,int r,int x,int y,int v){\n\tif(x<=l&&r<=y)return MUL(k,l,r,v);\n\tpushdown(k,l,r);\n\tif(x<=mid)modify2(ls,l,mid,x,y,v);\n\tif(mid<y)modify2(rs,mid+1,r,x,y,v);\n\tpushup(k);\n}\nvoid modify3(int k,int l,int r,int x,int y,int v){\n\tif(x<=l&&r<=y)return GAN(k,l,r,v);\n\tpushdown(k,l,r);\n\tif(x<=mid)modify3(ls,l,mid,x,y,v);\n\tif(mid<y)modify3(rs,mid+1,r,x,y,v);\n\tpushup(k);\n}\nint query(int k,int l,int r,int x){\n\tif(l==r)return xds2[k];\n    pushdown(k,l,r);\n\tif(x<=mid)return query(ls,l,mid,x);\n\telse return query(rs,mid+1,r,x);\n}\nint query2(int k,int l,int r,int x,int y){\n\tif(x<=l&&r<=y)return xds2[k];\n\tpushdown(k,l,r);\n\tint res=-0x3f3f3f3f3f3f3f3f;\n\tif(x<=mid)res=max(res,query2(ls,l,mid,x,y));\n\tif(mid<y)res=max(res,query2(rs,mid+1,r,x,y));\n\treturn res;\n}\nint query3(int k,int l,int r,int x,int y){\n\tif(x<=l&&r<=y)return xds3[k];\n\tpushdown(k,l,r);\n\tint res=0x3f3f3f3f3f3f3f3f;\n\tif(x<=mid)res=min(res,query3(ls,l,mid,x,y));\n\tif(mid<y)res=min(res,query3(rs,mid+1,r,x,y));\n\treturn res;\n}\ninline void erfen1(){\n\tint le=1,ri=q;\n\twhile(le<=ri){\n\t\tint Mid=le+ri>>1;\n\t\tif(query2(1,1,q,1,Mid)<=L)le=Mid+1;\n\t\telse ri=Mid-1;\n\t}\n    if(le>=2){\n\t    modify2(1,1,q,1,le-1,0);\n\t    modify1(1,1,q,1,le-1,L);\n    } \n}\ninline void erfen2(){\n\tint le=1,ri=q;\n\twhile(le<=ri){\n\t\tint Mid=le+ri>>1;\n\t\tif(query3(1,1,q,Mid,q)>=R)ri=Mid-1;\n\t\telse le=Mid+1;\n\t}\n    if(ri<=q-1){\n\t    modify2(1,1,q,ri+1,q,0);\n\t    modify1(1,1,q,ri+1,q,R); \n    }\n}\nsigned main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\tcin>>n>>L>>R;\n\tfor(int i=1;i<=n;i++){\n\t\tchar c;\n\t\tcin>>c>>num[i];\n\t\tif(c=='+'){\n\t\t\top[i]=1;\n\t\t}\n\t\tif(c=='-'){\n\t\t\top[i]=1,num[i]=-num[i];\n\t\t}\n\t\tif(c=='*'){\n\t\t\top[i]=2;\n\t\t}\n\t\tif(c=='@'){\n\t\t\top[i]=3;\n\t\t}\n\t}\n\tcin>>q;\n\tfor(int i=1;i<=q;i++)cin>>a[i].x,a[i].id=i;\n\tsort(a+1,a+q+1);\n    build(1,1,q);\n\tfor(int i=1;i<=n;i++){\n\t\tif(op[i]==1)ADD(1,1,q,num[i]);\n\t\tif(op[i]==2)MUL(1,1,q,num[i]);\n\t\tif(op[i]==3)GAN(1,1,q,num[i]);\n\t\terfen1();\n\t\terfen2();\n\t}\n    for(int i=1;i<=q;i++)ans[a[i].id]=query(1,1,q,i);\n    for(int i=1;i<=q;i++)cout<<ans[i]<<endl;\n\treturn 0;\n} \n```",
        "postTime": 1630119770,
        "uid": 342076,
        "name": "British_Union",
        "ccfLevel": 5,
        "title": "haoti"
    }
]