[
    {
        "content": "\u4ecek\u4e2a\u5976\u725b\u5206\u522bdfs\uff0c\u7528mk[i]\u8868\u793a\u7b2ci\u4e2a\u7267\u573a\u88ab\u904d\u5386\u8fc7\u591a\u5c11\u6b21\uff0c\u6700\u540e\u53ea\u6709mk[i]==k\u7684\u7267\u573a\u6ee1\u8db3\u6761\u4ef6\u3002\u65e0\u6743\u7684\u6709\u5411\u56fe\u4e5f\u53ef\u4ee5\u7528vector\u5b58\u50a8\u3002\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nbool vis[1010];\nint k,n,m,ans;\nint mk[1010],a[1010];\nvector <int> b[1010];\nvoid dfs(int x)\n{\n     vis[x]=1;  mk[x]++;\n     for(int i=0;i<b[x].size();i++)\n         if(!vis[b[x][i]])\n             dfs(b[x][i]);\n}\nint main()\n{\n    int x,y;\n    cin>>k>>n>>m;\n    for(int i=1;i<=k;i++) cin>>a[i];\n    for(int i=1;i<=m;i++) \n    {\n        cin>>x>>y;\n        b[x].push_back(y);\n    }\n    for(int i=1;i<=k;i++) { for(int j=1;j<=n;j++) vis[j]=0;  dfs(a[i]);}\n    for(int i=1;i<=n;i++) if(mk[i]==k) ans++;\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1482490991,
        "uid": 12617,
        "name": "xueyangkai",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "\u65e0\u804a\u6765\u5199\u7bc7\u9898\u89e3\u3002\u3002\u3002\n\n\n\u7b97\u6cd5\u5f88\u7b80\u5355\uff1a\u6df1\u641c\uff08dfs\uff09\n\n\u4e00\u5f00\u59cb\uff0c\u6211\u60f3\u5c06\u6bcf\u4e2a\u7267\u573a\u9010\u4e2a\u6df1\u641c\uff0c\u770b\u80fd\u5426\u662f\u6240\u6709\u5976\u725b\u5230\u8fbe\u3002\n\n\u7136\u540e\uff1a70\u5206\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint k,n,m,c,ans;\nint a[1001][1001];\nint live[1001],flag[1001];\nint dfs(int p){\n//\tcout<<p<<\" \";\n    for(int i=1;i<=n;i++)\n    {\n        if(flag[i]==0&&a[i][p]){\n            if(live[i]==1){\n                c++;\n            }\n            flag[i]=1;\n            dfs(i);\n            flag[i]=0;\n        }\n        if(c==k)return 0;\n    }\n}\nint main(){\n    cin>>k>>n>>m;\n    if(k==1){\n        cin>>c;\n        cout<<c<<endl;\n        return 0;\n    }\n    for(int i=1;i<=k;i++){\n        int place;\n        cin>>place;\n        live[place]=1;//\u6709\u725b\u7684\u7267\u573a \n    }\n    for(int i=1;i<=m;i++){\n        int p1,p2;\n        cin>>p1>>p2;\n        a[p1][p2]=1;\n    }\n//\t\tfor(int i=1;i<=n;i++){\n//\t\t\tif(live[i])cout<<\"*\";\n//\t\tfor(int j=1;j<=n;j++)\n//\t\t\tcout<<a[i][j]<<\" \";\n//\t\t\tcout<<endl;\n//\t}\n    for(int i=1;i<=n;i++){\n        c=0;\n        memset(flag,0,sizeof(flag));\n        if(live[i]==1)c++;\n        flag[i]=1;\n        dfs(i);\n        if(c==k){\n//\t\t\tcout<<endl;\n//\t\t\tcout<<\"*\"<<i<<\" \"<<c<<endl;\n            ans++;\n        }\n//\t\tcout<<endl;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n\n\n\u540e\u6765\u526a\u679d\u4e5f\u526a\u4e0d\u52a8\u4e86\uff0c\u6211~~\u7075\u673a\u4e00\u52a8~~\uff1a\n\n\u4e3a\u751a\u8981\u8ba9\u7267\u573a\u627e\u5976\u725b\uff0c\u8ba9\u5976\u725b\u627e\u7267\u573a\u4e0d\u5c31\u5f97\u4e86\uff01\n\n\u56e0\u4e3a\u662f\u6709\u5411\u56fe\uff0c\u65b9\u5411\u53d8\u4e00\u4e0b\u5c31\u597d\u4e86\uff01\n\nAC!\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint k,n,m,c,ans;\nint a[1001][1001];\nint live[1001],flag[1001][1001];\nint dfs(int p){\n//\tcout<<p<<\" \";\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(flag[c][i]==0&&a[p][i]){//a[i][p]\u53d8\u6210a[p][i]\n\t\t\tflag[c][i]=1;\n\t\t\tdfs(i);\n\t\t}\n\t}\n}\nint main(){\n\tcin>>k>>n>>m;\n\tif(k==1){\n\t\tcin>>c;\n\t\tcout<<c<<endl;\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=k;i++){\n\t\tint place;\n\t\tcin>>place;\n\t\tlive[place]=1;//\u6709\u725b\u7684\u7267\u573a \n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint p1,p2;\n\t\tcin>>p1>>p2;\n\t\ta[p1][p2]=1;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(live[i]==1){\n\t\t\tc=i;\n\t\t\tflag[i][i]=1;\n\t\t\tdfs(i);\n\t}\n//\tfor(int i=1;i<=n;i++){\n//\t\tfor(int j=1;j<=n;j++)\n//\t\t\tcout<<flag[i][j]<<\" \";\n//\t\t\tcout<<endl;\n//\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint sum=1;\n\t\tfor(int j=1;j<=n;j++)if(flag[j][i]==0&&live[j])sum=0;//\u6838\u5fc3\uff01\u5982\u679c\u8fd9\u4e2a\u7267\u573a\u6709\u5976\u725b\u5230\u8fbe\u4e0d\u4e86\uff0c\u5c31\u4e0d\u80fd\u4f5c\u4e3a\u805a\u4f1a\u7267\u573a\n\t\tif(sum==1)ans++;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1562051673,
        "uid": 114504,
        "name": "\u68a6\u91cc\u8c03\u97f3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "### \u53cd\u5411\u5efa\u8fb9+dfs\n\n\u7528f\u8bb0\u5f55\u4e00\u4e2a\u7267\u573a\u662f\u5426\u6709cow\uff0c\u5982\u679c\u6ca1\u6709cow\uff0c\u5219\u4e0d\u7528\u7ba1\u8fd9\u4e2a\u7267\u573a\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u70b9\u4f5c\u4e3acow\u91ce\u9910\u7684\u5730\u65b9\uff0cdfs\uff0c\u7528vis\u8bb0\u5f55\u4e00\u4e2a\u7267\u573a\u80fd\u4e0d\u80fd\u88ab\u8bbf\u95ee\u5230\uff0c\u7136\u540efor\u4e00\u904d\u5224\u65ad\u8be5\u7267\u573a\u662f\u5426\u6709cow\uff0c\u548c\u8be5\u7267\u573a\u80fd\u4e0d\u80fd\u88ab\u679a\u4e3e\u7684\u70b9\u8d70\u5230\uff0c\u5c31\u505a\u5b8c\u4e86\u3002\n### \u6ce8\u610f\uff0c\u6bcf\u6b21dfs\u65f6\uff0cvis\u6570\u7ec4\u8981\u6e05\u7a7a\uff0c\u6211\u7b2c\u4e00\u6b21\u4ea4\u5fd8\u8bb0\u6e05\u7a7a\uff0c\u7ed3\u679c\u5c31WA\u4e86\uff0c30\u5206\n\n$Code :$\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\ninline int read(){\n\tregister int x=0,v=1,ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')v=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=(x<<3)+(x<<1)+(ch^'0');ch=getchar();}\n\treturn x*v;\n}\nconst int MAX=1005,N=10005;\nint k,n,m;\nstruct Edge{\n\tint e,next;\n}e[N];\nint head[MAX],cnt;\ninline void add(int u,int v){\n\te[cnt].e=v;\n\te[cnt].next=head[u];\n\thead[u]=cnt++;\n}\nint u,v,Ans=0;bool f[MAX],vis[MAX];\nvoid dfs(int now){\n\tvis[now]=1;\n\tfor(register int i=head[now];i;i=e[i].next){\n\t\tif(!vis[e[i].e])dfs(e[i].e);\n\t}\n}\nint main(){\n\tk=read(),n=read(),m=read();\n\tfor(register int i=1;i<=k;++i){\n\t\tf[read()]=1;\n\t}\n\tfor(register int i=1;i<=m;++i){\n\t\tu=read(),v=read();\n\t\tadd(v,u);\n\t}\n\tfor(register int i=1;i<=n;++i){\n\t\tmemset(vis,0,sizeof(vis));\n\t\tdfs(i);\n\t\tfor(register int j=1;j<=n;++j){\n\t\t\tif(vis[j]!=1&&f[j]==1){\n\t\t\t\tgoto end;\t\n\t\t\t}\n\t\t}\n\t\t++Ans;\n\t\tend:;\n\t}\n\tprintf(\"%d\\n\",Ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1573565321,
        "uid": 119062,
        "name": "Lates",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "\u8fd9\u9898\u771f\u5fc3\u7b80\u5355\uff08QWQ\u6211\u7b2c\u4e00\u6b21\u624b\u6b8b\u53ea\u8fc7\u4e8650\uff09\n\n\u88f8\u7684DFS\n\n\u56e0\u4e3a\u9700\u8981\u627e\u5230k\u5934\u5976\u725b\u80fd\u5230\u7684\u5730\u65b9\uff0c\u4e0d\u96be\u60f3\u5230\u5bf9cow[i]\u8fdb\u884cDFS\uff0c\u5b58\u50a8\u6bcf\u4e2a\u70b9\u6709\u591a\u5c11\u5934\u5976\u725b\u80fd\u5230\uff0c\u6700\u540e\u904d\u5386\u4e00\u4e0b\uff0c\u627e\u51faans[i]=k\u7684\u4e2a\u6570\u5373\u53ef\n\n\u7136\u540e\u8bf4\u4e00\u8bf4\u526a\u679d\uff1a\n\n\u6211\u672c\u6765\u770b\u8fd9\u9053\u9898\u76ee\u662f\u60f3\u526a\u526a\u679d\u7684\uff08\u6d1b\u8c37P2921\u6298\u78e8\u7684\uff09\uff0c\u540e\u6765\u53d1\u73b0k,n\u8303\u56f4\u5b9e\u5728\u592a\u5c0f\uff0c\u5c31\u4e0d\u526a\u4e86\n\n\u5176\u5b9e\u662f\u53ef\u4ee5\u526a\u7684\uff0c\n\n\u9996\u5148\u8003\u8651\u4e00\u4e2a\u70b9\uff0c\u82e5\u8fd9\u4e2a\u70b9\u6ca1\u6709\u5165\u5ea6\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5continue\u6389\u8fd9\u4e2a\u70b9\uff08~~\u5e9f\u8bdd~~\uff09\n\n\u7136\u540e\u53d1\u73b0\uff0c\u5982\u679c\u51e0\u4e2a\u70b9\u6784\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u6211\u4eec\u5047\u8bbe\u8fd9\u4e9b\u70b9\u662fa1,a2,...an,\u65b9\u5411\u4e3aa1->a2->...->an->a1\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u641c\u7d22\u7684\u65f6\u5019\u76f4\u63a5\u5224\u65ad\u73af\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u5c06a1->an\u5373\u53ef\uff08\u6765\u81ea\u4e8eP2921\u7684\u542f\u53d1\uff09\n\n\u4e0a\u4ee3\u7801\uff08\u597d\u77ed\u7684\u4ee3\u7801\uff09\uff1a\n```cpp\n//\u6570\u636e\u91cf\u592a\u5c0f\uff0c\u5b9e\u5728\u4e0d\u60f3\u526a\u679d\u4e86\n//\u6211\u662f\u7528\u7684\u4e0d\u662f\u90bb\u63a5\u8868\uff0c\u5982\u679c\u6570\u636e\u91cf\u8f83\u5927\u7684\u9898\u76ee\u5efa\u8bae\u4f7f\u7528\u90bb\u63a5\u8868\u9632\u7206\u5185\u5b58\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int N = 1e3 + 5;\nint mp[N][N],n,m,k,res;\nint ans[N],vis[N],cow[N];\nvoid dfs(int u)//\u4ee5u\u4e3a\u5f53\u524d\u70b9\uff0c\u5411\u5468\u56f4\u7684\u70b9DFS\n{\n\t++ans[u];//\u8bb0\u5f55\u7b54\u6848\n\tvis[u]=1;//\u6807\u8bb0\n\tfor(int i=1;i<=n;++i)\n\t\tif (mp[u][i]&&!vis[i])//\u6211\u6253\u4ee3\u7801\u7684\u65f6\u5019\u624b\u6b8b\u4e86\u6253\u6210\u4e86mp[i][u]\uff0c\u663e\u7136\u7206\u70b8\u621050\u5206 \n\t\t\tdfs(i);\n}\nint main()\n{\n\tcin>>k>>n>>m;\n\tfor (int i=1;i<=k;++i)\n\t\tcin>>cow[i];\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint ver,from;\n\t\tcin>>from>>ver;\n\t\tmp[from][ver]=1;//\u5b58\u8fb9\n\t}\n\tfor(int i=1;i<=k;++i)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tvis[cow[i]]=1;\n\t\tdfs(cow[i]);//\u5bf9\u6bcf\u4e00\u5934\u725b\u6240\u5728\u7684\u4f4d\u7f6e\u8fdb\u884cDFS\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tif (ans[i]==k) ++res;//\u67e5\u627e\u7b54\u6848\n\tcout<<res<<endl;\n\treturn 0;\n}\n```\n\n\u6ca1\u641e\u61c2\u597d\u591aMLE\u7684\uff0c1000*1000\u7684\u7a7a\u95f4\u8db3\u591f\u554a\u2026\u2026",
        "postTime": 1570199399,
        "uid": 35148,
        "name": "Lying_Flat666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "> \u95f2\u5f97\u614c\u5c31\u6765\u6c34\u4e86\u53d1\u9898\u89e3\uff0c\u56e0\u4e3a\u6559\u7ec3\u53eb\u7740\u51fa\u9898\u6240\u4ee5\u7ae5\u978b\u4eec\u5c31\u627e\u4e86\u4e00\u9053\u8fd9\u6837\u7684\u597d\u9898\u3002\u3002\u3002\n\n\u9898\u76ee\u610f\u601d\u662f\u5b58\u5728\u725b\u7684\u5730\u65b9\u5bfb\u627e\u5176\u4ed6\u5730\u65b9\u6765\u8fdb\u884c\u805a\u9910\uff0c\u53cd\u6b63\u6211\u7684\u7b2c\u4e00\u5370\u8c61\u5c31\u662fbfs\uff0c\u6bd5\u7adf\u8981\u5bfb\u627e\u4f60\u7528dfs\u548b\u60f3\u548b\u4e5f\u4e0d\u9760\u8c31\uff0c\u800cbfs\u53ef\u4ee5\u6269\u5c55\u66f4\u591a\u7684\u70b9\u3002\n\n\u7136\u540e\u5c31\u662f\u89e3\u9898\u601d\u8def\uff0c\u9009\u62e9\u6709\u725b\u7684\u7267\u573a\u8fdb\u884c\u6269\u5c55\uff0c\u7136\u540e\u5f00\u4e00\u4e2a\u8ba1\u6570\u6570\u7ec4\u8ba1\u6570\uff0c\u6bcf\u904d\u5386\u5230\u4e00\u4e2a\u70b9\u5c31\u6709\u8be5\u70b9\u8ba1\u6570\u5668\u52a0\u4e00\uff0c\u6700\u540e\u7edf\u8ba1\u5982\u679c\u8fd9\u4e2a\u70b9\u6709k\u6b21\uff0c\u90a3\u4e48\u6240\u6709\u7684\u5976\u725b\u5c31\u90fd\u6765\u8fc7\u8fd9\u91cc\uff0cans++\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nint k,n,m,val;\nconst int N = 10001;\nstruct edge\n{\n\tint next,to;\n}e[N<<1];\nint head[N<<1],tot,c[N],vis[N],s[N];\nvoid add(int x,int y){\n\te[++tot].next=head[x];\n\thead[x]=tot;\n\te[tot].to=y;\n}\nvoid bfs(int x){\n\tqueue<int>q;\n\tq.push(x);\n\tvis[x]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].to;\n\t\t\tif(!vis[v]){\n\t\t\t\tvis[v]=1;\n\t\t\t\ts[v]++;//\u6bcf\u904d\u5386\u5230\u8be5\u70b9\u8ba1\u6570\u5668\u52a0\u4e00\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&k,&n,&m);\n\tfor(int i=1;i<=k;i++) {scanf(\"%d\",&c[i]);s[c[i]]++;}//\u4e00\u5f00\u59cb\u5148\u8ba1\u6570\n\tfor(int i=1;i<=m;i++){\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tadd(a,b);\n\t}\n\tfor(int i=1;i<=k;i++){\n\t\tmemset(vis,0,sizeof(vis));//\u6e05\u7a7a\n\t\tbfs(c[i]);\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tif(s[i]==k)ans++;//\u7edf\u8ba1\u7b54\u6848\n\tprintf(\"%d\",ans);\n}\n\n```\n\u7ba1\u7406\u5927\u5927\u6c42\u8fc7",
        "postTime": 1536563391,
        "uid": 78228,
        "name": "\u6211\u6ca1\u6709\u5c0f\u767d",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "/\\*\n\u4e3a\u4ec0\u4e48\u5927\u5bb6\u90fd\u8981\u5199dfs,\u6216\u6700\u77ed\u8def\u5462\uff1f\u8fd9\u9053\u9898\u600e\u4e48\u770b\u90fd\u662fbfs\u554a\uff01\n\n\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u725b\u7684\u8d77\u59cb\u70b9\uff0c\u7528bfs\u62d3\u5c55\u4e00\u4e0b\u5b83\u90fd\u80fd\u5230\u54ea\u91cc\uff0c\u7136\u540e\u8ba9\u8fd9\u4e2a\u70b9\u7684\u8ba1\u6570\u52a01\uff0c\n\n\u6700\u540e\u770b\u4e00\u4e0b\u90fd\u6709\u591a\u5c11\u70b9\u7684\u8ba1\u6570\u662fk\u5c31\u597d\u4e86\u561b\u3002\n\n\u8fd9\u6837\u770b\u8d77\u6765\u597d\u50cf\u8ddf\u6700\u77ed\u8def\u7684\u601d\u8def\u5dee\u4e0d\u591a\uff0c\u4e0d\u8fc7\u4e0d\u7528\u53cd\u5411\u5efa\u8fb9\uff0c\u6211\u89c9\u5f97\u5e94\u8be5\u66f4\u597d\u60f3\u5427\uff0c\u800c\u4e14\u62d3\u5c55\u53ef\u8fbe\u70b9\u8fd9\u79cd\u95ee\u9898\u4e0d\u5e94\u8be5\u5c31\u7528bfs\u800c\u4e0d\u662fdfs\u5417\n\n\\*/\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#include<string>\n#include<queue>\n#include<map>\n#include<vector>\n#include<ctime>\n#define ll long long\n#define R register\n#define Rf(a,b,c) for(R int (a)=(b);(a)<=(c);++(a))\n#define Tf(a,b,c) for(R int (a)=(b);(a)>=(c);--(a))\n#define D double\nusing namespace std;\nconst int N=1005,M=10005; \nint k,m,n,head[N],tot,a[105],cnt[N],vis[N];\n//a\u5b58\u6bcf\u4e2a\u725b\u7684\u4f4d\u7f6e\uff0ccnt\u4e3a\u6bcf\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u725b\u7684\u8ba1\u6570\uff0cvis\u7528\u6765\u5bbd\u641c\u65f6\u5224\u65ad\u662f\u5426\u80fd\u5230\u8fbe \nstruct node {\n    int to,next;\n}e[M];//\u5b58\u56fe \nqueue <int> q; \ninline int read() {//\u8bfb\u5165\u53ca\u8f93\u51fa\u4f18\u5316 \n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x*=10;x+=(ch-'0');ch=getchar();}\n    return x*f;\n}\ninline void write(int x) {\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\ninline void add(int u,int v) {e[++tot].next=head[u];e[tot].to=v;head[u]=tot;}\nint main()\n{\n    k=read();n=read();m=read();\n    Rf(i,1,k) a[i]=read();\n    Rf(i,1,m) {\n        R int u=read(),v=read();\n        add(u,v);//\u8981\u5efa\u7684\u662f\u5355\u5411\u8fb9 \n    }\n    Rf(i,1,k) {//\u770b\u770b\u6bcf\u5934\u725b\u90fd\u80fd\u5230\u54ea\u91cc \n        memset(vis,0,sizeof(vis));//\u6ce8\u610f\u6bcf\u6b21\u90fd\u8981\u628avis\u6e050 \n        q.push(a[i]);vis[a[i]]=1;\n        while(!q.empty()) {//\u5bbd\u641c \n            R int now=q.front();q.pop();\n            for(int i=head[now];i;i=e[i].next) {\n                R int v=e[i].to;\n                if(!vis[v]) {\n                    vis[v]=1;//\u628a\u6bcf\u4e00\u4e2a\u53ef\u8fbe\u70b9\u90fd\u6807\u8bb0\u62101 \n                    q.push(v);\n                }\n            }\n        }\n        Rf(i,1,n) if(vis[i]) cnt[i]++;//\u5982\u679c\u8fd9\u4e2a\u70b9\u53ef\u8fbe\uff0c\u8fd9\u4e2a\u70b9\u7684\u8ba1\u6570\u52a01 \n    }\n    tot=0;\n    Rf(i,1,n) {\n        if(cnt[i]==k) tot++;//\u7edf\u8ba1\u90fd\u6709\u591a\u5c11\u4e2a\u70b9\u7684\u8ba1\u6570\u4e3ak(\u5373\u6240\u6709\u725b\u90fd\u80fd\u5230) \n    }\n    write(tot);\n    return 0;\n}\n\n```",
        "postTime": 1505780015,
        "uid": 35700,
        "name": "Khassar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "\n## \u770b\u5230\u8fd9\u9053\u9898\uff0c\u679c\u65ad\u4e00\u4e2a\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u518d\u52a0\u51e0\u4e2afor\u548c\u641c\u7d22\u5c31A\u4e86\uff0c\u901f\u5ea6\u8fd8\u633a\u5feb\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint k,n,m,c,ans,h[1009],p[102],cc[1009];bool vis[1009];\nstruct jyz{int n,t,d;}e[10005];\nvoid add(int a,int b){\n\te[++c].n=h[a];\n\th[a]=c;\n\te[c].t=b;}//\u94fe\u5f0f\u524d\u5411\u661f\nvoid dfs(int x){\n\tcc[x]++;\n\tfor(register int i=h[x];i;i=e[i].n){\n\t\tint a=e[i].t;\n\t\tif(\uff01vis[a]){vis[a]=1;dfs(e[i].t);\n\t\t}\n\t\t}return;\n\t}//\u5012\u6c34\u641c\u7d22\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>k>>n>>m;int a,b;\n\tfor(register int i=1;i<=k;i++){cin>>p[i];}\n\tfor(register int i=1;i<=m;i++){cin>>a>>b;add(a,b);}\n\tfor(register int i=1;i<=k;i++){vis[p[i]]=1;dfs(p[i]);memset(vis,0,sizeof(vis));}\n\tfor(register int i=1;i<=n;i++){if(cc[i]==k){ans++;}}//\u91cd\u53e0\u90e8\u5206\u4e3a\u89e3\n\tcout<<ans<<endl;\n\tsystem(\"pause\");\n\treturn 0;\n\t}\n```\n",
        "postTime": 1573122096,
        "uid": 168466,
        "name": "jingyangzhi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "\n\u8fd9\u662f\u4e00\u9053\u5bf9\u56fe\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7684\u4e00\u9053\u5f88\u597d\u7684\u7ec3\u4e60\u9898\u3002\n\n\u4ece\u9898\u9762\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u8fd9\u9053\u9898\u76ee\u662f\u8ba9\u6211\u4eec\u5bf9\u6bcf\u53ea\u5976\u725b\u6240\u5728\u7684\u70b9\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u627e\u5230\u904d\u5386\u7684\u6b21\u6570\u6b63\u597d\u7b49\u4e8e\u5976\u725b\u6570\u7684\u70b9\uff0c\u6700\u540e\u8f93\u51fa\u8fd9\u6837\u7684\u70b9\u7684\u6570\u91cf\u3002\n\n\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4$s[x]$\u8868\u793a\u70b9$x$\u88ab\u904d\u5386\u7684\u6b21\u6570\uff0c\u5982\u679c\u904d\u5386\u5230\u4e86\u70b9$x$\uff0c\u90a3\u4e48$s[x]$\u5c31\u52a0$1$\u3002\n\n\u6ce8\u610f\uff1a\u6bcf\u6b21\u904d\u5386\u4e4b\u524d\u90fd\u9700\u8981\u5c06\u5224\u65ad\u70b9\u662f\u5426\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684$vis[]$\u6570\u7ec4\u6e05\u7a7a\uff0c\u5e76\u4e14\u6bcf\u6b21\u5728\u904d\u5386\u4e0b\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u90fd\u9700\u8981\u5224\u65ad\u70b9\u662f\u5426\u5df2\u7ecf\u8bbf\u95ee\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u70b9\u5728\u6bcf\u6b21\u904d\u5386\u4e2d\u90fd\u662f\u6700\u591a\u8bbf\u95ee$1$\u6b21\u3002\n\n\u53e6\u5916\uff0c\u672c\u9898\u4e2d$n$\u7684\u8303\u56f4\u5e76\u4e0d\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u6765\u5b58\u56fe\u3002\n\n\u4e0d\u96be\u5f97\u51fa$AC$\u4ee3\u7801\u3002\n\n### \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <cctype>//\u5934\u6587\u4ef6\u51c6\u5907\n\nusing namespace std;//\u4f7f\u7528\u6807\u51c6\u540d\u5b57\u7a7a\u95f4\n\n//\u4ee5\u4e0b\u4e3a\u5feb\u901f\u8bfb\u5165\ninline int gi()\n{\n\tint f = 1, x = 0; char c = getchar();\n\twhile (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar();}\n\twhile (c >= '0' && c <= '9') { x = x * 10 + c - '0'; c = getchar();}\n\treturn f * x;\n}\n\nint n, m, k, ans, g[1003][1003], c[1003], s[1003], vis[1003];\n//n,m,k\u7684\u542b\u4e49\u5982\u9898\u9762,ans\u4e3a\u6700\u7ec8\u7b54\u6848,g\u6570\u7ec4\u4e3a\u90bb\u63a5\u77e9\u9635,c\u6570\u7ec4\u5b58\u50a8\u725b\u7684\u4f4d\u7f6e,s\u6570\u7ec4\u4e3a\u6bcf\u4e2a\u70b9\u88ab\u904d\u5386\u7684\u6b21\u6570,vis\u6570\u7ec4\u7528\u6765\u5224\u65ad\u70b9\u662f\u5426\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\n\nvoid dfs(int x)//\u8fdb\u884c\u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386\n{\n    vis[x] = 1;//\u5c06\u73b0\u5728\u8bbf\u95ee\u7684\u70b9\u6807\u8bb0\u4e3a\u5df2\u904d\u5386\n    ++s[x];//\u5c06\u8fd9\u4e2a\u70b9\u904d\u5386\u7684\u6b21\u6570+1\n    for (int i = 1; i <= n; i++)//\u679a\u4e3e\u8282\u70b9\u7f16\u53f7\n    {\n        if (!vis[i] && g[x][i]) //\u5982\u679c\u5f53\u524d\u8282\u70b9\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u5e76\u4e14\u4e0e\u5f53\u524d\u8282\u70b9\u6709\u8fb9\u8fde\u63a5\n            dfs(i);//\u5c31\u904d\u5386i\u53f7\u8282\u70b9\n    }\n}\n\nint main()\n{\n    k = gi(), n = gi(), m = gi();//\u5206\u522b\u8f93\u5165k,m,n(\u6ce8\u610f\u987a\u5e8f)\n    for (int i = 1; i <= k; i++) c[i] = gi();//\u8f93\u5165\u6bcf\u53ea\u5976\u725b\u7684\u987a\u5e8f\n    for (int i = 1; i <= m; i++)\n    {\n        int u = gi(), v = gi(); //\u8f93\u5165\u8fb9\u4e24\u7aef\u7684\u70b9\u7684\u7f16\u53f7\n        g[u][v] = 1;//\u8fde\u63a5\u4e24\u8fb9(\u6ce8\u610f\u4e0d\u662f\u53cc\u5411\u8fb9,\u662f\u5355\u5411\u8fb9)\n    }\n    for (int i = 1; i <= k; i++)//\u5bf9\u5976\u725b\u7684\u4f4d\u7f6e\u8fdb\u884c\u679a\u4e3e\n    {\n        dfs(c[i]);//\u4ece\u6bcf\u4e00\u53ea\u5976\u725b\u7684\u4f4d\u7f6e\u5f00\u59cb\u904d\u5386\n        memset(vis, 0, sizeof(vis));//\u8bb0\u5f97\u6bcf\u6b21\u904d\u5386\u5b8c\u90fd\u9700\u8981\u6e05\u7a7a\u6807\u8bb0\u6570\u7ec4\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        if (s[i] == k) ++ans;//\u7edf\u8ba1\u7b54\u6848\uff0c\u5982\u679c\u5f53\u524d\u8282\u70b9\u88ab\u8bbf\u95ee\u7684\u6b21\u6570\u6070\u597d\u4e3a\u5976\u725b\u7684\u53ea\u6570\n    }\n    printf(\"%d\\n\", ans);//\u8f93\u51fa\u6700\u540e\u7b54\u6848\n    return 0;//\u5b8c\u7f8e\u7ed3\u675f\n}\n```\n\u5b8c\u7ed3\u6492\u82b1~",
        "postTime": 1561986339,
        "uid": 70581,
        "name": "xsI666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "~~\u6211\u53c8\u53cc\u53d2\u53d5\u6765\u5199\u9898\u89e3\u4e86!o(*\uffe3\u25bd\uffe3*)\u30d6~~  \n~~\u8fd9\u9898\u5f88\u5f3a\uff0c\u552f\u4e00\u4e00\u9053\u628a\u6211\u5361\u6210MLE\u7684\u9898~~\n\n\u597d\u7684\uff0c\u5176\u5b9e\u8fd9\u9898\u5c31\u662f\u4e2aDFS\uff0c\u5982\u679c\u725b\u7684\u603b\u6570\u7b49\u4e8e\u8fd9\u4e2a\u70b9\u7684\u8bbf\u95ee\u6570\uff0cans++\uff1b\u6bd4\u5982\u8fd9\u4e2a\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/60237.png)\n\n\u5982\u679c\u57281\u53f7\u548c2\u53f7\u70b9\u6709\u725b\uff0c\u5219\u6b21\u6570\u5206\u522b\u662f\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/60238.png)\n\u7ecf\u8fc7~~\u4eba\u8089~~\u641c\u7d22\uff0c\u53ef\u77e5\u6b63\u786e\u7684\u70b9\u662f2\u53f7\u548c3\u53f7\uff0c\u518d\u770b\u770b\u4e0a\u9762\uff0c2\u53f7\u548c3\u53f7\u7684\u8bbf\u95ee\u6b21\u6570\u4e0d\u6b63\u597d\u662f\u725b\u7684\u4e2a\u6570\u4e48\uff1f\u77e5\u9053\u4e86\u89c4\u5f8b\uff0c\u5269\u4e0b\u7684\u5c31\u597d\u529e\u55bd\uff01\n\ncode\uff1a\n```\n//#include<bits/stdc++.h>\n\n#include<iostream>\n#include<algorithm>\n#include<stdio.h>\n#include<cstdio>\n\n#include<vector>\n#include<string>\n#include<cmath>\n#include<map>\n#include<string.h>\n\nusing namespace std;\nint k,n,m;\nint cow[105];//\u725b\u7684\u65b9\u4f4d\nbool visited[1005];//\u662f\u5426\u63a2\u7d22\nint vis[1005];//\u8d70\u5230\u4e86\u51e0\u6b21\nint ans;\nvector <int> g[1005];//\u5b58\u56fe\u7684\u73a9\u610f\nvoid dfs(int a)\n{\n    vis[a]++;//DFS\u6a21\u677f\uff0c\u4e0d\u8fc7\u52a0\u4e86\u4e2a\u8ba1\u6570\u5668\n    visited[a]=true;\n    for(int i=0;i<g[a].size();i++)\n        if(!visited[g[a][i]])\n            dfs(g[a][i]);\n    return;\n}\nint main()\n{\n    cin>>k>>n>>m;\n    for(int i=0;i<k;i++)\n        cin>>cow[i];\n    for(int i=0;i<m;i++)\n    {\n        int x,y;\n        cin>>x>>y;\n        g[x].push_back(y);//\u5b58\u6709\u5411\u56fe\n    }\n    for(int i=0;i<k;i++)\n    {\n        memset(visited,0,sizeof(visited));//\u521d\u59cb\u5316\n        dfs(cow[i]);\n    }\n    for(int i=1;i<=n;i++)\n        if(vis[i]==k)\n            ans++;//\u8ba1\u6570\n    cout<<ans;//\u8f93\u51fa\n    return 0;//OK\n}\n```",
        "postTime": 1559825004,
        "uid": 122605,
        "name": "\u7075\u5149\u4e00\u95ea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "\u56fe\u7684\u904d\u5386\u5e94\u7528\u9898\u3002\n\n\u5176\u5b9e\u6211\u7684\u601d\u8def\u4e0e\u9876\u697c\u7684\u540c\u5fd7\u5dee\u4e0d\u591a\uff0c\u4f46\u6bd5\u7adf$n\\leq1000$\uff0c\u80fd\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u5c31\u7528\u90bb\u63a5\u77e9\u9635\u5b58\uff0c\u4f55\u5fc5\u7528\u66f4\u9ebb\u70e6\u7684\u90bb\u63a5\u8868\u548c\u5bb9\u6613\u88ab\u5361\u5e38\u7684$vector$\u6765\u5199\u5462\uff1f\n\n\u5176\u5b9e\u4ee3\u7801\u672c\u7740\u6700\u7b80\u6d01\u7684\u5199\uff0c\u5c31\u7b97\u518d\u4f4e\u6548\uff0c\u53ea\u8981\u5bf9\u4e8e\u9898\u76ee\u7ed9\u7684\u6570\u636e\u8303\u56f4\u9ad8\u6548\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u597d\u4e86\uff0c\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0b\u9762\u8bb2\u601d\u8def\u3002\n\n\u9996\u5148\u5efa\u56fe\uff0c\u63a5\u7740\u904d\u5386\u6bcf\u4e2a\u725b\u7684\u6240\u5728\u5730\uff0c\u4ee5\u5176\u6240\u5728\u5730\u4e3a\u8d77\u70b9\uff0c\u904d\u5386\u6574\u4e2a\u56fe\uff0c\u80fd\u904d\u5386\u5230\u7684\u70b9\uff0c\u7528\u4e00\u4e2a\u8ba1\u6570\u5668\u6570\u7ec4\uff0c\u5c06\u6bcf\u4e2a\u80fd\u904d\u5386\u5230\u7684\u70b9\u8ba1\u6570\u5668++\uff0c\u6700\u540e\u8ba1\u6570\u5668\u80fd\u591f\u5230\u8fbe$k$\u7684\uff0c$ans++$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6709$k$\u5934\u725b\uff0c\u4e14\u56fe\u7684\u904d\u5386\u4e3a$O(n^2)$\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a$O(n^2k)$\uff08~~\u521a\u597d\u5361\u6570\u636e\u8303\u56f4233~~\uff09\n\n$AC$ $Code$\n\n```cpp\n#include <iostream>\n#define MAXN 1010\nusing namespace std;\n\nint n,m,k;\n\nint ans;\n\nint G[MAXN][MAXN],cow[MAXN];\n\nint cango[MAXN];\n\nbool visited[MAXN];\n\nvoid dfs(int x){\n\tvisited[x]=true;//\u6807\u8bb0\u5df2\u8bbf\u95ee\u8fc7\n\tcango[x]++;//\u8ba1\u6570\u5668++\n\tfor(int i=1;i<=n;i++)\n\t\tif(!visited[i]&&G[x][i])//\u6ca1\u8bbf\u95ee\u5e76\u4e14\u80fd\u5230\u8fbe\u7684\n\t\t\tdfs(i);\t\t\t\t//\u8fdb\u884c\u6df1\u641c\n}\n\nint main(){\n\tcin>>k>>n>>m;\n\tfor(int i=1;i<=k;i++){\n\t\tcin>>cow[i];\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tG[u][v]=1;\n\t}\n\tfor(int i=1;i<=k;i++){\n\t\tdfs(cow[i]);//\u5bf9\u6bcf\u4e00\u4e2a\u725b\u7684\u6240\u5728\u70b9\u8fdb\u884c\u6df1\u5ea6\u641c\u7d22\n\t\tfill(visited,visited+1+n,false);//fiil\u662fiostream\u5e93\u91cc\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u529f\u80fd\u8ddfmemset\u5dee\u4e0d\u591a\n\t}\t\t\t\t\t\t\t\t\t//\u4e4b\u6240\u4ee5\u8981\u6e05\u96f6\uff0c\u662f\u56e0\u4e3a\u4f60\u8fd8\u8981\u7ee7\u7eed\u6df1\u641c\n\tfor(int i=1;i<=n;i++)\n\t\tif(cango[i]==k)\n\t\t\tans++;//\u7edf\u8ba1\u7b54\u6848\n\tcout<<ans<<endl;//\u8f93\u51fa\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\uff01\n}\n```",
        "postTime": 1550494065,
        "uid": 88213,
        "name": "zhangyuhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "~~\u6211\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6548\u7387\u5e94\u8be5\u662f\u521a\u597d\u8fd0\u884c1\u4ebf\u6761\u8bed\u53e5\uff1b~~\n\n~~AC\u6548\u7387\u8f83\u4f4e\uff0c\u5404\u4f4dOIER\u53ef\u4ee5\u67e5\u770b\u4ed6\u4eba\u66f4\u4f18\u7684\u89e3\u6cd5\uff0c\u8fd9\u662f\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u3002~~\n\n~~\uff08\u4ee5\u524d\u7684\u9898\u89e3\u90fd\u6ca1\u6709\u8a92\uff09~~\n\n\u8fd9\u9053\u9898\u7684\u7684\u610f\u601d\uff0c\u5728\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\uff1a\n\n```\u6709k\u5934\u5976\u725b\uff0cn\u4e2a\u8349\u573a\uff0cm\u6761\u8def\uff08\u6709\u5411\uff09\n\u7ed9\u51fa\u6240\u6709\u5976\u725b\u7684\u4f4d\u7f6enum[i]\u8868\u793ai\u53f7\u5976\u725b\u5728num[i]\u8349\u573a(1<=i<=k) **\u6362\u884c\u8bfb\u5165**\n\u63a5\u4e0b\u6765\u662fm\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6570u,v\u8868\u793au\u548cv\u4e24\u4e2a\u7267\u573a\u662f\u6709\u5355\u5411\u8def\u8054\u901a\u7684\uff08\u800cv\u5230u\u4e0d\u4e00\u5b9a\uff09\n\u73b0\u5728\u4ed6\u4eec\u53bb\u91ce\u9910\uff0c\u5730\u70b9h\u5c31\u5728\u8fd9n\u4e2a\u8349\u573a\u4e2d\u95f4\uff0c\u6240\u6709\u7684\u5976\u725b\u90fd\u8981\u53c2\u52a0\uff08\u5c31\u662f\uff09\u7267\u573ai \u5230 \u7267\u573ah \u6709\u5355\u5411\u8def\u8fde\u63a5~~\n\u8bf7\u786e\u5b9a\u6709cnt\u4e2a\u53ef\u4ee5\u4f9b\u4ed6\u4eec\u91ce\u9910\u7684\u8349\u573a\u3002\u53ea\u8f93\u51fa\u4e00\u4e2a\u6570cnt\n```\n\u6570\u636e\u8303\u56f4\uff1a\u5bf9\u4e8e80%\u7684\u6570\u636e n<=200, k<=100,m<=10000\n\n\u5bf9\u4e8e100%\u7684\u6570\u636e n<=1000, k<=100,m<=10000\n\n\u5bf9\u4e8e80%\u7684\u6570\u636e\u53ef\u4ee5\u7528floyd\u6c34\u8fc7\uff1a\n\nf[i,j]=(f[i,k] and f[k,j])\uff1b\n\n\u7136\u540e\u518d\u7528n^2\u7b97\u6cd5\u8ba1\u7b97\n\n```cpp\nvar  k,n,m,i,j,v,u,cnt:longint;\n     a:array[1..1000,1..1000]of boolean;\n     p:array[1..1000]of boolean;\n     cow:array[1..1000]of longint;\n     f:boolean;\nbegin\n readln(k,n,m);\n for i:=1 to k do begin\n readln(cow[i]);\n p[cow[i]]:=true;\n end;\n fillchar(a,sizeof(a),false);\n for i:=1 to m do begin\n  readln(u,v);\n  a[u,v]:=true;\n end;\nfor i:=1 to n do a[i,i]:=true;\n for k:=1 to n do\n  for i:=1 to n do\n   for j:=1 to n do\n    if a[i,j]=false then\n     a[i,j]:=(a[i,k] and a[k,j]);\n  for i:=1 to n do begin\n  f:=true;\n   for j:=1 to n do begin\n     if (a[j,i]=false)and(p[j]) then f:=false;\n  end;\n  if f then begin inc(cnt); end;\n  end;\n  writeln(cnt);\nend.\n```\n#1-#8 AC \uff0c#9 #10 TLE sore=80\uff1b\n\n\u60f3\u5230floyd\uff0c\u81ea\u7136\u60f3\u5230\u4ed6\u7684\u5347\u7ea7\u7248\uff1adijkstra\u7b97\u6cd5\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e100%\u7684\u6570\u636e n<=1000, k<=100,m<=10000\n\n\u8ba1\u7b97n^2\\*k\u521a\u597d\u4e3a1\u4ebf\uff0c~~\u6697\u7b11~~\n\n\u5f53\u7136\u53ef\u4ee5\u7528dijkstra\uff0c\u7528\u5230\u7267\u573a\u8def\u5f84\u957f\u5ea6\u81ea\u5b9a\u4e49\u4e3a\u975e\u8d1f\u6570\u7684\u7279\u6027\n\n\u7528n^2\\*k\u7684\u7b97\u6cd5\u8ba1\u7b97num[i] \u5230 j \u662f\u5426\u5b58\u5728\u6700\u77ed\u8def\uff0c\u5b58\u5728\u5373\u6709\u8def\uff0c\u4e3amax\u5219\u4e3a\u65e0\u8def\n\n\u6240\u4ee5\u7528dijkstra\u53ef\u4ee5AC\uff0c\u7eafdijkstra\u53ef\u8fc79\u4e2a\u70b9\uff0c~~\u4f46\u662f\u53ef\u6076\u7684\u7b2c9\u4e2a\u70b9\u5361\u4e86\u5e38\u6570\uff0c\u6240\u4ee5\u8981\u7528\u5361\u6b65\u6216\u8005\u6253\u8868\u6765AC~~\n\n\u53cb\u60c5\u63d0\u793a\uff1a\n\n\u7b2c9\u4e2a\u6570\u636e\u70b9n=1000,m<9999,CNT=999;\n\n\u7b2c10\u4e2a\u6570\u636e\u70b9n=1000\uff0cm=10000,CNT=777;\n\n\u8fd9\u662f90\u5206\u4ee3\u7801\uff1a\n\n```cpp\nvar k,n,m,i,j,u,v,cnt:longint;\n    g:array[1..1000,1..1000]of longint;\n    a:array[1..1000,1..1000]of boolean;\n    d,num:array[1..10000]of longint;\n    f:boolean;\nprocedure dijkstra(v0:longint);\nvar i,j,k,minn:longint;\n    u:array[1..10000]of boolean;\nbegin\n fillchar(u,sizeof(u),false);\n for i:=1 to n do d[i]:=g[v0,i];\n d[v0]:=0;\n u[v0]:=true;\n for i:=1 to n do begin\n  minn:=maxlongint div 3; k:=0;\n  for j:=1 to n do\n   if (not u[j])and(d[j]<minn) then begin\n    minn:=d[j]; k:=j;\n   end;\n  if k=0 then break;\n  u[k]:=true;\n  for j:=1 to n do\n   if (not u[j])and(g[k,j]+d[k]<d[j])then\n      d[j]:=g[k,j]+d[k];\n end;\nend;\nbegin\n readln(k,n,m);\n for i:=1 to n do\n  for j:=1 to n do\n   if i<>j then g[i,j]:=maxlongint div 3\n   else g[i,j]:=1;\n for i:=1 to k do readln(num[i]);\n for i:=1 to m do begin\n  readln(u,v);\n  g[u,v]:=1;\n end;\n for i:=1 to k do begin\n  fillchar(d,sizeof(d),0);\n  dijkstra(num[i]);\n  for j:=1 to n do a[num[i],j]:=(d[j]<>maxlongint div 3);\n end;\n  for i:=1 to n do begin f:=true;\n   for j:=1 to k do if a[num[j],i]=false then begin f:=false; break;end;\n   if f then begin inc(cnt);end;\n  end;\n  writeln(cnt);\nend.\n```\n\u5982\u679c\u60f3\u8981\u9760\u8fd9\u79cd\u529e\u6cd5AC\uff1a\u6253\u8868\u672f\u3001\u9a97\u5206\u672f\u3001\u5361\u6b65\u672f\u3002\n\u6253\u8868\u672f\u5f88\u7cbe\u6df1\uff0c\u6211\u5df2\u7ecf\u7ed9\u4f60\u4eec\u63a2\u597d\u8def\u4e86\uff1a\n\n\u7b2c9\u4e2a\u6570\u636e\u70b9n=1000,m<9999,CNT=999;\n\n\u7b2c10\u4e2a\u6570\u636e\u70b9n=1000\uff0cm=10000,CNT=777;\n\n\u53ef\u4ee5\u6839\u636e\u81ea\u6211\u9700\u6c42\u6253\u8868\uff0c\n\n\u6211\u9009\u62e9\u7684\u662f\u5728readln(k,n,m);\n\n\u540e\u52a0if (n=1000)and not((m>=9999))then begin writeln(999); halt; end;\n\n\u5373AC\u3002\n",
        "postTime": 1488533204,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "\u65e2\u7136\u666e\u901adijkstra\u65f6\u95f4\u6349\u6025\uff0c\u90a3\u6211\u4eec\u7528\u5806\u4f18\u5316dijkstra\u4f18\u5316\u4e00\u4e2alog\uff0c\u59a5\u59a5\u7684\u80fd\u8fc7\uff08\u53cd\u6b63\u6211\u662f\u6015spfa\u88ab\u5361\uff09\n\n\u601d\u8def\u540c\u6837\u4e5f\u662f\u53cd\u5411\u5efa\u8fb9\n\n\u4ee3\u7801\u2193\u2193\u2193\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<vector>\n#define maxn 1010\n#define maxm 10010\n#define pp pair<int,int>\n#define mp make_pair\nusing namespace std;\nint k,n,m,tot,ans;\nint cow[maxn],h[maxn],dis[maxn],vis[maxn];\nstruct node{\n\tint to,nxt;\n}e[maxm];\n\ninline void add(int x,int y){\n\te[++tot].to=y;\n\te[tot].nxt=h[x];\n\th[x]=tot;\n}\n\nvoid dij(int s){\n\tpriority_queue<pp,vector<pp >,greater<pp > > q;\n\tfor (int i=1;i<=n;++i) dis[i]=1e9,vis[i]=0;\n\tdis[s]=0;\n\tq.push(mp(0,s));\n\twhile (!q.empty()){\n\t\tint u=q.top().second;\n\t\tq.pop();\n\t\tif (vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor (int i=h[u];i;i=e[i].nxt){\n\t\t\tint y=e[i].to;\n\t\t\tif (dis[y]>dis[u]+1){\n\t\t\t\tdis[y]=dis[u]+1;\n\t\t\t\tq.push(mp(dis[y],y));\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n\nint main(){\n\tcin>>k>>n>>m;\n\tfor (int i=1;i<=k;++i){\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tcow[x]=1;\n\t}\n\tfor (int i=1;i<=m;++i){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(y,x);\n\t}\n\tfor (int i=1;i<=n;++i){\n\t\tdij(i);\n\t\tbool flag=1;\n\t\tfor (int j=1;j<=n;++j){\n\t\t\tif (cow[j] && dis[j]>=1e9){\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag) ans++;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n\u7b2c10\u4e2a\u70b9707ms\uff0c\u6d77\u661f",
        "postTime": 1535792254,
        "uid": 50881,
        "name": "saligia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "#  BFS\u9898\u89e3\n### \u5f88\u591a\u9898\u89e3\u7528\u6700\u77ed\u8def\u6c34\u8fc7\uff0c\u8fd8\u7528O2\u5361\uff0c\u6211\u8fd8\u662f\u5199\u641c\u7d22\u5427\u3002BFS\u7684\u9898\u89e3\u5df2\u6709\u4e24\u4e09\u7bc7\uff0c\u4f46\u6211\u6709\u4e00\u4e9b\u4ed6\u4eec\u6ca1\u8bb2\u5230\u7684\u7ec6\u8282\u548c\u601d\u8def\u8981\u589e\u52a0\u3002\n####  \u9996\u5148\u62ff\u5230\u8fd9\u9898\u65f6\u5019\u7528\u4e86DFS\uff0c\u7136\u540e\u5149\u8363\u7206\u6808MLE10\u5206\uff0c\u4e4b\u540e\u4fbf\u7528\u4e86\u5e7f\u641c\u3002\u8fd9\u544a\u8bc9\u6211\u4eec\u6570\u636e\u5927\u65f6\u4e00\u5b9a\u8981\u5e7f\u641c\u554a!!!\u5e7f\u641c\u5728\u6781\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f18\u4e8e\u6df1\u641c\uff01\uff01\uff01\n#### \u4ee3\u7801\u603b\u4f53\u601d\u8def\u5927\u5bb6\u5e94\u8be5\u90fd\u80fd\u7406\u89e3\u4e86\uff0c\u5c31\u662f\u4e00\u4e2a\u4e2a\u70b9\u5e7f\u641c\u4e0b\u53bb\uff0c\u7d2f\u52a0\u641c\u5230\u7684\uff0c\u6700\u540e\u7edf\u8ba1\u6709\u54ea\u4e9b\u70b9\u88ab\u641c\u5230\u7684\u6b21\u6570\u7b49\u4e8e\u725b\u7684\u603b\u6570\uff0c\u8fd9\u4e2a\u6570\u5c31\u76f8\u5f53\u4e8e\u6bcf\u5934\u725b\u90fd\u53ef\u4ee5\u53bb\u7684\u70b9\u7684\u4e2a\u6570\u3002\n### \u4e0b\u9762\u653e\u4ee3\u7801\uff0c\u7ec6\u8282\u4ee3\u7801\u4e2d\u8bb2\n```cpp\n\n#include <bits/stdc++.h>\nusing namespace std;\nint a[101],ff[1001][1001],f1[1001],qz[1001],b[1001],i,j,k,m,n,x,y,sum;\nvoid bfs(int now){\nint f=0,r=1,ii;\nqz[r]=now;\nf1[qz[r]]=true;\n//b[qz[r]]++;  //\u4e5f\u53ef\u4ee5\u5728BFS\u4e2d\u7d2f\u52a0\nwhile (f<r){\nf++;\nfor (ii=1; ii<=n; ii++)\nif (ff[qz[f]][ii]==1 && f1[ii]==false) {//qz[f]\u8868\u793a\u5f53\u524d\u6240\u5728\u7684\u70b9\uff0c\u4ece\u8fd9\u4e2a\u70b9\u5411\u522b\u7684\u70b9\u62d3\u5c55\nr++;\nqz[r]=ii;\nf1[qz[r]]=true;\nb[qz[r]]++;\n}\n\n}\t\n}\nint read(){\n\tint f=1,x=0;char s=getchar();\n\twhile(!isdigit(s)){\n\t\tif(s=='-')f=-1;\n\t\ts=getchar();\n\t}\n\twhile(isdigit(s)){\n\t\tx=(x<<1)+(x<<3)+(s^48);\n\t\ts=getchar();\n\t}\n\treturn x*f;\n}  //\u5feb\u8bfb\u4f18\u5316\uff0c\u8c8c\u4f3c\u8fd9\u9898\u6ca1\u6709\u7528\nint main(){\n\tsum=0;\n\t(b,0,sizeof(b));\n\tscanf(\"%d%d%d\",&k,&n,&m);\n\tfor (i=1; i<=k; i++){\n\ta[i]=read();\n\tb[a[i]]++;  //\u5bf9\u4e8e\u5976\u725b\u672c\u6765\u5c31\u5728\u7684\u70b9\u7d2f\u52a0\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728BFS\u4e2d\u7d2f\u52a0\n\t}\n\tfor (i=1; i<=m; i++){\n\tx=read(); y=read();\n\tff[x][y]=1;  //\u6807\u8bb0\u8def\u5f84\n\t}\nfor (i=1; i<=k; i++) {\nmemset(f1,false,sizeof(f1));\nbfs(a[i]);\n}\nfor (i=1; i<=n; i++) if (b[i]==k) sum++;  //\u7d2f\u52a0\u7b26\u5408\u9898\u610f\u7684\u70b9\ncout<<sum;\nreturn 0;\t\n}\n\n```\n## \u4e0d\u5efa\u8bae\u5927\u5bb6\u6839\u636e\u6570\u636e\u505a\u9898\uff01\u4e5f\u5e0c\u671b\u5728\u5f00O2\u540e\u627e\u5230\u6700\u4f18\u89e3\u3002",
        "postTime": 1546911276,
        "uid": 73436,
        "name": "\u8bf4\u597d\u4e0d\u54ed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u53ef\u4ee5\u6df1\u641c\u4e5f\u53ef\u4ee5\u7528\u6700\u77ed\u8def\u505a\n\n\u6211\u9009\u4e86\u641c\u7d22\u540e\u89c9\u5f97\u76f4\u63a5\u66b4\u641c\u7684\u8bdd\u4f1a\u8d85\u65f6\u7684\uff08\u53ef\u80fd\u662f\u6211\u4e0d\u4f1a\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u5427\uff09\n\n\u53ef\u4ee5\u7528tarjan\u7f29\u70b9\u6765\u4f18\u5316\u641c\u7d22\u901f\u5ea6\uff08\u81f3\u5c11\u6211\u8bc4\u6d4b\u7684\u65f6\u5019\u6bd4\u66b4\u641c\u5feb\u4e00\u70b9\uff09\n\n\u6211\u8fd8\u6709\u4e00\u4e2a\u5730\u65b9\u6ca1\u6709\u641e\u61c2\uff0c\u5c31\u662ftarjan\u7f29\u70b9\u540e\u5f62\u6210\u7684\u5e94\u8be5\u662f\u6709\u5411\u65e0\u73af\u56fe\n\u90a3\u4e48\u5728dfs\u7684\u65f6\u5019\u5e94\u8be5\u4e0d\u4f1a\u8bbf\u95ee\u5230\u4e4b\u524d\u7684\u8282\u70b9\uff0c\u76f8\u5e94\u7684\u4e5f\u4e0d\u9700\u8981\u6807\u8bb0\u8fd9\u4e2a\u8282\u70b9\u6709\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n\n\u53ef\u662f\u5c31\u662f\u8fd9\u4e2a\u70b9\u8c03\u4e86\u6211\u597d\u4e45\uff0c\u8fd8\u662f\u8981\u6807\u8bb0\u7684\uff0c\u6709\u54ea\u4f4d\u5927\u4f6c\u53ef\u4ee5\u4e3a\u6211\u89e3\u91ca\u4e00\u4e0b\u5417\uff1f\n\n\u732e\u4e0a\u6211\u4e11\u964b\u7684\u4ee3\u7801\n```\nvar\n  que,top,tot,t,len,a1,a2,q,i,j,m,n,k,p:longint;\n  place,new,nextn,othern,w,color,f,dfn,low,where,next,\n  ans,a,other,check:array[0..20005]of longint;\n  flag:array[0..20005]of boolean;\nfunction min(x,y:longint):longint;\nbegin\n  if x<y then exit(x)\n  else exit(y);\nend;\nprocedure tarjan(u:longint);\nvar\n  k,v,i,j:longint;\nbegin\n  inc(top); f[top]:=u;//tarjan\u5904\u7406\u7528\u7684\u6808\n  check[u]:=1;\n  inc(t); dfn[u]:=t; low[u]:=t;\n  k:=a[u];\n  while k<>0 do\n    begin\n      v:=other[k];\n      if check[v]=0 then\n        begin\n          tarjan(v);\n          low[u]:=min(low[u],low[v]);\n        end\n      else\n        if check[v]=1 then\n          low[u]:=min(low[u],dfn[v]);\n      k:=next[k];\n    end;\n  if dfn[u]=low[u] then\n    begin\n      inc(tot);\n      repeat\n        j:=f[top]; dec(top);\n        check[j]:=-1;\n        color[j]:=tot;\n      until j=u;\n    end;\nend;\nprocedure dfs(now,a1:longint);//\u5c31\u662f\u8fd9\u91cc\uff0c\u4e3a\u4ec0\u4e48\u8981\u6807\u8bb0\u5462\uff1f\nvar\n  k,p:longint;\nbegin\n  ans[now]:=ans[now]+a1;\n  k:=new[now]; flag[now]:=false;\n  while k<>0 do\n    begin\n      p:=othern[k];\n      if flag[p]=true then\n        dfs(p,a1);\n      k:=nextn[k];\n    end;\nend;\nbegin\n  readln(q,n,m);\n  for i:=1 to q do\n    begin\n      readln(a1);\n      inc(where[a1]);//\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u4e0a\u6709\u51e0\u53ea\u725b\n    end;\n  for i:=1 to m do\n    begin\n      readln(a1,a2);\n      inc(len);\n      next[len]:=a[a1]; a[a1]:=len; other[len]:=a2;//\u524d\u5411\u661f\u7684\u4e09\u4e2a\u6570\u7ec4\n    end;\n  for i:=1 to n do\n    if check[i]=0 then\n      tarjan(i);\n  len:=0;\n  for i:=1 to n do//tarjan\u540e\u7b2c\u4e8c\u6b21\u5efa\u56fe\n    begin\n      w[color[i]]:=w[color[i]]+where[i];//\u8bb0\u5f55\u8fd9\u4e2a\u65b0\u70b9\u6709\u51e0\u5934\u725b\n      inc(place[color[i]]);//\u8bb0\u5f55\u8fd9\u4e2a\u65b0\u70b9\u5305\u62ec\u7740\u51e0\u4e2a\u70b9\uff08\u540e\u9762\u7d2f\u52a0\u7528\u7684\uff09\n      k:=a[i];\n      while k<>0 do\n        begin\n          p:=other[k];\n          if color[i]<>color[p] then\n            begin\n              a1:=color[i]; a2:=color[p];\n              inc(len);\n              nextn[len]:=new[a1]; new[a1]:=len; othern[len]:=a2;\n            end;\n          k:=next[k];\n        end;\n    end;\n  {for i:=1 to tot do\n    writeln(w[i],' ',place[i]);}\n  for i:=1 to tot do\n    if w[i]>0 then\n      begin\n        fillchar(flag,sizeof(flag),true);\n        dfs(i,w[i]);\n      end;\n  for i:=1 to tot do\n    if ans[i]=q then\n      que:=que+place[i];\n  writeln(que);\nend.\n```",
        "postTime": 1531989405,
        "uid": 39488,
        "name": "\u56af\u5440\u56af\u5440",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u53ea\u8981\u5224\u65ad\u56fe\u662f\u5426\u8fde\u901a\u5c31\u597d\uff0c\u6240\u4ee5\u6211\u7528\u4e86\u6bcf\u4e00\u6761\u8fb9\u7684\u957f\u5ea6\u4e3a1\n\n\u5982\u679c\u56fe\u8fde\u901a\uff0c\u5219\u603b\u6570\uff0b1\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct m\n{\n    int next,to,cost;\n}e[500001];\nint vis[500001],minn[500001],head[500001],team[500001],p[100001];\nint num,sum,u,k;\nvoid add(int from,int to,int dis)   //\u5efa\u8fb9\n    e[++num].next=head[from];\n    e[num].to=to;\n    e[num].cost=dis;\n    head[from]=num;\n}\nint spfa(int x)     //spfa\u5f00\u59cb \n{\n    memset(vis,0,sizeof(vis));\n    memset(minn,0x7f,sizeof(minn));\n    int h=0,t=1;\n    team[1]=x;\n    vis[x]=1;\n    minn[x]=0;\n    while(h<t)\n    {\n        h++;\n        u=team[h];\n        vis[u]=1;\n        for(int i=head[u];i!=0;i=e[i].next)\n        {\n            int to=e[i].to;\n            if(minn[u]+e[i].cost<minn[to])\n            {\n                minn[to]=minn[u]+e[i].cost;\n                if(vis[to]==0)\n                {\n                    t++;\n                    vis[to]=1;\n                    team[t]=to;\n                }\n            }\n        }\n    }\n    for (int i=1;i<=k;i++)    //\u5224\u65ad\u56fe\u662f\u5426\u8054\u901a \n    {\n        if(minn[p[i]]==minn[0])\n        return 0;\n    }\n    return 1;\n}\nint n,m;\nint main()\n{\n    cin>>k>>n>>m;\n    for(int i=1;i<=k;i++)   //\u8f93\u5165\u725b\u7684\u4f4d\u7f6e \n    {\n        cin>>p[i];\n    }\n    for(int i=1;i<=m;i++)  //\u5efa\u8fb9\uff0c\u53ea\u8981\u8054\u901a\u5c31\u597d\uff0c\u6240\u4ee5\u6211\u7684\u8fb9\u968f\u4fbf\u53d6\u4e86\u4e00\u4e2a\u503c1 \n    {\n        int x,y,z;\n        cin>>x>>y;\n        add(y,x,1);  //\u53cd\u5411\u5efa\uff0c\u4ece\u7ec8\u70b9\u5f80\u56de\u8dd1 \n    }\n    for(int i=1;i<=n;i++)  //\u5bf9\u6bcf\u4e00\u4e2a\u7267\u573a\u8dd1\u4e00\u904dSPFA \n    {\n        if(spfa(i)==1)  //\u5982\u679c\u8fde\u901a\uff0c\u90a3\u5c31+1 \n        sum++;\n    }\n    cout<<sum<<endl; \n    return 0;\n}\n```",
        "postTime": 1479302919,
        "uid": 18441,
        "name": "Drug__Lover",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "\u5c31\u6765\u4e2aC++\u4ee3\u7801\u5427\n\n\u53ef\u4ee5\u7528\u6700\u77ed\u8def\u6765\u505a\u3002\u56e0\u4e3a\u662f\u6709\u5411\u8fb9\uff0c\u6211\u4eec\u53ea\u9700\u53cd\u5411\u5efa\u8fb9\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u5982\u679c\u8be5\u70b9\u80fd\u5230\u6240\u6709\u6709\u5976\u725b\u7684\u70b9\uff0c\u5219\u603b\u6570\u52a0\u4e00\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nqueue<int>Q;\nint n,tot,k,m;\nbool used2[10005];\nint num[10005];\nint x,y,z;\nstruct edge\n{\n    int u,v,z;\n    edge *next;\n}e[10005*2],*p=e,*point[10005];\ninline void addedge(int x,int y)\n{\n    p++;\n    p->u=y;p->v=1;p->next=point[x];\n    point[x]=p;\n}\nint dis[10005];\nbool used[10005];\nbool SPFA(int x)\n{\n    memset(dis,0x7f,sizeof(dis));\n    memset(used,0,sizeof(used));\n    Q.push(x);\n    used[x]=1;\n    dis[x]=0;\n    while(!Q.empty())\n    {\n        int q=Q.front();Q.pop();\n        used[q]=0;\n        for (edge *j=point[q];j;j=j->next)\n        {\n            if(dis[j->u]>dis[q]+j->v)\n            {\n                dis[j->u]=dis[q]+j->v;\n                if(!used[j->u])\n                {\n                    Q.push(j->u);\n                    used[j->u]=1;\n                }\n            }\n        }\n    }\n    for (int i=1;i<=k;i++)\n    {\n        if(dis[num[i]]==dis[0])\n        return 0;\n    }\n    return 1;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&k,&n,&m);\n    for (int i=1;i<=k;i++)\n    {\n        scanf(\"%d\",&num[i]);\n        used2[num[i]]=1;\n    }\n    for (int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        addedge(y,x);\n    }\n    for (int i=1;i<=n;i++)\n    {\n        if(SPFA(i)==1)\n        {\n            tot++;\n        }\n    }\n    printf(\"%d\\n\",tot);\n    return 0;\n}\n```",
        "postTime": 1475235169,
        "uid": 12004,
        "name": "FHXZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "dfs\u6c34\u9898...\n\np\u515a\u4ee3\u7801\u8d34\u4e0a\n\n```cpp\nvar\n  i,j,m,k,n,a,b,ans:longint;\n  f:array[0..1010] of longint;\n  son,pre,now,que:array[1..10010]of longint;\n  bl:array[1..10010]of boolean;\n  cow:array[1..100]of longint;\nprocedure init;\n  begin\n    readln(k,n,m);\n    for i:=1 to k do\n      readln(cow[i]);\n    for i:=1 to m do//\u6307\u7236\u94fe\u50a8\u5b58\uff08\u8c8c\u4f3c\u6709\u7684\u4eba\u53eb\u90bb\u63a5\u8868\uff09\n      begin\n        readln(a,b);\n        son[i]:=b;\n        pre[i]:=now[a];\n        now[a]:=i;\n      end;\n  end;\nprocedure dfs(v:longint);\n  var\n    ls:longint;\n  begin\n    inc(f[v]);//\u80fd\u8d70\u5230\u8be5\u70b9\u7684\u725b\u6570\u52a01\uff1b\n    bl[v]:=true;\n    ls:=now[v];\n    while ls<>0 do\n      begin\n        if not bl[son[ls]] then\n          dfs(son[ls]);\n        ls:=pre[ls];\n      end;\n    //bl[v]:=false;  //\u5343\u4e07\u4e0d\u8981\u56de\u6eaf\uff08\u5f53\u5e74\u65e0\u77e5\u7684\u6211\u4e3a\u6b64...\uff09\uff01\uff01\uff01\n  end;\nprocedure main;\n  begin\n    fillchar(f,sizeof(f),0);\n    fillchar(bl,sizeof(bl),false);\n    for i:=1 to k do\n      begin    \n        dfs(cow[i]);//\u4ece\u6bcf\u4e2a\u725b\u7684\u4f4d\u7f6edfs\uff0c\u8bb0\u5f55\u8be5\u725b\u80fd\u8d70\u5230\u7684\u70b9\uff1b\n        fillchar(bl,sizeof(bl),false);//\u521d\u59cb\u5316bl\uff1b\n      end;\n    ans:=0;\n    for i:=1 to n do//\u7edf\u8ba1\u7b54\u6848\uff1b\n      if f[i]=k then inc(ans);//\u5982\u679c\u6709k\u5934\u725b\u80fd\u8d70\u5230\u67d0\u70b9\u5219\u7edf\u8ba1\uff1b\n    writeln(ans);\n  end;\nbegin\n  init;\n  main;\nend.\n```",
        "postTime": 1473478303,
        "uid": 16751,
        "name": "zxy123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    },
    {
        "content": "\u786e\u5b9e\uff0c\u7a0d\u6709\u5e38\u8bc6\u7684\u4eba\u90fd\u4f1a\u60f3\u5230\u53cd\u8fc7\u6765\u679a\u4e3e\u805a\u96c6\u7684\u5730\u65b9\u7136\u540e\u641e\u51fa\u6700\u77ed\u8def\u7b97\u6cd5\u6765\u89e3\u51b3\u2026\u2026\n\n\u7136\u800c\uff0c\u56e0\u4e3a\u8fd9\u91cc\u90fd\u662f\u5355\u5411\u8fb9\uff0c\u6240\u4ee5\u8fb9\u4e5f\u662f\u9700\u8981\u53cd\u7740\u5b58\u7684\u2026\u2026\n\ndijkstra\u7531\u4e8e\u5927\u7ea6\u662f\u9700\u8981O(knm)\u7684\u65f6\u95f4\uff0c\u7531\u4e8e\u6700\u540e\u4e00\u4e2a\u70b9\u7b54\u6848\u4f30\u8ba1\u5c31\u662f\u6545\u610f\u5361\u65f6\u95f4\u7684(\u7b54\u6848999\u2026\u2026)\uff0c\u56e0\u6b64\u6bd4\u8f83\u96be\u5361\u8fc7\u53bb\u2026\u2026\n\n\u6362\u6210SPFA\u5c31\u8fc7\u4e86\u2026\u2026\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\nint k,n,m,cnt,x,y,che,ans,out,cow[110],dis[1010],head[1010];\nbool done[1010];\nchar cc;\ndeque<int>q;\nint read()\n{\n    out=0,cc=getchar();\n    while(cc<'0'||cc>'9'){cc=getchar();}\n    while(cc>='0'&&cc<='9')\n    {\n        out=out*10+cc-'0',\n        cc=getchar();\n    }\n    return out;\n}\nstruct Edge\n{\n    int to,next;//\u6839\u672c\u4e0d\u7528\u8fb9\u6743\uff0c\u4e5f\u6ca1\u6709\u5b58\u4e0b\u6765\u7684\u5fc5\u8981\n}e[10010];\nstruct Heap\n{\n    int dis,id;\n    bool operator<(const Heap &h1)const\n    {\n        return dis>h1.dis;\n    }\n};\nvoid add(int x,int y)\n{\n    cnt++,e[cnt].next=head[x],e[cnt].to=y;head[x]=cnt;\n}\nvoid SPFA(int s)\n{\n    for(int i=1;i<=n;i++){dis[i]=1,done[i]=0;}//\u4e0d\u80fd\u5230\u5c31\u662f1\uff0c\u80fd\u5230\u5c31\u662f0\u2026\u2026\n    dis[s]=0,done[s]=1;\n    q.push_back(s);\n    while(!q.empty())\n    {\n        x=q.front();\n        q.pop_front();\n        for(int i=head[x];i;i=e[i].next)\n        {\n            y=e[i].to;\n            if(dis[y]>dis[x])\n            {\n                dis[y]=0;//\u76f4\u63a5\u6539\u6389\u677e\u5f1b\u7684\u4fee\u6539\u2026\u2026\n                if(!done[y])\n                {\n                    done[y]=1;\n                    if(!q.empty())\n                    {\n                        if(dis[y]>dis[q.front()]){q.push_back(y);}\n                        else{q.push_front(y);}\n                    }\n                    else{q.push_back(y);}\n                }\n            }\n        }\n        done[x]=0;\n    }\n}\nint main()\n{\n    k=read(),n=read(),m=read();\n    for(int i=1;i<=k;i++){cow[i]=read();}\n    for(int i=1;i<=m;i++)\n    {\n        x=read(),y=read();\n        add(y,x);//\u662f\u7684\uff0c\u8981\u53cd\u7740\u5b58\u2026\u2026\n    }\n    for(int i=1;i<=n;i++)\n    {\n        SPFA(i);//\u9010\u4e2a\u679a\u4e3e\u51fa\u53d1\u70b9\n        che=0;\n        for(int j=1;j<=k;j++)\n        {\n            if(dis[cow[j]]){che++;break;}//\u9010\u4e2a\u5224\u65ad\u6709\u6ca1\u6709\u5230\u4e0d\u4e86\u7684\n        }\n        if(!che){ans++;}\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1502119879,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2853 \u3010[USACO06DEC]\u725b\u7684\u91ce\u9910Cow Picnic\u3011"
    }
]