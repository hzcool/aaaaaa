[
    {
        "content": "\u6b64\u9898\u7531\u4e8e\u6570\u636e\u5f31\uff0c\u53ef\u4ee5\u7528$O(n^3)$\u6c34\u8fc7\uff0c\u4f46\u5b9e\u9645\u4e0a\u6709$O(n)$\u7684\u7b97\u6cd5\u3002\n\n\u6570\u636e\u52a0\u5f3a\u7248\uff1a[U19030 \u7535\u8111\u73ed\u7684\u88c1\u5458\uff08\u52a0\u5f3a\u7248\uff09](https://www.luogu.org/problemnew/show/U19030)\n\n---\n\n### \u5206\u6790\n\n\u9898\u76ee\u5927\u610f\uff1a\u5728n\u4e2a\u6570\u4e2d\u53d6\u4e0d\u5927\u4e8em\u6bb5\u8fde\u7eed\u7684\u6570\uff0c\u4f7f\u53d6\u7684\u6570\u603b\u548c\u6700\u5927\u3002\n\n\u8fd9\u9898\u6709\u591a\u79cd\u7b97\u6cd5\uff0c\u96be\u5ea6\u6839\u636e\u7b97\u6cd5\u590d\u6742\u5ea6\u5206\u5e03\u5728\u666e\u53ca~\u7701\u9009\u4e4b\u95f4\u3002\n\n### \u7b97\u6cd51\n\n\u88f8DP\uff0c\u590d\u6742\u5ea6$O(n^3)$\u3002\n\n\u8bbe$f(i,j)$\u8868\u793a\u524d$i$\u4e2a\u6570\u53d6$j$\u6bb5\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u82e5$i$\u4e0d\u9009\uff0c\u5219$f(i,j)=f(i-1,j)$\uff1b\n\n\u82e5$i$\u9009\uff0c\u679a\u4e3e\u6700\u540e\u4e00\u6bb5\u7684\u8d77\u59cb\u4f4d\u7f6e$k$\uff1a\n\n$f(i,j)=max\\{f(k,j-1)+s_i-s_k\\}(k<i)$\n\n\u5176\u4e2d$s_i$\u8868\u793a\u524d$i$\u4e2a\u6570\u7684\u524d\u7f00\u548c\u3002\n\n\u6839\u636e\u65b9\u7a0b\uff0c\u4e09\u91cd\u5faa\u73af\u679a\u4e3e$i,j,k$\u5373\u53ef\u3002\n\n\u7b54\u6848\u4e3a$f(n,m)$\uff0c\u590d\u6742\u5ea6$O(n^3)$\u3002\n\n```c++\n#include <bits/stdc++.h>\ntypedef long long LL;\n\nconst int N = 550;\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    int n, m;\n\tstd::cin >> n >> m;\n\tLL s[N] = {0};\n    for (int i = 1; i <= n; i++) {\n        LL a;\n\t\tstd::cin >> a;\n    \ts[i] = s[i-1] + a;\n\t}\n\t\n    static LL f[N][N] = {0};\n    for (int i = 1; i <= n; i++) {\n    \tfor (int j = 1; j <= m; j++) {\n    \t\tf[i][j] = f[i-1][j];\n    \t\tfor (int k = 0; k < i; k++) {\n    \t\t\tf[i][j] = std::max(f[i][j], f[k][j-1] + s[i] - s[k]);\n\t\t\t}\n\t\t}\n    }\n    std::cout << f[n][m] << std::endl;\n    return 0;\n}\n```\n\n### \u7b97\u6cd52\n\n\u4f18\u5316\u7b97\u6cd51\uff0c\u65f6\u95f4$O(n^2)$\uff0c\u7a7a\u95f4$O(n^2)$\u3002\n\n\u56de\u5230\u7b97\u6cd51\u7684\u65b9\u7a0b\uff1a\n\n$f(i,j)=max\\{f(i-1,j),f(k,j)+s_i-s_k\\}(k<i)$\n\n\u8bbe$g(k,j)=f(k,j)-s_k$\uff0c\u5219\n\n$f(i,j)=max\\{f(i-1,j),g(k,j)+s_i\\}(k<i)$\n\n\u53ea\u8981\u7ef4\u62a4\u51fa$g(k,j)$\u7684\u6700\u5927\u503c\uff0c\u5c31\u4e0d\u9700\u8981\u679a\u4e3e$k$\u4e86\u3002\n\n\u5177\u4f53\u5730\uff0c\u5148\u679a\u4e3e$j$\u540e\u679a\u4e3e$i$\uff0c\u56e0\u4e3a$k<i$\uff0c\u5728\u679a\u4e3e$i$\u7684\u65f6\u5019\u987a\u4fbf\u7ef4\u62a4\u51fa$g(1\u5230i-1,j)$\u7684\u6700\u5927\u503c$g_{max}$\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u76f4\u63a5\u7528$g_{max}$\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u7b54\u6848\u4e3a$f(n,m)$\uff0c\u590d\u6742\u5ea6$O(n^2)$\u3002\n\n```c++\n#include <bits/stdc++.h>\ntypedef long long LL;\n\nconst int N = 5e3+50;\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    int n, m;\n\tstd::cin >> n >> m;\n\tLL s[N] = {0};\n    for (int i = 1; i <= n; i++) {\n        LL a;\n\t\tstd::cin >> a;\n    \ts[i] = s[i-1] + a;\n\t}\n\t\n\tstatic LL f[N][N] = {0};\n\tfor (int j = 1; j <= m; j++) {\n\t\tLL mx = 0;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tf[i][j] = std::max(f[i-1][j], mx + s[i]);\n\t\t\tmx = std::max(mx, f[i][j-1] - s[i]);\n\t\t}\n\t}\n\tstd::cout << f[n][m] << std::endl;\n    return 0;\n}\n```\n\n### \u7b97\u6cd53\n\n\u53e6\u4e00\u79cd\u601d\u8def\u7684DP\uff0c\u65f6\u95f4$O(n^2)$\uff0c\u7a7a\u95f4$O(n)$\u3002\n\n\u8bbe$f(i,j)$\u8868\u793a\u524d$i$\u4e2a\u9009$j$\u6bb5\uff08$i$\u4e0d\u4e00\u5b9a\u9009\uff09\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u8bbe$g(i,j)$\u8868\u793a\u524d$i$\u4e2a\u9009$j$\u6bb5\uff08$i$\u4e00\u5b9a\u8981\u9009\uff09\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u5bf9\u4e8e$g$\uff0c\u8ba8\u8bba$i-1$\u9009\u6216\u4e0d\u9009\u3002\u5982\u679c$i-1$\u9009\u4e86\uff0c\u5219$i$\u53ef\u4ee5\u63a5\u4e0a\u53bb\uff0c\u4e0d\u7528\u65b0\u589e\u4e00\u6bb5\u3002\n\n$g(i,j)=max\\{g(i-1,j),f(i-1,j-1)\\}+a_i$\n\n\u5bf9\u4e8e$f$\uff0c\u8ba8\u8bba$i$\u9009\u6216\u4e0d\u9009\u3002\n\n$f(i,j)=max\\{g(i,j),f(i-1,j)\\}$\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230$O(n^2)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u56e0\u4e3a\u7b2c\u4e00\u7ef4\u8f6c\u79fb\u65f6\u53ea\u6d89\u53ca\u5230$i$\u548c$i-1$\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u7b2c\u4e00\u7ef4\u7701\u6389\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n```c++\n#include <bits/stdc++.h>\ntypedef long long LL;\n\nconst int N = 5e3+50;\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    int n, m;\n\tstd::cin >> n >> m;\n\tLL a[N];\n    for (int i = 1; i <= n; i++)\n        std::cin >> a[i];\n        \n    LL f[N] = {0}, g[N] = {0};\n    for (int i = 1; i <= n; i++) {\n        for (int j = m; j >= 1; j--) {\n            g[j] = std::max(g[j], f[j-1]) + a[i];\n            f[j] = std::max(g[j], f[j]);\n        }\n    }\n    std::cout << f[m] << std::endl;\n    return 0;\n}\n```\n\n### \u7b97\u6cd54\n\n\u8d2a\u5fc3\uff0c\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n\u9996\u5148\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u6bb5\u8fde\u7eed\u7684\u6b63\u6570\u6216\u8d1f\u6570\uff0c\u8981\u4e48\u5168\u90e8\u9009\uff0c\u8981\u4e48\u5168\u90e8\u4e0d\u9009\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fde\u7eed\u7684\u4e00\u6bb5\u6b63\u6570\u6216\u8d1f\u6570\u7f29\u6210\u4e00\u4e2a\u6570\u3002\u90a3\u4e48\u5e8f\u5217\u5c31\u53d8\u6210\u4e86\u6b63\u8d1f\u4ea4\u66ff\u7684\u3002\u4ee5\u4e0b\u8bf4\u660e\u90fd\u9488\u5bf9\u7f29\u5b8c\u4ee5\u540e\u7684\u5e8f\u5217\u3002\n\n\u8bbe\u5e8f\u5217\u4e2d\u6b63\u6570\u7684\u4e2a\u6570\u4e3a$cnt$\uff0c\u5219\u5bf9\u4e8e$m\\ge cnt$\u7684\u60c5\u51b5\uff0c\u6700\u4f18\u89e3\u80af\u5b9a\u662f\u53d6\u6240\u6709\u6b63\u6570\u3002\n\n\u8003\u8651$m=cnt-1$\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981\u4ece$m=cnt$\u7684\u60c5\u51b5\u51cf\u5c11\u4e00\u6bb5\u3002\n\n\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\u4e00\u79cd\u662f\u820d\u5f03\u4e00\u4e2a\u6b63\u6570\uff0c\u53e6\u4e00\u79cd\u662f\u53d6\u4e00\u4e2a\u8d1f\u6570\uff0c\u4f7f\u4e24\u8fb9\u7684\u6b63\u6570\u5408\u5e76\u6210\u4e00\u6bb5\u3002\n\n\u600e\u4e48\u53d6\u6700\u4f18\uff1f\u82e5\u820d\u5f03\u6b63\u6570$a$\uff0c\u4f1a\u635f\u5931$a$\u7684\u4ef7\u503c\u3002\u82e5\u53d6\u8d1f\u6570$a$\uff0c\u4f1a\u635f\u5931$-a$\u7684\u4ef7\u503c\u3002\n\n\u7edf\u4e00\u8d77\u6765\uff0c\u5c31\u662f\u82e5\u820d\u5f03/\u53d6\u8d70\u6570\u5b57$a$\uff0c\u4f1a\u635f\u5931$\\mid a\\mid$\u7684\u4ef7\u503c\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u8981\u627e\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u6570\u820d\u5f03/\u53d6\u8d70\u5373\u53ef\u3002\n\n\u820d\u5f03/\u53d6\u8d70\u4e00\u4e2a\u6570\u540e\uff0c\u5e8f\u5217\u4f1a\u53d8\u6210\u4ec0\u4e48\u6837\u5462\uff1f\n\n\u4e8b\u5b9e\u4e0a\uff0c\u820d\u5f03/\u53d6\u8d70\u4e00\u4e2a\u6570$a_i$\uff0c\u76f8\u5f53\u4e8e\u4e0e\u4e24\u8fb9\u7684\u6570\u5408\u5e76\uff0c\u5408\u5e76\u5b8c\u7684\u503c\u662f$a_{i-1}+a_i+a_{i+1}$\u3002\n\n\u4f8b\u5982$1,-2,3,-4,5$\uff0c\u82e5\u820d\u5f03$3$\uff0c\u5219\u5e8f\u5217\u53d8\u6210$1,-3,5$\uff1b\u82e5\u53d6\u8d70$-4$\uff0c\u5219\u5e8f\u5217\u53d8\u6210$1,-2,4$\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5\u53d6\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u6570\uff0c\u5408\u5e76\u5b8c\u4ee5\u540e\u7684\u5e8f\u5217\u8fd8\u662f\u6b63\u8d1f\u4ea4\u66ff\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u521a\u624d\u7684\u65b9\u6cd5\u7ee7\u7eed\u83b7\u5f97$m=cnt-2,cnt-3,\\dots$\u7684\u7b54\u6848\uff0c\u76f4\u81f3$m$\u8fbe\u5230\u9898\u76ee\u7684\u8981\u6c42\u3002\n\n\u53d6\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u6570\uff0c\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u505a\u3002\u5408\u5e76\u8282\u70b9\u53ef\u4ee5\u4f7f\u7528\u94fe\u8868\u3002\u7b54\u6848\u4e3a\u6700\u540e\u5408\u5e76\u5b8c\u7684\u5e8f\u5217\u7684\u6240\u6709\u6b63\u6570\u4e4b\u548c\u3002\n\n\u590d\u6742\u5ea6\uff1a\u5408\u5e76$O(n)$\u6b21\uff0c\u6bcf\u6b21$O(\\log n)$\uff0c\u603b\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n\u6b64\u7b97\u6cd5\u5728\u52a0\u5f3a\u7248\u4e2d\u671f\u671b\u5f97\u520690\uff0c\u5e38\u6570\u5361\u5f97\u597d\u53ef\u80fd\u53ef\u4ee5AC\u3002\n\n```c++\n#include <bits/stdc++.h>\ntypedef long long LL;\n\nconst int N = 1e6+50;\n\nstruct Data {\n    LL val;\n    int pos, tim;\n    \n    bool operator < (const Data &t) const {\n        return val > t.val;\n    }\n};\n\nint pl[N], pr[N];\nint tim[N] = {0};\n\nvoid del(int u) {\n    if (u == 0) return;\n    pr[pl[u]] = pr[u];\n    pl[pr[u]] = pl[u];\n    tim[u] = -1;\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    int n, m;\n    std::cin >> n >> m;\n    \n    static LL a[N] = {0};\n    int top = 0;\n    for (int i = 1; i <= n; i++) {\n        LL r; std::cin >> r;\n        if (r == 0) continue;\n        if (top == 0) {\n        \tif (r > 0) a[++top] = r;\n        \tcontinue;\n        }\n        if (a[top] > 0 == r > 0) a[top] += r;\n        else a[++top] = r;\n    }\n    if (top > 0 && a[top] < 0) top--;\n    \n    for (int i = 0; i <= top; i++) {\n        pl[i] = i == 0 ? top : i - 1;\n        pr[i] = i == top ? 0 : i + 1;\n    }\n    \n    std::priority_queue<Data> q;\n    for (int i = 1; i <= top; i++) {\n        q.push({ std::abs(a[i]), i, 0 });\n    }\n    \n    for (int cnt = top + 1 >> 1; cnt > m; cnt--) {\n        Data d = q.top(); q.pop();\n        while (tim[d.pos] != d.tim) {\n            d = q.top(); q.pop();\n        }\n        int u = d.pos, l = pl[u], r = pr[u];\n        a[u] += a[l] + a[r];\n        if (l != 0 && r != 0)\n            q.push({ std::abs(a[u]), u, ++tim[u] });\n        else del(u);\n        del(l); del(r);\n    }\n    \n    LL ans = 0;\n    for (int i = pr[0]; i != 0; i = pr[i])\n        if (a[i] > 0) ans += a[i];\n    std::cout << ans << std::endl;\n    return 0;\n}\n```\n\n### \u7b97\u6cd55\n\n\u4f18\u5316\u7b97\u6cd54\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n**\u7b97\u6cd5\u6b65\u9aa4\uff1a**\n\n\u5047\u8bbe\u5f53\u524d\u8fd8\u9700\u8981\u5408\u5e76$k$\u4e2a\u6570\u3002\n\n\u5148\u627e\u51fa\u5269\u4e0b\u7684\u6570\u4e2d\u7edd\u5bf9\u503c\u7b2c$k$\u5c0f\u7684\u6570\u548c\u7b2c$3k$\u5c0f\u7684\u6570\uff08\u82e5\u591a\u4e2a\u6570\u7edd\u5bf9\u503c\u76f8\u540c\u5219\u6bd4\u8f83\u7f16\u53f7\uff09\uff0c\u8bb0\u4e3a$mid1$\u548c$mid2$\u3002\u628a$\\mid a\\mid \\le mid1$\u7684\u6570\u5168\u90e8\u5408\u5e76\uff0c\u628a$\\mid a\\mid>mid2$\u7684\u6570\u5168\u90e8\u5ffd\u7565\uff08\u4e0d\u518d\u53c2\u4e0e\u5408\u5e76\uff09\u3002\n\n\u91cd\u590d\u4ee5\u4e0a\u64cd\u4f5c\uff0c\u76f4\u5230\u5269\u4e0b$m$\u4e2a\u6b63\u6570\u4e3a\u6b62\u3002\n\n**\u7ed3\u8bba1\uff1a\u6bcf\u8f6e\u5408\u5e76\u7684\u4e2a\u6570\u4e00\u5b9a$\\le k$\u3002**\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u8bbe\u5f53\u524d\u5408\u5e76$a_{i-1},a_i,a_{i+1}$\uff0c\u5219\u5408\u5e76\u5b8c\u7684\u6570$b=a_{i-1}+a_i+a_{i+1}$\u3002\n\n\u82e5\u5408\u5e76\u6b21\u6570$>k$\uff0c\u5219\u80af\u5b9a\u4f1a\u51fa\u73b0\u201c\u4e09\u4e2a\u6570\u4e2d\u53ea\u6709\u4e00\u4e2a\u9700\u8981\u5408\u5e76\u7684\u6570\uff0c\u5408\u5e76\u5b8c\u53c8\u4ea7\u751f\u4e86\u4e00\u4e2a\u9700\u8981\u5408\u5e76\u7684\u6570\u201d\u8fd9\u79cd\u60c5\u51b5\u3002\u4e5f\u5c31\u662f$|a_i|\\le mid1$\uff0c$|a_{i-1}|,|a_{i+1}|>mid1$\uff0c\u4e14$|b|<=mid1$\u7684\u60c5\u51b5\u3002\n\n\u7136\u800c\u8fd9\u79cd\u60c5\u51b5\u4e0d\u53ef\u80fd\u51fa\u73b0\u3002\u7531\u6570\u5b66\u65b9\u6cd5\u53ef\u4ee5\u63a8\u77e5\uff0c$|b|=|a_{i-1}|+|a_{i+1}|-|a_i|>mid1$\u3002\n\n\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u7b97\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u4e0d\u4f1a\u5408\u5e76\u8fc7\u5934\u3002\n\n**\u7ed3\u8bba2\uff1a\u6bcf\u8f6e\u5408\u5e76\u7684\u4e2a\u6570\u4e00\u5b9a$\\ge\\frac{1}{3}k$\u3002**\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u5408\u5e76\u6b21\u6570\u6700\u5c11\u7684\u60c5\u51b5\uff0c\u5c31\u662f$a_{i-1},a_i,a_{i+1}$\u90fd\u9700\u8981\u5408\u5e76\uff0c\u5374\u53ea\u5408\u5e76\u4e86\u4e00\u4e2a$a_i$\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u4e09\u4e2a\u9700\u8981\u5408\u5e76\u7684\u6570\u4e2d\uff0c\u81f3\u5c11\u53ef\u4ee5\u6210\u529f\u5408\u5e76\u4e00\u4e2a\uff0c\u5373\u5408\u5e76\u4e2a\u6570$\\ge\\frac{1}{3}k$\n\n**\u7ed3\u8bba3\uff1a$|a|>mid2$\u7684\u6570\u53ef\u4ee5\u5ffd\u7565\u3002**\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u56e0\u4e3a\u6839\u636e\u7ed3\u8bba2\uff0c\u5728\u6700\u5c0f\u7684$3k$\u4e2a\u6570\u4e2d\u81f3\u5c11\u53ef\u4ee5\u5408\u5e76$k$\u4e2a\u6570\u3002\u6240\u4ee5\u7b2c$3k$\u4e2a\u6570\u4ee5\u540e\u7684\u6570\u90fd\u4e0d\u4f1a\u88ab\u5408\u5e76\u3002\n\n**\u590d\u6742\u5ea6\u8bc1\u660e\uff1a**\n\n\u8bbe\u5f53\u524d\u8fd8\u9700\u8981\u5408\u5e76$k$\u4e2a\u6570\u3002\n\n\u6839\u636e\u7ed3\u8bba3\uff0c\u6211\u4eec\u53ea\u7559\u4e0b$3k$\u4e2a\u6570\uff0c\u6240\u4ee5\u6bcf\u4e00\u8f6e\u5408\u5e76\u7684\u590d\u6742\u5ea6\u4e3a$O(k)$\u3002\n\n\u6839\u636e\u7ed3\u8bba2\uff0c\u6bcf\u4e00\u8f6e\u5408\u5e76\uff0c\u90fd\u4f1a\u4f7f$k$\u7f29\u5c0f\u5230$\\frac{2}{3}k$\u3002\n\n\u90a3\u4e48\uff0c\u603b\u590d\u6742\u5ea6\u4e3a$n+\\frac{2}{3}n+(\\frac{2}{3})^2n+\\dots$\uff0c\u6839\u636e\u7b49\u6bd4\u6570\u5217\u516c\u5f0f\uff0c\u590d\u6742\u5ea6\u4e3a$O(n)$\uff0c\u671f\u671b\u5f97\u5206100\u3002\n\n```c++\n#include <bits/stdc++.h>\ntypedef long long LL;\ntypedef std::pair<LL, int> Data;\n\nconst int N = 1e6+50;\n\nint n, m; LL a[N];\nint L[N], R[N]; bool del[N];\nint L2[N], R2[N]; bool del2[N];\nint rem;\nData t[N], mx;\nstd::queue<LL> q; bool inQue[N];\n\nvoid Init() {\n\tstd::cin >> n >> m;\n    int top = 0;\n    for (int i = 1; i <= n; i++) {\n        LL r; std::cin >> r;\n        if (!r) continue;\n        if (!top && r < 0) continue;\n        if (top && a[top] > 0 == r > 0) a[top] += r;\n        else a[++top] = r;\n    }\n    if (top && a[top] < 0) top--;\n    for (int i = 0; i <= top; i++) {\n        R[i] = R2[i] = (i + 1) % (top + 1);\n        L[i] = L2[i] = (i + top) % (top + 1);\n    }\n    rem = top;\n}\n\nvoid AddQue(int u) {\n\tif (u && !inQue[u] && Data(std::abs(a[u]), u) <= mx)\n\t\tq.push(u), inQue[u] = true;\n}\n\nvoid Del2(int u) {\n\tif (!u || del2[u]) return;\n\tint l = L2[u], r = R2[u];\n\tR2[l] = r; L2[r] = l;\n\tdel2[u] = true;\n}\n\nvoid Del(int u) {\n\tif (!u || del[u]) return;\n\trem--;\n\tint l = L[u], r = R[u];\n\tR[l] = r; L[r] = l;\n\tdel[u] = true;\n\tDel2(u);\n}\n\nvoid Merge(int u) {\n\tif (del[u]) return;\n\tint l = L[u], r = R[u];\n\tif (l && std::abs(a[l]) < std::abs(a[u])) return;\n\tif (r && std::abs(a[r]) < std::abs(a[u])) return;\n\tDel(l); Del(r); a[u] += a[l] + a[r];\n\tl && r ? AddQue(u) : Del(u);\n\tAddQue(L[u]); AddQue(R[u]);\n}\n\nvoid Work() {\n\twhile (true) {\n\t\tn = 0;\n\t\tfor (int i = R2[0]; i; i = R2[i])\n\t\t\tif (!del2[i]) t[++n] = Data(std::abs(a[i]), i);\n\t\tif (rem <= m * 2 - 1) break;\n\t\tint mid = (rem - (m * 2 - 1)) / 2;\n\t\tnth_element(t + 1, t + std::min(mid, n), t + n + 1);\n\t\tmx = t[std::min(mid, n)];\n\t\tnth_element(t + 1, t + std::min(mid*3, n), t + n + 1);\n\t\tData mx2 = t[std::min(mid*3, n)];\n\t\tfor (int i = R2[0]; i; i = R2[i]) {\n\t\t\tData cur(std::abs(a[i]), i);\n\t\t\tif (cur > mx2) Del2(i);\n\t\t\telse AddQue(i);\n\t\t}\n\t\twhile (!q.empty()){\n\t\t\tint u = q.front(); q.pop(); inQue[u] = false;\n\t\t\tMerge(u);\n\t\t}\n\t}\n\tLL ans = 0;\n\tfor (int i = R[0]; i; i = R[i])\n\t\tif (a[i] > 0) ans += a[i];\n\tstd::cout << ans << std::endl;\n}\n\nint main() {\n\tstd::ios::sync_with_stdio(false);\n\tInit(); Work();\n    return 0;\n}\n\n```",
        "postTime": 1521692193,
        "uid": 2226,
        "name": "\u738b\u5c0f\u82b1\u513f",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2389 \u3010\u7535\u8111\u73ed\u7684\u88c1\u5458\u3011"
    },
    {
        "content": "\u9898\u76ee\u80cc\u666f\n\n\u9694\u58c1\u7684\u65b0\u521d\u4e00\u7535\u8111\u73ed\u521a\u8003\u8fc7\u4e00\u573a\u8bd5\uff0c\u53c8\u5230\u4e86BlingBling\u7684\u88c1\u5458\u65f6\u95f4\uff0c\u8001\u5e08\u628a\u8fd9\u9879\u5de5\u4f5c\u4ea4\u7ed9\u4e86ZZY\u6765\u8fdb\u884c\u3002\u800cZZY\u6700\u8fd1\u5fd9\u7740\u5237\u9898\uff0c\u5c31\u628a\u8fd9\u91cd\u8981\u7684\u4efb\u52a1\u4ea4\uff08tui\uff09\u7ed9\u4e86\u4f60\u3002\n\n\u9898\u76ee\u63cf\u8ff0\n\nZZY\u6709\u72ec\u7279\u7684\u88c1\u5458\u6280\u5de7\uff1a\u6bcf\u4e2a\u540c\u5b66\u90fd\u6709\u4e00\u4e2a\u8003\u8bd5\u5f97\u5206ai\uff08-1000<=ai<=1000\uff09\uff0c\u5728n\u4e2a\u540c\u5b66\uff08n<=500\uff09\u4e2d\u9009\u51fa\u4e0d\u5927\u4e8ek\u6bb5\uff08k<=n\uff09\u76f8\u90bb\u7684\u540c\u5b66\u7559\u4e0b\uff0c\u88c1\u6389\u672a\u88ab\u9009\u4e2d\u7684\u540c\u5b66\uff0c\u4f7f\u5269\u4e0b\u540c\u5b66\u7684\u5f97\u5206\u548c\u6700\u5927\u3002\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u6b21\u8003\u8bd5\u7b54\u9519\u8981\u6263\u5206\u3010\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u3011\uff0c\u6240\u4ee5\u5f97\u5206\u6709\u53ef\u80fd\u4e3a\u8d1f\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c\u4e3an\uff0ck\uff0c\u7b2c\u4e8c\u884c\u4e3a\u7b2c1~n\u4f4d\u540c\u5b66\u7684\u5f97\u5206\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\u4e00\u4e2a\u6570s\uff0c\u4e3a\u6700\u5927\u5f97\u5206\u548c\u3002\n\n\n------------\n\n\nn<=500,\u6240\u4ee5\u8003\u8651DP.\n\u7528 DP[i][j][opt]\u8868\u793a\u524di\u4e2a\u4eba\uff0c\u9009\u51faj\u6bb5\uff0c\u53ef\u4ee5\u53d6\u5f97\u7684\u6700\u5927\u5f97\u5206\u548c\n\u5f53opt==1\u65f6\uff0c\u8868\u793a\u9009\u7b2ci\u4e2a\u4eba\uff1b\n\u5f53opt==0\u65f6\uff0c\u8868\u793a\u4e0d\u9009\u7b2ci\u4e2a\u4eba\u3002\n\u90a3\u4e48\uff0c\u663e\u7136\uff0c\n\n\tDP[i][j][1]=max(DP[i-1][j][1],DP[i-1][j-1][0])+a[i];//\n    DP[i][j][0]=max(DP[i-1][j][0],DP[i-1][j][0]);//\n    \n\u8fb9\u754c\u6761\u4ef6\uff1a\n\n\tDP[0][j][0]=DP[i][0][0]=0//\u8bbe\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u4e0d\u7528\u5199\n\n\n\n------------\nCode:\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\ninline void re(int &a)\n{\n\ta=0;bool flag=false;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tflag=c=='-';\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\ta=(a<<1)+(a<<3)+(c^'0');\n\t\tc=getchar();\n\t}\n\tif(flag)a=-a;\n\treturn ;\n}\nint dp[510][510][2];\nint a[510];\nint ans;\nint n,k;\nint main()\n{\n\tre(n);re(k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tre(a[i]);\n\t\tfor(int j=1;j<=k;j++)\n\t\t\tdp[i][j][1]=max(dp[i-1][j][1],dp[i-1][j-1][0])+a[i],\n\t\t\tdp[i][j][0]=max(dp[i-1][j][1],dp[i-1][j][0]);//DP\n\t}\n\tfor(int i=1;i<=k;i++)\n\t\tans=max(ans,max(dp[n][i][1],dp[n][i][0]));//\u7531\u4e8e\u53ea\u662f\u81f3\u5c11\u9009k\u4e2a\u4eba\uff0c\u56e0\u6b64\u53d6max\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1525494724,
        "uid": 54475,
        "name": "\u732a\u8111\u5b50",
        "ccfLevel": 10,
        "title": "P2389 \u7535\u8111\u73ed\u7684\u88c1\u5458"
    },
    {
        "content": "\u770b\u5230\u9898\u89e3\u91cc\u6709\u4eba\u8bf4\u8fd9\u9898\u6570\u636e\u7565\u6c34\u611f\u89c9\u6709\u70b9\u614c\uff0c\u4e0d\u8fc7\u56de\u5934\u770b\u770b\u81ea\u5df1\u4ee3\u7801\u597d\u50cf\u4e5f\u8fd8\u884c~~\u90a3\u4e2a\u52a0\u5f3a\u7248\u4e5f\u70b9\u4e0d\u8fdb\u53bb\u554a...~~\n\n\u597d\u5427\uff0c\u5bf9\u7740\u9898\u9762\u6240\u7ed9\u6761\u4ef6\u4e0e\u6570\u636e\u8303\u56f4\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5~~\u8f7b\u6613\u5730~~\u770b\u51fa\u8fd9\u662f\u9053dp.\u56e0\u6b64,\u6211\u4eec\u53ef\u4ee5\uff1a\n\n**\u7528dp[i][j][0/1]\u8868\u793a\u5728\u9009\u7b2ci\u4e2a\u6570\u65f6,\u7b2cj\u6bb5\u5df2\u5f00\u59cb\u7528,\u7b2ci\u4e2a\u6570\u4e0d\u9009/\u9009,\u7684\u6700\u9ad8\u5f97\u5206**\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u5982\u4e0b\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$dp[i][j][1]=max(dp[i-1][j-1][0]+a[i],dp[i-1][j][1]+a[i]);$$\n\n\u4ee5\u53ca\n\n$$dp[i][j][0]=max(dp[i-1][j][0],dp[i-1][j][1]);$$\n\n\u6b64\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6700\u540eans\u8fd8\u5f97\u5168\u90e8\u8dd1\u4e00\u8fb9\uff0c\u56e0\u4e3a\u6709\u53ef\u80fdk\u4e2a\u533a\u95f4\u8fd8\u6ca1\u7528\u5b8c.\n```cpp\n#include<iostream>\nusing namespace std;\nint a[501],dp[501][501][2];\n//dp[i][j][0/1]\u8868\u793a\u5728\u9009\u7b2ci\u4e2a\u6570\u65f6,\u7b2cj\u6bb5\u5df2\u5f00\u59cb\u7528,\u7b2ci\u4e2a\u6570\u4e0d\u9009/\u9009,\u7684\u6700\u9ad8\u5f97\u5206 \nint main(){\n\tint n,k;\n\tcin>>n>>k;\n\tfor(int i=1; i<=n; i++)cin>>a[i];\n\tfor(int i=1; i<=n; i++){\n\t\tfor(int j=1; j<=i&&j<=k; j++){\n\t\t\tdp[i][j][1]=max(dp[i-1][j-1][0]+a[i],dp[i-1][j][1]+a[i]);\n\t\t\t//\u524d\u8005\u8868\u793a\u4e0a\u4e2a\u4eba\u6ca1\u9009,\u8fd9\u4e2a\u4eba\u9009(\u5373\u5f00\u542f\u4e86\u4e00\u4e2a\u65b0\u7684\u533a\u95f4)\n\t\t\t//\u540e\u8005\u8868\u793a\u4e0a\u4e2a\u4eba\u9009\u4e86,\u8fd9\u4e2a\u4eba\u7ee7\u7eed\u9009(\u5373\u5ef6\u7eed\u8fd9\u4e2a\u533a\u95f4)\n\t\t\tdp[i][j][0]=max(dp[i-1][j][0],dp[i-1][j][1]);\n\t\t\t//\u524d\u8005\u8868\u793a\u4e0a\u4e2a\u4eba\u6ca1\u9009,\u8fd9\u4e2a\u4eba\u4e5f\u4e0d\u9009(\u5373\u5ef6\u7eed\u7a7a\u6863)\n\t\t\t//\u540e\u8005\u8868\u793a\u4e0a\u4e2a\u4eba\u9009\u4e86,\u8fd9\u4e2a\u4eba\u5374\u4e0d\u9009(\u5373\u6253\u65ad\u8fd9\u4e2a\u533a\u95f4); \n\t\t}\n\t}\n\tint ans=0;\n\tfor(int j=0; j<=k; j++){\n\t\tans=max(ans,dp[n][j][1]);\n\t\tans=max(ans,dp[n][j][0]);\n\t} \n\tcout<<ans;\n\treturn 0;\n}\n```\n\u8981\u662f\u52a0\u4e86\u6eda\u52a8\u6570\u7ec4\uff0c\u8fd8\u53ef\u4ee5\u8fbe\u5230\u65f6\u95f4O\uff08nk\uff09\uff0c\u7a7a\u95f4O\uff08k\uff09\u7684\u4e86",
        "postTime": 1575614967,
        "uid": 249736,
        "name": "Seg_Tree",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2389 \u3010\u7535\u8111\u73ed\u7684\u88c1\u5458\u3011"
    },
    {
        "content": "$$ \\textbf{\\huge P2389[\u6d1b\u8c37\u539f\u521b]} $$\n$$ \\textbf{\\LARGE Computer class layoffs} $$\n$$ \\text{\\large \u2014\u2014\u2014\u2014Jair} $$\n\n$$ \\text{\\small Warning: This problem's solving belongs to} $$\n$$ \\textbf {\\huge $ \\mathbb{TOP\\;SECRET} $} $$\n$$ \\text {\\small Unauthorized personnel are prohibited from visiting} $$\n$$ \\text {\\small Perpetrators will be monitored, located, and dealt with} $$\n\n$$ PAY\\;ATTENTION: $$\n$$ \\text {\\small cspJ\\;\u8e29\u7ebf1$=$\u7684\u849f\u84bb\u6ca1\u6709\u60f3\u51fa\u5341\u5206\u4f18\u79c0\u7684\u8d85\u4f4e\u590d\u6742\u5ea6\u89e3\u6cd5} $$\n\n$$ \\large\u00b7 $$\n$$ \\large\u00b7 $$\n$$ \\large\u00b7 $$\n\n$$ \\large \\frak Forward $$\n--------\n\u4eca\u5929\u662f2021\u5e74\u7684\u7b2c\u4e00\u5929\uff08\u5012\u9709\u76842020\u5e74\u7ec8\u4e8e\u8fc7\u53bb\u4e86\uff09\u3002\u968f\u673a\u5237\u9898\u4e00\u770b\uff1a\u84dd\u9898\uff01\u518d\u4e00\u770b\uff1a\u600e\u4e48\u8fd9\u4e48\u6c34\uff1f\u7206\u5207\uff01\n\n\u4e8e\u662f5\u5206\u949f\u63a8\u51fa\u6765dp\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u2014\u2014\n\n$$ $$\n\n$$f[i][j][0]=max(f[i-1][j][1],f[i-1][j][0]);$$\n$$f[i][j][1]=max(f[i-1][j][1],f[i-1][j-1][0])+scores[i];$$\n\n$$ $$\n\n\u8bbe$f[i][j][1/0]$--->\u524d$i$\u4e2a\u540c\u5b66\u5206\u4e86$j$\u7ec4\uff0c\u7b2c$i$\u4e2a\u540c\u5b66\u7559\u4e0b\uff08$1$\uff09\u6216\u4e0d\u7559\uff08$0$\uff09.\n\n\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u7b2c\u4e8c\u884c$f[i-1][j-1][0]$\u4e2d\u662f$j-1$ \u5462\uff1f\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u5982\u679c\u4f60\u9009\u62e9\u7559\u4e0b\u7b2c$i$\u4e2a\u5b66\u751f\uff0c\u4e14\u4e0d\u9009\u62e9\u7b2c$i-1$\u540d\u5b66\u751f\uff0c\u5219\u6240\u5206\u7684\u7ec4\u6570\u5c31\u4f1a\u53d8\u5316\n\n$$ \\large \\frak CodeTime$$\n--------\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\n#define maxn 10000010\n#define int long long\n\nint n,k,scores[maxn];\nsigned G[1010][1010][2];\n\nsigned main(){\n\tmemset(G,-0x3f3f,sizeof G);//\u6709\u53ef\u80fd\u4e3a\u8d1f\u6570\n\tscanf(\"%lld%lld\",&n,&k);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&scores[i]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=k;j++){\n\t\t\tG[i][j][0]=max(0,max(G[i-1][j][0],G[i-1][j][1]));//\u56e0\u4e3a\u6709\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u548c\u96f6\u53d6max\n\t\t\tG[i][j][1]=max(0,max(G[i-1][j][1],G[i-1][j-1][0]))+scores[i];//\u56e0\u4e3a\u6709\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u548c\u96f6\u53d6max\n\t\t} \n\t}\n\tprintf(\"%lld\",max(G[n][k][0],G[n][k][1]));//\u8f93\u51fa\u6700\u540e\u4e00\u4e2a\u9009\u6216\u4e0d\u9009\u4e2d\u6700\u5927\u7684\n\treturn 0;\n}\n```\n\n$$ \\large \\frak {in\\;the\\;end}$$\n--------\n\u795d\u5927\u5bb6\u5143\u65e6\u5feb\u4e50\uff0c\u4e07\u4e8b\u5982\u610f\uff0c\u57282021\u5e74\u7efd\u653e\u5149\u5f69\uff01~~\u6211\u76f8\u4fe1\u6211\u4e00\u5b9a\u4f1a\u7684~~",
        "postTime": 1609505772,
        "uid": 360930,
        "name": "Jairon314",
        "ccfLevel": 6,
        "title": "P2389 \u7535\u8111\u73ed\u7684\u88c1\u5458"
    },
    {
        "content": "\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u5148\u62bd\u8c61\u4e00\u4e0b\u8fd9\u9053\u9898\uff1a\n \n\u8981\u8ba9\u7559\u4e0b\u6765\u7684\u4eba\u7684\u5206\u6570\u548c\u6700\u5927\uff0c\u5c31\u662f\u6c42k\u4e2a\u533a\u95f4\u7684\u6700\u5927\u548c.\n\n\n------------\n\n\n\u60f3\u60f3\u521a\u5b66dp\u65f6\u7684\u8fde\u7eed\u533a\u95f4\u6700\u5927\u548c\u95ee\u9898\uff0c\u4e0d\u5c31\u662fk=1\u662f\u7684\u7279\u6b8a\u60c5\u51b5\u5417\uff1f  \n\u53c2\u8003\u5b83\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u8bbedp[i][j]\u8868\u793a\u4ee5i\u7ed3\u675f\u7b2cj\u6bb5\u7684\u6700\u5927\u548c\u3002\n\n------------\n\u8003\u8651\u72b6\u6001\u7684\u8f6c\u79fb     \uff1a   \n\u663e\u7136i\u5e94\u8be5\u4e3a\u9636\u6bb5   \n\u679a\u4e3ej   \n\u63a5\u4e0b\u6765\u8003\u8651\u4ece\u524d\u9762\u54ea\u4e00\u4e2a\u9636\u6bb5\u8f6c\u79fb\u8fc7\u6765   \n\u518d\u6765\u4e00\u5c42\u679a\u4e3e   \n\u6b64\u65f6\u518d\u8003\u8651\u4ece\u54ea\u91cc\u5f00\u59cb\u672c\u9636\u6bb5  \n\u6700\u540e\u7684\u5f0f\u5b50\u662f\uff1a   \ndp[i][j]=max(dp[i][j],dp[k][j-1]+sum[l][i])   \n\u8fd9\u6837\u7684\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^4)  \n\u65e0\u6cd5\u901a\u8fc7n<=500   \n\u8003\u8651\u4f18\u5316.  \n\uff08\u6572\u9ed1\u677f\uff01\uff01\uff01\uff09  \n\u6211\u4eec\u53ef\u4ee5O(n^2)\u5730\u5904\u7406\u51fal~i\u4ee5i\u7ed3\u675f\u7684\u533a\u95f4\u6700\u5927\u548c  \n\uff08\u65b9\u6cd5\u53c2\u8003\u6587\u9996\uff09   \n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u5df2\u5c06dp\u4f18\u5316\u4e3aO\uff08n^3\uff09\u4e86  \n\u53ef\u4ee5\u901a\u8fc7\u672c\u9898   \n\u540c\u7406\uff0c\u679a\u4e3e\u524d\u4e00\u9636\u6bb5\u7684\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u4e3alog\uff08n\uff09         \n(\u6709\u5927\u4f6c\u6709O\uff08n\uff09\u7684\u7b97\u6cd5\uff0c\u53ef\u60dc\u6211\u4e0d\u4f1a\u3002\u3002\u3002)   \n\u7559\u7ed9\u5927\u5bb6\u601d\u8003   \uff08 _\u61d2_ \uff09  \n\u6700\u540e\u9644\u4e0aAC\uff08\u770b\u5b8c\uff09\u4ee3\u7801   \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint i,j,k,m,n,s,t,dp[501][501],a[501],sum[501],ans[501][501],b[501][501];\nint main()\n{\n\tcin>>n>>m;\n\tfor(i=1;i<=m;i++)\n\tcin>>a[i];\n\tfor(i=0;i<=n;i++)\n\tfor(j=i;j<=n;j++)\n\tif(b[i][j-1]>0)\n\tb[i][j]=a[j]+b[i][j-1];//\u5904\u7406l\u5230i\u4ee5i\u7ed3\u675f\u533a\u95f4\u6700\u5927\u503c\uff0c\u539f\u7406\u53c2\u8003 p1115\n\telse\n\tb[i][j]=a[j];\n\tfor(i=1;i<=n;i++)//\u679a\u4e3e\u72b6\u6001 \n\tfor(j=1;j<=max(i,m);j++)//\u6211\u7684\u4ee3\u7801\u5f3a\u5236\u8981\u6c42\u533a\u95f4\u957f\u5927\u4e8e1\uff0c\u6240\u4ee5\u3002\u3002\u3002 \n\tfor(k=j-1;k<i;k++)//\u540c\u4e0a \n\tdp[i][j]=max(dp[i][j],dp[k][j-1]+b[k+1][i]);//\u8f6c\u79fb\u5f0f\u5b50 \n\tint tt=0;\n\tfor(i=0;i<=n;i++)\n\tfor(j=0;j<=m;j++)\n\ttt=max(tt,dp[i][j]);//\u6b64\u9898\u5f88\u5751\uff0c\u533a\u95f4\u957f\u5ea6\u53ef\u4ee5\u4e3a0\uff0c\u6240\u4ee5\u6765\u4e00\u6ce2\u6700\u5927\u503c \n\tcout<<tt;\n\treturn 0;\n}\n```\n\u4e3a\u9632\u6b62\u5927\u5bb6\u6284\u9898\u89e3\uff0c\u4ee5\u4e0a\u4ee3\u7801\u80af\u5b9aWA\uff0c\u6709\u4e00\u4e2a\u5c0f\u9519\uff0c\u4f46\u5173\u952e\u90e8\u5206\u6ca1\u6709\u95ee\u9898    \n\u672c\u4eba\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u82e5\u6709\u89e3\u91ca\u4e0d\u6e05\u695a\u6216\u9519\u8bef\u7684\u5730\u65b9\u656c\u8bf7\u6307\u51fa  \n\u8c22\u8c22\n\n\n\n\n\n\n\n\n",
        "postTime": 1573218953,
        "uid": 177535,
        "name": "CDFLS_mao_zx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2389 \u3010\u7535\u8111\u73ed\u7684\u88c1\u5458\u3011"
    },
    {
        "content": "## \u8d2a\u5fc3\u7684\u505a\u6cd5\uff01\n\u4ece\u6d69\u701a\u65e0\u57a0\u7684\u9898\u89e3\u5927\u5e93\u4f8b\u7ffb\u6765\u8986\u53bb\uff0c\u600e\u4e48\u51e0\u4e4e\u5168\u90e8\u90fd\u662fdp\u7684\u9898\u89e3\uff01\n\n\u6765\u8fd9\u91cc\u6765\u4e00\u7bc7\u8d2a\u5fc3\u9898\u89e3\uff01\n\n~~\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u7528\u8d2a\u5fc3\uff0c\u90a3\u5f53\u7136\u662f\u56e0\u4e3adp\u672c\u4eba\u4e0d\u4f1a\u554a\uff0c\u545c\u545c\u545c~~~\n\n\u9996\u5148\u521d\u6b65\u5206\u6790\u4e00\u4e0b\u9898\u76ee\u6570\u636e\u7684\u6027\u8d28\uff0c\u8f93\u5165\u7684\u6570\u636e\u4e00\u5b9a\u662f\u6b63\u6570\uff0c\u8d1f\u6570\uff0c0\u3002\n\n\u6211\u4eec\u5148\u629b\u5f00\u6570\u636e\u662f0\u7684\u60c5\u51b5\u4e0d\u770b\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u8fd9\u4e2a0\uff0c\u6211\u4eec\u9009ta\u6216\u8005\u4e0d\u9009ta\u90fd\u65e0\u4f24\u5927\u96c5\uff01\uff01\u4f3c\u4e4e\u662f\u8fd9\u4e2a\u6837\u7684\uff08\u786e\u5b9e\u662f\u8fd9\u4e2a\u6837\u7684\uff09\n\n\u90a3\u4e48\u628a\u6240\u4ee5\u76840\u6254\u53bb\u4e00\u8fb9\uff0c\u7559\u4e0b\u7684\u6570\u636e\u4e00\u5b9a\u662f\u4e00\u6bb5\u6b63\u6570\uff0c\u4e00\u6bb5\u8d1f\u6570\uff01\n\n\u90a3\u4e48\u597d\uff0c\u5982\u679c\u60f3\u8981\u4f7f\u7b54\u6848\u4f18\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u6bb5\u6b63\u6570\u6216\u8d1f\u6570\uff0c\u6211\u4eec\u6700\u597d\u540c\u65f6\u9009\u4e0a\u6216\u8005\u540c\u65f6\u4e0d\u9009\u4e0a\uff01\n\n\u90a3\u4e48\u6211\u4eec\u4fbf\u53ef\u4ee5\u628a\u8fde\u7eed\u7684\u6b63\u6570\u6bb5\u548c\u8fde\u7eed\u7684\u8d1f\u6570\u6bb5\u5408\u8d77\u6765\uff0c\u6784\u6210\u4e00\u6bb5\u65b0\u6570\u636e\uff01\n\n\u5e76\u4e14\u8fd9\u7ec4\u6570\u636e\u975e\u5e38\u6709\u7279\u70b9\uff0c\u80af\u5b9a\u662f\u4e00\u4e2a\u6b63\uff0c\u4e00\u4e2a\u8d1f\uff01\u8fde\u7eed\u4e0d\u65ad\uff01\n\n**\u5bf9\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u6709\u4e00\u6ce2\u5c0f\u64cd\u4f5c\uff0c** \u5c31\u662f\u7b2c\u4e00\u4e2a\u533a\u95f4\u548c\u6700\u540e\u4e00\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u662f\u8d1f\u533a\u95f4\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u4f1a\u88ab\u9009\u5165\uff08\u5f88\u663e\u7136\u7684\u8bc1\u660e\uff09\uff0c\u90a3\u4e48\u5728\u7edf\u8ba1\u533a\u95f4\u548c\u7684\u6570\u7ec4\u4e2d\u53ef\u4ee5\u53bb\u6389\u8fd9\u4e24\u4e2a\u533a\u95f4\uff01\n\n\u6211\u4eec\u53ef\u4ee5\u7edf\u8ba1\u4e00\u4e0b\u6b63\u6570\u6bb5\u7684\u4e2a\u6570cnt\u3002\n\n\u5982\u679c\u7528\u4e86\u4e0a\u9762\u90a3\u6ce2\u64cd\u4f5c\uff0c\u90a3\u4e48cnt=\uff08\u7edf\u8ba1\u8fdb\u7b54\u6848\u7684\u533a\u95f4\u603b\u6570+1\uff09>>1;\n\n**\u5982\u679ccnt<=k,\u5bf9\u4e8e\u6700\u4f18\u7b54\u6848\u6211\u4eec\u53ea\u9700\u8981\u628a\u6240\u4ee5\u7684\u6b63\u6570\u6bb5\u52a0\u8d77\u6765\u4fbf\u662f\u6700\u4f18\u89e3**\n\n\u53ef\u662f\uff01\uff01\u4e00\u4e2a\u65b0\u95ee\u9898\u6765\u4e86\uff0c\u5982\u679ccnt>k\u53c8\u8be5\u600e\u4e48\u529e\u5462\uff1f\uff1f\n\n\u8fd9\u65f6\u5019\u7684\u6211\u4eec\u53ea\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n**\u64cd\u4f5c\u4e00\uff1a\u53bb\u6389\u4e00\u6bb5\u6b63\u6570\u533a\u95f4\uff0c\u4f7f\u603b\u7b54\u6848\u51cf\u5c11~**\n\n**\u64cd\u4f5c\u4e8c\uff1a\u52a0\u4e0a\u4e00\u6bb5\u8d1f\u533a\u95f4\uff0c\u4f7f\u4e24\u4e2a\u6b63\u533a\u95f4\u5408\u5e76\u8d77\u6765\u3002**\n\n\u5176\u5b9e\u5bf9\u4e8e\u64cd\u4f5c\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u662f\u628a\u5c11\u9009\u4e00\u4e2a\u6b63\u533a\u95f4\uff0c\u628a\u76f8\u90bb\u4e24\u4e2a\u8d1f\u533a\u95f4\u5408\u5e76\u8d77\u6765\n\n\u5176\u5b9e\u65e0\u8bba\u6211\u4eec\u9009\u62e9\u54ea\u79cd\u64cd\u4f5c\uff0c\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u5c31\u662f\u8fd9\u6bb5\u533a\u95f4\u603b\u548c\u7684\u7edd\u5bf9\u503c~ \n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u5f00\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u5e76\u4e14\u628a\u6240\u4ee5\u7684\u533a\u95f4\u7684\u7edd\u5bf9\u503c\u5b58\u8fdb\u53bb\uff0c\u6bcf\u6b21\u53bb\u53d6\u6700\u5c0f\u7684\u6765\u5408\u5e76\u533a\u95f4\u4e0d\u5c31\u53ef\u4ee5\u4e86\u5417\uff01\n\n**\u5408\u5e76\u533a\u95f4\u600e\u4e48\u529e\u5462\uff0c\u6211\u4eec\u5728\u5b58\u533a\u95f4\u7edd\u5bf9\u503c\u7684\u65f6\u5019\u7ef4\u62a4\u4e0a\u4e00\u4e2a\u533a\u95f4\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u6211\u4eec\u4ece\u4f18\u5148\u961f\u5217\u91cc\u53d6\u51fa\u961f\u9876\uff0c\u5982\u679c\u8fd9\u4e2a\u961f\u9876\u5df2\u7ecf\u88ab\u5408\u5e76\u5230\u522b\u7684\u5730\u65b9\u4e86\uff0c\u5c31\u7ee7\u7eed\u53d6\u51fa\u961f\u9876\uff0c\u76f4\u81f3\u8fd9\u4e2a\u961f\u9876\u4fdd\u8bc1\u4e4b\u524d\u6ca1\u6709\u88ab\u5408\u5e76\uff0c\u5e76\u4e14\u6211\u4eec\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u5de6\u53f3\u4f4d\u7f6e\u7684\u503c\u5408\u5e76\u5230\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u5e76\u4e14\u628a\u5de6\u53f3\u4f4d\u7f6e\u6253\u4e0a\u6807\u8bb0\uff08\u610f\u601d\u5c31\u662f\u8fd9\u4fe9\u533a\u95f4\u5df2\u7ecf\u6d88\u5931\u4e86\uff09\uff0c\u518d\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u65b0\u503c\u538b\u5165\u4f18\u5148\u961f\u5217\uff01\u4e0d\u65ad\u5f80\u590d\u7684\u64cd\u4f5c\uff01**\n\n\u90a3\u4e48\u5de6\u53f3\u4f4d\u7f6e\u5e94\u8be5\u600e\u4e48\u5904\u7406\u5462\uff0c\u7528\u4e00\u4e0b\u94fe\u8868\u7684\u60f3\u6cd5\uff0c\u5408\u5e76\u4e86\u4ee5\u540e\u5c31\u53bb\u66f4\u65b0\u4f4d\u7f6e\u7684\u5de6\u53f3\uff0c\u548c\u5de6\u7684\u5de6\u4f4d\u7f6e\u7684\u53f3\uff0c\u4ee5\u53ca\u53f3\u7684\u53f3\u4f4d\u7f6e\u7684\u5de6\uff01\n\n\u90a3\u4e48\u8981\u5904\u7406\u591a\u5c11\u6b21\u5462\uff0c\u65e0\u8bba\u662f\u53bb\u6389\u4e00\u4e2a\u6b63\u533a\u95f4\u6216\u8005\u52a0\u4e0a\u4e00\u4e2a\u8d1f\u533a\u95f4\uff0c\u6211\u4eec\u7684\u6b63\u533a\u95f4\u6570\u91cf\u90fd\u4f1a\u51cf\u4e00\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5904\u7406\u5230\u6b63\u533a\u95f4\u4e2a\u6570\u6070\u597d\u7b49\u4e8ek\u4fbf\u662f\u6700\u4f18\u89e3\uff01\n\n**\u603b\u7ed3\u4e00\u4e0b\uff0c\u5982\u679c\u4e00\u5f00\u59cb\u7684\u6b63\u533a\u95f4\u6570\u91cfcnt<=k,\u76f4\u63a5\u8f93\u51fa\u6240\u4ee5\u6b63\u533a\u95f4\u7684\u548c\uff1b\u5426\u5219\uff0c\u901a\u8fc7cnt-k\u6b21\u5408\u5e76\u64cd\u4f5c\uff0c\u5c06\u6b63\u533a\u95f4\u6570\u91cf\u53d8\u4e3ak\uff0c\u8f93\u51fa\u6240\u4ee5\u6b63\u533a\u95f4\u548c\uff01**\n\n------------\n### \u6765\u6a21\u62df\u4e00\u7ec4\u6570\u636e\n\n\u597d\uff0c\u90a3\u4e48\u8fd9\u91cc\u6211\u4eec\u6765\u4e00\u7ec4\u6570\u636e\u4fbf\u4e8e\u7406\u89e3 ~~\uff08\u659c\u773c\u7b11\uff09~~\n\n![](https://cdn.luogu.com.cn/upload/pic/69623.png)\n\n\u6211\u4eec\u4e0d\u59a8\u5148\u628a\u8fd9\u4e00\u957f\u4e32\u6570\u636e\u5408\u5e76\u4e00\u4e0b\n\n\u5f97\u5230\uff1a 25 \uff0c-18\uff0c12\uff0c-3\uff0c5\n\n\u8fd9\u6837\u4e00\u7ec4\u6570\u636e\uff0c\u663e\u7136\u8fd9\u91cc\u6709\u4e09\u4e2a\u6b63\u533a\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u5f00\u59cb\u8fdb\u884c\u64cd\u4f5c\uff1a\n\n\u663e\u7136\u8fd9\u91cc-3\u662f\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u4fe9\u8fdb\u884c\u5408\u5e76\n\n![](https://cdn.luogu.com.cn/upload/pic/69633.png)\n\n\u663e\u7136\u8fd9\u65f6\uff0c\u6b63\u533a\u95f4\u6570cnt=k\uff0c\u7ed3\u675f\u64cd\u4f5c\uff0c\u5e76\u628a\u6b63\u533a\u95f4\u8f93\u51fa\uff01\n\n\u7b54\u6848\u4e3a39\uff01\n\n------------\n\n### cpp\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <queue>\nusing namespace std;\n#define maxn 550\n\nstruct Node\n{\n\tint val,pos;\n\tbool operator < (const Node &h) const\n\t{\n\t\treturn val>h.val;\n\t}\n};\n\nint L[maxn],R[maxn];\nint a[maxn],tot;\nint n,k,t,cnt,ans;\nbool vis[maxn];\npriority_queue <Node> q;\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tif(t==0) continue;\n\t\tif(t>0&&tot==0)\n\t\t{\n\t\t\ta[++tot]=t;\n\t\t\tcontinue;\n\t\t}\n\t\tif(a[tot]*t>0) a[tot]+=t;\n\t\telse a[++tot]=t;\n\t}\n\tif(a[tot]<0) tot--;\n\tfor(register int i=0;i<=tot;i++)\n\t{\n\t\tL[i]=i-1;\n\t\tR[i]=i+1;\n\t}\n\tfor(register int i=1;i<=tot;i++) q.push((Node){abs(a[i]),i});\n\tcnt=((tot+1)>>1)-k;\n\twhile(cnt>0)\n\t{\n\t\tint u=q.top().pos;q.pop();\n\t\twhile(vis[u])\n\t\t{\n\t\t\tu=q.top().pos;\n\t\t\tq.pop();\n\t\t}\n\t\tint l=L[u],r=R[u];\n\t\ta[u]=a[u]+a[l]+a[r];\n\t\tif(l!=0) vis[l]=true;\n\t\tif(r!=tot+1) vis[r]=true;\n\t\t\n\t\tL[u]=L[l];\n\t\tR[u]=R[r];\n\t\tR[L[l]]=u;\n\t\tL[R[r]]=u;\n\t\tq.push((Node){abs(a[u]),u});\n\t\tcnt--;\n\t}\n\tfor(register int i=1;i<=tot;i++) if(!vis[i]&&a[i]>0) ans+=a[i];\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n## Over!",
        "postTime": 1565080855,
        "uid": 124517,
        "name": "Notshgiook",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2389 \u3010\u7535\u8111\u73ed\u7684\u88c1\u5458\u3011"
    },
    {
        "content": "\u4e00\u5929\u665a\u4e0a11\u70b9\u4e86\u8fd8\u5728\u5237\u9898\n\n\u770b\u4e86\u8fd9\u84dd\u9898\uff0c\u89c9\u5f97\u4eca\u5929\u770b\u5b8c\u4e86\uff0c\u665a\u4e0a\u60f3\u4e00\u60f3\uff0c\u660e\u5929\u5199\u7684\u3002\n\n\u6ca1\u60f3\u5230\u5199\u7684\u98de\u5feb\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u8c03\u8bd5\u4e0d\u8c03\u800c\u8fc7\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u4e00\u904dAC\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u800c\u6211\u5e76\u4e0d\u662f\u795e\u7287\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u6211\u662f\u7f8e\u4e3d\u7684\u5206\u5272\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u63a8\u8350\u5148\u770b\u4e00\u4e0b[P2642](https://www.luogu.org/problemnew/show/P2642)\n\n\u548c\u90a3\u9898\u51e0\u4e4e\u4e00\u6837\n\n```cpp\ndp[i][j][1] \u8868\u793a\u524di\u4e2a\u5206j\u6bb5,\u7b2ci\u4e2a\u9009\u4e2d\u7684\u6700\u5927\u503c\u3002\ndp[i][j][0] \u8868\u793a\u524di\u4e2a\u5206j\u6bb5,\u7b2ci\u4e2a\u4e0d\u9009\u7684\u6700\u5927\u503c\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\ndp[i][j][0] = max(dp[i-1][j][1],dp[i-1][j][0]);//\u5982\u679c\u6211\u4e0d\u9009\uff0c\u90a3\u6211\u524d\u4e00\u4e2a\u53ef\u4ee5\u9009\u4e5f\u53ef\u4ee5\u4e0d\u9009\u3002\ndp[i][j][1] = max(dp[i-1][j][1],dp[i-1][j-1][0]) + a[i];//\u5982\u679c\u6211\u9009\uff0c\u6211\u8981\u4e48\u8fde\u7eed\u4e0a\u4e00\u6bb5\uff0c\u8981\u4e48\u65b0\u5f00\u4e00\u6bb5\u3002\n\n```\n\n\u597d\u7b80\u5355\u7684\u6837\u5b50\u3002\u3002\u3002\u3002\u3002\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint dp[510][510][2],i,j,n,k,a[510];\nint main(){\n\tcin >> n >> k;\n\tfor(i=1;i<=n;i++){\n\t\tcin >> a[i];\n\t\tfor(j=1;j<=k;j++){\n\t\t\tdp[i][j][0] = max(dp[i-1][j][1],dp[i-1][j][0]);\n\t\t\tdp[i][j][1] = max(dp[i-1][j][1],dp[i-1][j-1][0]) + a[i];\n\t\t}\n\t}\n\tcout << max(dp[n][k][1],dp[n][k][0]);\n}\n```\n\u6211\u5f97\u627f\u8ba4\uff0c\u6211\u8981\u662f\u6ca1\u505a\u8fc72642\u8fd8\u771f\u4e0d\u4e00\u5b9a\u80fd\u60f3\u5230\u3002\n\n\u800c\u4e14\uff0c\u6211\u89c9\u5f97\u8bc4\u7ea7\u5230\u4e0d\u4e86\u84dd\u9898\u3002\n\n\u7b2c\u4e00\u7bc7\u84dd\u9898\u9898\u89e3\uff0c\u5e0c\u671b\u7ba1\u7406\u5458\u80fd\u8ba9\u8fc7\u3002",
        "postTime": 1555254740,
        "uid": 121260,
        "name": "mikechu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2389 \u3010\u7535\u8111\u73ed\u7684\u88c1\u5458\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u597d\u5199\u3001\u597d\u60f3\u7684$O(n^2)$\u7b97\u6cd5\u3002\n\n\u8bbe$F[i][j][0/1]$\u4e3a\u5f53\u524d\u9009\u5230\u7b2c$i$\u4e2a\u6570\uff0c\u5df2\u6709$j$\u4e2a\u5206\u7ec4\uff0c$0$\u4e0e$1$\u4ee3\u8868\u7b2c$i$\u4e2a\u6570\u4e00\u5b9a\u9009\u6216\u4e00\u5b9a\u4e0d\u9009\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u4e3a:\n\n$F[i][j][0] = max(F[i - 1][j][0], F[i - 1][j][1])$\n\n\uff08\u7531\u201c\u76f8\u540c\u7ec4\u6570\u65f6\u4e0a\u4e00\u4e2a\u6570\u9009\u6216\u4e0d\u9009\u201d\u4e24\u79cd\u60c5\u51b5\u4e2d\u6700\u5927\u503c\u8f6c\u79fb\u800c\u6765\uff09\n\n$F[i][j][1] = max(F[i - 1][j][1], F[i - 1][j - 1][0]) + a[i]$(\u5176\u4e2d$a[i]$\u4e3a\u7b2c$i$\u4e2a\u4eba\u8003\u8bd5\u5f97\u5206)\n\n\uff08\u7531\u201c\u76f8\u540c\u7ec4\u6570\u65f6\u4e0a\u4e00\u4e2a\u6570\u9009\u201d\u4e0e\u201c\u7ec4\u6570\u51cf\u4e00\u65f6\u4e0a\u4e2a\u6570\u4e0d\u9009\u201d\uff08$j - 1$\u662f\u56e0\u4e3a\u4e0a\u4e2a\u6570\u4e0d\u9009\u7684\u8bdd\u7ec4\u6570\u8981\u52a0\u4e00\uff09\u4e24\u79cd\u60c5\u51b5\u4e2d\u4e2d\u6700\u5927\u503c\uff0c\u518d\u52a0$a[i]$\u8f6c\u79fb\u800c\u6765\uff09\n\n\u6700\u540e\u5728$F[n][j][0/1](1 \\leqslant j \\leqslant k)$\u4e2d\u627e\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u4e0b\u9644\u4ee3\u7801:\n```cpp\n#include <algorithm>\n#include <cstdio>\nconst int MAXN = 501;\nint n, k, tmp, ans;\nint a[MAXN], f[MAXN][MAXN][2];\nint main() {\n    scanf(\"%d%d\", &n, &k);\n    for (int i = 1; i <= n; ++i)\n        scanf(\"%d\", &a[i]);\n    for (int i = 1 ; i <= n; ++i)\n        for (int j = std::min(i, k); j >= 1; --j) {\n            f[i][j][0] = std::max(f[i - 1][j][0], f[i - 1][j][1]);\n            f[i][j][1] = std::max(f[i - 1][j][1], f[i - 1][j - 1][0]) + a[i];\n        }\n    for (int i = 1; i <= k; ++i)\n        ans = std::max(ans, std::max(f[n][i][1], f[n][i][0]));\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\u618b\u8d70\uff01\u518d\u6709\uff0c\u628a$F$\u6570\u7ec4\u538b\u6210\u4e00\u7ef4:\n```cpp\n#include <algorithm>\n#include <cstdio>\nconst int MAXN = 501;\nint n, k, tmp, ans;\nint a[MAXN], f[MAXN][2];\nint main() {\n    scanf(\"%d%d\", &n, &k);\n    for (int i = 1; i <= n; ++i)\n        scanf(\"%d\", &a[i]);\n    for (int i = 1 ; i <= n; ++i)\n        for (int j = std::min(i, k); j >= 1; --j) {\n            f[j][0] = std::max(f[j][0], f[j][1]);\n            f[j][1] = std::max(f[j][1], f[j - 1][0]) + a[i];\n        }\n    for (int i = 1; i <= k; ++i)\n        ans = std::max(ans, std::max(f[i][1], f[i][0]));\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\u8c22\u8c22\u5ba1\u8bfb\u3002\n\uff08PS\uff1a\u611f\u8c22\u697c\u4e0bDDOSvoid\u5927\u4f6c\u601d\u8def\uff09",
        "postTime": 1519789368,
        "uid": 17381,
        "name": "mzq667",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2389 \u3010\u7535\u8111\u73ed\u7684\u88c1\u5458\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u597d\u50cf\u53ef\u4ee5 O(nlogn)\uff0c\u53cd\u6b63\u6211\u4e0d\u4f1a\u3002\u5148\u8003\u8651\u4e00\u4e2a dp \u65b9\u7a0b\uff0c f\\[i]\\[j] \u8868\u793a\u524d i \u4e2a\u540c\u5b66\u9009\u4e86 j \u6bb5\uff0c\u8003\u8651\u8f6c\u79fb\uff0cf\\[i]\\[j] = max(f\\[k]\\[j - 1] + mis\\[k + 1]\\[i]) k = 0 ~ i - 1\uff0c\u5176\u4e2d mis\u662f\u6700\u5927\u5b50\u6bb5\u548c\uff0c~~\u663e\u7136~~\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u7528\u7ebf\u6bb5\u6811\u4ec0\u4e48\u7684==\u3002\u7136\u540e\u590d\u6742\u5ea6\u5c31\u662f $O(n^3)$ \u53ef\u4ee5\u8fc7\u3002~~\u867d\u7136\u6211\u611f\u89c9 500 \u8fc7\u4e0d\u4e86\u7684~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define maxn 510\n#define INF 100000000\nusing namespace std;\n\nint n, k, f[maxn][maxn], a[maxn], mis[maxn][maxn];\n\n// \u5ffd\u7565\u8fd9\u4e2a\u5199\u7684\u5de8\u4e11\u7684\u7ebf\u6bb5\u6811 \n#define lc i << 1\n#define rc i << 1 | 1\nstruct node{\n\tint l,r,sum_pre,sum_suf,sum,mis;\n}tree[maxn<<2];\ninline void _update(int i){\n\ttree[i].sum=tree[lc].sum+tree[rc].sum;\n\ttree[i].sum_pre=max(tree[lc].sum_pre,tree[rc].sum_pre+tree[lc].sum);\n\ttree[i].sum_suf=max(tree[rc].sum_suf,tree[lc].sum_suf+tree[rc].sum);\n\ttree[i].mis=max(tree[lc].sum_suf+tree[rc].sum_pre,max(tree[lc].mis,tree[rc].mis));\n}\nvoid build(int i,int l,int r){\n\ttree[i].l=l;tree[i].r=r;\n\tif(l==r){\n\t\ttree[i].sum=tree[i].sum_pre=tree[i].sum_suf=tree[i].mis=a[l];\n\t\treturn ;\n\t}\n\tint m=l+r>>1;\n\tbuild(lc,l,m);\n\tbuild(rc,m+1,r);\n\t_update(i);\n}\nnode query(int i,int l,int r){\n\tif(tree[i].l>r || tree[i].r<l) return (node){0,0,-INF,-INF,0,-INF};\n\tif(tree[i].l>=l && tree[i].r<=r) return tree[i];\n\tnode tmp1=query(lc,l,r),tmp2=query(rc,l,r),tmp;\n\ttmp.mis=max(tmp1.sum_suf+tmp2.sum_pre,max(tmp1.mis,tmp2.mis));\n\ttmp.sum=tmp1.sum+tmp2.sum;\n\ttmp.sum_pre=max(tmp1.sum_pre,tmp2.sum_pre+tmp1.sum);\n\ttmp.sum_suf=max(tmp2.sum_suf,tmp1.sum_suf+tmp2.sum);\n\treturn tmp;\n}\n\nint main(){\n\tscanf(\"%d%d\", &n, &k);\n\tfor(int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n\tbuild(1, 1, n);\n\tfor(int i = 1; i <= n; ++i)\n\t\tfor(int j = i; j <= n; ++j)\n\t\t\tmis[i][j] = query(1, i, j).mis;\n\tfor(int i = 1; i <= n; ++i)\n\t\tfor(int j = 1; j <= min(i, k); ++j)\n\t\t\tfor(int k = 0; k < i; ++k)\n\t\t\t\tf[i][j] = max(f[i][j], f[k][j - 1] + mis[k + 1][i]);\n\tint ans = 0;\n\tfor(int i = 1; i <= k; ++i) ans = max(ans, f[n][i]);\n\tcout << ans;\n\treturn 0;\n}\n```\n\t",
        "postTime": 1519459516,
        "uid": 34531,
        "name": "DDOSvoid",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2389 \u3010\u7535\u8111\u73ed\u7684\u88c1\u5458\u3011"
    },
    {
        "content": "wow~\uff0c\u6211\u5c45\u7136\u662f\u7b2c\u4e00\u4e2a\u9898\u89e3\u3002\n\n\u8bdd\u8bf4\u8fd9\u4e2a\u9898\u770b\u4e0a\u53bb\u597d\u50cf\u5f88\u7b80\u5355\uff0c\u5b9e\u9645\u4e0a\u8fd8\u662f\u6709\u5f88\u591a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u3002\n\n\u9996\u5148\uff0c\u8fd9\u4e2a\u9898\u7684\u6570\u636e\u6bd4\u8f83\u5c0f\u3002\u3002\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5f00\u4e09\u7ef4\u66b4\u529bdp\u6570\u7ec4\uff0c\u8c8c\u4f3c\u53ef\u4ee5\u52c9\u5f3a\u8fc7\u53bb\uff0c\u4f46\u662f\u7a0d\u5fae\u518d\u5927\u4e00\u70b9\uff08\u5927\u4e2a\u4e94\u516d\u5341\uff09\u8fd9\u4e2a\u9898\u90fd\u76f4\u63a5\u7206\u70b8\u3002\u6240\u4ee5\u5173\u952e\u5728\u4e8e\u538b\u7ef4\u3002\u6211\u4eec\u7528ans\u6765\u50a8\u5b58\u76f8\u5f53\u4e8ef[k][i][j-1]\uff0c\u8fd9\u6837\u5c31\u628a\u672c\u6765\u4e09\u7ef4\u7684\u6570\u7ec4\u538b\u5230\u4e86\u4e8c\u7ef4\u3002\uff08\u81f3\u4e8e\u5177\u4f53\u539f\u56e0\u8fd8\u5e0c\u671b\u5927\u5bb6\u81ea\u5df1\u53bb\u60f3\uff0c\u6bd5\u7adf\u8fd9\u4e2a\u9898\u6ca1\u4e86\u8fd9\u4e2a\u5730\u65b9\u5c31\u5f88\u6c34\u4e86\uff09\uff0c\u4e0b\u9762\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nlong long f[501][10001],a[100001],s[100001],ans,maxx[501],n,m,mx;\nint main() \n{\n    cin>>n>>m;\n    for(int i=1; i<=n; i++)\n        cin>>a[i];\n    for(int i=1; i<=n; i++)//\u8c8c\u4f3c\u53ef\u4ee5\u51cf\u5c11\u4e00\u4e9b\u7528\u65f6\u3002\u3002\n        s[i]=s[i-1]+a[i];\n    for(int k=1;k<=m;k++)\n    {\n        ans=0;\n        for(int i=1; i<=k; i++) \n        {\n            ans=s[i];\n            maxx[k]=ans;\n            for(int j=i+1; j<=n; j++) \n            {\n                ans=max(f[k][j],ans)+a[j];//f[i][j-1];\n                f[k][j]=maxx[k];\n                maxx[k]=max(ans,maxx[k]);\n            }\n        }\n    }\n    for(int i=1;i<=m;i++)\n    {\n        mx=max(mx,maxx[i]);//\u4e00\u5f00\u59cb\u5f53\u6210\u5fc5\u987b\u53d6k\u7ec4\uff0c\u7ed3\u679cwa\u4e86\u4e00\u534a\uff0c\u540e\u6765\u624d\u660e\u767d\u53ef\u4ee5\u4e0d\u90fd\u53bb\u6389\u3002\u3002\u3002\u3002\u3002\n    }\n    cout<<mx;\n}\n```",
        "postTime": 1507860021,
        "uid": 49223,
        "name": "Victorique",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2389 \u3010\u7535\u8111\u73ed\u7684\u88c1\u5458\u3011"
    }
]