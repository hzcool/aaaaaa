[
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P7549)\n\n\u5728\u6821\u5185 $\\text{OJ}$ \u770b\u5230\u7684\u4e00\u9053\u9898\uff0c\u5728 $\\text{Luogu}$ \u627e\u5230\u4e86\uff0c\u53d1\u73b0\u6ca1\u6709\u9898\u89e3\uff0c\u4e8e\u662f\u6765\u5199\u4e00\u4e2a\u3002\n\nsto zltzlt orz.\n\n## \u9898\u610f\n\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 $a$\uff0c\u652f\u6301 $4$ \u4e2a\u64cd\u4f5c\uff1a\n\n- $\\text{merge x e}$\uff0c\u5220\u9664\u7ed3\u70b9 $x,x+1$\uff0c\u5728 $x$ \u7684\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u6743\u503c\u4e3a $e$\uff1b\n- $\\text{insert x e}$\uff0c\u5728 $x$ \u548c $x+1$ \u4e4b\u95f4\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u6743\u503c\u4e3a $e$\uff1b\n- $\\text{max l r}$\uff0c\u67e5\u8be2\u533a\u95f4 $[l,r]$ \u4e2d\u4efb\u610f\u5b50\u533a\u95f4\u7684\u533a\u95f4\u6781\u5dee\u7684\u6700\u5927\u503c\uff1b\n- $\\text{min l r}$\uff0c\u67e5\u8be2\u533a\u95f4 $[l,r]$ \u4e2d\u4efb\u610f\u5b50\u533a\u95f4\u7684\u533a\u95f4\u6781\u5dee\u7684\u6700\u5c0f\u503c\u3002\n\n$1\\le n,m\\le 10^5$.\n## \u601d\u8def\n\u770b\u5230\u63d2\u5165\u3001\u5220\u9664\u5c31\u53ef\u4ee5\u60f3\u5230\u4f7f\u7528\u6587\u827a\u5e73\u8861\u6811\u6765\u89e3\u51b3\u95ee\u9898\uff0c\u8fd9\u91cc\u6211\u4f7f\u7528 $\\text{Splay}$\uff0c\u64cd\u4f5c $1,2$ \u5341\u5206\u663e\u7136\u3002\n\n$3$ \u64cd\u4f5c\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u533a\u95f4\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u7b54\u6848\u5c31\u662f\u5b83\u4eec\u505a\u5dee\u3002\n\n$4$ \u64cd\u4f5c\u4e2d\uff0c\u6211\u4eec\u8bbe\u7b54\u6848\u7684\u5b50\u533a\u95f4\u4e3a $[l',r']$\uff0c\u8bbe\u5176\u4e2d\u6700\u5927\u503c\u4e3a $a$\uff0c\u6700\u5c0f\u503c\u4e3a $b$\uff0c\u82e5\u533a\u95f4\u4e2d\u52a0\u5165\u4e00\u4e2a\u6570 $v$\uff0c\u5219 $a\\gets \\max(a,v),b\\gets\\min(b,v),\\max(a,v)-\\min(b,v)\\ge a-b$\uff0c\u5373\u63d2\u5165\u4e00\u4e2a\u6570\u663e\u7136\u4e0d\u4f1a\u66f4\u4f18\uff0c\u6240\u4ee5\u7b54\u6848\u533a\u95f4\u957f\u5ea6\u4e3a $2$\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u6bcf\u4e2a\u6570\u4e0e\u5176\u5de6\u53f3\u7684\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u5206\u522b\u8bbe\u4e3a $lb_x,rb_x$\uff0c\u518d\u7ef4\u62a4 $ms_x$ \u4ee3\u8868 $x$ \u5b50\u6811\u5185 $lb,rb$ \u7684\u6700\u5c0f\u503c\uff0c\u7b54\u6848\u5373\u4e3a $ms$\u3002\u6ce8\u610f\u9700\u8981\u7279\u5224 $l+1=r$ \u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u53d6 $rb_l$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{//by cyffff\n\t\n}\nconst int N=5e5+10,INF=1e9+10;\nint s[N];\nint n,m;\nstruct Splay{\n\t#define ls a[x].son[0]\n\t#define rs a[x].son[1]\n\tint rt,sz;\n\tstruct node{\n\t\tint f,val,son[2],sz;\n\t\tint minn=INF,maxn,lb,rb,ms;\n\t\tinline void clear(){\n\t\t\tf=maxn=son[0]=son[1]=val=sz=0;\n\t\t\tminn=ms=lb=rb=INF;\n\t\t}\n\t}a[N];\n\tinline bool isr(int x){return a[a[x].f].son[1]==x;}\n\tinline void upd(int x){\n\t\tnode &p=a[x];\n\t\tp.maxn=p.minn=p.val;\n\t\tp.ms=min(p.lb,p.rb);\n\t\tif(ls) p.maxn=max(p.maxn,a[ls].maxn),p.minn=min(p.minn,a[ls].minn),p.ms=min(p.ms,a[ls].ms);\n\t\tif(rs) p.maxn=max(p.maxn,a[rs].maxn),p.minn=min(p.minn,a[rs].minn),p.ms=min(p.ms,a[rs].ms);\n\t\tp.sz=a[ls].sz+1+a[rs].sz;\n\t}\n\tinline int newnode(int v){\n\t\tsz++;\n\t\ta[sz].minn=a[sz].maxn=a[sz].val=v;\n\t\treturn sz;\n\t}\n\tinline void rotate(int x){\n\t\tint f=a[x].f,gf=a[f].f;\n\t\tint id=isr(x);\n\t\ta[f].son[id]=a[x].son[id^1];\n\t\ta[a[f].son[id]].f=f;\n\t\ta[x].son[id^1]=f;\n\t\ta[f].f=x;\n\t\ta[x].f=gf;\n\t\tif(gf){\n\t\t\ta[gf].son[a[gf].son[1]==f]=x;\n\t\t}\n\t\tupd(f);\n\t}\n\tinline void splay(int x,int goal=0){\n\t\tgoal=a[goal].f;\n\t\tfor(int f;(f=a[x].f)!=goal;rotate(x)){\n\t\t\tif(a[f].f!=goal){\n\t\t\t\trotate(isr(x)==isr(f)?f:x);\n\t\t\t}\n\t\t}\n\t\tif(!goal)\n\t\trt=x;\n\t}\n\tinline int build(int l,int r,int f){\n\t\tif(l>r)return 0;\n\t\tint mid=l+r>>1;\n\t\tsz++;\n\t\tint now=sz;\n\t\ta[now].f=f;\n\t\ta[now].val=s[mid];\n\t\ta[now].lb=mid?abs(s[mid]-s[mid-1]):INF;\n\t\ta[now].rb=mid!=n+1?abs(s[mid]-s[mid+1]):INF;\n\t\ta[now].son[0]=build(l,mid-1,now);\n\t\ta[now].son[1]=build(mid+1,r,now);\n\t\tupd(now);\n\t\treturn now;\n\t}\n\tinline int find(int x){\n\t\tint now=rt;\n\t\twhile(1){\n\t\t\tif(x<=a[a[now].son[0]].sz){\n\t\t\t\tnow=a[now].son[0];\n\t\t\t}else{\n\t\t\t\tx-=a[a[now].son[0]].sz+1;\n\t\t\t\tif(!x){\n\t\t\t\t\treturn now;\n\t\t\t\t}\n\t\t\t\tnow=a[now].son[1];\n\t\t\t}\n\t\t}\n\t}\n\tinline int split(int l,int r){\n\t\tint x=find(l);\n\t\tsplay(x,rt);\n\t\tint y=find(r+2);\n\t\tsplay(y,a[x].son[1]);\n\t\treturn a[y].son[0];\n\t}\n\tinline void MoMerge(int wz,int v){\n\t\tint x=split(wz,wz+1),f=rt,y=a[f].son[1];\n\t\ta[x].val=v;\n\t\tif(ls) a[ls].clear(),ls=0;\n\t\tif(rs) a[rs].clear(),rs=0;\n\t\ta[f].rb=a[x].lb=abs(v-a[f].val);\n\t\ta[x].rb=a[y].lb=abs(v-a[y].val);\n\t\tupd(x),upd(y),upd(f);\n\t}\n\tinline void MoInsert(int wz,int v){\n\t\tint x=split(wz,wz),f=rt,y=a[f].son[1],z=newnode(v);\n\t\ta[z].f=x;\n\t\ta[x].son[1]=z;\n\t\ta[x].rb=a[z].lb=abs(v-a[x].val);\n\t\ta[z].rb=a[y].lb=abs(v-a[y].val);\n\t\tupd(z),upd(x),upd(y);\n\t}\n\tinline int QuMax(int l,int r){\n\t\tint x=split(l,r);\n\t\treturn a[x].maxn-a[x].minn;\n\t}\n\tinline int QuMin(int l,int r){\n\t\tint x;\n\t\tif(r-l<=1){\n\t\t\tx=split(l,r-1);\n\t\t\treturn a[x].rb;\n\t\t}else{\n\t\t\tx=split(l+1,r-1);\n\t\t\treturn a[x].ms;\n        }\n\t}\n}t;\nint main(){\n\tn=read(),m=read();\n\ts[0]=INF;\n\tfor(int i=1;i<=n;i++){\n\t\ts[i]=read();\n\t}\n\ts[n+1]=INF;\n\tt.sz=n+2;\n\tt.rt=t.build(0,n+1,0);\n\twhile(m--){\n\t\tchar opt=getc();\n\t\tswitch(opt){\n\t\t\tcase 'e':{\n\t\t\t\tint wz=read(),v=read();\n\t\t\t\tt.MoMerge(wz,v);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'n':{\n\t\t\t\tint wz=read(),v=read();\n\t\t\t\tt.MoInsert(wz,v);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'a':{\n\t\t\t\tint l=read(),r=read();\n\t\t\t\twrite(t.QuMax(l,r));\n\t\t\t\tputc('\\n');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'i':{\n\t\t\t\tint l=read(),r=read();\n\t\t\t\twrite(t.QuMin(l,r));\n\t\t\t\tputc('\\n');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tflush();\n}\n```\n\u518d\u89c1 qwq~",
        "postTime": 1622378166,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7549\u3010[BJWC2017] \u795e\u79d8\u7269\u8d28\u3011"
    },
    {
        "content": "\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u8981\u6c42\u652f\u6301\u5408\u5e76\u76f8\u90bb\u4e24\u4e2a\u8282\u70b9\uff08\u5e76\u8d4b\u5165\u65b0\u7684\u503c\uff09\u3001\u63d2\u5165\u3001\u8be2\u95ee\u4e00\u6bb5\u533a\u95f4\u4e2d\u4efb\u610f\u5b50\u533a\u95f4\u7684\u533a\u95f4\u6781\u5dee\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\n\n\u503c\u57df $10^9$\uff0c\u70b9\u6570 $10^5$\uff0c\u64cd\u4f5c\u6570 $10^5$\u3002\n\n#### std\n\n\u7b97\u662f\u4e00\u773c\u9898\u4e86~~\uff08\u90a3\u5c31\u6c34\u4e2a\u9898\u89e3\uff09~~\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6781\u5dee\u6700\u5927\u503c\uff0c\u663e\u7136\u7528\u6574\u6bb5\u533a\u95f4\u7684\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c\u662f\u6700\u4f18\u7684\uff0c\u7ef4\u62a4\u5b50\u6811\u5185\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6781\u5dee\u6700\u5c0f\u503c\uff0c\u663e\u7136\u5f53\u5b50\u533a\u95f4\u4e3a $2$ \u662f\u7b54\u6848\u6700\u4f18\uff0c\u7ef4\u62a4\u76f8\u90bb\u4e24\u6570\u7684\u7edd\u5bf9\u503c\u5dee\u5373\u53ef\u3002\n\n\u6240\u4ee5\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(m \\log n)$\uff0c\u53ef\u8fc7\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n\nconst int _ = 1e6 + 10;\n\ninline int read()\n{\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9')\n\t{\n\t\tif (c == '-')\n\t\t\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9')\n\t\tx = x * 10 + (c - '0'), c = getchar();\n\treturn x * f;\n}\n\nint n, m, root, cnt;\n\nstruct Tree\n{\n\tint l, r, key, val, siz, mx, mn, les, res, mires;\n} tr[_];\n\nvoid update(int k)\n{\n\ttr[k].siz = tr[tr[k].l].siz + tr[tr[k].r].siz + 1;\n\ttr[k].mx = tr[k].mn = tr[k].les = tr[k].res = tr[k].val;\n\ttr[k].mires = 2e9;\n\tif (tr[k].l != 0)\n\t\ttr[k].mx = max(tr[k].mx, tr[tr[k].l].mx),\n\t\ttr[k].mn = min(tr[k].mn, tr[tr[k].l].mn),\n\t\ttr[k].les = tr[tr[k].l].les,\n\t\ttr[k].mires = min(tr[k].mires, min(abs(tr[tr[k].l].res - tr[k].val), tr[tr[k].l].mires));\n\tif (tr[k].r != 0)\n\t\ttr[k].mx = max(tr[k].mx, tr[tr[k].r].mx),\n\t\ttr[k].mn = min(tr[k].mn, tr[tr[k].r].mn),\n\t\ttr[k].res = tr[tr[k].r].res,\n\t\ttr[k].mires = min(tr[k].mires, min(abs(tr[tr[k].r].les - tr[k].val), tr[tr[k].r].mires));\n}\n\nint New(int v)\n{\n\tint now = ++cnt;\n\ttr[now].val = tr[now].mx = tr[now].mn = tr[now].les = tr[now].res = v;\n\ttr[now].mires = 2e9;\n\ttr[now].siz = 1;\n\ttr[now].key = rand();\n\treturn now;\n}\n\nvoid put(int i)\n{\n\tif (tr[i].l)\n\t\tput(tr[i].l);\n\tprintf(\"%d \", tr[i].val);\n\tif (tr[i].r)\n\t\tput(tr[i].r);\n}\n\nvoid split(int rt, int val, int &x, int &y)\n{\n\tif (!rt)\n\t{\n\t\tx = y = 0;\n\t\treturn;\n\t}\n\tif (tr[tr[rt].l].siz < val)\n\t{\n\t\tx = rt;\n\t\tsplit(tr[rt].r, val - tr[tr[rt].l].siz - 1, tr[rt].r, y);\n\t}\n\telse\n\t{\n\t\ty = rt;\n\t\tsplit(tr[rt].l, val, x, tr[rt].l);\n\t}\n\tupdate(rt);\n}\n\nint merge(int x, int y)\n{\n\tif (!x || !y)\n\t\treturn x + y;\n\tif (tr[x].key < tr[y].key)\n\t{\n\t\ttr[x].r = merge(tr[x].r, y);\n\t\tupdate(x);\n\t\treturn x;\n\t}\n\telse\n\t{\n\t\ttr[y].l = merge(x, tr[y].l);\n\t\tupdate(y);\n\t\treturn y;\n\t}\n}\n\nvoid insert(int pos, int val)\n{\n\tint x, y;\n\tsplit(root, pos, x, y);\n\troot = merge(merge(x, New(val)), y);\n}\n\nint query1(int l, int r)\n{\n\tint x, y, z, res;\n\tsplit(root, r, y, x);\n\tsplit(y, l - 1, z, y);\n\tres = tr[y].mx - tr[y].mn;\n\troot = merge(merge(z, y), x);\n\treturn res;\n}\n\nint query2(int l, int r)\n{\n\tint x, y, z, res;\n\tsplit(root, r, y, x);\n\tsplit(y, l - 1, z, y);\n\tres = tr[y].mires;\n\troot = merge(merge(z, y), x);\n\treturn res;\n}\n\nsigned main()\n{\n\tsrand(time(0));\n\tn = read(), m = read();\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tinsert(i - 1, read());\n\t}\n\tchar op[107];\n\tint a, b;\n\twhile (m--)\n\t{\n\t\tscanf(\"%s\", op);\n\t\ta = read(), b = read();\n\t\tif (op[1] == 'e')\n\t\t{\n\t\t\tint x, y, z;\n\t\t\tsplit(root, a + 1, x, y), split(x, a - 1, x, z);\n\t\t\troot = merge(merge(x, New(b)), y);\n\t\t}\n\t\telse if (op[1] == 'n')\n\t\t{\n\t\t\tinsert(a, b);\n\t\t}\n\t\telse if (op[1] == 'a')\n\t\t{\n\t\t\tprintf(\"%lld\\n\", query1(a, b));\n\t\t}\n\t\telse if (op[1] == 'i')\n\t\t{\n\t\t\tprintf(\"%lld\\n\", query2(a, b));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1647648817,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "P7549 [BJWC2017] \u795e\u79d8\u7269\u8d28"
    },
    {
        "content": "[\u4f20\u9001\u95e8\uff1aP7549 [BJWC2017] \u795e\u79d8\u7269\u8d28](https://www.luogu.com.cn/problem/P7549)\n\n\u5148\u819c\u62dc\u4e00\u4e0b $\\text{cyf}$ \u5b66\u957f\u3002\u672c\u9898\u89e3\u4e3b\u8981\u662f\u8865\u5145\u4e00\u4e0b $\\text{cyf}$ \u5b66\u957f\u601d\u8def\u7684\u7ec6\u8282\u3002\n\n## Solution\n\n### 1\n\n\u9996\u5148\u770b\u64cd\u4f5c\u4e00\u3001\u4e8c\uff0c\u53d1\u73b0\u5b83\u4eec\u7684\u672c\u8d28\u5b9e\u9645\u4e0a\u90fd\u662f\u5bf9\u4e00\u6bb5\u533a\u95f4\u7684\u64cd\u4f5c\u3002\n\n\u6240\u4ee5\u672c\u9898\u4f7f\u7528\u6587\u827a\u5e73\u8861\u6811\u6765\u7ef4\u62a4\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u7684\u4e00\u3001\u4e8c\u64cd\u4f5c\uff0c\u6211\u4eec\u90fd\u4f1a\u5c06\u8981\u8fdb\u884c\u4fee\u6539\u7684\u533a\u95f4\u65cb\u8f6c\u5230\u4e00\u9897\u5b50\u6811\u5185\uff0c\u5373\u6587\u827a\u5e73\u8861\u6811\u4e2d\u7ffb\u8f6c\u533a\u95f4\u7684\u9884\u64cd\u4f5c\u3002\n\n\u5177\u4f53\u53ef\u4ee5\u770b@[\u768e\u6708\u534a\u6d12\u82b1](https://www.luogu.com.cn/user/28313)\u5728\u6587\u827a\u5e73\u8861\u6811\u9898\u89e3\u4e2d\u653e\u7684\u8fd9\u5f20\u56fe\uff1a\uff08\u8bbe\u5c06\u8981\u4fee\u6539\u7684\u533a\u95f4\u4e3a $[l,r]$\u3002\uff09\n\n![ ](https://cdn.luogu.com.cn/upload/pic/18083.png)\n\n\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u6211\u4eec\u540e\u9762\u5e76\u4e0d\u662f\u6267\u884c\u7ffb\u8f6c\u64cd\u4f5c\u3002\n\n\u4e0d\u8fc7\u5728\u8fd9\u9053\u9898\u4e2d\u8981\u6ce8\u610f\u7684\u662f\uff1a\n\n\u56e0\u4e3a\u6211\u4eec\u5728\u6700\u5f00\u59cb\u5efa\u6811\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u9632\u6b62\u8d8a\u754c\uff0c\u5728\u5e8f\u5217\u5f00\u5934\u548c\u7ed3\u5c3e\u5404\u65b0\u589e\u4e86\u4e00\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u6b64\u65f6\u6211\u4eec\u8981\u4fee\u6539\u7684\u533a\u95f4\u5c31\u53d8\u6210\u4e86 $[l + 1, r + 1]$\uff0c\u6240\u4ee5\u9700\u8981\u67e5\u627e\u548c\u88ab\u6267\u884c\u65cb\u8f6c\u64cd\u4f5c\u7684\u8282\u70b9\u5c31\u53d8\u6210\u4e86\u5e8f\u5217\u4e2d\u7b2c $l$ \u4e2a\u8282\u70b9\u548c\u7b2c $(r + 2)$ \u4e2a\u8282\u70b9\u3002\n\n### 2\n\n\u518d\u6765\u770b\u4e09\u3001\u56db\u64cd\u4f5c\u3002\n\n\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u663e\u7136\u5c31\u662f\u7ed9\u6bcf\u4e2a\u8282\u70b9\u90fd\u7ef4\u62a4\u4e00\u4e2a\u5176\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u5c06\u533a\u95f4 $[l,r]$ \u6309 1 \u4e2d\u6240\u8ff0\u7684\u90a3\u6837\u65cb\u8f6c\u5230\u4e00\u8d77\u53bb\uff0c\u7136\u540e\u8f93\u51fa\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u503c\u5373\u53ef\u3002\n\n\u91cd\u70b9\u5728\u4e8e\u7b2c\u56db\u4e2a\u64cd\u4f5c\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u65b0\u589e\u52a0\u4e00\u4e2a\u6570\u5e76\u4e0d\u4f1a\u4f7f\u5176\u533a\u95f4\u6781\u5dee\u6700\u5c0f\u503c\u66f4\u5c0f\u3002\n\n\u8bc1\u660e\uff1a\n\n\u533a\u95f4 $[l,r]$ \u7684\u6781\u5dee\u6700\u5c0f\u503c\u662f\u5176\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e4b\u5dee\u3002\u800c\u5bf9\u4e8e\u65b0\u589e\u8282\u70b9\u6765\u8bf4\uff0c\u53ef\u80fd\u53ef\u4ee5\u9020\u6210\u5f71\u54cd\u7684\u60c5\u51b5\u5c31\u662f\u5b83\u4f1a\u66f4\u65b0\u6b64\u533a\u95f4\u7684\u6700\u5927\uff08\u5c0f\uff09\u503c\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u53d1\u73b0\u4e0d\u8bba\u5b83\u662f\u66f4\u65b0\u4e86\u6700\u5927\u503c\u8fd8\u662f\u6700\u5c0f\u503c\uff0c\u90fd\u53ea\u4f1a\u8ba9\u8fd9\u4e2a\u533a\u95f4\u6781\u5dee\u66f4\u5927\uff08\u8fd9\u4e2a\u4e0d\u96be\u7406\u89e3\uff09\u3002\n\n\u8bc1\u6bd5\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u7ed9\u6bcf\u4e2a\u8282\u70b9\u90fd\u7ef4\u62a4\u4e0e\u5176\u76f8\u90bb\u8282\u70b9\u7684\u5dee\u503c\u5c31\u597d\u4e86\uff0c\u540c\u65f6\u8fd8\u8981\u7ef4\u62a4\u4e00\u4e0b\u8fd9\u4e2a\u8282\u70b9\u6240\u4ee3\u8868\u7684\u533a\u95f4\u5185\u4efb\u610f\u5b50\u533a\u95f4\u4e2d\u533a\u95f4\u6781\u5dee\u7684\u6700\u5c0f\u503c\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\u6ce8\u610f\u8981\u5224\u65ad\u67e5\u8be2\u533a\u95f4\u4ec5\u6709\u4e24\u4e2a\u8282\u70b9\u7684\u60c5\u51b5\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define rep(i, a, b) for(int i = a; i <= b; ++i)\n#define ls t[x].ch[0]\n#define rs t[x].ch[1]\nconst int maxn = 3e5 + 10;\nconst int inf = 2147483647;\nint n, m;\nint rt, tot;\nint e[maxn];\nstruct node{\n\tint ch[2];\n\tint siz, f, val;\n\tint mn, mx;\n\tint lb, rb, ms;\n}t[maxn];\n\ninline void up(int x)\n{\n\tt[x].siz = t[ls].siz + 1 + t[rs].siz;\n\tt[x].mn = t[x].mx = t[x].val;\n\tt[x].ms = min(t[x].lb, t[x].rb);\n\tif(ls) \n\t\tt[x].mn = min(t[x].mn, t[ls].mn), t[x].mx = max(t[x].mx, t[ls].mx), \n\t\tt[x].ms = min(t[x].ms, t[ls].ms);\n\tif(rs) \n\t\tt[x].mn = min(t[x].mn, t[rs].mn), t[x].mx = max(t[x].mx, t[rs].mx), \n\t\tt[x].ms = min(t[x].ms, t[rs].ms);\n}\n\ninline int nw(int v)\n{\n\tint u = ++tot;\n\tt[u].mn = t[u].mx = t[u].val = v;\n\treturn u;\n}\n\ninline void rotate(int x)\n{\n\tint y = t[x].f, z = t[y].f;\n\tint kx = (t[y].ch[1] == x), ky = (t[z].ch[1] == y);\n\tt[z].ch[ky] = x, t[x].f = z;\n\tt[y].ch[kx] = t[x].ch[kx ^ 1], t[t[x].ch[kx ^ 1]].f = y;\n\tt[x].ch[kx ^ 1] = y, t[y].f = x;\n\tup(y), up(x);\n}\n\ninline void splay(int x, int gl)\n{\n\twhile(t[x].f != gl)\n\t{\n\t\tint y = t[x].f, z = t[y].f;\n\t\tif(z != gl) \n\t\t\t(t[y].ch[1] == x) ^ (t[z].ch[1] == y) ? rotate(x) : rotate(y);\n\t\trotate(x);\n\t}\n\tif(!gl) rt = x;\n}\n\ninline int build(int l, int r, int fa)\n{\n\tif(l > r) return 0;\n\tint mid = (l + r) >> 1;\n\tint u = ++tot;\n\tt[u].f = fa, t[u].val = e[mid];\n\tt[u].lb = mid ? abs(e[mid] - e[mid - 1]) : inf;\n\tt[u].rb = mid != n + 1 ? abs(e[mid] - e[mid + 1]) : inf;\n\tt[u].ch[0] = build(l, mid - 1, u);\n\tt[u].ch[1] = build(mid + 1, r, u);\n\tup(u);\n\treturn u;\n}\n\ninline int find(int k)\n{\n\tint x = rt;\n\twhile(531)\n\t{\n\t\tif(t[ls].siz + 1 < k)\n\t\t\tk -= t[ls].siz + 1, x = rs;\n\t\telse if(t[ls].siz >= k)\n\t\t\tx = ls;\n\t\telse return x;\n\t}\n}\n\ninline int split(int l, int r)\n{\n\tint x = find(l), y = find(r + 2);\n\tsplay(x, 0), splay(y, x);\n\treturn t[y].ch[0];\n}\n\ninline void delet(int x)\n{\n\tls = rs = t[x].f = t[x].siz = t[x].val = t[x].mx = 0;\n\tt[x].mn = t[x].ms = t[x].lb = t[x].rb = inf;\n}\n\ninline void merge_(int pos, int v)\n{\n\tint x = split(pos, pos + 1), lst = rt, nxt = t[lst].ch[1];\n\tt[x].val = v;\n\tif(ls) delet(ls), t[x].ch[0] = 0;\n\tif(rs) delet(rs), t[x].ch[1] = 0;\n\tt[x].lb = t[lst].rb = abs(v - t[lst].val);\n\tt[x].rb = t[nxt].lb = abs(t[nxt].val - v);\n\tup(x), up(nxt), up(lst);\n}\n\ninline void insrt_(int pos, int v)\n{\n\tint x = split(pos, pos), lst = rt, nxt = t[lst].ch[1];\n\tint u = nw(v);\n\tt[u].f = x, t[x].ch[1] = u;\n\tt[x].rb = t[u].lb = abs(v - t[x].val);\n\tt[nxt].lb = t[u].rb = abs(v - t[nxt].val);\n\tup(u), up(x), up(nxt), up(lst);\n}\n\ninline int qrymx_(int l, int r)\n{\n\tint x = split(l, r);\n\treturn t[x].mx - t[x].mn;\n}\n\ninline int qrymn_(int l, int r)\n{\n\tif(l + 1 == r) return t[split(l, r - 1)].rb;\n\telse return t[split(l + 1, r - 1)].ms;\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\trep(i, 1, n) scanf(\"%d\", &e[i]);\n\te[0] = e[n + 1] = inf, tot = n + 1;\n\trt = build(0, n + 1, 0);\n\trep(i, 1, m)\n\t{\n\t\tchar c[10];\n\t\tint x, y;\n\t\tscanf(\"%s%d%d\", c, &x, &y);\n\t\tif(c[1] == 'e') merge_(x, y);         \n\t\tif(c[1] == 'n') insrt_(x, y);\n\t\tif(c[1] == 'a') printf(\"%d\\n\", qrymx_(x, y));\n\t\tif(c[1] == 'i') printf(\"%d\\n\", qrymn_(x, y));\n\t}\n\treturn 0;\n}\n```\n\n\n\n------------\n\u611f\u8c22\u9605\u8bfb\u3002\n\n\u8f9b\u82e6\u7ba1\u7406\u5458\u5ba1\u6838\uff0c\u82e5\u6709\u95ee\u9898\u70e6\u8bf7\u6307\u51fa\u3002",
        "postTime": 1648618298,
        "uid": 469672,
        "name": "\u4f0d\u53c1\u58f9",
        "ccfLevel": 7,
        "title": "LG-P7549 [BJWC2017] \u795e\u79d8\u7269\u8d28 \u9898\u89e3"
    },
    {
        "content": "## $\\text{Solution}$\n\n\u63d2\u5165\u4e00\u4e2a\u65b0\u80fd\u6e90\u548c\u5408\u5e76\u6210\u4e3a\u4e00\u4e2a\u65b0\u7684\u5c31\u6587\u827a\u5e73\u8861\u6811\u57fa\u672c\u64cd\u4f5c\uff0c\u5206\u88c2\u51fa\u5bf9\u5e94\u533a\u95f4\uff0c\u5408\u5e76\u5c31\u5148\u5220\u9664\u6389\u4ee5\u524d\u7684\uff0c\u4e4b\u540e\u518d\u63d2\u5165\u3002 max \u7684\u8bdd\u7ef4\u62a4\u4e0b\u5b50\u6811\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5373\u53ef\u3002\u4f46 min \u600e\u4e48\u7ef4\u62a4\uff1f\n\n\u6211\u4eec\u52a0\u5165\u63d2\u8fdb\u6765\u6570 x ,\u539f\u6765\u6709 a , b \u4e24\u6570\u3002\n\n\u5219\u539f\u6765:  $a-b$  \uff0c\u73b0\u5728  $max(a,x)-min(b,x)$  ,\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u5f0f\u5b50\u5355\u8c03\u4e0d\u964d\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7b54\u6848\u533a\u95f4\u957f\u5ea6\u8d8a\u5c0f\u8d8a\u597d\uff0c\u6240\u4ee5\u7b54\u6848\u533a\u95f4\u662f2\u3002\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u76f8\u90bb\u4e24\u6570\u7684\u7edd\u5bf9\u503c\u5dee\uff08\u6781\u5dee\u662f\u975e\u8d1f\u6570\uff09\n\n\u5982\u4f55\u5728 fhq \u4e0a\u7ef4\u62a4\u76f8\u90bb\u7684\u6570\u5462\uff1f\n\u53ea\u9700\u8981\u8bb0\u5f55\u4e0b\u5b50\u6811\u5411\u5de6/\u53f3\u80fd\u6700\u8fdc\u6269\u5c55\u5230\u7684\u503c\u5373\u53ef\u3002\n\u90a3\u4e48\u5f53\u524d\u5de6\u8fb9\u7684\u6570\u662f\u4e0d\u662f\u5de6\u5b50\u6811\u5411\u53f3\u6700\u8fdc\u6269\u5c55\u7684\u503c\uff0c\u53f3\u8fb9\u540c\u7406\u3002\n\n## $\\text{Code}$\n\n```cpp\n#include <bits/stdc++.h>\n\n#define N (int)(1e5+5)\n#define int long long\n#define inf (int)(2e18)\n\nusing namespace std;\nint rd() {\n\tint f=1,sum=0; char ch=getchar();\n\twhile(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}\n\twhile(isdigit(ch)) {sum=(sum<<3)+(sum<<1)+ch-'0';ch=getchar();}\n\treturn sum*f;\n}\n\nstruct FHQ {\n\tint ls,rs,val,rad,sz,lres,rres,mires,mx,mi;\n\tFHQ() {\n\t\tls=rs=val=rad=sz=lres=rres=mires=mx=mi=0;\n\t}\n}t[N<<2];\nint tot,rt;\nvoid push_up(int cur) {\n\tint ls=t[cur].ls,rs=t[cur].rs;\n\tt[cur].sz=t[ls].sz+t[rs].sz+1;\n\tt[cur].mx=t[cur].mi=t[cur].lres=t[cur].rres=t[cur].val;\n\tt[cur].mires=inf;\n\tif(ls) {\n\t\tt[cur].mi=min(t[cur].mi,t[ls].mi);\n\t\tt[cur].mx=max(t[cur].mx,t[ls].mx);\n\t\tt[cur].lres=t[ls].lres;\n\t\tt[cur].mires=min(t[cur].mires,min(abs(t[ls].rres-t[cur].val),t[ls].mires));\n\t}\n\tif(rs) {\n\t\tt[cur].mi=min(t[cur].mi,t[rs].mi);\n\t\tt[cur].mx=max(t[cur].mx,t[rs].mx);\n\t\tt[cur].rres=t[rs].rres;\n\t\tt[cur].mires=min(t[cur].mires,min(abs(t[rs].lres-t[cur].val),t[rs].mires)); \n\t}\n}\n\nvoid split(int cur,int num,int &x,int &y) {\n\tif(!cur) return x=y=0,void();\n\tif(t[t[cur].ls].sz+1<=num) {\n\t\tx=cur;\n\t\tsplit(t[cur].rs,num-t[t[cur].ls].sz-1,t[cur].rs,y);\n\t} else {\n\t\ty=cur;\n\t\tsplit(t[cur].ls,num,x,t[cur].ls);\n\t}\n\tpush_up(cur);\n}\n\nint merge(int x,int y) {\n\tif(!x||!y) return x+y;\n\tif(t[x].rad<t[y].rad) {\n\t\tt[x].rs=merge(t[x].rs,y);\n\t\tpush_up(x); return x;\n\t} else {\n\t\tt[y].ls=merge(x,t[y].ls);\n\t\tpush_up(y); return y;\n\t}\n}\n\nint newp(int x) {\n\t++tot; t[tot].rad=rand(); t[tot].val=x; t[tot].sz=1; t[tot].mires=inf;\n\tt[tot].mi=t[tot].mx=t[tot].rres=t[tot].lres=x;\n\treturn tot;\n}\n\nvoid ins(int pos,int v) {\n\tint r1,r2;\n\tsplit(rt,pos,r1,r2);\n\trt=merge(merge(r1,newp(v)),r2);\n}\n\nvoid remerge(int pos,int v) {\n\tint r1,r2,r3;\n\tsplit(rt,pos+1,r1,r2); split(r1,pos-1,r1,r3);\n\trt=merge(merge(r1,newp(v)),r2);\n}\n\nint query1(int l,int r) {\n\tint r1,r2,r3,res;\n\tsplit(rt,r,r2,r1); split(r2,l-1,r3,r2);\n\tres=t[r2].mx-t[r2].mi;\n\trt=merge(merge(r3,r2),r1);\n\treturn res;\n}\n\nint query2(int l,int r) {\n\tint r1,r2,r3,res;\n\tsplit(rt,r,r2,r1); split(r2,l-1,r3,r2);\n\tres=t[r2].mires;\n\trt=merge(merge(r3,r2),r1);\n\treturn res;\n}\n\nvoid DEBUG(int cur) {\n\tif(t[cur].ls) DEBUG(t[cur].ls);\n\tcout<<t[cur].val<<endl;\n\tif(t[cur].rs) DEBUG(t[cur].rs);\n}\n\nsigned main() {\n\tsrand(998244353); //srand((rand()<<3)*(rand()<<2));\n\t++tot; t[1].val=inf; t[1].mi=inf; t[1].mx=-1; t[1].mires=inf;\n\tint n,m,x,y; char op[10]; n=rd(); m=rd();\n\tfor(int i=1;i<=n;i++) {\n\t\tx=rd(); ins(i-1,x);\n\t}\n//\tDEBUG(rt);\n\twhile(m--) {\n\t\tscanf(\"%s\",op); x=rd(); y=rd();\n\t\tif(op[1]=='e') {\n\t\t\tremerge(x,y);\n\t\t} else if(op[1]=='n') {\n\t\t\tins(x,y);\n\t\t} else if(op[1]=='a') {\n\t\t\tprintf(\"%lld\\n\",query1(x,y));\n\t\t} else if(op[1]=='i') {\n\t\t\tprintf(\"%lld\\n\",query2(x,y));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1626089939,
        "uid": 125901,
        "name": "FxorG",
        "ccfLevel": 7,
        "title": "P7549 [BJWC2017] \u795e\u79d8\u7269\u8d28"
    }
]