[
    {
        "content": "\u60f3\u8981\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f\u524d\u5f80\u6211\u7684\u535a\u5ba2\uff1a[https://www.cnblogs.com/zhylj/p/9525885.html](https://www.cnblogs.com/zhylj/p/9525885.html)\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u6700\u66b4\u529b\u7684\u65b9\u6cd5\uff1a\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u6362\u4e58\u7ad9\uff0c\u6709$8$\u79cd\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/15690.png)\n![](https://cdn.luogu.com.cn/upload/pic/15691.png)\n![](https://cdn.luogu.com.cn/upload/pic/15692.png)\n![](https://cdn.luogu.com.cn/upload/pic/15693.png)\n![](https://cdn.luogu.com.cn/upload/pic/15694.png)\n![](https://cdn.luogu.com.cn/upload/pic/15695.png)\n![](https://cdn.luogu.com.cn/upload/pic/15696.png)\n![](https://cdn.luogu.com.cn/upload/pic/15697.png)\n\n\u8003\u8651\u6211\u4eec\u5bf9\u6bcf\u7ec4\u6362\u4e58\u7ad9\u8fdb\u884c\u679a\u4e3e\uff0c\u518d\u52a0\u4e0a$O(n)$\u7684\u66b4\u529b\u627e\u4ea4\u70b9\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n8^{\\left(\\frac{n}{2}\\right)})$\uff0c\u9762\u5bf9$n\\le 44$\u7684\u6570\u636e\uff0c\u663e\u7136\u4f1a$\\rm TLE$\u3002\n\n\u671f\u671b\u5f97\u5206$\\rm 10$\u3002\n\n\u8003\u8651\u5bfb\u627e\u8fd9$8$\u79cd\u60c5\u51b5\u6709\u6ca1\u6709\u91cd\u590d\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u524d\u4e24\u79cd\uff0c\u653e\u5230\u4e00\u8d77\uff0c\u4f1a\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/15698.png)\n\n\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u7531\u4e8e\u8fd9\u4e24\u6761\u7ebf\u4ea7\u751f\u4e86\u4e00\u4e2a\u5b8c\u5168\u5305\u4f4f0\u53f7\u7ebf\u7684\u73af\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5176\u4ed6\u7684\u7ebf\uff0c\u8981\u4e48\u4e0d\u548c\u8fd9\u4e24\u6761\u7ebf\u4ea7\u751f\u4ea4\u70b9\uff0c\u8981\u4e48\u5bf9\u8fd9\u4e24\u6761\u7ebf\u6bcf\u6761\u90fd\u4ea7\u751f\u4e00\u4e2a\u4ea4\u70b9\u3002\n\n\u6545\uff0c\u6bcf\u4e2a\u70b9\u4e0d\u9700\u8981\u679a\u4e3e\u5de6\u53f3\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u4e0a\u4e0b\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(4^{(\\frac{n}{2})}\\times n)$  \n\u60c5\u51b5\u8fd8\u5269\u4e0b\uff1a  \n![](https://cdn.luogu.com.cn/upload/pic/15690.png)\n![](https://cdn.luogu.com.cn/upload/pic/15695.png)\n![](https://cdn.luogu.com.cn/upload/pic/15692.png)\n![](https://cdn.luogu.com.cn/upload/pic/15697.png)\n\n\u518d\u8003\u8651\uff0c\u80fd\u4e0d\u80fd\u7ee7\u7eed\u51cf\u5c11\u60c5\u51b5\u6570\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u628a\u524d\u4e24\u5e45\u56fe\u7684\u653e\u5728\u4e00\u8d77\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/15700.png)\n\n\u8fd9\u5f20\u56fe\u4e5f\u6784\u6210\u4e86\u73af\uff0c\u4f46\u662f\u8fd9\u4e2a\u73af\u5e76\u6ca1\u6709\u80fd\u628a0\u53f7\u7ebf\u5305\u4f4f\uff0c\u4f46\u662f\u8fd9\u4e2a\u73af\u628a0\u53f7\u7ebf\u53f3\u8fb9\u7684\u6240\u6709\u70b9\u5305\u4f4f\u4e86\uff0c\u4e5f\u5c31\u662f\u5728\u7b2c\u4e00\u4e2a\u7ea2\u70b9\u53f3\u8fb9\u7684\u6240\u6709\u70b9\u662f\u4e0d\u4f1a\u53d7\u5230\u8fd9\u4e24\u4e2a\u7684\u9009\u62e9\u7684\u5f71\u54cd\u7684\u3002\n\n\u7136\u540e\u518d\u6765\u770b\u7b2c\u4e00\u4e2a\u7ea2\u70b9\u5de6\u8fb9\u7684\u60c5\u51b5\uff0c\u5982\u679c\u4f60\u662f\u6309\u5de6\u7aef\u70b9\u4ece\u5de6\u5f80\u53f3\u641c\u7d22\u7684\uff0c\u4f60\u4f1a\u53d1\u73b0\u5230\u8fd9\u6b65\u7684\u65f6\u5019\u7ea2\u70b9\u5de6\u8fb9\u5df2\u7ecf\u641c\u7d22\u5b8c\u4e86\uff0c\u5373\u5728\u5de6\u8fb9\u4f1a\u8fdb\u51fa\u73af\u7684\u70b9\u5df2\u7ecf\u5168\u90e8\u51b3\u5b9a\u4e86\uff0c\u800c\u53c8\u56e0\u4e3a\u4e0d\u4f1a\u5bf9\u53f3\u8fb9\u9020\u6210\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u5730\u53d6\u8fd9\u4e24\u6761\u73af\u4ea7\u751f\u4ea4\u70b9\u7684\u6700\u5c0f\u503c\u3002\n\n\u540c\u7406\uff0c\u5269\u4e0b\u7684\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5904\u7406\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n2^{\\left(\\frac{n}{2}\\right)})$\u3002\n\n\u671f\u671b\u5f97\u5206$\\rm 80$\u5206\u3002\n\n\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u770b\u4e0a\u53bb\u5df2\u7ecf\u5f88\u4f18\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u80fd\u4e0d\u80fd\u4f18\u5316\u627e\u4ea4\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u8003\u8651\u6211\u4eec\u4ece\u5de6\u5f80\u641c\u7d22\uff0c\u7528$a.l,a.r$\u8868\u793a$a$\u7ebf\u8def\u7684\u5de6\u7aef\u70b9\u53f3\u7aef\u70b9\uff0c\u82e5\u53ea\u8003\u8651\u540c\u5411\uff0c\u56e0\u4e3a$a.l \\lt a.r,\\;b.l \\lt b.r,\\; a.l \\lt b.l$\u5219\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n$$1)\\quad a.l\\lt b.l\\lt b.r \\lt a.r$$\n\n$$2)\\quad a.l\\lt a.r\\lt b.l \\lt b.r$$\n\n$$3)\\quad a.l\\lt b.l \\lt a.r \\lt b.r$$\n\n\u663e\u7136\uff0c\u53ea\u6709\u60c5\u51b5$3$\u662f\u76f8\u4ea4\u7684\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/30154.png)\n\n\u6211\u4eec\u53d1\u73b0\u53ea\u6709$b.l\\lt a.r\\lt b.r$\u6211\u4eec\u624d\u9700\u8981\u7edf\u8ba1\u3002\n\n\u662f\u4e0d\u662f\u5f88\u719f\u6089\uff1f\u4f60\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u6765\u8fdb\u884c\u7edf\u8ba1\u3002\n\n\u6bcf\u4e2a\u53f3\u7aef\u70b9\u6807\u8bb0$1$\uff0c\u7136\u540e\u6c42$[b.l,b.r]$\u7684\u548c\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u671d\u5411\u95ee\u9898\uff0c\u663e\u7136\u5de6\u7aef\u70b9\u7684\u671d\u5411\u4e0d\u5f71\u54cd\uff0c\u53f3\u7aef\u70b9\u53ea\u6709\u540c\u5411\u624d\u4f1a\u76f8\u4ea4\uff0c\u53ef\u4ee5\u81ea\u884c\u753b\u56fe\uff0c\u8fd9\u8fb9\u4e0d\u4f5c\u6f14\u793a\u3002\n\n\u81f3\u4e8e\u4ee3\u7801\uff0c\u7531\u4e8e\u5199\u7684\u65f6\u5019\u6bd4\u8f83\u65e9\uff0c\u592a\u4e11\u5c31\u4e0d\u653e\u51fa\u6765\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(2^{\\left(\\frac{n}{2}\\right)}\\log n)$\uff0c\u53ef\u4ee5$\\rm AC$\u3002\n\n\u6709\u95ee\u9898\u8bf7\u7559\u8a00\u3002",
        "postTime": 1521275835,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4005 \u3010\u5c0f Y \u548c\u5730\u94c1\uff08metro\uff09\u3011"
    },
    {
        "content": "### Preface\n\n**\u4e00\u5b9a\u8981\u526a\u679d\uff1a\u5982\u679c\u641c\u5230\u7684\u7b54\u6848 $\\geq$ \u5f53\u524d\u7684\u6700\u4f18\u7b54\u6848\u5c31\u4e0d\u8981\u7ee7\u7eed\u641c\u4e86\uff01\uff01\uff01\u4e0d\u526a\u679d\u8dd1 $T = 100$ \u53ea\u80fd\u6ca6\u4e3a\u66b4\u529b\u540c\u5206\uff01\uff01\uff01**\n\n### Solution\n\n+ \u9996\u5148\u5bf9\u4e8e\u6bcf\u7ec4\u5730\u94c1\u7ad9\uff0c\u6709 $8$ \u79cd\u6362\u4e58\u60c5\u51b5\u3002\u6807\u6ce8\u4e00\u904d\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zlwtla3l.png)\n\n+ \u76f4\u63a5\u7206\u641c\uff08$\\mathcal O(n8^{\\frac{n}{2}})$\uff09\u5728 $n \\leq 44$ \u7684\u60c5\u51b5\u4e0b\u4e0d\u73b0\u5b9e\u3002\u8003\u8651\u4f18\u5316\u72b6\u6001\uff0c\u5177\u4f53\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u628a \u2460\u2461 \u4e24\u4e2a\u8fde\u7ebf\u65b9\u5f0f\u5408\u5e76\u8d77\u6765\u770b\uff08\u53f3\u4e0b\u89d2\u622a\u8fdb\u4e86\u641c\u72d7\u8f93\u5165\u6cd5\u7684\u6cb3\u7ae5\u76ae\u80a4\uff0c\u65e0\u4f24\u5927\u96c5\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/u8h5dm7h.png)\n\n+ \u540c\u7406\u53ef\u4ee5\u53d1\u73b0 \u2462\u2463\u3001\u2466\u2467 \u4ea7\u751f\u7684\u8d21\u732e\u5728\u65e0\u8bba\u4f55\u65f6\u90fd\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u4e22\u6389 \u2463\u2466 \u8003\u8651\u3002\u73b0\u5728\u72b6\u6001\u6570\u53d8\u6210\u4e86 $4$ \u4e2a\uff0c\u7206\u641c\u5df2\u7ecf\u53ef\u4ee5\u83b7\u5f97\u6bd4\u8f83\u53ef\u89c2\u7684\u5206\u6570\u4e86\uff08$\\mathcal O(n4^{\\frac{n}{2}})$\uff09\u3002\u8003\u8651\u7ee7\u7eed\u4f18\u5316\uff0c\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u65e0\u6cd5\u518d\u5408\u5e76\u72b6\u6001\u4e86\u3002\n+ \u6211\u4eec\u5728\u641c\u7d22\u7684\u65f6\u5019\u5c06\u6240\u6709\u6362\u4e58\u7ad9\u8fde\u7ebf\u6309\u7167 $L$ \u6392\u5e8f\uff0c\u90a3\u4e48\u4f60\u4f1a\u53d1\u73b0\u641c\u5230\u4e00\u5bf9\u7ad9\u70b9\u65f6\uff0c\u5bf9\u5b83\u4ea7\u751f\u4ea4\u70b9\u8d21\u732e\u7684\u53ea\u4f1a\u548c\u524d\u9762\u7684\u6362\u4e58\u7ad9\u7684 $R$ \u6709\u5173\u7cfb\uff08\u8fd9\u540c\u6837\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u5148\u524d\u4e22\u6389\u4e86 \u2463\u2466 \u800c\u975e \u2462\u2467\uff09\u3002\n+ \u66f4\u5177\u4f53\u5730\uff0c\u6839\u636e\u5728 $0$ \u53f7\u7ebf\u7684\u300c\u4e0a\u65b9\u300d\u7684 $R$ \u548c\u300c\u4e0b\u65b9\u300d\u7684 $R$\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8d21\u732e\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u3002\u5bb9\u6613\u53d1\u73b0\u5728\u5269\u4e0b\u6765\u7684\u56db\u79cd\u72b6\u6001\u4e2d\uff0c\u2460\u2467 \u7684\u8d21\u732e\u90fd\u662f\u300c\u4e0a\u65b9\u300d\u7684 $R$ \u589e\u52a0 $1$\uff0c\u800c \u2462\u2465 \u53cd\u4e4b\u3002\n+ \u6240\u4ee5\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u6bcf\u6b21\u7684\u6289\u62e9\u53d8\u6210\u4e86\u4e24\u4e2a\uff1a\u5bf9\u300c\u4e0a\u65b9\u300d\u7684 $R$ \u8d21\u732e\u8fd8\u662f\u300c\u4e0b\u65b9\u300d\u7684 $R$ \u8d21\u732e\u3002\u800c\u5bf9\u4e0a\u65b9\u8d21\u732e\u65f6\uff0c\u65b0\u589e\u7684\u4ea4\u70b9\u4e2a\u6570\u53ef\u4ee5\u8d2a\u5fc3\u5730\u9009\u62e9 \u2460\u2467 \u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a\uff1b\u4e0b\u65b9\u540c\u7406\u3002\u76ee\u524d\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n2^{\\frac{n}{2}})$\u3002\n+ \u8003\u8651\u5982\u4f55\u4f18\u5316\u8d21\u732e\u7684\u8ba1\u7b97\uff1a\u4e0d\u96be\u53d1\u73b0\u8ba1\u7b97\u65f6\u4ea7\u751f\u4ea4\u70b9\u7684 $R$ \u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u5177\u4f53\u5730\uff1a\n> + \u9009\u62e9 \u2460 \u65f6\uff0c\u4e00\u4e2a $R$ \u8d21\u732e\u5f53\u4e14\u4ec5\u5f53\uff1a\u5b83\u5728\u300c\u4e0a\u65b9\u300d\uff0c\u5b83\u7684 $R$ \u5728\u5f53\u524d\u533a\u95f4 $[l, r]$ \u5185\uff08\u5f00\u533a\u95f4\u3001\u95ed\u533a\u95f4\u53ef\u4ee5\u7075\u6d3b\u6289\u62e9\uff0c\u6bd5\u7adf\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u53ea\u4f1a\u6709\u4e00\u4e2a\u6362\u4e58\u7ad9\uff09\u3002\n> + \u9009\u62e9 \u2467 \u65f6\uff0c\u4e00\u4e2a $R$ \u8d21\u732e\u5f53\u4e14\u4ec5\u5f53\uff1a\u5b83\u5728\u300c\u4e0a\u65b9\u300d\uff0c\u5b83\u7684 $R$ \u5728\u5f53\u524d\u533a\u95f4 $[r, \\inf)$ \u5185\uff0c\u6216\u5b83\u5728\u300c\u4e0b\u65b9\u300d\uff0c\u5b83\u7684 $R$ \u5728\u5f53\u524d\u533a\u95f4 $[l, \\inf)$ \u5185\u3002\n> + \u9009\u62e9 \u2462 \u65f6\uff0c\u4e00\u4e2a $R$ \u8d21\u732e\u5f53\u4e14\u4ec5\u5f53\uff1a\u5b83\u5728\u300c\u4e0b\u65b9\u300d\uff0c\u5b83\u7684 $R$ \u5728\u5f53\u524d\u533a\u95f4 $[l, r]$ \u5185\u3002\n> + \u9009\u62e9 \u2465 \u65f6\uff0c\u4e00\u4e2a $R$ \u8d21\u732e\u5f53\u4e14\u4ec5\u5f53\uff1a\u5b83\u5728\u300c\u4e0a\u65b9\u300d\uff0c\u5b83\u7684 $R$ \u5728\u5f53\u524d\u533a\u95f4 $[l, \\inf)$ \u5185\uff0c\u6216\u5b83\u5728\u300c\u4e0b\u65b9\u300d\uff0c\u5b83\u7684 $R$ \u5728\u5f53\u524d\u533a\u95f4 $[r, \\inf)$ \u5185\u3002\n+ \u627e\u6bcf\u79cd\u8d21\u732e\u660e\u663e\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(2^{\\frac{n}{2}}\\log n)$\uff08\u4f46\u662f\u4e00\u5b9a\u8981\u52a0\u4e0a\u5f00\u5934\u6240\u8ff0\u7684\u4f18\u5316\uff01\uff01\uff011\uff09\u3002\n\n\n### Code \n\n+ $8$ \u4e2a\u72b6\u6001\u7206\u641c\uff1a\u6ca1\u6709\u5199\u8fc7\u3002\n+ $4$ \u4e2a\u72b6\u6001\u7206\u641c\uff08\u4ea4\u4e0a\u53bb\u4e0d\u662f TLE \u800c\u662f WA 36 pts\uff0c\u8d21\u732e\u53ef\u80fd\u7b97\u9519\u4e86\u5427 /ll \u6211\u5927\u4e3a\u9707\u64bc\uff09\uff1a\n\n```cpp\n#define MAXN 45\nint lst[MAXN], status[MAXN];\n\nstruct Metro {\n\tint l, r;\n\tMetro () {}\n\tMetro (int L, int R) : l(L), r(R) {}\n\tconst bool operator < (const Metro& k) const {\n\t\treturn l < k.l;\n\t}\n};\n\nstd::vector<Metro> lines;\n\n// status = 0\n//      -----------\n//      |         |\n// =====*=========*=====\n//\n//\n// status = 1\n//      -------------------\n//      |                 |\n// =====*=========*=====  |\n//                |       |\n//                ---------\n// status = 2\n//\n//\n// =====*=========*=====  \n//      |         |       \n//      -----------\n// status = 3\n//                ---------\n//                |       |\n// =====*=========*=====  |\n//      |                 |\n//      -------------------\n\nint ans = 0x3f3f3f3f;\nvoid dfs(int u = 0, int sum = 0) {\n\tif (sum >= ans) return;\n\tif (u == lines.size()) { ans = sum; return; }\n\tint up0 = 0, down1 = 0, down2 = 0, up3 = 0;\n\tfor (int i = 0; i < u; ++i) {\n\t\tif (status[i] == 0) {\n\t\t\tup0 += lines[i].r < lines[u].r && lines[i].r > lines[u].l;\n\t\t\tdown1 += lines[i].r > lines[u].l;\n\t\t\tup3 += lines[i].r > lines[u].r;\n\t\t} else if (status[i] == 1) {\n\t\t    down1 += lines[i].r > lines[u].r;\n\t\t    down2 += lines[i].r < lines[u].r && lines[i].r > lines[u].l;\n\t\t\tup3 += 1;\n\t\t} else if (status[i] == 2) {\n\t\t    down1 += lines[i].r > lines[u].r;\n\t\t    down2 += lines[i].r < lines[u].r && lines[i].r > lines[u].l;\n\t\t\tup3 += lines[i].r > lines[u].l;\n\t\t} else /*status[i] == 3*/ {\n\t\t\tup0 += lines[i].r < lines[u].r && lines[i].r > lines[u].l;\n\t\t\tdown1 += 1;\n\t\t\tup3 += lines[i].r > lines[u].r;\n\t\t}\n\t}\n\tif (up0 < up3) \n\t\tstatus[u] = 0, dfs(u + 1, sum + up0);\n\telse status[u] = 3, dfs(u + 1, sum + up3);\n\tif (down1 < down2) \n\t\tstatus[u] = 1, dfs(u + 1, sum + down1);\n\telse status[u] = 2, dfs(u + 1, sum + down2);\n}\nint main() {\n\tint T = read<int>();\n\twhile (T--) {\n\t\tint N = read<int>();\n\t\tfor (int i = 1; i <= N; ++i) {\n\t\t\tint a = read<int>();\n\t\t\tif (lst[a]) lines.push_back(Metro(lst[a], i));\n\t\t\tlst[a] = i;\n\t\t}\n\t\tstd::sort(lines.begin(), lines.end());\n\t\tdfs(0); print<int>(ans, '\\n');\n\t\tmemset(lst, 0, sizeof(lst));\n\t\tlines.clear(), ans = 0x3f3f3f3f;\n\t}\n\treturn 0;\n}\n```\n\n+ \u6811\u72b6\u6570\u7ec4\u6ee1\u5206\u505a\u6cd5\uff0c\u968f\u4fbf\u5361\u4e86\u70b9\u5e38\u6570\uff0c\u5176\u4ed6\u90e8\u5206\u90fd\u4e00\u6837\u5c31\u4e0d\u653e\u4e86\uff1a\n\n```cpp\nint t0[MAXN], t1[MAXN], Z = 45, ans = 0x3f3f3f3f;\nvoid add0(int x, int v) { while (x <= Z) t0[x] += v, x += x & (-x); }\nvoid add1(int x, int v) { while (x <= Z) t1[x] += v, x += x & (-x); }\nint query0(int x) { int ans = 0; while (x) ans += t0[x], x -= x & (-x); return ans; }\nint query1(int x) { int ans = 0; while (x) ans += t1[x], x -= x & (-x); return ans; }\nvoid dfs(int u = 0, int sum = 0) {\n\tif (sum >= ans) return;\n\tif (u == lines.size()) { ans = std::min(ans, sum); return; }\n\tint l = lines[u].l, r = lines[u].r, pr0 = query0(r), pr1 = query1(r), pr2 = u - pr0 - pr1;\n\tpr0 -= query0(l), pr1 -= query1(l);\n//\tchoose :\n//\t0 -> pr0\n//\t1 -> pr0 + pr2\n//\t2 -> pr1\n//\t3 -> pr1 + pr2\n//\tprintf(\"%s%d %d %d %d %d\\n\", std::string(u * 4, ' ').c_str(), u, pr0, pr1, pr2, pr3);\n//\tprintf(\"%s%d %d\\n\", std::string(u * 4, ' ').c_str(), std::min(pr0, pr1 + pr2), std::min(pr1, pr0 + pr3));\n\tadd0(r, 1);\n\tdfs(u + 1, sum + std::min(pr0, pr1 + pr2));\n\tadd0(r, -1), add1(r, 1);\n\tdfs(u + 1, sum + std::min(pr1, pr0 + pr2));\n\tadd1(r, -1);\n//\tprintf(\"%s%d\\n\", std::string(u * 4, ' ').c_str(), ans);\n}\n```",
        "postTime": 1660802059,
        "uid": 419487,
        "name": "irris",
        "ccfLevel": 7,
        "title": "P4005 Solution"
    },
    {
        "content": "\u6211\u7684\u535a\u5ba2\uff1ahttp://www.cnblogs.com/david--lj/p/8535949.html\n\u9898\u610f\uff1a\u4e00\u6761\u7ebf\u6bb5\uff0c\u7ed9\u5b9an\u4e2a\u70b9(n<=44)\u5176\u4e2d\u6bcf\u4e2a\u70b9\u53ef\u80fd\u5bf9\u5e94\u53e6\u5916\u4e00\u4e2a\u70b9\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u6709\u5bf9\u5e94\u70b9\uff0c\u90a3\u4e48\u5c31\u8981\u7528\u66f2\u7ebf\u8fde\u63a5\u8fd9\u4e24\u4e2a\u70b9\u3002\u8fd9\u4e9b\u66f2\u7ebf\u4f1a\u6709\u8bb8\u591a\u4ea4\u70b9\uff08\u4e0d\u5b58\u57283\u7ebf\u5171\u70b9\uff09\u6c42\u4ea4\u70b9\u6700\u5c11\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e\u6570\u636e\u8303\u56f4\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u662f\u4e8c\u8fdb\u5236\u66b4\u641c\uff0c\u4f46\u662f\uff0c\u4e3a\u4e86\u526a\u679d\uff0c\u8fd8\u662f\u5199dfs\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u70b9\uff0c\u67096\u4e2d\u8fde\u7ebf\u65b9\u5f0f:\n\n\u590d\u6742\u5ea6\uff1aO(6^(n/2)) \u5495\u5495\u5495\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u628a2\uff0c3\u753b\u5728\u4e00\u8d77\uff0c\u4ed6\u4eec\u4e00\u5b9a\u662f\u4e00\u4e2a\u5706\u73af\uff0c\u4e14\u5305\u4f4f\u4e86\u6574\u6761\u7ebf\u6bb5\uff0c\u5047\u5982\u6709\u4e00\u6761\u65b0\u7684\u7ebf\u6bb5\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u90a3\u6761\u7ebf\u6bb5\u8981\u4e48\u548c2\uff0c3\u90fd\u6ca1\u4ea4\u70b9\uff0c\u8981\u4e48\u90fd\u6709\u4ea4\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u4e24\u4e2a\u70b9\uff0c\u75282\u8fd8\u662f\u75283\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u90fd\u662f\u4e00\u6837\u7684\u3002\u540c\u74064\uff0c5\u4e5f\u4e00\u6837.\n\n\u8fd9\u6837\u53ea\u7528\u8003\u86514\u4e2d\u60c5\u51b5\u4e86\uff1a\u590d\u6742\u5ea6\uff1aO(4^(n/2))\u8fd8\u662f\u5495\u5495\u5495\n\n\u7136\u540e\u600e\u4e48\u4f18\u5316\uff1f\u6709\u7684\u5927\u4f6c\u7528\u6a21\u62df\u9000\u706b\uff08%%%%%%%%%%%\uff09\u4f46\u6211\u5e76\u4e0d\u4f1a\u6a21\u62df\u9000\u706b\u3002\n\n\u6211\u4eec\u8bd5\u7740\u5c061\u548c2\u753b\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u53c8\u662f\u4e00\u4e2a\u73af\uff0c\u4f46\u8fd9\u4e2a\u73af\u6709\u70b9\u7279\u6b8a\uff0c\u5bf9\u5728\u8fd9\u4e24\u4e2a\u70b9\u5de6\u8fb9\u7684\u70b9\u53f3\u4fa7\u7684\u7ebf\u6bb5\u5f71\u54cd\u76f8\u540c\uff08\u5728\u5c06\u6240\u6709\u7ebf\u6bb5\u6392\u5e8f\u540e\u8fdb\u884cdfs\uff09\u4f46\u5de6\u4fa7\u7684\u70b9\u5bf9\u4e8e1\u62162\u7684\u7b54\u6848\u8d21\u732e\u662f\u4e0d\u540c\u7684\u3002\n\nthus\uff0c\u6211\u4eec\u53ea\u9700\u5728dfs\u65f6\uff0c\u8ba1\u7b971\uff0c2\u7684\u4ea7\u751f\u7684\u7b54\u6848\u8d21\u732e\u54ea\u4e2a\u66f4\u5c11\uff0c\u5c31\u7528\u90a3\u4e2a4\uff0c6\u540c\u7406\u3002\n\u4ee3\u7801\u4e2d\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\n\u590d\u6742\u5ea6\uff1aO(2^(n/2))\u6b63\u5e38\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n#define maxn 50\nint lowbit(int x){return x&-x;} \nstruct treearr{\n    int c[maxn],siz;\n    void init(int p){int i;for(i=1;i<=p;++i)c[i]=0;siz=p;}\n    void add(int x,int d){while(x<=siz){c[x]+=d;x+=lowbit(x);}}\n    int sum(int x){int res=0;while(x){res+=c[x];x-=lowbit(x);}return res;}\n    int query(int l,int r){return sum(r)-sum(l-1);}\n};\ntreearr up,down;\nint n,a[maxn],pos,l[maxn],r[maxn],ans;\nvoid dfs(int st,int sum){\n    if(st>pos){\n        ans=min(ans,sum);return;\n    }\n    if(sum>ans)return;\n    int i;\n    int a1=min(up.query(l[st],r[st]),down.query(l[st],n)+up.query(r[st],n));\n    up.add(r[st],1);dfs(st+1,sum+a1);up.add(r[st],-1);\n    int a2=min(down.query(l[st],r[st]),up.query(l[st],n)+down.query(r[st],n));\n    down.add(r[st],1);dfs(st+1,sum+a2);down.add(r[st],-1);\n}\nint main(){\n    int T;scanf(\"%d\",&T);\n    while(T--){\n        int i,j;scanf(\"%d\",&n);ans=1<<30;\n        for(i=1;i<=n;++i)scanf(\"%d\",&a[i]);\n        pos=0;\n        for(i=1;i<=n;++i)\n            for(j=i+2;j<=n;++j)if(a[i]==a[j])\n            {\n                l[++pos]=i,r[pos]=j;break;\n            }\n        up.init(n);down.init(n);\n        dfs(1,0);\n        printf(\"%d\\n\",ans);\n    }\n}\n```",
        "postTime": 1520598985,
        "uid": 24370,
        "name": "meiqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4005 \u3010\u5c0f Y \u548c\u5730\u94c1\uff08metro\uff09\u3011"
    },
    {
        "content": "\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u6027\u8d28\uff1a\n\n1. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002\n2. \u76f8\u90bb\u6570\u5b57\u76f8\u540c\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u53e6\u4e00\u4e2a\u6027\u8d28\u662f\uff0c\u4e0b\u9762\u8fd9\u4e24\u5f20\u56fe\u662f\u7b49\u4ef7\u7684\uff1a\n![](https://i.loli.net/2018/12/30/5c28d2cc354bd.png)\n![](https://i.loli.net/2018/12/30/5c28d2cd8ef4a.png)\n\n\u6211\u4eec\u53d1\u73b0\u4e24\u6761\u8def\u7ebf\u7b49\u4ef7\u5f53\u4e14\u4ec5\u5f53\u5de6\u53f3\u4e24\u7aef\u70b9\u5411\u4e0b\u6216\u5411\u4e0a\u65b9\u5411\u90fd\u4e00\u81f4\u3002 \n\n\u8bc1\u660e\uff1a\u5982\u679c\u4ee5\u8f6c\u6362\u7ad9\u4e3a\u7eb5\u5206\u754c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u56fe\u5206\u4e3a$2*3$\u7684$6$\u7684\u4e2a\u533a\u57df\u3002\u4e24\u4e2a\u56fe\u88ab\u5207\u5f00\u540e\uff0c\u4e0d\u8fde\u901a\u7684\u533a\u57df\u548c\u76f8\u8fde\u901a\u7684\u533a\u57df\u662f\u76f8\u540c\u7684\uff08\u4ee5\u7ebf\u8def\u5206\u9694\u4e0d\u540c\u7684\u533a\u57df\uff09\uff0c\u6240\u4ee5\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u4e5f\u662f\u76f8\u540c\u7684\u3002\n\n\u5ffd\u7565\u6240\u6709\u53ea\u6709\u4e00\u4e2a\u4ea4\u70b9\u7684\u8f6c\u7ad9\uff0c\u5269\u4e0b\u7684\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\u7136\u540e $dfs$\uff0c\u7ef4\u62a4\u4e00\u4e0b\u5f53\u524d\u53f3\u7aef\u70b9\u671d\u4e0a\u548c\u671d\u4e0b\u8fde\u51fa\u53bb\u7684\u63a5\u5934\u7684\u4fe1\u606f\uff0c\u7528\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5c31\u597d\u4e86\u3002\n\n---------------------\n\u50cf\u4e0a\u9762\u90a3\u79cd\u62d0\u5f2f\u7684\u60c5\u51b5\uff0c\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3a\u8d70\u5230\u5934\u518d\u56de\u6765\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=105,inf=0x7fffffff;\nint n,a[N],cnt=0,ans=0;\nint l[N],r[N];\nstruct SZSZ\n{\n    int c[N];\n    inline void add(int x,int v) {for(;x<=n;x+=x& -x) c[x]+=v;}\n    inline int sum(int x) {int ans=0;for(;x;x-=x&-x) ans+=c[x];return ans;}\n    inline int query(int l,int r) {return (l>r)?0:sum(r)-sum(l-1);}\n}up,down;\nvoid dfs(int now,int nowans)\n{\n    if (nowans>=ans) return ;\n    if (now>cnt) {ans=nowans;return ;}\n    up.add(r[now],1);\n    dfs(now+1,nowans+min(up.query(l[now],r[now]-1),down.query(l[now],n)+up.query(r[now]+1,n)));\n    up.add(r[now],-1);\n    down.add(r[now],1);\n    dfs(now+1,nowans+min(down.query(l[now],r[now]-1),up.query(l[now],n)+down.query(r[now]+1,n)));\n    down.add(r[now],-1);\n}\nint main()\n{\n    int T;\n    scanf(\"%d\",&T);\n    while (T--)\n\t{\n        ans=inf;cnt=0;\n        scanf(\"%d\",&n);\n        for (int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n        for (int i=1;i<=n;i++)\n            for (int j=i+2;j<=n;j++)\n                if (a[i]==a[j]) l[++cnt]=i,r[cnt]=j;\n        dfs(1,0);\n        printf(\"%d\\n\",ans);\n    } \n    return 0;\n}\n```",
        "postTime": 1546181078,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4005 \u3010\u5c0f Y \u548c\u5730\u94c1\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\u539f\u9898\u94fe\u63a5\uff1a[P4005](https://www.luogu.com.cn/problem/P4005  )\n\n\u6807\u7b7e\u91cc\u63d0\u5230\u4e86\u6a21\u62df\u9000\u706b\uff0c\u4f46\u9898\u89e3\u91cc\u597d\u50cf\u90fd\u662f\u6811\u72b6\u6570\u7ec4\u2026\u2026\u4e0b\u9762\u6211\u4eec\u5c1d\u8bd5\u6765\u7528\u6a21\u62df\u9000\u706b\u505a\u8fd9\u9053\u9898\u3002  \n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u6389\u4e0e $0$ \u53f7\u7ebf\u53ea\u6709\u4e00\u4e2a\u4ea4\u70b9\u7684\u7ebf\u8def\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b83\u8db3\u591f\u77ed\u4ece\u800c\u4e0d\u4e0e\u5176\u5b83\u4efb\u4f55\u7ebf\u8def\u76f8\u4ea4\u3002  \n\n\u4e8e\u662f\u53ea\u5269\u4e0b\u4e86\u4e0e $0$ \u53f7\u7ebf\u6709\u4e24\u4e2a\u4ea4\u70b9\u7684\u7ebf\u8def\uff0c\u6211\u4eec\u9996\u5148\u60f3\u5230\u679a\u4e3e\u6bcf\u4e00\u6761\u7ebf\u7684\u5f62\u72b6\uff0c\u8fd9\u603b\u5171\u6709\u516b\u79cd\u3002\u4f46\u4ed4\u7ec6\u60f3\u60f3\uff0c\u80fd\u591f\u9996\u5c3e\u76f8\u63a5\u5e76\u5305\u56f4\u6574\u4e2a $0$ \u53f7\u7ebf\u7684\u4e00\u5bf9\u5f62\u72b6\u4e00\u5b9a\u662f\u7b49\u4ef7\u7684\uff0c\u56e0\u4e3a\u4efb\u610f\u4e00\u6761\u5176\u5b83\u7684\u5730\u94c1\u7ebf\u8def\u8981\u4e48\u548c\u5b83\u4eec\u90fd\u6ca1\u6709\u4ea4\u70b9\uff0c\u8981\u4e48\u90fd\u6709\u4e00\u4e2a\u4ea4\u70b9\u3002\u4e8e\u662f\u7b80\u5316\u540e\u5c31\u53ea\u5269\u4e0b\u4e86\u4ee5\u4e0b\u56db\u79cd\u4e0d\u540c\u7684\u60c5\u51b5\uff08\u5f53\u7136\uff0c\u9009\u53e6\u5916\u56db\u79cd\u4e5f\u662f\u6ca1\u95ee\u9898\u7684\uff09\uff1a  \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0vem8668.png)\n\n\u90a3\u4e48\u6211\u4eec\u627e\u51fa\u4efb\u4e24\u6761\u7ebf\u6bb5\u7684\u4f4d\u7f6e\u5173\u7cfb\u548c\u5f62\u72b6\u5173\u7cfb\u5bf9\u5b83\u4eec\u4ea4\u70b9\u4e2a\u6570\u7684\u5f71\u54cd\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u5b9e\u73b0 $O(n^2)$ \u7684\u8ba1\u7b97\u7b54\u6848\u3002\u5e76\u4e14\u7531\u4e8e\u6a21\u62df\u9000\u706b\u6bcf\u6b21\u53ea\u6539\u53d8\u4e00\u6761\u7ebf\u7684\u72b6\u6001\uff0c\u4e8e\u662f\u4e2d\u9014\u53ea\u9700\u8ba1\u7b97\u8fd9\u6761\u7ebf\u8def\u4e0a\u4ea4\u70b9\u6570\u91cf\u7684\u53d8\u5316\u60c5\u51b5\uff0c\u5b9e\u73b0 $O(n)$ \u7684\u5224\u65ad\u65b0\u89e3\uff0c\u8db3\u591f\u901a\u8fc7\u672c\u9898\u3002  \n\n\u6ce8\u610f\uff0c\u7531\u4e8e\u6211\u4eec\u5224\u65ad\u4ea4\u70b9\u9700\u8981\u77e5\u9053\u4e24\u6761\u7ebf\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u6240\u4ee5\u5728\u7ed9\u7ebf\u6bb5\u7f16\u53f7\u65f6\u4e0d\u59a8\u7ed9\u5de6\u7aef\u70b9\u66f4\u9760\u5de6\u7684\u7ebf\u6bb5\u8d4b\u66f4\u5c0f\u7684\u7f16\u53f7\uff0c\u8fd9\u6837\u80fd\u7701\u53bb\u4e00\u4e9b\u9ebb\u70e6\u3002   \n\n\u4e4b\u540e\u591a\u8c03\u8c03\u53c2\uff0c\u518d\u591a\u4ea4\u51e0\u904d\u5c31\u80fd AC \u4e86\u3002  \n\n## \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <stdlib.h>\n#include <ctime>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\nint t,n,a[45],sum[45],zt[45],b[45],cnt,ansnow,ans;\nstruct dt\n{\n\tint l;\n\tint r;\n\tint tag;\n}dt[25];\nbool checka(int tag1,int tag2)//\u8fd9\u4e24\u4e2a\u5224\u65ad\u53ef\u4ee5\u6839\u636e\u9898\u89e3\u91cc\u7684\u56fe\u60f3\u4e00\u60f3 \n{\n\tif(tag1==1||tag1==4)\n\t{\n\t\tif(tag2==1||tag2==3)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t}\n\telse if(tag1==2||tag1==3)\n\t{\n\t\tif(tag2==2||tag2==4)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nbool checkb(int tag1,int tag2)//\u5176\u5b9e\u8fd9\u4e24\u4e2acheck\u6709\u4e9b\u591a\u4f59\u4e86\uff08\n{\n\tif(tag2==3||tag2==4)\n\t{\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nbool check(int x,int y)//\u6b64\u65f6\u5df2\u7ecf\u9ed8\u8ba4\u4e86x\u7684\u5de6\u7aef\u70b9\u6bd4y\u7684\u5de6\u7aef\u70b9\u66f4\u9760\u5de6\n{\n\tif(dt[x].r<dt[y].l)\n\t{\n\t\treturn 0;\n\t}\n\telse if(dt[x].r<dt[y].r)\n\t{\n\t\treturn checka(dt[x].tag,dt[y].tag);\n\t}\n\telse if(dt[y].r<dt[x].r)\n\t{\n\t\treturn checkb(dt[x].tag,dt[y].tag);\n\t}\n}\nint calf()//\u8ba1\u7b97\u521d\u59cb\u7b54\u6848 \n{\n\tint nsum=0;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tfor(int j=i+1;j<=cnt;j++)\n\t\t{\n\t\t\tnsum+=check(i,j);\n\t\t}\n\t}\n\treturn nsum; \n}\nint calc(int num,int tg)//\u6bcf\u6b21\u9000\u706b\u8ba1\u7b97\u65b0\u7b54\u6848 \n{\n\tint nsum=ansnow;\n\tfor(int i=1;i<num;i++)\n\t{\n\t\tnsum-=check(i,num);\n\t}\n\tfor(int i=num+1;i<=cnt;i++)\n\t{\n\t\tnsum-=check(num,i);\n\t}\n\tdt[num].tag=tg;\n\tfor(int i=1;i<num;i++)\n\t{\n\t\tnsum+=check(i,num);\n\t}\n\tfor(int i=num+1;i<=cnt;i++)\n\t{\n\t\tnsum+=check(num,i);\n\t}\n\tans=min(ans,nsum);\n\tansnow=nsum;\n\treturn nsum;\n}\nint getrd(int l,int r)\n{\n\treturn l+rand()%(r-l+1);\n}\nvoid SA()\n{\n\tdouble maxt=50,mint=1e-2;//\u6e29\u5ea6\u53ef\u4ee5\u8bbe\u5f97\u4f4e\u4e00\u4e9b\uff08\n\tfor(double nowt=maxt;nowt>=mint;nowt*=0.99919)\n\t{\n\t\tint xx=getrd(1,cnt);\n\t\tint type=getrd(1,4);\n\t\tif(type==dt[xx].tag)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tint lasttype=dt[xx].tag;\n\t\tint anslast=ansnow;\n\t\tint delt=calc(xx,type)-anslast;\n\t\tif(exp(-delt/nowt)*RAND_MAX<rand())//\u5df2\u7ecf\u5728calc\u91cc\u66f4\u65b0\u8fc7\u7b54\u6848\u4e86\uff0c\u53ea\u8981\u5224\u65ad\u662f\u5426\u63a5\u53d7\u65b0\u89e3\u5373\u53ef \n\t\t{\n\t\t\tint qqqq=calc(xx,lasttype);\n\t\t}\n\t}\n}\nint main()\n{\n\tsrand(time(0));\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tcin>>n;\n\t\tmemset(sum,0,sizeof(sum));\n\t\tmemset(zt,0,sizeof(zt));\n\t\tcnt=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tcin>>a[i];\n\t\t\tsum[a[i]]++;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)//\u53bb\u6389\u65e0\u7528\u7ebf\u6bb5\uff0c\u7ed9\u7ebf\u6bb5\u91cd\u6807\u53f7 \n\t\t{\n\t\t\tif(sum[a[i]]==2)\n\t\t\t{\n\t\t\t\tif(!zt[a[i]])\n\t\t\t\t{\n\t\t\t\t\tcnt++;\n\t\t\t\t\tdt[cnt].l=i;\n\t\t\t\t\tb[a[i]]=cnt;\n\t\t\t\t\tzt[a[i]]=1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdt[b[a[i]]].r=i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(cnt==0)\n\t\t{\n\t\t\tcout<<\"0\"<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\tans=100000000;\n\t\tfor(int i=1;i<=10;i++) \n\t\t{\n\t\t\tfor(int i=1;i<=cnt;i++)//\u521d\u503c\u53ef\u4ee5\u968f\u673a \n\t\t\t{\n\t\t\t\tdt[i].tag=getrd(1,4);\n\t\t\t}\n\t\t\tansnow=calf();\n\t\t\tSA();\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n}\n```",
        "postTime": 1669369329,
        "uid": 529697,
        "name": "PEKKA_l",
        "ccfLevel": 6,
        "title": "P4005\u9898\u89e3"
    },
    {
        "content": "# Reference\n\n\u5728 [\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/2020gyk080/articles/luogu_P4005.html) \u91cc\u98df\u7528\u66f4\u4f73\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\n\n1. \u6811\u72b6\u6570\u7ec4\uff1a\u53ef\u53c2\u8003\u6211\u5199\u7684 [\u8fd9\u7bc7\u6587\u7ae0](https://www.luogu.com.cn/blog/470638/shujujiegou-shuzhuangshuzu) \u3002\n\n2. \u5927\u6cd5\u5e08 DFS\u3002\n\n# Problem & Solution\n\n\u7b80\u5316\u7248\u9898\u610f\uff1a\u7ed9\u5b9a $n$ \uff08 $n < 45$ \uff09\u4e2a\u70b9\uff0c\u5176\u4e2d\u6bcf\u4e2a\u70b9\u53ef\u80fd\u5bf9\u5e94\u53e6\u5916\u4e00\u4e2a\u70b9\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u6709\u5bf9\u5e94\u70b9\uff0c\u90a3\u4e48\u5c31\u8981\u7528\u66f2\u7ebf\u8fde\u63a5\u8fd9\u4e24\u4e2a\u70b9\u3002\u8fd9\u4e9b\u66f2\u7ebf\u4f1a\u6709\u8bb8\u591a\u4ea4\u70b9\uff08\u4e0d\u5b58\u5728\u73af\u3001\u4e09\u7ebf\u5171\u70b9\u3001\u4ea4\u53c9\u4f46\u6ca1\u6709\u4ea4\u70b9\u8fd9\u4e09\u79cd\u60c5\u51b5\uff09\uff0c\u6c42\u4ea4\u70b9\u6700\u5c11\u4e2a\u6570\u3002\n\n\u6839\u636e\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u770b\u51fa\u662f\u4e8c\u8fdb\u5236\u66b4\u529b\u641c\u7d22\uff0c\u770b\u9898\u89e3\u91cc dalao \u90fd\u7528\u7684\u662f\u6a21\u62df\u9000\u706b\u4e91\u4e91\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\uff0c\u6240\u4ee5\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n\u5927\u6cd5\u5e08 DFS + \u526a\u679d\uff01~\n\n## \u4f18\u5316\u4eec\n\n\u9996\u5148\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u4e24\u4e2a\u70b9\u6700\u591a\u6709 6 \u79cd\u8fde\u7ebf\u65b9\u5f0f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(6^{n/2})$ \u3002\n\n\u5c06\u5b83\u4eec\u5206\u522b\u7f16\u53f7 1 ~ 6\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u628a 2 \u3001 3 \u753b\u5728\u4e00\u8d77\uff0c\u4ed6\u4eec\u4e00\u5b9a\u662f\u4e00\u4e2a\u5706\u73af\uff0c\u4e14\u5305\u4f4f\u4e86\u6574\u6761\u7ebf\u6bb5\u3002\u5047\u5982\u6709\u4e00\u6761\u65b0\u7684\u7ebf\u6bb5\uff0c\u5219\u90a3\u6761\u7ebf\u6bb5\u8981\u4e48\u548c 2\u30013 \u90fd\u6ca1\u4ea4\u70b9\uff0c\u8981\u4e48\u90fd\u6709\u4ea4\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u4e24\u4e2a\u70b9\uff0c 2\u3001 3 \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u90fd\u662f\u4e00\u6837\u7684\u3002\n\n\u540c\u7406\uff0c4 \u3001 5 \u4e5f\u4e00\u6837\u3002\n\n\u8fd9\u6837\u5c31\u53d8\u6210\u4e86 4 \u79cd\u3002\n\n\u5176\u6b21\uff0c\u6211\u4eec\u518d\u8bd5\u7740\u5c06 1 \u548c 2 \u753b\u5728\u4e00\u8d77\uff0c\u53c8\u5f62\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u8be5\u73af\u5bf9\u5728\u8fd9\u4e24\u4e2a\u70b9\u5de6\u8fb9\u7684\u70b9\u53f3\u4fa7\u7684\u7ebf\u6bb5\u5f71\u54cd\u76f8\u540c\uff08\u6240\u4ee5\u6211\u4eec\u5728\u5c06\u6240\u6709\u7ebf\u6bb5\u6392\u5e8f\u540e\u8fdb\u884c DFS \uff09\u3002\n\n\u867d\u7136\u5de6\u4fa7\u7684\u70b9\u5bf9\u4e8e 1 \u6216 2 \u7684\u7b54\u6848\u8d21\u732e\u662f\u4e0d\u540c\u7684\uff0c\u4f46\u6211\u4eec\u53ea\u9700\u5728 DFS \u65f6\uff0c\u8ba1\u7b97 1\u30012 \u7684\u8d21\u732e\u54ea\u4e2a\u66f4\u5c11\uff0c4\u30016 \u540c\u7406\u3002\n\n\u518d\u6b21\uff0c\u5728\u524d\u4e24\u4e2a\u4f18\u5316\u7684\u57fa\u7840\u4e0a\u52a0\u5165\u6811\u72b6\u6570\u7ec4\uff0c\u590d\u6742\u5ea6 $O(2^{n/2})$ \u3002\n\n# Code\n```cpp\n//P4005 \u5c0f Y \u548c\u5730\u94c1\n#include<bits/stdc++.h>\nnamespace TREEARR//\u6811\u72b6\u6570\u7ec4\u6a21\u677f\n{\n\tinline int lowbit(int x)\n\t{\n\t\treturn x&-x;\n\t}\n\tstruct Treearr\n\t{\n\t\tint c[1000005],siz;\n\t\tvoid init(int p)//\u521d\u59cb\u5316\n\t\t{\n\t\t\tfor(int i=1;i<=p;i++)\n\t\t\t{\n\t\t\t\tthis->c[i]=0;\n\t\t\t}\n\t\t\tthis->siz=p;\n\t\t\treturn;\n\t\t}\n\t\tvoid add(int x,int d)//\u4fee\u6539\n\t\t{\n\t\t\twhile(x<=siz)\n\t\t\t{\n\t\t\t\tthis->c[x]+=d;\n\t\t\t\tx+=lowbit(x);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tint sum(int x)//\u5355\u70b9\u67e5\u8be2\n\t\t{\n\t\t\tint res=0;\n\t\t\twhile(x)\n\t\t\t{\n\t\t\t\tres+=this->c[x];\n\t\t\t\tx-=lowbit(x);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t\tint query(int l,int r)//\u533a\u95f4\u67e5\u8be2\n\t\t{\n\t\t\treturn this->sum(r)-this->sum(l-1);\n\t\t}\n\t};\n}\nusing namespace std;\nint t,n,a[45],pos,l[45],r[45],ans;\nTREEARR::Treearr up,down;\nvoid work_dfs(int st,int sum)//DFS\n{\n\tint a1,a2;\n\tif(st>pos)//\u627e\u5230\u53ef\u884c\u89e3\n\t{\n\t\tans=min(ans,sum);//\u53d6\u6700\u5c0f\u503c\n\t\treturn;\n\t}\n\tif(sum>ans)//\u4e00\u5904\u5c0f\u526a\u679d\uff0c\u5f53sum>ans\u65f6\uff0c\u5373\u4f7f\u6709\u53ef\u884c\u89e3\u4e5f\u627e\u4e0d\u5230\u6bd4ans\u66f4\u4f18\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u8fd4\u56de\n\t{\n\t\treturn;\n\t}\n\ta1=min(up.query(l[st],r[st]),down.query(l[st],n)+up.query(r[st],n));//\u7b2c\u4e00\u79cd\u60c5\u51b5\n    up.add(r[st],1);\n\twork_dfs(st+1,sum+a1);\n\tup.add(r[st],-1);\n    a2=min(down.query(l[st],r[st]),up.query(l[st],n)+down.query(r[st],n));//\u7b2c\u4e8c\u79cd\u60c5\u51b5\n    down.add(r[st],1);\n\twork_dfs(st+1,sum+a2);\n\tdown.add(r[st],-1);\n\treturn;\n}\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tans=1<<30;//\u6ce8\u610f\u6bcf\u6b21\u7684\u521d\u59cb\u5316\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",a+j);\n\t\t}\n\t\tpos=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tfor(int k=j+2;k<=n;k++)\n\t\t\t{\n\t\t\t\tif(a[k]==a[j])\n\t\t\t\t{\n\t\t\t\t\tl[++pos]=j;\n\t\t\t\t\tr[pos]=k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tup.init(n);\n\t\tdown.init(n);\n\t\twork_dfs(1,0);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1635600968,
        "uid": 470638,
        "name": "Steven_lzx",
        "ccfLevel": 5,
        "title": "P4005 \u5c0f Y \u548c\u5730\u94c1 \u9898\u89e3"
    },
    {
        "content": "\u4e5f\u8bb8\u662f\u4ece\u81ea\u5df1\u7684ppt\u4e0a\u8f6c\u8f7d\u7684\uff1f\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://blog.csdn.net/rabbit_ZAR/article/details/85100195)\n\n---\n\n**\u6837\u4f8b\u89e3\u91ca**\n\n![](https://i.loli.net/2018/12/19/5c19ffe0390ac.png)\n\n\n---\n\n**\u7b80\u5355\u7684\u60f3\u6cd5**\n\n\u53ea\u548c0\u53f7\u7ebf\u67091\u4e2a\u4ea4\u70b9\u7684\u7ebf\u8def\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\uff0c\u56e0\u4e3a\u53ef\u4ee5\u628a\u5b83\u7684\u957f\u5ea6\u770b\u505a\u65e0\u9650\u77ed\u3002\n\n\u5982\u679c\u6709\u4e00\u6761\u7ebf\u8def\u5de6\u53f3\u7aef\u70b9\u95f4\u6ca1\u6709\u53e6\u5916\u4e00\u6761\u7ebf\u7684\u7aef\u70b9\uff0c\u90a3\u4e48\u8fd9\u6761\u7ebf\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u3002\u8fd9\u6837\u64cd\u4f5c\u81f3\u6ca1\u6709\u53ef\u4ee5\u5220\u9664\u7684\u7ebf\u4e3a\u6b62\u3002\n\n\u8fd9\u6837\u5b50\u6837\u4f8b3\u5c31\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u4efb\u4f55\u7684\u7ebf\u8def\u76f4\u63a5\u8f93\u51fa0\u4e86\u2026\u2026\n\n---\n\n**\u4e00\u6761\u7ebf\u548c0\u53f7\u7ebf\u7684\u4f4d\u7f6e\u5173\u7cfb**\n\n![](https://i.loli.net/2018/12/19/5c19ffdf4bb21.png)\n\ndfs\u3002\n\n\u679a\u4e3e\u6bcf\u6761\u7ebf\u548c0\u53f7\u7ebf\u7684\u4f4d\u7f6e\u5173\u7cfb+\u66b4\u529b\u627e\u4ea4\u70b9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(?\u00b78^(?/2))\uff0c\u5927\u6982\u53ea\u80fd\u5f9710\u5206\u5de6\u53f3\n\n---\n\n**\u8003\u8651\u4f18\u5316\u72b6\u6001\u6570**\u2014\u2014\n\n![](https://i.loli.net/2018/12/19/5c19ffe152c7e.png)\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u53e6\u4e00\u6761\u7ebf\u8981\u4e48\u4e0d\u7ecf\u8fc7\u8fd9\u4e24\u6761\u7ebf\uff0c\u8981\u4e48\u540c\u65f6\u7ecf\u8fc7\u8fd9\u4e24\u6761\u7ebf\u3002\n\n\u72b6\u6001\u75318\u79cd\u53d8\u4e3a4\u79cd\n\n![](https://i.loli.net/2018/12/19/5c19ffe5574ef.png)\n\n\u590d\u6742\u5ea6O(?\u00b74^(?/2))\uff0c\u5927\u6982\u53ef\u4ee5\u5f97 16\u5206\u5de6\u53f3\n\n---\n\n**\u518d\u6765\u8003\u8651\u4f18\u5316\u72b6\u6001\u6570**\u2014\u2014\n\n![](https://i.loli.net/2018/12/19/5c19ffe421037.png)\n\n\n\u8fd9\u4e2a\u4f3c\u4e4e\u5e76\u4e0d\u80fd\u6ee1\u8db3\u5176\u5b83\u7684\u7ebf\u540c\u65f6\u7ecf\u8fc7\uff0c\u6216\u540c\u65f6\u4e0d\u7ecf\u8fc7\u8fd9\u4e24\u6761\u7ebf\u554a\uff1f\n\n![](https://i.loli.net/2018/12/19/5c19ffde6bee0.png)\n\n\u5bf9\u4e8e\u6bcf\u6761\u7ebf\u7684\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e14\u5728dfs\u4e2d\u4ece\u5c0f\u5230\u5927\u7684\u8003\u8651\u6bcf\u4e00\u6761\u7ebf\u3002\n\n\u6240\u4ee5\u53ea\u7528\u8003\u8651\u5de6\u7aef\u70b9\u5728\u5f53\u524d\u7ebf\u540e\u9762\u7684\u7ebf\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4e0a\u8ff0\u60c5\u51b5\u3002\n\n![](https://i.loli.net/2018/12/19/5c19ffe648f3f.png)\n\n\u73b0\u5728\u53ef\u4ee5\u770b\u505a\u53ea\u6709\u4e24\u79cd\u72b6\u6001\u4e86\u3002\n\n\u6bcf\u79cd\u72b6\u6001\u7684\u865a\u7ebf\u3001\u5b9e\u7ebf\u4e24\u79cd\u60c5\u51b5 \u53ef\u4ee5\u8d2a\u5fc3\u7684\u9009\u62e9\u4e00\u79cd\u548c\u524d\u9762\u7684\u7ebf\u4ea4\u70b9\u6700\u5c11\u7684\u3002\n\n\u590d\u6742\u5ea6O(?\u00b72^(?/2))\uff0c\u4eba\u54c1\u597d\u7684\u8bdd\u53ef\u4ee5\u5f9790\u5206\uff1f\n\n---\n\n**\u4f18\u5316\u627e\u4ea4\u70b9**\n\n\u8003\u8651\u52a0\u5165\u4e00\u6761\u7ebf\u4f1a\u5bf9\u4e00\u6bb5\u533a\u95f4\u9020\u6210\u5f71\u54cd\uff0c\u5373\u540e\u9762\u6709\u7aef\u70b9\u542b\u4e8e\u8fd9\u6bb5\u533a\u95f4\u7684\u7ebf\u6709\u53ef\u80fd\u4f1a\u4e0e\u8fd9\u6761\u7ebf\u76f8\u4ea4\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\u4f18\u5316\u3002\n\n\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\uff01\n\n\u6bcf\u52a0\u5165\u4e00\u6761\u7ebf\uff0c\u5c31\u628a\u5b83\u8986\u76d6\u7684\u533a\u95f4\u503c+1\u3002\u66f4\u65b0\u4ea4\u70b9\u6570\u65f6\u53ea\u9700\u8981\u52a0\u4e0a\u5b83\u7684\u5de6\u53f3\u7aef\u70b9\u4e0a\u7684\u503c\u4e4b\u5dee\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u590d\u6742\u5ea6 O(2^(?/2) ???2^?)\uff0c\u6ce8\u610f\u4e0b\u5e38\u6570\u5c31\u53ef\u4ee5\u8fc7\u4e86\n\n---\n\n**\u4ee3\u7801**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define maxn 44\n#define read(x) scanf(\"%d\",&x)\n\n#define lowbit(x) (x&-x)\n\n#define query(x,y,L,R) min(qryx(x,y,L,R),qryy(x,y,L,R))\n#define qryx(x,y,L,R) (x.Query(R)-x.Query(L-1))\n#define qryy(x,y,L,R) (x.Query(n)-x.Query(R-1)+y.Query(n)-y.Query(L-1))\n\nint n;\nint a[maxn+5];\nint ans;\n\nstruct Pair{\n\tint x,y;\n\tPair(){}\n\tPair(int xx,int yy) {\n\t\tx=xx,y=yy;\n\t}\n\tbool operator < (const Pair& oth) const {\n\t\treturn x<oth.x||(x==oth.x&&y<oth.y);\n\t}\n};\n\nvector<Pair> vec;\n\nstruct bst{\n\tint sum[maxn+5];\n\tbst(){}\n\tvoid add(int x,int d) {\n\t\twhile(x<=n) {sum[x]+=d,x+=lowbit(x);}\n\t}\n\tint Query(int x) {\n\t\tint s=0;\n\t\twhile(x>0) {s+=sum[x],x-=lowbit(x);}\n\t\treturn s;\n\t}\n};\n\nbst bstup,bstdown;\n\nvoid init() {\n\tn=0,ans=1e9,vec.clear();\n\tmemset(bstup.sum,0,sizeof(bstup.sum));\n\tmemset(bstdown.sum,0,sizeof(bstdown.sum));\n}\n\nvoid readin() {\n\tint nn;\n\tread(nn);\n\t\n\tint x[maxn+5];\n\tmap<int,int> mp;\n\tfor(int i=1;i<=nn;i++) {\n\t\tread(x[i]);\n\t\tif(mp.count(x[i])) mp[x[i]]++;\n\t\telse mp[x[i]]=1;\n\t}\n\t\n\tint use[maxn+5]={0},cnt=0;\n\tfor(int i=1;i<=nn;i++) {\n\t\tif(mp[x[i]]<=1) continue;\n\t\tif(use[x[i]]&&use[x[i]]==a[n]) {n--;continue;}\n\t\ta[++n]=use[x[i]]?use[x[i]]:(use[x[i]]=++cnt);\n\t}\n\t\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=i+1;j<=n;j++) {\n\t\t\tif(a[i]==a[j]) vec.push_back(Pair(i,j));\n\t\t}\n\t}\n\tsort(vec.begin(),vec.end());\n}\n\nvoid dfs(int x,int s) {\n\tif(x==vec.size()) {\n\t\tans=min(ans,s);\n\t\treturn ;\n\t}\n\tif(s>=ans) return ;\n\tint s1=query(bstup,bstdown,vec[x].x,vec[x].y);\n\tbstup.add(vec[x].y,1);\n\tdfs(x+1,s+s1);\n\tbstup.add(vec[x].y,-1);\n\t\n\tint s2=query(bstdown,bstup,vec[x].x,vec[x].y);\n\tbstdown.add(vec[x].y,1);\n\tdfs(x+1,s+s2);\n\tbstdown.add(vec[x].y,-1);\n}\n\nint main() {\n\tint T;\n\tread(T);\n\twhile(T--) {\n\t\tinit();\n\t\treadin();\n\t\tdfs(0,0);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1544968334,
        "uid": 13117,
        "name": "Ouaoan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4005 \u3010\u5c0f Y \u548c\u5730\u94c1\u3011"
    }
]