[
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3748)\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd**\u6362\u6839dp**\u7684\u505a\u6cd5\uff0c\u53ef\u80fd\u6bd4\u524d\u9762\u90a3\u4e9b\u9898\u89e3\u91cc\u9762\u8bb2\u7684\u505a\u6cd5\u5bb9\u6613\u5b9e\u73b0\u4e14\u4e0d\u96be\u8c03\u8bd5\uff1f\uff08\u96fe\n\n> \u9898\u610f\uff1a\u6c42\u6811\u4e0a\u4e24\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\uff08\u6307\u7684\u662f\u6ca1\u6709\u8fb9\u91cd\u5408\uff09\uff0c\u4f7f\u5f97\u5220\u53bb\u8def\u5f84\u4e0a\u7684\u8fb9\u548c\u70b9\u540e\u5269\u4e0b\u7684\u8054\u901a\u5757\u6570\u91cf\u5c3d\u53ef\u80fd\u591a\u3002\n\n\u4e0d\u59a8\u6309\u6811\u4e0a\u4e24\u6761\u8def\u5f84\u7684\u76f8\u5bf9\u60c5\u51b5\u6765\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n#### \u60c5\u51b5\u4e00\uff1a\u4e24\u6761\u8def\u5f84\u5b58\u5728\u70b9\u91cd\u5408\u3002\n\n\u56e0\u4e3a\u6811\u4e0a\u4e24\u4e2a\u70b9\u4e4b\u95f4\u53ea\u6709\u4e00\u6761\u8def\u5f84\uff0c\u6240\u4ee5\u5982\u679c\u6709\u70b9\u91cd\u5408\uff0c\u90a3\u4e48**\u4e00\u5b9a\u53ea\u4f1a\u6709\u4e00\u4e2a\u70b9\u662f\u516c\u5171\u70b9**\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e00\u4e2a\u70b9\u5355\u72ec\u62ce\u51fa\u6765\u4f5c\u4e3a\u6839\uff0c\u4e0d\u96be\u53d1\u73b0\u6240\u8c13\u7684\u4e24\u6761\u8def\u5f84\u53ef\u4ee5\u89c6\u4e3a $1\\sim 4$ \u6761\u94fe\uff0c\u5176\u4e2d\u94fe\u7684\u4e00\u7aef\u5c31\u662f\u6839\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u4ece\u6839\u8fde\u51fa\u53bb\u7684**\u524d\u56db\u5927\u94fe**\u5373\u53ef\u5f97\u5230\u8fd9\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u3002\n\n#### \u60c5\u51b5\u4e8c\uff1a\u4e24\u6761\u8def\u5f84\u4e0d\u5b58\u5728\u70b9\u91cd\u5408\u3002\n\n\u4e0d\u96be\u53d1\u73b0**\u5fc5\u7136\u5b58\u5728\u4e00\u68f5\u5b50\u6811\u4f7f\u5f97\u4e00\u6761\u8def\u5f84\u5b8c\u5168\u5728\u8fd9\u68f5\u5b50\u6811\u5185\u800c\u53e6\u5916\u4e00\u6761\u8def\u5f84\u548c\u8fd9\u4e2a\u5b50\u6811\u6ca1\u6709\u4ea4\u70b9**\uff0c\u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u68f5\u5b50\u6811\uff0c**\u89c4\u5b9a\u8fd9\u68f5\u5b50\u6811\u5185\u7684\u8def\u5f84\u7ecf\u8fc7\u5b50\u6811\u7684\u6839**\uff0c\u7136\u540e\u627e\u5230\u5728\u8fd9\u68f5\u5b50\u6811\u5185\u7684\u6700\u4f18\u8def\u5f84\u548c\u5b50\u6811\u5916\u7684\u6700\u4f18\u8def\u5f84\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u4e0a\u9762\u5217\u51fa\u6765\u6240\u8981\u6c42\u7684\u90fd\u53ef\u4ee5\u901a\u8fc7\u6362\u6839\u8f83\u5bb9\u6613\u5730\u6c42\u51fa\u3002\n\n\u72b6\u6001\u5982\u4e0b\uff08\u4ee5\u4e0b\u6240\u8bf4\u7684\u8def\u5f84\u53ca\u94fe\u90fd\u53ef\u4ee5\u9000\u5316\u4e3a\u5355\u70b9\uff09\uff1a\n\n\u8bbe $mx(u,k)$ \u8868\u793a\u8003\u8651\u5728\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u5bf9\u4e8e\u6240\u6709 $u$ \u7684\u513f\u5b50 $v$ \u4e2d $dp(v)$ \u7b2c $k+1$ \u5927\u7684\u503c\u3002\n\n\u8bbe $cnt(u)$ \u8868\u793a $u$ \u7684\u513f\u5b50\u6570\u91cf\u3002\n\n\u8bbe $dp(u)$ \u8868\u793a\u8003\u8651\u5728\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u53bb\u6389\u4ee5 $u$ \u4e3a\u4e00\u4e2a\u7aef\u70b9\u7684\u94fe\u540e\u5269\u4e0b\u7684\u8054\u901a\u5757\u6570\u91cf\u7684\u6700\u5927\u503c\u3002\n\n\u8bbe $fp(u)$ \u8868\u793a\u8003\u8651\u5728\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u53bb\u6389\u7ecf\u8fc7 $u$ \u70b9\u7684\u67d0\u6761\u8def\u5f84\u540e\u5269\u4e0b\u7684\u8054\u901a\u5757\u6570\u91cf\u7684\u6700\u5927\u503c\u3002\n\n\u8bbe $f(u)$ \u8868\u793a\u8003\u8651\u5728\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u53bb\u6389\u67d0\u6761\u8def\u5f84\u540e\u5269\u4e0b\u7684\u8054\u901a\u5757\u6570\u91cf\u7684\u6700\u5927\u503c\u3002\n\n\u8f6c\u79fb\u5982\u4e0b\uff1a\n\n$$\ndp(u)=\\max(cnt(u),mx(u,0)+cnt(u)-1)\n$$\n\n$$\nfp(u)=\\max(dp(u),mx(u,0)+mx(u,1)+cnt(u)-2)\n$$\n\n\u53d1\u73b0 $f(u)$ \u53ef\u80fd\u4e0d\u592a\u597d\u8f6c\u79fb\uff0c\u56e0\u4e3a\u5bf9\u4e8e $u$ \u7684\u513f\u5b50 $v$ \u91cc\u9762\u7684\u4e00\u6761\u8def\u5f84\uff0c\u5982\u679c\u662f\u7ecf\u8fc7 $v$ \u70b9\u7684\u8bdd\uff0c\u53ea\u8003\u8651\u4ee5 $v$ \u4e3a\u6839\u7684\u5b50\u6811\u662f\u4e0d\u4f1a\u8003\u8651\u5230 $v$ \u5916\u9762\u8fde\u7740\u7684 $u$ \u6240\u5728\u7684\u8fde\u901a\u5757\u9020\u6210\u7684\u8d21\u732e\uff0c\u800c\u5982\u679c\u4e0d\u7ecf\u8fc7 $v$ \u70b9\u7684\u8bdd\uff0c $u$ \u6240\u5728\u7684\u8fde\u901a\u5757\u662f\u4e0d\u4f1a\u9020\u6210\u8d21\u732e\u7684\uff0c\u6240\u4ee5\u8003\u8651\u591a\u8bb0\u5f55\u70b9\u4e1c\u897f\uff1a\n\n\u8bbe $f_0(u)$ \u8868\u793a\u8003\u8651\u5728\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u53bb\u6389\u67d0\u6761\u8def\u5f84\u540e\u5269\u4e0b\u7684\u8054\u901a\u5757\u6570\u91cf\u7684\u6700\u5927\u503c\uff1b\u8bbe $f_1(u)$ \u8868\u793a**\u8ba4\u4e3a\u5220\u53bb $u$ \u70b9\u540e $u$ \u5916\u9762\u8fd8\u6709\u4e00\u4e2a\u8fde\u901a\u5757**\uff0c\u53bb\u6389\u67d0\u6761\u8def\u5f84\u540e\u5269\u4e0b\u7684\u8fde\u901a\u5757\u6570\u91cf\u7684\u6700\u5927\u503c\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u5047\u8bbe $fmx(u)$ \u8868\u793a\u5bf9\u4e8e\u6240\u6709 $u$ \u7684\u513f\u5b50 $v$ \u4e2d $f_1(v)$ \u7684\u6700\u5927\u503c\u3002\n\n\u8f6c\u79fb\u5c31\u6bd4\u8f83\u5bb9\u6613\u4e86\uff1a\n\n$$\nf_0(u)=\\max(fmx(u),fp(u))\n$$\n\n$$\nf_1(u)=\\max(fmx(u),fp(u)+1)\n$$\n\n\u597d\u7684\uff0c\u770b\u770b\u6211\u4eec\u8f6c\u79fb\u7528\u5230\u4e86\u54ea\u4e9b\u4e1c\u897f\uff1a $fmx(u)$ \u3001 $mx(u,0)$ \u4ee5\u53ca $mx(u,0)+mx(u,1)$ \u3002\n\n\u663e\u7136\uff0c\u6362\u6839\u7684\u65f6\u5019\u53ea\u8981\u8bb0\u5f55\uff1a $fmx(u)$ \u7684\u6700\u5927\u6b21\u5927\uff0c $mx(u,0)$ \u7684\u6700\u5927\u6b21\u5927\u6b21\u6b21\u5927\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5176\u5b9e\u6211\u4eec\u66f4\u65b0\u7b54\u6848\u7684\u65f6\u5019\u8981\u7528\u5230 $mx(u,0\\sim 3)$ \uff0c\u6240\u4ee5 $mx(u,0)$ \u5176\u5b9e\u8981\u8bb0\u5f55\u524d\u56db\u5927\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u5199\u4ee3\u7801\u4e86\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define inf 500000000\nusing namespace std;\n#define ch() getchar()\n#define pc(x) putchar(x)\ntemplate<typename T>inline void read(T&x){\n\tint f;char c;\n\tfor(f=1,c=ch();c<'0'||c>'9';c=ch())if(c=='-')f=-f;\n\tfor(x=0;c<='9'&&c>='0';c=ch())x=x*10+(c&15);x*=f;\n}\ntemplate<typename T>inline void write(T x){\n\tstatic char q[64];int cnt=0;\n\tif(!x)pc('0');if(x<0)pc('-'),x=-x;\n\twhile(x)q[cnt++]=x%10+'0',x/=10;\n\twhile(cnt--)pc(q[cnt]);\n}\nconst int maxn=100005;\nstruct Edge{\n\tint v,nt;\n\tEdge(int v=0,int nt=0):\n\t\tv(v),nt(nt){}\n}e[maxn*2];\nint hd[maxn],num;\nvoid qwq(int u,int v){\n\te[++num]=Edge(v,hd[u]);hd[u]=num;\n}\nint mx[maxn][4],fmx[maxn][2];\nvoid change(int x,int val){\n\tfor(int i=0;i<4;++i)\n\t\tif(mx[x][i]<val)\n\t\t\tmx[x][i]^=val^=mx[x][i]^=val;\n}\nvoid fchange(int x,int val){\n\tfor(int i=0;i<2;++i)\n\t\tif(fmx[x][i]<val)\n\t\t\tfmx[x][i]^=val^=fmx[x][i]^=val;\n}\nint dp[maxn],f[maxn][2],fp[maxn];\nvoid dfs0(int u,int fa){\n\tint cnt=0;\n\tmx[u][0]=mx[u][1]=mx[u][2]=mx[u][3]=-inf;\n\tdp[u]=f[u][0]=f[u][1]=fmx[u][0]=fmx[u][1]=-inf;\n\tfor(int i=hd[u];i;i=e[i].nt){\n\t\tint v=e[i].v;\n\t\tif(v==fa)continue;\n\t\tdfs0(v,u);++cnt;\n\t\tchange(u,dp[v]);\n\t\tfchange(u,f[v][1]);\n\t}\n\tdp[u]=max(cnt,mx[u][0]+cnt-1);\n\tfp[u]=max(dp[u],mx[u][0]+mx[u][1]+cnt-2);\n\tf[u][0]=max(fmx[u][0],fp[u]);\n\tf[u][1]=max(fmx[u][0],fp[u]+1);\n}\nint ans,d[maxn];\nvoid dfs1(int u,int fa){\n\tint sm=d[u];ans=max(ans,d[u]);\n\tfor(int i=0;i<4;++i)\n\t\tans=max(ans,sm+=mx[u][i]-1);\n\tint cnt=d[u]-1;\n\tfor(int i=hd[u];i;i=e[i].nt){\n\t\tint v=e[i].v;\n\t\tif(v==fa)continue;\n\t\tint t=-1;\n\t\tfor(int j=0;j<4;++j)\n\t\t\tif(mx[u][j]==dp[v])\n\t\t\t\tt=j;\n\t\tint mx0=mx[u][0],mx1=mx[u][0]+mx[u][1],mx2=fmx[u][0];\n\t\tif(t==0)mx0=mx[u][1],mx1=mx[u][1]+mx[u][2];\n\t\telse if(t==1)mx1=mx[u][0]+mx[u][2];\n\t\tif(fmx[u][0]==f[v][1])mx2=fmx[u][1];\n\t\tdp[u]=max(cnt,mx0+cnt-1);\n\t\tfp[u]=max(dp[u],mx1+cnt-2);\n\t\tf[u][0]=max(mx2,fp[u]);\n\t\tf[u][1]=max(mx2,fp[u]+1);\n\t\tans=max(ans,f[u][0]+fp[v]);\n\t\tchange(v,dp[u]);fchange(v,f[u][1]);\n\t\tdfs1(v,u);\n\t}\n}\nint main(){\n\tint T,x;\n\tread(T),read(x);\n\twhile(T--){\n\t\tint n,tmp;\n\t\tread(n);\n\t\tfor(int i=0;i<x;++i)\n\t\t\tread(tmp),read(tmp);\n\t\tnum=0;\n\t\tfor(int i=1;i<=n;++i)\n\t\t\thd[i]=d[i]=0;\n\t\tfor(int i=1;i<n;++i){\n\t\t\tint u,v;\n\t\t\tread(u),read(v);\n\t\t\tqwq(u,v);qwq(v,u);\n\t\t\t++d[u],++d[v];\n\t\t}\n\t\tans=0;\n\t\tdfs0(1,0);dfs1(1,0);\n\t\twrite(ans),pc('\\n');\n\t}\n\treturn 0;\n}\n```\n\n~~\u6210\u529f\u964d\u4f4e\u4e86\u601d\u7ef4\u53ca\u8ba8\u8bba\u96be\u5ea6\uff0c\u4e3a\u4f55\u4e0d\u5199\u6362\u6839\u5462\uff1f~~",
        "postTime": 1591343088,
        "uid": 230249,
        "name": "xiaolilsq",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 [\u516d\u7701\u8054\u80032017]\u6467\u6bc1\u201c\u6811\u72b6\u56fe\u201d"
    },
    {
        "content": " _(\u7cbe\u795e\u6c61\u67d3\u8b66\u544a\uff1a\u8fd9\u9053\u9898\u5e26\u6709\u6781\u5f3a\u7684\u7cbe\u795e\u6c61\u67d3\u7279\u8d28\uff0c\u8bf7\u8c28\u614e\u670d\u7528)_ \n \n  _(\u5982\u679c\u9700\u8981\u5bf9\u62cd\u652f\u6301\u76f4\u63a5\u770b\u6700\u4e0b\u8fb9\uff0c\u672c\u9898\u89e3\u8d60\u9001\u5bf9\u62cd\u5668)_ \n# \u6811\u5f62DP\n\n## \u4e00\u53e5\u8bdd\u9898\u610f\n\n\u6c42\u6811\u4e0a\u4e24\u8fb9\u4e0d\u91cd\u5408\u8def\u5f84\uff0c\u4f7f\u5f97\u5220\u53bb\u8def\u5f84\u4e0a\u6240\u6709\u7684\u70b9\u548c\u8fb9\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u68ee\u6797\u8054\u901a\u5757\u5c3d\u53ef\u80fd\u591a\uff0c\u53e6\u5916\uff0c\u5982\u8fc7\u6211\u4eec\u53ef\u4ee5\u89e3\u51b3x=0\u7684\u60c5\u51b5\uff0c\u5c31\u53ef\u4ee5AC\u672c\u9898\uff0c\u56e0\u4e3a\u53e6\u5916\u4e24\u4e2ax\u90fd\u662f\u5176\u4ed6\u60c5\u51b5(\u5176\u5b9e\u5c31\u662f\u8003\u8bd5\u7684\u65f6\u5019\u65b9\u4fbf\u529d\u9000\uff0c\u76f4\u63a5\u544a\u8bc9\u4f60AC\u672c\u9898\u6027\u4ef7\u6bd4\u6709\u591a\u4f4e)\n\n### 1.\u8def\u5f84\u7684\u62c6\u5206\n\n\u770b\u8d77\u6765\u8981\u8ba9\u6211\u4eecdp\u8def\u5f84\uff0c\u8fd8\u8bb0\u7684\u4e00\u822c\u7684\u6811\u5f62dp\u662f\u600e\u4e48\u505a\u7684\u5417\uff1f\uff0c\u628a\u5f85\u6c42\u7684\u8def\u5f84\u53d8\u6210\n\u4e00\u4e9b\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u7684\u57fa\u672c\u56fe\u5f62\uff0c\u901a\u8fc7dfs\u679a\u4e3elca\u7684\u8fc7\u7a0b\uff0c\u679a\u4e3e\u8fd9\u4e9b\u57fa\u672c\u56fe\u5f62\u7684\u5408\u5e76\uff0c\u4ece\u800c\u8fbe\u5230\u4e86\u679a\u4e3e\u6bcf\u4e2a\u56fe\u5f62\u7684\u76ee\u7684\n\n\u4f46\u95ee\u9898\u662f\u8fd9\u9053\u9898\u662f**\u4e24\u6761\u4e92\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84**\uff0c\u5e73\u5e38\u6211\u4eec\u505a\u7684\u90fd\u662f\u53ef\u7231\u7684\u4e00\u6761\u8def\u5f84\uff0c\u53ea\u9700dp\u4e00\u4e2a\u4e00\u5b57\u5f62\u8def\u5f84\u5c31\u597d\u4e86\uff0c\u7136\u540e\u679a\u4e3elca\u7684\u65f6\u5019\u5408\u5e76\u51fa\u6240\u6709\u7684V\u5b57\u5f62\u8def\u5f84\u3002\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u91c7\u53d6\u7c7b\u4f3c\u7684\u62c6\u5206\u624b\u6bb5\uff0c**\u679a\u4e3e\u8def\u5f84\u7684\u6240\u6709\u53ef\u80fd\u60c5\u51b5\uff0c\u62c6\u5206\u5904\u7406**\n\n#### \u4e00\u4e9b\u5b9a\u4e49\n\n\u5728\u60a8\u9605\u8bfb\u672c\u9898\u89e3\u7684\u5269\u4f59\u90e8\u5206\u65f6\uff0c\u4e0d\u59a8\u8ba9\u6211\u4eec\u6765\u5b9a\u4e49\u4e00\u4e9b\u540d\u8bcd\n\n**\u4e00\u5b57\u5f62\u8def\u5f84**\u662f\u6307\u4eceu\u5230v\u7684\u4e00\u6761\u8def\u5f84\uff0c\u5176\u4e2du\u662fv\u7684\u7956\u5148\u6216\u8005v\u662fu\u7684\u7956\u5148\n\n**V\u5b57\u5f62\u8def\u5f84\u662f\u6307**\u6811\u4e0a\u7684**\u4efb\u610f\u8def\u5f84**\uff0c\u53ef\u4ee5\u9000\u5316\u4e3a\u4e00\u5b57\u578b\u8def\u5f84\uff0cV\u5b57\u5f62\u8def\u5f84\u7684\u9876\u70b9\uff0c\u662f\u6307u\uff0cv\u5728\u6811\u4e0a\u7684lca\n\n**\u4e00\u4e2a\u70b9**\u5728\u672c\u9898\u4e2d\u88ab\u89c6\u4e3a**\u9000\u5316**\u7684\u4e00\u79cd\u8def\u5f84\n\n##### \u4e24\u6761\u8def\u5f84\u7684\u6240\u6709\u53ef\u80fd\u60c5\u51b5\n\n\u4e0b\u9762\u8ba9\u6211\u4eec\u6765\u624b\u52a8\u679a\u4e3e\u8def\u5f84\u7684\u6240\u6709\u53ef\u80fd\u60c5\u51b5\n\n _(\u8fd9\u624d\u662f\u8fd9\u9053\u9898\u7684\u7cbe\u9ad3\uff0c\u5145\u65a5\u7740\u5404\u79cd\u9000\u5316\u4e0e\u7279\u4f8b)_ \n\n###### Case 1:\u53ccV\u4e0d\u4ea4\n\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u6811\u4e0a\u6709\u4e24\u6761\u8def\u5f84\uff0c\u5e76\u4e14\uff0c\u4ed6\u4eec\u7684V\u5b57\u5f62\u8def\u5f84\u9876\u70b9\u4e4b\u95f4\u4e0d\u662f\u7956\u5148\u5173\u7cfb\n\u6211\u4eec\u53d1\u73b0\u8fd9\u79cd\u60c5\u51b5\u5341\u5206\u7684trival\uff0c\u53ef\u4ee5\u62c6\u5206\u4e3a\u4e24\u6761V\u5b57\u5f62\u8def\u5f84\u6765\u505a\n\n###### Case2\uff1a\u53ccV\u5d4c\u5957\n\n\u548cCase1\u6709\u4e9b\u7c7b\u4f3c\uff0c\u4e5f\u6709\u4e24\u6761\u6811\u4e0a\u7684V\u578b\u8def\u5f84\uff0c\u4f46Case2\u8981\u6c42\u6811\u4e0a\u7684\u4e24\u6761V\u578b\u8def\u5f84\u9876\u70b9\u5fc5\u987b\u4e3a\u7956\u5148\u5173\u7cfb\uff0c\u4f1a\u53d1\u73b0\u6211\u4eec\u5e76\u4e0d\u80fd\u7b80\u5355\u7684\u62c6\u5206\u4ed6\uff0c\u60c5\u51b5\u5f00\u59cb\u53d8\u5f97\u590d\u6742\n\n###### Case3\uff1a\u4e09\u53c9/\u4e8c\u53c9\n\n\u8fd9\u65f6\u6811\u4e0a\u7684\u4e24\u6761\u8def\u5f84\u70b9\u76f8\u4ea4\u4e86\uff0c\u6211\u4eec\u53d1\u73b0\u4ed6\u4eec\u6709\u4e00\u4e2a\u91cd\u5408\u7684\u70b9\uff0c\u5e76\u4e14\u6709\u4e00\u8def\u5f62\u6210\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e09\u53c9\u621f\u7684\u5f62\u72b6\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u53d1\u73b0\u5176\u4e2d\u7684\u4e00\u79cd\u8def\u5f84\u5e76\u6ca1\u6709\u51fa\u5934\uff0c\u6b64\u65f6\u5b83\u9000\u5316\u4e3a\u4e00\u4e2a\u4e8c\u53c9\u7684\u5f62\u72b6\u3002\u6b64\u65f6\u60c5\u51b5\u5f00\u59cb\u53d8\u5f97\u8fa3\u624b\u2026\u2026\n\n##### \u5c06\u8def\u5f84\u62c6\u5206\u4e3a\u57fa\u672c\u5f62\u72b6\n\n\u6211\u4eec\u53d1\u73b0\u4f3c\u4e4ecase1\u5341\u5206\u7684\u53ef\u7231\uff0c\u4ed6\u53ef\u4ee5\u5f88\u8f7b\u6613\u7684\u88ab\u62c6\u5206\u4e3a\u4e24\u6761\u4e92\u4e0d\u76f8\u5e72\u7684V\u578b\u8def\u5f84\uff0c\u4f46\u662fcase2\uff0c3\u5c31\u6709\u4e9b\u8fa3\u624b\uff0c\u6b64\u65f6\u6211\u4eec\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n## \u76f4\u63a5\u66b4\u529b\u7684\u62c6\u5206\u5373\u53ef\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u6211\u4eec\u5c06\u8def\u5f84\u7684\u5f62\u72b6\u5212\u5206\u4e3a5\u79cdtype(\u5982\u679c\u771f\u7684\u770b\u4e0d\u61c2\u5b9a\u4e49\u7684\u8bdd\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u56fe)\n\n###### type1\n\ntp1\\[i]\u8868\u793a\uff0c\u5728\u5b50\u6811i\u4e2d\uff0c\u5220\u53bb\u4e00\u6761\u8fc7i\u7684\u4e00\u5b57\u578b\u8def\u5f84\uff0c\u5b50\u6811i\u5206\u88c2\u51fa\u7684\u6700\u5927\u8054\u901a\u5757\u6570\u76ee\u3002\n\n###### type2\n\ntp2\\[i]\u8868\u793a\uff0c\u5728\u5b50\u6811i\u4e2d\u5220\u53bb\u4e00\u6761\u8fc7i\u7684V\u5b57\u578b\u8def\u5f84\uff0c\u5b50\u6811i\u5206\u88c2\u51fa\u6700\u5927\u8054\u901a\u5757\u6570\u76ee\uff0c**\u6211\u4eec\u6ce8\u610f\u5230type2\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a\u4e24\u4e2atype1\u62fc\u8d77\u6765**\n\n###### type3\n\ntp3\\[i]\u8868\u793a\uff0c\u5728\u5b50\u6811i\u4e2d\u5220\u53bb\u4e00\u6761**\u4e0d\u7ecf\u8fc7i\u7684\u8def\u5f84**\uff0c\u5b50\u6811i**\u589e\u52a0**\u7684\u6700\u5927\u8054\u901a\u5757\u6570\u76ee\uff0c(\u6ce8\u610f\uff0c\u5c3d\u7ba1type3\u7684\u5b9a\u4e49\u5341\u5206\u7684\u522b\u626d\uff0c\u4f46\u662f\u4f1a\u7ed9\u8f6c\u79fb\u7684**\u6b63\u786e\u6027**\u5e26\u6765\u4fdd\u969c(\u5e76\u6ca1\u8bf4\u5b83\u4f1a\u4f7f\u8f6c\u79fb\u7b80\u6613)\uff0c\u4e8b\u5b9e\u4e0a\u5b83\u957f\u7684\u592a\u50cftype2\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u5fc5\u987b\u4e25\u683c\u533a\u5206\u8fd9\u4e24\u4e2a\u72b6\u6001\uff0c\u5426\u5219\u8f6c\u79fb\u5c06\u4f1a\u4e71\u4e03\u516b\u7cdf)(\u8fd9\u91cc\u8981\u65f6\u523b\u8bb0\u4f4f\uff0c\u53ea\u6709type3\u662f\u589e\u91cf\u5b9a\u4e49\u7684\uff0c\u8fd9\u91cc\u6307\u7684\u662f\u589e\u52a0\u7684\u91cf\uff0c\u6bd4\u5982\u5220\u53bb\u4e86\u4e00\u4e2a\u8def\u5f84\uff0c\u4ea7\u751f\u4e24\u4e2a\u8054\u901a\u5757\uff0c\u6b64\u65f6type3=1\uff0c\u56e0\u4e3a\u53ea\u589e\u52a0\u4e86\u4e00\u4e2a)\n\n\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u6ce8\u610f\u5230**type3\u7684\u5f62\u72b6\u548ctype2**\u4e00\u819c**\u4e00\u6837**\uff0c\u53ea\u662f\u4f4d\u7f6e\u4e0d\u540c\n\n###### type4\n\ntp4\\[i]\u8868\u793a\uff0c\u5728\u5b50\u6811i\u4e2d\u5220\u53bb\u4e00\u6761**\u7ecf\u8fc7i\u7684\u4e00\u5b57\u578b\u8def\u5f84**\uff0c**\u53ef\u4ee5**\u518d\u5220\u53bb\u4e00\u6761\u4e0d\u7ecf\u8fc7i\u7684V\u5b57\u8def\u5f84\uff0c\u6b64\u65f6\u5b50\u6811i\u5206\u88c2\u51fa\u7684\u6700\u5927\u8054\u901a\u5757\u4e2a\u6570\uff0c\ntp4\u7684\u6784\u6210\u6781\u5176\u7684\u590d\u6742\uff0c\u4f46\u7684\u786e\u53ef\u4ee5\u8f6c\u79fb\uff0c\u5f85\u4f1a\u518d\u8bf4\n\n###### type5\n\ntp5\\[i]\u8868\u793a\uff0c\u5728\u5b50\u6811i\u4e2d\u5220\u53bb\u4e00\u6761\u8fc7i\u7684\u4e09\u53c9\u8def\u5f84/\u4e8c\u53c9\u8def\u5f84/\u4e00\u53c9\u8def\u5f84\uff0ci\u5206\u88c2\u51fa\u7684\u6700\u5927\u8054\u901a\u5757\u4e2a\u6570\uff0ctp5\u7684\u6784\u6210\u76f8\u5bf9\u7b80\u5355(\u76f8\u5bf9tp4\u800c\u8a00\uff0c\u5176\u5b9e\u7b80\u5355\u4e0d\u5230\u54ea\u91cc\u53bb)\n\n###### \u56fe\u793a\n\n![](https://cdn.luogu.com.cn/upload/pic/15153.png)\n\n\n##### \u57fa\u672c\u5f62\u72b6\u95f4\u7684\u8f6c\u79fb\n\n\u4e0b\u9762\u8bb0\u70b9i\u7684\u5b69\u5b50\u4e2a\u6570\u4e3as\uff0c\u5b69\u5b50\u4e2dtype1\u7684\u6700\u5927\u503c\u4e3ar1t1\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n###### tp1\n\n\u6211\u4eec\u53d1\u73b0tp1\u662f\u975e\u5e38\u53ef\u7231\u7684\uff0c\u5b83\u7684\u6765\u6e90\u6709\u4e24\u79cd\n\n1.\u81ea\u5df1\u5b69\u5b50\u4e2d\u7684tp1\u6700\u5927\u503c\uff0c\u503c\u4e3ar1t1+s-1\n\n2.\u5220\u53bb\u81ea\u5df1\u8fd9\u4e2a\u70b9(\u9000\u5316\u60c5\u51b5)\uff0c\u503c\u4e3as\n\n###### tp2\n\n\u6211\u4eec\u53d1\u73b0tp2\u5176\u5b9e\u4e5f\u4e0d\u9519\uff0c\u6765\u6e90\u4e5f\u662f\u6709\u4e24\u79cd\n\n1.\u81ea\u5df1\u5b69\u5b50\u7684tp1\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u62fc\u8d77\u6765\uff0c\u503c\u4e3ar1t1+r2t1+s-2\n\n2.\u81ea\u5df1\u7684tp1(\u9000\u5316\u60c5\u51b5)\uff0c\u503c\u4e3atp1\n\n###### tp3\n\ntp3\u7684\u9b3c\u755c\u5b9a\u4e49\u51b3\u5b9a\u4e86tp3\u7684\u8f6c\u79fb\u4f1a\u975e\u5e38\u7b80\u5355,\n\n\u5982\u679c\u6700\u5927\u7684\u8def\u5f84\u662f\u5b69\u5b50\u4e2d\u7684tp3,\u90a3\u4e48\u589e\u91cf\u8fd8\u662f\u589e\u91cf\uff0c\u5982\u679c\u6700\u5927\u7684\u8def\u5f84\u662ftp2,\u90a3\u4e48\u7531\u4e8etp2\u8981\u6c42\u5220\u6839\uff0c\u6240\u4ee5tp2\u5206\u88c2\u7684\u5b50\u6811\u5168\u90e8\u662f\u589e\u91cf\uff0c\u56e0\u6b64\uff0ctp3\u7684\u8f6c\u79fb\u65b9\u7a0b\u4e3a\n\nmax(r1t3,r1t2)\n\n###### tp4\n\n\u4e0b\u9762\u6765\u770b\u6709\u8da3\u7684tp4\uff0ctp4\u7684\u6765\u6e90\u5982\u4e0b\n\n1.\u9009\u62e9\u5b69\u5b50\u4e2d\u7684\u4e00\u4e2atp1\u548c\u4e00\u4e2atp3\uff0c\u518d\u5220\u53bb\u81ea\u5df1\uff0c\u5982\u679ctp1\u7684\u6700\u5927\u503c\u548ctp3\u7684\u6700\u5927\u503c\u4e0d\u662f\u4e00\u4e2a\uff0c\u5f53\u7136\u597d\u8bf4\uff0c\u5426\u5219\uff0c\u5c1d\u8bd5\u7528\u5176\u4e2d\u7684\u4e00\u4e2a\u6b21\u5927\u503c\u66ff\u6362tp1\u6216\u8005tp3\uff0c\u4e24\u79cdtp\u5404\u8bd5\u4e00\u904d,\u8f6c\u79fb\u7684\u503c\u4e3atp1+tp3+s-1\u56e0\u4e3atp3\u662f\u589e\u91cf\u5b9a\u4e49\uff0c\u56e0\u6b64\u6211\u4eec\u8fd9\u91cc\u53ea\u7528\u51cf\u53bbtp1\u9700\u8981\u51cf\u76841\n\n2.\u9009\u62e9\u5b69\u5b50\u4e2d\u7684\u4e00\u4e2atp1\u548c\u4e00\u4e2atp2\uff0c\u518d\u5220\u53bb\u81ea\u5df1\uff0c\u8fd8\u662f\u548ctp3\u4e00\u6837\u7684\u8f6c\u79fb\u903b\u8f91\uff0c\u53ea\u662f\u8fd9\u91cc\u9700\u8981-2\uff0c\u56e0\u4e3atp2\u4e0d\u662f\u589e\u91cf\u5b9a\u4e49\n\n3.\u5220\u53bb\u81ea\u5df1\uff0c\u548c\u5b69\u5b50\u4e2d\u7684\u4e00\u4e2atp3(\u9000\u5316\u60c5\u51b5),\u6b64\u65f6\u56e0\u4e3atp3\u7684\u589e\u91cf\u5b9a\u4e49\uff0c\u503cr1t3+s\n\n4.\u9009\u62e9\u5b69\u5b50\u4e2d\u7684\u4e00\u4e2atp4\u5e76\u5220\u53bb\u81ea\u5df1\uff0c\u503c\u4e3ar1t4+s-1\n\n###### tp5\n\ntp5\u7684\u8f6c\u79fb\u76f8\u5bf9\u7b80\u5355\uff0c\u5b83\u7684\u6765\u6e90\u5982\u4e0b\n\n1.\u5b69\u5b50\u4e2d\u76843\u6761\u94fe\uff0c\u5e76\u5220\u53bb\u81ea\u5df1\uff0c\u503c\u4e3ar1t1+r2t1+r3t1+s-3\n\n2.\u5b69\u5b50\u4e2d\u7684tp5,\u5e76\u5220\u53bb\u81ea\u5df1\uff0c\u503c\u4e3ar1t5+s-1\n\n3.\u81ea\u5df1\u7684tp2(\u4e8c\u53c9\u9000\u5316\u60c5\u51b5),\u503c\u4e3atp2\\[i]\n\n\u770b\u8d77\u6765\u597d\u50cf\u8f6c\u79fb\u4e0d\u662f\u5f88\u9ebb\u70e6?\n\n\u4e0b\u9762\u8ba9\u6211\u4eec\u6765\u8003\u8651\u66f4\u52a0\u6709\u8da3\u7684\u5408\u5e76\u60c5\u51b5\n\n### 2.\u8def\u5f84\u7684\u5408\u5e76\n\n#### \u5408\u5e76\u8def\u5f84\u7684\u6240\u6709\u53ef\u80fd\u60c5\u51b5\n\n##### \u4e00\u822c\u60c5\u51b5\uff08\u6ca1\u9519\u8fd8\u6709\u5404\u79cd\u6709(e)\u8da3\uff08xin\uff09\u7684\u7279\u4f8b\uff09\n\n\u4ee5\u4e0b\u5747\u5047\u8bbe\u6211\u4eecdfs\u5230\u4e86i\uff0c\u6b63\u5728\u679a\u4e3ei\u4e3alca\u7684\u5404\u79cd\u60c5\u51b5\n\n###### case 1\n\n~~\u6211\u4eec\u53d1\u73b0(\u600e\u4e48\u8001\u662f\u53d1\u73b0\uff1f)~~\u6211\u4eec\u89c2\u5bdf\u5f97\u5230\uff0c\u53ccV\u4e0d\u4ea4\u53ef\u4ee5\u62c6\u6210tp3,tp3\u548c,tp2,tp2,\u4ee5\u53catp3,tp2\n\n\u5982\u679c\u662f\u7eaf\u7cb9\u7684tp2\u6216\u8005tp3\u9009\u53d6\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u5c31\u53ef\u4ee5\u4e86\n\n\u5982\u679ctp2,tp3\u6df7\u5408\u9009\u7684\u8bdd\uff0c\u8003\u8651\u4e24\u79cd\u7c7b\u578b\u7684\u6700\u5927\u503c\u662f\u4e0d\u662f\u4e00\u4e2a\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u7684\u8bdd\uff0c\u8fd8\u662f\u5c1d\u8bd5\u7528\u5176\u4e2d\u4e00\u79cd\u7684\u6b21\u5927\u503c\u53bb\u66ff\u6362tp2\u6216\u8005tp3\uff0c\u4e24\u79cd\u7c7b\u578b\u5404\u81ea\u5c1d\u8bd5\u4e00\u904d\n\n\u5982\u679c\u5b69\u5b50\u53ea\u6709\u4e00\u4e2a\u7684\u8bdd\uff0c\u6211\u4eec\u5728tp3\u548ctp2\u4e2d\u9009\u4e00\u4e2a\n\n\u7531\u4e8ei\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u4f1a\u88ab\u5220\uff0c\u6700\u540e\u8981+1\n\n###### case 2\n\n\u6211\u4eec\u89c2\u5bdf\u5f97\u5230\uff0c\u53ccV\u5d4c\u5957\u6709\u7740\u4e00\u5806\u8fa3\u624b\u7684\u7279\u4f8b\uff0c\u5728\u6b64\u6211\u4eec\u8003\u8651\u4e00\u822c\u60c5\u51b5\uff0c\u4e00\u822c\u6765\u8bb2\uff0c\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u628a\u4e00\u4e2a\u53ccV\u5d4c\u5957\u62c6\u6210\u4e00\u4e2atp1\uff0c\u548c\u4e00\u4e2atp4\u7684\n\n\u8fd8\u662f\u8003\u8651\u5b69\u5b50\u91cc\u4e24\u79cd\u7c7b\u578b\u7684\u6700\u5927\u503c\u662f\u4e0d\u662f\u4e00\u4e2a\uff0c\u5982\u679c\u4e0d\u662f\u4e00\u4e2a\u7684\u8bdd\u518d\u597d\u4e0d\u8fc7\uff0c\u4e24\u4e2a\u7684\u6700\u5927\u503c\u6211\u90fd\u8981\uff0c\u9009\u62e9r1t1\u548cr1t4,\u4f46\u662f\u5982\u679c\u662f\u4e00\u4e2a\u7684\u8bdd\u5c1d\u8bd5\u7528\u6b21\u5927\u503c\u66ff\u6362\uff0c\u8fd8\u662f\u4e24\u79cd\u7c7b\u578b\u90fd\u53bb\u8bd5\u4e00\u904d\n\n\u7531\u4e8e\u6b64\u65f6\u5220\u6389\u4e86i\u56e0\u6b64\u6211\u4eec\u8981+\u4e0as-2\uff0c\u6b64\u65f6\u5982\u679ci\u4e0d\u662f\u6839\u7684\u8bdd\u8fd8\u8981+1\n\n\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u53ea\u5e94\u7528tp4\uff0c\u5c31\u50cf\u6837\u4f8b\u4e2d\u7684\u65b9\u6848\uff0c\u7b54\u6848\u4e3ar1t4+s-1+(fa\\[i]!=0)\n\n###### case 3\n\n\u6211\u4eec\u89c2\u5bdf\u5f97\u5230\uff0c\u4e09\u53c9\u548c\u4e8c\u53c9\u90fd\u662f\u53ef\u4ee5\u62c6\u6210\u4e00\u4e2atp1\u548c\u4e00\u4e2atp5\u7684\n\n\u50cfcase2\u4e00\u6837\u8003\u8651\u5b69\u5b50\u91cc\u4e24\u79cd\u7c7b\u578b\u7684\u6700\u5927\u503c\u662f\u5426\u662f\u540c\u4e00\u4e2a\u5b69\u5b50\uff0c\u5982\u679c\u51b2\u7a81\u4f9d\u7136\u5c1d\u8bd5\u6b21\u5927\u503c\u66ff\u6362\u6cd5\uff0c\u4e24\u4e2a\u7c7b\u578b\u90fd\u53bb\u8bd5\u4e00\u904d\n\n\u6b64\u65f6\u5220\u53bbi\uff0c\u8fd8\u662f\u52a0\u4e0as-2,i\u4e0d\u662f\u6839\u989d\u5916+1\n\n\u540ccase2.\u53ef\u4ee5\u53ea\u5e94\u7528tp5.\u7b54\u6848\u4e3ar1t5+s-1+(fa\\[i]!=0)\n\n##### \u53cb\u5584\u7684\u7279\u4f8b\u4eec\n\n~~\u6211\u4eec\u89c2\u5bdf\u5f97\u5230(\u600e\u4e48\u8001\u662f\u89c2\u5bdf\u5f97\u5230?)~~\u6211\u4eec\u5bf9\u62cd\u53d1\u73b0\uff0c\u5b58\u5728\u7740\u4e00\u4e9b\u5341\u5206\u4f18\u79c0\u7684\u7279\u4f8b\u53ef\u4ee5\u5361\u6389\u6211\u4eec\u7684\u4f18(luo)\u7f8e(so)\u7684\u7b97\u6cd5\n\n\u96be\u9053\u6211\u4eec\u8981\u4fee\u6539\u7b97\u6cd5\uff0c\u4f7f\u7684\u5b83\u66f4\u52a0\u4e00\u822c\u5316\uff1f\u5305\u542b\u66f4\u591a\u7684\u60c5\u5f62\uff1f\u66f4\u52a0\u7b80\u6d01\uff0c\u4f18\u7f8e\uff1f\n\n## \u5927\u529b\u7279\u5224\u6389\u5c31\u597d\u4e86\n\n##### Special case 1 \u56db\u53c9\n\n\u9009\u53d6\u6700\u5927\u76844\u6761\u94fe\u5373\u53ef\uff0c\u7b54\u6848\u4e3ar1t1+r2t1+r3t1+r4t1+s-4\n\n##### Special case 2 \u5b8c\u7f8e\u5d4c\u5957\n\n\u6ce8\u610f\u5230\u6211\u4eec\u5bf9case2\u7684\u5212\u5206\u662f\u65e0\u6cd5\u5904\u7406\u5b8c\u7f8e\u5d4c\u5957\u7684\u60c5\u51b5\u7684\uff0c\u5c31\u662f\u8bf4\u4e24\u4e2aV\u578b\u8def\u5f84\u7684\u9876\u70b9\u8fde\u63a5\u8d77\u6765\u7684\u8def\u5f84\u4e0a\uff0c\u4e0d\u5305\u542b\u5176\u4ed6\u7684\u76f4\u7ebf\u8def\u5f84\uff0c\u66f4\u76f4\u767d\u4e00\u70b9\uff0c\u5220\u53bb\u6700\u4e0a\u8fb9V\u578b\u8def\u5f84\u7684\u9876\u70b9\u540e\uff0c\u6574\u4e2a\u8def\u5f84\u5206\u88c2\u4e3a\u4e24\u4e2atp1\u548c\u4e00\u4e2atp3/tp2\u6211\u4eec\u53d1\u73b0\u6b64\u65f6\u6839\u672c\u6ca1\u6cd5\u5206\u6210\u4e00\u4e2atp1\u548c\u4e00\u4e2atp4\u6765\u505a\n\n\u800c\u4e14\uff0c\u66f4\u52a0\u81f4\u547d\u7684\u662f\uff0c\u6211\u4eec\u6b64\u65f6\u8981\u5904\u7406\u7684\u662f\u9009\u62e9\u4e24\u4e2atp1,\u4e00\u4e2atp2/tp3\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5b69\u5b50\u53ea\u80fd\u9009\u62e9\u4e00\u79cd\u5c5e\u6027\uff0c\u73b0\u5728\u8981\u6c42\u6700\u5927\uff0c\u6b64\u65f6\u6211\u4eec\u5c31\u6ca1\u529e\u6cd5\u4f7f\u7528\u521a\u624d\u90a3\u79cd\u5c61\u8bd5\u4e0d\u723d\u7684\u6b21\u5927\u503c\u66ff\u4ee3\u6cd5\u4e86\uff0c\u56e0\u4e3a\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff0c\u5c1d\u8bd5\u7528\u7b2c\u4e09\u5927\u7684tp1\u53bb\u66ff\u6362\uff0c\u5374\u53d1\u73b0\u548ctp3\u51b2\u7a81\uff0c\u5f53\u6211\u4eec\u60f3\u8981\u89e3\u51b3\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u5c34\u5c2c\u7684\u53d1\u73b0tp3\u7684\u6b21\u5927\u503c\u548ctp1\u7684\u6700\u5927\u503c\u91cd\u4e86\u2026\u2026\n\n\u96be\u9053\u6211\u4eec\u7684\u7b97\u6cd5\u771f\u7684\u5904\u7406\u4e0d\u4e86\u8fd9\u79cd\u60c5\u51b5\uff1f\u4e0d\u5982\u6211\u4eec\u6362\u4e2a\u7b97\u6cd5\uff1f\u8fd9\u6837\u6211\u4eec\u7684\u7b97\u6cd5\u4f1a\u66f4\u52a0\u7684\u4f18\u7f8e\uff0c\u7b80\u6d01\uff0c\u660e\u4e86\u2026\u2026\n\n## \u66b4\u529b\u679a\u4e3etp2/tp3\u9009\u8c01\u5373\u53ef\n\n\u5982\u679c\u53d1\u73b0\u5f53\u524d\u679a\u4e3e\u7684\u5b69\u5b50\u548cr1t1/r2t1\u51b2\u7a81\uff0c\u90a3\u4e48\u7528r1t3\u66ff\u6362\uff0c\u663e\u7136\u540c\u4e00\u4e2a\u4e1c\u897f\u4e0d\u53ef\u80fd\u51b2\u7a81\u4e24\u4e2a\u503c\uff0c\u7b54\u6848\u5c31\u662f\u5f53\u524d\u679a\u4e3e\u7684\u503c+r1t1/r2t2+r1t3+s-2+(fa\\[i]!=0)\n\n\u56e0\u4e3a\u8fd8\u662f\u8981\u5220\u53bb\u6839\uff0ctp2/tp3\u4f7f\u7528\u589e\u91cf\u8868\u793a\uff0c\u6240\u4ee5\u53ea\u9700\u51cf\u53bbt1\u7684\u94fe\u5c31\u884c\u4e86\n\n### \u590d\u6742\u5ea6\n\n\u7b97\u6cd5\u590d\u6742\u5ea6**O(N)**,\u4f46\u662f\u6211\u4eec\u8981\u7ef4\u62a4type1\u6700\u5927\u503c\uff0c\u6b21\u5927\u503c\uff0c\u7b2c\u4e09\u5927\u503c\uff0ctype2\u6700\u5927\u503c\uff0c\u6b21\u5927\u503c\uff0ctype3\u6700\u5927\u503c\uff0c\u6b21\u5927\u503c\uff0ctype4\u6700\u5927\u503c\uff0c\u6b21\u5927\u503c\uff0ctype5\u6700\u5927\u503c\uff0c\u6b21\u5927\u503c\uff0c\u4ee5\u53ca\u5404\u4e2atype\u7684\u6700\u5927\u503c\u90fd\u662f\u8c01\uff0c\u5bf9\u4e8etype1\u989d\u5916\u7ef4\u62a4\u4e00\u4e2a\u6b21\u5927\u503c\u548c\u7b2c\u4e09\u5927\u503c\u90fd\u662f\u8c01\uff0c\u56e0\u6b64\u8fd9\u91cc\u7684\u590d\u6742\u5ea6O(N)\u6307\u7684\u662f**\u8017\u65f6\u968f\u7740\u8f93\u5165\u7684\u589e\u52a0\u800c\u7ebf\u6027\u589e\u957f**\uff0c\u6ca1\u6709\u522b\u7684\u610f\u601d\u3002\n\n### \u4e0b\u9762\u662f\u5bf9\u62cd\u5668\n\n\u8fd9\u9053\u9898\u76f4\u63a5\u4f7f\u7528\u4eba\u7c7b\u7684\u601d\u7ef4\u60f3\u7684\u8bdd\uff0c\u5f53\u7136\u5c31\u662f\u4e0a\u9762\u7684**3\u4e2acase5\u4e2atype2\u4e2a\u7279\u4f8b**+\u6570\u4e0d\u6e05\u7684\u8f6c\u79fb\u65b9\u5f0f\u5566~\n\n\u6240\u4ee5\u6211\u4eecAC\u6389\u8fd9\u9053\u9898\u7684\u6b63\u786e\u59ff\u52bf\u5f53\u7136\u662f\u5bf9\u62cd+\u8c03\u8bd5\u5566~\n\n\u4e0b\u9762\u9644\u8d60\u5bf9\u62cd\u5668\u4e00\u7ec4~(\u7528\u7684\u65f6\u5019\u65b0\u5efa\u4e00\u4e2aroot\u548cseed\u6587\u4ef6\uff0croot\u5b58\u6570\u636e\u8303\u56f4\uff0cseed\u5b58\u521d\u59cb\u968f\u673a\u79cd\u5b50)\n\nChecker\n\n```c\n#include<cstdlib>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nint ans1;int ans2;int t;\nint main()\n{\n    printf(\"\u5bf9\u62cd\u4e2d\u2026\u2026\\n\");\n    while(ans1==ans2)\n    {\n        t++;\n        system(\"maker.exe\");\n        system(\"runner.exe\");\n        freopen(\"run.out\",\"r\",stdin);\n        scanf(\"%d\",&ans1);\n        fclose(stdin);\n        system(\"std.exe\");\n        freopen(\"std.out\",\"r\",stdin);\n        scanf(\"%d\",&ans2);\n        fclose(stdin);\n        printf(\"\u7b2c %d \u7ec4\u6570\u636e:\",t);\n        printf(\"run:%d std:%d\\n\",ans1,ans2);\n    }\n    printf(\"\u51fa\u73b0\u9519\u8bef\u2026\u2026\\n\");\n    printf(\"\u8bf7\u68c0\u67e5\u76f8\u5e94\u7684\u6587\u4ef6\\n\");\n    system(\"pause\");\n    return 0;\n}\n```\nMAKER \u6ce8\u610f\u8fd9\u91cc\u5e76\u6ca1\u6709srand(time(0))1s\u5185\u53ef\u62cd\u591a\u7ec4\u6570\u636e(\u524d\u63d0\u662f\u4f60\u5173360)\n\n```c\n#include<cstdio>\n#include<algorithm>\n#include<ctime>\n#include<cstdlib>\nusing namespace std;\nint tree[100010];int t;int x;int n;int sed;\nint main()\n{\n    freopen(\"seed.sed\",\"r\",stdin);\n    scanf(\"%d\",&sed);srand(sed);\n    fclose(stdin);\n    freopen(\"seed.sed\",\"w\",stdout);\n    printf(\"%d\",rand()*time(0));\n    fclose(stdout);\n    freopen(\"root.rot\",\"r\",stdin);\n    freopen(\"test.in\",\"w\",stdout);\n    scanf(\"%d%d\",&t,&x);\n    scanf(\"%d\",&n);\n    printf(\"%d %d\\n\",t,x);\n    printf(\"%d\\n\",n);\n    for(int i=1;i<=n;i++){tree[i]=i;}\n    random_shuffle(tree+1,tree+n+1);\n    for(int i=2;i<=n;i++){printf(\"%d %d\\n\",tree[i],tree[rand()%(i-1)+1]);}\n    fclose(stdin);fclose(stdout);\n    return 0;\n}\n```\n\n\u7136\u540e\u662frunner\u548cstd\u8981\u52a0\u7684\u6587\u4ef6\u8bfb\u5165\u547d\u4ee4\n\nrunner\n\n```C\nfreopen(\"test.in\",\"r\",stdin);\nfreopen(\"run.out\",\"w\",stdout);\n//do sth\nfclose(stdin);fclose(stdout);\n```\n\nstd\n\n```c\nfreopen(\"test.in\",\"r\",stdin);\nfreopen(\"std.out\",\"w\",stdout);\n//do sth\nfclose(stdin);fclose(stdout);\n```\n\u4e0a\u4ee3\u7801~\n\n```c\n#include<cstdio>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\nint t;int x;const int N=1e5+10;\nstruct data{int v;int nxt;}edge[2*N];\nint alist[N];int cnt;int emp1;int emp2;int emp3;int emp4;\ninline void add(int u,int v)\n{edge[++cnt].v=v;edge[cnt].nxt=alist[u];alist[u]=cnt;}\nbool book[N];int tp1[N];int tp2[N];int tp3[N];int tp4[N];\nint tp5[N];int res;int n;//\u5404\u7c7btp\u7684\u5b9a\u4e49\u89c1\u9898\u89e3 \nvoid dfs(int x,int fa)\n{\n    book[x]=true;int nxt=alist[x];//\u5bf9\u7684\uff0c\u5176\u5b9e\u6211\u4eec\u8981\u7ef4\u62a4\u8fd9\u4e48\u591a\u53d8\u91cf \n    int r1t1;int r2t1;int r3t1;int r1t2;int r2t2;int r1t3;int r2t3;\n    int r1t4;int r2t4;int r1t5;int r2t5;int mt1;int ct1;int dt1;int mt2;\n    int mt3;int mt4;int mt5;int s;s=mt1=ct1=dt1=mt2=mt3=mt4=mt5=0;\n    r1t1=r2t1=r3t1=r1t2=r2t2=r1t3=r2t3=r1t4=r2t4=r1t5=r2t5=0;\n    while(nxt)\n    {\n        int v=edge[nxt].v;\n        if(!book[v])\n        {\n            dfs(v,x);s++;//\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u6b21\u5927\u503c\u4eec\uff0c\u548c\u6700\u5927\u503c\u90fd\u662f\u8c01 \n            if(tp1[v]>r1t1){dt1=ct1;ct1=mt1;mt1=v;r3t1=r2t1;r2t1=r1t1;r1t1=tp1[v];}\n            else if(tp1[v]>r2t1){dt1=ct1;ct1=v;r3t1=r2t1;r2t1=tp1[v];}\n            else if(tp1[v]>r3t1){dt1=v;r3t1=tp1[v];}\n            if(tp2[v]>r1t2){mt2=v;r2t2=r1t2;r1t2=tp2[v];}\n            else if(tp2[v]>r2t2){r2t2=tp2[v];}\n            if(tp3[v]>r1t3){mt3=v;r2t3=r1t3;r1t3=tp3[v];}\n            else if(tp3[v]>r2t3){r2t3=tp3[v];}\n            if(tp4[v]>r1t4){mt4=v;r2t4=r1t4;r1t4=tp4[v];}\n            else if(tp4[v]>r2t4){r2t4=tp4[v];}\n            if(tp5[v]>r1t5){mt5=v;r2t5=r1t5;r1t5=tp5[v];}\n            else if(tp5[v]>r2t5){r2t5=tp5[v];}\n        }\n        nxt=edge[nxt].nxt;\n    }\n    if(s==0)return;\n    tp1[x]=max(r1t1+s-1,s);//\u66f4\u65b0tp1 ,tp2\n    if(s>1){tp2[x]=max(r1t1+r2t1+s-2,tp1[x]);}else tp2[x]=tp1[x];\n    tp3[x]=max(r1t3,r1t2);//\u66f4\u65b0tp3 \n    if(s>1)//\u5206\u60c5\u51b5\u8ba8\u8bbatp4 \n    {\n        if(mt1==mt3){tp4[x]=max(r1t1+r2t3+s-1,r2t1+r1t3+s-1);}else {tp4[x]=r1t1+r1t3+s-1;}\n        if(mt1==mt2){tp4[x]=max(tp4[x],max(r1t1+r2t2+s-2,r2t1+r1t2+s-2));}else {tp4[x]=max(tp4[x],r1t1+r1t2+s-2);}\n    }tp4[x]=max(tp4[x],r1t3+s);tp4[x]=max(tp4[x],r1t4+s-1);//\u66f4\u65b0tp5 \n    if(s>2){tp5[x]=r1t1+r2t1+r3t1+s-3;}tp5[x]=max(tp5[x],tp2[x]);tp5[x]=max(tp5[x],r1t5+s-1);\n    if(s>1)//\u5408\u5e76case 1 \n    {\n        res=max(r1t3+r2t3+1,res);res=max(r1t2+r2t2+1,res);\n        if(mt2==mt3){res=max(max(r1t2+r2t3+1,r2t2+r1t3+1),res);}\n        else {res=max(r1t2+r1t3+1,res);}\n    }else {res=max(max(r1t3,r1t2)+1,res);}\n    if(s>1)//\u5408\u5e76case 2 \n    {\n        if(mt1==mt4){res=max(max(r1t1+r2t4,r2t1+r1t4)+(fa!=0)+s-2,res);}\n        else {res=max(r1t1+r1t4+s-2+(fa!=0),res);}\n    }res=max(tp4[x]+(fa!=0),res);\n    if(s>1)//\u5408\u5e76case 3 \n    {\n        if(mt1==mt5){res=max(max(r1t1+r2t5,r2t1+r1t5)+(fa!=0)+s-2,res);}\n        else {res=max(r1t1+r1t5+(fa!=0)+s-2,res);}\n    }res=max(tp5[x]+(fa!=0),res);\n    if(s>2)//\u5927\u529b\u7684\u7279\u5224\u7279\u4f8b\uff0c\u8fd9\u91cc\u5e76\u6ca1\u6709\u7ef4\u62a4\u7b2c\u56db\u5927\u503c\uff0c\u800c\u662f\u4e00\u8d77\u53d6max\u53d6\u51fa\u6765 \n    {\n        nxt=alist[x];int ma=0;\n        while(nxt)\n        {\n            int v=edge[nxt].v;\n            if(v!=fa)\n            {\n                int va=max(tp3[v],tp2[v]-1);\n                if(v!=ct1&&v!=mt1)\n                {res=max(va+r1t1+r2t1+(fa!=0)+s-2,res);if(s>3&&v!=dt1){ma=max(ma,tp1[v]);}}\n                else if(v==ct1){res=max(va+r1t1+r3t1+(fa!=0)+s-2,res);}//\u5904\u7406\u51b2\u7a81 \n                else if(v==mt1){res=max(va+r2t1+r3t1+(fa!=0)+s-2,res);}\n            }nxt=edge[nxt].nxt;\n        }if(s>3){res=max(ma+r1t1+r2t1+r3t1+s-4+(fa!=0),res);}//\u5904\u7406\u56db\u53c9\u60c5\u51b5 \n    }return;//\u7ed3\u675fdfs\t\n}\ninline void clear()//\u6e05\u7a7a\u51fd\u6570 \n{\n    for(int i=1;i<=n;i++)//\u6e05\u90bb\u63a5\u8868\u53ea\u6e05alist\u5c31\u8db3\u591f\u4e86 \n    {alist[i]=0;tp1[i]=0;tp2[i]=0;tp3[i]=0;tp4[i]=0;tp5[i]=0;book[i]=false;}\n    cnt=0;res=0;\n}\nint main()\n{\n    scanf(\"%d%d\",&t,&x);\n    for(int z=1;z<=t;z++)\n    {\n        scanf(\"%d\",&n);switch(x)//\u65e0\u89c6\u9898\u76ee\u7684\u63d0\u793a \n        {\n            case 0:{break;}\n            case 1:{scanf(\"%d%d\",&emp1,&emp2);break;}\n            case 2:{scanf(\"%d%d%d%d\",&emp1,&emp2,&emp3,&emp4);break;}\n        }\n        for(int i=1;i<n;i++){int u;int v;scanf(\"%d%d\",&u,&v);add(u,v);add(v,u);}\n        dfs(1,0);printf(\"%d\\n\",res);clear();\n    }return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1520148403,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3748 \u3010[\u516d\u7701\u8054\u80032017]\u6467\u6bc1\u201c\u6811\u72b6\u56fe\u201d\u3011"
    },
    {
        "content": "## UPD 2021/3/23: \u4ee3\u7801\u8d34\u9519\u7684\u95ee\u9898\u7ec8\u4e8e\u6709\u4eba\u6307\u51fa\u6765\u4e86\n~~\u6211\u4e2a\u4eba\u975e\u5e38\u4e0d\u7406\u89e3\u8003\u573a\u4e0a\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u4e48\\*\\*\u7684\u52a8\u89c4\uff0c\u771f\u5c31\u63a8\u5f0f\u5b50\u4e00\u5c0f\u65f6\u5199\u7801\u5341\u5206\u949f\u5457~~  \n### 24\u5206\uff0cx=2\n~~\u4e0d\u4f1a\u771f\u7684\u6709\u4eba\u4e0d\u4f1a\u7167\u7740\u7ed9\u51fa\u7684\u65b9\u6848\u6a21\u62df\u7136\u540e\u7edf\u8ba1\u7b54\u6848\u5427\u4e0d\u4f1a\u5427\u4e0d\u4f1a\u5427~~\n### \u53e624\u5206\uff0cx=1\n~~\u5173\u4e8e\u8fd9\u4e2a\u90e8\u5206\u5206\u5c0f\u7f16\u4e5f\u6ca1\u60f3\u51fa\u6765\u600e\u4e48\u505a\uff0c\u6709\u77e5\u9053\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u54e6~~\n### 100\u5206\n~~\u6211\u4eec\u975e\u5e38\u7684\u52c7\u8ba4\u4e3a\u6211\u4eec\u53ef\u4ee5\u4e0d\u9700\u8981\u9760\u7ed9\u51fa\u7684\u65b9\u6848\u76f4\u63a5\u7b97\u6b63\u89e3\uff08~~  \n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 $p$ \u6211\u4eec\u5b9a\u4e49\u56db\u4e2a\u72b6\u6001 $f_{p, 0 \\sim 3}$\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u5bf9\u6bcf\u4e2a\u72b6\u6001\u5206\u522b\u89e3\u91ca\u542b\u4e49 **\uff08\u53ea\u662f\u6f14\u793a\u5207\u9664\u94fe\u7684\u5f62\u6001\uff0c\u4e0d\u4ee3\u8868\u8fd9\u4e48\u5207\u6700\u4f18\uff09**  \n$f_{p, 0}$: \u5207\u9664\u4e00\u6761\u7aef\u70b9\u5728 $p$ \u4e14\u53e6\u4e00\u7aef\u70b9\u5728\u5b50\u6570\u5185\u7684\u94fe\u7684\u7b54\u6848\uff0c\u8fd9\u6761\u94fe\u5c31\u50cf\u8fd9\u6837\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/96jd3hwl.png)  \n$f_{p, 1}$\uff1a\u5207\u9664\u4e00\u6761\u4e24\u4e2a\u7aef\u70b9\u5728 $p$ \u5b50\u6811\u5185\u4e14\u94fe\u4e0d\u7ecf\u8fc7 $p$ \u7684\u94fe\u7684\u7b54\u6848\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/tchv6a1t.png)  \n$f_{p, 2}$\uff1a\u5207\u9664\u4e00\u6761\u4e24\u4e2a\u7aef\u70b9\u5728 $p$ \u5b50\u6811\u5185\u4e14\u7ecf\u8fc7 $p$ \u7684\u94fe\u7684\u7b54\u6848\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/vmhucbhj.png)  \n$f_{p, 3}$\uff1a\u5207\u9664\u4e00\u6761\u7aef\u70b9\u5728 $p$ \u4e14\u53e6\u4e00\u7aef\u70b9\u5728\u5b50\u6570\u5185\u7684\u94fe\u4e0e\u4e00\u6761\u4e24\u4e2a\u7aef\u70b9\u5728 $p$ \u5b50\u6811\u5185\u4e14\u7ecf\u8fc7 $p$ \u7684\u94fe\u7684\u7b54\u6848\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/tlsb1soe.png)  \n~~\u4ee5\u4e0b\u5185\u5bb9\u53ef\u80fd\u5f15\u8d77\u4e0d\u9002\u8bf7\u8c28\u614e\u89c2\u770b~~  \n\u5bf9\u4e8e\u6bcf\u4e2a\u8ba8\u8bba\u5230\u7684\u8282\u70b9 $p$ \uff0c\u679a\u4e3e\u5176\u7684\u513f\u5b50 $son$\uff0c\u5047\u8bbe\u5df2\u7ecf\u5c06 $son$ \u7684\u72b6\u6001\u8ba8\u8bba\u5b8c\u6bd5\uff0c\u90a3\u4e48\u73b0\u5728\u6709\u4e00\u4e0b\u516d\u79cd\u60c5\u51b5\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\uff1a\n* $f_{p, 3} + f_{son, 0} - (p == 1)$\uff08\u56e0\u4e3a\u5982\u679c $p$ \u662f $1$ \u90a3\u4e48\u4e0a\u65b9\u6ca1\u6709\u5176\u4ed6\u8fde\u901a\u5757\u8981\u51cf\u6389 $1$\uff0c\u4e4b\u540e\u540c\u7406\uff09\uff1a  ![](https://cdn.luogu.com.cn/upload/image_hosting/9up1p78c.png)  ~~\u753b\u56fe\u9010\u6e10\u62bd\u8c61~~  \n* $f_{p, 0} + f_{son, 3} - (p == 1)$\uff1a  ![](https://cdn.luogu.com.cn/upload/image_hosting/5jayqfbs.png)  \n* $f_{p, 1} + f_{son, 2}$\uff08\u56e0\u4e3a\u65e0\u8bba $p$ \u4e0a\u65b9\u6709\u6ca1\u6709\u8282\u70b9\u90fd\u4e0d\u5f71\u54cd\u7b54\u6848\u6240\u4ee5\u4e0d\u9700\u8981\u5224 $p$ \u4e3a $1$\uff09\uff1a  ![](https://cdn.luogu.com.cn/upload/image_hosting/p5205kil.png)  \n* $f_{p, 1} + f_{son, 1} - 1$\uff08\u4e0a\u65b9\u6ca1\u5207\u5230\u7684\u5730\u65b9\u8fde\u5230\u4e00\u8d77\u4e86\u591a\u7b97\u4e86\u4e00\u4e2a\u8981\u51cf\u4e00\uff09\uff1a  ![](https://cdn.luogu.com.cn/upload/image_hosting/vgyjyza5.png)  \n* $f_{p, 2} + f_{son, 1} - (p == 1)$\uff1a  ![](https://cdn.luogu.com.cn/upload/image_hosting/4nxj6ui2.png)  \n* $f_{p, 2} + f_{son, 2} - (p == 1)$\uff1a  ![](https://cdn.luogu.com.cn/upload/image_hosting/xxmkaolt.png)  \t\n~~\u5750\u4e0b\uff0c\u8fd9\u624d\u521a\u5f00\u59cb\u5462\uff0c\u7ee7\u7eed\u5f80\u4e0b\u770b~~  \n\u6709\u4e00\u79cd\u65b9\u6848\u53ef\u4ee5\u63a8\u5f97 $f_{p, 0}$\uff0c\u5373\u76f4\u63a5\u5728 $f_{son, 0}$ \u7684\u57fa\u7840\u4e0a\u5220\u6389\u8282\u70b9 $p$\uff0c$f_{son, 0} + deg_p - 1$\uff08\u5176\u4e2d $deg_p$ \u7684\u610f\u601d\u662f $p$ \u7684\u513f\u5b50\u6570\uff09\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/844za5g7.png)  \n\u6709\u4e24\u79cd\u65b9\u6848\u53ef\u4ee5\u63a8\u5f97 $f_{p, 1}$\uff1a  \n$f_{q, 1}$\uff08\u76f4\u63a5\u7ee7\u627f)\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/na535r4w.png)  \n$f_{q, 2} + 1$\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/f4fmrqah.png)  \n\u6709\u4e00\u79cd\u65b9\u6848\u53ef\u4ee5\u63a8\u5f97 $f_{p, 2}$\uff0c\u5373$f_{p, 0} + f_{q, 0} - 1$\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/2t7jju0c.png)  \n~~\u8981\u6765\u529b\uff08~~  \n\u6709\u4e94\u79cd\u65b9\u6848\u53ef\u4ee5\u63a8\u5f97 $f_{p, 3}$ ~~\uff08\u60ca\u4e0d\u60ca\u559c\u610f\u4e0d\u610f\u5916\uff09~~\uff1a  \n$f[p][0] + f[q][2] - 1$\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/v8vefygk.png)  \n$f[p][0] + f[q][1] - 1$\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/dgxvfe1i.png)  \n$f[p][2] + f[q][0] - 1$\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/v0u3dqdf.png)  \n$f[q][3] + deg[p] - 1$\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/xb0sawkv.png)  \n$f[q][0] + deg[p] + ret - 2$\uff1a  \n\uff08$ret$ \u7684\u610f\u601d\u662f\u4e4b\u524d\u8ba8\u8bba\u7684\u513f\u5b50 $q$ \u4e2d\u6700\u5927\u7684 $f_{q, 1}$ \u548c $f_{q, 2}$\uff09\n![](https://cdn.luogu.com.cn/upload/image_hosting/3bm7dc7g.png)  \n\u521d\u59cb\u5316\u7684\u95ee\u9898\uff1a$f_{p, 0}$\uff0c$f_{p, 2}$\uff0c$f_{p, 3}$ \u8bbe\u4e3a $deg_p$\uff0c\u5373\u53ea\u5207\u6389\u8282\u70b9 $p$\uff1b$f_{p, 1}$ \u8bbe\u4e3a $1$\uff0c\u5373\u4e0d\u5207\u3002  \n~~\u597d\u4e86\u5b8c\u4e86\uff08~~  \ncode:  \n```cpp\n#include <iostream>\n#include <cstdio>\nconst int BUFFER_SIZE = 1 << 20;\nchar rb[BUFFER_SIZE], *rp = rb, *rt = rb;\ninline char read_char() {\n    return rp == rt ? (rt = rb + fread(rb, 1, BUFFER_SIZE, stdin), rp = rb, *rp++) : *rp++;\n}\ninline int read_int() {\n    int x = 0;\n    char ch = read_char(), flag = 0;\n    while (ch != '-' && (ch < '0' || ch > '9')) {\n        ch = read_char();\n    }\n    if (ch == '-') {\n        flag = 1;\n        ch = read_char();\n    }\n    for (x = 0; ch >= '0' && ch <= '9'; ch = read_char()) {\n        x = x * 10 + (ch - '0');\n    }\n    return flag ? -x : x;\n}\nconst int nn = 1e5 + 5;\nint T, n, x, ans;\nint cnt = 0, last[nn], prev[nn << 1], to[nn << 1];\ninline void addedge(int p, int q) {\n    ++cnt;\n    prev[cnt] = last[p];\n    last[p] = cnt;\n    to[cnt] = q;\n}\ninline void change(int &a, const int b) { a = a > b ? a : b; }\nint deg[nn], f[nn][4];\nvoid dp(int p, int father) {\n    f[p][0] = f[p][2] = f[p][3] = deg[p];\n    f[p][1] = 1;\n    int ret = 0;\n    for (int i = last[p], q; i; i = prev[i]) {\n        if ((q = to[i]) != father) {\n            dp(q, p);\n            change(ans, f[p][3] + f[q][0] - (p == 1));\n            change(ans, f[p][0] + f[q][3] - (p == 1));\n            change(ans, f[p][1] + f[q][2]);\n            change(ans, f[p][1] + f[q][1] - 1);\n            change(ans, f[p][2] + f[q][1] - (p == 1));\n            change(ans, f[p][2] + f[q][2] - (p == 1));\n            change(f[p][1], f[q][1]);\n            change(f[p][1], f[q][2] + 1);\n            change(f[p][3], f[p][0] + f[q][2] - 1);\n            change(f[p][3], f[p][0] + f[q][1] - 1);\n            change(f[p][3], f[p][2] + f[q][0] - 1);\n            change(f[p][3], f[q][3] + deg[p] - 1);\n            change(f[p][3], f[q][0] + deg[p] + ret - 2);\n            change(f[p][2], f[p][0] + f[q][0] - 1);\n            change(f[p][0], f[q][0] + deg[p] - 1);\n            change(ret, f[q][1]);\n            change(ret, f[q][2]);\n        }\n    }\n}   \nvoid solve() {\n    n = read_int();\n    for (int i = 1; i <= x; ++i) { read_int(); read_int(); }\n    for (int i = 2, p, q; i <= n; ++i) {\n        ++deg[p = read_int()];\n        ++deg[q = read_int()];\n        addedge(p, q);\n        addedge(q, p);\n        --deg[i];\n    }\n    dp(1, 0);\n    printf(\"%d\\n\", ans);\n    ans = cnt = 0;\n    for (int i = 1; i <= n; ++i) last[i] = deg[i] = 0;\n}\nint main() {\n    T = read_int(); x = read_int();\n    while (T--) solve();\n}\n```",
        "postTime": 1601022803,
        "uid": 124683,
        "name": "Krystallos",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3748 \u3010[\u516d\u7701\u8054\u80032017]\u6467\u6bc1\u201c\u6811\u72b6\u56fe\u201d \u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5728\u8003\u573a\u4e0a\uff0c\u6211\u89c9\u5f97\u6c34\u5e73\u548c\u6211\u4e00\u6837\u6bd4\u8f83\u4e00\u822c\u7684\u9009\u624b\uff0c\u5927\u90fd\u4e0d\u4f1a\u53bb\u601d\u8003\u8fd9\u4e2a\u6b63\u89e3\uff0c\u56e0\u4e3a\u611f\u89c9\u8fd9\u4e2a\u6b63\u89e3\u592a\u590d\u6742\u4e86\uff0c\u800c84\u5206\u7684\u7eaf\u66b4\u529b\u53c8\u592a\u9999\uff0c\u800c\u6211\u770b\u9898\u89e3\u533a\u4e5f\u6ca1\u6709\u4ec0\u4e48\u90e8\u5206\u5206\uff0c\u6240\u4ee5\u5c31\u6765\u8bf4\u4e00\u4e0b\u6211\u80fd\u60f3\u5230\u7684\u66b4\u529b\u5427\u3002\n\n\u7b97\u6cd5\u4e00\uff1a\u5bf9\u4e8ex = 2\u7684\u70b9\uff0c\u6211\u4eec\u6a21\u62df\u8fd9\u4e2a\u5220\u9664\u8fc7\u7a0b\uff0c\u628a\u5220\u9664\u7684\u8fb9\u90fd\u6253\u4e0a\u6807\u8bb0\u3002\u7136\u540e\u6211\u4eec\u5220\u6389\u6240\u6709\u7684\u8fb9\uff0c\u52a0\u56de\u6240\u6709\u6ca1\u6709\u6807\u8bb0\u7684\u8fb9\uff0c\u8fc7\u7a0b\u4e2d\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u5757\u5373\u53ef\uff0c\u7531\u4e8e\u672c\u4eba\u5199\u5e76\u67e5\u96c6\u4e0d\u6309\u79e9\u5408\u5e76\uff0c\u6240\u4ee5\u6709\u4e2a```logn```\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O\uff08$\\sum$\n```nlogn```\uff09\u3002 \n\n\u7b97\u6cd5\u4e8c\uff1a\u5bf9\u4e8e1 - 7\u4e2a\u70b9\uff0c\u53ef\u4ee5\u679a\u4e3e\u56db\u4e2a\u7aef\u70b9\uff0c\u7136\u540e\u76f8\u5f53\u4e8ex = 2\u7684\u60c5\u51b5\uff0c\u8c03\u7528\u7b97\u6cd5\u4e00\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O\uff08$n ^5$```lognT```\uff09\uff0c\u4e0d\u8fc7\u8fd8\u9700\u8981\u5224\u5b9a\u4e24\u6761\u8def\u5f84\u4e0d\u80fd\u6709\u4ea4\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u8df3LCA\u8fc7\u7a0b\u4e2d\u6253\u6807\u8bb0\u5b9e\u73b0\uff0c\u6240\u4ee5\u6700\u540e\u7684\u65f6\u95f4\u590d\u6742\u5ea6O($n ^6$```lognT```)\uff0c\u6709\u5f88\u591a\u590d\u6742\u5ea6\u66f4\u4f18\u7684\u529e\u6cd5\uff0c\u4e0d\u8fc7\u8fd9\u662f\u66b4\u529b\u561b\uff0c\u600e\u4e48\u65b9\u4fbf\u600e\u4e48\u6765\u3002\n\n\u7b97\u6cd5\u4e09\uff1a\u5bf9\u4e8ex = 1\u7684\u70b9\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u5728\u4e00\u4e2a\u68ee\u6797\u4e0a\u627e\u4e00\u6761\u8def\u5f84\uff0c\u4f7f\u5f97\u5220\u53bb\u8fd9\u4e2a\u8def\u5f84\u5f97\u5230\u7684\u8054\u901a\u5757\u6700\u591a\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6811dp\u6c42\uff0c```f[i]```\u4ee3\u8868\u4ecei\u5b50\u6811\u5185\u4e00\u70b9\u5f00\u59cb\uff0c\u8fde\u5230i\u7684\u8def\u5f84\u91cc\u5220\u53bb\u4e00\u6761\u6700\u591a\u80fd\u4ea7\u751f\u591a\u5c11\u4e2a\u8054\u901a\u5757\uff0c```g[i]```\u4ee3\u8868i\u5b50\u6811\u5185\u7684\u4e00\u6761\u8def\u5f84\u91cc\u5220\u53bb\u4e00\u6761\u6700\u591a\u80fd\u4ea7\u751f\u591a\u5c11\u4e2a\u8054\u901a\u5757\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u7c7b\u4f3c\u4e8e\u6c42\u6811\u7684\u76f4\u5f84\u7684\u529e\u6cd5\u6c42\u51fa\u6765f\u4e0eg\u6570\u7ec4\uff0c\u5404\u4e2a\u8054\u901a\u5757\u53d6\u6700\u5927\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O($\\sum$n)\u3002\n\n\u7b97\u6cd5\u56db\uff1a\u5bf9\u4e8e```x = 0, n <= 100```\u7684\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u4e24\u4e2a\u7aef\u70b9\uff0c\u7528\u7b97\u6cd5\u4e09\u7684\u529e\u6cd5\u8fdb\u884c\u6811dp\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O($\\sum$$n^3$)\u3002\n\n\u7136\u540e\u5c31\u83b7\u5f97\u4e8684\u5206\u7684\u597d\u6210\u7ee9\u3002",
        "postTime": 1585300176,
        "uid": 163980,
        "name": "\u884c\u541f\u5578\u4e5d\u5dde",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3748 \u3010[\u516d\u7701\u8054\u80032017]\u6467\u6bc1\u201c\u6811\u72b6\u56fe\u201d\u3011"
    },
    {
        "content": "[\u6ecb\u78c1\u53bb\u6211\u535a\u5ba2\u770b\u5416](http://www.vixbob-lwc.pw/2019/05/12/2017-six-provinces-joint-examination/)\n\n\u4e00\u53e5\u8bdd\u9898\u610f:\u9009\u51fa\u4e24\u6761\u6ca1\u6709\u8fb9\u4ea4\u7684\u94fe, \u4f7f\u5f97\u5220\u6389\u548c\u9009\u51fa\u7684\u94fe\u4e0a\u6240\u6709\u70b9\u76f8\u5173\u7684\u8fb9\u540e\u8054\u901a\u5757\u4e2a\u6570\u6700\u5927.\n\n\u7ecf\u8fc7\u8ba1\u7b97\u6211\u4eec\u53d1\u73b0\u8054\u901a\u5757\u7684\u4e2a\u6570\u7b49\u4e8e\u9009\u51fa\u7684\u70b9\u7684\u5ea6\u6570\u548c$-$\u8fb9\u6570$\\times 2-$\u94fe\u7684\u4e2a\u6570+1, \u8fb9\u6570\u53c8\u7b49\u4e8e\u9009\u51fa\u7684\u70b9\u6570$-$\u94fe\u7684\u4e2a\u6570.\u6240\u4ee5\u7b54\u6848\u4e3a\u9009\u51fa\u7684\u70b9\u7684\u5ea6\u6570\u548c-\u70b9\u6570$\\times 2+$\u94fe\u7684\u4e2a\u6570$+$1.(\u6ca1\u6709\u70b9\u4ea4,\u5e76\u4e14\u6ca1\u6709\u4e24\u4e2a\u70b9\u5c5e\u4e8e\u4e0d\u540c\u7684\u94fe\u4f46\u662f\u6709\u76f4\u63a5\u8fb9\u76f8\u8fde\u7684\u8fd9\u4e24\u79cd\u60c5\u51b5.\u7279\u6b8a\u7684\u8fd9\u4e24\u79cd\u60c5\u51b5\u7b54\u6848\u90fd\u8981\u51cf\u4e00.)\n\n\u8003\u8651$\\text{dp}$, \u8bbe$f[i][0/1/2][0/1/2/3]$\u8868\u793a$\\text{dp}$\u5b8c\u4e86$i$\u8fd9\u4e2a\u5b50\u6811, \u786e\u5b9a\u4e86$0/1/2$\u6761\u94fe, $i$\u7684\u5ea6\u6570\u4e3a$0/1/2/3$(\u53ea\u8003\u8651\u9009\u51fa\u6765\u7684\u94fe\u5bf9\u5ea6\u6570\u7684\u5f71\u54cd)\u7684\u6700\u4f18\u7b54\u6848.\u7279\u522b\u7684\u4e00\u4e2a\u70b9\u7684\u94fe\u8fd9\u4e2a\u70b9\u7684\u5ea6\u6570\u4e3a$1$.\n\n\u5b9a\u4e49\u51e0\u4e2a\u51fd\u6570:\n\n1. $\\text{MxSum(S)}$\u8868\u793a$S$\u96c6\u5408\u4e2d\u6700\u5927\u5143\u7d20\u548c\u6b21\u5927\u5143\u7d20\u7684\u548c.\n2. $\\text{MaxF(x,d)}$\u8868\u793a$\\max_{0 \\le k\\le 3}(f[x][d][k])$\n3. $\\text{EMaxF(x,d)}$\u8868\u793a$\\max_{0 \\le k \\le 3}(f[x][d][k]-[k>0])$\n\n\u8f6c\u79fb\u6709\u70b9\u6bd2\u7624, \u8981\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b:\n\n1. $f[i][1][0] \\leftarrow f[v][1][k], v \\in son_i, k\\in [0,2]$.\n2. $f[i][1][1] \\leftarrow f[v][1][1], v\\in son_i.$\n3. $f[i][1][2] \\leftarrow \\text{MxSum}(\\{f[v][1][1], v \\in son_i\\}).$\n4. $f[i][2][0] \\leftarrow \\max(\\max_{v\\in son_i}(\\text{MaxF(v,2)}),\\text{MxSum}(\\{\\text{MaxF(v,1)}, v\\in son_i\\}))$.\n\n\u4e0a\u9762\u8fd9$4$\u79cd\u8f6c\u79fb\u6bd4\u8f83\u7b80\u5355,\u5269\u4e0b\u7684\u56db\u79cd\u8f83\u4e3a\u590d\u6742:\n\n\u4e00.$f[i][2][1]$:\n\n1. \u8fd9\u4e2a\u70b9\u5355\u72ec\u6210\u4e00\u6761\u94fe,\u7136\u540e\u513f\u5b50\u8282\u70b9\u7684\u5b50\u6811\u5f53\u4e2d\u518d\u9009\u4e00\u6761\u94fe.$f[i][2][1]\\leftarrow \\max(f[v][1][0], f[v][1][1]-1), v\\in son_i$.\n2. \u4ece\u67d0\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5f53\u4e2d\u5ef6\u4f38\u51fa\u6765\u4e00\u6761\u94fe, **\u53e6\u5916**\u7684\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u4e2d\u9009\u4e00\u6761\u94fe.$f[i][2][1]\\leftarrow f[u][1][1]+\\max_{v\\in son_i, v \\ne u}(\\text{EMaxF(v,1)}), u\\in son_i$.\n\n\u4e8c.$f[i][2][2]$:\n\n1. \u4ece\u67d0\u4e00\u513f\u5b50\u7684\u5b50\u6811\u4e2d\u5ef6\u4f38\u51fa\u6765\u7684\u4e00\u6761\u94fe(\u8fd9\u4e2a\u5b50\u6811\u786e\u5b9a\u4e86\u4e24\u6761\u94fe),**\u53e6\u5916**\u7684\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u4e2d\u518d\u9009\u4e00\u6761\u53ef\u4ee5\u5ef6\u4f38\u7684\u94fe(\u8fd9\u4e2a\u5b50\u6811\u786e\u5b9a\u4e86\u4e00\u6761\u94fe).$f[i][2][2] \\leftarrow \\max(f[u][2][3], f[u][2][1])+\\max_{u \\in son_i, u \\ne v}(f[u][1][1]), v \\in son_i$.\n2. \u4ece\u67d0\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u4e2d\u9009\u62e9\u4e00\u6761\u94fe, **\u53e6\u5916**\u4e24\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u4e2d\u90fd\u6709\u4e00\u6761\u53ef\u4ee5\u5ef6\u4f38\u51fa\u6765\u7684\u94fe(\u8fd9\u4e24\u4e2a\u5b50\u6811\u90fd\u53ea\u786e\u5b9a\u4e86\u4e00\u6761\u94fe).$f[i][2][2]\\leftarrow \\text{EMaxF(u,1)}+\\text{MxSum}(\\{f[u][1][1], u \\in son_i, u \\ne v\\}),v \\in son_i$.\n\n\u4e09.$f[i][2][3]$\u548c$f[i][2][4]$:\n\n\u90fd\u662f\u76f4\u63a5\u9009\u62e9\u513f\u5b50\u8282\u70b9\u4e2d$f[v][1][1]$\u4e2d\u524d$3/4$\u5927\u7684\u8fdb\u884c\u8f6c\u79fb\u5373\u53ef.\u56e0\u4e3a\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u662f\u6709\u70b9\u4ea4\u7684,\u6240\u4ee5\u7b54\u6848\u51cf\u4e00.\n\nPS:$f[i][2][4]$\u8fd9\u4e2a\u72b6\u6001\u4e0d\u7528\u8bb0\u4e0b\u6765,\u53ea\u7528\u66f4\u65b0\u4e00\u4e0b\u7b54\u6848\u5c31\u597d\u4e86.\u5e76\u4e14\u5904\u7406\u5b8c\u6bcf\u4e00\u4e2a\u8282\u70b9\u540e\u5c06\u6240\u6709\u5ea6\u6570\u5927\u4e8e\u96f6\u7684\u72b6\u6001\u52a0\u4e0a$deg[i]-2$.\n\n\u4ee3\u7801:\n```cpp\n/*\n * 4871_new.cpp\n * This file is part of 4871\n *\n * Copyright (C) 2019 - ViXbob\n *\n * 4871 is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * 4871 is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with 4871. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * There is no end though there is a start in space. ---Infinity.\n * It has own power, it ruins, and it goes though there is a start also in the star. ---Finite.\n * Only the person who was wisdom can read the most foolish one from the history.\n * The fish that lives in the sea doesn't know the world in the land.\n * It also ruins and goes if they have wisdom.\n * It is funnier that man exceeds the speed of light than fish start living in the land.\n * It can be said that this is an final ultimatum from the god to the people who can fight.\n *\n * Steins;Gate\n */\n#include <bits/stdc++.h>\n#define rep(i, j, k) for(int i = j; i <= k; ++i)\n#define dep(i, j, k) for(int i = j; i >= k; --i)\n#define SIZE(x) ((int)x.size())\n#define mp(x, y) make_pair(x, y)\n#define pb(x) push_back(x)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\ntemplate <typename T> bool chkmax(T &a, T b) { return a < b ? a = b, 1 : 0; }\ntemplate <typename T> bool chkmin(T &a, T b) { return a > b ? a = b, 1 : 0; }\n\nusing namespace std;\n\nconst int maxn = 1e5 + 15;\nconst int P = 998244353;\nconst int inf = 0x3f3f3f3f;\n\nint f[maxn][3][4], T, x;\n\ninline int read() {\n\tchar ch = getchar(); int u = 0, f = 1;\n\twhile(!isdigit(ch)) { if(ch == '-') f = -1; ch = getchar(); }\n\twhile(isdigit(ch))  { u = u * 10 + ch - 48; ch = getchar(); } return u * f;\n}\n\ninline int pls(int x, int y) { x += y; return x >= P ? x - P : x; }\ninline int dec(int x, int y) { x -= y; return x < 0 ? x + P : x; }\ninline int max(int a, int b, int c) { return max(a, max(b, c)); }\ninline int max(int a, int b, int c, int d) { return max(a, max(b, c, d)); }\n\nnamespace ViXbob {\n\tint n, fa[maxn], z, deg[maxn], ans;\n\tvector<int> G[maxn];\n\t\n\tinline void init() {\n\t\tn = read(); ans = 0; z = x;\n\t\trep(i, 1, n) G[i].clear();\n\t\trep(i, 1, n) rep(j, 0, 2) rep(k, 0, 3) f[i][j][k] = -inf;\n\t\tmemset(fa, 0, sizeof(int) * (n + 5));\n\t\tmemset(deg, 0, sizeof(int) * (n + 5));\n\t}\n\t\n\tinline int calcout(int x) { return max(f[x][2][3], f[x][2][1], f[x][1][1]); }\n\tinline int calcall(int x, int d) { return max(f[x][d][0], f[x][d][1], f[x][d][2], f[x][d][3]); }\n\tinline int calcall0(int x) { return max(f[x][1][0], max(f[x][1][1], f[x][1][2], f[x][1][3]) - 1); }\n\t\n\tstruct Node {\n\t\tint g0, g1;\n\t\tNode(int a = -inf, int b = -inf) { g1 = a; g0 = b; }\n\t\tNode operator & (const Node &t) const {\n\t\t\tNode rnt = *this;\n\t\t\tif(t.g0 >= g1) return t;\n\t\t\telse {\n\t\t\t\tif(t.g1 >= rnt.g1) rnt.g0 = rnt.g1, rnt.g1 = t.g1;\n\t\t\t\telse rnt.g0 = max(rnt.g0, t.g1); \n\t\t\t} return rnt;\n\t\t}\n\t\tint sum() { return g0 + g1; }\n\t} ;\n\t\n\tinline void dfs(int x) {\n\t\tvector<int> Ans;\n\t\tf[x][1][1] = 0;\n\t\tfor(auto v : G[x]) if(v != fa[x]) {\n\t\t\tfa[v] = x; dfs(v);\n\t\t\tAns.pb(f[v][1][1]);\n\t\t\tchkmax(f[x][1][1], f[v][1][1]);\n\t\t\tchkmax(f[x][1][0], calcall(v, 1));\n\t\t\tchkmax(f[x][2][0], calcall(v, 2));\n\t\t\tchkmax(f[x][2][1], max(f[v][2][3], f[v][2][1], f[v][1][0], f[v][1][1] - 1));\n\t\t}\n\t\tif(Ans.size() >= 2) {\n\t\t\tvector<Node> pre, preout;\n\t\t\tpre.resize(G[x].size() + 1);\n\t\t\tpreout.resize(G[x].size() + 1);\n\t\t\tNode suc, sucout, mx0;\n\t\t\trep(i, 0, SIZE(G[x]) - 1) {\n\t\t\t\tint v = G[x][i];\n\t\t\t\tpre[i + 1] = pre[i]; preout[i + 1] = preout[i];\n\t\t\t\tif(v == fa[x]) continue;\n\t\t\t\tpre[i + 1] = pre[i + 1] & Node(calcall0(v));\n\t\t\t\tpreout[i + 1] = preout[i + 1] & Node(f[v][1][1], -inf);\n\t\t\t\tmx0 = mx0 & Node(calcall(v, 1));\n\t\t\t}\n\t\t\tchkmax(f[x][2][0], mx0.sum());\n\t\t\tchkmax(f[x][1][2], preout.rbegin() -> sum());\n\t\t\tdep(i, SIZE(G[x]) - 1, 0) if(G[x][i] != fa[x]) {\n\t\t\t\tint v = G[x][i];\n\t\t\t\tchkmax(f[x][2][1], f[v][1][1] + (pre[i] & suc).g1);\n\t\t\t\tchkmax(f[x][2][2], max(f[v][2][3], f[v][2][1]) + (preout[i] & sucout).g1);\n\t\t\t\tif(SIZE(Ans) >= 3) chkmax(f[x][2][2], (preout[i] & sucout).sum() + calcall0(v));\n\t\t\t\tsuc = suc & Node(calcall0(v), -inf);\n\t\t\t\tsucout = sucout & Node(f[v][1][1], -inf);\n\t\t\t}\n\t\t}\n\t\tif(Ans.size() >= 3) {\n\t\t\tsort(Ans.begin(), Ans.end(), greater<int>());\n\t\t\tint rnt = 0;\n\t\t\trep(i, 0, 2) rnt += Ans[i];\n\t\t\tchkmax(f[x][2][3], rnt - 1);\n\t\t\tif(Ans.size() >= 4) chkmax(ans, rnt + Ans[3] + deg[x]);\n\t\t}\n\t\trep(i, 1, 2) rep(j, 1, 3) f[x][i][j] += deg[x] - 2;\n\t}\n\t\n\tint main() {\n\t\twhile(T--) {\n\t\t\tinit();\n\t\t\twhile(z--) read(), read();\n\t\t\trep(i, 1, n - 1) {\n\t\t\t\tint x = read(), y = read();\n\t\t\t\tG[x].pb(y); G[y].pb(x);\n\t\t\t\tdeg[x]++; deg[y]++;\n\t\t\t}\n\t\t\tif(n <= 2) { putchar(n - 1 + '0'); putchar('\\n'); continue; }\n\t\t\tdfs(1);\n\t\t\trep(i, 1, 2) rep(j, 0, 3) chkmax(ans, f[1][i][j] + i + 1);\n\t\t\tprintf(\"%d\\n\", ans);\n\t\t} return 0;\n\t}\n}\n\nint main() {\n//\tfreopen(\"1.in\", \"r\", stdin);\n//\tfreopen(\"my.out\", \"w\", stdout);\n\tT = read(); x = read();\n\tViXbob :: main();\n\treturn 0;\n}\n/*\n*/\n```",
        "postTime": 1557750355,
        "uid": 50971,
        "name": "ViXbob",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3748 \u3010[\u516d\u7701\u8054\u80032017]\u6467\u6bc1\u201c\u6811\u72b6\u56fe\u201d\u3011"
    },
    {
        "content": "### [\u516d\u7701\u8054\u80032017]\u6467\u6bc1\u6811\u72b6\u56fe\n\n#### tag\uff1a\u6811\u578bdp\n\n\u4ecb\u7ecd\u4e00\u79cd\u4ece\u7f51\u4e0a\u770b\u6765\u7684\u505a\u6cd5\uff0c\u7801\u91cf\u5f88\u5c0f\uff08\u8feb\u771f\uff09\u3002\n\n\u9996\u5148\u7ed9\u51fa\u4e00\u4e9b\u5b9a\u4e49\uff1a\n\n\u628a $1$ \u4f5c\u6839\uff0c$deg_i$ \u8868\u793a $i$ \u53f7\u8282\u70b9\u7684\u513f\u5b50\u6570\u91cf\u3002\n\n**\u8def\u5f84**\uff0c\u8868\u793a\u9009\u62e9\u6811\u4e0a\u4e24\u4e2a\u70b9\u5207\u9664\u7684\u4e00\u79cd\u65b9\u6848\uff0c\u5373\u4e0e\u9898\u76ee\u5b9a\u4e49\u4e2d\u4e00\u6837\u3002\n\n**\u94fe**\uff0c\u8868\u793a\u7aef\u70b9\u4e3a\u5f53\u524d\u6b63\u5728 $dp$ \u7684\u8282\u70b9 $x$ \u7684\u7279\u6b8a\u8def\u5f84\uff0c__\u6ce8\u610f\u8def\u5f84\u662f\u53ef\u4ee5\u9000\u5316\u4e3a\u94fe\u7684__\u3002\n\n\u6240\u4ee5\u8def\u5f84\u53ef\u4ee5\u770b\u6210\u662f\u4e24\u6761\u94fe\u62fc\u51d1\u800c\u6210\u7684\u3002\n\n__\u4e0b\u6587\u4f1a\u6709\u4e00\u4e9b\u56fe\u7247\uff0c\u53ef\u80fd\u65b9\u4fbf\u7406\u89e3__\uff0c\u6211\u4eec\u7528$\\color{red}\\text{\u7ea2\u8272}$\u8868\u793a\u4e00\u6761\u8def\u5f84\uff0c$\\color{#23f3a2}\\text{\u7eff\u8272}$\u8868\u793a\u4e00\u6761\u94fe\uff0c\u865a\u7ebf\u8868\u793a\u4e24\u6761\u94fe\u5728\u672c\u6b21\u8f6c\u79fb\u4e2d\u5408\u6210\u4e86\u4e00\u6761\u8def\u5f84\u3002\n\n- $dp_{x,0}$ \u8868\u793a\u5207\u9664\u4e00\u6761\u7aef\u70b9\u5728 $x$ \u4e0a\u7684\u94fe\u7684\u6700\u5927\u7b54\u6848\uff1b\n- $dp_{x,1}$ \u8868\u793a\u5207\u9664\u4e00\u6761\u4e0d\u7ecf\u8fc7 $x$ \u7684\u8def\u5f84\u7684\u6700\u5927\u7b54\u6848\uff08\u6ce8\u610f\u8fd9\u4e2a\u65f6\u5019 $x$ \u548c\u5b83\u7684\u7956\u5148\u6784\u6210\u7684\u8054\u901a\u5757\u662f\u4f1a\u88ab\u7b97\u5165\u7b54\u6848\u7684\uff0c\u6240\u4ee5\u8f6c\u79fb\u7684\u65f6\u5019\u6211\u4eec\u8981\u5bf9\u6b64\u8fdb\u884c\u4fee\u6b63\uff09\uff1b\n- $dp_{x,2}$ \u8868\u793a\u5207\u9664\u4e00\u6761\u7ecf\u8fc7 $x$ \u7684\u8def\u5f84\u7684\u6700\u5927\u7b54\u6848\uff1b\n- $dp_{x,3}$ \u8868\u793a\u5207\u9664\u4e00\u6761\u7aef\u70b9\u5728 $x$ \u4e0a\u7684\u94fe\uff0c\u548c\u5b50\u6811\u5185\u4e00\u6761\u8def\u5f84\uff08\u53ef\u4ee5\u7ecf\u8fc7 $x$\uff09\u7684\u6700\u5927\u7b54\u6848\uff1b\n\n\u66f4\u65b0\u7b54\u6848\u65f6\u8003\u8651\u679a\u4e3e\u4e00\u4e2a\u513f\u5b50 $d$\u3002\n\n\u5219 $Ans$ \u53ef\u80fd\u88ab\u4e0b\u5217\u6240\u6709\u503c\u53d6\u4ee3\uff1a\n\n1. $dp_{x,3}+dp_{d,0}-1+[x\\not=1]$\n\n2. $dp_{x,0}+dp_{d,3}-1+[x\\not=1]$\n\n\u6b64\u5904 $-1$ \u662f\u56e0\u4e3a\u94fe\u5408\u5e76\u5bfc\u81f4\u8054\u901a\u5757\u6570\u91cf\u51cf\u5c11\uff0c$+[x\\not=1]$ \u662f\u56e0\u4e3a\u5982\u679c\u4e0d\u662f\u6839\uff0c\u90a3\u4e48 $x$ \u7684\u4e0a\u65b9\u8fd8\u6709\u4e00\u4e2a\u8054\u901a\u5757\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9ubvb06x.png)\n\n3. $dp_{x,1}+dp_{d,2}$\n4. $dp_{x,1}+dp_{d,1}-1$\n\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/28m6zw0z.png)\n\n5. $dp_{x,2}+dp_{d,1}-1+[x\\not=1]$\n6. $dp_{x,2}+dp_{d,2}-1+[x\\not=1]$\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vpm3pikm.png)\n\n\u4e8e\u662f\u53ef\u4ee5\u5b8c\u6210\u7b54\u6848\u7684\u66f4\u65b0\u3002\n\n-------------\n\n\u66f4\u65b0\u5b8c\u7b54\u6848\u4e4b\u540e\u8fd8\u8981\u66f4\u65b0 $dp$ \u6570\u7ec4\u3002\n\n\u4e00\u5f00\u59cb\u4ee4 $dp_{x,0}=dp_{x,2}=dp_{x,3}=deg_x,dp_{x,1}=1$\uff0c\u5206\u522b\u8868\u793a\u9009 $x$ \u8282\u70b9\u672c\u8eab\u548c\u9009\u5b50\u6811\u4e2d\u7684\u4e00\u4e2a\u53f6\u5b50\u3002\u5982\u679c\u672c\u8eab\u662f\u53f6\u5b50\u90a3\u4e48\u6839\u672c\u4e0d\u4f1a\u8fdb\u5165\u5faa\u73af\u66f4\u65b0\u7b54\u6848\uff0c\u6545\u6ca1\u6709\u95ee\u9898\u3002\n\n\u679a\u4e3e\u4e86\u4e00\u4e2a\u513f\u5b50 $d$\uff0c\u5c31\u5f00\u59cb\u66f4\u65b0 $dp$ \u503c\u3002\n\n$dp_{x,1}=\\max\\{dp_{x,1},dp_{d,1},dp_{d,2}+1\\}$\n\n\u8981\u4e48\u5c31\u662f\u76f4\u63a5\u7ee7\u627f\u4e00\u6761\u4e0d\u7ecf\u8fc7 $d$ \u7684\uff0c\u8981\u4e48\u7ee7\u627f\u4e00\u6761\u7ecf\u8fc7 $d$ \u7684\u3002\u7531\u4e8e\u7ecf\u8fc7 $d$ \u7684\u8def\u5f84\u7684\u7b54\u6848\u6ca1\u6709\u7b97 $d$ \u7684\u7956\u5148\u6784\u6210\u7684\u8054\u901a\u5757\uff0c\u4e8e\u662f $+1$\u3002\n\n$dp_{x,3}$ \u53ef\u4ee5\u7531\u4e0b\u5217 $5$ \u79cd\u8f6c\u79fb\u8fc7\u6765\uff1a\n\n1. $dp_{x,0}+dp_{d,2}-1$\uff0c\u76f4\u63a5\u62fc\u51d1\u4e00\u6761\u94fe\u548c\u4e00\u6761\u8def\u5f84\uff0c\u7531\u4e8e $d$ \u4e3a $x$ \u7684\u513f\u5b50\uff0c\u6240\u4ee5\u7b97\u591a\u4e86\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u51cf\u6389\u5373\u53ef\uff1b\n2. $dp_{x,0}+dp_{d,1}-1$\uff0c\u4e0e\u8f6c\u79fb 1 \u540c\u7406\uff1b\n3. $dp_{x,2}+dp_{d,0}-1$\uff0c\u628a\u94fe\u7684\u7aef\u70b9\u4ece $d$ \u5ef6\u4f38\u5230 $x$\uff0c\u7531\u4e8e $d$ \u4e3a $x$ \u7684\u513f\u5b50\uff0c\u6240\u4ee5\u7b97\u591a\u4e86\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u51cf\u6389\u5373\u53ef\uff1b\n4. $dp_{d,3}+deg_x-1$\uff0c\u4e0e\u8f6c\u79fb 3 \u89e3\u91ca\u76f8\u540c\uff1b\n5. \u4ee4 $res$ \u4e3a $\\max\\limits_{i\\in\\text{\u5728} d \\text{\u4e4b\u524d\u5c31\u8003\u8651\u8fc7\u7684\u513f\u5b50}}\\{dp_{i,1} ,dp_{i,2}\\}$\uff0c\u5219\u6709 $dp_{d,0}+deg_x+res-2$\uff0c\u8868\u793a\u4ece\u5f53\u524d\u513f\u5b50\u9009\u4e00\u6761\u94fe\uff0c\u7136\u540e\u518d\u5728\u5176\u5b83\u513f\u5b50\u91cc\u9009\u4e00\u6761\u8def\u5f84\uff0c\u9009\u7528\u4e86\u4e24\u4e2a\u513f\u5b50\uff0c\u51cf\u6389\u5373\u53ef\u3002\n\n$dp_{x,2}=\\max\\{dp_{x,2},dp_{x,0}+dp_{d,0}-1\\}$ \n\n\u9009\u7528\u4e24\u6761\u94fe\u62fc\u8d77\u6765\u3002\n\n$dp_{x,0}=\\max\\{dp_{x,0},dp_{d,0}+deg_x-1\\}$\n\n\u76f4\u63a5\u7ee7\u627f\u513f\u5b50\u7684\u94fe\u3002\n\n\n\n\u7531\u4e8e\u8def\u5f84\u53ef\u80fd\u9000\u5316\u4e3a\u94fe\uff0c\u94fe\u53ef\u4ee5\u9000\u5316\u6210\u70b9\uff0c\u6240\u4ee5\u6700\u540e\u8fd8\u8981\u66f4\u65b0\u4e00\u904d\uff1a\n\n$dp_{x,2}=\\max\\{dp_{x,2},dp_{x,0}\\}$\n\n$dp_{x,3}=\\max\\{dp_{x,3},dp_{x,2}\\}$\n\n\n\u4ee5\u4e0b\u662f~~\u6574\u9f50\u7684~~\u4ee3\u7801\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <ctime>\n#include <cstdlib>\n\nconst int MX = 1e5 + 233;\n\nint read(){\n\tchar k = getchar(); int x = 0;\n\twhile(k < '0' || k > '9') k = getchar();\n\twhile(k >= '0' && k <= '9')\n\t\tx = x * 10 + k - '0' ,k = getchar();\n\treturn x;\n}\n\nint head[MX] ,tot ,type ,deg[MX] ,n ,Ans;\nstruct edge{\n\tint node ,next;\n}h[MX << 1];\nvoid addedge(int u ,int v ,int flg = 1){\n\th[++tot] = (edge){v ,head[u]} ,head[u] = tot;\n\tif(flg) addedge(v ,u ,0);\n}\n\nvoid init(int upper){\n\ttot = 0 ,Ans = 0;\n\tfor(int i = 0 ; i <= upper ; ++i) deg[i] = head[i] = 0;\n}\n\nint max(int a ,int b){return a > b ? a : b;}\nvoid chkmax(int &a ,int b){a = max(a ,b);}\nint dp[MX][4];\n\n// dp[0] \u8868\u793a\u4e00\u6761\u7ecf\u8fc7 x \u7684\u94fe\t\n// dp[1] \u8868\u793a\u4e00\u6761\u4e0d\u7ecf\u8fc7 x \u7684\u8def\u5f84\n// dp[2] \u8868\u793a\u4e00\u6761\u7ecf\u8fc7 x \u7684\u8def\u5f84\n// dp[3] \u8868\u793a\u4e00\u6761\u7ecf\u8fc7 x \u7684\u4e00\u6761\u94fe\u548c\u4e00\u6761\u5b50\u6811\u5185\uff08\u53ef\u4ee5\u8fc7x\uff09\u7684\u8def\u5f84\n// \u56e0\u4e3a\u662f\u9010\u4e2a\u513f\u5b50\u8003\u8651\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u4e0d\u4e71\u66f4\u65b0\u5c31\u4e0d\u4f1a\u7b97\u591a\n\nvoid dapai(int x ,int f){\n\tdp[x][0] = dp[x][2] = dp[x][3] = deg[x];\n\tdp[x][1] = 1;\n\n\tint res = 0;\n\tfor(int i = head[x] ,d ; i ; i = h[i].next){\n\t\tif((d = h[i].node) == f) continue;\n\t\tdapai(d ,x);\n\t\tchkmax(Ans ,dp[x][3] + dp[d][0] - (x == 1));\n\t\tchkmax(Ans ,dp[x][0] + dp[d][3] - (x == 1));\n\t\tchkmax(Ans ,dp[x][1] + dp[d][2]);\n\t\tchkmax(Ans ,dp[x][1] + dp[d][1] - 1);\n\t\tchkmax(Ans ,dp[x][2] + dp[d][1] - (x == 1));\n\t\tchkmax(Ans ,dp[x][2] + dp[d][2] - (x == 1));\n\n\t\tchkmax(dp[x][1] ,dp[d][1]);\n\t\tchkmax(dp[x][1] ,dp[d][2] + 1);\n\t\t\n\t\tchkmax(dp[x][3] ,dp[x][0] + dp[d][2] - 1);\n\t\tchkmax(dp[x][3] ,dp[x][0] + dp[d][1] - 1);\n\t\tchkmax(dp[x][3] ,dp[x][2] + dp[d][0] - 1);\n\t\tchkmax(dp[x][3] ,dp[d][3] + deg[x] - 1); // \u628a\u8def\u5f84\u7559\u4e0b\uff0c\u94fe\u4f20\u4e0a\u6765\n\t\tchkmax(dp[x][3] ,dp[d][0] + deg[x] + res - 2);\n\t\t\n\n\t\tchkmax(dp[x][2] ,dp[x][0] + dp[d][0] - 1);\n\t\t\n\t\tchkmax(dp[x][0] ,dp[d][0] + deg[x] - 1);\n\n\t\tchkmax(dp[x][2] ,dp[x][0]);\n\t\tchkmax(dp[x][3] ,dp[x][2]);\n\n\t\tchkmax(res ,dp[d][1]);\n\t\tchkmax(res ,dp[d][2]);\n\t}\n}\n\nvoid solve(){\n\tinit(n = read());\n\tif(type >= 2) read() ,read();\n\tif(type >= 1) read() ,read();\n\tfor(int i = 2 ,u ,v ; i <= n ; ++i){\n\t\tdeg[u = read()]++;\n\t\tdeg[v = read()]++;\n\t\taddedge(u ,v);\n\t\t--deg[i];\n\t}\n\tdapai(1 ,0);\n\tprintf(\"%d\\n\" ,Ans);\n\n}\n\nint main(){\n\tint T = read();\n\ttype = read();\n\twhile(T--) solve();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1591837340,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3748 \u3010[\u516d\u7701\u8054\u80032017]\u6467\u6bc1\u201c\u6811\u72b6\u56fe\u201d\u3011"
    },
    {
        "content": "## $\\text{Foreword}$\n\u300a\u5c0f\u6e05\u65b0\u300b\u6811\u5f62 dp\u3002  \n\u5176\u5b9e\u672c\u9898\u6ca1\u6709**\u90a3\u4e48**\uff08\u91cd\u8bfb\uff09\u6076\u5fc3\uff0c\u4f46\u6211\u4e00\u5f00\u59cb\u5199\u5b8c $x=0$ \u540e\u773c\u778e\u6ca1\u6709\u770b\u5230 $x=1,2$ \u65f6\u4e5f\u5fc5\u7136\u662f**\u6700\u4f18\u65b9\u6848**\uff08\u8fd9\u79cd\u4e1c\u897f\u4e0d\u9ed1\u4f53\u5417...\uff09\u53ef\u4ee5\u76f4\u63a5\u65e0\u89c6\uff0c\u8fd8\u5728\u82e6\u82e6\u7684\u5199\u5f3a\u5236\u9009\u94fe\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u88ab\u72e0\u72e0\u7684\u6076\u5fc3\u5230\u4e86\u3002  \n\u8fd9\u4e2a\u6545\u4e8b\u544a\u8bc9\u6211\u4eec\uff0c\u8981**\u4ed4\u7ec6\u5ba1\u9898**\uff01  \n\n\u611f\u89c9\u81ea\u5df1\u7684\u505a\u6cd5\u8fd8\u662f\u633a\u8212\u670d\u7684\uff0c\u867d\u7136\u6838\u5fc3\u8f6c\u79fb\u770b\u7684\u6709\u4e9b\u957f\uff08\u4e5f\u53ea\u6709 40 \u884c\u5de6\u53f3\uff09\uff0c\u4f46\u6ca1\u6709\u592a\u591a\u7684\u5206\u7c7b\u8ba8\u8bba\uff0c\u548c\u6709\u4e9b\u4ee3\u7801\u679a\u4e3e\u513f\u5b50\u7136\u540e\u76f4\u63a5\u53d6\u5341\u51e0\u884c $\\max$ \u76f8\u6bd4\u611f\u89c9\u66f4\u52a0\u9633\u95f4\u3002\n## $\\text{Solution}$\n\u9898\u610f\u7b97\u6bd4\u8f83\u7b80\u6d01\u6e05\u6670\u4e86\uff0c\u518d\u5177\u4f53\u4e00\u4e9b\u5927\u6982\u5c31\u662f\u9009\u51fa\u4e24\u6761\u53ef\u91cd\u70b9\u4e0d\u53ef\u91cd\u8fb9\u7684\u94fe\uff0c\u5c06\u6811\u5206\u5272\u6210\u5c3d\u53ef\u80fd\u591a\u7684\u8fde\u901a\u5757\u3002    \n\n\uff08\u4e00\u5f00\u59cb\u6211\u53d7 [\u5e0c\u671b](https://www.luogu.com.cn/problem/P5291) \u90a3\u4e2a\u9898\u7684\u5f71\u54cd\uff0c\u5c1d\u8bd5\u4e86\u597d\u4e00\u4f1a\u7528\u5ea6\u6570\u548c\u70b9\u6570\u7b80\u6d01\u7684\u8868\u793a\u51fa\u8fde\u901a\u5757\u6570\u76ee\u6765\u7b80\u5316 dp\uff0c\u5176\u5b9e\u662f\u5728\u73a9\u6ce5\u5df4\uff0c\u76f4\u63a5\u505a\u5c31\u5f88\u65b9\u4fbf\u3002\uff09  \n\n### $\\text{Definition}$\n\u8bbe\u7f6e\u72b6\u6001 $f_{x,i,d}$ \u8868\u793a $x$ \u8282\u70b9\u5b50\u6811\u5185\u9009\u62e9\u4e86 $i$ \u6761**\u5df2\u7ecf\u786e\u5b9a**\u7684\u94fe\uff0c**\u5b50\u6811\u5185** \u7684\u8054\u901a\u5757\u6700\u5927\u6570\u76ee\u3002  \n$d$ \u7684\u5b9a\u4e49\u6709\u4e9b\u590d\u6742\uff1a  \n\u5728 $x$ \u4f5c\u4e3a\u7236\u4eb2\u7684\u65f6\u5019\uff0c$d\\in [0,4]$ \u8868\u793a\u7684\u662f $x$ **\u88ab\u5220\u9664**\uff0c\u4e0e $x$ \u76f8\u8fde\u7684\u513f\u5b50\u7684\u4e2a\u6570\uff0c$d=5$ \u8868\u793a $x$ **\u4e0d\u88ab\u5220\u9664**\u3002  \n\u5728 $x$ \u4f5c\u4e3a\u513f\u5b50\u7684\u65f6\u5019\uff0c$d\\in [0,1]$ \u8868\u793a $x$ **\u88ab\u5220\u9664**\uff0c\u4e14\u4e0e\u7236\u4eb2\u76f8\u8fde/\u4e0d\u76f8\u8fde\u3002$d=5$ \u8868\u793a $x$ **\u4e0d\u88ab\u5220\u9664**\u3002\n### $\\text{Transfer}$\n#### Part 1\n$d=5$\uff0c$x$ \u4e0d\u5220\u65f6\uff1a$x$ \u5fc5\u7136\u4e0d\u4f1a\u548c\u513f\u5b50\u76f8\u8fde\uff0c\u513f\u5b50\u8981\u4e48\u5220\u4e86\u4f46\u4e0d\u548c\u7236\u4eb2\u8fde\uff08$d=0$\uff09\uff0c\u8981\u4e48\u6839\u672c\u4e0d\u5220 ($d=5$)\uff0c\u4e0d\u5220\u7684\u65f6\u5019\u7531\u4e8e\u7236\u5b50\u90fd\u4e0d\u5220\uff0c\u4e24\u4e2a\u8054\u901a\u5757\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u6240\u4ee5\u7b54\u6848\u8981\u51cf\u4e00\u3002\n$$f_{x,i,5}+f_{son,j,5}-1\\to f_{x,i+j,5}$$\n$$f_{x,i,5}+f_{son,j,0}\\to f_{x,i+j,5}$$\n$d\\in[0,4]$ \u65f6\uff1a$x$ \u53ef\u4ee5\u548c\u513f\u5b50\u76f8\u8fde\u4e5f\u53ef\u4ee5\u4e0d\u8fde\uff0c\u4e0d\u8fde\u7684\u65f6\u5019\u513f\u5b50\u662f\u5426\u5220\u9664\u90fd\u53ef\u4ee5\uff0c\u5bf9\u5e94\u8f6c\u79fb\u5206\u522b\u5c31\u662f\uff1a\n$$f_{x,i,d}+f_{son,j,1}\\to f_{x,i+j,d+1}$$\n$$f_{x,i,d}+f_{son,j,0}\\to f_{x,i+j,d}$$\n$$f_{x,i,d}+f_{son,j,5}\\to f_{x,i+j,d}$$\n\u8fd9\u6837 $x$ \u4ece\u6240\u6709\u513f\u5b50\u5f97\u5230\u7684\u8f6c\u79fb\u5c31\u5168\u5b8c\u4e8b\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u628a $f_{x,i,d}$ \u7684 $d$ \u7684\u5b9a\u4e49\u4ece\u201c\u7236\u4eb2\u5f62\u6001\u201d\u8f6c\u5316\u6210\u201c\u513f\u5b50\u5f62\u6001\u201d\uff0c\u4ee5\u4f7f\u5b83\u53ef\u4ee5\u7ee7\u7eed\u5411\u7236\u4eb2\u8f6c\u79fb\u3002\n#### Part 2\n$d=5$ \u65f6\uff1a$x$ \u6ca1\u9009\u5c31\u662f\u6ca1\u9009\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n$$f_{x,i,5}\\to f_{x,i,5}$$\n$d=0$ \u65f6\uff1a\u6ce8\u610f\u6211\u4eec\u4e4b\u524d\u662f**\u5f3a\u5236\u8ba9 $x$ \u88ab\u5220\u9664**\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u8ba9\u5b83\u8f6c\u79fb\u5230 $f_{x,i,0}$\u3002\u4e3a\u4e86\u5220\u9664\u5b83\uff0c\u8981\u4e48\u4f7f\u5176\u5355\u72ec\u4e00\u4e2a\u70b9\u6210\u94fe\uff0c\u8981\u4e48\u8ba9\u5b83\u6210\u4e3a\u94fe\u5c3e\u548c\u7236\u4eb2\u76f8\u8fde\uff0c\u5bf9\u5e94\u5c31\u662f\uff1a\n$$f_{x,i,0}\\to f_{x,i+1,0}$$\n$$f_{x,i,0}\\to f_{x,i,1}$$\n\n$d=2/4$ \u65f6\uff1a\u5411 $x$ \u8fde\u63a5\u7684\u5076\u6570\u6761\u8fb9\u5fc5\u7136\u4e24\u4e24\u6210\u94fe\uff1a\n$$f_{x,i,d}\\to f_{x,i+d/2,0}$$\n$d=1/3$ \u65f6\uff1a\u5355\u51fa\u6765\u7684\u4e00\u6761\u53ef\u4ee5\u628a $x$ \u5f53\u6210\u94fe\u5934\u505c\u6b62\uff0c\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u5411\u7236\u4eb2\u5ef6\u4f38\uff1a\n$$f_{x,i,d}\\to f_{x,i+d/2+1,0}$$\n$$f_{x,i,d}\\to f_{x,i+d/2,1}$$\n#### Part 3\n\u8fd9\u6837\u770b\u8d77\u6765\u5c31\u505a\u5b8c\u4e86\uff1f  \n\u4f46\u662f\u4f60\u4e00\u6d4b\u53d1\u73b0\u8fc7\u4e0d\u53bb\u6837\u4f8b\uff01  \n\u4ed4\u7ec6\u4e00\u770b\uff0c\u662f\u88ab\u4e24\u4e2a\u70b9\u4e00\u6761\u8fb9\u7684\u60c5\u51b5 $hack$ \u4e86\u3002  \n\u4e00\u822c\u7684\uff0c\u5f53\u4e00\u4e2a\u56fe\u957f\u6210\u6df1\u5ea6\u4e3a 1 \u7684\u83ca\u82b1\u7684\u65f6\u5019\uff0c\u6211\u4eec\u90fd\u4f1a\u51fa\u95ee\u9898\u3002\n\u6211\u4eec\u7f3a\u5c11\u4e86\u5728\u4e00\u4e2a\u70b9\u8fde\u7eed\u6446\u70c2\u7684\u60c5\u51b5\u3002  \n\u8fd9\u4e2a\u4e1c\u897f\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u6848\uff1a  \n\u7b2c\u4e00\u79cd\u662f**\u5f53 $x$ \u88ab\u5220\u9664**\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u539f\u5730\u591a\u9009\u51e0\u6761\u94fe\uff0c\u5373\uff1a\n$$f_{x,i,0}\\to f_{x,i+1,0}$$\n$$f_{x,i,1}\\to f_{x,i+1,1}$$\n\u7b2c\u4e8c\u79cd\u662f\u6c42\u51fa\u5ea6\u6570\u6700\u5927\u70b9\u7684\u5ea6\u6570\uff0c\u8ba9\u7b54\u6848\u548c\u8fd9\u4e2a\u5ea6\u6570\u53d6\u4e2a $\\max$\u3002  \n\u7b2c\u4e8c\u79cd\u867d\u7136\u770b\u8d77\u6765\u66f4\u52a0\u7b80\u5355\uff0c\u8dd1\u8d77\u6765\u4e5f\u7a0d\u5fae\u5feb\u4e00\u70b9\uff0c\u4f46\u5982\u679c\u5728\u8003\u573a\u4e0a\uff0c\u672c\u4eba\u8fd8\u662f\u5efa\u8bae\u7b2c\u4e00\u79cd\uff0c\u6bd5\u7adf\u591a\u8bf4\u591a\u9519\uff0c\u76f4\u63a5\u7ed9\u4e00\u4e2a\u5408\u6cd5\u8f6c\u79fb\uff0c\u8ba9 `std::max` \u505a\u51b3\u7b56\u800c\u4e0d\u662f\u81ea\u5df1\u5f52\u7eb3\u8d2a\u5fc3\uff0c\u80af\u5b9a\u66f4\u52a0\u7a33\u59a5\u3002  \n\u5982\u679c\u662f\u505a\u7ec3\u4e60\u5f53\u7136\u5c31\u7cbe\u76ca\u6c42\u7cbe\u5566\u3002\n## $\\text{Code}$\n\u4ee3\u7801\u5c31\u7b80\u5355\u4e86\uff0c\u628a\u4e0a\u9762\u7684\u8f6c\u79fb\u6572\u51fa\u6765\u5373\u53ef\u3002  \n\uff08\u6eda\u52a8\u6570\u7ec4\u65e0\u8111\u597d\u7528\uff0c\u4e0d\u4f1a\u4e92\u76f8\u8f6c\u79fb\u51fa bug\uff0c\u5f3a\u63a8\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long\n#define debug(...) fprintf(stderr,__VA_ARGS__)\n#define ok debug(\"OK\\n\")\nusing namespace std;\n\nconst int N=1e5+100;\nconst int M=2e5+100;\nconst int inf=1e9;\n\ninline ll read(){\n    ll x(0),f(1);char c=getchar();\n    while(!isdigit(c)) {if(c=='-')f=-1;c=getchar();}\n    while(isdigit(c)) {x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n    return x*f;\n}\n\nint n;\nint f[N][3][6];\nint tmp[2][3][6],now,pre;\nvector<int>v[N];\ninline void Max(int &x,int y){\n    y>x?x=y:0;return;\n}\nvoid dfs(int x,int fa){\n    for(int to:v[x]){\n        if(to==fa||vis[to]) continue;\n        dfs(to,x);\n    }\n    now=1;pre=0;\n    memset(tmp,-0x3f,sizeof(tmp));\n    tmp[now][0][5]=1;tmp[now][0][0]=0;\n    for(int s:v[x]){\n        if(s==fa||vis[s]) continue;\n        swap(now,pre);\n        memset(tmp[now],-0x3f,sizeof(tmp[now]));\n        for(int i=0;i<=2;i++){\n            for(int j=0;i+j<=2;j++){\n                Max(tmp[now][i+j][5],tmp[pre][i][5]+f[s][j][5]-1);\n                Max(tmp[now][i+j][5],tmp[pre][i][5]+f[s][j][0]);\n                for(int d=0;d<=4;d++){\n                    Max(tmp[now][i+j][d],tmp[pre][i][d]+f[s][j][0]);\n                    Max(tmp[now][i+j][d],tmp[pre][i][d]+f[s][j][5]);\n                    if(d+1<=4)Max(tmp[now][i+j][d+1],tmp[pre][i][d]+f[s][j][1]);\n                }\n            }   \n        }\n    }\n    memset(f[x],-0x3f,sizeof(f[x]));\n    for(int i=0;i<=2;i++){\n        Max(f[x][i][5],tmp[now][i][5]);\n        if(i+1<=2) Max(f[x][i+1][0],tmp[now][i][0]);\n        Max(f[x][i][1],tmp[now][i][0]);\n        for(int j=1;j<=4;j++){\n            if(j&1){\n                if(i+j/2<=2) Max(f[x][i+j/2][1],tmp[now][i][j]);\n                if(i+(j+1)/2<=2) Max(f[x][i+(j+1)/2][0],tmp[now][i][j]);\n            }\n            else if(i+j/2<=2) Max(f[x][i+j/2][0],tmp[now][i][j]);\n        }\n    }\n    for(int i=1;i<=2;i++){\n        Max(f[x][i][0],f[x][i-1][0]);\n        Max(f[x][i][1],f[x][i-1][1]);\n    }\n    return;\n}\nvoid work0(){\n    for(int i=1;i<n;i++){\n        int x=read(),y=read();\n        v[x].push_back(y);v[y].push_back(x);\n    }\n    dfs(1,0);\n    printf(\"%d\\n\",max(f[1][2][0],f[1][2][5]));\n    return;\n}\nsigned main(){\n#ifndef ONLINE_JUDGE\n    freopen(\"a.in\",\"r\",stdin);\n    freopen(\"a.out\",\"w\",stdout);\n#endif\n    int T=read(),op=read();\n    while(T--){\n        n=read();\n        for(int i=1;i<=op;i++) read(),read();\n        work0();\n        for(int i=1;i<=n;i++) v[i].clear();\n    }\n    return 0;\n}\n/*\n*/\n\n```\n\n",
        "postTime": 1647829066,
        "uid": 449265,
        "name": "wind_whisper",
        "ccfLevel": 10,
        "title": "P3748 [\u516d\u7701\u8054\u8003 2017] \u6467\u6bc1\u201c\u6811\u72b6\u56fe\u201d"
    }
]