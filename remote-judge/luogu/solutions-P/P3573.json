[
    {
        "content": "\u672c\u9898\u7684\u8981\u70b9\u662f**\u6709\u5411\u65e0\u73af\u56fe**\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u62d3\u6251\u6392\u5e8f\uff0c\u5e76$O(n)$\u6c42\u51fa\u4ee5$u$\u4e3a\u8d77\u70b9\u7684\u6700\u957f\u8def$ds_u$\u548c\u4ee5$u$\u4e3a\u7ec8\u70b9\u7684\u6700\u957f\u8def$dt_u$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7ecf\u8fc7\u8fb9$(u\\to v)$\u7684\u6700\u957f\u8def\u4e3a$dt_u+1+ds_v$\u3002\n\n\u628a\u62d3\u6251\u5e8f\u5c0f\u4e8e$i$\u7684\u8282\u70b9\u7684\u96c6\u5408\u8bb0\u4e3a$A$\uff0c\u628a\u62d3\u6251\u5e8f\u5927\u4e8e$i$\u7684\u96c6\u5408\u8bb0\u4e3a$B$\u3002\u5728\u5220\u53bb$i$\u4e4b\u540e\uff0c\u53ef\u80fd\u662f\u6700\u957f\u8def\u7684\u8def\u5f84\u6709\uff1a\n\n$A\\to A,B\\to B,A\\to B$\n\n\u6240\u4ee5\u6211\u4eec\u8981\u7ef4\u62a4$dt_u(u\\in A),ds_v(v\\in B),dt_u+1+ds_v(u\\to v)$\u7684\u6700\u5927\u503c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u5f97\u5230\u4e0a\u9762\u7684\u8def\u5f84\uff1f\u6211\u4eec\u53ef\u4ee5\u4ece\u5220\u9664$i+1$\u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\u3002\u4e0b\u9762\u662f\u8f6c\u79fb\u7684\u8fc7\u7a0b\uff1a\n\n\u4e00\u5f00\u59cb\u6570\u636e\u7ed3\u6784\u4e2d\u6709\uff1a$dt_{1,2,3},ds_{4,5,6,7},dt_2+1+ds_4,dt_3+1+ds_5$\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/977j9qwm.png)\n\n\u5220\u9664$ds_4,dt_2+1+ds_4$\uff0c\u8fd9\u65f6\u6570\u636e\u7ed3\u6784\u4e2d\u6570\u5b57\u7684\u6700\u5927\u503c\u5c31\u662f\u56fe\u7684\u6700\u957f\u8def\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/kd031fkn.png)\n\n\u5c06$dt_4,dt_4+1+ds_6,dt_4+1+ds_5$\u52a0\u5165\u6570\u636e\u7ed3\u6784\uff0c\u6210\u529f\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vt31kw3f.png)\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u521d\u59cb\u72b6\u6001\u8bbe\u4e3a\u6240\u6709\u8282\u70b9\u90fd\u5728$B$\uff0c\u7136\u540e\u6309\u62d3\u6251\u5e8f\u4e00\u4e2a\u4e2a\u52a0\u5165\u5230$A$\u4e2d\u3002\n\n\u6211\u4eec\u7684\u6570\u636e\u7ed3\u6784\u8981\u652f\u6301\u63d2\u5165\u3001\u5220\u9664\u3001\u6c42\u6700\u5927\u503c\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528multiset\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u3002\u4f46\u6211\u4eec\u8fd8\u53ef\u4ee5\u5199**\u5806**\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528$a,b$\u4e24\u4e2a\u5806\uff0c\u5206\u522b\u8868\u793a\u63d2\u5165\u548c\u5220\u9664\u7684\u64cd\u4f5c\u3002\u5f53\u6211\u4eec\u8981\u53d6\u51fa\u5806\u9876\u5143\u7d20\u65f6\uff0c\u53ef\u4ee5\u6bd4\u8f83\u4e24\u8005\u7684\u5806\u9876\u3002\u82e5\u4e24\u8005\u76f8\u540c\uff0c\u5219\u5f39\u51fa\u4e24\u8005\u3002\u5426\u5219$a$\u7684\u5806\u9876\u5143\u7d20\u5c31\u662f\u771f\u6b63\u7684\u5806\u9876\u5143\u7d20\u3002\n\n```cpp\nstruct Queue{\n\tpriority_queue<int>a,b;int sz;\n\tvoid push(int x){a.push(x),++sz;}\n\tvoid pop(int x){b.push(x),--sz;}\n\tint top(){\n\t\twhile(!b.empty()&&a.top()==b.top())a.pop(),b.pop();\n\t\treturn sz>0?a.top():-INF;\n\t}\n}Q;//\u53ef\u5220\u5806\n```\n\n\u4e0b\u9762\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u590d\u6742\u5ea6\uff1a\u521d\u59cb\u5316+\u62d3\u6251\u6392\u5e8f$O(n+m)$\uff0c\u6bcf\u4e2a\u70b9\u548c\u8fb9\u90fd\u52a0\u5165\u548c\u5220\u9664\u8fc7\u4e00\u6b21\uff0c\u603b\u590d\u6742\u5ea6$O((n+m)\\log(n+m))$\u3002\n\n~~\u6bd4\u7528multiset\u548c\u6743\u503c\u7ebf\u6bb5\u6811\u90fd\u8dd1\u5f97\u6162\uff0c\u679c\u7136\u662f\u4eba\u5f31\u81ea\u5e26\u5927\u5e38\u6570\u3002~~\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<stdio.h>\n#include<queue>\nusing namespace std;\nint rd(){\n\tint k=0,f=1;char c=getchar();\n\twhile(c>'9'||c<'0'){if(c=='-')f=0;c=getchar();}\n\twhile(c>='0'&&c<='9')k=k*10+c-'0',c=getchar();\n\treturn f?k:-k;\n}\nconst int N=500001;\nint Max(int x,int y){return x>y?x:y;}\nint Min(int x,int y){return x<y?x:y;}\nstruct E{int v,nxt;}e[N<<1]; \nstruct Queue{\n\tpriority_queue<int>a,b;\n\tvoid push(int x){a.push(x);}\n\tvoid pop(int x){b.push(x);}\n\tint top(){while(!b.empty()&&a.top()==b.top())a.pop(),b.pop();return a.top();}\n}Q;//\u53ef\u5220\u5806\nint n,m,h[N],H[N],cnt,u,v,ds[N],dt[N],I[N],a[N],T,w,ans;queue<int>q;\nvoid add(int u,int v,int*head){e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;}\nint main(){\n\tfreopen(\"data.in\",\"r\",stdin);\n\tfreopen(\"data.out\",\"w\",stdout);\n\tn=rd(),m=rd();\n\tfor(int i=1;i<=m;++i)u=rd(),v=rd(),add(u,v,h),add(v,u,H),++I[v];\n\tfor(int i=1;i<=n;++i)if(!I[i])q.push(i);\n\twhile(!q.empty()){\n\t\tu=q.front(),q.pop(),a[++T]=u;\n\t\tfor(int i=h[u];i;i=e[i].nxt)if(--I[v=e[i].v]==0)q.push(v); \n\t}//\u62d3\u6251\u6392\u5e8f\n\tfor(int i=1;i<=n;++i){\n\t\tu=a[i];\n\t\tfor(int i=h[u];i;i=e[i].nxt)v=e[i].v,dt[v]=Max(dt[v],dt[u]+1);\n\t}\n\tfor(int i=n;i;--i){\n\t\tu=a[i];\n\t\tfor(int i=H[u];i;i=e[i].nxt)v=e[i].v,ds[v]=Max(ds[v],ds[u]+1);\n\t}//\u6c42dt,ds\n\tfor(int i=1;i<=n;++i)Q.push(ds[i]);\n\tans=Q.top();\n\tfor(int j=1;j<=n;++j){\n\t\tu=a[j],Q.pop(ds[u]);\n\t\tfor(int i=H[u];i;i=e[i].nxt)Q.pop(dt[e[i].v]+ds[u]+1);//\u5220\u9664\u70b9\u548c\u8fb9\n\t\tT=Q.top();\n\t\tif(T<=ans)ans=T,w=u;//\u66f4\u65b0\u7b54\u6848\n\t\tfor(int i=h[u];i;i=e[i].nxt)Q.push(dt[u]+ds[e[i].v]+1);\n\t\tQ.push(dt[u]);//\u63d2\u5165\u70b9\u548c\u8fb9\n\t}\n\tprintf(\"%d %d\\n\",w,ans);\n\treturn 0;\n}\n```",
        "postTime": 1569652305,
        "uid": 68467,
        "name": "xcxcli",
        "ccfLevel": 0,
        "title": "[POI2014]RAJ-Rally"
    },
    {
        "content": "\u6765[Dew](https://www.cnblogs.com/ppprseter/p/9602576.html)\u7684\u535a\u5ba2\u89c2\u770b\uff1f\n\n\u597d\u795e\u4ed9\u7684\u4e00\u9053\u9898\u76ee\uff01\n\n\u4e00\u822c\u6765\u8bf4\u4e00\u4e9b\u5220\u8fb9\u5220\u70b9\u7684\u4e1c\u897f\u5728\u7edf\u8ba1\u7edf\u8ba1\u4fe1\u606f\u4ec0\u4e48\u7684\u5728\u56fe\u4e0a\u90fd\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u5e94\u8be5\u627e\u4e00\u627e\u8fd9\u4e2a\u9898\u7684\u7279\u6b8a\u6027\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u91cd\u70b9\u5728\u8fd9\u4e2a\u56fe\u662fDAG\u3002\n\n\u6709\u4e86DAG\uff0c\u6211\u4eec\u53ef\u4ee5$O(n)$\u6c42\u51fa\u5355\u6e90\u70b9\u6700\u957f\u8def\u4ec0\u4e48\u7684\n\n\u7136\u800c\u8fd9\u4e2a\u56fe\u7684\u6700\u957f\u8def\u548b\u6c42\u5462\uff1f\u5176\u5b9e\u8fd9\u4e2a\u4e0d\u96be\uff0c\u7edf\u8ba1\u901a\u8fc7\u6bcf\u6761\u8fb9\u7684\u6700\u957f\u8def\uff0c\u53d6\u6700\u5927\u503c\u5c31\u884c\u4e86\n\n\u8bbe$diss_i$\u8868\u793a\u4ee5$i$\u4e3a\u5f00\u5934\u7684\u6700\u957f\u8def\uff0c$dist_i$\u8868\u793a\u4ee5$i$\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u8def\uff0c\u4e3a\u8d77\u70b9\u7684\u53cd\u5411\u8dd1\u4e00\u904d\u5c31\u53ef\u4ee5\u5f97\u5230\n\n\u901a\u8fc7\u67d0\u6761\u8fb9$E=(u,v)$\u7684\u6700\u957f\u8def\u7b49\u4ef7\u4e8e$dist_u+diss_v+1$\n\ntopo\u56fe\u8fd8\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u6309\u7167topo\u5e8f\u53d6\u51fa\u4e00\u90e8\u5206\u8fde\u7eed\u7684\u70b9\u4f5c\u4e3a$S$\u96c6\uff0c\u5269\u4e0b\u7684\u4f5c\u4e3a$T$\u96c6\uff0c\u5219\u4e24\u4e2a\u96c6\u5408\u7684\u76f8\u4e92\u8fde\u8fb9\u53ea\u6709\u4e00\u4e9b$S$\u5230$T$\u7684\n\n![](http://m.qpic.cn/psb?/V14VFGnz4fbJRr/byyAHvWRFVeoUGIBkDHICtEmxF.vDwp4w7XfQbe.wc4!/b/dFMBAAAAAAAA&bo=fwKBAX8CgQEDCSw!&rf=viewer_4)\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8282\u70b9\u7f16\u53f7\u5c31\u662ftopo\u5e8f\uff0c\u7ea2\u8fb9\u4e3a$S$\u8fde\u5411$T$\u7684\u8fb9\n\n\u8fd9\u542f\u53d1\u6211\u4eec\u6309\u7167\u62d3\u6251\u5e8f\u8fdb\u884c\u5220\u70b9\uff0c\u6211\u4eec\u5148\u5047\u8bbe\u6240\u6709\u7684\u70b9\u5728$T$\u96c6\uff0c\u8fd9\u6837\u6700\u957f\u8def\u5c31\u662f$max diss_i$\n\n\u6211\u4eec\u6309topo\u5e8f\u62ff\u8d70\u70b9\uff0c\u5220\u6389\u6709\u5173\u8d21\u732e\u7684\u8fb9\uff0c\u7edf\u8ba1\u7b54\u6848\uff0c\u52a0\u5165\u6709\u5173\u8d21\u732e\u7684\u8fb9\uff0c\u7136\u540e\u52a0\u5165$S$\u96c6\n\n\u8fd9\u6837\u8bf4\u8d77\u6765\u4e00\u70b9\u4e5f\u4e0d\u6e05\u695a\uff0c\u6211\u4eec\u7ed3\u5408\u56fe\u5f62\u8bf4\u660e\n\n![](http://m.qpic.cn/psb?/V14VFGnz4fbJRr/D0PFA37UFuITQxVwf1QiD4vlDG0LFmVPmYTc*6eQ5oI!/b/dEYBAAAAAAAA&bo=ZgJ9AWYCfQEDGTw!&rf=viewer_4)\n\n\u73b0\u5728\u6b63\u5728\u5220\u70b94\uff0c\u770b\u770b\u6709\u90a3\u4e9b\u8fb9\u53ef\u4ee5\u4f5c\u4e3a\u7b54\u6848\u3002\n\n\u9996\u5148$S$\u96c6\u5408\u91cc\u9762\u7684\u8fb9\u7684\u6700\u957f\u957f\u5ea6\uff0c\u4f46\u4e0d\u53ef\u4ee5\u8de8\u8d8a\u4e24\u4e2a\u96c6\u5408\u5373 $max_{i \\in S} dist_i$\uff0c\u5f53\u71364\u7684\u4e0d\u7b97\n\n\u7136\u540e\u8de8\u8d8a$S,T$\u96c6\u5408\u7684\u8fb9\u5373 $max_{E(u,v),u \\in S,v \\in T} dist_u+diss_v+1$\n\n\u6700\u540e\u662f\u96c6\u5408$T$\u7684\uff0c\u5176\u5b9e\u4e5f\u5dee\u4e0d\u591a\uff0c\u4e0d\u8d58\u8ff0\u4e86\n\n\u6211\u4eec\u9996\u5148\u5728$T$\u96c6\u5408\u7684\u53ea\u6709\u6700\u540e\u4e00\u79cd\u7684\u7b54\u6848\uff0c\u53d1\u73b0\u7b2c\u4e00\u79cd\u7684\u7b54\u6848\u53ef\u4ee5\u5728\u628a\u70b9\u6254\u8fdb$S$\u7684\u65f6\u5019\u66f4\u65b0\uff0c\u800c\u591a\u4f59\u7684$T$\u7684\u7b54\u6848\u53ef\u4ee5\u5728\u6bcf\u6b21\u5220\u70b9\u65f6\u5220\u6389\n\n\u7b2c\u4e8c\u79cd\u8fb9\u5176\u5b9e\u4e5f\u597d\u7edf\u8ba1\uff0c\u5728\u70b9\u8fdb\u53bb\u7684\u65f6\u5019\u51fa\u8fb9\u90fd\u653e\u8fdb\u7b54\u6848\uff0c\u5f53\u8fd9\u4e2a\u51fa\u8fb9\u5bf9\u7684\u70b9\u8fdb\u5165$S$\u7684\u65f6\u5019\u628a\u8fb9\u7684\u7b54\u6848\u53bb\u6389\n\n\u8fd9\u4e48\u8bf4\u53ef\u80fd\u8fd8\u662f\u6709\u70b9\u62bd\u8c61\uff0c\u8fd8\u662f\u62ff4\u4e3e\u4e2a\u4f8b\u5b50\n\n\u7b2c\u4e00\u6b65\uff0c\u5220\u53bb$diss_4$\n\n\u7b2c\u4e8c\u6b65\uff0c\u5220\u53bb$diss_4+dist_{1/2/3}+1$\u8fd9\u4e09\u4e2a\n\n\u7b2c\u4e09\u6b65\uff0c\u7edf\u8ba1\u6700\u5927\u503c\n\n\u7b2c\u56db\u6b65\uff0c\u52a0\u5165$dist_4+diss_{6/7}+1$\u8fd9\u4e24\u4e2a\n\n\u7b2c\u4e94\u6b65\uff0c\u52a0\u5165$dist_4$\n\n\u5173\u4e8e\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8fb9\u6743\u5f88\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u62ff\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u4e5f\u53ef\u4ee5\u62ff\u5806\u7ef4\u62a4\n\n\u5176\u5b9e\u601d\u60f3\u4e0a\u6211\u8bf4\u5f97\u4e5f\u4e0d\u7b97\u6e05\u695a\uff0c\u53ea\u662f\u5927\u6982\u628a\u8fc7\u7a0b\u8bb2\u6e05\u695a\u4e86\n\n-------------\n**Code:**\n```cpp\n#include <cstdio>\n#include <vector>\nconst int N=1e6+10;\nint head[N],to[N<<1],Next[N<<1],cnt;\nvoid add(int u,int v)\n{\n    to[++cnt]=v,Next[cnt]=head[u],head[u]=cnt;\n}\nstd::vector <int > To[N];\nint q[N],n,m,in[N],topo[N],tot;\nvoid toposort()\n{\n    int l=1,r=0;\n    for(int i=1;i<=n;i++)\n        if(!in[i]) topo[++tot]=i,q[++r]=i;\n    while(l<=r)\n    {\n        int u=q[l++];\n        for(int i=head[u];i;i=Next[i])\n        {\n            int v=to[i];\n            --in[v];\n            if(!in[v]) q[++r]=v,topo[++tot]=v;\n        }\n    }\n}\nint diss[N],dist[N];\n#define ls ch[now][0]\n#define rs ch[now][1]\nint max(int x,int y){return x>y?x:y;}\nvoid DP()\n{\n    for(int k=1;k<=n;k++)\n    {\n        int u=topo[k];\n        for(int i=head[u];i;i=Next[i])\n        {\n            int v=to[i];\n            dist[v]=max(dist[v],dist[u]+1);\n        }\n    }\n    for(int k=n;k;k--)\n    {\n        int u=topo[k];\n        for(int i=0;i<To[u].size();i++)\n        {\n            int v=To[u][i];\n            diss[v]=max(diss[v],diss[u]+1);\n        }\n    }\n}\nvoid init()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int u,v,i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&u,&v);\n        add(u,v),++in[v],To[v].push_back(u);\n    }\n    toposort();\n    DP();\n}\nint ch[N<<2][2],sum[N<<2],root;\nvoid change(int &now,int l,int r,int pos,int delta)\n{\n    if(!now) now=++tot;\n    if(l==r) {sum[now]+=delta;return;}\n    int mid=l+r>>1;\n    if(pos<=mid) change(ls,l,mid,pos,delta);\n    else change(rs,mid+1,r,pos,delta);\n    sum[now]=sum[ls]+sum[rs];\n}\nint query(int now,int l,int r)\n{\n    if(l==r) return l;\n    int mid=l+r>>1;\n    if(sum[rs]) return query(rs,mid+1,r);\n    else return query(ls,l,mid);\n}\nvoid work()\n{\n    tot=0;int mx,id,ans=0x7fffffff;\n    for(int i=1;i<=n;i++)\n        change(root,0,n,diss[i],1);\n    for(int i=1;i<=n;i++)\n    {\n        int now=topo[i];\n        change(root,0,n,diss[now],-1);\n        for(int j=0;j<To[now].size();j++)\n        {\n            int v=To[now][j];\n            change(root,0,n,diss[now]+dist[v]+1,-1);\n        }\n        if((mx=query(root,0,n))<ans) ans=mx,id=now;\n        for(int j=head[now];j;j=Next[j])\n        {\n            int v=to[j];\n            change(root,0,n,dist[now]+diss[v]+1,1);\n        }\n        change(root,0,n,dist[now],1);\n    }\n    printf(\"%d %d\\n\",id,ans);\n}\nint main()\n{\n    init(),work();\n    return 0;\n}\n\n```",
        "postTime": 1536283247,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3573 \u3010[POI2014]RAJ-Rally\u3011"
    },
    {
        "content": "\u548c\u5176\u4ed6\u9898\u89e3\u6709\u70b9\u4e0d\u4e00\u6837\uff08~~\u66f4\u7e41\u7410\u4e86~~\uff09\n\n------------\n\u5148\u7528$topo$\u5c06\u6bcf\u4e2a\u70b9\u7684\u62d3\u6251\u5e8f\u6c42\u51fa\u6765\uff0c\u518d\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9$S$\uff0c\u8d85\u7ea7\u6c47\u70b9$T$\uff0c\u6b63\u53cd\u5efa\u56fe\u8dd1\u4e24\u904d$topo$\uff0c\u6c42\u51fa$S_x,S_y$\uff0c\u5206\u522b\u8868\u793a\u6e90\u70b9\u5230\u70b9$x$\u7684\u6700\u957f\u8def\u548c\u70b9$x$\u5230\u6c47\u70b9\u7684\u6700\u957f\u8def\n\n\u8fd9\u6837\u5bf9\u4e8e\u4e00\u6761\u8fb9$(x\\rightarrow y)$\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u662f\u5728\u6700\u957f\u94fe\u4e0a\uff0c\u90a3\u4e48\u6700\u957f\u94fe\u7684\u957f\u5ea6\u4e3a$S_x+T_y+1$\n\n\u540c\u65f6\uff0c\u56e0\u4e3a\u56fe\u662f$DAG$\uff0c\u6240\u4ee5\u53ea\u4f1a\u4ece\u62d3\u6251\u5e8f\u4f4e\u7684\u70b9\u8d70\u5411\u62d3\u6251\u5e8f\u9ad8\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6211\u4eec\u8d70\u4e86\u8fb9$(x\\rightarrow y)$\uff0c\u90a3\u4e48\u62d3\u6251\u5e8f\u5728\u70b9$x$\u7684\u62d3\u6251\u5e8f\u548c\u70b9$y$\u7684\u62d3\u6251\u5e8f\u4e4b\u95f4\u7684\u70b9\uff0c\u6211\u4eec\u662f\u4e0d\u53ef\u80fd\u8d70\u7684\uff0c\u5c31\u7b49\u4e8e\u5220\u9664\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ed9\u8fd9\u4e2a\u533a\u95f4\u6807\u8bb0\u6253\u4e0a$S_x+T_y+1$\n\n\u4f46\u8fd8\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u5220\u9664\u70b9$x$\u540e\uff0c\u6700\u957f\u94fe\u662f\u5728\u62d3\u6251\u5e8f\u5c0f\u4e8e\u6216\u5927\u4e8e\u70b9$x$\u7684\u4e00\u4e9b\u70b9\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u6c42\u51fa$1$\u5230$x-1$\u4e2d\u7684\u6700\u5927$S_i$\u548c$x+1$\u5230$n$\u4e2d\u7684\u6700\u5927$T_i$\n\n## code\n```\n#include<bits/stdc++.h>\n#define maxn 2000005\nusing namespace std;\nconst int INF=1<<30;\nint m,n,x,T_in[maxn],Q[maxn],L,R,Ans=INF,ans,id[maxn],Cnt,dis[2][maxn],S,T,q[maxn],Tt,nxt[maxn],son[maxn],lnk[maxn],tot,f[maxn],F[maxn];\nbool vis[maxn];\nstruct lc{\n\tint L,R,x,k;\n}tree[maxn];\nstruct Lc{\n\tint x,y;\n}e[maxn];\ninline int read(){\n\tint ret=0;char ch=getchar();\n\twhile (ch<'0'||ch>'9') ch=getchar();\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret;\n}\ninline void add(int x,int y){nxt[++tot]=lnk[x];lnk[x]=tot;son[tot]=y;T_in[y]++;}\ninline void Topo(){\n\tint hed=0,til=0;\n\tfor (int i=1;i<=m;i++) add(e[i].x,e[i].y);\n\tfor (int i=2;i<n;i++) add(1,i);\n\tCnt=id[1]=vis[1]=Q[++til]=1;dis[0][1]=-1;\n\twhile (hed<til){\n\t\thed++;\n\t\tfor (int i=lnk[Q[hed]];i;i=nxt[i])\n\t\t  if (!vis[son[i]]){\n\t\t  \tT_in[son[i]]--;dis[0][son[i]]=max(dis[0][son[i]],dis[0][Q[hed]]+1);\n\t\t  \tif (!T_in[son[i]]) Q[++til]=son[i],vis[son[i]]=1,id[son[i]]=++Cnt,q[++Tt]=son[i];\n\t\t  }\n\t}\n\tmemset(lnk,0,sizeof lnk);memset(vis,0,sizeof vis);memset(T_in,0,sizeof T_in);\n\thed=til=tot=0;\n\tfor (int i=1;i<=m;i++) add(e[i].y,e[i].x);\n\tfor (int i=2;i<n;i++) add(n,i);\n\tvis[n]=Q[++til]=n;dis[1][n]=-1;\n\twhile (hed<til){\n\t\thed++;\n\t\tfor (int i=lnk[Q[hed]];i;i=nxt[i])\n\t\t  if (!vis[son[i]]){\n\t\t  \tT_in[son[i]]--;dis[1][son[i]]=max(dis[1][son[i]],dis[1][Q[hed]]+1);\n\t\t  \tif (!T_in[son[i]]) Q[++til]=son[i],vis[son[i]]=1;\n\t\t  }\n\t}\n}\ninline void down(int k){\n\ttree[k<<1].k=max(tree[k<<1].k,tree[k].k);\n\ttree[k<<1|1].k=max(tree[k<<1|1].k,tree[k].k);\n\ttree[k<<1].x=max(tree[k<<1].x,tree[k].k);\n\ttree[k<<1|1].x=max(tree[k<<1|1].x,tree[k].k);\n\ttree[k].k=0;\n}\ninline void Build(int k,int L,int R){\n\ttree[k].L=L,tree[k].R=R;\n\tif (L==R) return;\n\tint mid=L+R>>1;\n\tBuild(k<<1,L,mid);Build(k<<1|1,mid+1,R);\n}\ninline void Change(int k){\n\tif (tree[k].L>=L&&tree[k].R<=R){\n\t\ttree[k].x=max(tree[k].x,x);\n\t\ttree[k].k=max(tree[k].k,x);\n\t\treturn;\n\t}\n\tif (tree[k].k) down(k);\n\tint mid=tree[k].L+tree[k].R>>1;\n\tif (L<=mid) Change(k<<1);\n\tif (R>mid) Change(k<<1|1);\n\ttree[k].x=max(tree[k<<1].x,tree[k<<1|1].x);\n}\ninline int Get(int k,int x){\n\tif (tree[k].L==tree[k].R) return tree[k].x;\n\tif (tree[k].k) down(k);\n\tint mid=tree[k].L+tree[k].R>>1;\n\tif (x<=mid) return Get(k<<1,x);\n\telse return Get(k<<1|1,x);\n}\nint main(){\n\tn=read()+2,m=read();S=1,T=n;\n\tfor (int i=1;i<=m;i++) e[i]=(Lc){read()+1,read()+1};\n\tTopo();Build(1,1,n);\n\tfor (int i=2;i<=Tt;i++) f[i]=max(f[i-1],dis[0][q[i-1]]);\n\tfor (int i=Tt-1;i;i--) F[i]=max(F[i+1],dis[1][q[i+1]]);\n\tfor (int i=1;i<=m;i++){\n\t\tx=dis[0][e[i].x]+dis[1][e[i].y]+1;\n\t\tL=id[e[i].x]+1,R=id[e[i].y]-1;\n\t\tif (L<=R) Change(1);\n\t}\n\tfor (int i=2;i<n;i++){\n     \tint Now=Get(1,id[i]);if (Now==INF) Now=0;\n\t\tif (max(f[id[i]-1],max(F[id[i]-1],Now))<Ans) Ans=max(f[id[i]-1],max(F[id[i]-1],Now)),ans=i;\n    }\n\tprintf(\"%d %d\",ans-1,Ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1596602294,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3573 \u3010[POI2014]RAJ-Rally\u3011"
    },
    {
        "content": "\u5efa\u7acb\u8d85\u7ea7\u6e90\u6c47$S$\u548c$T$\uff0cDP\u6c42\u51fa\u5206\u522b\u4ee5$S$\u548c$T$\u4e3a\u6e90\u70b9\u7684\u6700\u957f\u8def$diss$\u548c$dist$\u3002\n\n\u5bf9\u4e8e\u6bcf\u6761\u8fb9$i$\uff0c\u8bbe\u5b9a\u4e00\u4e2a\u6743\u503c$w_i=diss_{i.from}+dist_{i.to}-1$\u3002\n\n\u8868\u793a\u539f\u56fe\u4e2d\u5305\u542b\u8fd9\u6761\u8fb9\u7684\u4ece$S$\u5230$T$\u7684\u6700\u957f\u8def\u3002\n\n\u7136\u540e\u6309\u7167\u62d3\u6251\u5e8f\u5220\u70b9$x$\uff0c\u7528\u5806\u7ef4\u62a4\u4e0d\u5305\u542b$x$\u7684\u6700\u957f\u8def\u957f\u5ea6\u3002\n\n\u7136\u800c\u4e00\u6b21\u6027\u4e0d\u80fd\u628a\u6240\u6709\u8fb9\u653e\u8fdb\u53bb\uff0c\u4e0d\u7136\u4f1aMLE\u4e00\u4e2a\u70b9\uff08\u56e0\u4e3a\u8fd9\u4e2a\u8c03\u4e86\u4e00\u4e2a\u665a\u4e0a\uff09\u3002\n\n\u5e94\u8be5\u5728\u6362$x$\u7684\u65f6\u5019\uff0c\u628a\u8001$x$\u7684\u51fa\u8fb9\u91cd\u65b0\u52a0\u5165\uff0c\u5e76\u5c06\u65b0$x$\u7684\u5165\u8fb9\u5220\u53bb\u3002\n\n\u6ce8\u610f\u5f00\u7684\u6570\u7ec4\u4e0d\u80fd\u592a\u591a\uff0c\u80fd\u5408\u5e76\u7684\u4fe1\u606f\u5c3d\u91cf\u5408\u5e76\uff0c\uff08\u6bd4\u5982\u6240\u6709\u8fb9\u6b63\u53cd\u8fb9\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\uff0c\u53d6\u503c\u7684\u65f6\u5019\u7528\u5f02\u6216\uff09\uff0c\u4e0d\u7136\u628a\u5806\u4fee\u6539\u4ee5\u540e\u8fd8\u662f\u4f1aMLE\u3002\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cctype>\n#include<vector>\n#include<ext/pb_ds/priority_queue.hpp>\ninline int getint() {\n    register char ch;\n    while(!isdigit(ch=getchar()));\n    register int x=ch^'0';\n    while(isdigit(ch=getchar())) x=(((x<<2)+x)<<1)+(ch^'0');\n    return x;\n}\nconst int inf=0x7fffffff;\nconst int V=500002,E=2000000;\nstruct Edge {\n    int from,to;\n};\nEdge e[E];\nint w[E];\nint s,t;\nint n,m;\nstd::vector<int> eids[V],eidt[V];\nint inds[V]={0},indt[V]={0};\ninline void add_edge(const int u,const int v,int *ind,std::vector<int> *eid,const int i) {\n    eid[u].push_back(i);\n    ind[v]++;\n}\nint diss[V]={0},dist[V]={0};\nstd::queue<int> top;\ninline void Kahn(const int s,std::vector<int> *eid,int *dis,int *ind,const int op=0) {\n    std::queue<int> q;\n    q.push(s);\n    while(!q.empty()) {\n        int x=q.front();\n        q.pop();\n        if(op) top.push(x);\n        for(register unsigned i=0;i<eid[x].size();i++) {\n            int y=e[eid[x][i]].from^e[eid[x][i]].to^x;\n            dis[y]=std::max(dis[y],dis[x]+1);\n            if(!--ind[y]) q.push(y);\n        }\n    }\n}\n__gnu_pbds::priority_queue<int> q;\n__gnu_pbds::priority_queue<int>::point_iterator p[E];\nint v,ans=inf;\nint cnt=0;\ninline void solve() {\n    while(!top.empty()) {\n        int x=top.front();\n        top.pop();\n        for(register unsigned i=0;i<eidt[x].size();i++) {\n            q.erase(p[eidt[x][i]]);\n        }\n        if(!q.empty()) {\n            if((x!=s)&&(x!=t)&&(q.top()<ans)) {\n                ans=q.top();\n                v=x;\n            }\n        }\n        for(register unsigned i=0;i<eids[x].size();i++) {\n            p[eids[x][i]]=q.push(w[eids[x][i]]);\n        }\n    }\n}\nint main() {\n    n=getint(),m=getint();\n    s=0,t=n+1;\n    for(register int i=1;i<=n;i++) {\n        e[cnt].from=s,e[cnt].to=i;\n        add_edge(s,i,inds,eids,cnt);\n        add_edge(i,s,indt,eidt,cnt);\n        cnt++;\n    }\n    for(register int i=0;i<m;i++) {\n        int &u=e[cnt].from=getint(),&v=e[cnt].to=getint();\n        add_edge(u,v,inds,eids,cnt);\n        add_edge(v,u,indt,eidt,cnt);\n        cnt++;\n    }\n    for(register int i=1;i<=n;i++) {\n        e[cnt].from=i,e[cnt].to=t;\n        add_edge(i,t,inds,eids,cnt);\n        add_edge(t,i,indt,eidt,cnt);\n        cnt++;\n    }\n    Kahn(s,eids,diss,inds,1);\n    Kahn(t,eidt,dist,indt);\n    for(register int i=0;i<cnt;i++) {\n        w[i]=diss[e[i].from]+dist[e[i].to]-1;\n    }\n    solve();\n    printf(\"%d %d\\n\",v,ans);\n    return 0;\n}\n```",
        "postTime": 1503537911,
        "uid": 10086,
        "name": "skylee",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3573 \u3010[POI2014]RAJ-Rally\u3011"
    },
    {
        "content": "> \u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684 DAG\uff0c\u6bcf\u6761\u8fb9\u957f\u5ea6\u5747\u4e3a $1$\uff0c\u627e\u5230\u4e00\u4e2a\u70b9\u4f7f\u5f97\u5220\u6389\u8fd9\u4e2a\u70b9\u540e\u56fe\u4e2d\u7684\u6700\u957f\u8def\u5f84\u6700\u77ed\u3002\n\n\u597d\u9898\uff0c\u597d\u9898\u3002\u770b\u5230 DAG\uff0c\u9996\u5148\u60f3\u5230\u62d3\u6251\u6392\u5e8f\u3002\u5148\u5bf9 DAG \u62d3\u6251\u6392\u5e8f\u4e00\u904d\uff0c\u7136\u540e\u6c42\u51fa\u5206\u522b\u4ee5 $i$ \u53f7\u70b9\u4e3a\u5f00\u5934\u4e0e\u7ed3\u5c3e\u7684\u6700\u957f\u8def\u5f84 $S_i$ \u548c $T_i$\u3002\u90a3\u4e48\u5bf9\u4e8e\u539f\u56fe\u4e2d\u7684\u4e00\u6761\u8fb9 $u \\to v$\uff0c\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u7684\u6700\u957f\u8def\u5f84\u7684\u957f\u5ea6\u4e3a $S_u + T_v + 1$\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4e0b\u6027\u8d28\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $i$\uff0c\u8bbe\u62d3\u6251\u5e8f\u5728\u5176\u4e4b\u524d\u7684\u70b9\u70b9\u96c6\u4e3a $S$\uff0c\u62d3\u6251\u5e8f\u5728\u5176\u4e4b\u540e\u7684\u70b9\u70b9\u96c6\u4e3a $T$\u3002\u663e\u7136\u5bf9\u4e8e\u4efb\u610f $u \\in S$\uff0c\u4ee5 $u$ \u4e3a\u7ed3\u5c3e\u8fc7\u70b9 $i$\uff1b\u540c\u7406\uff0c\u5bf9\u4e8e\u4efb\u610f $v \\in T$\uff0c\u4ee5 $v$ \u4e3a\u5f00\u5934\u7684\u6700\u957f\u8def\u5f84\u4e5f\u4e00\u5b9a\u4e0d\u7ecf\u8fc7 $i$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6309\u7167\u62d3\u6251\u5e8f\u679a\u4e3e $i$\uff0c\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u5220\u6389\u70b9 $i$ \u540e\u7684\u6700\u957f\u8def\u3002\u521d\u59cb\u65f6\u6240\u6709\u70b9\u5747\u89c6\u4e3a\u5728 $T$ \u4e2d\uff0c\u5bf9\u4e8e $S$ \u548c $T$ \u4e2d\u7684\u6700\u957f\u8def\uff0c\u56e0\u4e3a\u6709\u521a\u624d\u7684\u90a3\u6761\u6027\u8d28\uff0c\u6240\u4ee5\u5728 $i$ \u79fb\u51fa $T$ \u7684\u65f6\u5019\u5220\u9664 $T_i$\uff0c\u52a0\u5165 $S$ \u7684\u65f6\u5019\u63d2\u5165 $S_i$ \u5373\u53ef\u3002\u7136\u540e\u8003\u8651\u5982\u4f55\u7ef4\u62a4 $S \\to T$ \u7684\u6700\u957f\u8def\uff0c\u4eff\u7167\u4e0a\u9762\u7684\u505a\u6cd5\uff0c\u5f53 $i$ \u79fb\u51fa $T$ \u65f6\u5220\u9664\u6307\u5411 $i$ \u7684\u6240\u6709\u8fb9\uff0c\u5f53 $i$ \u8fdb\u5165 $S$ \u7684\u65f6\u5019\u63d2\u5165 $i$ \u7684\u6240\u6709\u51fa\u8fb9\u5373\u53ef\u3002\n\n\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u5220\u9664\u4e00\u4e2a\u6570\uff0c\u67e5\u8be2\u6700\u5927\u503c\u3002\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0cmultiset \u6216\u662f\u61d2\u60f0\u5220\u9664\u7684\u5806\u3002\u4ee3\u7801\u4e2d\u5199\u7684\u662f\u61d2\u60f0\u5220\u9664\u7684\u5806\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)\\log(n+m))$\u3002\n\n```cpp\n#include <set>\n#include <queue>\n#include <cmath>\n#include <vector>\n#include <cstdio>\n#include <cstddef>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define int long long\n#define pii pair<int, int>\n#define mp make_pair\nusing namespace std;\n \ninline int read() {\n\tint x = 0, w = 1;char ch = getchar();\n\twhile (ch > '9' || ch < '0') { if (ch == '-')w = -1;ch = getchar(); }\n\twhile (ch >= '0' && ch <= '9')x = x * 10 + ch - '0', ch = getchar();\n\treturn x * w;\n}\ninline void write(int x) {\n    if (x < 0) putchar('-'), x = -x;\n    if (x > 9) write(x / 10);\n    putchar(x % 10 + '0');\n}\n \nconst int maxn = 5e5 + 5;\nconst int maxm = 255;\nconst int mod = 1e9 + 7;\nconst int inf = 0x3f3f3f3f3f3f3f;\n \ninline int min(int x, int y) { return x < y ? x : y; }\ninline int max(int x, int y) { return x > y ? x : y; }\n\nstruct node {\n\tint nxt, to;\n} edge[maxn << 1], edge1[maxn << 1];\nint n, m, tot, tot1, cnt, tmp, head[maxn], head1[maxn];\nint ans, len, deg[maxn], a[maxn], ds[maxn], dt[maxn];\n\nstruct Queue {\n\tpriority_queue <int> a, b;\n\tinline void push(int x) {\n\t\ta.push(x);\n\t}\n\tinline void pop(int x) {\n\t\tb.push(x);\n\t}\n\tinline int top() {\n\t\twhile (!b.empty() && a.top() == b.top()) a.pop(), b.pop();\n\t\treturn a.top();\n\t}\n} Q;\nqueue <int> q;\n\ninline void addedge(int u, int v) {\n\tedge[++tot] = (node){ head[u], v }, head[u] = tot;\n}\ninline void addedge1(int u, int v) {\n\tedge1[++tot1] = (node){ head1[u], v }, head1[u] = tot1;\n}\n\nsigned main(void) {\n\tn = read(), m = read();\n\tfor (int i = 1, u, v;i <= m;i++) {\n\t\tu = read(), v = read();\n\t\taddedge(u, v), addedge1(v, u), deg[v]++;\n\t} \n\tfor (int i = 1;i <= n;i++) if (!deg[i]) a[++cnt] = i;\n\tfor (int i = 1, u;i <= cnt;i++) {\n\t\tu = a[i];\n\t\tfor (int p = head[u];p;p = edge[p].nxt) {\n\t\t\tint v = edge[p].to;\n\t\t\tif (!(--deg[v])) a[++cnt] = v;\n\t\t}\n\t}\n\tfor (int i = 1, u;i <= n;i++) {\n\t\tu = a[i];\n\t\tfor (int p = head[u];p;p = edge[p].nxt) {\n\t\t\tint v = edge[p].to;\n\t\t\tds[v] = max(ds[v], ds[u] + 1);\n\t\t}\n\t}\n\tfor (int i = n, u;i >= 1;i--) {\n\t\tu = a[i];\n\t\tfor (int p = head1[u];p;p = edge1[p].nxt) {\n\t\t\tint v = edge1[p].to;\n\t\t\tdt[v] = max(dt[v], dt[u] + 1);\n\t\t}\n\t}\n\tfor (int i = 1;i <= n;i++) Q.push(dt[i]);\n\tlen = Q.top();\n\tfor (int i = 1, u;i <= n;i++) {\n\t\tu = a[i], Q.pop(dt[u]);\n\t\tfor (int p = head1[u];p;p = edge1[p].nxt) {\n\t\t\tint v = edge1[p].to;\n\t\t\tQ.pop(ds[v] + dt[u] + 1);\n\t\t}\n\t\ttmp = Q.top();\n\t\tif (tmp <= len) len = tmp, ans = u;\n\t\tfor (int p = head[u];p;p = edge[p].nxt) {\n\t\t\tint v = edge[p].to;\n\t\t\tQ.push(ds[u] + dt[v] + 1);\n\t\t}\n\t\tQ.push(ds[u]);\n\t}\n\tprintf(\"%lld %lld\\n\", ans, len);\n\treturn 0;   \n}\n```\n",
        "postTime": 1622463080,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3573\u3010[POI2014]RAJ-Rally\u3011"
    },
    {
        "content": "\u601d\u8def\u4e0a\u548c\u4e0b\u9762\u7684dalao\u76f8\u540c\uff0c\u4f46\u662f\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u53d1\u73b0\u6211\u53ea\u9700\u8981\u6ecb\u6ecb\u8fd9\u6837\u51e0\u4e2a\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\uff1a\n\n- \u63d2\u5165\u4e00\u4e2a\u6570\n- \u5220\u9664\u4e00\u4e2a\u6570\n- \u67e5\u8be2\u4e00\u4e2a\u6700\u5927\u503c\n\n\u8fb9\u957f\u90fd\u662f1\uff0c\u8fd9\u4ee3\u8868\u7740\u6211\u4eec\u63d2\u5165\u5220\u9664\u7684\u503c\u6709\u4e00\u5b9a\u7684\u9650\u5ea6\u3002\n\n\u8fd9\u5c31\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e86\u3002\n\n\u4ee3\u7801\n```\n#include<bits/stdc++.h>\n#define M 2000005\n#define N 500005\nusing namespace std;\nint f[N],g[N],d[N],n,m,id,ans;\nint head[N],to[M],Next[M],e;\nvector<int> h[N];\nvoid buid(int u,int v)\n{\n\th[v].push_back(u);\n\tNext[++e]=head[u];head[u]=e;to[e]=v;d[v]++;\n}\nqueue<int> q;\nint top[N];\nvoid Top_sort()\n{\n\tfor(int i=1;i<=n;++i) if(!d[i]) q.push(i);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\ttop[i]=q.front();q.pop();\n\t\tfor(int k=head[top[i]];k;k=Next[k])\n\t\t{\n\t\t\tint j=to[k];\n\t\t\td[j]--;\n\t\t\tif(!d[j]) q.push(j);\n\t\t}\n\t}\n}\nvoid Get_dis()\n{\n/*\tfor(int i=1;i<=n;++i) cout<<top[i]<<\" \";\n\tcout<<endl;\n\t*/\n\tfor(int i=n;i;--i)\n\t{\n\t\tint now=top[i];\n\t\tfor(int i=head[now];i;i=Next[i])\n\t\t{\n\t\t\tint j=to[i];\n\t\t\tf[now]=max(f[now],f[j]+1);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint now=top[i];\n\t\tfor(int i=head[now];i;i=Next[i])\n\t\t{\n\t\t\tint j=to[i];\n\t\t\tg[j]=max(g[j],g[now]+1);\n\t\t}\n\t}\n/*\tfor(int i=1;i<=n;++i) cout<<f[i]<<\" \";\n\tcout<<endl;\n\tfor(int i=1;i<=n;++i) cout<<g[i]<<\" \";\n\tcout<<endl;*/\n}\nstruct node\n{\n\tint num,big;\n}tre[N*4];\nvoid update(int now,int lson,int rson)\n{\n\ttre[now].big=max(tre[lson].big,tre[rson].big);\n\ttre[now].num=0;\n\tif(tre[lson].big==tre[now].big)  tre[now].num+=tre[lson].num;\n\tif(tre[rson].big==tre[now].big)  tre[now].num+=tre[rson].num;\n}\nvoid pop(int to,int l,int r,int now)\n{\n\tif(l==r)\n\t{\n\t\ttre[now].num--;if(!tre[now].num) tre[now].big=0;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1,lson=now<<1,rson=lson|1;\n\tif(to<=mid) pop(to,l,mid,lson);\n\telse pop(to,mid+1,r,rson);\n\tupdate(now,lson,rson);\n}\nvoid add(int to,int l,int r,int now)\n{\n\tif(l==r)\n\t{\n\t\ttre[now].num++;tre[now].big=to;return;\n\t}\n\tint mid=(l+r)>>1,lson=now<<1,rson=lson|1;\n\tif(to<=mid) add(to,l,mid,lson);\n\telse add(to,mid+1,r,rson);\n\tupdate(now,lson,rson);\n}\nvoid Doit()\n{\n\tans=(1<<30);\n\tint s=n+1,t=n+2;\n\tfor(int i=1;i<=n;++i)\n\tbuid(s,i),buid(i,t),add(f[i],1,n+2,1);\n\tg[s]=f[t]=-1;\n\t\n\tfor(int i=1;i<=n;++i)\n    {\n    \tint now=top[i];\n    \tfor(int j=0,zz=h[now].size();j<zz;++j)\n    \t{\n    \t\tint k=h[now][j];\n    \t\tpop(f[now]+g[k]+1,1,n+2,1);\n\t\t}\n\t\tint it=tre[1].big;\n//\t\tcout<<now<<\" -- \"<<it<<endl;\n\t\tif(it<ans) ans=it,id=now;\n\t\tfor(int j=head[now];j;j=Next[j])\n\t\t{\n\t\t\tint k=to[j];\n\t\t\tadd(f[k]+g[now]+1,1,n+2,1);\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint u,v;scanf(\"%d%d\",&u,&v);buid(u,v);\n\t}\n\tTop_sort();Get_dis();Doit();\n\tprintf(\"%d %d\\n\",id,ans);\n\treturn 0;\n}\n```",
        "postTime": 1520065063,
        "uid": 35718,
        "name": "MloVtry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3573 \u3010[POI2014]RAJ-Rally\u3011"
    },
    {
        "content": "\u6027\u8d28\u9898\u3002$\\text{DAG 0/1}$ \u6700\u503c\u8def\u5f84\u8fd9\u79cd\u7c7b\u578b\uff0c\u4e00\u822c\u60f3\u5230\u62d3\u6251\u5e8f\u3002\n\n\u6839\u636e\u62d3\u6251\u6392\u5e8f\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u8fd9\u6837\u4e00\u6761\u6027\u8d28\uff1a\u5728\u62d3\u6251\u5e8f\u5217\u4e2d\u53d6\u51fa\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u533a\u95f4 $[L_1,R_1],[L_2,R_2]$\uff0c\u5176\u4e2d $R_1 < L_2$\uff0c$\\forall i\\in[L_1,R_1],j\\in[L_2,R_2]$\uff0c\u53ea\u4f1a\u6709\u8fb9 $i\\to j$\u3002\u8fd9\u6761\u6027\u8d28\u6709\u4ec0\u4e48\u7528\u5462\uff1f\n\n\u60f3\u4e00\u60f3\uff0c\u679a\u4e3e\u88ab\u5220\u53bb\u7684\u8282\u70b9 $z$\uff0c\u8bbe\u4efb\u610f\u70b9 $i$ \u7684\u62d3\u6251\u5e8f\u4e3a $seq_i$\uff0c\u62d3\u6251\u5e8f $i$ \u5bf9\u5e94\u7684\u70b9\u4e3a $rev_i$\u3002\u5c06\u5176\u5220\u53bb\u540e\uff0c\u539f\u62d3\u6251\u5e8f\u5217\u88ab\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff1a$[1,seq_z),(seq_z,n]$\u3002\u800c\u6211\u4eec\u9700\u8981\u5feb\u901f\u8ba1\u7b97\u4ece\u539f\u56fe $G$ \u4e2d\u5220\u53bb\u70b9 $z$ \u7684\u6700\u957f\u8def\u3002\n\n\u8fd9\u91cc\u9700\u8981\u4e00\u4e2a\u4e0a\u8ff0\u6027\u8d28\u7684\u63a8\u8bba\uff0c\u5220\u53bb\u70b9 $z$ \u540e\uff0c\u6700\u957f\u8def\u4e00\u5b9a\u7ecf\u8fc7 $rev_x\\to rev_y(x\\in[1,seq_z),y\\in(seq_z,n])$ \u8fd9\u6761\u8fb9\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u63a8\u8bba\u53ef\u4ee5\u6839\u636e\u4e0a\u8ff0\u6027\u8d28\u4f7f\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff0c\u8fd9\u91cc\u7559\u7ed9\u8bfb\u8005\u81ea\u884c\u8bc1\u660e\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u63a8\u8bba\u6b63\u786e\u6027\u4ec5\u5efa\u7acb\u5728\u539f\u56fe $G$ \u8fb9\u6743\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\u3002\n\n\u9884\u5904\u7406\u51fa\u4ece\u67d0\u4e2a\u70b9\u5230\u70b9 $x$ \u7684\u6700\u957f\u8def $f_x$\uff0c\u4ece\u70b9 $x$ \u5230\u67d0\u4e2a\u70b9\u7684\u6700\u957f\u8def $g_x$ \u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0a\u8ff0\u63a8\u8bba\u5f97\u5230\u5220\u53bb\u70b9 $z$ \u540e\u7684\u6700\u957f\u8def\u4e3a $\\max\\limits_{x\\in[1,seq_z),y\\in(seq_z,n],(rev_x,rev_y)\\in E} f_{rev_x}+g_{rev_y}+1$\u3002\u8003\u8651\u5feb\u901f\u8ba1\u7b97\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u7531\u4e8e $x$ \u7684\u53f3\u8fb9\u754c\u5355\u8c03\u589e\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u62d3\u6251\u5e8f\u679a\u4e3e\u70b9 $z$\uff0c\u5728 $x$ \u7684\u53f3\u8fb9\u754c\u589e\u5927\u65f6\u52a0\u5165\u65b0\u7684 $(rev_x,rev_y)$ \u7684\u503c\u3002\u67e5\u8be2\u65f6\u53ea\u67e5\u8be2 $seq_z<y\\leq n$ \u7684 $y$ \u503c\u76f8\u5173\u7684\u6700\u5927\u503c\u3002\n\n\u5728\u6c42\u4e0d\u5b9a\u6e90\u6700\u77ed\u8def\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u8bbe\u7acb\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9\u3002\u4e0a\u8ff0\u64cd\u4f5c\u4f7f\u7528\u7ebf\u6bb5\u6811\u6216\u8005\u61d2\u60f0\u5220\u9664\u7684\u5806\u5747\u53ef\u5b9e\u73b0\u3002\u5176\u4e2d\u524d\u8005\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m) \\log n)$\uff0c\u540e\u8005\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m) \\log (n+m))$\u3002\n\n```cpp\n#include<cstdio>\n#include<queue>\n#define ls p<<1\n#define rs p<<1|1\nint num=0,cnt[2];\nint mx[2000005];\nint h[2][500005],to[2][1000005],ver[2][1000005],w[2][1000005],du[2][500005];\nint dis[2][500005],seq[500005],rev[500005],f[500005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline int max(const int &x,const int &y) {return x>y? x:y;}\ninline void add(int id,int x,int y,int z=1) {\n\t++du[id][y];\n\tto[id][++cnt[id]]=y;\n\tver[id][cnt[id]]=h[id][x];\n\tw[id][cnt[id]]=z;\n\th[id][x]=cnt[id];\n}\ninline void topo(int u,int id) {\n\tstd::queue<int> Q; num=0;\n\tQ.push(u); dis[id][u]=0;\n\twhile(Q.size()) {\n\t\tint x=Q.front(); Q.pop();\n\t\tseq[++num]=x; rev[x]=num;\n\t\tfor(register int i=h[id][x];i;i=ver[id][i]) {\n\t\t\tint y=to[id][i];\n\t\t\tdis[id][y]=max(dis[id][y],dis[id][x]+w[id][i]);\n\t\t\tif(!(--du[id][y])) Q.push(y);\n\t\t} \n\t}\n}\ninline void change(int p,int l,int r,int x,int val) {\n\tif(l==r) {mx[p]=max(mx[p],val); return;}\n\tint mid=l+r>>1;\n\tif(x<=mid) change(ls,l,mid,x,val);\n\telse change(rs,mid+1,r,x,val);\n\tmx[p]=max(mx[ls],mx[rs]);\n}\ninline int ask(int p,int l,int r,int L,int R) {\n\tif(L<=l&&r<=R) return mx[p];\n\tint mid=l+r>>1,res=0;\n\tif(L<=mid) res=max(res,ask(ls,l,mid,L,R));\n\tif(R>mid) res=max(res,ask(rs,mid+1,r,L,R));\n\treturn res;\n}\nint main() {\n\tint n=read(),m=read(),S=n+1,T=n+2,res=0;\n\tfor(register int i=1;i<=n;++i) {\n\t\tadd(0,S,i,0); add(0,i,T,0);\n\t\tadd(1,i,S,0); add(1,T,i,0);\n\t}\n\tfor(register int i=1;i<=m;++i) {int x=read(),y=read();add(0,x,y);add(1,y,x);}\n\ttopo(T,1); topo(S,0);\n\tf[0]=n+m;\n\tfor(register int i=1;i<=num-2;++i) {\n\t\tint x=seq[i];\n\t\tfor(register int k=h[0][x];k;k=ver[0][k]) {\n\t\t\tint y=to[0][k];\n\t\t\tchange(1,1,num,rev[y],dis[0][x]+dis[1][y]+w[0][k]);\n\t\t}\n\t\tf[i+1]=ask(1,1,num,i+2,num);\n\t\tif(f[res]>f[i+1]) {res=i+1;}\n\t}\n\tprintf(\"%d %d\\n\",seq[res],f[res]);\n\treturn 0;\n}\n```",
        "postTime": 1606107596,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3573 \u3010[POI2014]RAJ-Rally\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u786e\u662f\u795e\u4ed9\u9898\uff0c\u6211\u88ab\u6b63\u56fe\u53cd\u56fe\u7ed5\u6655\u4e86\u597d\u4e45\u3002\u8fd9\u7bc7\u9898\u89e3\u4e2d\u5bf9\u4e8e\u6b63\u56fe\u53cd\u56fe\u7684\u8bf4\u660e\u53ef\u80fd\u4f1a\u5b58\u5728\u4e00\u4e9b\u9519\u8bef\uff0c\u5e0c\u671b\u8bfb\u8005\u6307\u51fa\u3002\n\n\u9898\u610f\u7b80\u8ff0\uff1a\u7ed9\u4f60\u4e00\u4e2aDAG\uff0c\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u540e\u4f7f\u6700\u957f\u8def\u5f84\u6700\u77ed\uff0c\u6c42\u8fd9\u4e2a\u8282\u70b9\u4e0e\u8def\u5f84\u957f\u5ea6\u3002\n\n\u56e0\u4e3aDAG\u4f18\u79c0\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u62d3\u6251\u6392\u5e8f\u5feb\u901f\u6c42\u51fa\u6700\u957f\u8def\uff0c\u540c\u65f6\u6211\u4eec\u5efa\u7acb\u53cd\u56fe\uff0c\u4e00\u5e76\u6c42\u51fa\u4ee5\u4e00\u4e2a\u8282\u70b9\u4e3a\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u6700\u957f\u8def\u3002\n\n\u6709\u4e86\u4e0a\u9762\u6240\u6709\u7684\u9884\u5904\u7406\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u6c42\u51fa\u6ca1\u5220\u70b9\u65f6\u7684\u6700\u957f\u8def\uff0c\u73b0\u5728\u6211\u4eec\u6765\u8003\u8651\u5220\u70b9\u3002\n\n\u6211\u4eec\u662f\u8981\u6c42\u6700\u5927\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u6570\u636e\u7ed3\u6784\u8981\u6c42\u652f\u6301\u5220\u9664\uff0c\u652f\u6301\u4fee\u6539\uff0c\u652f\u6301\u6c42\u6700\u503c\uff0c\u53ef\u5220\u5806\u662f\u4e00\u4e2a\u597d\u7684\u9009\u62e9\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u4e0emultiset\u3002\n\n\u90a3\u4e48\u64cd\u4f5c\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8282\u70b9\u5e76\u5220\u9664\uff0c\u5f39\u51fa\u548c\u8fd9\u4e2a\u8282\u70b9\u6709\u5173\u7684\u8def\u5f84\uff0c\u8bb0\u5f55\u8fd9\u65f6\u7684\u6700\u5927\u503c\u3002\u7136\u540e\u518d\u628a\u8fd9\u4e2a\u8282\u70b9\u653e\u56de\u53bb\u5c31\u53ef\u4ee5\u3002\n\n\u6211\u4eec\u6765\u60f3\u60f3\u5f39\u51fa\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u5f71\u54cd\u5230\u7684\u8def\u5f84\u7a76\u7adf\u662f\u4ec0\u4e48\u3002\n\n\u6211\u4eec\u60f3\u8c61\u51fa\u8d85\u7ea7\u539f\u70b9\u4e0e\u8d85\u7ea7\u6c47\u70b9\uff0c\u90a3\u4e48$dis1,dis2$\u5206\u522b\u5c31\u662f\u5230\u4e00\u4e2a\u70b9u\u5230\u8d85\u7ea7\u539f\u70b9\u4e0e\u8d85\u7ea7\u6c47\u70b9\u7684\u8ddd\u79bb\n\n\u5220\u9664\u8fd9\u4e2a\u70b9\uff0c\u5f71\u54cd\u7684\u5c31\u662f\u8be5\u8282\u70b9\u4e0a\u4e00\u4e2a\u8282\u70b9\u7ecf\u8fc7\u8be5\u8282\u70b9\u8d70\u5230\u8fd9\u4e2a\u8282\u70b9\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u8fd9\u6761\u8def\u5f84\u3002\n\n\u8be5\u8282\u70b9\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9\u5c31\u662f\u53cd\u56fe\u4e2d\u7684$e[u].to$\uff0c\u6240\u4ee5\u66f4\u6539\u7684\u5c31\u662f$dis2[u]+dis1[e[u].to]+1$\n\n\u5728\u6dfb\u52a0\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u5c31\u8981\u6dfb\u52a0\u7684\u662f\u524d\u9762\u7684\u70b9\u5230\u8fbe\u8be5\u8282\u70b9\u540e\u7ecf\u8fc7\u8fb9\u8d70\u5230\u8be5\u8282\u70b9\u76f8\u90bb\u8282\u70b9\u7684\u8def\u5f84\u3002\n\n\u5c31\u662f\u6b63\u56fe\u4e2d\u7684$dis1[u]+dis2[e[u].to]+1$\n\n\u90a3\u4e48\u5220\u9664\u4e0e\u6dfb\u52a0\u64cd\u4f5c\u4e5f\u660e\u786e\u4e86\uff0c\u5c31\u662f\n```cpp\nfor(ri i=1;i<=n;i++)\tp.push(dis2[i]);\t\n\tans=p.top();\n\tfor(ri i=1;i<=n;i++)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t{\n\t\tint u=tp[i];\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u5220\u9664\u8282\u70b9 \n\t\tp.pop(dis2[u]);\n\t\tfor(ri j=head[u]; j; j=e[j].next)\tif(e[j].dist==-1)\tp.pop(dis2[u]+dis1[e[j].to]+1);\n\t\tint tmp=p.top();\n\t\tif(tmp<ans)\tans=tmp,key=u;\n\t\tfor(ri j=head[u]; j; j=e[j].next)\tif(e[j].dist==1)\tp.push(dis1[u]+dis2[e[j].to]+1);\n\t\tp.push(dis1[u]);\n\t}\n```\n\n\n\u5982\u679c\u8fd8\u662f\u4e0d\u61c2\uff0c\u6211\u8fd9\u91cc\u6dfb\u52a0\u4e86\u4e00\u5e45\u56fe\u7247\u8fdb\u884c\u8bf4\u660e\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/o6sifbgn.png)\n\n\u56fe\u4e2d\u5e76\u6ca1\u6709\u7ed9\u51fa\u8d85\u7ea7\u539f\u70b9\u4e0e\u8d85\u7ea7\u6c47\u70b9\uff0c\u4e0d\u8fc7\u4e0d\u59a8\u788d\u7406\u89e3\u3002\n\n\u6211\u4eec\u5220\u96644\uff0c\u5b9e\u9645\u4e0a\u5220\u9664\u7684\u662f1->4->5\u4e0e3->4->5\uff0c1->3->4->5\u8fd9\u4e09\u6761\u8def\u5f84\u30021,3\u90fd\u662f\u53cd\u56fe\u4e2d4\u76f4\u63a5\u94fe\u63a5\u7684\u8282\u70b9\uff0c\u4ed6\u4eec\u4e3a\u7ec8\u70b9\u5230\u8d85\u7ea7\u539f\u70b9\u7684\u8ddd\u79bb+4\u4e3a\u8d77\u70b9\u5230\u8d85\u7ea7\u6c47\u70b9\u7684\u8ddd\u79bb\u6784\u6210\u4e00\u6761\u8def\u5f84\u3002\n\n\u6dfb\u52a0\u8fdb4\u7684\u65f6\u5019\uff0c\u6dfb\u52a0\u56de\u6765\u7684\u5c31\u662f\u6b63\u56fe\u4e2d\u8d85\u7ea7\u539f\u70b9\u52304\u7684\u8ddd\u79bb+\u6b63\u56fe\u4e2d\u4e0e4\u76f4\u63a5\u76f8\u8fde\u76845\u5230\u8d85\u7ea7\u6c47\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u5982\u679c\u6709\u4e86\u4e0a\u9762\u7684\u8bf4\u660e\u8fd8\u5b58\u5728\u7591\u60d1\uff0c\u6b22\u8fce\u79c1\u4fe1\u8be2\u95ee\u6211\u3002\n\n\u8fd9\u9053\u6765\u81eaPOI\u7684\u9898\u76ee\u5c31\u53ef\u4ee5\u89e3\u51b3\u5566~~\n\n\u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#include<queue>\n#define ri register int\nusing namespace std;\nstruct Edge{\n\tint next;\n\tint to;\n\tint dist;\n}e[2000200];\n\n\nstruct de_heap{\t\t\t\t\t//\u53ef\u5220\u5806 \n\tpriority_queue<int> a,b;\n\tvoid push(int x){a.push(x);}\n\tvoid pop(int x){b.push(x);}\n\tint top()\n\t{\n\t\twhile(!b.empty() && a.top()==b.top())\t\n\t\ta.pop(),b.pop();\n\t\treturn a.top();\n\t}\n}p;\n\n\nint n,m,ans,key;\n\n\nint head[500050],cnt;\nvoid add_edge(int from,int to,int dist)\n{\n\te[++cnt].to=to;\n\te[cnt].next=head[from];\n\te[cnt].dist=dist;\n\thead[from]=cnt;\n}\n\n\nint in[500050],tp[500050],sum;\t\t\t\t\t\t//\u62d3\u6251\u6392\u5e8f\u6c42\u6700\u957f\u8def \nqueue<int> q;\nvoid tpsort()\n{\n\tfor(ri i=1;i<=n;i++)\n\tif(!in[i])\tq.push(i);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\ttp[++sum]=u;\n\t\tq.pop();\n\t\tfor(ri i=head[u]; i; i=e[i].next)\n\t\tif(e[i].dist==1)\n\t\t{\n\t\t\tin[e[i].to]--;\n\t\t\tif(in[e[i].to]==0)\tq.push(e[i].to);\n\t\t}\n\t}\n} \n\n//\u8fd9\u91cc\u8fd9\u4e48bfs\u7684\u7f18\u6545\u662f\u56e0\u4e3a\u62d3\u6251\u6392\u5e8f\u6c42\u6700\u957f\u8def\uff0c\u4e00\u5b9a\u662f\u4ece\u62d3\u6251\u5e8f\u4f4e\u7684\u5730\u65b9\u5411\u9ad8\u7684\u5730\u65b9\u8f6c\u79fb\uff0c\u6240\u4ee5\u6bcf\u6b21\u53ea\u9700\u8981\u6269\u5c55\u4e00\u6b21\u3002 \nint dis1[500050],dis2[500050];\t\t\t\t\t \nvoid bfs1(int now)\t\t\t\n{\n\tfor(ri i=head[now]; i; i=e[i].next)\n\t\tif(e[i].dist==1)\tdis1[e[i].to]=max(dis1[e[i].to],dis1[now]+1);\n}\nvoid bfs2(int now)\n{\n\tfor(ri i=head[now]; i; i=e[i].next)\n\t\tif(e[i].dist==-1)\tdis2[e[i].to]=max(dis2[e[i].to],dis2[now]+1);\n}\n\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(ri i=1;i<=m;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd_edge(u,v,1);\t\t\t\t//1\u4ee3\u8868\u6b63\u56fe\uff0c-1\u4ee3\u8868\u53cd\u56fe\n\t\tadd_edge(v,u,-1);\n\t\tin[v]++;\n\t}\n\ttpsort();\n\t//for(ri i=1;i<=n;i++)\n\t//printf(\"%d \",tp[i]);\n\tfor(ri i=1;i<=sum;i++)\n\tbfs1(tp[i]);\n\tfor(ri i=sum;i>=1;i--)\n\tbfs2(tp[i]); \n\t//for(ri i=1;i<=sum;i++)\n\t//printf(\"%d %d\\n\",dis1[i],dis2[i]);\n\tfor(ri i=1;i<=n;i++)\tp.push(dis2[i]);\t\n\tans=p.top();\n\tfor(ri i=1;i<=n;i++)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t{\n\t\tint u=tp[i];\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u5220\u9664\u8282\u70b9 \n\t\tp.pop(dis2[u]);\n\t\tfor(ri j=head[u]; j; j=e[j].next)\tif(e[j].dist==-1)\tp.pop(dis2[u]+dis1[e[j].to]+1);\t\n\t\tint tmp=p.top();\n\t\tif(tmp<ans)\tans=tmp,key=u;\n\t\tfor(ri j=head[u]; j; j=e[j].next)\tif(e[j].dist==1)\tp.push(dis1[u]+dis2[e[j].to]+1);\n\t\tp.push(dis1[u]);\n\t}\n\tprintf(\"%d %d\",key,ans);\n} \n```\n",
        "postTime": 1605928771,
        "uid": 279288,
        "name": "No_wonder",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3573 \u3010[POI2014]RAJ-Rally\u3011"
    },
    {
        "content": "### Description\n\n\u7ed9\u5b9a\u4e00\u4e2a $N$ \u4e2a\u70b9 $M$ \u6761\u8fb9\u7684\u6709\u5411\u65e0\u73af\u56fe\uff0c\u6bcf\u6761\u8fb9\u957f\u5ea6\u90fd\u662f1\u3002\n\n\u8bf7\u627e\u5230\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5f97\u5220\u6389\u8fd9\u4e2a\u70b9\u540e\u5269\u4f59\u7684\u56fe\u4e2d\u7684\u6700\u957f\u8def\u5f84\u6700\u77ed\u3002\n\n### Solution\n\n\u4e00\u9053\u601d\u8def\u597d\u9898\u3002\n\n\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u56fe\u662f\u4e00\u4e2aDAG\u56fe\uff0c\u6240\u4ee5\u4e00\u822c\u7684\u505a\u6cd5\u8003\u8651\u62d3\u6251\u6392\u5e8f\u4e4b\u540edp\u6c42\u51fa\u6700\u957f\u8def\u5f84\u3002\n\n\u5bf9\u4e8e\u672c\u9898\uff0c\u53ef\u4ee5\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9\uff0c\u6700\u957f\u8def\u5f84\u5373\u4e3aS\u5230T\u7684\u6700\u957f\u8def\u3002\n\n\u8003\u8651\u8fdb\u884c\u8f6c\u79fb\u3002\u5bf9\u4e8e\u56fe\u4e0a\u7684\u4efb\u610f\u4e00\u6761\u8fb9  $(u,v)$ \uff0c\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u7684\u6700\u957f\u8def\u5373\u4e3a\u6e90\u70b9S\u5230u\u7684\u6700\u957f\u52a0\u4e0a\u8be5\u6761\u8fb9\u7684\u8fb9\u6743\u548cv\u5230T\u7684\u6700\u957f\u8ddd\u79bb\u3002\n\n\u7531\u6b64\u56fe\u7684\u6700\u957f\u8def\u5f84\u5c31\u88ab\u8f6c\u5316\u4e3a\u56fe\u4e0a\u6240\u6709\u8fb9\u8fb9\u6743\u7684\u6700\u5927\u503c\uff0c\u73b0\u5728\u53ef\u4ee5\u5229\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002\u9700\u8981\u652f\u6301\u63d2\u5165\u3001\u5220\u9664\u548c\u6700\u5927\u503c\u67e5\u8be2\u3002\u53ef\u4ee5\u624b\u5199\u4e00\u4e2a\u652f\u6301\u5220\u9664\u7684\u5806\u6216\u8005\u76f4\u63a5\u5199\u7ebf\u6bb5\u6811\u3002\n\n\u5b9a\u4e49 $f[i][0]$ \u4e3a\u6e90\u70b9\u5230i\u7684\u6700\u957f\u8ddd\u79bb\uff0c$f[i][1]$ \u4e3ai\u5230\u6c47\u70b9\u7684\u8ddd\u79bb\uff0c\u8fb9  $(u,v)$  \u7684\u8d21\u732e\u5373\u4e3a $f[u][0]+f[v][1]$ \u3002\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int read()\n{\n\tint x=0,f=1,c=getchar();\n\twhile(c<48) c=='-'&&(f=-1),c=getchar();\n\twhile(c>47) x=x*10+c-'0',c=getchar();\n\treturn x*f;\n}\n\nconst int MAXN = 500005;\nconst int INF = 0x7fffffff;\nstruct Seg {int l,r,mx,num;} t[MAXN<<2];\nstd::vector<int> G[MAXN],adj[MAXN];\nint topo[MAXN],ind[MAXN],visit[MAXN],f[MAXN][2];\nint n,m,tp,ans,mxl=INF;\n\ninline void addedge(int u,int v)\n{G[u].push_back(v);}\n\ninline void insert(int u,int v)\n{adj[u].push_back(v);}\n\ninline void topost()\n{\n\tint head=1,rear=n; stack<int>st;\n\tfor(int i=head; i<=rear; i++)\n\t\tif(!ind[i]) st.push(i),topo[++tp]=i;\n\twhile(!st.empty())\n\t{\n\t\tint x=st.top(); st.pop(); visit[x]=0;\n\t\tfor(int &y : G[x])\n\t\t\tif(!(--ind[y])) st.push(y),topo[++tp]=y;\n\t}\n}\n\nvoid dfs()\n{\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tint x=topo[i]; f[x][0]=max(f[x][0],1);\n\t\tfor(int &y : G[x])\n\t\t\tf[y][0]=max(f[y][0],f[x][0]+1);\n\t}\n\tfor(int i=n; i>=1; i--)\n\t{\n\t\tint x=topo[i]; f[x][1]=max(f[x][1],1);\n\t\tfor(int &y : G[x])\n\t\t\tf[x][1]=max(f[y][1]+1,f[x][1]);\n\t}\n}\n\ninline void pushup(int x)\n{t[x].mx=max(t[x<<1].mx,t[x<<1|1].mx);}\n\nvoid build(int x,int l,int r)\n{\n\tt[x].l=l,t[x].r=r;\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tbuild(x<<1,l,mid);\n\tbuild(x<<1|1,mid+1,r);\n\tpushup(x);\n}\n\ninline void puttag(int x,int l,int r,int k)\n{\n\tt[x].num+=k; t[x].mx=t[x].num>0? l : -1;\n\tt[x].num=max(t[x].num,0);\n}\n\nvoid update(int x,int pos,int k)\n{\n\tint l=t[x].l,r=t[x].r;\n\tif(l==r) {puttag(x,l,r,k); return;}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid) update(x<<1,pos,k);\n\tif(pos>mid)  update(x<<1|1,pos,k);\n\tpushup(x);\n}\n\nint query(int x,int ql,int qr)\n{\n\tint l=t[x].l,r=t[x].r;\n\tif(ql<=l && qr>=r) return t[x].mx;\n\tint mid=(l+r)>>1,res=-INF;\n\tif(ql<=mid) res=max(res,query(x<<1,ql,qr));\n\tif(qr>mid)  res=max(res,query(x<<1|1,ql,qr));\n\treturn res;\n}\n\nint main(int argc, char const *argv[])\n{\n\tn=read(); m=read();\n\tint x,y,k;\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tx=read(); y=read(); ind[y]++;\n\t\taddedge(x,y); insert(y,x);\n\t}\n\ttopost(); dfs(); build(1,0,n);\n\tfor(int i=1; i<=n; i++)\n\t\tupdate(1,f[i][1],1);\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tint x=topo[i]; update(1,f[x][1],-1);\n\t\tfor(int &y : adj[x])\n\t\t\tupdate(1,f[y][0]+f[x][1],-1);\n\t\tif(query(1,0,n)<mxl)\n\t\t\tmxl=query(1,0,n),ans=x;\n\t\tupdate(1,f[x][0],1);\n\t\tfor(int &y : G[x])\n\t\t\tupdate(1,f[x][0]+f[y][1],1);\n\t}\n\tprintf(\"%d %d\\n\",ans,mxl-1);\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1589805925,
        "uid": 107735,
        "name": "shiroi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3573 \u3010[POI2014]RAJ-Rally\u3011"
    },
    {
        "content": "\u7a81\u7136\u53d1\u73b0\u6240\u6709\u7684\u9898\u89e3\u90fd\u6ca1\u6709\u7528multiset\u3002\n\n\u5176\u5b83\u9898\u89e3\u90fd\u662f\u7528\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u6216\u8005\u662f\u5806\u89e3\u51b3\u7684\u95ee\u9898\u3002\n\n\u4f46\u662f\u6743\u503c\u7ebf\u6bb5\u6811\u7801\u91cf\u592a\u5927\uff0c\u5806\u8dd1\u5f97\u5f88\u6162\u3002\n\n\u4e3a\u4ec0\u4e48\u4e0d\u4e86\u89e3\u4e00\u4e0b~~\u53c8\u597d\u5199\u53c8\u8dd1\u5f97\u5feb~~\u7684multiset\u5462\uff1f\n\n```cpp\n// P3573.CPP\n\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 5e5 + 5;\nconst int M = 1e6 + 5;\n\nint n, m;\nmultiset<int> S;\n\nstruct edge {\n    int v, nxt;\n} e[M << 1];\n\nint head[2][N], cnt, in[N], q[N], l, r;\nint dis[2][N];\n\ninline void add(int u, int v, int t) {\n    e[++cnt].v = v;\n    e[cnt].nxt = head[t][u];\n    head[t][u] = cnt;\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= m; i++) {\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        in[v]++;\n        add(u, v, 0);\n        add(v, u, 1);\n    }\n    int pos = 0, dismin = n, tmp;\n    for (int i = 1; i <= n; i++)\n        if (in[i] == 0)\n            q[r++] = i;\n    while (l < r) {\n        int fr = q[l];\n        l++;\n        for (int i = head[0][fr]; i; i = e[i].nxt) {\n            int to = e[i].v;\n            in[to]--;\n            if (!in[to])\n                q[r++] = e[i].v;\n        }\n    }\n    for (int k = 0; k <= n - 1; k++)\n        for (int i = head[0][q[k]]; i; i = e[i].nxt)\n            dis[0][e[i].v] = max(dis[0][e[i].v], dis[0][q[k]] + 1);\n    for (int k = n - 1; k >= 0; k--)\n        for (int i = head[1][q[k]]; i; i = e[i].nxt)\n            dis[1][e[i].v] = max(dis[1][e[i].v], dis[1][q[k]] + 1);\n\n    for (int i = 1; i <= n; i++)\n        S.insert(dis[1][i]);\n    for (int k = 0; k <= n - 1; k++) {\n        S.erase(S.find(dis[1][q[k]]));\n        for (int i = head[1][q[k]]; i; i = e[i].nxt)\n            S.erase(S.find(dis[0][e[i].v] + dis[1][q[k]] + 1));\n        tmp = *S.rbegin();\n        if (tmp < dismin)\n            dismin = tmp, pos = q[k];\n        for (int i = head[0][q[k]]; i; i = e[i].nxt)\n            S.insert(dis[0][q[k]] + dis[1][e[i].v] + 1);\n        S.insert(dis[0][q[k]]);\n    }\n    cout << pos << \" \" << dismin << endl;\n}\n\n```",
        "postTime": 1572166634,
        "uid": 145596,
        "name": "AquaRio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3573 \u3010[POI2014]RAJ-Rally\u3011"
    },
    {
        "content": "## P3573 [POI2014]RAJ-Rally\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u6c42\u51fa\u4ee5\u67d0\u4e2a\u70b9\u4e3a \u8d77\u70b9/\u7ec8\u70b9 \u7684\u6700\u957f\u8def\u5f84\u957f\u5ea6\u3002\n\n\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a DAG \u4e14\u8fb9\u6743\u56fa\u5b9a\u4e3a 1 \uff0c\u6211\u4eec\u53ef\u4ee5\u62d3\u8865\u6392\u5e8f\u4e4b\u540e DP\u3002\n\n\u8bbe $diss(i)$ \u4e3a\u4ee5 $i$ \u4e3a\u8d77\u70b9\u7684\u6700\u957f\u8def\u5f84\u957f\u5ea6\uff0c\u8003\u8651\u72b6\u6001\u6765\u6e90\u3002\u8fd9\u4e2a\u72b6\u6001\u4f1a\u88ab\u6240\u6709\u6709 $(u,i)$ \u5b58\u5728\u7684\u70b9\u66f4\u65b0\u5230\uff0c\u5373 $diss(i)=\\max\\limits_{(u,i)\\in E}\\{diss(u)+1\\}$ \u3002\u6211\u4eec\u5728\u53cd\u56fe\u4e0a\u8dd1\u5237\u8868\u6cd5\u3002\u7528\u5f53\u524d\u7684 $x$ \u66f4\u65b0 $y$\u3002\n\n\u8bbe $dist(i)$ \u4e3a\u4ee5 $i$ \u4e3a\u7ec8\u70b9\u7684\u6700\u957f\u8def\u5f84\u957f\u5ea6\uff0c\u548c\u4e0a\u9762\u51e0\u4e4e\u4e00\u6837\uff0c\u5728\u6b63\u56fe\u4e0a\u9762\u8dd1\u5237\u8868\u6cd5\u5373\u53ef\u3002\n\n\u73b0\u5728\u6211\u4eec\u8981\u8003\u8651\u5220\u70b9\u7684\u95ee\u9898\u3002\u663e\u7136\u6211\u4eec\u65e0\u6cd5\u7acb\u5373\u77e5\u9053\u54ea\u4e2a\u70b9\u6700\u4f18\u3002\u6240\u4ee5\u6211\u4eec\u8bd5\u56fe\u904d\u5386\u6bcf\u4e2a\u70b9\uff0c\u628a\u6bcf\u4e2a\u70b9\u90fd\u5220\u9664\u4e00\u904d\u3002\u6b64\u65f6\u6211\u4eec\u9700\u8981\u5feb\u901f\u5f97\u51fa\u5220\u70b9\u4e4b\u540e\u7684\u6700\u957f\u8def\u3002\n\n\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\u4e00\u4e2a\u62d3\u8865\u56fe\u7684\u6027\u8d28\uff0c\u5728\u62d3\u8865\u5e8f\u5217\u7684\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u533a\u95f4 $A=[l_1,r_1],B=[l_2,r_2](r_1<l_2)$ \u4e4b\u95f4\uff0c\u53ea\u4f1a\u5b58\u5728\u8fb9 $(u,v),(u\\in A,v\\in B)$\u3002\u8fd9\u662f\u62d3\u8865\u6392\u5e8f\u7684\u8fc7\u7a0b\u6240\u51b3\u5b9a\u7684\u3002\n\n\u800c\u6211\u4eec\u82e5\u662f\u5220\u9664\u4e00\u4e2a\u70b9 $x$ \uff0c\u76f8\u5f53\u4e8e\u5c06\u62d3\u8865\u5e8f\u5217\u5206\u6210\u4e86\u4e24\u90e8\u5206 $A,B$\uff0c\u90a3\u4e48\u6700\u957f\u8def\u5f84\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\u5728 $A$ \u5185\u90e8\uff0c\u5728 $B$ \u5185\u90e8\uff0c\u4ece $A$ \u5230 $B$\u3002\u6211\u4eec\u9700\u8981\u7ef4\u62a4 $A,B$ \u4e24\u4e2a\u96c6\u5408\u4ee5\u53ca\u4e09\u79cd\u60c5\u51b5\u7684\u6700\u5927\u503c\u3002\n\n\u5177\u4f53\u7684\u8bf4\uff1a\n- \u5728 $A$ \u5185\u90e8\u7684\u6700\u957f\u8def\u6211\u4eec\u7ef4\u62a4\u5b83\u7684\u7ec8\u70b9\u5728 $A$ \u5185\u90e8\uff0c\u4e5f\u5c31\u662f $dist(i),i\\in A$\uff1b\n- \u8de8\u8d8a $A,B$ \u4e4b\u95f4\u7684\u6700\u957f\u8def\u6211\u4eec\u7ef4\u62a4\u5728\u8de8\u8d8a $A,B$ \u96c6\u5408\u4e4b\u95f4\u7684\u8fb9 $(u,v),u\\in A,v\\in B$ \u4e0a\u7684\u6700\u957f\u8def\uff0c\u5373 $dist(u)+1+diss(v)$ \u3002\n- \u5728 $B$ \u5185\u7684\u6700\u957f\u8def\u6211\u4eec\u7ef4\u62a4 $diss(i),i\\in B$ \u5373\u53ef\u3002\n\n\u9644\u793a\u610f\u56fe\uff1a\n\n[![](https://pic.imgdb.cn/item/61246cbd44eaada739a7e1d8.png)](https://pic.imgdb.cn/item/61246cbd44eaada739a7e1d8.png)\n\n\u73b0\u5728\u6211\u4eec\u6765\u6b63\u5f0f\u5220\u9664\u70b9 $x$\u3002\u8fd9\u4e2a\u70b9\u4e0a\u6b21\u5220\u9664\u65f6\u5e94\u5728 $B$ \u96c6\u5408\u4e2d\u3002\n\n\u9996\u5148\u6211\u4eec\u8981\u628a\u7ecf\u8fc7 $A$ \u4e2d\u7684\u70b9\u8fde\u5411\u5b83\u7684\u8fb9\u4e0a\u7684\u6700\u957f\u8def\u5168\u90e8\u5220\u53bb\uff0c\u540c\u65f6\u8981\u5c06\u4ee5\u5b83\u4e3a\u8d77\u70b9\u7684\u6700\u957f\u8def\u5220\u53bb\u3002\n\n\u7136\u540e\u76f4\u63a5\u67e5\u8be2\u5168\u56fe\u7684\u6700\u957f\u8def\u3002\u6253\u64c2\u53f0\u8bb0\u5f55\u6700\u5c0f\u503c\u3002\n\n\u73b0\u5728\u6211\u4eec\u8981\u628a\u8fd9\u4e2a\u70b9\u653e\u56de\u53bb\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u5b83\u653e\u5230 $A$ \u96c6\u5408\u3002\u5148\u5c06\u4ee5\u5b83\u4e3a\u7ec8\u70b9\u7684\u6700\u957f\u8def\u653e\u8fdb\u53bb\uff0c\u7136\u540e\u518d\u628a\u6240\u6709\u7ecf\u8fc7\u5b83\u51fa\u8fb9\u7684\u6700\u957f\u8def\u4e5f\u653e\u8fdb\u53bb\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u80fd\u591f\u652f\u6301\u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u8be2\u5168\u5c40\u6700\u5927\u7684\u6570\u636e\u7ed3\u6784\u3002multiset\u7ebf\u6bb5\u6811\u61d2\u60f0\u5220\u9664\u5806\u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u61d2\u60f0\u5220\u9664\u5806\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N=5e5+10,M=4e6+10,INF=1e8;\nint n,m;\nint head[N],head1[N],ver[M],nxt[M],edg[M],tot=0;\nvoid add(int x,int y,int w)\n{\n\tver[++tot]=y; edg[tot]=w; nxt[tot]=head[x]; head[x]=tot;\n}\nvoid add1(int x,int y,int w)\n{\n\tver[++tot]=y; edg[tot]=w; nxt[tot]=head1[x]; head1[x]=tot;\n}\nint ind[N];\nint diss[N],dist[N];\nqueue<int> q;\nint seq[N],id[N];\n\nstruct Heap\n{\n\tpriority_queue<int> a,b;\n\tint size_=0;\n\tvoid push(int x){a.push(x);++size_;}\n\tvoid pop(int x){b.push(x);--size_;}\n\tint top()\n\t{\n\t\twhile(b.size()&&a.top()==b.top()) a.pop(),b.pop();\n\t\treturn size_<=0?-INF:a.top();\n\t}\n} H;//\u61d2\u60f0\u5220\u9664\u5806\n\nvoid topo()\n{\n\tint cnt=0;\n\twhile(q.size())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tseq[++cnt]=x;id[x]=cnt;\n\t\tfor(int i=head[x];i;i=nxt[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tind[y]--;\n\t\t\tif(!ind[y]) q.push(y);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y,1);add1(y,x,1);\n\t\tind[y]++;\n\t}\n\tfor(int i=1;i<=n;i++) if(!ind[i]) q.push(i);\n\ttopo();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x=seq[i];\n\t\tfor(int j=head[x];j;j=nxt[j])\n\t\t{\n\t\t\tint y=ver[j];\n\t\t\tdist[y]=max(dist[y],dist[x]+1);\n\t\t}\n\t}\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\tint x=seq[i];\n\t\tfor(int j=head1[x];j;j=nxt[j])\n\t\t{\n\t\t\tint y=ver[j];\n\t\t\tdiss[y]=max(diss[y],diss[x]+1);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) H.push(diss[i]);\n\tint ans=H.top(),anx;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x=seq[i]; H.pop(diss[x]);\n\t\tfor(int j=head1[x];j;j=nxt[j])\n\t\t\tH.pop(dist[ver[j]]+diss[x]+1);\n\t\tint tmp=H.top();\n\t\tif(tmp<ans) ans=tmp,anx=x;\n\t\tfor(int j=head[x];j;j=nxt[j])\n\t\t\tH.push(dist[x]+diss[ver[j]]+1);\n\t\tH.push(dist[x]);\n\t}\n\tprintf(\"%d %d\",anx,ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1629777944,
        "uid": 278259,
        "name": "RemiliaScarlet\u25ce",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3573 [POI2014]RAJ-Rally"
    }
]