[
    {
        "content": "[P4390 Mokia \u6469\u57fa\u4e9a](https://www.luogu.org/problemnew/show/P4390)\n\n\u4e3b\u4f53\u601d\u8def\uff1acdq\u5206\u6cbb\n\n\u524d\u7f6e\u829d\u58eb\uff1a[\u4e09\u7ef4\u504f\u5e8f](https://www.luogu.org/problemnew/show/P3810)\uff0c\u4ee5\u53ca\u5927\u5bb6\u90fd\u4f1a\u7684[\u4e00\u70b9\u70b9\u5bb9\u65a5\u6280\u5de7](https://www.luogu.org/problemnew/show/P2280)\n\n\u4ee3\u7801\u6548\u7387\uff1a[1527ms](https://www.luogu.org/recordnew/show/20396227)\n\u4e2a\u4eba\u8ba4\u4e3a\u662f\u8fd8\u4e0d\u9519\u7684\u6548\u7387\uff0c\u6bd5\u7adf\u6ca1\u6709\u523b\u610f\u53bb\u5361\u5e38\u6570qwq\n\n\n------------\n\u56e0\u4e3a\u5e76\u4e0d\u662f\u5f3a\u5236\u5728\u7ebf\uff0c\u6240\u4ee5\u4e0d\u8003\u8651\u5e38\u6570\u8f83\u5927\u7684\u6811\u5957\u6811\u548c~~\u6211\u5e76\u4e0d\u4f1a\u7684K-D Tree~~\u505a\u6cd5\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u7684\u77e9\u9635**\uff08x1,y1\uff09\uff08x2,y2\uff09**\uff0c\u8003\u8651\u5229\u7528\u5bb9\u65a5\u5c0f\u6280\u5de7\u628a\u5b83\u62c6\u6210\u56db\u4e2a\u8be2\u95ee**\uff080,0\uff09\uff08x2,y2\uff09\u3001\uff080,0\uff09\uff08x1-1,y1-1\uff09**\u4ee5\u53ca**\uff080,0\uff09\uff08x1-1,y2\uff09\u3001\uff080,0\uff09\uff08x2,y1-1\uff09**\uff0c\u524d\u8005\u5bf9\u7b54\u6848\u505a\u51fa**\u6b63\u8d21\u732e**\u800c\u540e\u8005\u505a\u51fa**\u8d1f\u8d21\u732e**\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff1a\u8bf6\uff0c\u53ea\u6709**\u6a2a\u5750\u6807**\uff0c**\u7eb5\u5750\u6807**\uff0c\u4ee5\u53ca**\u51fa\u73b0\u65f6\u95f4**\u4e09\u8005\u90fd\u5c0f\u4e8e\u5f53\u524d\u8be2\u95ee\u7684\u624d\u80fd\u5bf9\u5f53\u524d\u8be2\u95ee\u505a\u51fa\u8d21\u732e\uff01\n\n\u8fd9\u662f\u2026\u2026\u4e09\u7ef4\u504f\u5e8f\u7684\u5473\u9053\uff01\n\n\u63a5\u4e0b\u6765\uff0c\u9664\u4e86\u5957\u6a21\u677f\uff0c\u8fd8\u6709\u4e00\u70b9\u70b9\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n\n- x1-1\u548cy1-1\u53ef\u80fd\u4e3a\u96f6\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6811\u72b6\u6570\u7ec4\u6b7b\u5faa\u73af\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u79cd\u60c5\u51b5\u7279\u5224\u6389\uff0c\u4f46\u7279\u5224\u597d\u9ebb\u70e6\u554aqwq\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u628a\u6240\u6709\u5750\u6807\u90fd+1\uff0c**\u8fd8\u6709w\u4e5f\u522b\u5fd8\u4e86+1\u54e6qwq**\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u7f8e\u907f\u514d\u4e860\u7684\u51fa\u73b0\u3002\n\n- \u8981\u4e0d\u8981\u53bb\u91cd\uff1f\n\n\u4e09\u7ef4\u504f\u5e8f\u7684\u677f\u5b50\u4e0d\u53bb\u91cd\u5e94\u8be5\u4f1aWA\u7684\u5f88\u60e8\uff0c\u4f46\u6211\u4eec\u8fd9\u91cc**\u4e0d\u7528\u53bb\u91cd**\u3002\n\n\u8003\u8651\u6211\u4eec\u7684\u5143\u7d20\u7279\u70b9\u3002\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u8bb0\u5f55\u7b54\u6848\uff0c\u5bf9\u4e8e\u8be2\u95ee\u64cd\u4f5c\uff0c\u5b83\u6ca1\u6709\u505a\u51fa\u8d21\u732e\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700**\u5728\u7b2c\u4e00\u6b21\u6392\u5e8f\u65f6\u4fdd\u8bc1\u6240\u6709\u8be2\u95ee\u64cd\u4f5c\u5728\u4e09\u7ef4\u90fd\u76f8\u7b49\u7684\u4fee\u6539\u64cd\u4f5c\u4e4b\u540e**\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6240\u6709**\u4fee\u6539\u7684**\u8d21\u732e\u90fd\u88ab\u7edf\u8ba1\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539cmp\u51fd\u6570\u5b9e\u73b0\u3002\n\n\u5982\u679c\u6267\u610f\u8981\u53bb\u91cd\uff0c\u4f60\u4f1a\u65e0\u4ece\u4e0b\u624b\u7684qwq\n\n\u66f4\u591a\u7684\u5c0f\u7ec6\u8282\uff0c\u8bf7\u770b\u4ee3\u7801\u5b9e\u73b0\u3002\n\n\u5982\u679c\u6709\u5e2e\u52a9\u5230\u4f60\uff0c\u8bb0\u5f97\u70b9\u8d5e\u54e6qwq\n```cpp\n#include <stdio.h>\n#include <algorithm>\nusing namespace std;\nconst int N=200010;\nint w,cnt,qcnt,fcnt,ans[N],c[N];\nstruct Node{\n\tint x,y,ti,pos,opt,val; \n}node[N],temp[N];\n/*\n pos\u662f\u8be2\u95ee\u7684\u4f4d\u7f6e\n opt\u662f\u64cd\u4f5c\u79cd\u7c7b\uff0c\u7b49\u4e8e0\u662f\u4fee\u6539\uff0c1\u548c-1\u5206\u522b\u4ee3\u8868\u8be2\u95ee\u5e94\u8be5\u7edf\u8ba1\u6b63\u8d21\u732e\u6216\u8d1f\u8d21\u732e\u3002\n val\u662f\u8d21\u732e \n*/ \nint read(){\n    int x=0,w=1;char ch;ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return x*w;\n}\nbool cmp(const Node &a,const Node &b){\n\tif(a.x!=b.x) return a.x<b.x;\n\tif(a.y!=b.y) return a.y<b.y;\n\tif(a.ti!=b.ti) return a.ti<b.ti;//\n\treturn a.val>b.val;//\u8bf7\u6ce8\u610f\u8fd9\u4e24\u884c\u4e0e\u4e09\u7ef4\u504f\u5e8f\u6a21\u677f\u7684\u4e0d\u540c\u4e4b\u5904qwq \n}\nint lowbit(int x){\n\treturn x&(-x);\n}\nvoid add(int x,int v){\n\tfor(;x<=cnt;x+=lowbit(x))\n\t c[x]+=v;\n}\nint query(int x){\n\tint v=0;\n\tfor(;x;x-=lowbit(x))//\u5982\u679c\u4e0d+1\u8fd9\u91cc\u5c31\u6b7b\u4e86\u54e6qwq \n\t v+=c[x];\n\treturn v;\n}\nvoid cdq(int l,int r)\n{\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tcdq(l,mid);cdq(mid+1,r);\n\tint i=l,j=mid+1,k=l;\n\twhile(i<=mid&&j<=r){\n\t\tif(node[i].y<=node[j].y){\n\t\t\tif(!node[i].opt)\n\t\t\t add(node[i].ti,node[i].val);\n\t\t\ttemp[k++]=node[i++];\n\t\t}\n\t\telse{\n\t\t\tif(node[j].opt){\n\t\t\t\tint s=query(node[j].ti);\n\t\t\t\tans[node[j].pos]+=s*node[j].opt;\n\t\t\t}\n\t\t\ttemp[k++]=node[j++];\n\t\t}\n\t}\n\twhile(j<=r){\n\t\tif(node[j].opt){\n\t\t\tint s=query(node[j].ti);\n\t\t\tans[node[j].pos]+=s*node[j].opt;\n\t\t}\n\t\ttemp[k++]=node[j++];\n\t}\n\tfor(int o=l;o<i;o++)\n\t if(!node[o].opt)\n\t  add(node[o].ti,-node[o].val);\n\twhile(i<=mid)\n\t temp[k++]=node[i++];\n\tfor(int i=l;i<=r;i++)\n\t node[i]=temp[i];\n}\nint main()\n{\n\tint opt,x,y,xx,yy,num,t=0;\n\tread();w=read()+1;\n\twhile(1){\n\t\topt=read();\n\t\tif(opt==1){\n\t\t\tx=read()+1;y=read()+1;num=read();t++;\n\t\t\tnode[++cnt]=Node{x,y,t,0,0,num};\n\t\t}\n\t\telse if(opt==2){\n\t\t\tx=read(),y=read();xx=read()+1,yy=read()+1;\n\t\t\tnode[++cnt]=Node{xx,yy,t,++qcnt,1,0};\n\t\t\tnode[++cnt]=Node{x,yy,t,qcnt,-1,0};\n\t\t\tnode[++cnt]=Node{xx,y,t,qcnt,-1,0};\n\t\t\tnode[++cnt]=Node{x,y,t,qcnt,1,0};\n\t\t}\n\t\telse break;\n\t}\n\tsort(node+1,node+cnt+1,cmp);\n\tcdq(1,cnt);\n\tfor(int i=1;i<=qcnt;i++)\n\t printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n\n------------\n\u540e\u8bb0\uff1a\u6211\u662f\u65f6\u5019\u8be5\u53bb\u8ba4\u771f\u5b66Markdown\u4e86QAQ",
        "postTime": 1562482661,
        "uid": 101526,
        "name": "\u6f5c\u7fce",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "upd\uff1a$(x1,y1)(x2,y2)$\u8868\u793a\u4ee5$(x1,y1)$\u4e3a\u5de6\u4e0a\u7aef\u70b9 $(x2,y2)$\u4e3a\u53f3\u4e0b\u7aef\u70b9\u7684\u77e9\u5f62\n\n\u672c\u6765\u4ee5\u4e3a\u662f\u4e00\u9053\u4e8c\u4f4d\u6811\u72b6\u6570\u7ec4\u7684\u6a21\u677f\uff0c\u4f46\u662f\u770b\u6570\u636e\u8303\u56f4\u4e4b\u540e\u5c31\u653e\u5f03\u4e86\uff0c\u8fb9\u754c\u65e2\u7136\u5230\u4e862000000\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u80fd\u4f7f\u7528\u5176\u4ed6\u529e\u6cd5\u6765\u4ee3\u66ff\u6811\u72b6\u6570\u7ec4\n\n~~\u4e8e\u662f\uff0cCDQ\u5206\u6cbb\u5c31\u8bde\u751f\u4e86\uff01~~\n\n\u6b64\u9898\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u5316\u6210[cdq\u5206\u6cbb\u6a21\u677f](https://www.luogu.org/problemnew/show/P3810)\n\n\u56de\u5fc6\u4e00\u4e0b\u4e8c\u4f4d\u6811\u72b6\u6570\u7ec4\u662f\u600e\u4e48\u6c42\u4e8c\u7ef4\u533a\u95f4\u67e5\u8be2\u7684\uff1a\u5bf9\u4e8e\u533a\u95f4[x1,y1][x2,y2]\uff0c\u6211\u4eec\u628a\u5b83\u8f6c\u5316\u6210$ (1,1)(x1-1,y1-1)+(1,1)(x2,y2)-(1,1)(x1-1,y2)-(1,1)(x2,y1-1) $\u6c42\u5373\u53ef\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u64cd\u4f5c\uff0c\u628a\u4ed6\u770b\u6210\u56db\u4e2a\u5750\u6807\uff0c\u6c42\u51fa\u524d\u7f00\u548c\u5c31\u80fd\u627e\u5230\u7b54\u6848\n\n\u628a\u64cd\u4f5c\u7684\u65f6\u95f4\u770b\u4f5c\u4e00\u7ef4\uff08\u65f6\u95f4\u5728\u524d\u7684\u624d\u53ef\u80fd\u5bf9\u540e\u9762\u7684\u64cd\u4f5c\u6709\u5f71\u54cd\uff09\uff0c\u628ax\uff0cy\u770b\u4f5c\u540e\u4e24\u7ef4\uff0c\u5bf9\u4e8e$(1,1)(x,y)$\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86$timea<timeb xa<xb ya<yb$\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u4e09\u4f4d\u504f\u5e8f\u6a21\u677f\u4e86\n\n\u6ce8\u610f\u51e0\u70b9\uff1a\n\n1\u3001\u6811\u72b6\u6570\u7ec4\u7684\u4e0b\u6807\u4e0d\u80fd\u4e3a0\uff080\u7684lowbit\u7684\u503c\u4e5f\u662f0\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u628a\u6bcf\u4e00\u4e2a\u70b9\u6a2a\u7eb5\u5750\u6807\u52a0\u4e00\uff0c\u6700\u540ew\u4e5f\u8981\u8bb0\u5f97+1\n\n2\u3001\u6ce8\u610f\u533a\u5206\u8be2\u95ee\u548c\u52a0\u6cd5\uff0c\u5728\u64cd\u4f5c\u6811\u72b6\u6570\u7ec4\u65f6\u8981\u533a\u5206\n\n\u7ed9\u51fa\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define re register\n#define debug printf(\"Now is Line : %d\\n\",__LINE__)\nil int read()\n{\n    re int x=0,f=1;re char c=getchar();\n    while(c<'0'||c>'9') {if(c=='-') f=-1;c=getchar();}\n    while(c>='0'&&c<='9') x=x*10+c-48,c=getchar();\n    return x*f;\n}\n#define lb(x) (x)&-(x)\n#define maxn 200005\n#define maxm 2000005\nstruct node\n{\n\tint tim,x,y,val,id;\n}e[maxn];\nint cnt,a[maxm],w;\nil void add(int x,int v)\n{\n\twhile(x<=w)\n\t{\n\t\ta[x]+=v;\n\t\tx+=lb(x);\n\t}\n}\nil int query(int x)\n{\n\tint ans=0;\n\twhile(x)\n\t{\n\t\tans+=a[x];\n\t\tx-=lb(x);\n\t}\n\treturn ans;\n}\nil bool cmp1(node a,node b)\n{\n\treturn (a.x==b.x)?(a.y<b.y):(a.x<b.x);\n}\nil bool cmp(node a,node b)\n{\n\treturn a.tim<b.tim;\n}\nil void CDQ(int l,int r)\n{\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tCDQ(l,mid),CDQ(mid+1,r);\n\tsort(e+l,e+mid+1,cmp1);\n\tsort(e+mid+1,e+r+1,cmp1);\n\tre int i=l,j=mid+1;\n\tfor(;j<=r;++j)\n\t{\n\t\twhile(e[i].x<=e[j].x&&i<=mid)\n\t\t{\n\t\t\tif(e[i].id==0) add(e[i].y,e[i].val);\n\t\t\t++i;\n\t\t}\n\t\tif(e[j].id==1) e[j].val+=query(e[j].y);\n\t}\n\tfor(j=l;j<i;++j) if(e[j].id==0) add(e[j].y,-e[j].val);\n}\nint main()\n{\n\tread(),w=read()+1;\n\tint opt=read();\n\twhile(opt!=3)\n\t{\n\t\tif(opt==1)\n\t\t{\n\t\t\tint x=read()+1,y=read()+1,val=read();\n\t\t\te[++cnt]=(node){cnt,x,y,val,0};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint x1=read(),y1=read(),x2=read()+1,y2=read()+1;\n\t\t\te[++cnt]=(node){cnt,x1,y1,0,1};\n\t\t\te[++cnt]=(node){cnt,x2,y2,0,1};\n\t\t\te[++cnt]=(node){cnt,x2,y1,0,1};\n\t\t\te[++cnt]=(node){cnt,x1,y2,0,1};\n\t\t}\n\t\topt=read();\n\t}\n\tCDQ(1,cnt);\n\tsort(e+1,e+cnt+1,cmp);\n\tfor(re int i=1;i<=cnt;++i)\n\t{\n\t\tif(e[i].id==1)\n\t\t{\n\t\t\tprintf(\"%d\\n\",e[i].val+e[i+1].val-e[i+2].val-e[i+3].val);\n\t\t\ti+=3;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1547889512,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "### $CDQ$ \u5206\u6cbb\u518d\u7eed\n\n\u8fd9\u4e00\u6b21\u662f\u7ed9\u51fa\u4e24\u4e2a\u5e38\u89c1\u7684\u95ee\u9898,\u7531\u4e8e\u67d0\u79cd\u539f\u56e0,\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 $CDQ$ \u6709\u6548\u7684\u89e3\u51b3\u8fd9\u4e00\u7cfb\u5217\u7684\u95ee\u9898\u3002\n\n### $I.$ \u4e00\u7ef4 \\ \u6811\u72b6\u6570\u7ec4 $1$ \u95ee\u9898\n\n\u9898\u76ee\u5927\u610f : \u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217 ($N$\u4e2a\u6570\u5b57) ,\u64cd\u4f5c\u5305\u62ec\u5355\u70b9\u4fee\u6539,\u533a\u95f4\u67e5\u8be2\u3002\n\n\u518d\u6b21\u63d0\u4e00\u4e0b $CDQ$ \u5206\u6cbb\u7684\u4e3b\u8981\u601d\u60f3:\n\n- \u6c42\u5de6\u8fb9\u533a\u95f4\u7684\u8d21\u732e\n- \u6c42\u53f3\u8fb9\u533a\u95f4\u7684\u8d21\u732e\n- \u6c42\u5de6\u534a\u8fb9\u5bf9\u53f3\u534a\u8fb9\u7684\u8d21\u732e\n\n\u5728\u6c42\u504f\u5e8f\u7684\u65f6\u5019,\u4ee5\u4e0a\u4e09\u70b9\u7684\u987a\u5e8f\u662f\u53ef\u4ee5\u6253\u4e71\u7684\u3002\u4e0d\u8fc7\u5728\u8fd9\u9053\u9898\u76ee\u4e2d,\u5fc5\u987b\u9075\u5faa\u4e00\u5b9a\u7684\u987a\u5e8f,\u9700\u8981\u6ce8\u610f\u3002\n\n\u5728\u6211\u4eec\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u6216\u8005\u7ebf\u6bb5\u6811\u89e3\u51b3\u8fd9\u9053\u95ee\u9898\u7684\u65f6\u5019,\u57fa\u4e8e\u7684\u662f\u524d\u7f00\u548c\u548c\u5206\u6cbb\u7684\u601d\u60f3,\u8fd9\u91cc\u7a0d\u5fae\u6709\u70b9\u4e0d\u540c\u3002\u6211\u4eec\u60f3,**\u4e00\u4e2a\u4fee\u6539\u5fc5\u5b9a\u4f1a\u5f71\u54cd\u5b83\u540e\u9762\u7684\u67e5\u8be2**,\u5f53\u6211\u4eec\u628a\u539f\u6570\u7ec4\u4e5f\u89c6\u4f5c\u4fee\u6539\u7684\u65f6\u5019,\n\u6574\u4e2a\u5c31\u53d8\u6210\u4e86**\u54ea\u4e2a\u4fee\u6539\u4f1a\u5f71\u54cd\u54ea\u4e2a\u67e5\u8be2**\u7684\u95ee\u9898\u3002\n\n\u518d\u60f3\u4e00\u4e0b $CDQ$ \u5206\u6cbb\u7684\u601d\u60f3,\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u6c42\u5de6\u534a\u8fb9\u5bf9\u53f3\u534a\u8fb9\u7684\u8d21\u732e\u5462? \u5148\u5047\u8bbe\u4e00\u4e2a\u533a\u95f4 $l,r$,\u5047\u5982 $l$ \u5230 $mid$ \u7684\u64cd\u4f5c\u90fd\u662f\u5728 $mid+1$ \u5230 $r$ \u524d\u9762\u505a\u7684(\u4e5f\u5c31\u662f\u5de6\u534a\u8fb9\u6240\u6709\u7684\u65f6\u95f4\u90fd\u5c0f\u4e8e\u53f3\u534a\u8fb9\u7684\u65f6\u95f4),\u90a3\u4e48 $l$ \u5230 $mid$ \u7684\u4fee\u6539\u5fc5\u5b9a\u4f1a\u5f71\u54cd\u5230 $mid+1$ \u5230 $r$ \u7684\u67e5\u8be2\u3002\n\n![](https://s1.ax1x.com/2018/09/08/iPaVAI.png)\n\n\u800c\u6211\u4eec\u628a\u6240\u6709\u7684\u67e5\u8be2 $L,R$ \u7684\u503c\u53d8\u4e3a $1,R$ \u7684\u503c\u51cf\u53bb $1,L-1$ \u7684\u503c,\u90a3\u4e48\u6240\u6709\u7684\u67e5\u8be2\u7684\u8d77\u70b9\u90fd\u662f $1$\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5224\u65ad\u662f\u5426\u6709\u8d21\u732e\u7684\u65f6\u5019,\u6211\u4eec\u5c31\u62ff\u53f3\u7aef\u70b9 (\u4fee\u6539\u7684\u53ea\u6709\u4e00\u4e2a\u70b9,\u4e5f\u89c6\u5176\u4e3a\u53f3\u7aef\u70b9) \u6765\u5224\u65ad,\u4fee\u6539\u7684\u53f3\u7aef\u70b9\u5c0f\u4e8e\u67e5\u8be2\u7684\u53f3\u7aef\u70b9,\u90a3\u4e48\u80af\u5b9a\u662f\u5bf9\u67e5\u8be2\u6709\u8d21\u732e\u7684\u3002(\u9ed1\u8272\u7684\u662f\u52a0\u7684,\u7ea2\u8272\u7684\u662f\u51cf\u53bb\u7684,\u5269\u4e0b\u7684\u9ec4\u8272\u5c31\u662f\u76ee\u6807\u533a\u95f4)\n\n![](https://i.loli.net/2018/09/15/5b9c82c0adb8d.png)\n\n\u90a3\u662f\u5de6\u534a\u8fb9\u6240\u6709\u7684\u4fee\u6539\u90fd\u4f1a\u5f71\u54cd\u5230\u53f3\u534a\u8fb9\u6240\u6709\u7684\u8d21\u732e\u5417? \u5e76\u4e0d\u662f\u3002\n\n![](https://s1.ax1x.com/2018/09/08/iPaGEn.png)\n\n(\u6ce8\u610f,$time$ \u4e3a\u64cd\u4f5c\u7684\u65f6\u95f4,$point$ \u4e3a\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e,$mode$ \u4e3a\u67e5\u8be2 ($Q$) \u6216\u8005\u4fee\u6539 ($C$)\u3002\u4ee5\u4e0b\u7684 $n$ \u4e3a\u64cd\u4f5c\u7684\u603b\u6570,\u5305\u62ec\u628a\u67e5\u8be2\u62c6\u5206\u548c\u539f\u5e8f\u5217)\n\n\u6211\u4eec\u5bf9\u5de6\u534a\u8fb9\u548c\u53f3\u534a\u8fb9\u7684\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u8fdb\u884c\u6392\u5e8f\u4ee5\u540e,\u5de6\u534a\u8fb9\u7684\u65f6\u95f4\u8fd8\u662f\u8981\u5c0f\u4e8e\u53f3\u534a\u8fb9\u6700\u4f4e\u7684\u65f6\u95f4\u3002\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u60f3\u5230, $1$ \u53f7 \u7684 \u53f3\u7aef\u70b9\u662f $1$,\u5b83\u5bf9\u53f3\u534a\u8fb9\u7684\u6240\u6709\u67e5\u8be2\u90fd\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\u800c $2$ \u53f7\u7684\u53f3\u7aef\u70b9\u662f $3$\u53f3\u534a\u8fb9,\u5b83\u53ea\u80fd\u5bf9\n\u53f3\u534a\u8fb9\u7684 $2,3,4$ \u53f7\u6709\u8d21\u732e\u3002\u4e5f\u5c31\u662f\u8bf4,\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u4e00\u6b21\u6bd4\u8f83 $left$ \u662f\u5426\u5c0f\u4e8e $right$ (\u5176\u4e2d $left$ \u4e3a $1$ \u5230 $mid$,$right$ \u4e3a $mid+1$ \u5230 $r$),\u5982\u679c\u5c0f\u4e8e,\u90a3\u4e48\u5f53\u524d\u7684 $left$ \u53f7\u4f1a\u5bf9 $right$ \u5230 $r$ \u90fd\u6709\u8d21\u732e,\n\u6240\u4ee5 $inc(sum,val[left])$\u3002\u5982\u679c\u4e0d\u662f,\u6211\u4eec\u5c31\u76f4\u63a5\u8ba1\u7b97 $1$ \u5230 $left-1$ \u5bf9 $right$ \u7684\u8d21\u732e,\u5c31\u662f $inc(ans[id[right]],sum)$\u3002\n\n\u4e0a\u8ff0\u7684\u65b9\u6cd5\u662f\u8981\u6c42\u5de6\u534a\u8fb9\u548c\u53f3\u534a\u8fb9\u7684\u53f3\u7aef\u70b9\u6709\u5e8f,\u4e14\u5de6\u534a\u8fb9\u7684\u6700\u5927\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u534a\u8fb9\u7684\u6700\u5c0f\u65f6\u95f4\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u5148 $CDQ(l,mid)\\ CDQ(mid+1,right)$ \u7684\u65b9\u6cd5,**\u6bcf\u4e00\u6b21\u7b97\u5b8c\u5f53\u524d\u7684\u8d21\u732e,\u5c31\u6392\u597d\u5e8f**,\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5566\u3002\u65e2\u7136\u662f $CDQ$,\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u5f52\u5e76\u6392\u5e8f,\u5e38\u6570\u5c0f\u3002\n\n\u7136\u540e\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48 $CDQ$ \u8981\u5206\u6cbb\u3002\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $i$,\u5b83\u7ecf\u8fc7 $\\log\\ n$ \u5c42\u7684\u5206\u6cbb\u4ee5\u540e,\u5fc5\u7136\u4f1a\u4e0e\u6bcf\u4e00\u4e2a\u53f3\u533a\u95f4\u7b97\u8d21\u732e\u3002\u4e00\u5f00\u59cb\u53f3\u533a\u95f4\u6709 $\\frac{n}{2}$ \u4e2a\u6570\u5b57,\u7136\u540e\u53d8\u4e3a $\\frac{n}{4}\\ \\frac{n}{8}.etc$\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u6d89\u53ca\u5230\u9012\u5f52,\u8fd9\u91cc\u4f5c\u51fa\u5927\u81f4\u7684\u63a8\u6d4b : $\\log\\ n$ \u5c42,\u6bcf\u4e00\u5c42\u7684\u603b\u548c\u662f $n$,\u90a3\u5c31\u662f $n \\log\\ n$\u3002\u5b9e\u9645\u4e0a\u5e94\u8be5\u662f $O(f(n) \\log\\ n)$,\u6211\u8868\u793a\u5e76\u4e0d\u4f1a\u4e3b\u5b9a\u7406\u3002\n\n\u6700\u540e\u6ce8\u610f\u4e00\u4e0b\u65f6\u95f4\u76f8\u540c,\u5148\u4fee\u6539,\u518d\u67e5\u8be2(\u867d\u7136\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u65f6\u95f4\u4f1a\u76f8\u540c)\u3002\n\n```pascal\nfunction judge(i,j:longint):boolean;\nbegin\n\tif place[i]<>place[j] then // place \u662f\u53f3\u7aef\u70b9\n\tbegin\n\t\tif place[i]<place[j] then exit(True);\n\t\texit(False);\n\tend;\n\tif mode[i]<mode[j] then exit(True); // \u67e5\u8be2\u7684 mode \u662f 2,\u4fee\u6539\u7684 mode \u662f 1\n\texit(False);\nend;\n\nprocedure CDQ(l,r:longint);\nvar\n\tleft,right,i,mid:longint; // left \u662f\u5de6\u534a\u8fb9\u5f00\u59cb\u7b2c\u4e00\u4e2a\u8282\u70b9,right \u662f\u53f3\u534a\u8fb9\u7b2c\u4e00\u4e2a\u8282\u70b9,\u4e24\u8005\u90fd\u7528\u4e8e\u5f52\u5e76\u6392\u5e8f\n\tsum:int64; // '\u73b0\u5728'\u5de6\u534a\u8fb9\u7684\u8d21\u732e\nbegin\n\tif l=r then exit;\n\tmid:=(l+r) >> 1;\n\tCDQ(l,mid); // \u5148\u5f80\u4e0b\n\tCDQ(mid+1,r);\n\tsum:=0; left:=l; right:=mid+1;\n\tfor i:=l to r do\n\t\tif (left<right)and(judge(left,right)) or (right>r) then // \u5728\u5de6\u8fb9\n\t\tbegin\n\t\t\tif mode[left]=1 then inc(sum[id[left]]); // \u4fee\u6539\u7684 id \u662f\u4fee\u6539\u7684\u503c,\u800c\u67e5\u8be2\u7684 id \u662f\u6b64\u67e5\u8be2\u662f\u7b2c\u51e0\u4e2a\u67e5\u8be2\n\t\t\tcopy[1,i]:=mode[left]; copy[2,i]:=place[left]; copy[3,i]:=id[left]; inc(left); // \u5f52\u5e76\u6392\u5e8f\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\tif mode[right]=2 then dec(ans[id[right]],sum);\n\t\t\tif mode[right]=3 then inc(ans[id[right]],sum);\n\t\t\tcopy[1,i]:=mode[right]; copy[2,i]:=place[right]; copy[3,i]:=id[right]; inc(right);\n\t\tend;\n\tfor i:=l to r do\n\tbegin mode[i]:=copy[1,i]; place[i]:=copy[2,i]; id[i]:=copy[3,i]; end;\nend;\n```\n\n### $II.$ \u4e8c\u7ef4 \\ $Mokia$\n\n\u9898\u76ee\u5927\u610f : \u7ed9\u51fa\u4e00\u4e2a\u7a7a\u7684\u4e8c\u7ef4\u77e9\u9635 ($N$ \u884c $N$ \u5217),\u64cd\u4f5c\u5305\u62ec\u5355\u70b9\u4fee\u6539,\u77e9\u9635\u67e5\u8be2\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u7684\u9898\u76ee,\u81f3\u5c11\u5728\u770b\u5230 $N$ \u7684\u6570\u636e\u8303\u56f4\u4e4b\u524d\u662f\u600e\u4e48\u8ba4\u4e3a\u7684\u3002\n\n\u6570\u636e\u8303\u56f4 : $N \\leq 2 \\times 10^6$\u3002\u800c\u6811\u5957\u6811 (\u6211\u6307\u7684\u662f\u6811\u72b6\u6570\u7ec4\u6216\u8005\u7ebf\u6bb5\u6811) \u600e\u4e48\u4e5f\u53ea\u80fd $N \\leq 10^4$\u3002\n\n\u8fd9\u5c31\u5c55\u73b0\u4e86 $CDQ$ \u6bd4\u8f83\u597d\u7684\u4ee5\u4e00\u9762 **\u54ea\u4e2a\u4fee\u6539\u4f1a\u5f71\u54cd\u54ea\u4e2a\u67e5\u8be2**,\u5c31\u4e0d\u7528\u8003\u8651 $N$ \u7684\u5927\u5c0f,\u4e0d\u7528\u8003\u8651\u6a21\u62df\u77e9\u9635\u3002\n\n\u7b2c\u4e00\u6b65,\u6211\u4eec\u628a\u67e5\u8be2\u770b\u505a\u662f\u4e00\u4e2a\u4e8c\u7ef4\u524d\u7f00\u548c\u7684\u67e5\u8be2\u3002\u4e5f\u5c31\u662f\u8bf4,\u6211\u4eec\u5bf9\u4e8e $x,y,x1,y1$ \u7684\u67e5\u8be2,\u770b\u505a\u5168\u90e8\u4ee5 $1$ \u5f00\u59cb\u7684\u77e9\u9635,\u5982\u4e0b\u56fe : (\u9ed1\u8272\u7684\u662f\u52a0\u7684,\u7ea2\u8272\u7684\u662f\u51cf\u53bb\u7684,\u5269\u4e0b\u7684\u9ec4\u8272\u5c31\u662f\u76ee\u6807\u77e9\u9635)\n\n![](https://i.loli.net/2018/09/15/5b9c83b75cb73.png)\n\n\u73b0\u5728\u95ee\u9898\u4ece\u539f\u6765\u7684\u4e00\u4e2a\u53f3\u7aef\u70b9\u53d8\u6210\u4e86\u4e24\u4e2a\u53f3\u7aef\u70b9,\u4f46\u662f\u8d21\u732e\u8fd8\u662f\u76f8\u540c\u7684,\u4e14\u6709\u4e00\u4e2a\u3002\u5047\u5982\u4e24\u4e2a\u70b9 $x_i,y_i$,$x_i$ \u5df2\u7ecf\u6ee1\u8db3 $\\leq x_j$,\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u9700\u8981\u770b $y_i$ \u5bf9 $y_j$ \u600e\u4e48\u6837\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4(\u6743\u57df)\u6765\u7ef4\u62a4\u4e00\u4e0b,\n\u6bcf\u4e00\u6b21\u5de6\u534a\u8fb9\u6709\u4fee\u6539\u7684\u65f6\u5019\u66f4\u65b0\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4,\u6bcf\u5f53\u53f3\u534a\u8fb9\u6709\u70b9\u53ef\u4ee5\u6ee1\u8db3\u5f53\u524d\u7684\u5de6\u534a\u8fb9\u7684\u70b9\u7684\u65f6\u5019 ($left,right$),\u5c31\u7edf\u8ba1\u53f3\u8fb9\u7684\u70b9\u7684\u7b2c\u4e8c\u4e2a\u53f3\u7aef\u70b9 ($right_y$) \u7684\u524d\u9762\u6709\u591a\u5c11\u4e2a\u5de6\u534a\u8fb9\u7684\u70b9 ($1_y~left_y$) \u7684\u7b2c\u4e8c\u4e2a\u53f3\u7aef\u70b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b,\u5982\u679c\u6211\u4eec\u5148\u5bf9\u6240\u6709\u7684\u7b2c\u4e00\u4e2a\u53f3\u7aef\u70b9 ($x$) \u8fdb\u884c\u4e86\u6392\u5e8f,\u90a3\u4e48\u6bcf\u4e00\u6b21**\u5f80\u4e0b**,\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u65f6\u95f4\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\u5373\u53ef,\u8fd9\u6837\u5b50\u8ddf\u4e0a\u6587\u7684 **\u4ece\u4e0b\u5f80\u4e0a,\u5bf9\u53f3\u7aef\u70b9\u8fdb\u884c\u6392\u5e8f** \u662f\u4e00\u6837\u7684\u3002\n\n```pascal\nprocedure CDQ(l,r:longint);\nvar\n\tleft,right,i,mid:longint; // left \u662f\u5de6\u534a\u8fb9\u5f00\u59cb\u7b2c\u4e00\u4e2a\u8282\u70b9,right \u662f\u53f3\u534a\u8fb9\u7b2c\u4e00\u4e2a\u8282\u70b9,\u4e24\u8005\u90fd\u7528\u4e8e\u5f52\u5e76\u6392\u5e8f\nbegin\n\tif l=r then exit;\n\tmid:=(l+r) >> 1;\n\tleft:=l; right:=mid+1;\n\tfor i:=l to r do \n\tbegin\n\t\tif (time[i]<=mid)and(mode[i]=1) then // \u8ba1\u7b97\u5de6\u534a\u8fb9\u7684\u4ea7\u751f\u7684\u8d21\u732e\n\t\t\tInsert(point[2,i],value[i]);  // value[i] \u662f\u4fee\u6539\u7684\u503c,Insert \u662f\u6811\u72b6\u6570\u7ec4\u7684 Add\n\t\tif (time[i]>mid)and(mode[i]=2) then // \u8ba1\u7b97\u53f3\u534a\u8fb9\u62e5\u6709\u7684\u8d21\u732e\n\t\t\tinc(ans[id[i]],Query(point[2,i])*value[i]); // \u67e5\u8be2\u7684 value[i] \u53ea\u6709 1 \u548c -1,\u7528\u6765\u8868\u793a\u52a0\u8fd8\u662f\u51cf\n\t\tif (time[i]<=mid) then // \u4ee5\u4e0b\u90fd\u662f\u5f52\u5e76\u6392\u5e8f\n\t\tbegin\n\t\t\tcopy[1,left]:=time[i]; copy[2,left]:=point[1,i]; copy[3,left]:=point[2,i]; \n\t\t\tcopy[4,left]:=value[i]; copy[5,left]:=id[i]; copy[6,left]:=mode[i]; inc(left);\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\tcopy[1,right]:=time[i]; copy[2,right]:=point[1,i]; copy[3,right]:=point[2,i]; \n\t\t\tcopy[4,right]:=value[i]; copy[5,right]:=id[i]; copy[6,right]:=mode[i]; inc(right);\n\t\tend;\n\tend;\n\tfor i:=l to r do // \u7b97\u5b8c\u8d21\u732e\u4ee5\u540e\u6309\u7167 time \u6392\u5e8f\n\tbegin\n\t\ttime[i]:=copy[1,i]; point[1,i]:=copy[2,i]; point[2,i]:=copy[3,i];\n\t\tvalue[i]:=copy[4,i]; id[i]:=copy[5,i]; mode[i]:=copy[6,i]; \n\tend;\n\tCDQ(l,mid);\n\tCDQ(mid+1,r);\nend;\n```\n\n\u6700\u540e\u603b\u7ed3 $CDQ$ \u5206\u6cbb\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9:\n\n$I.\\ CDQ$\u5206\u6cbb\u4f1a\u6309\u7167\u5404\u4e2a\u53c2\u6570\u7684\u987a\u5e8f\u800c\u6539\u53d8\u9012\u5f52\u7684\u987a\u5e8f\u3002\n\n$II.\\ CDQ$\u5206\u6cbb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u4e0d\u662f\u975e\u5e38\u7684\u597d,\u5e38\u6570\u5de8\u5927,\u4f46\u662f\u53ef\u4ee5\u505a\u90a3\u4e9b\u4e8c\u7ef4\u4ee5\u4e0a\u7684\u9898\u76ee,\u4e0d\u7528\u8003\u8651 $N$ \u7684\u5927\u5c0f\u3002 (\u4f46\u662f\u8be2\u95ee\u592a\u591a\u8fd8\u662f\u4f1a\u70b8)\n\n$III.\\ $\u6709\u4e9b\u4eba\u662f\u76f4\u63a5 $Sort$ \u7684,\u800c\u4e0d\u662f\u5f52\u5e76\u6392\u5e8f,\u6240\u4ee5 $CDQ$ \u5206\u6cbb\u7684\u4e09\u4e2a\u6b65\u9aa4\u53ef\u4ee5\u6253\u4e71\u3002\n\n\n\n\n\n\n",
        "postTime": 1536378943,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "CDQ\u5206\u6cbb-\u4ece\u6811\u72b6\u6570\u7ec4\u95ee\u9898\u5230Mokia"
    },
    {
        "content": "\u8981\u6c42\u67e5\u8be2\u77e9\u9635(x1 , y1 , x2 , y2)\u5185\u7684\u7528\u6237\u4e2a\u6570\uff0c\u4e3a\u4e86\u4f7f\u95ee\u9898\u66f4\u52a0\u5177\u6709\u4e00\u822c\u6027\uff0c\u6211\u4eec\u8003\u8651\u5c06\u95ee\u9898\u7b80\u5316\uff0c\u8bb0$f(x,y)$\u4e3a\u77e9\u9635(1 , 1 , x , y)\u7684\u7528\u6237\u4e2a\u6570\uff0c\u5219\u7b54\u6848\u663e\u7136\u4e3a\n$$f(x2,y2)+f(x1-1,y1-1)-f(x1-1,y2)-f(x2,y1 -1)$$\n\n\u56e0\u6b64\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u5982\u4f55\u6c42\u89e3$f(x,y)$\n\n\u6211\u4eec\u8003\u8651\u4f7f\u7528cdq\u5206\u6cbb\u79bb\u7ebf\u89e3\u51b3\uff0c\u6211\u4eec\u7684\u76ee\u6807\u5373\u6c42\u89e3\u65f6\u95f4\u6233\u5728\u5f53\u524d\u8be2\u95ee\u4e4b\u524d\uff0c\u540c\u65f6\u6a2a\u7eb5\u5750\u6807\u5747\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u6a2a\u7eb5\u5750\u6807\u7684\u52a0\u5165\u64cd\u4f5c\u7684\u52a0\u5165\u7528\u6237\u548c\u3002\n\n\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u65f6\u95f4\u4f5c\u4e3a\u7b2c\u4e00\u7ef4\uff0cx\u4f5c\u4e3a\u7b2c\u4e8c\u7ef4\u5f52\u5e76\u6392\u5e8f\u3002\n\n\u5f53$q_i.x > q_j.x$\u65f6\uff0c\u5982\u679c$q_j$\u662f\u67e5\u8be2\u64cd\u4f5c\uff0c\u7531\u4e8e$q_j$\u7684\u7ed3\u679c\u4e00\u5b9a\u4f1a\u88ab\u5de6\u533a\u95f4\u7684\u63d2\u5165\u64cd\u4f5c\u6240\u5f71\u54cd\uff0c\u7531\u4e8e\u5df2\u52a0\u5165\u7684$i$\u7684$x$\u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e$q_j$\u7684$x$\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5728\u5df2\u52a0\u5165\u7684$i$\u4e2d\u627e\u5230$y$\u503c\u6bd4\u5f53\u524d\u5c0f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5de6\u533a\u95f4\u5df2\u63d2\u5165$i$\u7684$y$\u503c\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u5feb\u901f\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u5219\u5f53$q_i.x <= q_j.x$\u65f6\uff0c\u5982\u679c$q_i$\u662f\u67e5\u8be2\u64cd\u4f5c\uff0c\u5219\u6211\u4eec\u5728\u6b63\u5728\u5408\u5e76\u7684\u6570\u636e\u4e2d\u5df2\u7ecf\u5728\u5de6\u7aef\u67e5\u8be2\u8fc7\u7ed3\u679c\u4e86\u5ffd\u7565\u6389\uff0c\u5426\u5219\u6211\u4eec\u628a$y$\u503c\u63d2\u5165\u6811\u72b6\u6570\u7ec4\u4e2d\uff08\u7406\u7531\u89c1\u4e0a\uff09\u3002\n\n\u5b8c\u6210\u540e\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u5c31\u597d\u4e86~\n\n~~\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u90a3\u4e48\u9898\u89e3\u90fd\u8981\u7528$x$\u6392\u5e8f\u4f5c\u4e3a\u7b2c\u4e00\u7ef4~~\n\n\u4e0d\u61c2\u7684\u53ef\u4ee5\u770b\u4e00\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\nvoid read(int &x){ \n\tint f=1;x=0;char s=getchar();\n\twhile(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\n\tx*=f;\n}\nconst int MAXQ = 2e5 + 5;\nconst int MAXN = 2e6 + 5;\nstruct node {\n\tint x , y , ty , t , val;\n\tnode () {}\n\tnode (int X , int Y , int T , int Ti , int V) {\n\t\tx = X;y = Y;ty = T;t = Ti;val = V;\n\t}\n}q[MAXQ] , b[MAXQ];\nLL tr[MAXN] , ans[MAXN];\nint n , cnt , T;\nvoid update(int x , int y) {\n\tfor (; x <= n; x += (x & (-x))) tr[x] += y;\n}\nLL find(int x) {\n\tLL res = 0;\n\tfor (; x; x -= (x & (-x))) res += tr[x];\n\treturn res;\n}\nvoid cdq(int l , int r) {\n\tif(l == r) return;\n\tint mid = (l + r) >> 1;\n\tcdq(l , mid);cdq(mid + 1 , r);\n\tint x = l , y = mid + 1 , t = 0;\n\twhile(x <= mid && y <= r) {\n\t\tif(q[x].x <= q[y].x) {\n\t\t\tb[++t] = q[x];\n\t\t\tif(!q[x].ty) update(q[x].y , q[x].val);\n\t\t\tx ++;\n\t\t}\n\t\telse {\n\t\t\tb[++t] = q[y];\n\t\t\tif(q[y].ty) ans[q[y].t] += find(q[y].y) * q[y].ty;\n\t\t\ty ++;\n\t\t}\n\t}\n\tfor (int i = x; i <= mid; ++i) {\n\t\tb[++t] = q[i];\n\t\tif(!q[i].ty) update(q[i].y , q[i].val);\n\t}\n\tfor (int i = y; i <= r; ++i) {\n\t\tb[++t] = q[i];\n\t\tif(q[i].ty) ans[q[i].t] += find(q[i].y) * q[i].ty;\n\t}\n\tfor (int i = l; i <= mid; ++i) if(!q[i].ty) update(q[i].y , -q[i].val);\n\tfor (int i = 1; i <= t; ++i) q[i + l - 1] = b[i];\n}\nint main() {\n\tint ty;\n\tread(ty);read(n);\n\twhile(1) {\n\t\tread(ty);\n\t\tif(ty == 3) break;\n\t\telse if(ty == 1) {\n\t\t\tint x , y , a;\n\t\t\tread(x);read(y);read(a);\n\t\t\tq[++cnt] = node(x , y , 0 , 0 , a);\n\t\t}\n\t\telse {\n\t\t\tint x1 , y1 , x2 , y2;\n\t\t\tread(x1);read(y1);read(x2);read(y2);\n\t\t\tT ++;\n\t\t\tq[++cnt] = node(x1 - 1 , y1 - 1 , 1 , T , 0);q[++cnt] = node(x2 , y2 , 1 , T , 0);\n\t\t\tq[++cnt] = node(x1 - 1 , y2 , -1 , T , 0);q[++cnt] = node(x2 , y1 - 1 , -1 , T , 0);\n\t\t}\n\t}\n\tcdq(1 , cnt);\n\tfor (int i = 1; i <= T; ++i) printf(\"%lld\\n\" , ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1595926804,
        "uid": 171554,
        "name": "Reanap",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "\u7b97\u6cd5\u4e66\u7684\u7f51\u7ad9\u53ef\u540c\u6b65\u63d0\u4ea4:[Contest-Hunter](http://noi-test.zzstep.com/contest/0x49%E3%80%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%BF%9B%E9%98%B6%E3%80%8D%E7%BB%83%E4%B9%A0/4911%20Mokia)\n\n---\n\n\u770b\u4e00\u773c\u9898,\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u88f8\u9898??\n\n\u518d\u770b\u4e00\u773c\u6570\u636e\u8303\u56f4,woc,\u8fd9\u4e0d\u662f$ K- D\\ \\ Tree \\ $\u4e48,\u4e0d\u4f1a\u5199\u554aQAQ\n\n\u7ffb\u4e00\u7ffb\u7b97\u6cd5\u4e66,\u63d0\u793a\u5199\u7740:\u57fa\u4e8e\u65f6\u95f4\u7684\u5206\u6cbb\u7b97\u6cd5(\u4e0d\u5c31\u662f$CDQ$\u5206\u6cbb\u4e48)\n\n\u6765\u4e4b\u524d\u5148\u628a[\u964c\u4e0a\u82b1\u5f00](https://www.luogu.org/problem/P3810)\u505a\u4e86\n\n\u8003\u8651\u628a\u6a2a\u5750\u6807$CDQ$\u5206\u6cbb,\u628a\u7eb5\u5750\u6807\u7528\u6811\u72b6\u6570\u7ec4\u5b58\n\n\u8be2\u95ee\u4e0d\u592a\u597d,\u53ef\u4ee5\u7528**\u5dee\u5206\u7684\u601d\u60f3**\u628a\u77e9\u5f62$S_{(X1,Y1,X2,Y2)}$\u62c6\u6210$S_{(1,1,X2,Y2)}-S_{(1,1,X1-1,Y2)}-S_{(1,1,X2,Y1-1)}+S_{(1,1,X1-1,Y1-1)}$,\u5206\u62104\u4e2a\u8be2\u95ee\u5373\u53ef,\u7136\u540e\u5c31\u53ef\u4ee5\u5957$CDQ$\u7684\u677f\u5b50\u4e86 ^v^\n\n~~\u6709\u7bc7\u9898\u89e3\u8bf4\u65f6\u95f4\u662f$O(nlogn)$,\u6211\u89c9\u5f97\u90a3\u4f4d\u5927\u7237\u9700\u8981\u56de\u53bb\u91cd\u65b0\u5b66$CDQ$\u5206\u6cbb\u4e86~~\n\n\u5206\u6cbb+\u6811\u72b6\u6570\u7ec4,\u663e\u7136\u662f$O(nlog^2n)$(\u51c6\u786e\u5730\u8bf4\u5e94\u8be5\u662f$O(nlognlogw)$\n\n\u5982\u679c\u4f60\u505a\u8fc7[\u5929\u4f7f\u73a9\u5076](https://www.luogu.org/problem/P4169)\u8fd9\u9053\u6bd2\u7624\u5361\u5e38\u7684\u8bdd\u4f60\u5c31\u77e5\u9053\u5206\u6cbb\u8fc7\u7a0b\u4e2d\u7684\u5feb\u6392\u53ef\u4ee5\u7528\u5f52\u5e76\u6392\u5e8f\u5199,\u8fd9\u6837\u80fd\u5c06\u5e38\u6570\u4f18\u5316\u5230\u539f\u6765\u7684$\\frac{1}{2}$,\u4e0d\u8fc7\u8fd9\u9053\u9898\u65f6\u95f4\u5f88\u677e,\u4e0d\u9700\u8981,\u6700\u6162\u70b9\u4e5f\u4e0d\u8d85\u8fc7$1s$\n\n**\u7ec6\u8282:** long long,\u56de\u6eaf \u90fd\u4e0d\u8981\u5fd8\u4e86\n\n\u4e0b\u9762\u770b\u4ee3\u7801:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\n#define N 2000100\ninline int read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=(x<<3)+(x<<1)+c-'0';\n        c=getchar();\n    }\n    return x*f;\n}\nint s,w,n,opt,id,bit[N],mx;\nll ans[N];\nstruct Query{//id\u8868\u793a\u662f\u7b2c\u51e0\u4e2a\u8be2\u95ee,type\u6307\u64cd\u4f5c\u7c7b\u578b\n\tint x,y,type,val,id;//val\u5728\u4fee\u6539\u4e2d\u8868\u793a\u52a0\u4e0a\u7684\u6743\u503c,\u5728\u8be2\u95ee\u4e2d\u8868\u793a\u52a0\u4e0a\u8fd8\u662f\u51cf\u53bb(1/-1)\n}q[N],a[N];\nstruct Note{//ans\u8fd8\u8981\u52a0\u4e0a\u77e9\u5f62\u5927\u5c0f*s,\u6240\u4ee5\u8981\u8bb0\u5f55\u77e9\u5f62\u5750\u6807\n\tint X1,Y1,X2,Y2;\n}qwq[N];\nbool cmp2(Query a,Query b){\n\treturn a.x==b.x?a.y<b.y:a.x<b.x;\n}\n//\u4e0b\u9762\u662f\u6811\u72b6\u6570\u7ec4\u57fa\u672c\u64cd\u4f5c,\u4e0d\u8bf4\u4e86\ninline int lowbit(int x){\n\treturn x&(-x);\n}\ninline void Add(int x,int d){\n\twhile(x<=mx){\n\t\tbit[x]+=d;\n\t\tx+=lowbit(x);\n\t}\n} \ninline int Ask(int x){\n\tint ans=0;\n\twhile(x){\n\t\tans+=bit[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\nvoid CDQ(int l,int r){\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tCDQ(l,mid),CDQ(mid+1,r);\n\tsort(a+l,a+mid+1,cmp2);\n\tsort(a+mid+1,a+r+1,cmp2);//sort\u5373\u53ef,\u8fd8\u53ef\u4ee5\u7528\u5f52\u6392\n\tint i=mid+1,j=l;\n\twhile(i<=r){\n\t\twhile(j<=mid&&a[j].x<=a[i].x){//\u626b\u63cfl-mid\u7684\u4fee\u6539\u5bf9mid+1-r\u7684\u8be2\u95ee\u7684\u5f71\u54cd\n\t\t\tif(a[j].type==1){\n\t\t\t\tAdd(a[j].y,a[j].val);\n\t\t\t}\n\t\t\t++j;\n\t\t}\n\t\tif(a[i].type==2){\n\t\t\tans[a[i].id]+=1LL*a[i].val*Ask(a[i].y);\n\t\t}\n\t\t++i;\n\t} \n\tfor(int i=l;i<j;i++){\n\t\tif(a[i].type==1)Add(a[i].y,-a[i].val);//\u522b\u5fd8\u4e86\u56de\u6eaf\n\t}\n}\nint main(){\n\ts=read(),w=read();mx=2000000;\n\twhile(opt=read(),opt^3){\n\t\t++n;\n\t\tif(opt==1){\n\t\t\tq[n].x=read(),q[n].y=read(),q[n].val=read();\n\t\t\tq[n].type=opt;\n\t\t}\n\t\telse{\n\t\t\tint X1=read(),Y1=read(),X2=read(),Y2=read();\n\t\t\t++id;\n            //\u62c6\u6210\u56db\u4e2a\u8be2\u95ee\n\t\t\tq[n].x=X2,q[n].y=Y2;\n\t\t\tq[n].val=1,q[n].id=id,q[n].type=opt;\n\t\t\t++n;\n\t\t\tq[n].x=X1-1,q[n].y=Y2;\n\t\t\tq[n].val=-1,q[n].id=id,q[n].type=opt;\n\t\t\t++n;\n\t\t\tq[n].x=X2,q[n].y=Y1-1;\n\t\t\tq[n].val=-1,q[n].id=id,q[n].type=opt;\n\t\t\t++n;\n\t\t\tq[n].x=X1-1,q[n].y=Y1-1;\n\t\t\tq[n].val=1,q[n].id=id,q[n].type=opt;\n\t\t\tqwq[id].X1=X1,qwq[id].X2=X2,qwq[id].Y1=Y1,qwq[id].Y2=Y2;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=q[i];//\u95f2\u7684\u590d\u5236\u4e00\u4e0b\n\t}\n\tCDQ(1,n);\n\tfor(int i=1;i<=id;i++){\n\t\tprintf(\"%lld\\n\",ans[i]+1LL*(qwq[i].X2-qwq[i].X1+1)*(qwq[i].Y2-qwq[i].Y1+1)*s);\n\t}\n\treturn 0;//bye bye\n}\n\n```\n\n[*Froggy's blog*](https://www.luogu.org/blog/1445353309froggy/)\n\n#### \u5471!!\n\n",
        "postTime": 1573784705,
        "uid": 100285,
        "name": "Froggy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "\u8fd9\u79cd\u9898\u5f53\u7136\u8981\u5927\u529b `K-D Tree` \u5566\uff01\n\n\u9996\u5148\u662f\u5bf9\u77e9\u9635\u5efa 2-D Tree \uff0c\u7136\u540e\u7ef4\u62a4\u52a0\u5165\u7684\u70b9\u548c\u7ba1\u8f96\u8303\u56f4\u7684\u6743\u503c\u548c\u5c31\u884c\u4e86\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u5224\u65ad\u7ba1\u8f96\u8303\u56f4\u548c\u67e5\u8be2\u8303\u56f4\u7684\u5173\u673a\u5373\u53ef\u3002\n\n\u52a0\u4e00\u4e2a\u66ff\u7f6a\u7f8a\u5f0f\u91cd\u6784\uff0c\u56e0\u5b50\u662f $0.65$ \u5c31\u633a\u597d\u7684\n\n(\u5f53\u7136\u597d\u50cf\u6df1\u5ea6\u4e3a $25$ \u7684\u671d\u9c9c\u6811\u6548\u679c\u4e5f\u633a\u597d\u2026\u2026?)\n\n\u8fd9\u79cd\u5927\u6570\u636e\u7ed3\u6784\u6ca1\u5565\u53ef\u8bb2\u7684\uff0c\u76f4\u63a5\u770b\u4ee3\u7801\u5427\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#define ll long long\nusing namespace std;\n\ntemplate<typename int_t>\nvoid readx(int_t& x)\n{\n    x=0; int_t k=1; char ch=0;\n    while (ch<'0' || ch>'9') { ch=getchar(); if (ch=='-') k=-1; }\n    while (ch>='0' && ch<='9') { x=x*10+ch-'0'; ch=getchar(); }\n    x*=k;\n}\n\nnamespace KDT\n{\n    #define LCH tree[inx].ch[0]\n    #define RCH tree[inx].ch[1]\n    \n    int tsiz,troo,cstD,plen;\n    struct __Point\n    {\n        int x,y,v;\n        bool operator < (const __Point& b) const\n        {\n            if (!cstD) return ( (x<b.x) || (x==b.x && y<b.y) );\n            else return ( (y<b.y) || (y==b.y && x<b.x) );\n        }\n    }tmp[200010],tmp_point;\n    struct KDT_Node\n    {\n        int ch[2],Lx,Ly,Rx,Ry,siz,sum;\n        __Point p;\n    }tree[200010];\n    stack<int> memalc;\n    \n    void MemInit(const int& rg)\n    {\n        for (int i=rg;i;i--) memalc.push(i);\n        memset(tmp,0,sizeof tmp); tmp_point.x=tmp_point.y=tmp_point.v=0;\n    }\n    \n    void NewNode(int& inx)\n    {\n        inx=memalc.top(); memalc.pop();\n        tree[inx].Lx=tree[inx].Ly=tree[inx].Rx=tree[inx].Ry;\n        tree[inx].siz=tree[inx].sum=0; tree[inx].p=tmp_point;\n        LCH=RCH=0;\n    }\n    \n    void Update(const int& inx)\n    {\n        tree[inx].siz=tree[LCH].siz+tree[RCH].siz+1;\n        tree[inx].sum=tree[LCH].sum+tree[RCH].sum+tree[inx].p.v;\n        tree[inx].Lx=tree[inx].Rx=tree[inx].p.x;\n        tree[inx].Ly=tree[inx].Ry=tree[inx].p.y;\n        \n        if (LCH)\n        {\n            tree[inx].Lx=min(tree[inx].Lx,tree[LCH].Lx);\n            tree[inx].Rx=max(tree[inx].Rx,tree[LCH].Rx);\n            tree[inx].Ly=min(tree[inx].Ly,tree[LCH].Ly);\n            tree[inx].Ry=max(tree[inx].Ry,tree[LCH].Ry);\n        }\n        if (RCH)\n        {\n            tree[inx].Lx=min(tree[inx].Lx,tree[RCH].Lx);\n            tree[inx].Rx=max(tree[inx].Rx,tree[RCH].Rx);\n            tree[inx].Ly=min(tree[inx].Ly,tree[RCH].Ly);\n            tree[inx].Ry=max(tree[inx].Ry,tree[RCH].Ry);\n        }\n    }\n    \n    int BuildTree(int lxx,int rxx,int dd)\n    {\n        cstD=dd; int mid=(lxx+rxx)>>1,inx=0;\n        nth_element(tmp+lxx,tmp+mid,tmp+rxx+1);\n        \n        NewNode(inx); tree[inx].p=tmp[mid];\n        if (mid>lxx) LCH=BuildTree(lxx,mid-1,!dd);\n        if (mid<rxx) RCH=BuildTree(mid+1,rxx,!dd);\n        Update(inx); return inx;\n    }\n    \n    void Pia(int inx)\n    {\n        if (LCH) Pia(LCH);\n        tmp[++plen]=tree[inx].p;\n        memalc.push(inx);\n        if (RCH) Pia(RCH);\n    }\n    \n    void RebuildCheck(int& inx,int dd)\n    {\n        if (tree[inx].siz*0.65+1<max(tree[LCH].siz,tree[RCH].siz))\n        {\n            plen=0; Pia(inx);\n            inx=BuildTree(1,plen,dd);\n        }\n    }\n    \n    void Ins(int& inx,__Point pn,int dd)\n    {\n        cstD=dd;\n        if (!inx)\n        {\n            NewNode(inx);\n            tree[inx].p=pn; Update(inx);\n            return;\n        }\n        if (tree[inx].p.x==pn.x && tree[inx].p.y==pn.y)\n        {\n            tree[inx].p.v+=pn.v;\n            tree[inx].sum+=pn.v;\n            Update(inx);\n            return;\n        }\n        if (pn<tree[inx].p) Ins(LCH,pn,!dd);\n        else Ins(RCH,pn,!dd);\n        Update(inx); \n        if (inx!=troo) RebuildCheck(inx,dd);\n    }\n    \n    bool InSqu(const int& _x1,const int& _y1,const int& _x2,const int& _y2,const int& _X1,const int& _Y1,const int& _X2,const int& _Y2)\n    {\n        return ( (_X1>=_x1) && (_Y1>=_y1) && \n                 (_X2<=_x2) && (_Y2<=_y2) );\n    }\n    \n    bool OutSqu(const int& _x1,const int& _y1,const int& _x2,const int& _y2,const int& _X1,const int& _Y1,const int& _X2,const int& _Y2)\n    {\n        return ( (_x1>_X2) || (_y1>_Y2) || \n                 (_x2<_X1) || (_y2<_Y1) );\n    }\n    \n    int Qry(const int& inx,const int& _x1,const int& _y1,const int& _x2,const int& _y2)\n    {\n        if (!inx) return 0; register int ret=0;\n        if (InSqu(_x1,_y1,_x2,_y2,tree[inx].Lx,tree[inx].Ly,tree[inx].Rx,tree[inx].Ry))\n            return tree[inx].sum;\n        if (OutSqu(_x1,_y1,_x2,_y2,tree[inx].Lx,tree[inx].Ly,tree[inx].Rx,tree[inx].Ry))\n            return 0;\n        if (InSqu(_x1,_y1,_x2,_y2,tree[inx].p.x,tree[inx].p.y,tree[inx].p.x,tree[inx].p.y))\n            ret+=tree[inx].p.v;\n        ret+=Qry(LCH,_x1,_y1,_x2,_y2); ret+=Qry(RCH,_x1,_y1,_x2,_y2);\n        return ret;\n    }\n    \n    #undef LCH\n    #undef RCH\n};\n\nint main()\n{\n    register int _x1,_x2,_y1,_y2,n,opt,ans; KDT::__Point pnt;\n    readx(n); readx(n); KDT::MemInit(200005); \n    while (1)\n    {\n        readx(opt);\n        if (opt==3) return 0; \n        if (opt==1)\n        {\n            readx(pnt.x); readx(pnt.y); readx(pnt.v);\n            KDT::Ins(KDT::troo,pnt,0);\n        }\n        else\n        {\n            readx(_x1); readx(_y1); readx(_x2); readx(_y2);\n            ans=KDT::Qry(KDT::troo,_x1,_y1,_x2,_y2);\n            printf(\"%d\\n\",ans);\n        }\n    }\n}\n```",
        "postTime": 1543996724,
        "uid": 21512,
        "name": "GNAQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "CDQ\u5206\u6cbb\n\n\u628a\u8be2\u95ee\u79bb\u7ebf  \n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u8be2\u95ee$(x1,y1)(x2,y2)$\uff0c\u628a\u5b83\u62c6$(1,1)(x2,y2)-(1,1)(x1-1,y2)-(1,1)(x2,y1-1)+(1,1)(x1-1,y1-1)$\n\n~~\u4e4b\u540e17w\u8be2\u95ee\u53d8\u621020w\u8be2\u95ee~~\n\n\u9996\u5148\u6309\u65f6\u95f4\u8f74\u5c06\u6240\u6709\u8be2\u95ee\u5206\u6210\u4e24\u534a\uff0c\u5bf9\u4e24\u8fb9\u5206\u522b\u9012\u5f52\u5904\u7406\u5185\u90e8\u7684\u7b54\u6848\u66f4\u65b0\uff0c\u4e4b\u540e\u518d\u5904\u7406\u5de6\u8fb9\u5bf9\u53f3\u8fb9\u7684\u8d21\u732e\n\n\u4e24\u8fb9\u5206\u522b\u6309x\u5750\u6807\u6392\u5e8f\uff0cy\u5750\u6807\u7528\u6811\u72b6\u6570\u7ec4(\u7ebf\u6bb5\u6811)\u7ef4\u62a4\uff0c\u53cc\u6307\u9488\u626b\u63cf\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u81f3\u4e8e\u6392\u5e8f\uff0c\u65e2\u7136\u5df2\u7ecf\u7528\u4e86\u53cc\u6307\u9488\uff0c\u5e72\u8106\u7528\u5f52\u5e76\u6392\u5e8f\u5c31\u597d\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6$\\rm O(nlogn)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$\\rm O(n)$\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <assert.h>\n\n#define int long long\n\nstruct Query {int x, y, id, typ, num; } q[200005], t[200005];\ninline bool operator < (const Query &a, const Query &b) {return a.id < b.id; }\n\nint x1, y1, x2, y2, tot, w, S, x, y, z, op;\nint b[2000005];\nvoid add(int x, int y) {for (; x <= w; x += x & -x) b[x] += y; }\nvoid clear(int x) {for (; x <= w; x += x & -x) b[x] = 0; }\nint query(int x) {int ans = 0; for(; x; x -= x & -x) ans += b[x]; return ans; }\nvoid CDQ(int l, int r) {\n\tif (l == r) return;\n\tint mid = l + r >> 1;\n\tCDQ(l, mid); CDQ(mid + 1, r);\n\tint p1 = l, p2 = mid + 1, p3 = l;\n\twhile (p1 <= mid && p2 <= r) {\n\t\tif (q[p1].x <= q[p2].x) {\n\t\t\tif (!q[p1].typ) add(q[p1].y, q[p1].num);\n\t\t\tt[p3++] = q[p1++];\n\t\t} else {\n\t\t\tif (q[p2].typ) q[p2].num += query(q[p2].y);\n\t\t\tt[p3++] = q[p2++];\n\t\t}\n\t}\n\twhile (p1 <= mid) {\n\t\tif (!q[p1].typ) add(q[p1].y, q[p1].num);\n\t\tt[p3++] = q[p1++];\n\t}\n\twhile (p2 <= r) {\n\t\tif (q[p2].typ) q[p2].num += query(q[p2].y);\n\t\tt[p3++] = q[p2++];\n\t}\n\tfor (int i = l; i <= mid; i++) if (!q[i].typ)  clear(q[i].y);\n\tfor (int i = l; i <= r; i++) q[i] = t[i];\n}\nsigned main() {\n\tscanf(\"%lld%lld\", &S, &w);\n\twhile (scanf(\"%lld\", &op), op ^ 3) {\n\t\tif (op == 1) {\n\t\t\tscanf(\"%lld%lld%lld\", &x, &y, &z); ++tot;\n\t\t\tq[tot] = (Query) {x, y, tot, 0, z};\n\t\t} else {\n\t\t\tscanf(\"%lld%lld%lld%lld\", &x1, &y1, &x2, &y2);\n\t\t\t++tot, q[tot] = (Query) {x2, y2, tot, 1, 0};\n\t\t\t++tot, q[tot] = (Query) {x1 - 1, y2, tot, 1, 0};\n\t\t\t++tot, q[tot] = (Query) {x2, y1 - 1, tot, 1, 0};\n\t\t\t++tot, q[tot] = (Query) {x1 - 1, y1 - 1, tot, 1, 0};\n\t\t}\n\t}\n\tCDQ(1, tot);\n\tstd::sort(q + 1, q + tot + 1);\n\tfor (int i = 1; i <= tot; i++) \n\t\tif (q[i].typ) {\n\t\t\tprintf(\"%lld\\n\", \n\t\t\t\tq[i].num - q[i + 1].num - q[i + 2].num + q[i + 3].num \n\t\t\t\t+ S * (q[i].y - q[i + 3].y) * (q[i].x - q[i + 3].x));\n\t\t\ti += 3;\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1531122116,
        "uid": 26127,
        "name": "Weng_Weijie",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "\u4e0d\u540c\u7684\u89e3\u6cd5,\u652f\u6301\u5728\u7ebf.\n# \u5206\u5757 + \u6743\u503c\u7ebf\u6bb5\u6811\n\u8fd9\u5927\u6982\u662f\u9664\u4e86CDQ\u4ee5\u5916\u6700\u597d\u5199\u7684\u65b9\u6cd5\u4e86\u5427,\u5bf9\u4e8e2000000\u7684\u533a\u95f4\uff0c\u6211\u4eec\u76f4\u63a5\u5206\u6210\u5927\u5c0f\u4e3a3500(\u4e0d\u4e00\u5b9a\u6700\u4f18\u79c0)\u7684\u5757\uff0c\u6bcf\u4e00\u5217\u548c\u6bcf\u4e00\u5757\u7ef4\u62a4\u4e00\u4e2a\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u76f4\u63a5\u5c06\u5176\u63d2\u5165\u8be5\u5217\u548c\u8be5\u5757\u7684\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u76f4\u63a5\u5bf9\u4e8e\u8de8\u8fc7\u7684\u5757\u548c\u8fb9\u89d2\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5373\u53ef.\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $ O( nlog_2W + m \\sqrt{W}log_2W ) $\n\n\u7406\u8bba\u4e0a\u662f\u96be\u4ee5\u8fc7\u53bb\uff0c\u4f46\u662f\u8003\u8651\u5230\u4fee\u6539\u64cd\u4f5c\u5341\u5206\u7a00\u758f\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u6743\u503c\u7ebf\u6bb5\u6811\u52a0\u4e00\u4e2a\u8def\u5f84lazy\u4f18\u5316\uff0c\u5bf9\u4e8e\u4e00\u4e2asize\u53ea\u67091\u7684\u5b50\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u5efa\u51fa\u6765\uff0c\u800c\u662f\u628a\u8981\u5efa\u7684\u8282\u70b9\u4fdd\u5b58\u5728\u8be5\u70b9.\n\n\u4e8b\u5b9e\u8bc1\u660e\u4ee5\u4e0a\u4f18\u5316\u5341\u5206\u6709\u6548\u3002+O2\u53ef\u4ee5AC\u6b64\u9898.\n\n\u4e0d\u8fc7\u597d\u50cf\u6709\u4e00\u4e2a\u5b8c\u5168\u8def\u5f84\u538b\u7f29\u7684\u865a\u6811\u7248\u6743\u503c\u7ebf\u6bb5\u6811,\u4f46\u662f\u4f3c\u4e4e\u5341\u5206\u96be\u5199.\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nnamespace WST{\n\t#define LR l,mid\n\t#define RR mid + 1,r\n\t#define mid ( (l + r) >> 1 )\n\tconst int mxSize = 1e7;\n\t\n\tint ls[ mxSize ];\n\tint rs[ mxSize ];\n\tint v [ mxSize ];\n\tint lz[ mxSize ];\n\tint cnt = 0;\n\t\n\tint require() { return ++ cnt; }\n\t\n\tvoid push_down(int now,int l,int r){\n\t    if( !lz[now] or l == r )return ;\n\t    if( lz[now] <= mid )\n\t      { ls[now] = require(); v[ ls[now] ] = v[now],lz[ ls[now] ] = lz[now]; }\n\t    if( lz[now] >  mid )\n\t      { rs[now] = require(); v[ rs[now] ] = v[now],lz[ rs[now] ] = lz[now]; }\n\t    lz[now] = 0;\n\t}\n\t\n\tint insert(int now,int l,int r,int p,int val){\n\t    if( !now )\n\t      { now = require(); v[now] = val;lz[now] = p;return now; }\n\t    push_down(now,l,r); v[now] += val;\n\t    if( l == r )return now;\n\t    if( p <= mid )ls[now] = insert( ls[now],LR,p,val );\n\t    if( p >  mid )rs[now] = insert( rs[now],RR,p,val );\n\t    return now;\n\t}\n\t\n\tint query(int now,int l,int r,int p){\n        if( !p or !now )return 0;\n\t    if( l == r )return v[now];\n\t    if( lz[now] )return ( p >= lz[now] ) ? v[now] : 0;\n\t    int ans = v[ ls[now] ] * ( p >= mid );\n\t    if( p < mid )ans += query( ls[now],LR,p );\n\t    if( p > mid )ans += query( rs[now],RR,p );\n\t    return ans;\n\t}\n}\n\nint size = 3500;\n\nint main(){\n    int w,op;cin >> w >> w; WST::cnt = w + w / size + 2;\n    while( cin >> op ){\n        if( op == 3 )break;\n        if( op == 1 ){\n            int x,y,A;cin >> x >> y >> A;\n            WST::insert( x,1,w,y,A );\n            WST::insert( w + x / size + 1,1,w,y,A );\n        }\n        if( op == 2 ){\n            int X1,Y1,X2,Y2;cin >> X1 >> Y1 >> X2 >> Y2;\n            int blockL = ( X1 - 1 ) / size + 1 + 1;\n            int blockR = ( X2 + 1 ) / size - 1 + 1;\n            int ans = 0;\n            for( int b = blockL;b <= blockR;b ++ )\n              { ans += WST::query( w + b,1,w,Y2 );\n                ans -= WST::query( w + b,1,w,Y1 - 1 ); }\n            for( ;X1 / size + 1 != blockL and X1 <= X2;X1 ++ )\n              { ans += WST::query( X1,1,w,Y2 );\n                ans -= WST::query( X1,1,w,Y1 - 1 ); }\n            for( ;X2 / size + 1 != blockR and X2 >= X1;X2 -- )\n              { ans += WST::query( X2,1,w,Y2 );\n                ans -= WST::query( X2,1,w,Y1 - 1 ); }\n            cout << ans << \"\\n\";\n        }\n    }\n    return 0;\n}\n\n\n```\n\n",
        "postTime": 1543555968,
        "uid": 47240,
        "name": "bzy369258147",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5176\u5b9e\u548c\u964c\u4e0a\u82b1\u5f00\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999,\u53ea\u9700\u8981\u4e00\u4e2a\u8f6c\u5316.\u964c\u4e0a\u82b1\u5f00\u662fx,y,z\u4e09\u7ef4\u5750\u6807\u8f74,\u800c\u6b64\u9898\u76f4\u63a5\u628a\u65f6\u95f4\u987a\u5e8f\u60f3\u8c61\u6210\u7b2c\u4e00\u7ef4\u5c31\u884c\u4e86.\n\n\u8ba1\u7b97\u7b54\u6848\u7684\u65f6\u5019\u6709\u4e00\u6b65\u5bb9\u65a5\u539f\u7406,\u548c\u77e9\u5f62\u8986\u76d6\u5f88\u50cf,\u5c31\u662f(x2,y2) - (x1 - 1,y2) - (x2,y1 - 1) + (x1,y1),\u7136\u540e\u518d\u52a0\u4e0as*(x2-x1)*(y2 -y2)\u4fbf\u662f\u7b54\u6848.\n\n\u5269\u4e0b\u7684\u5c31\u662fcdq\u5206\u6cbb\u4e86,\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b3\u7ef4\u504f\u5e8f\u5c31\u884c\u4e86,\u677f\u5b50\u5c31\u4e0d\u8bf4\u4e86\n\n\u4e0a\u4ee3\u7801:\n\n```\n\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#include<algorithm>\n#include<vector>\n#include<cstring>\nusing namespace std;\n#define duke(i,a,n) for(int i = a;i <= n;i++)\n#define lv(i,a,n) for(int i = a;i >= n;i--)\n#define clean(a) memset(a,0,sizeof(a))\n#define pr pair<int,int>\n#define mp make_pair\nconst int INF = 1 << 30;\nconst double eps = 1e-8;\ntypedef long long ll;\ntypedef double db;\n#define B cout << \"BBB\" << endl;\ntemplate <class T>\nvoid read(T &x)\n{\n\tchar c;\n\tbool op = 0;\n\twhile(c = getchar(), c < '0' || c > '9')\n\t\tif(c == '-') op = 1;\n\tx = c - '0';\n\twhile(c = getchar(), c >= '0' && c <= '9')\n\t\tx = x * 10 + c - '0';\n\tif(op) x = -x;\n}\ntemplate <class T>\nvoid write(T x)\n{\n\tif(x < 0) putchar('-'), x = -x;\n\tif(x >= 10) write(x / 10);\n\tputchar('0' + x % 10);\n}\nstruct node\n{\n\tint x,y,id,typ,num;\n\tinline bool operator < (const node &a) const\n\t{\n\t\treturn id < a.id;\n\t}\n}q[2000005],t[2000005];\nstruct tr\n{\n\tint tree[2000005],kk;\n\tint lowbit(int x)\n\t{\n\t\treturn x & (-x);\n\t}\n\tvoid add(int x,int k)\n\t{\n\t\tif(x == 0) B\n\t\twhile(x <= kk)\n\t\t{\n\t\t\ttree[x] += k;\n\t\t\tx += lowbit(x);\n\t\t}\n\t}\n\tint query(int x)\n\t{\n\t\tint ans = 0;\n\t\twhile(x)\n\t\t{\n\t\t\tans += tree[x];\n\t\t\tx -= lowbit(x);\n\t\t}\n\t\treturn ans;\n\t}\n\tvoid clear(int x)\n\t{\n\t\twhile(x <= kk)\n\t\t{\n\t\t\ttree[x] = 0;\n\t\t\tx += lowbit(x);\n\t\t}\n\t}\n}T;\nint s,w,tot;\nvoid cdq(int l,int r)\n{\n\tif(l == r) return;\n\tint mid = (l + r) >> 1;\n\tcdq(l,mid);cdq(mid + 1,r);\n\tint p1 = l,p2 = mid + 1,p3 = l;\n\twhile(p1 <= mid && p2 <= r)\n\t{\n\t\tif(q[p1].x <= q[p2].x)\n\t\t{\n\t\t\tif(!q[p1].typ) T.add(q[p1].y,q[p1].num);\n\t\t\tt[p3++] = q[p1++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(q[p2].typ) q[p2].num += T.query(q[p2].y);\n\t\t\tt[p3++] = q[p2++];\n\t\t}\n\t}\n\twhile(p1 <= mid)\n\t{\n\t\t// cout<<q[p1].y<<endl;\n\t\tif(!q[p1].typ)\n\t\tT.add(q[p1].y,q[p1].num);\n\t\tt[p3++] = q[p1++];\n\t}\n\twhile(p2 <= r)\n\t{\n\t\tif(q[p2].typ)\n\t\tq[p2].num += T.query(q[p2].y);\n\t\tt[p3++] = q[p2++];\n\t}\n\tduke(i,l,mid)\n\t{\n\t\tif(!q[i].typ) T.clear(q[i].y);\n\t}\n\tduke(i,l,r)\n\t{\n\t\tq[i] = t[i];\n\t}\n}\nint op;\nint main()\n{\n\tread(s);read(w);\n\tT.kk = w;\n\twhile(scanf(\"%d\",&op),op != 3)\n\t{\n\t\tif(op == 1)\n\t\t{\n\t\t\tint x,y,z;\n\t\t\tread(x);read(y);read(z);\n\t\t\t// x += 1;y += 1;\n\t\t\tq[++tot] = (node){x,y,tot,0,z};\n\t\t}\n\t\telse if(op == 2)\n\t\t{\n\t\t\tint x1,x2,y1,y2;\n\t\t\tread(x1);read(y1);read(x2);read(y2);\n\t\t\t// x1 += 1;y1 += 1;x2 += 1;y2 += 1;\n\t\t\tq[++tot] = (node){x2,y2,tot,1,0};\n\t\t\tq[++tot] = (node){x1 - 1,y2,tot,1,0};\n\t\t\tq[++tot] = (node){x2,y1 - 1,tot,1,0};\n\t\t\tq[++tot] = (node){x1 - 1,y1 - 1,tot,1,0};\n\t\t}\n\t\t// cout<<tot<<endl;\n\t}\n\t// cout<<\"QAQ\"<<endl;\n\tcdq(1,tot);\n\tsort(q + 1,q + tot + 1);\n\tduke(i,1,tot)\n\t{\n\t\tif(q[i].typ)\n\t\t{\n\t\t\tprintf(\"%d\\n\",q[i].num - q[i + 1].num -\tq[i + 2].num + q[i + 3].num + s * (q[i].y - q[i + 3].y) * (q[i].x - q[i + 3].x));\n\t\t\ti += 3;\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1543221917,
        "uid": 55877,
        "name": "DukeLv",
        "ccfLevel": 0,
        "title": "P4390 [BOI2007]Mokia \u6469\u57fa\u4e9a \u4e09\u7ef4\u504f\u5e8f cdq\u5206\u6cbb"
    },
    {
        "content": "\u7531\u4e8e\u672c\u849f\u84bb\u4e0d\u4f1acdq\u5206\u6cbb\uff0c\u6211\u7533\u8bf7\u628a\u65f6\u9650\u8c03\u5927\u4e86\u7136\u540e\u6811\u5957\u6811\u7ec8\u4e8e\u5361\u8fc7\u53bb\u4e86...\n\n~~\u53ef\u80fd\u9700\u8981\u4e00\u4e2aO2~~\n\n~~fread\u662f\u4e2a\u597d\u4e1c\u897f~~\n\n\u6811\u72b6\u6570\u7ec4\u5957splay\uff08\u5957treap\u4e5f\u884c\uff09\n\n\u975e\u5e38\u88f8\u7684\u4e8c\u7ef4\u6570\u70b9\uff0c\u6ce8\u610f\u6a2a\u5750\u6807\u79bb\u6563\u5316\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6a2a\u5750\u6807\uff0c\u4e0a\u9762\u5957splay\u7ef4\u62a4\u7eb5\u5750\u6807\uff0c\u67e5\u8be2\u5c31\u8c03\u75284\u6b21\u524d\u7f00\u548c\u67e5\u8be2\u7136\u540e\u7528\u5bb9\u65a5\u539f\u7406\u90a3\u6837\u641e\u4e00\u4e0b\u5c31\u884c\u4e86\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\n// \u6b64\u5904\u7565\u53bb\u4e00\u4e2a\u7528fread\u5b9e\u73b0\u7684\u8bfb\u5165\u4f18\u5316\n\n#define npt NULL\n#define rep(I, A, B) for (int I = (A); I <= (B); ++I)\n#define rrep(I, A, B) for (int I = (A); I >= (B); --I)\n\ninline int lowbit(int x) { return x & -x; }\n\nstruct Command {\n    int q, x, y, x1, y1, x2, y2;\n    int a;\n};\n\nconst int maxq = 2e5 + 100;\nCommand cmd[maxq];\nint exes[maxq << 2];\nint n, m, tot;\n\nstruct Node {\n    int loc;\n    int value, sum;\n    Node *ch[2], *fa;\n    explicit Node(int l = 0, int v = 0)\n        : loc(l), value(v), sum(v), fa(npt) { ch[0] = ch[1] = npt; }\n    int isc(int c) const { return fa && fa->ch[c] == this; }\n    int isc() const { return fa ? isc(1) : -1; }\n};\n\ninline void update(Node*& x) {\n    x->sum = x->value;\n    rep(i, 0, 1) if (x->ch[i])\n        x->sum += x->ch[i]->sum;\n}\ninline void rotate(Node*& x) {\n    if (!x->fa) return;\n    int d = x->isc();\n    Node* f = x->fa;\n    if (f->isc() != -1)\n        f->fa->ch[f->isc()] = x;\n    x->fa = f->fa;\n    f->ch[d] = x->ch[d ^ 1];\n    if (x->ch[d ^ 1]) x->ch[d ^ 1]->fa = f;\n    x->ch[d ^ 1] = f;\n    f->fa = x;\n    update(f);\n    update(x);\n}\ninline void splay(Node*& x, Node*& root) {\n    if (x == root) return;\n    Node* p = root->fa;\n    while (x->fa != p) {\n        Node* f = x->fa;\n        if (f->fa == p) rotate(x);\n        else {\n            if (f->isc() == x->isc())\n                rotate(f);\n            else rotate(x);\n            rotate(x);\n        }\n    }\n    root = x;\n}\ninline void insertSplay(Node*& root, int pos, int val) {\n    if (!root) {\n        root = new Node(pos, val);\n        return;\n    }\n    Node* curr = root;\n    while (0207) {\n    \tcurr->sum += val;\n        if (pos == curr->loc) {\n            curr->value += val;\n            return;\n        }\n        int d = (pos > curr->loc);\n        if (curr->ch[d]) curr = curr->ch[d];\n        else {\n            curr->ch[d] = new Node(pos, val);\n            curr->ch[d]->fa = curr;\n            curr = curr->ch[d];\n            splay(curr, root);\n            return;\n        }\n    }\n}\ninline int querySplay(Node* curr, int x) {\n    if (!curr) return 0;\n    int ret = 0;\n    while (curr) {\n        if (x < curr->loc) curr = curr->ch[0];\n        else {\n            if (curr->ch[0])\n                ret += curr->ch[0]->sum + curr->value;\n            else\n                ret += curr->value;\n            curr = curr->ch[1];\n        }\n    }\n    return ret;\n}\n\nNode *root[maxq << 2];\n\ninline void addBit(int x, int y, int v) {\n    for (; x <= tot; x += lowbit(x)) insertSplay(root[x], y, v);\n}\ninline int queryBit(int x, int y) {\n    int ans = 0;\n    for (; x; x -= lowbit(x)) ans += querySplay(root[x], y);\n    return ans;\n}\n\nint main() {\n    // freopen(\"mokia.in\", \"r\", stdin);\n    // freopen(\"mokia.out\", \"w\", stdout);\n    { int zero; read(zero); }\n    read(n);\n    int q; read(q);\n    while (q != 3) {\n    \tcmd[++m].q = q;\n        if (q == 1) {\n            read(cmd[m].x); read(cmd[m].y); read(cmd[m].a);\n            exes[++tot] = cmd[m].x;\n        } else {\n            read(cmd[m].x1); read(cmd[m].y1); read(cmd[m].x2); read(cmd[m].y2);\n            exes[++tot] = cmd[m].x1;\n            exes[++tot] = cmd[m].x2;\n        }\n        read(q);\n    }\n    std::sort(exes + 1, exes + tot + 1);\n    tot = std::unique(exes + 1, exes + tot + 1) - (exes + 1);\n    rep(i, 1, m)\n    \tif (cmd[i].q == 1) {\n    \t\tcmd[i].x = std::lower_bound(exes + 1, exes + tot + 1, cmd[i].x) - exes;\n    \t\taddBit(cmd[i].x, cmd[i].y, cmd[i].a);\n        } else {\n            cmd[i].x1 = std::lower_bound(exes + 1, exes + tot + 1, cmd[i].x1) - exes;\n            cmd[i].x2 = std::lower_bound(exes + 1, exes + tot + 1, cmd[i].x2) - exes;\n            int w1 = queryBit(cmd[i].x2, cmd[i].y2);\n            int w2 = queryBit(cmd[i].x2, cmd[i].y1 - 1);\n            int w3 = queryBit(cmd[i].x1 - 1, cmd[i].y2);\n            int w4 = queryBit(cmd[i].x1 - 1, cmd[i].y1 - 1);\n            printf(\"%d\\n\", w1 - w2 - w3 + w4);\n        }\n    return 0;\n}\n```",
        "postTime": 1534084063,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u7231\u4e86\uff01\n\n## \u601d\u8def\n\n\u770b\u5230\u8fd9\u9898\u76ee\u6211\u76f4\u63a5\u60f3\u5230\u4e86\u4e09\u503c\u504f\u5e8f\uff0c\u7136\u540e\u6211\u5c31\u5f00\u59cb\u4e86\u4e0d\u5f52\u4e4b\u8def\n\n1.\u628a\u64cd\u4f5c\u6309\u65f6\u95f4\u6392\u5e8f\uff0c\u5c31\u80fd\u79bb\u7ebf\u64cd\u4f5c\u4e86\n\n2.\u9996\u5148\u8bfb\u5165\u7684\u65f6\u5019\u5404\u4e2a\u64cd\u4f5c\u5df2\u7ecf\u9ed8\u8ba4\u662f\u6309\u65f6\u95f4\u6392\u5e8f\u7684\u4e86\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u65f6\u95f4\u8fd9\u4e00\u7ef4\n\n\u63a5\u7740\uff0c\u64cd\u4f5c\u5206\u4e24\u79cd\uff1a\n\uff081\uff09.\u6dfb\u52a0\u4f4f\u6237\uff08\u76f8\u5f53\u4e8e\u662f\u628a\u8fd9\u4e2a\u70b9\u7684\u6743\u503c\u52a0\u4e0a\u4e00\u4e2aa\uff09\n\n\uff082\uff09.\u67e5\u8be2\u4f4f\u6237\uff08\u67e5\u8be2\u7684\u8fd9\u4e2a\u8303\u56f4\u662f\u4e2a\u77e9\u5f62\uff09\n\n\u6240\u4ee5\u81ea\u7136\u5c31\u53ef\u4ee5\u7528\u5f52\u5e76\u6392\u5e8f+\u6811\u72b6\u6570\u7ec4\u6765\u89e3\u51b3\u4e86\n\n\u5176\u4e2d\u6700\u5999\u7684\u4e00\u6b65\u5728\u4e8e\u5c06\u64cd\u4f5c2\u4e2d\u7684\u7ed9\u51fa\u7684\u4e24\u4e2a\u70b9\u8fdb\u884c\u6269\u5c55\uff0c\u6269\u5c55\u62104\u4e2a\u70b9\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u7136\u540e\u5728\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u5019\u6309\u7167\u5750\u6807x\u6765\u6392\u5e8f\uff0c\u6839\u636e\u6811\u72b6\u6570\u7ec4\u7684\u6027\u8d28\u6765\u8fdb\u884c\u64cd\u4f5c\uff1a\n\n\u7ed3\u5408\u4ee3\u7801\u6765\u8bb2\u4e00\u4e0b\n\n    for (;tql!=3;){\n        cin>>tql;\n        if(tql == 1)R++,T[R].tt=R,cin>>T[R].x>>T[R].y>>T[R].z;\n        if(tql == 2){\n            R++;\n            int m=R;\n            book[m]=1;\n            R=R,T[R].t=1,cin>>T[R].x>>T[R].y,T[R].tt=m;\n            T[R].x--,T[R].y--;\n            R++,T[R].t=4,cin>>T[R].x>>T[R].y,T[R].tt=m;\n            R++,T[R].t=2,T[R].x=T[R-2].x,T[R].y=T[R-1].y,T[R].tt=m;\n            R++,T[R].t=3,T[R].x=T[R-2].x,T[R].y=T[R-3].y,T[R].tt=m;\n        }\n   }\n\n\n   \uff08\u89c1tql==2\u7684\u60c5\u51b5\uff09\n   \n   \uff08\u7ed9\u62d3\u5c55\u7684\u56db\u4e2a\u70b9\u8fdb\u884c\u6807\u8bb0\u7136\u540e\u5728\u540e\u9762\u8ba1\u7b97\u7b54\u6848\uff09\n   \nif(T[t2].t == 1)tong[T[t2].tt]+=get(T[t2].y); \n   \nif(T[t2].t == 2)tong[T[t2].tt]-=get(T[t2].y);\n   \nif(T[t2].t == 3)tong[T[t2].tt]-=get(T[t2].y);if(T[\n\nt2].t == 4)tong[T[t2].tt]+=get(T[t2].y);\n\n\u6b64\u5904\u8bf7\u81ea\u884c\u8111\u8865\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4 \n\n\u501f\u7528\u524d\u9762\u9898\u89e3\u7684\u56fe\u7247\u6765\u7406\u89e3\n\n![](https://i.loli.net/2018/09/15/5b9c83b75cb73.png)\n            \n            \n            \n  ## CODE\n  ```cpp\n#include  <bits/stdc++.h>\nusing namespace std;\nint c[2005001];\nint tong[200001];\nint w,tql,R=0;\nstruct node{int x,y,z,t,tt;}T[200001],p[200001];\nint book[200005];\nint lowbit(int x){return x&(-x);}\n\nint add(int x,int k){\n    while(x <= w)c[x]+=k,x+=lowbit(x);\n    return 0;\n}\n\nint get(int x){\n    int total=0;\n    while(x > 0)\n    total+=c[x],x-=lowbit(x);\n    return total;\n}\n\nint CDQ(int l , int r ){\n    if(l == r)return 0;\n    int mid=(l+r)>>1;\n    CDQ(l,mid);CDQ(mid+1,r);\n    int t1=l,t2=mid+1;\n    for (int i = l ; i <= r ; i ++){\n        if(T[t1].x <= T[t2].x && t1 <=mid || t2 > r){\n            if(T[t1].t == 0)add(T[t1].y,T[t1].z);\n            p[i]=T[t1],t1++;\n        }\n        else {\n            if(T[t2].t == 1)tong[T[t2].tt]+=get(T[t2].y);\n            if(T[t2].t == 2)tong[T[t2].tt]-=get(T[t2].y);\n            if(T[t2].t == 3)tong[T[t2].tt]-=get(T[t2].y);\n            if(T[t2].t == 4)tong[T[t2].tt]+=get(T[t2].y);\n            p[i]=T[t2],t2++;\n        }\n    }\n    for (int i = l ; i <= mid ; i ++)\n    if(T[i].t == 0)add(T[i].y,-T[i].z);\n    for (int i = l ; i <= r ; i ++)\n    T[i]=p[i];\n    return 0;\n}\nint main(){\n    cin>>tql>>w;\n    R=0;\n    for (;tql!=3;){\n        cin>>tql;\n        if(tql == 1)R++,T[R].tt=R,cin>>T[R].x>>T[R].y>>T[R].z;\n        if(tql == 2){\n            R++;\n            int m=R;\n            book[m]=1;\n            R=R,T[R].t=1,cin>>T[R].x>>T[R].y,T[R].tt=m;\n            T[R].x--,T[R].y--;\n            R++,T[R].t=4,cin>>T[R].x>>T[R].y,T[R].tt=m;\n            R++,T[R].t=2,T[R].x=T[R-2].x,T[R].y=T[R-1].y,T[R].tt=m;\n            R++,T[R].t=3,T[R].x=T[R-2].x,T[R].y=T[R-3].y,T[R].tt=m;\n        }\n        if(tql == 3)break;\n    }\n    \n    CDQ(1,R);\n    for (int i = 1 ; i <= R ; i ++)\n    if(book[i] != 0)cout<<tong[i]<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1590635693,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "\n## \u5206\u6790\n\u6211\u4eec\u4f1a\u53d1\u73b0\u683c\u5b50\u5f88\u5927\uff0c\u4f46\u662f\u4fee\u6539\u6570\u548c\u67e5\u8be2\u6570\u6bd4\u8f83\u5c0f\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u7ef4\u62a4\u6574\u4e2a\u683c\u5b50\uff0c\u800c\u8981\u4ece\u4fee\u6539\u548c\u67e5\u8be2\u4e0a\u627e\u7a81\u7834\u53e3\n\n\u6211\u4eec\u8bbe\u7b2c$i$\u6b21\u4fee\u6539\u7684\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u5206\u522b\u4e3a $nx,ny$ \uff0c\u5982\u679c\u5b83\u8981\u5bf9\u4e4b\u540e\u7684\u67d0\u4e2a\u77e9\u5f62\u4ea7\u751f\u8d21\u732e\u7684\u8bdd\n\n\u5fc5\u987b\u6ee1\u8db3 $x_1 \\leq nx \\leq x_2,y_1\\leq ny \\leq y_2$\n\n\u5982\u679c\u52a0\u4e0a\u65f6\u95f4\u7684\u9650\u5236\uff0c\u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\u4e94\u7ef4\u7684\u504f\u5e8f\uff0c\u4e0d\u597d\u5904\u7406\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u5bb9\u65a5\u7684\u65b9\u6cd5\u628a\u4e00\u4e2a\u5927\u77e9\u5f62\u5206\u6210\u56db\u4e2a\u5c0f\u77e9\u5f62\uff0c\u7c7b\u4f3c\u4e8e\u6c42\u524d\u7f00\u548c\u7684\u65b9\u6cd5\n\n\u5373 $sum[x_2][y_2]-sum[x_2][y_1-1]-sum[x_1-1][y2]+sum[x_1-1][y_1-1]$\n\n$sum[i][j]$ \u8868\u793a\u539f\u70b9\u548c $(i,j)$ \u56f4\u6210\u7684\u77e9\u5f62\u6240\u589e\u52a0\u7684\u503c\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f $i<j,x[i] \\leq x[j],y[i] \\leq y[j]$\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u79bb\u7ebf\u7528 $CDQ$ \u5206\u6cbb\u89e3\u51b3\n\n## \u4ee3\u7801\n``` cpp\n#include<cstdio>\n#include<algorithm>\ninline int read(){\n\tint x=0,fh=1;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9'){\n\t\tif(ch=='-') fh=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*fh;\n}\nconst int maxn=2e6+5;\nstruct asd{\n\tint id,x,y,wz,val;\n\tbool jud;\n\tasd(){}\n\tasd(int aa,int bb,int cc,int dd,int ee,bool ff){\n\t\tid=aa,x=bb,y=cc,wz=dd,val=ee,jud=ff;\n\t}\n}b[maxn];\nint s,w,cnt,js;\nbool cmp1(asd aa,asd bb){\n\tif(aa.id==bb.id && aa.x==bb.x) return aa.y<bb.y;\n\tif(aa.id==bb.id) return aa.x<bb.x;\n\treturn aa.id<bb.id;\n}\nbool cmp2(asd aa,asd bb){\n\tif(aa.x==bb.x) return aa.y<bb.y;\n\treturn aa.x<bb.x;\n}\nint lb(int xx){\n\treturn xx&-xx;\n}\nint tr[maxn];\nvoid ad(int wz,int val){\n\tfor(int i=wz;i<maxn;i+=lb(i)){\n\t\ttr[i]+=val;\n\t}\n}\nint cx(int wz){\n\tint nans=0;\n\tfor(int i=wz;i>0;i-=lb(i)){\n\t\tnans+=tr[i];\n\t}\n\treturn nans;\n}\nint ans[maxn][6];\nvoid solve(int l,int r){\n\tif(l==r) return;\n\tint mids=(l+r)>>1;\n\tsolve(l,mids);\n\tsolve(mids+1,r);\n\tstd::sort(b+l,b+mids+1,cmp2);\n\tstd::sort(b+mids+1,b+r+1,cmp2);\n\tint now=l;\n\tfor(int i=mids+1;i<=r;i++){\n\t\twhile(now<=mids && b[now].x<=b[i].x){\n\t\t\tif(!b[now].jud){\n\t\t\t\tad(b[now].y,b[now].val);\n\t\t\t}\n\t\t\tnow++;\n\t\t}\n\t\tif(b[i].jud){\n\t\t\tans[b[i].id][b[i].wz]+=cx(b[i].y);\n\t\t}\n\t}\n\tfor(int i=now-1;i>=l;i--){\n\t\tif(!b[i].jud){\n\t\t\tad(b[i].y,-b[i].val);\n\t\t}\n\t}\n}\nint jl[maxn],anss[maxn];\nint main(){\n\ts=read(),w=read();\n\twhile(1){\n\t\tint aa,bb,cc,dd,ee;\n\t\taa=read();\n\t\tjs++;\n\t\tjl[js]=aa;\n\t\tif(aa==1){\n\t\t\tbb=read(),cc=read(),dd=read();\n\t\t\tbb++,cc++;\n\t\t\tb[++cnt]=asd(js,bb,cc,0,dd,0);\n\t\t} else if(aa==2){\n\t\t\tbb=read(),cc=read(),dd=read(),ee=read();\n\t\t\tbb++,cc++,dd++,ee++;\n\t\t\tb[++cnt]=asd(js,dd,ee,1,0,1);\n\t\t\tb[++cnt]=asd(js,dd,cc-1,2,0,1);\n\t\t\tb[++cnt]=asd(js,bb-1,ee,3,0,1);\n\t\t\tb[++cnt]=asd(js,bb-1,cc-1,4,0,1);\n\t\t\tanss[js]=(dd-bb+1)*(ee-cc+1)*s;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\tstd::sort(b+1,b+1+cnt,cmp1);\n\tsolve(1,cnt);\n\tfor(int i=1;i<js;i++){\n\t\tif(jl[i]==2){\n\t\t\tprintf(\"%d\\n\",ans[i][1]-ans[i][2]-ans[i][3]+ans[i][4]+anss[i]);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1599619210,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "### \u6211CDQ\u4e00\u76f4\u5b66\u4e0d\u660e\u767d\uff0c\u770b\u4e86\u770b\u522b\u4eba\u7684\u601d\u8def\uff0c\u60f3\u60f3\u540e\u5199\u7bc7\u9898\u89e3\u3002\u5c06\u8be2\u95ee\u4e0e\u4fee\u6539\u6392\u5e8f\uff0c\u901a\u8fc7\u524d\u7f00\u548c\u6765\u641e\u6389\u8be2\u95ee\u3002\u7531\u4e8e\u6b64\u9898\u6027\u8d28\uff0c\u5728CDQ\uff08ll\uff0crr\uff09\u5185\uff0c\u5148\u7528\u65f6\u95f4\u6765\u5206\u6cbb\uff0c\u8fd9\u6837\u4fdd\u8bc1\u9898\u76ee\u8be2\u95ee\u4e0e\u4fee\u6539\u7684\u6027\u8d28\uff0c\u5206\u6cbb\u5b8c\u5904\u7406[ll,rr]\u533a\u95f4\uff0c\u5206\u5de6\u53f3\u4e24\u534a\uff0c\u6309\u5750\u6807\uff08x\uff09\u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u70b9\uff0c\u53ef\u4ee5\u901a\u8fc7\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5f97\u51fa\uff0c\u5728\u51fd\u6570\u5c3e\u90e8\u8981\u6e05\u7a7a\uff0c\u5176\u5b9e\uff0cCDQ\u5185\u7684\u987a\u5e8f\u5927\u6982\u5c31\u662f\u6309\u7167\u9898\u76ee\u7684\u6027\u8d28\u5427\u3002\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint lowbit(int x)\n{\n\treturn x&(-x);\n}\nstruct AAA\n{\n\tint x,y,num,xws,ans,ti;\n}xw[210000];\nint bj,cnt=0;\nint ccc[2000100];\nbool cmp(const AAA&ax,const AAA&bx)\n{\n\tif(ax.x==bx.x)return ax.y<bx.y;\n\treturn ax.x<bx.x;\n}\nbool cmpp(const AAA&ax,const AAA&bx)\n{\n\treturn ax.ti<bx.ti;\n}\nvoid add(int pos,int x)\n{\n\tfor(int i=pos;i<=bj;i+=lowbit(i))\n\t\tccc[i]+=x;\n}\nint gtsm(int pos)\n{\n\tint ret=0,i;\n\tfor(i=pos;i>0;i-=lowbit(i))\n\t\tret+=ccc[i];\n\treturn ret;\n}\nvoid CDQ(int ll,int rr)\n{\n\tif(ll==rr)return;\n\tint mid=(ll+rr)/2;\n\tCDQ(ll,mid);\n\tCDQ(mid+1,rr);\n\tsort(xw+ll,xw+mid+1,cmp);\n\t//int k;\n\t//for(k=ll;k<=mid;k++)printf(\"::%d %d:: \",xw[k].x,xw[k].y);\n\t//cout<<endl;\n\tsort(xw+mid+1,xw+rr+1,cmp);\n\t//for(k=mid+1;k<=rr;k++)printf(\"::%d %d:: \",xw[k].x,xw[k].y);\n\t//cout<<endl;\n\tint i=ll,j;\n\tfor(j=mid+1;j<=rr;j++)\n\t{\n\t\twhile(xw[i].x<=xw[j].x&&i<=mid)\n\t\t{\n\t\t\tif(xw[i].xws==0)\n\t\t\t\tadd(xw[i].y,xw[i].num);\n\t\t\ti++;\n\t\t}\n\t\tif(xw[j].xws==1)\n\t\t\txw[j].ans+=gtsm(xw[j].y);\n\t}\n\tfor(j=ll;j<i;j++)\n\t\tif(xw[j].xws==0)\n\t\t\tadd(xw[j].y,-xw[j].num);\n}\nint main()\n{\n\tint aa,bb,cc,dd;\n\tscanf(\"%d\",&aa);\n\tscanf(\"%d\",&aa);\n\tbj=aa+1;\n\tint opt,i;\n\twhile(1)\n\t{\n\t\tscanf(\"%d\",&opt);\n\t\tif(opt==1)\n\t\t{\n\t\t\tcnt++;\n\t\t\tscanf(\"%d%d\",&xw[cnt].x,&xw[cnt].y);\n\t\t\txw[cnt].x++;\n\t\t\txw[cnt].y++;\n\t\t\txw[cnt].ti=cnt;\n\t\t\tscanf(\"%d\",&xw[cnt].num);\n\t\t}\n\t\telse if(opt==2)\n\t\t{\n\t\t\tscanf(\"%d%d%d%d\",&aa,&bb,&cc,&dd);\n\t\t\taa++;bb++;cc++;dd++;\n\t\t\tcnt++;\n\t\t\txw[cnt].x=aa-1;xw[cnt].y=bb-1;\n\t\t\txw[cnt].xws=1;xw[cnt].ti=cnt;\n\t\t\tcnt++;\n\t\t\txw[cnt].x=aa-1;xw[cnt].y=dd;\n\t\t\txw[cnt].xws=1;xw[cnt].ti=cnt;\n\t\t\tcnt++;\n\t\t\txw[cnt].x=cc;xw[cnt].y=bb-1;\n\t\t\txw[cnt].xws=1;xw[cnt].ti=cnt;\n\t\t\tcnt++;\n\t\t\txw[cnt].x=cc;xw[cnt].y=dd;\n\t\t\txw[cnt].xws=1;xw[cnt].ti=cnt;\n\t\t}\n\t\telse break;\n\t}\n\tCDQ(1,cnt);\n\tsort(xw+1,xw+cnt+1,cmpp);\n\tfor(i=1;i<=cnt;i++)\n\t{\n\t\tif(xw[i].xws==1)\n\t\t{\n\t\t\tprintf(\"%d\\n\",xw[i].ans+xw[i+3].ans-xw[i+1].ans-xw[i+2].ans);\n\t\t\ti+=3;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1582646493,
        "uid": 73847,
        "name": "OYBDOOO",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "# \u4f3c\u4e4e\u672c\u9898\u9898\u89e3\u91cc\u8fd8\u6ca1\u6709\u7528\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u8fc7\u7684\n## \u8fd9\u662f\u4e00\u9053\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u677f\u5b50\u9898\n### \u52a8\u6001\u5f00\u70b9\uff0c\u8fd0\u7528\u56db\u5206\u7684\u601d\u60f3\uff0c\u5c06\u533a\u95f4\u5206\u4e3a\u5de6\u4e0a\uff0c\u5de6\u4e0b\uff0c\u53f3\u4e0a\uff0c\u53f3\u4e0b\u56db\u5757\uff0c\u5206\u522b\u8fdb\u884c\u9012\u5f52\u6c42\u89e3\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(q \\log W)$ \u4f46\u662f\u5e38\u6570\u8f83\u5927\uff0c\u88ab\u6811\u72b6\u6570\u7ec4\u540a\u7740\u6253\uff0c\u52a8\u6001\u5f00\u70b9\u540e\u7a7a\u95f4\u590d\u6742\u5ea6$O(s\\log W)$ s\u4e3a\u4fee\u6539\u64cd\u4f5c\u4e2a\u6570\n\n\u8d34\u4ee3\u7801\n```\n#include<bits/stdc++.h>\n#define N 160010\nusing namespace std;\nint tree[N*22], lu[N*22], ld[N*22], ru[N*22], rd[N*22], cnt = 1;//\u4e00\u5206\u4e3a\u56db\ninline void pushup(int rt){\n\ttree[rt] = tree[lu[rt]] + tree[ld[rt]] + tree[ru[rt]] + tree[rd[rt]];\n}\ninline void update(int x, int y, int rt, int LU, int LD, int RU, int RD, int p){\n\tif(LU == LD && RU == RD){tree[rt] += p; return ;}\n\tint midx = (LU + LD) >> 1, midy = (RU + RD) >> 1;\n\tif(midx >= x){\n\t\tif(midy >= y){\n\t\t\tif(!lu[rt])lu[rt] = ++ cnt;\n\t\t\tupdate(x, y, lu[rt], LU, midx, RU, midy, p);\n\t\t}\n\t\telse if(midy != RD){\n\t\t\tif(!ld[rt])ld[rt] = ++ cnt;\n\t\t\tupdate(x, y, ld[rt], LU, midx, midy + 1, RD, p);\n\t\t}\n\t}\n\telse if(midx != LD){\n\t\tif(midy >= y){\n\t\t\tif(!ru[rt])ru[rt] = ++ cnt;\n\t\t\tupdate(x, y, ru[rt], midx + 1, LD, RU, midy, p);\n\t\t}\n\t\telse if(midy != RD){\n\t\t\tif(!rd[rt])rd[rt] = ++ cnt;\n\t\t\tupdate(x, y, rd[rt], midx + 1, LD, midy + 1, RD, p);\n\t\t}\n\t}\n\tpushup(rt);\n}\ninline int query(int lx, int rx, int ly, int ry, int LU, int LD, int RU, int RD, int rt){\n\tif(lx <= LU && LD <= rx && ly <= RU && RD <= ry)return tree[rt];\n\tint midx = (LU + LD) >> 1, midy = (RU + RD) >> 1, ans = 0;\n\tif(midx >= lx && midy >= ly && lu[rt])ans += query(lx, rx, ly, ry, LU, midx, RU, midy, lu[rt]);\n\tif(midx >= lx && midy < ry && ld[rt] && midy != RD)ans += query(lx, rx, ly, ry, LU, midx, midy + 1, RD, ld[rt]);\n\tif(midx < rx && midy >= ly && ru[rt] && midx != LD)ans += query(lx, rx, ly, ry, midx + 1, LD, RU, midy, ru[rt]);\n\tif(midx < rx && midy < ry && rd[rt] && midx != LD && midy != RD)ans += query(lx, rx, ly, ry, midx + 1, LD, midy + 1, RD, rd[rt]);\n\treturn ans;\n}\nint main(){\n\tint opt, w;\n\twhile(scanf(\"%d\", &opt) != EOF && opt != 3){\n\t\tif(opt == 0){\n\t\t\tscanf(\"%d\", &w); continue;\n\t\t}\n\t\tif(opt == 1){\n\t\t\tint x, y, A; scanf(\"%d%d%d\", &x, &y, &A);\n\t\t\tupdate(x, y, 1, 1, w, 1, w, A);\n\t\t} else{\n\t\t\tint xl, xr, yl, yr; scanf(\"%d%d%d%d\", &xl, &yl, &xr, &yr);\n\t\t\tprintf(\"%d\\n\", query(xl, xr, yl, yr, 1, w, 1, w, 1));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1564655255,
        "uid": 29519,
        "name": "qianfujia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "\u4e4d\u4e00\u770b\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u9898\n\n\u53d1\u73b0\u88ab\u6570\u636e\u8303\u56f4\u6de6\u7ffb\u4e86\n\n\u4f5c\u4e3a\u4e00\u4e2a\u4ece\u6765\u4e0d\u613f\u610f\u52a8\u8111\u5b50\u7684\u4eba\u3002\u5f53\u7136\u662f\u80fd\u7528\u6570\u636e\u7ed3\u6784\u7edd\u4e0d\u50cf\u7b97\u6cd5\u5566\u3002\n\n\u8003\u8651\u5c06\u6811\u72b6\u6570\u7ec4\u5957\u5e73\u8861\u6811\u3002\n\n\u53d1\u73b0\u7a7a\u95f4\u53ef\u4ee5\u5f00\u7684\u4e0b\u3002\u53ea\u4e0d\u8fc7\u65f6\u95f4\u6709\u70b9\u5361\u7d27\u3002\u4e0d\u8fc7\u524d\u9762\u6709\u4f4d\u4ec1\u5144\u7533\u8bf7\u5c06\u65f6\u95f4\u8c03\u81f3\u4e24\u79d2\u3002\u5e94\u8be5\u5c31\u591f\u4e86\n\n\u63d2\u5165\u4e0d\u5728\u8bdd\u4e0b\u3002\u5bf9\u4e8e\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6811\u72b6\u6570\u7ec4\u524d\u7f00\u548c\uff0c\u4ee5\u53ca\u5e73\u8861\u6811\u4e2d\u7684\u524d\u7f00\u548c\u641e\u4e0b\u6765\u3002\n\n\u5176\u5b9e\u601d\u60f3\u4e0d\u96be\uff0c\u96be\u7684\u5c31\u662fcode\n\n```cpp\n\n//\u6ca1\u6709\u5361\u5e38\uff0c\u6240\u4ee5\u4f1aT\u4e00\u4e2a\u70b9\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\n\n#define Ls T[R].ch[0]\n#define Rs T[R].ch[1]\n\nconst int maxn=4000000;\n\nstruct node\n{\n\tint Size;//\u8282\u70b9\u4e2a\u6570\n\tint Self;//\u53ef\u91cd\u96c6\n\tint Val;\n\tint Key;//treap\u7684key\n\tint ch[2];\n\tnode (int a=0,int b=0,int c=0)\n\t{\n\t\tVal=a;\n\t\tSize=Self=b;\n\t\tKey=c;\n\t\tch[0]=ch[1]=0;\n\t}\n};\n\nnode T[maxn];\nint tail;\nint len,base[maxn];\n\nvoid sum(int R)\n{\n\tT[R].Size=T[R].Self+T[Ls].Size+T[Rs].Size;\n\treturn ;\n}\n\nvoid rotate(int &R,int base)\n{\n\tint k=T[R].ch[base^1];\n\tT[R].ch[base^1]=T[k].ch[base];\n\tT[k].ch[base]=R;\n\tsum(R);sum(k);\n\tR=k;\n\treturn ;\n}//\u65cb\u8f6c\u548c\u66f4\u65b0\n\nint cmpnum(int R,int val)\n{\n\tif(T[R].Val==val)\treturn -1;\n\treturn T[R].Val<val;\n}//\u6bd4\u8f83\u8be5\u5f80\u5b50\u6811\u7684\u90a3\u4e2a\u65b9\u5411\u8d70\n\nvoid insert(int &R,int val,int k)\n{\n\tif(!R)\t//\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u76f4\u63a5\u65b0\u5efa\n\t{\n\t\tR=++tail;\n\t\tT[R]=node(val,k,rand());\n\t\treturn ;\n\t}\n\tint dir=cmpnum(R,val);\n\tif(dir==-1)//\u9274\u4e8e\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u53ef\u4ee5\u4e0d\u8003\u8651\u7a7a\u95f4\u56de\u6536\n\t{\n\t\tT[R].Size+=k;\n\t\tT[R].Self+=k;\n\t\treturn;\n\t}\n\tinsert(T[R].ch[dir],val,k);\n\tsum(R);\n\tif(T[R].Key<T[T[R].ch[dir]].Key)\trotate(R,dir^1);\n\treturn ;\n}\n\nint check(int R,int val)//\u5728\u5e73\u8861\u6811\u4e2d\uff0c\u627e\u5230\u591a\u5c11\u4e2a\u6bd4\u4ed6\u5c0f\u7684\u70b9\uff0c\u7136\u540e\u524d\u7f00\u548c\n{\n\tif(!R)\treturn 0;\n\tint dir=cmpnum(R,val);\n\tif(dir==-1)\treturn T[Ls].Size+T[R].Self;\n\tif(dir==0)\treturn check(Ls,val);\n\tif(dir==1)\treturn check(Rs,val)+T[Ls].Size+T[R].Self;\n\treturn 0;\n}\n\nvoid Insert(int pos,int val,int k)//\u6811\u5957\u6811\u63d2\u5165\n{\n\twhile(pos<=len)\n\t{\n\t\tinsert(base[pos],val,k);\n\t\tpos+=(pos&(-pos));\n\t}\n\treturn ;\n}\n\nint Sum(int pos,int l,int r)//\u5904\u7406\u8be2\u95ee\n{\n\tint res=0;\n\twhile(pos)\n\t{\n\t\tres=res+check(base[pos],r)-check(base[pos],l-1);//\u524d\u7f00\u548c\n\t\tpos-=(pos&(-pos));\n\t}\n\treturn res;\n}\n\nint Ask(int L,int R,int l,int r)\n{\n\treturn Sum(R,l,r)-Sum(L-1,l,r);\n}\n\nvoid init(int n)\n{\n\tlen=n;\n\treturn ;\n}\n\nint main()\n{\n\tint opt,a,b,c,d;\n\tscanf(\"%d%d\",&opt,&a);\n\tinit(a);\n\tscanf(\"%d\",&opt);\n\twhile(opt!=3)\n\t{\n\t\tif(opt==1)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\t\tInsert(a,b,c);\n\t\t}\n\t\tif(opt==2)\n\t\t{\n\t\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t\t\tprintf(\"%d\\n\",Ask(a,c,b,d));\n\t\t}\n\t\tscanf(\"%d\",&opt);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1550452585,
        "uid": 28007,
        "name": "Lance1ot",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    },
    {
        "content": "### CDQ\u5206\u6cbb\n\n\u770b\u6570\u636e\u8303\u56f4\uff1a160000\u4e2a\u4fee\u6539\uff0c10000\u4e2a\u67e5\u8be2\u3002\u600e\u4e48\u770b\u90fd\u522b\u626d\uff0c\u52a0\u8d77\u6765\u90fd\u4e0d\u662f\u6574\u6570\u7684\uff01\uff01\uff01\u6240\u4ee5\u4e3a\u4e86\u51d1\u6210\u6574\u6570\uff0c\u6211\u4eec\u628a\u4e00\u4e2a\u67e5\u8be2\u62c6\u6210\u56db\u4e2a\u67e5\u8be2\uff0c\u8fd9\u6837\u5c31\u662f\u6574\u6570\u4e86233\n\n\u8fd9\u9898\u5361\u7a7a\u95f4\u5361\u7684\u7279\u522b\u6b7b\uff08\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u5361\u7a7a\u95f4\u5361\u4e86\u4e00\u665a\u4e0a\u624d60\u5206\u7684\uff09\n\n\u6240\u4ee5\u53ea\u597dCDQ\u5206\u6cbb\u4e86\uff08\u660e\u660e\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u90a3\u4e48\u597d\u5199\uff09\n\n\u6211\u4eec\u628a\u64cd\u4f5c\u7684\u65f6\u95f4\u5f53\u6210\u4e00\u7ef4$t_i$\uff0c\u7136\u540e\u5c31\u53d8\u6210\u4e86\u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\u64cd\u4f5c\uff0c\u56de\u7b54\u6240\u6709\u6ee1\u8db3$t\\le t_i,x\\le x_i,y\\le y_i$\u7684\u4fee\u6539\u64cd\u4f5c\u7684\u6743\u503c\u548c\uff0c\u7136\u540e\u5c31\u662f\u4e09\u7ef4\u504f\u5e8f\u7684\u677f\u5b50\u4e86\n\n\u8bb0\u5f55\u4e00\u4e0b\u6211\u611a\u8822\u7684\u9519\u8bef\uff1a\u8c03\u8bd5\u7684\u65f6\u5019\u6000\u7591\u6e05\u7a7a\u51fa\u4e86\u95ee\u9898\uff0c\u5c31memset\u4e86\u4e00\u4e0b\u3002\u8c03\u4e8620min\u53d1\u73b0**\u6ca1\u6709\u9012\u5f52\u53f3\u533a\u95f4**(f\\*\\*k,\u6211TM\u662fSB\u5427)\u3002\u7136\u540e\u4ea4\u4e0a\u53bb\uff0cTLE\uff01\u55ef\uff1f\u600e\u4e48\u56de\u4e8b\u513f\uff1f\u53c8\u8c03\u4e8620min\u53d1\u73b0\u6211\u628a\u6e05\u7a7a\u52a0\u56de\u6765\u4ee5\u540e\u6ca1\u6709\u5220memset\uff0cmmp\n\n\u8c28\u4ee5\u6b64\u9898\u89e3\u60bc\u5ff5\u56e0\u6211SB\u800c\u901d\u53bb\u76841\u4e2a\u5c0f\u65f6\n\n```\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nstruct Operate\n{\n    int posx,posy,id,val,type;\n\n    Operate(){}\n    Operate(int posx,int posy,int id,int val,int type):posx(posx),posy(posy),id(id),val(val),type(type){}\n}op[200010];\nint cnt;\n\nint ans[200010],qucnt;\n\nint s,n;\n\nbool cmpx(const Operate &x,const Operate &y)\n{\n    return x.posx<y.posx;\n}\n\nbool cmpid(const Operate &x,const Operate &y)\n{\n    return x.id<y.id;\n}\n\nstruct BIT\n{\n    int tr[2000010];\n\n    int lowbit(int x)\n    {\n        return x&-x;\n    }\n\n    void modify(int pos,int val)\n    {\n        for(;pos<=n;pos+=lowbit(pos))\n        {\n            tr[pos]+=val;\n        }\n    }\n\n    int query(int pos)\n    {\n        int res=0;\n        for(;pos;pos-=lowbit(pos))\n        {\n            res+=tr[pos];\n        }\n        return res;\n    }\n}A;\n\nvoid CDQ(int l,int r)\n{\n    if(l==r) return;\n    int mid=l+r>>1;\n    CDQ(l,mid);\n    sort(op+l,op+mid+1,cmpx);\n    sort(op+mid+1,op+r+1,cmpx);\n    int ptr=l;\n    for(int i=mid+1;i<=r;i++)\n    {\n        while(op[ptr].posx<=op[i].posx&&ptr<=mid)\n        {\n            if(op[ptr].type==1) A.modify(op[ptr].posy,op[ptr].val);           \n            ptr++;\n        }\n        if(op[i].type==2)\n        {\n            ans[op[i].id]+=(A.query(op[i].posy)+op[i].posx*op[i].posy*s)*op[i].val;\n        }\n    }\n    for(int i=l;i<ptr;i++)\n    {\n        if(op[i].type==1) A.modify(op[i].posy,-op[i].val);           \n    }\n    sort(op+l,op+r+1,cmpid);\n    CDQ(mid+1,r);\n}\n\nbool vis[200010];\n\nint main()\n{\n    cin>>s>>n;\n    int opt;\n    for(int i=1;cin>>opt;i++)\n    {\n        if(opt==3) break;\n        if(opt==1)\n        {\n            int x,y,val;\n            cin>>x>>y>>val;\n            op[++cnt]=Operate(x,y,i,val,1);\n        }\n        else\n        {\n            int lx,ly,rx,ry;\n            cin>>lx>>ly>>rx>>ry;\n            op[++cnt]=Operate(rx,ry,i,1,2);\n            op[++cnt]=Operate(rx,ly-1,i,-1,2);\n            op[++cnt]=Operate(lx-1,ry,i,-1,2);\n            op[++cnt]=Operate(lx-1,ly-1,i,1,2);\n            vis[i]=1;\n        }\n    }\n    CDQ(1,cnt);\n    for(int i=1;i<=200000;i++)\n    {\n        if(vis[i])\n        {\n            cout<<ans[i]<<'\\n';\n        }\n    }\n}\n```",
        "postTime": 1550023069,
        "uid": 53241,
        "name": "partychicken",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4390 \u3010[BOI2007]Mokia \u6469\u57fa\u4e9a\u3011"
    }
]