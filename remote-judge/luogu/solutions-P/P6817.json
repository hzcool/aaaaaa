[
    {
        "content": "\u53d6 $m = 2$\uff0c\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u7684\u4e00\u4e2a\u4e0b\u754c\u662f $\\lceil {n \\over 2} \\rceil$\u3002\n\n\u76f4\u63a5\u505a\u5f88\u96be\u5904\u7406\uff0c\u8003\u8651\u968f\u673a\u4e00\u4e2a\u503c\u5fc5\u9009\u3002\u6839\u636e\u7b54\u6848\u4e0b\u754c\uff0c\u968f\u673a\u4e00\u6b21\u80fd\u5f97\u5230\u6700\u4f18\u89e3\u7684\u6982\u7387\u5927\u4e8e $1 \\over 2$\uff0c\u56e0\u6b64\u968f\u673a $20$ \u6b21\u5de6\u53f3\u5373\u53ef\u3002\n\n\u540c\u4f59\u6761\u4ef6\u5373 $m \\mid x - y$\uff0c$x$ \u5df2\u7ecf\u901a\u8fc7\u968f\u673a\u56fa\u5b9a\uff0c\u90a3\u4e48\u679a\u4e3e\u6bcf\u4e2a\u6570 $y$\uff0c\u5c06 $|x - y|$ \u7684\u6240\u6709 **\u7d20\u56e0\u5b50** \u7528\u6876\u7ef4\u62a4\uff0c\u53d6\u6700\u5927\u51fa\u73b0\u6b21\u6570\u3002\n\n\u4f46\u53ef\u80fd\u5b58\u5728\u5408\u6570 $m$\uff0c\u4f7f $k$ \u540c\u6837\u53ef\u4ee5\u53d6\u5230\u6700\u5927\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u4e24\u4e2a\u5bf9\u5e94 **$a_i$ \u7684\u4f4d\u7f6e\u5b8c\u5168\u76f8\u540c** \u7684\u7d20\u56e0\u5b50 \u201c\u5408\u5e76\u201d\u3002\n\n\u5982\u679c\u66b4\u529b\u7ef4\u62a4\uff0c\u90a3\u4e48\u5355\u6b21\u5c1d\u8bd5 $\\mathcal O(n \\log^2 V)$\uff0c\u56e0\u4e3a\u5408\u6cd5\u7684\u7d20\u56e0\u5b50\u53ea\u6709 $\\mathcal O(\\log V)$ \u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ed9\u6bcf**\u79cd** $a_i$ \u8d4b\u968f\u673a\u6743\u503c\uff0c\u5bf9\u6bcf\u4e2a\u7d20\u56e0\u5b50\u7ef4\u62a4 xor-Hash \u5373\u53ef\u3002\n\n\u7ebf\u6027\u7b5b\u51fa\u6bcf\u4e2a\u6570\u6700\u5c0f\u7d20\u56e0\u5b50\uff0c\u603b\u590d\u6742\u5ea6 $\\mathcal O(V + T\\cdot n \\log V)$\uff0c$T$ \u4e3a\u968f\u673a\u6b21\u6570\uff0c$V$ \u4e3a\u503c\u57df\u3002\n\n\u6ce8\u610f\u8003\u8651\u4e00\u4e2a\u7d20\u56e0\u5b50\u91cd\u590d\u51fa\u73b0\u7684\u60c5\u51b5\u3002\n\n**[\u53c2\u8003\u5b9e\u73b0](https://www.cnblogs.com/RiverHamster/p/sol-lg6817.html)**",
        "postTime": 1600529286,
        "uid": 31756,
        "name": "RiverHamster",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6817 \u3010[PA2013]Filary\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6817)\n# \u601d\u8def\n\u6ce8\uff1a\u6b64\u9898\u4e3a\u4e0e @Reanap \u5171\u540c\u63a2\u8ba8\u9898\u76ee\uff0c\u90e8\u5206\u53c2\u8003\u4e86\u9898\u89e3\uff0c\u4e3b\u8981 AC \u601d\u8def\u4e3a @Reanap \u63d0\u51fa\u3002\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\uff0c\u8fd9\u4e2a\u9898\u76f4\u63a5\u505a\u80af\u5b9a\u662f\u4e0d\u597d\u641e\uff0c\u80af\u5b9a\u662f\u968f\u673a\u5316\u3002\uff08\u5f53\u6211\u63d0\u51fa\u6765\u7684\u65f6\u5019\u88ab\u81ea\u5df1\u5426\u51b3\u4e86\uff0c@Reanap \u4e5f\u5e76\u672a\u5bf9\u6211\u5206\u6790\u7684\u6b63\u786e\u6982\u7387\u63d0\u51fa\u53cd\u9a73\uff0c\u4ece\u800c\u8d70\u4e0a\u4e86\u4e00\u6761\u4e0d\u5f52\u8def\uff0c\u7531\u6b64\uff0c@Reanap \u662f\u5bfc\u81f4\u8fd9\u4e00\u95ee\u9898\u7684\u76f4\u63a5\u7f6a\u72af\uff08\uff08\uff08\n\n\n## \u65b9\u6cd51 - 92 pts\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u6211\u4eec $m=2$ \u7684\u65f6\u5019\uff0c\u7b54\u6848\u7684\u4e0b\u754c\u5c31\u662f $\\lceil\\frac{n}{2}\\rceil$\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5982\u679c\u968f\u673a\u4e24\u4e2a\u6570 $x,y$\uff0c\u5b83\u4eec\u90fd\u5728\u7b54\u6848\u91cc\u9762\u7684\u6982\u7387\u4e3a $\\frac{1}{4}$ \u3002\u6211\u4eec\u8003\u8651\u5982\u4f55\u5224\u65ad\uff0c\u56e0\u4e3a\u8fd9\u662f\u968f\u673a\u7b97\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u63d0\u51fa\u4e00\u79cd\u6b63\u786e\u6027\u6bd4\u8f83\u9ad8\u7684\u65b9\u6cd5\u5c31\u884c\u4e86\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u7684\u662f\uff0c\u6211\u4eec\u6700\u7ec8\u7684 $m$ \u4e00\u5b9a\u662f $|a_x-a_y|$ \u7684\u56e0\u5b50\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u5982\u679c\u5f53\u524d\u70b9\u4e0e\u4e0a\u4e00\u4e2a\u70b9\u5728 $\\bmod \\ \\ m$ \u610f\u4e49\u4e0b\u76f8\u540c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 $m$ \u4e0e $|a_x-a_y|$ \u53d6 $\\gcd$\u3002\n\n\u968f\u673a\u6570\u636e\u60c5\u51b5\u4e0b\uff0c\u968f\u673a\u64cd\u4f5c $20$ \u6b21\u5373\u53ef\u901a\u8fc7\u3002\u4f46\u662f\u8fd9\u4e2a\u9898\u6570\u636e\u4f3c\u4e4e\u5361\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6240\u4ee5\u53ea\u80fd\u505a\u5230 $92$ \u5206\u3002\n\n## $\\texttt{Code1}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define MAXN 100005\n\ntemplate <typename T> inline void read (T &t){t = 0;char c = getchar();int f = 1;while (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}while (c >= '0' && c <= '9'){t = (t << 3) + (t << 1) + c - '0';c = getchar();} t *= f;}\ntemplate <typename T,typename ... Args> inline void read (T &t,Args&... args){read (t);read (args...);}\ntemplate <typename T> inline void write (T x){if (x < 0){x = -x;putchar ('-');}if (x > 9) write (x / 10);putchar (x % 10 + '0');}\n\nint n,val[MAXN];\n\nint tot,pri[13];\nint Abs (int x){return x > 0 ? x : -x;}\n\n#define ull unsigned long long\n\nint gcd (int a,int b){return !b ? a : gcd (b,a % b);}\n\nint allans,allpos;\nvoid Work (int x,int y){\n\tint m = Abs (val[x] - val[y]);tot = 0;\n\tfor (Int px = 2;px * px <= m;++ px){\n\t\tif (m % px == 0) pri[++ tot] = px;\n\t\twhile (m % px == 0) m /= px;\n\t}\n\tif (m > 1) pri[++ tot] = m;\n\tint ans = 0,pos = 0;\n\tfor (Int k = 1;k <= tot;++ k){\n\t\tint px = pri[k],now = x,res = 0,g = 0;\n\t\tfor (Int i = 1;i <= n;++ i)\n\t\t\tif (val[i] % px == val[now] % px)\n\t\t\t\tres ++,g = gcd (g,Abs (val[i] - val[now])),now = i;\n\t\tif (res > ans) ans = res,pos = g;\n\t\telse if (res == ans) pos = max (pos,g);\n\t}\n\tif (ans > allans) allans = ans,allpos = pos;\n\telse if (ans == allans) allpos = max (allpos,pos);\n}  \n\nsigned main(){\n\tsrand (time(NULL));read (n);\n\tfor (Int i = 1;i <= n;++ i) read (val[i]);\n\tsort (val + 1,val + n + 1);\n\tfor (Int i = 1;i <= 100;++ i){\n\t\tint x = rand() % n + 1,y = rand() % n + 1;\n\t\twhile (val[x] == val[y]) x = rand() % n + 1,y = rand() % n + 1;\n\t\tWork (x,y);\n\t}\n\twrite (allans),putchar (' '),write (allpos),putchar ('\\n');\n\treturn 0;\n}\n```\n\n## \u65b9\u6cd52 - 86 pts\n\u6211\u4eec\u8fd8\u662f\u968f\u673a $x,y$\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e $|a_x-a_y|$ \u6bcf\u4e00\u4e2a\u8d28\u56e0\u6570\u627e\u5230\u6700\u5927\u6307\u6570\uff0c\u7136\u540e\u6211\u4eec\u627e\u5230\u6700\u5927\u6307\u6570\u3002\u95ee\u9898\u5c31\u662f\u5982\u4f55\u5408\u5e76\u4e0d\u540c\u8d28\u56e0\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5 hash \u4e00\u6ce2\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8d28\u56e0\u6570\u627e\u5230\u53ef\u884c\u9009\u7684\u6570\uff0c\u7136\u540e\u770b\u662f\u5426\u5b58\u5728\u4ea4\u96c6\u5373\u53ef\u3002\n\n\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u5206\u8fd8\u6ca1\u6709\u4e0a\u4e00\u79cd\u9ad8\u3002\n\n## $\\texttt{Code2}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define MAXN 100005\n\ntemplate <typename T> inline void read (T &t){t = 0;char c = getchar();int f = 1;while (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}while (c >= '0' && c <= '9'){t = (t << 3) + (t << 1) + c - '0';c = getchar();} t *= f;}\ntemplate <typename T,typename ... Args> inline void read (T &t,Args&... args){read (t);read (args...);}\ntemplate <typename T> inline void write (T x){if (x < 0){x = -x;putchar ('-');}if (x > 9) write (x / 10);putchar (x % 10 + '0');}\n\nint n,val[MAXN];\n\nint tot,pri[13],pw[13];\nint Abs (int x){return x > 0 ? x : -x;}\n\n#define ull unsigned long long\n\n#define MAXM 10000005\nint tong[MAXM];\nint Askfor (int m){\n\tfor (Int i = 1;i <= n;++ i) tong[val[i] % m] ++;\n\tint ans = 0;for (Int i = 1;i <= n;++ i) ans = max (ans,tong[val[i] % m]);\n\tfor (Int i = 1;i <= n;++ i) tong[val[i] % m] = 0;\n\treturn ans; \n}\n\nvector <ull> G[15]; \n\n#define seed 1000000007\null fpw[MAXN];\nvoid Askforpos (vector <ull> &pos,int m){\n\tfor (Int i = 1;i <= n;++ i) tong[val[i] % m] ++;\n\tint ans = 0;vector <int> tmp;\n\tfor (Int i = 1;i <= n;++ i){\n\t\tif (tong[val[i] % m] > ans) tmp.clear(),tmp.push_back (val[i] % m);\n\t\telse if (tong[val[i] % m] == ans) tmp.push_back (val[i] % m);\n\t} \n\tsort (tmp.begin(),tmp.end()),unique (tmp.begin(),tmp.end());\n\tfor (Int u : tmp){\n\t\tull hashnow = 0;\n\t\tfor (Int i = 1;i <= n;++ i) if (val[i] % m == u) hashnow += fpw[i];\n\t\tpos.push_back (hashnow);\n\t}\n\tfor (Int i = 1;i <= n;++ i) tong[val[i] % m] = 0;\n}\n\nint allans,allpos;\nint mxp[16],getp[16];\n\nmap <ull,int> mp;\n\nvoid Work (int x,int y){\n\tint m = Abs (val[x] - val[y]);tot = 0;\n\tfor (Int px = 2;px * px <= m;++ px){\n\t\tif (m % px == 0){\n\t\t\tpri[++ tot] = px,pw[tot] = 0;\n\t\t\twhile (m % px == 0) m /= px,pw[tot] ++;\n\t\t}\n\t}\n\tif (m > 1) pri[++ tot] = m,pw[tot] = 1;\n\tfor (Int i = 1;i <= tot;++ i) G[i].clear();int mxans = 0;\n\tfor (Int k = 1;k <= tot;++ k) mxans = max (mxans,Askfor (pri[k]));\n\tfor (Int k = 1;k <= tot;++ k){\n\t\tif (Askfor (pri[k]) != mxans) continue;\n\t\tint fir = Askfor (pri[k]),now = pri[k];mxp[k] = 1;\n\t\twhile (mxp[k] < pw[k] && Askfor (now * pri[k]) == fir) now *= pri[k],mxp[k] ++;\n\t\tgetp[k] = now,Askforpos (G[k],now);\n\t}\n\tmp.clear();\n\tfor (Int k = 1;k <= tot;++ k)\n\t\tfor (ull Hash : G[k]) \n\t\t\tif (mp.find (Hash) != mp.end()) mp[Hash] *= getp[k];\n\t\t\telse mp[Hash] = getp[k];\n\tint mxind = 0;\n\tfor (Int k = 1;k <= tot;++ k)\n\t\tfor (ull Hash : G[k]) mxind = max (mxind,mp[Hash]);\n\tif (mxans > allans) allans = mxans,allpos = mxind;\n\telse if (mxans == allans) allpos = max (allpos,mxind);\n}  \n\nsigned main(){\n\tsrand (time(NULL));read (n);\n\tfor (Int i = 1;i <= n;++ i) read (val[i]);\n\tsort (val + 1,val + n + 1);fpw[0] = 1;\n\tfor (Int i = 1;i <= n;++ i) fpw[i] = fpw[i - 1] * seed;\n\tfor (Int i = 1;i <= 100;++ i){\n\t\tint x = rand() % n + 1,y = rand() % n + 1;\n\t\twhile (val[x] == val[y]) x = rand() % n + 1,y = rand() % n + 1;\n\t\tWork (x,y);\n\t}\n\twrite (allans),putchar (' '),write (allpos),putchar ('\\n');\n\treturn 0;\n}\n```\n\n## \u65b9\u6cd53 - 100 pts\n\u6211\u4eec\u53d1\u73b0\u65b9\u6cd5 2 \u4f3c\u4e4e\u5b9e\u5728\u6ca1\u6709\u529e\u6cd5\u7ee7\u7eed\u63d0\u9ad8\u6b63\u786e\u7387\uff0c\u6211\u4eec\u770b\u5230\u65b9\u6cd5 1\u3002\u6211\u4eec\u4e0d\u8003\u8651\u968f\u673a\u679a\u4e3e $x,y$\uff0c\u6211\u4eec\u53ea\u679a\u4e3e $x$\u3002\u7136\u540e\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u679a\u4e3e $y$\uff0c\u627e\u5230\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u8d28\u56e0\u6570\uff0c\u7136\u540e\u76f4\u63a5\u5bf9\u8fd9\u4e2a\u6309\u65b9\u6cd51\u7684\u65b9\u6cd5\u7ee7\u7eed\u505a\u3002\n\n\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u53ea\u80fd\u5f97\u5230 $98$\uff0c\u6240\u4ee5\u6211\u5c31\u628a\u65b9\u6cd51\u3001 3\u7684\u4ee3\u7801\u7ed3\u5408\u4e86\u4e00\u4e0b\uff0c\u7ec8\u4e8e\u5361\u8fc7\u53bb\u4e86\u3002\n\n# $\\texttt{Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define MAXN 100005\n\ntemplate <typename T> inline void read (T &t){t = 0;char c = getchar();int f = 1;while (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}while (c >= '0' && c <= '9'){t = (t << 3) + (t << 1) + c - '0';c = getchar();} t *= f;}\ntemplate <typename T,typename ... Args> inline void read (T &t,Args&... args){read (t);read (args...);}\ntemplate <typename T> inline void write (T x){if (x < 0){x = -x;putchar ('-');}if (x > 9) write (x / 10);putchar (x % 10 + '0');}\n\nint n,val[MAXN];\n\nint Abs (int x){return x > 0 ? x : -x;}\nint gcd (int a,int b){return !b ? a : gcd (b,a % b);}\n\n#define MAXM 10000005\nbool vis[MAXM];\nint cnt,lowp[MAXM],prime[MAXM];\n\nvoid Euler (int up){\n\tlowp[1] = 1;\n\tfor (Int i = 2;i <= up;++ i){\n\t\tif (!vis[i]) prime[++ cnt] = i,lowp[i] = i;\n\t\tfor (Int j = 1;j <= cnt && i * prime[j] <= up;++ j){\n\t\t\tvis[i * prime[j]] = 1,lowp[i * prime[j]] = prime[j];\n\t\t\tif (i % prime[j] == 0) break;\n\t\t}\n\t}\n}\n\nint tong[MAXM];\n\nint allans,allpos;\nvoid Work (int x){\n\tint mx = 0;\n\tfor (Int i = 1;i <= n;++ i){\n\t\tint now = Abs (val[x] - val[i]);\n\t\tif (now == 0) continue;\n\t\twhile (now > 1){\n\t\t\ttong[lowp[now]] ++;int las = lowp[now];\n\t\t\tif (tong[lowp[now]] > tong[mx]) mx = lowp[now];\n\t\t\telse if (tong[lowp[now]] == tong[mx]) mx = max (mx,lowp[now]);\n\t\t\twhile (now % las == 0) now /= las;\n\t\t}\n\t} \n\tint res = 0,g = 0,now = x;\n\tfor (Int i = 1;i <= n;++ i){\n\t\tif (val[i] % mx == val[now] % mx)\n\t\t\tres ++,g = gcd (g,Abs (val[now] - val[i])),now = i;\n\t\tint now = Abs (val[x] - val[i]);\n\t\tif (now == 0) continue;\n\t\twhile (now > 1){\n\t\t\ttong[lowp[now]] = 0;int las = lowp[now];\n\t\t\twhile (now % las == 0) now /= las;\n\t\t}\n\t}\n\tif (res > allans) allans = res,allpos = g;\n\telse if (res == allans) allpos = max (allpos,g);\n}  \n\nint tot,pri[13];\nvoid Work1 (int x,int y){\n\tint m = Abs (val[x] - val[y]);tot = 0;\n\tfor (Int px = 2;px * px <= m;++ px){\n\t\tif (m % px == 0) pri[++ tot] = px;\n\t\twhile (m % px == 0) m /= px;\n\t}\n\tif (m > 1) pri[++ tot] = m;\n\tint ans = 0,pos = 0;\n\tfor (Int k = 1;k <= tot;++ k){\n\t\tint px = pri[k],now = x,res = 0,g = 0;\n\t\tfor (Int i = 1;i <= n;++ i)\n\t\t\tif (val[i] % px == val[now] % px)\n\t\t\t\tres ++,g = gcd (g,Abs (val[i] - val[now])),now = i;\n\t\tif (res > ans) ans = res,pos = g;\n\t\telse if (res == ans) pos = max (pos,g);\n\t}\n\tif (ans > allans) allans = ans,allpos = pos;\n\telse if (ans == allans) allpos = max (allpos,pos);\n}  \n\nsigned main(){\n\tsrand (20050913);read (n);\n\tfor (Int i = 1;i <= n;++ i) read (val[i]);\n\tsort (val + 1,val + n + 1);Euler (1e7);\n\tfor (Int i = 1;i <= 20;++ i){\n\t\tint x = rand() % n + 1;\n\t\tWork (x);\n\t}\n\tfor (Int i = 1;i <= 20;++ i){\n\t\tint x = rand() % n + 1,y = rand() % n + 1;\n\t\tWork1 (x,y);\n\t} \n\twrite (allans),putchar (' '),write (allpos),putchar ('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1603984244,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6817 \u3010[PA2013]Filary\u3011"
    }
]