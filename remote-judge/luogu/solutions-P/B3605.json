[
    {
        "content": "# B3605\u7684\u9898\u89e3\n\n### \u672c\u9898\u7b97\u6cd5\uff1a\n\n\u672c\u9898\u662f\u4e00\u9053\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5308\u7259\u5229\u7b97\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n### \u4ec0\u4e48\u662f\u4e8c\u5206\u56fe\uff1f\n\n\u4e8c\u5206\u56fe\u5c31\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u56fe\uff0c\u8fd9\u5f20\u56fe\u4e2d\u7684\u8282\u70b9\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\uff0c\u5e76\u4e14\u5728\u540c\u4e00\u96c6\u5408\u5185\u7684\u8282\u70b9\u6ca1\u6709\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u8981\u60f3\u4ece\u4e00\u4e2a\u8282\u70b9\u8d70\u5230\u53e6\u4e00\u4e2a\u5728\u540c\u4e00\u96c6\u5408\u7684\u8282\u70b9\uff0c\u8d70\u7684\u8fb9\u7684\u6570\u91cf\u662f\u5076\u6570\uff0c\u5982\u56fe\u8fd9\u5c31\u662f\u4e00\u5f20\u4e8c\u5206\u56fe\uff0c$t_{1}$\uff0c$t_{2}$\uff0c$t_{3}$\uff0c$t_{4}$ \u5c5e\u4e8e\u4e00\u4e2a\u96c6\u5408\uff0c\u5e76\u4e14\u5728\u8fd9\u4e2a\u96c6\u5408\u5185\u7684\u8282\u70b9\u4e4b\u95f4\u90fd\u6ca1\u6709\u8fb9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6lz7q52k.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n### \u4ec0\u4e48\u662f\u5308\u7259\u5229\u7b97\u6cd5\uff1f\n\n\u9996\u5148\u8981\u4e86\u89e3\u4ec0\u4e48\u662f\u6700\u5927\u5339\u914d\uff0c\u6700\u5927\u5339\u914d\u5c31\u662f\u5728\u4e00\u5f20\u4e8c\u5206\u56fe\u4e2d\uff0c\u5728\u4e24\u96c6\u5408\u95f4\u5df2\u6709\u7684\u8fb9\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u53ea\u80fd\u8fde\u63a5\u53e6\u4e00\u96c6\u5408\u7684\u4e00\u4e2a\u70b9\uff0c\u6c42\u6700\u591a\u6709\u591a\u5c11\u4e2a\u8fde\u8fb9\uff0c\u5982\u679c\u5f62\u8c61\u70b9\u8bf4\uff0c\u4f60\u53ef\u4ee5\u7406\u89e3\u6210\u5de6\u8fb9\u7684\u96c6\u5408\u7684\u70b9\u662f\u7537\u5b69\uff0c\u53f3\u8fb9\u7684\u96c6\u5408\u7684\u70b9\u662f\u5973\u5b69\uff0c\u4e24\u96c6\u5408\u95f4\u7684\u8fb9\u5c31\u662f\u8fd9\u4e00\u5bf9\u7537\u5b69\u548c\u5973\u5b69\u4e4b\u95f4\u6709\u611f\u60c5\uff0c\u6700\u5927\u5339\u914d\u5c31\u662f\u6c42\u6700\u591a\u80fd\u5339\u914d\u4e0a\u591a\u5c11\u5bf9\u60c5\u4fa3\u3002\n\n\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u6570\u7ec4\uff0c$match_{x}=y$\uff0c\u8fd9\u4e2a\u6570\u7ec4\u7684\u542b\u4e49\u662f $x$ \u4e0e $y$ \u5339\u914d\uff0c\u76f8\u5f53\u4e8e $x$ \u8fd9\u4e2a\u7537\u5b69\u4e0e $y$ \u8fd9\u4e2a\u5973\u5b69\u5339\u914d\u6210\u4e86\u4e00\u5bf9\u60c5\u4fa3\u3002\n\n\u5728\u5f15\u5165\u4e00\u4e2a\u6982\u5ff5\u53eb\u505a\u589e\u5e7f\u8def\u5f84\uff0c\u5c31\u662f\u4e00\u6761\u8fde\u63a5\u4e24\u4e2a\u672a\u5339\u914d\u7684\u8282\u70b9\u7684\u8def\u5f84\uff0c\u5e76\u4e14\u5df2\u5339\u914d\u7684\u8fb9\u548c\u5f85\u5339\u914d\u7684\u8fb9\u4ea4\u66ff\u5728\u8fd9\u6761\u8def\u5f84\u4e2d\u51fa\u73b0\uff0c\u8fd9\u5c31\u662f\u4e00\u6761\u589e\u5e7f\u8def\u5f84\u3002\u5982\u56fe\uff0c\u5728\u8fd9\u5e45\u56fe\u4e2d\uff0c\u7ea2\u8272\u7684\u8fb9\u662f\u5df2\u5339\u914d\u8fb9\uff0c\u9ed1\u8272\u7684\u8fb9\u662f\u5f85\u5339\u914d\u8fb9\uff0c\u6240\u4ee5 $A$ \u5230 $F$ \u7684\u8def\u5f84\u5c31\u662f\u4e00\u6761\u589e\u5e7f\u8def\u5f84\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/u4fgy9n1.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u73b0\u5728\u8bf4\u660e\u5308\u7259\u5229\u7b97\u6cd5\u662f\u5982\u4f55\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\uff0c\u9996\u5148\u6211\u4eec\u5148\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u76ee\u6807\u70b9\u672a\u5339\u914d\uff0c\u90a3\u4e48\u8fdb\u884c\u5339\u914d\uff0c\u5e76\u8fd4\u56de\u5339\u914d\u6210\u529f\uff0c\u5982\u679c\u8be5\u76ee\u6807\u70b9\u5df2\u7ecf\u88ab\u5339\u914d\u8fc7\u4e86\uff0c\u90a3\u4e48\u9012\u5f52\u8fd9\u4e2a\u70b9\uff0c\u67e5\u770b\u8fd9\u4e2a\u70b9\u662f\u5426\u80fd\u91cd\u65b0\u5339\u914d\u53e6\u4e00\u4e2a\u70b9\uff0c\u76f8\u5f53\u4e8e\u95ee\u8fd9\u4e2a\u4eba\u80fd\u4e0d\u80fd\u6362\u4e00\u4e2a\u4f34\u4fa3\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u8fd4\u56de\u5339\u914d\u6210\u529f\uff0c\u5426\u5219\u8fd4\u56de\u5339\u914d\u5931\u8d25\u3002\u5bf9\u4e8e\u6574\u4e2a\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u5c31\u662f\u5728\u6d88\u9664\u589e\u5e7f\u8def\u5f84\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h> //\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\ninline int read(){ //\u5feb\u8bfb\u4f18\u5316\n\tint sum=0,h=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') h=-1;ch=getchar();}\n\twhile(isdigit(ch)) sum=sum*10+ch-'0',ch=getchar();\n\treturn sum*h;\n}\nconst int N=3e5+5;\nint ver[N],head[N],ne[N],tot;\nint k,n,m;\nint match[1005];\nbool vis[1005];\nvoid add(int x,int y){ //\u90bb\u63a5\u8868\u50a8\u5b58\n\tver[++tot]=y;\n\tne[tot]=head[x];\n\thead[x]=tot;\n\treturn;\n}\nbool dfs(int x){ //\u5308\u7259\u5229\u7b97\u6cd5\n\tfor(register int i=head[x];i;i=ne[i]){\n\t\tint y=ver[i];\n\t\tif(vis[y]) continue; //\u5982\u679c\u8be5\u70b9\u88ab\u8bbf\u95ee\u8fc7\uff0c\u5c31\u8df3\u8fc7\n\t\tvis[y]=1;\n\t\tif(!match[y] or dfs(match[y])){ //\u5982\u679c\u76ee\u6807\u70b9\u672a\u5339\u914d\u6216\u5b83\u53ef\u4ee5\u6362\u4e00\u4e2a\uff0c\u5c31\u8fdb\u884c\u5339\u914d\n\t\t\tmatch[y]=x;\n\t\t\treturn 1; //\u8fd4\u56de\u5339\u914d\u6210\u529f\n\t\t}\n\t}\n\treturn 0; //\u8fd4\u56de\u5339\u914d\u5931\u8d25\n}\nint main(){\n\tk=read(),n=read(),m=read();\n\tfor(register int i=1;i<=m;++i){\n\t\tint a,b;\n\t\ta=read(),b=read();\n\t\tadd(a,b+k);\n\t}\n\tint ans=0;\n\tfor(register int i=1;i<=k;++i){\n\t\tmemset(vis,0,sizeof vis);\n\t\tif(dfs(i)) ++ans; //\u5982\u679c\u8be5\u70b9\u5339\u914d\u6210\u529f\uff0c\u6700\u5927\u5339\u914d\u6570\u5c31\u52a0\u4e00\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\u849f\u84bb\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u6c42\u70b9\u8d5e\u3002",
        "postTime": 1630813907,
        "uid": 363807,
        "name": "Hamer_sans",
        "ccfLevel": 5,
        "title": "B3605\u7684\u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\n\u672c\u9898\u53ef\u8f6c\u5316\u4e3a\u6700\u5927\u6d41\u95ee\u9898\u3002\n\n\u8bbe\u6e90\u70b9\u4e3a $1$\uff0c\u6c47\u70b9\u4e3a $nl + nr + 2$\uff0c\u5de6\u4fa7\u70b9\u7f16\u53f7\u4e3a $2$ ~ $nl + 1$\uff0c\u53f3\u4fa7\u70b9\u7f16\u53f7\u4e3a $nl + 2$ ~ $nl + nr + 1$\u3002\n\n\u7136\u540e\u6e90\u70b9\u5411\u6bcf\u4e2a\u5de6\u4fa7\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u6bcf\u4e2a\u53f3\u4fa7\u70b9\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u5de6\u4fa7\u70b9\u548c\u53f3\u4fa7\u70b9\u6309\u7167\u8f93\u5165\u7684\u8fb9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u7136\u540e\u8dd1\u4e00\u904d Dinic\uff0c\u6b64\u65f6\u6700\u5927\u6d41\u4fbf\u662f\u7b54\u6848\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 1020, maxm = 511000, inf = 0x3f3f3f3f;\n\nint n, nl, nr, m, s, t, head[maxn], len;\nstruct edge {\n    int from, to, next, cap, flow;\n} edges[maxm];\n\nvoid add_edge(int u, int v, int c, int f) {\n    edges[++len].from = u;\n    edges[len].to = v;\n    edges[len].next = head[u];\n    edges[len].cap = c;\n    edges[len].flow = f;\n    head[u] = len;\n}\n\nstruct Dinic {\n    bool vis[maxn];\n    int d[maxn], cur[maxn];\n\n    void add(int u, int v, int c) {\n        add_edge(u, v, c, 0);\n        add_edge(v, u, 0, 0);\n    }\n\n    bool bfs() {\n        memset(vis, 0, sizeof(vis));\n        queue<int> q;\n        d[s] = 0;\n        vis[s] = 1;\n        q.push(s);\n        while (q.size()) {\n            int u = q.front();\n            q.pop();\n            for (int i = head[u]; i; i = edges[i].next) {\n                edge e = edges[i];\n                if (!vis[e.to] && e.cap > e.flow) {\n                    vis[e.to] = 1;\n                    d[e.to] = d[u] + 1;\n                    q.push(e.to);\n                }\n            }\n        }\n        return vis[t];\n    }\n\n    int dfs(int u, int a) {\n        if (u == t || !a) {\n            return a;\n        }\n        int flow = 0, f;\n        for (int &i = cur[u]; i; i = edges[i].next) {\n            edge &e = edges[i];\n            if (d[u] + 1 == d[e.to] && (f = dfs(e.to, min(a, e.cap - e.flow))) > 0) {\n                e.flow += f;\n                edges[i ^ 1].flow -= f;\n                flow += f;\n                a -= f;\n                if (!a) {\n                    break;\n                }\n            }\n        }\n        return flow;\n    }\n\n    int solve() {\n        int flow = 0;\n        while (bfs()) {\n            for (int i = 1; i <= n; ++i) {\n                cur[i] = head[i];\n            }\n            flow += dfs(s, inf);\n        }\n        return flow;\n    }\n} solver;\n\nint main() {\n    scanf(\"%d%d%d\", &nl, &nr, &m);\n    s = 1;\n    t = n = nl + nr + 2;\n    len = 1;\n    for (int i = 1; i <= nl; ++i) {\n        solver.add(s, i + 1, 1);\n    }\n    for (int i = 1; i <= nr; ++i) {\n        solver.add(i + nl + 1, t, 1);\n    }\n    while (m--) {\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        solver.add(u + 1, v + nl + 1, 1);\n    }\n    printf(\"%d\", solver.solve());\n    return 0;\n}\n```\n",
        "postTime": 1625440019,
        "uid": 275273,
        "name": "zltqwq",
        "ccfLevel": 0,
        "title": "B3605 \u9898\u89e3"
    },
    {
        "content": "## \u4e8c\u5206\u56fe\u4ecb\u7ecd\n\n\u5b66\u4e60\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u9996\u5148\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e8c\u5206\u56fe\u3002\n\n\u4e8c\u5206\u56fe\uff0c\u5c31\u662f\u50cf\u8fd9\u6837\u7684\u4e00\u4e2a\u56fe\uff1a\n![](https://i.loli.net/2021/02/28/97q2gZpwTodCt4l.png)\n\n\u4e00\u5171\u6709\u4e24\u5806\u4e1c\u897f\uff0c\u5de6\u8fb9\u4e00\u5806\uff0c\u53f3\u8fb9\u4e00\u5806\uff0c\u5de6\u8fb9\u7684\u70b9\u548c\u5de6\u8fb9\u7684\u70b9\u4e0d\u80fd\u8fde\u8fb9\uff0c\u53f3\u8fb9\u7684\u70b9\u548c\u53f3\u8fb9\u7684\u70b9\u4e0d\u80fd\u8fde\u8fb9\uff0c\u53ea\u6709\u5de6\u8fb9\u7684\u70b9\u548c\u53f3\u8fb9\u7684\u70b9\u53ef\u4ee5\u8fde\u8fb9\u3002\n\n\u50cf\u8fd9\u6837\u7684\u5c31\u53eb\u505a\u5b8c\u5168\u4e8c\u5206\u56fe\uff1a![](https://i.loli.net/2021/02/28/IJWHnuz2SEMBYbN.png)\n\u5de6\u8fb9\u548c\u53f3\u8fb9\u6bcf\u4e24\u4e2a\u70b9\u8fde\u4e86\u4e00\u6761\u8fb9\u3002\n\n\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u6307\u5982\u679c\u6bcf\u4e2a\u5de6\u8fb9\u7684\u70b9\u53ea\u80fd\u548c\u53f3\u8fb9\u7684\u70b9\u8fde\u4e00\u6b21\uff0c\u6c42\u6700\u591a\u80fd\u8ba9\u591a\u5c11\u5de6\u8fb9\u7684\u70b9\u548c\u53f3\u8fb9\u7684\u70b9\u8fde\u5728\u4e00\u8d77\u3002\n\n## \u7b97\u6cd5\u8bb2\u89e3\n\n\u6c42\u6700\u5927\u5339\u914d\u7684\u7b97\u6cd5\u53eb\u5308\u7259\u5229\u7b97\u6cd5\u3002\n\n>> \u5308\u7259\u5229\u7b97\u6cd5\u662f\u4e00\u79cd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u6c42\u89e3\u4efb\u52a1\u5206\u914d\u95ee\u9898\u7684\u7ec4\u5408\u4f18\u5316\u7b97\u6cd5\uff0c\u5e76\u63a8\u52a8\u4e86\u540e\u6765\u7684\u539f\u59cb\u5bf9\u5076\u65b9\u6cd5\u3002\u7f8e\u56fd\u6570\u5b66\u5bb6\u54c8\u7f57\u5fb7\u00b7\u5e93\u6069\u4e8e1965\u5e74\u63d0\u51fa\u8be5\u7b97\u6cd5\u3002\u6b64\u7b97\u6cd5\u4e4b\u6240\u4ee5\u88ab\u79f0\u4f5c\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u662f\u56e0\u4e3a\u7b97\u6cd5\u5f88\u5927\u4e00\u90e8\u5206\u662f\u57fa\u4e8e\u4ee5\u524d\u5308\u7259\u5229\u6570\u5b66\u5bb6D\u00e9nes K\u0151nig\u548cJen\u0151 Egerv\u00e1ry\u7684\u5de5\u4f5c\u4e4b\u4e0a\u521b\u5efa\u8d77\u6765\u7684\u3002\u8bbe $G=(V,E)$ \u662f\u4e00\u4e2a\u65e0\u5411\u56fe\u3002\u5982\u9876\u70b9\u96c6 $V$ \u53ef\u5206\u5272\u4e3a\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6 $V_1,V_2$ \uff0c\u9009\u62e9\u8fd9\u6837\u7684\u5b50\u96c6\u4e2d\u8fb9\u6570\u6700\u5927\u7684\u5b50\u96c6\u79f0\u4e3a\u56fe\u7684\u6700\u5927\u5339\u914d\u95ee\u9898\uff08maximal matching problem)\u3002\n\u5982\u679c\u4e00\u4e2a\u5339\u914d\u4e2d\uff0c $|V_1| \\leq |V_2|$ \u4e14\u5339\u914d\u6570 $|M|=|V_1|$ \uff0c\u5219\u79f0\u6b64\u5339\u914d\u4e3a\u5b8c\u5168\u5339\u914d\uff0c\u4e5f\u79f0\u4f5c\u5b8c\u5907\u5339\u914d\u3002\u7279\u522b\u7684\u5f53 $|V_1|=|V_2|$ \u79f0\u4e3a\u5b8c\u7f8e\u5339\u914d\u3002\n\n\u2014\u2014\u9009\u81ea\u767e\u5ea6\u767e\u79d1\u3002\n\n\u6bd4\u5982\u8bf4\u7b2c\u4e00\u4e2a\u56fe\uff0c\u6700\u5927\u5339\u914d\u5c31\u662f $3$ \u3002\u56e0\u4e3a $(3,1)$ \u76f8\u8fde\uff0c $(2,3)$ \u76f8\u8fde\uff0c $(1,2)$ \u76f8\u8fde\uff0c\u6240\u4ee5\u6700\u5927\u5339\u914d\u662f $3$ \u3002\n\n\u90a3\u4e48\u600e\u4e48\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5462\uff1f\n\n\u5c31\u62ff\u7b2c\u4e00\u4e2a\u56fe\u6765\u770b\u5427\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u5047\u8bbe $(1,1)$ \u76f8\u8fde\u3002\n\n\u5c31\u53d8\u6210\u4e86\u8fd9\u4e2a\u6837\u5b50\uff1a\n![](https://i.loli.net/2021/02/28/sTRw1LyhYldmIQb.png)\n\u56fe\u4e2d\u7684 $match$ \u6570\u7ec4\u4ee3\u8868\u53f3\u8fb9\u7684\u7b2c\u51e0\u4e2a\u70b9\u548c\u5de6\u8fb9\u7684\u54ea\u4e2a\u70b9\u5339\u914d\u4e0a\u4e86\u3002\u5982\u679c $match[i]$ \u4e3a $0$ \uff0c\u90a3\u4e48\u5c31\u4ee3\u8868\u6ca1\u6709\u70b9\u548c\u5b83\u5339\u914d\u4e0a\u3002\u56fe\u4e2d\u7684\u53f3\u8fb9 $1$ \u53f7\u70b9\u548c\u5de6\u8fb9\u7684\u4e00\u53f7\u70b9\u5339\u914d\u4e0a\u4e86\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u7ee7\u7eed\u3002\u56fe\uff1a\n![](https://i.loli.net/2021/02/28/iuO8AtbUl3rN9JW.png)\n\n\u4ece\u53f3\u8fb9\u7684\u7b2c $1$ \u4e2a\u5f00\u59cb\u5faa\u73af\uff0c\u5faa\u73af\u5230 $2$ \u65f6\u5c31\u8fde\u4e86\u4e00\u6761\u8fb9\uff0c $match[2]$ \u53c8\u4e3a $0$ \uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5339\u914d\u3002\n\n\u7ee7\u7eed\u3002\u56fe\uff1a\n\n![](https://i.loli.net/2021/02/28/EB4Pi5X9LN3HFzQ.png)\n\n\u8fd9\u65f6\uff0c\u5de6\u8fb9\u7684 $3$ \u8981\u548c\u53f3\u8fb9\u7684 $1$ \u5339\u914d\uff0c\u4f46\u662f\u53f3\u8fb9\u7684 $1$ \u5df2\u7ecf\u88ab\u5de6\u8fb9\u7684 $1$ \u5339\u914d\u4e86\uff0c\u6240\u4ee5\u6700\u91cd\u8981\u7684\u6765\u4e86\uff1a\u5c06\u5de6\u8fb9\u7684 $1$ \u548c\u53f3\u8fb9\u7684 $1$ \u62c6\u5f00\uff0c\u4e0d\u5339\u914d\u4e86\u3002\u63a5\u7740\uff0c\u5c06\u5de6\u8fb9\u7684 $1$ \u4e0e\u53f3\u8fb9\u7684 $2$ \u5339\u914d\uff0c\u4f46\u662f\u53f3\u8fb9\u7684 $2$ \u53c8\u88ab\u5de6\u8fb9\u7684 $2$ \u5339\u914d\u4e86\uff0c\u4e8e\u662f\u5c06\u5de6\u8fb9\u7684 $2$ \u4e0e\u53f3\u8fb9\u7684 $2$ \u62c6\u5f00\u3002\u518d\u63a5\u7740\uff0c\u5c06\u5de6\u8fb9\u7684 $2$ \u4e0e\u53f3\u8fb9\u7684 $3$ \u5339\u914d\uff0c\u6210\u529f\u4e86\u3002\u4e8e\u662f\uff0c\u5de6\u8fb9\u7684 $2$ \u4e0e\u53f3\u8fb9\u7684 $3$ \u5339\u914d\uff0c\u5de6\u8fb9\u7684 $1$ \u4e0e\u53f3\u8fb9\u7684 $2$ \u5339\u914d\uff0c\u5de6\u8fb9\u7684 $3$ \u4e0e\u53f3\u8fb9\u7684 $1$ \u5339\u914d\u3002\n\n\u7ee7\u7eed\uff0c\u4e0d\u753b\u56fe\u4e86\u3002\u56e0\u4e3a\u53f3\u8fb9\u7684\u4e09\u4e2a\u70b9\u90fd\u88ab\u5339\u914d\u5b8c\u4e86\uff0c\u5de6\u8fb9\u7684 $4$ \u53f7\u70b9\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u80fd\u5339\u914d\u5230\u70b9\u4e86\uff0c\u6240\u4ee5\u7b97\u6cd5\u7ed3\u675f\u4e86\uff0c\u7b54\u6848\u4e3a $3$ \u3002\n\n## \u7b97\u6cd5\u603b\u7ed3\n\n\u603b\u7ed3\u4e00\u4e0b\u7b97\u6cd5\u7684\u8fc7\u7a0b\u3002\u9996\u5148\uff0c\u5c06\u5de6\u8fb9\u7684\u70b9\u5168\u90e8\u5faa\u73af\u4e00\u904d\u3002\u6bcf\u6b21\u8fdb\u5165\u7b97\u6cd5\uff0c\u770b\u770b\u8fd9\u4e2a\u70b9\u662f\u5426\u53ef\u4ee5\u5339\u914d\u5230\u53f3\u8fb9\u7684\u70b9\u3002\u7136\u540e\uff0c\u7b97\u6cd5\u91cc\u5c31\u5c06\u53f3\u8fb9\u7684\u70b9\u4ece1\u5f00\u59cb\u4e0d\u91cd\u590d\u5faa\u73af\u4e00\u904d\uff0c\u6bcf\u6b21\u770b\u770b\u5c06\u5de6\u8fb9\u7684\u70b9\u5339\u914d\u5230\u53f3\u8fb9\u7684\u70b9\u540e\uff0c\u539f\u6765\u5de6\u8fb9\u5339\u914d\u53f3\u8fb9\u8fd9\u4e2a\u70b9\u7684\u70b9\u662f\u5426\u53ef\u4ee5\u5339\u914d\u5230\u53f3\u8fb9\u65b0\u7684\u70b9\uff0c\u4e00\u76f4\u9012\u5f52\u3002\u5982\u679c\u9012\u5f52\u7684\u6700\u540e\u7684\u70b9\u53ef\u4ee5\u5339\u914d\u5230\u53f3\u8fb9\u7684\u4e00\u4e2a\u7a7a\u70b9\uff08\u5373\u6ca1\u6709\u88ab\u5339\u914d\u7684\u70b9\uff09\uff0c\u5c31\u5c06\u5de6\u8fb9\u6240\u6709\u9012\u5f52\u7684\u70b9\u90fd\u5339\u914d\u5230\u53f3\u8fb9\u7684\u65b0\u70b9\u4e0a\u53bb\u3002\u5426\u5219\uff0c\u4e0d\u4fee\u6539\u4efb\u4f55\u4e1c\u897f\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u6700\u574f\u4e3a\uff1a\n\n\u90bb\u63a5\u77e9\u9635\uff1a $\\Theta(n^3)$ \u90bb\u63a5\u8868\uff1a $\\Theta(nm)$ \u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a\n\n\u90bb\u63a5\u77e9\u9635\uff1a $\\Theta(n^2)$ \u90bb\u63a5\u8868\uff1a $\\Theta(n+m)$ \u3002\n\n## \u7b97\u6cd5\u8bc1\u660e\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u7b97\u6cd5\u662f\u6b63\u786e\u7684\u5462\uff1f\u56e0\u4e3a\u5de6\u8fb9\u6bcf\u4e2a\u5982\u679c\u53ef\u4ee5\u5339\u914d\u5230\u53f3\u8fb9\u7684\u70b9\uff0c\u5c31\u4e00\u5b9a\u4f1a\u5339\u914d\uff0c\u5c06\u5de6\u8fb9\u5176\u4ed6\u7684\u70b9\u5b89\u6392\u5230\u53f3\u8fb9\u5176\u4ed6\u7684\u70b9\u4e0a\u53bb\u3002\u6240\u4ee5\u53ef\u4ee5\u5339\u914d\u5230\u7684\u6570\u91cf\u4e00\u5b9a\u662f\u6700\u5927\u7684\u3002\n\n\n## \u4ee3\u7801\n\n```c\n#include<string.h>\n#include<stdio.h>\n#include<stdbool.h>\nint read()\n{\n\tint i = 0, f = 1;\n\tchar ch;\n\tfor(ch = getchar(); (ch < '0' || ch > '9') && ch != '-'; ch = getchar());\n\tif(ch == '-')\n\t{\n\t\tf = -1;\n\t\tch = getchar();\n\t}\n\tfor(; ch >= '0' && ch <= '9'; ch = getchar())\n\t{\n\t\ti = (i << 3) + (i << 1) + (ch ^ 48);\n\t}\n\treturn i * f;\n}\nvoid write(int a)\n{\n\tif(a < 0)\n\t{\n\t\tputchar('-');\n\t\ta = -a;\n\t}\n\tint sta[100] = {}, cnt = 0;\n\twhile(a)\n\t{\n\t\tcnt++;\n\t\tsta[cnt] = a % 10;\n\t\ta /= 10;\n\t}\n\twhile(cnt)\n\t{\n\t\tputchar(sta[cnt] + '0');\n\t\tcnt--;\n\t}\n}\nint a[501][501],match[501],n,m,e,ans;//a\u662f\u7528\u6765\u5efa\u56fe\u7684\uff0cmatch\u662f\u7528\u6765\u5339\u914d\u7684\uff0cans\u662f\u7b54\u6848\u3002\nbool p[501];//p\u662f\u7528\u6765dfs\u5224\u91cd\u7684\u3002\nbool dfs(int x)\n{\n\tfor(int i = 1; i <= m; i++)//\u5c06\u53f3\u8fb9\u7684\u70b9\u5faa\u73af\u4e00\u904d\uff0c\u627e\u53ef\u4ee5\u5339\u914d\u7684\u70b9\u3002\n\t{\n\t\tif(a[x][i] && !p[i])//\u5982\u679c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\u5e76\u4e14\u53f3\u8fb9\u8fd9\u4e2a\u6ca1\u6709\u88ab\u5de6\u8fb9\u7684x\u5339\u914d\u8fc7\u3002\n\t\t{\n\t\t\tp[i] = 1;//\u6807\u8bb0\uff0c\u9632\u6b62\u6b7b\u5faa\u73af\u3002\n\t\t\tif(match[i] == 0 || dfs(match[i]))//\u53ea\u8981\u6ee1\u8db3\u6ca1\u6709\u88ab\u4efb\u4f55\u70b9\u5339\u914d\u8fc7\u6216\u8005\u5339\u914d\u5b83\u7684\u70b9\u53ef\u4ee5\u627e\u5230\u53e6\u5916\u53ef\u4ee5\u5339\u914d\u7684\u70b9\uff0c\u5c31\u5339\u914d\u3002\n\t\t\t{\n\t\t\t\tmatch[i] = x;//\u5339\u914d\u3002\n\t\t\t\treturn 1;//\u8bb0\u5f97\u8981\u8fd4\u56de\u771f\u3002\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;//\u5982\u679c\u5339\u914d\u4e0d\u5230\uff0c\u8fd4\u56de\u5047\u3002\n}\nint main()\n{\n\tn = read(),m = read(),e = read();\n\tfor(int i = 1; i <= e; i++)\n\t{\n\t\tint u = read(),v = read();\n\t\ta[u][v] = 1;//\u5c06u\u548cv\u5efa\u4e00\u6761\u8fb9\u3002\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tmemset(p,0,sizeof(p));\n\t\tif(dfs(i))ans++;//\u5982\u679c\u53ef\u4ee5\u5339\u914d\uff0c\u5c31\u5339\u914d\uff0c\u7b54\u6848\u52a0\u4e00\u3002\n\t}\n\twrite(ans);\n\treturn 0;\n}\n```",
        "postTime": 1625300355,
        "uid": 236414,
        "name": "zmza",
        "ccfLevel": 0,
        "title": "B3605 [\u56fe\u8bba\u4e0e\u4ee3\u6570\u7ed3\u6784 401] \u4e8c\u5206\u56fe\u5339\u914d \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\u6982\u8ff0\n\u8fd9\u662f\u4e00\u9053**\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d**\u7684\u6a21\u677f\u9898\uff0c\u89e3\u6cd5\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u4e00\u79cd\u662f\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u6700\u5927\u6d41\u95ee\u9898\uff0c\u672c\u9898\u89e3\u4ecb\u7ecd\u540e\u4e00\u79cd\u65b9\u6cd5\u3002\n# \u8f6c\u5316\u601d\u8def\uff08\u5efa\u56fe\uff09\n\u5728\u7f51\u7edc\u6d41\u95ee\u9898\u4e2d\uff0c\u5efa\u56fe\u5f80\u5f80\u6bd4\u6253\u6a21\u677f\u4ee3\u7801\u66f4\u96be\uff0c\u5efa\u56fe\u7684\u7cbe\u9ad3\u5c31\u662f**\u672a\u77e5\u95ee\u9898\u5df2\u77e5\u5316**\uff0c\u90a3\u4e48\u672c\u9898\u4e2d\u5e94\u8be5\u5982\u4f55\u5efa\u56fe\u5462\uff1f\n\n**1** \u4e8c\u5206\u56fe\u5de6\u8fb9\u7684\u8282\u70b9\u5230\u4e8c\u5206\u56fe\u53f3\u8fb9\u7684\u8282\u70b9\u5efa\u4e00\u6761\u8fb9\u6743\u6743\u4e00\u7684\u8fb9\uff0c\u53f3\u8fb9\u5230\u5de6\u8fb9\u5efa\u4e00\u6761\u8fb9\u6743\u4e3a\u96f6\u7684\u8fb9\u3002\n\n**2** \u4ece\u6e90\u70b9\u5230\u5230\u5de6\u8fb9\u7684\u8282\u70b9\u5efa\u4e00\u6761\u8fb9\u6743\u4e3a\u4e00\u7684\u6b63\u5411\u8fb9\uff0c\u548c\u4e00\u6761\u8fb9\u6743\u4e3a\u96f6\u7684\u53cd\u5411\u8fb9\u3002\n\n**3** \u4ece\u53f3\u8fb9\u7684\u53d8\u5230\u6c47\u70b9\u5efa\u4e00\u6761\u8fb9\u6743\u4e3a\u4e00\u7684\u53d8\uff0c\u548c\u4e00\u6761\u8fb9\u6743\u4e3a\u96f6\u7684\u53cd\u5411\u8fb9\u3002\n\n**\u6837\u4f8b\u89e3\u91ca\uff1a**\n```cpp\n2 2 3\n1 1\n1 2\n2 1\n```\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/rc2o3jzo.png)\n\n\u7f51\u7edc\u6700\u5927\u6d41\uff1a\u6211\u6709\u4e00\u7bc7\u7f51\u7edc\u6700\u5927\u6d41\u7684[\u9898\u89e3](https://www.luogu.com.cn/blog/zhengzhaoxi/solution-b3607)\uff0c\u4e0d\u4e86\u89e3\u6700\u5927\u6d41\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u4e00\u770b\u3002\n\n\u53c2\u8003\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#define maxn 1010\n#define maxm 250010\nusing namespace std;\nint n, m, F, T, cnt = 1, s = 0, t, E;\nstruct edge\n{\n\tint to, next, f;\n}e[maxm << 2];\nint head[maxn];\nint nlast[maxn];\nvoid add_edge(int f, int t, int fl)\n{\n\te[++cnt] = (edge){t, head[f], fl};\n\thead[f] = cnt;\n}\nbool vis[maxn];\nint dis[maxn];\nbool bfs()\n{\n\tmemset(vis, 0, sizeof(vis));\n\tqueue <int> q;\n\tvis[t] = 1; dis[t] = 1;\n\tq.push(t);\n\twhile (!q.empty())\n\t{\n\t\tconst int now = q.front();\n\t\tq.pop();\n\t\tfor (int i = head[now]; i; i = e[i].next)\n\t\t{\n\t\t\tconst int to = e[i].to;\n\t\t\tif (e[i ^ 1].f && vis[to] == 0)\n\t\t\t{\n\t\t\t\tvis[to] = 1;\n\t\t\t\tdis[to] = dis[now] + 1;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\treturn vis[s];\n}\nint Dinic(int x, int f)\n{\n\tif (x == t) return f;\n\tint now = f;\n\tfor (int &i = nlast[x]; i; i = e[i].next)\n\t{\n\t\tconst int to = e[i].to;\n\t\tif (dis[x] == dis[to] + 1 && e[i].f)\n\t\t{\n\t\t\tint a = Dinic(to, min(e[i].f, now));\n\t\t\te[i].f -= a;\n\t\t\te[i ^ 1].f += a;\n\t\t\tnow -= a;\n\t\t\tif (now == 0) return f;\n\t\t}\n\t}\n\treturn f - now;\n}\nint main()\n{\n\tscanf(\"%d %d %d\", &n, &m, &E);\n\tt = n + m + 1;\n\tfor (int i = 1; i <= E; ++i)\n\t{\n\t\tscanf(\"%d %d\", &F, &T);\n\t\tT += n;\n\t\tadd_edge(F, T, 1);\n\t\tadd_edge(T, F, 0);\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tadd_edge(s, i, 1);\n\t\tadd_edge(i, s, 0);\n\t}\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\tadd_edge(i + n, t, 1);\n\t\tadd_edge(t, i + n, 0);\n\t}\n\tint ans = 0;\n\twhile (bfs())\n\t{\n\t\tfor (int i = 0; i <= n + m + 1; ++i)\n\t\t\tnlast[i] = head[i];\n\t\tans += Dinic(s, 1000000000);\n\t}\n\tprintf(\"%d\\n\", ans);\n//\tfor (int x = 1; x <= m; ++x)\n//\t\tfor (int i = head[x]; i; i = e[i].next)\n//\t\t\tif (e[i].f == 0 && e[i].to >= m + 1 && e[i].to <= n)\n//\t\t\t\tprintf(\"%d %d\\n\", x, e[i].to);\n\treturn 0;\n}\n```\n",
        "postTime": 1645793047,
        "uid": 425694,
        "name": "\u90d1\u671d\u66e6zzx",
        "ccfLevel": 6,
        "title": "B3605\u9898\u89e3"
    },
    {
        "content": "~~\u8fd9\u9898\u5c31\u662f\u7b80\u5355\u6a21\u677f\uff0c\u4e3a\u4ec0\u4e48\u53ea\u6709\u4e09\u4eba\u53d1\u9898\u89e3~~\n\n# \u9898\u610f\n\n- \u9898\u610f\u5341\u5206\u7b80\u6d01\u660e\u4e86\uff0c\u5c31\u662f\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\n\n# \u9898\u89e3\n\n- \u89e3\u51b3\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u4e00\u79cd\u6bd4\u8f83\u7b80\u5355\u7684\u7b97\u6cd5\u662f\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u8fd9\u91cc\u5c31\u8bb2\u4e00\u4e0b\u3002\n\n### \u5308\u7259\u5229\u7b97\u6cd5\n\n#### \u4e8c\u5206\u56fe\n\n- \u4e8c\u5206\u56fe\u662f\u56fe\u8bba\u4e2d\u7684\u4e00\u79cd\u7279\u6b8a\u6a21\u578b\u3002\u82e5\u80fd\u5c06\u65e0\u5411\u56fe $G=(V,E)$ \u7684\u9876\u70b9 $V$ \u5212\u5206\u4e3a\u4e24\u4e2a\u4ea4\u96c6\u4e3a\u7a7a\u7684\u9876\u70b9\u96c6\uff0c\u5e76\u4e14\u4efb\u610f\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u90fd\u5206\u5c5e\u4e8e\u4e24\u4e2a\u96c6\u5408\uff0c\u5219\u79f0\u56fe $G$ \u4e3a\u4e00\u4e2a\u4e3a\u4e8c\u5206\u56fe\uff0c\u5982\uff1a\n\n![](https://img-blog.csdnimg.cn/20200918200000653.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xlbW9ueGlhb3hpYW8=,size_16,color_FFFFFF,t_70#pic_center)\n\n#### \u7b97\u6cd5\u6d41\u7a0b\n\n- \u6211\u770b\u7f51\u4e0a\u7684\u6bd4\u55bb\u6bd4\u8f83\u2026\u2026\u2014\u2014\u6240\u4ee5\u6211\u6362\u4e00\u4e2a\u6bd4\u55bb\u5427\u3002\n\n1. \u6709 $n$ \u4e2a\u5c0f\u670b\u53cb\uff0c\u53c8\u6709 $m$ \u4e2a\u73a9\u5177\uff0c\u6bcf\u4e2a\u5c0f\u670b\u53cb\u90fd\u6709\u81ea\u5df1\u559c\u6b22\u7684\u73a9\u5177\uff0c\u4f46\u6bcf\u4e2a\u5c0f\u670b\u53cb\u53ea\u80fd\u9009\u4e00\u4ef6\u73a9\u5177\uff0c\u5982\uff1a\n\n```\n\u4e00\uff1a2\n\u4e8c\uff1a1\n\u4e09\uff1a1,3\n```\n\n2. \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u628a\u5176\u5316\u4e3a\u4e00\u5f20\u4e8c\u5206\u56fe\uff0c\u5982\uff1a\n\n![](https://img-blog.csdnimg.cn/20201028213943348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xldmlvcGt1,size_16,color_FFFFFF,t_70)\n\n3. \u6211\u4eec\u4ece\u4e00\u53f7\u5c0f\u670b\u53cb\u5f00\u59cb\u5339\u914d\uff0c\u53d1\u73b0\u4ed6\u559c\u6b22 $2$ \u53f7\u73a9\u5177\uff0c\u76ee\u524d $2$ \u53f7\u73a9\u5177\u8fd8\u6ca1\u5339\u914d\u5230\u5c0f\u670b\u53cb\uff0c\u5c31\u5c06\u4e00\u53f7\u5c0f\u670b\u53cb\u548c\u5176\u5339\u914d\u3002\n\n\u76ee\u524d\uff1a\n\n```\n\u4e00\uff1a2\n\u4e8c\uff1a?\n\u4e09\uff1a?\n```\n\n4. \u63a5\u7740\u6211\u4eec\u6765\u770b\u4e8c\u53f7\u5c0f\u670b\u53cb\uff0c\u53d1\u73b0\u5979\u559c\u6b22 $1$ \u53f7\u73a9\u5177\uff0c\u76ee\u524d $1$ \u53f7\u73a9\u5177\u8fd8\u6ca1\u5339\u914d\u5230\u5c0f\u670b\u53cb\uff0c\u5c31\u5c06\u4e8c\u53f7\u5c0f\u670b\u53cb\u548c\u5176\u5339\u914d\u3002\n\n\u76ee\u524d\uff1a\n\n```\n\u4e00\uff1a2\n\u4e8c\uff1a1\n\u4e09\uff1a?\n```\n\n5. \u6700\u540e\u662f\u4e09\u53f7\u5c0f\u670b\u53cb\uff0c~~\u5b83~~\u559c\u6b22 $1$ \u548c $3$ \u53f7\u73a9\u5177\uff0c\u6211\u4eec\u53d1\u73b0 $1$ \u53f7\u73a9\u5177\u5df2\u88ab\u5339\u914d\uff0c\u4e8e\u662f\u5c31\u5339\u914d $3$ \u53f7\u73a9\u5177\u3002\n\n\u76ee\u524d\uff1a\n\n```\n\u4e00\uff1a2\n\u4e8c\uff1a1\n\u4e09\uff1a3\n```\n\n6. \u53ef\u4ee5\u5168\u90e8\u5339\u914d\uff01\u6240\u4ee5\u8fd9\u5f20\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u662f $3$\u3002\n\n- \u4ee5\u4e0a\u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52\u5b9e\u73b0\uff0c\u5176\u5b83\u53d1\u73b0\u5bf9\u8c61\u5df2\u88ab\u5339\u914d\u60c5\u51b5\u90fd\u548c\u4e09\u53f7\u7684\u60c5\u51b5\u76f8\u4f3c\uff0c\u53ef\u80fd\u5c31\u591a\u56de\u9000\u51e0\u4e2a\u5c0f\u670b\u53cb\u3002\u5982\u679c\u4f60\u4ece\u4e09\u53f7\u5c0f\u670b\u53cb\u5f00\u59cb\uff0c\u90a3\u4e48\u5230\u4e8c\u53f7\u5c0f\u670b\u53cb\u65f6\u5c31\u4f1a\u9012\u5f52\u904d\u5386\u4e09\u53f7\u5c0f\u670b\u53cb\uff0c\u7136\u540e\u4e09\u53f7\u5c0f\u670b\u53cb\u91cd\u65b0\u9009\u62e9 $3$ \u53f7\u73a9\u5177\u5373\u53ef\u7ee7\u7eed\u5339\u914d\u3002\n\n# \u4ee3\u7801\n\n- \u4ee3\u7801\u5341\u5206\u7b80\u5355\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint nl, nr, m, mp[1005][1005], p[100005]; // p\u6570\u7ec4\u5f55\u5f53\u524d\u53f3\u4fa7\u5143\u7d20\u6240\u5bf9\u5e94\u7684\u5de6\u4fa7\u5143\u7d20\nbool vis[100005];\n\nbool match(int i)\n{\n\tfor (int j = 1 ; j <= nr ; j ++)\n\t{\n\t\tif (mp[i][j] && !vis[j])\n\t\t{\n\t\t\tvis[j] = true;\n\t\t\tif (p[j] == 0 || match(p[j])) //\u5982\u679c\u6682\u65e0\u5339\u914d\uff0c\u6216\u8005\u539f\u6765\u5339\u914d\u7684\u5de6\u4fa7\u5143\u7d20\u53ef\u4ee5\u627e\u5230\u65b0\u7684\u5339\u914d\n            {\n                p[j] = i;    //\u5f53\u524d\u5de6\u4fa7\u5143\u7d20\u6210\u4e3a\u5f53\u524d\u53f3\u4fa7\u5143\u7d20\u7684\u65b0\u5339\u914d\n                return true; //\u8fd4\u56de\u5339\u914d\u6210\u529f\n            }\n\t\t}\n\t}\n\treturn false;\n}\n\nint Hungarian()\n{\n\tint ans = 0;\n\tfor (int i = 1 ; i <= nl ; i ++)\n\t{\n\t\tmemset(vis, false, sizeof(vis));\n\t\tif (match(i))\n\t\t{\n\t\t\tans ++;\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main()\n{\n\tcin >> nl >> nr >> m;\n\tfor (int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tmp[x][y] = 1;\n\t}\n\tcout << Hungarian();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1628666672,
        "uid": 342868,
        "name": "Ted_hjl",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 B3605\u3010\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "## \u4e8c\u5206\u56fe\n\u9996\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u4e8c\u5206\u56fe\u662f\u4ec0\u4e48\u3002\n\n\u7b80\u800c\u8a00\u4e4b\uff0c\u5c31\u662f\u9876\u70b9\u96c6 $V$ \u53ef\u5206\u5272\u4e3a\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6\uff0c\u5e76\u4e14\u56fe\u4e2d\u6bcf\u6761\u8fb9\u4f9d\u9644\u7684\u4e24\u4e2a\u9876\u70b9\u90fd\u5206\u5c5e\u4e8e\u8fd9\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6\uff0c\u4e24\u4e2a\u5b50\u96c6\u5185\u7684\u9876\u70b9\u4e0d\u76f8\u90bb\u3002\n\n## \u601d\u8def\n\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u53ef\u4ee5\u7528\u6700\u5927\u6d41\u6216\u8005\u5308\u7259\u5229\u7b97\u6cd5\u3002\n1. \u4ece\u4efb\u610f\u4e00\u4e2a\u672a\u88ab\u5339\u914d\u7684\u70b9 $u$ \u5f00\u59cb\uff0c\u4ece\u70b9 $u$ \u7684\u53d8\u79cd\u9009\u4e00\u6761\u8fb9\u914d\u5bf9\u3002\u82e5\u70b9  $v$ \u6ca1\u6709\u88ab\u5339\u914d\uff0c\u5219\u6210\u529f\u3002\n2. \u4ece\u70b9 $u$ \u7684\u5404\u8fb9\u4e2d\u518d\u9009\u62e9\u4e00\u6761\uff0c\u77e5\u9053\u6210\u529f\u6216\u6240\u6709\u8fb9\u90fd\u5c1d\u8bd5\u8fc7\u3002\n3. \u7ee7\u7eed\u4e00\u4e00\u914d\u5bf9\u3002\n4. \u8f93\u51fa\u3002\n\n\u4e0a\u4ee3\u7801(\u6a21\u677f)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint e[101][101];\nint match[101];\nint book[101],m,n;\nint dfs(int u)\n{\n    for(int i=1;i<=n;i++)\n    {\n        if(book[i]==0&&e[u][i])\n        {\n            book[i]=1;//\u70b9i\u5df2\u8bbf\u95ee\n            if(match[i]==0||dfs(match[i]))//\u70b9i\u672a\u88ab\u914d\u5bf9\u6216\u8005\u627e\u5230\u4e86\u65b0\u7684\u914d\u5bf9\n            {\n                match[i]=u;//\u66f4\u65b0\u914d\u5bf9\u5173\u7cfb\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\nint main()\n{\n    int i,j,t1,t2,sum=0;\n    cin>>n>>m;\n    for(i=1;i<=m;i++)//\u8bfb\u5165\u8fb9\n    {\n        cin>>t1>>t2;\n        e[t1][t2]=1;\n    }\n    for(i=1;i<=n;i++)\n    {\n        match[i]=0;\n    }\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=n;j++)\n        {\n            book[j]=0;//\u6e05\u7a7a\u4e0a\u6b21\u641c\u7d22\u65f6\u7684\u6807\u8bb0\n        }\n        if(dfs(i))sum++;//\u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u82e5\u627e\u5230\uff0c\u914d\u5bf9\u6570\u52a0\u4e00\n    }\n    cout<<sum;\n    return 0;\n}\n```\n\n",
        "postTime": 1641722078,
        "uid": 487956,
        "name": "luogu_shabi_IAKIOI",
        "ccfLevel": 0,
        "title": "\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d"
    },
    {
        "content": "\u9898\u76ee\uff1a[B3605](https://www.luogu.com.cn/problem/B3605)\n\n\u8fd9\u662f\u4e00\u9053\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u6a21\u677f\u9898\uff0c\u548c [P3386](https://www.luogu.com.cn/problem/P3386) \u5b8c\u5168\u4e00\u81f4\u3002\u4f7f\u7528**\u5308\u7259\u5229\u7b97\u6cd5**\u6c42\u89e3\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5de6\u90e8\u70b9 $u$\uff0c\u4ece\u4e0e\u4e4b\u76f8\u8fde\u7684\u6bcf\u6761\u8fb9\u51fa\u53d1\uff0c\u5bfb\u627e\u53f3\u90e8\u70b9 $v$ \u8fdb\u884c\u5339\u914d\u3002\n- \u6ca1\u6709\u5de6\u90e8\u70b9\u4e0e $v$ \u5339\u914d\uff1a\n\t- $u$ \u76f4\u63a5\u4e0e $v$ \u5339\u914d\u3002\n   - \u8fd4\u56de\u6210\u529f\u3002\n- \u6709\u5de6\u90e8\u70b9 $u1$ \u4e0e $v$ \u5339\u914d\uff1a\n\t- \u5bfb\u627e**\u589e\u5e7f\u8def**\uff0c\u5bfb\u627e\u6ca1\u6709\u5339\u914d\u7684\u53f3\u90e8\u70b9 $v1$\uff0c\u4e5f\u5c31\u662f\u91cd\u590d\u4e0a\u9762\u7684\u548c\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u53ef\u4ee5**\u9012\u5f52**\u3002\n\t\t- \u627e\u5230\uff1a$u1$ \u4e0e $v1$ \u5339\u914d\uff0c$u$ \u4e0e $v$ \u5339\u914d\u3002\n\t\t- \u627e\u4e0d\u5230\uff1a\u8fd4\u56de\u5931\u8d25\uff0c\u5bf9\u4e8e $u$ \u7684\u4e0b\u4e00\u6761\u8fb9\u8fdb\u884c\u6b64\u8fc7\u7a0b\u3002\n\n------------\n\n## Code:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read(){/*\u5feb\u8bfb*/}\nvoid print(int x,char ch=0){/*\u5feb\u5199*/}\nconst int N=1005;\nint n,m,e,mat[N],vis[N],ans;\nvector<int>g[N];\nbool dfs(int u,int x){\n\tif(vis[u]==x)return 0; //u\u672c\u6765\u5c31\u5df2\u7ecf\u56e0\u4e3ax\u800c\u5bfb\u627e\u8fc7\u589e\u5e7f\u8def\uff0c\u4e0d\u7528\u518d\u627e\u4e86\uff0c\u9632\u6b62\u6b7b\u5faa\u73af\u3002\n\tvis[u]=x; //\u6807\u8bb0u\u56e0\u4e3ax\u800c\u5bfb\u627e\u589e\u5e7f\u8def\u3002\n\tfor(int i=0;i<g[u].size();i++){ //\u5bfb\u627e\u6bcf\u4e00\u6761\u8fb9\n\t\tint v=g[u][i];\n\t\tif(!mat[v]||dfs(mat[v],x)){ //v\u6ca1\u6709\u88ab\u5339\u914d\uff0c\u6216\u662f\u627e\u5230\u589e\u5e7f\u8def\n\t\t\tmat[v]=u; //u\u4e0ev\u5339\u914d\n\t\t\treturn 1; //\u5339\u914d\u6216\u5bfb\u627e\u589e\u5e7f\u8def\u6210\u529f\n\t\t}\n\t}\n\treturn 0; //\u6700\u7ec8\u5931\u914d\u6216\u627e\u4e0d\u5230\u589e\u5e7f\u8def\n}\nsigned main(){\n\tn=read(),m=read(),e=read();\n\tfor(int i=1;i<=e;i++){\n\t\tint u=read(),v=read();\n\t\tg[u].push_back(v); //\u90bb\u63a5\u8868\u5b58\u56fe\n\t}\n\tfor(int i=1;i<=n;i++)ans+=dfs(i,i); //\u5339\u914d\u5230\u5c31\u591a\u4e00\u7ec4\n\tprint(ans,'\\n');\n\treturn 0;\n}\n```",
        "postTime": 1637327159,
        "uid": 437788,
        "name": "aqx_AK_xyf",
        "ccfLevel": 5,
        "title": "B3605 [\u56fe\u8bba\u4e0e\u4ee3\u6570\u7ed3\u6784 401] \u4e8c\u5206\u56fe\u5339\u914d"
    },
    {
        "content": "\u4f17\u6240\u5468\u77e5\uff0c\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\u6765\u89e3\uff0c\u800c\u4e14\u590d\u6742\u5ea6\u6bd4\u5308\u7259\u5229\u7b97\u6cd5\u8981\u4f18\u79c0\u3002\n\n## \u5206\u6790\n\u5efa\u7acb\u865a\u62df\u6e90\u70b9 $S$\uff0c\u865a\u62df\u6c47\u70b9 $T$\uff0c\u5206\u522b\u7f16\u53f7\u4e3a $0$,$n_1+n_2+1$\u3002\uff08\u53ea\u8981\u662f\u4e0d\u91cd\u590d\u7684\u7f16\u53f7\u5c31\u884c\uff09\n\u7136\u540e\u5de6\u534a\u90e8\u7684\u70b9\u8fde\u63a5\u865a\u62df\u6e90\u70b9 $S$\uff0c\u53f3\u534a\u90e8\u7684\u70b9\u8fde\u63a5\u865a\u62df\u6c47\u70b9 $T$\uff0c\u5bb9\u91cf\u90fd\u662f $1$\u3002\n\u518d\u6839\u636e\u9898\u610f\u5728\u5de6\u53f3\u90e8\u7684\u70b9\u4e4b\u95f4\u8fde\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u56fe\u5c31\u5efa\u597d\u4e86\uff0c\u6700\u540e\u6211\u4eec\u5728\u8fd9\u5f20\u56fe\u8dd1\u4e00\u904d\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int INF=0x3f3f3f3f;\nconst int N=1010;\n\nstruct node{\n    int to, next, c;\n}e[N*N+N<<1];\n\nint h[N], tot;\nvoid add(int u, int v, int cap){\n    e[tot].to=v, e[tot].c=cap, e[tot].next=h[u], h[u]=tot++;\n    e[tot].to=u, e[tot].c=0, e[tot].next=h[v], h[v]=tot++;\n}\n\nint S, T;\n\nint q[N], d[N], cur[N];\nbool bfs(){\n    memset(d, -1, sizeof d);\n    int tt=-1, hh=0;\n    q[++tt]=S;\n    d[S]=0, cur[S]=h[S];\n    \n    while(tt>=hh){\n        int hd=q[hh++];\n        for(int i=h[hd]; ~i; i=e[i].next){\n            int go=e[i].to;\n            if(d[go]==-1 && e[i].c){\n                d[go]=d[hd]+1;\n                cur[go]=h[go];\n                if(go==T) return true;\n                q[++tt]=go;\n            }\n        }\n    }\n    return false;\n}\n\nint find(int u, int limit){\n    if(u==T) return limit;\n    int flow=0;\n    for(int i=cur[u]; ~i && limit>flow; i=e[i].next){\n        int go=e[i].to;\n        cur[u]=i;\n        if(d[go]==d[u]+1 && e[i].c){\n            int t=find(go, min(e[i].c, limit-flow));\n            if(!t) d[go]=-1;\n            flow+=t, e[i].c-=t, e[i^1].c+=t;\n        }\n    }\n    return flow;\n}\n\nint dinic(){\n    int res=0, flow;\n    while(bfs()) while(flow=find(S, INF)) res+=flow;\n    return res;\n}\nint main(){\n    memset(h, -1, sizeof h);\n    int n1, n2, m; cin>>n1>>n2>>m;\n    S=0, T=n1+n2+1;\n    \n    while(m--){\n        int u, v; cin>>u>>v;\n        v+=n1;\n        add(u, v, 1);\n    }\n    \n    for(int i=1; i<=n1; i++) add(S, i, 1);\n    for(int i=1; i<=n2; i++) add(i+n1, T, 1);\n    \n    cout<<dinic()<<endl;\n    \n    return 0;\n}\n```",
        "postTime": 1627478548,
        "uid": 138960,
        "name": "Tenshi",
        "ccfLevel": 0,
        "title": "B3605 [\u56fe\u8bba\u4e0e\u4ee3\u6570\u7ed3\u6784 401] \u4e8c\u5206\u56fe\u5339\u914d"
    }
]