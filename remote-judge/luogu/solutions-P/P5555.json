[
    {
        "content": "~~\u4e3a\u5565\u77e5\u9053\u6709\u56de\u6587\u81ea\u52a8\u673a\u8fd8\u8981\u5199\u5e26log\u7684std\u554a~~\n\n~~\u4e3a\u5565\u653e\u90a3\u4e48\u5c0f\u8303\u56f4\u653e\u90a3\u4e48\u5927\u65f6\u9650\u554a~~\n\n~~\u6211\u8bb0\u5f97\u6211\u524d\u51e0\u5929\u521a\u521a\u653e\u4e86PAM\u677f\u5b50\u554a~~\n\n\u524d\u7f6e\u829d\u58eb\uff1a\u56de\u6587\u81ea\u52a8\u673a\u3002\u4e0d\u61c2\u7684\u53ef\u4ee5\u53bb\u7a9d\u7684\u6a21\u677f\u90a3\u513f\u770b\u770b\u3002\n\n\u8fd9\u4e2a\u9898\u95ee\u4f60\u6700\u957f\u516c\u5171\u56de\u6587\u5b50\u4e32\u957f\u5ea6\u548c\u4e2a\u6570\u3002\n\n\u6211\u4eec\u5bf9\u4e24\u4e2a\u5b57\u7b26\u4e32\u5206\u522b\u5efa\u56de\u6587\u81ea\u52a8\u673a\u3002\u56de\u6587\u81ea\u52a8\u673a\u4e2d\u7684\u8f6c\u79fb\u8fb9\u5f62\u6210\u4e86\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\u3002\n\n\u8d70\u76f8\u540c\u7684\u8f6c\u79fb\u8fb9\uff0c\u5f97\u5230\u7684\u56de\u6587\u4e32\u663e\u7136\u662f\u76f8\u540c\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u540c\u65f6\u5bf9\u4e24\u68f5\u6811\u8fdb\u884cdfs\uff0c\u6bcf\u6b21\u90fd\u8d70\u76f8\u540c\u7684\u8f6c\u79fb\u8fb9\uff0c\u90a3\u4e48\u8d70\u5230\u7684\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u56de\u6587\u4e32\u4e00\u5b9a\u662f\u516c\u5171\u7684\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u7edf\u8ba1\u6700\u957f\u957f\u5ea6\u4e86\u3002\u53c8\u7531\u4e8e\u56de\u6587\u81ea\u52a8\u673a\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u56de\u6587\u4e32\u4e0d\u540c\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u540c\u65f6\u7edf\u8ba1\u51fa\u4e0d\u540c\u6700\u957f\u516c\u5171\u56de\u6587\u5b50\u4e32\u4e2a\u6570\u3002\n\n\u56de\u6587\u81ea\u52a8\u673a\u7684\u70b9\u6570\u662f$O(n)$\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n~~\u6bd4std\u77ed\uff0c\u6bd4std\u5feb\uff0c\u8fd8\u6bd4std\u597d\u5199\u3002~~\n\n## Code\uff1a\n```cpp\n#include<cstdio>\nconst int N=3e5+5;\nchar s[N],ss[N];\nint mx=0,tot=0,n,m;\nstruct pam{\n    int len[N],fail[N],ch[N][26],tot,lst,num[N];\n    char s[N];\n    void init(char*ss){\n        tot=lst=1;\n        len[1]=-1,len[0]=0,fail[0]=1;\n        for(int i=1;ss[i];++i)s[i]=ss[i];\n    }\n    int insert(char cr,int ed){\n        int c=cr-'a';\n        int p=lst;\n        while(s[ed]!=s[ed-len[p]-1])\n        p=fail[p];\n        if(!ch[p][c]){\n            int np=++tot;\n            len[np]=len[p]+2;\n            int q;\n            for(q=fail[p];s[ed]!=s[ed-len[q]-1];q=fail[q]);\n            fail[np]=ch[q][c];\n            num[np]=num[fail[np]]+1;\n            ch[p][c]=np;\n        }\n        lst=ch[p][c];\n        return num[lst];\n    }\n}p1,p2;\nvoid dfs(int nl,int nr){\n    if(mx<p1.len[nl])mx=p1.len[nl],tot=1;else\n    if(mx==p1.len[nl])++tot;\n    for(int i=0;i<26;++i)\n    if(p1.ch[nl][i]&&p2.ch[nr][i])dfs(p1.ch[nl][i],p2.ch[nr][i]);\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    scanf(\"%s%s\",s+1,ss+1);\n    p1.init(s),p2.init(ss);\n    for(int i=1;s[i];++i)\n    p1.insert(s[i],i);\n    for(int i=1;ss[i];++i)\n    p2.insert(ss[i],i);\n    dfs(0,0);\n    dfs(1,1);\n    printf(\"%d %d\\n\",mx,tot);\n    return 0;\n}\n\n```",
        "postTime": 1568286951,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5555 \u3010\u79e9\u5e8f\u9b54\u5492\u3011"
    },
    {
        "content": "[$\\huge\\color{skyblue}{\\mathcal{My\\ Blog}}$](https://liuxizai.ac.cn/post/solution-p5555-zhi-xu-mo-zhou/)\n\n## $Description$\n\n\u7ed9\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u6700\u957f\u516c\u5171\u56de\u6587\u5b50\u4e32\u7684\u957f\u5ea6\u548c\u6570\u91cf\u3002\n\n## $Solution$\n\n\u65b9\u6cd5\u662f PAM\uff0c\u4f46\u662f\u91cd\u70b9\u5728\u4e8e\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5efa\u4e24\u4e2a PAM \u7136\u540e\u6700\u540e\u518d\u8dd1 dfs\uff08\u5f53\u7136\u8fd9\u6837\u4e5f\u53ef\u505a\uff09\u3002\n\n\u8003\u8651 PAM \u7684\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u5176\u4ee3\u8868\u7684\u90fd\u662f\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u5728\u540c\u4e00\u68f5 PAM \u4e0a\u5206\u522b\u8dd1\u4e00\u904d\uff0c\u90a3\u4e9b\u5728\u4e24\u6b21 $solve$ \u8fc7\u7a0b\u4e2d\u90fd\u88ab\u8bbf\u95ee\u8fc7\u7684\u7ed3\u70b9\u5c31\u662f\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u516c\u5171\u56de\u6587\u5b50\u4e32\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7528 $flag_{0/1}$ \u8bb0\u5f55\u7b2c $1/2$ \u6b21 $solve$ \u4e2d\u88ab\u8bbf\u95ee\u7684\u7ed3\u70b9\uff0c\u5c31\u80fd\u591f\u627e\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u516c\u5171\u56de\u6587\u5b50\u4e32\uff0c\u6700\u540e\u518d\u627e\u6700\u5927\u957f\u5ea6\u5e76\u8ba1\u6570\u5373\u53ef\u3002\n\n## $AC\\ Code$\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u79cd\u505a\u6cd5 $PAM$ \u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n+m)$\uff0c\u7a7a\u95f4\u8981\u5f00\u5230 $600000$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define Int inline int\n#define Void inline void\n#define ri register int\nusing namespace std;\nint n, m, mx, ans;\nbool flag[2][600005];\nLL read(){\n    ll n = 0; int f = 1; char ch = getchar();\n    while('0' > ch || ch > '9'){\n        if(ch == '-') f *= -1;\n        ch = getchar();\n    }\n    while('0' <= ch && ch <= '9'){\n        n = (n << 1) + (n << 3) + ch-'0';\n        ch = getchar();\n    }\n    return f * n;\n}\nVoid input() {}\ntemplate<typename Type, typename... Types>\nVoid input(Type& arg, Types&... args){\n    arg = read();\n    input(args...);\n}\nnamespace PAM{\n    const int SIZE = 6e5;\n    struct node{\n        int num, len, fail, ch[26];\n    }nd[SIZE];\n    char s[SIZE];\n    int cnt, last, n;\n    Void init(){\n        nd[0].len = 0, nd[0].fail = 1;\n        nd[1].len = -1, nd[1].fail = 0;\n        cnt = 1;\n        last = 0;\n    }\n    Int getfail(int p, int k){\n        while(k - nd[p].len - 1 < 0 || s[k-nd[p].len-1] != s[k]) p = nd[p].fail;\n        return p;\n    }\n    Void solve(int T){\n        for(ri i = 0; i < n; i++){\n            int pos = getfail(last, i);\n            if(!nd[pos].ch[s[i]-'a']){\n                cnt++;\n                nd[cnt].fail = nd[getfail(nd[pos].fail, i)].ch[s[i]-'a'];\n                nd[cnt].len = nd[pos].len + 2;\n                nd[cnt].num = nd[nd[cnt].fail].num + 1;\n                nd[pos].ch[s[i]-'a'] = cnt;\n            }\n            last = nd[pos].ch[s[i]-'a'];\n            flag[T][last] = true;\n        }\n    }\n}\nint main(){\n    PAM::init();\n    input(n, m);\n    scanf(\"%s\", PAM::s);\n    PAM::n = n;\n    PAM::solve(0);\n    scanf(\"%s\", PAM::s);\n    PAM::n = m;\n    PAM::solve(1);\n    for(ri i = 0; i <= PAM::cnt; i++){\n        if(flag[0][i] && flag[1][i]){\n            if(PAM::nd[i].len > mx){\n                mx = PAM::nd[i].len;\n                ans = 1;\n            }\n            else if(PAM::nd[i].len == mx) ans++;\n        }\n    }\n    printf(\"%d %d\", mx, ans);\n    return 0;\n}\n```",
        "postTime": 1614955222,
        "uid": 371439,
        "name": "Liuxizai",
        "ccfLevel": 6,
        "title": "\u300cSolution\u300dP5555 \u79e9\u5e8f\u9b54\u5492"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u6709\u4e00\u79cd\u4e32\u540c\u65f6\u662f\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u4e32\uff0c\u5e76\u4e14\u5b83\u662f\u56de\u6587\u4e32\u3002\u6c42\u6240\u6709\u8fd9\u79cd\u4e32\u7684\u957f\u5ea6\u6700\u5927\u503c\u548c\u957f\u5ea6\u53d6\u5230\u6700\u5927\u503c\u7684\u8fd9\u79cd\u5b57\u7b26\u4e32\u6709\u591a\u5c11\u4e2a\u3002\n\n\n------------\n\u5b98\u65b9\u9898\u89e3\u544a\u8bc9\u6211\u4eec\u6b63\u89e3\u662fSAM\uff0c\u4e0d\u8fc7\u8fd9\u9898\u5e76\u6ca1\u6709\u5361\u54c8\u5e0c\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u7528\u54c8\u5e0c\u6c34\u8fc7\u53bb\u4e86\u3002\n\n\u5f88\u591a\u4eba\u7b2c\u4e00\u60f3\u6cd5\u53ef\u80fd\u662f\u4e8c\u5206\u957f\u5ea6\uff0c\u4f46\u662f\u8fd9\u4e48\u505a\u662f\u4e0d\u5bf9\u7684\uff0c\u53cd\u4f8b\u5f88\u5bb9\u6613\u4e3e,\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u4e32\uff1a\n$$ aba$$\n\u5b83\u6709\u957f\u5ea6\u4e3a3\u7684\u56de\u6587\u5b50\u4e32\uff0c\u5374\u6ca1\u6709\u957f\u5ea6\u4e3a2\u7684\u56de\u6587\u5b50\u4e32\u3002\n\n\u4e0d\u8fc7\u5982\u679c\u6211\u4eec\u628a\u4e24\u8fb9\u7684a\u5220\u6389\uff0c\u53ea\u5269\u4e00\u4e2ab\uff0c\u5b83\u4f9d\u7136\u662f\u4e00\u4e2a\u56de\u6587\u4e32\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b58\u5728\u957f\u5ea6\u4e3an\u7684\u56de\u6587\u5b50\u4e32\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u5b58\u5728\u957f\u5ea6\u4e3an-2\u7684\u56de\u6587\u5b50\u4e32\uff08\u628a\u957f\u5ea6\u4e3an\u7684\u56de\u6587\u5b50\u4e32\u4e24\u5934\u7684\u5b57\u7b26\u5220\u6389\u5373\u53ef\uff09\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u5206\u522b\u5bf9\u5947\u6570\u548c\u5076\u6570\u4e8c\u5206\u4e86\u3002\n```cpp\nint maxn=0,tot=0;\n\tint l=0,r=n/2+1;\n\twhile(l<r){\n\t\tint mid=(l+r)/2;\n\t\tint now=check(mid*2);\n\t//\tcout<<mid*2<<\" \"<<now<<endl; \n\t\tif(now>0){\n\t\t\tmaxn=mid*2;\n\t\t\ttot=now;\n\t\t\tl=mid+1;\n\t\t}\n\t\telse r=mid;\n\t}\n\tl=0,r=n/2+1;\n\twhile(l<r){\n\t\tint mid=(l+r)/2;\n\t\tint now=check(mid*2+1);\n\t//\tcout<<(mid*2+1)<<\" \"<<now<<endl;\n\t\tif(now>0){\n\t\t\tl=mid+1;\n\t\t\tif(mid*2+1>maxn){\n\t\t\t\tmaxn=mid*2+1;\n\t\t\t\ttot=now;\n\t\t\t}\n\t\t}\n\t\telse r=mid;\n\t}\n```\n\u5728check\u7684\u65f6\u5019\uff0c\u628a\u7b2c\u4e8c\u4e2a\u4e32\u4e2d\u957f\u5ea6\u4e3amid\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\u503c\u90fd\u52a0\u5165\u54c8\u5e0c\u8868\u91cc\u9762\uff0c\u7136\u540e\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u4e32\u6240\u6709\u957f\u5ea6\u4e3amid\u7684\u5b50\u4e32\uff0c\u5224\u65ad\u5b83\u662f\u5426\u662f\u56de\u6587\u4e32\u4ee5\u53ca\u662f\u5426\u5728\u7b2c\u4e8c\u4e2a\u4e32\u4e2d\u51fa\u73b0\u8fc7\u5c31\u884c\u4e86,\u6ce8\u610f\uff1a\u540c\u6837\u7684\u4e32\u53ea\u7b97\u4e00\u6b21\n```cpp\nint check(int len){\n\tif(len>min(n,m))return 0;\n\tmemset(vis,0,sizeof(vis));\n\tmemset(hash,0,sizeof(hash));\n\tint tot=0;\n\tfor(int i=1;i+len-1<=m;i++){\n\t\tint to=i+len-1;\n\t\tlong long nowhash=(hash2[to]-(hash2[i-1]*power[len])%mod+mod)%mod;//\u63d0\u53d6\u5b50\u4e32\u65b9\u6cd5\uff1ahash[r]-hash[l-1]*base^(r-l+1);\n\t//\tcout<<nowhash<<\" \";\n\t\tif(!ask(nowhash))insert(nowhash);\n\t}\n//\tcout<<endl;\n\tfor(int i=1;i+len-1<=n;i++){\n\t\tint to=i+len-1;\n\t\tlong long nowhash=(hash1[to]-(hash1[i-1]*power[len])%mod+mod)%mod;\n\t//\tcout<<nowhash<<\" \";\n\t\tif(ask(nowhash)==1&&is(i,to)){//is\u662f\u5224\u65ad\u56de\u6587\u4e32\u7684\u51fd\u6570\n\t\t\ttot++;\n\t\t\tinsert(nowhash);\n\t\t}\n\t}\n//\tcout<<endl;\n\treturn tot;\n}\n```\n\u81f3\u4e8e\u600e\u4e48\u5224\u65ad\u56de\u6587\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u53cd\u7740\u5f04\u4e00\u904d\u54c8\u5e0c\uff0c\u7136\u540e\u5224\u65ad\u6b63\u53cd\u4e24\u90e8\u5206\u7684\u54c8\u5e0c\u503c\u662f\u5426\u76f8\u7b49\u5c31\u53ef\u4ee5\u4e86\uff0c~~\u6211\u7684\u5199\u6cd5\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd8\u5224\u65ad\u5947\u5076\u6027\u7b97\u4e00\u534a\u7684\u54c8\u5e0c\u503c\uff0c\u5176\u5b9e\u5b8c\u5168\u6ca1\u5fc5\u8981\u6240\u4ee5\u6211\u5c31\u4e0d\u653e\u4ee3\u7801\u4e86~~\n\n\u522b\u5fd8\u4e86\u53d6\u6a21\uff0c\u53e6\u5916\u5982\u679chash\u88ab\u5361\u4e86\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u53cc\u54c8\u5e0c",
        "postTime": 1568290651,
        "uid": 118058,
        "name": "zzy2333",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5555 \u3010\u79e9\u5e8f\u9b54\u5492\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u6700\u957f\u5171\u540c\u56de\u6587\u5b50\u4e32\u7684\u957f\u5ea6\uff0c\u4ee5\u53ca\u6709\u591a\u5c11\u5e76\u5217\u6700\u957f\u7684\u5b50\u4e32\u3002\n\n## \u601d\u8def\n\n\u5f88\u663e\u7136\u7684\u4e00\u79cd\u505a\u6cd5\u5c31\u662f\uff0c\u7ed9\u4e24\u4e2a\u5b50\u4e32\u5206\u522b\u5efa PAM\uff0c\u7136\u540e dfs \u4e00\u904d\uff0c\u6c42\u51fa\u6700\u957f\u7684\u4e32\u7684\u957f\u5ea6\u662f\u591a\u5c11\u4ee5\u53ca\u6709\u591a\u5c11\u4e2a\u5e76\u5217\u6700\u957f\u3002\n\n\u6b63\u786e\u6027\u8bc1\u660e\uff1aPAM \u4e2d\uff0c\u4e0b\u9762\u7684\u8282\u70b9\u4ee3\u8868\u7684\u4e32\u4e00\u5b9a\u5305\u542b\u4e0a\u9762\u7684\u8282\u70b9\u4ee3\u8868\u7684\u4e32\u3002\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u81ea\u52a8\u673a\u62e5\u6709\u67d0\u8282\u70b9\uff0c\u4f46\u53e6\u4e00\u4e2a\u6ca1\u6709\uff0c\u90a3\u4e48\u518d\u5f80\u4e0b\u627e\u663e\u7136\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u65b0\u7684\u5171\u540c\u62e5\u6709\u7684\u56de\u6587\u4e32\u3002\n\n\u6ce8\u610f\u4e00\u4e2a\uff08\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97\u5751\uff09\u7684\u70b9\uff1adfs \u8fc7\u7a0b\u4e2d\uff0c\u867d\u7136\u4e24\u4e2a PAM \u7684\u8282\u70b9\u5728\u5916\u89c2\uff08\u6240\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\uff09\u4e0a\u662f\u76f8\u7b49\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u904d\u5386\u987a\u5e8f\u539f\u56e0\uff0c\u7f16\u53f7\u5e76\u4e0d\u4e00\u5b9a\u76f8\u7b49\u2026\u2026\n\n\u6240\u4ee5\u53ea\u7528\u4e00\u4e2a $x$ \u53bb\u540c\u65f6\u4ee3\u8868\u4e24\u4e2a PAM \u5f53\u524d\u8282\u70b9\u7684\u7f16\u53f7\u662f\u4e0d\u5bf9\u7684\uff0c\u9700\u8981\u7528\u4e24\u4e2a\u6307\u9488\u3002\n\n\u6211\u4e00\u5f00\u59cb\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u5bfc\u81f435pts\u2026\u2026\n\n\u53ef\u4ee5\u53c2\u8003\u8fd9\u7ec4\u6570\u636e\uff1a\n\n\u8f93\u5165\uff1a\n```\n6 6\naaabab\nbabaaa\n```\n\n\u8f93\u51fa\uff1a`3 3`\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1e6 + 5;\nint n, m, mxlen, mxnum;\nstruct PAM\n{\n    int len[N], fail[N], t[N][26], tot = 1;\n    string s;\n    inline int getFail(int x, int i)\n    {\n        while (i - len[x] - 1 < 0 || s[i] != s[i - len[x] - 1])\n            x = fail[x];\n        return x;\n    }\n    inline void build()\n    {\n        int cur = 0;\n        fail[0] = 1, len[1] = -1;\n        for (int i = 0; i < s.size(); i++)\n        {\n            s[i] -= 'a';\n            int pos = getFail(cur, i);\n            if (!t[pos][s[i]])\n            {\n                fail[++tot] = t[getFail(fail[pos], i)][s[i]];\n                t[pos][s[i]] = tot;\n                len[tot] = len[pos] + 2;\n            }\n            cur = t[pos][s[i]];\n        }\n    }\n} A, B;\ninline void dfs(int l, int r)\n{\n    if (A.len[l] > mxlen)\n        mxlen = A.len[l], mxnum = 1;\n    else if (A.len[l] == mxlen)\n        mxnum++;\n    for (int i = 0; i < 26; i++)\n        if (A.t[l][i] && B.t[r][i])\n            dfs(A.t[l][i], B.t[r][i]);\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n >> m;\n    cin >> A.s >> B.s;\n    A.build(), B.build();\n    dfs(0, 0), dfs(1, 1);\n    cout << mxlen << ' ' << mxnum;\n    return 0;\n}\n```",
        "postTime": 1670935885,
        "uid": 576378,
        "name": "creation_hy",
        "ccfLevel": 5,
        "title": "P5555 \u9898\u89e3"
    },
    {
        "content": "      \n    \n   \u5176\u5b9e\u6211\u662f\u770b\u9898\u89e3\u90fd\u662f\u5efa\u4e24\u9897PAM\u548cBFS\u611f\u89c9\u6ca1\u5fc5\u8981\u5c31\u6765\u53d1\u4e2a\u9898\u89e3\uff0c\u9996\u5148\u6211\u4eec\u77e5\u9053PAM\u4e0a\u7684\u8282\u70b9\u5c31\u662f\u4e00\u4e2a\u56de\u6587\u4e32\u5bf9\u4e0d\u5bf9\uff0c\u7136\u540e\u9898\u76ee\u8981\u6c42\u7684\u662f\u4e24\u4e2a\u4e32\u90fd\u51fa\u73b0\u8fc7\u7684\u56de\u6587\u4e32\u3002                \n       \u90a3\u4e48\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u8fd9\u4e48\u505a\uff0c\u5728PAM\u7684\u65f6\u5019\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u7684\u56de\u6587\u4e32\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5728\u4e00\u4e2a\u4e32\u4e2d\u8fd9\u4e2a\u6b21\u6570\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\uff0c\u6700\u540e\u6211\u4eec\u904d\u5386PAM\u6240\u6709\u8282\u70b9\uff0c\u53bb\u8bb0\u5f55\u6240\u6709\u7684\u51fa\u73b0\u6b21\u6570\u4e3a\u4e24\u6b21\u7684\u8282\u70b9\uff0c\u8fd9\u4e2a\u8282\u70b9\u5c31\u662f\u4ee3\u8868\u7684\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u7136\u540ePAM\u8def\u4e0a\u6211\u4eec\u53c8\u5df2\u7ecf\u77e5\u9053\u4e86\u6240\u6709\u8282\u70b9\u7684LEN\uff0c\u90a3\u4e48\u5c31\u53ea\u9700\u8981\u8bb0\u5f55\u6700\u957f\u7684LEN\u5c31\u662f\u7b54\u6848\u3002      \n      \u7136\u540e\u6211\u4eec\u904d\u5386\u6240\u6709PAM\u4e0a\u8282\u70b9\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u7b97\u51fa\u6bcf\u79cd\u957f\u5ea6\u7684\u4e32\u7684\u6570\u91cf\u3002\u5176\u5b9e\u5c31\u662fPAM\u7684\u677f\u5b50\u7136\u540e\u989d\u5916\u5f00\u4e00\u4e2avis\u6570\u7ec4\u53bb\u5224\u65ad\u4e0b\u9047\u89c1\u4e00\u4e2a\u65b0\u7684\u4f4d\u7f6e\u7684\u56de\u6587\u4e32\u9700\u4e0d\u9700\u8981\u6b21\u6570+1\uff08\u5728\u4e4b\u524d\u6709\u6ca1\u6709\u51fa\u73b0\u8fc7\uff09,\u7136\u540e\u5c31\u662f\u5957\u677f\u5b50\uff0c\u904d\u5386PAM\u6240\u6709\u8282\u70b9\u7edf\u8ba1\u7b54\u6848\u5c31\u597d\u4e86\uff0c\u5b8c\u5168\u53ef\u4ee5\u5728\u4e00\u4e2aPAM\u4e0a\u89e3\u51b3\u95ee\u9898\uff0c\u4e0d\u9700\u8981\u4e24\u9897\u8fd8\u518d\u53bbBFS\u3002\n      \n\n\n```cpp\n\nint tt,N,M;\nint Len, Tire[max_][30], len[max_], Fair[max_],cnt[max_];\nchar S[max_];\nil int getfail(int cur, int i) {\n\twhile (S[i] != S[i- len[cur] - 1]){\n\t\tcur = Fair[cur];\n\t}return cur;\n}\nbool vis[max_];\nil void getPam() {\n\tmemset(vis, 0, sizeof(vis));\n\tint fa = 0;\n\tfor (re int i = 1; i <= Len; i++) {\n\t\tint now = getfail(fa, i);\n\t\tif (!Tire[now][S[i] - 'a']) {\n\t\t\ttt++;\n\t\t\tFair[tt] = Tire[getfail(Fair[now], i)][S[i] - 'a'];\n\t\t\tlen[tt] = len[now] + 2;\n\t\t\tTire[now][S[i] - 'a'] = tt;\n\t\t}\n\t\tfa = Tire[now][S[i] - 'a'];\n\t\tif (!vis[fa]) {\n\t\t\tvis[fa] = 1; cnt[fa]++;\n\t\t}\n\t}\n}\nint nn[max_];\nsigned main() {\n\tlen[1] = -1;\n\tFair[0] = 1;\n\ttt = 1;\n\tN = read(),  M = read();\n\tscanf(\"%s\", (S + 1));\n\tLen = N;\n\tgetPam();\n\tscanf(\"%s\", (S + 1));\n\tLen = M;\n\tgetPam();\n\n\tint anslen = -1, num;\n\tfor (re int i = 2; i <= tt; i++) {\n\t\tif (cnt[i] == 2) {\n\t\t\tnn[len[i]]++;\n\t\t\tanslen = max(anslen, len[i]);\n\t\t}\n\t}\n\tcout << anslen << \" \" << nn[anslen];\n\treturn 0;\n}\n```\n\n\n      \n      ",
        "postTime": 1590408677,
        "uid": 156874,
        "name": "Boxxxxxx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5555 \u3010\u79e9\u5e8f\u9b54\u5492\u3011"
    },
    {
        "content": "\u9898\u610f:\n\u7ed9\u4f60\u4e24\u4e2a\u4e32,\u6c42\u4e24\u4e2a\u4e32\u6700\u957f\u56de\u6587\u516c\u5171\u5b50\u4e32\u53ca\u5176\u79cd\u6570.\n\n\u65b9\u6cd5:\n1. \u5efa\u4fe9\u56de\u6587\u81ea\u52a8\u673a,\u7136\u540ebfs/dfs.\u65f6\u7a7a\u590d\u6742\u5ea6\u5747$O(n)$.\n2. $SAM+Manacher+$\u500d\u589e.\u7a7a\u95f4\u590d\u6742\u5ea6$O(n*26)$.\u65f6\u95f4\u590d\u6742\u5ea6$O(n*(\\log(n)+26))$.\n\n\u7531\u4e8e\u7b2c\u4e8c\u79cd\u53c8\u957f\u53c8\u6162,\u672c\u4eba\u5c31\u6ca1\u5199\u5566~~.\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u505a\u6cd5,\u5efa\u597d\u56de\u6587\u81ea\u52a8\u673a\u540e,\u4e24\u4e2a\u76f8\u540c\u72b6\u6001\u8dd1\u76f8\u540c\u7684\u8fb9\u5f97\u5230\u76f8\u540c\u7684\u4e32,\u6240\u4ee5\u6211\u4eecdfs/bfs\u5c31\u80fd\u6c42\u51fa\u6700\u957f\u56de\u6587\u5b50\u4e32\u5566.\n\n\u5177\u4f53\u5730,bfs\u65f6\u961f\u5217\u628a\u5947\u6839/\u5076\u6839\u4e22\u5165\u5373\u53ef.\n\n\u56de\u6587\u81ea\u52a8\u673a\u4f60\u503c\u5f97\u62e5\u6709\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define mk make_pair\nusing namespace std;\nconst int N=260822;\n\nint ans,cnt;\nchar s[N];\nstruct PAM {//\u540e\u7f00\u81ea\u52a8\u673a\u6a21\u677f\n\tint last=1,tot=1,tr[N][26],len[N],fail[N];\n\tint Find(int x,int n) {\n\t\twhile(s[n]^s[n-len[x]-1]) x=fail[x];\n\t\treturn x;\n\t}\n\tvoid bt() {\n\t\tlen[0]=0; len[1]=-1;\n\t\tfail[0]=1; \n\t\tfor(int i=1,c,p,x;s[i];i++) {\n\t\t\tc=(s[i]-='a');p=Find(last,i);\n\t\t\tif(!tr[p][c]) {\n\t\t\t\tlen[x=++tot]=len[p]+2;\n\t\t\t\tfail[x]=tr[Find(fail[p],i)][c];\n\t\t\t\ttr[p][c]=x;\n\t\t\t}\n\t\t\tlast=tr[p][c];\n\t\t}\n\t}\n}p[2];\n\npair<int,int> q[N];\n\nvoid bfs() {\n\tint l=1,r=2;\n\tq[1]=mk(0,0);\n\tq[2]=mk(1,1);\n\tans=cnt=0;\n\twhile(l<=r) {\n\t\tint a=q[l].first,b=q[l].second; l++;\n\t\tfor(int c=0,x,y,len;c<26;c++)\n\t\t\tif((x=p[0].tr[a][c])&&(y=p[1].tr[b][c])) {//\u90fd\u80fd\u52a0\u76f8\u540c\u5b57\u7b26\n\t\t\t\tlen=p[0].len[x];\n\t\t\t\tif(len>ans) ans=len,cnt=1;\n\t\t\t\telse if(len==ans) cnt++;\n\t\t\t\tq[++r]=mk(x,y);\n\t\t\t}\n\t}\n}\n\nint main() {\n\ts[0]=-1;gets(s+1);\n\tfor(int i=0;i<2;i++) \n\t\tscanf(\"%s\",s+1),p[i].bt();//\u5efaPAM\n\tbfs();printf(\"%d %d\\n\",ans,cnt);\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1585208430,
        "uid": 118826,
        "name": "2018LZY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5555 \u3010\u79e9\u5e8f\u9b54\u5492\u3011"
    },
    {
        "content": "\u56de\u6587\u81ea\u52a8\u673a\uff1a\n\n\u53ef\u4ee5\u6c42\u51fa\u4e00\u4e2a\u4e32\u4e2d\u6240\u6709\u672c\u8d28\u4e0d\u540c\uff08\u957f\u5f97\u4e0d\u4e00\u6837\u7684\uff09\u56de\u6587\u4e32\u7684 \u6bcf\u4e00\u4e2a\u5bf9\u5e94\u7684\u2460\u957f\u5ea6\u2461\u51fa\u73b0\u6b21\u6570\u2462\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u7ed3\u675f\u4f4d\u7f6e\u7684\u56de\u6587\u4e32\u4e2a\u6570\u2463\u6bcf\u4e00\u4e2a\u4e32\u7684\u6837\u5b50\uff08\u201cabba\u201d\uff09 \u7b49\u7b49 \u8be6\u7ec6\u7684\u518d\u4ee3\u7801\u4e2d\u7ed9\u51fa\u4e86\u6ce8\u91ca\u3002\n\n\u8fd9\u9053\u9898\u518d\u5199\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86MLE\u548cTLE\u7684\u95ee\u9898\n\n\u4e00\u5f00\u59cb\u8d85\u65f6\uff0c\u7136\u540e\u7a7a\u95f4\u6362\u65f6\u95f4\u53c8\u7206\u5185\u5b58\uff0c\u6700\u540e\u5b9e\u5728\u662f\u6ca1\u529e\u6cd5\uff0c\u53ea\u80fd\u6298\u4e2d\u4e00\u4e0b\uff08\u5728\u7ecf\u8fc7\u4e0d\u505c\u7684WA\u4ee5\u540e\u7ec8\u4e8e\u627e\u5230\u4e86\u5e73\u8861\u70b9AC\u8fc7\u4e86\uff09\n\n\u601d\u8def\uff1a\n\n\u7b2c\u4e00\u6b65\uff1a\u7528\u56de\u6587\u81ea\u52a8\u673a\u6c42\u51fa\u7b2c\u4e00\u4e2a\u4e32\u4e2d\u51fa\u73b0\u8fc7\u7684\u56de\u6587\u4e32\u7684\u957f\u5ea6\uff0c\u5e76\u628a\u6bcf\u4e2a\u5bf9\u5e94\u957f\u5ea6\u7684\u8d77\u59cb\u4f4d\u7f6e\u538b\u5165\u5230Vector\u4e2d\uff08\u77e5\u9053\u4e86\u957f\u5ea6\u548c\u8d77\u59cb\u4f4d\u7f6e\u76f8\u5f53\u4e8e\u5c31\u786e\u5b9a\u4e86\u8fd9\u4e2a\u672c\u8d28\u4e0d\u540c\u7684\u56de\u6587\u4e32\uff09\uff0c\u628a\u51fa\u73b0\u8fc7\u7684\u957f\u5ea6\u653e\u5728map\u4e2d\u6807\u8bb0\u4e3a1\n\n\u7b2c\u4e8c\u6b65\uff1a\u518d\u7528\u4e00\u6b21\u56de\u6587\u81ea\u52a8\u673a\u6c42\u51fa\u7b2c\u4e8c\u4e2a\u4e32\u6bcf\u4e00\u4e2a\u56de\u6587\u4e32\u7684\u957f\u5ea6\uff0c\u5982\u679c\u8be5\u957f\u5ea6\u5728\u7b2c\u4e00\u4e2a\u4e32\u4e2d\u51fa\u73b0\u8fc7\uff08\u53camap[len]==1\uff09\u90a3\u4e48\u4e45\u538b\u5165\u53e6\u4e00\u4e2aVector\u4e2d\n\n\u7b2c\u4e09\u6b65\uff1a\u4ece\u5927\u5230\u5c0f\u904d\u5386\u5728\u540c\u65f6\u5728\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a\u56de\u6587\u4e32\u4e2d\u516c\u5171\u51fa\u73b0\u8fc7\u7684\u957f\u5ea6\uff08\u6bd4\u5982\uff1a\u7b2c\u4e00\u4e2a\u4e32\u56de\u6587\u4e32\u957f\u5ea6\u6709 1 3 5\uff0c\u7b2c\u4e8c\u4e2a\u67091 4 5\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u904d\u53865 1\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a4 \u548c 3\u53ea\u51fa\u73b0\u5728\u4e86\u4e00\u4e2a\u4e32\u91cc\u9762\u6240\u4ee5\u80af\u5b9a\u4e0d\u53ef\u80fd\u540c\u65f6\u51fa\u73b0\u5728\u4e24\u4e2a\u4e32\u4e2d\uff09\uff0c\u5982\u679c\u8fd9\u4e2a\u957f\u5ea6\u4e2d\u540c\u65f6\u51fa\u73b0\u7684\u56de\u6587\u4e32\u4e2a\u6570\u4e0d\u4e3a0\uff0c\u5c31\u8f93\u51fa\u7b54\u6848\u5c31 OK \u5566\u3002\u4e0d\u7136\uff0c\u5c31\u7ee7\u7eed\u5f80\u4e0b\u904d\u5386\uff0c\u76f4\u5230\u51fa\u73b0\u4e86\u56de\u6587\u4e32\u4e2a\u6570\u4e0d\u4e3a0\u7684\u957f\u5ea6\u4e3a\u6b62\u3002\u5982\u679c\u904d\u5386\u5b8c\u6240\u6709\u7684\u90fd\u4e0d\u5b58\u5728\uff0c\u5c31\u8f93\u51fa 0 0 \u5c31\u7ed3\u675f\u4e86\n\nAC\u4ee3\u7801\uff1a\n\n```c\n// \u5c0f\u732a\u54c8\u5947\n//\u56e0\u4e3a\u5f88\u5bb9\u6613\u8d85\u5185\u5b58\u548c\u65f6\u95f4\u6240\u4ee5\u6211\u628a\u56de\u6587\u81ea\u52a8\u673a\u4e2d\u7528\u4e0d\u5230\u7684\u53d8\u91cf\u5168\u90fd\u6ce8\u91ca\u6389\u4e86\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int N = 3e5 + 10;\nchar s[N],s1[N];\nint maxx[N],flag,maxx2; //record\u8bb0\u5f55\u4e86\u8282\u70b9\u56de\u6587\u4e32\u7684\u7ed3\u675f\u4f4d\u7f6e\nvector <int> v[2][260820];\nstruct Palindrome_tree{\n\tint nxt[N][26];\n\tint fail[N]; // \u5f53\u524d\u8282\u70b9\u6700\u957f\u56de\u6587\u540e\u7f00\u7684\u8282\u70b9\n\tint len[N]; // \u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u56de\u6587\u4e32\u7684\u957f\u5ea6\n//\tint cnt[N]; // \u5f53\u524d\u8282\u70b9\u56de\u6587\u4e32\u7684\u4e2a\u6570\uff0c \u5728getcnt\u540e\u53ef\u5f97\u5230\u5168\u90e8\n//\tint sed[N]; // \u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u540e\u7f00\u7684\u56de\u6587\u4e32\u7684\u4e2a\u6570\uff08\u8868\u793a\u4ee5i\u7ed3\u5c3e\u7684\u56de\u6587\u4e32\u7684\u79cd\u7c7b\u6570\uff09\n\tint tot; // \u8282\u70b9\u4e2a\u6570\n\tint last; // \u4e0a\u4e00\u4e2a\u8282\u70b9\n\tint record[N];\n\tvoid init()\n\t{\n\t\ttot = 0;\n\t\tmemset(fail, 0, sizeof fail);\n//\t\tmemset(cnt, 0, sizeof cnt);\n//\t\tmemset(sed, 0, sizeof sed);\n\t\tmemset(len, 0, sizeof len);\n\t\tmemset(nxt, 0, sizeof nxt);\n\t}\n\tvoid build()\n\t{\n\t\tlen[0] = 0, len[1] = -1; // 0\u4e3a\u5076\u6570\u957f\u5ea6\u6839\uff0c 1\u4e3a\u5947\u6570\u957f\u5ea6\u6839\n\t\ttot = 1, last = 0;\n\t\tfail[0] = 1;\n\t}\n\tint getfail(char *s, int x, int n)\n\t{\n\t\twhile (s[n - len[x] - 1] != s[n]) // \u6bd4\u8f83x\u8282\u70b9\u56de\u6587\u4e32\u65b0\u5efa\u4e24\u7aef\u662f\u5426\u76f8\u7b49\n\t\t\tx = fail[x]; // \u82e5\u4e0d\u540c\uff0c \u518d\u6bd4\u8f83x\u540e\u7f00\u56de\u6587\u4e32\u4e24\u7aef\n\t\treturn x;\n\t}\n\tvoid insert(char* s, int n)\n\t{\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tint c = s[i] - 'a';\n\t\t\tint p = getfail(s, last, i);// \u5f97\u5230\u7b2ci\u4e2a\u5b57\u7b26\u53ef\u4ee5\u52a0\u5230\u54ea\u4e2a\u8282\u70b9\u7684\u4e24\u7aef\u5f62\u6210\u56de\u6587\u4e32\n\t\t\tif (!nxt[p][c])\n\t\t\t{\n\t\t\t\ttot++;\n\t\t\t\tlen[tot] = len[p] + 2;  // \u5728p\u8282\u70b9\u4e24\u7aef\u6dfb\u52a0\u4e24\u4e2a\u5b57\u7b26\n\t\t\t\tfail[tot] = nxt[getfail(s, fail[p], i)][c]; //tot\u70b9\u7684\u540e\u7f00\u56de\u6587\uff0c\u53ef\u4ee5\u7531\u4e0a\u4e00\u4e2a\u8282\u70b9\u7684\u540e\u7f00\u56de\u6587\u5c1d\u8bd5\u5f97\u5230\n//\t\t\t\tsed[tot] = sed[fail[tot]] + 1; // \u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u7ed3\u5c3e\u7684\u56de\u6587\u4e32\u4e2a\u6570\n\t\t\t\tnxt[p][c] = tot; // \u65b0\u5efa\u8282\u70b9\n\t\t\t}\n\t\t\tlast = nxt[p][c]; // \u5f53\u524d\u8282\u70b9\u6210\u4e3a\u4e0a\u4e00\u4e2a\u8282\u70b9\n//\t\t\tcnt[last]++; //\u5f53\u524d\u8282\u70b9\u56de\u6587\u4e32++\n\t\t\trecord[last] = i;\n\t\t}\n\t}\n//\tvoid get_cnt()\n//\t{\n//\t\tfor (int i = tot; i > 0; i--)\n//\t\t\tcnt[fail[i]] += cnt[i];\n//\t\t//fail[i] \u7684\u8282\u70b9 \u4e3a i \u8282\u70b9\u7684\u540e\u7f00\u56de\u6587\u4e32\uff0c \u6240\u4ee5\u4e2a\u6570\u76f8\u52a0\n//\t}\n}pdt,pdt1;\n map <string,int> mapp;\n map <int,int> mapp1,mapp2;\n string a;\n int sum;\n bool cmp1(int s1,int s2)\n{\n        return s1>s2;\n}\nint main()\n{\n    int n,n1;\n    cin>>n>>n1;\n\tscanf(\"%s\",s);\n\tscanf(\"%s\",s1);\n\tpdt.build();\n\tpdt.insert(s, n);//\u5728\u5efa\u56de\u6587\u6811\n    pdt1.build();\n\tpdt1.insert(s1,n1);//\u5728\u5efa\u56de\u6587\u6811\n    for(int i=2;i<=pdt.tot;i++)\n    {\n        mapp1[pdt.len[i]]=1;\n    }\n    for(int i=2;i<=pdt1.tot;i++)\n    {\n        if(mapp1[pdt1.len[i]]==1&&mapp2[pdt1.len[i]]==0)\n            {maxx[++flag]=pdt1.len[i];\n            mapp2[pdt1.len[i]]=1;\n            }\n            if(mapp2[pdt1.len[i]]==1)\n            v[1][pdt1.len[i]].push_back(i);\n    }\n      for(int i=2;i<=pdt.tot;i++)\n    {\n       if(mapp2[pdt.len[i]]==1)\n            v[0][pdt.len[i]].push_back(i);\n    }\n    sort(maxx,maxx+flag+1,cmp1);\n\n    for(int k=0;k<=flag;k++)\n    {\n        maxx2=maxx[k];\n        //cout<<\"max:\"<<maxx2<<endl;\n        for (int i=0; i<v[0][maxx2].size(); i++) //\u7b2c\u4e00\u4e2a\u662f\u65e0\u6548\u7684 \u4ece\u7b2c\u4e8c\u4e2a\u5f00\u59cb\u662f\u6709\u6548\u7684\u56de\u6587\u4e32\n        {\n            int     j=v[0][maxx2][i];\n//            if(pdt.len[i]>maxx2)\n//                continue;\n            int R = pdt.record[j]; //record\u8bb0\u5f55\u4e86\u7b2ci\u4e2a\u7c7b\u578b\u7684\u56de\u6587\u4e32\u7684\u7ed3\u675f\u4f4d\u7f6e\n            int L = pdt.record[j] - pdt.len[j] + 1;\n            a=\"\";\n            for(int i=L;i<=R;i++)\n                a+=s[i];\n          // cout<<a<<endl;\n            mapp[a]=1;\n        }\n        for ( int i=0; i<v[1][maxx2].size(); i++)\n        {\n            int   j=v[1][maxx2][i];\n            int R = pdt1.record[j]; //record\u8bb0\u5f55\u4e86\u7b2ci\u4e2a\u7c7b\u578b\u7684\u56de\u6587\u4e32\u7684\u7ed3\u675f\u4f4d\u7f6e\n            int L = pdt1.record[j] - pdt1.len[j] + 1;\n            a=\"\";\n            for(int i=L;i<=R;i++)\n                a+=s1[i];\n             //   cout<<\"a1:\"<<a<<endl;\n            if(mapp[a]==1)\n                sum++;\n        }\n\n\n    if(sum!=0)\n        {\n                cout<<maxx2<<\" \"<<sum<<endl;\n                return 0;\n        }\n        if(k%3==1)\n        mapp.clear();\n    }\n\tcout<<0<<\" \"<<0<<endl;\n\treturn 0;\n}\n\n```\n\n\n\n",
        "postTime": 1569333624,
        "uid": 133364,
        "name": "xiayucc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5555 \u3010\u79e9\u5e8f\u9b54\u5492\u3011"
    },
    {
        "content": "\u8003\u8651\u7c7b\u4f3c\u4e8e SAM \u6c42\u4e24\u4e32\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u505a\u6cd5\uff0c\u5bf9 $S$ \u4e32\u6784\u9020\u56de\u6587\u81ea\u52a8\u673a\uff0c\u5bf9\u4e8e $T$ \u4e32\u7684\u6bcf\u4e2a\u524d\u7f00 $P_{i}$\uff0c\u6c42\u51fa\u5176\u6700\u957f\u7684\u540e\u7f00 $suf$ \u6ee1\u8db3 $suf$ \u662f\u4e00\u4e2a\u56de\u6587\u4e32\u5e76\u4e14\u662f $S$ \u4e32\u7684\u4e00\u4e2a\u5b50\u4e32\u3002\n\n\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e $PAM$ \u4e0a\u7684\u4e00\u6761\u8f6c\u79fb\u8fb9\u76f8\u5f53\u4e8e\u5728\u9996\u5c3e\u5404\u52a0\u4e00\u4e2a\u5b57\u7b26\uff0c\u7531 $P_{i}$ \u8f6c\u79fb\u5230 $P_{i+1}$ \u7684\u65f6\u5019\u8981\u6ce8\u610f\u5224\u65ad\u5339\u914d\u957f\u5ea6\u4e0d\u80fd\u5927\u4e8e $P_{i+1}$ \u7684\u957f\u5ea6\uff0c\u5e76\u4e14\u8981\u6ee1\u8db3 $T[i+1] = T[i-len]$\uff0c\u5373\u65b0\u7684\u56de\u6587\u4e32\u662f $T$ \u7684\u4e00\u4e2a\u5b50\u4e32\u3002\n\n\u5339\u914d\u90e8\u5206\u6838\u5fc3\u4ee3\u7801\uff1a\n```cpp\nint L=-1,cur=root1; t[0]='#';\nfor(int i=1;i<=m;i++)\n{   \n    int c=t[i]-'a';\n    while(cur!=root1&&((!nx[cur][c])||L+2>i||t[i]!=t[i-L-1]))\n        cur=fail[cur],L=len[cur];\n    if(nx[cur][c]&&L+2<=i&&t[i]==t[i-L-1])cur=nx[cur][c],L+=2;\n    mx=max(mx,L),match[cur]=1;\n}\n```\n\n\u540c\u65f6\u63d0\u4f9b\u4e00\u7ec4\u6837\u4f8b\u4f9b\u8c03\u8bd5\uff1a\n\n```\n8 5\naabaabab\naabaa\n```\n\n\u5728 $T$ \u4e32\u6bcf\u4e2a\u524d\u7f00\u4e0a\u7684\u5339\u914d\u957f\u5ea6\u5e94\u8be5\u4e3a\uff1a\n\n```\ni = 1, L = 1\ni = 2, L = 2\ni = 3, L = 1\ni = 4, L = 3\ni = 5, L = 5\n5 1\n```\n\n\u5373 $i=3$ \u7684\u65f6\u5019\u4e0d\u80fd\u7531 $a$ \u5728\u4e24\u8fb9\u52a0 $b$ \u5f97\u5230 $bab$\uff0c\u56e0\u4e3a $bab$ \u5b9e\u9645\u4e0d\u5b58\u5728\u4e8e $T$ \u4e32\u4e2d\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\nconst int K = 26;\nint cnt,root1,root2,last=0;\nint nx[MAXN*2][K],len[MAXN*2],fail[MAXN*2],sum[MAXN*2];\nstring str;\nvoid newnode(int &x)\n{\n    x=++cnt;\n    fp(i,0,K-1) nx[x][i]=0;\n    len[x]=fail[x]=0;\n}\nvoid init()\n{\n    cnt=0,str.clear(),str.pb('$');\n    newnode(root1),len[root1]=-1;\n    newnode(root2),len[root2]= 0;\n    fail[root2]=root1,last=root1;\n}\nvoid extend(int pos)\n{\n    int c=str[pos]-'a',p=last,np;\n    while(str[pos-len[p]-1]!=str[pos]) p=fail[p];\n    if(nx[p][c]) np=nx[p][c];\n    else\n    {\n        newnode(np);\n        nx[p][c]=np;\n        len[np]=len[p]+2;\n        if(p==root1) fail[np]=root2;\n        else\n        {\n            p=fail[p];\n            while(str[pos-len[p]-1]!=str[pos]) p=fail[p];\n            fail[np]=nx[p][c];\n        }\n    }\n    last=np,sum[last]++;\n}\nvoid build(char s[])\n{\n    int n=strlen(s+1);\n    fp(i,1,n) str.pb(s[i]),extend(i);\n}\n\nint n,m;\nchar s[MAXN],t[MAXN];\nint mx=0,ans=0;\nint match[MAXN*2];\nint work()\n{\n    scanf(\"%d%d\",&n,&m);\n    scanf(\"%s\",s+1),scanf(\"%s\",t+1);\n    init(),build(s);\n    int L=-1,cur=root1; t[0]='#';\n    for(int i=1;i<=m;i++)\n    {   \n        int c=t[i]-'a';\n        while(cur!=root1&&((!nx[cur][c])||L+2>i||t[i]!=t[i-L-1]))\n            cur=fail[cur],L=len[cur];\n        if(nx[cur][c]&&L+2<=i&&t[i]==t[i-L-1])cur=nx[cur][c],L+=2;\n        mx=max(mx,L),match[cur]=1;\n    }\n    ans=0;\n    fp(i,1,cnt)\n        if(match[i]&&len[i]==mx)\n            ans++;\n    return printf(\"%d %d\\n\",mx,ans);\n}\n```\n\n",
        "postTime": 1602731843,
        "uid": 9467,
        "name": "bakapiano",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5555 \u3010\u79e9\u5e8f\u9b54\u5492\u3011"
    }
]