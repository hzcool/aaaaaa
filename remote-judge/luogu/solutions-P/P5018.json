[
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u6ca1\u770b\u5230hash\u7684\u505a\u6cd5...\n\n\u663e\u7136\u53ef\u4ee5\u76f4\u63a5hash\u6811\u7684\u5f62\u6001\uff0c\u5373\u5206\u4e2d\u5e8f\u904d\u53861(\u5148\u8fdb\u5de6\u5b50\u6811)\u548c\u4e2d\u5e8f\u904d\u53862(\u5148\u8fdb\u53f3\u5b50\u6811)\u8bb0\u5f55hash\u503c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u82e5\u662f\u6b64\u8282\u70b9\u7684\u5de6\u513f\u5b50\u7684\u4e2d\u5e8f\u904d\u53861\u7684hash\u503c\u7b49\u4e8e\u53f3\u513f\u5b50\u7684\u4e2d\u7eed\u904d\u53862\u7684hash\u503c\uff0c\u8bf4\u660e\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u6811\u662f\u5bf9\u79f0\u7684\n\n\u590d\u6742\u5ea6O(n)\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<vector>\n#include<map>\nusing namespace std;\n#define llg long long\n#define maxn 1000100\n#define V1 (llg)(999999751) \n#define V2 (llg)(299999827) \n#define V3 (llg)(100000007)\n#define md (llg)(89999794200117649)\n#define mdd (llg)(999999786000011449)\n#define yyj(a) freopen(a\".in\",\"r\",stdin),freopen(a\".out\",\"w\",stdout);\n\ninline llg getint()\n{\n    llg w=0,q=0; char c=getchar();\n    while((c<'0' || c>'9') && c!='-') c=getchar();\n    if (c=='-')  q=1, c=getchar(); while (c>='0' && c<='9') w=w*10+c-'0', c=getchar();\n    return q ? -w : w;\n}\n\nunsigned long long hal[maxn],har[maxn],Har[maxn],Hal[maxn];\nllg val[maxn],n,ans,he[maxn],lson[maxn],rson[maxn];\n\nvoid dfs(llg x,llg fa)\n{\n\tif (lson[x]) dfs(lson[x],x);\n\tif (rson[x]) dfs(rson[x],x);\n\the[x]=he[lson[x]]+he[rson[x]]+1;\n\tif (he[lson[x]]==he[rson[x]] && hal[lson[x]]==har[rson[x]] &&  Hal[lson[x]]==Har[rson[x]])\n\t\t{\n\t\t\tans=max(ans,he[x]);\n\t\t}\n\thal[x]=hal[lson[x]]*V1+val[x]*V2+hal[rson[x]]*V3;\n\tHal[x]=Hal[lson[x]]*V1+val[x]*V2+Hal[rson[x]]*V3;\n\thal[x]%=md;\n\tHal[x]%=mdd;\n\thar[x]=har[rson[x]]*V1+val[x]*V2+har[lson[x]]*V3;\n\tHar[x]=Har[rson[x]]*V1+val[x]*V2+Har[lson[x]]*V3;\n\thar[x]%=md;\n\tHar[x]%=mdd;\n}\n\nint main()\n{\n\tyyj(\"D\");\n\tcin>>n;\n\tfor (llg i=1;i<=n;i++) val[i]=getint();\n\tfor (llg i=1;i<=n;i++)\n\t\t{\n\t\t\tllg x=getint(),y=getint();\n\t\t\tif (x!=-1) lson[i]=x;\n\t\t\tif (y!=-1) rson[i]=y;\n\t\t}\n\tdfs(1,-1);\n\tcout<<ans;\n\treturn 0;\n}\n\n```\n\n------------\n",
        "postTime": 1542373006,
        "uid": 29933,
        "name": "xrdog_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "## 19\u884c\u641e\u5b9anoipT4!\n\u8003\u573a\u88abT3\u641e\u5230\u76f4\u63a5\u8f93\u4e86\u6837\u4f8b\u3002\u73b0\u5728\u518d\u4e00\u770b\u5176\u5b9e\u633a\u7b80\u5355\u7684\u3002\n\n\u7b2c\u4e00\u611f\u662f\u641e\u955c\u50cf\u3002\u4f46\u5176\u5b9e\u53ea\u8981\u679a\u4e3e\u6bcf\u68f5\u5b50\u6811\uff0c\u5224\u65ad\u9012\u5f52\u7684\u5224\u65ad\u5de6\u53f3\u5b50\u6811\u5206\u522b\u76f8\u7b49\u3002\u76f8\u7b49\u5c31\u8bb0\u6570\uff0c\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u5177\u4f53\u8fc7\u7a0b\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{long long l,r,val;}bt[1000002];\nbool same(long long now1,long long now2){//\u5224\u65ad\u662f\u5426\u5bf9\u79f0\n\tif(now1==-1&&now2==-1) return true;\n\tif(now2==-1||now1==-1) return false;//\u5c0f\u6280\u5de7\n\tif(bt[now1].val!=bt[now2].val) return false;\n\treturn same(bt[now1].l,bt[now2].r)&&same(bt[now1].r,bt[now2].l);//\u9012\u5f52\u7684\u5224\u65ad\u5de6\u53f3\u5b50\u6811\u76f8\u7b49\n}\nint count(long long now){//\u9012\u5f52\u7684\u5bf9\u5de6\u53f3\u5b50\u6811\u8ba1\u6570\n\treturn now==-1?0:count(bt[now].l)+count(bt[now].r)+1;\n}\nint main(){\n\tint n,ans=0;cin>>n;\n\tfor(int i=1;i<=n;i++) cin>>bt[i].val;\n\tfor(int i=1;i<=n;i++) cin>>bt[i].l>>bt[i].r;\n\tfor(int i=1;i<=n;i++)/*\u679a\u4e3e\u6bcf\u68f5\u5b50\u6811*/ if(same(i,i)) ans=max(ans,count(i));\n\treturn 0&printf(\"%d\",ans);\n}\n```\n",
        "postTime": 1555415016,
        "uid": 98096,
        "name": "Smallbasic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u770b\u8fc7\u4e00\u5806\u5927\u4f6c\u89e3\u6cd5\uff0c\u4ed4\u7ec6\u60f3\u60f3\uff0c\u54ea\u6709\u90a3\u4e48\u9ebb\u70e6\uff0c\u4e00\u4e2a\u9012\u5f52\u53ef\u4ee5\u89e3\u51b3\u7684\u4e8b\u3002\n\n\u57fa\u672c\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\n\n1.\u4ee5\u4e8c\u53c9\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e3a\u6839\u8282\u70b9\uff0c\u5bfb\u627e\u5bf9\u79f0\u4e8c\u53c9\u6811\u3002\n\n2.\u5c06\u627e\u5230\u7684\u4e8c\u53c9\u6811\u7edf\u8ba1\u8282\u70b9\u6570\u3002\n\n3.\u6bd4\u8f83\u6700\u5927\u7684\u8282\u70b9\u6570\u3002\n\n\u5c31\u8fd9\u4e09\u6b65\u7136\u540e\u5c31\u5b8c\u4e8b\u4e86\uff0c\u5177\u4f53\u6309\u65b9\u6cd5\u89c1\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint l[1000001],r[1000001],m,a[1000001],ans=1;\n//\u7528l\u6570\u7ec4\u5b58\u5de6\u5b69\u5b50 r\u6570\u7ec4\u5b58\u53f3\u5b69\u5b50 a\u4e3a\u6743\u503c m\u4e3a\u603b\u7ed3\u70b9\u6570 ans\u4e3a\u7ed3\u679c \nbool f;\n//\u7528f\u6807\u8bb0\u7ed3\u6784\u662f\u5426\u5bf9\u79f0 \nint dfs(int x,int y,int s)\n//\u8fd9\u662f\u4e2a\u627e\u5bf9\u79f0\u4e8c\u53c9\u6811\u7684\u51fd\u6570 s\u4ee3\u8868\u8282\u70b9\u6570 x,y\u4e3a\u6b63\u5728\u8bbf\u95ee\u7684\u8282\u70b9\u6807\u53f7 \n{\n    if(x==-1&&y==-1) return 0;//\u5224\u65ad\u662f\u5426\u6709\u8282\u70b9 \n    if(x==-1||y==-1&&x!=y)\n    {\n        f=1;\n        return 0;\n    } \n    //\u5224\u65ad\u7ed3\u6784\u662f\u5426\u5bf9\u79f0 \n    if(a[x]!=a[y])\n    {\n        f=1;\n        return 0;\n    }\n    //\u5224\u65ad\u6743\u503c\u662f\u5426\u5bf9\u79f0 \uff0c\u5e76\u6807\u8bb0 \n    return dfs(l[x],r[y],2)+dfs(r[x],l[y],2)+s;\n    //\u7ee7\u7eed\u5f80\u4e0b\u4ee5\u5bf9\u79f0\u7684\u5f62\u5f0f\u9012\u5f52\uff1a\u8fd4\u56de\u503c\u4e3a\u4e0b\u9762\u7684\u8282\u70b9\u6570\u52a0\u4e0a\u4e0a\u9762\u7684\u8282\u70b9\u6570 \n}\nint read()\n{\n    char s;\n    int x=0,f=1;\n    s=getchar();\n    while(s<'0'||s>'9')\n    {\n        if(s=='-') f=-1;\n        s=getchar();\n    }\n    while(s>='0'&&s<='9')\n    {\n        x=(x<<3)+(x<<1)+s-'0';\n        s=getchar();\n    }\n    return x*f;\n}//\u6709\u4eba\u8bf4cin\u4f1a\u8d85\u65f6\uff0c\u6211\u7528\u4e2a\u5feb\u8bfb\uff08\u4e0d\u8981\u5728\u610f\uff0cscanf\u4e5f\u53ef\u4ee5\uff09 \nint main()\n{\n    m=read();//\u8f93\u5165\u8282\u70b9\u6570 \n    for(int i=1;i<=m;i++) a[i]=read();//\u8f93\u5165\u6743\u503c \n    for(int i=1;i<=m;i++)\n    {\n        l[i]=read();\n        r[i]=read();\n    }//\u8f93\u5165\u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\u6807\u53f7 \n    for(int i=1;i<=m;i++) \n    {\n        int s=dfs(l[i],r[i],3);\n        //\u6ce8\u610f\uff1a\u8fd9\u91cc\u56e0\u4e3a\u662f\u76f4\u63a5\u4ece\u8bbf\u95ee\u7684\u8282\u70b9\u7684\u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\u5f00\u59cb\u8bbf\u95ee\u6240\u4ee5\u521d\u59cb\u8282\u70b9\u4e3a\u4e09\u4e2a \n        if(s>ans&&f==0) ans=s;\n        f=0;\n        //\u7136\u540e\u5c31\u662f\u5224\u65ad\u5927\u5c0f\u548c\u64e6\u9664\u6807\u8bb0 \n    }\n    cout<<ans;//\u6700\u540e\u518d\u6765\u4e2a\u8f93\u51fa\uff0c\u5c31\u5b8c\u4e8b\u5566 \n    return 0;\n}\n```\n\u89e3\u91ca\u90fd\u653e\u5728\u4ee3\u7801\u4e2d\u5566\uff0c\u8fd8\u6709\u4ec0\u4e48\u4e0d\u61c2\u7684\u53ef\u4ee5\u6765\u95ee",
        "postTime": 1542031501,
        "uid": 78390,
        "name": "\u6ca7\u6d77\u6620\u7e41\u661f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u5e7f\u544a\uff1a\u98df\u7528[$blog$](https://www.cnblogs.com/heyujun/p/9991305.html)\u4f53\u9a8c\u66f4\u4f73\n\n\u770b\u5230\u8fd9\u4e00\u9898\u5168\u90fd\u662f\u7528$O(nlogn)$\u7684\u7b97\u6cd5\u8fc7\u7684\n\n\u8003\u573a\u4e0a\u5199$O(n)$\u7b97\u6cd5\u7684\u6211\u5f88\u4e0d\u5f00\u5fc3\n\n\u7136\u540e\u5c31\u53d1\u4e86\u6b64\u7bc7\u9898\u89e3\u3002\u3002\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u50cf\u6811\u4e0a\u83ab\u961f\u4e00\u6837\u6309\u7167 \u5de6-\u53f3-\u6839 \u7684\u987a\u5e8f\u5c06\u8fd9\u68f5\u6811\u7684\u6b27\u62c9\u5e8f\u8dd1\u4e0b\u6765\uff0c\n\u8bb0\u4e0b\u5f00\u59cb\u8bbf\u95ee\u70b9$x$\u7684$dfs$\u5e8f$L[x]$\uff0c\u548c\u56de\u6eaf\u65f6\u7684$dfs$\u5e8f$R[x]$\n\n\u518d\u5c06\u8bb0\u5f55\u6b27\u62c9\u5e8f\u7684\u6570\u7ec4\u8bb0\u4e3a$P$\n```cpp\nvoid dfs(int x) { \n    P[L[x] = ++cnt] = x; \n    if (t[x].ch[0]) dfs(t[x].ch[0]); \n    if (t[x].ch[1]) dfs(t[x].ch[1]); \n    P[R[x] = ++cnt] = x; \n\tt[x].size = t[t[x].ch[0]].size + t[t[x].ch[1]].size + 1; \n} \n```\n\u7edf\u8ba1\u51fa\u6570\u7ec4$P$\u7684\u4e24\u4e2a\u54c8\u5e0c\u503c\uff0c\u4e00\u4e2a\u662f\u8bb0\u5f55\u70b9\u6743($hs1[0][x]$)\uff0c\n\n\u53e6\u4e00\u4e2a\u662f\u8bb0\u5f55\u5f53\u524d\u70b9\u662f\u5de6\u513f\u5b50\u8fd8\u662f\u53f3\u513f\u5b50($hs2[0][x]$)\n```cpp\nfor (int i = 1; i <= cnt; i++) hs1[0][i] = hs1[0][i - 1] * base + t[P[i]].v; \nfor (int i = 1; i <= cnt; i++) hs2[0][i] = hs2[0][i - 1] * base + get(P[i]); \n```\n\u518d\u5c06\u8fd9\u68f5\u6811\u6309\u7167 \u53f3-\u5de6-\u6839 \u7684\u987a\u5e8f\u5c06\u8fd9\u68f5\u6811\u7684\u53e6\u4e00\u4e2a\u6b27\u62c9\u5e8f\u8dd1\u4e0b\u6765(\u8bb0\u5f97\u6e05\u7a7a)\uff0c\n\n\u8bb0\u4e0b\u5f00\u59cb\u8bbf\u95ee\u70b9$x$\u7684$dfs$\u5e8f$rL[x]$\uff0c\u548c\u56de\u6eaf\u65f6\u7684$dfs$\u5e8f$rR[x]$\n```cpp\nvoid rdfs(int x) { \n    P[rL[x] = ++cnt] = x; \n    if (t[x].ch[1]) rdfs(t[x].ch[1]); \n    if (t[x].ch[0]) rdfs(t[x].ch[0]); \n    P[rR[x] = ++cnt] = x; \n}\n```\n\u518d\u8bb0\u5f55\u4e00\u6b21\u7edf\u8ba1\u51fa\u6570\u7ec4$P$\u7684\u4e24\u4e2a\u54c8\u5e0c\u503c\uff0c\n\n\u4e00\u4e2a\u662f\u8bb0\u5f55\u70b9\u6743($hs1[1][x]$)\uff0c\n\n\u53e6\u4e00\u4e2a\u662f\u8bb0\u5f55\u5f53\u524d\u70b9\u662f\u5de6\u513f\u5b50\u8fd8\u662f\u53f3\u513f\u5b50($hs2[1][x]$)(\u8fd9\u65f6\u5019\u8981\u53d6\u5f02\u6216\u4e00\u4e0b)\n```cpp\n    for (int i = 1; i <= cnt; i++) hs1[1][i] = hs1[1][i - 1] * base + t[P[i]].v; \n    for (int i = 1; i <= cnt; i++) hs2[1][i] = hs2[1][i - 1] * base + (get(P[i]) ^ 1); \n```\n\u5176\u4e2d$get$\u51fd\u6570\uff1a\n```cpp \ninline int get(int x) { return t[t[x].fa].ch[1] == x; } \n```\n\u7136\u540e\u6211\u4eec\u8981\u600e\u4e48\u5224\u65ad\u5462\uff1f\n\u5148\u5224\u65ad\u5de6\u53f3\u513f\u5b50$ls$\u548c$rs$\u7684$size$\u662f\u5426\u76f8\u7b49\n\n\u7136\u540e\u518d\u5224\u65ad\u7b2c\u4e00\u904d$dfs$\u5de6\u513f\u5b50\u6240\u8986\u76d6\u7684\u6b27\u62c9\u5e8f\u5185\u548c\n\n\u7b2c\u4e8c\u904d$dfs$\u53f3\u513f\u5b50\u6240\u8986\u76d6\u7684\u6b27\u62c9\u5e8f\u5185\u4e24\u4e2a\u54c8\u5e0c\u503c\u76f8\u4e0d\u76f8\u7b49\u5373\u53ef\n```cpp\nif (getHash(hs1[0], L[ls], R[ls]) != getHash(hs1[1], rL[rs], rR[rs])) continue; \nif (getHash(hs2[0], L[ls], R[ls]) != getHash(hs2[1], rL[rs], rR[rs])) continue; \n```\n~~\u7136\u800c\u5e38\u6570\u8fc7\u5927\uff0c\u901f\u5ea6\u88abnlogn\u540a\u6253~~\n\n\u5b8c\u6574\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\nnamespace IO { \n    const int BUFSIZE = 1 << 20; \n    char ibuf[BUFSIZE], *is = ibuf, *it = ibuf; \n    inline char gc() { \n        if (is == it) it = (is = ibuf) + fread(ibuf, 1, BUFSIZE, stdin); \n        return *is++; \n    } \n} \ninline int gi() {\n    register int data = 0, w = 1;\n    register char ch = 0;\n    while (ch != '-' && (ch > '9' || ch < '0')) ch = IO::gc();\n    if (ch == '-') w = -1 , ch = IO::gc();\n    while (ch >= '0' && ch <= '9') data = data * 10 + (ch ^ 48), ch = IO::gc();\n    return w * data;\n} \n#define MAX_N 1000005 \nstruct Node { int ch[2], fa, size, v; } t[MAX_N]; \ninline int get(int x) { return t[t[x].fa].ch[1] == x; } \ntypedef unsigned long long ull; \nconst ull base = 100007; \null pw[MAX_N << 1]; \null hs1[2][MAX_N << 1], hs2[2][MAX_N << 1]; \null getHash(ull *hs, int l, int r) { return hs[r] - hs[l - 1] * pw[r - l + 1]; } \nint N, L[MAX_N], R[MAX_N], rL[MAX_N], rR[MAX_N], P[MAX_N << 1], cnt; \nvoid dfs(int x) { \n    P[L[x] = ++cnt] = x; \n    if (t[x].ch[0]) dfs(t[x].ch[0]); \n    if (t[x].ch[1]) dfs(t[x].ch[1]); \n    P[R[x] = ++cnt] = x; \n    t[x].size = t[t[x].ch[0]].size + t[t[x].ch[1]].size + 1; \n} \nvoid rdfs(int x) { \n    P[rL[x] = ++cnt] = x; \n    if (t[x].ch[1]) rdfs(t[x].ch[1]); \n    if (t[x].ch[0]) rdfs(t[x].ch[0]); \n    P[rR[x] = ++cnt] = x; \n} \nint main () { \n    N = gi(); pw[0] = 1; \n    for (int i = 1; i <= 2 * N; i++) pw[i] = pw[i - 1] * base; \n    for (int i = 1; i <= N; i++) t[i].v = gi(); \n    for (int x = 1; x <= N; x++) { \n        int ls = gi(), rs = gi(); \n        if (ls != -1) t[x].ch[0] = ls, t[ls].fa = x; \n        if (rs != -1) t[x].ch[1] = rs, t[rs].fa = x; \n    } \n    dfs(1); \n    for (int i = 1; i <= cnt; i++) hs1[0][i] = hs1[0][i - 1] * base + t[P[i]].v; \n    for (int i = 1; i <= cnt; i++) hs2[0][i] = hs2[0][i - 1] * base + get(P[i]); \n    cnt = 0; rdfs(1); \n    for (int i = 1; i <= cnt; i++) hs1[1][i] = hs1[1][i - 1] * base + t[P[i]].v; \n    for (int i = 1; i <= cnt; i++) hs2[1][i] = hs2[1][i - 1] * base + (get(P[i]) ^ 1); \n    int ans = 1; \n    for (int x = 1; x <= N; x++) { \n        int ls = t[x].ch[0], rs = t[x].ch[1]; \n        if (t[ls].size != t[rs].size) continue; \n        if (getHash(hs1[0], L[ls], R[ls]) != getHash(hs1[1], rL[rs], rR[rs])) continue; \n        if (getHash(hs2[0], L[ls], R[ls]) != getHash(hs2[1], rL[rs], rR[rs])) continue; \n        ans = max(ans, t[x].size); \n    } \n    printf(\"%d\\n\", ans); \n    return 0; \n} \n```",
        "postTime": 1542716867,
        "uid": 42506,
        "name": "\u4f55\u4fde\u5747",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "### \u8fd9\u662fGD\u521d\u4e8c\u849f\u84bb $lolte$ \u7684\u9898\u89e3\n\n\u4eca\u5e74\u9898\u76ee\u987a\u5e8f\u6709\u6bd2\u554a\uff0c\u5199\u4e862.5h+\u7684T3\uff0c\u5c31\u770b\u4e86\u4e00\u4f1aT4\uff0c\u4ee5\u4e3a\u6bd4T3\u8fd8\u96be\uff0c\u56e0\u4e3a\u611f\u89c9\u5199\u4e0d\u51fa\u4ec0\u4e48\u4f18\u5316\u554a\uff08\u5b9e\u9645\u4e0a\u4e5f\u4e0d\u7528\uff09\uff0c\u5c31\u653e\u5f03\u4e86T4\uff0c\u7ed3\u679c\u6302\u5728T3\u4e0a\u4e86o(\u2565\ufe4f\u2565)o\u3002\n\n**\u8f6c\u56de\u6b63\u9898**\n\n\u8ba9\u6211\u4eec\u601d\u8003\u4e00\u4e0b\u6ee1\u8db3\u5bf9\u79f0\u4e8c\u53c9\u6811\u7684\u6761\u4ef6\uff1a\n\n1. \u7ed3\u6784\u76f8\u540c\uff0c\u4e5f\u5c31\u662f\u5de6\u53f3\u7684-1\uff08\u7a7a\u8282\u70b9\uff09\u548c\u5176\u4ed6\u8282\u70b9\u7684\u4f4d\u7f6e\u5bf9\u79f0\u3002\n2. \u6743\u503c\u76f8\u540c\uff0c\u5c31\u662f\u975e\u7a7a\u8282\u70b9\u7684\u6743\u503c\u4e00\u6837\u3002\n\n\u679c\u65ad**\u66b4\u529b**\u3002\n\n1. \u7528ans\u8bb0\u5f55\u6700\u5927\u7b54\u6848\uff0cnans\u8bb0\u5f55\u5f53\u524d\u7b54\u6848\u3002\n2. \u679a\u4e3e\u6bcf\u4e2a\u8282\u70b9\u5de6\u53f3\u513f\u5b50\u662f\u5426\u76f8\u7b49\u3002\u6b64\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u5de6\u53f3\u513f\u5b50\u5e26\u6709-1\u7684\u70b9\u3002\n3. \u5bf9\u6ee1\u8db3\uff082\uff09\u7684\u70b9\u8fdb\u884c\u62d3\u5c55\uff0c\u540c(2)\u6b65\u9aa4\u5224\u65ad\u6bcf\u4e2a\u5de6\u53f3\u8282\u70b9\u662f\u5426\u7b26\u5408\u7ed3\u6784&\u6743\u503c\u76f8\u7b49\u3002\n4. \u5982\u7b26\u5408\uff0c**nans+=2** ;\u5426\u5219\u76f4\u63a5 **return 0**\u3002\n5. \u8f93\u51fa\u7b54\u6848\u3002\n\n### \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\nconst int maxn=1e6+100;\ninline int read(){//\u5feb\u8bfb \n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile (ch<'0'||ch>'9') {\n\t\tif (ch=='-') f=0;\n\t\tch=getchar();\n\t}\n\twhile (ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f ? x : -x;\n}\nint n,ans=1;//ans\u8bb0\u5f55\u6700\u5927\u7b54\u6848 \nstruct tree{\n\tint v,son[2];\n}t[maxn];//\u7ed3\u6784\u4f53\u5b58\u6811 \nstruct que{\n\tint z[maxn],y[maxn];\n\tint l,r;\n\tvoid re(){l=1;r=0;}\n\tvoid push(int L,int R) {++r;z[r]=L;y[r]=R;}\n\tbool em(){return l>r;}\n\tvoid get(int &L,int &R) {L=z[l];R=y[l];l++;}\n}q;//\u987a\u624b\u5199\u4e2a\u961f\u5217 \nint go(int x) {\n\tint nans=3,l=t[x].son[1],r=t[x].son[0];\n\t//\u4e2a\u4eba\u4e60\u60ef\u4f7f\u7528bfs,\u5b9e\u9645\u4e0adfs\u5c31\u884c \n\tq.re();//\u6e05\u7a7a \n\tq.push(l,r);//\u5165\u961f \n\twhile (!q.em()) {//\u975e\u7a7a \n\t\tq.get(l,r);//\u53d6\u961f\u9996 \n\t\tif (t[l].son[0]==-1 && t[r].son[1]!=-1) return 0;\n\t\tif (t[l].son[1]==-1 && t[r].son[0]!=-1) return 0;\n\t\tif (t[l].son[0]!=-1 && t[r].son[1]==-1) return 0;\n\t\tif (t[l].son[1]!=-1 && t[r].son[0]==-1) return 0;\n\t\t//\u82e5\u7ed3\u6784\u4e0d\u4e00\u81f4\uff0creturn 0 \n\t\tif (t[l].son[0]!=-1) {//\u65e0\u89c6-1 \n\t\t\tif (t[t[l].son[0]].v!=t[t[r].son[1]].v) return 0;\n\t\t\t//\u4e0d\u76f8\u7b49\u5c31return 0 \n\t\t\tnans+=2;\n\t\t\t//\u5426\u5219nans+=2 \n\t\t\tq.push(t[l].son[0],t[r].son[1]);\n\t\t\t//\u7ee7\u7eed\u5f80\u4e0b \n\t\t}\n\t\tif (t[l].son[1]!=-1) {//\u540c\u4e0a \n\t\t\tif (t[t[l].son[1]].v!=t[t[r].son[0]].v) return 0;\n\t\t\tnans+=2;\n\t\t\tq.push(t[l].son[1],t[r].son[0]);\n\t\t}\n\t}\n\treturn nans;//\u8fd4\u56de\u5f53\u524d\u7b54\u6848 \n}\nint main(){\n\tn=read();\n\tfor (int i=1;i<=n;++i) {\n\t\tt[i].v=read();\n\t}\n\tfor (int i=1;i<=n;++i) {\n\t\tt[i].son[0]=read();\n\t\tt[i].son[1]=read();\n\t}\n\t//\u8f93\u5165 \n\tfor (int i=1;i<=n;++i) {\n\t\tif (t[i].son[0]==-1 || t[i].son[1]==-1) continue;\n\t\t//\u65e0\u89c6\u5b50\u8282\u70b9\u6709-1\u7684\u70b9 \n\t\tif (t[t[i].son[0]].v!=t[t[i].son[1]].v) continue;\n\t\t//\u65e0\u89c6\u5de6\u53f3\u4e0d\u4e00\u6837\u7684\u70b9 \n\t\tint nans=go(i);\n\t\t//\u627e\u5f53\u524d\u7b54\u6848 \n\t\tans=max(ans,nans);\n\t\t//\u53d6\u6700\u5927\u503c \n\t}\n\tprintf(\"%d\\n\",ans);\n\t//\u8f93\u51fa\u7b54\u6848(\u6e9c\u4e86 \n\treturn 0;\n}\n```\n\nnoip pj \u4e09\u7b49\u9884\u5b9a\uff08\u9893\u5e9f(\u2565\u256f^\u2570\u2565)\uff09\n\n### 11.17 update:\n\n\u4e3a\u4ec0\u4e48\u8fd9\u79cd\u505a\u6cd5\u884c\u5f97\u901a\u5462\uff1f\n\n\u4e0b\u9762\u8ba9\u6211\u4eec\u6c42\u51fa\u5b83\u7684\u590d\u6742\u5ea6\u3002\n\n------------\n\n\u8bbe\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u5927\u5c0f\uff08\u5305\u62ec\u81ea\u8eab\uff09\u4e3a $siz$ \uff0c\n\n\u5219\u53ef\u77e5 $siz_{max}$ \u4e3a $n$ \u4e14\u8be5\u70b9\u4e3a\u6839\u8282\u70b9\u3002\n\n\u5219\u5176\u5de6\u53f3\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\u4e3a $n-1$ \uff0c\u8fd1\u4f3c\u7684\u770b\u6210 $n$ \u3002\n\n\u7c7b\u63a8\u53ef\u77e5\uff0c\u6bcf\u5c42\u6240\u6709\u8282\u70b9\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\u6700\u5927\u7ea6\u4e3a $n$ \u3002\n\n\u590d\u6742\u5ea6\u5219\u4e3a $n$ \u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\u52a0\u4e0a\u5176\u5b83\u7684\u65f6\u95f4\uff08\u5305\u62ec\u679a\u4e3e\uff0c\u8f93\u5165\uff09\uff0c\u7531\u4e0a\u53ef\u77e5\u7406\u8bba\u4e0a\u754c\u7ea6\u4e3a $nlogn+4n$ \u3002\uff08\u6811\u7684\u9ad8\u5ea6\u4e3a $logn$\uff09\n\n\u4e0a\u9762\u8bf4\u7684\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u60c5\u51b5\uff0c\u5176\u5b83\u60c5\u51b5\u770b\u4f3c\u4e0d\u540c\uff0c\u5b9e\u9645\u4e5f\u4e00\u6837\u3002\n\n\u56e0\u4e3a\u975e\u5b8c\u5168\u4e8c\u53c9\u6811\u6709\u7684\u8282\u70b9\u5de6\u53f3\u4e0d\u5bf9\u79f0\uff0c\u53ef\u4ee5\u76f4\u63a5\u6392\u9664\uff0c\u56e0\u6b64\u5176\u5b9e\u662f\u8981\u6bd4\u5b8c\u5168\u4e8c\u53c9\u6811\u66f4\u5feb\u7684\u3002\n\n\u51b5\u4e14 $nlogn+4n$ \u662f\u7406\u8bba\u4e0a\u754c\uff0c\u5b9e\u9645\u4e0a\u5e38\u6570\u5f88\u5c0f\uff0c\u56e0\u4e3a $nlogn$ \u8fbe\u4e0d\u5230\u4e0a\u754c\uff08\u6bcf\u5c42\u5b50\u6811\u4e4b\u548c\u662f\u8981\u6bd4n\u5c0f\u7684\uff09\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u5fc3\u7684\u66b4\u529b\u5566\u0669(\u0e51>\u25e1<\u0e51)\u06f6 ",
        "postTime": 1542088843,
        "uid": 78752,
        "name": "lolte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "# \u66b4\u529b\u51fa\u5947\u8ff9\uff01\u4f60\u4fe1\u4e48\n\n#### \u8003\u573a\u4e0a\u770b\u5230\u8fd9\u9898\uff0c\u6211\u8111\u5b50\uff1a@#\uffe5%\u2026\u2026&\uffe5**&\n\n\u9ed8\u9ed8\u5543\u4e86\u4e00\u53e3\u70b9\u5fc3\u9762\u5305\uff0c\u5f00\u59cb\u770b\u7740\u9898\u76ee\u53d1\u6123......\n\n\u7136\u540e\u7a81\u7136\u53d1\u73b0\uff1a\u6309\u7167\u9898\u610f\u6a21\u62df\u6bcf\u4e2a\u6839\u8282\u70b9\u5e76\u4e0d\u96be\u3002\n\n#### ~~\u50cf\u6211\u8fd9\u79cd\u5927\u849f\u84bb\uff0cT4\u53cd\u6b63\u4e0d\u53ef\u80fdA\u7684\uff0c\u968f\u4fbf\u5199\u4e2a\u66b4\u529b\u7b97\u4e86\u5427~~\n\n\u601d\u8def\u77ac\u95f4\u6e05\u6670\uff0c\u4e8e\u662f\u5f00\u7801\uff08\u2026\u2026\uff09\n\n15\u5206\u949f\u540e\u2026\u2026\u6253\u5b8c\u4e86\n\n\u6d4b\u4e86\u524d\u4e24\u4e2a\u6837\u4f8b\uff0c\u8c03\u8bd5\u4e865\u5206\u949f\uff0c\u8fc7\u4e86\u3002\n\n\u63a5\u7740\u6000\u7740\u5fd0\u5fd1\u4e0d\u5b89\u7684\u5fc3\u60c5\u6253\u5f00\u7b2c\u4e09\u4e2a\u6837\u4f8b\u2026\u2026\n\n\uff1f\uff1f\uff1f%\uffe5#@#\uff01\uff01\uff01\u8fd9\u4e48\u5927\u7684\u6570\u636e\uff0c\u80af\u5b9a\u51c9\u51c9\u4e86555\u3002\u4e8e\u662f\u6000\u7740\u5fc5\u6b7b\u7684\u4fe1\u5ff5\u5f00\u59cb\u6d4b\u8bd5\u2026\u2026\n\n1\u79d2\u540e\u2026\u2026\u53d1\u89c9\u81ea\u5df1\u7684\u7a0b\u5e8f\u7adf\u7136\u79d2\u8fc7\uff1f\uff1f\uff1f\uff01\uff01\u4ec0\u4e48\u795e\u64cd\u4f5c\uff1f\n\n#### \u6211\u5f00\u59cb\u6000\u7591 ~~CCF\u662f\u4e0d\u662f\u628a\u6bd4\u8d5b\u7528\u673a\u5077\u5077\u6362\u6210\u4e86\u795e\u5a01\u592a\u6e56\u4e4b\u5149\u5fae\u578b\u7248~~\n\n\u7136\u540e\u779f\u4e86\u4e00\u773c\u8f93\u51fa\uff0c\u5c31\u662f\u90a3\u4e2a\u795e\u5947\u7684 \n# 7\n\n### \u6211\u5dee\u70b9\u5f00\u5fc3\u5f97\u7b11\u51fa\u58f0\u6765\uff0c\u4e0d\u8fc7\u8fd9\u8fd8\u6ca1\u5b8c\n\n\u4eca\u5929\u4e00\u6d4b\u53d1\u89c9\u81ea\u5df1\u7adf\u7136A\u4e86\uff0c\u6700\u6162\u7684\u70b9\u53ea\u8dd1\u4e860.2s\uff1f\uff1f\u5567\u5567\uff0c\u795e\u5947\u554a\n\n\u53d1\u7247\u9898\u89e3\u5e86\u795d\u4e00\u4e0b\n\n----------------------\n\u6211\u7684\u601d\u8def\uff1a\n\n\u9898\u610f\u65e0\u975e\u5c31\u662f\u8981\u627e\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5f97\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u4e3a**\u5bf9\u79f0\u4e8c\u53c9\u6811**\u5e76\u4e14\u8be5\u4e8c\u53c9\u6811\u7ed3\u70b9\u603b\u6570\u6700\u591a\u3002\n\n### \u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5224\u65ad\u4ee5\u5176\u4f5c\u4e3a\u6839\u8282\u70b9\u80fd\u5426\u5f62\u6210\u5bf9\u79f0\u4e8c\u53c9\u6811\uff0c\u5982\u679c\u53ef\u4ee5\u5219\u66f4\u65b0\u6700\u4f18\u503c\u3002\n\n\u5f53\u7136\uff0c\u66b4\u529b\u4e5f\u8981\u6709\u65b9\u6cd5\uff0c\u7edd\u4e0d\u80fd\u6b7b\u505a\u3002\n\n\u7531\u9898\u610f\u53ef\u77e5\uff1a\n\n1.\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9\u7684\u6811\u4e3a\u5bf9\u79f0\u4e8c\u53c9\u6811\n\n2.\u53ea\u6709\u4e00\u4e2a\u5de6\uff08\u53f3\uff09\u513f\u5b50\u7684\u4e8c\u53c9\u6811\u4e0d\u662f\u5bf9\u79f0\u4e8c\u53c9\u6811\n\n\u5b9a\u4e49check(k)\u7528\u4e8e\u5224\u65ad\u4ee5k\u53f7\u7ed3\u70b9\u4f5c\u4e3a\u6839\u662f\u5426\u80fd\u5f62\u6210\u5bf9\u79f0\u4e8c\u53c9\u6811\u3002\n\n\u5219\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u4e0a\u9762\u4e24\u6761\u7279\u5224\u5199\u8fdb\u53bb\u3002\n\n\u5982\u679c\u4e0d\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u70b9\uff0c\u90a3\u4e48\u5f00\u59cbdfs\u66b4\u641c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u68f5\u4e8c\u53c9\u6811\u5206\u6210\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u5206\u522b\u5f80\u4e0b\u6df1\u641c\u3002\n\n\u5b9a\u4e49dfs(x,y)\u4e3a\u5f53\u524d\u641c\u5230\u4e86\u5de6\u5b50\u6811\u7684x\u53f7\u7ed3\u70b9\u548c\u53f3\u5b50\u6811\u7684y\u53f7\u7ed3\u70b9\n\n\u4ed4\u7ec6\u89c2\u5bdf\u5bf9\u79f0\u4e8c\u53c9\u6811\u6027\u8d28\u53ef\u77e5\uff1a\n\n1.\u9996\u5148\u8fd9\u68f5\u4e8c\u53c9\u6811\u7684\u5de6\u53f3\u7ed3\u6784\u5fc5\u987b\u5bf9\u79f0\uff0c\u5982\u4e0b\u56fe\uff1a\uff08\u56fe\u867d\u4e11\uff0c\u770b\u61c2\u5c31\u884c\uff09\n![](https://s1.ax1x.com/2018/11/11/iqWmVS.png)\n\n  \u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u8be5\u4e8c\u53c9\u6811\u5de6\u5b50\u6811\u7684\u4efb\u610f\u7ed3\u70b9x\u548c\u53f3\u5b50\u6811\u7684\u4efb\u610f\u7ed3\u70b9y\uff0c\u5982\u679cx\u6709\u5de6\u513f\u5b50\uff0c\u90a3\u4e48y\u5fc5\u987b\u6709\u53f3\u513f\u5b50\uff1b\u53cd\u4e4b\uff0c\u5982\u679cx\u6709\u53f3\u513f\u5b50\uff0c\u90a3\u4e48y\u5fc5\u987b\u6709\u5de6\u513f\u5b50\u3002\u6216\u8005\u4ed6\u4eec\u90fd\u6ca1\u6709\u513f\u5b50\u3002\n  \n  \u5982\u679c\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff0c\u7ec8\u6b62\u641c\u7d22\u5e76\u8fd4\u56defalse\u3002\u5426\u5219\u7ee7\u7eed\u5f80\u4e0b\u641c\uff0c\u5982\u679cx\u7ed3\u70b9\u5f80\u5de6\u8dd1\uff0c\u90a3\u4e48y\u7ed3\u70b9\u5f80\u53f3\u8dd1\uff1b\u53cd\u4e4b\u4ea6\u7136\u3002\n  \n  \u6309\u7167\u4e0a\u8ff0\u89c4\u5219\u5f80\u4e0b\u641c\uff0c\u53ef\u4ee5\u5224\u65ad\u8be5\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\u662f\u5426\u5bf9\u79f0\u3002\n  \n  2.\u5176\u6b21\u5c31\u662f\u6743\u503c\u4e5f\u5fc5\u987b\u5bf9\u79f0\uff0c\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u6bcf\u6b21\u641c\u5230\u4e24\u8fb9\u7684\u5404\u4e00\u4e2a\u70b9\uff0c\u53ea\u9700\u5224\u65adx\u548cy\u7684\u6743\u503c\u662f\u5426\u76f8\u7b49\u5373\u53ef\uff08\u7406\u7531\uff1a\u6839\u636e\u6027\u8d281\u7684\u641c\u7d22\u539f\u5219\uff0c\u6bcf\u6b21\u641c\u5230\u7684\u4e24\u4e2a\u7ed3\u70b9\u5fc5\u5b9a\u662f\u5206\u522b\u4f4d\u4e8e\u5de6\u53f3\u5b50\u6811\u7684\u4e24\u4e2a\u5bf9\u79f0\u70b9\uff09\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u8be5\u4e8c\u53c9\u6811\u4e0d\u5bf9\u79f0\uff0c\u53ef\u76f4\u63a5\u7ec8\u6b62\u641c\u7d22\uff0c\u76f8\u7b49\u5219\u7ee7\u7eed\u3002\n  \n\u4e3b\u7a0b\u5e8f\u600e\u4e48\u5199\uff1f\u5f88\u7b80\u5355\uff0c\u5f00\u4e00\u4e2a\u961f\u5217\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u4f9d\u6b21\u626b\u63cf\uff0c\u628a\u6709\u7684\u513f\u5b50\u653e\u5165\u961f\u5217\uff0c\u4e00\u4e2a\u4e2a\u5224\u65ad\u8fc7\u6765\u5373\u53ef\u3002\n  \n\u7efc\u4e0a\u6240\u8ff0\uff0c\u4e00\u4e2a\u534e\u4e3d\u4e3d\u7684\u66b4\u529b\u7a0b\u5e8f\u5c31\u663e\u9732\u96cf\u5f62\u5566\u3002\n\n\u51fd\u6570check\u90e8\u5206\uff1a\n\n```pascal\n  function check(k:longint):boolean;  //\u5224\u65ad\u4ee5k\u7ed3\u70b9\u4e3a\u6839\u8282\u70b9\u662f\u5426\u80fd\u5f62\u6210\u5bf9\u79f0\u4e8c\u53c9\u6811\n  begin\n    s:=1; f:=true;  //\u8ba1\u6570\u5668\u521d\u59cb\u4e3a1\uff0c\u5e76\u9ed8\u8ba4\u5f53\u524d\u53ef\u5f62\u6210\u5bf9\u79f0\u4e8c\u53c9\u6811\n    if (a[k,1]=-1)and(a[k,2]=-1) then exit(true);  //\u5982\u679c\u5f53\u524d\u6839\u8282\u70b9\u65e0\u513f\u5b50\u5219\u8fd4\u56de\u771f\n    if (a[k,1]<>-1)and(a[k,2]<>-1) then  //\u5982\u679c\u5de6\u53f3\u513f\u5b50\u90fd\u6709\n    begin\n      dfs(a[k,1],a[k,2]); exit(f);  //\u5f00\u59cb\u6df1\u641c\uff0c\u5e76\u8fd4\u56de\u6700\u7ec8\u7ed3\u679c\n    end else exit(false);  //\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u8fd4\u56de\u5047\n  end;\n```\n\n\u51fd\u6570dfs\u90e8\u5206\uff1a\n\n```pascal\n  procedure dfs(x,y:longint);  //\u641c\u5230\u4e86\u5de6\u5b50\u6811\u7684x\u53f7\u7ed3\u70b9\u548c\u53f3\u5b50\u6811\u7684y\u53f7\u7ed3\u70b9\n  begin\n    if f=false then exit;  //\u5982\u679c\u5df2\u7ecf\u4e0d\u662f\u5bf9\u79f0\u4e8c\u53c9\u6811\uff0c\u8df3\u51fa\n    if v[x]<>v[y] then begin f:=false; exit; end;  //\u5982\u679c\u5bf9\u5e94\u7684\u7ed3\u70b9\u6743\u503c\u4e0d\u76f8\u7b49\uff0c\u8df3\u51fa\n    inc(s,2);  //\u8ba1\u6570\u5668\u8bb0\u5f97\u52a02\uff08\u4e24\u904d\u5404\u4e00\u4e2a\uff09\n    if a[x,1]<>-1 then  //\u5982\u679cx\u6709\u5de6\u513f\u5b50\n    begin\n      if a[y,2]<>-1 then dfs(a[x,1],a[y,2])  //\u5982\u679cy\u6709\u53f3\u513f\u5b50\uff0c\u641c\n      else begin f:=false; exit; end;  //y\u6ca1\u6709\u5bf9\u5e94\u7684\u53f3\u513f\u5b50\uff0c\u8df3\u51fa\n    end\n    else if a[y,2]<>-1 then begin f:=false; exit; end;  //x\u6ca1\u6709\u5de6\u513f\u5b50\u4f46\u662fy\u6709\u53f3\u513f\u5b50\uff0c\u8df3\u51fa\n    if a[x,2]<>-1 then  //\u540c\u4e0a\n    begin\n      if a[y,1]<>-1 then dfs(a[x,2],a[y,1])\n      else begin f:=false; exit; end;\n    end\n    else if a[y,1]<>-1 then begin f:=false; exit; end;\n  end;\n```\n\n\u4e3b\u7a0b\u5e8f\uff1a\n```pascal\n  readln(n);\n  for i:=1 to n do read(v[i]);  //\u8bfb\u5165\u6743\u503c\n  for i:=1 to n do\n    readln(a[i,1],a[i,2]);  //\u8bfb\u5165\u5de6\u53f3\u513f\u5b50\n  t:=1; w:=1; sq[1]:=1;  //\u961f\u5217\u521d\u59cb\u5316\uff0c\u6839\u8282\u70b9\u5165\u961f\n  while t<=w do\n  begin\n    if check(sq[t]) then  //\u5982\u679c\u4ee5\u5f53\u524d\u6839\u8282\u70b9\u80fd\u6784\u6210\u5bf9\u79f0\u4e8c\u53c9\u6811\n    begin\n      if s>ans then ans:=s;  //\u66f4\u65b0\u7ed3\u70b9\u6570\u6700\u5927\u503c\n    end;\n    if a[sq[t],1]<>-1 then begin inc(w); sq[w]:=a[sq[t],1]; end;  //\u5982\u679c\u5934\u7ed3\u70b9\u6709\u5de6\u513f\u5b50\uff0c\u8fdb\u961f\u5217\n    if a[sq[t],2]<>-1 then begin inc(w); sq[w]:=a[sq[t],2]; end;  //\u5982\u679c\u5934\u7ed3\u70b9\u6709\u53f3\u513f\u5b50\uff0c\u8fdb\u961f\u5217\n    inc(t);\n  end;\n  writeln(ans);\n```\n\n\u81f3\u6b64\uff0c\u66b4\u529b\u7801\u5b8c\u3002\n\n\u6ce8\u610f\u5230\u6709\u56db\u4e2a\u6d4b\u8bd5\u70b9\u8f93\u5165\u6570\u636e\u4e3a\u6ee1\u4e8c\u53c9\u6811\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u5bf9\u4ee5\u4e0a\u7b97\u6cd5\u8fdb\u884c\u4f18\u5316\u3002\n\n\u7531\u4e8e\u6ee1\u4e8c\u53c9\u6811\u72ec\u6709\u7684\u6027\u8d28\uff0c\u8d8a\u662f\u9760\u4e0a\u5c42\u7684\u7ed3\u70b9\uff0c\u5b83\u4e3a\u6839\u8282\u70b9\u7684\u6811\u4e2d\u603b\u7ed3\u70b9\u6570\u8d8a\u5927\u3002\n\n\u56e0\u6b64\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u626b\uff0c\u53ea\u8981\u627e\u5230\u6ee1\u8db3\u9898\u610f\u7684\uff0c\u5373\u53ef\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u3002\n\n\u4f18\u5316\u540e\u7684\u5b8c\u6574\u4ee3\u7801\uff08\u522b\u602a\u6211\u662fP\u515a\uff09\uff1a\n```pascal\nprogram tree;\nvar i,n,t,w,s,ans:longint; f,f1:boolean;\n    v:array[1..1000000] of longint;\n    a:array[1..1000000,1..2] of longint;\n    sq:array[1..1000000] of longint;\n  procedure dfs(x,y:longint);  //\u641c\u5230\u4e86\u5de6\u5b50\u6811\u7684x\u53f7\u7ed3\u70b9\u548c\u53f3\u5b50\u6811\u7684y\u53f7\u7ed3\u70b9\n  begin\n    if f=false then exit;  //\u5982\u679c\u5df2\u7ecf\u4e0d\u662f\u5bf9\u79f0\u4e8c\u53c9\u6811\uff0c\u8df3\u51fa\n    if v[x]<>v[y] then begin f:=false; exit; end;  //\u5982\u679c\u5bf9\u5e94\u7684\u7ed3\u70b9\u6743\u503c\u4e0d\u76f8\u7b49\uff0c\u8df3\u51fa\n    inc(s,2);  //\u8ba1\u6570\u5668\u8bb0\u5f97\u52a02\uff08\u4e24\u904d\u5404\u4e00\u4e2a\uff09\n    if a[x,1]<>-1 then  //\u5982\u679cx\u6709\u5de6\u513f\u5b50\n    begin\n      if a[y,2]<>-1 then dfs(a[x,1],a[y,2])  //\u5982\u679cy\u6709\u53f3\u513f\u5b50\uff0c\u641c\n      else begin f:=false; exit; end;  //y\u6ca1\u6709\u5bf9\u5e94\u7684\u53f3\u513f\u5b50\uff0c\u8df3\u51fa\n    end\n    else if a[y,2]<>-1 then begin f:=false; exit; end;  //x\u6ca1\u6709\u5de6\u513f\u5b50\u4f46\u662fy\u6709\u53f3\u513f\u5b50\uff0c\u8df3\u51fa\n    if a[x,2]<>-1 then  //\u540c\u4e0a\n    begin\n      if a[y,1]<>-1 then dfs(a[x,2],a[y,1])\n      else begin f:=false; exit; end;\n    end\n    else if a[y,1]<>-1 then begin f:=false; exit; end;\n  end;\n  function check(k:longint):boolean;  //\u5224\u65ad\u4ee5k\u7ed3\u70b9\u4e3a\u6839\u8282\u70b9\u662f\u5426\u80fd\u5f62\u6210\u5bf9\u79f0\u4e8c\u53c9\u6811\n  begin\n    s:=1; f:=true;  //\u8ba1\u6570\u5668\u521d\u59cb\u4e3a1\uff0c\u5e76\u9ed8\u8ba4\u5f53\u524d\u53ef\u5f62\u6210\u5bf9\u79f0\u4e8c\u53c9\u6811\n    if (a[k,1]=-1)and(a[k,2]=-1) then exit(true);  //\u5982\u679c\u5f53\u524d\u6839\u8282\u70b9\u65e0\u513f\u5b50\u5219\u8fd4\u56de\u771f\n    if (a[k,1]<>-1)and(a[k,2]<>-1) then  //\u5982\u679c\u5de6\u53f3\u513f\u5b50\u90fd\u6709\n    begin\n      dfs(a[k,1],a[k,2]); exit(f);  //\u5f00\u59cb\u6df1\u641c\uff0c\u5e76\u8fd4\u56de\u6700\u7ec8\u7ed3\u679c\n    end else exit(false);  //\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u8fd4\u56de\u5047\n  end;\nbegin\n  readln(n);\n  for i:=1 to n do read(v[i]);  //\u8bfb\u5165\u6743\u503c\n  f1:=true;\n  for i:=1 to n do\n  begin\n    readln(a[i,1],a[i,2]);  //\u8bfb\u5165\u5de6\u53f3\u513f\u5b50\n    if (a[i,1]=-1)or(a[i,2]=-1) then f1:=false;  //\u6b64\u5904\u4e3a\u7279\u5224\uff0c\u5982\u679c\u8be5\u7ed3\u70b9\u65e0\u5de6\u6216\u53f3\u513f\u5b50\uff0c\u90a3\u4e48\u8fd9\u4e0d\u662f\u6ee1\u4e8c\u53c9\u6811\n  end;\n  t:=1; w:=1; sq[1]:=1;  //\u961f\u5217\u521d\u59cb\u5316\uff0c\u6839\u8282\u70b9\u5165\u961f\n  while t<=w do\n  begin\n    if check(sq[t]) then  //\u5982\u679c\u4ee5\u5f53\u524d\u6839\u8282\u70b9\u80fd\u6784\u6210\u5bf9\u79f0\u4e8c\u53c9\u6811\n    begin\n      if f1 then begin writeln(s); close(input); close(output); halt; end;  //\u5982\u679c\u8fd9\u662f\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\uff0c\u90a3\u4e48\u7b2c\u4e00\u6b21\u627e\u5230\u7684\u5bf9\u79f0\u4e8c\n\n\u53c9\u6811\u5fc5\u7136\u4e3a\u6700\u4f18\u89e3\uff0c\u76f4\u63a5\u8f93\u51fa\n      if s>ans then ans:=s;  //\u66f4\u65b0\u7ed3\u70b9\u6570\u6700\u5927\u503c\n    end;\n    if a[sq[t],1]<>-1 then begin inc(w); sq[w]:=a[sq[t],1]; end;  //\u5982\u679c\u5934\u7ed3\u70b9\u6709\u5de6\u513f\u5b50\uff0c\u8fdb\u961f\u5217\n    if a[sq[t],2]<>-1 then begin inc(w); sq[w]:=a[sq[t],2]; end;  //\u5982\u679c\u5934\u7ed3\u70b9\u6709\u53f3\u513f\u5b50\uff0c\u8fdb\u961f\u5217\n    inc(t);\n  end;\n  writeln(ans);\nend.\n```\n\n\u9644\u8bc4\u6d4b\u7ed3\u679c\uff082018/11/11\uff09\uff1a\n![](https://s1.ax1x.com/2018/11/11/iqfYQI.png)\n\n\u4e8b\u5b9e\u8bc1\u660e\u4e0d\u52a0\u4f18\u5316\u4e5f\u53ef\u4ee5\u8dd1\u5f97\u5f88\u5feb\u3002",
        "postTime": 1541925673,
        "uid": 82593,
        "name": "Chavapa",
        "ccfLevel": 5,
        "title": "NOIP2018JuniorT4\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811 \u3011"
    },
    {
        "content": "~~\u770b\u5230\u7adf\u7136\u6ca1\u6709manacher\u7684\u9898\u89e3\uff0c\u849f\u84bb\u6211\u4eca\u5929\u53d1\u4e00\u6ce2~~\n\n\u770b\u5230\u9898\u76ee\uff0c\u5728\u4e00\u68f5\u4e8c\u53c9\u6811\u4e0a\u627e\u5bf9\u79f0\uff0c\u4e2d\u5e8f\u904d\u5386\u6c42\u56de\u6587\u554a\uff01\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6743\u503c\u7684\u4e2d\u5e8f\u904d\u5386\u6c42\u51fa\u6765\uff0c\u628a\u56de\u6587\u627e\u51fa\u6765\u3002\n\n\u4e8e\u662f\u6743\u503c\u5c31\u7ed3\u675f\u4e86...\n\n------------\n\n# $\\color{red}\\text{\u6811\u7684\u7ed3\u6784\u53c8\u5728\u4e00\u65c1\u563f\u563f\u7684\u7b11}$\n\n\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u503c\u6765\u7ef4\u62a4\u8fd9\u4e2a\u5f62\u72b6\n\n\u6211\u7528\u7684\u662f\u8fd9\u53ef\u81ea\u8ff0\u7684\u8282\u70b9\u6570\uff0c\u56e0\u4e3a\u4e00\u4f46\u4e00\u4e2a\u70b9\u53d8\u4e86\uff0c\u8fd9\u9897\u5b50\u6811\u7684\u8282\u70b9\u6570\u5e8f\u5217\u4e00\u5b9a\u6709\u53d8\n\u5316\uff0c\n\n\u4e8e\u662f\uff0c\u540c\u6837\u6c42\u56de\u6587...\n\n------------\n\nmanacher\u6a21\u677f:\n\n```cpp\nvoid manacher(node &x,node &len){\n\tint mx=0,po=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(mx>i)\n\t\tlen.s[i]=min(mx-i,len.s[2*po-i]);\n\t\telse len.s[i]=1;\n\t\twhile(x.s[i-len.s[i]]==x.s[i+len.s[i]]) \n\t\tlen.s[i]++;\n\t\tif(i+len.s[i]>mx) \n\t\tmx=i+len.s[i],po=i;\n\t}\n}\n```\n\n------------\n\n\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u4e0e\u5b50\u6811\u5927\u5c0f\u662f\u5426\u7b26\u5408\u8981\u6c42\u5c31\u884c\u5566QAQ\n\nCode\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#define N 1000005\nusing namespace std;\nstruct node{\n    int s[N];\n}a,siz,l1,l2; \nint n;\nint l[N],r[N];\nint date[N];\nvoid manacher(node &x,node &len){\n    int mx=0,po=0;\n    for(int i=1;i<=n;i++){\n        if(mx>i)\n        len.s[i]=min(mx-i,len.s[2*po-i]);\n        else len.s[i]=1;\n        while(x.s[i-len.s[i]]==x.s[i+len.s[i]]) \n        len.s[i]++;\n        if(i+len.s[i]>mx) \n        mx=i+len.s[i],po=i;\n    }\n}\nint cnt=0;\nint rak[N];\nvoid dfs(int u){\n    if(u==-1)return;\n    dfs(l[u]);\n    a.s[++cnt]=date[u];\n    rak[u]=cnt;\n    int ct=cnt;\n    dfs(r[u]);\n    siz.s[ct]=siz.s[rak[max(0,l[u])]]+siz.s[rak[max(0,r[u])]]+1;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&date[i]);\n    fill(a.s,a.s+N,1e9);\n    fill(siz.s+1,siz.s+N,-1);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d%d\",&l[i],&r[i]);\n    dfs(1);\n    manacher(a,l1);\n    manacher(siz,l2);\n    int ans=0;\n    for(int i=1;i<=n;i++)\n    if(l1.s[i]*2-1>=siz.s[i]&&l2.s[i]*2-1==siz.s[i])\n    ans=max(ans,siz.s[i]);\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```\n\n# manacher\u5927\u6cd5\u543c",
        "postTime": 1543128465,
        "uid": 87691,
        "name": "Cheng_yf",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "## \u601d\u8def\u68b3\u7406\n- \u8282\u70b9\u503c\u7684\u5b58\u50a8\n- \u8282\u70b9\u7684\u5b58\u50a8\n- \u5c42\u5e8f\u904d\u5386 \u5224\u65ad\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u6570\u662f\u5426\u5bf9\u79f0\u3001\u8282\u70b9\u603b\u6570\n\n### \u8282\u70b9\u503c\u7684\u5b58\u50a8\n\u4f7f\u7528\u6570\u7ec4 r \u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u503c\n### \u8282\u70b9\u987a\u5e8f\u7684\u5b58\u50a8\n\u5148\u628a\u6240\u6709\u8282\u70b9\u987a\u5e8f\u5f55\u5165\u4e8c\u7ef4\u6570\u7ec4 \n\u7b2ci\u4e2a\u8282\u70b9\u7684\u5de6\u5b69\u5b50\u5b58\u5728s[i][0]\u4e2d \u53f3\u5b69\u5b50\u5b58\u5728s[i][1]\u4e2d \n### \u5bf9\u79f0\u6811\u7684\u5224\u65ad\nbfs(x,y) x y\u4e3a\u4e24\u4e2a\u5f85\u5224\u65ad\u7684\u8282\u70b9\n\u7528x\u7684\u5de6\u8282\u70b9\u548cy\u7684\u53f3\u8282\u70b9\u6bd4\u8f83 \u518d\u7528x\u53f3\u8282\u70b9\u4e0ey\u5de6\u8282\u70b9\u6bd4\u8f83\n\u82e5x==y \u5219\u8868\u793a\u5224\u65ad\u7684\u70b9\u4e3a\u6839\u8282\u70b9 \u56fa\u53ea\u9700\u8981\u5224\u65ad\u4e00\u6b21\n\n\n\n\n```cpp\n# include<iostream>\nusing namespace std;\nint r[1000001],s[1000001][2];\nint m=0,a;\t\nbool b=false; \nvoid bfs(int x,int y){\n    if(r[s[x][0]]==r[s[y][1]]&&r[s[x][1]]==r[s[y][0]]) {\n        if(s[x][0]!=-1)\t\t\t\t\t\n        {a+=2;bfs(s[x][0],s[y][1]);}\t\n        if(s[x][1]!=-1&&x!=y)\t\t\t\n        {a+=2;bfs(s[x][1],s[y][0]);}\n    } \n    else b=true;\n}\nint main(){\n    int i,n;cin>>n;\n    for(i=1;i<=n;i++) cin>>r[i];\n    for(i=1;i<=n;i++) cin>>s[i][0]>>s[i][1];\n    for(i=1;i<=n;i++){ \n        a=1,b=false;bfs(i,i);\t\t\n        if(b) continue;\n        if(a>m) m=a;\n    }\n    cout<<m;\t\n    return  0;\n}\n\n\n```",
        "postTime": 1542530386,
        "uid": 122184,
        "name": "\u8c46\u8c46\u8c46",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "# \u5199\u5728\u524d\u9762\uff1a\u5982\u60f3\u83b7\u5f97\u66f4\u4f73\u9605\u8bfb\u6548\u679c\uff0c\u8bf7\u70b9\u51fb[\u8fd9\u91cc](https://blog.csdn.net/kkkksc03/article/details/84163779)\uff0c\u5982\u6709\u7591\u95ee\uff0c\u6b22\u8fce\u79c1\u4fe1\u672c\u4eba\u4ea4\u6d41\n\n# \u9898\u76ee\u94fe\u63a5\uff1ahttps://www.luogu.org/problemnew/show/P5018\n\n\u82b1\u7d6e\uff1a\u8fd9\u9053\u9898\u771f\u7684\u6bd4\u5386\u5e74\u7684t4\u90fd\u7b80\u5355\u7684\u591a\u5440\uff0c\u800c\u4e14\u672c\u849f\u84bb\u505a\u5f97\u51fat4\u505a\u4e0d\u51fat3\u545c\u545c\u545c\u3002\u3002\u3002\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u662f\u4e00\u53ea\u62ab\u7740\u72fc\u76ae\u7684\u7f8a\u4e86\uff0c\u5168\u7bc7\u5b57\u5b57\u4e0d\u79bb\u6811\uff0c\u4e8c\u53c9\u6811\uff0c\u7136\u9e45\u5374\u53ea\u9700\u8981\u4f1a\u641c\u7d22\u5c31\u80fd\u89e3\u51b3\u3002\n\n\u5728\u524d\u4e9b\u65e5\u5b50\u590d\u4e60\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u8003\u8651\u7684\u666e\u53ca\u7ec4\u4f1a\u51fa\u4e8e\u6570\u636e\u7ed3\u6784\u6709\u5173\u7684\u9898\u76ee\uff0c\u4e8e\u662f\u5927\u591a\u6570\u65f6\u95f4\u53ea\u662f\u653e\u5728\u641c\u7d22\uff0c\u6a21\u62df\uff0c\u7b80\u5355dp\u4e0a\uff0c\u53ea\u4e3a\u4e86\u4ee5\u9632\u4e0d\u6d4b\u7ec3\u4e86\u4e2adijkstra\u6a21\u677f\uff0c\u8003\u8bd5\u65f6\u770b\u5230\u4e86\u8fd9\u9898\u679c\u65ad\u9a97\u5206\uff0c\u7ed3\u679c\u6572\u5b8c\u540e\u53bb\u4e86\u8d9f\u5395\u6240\u624d\u53d1\u73b0\u641c\u7d22\u8dd1\u4e2a\u2018\u66b4\u529b\u2019\u4e5f\u884c\u554a\uff0c\u81f3\u5c11\u5373\u4fbfT\u4e86\u4e5f\u591aA\u51e0\u4e2a\u70b9\u3002\n\n\u5199\u5230\u53ea\u526930\u5206\u949f\u662f\u624d\u8fc7\u4e86\u5168\u90e8\u6837\u4f8b\uff0c\u6d4b\u4e86\u4e24\u4e09\u4e2a\u5361\u81ea\u5df1\u7684\u4e5f\u8fc7\u4e86\uff0c\u4e8e\u662f\u8f6c\u9893T3\uff0c\u5c45\u7136\u53d1\u73b0\u628a30\u5206\u7684\u9a97\u5206\u5199\u70b8\u4e86\u3002\u3002\u3002\n\n\u4e0b\u9762\u8fdb\u5165\u6b63\u9898\u3002\n# \u5206\u6790\uff1a\n\u8003\u8651\u5230\u6211\u4eec\u53ef\u4ee5\u4ece\u8282\u70b91\uff08\u5373\u6811\u6839\u5f00\u59cb\u641c\u7d22\uff09\uff0cdfs\uff0c\u641c\u5230\u4e00\u4e2a\u70b9\u5148\u5224\u65ad\u5b83\u5b58\u4e0d\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5148\u628a\u4ed6\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u90fd\u641c\u4e0a\u3002\u7136\u540e\u5f00\u4e2ac\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u6700\u5927\u7684\u8282\u70b9\u6570\uff0c\u5f53\u7136\u6743\u503c\u4e5f\u8981\u7d2f\u52a0\uff0c\u4e3a\u4e86\u4e4b\u540e\u4f5c\u4e3a\u5224\u65ad\u6761\u4ef6\u4e4b\u4e00\uff0c\u7136\u540e\u6211\u4eec\u5c1d\u8bd5\u7528c[i]\u66f4\u65b0\u7b54\u6848\uff0c\u6761\u4ef6\u662f\u5fc5\u987b\u5927\u4e8e\u5f53\u524d\u7b54\u6848\uff0c\u5e76\u4e14\u4e24\u4e2a\u5b50\u8282\u70b9\u5f62\u6210\u5bf9\u79f0\uff0c\u5373\u53ef\u3002\u4e3b\u9898\u601d\u8def\u5df2\u7ecf\u8bb2\u51fa\uff0c\u63a5\u4e0b\u6765\u5728\u4ee3\u7801\u4e2d\u6ce8\u91ca\u3002\n\n# \u4ee3\u7801\uff1a\n\n```\n#include<cstdio>\nusing namespace std;\nint v[1000005],ch[1000005][2],c[1000005],n,ans;\nbool same(int a,int b)//\u5224\u65ad\u4e24\u8282\u70b9\u662f\u5426\u5bf9\u79f0\n{\n\tif(a==b)return 1;\n\tif(!a||!b)return 0;\n\treturn v[a]==v[b]&&same(ch[a][1],ch[b][2])&&same(ch[a][2],ch[b][1]);\n}\nvoid dfs(int i)//\u5927\u6cd5\u5e08\u641c\u7d22\n{\n\tif(!i)return;\n\tdfs(ch[i][1]);\n\tdfs(ch[i][2]);\n\tc[i]=1+c[ch[i][1]]+c[ch[i][2]];\n\tv[i]=v[i]+v[ch[i][1]]+v[ch[i][2]];\n\tif(ans<c[i]&&same(ch[i][1],ch[i][2]))ans=c[i];\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&v[i]);\n\tv[0]=1005;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int k=1;k<=2;++k)\n\t\t{\n\t\t\tscanf(\"%d\",&ch[i][k]);\n\t\t\tif(ch[i][k]==-1)ch[i][k]=0;//\u6e05\u4e3a0\uff0c\u597d\u5224\u65ad\n\t\t}\n\tdfs(1);\n\tprintf(\"%d\",ans);\n\treturn 0;//the end\n}\n~\u5b8c\u7ed3\u273f\u273f\u30fd(\u00b0\u25bd\u00b0)\u30ce\u273f\n```\n\u6ce8\uff1a\u6b64\u4ee3\u7801\u5e76\u975e\u849f\u84bb\u8003\u573a\u6240\u5199\n",
        "postTime": 1542414232,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "- \u9898\u76ee\u5927\u610f\n\n   \u7ed9\u51fa\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u7ed9\u5b9a\u7684\u6811\u7684\u6700\u5927\u5bf9\u79f0\u4e8c\u53c9\u5b50\u6811\u7684\u8282\u70b9\u6570  \n- \u5212\u91cd\u70b9\u90e8\u5206\n   \n   1.\u8fd9\u68f5\u6811\u6240\u6709\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u4ea4\u6362\uff0c\u65b0\u6811\u548c\u539f\u6811\u5bf9\u5e94\u4f4d\u7f6e\u7684\u7ed3\u6784\u76f8\u540c\u4e14\u70b9\u6743\u76f8\u7b49\n   \n   **2.\u4ee5\u8282\u70b9T\u4e3a\u5b50\u6811\u6839\u7684\u4e00\u68f5\u201c\u5b50\u6811\u201d\u6307\u7684\u662f\uff1a\u8282\u70b9T \u548c\u5b83\u7684\u5168\u90e8\u540e\u4ee3\u8282\u70b9\u6784\u6210\u7684\u4e8c\u53c9\u6811\u3002**\n- \u9898\u89e3\n   \n   \u5f53\u65f6\u770b\u5230\u8fd9\u9898\u7b2c\u4e00\u53cd\u5e94\uff1a\u628a\u8fd9\u9897\u6811\u76f4\u63a5\u4ea4\u6362\uff0c\u770b\u6bcf\u4e2a\u70b9\u662f\u5426\u76f8\u7b49\uff0c\u7136\u540e\uff0c\u6211\uff1a\u597d\u50cf\u597d\u96be\u597d\u9ebb\u70e6\uff0c\u53bb\u5199T3\u5427(T3\u4e0d\u662f\u66f4\u96be\u5417\uff1f\uff1f\uff1f)\n   \n   \u9996\u5148\u6211\u4eec\u53ef\u4ee5**\u679a\u4e3e**\u7b54\u6848\u5b50\u6811\u7684\u6839\uff0c\u4e5f\u5c31\u662fO(n),\u7136\u540e\u5728n\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u6240\u6709\u6839\u4e2d\uff0c**\u627e\u5230\u5bf9\u79f0\u6570\u6700\u591a\u7684\u6811**\u3002\n   \n   \u5224\u65ad\u76f4\u63a5\u53bb\u9012\u5f52\uff0c\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8bbe\u5de6\u53f3\u5b50\u8282\u70b9\u4e3a-1\uff08\u5176\u5b9e\u5c31\u662f\u9898\u76ee\u8f93\u5165\uff09\u3002\n   \n   \u56e0\u4e3a\u4e8c\u53c9\u6811\u662f\u5bf9\u79f0\u7684\uff0c\u6240\u4ee5\u53ea\u8981**\u5224\u65ad\u6bcf\u7ec4\u5bf9\u79f0\u70b9**\uff0c\u5728**\u4e24\u4e2a\u70b9\u90fd\u4e0d\u662f-1**\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u8981\u5224\u65ad\u4e24\u4e2a\u5bf9\u79f0\u70b9**\u662f\u5426\u6743\u503c\u76f8\u7b49**\u3002\u5982\u679c\u6bcf\u7ec4\u5bf9\u79f0\u70b9\u90fd\u76f8\u7b49\uff0c\u90a3\u4e48\u4ee5\u8fd9\u4e2a\u8282\u70b9\u4e3a\u8ddf\u7684\u5b50\u6811\u5c31\u4e3a\u5bf9\u79f0\u4e8c\u53c9\u6811\u3002\n   \n-  \u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n\t![](https://s2.ax1x.com/2019/05/31/Vl7d1A.png)\n\n   \u5148\u679a\u4e3e\u6839\u8282\u70b9\uff0c\u9996\u5148\u6839\u8282\u70b9\u4e3a1\n\n   \u5982\u56fe\uff0c**\u521d\u59cb\u5316cnt=1(\u6839\u8282\u70b9)**,\u4f20\u5165\u9012\u5f52\u8282\u70b9<2>,<3>,\u5373f(2,3)\n   \n   \u56e0\u4e3a <2>\u4e0e<3>\u8282\u70b9\u6743\u503c\u76f8\u7b49,\u6240\u4ee5cnt+=2,\u5373cnt=3\n   \n   \u5f80\u4e0b\u9012\u5f52,**<2>\u7684\u5b50\u8282\u70b9\u548c<3>\u7684\u5b50\u8282\u70b9\u4e2d\u7684\u5bf9\u5e94\u70b9\uff0c\u5373f(4,7)\u4e0ef(5,6)\u3002**\n   \n   f(4,7)\u4e2d\uff0c\u8282\u70b9<4>\u4e0e<7>\u6743\u503c\u76f8\u7b49,\u5bf9\u79f0,cnt+=2,cnt=5\n   \n   \u7ee7\u7eed\u5f80\u4e0b\u9012\u5f52,\u53d1\u73b02\u7ec4\u5bf9\u79f0\u70b9\u90fd\u4e3a2\u4e2a-1,\u6545\u7ed3\u6784\u76f8\u7b49\u3002\n   \n   f(5,6)\u4e2d\uff0c\u8282\u70b9<5>\u4e0e<6>\u6743\u503c\u76f8\u7b49,\u5bf9\u79f0,cnt+=2,cnt=7\n   \n   \u7ee7\u7eed\u5f80\u4e0b\u9012\u5f52,\u53d1\u73b02\u7ec4\u5bf9\u79f0\u70b9\u90fd\u4e3a2\u4e2a-1,\u6545\u7ed3\u6784\u76f8\u7b49\u3002\n   \n   \u6240\u4ee5\uff0c\u6839\u8282\u70b9\u4e3a1\u65f6\uff0c\u7b54\u6848\u4e3a7.\n   \n   \u518d\u53bb\u5224\u65ad\u6839\u4e3a2,3,4,5,6,7\uff0c\u53d1\u73b0\u7b54\u6848\u90fd\u6ca1\u6709\u6839\u4e3a1\u65f6\u5927\uff0c\u6240\u4ee5\u6b64\u4e8c\u53c9\u6811\u6700\u5927\u5bf9\u79f0\u503c\u4e3a7\n   \n- \u90e8\u5206\u4ee3\u7801\n```\nint w(int x,int y)\n{\t\n\t\tif(x==-1&&y==-1)return 0;\n\t\tif((x==-1||y==-1)||(a[x].data!=a[y].data))\n\t\t{\t\n\t\t\tf=1;\n\t\t\treturn 0;\n\t\t}\n\t\treturn w(a[x].left,a[y].right)+w(a[x].right,a[y].left)+2;\n}\n```\nby \u8def\u4eba\u4e03",
        "postTime": 1559305443,
        "uid": 39408,
        "name": "Rainy7",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u5199\u7684\u4e00\u7bc7\u9898\u89e3\uff0c\u5e0c\u671b\u5927\u5bb6\u80fd\u652f\u6301\u54e6\uff01\u8bf7\u5404\u4f4d\u795e\u7287\u6307\u6559\u3002\n#### \u5bf9\u79f0\u4e8c\u53c9\u6811\u7684\u5b9a\u4e49\n\u5bf9\u4e8e\u4ece**\u4e00\u4e2a\u6839\u8282\u70b9\u51fa\u53d1**\u7684\u4e8c\u53c9\u6811\u6765\u8bf4\uff1a\n\n1.\u7ed3\u6784\u8981\u5bf9\u79f0\uff0c\u4e5f\u5c31\u662f\u5728\u4e2d\u95f4\uff08\u5982\u4e0b\u56fe\u84dd\u8272\u7ebf\u4e0e\u7ea2\u8272\u7ebf\uff09\u5288\u5f00\u4ee5\u540e\u4ecd\u7136\u5de6\u53f3\u7ed3\u6784\u76f8\u7b49\u3002\u89c4\u5f8b\uff1a\u6bcf\u4e00\u5c42\uff08\u9664\u53bb\u7b2c\u4e00\u5c42\u5916\uff09\u7684\u8282\u70b9\u6570\u90fd\u4e3a\u5076\u6570\u3002\n\n2.\u6240\u6709\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u4ea4\u6362\uff0c\u65b0\u6811\u548c\u539f\u6811\u5bf9\u5e94\u4f4d\u7f6e\u7684\u7ed3\u6784\u76f8\u540c\u4e14\u70b9\u6743\u76f8\u7b49\u3002\u597d\u50cf\u56de\u6587\u6570\u90a3\u6837\u3002\n#### \u89e3\u6cd5\n>\u679a\u4e3e\u6bcf\u4e00\u4e2a\u7ed3\u70b9\n>>\u68c0\u67e5\u4ee5\u8fd9\u4e2a\u7ed3\u70b9\u51fa\u53d1\u7684\u4e8c\u53c9\u6811\u662f\u5426\u7b26\u5408\u8981\n\n>>\u5982\u679c\u7b26\u5408\uff0c\u5c31\u4fdd\u5b58\u6700\u5927\u7684\u7b54\u6848\n\n![\u5bf9\u79f0\u4e8c\u53c9\u6811](https://cdn.luogu.com.cn/upload/pic/44291.png)\n\n#### \u5982\u4f55\u5224\u65ad\u6b64\u4e3a\u4e00\u68f5\u5408\u6cd5\u7684\u4e8c\u53c9\u6811\u5462\uff1f\n1.\u5224\u65ad\u4e24\u4e2a\u503c\u662f\u5426\u4e00\u6837\n\n2.\u5224\u65ad\u5de6\u513f\u5b50\u7684\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u7684\u53f3\u513f\u5b50\n\n3.\u5224\u65ad\u5de6\u513f\u5b50\u7684\u53f3\u513f\u5b50\u548c\u53f3\u513f\u5b50\u7684\u5de6\u513f\u5b50\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct data{\n\tint ls;//\u5de6\u513f\u5b50\n\tint rs;//\u53f3\u513f\u5b50\n\tint c;//\u5b83\u672c\u8eab\n\tdata(){\n\t\tls=-1;\n\t\trs=-1;\n\t\tc=-1;\n\t};\n}a[1000005];\nint n,ans=1,f;\nvoid check(int l,int r)\n{\n\tif(l==-1 && r==-1) return ;//\u8fb9\u754c\uff0c\u5982\u679c\u6ca1\u6709\u513f\u5b50\u4e86\u5c31\u8fd4\u56de\n\tif(a[l].c==-1 || a[r].c==-1 || a[l].c!=a[r].c) {f=0;return ;}\n\tcheck(a[l].rs,a[r].ls);\n\tcheck(a[l].ls,a[r].rs);\n}\nint sum(int id)//\u6c42\u548c\n{\n\tif(id==-1) return 0;\n\treturn sum(a[id].ls)+sum(a[id].rs)+1;//\u5de6\u5b50\u6811+\u53f3\u5b50\u6811+\u5b83\u672c\u8eab\n}\nint main()\n{\n    //\u8f93\u5165\u4e0d\u591a\u8bb2\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t    cin>>a[i].c;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i].ls>>a[i].rs;\t\n\tfor(int i=1;i<=n;i++)//\u679a\u4e3e\u4e00\u4e2a\u8282\u70b9\n\t{\n\t\tf=1;//\u5168\u5c40\u53d8\u91cf\uff0c\u9ed8\u8ba4\u4ee5\u8fd9\u4e2a\u8282\u70b9\u51fa\u53d1\u7684\u6811\u662f\u4e00\u9897\u5bf9\u79f0\u4e8c\u53c9\u6811\n\t\tcheck(a[i].ls,a[i].rs);//\u68c0\u67e5\u4ee5\u8fd9\u4e2a\u6839\u8282\u70b9\u51fa\u53d1\u7684\u4e8c\u53c9\u6811\n\t\tif(f) ans=max(ans,sum(i));//\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\u5c31\u627e\u4e00\u68f5\u6700\u5927\u7684\u6811\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\t\n}\n```",
        "postTime": 1542977806,
        "uid": 67912,
        "name": "\u767d\u53b6\u51af\u5f13\u543f\u6c35",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u8003\u573a\u4e0a\u83ab\u540d\u60f3\u51fa\u7684\u975e\u6b63\u89e3\n\n\u56e0\u4e3a\u6ca1\u6709\u53d1\u73b0\u66b4\u641c\u7684\u590d\u6742\u5ea6\u662f$O(nlogn)$\uff0c\u6240\u4ee5\u6211\u8bd5\u56fe\u5199\u4e86\u4e00\u4e2a$O(n)$\u7b97\u6cd5~\n\n\u901a\u8fc7\u6811\u7684\u904d\u5386\u548c\u56de\u6eaf\u7ed9\u4e88\u6bcf\u4e2a\u5b50\u6811\u4e00\u4e2a\u6743\u503c\uff0c\u8fd9\u4e2a\u503c\u4e3a\uff1a\n\n\u5176\u5de6\u5b50\u6811\u7684\u503c\\*\u4e00\u4e2a\u968f\u673a\u6570+\u5176\u53f3\u5b50\u6811\u7684\u503c\\*\u4e00\u4e2a\u968f\u673a\u6570+\n\u5f53\u524d\u5b50\u6811\u6839\u8282\u70b9\u6743\u503c\\*\u4e00\u4e2a\u968f\u673a\u6570\n\n\u518d\u770b\u8fd9\u4e2a\u56fe\n\n![](https://cdn.luogu.com.cn/upload/pic/75641.png)\n\n\u6b64\u65f6\u8fd9\u68f5\u6811\u4e3a\u4e00\u68f5\u5bf9\u79f0\u4e8c\u53c9\u6811\uff0c\u4f46\u662f\u5de6\u53f3\u5b50\u6811\u7684\u6743\u503c\u5e76\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u8981\u600e\u4e48\u6539\u5462\uff1f\n\n\u5176\u5b9e\u6211\u4eec\u53ea\u9700\u5c06\u53f3\u5b50\u6811\u7684\u5de6\u53f3\u5b50\u6811\u6240\u4e58\u7684\u503c\u5bf9\u8c03\u5373\u53ef\uff0c\u5982\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/75643.png)\n\n\u663e\u800c\u6613\u89c1\u7684\u662f\uff0c\u5982\u679c\u4e0d\u88ab\u5361\uff0c\u53ea\u8981\u5f53\u524d\u5b50\u6811\u7684\u5de6\u53f3\u5b50\u6811\u6743\u503c\u76f8\u540c\uff0c\u90a3\u4e48\u5f53\u524d\u8fd9\u4e2a\u5b50\u6811\u5373\u4e3a\u5bf9\u79f0\u4e8c\u53c9\u6811\u3002\n\n\u53ef\u60dc\u7684\u662f\uff0c\u6709\u4e9b\u70b9\u5c31\u662f\u4f1a\u5361\u968f\u673a\u6570\uff0c\u53ea\u901a\u8fc7\u4e58\u6cd5\u4f1awa17\u4e2a\u70b9\uff0c\u6700\u9ad8\u53ea\u80fd\u5f97\u523096\u5206\n\n\u81f3\u4e8e\u6700\u540e\u600e\u4e48\u8fc7\u7684\uff0c\u56e0\u4e3a\u5076\u7136\u95f4\u6211\u5728\\*\u968f\u673a\u6570\u65f6\u53c8mod\u4e86\u4e00\u4e2a\u968f\u673a\u6570\uff0c\u7136\u540e\u5c31\u8fc7\u4e86\n\n\u4f46\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8dd1\u5f97\u6bd4$O(nlogn)$\u8fd8\u6162\uff0c\u4f30\u8ba1\u662f\u9a6c\u8702\u4e11\uff1f\n\n\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <string>\n#include <iostream>\nusing namespace std;\nint n,zs[1100001],jd[1100001],ans;\nstruct tree{\n    int l,r,val;\n}a[1100001];\nint find(int now){\n    if(a[now].l==-1&&a[now].r==-1){\n        jd[now]=1;return 1;\n    }\n    int num=0;\n    if(a[now].l!=-1)num+=find(a[now].l);\n    if(a[now].r!=-1)num+=find(a[now].r);\n    jd[now]=num+1;\n    return num+1;\n}\nlong long dfs(int now,int fx){\n    if(a[now].l==-1&&a[now].r==-1){\n        return a[now].val;\n    }\n    long long s1=0,s2=0;\n    if(a[now].l!=-1)s1=dfs(a[now].l,1);\n    if(a[now].r!=-1)s2=dfs(a[now].r,2);\n    if(s1==s2){\n        ans=max(ans,jd[now]);\n    }//\u5982\u679c\u5de6\u53f3\u5b50\u6811\u6743\u503c\u76f8\u7b49\uff0c\u66f4\u65b0\u7b54\u6848\n    if(fx==1)return a[now].val*114514+s1*2147483647+s2*1000000009%3874124244;\n    else if(fx==2)return a[now].val*114514+s1*1000000009%3874124244+s2*2147483647;\n    else return a[now].val+s1+s2;\n}//\u6709\u4eba\u53ef\u80fd\u4f1a\u6015\u6240\u5f97\u7684\u6570\u5b57\u8d85\u8fc7longlong\u8303\u56f4\u6ea2\u51fa\uff0c\u4f46\u662f\u6ea2\u51fa\u6240\u4ea7\u751f\u7684\u6570\u503c\u4ecd\u7136\u53ef\u4ee5\u7528\u6765\u6bd4\u8f83\uff0c\u6240\u4ee5\u4e0d\u5f71\u54cd\nint main(){\n    scanf(\"%d\",&n);ans=1;//\u7b54\u6848\u81f3\u5c11\u4e3a1\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i].val);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d\",&a[i].l,&a[i].r);\n    }\n    find(1);//\u5148\u4e00\u904ddfs\u6c42\u51fa\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5b58\u5728jd[i]\u4e2d\n    dfs(1,0);//\u518d\u4e00\u904ddfs\u627e\u6700\u5927\u5bf9\u79f0\u4e8c\u53c9\u6811\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1567070684,
        "uid": 14559,
        "name": "AFOier",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": " \u4e3a\u4ec0\u4e48\u6211\u7684hash\u6b63\u89e3,\u4ee3\u7801\u7b80\u6d01,\u590d\u6742\u5ea6O(n)\u9898\u89e3,\u7ba1\u7406\u5458\u5927\u4f6c\u4e0d\u7ed9\u6211\u8fc7\u5462?\u9996\u5148O(n)\u9898\u89e3\u6ca1\u51e0\u7bc7\u5427?hash\u6ca1\u51e0\u7bc7\u5427?\u8bf7\u7ba1\u7406\u5458\u5927\u4f6c\u4ed4\u7ec6\u770b\u770b\u6211\u7684\u9898\u89e3\u548c\u54ea\u4e00\u7bc7\u601d\u8def\u4e00\u6837\u4e86?(~~\u6211\u7684\u7384\u5b66\u7ffb\u8f6c\u6811hash\u554a~~)\n### [\u6211\u7684\u535a\u5ba2\u8d85\u7ea7\u597d\u770b](http://ch66.cf/159.html)\n## \u6211\u7684\u7b2c\u4e00\u9053\u6811\u54c8\u5e0c\n### \u80cc\u666f:\n\u6b64\u9898\u53ef\u4ee5\u8bf4\u662f\u6211NOIP2018\u6253\u7684\u6700\u6f02\u4eae\u7684\u4e00\u9053\u9898\n\n\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6O(n)\u53ef\u662f\u6211\u5728i5\u7684\u673a\u5b50\u4e0a\u8dd1\u51fa\u4e863000ms+????\n\n\u8003\u5b8c\u4e4b\u540e\u770b\u6574\u4e2a\u6c5f\u897f\u8d5b\u533a\u53ea\u6709\u6211\u4e00\u4e2a\u4eba\u6253\u51fa\u6765\u4e86\uff08~~\u597d\u5f00\u5fc3,\u636e\u8bf4chen_zhe\u5927\u4f6c\u5f53\u573a\u90fd\u6ca1\u6709\u6253\u51fa\u6765~~\uff09\n\n\u4e4b\u540e\u6765\u6d1b\u8c37\u901b\u4e86\u4e00\u5708\u9898\u89e3\uff0c\u6ca1\u6709\u770b\u5230\u6211\u6ee1\u610f\u7684\u3002\u3002\u3002\u3002\u4e0d\u662f\u7f16\u8bd1\u51fa\u6765\u4e00\u5927\u5806\u8b66\u544a\u5c31\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u800c\u4e14\u6211\u7684\u601d\u8def~~\u8c8c\u4f3c\u5168\u56fd\u7b2c\u4e00\u65e0\u4e8c\uff1f~~\n\n\u6240\u4ee5\u5f88\u62b1\u6b49\u65f6\u9694\u51e0\u4e2a\u6708\u624d\u53d1\u8868\u8fd9\u4e00\u7247\u9898\u89e3QAQ\uff0c\u5927\u5bb6\u4e92\u76f8\u5b66\u4e60\u4e00\u4e0b\n\n### ~~\u6211\u5728\u8003\u8bd5\u65f6\u5927\u4fbf\u65f6\u95f4\u65e0\u5e08\u81ea\u901a\u60f3\u51fa\u6765\u7684\u7384\u5b66\u6811\u54c8\u5e0c~~\n\n\u5176\u5b9e\u8dd1\u4e00\u8fb9dfs\u5c31\u597d\u4e86\n\n#### \u539f\u7406\uff1a\u82e5\u4e00\u4e2a\u6811\u5bf9\u79f0\uff0c\u90a3\u4e48\u5c06\u4ed6\u7684\u5de6\u5b50\u6811\u7ffb\u8f6c\u4e00\u904d\uff08\u955c\u9762\u6210\u50cf\u5dee\u4e0d\u591a\uff09\u5c06\u7b49\u4e8e\u4ed6\u7684\u53f3\u5b50\u6811\uff0c\u5224\u65ad\u76f8\u7b49\u7684\u65b9\u6cd5\u5c31\u662f\u54c8\u5e0c\u5566\n\n\u6c42\u54c8\u5e0c\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u628a\u4ed6\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u54c8\u5e0c\u503c\u54c8\u5e0c\u4e00\u4e0b\u5c31\u662f\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u54c8\u5e0c\u503c\uff0c\u518d\u4e00\u5c42\u4e00\u5c42\u9012\u5f52\u4e0a\u53bb\u5c31Ojbk\u4e86\n\n\u81f3\u4e8e\u7ffb\u8f6c\uff08~~\u8fd9\u4e48\u5f31\u667a\u7684\u95ee\u9898\u9700\u8981\u6211\u8bf4\u5417\uff1f~~\uff09\uff0cswap\u4e00\u4e0b\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u54c8\u5e0c\u503c\u4e0d\u5c31\u662f\u4e86\n\n#### \u6700\u540e\u732e\u4e0a\u6211\u8003\u8bd5\u65f6\u6253\u51fa\u6765\u7684\u4ee3\u7801\uff08left\u6570\u7ec4\u649e\u4e0a\u5173\u952e\u5b57\u52a0\u4e86\u4e00\u4e2a\u4e0b\u5212\u7ebf\uff09\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint ans,dis[1000005],_left[1000005],_right[1000005],n;\nint hash(int ha,int hb,int hc) {//\u7384\u5b66\u6811\u54c8\u5e0c\n    ha*=13331;\n    ha%=INT_MAX;\n    ha+=hb;\n    ha%=INT_MAX;\n    ha*=13331;\n    ha%=INT_MAX;\n    ha+=hc;\n    ha%=INT_MAX;\n    ha*=13331;\n    ha%=INT_MAX;\n    return ha;\n}\npair<long long,int> dfs(int t,bool CanIGo) {\n//first\u5b58\u54c8\u5e0c\u503c\uff0csecond\u5b58\u6811\u7684\u5b50\u8282\u70b9\u7684\u4e2a\u6570\n    pair<int,int> QwQ;\n    if(t==-1) {\n        QwQ.first=1;\n        QwQ.second=0;\n        return QwQ;\n    }\n    pair<long long,int> l=dfs(_left[t],1);\n    pair<long long,int> r=dfs(_right[t],0);\n    if(CanIGo) swap(l,r);//CanIGo\u5b58\u5f53\u524d\u8282\u70b9\u662f\u4e0d\u662f\u7236\u8282\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u5982\u679c\u662f\u5c31swap\u54c8\u5e0c\u503c\u955c\u9762\u6210\u50cf\uff08\u8fd9\u4e00\u6b65\u6700\u91cd\u8981\uff01\uff01\uff01\uff09\n    QwQ.second=l.second+r.second+1;\n    if(l.first==r.first&&QwQ.second>ans) ans=QwQ.second;//\u66f4\u65b0\u503c\n    QwQ.first=hash(l.first,r.first,dis[t]);\n    if(QwQ.first<=0) QwQ.first+=INT_MAX;\n    //\u9632\u6b62\u6ea2\u51fa\uff0c\u8003\u8bd5\u7684\u65f6\u5019\u8111\u5b50\u4e0d\u597d\u4f7f\u80cc\u4e0d\u51fa\u6765unsigned\u8fd9\u4e2a\u8bcd\u54c8\u54c8\u54c8\n    return QwQ;\n}\nint main() {\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",dis+i);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",_left+i,_right+i);\n    dfs(1,1);\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1550194860,
        "uid": 92288,
        "name": "ChenHacker",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u8003\u573a\u4e0a\uff0c\u4e3a\u4e86\u5199T3\u727a\u7272\u4e86\u5f88\u591a\u65f6\u95f4\u2026\u2026\n\n\u6700\u540e10min\uff0c\u770b\u4e86\u4e00\u773cT4\uff0c\u76f4\u89c9\u544a\u8bc9\u6211\u6b63\u89e3\u662f$O(n)$\u6216$O(nlogn)$\uff0c\u4f46\u660e\u663e\u6765\u4e0d\u53ca\u4e86\uff0c\u968f\u624b\u6253\u4e2a\u66b4\u529b\u597d\u4e86\u3002\n\n5min\u5199\u5b8c\u3002\u6d4b\u4e00\u4e0b\u6837\u4f8b\u3002\u8bf6\uff0c\u5927\u6837\u4f8b\u8fc7\u4e86\uff1f\uff1f\uff1f\n\n\u7136\u540e\u5c31\u6c34\u8fc7\u53bb\u4e86\uff08\u542c\u8bf4\u4eca\u5e74\u7684\u8bc4\u6d4b\u59ec\u8fd8\u8dd1\u5f97\u7279\u522b\u5feb\uff09\u3002\n\n\u732e\u4e0aPascal\u4ee3\u7801\uff1a\n\n```\n{P5018}\nvar\n  a,l,r:array[1..1000000]of longint;\n  n,i,x,max:longint;\nfunction dfs(x,y:longint):longint;//\u6bd4\u8f83\u4e24\u9897\u5b50\u6811\u662f\u5426\u5bf9\u79f0\u5e76\u7d2f\u8ba1\u8282\u70b9\u6570\u91cf\nvar\n  t:longint;\nbegin\n  if (a[x]<>a[y]) or ((l[x]>0)<>(r[y]>0)) or ((l[y]>0)<>(r[x]>0)) then//\u5982\u679c\u4e24\u9897\u5b50\u6811\u7684\u6839\u7684\u6743\u503c\u4e0d\u4e00\u6837\u6216\u8005\u7ed3\u6784\u4e0d\u4e00\u6837\n    exit(0);                   //\u4e0d\u5bf9\uff0c\u9000\u51fa\n  dfs:=2;\n  if l[x]>0 then               //\u5982\u679c\u6709\u5de6\u5b50\u6811\u7684\u5de6\u5b50\u6811\u7684\u8bdd\uff08\u4e5f\u5c31\u662f\u6709\u53f3\u5b50\u6811\u7684\u53f3\u5b50\u6811\uff09\n  begin\n    t:=dfs(l[x],r[y]);         //\u6bd4\u8f83\u5de6\u5b50\u6811\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u53f3\u5b50\u6811\n    if t=0 then                //\u5982\u679c\u4e0d\u5bf9\n      exit(0);                 //\u4e0d\u5bf9\uff0c\u9000\u51fa\n    inc(dfs,t);                //\u7d2f\u8ba1\u8282\u70b9\u6570\u91cf\n  end;\n  if l[y]>0 then               //\u57fa\u672c\u540c\u4e0a\n  begin\n    t:=dfs(l[y],r[x]);         //\u6bd4\u8f83\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811\n    if t=0 then\n      exit(0);\n    inc(dfs,t);\n  end;\nend;\nfunction f(x:longint):longint; //\u8ba1\u7b97\u4ee5x\u4e3a\u6839\u7684\u5bf9\u79f0\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u91cf\nbegin\n  if (l[x]=-1) and (r[x]=-1) then//\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\n    exit(1)                    //\u4e0d\u7528\u641c\u4e86\uff0c\u53cd\u6b63\u5c31\u4e00\u4e2a\u6839\u8282\u70b9\n  else\n    if (l[x]=-1) or (r[x]=-1) then//\u5982\u679c\u6709\u5de6\u5b50\u6811\u6ca1\u53f3\u5b50\u6811\u6216\u8005\u6709\u53f3\u5b50\u6811\u6ca1\u5de6\u5b50\u6811\n      exit(0)                  //\u4e0d\u5bf9\u79f0\uff0c\u8fd4\u56de0\n    else\n      exit(dfs(l[x],r[x])+1);  //\u6bd4\u8f83\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u518d\u52a0\u4e0a\u6839\u8282\u70b9\uff08\u5982\u679c\u4e0d\u5bf9\u79f0\u5c31\u8fd4\u56de1\uff0c\u4e0d\u8fc7\u5e76\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff09\nend;\nbegin\n  read(n);\n  for i:=1 to n do             //\u8bfb\u5165\n    read(a[i]);\n  for i:=1 to n do\n    read(l[i],r[i]);\n  max:=0;\n  for i:=1 to n do             //\u679a\u4e3e\u5bf9\u79f0\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\n  begin\n    x:=f(i);\n    if x>max then\n      max:=x;\n  end;\n  writeln(max);\nend.\n```",
        "postTime": 1542620657,
        "uid": 40241,
        "name": "dblark",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u7eaa\u5ff5\u4e00\u4e0b\u8fd9\u9898\u8003\u573a$AC$,\u4ece\u800c\u7a33\u4f4f\u4e86\u7701\u4e00$qaq$.\u5176\u5b9e\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u9898\u6ca1\u6709$T3$\u96be\uff0c\uff0c\u53ea\u8981\u7a0d\u5fae\u6a21\u62df\u4e00\u4e0b\u5c31\u597d\u4e86\u3002    \n## \u6b63\u6587\u90e8\u5206         \n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u753b\u4e00\u9897\u4e8c\u53c9\u6811   \n![](http://t1.aixinxi.net/o_1csemvems1t69p9mah81cf1mm0c.png-w.jpg)     \n\u56fe\u7247\u6765\u81ea\u4e8e\u4e92\u8054\u7f51\u3002\u81f3\u4e8e\u70b9\u6743\u4e0d\u7528\u5728\u610f\u3002     \n\u7136\u540e\u6211\u4eec\u5c31\u627e\u5230\u4e86\u4e00\u79cd\u6a21\u62df\u65b9\u6cd5\uff1a     \n**\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u6709\u4e24\u79cd\u5f80\u4e0b\u9012\u63a8\u65b9\u6cd5\uff1a**  \n\u2460\uff1a\u5de6\u8fb9\u8282\u70b9\u5411\u5de6\u8fb9\u8d70\uff0c\u53f3\u8fb9\u8282\u70b9\u5f80\u53f3\u8fb9\u8d70    \n\u2461\uff1a\u5de6\u8fb9\u8282\u70b9\u5f80\u53f3\u8fb9\u8d70\uff0c\u53f3\u8fb9\u8282\u70b9\u5f80\u5de6\u8fb9\u8d70\u3002    \n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684?\u5176\u5b9e\u81ea\u5df1\u5728\u8fd9\u5f20\u56fe\u4e0a\u6a21\u62df\u4e00\u4e0b\u5c31\u597d\u4e86\u3002   \n\u6709\u4e86\u57fa\u672c\u7684\u601d\u60f3\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6784\u9020\u51fd\u6570\u3002    \n\u5bf9\u4e8e```check(int,int)```\u51fd\u6570\uff0c\u8868\u793a\u5f53\u524d\u9012\u5f52\u5230\u7684```L```\u548c```R```\u3002\u770b\u4e00\u4e0b\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\uff1a  \n```cpp  \n    if(now_l == -1 && now_r == -1) return 1;    \n    //\u6ca1\u6709\u8282\u70b9\uff0c\u8fd4\u56de\u6b63\u786e\n    if(val[now_l] != val[now_r]) return 0;\n    //\u6743\u503c\u4e0d\u7b49\uff0c\u8fd4\u56de\u9519\u8bef\n    if(!in_chk(now_l,now_r)) return 0;   \n    //\u7ed3\u6784\u4e0d\u7b49\uff0c\u8fd4\u56de\u9519\u8bef\n    int i;\n    if(!check(tree[now_l][0] , tree[now_r][1]))\n    //\u9012\u5f52\u60c5\u51b51\u4e0d\u6ee1\u8db3\uff0c\u8fd4\u56de\u9519\u8bef\n    return 0;\n    if(!check(tree[now_l][1] , tree[now_r][0]))\n    //\u9012\u5f52\u60c5\u51b52\u4e0d\u6ee1\u8db3\uff0c\u8fd4\u56de\u9519\u8bef\n    return 0;\n    //\u4e24\u79cd\u60c5\u51b5\u90fd\u6ee1\u8db3\uff0c\u8fd4\u56de\u6b63\u786e\u3002\n    return 1; \n```       \n\u5bf9\u4e8e```in_chk```\u51fd\u6570\uff0c\u65e0\u975e\u5c31\u662f\u7279\u5224\u4e00\u4e0b```-1```\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u81ea\u884c\u7406\u89e3\u3002         \n\u5bf9\u4e8e```memson```\u51fd\u6570\uff0c\u9884\u5904\u7406\u51fa\u6240\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6570\uff0c\u6ce8\u610f\u8fd4\u56de\u65f6\u8981+1,\u56e0\u4e3a\u8fd8\u8981\u7b97\u4e0a\u81ea\u8eab\u3002         \n\u6700\u540e\u9644\u4e0a\u8003\u573a\u4ee3\u7801    \n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\n#define il inline\n#define gc getchar\nconst int MAXN = 1e6 + 10;\nconst int INF = 0x7f7f7f7f;\nusing namespace std;\nint sons[MAXN],tree[MAXN][2],val[MAXN];\nint n,m,i,j,k,Ans = -INF;\nil int read() {\n    int ret = 0;char c;bool sign = 0;\n    for(c = gc();!isdigit(c);c = gc()) sign |= c == '-';\n    for(;isdigit(c);c = gc()) ret = (ret << 1) + (ret << 3) + (c ^ 48);\n    return sign ? -ret : ret;\n}\nint memson(int now) {\n    int ret = 0;\n    if(tree[now][0] != -1) ret += memson(tree[now][0]);\n    if(tree[now][1] != -1) ret += memson(tree[now][1]);\n    return sons[now] = ret + 1;\n}\nil bool in_chk(int a,int b) {\n    if(tree[a][0] == -1 && tree[b][1] != -1) return 0;\n    if(tree[a][1] == -1 && tree[b][0] != -1) return 0;\n    if(tree[b][0] == -1 && tree[a][1] != -1) return 0;\n    if(tree[b][1] == -1 && tree[a][0] != -1) return 0;\n    return 1;\n}\nbool check(int now_l , int now_r) {\n    if(now_l == -1 && now_r == -1) return 1;  \n    if(val[now_l] != val[now_r]) return 0;\n    if(!in_chk(now_l,now_r)) return 0;\n    int i;\n    if(!check(tree[now_l][0] , tree[now_r][1])) return 0;\n    if(!check(tree[now_l][1] , tree[now_r][0])) return 0;\n    return 1; \n}\nint main() {\n    n = read();\n    for(i = 1;i <= n;i++) val[i] = read();\n    for(i = 1;i <= n;i++) tree[i][0] = read(),tree[i][1] = read();\n    memson(1);\t\n    for(i = 1;i <= n;i++) {\n        if(tree[i][0] == -1 && tree[i][1] == -1) Ans = max(Ans,1);\n        else {\n            if(val[tree[i][0]] != val[tree[i][1]]) continue;\n            if(tree[i][0] == -1 && tree[i][1] != -1) continue;\n            if(tree[i][1] == -1 && tree[i][0] != -1) continue;\n            if(check(tree[i][0],tree[i][1])) Ans = max(Ans,sons[i]);\t\n        } \n    }\n    printf(\"%lld\",1LL * Ans);\n    return 0;\n}\n```",
        "postTime": 1542387839,
        "uid": 114320,
        "name": "\u843d\u6c50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "## \u5bf9\u79f0\u4e8c\u53c9\u6811\n###### $\u8003\u8bd5\u65f6\u88ab\u7b2c\u4e09\u9898\u5361\u4e86QAQ$\n### \u601d\u8def\uff1a\u6784\u5efa\u4e09\u4e2a\u6570\u7ec4\uff0cv[],\u6743\u503c,ch[][2]\uff0c\u5b50\u6811\uff0cc[]\uff0c\u5b50\u8282\u70b9\u4e2a\u6570\n### \u7136\u540edfs\u641c\u7d22\u5373\u53ef\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1000000 + 5;\nint n,v[maxn],ch[maxn][2],c[maxn],ans=1;//\u5e38\u4f8b,ans\u8868\u6700\u5c0f\u5b50\u6811\u4e2a\u6570\nbool same(int i,int j)//\u5224\u7f16\u53f7\u4e3ai,j\u7684\u5b50\u8282\u70b9\u53ca\u5b50\u6811\u662f\u5426\u5bf9\u79f0\n{\n    if(i==j)return 1;//\u540c\u5b50\u6811\uff0c\u76f4\u63a5\u76f8\u7b49\n    if(i==-1||j==-1)return 0;\n    //\u53bb\u6389\u540c\u5b50\u6811\u540e\uff0c\u6709\u4e00\u4e2a\u7ed3\u6784\u4e0d\u540c\u5219\u4e0d\u53ef\uff08\u5de6\u7f3a\u6216\u53f3\u7f3a\uff09\n    return v[i]==v[j]&&same(ch[i][0],ch[j][1])&&same(ch[i][1],ch[j][0]);//\u8fd4\u56de\u6761\u4ef6\uff1a\u6743\u503c\u76f8\u7b49\u4e14\u5de6\u5916\u5bf9\u53f3\u5916\u5bf9\u79f0\u4e14\u5de6\u5185\u5bf9\u53f3\u5185\u5bf9\u79f0\n}\nint dfs(int i)\n{\n    if(i==-1)return 0;//\u641c\u5230-1\u53ca\u65e0\u5b50\u6811\u5219\u88c1\u6389\n    c[i]+=dfs(ch[i][0]);\n    c[i]+=dfs(ch[i][1]);\n    c[i]++;//c[i]\u66f4\u65b0\u4e3a\u5de6\u8282\u70b9\u4e2a\u6570+\u53f3\u8282\u70b9\u4e2a\u6570+1(\u81ea\u5df1)\n    if(same(ch[i][0],ch[i][1]))\n        ans=max(ans,c[i]);//\u5982\u679c\u5de6\u53f3\u5bf9\u79f0\u4e14\u5b50\u6811\u4e2a\u6570\u5927\u4e8eans\uff0c\u53d6\u66f4\u5927\u503c\n\treturn c[i];//\u8fd4\u56de\u5b50\u8282\u70b9\u4e2a\u6570\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&v[i]);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",&ch[i][0],&ch[i][1]);\n    dfs(1);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1542636398,
        "uid": 39993,
        "name": "\u5143\u5915",
        "ccfLevel": 0,
        "title": "\u5bf9\u79f0\u4e8c\u53c9\u6811"
    },
    {
        "content": "##### \uff08\u6211\u5728\u6b64\u53ea\u7814\u7a76\u6211\u7684\u6b63\u89e3\u597d\u4e86\u3002\uff09\n\n\u9996\u5148\u6211\u4eec\u4e00\u770b\u8fd9\u4e8c\u53c9\u6811\u5c31\u60f3\u5230\u7528\u666e\u901a\u7684\u65b9\u6cd5\u5b58\u50a8\n\uff08\u76f4\u63a5\u7528l_i=ix2,r_i=ix2+1\uff09\n\u7136\u800c\u53ea\u80fd\u9002\u5e94\u524d16\u4e2a\u70b9\u3002\n\n\u6240\u4ee5\u5f88\u591a\u540c\u5b66\u76f4\u63a5\u7528\u4f20\u7edf\u6811\u50a8\u5b58\uff0c\u7136\u540e\u7528\u9012\u5f52\u89e3\uff0c\u7136\u540e\u5b50\u6811\u4e0a\u4f20\u9012\u4fe1\u606f\uff08\u53ef\u80fd\u6709\u89e3\u6cd5\uff0c\u53ef\u672c\u849f\u84bb\u4e0d\u4f1a\uff09\u592a\u9ebb\u70e6\u5fc3\u6001\u7206\u70b8\uff0c\u7136\u540e\u5f00\u59cb\u9a97\u5206\u5565\u7684\u3002\n\n## \u6211\u4eec\u8001\u5e08\u5f53\u5e74\u8bf4\u4e0d\u4f1a\u8003\u7ed3\u6784\u7684\uff0c\u7ed3\u679c\u3002\u3002\u3002\n\n\uff08\u8dd1\u9898\u4e86\uff09\u672c\u9898\u7684\u6b63\u771f\u89e3\u6cd5\u5176\u5b9e\u770b\u5f97\u61c2\u7684\u90fd\u4e0d\u96be\u3002\n\n\u56e0\u4e3a\u5bf9\u79f0\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u5b83~~\u538b\u6210~~\u6253\u5370\u6210\u4e00\u4e2a\u4e2d\u5e8f\u6392\u5217\u7684\u6570\u5217\u3002\n\n\u5982\u4e0b\uff1a\n      \n![\u4e2d\u5e8f\u6392\u5217](https://cdn.luogu.com.cn/upload/image_hosting/6bhwjr0z.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u6211\u4eec\u53ef\u4ee5\u95f4\u63a5\u5730\u770b\u4f5c\u662f\u4e00\u9053\u6c42\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217\u7684\u9898\u76ee\u3002\n\n### \u7b49\u7b49\uff0c\u4e2d\u5e8f\u5217\u4e0d\u552f\u4e00\u554a\n\u77e5\u9053\u4e0d\u552f\u4e00\uff0c\u53ef\u54b1\u4eec\u662f\u7531\u6811\u5f97\u5e8f\u5217\u7684\u5440\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6765\u4e2a\u4e2d\u5e8f\u5217 2. 0\u5c31\u597d\u4e86\u5440\u3002\n\n\u6dfb\u52a0\u4e0a\u4ee5\u4e0b\u51e0\u4e2a\u53d8\u91cf\u6765\u6bd4\u8f83\uff1a\n\n+ LT\uff1a\u5de6\u5b50\u6811\u5bbd\n+ RT\uff1a\u53f3\u5b50\u6811\u5bbd\n* PL\uff1a\u5de6\u5b50\u81c2\u957f\n* PR\uff1a\u53f3\u5b50\u81c2\u957f\n\n\u5728\u4f7f\u7528\u4e00\u4e2a\u9012\u5f52\u628a\u4e2d\u5e8f\u6392\u52172. 0\u6253\u5370\u51fa\u6765\u5373\u53ef\u3002\n\n###### \u4e0b\u9762\u7684P[1][X]\u548cP[3][X]\u5c31\u662fPL\u548cPR\n~~\uff08\u633a\u77ed\u7684\uff09~~\n\n```cpp\n//\t\t     1 \n//\t\t   /   \\\n//\t\t  3    3\n//\t\t / \\  / \t\n//\t\t2  2 2  \n//\t\t     ||\n//\t\t   \\ ||/\n//\t\t    \\ /\n//      232123\n//P0=>\u6743\u503c\tP1=>\u5de6\u5b50\u81c2 \tP2=>\u5e8f\u53f7\tP3=>\u53f3\u5b50\u81c2 */\n#include<bits/stdc++.h>\nusing namespace std;\nint n,N[1000005],L[1000005],R[1000005],P[4][1000005],LT[1000005],RT[1000005];\n//*\t\u6743\u503c\t   \u5de6\u8282\u70b9     \u53f3\u8282\u70b9        \u6253\u5370\u5217\u8868\t  \u5de6\u5b50\u6811\u5bbd\t   \u53f3\u5b50\u6811\u5bbd \nint p=0,ans=0;bool flag;\nint prin(int num){\t\t// \u5e8f\u53f7\n\tif(num==-1)return 0;\n\tLT[num]=prin(L[num]);\n\tp++;int V=p;\n\tP[0][V]=N[num];\t\t\t//\t\u6743\u503c\t\t\t\t\t\n\tif(L[num]!=-1)P[1][V]=RT[L[num]]+1;\t\t//\u5de6\u5b50\u81c2\n\tP[2][V]=num;\t\t\t//\t\u5e8f\u53f7\t\t\n\tRT[num]=prin(R[num]);\n\tif(R[num]!=-1)P[3][V]=LT[R[num]]+1;\t\t//\u53f3\u5b50\u81c2\n\treturn LT[num]+RT[num]+1;\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&N[i]);\n\tfor(int i=1;i<=n;i++)scanf(\"%d %d\",&L[i],&R[i]);\n\tprin(1);\n\tfor(int i=1;i<=p;i++)\n\tif(LT[P[2][i]]==RT[P[2][i]]&&RT[P[2][i]]>ans){\n\t\tflag=true;\n\t\tfor(int j=1;j<=LT[P[2][i]];j++)\n\t\tif(P[0][i+j]!=P[0][i-j]||P[1][i+j]!=P[3][i-j]||P[1][i-j]!=P[3][i+j]){flag=false;break;}\n\t\tif(flag==true)ans=RT[P[2][i]];\n\t}\n\tcout<<ans*2+1;\n\treturn 0;\n}\n//for(int i=1;i<p;i++)cout<<LT[i]<<\" \";cout<<endl;//P[0][i]\n//for(int i=1;i<p;i++)cout<<RT[i]<<\" \";cout<<endl;//P[1][i]\n```\n### \u76f8\u4fe1\u7ecf\u9a8c\u4e30\u5bcc\u7684OIer\u4e00\u5b9a\u80fd\u5206\u5206\u949f\u6253\u51fa\u6765\u3002\uff08bu",
        "postTime": 1578222129,
        "uid": 124225,
        "name": "\u6bd4\u5229\u53ea\u67091\u26427\u5c81",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "### 1. \u5b58\u56fe\n\u8fd9\u9053\u9898\u6709\u5f88\u591a\u79cd\u5b58\u56fe\u7684\u65b9\u6cd5\uff0c\u6211\u91c7\u7528\u4e86**\u7ed3\u6784\u4f53**\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nstruct node\n{\n\tint val, lch, rch;\n\tlong long size;\n} a[1000005];\n```\n\u5176\u4e2d\uff0c\u6570\u7ec4\u4e0b\u6807\u4e3a\u8282\u70b9\u7684$id$\uff0c$val$\u8bb0\u5f55\u6743\u503c\uff0c$lch$, $rch$\u5206\u522b\u8bb0\u5f55\u5de6\u3001\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9$id$, $size$\u662f\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff08\u4ee5\u540e\u5177\u4f53\u89e3\u91ca\uff09\n### 2. \u904d\u5386\n\u8fd9\u91cc\u7684\u904d\u5386\u662f\u4e3a\u4e86**\u8bb0\u5f55\u5b50\u6811\u5927\u5c0f**\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nvoid getSize(int u)\n{\n\ta[u].size = 1; \n\tif (a[u].lch != -1)\n\t{\n\t\tgetSize(a[u].lch);\n\t\ta[u].size += a[a[u].lch].size;\n\t}\n\tif (a[u].rch != -1)\n\t{\n\t\tgetSize(a[u].rch);\n\t\ta[u].size += a[a[u].rch].size;\n\t}\n\treturn;\n}\n```\n***\u4e00\u5b9a\u8981\u8d4b\u521d\u503c\uff01\u4e00\u5b9a\u8981\u8d4b\u521d\u503c\uff01\u4e00\u5b9a\u8981\u8d4b\u521d\u503c\uff01***\n\n\u73b0\u5728\u60a8\u660e\u767d$size$\u662f\u5e72\u4ec0\u4e48\u7684\u4e86\u5427\uff1f\n## 3. \u68c0\u67e5\n\n\u5728\u904d\u5386\u4e4b\u4f59\uff0c\u6211\u4eec\u7684\u68c0\u67e5\u51fd\u6570\u8981\u5224\u65ad**\u5f53\u524d\u7ed3\u70b9\u7684\u6743\u503c**\u548c**\u5b50\u6811\u7684\u7ed3\u6784**\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nbool isValid(int u, int v)\n{\n\tif (u == -1 && v == -1) return true;\n\tif (u != -1 && v != -1 && a[u].val == a[v].val)\n\t\tif (isValid(a[u].lch, a[v].rch) && isValid(a[u].rch, a[v].lch))\n\t\t\treturn true;\n\treturn false;\n}\n```\n**\u6ce8\u610f\uff0c\u5de6\u3001\u53f3\u5b50\u82e5\u90fd\u4e0d\u5b58\u5728\uff0c\u8fd9\u9897\u6811\u4e5f\u662f\u5bf9\u79f0\u4e8c\u53c9\u6811\uff01**\n\n\u4e00\u4e9b\u4eba\u53ef\u80fd\u5bf9\u7b2c5\u884c\u4e0d\u592a\u7406\u89e3\uff0c**\u5176\u5b9e\u8fd9\u5c31\u662f\u5224\u65ad\u7ed3\u6784\u7684\u8bed\u53e5**\u3002\u5de6\u53f3\u5bf9\u79f0\u7684\u8282\u70b9\u5982\u679c\u4e5f\u6ee1\u8db3\u7b2c3\u884c\u6216\u7b2c4\u884c\u7684\u6761\u4ef6\uff0c\u5c31\u7ee7\u7eed\u9012\u5f52\u4e0b\u53bb\u3002\n\n### 4. \u6210\u578b\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\n\nstruct node\n{\n\tint val, lch, rch;\n\tlong long size;\n} a[1000005];\nint n;\nlong long ans;\n\ninline void getSize(int u)\n{\n\ta[u].size = 1; \n\tif (a[u].lch != -1)\n\t{\n\t\tgetSize(a[u].lch);\n\t\ta[u].size += a[a[u].lch].size;\n\t}\n\tif (a[u].rch != -1)\n\t{\n\t\tgetSize(a[u].rch);\n\t\ta[u].size += a[a[u].rch].size;\n\t}\n\treturn;\n}\n\ninline bool isValid(int u, int v)\n{\n\tif (u == -1 && v == -1) return true;\n\tif (u != -1 && v != -1 && a[u].val == a[v].val)\n\t\tif (isValid(a[u].lch, a[v].rch) && isValid(a[u].rch, a[v].lch))\n\t\t\treturn true;\n\treturn false;\n}\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++i)\n\t\tscanf(\"%d\", &a[i].val);\n\tfor (int i = 1; i <= n; ++i)\n\t\tscanf(\"%d %d\", &a[i].lch, &a[i].rch);\n\tgetSize(1);\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (isValid(a[i].lch, a[i].rch))\n\t\t\tans = max(ans, a[i].size);\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```\n### 5. \u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u8d85\u65f6\uff1f\n> \u65f6\u95f4\u590d\u6742\u5ea6\u6700\u9ad8\u662f**\u7edf\u8ba1\u7ed3\u679c**\u90e8\u5206\uff0c\u4f46\u4e5f\u53ea\u6709$O(n\u00b7log_n)$\uff0c\u56fa\u7136\u4e0d\u4f1a\u8d85\u65f6\u3002",
        "postTime": 1573862072,
        "uid": 178553,
        "name": "alphayangyang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "## \u672c\u8d28\u6765\u8bf4\uff0c\u8fd9\u9898\u5c31\u662f\u5224\u65ad\u4e24\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u76f8\u540c\n\n\u5728\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u54c8\u5e0c\n\n### \u90a3\u4e48\u5224\u65ad\u6811\u662f\u5426\u76f8\u540c\uff0c\u7167\u6837\u53ef\u4ee5\u7528\u54c8\u5e0c\uff08\u53ea\u662f\u8981\u52a0\u4e00\u4e9b~~\u7b80\u5355\u7684~~\u7ec6\u8282\u64cd\u4f5c\uff09\n\n~~tmd\u5c31\u662f\u8fd9\u7ec6\u8282\u64cd\u4f5c\u5bb3\u5f97\u6211\u6bd4\u8d5b\u65f6\u53ea\u670956\u5206\u2026\u2026~~\n\n\u849f\u84bb\u9898\u89e3\uff0c\u5927\u4f6c\u52ff\u55b7->\n\n\u4ee5a[x]\u8868\u793a\u70b9x\u7684\u6743\u503c\uff0csn[x][0]\u548csn[x][1]\u8868\u793ax\u7684\u4e24\u4e2a\u513f\u5b50,sz[x]\u8868\u793a\u5b50\u6811\u5927\u5c0f\uff0ch[x]\u8868\u793a\u5b50\u6811\u54c8\u5e0c\u503c\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u53ef\u4ee5\u5b9a\u4e49\u68110\u4e3a\u7a7a\uff0c\u5373a[0]=h[0]=sz[0]=0\n\n\u518d\u5b9a\u4e49\u81ea\u5df1\u559c\u6b22\u7684\u54c8\u5e0c\u503c\uff0c\u6ce8\u610f\u8981\u67093\u4e2a\uff08\u4e00\u4e2a\u7ed9\u5de6\u513f\u5b50\uff0c\u4e00\u4e2a\u7ed9\u53f3\u513f\u5b50\uff0c\u4e00\u4e2a\u7ed9\u81ea\u5df1\u7684\u6743\u503c\uff09\n\n\u518d\u7528dfs\u540e\u5e8f\u904d\u5386\u5e8f\u5404\u81ea\u6c42\u51fa\u5b50\u6811\u54c8\u5e0c\u503c\u548c\u5927\u5c0f\uff0c\u76f8\u7b49\u5219\u5bf9\u79f0\uff0c\u53d6\u5927\u5c0fmax\u5373\u53ef\uff0c\u65f6\u95f4O(n)\n\n### \u597d\u73b0\u5728\u6765\u8bb2dfs\u7ec6\uff08keng\uff09\u8282\uff08die\uff09\u64cd\u4f5c\n\n\u4e00\u4e2a\u5b50\u6811\u7684\u54c8\u5e0c\u503c\u53ef\u4ee5\u7531\u5b83\u4e24\u4e2a\u513f\u5b50\u7684\u54c8\u5e0c\u503c\u548c\u81ea\u5df1\u7684\u6743\u503c\u7528\u4e00\u79cd~~\u4e71\u4e03\u516b\u7cdf\u7684~~\u8ba1\u7b97\u5f97\u5230\n\n\u96be\u70b9\u5c31\u5728\u4e8e\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u8981\u7528\u4e0d\u540c\u7684\u54c8\u5e0c\u503c\u8ba1\u7b97\n\n\u4e3e\u4e2a\u6817\u5b50\n\n5\n\n1 2 2 3 3\n\n2 3\n\n4 -1\n\n-1 5\n\n-1 -1\n\n-1 -1\n\n~~\uff08\u6211\u6bd4\u8f83\u61d2\uff0c\u8bf7\u81ea\u884c\u753b\u56fe\uff09~~\n\n\u663e\u7136\u4ee5\u4e00\u4e3a\u6839\u7684\u6811\u5c31\u662f\u5bf9\u79f0\u7684\n\n\u4e5f\u5c31\u662f\u8bf4h[2]=h[3],h[4]=h[5]\u624d\u884c\n\n\u4f464\u662f\u4e00\u68f5\u5de6\u5b50\u6811\uff0c5\u662f\u4e00\u68f5\u53f3\u5b50\u6811\uff0c\u5fc5\u987b\u7528\u76f8\u540c\u7684\u54c8\u5e0c\u503c\u8ba1\u7b97\u624d\u80fd\u5f97\u5230h[4]=h[5]\n\n\u6240\u4ee5\u54c8\u5e0c\u503c\u7684\u5206\u914d\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u4e00\u4e2a\u7ed9\u5de6\u5b50\u6811\uff0c\u4e00\u4e2a\u7ed9\u53f3\u5b50\u6811\u7684\n\n\u90a3\u8be5\u5982\u4f55\u5206\u914d\u54c8\u5e0c\u503c\u5462\uff1f\n\n\u5047\u8bbe\u8981\u5224\u65ad\u4e00\u68f5\u6811\u662f\u5426\u5bf9\u79f0\uff0c\u53ef\u4ee5\u60f3\u8c61\u6210\u628a\u53f3\u5b50\u6811\u6574\u4f53\u5411\u5de6\u7ffb\u6298\uff0c\u7136\u540e\u4e0e\u5de6\u5b50\u6811\u6bd4\u8f83\u662f\u5426\u76f8\u7b49\u5373\u53ef\uff08\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u672c\u8d28\u6765\u8bf4\uff0c\u8fd9\u9898\u5c31\u662f\u5224\u65ad\u4e24\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u76f8\u540c\uff09\n\n\u53ef\u4ee5\u53d1\u73b0\u53f3\u5b50\u6811\u7684\u53f3\u5b50\u6811\u7ffb\u8fc7\u6765\u540e\u53d8\u6210\u4e86\u5de6\u5b50\u6811\uff0c\u800c\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811\u7ffb\u8fc7\u6765\u540e\u53d8\u6210\u4e86\u53f3\u5b50\u6811\n\n**\u4e8e\u662f\u5f97\u51fa\u7ed3\u8bba\uff1a\u53f3\u5b50\u6811\u7ffb\u8f6c\u540e\u4e24\u68f5\u6811\u8fdb\u884c\u6bd4\u8f83\uff0c\u4e0e\u6240\u5728\u5b50\u6811\u6839\u540c\u4e00\u5de6\u53f3\u6027\u8d28\uff08\u5c31\u662f\u8bf4\u81ea\u5df1\u662f\u4e00\u4e2a\u5de6\u513f\u5b50\u6216\u662f\u53f3\u513f\u5b50\uff09\u65f6\u4ee5\u5de6\u5b50\u6811\u770b\u5f85\uff0c\u5426\u5219\u4ee5\u53f3\u5b50\u6811\u770b\u5f85**\n\n\u6240\u4ee5\u4e0e\u81ea\u5df1\u540c\u4e00\u5de6\u53f3\u6027\u8d28\u7684\u513f\u5b50\u7528\u4e00\u4e2a\u54c8\u5e0c\u503c\uff0c\u4e0d\u540c\u7684\u7528\u53e6\u4e00\u4e2a\u54c8\u5e0c\u503c\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u4e11\u964b\u7684\u4ee3\u7801->\n\n//P\u8868\u793a\u7ed9\u81ea\u5df1\u6743\u503c\u7528\u7684\u54c8\u5e0c\u503c\uff0cSp\u4e3a\u7ed9\u513f\u5b50\u7684\u54c8\u5e0c\u503c\uff0ch[x]\u4f7f\u7528unsigned long long\u81ea\u6211\u6ea2\u51fa\uff0c\u4f7f\u7528+*^\u9632\u6b62\u51b2\u7a81\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define Rd(a) (a=read())\ninline int read(){\n    register int x;register char c(getchar());register bool k;\n    while((c<'0'||c>'9')&&c^'-')c=getchar();\n    if(c^'-')x=c&15,k=1;else x=k=0;\n    while(c=getchar(),c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c&15);\n    return k?x:-x;\n}\nvoid wr(register int a){\n    if(a<0)putchar('-'),a=-a;\n    if(a<=9)putchar(a|'0');\n    else wr(a/10),putchar((a%10)|'0');\n}\n#define Ps putchar(' ')\n#define Pe putchar('\\n')\n#define Frn0(i,a,b) for(register int i(a);i<(b);++i)\n#define Frn1(i,a,b) for(register int i(a);i<=(b);++i)\n#define Frn_(i,a,b) for(register int i(a);i>=(b);--i)\n#define Fre(a,i) for(register int i(hd[a]);i;i=nxt[i])\n#define Mst(a,x) memset(a,x,sizeof(a))\n#define INF signed(0x3f3f3f3f)\n#define NINF signed(0xc3c3c3c3)\n#define File(a) freopen(a\".in\",\"r\",stdin),freopen(a\".out\",\"w\",stdout)\n#define N (1000001)\n#define P (97)\nint n,a[N],sn[N][2],sz[N],ans;\nunsigned long long h[N];\nint const Sp[2]{323,1107};\nvoid dfs(int x,bool f);\nsigned main(){\n    Rd(n);\n    Frn1(i,1,n)Rd(a[i]);\n    Frn1(i,1,n)Frn1(k,0,1)if(Rd(sn[i][k])==-1)sn[i][k]=0;\n    dfs(1,0),wr(ans);\n    return 0;\n}\nvoid dfs(int x,bool f){\n    if(!x)return;\n    Frn1(k,0,1)dfs(sn[x][k],k),h[x]+=h[sn[x][k]]*Sp[k^f];\n    sz[x]=sz[*sn[x]]+sz[sn[x][1]]+1,h[x]^=a[x]*P;\n    if(sz[*sn[x]]==sz[sn[x][1]]&&h[*sn[x]]==h[sn[x][1]])ans=max(ans,sz[x]);\n}\n```",
        "postTime": 1549540617,
        "uid": 66199,
        "name": "Bring",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u5728\u8003\u573a\u4e0a\u7684\u7384\u5b66\u601d\u8def\uff1a\n\n~~\u9996\u5148\u4e0d\u65ad\u6478\u7d22\u7528\u624b\u5212\u6c34\uff0c\u7528\u811a\u8e6c\u6c34\u7684\u52a8\u4f5c\uff0c\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u7ec3\u4e60\uff0c\u4f60\u5c31\u5b66\u4f1a\u4e86\u6e38\u6cf3~~\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u76f8\u5bf9\u6765\u8bf4\u8fd8\u662f\u5f88\u597d\u60f3\u51fa\u6765\u7684\uff08\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u53ea\u8981\u53f3\u513f\u5b50\u8282\u70b9\u4e0e\u5de6\u513f\u5b50\u8282\u70b9\u7684\u6743\u503c\u4e0d\u540c\uff0c\u5c31\u80af\u5b9a\u4e0d\u662f\u5bf9\u79f0\u7684\uff0c\u820d\u53bb\n\n\u7136\u540e\uff0c\u6bcf\u4e00\u6b21\u5411\u4e0b\u8d70\u4e00\u5c42\u7684\u65f6\u5019\uff0c\u5de6\u5b50\u6811\u8ddf\u53f3\u5b50\u6811\u7684\u8def\u5f84\u53d6\u53cd\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\n\n\u5c31\u662f\uff0c\u4f60\u5de6\u5b50\u6811\u5411\u53f3\u8d70\uff0c\u53f3\u5b50\u6811\u5c31\u5411\u5de6\u8d70\uff1b\u5de6\u5b50\u6811\u5411\u5de6\u8d70\uff0c\u53f3\u5b50\u6811\u5411\u53f3\u8d70\n\n\uff08\u5982\u679c\u8fd9\u91cc\u4e0d\u80fd\u7406\u89e3\u5efa\u8bae\u52a8\u624b\u753b\u56fe\u770b\u4e00\u4e0b\uff09\n\n\u540c\u7406\uff0c\u5224\u65ad\u65f6\u4e5f\u53d6\u53cd\n\n\u5206\u56db\u79cd\u60c5\u51b5\uff1a\n- \u5982\u679c\u5de6\u5b50\u6811\u7684\u6839\u8282\u70b9\u6ca1\u6709\u5de6\u5b50\u6811\u800c\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\u6709\u53f3\u5b50\u6811\uff0c\u90a3\u4e48\u7ed3\u6784\u4e0a\u80af\u5b9a\u4e0d\u6ee1\u8db3\u5bf9\u79f0\u6027\uff0c\u820d\u53bb\n\n- \u5982\u679c\u5de6\u5b50\u6811\u7684\u6839\u8282\u70b9\u6ca1\u6709\u53f3\u5b50\u6811\u800c\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\u6709\u5de6\u5b50\u6811\uff0c\u90a3\u4e48\u7ed3\u6784\u4e0a\u80af\u5b9a\u4e0d\u6ee1\u8db3\u5bf9\u79f0\u6027\uff0c\u820d\u53bb\n\n- \u5982\u679c\u5de6\u5b50\u6811\u7684\u6839\u8282\u70b9\u6709\u5de6\u5b50\u6811\u800c\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\u6ca1\u6709\u53f3\u5b50\u6811\uff0c\u90a3\u4e48\u7ed3\u6784\u4e0a\u80af\u5b9a\u4e0d\u6ee1\u8db3\u5bf9\u79f0\u6027\uff0c\u820d\u53bb\n\n- \u5982\u679c\u5de6\u5b50\u6811\u7684\u6839\u8282\u70b9\u6709\u53f3\u5b50\u6811\u800c\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\u6ca1\u6709\u5de6\u5b50\u6811\uff0c\u90a3\u4e48\u7ed3\u6784\u4e0a\u80af\u5b9a\u4e0d\u6ee1\u8db3\u5bf9\u79f0\u6027\uff0c\u820d\u53bb\n\n\n\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u6ee1\u8db3\u5bf9\u79f0\u6027\u5462\uff1f\n\n\u2014\u2014\u5f53\u641c\u7d22\u5230\u4e24\u4e2a\u8282\u70b9\uff0c\u4e24\u4e2a\u8282\u70b9\u540c\u4e3a\u53f6\u5b50\u7ed3\u70b9\u4e14\u6743\u503c\u76f8\u7b49\u65f6\n\n\u4f46\u53ea\u8981\u6709\u5176\u4e2d\u67d0\u4e00\u6761\u8def\u5f84\u4e0d\u6ee1\u8db3\uff0c\u6574\u9897\u5b50\u6811\u80af\u5b9a\u4e0d\u6ee1\u8db3\n\n\u90a3\u4e48\uff0c\u6309\u7167\u4ee5\u4e0a\u601d\u8def\u6253\u51fa\u6765\u7684\u4ee3\u7801\u662f\u591a\u5c11\u5206\u7684\u5462\uff1f~~\u6211\u600e\u4e48\u77e5\u9053~~\n\n96\u5206\n\n\u7528\u4e86\u4e00\u6b21\u4e0b\u8f7d\u6570\u636e\u7684\u673a\u4f1a\u2026\u2026\n\n\u54e6\uff0c\u70b8\u4e86\uff0c\u6781\u9650\u6570\u636e\u5361\u6210\u4e00\u6761\u94fe\u4e86\u2026\u2026\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u52a0\u4e0a\u4ec0\u4e48\u4f18\u5316\u5462\uff1f\n\n\u7ed9\u5927\u5bb63\u5206\u949f\u7684\u601d\u8003\u65f6\u95f4\u2026\u2026\n\n***\n\n\u4f18\u5316\u5f88\u7b80\u5355\u2014\u2014\u53ea\u8981\u5de6\u53f3\u5b50\u6811\u7684\u8282\u70b9\u6570\u76ee\u4e0d\u540c\uff0c\u5219\u7ed3\u6784\u80af\u5b9a\u4e0d\u5bf9\u79f0\uff01\n\n\u90a3\u4e48\u8fd9\u4e2a\u4f18\u5316\u52a0\u4e0a\u53bb\u591a\u5c11\u5206\uff1f\n\n\u5f53\u7136AC\u5566\uff01\n\n\u4e0a\u4ee3\u7801\uff01~~\u5582\u5582\u5582\u97f3\u4e50\u8001\u5e08\u600e\u4e48\u56de\u4e8bBGM\u5462~~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nstruct note\n{\n    int left;\n    int right;\n    int val;\n};\n\nint n,ans;\nnote a[1000010];\nint d[1000010];\n\nint fast_read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-')\n        {\n            f=-1;\n        }\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        x=(x<<3)+(x<<1)+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\n\nint dfs(int root)\n{\n    //printf(\"%d\\n\",root);\n    if(a[root].left==-1&&a[root].right==-1)\n    {\n        return 1;\n    }\n    int s=1;\n    if(a[root].left!=-1)\n    {\n        s+=dfs(a[root].left);\n    }\n    if(a[root].right!=-1)\n    {\n        s+=dfs(a[root].right);\n    }\n    d[root]=s;\n    return s;\n}\n\nbool dfs2(int left,int right)\n{\n    if(a[left].val!=a[right].val)\n    {\n        return 0;\n    }\n    if(a[left].left==-1)\n    {\n        if(a[right].right!=-1)\n        {\n            return 0;\n        }\n    }\n    if(a[left].right!=-1)\n    {\n        if(a[right].left==-1)\n        {\n            return 0;\n        }\n    }\n    if(a[left].left!=-1)\n    {\n        if(a[right].right==-1)\n        {\n            return 0;\n        }\n    }\n    if(a[left].right==-1)\n    {\n        if(a[right].left!=-1)\n        {\n            return 0;\n        }\n    }\n    if(a[left].right==-1&&a[left].left==-1)\n    {\n        return 1;\n    }\n    bool f=1;\n    if(!dfs2(a[left].left,a[right].right))\n    {\n        f=0;\n    }\n    if(!dfs2(a[left].right,a[right].left))\n    {\n        f=0;\n    }\n    return f;\n}\n\nvoid work()\n{\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i].left!=-1&&a[i].right!=-1)\n        {\n            if(d[i]>ans&&d[a[i].left]==d[a[i].right]&&dfs2(a[i].left,a[i].right))\n            {\n                ans=d[i];\n            }\n        }\n        else\n        {\n            ans=max(ans,1);\n        }\n        //printf(\"%d\\n\",ans);\n    }\n}\n\nint main()\n{\n    //freopen(\"testdata (2).in\",\"r\",stdin);\n    n=fast_read();\n    for(int i=1;i<=n;i++)\n    {\n        a[i].val=fast_read();\n        d[i]=1;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        a[i].left=fast_read();\n        a[i].right=fast_read();\n    }\n    int k=dfs(1);\n    work();\n    /*\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%d\\n\",d[i]);\n    }\n    */\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\u4e00\u5806\u8c03\u8bd5\u8bed\u53e5\u8bf7\u89c1\u8c05\u2026\u2026\n\nupdate 18.11.16\n\u8003\u573a\u4e0a\u6ca1\u6709\u4e0d\u540c\u8282\u70b9\u6570\u7684\u4f18\u5316A\u4e86\n\n\u611f\u8c22\u540c\u673a\u623f\u5de8\u4f6c\u7684\u63d0\u9192\uff0c\u67d0\u5904\u9519\u8bef\u5df2\u6539\u6b63",
        "postTime": 1542174424,
        "uid": 103603,
        "name": "tt66ea",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011 P5018 \u5bf9\u79f0\u4e8c\u53c9\u6811"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u7528\u6563\u5217\u5c31\u53ef\u4ee5\u4e86\uff0c\u7528\u6563\u5217\u5224\u65ad\u590d\u6742\u7ed3\u6784\u540c\u6784\u6700\u5408\u9002\u4e86\u3002\u6bcf\u4e2a\u8282\u70b9\u8bbe\u7f6e\u4e24\u4e2a\u6563\u5217\u503chl,hr\uff0c\u7136\u540e\u7528\u9012\u5f52\u65b9\u5f0f\u5b9a\u4e49\u8be5\u8282\u70b9\u7684\u6563\u5217\u503c\uff1a\n\nhl[x]=hsh(hl[left],a[x],hl[right])\n\nhr[x]=hsh(hr[right],a[x],hr[left])\n\n\u5982\u679chl[x]==hr[x]\uff0c\u5219\u8be5\u8282\u70b9\u7684\u5b50\u6811\u5bf9\u79f0\n\n\u6563\u5217\u51fd\u6570\u5c3d\u91cf\u9b3c\u9a6c\u4e00\u70b9\uff0c\u7b80\u5355\u7684p\u8fdb\u5236\u6570\u6563\u5217\u53ef\u80fd\u9020\u6210\u7cfb\u7edf\u51b2\u7a81\uff08\u5b9e\u6d4bhsh(a,b,c)=a+p*b+p^2*c\u80fd\u5f9744\u5206\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nconst ll N=1000005;\nll n,a[N],l[N],r[N],ans,p[10];\nstruct node{ ll lh,rh,num;}; // \u5de6\u53f3\u6563\u5217\uff0c\u8282\u70b9\u6570\n\nll hsh(ll a,ll b,ll c){\n    return p[0]*a*a+p[1]*b*b*b+p[2]*c*c*c*c*c+p[3]*a*a*b+p[4]*b*b*b*b*c;\n}\nnode calc(ll x){\n    if (x<0) return (node){0,0,0};\n    node vl=calc(l[x]),vr=calc(r[x]);\n    node v=(node){hsh(vl.lh+vr.num,a[x],vr.lh+vl.num),\n        hsh(vr.rh+vl.num,a[x],vl.rh+vr.num)\n        ,vl.num+vr.num+1};\n    //    cout<<x<<\" \"<<v.lh<<\" \"<<v.rh<<\" \"<<v.num<<endl;\n    if (v.lh==v.rh) ans=max(ans,v.num);\n    return v;\n}\n\nint main(){\n    scanf(\"%lld\",&n);\n    for (ll i=1;i<=n;i++) scanf(\"%lld\",a+i);\n    for (ll i=1;i<=n;i++) scanf(\"%lld%lld\",l+i,r+i);\n    for (ll i=0;i<10;i++) p[i]=1000000LL+rand()%1000000;\n    calc(1);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1541935077,
        "uid": 43145,
        "name": "distantlight",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811 \u3011"
    },
    {
        "content": "\u849f\u84bb\u5728\u8003\u540e\u7b2c\u4e8c\u5929\u60f3\u51fa\u7684AC\u89e3\u6cd5\u3002\u3002\u3002\n\n\u672c\u9898\u89e3\u65b0\u589e\u4e86\u4e00\u70b9\u8d2a\u5fc3\u7684\u5143\u7d20\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u7b97\u51fa\u5b50\u8282\u70b9\u7684\u4e2a\u6570\uff0csort\u4e00\u904d\uff08\u6ce8\u610f\u4e0d\u8981\u5192\u6ce1qwq\uff09\n\n\u7136\u540e\u5224\u65ad\u6bcf\u4e2a\u70b9\uff0c\u627e\u51fa\u4e00\u4e2a\u70b9\u5c31\u4e0d\u7528\u5f80\u540e\u627e\u4e86\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,qz[1000001],le[1000001],ri[1000001];\nlong long first=0;\nstruct edge\t{\n\tint num,zz;\n}e[1000001];\nint find(int d){\n\tif (le[d]!=-1) e[d].zz+=find(le[d]);\n\tif (ri[d]!=-1) e[d].zz+=find(ri[d]);\n\te[d].zz++;\n\treturn e[d].zz; \n}\n\nbool cmp(edge a,edge b)\t{\n\treturn a.zz>b.zz;\n}\n\nbool f(int a,int b){\n\tif (a==-1&&b==-1) return true;\n\telse if ((a==-1&&b!=-1)||(a!=-1&&b==-1)) return false;\n\telse if (qz[a]!=qz[b]) return false;\n\telse return f(le[a],ri[b])&f(ri[a],le[b]);\n}\nint main(){\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    {\n      scanf(\"%d\",&qz[i]);\n      first+=i*i;\n      e[i].num=i;\n    }\n    for (int i=1;i<=n;i++)\n    {\n      scanf(\"%d%d\",&le[i],&ri[i]);\n      if (le[i]!=-1) first-=le[i]*le[i];\n      if (ri[i]!=-1) first-=ri[i]*ri[i];\n    }\n    int fu;\n    fu=first;\n    e[fu].zz=find(fu);\n    sort(1+e,1+e+n,cmp);\n    for (int i=1;i<=n;i++)\n    {\n    \tif (f(le[e[i].num],ri[e[i].num])){\n    \t\tprintf(\"%d\",e[i].zz);\n\t\t\treturn 0;\t\n    \t}\n    }\n}\n```\n",
        "postTime": 1564368945,
        "uid": 94018,
        "name": "\u52a8\u6001WA",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "#   \u9898\u76ee \u5bf9\u79f0\u4e8c\u53c9\u6811\n## \t[\u9898\u76ee\u63cf\u8ff0](https://www.luogu.org/problemnew/show/P5018)\n## \u601d\u8def\n# [\u535a\u5ba2\u7684\u66f4\u6613\u61c2\uff08\u6ed1\u7a3d)](https://www.luogu.org/blog/cqj/zui-hao-li-xie-di-fang-fa)\n### \u68c0\u67e5\u662f\u5426\u7b26\u5408\u5bf9\u79f0\u6761\u4ef6\n\u6761\u4ef6\u5f88\u7b80\u5355\u2014\u2014\u7ed3\u6784\u5bf9\u79f0&&\u70b9\u6743\u5bf9\u79f0\n\n\u8981\u505a\u5230\u70b9\u6743\u5bf9\u79f0\u5176\u5b9e\u4e5f\u5c31\u987a\u4fbf\u7ed3\u6784\u5bf9\u79f0\u4e86\n\n\u4e8e\u662f\u6761\u4ef6\u53ef\u4ee5\u7b80\u5316\u4e3a\u70b9\u6743\u5bf9\u79f0\n\n\u53ef\u4ee5\u8003\u8651\u5e76\u884c\u641c\u7d22\n\n\n------------\n\n```cpp\n\nbool con(int l,int r) {\n\tif(l == -1&&r == -1)\n\t\treturn 1;\n\tif(l == -1||r == -1)\n\t\treturn 0;\n\tif(w[l] == w[r])\n\t\tif(check(l,r))\n\t\t\treturn 1;\n\treturn 0;\n}\nbool check(int x,int y) {\n    if(x == -1&&y == -1)\n        return 1;\n    if(x == -1||y == -1)\n        return 0;\n    if(w[x] != w[y])\n    \treturn 0;\n\tint l = Root[x].l,l1 = Root[y].l;\n\tint r = Root[y].r,r1 = Root[x].r;\n\tif(con(l,r)&&con(l1,r1))\n\t\treturn 1;\n\treturn 0;\n}\n\n```\n\n\n------------\n\n### \u4fe1\u4ef0\u6df1\u641c\n\n\u5c31\u4e09\u4e2a\u70b9\n\n![\u4f60\u5c31\u5047\u88c5\u53f3\u4e0b\u8fd8\u6709\u4e00\u70b9id=3](https://cdn.luogu.com.cn/upload/pic/43188.png)\n\n```cpp\n\nint dfs(int x) {\n    if(x == -1) return 0;\n\tif(check(Root[x].l,Root[x].r)) {\n\t    int ans = Find(x) + 1;\n\t\treturn ans;\n\t}\n\tint ans = max(dfs(Root[x].l),dfs(Root[x].r));\n\treturn ans;\t\n}\n\n```\n\n\n------------\n\n### \u627e\u7b54\u6848\n\n\u52a0\u4e00\u662f\u52a0\u6839\u8282\u70b9\n```cpp\n\nint Find(int x) {\n\tint q = 0;\n\tint l = Root[x].l;\n\tint r = Root[x].r;\n\tif(l != -1) q += Find(l) + 1;\n\tif(r != -1) q += Find(r) + 1;\n\treturn q;\n}\n\n```\n\n\n------------\n\n### \u53e6\u5916\n\u8bfb\u5165\u65f6\u8981\u8bb0\u5f55\u8fd9\u6837\u51e0\u4e2a\u73a9\u610f\u513f\n\n```cpp\n\nfor(i = 1;i <= n;i++)\n\t\tscanf(\"%d\",&w[i]);\n\tfor(i = 1;i <= n;i++)\n\t    scanf(\"%d%d\",&Root[i].l,&Root[i].r);\n\n```\n\n\n------------\n\n## code\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define M 1000001\nusing namespace std;\nint w[M];\nstruct N {\n\tint l,r;\n}Root[M];\nbool con(int,int);\nbool check(int,int);\n//\u4e24\u4e2a\u51fd\u6570\u76f8\u4e92\u9012\u5f52\u8c03\u7528\uff0c\u5e76\u884c\u641c\u7d22\u68c0\u67e5\u662f\u5426\u7b26\u5408\u8981\u6c42\nint dfs(int);\n//\u6838\u5fc3\nint Find(int);\n//\u5176\u5b9e\u5c31\u662f\u627e\u6709\u591a\u5c11\u4e2a\u70b9\nint main() {\n\tint i,n;\n\tscanf(\"%d\",&n);\n\tfor(i = 1;i <= n;i++)\n\t\tscanf(\"%d\",&w[i]);\n\tfor(i = 1;i <= n;i++)\n\t    scanf(\"%d%d\",&Root[i].l,&Root[i].r);   \n\tint ans = dfs(1);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n\nbool con(int l,int r) {\n\tif(l == -1&&r == -1)\n\t\treturn 1;\n\tif(l == -1||r == -1)\n\t\treturn 0;\n\tif(w[l] == w[r])\n\t\tif(check(l,r))\n\t\t\treturn 1;\n\treturn 0;\n}\nbool check(int x,int y) {\n    if(x == -1&&y == -1)\n        return 1;\n    if(x == -1||y == -1)\n        return 0;\n    if(w[x] != w[y])\n    \treturn 0;\n\tint l = Root[x].l,l1 = Root[y].l;\n\tint r = Root[y].r,r1 = Root[x].r;\n\tif(con(l,r)&&con(l1,r1))\n\t\treturn 1;\n\treturn 0;\n}\nint Find(int x) {\n\tint q = 0;\n\tint l = Root[x].l;\n\tint r = Root[x].r;\n\tif(l != -1) q += Find(l) + 1;\n\tif(r != -1) q += Find(r) + 1;\n\treturn q;\n}\nint dfs(int x) {\n    if(x == -1) return 0;\n\tif(check(Root[x].l,Root[x].r)) {\n\t    int ans = Find(x) + 1;\n\t\treturn ans;\n\t}\n\tint ans = max(dfs(Root[x].l),dfs(Root[x].r));\n\treturn ans;\t\n}\n```\n\n## \u603b\u7ed3\n\n\u4fe1\u4ef0\u5f88\u91cd\u8981\n\n\u8fd9\u4ee3\u7801\u5f88\u6162\u4f46\u4e0d\u81f3\u4e8e\u5361\u5e38\uff0c\u8fd8\u6709\u5927\u91cf\u53ef\u4f18\u5316\u5730\u65b9\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\n\n\u4f46\u5b83**\u975e\u5e38\u597d**\u7406\u89e3",
        "postTime": 1543419559,
        "uid": 73992,
        "name": "resftlmuttmotw",
        "ccfLevel": 0,
        "title": "\u6700\u597d\u7406\u89e3\u7684\u65b9\u6cd5"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u9053\u9898\u522b\u770b\u6570\u636e\u90a3\u4e48\u5927\uff0c\u5176\u5b9e\u5c31\u662fdfs\n\n\u6211\u4eec\u53e6\n\ndfs(x,y)\u8868\u793a\u5bf9(x,y)\u8fd9\u5bf9**\u5bf9\u79f0\u70b9**\u7684\u679a\u4e3e\u3002\n\n\u800c\u5bf9\u4e8ex,y\u8fd9\u5bf9**\u5bf9\u79f0\u70b9**\uff0c\u6211\u4eec\u53ef\u4ee5\u5ef6\u4f38\u51fa\u4e24\u5bf9\u5bf9\u79f0\u70b9\uff1a\n\n1.x\u7684\u5de6\u513f\u5b50\u548cy\u7684\u53f3\u513f\u5b50\u3002\n\n2.x\u7684\u53f3\u513f\u5b50\u548cy\u7684\u5de6\u513f\u5b50\u3002\n\n\u6240\u4ee5\uff0c\u601d\u8def\u5c31\u6709\u4e86\u3002\n\n\u53e6\u5916\uff0c\u6211\u4eec\u8981\u52a0\u4e24\u4e2a\u5224\u65ad\n\n1.\u5982\u679c\u5728\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e2d\u53ea\u6709\u4e00\u4e2a\u503c\u4e3a-1,\u5219$flag=0$,\u9000\u51fa\u66b4\u529b\u3002\n\n2.\u5982\u679c\u5bf9\u79f0\u70b9\u503c\u4e0d\u76f8\u7b49\uff0c\u5219$flag=0$,\u9000\u51fa\u66b4\u529b\u3002\n\n# \u91cd\u70b9\u6765\u4e86\n## \u4e3a\u4ec0\u4e48\u66b4\u529b\u4e0d\u8d85\u65f6\uff1f\uff1f\uff1f\uff1f\uff1f\n\n\u9996\u5148\u53f6\u8282\u70b9\u53ea\u4f1a\u88ab\u904d\u5386\u4e00\u6b21\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u5b50\u8282\u70b9\u3002\n\n\u7136\u540e\uff0c\u6bcf\u4e00\u4e2a\u7236\u8282\u70b9\u7684\u904d\u5386\u6b21\u6570\u662f\u4ed6\u6240\u6709\u5b50\u8282\u70b9\u4e2a\u6570$*2$\n\n\u4f46\u662f\u7236\u8282\u70b9\u5c42\u7684\u8282\u70b9\u4e2a\u6570\u662f\u513f\u5b50\u8282\u70b9\u4e2a\u6570\u7684\u4e00\u534a\uff0c\u6240\u4ee5\u6bcf\u4e00\u5c42\u7684\u904d\u5386\u6b21\u6570\u603b\u548c\u90fd\u662f$n$\n\n\u7136\u540e\u4e00\u5171\u6709$log(n)$,\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6$n*log(n)$\u3002\n\n\u6240\u4ee5\uff0c\u7b97\u5b8c\u65f6\u95f4\uff0c\u8d34\u4ee3\u7801\u5566\uff01\uff01\n\n```\n#include <iostream>\n#include <cstdio>\n#include <queue>\nusing namespace std;\nstruct tree{\n    int left,right;\n}t[1000005];\nint n,v[1000005];\nqueue<int> q;\nint s,maxn=0;\nbool f=false;\nvoid dfs(int x,int y) {\n    if(!f) return ; //\u5982\u679c\u5f53\u524df\u4e3afalse\u5c31\u9000\u51fa \n    if(v[x]!=v[y]) {//\u5224\u65ad2 \n        f=false;\n        return ;\n    }\n    s+=2;\n    if((t[x].left!=-1)) {//\u5224\u65ad1 \n        if((t[y].right!=-1)) dfs(t[x].left,t[y].right);\n        else {\n            f=false;\n            return ;\n        }\n    }\n    else if(t[y].right!=-1) {\n        f=false;\n        return ;\n    }\n    if((t[x].right!=-1)) {\n        if((t[y].left!=-1)) dfs(t[x].right,t[y].left);\n        else {\n            f=false;\n            return ;\n        }\n    }\n    else if(t[y].left!=-1) {\n        f=false;\n        return ;\n    }\n    return ;\n}\nbool can_make(int k) {\n    s=1,f=true;\n    if((t[k].left==-1)&&(t[k].right==-1)) return true;\n    if((t[k].left!=-1)&&(t[k].right!=-1)) {\n        dfs(t[k].left,t[k].right);\n        return f;\n    }\n    else return false;\n}\nint main() {\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;++i) scanf(\"%d\",&v[i]);\n    for (int i=1;i<=n;++i) {\n        scanf(\"%d%d\",&t[i].left,&t[i].right);\n    } \n    q.push(1);\n    while(!q.empty()) {//\u7528q\u6765\u4fdd\u5b58\u641c\u7d22\u6570\u7ec4\uff0c\u8981\u7528\u5e7f\u5ea6\u4f18\u5148\u987a\u5e8f \n        int u=q.front();\n        q.pop();\n        if((can_make(u))) {\n            if(s>maxn) maxn=s;\n        }\n        if(t[u].left!=-1) q.push(t[u].left);\n        if(t[u].right!=-1) q.push(t[u].right);\n    } \n    printf(\"%d\\n\",maxn);\n    return 0;\n} \n```",
        "postTime": 1542413081,
        "uid": 78187,
        "name": "zjjcth330",
        "ccfLevel": 0,
        "title": "\u666e\u53ca\u7ec4T4\u9898\u89e3"
    },
    {
        "content": "# **\u4e07\u80fd\u7684dfs\u548cdp**\n\n\u6765\u4e0a\u4ee3\u7801\uff08**\u4ee3\u7801\u6709\u6ce8\u91ca**\uff09\u4e0d\u61c2\u53ef\u4ee5\u79c1\u4fe1\u6211\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,leaves[1000001]={0}/*\u7b2ci\u53f7\u4e3a\u6839\u7684\u503c*/,leavesflag[1000001]={0},ans[1000001]={0}/*\u4ee5\u7b2ci\u4e2a\u4e3a\u6839\u7684\u5bf9\u79f0\u4e8c\u53c9\u6811*/;\nstruct ercha{\n\tint val;\n\tint leftnum;\n\tint rightnum;\n}tree[1000001];\nint dp(int num){//\u9012\u5f52\u8d4b\u503c\uff08\u5176\u5b9e\u662f\u4ece\u4e0b\u5411\u4e0aDP)^-^ \n\tleaves[num]=1;\n\tif(tree[num].leftnum !=-1) leaves[num]+=dp(tree[num].leftnum );\n\tif(tree[num].rightnum !=-1)\tleaves[num]+=dp(tree[num].rightnum );\n\treturn leaves[num];\n}\n\nbool check(int x,int y){//\u7ec8\u6781check\u51fd\u6570 \u5bf9\u6bd4y \u4e0ex \n\tif(x+y==-2) return true;//\u53f6\u5b50\u4e86\uff0c\u80af\u5b9a\u5bf9\u79f0\n\tif(x==-1||y==-1) return false;//\u53ea\u6709\u5de6\u5b69\u5b50\u6216\u53ea\u6709\u6709\u5b69\u5b50\uff0c\u4e0d\u5bf9\u79f0\uff01\n\tif(leaves[x]!=leaves[y]) return false;//\u4e24\u8fb9\u4e2a\u6570\u4e0d\u4e00\u6837 \n\tif(tree[x].val==tree[y].val&&check(tree[x].rightnum,tree[y].leftnum)&&check(tree[x].leftnum,tree[y].rightnum)) return true; //\u6df1\u641c\u5411\u4e0b \n\treturn false;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&tree[i].val);\n\tfor(int i=1;i<=n;i++) scanf(\"%d %d\",&tree[i].leftnum ,&tree[i].rightnum );//scanf\n\tfor(int i=1;i<=n;i++){\n\t\tif(tree[i].leftnum+tree[i].rightnum ==-2) ans[i]=1;//\u53f6\u5b50\u4e3a\u4e00 \n\t\tif(tree[i].leftnum!=-1) leavesflag[tree[i].leftnum] =1;//\u4e0d\u662f\u6839\n\t\tif(tree[i].rightnum!=-1) leavesflag[tree[i].rightnum] =1;//\u4e0d\u662f\u6839\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(leavesflag[i]==0){//\u6839\uff01\uff01\uff01\uff01\uff01 \n\t\t\tdp(i);//\u4ecei\u5f00\u59cb\u8ba1\u7b97\u7b2ci\u53f7\u4e3a\u6839\u7684\u8282\u70b9\u6570 \n\t\t\tbreak;\n\t\t}\n\t}//\u4e00\u5207\u5c31\u7eea\u5f00\u59cbcheck\u662f\u5426\u5bf9\u79f0\n\tfor(int i=1;i<=n;i++){//\u4ee5i\u53f7\u4e3a\u6839\u5f00\u59cb\u5224\u65ad;\n\t\t if(check(tree[i].leftnum ,tree[i].rightnum )) ans[i]=leaves[i];\n\t}\n\tint max=0;//\u6700\u5927\u89e3 \n\tfor(int i=1;i<=n;i++){//\u4ee5i\u53f7\u4e3a\u6839\u5f00\u59cb\u5224\u65ad;\n\t\t if(max<ans[i]) max=ans[i];\n//\t\t cout<<leaves[i]<<\" \";\n\t}\n\tprintf(\"%d\\n\",max);\n\treturn 0;\n}\n```",
        "postTime": 1542289188,
        "uid": 106427,
        "name": "gary2005",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "## \u8bf4\u5728\u524d\u5934\n\n\u8fd9\u9053\u9898\u7528**\u5feb\u8bfb**\u6700\u540e\u51e0\u4e2a\u6570\u636e\u70b9\u53ef\u4ee5**\u5feb200-500ms**\u4e0d\u7b49\n\n**------------**\n\n\n\u54b3\u54b3\n\n2018\u5e74\u6b7b\u5728\u521d\u8d5b\u7684\u840c\u65b0\u9009\u624b\u7206\u809d\u4e00\u4e2a\u5c0f\u65f6\u809d\u6389\u7684**\u7b2c\u4e00\u9053**\u7eff\u9898\n\n~~\u8bba\u5fc3\u91cc\u9634\u5f71\u9762\u79ef~~\n\n\u8a00\u5f52\u6b63\u9898\uff0c\u9898\u76ee\u660e\u663e\u5c31\u662f**\u6a21\u62df**\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\n\n\u6211\u4eec\u9700\u8981\u4e00\u4e2a**\u5224\u65ad\u4e24\u9897\u5b50\u6811\u662f\u5426\u662f\u5bf9\u79f0**\u51fd\u6570\u6765\u8f85\u52a9\u6211\u4eec\u809d\u9898\n\n\u8fd9\u91cc\u6211\u7528\u4ee5\u4e0b\u7ed3\u6784\u4f53\u50a8\u5b58\u6811\uff1a\n```\nstruct Tree{\n\tint w;\n\tint lc,rc;\n\tint num;//\u5305\u62ec\u6839\u7684\u7ed3\u70b9\u6570 \n\tbool f=false;\n} t[1000001];\n```\n\u5176\u4e2df\u5982\u679c\u4e3a**\u5047**\u8868\u793a\u8fd9\u4e2a\u7ed3\u70b9\u662f**\u53f6\u7ed3\u70b9**\n\n\n**------------**\n\n\u6839\u636e\u9898\u610f\uff0c\u5bf9\u4e8e\u4e00\u9897**\u6839\u4e3aT\u7684\u68ee\u6797**\uff0c\u4ed6\u7684**\u5de6\u5b50\u6811**\u548c**\u53f3\u5b50\u6811**\u9700\u8981\u5bf9\u79f0\n\n\u8bb0**t[T].lc**\u662f**\u68ee\u6797T**\u7684**\u5de6\u5b50\u6811\u7684\u6839**\uff0c**t[T].rc**\u5c31\u662f**\u68ee\u6797T**\u7684**\u53f3\u5b50\u6811\u7684\u6839**\n\n\u5206\u6790\u5bb9\u6613\u5f97\u5230\uff1a\n\n\u5de6\u5b50\u6811\u5c31\u662f**\u6839\u4e3at[T].lc\u7684\u68ee\u6797**\n\n\u53f3\u5b50\u6811\u5c31\u662f**\u6839\u4e3at[T].rc\u7684\u68ee\u6797**\n\n\u8bb0**compare(l,r)\u4e3a\u6bd4\u8f83\u6839\u5206\u522b\u4e3al\u548cr\u7528\u7684\u6bd4\u8f83\u51fd\u6570**\n\n\u6240\u4ee5\u8981\u60f3compare(l,r)\u4e3a\u771f,\u9700\u8981\uff1a\n\n**compare(t[l].lc,t[r].rc)\u548ccompare(t[l].rc,t[r].lc)\u540c\u65f6\u4e3a\u771f**\n\nQ\uff1a\u90a3\u600e\u4e48\u6c42\u4e0a\u9762\u5f0f\u5b50\u5462\uff1f\n\nA\uff1a\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u7528**\u9012\u5f52**\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1a\n\n1.\u7531\u4e8e\u6211\u4eec\u51fd\u6570\u6c42**\u53ea\u662f\u5b50\u6811\uff0c\u4e0d\u5305\u62ec\u6839**\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u8981\u5224\u65ad**\u4e24\u68f5\u5b50\u6811\u6839\u7684\u6743\u503c**\u662f\u5426\u76f8\u7b49\n\n2.\u8fb9\u754c\u6709\u4e09\u79cd\uff1a\n\n1.\u4e24\u68f5\u5b50\u6811\u73b0\u5728\u662f**\u53f6\u7ed3\u70b9**\n\n2.\u4e24\u68f5\u5b50\u6811**\u4e00\u53f6\u53e6\u4e00\u4e2a\u4e0d\u662f\u53f6**\n\n3.\u4e24\u9897\u5b50\u6811**\u5bf9\u79f0\u7684\u5730\u65b9\u90fd\u662f\u7a7a\u7684**\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u4ee5\u4e0b\u4ee3\u7801\uff1a\n```\nbool compare(int l,int r){\n\tbool x=0,y=0,z=0;\n\tif(!t[l].f&&!t[r].f){\n\t\tif(t[l].w==t[r].w) \n\t\t\treturn true; //\u6210\u7acb \n\t\treturn false;//\u4e0d\u6210\u7acb \n\t}//\u53f6\u7ed3\u70b9\n\tif((t[l].f&&!t[r].f)||(!t[l].f&&t[r].f)) \n\t\treturn false;//\u4e00\u7a7a\u4e00\u5b9e \n\tif(t[l].lc==-1&&t[r].rc==-1) x=true;\n\tif(t[l].rc==-1&&t[r].lc==-1) y=true;\n\tif(t[l].lc!=-1&&t[r].rc!=-1) x=compare(t[l].lc,t[r].rc);\n\tif(t[l].rc!=-1&&t[r].lc!=-1) y=compare(t[l].rc,t[r].lc);\n\tif(t[l].w==t[r].w) z=true;\n\treturn x&&y&&z;//\u9012\u5f52\u68c0\u7d22 \n\t\n}//\u6bd4\u8f83\u6839\u5206\u522b\u4e3al\u548cr\u7684\u4e24\u68f5\u5b50\u6811\n```\n\n\n**------------**\n\n\u6700\u96be\u7684\u5224\u65ad\u8bb2\u5b8c\u4e86\uff0c\u73b0\u5728\u7b80\u5355\u8bf4\u4e0b\u6c42\u89e3\uff1a\n\n\u6211\u5148\u904d\u5386\u4e00\u6b21\u6811\u6c42**\u5b50\u6811\u7684\u7ed3\u70b9\u4e2a\u6570\uff08\u5305\u62ec\u6839\uff09**\uff1a\n```\nint build(int k){\n\tif(!t[k].f) return t[k].num=1;//\u53f6\u7ed3\u70b9 \n\tint a=0,b=0;\n\tif(t[k].lc!=-1) a=build(t[k].lc);//\u5de6\u5b50\u6811\u7ed3\u70b9\u4e2a\u6570\n\tif(t[k].rc!=-1) b=build(t[k].rc);//\u53f3\u5b50\u6811\u7ed3\u70b9\u4e2a\u6570\n\treturn t[k].num=a+b+1;//\u52a0\u4e0a\u6839\u81ea\u5df1\n} //\u904d\u5386\u6c42\u5b69\u5b50\u7ed3\u70b9\u6570\n```\n\u56de\u5230\u6c42\u89e3\uff0c\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u5982\u679c\u6839\u4e3aT\u7684\u68ee\u6797\u662f**\u5bf9\u79f0\u7684**\uff08compare(t[k].lc,t[k].rc)\u4e3a\u771f\uff09\uff0c\u90a3\u4e48**\u8fd9\u68f5\u68ee\u6797\u7684\u6700\u5927\u7ed3\u70b9\u6570\u5c31\u662f\u68ee\u6797\u7684\u6700\u5927\u7ed3\u70b9**\n\n\u76f8\u5bf9\u7684\uff0c\u5982\u679c\u662f**\u4e0d\u5bf9\u79f0\u7684**\uff0c\u90a3\u4e48\u53d6**\u4e24\u9897\u5b50\u6811\u7684\u89e3\u7684\u8f83\u5927\u503c**\u8fdb\u884c\u8986\u76d6\n\n\u4e8e\u662f\u6211\u4eec\u8fd8\u662f\u7528**\u9012\u5f52**\u6765\u89e3\u51b3\uff1a\n```\nint Find(int k){\n\tif(!t[k].f){\n\t\treturn 1;\n\t}//\u53f6\u7ed3\u70b9 \n\tint a=0,b=0;\n\tif(t[k].lc!=-1) a=Find(t[k].lc);\n\tif(t[k].rc!=-1) b=Find(t[k].rc);//\u9012\u5f52\u6c42\u89e3\n\tif(compare(t[k].lc,t[k].rc)) return t[k].num;//\u60c5\u51b51\n\treturn max(a,b);//\u60c5\u51b52\n}\n```\n\u6700\u540e\u9644\u4e0aAC\u4ee3\u7801\uff1a\n```\n#include<iostream>\nusing namespace std;\nstruct Tree{\n\tint w;\n\tint lc,rc;\n\tint num;//\u5305\u62ec\u6839\u7684\u7ed3\u70b9\u6570 \n\tbool f=false;\n} t[1000001];\nint n;\n\nint build(int k){\n\tif(!t[k].f) return t[k].num=1;//\u53f6\u7ed3\u70b9 \n\tint a=0,b=0;\n\tif(t[k].lc!=-1) a=build(t[k].lc);\n\tif(t[k].rc!=-1) b=build(t[k].rc);\n\treturn t[k].num=a+b+1;\n} //\u904d\u5386\u6c42\u5b69\u5b50\u7ed3\u70b9\u6570\n \nbool compare(int l,int r){\n\tbool x=0,y=0,z=0;\n\tif(!t[l].f&&!t[r].f){\n\t\tif(t[l].w==t[r].w) \n\t\t\treturn true; //\u6210\u7acb \n\t\treturn false;//\u4e0d\u6210\u7acb \n\t}//\u53f6\u7ed3\u70b9\n\tif((t[l].f&&!t[r].f)||(!t[l].f&&t[r].f)) \n\t\treturn false;//\u4e00\u7a7a\u4e00\u5b9e \n\tif(t[l].lc==-1&&t[r].rc==-1) x=true;\n\tif(t[l].rc==-1&&t[r].lc==-1) y=true;\n\tif(t[l].lc!=-1&&t[r].rc!=-1) x=compare(t[l].lc,t[r].rc);\n\tif(t[l].rc!=-1&&t[r].lc!=-1) y=compare(t[l].rc,t[r].lc);\n\tif(t[l].w==t[r].w) z=true;\n\treturn x&&y&&z;//\u9012\u5f52\u68c0\u7d22 \n\t\n}//\u6bd4\u8f83\u6839\u5206\u522b\u4e3al\u548cr\u7684\u4e24\u68f5\u5b50\u6811 \nint Find(int k){\n\tif(!t[k].f){\n\t\treturn 1;\n\t}//\u53f6\u7ed3\u70b9 \n\tint a=0,b=0;\n\tif(t[k].lc!=-1) a=Find(t[k].lc);\n\tif(t[k].rc!=-1) b=Find(t[k].rc);\n\tif(compare(t[k].lc,t[k].rc)) return t[k].num;\n\treturn max(a,b);\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>t[i].w;\n\tfor(int i=1;i<=n;i++){\n\t\tint a,b;\n\t\tcin>>a>>b;\n\t\tt[i].lc=a;\n\t\tt[i].rc=b;\n\t\tt[i].f=(a!=b);\n\t}\n\tbuild(1);\n\tcout<<Find(1);\n\treturn 0;\n}\n```\n\u7eaf\u624b\u6253\u4e861\u4e2a\u5c0f\u65f6\uff0c\u5982\u679c\u80fd\u7ed9\u60a8\u5e26\u6765\u5e2e\u52a9\uff0c\u6211\u4f1a\u975e\u5e38\u5f00\u5fc3\n\n**\u5b8c**\n\n\n\n**------------**\n\n2019.10.3\u66f4\u65b0\uff1a\n\n\u5728\u5224\u65ad\u51fd\u6570\u52a0\u4e2a**\u8bb0\u5f55\u4e0d\u662f\u5bf9\u79f0\u6811\u7684\u5e03\u5c14\u53d8\u91cf**\u53ef\u4ee5\u5feb200ms\n\n\u539f\u7406\uff1a\u5bf9\u4e8e\u4e00\u5f00\u59cb\u5224\u65ad\u7684\u6811T1,T2\u4e2d\u6bd4\u8f83\u7684\u4e00\u9897\u5b50\u6811T1',T2'\n\n**\u5982\u679cT1'\u4e0eT2'\u4e0d\u5bf9\u79f0\uff0c\u90a3\u80af\u5b9aT1\u4e0eT2\u4e0d\u5bf9\u79f0**\n\n\u800c\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u51fd\u6570\u662f**\u5c06\u8fd9\u4e2a\u72b6\u6001\u9012\u5f52\u4e0a\u53bb\uff0c\u5e76\u6ca1\u6709\u5b8f\u89c2\u8fd0\u7528\u4e0a**\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5e03\u5c14\u53d8\u91cfbj\uff0c**\u5728\u6bd4\u8f83T1,T2\u524d\u8d4b\u5047**\uff0c\u5b9e\u9645\u5224\u65ad\u4e2d**\u5982\u679c\u51fa\u73b0\u4e0d\u5bf9\u79f0\u7684\u5b50\u6811\uff0c\u5219\u5c06\u5176\u8d4b\u503c\u4e3a\u771f**\uff0c\u589e\u591a\u4e00\u4e2a\u526a\u679d\uff1a\n```\nif(bool) return false;\n```\n\n\u4fee\u6539\u540e\u7684\u51fd\u6570\uff1a\n```\nbool compare(int l,int r){\n    if(bj) return false;//\u65b0\u589e\u526a\u679d\n    bool x=0,y=0,z=0;\n    if(!t[l].f&&!t[r].f){\n        if(t[l].w==t[r].w) \n            return true; //\u6210\u7acb \n        return false;//\u4e0d\u6210\u7acb \n    }//\u53f6\u7ed3\u70b9\n    if((t[l].f&&!t[r].f)||(!t[l].f&&t[r].f)) \n        return false;//\u4e00\u7a7a\u4e00\u5b9e \n    if(t[l].lc==-1&&t[r].rc==-1) x=true;\n    if(t[l].rc==-1&&t[r].lc==-1) y=true;\n    if(t[l].lc!=-1&&t[r].rc!=-1) x=compare(t[l].lc,t[r].rc);\n    if(t[l].rc!=-1&&t[r].lc!=-1) y=compare(t[l].rc,t[r].lc);\n    if(t[l].w==t[r].w) z=true;\n    if(!(x&&y&&z)) bj=1;//\u4e0d\u5bf9\u79f0\u60c5\u51b5\u8d4b\u503c\u4e3a\u771f\n    return x&&y&z;//\u9012\u5f52\u68c0\u7d22 \n\n}//\u6bd4\u8f83\u6839\u5206\u522b\u4e3al\u548cr\u7684\u4e24\u68f5\u5b50\u6811 \n```\n**\u526a\u679d\u524d**\uff1a\n\u4ee3\u7801\u957f\u5ea6\n1.56KB\n\u7528\u65f6\n5.82s\n\u5185\u5b58\n19.92MB\n\n(\u6709\u51e0\u73871.01,1.02\u8d85\u65f6\u4e24\u4e2a)\n\n\n**\u526a\u679d\u540e**\uff1a\n\u4ee3\u7801\u957f\u5ea6\n1.63KB\n\u7528\u65f6\n4.37s\n\u5185\u5b58\n20.00MB\n\n\n**\u52a0\u5165\u5feb\u8bfb**--------\n\n**\u526a\u679d\u540e**\uff1a\n\n\u4ee3\u7801\u957f\u5ea6\n1.65KB\n\u7528\u65f6\n1.55s\n\u5185\u5b58\n19.91MB\n\n\u4f5c\u8005\u8fd8\u5728\u6316\u6398\u66f4\u4f18\u505a\u6cd5\uff0c\u6b22\u8fce\u79c1\u4fe1\u4ea4\u6d41",
        "postTime": 1569901646,
        "uid": 78127,
        "name": "\u964c\u8def\u7684\u82b1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "### \u524d\u8a00\uff1a\n\n\u56e0\u4e3a\u79cd\u79cd\u539f\u56e0\u9898\u89e3\u53ef\u80fd\u51fa\u7684\u6709\u70b9\u665a\u3002\n\n\u5176\u5b9e\u6211\u8ba4\u4e3a\u4eca\u5e74\u7684noip\u6bd4\u8f83\u7b80\u5355\uff0c~~\u4f46\u624b\u8d31\u7684\u6211\u8fd8\u662f\u4f1a\u4ea7\u751f\u7b14\u8bef~~\n\n------------\n### \u6b63\u6587\uff1a\n\u4e00\u5f00\u59cb\u6211\u8ba4\u4e3a\u66b4\u529b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u662f$O(nlogn)$\uff0c\u6240\u4ee5\u60f3\u4e86\u4e00\u70b9\u4f18\u5316\uff0c~~\u4f46\u6709\u4e9b\u6bd4\u66b4\u529b\u8fd8\u6162\u3002\u4f60\u77e5\u9053\u8d8a\u4f18\u5316\u8d8a\u6162\u7684\u7edd\u671b\u5417\u3002~~\n\n- \u76f8\u5bf9\u5e94\u7684\u8282\u70b9$a,b$\uff0c$a$\u7684\u5de6\u5b69\u5b50\u4e0e$b$\u7684\u53f3\u5b69\u5b50\u5bf9\u5e94\uff0c$a$\u7684\u53f3\u5b69\u5b50\u4e0e$b$\u7684\u5de6\u5b69\u5b50\u5bf9\u5e94\n\n\u5148\u4e0a\u4e00\u4efd\u7206\u641c\u7684\uff0c\u65e2\u7136\u5f88\u591a\u9898\u89e3\u5199$dfs$\u7684\u90a3\u6211\u5c31\u4e0a\u4e00\u4e2a$bfs$\u5427\u3002\n\np.s\uff1a$sort$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(nlogn)$,\u6240\u4ee5\u6211\u628a$sort$\u4e00\u8d77\u5220\u4e86\uff0c\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint v;\n\tint l,r;\t\t//rt \n};node tree[1000005];\nstruct ques{\n\tint a,b;\t\t//\u6bd4\u8f83\u7684\u4e24\u4e2a\u5143\u7d20 \n};ques que[1000005];\nint ans=1,cnt;\nint front,tail;\nbool bfs(int a,int b)\n{\n\tfront=tail=1;\n\tques rsx,temp={a,b};\n\tque[1]=temp;\n\tcnt=3;\t\t\t\t//cnt\u8bb0\u5f55\u6709\u51e0\u4e2a\u8282\u70b9 \n\twhile(front>=tail){\n\t\ttemp=que[tail];\n\t\ttail++;\n\t\tif(tree[temp.a].v!=tree[temp.b].v)\t\t//\u6570\u503c\u4e0d\u76f8\u7b49 \n\t\t\treturn 0;\n\t\tif(tree[temp.a].l==-1&&tree[temp.b].r!=-1 || tree[temp.a].l!=-1&&tree[temp.b].r==-1)\t//\u6709\u65e0\u5b69\u5b50 \n\t\t\treturn 0;\n\t\tif(tree[temp.a].r!=-1&&tree[temp.b].l==-1 || tree[temp.a].r==-1&&tree[temp.b].l!=-1)\t//\u540c\u4e0a \n\t\t\treturn 0;\n\t\tif(tree[temp.a].l!=-1&&tree[temp.b].r!=-1){\t\t//\u5bf9\u5e94\u7684\u4e24\u4e2a\u5143\u7d20 \n\t\t\trsx.a=tree[temp.a].l;rsx.b=tree[temp.b].r;\n\t\t\tque[++front]=rsx;\t\t//\u5165\u961f\u5217 \n\t\t\tcnt+=2;\t\t\t//\u52a0\u5165\u4e86\u4e24\u4e2a\u5143\u7d20 \n\t\t}\n\t\tif(tree[temp.a].r!=-1&&tree[temp.b].l!=-1){\t\t//\u540c\u4e0a \n\t\t\trsx.a=tree[temp.a].r;rsx.b=tree[temp.b].l;\n\t\t\tque[++front]=rsx;\n\t\t\tcnt+=2;\n\t\t}\n\t}\n\treturn 1;\n}\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&tree[i].v);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&tree[i].l,&tree[i].r);\n\tfor(i=1;i<=n;i++)\n\t\tif(tree[i].l!=-1&&tree[i].r!=-1)\n\t\t\tif(bfs(tree[i].l,tree[i].r))\t//\u5982\u679c\u662f\u5bf9\u79f0\u7684 \n\t\t\t\tans=max(ans,cnt);\t//\u627e\u6700\u5927\u503c \n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\u81f3\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u62bd\u8c61\u70b9\u60f3\uff0c\u5c31\u662f\u6bd4\u8f83\u4e24\u652f\u5728\u540c\u4e00\u9ad8\u5ea6\u7684\u8282\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u6811\uff0c\u6bd4\u8f83\u662f\u5426\u5bf9\u79f0\u3002\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u4ee5\u7b2c$i$\u884c\u4e3a\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u6709$2^i$ $^-$ $^1$\u4e2a\u8282\u70b9\uff0c\u4f46\u4e0d\u662f\u4e00\u4e00\u6bd4\u8f83\u7684\uff0c\u662f\u4ee5\u4e0a\u9762$2^i$ $^-$ $^1-1$\u4e2a\u8282\u70b9\u5176\u4e2d\u4e00\u4e2a\u4e3a\u5bf9\u79f0\u8f74\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff0c\u57fa\u672c\u5c31\u662f\u904d\u5386\u6574\u4e2a\u6811\u4e00\u904d\u3002\u6709$logn$\u884c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4e3a$O(nlogn)$\n\n###### \u5b8c\n\n------------\n### \u5176\u4ed6\uff1a\n\n\u65e2\u7136\u52a0\u4e0a\u4f18\u5316\u90a3\u66f4\u6162\uff0c\u90a3\u5c31\u4e0d\u53eb\u4f18\u5316\u4e86\u3002\u90a3\u5c31\u653e\u8fd9\u5427\u3002\n\n1. \u4e24\u4e2a\u5b50\u6811\u5bf9\u79f0\u90a3\u4e48\u8282\u70b9\u80af\u5b9a\u4e00\u6837\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u8bb0\u5f55\u4ee5$i$\u4e3a\u6839\u7684\u8282\u70b9\u4e2a\u6570\n\n1. \u4e24\u4e2a\u5b50\u6811\u5bf9\u79f0\u90a3\u4e48\u4ee5$i$\u4e3a\u6839\u8282\u70b9\u7684\u6811\u4e2d\u7684\u6240\u6709\u6743\u503c\u548c\u80af\u5b9a\u4e00\u6837\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u8bb0\u5f55\u4ee5$i$\u4e3a\u6839\u7684\u8282\u70b9\u6743\u503c\u548c\n\n1. \u5982\u679c\u4ee5\u4e00\u4e2a\u8282\u70b9\u4e3a\u6839\uff0c\u4ee5\u4e0b\u7684\u6709\u4e24\u4e2a\u5b50\u6811\u662f\u5bf9\u79f0\u7684\u90a3\u4e48\uff0c\u6709\u4e00\u4e2a\u5b50\u6811\u662f\u5bf9\u79f0\u7684\uff0c\u4e24\u4e2a\u90fd\u662f\u5bf9\u79f0\u7684\u3002\u53cd\u4e4b\u4ea6\u7136\u3002\n\n1. \u73b0\u5728\u53d1\u73b0\u6700\u591a\u8282\u70b9\u7684\u5bf9\u79f0\u6811\u7684\u8282\u70b9\u6570\u662f$ans$\uff0c\u90a3\u4e48\u5c0f\u4e8e$ans$\u5c31\u4e0d\u7528\u53bb\u5224\u65ad\u3002\uff08\u56e0\u4e3a\u6709\u7b2c\u4e09\u70b9\u6240\u4ee5\u8fd9\u70b9\u8981\u52a0\u4e0a\u53bb\uff09\n\n\u9644\u4e0a\u5947\u8469\u7684\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define retk {key=0;return ;}\n#define rett {tab=0;return ;}\nusing namespace std;\nstruct node{\n\tint v;\n\tint l,r;\t\t//rt \n\tint cnt,pro;\t//cnt\u4e2a\u6570\uff0cpro\u6240\u6709\u6743\u503c\u548c \n};node tree[1000005];\nbool mark[1000005];\t\t//\u8bb0\u5f55\u4ee5i\u4e3a\u6839\u8282\u70b9\u7684\u6811\u662f\u4e0d\u662f\u975e\u5bf9\u79f0\u7684 \nint ans=1;\nbool key,tab;\nvoid build(int w)\n{\n\tif(tree[w].l==-1&&tree[w].r==-1){\t\t//\u53ea\u6709\u4e00\u4e2a\u8282\u70b9 \n\t\ttree[w].pro=tree[w].v;\n\t\ttree[w].cnt++;\n\t\treturn ;\n\t}\n\tif(tree[w].l!=-1)\t\t//\u6709\u5de6\u5b69\u5b50 \n\t\tbuild(tree[w].l);\n\tif(tree[w].r!=-1)\t\t//\u6709\u53f3\u5b69\u5b50 \n\t\tbuild(tree[w].r);\n\tif(tree[w].l!=-1){\t//\u9632\u6b62\u51fa\u73b0tree[-1] \n\t\ttree[w].pro+=tree[tree[w].l].pro;\t//\u52a0\u4e0a\u5de6\u5b50\u6811\u7684\u6240\u6709\u6743\u503c\u548c \n\t\ttree[w].cnt+=tree[tree[w].l].cnt;\t//\u52a0\u4e0a\u5de6\u5b50\u6811\u7684\u6240\u6709\u5143\u7d20\u4e2a\u6570\u548c \n\t}\n\tif(tree[w].r!=-1){\n\t\ttree[w].pro+=tree[tree[w].r].pro;\t//\u540c\u4e0a \n\t\ttree[w].cnt+=tree[tree[w].r].cnt;\n\t}\n\ttree[w].cnt++;\t\t//\u81ea\u5df1\u4e00\u4e2a\u5143\u7d20 \n\ttree[w].pro+=tree[w].v;\t//\u540c\u4e0a \n}\nvoid dfs2(int a,int b)\t//\u4e0edfs\u4e00\u6a21\u4e00\u6837\uff0c\u4f46\u849f\u84bb\u7684\u6211\u5199\u4e0d\u5230\u4e00\u8d77 \n{\n\tif(tab==0)return ;\n\tif(tree[a].cnt!=tree[b].cnt || tree[a].pro!=tree[b].pro)rett\n\tif(tree[a].v!=tree[b].v)rett\n\tif(tree[a].l==-1&&tree[b].r!=-1 || tree[a].l!=-1&&tree[b].r==-1)rett\n\tif(tree[a].r!=-1&&tree[b].l==-1 || tree[a].r==-1&&tree[b].l!=-1)rett\n\tif(tree[a].l!=-1&&tree[b].r!=-1)\n\t\tdfs2(tree[a].l,tree[b].r);\n\tif(tree[a].r!=-1&&tree[b].l!=-1)\n\t\tdfs2(tree[a].r,tree[b].l);\n}\nvoid dfs(int a,int b)\n{\n\tif(key==0)return ;\t\t//\u5df2\u7ecf\u4e0d\u662f\u5bf9\u79f0\u7684\u4e86\uff0c\u5c31\u4e0d\u7528\u5224\u65ad\u4e86 \n\tif(tree[a].cnt!=tree[b].cnt || tree[a].pro!=tree[b].pro)retk\t//\u4e0e\u4e0a\u9762\u7684bfs\u4ee3\u7801\u4e00\u6837\u7684\u610f\u601d \n\tif(tree[a].v!=tree[b].v)retk\n\tif(tree[a].l==-1&&tree[b].r!=-1 || tree[a].l!=-1&&tree[b].r==-1)retk\n\tif(tree[a].r!=-1&&tree[b].l==-1 || tree[a].r==-1&&tree[b].l!=-1)retk\n\tif(tree[a].l!=-1&&tree[b].r!=-1)\n\t\tdfs(tree[a].l,tree[b].r);\n\tif(tree[a].r!=-1&&tree[b].l!=-1)\n\t\tdfs(tree[a].r,tree[b].l);\n\tif(mark[a]==0 || mark[b]==0)mark[a]=mark[b]=0;//\u53d1\u73b0\u4e24\u4e2a\u5b50\u6811\u662f\u5bf9\u79f0\u7684 \n\tif(ans>tree[a].cnt&&mark[a]==0){\n\t\ttab=0;\n\t\tdfs2(tree[a].l,tree[a].r);\t\t//\u5224\u65ad\u5b50\u6811\u662f\u5426\u5bf9\u79f0 \n\t\tif(tab)ans=tree[a].cnt;\t\t//\u5bf9\u79f0\uff0c\u76f4\u63a5\u8d4b\u503c \n\t\tmark[a]=mark[b]=1;\t\t//\u4e0d\u5bf9\u79f0\uff0c\u4e24\u4e2a\u90fd\u4e0d\u5bf9\u79f0 \n\t}\n}\nint main()\n{\n\tint n,i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&tree[i].v);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&tree[i].l,&tree[i].r);\n\tbuild(1);\t\t//\u6784\u5efa \n\tfor(i=1;i<=n;i++)\n\t\tif(ans<tree[i].cnt){\n\t\t\tkey=1;\t//\u5224\u65ad\u662f\u5426\u4e3a\u5bf9\u79f0\u4e8c\u53c9\u6811 \n\t\t\tif(tree[i].l!=-1&&tree[i].r!=-1&&mark[i]==0){\n\t\t\t\tdfs(tree[i].l,tree[i].r);\n\t\t\t\tif(key)\n\t\t\t\t\tans=tree[i].cnt;\t//\u8d4b\u503c\u4e3a\u8282\u70b9\u4e2a\u6570 \n\t\t\t}\t\n\t\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\u6700\u7ec8\u8fd8\u662f\u6bd4\u7206\u641c\u5feb\u4e86100~200ms",
        "postTime": 1544018897,
        "uid": 35126,
        "name": "xu826281112",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "# ~~\u66b4\u529b\u6b63\u89e3too~~```\n\n```//\u7206\u641c O(n^2)\n//noip 2018 T4 \u6d1b\u8c37P5018 \n//noip 2018 rp=122\n//noip2018 T4 rp=12 \n#include<bits/stdc++.h>\nusing namespace std;\nint v[1000000],s[1000001][2];\nint m=0,a;\nbool b;\nvoid bfs(int x,int y){\n\tif(v[s[x][0]]/*x\u7684\u5de6\u5b69\u5b50\u6743\u91cd*/==v[s[y][1]]/*y\u7684\u53f3\u5b69\u5b50\u6743\u91cd*/\n\t&&v[s[x][1]]/*x\u7684\u53f3\u5b69\u5b50\u6743\u91cd*/==v[s[y][0]]/*y\u7684\u5de6\u5b69\u5b50\u6743\u91cd*/){\n\t\tif(s[x][0]!=-1/*\u82e5x\u7684\u5de6\u5b69\u5b50\u5b58\u5728*/) {\n\t\t\ta+=2;bfs(s[x][0],s[y][1]);/*\u9012\u5f52\u641c\u7d22*/\n\t\t} \n\t\tif(s[x][1]!=-1/*\u82e5x\u7684\u53f3\u5b69\u5b50\u5b58\u5728*/&&x!=y) {\n\t\t\ta+=2;bfs(s[x][1],s[y][0]);/*\u9012\u5f52\u641c\u7d22*/\n\t\t} \n\t}\n\telse b=true; \n}\nint main(){\n\tint i,n;cin>>n;\n\tfor(i=1;i<=n;i++)cin>>v[i];\n\tfor(i=1;i<=n;i++)cin>>s[i][0]>>s[i][1];\n\tfor(i=1;i<=n;i++){\n\t\ta=1;b=false;bfs(i,i);\n\t\tif(b)continue;\n\t\tif(a>m)m=a;\n\t}\n\tcout<<m<<endl;\n} \n",
        "postTime": 1543658946,
        "uid": 125691,
        "name": "wuhong_\u5434\u6d2a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "T3\u8017\u65f6\u592a\u591a\u53ea\u51fa10\u5206\uff0cT4\u6ca1\u65f6\u95f4\u6253\u53cd\u800c\u66b4\u529b\u9a97\u6ee1\u2026\u2026\n\n\n\u5bb9\u6613\u5f97\u51fa\u66b4\u529b\u590d\u6742\u5ea6\u5e94\u8be5\u5728O(n)\u5230O(nlogn)\u4e4b\u95f4\u2026\u2026\n\n\u90a3\u80af\u5b9a\u5199\u66b4\u529b\u8fa3\u2026\u2026\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,tt,ans;\nstruct T\n{\n    int l,r,s,size,ok;\n}t[1000010];\nint max(int a,int b)\n{\n    return a>b?a:b;\n}\nvoid Depth(int x,int d)//\u9884\u5904\u7406\u51fa\u5b50\u6811\u5927\u5c0f\u548c\u53f6\u8282\u70b9\n{\n    if(x==-1){return;}\n    Depth(t[x].l,d+1);\n    Depth(t[x].r,d+1);\n    if(t[x].l==-1&&t[x].r==-1){t[x].ok=1;}\n    if(t[x].l!=-1){t[x].size+=t[t[x].l].size;}//\u4e0a\u4f20\n    if(t[x].r!=-1){t[x].size+=t[t[x].r].size;}\n}\nvoid Check(int x,int y)\n{\n    if(!tt||(x==-1&&y==-1)){return;}//\u526a\u679d\uff0c\u5f53\u5df2\u7ecf\u4e0d\u5bf9\u79f0\u65f6\u76f4\u63a5\u9000\u51fa\n    if((x==-1&&y!=-1)||(x!=-1&&y==-1)||t[x].s!=t[y].s){tt=0;return;}\n    Check(t[x].l,t[y].r);\n    Check(t[x].r,t[y].l);\n}\nvoid DFS(int x)\n{\n    if(x==-1){return;}\n    DFS(t[x].l);\n    DFS(t[x].r);\n    if(t[t[x].l].size==t[t[x].r].size&&t[t[x].l].ok==t[t[x].r].ok)//\u8fd9\u4e2a\u526a\u679d\u53ef\u6709\u53ef\u65e0\u2026\u2026\n    {\n        tt=1;\n        Check(t[x].l,t[x].r);\n        t[x].ok=tt;\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){scanf(\"%d\",&t[i].s);t[i].size=1;}\n    for(int i=1;i<=n;++i){scanf(\"%d%d\",&t[i].l,&t[i].r);}\n    Depth(1,1);\n    DFS(1);\n    for(int i=1;i<=n;++i)\n    {\n        if(t[i].ok&&t[i].size>ans){ans=t[i].size;}\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1543161516,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "```\n//\u77e5\u8bc6\u70b9\uff1aDFS \n#include<bits/stdc++.h>\nusing namespace std;\n\nint v[1000005],ch[1000005][2],c[1000005],n,ans;\n//v[i]\u8868\u793a\u8282\u70b9i\u7684\u6743\u503c \n//ch[i][k]\u8868\u793a\u7b2ci\u4e2a\u8282\u70b9\u7684\u7b2ck\u4e2a\u5b69\u5b50\n//c[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u8282\u70b9\u603b\u6570\n\nbool same(int a,int b) //\u5224\u65ad\u4ee5a\u4e3a\u6839\u7684\u5b50\u6811\u548c\u4ee5b\u4e3a\u6839\u7684\u5b50\u6811\u662f\u5426\u5bf9\u79f0 \n{\n    if(a==b)return 1;\n    if(!a||!b)return 0;\n    return v[a]==v[b]&&same(ch[a][0],ch[b][1])&&same(ch[a][1],ch[b][0]);\n}\n\nvoid dfs(int i)\n{\n    if(!i)return;\n    dfs(ch[i][0]);    //\u679a\u4e3e\u5de6\u5b69\u5b50 \n    dfs(ch[i][1]);    //\u679a\u4e3e\u53f3\u5b69\u5b50 \n    c[i]=1+c[ch[i][0]]+c[ch[i][1]];    //\u8ba1\u7b97\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u8282\u70b9\u6570\u91cf\n    v[i]=v[i]+v[ch[i][0]]+v[ch[i][1]]; //\u8ba1\u7b97\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u8282\u6743\u503c\u548c \n    if(ans<c[i]&&same(ch[i][0],ch[i][1]))ans=c[i]; //\u5982\u679c\u53ef\u4ee5\u66f4\u65b0\u6700\u5927\u503c\uff0c\u5e76\u4e14i\u7684\u5de6\u53f3\u5b50\u6811\u5bf9\u79f0 \n}\n\nint main()\n{\n//\tfreopen(\"tree.in\",\"r\",stdin);\n//\tfreopen(\"tree.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&v[i]);     //\u8bfb\u5165\u6743\u503c \n\t\t\n    v[0]=1005;\n    for(int i=1;i<=n;i++)      //\u8bfb\u5165\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\n        for(int k=0;k<2;++k)   //\u4e24\u4e2a\u5b50\u8282\u70b9\n\t\t{\n            scanf(\"%d\",&ch[i][k]);      //\u8bfb\u5165\u5b69\u5b50\u8282\u70b9\u7f16\u53f7 \n            if(ch[i][k]==-1) ch[i][k]=0;\n        }\n        \n    dfs(1);  //\u4ece\u6839\u5f00\u59cb\u7a77\u4e3e \n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1542705899,
        "uid": 65971,
        "name": "mrgogoup",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "# 1.\u505a\u6cd5\n\u66b4\u529b\u904d\u5386\n\n```cpp\n#include <cstdio>\n#define maxn 1100000\n\nint l[maxn],r[maxn],v[maxn],ans=1,s[maxn];\n\nvoid num(){\n}\n\nbool ptree(int lr,int rr){ //\u5224\u65ad\u4e00\u68f5\u6811\u662f\u5426\u5bf9\u79f0\n    if(lr==-1&&rr==-1)return true; //\u90fd\u662f\u7a7a\u5b50\u6811\n    else if((lr==-1||rr==-1)||v[lr]!=v[rr]||s[lr]!=s[rr])return false; //\u6709\u4e00\u4e2a\u4e3a\u7a7a\u5b50\u6811\u6216\u6743\u503c\u4e0d\u540c\u6216\u8282\u70b9\u6570\u4e0d\u540c\u8fd4\u56defalse\n    return ptree(l[lr],r[rr])&&ptree(r[lr],l[rr]);\n}\n\nint count(int rt){ //\u9884\u5904\u7406\u5b57\u8282\u70b9\u6570\n    if(rt==-1)return 0; //-1\n    s[rt]=count(l[rt])+count(r[rt])+1; //\u5de6\u52a0\u53f3\u52a01 \n    return s[rt];\n}\n\nvoid dfs(int rt){ //\u66b4\u529b\u6df1\u641c\n    if(rt==-1||s[rt]<ans)return; //\u8282\u70b9\u7f16\u53f7\u4e3a-1\u6216\u5b50\u6811\u8282\u70b9\u6570\u5c0f\u4e8e\u5df2\u7ecf\u8bb0\u5f55\u7684\u7b54\u6848\u5c31\u63a8\u51fa\n    if(ptree(rt,rt)&&s[rt]>ans)ans=s[rt];\n    else{\n        dfs(l[rt]);\n        dfs(r[rt]);\n    }\n}\n\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)scanf(\"%d\",v+i);\n    for(i=1;i<=n;i++)scanf(\"%d%d\",l+i,r+i);\n    count(1);\n    dfs(1);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1542346656,
        "uid": 72029,
        "name": "jerryxu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": " _\u8fd9\u9053\u9898\u6211\u4e5f\u662f\u65e0\u8bed\u4e86\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\uff08\u4f1a\u4e0d\u4f1a\u662f\u6570\u636e\u592a\u6c34\u4e86\uff09_ \n\n# \u771f\u00b7\u66b4\u529b\u51fa\u5947\u8ff9\n\n\u6240\u4ee5\u8bf4\u8fd9\u9053\u9898\u53ea\u8981\u6253\u66b4\u529b\u5c31\u597d\u4e86\u3002\n\n**Step1\uff1a\u679a\u4e3e\u5b50\u6811\u7684\u6839\u8282\u70b9\uff1b**\n\n**Step2\uff1a\u770b\u770b\u662f\u4e0d\u662f\u5bf9\u79f0\u7684\u6811\u5c31\u5b8c\u4e86\u3002**\n\n\u5bf9\u4e8e\u4e00\u68f5\u6811\uff0c\u53ea\u9700\u8981\u5bf9\u5b83\u8fdb\u884c\u4e00\u904d\u4f18\u5148\u904d\u5386\u5de6\u5b50\u6811\u7684 **\u524d\u7f00and\u4e2d\u7f00** \u904d\u5386\uff0c\n\n\u7136\u540e\u518d\u8fdb\u884c\u4e00\u904d\u4f18\u5148\u904d\u5386\u53f3\u5b50\u6811\u7684 **\u524d\u7f00and\u4e2d\u7f00** \u770b\u770b\u662f\u4e0d\u662f\u4e00\u6837\u7684\u5c31\u597d\u4e86\u3002\n\n------------\n\u7136\u540e\uff0c\u4f60\u5c3196\u4e86\uff0cTLE\u7684\u70b9\u563f\u563f\u5730\u5bf9\u4f60\u7b11\u3002\n\n------------\n\n\u6240\u4ee5\u8bf4\u662f\u8981\u52a0\u5165~~\u4e00\u70b9\u70b9~~\u4f18\u5316\u7684\uff0c\u5341\u5206\u7b80\u5355\uff0c\u5c31\u662f\u770b\u770b\u4e00\u4e2a\u70b9\u7684\u5de6\u8fb9\u7684**\u8282\u70b9\u6570**\u548c\u53f3\u8fb9\u7684\u662f\u4e0d\u662f**\u76f8\u7b49**\u5c31\u5b8c\u4e86\u3002\n\n\u4ee3\u7801\u5199\u5f97\u5f88\u957f\uff0c\u770b\u770b\u5c31\u597d\u4e86\uff0c\u522b\u6284\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\nusing namespace std;\nint n;\nstruct node\n{\n    int w,l,r;//\u70b9\u7684\u6743\u91cd\u548c\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u7f16\u53f7\n    int suml,sumr;//\u8fd9\u662f dfs() \u7528\u5230\u7684\n}tree[1000005];\nvector<node> fv,mv;//\u524d\u7f00\u548c\u4e2d\u7f00\nint len;//\u7528\u6765\u7edf\u8ba1\u5bf9\u79f0\u4e8c\u53c9\u6811\u7684\u5927\u5c0f\nint dfs(int num,int last,int lr)//\u8fd9\u4e2a\u662f\u5904\u7406\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u70b9\u7684\u6570\u91cf\n{\n\tint i;\n\tif(tree[num].l!=-1)\n\t{\n\t\tdfs(tree[num].l,num,0);\n\t}\n\tif(tree[num].r!=-1)\n\t{\n\t\tdfs(tree[num].r,num,1);\n\t}\n\tif(lr==0)\n\t{\n\t\ttree[last].suml=tree[num].suml+tree[num].sumr+1;\n\t}else\n\t{\n\t\ttree[last].sumr=tree[num].suml+tree[num].sumr+1;\n\t}\n}\nvoid dfsl(int num)//\u5904\u7406\u5148\u5de6\u904d\u5386\u7684\u524d\u7f00\u548c\u4e2d\u7f00\n{\n    fv.push_back(tree[num]);\n    len++;\n    if(tree[num].l!=-1)\n    {\n        dfsl(tree[num].l);\n    }\n    mv.push_back(tree[num]);\n    if(tree[num].r!=-1)\n    {\n        dfsl(tree[num].r);\n    }\n}\nint fstep,mstep,ck;\nbool chck(node a,node b)//\u5224\u65ad\u4e24\u4e2a\u524d\u7f00\u6216\u4e2d\u7f00\u4e2d\u7684\u4e1c\u897f\u662f\u5426\u76f8\u540c\n{\n    if(a.w!=b.w) return 0;\n    if(a.l==-1&&b.r!=-1) return 0;\n    if(a.l!=-1&&b.r==-1) return 0;\n    if(a.r==-1&&b.l!=-1) return 0;\n    if(a.r!=-1&&b.l==-1) return 0;\n    if(a.l==-1&&b.r==-1&&a.r==-1&&b.l==-1) return 1;\n    if(a.l==-1&&b.r==-1&&a.r!=-1&&b.l!=-1)\n    {\n        if(tree[a.r].w==tree[b.l].w) return 1;\n        else return 0;\n    }\n    if(a.l!=-1&&b.r!=-1&&a.r==-1&&b.l==-1)\n    {\n        if(tree[a.l].w==tree[b.r].w) return 1;\n        else return 0;\n    }\n    if(a.l!=-1&&b.r!=-1&&a.r!=-1&&b.l!=-1)\n    {\n        if(tree[a.l].w==tree[b.r].w&&tree[a.r].w==tree[b.l].w) return 1;\n        else return 0;\n    }\n}\nvoid dfsr(int num)//\u4f18\u5148\u904d\u5386\u53f3\u8282\u70b9\n{\n    if(!chck(fv[fstep],tree[num]))\n    {\n        ck=0;//\u524d\u7f00\u4e0d\u76f8\u540c\n        return;\n    }\n    fstep++;\n    if(tree[num].r!=-1)\n    {\n        dfsr(tree[num].r);\n    }\n    if(!chck(mv[mstep],tree[num]))\n    {\n        ck=0;//\u4e2d\u7f00\u4e0d\u76f8\u540c\n        return;\n    }\n    mstep++;\n    if(tree[num].l!=-1)\n    {\n        dfsr(tree[num].l);\n    }\n}\nint main()\n{\n    //freopen(\"tree.in\",\"r\",stdin);\n    //freopen(\"tree.out\",\"w\",stdout);\n    int i,j;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&tree[i].w);\n    }\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d %d\",&tree[i].l,&tree[i].r);\n    }\n    //\u8f93\u5165\u4e0d\u8bf4\u4e86\u3002\u3002\u3002\n    int maxn=1;\n    dfs(1,0,0);\n    for(i=1;i<=n;i++)//\u679a\u4e3e\u6839\u8282\u70b9\n    {\n    \tif(tree[i].suml!=tree[i].sumr)\n        {\n        \tcontinue;//\u5982\u679c\u4e0d\u76f8\u540c\u76f4\u63a5continue\n\t\t}\n        fv.clear();\n        mv.clear();\n        fstep=mstep=len=0,ck=1;\n        dfsl(i);\n        dfsr(i);\n        if(ck==1) maxn=max(maxn,len);//\u5982\u679c\u662f\u5bf9\u79f0\u6811\u5219\u53d6\u6700\u5927\u503c\n    }\n    cout<<maxn;\n    return 0;\n}\n```\n\nAnd it's over.\n\n## \u6ca1\u8003\u597d\u7684\u7ae5\u978b\u4e5f\u4e0d\u8981\u7070\u5fc3\u3002\n\n## NOIP 2019 \u8fd8\u5728\u7b49\u7740\u4f60\u4eec\u3002",
        "postTime": 1542260560,
        "uid": 62951,
        "name": "haiwenhan",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "~~\u8be5\u6b7b\u7684\u730e\u8c79\u6d4f\u89c8\u5668 \u4e0d\u5c31\u70b9\u4e86\u4e00\u4e0bBackspace\u5417 \u6211\u6253\u4e86\u4e00\u4e2a\u4e2d\u5348\u7684(\u8fa3\u9e21)\u9898\u89e3\u554a \u4f60\u8fd8\u6211\u554a...~~\n___\n[\u535a\u5ba2\u5730\u5740\u6301\u7eed\u66f4\u65b0\u9898\u89e3](https://www.luogu.org/blog/passs/p5018-dui-cheng-er-cha-shu-tong-ku-er-duan-zan-di-shui-fen-li-shi)(\u6c42\u6c42\u4f60\u70b9\u8fdb\u6765)\n\u5bf9\u4e8e\u6bd4\u8d5b\u6765\u8bf4 \u6c34\u66f4\u591a\u7684\u5206\u6570\u6bd4AC\u66f4\u4e3a\u91cd\u8981 \u56e0\u6b64\u6709\u826f\u597d\u7684\u66b4\u529b\u5fc3\u6001\u662f\u975e\u5e38\u91cd\u8981\u7684 \u800c\u8fd9\u9053\u672c\u5e94\u8be5\u662f\u6700\u96be\u7684\u9898\u610f\u5916\u7684\u8d34\u5408\u4e86\u9009\u624b\u4eec\u7684\u5fc3\u7406 \u5c06\u6b63\u89e3\u5de7\u5999\u7684\u8fdb\u5316\u6210\u4e3a\u4e86...\n\n# \u7206\u641c\n\n\u6ca1\u9519 \u672c\u4f53\u5c31\u662f\u4e00\u9053\u7b80\u5355\u7684dfs+\u526a\u679d \u4e0d\u8981\u56e0\u4e3a\u662f'T4\u548c\u63d0\u9ad8+'\u5c31\u88ab\u5413\u5230\u4e86 \u56e0\u4e3ata\u4e0d\u4ec5\u662f\u6700\u6e29\u6696\u4eba\u5fc3\u7684\u9898 \u8fd8\u662f~~PJ\u53f2\u4e0a\u5efa\u6811\u6700\u7b80\u5355\u7684\u9898~~\n\n\u56e0\u6b64 \u56e0\u4e3a\u5efa\u6811\u800c\u5bf9\u6811\u5f62\u7ed3\u6784\u611f\u5230\u6050\u614c\u7684\u540c\u5b66\u4e0d\u8981\u7070\u5fc3 \u56e0\u4e3a\u8fd9\u9053\u9898~~\u5c31\u662f\u4e00\u4e2a\u957f\u5f97\u50cf\u68f5\u6811\u7684\u56fe\u8bba~~\n\n~~\u672c\u9898\u526a\u679d\u7a7a\u95f4\u6781\u5927 TLE\u4ec0\u4e48\u7684\u526a\u4e00\u4e0b\u679d\u5c31\u597d\u4e86 \u4e0d\u4f1a\u4f5c\u4efb\u4f55\u58f0\u660e~~\n___\n## \u601d\u8def\n\n\u9996\u5148 \u672c\u9898\u7684\u9898\u610f\u7b80\u5316\u540e\u5982\u4e0b\uff1a\n\u7ed9\u51fa\u4e00\u4e2a\u4e8c\u53c9\u6811 \u6c42\u6ee1\u8db3\u5bf9\u79f0\u6027\u7684\u6700\u5927\u5b50\u6811 \u5e76\u8f93\u51fa\u5176\u8282\u70b9\u4e2a\u6570\n\u9996\u5148\u8003\u8651\u7206\u641c\u9a97\u5206 \u4e8e\u662f\u5f00\u59cb\u8003\u8651\u5982\u4f55dfs\n\n\u9996\u5148 \u7b80\u9898\u4e2d\u7ed9\u51fa\u4e86'\u5bf9\u79f0\u6027' \u800c\u5173\u4e8e\u5176\u6982\u5ff5\u5206\u4e3a\u4e24\u70b9\n\n\u2460  \u6743\u503c\u5bf9\u79f0\n\n\n\u2461  \u7ed3\u6784\u5bf9\u79f0\n\n\u56e0\u6b64dfs\u65f6\u53ea\u9700\u8981\u5224\u65ad\u8fd9\u4e24\u4e2a\u6761\u4ef6\u5373\u53ef \u4f46\u662f\u5e94\u8be5\u62ff\u5b50\u6811\u7684\u54ea\u4e9b\u513f\u5b50\u6765\u6bd4\u8f83\u5462\uff1f\n___\n## \u641c\u7d22\n\n![\u6817\u5b50](https://cdn.luogu.com.cn/upload/pic/43623.png)\n\n\u5f53\u524d\u5b50\u6811\u4e0b\u7684\u6700\u5927\u7236\u4eb2\u662f'id=1' \u6b64\u65f6\u82e5\u8981\u5224\u65ad\u5176\u5bf9\u79f0\u6027 \u6211\u4eec\u9996\u5148\u8981\u627e\u5230\u5b83\u7684\u5bf9\u79f0\u8f74 \u5219(\u84dd\u8272\u7ebf\u6761\u4e3a\u5bf9\u79f0\u8f74)\uff1a\n\n![\u6817\u5b50\u5148\u751f\u6539\u9020](https://cdn.luogu.com.cn/upload/pic/43624.png)\n\n\u6b64\u65f6\u53ef\u4ee5\u5217\u51fa\u5bf9\u79f0\u5173\u7cfb\uff1a\n\n _id=1 && id=1_ \n\n _id=2 && id=3_ \n\n _id=4 && id=7_ \n\n _id=5 && id=6_ \n \n (*:\u6839\u636e\u9898\u610f \u60c5\u51b5'id=4\u4e0eid=5'\u5e76\u4e0d\u6784\u6210\u5bf9\u79f0\u5173\u7cfb \u8bf7\u6ce8\u610f)\n \n\u56e0\u6b64\u6613\u5f97\u5224\u65ad\u8bed\u53e5(\u4f2a\uff1a\n \n### if(\u5de6\u513f\u5b50\u6743\u503c!=\u53f3\u513f\u5b50\u6743\u503c) \u8fdb\u884c\u4e0b\u4e00\u5c42\u5224\u65ad\n \n\u4f46\u663e\u7136\u7684 \u4e0b\u4e00\u5c42\u7684\u5224\u65ad\u5bf9\u8c61\u4ece2\u4e2a\u53d8\u4e3a4\u4e2a(\u5de6\u53f3\u513f\u5404\u4e24\u4e2a\u513f\u5b50) \u56e0\u6b64\u56de\u5230\u56fe\u7247 \u53ef\u4ee5\u770b\u51fa\u5bf9\u79f0\u5173\u7cfb\uff1a\n \n _id=4 && id=7_ \n\n _id=5 && id=6_ \n \n \u6240\u4ee5\u5f97\u5230\u4e0b\u4e00\u5c42\u5224\u65ad(\u4f2a\uff1a\n \n ### dfs(\u5de6\u513f\u5b50\u7684\u5de6\u513f\u5b50.id\uff0c\u53f3\u513f\u5b50\u7684\u53f3\u513f\u5b50.id);\n \n ### dfs(\u5de6\u513f\u5b50\u7684\u53f3\u513f\u5b50.id\uff0c\u53f3\u513f\u5b50\u7684\u5de6\u513f\u5b50.id);\n \n \u5173\u4e8e\u8fd4\u56de\uff1a\u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u6240\u6709\u513f\u5b50\u6709\u4e00\u5bf9\u4e0d\u6ee1\u8db3 \u5219\u505c\u6b62\u641c\u7d22break\u56de\u6700\u521d\u7684\u5faa\u73af(\u5faa\u73af\u4ec0\u4e48\uff1f\u5faa\u73af\u6bcf\u4e00\u4e2a\u6839\u8282\u70b9\uff01)\n \n \u5148\u4e0a\u4ee3\u7801\n```\n#include<cstdio>\n#include<cstring>\nint n;\nstruct nod{int x,y,c;} a[1000010];\nint maxx(int x,int y){return x>y?x:y;}\nint dfs(int c,int x,int y)\n{\n    if(x==-1 && y==-1) return c;\n    else if(x==-1 || y==-1) return 0;\n    if(a[x].c==a[y].c)\n    {\n        int l=dfs(c+1,a[x].x,a[y].y),r=dfs(c+1,a[x].y,a[y].x);\n        if(l==0 || r==0) return 0;\n        else return l+r-c;\n    }\n    return 0;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i].c);\n    for(int i=1;i<=n;i++) scanf(\"%d %d\",&a[i].x,&a[i].y);\n    int ans=1;\n    for(int i=1;i<=n;i++)\n    {\n        ans=maxx(ans,dfs(1,a[i].x,a[i].y));\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n ```\n \n \u7136\u800c\u849f\u84bb\u4e0d\u4f1a\u7b97\u65f6\u7a7a\u590d\u6742\u5ea6...",
        "postTime": 1542259614,
        "uid": 35125,
        "name": "passs",
        "ccfLevel": 0,
        "title": "P5018 \u5bf9\u79f0\u4e8c\u53c9\u6811/\u75db\u82e6\u800c\u77ed\u6682\u7684\u6c34\u5206\u5386\u53f2"
    },
    {
        "content": "\u7b97\u6cd5\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u66b4\u529b\u6bd4\u8f83\u5176\u5de6\u53f3\u5b50\u6811\u3002\u53ea\u9700\u8981\u5728\u7a7a\u8282\u70b9\u5904\u505c\u6b62\u6bd4\u8f83\uff0c\u6b64\u5916**\u4e0d\u9700\u8981\u4efb\u4f55\u526a\u679d**\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0c\u5f88\u591a\u4eba\u90fd\u8d34\u8fc7\u4e86\uff0c\u8fd9\u91cc\u53ea\u8bf4\u4e24\u70b9\uff1a\n1. \u5728\u6bd4\u8f83\u4e24\u68f5\u6811 $x$ \u548c $y$ \u65f6\uff0c\u4e0d\u59a8\u5047\u8bbe $\\textsf{size}[l[x]] \\le \\textsf{size}[r[x]]$\uff0c\u6b64\u65f6\u53ef\u4ee5**\u9012\u5f52**\u6bd4\u8f83 $l[x]\\sim r[y]$ \u5e76**\u5faa\u73af**\u6bd4\u8f83 $r[x] \\sim l[y]$. \u8fd9\u6837\u7684\u5c3e\u9012\u5f52\u4f18\u5316\u53ef\u4ee5\u4fdd\u8bc1\u6808\u6df1\u5ea6\u4e3a $O(\\log(n))$.\n2. \u66b4\u529b\u7684\u590d\u6742\u5ea6\u662f $O(n\\log(n))$\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f $O(n^2)$\u3002\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\uff0c\u603b\u6bd4\u8f83\u6b21\u6570\u4e0d\u53ea\u662f\u5c0f\u4e8e\u6240\u6709\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\uff0c\u800c\u4e14\u5c0f\u4e8e\u6240\u6709**\u8282\u70b9\u6570\u8f83\u5c11\u7684\u513f\u5b50**\u7684\u5927\u5c0f\u4e4b\u548c\u3002\u6bd4\u5982\u5bf9\u4e8e\u53ea\u6709\u5de6\u513f\u5b50\u7684\u6811\uff08\u5373\u94fe\uff09\uff0c\u5b9e\u9645\u4e0a\u603b\u6bd4\u8f83\u6b21\u6570\u4e3a  0\u3002\u4e0b\u9762\u662f\u4e25\u683c\u8bc1\u660e\u3002\n\n\u4ee4\n$$f(n):= \\max_{T=\\textsf{\u5927\u5c0f\u4e3a}n\\textsf{\u7684\u6811}}\\Bigg\\{\\sum_{t=T\\textsf{\u5185\u7684\u8282\u70b9}}\\min\\big\\{\\textsf{size}[l[t]], \\textsf{size}[r[t]]\\big\\}\\Bigg\\}$$\n\u5373\u5927\u5c0f\u4e3a $n$ \u7684\u6811\u4e2d\u6240\u6709**\u8282\u70b9\u6570\u8f83\u5c11\u7684\u513f\u5b50**\u7684\u5927\u5c0f\u4e4b\u548c\u7684\u6700\u5927\u503c\uff0c\u4e5f\u662f\u603b\u6bd4\u8f83\u6b21\u6570\u7684\u4e00\u4e2a\u4e0a\u9650\u3002\u6613\u77e5\uff1a\n$$f(n) = \\max\\Big\\{f(t) + f(n-1-t) + t \\mathrel{\\Big|} t=0,1,\\dots, \\left \\lfloor{\\frac{n-1}{2}}\\right \\rfloor \\Big\\}$$\n\u5176\u4e2d $t$ \u4ee3\u8868\u8f83\u5c0f\u7684\u90a3\u68f5\u5b50\u6811\u7684\u5927\u5c0f\u3002\u7279\u522b\u5b9a\u4e49 $f(0) = \\max\\{\\} := 0$.\n\n\u6b32\u5f52\u7eb3\u8bc1 $f(n) \\le n\\log_2(n)$.\n\n\u5bf9\u4e8e $n=0$ \u548c $n=1$\uff0c$f(n) = 0 \\le n\\log_2(n)$.\n- \u6ce8\uff1a\u867d\u7136 $\\log_2(n)$ \u5728 $n=0$ \u65e0\u5b9a\u4e49\uff0c\u4f46 $n\\log_2(n)$ \u5728 $n=0$ \u6709\u6781\u9650 $0$\uff0c\u56e0\u800c\u4e0d\u5f71\u54cd\u4e0b\u6587\u4f9d\u8d56\u51fd\u6570\u8fde\u7eed\u6027\u7684\u6781\u503c\u5206\u6790\u3002\n\n\u5bf9\u4e8e $n>1$\uff0c\u7531\u5f52\u7eb3\u5047\u8bbe\u77e5\n$$f(n) \\le \\max\\Big\\{t\\log_2(t) + (n-1-t)\\log_2(n-1-t) + t \\mathrel{\\Big|} t \\in \\Big[0, \\frac{n-1}{2}\\Big]\\Big\\}$$\n\n\u53f3\u8fb9\u8fde\u7eed\u4e14\u5173\u4e8e $t$ \u7684\u4e8c\u9636\u5bfc $\\frac{1}{t}+\\frac{1}{n-1-t}$ \u5728\u5b9a\u4e49\u533a\u95f4\u5185\u90e8\u6052\u4e3a\u6b63\uff0c\u56e0\u6b64\u4e3a\u95ed\u533a\u95f4\u5185\u7684\u4e0b\u51f8\u51fd\u6570\uff0c\u5b58\u5728\u6700\u5927\u503c\u4e14\u53ea\u53ef\u80fd\u4f4d\u4e8e\u4e24\u7aef\uff0c\u5373 $t=0$ \u6216 $t=\\frac{n-1}{2}$. \u5e26\u5165\u53ef\u5f97\n$$f(n)\\le \\max\\Big\\{(n-1)\\log_2(n-1),\\;\\frac{n-1}{2}\\log_2\\frac{n-1}{2} \\times 2 + \\frac{n-1}{2}\\Big\\} \\le n\\log_2(n)$$\n\n\u8bc1\u6bd5\u3002\n\n\u8003\u8651\u6ee1\u4e8c\u53c9\u6811\u53ef\u77e5\uff0c$O(n\\log(n))$ \u4e3a\u66b4\u529b\u590d\u6742\u5ea6\u7684\u7cbe\u786e\u4e0a\u754c\u3002",
        "postTime": 1542031564,
        "uid": 92566,
        "name": "exprosic",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "~~\u770b\u5230\u597d\u591a\u66b4\u529b\u8fc7\u4e86\u8ba9\u6211\u8fd9\u4e2a\u8003\u573a\u7801\u4e86 6097B \u54c8\u5e0c\u7684\u849f\u84bb\u597d\u96be\u8fc7\u554a~~\n\n\u6211\u4eec\u4e0d\u59a8\u5148\u628a\u6240\u6709\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u4ea4\u6362\uff0c\u5efa\u51fa\u4e00\u68f5\u65b0\u7684\u4e8c\u53c9\u6811\u3002\u90a3\u4e48\u8fd9\u65f6\uff0c\u53ef\u4ee5\u679a\u4e3e\u6240\u6709\u8282\u70b9\uff0c\u53ea\u8981\u68c0\u67e5\u5b83\u5728\u539f\u6811\u548c\u65b0\u6811\u4e2d\u7684\u5b50\u6811\uff0c\u662f\u5426\u7ed3\u6784\u76f8\u540c\u4e14\u6743\u503c\u76f8\u7b49\u5373\u53ef\u3002\n\n\u6211\u4eec\u77e5\u9053\uff1a\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u53ef\u4ee5\u786e\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\u3002\u90a3\u4e48\u6211\u4eec\u5bf9\u8fd9\u4e24\u68f5\u4e8c\u53c9\u6811\u90fd\u6c42\u51fa\u5b83\u4eec\u7684\u524d\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u3002\u904d\u5386\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u5b58\u50a8\u7684\u4e0d\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u8282\u70b9\u7f16\u53f7\uff0c\u800c\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u8282\u70b9\u7684\u6743\u503c\u4e58\u4e0a\u6839\u636e\u5b83\u7684\u6df1\u5ea6\u800c\u786e\u5b9a\u7684\u4e00\u4e2a\u968f\u673a\u6570\uff08\u4e3a\u4e86\u9632\u6b62\u51fa\u9898\u4eba\u5361\uff0c\u5bfc\u81f4\u503c\u76f8\u540c\u800c\u5224\u9519\uff09\uff0c\u5373 $v_i \\times R_{depth_i}$\uff0c\u56e0\u4e3a\u70b9\u7684\u6df1\u5ea6\u8981\u76f8\u540c\u624d\u80fd\u6ee1\u8db3\u540c\u6784\u3002\n\n\u8fd9\u6837\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u8bb0\u5b83\u5728\u524d\u5e8f\u904d\u5386\u4e2d\u7684\u4f4d\u7f6e\u4e3a $qx_i$\uff0c\u8bb0\u5b83\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u7684\u4f4d\u7f6e\u4e3a $zx_i$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5bf9\u5e94\u7684\u5b50\u6811\uff0c\u5728\u524d\u5e8f\u904d\u5386\u4e2d\u5bf9\u5e94\u7740 $[qx_i, qx_i + size_i - 1]$ \u8fd9\u6bb5\u533a\u95f4\uff0c\u800c\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u5bf9\u5e94\u7740 $[zx_i - size_{lson_i}, zx_i + size_{rson_i}]$ \u8fd9\u6bb5\u533a\u95f4\u3002\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\uff0c\u5c31\u53ef\u4ee5\u505a\u5230 $O(1)$ \u68c0\u67e5\u8fd9\u68f5\u5b50\u6811\u662f\u5426\u6ee1\u8db3\u8981\u6c42\u4e86\u3002\n\n\u9884\u5904\u7406\u54c8\u5e0c\u9700\u8981 $O(n)$ \u7684\u590d\u6742\u5ea6\uff0c\u679a\u4e3e\u6bcf\u4e2a\u70b9\u9700\u8981 $O(n)$\uff0c\u4f46\u662f\u5224\u65ad\u53ea\u9700\u8981 $O(1)$\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\u53ef\u4ee5\u901a\u8fc7 $10^6$ \u7684\u6570\u636e\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n\ntypedef long long llt;\n\nconst int MaxN = 1000000 + 5;\nconst llt H1 = 17, H2 = 29;\nconst llt Mod1 = 998244353, Mod2 = 998244853;\n\nint N;\nint V[MaxN];\nint ch[2][MaxN];\nint qx[2][MaxN], zx[2][MaxN], cntv[2];\nint dfn_qx[2][MaxN], dfn_zx[2][MaxN];\nint A[2][MaxN], B[2][MaxN];\nint Size[MaxN], depth[MaxN];\n\nllt R[MaxN];\nllt Power_H1[MaxN], Power_H2[MaxN];\nllt Hash_A1[2][MaxN], Hash_B1[2][MaxN];\nllt Hash_A2[2][MaxN], Hash_B2[2][MaxN];\n\ninline int read() {\n    int x = 0, f = 1; char c;\n    do {\n        c = getchar();\n        if (c == '-') f = -1;\n    } while (c < '0' || c > '9');\n    do x = (x << 1) + (x << 3) + c - '0', c = getchar(); while (c >= '0' && c <= '9');\n    return x * f;\n}\n\nvoid init() {\n    scanf(\"%d\", &N);\n    for (int i = 1; i <= N; ++i) V[i] = read();\n    for (int i = 1; i <= N; ++i) {\n        ch[0][i] = read();\n        ch[1][i] = read();\n    }\n}\n\n// \u6c42\u524d\u5e8f\u904d\u5386\nvoid dfs_qx(int u, int t) {\n    dfn_qx[t][u] = ++cntv[t];\n    qx[t][cntv[t]] = u;\n    if (ch[t][u] != -1) dfs_qx(ch[t][u], t);\n    if (ch[t^1][u] != -1) dfs_qx(ch[t^1][u], t);\n}\n\n// \u6c42\u4e2d\u5e8f\u904d\u5386\nvoid dfs_zx(int u, int t) {\n    if (ch[t][u] != -1) dfs_zx(ch[t][u], t);\n    dfn_zx[t][u] = ++cntv[t];\n    zx[t][cntv[t]] = u;\n    if (ch[t^1][u] != -1) dfs_zx(ch[t^1][u], t);\n}\n\n// \u8ba1\u7b97\u5b50\u6811\u5927\u5c0f\u53ca\u6df1\u5ea6\nvoid calc_size(int u) {\n    Size[u] = 1;\n    if (ch[0][u] != -1) {\n        depth[ch[0][u]] = depth[u] + 1;\n        calc_size(ch[0][u]);\n        Size[u] += Size[ch[0][u]];\n    }\n    if (ch[1][u] != -1) {\n        depth[ch[1][u]] = depth[u] + 1;\n        calc_size(ch[1][u]);\n        Size[u] += Size[ch[1][u]];\n    }\n}\n\nvoid init_Hash() {\n    Power_H1[0] = Power_H2[0] = 1;\n    for (int i = 1; i <= N; ++i) {\n        Power_H1[i] = Power_H1[i - 1] * H1 % Mod1;\n        Power_H2[i] = Power_H2[i - 1] * H2 % Mod2;\n    }\n    for (int i = 1; i <= N; ++i) {\n        Hash_A1[0][i] = (Hash_A1[0][i - 1] * H1 + A[0][i]) % Mod1;\n        Hash_A2[0][i] = (Hash_A2[0][i - 1] * H2 + A[0][i]) % Mod2;\n        Hash_A1[1][i] = (Hash_A1[1][i - 1] * H1 + A[1][i]) % Mod1;\n        Hash_A2[1][i] = (Hash_A2[1][i - 1] * H2 + A[1][i]) % Mod2;\n        Hash_B1[0][i] = (Hash_B1[0][i - 1] * H1 + B[0][i]) % Mod1;\n        Hash_B2[0][i] = (Hash_B2[0][i - 1] * H2 + B[0][i]) % Mod2;\n        Hash_B1[1][i] = (Hash_B1[1][i - 1] * H1 + B[1][i]) % Mod1;\n        Hash_B2[1][i] = (Hash_B2[1][i - 1] * H2 + B[1][i]) % Mod2;\n    }\n}\n\n// \u68c0\u9a8c\u8be5\u5b50\u6811\u662f\u5426\u6ee1\u8db3\u8981\u6c42\nbool check(int id) {\n    int l1 = dfn_qx[0][id], l2 = dfn_qx[1][id],\n        r1 = l1 + Size[id] - 1, r2 = l2 + Size[id] - 1;\n    llt Hash1A1 = (Hash_A1[0][r1] - Hash_A1[0][l1 - 1] * Power_H1[r1 - l1 + 1]) % Mod1,\n        Hash1A2 = (Hash_A1[1][r2] - Hash_A1[1][l2 - 1] * Power_H1[r2 - l2 + 1]) % Mod1,\n        Hash2A1 = (Hash_A2[0][r1] - Hash_A2[0][l1 - 1] * Power_H2[r1 - l1 + 1]) % Mod2,\n        Hash2A2 = (Hash_A2[1][r2] - Hash_A2[1][l2 - 1] * Power_H2[r2 - l2 + 1]) % Mod2;\n    Hash1A1 = (Hash1A1 % Mod1 + Mod1) % Mod1;\n    Hash1A2 = (Hash1A2 % Mod1 + Mod1) % Mod1;\n    Hash2A1 = (Hash2A1 % Mod2 + Mod2) % Mod2;\n    Hash2A2 = (Hash2A2 % Mod2 + Mod2) % Mod2;\n\n    if (Hash1A1 != Hash1A2 || Hash2A1 != Hash2A2) return false;\n\n    l1 = (ch[0][id] == -1 ? dfn_zx[0][id] : dfn_zx[0][id] - Size[ch[0][id]]),\n    r1 = (ch[1][id] == -1 ? dfn_zx[0][id] : dfn_zx[0][id] + Size[ch[1][id]]),\n    l2 = (ch[1][id] == -1 ? dfn_zx[1][id] : dfn_zx[1][id] - Size[ch[1][id]]),\n    r2 = (ch[0][id] == -1 ? dfn_zx[1][id] : dfn_zx[1][id] + Size[ch[0][id]]);\n\n    llt Hash1B1 = (Hash_B1[0][r1] - Hash_B1[0][l1 - 1] * Power_H1[r1 - l1 + 1]) % Mod1,\n        Hash1B2 = (Hash_B1[1][r2] - Hash_B1[1][l2 - 1] * Power_H1[r2 - l2 + 1]) % Mod1,\n        Hash2B1 = (Hash_B2[0][r1] - Hash_B2[0][l1 - 1] * Power_H2[r1 - l1 + 1]) % Mod2,\n        Hash2B2 = (Hash_B2[1][r2] - Hash_B2[1][l2 - 1] * Power_H2[r2 - l2 + 1]) % Mod2;\n    Hash1B1 = (Hash1B1 % Mod1 + Mod1) % Mod1;\n    Hash1B2 = (Hash1B2 % Mod1 + Mod1) % Mod1;\n    Hash2B1 = (Hash2B1 % Mod2 + Mod2) % Mod2;\n    Hash2B2 = (Hash2B2 % Mod2 + Mod2) % Mod2;\n\n    if (Hash1B1 != Hash1B2 || Hash2B1 != Hash2B2) return false;\n\n    return true;\n}\n\nvoid solve() {\n    dfs_qx(1, 0); dfs_qx(1, 1);\n    cntv[0] = cntv[1] = 0;\n    dfs_zx(1, 0); dfs_zx(1, 1);\n    depth[1] = 1; calc_size(1);\n\n    // \u751f\u6210\u968f\u673a\u6570\uff0c\u9632\u6b62\u88ab\u51fa\u9898\u4eba\u5361\n    srand(2018);\n    for (int i = 1; i <= N; ++i) R[i] = rand() + 1;\n\n    for (int i = 1; i <= N; ++i) {\n        A[0][i] = 1ll * V[qx[0][i]] * R[depth[qx[0][i]]];\n        A[1][i] = 1ll * V[qx[1][i]] * R[depth[qx[1][i]]];\n        B[0][i] = 1ll * V[zx[0][i]] * R[depth[zx[0][i]]];\n        B[1][i] = 1ll * V[zx[1][i]] * R[depth[zx[1][i]]];\n    }\n\n    init_Hash();\n\n    int Max_size = 1;\n    for (int i = 1; i <= N; ++i) {\n        if (check(i) == true) {\n            Max_size = max(Max_size, Size[i]);\n        }\n    }\n\n    printf(\"%d\\n\", Max_size);\n}\n\nint main() {\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1541994740,
        "uid": 48843,
        "name": "Tweetuzki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811 \u3011"
    },
    {
        "content": "\u9996\u5148\u770b\u770b\u66b4\u529b\u505a\u6cd5\n\n\u66b4\u529b\u505a\u6cd5\u5c31\u662f\u62ff\u5230\u4e00\u68f5\u6811\uff0c\u5224\u65ad\u5b83\u5de6\u5b50\u6811\u662f\u5426\u548c\u53f3\u5b50\u6811\u5bf9\u79f0\uff0c\u800c\u4e24\u68f5\u6811\u5bf9\u79f0\u7684\u4ee3\u7801\u5f88\u5bb9\u6613\u5199\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u9012\u63a8\u5f0f\uff1a\n\n$$T(n)=\\Theta(1)+2T(\\frac{n}{2})$$\n\n\u89e3\u5f97$T(n)=\\Theta(n)$\uff0c\u800c\u66b4\u529b\u505a\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u662f\n\n$$T(n)=\\Theta(n)+2T(\\frac{n}{2})$$\n\n\u548c\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7b49\u4ef7\uff0c\u4e3a$\\Theta(nlogn)$\u56e0\u6b64\u80fd\u8fc7\n\n\u63a5\u4e0b\u6765\u662f\u4f60\u4eec\u4f17\u671b\u6240\u5f52\u7684\u9a6c\u62c9\u8f66\uff1a\n\n# \u9a6c\u62c9\u8f66\u7b97\u6cd5\u53ef\u884c\u6027\u7814\u7a76\n\n\u5bf9\u4e8e\u9a6c\u62c9\u8f66\u7b97\u6cd5\uff0c\u4e00\u79cd\u601d\u8def\u662f\u52a0\u62ec\u53f7\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u4e0a\u8dd1\u9a6c\u62c9\u8f66\uff0c\u8fd9\u65f6\u5019\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta(n)$\u3002\u5176\u4e2d\u62ec\u53f7\u4e2d\u5e8f\u904d\u5386\u7684\u5b9a\u4e49\u662f`mt[t]=#mt[lt[t]]#wi[t]#mt[rt[t]]#`\u3002\n\n\u5728\u8be5\u5b9a\u4e49\u4e0b\u7684\u6781\u5927\u56de\u6587\u5b50\u4e32\uff08\u5373\uff0c\u4e0d\u80fd\u518d\u5927\u7684\u56de\u6587\u5b50\u4e32\uff09\u4e00\u5b9a\u5bf9\u5e94\u4e00\u68f5\u6811\uff08\u8bc1\u660e\u592a\u70e6\u4e0d\u60f3\u5199\uff09\uff0c\u56e0\u6b64\u6700\u5927\u56de\u6587\u5b50\u4e32\u4e5f\u4e00\u5b9a\u5bf9\u5e94\u4e00\u68f5\u6811\u3002\n\n\u800c\u4f7f\u7528\u548chash\u7b97\u6cd5\u4e00\u6837\u7684\u8bc1\u660e\u65b9\u6cd5\uff0c\u8be5\u6811\u7684\u52a0\u62ec\u53f7\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u4e3a\u56de\u6587\u5b50\u4e32\u7b49\u4ef7\u4e8e\u8be5\u6811\u662f\u5bf9\u79f0\u4e8c\u53c9\u6811\uff0c\u56e0\u6b64\u9a6c\u62c9\u8f66\u80fd\u8dd1\u3002\n\n\u3010\u8bfb\u8005\u53ef\u4ee5\u81ea\u5df1\u8bd5\u7740\u53bb\u8bc1\u4e00\u4e0b\u3011\n\n# hash\u7b97\u6cd5\n\n\u8fd9\u4e2ahash\u51fd\u6570\u9664\u4e86\u8003\u8651\u70b9\u7684\u6743\u503c\u4e4b\u5916\uff0c\u5e94\u8be5\u8fd8\u8981\u8003\u8651\u6811\u7684\u7ed3\u6784\n\n\u7136\u800c\uff0c\u6734\u7d20\u7684hash\u5b50\u6811\u7eb5\u5411\u7ffb\u8f6c\u662f\u5224\u4e0d\u51fa\u6765\u7684\u2026\u2026\u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u8fd8\u662f$\\Theta(n^2)$\n\n\u5f88\u81ea\u7136\u5730\uff0c\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u7ed9\u5de6\u53f3\u5b50\u6811\u8d4b\u4e00\u4e2a\u4e0d\u540c\u7684\u6743\u503c\uff0c\u4f7fhash\u51fd\u6570\u80fd\u591f\u53cd\u6620\u6811\u7684\u7ed3\u6784\n\n\u4f46\u662f\uff0c\u5982\u679c\u7ed9\u5de6\u53f3\u5b50\u6811\u7684\u6743\u503c\u8d4b\u6b7b\uff0c\u5219\u4f1a\u51fa\u73b0`ssto`\u7684\u4e24\u68f5\u6811\u54c8\u5e0c\u503c\u4e0d\u540c\u7684\u60c5\u51b5\n\n\u5982\u679c\u6df1\u5165\u770b\u770b`ssto`\u7684\u5b9a\u4e49\uff0c\u4f1a\u53d1\u73b0\u67d0\u9897\u5de6\u5b50\u6811\u4ec5\u53ef\u80fd\u548c\u67d0\u9897\u53f3\u5b50\u6811\u6709\u5224\u65ad\u662f\u5426`ssto`\u7684\u5fc5\u8981\uff0c\u6240\u4ee5hash\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\uff1a\n\n```\nhash[0] = 0\nhash[lt[x]] = (hash[lt[lt[x]], hash[rt[lt[x]], wi[lt[x]])\nhash[rt[x]] = (hash[rt[rt[x]], hash[lt[rt[x]], wi[rt[x]])\n```\n\n\u6839\u7ed3\u70b9\u7684hash\u503c\u6ca1\u6709\u5b9a\u4e49\uff0c\u4e5f\u6ca1\u6709\u5b9a\u4e49\u7684\u5fc5\u8981\u3002\n\n\u56e0\u6b64\uff0c\u4e24\u68f5\u6811`lt[x]=t1`\u548c`rt[y]=t2`hash\u503c\u76f8\u540c\u7684\u5145\u8981\u6761\u4ef6\u662f\uff1a\n\n+ `hash[lt[t1]] == hash[rt[t2]]`\n+ `hash[rt[t1]] == hash[lt[t2]]`\n+ `wi[t1] == wi[t2]`\n\n\u56e0\u6b64\uff0c\u5373\u53ef\u5224\u65ad\u5728\u8be5\u5927\u524d\u63d0\u4e0b\uff0c`hash[t1]==hash[t2]`\u7684\u5145\u8981\u6761\u4ef6\u662f`ti ssto t2`\n\n\u53e6\uff0c\u4e3a\u907f\u514d\u51b2\u7a81\u60c5\u51b5\uff0c\u5728hash\u5224\u65ad\u76f8\u540c\u540e\u6211\u53c8\u7528\u6734\u7d20\u65b9\u6cd5\u5224\u65ad\u5341\u5c42\u4ee5\u786e\u4fdd\u4e24\u68f5\u6811\u76f8\u4f3c\uff0c\u5404\u4f4d\u5927\u4f6c\u901a\u8fc7\u9002\u5f53\u9009\u62e9hash\u51fd\u6570\u662f\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\u7684\u5427\u2026\u2026\n\n\u65f6\u95f4\u6548\u7387$\\Theta(n)$\n\n\u9644AC\u4ee3\u7801\uff1a\n\n```\n#include <cstdio>\nusing namespace std;\n\n#define p1 999999989\n#define p2 100000007\n#define p3 100000037\n\nint wi[1000005];\nlong long hash1[1000005];\nlong long hash2[1000005];\nlong long hash3[1000005];\n\nvoid getint(int& x)\n{\n\tx = 0;\n\tint sign = 1;\n\tint c;\n\twhile((c=getchar())<'0' || c>'9')\n\t{\n\t\tif(c=='-')\n\t\t{\n\t\t\tsign = -1;\n\t\t}\n\t}\n\tx = c^'0';\n\twhile((c=getchar())>='0' && c<='9')\n\t{\n\t\tx = (x<<3)+(x<<1)+(c^'0');\n\t}\n\tx *= sign;\n}\n\nint q[1000005];\nint size[1000005];\nint lt[1000005];\nint rt[1000005];\n\nbool ssto(int t1,int t2,int lev)\n{\n\tif(!t1 && !t2)\n\t{\n\t\treturn true;\n\t}\n\tif((!t1 && t2)||(t1 && !t2)||(wi[t1]!=wi[t2])||(hash1[t1]!=hash1[t2])||(hash2[t1]!=hash2[t2])||(hash3[t1]!=hash3[t2]))\n\t{\n\t\treturn false;\n\t}\n\tif(!lev)\n\t{\n\t\treturn true;\n\t}\n\treturn ssto(lt[t1],rt[t2],lev-1)&&ssto(rt[t1],lt[t2],lev-1);\n}\n\nint main()\n{\n\tint n;\n\tgetint(n);\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tgetint(wi[i]);\n\t}\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tgetint(lt[i]);\n\t\tgetint(rt[i]);\n\t\tif(!(~lt[i]))\n\t\t{\n\t\t\tlt[i] = 0;\n\t\t}\n\t\tif(!(~rt[i]))\n\t\t{\n\t\t\trt[i] = 0;\n\t\t}\n\t}\n\n\tint f,e;\n\tq[1] = 1;\n\tf = e = 1;\n\twhile(f<=e)\n\t{\n\t\tint th = q[f];\n\t\t++f;\n\t\tif(lt[th])\n\t\t{\n\t\t\t++e;\n\t\t\tq[e] = lt[th];\n\t\t}\n\t\tif(rt[th])\n\t\t{\n\t\t\t++e;\n\t\t\tq[e] = rt[th];\n\t\t}\n\t}\n\n\tfor(int i=n; i>=1; --i)\n\t{\n\t\tint t = q[i];\n\t\tif(lt[t])\n\t\t{\n\t\t\thash1[lt[t]] = ((((hash1[lt[lt[t]]]<<10) + hash1[rt[lt[t]]])<<10) + wi[i]) % p1;\n\t\t\thash2[lt[t]] = ((((hash2[lt[lt[t]]]<<5)  + hash2[rt[lt[t]]])<<5 ) + wi[i]) % p2;\n\t\t\thash3[lt[t]] = ((((hash3[lt[lt[t]]]<<13) + hash3[rt[lt[t]]])<<13) + wi[i]) % p3;\n\t\t}\n\t\tif(rt[t])\n\t\t{\n\t\t\thash1[rt[t]] = ((((hash1[rt[rt[t]]]<<10) + hash1[lt[rt[t]]])<<10) + wi[i]) % p1;\n\t\t\thash2[rt[t]] = ((((hash2[rt[rt[t]]]<<5)  + hash2[lt[rt[t]]])<<5 ) + wi[i]) % p2;\n\t\t\thash3[rt[t]] = ((((hash3[rt[rt[t]]]<<13) + hash3[lt[rt[t]]])<<13) + wi[i]) % p3;\n\t\t}\n\t\tsize[t] = size[lt[t]]+size[rt[t]]+1;\n\t}\n\n\tint ans = 0;\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tif((size[i]&1) && hash1[lt[i]]==hash1[rt[i]] && hash2[lt[i]]==hash2[rt[i]] && hash3[lt[i]]==hash3[rt[i]])\n\t\t{\n\t\t\tif(wi[lt[i]]==wi[rt[i]] && ssto(lt[lt[i]],rt[rt[i]],10) && ssto(rt[lt[i]],lt[rt[i]],10))\n\t\t\t{\n\t\t\t\tif(size[i]>ans)\n\t\t\t\t{\n\t\t\t\t\tans = size[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\",ans);\n\n\treturn 0;\n}\n```",
        "postTime": 1541949537,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811 \u3011"
    },
    {
        "content": "\u8fd9\u9898\u89e3\u6cd5\u591a\u79cd\u591a\u6837\uff0c\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u867d\u7136\u7b80\u5355~~\u800c\u4e14\u6162~~\u7684\u904d\u5386\u5e8f\u505a\u6cd5\u3002\n\n\u9996\u5148\u53ef\u4ee5yy\u51fa\u6765\uff0c\u5982\u679c\u4e00\u4e2a\u6811\u662f\u5bf9\u79f0\u7684\uff0c\u53ef\u4ee5\u77e5\u9053\uff0c\u6309\u7167\u524d\u5e8f\u904d\u5386\u5148\u5de6\u540e\u53f3\u548c\u6309\u7167\u524d\u5e8f\u904d\u5386\u5148\u53f3\u540e\u5de6\u5f97\u5230\u7684\u5e8f\u5217\u662f\u4e00\u6837\u7684\u3002\uff08\u5f53\u7136\u5e8f\u5217\u91cc\u9762\u653e\u7684\u662f\u70b9\u6743\uff09\n\n\u7136\u800c\u5e76\u975e\u8fd9\u4e48\u7b80\u5355\u3002\u8fd9\u662f\u4e00\u4e2a\u5bf9\u79f0\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff0c\u800c\u975e\u4e00\u4e2a\u5224\u5b9a\u51c6\u5219\u3002\u8fd9\u6837\u505a\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4e24\u9897\u6811\u5f62\u6001\u76f8\u540c\u3002\u53ef\u4ee5\u60f3\u60f3\u4e3a\u4ec0\u4e48\u3002\n\n\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u5728\u6bcf\u6b21\u5230\u8fbe $-1$ \u7684\u7a7a\u8282\u70b9\u65f6\uff0c\u5c31\u5f80\u5e8f\u5217\u91cc\u9762\u585e\u4e00\u4e2a $-1$ \uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6784\u9020\u51fa\u7684\u5e8f\u5217\u76f8\u540c\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e8c\u53c9\u6811\u5bf9\u79f0\u4e86\u3002\n\n\u6240\u4ee5\u8fd9\u79cd\u505a\u6cd5\u8fd1\u4e4e\u66b4\u529b\uff0c\u88ab\u5176\u4ed6\u7b97\u6cd5\u540a\u6253\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u8fd8\u6709\u4e00\u70b9\uff0c\u5c31\u662f\u6211\u4eec\u8981\u904d\u5386\u4e24\u6b21\u6811\uff0c\u7b2c\u4e00\u6b21\u8bb0\u5f55 $size$ \u8fd8\u4e0d\u591f\uff0c\u8981\u8bb0\u5f55\u67d0\u4e2a\u5b50\u6811\u5728\u5148\u5de6\u540e\u53f3\u7684\u5e8f\u5217\u4e2d\u7684\u8d77\u59cb\u70b9 $start$ \uff0c\u8fd9\u6837\u8fd8\u4e0d\u591f\uff0c\u56e0\u4e3a\u6211\u4eec\u7684 $size$ \u5728\u5e8f\u5217\u91cc\u9762\u6ca1\u6709\u7528\u4e86\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5728\u5e8f\u5217\u4e00\u9762\u7684\u90a3\u4e48\u591a $-1$ \uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u8bb0\u5f55\u7ed3\u675f\u70b9 $end$\u3002\n\n\u7b2c\u4e8c\u6b21\u904d\u5386\u6811\uff0c\u5c31\u8981\u8bb0\u5f55\u5148\u53f3\u540e\u5de6\u7684\u904d\u5386\u5e8f\u5217\u4e86\uff0c\u8fd9\u65f6\u4e0d\u7528\u518d\u7ef4\u62a4\u51fa\u53e6\u4e00\u4e2a\u610f\u4e49\u4e0a\u7684 $start$ \u548c $end$ \u4e86\uff0c\u53ea\u8981\u7528\u5355\u4e2a\u53d8\u91cf\u8bb0\u5f55\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u8bf4\u6ca1\u6709\u9012\u5f52\u5b50\u8282\u70b9\u524d\u7684\u5e8f\u5217\u672b\u5c3e\u5c31\u662f $start$ \uff0c\u5728\u904d\u5386\u5b8c\u4e4b\u540e\u7684\u672b\u5c3e\u5c31\u662f $end$ \u5e94\u8be5\u4e0d\u7528\u8bb2\u4e86\u5427...\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#define maxn 1000001\n\nint n,lc[maxn],rc[maxn];\nint w[maxn],size[maxn];\n\nint f[maxn << 1],start[maxn],end[maxn],t;\nvoid Dfs1(int v){\n    if(v == -1){\n        f[++t] = -1;\n        return;\n    }\n    f[++t] = w[v];\n    start[v] = t;\n    Dfs1(lc[v]);\n    Dfs1(rc[v]);\n    end[v] = t;\n    size[v] = size[lc[v]] + size[rc[v]] + 1;\n}\nint ans;\nint l[maxn << 1];\ninline bool check(int v,int now){\n    for(int i = start[v];i <= end[v];i++)\n        if(f[i] != l[now + i - start[v]])return false;\n    return true;\n}\nvoid Dfs(int v){\n    if(v == -1){\n        l[++t] = -1;\n        return;\n    }\n    l[++t] = w[v];\n    int now = t;\n    Dfs(rc[v]);\n    Dfs(lc[v]);\n    if(check(v,now))ans = std::max(ans,size[v]);\n}\n\nint main(){\n    std::cin >> n;\n    for(int i = 1;i <= n;i++)std::scanf(\"%d\",w + i);\n    for(int i = 1;i <= n;i++){\n        std::scanf(\"%d %d\",lc + i,rc + i);\n    }\n    Dfs1(1);t = 0;\n    Dfs(1);\n    std::printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1579248962,
        "uid": 219595,
        "name": "Vocalise",
        "ccfLevel": 9,
        "title": "\u904d\u5386\u5e8f\u505a\u6cd5--\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u6bd4\u53bb\u5e74\u7b2c\u56db\u9898\u7b80\u5355\u975e\u5e38\u591a\u3002\n\u5e76\u4e14 NOIP \u8003\u5bdf\u4e86\u4fe1\u4ef0\u4e00\u4ea4\u6280\u80fd\u3002\uff08\u5373\u5199\u4e00\u4e2a\u66b4\u529b\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u7684\uff0c\u770b\u6562\u4e0d\u6562\u4ea4\uff09 \u8003\u5bdf\u4e86\u7206\u6808\uff0c\u4f46\u636e\u9648\u4fca\u951f\u8bf4\uff0cNOIP \u4e00\u76f4\u5f00\u6808\uff0c\u867d\u7136\u5e76\u6ca1\u6709\u516c\u5f00\u3002\n\u5927\u610f\uff1a\n\u8f93\u5165\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u95ee\u6709\u591a\u5c11\u4e2a\u4e8c\u53c9\u6811\u662f\u5bf9\u79f0\u7684\u3002\n\u4e8c\u53c9\u6811\u6bcf\u4e2a\u8282\u70b9\u6709\u6743\u503c\uff0c\u8981\u6c42\u7ed3\u6784\u5bf9\u79f0\u548c\u6743\u503c\u5bf9\u79f0\u3002\n\u505a\u6cd5:\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u76f4\u63a5\u5224\u65ad\u5373\u53ef\u3002\n\u901a\u8fc7\u63d0\u524d\u8fd4\u56de\uff08\u53d1\u73b0\u4e00\u4e2a\u5730\u65b9\u4e0d\u5bf9\u79f0\uff0c\u76f4\u63a5\u8fd4\u56de\u6574\u4f53\u4e0d\u5bf9\u79f0\uff0c\u4e0d\u7ee7\u7eed\u505a\uff09 \u6216\u8005\u662f\u63d0\u524d\u6bd4\u8f83\u5927\u5c0f\uff08\u5982\u679c\u5bf9\u79f0\uff0c\u90a3\u4e48\u8981\u6c42\u5b50\u6811\u5927\u5c0f\u6574\u4f53\u5bf9\u79f0\uff09\n\u4e0d\u52a0\u4efb\u4f55\u4f18\u5316\uff0c\u5c31\u662f\u4e00\u4e2a\u5b8c\u5168\u6b63\u786e\u7684\u505a\u6cd5\u3002\u4f3c\u4e4e n \u2264 1000000 \u4f1a\u7206\u6808\u3002\n\u5982\u679c\u907f\u514d\u7206\u6808\uff0c\u5c31\u662f\u9700\u8981\u628a\u6df1\u641c\u6362\u6210\u5e7f\u641c\uff0c\u9700\u8981\u4f7f\u7528\u961f\u5217\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint v[1000005],ch[1000005][2],c[1000005],n,ans;\nbool same(int a,int b) {\n\tif(a==b)return 1;\n\tif(!a||!b)return 0;\n\treturn v[a]==v[b]&&same(ch[a][0],ch[b][1])&&same(ch[a][1],ch[b][0]);\n}\nvoid dfs(int i) {\n\tif(!i)return;\n\tdfs(ch[i][0]);\n\tdfs(ch[i][1]);\n\tc[i]=1+c[ch[i][0]]+c[ch[i][1]];\n\tv[i]=v[i]+v[ch[i][0]]+v[ch[i][1]];\n\tif(ans<c[i]&&same(ch[i][0],ch[i][1]))ans=c[i];\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++)scanf(\"%d\",&v[i]);\n\tv[0]=1005;\n\tfor(int i=1; i<=n; i++)\n\t\tfor(int k=0; k<2; ++k) {\n\t\t\tscanf(\"%d\",&ch[i][k]);\n\t\t\tif(ch[i][k]==-1)ch[i][k]=0;\n\t\t}\n\tdfs(1);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n# \u8f6c\u81ea\u77e5\u4e4e\uff1a[\u4f20\u9001\u95e8](https://zhuanlan.zhihu.com/p/49510002)",
        "postTime": 1571488336,
        "uid": 220889,
        "name": "Wind_Shear",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u8fd9\u662fNOIP2018\u7684T4\uff0c\u5f53\u65f6\u5728\u8003\u573a\u4e0a\u6ca1\u6709\u505a\u51fa\u6765\uff0c\u73b0\u5728\u518d\u505a\u4e00\u904d\uff0c\u8c28\u4ee5\u6b64\u7bc7\uff0c\u732e\u7ed9\u6211\u76842018\n\n#### \u9898\u76ee\u5927\u610f\uff1a\n\u4e00\u68f5n\u4e2a\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e0d\u540c\u7684\u6743\u503c\u3002\u4e00\u68f5\u6811\u5bf9\u79f0\u5c31\u662f\u6574\u68f5\u6811\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u4e92\u6362\u4e4b\u548c\u957f\u7684\u548c\u4e4b\u524d\u4e00\u6837\u3002\u6c42\u8fd9\u68f5\u6811\u4e0a\u6700\u5927\u7684\u4e00\u9897\u5bf9\u79f0\u4e8c\u53c9\u6811\u3002\n\n#### \u89e3\u9898\u601d\u8def\uff1a\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6211\u4eec\u7ed9\u4ed6\u4e24\u4e2a\u7279\u5f81\u503c\n\n$z1_{i}$\\=$lson_{i}$*2+$rson_{i}$+$w_{i}$*4\n\n$z2_{i}$\\=$lson_{i}$+$rson_{i}$*2+$w_{i}$*4\n\nlson:\u8fd9\u4e2a\u70b9\u6709\u6ca1\u6709\u5de6\u5b50\u8282\u70b9\nrson:\u8fd9\u4e2a\u70b9\u6709\u6ca1\u6709\u53f3\u5b50\u8282\u70b9\n\u7136\u540e\u5148\u5de6\u540e\u53f3\u7684\u8dd1\u4e00\u8fb9\uff0c\u8bb0\u5f55\u8dd1\u5230\u7684\u70b9\u7684z1\u548c\u8fd9\u9897\u5b50\u6811\u5305\u542b\u7684\u8303\u56f4\u3002\n\u518d\u5148\u53f3\u540e\u5de6\u7684\u8dd1\u4e00\u8fb9\uff0c\u8bb0\u5f55\u8dd1\u5230\u7684\u70b9\u7684z2\u548c\u8fd9\u9897\u5b50\u6811\u5305\u542b\u7684\u8303\u56f4\u3002\n\u4e4b\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7528\u5b57\u7b26\u4e32hash\u5224\u65ad\u4e00\u4e0bz1\u5bf9\u4e8e\u8303\u56f4\u662f\u5426\u548cz2\u5bf9\u5e94\u8303\u56f4\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\u90a3\u4e48\u8fd9\u68f5\u5b50\u6811\u5c31\u662f\u4e00\u9897\u5bf9\u79f0\u4e8c\u53c9\u6811\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6:O(n)\n\n\u7248\u6743\u58f0\u660e\uff1a\u6839\u636eCSDN\u535a\u4e3b\u300cssl_wyc\u300d\u7684\u539f\u521b\u6587\u7ae0\u6539\u7f16\n\u539f\u6587\u94fe\u63a5\uff1ahttps://blog.csdn.net/mr_wuyongcong/article/details/84587106\n\n#### \u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define N 1000010\n#define p 10007\n#define ull unsigned long long\nusing namespace std;\nint sz[N],a1[N],b1[N],e1[N],a2[N],b2[N],e2[N],z[N],f[N];\nint maxs,n,tot,ls[N],rs[N],w[N];\null hash1[N],hash2[N],pows[N];\nvoid read(int &x)\n{\n    char c;\n    bool flag=false;\n    while(c=getchar())\n      if((c>='0'&&c<='9')||c=='-') break;\n    if(c!='-')\n      x=c-48;\n    else flag=true;\n    while(c=getchar())\n      if(c>='0'&&c<='9') x=x*10+c-48;\n      else break;\n    if(flag) x=-x;\n}\nvoid dfs1(int x)\n{\n    sz[x]=1;\n    a1[++tot]=z[x];\n    b1[x]=tot;\n    if(ls[x]!=-1)\n      dfs1(ls[x]);\n    if(rs[x]!=-1)\n      dfs1(rs[x]);\n    sz[x]+=sz[ls[x]]+sz[rs[x]];\n    e1[x]=tot;\n}\nvoid dfs2(int x)\n{\n    if(x==-1) return;\n    a2[++tot]=f[x];\n    b2[x]=tot;\n    if(rs[x]!=-1)\n      dfs2(rs[x]);\n    if(ls[x]!=-1)\n      dfs2(ls[x]);\n    e2[x]=tot;\n}\null hash1z(int l,int r)\n{return hash1[r]-hash1[l-1]*pows[r-l+1];}\null hash2z(int l,int r)\n{return hash2[r]-hash2[l-1]*pows[r-l+1];}\nbool check(int x)\n{\n    if(sz[ls[x]]!=sz[rs[x]]) return false;\n    int l1=b1[x],r1=e1[x],l2=b2[x],r2=e2[x];\n    if(hash1z(l1,r1)==hash2z(l2,r2)) \n      return true;\n    return false;\n}\nint main()\n{\n    read(n);\n    for(int i=1;i<=n;i++)\n      read(w[i]);\n    for(int i=1;i<=n;i++)\n    {\n        read(ls[i]);read(rs[i]);\n        //fa[ls[i]]=fa[rs[i]]=i;\n        z[i]=((ls[i]!=-1)<<1)+(rs[i]!=-1)+w[i]*4;\n        f[i]=((rs[i]!=-1)<<1)+(ls[i]!=-1)+w[i]*4;\n        //\u8ba1\u7b97\u7279\u5f81\u503c\n    }\n    dfs1(1);//\u6b63\u641c\n    tot=0;\n    dfs2(1);//\u53cd\u641c\n    pows[0]=1;\n    for(int i=1;i<=n;i++)\n    {\n        pows[i]=pows[i-1]*p;\n        hash1[i]=hash1[i-1]*p+a1[i];\n        hash2[i]=hash2[i-1]*p+a2[i];\n    }//\u5b57\u7b26\u4e32\u54c8\u5e0c\n    for(int i=1;i<=n;i++)//\u679a\u4e3e\u8282\u70b9\n      if(check(i))//\u5224\u65ad\u76f8\u7b49\n      \tmaxs=max(maxs,sz[i]);\n    printf(\"%d\",maxs);\n}\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 \n\u7248\u6743\u58f0\u660e\uff1a\u6539\u7f16\u81eaCSDN\u535a\u4e3b\u300cssl_wyc\u300d\u7684\u539f\u521b\u6587\u7ae0\uff0c\u9075\u5faaCC 4.0 by-sa\u7248\u6743\u534f\u8bae\uff0c\u8f6c\u8f7d\u8bf7\u9644\u4e0a\u539f\u6587\u51fa\u5904\u94fe\u63a5\u53ca\u672c\u58f0\u660e\u3002\n\u539f\u6587\u94fe\u63a5\uff1ahttps://blog.csdn.net/mr_wuyongcong/article/details/84587106\n```\n",
        "postTime": 1566032728,
        "uid": 67087,
        "name": "_\u68c9\u82b1\u7cd6_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u770b\u5230NOIP2018\u5c45\u7136\u6709\u84dd\u9898\uff0c\u5413\u61f5\u4e86\n\n\u7ed3\u679c\u534a\u4e2a\u5c0f\u65f6\u5c31\u4e00\u6b21AC\n\n\u6240\u4ee5\u8bf4\uff0c\u4e0d\u8981\u8fc7\u5206\u76f8\u4fe1\u9898\u76ee\u7684\u96be\u5ea6\n\n------------\n\n\u8fd9\u9898\u7684\u601d\u8def\u5176\u5b9e\u5f88\u7b80\u5355\n\n\u4ece\u6839\u8282\u70b9\u5224\u65ad\u662f\u5426\u662f\u5bf9\u79f0\u4e8c\u53c9\u6811\uff0c\u662f\u5c31\u76f4\u63a5\u8f93\u51fa\uff0c\u4e0d\u662f\u5219\u770b\u4ed6\u7684\u513f\u5b50\u662f\u4e0d\u662f\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,l[1000005],r[1000005],q[1000005],s,i;\n//\u5de6\u5b69\u5b50\u3001\u53f3\u5b69\u5b50\u548c\u70b9\u6743\nbool ps(int le,int ri){\n\tint a=l[le],b=r[ri],c=l[ri],d=r[le];\n\tbool f1=a==-1,f2=b==-1,f3=c==-1,f4=d==-1;\n\tif(f1&&f2&&f3&&f4)return 1;\n\tif(f1&&f2){\n\t\tif(f3||f4||q[c]!=q[d])return 0;\n\t\ts+=2;//\u6709\u4e24\u4e2a\u5b69\u5b50\n        return ps(c,d);\n\t}\n\tif(f3&&f4){\n\t\tif(f1||f2||q[a]!=q[b])return 0;\n\t\ts+=2;\n        return ps(a,b);\n\t}\n\tif(f1||f2||f3||f4||q[a]!=q[b]||q[c]!=q[d])return 0;\n\ts+=4;//\u6709\u56db\u4e2a\u5b69\u5b50\n    return ps(a,b)&&ps(c,d);\n}\nint bs(int root){\n\tint a=l[root],b=r[root];\n\tif(a==-1&&b==-1)return 1;\n\tif(a==-1)return bs(b);\n\tif(b==-1)return bs(a);\n\ts=3;//\u81f3\u5c11\u67093\u4e2a\u8282\u70b9\n    if(q[a]==q[b]&&ps(a,b))return s;\n\telse return max(bs(a),bs(b));\n}\nint main(){\n\tcin>>n;\n\tfor(i=1;i<=n;i++)cin>>q[i];\n\tfor(i=1;i<=n;i++)cin>>l[i]>>r[i];\n\tcout<<bs(1)<<endl;//\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u641c\n\treturn 0;\n}\n```\n\n------------\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(n log2 n)\uff0c\u53ef\u4ee5AC",
        "postTime": 1563531608,
        "uid": 106233,
        "name": "garymimi0303",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\n\u6211\u7684\u5929\u3002\u3002\u666e\u53ca\u7ec4\u8fd9\u4e48$hard$\u3002\u3002\u3002\n\n#### upd:\u4ee3\u7801\u5df2\u683c\u5f0f\u5316\uff08\u7b2c\u4e8c\u6b21$qwq$\uff09\n\n\u7136\u540e\u597d\u50cf\u6ca1\u6709\u4eba\u7528\u6211\u7684\u5783\u573e\u505a\u6cd5\uff0c\uff0c\uff0c\u597d\u50cf\u662f$O(n)$\uff0c\u4f46\u5341\u5206\u7684\u6162\uff0c\u5e76\u4e14\u6781\u5176\u66b4\u529b$qwq$\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u76f4\u63a5$dfs$\u6c42\u51fa\u6811\u9ad8\uff0c\u7136\u540e\u60f3\u50cf\u51fa\u628a\u539f\u6765\u7684\u6811\u8865\u6210\u6ee1\u4e8c\u53c9\u6811\u7684\u5f62\u6001\n\n$like\\space this:$\n\n![](https://cdn.luogu.com.cn/upload/pic/62709.png)\n\n\u9707\u4e0d\u9707\u60ca$qwq$\n\n\u7136\u540e\u5bf9\u5b50\u6811\u54c8\u5e0c\uff08**\u7a7a\u8282\u70b9\u540c\u65f6\u4e5f\u8981\u54c8\u5e0c**\uff09,\u540c\u65f6\u4fdd\u5b58\u6b63\u5411\u7684\u54c8\u5e0c\u503c$h1[u]$\u548c\u53cd\u5411\u7684\u54c8\u5e0c\u503c$h2[u]$\uff08\u5bf9\u79f0\u65f6\u7528\uff09\u3002\n\u4f46\u6bcf\u6b21\u5411\u4e0a\u5408\u5e76\u65f6\u8981\u4e58\u7684\u662f$Base^{sz+0/1}$,\u5176\u4e2d$sz=$\u5b50\u6811\u6240\u5f62\u6210\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5927\u5c0f\uff08\u539f\u56e0\u662f**\u7a7a\u8282\u70b9\u540c\u65f6\u4e5f\u8981\u54c8\u5e0c**)\n\n\u8fd9\u6837\u54c8\u5e0c\u503c\u65e2\u53ef\u4ee5\u8868\u793a\u70b9\u4f4d\u7f6e\uff08\u4e0d\u540c\u7684\u4f4d\u7f6e\u70b9\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\u7684\u4f4d\u7f6e\u4e0d\u540c\uff09\uff0c\u53c8\u53ef\u4ee5\u8868\u793a\u70b9\u7684\u6570\u503c\u3002\uff08\u539f\u56e0\u662f**\u7a7a\u8282\u70b9\u540c\u65f6\u4e5f\u53c2\u4e0e\u4e86\u54c8\u5e0c**)\n\n\u5982\u679c\u8fd8\u4e0d\u61c2\u53ef\u4ee5\u5eb7\u5eb7\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#define R register int\nusing namespace std;\n#define ull unsigned long long\n#define ll long long\n#define pause (for (R i = 1; i <= 10000000000; ++i))\n#define IN freopen(\"xxx.in\", \"r\", stdin)\n#define OUT freopen(\"out.out\", \"w\", stdout)\nnamespace Fread\n{\nstatic char B[1 << 15], *S = B, *D = B;\n#ifndef JACK\n#define getchar() (S == D && (D = (S = B) + fread(B, 1, 1 << 15, stdin), S == D) ? EOF : *S++)\n#endif\ninline int g()\n{\n  R ret = 0, fix = 1;\n  register char ch;\n  while (!isdigit(ch = getchar()))\n    fix = ch == '-' ? -1 : fix;\n  if (ch == EOF)\n    return EOF;\n  do\n    ret = ret * 10 + (ch ^ 48);\n  while (isdigit(ch = getchar()));\n  return ret * fix;\n}\ninline bool isempty(const char &ch) { return (ch <= 36 || ch >= 127); }\ninline void gs(char *s)\n{\n  register char ch;\n  while (isempty(ch = getchar()))\n    ;\n  do\n    *s++ = ch;\n  while (!isempty(ch = getchar()));\n}\n} // namespace Fread\nusing Fread::g;\nusing Fread::gs;\nconst int N = 1000010, B = 2333;\nint ch[N][2];\n#define ls ch[u][0]\n#define rs ch[u][1]\nint n, w[N], sz[N], d[N], ans, mxd;\null h1[N], h2[N], p[N], tmp;\ninline void dfs1(int u)\n{\n  mxd = max(d[u], mxd);\n  if (~ls)\n    d[ls] = d[u] + 1, dfs1(ls);\n  if (~rs)\n    d[rs] = d[u] + 1, dfs1(rs);\n}\ninline void dfs(int u)\n{\n  sz[u] = 1;\n  if (~ls)\n    dfs(ls), sz[u] += sz[ls];\n  if (~rs)\n    dfs(rs), sz[u] += sz[rs];\n  if (~ls && ~rs && sz[ls] == sz[rs] && h1[ls] == h2[rs] && h2[ls] == h1[rs])\n    ans = max(ans, sz[u]);\n  if (!~ls && !~rs)\n    h1[u] = h2[u] = w[u], ans = max(ans, 1);\n  else if (~ls && !~rs)\n    h1[u] = h1[ls] * p[d[u]] + w[u] * (p[d[u]] - 1), h2[u] = h2[ls] + w[u] * (p[d[u]] - 1);\n  else if (!~ls && ~rs)\n    h1[u] = w[u] * (p[d[u]] - 1) + h1[rs], h2[u] = w[u] * (p[d[u]] - 1) + h2[rs] * p[d[u]];\n  else\n    h1[u] = h1[ls] * p[d[u]] + w[u] * (p[d[u]] - 1) + h1[rs], h2[u] = h2[ls] + w[u] * (p[d[u]] - 1) + h2[rs] * p[d[u]]; //\u5bf9\u5de6\u53f3\u5b50\u6811\u7684\u6709\u65e0\u5206\u522b\u8ba8\u8bba\n}\nsigned main()\n{\n#ifdef JACK\n  IN;\n#endif\n  n = g();\n  for (R i = 1; i <= n; ++i)\n    w[i] = g();\n  for (R u = 1; u <= n; ++u)\n    ls = g(), rs = g();\n  d[1] = 1;\n  dfs1(1);\n  for (R i = 1; i <= n; ++i)\n    d[i] = mxd - d[i];\n  p[0] = 1;\n  tmp = p[1] = B;\n  for (R i = 1; i <= mxd; ++i)\n    p[i + 1] = (tmp *= tmp); //\u6c42Base\u76841\u6b21\u65b9\uff0c2\u6b21\u65b9\uff0c4\u6b21\u65b9\uff0c8\u6b21\u65b9...2^mxd\u6b21\u65b9,\u6307\u6570\u5373\u6df1\u5ea6\u4e3ai\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5927\u5c0f+1\n  dfs(1);\n  printf(\"%d\\n\", ans);\n}\n```\n2019.07.08\n\n[\u4e0d\u5982\u6765\u5750\u5750$qwq$](http://cnblogs.com/Jackpei/)",
        "postTime": 1562601275,
        "uid": 115086,
        "name": "Tari",
        "ccfLevel": 7,
        "title": "JACK's \u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "## **\u5176\u5b9e\u672c\u9898\u7684\u89e3\u9898\u601d\u8def\u90fd\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u8981\u8003\u8651\u6e05\u695a**\n### **\u7a0b\u5e8f\u4e3b\u8981\u90e8\u5206\uff1a\u9012\u5f52**\n-~~\u7136\u800c\u6211\u542c\u8bf4\u8fd9\u662f\u4e00\u9898\u6c34\u9898~~\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P5018)\n\n\u3010\u9898\u76ee\u89e3\u8bfb\u3011\n\n![](https://cdn.luogu.com.cn/upload/pic/43192.png)\n\n\u770b\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5bf9\u4e8e\u9898\u76ee\u7ed9\u51fa\u7684\u4e8c\u53c9\u6811\u7684\u5b50\u6811\u4e2d\u662f\u5426\u5b58\u5728\u5bf9\u79f0\u4e8c\u53c9\u6811(\u5f53\u7136\u8fd9\u4e2a\u5b50\u6811\u53ef\u80fd\u662f\u5b83\u81ea\u5df1)\uff0c\u53ef\u4ee5\u5224\u65ad\uff1a\n\n1. \u7ed3\u6784\u4e0d\u5bf9\u79f0\u7684\u4e0d\u662f\uff1b\n1. \u6743\u503c\u4e0d\u5bf9\u79f0\u7684\u4e0d\u662f\uff1b\n\n\u7136\u540e\u9488\u5bf9\u8fd9\u4e24\u79cd\u60c5\u51b5\u5199\u4e00\u4e2a\u9012\u5f52\u8fb9\u754c\uff1b\n\n\u63a5\u7740\u8fd8\u8981\u8003\u8651\uff1a\u4e24\u4e2a\u5bf9\u79f0\u4f4d\u7f6e\u7684\u5b69\u5b50\u8282\u70b9\u90fd\u6ca1\u6709\u81ea\u5df1\u7684\u5b69\u5b50\uff0c\u90a3\u4e48\u8fd9\u65f6\u9012\u5f52\u4e5f\u5e94\u8be5\u505c\u6b62\uff0c\u8fd4\u56de\u6b64\u65f6\u8282\u70b9\u6570 $+=0$\uff1b\u5426\u5219\uff0c\u82e5\u6ca1\u51fa\u73b0\u4ee5\u4e0a\u60c5\u51b5\uff0c\u90a3\u4e48\u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u5b69\u5b50\u8282\u70b9\uff0c\u9012\u5f52\u63a5\u4e0b\u6765\u5bf9\u79f0\u7684\u8282\u70b9\u4f4d\u7f6e\u5e76\u628a\u7b54\u6848$+2$\uff1b\n\n\u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e00\u9898\u5bf9\u79f0\u4e8c\u53c9\u6811\u8981\u6574\u68f5\u6811\u5bf9\u79f0\uff0c\u800c\u4e0d\u662f\u5b50\u6811\u81ea\u5df1\u5bf9\u79f0\uff0c\u6240\u4ee5\u7ee7\u7eed\u9012\u5f52\u65f6\u4ee3\u7801\u8981\u8fd9\u4e48\u5199\uff1a\n\n```cpp\n\treturn dfs(lchild[i],rchild[j])+dfs(lchild[j],rchild[i])+2;\n    \n```\n\n\u6700\u5de6\u8fb9\u7684\u5b69\u5b50\u8282\u70b9\u548c\u6700\u53f3\u8fb9\u7684\u6bd4\u8f83\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u6837\u624d\u80fd\u6574\u68f5\u6811\u5bf9\u79f0\uff0c\u800c\u4e0d\u662f\u5c40\u90e8\u7684\u5bf9\u79f0\u3002\n\n\u90a3\u4e48\u4ee3\u7801\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\uff1a\n\n1. \u5b9a\u4e49\u6807\u5fd7\u53d8\u91cf\uff0c\u4ee5\u4fbf\u9012\u5f52\u65f6\u5224\u65ad\u662f\u5426\u4e3a\u5bf9\u79f0\u4e8c\u53c9\u6811\n1. \u7b54\u6848 ans \u521d\u503c\u8bbe\u4e3a 0\uff0c\u641c\u5b8c\u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019 +1 \n(\u7b2c\u4e00\u3001\u6bcf\u9897\u6811\u7684\u7236\u8282\u70b9\u6ca1\u6709\u7b97\uff1b\u7b2c\u4e8c\u3001\u5982\u679c\u6ca1\u6709\u641c\u5230\u7b26\u5408\u6761\u4ef6\u7684\u6811\uff0c\u90a3\u4e48\u6bcf\u4e2a\u4e2a\u53f6\u8282\u70b9\u90fd\u662f\u7b26\u5408\u6761\u4ef6\u7684\u201c\u5bf9\u79f0\u4e8c\u53c9\u6811\u201d\uff0c\u6240\u4ee5\u8981 +1 )\n\n\u4ee5\u4e0a\u5c31\u662f\u5168\u90e8\u601d\u8def\uff0c\u8fd9\u6837\u4ee3\u7801\u5c31\u5f88\u5bb9\u6613\u5b9e\u73b0\u4e86\u3002(~~\u4e3a\u4ec0\u4e48Dalao\u7684\u4ee3\u7801\u90a3\u4e48~~\u957f)\n\n\n$Code$\n------------\n```cpp\n  //\u8ba4\u771f\u770b\uff0c\u675c\u7edd\u6284\u88ad\n  #include<iostream>\n  #include<cstdio>\n  #define MAX_N 1000005\n  using namespace std;\n  int n,lchild[MAX_N],rchild[MAX_N],w[MAX_N],ans=0;\n  bool flag=true;\n  int dfs(int i,int j)\n  {\n      if(i==-1 && j==-1)\n      //\u5de6\u53f3\u5b69\u5b50\u90fd\u6ca1\u6709\u81ea\u5df1\u7684\u5b69\u5b50\u4e86\uff0c\u6ca1\u6709\u63a5\u4e0b\u6765\u7684\u8282\u70b9\n      //\u6b64\u65f6\u7b26\u5408\u9898\u76ee\u201c\u5bf9\u79f0\u4e8c\u53c9\u6811\u201d\u7684\u5b9a\u4e49 \n        return 0;\n      if((i==-1 || j==-1) && i!=j)\n      //\u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\u6709\u4e00\u4e2a\u6ca1\u6709\u8282\u70b9 \u7ed3\u6784\u4e0d\u5bf9\u79f0 \n      {\n          flag=false;\n          return 0;\n      }\n      if(w[i]!=w[j])\n      //\u6743\u503c\u4e0d\u5bf9\u79f0 \n      {\n          flag=false;\n          return 0;\n      }\n      return dfs(lchild[i],rchild[j])+dfs(lchild[j],rchild[i])+2;\n  }\n  int main()\n  {\n      scanf(\"%d\",&n);\n      for(int i=1;i<=n;i++)\n       scanf(\"%d\",&w[i]);\n      for(int i=1;i<=n;i++)\n       scanf(\"%d%d\",&lchild[i],&rchild[i]);\n      for(int i=1;i<=n;i++)\n      {\n          int k=dfs(lchild[i],rchild[i]);//\u641c \n          if(flag)\n          //flag\u4e3a\u771f \u8bf4\u660e\u4ee5\u7b2ci\u4e2a\u8282\u70b9\u4e3a\u7236\u8282\u70b9\u627e\u5230\u4e86\u5bf9\u79f0\u4e8c\u53c9\u6811 \n          {\n              ans=max(ans,k);\n          }\n          flag=true;\n          //\u91cd\u7f6e\uff0c\u4ee5\u4fbf\u4e0b\u6b21\u8fd0\u7b97 \n      }\n      printf(\"%d\",ans+1);//\u7ed3\u675f\u65f6\u7b97\u4e0a\u7236\u6839\u8282\u70b9 \n      return 0;\n  }\n```\n\n\n\n\u603b\u7ed3$ing$\n------------\n\u8fd9\u9898\u8003\u7684\u4e8c\u53c9\u6811\u7684\u57fa\u672c\u77e5\u8bc6\u548c\u9012\u5f52\uff1b\n\n$PS:$~~\u4e3a\u4ec0\u4e4818\u5e74\u7684\u6700\u540e\u4e00\u9898\u90a3\u4e48\u6c34\uff1f\uff08\u8fd8\u6709\uff1a\u4e3a\u4ec0\u4e48\u8fd9\u9898AC\u7387\u90a3\u4e48\u4f4eorz\uff09~~",
        "postTime": 1556781908,
        "uid": 196649,
        "name": "xiejinhao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "## \u5728\u8fd9\u9053\u9898\u4e4b\u524d\u5462\uff0c\u6211\u5148\u7ed9\u5927\u5bb6\u8bb2\u4e00\u4e2a\u60b2\u60e8\u7684\u6545\u4e8b\n\n\u5f53\u5e74\u6709\u4e00\u4e2aoier\uff0c\u8003\u573a\u4e0a\u4e0d\u5230\u5341\u4e94\u5206\u949f\u5c31\u5e72\u6389\u4e86\u524d\u4e24\u4e2a\u9898\uff0c\u7136\u800ct3\u662f\u4e00\u4e2a\u6076\u5fc3\u7684dp\uff0cdp\u4f5c\u4e3a\u4ed6\u7684\u5f31\u9879\uff0c\u8fd9\u4e00\u9898\u51e0\u4e4e\u8017\u6389\u4e86\u4ed6\u7684\u6240\u6709\u65f6\u95f4\uff0c\u4ed6\u60f3\uff0ct3\u90fd\u8fd9\u4e48\u96be\uff0ct4\u4e0d\u7528\u95ee\u4e86\u5427\uff0c\u4ed6\u7c97\u7565\u7684\u770b\u4e86\u4e00\u4e0bt4\uff0c\u7ed3\u679c\u53d1\u73b0\u662f\u4e00\u9053\u641c\u7d22\u9898\uff0c\u66b4\u529b\u5f53\u7136\u662f\u6bcf\u4e2aoier\u6700\u559c\u6b22\u7684\u505a\u6cd5\uff0c\u7136\u800c\u4e0d\u77e5\u4e3a\u4ec0\u4e48\uff0c\u4ed6\u7adf\u6ca1\u6709\u53bb\u505a\uff0c\u8ddft3\u6b7b\u78d5\u5230\u5e95\uff0c\u800ct4\u5462\uff0c\u4ed6\u5728\u8003\u8bd5\u7ed3\u675f\u7684\u524d\u4e94\u5206\u949f\uff0c\u5199\u51fa\u4e86\u4e00\u9e23\u60ca\u4eba\u7684\u4ee3\u7801\n```cpp\n#include<iostream>\nusing namespace std;\nint main(){\n    cout<<\"1\";\n \treturn 0;\n}\n```\n\n\u8003\u8bd5\u6210\u7ee9\u51fa\u6765\u4e86\uff0ct1\u662f\u4e00\u9053\u518d\u6c34\u4e0d\u8fc7\u7684\u5b57\u7b26\u4e32\uff0c\u7136\u800c\u4ed6\u7684gets\u5fd8\u4e86cstdio\u3002\u3002\u3002\n\nt2\u662f\u679a\u4e3e\uff0c\u4ed6\u5f97\u5230\u4e86100\u5206\n\nt3\u4ed6\u63a8\u4e86\u597d\u51e0\u4e2a\u5c0f\u65f6\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u672c\u60f3\u53ef\u4ee5\u5f97\u90e8\u5206\u5206\uff0c\u7136\u800c\u7206\u96f6\u662f\u7ed3\u5c40\n\nt4\u4e0d\u7528\u8bf4\u4e86\n\n\u4ed6\u52b1\u5fd7\u8981\u633d\u56de\u4e00\u70b9\u989c\u9762\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u4eca\u5929\u8fd9\u7bc7\u9898\u89e3\n\n## \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u641c\u7d22\u9898\u4e0d\u7528\u89e3\u91ca\u4e86\u5427\uff0c\u6211\u4eec\u8981\u627e\u51fa\u5bf9\u79f0\u7684\u4e8c\u53c9\u6811\uff0c\u4e0d\u59a8\u8bbe\u4e24\u4e2a\u6307\u9488\uff0c\u8fd9\u4e24\u4e2a\u6307\u9488\u5bf9\u7740\u5e72\uff0c\u4f60\u5f80\u5de6\u6211\u5c31\u5f80\u53f3\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u53ef\u4ee5\u4fdd\u8bc1\u662f\u5bf9\u79f0\u7684\uff0c\u8fd9\u4e24\u4e2a\u6307\u9488\u4e00\u5f00\u59cb\u8fd8\u662f\u8840\u6d53\u4e8e\u6c34\u7684\u5144\u5f1f\uff0c\u7136\u800c\u4e3a\u4e86\u5404\u81ea\u7684\u7406\u60f3\u5206\u9053\u626c\u9573\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4e00\u68f5\u5bf9\u79f0\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\u4ed6\u4eec\u662f\u76f8\u7b49\u7684\u3002\n\n\u5982\u679c\u6211\u7684\u8bba\u8ff0\u6781\u4e3a\u6666\u6da9\uff0c\u90a3\u4e48\u8bf7\u770b\u6211\u4eec\u7684\u4ee3\u7801\n```cpp\n#include<iostream>\n//#include<windows.h>\nusing namespace std;\nstruct tree{\n    int left,right,bs;\n}a[1000001];\nint mmax,sum,ans,f=0;\nint dfs(int l,int r){\nif(l==-1&&r==-1){\n    return 0;\n}\nif(l==-1||r==-1||a[l].bs!=a[r].bs){\n    f=1;\n    return 0;\n}\n    if(a[l].bs==a[r].bs&&l>0&&r>0){\n        sum++;\n        dfs(a[l].left,a[r].right);\n        dfs(a[l].right,a[r].left);\n    }else{\n        f=1;\n        return 0;\n    }\n}\nint main(){\n    int n;\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>a[i].bs;\n    }\n    for(int i=1;i<=n;i++){\n        cin>>a[i].left>>a[i].right;\n    }\n    for(int i=1;i<=n;i++){\n        f=0;\n        dfs(i,i);\n        if(f==0)\n        mmax=max(mmax,sum);\n        sum=0;\n    }\n    cout<<mmax;\n    return 0;\n}\n```\n\u6211\u4eec\u7ec6\u7ec6\u6765\u8bb2\u89e3\n\n\u8f93\u5165\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u7684f\u53d8\u91cf\u662f\u7528\u6765\u5224\u65ad\u662f\u5426\u4e3a\u4e00\u68f5\u5bf9\u79f0\u4e8c\u53c9\u6811\uff0cdfs\uff08i\uff0ci\uff09\u7684\u4e24\u4e2a\u53c2\u6570\u5373\u4e3a\u4e0a\u6587\u63d0\u5230\u7684\u4e24\u4e2a\u6307\u9488\uff0c\u4ed6\u4eec\u4e00\u5f00\u59cb\u662f\u76f8\u7b49\u7684\n\n\u6df1\u641c\u51fd\u6570\u5185\uff0c\u6211\u4eec\u5148\u5224\u65ad\u4e24\u4e2a\u6307\u9488\u6240\u4ee3\u8868\u7684\u662f\u5426\u4e3a\u7a7a\u8282\u70b9\uff0c\u5982\u679c\u662f\u7684\u8bdd\u5c31return\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u5224\u65ad\u662f\u5426\u662f\u4e00\u68f5\u5bf9\u79f0\u4e8c\u53c9\u6811\uff0c\u5982\u679c\u4e24\u4e2a\u6307\u9488\u5176\u4e2d\u6709\u4e00\u4e2a\u662f\u7a7a\u8282\u70b9\u800c\u53e6\u4e00\u4e2a\u4e0d\u662f\u7684\u8bdd\u6216\u8005\u4e24\u6307\u9488\u4ee3\u8868\u7684\u6743\u503c\u4e0d\u540c\u6211\u4eec\u5c31\u8ba4\u4e3a\u8fd9\u4e0d\u662f\u4e00\u68f5\u5bf9\u79f0\u4e8c\u53c9\u6811\u3002\n\n\u5982\u679c\u8fd9\u4e24\u4e2a\u6761\u4ef6\u90fd\u6ca1\u6ee1\u8db3\uff0c\u6211\u4eec\u4fbf\u5c06\u8282\u70b9\u6570\u52a0\u4e00\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684\u4e24\u4e2adfs\uff0c\u4e00\u4e2a\u5f80\u5de6\u4e00\u4e2a\u5f80\u53f3\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5bf9\u79f0\u3002\n\n\u8df3\u51fadfs\u540e\uff0c\u6211\u4eec\u7528mmax\u6570\u7ec4\u6765\u5b58\u50a8\u6700\u5927\u7684\u8282\u70b9\u6570\uff0c\u5982\u679c\u662f\u4e00\u68f5\u5bf9\u79f0\u4e8c\u53c9\u6811\uff0c\u6211\u4eec\u5c31\u66f4\u6362mmax\u7684\u503c\u3002\n\n\u6211\u5e76\u4e0d\u4f1a\u592a\u591a\u7684\u9ad8\u7ea7\u7b97\u6cd5\uff0c\u6240\u4ee5\u6211\u5e76\u6ca1\u6709\u7528\u66f4\u9ad8\u7ea7\u7684\u7b97\u6cd5\u6765\u505a\uff0c\u6240\u4ee5\u6211\u53ea\u80fd\u7528\u6211\u62d9\u52a3\u7684\u4ee3\u7801\u53ca\u6666\u6da9\u7684\u8bed\u8a00\u6765\u4e3a\u5927\u5bb6\u8bb2\u89e3\u3002\n\n\u6211\u7684\u4ee3\u7801\u53ef\u4ee5\u4f18\u5316\uff0c\u4f46\u662f\u6211\u592a\u61d2\u4e86\n\n\u5c31\u8fd9\u6837\u5566",
        "postTime": 1556332444,
        "uid": 32490,
        "name": "memory_frv",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u597d\u50cf\u6ca1\u6709\u6811\u54c8\u5e0c\uff0c\u90a3\u6211\u5c31\u6765\u53d1\u4e00\u4efd\u3002\n\n\u6811\u54c8\u5e0c\u662f\u4e00\u79cd\u76f4\u63a5\u5728\u6811\u4e0a\u8fdb\u884c \u54c8\u5e0c\u7684\u65b9\u6cd5\uff0c\u4ece\u800c\u5224\u65ad\u662f\u5426\u540c\u6784\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff08\u4e8c\u53c9\u6811\uff09\uff1a$hash[x]=(hash[x.lson]*998244353+hash[x.rson]*1000000007+x.val)\\mod M$\u3002$M$\u53ef\u4ee5\u53d6\u4e00\u4e2a\u5f88\u5927\u7684\u6570\uff0c\u5982(1<<64)-1\u3002\u5982\u679chash[a]==hash[b]\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u4ee5a,b\u4e3a\u6839\u7684\u5b50\u6811\u540c\u6784\uff08\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u8282\u70b9\u5b8c\u5168\u76f8\u7b49\uff09\u3002\n\n\u4f46\u73b0\u5728\u662f\u5224\u65ad\u662f\u5426\u5bf9\u79f0\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u4ee4invhash[x]\u8868\u793a\u628a\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u5bf9\u79f0\u540e\u7684hash\u503c\u3002\u50cf\u4e0a\u9762\u4e00\u6837\u5199\u51fa\u5f0f\u5b50\uff1a$invhash[x]=(invhash[x.rson]*998244353+invhash[x.lson]*1000000007+x.val)\\mod M$\u3002x\u4e3a\u6839\u7684\u4e8c\u53c9\u5b50\u6811\u662f\u5bf9\u79f0\u4e8c\u53c9\u5b50\u6811\u7684\u5fc5\u8981\u6761\u4ef6\u662fhash[x.lson]==invhash[x.rson]\u3002\u7528\u8fd9\u4e2a\u6761\u4ef6\u6765\u5224\u65ad\uff0c\u5199\u51fa\u4e0b\u9762\u7684\u4ee3\u7801~~\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u5b83\u4e0d\u80fdA\u6389\u8fd9\u9053\u9898~~\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node {\n    int val, num;\n    int ls, rs;\n    unsigned long long hash, invhash;\n}nd[1000001];\nvoid dfs(int node) {\n    if (node == 0) return;\n    if (nd[node].ls == -1) nd[node].ls = 0;\n    if (nd[node].rs == -1) nd[node].rs = 0;\n    dfs(nd[node].ls), dfs(nd[node].rs);\n    nd[node].num = nd[nd[node].ls].num + nd[nd[node].rs].num + 1;\n    nd[node].hash=nd[nd[node].ls].hash*998244353+nd[nd[node].rs].hash*1000000007+nd[node].val;\n    nd[node].invhash=nd[nd[node].ls].invhash*1000000007+nd[nd[node].rs].invhash*998244353+nd[node].val;\n}\nint main() {\n\tfreopen(\"test.in\",\"r\",stdin);\n    int n;\n    cin >> n;\n    for (int i = 1; i <= n; i++) cin >> nd[i].val;\n    for (int i = 1; i <= n; i++) cin >> nd[i].ls >> nd[i].rs;\n    dfs(1);\n    int ans = 0;\n    for (int i = 1; i <= n; i++)\n        if (nd[nd[i].ls].hash == nd[nd[i].rs].invhash) ans = max(ans, nd[i].num);\n    cout << ans << endl;\n}\n```\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u9700\u8981~~\u6253\u8868~~\u591a\u9009\u51e0\u4e2a\u6a21\u6570\u3002\u8fd9\u6837\u5c31\u80fdA\u6389\u8fd9\u9053\u9898\u3002",
        "postTime": 1556176066,
        "uid": 61068,
        "name": "01190220csl",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u8fd9\u662f\u849f\u84bb$5AB$\u7684\u826f\u5fc3\u9898\u89e3\u3002\u3002\u3002\n--\n\n---\n\n#### \u867d\u7136\u672a\u66fe\u53c2\u52a0$NOIp 2018$\n\n### \u4f46\u662f\u4e5f\u611f\u89c9\u8fd9\u9053\u9898\u6709\u79cd\u4e0d\u7965\u7684\u9884\u611f...\n\n## \u6240\u4ee5\uff0c\u63a5\u4e0b\u6765\u8fd9\u9053\u9898\u7684~~\u5957\u8def~~\u5c31\u662f\n\n~~\uff08\u8111\u8865\u6572\u9523\u6253\u9f13\uff09~~\n\n# \u5b57\u7b26\u4e32\n\n---\n\n\u5176\u5b9e\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6765A\u8fd9\u9053\u9898\u3002\u6709$O(n)$\u7684\u6f5c\u8d28\uff0c\u53ef\u662f\u5e38\u6570\u592a\u5927\u3002\n\n\u65b9\u6cd5\u5c31\u662f\uff0c\u628a\u4e00\u68f5\u4e8c\u53c9\u6811\u5199\u6210\u4e00\u4e2a\u7f16\u7801\uff0c\u4e00\u4e2a\u4e8c\u53c9\u6811\u5bf9\u5e94\u552f\u4e00\u7f16\u7801\uff0c\u4e00\u4e2a\u7f16\u7801\u5bf9\u5e94\u552f\u4e00\u4e8c\u53c9\u6811\u3002\u5f53\u7136\uff0c\u5047\u5982\u5bf9\u79f0\u4e8c\u53c9\u6811\u7684\u7f16\u7801\u6709\u7279\u6b8a\u4e4b\u5904\u4e0d\u5c31\u53ef\u4ee5\u8fdb\u884c\u5224\u65ad\u4e86\u5417\uff1f\uff1f\uff1f\n\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u771f\u7684\u6709\u3002\n\n---\n\n\u6211\u4eec\u628a\u4e00\u4e2a\u8282\u70b9\u5199\u6210\uff08\u9ad8\u5ea6\uff0c\u6743\u91cd\uff09\u7684\u6837\u5b50\u3002\n\u6bd4\u5982\uff083\uff0c3\uff09\u3001\uff086\uff0c5\uff09\u3002\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fdb\u884c\u7f16\u7801\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\u5c06\u9ad8\u5ea6\u548c\u6743\u91cd\u5199\u5230\u4e00\u8d77\uff0c\u4ee5\u524d\u9762\u7684\u4f8b\u5b50\u6765\u8bf4\uff0c\uff083\uff0c3\uff09\u5bf9\u5e9400\u2018\\0x3\u20190\u2018\\0x3\u2019\u3002\uff08\u7b2c3\u30015\u4f4d\u7684$ASCII$\u7801\u5747\u4e3a3\uff09\u3002\u63a5\u4e0b\u6765\uff0c\u5c31\u4ee5\u4e0b\u9762\u7684\u516c\u5f0f\u4f5c\u4e3a\u63a8\u5bfc\u65b9\u6cd5\uff1a\n\n$C(Tree) = C(Leaf) $ \u5f53\u8be5\u6811\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u3002\n\n$C(Tree) = C(Left) + C(Root) + C(Right)$ \u5f53\u8be5\u6811\u4e0d\u6b62\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u81ea\u4e0b\u800c\u4e0a\u63a8\u51fa\u5b57\u7b26\u4e32\uff0c\u987a\u4fbf\u68c0\u6d4b\u662f\u5426\u5bf9\u79f0\u3002\n\n---\n\n\u90a3\u4e48\uff0c\u600e\u6837\u68c0\u6d4b\u662f\u5426\u5bf9\u79f0\u5462\uff1f\n\n\u5176\u5b9e\u5f88\u7b80\u5355\u3002\u6211\u4eec\u53ea\u8981\u5c06\u5de6\u53f3\u4e24\u68f5\u5b50\u6811\u7684\u7f16\u7801\u505a\u4e00\u4e2a\u6bd4\u8f83\u5373\u53ef\u3002\u9996\u5148\uff0c\u957f\u5ea6\u5fc5\u987b\u4e00\u6837\uff0c\u56e0\u4e3a\u957f\u5ea6\u51b3\u5b9a\u4e86\u8282\u70b9\u6570\u3002\u63a5\u7740$5$\u4f4d\u4e00\u622a\uff0c\u4e00\u4e2a\u4ece\u5934\u81f3\u5c3e\uff0c\u4e00\u4e2a\u4ece\u5c3e\u81f3\u5934\u8fdb\u884c\u6bd4\u8f83\u3002\u53ea\u8981\u4e2d\u95f4\u6709\u4e0d\u540c\uff0c\u5c31\u4e0d\u5bf9\u79f0\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u80fd\u6109\u5feb\u5730$Coding$\u5566$233$\n\n---\n\n# \u7b2c\u4e00\u6b65\u3001\u6784\u5efa\u6811\n\n```cpp\nstruct weight_tree_node\n{\n\tshort weight;\n\tint heigth;\n\t\n\tint left_code, right_code;\n}tree[1000001];\n\nios::sync_with_stdio(false);\nint n;\ncin >> n;\nfor (int i = 0; i < n; i++)\n\tcin >> tree[i].weight;\n\nint num;\nfor (int i = 0; i < n; i++)\n{\n\tcin >> num;\n\ttree[i].left_code = num - 1;\n\tcin >> num;\n\ttree[i].right_code = num - 1;\n}\n```\n\n---\n\n# \u7b2c\u4e8c\u6b65\u3001\u8ba1\u7b97\u6811\u9ad8\n\n```cpp\nconst int no_son = -2;\n\nvoid calculate(int hei, int pos)\n{\n\ttree[pos].heigth = hei;\n\tif (tree[pos].left_code != no_son)\n\t\tcalculate(hei + 1, tree[pos].left_code);\n\tif (tree[pos].right_code != no_son)\n\t\tcalculate(hei + 1, tree[pos].right_code);\n}\n\ncalculate(1, 0);\n```\n\n---\n\n# \u7b2c\u4e09\u6b65\u3001\u904d\u5386\u4e8c\u53c9\u6811\n\n```cpp\n\nconst string make_str(struct weight_tree_node * wtn)\n{\n\tstring st;\n\tchar digit;\n\t\n\tint num = int(wtn->weight);\n\tfor (int i = 0; i < 2; i++)\n\t{\n\t\tdigit = num % 128;\n\t\tst.append(1, digit);\n\t\tnum /= 128;\n\t}\n\t\n\tint hei = wtn->heigth;\n\tfor (int i = 0; i < 3; i++)\n\t{\n\t\tdigit = hei % 128;\n\t\tst.append(1, digit);\n\t\thei /= 128;\n\t}\n\t\n\treturn st;\n}\n\nbool is_same_ct(const string & s1, const string & s2, int pos_1, int pos_2, int pos_ct)\n{\n\tfor (int i = 0; i < pos_ct; i++)\n\t\tif (s1[pos_1 + i] != s2[pos_2 + i])\n\t\t\treturn false;\n\t\n\treturn true;\n}\n\nbool is_symmetric(const string & left, const string & right)\n{\n\tif (left.length() != right.length())\n\t\treturn false;\n\t\n\tint len = left.length(), cp_len = len / 5;\n\tfor (int i = 0; i < cp_len; i++)\n\t\tif (!is_same_ct(left, right, i * 5, len - i * 5 - 5, 5))\n\t\t\treturn false;\n\treturn true;\n}\n\nvoid search_tree(int node_code, int & llen, string & ans)\n{\n\tstring l_tree, r_tree;\n\tif (tree[node_code].left_code == no_son && tree[node_code].right_code == no_son)\n\t{\n\t\tans = make_str(&tree[node_code]);\n\t\tif (llen < 1)\n\t\t\tllen = 1;\n\t}\n\telse\n\t{\n\t\tif (tree[node_code].left_code != no_son)\n\t\t\tsearch_tree(tree[node_code].left_code, llen, l_tree);\n\t\tif (tree[node_code].right_code != no_son)\n\t\t\tsearch_tree(tree[node_code].right_code, llen, r_tree);\n\t}\n\t\n\tif (is_symmetric(l_tree, r_tree))\n\t\tif ((l_tree.length() / 5) * 2 + 1 > llen)\n\t\t\tllen = (l_tree.length() / 5) * 2 + 1;\n\t\n\tans = l_tree + make_str(&tree[node_code]) + r_tree;\n\treturn;\n}\n\nint max_symmetric_tree()\n{\n\tint max_symmetric = -1;\n\tstring lef, rgt;\n\tif (tree[0].left_code != no_son)\n\t\tsearch_tree(tree[0].left_code, max_symmetric, lef);\n\tif (tree[0].right_code != no_son)\n\t\tsearch_tree(tree[0].right_code, max_symmetric, rgt);\n\t\n\tif (is_symmetric(lef, rgt))\n\t\tmax_symmetric = (lef.length() / 5) * 2 + 1;\n\t\n\treturn max_symmetric;\n}\n\ncout << max_symmetric_tree() << endl;\n```\n\n## \u8d34\u4e0a\u826f\u5fc3\u4ee3\u7801\uff1a\n```cpp\n/*    Problem 5018 --\n *    Trees \n *                 -- By 2018/12/27\n */\n\n#include <iostream>\n#include <string>\n#include <cstdio>\n#include <cctype>\n\nconst int no_son = -2;\nusing namespace std;\n\nstruct weight_tree_node\n{\n\tshort weight;\n\tint heigth;\n\t\n\tint left_code, right_code;\n}tree[1000001];\n\nconst string make_str(struct weight_tree_node * wtn)\n{\n\tstring st;\n\tchar digit;\n\t\n\tint num = int(wtn->weight);\n\tfor (int i = 0; i < 2; i++)\n\t{\n\t\tdigit = num % 128;\n\t\tst.append(1, digit);\n\t\tnum /= 128;\n\t}\n\t\n\tint hei = wtn->heigth;\n\tfor (int i = 0; i < 3; i++)\n\t{\n\t\tdigit = hei % 128;\n\t\tst.append(1, digit);\n\t\thei /= 128;\n\t}\n\t\n\treturn st;\n}\n\nbool is_same_ct(const string & s1, const string & s2, int pos_1, int pos_2, int pos_ct)\n{\n\tfor (int i = 0; i < pos_ct; i++)\n\t\tif (s1[pos_1 + i] != s2[pos_2 + i])\n\t\t\treturn false;\n\t\n\treturn true;\n}\n\nbool is_symmetric(const string & left, const string & right)\n{\n\tif (left.length() != right.length())\n\t\treturn false;\n\t\n\tint len = left.length(), cp_len = len / 5;\n\tfor (int i = 0; i < cp_len; i++)\n\t\tif (!is_same_ct(left, right, i * 5, len - i * 5 - 5, 5))\n\t\t\treturn false;\n\treturn true;\n}\n\nvoid calculate(int hei, int pos)\n{\n\ttree[pos].heigth = hei;\n\tif (tree[pos].left_code != no_son)\n\t\tcalculate(hei + 1, tree[pos].left_code);\n\tif (tree[pos].right_code != no_son)\n\t\tcalculate(hei + 1, tree[pos].right_code);\n}\n\nvoid search_tree(int node_code, int & llen, string & ans)\n{\n\tstring l_tree, r_tree;\n\tif (tree[node_code].left_code == no_son && tree[node_code].right_code == no_son)\n\t{\n\t\tans = make_str(&tree[node_code]);\n\t\tif (llen < 1)\n\t\t\tllen = 1;\n\t}\n\telse\n\t{\n\t\tif (tree[node_code].left_code != no_son)\n\t\t\tsearch_tree(tree[node_code].left_code, llen, l_tree);\n\t\tif (tree[node_code].right_code != no_son)\n\t\t\tsearch_tree(tree[node_code].right_code, llen, r_tree);\n\t}\n\t\n\tif (is_symmetric(l_tree, r_tree))\n\t\tif ((l_tree.length() / 5) * 2 + 1 > llen)\n\t\t\tllen = (l_tree.length() / 5) * 2 + 1;\n\t\n\tans = l_tree + make_str(&tree[node_code]) + r_tree;\n\treturn;\n}\n\nint max_symmetric_tree()\n{\n\tint max_symmetric = -1;\n\tstring lef, rgt;\n\tif (tree[0].left_code != no_son)\n\t\tsearch_tree(tree[0].left_code, max_symmetric, lef);\n\tif (tree[0].right_code != no_son)\n\t\tsearch_tree(tree[0].right_code, max_symmetric, rgt);\n\t\n\tif (is_symmetric(lef, rgt))\n\t\tmax_symmetric = (lef.length() / 5) * 2 + 1;\n\t\n\treturn max_symmetric;\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++)\n\t\tcin >> tree[i].weight;\n\t\n\tint num;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tcin >> num;\n\t\ttree[i].left_code = num - 1;\n\t\tcin >> num;\n\t\ttree[i].right_code = num - 1;\n\t}\n\t\n\tcalculate(1, 0);\n\tcout << max_symmetric_tree() << endl;\n\treturn 0;\n}\n```\n\n# \u8fd0\u884c\u7ed3\u679c\uff08\u5176\u5b9e\u5f88\u6e23\u3002\u3002\u3002\uff09\n[\u4f20\u9001\u95e8](https://www.luogu.org/record/show?rid=15055677)",
        "postTime": 1546005490,
        "uid": 119491,
        "name": "5ab_juruo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\n## \u5b9e\u5728\u6ca1\u60f3\u5230\n## \u666e\u53ca\u7ec4\u7b2c\u56db\u9898\u5982\u6b64\u7b80\u5355 \n\n### \u89e3\u9898\u601d\u8def:\n1. \u6570\u7ec4\u5b58\u5373\u53ef\n```cpp\nint n;//\u8282\u70b9\u6570\nint l[n+1],r[n+1];//\u5de6\u53f3\u5b69\u5b50\u7f16\u53f7\nint quanzhi[n+1];//\u6743\u503c\nint sum=1;//\u4e00\u68f5\u5b50\u6811\u8282\u70b9\u6570\nint maxn=1;//\u5b58\u6700\u5927\u503c\n```\n2. \u65e0\u6bd4\u660e\u663e\uff0c\u6811\u5f62DP\n```cpp\nbool tree(int x,int y)//\u8868\u793a\u4ee5\u7f16\u53f7x\u548cy\u4e3a\u6839\u7684\u5b50\u6811\u662f\u5426\u5bf9\u79f0\n{\n\tif(x==-1&&y==-1)//\u53f6\u8282\u70b9\n    return 1;//\u5bf9\u79f0\n    if(x==-1||y==-1)//\u7ed3\u6784\u4e0d\u5bf9\u79f0\n    return 0;//\u5b50\u6811\u4e0d\u5bf9\u79f0\n    if(quanzhi[x]!=quanzhi[y])//\u6743\u503c\u4e0d\u5bf9\u79f0\n    return 0;//\u5b50\u6811\u4e0d\u5bf9\u79f0\n    sum+=2;//\u8282\u70b9\u6570\u589e\u52a0\n    return (tree(l[x],r[y])&&tree(l[y],r[x]));\n}\n```\n3. \u8fd9\u9898\u5c31\u51fa\u6765\u4e86......\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint l[1000001],r[1000001],quanzhi[1000001],maxn=1,sum=1;\nbool tree(int x,int y)\n{\n\tif(x==-1&&y==-1)\n\treturn 1;\n\tif(x==-1||y==-1||quanzhi[x]!=quanzhi[y])\n\treturn 0;\n\tsum+=2;\n\treturn (tree(l[x],r[y])&&tree(l[y],r[x]));\n}\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\tcin>>quanzhi[i];\n\tfor(int i=1;i<=n;i++)\n\tcin>>l[i]>>r[i];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tsum=1;\n\t\tif(tree(l[i],r[i])&&sum>maxn)\n\t\tmaxn=sum;\n\t}\n\tcout<<maxn;\n    return 0;\n}\n```",
        "postTime": 1545829141,
        "uid": 118739,
        "name": "boatontime",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u53c2\u8003\u4e86\u5927\u795e\u7684\u6df1\u641c\u4ee3\u7801\u3002\u601d\u60f3\u8fd8\u662f\u5f88\u7b80\u5355\u7684\uff0c \u9012\u5f52\u554a\n```cpp\n#include<cstdio>\nint n, ans;\nint son[1000001][2], v[1000001], ss[1000001];\nusing namespace std;\nvoid dfs(int u){\n\tss[u] = 1;\n\tif(son[u][0] != -1){\n\t\tdfs(son[u][0]);\n\t\tss[u] += ss[son[u][0]];\n\t}\n\tif(son[u][1] != -1){\n\t\tdfs(son[u][1]);\n\t\tss[u] += ss[son[u][1]];\n\t}\n}\nbool check(int l, int r){\n\tif(l == -1 && r == -1)\n\t\treturn true;\n\tif(l != -1 && r != -1 && v[l] == v[r] && check(son[l][0], son[r][1]) && check(son[l][1], son[r][0]))\n\t\treturn true;\n\treturn false;\n}\nint main(){\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; ++i)\n\t\tscanf(\"%d\", &v[i]);\n\tfor(int i = 1; i <= n; ++i)\n\t\tscanf(\"%d%d\", &son[i][0], &son[i][1]);\n\tdfs(1);\n\tfor(int i = 1; i <= n; ++i)\n\t\tif(check(son[i][0], son[i][1]))\n\t\t\tans = ans > ss[i] ? ans : ss[i];\n\tprintf(\"%d\", ans);\n    return 0;\n}\n```\n\npython3 \u6700\u540e5\u7ec4MLE\n```python\ndef dfs(u, s, ss):\n    ss[u] = 1\n    if s[u][0] != -1:\n        dfs(s[u][0], s, ss)\n        ss[u] += ss[s[u][0]]\n    if s[u][1] != -1:\n        dfs(s[u][1], s, ss)\n        ss[u] += ss[s[u][1]]\n\n\ndef check(l, r, v, s):\n    if l == -1 and r == -1:\n        return True\n    if l != -1 and r != -1 and v[l] == v[r] and check(s[l][0], s[r][1], v, s) and check(s[l][1], s[r][0], v, s):\n        return True\n    return False\n\n\nn = int(input())\nv = [i for i in input().split()]\nv.insert(0, 0)\ns = [[0, 0] for i in range(n + 1)]\nss = [0 for i in range(n + 1)]\nfor i in range(1, n + 1):\n    s[i] = [int(j) for j in input().split()]\ndfs(1, s, ss)\nans = 0\nfor i in range(1, n + 1):\n    if check(s[i][0], s[i][1], v, s):\n        ans = max(ans, ss[i])\nprint(ans)\n\n```",
        "postTime": 1545013790,
        "uid": 33147,
        "name": "xiaosongliu",
        "ccfLevel": 0,
        "title": "\u5bf9\u79f0\u4e8c\u53c9\u6811  python3MLE"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8003\u8bd5\u65f6\u4e00\u770b\u2014\u2014\u6ca1\u601d\u8def \u51b3\u5b9a\u6253\u4e00\u4e2a\u504f\u5206\u4ee3\u7801\uff0c\u6253\u7740\u6253\u7740\u51b3\u5b9a\u6253\u4e00\u4e2a\u66b4\u529b\n\n------------\n\u4e00\u6761\u534e\u4e3d\u7684\u5206\u5272\u7ebf\n\u8a00\u5f52\u6b63\u4f20\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u8fd9\u9053\u9898\uff1a\n\n\n- \u9996\u5148\uff1a\u6211\u4eec\u4ece\u6bcf\u4e00\u4e2a\u8282\u70b9\u53bb\u679a\u4e3e\u4ed6\u7684\u4e8c\u53c9\u6811\u8282\u70b9\u6570\u91cf\uff0c\u53d6\u6700\u5927\u7684ans\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0b\u65b9\u7684\u5b50\u6811\n    \n   1. \u7528$sum$\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u4e0b\u65b9\u7684\u5b50\u6811\n   1. \u7528$check$\u8bb0\u5f55\u8fd9\u68f5\u5b50\u6811\u662f\u5426\u4e3a\u5bf9\u79f0\u4e8c\u53c9\u6811\n   1. \u5982\u679c\u8fd9\u4e24\u4e2a\u8282\u70b9\u7684\u6743\u503c\u76f8\u7b49\uff0c$sum+=2$\n   1. \u5982\u679c\u8fd9\u4e24\u4e2a\u8282\u70b9\u4e0d\u76f8\u7b49\u4e14\u6709\u4e00\u4e2a\u4e0d\u4e3a$-1$ $check=1$\n   1. \u5982\u679c\u524d\u9762\u7684\u6761\u4ef6\u90fd\u7b26\u5408\uff1a\n   \n      1. \u5982\u679c\u4e24\u4e2a\u90fd\u662f$-1$ \u76f4\u63a5$return$\n      1. \u4e0d\u7136 \u7ee7\u7eed\u5411\u4e0b\u6df1\u641c\n \n \u4ee3\u7801\uff1a\n ```cpp\n #include<iostream>\n#include<cstdio>\nusing namespace std;\n#define ll long long\nstruct twree{\n    ll left,right,num;\n};\ntwree a[2300003];//\u5b58\u56fe\nll n;\nll check;\nll ans=1;\nll sum=1;\nll read() {//\u5feb\u8bfb\n    ll x=0,f=1;\n    char ch=getchar() ;\n    while(ch<'0'||ch>'9') {\n        if(ch=='-') f=-f;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid dfs(ll x,ll y) {//dfs\u5177\u4f53\u601d\u8def\u5728\u4e0a\u9762\n    if(a[x].num==-1&&a[y].num==-1) {\n        return ;\n    }\n    else if(a[x].num==a[y].num) {\n        sum+=2;\n    }\n    else if(a[x].num!=-1||a[y].num!=-1) {\n        sum=1;\n        check=1;\n        return ;\n    }\n    else if(a[x].right!=-1||a[y].left!=-1||a[y].right!=-1||a[x].left!=-1) {\n        //cout<<sum<<endl;\n        sum=1;\n        check=1;\n        return ;\n    }\n    //cout<<a[x].left<<\" \"<<a[y].right<<\" \"<<sum<<endl;\n    if(a[x].right==-1&&a[y].left!=-1) {\n        sum=1;\n        check=1;\n        return ;\n    }\n    if(a[x].left==-1&&a[y].right!=-1) {\n        sum=1;\n        check=1;\n        return ;\n    }\n    if(a[y].left==-1&&a[x].right!=-1) {\n        //cout<<a[x].left<<\" \"<<a[y].right<<\" \"<<sum<<endl;\n        sum=1;\n        check=1;\n        return ;\n    }\n    if(a[y].right==-1&&a[x].left!=-1) {\n        sum=1;\n        check=1;\n        return ;\n    }\n    if(a[x].right!=-1&&a[y].left!=-1) {\n        //cout<<x<<\" \"<<y<<\" \"<<a[x].right<<\" \"<<a[y].left<<endl;\n        dfs(a[x].right,a[y].left);\n    }\n    if(a[y].right!=-1&&a[x].left!=-1) {\n        //cout<<x<<\" \"<<y<<\" \"<<a[x].left<<\" \"<<a[y].right<<endl;\n        dfs(a[x].left,a[y].right);\n    }\n    if(a[x].left==-1&&a[x].right==-1) return ;\n    if(a[y].left==-1&&a[y].right==-1) return ;\n}\nint main() {\n    n=read();\n    /*if(n==1) {\n        cout<<n;\n        return 0;\n    }*/\n    for(ll i=1;i<=n;i++) {\n        a[i].num=read();\n    }\n    for(ll i=1;i<=n;i++) {\n        a[i].left=read();\n        a[i].right=read();\n    }\n    for(ll i=1;i<=n;i++) {\n        if(a[i].left==-1||a[i].right==-1) continue;\n        if(a[a[i].left].num!=a[a[i].right].num) continue;\n        dfs(a[i].left,a[i].right);\n        if(check==1) {\n            check=0;\n            continue;\n        }\n        ans=max(ans,sum);\n        sum=1;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n ```",
        "postTime": 1543736167,
        "uid": 77119,
        "name": "\u4efb\u5f08\u51e1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "**\u601d\u8def**\n- \u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\u4e8c\u53c9\u6811\n- \u4e00\u4e2a\u5faa\u73af\u6765\u679a\u4e3e\u5b50\u6811\n- \u6bcf\u4e2a\u5faa\u73af\u91cc\u52a0\u4e0a\u4e00\u4e2aDFS\u6765\u5224\u65ad\u5f53\u524d\u5b50\u6811\n- \u8f93\u51fa\u6700\u5927\u5b57\u6570  \n**\u4ee3\u7801**\n\u66f4\u4ee5\u5f80\u4e00\u6837\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff0c\u6ce8\u91ca\u5168\u90e8\u653e\u5728\u4ee3\u7801\u91cc\u9762\u4e86\n```Cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e6+7;\nstruct node {\n\tint l,r,v;\n} t[N]; //\u4e00\u7ef4\u6570\u7ec4\u50a8\u5b58\u6811\nint n,sum=1,ans=1;\nbool flag=true;\nvoid dfs(int l,int r) { //dfs\u6bcf\u6b21\u53ea\u8d1f\u8d23\u4e00\u68f5\u5b50\u6811\n\tif(flag==false) return;//\u4e0d\u662f\u5bf9\u79f0\u7684\u5c31\u76f4\u63a5\u7c97\u53bb\u5427\n\tif(l==-1&&r==-1) return;//\u5982\u679c\u90fd\u662f-1\u7684\u60c5\u51b5\u4e0b\u9000\u51fa \n\tif((l==-1&&r!=-1)||(r==-1&&l!=-1)){ \n\t\tflag=false;\n\t\treturn; //\u5982\u679c\u5de6\u53f3\u53ea\u6709\u4e00\u4e2a\u662f-1\u5c31\u4e00\u5b9a\u4e0d\u5bf9\u79f0\u4e86 \n\t}  \n\tif(t[l].v==t[r].v) { //\u76f8\u7b49\uff0c\u5bf9\u79f0\u4e4b\u540e\u4e5f\u80af\u5b9a\u76f8\u7b49\n\t\tsum+=2;//\u5de6\u53f3\u65f6\u5bf9\u79f0\u7684+2\u5c31\u53ef\u4ee5\n\t\tdfs(t[l].l,t[r].r);\n\t\tdfs(t[l].r,t[r].l);\n\t} else {\n\t\tflag=false; //\u53ea\u8981\u53d1\u73b0\u4e00\u4e2a\u70b9\u4e0d\u662f\n\t\treturn; //\u5c31\u4e00\u8def\u9000\u51fa\u53bb\n\t}\n}\nint main() {\n\t//\u8f93\u5165\n\tcin>>n;\n\tfor(int i=1; i<=n; i++) cin>>t[i].v;\n\tfor(int i=1; i<=n; i++) cin>>t[i].l>>t[i].r;\n\t//\u5faa\u73af+dfs\n\tfor(int i=1; i<=n; i++) {\n\t\tflag=true;//\u76ee\u524d\u5faa\u73af\u7684\u8fd9\u68f5\u6811\u662f\u4e0d\u662f\u5bf9\u79f0\u7684\n\t\tsum=1; //\u6839\u8282\u70b9\u7b97\u4e00\u4e2a\u70b9,\u5de6\u53f3\u662f\u5bf9\u79f0\u7684+2\u5c31\u53ef\u4ee5\n\t\tdfs(t[i].l,t[i].r);\n\t\tif(flag) {\n\t\t\tans=max(ans,sum); //\u6700\u5927\u5bf9\u79f0\u5b50\u6811\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1543113078,
        "uid": 145225,
        "name": "lanhua_ma",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011\u5168\u6ce8\u91ca"
    },
    {
        "content": "> \u53d1\u4e00\u7bc7\u679a\u4e3e\n``````\n\u4ee5\u4e0b\u7eaf\u5c5e\u611f\u6168\n555\n\u8003\u573a\u5199\u7684\u662f\u9519\u7684\n555\n\u56de\u5bb6\u6539\u4e00\u4e0b\u6d1b\u8c37\u5c31AC\u4e86\n555\n300\u5206\u6ca1\u6709\u4e86\n555\n``````\n\n\u5148\u4e0acode:\n``````cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,val[1000005],ans=1;\nstruct node{\n\tint l,r,dep,maxdep,num;\n}tr[1000005];\nbool isf[1000005];\nint make_tree(int now){\n\tint sum=1;\n\tif(tr[now].l!=-1){\n\t\ttr[tr[now].l].dep=tr[now].dep+1;\n\t\tsum+=make_tree(tr[now].l);\n\t}\n\tif(tr[now].r!=-1){\n\t\ttr[tr[now].r].dep=tr[now].dep+1;\n\t\tsum+=make_tree(tr[now].r);\n\t}\n\treturn tr[now].num=sum;\n}\nint find_max_depth(int now){\n\tif(tr[now].l==-1&&tr[now].r==-1)return tr[now].maxdep=tr[now].dep;\n\treturn tr[now].maxdep=max(tr[now].l!=-1?find_max_depth(tr[now].l):0,tr[now].r!=-1?find_max_depth(tr[now].r):0);\n}\nbool chock(int nowl,int nowr){\n\treturn nowl==-1||(val[nowl]==val[nowr]&&chock(tr[nowl].l,tr[nowr].r)&&chock(tr[nowl].r,tr[nowr].l));\n}\nbool ok(int nowl,int nowr){\n\tif(nowl==-1&&nowr==-1)return 1;\n\tif(nowl!=-1&&nowr!=-1)return ok(tr[nowl].l,tr[nowr].r)&&ok(tr[nowl].r,tr[nowr].l);\n\treturn 0;\n}\nbool check(int now){\n\treturn ok(tr[now].l,tr[now].r);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&val[i]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&tr[i].l,&tr[i].r);\n\t\tif(tr[i].l!=-1)isf[tr[i].l]=1;\n\t\tif(tr[i].r!=-1)isf[tr[i].r]=1;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(isf[i]==0){\n\t\t\ttr[i].dep=1;\n\t\t\tmake_tree(i);\n\t\t\tfind_max_depth(i);\n\t\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(tr[i].l==-1||tr[i].r==-1)continue;\n\t\tif(tr[tr[i].l].num!=tr[tr[i].r].num)continue;\n\t\tif(tr[tr[i].l].maxdep!=tr[tr[i].r].maxdep)continue;\n\t\tif(tr[i].num>ans&&(i)&&chock(tr[i].l,tr[i].r))ans=tr[i].num;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n``````\n\n\u601d\u8def\uff1a\n\n~~\u5e94\u8be5\u4e0d\u96be~~\n\n\u5148\u5efa\u6811\uff0c\u518d\u679a\u4e3e\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u5148\u526a\u679d\u518d\u5224\u65ad\n\n\u590d\u6742\u5ea6${O(nlog_2n)}$\n\nmake_tree\u662f\u5efa\u6811\n\nfind_max_depth\u662f\u526a\u679d\u7528\u7684 \n\nchock\u5224\u65ad\u989c\u8272\n\nok&check\u5224\u65ad\u7ed3\u6784\n\n\u7ba1\u7406\u5458\u6c42\u8fc7\u554a~~~",
        "postTime": 1542552407,
        "uid": 68703,
        "name": "_Int_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u8bf7\u70b9\u8fd9\u91cc](https://www.dragon-archer.me/articles/67.html)\n# \u8fd9\u9898\u5176\u5b9e\u6bd4PJ\u7b2c\u4e09\u9898\u7b80\u5355\u591a\u4e86\n~~\u8003\u573a\u4e0a\u6211\u53ea\u82b1\u4e86$30$\u5206\u949f~~\n\n\u8fd9\u9053\u9898\u7684\u9898\u9762\u5176\u5b9e\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\uff0c\u53ea\u8981\u7b80\u5355\u7684\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u4f9d\u6b21\u5bfb\u627e\u5bf9\u79f0\u7684\u5b50\u4e8c\u53c9\u6811\u5c31\u53ef\u4ee5\u4e86\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u8bb0\u5f97\u628a\u6570\u7ec4\u4e2d\u7684$0$\u53f7\u5143\u7d20\u4f5c\u4e3a\u7a7a\uff08\u5373\u4e0d\u5b58\u5728\u7684\u5143\u7d20\uff09\uff0c\u5c06\u5b83\u7684\u503c\u548c\u5de6\u53f3\u5b50\u5973\u90fd\u8bbe\u4e3a$0$\n### \u653e\u4e0a\u6211\u7684\u4ee3\u7801\n```cpp\n\t#include <algorithm>\n\t#include <cctype>\n\t#include <cstdio>\n\tusing namespace std;\n\t\n\tconst int maxn = 1000000 + 5;\n\t\n    //\u6ce8\u610f\u8981\u5f00\u8bfb\u4f18\uff0c\u4e0d\u7136\u4f1a\u7206\n\tinline void readint(int& x)\n\t{\n\t\tx = 0;\n\t\tchar ch = getchar();\n\t\twhile(!isdigit(ch) && ch != '-') ch = getchar();\n\t\tif(ch == '-')\n\t\t{\n\t\t\tgetchar();\n\t\t\treturn;\n\t\t}\n\t\tdo\n\t\t{\n\t\t\tx = x * 10 + ch - '0';\n\t\t\tch = getchar();\n\t\t}while(isdigit(ch));\n\t}\n\t\n\tstruct node\n\t{\n\t\tint v;\n\t\tint l,r;\n        //\u8fd9\u91cc\u7528\u4e86c++\u4e2d\u7684\u7ed3\u6784\u4f53\u4e5f\u53ef\u4ee5\u6709\u6784\u9020\u51fd\u6570\u7684\u7279\u70b9\uff0c\u7ed3\u5408\u521d\u59cb\u503c\u7b80\u5316\u4ee3\u7801\u957f\u5ea6\n\t\tnode(int V=0,int L=0,int R=0) : v(V),l(L),r(R) {}\n\t};\n\t\n\tnode tree[maxn];\n\t\n    //\u7528\u9012\u5f52\u5224\u65adnode[x]\u6709\u51e0\u4e2a\u5b50\u8282\u70b9\uff08\u5305\u62ec\u5b83\u81ea\u5df1\uff09\n\tint count(int i)\n\t{\n\t\tif(!i) return 0;\n\t\treturn count(tree[i].l) + count(tree[i].r) + 1;\n\t}\n\t\n    //\u9012\u5f52\u5224\u65ad\u4e24\u5b50\u6811\u662f\u5426\u5bf9\u79f0\uff08l\u7684\u503c\u4e0er\u7684\u503c\u76f8\u7b49\uff0cl\u7684\u5de6\u5b50\u6811\u4e0er\u7684\u53f3\u5b50\u6811\u5bf9\u79f0\uff0cl\u7684\u53f3\u5b50\u6811\u4e0er\u7684\u5de6\u5b50\u6811\u5bf9\u79f0\uff09\n\tbool e(int i,int j)\n\t{\n\t\tif(i == j) return true;\n\t\tnode x = tree[i],y = tree[j];\n\t\treturn (x.v == y.v) && e(x.l,y.r) && e(x.r,y.l);\n\t}\n\t\n    //\u5224\u65adnode[i]\u662f\u5426\u4e3a\u5bf9\u79f0\u4e8c\u53c9\u6811\uff08\u901a\u8fc7e\uff09\n\tbool ok(int i)\n\t{\n\t\tif(tree[i].l == tree[i].r) return true;\n\t\treturn e(tree[i].l,tree[i].r);\n\t}\n\t\n    //\u5224\u65adnode[x]\u662f\u5426\u5bf9\u79f0\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u5b50\u8282\u70b9\u4e2a\u6570\n    //\u5176\u5b9e\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u548cok\u7ed3\u5408\uff0c\u4f46\u6211\u5728\u8003\u573a\u4e0a\u6ca1\u7a7a\u53bb\u91cd\u65b0\u8c03\u4e86\uff08\u53cd\u6b63\u4e5f\u4e0d\u8d85\u65f6qwq\uff09\n\tint final(int x)\n\t{\n\t\tif(ok(x)) return count(x);\n\t\treturn max(final(tree[x].l),final(tree[x].r));\n\t}\n\t\n\tint main()\n\t{\n\t\t//freopen(\"tree.in\",\"r\",stdin);\n\t\t//freopen(\"tree.out\",\"w\",stdout);\n\t\ttree[0] = node();\n\t\tint n;\n\t\treadint(n);\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\treadint(tree[i].v);\n\t\t}\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\treadint(tree[i].l);\n\t\t\treadint(tree[i].r);\n\t\t}\n\t\tprintf(\"%d\",final(1));\n\t\t//fclose(stdin);\n\t\t//fclose(stdout);\n\t}\n\n```\n## \u6ce8\u610f\u4e00\u5b9a\u8981\u5f00\u8bfb\u4f18\n## \u6ce8\u610f\u4e00\u5b9a\u8981\u5f00\u8bfb\u4f18\n## \u6ce8\u610f\u4e00\u5b9a\u8981\u5f00\u8bfb\u4f18\n\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\uff0c\u5f00\u4e86\u8bfb\u4f18\u540e\u8003\u573a\u4e0a\u5b9e\u6d4b\u6700\u5927\u6d4b\u8bd5\u70b90.95\u79d2~~\u597d\u9669~~\n\n\u4e0d\u5f00\u8bfb\u4f18\u7684\u8bdd--\u5475\u5475\n\n~~\u51c6\u5907\u597d60\u5206\u4ee5\u4e0b\u5427~~",
        "postTime": 1542503831,
        "uid": 71778,
        "name": "dragonarcher",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\n# $noip2018$ $T4$\u9898\u89e3\n## [\u535a\u5ba2\u98df\u7528\u66f4\u4f73\u54e6\uff01](https://www.cnblogs.com/little-sun0331/p/9965342.html)\n\n* \u5176\u5b9e\u5462\uff0c\u6211\u662f\u89c9\u5f97\u8fd9\u9898\u6bd4$T3$\u6c34\u5230\u4e0d\u77e5\u9053\u54ea\u91cc\u53bb\u4e86\n* \u6bd5\u7adf\u6211\u6bd4\u8f83\u83dc\uff0c\u4e0d\u5927\u4f1a$dp$\n\n* \u597d\u4e86\u5f00\u59cb\u8bb2\u6b63\u4e8b\n* \u8fd9\u9898\u5176\u5b9e\u8003\u5bdf\u7684\u5176\u5b9e\u5c31\u662f\u9009\u624b\u5bf9D(\u5927)F(\u6cd5)S(\u5e08)\u7684\u638c\u63e1\u7a0b\u5ea6\n* \u8003\u5b8c\u8bd5\u6709\u4eba\u8bf4\u8fd9\u9898\u662f\u9a6c\u62c9\u8f66\uff0c~~\u5413\u6b7b\u6211\u4e86~~\n\n* \u9996\u5148\uff0c\u4f60\u628a\u6570\u636e\u8bfb\u5165\u4e4b\u540e\uff0c\u5148\u7528\u4e00\u4e2a\u5927\u6cd5\u5e08\u628a\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f\u548c\u6743\u503c\u90fd\u9884\u5904\u7406\u51fa\u6765\uff0c\u65b9\u4fbf\u5f85\u4f1a\u526a\u679d\n* \u7136\u540e\uff0c\u4f60\u5bf9\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u90fd\u5224\u65ad\u4e00\u4e0b\u4ee5\u4e0b\u6761\u4ef6\uff08\u8fd9\u65f6\u521a\u624d\u5904\u7406\u7684\u4e1c\u897f\u5c31\u6709\u7528\u4e86\uff09\n\n* \u2460 \u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u8282\u70b9\u6570\u662f\u5426\u76f8\u7b49\n* \u2461 \u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u6743\u503c\u662f\u5426\u76f8\u7b49\n* \u2462 \u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u662f\u4e0d\u662f\u8d85\u8fc7\u7b54\u6848\n\n* \u7b2c\u4e09\u4e2a\u5f88\u91cd\u8981\uff0c\u4e0d\u52a0\uff08\u6d1b\u8c37\u6570\u636e\uff09\u6700\u540e\u4e00\u4e2a\u70b9\u4f1aTLE\n\n* \u6709\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u526a\u679d\uff1a\u56e0\u4e3a\u7b54\u6848\u81f3\u5c11\u662f1\uff0c\u6240\u4ee5\u5927\u5c0f\u4e3a1\u7684\u5b50\u6811\u5c31\u4e0d\u7528check\u4e86\uff0c\u4e0d\u7136\u6d6a\u8d39\u5e38\u6570\n\n* \u7136\u540e\u5c31\u662f\u66b4\u529b\u5224\u4e86\n* \u9012\u5f52\u4e0b\u53bb\uff0c\u5efa\u7acb\u4e24\u4e2a\u961f\u5217\uff0c\u4fdd\u5b58\u5f53\u524d\u5904\u7406\u5230\u7684\u5de6\u5b50\u6811\u4e0a\u548c\u53f3\u5b50\u6811\u4e0a\u7684\u8282\u70b9\uff0c\u5224\u5de6\u5b50\u6811\u5f53\u524d\u8282\u70b9\u7684\u5de6\u513f\u5b50\u548c\u53f3\u5b50\u6811\u5f53\u524d\u8282\u70b9\u7684\u53f3\u513f\u5b50\u6743\u503c\u662f\u5426\u76f8\u7b49\uff0c\u53f3\u5b50\u6811\u5f53\u524d\u8282\u70b9\u7684\u5de6\u513f\u5b50\u548c\u5de6\u5b50\u6811\u5f53\u524d\u8282\u70b9\u7684\u53f3\u513f\u5b50\u6743\u503c\u662f\u5426\u76f8\u7b49\uff08\u6ce8\u610f\u5bf9\u5e94\uff09\n* \u8fd8\u6709\u5224\u4e0b\u5bf9\u5e94\u7684\u8282\u70b9\u6709\u6ca1\u6709\u4e00\u4e2a\u662f\u7a7a\u7684\u4e00\u4e2a\u6ca1\u7a7a\u7684\u60c5\u51b5\n\n* \u5982\u679c\u4e0d\u76f8\u7b49\u5c31\u8fd4\u56de\n* \u76f8\u7b49\u7684\u8bdd\u5c31\u6254\u8fdb\u961f\u5217\uff08\u6ce8\u610f\u5bf9\u5e94\u987a\u5e8f\uff01\uff09\n\n* \u6ce8\u610f\uff1a\u4e0a\u8ff0\u5904\u7406\u4e00\u5b9a\u8981\u5de6\u53f3\u5b50\u6811\u4e00\u8d77\u505a\uff0c\u4e0d\u80fd\u5148\u5904\u7406\u4e00\u8fb9\uff0c\u518d\u5904\u7406\u53e6\u4e00\u8fb9\uff0c\u4e0d\u7136\u4f1aWA\n\n* \u5230\u6700\u540e\u5982\u679c\u90fd\u53ef\u4ee5\u7684\u8bdd\u5c31return true\n\n* \u9644\u8003\u573a\u4ee3\u7801\n* \u4e0d\u5f97\u4e0d\u8bf4\uff0c\u4e3a\u4e86\u80fd\u8fc7\uff0c\u6211\u52a0\u4e86\u4e00\u5806\u5361\u5e38\n* 3e6\u7684\u8f93\u5165\u89c4\u6a21\u5e94\u8be5\u8fd8\u662f\u8981\u5feb\u8bfb\u7684\u5427\n\n```cpp\n# include <bits/stdc++.h>\n\n# define R register \n\nconst int MaxN = 1000010;\n\nstruct node//\u8282\u70b9\n{\n    int val;\n    int l, r;\n};\n\nnode a[MaxN];\nint f[MaxN], val[MaxN], ind[MaxN];//f[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\uff0cval\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u6743\u503c\u548c\uff0cind\u6ca1\u5565\u7528\n\ninline void read(int &x)//\u5feb\u8bfb\n{\n    x = 0;\n    bool op = 1;\n    char ch = getchar();\n    while(ch > '9' || ch < '0')\n    {\n        if(ch == '-')\n            op = 0;\n        ch = getchar();\n    }\n    while(ch <= '9' && ch >= '0')\n        x = (x << 1) + (x << 3) + (ch - '0'), ch = getchar();\n    if(!op)\n        x = -x;\n}\n\nvoid dfs(int root)\n{\n    if(root == -1)\n        return;\n    if(a[root].l == -1 && a[root].r == -1)\n        f[root] = 1, val[root] = a[root].val;\n    else\n    {\n        dfs(a[root].l);\n        dfs(a[root].r);\n        f[root] = f[a[root].l] + f[a[root].r] + 1;\n        val[root] = val[a[root].l] + val[a[root].r] + a[root].val;\n    }\n\n}\n\ninline int check(int x)\n{\n    std::queue<int> l, r;\n    l.push(x), r.push(x);\n    while(!l.empty() || !r.empty())\n    {\n        if(l.empty() || r.empty())\n            return false;//\u4e00\u8fb9\u7a7a\u4e86\uff0c\u4e00\u8fb9\u6ca1\u7a7a\n        R int lx = l.front(), rx = r.front();\n        l.pop(), r.pop();\n        if(a[lx].val != a[rx].val)\n            return false;\n        R int lson[3], rson[3];\n        lson[1] = a[lx].l, lson[2] = a[lx].r;//\u5de6\u5b50\u6811\u5f53\u524d\u8282\u70b9\u7684\u5de6\u513f\u5b50,\u5de6\u5b50\u6811\u5f53\u524d\u8282\u70b9\u7684\u53f3\u513f\u5b50\n        rson[1] = a[rx].l, rson[2] = a[rx].r;//\u53f3\u5b50\u6811\u5f53\u524d\u8282\u70b9\u7684\u5de6\u513f\u5b50,\u53f3\u5b50\u6811\u5f53\u524d\u8282\u70b9\u7684\u53f3\u513f\u5b50\n        if((lson[1] == -1 && rson[2] != -1) || (lson[1] != -1 && rson[2] == -1))\n            return false;//\u4e00\u8fb9\u7a7a\u4e86\uff0c\u4e00\u8fb9\u6ca1\u7a7a\n        if((lson[2] == -1 && rson[1] != -1) || (lson[2] != -1 && rson[1] == -1))\n            return false;//\u4e00\u8fb9\u7a7a\u4e86\uff0c\u4e00\u8fb9\u6ca1\u7a7a\n        if(lson[1] != -1)\n            l.push(lson[1]);\n        if(lson[2] != -1)\n            l.push(lson[2]);\n        if(rson[2] != -1)\n            r.push(rson[2]);\n        if(rson[1] != -1)\n            r.push(rson[1]);\n        //\u63a8\u8fdb\u961f\u5217\n    }\n    return true;\n}\n\nint main()\n{\n// \tfreopen(\"tree.in\", \"r\", stdin);\n// \tfreopen(\"tree.out\", \"w\", stdout);\n    R int n;\n    scanf(\"%d\", &n);\n    for(R unsigned i = 1; i <= n; ++i)\n        read(a[i].val);\n    for(R unsigned i = 1; i <= n; ++i)\n        read(a[i].l), read(a[i].r), ++ind[a[i].l], ++ind[a[i].r];//\u5904\u7406\u5165\u5ea6\n    R unsigned root;\n    for(R unsigned i = 1; i <= n; ++i)\n    {\n        if(!ind[i])\n        {\n            root = i;\n            break;\n        }\n    }//\u627e\u6811\u6839\n    dfs(root);//\u9884\u5904\u7406\n    int ans = 1;\n    for(R unsigned i = 1; i <= n; ++i)//\u679a\u4e3e\u5b50\u6811\n    {\n        if(f[a[i].l] != f[a[i].r])\n            continue;//\u526a\u679d1\n        if(val[a[i].l] != val[a[i].r])\n            continue;//\u526a\u679d2\n        if(f[i] < ans || f[i] == 1)\n            continue;//\u526a\u679d3\n        if(check(i))\n            ans = f[i];//\u66f4\u65b0\u7b54\u6848\n    }\n    printf(\"%d\", ans);\n    fclose(stdin);\n    fclose(stdout);\n    return 0;\n}\n\n```",
        "postTime": 1542275467,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u3002\u3002\u3002\u3002\u3002\u3002\n\u672c\u849f\u84bb\u7528\u66b4\u529b+\u8f93\u5165\u8f93\u51fa\u4f18\u5316+inline\u5361\u65f6\u95f4\u52c9\u5f3aAC\n\u6211\u7684\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4ece\u6839\u5f00\u59cb\u4f9d\u6b21\u5f80\u4e0b\u904d\u5386\uff0c\u627e\u6700\u5927\u503c\n\u6ce8\u610f\u9898\u76ee\u63cf\u8ff0\uff1a\uff1a\uff1a\n###### \u672c\u9898\u4e2d\u7ea6\u5b9a\uff0c\u4ee5\u8282\u70b9 TT \u4e3a\u5b50\u6811\u6839\u7684\u4e00\u68f5\u201c\u5b50 \u6811\u201d\u6307\u7684\u662f\uff1a\u8282\u70b9TT \u548c\u5b83\u7684\u5168\u90e8\u540e\u4ee3\u8282\u70b9\u6784\u6210\u7684\u4e8c\u53c9\u6811\n#### \u672c\u9898\u4e2d\u7ea6\u5b9a\uff0c\u4ee5\u8282\u70b9 TT \u4e3a\u5b50\u6811\u6839\u7684\u4e00\u68f5\u201c\u5b50 \u6811\u201d\u6307\u7684\u662f\uff1a\u8282\u70b9TT \u548c\u5b83\u7684\u5168\u90e8\u540e\u4ee3\u8282\u70b9\u6784\u6210\u7684\u4e8c\u53c9\u6811\n## \u672c\u9898\u4e2d\u7ea6\u5b9a\uff0c\u4ee5\u8282\u70b9 TT \u4e3a\u5b50\u6811\u6839\u7684\u4e00\u68f5\u201c\u5b50 \u6811\u201d\u6307\u7684\u662f\uff1a\u8282\u70b9TT \u548c\u5b83\u7684\u5168\u90e8\u540e\u4ee3\u8282\u70b9\u6784\u6210\u7684\u4e8c\u53c9\u6811\n\u6240\u4ee5\u53ea\u9700\u8981check\u4e00\u904d\u5224\u65ad\u5c31\u597d\u4e86\n\u6211\u7684\u4ee3\u7801\u5f88\u590d\u6742\n\u9996\u5148\u6765\u770b\u8f93\u5165\u8f93\u51fa\u4f18\u5316\n\u8f93\u5165\u4f18\u5316\uff1a\n```\ninline void sc(int &x) {//\u8bfb\u5165\u8981\u6539\u53d8x\u7684\u503c\n    x=0;int f=1;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}//\u5224\u65ad\u6b63\u8d1f\n    while(s>='0'&&s<='9'){x=x*10+s-48;s=getchar();}//\u8bfb\u5165\n    x*=f;//\u7a0d\u5fae\u5b66\u8fc7\u4e00\u70b9\u7684\u90fd\u5e94\u8be5\u770b\u5f97\u61c2\u3002\u3002\u3002\n}\n```\n\u8f93\u51fa\u4f18\u5316\uff1a\n```cpp\ninline void pr(int x) {\n    if(x<0)putchar('-'),x=-x;//\u8d1f\u6570\n    if(x>9)pr(x/10);//\u7528\u9012\u5f52\u4ece\u524d\u5f80\u540e\u8f93\u51fa\n    putchar(x%10+48);//\u8f93\u51fa\n}\n```\n\u4ee5\u4e0a\u4e24\u6bb5\u4ee3\u7801\u90fd\u662f\u5229\u7528c++\u8f93\u5165\u8f93\u51fa\u5b57\u7b26\u6bd4\u6570\u5b57\u5feb\u7684\u539f\u7406\n\u7136\u540e\u6765\u770b\u4e3b\u7a0b\u5e8f\uff1a\n```cpp\nint main() {\n    sc(n);\n    for(int i=1;i<=n;i++)\n        sc(a[i].v);\n    for(int i=1;i<=n;i++)\n        sc(a[i].l),sc(a[i].r);\n    dfs(1);\n    pr(ans);\n}\n```\n\u518d\u6765\u770bdfs\uff1a\n```cpp\ninline void dfs(int x) {//\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u641c\n    tot=3;\n    if(a[x].l==-1&&a[x].r==-1)//\u5de6\u53f3\u513f\u5b50\u90fd\u662f-1\n        ans=max(ans,1),tot=3;//\u5224\u65ad\uff0ctot=3\u5728\u4ee3\u7801\u540e\u9762\u89e3\u91ca\n    else if(a[x].l!=-1&&a[x].r!=-1)//\u5de6\u53f3\u513f\u5b50\u90fd\u4e0d\u662f-1\n        if(check(a[x].l,a[x].r))//\u5224\u65ad\u662f\u4e0d\u662f\u4e00\u68f5\u5bf9\u79f0\u4e8c\u53c9\u6811\n            ans=max(ans,tot),tot=3;\n    if(a[a[x].l].v!=a[a[x].r].v||a[x].l==-1||a[x].r==-1||!check(a[x].l,a[x].r)) {//\u5728\u6743\u503c\u4e0d\u7b49\u6216\u4e00\u8fb9\u6ca1\u6709\u6216\u4e0d\u662f\u5bf9\u79f0\u4e8c\u53c9\u6811\u7684\u60c5\u51b5\u4e0b\uff0c\u8981\u4e24\u8fb9\u5206\u522b\u641c\n        if(a[x].l!=-1)//\u5de6\u8fb9\u6709\u503c\u641c\u5de6\u8fb9\n            dfs(a[x].l);\n        tot=3;\n        if(a[x].r!=-1)//\u53f3\u8fb9\u6709\u503c\u641c\u53f3\u8fb9\n            dfs(a[x].r);\n    }\n    tot=3;\n}\n/*\n\u6b64\u5904\u7684inline\u53ef\u4ee5\u51cf\u5c11\u51fd\u6570\u8c03\u7528\u7684\u65f6\u95f4\n*/\n```\ntot=3\u662f\u56e0\u4e3a\u5982\u679c\u80fd\u8fdbcheck\u7684\u8bdd\u5c31\u81f3\u5c11\u6709\u4e09\u4e2a\u3002\n\u5176\u4e2d\u6839\u4e3a\u4e00\u4e2a\uff0c\u5de6\u53f3\u513f\u5b50\u6709\u4e24\u4e2a\n\u56e0\u4e3a\u5728check\u91cc\u9762\u6ca1\u6253\uff0c\u6240\u4ee5\u5c31\u8fd9\u6837\u4e86\n\u63a5\u4e0b\u6765\u662fcheck\uff1a\n```cpp\n\ninline bool check(int x,int y) {//\u6211\u5224\u65ad\u5f97\u5f88\u590d\u6742\uff0c\u5927\u5bb6\u53ef\u4ee5\u60f3\u60f3\u600e\u4e48\u6539\u8fdb\n    if(x==-1&&y==-1) return 1;\n    else if(a[x].v!=a[y].v){tot=0;return 0;}\n    else if((a[x].l==-1&&a[y].r!=-1)||(a[x].l!=-1&&a[y].r==-1)||(a[x].r==-1&&a[y].l!=-1)||(a[x].r!=-1&&a[y].l==-1)){tot=3;return 0;}\n    else if(a[x].l!=-1&&a[y].r!=-1&&a[x].r!=-1&&a[y].l!=-1&&check(a[x].l,a[y].r)&&check(a[x].r,a[y].l)){tot+=4;return 1;}\n    else if(a[x].l==-1&&a[y].r==-1&&a[x].r!=-1&&a[y].l!=-1&&check(a[x].r,a[y].l)){tot+=2;return 1;}\n    else if(a[x].r==-1&&a[y].l==-1&&a[x].l!=-1&&a[y].r!=-1&&check(a[x].l,a[y].r)){tot+=2;return 1;}\n    else if(a[x].l==-1&&a[x].r==-1&&a[y].l==-1&&a[y].r==-1)return 1;\n    return check(a[x].l,a[y].r)&&check(a[x].r,a[y].l);\n}\n/*\n\u7b2c\u4e00\u4e2aif\u662f\u5224\u65ad\u5982\u679c\u6ca1\u6709\u513f\u5b50\u5c31return\n\u7b2c\u4e00\u4e2aelse if\u662f\u5224\u65ad\u4e24\u8fb9\u6743\u503c\u4e0d\u76f8\u7b49\u5c31\u4e0d\u6210\u7acb\n\u7b2c\u4e8c\u4e2aelse if\u662f\u5224\u65ad\u513f\u5b50\u5bf9\u4e0d\u5bf9\u79f0\uff0c\u4e0d\u5bf9\u79f0\u5c31\u4e0d\u6210\u7acb\n\u7b2c\u4e09\u4e2aelse if\u662f\u5224\u65ad\u4e24\u4e2a\u70b9\u90fd\u6709\u513f\u5b50\u4e14\u513f\u5b50\u5bf9\u79f0\uff0c\u8981\u52a04\u4e2a\u70b9\n\u7b2c\u56db\u4e2aelse if\u662f\u5224\u65adx\u7684\u5de6\u513f\u5b50\u548cy\u7684\u53f3\u513f\u5b50\u5bf9\u4e0d\u5bf9\u79f0\uff0c\u8981\u52a02\u4e2a\u70b9\n\u7b2c\u4e94\u4e2aelse if\u662f\u5224\u65adx\u7684\u53f3\u513f\u5b50\u548cy\u7684\u5de6\u513f\u5b50\u5bf9\u4e0d\u5bf9\u79f0\uff0c\u8981\u52a02\u4e2a\u70b9\n\u6700\u540e\u4e00\u4e2aelse if\u662f\u5224\u65ad\u5982\u679c\u4e24\u4e2a\u70b9\u90fd\u6ca1\u6709\u513f\u5b50\uff0c\u6811\u4e5f\u662f\u6210\u7acb\u7684\n\u6700\u540e\u5c31\u662f\u5224\u65ad\n*/\n```\n\u662f\u4e0d\u662f\u8d85\u590d\u6742\u3002\u3002\u3002\u3002\u3002\u3002\n\u4e0b\u9762\u662f\u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<cstdio>\ninline void sc(int &x) {\n    x=0;int f=1;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n    while(s>='0'&&s<='9'){x=x*10+s-48;s=getchar();}\n    x*=f;\n}\ninline void pr(int x) {\n    if(x<0)putchar('-'),x=-x;\n    if(x>9)pr(x/10);\n    putchar(x%10+48);\n}\ninline int max(int x,int y) {\n    return x>y?x:y;\n}\nstruct node {\n    int l,r,v;\n}a[1000005];\nint n,k,ans=1,tot=3;\ninline bool check(int x,int y) {\n    if(x==-1&&y==-1) return 1;\n    else if(a[x].v!=a[y].v){tot=0;return 0;}\n    else if((a[x].l==-1&&a[y].r!=-1)||(a[x].l!=-1&&a[y].r==-1)||(a[x].r==-1&&a[y].l!=-1)||(a[x].r!=-1&&a[y].l==-1)){tot=3;return 0;}\n    else if(a[x].l!=-1&&a[y].r!=-1&&a[x].r!=-1&&a[y].l!=-1&&check(a[x].l,a[y].r)&&check(a[x].r,a[y].l)){tot+=4;return 1;}\n    else if(a[x].l==-1&&a[y].r==-1&&a[x].r!=-1&&a[y].l!=-1&&check(a[x].r,a[y].l)){tot+=2;return 1;}\n    else if(a[x].r==-1&&a[y].l==-1&&a[x].l!=-1&&a[y].r!=-1&&check(a[x].l,a[y].r)){tot+=2;return 1;}\n    else if(a[x].l==-1&&a[x].r==-1&&a[y].l==-1&&a[y].r==-1)return 1;\n    return check(a[x].l,a[y].r)&&check(a[x].r,a[y].l);\n}\ninline void dfs(int x) {\n    tot=3;\n    if(a[x].l==-1&&a[x].r==-1)\n        ans=max(ans,1),tot=3;\n    else if(a[x].l!=-1&&a[x].r!=-1)\n        if(check(a[x].l,a[x].r))\n            ans=max(ans,tot),tot=3;\n    if(a[a[x].l].v!=a[a[x].r].v||a[x].l==-1||a[x].r==-1||!check(a[x].l,a[x].r)) {\n        if(a[x].l!=-1)\n            dfs(a[x].l);\n        tot=3;\n        if(a[x].r!=-1)\n            dfs(a[x].r);\n    }\n    tot=3;\n}\nint main() {\n    sc(n);\n    for(int i=1;i<=n;i++)\n        sc(a[i].v);\n    for(int i=1;i<=n;i++)\n        sc(a[i].l),sc(a[i].r);\n    dfs(1);\n    pr(ans);\n}\n```\n\u6700\u540e\u4e00\u4e2a\u70b9569ms",
        "postTime": 1542270752,
        "uid": 104822,
        "name": "\u4e0d\u601d\u8fdb\u53d6\u601d\u4f60",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5018 \u3010\u5bf9\u79f0\u4e8c\u53c9\u6811\u3011"
    },
    {
        "content": "\u5047\u8bbe\u9898\u4e2d\u8981\u6c42\u7684\u4e0d\u662f\u5bf9\u79f0\u800c\u662f\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u5b8c\u5168\u76f8\u540c\n\n\u6211\u4eec\u77e5\u9053\uff0c\u4e00\u68f5\u5b50\u6811\u7684dfs\u5e8f\u5728\u6574\u9897\u6811\u7684dfs\u5e8f\u4e2d\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u6309\u7167dfs\u524d\u5e8f\u904d\u5386\u9884\u5904\u7406\u51fadfs\u5e8f\uff08\u4ee5\u6743\u503c\u4e3a\u5143\u7d20\uff09\uff0c\u786e\u5b9a\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5728\u603bdfs\u5e8f\u4e2d\u7684\u4f4d\u7f6e\uff0c\u90a3\u5c31\u628a\u95ee\u9898\u8f6c\u6362\u6210\u4e86\u4e24\u4e2a\u5e8f\u5217\u662f\u5426\u76f8\u540c\u7684\u95ee\u9898\uff1a\u6bcf\u4e2a\u70b9\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u5206\u522b\u770b\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u5224\u65ad\u662f\u5426\u76f8\u7b49\n\n\u4f46\u662f\u7a0d\u5fae\u4e00\u60f3\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u7b97\u6cd5\u5b58\u5728\u95ee\u9898\n\n\u5373\u4fbfDfs\u5e8f\u76f8\u540c\uff0c\u8fd9\u4e24\u4e2a\u5b50\u6811\u6709\u53ef\u80fd\u4ec5\u4ec5\u53ea\u662f\u524d\u5e8f\u904d\u5386\u76f8\u540c\uff0c\u4f46\u7ed3\u6784\u5e76\u4e0d\u76f8\u540c\n\n\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u8003\u8651\u628a\u6240\u6709\u7f3a\u5c11\u5de6\u6216\u53f3\u513f\u5b50\uff08\u5305\u62ec\u53f6\u5b50\u8282\u70b9\uff09\u7684\u8282\u70b9\u90fd\u6dfb\u4e0a\u6743\u503c\u4e3a-1\u7684\u70b9\u4f5c\u4e3a\u5b83\u4eec\u7684\u513f\u5b50\n\n\u6837\u4f8b2\u88ab\u6539\u9020\u5982\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/43434.png)\n\n\u6539\u9020\u5b8c\u4ee5\u540e\u518d\u505a\u524d\u5e8f\u904d\u5386\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5bf9\u4e8e\u76f8\u540c\u7684dfs\u5e8f\u7684\u4e24\u68f5\u5b50\u6811\u4e0d\u53ea\u662f\u6743\u503c\u76f8\u540c\uff0c\u800c\u4e14\u7ed3\u6784\u76f8\u540c\n\n\uff08\u8fd9\u4e2a\u7ed3\u8bba\u662f\u6211\u81ea\u5df1YY\u51fa\u6765\u7684\uff0c\u81ea\u5df1\u4e5f\u4e0d\u4f1a\u8bc1\uff0c\u5982\u679c\u6709Hack\u6570\u636e\u53ef\u4ee5\u5728\u6d1b\u8c37\u91cc\u79c1\u4fe1\u6211\uff09\n\n\u5224\u65ad\u4e24\u4e2a\u5e8f\u5217\u662f\u5426\u76f8\u7b49\uff0c\u54c8\u5e0c\u5b9e\u73b0\n\n\u81f3\u4e8e\u5bf9\u79f0\uff0c\u6211\u4eec\u53ea\u8981\u5148\u505a\u4e00\u904d\u201c\u5de6\u5b50\u6811->\u6839->\u53f3\u5b50\u6811\u201d\u7684\u524d\u5e8f\u904d\u5386\uff0c\u518d\u505a\u4e00\u904d\u201c\u53f3\u5b50\u6811->\u6839->\u5de6\u5b50\u6811\u201d\uff0c\u5904\u7406\u51fa\u4e24\u4e2a\u5e8f\u5217\uff0c\u5224\u65ad\u5de6\u5b50\u6811\u7684\u7b2c\u4e00\u4e2a\u5e8f\u5217\u548c\u53f3\u5b50\u6570\u7684\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u662f\u5426\u76f8\u540c\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n# include <cstdio>\n# define N 1000010\nint v[N],l[N],r[N],dfn[N<<1],a[N],b[N],m,siz[N];\nunsigned long long sum[N<<1],p1003[N<<1],z[N],f[N];//\u7528unsigned long long\u81ea\u52a8\u53d6\u6a21\nint dmax(int x,int y) {return x>y?x:y;}\nvoid dfs1(int x) {//\u5de6\u6839\u53f3\n    int i;\n    if(x==-1) {\n        dfn[++m]=0;\n        return;\n    }\n    siz[x]=1;//\u5b50\u6811\u5927\u5c0f\n    dfn[++m]=v[x]+1;//\u56e0\u4e3a\u6709-1\u4e0d\u597d\u5904\u7406\uff0c\u56e0\u6b64\u5168\u90e8+1\n    a[l[x]]=m+1;//dfs\u5e8f\u8d77\u70b9\n    dfs1(l[x]);\n    b[l[x]]=m;//dfs\u5e8f\u7ec8\u70b9\n    if(l[x]) siz[x]+=siz[l[x]];\n    a[r[x]]=m+1;\n    dfs1(r[x]);\n    b[r[x]]=m;\n    if(r[x]) siz[x]+=siz[r[x]];\n    return;\n}\nvoid dfs2(int x) {//\u53f3\u6839\u5de6\n    int i;\n    if(x==-1) {\n        dfn[++m]=0;\n        return;\n    }\n    dfn[++m]=v[x]+1;\n    a[r[x]]=m+1;\n    dfs2(r[x]);\n    b[r[x]]=m;\n    a[l[x]]=m+1;\n    dfs2(l[x]);\n    b[l[x]]=m;\n    return;\n}\nint main() {\n    int n,i,ans=1;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) {\n        scanf(\"%d\",v+i);\n    }\n    for(i=1;i<=n;i++) {\n        scanf(\"%d%d\",l+i,r+i);\n    }\n    m=0;\n    dfs1(1);\n    a[1]=1;b[1]=m;\n    p1003[0]=1;\n    for(i=1;i<=m;i++) {\n        p1003[i]=p1003[i-1]*1003;\n        sum[i]=sum[i-1]*1003+dfn[i];\n    }\n    for(i=1;i<=n;i++) {\n        z[i]=sum[b[i]]-sum[a[i]-1]*p1003[b[i]-a[i]+1];\n    }\n    m=0;\n    dfs2(1);\n    a[1]=1;b[1]=m;\n    for(i=1;i<=m;i++) {\n        sum[i]=sum[i-1]*1003+dfn[i];\n    }\n    for(i=1;i<=n;i++) {\n        f[i]=sum[b[i]]-sum[a[i]-1]*p1003[b[i]-a[i]+1];\n    }\n    for(i=1;i<=n;i++) {//\u6bd4\u5bf9\uff0c\u627e\u6700\u5927\u7684\u7b54\u6848\n        if(z[l[i]]==f[r[i]]) {\n            ans=dmax(ans,siz[i]);\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1542115093,
        "uid": 29814,
        "name": "L_Star_Plus",
        "ccfLevel": 8,
        "title": "NOIP2018\u666e\u53caT4\u9898\u89e3"
    }
]