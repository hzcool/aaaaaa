[
    {
        "content": "\u9898\u89e3\u6570\u76ee\u597d\u50cf\u4e0d\u591a\uff0c\u90a3\u4e48\u5c31\u6765\u5199\u4e00\u7bc7\u9898\u89e3\u5427\uff0c\u987a\u4fbf\u6765\u5165\u95e8\u4e00\u4e0b\u4e0b\u5348\u8981\u5b66\u7684\u7f29\u70b9\n\n\u8fd9\u9053\u9898\u76ee\u548c[[HAOI2006]\u53d7\u6b22\u8fce\u7684\u725b](https://www.luogu.org/problem/P2341)\u5f88\u50cf\uff0c\u6211\u4ec5\u4ec5\u53ea\u662f\u5728\u90a3\u4e2a\u4ee3\u7801\u4e0a\u505a\u4e86\u5c0f\u5c0f\u7684\u4fee\u6539\u5c31\u8fc7\u4e86\n\n\u5982\u679c\u60f3\u8981\u5b66\u4e60tarjan\u7b97\u6cd5\u7684\u57fa\u672c\u601d\u8def\u7684\u8bdd\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u770b[\u8fd9\u7bc7\u6587\u7ae0](https://blog.csdn.net/qq_34374664/article/details/77488976)\uff0c\n\n\u4f46\u662f\u6211\u5728\u4ee3\u7801\u4e2d\u4e5f\u4f1a\u5bf9tarjan\u7684\u57fa\u672c\u601d\u8def\u7a0d\u5fae\u8bb2\u4e00\u8bb2\uff0c\u53ef\u80fd\u6ca1\u90a3\u4e48\u8be6\u7ec6\n\n\u90a3\u6211\u5c31\u76f4\u63a5\u5728\u4ee3\u7801\u4e0a\u89e3\u91ca\u4e86\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint num,head[100010],dfn[100010],low[100010],cnt,vis[100010];\n/*\ndfn[]:\u65f6\u95f4\u6233\uff0c\u8868\u793a\u4ed6\u5728dfs(tarjan)\u4e2d\u662f\u7b2c\u51e0\u4e2a\u88ab\u641c\u5230\u7684\nlow[]:\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6240\u6709\u8d77\u59cb\u4e8e\u8be5\u5b50\u6811\u4e2d\u7684\u5b50\u5b59\u8282\u70b9\u7684\u8fb9\u6240\u8fde\u5230\u7684\u70b9\u4e2ddfn\u7684\u6700\u5c0f\u503c\nvis[]:\u8868\u793a\u8be5\u8282\u70b9\u662f\u5426\u5165\u6808 \n*/\nint sum[100010],bj[100010],tot,qwq[100010];\n/*\nsum[]:\u8be5\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u6709\u591a\u5c11\u4e2a\u6570(\u672c\u9898\u7528\u4e0d\u4e0a\uff0c\u4f46\u53d7\u6b22\u8fce\u7684\u725b\u4f1a\u7528\u5230) \nbj[]:\u8868\u793a\u8be5\u8282\u70b9\u5904\u4e8e\u54ea\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf \nqwq[]:\u8868\u793a\u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u662f\u5426\u88ab\u5176\u4ed6\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u6240\u8fde\u8d77\u6765 \n*/\nstruct Edge{\n\tint to,next;\n}edge[500010];\ninline void add(int from,int to){\n\tnum++;\n\tedge[num].to=to;\n\tedge[num].next=head[from];\n\thead[from]=num;\n}\n//\u4ee5\u4e0a\u4e3a\u524d\u5411\u661f\u5b58\u8fb9 \nstack<int>s;\t//\u5efa\u6808(\u4e5f\u53ef\u624b\u5199) \ninline void tarjan(int x){\n\tcnt++;\n\tdfn[x]=low[x]=cnt;\n\ts.push(x);\n\tvis[x]=1;\n\t//\u6240\u6709\u70b9\u88ab\u904d\u5386\u5230\u65f6\u7684\u521d\u59cb\u5316 \n\tfor(register int i=head[x];i;i=edge[i].next){\n\t\tint y=edge[i].to;\n\t\tif(dfn[y]==0){\t//\u5982\u679c\u8be5\u8282\u70b9\u672a\u88ab\u8bbf\u95ee\u8fc7 \n\t\t\ttarjan(y);\t//\u5219\u5411\u4e0b\u904d\u5386 \n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t\t//y\u4e3ax\u7684\u5b50\u8282\u70b9,\u6240\u4ee5\u53ef\u4ee5\u53d6x\u4e0ey\u4e2dlow\u66f4\u5c0f\u7684\u503c \n\t\t}\n\t\telse if(vis[y]==1){\n\t\t\tlow[x]=min(low[x],dfn[y]);\n\t\t\t//y\u5728\u6808\u4e2d\u56e0\u6b64y\u4e00\u5b9a\u662fx\u7684\u7956\u5148\u8282\u70b9\n\t\t\t//low\u8868\u793a\u7684\u662f\u8d77\u59cb\u4e8e\u8be5\u5b50\u6811\u4e2d\u7684\u5b50\u5b59\u8282\u70b9\u7684\u8fb9\u6240\u8fde\u5230\u7684\u70b9\u4e2ddfn\u7684\u6700\u5c0f\u503c\n\t\t\t//\u6240\u4ee5\u6211\u4eec\u548cy\u6bd4\u8f83\u7684\u662fy\u7684dfn\u503c\uff0c\u800c\u4e0d\u662flow\n\t\t}\n\t}\n\tif(low[x]==dfn[x]){\n//\u5f53\u8be5\u70b9\u7684low\u7b49\u4e8e\u81ea\u5df1\u672c\u8eab\u8bf4\u660e\u81ea\u5df1\u5c31\u662f\u4ee5x\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u80fd\u5230\u8fbe\u7684dfn\u6700\u5c0f\u7684\u8282\u70b9(\u5728\u6574\u68f5\u6811\u4e2d\u80fd\u5230\u8fbe\u7684\u6700\u4e0a\u65b9\u7684\u70b9) \n\t\tint z;\n\t\ttot++;\t//tot\u8868\u793a\u6709\u51e0\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf \n\t\twhile(s.top()!=x){\t//\u628a\u6574\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u51fa\u6808 \n\t\t\tsum[tot]++;\t\n\t\t\tz=s.top();\t//\u53d6\u51fa\u6808\u9876 \n\t\t\tvis[z]=0;\t//\u6807\u5fd7\u5176\u4e0d\u5728\u6808\u4e2d \n\t\t\tbj[z]=tot;\t//\u6807\u5fd7\u5176\u5728\u54ea\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf \n\t\t\ts.pop();\t//\u51fa\u6808 \n\t\t}\n\t\tsum[tot]++;\n\t\tz=s.top();\n\t\tvis[z]=0;\n\t\tbj[z]=tot;\n\t\ts.pop();\n\t}\n\treturn;\n}\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tint x,y;\n\tfor(register int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tif(dfn[i]==0)\n\t\t\ttarjan(i);\n\t}\n\tfor(register int i=1;i<=n;i++){\t\t//\u904d\u5386\u6bcf\u4e00\u6761\u8fb9 \n\t\tfor(register int j=head[i];j;j=edge[j].next){\n\t\t\tint y=edge[j].to;\t\n\t\t\tif(bj[i]!=bj[y]){\n//\u5982\u679c\u6709\u4e24\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u6709\u8fb9\uff0c\u88ab\u8fde\u7684\u90a3\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5c31\u4e0d\u9700\u8981\u518d\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u6269\u6563\u6d88\u606f\u4e86\n//\u53ea\u9700\u8981\u5728\u90a3\u4e2a\u8fde\u5b83\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u6269\u6563\u6d88\u606f\uff0c\u6d88\u606f\u5c31\u4f1a\u6269\u6563\u5230\u5b83\u90a3\u91cc\u6765 \n\t\t\t\tqwq[bj[y]]=1;//\u6807\u8bb0\u6b64\u5f3a\u8fde\u901a\u5206\u91cf\u4e0d\u9700\u8981\u6269\u6563\u6d88\u606f \n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(register int i=1;i<=tot;i++){\n\t\tif(qwq[i]==0){\n\t\t\tans++;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1565232394,
        "uid": 99247,
        "name": "\u5514\u554a\u5514",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "\u9996\u5148\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u8bf4\u6709\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u6211\u4eec\u5728\u89c1\u56fe\u7684\u65f6\u5019\u8981\u5148\u53bb\u6389\u81ea\u73af\uff0c\u5c31\u662f\u5efa\u8fb9\u7684\u65f6\u5019\u5224\u4e00\u4e0b\u8d77\u70b9\u548c\u7ec8\u70b9\u662f\u5426\u76f8\u540c\uff0c\u4e0d\u540c\u624d\u5efa\uff1b\n\n\u7136\u540e\u5c31\u662f\u7528Trajan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u7f29\u70b9\uff0c\u5176\u5b9e\u5e76\u4e0d\u9700\u8981\u91cd\u65b0\u6784\u56fe\uff0c\u53ea\u9700\u8981\u628a\u6bcf\u4e2a\u5f3a\u8fde\u901a\u7684\u5165\u5ea6\u7edf\u8ba1\u51fa\u6765\uff0c\u7b54\u6848\u5c31\u662f\u5165\u5ea6\u4e3a0\u7684\u4e2a\u6570\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iomanip>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<ctime>\n#include<cctype>\nusing namespace std;\nconst int N = 100005;\nconst int M = 500005;\nint x,y,n,m,pointnum,tot,Ind,top,ans;\nint first[N],nxt[M],to[M];\nint low[N],dfn[N],stack[N];\nint belong[N],ru[N];\nbool in[N];\ninline int Readint(){\n    int i=0;char c;\n    for(c=getchar();!isdigit(c);c=getchar());\n    for(;isdigit(c);c=getchar()) i=(i<<1)+(i<<3)+c-'0';\n    return i;\n}\n\ninline void add(int x,int y){\n    nxt[++tot]=first[x];\n    first[x]=tot;\n    to[tot]=y;\n}\n\ninline void dfs(int x){\n    low[x]=dfn[x]=++Ind;\n    stack[++top]=x;in[x]=true;\n    for(int i=first[x];i;i=nxt[i]){\n        int v=to[i];\n        if(!dfn[v]){\n            dfs(v);\n            low[x]=min(low[x],low[v]);\n        }\n        else if(in[v]) low[x]=min(low[x],dfn[v]);\n    }\n    if(low[x]==dfn[x]){\n        ++pointnum;\n        int j=-1;\n        while(j!=x){\n            j=stack[top--];\n            belong[j]=pointnum;\n            in[j]=false;\n        }\n    }\n}\n\nint main(){\n//    freopen(\"lx.in\",\"r\",stdin);\n    \n    n=Readint(),m=Readint();\n    for(int i=1;i<=m;i++){\n        x=Readint(),y=Readint();\n        if(x!=y) add(x,y);\n    }\n    for(int i=1;i<=n;i++) if(!dfn[i]) dfs(i);\n    for(int i=1;i<=n;i++)\n      for(int e=first[i];e;e=nxt[e])\n        if(belong[i]!=belong[to[e]])\n          ru[belong[to[e]]]++;\n    for(int i=1;i<=pointnum;i++)\n      if(!ru[i]) ans++;\n    cout<<ans<<endl;\n    return 0;\n}\n```cpp",
        "postTime": 1509161280,
        "uid": 42486,
        "name": "Amessal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "##### \u770b\u89c1\u5927\u4f6c\u4eec\u5168\u5199\u7684tarjan\n\n## \u6211\u6765\u8865\u5145\u4e00\u4e0bkosaraju\u7684\u505a\u6cd5\u5427\uff01\n\n\n------------\uff08\u8fdb\u5165\u6b63\u9898\uff09\n\n\n _\u5176\u5b9ekosaraju\u7684\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u90fd\u8981\u8d39\u7684\u591a\u4e00\u4e9b_ \n\n##### ~~\u4f46\u672c\u849f\u84bb\u5b66oi\u7684\u65f6\u5019\u5c31\u662f\u5b66\u7684kosaraju\uff0c\u6240\u4ee5\u5c31\u4e00\u76f4\u7528\u8fd9\u4e2a\u5566~~\n\n\u672c\u9898\u91cd\u70b9\uff1a\n\n### 1. \u6709\u81ea\u73af\uff0c~~tarjan\u597d\u50cf\u4e0d\u80fd\u8dd1\u81ea\u73af~~\uff1f\u4f46\u6211\u4fdd\u8bc1 _kosaraju\u53ef\u4ee5\u8dd1\u81ea\u73af_ \uff01\uff01\uff01\n2. \u7f29\u70b9\uff0c\u7136\u540e\u627e\u5165\u5ea6\u4e3a0\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u5c31\u597d\u4e86\u3002\n\n\u5bf9\u6b64\uff0c\u6211\u4eec\u9700\u8981\u7528mp1\u548cmp2\u6570\u7ec4\u8bb0\u5f55\u6bcf\u6761\u8fb9\u8fde\u63a5\u7684\u70b9\n\n\u6700\u540e\u904d\u5386\u4e00\u904d\u6240\u6709\u7684\u8fb9\n\n### \u5047\u5982\u8fd9\u4e24\u4e2a\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\uff0c\u5165\u5ea6++\n\u4e0a\u4ee3\u7801\u5566\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e5+5;\nconst int maxx=5e5+5;\nvector<int>g[maxn],g2[maxn],st;\nbool vis[maxn];\nint k,cmp[maxn],mp1[maxx],mp2[maxx],cnt,du[maxn];\nint n,m;\nvoid dfs(int x){\n\tvis[x]=1;\n\tfor(int i=0;i<g[x].size();++i){\n\t\tint s=g[x][i];\n\t\tif(!vis[s]){\n\t\t\tdfs(s);\n\t\t}\n\t}\n\tst.push_back(x);\n}\nvoid dfs2(int x,int k){\n\tcmp[x]=k;\n\tvis[x]=1;\n\tfor(int i=0;i<g2[x].size();++i){\n\t\tint s=g2[x][i];\n\t\tif(!vis[s]){\n\t\t\tdfs2(s,k);\n\t\t}\n\t}\n}\nvoid init(){\n\tfor(int i=1;i<=n;i++){\n\t\tif(!vis[i]) dfs(i);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tvis[i]=0;\n\t}\n\tfor(int i=st.size()-1;i>=0;i--){\n\t\tif(!vis[st[i]]){\n\t\t\tk++;\n\t\t\tdfs2(st[i],k);\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;++i){\n\t\tint p1,p2;\n\t\tscanf(\"%d%d\",&p1,&p2);\n\t\tcnt++;\n\t\tmp1[cnt]=p1;mp2[cnt]=p2;\n\t\tg[p1].push_back(p2);\n\t\tg2[p2].push_back(p1);\n\t}\n\tinit();\n\tfor(int i=1;i<=cnt;i++){\n\t\tint p1=mp1[i],p2=mp2[i];\n\t\tif(cmp[p1]!=cmp[p2]){\n\t\t//\tg[cmp[p1]].push_back(cmp[p2]);\n\t\t\tdu[cmp[p2]]++;\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=k;i++){\n\t\tif(!du[i]) ans++;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1568815809,
        "uid": 231192,
        "name": "\u732a\u5c0f\u5c41",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "\u7f29\u70b9\u7684\u6a21\u677f\u9898\n\n1.scc\u6c42\u5f3a\u8fde\u901a\u5206\u91cf \uff081 dfs\u6c42\u51fa\u4e00\u4e2a\u5e8f\u5217 2 \u9006\u5e8f\u5728\u53cd\u5411\u56fe\u4e0a\u641c\uff0c\u53ef\u5230\u7684\u70b9\u4e0e\u5176\u57281\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e0a\uff09\n\n2.\u7f29\u70b9\uff0c\u6784\u9020\u53cd\u56fe\uff0c\u540c\u65f6\u8bb0\u5f55\u70b9\u7684\u5165\u5ea6\n\n3.\u7edf\u8ba1\u5165\u5ea6\u4e3a0\u7684\u70b9\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#define rep(i,a,b) for (int i=(a); i<=(b); i++)\n#define MAXN 100005\n#define MAXM 500005\nusing namespace std;\nint n,m;\nint head1[MAXN],head2[MAXN];\nstruct Edge\n{\n    int to,nxt;\n} edge1[MAXM],edge2[MAXM];\nint num1,num2;\nint vs[MAXN],size;\nint cmp[MAXN],cnt;\nbool used[MAXN];\nvector<int> G[MAXN]; //\u7f29\u70b9\u540e\u7684\u56fe \nint in[MAXN]; //\u7edf\u8ba1\u5165\u5ea6 \nvoid add(Edge edge[], int head[], int &num, int u, int v) //555555555555555555555555555555\n{\n    edge[++num].to=v;\n    edge[num].nxt=head[u];\n    head[u]=num;\n}\nvoid dfs(int u)\n{\n    used[u]=1;\n    for (int i=head1[u]; i!=0; i=edge1[i].nxt)\n        if (!used[edge1[i].to]) dfs(edge1[i].to);\n    vs[++size]=u;\n}\nvoid rdfs(int u)\n{\n    used[u]=1; cmp[u]=cnt;\n    for (int i=head2[u]; i!=0; i=edge2[i].nxt) {\n        if (!used[edge2[i].to]) rdfs(edge2[i].to);  //5555555555555555555555555555555\n    }\n}\nvoid scc()\n{\n    memset(used,0,sizeof(used));\n    rep(i,1,n) if (!used[i]) dfs(i);\n    memset(used,0,sizeof(used));\n    for (int i=size; i>0; i--) if (!used[vs[i]])\n        {cnt++; rdfs(vs[i]);}\n}\nvoid Spoint()\n{\n    rep(i,1,n) \n        for (int j=head1[i]; j!=0; j=edge1[j].nxt)\n            if (cmp[edge1[j].to]!=cmp[i]) {\n                G[cmp[i]].push_back(cmp[edge1[j].to]);\n                in[cmp[edge1[j].to]]++;\n            }\n}\nint in0()\n{\n    int res=0;\n    rep(i,1,cnt) if (in[i]==0) res++;\n    return res;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    int u,v;\n    rep(i,1,m) {\n        scanf(\"%d%d\",&u,&v);\n        add(edge1,head1,num1,u,v);\n        add(edge2,head2,num2,v,u); //reverse.\n    }\n    scc();\n    Spoint();\n    printf(\"%d\",in0());\n    return 0;\n}\n```",
        "postTime": 1485314482,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5176\u4ed6\u5927\u4f6c\u5199Tarjan\u90fd\u7528\u524d\u5411\u661f\uff0c\u51e0\u4e4e\u6ca1\u6709\u7528vector\u7684\uff0c\u90a3\u4e48\u6211\u6765\u62ef\u6551\u4e00\u4e0b\u5927\u5bb6\u3002\n\n\u5148\u6765\u8bb2\u89e3\u4e00\u4e0b\u5f3a\u8fde\u901a\u5206\u91cf\n\n> \u6709\u5411\u56fe\u5f3a\u8fde\u901a\u5206\u91cf\uff1a\u5728\u6709\u5411\u56feG\u4e2d\uff0c\u5982\u679c\u4e24\u4e2a\u9876\u70b9vi,vj\u95f4\uff08vi>vj\uff09\u6709\u4e00\u6761\u4ecevi\u5230vj\u7684\u6709\u5411\u8def\u5f84\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u6761\u4ecevj\u5230vi\u7684\u6709\u5411\u8def\u5f84\uff0c\u5219\u79f0\u4e24\u4e2a\u9876\u70b9\u5f3a\u8fde\u901a(strongly connected)\u3002\u5982\u679c\u6709\u5411\u56feG\u7684\u6bcf\u4e24\u4e2a\u9876\u70b9\u90fd\u5f3a\u8fde\u901a\uff0c\u79f0G\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\u3002\u6709\u5411\u56fe\u7684\u6781\u5927\u5f3a\u8fde\u901a\u5b50\u56fe\uff0c\u79f0\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf(strongly connected components)\u3002\u2014\u2014\u767e\u5ea6\u767e\u79d1\n> \n\n\nTarjan\u662f\u57fa\u4e8e\u8fea\u6cd5\u5e08\uff08DFS\uff09\u7684\u4e00\u79cd\u7b97\u6cd5\uff0c\u53ef\u4ee5\u8bf4\u662f\u4e00\u79cd\u6d41\uff08du\uff09\u6279\uff08liu\uff09\u7684\u64cd\u4f5c\uff0c\u672c\u849f\u84bb\u82e6\u54c8\u54c8\u7684\u5b66\u4e86\u597d\u51e0\u5929\u624d\u5b66\u4f1a\u5f3a\u8fde\u901a\u5206\u91cf\u548c\u7f29\u70b9\uff1b\n\n\n\u6b65\u5165\u6b63\u8f68\uff1a\n\n## \u56fe\u4e2d\uff5b6\uff5d\u662f\u7b2c\u4e00\u4e2a\u88ab\u53d1\u73b0\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5176\u6b21\u662f\uff5b5\uff5d\uff0c\u6700\u540e\u88ab\u53d1\u73b0\u7684\u662f\uff5b3\uff0c4\uff0c1\uff0c2\uff5d*\uff08\u987a\u5e8f\u65e0\u6240\u8c13\uff09*\n\n![\u56fe\u4e11\u52ff\u55b7](https://img-blog.csdnimg.cn/20200226074807157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Rmc2RzZGFzYQ==,size_16,color_FFFFFF,t_70)\n\nTarjan\u7b97\u6cd5\u662f\u89e3\u51b3\u5f3a\u8fde\u901a\u5206\u91cf\u548c\u7f29\u70b9\u95ee\u9898\u7684\u4e00\u79cd\u6bd4\u8f83\u5e38\u89c1\u7684\u65b9\u6cd5\n\n\u63a5\u4e0b\u6765\u5f00\u59cb\u4e00\u6b65\u4e00\u6b65\u7684\n\n\u9996\u5148\u7ed9\u4f60\u4e00\u4e2a\u56fe\uff08\u6c42\u5176\u4e2d\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff09\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190823091129601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1ByZWRpY3Rpb25fXw==,size_16,color_FFFFFF,t_70)\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u4ece\u70b91\u5f00\u59cb\u904d\u5386\uff0c\u5e76\u4e14\u5c06\u8bbf\u95ee\u7684\u70b9\u538b\u5165\u6808\u4e2d\n\n\n\u5728\u8fdb\u884c\u64cd\u4f5c\u4e4b\u524d\uff0c\u6211\u4eec\u8981\u660e\u786eTarjan\u4e2d\u7684\u4e24\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u6570\u7ec4\uff1aDFN\u548cLOW\uff1b\n\nDFN[x]\uff1a\u8868\u793a\u8fd9\u4e2a\u70b9x\u51e0\u6b21\u88ab\u904d\u5386\u5230\uff1b\n\nLOW[x]\uff1a\u8868\u793a\u70b9x\u6216\u70b9x\u7684\u5b50\u6811\u80fd\u591f\u8ffd\u6eaf\u5230\u7684\u6700\u65e9\u7684\u6808\u4e2d\u8282\u70b9\u7684\u6b21\u5e8f\u53f7\uff1b\n\n\u5373LOW[x]=min{LOW[x]\uff0cLOW[next]}\uff1b\n\n\u5176\u4e2dnext\u4e3ax\u7684\u5b50\u8282\u70b9\uff1b\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u4e00\u6b65\u4e00\u6b65\u7684\u627e\uff1b\n\n### \u7b2c\u4e00\u904d\u4ece1\u76f4\u63a5\u4e00\u76f4\u904d\u5386\u52306\uff0c\u53e6\u8bbf\u95ee\u5230\u7684\u70b9\u7684\u521d\u59cblow\u548cdfn\u90fd\u4e3anum++;num\u4e3a\u8ba1\u6570\u5668\uff1b\n\n\u4f46\u5f53\u6211\u4eec\u904d\u5386\u52306\u662f\u53d1\u73b06\u6ca1\u6709\u5b50\u8282\u70b9\u4e86\uff0c\u6240\u4ee5low[6]=dfn[6]=4;\u53d1\u73b0\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff5b6\uff5d\uff0c6\u51fa\u6808\uff1b\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190823091319822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1ByZWRpY3Rpb25fXw==,size_16,color_FFFFFF,t_70)\n\n\u9000\u56de\u52305\uff0clow[5]=min(low[5],low[6]);\n\nlow[6]=4;\u800clow[5]=dfn[5]=3;\n\n\u6240\u4ee5low[5]=3\uff1b\n\nlow[5]=dfn[5];\u6240\u4ee55\u4e5f\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff1b5\u51fa\u6808\uff1b\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190823091329523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1ByZWRpY3Rpb25fXw==,size_16,color_FFFFFF,t_70)\n\n\u8fd4\u56de3\u53d1\u73b03\u6709\u5b50\u8282\u70b94\uff0c\u641c\u7d224\uff0c\u5e76\u4e144\u5165\u6808\uff1b\u53d1\u73b04\u4e5f\u6709\u5b50\u8282\u70b9\uff0c6\u5df2\u7ecf\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf\u4e14\u4e0d\u518d\u6808\u4e2d\uff0c\u8df3\u8fc7\uff1b\n\n\u904d\u53861\uff0c\u53d1\u73b0\u4e00\u5728\u6808\u4e2d\u4e14\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\uff0c\u90a3\u4e484\u503c\u5f97\u88ab\u53d1\u73b0\uff1b\n\n\u6240\u4ee5low[4]=min(low[4],dfn[1]);\u6240\u4ee5low[4]=1\uff1b\n\n4\u904d\u5386\u5b8c\uff0c\u53c8\u56e0\u4e3adfn[4]!=low[4],\u6240\u4ee54\u4e0d\u9000\u7ad9\uff1b\u56de\u52303\uff0clow[3]=min(low[3],low[4]);\n\n\u6240\u4ee5low[3]=1;3\u8bbf\u95ee\u5b8c\uff0c\u53c8\u56e0\u4e3adfn[3]!=low[3],\u6240\u4ee53\u4e0d\u9000\u7ad9\uff1b\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190823091337456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1ByZWRpY3Rpb25fXw==,size_16,color_FFFFFF,t_70)\n\n\u56de\u52301\uff0c\u53d1\u73b01\u8fd8\u6709\u5b50\u8282\u70b92\uff0c2\u5165\u6808\uff1b\u53d1\u73b02\u7684\u5b50\u8282\u70b94\u5df2\u7ecf\u88ab\u8bbf\u95ee\u4e14\u5728\u6808\u4e2d\uff0c\u6240\u4ee5low[2]=min(dfn[4],low[2]);\n\n\u6240\u4ee5low[2]=5;\u8bbf\u95ee\u5b8c2\uff0c\u56de\u5230\u4e00\uff0c\u53d1\u73b0low[1]=dfn[1];\u6240\u4ee5\u5c06\u6808\u4e2d\u7684\u6240\u6709\u70b9\u51fa\u6808\uff0c\u5e76\u4e14\u8fd9\u4e9b\u70b9\u4e3a\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff1b\n\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190823091346286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1ByZWRpY3Rpb25fXw==,size_16,color_FFFFFF,t_70)\n\n\u81f3\u6b64\uff0c\u6240\u6709\u70b9\u5df2\u7ecf\u90fd\u88ab\u8bbf\u95ee\uff0c\u7b97\u6cd5\u7ed3\u675f\u3002\u65f6\u95f4\u590d\u6742\u5ea6O\uff08N+M\uff09\n\n\u8fd9\u9053\u9898\u8fd8\u5b66\u8981\u8fdb\u884c\u7f29\u70b9\uff0c\u4e0b\u9762\u662f\u7f29\u70b9\u7684\u6838\u5fc3\u4ee3\u7801\uff08\u6211\u81ea\u5df1\u8ba4\u4e3a\u7684\uff09\uff1a\n\n```\nfor(int i=1;i<=a;i++)\n\t{\n\t\tfor(int j=0;j<map[i].size();j++)\n\t\t{\n\t\t\tint p=map[i][j];\n\t\t\tif(bl[i]!=bl[p])\n\t\t\t{\n\t\t\t\tru[bl[p]]++;\n\t\t\t}\n\t\t}\n```\n\n\u90a3\u4e48\u4e00\u5f20\u56fe\u7f29\u73a9\u70b9\u4e4b\u540e\u4f1a\u53d8\u6210\u4e00\u5f20\u65e0\u73af\u56fe\uff0c\u8fd9\u9053\u9898\u8ba9\u6211\u4eec\u6c42\u53d1\u51e0\u6b21\u6d88\u606f\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5728\u4e00\u5f20\u8fde\u901a\u7684\u56fe\u4e2d\u53d1\u4e00\u6b21\uff0c\u90a3\u4e48\u6d88\u606f\u5c31\u4f1a\u4e00\u76f4\u4f20\u5230\u6700\u5e95\u7aef\u3002\n\n\u90a3\u4e48\u6211\u4eec\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u6709\u51e0\u5f20\u56fe\uff0c\u53ea\u9700\u8981\u627e\u6709\u51e0\u4e2a\u70b9\u7684\u5165\u5ea6\u4e3a\u96f6\u5373\u53ef\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<string.h>\n#include<stack>\n#define Size 500005\nusing namespace std;\ninline int read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-')\n        f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    return x*f;\n}\nstack<int> atack;\nvector<int> map[Size]; \nint a,b,c,d,tot,num=0,low[Size],dfn[Size],numb=0,bl[Size],ru[Size],nums[Size];\nbool inst[Size];\nvoid tarjan(int now)\n{\n\tdfn[now]=low[now]=++num;\n\tatack.push(now);\n\tinst[now]=true;\n\tfor(int i=0;i<map[now].size();i++)\n\t{\n\t\tint next=map[now][i];\n\t\tif(dfn[next]==0)\n\t\t{\n\t\t\ttarjan(next);\n\t\t    low[now]=min(low[now],low[next]);\n\t\t}else if(inst[next]==1)\n\t    {\n\t\tlow[now]=min(low[now],dfn[next]);\n\t    }\n\t}\n\tif(dfn[now]==low[now])\n\t{\n\t\tnumb++;\n\t\tint q;\n\t\tdo\n\t\t{\n\t\t\tq=atack.top();\n\t\t\tinst[q]=0;\n\t\t\tatack.pop();\n\t\t\tbl[q]=numb;//vis\n\t\t\tnums[numb]++;//sum\n\t\t}while(q!=now);\n\t}\n}\nint main()\n{\n\ta=read();b=read();\n\tfor(int i=1;i<=b;i++)\n\t{\n\t\tc=read();d=read();\n\t\tmap[c].push_back(d);\n\t}\n\tmemset(dfn,0,sizeof(dfn));\n\tmemset(inst,false,sizeof(inst));\n\tfor(int i=1;i<=a;++i)\n\t{\n\t\tif(dfn[i]==0)\n\t\ttarjan(i);\n\t}\n\tfor(int i=1;i<=a;i++)\n\t{\n\t\tfor(int j=0;j<map[i].size();j++)\n\t\t{\n\t\t\tint p=map[i][j];\n\t\t\tif(bl[i]!=bl[p])\n\t\t\t{\n\t\t\t\tru[bl[p]]++;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=numb;i++)\n\t{\n\t\tif(ru[i]==0)\n\t\ttot++;\n\t}\n\tcout<<tot;\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1583481510,
        "uid": 183473,
        "name": "PrincessYR\u2728\uff5e",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "\u54b3\u54b3\u54b3\uff0c\u671f\u672b\u4e4b\u524d\u53d1\u4e2a\u9898\u89e3\uff0c\u6da8\u4e00\u4e0brp\n\n\u9996\u5148\u8fd9\u9053\u9898\u662f\u4e00\u9053\u7f29\u70b9\u7684\u677f\u5b50\u9898\n \n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5148\u7f29\u4e00\u4e0b\u70b9\uff0c\u7136\u540e\u7edf\u8ba1\u4e00\u4e0b\u5165\u5ea6\u4e3a0\u7684\u70b9\u5373\u53ef\n\uff08\u601d\u8003\u4e00\u4e0b\uff0c\u4e0d\u61c2\u7559\u8a00\uff0c\u4f1a\u4e00\u76f4\u770b\u6d1b\u53e4\u7684\uff09\n\n\u771f\u7684\u4e0d\u77e5\u9053\u4e3a\u751a\u4e48\u5927\u4f6c\u4eec\u8981\u904d\u5386\u4e00\u4e0b\u6240\u6709\u7684\u8fb9\u6765\u7edf\u8ba1\u5165\u5ea6\n\n\u4e2a\u4eba\u89c9\u5f97\u53ea\u9700\u8981\u770b\u4e00\u4e0b\u539f\u6765\u5b58\u7684\u8fb9\u5c31\u53ef\u4ee5\u4e86\n\n\u6700\u540e\u795d\u5927\u5bb6AK noi ~~\u795d\u6211\u81ea\u5df1\u548cczx\u548chbw\u8003\u597d\u671f\u672b~~\n\n\u8981\u53bb\u5b66\u6587\u5316\u8bfe\u4e86\uff0c\u4f9d\u4f9d\u4e0d\u820d\n\n```cpp\n #include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int maxn=100100;\n\nint n,m,cnt,top,tim,ecnt,ans,head[maxn];\nint dfn[maxn],low[maxn],sd[maxn],stc[maxn],in[maxn];\nbool vis[maxn];\n\nstruct Edge{\n\tint u,v,next;\n}e[5*maxn];\n\nvoid add(int u,int v){\n\te[++cnt].u=u;\n\te[cnt].v=v;\n\te[cnt].next=head[u];\n\thead[u]=cnt;\n\treturn ;\n}\n\nvoid tarjan(int x){\n\tlow[x]=dfn[x]=++tim;\n\tstc[++top]=x;  vis[x]=1;\n\tfor(int i=head[x];i;i=e[i].next){\n\t\tint v=e[i].v;\n\t\tif(!dfn[v]) {\n\t\t\ttarjan(v);\n\t\t\tlow[x]=min(low[x],low[v]);\n\t\t}\n\t\telse if(vis[v])\n\t\t\t\tlow[x]=min(low[x],low[v]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\tint y;\n\t\tsd[x]=++ecnt;\n\t\twhile(y=stc[top--]){\n\t\t\tsd[y]=ecnt;\n\t\t\tvis[y]=0;\n\t\t\tif(y==x) break;\n\t\t}\n\t}\n}//\u7f29\u70b9\u677f\u5b50\uff0c\u4e0d\u591a\u8bf4\n\nint main(){\n\tint x,y;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(x==y) continue;\n\t\tadd(x,y);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i]) tarjan(i);\n\tfor(int i=1;i<=m;i++){\n\t\tint u=sd[e[i].u];\n\t\tint v=sd[e[i].v];\n\t\tif(u!=v){\n\t\t\tin[v]++;\n\t\t}\n\t}\n/*\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=head[i];j;j=e[j].next){\n\t\t\tint u=sd[i];\n\t\t\tint v=sd[e[j].v];\n\t\t\tif(u!=v){\n\t\t\t\tin[v]++;\n\t\t\t}\n\t\t}*/\n\t\n\tfor(int i=1;i<=ecnt;i++){\n\t\tif(!in[i]) ans++;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1561904310,
        "uid": 168317,
        "name": "Last_Reincarnation",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "# \u9898\u89e3 P2002 \u6d88\u606f\u6269\u6563\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problem/P2002)\n\n\u975e\u5e38\u88f8\u7684\u4e00\u9053\u7f29\u70b9\u9898\uff0c\u5f88\u663e\u7136\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7ed9\u4e00\u4e2a\u70b9\u6d88\u606f\u5c31\u591f\u4e86\uff0c\u7f29\u5b8c\u70b9\u4ee5\u540e\u5f88\u663e\u7136\u6211\u4eec\u8981\u8ba8\u8bba\u6bcf\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u3002\u5bf9\u4e8e\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\uff08\u6ca1\u6709\u5176\u5b83\u70b9\u80fd\u7ed9\u4ed6\u6d88\u606f\uff09\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u7ed9\u5b83\u4e00\u4efd\u6d88\u606f\uff0c\u6240\u4ee5\u5c31\u53d8\u6210\u4e86\u6570\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u3002\u7531\u4e8e\u6570\u636e\u89c4\u6a21\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u91cd\u65b0\u5efa\u56fe\u3002\n\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\u4e00\u4e2a\u5c0f\u7ec6\u8282\u3002\u91cd\u8fb9\u548c\u81ea\u73af\u3002\u6211\u4e00\u5f00\u59cb\u7528map\u5224\u91cd\u8fb9\u7ed3\u679ct\u4e86\u4e00\u4e2a\u70b9\uff08\u4e5f\u6709\u53ef\u80fd\u662f\u8fd9\u4e2a\u70b9\u6709\u81ea\u73afqaq\uff09\uff0c\u7136\u540e\u5220\u4e86map\u7279\u5224\u5224\u81ea\u73af\u5c31\u76f4\u63a5\u8fc7\u4e86\uff0c\u770b\u6765\u91cd\u8fb9\u597d\u50cf\u5bf9\u8fd9\u9053\u9898\u6ca1\u4ec0\u4e48\u5f71\u54cd\uff1f\uff1f\uff08\u5927\u96fe\n\n\u4ee3\u7801\uff1a~~\u51e0\u4e4e\u662f\u88f8\u7684\u6a21\u7248\u9898\uff0c\u597d\u50cf\u6bd4\u6a21\u7248\u9898\u8fd8\u7b80\u5355\u70b9~~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <stack>\n#include <vector>\n#include <map>\n#define N 100005\n#define ll long long\nusing namespace std;\n\ninline int read()\n{\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar(); }\n\twhile (c >= '0' && c <= '9') { x = x * 10 + c - '0'; c = getchar(); }\n\treturn x * f;\n}\nvector < int > a[N];\nstack < int > s;\nmap < pair < int, int >, int > mp;\nint n, m, times, dfn[N], low[N], instc[N], vis[N], mtot, du[N], ans;\n//vector\u5b58\u56fe\u53ef\u80fd\u4f1a\u6162\nvoid tarjan(int x)\n{\n\tdfn[x] = low[x] = ++times;\n\tinstc[x] = 1;\n\ts.push(x);\n\tfor (int i = 0; i < a[x].size(); i++)\n\t{\n\t\tint u = a[x][i];\n\t\tif (!dfn[u])\n\t\t{\n\t\t\ttarjan(u);\n\t\t\tlow[x] = min(low[x], low[u]);\n\t\t}\n\t\telse if (instc[u])\n\t\t\tlow[x] = min(low[x], dfn[u]);\n\t}\n\tif (dfn[x] == low[x])\n\t{\n\t\t++mtot;\n\t\tvis[x] = mtot;\n\t\tinstc[x] = false;\n\t\twhile (s.top() != x)\n\t\t{\n\t\t\tvis[s.top()] = mtot;\n\t\t\tinstc[s.top()] = 0;\n\t\t\ts.pop();\n\t\t}\n\t\ts.pop();\n\t}\n}\n\nint main()\n{\n\tn = read(), m = read();\n\tfor (int i = 1; i <= m; i++) { int a1 = read(), a2 = read(); if (a1 != a2) a[a1].push_back(a2); }\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i]) tarjan(i);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tfor (int j = 0; j < a[i].size(); j++)\n\t\t{\n\t\t\tint u = a[i][j];\n\t\t\tif (vis[u] != vis[i])\n\t\t\t{\n\t\t\t\tdu[vis[u]]++; //\u66f4\u65b0\u5165\u5ea6 \uff08\u4e0d\u5728\u4e4e\u662f\u5426\u91cd\u590d\uff09\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= mtot; i++)\n\t\tif (du[i] == 0) ans++; //\u7edf\u8ba1\u5165\u5ea6\u7d2f\u52a0\u7b54\u6848\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n\u6700\u540e\u63a8\u8350\u51e0\u4e2a\u76f8\u4f3c\u9898\u76ee\uff0c\u505atarjan\u5fc5\u5237\uff1a\n\n[P1262 \u95f4\u8c0d\u7f51\u7edc](https://www.luogu.org/problem/P1262)\n\n[P2341 [HAOI2006]\u53d7\u6b22\u8fce\u7684\u725b|\u3010\u6a21\u677f\u3011\u5f3a\u8fde\u901a\u5206\u91cf](https://www.luogu.org/problem/P2341)\n\n[P3627 [APIO2009]\u62a2\u63a0\u8ba1\u5212](https://www.luogu.org/problem/P3627)\n\n**\u6700\u540e\u5410\u69fd\u4e0b\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u88f8\u7684tarjan\u90fd\u662f\u84dd\u9898\uff0c\u56e0\u4e3a\u666e\u53ca\u7ec4\u4e0d\u8003\u4e48qaq**",
        "postTime": 1567693258,
        "uid": 92008,
        "name": "Yuyuanqi",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "\u9898\u89e3\u533a\u597d\u50cf\u6ca1\u6709\u6211\u8fd9\u4e2a\u505a\u6cd5\u7684\uff0c\u53ef\u80fd\u592a\u66b4\u529b\u4e86qwq\n\ntarjan+\u62d3\u6251+DFS\n\n\u4ee5\u4e0b\u56fe\u4e3a\u4f8b\n\n![](https://cdn.luogu.com.cn/upload/pic/67191.png)\n\n\u5148\u628a\u5f3a\u8054\u901a\u5206\u91cf\u7f29\u6210\u4e00\u4e2a\u70b9\n\n![](https://cdn.luogu.com.cn/upload/pic/67192.png)\n\n\u7136\u540e\u62d3\u6251\u6392\u5e8f\u4e00\u4e0b\n\n![](https://cdn.luogu.com.cn/upload/pic/67193.png)\n\n\u6309\u7167\u62d3\u6251\u5e8fDFS\u904d\u5386\u6bcf\u4e2a\u672a\u88ab\u6807\u8bb0\u7684\u70b9\u5373\u53ef\n\n\u7b2c\u4e00\u6b21\u904d\u5386:\n\n![](https://cdn.luogu.com.cn/upload/pic/67194.png)\n\n\u7b2c\u4e8c\u6b21\u904d\u5386:\n\n![](https://cdn.luogu.com.cn/upload/pic/67197.png)\n\ncode:\n\n```\n#include<map>\n#include<cmath>\n#include<stack>\n#include<queue>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ntemplate<class Read>void in(Read &x){\n    x=0;\n    int f=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        f|=(ch=='-');\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    x=f?-x:x;\n    return;\n}\nstruct Node{\n    int to;\n    int next;\n}a[500005],q[500005];\nqueue<int>Q;\nint n,m,top,tt,tot,ans,sum,kkk;\nint vis[100005],he[100005],ru[100005],bi[100005];\nint head[100005],v[100005],low[100005],dfn[100005],b[100005];\nint l[100005],kk[100005];\nvector<int>p[100005];\nvoid add2(int x,int y){\n    a[++top].next=head[x];\n    a[top].to=y;\n    head[x]=top;\n}\nvoid add(int x,int y){\n    q[++top].next=he[x];\n    q[top].to=y;\n    he[x]=top;\n}\nvoid tarjan(int u){//tarjan\u7f29\u70b9(\u6a21\u677f)\n\tdfn[u]=low[u]=++top;\n\tv[u]=1;\n\tl[++kkk]=u;\n\tfor(int i=he[u];i;i=q[i].next){\n        int k=q[i].to;\n\t\tif(!dfn[k]){\n\t\t\ttarjan(k);\n\t\t\tlow[u]=min(low[u],low[k]);\n\t\t}\n\t\telse if(v[k])low[u]=min(low[u],dfn[k]);\n\t}\n\tif(dfn[u]==low[u]){//\u627e\u5230\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\n        int x=0,s=kkk;\n        tot++;\n\t\twhile(x!=u){\n\t\t\tx=l[s];\n            s--;\n            vis[x]=tot;//\u67d3\u6210\u4e00\u4e2a\u8272\n            kk[tot]++;\n            p[tot].push_back(x);\n\t\t\tv[x]=0;\n\t\t}\n        kkk=s;\n\t}\n}\nvoid dfs(int x){\n    for(int i=head[x];i;i=a[i].next){\n        int qqq=a[i].to;\n        if(!v[qqq]){\n            v[qqq]=1;\n            dfs(qqq);\n        }\n    }\n}\nint main(){\n    in(n);in(m);\n    for(int i=1;i<=m;i++){\n        int x,y;\n        in(x);in(y);\n        add(x,y);//\u5efa\u8fb9\n    }\n    top=0;\n    for(int i=1;i<=n;i++)if(!dfn[i])tarjan(i);//\u7f29\u70b9\n    top=0;\n    for(int i=1;i<=tot;i++){//\u7f29\u70b9\u540e\u91cd\u65b0\u6784\u8fb9\n        memset(v,0,sizeof(v));\n        for(int j=0;j<p[i].size();j++){\n            int h=p[i][j];\n            for(int k=he[h];k;k=q[k].next){\n                int g=q[k].to;\n                if(v[vis[g]]||vis[g]==i)continue;\n                add2(i,vis[g]);//\u91cd\u65b0\u5efa\u8fb9\n                ru[vis[g]]++;//\u7edf\u8ba1\u5165\u5ea6\n                v[vis[g]]=1;\n            }\n        }\n    }\n    n=tot;\n    for(int i=1;i<=n;i++)if(ru[i]==0)Q.push(i),bi[++bi[0]]=i;\n    while(!Q.empty()){//\u62d3\u6251\u6392\u5e8f\n        int qq=Q.front();\n        Q.pop();\n        for(int i=head[qq];i;i=a[i].next){\n            int qqq=a[i].to;\n            ru[qqq]--;\n            if(ru[qqq]==0){\n                Q.push(qqq);\n                bi[++bi[0]]=qqq;\n            }\n        }\n    }\n    //bi\u4e3a\u7406\u597d\u7684\u62d3\u6251\u5e8f\n    memset(v,0,sizeof(v));\n    for(int i=1;i<=n;i++){\n        if(!v[bi[i]]){//\u4f9d\u6b21\u904d\u5386\u672a\u8bbf\u95ee\u7684\u70b9\u5373\u53ef\n            v[bi[i]]=1;\n            dfs(bi[i]);\n            ans++;\n        }\n    }\n    printf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1564649489,
        "uid": 119120,
        "name": "Waddles",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "\u8fd9\u662f\u5f88\u660e\u663e\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u9898\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5efa\u8fb9\uff0c\u7136\u540e\u518d\u7528tarjan\u7f29\u70b9\uff08tarjan\u5927\u6cd5\u597d\uff09\n\n\u7f29\u70b9\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u7edf\u8ba1\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5165\u5ea6\uff0c\u5165\u5ea6\u4e3a0\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\u5373\u4e3a\u6700\u7ec8\u7b54\u6848QAQ\n\n\u4e0b\u9762\u5c31\u4e0a\u4ee3\u7801\u4e86\n\n------------\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define rg register//\u5361\u5e38\nconst int N=100010,M=500010;\nint n,m,a[M],b[M],h[N],cnt,dfn[N],low[N],stack[N],co[N],col,top,num,de[N],ans;\nstruct edge{\n\tint to,next;\n}e[M];\ninline void add(rg int u,rg int v)//\u524d\u5411\u661f\u5efa\u8fb9\n{\n\te[++cnt].to=v;\n\te[cnt].next=h[u];\n\th[u]=cnt;\n}\ninline void tarjan(rg int x)//\u7f29\u70b9\n{\n\tlow[x]=dfn[x]=++num;\n\tstack[++top]=x;//\u5165\u6808\n\tfor(rg int i=h[x];~i;i=e[i].next){\n\t\tint y=e[i].to;\n\t\tif(!dfn[y]) tarjan(y),low[x]=min(low[x],low[y]);\n\t\telse if(!co[y]) low[x]=min(low[x],dfn[y]);\n\t}\n\tif(!(dfn[x]^low[x])){\n\t\tco[x]=++col;\n\t\twhile(stack[top]^x){//\u51fa\u6808\n\t\t\tco[stack[top]]=col;\n\t\t\t--top;\n\t\t}\n\t\t--top;\n\t}\n    //\u5176\u4e2d!(a^b)\u610f\u4e3aa==b,a^b\u4e3aa!=b\n}\nint main(void)\n{\n\tmemset(h,-1,sizeof(h));\n\tscanf(\"%d%d\",&n,&m);\n\tfor(rg int i=1;i<=m;++i){//\u672c\u4eba\u63a8\u8350++i\uff0c\u4fbf\u4e8e\u5361\u5e38\n\t\tscanf(\"%d%d\",a+i,b+i);\n\t\tadd(*(a+i),*(b+i));\n\t}\n\tfor(rg int i=1;i<=n;++i)\n\t    if(!dfn[i]) tarjan(i);\n    for(rg int i=1;i<=m;++i)\n    \tif(co[a[i]]^co[b[i]]) ++de[co[b[i]]];//\u7edf\u8ba1\u5165\u5ea6\n    for(rg int i=1;i<=col;++i) if(!de[i]) ++ans;\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1548942010,
        "uid": 84726,
        "name": "sp201613",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "**~~\u5176\u5b9e\u8fd9\u9053\u9898\u86ee\u6c34\u7684~~**\n## \u601d\u8def\uff1a\n\u6839\u636e\u9898\u610f\uff0c\u4ed6\u8bf4\u6709\u73af\uff0c\u81ea\u7136\u60f3\u5230\u8981\u7528tarjan,\u540e\u9762\u5c31\u5f88\u7b80\u5355\u4e86\uff1b\n\n\u7f29\u5b8c\u70b9\u4e4b\u540e\u91cd\u65b0\u5efa\u56fe\uff0c\u5f00\u4e00\u4e2a$in$\u6570\u7ec4\u8868\u793a\u8be5\u70b9\u7684\u5165\u5ea6\u662f\u591a\u5c11\uff08$ps$\uff1a\u8be5\u70b9\u8868\u793a\u7f29\u5b8c\u70b9\u4e4b\u540e\u7684\u5927\u70b9\uff09\uff1b\n\n\u6700\u540e\u7edf\u8ba1\u4e00\u4e0b\u90a3\u4e2a\u70b9\u6ca1\u6709\u5165\u5ea6\u5c31\u597d\u4e86\uff1b\n###### ~~\u4e0b\u9762\u662f\u672c\u849f\u84bb\u7684cpp~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<stack>\nusing namespace std;\nstack<int>q;\nstruct Node\n{\n    int next,to;\n}e[1010111],ee[1010101];\nint dfn[1010101],low[1010100],be[1010111];\nint vis[1010101],in[1010001],headd[1010101];\nint n,m,num,num1,ans,head[1010101];\n//num1\u8868\u793a\u5927\u70b9\u7684\u4e2a\u6570\uff0cnum\u8868\u793atarjan\u4e2d\u7684\u7f16\u53f7\n//head\u539f\u56fe\uff0ce->\u539f\u56fe\uff1bee->\u65b0\u56fe headd->\u65b0\u56fe\nvoid add(int x,int y)\n{\n    e[++head[0]].next=head[x];\n    e[head[0]].to=y;\n    head[x]=head[0];\n}\nvoid ad(int x,int y)\n{\n    ee[++headd[0]].next=headd[x];\n    ee[headd[0]].to=y;\n    headd[x]=headd[0];\n}\n//\u8fd9\u91cc\u6211\u7528\u7684head[0]\uff0cheadd[0]\u8868\u793a\u662f\u4e3a\u4e86\u8282\u7701\u4e00\u4e2a\u5c0f\u5c0f\u7684\u7a7a\u95f4\nvoid tarjan(int x)\n{\n    vis[x]=1;q.push(x);\n    dfn[x]=low[x]=++num;\n    for(int i=head[x];i;i=e[i].next)\n    {\n        int t=e[i].to;\n        if(!dfn[t])\n        {\n            tarjan(t);\n            low[x]=min(low[x],low[t]);\n        }\n        else if(vis[t])\n            low[x]=min(low[t],low[x]);\n    }\n    if(dfn[x]==low[x])\n    {\n        vis[x]=0;\n        be[x]=++num1;\n        while(q.top()!=x)\n        {\n            be[q.top()]=num1;\n            vis[q.top()]=0;\n            q.pop();\n        }\n        be[q.top()]=num1;\n        vis[q.top()]=0;\n        q.pop();\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int y,u;\n        scanf(\"%d%d\",&y,&u);\n        add(y,u);\n    }//\u52a0\u8fb9\n    for(int i=1;i<=n;i++)\n        if(!dfn[i])\n            tarjan(i);\n    for(int i=1;i<=n;i++)\n        for(int j=head[i];j;j=e[j].next)\n            if(be[i]!=be[e[j].to])\n            {\n                ad(be[i],be[e[j].to]);\n                in[be[e[j].to]]++;\n                //\u52a0\u65b0\u8fb9\u540c\u65f6\u8bb0in\n            }\n    for(int i=1;i<=num1;i++)\n        if(!in[i])\n            ans++;\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n\n###### ~~\u745f\u745f\u53d1\u6296~~",
        "postTime": 1534679834,
        "uid": 49654,
        "name": "\u7ea2\u85af\u6dc0\u7c89",
        "ccfLevel": 0,
        "title": "P2002 \u6d88\u606f\u6269\u6563"
    },
    {
        "content": "\u548c\u697c\u4e0b\u8bf4\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u7f29\u70b9\u540e\u5165\u5ea6==0\u7684\u70b9\u6570\u5c31\u662f\u7b54\u6848\u3002\n\n\u7528tarjan\u5c06\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u6210\u70b9\uff0c\u8bb0\u5f55\u539f\u5148\u7684\u6bcf\u4e2a\u70b9\u7f29\u5165\u4e86\u54ea\u4e2a\u70b9\uff0c\u8bfb\u5165\u7684\u8fb9\u9700\u8981\u5b58\u4e0b\u6765\u3002\n\n\u7f29\u5b8c\u4e4b\u540e\uff0c\u626b\u63cf\u6bcf\u6761\u8fb9\uff0c\u5224\u65ad\u5982\u679c\u7ec8\u70b9\u548c\u8d77\u70b9\u6240\u5728\u7684\u5206\u91cf\u4e0d\u540c\uff0c\u800c\u4e14\u7ec8\u70b9\u672a\u88ab\u6807\u8bb0\uff08\u6807\u8bb0\u8868\u793a\u5df2\u7ecf\u7edf\u8ba1\uff09\uff0c\u90a3\u4e48\u6807\u8bb0\u7ec8\u70b9\u5e76\u4e14\u8ba1\u6570\u5668+1\uff0c\u8ba1\u6570\u5668\u5b58\u7684\u5c31\u662f\u7f29\u70b9\u4e4b\u540e\uff0c\u5165\u5ea6\u4e0d\u4e3a0\u7684\u5206\u91cf\u6570\u3002\n\n\u8f93\u51fa \u5206\u91cf\u6570-\u5165\u5ea6>0\u7684\u5206\u91cf\u6570 \u5f53\u7136\u662f\u5165\u5ea6==0\u7684\u5206\u91cf\u6570\u4e86\u3002\n\n\u4e0d\u9700\u8981\u590d\u6742\u5730\u6c42\u51fa\u786e\u5207\u7684\u5165\u5ea6\u4e86\u3002\n\n```cpp \n#include <bits/stdc++.h>\nusing namespace std;\nint all,s2,x[500002],y[500002],top,num,n,m,ans,e,p[500002],ne[500002],h[500002],dfn[500002],lo[500002],w[500002],t[500002];\nbool f[500002],tr[500002];\nstring s;\nvoid add(int x,int y){\n  p[++num]=y;\n  ne[num]=h[x];\n  h[x]=num;\n}\nvoid tarjan(int x){\n  dfn[x]=lo[x]=++num;\n  t[++top]=x;\n  f[x]=true;\n  int k=h[x];\n  while(k!=0){\n    if(dfn[p[k]]==0){\n      tarjan(p[k]);\n      lo[x]=min(lo[x],lo[p[k]]);\n    } else\n      if(f[p[k]])\n        lo[x]=min(lo[x],dfn[p[k]]);\n    k=ne[k];\n  }\n  if(dfn[x]==lo[x]){\n    s2++;\n    int r;\n    do{\n      r=t[top--];\n      f[r]=false;\n      w[r]=n+s2;\n    }\n    while(x!=r);\n  }\n}\nint main(){\n  cin>>n>>m;\n  for(int i=1;i<=m;i++){\n    cin>>x[i]>>y[i];\n    add(x[i],y[i]);\n  }\n  num=0;\n  for(int i=1;i<=n;i++)\n    if(dfn[i]==0){\n      top=0;\n      tarjan(i);\n    }\n  for(int i=1;i<=m;i++){\n    if(!tr[w[y[i]]]&&w[x[i]]!=w[y[i]]){\n      tr[w[y[i]]]=true;\n      ans++;\n    }\n  }\n  cout<<s2-ans;\n  return 0;\n}\n```",
        "postTime": 1485311890,
        "uid": 20505,
        "name": "tututu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "# P2002 \u6d88\u606f\u6269\u6563\n\u8fd9\u9898\u5e94\u8be5\u7b97\u662f\u6bd4\u8f83\u6c34\u7684\u7f29\u70b9\u9898\u4e86\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5728DAG\u4e0a\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u6cd5\u3002\u663e\u7136, \u5728DAG\u4e0a, \u5982\u679c\u60f3\u8981\u904d\u5386\u56fe\u4e0a\u7684\u6240\u6709\u70b9, \u5c31\u9700\u8981\u4ece\u56fe\u4e2d\u6240\u6709\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u51fa\u53d1\u8fdb\u884c\u904d\u5386\u3002\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u4e00\u4e0b\u6709\u591a\u5c11\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u5c31\u884c\u4e86\u3002\n\n\u4e0d\u8fc7\u9898\u76ee\u4e2d\u5e76\u6ca1\u6709\u8bf4\u8fd9\u5f20\u56fe\u662f\u4e2aDAG, \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u5316\u4e3a\u4e00\u4e2aDAG\u4e0a\u7684\u95ee\u9898\u3002\u505a\u6cd5\u4e5f\u5f88\u663e\u7136, \u628a\u8fd9\u5f20\u56fe\u6240\u7f29\u4e00\u4e0b\u70b9, \u518d\u7edf\u8ba1\u4e00\u4e0b\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u7684\u4e2a\u6570\u5373\u53ef\u3002\u4e0d\u8fc7\u8fd9\u9898\u4e2d\u8bf4\u6709\u81ea\u73af, \u6240\u4ee5\u8fd8\u9700\u8981\u518d\u8f93\u5165\u65f6\u8fdb\u884c\u4e00\u4e0b\u7279\u5224\u3002\u7136\u540e\u8fd9\u4e2a\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\nTarjan\u7684\u590d\u6742\u5ea6\u662f $O(m)$ \u7684, \u7edf\u8ba1\u7684\u590d\u6742\u5ea6\u662f $O(n)$ \u7684, \u6240\u4ee5\u4e0a\u8ff0\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u5c31\u662f $O(n + m)$ \u7684, \u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u4e0b\u9762\u662f\u6211\u7684Code:\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<stack>\nusing namespace std;\nconst int maxn = 5e5 + 5;\nint n, m, cols, ans, cur, dfsclock;\nint head[maxn], to[maxn], nex[maxn], dfn[maxn], low[maxn];\nint col[maxn], fir[maxn], sec[maxn], deg[maxn];\nbool inst[maxn];\nstack<int> st;\nvoid add(int u, int v){ // \u94fe\u5f0f\u524d\u5411\u661f \n\tnex[++cur] = head[u];\n\tto[cur] = v;\n\thead[u] = cur;\n\treturn ;\n}\nvoid Tarjan(int s){ // Tarjan \u6c42\u5f3a\u8fde\u901a\u5206\u91cf \n\tdfn[s] = low[s] = ++dfsclock;\n\tst.push(s);\n\tinst[s] = 1;\n\tfor(int i = head[s];i;i = nex[i]){\n\t\tint t = to[i];\n\t\tif(!dfn[t]){\n\t\t\tTarjan(t);\n\t\t\tlow[s] = min(low[s], low[t]);\n\t\t} else if(inst[t]){\n\t\t\tlow[s] = min(low[s], dfn[t]);\n\t\t} else {\n\t\t\tcontinue;\n\t\t}\n\t}\n\tif(dfn[s] == low[s]){\n\t\t++cols;\n\t\twhile(st.top() != s){\n\t\t\tinst[st.top()] = 0;\n\t\t\tcol[st.top()] = cols;\n\t\t\tst.pop();\n\t\t}\n\t\tinst[s] = 0;\n\t\tcol[s] = cols;\n\t\tst.pop();\n\t}\n\treturn ;\n}\nvoid count(){ // \u5229\u7528 Tarjan \u4e4b\u540e\u7684\u7ed3\u679c\u7edf\u8ba1\u7f29\u70b9\u540e\u7684\u5165\u5ea6 \n\tfor(int i = 1;i <= m;i++){\n\t\tif(col[fir[i]] != col[sec[i]]){\n\t\t\tdeg[col[sec[i]]]++;\n\t\t}\n\t}\n\treturn ;\n}\nvoid solve(){\n\tfor(int i = 1;i <= cols;i++){ // \u7edf\u8ba1\u7b54\u6848 \n\t\tif(!deg[i]){\n\t\t\tans++;\n\t\t}\n\t}\n\treturn ;\n}\nint main(){\n\tscanf(\"%d %d\", &n, &m);\n\tfor(int i = 1;i <= m;i++){\n\t\tscanf(\"%d %d\", &fir[i], &sec[i]); // \u8f93\u5165 \n\t\tif(fir[i] == sec[i]){\n\t\t    continue;\n\t\t}\n\t\tadd(fir[i], sec[i]);\n\t}\n\tfor(int i = 1;i <= n;i++){\n\t\tif(!dfn[i]){ // Tarjan \u5904\u7406 \n\t\t\tTarjan(i);\n\t\t}\n\t}\n\tcount();\n\tsolve();\n\tprintf(\"%d\\n\", ans); // \u8f93\u51fa \n\treturn 0;\n}\n```",
        "postTime": 1585298889,
        "uid": 177999,
        "name": "juicyyou",
        "ccfLevel": 9,
        "title": "P2002 \u6d88\u606f\u6269\u6563"
    },
    {
        "content": "\u5148\u770b\u9898\u76ee:\u7ed9\u4e00\u4e2a\u6709\u5411\u56fe,**\u81f3\u5c11**\u8981\u4ece\u51e0\u4e2a\u70b9\u51fa\u53d1\u624d\u80fd\u904d\u5386\u8fd9\u4e2a\u56fe(\u5c31\u662f\u81f3\u5c11\u9700\u8981\u5728\u51e0\u4e2a\u57ce\u5e02\u53d1\u5e03\u6d88\u606f\u624d\u80fd\u8ba9\u8fd9\u6240\u6709n\u4e2a\u57ce\u5e02\u90fd\u5f97\u5230\u6d88\u606f)\n\n\u9996\u5148\u53ef\u80fd\u4f1a\u60f3\u5230\u5e76\u67e5\u96c6,\u4f46\u50cf\u4e0b\u65b9\u7684\u56fe,\u56e0\u4e3a\u666e\u901a\u7684\u5e76\u67e5\u96c6\u53ea\u662f\u6c42\u51fa\u662f\u5426\u8054\u901a,\u5c31\u4e00\u822c\u65e0\u6cd5\u7ed9\u51fa\u6b63\u786e\u7b54\u6848(\u5f53\u7136\u5982\u679c\u4f60\u7684\u64cd\u4f5c\u591fsao\u53ef\u80fd\u53ef\u4ee5)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/st239cur.png)\n\n\u7136\u540e\u53ef\u80fd\u4f1a\u60f3\u5230\u901a\u8fc7**\u6c42\u5165\u5ea6\u4e3a0\u7684\u70b9**(\u5c31\u662f\u6ca1\u6709\u5230\u8fd9\u4e2a\u70b9\u7684\u8def),\u56e0\u4e3a\u5165\u5ea6\u5982\u679c\u4e0d\u4e3a\u96f6,\u90a3\u4e48\u4e00\u5b9a\u53ef\u4ee5\u4ece\u5176\u4ed6\u7684\u70b9\u8d70\u5230\u5b83,\u5bf9\u4e8e\u4e0a\u9762\u7684\u90a3\u5f20\u56fe,\u8fd9\u4e2a\u7ed3\u8bba\u4f3c\u4e4e\u5df2\u7ecf\u662f\u6b63\u786e\u7684,\u4f46\u662f\u770b\u4e0b\u9762\u7684\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/q309woar.png)\n\n\u53ef\u4ee5\u53d1\u73b0,\u8fd9\u4e2a\u56fe\u6240\u6709\u7684\u70b9\u5165\u5ea6\u90fd\u4e3a\u96f6,\u90fd\u60f3\u4ece\u524d\u4e00\u4e2a\u70b9\u5f97\u5230\u6d88\u606f,\u4f46\u662f\u8fd9\u6837\u5f62\u6210\u4e86\u4e00\u4e2a**\u6b7b\u5faa\u73af**,\u5373\u4f7f\u6ca1\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u8fd8\u662f\u9700\u8981\u5728\u4efb\u610f\u4e00\u4e2a\u70b9\u53d1\u5e03\u6d88\u606f,\u6211\u4eec\u518d\u4ed4\u7ec6\u4e00\u60f3,\u4f1a\u53d1\u73b0\u8fd9\u548c**\u53ea\u6709\u4e00\u4e2a\u70b9\u7684\u60c5\u51b5\u4e0d\u662f\u4e00\u6837\u7684\u5417**,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5**\u7528tarjan\u8fdb\u884c\u7f29\u70b9**(\u6ca1\u5b66\u8fc7tarjan\u7684\u53ef\u4ee5\u770b[tarjan\u5f3a\u8fde\u901a\u5206\u91cf/\u7f29\u70b9\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P2341))\n\n\u6211\u4eec\u6765\u4e3e\u4e2a\u4f8b\u5b50\u5427\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vw6qxc8p.png)\n\n\u50cf\u4e0a\u9762\u8fd9\u5f20\u56fe,\u6211\u4eec\u53d1\u73b0,1,2,3\u5f62\u6210\u4e86**\u6b7b\u5faa\u73af**,\u4e8e\u662f\u6211\u4eec\u5c061,2,3\u7f29\u4e3a\u4e00\u4e2a\u70b9$t$,\u5e76\u5c06\u4efb\u4f55\u8fde\u51651,2,3\u4e2d\u4efb\u610f\u4e00\u70b9\u7684\u8fb9\u90fd\u8fde\u5230$t$,\u4ece1,2,3\u4efb\u610f\u4e00\u70b9\u8fde\u51fa\u7684\u8fb9\u90fd\u4ece$t$\u8fde\u51fa,\u4e8e\u662f\u5f97:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/waqcqcsv.png)\n\n(\u56fe\u4e2d\u91cd\u590d\u7684\u8fb9\u56e0\u4e3a\u4e0d\u5f71\u54cd\u7701\u53bb\u4e86)\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u56fe\u4e2d\u5165\u5ea6\u4e3a0\u7684\u70b9\u6709\u4e24\u4e2a,\u4e8e\u662f2\u5c31\u662f\u8fd9\u5f20\u56fe\u7684\u7b54\u6848\n\n**\u4e8e\u662f\u6211\u4eec\u5f97\u51fa\u6b65\u9aa4:**\n\n+ \u7f29\u70b9\n\n+ \u6c42\u7f29\u70b9\u540e\u5165\u5ea6\u4e3a0\u7684\u70b9\n\n\u7ec6\u8282\u770b\u4ee3\u7801\u5427,\u6211\u7684\u4ee3\u7801\u5e76\u6ca1\u6709\u518d\u5efa\u4e00\u4e2a\u7f29\u70b9\u540e\u7684\u56fe,\u800c\u662f\u901a\u8fc7**\u5224\u65ad\u4e24\u4e2a\u70b9\u662f\u5426\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d**\u6765\u5224\u65ad**\u7f29\u70b9\u540e\u5b83\u4eec\u662f\u5426\u5728\u540c\u4e00\u4e2a\u70b9\u4e2d**,\u5982\u679c\u4e00\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u5728\u7f29\u70b9\u540e\u5e76\u6ca1\u6709\u88ab\u7f29\u4e3a\u4e00\u4e2a\u70b9(\u5c31\u662f\u5b83\u4eec\u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185),\u90a3\u4e48\u8bf4\u660e\u7f29\u70b9\u540e,\u8fd9\u6761\u8fb9\u6240\u6307\u5411\u7684**\u70b9\u7684\u5165\u5ea6\u4e0d\u4e3a0**(\u5c31\u50cf\u4e0a\u56fe\u70b93,4\u7684\u5173\u7cfb).\n\n###### \u6ce8:\u4ee3\u7801\u4e2d\u6bcf\u4e2a\u70b9\u7f29\u70b9\u540e\u70b9\u7684\u53f7\u6570\u662f\u8dd1tarjan\u65f6\u51b3\u5b9a\u7684,\u975e\u81ea\u5df1\u51b3\u5b9a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nint n,m,sd[N],ft[N],skt,dfn[N],low[N],sk[N],top;\nint nx[5*N],to[5*N],sum,sz[N];//sd[i]\u8868\u793a\u70b9i\u5728\u7f29\u5b8c\u70b9\u540e\u6240\u5728\u7684\u70b9,sz[i]\u8868\u793a\u7f29\u70b9\u540e\u7684\u70b9i\u6240\u5305\u542b\u7684\u70b9\u7684\u4e2a\u6570,skt\u4e3a\u7f29\u540e\u70b9\u7684\u4e2a\u6570\nvoid tj(int x)//tarjan\n{\n    dfn[x]=low[x]=++sum;\n    sk[++top]=x;\n    for(int i=ft[x];i;i=nx[i])\n    {\n        if(!dfn[to[i]]) tj(to[i]);\n        if(!sd[to[i]]) low[x]=min(low[x],low[to[i]]);//\u8fd9\u91cc\u662f\u6b63\u5e38\u7684tarjan\u538b\u7f29\u540e\u7684\u4ee3\u7801\n    }\n    if(low[x]==dfn[x])//\u53d1\u73b0\u5f3a\u8fde\u901a\u5206\u91cf\n    {\n        sd[x]=++skt;//\u7f29\u70b9\u7684\u4e2a\u6570\u52a0\u4e00\n        sz[skt]=1;\n        while(sk[top]!=x)//\u5c06\u4ed6\u4eec\u7f29\u4e3a\u4e00\u70b9\n        {\n            sd[sk[top]]=skt;\n            sz[skt]++;\n            top--;\n        }\n        top--;\n    }\n}\nbool rd[N];//\u5b58\u7f29\u70b9\u540e\u70b9\u7684\u5165\u5ea6,\u4e3a\u5047\u5373\u5165\u5ea6\u4e3a0,\u4e3a\u771f\u5373\u5165\u5ea6\u4e0d\u4e3a\u96f6\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)//\u5efa\u56fe\n\t{\n\t\tint a,b;\n\t\tcin>>a>>b;\n\t\tnx[i]=ft[a];\n\t\tft[a]=i;\n\t\tto[i]=b;\n\t}\n\tfor(int i=1;i<=n;i++)//tarjan\n\t{\n\t\tif(!dfn[i]) tj(i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=ft[i];j;j=nx[j])\n\t\t{\n\t\t\tif(sd[i]!=sd[to[j]])//\u5982\u679c\u4e00\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u5728\u7f29\u70b9\u540e\u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\u70b9\n\t\t\t{\n\t\t\t\trd[sd[to[j]]]=1;//\u90a3\u4e48\u8bf4\u660e\u7f29\u70b9\u540e,\u8fd9\u6761\u8fb9\u6240\u6307\u5411\u7684\u70b9(\u5373sd[to[j]])\u7684\u5165\u5ea6\u4e0d\u4e3a0\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=skt;i++) if(!rd[i])/*\u6c42\u5165\u5ea6\u4e3a0\u7684*/ ans++;//\u56e0\u4e3a\u7f29\u70b9\u540e\u53ea\u6709skt\u4e2a\u70b9\n\tcout<<ans;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1583564852,
        "uid": 199270,
        "name": "Y_B_Y",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "\u8dd1\u4e2atarjan\u7f29\u70b9\u3002\u7136\u540e\u540c\u4e00\u4e2ascc\u7684\u70b9\u53ef\u4ee5\u4e92\u4f20\u3002  \n\u7f29\u70b9\u540e\u662f\u4e00\u4e2aDAG,\u7136\u540e\u53ea\u8981\u5411\u5165\u5ea6\u4e3a0\u7684\u70b9\u4f20\u4fe1\u606f\u5373\u53ef\u3002  \n\n\u7ec6\u8282:  \n1) \u5728\u5b9e\u73b0\u65f6\u7edf\u8ba1\u5165\u5ea6,\u8981\u5224\u65ad\u8fb9\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u662f\u5426\u5728\u540c\u4e00\u4e2ascc\u4e2d,\u662f\u7684\u8bdd\u4e0d\u8981\u52a0\u5165\u5ea6  \n2) \u5f88\u591a\u9898\u89e3\u90fd\u8bf4\u8981\u7279\u5224\u81ea\u73af,\u5b9e\u9645\u4e0a\u4e0d\u9700\u8981\u7684,\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u542b\u4e49\u662f\u6781\u5927\u7684\u5f3a\u8fde\u901a\u5b50\u56fe\u3002\n```cpp\n#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nconst int N = 123456, M = 567890;\nint head[N], ver[M], nex[M], my[M], tot;\ninline void addedge(int u, int v) {\n    ver[tot] = v; my[tot] = u; nex[tot] = head[u]; head[u] = tot++;\n}\n\nint co[N], dfn[N], low[N], sta[N], ind[N], top, dfs_clock = 1, col = 1;\nvoid tarjan(int cur) {\n    dfn[cur] = low[cur] = dfs_clock++;\n    sta[top++] = cur;\n    for(int i = head[cur]; ~i; i = nex[i]) {\n        if(!dfn[ver[i]]) {\n            tarjan(ver[i]);\n            low[cur] = min(low[cur], low[ver[i]]);\n        } else if(!co[ver[i]]) {\n            low[cur] = min(low[cur], dfn[ver[i]]);\n        }\n    }\n    if(dfn[cur] == low[cur]) {\n        while(sta[--top] != cur) {\n            co[sta[top]] = col;\n        }\n        co[cur] = col++;\n    }\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    memset(head, -1, sizeof(head));\n    memset(ind, 0, sizeof(ind));\n    int n, m, u, v, cnt = 0;\n    cin >> n >> m;\n    for(int i = 1; i <= m; ++i) {\n        cin >> u >> v;\n        if(u != v) addedge(u, v);\n    }\n    for(int i = 1; i <= n; ++i) if(!co[i]) tarjan(i);\n    for(int i = 0; i < tot; ++i) if(co[my[i]] != co[ver[i]]) ind[co[ver[i]]] = 1;\n    for(int i = 1; i < col; ++i)\n        if(!ind[i]) ++cnt;\n    cout << cnt << '\\n';\n    return 0;\n}\n\n```",
        "postTime": 1578756566,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "#### \u9898\u76ee\n\n#### \u8981\u8fde\u63a5\u6240\u6709\u7684\u57ce\u5e02\uff0c\u95ee\u6700\u5c11\u9700\u8981\u5728\u51e0\u4e2a\u57ce\u5e02\u53d1\u5e03\u3002\n\n### \u601d\u8def\n\n#### \u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6765\u8bf4\uff0c\u5982\u679c\u5b83\u4e0d\u4f5c\u4e3a\u513f\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u9700\u8981\u65b0\u5728\u8fd9\u4e2a\u57ce\u5e02\u65b0\u53d1\u5e03\u3002\n\n#### \u8fd9\u6837\u9898\u76ee\u5c31\u8f6c\u5316\u4e3a\u6c42\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n#### \u7531\u4e8e\u53ef\u80fd\u51fa\u73b0\u81ea\u73af\uff0c\u81ea\u73af\u5f71\u54cd\u5165\u5ea6\u7684\u5224\u65ad\uff0c\u8fd9\u6837\u5c31\u81ea\u7136\u60f3\u5230\u7f29\u70b9\u5904\u7406\uff01\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int maxn=5e5+5;\nint n,m;\nint head[maxn*2],cnt;\nint indegree[maxn*2];\nint dfn[maxn],low[maxn],sccnum[maxn],stac[maxn],instac[maxn];\nint top,num,sum,tot;\nstruct edge\n{\n    int to;\n    int next;\n}e[maxn*2];\nvoid add(int u,int v)\n{\n    e[cnt].to=v;\n    e[cnt].next=head[u];\n    head[u]=cnt++;\n\n}\nvoid tarjin(int u)\n{\n    dfn[u]=low[u]=num;num++;//num=1 at first\n    stac[top]=u;top++;//stac array is stack .top is the stack's top\n    instac[u]=1;\n    for(int i=head[u];i>=0;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(dfn[v]==0)\n        {\n            tarjin(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else if(instac[v]==1)\n            low[u]=min(low[u],dfn[v]);\n    }\n    if(low[u]==dfn[u])\n    {\n        do{\n            top--;//top of stack\n            sccnum[stac[top]]=tot;//strongly connect component\n            instac[stac[top]]=0;//out stack\n        }while(top>=0&&stac[top]!=u);\n        tot++;\n    }\n}\nvoid init()\n{\n    cnt=0; num=1;top=1;tot=1;\n    memset(indegree,0,sizeof(indegree));\n    memset(head,-1,sizeof(head));\n    memset(dfn,0,sizeof(low));\n    memset(instac,0,sizeof(instac));\n}\nvoid zip()\n{\n    for(int i=1;i<=n;i++)\n        for(int j=head[i];j>=0;j=e[j].next)\n            if(sccnum[i]!=sccnum[e[j].to])\n                add(sccnum[i]+n,sccnum[e[j].to]+n);\n}\nint main()\n{\n    init();\n    int u,v;\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>u>>v;\n        add(u,v);\n    }\n    for(int i=1;i<=n;i++)\n        if(!dfn[i])\n            tarjin(i);\n    zip();//zip the edge ans new map\n    for(int i=1+n;i<tot+n;i++)\n    {\n        for(int j=head[i];j>=0;j=e[j].next)\n        {\n\n            int v=e[j].to;\n            indegree[v]++;\n        }\n    }\n    int sum=0;\n    for(int i=1+n;i<tot+n;i++)\n    {\n        if(indegree[i]==0)\n        {\n            sum++;\n        }\n    }\n    cout<<sum<<endl;\n    return 0;\n}\n\n```\n//\u6492\u82b1\n",
        "postTime": 1572773282,
        "uid": 147268,
        "name": "\u674e\u4f1f\u4e1a",
        "ccfLevel": 0,
        "title": "p2002\u9898\u89e3\u4e0e\u601d\u8def"
    },
    {
        "content": "\u7ec3\u4e60\u4e00\u4e0b\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u9898\u76ee\u3002\u8fd9\u4e2a\u9898\u76ee\u5176\u5b9e\u4e0d\u9700\u8981\u91cd\u65b0\u6784\u56fe\u3002\u5728\u8f93\u5165\u6570\u636e\u7684\u65f6\u5019\u9700\u8981\u6d88\u9664\u81ea\u73af\u3002\u4e4b\u540e\u5c31\u662f\u8dd1\u4e00\u8fb9targain\u7b97\u6cd5\u6c42\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u7f29\u70b9\u4e4b\u540e\u53ea\u9700\u8981\u7edf\u8ba1\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u4e2a\u6570\u5c31\u597d\u4e86\u3002\uff08\u5927\u6c34\u9898\uff0c\u5dee\u70b9\u6ca1\u5199\u51fa\u6765\uff09\u3002\n```c\n#include<stdio.h>\n#include<string.h>\n#include<vector>\n#include<stack>\n#include<algorithm>\n#include<iostream>\n#define MAXN 100005\nusing namespace std;\n\nstruct Edge\n{\n    int from,to;\n    Edge(int from=0,int to=0):from(from),to(to){};\n};\nvector<Edge> edges;\nvector<int> G[MAXN];\nstack<int> S;\nint pre[MAXN],sccno[MAXN],lowlink[MAXN],in[MAXN];\nint dfs_clock,scc_cnt;\nint n,m;\n\nvoid dfs(int u)\n{\n    S.push(u);\n    pre[u]=lowlink[u]=++dfs_clock;\n    for(int i=0;i<G[u].size();i++)\n    {\n        Edge &e=edges[G[u][i]];\n        int v=e.to;\n        if(!pre[v])\n        {\n            dfs(v);\n            lowlink[u]=min(lowlink[u],lowlink[v]);\n        }\n        else if(!sccno[v])\n        {\n            lowlink[u]=min(lowlink[u],pre[v]);\n        }\n    }\n    if(pre[u]==lowlink[u])\n    {\n        ++scc_cnt;\n        for(;;)\n        {\n            int x=S.top();\n            S.pop();\n            sccno[x]=scc_cnt;\n            if(u==x)\n                break;\n        }\n    }\n}\n\nvoid Find_Scc(int n)\n{\n    scc_cnt=dfs_clock=0;\n    memset(sccno,0,sizeof(sccno));\n    memset(pre,0,sizeof(pre));     \n    memset(in,0,sizeof(in));              //\u7528\u6765\u7edf\u8ba1\u7f29\u70b9\u540e\u7684\u5165\u5ea6\n    for(int i=1;i<=n;i++)\n    {\n        if(!pre[i])\n           dfs(i);\n    }\n    for(int i=0;i<edges.size();i++)\n    {\n        int xx=edges[i].from;\n        int yy=edges[i].to;\n        if(sccno[xx]!=sccno[yy])\n        {\n            in[sccno[yy]]++;\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    int u,v;\n    for(int i=0;i<m;i++)\n    {\n        scanf(\"%d %d\",&u,&v);\n        if(u==v)\n            continue;\n        edges.push_back({u,v});\n        int mm=edges.size();\n        G[u].push_back(mm-1);\n    }\n    Find_Scc(n);\n    int sum=0;\n    for(int i=1;i<=scc_cnt;i++)\n    {\n        if(in[i]==0)\n            sum++;\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n\n```\n",
        "postTime": 1570458934,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "# \u5199\u5728\u524d\u9762\n[\u4f20\u9001\u95e8 \u6d1b\u8c37P2002 \u6d88\u606f\u6269\u6563](http://www.luogu.org/problem/P2002)\n\n[\u53ef\u5728\u535a\u5ba2\u5185\u9605\u8bfb](https://www.luogu.org/blog/62246/tarjan-suan-fa-li-ti-zong-jie-luo-gu-p2002-post)\n\n**$tarjan$\u7b97\u6cd5\u524d\u7f6e\u5c0f\u829d\u58eb\uff1a$dfs$\u5e8f\uff0c\u5f3a\u8fde\u901a\u5206\u91cf**\n\n**$1^o$\u5f3a\u8fde\u901a\u5206\u91cf**\uff1a\u5728\u4e00\u4e2a**\u6709\u5411\u56fe**\u7684\u4efb\u610f\u4e00\u975e\u7a7a\u5b50\u56fe\u4e2d\uff0c**\u4efb\u610f**\u4e24\u70b9\u90fd\u80fd\u4e92\u76f8\u5230\u8fbe\uff0c\u5219\u79f0\u8fd9\u4e2a\u5b50\u56fe\u4e3a\u8be5\u65e0\u5411\u56fe\u7684\u4e00\u4e2a**\u5f3a\u8fde\u901a\u5206\u91cf**\u3002\u4e3e\u4e2a\u6817\u5b50\uff1a\u73af\u5c31\u662f\u4e00\u79cd\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n**\u91cd\u8981\u6027\u8d281**\uff1a\u5728\u4e00\u4e2a**\u8fb9\u6743\u4e3a\u6b63**\u7684**\u6709\u5411\u56fe**\u4e2d\uff0c\u82e5\u6709\u4e00\u6761\u7ecf\u8fc7\u70b9\u7684\u6743\u503c\u548c\u6700\u5927\u7684\u8def\u5f84\u901a\u8fc7\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u4e00\u70b9\uff0c\u5219\u8fd9\u6761\u8def\u5f84\u901a\u8fc7\u5176**\u6240\u6709\u70b9**\u3002\uff08\u7f29\u70b9\u7684\u7406\u8bba\u57fa\u7840\uff09\n\n**\u91cd\u8981\u6027\u8d282**\uff1a\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\u90fd\u662f**\u76f8\u4e92\u72ec\u7acb**\u7684\uff0c\u6ca1\u6709\u76f8\u540c\u7684\u70b9\u6216\u8fb9\u3002\uff08\u8fd9\u4e5f\u662f\u5176\u88ab\u79f0\u4e3a\u201c\u5206\u91cf\u201d\u7684\u539f\u56e0\uff09\n\n**\u4ee5\u4e0a\u4e24\u6761\u6027\u8d28\u90fd\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4f46\u5374\u975e\u5e38\u91cd\u8981\u3002**\n\n**$2^odfs$\u5e8f**\uff1a\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5728$dfs$\u4e00\u4e2a\u56fe\u65f6\u904d\u5386\u5404\u4e2a\u70b9\u7684**\u5148\u540e\u987a\u5e8f**\u3002\n\n**\u4f18\u70b9**\uff1a\u5c06\u6811\u6216\u56fe\u7528**\u7ebf\u6027**\u7684\u7ed3\u6784\u5b58\u50a8\uff0c\u4fbf\u4e8e**\u67e5\u8be2**\u548c**\u4fee\u6539**\u3002\n\n\n\n------------\n\n# \u7b97\u6cd5\u5185\u5bb9\n$tarjan$\u7b97\u6cd5\u662f\u4e00\u79cd\u57fa\u4e8e$dfs$\u7684\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u7b97\u6cd5\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a\u7ef4\u62a4\u4e00\u4e2a$dfs$\u5e8f\u2014\u2014\u6570\u7ec4$dfn[]$\uff0c\u548c\u7531$i$\u8282\u70b9\u80fd\u8fbe\u5230\u7684$dfn$\u503c\u6700\u5c0f\u7684\u8282\u70b9\u7684$dfn$\u503c\u2014\u2014$low[]$\uff0c\u5e76\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u5728\u6700\u5f00\u59cb\u65f6\u5c06\u8282\u70b9\u538b\u5165\u6808\u4e2d\u3002\u663e\u7136\uff0c**\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u6240\u6709\u70b9\u7684$low$\u503c\u90fd\u4e3a\u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d$dfn$\u503c\u6700\u5c0f\u7684\u8282\u70b9\u7684$dfn$\u503c**\u3002\u5229\u7528\u8fd9\u6761\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u6240\u6709\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u5728\u6bcf\u904d\u5386\u5b8c\u4e00\u4e2a\u8282\u70b9\u4ee5\u53ca\u5b83\u4e4b\u540e\u7684\u8282\u70b9\u540e\uff0c\u5224\u65ad\u5176$dfn$\u503c\u662f\u5426\u548c$low$\u503c\u76f8\u7b49\u3002\u5982\u679c\u662f\uff0c\u90a3\u4e48**\u8be5\u8282\u70b9\u5373\u4e3a\u5176\u6240\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684$dfn$\u503c\u6700\u5c0f\u7684\u70b9**\uff0c\u5c06\u6808\u4e2d\u8be5\u8282\u70b9\u53ca\u5176\u4ee5\u4e0a\u7684\u6240\u6709\u8282\u70b9\u5168\u90e8\u53d6\u51fa\uff0c\u5373\u4e3a\u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6240\u6709\u70b9\u3002\n\n#### \u7ed9\u51fa\u4f2a\u4ee3\u7801\uff1a\n\n```\nvoid tarjan(int u){\n\tdfn[u]=low[u]=++\u65f6\u95f4\u7f16\u53f7;\n\t\u5c06u\u538b\u5165\u6808\u4e2d;\n\t\u904d\u5386\u6240\u6709u\u80fd\u5230\u8fbe\u7684\u70b9v{\n\t\tif v\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7{\n        tarjan(v);\n           low[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if v\u4ecd\u5728\u6808\u4e2d{\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t}\n   }\n\tif low[u]==dfn[u]{\n\t\t++\u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7;\n\t\twhile \u6808\u9876!=u{\n\t\t\t\u5c06\u6808\u9876\u7f16\u53f7;\n\t\t\t\u5f39\u51fa\u6808\u9876;\n\t\t}\n\t}\n}\n```\n\n\u800c\u5bf9\u4e8e\u672c\u9898\uff0c\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5982\u679c\u6ca1\u6709\u5176\u5b83\u5f3a\u8fde\u901a\u5206\u91cf\u80fd\u5230\u8fbe\u5b83\uff0c\u5c31\u9700\u8981\u53d1\u5e03\u6d88\u606f\uff0c\u7528$tarjan$\u6c42\u51fa\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\u5373\u53ef\u3002\n\n\n------------\n\n# \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, cnt = 0;\nint timing, dfn[100005], low[100005], ins[100005];\nint colcnt = 0, col[100005], colnum[100005], com[100005], go[100005];\nstack<int> s;\nvector<int> e[100005];//\u4e2a\u4eba\u4e60\u60ef\uff0cvector\u5b58\u56fe\ninline int read() {\n    int x = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || '9' < ch) {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while ('0' <= ch && ch <= '9') {\n        x = (x << 3) + (x << 1) + (ch ^ 48);\n        ch = getchar();\n    }\n    return x * f;\n}//\u5feb\u8bfb\nvoid tarjan(int u) {\n    dfn[u] = low[u] = ++timing;//\u521d\u59cb\u5316dfn\u548clow\u503c\n    s.push(u);//\u538b\u5165\u6808\u4e2d\n    ins[u] = 1;//\u6807\u8bb0\u8bbf\u95ee\n    for (int i = 0; i < e[u].size(); i++) {//\u904d\u5386u\u80fd\u5230\u8fbe\u7684\u70b9\n        int v = e[u][i];\n        if (!dfn[v]) {\n            tarjan(v);\n            low[u] = min(low[u], low[v]);\n        } else if (ins[v])\n            low[u] = min(low[u], dfn[v]);\n    }\n    if (dfn[u] == low[u]) {\n        colcnt++;//\u65b0\u589e\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\n        int tmp;\n        do {\n            tmp = s.top();//\u53d6\u51fa\u6808\u9876\n            s.pop();\n            col[tmp] = colcnt;//\u7f16\u53f7\n            ins[tmp] = 0;\n        } while (tmp != u);\n    }\n}\nint main() {\n    n = read();\n    m = read();\n    int x, y;\n    for (int i = 1; i <= m; i++)\n        x = read(), y=read(), e[x].push_back(y);\n    for (int i = 1; i <= n; i++)\n        if (!dfn[i])\n            tarjan(i);\n    for (int i = 1; i <= n; i++) {\n        for (int j = 0; j < e[i].size(); j++) {\n            int v = e[i][j];\n            if (col[i] != col[v])\n                com[col[v]]++;//\u7edf\u8ba1\u80fd\u5230\u8fbe\u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\n        }\n    }\n    int xcom = 0;\n    for (int i = 1; i <= colcnt; i++) \n        if (!com[i])\n            xcom++;//\u7edf\u8ba1\u6ca1\u6709\u5176\u4ed6\u5f3a\u8fde\u901a\u5206\u91cf\u53ef\u5230\u8fbe\u7684\u4e2a\u6570\n    cout << xcom;\n    return 0;\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1564572375,
        "uid": 62246,
        "name": "Del_Your_Heart",
        "ccfLevel": 0,
        "title": "tarjan\u7b97\u6cd5\u4f8b\u9898\u603b\u7ed3\u2014\u2014\u6d1b\u8c37P2002"
    },
    {
        "content": "\u521a\u5b66tarjan\uff0c\u5199\u7bc7\u9898\u89e3\u52a0\u6df1\u4e0b\u5370\u8c61\u3002\n\n## tarjan\u7b97\u6cd5\u8be6\u89e3\n\u7ed9\u5b9a\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u6c42\u5b83\u7684\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a\u672a\u904d\u5386\u7684\u70b9\u5f00\u59cbdfs\u3002\n\n\u5b9a\u4e49dfn[i]\u8868\u793ai\u88ab\u904d\u5386\u5230\u7684\u65f6\u95f4\uff0clow[i]\u8868\u793a\u4ecei\u51fa\u53d1\uff0c\u53ea\u7ecf\u8fc7\u81f3\u591a\u4e00\u6761dfn\u53d8\u5c0f\u7684\u8fb9\uff0c\u80fd\u8d70\u5230\u7684dfn\u6700\u5c0f\u7684\u70b9\u7684dfn\u7684\u503c\u3002\uff08\u53ef\u80fd\u6709\u4e9b\u7ed5\uff0c\u770b\u4e0d\u61c2\u5efa\u8bae\u591a\u770b\u51e0\u904d\uff09\n\n\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0cdfs\u5230\u4e00\u4e2a\u70b9\u65f6\u5c06\u5b83\u52a0\u5165\u6808\u5185\u3002\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u7684dfn=low\uff0c\u90a3\u4e48\u4e0d\u505c\u5f39\u51fa\u6808\u9876\u5143\u7d20\u76f4\u5230\u8fd9\u4e2a\u70b9\u88ab\u5f39\u51fa\uff0c\u88ab\u5f39\u51fa\u7684\u6240\u6709\u70b9\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(m),m\u662f\u8fb9\u6570\n\n-----\n#### \u601d\u8def\uff1a\u5148\u7528tarjan\u7f29\u70b9\uff0c\u7136\u540e\u7edf\u8ba1\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u4e2a\u6570\uff08\u7f29\u70b9\u6307\u5c06\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u6210\u4e00\u4e2a\u70b9\uff09\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u53ef\u4ee5\u4e0d\u7528\u5728\u7f29\u70b9\u540e\u91cd\u65b0\u5efa\u56fe\uff0c\u76f4\u63a5\u7edf\u8ba1\u5165\u5ea6\u5373\u53ef\n\ncode:\n```cpp\n#include<iostream>\n#include<vector>\nusing namespace std;\n#define N 100005\nint dfn[N],low[N],tim=1,stack[N],top=0,belong[N],pn=0,du[N];\nbool in[N];\nvector<int> a[N];\nvoid tarjan(int u){\n\tlow[u]=tim;\n\tdfn[u]=tim++;\n\tstack[top++]=u;\n\tin[u]=true;//\u5148\u521d\u59cb\u5316dfn\u503c\u548clow\u503c\uff0c\u5e76\u538b\u5165\u6808\n\tint siz=a[u].size(),v;\n\tfor(int i=0;i<siz;i++){\n\t\tv=a[u][i];\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(in[v]) \n\t\t\tlow[u]=min(low[u],low[v]);//\u9012\u5f52\u5e76\u66f4\u65b0low\u503c\n\t}\n\tif(dfn[u]==low[u]){\n\t\tpn++;\n\t\twhile(stack[top]!=u){\n\t\t\ttop--;\n\t\t\tbelong[stack[top]]=pn;\n\t\t\tin[stack[top]]=false;\n\t\t}\n\t}//\u5c06\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u6253\u4e0a\u6807\u8bb0\n}\nint main()\n{\n\tint n,m,x,y,ans=0;\n\tcin>>n>>m;\n\tfor(int i=0;i<m;i++){\n\t\tcin>>x>>y;\n\t\tif(x!=y)\n\t\t\ta[x].push_back(y);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);//\u5982\u679c\u6ca1\u6709\u904d\u5386\u8fc7\uff0c\u90a3\u5c31\u904d\u5386\u5b83\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=0;j<a[i].size();j++)\n\t\t\tif(belong[i]!=belong[a[i][j]])\n\t\t\t\tdu[belong[a[i][j]]]++;//\u7edf\u8ba1\u5165\u5ea6\n\tfor(int i=1;i<=pn;i++)\n\t\tans+=(du[i]==0);//\u7edf\u8ba1\u7b54\u6848\n\tcout<<ans;\n\treturn 0;\n}\n\n```",
        "postTime": 1551497451,
        "uid": 55959,
        "name": "AC_Automation",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5c31\u662ftarjan\u5f3a\u8fde\u901a\u5206\u91cf\u4e0e\u5165\u5ea6\u7684\u4f8b\u9898\u4e86\u3002\n\n\u601d\u8def\uff1a \n\n\n\u5229\u7528\u7f29\u70b9\u7684\u601d\u60f3\uff0c\u5148\u9884\u5904\u7406\u4e00\u4e0b\u6240\u6709\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u7136\u540e\u628a\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u6240\u6709\u8282\u70b9\u770b\u505a\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u5904\u7406\u4e00\u5f20\u65b0\u56fe\uff0c\u7136\u540e\u68c0\u67e5\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\uff0c\u7136\u540e\u53d6\u5165\u5ea6\u4e3a 0 \u7684\u70b9\uff08\u7f29\u70b9\u540e\uff09\u7684\u4e2a\u6570\uff0c\u5373\u4e3a\u4fe1\u606f\u51fa\u53d1\u70b9\u3002\n\n\u53ef\u80fd\u6709\u4eba\u60f3\u95ee\u4e3a\u4ec0\u4e48\uff1f\uff1f\n\n\u5927\u4f53\u8bf4\u660e\u4e00\u4e0b\uff1a\n\n1.\u5145\u5206\u6027\u8bc1\u660e\uff1a\u5982\u679c\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u4e0d\u662f\u4fe1\u606f\u51fa\u53d1\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5fc5\u5b9a\u4e0d\u4f1a\u63a5\u6536\u5230\u4efb\u4f55\u8282\u70b9\u53d1\u51fa\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u5b83\u7684\u5165\u5ea6\u4e3a 0 \u3002 \n\n2.\u5fc5\u8981\u6027\u8bc1\u660e\uff1a\u5982\u679c\u4fe1\u606f\u51fa\u53d1\u70b9\u4e0d\u662f\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u90a3\u4e48\u5176\u5fc5\u6709\u5165\u5ea6\u70b9\uff0c\u4f7f\u5176\u8986\u76d6\u70b9\u66f4\u591a\uff0c\u800c\u6211\u4eec\u8981\u627e\u81f3\u5c11\u591a\u5c11\u4e2a\u70b9\u3002\n\n\u8fd8\u662f\u5148\u660e\u786e\u4e00\u4e0b\u5404\u4e2a\u6570\u7ec4\u7684\u610f\u601d\u5427\uff1a\n\n\n     dfn[i]:i\u70b9\u7684\u65f6\u95f4\u6233\n\n     low[i]\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u4ee5\u53ca\u5176\u5b50\u5b59\u8282\u70b9\u8fde\u7684\u6240\u6709\u70b9\u4e2ddfn\u6700\u5c0f\u7684\u503c\n\n     stack[]\uff0c\u8868\u793a\u5f53\u524d\u6240\u6709\u53ef\u80fd\u80fd\u6784\u6210\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u70b9\u3002\n\n     ins[i]\uff0c\u8868\u793a i \u662f\u5426\u5728stack[ ]\u6570\u7ec4\u4e2d\n\n     num[i],\u8868\u793a\u7b2c i \u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u6709\u591a\u5c11\u4e2a\u70b9\n\n     belong[i],\u8868\u793a\u7b2c i \u70b9\u5728\u54ea\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\n     \n     in[i]:\u8868\u793a\u7b2c i \u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5165\u5ea6\u662f\u591a\u5c11\u3002\n     \n\u4ee5\u4e0b\u5c31\u662f\u600e\u4e48\u5904\u7406\u5165\u5ea6\uff1a\n\n```cpp\n\tfor(int i=1;i<=m;i++){\n\t\tif(belong[edge[i].from] != belong[edge[i].to])\n\t\t  in[belong[edge[i].to]]++; \n\t}\n```\n\u89e3\u91ca\u4e00\u4e0b\uff1a\n\n\u679a\u4e3e\u8fb9\uff0c\u6bd4\u8f83\u8fd9\u6761\u8fb9\u8d77\u70b9\u548c\u7ec8\u70b9\u662f\u5426\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u8fd9\u6761\u8fb9\u7ec8\u70b9\u7684\u5165\u5ea6++\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nconst int maxm = 5e5 + 6;\n\nint n,m,u,v;\nint head[maxn],tot;\nint dfn[maxn],low[maxn],ind;\nint stack[maxn],top,belong[maxn],num[maxn],cnt;\nint in[maxn];//\u8868\u793a\u67d0\u4e2a\u70b9\u7684\u5165\u5ea6 \nint ans;\nbool ins[maxn];\nstruct Edge{\n\tint from,to,next;\n}edge[maxm]; \n\nvoid add(int u,int v){\n\tedge[++tot].to = v;\n\tedge[tot].from = u;\n\tedge[tot].next = head[u];\n\thead[u] = tot;\n}\n\nint read(){\n\tchar ch = getchar();\n\tint f = 1 , x = 0;\n\twhile(ch > '9' || ch < '0'){\n\t\tif(ch == '-')  f = -1;\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9'){\n\t\tx = x * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn x * f;\n}\n\nvoid tarjan(int x){\n\tdfn[x] = low[x] = ++ind;\n\tstack[++top] = x;\n\tins[x] = true;\n\tfor(int i=head[x];i;i=edge[i].next){\n\t\tint v = edge[i].to;\n\t\tif(ins[v])  low[x] = min(low[x] , dfn[v]);\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[x] = min(low[v] , low[x]);\n\t\t}  \n\t}\n\tint k;\n\tif(dfn[x] == low[x]){\n\t\t++cnt;\n\t\tdo{\n\t\t\tk = stack[top];\n\t\t\tnum[cnt]++;\n\t\t\ttop--;\n\t\t\tins[k] = false;\n\t\t\tbelong[k] = cnt;\n\t\t} while(k != x);\n\t}\n}\n\nint main(){\n\tn = read();  m = read();\n\tfor(int i=1;i<=m;i++){\n\t\tu = read();  v = read();\n\t\tadd(u , v);\n\t}\n\tfor(int i = 1;i <= n ;++i) belong[i] = i;\n\tfor(int i=1;i<=n;i++)\n\t  if(!dfn[i])  tarjan(i);\n\t  \n\tfor(int i=1;i<=m;i++){\n\t\tif(belong[edge[i].from] != belong[edge[i].to])\n\t\t  in[belong[edge[i].to]]++; \n\t}\n\tfor(int i=1;i<=cnt;i++)\n\t  if(in[i] == 0)\n\t    ans++;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1536568657,
        "uid": 54635,
        "name": "Kevin_F",
        "ccfLevel": 0,
        "title": "\u6d88\u606f\u6269\u6563"
    },
    {
        "content": "- \u5148Tarjin\u8dd1scc\n\n- \u7136\u540e\u91cd\u6784DAG\n\n- \u62d3\u6251\u4e00\u4e0b\uff0c\u7136\u540eDFS\u67d3\u8272\u5373\u53ef\n\n```cpp\n//#pragma GCC optimization (\"O3\")\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#include<stack>\nusing std::stack;\n#define MAXN 100000\n#define MAXM 500000\nint n, m;\nint head[MAXN], next[MAXM], to[MAXM], tot;\nint scc[MAXN], stot;\ninline void addEdge(int u, int v) {\n    to[tot] = v;\n    next[tot] = head[u];\n    head[u] = tot++;\n}\nint sh[MAXN], sn[MAXM], st[MAXM], ss;\ninline void addSEdge(int u, int v) {\n    st[ss] = v;\n    sn[ss] = sh[u];\n    sh[u] = ss++;\n}\ninline int read() {\n    register int x = 0;\n    register char ch = getchar();\n    while (ch < '0' || ch > '9') ch = getchar();\n    while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); }\n    return x;\n}\nint dfn[MAXN], low[MAXN], ins[MAXN], idx;\nstack<int> stk;\ninline void Tarjan(int s) {\n    dfn[s] = low[s] = ++idx;\n    stk.push(s);\n    ins[s] = true;\n    for (int i = head[s]; i != -1; i = next[i]) {\n        if (!dfn[to[i]]) {\n            Tarjan(to[i]);\n            low[s] = std::min(low[s], low[to[i]]);\n        }\n        else if (ins[to[i]])low[s] = std::min(low[s], dfn[to[i]]);\n    }\n    if (low[s] == dfn[s]) {\n        int x;\n        do {\n            x = stk.top();\n            ins[x] = false;\n            stk.pop();\n            scc[x] = stot;\n        } while (x != s);\n        stot++;\n    }\n}\nint vst[MAXN];\nvoid dfs(int s) {\n    if (vst[s])return;\n    vst[s] = true;\n    for (int i = sh[s]; i != -1; i = sn[i]) {\n        dfs(st[i]);\n    }\n}\nint entry[MAXN], id[MAXN];\ninline int cmp(const int &a, const int &b) {\n    return entry[a] < entry[b];\n}\nint main() {\n    memset(scc, -1, sizeof(scc));\n    memset(head, -1, sizeof(head));\n    memset(next, -1, sizeof(next));\n    n = read();\n    m = read();\n    for (int i = 0; i < m; i++) {\n        int u = read() - 1;\n        int v = read() - 1;\n        addEdge(u, v);\n    }\n    for (int i = 0; i < n; i++) {\n        if (!dfn[i]) {\n            while (!stk.empty())stk.pop();\n            Tarjan(i);\n        }\n    }\n    memset(sh, -1, sizeof(sh));\n    memset(sn, -1, sizeof(sn));\n    for (int i = 0; i < n; i++) {\n        for (int j = head[i]; j != -1; j = next[j]) {\n            if (scc[i] != scc[to[j]]) {\n                addSEdge(scc[i], scc[to[j]]);\n                entry[scc[to[j]]]++;\n            }\n        }\n    }\n    for (int i = 0; i < stot; i++)id[i] = i;\n    std::sort(id, id + stot, cmp);\n    int res = 0;\n    for (int i = 0; i < stot; i++) {\n        if (!vst[id[i]]) {\n            res++;\n            dfs(id[i]);\n        }\n    }\n    printf(\"%d\\n\", res);\n    system(\"pause\");\n    return 0;\n}\n```",
        "postTime": 1503099783,
        "uid": 26282,
        "name": "__asm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "\u7f29\u70b9\u7684\u5178\u578b\u5e94\u7528\u9898\n\n\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u70b9\u53ef\u4ee5\u7b49\u6548\u4e3a\u540c\u4e00\u4e2a\u70b9\uff08\u4e92\u76f8\u76f4\u63a5\u6216\u95f4\u63a5\u8fde\u901a\uff09\uff0c\u6c42\u51fa\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\u540e\u904d\u5386\u4e00\u904d\uff0c\u628a\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5165\u5ea6\u6c42\u51fa\u6765\uff0c\u5165\u5ea6\u4e3a0\u7684\u5206\u91cf\u4e2a\u6570\u5c31\u662f\u7b54\u6848\n\n\n\u6ce8\u610f\uff1a\u8fd9\u9053\u9898\u4f1a\u5361\u5e38\u6570\uff08\u4e0d\u4f1a\u544a\u8bc9\u4f60\u4eec\u6211\u683d\u4e86\u4e00\u6b21(\u00b4\u0414` )\uff09\n\n\n\n```cpp\nvar\n  point,next,front:array[0..500000] of longint;\n  head,dfn,low,stack,scc,indegree:array[0..100000] of longint;\n  instack:array[0..100000] of boolean;\n  n,m,x,y,i,num,edge_num,ans,top,sccnum,p:longint;\nfunction min(a,b:longint):longint;\n  begin\n    if a<b then exit(a) else exit(b);\n  end;\nprocedure addedge(u,v:longint);\n  begin\n    inc(edge_num);\n    point[edge_num]:=v;\n    front[edge_num]:=u;\n    next[edge_num]:=head[u];\n    head[u]:=edge_num;\n  end;\nprocedure tarjan(u:longint);\n  var\n    p,root:longint;\n  begin\n    inc(num);dfn[u]:=num;low[u]:=num;\n    inc(top);stack[top]:=u;instack[u]:=true;\n    p:=head[u];\n    while p<>0 do\n      begin\n        if dfn[point[p]]=0 then\n          begin\n            tarjan(point[p]);\n            low[u]:=min(low[u],low[point[p]]);\n          end\n        else\n          if instack[point[p]] then\n            low[u]:=min(low[u],dfn[point[p]]);\n        p:=next[p];\n      end;\n    if dfn[u]=low[u] then\n      begin\n        inc(sccnum);\n        repeat\n          root:=stack[top];instack[root]:=false;dec(top);\n          scc[root]:=sccnum;//\u6807\u8bb0\u54ea\u4e9b\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\n        until root=u;\n      end;\n  end;\nbegin\n  read(n,m);\n  edge_num:=0;\n  for i:=1 to m do\n    begin\n      read(x,y);\n      addedge(x,y);\n    end;\n  sccnum:=0;\n  for i:=1 to n do\n    if dfn[i]=0 then\n      begin\n        top:=0;num:=0;\n        tarjan(i);\n      end;\n  for i:=1 to edge_num do\n    if scc[front[i]]<>scc[point[i]] then\n      inc(indegree[scc[point[i]]]);//\u5c31\u662f\u8fd9\u91cc\u4f1a\u5361\u5e38\u6570= =\n  ans:=0;\n  for i:=1 to sccnum do\n    if indegree[i]=0 then\n      inc(ans);\n  writeln(ans);\nend.\n```",
        "postTime": 1479349583,
        "uid": 5938,
        "name": "\u5c0f\u9ed1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u9762\u53ef\u77e5\u9053\uff0c\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u57ce\u5e02\u53ea\u8981\u6709\u4e00\u4e2a\u57ce\u5e02\u77e5\u9053\u6d88\u606f\u5c31\u53ef\u4ee5\u8ba9\u5176\u5b83\u57ce\u5e02\u4e5f\u77e5\u9053\u6d88\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u6709\u5411\u56fe\u7f29\u73af\uff0c\u5f97\u5230\u4e00\u4e2aDAG\uff0c\u90a3\u4e48\u5c31\u628a\u95ee\u9898\u7b80\u5316\u6210\u4e86\u6c42\u51faDAG\u4e2d\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u56e0\u4e3a\u5165\u5ea6\u4e3a0\u7684\u70b9\u5fc5\u987b\u5f97\u77e5\u9053\u6d88\u606f\uff0c\u5426\u5219\u6ca1\u6709\u6d88\u606f\u6765\u6e90\u3002\n\n\n\u5bf9\u4e8e\u7f29\u73af\uff0c\u7528tarjan\uff0c\u7edf\u8ba1\u5ea6\u6570O(e)\uff0c\u6240\u4ee5\u6548\u7387\u4e3aO(e+n)\n\n\u5982\u679c\u4e0d\u719f\u6089tarjan\uff0c\u8bf7\u79fb\u6b65google\u3002\n\n-------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <queue>\nusing namespace std;\nconst int MAXN=100005;\nvector<int>G[MAXN];\nint n,m,dfn[MAXN],ins[MAXN],Index=0,top=0,s[MAXN],cmp[MAXN],low[MAXN];\nint cnt=0;\nvoid read(int &n){\n    n=0;\n    char ch=getchar();\n    while(ch<'0' || ch>'9') ch=getchar();\n    do{\n        n=n*10+ch-'0';\n        ch=getchar();\n    }while(ch>='0' && ch<='9');\n    return;\n}\nvoid in_data(){\n    read(n);read(m);\n    for(int i=1;i<=m;i++){\n        int u,v;\n        read(u);read(v);\n        G[u].push_back(v);\n    }\n    return;\n}\nvoid tarjan(int u){\n    dfn[u]=low[u]=++Index;\n    s[top++]=u;ins[u]=1;\n    for(int i=0;i<G[u].size();i++){\n        int v=G[u][i];\n        if(!dfn[v]){\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else{\n            if(ins[v]){\n                low[u]=min(low[u],dfn[v]);\n            }\n        }\n    }\n    if(low[u]==dfn[u]){\n        ++cnt;\n        int i;\n        do{\n            i=s[--top];\n            ins[i]=0;\n            cmp[i]=cnt;\n        }while(i!=u);\n    }\n    return;\n}\nvoid solve_query(){\n    memset(dfn,0,sizeof(dfn));\n    memset(ins,0,sizeof(ins));\n    for(int i=1;i<=n;i++)\n        if(!dfn[i])\n            tarjan(i);\n    memset(ins,0,sizeof(ins));\n    for(int u=1;u<=n;u++){\n        for(int i=0;i<G[u].size();i++){\n            int v=G[u][i];\n            if(cmp[u]!=cmp[v]){\n                ++ins[cmp[v]];\n            }\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=cnt;i++)\n        if(ins[i]==0) ans++;\n    printf(\"%d\\n\",ans);\n    return;\n}\nint main(){\n    in_data();\n    solve_query();\n    return 0;\n}\n```",
        "postTime": 1476247430,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "\u672c\u9898\u4e3b\u8981\u8003\u5bdf\u9009\u624b\u5bf9\u56fe\u8bba\u7b97\u6cd5\u4e2dTarjan\u7b97\u6cd5\u7684\u638c\u63e1\u3002\n\n\u8bbe\u53d1\u5e03\u6d88\u606f\u7684\u96c6\u5408\u4e3aS\uff0c\u9898\u76ee\u7684\u610f\u601d\u662f\u8ba9\u6240\u6709\u7684\u57ce\u5e02\u90fd\u5f97\u5230\u6d88\u606f\uff0c\u90a3\u4e48\u57ce\u5e02\u5f97\u5230\u6d88\u606f\u6709\u4e24\u6761\u9014\u5f84\uff0c\u5728\u8be5\u57ce\u5e02\u53d1\u5e03\u6216\u8005\u4ece\u5176\u4ed6\u57ce\u5e02\u5f97\u77e5\u3002\n\n\u5bb9\u6613\u63a8\u5f97\u4e24\u6761\u5b9a\u7406\uff1a\n\n1.\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u4efb\u4e00\u57ce\u5e02\u5f97\u77e5\u6d88\u606f\u5373\u4ee3\u8868\u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u5f97\u77e5\u6d88\u606f\uff08\u6613\u8bc1\uff09\n\n2.\u5165\u5ea6\u4e3a0\u7684\u57ce\u5e02\uff08\u5f3a\u8fde\u901a\u5206\u91cf\uff09\u4e00\u5b9a\u8981\u52a0\u5165S\uff08\u6613\u8bc1\uff09\u3002\n\n3.\u6709\u5411\u65e0\u73af\u56fe\u4e2d\u53ea\u8981\u5728\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9\u53d1\u5e03\u6d88\u606f\uff0c\u5219\u6240\u6709\u70b9\u90fd\u53ef\u5f97\u5230\u6d88\u606f\u3002\n\n\u5b9a\u74063\u8bc1\u660e\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u7531\u8fd9\u4e2a\u70b9\u76841\u500d\u7956\u5148\uff0c2\u500d\u7956\u5148\u2026\u2026\u7ec4\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u7531\u4e8e\u56fe\u4e2d\u65e0\u73af\uff0c\u6240\u4ee5\u4efb\u4e00\u8282\u70b9\u4e0d\u53ef\u80fd\u5728\u5e8f\u5217\u4e2d\u51fa\u73b0\u4e24\u6b21\uff0c\u53c8\u56e0\u4e3a\u56fe\u4e2d\u8282\u70b9\u6709\u9650\uff0c\u6240\u4ee5\u5e8f\u5217\u5fc5\u5c06\u7ec8\u6b62\u5728\u67d0\u4e2a\u8282\u70b9\u4e0a\uff0c\u6613\u77e5\u8be5\u8282\u70b9\u5165\u5ea6\u4e3a0\uff0c\u6240\u4ee5\u4efb\u610f\u8282\u70b9\u90fd\u4e3a\u67d0\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u540e\u7ee7\u3002\n\n\u6545\u6211\u4eec\u53ef\u4ee5\u628a\u5f3a\u8054\u901a\u5206\u91cf\u7f29\u6210\u70b9\uff0c\u7136\u540e\u5728\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u53d1\u5e03\u6d88\u606f\u3002\u6c42\u51fa\u56fe\u4e2d\u5f3a\u8fde\u901a\u5206\u91cf\u53ef\u4ee5\u4f7f\u7528Tarjan\u7b97\u6cd5\uff0c\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n+e)\u3002\n\n\u53c2\u8003\u8d44\u6599\uff1a\n\nhttp://baike.baidu.com/view/4064042.htm\n",
        "postTime": 1390732715,
        "uid": 716,
        "name": "C_SUNSHINE",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    },
    {
        "content": "## \u672c\u6765\u5bf9\u4e8etarjan\u7f29\u70b9\u5c31\u4e0d\u5927\u719f\u7ec3\uff0c\u6a21\u677f\u8001\u6253\u9519\uff0c\u5c31\u6765\u5199\u7bc7\u9898\u89e3\u5de9\u56fa\u603b\u7ed3\u4e00\u4e0b\u3002\n### \u6b64\u9898\u601d\u8def\u5c31\u662ftarjan\u7f29\u70b9\u5b8c\u6bd5\u4ee5\u540e\u5224\u65ad\u6709\u51e0\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9\uff08\u8fd9\u4e9b\u70b9\u5c31\u662f\u5fc5\u987b\u8981\u4ea7\u751f\u6d88\u606f\u7684\u70b9\uff09\u3002\uff08\u7528tarjan\u7f29\u70b9\u5e94\u8be5\u5f88\u597d\u60f3\u5230\uff0c\u56e0\u4e3a\u9898\u76ee\u8bf4\u6709\u73af\u3002\uff09\u4ee3\u7801\u65c1\u8fb9\u7684\u6ce8\u91ca\u53ef\u4ee5\u5f88\u597d\u5730\u4f53\u73b0\u8bed\u53e5\u4f5c\u7528\u3002\n### \u5176\u4e2d\u5bf9\u4e8elow\u548cdfn\u6570\u7ec4\u7684\u4f5c\u7528\uff0c\u5728[\u8fd9\u91cc](https://www.luogu.org/recordnew/show/17447417)\u6211\u7528\u8be6\u7ec6\u63cf\u8ff0\uff0c\u6240\u4ee5\u6b64\u9898\u89e3\u5c31\u4e0d\u518d\u4ecb\u7ecd\u4e86\u3002\n\n### \u4e0b\u9762\u5c31\u653e\u4ee3\u7801\u3002 \n\n```cpp\n#include <bits/stdc++.h>\n#define memset(x) memset(x,0,sizeof(x))\nusing namespace std;\nconst int N=1e5+5,M=5e5+5;\nint n,m,u,v,cnt,now,top,col,ans,sum;\nint head[N],dfn[N],low[N],color[N],sta[N],de[N];\nstruct edge{int next,to;}e[M];\n\ninline void add(int u,int v) \n{\n\tcnt++;\t\n\te[cnt].next=head[u];\n\te[cnt].to=v;\n\thead[u]=cnt;\n}\n\ninline void tarjan(int u)\n{\n\tdfn[u]=low[u]=++now;\n\tsta[++top]=u;\n//\u6808\u5185\u8fdb\u884c\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u6808\u5185\u64cd\u4f5c\uff0c\u770b\u5230\u540e\u9762\uff0c\u5c31\u4f1a\u660e\u767d\u5b83\u7528\u5904\u4e86\u3002\n\tfor (register int i=head[u]; i; i=e[i].next)\n\t{\n\t\tif (!dfn[e[i].to])\n\t\t{\t\n\t\t\ttarjan(e[i].to);\n\t\t\tlow[u]=min(low[u],low[e[i].to]);\n\t\t}\n\t\telse if (!color[e[i].to])//\u53ea\u6709\u5f53e[i].to\u7684color\u672a\u6807\u8bb0\uff08\u5373\uff0ce[i].to\u6682\u65f6\u4e0d\u5c5e\u4e8e\u5df2\u5f97\u5230\u7684\u4efb\u610f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff09\u65f6\uff0c\u624d\u53ef\u4ee5\u8fdb\u884clow[u]\u7684\u53d6min\uff0c\u8fd9\u5e94\u8be5\u662f\u663e\u7136\u7684\u5427\u3002\n\t\tlow[u]=min(low[u],dfn[e[i].to]);\n\t}\n//\u5982\u679clow[u]=dfn[u]\uff0c\u5219\u8bf4\u660eu\u7684\u5b50\u6811\u8282\u70b9\u5df2\u7ecf\u65e0\u6cd5\u56de\u6eaf\u5230\u524d\u9762\u53bb\u4e86\uff0c\u6240\u4ee5u\u548c\u5b83\u7684\u5b50\u6811\u8282\u70b9\u5c31\u6210\u4e86\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\tif (low[u]==dfn[u])\n\t{\n\tcolor[u]=++col;\n\t\twhile (sta[top]!=u) color[sta[top]]=col,top--;\n\ttop--;\n//\u5904\u7406\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u628acol\u603b\u6570\u7d2f\u52a0\uff0c\u7136\u540e\u628au\u548c\u5b83\u7684\u5b50\u6811\u7684color\u90fd\u6807\u8bb0\u4e3a\u6b64\u6b21\u7684col\u3002 \u8fd9\u4e2a\u64cd\u4f5c\u662f\u901a\u8fc7\u6808\u6765\u5b9e\u73b0\u7684\uff0c\u5bf9\u4e8e\u6808\u5185\u7684\u5177\u4f53\u64cd\u4f5c\uff0c\u6a21\u62df\u4e00\u4e0b\u5c31\u61c2\u4e86\u3002\n\t}\n}\n\nint main(){\nmemset(head); memset(dfn);\n\tscanf(\"%d%d\",&n,&m);\t\n\tfor (register int i=1; i<=m; ++i) \n\t{\n\tscanf(\"%d%d\",&u,&v); \n\tif (u!=v) add(u,v);//\u6ce8\u610f\uff0c\u53ef\u80fd\u5b58\u5728\u81ea\u73af,\u6240\u4ee5\u53ea\u5f53u!=v\u65f6\u624d\u52a0\u8fb9\n//\u5bf9\u4e8e\u91cd\u8fb9\uff0c\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u56e0\u4e3a\u91cd\u8fb9\u53ea\u4f1a\u5bf9\u8def\u5f84\u8ba1\u6570\u4ea7\u751f\u5f71\u54cd\n\t}\n\tfor (register int i=1; i<=n; ++i) if (!dfn[i]) tarjan(i);\n//\u5bf9\u4e8e\u6ca1\u6709\u904d\u5386\u8fc7\u7684\u70b9\uff0c\u8fdb\u884ctarjan\n\tfor (register int i=1; i<=n; ++i)\n\tfor (register int j=head[i]; j; j=e[j].next)\n\tif (color[i]!=color[e[j].to]) de[color[e[j].to]]++;\n//\u6bcf\u6b21\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u518d\u679a\u4e3e\u8fd9\u4e2a\u70b9\u6307\u5411\u7684\u5404\u4e2a\u70b9\uff0c\u82e5\u4e24\u70b9\u7684color\u4e0d\u540c\uff0c\u5219\u8bf4\u660e\u5b83\u4eec\u4e24\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u6240\u4ee5\u5c31\u628a\u4ee3\u8868\u5165\u5ea6\u7684\u70b9\u503c\u52a01\u3002\n\tfor (register int i=1; i<=col; ++i) if (!de[i]) ans++;\n//\u5982\u679c\u5165\u5ea6\u4e3a0\uff0c\u5219ans++\nprintf(\"%d\\n\",ans);\nreturn 0;\n}\n```",
        "postTime": 1553243313,
        "uid": 73436,
        "name": "\u8bf4\u597d\u4e0d\u54ed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2002 \u3010\u6d88\u606f\u6269\u6563\u3011"
    }
]