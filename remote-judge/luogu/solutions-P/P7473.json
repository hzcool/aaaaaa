[
    {
        "content": "\u6211\u4eec\u8003\u8651\u666e\u901a\u7684\u66b4\u529b\u600e\u4e48\u505a\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u66b4\u641c\uff0c\u7528\u4e00\u4e2a\u5f62\u5982 $(x,y,a,b)$ \u7684\u72b6\u6001\uff0c\u8868\u793a\u7b2c\u4e00\u4e2a\u4eba\u5728 $(x,y)$ \uff0c\u7b2c\u4e8c\u4e2a\u4eba\u5728 $(a,b)$ \u7684\u4f4d\u7f6e\u4e0a\u3002\u7136\u540e\u679a\u4e3e\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u66b4\u529b\u8d70\uff0c\u76f4\u5230\u78b0\u5230\u969c\u788d\u4e3a\u6b62\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4f18\u5316\u66b4\u641c\uff1a\n\n$1:$ \u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u4e0b\u5de6\u53f3\u7684\u969c\u788d\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5728\u641c\u7d22\u7684\u65f6\u5019\u53ef\u4ee5 $O(1)$ \u8df3\u3002\n\n$2:$ \u8003\u8651\u6bcf\u4e2a $(x,y,a,b)$ \u7684\u72b6\u6001\u4e92\u4e0d\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bb0\u5fc6\u5316\u4e00\u4e0b\u3002\n\n$3:$ \u518d\u8003\u8651\u5982\u4f55\u89e3\u51b3\u4e0a\u9762\u8fd9\u4e2a\u72b6\u6001\u8bb0\u5fc6\u5316\u6240\u9700\u8981\u7684\u7a7a\u95f4\u8fc7\u5927\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u91cd\u529b\u65b9\u5411\u94a6\u5b9a\u5b8c\u540e\uff0c\u7403\u5fc5\u5b9a\u662f\u5728\u4e00\u4e2a\u969c\u788d\u7269\u7684\u76f8\u90bb\u683c\u5b50\u4e0a\u3002\u6240\u4ee5\u6211\u4eec\u5148\u62a0\u51fa\u6240\u6709\u969c\u788d\u7269\uff0c\u7136\u540e\u8bbe $(x,y,1/2/3/4)$ \u8868\u793a\u7b2c\u4e00\u4e2a\u4eba\u5728\u7b2c $x$ \u4e2a\u969c\u788d\u7269\u7684\u4e0a\u4e0b\u5de6\u53f3\uff0c\u7b2c\u4e8c\u4e2a\u4eba\u5728\u7b2c $y$ \u4e2a\u969c\u788d\u7269\u7684\u4e0a\u4e0b\u5de6\u53f3\uff0c\u51cf\u5c11\u4e86\u7a7a\u95f4\u7684\u9700\u6c42\u91cf\u3002\n\n\u6700\u540e\uff0c\u5bb9\u6613\u53d1\u73b0\u6700\u591a\u53ea\u6709 $4(n-1)+m$ \u4e2a\u969c\u788d\u7269\uff0c\u56e0\u6b64\u969c\u788d\u7269\u9644\u8fd1\u7684\u683c\u5b50\u6700\u591a\u53ea\u6709 $[4n+4m]\\times 4$ \u4e2a\uff0c\u90a3\u4e48\u603b\u72b6\u6001\u6570\u53ea\u6709 $16[4n+4m]^2$ \u4e2a\uff0c\u6700\u591a $25000000$ \u3002\n\n\u4f46\u662f\u5982\u679c\u76f4\u63a5\u8bb0\u5fc6\u5316\u641c\u7d22\u4f1a\u9047\u5230\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u786e\u5b9a\u8f6c\u79fb\u65b9\u5411\uff1f\n\n\u8fd9\u4e2a\u95ee\u9898\u5c31\u975e\u5e38\u96be\u641e\u4e86\uff0c\u81f3\u5c11\u9700\u8981\u7ed9\u6e90\u4ee3\u7801\u4e58\u4e0a 4 \u500d\u7684\u5e38\u6570\uff0c\u663e\u7136\u4e0d\u591f\u4f18\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u628a\u8bb0\u5fc6\u5316\u641c\u7d22\u6362\u6389\uff0c\u6b63\u96be\u5219\u53cd\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u539f\u6765\u7684\u72b6\u6001\u8f6c\u79fb\u56fe\u53d8\u6210\u5b83\u7684\u53cd\u56fe\uff0c\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u8fd9\u5c31\u662f\u4e00\u4e2a\u591a\u6e90\u70b9\u7684\u6700\u77ed\u8def\u95ee\u9898\uff0c\u6c42\u6bcf\u4e2a\u70b9\u5230\u6700\u8fd1\u7684\u90a3\u4e2a\u6e90\u70b9\u7684\u6700\u77ed\u8def\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e1c\u897f\u5c31\u53ef\u4ee5\u7528 bfs \u6765\u9884\u5904\u7406\uff0c\u5904\u7406\u8fc7\u7a0b\u4e2d\u5ffd\u7565\u8fd4\u7956\u8fb9\u5373\u53ef\u3002",
        "postTime": 1616903228,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7473 [NOI Online 2021 \u5165\u95e8\u7ec4] \u91cd\u529b\u7403"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u4e8e\u4e2a\u4eba\u535a\u5ba2\uff1a[Link](https://www.watertomato.com/p7473-noi-online-2021-%e5%85%a5%e9%97%a8%e7%bb%84-%e9%87%8d%e5%8a%9b%e7%90%83-%e9%a2%98%e8%a7%a3/)\n## \u9898\u610f\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P7473)\n\n\u7ed9\u51fa\u4e00\u4e2a\u6b63\u65b9\u5f62\u533a\u57df\uff0c\u5176\u4e2d\u6709\u4e00\u4e9b\u70b9\u662f\u969c\u788d\u3002\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e24\u4e2a\u7403\u7684\u521d\u59cb\u4f4d\u7f6e\uff0c\u8be2\u95ee\u81f3\u5c11\u9700\u8981\u6539\u53d8\u51e0\u6b21\u91cd\u529b\u624d\u80fd\u4f7f\u4e24\u7403\u76f8\u9047\u3002\n\n## \u89e3\u6790\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u5b9e\u9645\u4e0a\u4ec5\u6709\u969c\u788d\u5468\u56f4\uff08\u5305\u62ec\u5730\u56fe\u8fb9\u754c\uff09\u4e0a\u7684\u70b9\u662f\u6709\u610f\u4e49\u7684\uff08\u56e0\u4e3a\u4efb\u4f55\u4f4d\u7f6e\u7684\u7403\u7ecf\u8fc7\u4e00\u6b21\u64cd\u4f5c\u4e00\u5b9a\u4f1a\u5230\u8fd9\u4e9b\u70b9\uff0c\u663e\u7136\u4e00\u6b21\u64cd\u4f5c\u662f\u53ef\u4ee5\u679a\u4e3e\u7684\uff09\u3002\u6211\u4eec\u5b9a\u4e49\u6bcf\u4e00\u7ec4\u6709\u610f\u4e49\u7684 $(x,y)$ \u4e3a\u4e00\u4e2a\u72b6\u6001\uff0c\u663e\u7136\u6700\u591a\u72b6\u6001\u6570\u4e3a $2000$ \u5de6\u53f3\uff0c\u800c\u4e24\u4e2a\u7403\u7684\u72b6\u6001\u79cd\u6570\u5c31\u4e3a $4 \\times 10^6$\uff0c\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5148\u5c06\u6240\u6709\u6709\u610f\u4e49\u7684\u70b9\u5bf9 $(x,y)$ \u90fd\u8fdb\u884c\u7f16\u53f7\uff0c\u4f5c\u4e3a\u8fd9\u4e2a\u70b9\u7684\u72b6\u6001\u53f7\u3002\u7136\u540e\u6211\u4eec\u9884\u5904\u7406\u51fa\u4ece\u6bcf\u4e00\u70b9\u8fdb\u884c\u67d0\u4e00\u65b9\u5411\u7684\u64cd\u4f5c\u540e\u6240\u5230\u8fbe\u7684\u72b6\u6001\u6570\u3002\u8fd9\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline bool check(int i,int j){\n\tif(a[i-1][j]||a[i+1][j]||a[i][j-1]||a[i][j+1]) return true;\n\treturn false;\n}\n\u2026\u2026\nscanf(\"%d%d%d\",&n,&m,&Q);\nfor(int i=1,x,y;i<=m;i++){\n    scanf(\"%d%d\",&x,&y);\n    a[x][y]=1;//\u6807\u8bb0\u969c\u788d\n}\nfor(int i=1;i<=n;i++) a[0][i]=a[n+1][i]=a[i][0]=a[i][n+1]=1;//\u6807\u8bb0\u969c\u788d\nfor(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++)\n        if(!a[i][j]&&check(i,j)) id[i][j]=++tot;//\u5bf9\u6709\u610f\u4e49\u7684\u70b9\u8fdb\u884c\u7f16\u53f7\nfor(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++) \n        t[i][j][0]=a[i][j-1]?id[i][j]:t[i][j-1][0],\n\t\tt[i][j][1]=a[i-1][j]?id[i][j]:t[i-1][j][1];\nfor(int i=n;i;i--)\n    for(int j=n;j;j--)\n        t[i][j][2]=a[i][j+1]?id[i][j]:t[i][j+1][2],\n\t\tt[i][j][3]=a[i+1][j]?id[i][j]:t[i+1][j][3];\n\t\t//\u5206\u522b\u5904\u7406\u51fa\u4ece (i,j) \u5411\u5404\u4e2a\u65b9\u5411\u8d70\u6240\u5230\u8fbe\u7684\u70b9\u7684\u72b6\u6001\u53f7\n```\n\n\u63a5\u7740\u6211\u4eec\u53d1\u73b0\u4e24\u4e2a\u5c0f\u7403\u6700\u7ec8\u76f8\u9047\uff0c\u76f8\u5f53\u4e8e\u662f\u4e24\u4e2a\u7403\u6240\u5728\u7684\u70b9\u7f16\u53f7\u76f8\u540c\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4ece\u7ec8\u70b9\u5f00\u59cb\u9006\u63a8\u3002\u90a3\u4e48\u600e\u4e48\u8f6c\u79fb\u72b6\u6001\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e00\u4e2a\u72b6\u6001\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u72b6\u6001 $i$ \u53ef\u4ee5\u8f6c\u79fb\u5230\u72b6\u6001 $j$\uff0c\u6211\u4eec\u5c31\u4ece $j$ \u5411 $i$ \u8fde\u4e00\u6761\u8fb9\uff08\u56e0\u4e3a\u540e\u8fb9\u8981\u9006\u63a8\uff0c\u6240\u4ee5\u5efa\u53cd\u8fb9\uff09\u3002\u540c\u6837\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6709\u610f\u4e49\u7684\u70b9\u4e4b\u95f4\u8fde\u8fb9\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline void add(int u,int v,int p){\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u][p];\n\thead[u][p]=cnt;//\u6bcf\u4e2a\u70b9\u7684\u56db\u79cd\u72b6\u6001\u90fd\u9700\u8981\u4e00\u4e2a head\uff0c\u56e0\u4e3a\u8f6c\u79fb\u65f6\u9700\u8981\u679a\u4e3e\u65b9\u5411\n}\n\u2026\u2026\nfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n;j++)\n\t\tif(id[i][j]) for(int k=0;k<=3;k++) add(t[i][j][k],id[i][j],k);//\u5efa\u53cd\u8fb9\n```\n\n\u63a5\u7740\uff0c\u6211\u4eec\u5b9a\u4e49 $dis_{i,j}$ \u4e3a\u72b6\u6001\u4e3a $i,j$ \u7684\u4e24\u4e2a\u5c0f\u7403\u6240\u60f3\u8981\u76f8\u9047\u6240\u9700\u8981\u7684\u64cd\u4f5c\u6570\u3002\u5b9a\u4e49 $dis_{i,i}=1$\uff08\u56e0\u4e3a\u5230\u65f6\u5019\u8981\u6d88\u8017\u4e00\u6b65\u6765\u679a\u4e3e\u7b2c\u4e00\u6b65\uff0c\u5e72\u8106\u76f4\u63a5\u628a\u521d\u503c\u8d4b\u503c\u4e3a $1$\uff0c\u7136\u540e\u7279\u5224\u76f8\u7b49\u7684\u60c5\u51b5\u66f4\u4e3a\u65b9\u4fbf\uff09\u3002\u7136\u540e\u6211\u4eec\u5728\u8fd9\u5f20\u56fe\u4e0a\u8fdb\u884c bfs\uff0c\u6bcf\u6b21\u679a\u4e3e $i,j$ \u4e24\u4e2a\u72b6\u6001\u5206\u522b\u6240\u80fd\u5230\u8fbe\u7684\u5176\u4ed6\u72b6\u6001\u5e76\u66f4\u65b0\u6240\u5230\u8fbe\u7684\u8fd9\u4e24\u4e2a\u72b6\u6001\u95f4\u7684\u8ddd\u79bb\u3002\u7531\u4e8e\u4e24\u4e2a\u7403\u7684\u72b6\u6001\u79cd\u6570\u4ec5\u4e3a $4 \\times 10^6$\uff0c\u4e14\u6bcf\u4e00\u4e2a\u72b6\u6001\u81f3\u591a\u521b\u9020 $4$ \u6761\u8fb9\uff0c\u6240\u4ee5 bfs \u7684\u590d\u6742\u5ea6\u662f\u53ef\u63a5\u53d7\u7684\u3002\u8fd9\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nqueue<pair<int,int> > q;\nfor(int i=1;i<=tot;i++)\n    for(int j=1;j<=tot;j++)\n        dis[i][j]=1e9+7;\nfor(int i=1;i<=tot;i++) q.push(make_pair(i,i)),dis[i][i]=1;//\u8d4b\u521d\u503c\u5e76 push \u8fdb\u961f\u5217\nwhile(!q.empty()){\n    pair<int,int> x=q.front();q.pop();\n    for(int k=0;k<=3;k++){//\u679a\u4e3e\u65b9\u5411\n        for(int i=head[x.first][k];i;i=e[i].nxt){\n            for(int j=head[x.second][k];j;j=e[j].nxt){//\u679a\u4e3e\u5230\u8fbe\u7684\u72b6\u6001\n                int u=e[i].to,v=e[j].to;\n                if(dis[u][v]==1e9+7){\n                    dis[u][v]=dis[x.first][x.second]+1,\n                    q.push(make_pair(u,v));//\u66f4\u65b0\u5e76 push \u8fdb\u961f\u5217\n                }\n            }\n        }\n    }\n}\n```\n\n\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u91cd\u5408\u8f93\u51fa $0$\uff0c\u5426\u5219\u679a\u4e3e\u4e24\u4e2a\u7403\u4e00\u6b65\u64cd\u4f5c\u540e\u7684\u72b6\u6001\u5e76\u53d6\u6700\u5c0f\u503c\uff0c\u5982\u679c\u8fd9\u4e2a\u7ed3\u679c\u8fc7\u5927\u7684\u8bdd\u8bf4\u660e\u8fd9\u4e24\u4e2a\u72b6\u6001\u95f4\u6ca1\u6709\u901a\u8def\uff0c\u8f93\u51fa $-1$\uff0c\u5426\u5219\u8f93\u51fa\u8fd9\u4e2a\u7ed3\u679c\u3002\u8fd9\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline int getans(int X1,int Y1,int X2,int Y2){\n\treturn min(dis[t[X1][Y1][0]][t[X2][Y2][0]],min(dis[t[X1][Y1][1]][t[X2][Y2][1]],min(dis[t[X1][Y1][2]][t[X2][Y2][2]],dis[t[X1][Y1][3]][t[X2][Y2][3]])));\n}\n\u2026\u2026\nfor(int i=1,X1,X2,Y1,Y2;i<=Q;i++){\n    scanf(\"%d%d%d%d\",&X1,&Y1,&X2,&Y2);\n    if(X1==X2&&Y1==Y2) printf(\"0\\n\");//\u91cd\u5408\n    else{\n        int ans=getans(X1,Y1,X2,Y2);\n        if(ans>=1e9) printf(\"-1\\n\");//\u65e0\u89e3\n        else printf(\"%d\\n\",ans);//\u6709\u89e3\n    }\n}\n```\n\n\u81f3\u6b64\uff0c\u8fd9\u9053\u9898\u5c31\u88ab\u6211\u4eec\u89e3\u51b3\u4e86\u3002\u5316\u70b9\u4e3a\u72b6\u6001\uff0c\u4ee5\u53ca\u5728\u72b6\u6001\u4e4b\u95f4\u8fdb\u884c\u8fde\u8fb9\u4ee5\u4fbf\u4e8e\u8f6c\u79fb\u7684\u64cd\u4f5c\u975e\u5e38\u5de7\u5999\uff0c\u76f4\u63a5\u601d\u8003\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=305,M=2005,MN=1e5+5;\nstruct edge{\n\tint to,nxt;\n}e[MN];\nint a[N][N],dis[M][M],id[N][N],t[M][M][4];\nint n,m,Q,cnt,head[M][4],tot;\ninline void add(int u,int v,int p){\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u][p];\n\thead[u][p]=cnt;\n}\ninline bool check(int i,int j){\n\tif(a[i-1][j]||a[i+1][j]||a[i][j-1]||a[i][j+1]) return true;\n\treturn false;\n}\ninline int getans(int X1,int Y1,int X2,int Y2){\n\treturn min(dis[t[X1][Y1][0]][t[X2][Y2][0]],min(dis[t[X1][Y1][1]][t[X2][Y2][1]],min(dis[t[X1][Y1][2]][t[X2][Y2][2]],dis[t[X1][Y1][3]][t[X2][Y2][3]])));\n}\nqueue<pair<int,int> > q;\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&Q);\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\ta[x][y]=1;\n\t}\n\tfor(int i=1;i<=n;i++) a[0][i]=a[n+1][i]=a[i][0]=a[i][n+1]=1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(!a[i][j]&&check(i,j)) id[i][j]=++tot;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++) \n\t\t\tt[i][j][0]=a[i][j-1]?id[i][j]:t[i][j-1][0],\n\t\t\tt[i][j][1]=a[i-1][j]?id[i][j]:t[i-1][j][1];\n\tfor(int i=n;i;i--)\n\t\tfor(int j=n;j;j--)\n\t\t\tt[i][j][2]=a[i][j+1]?id[i][j]:t[i][j+1][2],\n\t\t\tt[i][j][3]=a[i+1][j]?id[i][j]:t[i+1][j][3];\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(id[i][j]) for(int k=0;k<=3;k++) add(t[i][j][k],id[i][j],k);\n\tfor(int i=1;i<=tot;i++)\n\t\tfor(int j=1;j<=tot;j++)\n\t\t\tdis[i][j]=1e9+7;\n\tfor(int i=1;i<=tot;i++) q.push(make_pair(i,i)),dis[i][i]=1;\n\twhile(!q.empty()){\n\t\tpair<int,int> x=q.front();q.pop();\n\t\tfor(int k=0;k<=3;k++){\n\t\t\tfor(int i=head[x.first][k];i;i=e[i].nxt){\n\t\t\t\tfor(int j=head[x.second][k];j;j=e[j].nxt){\n\t\t\t\t\tint u=e[i].to,v=e[j].to;\n\t\t\t\t\tif(dis[u][v]==1e9+7){\n\t\t\t\t\t\tdis[u][v]=dis[x.first][x.second]+1,\n\t\t\t\t\t\tq.push(make_pair(u,v));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1,X1,X2,Y1,Y2;i<=Q;i++){\n\t\tscanf(\"%d%d%d%d\",&X1,&Y1,&X2,&Y2);\n\t\tif(X1==X2&&Y1==Y2) printf(\"0\\n\");\n\t\telse{\n\t\t\tint ans=getans(X1,Y1,X2,Y2);\n\t\t\tif(ans>=1e9) printf(\"-1\\n\");\n\t\t\telse printf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1617282322,
        "uid": 195229,
        "name": "water_tomato",
        "ccfLevel": 7,
        "title": "P7473 [NOI Online 2021 \u5165\u95e8\u7ec4] \u91cd\u529b\u7403 \u9898\u89e3"
    },
    {
        "content": "# [P7473 \u91cd\u529b\u7403](https://www.luogu.com.cn/problem/P7473) \u9898\u89e3\n\n**update1\uff1a\u4fee\u6539\u4e86\u4e00\u4e9b latex \u7684\u95ee\u9898\u3002**\n\n**update2\uff1a\u4fee\u6539\u4e86\u5173\u4e8e \u201c/\u201d \u7684\u6b67\u4e49\u95ee\u9898**\n\n------------\n## \u524d\u7f6e\u77e5\u8bc6\n\n[bfs \u57fa\u7840](https://www.luogu.com.cn/blog/5y2d1n/guan-yu-guang-sou)\n\n[\u56fe\u8bba\u57fa\u7840](https://www.luogu.com.cn/blog/5y2d1n/guan-yu-tu-lun)\n\n## \u9898\u89e3\u6b63\u6587\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $n\\times n$ \u7684\u5730\u56fe\uff0c\u91cc\u9762\u6709\u82e5\u5e72\u969c\u788d\u7269\u3002\n\n\u53c8\u7ed9\u5b9a $q$ \u5bf9\u5c0f\u7403\u3002\u5bf9\u4e8e\u6bcf\u5bf9\u5c0f\u7403\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u9009\u5b9a\u4e00\u4e2a\u65b9\u5411\uff0c\u4f7f\u5c0f\u7403\u4e00\u76f4\u5411\u8fd9\u4e2a\u65b9\u5411\u6eda\u52a8\u76f4\u5230\u78b0\u5230\u969c\u788d\u7269\u4e3a\u6b62\u3002\n\n\u6c42\u51fa\u6bcf\u5bf9\u5c0f\u7403\u5230\u8fbe\u540c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4e24\u4e2a\u5c0f\u7403\u7684\u521d\u59cb\u4f4d\u7f6e\u76f8\u540c\uff0c\u8f93\u51fa $0$\uff1b\u5982\u679c\u4e24\u4e2a\u5c0f\u7403\u65e0\u6cd5\u5230\u8fbe\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8f93\u51fa $-1$\u3002\n\n### \u65b9\u6cd5\u8ba8\u8bba\n\n\u9996\u5148\u770b\u5230\u8fd9\u79cd \u201c\u5730\u56fe\u9898\u201d\uff0c\u5f88\u81ea\u7136\u7684\u4e00\u4e2a\u5ff5\u5934\u5c31\u662f\u7528\u641c\u7d22\u6765\u505a\u3002\n\n\u4f46\u662f\u7531\u4e8e $n\\le 250$ \u4e14 $q\\le 10^5$ \uff0c\u6240\u4ee5\u4fbf\u518d\u6b21\u5f88\u81ea\u7136\u7684\u56e0\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u800c\u6253\u6d88\u4e86\u8fd9\u4e2a\u5ff5\u5934\u3002\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c$m\\le 250$\u3002\u8fd9\u8bf4\u660e\u4e86\u4ec0\u4e48\uff1f\u8bf4\u660e\u6700\u591a\u53ea\u6709 $250$ \u4e2a\u969c\u788d\u7269\u3002\n\n\u7531\u4e8e\u5c0f\u7403\u9047\u5230\u969c\u788d\u7269\u624d\u4f1a\u505c\u6b62\u8fd0\u52a8\uff0c\u6240\u4ee5\u5c0f\u7403\u53ea\u4f1a\u505c\u5230\u5730\u56fe\u5185\u90e8\u7684\u8fb9\u7f18\u6216\u8005\u662f\u969c\u788d\u7269\u7684\u56db\u5468\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5355\u4e2a\u5c0f\u7403\u7684\u72b6\u6001\u6700\u591a\u53ea\u6709 $4n+4m=2000$ \u4e2a\uff0c\u4e24\u4e2a\u5c0f\u7403\u7684\u72b6\u6001\u603b\u548c\u4e5f\u5c31\u53ea\u6709 $2000^2=4\\times 10^6$ \u4e2a\u3002\n\n\u90a3\u4e48\u53e6\u4e00\u4e2a\u5ff5\u5934\u518d\u6b21\u51fa\u73b0\u4e86\u2014\u2014\u5982\u679c\u6211\u4eec\u628a\u6240\u6709\u72b6\u6001\u6784\u6210\u4e00\u4e2a\u56fe\uff0c\u8fd0\u7528\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u505a\u51fa\u8fd9\u9053\u9898\u5462\uff1f\n\n\u4e8e\u662f\uff0c\u4fbf\u6709\u4e86\u4e0b\u9762\u8fd9\u4e9b\u64cd\u4f5c\u3002\n\n### \u5206\u6b65\u8bb2\u89e3\n\n#### 1. \u8f93\u5165\u5e76\u6807\u8bb0\n\n\u8f93\u5165\u9636\u6bb5\uff0c\u6211\u4eec\u8003\u8651\u5efa\u7acb\u4e24\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u662f $ma$ \u548c $can$\uff0c\u8868\u793a\u8be5\u4f4d\u7f6e\u662f\u5426\u6709\u969c\u788d\u7269\u4ee5\u53ca\u8be5\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u505c\u7559\u5c0f\u7403\uff08\u5728\u969c\u788d\u7269\u56db\u5468\u6216\u5730\u56fe\u8fb9\u7f18\uff09\u3002\n\n```cpp\nn=read(),m=read(),q=read();\nfor (int i=1;i<=n;i++)\n\tfor (int j=1;j<=n;j++)//\u5c06\u6ca1\u6709\u969c\u788d\u7269\u7684\u5750\u6807\u6807\u4e3a1\u53ef\u4ee5\u9632\u6b62\u8d8a\u754c\n\t\tma[i][j]=1;\nfor (int i=1;i<=m;i++){\n\tint x=read(),y=read();\n\tma[x][y]=0;//\u6807\u8bb0\u969c\u788d\u7269\n\tfor (int j=0;j<4;j++){\n\t\tint xx=x+dx[j],yy=y+dy[j];\n\t\tcan[xx][yy]=1;//\u6807\u8bb0\u53ef\u884c\u70b9\n\t}\n}\nfor (int i=1;i<=n;i++) can[i][1]=can[i][n]=can[n][i]=can[1][i]=1;//\u6807\u8bb0\u5730\u56fe\u8fb9\u7f18\n```\n\n#### 2. \u9884\u5904\u7406\n\n\u56e0\u4e3a\u8be2\u95ee\u6b21\u6570 $q\\le 10^5$\uff0c\u800c\u65f6\u95f4\u590d\u6742\u5ea6\u663e\u7136\u652f\u6491\u4e0d\u4e86\u8fd9\u4e2a\u6570\u7ec4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5355\u6b21\u8be2\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e00\u5b9a\u662f\u5f88\u4f4e\u7684\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u9884\u5904\u7406\u4e86\u3002\n\n\u8003\u8651\u9884\u5148\u5904\u7406\u597d\u5730\u56fe\u4e0a\u6bcf\u4e00\u4e2a\u5750\u6807\u5411\u56db\u5468\u6eda\u52a8\u4f1a\u8d70\u5230\u7684\u5750\u6807\uff0c\u7528 $ne$ \u6570\u7ec4\u50a8\u5b58\u3002\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u5411\u56db\u4e2a\u65b9\u5411\u6eda\u52a8\u4e00\u683c\u5750\u6807\u7684\u53d8\u5316\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8bbe\u7f6e\u4e00\u5bf9\u65b9\u5411\u6570\u7ec4 $dx$\uff0c$dy$\uff0c\u4e24\u4e2a\u6570\u7ec4\u5bf9\u5e94\u4e0b\u8868\u7684\u5185\u5bb9\u5373\u4e3a\u5411\u67d0\u4e2a\u65b9\u5411\u79fb\u52a8\u4e00\u683c\u540e $x$\uff0c$y$ \u5750\u6807\u7684\u53d8\u5316\u3002\n\n```cpp\n//\u65b9\u5411\u6570\u7ec4\nint dx[4]={0,1,0,-1};\nint dy[4]={1,0,-1,0};\n//\u5206\u522b\u8868\u793a \u53f3 \u4e0b \u5de6 \u4e0a\n```\n```cpp\n//\u67e5\u8be2\u51fd\u6570\nint find(int x,int y,int f){//\u5bfb\u627e\u5750\u6807\u4e3ax,y\u7684\u70b9\u5411\u65b9\u5411f\uff08\u65b9\u5411\u6570\u7ec4\u7684\u5bf9\u5e94\u4e0b\u6807\uff09\u6eda\u52a8\u540e\u5230\u8fbe\u7684\u5750\u6807\n\tint xx=x+dx[f],yy=y+dy[f];//\u6c42\u51fa\u79fb\u52a8\u540e\u7684\u5750\u6807\n\tif (ma[xx][yy]){\n\t\tne[x][y][f]=find(xx,yy,f);//\u9012\u5f52\u987a\u5e26\u6c42\u51fa\u8def\u4e0a\u7684\u5750\u6807\u5411\u8be5\u65b9\u5411\u6eda\u52a8\u540e\u5230\u8fbe\u7684\u5750\u6807\n\t\treturn ne[x][y][f];\n\t}else ne[x][y][f]=(f==0||f==2)?y:x;//\u65e0\u6cd5\u518d\u5411\u524d\u4e86\u5c31\u66f4\u65b0\n   //\u5982\u679cf=0,2\uff0c\u8bf4\u660e\u662f\u5411\u53f3\u5411\u5de6\uff0c\u53ea\u4f1a\u6539\u53d8y\u5750\u6807\uff0c\u6240\u4ee5\u5c06ne\u8d4b\u503c\u4e3ay\uff1b\u540c\u7406\uff0c\u5f53f=1,3\u65f6\uff0c\u5c06ne\u8d4b\u503c\u4e3ax.\n\treturn (f==0||f==2)?y:x;\n}\n```\n```cpp\n//\u4e3b\u51fd\u6570\u5185\nfor (int i=1;i<=n;i++)\n\tfor (int j=1;j<=n;j++)\n\t\tfor (int f=0;f<=1;f++)\n\t\t\tif (ma[i][j]&&!ne[i][j][f])//\u5982\u679c\u4e0d\u662f\u969c\u788d\u7269\u4e14\u6ca1\u6709\u66f4\u65b0\u8fc7ne\u6570\u7ec4\n\t\t\t\tne[i][j][f]=find(i,j,f);\nfor (int i=n;i>=1;i--)\n\tfor (int j=n;j>=1;j--)\n\t\tfor (int f=2;f<=3;f++)\n\t\t\tif (ma[i][j]&&!ne[i][j][f])\n\t\t\t\tne[i][j][f]=find(i,j,f);\n```\n**\u8865\u5145\uff1a** \u4e3a\u4ec0\u4e48\u8981\u6b63\u7740\u904d\u5386\u4e00\u8fb9\u518d\u5012\u7740\u904d\u5386\u4e00\u904d\u5462\uff1f\n\n\u7531\u4e8e\u6211\u4eec\u5728\u4f7f\u7528 find \u51fd\u6570\u65f6\u5df2\u7ecf\u987a\u5e26\u5c06\u8def\u5f84\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5750\u6807\u7684 $ne$ \u6570\u7ec4\u90fd\u66f4\u65b0\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5faa\u73af\u7684\u65f6\u5019\u52a0\u4e86\u4e00\u4e2a\u7279\u5224\uff0c\u51cf\u5c11\u590d\u6742\u5ea6\u3002\u5f53 $f=0$ \u6216 $2$ \u65f6\uff0c\u5373\u5411\u53f3\u5411\u4e0b\u8d70\u65f6\uff0c\u4e3a\u4e86\u5c3d\u53ef\u80fd\u591a\u7684\u987a\u5e26\u5904\u7406\uff0c\u6211\u4eec\u6b63\u7740\u904d\u5386\uff08\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u7684\u904d\u5386\uff09\uff1b\u5f53 $f=1$ \u6216 $3$ \u65f6\uff0c\u5373\u5411\u5de6\u5411\u4e0a\u8d70\u65f6\uff0c\u4e0e\u4e0a\u540c\u7406\uff0c\u6211\u4eec\u4f1a\u5012\u7740\u904d\u5386\uff08\u4ece\u4e0b\u5230\u4e0a\uff0c\u4ece\u53f3\u5230\u5de6\u904d\u5386\uff09\u3002\n\n#### 3. \u5efa\u56fe\n\n\u53ef\u80fd\u4ece\u8fd9\u91cc\u5c31\u5f00\u59cb\u96be\u4ee5\u7406\u89e3\u4e86\u2026\u2026\u6211\u5c3d\u91cf\u8bb2\u5f97\u7b80\u5355\u4e00\u70b9\u3002\n\n\u6309\u7167\u4e0a\u8ff0\u7684\u601d\u8def\uff0c\u6211\u4eec\u8981\u5b9e\u73b0\u72b6\u6001\u7684\u8f6c\u79fb\u3002\u56e0\u4e3a\u662f\u72b6\u6001\u7684\u8f6c\u79fb\uff0c\u6211\u4eec\u5f53\u7136\u8981\u77e5\u9053\u8fd9\u4e2a\u72b6\u6001\u5230\u5e95\u662f\u4ec0\u4e48\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7528\u5230\u4e00\u4e2a\u53eb hash \u7684\u4e1c\u897f\u3002\u9996\u5148\uff0c\u6211\u4eec\u6839\u636e\u679a\u4e3e\u987a\u5e8f\uff0c\u7ed9\u6bcf\u4e00\u4e2a\u53ef\u884c\u70b9\u7f16\u53f7 $h$\u3002\u7136\u540e\uff0c\u56e0\u4e3a\u4e00\u5171\u6709\u4e24\u4e2a\u5c0f\u7403\uff0c\u6240\u4ee5\u72b6\u6001\u5f53\u7136\u4e5f\u662f\u4e24\u4e2a\u5c0f\u7403\u7684\u603b\u548c\u3002\u6839\u636e\u4e0a\u8ff0\u7684\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6700\u591a\u6709 $2000$ \u4e2a\u53ef\u884c\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u7b2c\u4e00\u4e2a\u5c0f\u7403\u6240\u5728\u7684\u683c\u5b50\u7f16\u53f7\u4e58\u4e0a2000\u518d\u52a0\u4e0a\u7b2c\u4e8c\u4e2a\u683c\u5b50\u7684\u7f16\u53f7\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u72b6\u6001\u4e92\u4e0d\u76f8\u540c\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u5373\uff1a\n\n```cpp\nint get_hash(int a1,int b1,int a2,int b2){\n//\u627e\u5230\u5f53\u7b2c\u4e00\u4e2a\u70b9\u5750\u6807\u4e3aa1,b1\uff0c\u7b2c\u4e8c\u4e2a\u70b9\u5750\u6807\u4e3aa2,b2\u65f6\u7684h\u503c\n\tif (a1>a2||(a1==a2&&b1>b2)){//\u4f7f\u4e24\u4e2a\u5c0f\u7403\u7684\u5750\u6807\u6709\u987a\u5e8f\n\t\tswap(a1,a2),swap(b1,b2);\n\t}\n\tint x=ha[a1][b1],y=ha[a2][b2];\n\treturn x*2001+y;//hash\n}\n```\n\n\n\u800c\u65e2\u7136\u662f\u56fe\u8bba\uff0c\u6211\u4eec\u5f53\u7136\u8981\u6709\u8d77\u59cb\u70b9\u548c\u7ec8\u6b62\u70b9\u3002\u5982\u679c\u6309\u7167\u6b63\u5e38\u601d\u8def\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5c06\u679a\u4e3e\u6240\u6709\u7684\u72b6\u6001\u4f5c\u4e3a\u8d77\u59cb\u70b9\uff0c\u5f53\u4e24\u4e2a\u5c0f\u7403\u91cd\u5408\u65f6\u7684\u72b6\u6001\u4f5c\u4e3a\u7ec8\u70b9\u3002\u4f46\u5f88\u660e\u663e\uff0c\u8fd9\u6837\u975e\u5e38\u590d\u6742\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u56fe\u5012\u8fc7\u6765\uff0c\u7531\u7ec8\u70b9\u4f5c\u4e3a\u8d77\u70b9\u8fdb\u884c\u8fde\u8fb9\u3002\n\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u591a\u6e90\u6700\u77ed\u8def\u95ee\u9898\u3002\n\n\u56e0\u4e3a\u4e24\u4e2a\u5c0f\u7403\u91cd\u5408\u65f6\u7684\u72b6\u6001\u4e0d\u6b62\u4e00\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u8bbe\u7f6e\u4e00\u4e2a\u865a\u62df\u7684\u603b\u6e90\u70b9\uff0c\u5411\u6240\u6709\u7684\u91cd\u5408\u72b6\u6001\u8fde\u63a5\u4e00\u6761\u6709\u5411\u8fb9\u3002\u5373\uff1a\n\n```cpp\nfor (int i=1;i<=n;i++)\n\tfor (int j=1;j<=n;j++)\n\t\tif (can[i][j]&&ma[i][j]){//\u5982\u679c\u4e0d\u662f\u969c\u788d\u7269\u4e14\u4e3a\u53ef\u884c\u70b9\n\t\t\tid[++cnt]=node(i,j);//\u8bbe\u7f6e\u53ef\u884c\u70b9\u4fe1\u606f\n\t\t\tha[i][j]=cnt;//\u7ed9\u53ef\u884c\u70b9hash\u7f16\u53f7\n\t\t\tint tmp=get_hash(i,j,i,j);//\u627e\u5230h\u503c\n\t\t\tadde(s,tmp);//\u7531\u603b\u6e90\u70b9\u5411\u5176\u8fde\u8fb9\n\t\t}\n```\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e\u6240\u6709\u7684\u72b6\u6001\uff08\u53ef\u884c\u70b9\u4e24\u4e24\u914d\u5bf9\uff09\uff0c\u7136\u540e\u7531\u8be5\u72b6\u6001\u5ef6\u4f38\u72b6\u6001\uff0c\u5e76\u7531\u5ef6\u4f38\u5230\u7684\u72b6\u6001\u5411\u8be5\u72b6\u6001\u8fde\u8fb9\uff08\u5012\u7740\u5efa\u56fe\uff09\u3002\n\n```cpp\nfor (int i=1;i<=cnt;i++){\n\tfor (int j=i+1;j<=cnt;j++){\n\t\tnode1 now=node1(id[i].x,id[i].y,id[j].x,id[j].y);//\u627e\u5230\u8be5\u72b6\u6001\n\t\tint to=get_hash(id[i].x,id[i].y,id[j].x,id[j].y);//\u627e\u5230h\u503c\n\t\tfor (int i=0;i<4;i++){//\u679a\u4e3e4\u4e2a\u65b9\u5411\n\t\t\tnode1 next=now;\n\t\t\tif (i==0||i==2) next.b1=ne[next.a1][next.b1][i],next.b2=ne[next.a2][next.b2][i];\n\t\t\t//\u5982\u679c\u662f\u5411\u53f3\u5411\u5de6\uff0c\u5219\u4fee\u6539y\u5750\u6807\n\t\t\telse next.a1=ne[next.a1][next.b1][i],next.a2=ne[next.a2][next.b2][i];\n\t\t\t//\u5426\u5219\u4fee\u6539x\u5750\u6807\n\t\t\tadde(get_hash(next.a1,next.b1,next.a2,next.b2),to);//\u8fde\u8fb9\n\t\t}\n\t}\n}\n```\n\n#### 4. bfs \u641c\u7d22\n\n\u56fe\u90fd\u5efa\u597d\u4e86\u2026\u2026\u5c31\u8be5\u641c\u7d22\u5904\u7406\u4e86\u3002\n\n\u8003\u8651\u4ece\u539f\u70b9\u5f00\u59cb\uff0c\u8fdb\u884c bfs\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvoid bfs(){\n\tqueue<int> q;//\u5efa\u7acb\u961f\u5217\n\tq.push(s);//\u63a8\u5165\u8d77\u59cb\u70b9\n\tvis[s]=1,dis[s]=-1;//\u6807\u8bb0\u8d77\u59cb\u70b9\uff0c\u56e0\u4e3a\u8d77\u59cb\u70b9\u662f\u865a\u62df\u7684\uff0c\u6240\u4ee5\u8ddd\u79bb\u4e3a-1\n\t//dis\u6570\u7ec4\u8868\u793a\u8ddd\u79bb\u4e24\u4e2a\u5c0f\u7403\u91cd\u5408\u72b6\u6001\u7684\u957f\u5ea6\n\twhile (!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].to;\n\t\t\tif (!vis[v]){\n\t\t\t\tvis[v]=1;\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n#### 5.\u67e5\u8be2\n\n\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u4e86\u6bcf\u4e00\u4e2a\u72b6\u6001\u5230\u7b54\u6848\u7684\u8ddd\u79bb\u4e86\uff0c\u90a3\u4e48\u67e5\u8be2\u5c31\u597d\u529e\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u627e\u5230\u5411\u56db\u4e2a\u65b9\u5411\u5230\u8fbe\u7ec8\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u7136\u540e\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u5411\u8be5\u65b9\u5411\u5ef6\u4f38\u5230\u7684\u72b6\u6001\u4e0e\u73b0\u72b6\u6001\u4e0d\u76f8\u540c\uff08\u5373\u5411\u8fd9\u4e2a\u65b9\u5411\u8d70\u4e00\u683c\u4e0d\u662f\u969c\u788d\u7269\uff09\uff0c\u8fd8\u9700\u8981\u5c06\u8ddd\u79bb+1\u3002\n\n```cpp\nint query(int a1,int b1,int a2,int b2){\n\tif (a1==a2&&b1==b2) return 0;//\u7279\u5224\u521d\u59cb\u5728\u540c\u4e00\u4e2a\u5750\u6807\n\tnode1 now=node1(a1,b1,a2,b2);//\u8bbe\u7f6e\u73b0\u5728\u72b6\u6001\n\tint ans=INF;//\u7b54\u6848\u8bbe\u7f6e\u4e3a\u6781\u5927\u503c\n\tfor (int i=0;i<4;i++){\n\t\tnode1 next=now;\n\t\tif (i==0||i==2) next.b1=ne[next.a1][next.b1][i],next.b2=ne[next.a2][next.b2][i];\n\t\t//\u5982\u679c\u5411\u53f3\u5411\u4e0b\u5219\u4fee\u6539y\u5750\u6807\n\t\telse next.a1=ne[next.a1][next.b1][i],next.a2=ne[next.a2][next.b2][i];\n\t\t//\u5982\u679c\u5411\u4e0a\u5411\u5de6\u5219\u4fee\u6539x\u5750\u6807\n\t\tint tmp=get_hash(next.a1,next.b1,next.a2,next.b2);\n\t\t//\u627e\u5230\u73b0\u72b6\u6001\u7684h\u503c\n\t\tif (vis[tmp]){//\u5982\u679c\u8fd9\u4e2a\u70b9\u88ab\u6700\u77ed\u8def\u641c\u8fc7\n\t\t\tif (next==now) ans=min(ans,dis[tmp]);//\u5982\u679c\u5411\u8be5\u65b9\u5411\u8d70\u4e00\u683c\u540e\u7684\u72b6\u6001\u4e0e\u73b0\u72b6\u6001\u76f8\u540c\uff0c\u5219\u4e0d\u989d\u5916+1\n\t\t\telse ans=min(ans,dis[tmp]+1);\n\t\t}\n\t}\n\tif (ans!=INF) return ans;//\u5982\u679c\u88ab\u4fee\u6539\u8fc7\u5219\u8bf4\u660e\u6709\u89e3\uff0c\u8f93\u51fa\u7b54\u6848\n\treturn -1;//\u5426\u5219\u8f93\u51fa-1\n}\n```\n\n### \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 2005\n#define M 50000005 \n#define INF 2147483647\nint n,m,q,ne[N][N][4],cnt,s,ha[N][N],head[M],tot,dis[M];\nint dx[4]={0,1,0,-1};\nint dy[4]={1,0,-1,0};\nbool ma[N][N],can[N][N],vis[M];\nstruct node{\n\tint x,y;\n\tnode (int x=0,int y=0)\n\t\t:x(x),y(y){}\n}id[N];\nstruct node1{\n\tnode1(){} \n\tint a1,b1,a2,b2;\n\tnode1 (int a1=0,int b1=0,int a2=0,int b2=0)\n\t\t:a1(a1),b1(b1),a2(a2),b2(b2){}\n\tfriend bool operator == (node1 x,node1 y){\n\t\treturn (x.a1==y.a1)&&(x.a2==y.a2)&&(x.b1==y.b1)&&(x.b2==y.b2);\n\t}\n};\nstruct node2{\n\tint to,next;\n\tnode2 (int to=0,int next=0)\n\t\t:to(to),next(next){} \n}e[M];\nint read(){\n\tint w=0,f=1;\n\tchar c=getchar();\n\twhile (c>'9'||c<'0'){\n\t\tif (c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile (c>='0'&&c<='9'){\n\t\tw=(w<<3)+(w<<1)+(c^48);\n\t\tc=getchar(); \n\t}\n\treturn w*f;\n}\nint find(int x,int y,int f){\n\tint xx=x+dx[f],yy=y+dy[f];\n\tif (ma[xx][yy]){\n\t\tne[x][y][f]=find(xx,yy,f);\n\t\treturn ne[x][y][f];\n\t}else ne[x][y][f]=(f==0||f==2)?y:x;\n\treturn (f==0||f==2)?y:x;\n}\nint get_hash(int a1,int b1,int a2,int b2){\n\tif (a1>a2||(a1==a2&&b1>b2)){\n\t\tswap(a1,a2),swap(b1,b2);\n\t}\n\tint x=ha[a1][b1],y=ha[a2][b2];\n\treturn x*2001+y;\n}\nvoid adde(int u,int v){\n\te[++tot]=node2(v,head[u]);\n\thead[u]=tot;\n}\nvoid build(){\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=n;j++)\n\t\t\tif (can[i][j]&&ma[i][j]){\n\t\t\t\tid[++cnt]=node(i,j);\n\t\t\t\tha[i][j]=cnt;\n\t\t\t\tint tmp=get_hash(i,j,i,j);\n\t\t\t\tadde(s,tmp);\n\t\t\t}\n\tfor (int i=1;i<=cnt;i++){\n\t\tfor (int j=i+1;j<=cnt;j++){\n\t\t\tnode1 now=node1(id[i].x,id[i].y,id[j].x,id[j].y);\n\t\t\tint to=get_hash(id[i].x,id[i].y,id[j].x,id[j].y);\n\t\t\tfor (int i=0;i<4;i++){\n\t\t\t\tnode1 next=now;\n\t\t\t\tif (i==0||i==2) next.b1=ne[next.a1][next.b1][i],next.b2=ne[next.a2][next.b2][i];\n\t\t\t\telse next.a1=ne[next.a1][next.b1][i],next.a2=ne[next.a2][next.b2][i];\n\t\t\t\tadde(get_hash(next.a1,next.b1,next.a2,next.b2),to);\n\t\t\t}\n\t\t}\n\t}\n}\nvoid bfs(){\n\tqueue<int> q;\n\tq.push(s);\n\tvis[s]=1,dis[s]=-1;\n\twhile (!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].to;\n\t\t\tif (!vis[v]){\n\t\t\t\tvis[v]=1;\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\nint query(int a1,int b1,int a2,int b2){\n\tif (a1==a2&&b1==b2) return 0;\n\tnode1 now=node1(a1,b1,a2,b2);\n\tint ans=INF;\n\tfor (int i=0;i<4;i++){\n\t\tnode1 next=now;\n\t\tif (i==0||i==2) next.b1=ne[next.a1][next.b1][i],next.b2=ne[next.a2][next.b2][i];\n\t\telse next.a1=ne[next.a1][next.b1][i],next.a2=ne[next.a2][next.b2][i];\n\t\tint tmp=get_hash(next.a1,next.b1,next.a2,next.b2);\n\t\tif (vis[tmp]){\n\t\t\tif (next==now) ans=min(ans,dis[tmp]);\n\t\t\telse ans=min(ans,dis[tmp]+1);\n\t\t}\n\t}\n\t\n\tif (ans!=INF) return ans;\n\treturn -1;\n}\nint main(){\n\tn=read(),m=read(),q=read();\n\tfor (int i=1;i<=n;i++){\n\t\tfor (int j=1;j<=n;j++){\n\t\t\tma[i][j]=1;\n\t\t}\n\t}\n\tfor (int i=1;i<=m;i++){\n\t\tint x=read(),y=read();\n\t\tma[x][y]=0;\n\t\tfor (int j=0;j<4;j++){\n\t\t\tint xx=x+dx[j],yy=y+dy[j];\n\t\t\tcan[xx][yy]=1;\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++) can[i][1]=can[i][n]=can[n][i]=can[1][i]=1;\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=n;j++)\n\t\t\tfor (int f=0;f<=1;f++)\n\t\t\t\tif (ma[i][j]&&!ne[i][j][f])\n\t\t\t\t\tne[i][j][f]=find(i,j,f);\n\tfor (int i=n;i>=1;i--)\n\t\tfor (int j=n;j>=1;j--)\n\t\t\tfor (int f=2;f<=3;f++)\n\t\t\t\tif (ma[i][j]&&!ne[i][j][f])\n\t\t\t\t\tne[i][j][f]=find(i,j,f);\n\tbuild();\n\tbfs();\n\tfor (int i=1;i<=q;i++){\n\t\tint a=read(),b=read(),c=read(),d=read();\n\t\tprintf(\"%d\\n\",query(a,b,c,d));\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1617353447,
        "uid": 257621,
        "name": "\u7ffc\u5fb7\u5929\u5c0a",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P7473 \u3010\u91cd\u529b\u7403\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\u5728\u4e00\u4e2a $n\\times n$ \u7684\u77e9\u5f62\u4e2d\uff0c\u9898\u76ee\u4f1a\u7ed9\u51fa $m$ \u4e2a\u969c\u788d\u7269\u3002\u6709\u4e24\u4e2a\u5c0f\u7403\uff0c\u4f60\u53ef\u4ee5\u9009\u5b9a\u56db\u4e2a\u65b9\u5411\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\u7684\u5176\u4e2d\u4e00\u4e2a\uff0c\u5c0f\u7403\u4f1a\u671d\u7740\u8fd9\u56db\u4e2a\u65b9\u5411\u4e00\u76f4\u6eda\u52a8\uff0c\u76f4\u5230\u9047\u5230\u969c\u788d\u7269\u6216\u662f\u77e9\u5f62\u7684\u8fb9\u7f18\u505c\u6b62\u3002\u6709 $q$ \u6761\u5f62\u5982 $a$ $b$ $c$ $d$ \u7684\u8be2\u95ee\uff0c\u4ee3\u8868\u4e24\u4e2a\u5c0f\u7403\u7684\u5750\u6807 $(a,b)$ \u548c $(c,d)$ \uff0c\u6c42\u591a\u5c11\u6b65\uff0c\u5c0f\u7403\u4f1a\u91cd\u53e0\u3002\n\n[\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73](https://www.cnblogs.com/C202202chenkelin/p/14596516.html)\n# \u601d\u8def\n## 55pts\n\u9996\u5148\u8003\u8651\u66b4\u529b\uff0c\u5148\u9884\u5904\u7406\u51fa\u6240\u6709\u70b9\u6eda\u52a8\u4f1a\u6eda\u52a8\u5230\u54ea\u91cc\uff0c\u5199\u56db\u4e2a dfs \u5b8c\u4e8b\u3002\n```cpp\nint L(int i, int j) {//\u5411\u5de6\u6eda\n\tif(stn[i][j - 1]) {\n\t\tl[i][j] = L(i, j - 1);\n\t\treturn l[i][j];\n\t}\n\telse\n\t\tl[i][j] = j;\n\treturn j;\n}\nint U(int i, int j) {//\u5411\u4e0a\u6eda\n\tif(stn[i - 1][j]) {\n\t\tu[i][j] = U(i - 1, j);\n\t\treturn u[i][j];\n\t}\n\telse\n\t\tu[i][j] = i;\n\treturn i;\n}\nint R(int i, int j) {//\u5411\u53f3\u6eda\n\tif(stn[i][j + 1]) {\n\t\tr[i][j] = R(i, j + 1);\n\t\treturn r[i][j];\n\t}\n\telse\n\t\tr[i][j] = j;\n\treturn j;\n}\nint D(int i, int j) {//\u5411\u4e0b\u6eda\n\tif(stn[i + 1][j]) {\n\t\tw[i][j] = D(i + 1, j);\n\t\treturn w[i][j];\n\t}\n\telse\n\t\tw[i][j] = i;\n\treturn i;\n}\n```\n\u4e3b\u51fd\u6570\u4e2d\uff1a\n```cpp\nfor(int i = 1; i <= n; i++) {\n\tfor(int j = 1; j <= n; j++) {\n\t\tif(!stn[i][j])//\u5c0f\u7403\u4e0d\u4f1a\u5230\u969c\u788d\u7269\u4e0a\n\t\t\tcontinue;\n\t\tif(!r[i][j])\n\t\t\tR(i, j);\n\t\tif(!w[i][j])\n\t\t\tD(i, j);\n\t}\n}\nfor(int i = n; i >= 1; i--) {\n\tfor(int j = n; j >= 1; j--) {\n\t\tif(!stn[i][j])//\u5c0f\u7403\u4e0d\u4f1a\u5230\u969c\u788d\u7269\u4e0a\n\t\t\tcontinue;\n\t\tif(!l[i][j])\n\t\t\tL(i, j);\n\t\tif(!u[i][j])\n\t\t\tU(i, j);\n\t}\n}\n```\n\u7136\u540e\u65e0\u8111 BFS \uff0cTLE \u3002\uff08 $55pts$ \u4eb2\u6d4b\uff09\n\n**\u4e3b\u4f53\u90e8\u5206**\n```cpp\nvoid BFS() {\n\tq.push(Node(a, b, c, d, 0));\n\tif(a == c && b == d) {\n\t\tprintf(\"0\\n\");\n\t\treturn;\n\t}\n\twhile(!q.empty()) {\n\t\tNode now = q.front(); q.pop();\n\t\tNode next = now;\n\t\tnext.step++;\n\t\tnext.Y_1 = l[next.X_1][next.Y_1];\n\t\tnext.Y_2 = l[next.X_2][next.Y_2];\n\t\tif(next.X_1 == next.X_2 && next.Y_1 == next.Y_2) {\n\t\t\tprintf(\"%d\\n\", next.step);\n\t\t\treturn;\n\t\t}\n\t\tint tmp = Get_Hash(next.X_1, next.X_2, next.Y_1, next.Y_2);\n\t\tif(!f[tmp]) {\n\t\t\tf[tmp] = 1;\n\t\t\tq.push(next);\n\t\t}\n\t\t\n\t\t\n\t\tnext = now;\n\t\tnext.step++;\n\t\tnext.Y_1 = r[next.X_1][next.Y_1];\n\t\tnext.Y_2 = r[next.X_2][next.Y_2];\n\t\tif(next.X_1 == next.X_2 && next.Y_1 == next.Y_2) {\n\t\t\tprintf(\"%d\\n\", next.step);\n\t\t\treturn;\n\t\t}\n\t\ttmp = Get_Hash(next.X_1, next.X_2, next.Y_1, next.Y_2);\n\t\tif(!f[tmp]) {\n\t\t\tf[tmp] = 1;\n\t\t\tq.push(next);\n\t\t}\n\t\t\n\t\t\n\t\tnext = now;\n\t\tnext.step++;\n\t\tnext.X_1 = u[next.X_1][next.Y_1];\n\t\tnext.X_2 = u[next.X_2][next.Y_2];\n\t\tif(next.X_1 == next.X_2 && next.Y_1 == next.Y_2) {\n\t\t\tprintf(\"%d\\n\", next.step);\n\t\t\treturn;\n\t\t}\n\t\ttmp = Get_Hash(next.X_1, next.X_2, next.Y_1, next.Y_2);\n\t\tif(!f[tmp]) {\n\t\t\tf[tmp] = 1;\n\t\t\tq.push(next);\n\t\t}\n\t\t\n\t\tnext = now;\n\t\tnext.step++;\n\t\tnext.X_1 = w[next.X_1][next.Y_1];\n\t\tnext.X_2 = w[next.X_2][next.Y_2];\n\t\tif(next.X_1 == next.X_2 && next.Y_1 == next.Y_2) {\n\t\t\tprintf(\"%d\\n\", next.step);\n\t\t\treturn;\n\t\t}\n\t\ttmp = Get_Hash(next.X_1, next.X_2, next.Y_1, next.Y_2);\n\t\tif(!f[tmp]) {\n\t\t\tf[tmp] = 1;\n\t\t\tq.push(next);\n\t\t}\n\t}\n\tprintf(\"-1\\n\");\n}\n```\n## 100pts\n\u8003\u8651\u9006\u63a8\u6c42\u51fa\u6240\u6709\u72b6\u6001\u7684\u6700\u5c0f\u6ee1\u8db3\u6761\u4ef6\u6b65\u6570\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u7ecf\u8fc7\u4e00\u6b21\u7684\u6eda\u52a8\u540e\uff0c\u5c0f\u7403\u4f1a\u843d\u5728\u969c\u788d\u7269\u7684\u65c1\u8fb9\u6216\u662f\u77e9\u9635\u7684\u8fb9\u7f18\u3002\u4e00\u5171\u6709 $(4m+4n)$ \u4e2d\u72b6\u6001\uff0c\u90a3\u4e48\u4e24\u4e2a\u6c42\u5c31\u4e00\u5171\u6709 $(4m+4n)^2$ \u79cd\u72b6\u6001\uff0c\u53ef\u4ee5\u5f80\u56db\u8fb9\u6eda\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06\u4f1a\u4e0e\u5176\u4ed6\u7684\u56db\u79cd\u72b6\u6001\u6709\u8054\u7cfb\u3002\n\n\u5728\u8003\u8651\u5c06\u8fd9\u4e9b\u70b9\u8fdb\u884c $hash$ \u76f8\u8fde\u3002\u90a3\u4e48\u5c31\u6210\u4e3a\u4e86\u4e00\u4e2a\u591a\u6e90\u6700\u77ed\u8def\u95ee\u9898\u3002\u5c06\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9 $s$ \u8fde\u5411\u6bcf\u4e2a\u4e24\u5c0f\u7403\u91cd\u53e0\u7684\u54c8\u5e0c\u503c\u8fde\u8fb9\u3002\u540c\u65f6\u5f53\u524d\u72b6\u6001\u4e0e\u4e0b\u4e00\u4e2a\u72b6\u6001\u5efa\u7acb\u53cd\u8fb9\uff0c\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\u7531\u4e8e\u8fb9\u957f\u90fd\u4e3a $1$ \uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 BFS \u6765\u6c42\u6700\u77ed\u8def\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(4(4m+4n)^2)$  \u3002\n\n\u6700\u540e\u662f\u67e5\u8be2\u7684\u95ee\u9898\uff0c\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c \u5206\u56db\u4e2a\u65b9\u5411\u5148\u6eda\u52a8\u4e00\u6b21\uff0c\u90a3\u4e48\u6b65\u6570\u5c31\u662f $dis[tmp]+1$ \uff08 $dis$ \u8bb0\u5f55\u6700\u77ed\u8def\uff0c $tmp$ \u4e3a\u5f53\u524d\u72b6\u6001\u7684\u54c8\u5e0c\u503c\uff09\u3002\u4f46\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u82e5\u6eda\u52a8\u524d\u548c\u6eda\u52a8\u540e\u4e24\u4e2a\u5c0f\u7403\u7684\u4f4d\u7f6e\u6ca1\u6709\u6539\u53d8\uff0c\u5219\u4e0d\u9700\u8981\u52a0\u4e00\u3002\n\n\u7ec6\u8282\u4ee3\u7801\u4e0a\u6709\u6ce8\u91ca\u3002\n# Code\n```cpp\n#include <queue>\n#include <cstdio>\nusing namespace std;\n#define INF 0x3f3f3f3f\nconst int MAXN = 2e3 + 5;\nconst int MAXM = 5e7 + 5;\nstruct Node {//\u5c0f\u7403\u7684\u4f4d\u7f6e\n\tint X_1, Y_1, X_2, Y_2;\n\tNode() {}\n\tNode(int A, int B, int C, int D) {\n\t\tX_1 = A;\n\t\tY_1 = B;\n\t\tX_2 = C;\n\t\tY_2 = D;\n\t}\n\tfriend bool operator == (Node x, Node y) {\n\t\treturn (x.X_1 == y.X_1) && (x.X_2 == y.X_2) && (x.Y_1 == y.Y_1) && (x.Y_2 == y.Y_2);\n\t}\n};\nstruct Edge {//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\uff0c\u522b\u7528vector\n\tint To, Next;\n};\nEdge edge[MAXM];\nint head[MAXM];\nint u[MAXN][MAXN], w[MAXN][MAXN], l[MAXN][MAXN], r[MAXN][MAXN];\nbool stn[MAXN][MAXN], can[MAXN][MAXN], vis[MAXM];\nint dis[MAXM], Hash[MAXN][MAXN];\npair<int, int> id[MAXN];\nqueue<int> q;\nint x[MAXN], y[MAXN];\nint n, m, s, Q;\nint a, b, c, d;\nint tot, cnt;\nvoid Addedge(int u, int v) {//\u52a0\u5165\u8fb9\n\tedge[++tot].Next = head[u];\n\tedge[tot].To = v;\n\thead[u] = tot;\n}\nint Get_Hash(int A, int B, int C, int D) {//\u54c8\u5e0c\u503c\n\tif(A > C || (A == C && B > D)) {//\u6ce8\u610f\u5148\u6392\u5e8f\uff0c\u518dhash\n\t\tswap(A, C);\n\t\tswap(B, D);\n\t}\n\tint x = Hash[A][B];\n\tint y = Hash[C][D];\n\treturn x * 2001 + y;//\u5171\u6709(4n+4m)\u79cd\u72b6\u6001\uff0c\u5927\u6982\u662f2000\uff0c\u8fd9\u6837\u4e0d\u4f1a\u53d1\u751f\u51b2\u7a81\n}\nint L(int i, int j) {//\u5411\u5de6\u8d70\n\tif(stn[i][j - 1]) {\n\t\tl[i][j] = L(i, j - 1);\n\t\treturn l[i][j];\n\t}\n\telse\n\t\tl[i][j] = j;\n\treturn j;\n}\nint U(int i, int j) {//\u5411\u4e0a\u8d70\n\tif(stn[i - 1][j]) {\n\t\tu[i][j] = U(i - 1, j);\n\t\treturn u[i][j];\n\t}\n\telse\n\t\tu[i][j] = i;\n\treturn i;\n}\nint R(int i, int j) {//\u5411\u53f3\u8d70\n\tif(stn[i][j + 1]) {\n\t\tr[i][j] = R(i, j + 1);\n\t\treturn r[i][j];\n\t}\n\telse\n\t\tr[i][j] = j;\n\treturn j;\n}\nint D(int i, int j) {//\u5411\u4e0b\u8d70\n\tif(stn[i + 1][j]) {\n\t\tw[i][j] = D(i + 1, j);\n\t\treturn w[i][j];\n\t}\n\telse\n\t\tw[i][j] = i;\n\treturn i;\n}\nvoid Build() {//\u5efa\u56fe\n\tint tmp;\n\tfor(int i = 1; i <= n; i++)\n\t\tfor(int j = 1; j <= n; j++)\n\t\t\tif(can[i][j] && stn[i][j]) {//\u662f\u969c\u788d\u7269\u8fb9\u7f18\u4e14\u4e0d\u5931\u969c\u788d\u7269\n\t\t\t\tid[++cnt].first = i;\n\t\t\t\tid[cnt].second = j;\n\t\t\t\tHash[i][j] = cnt;\n\t\t\t\ttmp = Get_Hash(i, j, i, j);\n\t\t\t\tAddedge(s, tmp);//\u8d85\u7ea7\u6e90\u70b9\u8fde\u7ed3\u679c\n\t\t\t}\n\tfor(int i = 1; i <= cnt; i++) {\n\t\tfor(int j = i + 1; j <= cnt; j++) {//\u4e0b\u4e00\u72b6\u6001\u8fde\u8fb9\uff0c\u6ce8\u610f\u662f\u53cd\u5411\u8fb9\n\t\t\tNode now = Node(id[i].first, id[i].second, id[j].first, id[j].second);\n\t\t\tint to = Get_Hash(id[i].first, id[i].second, id[j].first, id[j].second);\n\t\t\tNode next = now;\n\t\t\tnext.Y_1 = l[next.X_1][next.Y_1];\n\t\t\tnext.Y_2 = l[next.X_2][next.Y_2];\n\t\t\tint tmp = Get_Hash(next.X_1, next.Y_1, next.X_2, next.Y_2);\n\t\t\tAddedge(tmp, to);\n\t\t\tnext = now;\n\t\t\tnext.Y_1 = r[next.X_1][next.Y_1];\n\t\t\tnext.Y_2 = r[next.X_2][next.Y_2];\n\t\t\ttmp = Get_Hash(next.X_1, next.Y_1, next.X_2, next.Y_2);\n\t\t\tAddedge(tmp, to);\n\t\t\tnext = now;\n\t\t\tnext.X_1 = u[next.X_1][next.Y_1];\n\t\t\tnext.X_2 = u[next.X_2][next.Y_2];\n\t\t\ttmp = Get_Hash(next.X_1, next.Y_1, next.X_2, next.Y_2);\n\t\t\tAddedge(tmp, to);\n\t\t\tnext = now;\n\t\t\tnext.X_1 = w[next.X_1][next.Y_1];\n\t\t\tnext.X_2 = w[next.X_2][next.Y_2];\n\t\t\ttmp = Get_Hash(next.X_1, next.Y_1, next.X_2, next.Y_2);\n\t\t\tAddedge(tmp, to);\n\t\t}\n\t}\n}\nvoid Shortestpast() {//\u591a\u6e90\u6700\u77ed\u8def\n\tq.push(s);\n\tvis[s] = 1;\n\tdis[s] = -1;\n\twhile(!q.empty()) {//\u8fb9\u957f\u4e3a1\u7528BFS\n\t\tint now = q.front(); q.pop();\n\t\tfor(int i = head[now]; i; i = edge[i].Next) {\n\t\t\tint next = edge[i].To;\n\t\t\tif(!vis[next]) {\n\t\t\t\tvis[next] = 1;\n\t\t\t\tdis[next] = dis[now] + 1;\n\t\t\t\tq.push(next);\n\t\t\t}\n\t\t}\n\t}\n}\nint Query() {\n\tif(a == c && b == d)//\u5df2\u7ecf\u91cd\u53e0\u4e0d\u7528\u6eda\n\t\treturn 0;\n\tNode now = Node(a, b, c, d);\n\tint tmp, res = INF;\n\tNode next = now;\n\tnext.Y_1 = l[next.X_1][next.Y_1];\n\tnext.Y_2 = l[next.X_2][next.Y_2];\n\ttmp = Get_Hash(next.X_1, next.Y_1, next.X_2, next.Y_2);\n\tif(vis[tmp]) {//\u5982\u679c\u6700\u77ed\u8def\u4e2d\u88ab\u6807\u8bb0\u8fc7\u624d\u66f4\u65b0\n\t\tif(next == now)\n\t\t\tres = min(res, dis[tmp]);//\u8fd8\u662f\u5728\u539f\u4f4d\u7f6e\uff0c\u4e0d\u52a01\n\t\telse\n\t\t\tres = min(res, dis[tmp] + 1);\n\t}\n\tnext = now;\n\tnext.Y_1 = r[next.X_1][next.Y_1];\n\tnext.Y_2 = r[next.X_2][next.Y_2];\n\ttmp = Get_Hash(next.X_1, next.Y_1, next.X_2, next.Y_2);\n\tif(vis[tmp]) {\n\t\tif(next == now)\n\t\t\tres = min(res, dis[tmp]);\n\t\telse\n\t\t\tres = min(res, dis[tmp] + 1);\n\t}\n\tnext = now;\n\tnext.X_1 = u[next.X_1][next.Y_1];\n\tnext.X_2 = u[next.X_2][next.Y_2];\n\ttmp = Get_Hash(next.X_1, next.Y_1, next.X_2, next.Y_2);\n\tif(vis[tmp]) {\n\t\tif(next == now)\n\t\t\tres = min(res, dis[tmp]);\n\t\telse\n\t\t\tres = min(res, dis[tmp] + 1);\n\t}\n\tnext = now;\n\tnext.X_1 = w[next.X_1][next.Y_1];\n\tnext.X_2 = w[next.X_2][next.Y_2];\n\ttmp = Get_Hash(next.X_1, next.Y_1, next.X_2, next.Y_2);\n\tif(vis[tmp]) {\n\t\tif(next == now)\n\t\t\tres = min(res, dis[tmp]);\n\t\telse\n\t\t\tres = min(res, dis[tmp] + 1);\n\t}\n\tif(res != INF)\n\t\treturn res;//\u627e\u5230\u7b54\u6848\n\treturn -1;//\u6ca1\u6709\u7b54\u6848\n}\nint main() {\n\tscanf(\"%d %d %d\", &n, &m, &Q);\n\tfor(int i = 1; i <= n; i++)\n\t\tfor(int j = 1; j <= n; j++)\n\t\t\tstn[i][j] = 1;\n\tfor(int i = 1; i <= m; i++) {\n\t\tscanf(\"%d %d\", &x[i], &y[i]);\n\t\tstn[x[i]][y[i]] = 0;//\u969c\u788d\u7269\u6807\u8bb0\n\t\tcan[x[i]][y[i] + 1] = 1;//\u969c\u788d\u7269\u56db\u5468\u6807\u8bb0\n\t\tcan[x[i] + 1][y[i]] = 1;\n\t\tcan[x[i]][y[i] - 1] = 1;\n\t\tcan[x[i] - 1][y[i]] = 1;\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t\tcan[1][i] = can[n][i] = can[i][1] = can[i][n] = 1;//\u77e9\u9635\u56db\u5468\u6807\u8bb0\n\tfor(int i = 1; i <= n; i++) {\n\t\tfor(int j = 1; j <= n; j++) {\n\t\t\tif(!stn[i][j])\n\t\t\t\tcontinue;\n\t\t\tif(!r[i][j])\n\t\t\t\tR(i, j);\n\t\t\tif(!w[i][j])\n\t\t\t\tD(i, j);\n\t\t}\n\t}\n\tfor(int i = n; i >= 1; i--) {\n\t\tfor(int j = n; j >= 1; j--) {\n\t\t\tif(!stn[i][j])\n\t\t\t\tcontinue;\n\t\t\tif(!l[i][j])\n\t\t\t\tL(i, j);\n\t\t\tif(!u[i][j])\n\t\t\t\tU(i, j);\n\t\t}\n\t}\n\tBuild();\n\tShortestpast();\n\tfor(int i = 1; i <= Q; i++) {\n\t\tscanf(\"%d %d %d %d\", &a, &b, &c, &d);\n\t\tprintf(\"%d\\n\", Query());\n\t}\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\n}\n```",
        "postTime": 1617084412,
        "uid": 254733,
        "name": "Night_Bringer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7473 [NOI Online 2021 \u5165\u95e8\u7ec4] \u91cd\u529b\u7403\uff08\u6c11\u95f4\u6570\u636e\uff09"
    },
    {
        "content": "### \u672c\u7bc7\u9898\u89e3\u4e3b\u8981\u662f\u5bf9\u4e00\u697c LYC_music \u5927\u4f6c\u9898\u89e3\u7684\u89e3\u91ca\u8bf4\u660e\u3002\n\n\u663e\u7136\uff0c\u5982\u679c\u7b2c\u4e00\u6b21\u770b\u5230\u4ed6\u7684\u9898\u89e3\uff0c\u591a\u6570\u4eba\u90fd\u770b\u4e0d\u61c2\uff0c\uff08\u90a3\u592a\u4e13\u4e1a\u4e86\uff1f\uff09\n\n`LYC` \u9898\u89e3\u539f\u6587\u5c31\u4e0d\u5f15\u8ff0\u4e86\u3002\n\n`LYC` \u5927\u6982\u7684\u610f\u601d\u662f\uff0c\u7531\u4e8e\u5c0f\u7403**\u9047\u5230\u969c\u788d\u7269\u624d\u4f1a\u505c\u6b62\u8fd0\u52a8**\uff0c\u6240\u4ee5\u5c0f\u7403**\u53ea\u4f1a\u505c\u5230\u5730\u56fe\u5185\u90e8\u7684\u8fb9\u7f18**\u6216\u8005\u662f**\u969c\u788d\u7269\u7684\u56db\u5468**\uff08\u8ba1\u7b97 `LYC` \u5df2\u6709\uff0c\u7565\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5176\u4f59\u7684\u70b9\u90fd\u662f\u65e0\u7528\u7684,\u6211\u4eec\u53ea\u8981\u5c06**\u6240\u6709\u6709\u7528\u7684\u3001\u80fd\u76f4\u63a5\u5230\u8fbe\u7684\u70b9\u7528\u8fb9\u8fde\u8d77\u6765**\uff0c\u56e0\u4e3a\u5c0f\u7403\u6bcf\u6b21\u8981\u8d70\u5230\u5e95\uff0c\u6240\u6709\u7684\u8fb9\u6743\u90fd\u4e3a $1$ \u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u77e5\u9053\u5c0f\u7403\u4f1a\u5728\u90a3\u91cc\u76f8\u9047\uff0c\u6240\u4ee5\u5e72\u8106**\u4ece\u6bcf\u4e2a\u53ef\u4ee5\u76f8\u9047\u7684\u70b9\u5012\u7740\u641c**\u5373\u53ef\uff0c\u6240\u4ee5**\u5efa\u53cd\u5411\u8fb9\u8dd1\u8bb0\u641c**\uff08\u6709\u53ef\u80fd `vector` \u4f1a\u88ab\u5361\u3002\u8bb0\u641c\u80fd\u6709\u6548\u907f\u514d\u91cd\u590d\u72b6\u6001\u9020\u6210\u7684\u65f6\u95f4\u6d6a\u8d39\uff09\u3002\u8fd8\u6709\u5c31\u662f\u8981**\u641c\u7d22\u72b6\u6001\u8981\u5e26\u65b9\u5411**\uff0c\u4e0d\u540c\u7684\u65b9\u5411\u4f1a\u6709\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u6700\u540e\u7b54\u6848\u53ea\u8981\u5728\u56db\u4e2a\u65b9\u5411\u91cc\u7684\u7ed3\u679c\u4e2d\u9009\u6700\u5c0f\u7684\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd9\u91cc\u653e\u90e8\u5206\u601d\u7ef4\u96be\u5ea6\u6bd4\u8f83\u9ad8\u7684\uff08\u4f2a\uff09\u4ee3\u7801\n\n```cpp\n\tfor (int i = 1; i <= n; ++ i)\n\t\tfor (int j = 1; j <= n; ++ j)\n\t\t\tif (\u56db\u65c1\u81f3\u5c11\u6295\u4e00\u8fb9\u662f\u969c\u788d\u6216\u662f\u8fb9\u7f18)\n\t\t\t\tid[i][j] = ++ tot; //tot\u65e2\u8868\u793a\u7b26\u5408\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u8fd9\u91cc\u4e5f\u53ef\u8868\u793a\u627e\u5230\u7684\u8fd9\u4e2a\u70b9\u7ed9\u5b83\u7684\u7f16\u53f7\u3002\n\tfor (int i = n; i >= 1; -- i)\n\t\tfor (int j = n; j >= 1; -- j){\n\t\t\tif (! a[i][j + 1]) //\u8fd9\u91cc\u505a\u8303\u4f8b\n\t\t\t\tto[i][j][3] = to[i][j + 1][3]; // \u8d70\u5230\u4e0b\u4e00\u6b65\n\t\t\t\t// to[i][j][k] \u8868\u793a\u5728\u5750\u6807\u4e3a[i][j]\u7684\u70b9\u65f6\u6309k\u65b9\u5411\u8d70\uff0c\u4e0b\u4e00\u6b65\u5230\u7684\u70b9\n\t\t\telse\n\t\t\t\tto[i][j][3] = id[i][j]; //\u8fd9\u91cc\u5c31\u662f\u8fd9\u4e00\u884c/\u5217\u5728\u8fd9\u4e2a\u65b9\u5411\u4e0a\u7684\u7ec8\u70b9\u3002\n\t\t\t\u540c\u4e0a\n\t\t}\n\t\u4e00\u6837\u518d\u505a\u5176\u5b83\u4e24\u4e2a\u65b9\u5411\n\tfor (int i = 1; i <= tot; ++ i)\n\t\tfor (int j = 1; j <= tot; ++ j)\n\t\t\tdis[i][j] = 114514114514, dis[i][i] = 1;\n\t//\u8d4b\u521d\u59cb\u503c\uff0c\u6ce8\u610fdis[i][i]:\n\t  \u2460 i\u8868\u793a\u662f\u51e0\u53f7\u70b9\u800c\u4e0d\u662f\u5750\u6807\uff1b \n\t  \u2461\u56e0\u4e3a\u5230\u65f6\u5019\u8981\u6d88\u8017\u4e00\u6b65\u6765\u627e\u7b2c\u4e00\u6b65\uff0c\u5e72\u8106\u76f4\u63a5\u628a\u521d\u503c\u8d4b\u503c\u4e3a 1\uff0c\u7136\u540e\u7279\u5224\u76f8\u7b49\u7684\u60c5\u51b5\u66f4\u4e3a\u65b9\u4fbf\n\n\tfor (int i = 1; i <= n; ++ i)\n\t\tfor (int j = 1; j <= n; ++ j)\n\t\t\tif (id[i][j])\n\t\t\t\tfor (int k = 1; k <= 4; ++ k){\n\t\t\t\t\tint too = to[i][j][k];\n\t\t\t\t\tG[too][k].push_back(id[i][j]);\n\t\t\t\t} //\u5efa\u8fb9\n\tfor (int i = 1; i <= tot; ++ i)\n\t\tq.push(make_pair(i, i));\n\t\t//\u518d\u6b21\u5f3a\u8c03\uff0c i\u8868\u793a\u662f\u51e0\u53f7\u70b9\u800c\u4e0d\u662f\u5750\u6807\uff1b\n\t\u63a5\u7740\u5c31\u662f\u8bb0\u641c\u3002\n```\n\u5982\u679c\u5b9e\u6709\u9700\u8981\u770b\u4ee3\u7801\uff0c\u8bf7[\u79fb\u6b65\u6b64\u5904](https://www.luogu.com.cn/paste/kj921xjj)",
        "postTime": 1620653764,
        "uid": 199220,
        "name": "\u5929\u624d\u9893\u5e9f\u5b66\u5bb6",
        "ccfLevel": 6,
        "title": "P7473 [NOI Online 2021 \u5165\u95e8\u7ec4] \u91cd\u529b\u7403 \u9898\u89e3"
    },
    {
        "content": "## P7473 [NOI Online 2021 \u5165\u95e8\u7ec4] \u91cd\u529b\u7403\n\n### \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u6b63\u65b9\u5f62\u5e73\u9762\uff0c\u67d0\u4e9b\u4f4d\u7f6e\u6709\u969c\u788d\uff0c\u5bf9\u4e8e\u5e73\u9762\u4e0a\u4e24\u4e2a\u7403\uff0c\u6bcf\u6b21\u4f60\u53ef\u4ee5\u6539\u53d8\u91cd\u529b\u65b9\u5411\u4f7f\u4e24\u4e2a\u7403\u4e0b\u843d\u5230\u6700\u5e95\u7aef\uff0c\u6c42\u4f7f\u4e24\u4e2a\u7403\u4f4d\u7f6e\u91cd\u5408\u7684\u6700\u5c0f\u6539\u53d8\u91cd\u529b\u6b21\u6570\u3002\u969c\u788d\u56fa\u5b9a\uff0c\u591a\u6b21\u8be2\u95ee\u4e24\u4e2a\u7403\u7684\u4f4d\u7f6e\u3002\n\n### \u601d\u8def\n\n\u8003\u8651\u6700\u66b4\u529b\u7684\u60f3\u6cd5\uff0c\u603b\u5171\u6709 $n^4$ \u79cd\u72b6\u6001\uff0c\u5373\u4e24\u4e2a\u7403\u7684\u5750\u6807\u3002\n\n\u8003\u8651\u4f18\u5316\u72b6\u6001\u6570\uff0c\u53d1\u73b0\u53ea\u6709\u969c\u788d\u7269\uff08\u8fb9\u754c\uff09\u65c1\u8fb9\uff08\u56db\u8054\u901a\uff09\u7684\u4f4d\u7f6e\u624d\u6709\u7528\u3002\u5b9e\u9645\u6700\u5927\u4f4d\u7f6e\u6570\u4e3a $250\\times 4+250\\times 4=2000$ \u5de6\u53f3\u3002\u90a3\u4e48\u5b9e\u9645\u72b6\u6001\u6570\u6700\u5927\u4e3a $2000\\times 2000=4000000$ \u5de6\u53f3\u3002\n\n\u6211\u4eec\u628a\u8fd9\u4e9b\u72b6\u6001\u770b\u505a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u53ea\u80fd\u6709\u56db\u6761\u51fa\u8fb9\uff0c\u90a3\u4e48\u8fb9\u6570\u548c\u70b9\u6570\u540c\u9636\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e86\u53e6\u5916\u4e00\u4e2a\u66b4\u529b\u7684\u60f3\u6cd5\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u521d\u59cb\u5c40\u9762\uff0c\u66b4\u529b BFS\u3002\n\n\u56e0\u4e3a\u6709\u591a\u7ec4\u8be2\u95ee\u8003\u8651\u4f18\u5316\u3002\u5b9e\u9645\u4e0a\u6700\u7ec8\u91cd\u5408\u7684\u72b6\u6001\u6709 $2000$ \u4e2a\uff0c\u6211\u4eec\u53cd\u5411\u5efa\u8fb9\uff0c\u7136\u540e\u4ece\u8fd9\u4e9b\u70b9\u5f00\u59cb BFS \u51fa\u5230\u6240\u6709\u72b6\u6001\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u5019\u679a\u4e3e\u7b2c\u4e00\u6b21\u6539\u53d8\u91cd\u529b\u7684\u65b9\u5411\u5373\u53ef\u3002\uff08\u6ce8\u610f\u5224\u91cd\u5408\uff09\n\n### \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#include<cstring>\n#include<cmath>\n#include<vector>\nusing namespace std;\ninline int read(){\n\tint w=0,x=0;char c=getchar();\n\twhile(!isdigit(c))w|=c=='-',c=getchar();\n\twhile(isdigit(c))x=x*10+(c^48),c=getchar();\n\treturn w?-x:x;\n}\nnamespace star\n{\n\tconst int maxn=255,maxm=2010;\n\tint n,m,Q,tot,a[maxn][maxn],t[maxn][maxn][4];\n\tunsigned dis[maxm][maxm];\n\tvector<int> to[maxm][4];\n\tinline void addedge(int a,int b,int c){to[a][c].push_back(b);}\n\tinline void work(){\n\t\tn=read(),m=read(),Q=read();\n\t\twhile(m--) a[read()][read()]=-1;\n\t\tfor(int i=1;i<=n;i++) a[0][i]=a[i][0]=a[n+1][i]=a[i][n+1]=-1;\n\t\tfor(int i=1;i<=n;i++) for(int j=1;j<=n;j++)\n\t\t\tif(!a[i][j] and (a[i-1][j]==-1 or a[i+1][j]==-1 or a[i][j-1]==-1 or a[i][j+1]==-1))\n\t\t\t\ta[i][j]=++tot;\n\t\tfor(int i=1;i<=n;i++) for(int j=1;j<=n;j++) t[i][j][0]=a[i][j-1]==-1?a[i][j]:t[i][j-1][0],t[i][j][1]=a[i-1][j]==-1?a[i][j]:t[i-1][j][1];\n\t\tfor(int i=n;i;i--) for(int j=n;j;j--) t[i][j][2]=a[i][j+1]==-1?a[i][j]:t[i][j+1][2],t[i][j][3]=a[i+1][j]==-1?a[i][j]:t[i+1][j][3];\n\t\tfor(int i=1;i<=n;i++) for(int j=1;j<=n;j++) if(a[i][j]>0) for(int k=0;k<4;k++) addedge(t[i][j][k],a[i][j],k);\n\t\tstatic pair<int,int> q[maxm*maxm];\n\t\tint hd=0,tl=0;\n\t\tmemset(dis,-1,sizeof dis);\n\t\tfor(int i=1;i<=tot;i++) q[++tl]=make_pair(i,i),dis[i][i]=1;\n\t\twhile(hd<tl){\n\t\t\tpair<int,int> x=q[++hd];\n\t\t\tfor(int i=0;i<4;i++) for(auto u:to[x.first][i]) for(auto v:to[x.second][i]) if(dis[u][v]==-1) dis[u][v]=dis[x.first][x.second]+1,q[++tl]=make_pair(u,v);\n\t\t}\n\t\twhile(Q--){\n\t\t\tint x1=read(),y1=read(),x2=read(),y2=read();\n\t\t\tif(x1==x2 and y1==y2) puts(\"0\");\n\t\t\telse printf(\"%d\\n\",min({dis[t[x1][y1][0]][t[x2][y2][0]],dis[t[x1][y1][1]][t[x2][y2][1]],dis[t[x1][y1][2]][t[x2][y2][2]],dis[t[x1][y1][3]][t[x2][y2][3]]}));\n\t\t}\n\t}\n}\nsigned main(){\n\tstar::work();\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1617006818,
        "uid": 280015,
        "name": "Star_Cried",
        "ccfLevel": 9,
        "title": "P7473 [NOI Online 2021 \u5165\u95e8\u7ec4] \u91cd\u529b\u7403"
    },
    {
        "content": "# P7473 \u91cd\u529b\u7403\n\n\u8bf4\u5b9e\u8bdd\u8fd9\u9898\u7f20\u4e86\u6211\u597d\u4e45...\u8db3\u8db3\u6709\u4e24\u4e2a\u661f\u671f...[\u63d0\u4ea4\u4e8678\u6b21](https://www.luogu.com.cn/record/list?pid=P7473&user=%E5%AE%8B%E5%8D%93%E6%98%95&page=1)\u3002\n\n\u56e0\u4e3a\u8fd9\u662f\u56fe\u8bba\u9898\uff0c\u81ea\u7136\u800c\u7136\u5730\u5c31\u60f3\u5230\u7528\u6700\u77ed\u8def\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u5c0f\u7403\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u4e00\u4e2a\u72b6\u6001\uff0c\u7136\u540e\u6bcf\u4e24\u4e2a\u53ef\u4ee5\u8f6c\u79fb\u72b6\u6001\u4e4b\u95f4\u5efa\u7acb\u4e00\u6761\u8fb9\uff0c\u957f\u5ea6\u4e3a $1$\u3002\u7136\u540e\u8dd1\u4e00\u904d SPFA\u3002\n\n\u4f46\u5982\u679c\u6bcf\u4e00\u4e2a\u72b6\u6001 $(x,y,x2,y2)$ \u90fd\u8981\u7b97\u5230\u8dd1\u6700\u77ed\u8def\u7684\u72b6\u6001\u7684\u8bdd\uff0c\u663e\u7136\u4e0d\u884c\uff0c\u56e0\u4e3a $n \\leq 250$\uff0c\u5982\u679c\u8fd9\u6837\uff0c\u5c31\u4e00\u5171\u6709 $n^4$ \u4e5f\u5c31\u662f $3,906,250,000$ \u4e2a\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u5982\u4f55\u89e3\u51b3\uff1a\u6211\u4eec\u53d1\u73b0\uff0c\u5176\u5b9e\u6709\u4e9b\u70b9\u5c0f\u7403\u662f\u4e0d\u53ef\u4ee5\u505c\u7559\u7684\u3002\u6bd4\u5982\u8bf4\u4e0b\u56fe $A$ \u70b9\uff1a\n\n```\n ___ ___ ___ ___ ___\n|###|###|###|###|###|\n|###|###|###|###|###|\n|###|   |   |   |###|\n|###|___|___|___|###|\n|###|   | A |   |###|\n|###|___|___|___|###|\n|###|   |   |   |###|\n|###|___|___|___|###|\n|###|###|###|###|###|\n|###|###|###|###|###|\n```\n\n\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u5c0f\u7403\u53ef\u4ee5\u505c\u7559\u7684\u5730\u65b9\u5c31\u53ef\u4ee5\u4e86\uff0c\u5c0f\u7403\u53ea\u80fd\u505c\u5728\u8fb9\u754c\u6216\u969c\u788d\u65c1\u3002\n\n\u6240\u4ee5\u4e00\u5171\u6709 $4(n+m)$ \u4e2a\u53ef\u505c\u7559\u533a\u57df\u3002\u4e24\u4e2a\u7403\u5c31\u6709 $16(n+m)^2$ \u4e2a\u72b6\u6001\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e9b\u72b6\u6001\u6765 SPFA \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u6211\u4eec\u6bcf\u6b21\u8be2\u95ee\u4e0d\u53ef\u80fd\u6bcf\u6b21\u90fd\u4ece\u65b0\u7b97\u4e00\u904d\u7b54\u6848\u3002\u56e0\u4e3a\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u800c\u4e14 $1 \\leq q \\leq 10^5$\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981\u9884\u5904\u7406\u3002\n\n\u9884\u5904\u7406\u7684\u8bdd\uff0c\u5c31\u8981\u53cd\u5411\u5efa\u8fb9\uff0c\u7136\u540e\u5c06\u6bcf\u4e00\u4e2a\u72b6\u6001 $(x, y, x, y)$ \u653e\u5165 SPFA \u7684\u961f\u5217\u3002\n\n\u7136\u540e\u8dd1\u4e00\u8fb9 SPFA\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee $x, y, x2, y2$\uff0c\u76f4\u63a5\u8f93\u51fa `dis[hash(x, y, x2, y2)]`\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### \u6ce8\u610f\u4e8b\u9879\uff1a\n\n1. $vector$ **\u592a\u6162\u4e86\uff0c\u8981\u7528\u94fe\u5f0f\u524d\u5411\u661f**\u3002\u6211\u7528 vector \u6765\u5b58\u56fe\uff0c\u7ed3\u679c\u6570\u636e #19 \u4e00\u76f4 $TLE$\u3002\n\n2. **\u4e24\u4e2a\u5c0f\u7403\u521d\u59cb\u4f4d\u7f6e\u53ef\u80fd\u4e0d\u5728\u53ef\u505c\u7559\u533a\u57df\u5185**\uff0c\u9700\u8981\u5148\u679a\u4e3e\u56db\u4e2a\u65b9\u5411\uff0c\u518d\u8f93\u51fa\u3002\n\n3. **\u4e24\u4e2a\u5c0f\u7403\u521d\u59cb\u4f4d\u7f6e\u53ef\u80fd\u76f8\u540c**\uff0c\u9700\u8981\u76f4\u63a5\u8f93\u51fa $0$\u3002\n\n### \u732e\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<queue>\n#include<cstring>\nusing namespace std;\nstruct POS\n{\n\tint x;\n\tint y;\n};\nstruct edge\n{\n\tint to,next;\n};\nint head[40000000];\nedge e[40000000];\nint headi = 1;\nPOS pos[2010];\nconst int dx[4] = {0,1,0,-1};\nconst int dy[4] = {1,0,-1,0};\nbool board[300][300]; \nbool can[300][300]; \nint n, m, q;\nint nxt[300][300][4];\nint has[2010][2010];\nint cnt;\nqueue<int> que;\nint dis[4100000];\nbool inque[4100000];\nvoid adde(int ai,int bi)\n{\n\te[headi].to=bi;\n\te[headi].next=head[ai];\n\thead[ai]=headi++;\n}\nvoid bfs()\n{\n\twhile (!que.empty())\n\t{\n\t\tint u = que.front();\n\t\tque.pop();\n\t\tinque[u] = false;\n\t\tfor(int i = head[u]; i; i = e[i].next)\n\t\t{\n\t\t\tint v = e[i].to;\n\t\t\tif (dis[v] > dis[u] + 1)\n\t\t\t{\n\t\t\t\tdis[v] = dis[u] + 1;\n\t\t\t\tif(!inque[v])\n\t\t\t\t{\n\t\t\t\t\tinque[v] = true;\n\t\t\t\t\tque.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\ninline int hash_of(int x1, int y1, int x2, int y2)\n{\n\tif (x1 > x2 || (x1 == x2 && y1 > y2))\n\t{\n\t\tx1 = x1 ^ x2;\n\t\tx2 = x1 ^ x2;\n\t\tx1 = x1 ^ x2;\n\t\ty1 = y1 ^ y2;\n\t\ty2 = y1 ^ y2;\n\t\ty1 = y1 ^ y2;\n\t}\n\treturn (has[x1][y1] << 11) | has[x2][y2];\n}\n\nint find(const int x, const int y, const int dir)\n{\n    int& NXT = nxt[x][y][dir];\n    if (NXT)\n        return NXT;\n\tif(!board[x + dx[dir]][y + dy[dir]])\n\t{\n\t\treturn NXT = find(x + dx[dir], y + dy[dir], dir);\n\t}\n\telse\n\t{\n\t\tif ((dir & 1) == 0)\n\t\t{\n\t\t\tNXT = y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tNXT = x;\n\t\t}\n\t\treturn NXT;\n\t}\n}\n\ninline int read() \n{\n    int x = 0, f = 1;\n    char c = getchar();\n    while(c > '9' || c < '0') {if(c == '-') f = -1;c = getchar();}\n    while(c >= '0'&&c <= '9') {x = x * 10 + c - '0';c = getchar();}\n    return x * f;\n}\nint main()\n{\n\tmemset(dis, 0x3f, sizeof(dis));\n\tn = read();\n\tm = read();\n\tq = read();\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tboard[i][n + 1] = 1;\n\t\tboard[n + 1][i] = 1;\n\t\tboard[i][0] = 1;\n\t\tboard[0][i] = 1;\n\t\tcan[1][i] = 1;\n\t\tcan[i][1] = 1;\n\t\tcan[i][n] = 1;\n\t\tcan[n][i] = 1;\n\t}\n\tfor(int i = 0; i < m; i++)\n\t{\n\t\tint x, y;\n\t\tx = read();\n\t\ty = read();\n\t\tboard[x][y] = 1;\n\t\tcan[x][y] = false;\n\t\tif (!board[x + 1][y]) can[x + 1][y] = 1;\n\t\tif (!board[x - 1][y]) can[x - 1][y] = 1;\n\t\tif (!board[x][y + 1]) can[x][y + 1] = 1;\n\t\tif (!board[x][y - 1]) can[x][y - 1] = 1;\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tfor(int j = 1; j <= n; j++)\n\t\t{\n            if (!board[i][j] && can[i][j])\n\t\t\t{\n\t\t\t\tif(!nxt[i][j][0])\n\t\t\t\t{\n\t\t\t\t\tfind(i, j, 0);\n\t\t\t\t}\n\t\t\t\tif(!nxt[i][j][1])\n\t\t\t\t{\n\t\t\t\t\tfind(i, j, 1);\n\t\t\t\t}\n\t\t\t\tif(!nxt[i][j][2])\n\t\t\t\t{\n\t\t\t\t\tfind(i, j, 2);\n\t\t\t\t}\n\t\t\t\tif(!nxt[i][j][3])\n\t\t\t\t{\n\t\t\t\t\tfind(i, j, 3);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tfor(int j = 1; j <= n; j++)\n\t\t{\n\t\t\tif(can[i][j])\n\t\t\t{\n\t\t\t\tpos[cnt] = {i, j};\n\t\t\t\thas[i][j] = cnt++;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0; i < cnt; i++)\n\t{\n\t\tfor(int j = i + 1; j < cnt; j++)\n\t\t{\n\t\t\tfor(int k = 0; k < 4; k++)\n\t\t\t{\n\t\t\t\tint hashxy = hash_of(pos[i].x, pos[i].y, pos[j].x, pos[j].y);\n\t\t\t\tint next1 = nxt[pos[i].x][pos[i].y][k];\n\t\t\t\tint next2 = nxt[pos[j].x][pos[j].y][k];\n\t\t\t\tif((k&1) == 0)\n\t\t\t\t{\n\t\t\t\t\tadde(hash_of(pos[i].x, next1, pos[j].x, next2), hashxy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tadde(hash_of(next1, pos[i].y, next2, pos[j].y), hashxy);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t    int hash = hash_of(pos[i].x, pos[i].y, pos[i].x, pos[i].y);\n\t\tque.push(hash);\n\t\tdis[hash] = 0;\n\t\tinque[hash] = true;\n\t}\n\tbfs();\n\tfor(int i = 0; i < q; i++)\n\t{\n\t\tint x1, y1, x2, y2;\n\t\tx1 = read();\n\t\ty1 = read();\n\t\tx2 = read();\n\t\ty2 = read();\n\t\tif(x1 == x2 && y1 == y2)\n\t\t{\n\t\t\tcout << 0 << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tint ans = 0x3f3f3f3f;\n\t\tfor(int j = 0; j < 4; j++)\n\t\t{\n\t\t\tif((j & 1) == 0)\n\t\t\t{\n\t\t\t    int d = dis[hash_of(x1, nxt[x1][y1][j], x2, nxt[x2][y2][j])];\n\t\t\t\tif(nxt[x1][y1][j] == y1 && nxt[x2][y2][j] == y2)\n\t\t\t\t{\n\t\t\t\t\tans = min(ans, d);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tans = min(ans, d + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t    int d = dis[hash_of(nxt[x1][y1][j], y1, nxt[x2][y2][j], y2)];\n\t\t\t\tif(nxt[x1][y1][j] == x1 && nxt[x2][y2][j] == x2)\n\t\t\t\t{\n\t\t\t\t\tans = min(ans, d);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tans = min(ans, d + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(ans == 0x3f3f3f3f)\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1618916006,
        "uid": 194465,
        "name": "\u5b8b\u5353\u6615",
        "ccfLevel": 0,
        "title": "P7473"
    },
    {
        "content": "\u524d\u8a00\uff1a\u611f\u8c22\u5ba1\u6838\u5458\u767e\u5fd9\u4e2d\u5ba1\u6838 MnZn \u9898\u89e3\u3002\n\n# \u6b63\u6587\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f\u4e2a\u6700\u77ed\u8def\u7684\u9898\u76ee\uff0c\u4f46\u662f\u56fe\u4e0a\u6700\u591a $250^2$ \u4e2a\u70b9\uff0c\u8fd9\u4e48\u591a\u70b9\u8fd8\u8981\u6c42\u6700\u77ed\u8def\uff0c\u590d\u6742\u5ea6\u76f4\u63a5\u70b8\u4e86\u3002\n\n\u4f46\u662f\u8fdb\u4e00\u6b65\u601d\u8003\uff0c\u8fd9\u4e2a\u7403\u6bcf\u6b21\u4f1a\u843d\u5230\u969c\u788d\u65c1\u3002\u4e5f\u5c31\u662f\u8bf4\u5373\u4f7f\u7403\u521d\u59cb\u4f4d\u7f6e\u4e0d\u5728\u969c\u788d\u7269\u65c1\uff0c\u5b83\u7ecf\u8fc7\u4e00\u6b21\u4e0b\u843d\u540e\u5c31\u4f1a\u4e00\u76f4\u8d34\u7740\u969c\u788d\u7269\u8d70\u3002\n\n\u6240\u4ee5\u5b9e\u9645\u4e0a\u6709\u7528\u7684\u70b9\u5c31\u53ea\u6709\u969c\u788d\u7269\u65c1\u7684\u70b9\uff0c\u505a\u591a $4n+4m$ \u4e2a\uff0c\u4e0d\u8d85\u8fc7 $2000$\u3002\n\n\u4f18\u5316\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8fd9\u4e9b\u70b9\u53bb\u5efa\u56fe\uff0c\u7136\u540e\u8003\u8651\u53bb\u6c42\u6700\u77ed\u8def\u4e86\u3002\n\n**Tip**\uff1a\u4e3a\u65b9\u4fbf\u8868\u793a\u4e0b\u9762\u6211\u628a\u8fd9\u4e9b\u5b9e\u9645\u6709\u7528\u7684\u70b9\u53eb**\u6807\u8bb0\u70b9**\u3002\n\n## step1 \u9884\u5904\u7406\n\u628a**\u6807\u8bb0\u70b9**\u627e\u51fa\u6765\uff0c\u7136\u540e\u8bb0\u5f55\u4e00\u4e0b\u56fe\u4e0a\u6bcf\u4e00\u4e2a\u70b9\uff08\u5305\u62ec**\u6807\u8bb0\u70b9**\u548c\u975e\u6807\u8bb0\u70b9\uff09\u5411\u4e0a/\u4e0b/\u5de6/\u53f3\u843d\u4f1a\u843d\u5728\u54ea\u91cc\u3002\n```\nint id(int x,int y){return n*(x-1)+y;}\nvoid init(){\n\tcin>>n>>m>>q;\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;cin>>x>>y;\n\t\tflag[x][y]=1;\n\t}\n\tfor(int i=1;i<=n;i++) flag[0][i]=flag[n+1][i]=flag[i][0]=flag[i][n+1]=1;//\u8fb9\u754c\u4e5f\u7b97\u969c\u788d\u7269\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(flag[i][j]) continue;\n\t\t\tif(flag[i-1][j] or flag[i+1][j] or flag[i][j+1] or flag[i][j-1]) number[i][j]=++num;//\u5224\u65ad\u662f\u5426\u4e3a\u6807\u8bb0\u70b9\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tint posj=0;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(flag[i][j]) posj=j;\n\t\t\telse a[id(i,j)].lt=number[i][posj+1];\n\t\t}\n\t\tposj=n+1;\n\t\tfor(int j=n;j>=1;j--){\n\t\t\tif(flag[i][j]) posj=j;\n\t\t\telse a[id(i,j)].rt=number[i][posj-1];\n\t\t}\n\t}\n\tfor(int j=1;j<=n;j++){\n\t\tint posi=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(flag[i][j]) posi=i;\n\t\t\telse a[id(i,j)].up=number[posi+1][j];\n\t\t}\n\t\tposi=n+1;\n\t\tfor(int i=n;i>=1;i--){\n\t\t\tif(flag[i][j]) posi=i;\n\t\t\telse a[id(i,j)].down=number[posi-1][j];\n\t\t}\n\t}\n    //\u8fd9\u91cc\u6c42\u6240\u6709\u70b9\u5411\u4e0a/\u4e0b/\u5de6/\u53f3\u843d\u4f1a\u843d\u5728\u90a3\u4e2a\u70b9\uff0c\u770b\u4f3c\u5f88\u957f\u4f46\u90fd\u662f\u590d\u5236\u7c98\u8d34\n}\n```\n\u8fd9\u91cc\u6bd4\u8f83\u7b80\u5355\uff0c\u6ce8\u610f\u7ec6\u8282\u5c31\u597d\u4e86\u3002\n\n## step2 \u5efa\u56fe & \u6700\u77ed\u8def\n\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u6700\u77ed\u8def\u662f\u5bf9\u4e8e**\u6807\u8bb0\u70b9\u7684**\u800c\u8a00\u7684\uff08\u4e0d\u5173\u975e\u6807\u8bb0\u70b9\u7684\u4e8b\u513f\uff09\uff0c\u975e\u6807\u8bb0\u70b9\u7684\u6700\u77ed\u8def\u4f60\u7528\u4e00\u6b65\u8df3\u5230**\u6807\u8bb0\u70b9**\u4e0a\u5c31\u884c\u3002\n\n\n------------\n\n\u95f2\u8bdd\uff1a\u8fd9\u91cc\u5176\u5b9e\u6211\u6700\u5148\u8003\u8651\u7684\u662f floyed \u56e0\u4e3a\u6709 $10^5$ \u6b21\u8be2\u95ee\u70b9\u5bf9\u7684\u6700\u77ed\u8def\uff0c\u6700\u77ed\u8def\u7b97\u6cd5\u91cc\u6211\u5c31\u53ea\u80fd\u60f3\u5230\u5b83\u4e86\u3002\n\n\u4f46\u5f88\u5feb\u6211\u53c8\u53d1\u73b0\u4e0d\u884c\uff0c\u56e0\u4e3a\u4e24\u4e2a\u70b9\u8981\u540c\u65f6\u5f80\u4e00\u4e2a\u65b9\u5411\u8dd1\uff0c\u800c\u5b83 floyed \u53c8\u7ef4\u62a4\u4e0d\u4e86\u3002\n\n\u4e8e\u662f\u6211\u60f3\u5230\u8fd9\u662f\u5728\u56fe\u91cc\u6e38\u8d70\u7684\u9898\uff0c\u5c31\u8bd5\u4e86\u8bd5 bfs\uff08\u8fd8\u771f\u53ef\u4ee5\uff09\u3002\n\n\n------------\n\n\u5982\u679c\u4e24\u4e2a\u70b9\u7528 bfs \u6e38\u8d70\u7334\u5e74\u9a6c\u6708\u624d\u4f1a\u76f8\u9047\u554a\uff0c\u6240\u4ee5\u6b63\u96be\u5219\u53cd\uff0c\u5728 bfs \u4e2d\u4ee5\u4e24\u70b9\u76f8\u9047\u70b9\u4e3a\u8d77\u70b9\uff0c\u4e24\u4e2a\u70b9\u4e0d\u65ad\u5f80\u5916\u540c\u65b9\u5411\u8df3\uff08\u6269\u5c55\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6c42\u51fa\u4efb\u610f\u4e24\u70b9\u7684\u6700\u77ed\u8def\u5566\u3002\n\n#### \u90e8\u5206\u4ee3\u7801\uff1a\n```\nvoid add(int k,int x,int y){\n\tne[++tot]=head[k][x];\n\tto[tot]=y;\n\thead[k][x]=tot;\n}//\u6bcf\u4e2a\u65b9\u5411\u4e0a\u8df3\u8fc7\u6765\u7684\u70b9\u8981\u6709\u4e00\u4e2a\u96c6\u5408\nvoid build(){\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(!number[i][j]) continue;\n\t\t\tadd(1,a[id(i,j)].up,number[i][j]);//\u5411\u4e0a\u8df3\n\t\t\tadd(2,a[id(i,j)].down,number[i][j]);//\u5411\u4e0b\u8df3\n\t\t\tadd(3,a[id(i,j)].lt,number[i][j]);//\u5411\u5de6\u8df3\n\t\t\tadd(4,a[id(i,j)].rt,number[i][j]);//\u5411\u53f3\u8df3\n\t\t\t//\u6ce8\u610f\u8fd9\u91cc\u662f\u7740\u9646\u70b9\u5411\u8d77\u8df3\u70b9\u8fde\u8fb9,\u56e0\u4e3a\u4ee5\u76f8\u9047\u70b9\u4e3a\u8d77\u70b9\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e\u662f\u53cd\u7740\u8df3\u56de\u53bb\uff0c\u4e8e\u662f\u8fde\u53cd\u8fb9\n\t\t}\n\t} \n}\nstruct data{int x,y;};queue<data>dq;\nint dis[N][N];\nvoid work(){\n\tfor(int i=1;i<=num;i++) for(int j=1;j<=num;j++) dis[i][j]=inf;\n\tfor(int i=1;i<=num;i++) dq.push((data){i,i}),dis[i][i]=1;//\u8fd9\u91ccdis\u76f4\u63a5\u8d4b1\uff0c\u56e0\u4e3a\u9664\u975e\u8fd9\u4e24\u4e2a\u70b9\u662f\u540c\u4e00\u4e2a\u70b9\uff0c\u4e0d\u7136\u80af\u5b9a\u662f\u8981\u8017\u8d39\u4e00\u6b65\u8df3\u5230\u5176\u4ed6\u70b9\u4e0a\u7684\n\twhile(!dq.empty()){\n\t\tdata u=dq.front();dq.pop();\n\t\tint x=u.x,y=u.y;\n\t\tfor(int k=1;k<=4;k++){\n\t\t\tfor(int i=head[k][x];i;i=ne[i]) for(int j=head[k][y];j;j=ne[j]){\n\t\t\t\t\tint u=to[i],v=to[j];\n\t\t\t\t\tif(dis[u][v]>=inf){\n\t\t\t\t\tdis[u][v]=dis[v][u]=dis[x][y]+1;\n               \t\t//dis[u][v]\u662f\u7b49\u4e8edis[v][u]\u7684\uff0c\u6240\u4ee5\u8fd9\u6837\u8d4b\u503c\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u901f\u5ea6(3.94s->2.86s)\n\t\t\t\t\tdq.push((data){u,v}); \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\n## step3 \u8f93\u51fa\u7b54\u6848\n\u5206\u4e24\u7c7b\uff1a\n\n(1) \u4e24\u70b9\u91cd\u5408\uff0c\u76f4\u63a5\u8f93\u51fa $0$ \u5373\u53ef\u3002\n\n(2) \u4e24\u70b9\u4e0d\u91cd\u5408\uff1a\u679a\u4e3e\u7b2c\u4e00\u6b65\u5f80\u54ea\u4e2a\u65b9\u5411\u8df3\uff0c\u6c42\u6700\u5c0f\u503c\u5373\u53ef\u3002\n```\nint D(int x,int y){return dis[x][y];}\nvoid out(){\n\twhile(q--){\n\t\tint aa,b,c,d;cin>>aa>>b>>c>>d;\n\t\tif(aa==c and b==d) puts(\"0\");\n\t\telse{\n\t\t\tint d1=D(a[id(aa,b)].lt,a[id(c,d)].lt);\n\t\t\tint d2=D(a[id(aa,b)].rt,a[id(c,d)].rt);\n\t\t\tint d3=D(a[id(aa,b)].up,a[id(c,d)].up);\n\t\t\tint d4=D(a[id(aa,b)].down,a[id(c,d)].down);\n\t\t\tint ans=min(min(d1,d2),min(d3,d4));\n\t\t\tif(ans<1e9) cout<<ans<<endl;\n\t\t\telse puts(\"-1\");\n\t\t}\n\t}\n}\n```\n------------\n[code](https://www.luogu.com.cn/paste/hm5dhik4)\n\n\u5b8c\u7ed3\u6492\u82b1 QAQ\u3002",
        "postTime": 1682172177,
        "uid": 556740,
        "name": "hzx2020",
        "ccfLevel": 6,
        "title": "P7473 [NOI Online 2021 \u5165\u95e8\u7ec4] \u91cd\u529b\u7403"
    },
    {
        "content": "[\u6b22\u8fce\u60a8\u5728\u6211\u7684\u535a\u5ba2\u9605\u8bfb\u672c\u6587\uff0c\u8c22\u8c22\uff01](https://www.cnblogs.com/crab-in-the-northeast/p/luogu-p7473.html)\n\n[P7473 NOI Online 2021 \u5165\u95e8\u7ec4 \u91cd\u529b\u7403](https://www.luogu.com.cn/problem/P7473)\u3002\n\n\u7403\u5728\u8fd0\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u9664\u4e86\u521d\u59cb\u72b6\u6001\uff0c\u90fd\u53ea\u4f1a\u8fd0\u52a8\u5230\u4e0e\u8fb9\u754c\u6216\u969c\u788d\u7269\u76f8\u90bb\u7684\u70b9\uff0c\u4e0d\u59a8\u79f0\u4e4b\u4e3a\u8f6c\u79fb\u70b9\u3002\u4e0d\u96be\u53d1\u73b0\u8f6c\u79fb\u70b9\u6700\u591a\u53ea\u6709 $4(n+m)$ \u4e2a\u3002\n\n\u6211\u4eec\u8003\u8651\u5c06\u8f6c\u79fb\u70b9\u4ece $1$ \u5f00\u59cb\u7f16\u53f7\u3002\n\n\u53d1\u73b0\u4e24\u4e2a\u7403\u5206\u522b\u5904\u4e8e\u4e24\u4e2a\u8f6c\u79fb\u70b9\u7684\u603b\u72b6\u6001\u6570\u4e0d\u8d85\u8fc7 $[4(n+m)]^2 \\le 4\\ \\times 10^6$ \u4e2a\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u6211\u4eec\u7528 $(x, y)$ \u8868\u793a\u7b2c\u4e00\u4e2a\u7403\u5728\u8f6c\u79fb\u70b9 $x$\uff0c\u7b2c\u4e8c\u4e2a\u7403\u5728\u8f6c\u79fb\u70b9 $y$ \u7684\u72b6\u6001\u3002\n\n\u7403\u521d\u59cb\u65f6\u53ef\u80fd\u4e0d\u5728\u8f6c\u79fb\u70b9\u3002\u53ef\u4ee5\u679a\u4e3e\u7b2c\u4e00\u6b21\u7684\u56db\u79cd\u91cd\u529b\u65b9\u5411\uff0c\u8ba9\u7403\u8fd0\u52a8\u5230\u8f6c\u79fb\u70b9\u4e0a\uff0c\u6700\u540e\u6c42\u7b2c\u4e00\u6b21\u91cd\u529b\u53d6\u54ea\u79cd\u65b9\u5411\u80fd\u8ba9\u7b54\u6848\u6700\u5c0f\u5373\u53ef\u3002\n\n\u4e3a\u4e86\u505a\u5230\u5feb\u901f\u6c42\u51fa\u7403\u5f80\u4e00\u4e2a\u65b9\u5411\u8fd0\u52a8\u5230\u7684\u8f6c\u79fb\u70b9\u7f16\u53f7\uff0c\u6211\u4eec\u8981\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u5f80\u6bcf\u4e2a\u65b9\u5411\u79fb\u52a8\u5230\u7684\u8f6c\u79fb\u70b9\uff0c\u8fd9\u4e2a\u53ef\u4ee5 $\\Theta(nm)$ \u505a\u5230\u3002\n\n\u4e8e\u662f\u56de\u7b54\u8be2\u95ee\u65f6\uff0c\u53ef\u4ee5 $\\Theta(1)$ \u6c42\u5f97\u7403\u5411\u67d0\u4e2a\u65b9\u5411\u79fb\u52a8\u5230\u7684\u8f6c\u79fb\u70b9\u7f16\u53f7\u3002\n\n\u73b0\u5728\u6211\u4eec\u53ea\u7528\u8003\u8651\u8f6c\u79fb\u70b9\u4e86\u3002\n\n\u8003\u8651\u5efa\u56fe\u3002\u8bbe\u8f6c\u79fb\u70b9 $x$ \u5411\u5de6\u53ef\u4ee5\u8fd0\u52a8\u5230\u8f6c\u79fb\u70b9 $p$\uff0c\u5411\u4e0b\u53ef\u4ee5\u8fd0\u52a8\u5230\u8f6c\u79fb\u70b9 $q$\uff1b\u70b9 $y$ \u5411\u5de6\u53ef\u4ee5\u8fd0\u52a8\u5230\u8f6c\u79fb\u70b9 $s$\uff0c\u5411\u4e0b\u53ef\u4ee5\u8fd0\u52a8\u5230\u8f6c\u79fb\u70b9 $t$\u3002\n\n\u5982\u679c\u4e0a\u4e00\u6b21\u4e24\u4e2a\u7403\u5904\u4e8e $(x, y)$ \u72b6\u6001\uff0c\u90a3\u4e48\u5411\u5de6\u4e00\u6b21\u8fd0\u52a8\u53ef\u4ee5\u5f97\u5230 $(p, s)$\uff0c\u5411\u4e0b\u8fd0\u52a8\u4e00\u6b21\u53ef\u4ee5\u5f97\u5230 $(q, t)$\u3002\n\n\u56e0\u6b64\uff0c$(x, y)$ \u53ef\u4ee5\u8f6c\u79fb\u5230 $(p, s)$ \u6216 $(q, t)$\uff0c\u800c\u4e0d\u80fd\u4e00\u6b21\u8f6c\u79fb\u5230 $(q, s)$ \u6216 $(p, t)$\u3002\u8fd9\u7ed9\u6211\u4eec\u4ec0\u4e48\u542f\u53d1\uff1f\n\n\u5982\u679c\u6211\u4eec\u5efa\u56fe\u6309\u7167 $x \\to p$\uff0c$x \\to q$\uff0c$y \\to s$\uff0c$y \\to t$ \u8fd9\u56db\u6761\u8fb9\u5168\u90fd\u653e\u4e00\u8d77\u5927\u9505\u4e71\u7096\uff0c\u6211\u4eec\u5c06\u65e0\u6cd5\u4ece $(x, y)$ \u5f00\u59cb\u6b63\u786e\u8f6c\u79fb\u5230\u4e0b\u4e00\u6b65\u3002\n\n\u4e24\u79cd\u64cd\u4f5c\u65b9\u5f0f\uff1a\n\n- \u7ed9\u6bcf\u6761\u8fb9\u52a0\u4e00\u6761\u5c5e\u6027\uff1a\u65b9\u5411\u3002\u4ece $(x, y)$ \u8fd9\u4e2a\u72b6\u6001\u5f00\u59cb\uff0c\u540c\u65f6\u679a\u4e3e\u4ece $x$ \u5f00\u59cb\u7684\u4e00\u6761\u51fa\u8fb9 $e_x$ \u548c\u4ece $y$ \u5f00\u59cb\u7684\u4e00\u6761\u51fa\u8fb9 $e_y$\u3002\u53ea\u6709\u5f53 $e_x$ \u548c $e_y$ \u65b9\u5411\u5c5e\u6027\u76f8\u540c\u65f6\uff0c\u518d\u6309\u7167\u8fd9\u4e24\u4e2a\u8fb9\u7684\u65b9\u5411\uff0c\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u5408\u6cd5\u72b6\u6001\uff0c\u6bd4\u5982 $(p, s)$ \u6216 $(q, t)$\u3002\n- \u5efa\u56db\u5f20\u56fe\uff0c\u6bcf\u5f20\u56fe\u53ea\u653e\u4e00\u79cd\u65b9\u5411\u7684\u8fb9\u3002\u8fd9\u6837\u4ee5\u6765\uff0c\u6211\u4eec\u5148\u679a\u4e3e\u56db\u5f20\u56fe\u4e2d\u7684\u4e00\u5f20\uff0c\u518d\u8ba9 $(x, y)$ \u6309\u7167\u8fd9\u5f20\u56fe\u4e0a\u9762\u7684\u8fb9\u8f6c\u79fb\u5373\u53ef\u3002\u6bd4\u5982\uff0c\u4e00\u5f20\u53ea\u6709\u201c\u5411\u5de6\u201d\u8fb9\u7684\u56fe\u4e2d\uff0c\u80fd\u8ba9 $(x, y)$ \u8f6c\u79fb\u5230 $(p, s)$\uff1b\u800c\u4e00\u5f20\u53ea\u6709\u201c\u5411\u4e0b\u201d\u8fb9\u7684\u56fe\u4e2d\uff0c\u80fd\u8ba9 $(x, y)$ \u8f6c\u79fb\u5230 $(q, t)$\uff0c\u4e0d\u4f1a\u6df7\u4e71\u3002\n\n\u6211\u9009\u62e9\u4e86\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u3002\u56e0\u4e3a\u8fd9\u6837\u4ee5\u6765\uff0c\u4ece\u6bcf\u4e2a\u72b6\u6001\u5f00\u59cb\u679a\u4e3e\u51fa\u8fb9\u65f6\uff0c\u53ea\u4f1a\u679a\u4e3e\u5230\u6709\u7528\u7684\u540c\u5411\u51fa\u8fb9\u5bf9\uff0c\u679a\u4e3e\u6b21\u6570\u4f1a\u66f4\u5c11\u3002\n\n\u7136\u540e\u518d\u89c2\u5bdf\u8fd9\u4e2a\u9898\uff0c\u662f\u4e00\u4e2a\u591a\u7ec8\u70b9\u6700\u77ed\u8def\u95ee\u9898\u3002\u6211\u4eec\u5e94\u8be5\u8f6c\u5316\u6210\u591a\u6e90\u70b9\u6700\u77ed\u8def\u95ee\u9898\u3002\n\n\u53cd\u56fe\u4e0a\u591a\u6e90\u70b9\u5230\u4e00\u4e2a\u70b9 $u$ \u7684\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f\u539f\u56fe\u4e0a\u8fd9\u4e2a\u70b9 $u$ \u5230\u591a\u7ec8\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u4e3a\u6b64\u6211\u4eec\u8981\u5c06\u4e0a\u9762\u8fd9\u4e2a\u56fe\u53cd\u8fc7\u6765\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e48\u5efa\uff1a$p \\to x$\uff0c$q \\to x$\uff0c$s \\to y$\uff0c$t \\to y$\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u518d\u5c06\u6240\u6709\u8868\u793a\u4e24\u4e2a\u7403\u5904\u4e8e\u540c\u4e00\u4e2a\u8f6c\u79fb\u70b9\u7684\u72b6\u6001\uff0c\u4e5f\u5373 $(x, x)$ \u8fd9\u79cd\u72b6\u6001\u4f5c\u4e3a\u6e90\u70b9\u3002\u8fd9\u4e9b\u6e90\u70b9\u5bf9\u5e94\u7684 $\\mathrm{dis} = 0$\u3002\n\n\u7136\u540e\u4ece\u8fd9\u4e9b\u6e90\u70b9\u5f00\u59cb\uff0cbfs \u6c42\u5f97\u5176\u4f59\u6240\u6709 $[4(n + m)]^2$ \u4e2a\u72b6\u6001\u5bf9\u5e94\u7684\u8ddd\u79bb\u3002\n\n\u5728\u8be2\u95ee\u4e4b\u524d\uff0cbfs \u9884\u5904\u7406\u51fa\u8ddd\u79bb\uff0c\u56de\u7b54\u65f6\u5c31\u80fd\u505a\u5230 $\\Theta(1)$ \u4e86\u3002\n\n\u672c\u9898\u4e2d\uff0c\u7531\u4e8e\u662f\u4e24\u4e2a\u70b9\u4e00\u8d77\u8f6c\u79fb\uff0cbfs \u65f6\u95f4\u590d\u6742\u5ea6\u6570\u91cf\u7ea7\u662f\u56fe\u4e0a\u70b9\u6570\u7684\u5e73\u65b9\u52a0\u8fb9\u6570\u7684\u5e73\u65b9\uff0c\u800c\u70b9\u6570\uff08\u5373\u8f6c\u79fb\u70b9\u6570\uff09\u4e3a $4(n+m)$\uff0c\u8fb9\u6570\u4e3a $4 \\times 4(n+m)$\uff08\u6bcf\u4e2a\u70b9\u6700\u591a\u8fde\u63a5\u56db\u6761\u8fb9\uff09\uff0c\u6240\u4ee5\u52a0\u8d77\u6765\u662f\u4e00\u4e2a\u5927\u6982 $20$ \u5e38\u6570\u7684 $(n+m)^2 = 10^6$\uff0c\u4e5f\u5c31\u662f\u5927\u6982 $2 \\times 10^8$\uff0c\u800c\u4e14\u8dd1\u4e0d\u6ee1\u3002\n\n\u56de\u7b54\u4e00\u6b21\u8be2\u95ee $\\Theta(1)$\uff0c\u6240\u4ee5\u4e0a\u8ff0\u7b97\u6cd5\u53ef\u8fc7\u3002\n\n\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n- \u8fd9\u4e2a\u56fe\u662f\u6709\u81ea\u73af\u7684\u3002\u6bd4\u5982\u6837\u4f8b\u4e2d\u7684\u70b9 $(1, 1)$ \u5c31\u662f\u4e00\u4e2a\u8f6c\u79fb\u70b9\uff0c\u5b83\u5411\u5de6\u6216\u5411\u4e0a\u79fb\u52a8\u540e\uff0c\u90fd\u4f1a\u8f6c\u79fb\u5230\u81ea\u5df1\u3002\u4f46\u6ca1\u4ec0\u4e48\u5f71\u54cd\u3002\n- \u7b97\u5b8c\u4e24\u4e2a\u7403\u7b2c\u4e00\u6b65\u8fd0\u52a8\u5230\u67d0\u4e2a\u65b9\u5411\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u5bf9\u5e94\u7684\u7b54\u6848\u6700\u5c0f\u503c\u540e\uff0c\u4e0d\u8981\u5fd8\u8bb0 $+1$\u3002\u7136\u540e\u9700\u8981\u628a\u4e24\u4e2a\u7403\u4e00\u5f00\u59cb\u5c31\u91cd\u5408\u7684\u60c5\u51b5\u7279\u5224\u6389\u3002\n\n\u5982\u679c\u8fd9\u7bc7\u9898\u89e3\u5e2e\u52a9\u5230\u60a8\u4e86\uff0c\u8bb0\u5f97\u7ed9\u4e2a\u8d5e\uff01\n\n```cpp\n/*\n * @Author: crab-in-the-northeast \n * @Date: 2023-03-22 08:00:29 \n * @Last Modified by: crab-in-the-northeast\n * @Last Modified time: 2023-03-22 11:01:43\n */\n#include <bits/stdc++.h>\ninline int read() {\n    int x = 0;\n    bool f = true;\n    char ch = getchar();\n    for (; !isdigit(ch); ch = getchar())\n        if (ch == '-')\n            f = false;\n    for (; isdigit(ch); ch = getchar())\n        x = (x << 1) + (x << 3) + ch - '0';\n    return f ? x : (~(x - 1));\n}\n\nconst int maxn = 255, maxm = 255;\nint id[maxn][maxn];\n\nstd :: vector <int> G[(maxn + maxm) << 2][4];\nint fall[maxn][maxn][4];\nint dis[(maxn + maxm) << 2][(maxn + maxm) << 2];\n\nint main() {\n    int n = read(), m = read(), Q = read();\n    for (int i = 1; i <= m; ++i) {\n        int x = read(), y = read();\n        id[x][y] = -1;\n    }\n\n    for (int i = 1; i <= n; ++i)\n        id[i][0] = id[0][i] = id[i][n + 1] = id[n + 1][i] = -1;\n    \n    int cnt = 0;\n    for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= n; ++j) {\n            if (id[i][j] < 0)\n                continue;\n            if (id[i - 1][j] < 0 || id[i + 1][j] < 0 || id[i][j - 1] < 0 || id[i][j + 1] < 0)\n                id[i][j] = ++cnt;\n        }\n    }\n\n    for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= n; ++j) {\n            int x = id[i][j];\n            if (x < 0)\n                continue;\n            if (id[i][j - 1] < 0)\n                fall[i][j][0] = x;\n            else\n                fall[i][j][0] = fall[i][j - 1][0];\n            \n            if (id[i - 1][j] < 0)\n                fall[i][j][1] = x;\n            else\n                fall[i][j][1] = fall[i - 1][j][1];\n            \n            if (x > 0) {\n                G[fall[i][j][0]][0].push_back(x);\n                G[fall[i][j][1]][1].push_back(x);\n            }\n        }\n    }\n\n    for (int i = n; i; --i) {\n        for (int j = n; j; --j) {\n            int x = id[i][j];\n            if (x < 0)\n                continue;\n            if (id[i][j + 1] < 0)\n                fall[i][j][2] = x;\n            else\n                fall[i][j][2] = fall[i][j + 1][2];\n            \n            if (id[i + 1][j] < 0)\n                fall[i][j][3] = x;\n            else\n                fall[i][j][3] = fall[i + 1][j][3];\n            \n            if (x > 0) {\n                G[fall[i][j][2]][2].push_back(x);\n                G[fall[i][j][3]][3].push_back(x);\n            }\n        }\n    }\n\n    std :: queue <std :: pair <std :: pair <int, int>, int> > q;\n    std :: memset(dis, 0x3f, sizeof(dis));\n    \n    const int inf = dis[0][0];\n    for (int i = 1; i <= cnt; ++i) {\n        q.push({{i, i}, 0});\n        dis[i][i] = 0;\n    }\n    \n    while (!q.empty()) {\n        int a = q.front().first.first, b = q.front().first.second, d = q.front().second;\n        q.pop();\n        for (int dir = 0; dir < 4; ++dir) {\n            for (int nxta : G[a][dir])\n            for (int nxtb : G[b][dir])\n            if (dis[nxta][nxtb] == inf) {\n                dis[nxta][nxtb] = d + 1;\n                q.push({{nxta, nxtb}, d + 1});\n            }\n        }\n    }\n\n    while (Q--) {\n        int a = read(), b = read(), c = read(), d = read();\n        if (a == c && b == d) {\n            puts(\"0\");\n            continue;\n        }\n\n        int ans = inf;\n        for (int dir = 0; dir < 4; ++dir) {\n            ans = std :: min(ans, \n                dis[fall[a][b][dir]][fall[c][d][dir]] + 1\n            );\n        }\n        printf(\"%d\\n\", (ans == inf) ? -1 : ans);\n    }\n\n    return 0;\n}\n```",
        "postTime": 1679453782,
        "uid": 120868,
        "name": "dbxxx",
        "ccfLevel": 6,
        "title": "P7473"
    },
    {
        "content": "# \u9898\u89e3\n\n\u9996\u5148\u8003\u8651\u4e00\u4e0b\u66b4\u529b\u7b97\u6cd5\n\n## \u66b4\u529b $50 tps$\n\n\u5047\u8bbe\u5df2\u7ecf\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5411\u6bcf\u4e2a\u65b9\u5411\u8fd0\u52a8\u540e\uff0c\u505c\u4e0b\u7684\u4f4d\u7f6e\uff0c\u7528 $f_{x, y, i}$ \u8868\u793a\u70b9 $(x, y)$ \u5411 $i$ \u65b9\u5411\u8fd0\u52a8\uff0c\u6700\u7ec8\u505c\u5728\u54ea\u91cc\uff0c\u663e\u7136\u53ef\u4ee5\u8bb0\u5fc6\u5316\uff0c\u505a\u5230 $\\Theta(n^2)$\u3002\n\n\u7528\u70b9 $(x, y, x', y')$ \u8868\u793a\u7b2c\u4e00\u4e2a\u7403\u8d70\u5230\u70b9 $(x, y)$\uff0c\u7b2c\u4e8c\u4e2a\u7403\u8d70\u5230 $(x', y')$ \u7684\u6700\u5c11\u6b65\u6570\uff0c \u505a\u4ee5\u4efb\u610f $(x, y, x, y)$ \u4e3a\u6e90\u70b9\u7684\u6700\u77ed\u8def\u3002\n\n\u65f6\u95f4\u590d\u6742\u4e3a $\\Theta(n^4 + q)$\u3002\n\n\u4e3a\u4ec0\u4e48\u662f $n^4$\uff1f\u5f88\u660e\u663e\uff0c\u8fb9\u6743\u90fd\u4e3a $1$\uff0c\u6240\u4ee5\u9009\u7528\u7528 $bfs$\u3002\n\n## \u5173\u4e8e\u53e6\u5916 $30tps$\n\n\u5e94\u4e3a $q = 1$\uff0c\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6216\u8005\u5e7f\u641c\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u4ecb\u7ecd\u3002\n\n## $100 tps$\n\n\u8003\u8651\u4f18\u5316\u66b4\u529b\u7b97\u6cd5\uff0c\u5e94\u4e3a\u6bcf\u6b21\u53ea\u53ef\u80fd\u505c\u5728\u969c\u788d\u65c1\u8fb9\uff0c\u5c06\u8fd9\u4e9b\u70b9\u7f16\u53f7\u4e3a $1 \\dots x$\u3002\n\n\u90a3\u4e48\u6b64\u65f6\uff0c\u53ef\u4ee5\u5c06\u72b6\u6001\u6539\u4e3a $g_{i, j}$ \u8868\u793a\u4e24\u4e2a\u7403\u5206\u522b\u5728\u7f16\u53f7 $i, j$ \u7684\u70b9\u3002\n\n\u65f6\u95f4\u4e3a $\\Theta(x^2 + q)$\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c$x$ \u7684\u8303\u56f4\u662f\u591a\u5c11\uff1f\n\n\u8003\u8651\u5185\u90e8\u7684\u969c\u788d\uff0c\u5171\u6709 $m$ \u4e2a\u969c\u788d\uff0c\u6700\u591a\u6709 $4 m$ \u4e2a\uff0c\n\n\u518d\u8003\u8651\u5916\u90e8\u969c\u788d\uff0c\u663e\u7136\u662f\u5468\u56f4\u4e00\u5708\uff0c\u6545\u4e3a $4 n$\uff0c\n\n\u90a3\u4e48\u603b\u548c\u4e3a $4 n + 4 m \\in \\Theta( n + m )$\uff0c\u65f6\u95f4\u4e3a $\\Theta((n + m)^2 + q)$\n\n\u5230\u6b64\u4e3a\u6b62\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6b63\u89e3\u3002\n\n\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nnamespace Fread {\nconst int SIZE = 1 << 21;\nchar buf[SIZE], *S, *T;\ninline char getchar() {\n    if (S == T) {\n        T = (S = buf) + fread(buf, 1, SIZE, stdin);\n        if (S == T) return '\\n';\n    }\n    return *S++;\n}\n} // namespace Fread\nnamespace Fwrite {\nconst int SIZE = 1 << 21;\nchar buf[SIZE], *S = buf, *T = buf + SIZE;\ninline void flush() {\n    fwrite(buf, 1, S - buf, stdout);\n    S = buf;\n}\ninline void putchar(char c) {\n    *S++ = c;\n    if (S == T) flush();\n}\nstruct NTR {\n    ~ NTR() { flush(); }\n} ztr;\n} // namespace Fwrite\n#ifdef ONLINE_JUDGE\n#define getchar Fread :: getchar\n#define putchar Fwrite :: putchar\n#endif\nnamespace Fastio {\nstruct Reader {\n    template<typename T>\n    Reader& operator >> (T& x) {\n        char c = getchar();\n        T f = 1;\n        while (c < '0' || c > '9') {\n            if (c == '-') f = -1;\n            c = getchar();\n        }\n        x = 0;\n        while (c >= '0' && c <= '9') {\n            x = x * 10 + (c - '0');\n            c = getchar();\n        }\n        x *= f;\n        return *this;\n    }\n    Reader& operator >> (char& c) {\n        c = getchar();\n        while (c == ' ' || c == '\\n') c = getchar();\n        return *this;\n    }\n    Reader& operator >> (char* str) {\n        int len = 0;\n        char c = getchar();\n        while (c == ' ' || c == '\\n') c = getchar();\n        while (c != ' ' && c != '\\n' && c != '\\r') { // \\r\\n in windows\n            str[len++] = c;\n            c = getchar();\n        }\n        str[len] = '\\0';\n        return *this;\n    }\n    Reader(){}\n} cin;\nconst char endl = '\\n';\nstruct Writer {\n    template<typename T>\n    Writer& operator << (T x) {\n        if (x == 0) { putchar('0'); return *this; }\n        if (x < 0) { putchar('-'); x = -x; }\n        static int sta[45];\n        int top = 0;\n        while (x) { sta[++top] = x % 10; x /= 10; }\n        while (top) { putchar(sta[top] + '0'); --top; }\n        return *this;\n    }\n    Writer& operator << (char c) {\n        putchar(c);\n        return *this;\n    }\n    Writer& operator << (char* str) {\n        int cur = 0;\n        while (str[cur]) putchar(str[cur++]);\n        return *this;\n    }\n    Writer& operator << (const char* str) {\n        int cur = 0;\n        while (str[cur]) putchar(str[cur++]);\n        return *this;\n    }\n    Writer(){}\n} cout;\n} // namespace Fastio\n#define cin Fastio :: cin\n#define cout Fastio :: cout\n#define endl Fastio :: endl\n\nstruct coord { int x, y; };\n\nconst int N = 255, Max = 2e3 + 5, MaxMax = 4e6 + 5; const coord dir[] = { { 0, 1 }, { 1, 0 }, { 0, -1 }, { -1, 0 } };\nint n, m, q, mat[N][N];\nint dis[Max][Max]; std :: vector<coord> e[Max][Max];\ncoord node[Max], to[N][N][4]; int top, mp[N][N], vis[N][N][4];\ncoord que[MaxMax]; int head, tail;\n\ninline coord operator + ( const coord &a, const coord &b ) { return { a.x + b.x, a.y + b.y }; }\n\ncoord dfs( coord a, int d ) {\n    if( vis[a.x][a.y][d] ) return to[a.x][a.y][d];\n    vis[a.x][a.y][d] = 1;\n    if( mat[a.x + dir[d].x][a.y + dir[d].y] ) return to[a.x][a.y][d] = a;\n    return to[a.x][a.y][d] = dfs( a + dir[d], d);\n}\n\n#define Mp( a ) mp[a.x][a.y]\n\nint main( ) {\n    int i, j, k;\n    cin >> n >> m >> q;\n    for( i = 1; i <= m; i++ ) {\n        int x, y;\n        cin >> x >> y;\n        mat[x][y] = 1;\n    }\n    for( i = 0; i <= n + 1; i++ ) mat[i][0] = mat[0][i] = mat[i][n + 1] = mat[n + 1][i] = 1;\n    for( i = 1; i <= n; i++ )\n        for( j = 1; j <= n; j++ ) {\n            if( mat[i][j] ) continue;\n            dfs( { i, j }, 0 );\n            dfs( { i, j }, 1 );\n            dfs( { i, j }, 2 );\n            dfs( { i, j }, 3 );\n            if( mat[i - 1][j] || mat[i][j - 1] || mat[i + 1][j] || mat[i][j + 1] ) node[mp[i][j] = ++top] = { i, j };\n        }\n    memset( dis, 127, sizeof( dis ) );\n    head = tail = 1;\n    for( i = 1; i <= top; i++ ) {\n        que[tail++] = { i, i };\n        dis[i][i] = 0;\n        for( j = i + 1; j <= top; j++ )\n            for( k = 0; k < 4; k++ ) {\n                coord na = to[node[i].x][node[i].y][k], nb = to[node[j].x][node[j].y][k];\n                if( Mp( na ) > Mp( nb ) ) std :: swap( na, nb );\n                e[Mp( na )][Mp( nb )].push_back( { i, j } );\n            }\n    }\n    while( head < tail ) {\n        coord from = que[head++];\n        int a = from.x, b = from.y;\n        for( coord x : e[a][b] )\n            if( dis[a][b] + 1 < dis[x.x][x.y] ) {\n                dis[x.x][x.y] = dis[a][b] + 1;\n                que[tail++] = { x.x, x.y };\n            }\n    }\n    for( i = 1; i <= q; i++ ) {\n        int x1, y1, x2, y2;\n        cin >> x1 >> y1 >> x2 >> y2;\n        int ans = ( x1 == x2 && y1 == y2 ) ? 0 : -1;\n        for( j = 0; j < 4; j++ ) {\n            coord na = to[x1][y1][j], nb = to[x2][y2][j];\n            if( Mp( na ) > Mp( nb ) ) std :: swap( na, nb );\n            int now = dis[Mp( na )][Mp( nb )];\n            if( now == 0x7f7f7f7f ) continue;\n            ans = ans == -1 ? now + ( x1 != na.x || y1 != na.y || x2 != nb.x || y2 != nb.y ) : std :: min( ans, now + ( x1 != na.x || y1 != na.y || x2 != nb.x || y2 != nb.y ) );\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1672729589,
        "uid": 422171,
        "name": "DcpK5749",
        "ccfLevel": 5,
        "title": "P7473 [NOI Online 2021 \u5165\u95e8\u7ec4] \u91cd\u529b\u7403"
    },
    {
        "content": "\u603b\u4f53\u611f\u53d7\uff1a\u5177\u6709\u4e00\u5b9a\u601d\u7ef4\u4ee5\u53ca\u4ee3\u7801\u96be\u5ea6\u7684\u4e00\u9053\u597d\u9898\u3002\n\n### \u601d\u8def\n\n\u6839\u636e\u4ee5\u5f80\u7684\u505a\u9898\u7ecf\u9a8c\uff0c\u62ff\u5230\u8fd9\u9053\u9898\u540e\u4e00\u5171\u6709\u4e24\u4e2a\u60f3\u6cd5\uff1a\u641c\u7d22\u4ee5\u53ca\u5efa\u8fb9\u8dd1\u6700\u77ed\u8def\uff0c\u5148\u7b80\u5355\u5730\u5206\u6790\u4e00\u4e0b\u3002\n\n$1.$ \u641c\u7d22\n\n\u770b\u4f3c\u662f\u53ef\u884c\u7684\uff0c\u4ee3\u7801\u4e5f\u633a\u7b80\u5355\uff0c\u4e0d\u8fc7\u5f53\u770b\u89c1\u9898\u76ee $q \\le 10^5$ \u7684\u6570\u636e\u8303\u56f4\u540e\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u5c31\u88ab\u6253\u6d88\u4e86\u3002\n\n$2.$ \u6700\u77ed\u8def\n\n\u5efa\u56fe\u7684\u65b9\u5f0f\u662f\u6bd4\u8f83\u663e\u800c\u6613\u89c1\u7684\uff0c\u53ea\u9700\u8981\u628a\u969c\u788d\u65c1\u8fb9\u7684\u8fd9\u4e9b\u771f\u6b63\u6709\u7528\u7684\u70b9\u7ed9\u62ff\u51fa\u6765\u8fde\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff0c\u5728\u70b9\u6570\u4e0d\u662f\u5f88\u591a\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8dd1\u51fa\u6765\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\uff0c\u8c8c\u4f3c\u662f\u53ef\u884c\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6765\u6df1\u6316\u4e00\u4e0b\u6700\u77ed\u8def\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u5f97\u5173\u6ce8\u5efa\u51fa\u6765\u7684\u56fe\uff0c\u4ed4\u7ec6\u60f3\u4e00\u4e0b\uff0c\u9898\u76ee\u4e2d\u56db\u8fb9\u8fb9\u754c\u7684\u969c\u788d\u4e00\u5171\u4f1a\u63d0\u4f9b $4n$ \u4e2a\u6709\u7528\u7684\u70b9\uff0c\u800c\u4f4d\u4e8e\u5730\u56fe\u4e2d\u95f4\u4f4d\u7f6e\u7684\u70b9\u5c06\u4f1a\u63d0\u4f9b $4m$ \u4e2a\u6709\u7528\u7684\u70b9\uff0c\u90a3\u4e48\u603b\u5171\u5c31\u4f1a\u6709 $2000$ \u4e2a\u70b9\uff0c\u90a3\u4e48\u5c0f\u7403\u4e00\u5171\u4f1a\u51fa\u73b0\u7684\u4f4d\u7f6e\u5c31\u4f1a\u6709 $4 \\times 10^6$ \u79cd\uff0c\u8fd9\u79cd\u6570\u636e\u8303\u56f4\u662f\u6211\u4eec\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6cbf\u7740\u8fd9\u4e2a\u601d\u8def\uff0c\u89e3\u51b3\u6bcf\u4e00\u4e2a\u5b50\u95ee\u9898\u3002\n\n### \u505a\u6cd5\n\n$1.$ \u627e\u5230\u6709\u7528\u7684\u70b9\n\n\u53ea\u9700\u8981\u5148\u6807\u8bb0\u51fa\u6240\u6709\u969c\u788d\u7269\u7684\u4f4d\u7f6e\uff08\u6ce8\u610f\u8981\u6807\u8bb0\u5730\u56fe\u56db\u5468\uff09\uff0c\u7136\u540e\u679a\u4e3e\u5730\u56fe\u4e2d\u95f4 $n^2$ \u4e2a\u70b9\u5224\u65ad\u65c1\u8fb9\u662f\u5426\u6709\u969c\u788d\u5373\u53ef\uff0c\u8fd9\u4e00\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u89e3\u9898\uff0c\u6b64\u65f6\u6211\u4eec\u5c06\u8fd9\u4e9b\u6709\u7528\u7684\u70b9\u7f16\u53f7\u3002\n\n$2.$ \u627e\u5230\u6bcf\u4e00\u4e2a\u521d\u59cb\u4f4d\u7f6e\u56db\u4e2a\u65b9\u5411\u4f1a\u6eda\u5230\u54ea\u513f\n\n\u601d\u8def\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5bf9\u56db\u4e2a\u65b9\u5411\u5206\u522b\u8fdb\u884c\u5904\u7406\uff0c\u62ff\u5411\u4e0a\u6eda\u6765\u4e3e\u4f8b\uff0c\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u65b9\u662f\u969c\u788d\uff0c\u90a3\u4e48\u5b83\u6eda\u5230\u7684\u70b9\u5c31\u662f\u8fd9\u4e2a\u70b9\uff0c\u5426\u5219\u5b83\u6eda\u5230\u7684\u70b9\u548c\u4e0a\u65b9\u90a3\u4e2a\u70b9\u5411\u4e0a\u6eda\u5230\u7684\u70b9\u662f\u76f8\u540c\u7684\uff0c\u5373\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8f6c\u79fb\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u679a\u4e3e\u7684\u987a\u5e8f\uff0c\u6bd4\u5982\u5904\u7406\u5411\u4e0b\u7684\u60c5\u51b5\u65f6\u5c31\u5f97\u4ece\u6700\u540e\u4e00\u884c\u679a\u4e3e\u5230\u7b2c\u4e00\u884c\u3002\n\n$3.$ \u5efa\u8fb9\n\n\u5bf9\u4e8e\u5efa\u8fb9\u64cd\u4f5c\uff0c\u6211\u4eec\u9009\u62e9\u679a\u4e3e\u6709\u7528\u7684\u70b9\uff0c\u7136\u540e\u4ece**\u56db\u4e2a\u65b9\u5411\u6700\u7ec8\u5230\u8fbe\u7684\u70b9**\u5411\u8fd9\u4e2a\u70b9\u8fde\u8fb9\uff08\u5176\u5b9e\u4ece\u8fd9\u4e2a\u70b9\u5411\u56db\u5468\u8fde\u8fb9\u4e5f\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u6211\u7684\u4ee3\u7801~~\u7531\u4e8e\u672a\u77e5\u539f\u56e0~~\u9519\u4e86\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n$4.$ \u627e\u6700\u77ed\u8def\n\n\u672c\u6765\u53ef\u4ee5\u9009\u62e9 ``Dijkstra`` \u7684\uff0c\u4e0d\u8fc7\u7531\u4e8e\u5e26\u4e86\u4e00\u4e2a $\\log$\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u901a\u8fc7\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u4e86\u4e4b\u524d\u88ab\u820d\u5f03\u7684\u641c\u7d22\u7b97\u6cd5\uff0c\u8003\u8651\u662f\u5426\u80fd\u591f\u4e0d\u7528 $\\log$ \u6c42\u89e3\u3002\n\n\u7531\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7f16\u53f7\u4e0e\u70b9\u7684\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u8003\u8651\u628a\u6bcf\u4e2a\u70b9\u770b\u505a\u4e00\u4e2a**\u72b6\u6001**\uff0c\u8003\u8651\u5982\u4f55\u4ece\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u3002\n\n\u5bf9\u4e8e\u72b6\u6001\u7684\u8d77\u59cb\u70b9\uff0c\u6211\u4eec\u8bbe\u5b9a\u4e24\u4e2a\u5c0f\u7403\u5728\u540c\u4e00\u4f4d\u7f6e\u4e3a\u8d77\u59cb\u70b9\uff0c\u56e0\u4e3a\u6b64\u65f6\u7b54\u6848\u4e3a $0$\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u8fd9\u4e2a\u72b6\u6001\u53ef\u4ee5\u8f6c\u79fb\u5230\u7684\u6240\u6709\u72b6\u6001\uff0c\u8fdb\u884c\u72b6\u6001\u7684\u66f4\u65b0\u5c31\u884c\u4e86\u3002\n\n\u5982\u679c\u5f53\u524d\u5df2\u77e5\u4e24\u4e2a\u72b6\u6001 $dist_{x,y}$ \u7684\u503c\uff0c\u5373\u77e5\u9053\u4e86\u4e24\u4e2a\u5c0f\u7403\u521d\u59cb\u4f4d\u7f6e\u5206\u522b\u4e3a $x$ \u548c $y$\uff0c\u800c\u8fd9\u4e2a\u72b6\u6001\u4e0b\u4e00\u6b65\u53ef\u4ee5\u5230\u8fbe $dist_{u,v}$\uff0c\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f \n\n$$\ndist_{u,v}=dist_{x,y}+1\n$$\n\n\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n\tmemset(dist,0x3f,sizeof dist);\n\tqueue<pair<int,int>> q;\n\tfor(register int i=1;i<=id_num;i++){\n\t\tq.push(make_pair(i,i));\n\t\tdist[i][i]=0;\n\t\t//\u5982\u679c\u4e24\u4e2a\u5c0f\u7403\u5f00\u59cb\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a0\n\t\t//\u8003\u8651\u5c06\u4e24\u4e2a\u7403\u4f4d\u4e8e\u540c\u4e00\u4f4d\u7f6e\u8bbe\u4e3a\u521d\u59cb\u72b6\u6001 \n\t}\n\twhile(!q.empty()){\n\t\tint x=q.front().first,y=q.front().second; q.pop();\n\t\tfor(register int k=0;k<=3;k++){\n\t\t\tfor(register int i=head[x][k];i;i=nxt[i]){\n\t\t\t\tfor(register int j=head[y][k];j;j=nxt[j]){\n\t\t\t\t\t//\u679a\u4e3e\u5f53\u524d\u7684\u4e24\u4e2a\u4f4d\u7f6e\u80fd\u591f\u5230\u8fbe\u7684\u6240\u6709\u72b6\u6001 \n\t\t\t\t\tint u=to[i],v=to[j];\n\t\t\t\t\tif(dist[u][v]>=1e9){\n\t\t\t\t\t\tdist[u][v]=dist[x][y]+1;\n\t\t\t\t\t\tq.push(make_pair(u,v));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n```\n\n$5.$ \u56de\u7b54\u8be2\u95ee\n\n\u5f00\u5c40\u4e24\u4e2a\u70b9\u8d70\u5411\u4e0d\u540c\u7684\u56db\u4e2a\u65b9\u5411\uff0c\u4e4d\u4e00\u770b\u4f1a\u6709 $16$ \u79cd\u60c5\u51b5\uff0c\u4f46\u5176\u5b9e\u53ea\u6709 $4$ \u79cd\uff0c\u56e0\u4e3a\u540c\u4e00\u65f6\u95f4\u4e24\u4e2a\u7403\u53ea\u80fd\u60f3\u540c\u4e00\u65b9\u5411\u79fb\u52a8\u3002\n\n\u4f46\u662f\u6700\u540e\u6c42\u51fa\u6765\u7684\u7b54\u6848\u9700\u8981\u52a0 $1$\uff0c\u56e0\u4e3a\u6211\u4eec\u6c42\u51fa\u7684 $dist_{pos_1,pos_2}$ \u662f\u9488\u5bf9\u8fd9\u4e24\u4e2a**\u6709\u7528\u7684\u70b9**\u800c\u8a00\u7684\uff0c\u5f00\u5c40\u7b2c\u4e00\u6b21\u6eda\u52a8\u5e76\u6ca1\u6709\u88ab\u8ba1\u7b97\u8fdb\u53bb\u3002\n\n### \u4e00\u4e9b\u7ec6\u8282\n\n1. \u8bb0\u5f97\u6807\u8bb0\u5730\u56fe\u56db\u5468\u4e3a\u969c\u788d\u3002\n\n2. \u9009\u6709\u7528\u7684\u70b9\u65f6\uff0c\u6ce8\u610f\u8fd9\u4e2a\u70b9\u4e0d\u80fd\u662f\u969c\u788d\u3002\n\n3. \u9884\u5904\u7406\u6bcf\u4e2a\u4f4d\u7f6e\u6bcf\u4e2a\u65b9\u5411\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u65f6\uff0c\u6ce8\u610f\u679a\u4e3e\u7684\u987a\u5e8f\uff0c\u907f\u514d\u8f6c\u79fb\u51fa\u9519\u3002\n\n4. \u6ce8\u610f\u7279\u5224\u4e24\u4e2a\u5c0f\u7403\u521d\u59cb\u4f4d\u7f6e\u76f8\u540c\u3002\n\n5. \u6ce8\u610f\u6700\u540e\u7684\u7b54\u6848\u9700\u8981\u52a0 $1$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint sss=0;\n\tchar chh=getchar();\n\twhile(chh<'0'||chh>'9') chh=getchar();\n\twhile(chh>='0'&&chh<='9'){\n\t\tsss=sss*10+chh-'0';\n\t\tchh=getchar();\n\t}\n\treturn sss;\n}\nint n,m,q;\nbool isobs[255][255];\nint id[255][255],id_num=0;\nint to_pos[255][255][4];\nint head[2005][4],to[1000005],nxt[1000005],tot=1; \nint dist[2005][2005];\nbool check(int x,int y){\n\t//\u56db\u8fb9\u53ea\u8981\u6709\u4e00\u8fb9\u662f\u969c\u788d\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u662f\u6709\u7528\u7684\n\t//\u4f1a\u6709\u7403\u6eda\u5230\u8fd9\u91cc\u6765\u4e4b\u540e\u505c\u5728\u8fd9\u91cc \n\treturn isobs[x-1][y]||isobs[x][y-1]||isobs[x+1][y]||isobs[x][y+1];\n}\nvoid add(int u,int v,int d){\n\tto[++tot]=v;\n\tnxt[tot]=head[u][d];\n\thead[u][d]=tot;\n}\nvoid init_dist(){\n\t//dist[i][j]\u8868\u793a\u4e24\u4e2a\u7403\u7684\u521d\u59cb\u4f4d\u7f6e\u6240\u5bf9\u5e94\u7684\u72b6\u6001\u5206\u522b\u4e3ai,j\u65f6\uff0c\u76f8\u9047\u7684\u6700\u5c0f\u6b65\u6570\n\t//\u4e5f\u5c31\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8ebfs\u7684\u4e1c\u897f \n\tmemset(dist,0x3f,sizeof dist);\n\tqueue<pair<int,int>> q;\n\tfor(register int i=1;i<=id_num;i++){\n\t\tq.push(make_pair(i,i));\n\t\tdist[i][i]=0;\n\t\t//\u5982\u679c\u4e24\u4e2a\u5c0f\u7403\u5f00\u59cb\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a0\n\t\t//\u8003\u8651\u5c06\u4e24\u4e2a\u7403\u4f4d\u4e8e\u540c\u4e00\u4f4d\u7f6e\u8bbe\u4e3a\u521d\u59cb\u72b6\u6001 \n\t}\n\twhile(!q.empty()){\n\t\tint x=q.front().first,y=q.front().second; q.pop();\n\t\tfor(register int k=0;k<=3;k++){\n\t\t\tfor(register int i=head[x][k];i;i=nxt[i]){\n\t\t\t\tfor(register int j=head[y][k];j;j=nxt[j]){\n\t\t\t\t\t//\u679a\u4e3e\u5f53\u524d\u7684\u4e24\u4e2a\u4f4d\u7f6e\u80fd\u591f\u5230\u8fbe\u7684\u6240\u6709\u72b6\u6001 \n\t\t\t\t\tint u=to[i],v=to[j];\n\t\t\t\t\tif(dist[u][v]>=1e9){\n\t\t\t\t\t\tdist[u][v]=dist[x][y]+1;\n\t\t\t\t\t\tq.push(make_pair(u,v));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint calc(int x1,int y1,int x2,int y2){\n\t//\u7531\u4e8e\u4e24\u4e2a\u7403\u53ea\u80fd\u540c\u65f6\u5411\u4e00\u4e2a\u65b9\u5411\u6eda\u52a8\n\t//\u6240\u4ee5\u53ea\u80fd\u67094\u79cd\u800c\u4e0d\u662f16\u79cd\u60c5\u51b5 \n\tint ans1=dist[to_pos[x1][y1][0]][to_pos[x2][y2][0]];\n\tint ans2=dist[to_pos[x1][y1][1]][to_pos[x2][y2][1]];\n\tint ans3=dist[to_pos[x1][y1][2]][to_pos[x2][y2][2]];\n\tint ans4=dist[to_pos[x1][y1][3]][to_pos[x2][y2][3]];\n\treturn min(ans1,min(ans2,min(ans3,ans4)));\n}\nint main(){\n\tn=read(),m=read(),q=read(); int ob_x,ob_y;\n\t//\u6807\u8bb0\u5730\u56fe\u4e2d\u7684\u969c\u788d \n\tfor(register int i=1;i<=m;i++){\n\t\tob_x=read(),ob_y=read();\n\t\tisobs[ob_x][ob_y]=true;\n\t}\n\t//\u6807\u8bb0\u5730\u56fe\u56db\u5468\u7684\u969c\u788d \n\tfor(register int i=0;i<=n+1;i++) isobs[0][i]=true;\n\tfor(register int i=0;i<=n+1;i++) isobs[n+1][i]=true;\n\tfor(register int i=0;i<=n+1;i++) isobs[i][0]=true;\n\tfor(register int i=0;i<=n+1;i++) isobs[i][n+1]=true;\n\t//\u627e\u5230\u969c\u788d\u65c1\u8fb9\u7684\u70b9\uff0c\u53ea\u6709\u8fd9\u4e9b\u70b9\u624d\u6709\u7528 \n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\tif(!isobs[i][j]&&check(i,j)){\n\t\t\t\tid[i][j]=++id_num;\n\t\t\t}\n\t\t}\n\t}\n\t//\u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u65b9\u5411\u6bcf\u4e2a\u4f4d\u7f6e\u5230\u8fbe\u7684\u70b9 \n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\t//\u5411\u4e0a\n\t\t\tif(isobs[i-1][j]) to_pos[i][j][0]=id[i][j];\n\t\t\telse to_pos[i][j][0]=to_pos[i-1][j][0];\n\t\t}\n\t}\n\tfor(register int i=n;i>=1;i--){\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\t//\u5411\u4e0b\n\t\t\tif(isobs[i+1][j]) to_pos[i][j][1]=id[i][j];\n\t\t\telse to_pos[i][j][1]=to_pos[i+1][j][1];\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\t//\u5411\u5de6\n\t\t\tif(isobs[i][j-1]) to_pos[i][j][2]=id[i][j];\n\t\t\telse to_pos[i][j][2]=to_pos[i][j-1][2];//\u8fd9\u4e2a\u70b9\u5411\u5de6\u548c\u5de6\u8fb9\u4e00\u4e2a\u70b9\u5411\u5de6\u662f\u4e00\u6837\u7684 \n\t\t}\n\t}\n\tfor(register int i=n;i>=1;i--){\n\t\tfor(register int j=n;j>=1;j--){\n\t\t\t//\u5411\u53f3\n\t\t\tif(isobs[i][j+1]) to_pos[i][j][3]=id[i][j];\n\t\t\telse to_pos[i][j][3]=to_pos[i][j+1][3];\n\t\t}\n\t}\n\t//\u6309\u7167\u72b6\u6001\u5efa\u8fb9 \n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=n;j++){\n\t\t\tif(id[i][j]){\n\t\t\t\tfor(register int k=0;k<=3;k++){\n\t\t\t\t\t//\u4ece\u8fd9\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u70b9\u5411\u8fd9\u4e2a\u70b9\u8fde\u8fb9 \n\t\t\t\t\tadd(to_pos[i][j][k],id[i][j],k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tinit_dist();\n\tint x1,y1,x2,y2;\n\twhile(q--){\n\t\tx1=read(),y1=read(),x2=read(),y2=read();\n\t\tif(x1==x2&&y1==y2) puts(\"0\");//\u7279\u5224\u5728\u540c\u4e00\u4f4d\u7f6e \n\t\telse {\n\t\t\tint ans=calc(x1,y1,x2,y2);\n\t\t\tif(ans>=1e9) puts(\"-1\");\n\t\t\telse cout<<ans+1<<\"\\n\";\n\t\t\t//\u52a0\u4e0a\u4e00\u6b65\u662f\u56e0\u4e3a\u6700\u5f00\u59cb\u7684\u7b2c\u4e00\u6b65\u6ca1\u6709\u8ba1\u7b97 \n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1652772061,
        "uid": 367316,
        "name": "Foreverxxx",
        "ccfLevel": 0,
        "title": "P7473 [NOI Online 2021 \u5165\u95e8\u7ec4] \u91cd\u529b\u7403 \u9898\u89e3"
    },
    {
        "content": "\u5148\u662f\u66b4\u529b\u7684\u5199\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u8fdb\u884c\u4e00\u6b21\u6df1\u641c\u3002\n\n\u7528 $vis_{a,b,c,d}$ \u8bb0\u5f55\u662f\u5426\u51fa\u73b0\u8fc7\u7b2c\u4e00\u4e2a\u7403\u7684\u5750\u6807\u4e3a $(a,b)$\uff0c\u7b2c\u4e8c\u4e2a\u7403\u7684\u5750\u6807\u4e3a $(c,d)$ \u7684\u72b6\u6001\uff0c\u5f53 ```a==c&&b==d``` \u65f6\u8bb0\u5f55\u7b54\u6848\u5e76\u505c\u6b62\u641c\u7d22\u3002\n\n\u4e0d\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u7a7a\u95f4\u5c31\u5df2\u7ecf\u5f00\u4e0d\u4e0b\u4e86\uff0c\u53ea\u80fd\u62ff\u5230 $50$ \u5206\u7684\u90e8\u5206\u5206\u3002\n\n\u6211\u4eec\u53d1\u73b0\u9664\u4e86\u5f00\u59cb\u7684\u5750\u6807\u4e4b\u5916\uff0c\u7403\u5fc5\u5b9a\u5728\u8fb9\u754c\u6216\u969c\u788d\u7269\u7684\u8fb9\u4e0a\uff0c\u6211\u4eec\u79f0\u8fd9\u4e9b\u70b9\u4e3a\u201c\u7279\u6b8a\u70b9\u201d\u3002\n\n\u56e0\u4e3a\u201c\u7279\u6b8a\u70b9\u201d\u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 $2000$\uff0c\u6211\u4eec\u53ea\u9700\u5bf9\u80fd\u4e92\u76f8\u5230\u8fbe\u7684\u201c\u7279\u6b8a\u70b9\u201d\u8fdb\u884c\u8fde\u8fb9\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u7a7a\u95f4\u5f00\u4e0d\u4e0b\u7684\u95ee\u9898\u3002\n\n\u4f46\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7b54\u6848\u8fdb\u884c\u641c\u7d22\u65f6\u95f4\u4f9d\u65e7\u8d85\u65f6\u3002\n\n\u8003\u8651\u4ece\u7ec8\u70b9\u5373 ```a==c&&b==d``` \u65f6\u5f00\u59cb\u641c\u7d22\uff0c\u7136\u540e\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u72b6\u6001\u7684\u6b65\u6570\uff0c\u5728\u641c\u7d22\u7b54\u6848\u65f6\u53ea\u9700\u5bf9\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u70b9\u7684 $dis$ \u53d6\u6700\u5c0f\u503c\u5373\u53ef\uff0c\u641c\u7d22\u7b54\u6848\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5373\u53ef\u964d\u4e3a $O(1)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(tot^2)$\uff0c$tot$ \u8868\u793a\u7279\u6b8a\u70b9\u7684\u6570\u91cf\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=255,M=2005,inf=0x3f3f3f3f;\nint n,m,Q,p[M][M][4],id[N][N],tot,dis[M][M];\nbool mp[N][N];\nvector<int> edge[N*N][4];\nstruct node{\n\tint x,y;\n};\nqueue<node> q;\nbool check(int x,int y){\n\treturn mp[x-1][y]||mp[x][y-1]||mp[x+1][y]||mp[x][y+1];\n}\nint solve(int a,int b,int c,int d){\n\tint res=inf;\n\tfor(int k=0;k<4;k++){\n\t\tres=min(res,dis[p[a][b][k]][p[c][d][k]]);\n\t}\n\treturn res;\n}\nvoid init(){\n\tfor(int i=1;i<=n;i++){\n\t\tmp[0][i]=mp[i][0]=mp[i][n+1]=mp[n+1][i]=1;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(!mp[i][j]&&check(i,j))id[i][j]=++tot;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(mp[i][j-1])p[i][j][0]=id[i][j];\n\t\t\telse p[i][j][0]=p[i][j-1][0];\n\t\t\tif(mp[i-1][j])p[i][j][1]=id[i][j];\n\t\t\telse p[i][j][1]=p[i-1][j][1];\n\t\t}\n\t}\n\tfor(int i=n;i>=1;i--){\n\t\tfor(int j=n;j>=1;j--){\n\t\t\tif(mp[i][j+1])p[i][j][2]=id[i][j];\n\t\t\telse p[i][j][2]=p[i][j+1][2];\n\t\t\tif(mp[i+1][j])p[i][j][3]=id[i][j];\n\t\t\telse p[i][j][3]=p[i+1][j][3];\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(id[i][j]){\n\t\t\t\tfor(int k=0;k<4;k++){\n\t\t\t\t\tedge[p[i][j][k]][k].push_back(id[i][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nvoid bfs(){\n\tmemset(dis,0x3f,sizeof dis);\n\tfor(int i=1;i<=tot;i++){\n\t\tq.push({i,i});\n\t\tdis[i][i]=1;\n\t}\n\twhile(!q.empty()){\n\t\tint x=q.front().x,y=q.front().y;\n\t\tq.pop();\n\t\tfor(int k=0;k<4;k++){\n\t\t\tfor(int i=0;i<edge[x][k].size();i++){\n\t\t\t\tfor(int j=0;j<edge[y][k].size();j++){\n\t\t\t\t\tint xx=edge[x][k][i],yy=edge[y][k][j];\n\t\t\t\t\tif(dis[xx][yy]==inf){\n\t\t\t\t\t\tdis[xx][yy]=dis[x][y]+1;\n\t\t\t\t\t\tq.push({xx,yy});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&Q);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tmp[x][y]=1;\n\t}\n\tinit();\n\tbfs();\n\tfor(int i=1;i<=Q;i++){\n\t\tint a,b,c,d;\n\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t\tif(a==c&&b==d){\n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\telse{\n\t\t\tint ans=solve(a,b,c,d);\n\t\t\tif(ans==inf)printf(\"-1\\n\");\n\t\t\telse printf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1683207243,
        "uid": 698657,
        "name": "free_fall",
        "ccfLevel": 5,
        "title": "[NOI Online 2021 \u5165\u95e8\u7ec4] \u91cd\u529b\u7403 \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\n\n\n\u8fd9\u9898\u603b\u7684\u800c\u8a00\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684~~\uff08\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u5f53\u65f6\u6ca1\u505a\u95ee\u5c31\u662f\u6ca1\u62a5NOI online\uff09~~\uff0c\u8fd9\u9898\u5176\u5b9e\u63d0\u793a\u7684\u5f88\u660e\u663e\u4e86\uff1a\u201c\u5c06\u91cd\u529b\u65b9\u5411\u201c\u5207\u6362\u201d\u4e3a\u8fd9\u4e2a\u65b9\u5411\u3002\u6b64\u65f6\u4e24\u4e2a\u5c0f\u7403\u4f1a\u540c\u65f6\u5411\u8fd9\u4e2a\u65b9\u5411\u79fb\u52a8\uff0c**\u76f4\u5230\u78b0\u5230\u969c\u788d**\u3002\u201d\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53bb\u8003\u8651\u90a3\u4e9b\u9760\u8fd1\u969c\u788d\u7269\u6216\u8005\u9760\u8fd1\u8fb9\u754c\u7684\u70b9\u624d\u6709\u610f\u4e49\uff0c\u518d\u770b\u4e00\u773c\u6570\u636e\u8303\u56f4 $(1 \\leq m \\leq 250)$ \u7f8e\u6ecb\u6ecb \uff08\u90a3\u4e48\u5b9e\u9645\u4e0a\u53ea\u6709 $250 \\times 4 + 250 \\times 4 = 2000$ \u4e2a\u70b9\uff09\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u90fd\u9884\u5904\u7406\u51fa\u5b83\u56db\u4e2a\u65b9\u5411\u80fd\u591f\u5230\u8fbe\u7684\u70b9 $(O(4n))$\u200b\u3002\n\n\u6211\u4eec\u518d\u770b\u5230 $(1 \\leq q \\leq 10^5)$\u200b\u200b \uff0c\u8fd9\u660e\u663e\u6bcf\u6b21\u8be2\u95ee\u540e\u5904\u7406\u662f\u4e0d\u884c\u7684\uff0c\u6211\u4eec\u518d\u8003\u8651\u600e\u4e48\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4f18\u5316\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u518d\u5904\u7406\u5b8c\u6240\u6709\u6709\u7528\u7684\u70b9\u4e4b\u540e\uff0c\u8303\u56f4\u4ecd\u7136\u5f88\u5c0f $(cnt \\leq 2000)$\u200b\u200b\uff0c\u90a3\u6211\u4eec\u4e0d\u59a8\u5bf9\u6bcf\u4e00\u4e2a\u5bf9\u70b9\u9884\u5904\u7406\u51fa\u6765\u4ed6\u4eec\u80fd\u5230\u8fbe\u7684\u6700\u8fd1\u7684\u516c\u5171\u70b9\uff0c\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(4 \\times 10^6)$\u200b\uff0c\u662f\u6211\u4eec\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\n\u81f3\u4e8e\u600e\u4e48\u9884\u5904\u7406\uff0c\u6211\u60f3\u5230\u7684\u662f\u53cd\u5411\u5efa\u8fb9\uff0c\u5373\u5bf9\u4e8e\u4efb\u610f\u4e00\u70b9\uff0c\u5b83\u7684\u5165\u8fb9\u5c31\u662f\u4ed6\u5728\u8fdb\u884c\u4e00\u6b21\u8f6c\u6362\u201c\u91cd\u5fc3\u201d\u64cd\u4f5c\u540e\u5230\u8fbe\u7684\u70b9\u5411\u5b83\u8fde\u63a5\u7684\u8fb9\u3002\u6211\u4eec\u5728\u5bf9\u6240\u6709\u7684\u70b9\u8fdb\u884c\u7f16\u53f7\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u610f\u4e24\u70b9\u5f53\u4ed6\u4eec\u5230\u8fbe\u540c\u4e00\u4f4d\u7f6e\u65f6\u72b6\u6001\u662f\u76f8\u540c\u7684\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u53cd\u63a8\uff0c\u63a8\u51fa\u6574\u4e2a\u56fe\u6240\u6709\u7684\u72b6\u6001\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\uff0c\u5728\u8f93\u51fa\u7684\u65f6\u5019\u5e94\u5148\u8ba9\u4e24\u4e2a\u5c0f\u7403\u90fd\u5230\u8fbe\u4e00\u4e2a\u5728\u56fe\u4e0a\u80fd\u88ab\u8868\u793a\u7684\u70b9\uff0c\u9898\u76ee\u4e2d\u6ca1\u6709\u4fdd\u8bc1\u5c0f\u7403\u6700\u5f00\u59cb\u6328\u7740\u969c\u788d\u3001\u8fb9\u754c\uff0c\u90a3\u6700\u540e\u7b54\u6848\u9700\u8981+1\u3002\n\n\u4ee3\u7801\u6211\u501f\u9274\u4e86\u697c\u4e0b@water_tomato\u7684\u5199\u6cd5\uff08orz\uff09\uff0c\u53ea\u662f\u6539\u53d8\u4e86\u4ed6\u7684\u51e0\u4e2a\u5904\u7406\u7684\u5c0f\u7ec6\u8282\uff0c\u4ee5\u65b9\u4fbf\u5927\u5bb6\u7406\u89e3\u3002\n\n~~\u505a\u9898\u73b0\u72b6\uff1a\u53e3\u80e15\u5206\u949f\u8c03\u4e862\u5c0f\u65f6~~\n![\u95ef\u5173\u6e38\u620f~](https://cdn.luogu.com.cn/upload/image_hosting/gx09q59c.png)\n\ncode\n------------\n\n\u7801\u98ce\u4e0d\u597d\u89c1\u8c05\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 250 + 10;\nconst int MAXN = 2010;\nconst int M = 1e5 + 10;\nconst int inf = 2139062143;\nconst int mods = 19650827;\ninline int read ( )\n{\n\tint x = 0, f = 1;\n\tchar ch = getchar ( );\n\twhile (ch < '0' || ch > '9') {if (ch == '-') f = - 1; ch = getchar ( );}\n\twhile (ch >= '0' && ch <= '9') {x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar ( );}\n\treturn x * f;\n}\nint n, m, q;\nstruct edge\n{\n\tint ver, nxt;\n}e[M];\nint head[MAXN][5], tot;\nvoid add (int u, int v, int d) {e[++tot] = (edge) {v, head[u][d]}; head[u][d] = tot;}\nint a[N][N], dis[MAXN][MAXN];\nint dir[MAXN][MAXN][4];\nint vis[MAXN][MAXN], cnt;\nvoid init ( )\n{\n\tfor (int i = 1; i <= n; i++) a[i][0] = a[0][i] = a[n + 1][i] = a[i][n + 1] = 1;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tif (!a[i][j] && (a[i + 1][j] || a[i][j + 1] || a[i - 1][j] || a[i][j - 1])) vis[i][j] = ++cnt;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t{\n\t\t\tdir[i][j][0] = (a[i][j - 1] ? vis[i][j] : dir[i][j - 1][0]);\n\t\t\tdir[j][i][1] = (a[j - 1][i] ? vis[j][i] : dir[j - 1][i][1]);\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = n; j >= 1; j--)\n\t\t{\n\t\t\tdir[i][j][2] = (a[i][j + 1] ? vis[i][j] : dir[i][j + 1][2]);\n\t\t\tdir[j][i][3] = (a[j + 1][i] ? vis[j][i] : dir[j + 1][i][3]);\n\t\t}\n\treturn ;\n}\nstruct node\n{\n\tint x, y;\n}tmp1;\nqueue <node> que;\nint main ( )\n{\n\tn = read ( ); m = read ( ); q = read ( );\n\tfor (int i = 1; i <= m; i++) a[read ( )][read ( )] = 1;\n\tinit();\n\tfor (int i = 1; i <= n; i++) for (int j = 1; j <= n; j++)\n\t\tif (vis[i][j] > 0)\n\t\t\tfor (int k = 0; k <= 3; k++) add (dir[i][j][k], vis[i][j], k);\n\tmemset (dis, 0x7f, sizeof (dis));\n\tfor (int i = 1; i <= cnt; i++) { dis[i][i] = 0; que.push ((node) {i, i});}\n\twhile (!que.empty ())\n\t{\n\t\ttmp1 = que.front ( ); que.pop ( );\n\t\tfor (int k = 0; k <= 3; k++)\n\t\t\tfor (int i = head[tmp1.x][k], u = e[i].ver; i; i = e[i].nxt, u = e[i].ver)\n\t\t\t\tfor (int j = head[tmp1.y][k], v = e[j].ver; j; j = e[j].nxt, v = e[j].ver)\n\t\t\t\t{\n\t\t\t\t\tif (dis[u][v] != inf) continue;\n\t\t\t\t\tdis[u][v] = dis[tmp1.x][tmp1.y] + 1;\n\t\t\t\t\tque.push ((node) {u, v});\n\t\t\t\t}\n\t}\n\twhile (q--)\n\t{\n\t\tint sx, sy, tx, ty;\n\t\tsx = read  ( ), sy = read ( ), tx = read ( ), ty = read  ( );\n\t\tif (sx == tx && sy == ty) {printf(\"0\\n\");}\n\t\telse\n\t\t{\n\t\t\tint ans = inf;\n\t\t\tfor (int k = 0; k <= 3; k++) ans = min (ans, dis[dir[sx][sy][k]][dir[tx][ty][k]]);\n\t\t\tprintf(\"%d\\n\", ans >= inf ? -1 : ans + 1);\n\t\t}\n\t}\n    return 0;\n} //The Dark Emperor\n```",
        "postTime": 1627472862,
        "uid": 177837,
        "name": "violin_wyl",
        "ccfLevel": 6,
        "title": "P7473 [NOI Online 2021 \u5165\u95e8\u7ec4] \u91cd\u529b\u7403"
    }
]