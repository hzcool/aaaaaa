[
    {
        "content": "upd 2023-02-01 \u4fee\u6539\u9898\u89e3\u5185\u5bb9\uff0c\u4f7f\u5f97\u5176\u7b26\u5408\u73b0\u884c\u9898\u89e3\u89c4\u8303\uff0c\u5e76\u81ea\u5df1\u5ba1\u6838\u901a\u8fc7\uff08\uff09\n\n\n---\n\n## \u6458\u8981\n\n\u5206\u5757\uff0c\u662f\u4e00\u79cd**\u4f18\u96c5**\u7684\u66b4\u529b\uff0c\u5b83\u901a\u8fc7\u5bf9\u6570\u5217\u5206\u6bb5\uff0c\u5b8c\u6210\u5bf9\u6570\u5217\u4e00\u4e9b\u533a\u95f4\u64cd\u4f5c\u548c\u533a\u95f4\u67e5\u8be2\u7684\u64cd\u4f5c\uff0c\u662f\u4e00\u79cd\u6839\u53f7\u7b97\u6cd5\u3002\n\n\u8fd9\u7bc7\u5b66\u4e60\u7b14\u8bb0&\u9898\u89e3\u662f\u672c**\u840c\u65b0**\u5728\u5b66\u4e60\u5206\u5757\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u611f\u609f\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5206\u5757\u96f6\u57fa\u7840\u7684\u540c\u5b66\u5b66\u4f1a**\u57fa\u7840**\u5206\u5757\u3002\n\n---\n\n## 0 \u8bf4\u660e\n\n\u672c\u6587\u4e2d\uff0c\u4ee5\u4e0b\u53d8\u91cf\u6709\u7279\u5b9a\u7684\u542b\u4e49\uff1a\n\n - $\\operatorname{block}$\uff1a\u5757\u7684\u5927\u5c0f\n - $n$\uff1a\u88ab\u5206\u5757\u7684\u6570\u5217\u7684\u5927\u5c0f\uff08\u957f\u5ea6\uff09\n - $L_{x}$\uff1a\u7b2c $x$ \u53f7\u5757\u7684\u5de6\u8fb9\u754c\n - $R_{x}$\uff1a\u7b2c $x$ \u53f7\u5757\u7684\u53f3\u8fb9\u754c\n - $\\operatorname{tot}$\uff1a\u5757\u7684\u6570\u91cf\n - $\\operatorname{belong}_{x}$\uff1a\u7b2c $x$ \u53f7\u5143\u7d20\u6240\u5c5e\u7684\u5757\n \n \u5728\u5199\u4f5c\u65f6\uff0c\u7531\u4e8e\u672c\u840c\u65b0\u7684\u5931\u8bef\uff0c\u53ea\u597d\u63d0\u524d\u5728\u8fd9\u91cc\u4ee4 $[l,r]$ \u4e0e $[x,y]$ \u7b49\u4ef7\u3002\n \n---\n\n## 1 \u5efa\u5757\n\n### 1.1 \u5efa\u5757\u9700\u8981\u5b8c\u6210\u7684\u4efb\u52a1\n\n\u5728\u8bfb\u5165\u6570\u636e\u540e\uff0c\u5efa\u5757\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u51e0\u4e2a\u4efb\u52a1\uff1a\n\n - \u786e\u5b9a\u5757\u7684\u5927\u5c0f\n - \u786e\u5b9a\u5757\u7684\u6570\u91cf\n - \u6807\u8bb0\u6bcf\u4e2a\u5757\u7684\u5de6\u53f3\u8fb9\u754c\n - \u6807\u8bb0\u6bcf\u4e2a\u5143\u7d20\u6240\u5c5e\u7684\u5757\n - \u5bf9\u6bcf\u4e2a\u5757\u7684\u6570\u636e\u8fdb\u884c\u521d\u59cb\u5316\n\n### 1.2 \u786e\u5b9a\u5757\u7684\u5927\u5c0f\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u4e60\u60ef\u4e8e\u4ee4 $\\operatorname{block}=\\sqrt{n}$\u3002\n\n\u4f46\u662f\u7531\u4e8e~~\u6bd2\u7624~~\u826f\u5fc3\u547d\u9898\u4eba\u6cdb\u6ee5\uff0c$\\operatorname{block}=\\sqrt{n}$ \u6781\u5176\u6709\u53ef\u80fd\u88ab\u9488\u5bf9\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5757\u7684\u5927\u5c0f\u9002\u5f53\u4f5c\u51fa\u4e00\u4e9b\u8c03\u6574\uff0c\u4f8b\u5982 $\\sqrt{n}+1$\uff0c$\\sqrt{n}-1$\uff0c$\\sqrt{\\frac{n}{\\lg(n)}}$ \u7b49\u3002\n\n\u4e00\u822c\u8fd9\u4e2a\u5de5\u4f5c\u53ea\u6709\u4e00\u53e5\u8bdd\uff1a\n\n```cpp\nblock = (int)sqrt((double)n);\n```\n\n### 1.3 \u786e\u5b9a\u5757\u7684\u6570\u91cf\n\n\u5728\u786e\u5b9a\u4e86\u5757\u7684\u5927\u5c0f\u540e\uff0c\u5757\u7684\u6570\u76ee\u5c31\u5f88\u5bb9\u6613\u786e\u5b9a\u4e86\u3002\n\n\u4f46\u662f $n$ \u4e0d\u4e00\u5b9a\u662f\u4e00\u4e2a\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u6211\u4eec\u9700\u8981\u628a\u6700\u540e\u51e0\u4e2a\u65e0\u6cd5\u51d1\u8db3 $\\operatorname{block}$ \u4e2a\u5143\u7d20\u7684\u518d\u5355\u72ec\u5206\u4e00\u4e2a\u5757\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ntot = n / block;\nif(n % block) tot++;\n```\n\n### 1.4 \u6807\u8bb0\u6bcf\u4e2a\u5757\u7684\u5de6\u53f3\u8fb9\u754c\n\n\u975e\u5e38\u663e\u7136\uff0c$L_1=1,R_1=\\operatorname{block},L_2=\\operatorname{block}+1,R_2=2\u00d7\\operatorname{block},\\cdots$\n\n\u4ece\u800c\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff1a\n\n$$L_{x}=(x-1)\\cdot\\operatorname{block}+1,R_{x}=x\\cdot \\operatorname{block}$$\n\n\u7279\u522b\u5730\uff0c$R_{\\operatorname{tot}}=n$\n\n\u4ee3\u7801\uff1a\n```cpp\nfor(int i = 1; i <= tot; i++){\n\tL[i] = (i - 1) * block + 1;\n    R[i] = i * block;\n}\nR[tot] = n;\n```\n\n\n### 1.5 \u6807\u8bb0\u6bcf\u4e2a\u5143\u7d20\u6240\u5c5e\u7684\u5757\n\n\u6839\u636e 1.4\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u63a8\u51fa\u516c\u5f0f\u5982\u4e0b\uff1a\n\n$$\\operatorname{belong}_{x}=\\frac{x-1}{\\operatorname{block}}+1$$\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nfor(int i = 1; i <= n; i++)\n\tbelong[i] = (i - 1) / block + 1;\n```\n\n**\u91cd\u8981\uff1a\u5728\u4f7f\u7528\u5206\u5757\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u533a\u5206 $\\operatorname{tot}$ \u548c $n$\u3002** $\\operatorname{tot}$ \u662f\u5757\u7684\u603b\u6570\uff0c$n$ \u662f\u539f\u6765\u5143\u7d20\u7684\u603b\u6570\u3002\n\n### 1.6 \u5bf9\u6bcf\u4e2a\u5757\u7684\u5143\u7d20\u8fdb\u884c\u521d\u59cb\u5316\n\n\u8fd9\u9879\u5de5\u4f5c\u56e0\u9898\u76ee\u4e0d\u540c\u800c\u4e0d\u540c\uff0c\u5982\u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011\u4e00\u9898\uff0c\u5c31\u8981\u5bf9\u6bcf\u4e2a\u5757\u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002\n\n**\u56e0\u4e3a\u6392\u5e8f\u4f1a\u5bf9\u539f\u59cb\u6570\u5217\u4f5c\u51fa\u6539\u53d8\uff0c\u6240\u4ee5\u5728\u672c\u9898\u4e2d\uff0c\u5e94\u5f53\u5148\u628a\u6570\u5217\u590d\u5236\u4e00\u904d\u518d\u8fdb\u884c\u5206\u5757**\n\n---\n\n## 2 \u5206\u5757\u9898\u5e38\u89c1\u7684\u64cd\u4f5c\n\n\u4fee\u6539\uff1a\n\n - \u5bf9\u6570\u5217 $[l,r]$ \u5185\u7684\u6bcf\u4e2a\u6570\u52a0\u4e0a $k$\n - \u5bf9\u6570\u5217 $[l,r]$ \u5185\u7684\u6bcf\u4e2a\u6570\u51cf\u53bb $k$\n - etc.\n\n\u67e5\u8be2\uff1a\n\n - \u6c42\u6570\u5217 $[l,r]$ \u5185\u7684\u6240\u6709\u6570\u7684\u548c\n - \u6c42\u6570\u5217 $[l,r]$ \u5185\u7684\u6570\u6709\u591a\u5c11\u5927\u4e8e/\u5c0f\u4e8e/\u5927\u4e8e\u7b49\u4e8e/\u5c0f\u4e8e\u7b49\u4e8e $k$\n - etc.\n\n---\n\n## 3 \u4fee\u6539\u64cd\u4f5c\n\n\u8003\u8651\u4e24\u79cd\u4fee\u6539\u64cd\u4f5c\u672c\u8d28\u76f8\u540c\uff0c\u7b2c\u4e8c\u79cd\u4fee\u6539\u64cd\u4f5c\u76f8\u5f53\u4e8e\u7b2c\u4e00\u79cd\u4fee\u6539\u64cd\u4f5c\u4e2d $k=-k'$\u3002\n\n### 3.1 \u66b4\u529b\u4fee\u6539\n\n\u8003\u8651\u679a\u4e3e\u533a\u95f4 $[l,r]$ \u4e4b\u95f4\u6240\u6709\u6570\uff0c\u76f4\u63a5\u5bf9\u5176\u5b9e\u65bd\u4fee\u6539\uff0c\u5728\u4fee\u6539\u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5757\u7684\u548c/\u5927\u5c0f\u5173\u7cfb\u7b49\u3002\n\n\u4f46\u8fd9\u4e0d\u662f\u6211\u4eec\u8003\u8651\u7684\u4e1c\u897f\n\n### 3.2 \u8003\u8651\u7ebf\u6bb5\u6811\u601d\u60f3\n\n\u7ebf\u6bb5\u6811\u4e00\u4e2a\u91cd\u8981\u601d\u60f3\uff1alazytag\n\n\u8003\u8651\u5e94\u7528\u5728\u5206\u5757\u4e2d\u3002\u5728\u4fee\u6539\u64cd\u4f5c\u4e2d\uff0c\u5982\u679c\u662f\u6574\u5757\uff0c\u5c31\u4e0d\u7ef4\u62a4\u6bcf\u4e2a\u7684\u5177\u4f53\u4fe1\u606f\uff0c\u800c\u662f\u5728\u8fd9\u4e2a\u5757\u7684 $\\operatorname{lazy}$ \u6807\u8bb0\u4e0a\u52a0\u4e0a $k$\u3002\u5bf9\u4e8e\u6ca1\u6709\u6574\u5757\u4fee\u6539\u7684\u90e8\u5206\uff08\u5373\u5757 $\\operatorname{belong}_x$ \u548c $\\operatorname{belong}_y$ \u7684\u4fee\u6539\u90e8\u5206\uff09\uff0c\u66b4\u529b\u4fee\u6539\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u7b2c $i$ \u4e2a\u6570\u636e $a_i$ \u7684\u771f\u6b63\u6570\u636e\u503c\u4e3a $a_i+\\operatorname{lazy}_{\\operatorname{belong}_{i}}$\u3002\n\n\u5982\u679c\u8be2\u95ee\u6d89\u53ca\u5230\u6392\u5e8f\uff0c\u5757 $\\operatorname{belong}_x$ \u548c $\\operatorname{belong}_y$ \u9700\u8981\u5168\u90e8\u91cd\u65b0\u5907\u4efd\u548c\u6392\u5e8f\uff0c\u5bf9\u4e8e\u5757 $[\\operatorname{belong}_x+1,\\operatorname{belong}_y-1]$ \u7684\u5757\uff0c\u6570\u7684\u76f8\u5bf9\u5927\u5c0f\u4e0d\u4f1a\u6539\u53d8\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u91cd\u65b0\u6392\u5e8f\u3002\n\n\u7279\u522b\u5730\uff0c\u9700\u8981\u7279\u5224 $\\operatorname{belong}_x=\\operatorname{belong}_y$ \u7684\u60c5\u51b5\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\nvoid change(){\n\tif(belong[x] == belong[y]){\n\t\tfor(int i = x; i <= y; i++){\n\t\t\ta[i] += k;\n\t\t\tsum[belong[x]] += k;\n\t\t}\n\t\treturn;\n\t}\n\tfor(int i = x; i <= R[belong[x]]; i++){\n\t\ta[i] += k;sum[belong[x]] += k;\n\t}\n\tfor(int i = L[belong[y]]; i <= y; i++){\n\t\ta[i] += k; sum[belong[y]] += k;\n\t}\n\tfor(int i = belong[x] + 1; i <= belong[y] - 1; i++){\n\t\tlazy[i] += k;\n\t\tsum[i] += blo * k;\n\t}\n}\n```\n\n\u5bf9\u4ee5\u4e0b\u8fd9\u53e5\u4ee3\u7801\u4f5c\u51fa\u7279\u522b\u89e3\u91ca\uff1a\n```cpp\nsum[i] += blo * k;\n```\n\u4e0d\u7528\u7279\u5224\u6700\u540e\u4e00\u5757\u7684\u539f\u56e0\u662f\uff1a\u5982\u679c\u64cd\u4f5c\u533a\u95f4\u8986\u76d6\u5230\u7684\u6700\u540e\u4e00\u5757\uff0c\u4e5f\u4e00\u5b9a\u662f\u4f5c\u4e3a $\\operatorname{belong}_y$ \u5904\u7406\u6389\u4e86\uff0c\u5269\u4e0b\u6765\u7684\u5757\u957f\u4e00\u5b9a\u662f $\\operatorname{block}$\u3002\n\n---\n\n## 4 \u67e5\u8be2\u64cd\u4f5c\n\n### 4.1 \u67e5\u8be2\u5143\u7d20\u548c\n\n\u5bf9\u4e8e\u5757 $\\operatorname{belong}_x$ \u548c $\\operatorname{belong}_y$\uff0c\u66b4\u529b\u679a\u4e3e\u52a0\u548c\uff0c\u6ce8\u610f\u52a0\u4e0a\u5176\u5143\u7d20\u540e\u8fd8\u8981\u52a0\u4e0a $\\operatorname{lazy}_{\\operatorname{belong}_{i}}$\n\n\u5bf9\u4e8e $[\\operatorname{belong}_x+1,\\operatorname{belong}_y-1]$ \u7684\u5757\uff0c\u76f4\u63a5 `ans=ans+sum[i]` \u5373\u53ef\u3002\n\n\u540c\u6837\u7684\uff0c\u9700\u8981\u7279\u5224 $\\operatorname{belong}_x=\\operatorname{belong}_y$\n\n\u4ee3\u7801\uff1a\n```cpp\nint query_sum(){\n\tint ans = 0;\n\tif(belong[x] == belong[y]){\n\t\tfor(int i = x; i <= y; i++){\n\t\t\tans += a[i] + lazy[belong[x]];\n\t\t}\n\t\treturn ans;\n\t}\n\tfor(int i = x; i <= R[belong[x]]; i++){\n\t\tans += a[i] + lazy[belong[x]];\n\t}\n\tfor(int i = L[belong[x]]; i <= y; i++){\n\t\tans += a[i] + lazy[belong[y]];\n\t}\n\tfor(int i = belong[x] + 1; i <= belong[y] - 1; i++){\n\t\tans += sum[i];\n\t}\n\treturn ans;\n}\n```\n\n### 4.2 \u67e5\u8be2\u5173\u7cfb\n\n\u4e0e4.1\u7c7b\u4f3c\uff0c\u5728\u5757 $\\operatorname{belong}_x$ \u548c $\\operatorname{belong}_y$\uff0c\u66b4\u529b\u679a\u4e3e\u6c42\u7b54\u6848\uff1b\n\n\u5bf9\u4e8e $[\\operatorname{belong}_x+1,\\operatorname{belong}_y-1]$ \u7684\u5757\uff0c\u56e0\u4e3a\u5176\u662f\u6709\u5e8f\u7684\uff0c\u8fdb\u884c\u4e8c\u5206\u627e\u5230\u7aef\u70b9\u4f4d\u7f6e\uff0c\u7136\u540e\u52a0\u52a0\u51cf\u51cf\u6c42\u51fa\u5757\u4e2d\u6709\u591a\u5c11\u7b26\u5408\u8981\u6c42\u7684\u5143\u7d20\u5373\u53ef\u3002\n\n\u672c\u5904\u4ee3\u7801\u89c15.\n\n---\n\n## 5 \u6559\u4e3b\u7684\u9b54\u6cd5\n\n\u5728\u5b66\u4e60\u5b8c\u5206\u5757\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6559\u4e3b\u7684\u9b54\u6cd5\u5c31\u662f\u4e00\u9053\u88f8\u7684\u5206\u5757\u9898\u3002\n\n\u56e0\u6b64\uff0c\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[1000007],d[1000007],L[1007],R[1007],belong[10000007],lazy[1007],ans;\nint n,q,block,tot,x,y,k;\nchar cz;\ntemplate <typename Tp>\nvoid read(Tp &x){\n    x=0;char ch=1;int fh;\n    while(ch!='-'&&(ch>'9'||ch<'0')){\n        ch=getchar();\n    }\n    if(ch=='-'){\n        fh=-1;ch=getchar();\n    }else fh=1;\n    while(ch>='0'&&ch<='9'){\n        x=(x<<1)+(x<<3)+ch-'0';ch=getchar();\n    }\n    x*=fh;\n}\nvoid fr(char &x)\n{\n    x=0;while(x!='M'&&x!='A') x=getchar();\n}\nvoid build()\n{\n    block=sqrt(n);tot=n/block;\n    if(n%block) tot++;\n    for(register int i=1;i<=n;i++){\n        belong[i]=(i-1)/block+1;d[i]=a[i];\n    }\n    for(register int i=1;i<=tot;i++){\n        L[i]=(i-1)*block+1,R[i]=i*block;\n    }\n    R[tot]=n;\n    for(register int i=1;i<=tot;i++){\n        sort(d+L[i],d+R[i]+1);\n    }\n}\nvoid change()\n{\n    if(belong[x]==belong[y]){\n        for(register int i=x;i<=y;i++){\n            a[i]+=k;\n        }\n        for(register int i=L[belong[x]];i<=R[belong[x]];i++){\n            d[i]=a[i];\n        }\n        sort(d+L[belong[x]],d+R[belong[x]]+1);\n    }\n    else{\n        for(register int i=x;i<=R[belong[x]];i++){\n            a[i]+=k;\n        }\n        for(register int i=L[belong[x]];i<=R[belong[x]];i++){\n            d[i]=a[i];\n        }\n        sort(d+L[belong[x]],d+R[belong[x]]+1);\n        for(register int i=L[belong[y]];i<=y;i++){\n            a[i]+=k;\n        }\n        for(register int i=L[belong[y]];i<=R[belong[y]];i++){\n            d[i]=a[i];\n        }\n        sort(d+L[belong[y]],d+R[belong[y]]+1);\n        for(register int i=belong[x]+1;i<=belong[y]-1;i++){\n            lazy[i]+=k;\n        }\n    }\n}\nvoid query()\n{\n    ans=0;\n    if(belong[x]==belong[y]){\n        for(register int i=x;i<=y;i++){\n            if(lazy[belong[x]]+a[i]>=k) ans++;\n        }\n        printf(\"%d\\n\",ans);\n        return;\n    }\n    else{\n        for(register int i=x;i<=R[belong[x]];i++){\n            if(lazy[belong[x]]+a[i]>=k) ans++;\n        }\n        for(register int i=L[belong[y]];i<=y;i++){\n            if(lazy[belong[y]]+a[i]>=k) ans++;\n        }\n        for(register int i=belong[x]+1;i<=belong[y]-1;i++){\n            int ll=L[i],rr=R[i],result=0,mid;\n            while(ll<=rr)\n            {\n                mid=(ll+rr)>>1;\n                if(d[mid]+lazy[i]>=k)\n                    rr=mid-1,result=R[i]-mid+1;\n                else\n                    ll=mid+1;\n            }\n            ans+=result;\n        }\n        printf(\"%d\\n\",ans);\n    }\n}\nint main()\n{\n    read(n);read(q);\n    for(register int i=1;i<=n;i++)\n        read(a[i]);\n    build();\n    while(q--){\n        fr(cz);\n        read(x);read(y);read(k);\n        if(cz=='M'){\n            change();\n        }\n        if(cz=='A'){\n            query();\n        }\n    }\n    return 0;\n}\n```\n\n## 6 \u9644\n\n\u56e0\u4e3a\u672c\u4eba\u662f\u4e2a**\u840c\u65b0**\uff0c\u6587\u5b57\u672a\u514d\u6709\u4e9b\u758f\u6f0f\uff0c\u6b22\u8fce\u5927\u4f6c\u6307\u5bfc\u3002\n",
        "postTime": 1547287214,
        "uid": 28910,
        "name": "\u89c8\u904d\u5343\u79cb",
        "ccfLevel": 6,
        "title": "\u3010\u5206\u5757\u3011\u5b66\u4e60\u7b14\u8bb0 &  P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011\u9898\u89e3"
    },
    {
        "content": "\u8bdd\u8bf4\u5206\u5757\u786e\u5b9e\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u7b97\u6cd5\uff0c\u53ea\u53ef\u60dc\u6d1b\u8c37\u4e0a\u7684\u9898\u76ee\u6709\u70b9\u5c11\u3002\n\n\u770b\u5230\u8fd9\u4e00\u9898\u9996\u5148\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u518d\u53d1\u73b0\u7ebf\u6bb5\u6811\u505a\u4e0d\u4e86\uff0c\u6bcf\u4e2a\u8282\u70b9\u9884\u5904\u7406\u51fa>=k\u7684\u4e2a\u6570\u5b9e\u5728\u662f\u592a\u591a\u4e86\uff0c\n\n\u7a7a\u95f4\u4e0d\u80fd\u627f\u53d7\u3002\n\n\u90a3\u4e48\u600e\u4e48\u7528\u5206\u5757\u505a\u5462\uff1f\n\n\u5148\u770b\u770b\u600e\u4e48\u67e5\u8be2\u5757\u5185>=k\u7684\u4e2a\u6570\u7684\u64cd\u4f5c\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u8fd9\u4e2a\u5757\u6392\u597d\u5e8f\uff0c\u7136\u540e\u4e8c\u5206\u67e5\u627ek\u7684\u503c\u5c31\u597d\u4e86\u3002\n\n\u81f3\u4e8e\u4e24\u8fb9\u4e0d\u5b8c\u6574\u7684\u5757\uff0c\u66b4\u529b\u67e5\u8be2\u8fd8\u6ca1\u6709\u6392\u5e8f\u7684\u539f\u672c\u5e8f\u5217\u76f4\u63a5\u627e\u5c31\u597d\u4e86\n\n\u518d\u770b\u770b\u600e\u4e48\u4fee\u6539\uff1f\uff1f\n\n\u5bf9\u4e8e\u6574\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u6253\u4e0a\u4e00\u4e2aadd\u6807\u8bb0\uff0c\u8fd9\u6837\u4e8c\u5206\u67e5\u627e\u5c31\u8981\u67e5 >= k-add \u7684\u503c\u3002\n\n\u5bf9\u4e8e\u4e0d\u5b8c\u6574\u7684\u5757\uff0c\u6211\u4eec\u66b4\u529b\u4fee\u6539\uff0c\u518d\u76f4\u63a5\u6392\u5e8f\u6574\u4e2a\u5757\u5c31\u597d\u4e86\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<cstdlib>\n#include<queue>\n#include<cmath>\nusing namespace std;\nconst int maxn=1e6+10;\nint n,q,a[maxn],b[maxn],l[maxn],r[maxn],belong[maxn],add[maxn],block,num;\nvoid build(void);\nvoid update(int ll,int rr,int w);\nint ask(int ll,int rr,int w);\nint find(int x,int w);\nvoid reset(int x){\n    for(int i=l[belong[x]]; i<=r[belong[x]]; i++) b[i] = a[i];\n    sort(b+l[belong[x]],b+r[belong[x]]+1);\n}\nint main(){\n    scanf(\"%d%d\",&n,&q);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    build();\n    int x,y,w;\n    for(int i=1;i<=q;i++){\n        char c[5];\n        scanf(\"%s%d%d%d\",c,&x,&y,&w);\n        if(c[0]=='M') update(x,y,w);\n        else printf(\"%d\\n\",ask(x,y,w));\n    }\n    return 0;\n}\nvoid build(void){\n    block=sqrt(n);\n    num=n/block;if(n%block) num++;\n    for(int i=1;i<=n;i++)\n        belong[i]=(i-1)/block+1,b[i]=a[i];\n    for(int i=1;i<=num;i++)\n        l[i]=(i-1)*block+1,r[i]=i*block;\n    r[num]=n;\n    for(int i=1;i<=num;i++)\n        sort(b+l[i],b+r[i]+1);\n    return;\n}\nvoid update(int ll,int rr,int w){\n    if(belong[ll]==belong[rr]){\n        for(int i=ll;i<=rr;i++)\n            a[i]+=w;\n        reset(ll);return;\n    }\n    for(int i=ll;i<=r[belong[ll]];i++){\n        a[i]+=w;\n    }\n    for(int i=l[belong[rr]];i<=rr;i++){\n        a[i]+=w;\n    }\n    reset(ll);reset(rr);\n    for(int i=belong[ll]+1;i<belong[rr];i++)\n        add[i]+=w;\n}\nint ask(int ll,int rr,int w){\n    int cnt=0;\n    if(belong[ll]==belong[rr]){\n        for(int i=ll;i<=rr;i++)\n            if(a[i] + add[belong[ll]]>=w)cnt++;\n            return cnt; \n    }\n    for(int i=ll;i<=r[belong[ll]];i++)\n        if(a[i] + add[belong[i]]>=w) cnt++;\n    for(int i=l[belong[rr]];i<=rr;i++)\n        if(a[i] + add[belong[i]]>=w) cnt++;\n    for(int i=belong[ll]+1;i<belong[rr];i++)\n        cnt+=find(i,w-add[i]);\n    return cnt;\n}\nint find(int x,int w){\n    int ll=l[x],rr=r[x],mid;\n    while(ll<=rr){\n        mid=(ll+rr)/2;\n        if(b[mid]<w) ll=mid+1;\n        else rr=mid-1;\n    }\n    return r[x]-ll+1;\n}\n```\n\u66f4\u65b0\uff1a2018-3-5\n\u539f\u672c\u4ee3\u7801\u4e2d\u6709\u4e00\u5904\u9519\u8bef\uff0c\u8be6\u60c5\u8bf7\u89c1https://www.luogu.org/discuss/show/31449\n\u611f\u8c22@Sooke\n\n\u66f4\u65b0\uff1a2018-3-25 \u53c8\u88ab\u5927\u4f6c\u4eec\u53d1\u73b0\u9519\u8bef\uff0c\u8be6\u60c5\u8fd8\u662f\u8bf7\u89c1https://www.luogu.org/discuss/show/31449\n\u611f\u8c22@\u591a\u529f\u80fd\u7684\u8340\u5f67\n\n~~\u5047\u6570\u636e\u5bb3\u4eba\u554a~~",
        "postTime": 1511881982,
        "uid": 30066,
        "name": "Jianuo_Zhu",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u5206\u5757\u5165\u95e8\u9898\uff0c\u4e0d\u9519\u7684\uff0c\u5efa\u8bae\u5927\u5bb6\u505a\u4e00\u505a\n# \u5f00\u59cb\u5b66\u4e60\n\u5148\u770b\u4e00\u4e0b[\u6570\u5217\u5206\u5757\u5165\u95e8 2](https://loj.ac/problem/6278)\n\n\u8fd9\u9053\u9898\u60f3\u8ba9\u6211\u4eec\u6c42\u533a\u95f4[l,r]>=c\u7684\u4e2a\u6570\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u201c\u6570\u5217\u5206\u5757\u5165\u95e8 2\u201d\u662f\u6c42\u533a\u95f4[l,r]<c(\u5ffd\u7565\u5e73\u65b9)\u7684\u4e2a\u6570\uff0c\u5373\u6c42c\u5728\u533a\u95f4[l,r]\u7684\u6392\u540d\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6bcf\u4e00\u6b21\u67e5\u8be2c\u7684\u6392\u540d\uff0c\u7136\u540e\u7528\u533a\u95f4\u957f\u5ea6\u51cfc\u7684\u6392\u540d\u5c31\u53ef\u4ee5\u8fbe\u5230\u7b54\u6848\u4e86\u5462QAQ\u3002\n\n\u90a3\u4e48\u9898\u76ee\u5c31\u88ab\u8f6c\u79fb\u6210\u4e86\u6c42\u533a\u95f4[l,r]\u4e2dc\u7684\u6392\u540d\n\n------------\n\n\u4e00\u770b\u9898\u76ee\uff0c\u54a6\uff0c\u6c42[l,r]\u533a\u95f4c\u7684\u6392\u540d\uff0c\u9a6c\u4e0a\u5c31\u53ef\u4ee5\u60f3\u5230\u5e73\u8861\u6811\u5566\uff0c\u53ef\u662f\u5e73\u8861\u6811\u8fd9\u4e48\u96be\u5199\uff0c\u800c\u4e14\u8fd8\u4e0d\u652f\u6301\u533a\u95f4\u52a0\uff0c\u90a3\u600e\u4e48\u529e\uff1f **\u5206\u5757\uff01**\n\n\u9996\u5148\uff0c\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u6b65\u9aa4\u5206\u7740\u6765\u770b\uff1a\n\n(1).**\u64cd\u4f5c** \u64cd\u4f5c\u548c\u666e\u901a\u5206\u5757\u7684\u64cd\u4f5c\u4e00\u6a21\u4e00\u6837\uff0c\u7c7b\u4e2atag\uff0c\u6211\u4eec\u5148\u4e0d\u7406\u3002\n\n(2).**\u67e5\u8be2** \u5982\u679c\u4e00\u822c\u67e5\u8be2\u6392\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e00\u6bb5\u6570\u622a\u51fa\u6765\uff0c\u6392\u5e8f\uff0c\u7136\u540e\u4e8c\u5206\u67e5\u627e(lower_bound\u64cd\u4f5c)\u5c31ok\u4e86\u3002\u90a3\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u5148\u5c06\u6bcf\u4e00\u4e2a\u5757\u7684\u6570\u90fd\u6392\u597d\u5e8f\uff0c\u7136\u540e\u67e5\u627e\u6bcf\u4e00\u4e2a\u5757\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u4e8c\u5206\u5462\uff1f ofcause\uff0c\u5f53\u7136\u53ef\u4ee5\uff01\u90a3\u96f6\u96f6\u6563\u6563\u7684\u5269\u4e0b\u7684\u975e\u6574\u5757\u7684\u6570\u5c31\u66b4\u529b\u627e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n(3).**\u6392\u5e8f\u64cd\u4f5c** \u6211\u4eec\u67e5\u8be2\u9700\u8981\u5148\u6392\u5e8f\uff0c\u90a3\u4e48\u6211\u4eec\u6392\u5e8f\u4e5f\u6210\u4e3a\u4e86\u4e00\u4e2a\u64cd\u4f5c\u3002\u6211\u4eec\u53e6\u5916\u5f00\u4e00\u4e2a\u6570\u7ec4ve[i]\uff08ve[i]\u4e3avector\uff0ci\u8868\u793a\u7b2ci\u4e2a\u5757\uff09\u6765\u5b58\u6bcf\u4e2a\u5757\u6392\u5e8f\u7684\u6570\u636e\uff08\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86vector\uff09\u3002\u5230\u65f6\u5019\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u4e8c\u5206ve[i]\u5c31\u53ef\u4ee5\u4e86\u3002\u90a3\u6bcf\u4e00\u6b21\u96f6\u6563\u4fee\u6539\u64cd\u4f5c\u90fd\u4f1a\u4fee\u6539\u6570\u503c\uff08\u6574\u5757\u64cd\u4f5c\u8fd8\u662f\u76f4\u63a5\u52a0tag\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u5bf9\u6709\u4fee\u6539\u6570\u503c\u7684\u90a3\u4e2a\u5757\u91cd\u65b0\u8fdb\u884c\u5757\u5185\u6392\u5e8f\u3002\uff08\u989d\uff0c\u597d\u6162\u554a\uff09\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u7684\u590d\u6742\u5ea6\u662fO(msqrt(nlogn))\n\n\u90a3\u4e48\u6211\u4eec\u8fd9\u4e2a\u5206\u5757\u7684\u57fa\u672c\u601d\u60f3\u5c31\u662f\u8fd9\u6837\u4e86\u3002\u8fd8\u6709\u5f88\u591a\u5c0f\u7ec6\u8282\u53ef\u4ee5\u770b\u770b\u6211\u7684\u4ee3\u7801\uff1a\n\n```cpp\n//P2801 \u6559\u4e3b\u7684\u9b54\u6cd5\n#include<map>\n#include<set>\n#include<cmath>\n#include<stack>\n#include<queue>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nint n,m,blo;\nint v[1000005],bl[1000005],atag[1000005];\nvector<int>ve[10001];\nvoid reset(int x)                       //\u6392\u5e8f\u64cd\u4f5c \n{\n    ve[x].clear();                      //\u5148\u521d\u59cb\u5316 \n    for(int i=(x-1)*blo+1;i<=min(x*blo,n);i++)\n        ve[x].push_back(v[i]);          //\u5c06\u6574\u4e2a\u5757\u7684\u6570\u503c\u91cd\u65b0\u538b\u8fdbvector\u91cc \n    sort(ve[x].begin(),ve[x].end());    //\u5757\u5185\u6392\u5e8f \n}\nll read()                               //\u5feb\u8bfb \n{\n    ll x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nvoid add(int a,int b,int c)             //\u4fee\u6539\u64cd\u4f5c \n{\n    for(int i=a;i<=min(bl[a]*blo,b);i++) v[i]+=c;   //\u96f6\u6563\u64cd\u4f5c \n    reset(bl[a]);                       //\u91cd\u65b0\u5757\u5185\u6392\u5e8f \n    if(bl[a]!=bl[b])                    \n    {\n        for(int i=(bl[b]-1)*blo+1;i<=b;i++) v[i]+=c;//\u96f6\u6563\u64cd\u4f5c \n        reset(bl[b]);                   //\u91cd\u65b0\u5757\u5185\u6392\u5e8f \n    }\n    for(int i=bl[a]+1;i<=bl[b]-1;i++)   \n        atag[i]+=c;\n}\nint query(int a,int b,int c)            //\u67e5\u8be2\u64cd\u4f5c \n{\n    int ans=0;//\u6392\u540d \n    for(int i=a;i<=min(bl[a]*blo,b);i++)//\u96f6\u6563\u66b4\u529b\u67e5\u8be2 \n    {\n        if(v[i]+atag[bl[a]]<c)\n        ans++;\n    }\n    if(bl[a]!=bl[b])\n    {\n        for(int i=(bl[b]-1)*blo+1;i<=b;i++)         //\u96f6\u6563\u66b4\u529b\u67e5\u8be2 \n        {\n            if(v[i]+atag[bl[b]]<c)\n            ans++;\n        }\n    }\n    for(int i=bl[a]+1;i<=bl[b]-1;i++)   //\u6574\u5757\u67e5\u8be2 \n    {\n        int x=c-atag[i];                //\u6ce8\u610f\uff1a\u8fd9\u91cc\u8981\u5148\u526a\u53bb\u8fd9\u4e2a\u5757\u7684atag\uff0c\u56e0\u4e3a\u8fd9\u6574\u4e2a\u5757\u7684\u6240\u4ee5\u6570\u503c\u90fd\u5e94\u8be5\u52a0\u4e86atag\uff0c\u6240\u4ee5\u6211\u4eec\u4e8c\u5206\u627e\u7684\u6570\u4e5f\u8981\u5148\u526aatag \n        ans+=lower_bound(ve[i].begin(),ve[i].end(),x)-ve[i].begin();    //\u6ce8\u610f\uff1a\u8fd9\u91cclower_bound\u64cd\u4f5c\u8fd4\u56de\u7684\u662f\u5730\u5740\uff0c\u6240\u4ee5\u8981\u60f3\u77e5\u9053\u5757\u5185\u6392\u540d\uff0c\u8981\u51cf\u5757\u5934\u7684\u5730\u5740 \n    }   //\u4e0d\u4f1a\u7528lower_bound\u53ef\u4ee5\u76f4\u63a5\u5199\u4e8c\u5206 \n    return ans;\n}\nint main()\n{\n    n=read();m=read();blo=sqrt(n);\n    for(int i=1;i<=n;i++)v[i]=read();\n    for(int i=1;i<=n;i++)bl[i]=(i-1)/blo+1,ve[bl[i]].push_back(v[i]);   //\u521d\u59cb\u5316ve[i]\u6570\u7ec4 \n    for(int i=1;i<=bl[n];i++)\n    sort(ve[i].begin(),ve[i].end());    //\u6392\u5e8f\n    for(int i=1;i<=m;i++)\n    {\n    \tchar f;cin>>f;\n        int a=read(),b=read(),c=read();\n        if(f=='M')add(a,b,c);\n        if(f=='A')printf(\"%d\\n\",b-a+1-query(a,b,c));\n    }\n    return 0;\n}\n```\n\n# \u5e7f\u544a\n\n\u5982\u679c\u9700\u8981\u66f4\u7cfb\u7edf\u7684\u5b66\u4e60\u5206\u5757\u53ef\u4ee5\u770b\u6211\u7684blog\uff0c\u5185\u5bb9\u66f4\u8be6\u7ec6\uff0c\u5206\u89e3\u66f4\u5230\u4f4dqwq\n\n## [\u5206\u5757\u5b66\u4e60blog](https://www.luogu.org/blog/juruohyfhaha/fen-kuai-xue-xi)",
        "postTime": 1544606501,
        "uid": 58711,
        "name": "hyfhaha",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "# \u672c\u9898\u89e3\u662f\u6211\u5199\u7684\u7b2c\u4e00\u7bc7\u5206\u5757\u9898\u89e3\uff0c\u5e0c\u671b\u80fd\u901a\u8fc7$qwq$\n****\n**\u672c\u9898\u89e3\u8be6\u7ec6\u4ecb\u7ecd\u5206\u5757\uff0c\u4e3a\u4e86\u65b9\u4fbf\u9605\u8bfb\uff0c\u7ed9\u51fa\u76ee\u5f55\uff1a**\n\n$1$\u3001\u5206\u5757\u662f\u4ec0\u4e48\n\n$2$\u3001\u53d8\u91cf\uff0c\u53ca\u6570\u7ec4\u4ecb\u7ecd\n\n$3$\u3001\u5934\u6587\u4ef6\n\n$4$\u3001\u4f60\u4eec\u6700\u7231\u7684\u4ee3\u7801\uff08\u542b\u6ce8\u91ca\uff09\n****\n# \u4e00\u3001\u5206\u5757\u662f\u4ec0\u4e48\n\n\u5206\u5757\u7b97\u6cd5\u5b9e\u8d28\u4e0a\u662f\u4e00\u79cd\u662f\u901a\u8fc7\u5206\u6210\u591a\u5757\u540e\u5728\u6bcf\u5757\u4e0a\u6253\u6807\u8bb0\n\n\u4ee5\u5b9e\u73b0\u5feb\u901f\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u7684\u4e00\u79cd\u7b97\u6cd5\u3002\u5176\u5747\u644a\u65f6\u95f4\n\n\u590d\u6742\u5ea6\u4e3a$O$($\\sqrt n$ )$ $ $ $ $ $ $ $  $ $ $ $ $ $ \u2014\u2014$decoration$\uff08\u67d0\u5927\u4f6c\uff09\n\n\u5b89\u5229\u4e00\u4e0b[\u6613\u61c2\u7684\u6d1b\u8c37\u65e5\u62a5](https://www.luogu.org/blog/48265/qian-tan-ji-chu-gen-hao-suan-fa-fen-kuai)\n\n\u8be6\u7ec6\u4ecb\u7ecd\u90fd\u5728\u91cc\u9762$qwq$,~~\u5176\u5b9e\u662f\u6211\u592a\u61d2\u4e86~~\n****\n# \u4e8c\u3001\u53d8\u91cf\uff0c\u53ca\u6570\u7ec4\u4ecb\u7ecd\n\n\u5176\u5b9e\u4f9d\u7167\u6bcf\u4e2a\u4eba\u4e0d\u540c\u7684\u7406\u89e3\uff0c\u53d8\u91cf\u548c\u6570\u7ec4\u4ee5\u53ca\u5904\u7406\u65b9\u6cd5\n\n\u90fd\u4f1a\u4e0d\u540c\uff0c\u4e0b\u9762\u6211\u5c31\u6211\u81ea\u5df1\u7684\u6765\u8c08\u8c08\n\n### \u53d8\u91cf\uff1a\n\n$1$\u3001$block$:\u6bcf\u4e2a\u5b8c\u6574\u5757\u7684\u5927\u5c0f\n\n#### \u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\u5982\u679c\u603b\u957f\u5ea6\u4e3a$10$\u7684\u8bdd\uff0c\u5c31\u5206\u4e3a4\u4e2a\u5757\uff0c\u524d\u4e09\u4e2a\u5757\u6709$3$\u4e2a\n\n\u6570\uff0c\u6700\u540e\u4e00\u4e2a\u5757$1$\u4e2a\u6570\uff0c\u90a3\u4e48$block$\u5c31\u662f$3$\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f\n\n$block=$ $\\sqrt n$ \u53d6\u6574\uff08\u53bb\u5c3e\u6cd5\uff09\n\n$2$\u3001$cnt$:\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u5757\uff08\u5305\u62ec\u4e0d\u5b8c\u6574\u7684\u5757\uff09\n\n#### \u4f8b\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\uff1a$cnt$\u5c31\u7b49\u4e8e$4$\n\n### \u6570\u7ec4\uff1a\n\n$1$\u3001$val[maxn]$:\u5b58\u50a8\u6700\u5f00\u59cb\u6bcf\u4e2a\u6570\u7684\u503c\uff0c$maxn=n$\n\n$2$\u3001$belong[maxn]$:\u5b58\u50a8\u6bcf\u4e2a\u503c\u5c5e\u4e8e\u54ea\u4e2a\u5757\n\n$3$\u3001$mark[sqrt(maxn)]$:\u5b58\u50a8\u6bcf\u4e2a\u5757\u7684\u6807\u8bb0\n\n### \u4f8b\u5982\uff1a\n\n\u628a$1$\u53f7\u5757\u6574\u4f53\u52a0$m$,\u90a3\u4e48$mark[1]+=m$\n\n$4$\u3001$vector<int> kuai[sqrt(maxn)]$:\n\n\u5b58\u50a8\u6bcf\u4e2a\u5757\u5185\u7684\u5143\u7d20\uff0c~~\u539f\u8c05\u6211\u7528\u4e2d\u6587\u540d$qwq$~~\n****\n# \u4e09\u3001\u5934\u6587\u4ef6\n\n\u4f9d\u7167\u6211\u7684\u53d8\u91cf\u548c\u6570\u7ec4\u7684\u8bdd\uff0c\u9700\u8981\u7528\u5230\uff1a\n\n$1$\u3001$vector$\n\n$2$\u3001$cmath$\n\n$1$\u3001$algorithm$\n\n### \u89c6\u60c5\u51b5\u800c\u5b9a\u5427$qwq$\n****\n# \u56db\u3001\u4ee3\u7801\uff08\u542b\u6ce8\u91ca\uff09\n~~~cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#pragma GCC optimize(3)\nusing namespace std;\nconst int maxn=1000010;\nconst int _maxn=1010;\nint n,q,block,cnt;\nint belong[maxn],val[maxn],mark[_maxn];//\u6570\u7ec4\u5728\u4e0a\u6587\u5df2\u63d0\u53ca\uff0c\u4e0d\u591a\u8d58\u8ff0 \nvector<int> kuai[_maxn];\nvoid start()//\u521d\u59cb\u5316kuai\u6570\u7ec4\uff0c\u8ba9\u6bcf\u4e2a\u5757\u5185\u90fd\u6709\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f \uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4ece\u5927\u5230\u5c0fqwq\uff09 \n{\n\tfor(int i=1;i<=cnt;++i)\n\t\tsort(kuai[i].begin(),kuai[i].end());\n}\nvoid update(int pos)//\u66f4\u65b0kuai\u6570\u7ec4\n{\n\tkuai[pos].clear();//\u6e05\u7a7a\u6570\u7ec4 \n\tfor(int i=(pos-1)*block+1;i<=pos*block;++i)\n\t\tkuai[pos].push_back(val[i]);//\u56e0\u4e3a\u5757\u5185\u5143\u7d20\u5df2\u4fee\u6539\uff0c\u6240\u4ee5\u91cd\u65b0\u653e\u5165\u5143\u7d20 \n\tsort(kuai[pos].begin(),kuai[pos].end());//\u4fdd\u8bc1\u5757\u5185\u7684\u6709\u5e8f\u6027 \n} \nvoid add(int l,int r,int x)//\u533a\u95f4\u4fee\u6539 \n{\n\tfor(int i=l;i<=min(r,belong[l]*block);++i)\n\t\tval[i]+=x;//\u5de6\u8fb9\u96f6\u6563\u7684\u5757\u66b4\u529b\u4fee\u6539 \n\tupdate(belong[l]);//\u66f4\u65b0\u5de6\u8fb9\u96f6\u6563\u5757\u7684kuai\u6570\u7ec4 \n\tif(belong[l]!=belong[r])\n\t{\n\t\tfor(int i=belong[l]+1;i<belong[r];++i)\n\t\t\tmark[i]+=x;//\u4e2d\u95f4\u7684\u5757\u76f4\u63a5\u6253\u6807\u8bb0 \n\t\tfor(int i=(belong[r]-1)*block+1;i<=r;++i)\n\t\t\tval[i]+=x;//\u53f3\u8fb9\u96f6\u6563\u7684\u5757\u66b4\u529b\u4fee\u6539\t\t\n\t\tupdate(belong[r]);// \u66f4\u65b0\u53f3\u8fb9\u96f6\u6563\u5757\u7684kuai\u6570\u7ec4 \n\t}\n}\nint search(int l,int r,int x)\n{\n\tint num=0;//\u8ba1\u6570\u5668 \n\tfor(int i=l;i<=min(r,belong[l]*block);++i)\n\t\tif(val[i]+mark[belong[i]]>=x)//\u5de6\u8fb9\u96f6\u6563\u7684\u5757\u66b4\u529b\u67e5\u8be2\uff0c\u8bb0\u4f4f\u8981\u52a0mark\u503c \n\t\t\t++num;\n\tif(belong[l]!=belong[r])\n\t{\n\t\tfor(int i=belong[l]+1;i<belong[r];++i)\n\t\t{\n\t\t\tint L=0,R=block-1,mid;\n\t\t\twhile(L<=R)//\u4e2d\u95f4\u5757\u4e8c\u5206\u67e5\u8be2\uff0c\u4e0d\u7136\u4f1aT \uff0c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u7528lower_bound\u8fd9\u4e9b\u7c7b\u4f3c\u7684\u51fd\u6570\uff0c\u522b\u770b\u6211\u3002\u3002\u6211\u4e0d\u4f1a\u3002\u3002 \n\t\t\t{\n\t\t\t\tmid=L+((R-L)>>1);\n\t\t\t\tif(kuai[i][mid]+mark[i]<x)\n\t\t\t\t\tL=mid+1;\n\t\t\t\telse\n\t\t\t\t\tR=mid-1;\n\t\t\t}\n\t\t\tnum+=block-L;\n\t\t}\n\t\tfor(int i=(belong[r]-1)*block+1;i<=r;++i)\n\t\t\tif(val[i]+mark[belong[i]]>=x)//\u53f3\u8fb9\u96f6\u6563\u7684\u5757\u66b4\u529b\u67e5\u8be2 \n\t\t\t\t++num;\n\t}\n\treturn num;//\u8fd4\u56de\u503c\u3002\u3002\u3002 \n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tblock=sqrt(n);//\u5757\u7684\u5927\u5c0f \n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d\",&val[i]);\n\t\tif(i%block==1)//\u5230\u4e86\u65b0\u7684\u4e00\u4e2a\u5757 \n\t\t\tcnt++;\n\t\tbelong[i]=cnt;\n\t\tkuai[cnt].push_back(val[i]);\n\t}\n\tstart();\n\tfor(int i=1;i<=q;++i)\n\t{\n\t\tchar in1;\n\t\tint in2,in3,in4;\n\t\tscanf(\" %c%d%d%d\",&in1,&in2,&in3,&in4);\n\t\tswitch(in1)\n\t\t{\n\t\t\tcase 'M':\t\t\t\t\n\t\t\t\tadd(in2,in3,in4);\t\t\t\n\t\t\tbreak;\n\t\t\tcase 'A':\n\t\t\t\tprintf(\"%d\\n\",search(in2,in3,in4));\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\n~~~\n****\n# \u7ed3\u8bed\uff1a\n\n## \u5982\u679c\u6709\u9519\u8bef\uff0c\u8bf7\u79c1\u4fe1\u6211\uff0c\u53e6\u5916\uff0c\u89c9\n\n## \u5f97\u6709\u5e2e\u52a9\u7684\u8bdd\uff0c\u4e0d\u8981\u541d\u556c\u4f60\u4eec\u7684\u8d5e\n\n## \u54e6$qwq$\n\n****",
        "postTime": 1541564507,
        "uid": 96968,
        "name": "3493441984zz",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u6ca1\u6709\u4eba\u5199\u7ebf\u6bb5\u6811\u4e48\uff0c\u90a3\u6211\u5199\u4e00\u4e2a\u5427\n\n\n\u66f4\u6539\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u533a\u95f4\u52a0\u6cd5+\u61d2\u60f0\u6807\u8bb0\n\n\u67e5\u8be2\u53ef\u4ee5\u8bb0\u533a\u95f4max\u548cmin\uff0c\u5982\u679c\u67e5\u8be2\u7684\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\n\u533a\u95f4\u7684min\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u533a\u95f4\u7684\u6570\u5b57\u4e2a\u6570\uff08\u533a\u95f4\u6240\u6709\u7684\u6570\u90fd\n\u5927\u4e8e\u7b49\u4e8ec\uff09\uff0c\n\u5982\u679c\u67e5\u8be2\u7684\u6570\u503c\u5927\u4e8e\n\u533a\u95f4\u7684max\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u533a\u95f4\u76840\uff08\u533a\u95f4\u6240\u6709\u7684\u6570\u90fd\n\u5c0f\u4e8ec\uff09\n\n\u9644\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define N 1100000\nusing namespace std;\nstruct node{\n\tint min1,max1,flag;\n}tree[N*4];\nint n,q,a[N],l,r,c;\nchar ch[10];\n//\u5feb\u8bfb\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0' or c>'9') f=(c=='-'?-1:f),c=getchar();\n\twhile(c>='0' and c<='9') x=x*10+c-'0',c=getchar();\n\treturn x*f;\n}\ninline void update(int p){\n\ttree[p].max1=max(tree[p<<1].max1,tree[p<<1|1].max1);\n\ttree[p].min1=min(tree[p<<1].min1,tree[p<<1|1].min1);\n}\ninline void pushdown(int p){\n\tif(tree[p].flag){\n\t\ttree[p<<1].flag+=tree[p].flag,tree[p<<1|1].flag+=tree[p].flag,\n\t\ttree[p<<1].max1+=tree[p].flag,tree[p<<1|1].max1+=tree[p].flag,\n\t\ttree[p<<1].min1+=tree[p].flag,tree[p<<1|1].min1+=tree[p].flag,\n\t\ttree[p].flag=0;\n\t}\n}\nvoid build(int p,int l,int r){\n\tif(l==r){tree[p].min1=tree[p].max1=a[l];return ;}\n\tint mid=(l+r)/2;\n\tbuild(p<<1,l,mid);\n\tbuild(p<<1|1,mid+1,r);\n\tupdate(p);\n}\nvoid add(int p,int l,int r,int ql,int qr,int c){\n\tif(ql<=l and r<=qr){tree[p].max1+=c,tree[p].min1+=c,tree[p].flag+=c;return ;}\n\tpushdown(p);\n\tint mid=(l+r)/2;\n\tif(ql<=mid) add(p<<1,l,mid,ql,qr,c);\n\tif(mid<qr) add(p<<1|1,mid+1,r,ql,qr,c);\n\tupdate(p);\n}\nint qeury(int p,int l,int r,int ql,int qr,int c){\n//\u5982\u9898\u89e3\u6240\u8bf4\n\tif(ql<=l and r<=qr and c<=tree[p].min1) return r-l+1;\n\tif(ql<=l and r<=qr and c>tree[p].max1) return 0;\n\tpushdown(p);\n\tint mid=(l+r)/2,ans=0;\n\tif(ql<=mid) ans+=qeury(p<<1,l,mid,ql,qr,c);\n\tif(mid<qr) ans+=qeury(p<<1|1,mid+1,r,ql,qr,c);\n\tupdate(p);return ans;\n}\nint main(){\n\tn=read();q=read();\n\tfor(register int i=1;i<=n;++i) a[i]=read();\n    //\u5efa\u6811\n\tbuild(1,1,n);\n\tfor(register int i=1;i<=q;++i){\n\t\tscanf(\"%s\",ch);l=read();r=read();c=read();\n\t\tif(ch[0]=='M') add(1,1,n,l,r,c);\n\t\telse printf(\"%d\\n\",qeury(1,1,n,l,r,c));\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1538224935,
        "uid": 67111,
        "name": "fnoi16wjhui",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u88ab\u673a\u623f\u5927\u4f6c\u63a8\u8350\u6765\u505a\u8fd9\u9053\u5206\u5757\u9898???\n\n$Q\\le 3000$\uff0c\u4e00\u5f00\u59cb\u7684\u8eab\u9ad8$\\le 1000$\n\n\u53c8\u4e0d\u5f3a\u5236\u5728\u7ebf\n\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u641e\u4e00\u4e9b\u4e8b\u60c5\u3002\n\n\u7531\u4e8e\u6211\u4eec\u7684\u8be2\u95ee\u53ea\u6709$3000$\u4e2a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5e8f\u5217\u5c31\u88ab\u8fd9\u8be2\u95ee\u7684$3000$\u4e2a\u5de6\u7aef\u70b9\u548c$3000$\u4e2a\u53f3\u7aef\u70b9\u5206\u6210\u4e86$6000(+1?)$\u6bb5\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u6211\u4eec\u7528$s_{i,j}$\u8bb0\u5f55\u7b2c$i$\u6bb5\u6743\u503c$\\ge j$\u7684\u6709\u591a\u5c11\u4e2a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u533a\u95f4\u90fd\u679a\u4e3e\u4e00\u904d\u6240\u6709\u7684\u8be2\u95ee\uff0c\u4fee\u6539\u80af\u5b9a\u662f\u6574\u6bb5\u533a\u95f4\u4e00\u8d77\u4fee\u6539\uff0c\u6253\u4e2a$lazy$\u5c31\u53ef\u4ee5\u4e86\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u628a\u8be2\u95ee\u51cf\u6389$lazy$\u67e5\u4e00\u4e0b\u6743\u503c\u3002\n\n\u590d\u6742\u5ea6\u662f$O(2Q(Q+1000))$\n\n```cpp\n#include<bits/stdc++.h>\n#include<algorithm>\n#include<iostream>\n#include<cstdlib>\n#include<iomanip>\n#include<cstring>\n#include<complex>\n#include<vector>\n#include<cstdio>\n#include<string>\n#include<bitset>\n#include<ctime>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<map>\n#include<set>\n#define Cpy(x,y) memcpy(x,y,sizeof(x))\n#define Set(x,y) memset(x,y,sizeof(x))\n#define FILE \"a\"\n#define mp make_pair\n#define pb push_back\n#define RG register\n#define il inline\nusing namespace std;\ntypedef unsigned long long ull;\ntypedef vector<int>VI;\ntypedef long long ll;\ntypedef double dd;\nconst int N=1000010;\nconst int M=10000010;\nconst dd eps=1e-5;\nconst int inf=2147483647;\nconst ll INF=1ll<<60;\nconst ll P=100000;\nil ll read(){\n  RG ll data=0,w=1;RG char ch=getchar();\n  while(ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n  if(ch=='-')w=-1,ch=getchar();\n  while(ch<='9'&&ch>='0')data=data*10+ch-48,ch=getchar();\n  return data*w;\n}\n\nil void file(){\n  srand(time(NULL)+rand());\n  freopen(FILE\".in\",\"r\",stdin);\n  freopen(FILE\".out\",\"w\",stdout);\n}\n\nint n,Q,k,a[N],o[N],len,m,s[6005][1005],tag[N],ans[N];\nstruct query{int opt,l,r,v,id;}q[N];\nint main()\n{\n  n=read();Q=read();\n  for(RG int i=1;i<=n;i++)a[i]=read();\n  for(RG int i=1,c;i<=Q;i++){\n    c=0;while(c!='M'&&c!='A')c=getchar();\n    q[i].opt=(c=='A');q[i].l=read();q[i].r=read();q[i].v=read();\n    o[++o[0]]=q[i].l;o[++o[0]]=q[i].r+1;if(c=='A')q[i].id=++k;\n  }\n  sort(o+1,o+o[0]+1);m=unique(o+1,o+o[0]+1)-o-1;o[m+1]=n+1;\n  for(RG int i=1;i<=Q;i++){\n    q[i].l=lower_bound(o+1,o+m+1,q[i].l)-o;\n    q[i].r=upper_bound(o+1,o+m+1,q[i].r)-o-1;\n  }\n  for(RG int i=1;i<=m;i++){\n    for(RG int j=o[i];j<o[i+1];j++)s[i][a[j]]++;\n    for(RG int j=1000;j;j--)s[i][j]+=s[i][j+1];\n  }\n  for(RG int i=1;i<=m;i++)\n    for(RG int j=1;j<=Q;j++)\n      if(q[j].l<=i&&i<=q[j].r){\n\tif(!q[j].opt)tag[i]+=q[j].v;\n\telse{\n\t  if(q[j].v-tag[i]<=0)ans[q[j].id]+=o[i+1]-o[i];\n\t  else if(q[j].v-tag[i]<=1000)ans[q[j].id]+=s[i][q[j].v-tag[i]];\n\t}\n      }\n  for(RG int i=1;i<=k;i++)printf(\"%d\\n\",ans[i]);\n  return 0;\n}\n\n```",
        "postTime": 1537945001,
        "uid": 47641,
        "name": "fdfdf",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5: [P2801 \u6559\u4e3b\u7684\u9b54\u6cd5](https://www.luogu.com.cn/problem/P2801)\n\n### \u9898\u76ee\u5927\u610f\n\n\u4e00\u4e2a\u5e8f\u5217 $n$ \u6709\u533a\u95f4\u52a0\u548c\u53ca\u67e5\u8be2\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u5143\u7d20\u5927\u4e8e $c$\n\n### solution\n\n\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5757\u8fdb\u884c\u64cd\u4f5c,\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u6392\u5e8f\n\n\u4fee\u6539\u64cd\u4f5c:\u5bf9\u4e8e\u6574\u5757\u6211\u4eec\u8bb0\u5f55\u4e00\u4e0b\u52a0\u7684\u503c\u5373\u53ef,\u987a\u5e8f\u6ca1\u6709\u6539\u53d8,\u7136\u540e\u5bf9\u4e8e\u4e0d\u8db3\u6574\u5757,\u6211\u4eec\u76f4\u63a5\u52a0\u548c\u7136\u540e\u6392\u5e8f\n\n\u67e5\u8be2\u64cd\u4f5c:\u5bf9\u4e8e\u6574\u5757\u6211\u4eec lower_bound \u67e5\u627e\u5373\u53ef, \u7528\u5757\u957f\u51cf\u53bb\u67e5\u627e\u7684\u4f4d\u7f6e\u5373\u53ef, \u7136\u540e\u5bf9\u4e8e\u4e0d\u8db3\u6574\u5757, \u6211\u4eec\u76f4\u63a5\u679a\u4e3e\u67e5\u627e\n\n### Code\n\n```cpp\n/**\n*    Author: Alieme\n*    Data: 2020.9.8\n*    Problem: Lougu P2801\n*    Time: O()\n*/\n#include <cstdio>\n#include <iostream>\n#include <string>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n\n#define int long long\n#define rr register\n\n#define inf 1e9\n#define MAXN 1000010\n\nusing namespace std;\n\ninline int read() {\n\tint s = 0, f = 0;\n\tchar ch = getchar();\n\twhile (!isdigit(ch)) f |= ch == '-', ch = getchar();\n\twhile (isdigit(ch)) s = s * 10 + (ch ^ 48), ch = getchar();\n\treturn f ? -s : s;\n}\n\nvoid print(int x) {\n\tif (x < 0) putchar('-'), x = -x;\n\tif (x > 9) print(x / 10);\n\tputchar(x % 10 + 48);\n}\n\nint n, len, m;\n\nint a[MAXN], b[MAXN], id[MAXN], v[MAXN];\n\ninline void update(int x) {\n\tint l = (x - 1) * len + 1, r = min(x * len, n);\n\tfor (rr int i = l; i <= r; i++) b[i] = a[i];\n\tsort(b + l, b + r + 1);\n}\n\ninline void add(int l, int r, int x) {\n\tint start = id[l], end = id[r];\n\tif (start == end) {\n\t\tfor (rr int i = l; i <= r; i++) a[i] += x;\n\t\tupdate(id[l]);\n\t\treturn ;\n\t}\n\tfor (rr int i = l; id[i] == start; i++) a[i] += x; update(start);\n\tfor (rr int i = start + 1; i < end; i++) v[i] += x;\n\tfor (rr int i = r; id[i] == end; i--) a[i] += x; update(end);\n}\n\ninline int fin(int pid, int x) {\n\tint l = (pid - 1) * len + 1, r = min(pid * len, n);\n\treturn lower_bound(b + l, b + r + 1, x - v[pid]) - (b + l);\n}\n\ninline int query(int l, int r, int x) {\n\tint ans = 0, start = id[l], end = id[r];\n\tif (start == end) {\n\t\tfor (rr int i = l; i <= r; i++) if (a[i] + v[start] >= x) ans++;\n\t\treturn ans;\n\t}\n\tfor (rr int i = l; id[i] == start; i++) if (a[i] + v[id[i]] >= x) ans++;\n\tfor (rr int i = start + 1; i < end; i++) ans += len - fin(i, x);\n\tfor (rr int i = r; id[i] == end; i--) if (a[i] + v[id[i]] >= x) ans++;\n\treturn ans;\n}\n\nsigned main() {\n\tn = read();\n\tm = read();\n\tlen = sqrt(n);\n\tfor (rr int i = 1; i <= n; i++) a[i] = read(), id[i] = (i - 1) / len + 1;\n\tfor (rr int i = len; i <= n; i += len) update(id[i]);\n\tfor (rr int i = 1; i <= m; i++) {\n\t\tchar opt;\n\t\tcin >> opt;\n\t\tint l = read(), r = read(), c = read();\n\t\tif (opt == 'M') add(l, r, c);\n\t\tif (opt == 'A') cout << query(l, r, c) << \"\\n\";\n\t}\n}\n\n```",
        "postTime": 1599696888,
        "uid": 187253,
        "name": "Aliemo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0a\u9762\u8bf4\u8fd9\u9898\u7ebf\u6bb5\u6811\u505a\u4e0d\u4e86\u554a\n\n\u770b\u4e86\u8fd9\u9898\u4e00\u773c\u7ebf\u6bb5\u6811\uff0c\u6b63\u597d\u8fd8\u662fqbxt\u4e0d\u786e\u5b9a\u80fd\u4e0d\u80fd\u7528\u7ebf\u6bb5\u6811+lazy\u505a\u7684\u90a3\u79cd\u95ee\u9898\uff0c\u7136\u540e\u505a\u4e86\u505a\uff0c\u7ebf\u6bb5\u6811\u786e\u5b9e\u53ef\u505a\u554a\n\n\u603b\u7684\u601d\u8def\u5c31\u662f\uff1a\n\n\u7ef4\u62a4\u533a\u95f4min\n\n\u4fee\u6539\u5c31\u662f\u533a\u95f4\u4fee\u6539+lazy\u6807\u8bb0\uff08\u4e0d\u8981\u5fd8\u8bb0\u56de\u63a8\uff09\uff0c\u8be2\u95ee\u7684\u65f6\u5019\u5982\u679c\u533a\u95f4\u88ab\u8be2\u95ee\u533a\u95f4\u5305\u542b\u5e76\u4e14\u6700\u5c0f\u503c\u5927\u4e8e\u7b49\u4e8ec\uff0c\u90a3\u4e48\u8fd9\u6bb5\u533a\u95f4\u91cc\u7684\u4eba\u5168\u662f\u8eab\u9ad8\u7b26\u5408\u8981\u6c42\u7684\n\n\u6211\u6c38\u8fdc\u559c\u6b22\u7ebf\u6bb5\u6811\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#define rep(i,l,r) for(int i=l;i<=r;++i)\n#define per(i,l,r) for(int i=l;i>=r;--i)\n#define mid ((l+r)>>1)\n#define ls (x<<1)\n#define rs ((x<<1)|1)\nusing namespace std;\ninline int read()\n{\n    char c;\n    bool t=0;\n    int a=0;\n    while((c=getchar())==' '||c=='\\n'||c=='\\r');\n    if(c=='-')\n    {\n        t=1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9')\n    {\n        a*=10;\n        a+=(c-'0');\n        c=getchar();\n    }\n    return a*(t?-1:1);\n}\nint n,q,minn[4000010],lazy[4000010],ans;\nvoid build(int l,int r,int x)\n{\n    if(l==r)\n     minn[x]=read();\n    else\n    {\n        build(l,mid,ls);\n        build(mid+1,r,rs);\n        minn[x]=min(minn[ls],minn[rs]);\n    }\n}\nvoid down(int x)\n{\n    minn[ls]+=lazy[x];\n    lazy[ls]+=lazy[x];\n    minn[rs]+=lazy[x];\n    lazy[rs]+=lazy[x];\n    lazy[x]=0;\n}\nvoid ask(int l,int r,int x,int ll,int rr,int k)\n{\n    if(ll<=l&&r<=rr&&minn[x]>=k)\n    {\n        ans+=r-l+1;\n        return;\n    }\n    if(l==r)\n     return;\n    if(lazy[x])\n     down(x);\n    if(ll<=mid)\n     ask(l,mid,ls,ll,rr,k);\n    if(mid<rr)\n     ask(mid+1,r,rs,ll,rr,k);\n}\nvoid modify(int l,int r,int x,int ll,int rr,int k)\n{\n    if(ll<=l&&r<=rr)\n    {\n        minn[x]+=k;\n        lazy[x]+=k;\n        return;\n    }\n    if(lazy[x])\n     down(x);\n    if(ll<=mid)\n     modify(l,mid,ls,ll,rr,k);\n    if(mid<rr)\n     modify(mid+1,r,rs,ll,rr,k);\n    minn[x]=min(minn[ls],minn[rs]);\n}\nint main()\n{\n    char c;\n    int tx,ty,tz;\n    n=read();q=read();\n    build(1,n,1);\n    rep(i,1,q)\n    {\n        while((c=getchar())==' '||c=='\\n'||c=='\\r');\n        tx=read();ty=read();tz=read();\n        if(c=='M')\n        {\n            modify(1,n,1,tx,ty,tz);\n        }\n        else if(c=='A')\n        {\n            ans=0;\n            ask(1,n,1,tx,ty,tz);\n            printf(\"%d\\n\",ans);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1539184747,
        "uid": 36194,
        "name": "EightSixSun",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u601d\u8def\u5c31\u662f\u5206\u5757\u561b\uff1b\n\n\u7b2c\u4e00\u6b21\u5206\u5757\u9898\u554a\uff0c\u90a3\u8bb2\u7684\u7ec6\u4e00\u70b9\u5427\uff1b\n\n\u9996\u5148\u5806\u8fd9\u4e9b\u6570\u5206\u5757\uff1b\n\n\u8fd9\u91cc\u6211\u7684\u957f\u5ea6\u662fsqrt(n);\n\n\u5206\u5757\u7684\u957f\u5ea6\u6839\u636e\u9898\u76ee\u800c\u5b9a\uff1b\n\n\u5f80\u5f80\u63a8\u51fa\u4e00\u4e2a\u516c\u5f0f\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u516c\u5f0f\u6c42\u51fa\u6700\u4f18\u7684\u957f\u5ea6\uff1b\n\n\u8fd9\u4e2a\u5c31\u662f\u6570\u5b66\u8303\u7574\uff1b\n\n\u6211\u7684strcut\n\nl\uff0cr\u662f\u533a\u95f4\u8303\u56f4\uff0clen\u662f\u957f\u5ea6\uff08\u5728\u8fd9\u4e00\u9898\u91cc\u65e0\u7528\uff09\uff0ctag\u662f\u52a0\u6cd5\u6807\u8bb0\n\n```cpp\nstruct kuai{\n    int l,r,len,tag;\n}c[1010];\n```\n\u5206\u5757\u7684\u601d\u60f3\u62c9\uff0c\u5c31\u662f\u533a\u95f4\u5185\u5305\u542b\u6574\u4e2a\u5757\u7684\u5c31\u6574\u4e2a\u5757\u5730\u64cd\u4f5c\uff0c\n\n\u4e0d\u662f\u6574\u4e2a\u5feb\u7684\u6700\u591a\u5c31\u4e24\u4e2a\u90e8\u5206\uff0c\u64cd\u4f5c\u533a\u95f4\u7684\u5de6\u53f3\u4e24\u7aef\uff0c\u76f4\u63a5\u66b4\u529b\uff1b\n\n\n\u6211\u7684\u4e3b\u7a0b\u5e8f\n\na[]\u662f\u539f\u59cb\u6570\u5217\uff0c\u4e0d\u6539\u53d8\uff1b\n\nb[]\u662f\u5206\u5757\u5e8f\u5217\uff0c\u6240\u6709\u64cd\u4f5c\u90fd\u5728b[]\u8fdb\u884c\uff1b\n\n\n```cpp\nint a[1000001],b[1000001];\nint ll,n,m,x,y,z,ans;\nchar cc;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),b[i]=a[i];\n    fenkuai();\n    while(m--){\n        cin>>cc;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        if(cc=='A')outit(x,y,z);else change(x,y,z);\n    }\n}\n```\n\u8fd9\u79cd\u590d\u6742\u7684\u9898\u76ee\uff0c\u4e3b\u7a0b\u5e8f\u8f7b\u5de7\u4e00\u70b9\uff0c\u800c\u4e14\u4e00\u5b9a\u8981\u5199\u597d\u4e00\u4e2a\u6a21\u5757\u5c31\u8c03\u8bd5\u4e00\u904d\uff0c\u5343\u4e07\u8981\u5c0f\u5fc3\uff0c\u4e0d\u7136\u5168\u6253\u597d\u4e86\u8c03\u8bd5\u5f97\u8981\u6b7b\uff1b\n\n\n\u6211\u7684\u5206\u5757\u51fd\u6570\n\nll\u5c31\u662f\u5feb\u7684\u6570\u91cf\n\n```cpp\nvoid fenkuai(){\n    int k=sqrt(n);\n    int l=1;\n    while(l<=n){\n        c[++ll].l=l;\n        c[ll].r=min(n,l+k-1);\n        c[ll].len=c[ll].r-c[ll].l+1;\n        sort(b+c[ll].l,b+c[ll].r+1);\n        l+=k;    \n    }\n}\n```\n\u6211\u4eec\u5c06\u6bcf\u4e2a\u5757\u90fd\u6392\u5e8f\uff1b\u8fd9\u6837\u5c31\u65b9\u4fbf\u4e8c\u5206\u627e\u7b54\u6848\uff1b\n\nfindans\u7684\u51fd\u6570\n\n\u5c31\u662f\u628ax,y\u5206\u4e3a\u5de6\u4e2d\u53f3\u4e09\u4e2a\u533a\u95f4\n\n```cpp\nvoid outit(int x,int y,int z){\n    int ans=0;\n    for(int i=1;i<=ll;i++)\n        if(x<=c[i].l&&c[i].r<=y)ans+=er(i,z);else\n        if(c[i].l<=x&&x<=c[i].r)ans+=BL(i,x,c[i].r,z);else\n        if(c[i].l<=y&&y<=c[i].r)ans+=BL(i,c[i].l,y,z);\n    printf(\"%d\\n\",ans);\n}\n```\n\u4e8c\u5206\n\n```cpp\nint er(int num,int z){\n    int l=c[num].l,r=c[num].r,ans=1e9;\n    while(r>=l){\n        int mid=(l+r)/2;\n        if(b[mid]+c[num].tag>=z){//\u8981\u52a0\u4e0a c[num].tag\n            ans=min(ans,mid);r=mid-1;\n        }else l=mid+1;\n    }\n    if(ans==1e9)return 0;//\u8fd9\u4e2a\u7279\u5224\u5bb9\u6613\u5fd8 \n    return c[num].r-ans+1;\n}\n```\n\u66b4\u529b\n\u66b4\u529b\u90e8\u5206\u8981\u5728a\u6570\u7ec4\u91cc\u627e\n\n```cpp\nint BL(int num,int x,int y,int z){\n    int ans=0;\n    for(int i=x;i<=y;i++)if(a[i]+c[num].tag>=z)ans++;\n    return ans;\n}\n```\n\u7136\u540e\u5c31\u662f\u6539\u53d8\u90e8\u5206\n\n\n```cpp\nvoid change(int x,int y,int z){\n    for(int i=1;i<=ll;i++)\n        if(x<=c[i].l&&c[i].r<=y)c[i].tag+=z;else\n        if(c[i].l<=x&&x<=c[i].r)BLchange(i,x,c[i].r,z);else\n        if(c[i].l<=y&&y<=c[i].r)BLchange(i,c[i].l,y,z);\n}\n```\n\n```cpp\nvoid BLchange(int num,int x,int y,int z){\n    for(int i=c[num].l;i<=c[num].r;i++){\n        b[i]=a[i]+c[num].tag;\n        if(x<=i&&i<=y)b[i]+=z;\n    }\n    sort(b+c[num].l,b+c[num].r+1);\n}\n```\n\u603b\u5f97\u6765\u8bf4\uff0c\u590d\u6742\u7684\u9898\u76ee\u8981\u5c0f\u5fc3\uff0c\u601d\u8def\u660e\u786e\uff0c\u6253\u597d\u4e00\u4e2a\u6a21\u5757\u8c03\u8bd5\u4e00\u4e2a\uff1b\n\n\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#define Ll unsigned long long\nusing namespace std;\nstruct kuai{\n    int l,r,len,tag;\n}c[1010];\nint a[1000001],b[1000001];\nint ll,n,m,x,y,z,ans;\nchar cc;\nvoid fenkuai(){\n    int k=sqrt(n);\n    int l=1;\n    while(l<=n){\n        c[++ll].l=l;\n        c[ll].r=min(n,l+k-1);\n        c[ll].len=c[ll].r-c[ll].l+1;\n        sort(b+c[ll].l,b+c[ll].r+1);\n        l+=k;    \n    }\n}\nint er(int num,int z){\n    int l=c[num].l,r=c[num].r,ans=1e9;\n    while(r>=l){\n        int mid=(l+r)/2;\n        if(b[mid]+c[num].tag>=z){//\u8981\u52a0\u4e0a c[num].tag\n            ans=min(ans,mid);r=mid-1;\n        }else l=mid+1;\n    }\n    if(ans==1e9)return 0;//\u8fd9\u4e2a\u7279\u5224\u5bb9\u6613\u5fd8 \n    return c[num].r-ans+1;\n}\nint BL(int num,int x,int y,int z){\n    int ans=0;\n    for(int i=x;i<=y;i++)if(a[i]+c[num].tag>=z)ans++;\n    return ans;\n}\nvoid outit(int x,int y,int z){\n    int ans=0;\n    for(int i=1;i<=ll;i++)\n        if(x<=c[i].l&&c[i].r<=y)ans+=er(i,z);else\n        if(c[i].l<=x&&x<=c[i].r)ans+=BL(i,x,c[i].r,z);else\n        if(c[i].l<=y&&y<=c[i].r)ans+=BL(i,c[i].l,y,z);\n    printf(\"%d\\n\",ans);\n}\nvoid BLchange(int num,int x,int y,int z){\n    for(int i=c[num].l;i<=c[num].r;i++){\n        b[i]=a[i]+c[num].tag;\n        if(x<=i&&i<=y)b[i]+=z;\n    }\n    sort(b+c[num].l,b+c[num].r+1);\n}\nvoid change(int x,int y,int z){\n    for(int i=1;i<=ll;i++)\n        if(x<=c[i].l&&c[i].r<=y)c[i].tag+=z;else\n        if(c[i].l<=x&&x<=c[i].r)BLchange(i,x,c[i].r,z);else\n        if(c[i].l<=y&&y<=c[i].r)BLchange(i,c[i].l,y,z);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),b[i]=a[i];\n    fenkuai();\n    while(m--){\n        cin>>cc;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        if(cc=='A')outit(x,y,z);else change(x,y,z);\n    }\n}",
        "postTime": 1487650191,
        "uid": 7442,
        "name": "\u5de8\u578b\u65b9\u5757",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "@xMinh:\u5e95\u4e0b\u4ee8\u9898\u89e3\u6211hack\u6389\u4fe9\u4e86\n\nqwq\u592a\u5f3a\u8fa3!\n\n\u8bf4\u6b63\u9898\n\n[\u6570\u5217\u5206\u5757\u5165\u95e8by hzwer](http://hzwer.com/8053.html)[](http://hzwer.com/8053.html)\u4e00\u4e2a\u5f88\u597d\u7684blog\n\n\u4e00\u5f00\u59cb\u770b\u89c1Q\u5f88\u5c0f\u4ee5\u4e3a\u662f\u5dee\u5206\n\n\u4e00\u770b\u9898\u53d1\u73b0\u4e0d\u5bf9\u52b2\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u62ff\u5206\u5757\u66b4\u529b\u4e86233\n\n@\u5de8\u578b\u65b9\u5757 \u6709\u4eba\u8981\u628a\u4f60\u5206\u4e86\n\n\u9996\u5148\uff0c\u5206\u5757\u662fsm\u73a9\u610f\uff1f\n\n**\u6839\u53f7\u5e73\u8861**(by lxl)\uff1a\n\n\u6709x\u6b21\u64cd\u4f5c\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u4e3aO(a)\n\n\u6709y=kx\u6b21\u67e5\u8be2\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u4e3aO(b)\n\n\u5728\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u7684\u9898\u91cc\u9762\n\n\u53ef\u4ee5\u901a\u8fc7\u63d0\u9ad8\u5176\u4e2d\u4e00\u8fb9\u7684\u590d\u6742\u5ea6\uff0c\u964d\u4f4e\u53e6\u4e00\u8fb9\u7684\u590d\u6742\u5ea6\u6765\u8fbe\u5230\u66f4\u597d\u7684\u6548\u679c\n\n\u8fd9\u65f6\u6ee1\u8db3xa=kxb\n\n\u4e8e\u662f\u5206\u5757\u4e00\u822c\u90fd\u662f\u5e26sqrt\u7684\n\n\u675c\u6559\u7b5b\u4f1a\u51fa\u6765O(n^(2/3))\u7684\u795e\u5947\u590d\u6742\u5ea6\uff0c\u57fa\u4e8e**\u6570\u8bba\u5206\u5757**\n\n\u4f46\u8fd9\u91cc\u4e0d\u8ba8\u8bba\u6570\u8bba\u5206\u5757\n\n\u5e26\u4fee\u6539\u533a\u95f4\u548c\u95ee\u9898\u7684\u90e8\u5206\u505a\u6cd5(\u8fd8\u662fby lxl)\n\n\u5982\u679c\u91c7\u7528x\u53c9\u6811\uff0c\u5373\u6709logx(n)\u5c42\n\n\u5982\u679c\u91c7\u7528sqrt(n)\u53c9\u6811\uff0c\u5373\u67092\u5c42\n\n\u5982\u679c\u91c7\u75282\u53c9\u6811\uff0c\u5373\u6709logn\u5c42\n\n\u7b2c\u4e00\u4e2a\u662f\u5206\u5757\uff0c\u7b2c\u4e8c\u4e2a\u662f\u7ebf\u6bb5\u6811\n\n\u8fd9\u4e2a\u5373\u662f\u4e00\u4e2a\u6839\u53f7\u5e73\u8861\u7684\u4f8b\u5b50\n\n\u4f46\u8fd9\u4e2a\u9898\u4e0d\u80fd\u7528\u5206\u6cbb\u7ed3\u6784\u5b8c\u6210(\u7ee7\u7eedby lxl)\n\n\u5982\u679c\u662f\u5355\u70b9\u4fee\u6539\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u5957\u6811\u5b9e\u73b0\n\n\u4f46\u662f\u533a\u95f4\u4fee\u6539\u540e\u6811\u5957\u6811\u65e0\u6cd5\u5feb\u901f\u5408\u5e76\u4fe1\u606f\n\n\u6bd4\u5982\u6211\u4eec\u7ef4\u62a4\u4e86cur\u7684\u4e00\u4e2a\u540d\u6b21\u6570\u636e\u7ed3\u6784\n\ncur\u7684\u5de6\u513f\u5b50\u6ca1\u6709\u53d1\u751f\u53d8\u5316\n\ncur\u7684\u53f3\u513f\u5b50\u88ab\u6574\u4f53\u52a0\u4e86\n\n\u8fd9\u6837\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u8fd9\u4e24\u4e2a\u513f\u5b50\u7684\u540d\u6b21\u6570\u636e\u7ed3\u6784\u5feb\u901f\u7ef4\u62a4\u51facur\u7684\u540d\u6b21\u6570\u636e\u7ed3\u6784\n\n\u4e5f\u65e0\u6cd5\u76f4\u63a5\u5728cur\u7684\u540d\u6b21\u6570\u636e\u7ed3\u6784\u4e0a\u64cd\u4f5c\n\n\u6240\u4ee5\u5206\u6cbb\u7ed3\u6784\u65e0\u6cd5\u5728\u4f4e\u590d\u6742\u5ea6\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u90a3\u4e48\u60f3\u5230\u5206\u5757\n\n### \u5206\u5757\u57fa\u7840(lxl)\n\n\u8981\u5b9e\u73b0\uff1a\n\n1.\u533a\u95f4\u52a0\n\n2.\u533a\u95f4\u548c\n\n\u6734\u7d20\u6765\u505a\uff0c\u53ef\u4ee5\u6709O(1)\u4fee\u6539O(n)\u67e5\u8be2\u4ee5\u53caO(n)\u4fee\u6539O(1)\u67e5\u8be2\u7684\u66b4\u529b\u505a\u6cd5\n\n\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u5957\u7528\u6839\u53f7\u5e73\u8861\u8fbe\u5230O( sqrt(n) )\u4fee\u6539O( sqrt(n) )\u67e5\u8be2\n\n\u6211\u4eec\u53ef\u4ee5\u628asqrt(n)\u4e2a\u5143\u7d20\u653e\u4e00\u5757\u91cc\u9762\u7ef4\u62a4\n\n\u6211\u4eec\u628a\u6bcf\u6b21\u64cd\u4f5c\u5b8c\u6574\u8986\u76d6\u7684\u5757\u5b9a\u4e49\u4e3a\u201c\u6574\u5757\u201d\n\n\u628a\u6bcf\u6b21\u64cd\u4f5c\u6ca1\u6709\u5b8c\u6574\u8986\u76d6\u7684\u5757\u5b9a\u4e49\u4e3a\u201c\u96f6\u6563\u5757\u201d(\u533a\u95f4\u7aef\u70b9)\n\n\u6bcf\u6b21\u64cd\u4f5c\u6700\u591a\u7ecf\u8fc7O( sqrt(n) )\u4e2a\u6574\u5757\uff0c\u4ee5\u53caO(1)\u4e2a\u96f6\u6563\u5757\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5O(1)\u7ef4\u62a4\u6574\u5757\u4fe1\u606f\uff0cO( sqrt(n) )\u67e5\u8be2\u96f6\u6563\u5757\u4fe1\u606f\n\n\u8fd9\u6837\u5c31\u8fbe\u5230\u4e86O( msqrt(n) )\u7684\u590d\u6742\u5ea6\n\n### \u5206\u5757\u672c\u8d28\n\n\u4e00\u4e2a\u5ea6\u6570\u4e3asqrt(n)\uff0c\u53ea\u6709\u4e09\u5c42\u7684\u6811\n\n\u6bcf\u6b21\u4fee\u6539\u53ea\u7528\u66f4\u65b0:sqrt(n)\u4e2asize\u4e3a1\u7684\u8282\u70b9\u4ee5\u53ca2\u4e2asize\u4e3asqrt(n)\u7684\u8282\u70b9\n\n\u6ce8\u610f\u5230\u6211\u4eec\u4e0d\u7528\u7ef4\u62a4\u90a3\u4e2asize\u4e3an\u7684\u6839\u8282\u70b9\u7684\u4fe1\u606f\n\n\u6240\u4ee5\u5982\u679c\u5728\u5206\u6cbb\u7ed3\u6784\u4e0a\u5f88\u96be\u5feb\u901f\u5408\u5e76\u67d0\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u5206\u5757\u6765\u505a\n\n\u597d\u4e86\u6284lxl\u7684\u8bfe\u4ef6\u6284\u5b8c\u4e86233\n\n\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u62bd\u8c61\u6210\uff1a\n\n\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\n\n\u652f\u6301\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u67e5\u8be2>=x\u7684\u6570\u7684\u4e2a\u6570\n\n\u90a3\u4e48\u5206\u5757\u600e\u4e48\u505a\uff1f\n\n\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u5bf9\u6bcf\u4e2a\u5757\u6392\u5e8f\n\n\u4fee\u6539\u7684\u65f6\u5019\uff0c\u6574\u5757\u6253\u6807\u8bb0\uff0c\u96f6\u6563\u5757\u91cd\u6784\uff0c\u5c31\u662f\u518d\u6392\u5e8f\u4e00\u904d\n\n\u67e5\u8be2\u5462\uff1f\n\n\u96f6\u6563\u5757\u67e5\u8be2\u53ef\u4ee5\u66b4\u529b\uff0c\u6574\u5757\u67e5\u8be2\u53ef\u4ee5\u4e8c\u5206\n\n\u5982\u4f55\u4e8c\u5206\uff1f\n\n\u5047\u8bbe\u533a\u95f4\u7684\u6807\u8bb0\u4e3ay\uff0c\u8bfb\u5165\u7684\u662fx\n\n\u90a3\u4e48\u53ea\u8981\u628ax-y\u4f5c\u4e3a\u4e8c\u5206\u7684\u503c\u5373\u53ef\n\n\u7528stl\u7684lower_bound\u5f88\u5feb\n\n\u63a5\u4e0b\u6765\u662f\u590d\u6742\u5ea6\n\n\u8bbe\u6709x\u4e2a\u5757\n\n\u4fee\u6539:\u6574\u5757O(1),\u96f6\u6563\u5757O(n/x)\n\n\u8fd9\u91cc\u6392\u5e8f\u7684\u65b9\u6cd5\u8981\u6ce8\u610f\n\n\u539f\u5148\u8fd9\u4e2a\u5757\u662f\u6709\u5e8f\u7684\n\n\u533a\u95f4\u52a0\u4e4b\u540e\uff0c\u8fd9\u4e2a\u533a\u95f4\u4ecd\u7136\u4fdd\u6301\u6709\u5e8f\n\n\u4e5f\u5c31\u662f\u6709\u4e24\u4e2a\u6709\u5e8f\u7684\u533a\u95f4\u8981\u5408\u5e76\n\n\u5f52\u5e76\u5373\u53ef\u5b8c\u6210O(n/x)\u590d\u6742\u5ea6\n\n\u67e5\u8be2:\u96f6\u6563\u5757O(n/x),\u6574\u5757O(log(n/x)*x)\n\n\u4e8e\u662f\u6839\u53f7\u5e73\u8861\u6210\u4e3aO(msqrt(nlogn))~~(\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u7b97\u7684)~~\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint a[1100000],m,bl[1100000],tag[2000],l,r,x,n,bol,a1[1100000],t[1100000],L[2000],R[2000],opt;\ninline void merge(int l1,int r1,int l2,int r2)\n{\n    register int i=l1,j=l2,k=l1;\n    while(i<=r1&&j<=r2)\n    {\n        if(a1[i]<a1[j])t[k++]=a1[i++];\n        else t[k++]=a1[j++];\n    }\n    while(i<=r1)t[k++]=a1[i++];\n    while(j<=r2)t[k++]=a1[j++];\n    for(register int i=l1;i<=r2;i++)\n        a1[i]=t[i];\n}\ninline void reset(int x,int c)\n{\n    int r=R[x];\n    for(register int i=L[x];i<=r;i++)\n        a1[i]=a[i];\n    merge(L[x],c,c+1,r);\n}\ninline void cg(int l,int r,int x)\n{\n    int minn=min(r,R[bl[l]]);\n    for(register int i=l;i<=minn;i++)\n        a[i]+=x;\n    reset(bl[l],l);\n    if(bl[l]!=bl[r])\n    {\n        for(register int i=L[bl[r]];i<=r;i++)\n            a[i]+=x;\n        reset(bl[r],r);\n    }\n    for(register int i=bl[l]+1;i<bl[r];i++)\n        tag[i]+=x;\n}\ninline int q(int l,int r,int x)\n{\n    int ans=0;\n    int minn=min(r,R[bl[l]]);\n    int xx=x-tag[bl[l]];\n    for(register int i=l;i<=minn;i++)\n        if(a[i]>=xx)\n            ans++;\n    if(bl[l]!=bl[r])\n    {\n        xx=x-tag[bl[r]];\n        for(register int i=L[bl[r]];i<=r;i++)\n            if(a[i]>=xx)\n                ans++;\n    }\n    for(register int i=bl[l]+1;i<bl[r];i++)\n    {\n        int xx=x-tag[i];\n        ans+=R[i]-(lower_bound(a1+L[i],a1+R[i]+1,xx)-a1)+1;\n    }\n    return ans;\n}\ninline int getin()\n{\n    register int x=0;register char ch=getchar();\n    while((ch<'0'||ch>'9'))ch=getchar();\n    while(ch>='0'&&ch<='9')x=x*10+ch-48,ch=getchar();\n    return x;\n}\ninline char getin1()\n{\n    register char ch=getchar();\n    while(ch<'A'||ch>'M')ch=getchar();\n    return ch;\n}\nint wt[100];\ninline void putout(int x)\n{\n    if(!x)\n    {\n        putchar(48);\n        return;\n    }\n    register int l=0;\n    while(x)wt[++l]=x%10,x/=10;\n    while(l)putchar(wt[l--]+48);\n}\nint main()\n{\n    n=getin(),m=getin();\n    bol=sqrt(n);\n    for(register int i=1;i<=n;i++)a1[i]=a[i]=getin(),bl[i]=(i-1)/bol+1;\n    for(register int i=1;i<=bl[n];i++)\n    {\n    \tL[i]=(i-1)*bol+1;R[i]=i*bol;\n        sort(a1+L[i],a1+R[i]+1);\n    }\n    R[bl[n]]=n;\n    for(register int i=1;i<=m;i++)\n    {\n        opt=getin1(),l=getin(),r=getin(),x=getin();\n        if(opt=='M')cg(l,r,x);\n        else putout(q(l,r,x)),putchar(10);\n    }\n}\n```\nPS:\u867d\u7136\u63a8\u51fa\u6765\u5757\u5927\u5c0f\u5e94\u8be5\u662fsqrt(nlogn),\u4f46sqrt(n)\u8dd1\u5f97\u6700\u5feb...\n\n\u5206\u5757\u8fd9\u4e1c\u897f\u5f88\u7384\u5b66...\u6709\u65f6\u5019+-*/\u4e00\u4e9b\u5e38\u6570\u53ef\u80fd\u5c31\u80fd\u8dd1\u5feb\u70b9...\n\n\u76ee\u524drank5\n\nrqy\u592a\u5f3a\u4e86...\u4e0d\u5f00O2\u8dd1\u4e86240ms\u5f00O2 188ms...\u6700\u9876\u4e0a\u4e24\u4e2a\u662frqy\u7684\u4ee3\u7801%%%",
        "postTime": 1519528594,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u8be2\u95ee\u6b21\u6570\u5c11\uff0c\u53ef\u4ee5\u7528\u5206\u5757\u89e3\u51b3\u3002\n\n\n\u5c06\u6240\u6709\u6570\u5206\u6210\u221an\u5757\uff0c\u5bf9\u6bcf\u4e00\u5757\u8fdb\u884c\u6392\u5e8f\u3002\n\n\n\u7528a\u6570\u7ec4\u5b58\u539f\u6765\u7684\u6570\u5217\uff0cb\u6570\u7ec4\u5b58\u6392\u5b8c\u5e8f\u540e\u7684\u6570\u5217\u3002\n\n\n\u67e5\u8be2\u65f6\uff0c\u5bf9\u5de6\u53f3\u4e24\u4e2a\u5757\u4e2d\u7684\u6570\u636e\u66b4\u529b\u67e5\u8be2\uff0c\u4e2d\u95f4\u7684\u7531\u4e8e\u6574\u5757\u8bbf\u95ee\u5e76\u6392\u5b8c\u5e8f\uff0c\u76f4\u63a5\u4e8c\u5206\u67e5\u627e\u5373\u53ef\u3002\n\n\n\u4fee\u6539\u6570\u636e\u65f6\uff0c\u5bf9\u5de6\u53f3\u4e24\u4e2a\u5757\u4e2d\u7684\u6570\u636e\u66b4\u529b\u4fee\u6539\uff0c\u5e76\u4e14\u66f4\u65b0b\u6570\u7ec4\uff08\u91cd\u65b0\u6392\u5e8f\uff09\uff0c\u5bf9\u4e2d\u95f4\u7684\uff0c\u7531\u4e8e\u76f8\u5bf9\u5927\u5c0f\u4e0d\u53d8\uff0c\u76f4\u63a5\u6253\u4e0a\u6807\u8bb0\u5373\u53ef\u3002\n\n\n\u4fee\u6539\u65f6\uff0c\u6700\u591a\u5bf9\u4e24\u4e2a\u5757\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(\u221anlog2\u221an)\u3002\n\n\n\u67e5\u8be2\u65f6\uff0c\u6700\u591a\u5bf9\u6240\u6709\u5757\u90fd\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(\u221anlog2\u221an)\u3002\n\n\n\u6545\u603b\u65f6\u95f4\u590d\u6742\u5ea6O(q\u221anlog2\u221an)\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<cctype>\nusing namespace std;\nint a[1000005],b[1000005];\nint n,q,size,l[1005],r[1005],blocks,add[1005],inbk[1000005];\nchar s[4];\ninline int readint(){\n    char c=getchar();\n    for(;!isdigit(c);c=getchar());\n    int d=0;\n    for(;isdigit(c);c=getchar())\n    d=(d<<3)+(d<<1)+(c^'0');\n    return d;\n}\nvoid chan(int blk){\n    for(int i=l[blk];i<=r[blk];++i)\n    b[i]=a[i];\n    sort(b+l[blk],b+r[blk]+1);\n}\nint main(){\n    n=readint();q=readint();\n    size=(int)(sqrt(n)+0.00000001);\n    blocks=0;\n    l[1]=1;\n    for(int i=1;i<=n;++i){\n        a[i]=b[i]=readint();\n        inbk[i]=blocks+1;\n        if(i%size==0){\n            r[++blocks]=i;\n            l[blocks+1]=i+1;\n        }\n    }\n    if(n%size)\n    r[++blocks]=n;\n    for(int i=1;i<=blocks;++i)\n    sort(b+l[i],b+r[i]+1);\n    memset(add,0,sizeof add);\n    while(q--){\n        scanf(\"%s\",s);\n        if(s[0]=='M'){\n            int L=readint(),R=readint(),p=readint();\n            if(L>R)L^=R^=L^=R;\n            int lft=inbk[L],rgt=inbk[R];\n            if(lft==rgt){\n                for(int i=L;i<=R;++i)a[i]+=p;\n                chan(lft);\n            }else{\n                for(int i=lft+1;i<rgt;++i)add[i]+=p;\n                for(int i=L;i<=r[lft];++i)a[i]+=p;\n                for(int i=l[rgt];i<=R;++i)a[i]+=p;\n                chan(lft);\n                chan(rgt);\n            }\n        }else{\n            int L=readint(),R=readint(),p=readint(),ans=0;\n            int lft=inbk[L],rgt=inbk[R];\n            if(lft==rgt){\n                for(int i=L;i<=R;++i)\n                if(a[i]+add[lft]>=p)++ans;\n            }else{\n                for(int i=lft+1;i<rgt;++i)\n                ans+=r[i]-(lower_bound(b+l[i],b+r[i]+1,p-add[i])-b-1);\n                for(int i=L;i<=r[lft];++i)\n                if(a[i]+add[lft]>=p)++ans;\n                for(int i=l[rgt];i<=R;++i)\n                if(a[i]+add[rgt]>=p)++ans;\n            }\n            printf(\"%d\\n\",ans);\n        }\n    }\n    return 0;\n}\n```\n[blog](http://www.cnblogs.com/Mrsrz/p/7742626.html)\n",
        "postTime": 1509079816,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u54b3\u54b3\uff0c\u672c\u6765\u8fd9\u4e2a\u9898\u662f\u4e0d\u60f3\u53d1\u9898\u89e3\u7684\n\n\u4f46\u4ee5\u524d\u6211\u5199\u7684\u5206\u5757\u7801\u98ce\u592a\u4e11\uff0c\u5c31\u91cd\u6253\u4e00\u4e0b\u8fd9\u9053\u677f\u5b50\u6539\u4e00\u6539\n\n\u4e3b\u8981\u662f\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u7684\u535a\u5ba2[\u4e00\u679a\u849f\u84bb](https://xminh.github.io/2018/02/25/luogu2801-%E6%95%99%E4%B8%BB%E7%9A%84%E9%AD%94%E6%B3%95.html)\n\n\u5206\u5757\u5165\u95e8\u9898\uff0c\u601d\u8def\u7b80\u5355\u3002\u533a\u95f4\u52a0+\u67e5\u8be2\u533a\u95f4\u5185\u5927\u4e8e\u7b49\u4e8ex\u7684\u6570\u7684\u4e2a\u6570\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u5c31\u662f\uff0c\u5c3d\u7ba1\u5206\u5757\u7684\u65f6\u5019\u8981\u8fdb\u884c\u5757\u5185\u6392\u5e8f\uff0c\u4f46\u662f\u6bcf\u6b21\u8fdb\u884c\u533a\u95f4\u64cd\u4f5c\u7684\u65f6\u5019\u6307\u7684\u8fd8\u662f\u539f\u6570\u7ec4\u7684\u533a\u95f4\u3002\u9700\u8981\u5f00\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u662f\u539f\u5e8f\u5217\uff0c\u4e00\u4e2a\u662f\u5206\u5757\u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u6392\u597d\u5e8f\u7684\u3002\n\n\u6574\u5757\u7684\u4fee\u6539\u5c31\u4e0d\u8bf4\u4e86\uff0c\u6253\u6807\u8bb0\u3002\u96f6\u6563\u5757\u7684\u4fee\u6539\u8981\u5148\u6539\u539f\u5e8f\u5217\uff0c\u4e4b\u540e\u590d\u5236\u5230\u5206\u5757\u6570\u7ec4\u91cc\uff0c\u518d\u8fdb\u884c\u91cd\u6784\uff1b\u6574\u5757\u7684\u67e5\u8be2\u662f\u7528\u5206\u5757\u6570\u7ec4\u6765\u4e8c\u5206\uff0c\u96f6\u6563\u76f4\u63a5\u66b4\u529b\u67e5\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u67e5\u7684\u65f6\u5019\u90fd\u8981\u52a0\u4e0a\u6807\u8bb0\u624d\u884c\u3002\n\n\u8fd8\u6709\u5c31\u662f\u6837\u4f8b\u4e2d\u7684\u7a7a\u884c\u95ee\u9898\u3002\u8fd9\u4e2a\u4e0d\u8981\u7528getchar\uff0c\u7528cin\u8f7b\u677e\u89e3\u51b3\uff0c\u4e0d\u7528\u8d39\u592a\u591a\u529f\u592b\u6765\u7279\u6b8a\u5904\u7406\u3002\u5982\u679c\u4f60\u6267\u610f\u8981\u4e3a\u4e86\u5feb\u800c\u5199\u4e2a\u51fd\u6570\u7528getchar\u6765\u8bfb\u7684\u8bdd\u6781\u6709\u53ef\u80fd\u4f1a\u53d1\u751f\u5f00\u4e86O2\u4e0d\u8fc7\u7684\u73b0\u8c61(\u522b\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684)\u3002\n\n\u5173\u4e8e\u5206\u5757\u6bd4\u8f83\u8be6\u7ec6\u7684\u89e3\u6790\u53ef\u4ee5\u5f80\u4e0b\u7ffbqwaszx\u5b66\u5f1f\u7684\u9898\u89e3\n\n\u4ee5\u53ca\u5e95\u4e0b\u7684\u9898\u89e3\u6211hack\u6389\u4e09\u4e2a\uff0c\u614e\u7528\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define maxn (1000000 + 10)\nusing namespace std;\nint a[maxn],b[maxn],bl[maxn],L[maxn],R[maxn],add[maxn];\nint n,m,block;\nint read(){\n\tchar c;int r=0,f=1;\n\tc=getchar();\n\twhile (c<'0' || c>'9'){\n\t\tif (c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile (c>='0' && c<='9'){\n\t\tr=r*10+(c^48);\n\t\tc=getchar();\n\t}\n\treturn r*f;\n}\nvoid build(){\n\tfor (int i=1;i<=n;i++) bl[i]=(i-1)/block+1;\n\tfor (int i=1;i<=n;i++) if (!L[bl[i]]) L[bl[i]]=i;\n\tfor (int i=n;i>=1;i--) if (!R[bl[i]]) R[bl[i]]=i;\n\tfor (int i=bl[1];i<=bl[n];i++) sort(b+L[i],b+R[i]+1);\n}\nvoid reset(int belong){\n\tfor (int i=L[belong];i<=R[belong];i++) b[i]=a[i];\n}\nvoid change(int l,int r,int x){\n\tif (bl[l]==bl[r]){\n\t\tfor (int i=l;i<=r;i++) a[i]+=x;\n\t\treset(bl[l]);\n\t\tsort(b+L[bl[l]],b+R[bl[l]]+1);\n\t}\n\telse{\n\t\tfor (int i=l;i<=R[bl[l]];i++) a[i]+=x;\n\t\treset(bl[l]);\n\t\tsort(b+L[bl[l]],b+R[bl[l]]+1);\n\t\tfor (int i=bl[l]+1;i<=bl[r]-1;i++) add[i]+=x;\n\t\tfor (int i=L[bl[r]];i<=r;i++) a[i]+=x;\n\t\treset(bl[r]);\n\t\tsort(b+L[bl[r]],b+R[bl[r]]+1);\n\t}\n}\nint lb(int x,int belong){\n\tint l=L[belong],r=R[belong];\n\tint ans=r+1;\n\twhile (l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif (b[mid]>=x){\n\t\t\tans=mid;\n\t\t\tr=mid-1;\n\t\t}\n\t\telse l=mid+1;\n\t}\n\treturn R[belong]-ans+1;\n}\nint query(int l,int r,int x){\n\tint ans=0;\n\tif (bl[l]==bl[r]) {\n\t\tfor (int i=l;i<=r;i++) if (a[i]>=x-add[bl[l]]) ans++;\n\t}\n\telse{\n\t\tfor (int i=l;i<=R[bl[l]];i++) if (a[i]>=x-add[bl[l]]) ans++;\n\t\tfor (int i=bl[l]+1;i<=bl[r]-1;i++) ans+=lb(x-add[i],i);\n\t\tfor (int i=L[bl[r]];i<=r;i++) if (a[i]>=x-add[bl[r]]) ans++;\n\t}\n\treturn ans;\n}\nint main(){\n\tn=read();m=read();\n\tfor (int i=1;i<=n;i++) a[i]=b[i]=read();\n\tblock=sqrt(n);\n\tbuild();\n\tfor (int i=1;i<=m;i++){\n\t\tchar opt;int l,r,x;\n\t\tcin>>opt;\n\t\tl=read();r=read();x=read();\n\t\tif (opt=='M') change(l,r,x);\n\t\tif (opt=='A') printf(\"%d\\n\",query(l,r,x));\n\t}\n}\n```\n\n\u6211\u662f\u771f\u5fc3\u60f3\u5410\u69fd\u8fd9\u9898\u3002\n\n\u7b2c\u4e00\u904d\u6253\u81ea\u5df1\u90a3\u4e2a\u9b3c\u755c\u505a\u6cd5\u7684\u65f6\u5019\u68c0\u67e5\u4e0d\u51fa\u9519\u8bef\u6765\uff0c\u53ea\u597d\u8c03\u51fa\u9898\u89e3\u6765\u5bf9\u62cd\uff0c\u7ed3\u679c\u65e0\u610f\u95f4\u7528\u8fd9\u7ec4\u6570\u636ehack\u6389\u4e24\u4e2a\u9898\u89e3\u3002\n\n```cpp\n10 5\n39 56 58 26 89 11 86 31 84 21\nM 5 9 21\nA 1 7 38\nM 6 8 80\nM 1 2 90\nA 1 1 88\n```\n\n\u7136\u540e\u597d\u4e0d\u5bb9\u6613\u8fc7\u4e86\uff0c\u5f00\u59cb\u6253\u6b63\u786e\u505a\u6cd5\uff0c\u53c8\u68c0\u67e5\u4e0d\u51fa\u9519\u8bef\u6765\uff0c\u548c\u5b66\u5f1fqwaszx\u5bf9\u62cd\uff0c\u53c8\u628a\u4ed6\u7684\u7ed9hack\u4e86\u3002\n\n```cpp\n16 2\n1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8\nM 10 11 10\nA 6 16 10\n```\n\n\n\u6211\u6211\u6211\u6211\u5c31\u60f3hack\u6389\u4e00\u4e2a\u4e09\u5341\u5206\u4ee3\u7801\u6709\u90a3\u4e48\u96be\u5417\n\n\u4e00\u4e2a\u4e09\u5341\u5206\u4ee3\u7801\u8fde\u7740hack\u6389\u4ee8\u9898\u89e3\uff0cemmmm\u2026\u2026\n\n%%%hzwer\n\n%%%rqy\n\n%%%qwaszx\n",
        "postTime": 1521036105,
        "uid": 43470,
        "name": "xMinh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u4f17\u6240\u5468\u77e5\uff0c\u5206\u5757\u662f\u4e00\u79cd\u975e\u5e38\u4f18\u7f8e\u7684\u66b4\u529b\n\n\u8fd9\u9053\u9898\u542c\u8d77\u6765\u65b9\u6cd5\u6781\u5176\u66b4\u529b\n\n\u6bcf\u5757\u5feb\u5185sort\n\n\u4f46\u662f\u5b83\u8fc7\u4e86\u3002\u3002\u3002\n\u7801\u91cf\u4e5f\u4e0d\u957f\uff0c\u516b\u5341\u591a\u884c\n\n\u6211\u7231\u66b4\u529b\n\n\u6211\u7231\u5206\u5757\n\n\u6211\u7231C++\n\n```cpp\n#include<bits/stdc++.h>\n#define fir(a, b, c) for(register int a = b; a <= c; a ++)\nusing namespace std;\nconst int N = 1000010;\nint n, q, a[N], b[N], l[N], r[N], pos[N];\nint t, tag[N];\n\ninline int ask(int x, int y, int k){\n\tint ans = 0;\n\tif(pos[x] == pos[y]){\n\t\tfir(i, x, y)\n\t\t\tif(a[i] + tag[pos[x]] >= k) ans ++;\n\t\treturn ans;\n\t}\n\tfir(i, x, r[pos[x]])\n\t\tif(a[i] + tag[pos[x]] >= k) ans ++;\n\tfir(i, l[pos[y]], y)\n\t\tif(a[i] + tag[pos[y]] >= k) ans ++;\n\tfir(i, pos[x]+1, pos[y]-1){\n\t\tint p = lower_bound(b+l[i], b+r[i]+1, k-tag[i])-b;\n\t\tans += r[i]-p+1;\n\t}\n\treturn ans;\n}\n\ninline void change(int x, int y, int k){\n\tif(pos[x] == pos[y]){\n\t\tfir(i, x, y) a[i] += k;\n\t\tfir(i, l[pos[x]], r[pos[x]]) b[i] = a[i];\n\t\tsort(b+l[pos[x]], b+r[pos[x]]+1);\n\t\treturn;\n\t}\n\tfir(i, x, r[pos[x]]) a[i] += k;\n\tfir(i, l[pos[x]], r[pos[x]]) b[i] = a[i];\n\tsort(b+l[pos[x]], b+r[pos[x]]+1);\n\t\n\tfir(i, l[pos[y]], y) a[i] += k;\n\tfir(i, l[pos[y]], r[pos[y]]) b[i] = a[i];\n\tsort(b+l[pos[y]], b+r[pos[y]]+1);\n\t\n\tfir(i, pos[x]+1, pos[y]-1)\n\t\ttag[i] += k;\n}\n\nint main(){\n\tscanf(\"%d %d\", &n, &q);\n\tfir(i, 1, n) scanf(\"%d\", &a[i]), b[i] = a[i];\n\tt = sqrt(n);\n\tfir(i, 1, t) l[i] = (i-1)*t+1, r[i] = i*t;\n\tif(r[t]<n) t ++, l[t] = r[t-1]+1, r[t] = n;\n\tt = 1;\n\tfir(i, 1, n)\n\t\tif(i > r[t]) t ++, pos[i] = t;\n\t\telse pos[i] = t;\n\tfir(i, 1, t) sort(b+l[i], b+r[i]+1);\n\tchar opt;\n\tint x, y, z;\n\twhile(q --){\n\t\tcin>>opt; \n\t\tscanf(\"%d %d %d\", &x, &y, &z);\n\t\tif(opt == 'A') printf(\"%d\\n\", ask(x, y, z));\n\t\telse change(x, y, z);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1570608398,
        "uid": 51871,
        "name": "\u795e\u4e4b\u849f\u84bbxyk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\n# \u5206\u5757\u5927\u6cd5\n\u62ff\u4e24\u9053\u9898\u6765\u7406\u89e3\n\n[\u6570\u5217\u5206\u5757\u5165\u95e8 1 ](https://loj.ac/problem/6277)\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u4e3a \u7684\u6570\u5217\uff0c\u4ee5\u53ca \u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6d89\u53ca\u533a\u95f4\u52a0\u6cd5\uff0c\u5355\u70b9\u67e5\u503c\u3002\n\n1\u2264n\u226450000\n\n### \u66b4\u529b\n\u5047\u8bbe\u6211\u4eec\u521a\u5b66\u4f1aa+b\u3002\n\n\u8003\u8651\u66b4\u529b\u7b97\u6cd5\uff0c\u5355\u70b9\u67e5\u8be2O(1)\uff0c\u533a\u95f4\u4fee\u6539O(n)\u3002\n\nn\u6b21\u64cd\u4f5c\u603b\u590d\u6742\u5ea6O(n^2)\u3002\n\n### \u8fdb\u9636\n\n\u73b0\u5728\u6211\u4eec\u4f1a\u7ebf\u6bb5\u6811\u4e86\u3002\n\u66b4\u529b\u7b97\u6cd5\u7684\u74f6\u9888\u5728\u4e8e\u533a\u95f4\u4fee\u6539\u3002\n\n\u8003\u8651\u6253\u6807\u8bb0\uff0c\u5355\u70b9\u67e5\u8be2O(log2 n)\uff0c\u533a\u95f4\u4fee\u6539O(log2\u2061 n)\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6O(n log2 n)\u3002\n\n### \u6362\u79cd\u66b4\u529b\n\u8003\u8651\u5206\u5757\u3002\n\u5047\u8bbe\u5c06\u6570\u5217\u5206\u6210m\u5757\uff0c\u6bcf\u5757k\u4e2a\u5143\u7d20\u3002(mk=n)\n\n\u533a\u95f4\u4fee\u6539\uff0c\u6574\u5757\u76f4\u63a5\u6253\u6807\u8bb0\uff0c\u4e24\u4fa7\u5757\u66b4\u529b\u4e0b\u653e\u6807\u8bb0\u5e76\u4fee\u6539\uff0c\u590d\u6742\u5ea6O(m+k)\u3002\n\n\u5355\u70b9\u67e5\u8be2\uff0c\u6709\u6807\u8bb0\u66b4\u529b\u4e0b\u653e\uff0c\u5e76\u76f4\u63a5\u67e5\u8be2\uff0c\u590d\u6742\u5ea6O(k)\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6O(n(m+k))\u3002\n\n\u8fd9\u91ccm\u548ck\u867d\u7136\u6709\u7ea6\u675f\u4f46\u4ecd\u662f\u53d8\u91cf\u3002\n\n\u8003\u8651\u5747\u503c\u4e0d\u7b49\u5f0f\uff0c\u6709m+k\u22652\u221amk=2\u221an\uff0c\u5f53\u4e14\u4ec5\u5f53m=k=\u221an\u53d6\u7b49\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5f97\u5230\u4e86\u590d\u6742\u5ea6\u4e3aO(n\u221an)\u7684\u7b97\u6cd5\uff0c\u540c\u6837\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u8003\u8651\u6d41\u7a0b\uff0c\u53ea\u6d89\u53ca\u5206\u5757\u548c\u6807\u8bb0\u601d\u60f3\uff0c\u5176\u4f59\u7684\u66b4\u529b\u64cd\u4f5c\u4e0d\u9700\u8981\u6ee1\u8db3\u53ef\u5408\u5e76\u7b49\u6027\u8d28\uff0c\u53ef\u4ee5\u7528\u5dee\u4e00\u4e9b\u7684\u590d\u6742\u5ea6\u7528\u66f4\u7b80\u5355\u7684\u601d\u7ef4\u89e3\u51b3log\u7c7b\u7b97\u6cd5\u65e0\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\u3002\n\n\n[\u6570\u5217\u5206\u5757\u5165\u95e8 2](https://loj.ac/problem/6278)\n\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u4e3an\u7684\u6570\u5217\uff0c\u4ee5\u53can\u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6d89\u53ca\u533a\u95f4\u52a0\u6cd5\uff0c\u8be2\u95ee\u533a\u95f4\u5185\u5c0f\u4e8e\u67d0\u4e2a\u503cx\u7684\u5143\u7d20\u4e2a\u6570\u3002\n\n1\u2264n\u226450000\n\n```\n```\n### \u9ad8\u7ea7\u66b4\u529b\n\n\u8003\u8651\u5206\u5757\u7b97\u6cd5\uff0c\u9700\u8981\u8003\u8651\u7684\u53ea\u6709\uff1a\n\n\u6574\u5757\u7684\u5143\u7d20\u5982\u4f55\u6253\u6807\u8bb0/\u67e5\u8be2\n\n\u4e24\u4fa7\u5757\u5185\u7684\u5143\u7d20\u5982\u4f55\u4fee\u6539/\u67e5\u8be2\n\n\u5982\u4f55\u4fdd\u8bc1\u590d\u6742\u5ea6\uff08\u5355\u6b21\u4e0d\u8d85\u8fc7O(n)\uff09\n\n\u5373\u53ef\u4fdd\u8bc1\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u8d85\u8fc7O(n^2)\u3002\n\n\u8003\u8651\u8fd9\u9053\u9898\uff0c\u5bf9\u4e8e\u67e5\u8be2\uff0c\u5982\u679c\u4fdd\u8bc1\u5757\u5185\u6570\u5217\u6709\u5e8f\uff0c\u53ef\u901a\u8fc7\u4e8c\u5206\u4ee5O(log2\u2061 k)\u7684\u590d\u6742\u5ea6\u5bf9\u6574\u5757\u67e5\u8be2\uff0c\u901a\u8fc7\u66b4\u529b\u5bf9\u4e24\u4fa7\u5757\u67e5\u8be2\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u5982\u679c\u4fdd\u8bc1\u5757\u5185\u6570\u5217\u6709\u5e8f\uff0c\u6574\u5757\u90fd\u8fdb\u884c\u52a0\u6cd5\u540e\u987a\u5e8f\u4e0d\u53d8\uff0c\u53ef\u76f4\u63a5\u6807\u8bb0\uff0c\u4e24\u4fa7\u5757\u4ecd\u53ef\u66b4\u529b\u4fee\u6539\u540e\u6392\u5e8f\u4fdd\u6301\u6027\u8d28\u3002\n\n\u5982\u679c\u53d6k=m=\u221an\uff0c\u5219\u9884\u5904\u7406\u590d\u6742\u5ea6O(n log2\u2061\u221an)\uff0c\u64cd\u4f5c\u590d\u6742\u5ea6O(n\u221an log2\u2061\u221an)\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u7528\u6570\u5b66\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230\u66f4\u597d\u7684\u590d\u6742\u5ea6\uff0c\u4f46\u76f8\u5dee\u4e0d\u591a\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n### \u601d\u60f3\n\u548c\u7ebf\u6bb5\u6811\u7b49\u4e00\u6837\uff0c\u5f53\u4fee\u6539\u4e0e\u67e5\u8be2\u65f6\u95f4\u4ee3\u4ef7\u4e00\u5927\u4e00\u5c0f\u65f6\uff0c\u53ef\u5c06\u6570\u5217\u5206\u7ec4\uff0c\u4f7f\u4e24\u8005\u5747\u8861\u4ee5\u8fbe\u5230\u66f4\u4f18\u7684\u6574\u4f53\u590d\u6742\u5ea6\uff0c\u5e76\u4e14\u5728\u533a\u95f4\u4fee\u6539\u65f6\u4f7f\u7528\u6807\u8bb0\u964d\u4f4e\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u5206\u5757\u5c31\u662f\u8ba9\u6574\u5757\u4e0e\u4e24\u4fa7\u5757\u5185\u7684\u66b4\u529b\u67e5\u8be2\u8fbe\u5230\u5747\u8861\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u672c\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u5206\u5757\u5927\u6cd5\u3002\u4f46\u6709\u4e00\u4e2a\u7ec6\u8282\u4f18\u5316\u3002\u56e0\u4e3a\u8981\u6c42\u8eab\u9ad8\u2265C\u7684\u82f1\u96c4\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u5728\u5206\u597d\u5757\u540e\u53ef\u4ee5\u7ed9\u6bcf\u4e00\u5757\u6392\u4e00\u4e0b\u5e8f\uff0c\u7528\u4e8c\u5206\u6cd5\u627e\u5230\u7b2c\u4e00\u4e2a\u8eab\u9ad8\u2265C\u7684\u82f1\u96c4\uff0c\u518d\u6c42\u51fa\u7ed3\u679c\u5373\u53ef\u3002\n### \u4ee3\u7801\n```\n```cpp\n#include<bits/stdc++.h>\n#define eps 1e-10\n#define re register\n#define N 2001001\n#define MAX 2001\n#define PI acos(-1)\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ninline void read(re ll &ret)\n{\n    ret=0;re ll pd=0;re char c=getchar();\n    while(!isdigit(c)){pd|=c=='-';c=getchar();}\n    while(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c^48);c=getchar();}\n    ret=pd?-ret:ret;\n}\ninline void dbread(re db &ret)\n{\n    ret=0.0;re char c=getchar();re db num=1.0;re ll pd=0;\n    while(!isdigit(c)){pd|=c=='-';c=getchar();}\n    while(isdigit(c)){ret=ret*10+(c^48);c=getchar();}\n    if(c!='.'){ret=pd?-ret:ret;return;}\n    c=getchar();\n    while(isdigit(c)){ret+=(num/=10)*(c^48);c=getchar();}\n    ret=pd?-ret:ret;\n    return;\n}\nll n,q,a[N],b[N],k,m,p[N],num[N];\nchar s[N];\ninline void reset(re ll x)\n{\n    if(x==p[n])return;\n    for(re int i=(x-1)*k+1;i<=x*k;i++)\n        b[i]=a[i];\n    sort(b+(x-1)*k+1,b+x*k+1);//\u7384\u5b66\u6392\u5e8f\n    return;\n}\ninline ll calc(re ll l,re ll r,re ll x)//\u4e8c\u5206\u6cd5\n{\n    re ll ans=0,tmp=r,mid;\n    while(l<=r)\n    {\n        mid=(l+r)>>1;\n        if(b[mid]>=x)\n        {\n            ans=mid;\n            r=mid-1;   \n        }\n        else\n            l=mid+1;\n    }\n    return ans?tmp-ans+1:0;\n}\ninline void add(re ll l,re ll r,re ll x)//\u533a\u95f4\u52a0\u6cd5\n{\n    if(p[r]-p[l]<2)//\u5982\u679c\u6ca1\u6709\u5b8c\u6574\u7684\u5757\uff0c\u76f4\u63a5\u66b4\u529b\n    {\n        for(re int i=l;i<=r;i++)\n            a[i]+=x;\n        reset(p[l]);//\u91cd\u65b0\u6392\u5e8f\n        reset(p[r]);\n        return;\n    }\n    for(re int i=p[l]+1;i<p[r];i++)\n        num[i]+=x;//\u6253\u6807\u8bb0\n    for(re int i=l;i<=p[l]*k;i++)\n        a[i]+=x;\n    reset(p[l]);\n    for(re int i=(p[r]-1)*k+1;i<=r;i++)\n        a[i]+=x;\n    reset(p[r]);\n    return;\n}\ninline ll query(re ll l,re ll r,re ll x)//\u533a\u95f4\u67e5\u8be2\n{\n    re ll cnt=0;\n    if(p[r]-p[l]<2)\n    {\n        for(re int i=l;i<=r;i++)\n            if(a[i]+num[p[i]]>=x)cnt++;\n        return cnt;\n    }\n    for(re int i=p[l]+1;i<p[r];i++)\n        cnt+=calc((i-1)*k+1,i*k,x-num[i]);//\u4e8c\u5206\u67e5\u627e\n    for(re int i=l;i<=p[l]*k;i++)\n        if(a[i]+num[p[i]]>=x)cnt++;\n    for(re int i=(p[r]-1)*k+1;i<=r;i++)\n        if(a[i]+num[p[i]]>=x)cnt++;\n    return cnt;\n}\nint main()\n{\n    read(n);\n    read(q);\n    k=sqrt(n);//\u5206\u5757\n    for(re int i=1;i<=n;i++)\n    {\n        read(a[i]);\n        p[i]=(i-1)/k+1;\n    }\n    m=p[n];\n    for(re int i=1;i<=m;i++)\n        reset(i);\n    re ll x,y,z;\n    for(re int i=1;i<=q;i++)\n    {\n        scanf(\"%s\",s+1);\n        read(x);\n        read(y);\n        read(z);\n        if(s[1]=='M')\n            add(x,y,z);\n        else printf(\"%lld\\n\",query(x,y,z));\n    }\n //system(\"pause\");\n    return 0;\n}\n```\n",
        "postTime": 1560481069,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u5176\u5b9e\u8ddfhzwer\u7684\u6570\u5217\u5206\u5757\u5165\u95e8\uff12\u662f\u4e00\u6837\u7684\u3002~~\u53cc\u500d\u7ecf\u9a8c~~\n\n\u653e\u4e0a\u94fe\u63a5[[#Loj6278]\u6570\u5217\u5206\u5757\u5165\u95e82](https://loj.ac/problem/6278)\n\n### \u9898\u610f\u7b80\u8ff0:\n\n\u73b0\u6709\u4e00\u6bb5\u957f\u5ea6\u4e3a$n$\u7684\u521d\u59cb\u5e8f\u5217\uff0c\u7ed9\u51fa$m$\u4e2a\u64cd\u4f5c\u6bcf\u6b21\u64cd\u4f5c\u6709\u533a\u95f4\u52a0\u6cd5\u4ee5\u53ca\u67e5\u8be2\u533a\u95f4$[L,R]$\u5927\u4e8e\u7b49\u4e8e$c$\u7684\u6570\u6709\u591a\u5c11\u4e2a\u3002\n\n### \u601d\u8def\n\u9996\u5148\u5206\u6790\u4e00\u4e0b\u9898\u76ee\u4e2d\u7684\u6027\u8d28\uff0c\u6211\u4eec\u8981\u6c42\u4e00\u6bb5\u533a\u95f4\u5185\u7684$[L,R]$\u5185\u7684\u5927\u4e8e\u7b49\u4e8ec\u7684\u6570\u7684\u4e2a\u6570\u3002\u6211\u4eec\u60f3\u533a\u95f4$[L,R]$\u662f\u5177\u6709\u5355\u8c03\u6027\u7684\u5c31\u597d\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u6765\u6c42\u5927\u4e8e\u7b49\u4e8ec\u7684\u6570\u7684\u4e2a\u6570\u4e86\u3002\n\n#### \u5bf9\u4e8e\u4fee\u6539:\n\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u652f\u6301\u7684\u533a\u95f4\u4fee\u6539\u53ea\u6709\u533a\u95f4\u52a0\u6cd5\uff0c\u5047\u5982$[L,R]$\u533a\u95f4\u5185\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u88ab\u52a0\u4e0a\u4e86\u4e00\u4e2a\u6570$w$\uff0c\u5b9e\u9645\u4e0a\u5bf9\u4e8e$[L,R]$\u533a\u95f4\u5185\u7684\u6570\u6765\u8bf4\uff0c\u5b83\u4eec\u7684\u5927\u5c0f\u5173\u7cfb\u662f\u4e0d\u4f1a\u53d8\u7684\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u6bcf\u4e00\u5757\u5185\u7684\u5143\u7d20\u6392\u597d\uff0c\u8fd9\u6837\u5b50\u65b9\u4fbf\u67e5\u8be2\u3002\n\n\u7ed9\u4e2a\u4f8b\u5b50:\n$n$ = $5$\n\n\u5047\u8bbe\u4fee\u6539\u524d\u7684\u5e8f\u5217\u4e3a:$1$ $3$ $2$ $4$ $5$\n\n\u6211\u4eec\u5bf9\u4e8e\u533a\u95f4$[3,5]$\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u52a0\u4e0a$w,w = 3$\uff0c\u90a3\u4e48\u539f\u5e8f\u5217\u5c31\u4f1a\u53d8\u4e3a:\n\n$1$ $3$ $5$ $7$ $8$\n\n\u6240\u4ee5\u5b9e\u9645\u4e0a\u5bf9\u4e8e$[L,R]$\u533a\u95f4\u5185\u7684\u6570\u6765\u8bf4\uff0c\u5b83\u4eec\u7684\u5927\u5c0f\u5173\u7cfb\u662f\u4e0d\u4f1a\u53d8\u7684\u3002\u3002\n\n\u8fd9\u6837\u5b50\uff0c\u5bf9\u4e8e\u5206\u5757\u4e2d\u88ab\u533a\u95f4$[L,R]$\u5b8c\u5168\u88ab\u8986\u76d6\u7684\u4e00\u6574\u4e2a\u5757\u6765\u8bf4\uff0c\u8fd9\u4e2a\u5757\u5185\u7684\u5927\u5c0f\u5173\u7cfb\u662f\u4e0d\u4f1a\u53d8\u7684\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6ca1\u6709\u88ab\u533a\u95f4$[L,R]$\u5b8c\u5168\u8986\u76d6\u7684\u5757\u5462\uff1f\u90a3\u5c31\u5bf9\u4e8e\u90a3\u4e00\u4e2a\u5757\u66b4\u529b\u4fee\u6539\u7136\u540esort\u91cd\u65b0\u6392\u5e8f\uff0c\u5904\u7406\u8fd9\u4e2a\u96f6\u6563\u5757\u65f6\u95f4\u590d\u6742\u5ea6\u662f:O($block$ * $log(block)$)\u7684\uff0c$block$\u662f\u5757\u957f\uff0c\u6211\u4eec\u8fd9\u91cc\u53d6$\\sqrt{n}$\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f:O$(\\sqrt{n}*log(\\sqrt{n}))$\u7684\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6574\u5757\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u5176$add$\u6570\u7ec4\u52a0\u4e0a$w$\u5373\u53ef\uff0c\u8fd9\u6837\u5b50\u4e0d\u4f1a\u7834\u574f\u5757\u5185\u7684\u5355\u8c03\u6027\u8d28\u3002\n\n#### \u5bf9\u4e8e\u67e5\u8be2\n\u524d\u9762\u4e5f\u63d0\u5230\u4e86\uff0c\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u5757\u7684\u5757\u5185\u5143\u7d20\u90fd\u6392\u5e8f\u6210\u4e3a\u6709\u5e8f\u7684\u4e86\uff0c\u4e8e\u662f\u4e4e\uff0c\u67e5\u8be2\u7684\u8fc7\u7a0b\u4e2d\uff1a\n+ \u5bf9\u4e8e\u96f6\u6563\u7684\u5757(\u5373\u6ca1\u6709\u88ab\u533a\u95f4$[L,R]$\u5b8c\u5168\u8986\u76d6\u7684\u5757)\n\n\u76f4\u63a5\u66b4\u529b\u67e5\u8be2\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O($\\sqrt{n}$)\n\n+ \u5bf9\u4e8e\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u5757 (\u5373\u5b8c\u5168\u88ab\u533a\u95f4$[L,R]$\u8986\u76d6\u7684\u5757)\n\n\u56e0\u4e3a\u5757\u5185\u5143\u7d20\u662f\u6709\u5e8f\u7684\uff0c\u6211\u4eec\u91c7\u7528\u4e8c\u5206  $or$\u3000\u500d\u589e\u6765\u6c42\u51fa$c$\u7684\u540e\u7ee7(\u5927\u4e8e\u7b49\u4e8ec\u7684\u6700\u5c0f\u7684\u6570)\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6:O($\\sqrt{n}$ * $log$$(\\sqrt{n})$)(\u4e00\u5171\u4e0d\u8d85\u8fc7$\\sqrt{n}$\u4e2a\u5757\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\u7684\u5904\u7406\u662f$log(\\sqrt{n})$\u7684\uff0c\u4e8e\u662f\u5f97\u5230\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6)\n\n\u7efc\u4e0a\uff0c\u603b\u7684\u95f4\u590d\u6742\u5ea6\u4e3aO($m$ * $\\sqrt{n}$ * $log$$(\\sqrt{n})$)\n\n$m <= 1000,n <= 10^6$\uff0c\u662f\u80fd\u8fc7\u7684\uff01\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u5b8c\u7ed3\u6492\u82b1\uff01\n\n### Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1000005;\nint n , m;\nint a[MAXN],N = 0;\nint pos[MAXN],L[MAXN],R[MAXN],add[MAXN];\n\nstruct Node {\n\tint num,sum;\n} T[MAXN];\n\nint cmp(Node A, Node B){return A.sum > B.sum;}\n\nvoid Add(int l,int r,int k)\n{\n\tif(pos[l] == pos[r])\n\t{\t//\u66b4\u529b\u4fee\u6539\u5373\u53ef\n\t\tint id = pos[l];\n\t\tfor(int i = L[id] ; i <= R[id] ; i ++)\n\t\tif(T[i].num >= l && T[i].num <= r)T[i].sum += k;\n\t\tsort(T + L[id] , T + R[id] + 1 , cmp);//\u6bcf\u6b21\u4fee\u6539\u540e\u8981\u6392\u5e8f\n\t\treturn ;\n\t}\n\telse \n\t{\n\t\tint id = pos[l];\n\t\tfor(int i = L[id] ; i <= R[id] ; i ++)\n\t\tif(T[i].num >= l && T[i].num <= r)T[i].sum += k;\n\t\tsort(T + L[id] , T + R[id] + 1 , cmp);//\u5bf9\u4e8e\u96f6\u6563\u5feb\u4fee\u6539\u540e\u8981\u6392\u5e8f\n\t\tid = pos[r];\n\t\tfor(int i = L[id] ; i <= R[id] ; i ++)\n\t\tif(T[i].num >= l && T[i].num <= r)T[i].sum += k;\n\t\tsort(T + L[id] , T + R[id] + 1 , cmp);\n\t\tfor(int i = pos[l] + 1; i <= pos[r] - 1 ; i ++)\n\t\t\tadd[i] += k;//\u76f4\u63a5\u5bf9\u4e8e\u6574\u6bb5\u7684add\u6570\u7ec4\u6dfb\u52a0\u5373\u53ef\n\t\treturn ;\n\t}\n\treturn ;\n}\n\nint Get(int l,int r,int k)\n{\n\tif(pos[l] == pos[r])\n\t{\n\t\tint id = pos[l],ans = 0;//\u66b4\u529b\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\n\t\tfor(int i = L[id] ; i <= R[id] ; i ++)\n\t\tif(T[i].num >= l && T[i].num <= r && T[i].sum + add[id]>= k)ans ++;\n\t\treturn ans;\n\t}\n\telse \n\t{\n\t\tint id = pos[l],ans = 0;\n\t\tfor(int i = L[id] ; i <= R[id] ; i ++)\n\t\tif(T[i].num >= l && T[i].num <= r && add[id] + T[i].sum >= k)ans ++;\n\t\tid = pos[r];//\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u96f6\u6563\u5757\u90fd\u66b4\u529b\u5904\u7406\n\t\tfor(int i = L[id] ; i <= R[id] ; i ++)\n\t\tif(T[i].num >= l && T[i].num <= r && add[id] + T[i].sum >= k)ans ++;\n\t\tfor(int i = pos[l] + 1; i <= pos[r] - 1 ; i ++)\n\t\t{\n\t\t\tint A = 0;\n\t\t\tfor(int j = log2(R[i] - L[i] + 1) + 1 ; j >= 0 ; j --)\n\t\t\tif(A + (1 << j)<=R[i] - L[i] + 1)\n\t\t\tif(add[i] + T[L[i] + A + (1 << j) - 1].sum >= k)A += (1 << j);\n\t\t\tans += A ;//\u6211\u8fd9\u91cc\u5199\u7684\u500d\u589e\uff0c\u56e0\u4e3a\u4e8c\u5206\u5bb9\u6613\u5199\u6302QAQ\n\t\t}\n\t\treturn ans;\n\t}\n}\n\nint main()\n{\n\tcin >> n >> m;\n\tfor(int i = 1 ; i <= n ; i ++)cin >> T[i].sum, T[i].num = i;\n\tint l = 0 , r = 0;\n\tint block = int(sqrt(n));\n\twhile(r != n)\n\t{\n\t\tN ++;\n\t\tL[N] = l = (N - 1) * block + 1;\n\t\tR[N] = r = min(N * block , n );//\u8bb0\u5f55\u6bcf\u4e2a\u5757\u7684\u5de6\u53f3\u7aef\u70b9\n\t\tfor(int i = l ; i <= r ; i ++)pos[i] = N;//\u8bb0\u5f55\u539f\u7f16\u53f7\u5bf9\u5e94\u7684\u5757\u7684\u7f16\u53f7\n\t\tsort(T + l , T + 1 + r , cmp);//\u9884\u5904\u7406\u6392\u5e8f\n\t}\n\twhile(m) \n\t{\n\t\tchar op;\n\t\tint l,r,x;\n\t\tcin >> op >> l >> r >> x;\n\t\tif( op == 'M' )Add(l,r,x);\n\t\telse cout << Get(l,r,x) << endl;\n\t\tm --;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1604317532,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u6211\u4eec\u770b\u5230\u8fd9\u4e2a $\\mathcal{N <=1e6}$ \n\n$\\text{\u90fd\u80fd\u60f3\u5230\u4e00\u4e2a}$\n$\\mathcal{N \\sqrt N}$  $\\text{\u7684\u5206\u5757\u505a\u6cd5}$ \n\n$\\text{\u5982\u679c\u4f60\u4e0d\u4f1a\u5206\u5757}$ - > [here](https://www.cnblogs.com/qf-breeze/p/11361618.html)\n\n$\\text{\u8fd9\u9898\u5c31\u662f\u4e00\u4e2a\u5206\u57572}$ -> [here](https://loj.ac/problem/6278)\n\n$\\text{\u7b80\u5355\u8bb2 \u5206\u57572 \u662f\u8981\u6c42 \u6c42\u51fa\u6765 \u5c0f\u4e8e}$ $c^2$ $\\text{\u7684\u4e2a\u6570}$\n\n$\\text{\u7136\u540e\u5957\u7528\u8fd9\u9898\u7684\u677f\u5b50\u6211\u4e0d\u52301\u5206\u949f\u5c31\u5199\u6389\u4e86(\u5212\u6389}$\n\n$\\text{\u8fd9\u9898\u662f\u8981\u6c42}$ `\u533a\u95f4\u4fee\u6539` `\u533a\u95f4\u67e5\u8be2\u6709\u591a\u5c11\u4e2a\u5927\u4e8ec\u7684\u6570\u91cf`\n\n$\\text{\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u67e5\u51fa\u6765 \u591a\u5c11\u4e2a\u5c0f\u4e8ec\u7684\u7136\u540e(r-l+1) - query(l,r,c)\u5c31\u53ef\u4ee5\u4e86}$\n\n\n\u590d\u6742\u5ea6 $\\mathcal{N \\sqrt N}$\n=\n\n$\\mathcal{Code}$\n\n\n```cpp\n// Isaunoya\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC diagnostic error \"-std=c++11\"\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std ;\n#define rep(i , j , n) for(register int i = j ; i <= n ; i ++)\n#define Rep(i , j , n) for(register int i = j ; i >= n ; i --)\n#define low(x) x & -x\n#define go(u) for(register int i = head[u] ; i ; i = e[i].nxt)\ninline int read() { register int res = 0 , f = 1 ; register char c = getchar() ;\n    for( ; ! isdigit(c) ; c = getchar()) if(c == '-') f = -1 ;\n    for( ; isdigit(c) ; c = getchar()) res = (res << 1) + (res << 3) + (c & 15) ;\n    return res * f ;\n}const static int N = 1000000 + 5 ;\nconst int Mod = 998244353LL ;\ntemplate<typename T> inline void print(T x) { if(x > 9)  print(x / 10) ; putchar(x % 10 + '0') ; }\ntemplate<typename T> inline void Pr(T x , char c = '\\n') { if(x < 0) putchar('-') , x = - x ; print(x) ; putchar(c) ; }\ninline int PW(int x , int y , int Mod = Mod) { register int ans = 1 ;\n    for( ; y ; y >>= 1 , x = (x * x) % Mod) y & 1 ? ans = (ans * x) % Mod : 0 ;\n    return ans ;\n} inline int Inv(int x , int Mod = Mod) { return PW(x , Mod - 2 , Mod) ; }\ninline int gc() { register char c = getchar() ;\n\twhile(isspace(c)) c = getchar() ;\n\treturn c == 'A' ;\n}\nconst int Bl = 1000 + 5;\nint n;\nint a[N];\nstruct node {\n    int add;\n    std::vector<int> v;\n};\nnode atag[Bl];\nint unt;\nint bl[N];\ninline void reset(int x) {\n    atag[x].v.clear();\n    for (register int i = (x - 1) * unt + 1; i <= min(x * unt, n); i++) atag[x].v.push_back(a[i]);\n    sort(atag[x].v.begin(), atag[x].v.end());\n    return;\n}\ninline void change(int l, int r, int c) {\n    for (register int i = l; i <= min(bl[l] * unt, r); i++) a[i] += c;\n    reset(bl[l]);\n    if (bl[l] != bl[r]) {\n        for (register int i = (bl[r] - 1) * unt + 1; i <= r; i++) a[i] += c;\n        reset(bl[r]);\n    }\n    for (register int i = bl[l] + 1; i <= bl[r] - 1; i++) atag[i].add += c;\n}\ninline int query(int l, int r, int c) {\n    int ans = 0;\n    for (register int i = l; i <= min(bl[l] * unt, r); i++)\n        if (a[i] + atag[bl[l]].add < c)\n            ans++;\n    if (bl[l] != bl[r]) {\n        for (register int i = (bl[r] - 1) * unt + 1; i <= r; i++)\n            if (a[i] + atag[bl[r]].add < c)\n                ans++;\n    }\n    for (register int i = bl[l] + 1; i <= bl[r] - 1; i++) {\n        int s = c - atag[i].add;\n        ans += lower_bound(atag[i].v.begin(), atag[i].v.end(), s) - atag[i].v.begin();\n    }\n    return ans;\n}\nsigned main() {\n    n = read(); int t = read() ; unt = sqrt(n) ;\n    for (register int i = 1; i <= n; i++) a[i] = read();\n    for (register int i = 1; i <= n; i++) bl[i] = (i - 1) / unt + 1;\n    for (register int i = 1; i <= n; i++) {\n        atag[bl[i]].v.push_back(a[i]);\n    }\n    for (register int i = 1; i <= bl[n]; i++) {\n        sort(atag[i].v.begin(), atag[i].v.end());\n    }\n    for( ; t -- ; ) {\n    \tint opt = gc() ;\n    \tint l = read() , r = read() , c = read() ;\n    \tif(opt == 0) {\n    \t\tchange(l , r , c) ;\n\t\t}\n\t\tif(opt == 1) {\n\t\t\tPr((r - l + 1) - query(l , r , c)) ;\n//\t\t\trep(i , 1 , n) Pr(a[i] + atag[bl[i]].add , ' ') ;\n//\t\t\tputs(\"\") ;\n\t\t}\n\t}\n    return 0;\n}\n```",
        "postTime": 1567219664,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n\uff081\uff09 \u82e5\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e3a\u201cM\u201d\uff0c\u5219\u7d27\u63a5\u7740\u6709\u4e09\u4e2a\u6570\u5b57L\u3001R\u3001W\u3002\u8868\u793a\u5bf9\u95ed\u533a\u95f4 [L, R] \u5185\u6240\u6709\u6570\u52a0\u4e0aW\u3002\n\n\uff082\uff09 \u82e5\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e3a\u201cA\u201d\uff0c\u5219\u7d27\u63a5\u7740\u6709\u4e09\u4e2a\u6570\u5b57L\u3001R\u3001C\u3002\u8be2\u95ee\u95ed\u533a\u95f4 [L, R] \u5185\u6709\u591a\u5c11\u6570\u5927\u4e8e\u7b49\u4e8eC\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u64cd\u4f5c\uff0c\u5f88\u663e\u7136\u7ebf\u6bb5\u6811\u662f\u53ef\u4ee5\u652f\u6301\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u64cd\u4f5c\u7ebf\u6bb5\u6811\u5c31\u663e\u5f97\u6bd4\u8f83\u65e0\u529b\u4e86\uff0c\u5bf9\u4e8e\u533a\u95f4\u95ee\u9898\uff0c\u5206\u5757\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u7565\u5dee\uff0c\u4f46\u662f\u8fd8\u662f\u53ef\u4ee5\u4f18\u5316\u7ebf\u6bb5\u6811\u4f18\u5316\u4e0d\u4e86\u7684\u66b4\u529b\u7684\u3002\n\n\u770b\u5230\u6709\u591a\u5c11\u6570\u5927\u4e8e\u7b49\u4e8eC\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e2a\u5c0f\u8f6c\u5316\uff1a\u5982\u679c\u4e00\u4e2a\u5e8f\u5217\u662f\u6709\u5e8f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5229\u7528lower_bound\u4e8c\u5206\u67e5\u8be2\u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\uff0c\u90fd\u8981\u7ef4\u62a4\u5b83\u662f\u6709\u5e8f\u7684\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u64cd\u4f5c\uff0c\u96f6\u6563\u90e8\u5206\u76f4\u63a5\u66b4\u529b\uff0c\u6574\u4e2a\u5757\u90e8\u5206\u52a0\u4e0a\u6807\u8bb0\u3002\u7531\u4e8e\u6574\u4e2a\u5757\u96c6\u4f53\u52a0\u6807\u8bb0\u4e0d\u4f1a\u5f71\u54cd\u76f8\u5bf9\u987a\u5e8f\uff0c\u6240\u4ee5\u53ea\u6709\u96f6\u6563\u90e8\u5206\u9700\u8981\u91cd\u65b0\u6392\u5e8f\u3002\n\n\u800c\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u64cd\u4f5c\uff0c\u6211\u4eec\u5bf9\u4e8e\u96f6\u6563\u90e8\u5206\u76f4\u63a5\u66b4\u529b\u5224\u65ad\uff0c\u6574\u5757\u90e8\u5206\u4e8c\u5206\u67e5\u627e\uff0c\u7b54\u6848\u6c42\u548c\u5373\u53ef\uff0c\u4e0d\u8981\u5fd8\u8bb0C\u8981\u51cf\u53bb\u5f53\u524d\u5757\u7684\u6807\u8bb0\u3002\n\n### \u6027\u80fd\u5206\u6790\n\n\u7b2c\u4e00\u79cd\u64cd\u4f5csqrt(n)+sqrt(n)log(sqrt(n))\n\u7b2c\u4e8c\u79cd\u64cd\u4f5csqrt(n)+sqrt(n)log(sqrt(n))\n\u603b\u590d\u6742\u5ea6q(sqrt(n)+sqrt(n)log(sqrt(n))\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n\u5757\u7684\u5927\u5c0f\u5fae\u8c03\u4e00\u4e0b\uff0c\u9632\u6b62\u6bd2\u7624\u6570\u636e\u3002\u3002\u3002\n\n```cpp\n//Head File _DAG_\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#include<deque>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<vector>\nusing namespace std;\n\n//Debuger _DAG_\n#define dej printf(\"Running\\n\");\n#define dep1(x) cout<<#x<<\"=\"<<x<<endl;\n#define dep2(x,y) cout<<#x<<\"=\"<<x<<' '<<#y<<\"=\"<<y<<endl;\n#define dep3(x,y,z) cout<<#x<<\"=\"<<x<<' '<<#y<<\"=\"<<y<<' '<<#z<<\"=\"<<z<<endl;\n\n//Replace _DAG_\n#define LL long long\n#define LB long double\n#define reg register\n#define il inline\n#define inf 2147483644\n\n//DTL _DAG_\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define abs(a) (((a)>(0))?(a):(-(a)))\n#define UF(i,a,b) for(reg int i=a;i<=b;i++)\n#define DF(i,a,b) for(reg int i=a;i>=b;i--)\n#define SUF(c,a,b) for(reg int *S=c+a,*E=c+b+1;*S!=*E;*S++)\n#define SDF(c,a,b) for(reg int *S=c+a,*E=c+b-1;*S!=*E;*S--)\n\n//Sorce Limit _DAG_\n#define maxn 1000005\n#define maxm 1005\n\nint n,q,size;\nint a[maxn],blockl[maxn],marks[maxm];\nvector<int>v[maxm];\n\nil int read()\n{\n  int w=0;char ch=getchar();\n  while(ch<'0'||ch>'9') ch=getchar();\n  while(ch>='0'&&ch<='9') w=(w<<3)+(w<<1)+ch-'0',ch=getchar();\n  return w;\n}\nil void merge(int x)\n{\n  v[x].clear();\n  UF(i,(x-1)*size+1,min(x*size,n)) v[x].push_back(a[i]);\n  sort(v[x].begin(),v[x].end());\n}\nil void add(int x,int y,int z)\n{\n  UF(i,x,min(blockl[x]*size,y)) a[i]+=z;\n  merge(blockl[x]);\n  if(blockl[x]!=blockl[y])\n  {\n    UF(i,(blockl[y]-1)*size+1,y) a[i]+=z;\n    merge(blockl[y]);\n  }\n  UF(i,blockl[x]+1,blockl[y]-1) marks[i]+=z;\n}\nil int query(int x,int y,int z)\n{\n  int ans=0;\n  UF(i,x,min(blockl[x]*size,y)) if(a[i]+marks[blockl[x]]>=z) ans++;\n  if(blockl[x]!=blockl[y]) UF(i,(blockl[y]-1)*size+1,y) if(a[i]+marks[blockl[y]]>=z) ans++;\n  UF(i,blockl[x]+1,blockl[y]-1)\n  {\n    int temp=z-marks[i];\n    ans+=v[i].end()-v[i].begin()-(lower_bound(v[i].begin(),v[i].end(),temp)-v[i].begin());\n  }\n  return ans;\n}\nint main()\n{\n  n=read(),q=read();\n  size=sqrt(n)+1;\n  UF(i,1,n) a[i]=read();\n  UF(i,1,n) blockl[i]=(i-1)/size+1,v[blockl[i]].push_back(a[i]);\n  UF(i,1,blockl[n]) sort(v[i].begin(),v[i].end());\n  UF(i,1,q)\n  {\n    char s[2];\n    scanf(\"%s\",s);\n    int x=read(),y=read(),z=read();\n    if(s[0]=='M') add(x,y,z);\n    else printf(\"%d\\n\",query(x,y,z));\n  }\n  return 0;\n}\n",
        "postTime": 1559970292,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u7eaa\u5ff5\u849f\u84bb\u7b2c\u4e00\u6b21\u4e00\u904dA\u7684\u7ebf\u6bb5\u6811quq\n\n\u597d\u63a5\u4e0b\u6765\u54b1\u4eec\u770b\u770b\u8fd9\u9053\u9898\n\n\u6211\u4e00\u5f00\u59cb\u5176\u5b9e\u4e00\u773c\u770b\u662f\u5206\u5757\uff08hzwer\u5de8\u4f6c\u7684\u535a\u5ba2\u91cc\u6709\u5199\u5206\u5757\u7684\u505a\u6cd5\uff09\uff0c\u4f46\u662f\u8003\u8651\u8003\u8651\u5206\u5757\u53d1\u73b0\u6211\u8fd9\u4e2a\u849f\u84bb\u6839\u672c\u4e0d\u4f1a\u5199\uff0c\u4e8e\u662f\u8003\u8651\u8003\u8651\u7ebf\u6bb5\u6811\uff0c\u54ce\uff0c\u53d1\u73b0\u7b80\u5355\u7684\u4e00\n\n\u5177\u4f53\u8bb2\uff0c\u5199\u4e00\u4e2a\u7ef4\u62a4\u6700\u5c0f\u503c\u7684\u7ebf\u6bb5\u6811\uff0c\u533a\u95f4\u52a0\u5c31lazy\u76f4\u63a5\u641e\uff0c\u8be2\u95ee\u7684\u8bdd\u6211\u4eec\u770b\u770b\u5982\u679c\u5f53\u524d\u7684\u533a\u95f4\u548c\u5f85\u8be2\u95ee\u533a\u95f4\u91cd\u5408\u5e76\u4e14\u8fd9\u6bb5\u533a\u95f4\u7684min >= c\uff0c\u90a3\u4e48\u8fd9\u6bb5\u533a\u95f4\u5c31\u5408\u6cd5\uff0c\u4e0d\u7136\u5c31\u4e00\u76f4\u4e8c\u5206\u4e0b\u53bb\uff0c\u76f4\u5230\u53ea\u6709\u4e00\u4e2a\u6570\u4e3a\u6b62\n\n\u590d\u6742\u5ea6q*logn\u7a33\u5f97\u4e00\u6279\n\n\u7ebf\u6bb5\u6811\u5927\u6cd5\u543c\u54c7\uff01\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<climits>\n#include<queue>\nusing namespace std;\n#define rg register\n#define min(a,b) ((a)>(b)?(b):(a))\nint d[4000005],mi[4000005];\ninline int read()\n{\n\tint ans = 0,op = 1;\n\tchar ch = getchar();\n\twhile(ch < '0'||ch > '9')\n\t{\n\t\tif(ch == '-') op = -1;\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0'&&ch <= '9')\n\t{\n\t\t(ans *= 10) += ch - '0';\n\t\tch = getchar();\n\t}\n\treturn ans * op;\n }\ninline void pushdown(int i)\n{\n\tif(d[i])\n\t{\n\td[i << 1] += d[i];\n\td[i << 1 | 1] += d[i];\n\tmi[i << 1] += d[i];\n\tmi[i << 1 | 1] += d[i];\n\td[i] = 0;\n\t}\n}\nvoid adde(rg int i,rg int l,rg int r,rg int ql,rg int qr,rg int delta)\n{\n\tif(l == ql&&r == qr)\n\t{\n\t\tmi[i] += delta;\n\t\td[i] += delta;\n\t\treturn;\n\t}\n\tpushdown(i);\n\tmi[i] += delta;\n\t//printf(\"%d \",mi[i]);\n\tint mid = l + r >> 1;\n\tif(qr <= mid) adde(i << 1,l,mid,ql,qr,delta);\n\telse if(ql > mid) adde(i << 1 | 1,mid + 1,r,ql,qr,delta);\n\telse\n\t{\n\t\tadde(i << 1,l,mid,ql,mid,delta);\n\t\tadde(i << 1 | 1,mid + 1,r,mid + 1,qr,delta);\n\t}\n\tmi[i] = min(mi[i << 1],mi[i << 1 | 1]);\n\treturn;\n}\nint query(rg int i,rg int l,rg int r,int ql,int qr,int c)\n{\n\t//printf(\"%d %d %d %d %d\\n\",mi[i],l,r,ql,qr);\n\tif(l == ql && r == qr && mi[i] >= c) return r - l + 1;\n\tif(l == r) return mi[i] >= c; \n\tpushdown(i);\n\tint mid = l + r >> 1;\n\tif(qr <= mid) return query(i << 1,l,mid,ql,qr,c);\n\telse if(ql > mid) return query(i << 1 | 1,mid + 1,r,ql,qr,c);\n\telse return query(i << 1,l,mid,ql,mid,c) + query(i << 1 | 1,mid + 1,r,mid + 1,qr,c);\n}\nint main()\n{\n\tint n = read(),q = read();\n\t//build(1,1,n);\n\t//memset(mi,0x3f,sizeof(mi));\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tint a = read();\n\t\tadde(1,1,n,i,i,a);\n\t\t//cout<<endl;\n\t}\n\twhile(q--)\n\t{\n\t\tchar c ;\n\t\tcin >> c;\n\t\tint l = read(),r = read(),m = read();\n\t\tif(c == 'M') adde(1,1,n,l,r,m);\n\t\telse printf(\"%d\\n\",query(1,1,n,l,r,m));\n\t}\n}\t\n```\n\n",
        "postTime": 1540210887,
        "uid": 86721,
        "name": "L_M_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e4d\u4e00\u770b\uff0c\u662f\u533a\u95f4\u4fee\u6539+\u67e5\u8be2\uff0c\u4ee5\u4e3a\u662f\u7ebf\u6bb5\u6811\uff0c\u7ed3\u679c\u53d1\u73b0\u7ebf\u6bb5\u6811\u505a\u4e0d\u4e86\u3002\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a\u5206\u5757\u3002\n\n\u5206\u5757\u7684\u601d\u60f3\u5c31\u662f\u628a\u6574\u4e2a\u6570\u5217\u5206\u6210sqrt(n)\u5757\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u5757\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u5176\u4e2d\u9700\u8981\u7279\u522b\u5904\u7406\u7684\uff0c\u662f\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u4e00\u5c0f\u6bb5\u4e0d\u5728\u6574\u5757\u5927\u533a\u95f4\u5185\u7684\u90e8\u5206\u3002\n\n\u5177\u4f53\u770b\u4ee3\u7801\uff08\u81ea\u8ba4\u4e3a\u5199\u5f97\u5f88\u77ed\u4e86\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u6ce8\u91ca\u5f88\u8be6\u7ec6\u7684\uff09\uff1a\n\n------------\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1000010;\nint bl, a[N], b[N], n, AD[1010];\n          \nvoid add(int l, int r, int w)\n{\n//\u5de6\u8fb9\u4e00\u5c0f\u5757 \n    int lp = min(r, (l / bl + 1) * bl - 1);//\u5de6\u8fb9\u7684\u4e00\u5c0f\u5757\u7684\u53f3\u7aef\u70b9 \n    for (int i = l; i <= lp; i++)\n\t\ta[i] += w;//\u8fd9\u6bb5\u5c0f\u5757\u533a\u95f4\u76f4\u63a5\u52a0 \n    for (int i = l/bl*bl; i < min((l/bl+1)*bl, n); i++)\n\t\tb[i] = a[i];//\u4ece\u8fd9\u6bb5\u5c0f\u5757\u533a\u95f4\u590d\u5236\u4e0b\u6765\u6392\u5e8f \n    sort(b + (l/bl*bl), b + min((l/bl+1)*bl, n));//\u6392\u5e8f \n    if(lp == r)//\u5982\u679c\u662f\u5355\u70b9\uff0c\u8df3\u8fc7\u4e0b\u9762 \n\t\treturn;\n//\u53f3\u8fb9\u4e00\u5c0f\u5757 \n    int rp = r / bl * bl;//\u53f3\u8fb9\u4e00\u5c0f\u5757\u7684\u5de6\u7aef\u70b9 \n    for (int i = rp; i <= r; i++)\n\t\ta[i] += w;//\u8fd9\u6bb5\u5c0f\u5757\u533a\u95f4\u76f4\u63a5\u52a0 \n    for (int i = rp; i < (r/bl+1)*bl; i++)\n\t\tb[i] = a[i];//\u8fd9\u6bb5\u5c0f\u5757\u533a\u95f4\u590d\u5236\u4e0b\u6765\u6392\u5e8f \n    sort(b + rp, b + ((r/bl+1)*bl));//\u6392\u5e8f \n//\u5904\u7406\u4e2d\u95f4\u6574\u5757\u7684\u52a0 \n    int t = (lp + 1) / bl;//\u6574\u5757\u7684\u5de6\u7aef\u70b9 \n    while(t * bl < rp)//\u6574\u5757\u6574\u5757\u7684\u52a0\uff0c\u77e5\u9053\u53f3\u7aef\u70b9 \n\t\tAD[t++] += w;//AD\u8bb0\u5f55\u7684\u662f\u6574\u5757\u533a\u95f4\u7684\u52a0\n}\n\nint query(int l, int r, int w) \n{\n    int ret = 0;\n//\u5de6\u8fb9\u4e00\u5c0f\u5757 \n    int lp = min(r, (l / bl + 1) * bl - 1);//\u5de6\u8fb9\u7684\u4e00\u5c0f\u5757\u7684\u53f3\u7aef\u70b9 \n    for (int i = l; i <= lp; i++) \n\t\tif(a[i] + AD[i/bl] >= w)//i/bl\u5c31\u662fi\u6240\u5728\u7684\u5757 \n\t\t\tret++;//>=w\u5c31\u7d2f\u52a0 \n    if(lp == r) //\u5982\u679c\u662f\u5355\u70b9\uff0c\u8df3\u8fc7\u4e0b\u9762 \n\t\treturn ret;\n//\u53f3\u8fb9\u4e00\u5c0f\u5757 \n    int rp = r / bl * bl;//\u53f3\u8fb9\u4e00\u5c0f\u5757\u7684\u5de6\u7aef\u70b9\n    for (int i = rp; i <= r; i++) \n\t\tif(a[i] + AD[i/bl] >= w)//i/bl\u5c31\u662fi\u6240\u5728\u7684\u5757\n\t\t\tret++;//>=w\u5c31\u7d2f\u52a0 \n//\u4e0b\u9762\u662f\u5904\u7406\u4e2d\u95f4\u7684\u6574\u5757\u90e8\u5206 \n    int t = (lp+1) / bl;//\u6574\u5757\u7684\u5de6\u7aef\u70b9 \n    while(t * bl < rp) \n\t{\n        int L = t * bl, R = (t+1) * bl - 1;//l\u662f\u4e00\u5757\u7684\u5de6\u7aef\u70b9\uff0cr\u662f\u53f3\u7aef\u70b9 \n        while(L < R)//\u56e0\u4e3a\u6bcf\u4e00\u5757\u90fd\u662f\u662f\u6392\u597d\u5e8f\u7684\uff0c\u6240\u4ee5\u4e8c\u5206\u627e\u5230>=w\u7684 \n\t\t{\n            int Mid = (L + R) >> 1;//\u4e8c\u5206\u4e2d\u95f4\u503c \n            if(b[Mid] + AD[Mid/bl] >= w)//mid/bl\u5c31\u662fmid\u6240\u5728\u7684\u5757\n\t\t\t\tR = Mid;//\u5982\u679c>=w\u7684\uff0c\u5de6\u79fb \n            else L = Mid + 1;//\u5426\u5219\u53f3\u79fb \n        }\n        ret += (t+1)*bl - R;//\u8ba1\u7b97\u8fd9\u6bb5\u4e4b\u95f4\u6709\u591a\u5c11\u4e2a>=w\u7684,\u5373\u5757\u7684\u53f3\u7aef\u70b9-\u4e8c\u5206\u5f97\u5230\u7684\u65ad\u70b9 \n        if(R == (t+1)*bl-1 && b[R] + AD[R/bl] < w)//\u5982\u679c\u6574\u4e2a\u5757\u91cc\u9762\u90fd\u6ca1\u6709>=w\u7684 \n\t\t\tret--;//\u51cf\u53bb\u5305\u542b\u4e86\u81ea\u5df1\u76841\u4e2a \n        t++;//\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u5757 \n    }\n    return ret;//\u8fd4\u56de\u6709\u591a\u5c11>=w\u7684 \n}\n\nint main() {\n    int Q, L, R, w;\n    cin >> n >> Q;//n\u4e2a\u6570\uff0cQ\u4e2a\u8be2\u95ee \n    for (int i = 0; i < n; i++) \n\t\tcin >> a[i];//\u8bfb\u5165\u6570\u5217 \n    bl = sqrt(n); //\u6bcf\u4e00\u5757\u7684\u957f\u5ea6 \n    for (int i = 0; i < n; i++)\n\t\tb[i] = a[i];//\u590d\u5236\u4e0b\u6765 \n    for (int i = 0; i < n; i += bl)\n        sort(b + i, b + min(i+bl, n)) ;//\u7ed9\u6bcf\u4e00\u5757\u6392\u5e8f \n    char op[10];\n    while(Q--)//\u8be2\u95ee \n\t{\n        scanf(\"%s%d%d%d\", op, &L, &R, &w);\n        L--; R--;//\u56e0\u4e3a\u662f\u4ece0\u5f00\u59cb\u7684 \n        if(op[0] == 'M')//\u533a\u95f4\u52a0 \n\t\t\tadd(L, R, w);\n        else//\u533a\u95f4\u67e5\u8be2 \n\t\t\tprintf(\"%d\\n\", query(L, R, w));\n    }\n    return 0;\n}\n```",
        "postTime": 1538581659,
        "uid": 59097,
        "name": "\u5f20\u4ea6\u5f1b",
        "ccfLevel": 0,
        "title": "P2801 \u6559\u4e3b\u7684\u9b54\u6cd5"
    },
    {
        "content": "\u554a\u554a\u554a\u5199\u4e86\u4e24\u5929 \u7b2c\u4e00\u5929\u5199\u7684\u8c03\u4e86\u597d\u957f\u65f6\u95f4DEBUG\u5931\u8d25\uff0c\u6b7b\u6d3b WA 4\u4e2a\u70b9\n\n\u4e8e\u662f\u53c8\u91cd\u5199\u4e86\u4e00\u904d \u5b8c\u7f8e\u901a\u8fc7\n\n~~\u679c\u7136\u91cd\u5199\u662f\u89e3\u51b3\u795e\u79d8BUG\u7684\u6700\u4f73\u65b9\u6cd5~~\n\n\u987e\u540d\u601d\u4e49\uff0c\u5206\u5757\u5c31\u662f\u628a\u539f\u672c\u7684\u4e00\u5927\u5806\u6570\u636e\u5206\u5272\u6210\u4e00\u4e2a\u4e00\u4e2a\u7684\u5757\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u4e00\u6574\u5757\u7684\u6570\u636e\u505a\u4e00\u4e2a\u6574\u5408\uff0c\u4ece\u800c\u51cf\u5c0f\u67e5\u8be2\u7684\u6b21\u6570\u3002\n\n\u8fd9\u9053\u9898\u76ee\u9700\u8981\u652f\u6301\u7684\u64cd\u4f5c\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a\n\n- \u5757\u5185\u67e5\u8be2\n- \u6574\u5757\u67e5\u8be2\n- \u5757\u5185\u4fee\u6539\n- \u6574\u5757\u4fee\u6539\n\n\u7136\u540e\u6211\u4eec\u5206\u6790\uff1a\n\n- \u5bf9\u4e8e\u5757\u5185\u67e5\u8be2\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u67e5\u8be2\u5373\u53ef\u3002\n- \u5bf9\u4e8e\u6574\u5757\u67e5\u8be2\uff0c\u5982\u679c\u6570\u636e\u6709\u5e8f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u7684\u65b9\u6cd5\u67e5\u8be2\n- \u5bf9\u4e8e\u5757\u5185\u4fee\u6539\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u5b8c\u6392\u5e8f\u5373\u53ef\u3002\n- \u5bf9\u4e8e\u6574\u5757\u4fee\u6539\uff0c\u6211\u4eec\u6253\u4e0a\u4e00\u4e2a\u6807\u8bb0\uff08\u56e0\u4e3a\u5757\u5185\u6240\u6709\u7684\u6570\u90fd\u52a0\u4e0a\u540c\u4e00\u4e2a\u6570\u4e0d\u5f71\u54cd\u4ed6\u4eec\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\uff09\n\n\u8fd9\u6837\u4e00\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u641e\u5b9a\u5bf9\u4e00\u4e2a\u5757`block`\u9700\u8981\u652f\u6301\u7684\u51fd\u6570\u4e86\u3002\n\n\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nstruct Node{\n    int id;\n    long long val;\n};\n\nbool cmp(const Node &a,const Node &b){\n    return a.val<b.val;\n}\n\nclass B{\n    public:\n        Node num[1000];\n        int size;\n        long long tag;//\u6574\u5757\u4fee\u6539\u7684\u6807\u8bb0\n        int query(long long x,int l,int r);//\u5757\u5185\u66b4\u529b\u67e5\u8be2\n        int find(long long x);//\u6574\u5757\u4e8c\u5206\u67e5\u8be2\n        void add(long long x,int l,int r);//\u5757\u5185\u66b4\u529b\u4fee\u6539\n        void Bsort();//\u6392\u5e8f\n};\n\nvoid B::Bsort(){\n    sort(num,num+size,cmp);\n    return;\n}\n\nvoid B::add(long long x,int l,int r){\n    for(int i=0;i<size;i++){\n        if(num[i].id<=r&&num[i].id>=l){\n            num[i].val+=x;\n        }\n    }\n    sort(num,num+size,cmp);\n    return;\n}\n\nint B::find(long long x){//\u4e8c\u5206\u67e5\u627e\u5e76\u8fd4\u56de\u5927\u4e8e\u7b49\u4e8ex\u7684\u6570\u5b57\u6709\u51e0\u4e2a\n    int l=0,r=size-1,mid;\n    while(l<r-1){\n        mid=(l+r)>>1;\n        if(num[mid].val<x){\n            l=mid;\n        }else{\n            r=mid;\n        }\n    }\n    while(num[l].val<x){\n        l++;\n        if(l==size){\n            return 0;\n        }\n    }\n    while(num[l].val>=x){\n        l--;\n        if(l==-1){\n            return size;\n        }\n    }\n    return size-1-l;\n}\n\nint B::query(long long x,int l,int r){//\u66b4\u529b\u67e5\u8be2\u5728\u533a\u95f4[l,r]\u8303\u56f4\u5185\u5927\u4e8e\u7b49\u4e8ex\u7684\u6570\u5b57\u6709\u51e0\u4e2a\n    int ans=0;\n    for(int i=0;i<size;i++){\n        if(num[i].val>=x){\n            if(num[i].id>=l&&num[i].id<=r){\n                ans++;\n            }\n        }\n    }\n    return ans;\n}\n\nB block[1000];\nint N,S,Q;string ss;\n\nvoid init(){//\u521d\u59cb\u5316\u8bfb\u53d6\n    cin>>N>>Q;S=sqrt(N);long long x;\n    for(int i=0;i<S;i++){\n        block[i].size=S;\n        for(int j=0;j<S;j++){\n            scanf(\"%lld\",&x);\n            block[i].num[j].val=x;\n            block[i].num[j].id=i*S+j+1;\n        }\n        block[i].Bsort();\n    }\n    block[S].size=N-S*S;\n    for(int i=0;i<N-S*S;i++){\n        scanf(\"%lld\",&x);\n        block[S].num[i].val=x;\n        block[S].num[i].id=i+1+S*S;\n    }\n    if(block[S].size)\n        block[S].Bsort();\n    return;\n}\n\nint main(){\n    init();int ans;string ss;int left,right;long long c;int k_l,k_r;\n    while(Q--){\n        ans=0;\n        cin>>ss;scanf(\"%d%d%lld\",&left,&right,&c);\n        k_l=(left-1)/S;k_r=(right-1)/S;//k_l\u662f\u5de6\u5757\u53f7\uff0ck_r\u662f\u53f3\u5757\u53f7\n        if(ss==\"A\"){\n            if(k_l==k_r){//\u5728\u4e00\u4e2a\u5757\u5185\uff0c\u76f4\u63a5\u5757\u5185\u66b4\u529b\u67e5\u8be2\n                ans=block[k_l].query(c-block[k_l].tag,left,right);\n                printf(\"%d\\n\",ans);\n            }else{//\u4e0d\u518d\u4e00\u4e2a\u5757\u5185\uff0c\u9996\u5c3e\u66b4\u529b\u67e5\u8be2\uff0c\u4e2d\u95f4\u7684\u5757\u6574\u5757\u67e5\u8be2\n                ans+=block[k_l].query(c-block[k_l].tag,left,right);\n                ans+=block[k_r].query(c-block[k_r].tag,left,right);\n                for(int i=k_l+1;i<=k_r-1;i++){\n                    ans+=block[i].find(c-block[i].tag);\n                }\n                printf(\"%d\\n\",ans);\n            }\n        }else{//\u589e\u52a0\u7684\n            if(k_l==k_r){//\u5728\u4e00\u4e2a\u5757\u5185\uff0c\u66b4\u529b\u589e\u52a0\u8fd9\u4e2a\u5757\n                block[k_l].add(c,left,right);\n            }else{//\u4e0d\u518d\u4e00\u4e2a\u5757\u5185\uff0c\u9996\u5c3e\u66b4\u529b\u589e\u52a0\uff0c\u4e2d\u95f4\u6253\u4e0a\u6807\u8bb0\n                block[k_l].add(c,left,right);\n                block[k_r].add(c,left,right);\n                for(int i=k_l+1;i<=k_r-1;i++){\n                    block[i].tag+=c;\n                }\n            }\n        }\n    }\n    return 0;\n}\n```\n~~\uff08\u89c9\u5f97\u81ea\u5df1\u7684\u4ee3\u7801\u8bfb\u7740\u5e94\u8be5\u8fd8\u662f\u5f88\u987a\u7545\u7684\u9003\uff09~~",
        "postTime": 1525962249,
        "uid": 91315,
        "name": "sachzhou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "# \u4e8c\u6b21\u6570\u636e\u52a0\u5f3a\u540e\u4ecd\u7136\u80fdAC\u7684\u9898\u89e3...\n\n### \u601d\u8def:\n\n\u4f60\u4eec\u770b\u697c\u4e0b\u597d\u4e86.\n\n### Code&&\u4e24\u6b21\u88abHack\u7684\u5730\u65b9\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Nmax = 1000010;\nconst int Kmax = 1010;\nint n,q,data[Nmax],srt[Nmax],lnum[1010],rnum[1010],block,num,id[Nmax],add[1010];\n//\u6570\u7ec4\u8bf4\u660e:data\u4e3a\u539f\u59cb\u6570\u636e,srt\u4e3a\u5206\u5757\u6392\u5e8f\u540e\u7684\u6570\u636e,lnum\u4e3a\u67d0\u4e2a\u5757\u7684\u6700\u5de6\u8282\u70b9\u7684\u7f16\u53f7,rnum\u540c\u7406,add\u4e3a\u5bf9\u5757\u7684\u52a0\u6cd5\u6807\u8bb0,id\u4e3a\u6240\u5728\u5757\u7684\u7f16\u53f7.\nvoid Build(){\n\tblock=sqrt(n);\n\tnum=n/block;\n\tif(n%block)\n\t\t++num;\n\tfor(int i=1;i<=n;++i){\n\t\tid[i]=((i-1)/block)+1;\n\t\tsrt[i]=data[i];\n\t}\n\tfor(int i=1;i<=num;++i){\n\t\tlnum[i]=(i-1)*block+1;\n\t\trnum[i]=i*block;\n\t}\n\trnum[num]=n;\n\tfor(int i=1;i<=num;++i)\n\t\tsort(srt+lnum[i],srt+rnum[i]+1);\n}\nvoid updata(int pos1,int pos2,int nd){\n\tif(id[pos1]==id[pos2]){\n\t\tfor(int i=pos1;i<=pos2;++i)\n\t\t\tdata[i]+=nd;\n\t\tfor(int i=lnum[id[pos1]];i<=rnum[id[pos1]];++i)\n\t\t\tsrt[i]=data[i];\n\t\tsort(srt+lnum[id[pos1]],srt+rnum[id[pos1]]+1);\n\t\treturn;\n\t}\n\tfor(int p=pos1;p<=rnum[id[pos1]];++p)\n\t\tdata[p]+=nd;//\u8fd9\u662f\u7b2c\u4e00\u6b21\u88abhack\u7684\u5730\u65b9,\u539f\u56e0\u662fsrt\u4e0d\u4e00\u5b9a\u662fdata\u662f\u76f8\u540c\u4f4d\u7f6e\u7684,\u6240\u4ee5srt\u9700\u8981\u91cd\u65b0\u66f4\u65b0\u4e00\u6b21\n\tfor(int p=lnum[id[pos2]];p<=pos2;++p)\n\t\tdata[p]+=nd;//\u540c\u4e0a\n\tfor(int p=id[pos1]+1;p<id[pos2];++p)\n\t\tadd[p]+=nd;\n\tfor(int p=lnum[id[pos1]];p<=rnum[id[pos1]];++p)\n\t\tsrt[p]=data[p];\n\tsort(srt+lnum[id[pos1]],srt+rnum[id[pos1]]+1);\n\tfor(int p=lnum[id[pos2]];p<=rnum[id[pos2]];++p)\n\t\tsrt[p]=data[p];\n\tsort(srt+lnum[id[pos2]],srt+rnum[id[pos2]]+1);\n}\nint check(int p,int w){\n\tint ll=lnum[p],rr=rnum[p];\n\twhile(ll<=rr){\n\t\tint mid=(ll+rr)>>1;\n\t\tif(srt[mid]<w)ll=mid+1;\n\t\telse rr=mid-1;\n\t}\n\treturn rnum[p]-ll+1;\n}\nint ask(int pos1,int pos2,int k){\n\tint ans=0,nk=0;\n\tif(id[pos1]==id[pos2]){\n\t\tnk=k-add[id[pos1]];//\u7b2c\u4e8c\u6b21\u88abhack\u7684\u5730\u65b9,\u539f\u56e0\u662f\u5bf9\u4e8e\u6574\u5757\u7684\u6211\u4eec\u5e76\u6ca1\u6709\u641e\u5230\u6bcf\u4e00\u4e2a\u503c\u4e0a,\u800c\u662f\u5728\u5757\u4e0a\u6807\u8bb0,\u6240\u4ee5k\u9700\u8981\u51cf\u53bb\u52a0\u6cd5\u6807\u8bb0\n\t\tfor(int i=pos1;i<=pos2;++i)\n\t\t\tif(data[i]>=nk)\n\t\t\t\t++ans;\n\t\treturn ans;\n\t}\n\tnk=k-add[id[pos1]];//\u540c\u4e0a\n\tfor(int p=pos1;p<=rnum[id[pos1]];++p)\n\t\tif(data[p]>=nk)++ans;\n\tnk=k-add[id[pos2]];//\u540c\u4e0a\n\tfor(int p=lnum[id[pos2]];p<=pos2;++p)\n\t\tif(data[p]>=nk)++ans;\n\tfor(int p=id[pos1]+1;p<id[pos2];++p)\n\t\tans+=check(p,k-add[p]);\n\treturn ans;\n}\nchar opt;int p1,p2,p3;\nint main(){\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",&data[i]);\n\tBuild();\n\tfor(int i=1;i<=q;++i){\n\t\tfor(opt=getchar();opt!='A'&&opt!='M';opt=getchar());\n\t\tscanf(\"%d%d%d\",&p1,&p2,&p3);\n\t\tswitch(opt){\n\t\t\tcase 'A':\n\t\t\t\tprintf(\"%d\\n\",ask(p1,p2,p3));\n\t\t\t\tbreak;\n\t\t\tcase 'M':\n\t\t\t\tupdata(p1,p2,p3);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1521984468,
        "uid": 43931,
        "name": "SofanHe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u88f8\u9898\uff0c\u5c31\u662f\u8981\u6539\u4e00\u4e0bquery\u51fd\u6570\n\n1.\u5148\u6253\u4e00\u4e2a\u652f\u6301\u533a\u95f4\u4fee\u6539\uff0c\u67e5\u8be2\u533a\u95f4\u6700\u5c0f\u503c\u7684\u7684\u666e\u901a\u7ebf\u6bb5\u6811\n\n2\u628aif(L<=l&&r<=R)return a[cur];\u6539\u6210\u4e0b\u9762\u8fd9\u4e24\u53e5\n.\n\nif(L<=l&&r<=R&&a[cur]>=num)return r-l+1;\n    \nif(l==r)return a[cur]>=num;\n\n\u4f5c\u7528\uff1a\u5982\u679c\u672c\u533a\u95f4\u6700\u5c0f\u503c\u6bd4num\u5927\uff0c\u76f4\u63a5\u628a\u6574\u4e2a\u533a\u95f4\u957f\u5ea6\u8f93\u51fa\uff0c\u5426\u5219\u7ee7\u7eed\u6267\u884c\u4e8c\u5206\uff08\u5206\u6210\u4e86\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u5f53\u7136\u8981\u505c\u4e0b\uff09\n\n~~\u6bd4\u666e\u901a\u7684\u5206\u5757\u80af\u5b9a\u662f\u8981\u5feb\u4e0d\u5c11 O2 172MS~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\ninline int read()\n{\n      int x=0,f=1;\n      char ch=getchar();\n      while(ch>'9'||ch<'0')\n      {\n          if(ch=='-')f=-1;\n          ch=getchar();\n      }\n      while(ch<='9'&&ch>='0')\n      {\n          x=x*10+ch-'0';\n          ch=getchar();\n      }\n      return x*f;\n}\nint n,m,a[4000001],lazy[4000001],k[1000001],x,y,z;char c;\nvoid buildtree(int l,int r,int cur)\n{\n     if(l==r)\n     {\n          a[cur]=k[l];\n          return ;\n     }\n     int mid=(l+r)>>1;\n     buildtree(l,mid,cur<<1);\n     buildtree(mid+1,r,cur<<1|1);\n     a[cur]=min(a[cur<<1],a[cur<<1|1]);\n}\nvoid pushdown(int cur)\n{\n     if(lazy[cur]==0)return;\n     lazy[cur<<1]+=lazy[cur];\n     lazy[cur<<1|1]+=lazy[cur];\n     a[cur<<1]+=lazy[cur];\n     a[cur<<1|1]+=lazy[cur];\n     lazy[cur]=0;\n}\nvoid updata(int l,int r,int L,int R,int cost,int cur)\n{\n     if(L<=l&&r<=R)\n     {\n         a[cur]+=cost;\n         lazy[cur]+=cost;\n         return ;\n     }\n     int mid=(l+r)>>1;\n     pushdown(cur);\n     if(L<=mid)updata(l,mid,L,R,cost,cur<<1);\n     if(R>=mid+1)updata(mid+1,r,L,R,cost,cur<<1|1);\n     a[cur]=min(a[cur<<1],a[cur<<1|1]);\n}\nint query(int l,int r,int L,int R,int num,int cur)\n{\n    if(L<=l&&r<=R&&a[cur]>=num)return r-l+1;\n    if(l==r)return a[cur]>=num;\n    int mid=(l+r)>>1,ans=0;\n    pushdown(cur);\n    if(L<=mid)ans+=query(l,mid,L,R,num,cur<<1);\n    if(R>=mid+1)ans+=query(mid+1,r,L,R,num,cur<<1|1);\n    return ans;\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n;i++)k[i]=read();\n    buildtree(1,n,1);\n    for(int i=1;i<=m;i++)\n    {\n         cin>>c;x=read();y=read();z=read();\n         if(c=='M')updata(1,n,x,y,z,1);\n         if(c=='A')printf(\"%d\\n\",query(1,n,x,y,z,1));\n    }\n    system(\"pause\");\n    return 0;\n}\n\n\n```",
        "postTime": 1570172265,
        "uid": 31294,
        "name": "\u529f\u5728\u4e0d\u820d",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    },
    {
        "content": "\u88f8\u9898\u4e00\u9053\u3002\u7136\u800c\u6211\u5e76\u6ca1\u6709\u4e00\u4e0b\u60f3\u5230\n\n\u8fd9\u9898\u7b2c\u4e00\u773c\u662f\u5206\u5757+\u6811\u72b6\u6570\u7ec4\u3002\u540e\u6765\u53d1\u89c9\u7a7a\u95f4\u590d\u6742\u5ea6\u8c8c\u4f3c\u6709\u70b9\u95ee\u9898\u3002\uff08\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u80fd\u53ef\u4ee5\u5361\u8fc7\u53bb\uff1f\uff1f\uff09\n\n\u53c8\u60f3\u4e86\u60f3\u53d1\u73b0\u6392\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u67e5\u8be2\uff1a\u5927\u5757\u4e8c\u5206\u67e5\u8be2\uff0c\u5c0f\u5757\u66b4\u529b\u4e00\u904d\u3002\n\n\u66f4\u65b0\uff1a\u5927\u5757\u6253\u6807\u8bb0\uff08\u56e0\u4e3a\u52a0\u6cd5\u6807\u8bb0\u4e0d\u5f71\u54cd\u6392\u5217\u987a\u5e8f\uff09\uff0c\u5c0f\u5757\u66b4\u529b\u52a0\u5b8c\u4e4b\u540e\u91cd\u6784\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst int maxb=1e4+5,maxn=1e6+5;\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\nstruct node{\n\tint x,id;\n}a[maxn];\nint n,q,l[maxb],r[maxb],block,cnt,belong[maxn];\ninline void init(){\n\tn=read(); q=read(); block=(int)sqrt(n);\n\tfor (int i=1;i<=n;i++){\n\t\ta[i].x=read(); a[i].id=i; \n\t\tbelong[i]=(i-1)/block+1;\n\t}\n\tcnt=belong[n];\n\tfor (int i=1;i<=cnt;i++){\n\t\tl[i]=r[i-1]+1;\n\t\tr[i]=i*block;\n\t}\n}\ninline bool cmp(node A,node B){\n\treturn A.x<B.x;\n}\nint plu[maxb];\ninline void rebuild(int x){\n\tfor (int i=l[x];i<=r[x];i++){\n\t\ta[i].x+=plu[x];\n\t}\n\tsort(a+l[x],a+r[x]+1,cmp);\n\tplu[x]=0;\n}\ninline void work(int x,int L,int R,int W){\n\tfor (int i=l[x];i<=r[x];i++){\n\t\tif (a[i].id>=L&&a[i].id<=R){\n\t\t\ta[i].x+=W;\n\t\t}\n\t}\n\trebuild(belong[L]);\n}\ninline void plus(int L,int R,int W){\n\tint ll=belong[L]+1,rr=belong[R]-1;\n\tfor (int i=ll;i<=rr;i++) plu[i]+=W;\n\twork(belong[L],L,R,W);\n\tif (belong[L]!=belong[R]){\n\t\twork(belong[R],L,R,W);\n\t}\n}\ninline int find(int x,int w){\n\tint L=l[x],R=r[x];\n\tif (a[r[x]].x<w) return 0;\n\twhile (L<R){\n\t\tint mid=(L+R)>>1;\n\t\tif (a[mid].x>=w) R=mid;\n\t\t\telse L=mid+1;  \n\t}\n\treturn r[x]-L+1;\n}\ninline int qu(int x,int L,int R,int W){\n\tint ans=0;\n\tfor (int i=l[x];i<=r[x];i++){\n\t\tif (a[i].id>=L&&a[i].id<=R){\n\t\t\tif (a[i].x+plu[x]>=W) ans++;\n\t\t}\n\t}\n\treturn ans;\n}\ninline int query(int L,int R,int W){\n\tint ll=belong[L]+1,rr=belong[R]-1,ans=0;\n\tfor (int i=ll;i<=rr;i++) ans+=find(i,W-plu[i]);\n\tans+=qu(belong[L],L,R,W);\n\tif (belong[L]!=belong[R]){\n\t\tans+=qu(belong[R],L,R,W);\n\t}\n\treturn ans;\n}\ninline void solve(){\n\tfor (int i=1;i<=cnt;i++){\n\t\tsort(a+l[i],a+r[i]+1,cmp);\n\t}\n\tfor (int i=1;i<=q;i++){\n\t\tchar s[10]; int L,R,W;\n\t\tscanf(\"%s\",s+1);\n\t\tL=read(); R=read(); W=read();\n\t\tif (s[1]=='M') plus(L,R,W); \n\t\t\telse writeln(query(L,R,W));\n\t}\n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n} \n```",
        "postTime": 1523797669,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2801 \u3010\u6559\u4e3b\u7684\u9b54\u6cd5\u3011"
    }
]