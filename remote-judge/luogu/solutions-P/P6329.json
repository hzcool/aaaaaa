[
    {
        "content": "**upd**\uff1a\u4ee3\u7801\u6dfb\u52a0\u4e86\u6ce8\u91ca\n\n**upd**\uff1a\u6709\u540c\u5b66\u63d0\u5230 $\\texttt{vector}$ \u7684 resize \u95ee\u9898\uff0cemmm\u6587\u7ae0\u91cc\u8bf4\u7684\u662f\u5f00 $\\texttt{vector}$ \u7684\u5927\u5c0f\u5e94\u8be5\u662f \u5b50\u6811\u5927\u5c0f $+1$\uff0c\u4f46\u662f\u8fd9\u91cc\u8981\u5b9e\u73b0\u6811\u72b6\u6570\u7ec4\uff0c\u6240\u4ee5\u4e0b\u6807\u4ece $1$ \u5f00\u59cb\uff0c\u8fd8\u8981\u591a\u5f00\u4e00\u4f4d\uff0c\u6240\u4ee5\u5e94\u8be5\u662f `resize(\u5b50\u6811\u5927\u5c0f+2)`\uff0c\u4ee3\u7801\u7565\u6709\u4fee\u6539\uff08\u4e3b\u8981\u662f $\\texttt{vector}$ \u5927\u5c0f\u7684\u4fee\u6539\uff09\u3002\n\n> \u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u8fd9\u9053\u81ea\u5df1\u8c03\u4e86\u597d\u4e45\u7684\u9898...  \n\n### \u5199\u5728\u524d\u9762\n\u7531\u4e8e\u592a\u83dc\uff0c\u82b1\u4e86\u5f88\u4e45\u624d\u5f04\u61c2\u3002\u4e5f\u5e0c\u671b\u80fd\u591f\u4ee5\u6b64\u6587\u5e2e\u52a9\u66f4\u591a\u60f3\u8981\u5b66\u4e60\u70b9\u5206\u6811\u7684\u540c\u5b66\u3002\u5982\u6709\u95ee\u9898\uff0c\u8bf7\u5728\u8bc4\u8bba\u533a\u6307\u51fa\u3002\n### \u5173\u4e8e\u70b9\u5206\u6cbb\n\u9996\u5148\uff0c\u8981\u5b66\u4e60\u70b9\u5206\u6811\uff0c\u9996\u5148\u8981\u7406\u89e3\u70b9\u5206\u6cbb\u7684\u8fc7\u7a0b\u3002 \n\n\u6309\u7167\u6211\u7684\u7406\u89e3\uff0c\u70b9\u5206\u6cbb\u7684\u8fc7\u7a0b\u5728\u4e8e\uff1a\u5148\u5904\u7406\u5f53\u524d\u6811\u7684\u7b54\u6848\uff0c\u518d\u9009\u62e9\u5f53\u524d\u6811\u7684\u91cd\u5fc3\uff0c\u628a\u5b83\u5220\u6389\uff0c\u7136\u540e\u9012\u5f52\u5730\u5904\u7406\u5269\u4e0b\u7684\u5b50\u6811\u3002  \n\n\u8fd9\u6837\u505a\u53ef\u4ee5\u505a\u5230\u6bd4\u8f83\u4f18\u79c0\u7684\u590d\u6742\u5ea6\u3002   \n\n### \u5173\u4e8e\u70b9\u5206\u6811\n\u70b9\u5206\u6811\u53ef\u4ee5\u770b\u505a\u662f\u5c06\u6574\u4e2a\u70b9\u5206\u6cbb\u8fc7\u7a0b\u8bb0\u5f55\u4e0b\u6765\uff0c\u5c06\u5f53\u524d\u6811\u7684\u91cd\u5fc3\u4e0e\u4e0a\u4e00\u5c42\u7684\u6811\u7684\u91cd\u5fc3\u8fde\u8fb9\uff08\u540e\u8005\u89c6\u4f5c\u524d\u8005\u7684\u7236\u4eb2\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5f62\u6001\u6bd4\u8f83\u4f18\u79c0\u7684\u91cd\u6784\u6811\uff0c\u53ef\u4ee5\u4ee5\u6bd4\u8f83\u4f18\u79c0\u7684\u590d\u6742\u5ea6\u89e3\u51b3\u4e0d\u8003\u8651\u6811\u7684\u5f62\u6001\u7684\u4e00\u7c7b\u95ee\u9898\u3002  \n\n### \u56de\u5230\u9898\u76ee\n\u8fd9\u9053\u9898\u8981\u6211\u4eec\u52a8\u6001\u7ef4\u62a4\u5bf9\u4e8e\u67d0\u4e2a\u70b9\u8ddd\u79bb\u5c0f\u4e8e $k$ \u7684\u70b9\u7684\u6743\u503c\u548c\uff0c\u8fd9\u5c31\u662f\u4e0a\u8ff0\u7684\u5178\u578b\u7684**\u4e0e\u6811\u7684\u5f62\u6001\u65e0\u5173\u7684\u4e00\u7c7b\u9898\u76ee**\u3002\n\n\u8003\u8651\u4e00\u79cd\u66b4\u529b\uff0c\u6bcf\u6b21\u8be2\u95ee\u90fd\u7528\u70b9\u5206\u6cbb\u66b4\u529b\u6c42\u89e3\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u90fd\u627e\u5230\u91cd\u5fc3\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002  \n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u591a\u6b21\u8fd9\u6837\u7684\u8be2\u95ee\uff0c\u90fd\u8fdb\u884c\u4e86\u627e\u91cd\u5fc3\u7684\u64cd\u4f5c\uff0c\u4f46\u8fd9\u662f\u5b8c\u5168\u91cd\u590d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u628a\u5bf9\u4e8e\u6bcf\u4e2a\u91cd\u5fc3\u7684\u7b54\u6848\u8bb0\u5f55\u4e0b\u6765\u5e76\u67e5\u8be2\u5373\u53ef\u3002\n\n\u6211\u4eec\u5177\u4f53\u5730\u6765\u770b\u4e00\u770b\u8fd9\u4e2a\u67e5\u8be2\u64cd\u4f5c\u3002\n\n\u5728\u70b9\u5206\u6cbb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u6709\u4e00\u4e2a\u6570\u7ec4 $C$ \u6765\u8bb0\u5f55\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u5176\u5b50\u6811\u5185\u7684\u70b9\u5230\u5b83\u7684\u6bcf\u4e2a\u8ddd\u79bb\u5bf9\u5e94\u7684\u7b54\u6848\u3002\n\n\u8fd9\u662f\u539f\u6811\uff0c\u6bcf\u6761\u8fb9\u8fb9\u6743\u4e3a $1$ \u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/t7ktdfk8.png)\n\n\u8fd9\u662f\u4e00\u79cd\u91cd\u6784\u6811\u3002\uff08\u5176\u5b9e\u4e5f\u6709\u4e00\u79cd\u91cd\u6784\u6811\u548c\u539f\u6811\u7684\u5f62\u6001\u5b8c\u5168\u4e00\u81f4\uff0c\u4f46\u4e3a\u4e86\u4ee5\u793a\u533a\u522b\uff0c\u6211\u7528\u4e86\u8fd9\u4e2a\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jeiwmvjh.png)\n\n\u90a3\u4e48\u8003\u8651\u5f53 $x=4$ \uff0c $y=2$ \u65f6\uff0c\u901a\u8fc7\u539f\u56fe\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u5b9e\u5c31\u662f\u67e5\u8be2\u8282\u70b9 $1$ \u3001 $3$ \u7684\u6743\u503c\u548c\u3002\n\n\u90a3\u6211\u4eec\u518d\u770b\u770b\u5728\u91cd\u6784\u6811\u4e0a\u600e\u4e48\u505a\u3002\n\n\u4ece\u8282\u70b9 $4$ \u51fa\u53d1\uff0c\u67e5\u8be2\u8ddd\u79bb $\u22642$ \u7684\u7b54\u6848\u3002  \n\n\n\u56de\u5fc6\u4e00\u4e0b\u70b9\u5206\u6cbb\u7684\u505a\u6cd5\uff0c\u4ece\u6574\u68f5\u6811\u7684\u91cd\u5fc3\u4e00\u6b65\u6b65\u5730\u5206\u6cbb\u5230\u5f53\u524d\u8282\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ece\u73b0\u5728\u91cd\u6784\u6811\u7684\u8282\u70b9\u4e00\u76f4\u7edf\u8ba1\u5230\u5f53\u524d\u8282\u70b9\u3002\n\n\u8fd9\u4e2a\u662f\u5f88\u597d\u505a\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u91cd\u6784\u6811\u7684\u7236\u5b50\u5173\u7cfb\uff0c\u8ba1\u7b97\u5f53\u524d\u8282\u70b9\u7b54\u6848\u9700\u8981\u7ecf\u8fc7\u7684\u70b9\u5373\u4e3a\u91cd\u6784\u6811\u6839\u8282\u70b9\u5230\u5f53\u524d\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u518d\u6765\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u4e0a\u9762\u8bf4\u5230\uff0c\u8981\u63d0\u51fa\u5f53\u524d\u8282\u70b9\u5230\u91cd\u6784\u6811\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u70b9\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4ece\u5f53\u524d\u8282\u70b9\u4e00\u76f4\u8df3\u7236\u4eb2\uff0c\u8df3\u5230\u6839\u4e3a\u6b62\u3002\n\n\u6700\u5f00\u59cb\u5728 $x$ \u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5c06 $x$ \u5b50\u6811\u7684\u8282\u70b9\u5bf9 $x$ \u7684\u8d21\u732e\u52a0\u5165\u7b54\u6848\u5373\u53ef\u3002\u518d\u8003\u8651\u5728\u5f80\u4e0a\u722c\u7684\u8fc7\u7a0b\u4e2d\uff08\u8bbe\u5f53\u524d\u8282\u70b9\u4e3a $u$ \uff0c\u4e0e $x$ \u7684\u8ddd\u79bb\u4e3a $dis$ \uff09\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u662f**\u5728 $u$ \u5b50\u6811\u5185\u4f46\u4e0d\u5728 $x$ \u5b50\u6811\u5185\u7684\u8282\u70b9\u5bf9 $x$ \u7684\u8d21\u732e**\uff0c\u4e5f\u5c31\u662f\u5728 $u$ \u5b50\u6811\u4f46\u4e0d\u5728 $x$ \u5b50\u6811\u7684\u8282\u70b9\u4e2d\u4e0e $x$ \u7684\u8ddd\u79bb $\u2264y-dis$ \u7684\u8282\u70b9\u7684\u6743\u503c\u548c\u3002\u90a3\u4e48\u5bb9\u65a5\u4e00\u4e0b\u53ef\u4ee5\u5f97\u5230\uff0c\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u4e0e $u$ \u5b50\u6811\u5185 $u$ \u8ddd\u79bb $\u2264y-dis$ \u7684\u8282\u70b9\u6743\u503c\u548c\u51cf\u53bb $x$ \u5b50\u6811\u5185\u4e0e $u$ \u8ddd\u79bb $\u2264y-dis$ \u7684\u6743\u503c\u548c\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u8bb0 $W_{i,j}$ \u4e3a $i$ \u5b50\u6811\u5185\u4e0e $i$ \u7684\u8ddd\u79bb\u4e3a $j$ \u7684\u8282\u70b9\u6743\u503c\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u8be2\u95ee\u7684\u90fd\u662f $W_i$ \u7684\u524d\u7f00\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u8fd9\u4e9b\u4fe1\u606f\u4e86\u3002\n\n\u6ce8\u610f\u4e0a\u9762\u8981\u7528\u5230\u7684\u4fe1\u606f\u6709\u4e24\u4e2a\uff1a\n1. $i$ \u5b50\u6811\u5185\u8282\u70b9\u5bf9 $i$ \u7684\u8d21\u732e\u3002\n2. $i$ \u8282\u70b9\u5b50\u6811\u5185\u8282\u70b9\u5bf9\u5176 $i$ \u7236\u4eb2\u7684\u8d21\u732e\u3002  \n\n\u6211\u4eec\u5206\u522b\u7528 $C_{0,i},C_{1,i}$ \u8868\u793a\u8fd9\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u3002\n\n\u90a3\u4e48\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u5019\u53ea\u9700\u8981\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u5b8c\u6210\u5373\u53ef\uff0c\u6bcf\u6b21\u8be2\u95ee\u590d\u6742\u5ea6\u662f $O(\\log^2n)$ \u7684\u3002\u6ce8\u610f\u7531\u4e8e $n$ \u5f88\u5927\uff0c\u76f4\u63a5\u66b4\u529b\u5f00\u6570\u7ec4\u5b58\u4e0d\u4e0b\uff0c\u53ef\u4ee5\u7528 $\\texttt{vector}$ \u6765\u5b58\uff0c\u5927\u5c0f\u4e3a $i$ \u7684\u5b50\u6811\u5927\u5c0f $+1$ \uff08\u7531\u4e8e\u8ddd\u79bb\u53ef\u80fd\u4e3a $0$ \uff0c\u9700\u8981\u5c06\u6811\u72b6\u6570\u7ec4\u6574\u4f53\u53f3\u79fb\uff0c\u5982 $C_{0,i,j}$ \u5176\u5b9e\u8868\u793a\u7684\u662f $i$ \u5b50\u6811\u5185\u4e0e $i$ \u8ddd\u79bb\u4e3a $j-1$ \u7684\u8282\u70b9\u5bf9 $i$ \u7684\u8d21\u732e\uff09\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u6309\u7167\u4e0a\u8ff0\u89c4\u5219\uff0c\u4fee\u6539 $C_{0,i},C_{1,i}$ \u5373\u53ef\uff0c\u6bcf\u6b21\u4fee\u6539\u590d\u6742\u5ea6\u4e5f\u662f $O(\\log^2n)$ \u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u901a\u8fc7\u8fd9\u9053\u9898\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define REP(u) for(int i = H[u], v; i, v = E[i].v; i = E[i].n)\nusing namespace std;\nconst int maxn = 2e5 + 111, inf = 1e9 + 7;\nint N, M, tot, ans, rt, sum, minn, cnt;\nint val[maxn], H[maxn], sz[maxn], fa[maxn], dep[maxn], pos[maxn], ol[maxn<<1][21], lg[maxn<<1];\n//val\u8868\u793a\u8be5\u57ce\u5e02\u7684\u4ef7\u503c\uff0csz\u8868\u793a\u8be5\u70b9\u5b50\u6811\u7684\u5927\u5c0f\uff0cfa\u8868\u793a\u8be5\u70b9\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2\u8282\u70b9\uff0cdep\u8868\u793a\u8be5\u70b9\u7684\u6df1\u5ea6 \nbool vis[maxn];\nvector<int>C[2][maxn];\n//C[0][i]\u8868\u793ai\u5b50\u6811\u5185\u8282\u70b9\u5bf9i\u7684\u8d21\u732e\n//C[1][i]\u8868\u793ai\u5b50\u6811\u5185\u8282\u70b9\u5bf9i\u7236\u4eb2\u7684\u8d21\u732e \nstruct edge {\n\tint n, v;\n}E[maxn<<1];\nvoid add(int u, int v)\n{\n\tE[++tot] = (edge) {H[u], v};\n\tH[u] = tot;\n}\nvoid dfs0(int u, int f)\n{\n\tol[++cnt][0] = u, pos[u] = cnt;\n\tREP(u) if(v ^ f) dep[v] = dep[u] + 1, dfs0(v, u), ol[++cnt][0] = u;\n}\nint get_min(int a, int b)\n{\n\treturn dep[a] < dep[b] ? a : b;\n}\nvoid get_ol() \n{\n\tfor(int i = 1; i <= cnt; ++i) lg[i] = 31 - __builtin_clz(i);\n\tfor(int t = 1; 1 << t <= cnt; ++t)\n\t\tfor(int i = 1; i + (1 <<t) <= cnt; ++i)\n\t\t\tol[i][t] = get_min(ol[i][t - 1], ol[i + (1 << (t - 1))][t - 1]);\n}\nint get_dis(int u, int v)\n{\n\tif(pos[u] > pos[v]) swap(u, v);\n\tint uu = pos[u], vv = pos[v], len = vv - uu + 1;\n\tint lca = get_min(ol[uu][lg[len]], ol[vv - (1 << lg[len]) + 1][lg[len]]);\n\treturn dep[u] + dep[v] - 2 * dep[lca];\n}\n#define lowbit(x) (x & -x)\nvoid upd(int u, int opt, int x, int addv)\n{\n\tx++;\n\tfor(int i = x; i <= sz[u]; i += lowbit(i)) C[opt][u][i] += addv;\n}\nint qry(int u, int opt, int x)\n{\n\tx++;\n\tint res = 0;\n\tx = min(x, sz[u]);\n\tfor(int i = x; i; i -= lowbit(i)) res += C[opt][u][i];\n\treturn res;\n}\nvoid find_rt(int u, int f) //\u627e\u91cd\u5fc3 \n{\n\tsz[u] = 1;\n\tint res = 0;\n\tREP(u) if(f ^ v && !vis[v]) find_rt(v, u), sz[u] += sz[v], res = max(res, sz[v]);\n\tres = max(res, sum - sz[u]);\n\tif(res < minn) minn = res, rt = u; \n}\nvoid dfs(int u) //\u5efa\u7acb\u70b9\u5206\u6811 \n{\n\tvis[u] = 1;\n\tsz[u] = sum+1;\n\tC[0][u].resize(sz[u]+1);\n\tC[1][u].resize(sz[u]+1);\n\tREP(u) if(!vis[v]) \n\t{\n\t\tsum = sz[v], rt = 0, minn = inf;\n\t\tfind_rt(v, 0);\n\t\tfa[rt] = u;\n\t\tdfs(rt);\n\t}\n}\nvoid modify(int u, int w)\n{\n\tfor(int i = u; i; i = fa[i]) upd(i, 0, get_dis(u, i), w); \n\tfor(int i = u; fa[i]; i = fa[i]) upd(i, 1, get_dis(u, fa[i]), w);\t\n}\nint main()\n{\n\tint opt, x, y;\n\tscanf(\"%d%d\", &N, &M);\n\tfor(int i = 1; i <= N; ++i) scanf(\"%d\", &val[i]);\n\tfor(int i = 1; i <  N; ++i) scanf(\"%d%d\", &x, &y), add(x, y), add(y, x);\n\tdfs0(1, 0);\n\tget_ol();\n\tsum = N, minn = inf;\n\tfind_rt(1, 0);\n\tdfs(rt);\n\tfor(int i = 1; i <= N; ++i) modify(i, val[i]); \n\twhile(M--)\n\t{\n\t\tscanf(\"%d%d%d\", &opt, &x, &y);\n\t\tx ^= ans, y ^= ans; \n\t\tif(!opt) \n\t\t{\n\t\t\tans = 0;\n\t\t\tans += qry(x, 0, y); //x\u5b50\u6811\u5185\u5230\u5176\u8ddd\u79bb\u4e3ay\u7684\u70b9\u5bf9x\u7684\u8d21\u732e \n\t\t\tfor(int i = x; fa[i]; i = fa[i])\n\t\t\t{\n\t\t\t\tint dis = get_dis(x, fa[i]);  \n\t\t\t\tif(y >= dis) ans += qry(fa[i], 0, y - dis) - qry(i, 1, y - dis); //x\u5b50\u6811\u5916\u5230\u5176\u8ddd\u79bb\u4e3ay\u7684\u70b9 \n\t\t\t\t//fa[i]\u5b50\u6811\u4e2d\u9664x\u6240\u5728\u5b50\u6811\u5bf9x\u7684\u8d21\u732e \u5373\u4e3a fa[i]\u5b50\u6811\u5bf9\u5b83\u7684\u603b\u8d21\u732e \u51cf\u53bb x\u6240\u5728\u5b50\u6811\u5bf9fa[i]\u7684\u8d21\u732e \n\t\t\t}\n\t\t\tprintf(\"%d\\n\", ans);\n\t\t}\n\t\telse modify(x, y - val[x]), val[x] = y; //\u5229\u7528\u5dee\u5206\u7684\u529e\u6cd5\u4fee\u6539\u5176\u5bf9\u70b9\u5206\u6811\u4e0a\u7956\u5148\u7684\u8d21\u732e \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1601362444,
        "uid": 234168,
        "name": "Periiya",
        "ccfLevel": 8,
        "title": "\u3010\u9898\u89e3\u3011P6329 \u3010\u6a21\u677f\u3011\u70b9\u5206\u6811 | \u9707\u6ce2"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u77e5\u9053\uff0c\u5355\u6b21\u8be2\u95ee\uff0c\u6811\u4e0a\u8def\u5f84\u7684\u95ee\u9898\u53ef\u4ee5\u7528\u70b9\u5206\u6cbb\u89e3\u51b3\u3002\n\n\u4f46\u5982\u679c\u52a0\u4e0a\u4ec0\u4e48 $q$ \u6b21\u8be2\u95ee\u4e4b\u7c7b\u7684\u4e1c\u897f\u600e\u4e48\u529e\u5462\uff1f\u6bd4\u5982\u8bf4\u8fd9\u9898\u3002\n\n\u663e\u7136\u6bcf\u6b21\u90fd\u8dd1\u4e00\u904d\u70b9\u5206\u6cbb\u65f6\u95f4\u590d\u6742\u5ea6\u80af\u5b9a\u5403\u4e0d\u6d88\u3002\n\n\u8003\u8651\u628a\u70b9\u5206\u6cbb\u7684\u8fc7\u7a0b\u79bb\u7ebf\u4e0b\u6765\uff0c\u5c06\u5f53\u524d\u6811\u7684\u91cd\u5fc3\u4e0e\u4e0a\u4e00\u5c42\u7684\u6811\u7684\u91cd\u5fc3\u8fde\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u70b9\u5206\u6811\u201d\n\n\u6bd4\u5982\u8bf4\u6211\u4eec\u6709\u5982\u4e0b\u56fe\u6240\u793a\u7684\u6811\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bd6910x4.png)\n\n\u5efa\u51fa\u70b9\u5206\u6811\u6765\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ay94t1ai.png)\n\n\u5f88\u660e\u663e\uff0c\u6211\u4eec\u5efa\u51fa\u7684\u70b9\u5206\u6811\u4e0e\u539f\u6811**\u51e0\u4e4e\u6ca1\u6709\u8054\u7cfb**\uff0c\u7236\u5b50\u5173\u7cfb\u5b8c\u5168\u88ab\u6253\u4e71\u4e86\uff0c\u4e5f\u65e0\u6cd5\u901a\u8fc7\u4e24\u70b9\u5728\u70b9\u5206\u6811\u4e0a\u7684\u8ddd\u79bb\u7b97\u51fa\u5b83\u4eec\u5728\u539f\u6811\u4e0a\u7684\u8ddd\u79bb\u3002\u751a\u81f3\u6709\u53ef\u80fd\u67d0\u4e24\u70b9\u5728\u70b9\u5206\u6811\u4e0a\u662f\u7236\u5b50\u5173\u7cfb\uff0c\u5728\u539f\u6811\u4e0a\u76f8\u9694\u5341\u4e07\u516b\u5343\u91cc\uff0c\u6216\u8005\u67d0\u4e24\u70b9\u5728\u539f\u6811\u4e0a\u662f\u7236\u5b50\u5173\u7cfb\uff0c\u5728\u70b9\u5206\u6811\u4e0a\u76f8\u9694\u5341\u4e07\u516b\u5343\u91cc\uff08\u5f53\u7136\u53ea\u662f\u76f8\u5bf9\u6765\u8bf4\uff09\u3002\n\n\u90a3\u4e48\u8fd9\u68f5\u6811\u5bf9\u4e8e\u6211\u4eec\u505a\u9898\u6709\u4ec0\u4e48\u5e2e\u52a9\u5462\uff1f\n\n\u6709\u7684\u95ee\u9898\u6211\u4eec\u4e0d\u662f\u975e\u5e38\u5173\u5fc3\u6811\u7684**\u5f62\u6001\u7279\u70b9**\uff0c\u6bd4\u5982**\u8def\u5f84\u95ee\u9898\uff0c\u8054\u901a\u5757\u95ee\u9898\uff0c\u5bfb\u627e\u5173\u952e\u70b9\u95ee\u9898**\u7b49\u7b49\uff0c\u4ee5\u8def\u5f84\u95ee\u9898\u4e3a\u4f8b\uff0c\u6211\u4eec\u4e0d\u4e00\u5b9a\u975e\u5f97\u67e5\u5230 $p,q$ \u7684 LCA \u624d\u53ef\u4ee5\u5904\u7406 $p,q$ \u7684\u8def\u5f84\u4fe1\u606f\uff0c\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u4ee5\u968f\u4fbf\u4ece\u8fd9\u4e2a\u8def\u5f84\u4e0a\u5bfb\u627e\u4e00\u4e2a\u5206\u5272\u70b9 $t$\uff0c\u53ea\u8981\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u7684\u5904\u7406 $p$ \u5230 $t$ \u548c $q$ \u5230 $t$ \u7684\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5904\u7406 $p$ \u5230 $q$ \u7684\u4fe1\u606f\u3002\n\n\u800c\u70b9\u5206\u6811\u6070\u6070\u5c31\u662f\u5bf9\u539f\u6811\u505a\u4e86\u8fd9\u6837\u7684\u6620\u5c04\u3002\n\n\u5b83\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a\n\n1. \u5b83\u7684\u9ad8\u5ea6\u4e0e**\u70b9\u5206\u6cbb\u7684\u6df1\u5ea6**\u4e00\u6837\uff0c\u53ea\u6709 $\\log n$ \u7ea7\u522b\uff0c\u8fd9\u4e2a\u6027\u8d28\u5f88\u5173\u952e\uff0c\u7531\u4e8e\u5b83\u7684\u9ad8\u5ea6\u53ea\u6709 $\\log n$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u641e\u51fa\u5404\u79cd\u5404\u6837\u5728\u4e00\u822c\u6811\u8bba\u91cc\u8fc7\u4e0d\u53bb\u7684\u66b4\u529b\u505a\u6cd5\uff0c\u6bd4\u5982\u8bf4\u5bf9\u6bcf\u4e2a\u70b9\u5f00\u4e2a\u5305\u542b\u5b50\u6811\u4e2d\u6240\u6709\u70b9\u7684 vector\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u53ea\u6709\u3002\n2. \u5bf9\u4e8e\u4efb\u610f\u4e24\u70b9 $u,v$\uff0c**\u552f\u4e00**\u53ef\u4ee5\u786e\u5b9a\u7684\u662f $u,v$ \u5728\u70b9\u5206\u6811\u4e0a\u7684 LCA **\u4e00\u5b9a\u5728 $u\\to v$ \u7684\u8def\u5f84\u4e0a**\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c$dis(u,v)=dis(u,lca)+dis(lca,v)$\u3002\n\n\u56de\u5230\u8fd9\u9898\u6765\uff0c\u6211\u4eec\u8981\u6c42 $\\sum\\limits_{dis(x,y)\\leq k}a_y$\u3002\n\n\u8003\u8651\u679a\u4e3e $x,y$ \u5728\u70b9\u5206\u6811\u4e0a\u7684 LCA $z$\uff08\u8fd9\u663e\u7136\u662f $\\log n$ \u7ea7\u522b\u7684\uff09\uff0c\u6839\u636e\u4e0a\u9762\u7684\u63a8\u8bba\u6709 $dis(x,y)=dis(x,z)+dis(y,z)$\u3002\n\n\u6545 $ans=\\sum\\limits_{dis(x,z)+dis(z,y)\\leq k\\& LCA(x,y)=z}a_y=\\sum\\limits_{dis(z,y)\\leq k-dis(x,z)\\&LCA(x,y)=z}a_y$\n\n\u8003\u8651\u4ec0\u4e48\u6837\u7684 $y$ \u6ee1\u8db3 $LCA(x,y)=z$\uff0c\u663e\u7136\u7b26\u5408\u8981\u6c42 $y$ \u7ec4\u6210\u7684\u96c6\u5408\u5c31\u662f $z$ \u7684\u5b50\u6811**\u62a0\u6389** $z$ \u5728 $x$ \u65b9\u5411\u4e0a\u7684\u513f\u5b50 $s$ \u7684\u5b50\u6811\u3002\u800c\u6211\u4eec\u8981\u6c42\u8fd9\u4e2a\u70b9\u96c6\u4e2d**\u5230 $z$ \u7684\u8ddd\u79bb $\\leq k-dis(x,z)$** \u7684\u70b9\u6743\u548c\u3002\u663e\u7136\u53ef\u4ee5\u62ff $z$ \u7684\u5b50\u6811\u5185\u5230 $z$ \u7684\u8ddd\u79bb $\\leq k-dis(x,z)$ \u7684\u70b9\u6743\u548c $-$ $s$ \u5b50\u6811\u4e2d\u5230 $z$ \u7684\u8ddd\u79bb $\\leq k-dis(x,z)$ \u7684\u70b9\u6743\u548c\u3002\n\n\u5bf9\u6bcf\u4e2a\u70b9 $x$ \u5efa\u4e00\u68f5\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u4e0b\u6807\u4e3a $i$ \u7684\u4f4d\u7f6e\u7ef4\u62a4 $x$ \u5b50\u6811\u5185\u6240\u6709 $dis(x,z)=i$ \u7684 $a_z$ \u7684\u548c\u3002\n\n\u90a3\u4e48\u6c42 $z$ \u5b50\u6811\u5185\u5230 $z$ \u7684\u8ddd\u79bb $\\leq k-dis(x,z)$ \u7684\u70b9\u6743\u548c\u5c31\u5728\u5bf9\u5e94\u7ebf\u6bb5\u6811\u4e0a\u67e5\u4e2a\u533a\u95f4\u548c\u5c31 ok \u4e86\u3002\n\n\u90a3 $z$ \u5728 $x$ \u65b9\u5411\u4e0a\u7684\u513f\u5b50 $s$ \u7684\u5b50\u6811\u600e\u4e48\u529e\u5462\uff1f\n\n\u521d\u5b66\u70b9\u5206\u6811\u7684\u840c\u65b0\uff08\u4f8b\u5982\u6211\uff09\u5f88\u5bb9\u6613\u8fdb\u5165\u4e00\u4e2a\u8bef\u533a\uff0c\u90a3\u5c31\u662f\u8fd9\u4e1c\u897f\u53ef\u4ee5\u5728 $s$ \u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u4e0a\u67e5 $[0,k-dis(x,z)-1]$ \u7684\u548c\u3002\u4f46\u8fd9\u663e\u7136\u662f\u9519\u7684\uff0c\u56e0\u4e3a\u4e24\u70b9\u5728\u70b9\u5206\u6811\u4e0a\u7684\u8ddd\u79bb\u4e0e\u4e24\u70b9\u5728\u539f\u6811\u4e0a\u7684\u8ddd\u79bb\u6ca1\u6709\u4e00\u4e01\u70b9\u8054\u7cfb\u3002\u5230 $s$ \u8ddd\u79bb $\\leq k-dis(x,z)-1$\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u5230 $z$ \u8ddd\u79bb $\\leq k-dis(x,z)$\u3002\n\n\u90a3\u4e48\u6b63\u89e3\u662f\u4ec0\u4e48\u5462\uff1f\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u518d\u5efa\u7acb\u4e00\u68f5\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u7ebf\u6bb5\u6811\u4e0a\u4e0b\u6807\u4e3a $i$ \u7684\u4f4d\u7f6e\u7ef4\u62a4 $x$ \u5b50\u6811\u5185\u5230 $fa_x$ \u8ddd\u79bb $=i$ \u7684\u70b9\u6743\u548c\u3002\u89e3\u51b3 $z$ \u5728 $x$ \u65b9\u5411\u4e0a\u7684\u513f\u5b50 $s$ \u7684\u5b50\u6811\u7684\u95ee\u9898\u53ea\u9700\u5728\u70b9 $s$ \u7684\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2 $[0,k-dis(x,z)]$ \u7684\u548c\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fz(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n#define ffe(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntemplate<typename T> void read(T &x){\n\tx=0;char c=getchar();T neg=1;\n\twhile(!isdigit(c)){if(c=='-') neg=-1;c=getchar();}\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n\tx*=neg;\n}\nconst int MAXN=1e5;\nconst int MAXP=5e6;\nconst int LOG_N=17;\nconst int INF=1e9;\nint n,qu,a[MAXN+5];\nint hd[MAXN+5],to[MAXN*2+5],nxt[MAXN*2+5],ec=0;\nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nint fa[MAXN+5][LOG_N+2],dep[MAXN+5];\nvoid dfs0(int x,int f){\n\tfa[x][0]=f;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==f) continue;\n\t\tdep[y]=dep[x]+1;dfs0(y,x);\n\t}\n}\nint getlca(int x,int y){\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(int i=LOG_N;~i;i--) if(dep[x]-(1<<i)>=dep[y]) x=fa[x][i];\n\tif(x==y) return x;\n\tfor(int i=LOG_N;~i;i--) if(fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];\n\treturn fa[x][0];\n}\nint getdis(int x,int y){return dep[x]+dep[y]-(dep[getlca(x,y)]<<1);}\nint siz[MAXN+5],mx[MAXN+5],cent=0;\nbool vis[MAXN+5];\nvoid findcent(int x,int f,int tot){\n\tsiz[x]=1;mx[x]=0;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==f||vis[y]) continue;\n\t\tfindcent(y,x,tot);chkmax(mx[x],siz[y]);siz[x]+=siz[y];\n\t} chkmax(mx[x],tot-siz[x]);\n\tif(mx[x]<mx[cent]) cent=x;\n}\nint dfa[MAXN+5];\nvoid divcent(int x,int tot){\n//\tprintf(\"%d\\n\",x);\n\tvis[x]=1;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(vis[y]) continue;\n\t\tcent=0;int sz=(siz[y]<siz[x])?siz[x]:(tot-siz[x]);\n\t\tfindcent(y,x,sz);dfa[cent]=x;divcent(cent,sz);\n\t}\n}\nstruct segtree{\n\tint rt[MAXN+5],ncnt=0;\n\tstruct node{int ch[2],val;} s[MAXP+5];\n\tvoid modify(int &k,int l,int r,int p,int x){\n\t\tif(!k) k=++ncnt;\n\t\tif(l==r){s[k].val+=x;return;}\n\t\tint mid=(l+r)>>1;\n\t\tif(p<=mid) modify(s[k].ch[0],l,mid,p,x);\n\t\telse modify(s[k].ch[1],mid+1,r,p,x);\n\t\ts[k].val=s[s[k].ch[0]].val+s[s[k].ch[1]].val;\n\t}\n\tint query(int k,int l,int r,int ql,int qr){\n\t\tif(!k) return 0;\n\t\tif(ql<=l&&r<=qr) return s[k].val;\n\t\tint mid=(l+r)>>1;\n\t\tif(qr<=mid) return query(s[k].ch[0],l,mid,ql,qr);\n\t\telse if(ql>mid) return query(s[k].ch[1],mid+1,r,ql,qr);\n\t\telse return query(s[k].ch[0],l,mid,ql,mid)+query(s[k].ch[1],mid+1,r,mid+1,qr);\n\t}\n} w1,w2;\nvoid modify(int x,int v){\n\tint cur=x;\n\twhile(cur){\n\t\tw1.modify(w1.rt[cur],0,n-1,getdis(cur,x),v);\n\t\tif(dfa[cur]) w2.modify(w2.rt[cur],0,n-1,getdis(dfa[cur],x),v);\n\t\tcur=dfa[cur];\n\t}\n}\nint query(int x,int k){\n\tint cur=x,pre=0,ret=0;\n\twhile(cur){\n\t\tif(getdis(cur,x)>k){\n\t\t\tpre=cur;cur=dfa[cur];continue;\n\t\t}\n\t\tret+=w1.query(w1.rt[cur],0,n-1,0,k-getdis(cur,x));\n\t\tif(pre) ret-=w2.query(w2.rt[pre],0,n-1,0,k-getdis(cur,x));\n\t\tpre=cur;cur=dfa[cur];\n\t} return ret;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&qu);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<n;i++){int u,v;scanf(\"%d%d\",&u,&v);adde(u,v);adde(v,u);}\n\tdfs0(1,0);for(int i=1;i<=LOG_N;i++) for(int j=1;j<=n;j++)\n\t\tfa[j][i]=fa[fa[j][i-1]][i-1];\n\tmx[0]=INF;cent=0;findcent(1,0,n);divcent(cent,n);\n//\tfor(int i=1;i<=n;i++) printf(\"%d\\n\",dfa[i]);\n\tfor(int i=1;i<=n;i++) modify(i,a[i]);\n\tint preans=0;\n\twhile(qu--){\n\t\tint opt,x,y;scanf(\"%d%d%d\",&opt,&x,&y);\n\t\tx^=preans;y^=preans;\n\t\tif(opt==0){preans=query(x,y);printf(\"%d\\n\",preans);}\n\t\telse{modify(x,y-a[x]);a[x]=y;}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1610209394,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6329 \u3010\u3010\u6a21\u677f\u3011\u70b9\u5206\u6811 | \u9707\u6ce2\u3011"
    },
    {
        "content": "## \u524d\u7f6e\u77e5\u8bc6\n\n- \u70b9\u5206\u6cbb\uff08\u81f3\u5c11\u5199\u8fc7\u51e0\u9053\u6a21\u677f\uff0c\u77e5\u9053\u539f\u7406\uff09\n\n## \u7b97\u6cd5\u539f\u7406\n\n\u70b9\u5206\u6811\u662f\u4ee5\u70b9\u5206\u6cbb\u4e3a\u57fa\u7840\u7684\uff0c\u628a\u539f\u6811\u201c\u5316\u5b9e\u4e3a\u865a\u201d\u7684\u6784\u9020\u3002\u6211\u4eec\u5728\u70b9\u5206\u6cbb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5b58\u50a8\u6bcf\u4e2a\u5206\u6cbb\u91cd\u5fc3\u7684\u4e0a\u7ea7\u91cd\u5fc3\uff0c\u4e5f\u5c31\u662f\u70b9\u5206\u6811\u7684\u7236\u5b50\u5173\u7cfb\u3002\u663e\u7136\uff0c\u6839\u636e\u70b9\u5206\u6cbb\u7684\u539f\u7406\uff0c\u70b9\u5206\u6811\u7684\u6811\u9ad8\u662f$\\log n$\u7684\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u68f5\u6811\u6765\u8dd1\u4e00\u4e9b\u7c7b\u4f3c\u201c\u4ece\u8be2\u95ee\u70b9\u51fa\u53d1\uff0c\u4e0d\u65ad\u8df3`fa`\u201d\u7684\u66b4\u529b\uff0c\u6765\u89e3\u51b3\u4e00\u4e9b\u6811\u4e0a\u7684\u591a\u6b21\u8be2\u95ee/\u4fee\u6539\u95ee\u9898\u3002\n\n\u4e00\u4e2a\u6bd4\u8f83\u5e38\u89c1\u7684\u5957\u8def\u662f\u8fd9\u6837\u7684\uff1a\n\n- \u8fdb\u884c\u4e00\u6b21\u70b9\u5206\u6cbb\uff0c\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5728\u70b9\u5206\u6811\u4e0a\u7684\u7236\u8282\u70b9\u3002\n\n- \u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5f00\u4e00\u4e2a\u6570\u636e\u7ed3\u6784$S_1$\u5b58\u50a8\u70b9\u5206\u6811\u5b50\u6811\u7684\u8d21\u732e\uff0c\u518d\u5f00\u4e00\u4e2a\u6570\u636e\u7ed3\u6784$S_2$\u5b58\u50a8\u70b9\u5206\u6811\u7236\u4eb2\u7684\u8d21\u732e\uff0c\u7528\u6765\u5bb9\u65a5\uff0c\u9632\u6b62\u7b97\u91cd\u3002\n\n- \u5bf9$x$\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u4ece$x$\u5f00\u59cb\u4e0d\u65ad\u8df3\u70b9\u5206\u6811\u7684\u7236\u4eb2\u4e00\u76f4\u5230\u6839\uff0c\u6bcf\u6b21\u5bf9\u7ecf\u8fc7\u7684\u8282\u70b9\u7684$S_1, S_2$\u4fee\u6539\u5b83\u7684\u8d21\u732e\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u4e3a**\u70b9\u5206\u6811\u9ad8 $\\times$ \u8282\u70b9\u4e0a\u7684\u5b50\u6570\u636e\u7ed3\u6784\u5355\u6b21\u4fee\u6539\u590d\u6742\u5ea6**\u3002\n\n- \u5bf9$x$\u8fdb\u884c\u67e5\u8be2\u65f6\uff0c\u4ece$x$\u5f00\u59cb\u4e0d\u65ad\u8df3\u70b9\u5206\u6811\u7684\u7236\u4eb2\u4e00\u76f4\u5230\u6839\uff0c\u6bcf\u6b21\u628a$S_1$\u7684\u8d21\u732e\u6dfb\u52a0\u8fdb\u7b54\u6848\uff0c\u628a$S_2$\u7684\u8d21\u732e\u4ece\u7b54\u6848\u5228\u53bb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a**\u70b9\u5206\u6811\u9ad8 $\\times$ \u8282\u70b9\u4e0a\u7684\u5b50\u6570\u636e\u7ed3\u6784\u5355\u6b21\u67e5\u8be2\u590d\u6742\u5ea6**\u3002\n\n- \u521d\u59cb\u5316\u53ef\u89c6\u4e3a\u76f4\u63a5\u8fdb\u884c$n$\u6b21\u4fee\u6539\u3002\n\n## \u672c\u9898\u89e3\u6cd5\n\n\u6a21\u677f\u9898\uff0c\u76f4\u63a5\u5957\u7528\u524d\u9762\u8bf4\u7684\u5957\u8def\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9$x$\uff0c\u5f00\u4e00\u68f5\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811$S_2$\uff0c\u4e0b\u6807\u662f\u5230$x$\u7684\u8ddd\u79bb\uff0c\u6765\u7ef4\u62a4\u70b9\u5206\u6811\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u7684\u70b9\u6743\u3002\u7136\u540e\u4ee5\u540c\u6837\u7684\u65b9\u6cd5\u5efa\u7ebf\u6bb5\u6811$S_2$\u5b58\u50a8\u7236\u4eb2\u7684\u8d21\u732e\u8fdb\u884c\u5bb9\u65a5\u3002\n\n\u4fee\u6539\u8282\u70b9$u$\u65f6\uff0c\u4ece$u$\u5f00\u59cb\u722c\u70b9\u5206\u6811\uff0c\u8bb0\u5f53\u524d\u8282\u70b9\u4e3a$x$\uff0c\u7236\u4eb2\u4e3a$f$\uff0c\u5728$S_1$\u7684\u4e0b\u6807\u4e3a$dis(x, u)$\u7684\u4f4d\u7f6e\u52a0\u4e0a\u65b0\u6743\u503c\u4e0e\u539f\u6743\u503c\u7684\u5dee\uff0c\u5728$S_2$\u7684\u4e0b\u6807\u4e3a$dis(f, u)$\u7684\u4f4d\u7f6e\u52a0\u4e0a\u65b0\u6743\u503c\u4e0e\u539f\u6743\u503c\u7684\u5dee\u3002\n\n\u67e5\u8be2\u8ddd\u8282\u70b9$u$\u5728$k$\u4ee5\u5185\u7684\u70b9\u6743\u548c\u65f6\uff0c\u4ece$u$\u5f00\u59cb\u722c\u70b9\u5206\u6811\uff0c\u8bb0\u5f53\u524d\u8282\u70b9\u4e3a$x$\uff0c\u4e0a\u4e00\u4e2a\u8bbf\u95ee\u7684\u8282\u70b9\u4e3a$l$\uff0c\u4ee4$d = dis(x, u)$\u3002\u5982\u679c$d$\u4e0d\u8d85\u8fc7$k$\uff0c\u5728$x$\u7684$S_1$\u67e5$k - d$\u7684\u524d\u7f00\u548c\u52a0\u5165\u7b54\u6848\uff0c\u5728$l$\u7684$S_2$\u67e5$k - d$\u7684\u524d\u7f00\u548c\u4ece\u7b54\u6848\u4e2d\u5228\u53bb\u3002\n\n\u5e38\u6570\u8f83\u5927\uff0c\u4e3a\u51cf\u5c0f\u5e38\u6570\uff0c\u63a8\u8350\u5c06\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u7684\u4e0b\u6807\u8303\u56f4\u8bbe\u4e3a\u70b9\u5206\u6811\u5b50\u6811\u5927\u5c0f\u800c\u975e$n$\uff0c\u5e76\u4e14\u8ddd\u79bb\u7528ST\u8868\u6765$O(1)$\u6c42\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define re register\n#define il inline\n \nusing namespace std;\nconst int MAXN = 2e5 + 5;\n\nil int gc() {\n    static char buf[1000000], *p1 = buf, *p2 = buf;\n    return (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2)) ? EOF : *p1++;\n    //return getchar();\n}\n\nil int geti() {\n    re char ch = gc();\n    re int f = 1, x = 0;\n    while (ch < '0' || ch > '9') f = (ch == '-' ? -1 : 1), ch = gc();\n    while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = gc();\n    return f * x;\n}\n \nint n, m;\nint a[MAXN];\nint to[MAXN], nxt[MAXN], head[MAXN], ecnt;\n \nil void Add(re int u, re int v) {\n    to[++ecnt] = v; nxt[ecnt] = head[u]; head[u] = ecnt;\n    to[++ecnt] = u; nxt[ecnt] = head[v]; head[v] = ecnt;\n}\n \nint dep[MAXN];\nint stt[20][MAXN], lg2[MAXN], id1[MAXN], tot;\n \nvoid DFS1(int u, int last, int depth) {\n    dep[u] = depth;\n    stt[0][++tot] = u;\n    id1[u] = tot;\n    for (int i = head[u]; i; i = nxt[i]) {\n        int v = to[i];\n        if (v == last) continue;\n        DFS1(v, u, depth + 1);\n        stt[0][++tot] = u;\n    }\n}\n \nil int Lower(re int x, re int y) {\n    return dep[x] < dep[y] ? x : y;\n}\n \nvoid GetST() {\n    for (re int i = 2; i <= tot; i++) lg2[i] = lg2[i >> 1] + 1;\n    for (re int i = 1; (1 << i) <= tot; i++) {\n        re int w = (1 << i);\n        for (re int j = 1; j + w - 1 <= tot; j++) {\n            stt[i][j] = Lower(stt[i - 1][j], stt[i - 1][j + w / 2]);\n        }\n    }\n}\n \nil int LCA(re int x, re int y) {\n    x = id1[x]; y = id1[y];\n    if (x > y) swap(x, y);\n    int i = lg2[y - x + 1], w = (1 << i);\n    return Lower(stt[i][x], stt[i][y - w + 1]);\n} \n \nil int Dis(re int x, re int y) {\n    return dep[x] + dep[y] - 2 * dep[LCA(x, y)];\n}\n \nint size[MAXN], maxs[MAXN];\nint dfa[MAXN];\nint vis[MAXN];\nint dsiz[MAXN];\n \nint DFS2(int u, int last, int tots) {\n    size[u] = 1;\n    maxs[u] = 0;\n    int cen = 0;\n    for (re int i = head[u]; i; i = nxt[i]) {\n        int v = to[i];\n        if (vis[v] || v == last) continue;\n        int vcen = DFS2(v, u, tots);\n        if (!cen || maxs[vcen] < maxs[cen]) cen = vcen;\n        size[u] += size[v];\n        maxs[u] = max(maxs[u], size[v]);\n    }\n    maxs[u] = max(maxs[u], tots - size[u]);\n    if (!cen || maxs[u] < maxs[cen]) cen = u;\n    return cen;\n}\n \nvoid Divide(int cen, int tots) {\n    vis[cen] = 1;\n    dsiz[cen] = tots;\n    for (re int i = head[cen]; i; i = nxt[i]) {\n        int v = to[i];\n        if (vis[v]) continue;\n        int vsize = (size[v] < size[cen]) ? size[v] : (tots - size[cen]);\n        int vcen = DFS2(v, cen, vsize);\n        dfa[vcen] = cen;\n        Divide(vcen, vsize);\n    }\n}\n\nstruct Node{\n    int sum;\n    Node *ch[2];\n};\n \nNode npool[10000000];\nint ncnt;\n \nstruct SegTree{\n    Node *rt;\n    SegTree() {rt = NULL;}\n    Node *New() {return &npool[ncnt++];}\n     \n    void Modify(Node *&now, int pos, int k, int l, int r) {\n        if (!now) now = New();\n        now->sum += k;\n        if (l == r) return;\n        int mid = (l + r) >> 1;\n        if (pos <= mid) Modify(now->ch[0], pos, k, l, mid);\n        else Modify(now->ch[1], pos, k, mid + 1, r);\n    }\n     \n    int Query(Node *now, int l, int r, int nl, int nr) {\n        if (!now) return 0;\n        if (l == nl && r == nr) return now->sum;\n        int mid = (nl + nr) >> 1;\n        if (r <= mid) return Query(now->ch[0], l, r, nl, mid);\n        else if (l > mid) return Query(now->ch[1], l, r, mid + 1, nr);\n        return Query(now->ch[0], l, mid, nl, mid) + Query(now->ch[1], mid + 1, r, mid + 1, nr);\n    }\n};\n\nSegTree T1[MAXN], T2[MAXN];\n \nil void Modify(int idx, int val) {\n    re int now = idx;\n    while (now) {\n        int fa = dfa[now];\n        T1[now].Modify(T1[now].rt, Dis(now, idx), val, 0, dsiz[now]);\n        if (fa) T2[now].Modify(T2[now].rt, Dis(fa, idx), val, 0, dsiz[fa]);\n        now = fa;\n    }\n}\n \nil int Query(int idx, int k) {\n    re int res = 0;\n    re int now = idx, last = 0;\n    while (now) {\n        int d = Dis(idx, now);\n        if (d > k) {\n            last = now;\n            now = dfa[now];\n            continue;\n        }\n        res += T1[now].Query(T1[now].rt, 0, k - d, 0, dsiz[now]);\n        if (last) res -= T2[last].Query(T2[last].rt, 0, k - d, 0, dsiz[now]);\n        last = now;\n        now = dfa[now];\n    }\n    return res;\n}\n \nvoid Prework() {\n    DFS1(1, 0, 0);\n    GetST();\n    int cen = DFS2(1, 0, n);\n    Divide(cen, n);\n    for (int i = 1; i <= n; i++) Modify(i, a[i]);\n}\n \nint main() {\n    n = geti(); m = geti();\n    for (re int i = 1; i <= n; i++) a[i] = geti();\n    for (re int i = 1; i <= n - 1; i++) {\n        int x = geti(), y = geti();\n        Add(x, y);\n    }\n    Prework();\n    int ans = 0;\n    for (re int i = 1; i <= m; i++) {\n        int op = geti(), x = geti(), y = geti();\n        x ^= ans; y ^= ans;\n        if (op == 0) {\n            ans = Query(x, y);\n            printf(\"%d\\n\", ans);\n        } else {\n            Modify(x, y - a[x]);\n            a[x] = y;\n        }\n    }\n    return 0;\n}\n```\n\n## \u6d1b\u8c37\u4e0a\u5176\u4ed6\u4f8b\u9898\n\n\u5927\u6982\u96be\u5ea6\u5347\u5e8f\n\n- P2056 [ZJOI2007]\u6349\u8ff7\u85cf / SP2666 QTREE4 - Query on a tree IV\n\n  \u5957\u8def\u9898\uff0c\u70b9\u5206\u6811+\u5806\n   \n- P3241 [HNOI2015]\u5f00\u5e97\n\n  \u5957\u8def\u9898\uff0c\u65e0\u4fee\u6539\uff0c\u70b9\u5206\u6811+`vector`+\u524d\u7f00\u548c\n  \n- P3345 [ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\n\n  ~~\u600e\u4e48\u8fd8\u662fZJOI~~\uff0c\u501f\u52a9\u70b9\u5206\u6811\u79fb\u52a8\u7b54\u6848\n  \n- P3920 [WC2014]\u7d2b\u8346\u82b1\u4e4b\u604b\n\n  \u52a8\u6001\u52a0\u70b9\u7684\u70b9\u5206\u6811+\u5e73\u8861\u6811\u3002\u9664\u53bb\u52a8\u6001\u52a0\u70b9\u5c31\u662f\u70b9\u5206\u6811\u5957\u8def\u3002\u52a0\u70b9\u65f6\u9ed8\u8ba4\u65b0\u70b9\u7684\u70b9\u5206\u7236\u4eb2\u4e3a\u539f\u6811\u7236\u4eb2\uff0c\u5f53\u67d0\u70b9\u5206\u5b50\u6811\u4e0d\u5e73\u8861\u5ea6\u8d85\u8fc7\u67d0\u4e2a\u9608\u503c\uff0c\u91cd\u65b0\u70b9\u5206\u6cbb\u5373\u53ef\u3002\n  \n- P4220 [WC2018]\u901a\u9053\n\n  \u592a\u96be\u4e86\u4e00\u76f4\u6ca1\u6562\u5199\uff0c\u8fb9\u5206\u6811+\u865a\u6811\u3002\n  \n- P4565 [CTSC2018]\u66b4\u529b\u5199\u6302\n\n  \u592a\u96be\u4e86\u4e00\u76f4\u6ca1\u6562\u5199\uff0c\u8fb9\u5206\u6811+\u865a\u6811\u3002",
        "postTime": 1586501352,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6329 \u3010\u3010\u6a21\u677f\u3011\u70b9\u5206\u6811 | \u9707\u6ce2\u3011"
    },
    {
        "content": "\u62cb\u78da\u5f15\u7389.jpeg\n\n_______\n\n\u5927\u6982\u5c31\u662f\u5982\u679c\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\u7684\u8bdd\uff0c\u5c31\u662f\u6bd4\u8f83\u88f8\u7684\u70b9\u5206\u6811\u3002\u4e8e\u662f\u5148\u8003\u8651\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\u7684\u60c5\u51b5\u3002\n\n\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\uff0c\u81ea\u7136\u662f\u5e0c\u671b\u5bf9\u6bcf\u4e2a\u70b9\u90fd\u8bb0\u5f55\u4e00\u4e2a\u6876\uff0c\u4f46\u8fd9\u6837\u663e\u7136\u7531\u4e8e\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u4e0d\u53ef\u63a7\uff0c\u6700\u7ec8\u9700\u8981\u7684\u7a7a\u95f4\u4ee3\u4ef7\u662f $O(n^2)$ \u7684\u3002\u4e8e\u662f\u8003\u8651\u600e\u4e48\u8c03\u6574\u6811\u7684\u9ad8\u5ea6\u4f7f\u5f97\u6700\u7ec8\u603b\u7684\u7a7a\u95f4\u8907\u6742\u5ea6\u53ef\u4ee5\u63a5\u53d7\uff0c\u90a3\u81ea\u7136\u5c31\u4f1a\u60f3\u5230\u70b9\u5206\u6cbb\u3002\u6ce8\u610f\u5230\u70b9\u5206\u6cbb\u65f6\uff0c\u6bcf\u4e2a\u70b9\u5728\u5206\u6cbb\u8fc7\u7a0b\u4e2d\uff0c\u300e\u903b\u8f91\u6811\u9ad8\u300f\u90fd\u53ea\u6709 $\\log n$ \u3002\u8fd9\u5927\u6982\u5c31\u662f\u4e3a\u4ec0\u4e48\u7528\u70b9\u5206\u6811\u7684\u539f\u56e0\u3002\n\n\u6240\u4ee5\u5c31\u662f\u5efa\u51fa\u70b9\u5206\u6811\u6765\uff0c\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a `vector` \u4f5c\u4e3a\u6876\uff0c\u7ef4\u62a4\u70b9\u5206\u6811\u4e0a\u5b50\u6811\u5185\u5230\u5f53\u524d\u70b9\u8ddd\u79bb\u4e3a $k$ \u7684\u70b9\u6743\u548c\u3002\u8fd9\u6837\u5bf9\u4e8e\u8be2\u95ee\uff0c\u6bcf\u6b21\u53ea\u9700\u8981\u8df3\u70b9\u5206\u6811\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a $fa$ \u7edf\u8ba1 $k-dis(fa,x)$ \u7684\u70b9\u5bf9\u7684\u6570\u91cf\u5c31\u597d\u4e86\u3002\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5bf9\u4e8e\u4ee5\u5f53\u524d $fa$ \u4e3a\u6839\u7684\u90a3\u4e9b\u5b50\u6811\uff0c\u5728\u7b97\u4e0b\u4e00\u4e2a $fa$ \u7684\u65f6\u5019\u4f1a\u88ab\u7b97\u91cd\u3002\u4e8e\u662f\u5c31\u8981\u518d\u7ef4\u62a4\u4e00\u4e2a\u6876\uff0c\u8868\u793a $x$ \u5b50\u6811\u5185\u7684\u70b9\uff0c\u5230\u70b9\u5206\u6811\u4e0a $x$ \u7684\u7236\u4eb2\u7684\u8ddd\u79bb\u4e3a $k$ \u7684\u70b9\u6743\u548c\u3002\u7531\u4e8e\u8fb9\u6743\u90fd\u4e3a $1$ \uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u4f1a\u5f88\u65b9\u4fbf\u3002\n\n\u8003\u8651\u5982\u679c\u5e26\u4fee\u6539\uff0c\u90a3\u65e0\u975e\u5c31\u662f\u628a\u6876\u6362\u6210\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\u8fd9\u6837\u8907\u6742\u5ea6\u5c31\u4f1a\u662f $O(m\\log ^2 n)$ \u7684\u4e86\u3002\u53ef\u80fd\u6211\u5199\u7684\u6bd4\u8f83\u4e11\uff1f\u9884\u5904\u7406\u662f\u5e38\u6570\u4e0d\u5c0f\u7684 $O(n\\log ^2 n)$ \uff0c\u4f3c\u4e4e\u6bd4\u5176\u4ed6\u4eba\u90fd\u6162\u8bf6\u2026\n\n\u4ee5\u4e0b\u662f\u7b2c\u4e00\u6b21\u5199\u70b9\u5206\u6811\u76f8\u5173\u9898\u7684\u4eba\u53ef\u80fd\u4f1a\u9047\u5230\u7684 bug\uff1a\n\n1\u3001\u6700\u5f00\u59cb\u7684\u65f6\u5019\u7ef4\u62a4\u7684\u662f **\u70b9\u5206\u6811** \u4e0a\u8ddd\u79bb\u4e3a $k$ \u7684\u70b9\u7684\u70b9\u6743\u548c\u3002\n\n2\u3001\u7136\u540e\u6539\u4e86\u6539\uff0c\u4f46\u662f\u67e5\u8be2\u7684\u65f6\u5019\u6ca1\u6709\u7ef4\u62a4\u4e24\u4e2a BIT\uff0c\u53ea\u7ef4\u62a4\u4e86\u4e00\u4e2a\uff0c\u7136\u540e\u51cf\u53bb\u7684\u662f\u67e5\u8be2 $x$ \u7684\u70b9\u5206\u6811\u5b50\u6811\u5185\u5230 $x$ \u8ddd\u79bb $\\leq k-2\\times dis(fa_x,x)$ \u7684\u70b9\u6743\u548c\u3002\u770b\u4e0a\u53bb\u6709\u70b9\u4e1c\u897f\uff0c\u4f46\u95ee\u9898\u5728\u4e8e\u5230 $x$ \u8ddd\u79bb\u548c\u5230 $fa_x$ \u8ddd\u79bb\u6ca1\u6709\u672c\u8d28\u4e0a\u7684\u5173\u4fc2\u2026\u6bd4\u5982\u53ef\u4ee5\u5728\u6811\u7684\u5bf9\u4fa7\u3002\n\n3\u3001\u6700\u540e\u8fd8\u662f\u5199\u4e86\u4e24\u4e2a BIT\uff0c\u4f46\u662f\u8c03\u4e86\u5f88\u4e45\uff0c\u539f\u56e0\u662f\u5411\u4e0a\u8df3\u9047\u5230 $dis(fa_x,x)>k$ \u5e94\u8be5 `continue` \u800c\u4e0d\u662f `break` \uff0c\u56e0\u4e3a\u8fd9\u8ddd\u79bb\u5e76\u662f\u5b9e\u9645\u8ddd\u79bb\uff0c\u5728\u70b9\u5206\u6811\u4e0a\u6ca1\u6709\u5355\u8c03\u6027\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std ;\n\n#define il inline \n#define to(k) E[k].to\n#define next(k) E[k].next\n#define low(x) (x & (-x))\n\nconst int N = 300010 ;\n\nvoid debug(int *tp, int minn, int maxn, char c){\n    for (int i = minn ; i <= maxn ; ++ i)\n        cout << tp[i] << \" \" ;  cout << c ;\n}\n\nint res ;\nint ans ;\nint lans ;\nint n, m ;\nint f[N] ;\nint d[N] ;\nint vis[N] ;\nint dep[N] ;\nint mx_dep ;\nstruct Edge{\n\tint to ;\n\tint next ;\n}E[N * 2] ;\nint cnt ;\nint base[N] ;\nint head[N] ;\nunordered_map<int, int> Id[N] ;\nvector <int> sub[N] ;\nvector <int> buc[N] ;\n\nil void add(int a, int b){\n\tto(++ cnt) = b ;\n\tnext(cnt) = head[a] ;\n\thead[a] = cnt ;\n}\nnamespace findCG{\n\tint grt ;\n\tint num ;\n\tint g[N] ;\n\tint size[N] ;\n\til void chk(int &a, int b){\n\t\ta = b <= a ? a : b ;\n\t}\n\til void reset(){\n\t\tg[grt = 0] = 19690126 ;\n\t}\n\tvoid dfs(int x, int fa){\n\t\tsize[x] = 1 ; g[x] = 0 ;\n\t\tfor (int k = head[x] ; k ; k = next(k)){\n\t\t\tif (to(k) != fa && !vis[to(k)]){\n\t\t\t\tdfs(to(k), x) ;\n\t\t\t\tsize[x] += size[to(k)] ;\n\t\t\t\tg[x] = max(g[x], size[to(k)]) ;\n\t\t\t}\n\t\t}\n\t\tchk(g[x], num - size[x]) ;\n\t\tif (g[x] < g[grt]) grt = x ;\n\t}\n}\nusing namespace findCG ;\n\nil void init(int root, int x){\n\tfor (int i = 0 ; i <= x ; ++ i)\n\t\tbuc[root].push_back(0) ;\n}\nil void add(int root, int x, int p){\n\tint t = buc[root].size() ;\n\tfor ( ; x < t ; x += low(x)) buc[root][x] += p ;\n}\nil int ask(int root, int x){\n\tint ret = 0 ;\n\tif (x >= buc[root].size())\n\t\tx = (int)buc[root].size() - 1 ;\n\tfor ( ; x ; x -= low(x)) ret += buc[root][x] ;\n\treturn ret ;\n}\nil void init2(int root, int x){\n\tfor (int i = 0 ; i <= x ; ++ i)\n\t\tsub[root].push_back(0) ;\n}\nil void add2(int root, int x, int p){\n\tint t = sub[root].size() ;\n\tfor ( ; x < t ; x += low(x)) sub[root][x] += p ;\n}\nil int ask2(int root, int x){\n\tint ret = 0 ;\n\tif (x >= sub[root].size())\n\t\tx = (int)sub[root].size() - 1 ;\n\tfor ( ; x ; x -= low(x)) ret += sub[root][x] ;\n\treturn ret ;\n}\nvoid calc(int x, int fa, int root){\n\tsize[x] = 1 ;\n\tdep[x] = dep[fa] + 1 ;\n\tId[root][x] = dep[x] ;\n\tfor (int i = head[x] ; i ; i = next(i))\n\t\tif (!vis[to(i)] && to(i) != fa)\n\t\t\tcalc(to(i), x, root), size[x] += size[to(i)] ;\n\tmx_dep = max(dep[x], mx_dep) ;\n}\nvoid calc2(int x, int fa, int root, int frt){\n\tadd(root, dep[x], base[x]) ;\n\tif (frt) add2(root, Id[frt][x], base[x]) ;\n\tfor (int i = head[x] ; i ; i = next(i))\n\t\tif (!vis[to(i)] && to(i) != fa) calc2(to(i), x, root, frt) ;\n}\nvoid find_tree(int x, int fa, int h){\n\tint mx ; vis[x] = 1 ; mx_dep = 0 ; \n\tcalc(x, 0, x), init(x, mx_dep) ; \n\tinit2(x, h) ; mx = mx_dep ; \n\tcalc2(x, 0, x, fa) ;\n\tfor (int k = head[x] ; k ; k = next(k)){\n\t\tif (vis[to(k)]) continue ;\n\t\tnum = size[to(k)] ; reset() ;\n\t\tdfs(to(k), x) ; f[grt] = x ;\n\t\tfind_tree(grt, x, mx) ;\n\t}\n}\nil int qr(){\n\tint r = 0 ; \n\tchar c = getchar() ; \n\twhile (!isdigit(c)) c = getchar() ; \n\twhile (isdigit(c))\n\t\tr = r * 10 + c - 48, c = getchar() ;\n\treturn r ; \n}\nint main(){\n\tint a, b, c ; cin >> n >> m ; \n\tfor (int i = 1 ; i <= n ; ++ i) base[i] = qr() ;\n\tfor (int i = 1 ; i < n ; ++ i)\n\t\ta = qr(), b = qr(), add(a, b), add(b, a) ;\n\treset() ; num = n ; dfs(1, 0) ; find_tree(grt, 0, 0) ;\n\twhile (m --){\n\t\ta = qr() ; \n\t\tb = qr() ^ lans ; \n\t\tc = qr() ^ lans ;\n\t\tif (!a){\n\t\t\tint fb = f[b] ;\n\t\t\tint ob, lb = b, df ;\n\t\t\tans += ask(lb, c + 1) ;\n\t\t\twhile (fb){\n\t\t\t\tdf = Id[fb][b] - 1 ;\n\t\t\t\tif (c - df < 0){\t\t\t\t\n\t\t\t\t\tlb = fb, fb = f[fb] ;\n\t\t\t\t\tcontinue ;\n\t\t\t\t}\n\t\t\t\tans += ask(fb, c - df + 1) ;\n\t\t\t\tans -= ask2(lb, c - df + 1) ;\n\t\t\t\tlb = fb, fb = f[fb] ;\n\t\t\t}\n\t\t\tprintf(\"%d\", (lans = ans)) ; \n\t\t\tans = 0 ; putchar('\\n') ; \n\t\t}\n\t\telse {\n\t\t\tint ob = b ;\n\t\t\tadd(b, 1, -base[b] + c) ;\n\t\t\twhile (f[b]){\n\t\t\t\tint df = Id[f[b]][ob] ;\n\t\t\t\tadd(f[b], df, -base[ob] + c) ;\n\t\t\t\tadd2(b, df, -base[ob] + c) ; b = f[b] ;\n\t\t\t}\n\t\t\tbase[ob] = c ;\n\t\t}\n\t}\n\treturn 0 ; \n}\n```\n\n~~\u70ba\u4ec0\u4e48\u6211\u9019\u9ebc\u6162\u554a~~",
        "postTime": 1586440408,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "P6329 \u70b9\u5206\u6811 | \u9707\u6ce2"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f3a\u5236\u5728\u7ebf\u3002\u3002\u3002\n\n\u5148\u4ecb\u7ecd\u4e00\u4e0b\u70b9\u5206\u6811\u8fd9\u4e2a\u4e1c\u897f\u5427\u3002\n\n\u70b9\u5206\u6811\uff0c\u53c8\u53eb\u505a\u52a8\u6001\u70b9\u5206\u6cbb\uff0c\u4ed6\u7684\u6838\u5fc3\u601d\u60f3\u662f\u628a\u70b9\u5206\u6cbb\u7684\u6bcf\u4e00\u5c42\u7684\u91cd\u5fc3\u8fde\u5230\u4e0b\u4e00\u5c42\u4e0a\u6784\u6210\u7684\u4e00\u68f5\u6811\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20201006111148446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Rldm91dF8=,size_16,color_FFFFFF,t_70#pic_center)\n\n\u5bf9\u4e8e\u8fd9\u68f5\u6811\u6765\u8bf4\uff0c\u4ed6\u7684\u4e00\u4e2a\u70b9\u5206\u6811\u5c31\u662f\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20201006111235766.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Rldm91dF8=,size_16,color_FFFFFF,t_70#pic_center)\n\n\u663e\u7136\uff0c\u8fd9\u68f5\u70b9\u5206\u6811\u7684\u6811\u9ad8\u662f $\\log n$ \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u600e\u4e48\u66b4\u529b\u600e\u4e48\u6765\u4e86\u3002\n\n\u57fa\u672c\u601d\u8def\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $u$\uff0c\u5f00\u4e24\u4e2a\u6570\u636e\u7ed3\u6784 $S1,S2$\uff0c\u5176\u4e2d $S1$ \u4fdd\u5b58\u7684\u662f\u5728\u5728\u70b9\u5206\u6811\u4e0a\u4ee5 $u$ \u4e3a\u5b50\u6811\u70b9\u5230 $u$ \u7684\u4fe1\u606f\uff0c$S2$ \u8868\u793a\u5728\u70b9\u5206\u6811\u4e0a\u4ee5 $u$ \u4e3a\u5b50\u6811\u7684\u70b9\u5230 $u$ \u5728\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2\u8282\u70b9\u7684\u4fe1\u606f\u3002\n\n\u67e5\u8be2\u70b9 $u$ \u7684\u65f6\u5019\uff0c\u66b4\u529b\u5411\u4e0a\u722c\u70b9\u5206\u6811\uff0c\u6bcf\u6b21\u8ba1\u7b97\u7b54\u6848\u7684\u65f6\u5019\u52a0\u4e0a $S1$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u51cf\u53bb $S2$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u5355\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u662f**\u70b9\u5206\u6811\u9ad8**$\\times$**\u6570\u636e\u7ed3\u6784\u5355\u6b21\u67e5\u8be2\u590d\u6742\u5ea6**\u3002\n\n\u4fee\u6539\u70b9 $u$ \u7684\u65f6\u5019\uff0c\u66b4\u529b\u5411\u4e0a\u722c\u70b9\u5206\u6811\uff0c\u76f8\u5e94\u4fee\u6539 $S1,S2$\uff0c\u5355\u6b21\u4fee\u6539\u7684\u590d\u6742\u5ea6\u662f**\u70b9\u5206\u6811\u9ad8**$\\times$**\u6570\u636e\u7ed3\u6784\u5355\u6b21\u4fee\u6539\u590d\u6742\u5ea6**\u3002\n\n****\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u70b9\u5f00\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u8868\u793a\u7684\u662f\u5728 $u$ \u70b9\u5206\u6811\u4e0a\u5b50\u6811\u4e2d\u7684\u70b9\u5230 $u,u$ \u5728\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2\u7684\u8ddd\u79bb\u4e3a $i$ \u7684\u70b9\u7684\u6570\u91cf\u3002\n\n\u4f46\u662f\u8fd9\u6837\u505a\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\u3002\u6211\u4eec\u53d1\u73b0\u56e0\u4e3a\u8def\u5f84\u957f\u5ea6\u5c31\u662f\u8fb9\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u6811\u72b6\u6570\u7ec4\u7684\u5927\u5c0f\u5f00\u6210 $u$ \u7684\u5b50\u6811\u5927\u5c0f\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u7684\u8bdd\u603b\u7a7a\u95f4\u662f $2^x\\times\\dfrac{n}{2^x}=n\\log n$\u3002\n\n\u8fd9\u6837\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\u3002\n\n\u70b9\u5206\u6811\u4ee3\u7801\u4e0d\u592a\u597d\u5199\uff0c\u5199\u7684\u65f6\u5019\u8981\u7ec6\u5fc3\u4e00\u70b9\u3002\n\n****\n\n\u70b9\u5206\u6811\u7684\u7ec6\u8282\u4e0a\u6709\u4e00\u70b9\u5c31\u662f $dis(u,fa[u])$ \u662f\u53ef\u4ee5\u5927\u4e8e $dis(u,fa[fa[u]])$ \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u67e5\u8be2\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u8df3\u6ee1\uff0c\u4e0d\u80fd\u4e2d\u9014\u9000\u51fa\u3002\n\n\u8bb0\u5f97\u5f3a\u5236\u5728\u7ebf\uff01\uff01\uff01\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cassert>\n#include<cmath>\n#include<map>\n#include<set>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<vector>\n#include<time.h>\n#include<algorithm>\n\nusing namespace std;\n\n# define Rep(i,a,b) for(register int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(register int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\n\nconst int N=2e5+5;\n\ntemplate<typename T> void read(T &x){\n   x=0;int f=1;\n   char c=getchar();\n   for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n   for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nint n,m;\nint a[N];\nint head[N],cnt;\nint faz[N];\nint f[N],siz[N];\nint st[N][20],dep[N];\nint p[N],totp;\nint ans;\nbool vis[N];\n\nstruct BIT{\n\tvector<int> bit;\n\tvoid build(int sz){\n\t\tRep(i,0,sz+3)bit.push_back(0);\n\t}\n\tvoid add(int o,int x){\n\t\tfor(;o<bit.size();o+=o&-o)bit[o]+=x;\t\n\t}\n\tint ask(int o){\n\t\to=min(o,(int)bit.size()-1);\n\t\tint res=0;\n\t\tfor(;o;o-=o&-o)res+=bit[o];\n\t\treturn res;\t\n\t}\n}S1[N],S2[N];\n\nstruct Edge{\n\tint to,next;\t\n}e[N<<1];\n\nvoid add(int x,int y){\n\te[++cnt]=(Edge){y,head[x]},head[x]=cnt;\n}\n\nint lca(int x,int y){\n\tif(dep[x]<dep[y])swap(x,y);\n\t_Rep(i,19,0)if(dep[st[x][i]]>=dep[y])x=st[x][i];\n\tif(x==y)return x;\n\t_Rep(i,19,0)if(st[x][i]!=st[y][i])x=st[x][i],y=st[y][i];\n\treturn st[x][0];\t\n}\n\nint getdis(int u,int v){\n\treturn dep[u]+dep[v]-2*dep[lca(u,v)];\t\n}\n\nvoid dfs1(int u,int fa){\n\tdep[u]=dep[fa]+1;\n\tst[u][0]=fa;\n\tRep(i,1,19)st[u][i]=st[st[u][i-1]][i-1];\n\tRepG(i,u){\n\t\tint v=e[i].to;\n\t\tif(v==fa)continue;\n\t\tdfs1(v,u);\n\t}\n}\n\nvoid dfs2(int u,int fa){\n\tp[++totp]=u;\n\tsiz[u]=1;\n\tRepG(i,u){\n\t\tint v=e[i].to;\n\t\tif(v==fa||vis[v])continue;\n\t\tdfs2(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tf[u]=max(f[u],siz[v]);\n\t}\n}\n\nvoid dfs3(int rt,int u,int fa,int len){\n\tS1[rt].add(len,a[u]);\n\tRepG(i,u){\n\t\tint v=e[i].to;\n\t\tif(v==fa||vis[v])continue;\n\t\tdfs3(rt,v,u,len+1); \n\t} \n}\n\nvoid init(int u,int fa){\n\ttotp=0;\n\tdfs2(u,0);\t\n\tRep(i,1,totp)f[p[i]]=max(f[p[i]],totp-siz[p[i]]);\n\tint rt=-1;\n\tRep(i,1,totp)if(rt==-1||f[rt]>f[p[i]])rt=p[i];\n\tRep(i,1,totp)f[p[i]]=0;\n\tvis[rt]=true;\n\tu=rt;\n\tfaz[u]=fa;\n\tS2[u].build(totp);\n\tif(fa)Rep(i,1,totp)S2[u].add(getdis(p[i],fa),a[p[i]]);\n\tS1[u].build(totp);\n\tRepG(i,u){\n\t\tint v=e[i].to;\n\t\tif(vis[v])continue;\t\n\t\tdfs3(u,v,u,1);\n\t}\n\tRepG(i,u){\n\t\tint v=e[i].to;\n\t\tif(vis[v])continue;\n\t\tinit(v,u);\t\n\t}\n}\n\nvoid update(int x,int k){\n\tint u=x;\n\twhile(faz[u]){\n\t\tint d=getdis(x,faz[u]);\n\t\tS2[u].add(d,-a[x]);\n\t\tS2[u].add(d,k);\n\t\tu=faz[u];\n\t\tS1[u].add(d,-a[x]);\n\t\tS1[u].add(d,k);\t\n\t}\n\ta[x]=k;\n}\n\nint query(int x,int k){\n\tint u=x;\n\tint res=0;\n\tres+=a[x]+S1[x].ask(k);\n\twhile(faz[u]){\n\t\tint d=getdis(faz[u],x);\n\t\tif(d<=k)res+=a[faz[u]]+S1[faz[u]].ask(k-d)-S2[u].ask(k-d);\n\t\tu=faz[u];\n\t}\n\treturn res;\n}\n\nint main()\n{\n//\tfreopen(\"p6329.in\",\"r\",stdin);\n\tmemset(head,-1,sizeof(head));\n\tread(n),read(m);\n\tRep(i,1,n)read(a[i]);\n\tRep(i,1,n-1){\n\t\tint x,y;\n\t\tread(x),read(y);\n\t\tadd(x,y),add(y,x);\n\t}\t\n\tdfs1(1,0);\n\tinit(1,0);\n\tRep(i,1,m){\n\t\tint opt,x,y;\n\t\tread(opt),read(x),read(y);\n\t\t//x^=ans,y^=ans;\t\n\t\tif(!opt)printf(\"%d\\n\",ans=query(x,y));\n\t\telse update(x,y);\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1601954794,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6329 \u3010\u3010\u6a21\u677f\u3011\u70b9\u5206\u6811 | \u9707\u6ce2\u3011"
    },
    {
        "content": "\u6211\u4eec\u7684\u8001\u5e08\u6709\u4e00\u79cd\u4f18\u79c0\u7684\u5199\u6cd5\uff0c\u548c\u5927\u591a\u6570\u9898\u89e3\u4e0d\u76f8\u540c\u3002\u6240\u4ee5\u6211\u6765\u8f6c\u8ff0\u4e00\u4e0b\u6211\u4eec\u8001\u5e08\uff08\u9648\u5927\u5927\uff09\u7684\u7edd\u5999\u601d\u8def\u3002\n\n## \u4e0d\u540c\u4e4b\u5904\n\n1. **\u4e0d\u7528LCA**\u6c42\u8ddd\u79bb\uff08\u5728\u8bb0\u5f55\u5206\u652f\u7ed3\u6784\u65f6\u76f4\u63a5\u8bb0\u5f55\u4ed6\u7684\u8ddd\u79bb\uff09\n\n2. **\u6ca1\u6709\u91cd\u6784\u6811**\uff08\u8bb0\u5f55\u201c\u8986\u76d6\u201d\u6bcf\u4e00\u4e2a\u70b9\u7684\u5206\u652f\u7ed3\u6784\uff09\n\n3. \u6811\u72b6\u6570\u7ec4\u5927\u5c0f\u53ea\u5f00\u5f53\u524d\u5b50\u6811**\u6700\u5927\u6df1\u5ea6+2**\u5373\u53ef\n\n## \u5206\u6790\n\n1. \u5bf9\u4e8e\u70b9\u5206\u6cbb\uff0c\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u5341\u5206\u8be6\u7ec6\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u849f\u84bb\u66fe\u7ecf\u56f0\u60d1\u7684\u95ee\u9898\u3002\u6bcf\u4e00\u6b21   $findroot$ \u627e\u5230\u7684\u771f\u7684\u662f\u91cd\u5fc3\u5417\uff1f**\u5e76\u4e0d\u662f**\u3002\u5982\u6837\u4f8b\u3002\u627e\u51fa\u91cd\u5fc3\u65f6\u53d1\u73b0\u70b91\u6bd4\u70b92\u5148\u51fa\u73b0\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u8fd9**\u4e0d\u5f71\u54cd\u590d\u6742\u5ea6**\u3002\u53ea\u662f\u627e\u4e86\u4e00\u4e2a\u4e0d\u90a3\u4e48\u597d\u4e5f\u4e0d\u90a3\u4e48\u5dee\u7684\u70b9\u3002\n\n2. \u8bb0\u5f55\u5206\u6cbb\u7ed3\u6784\n\n```\nstruct node{\n\tint G,from,dis;\n        //\u91cd\u5fc3\uff08\u6839\uff09\uff0c\u6240\u5728\u5b50\u6811\uff08\u9700\u8981\u91cd\u65b0\u6807\u53f7\u9632\u6b62\u91cd\u590d\uff09\uff0c\u5230\u91cd\u5fc3\u7684\u8ddd\u79bb\n};\nvector<node> a[N];\n```\n\n\u8fd9\u6837\u53ef\u4ee5\u7701\u6389\u4e00\u4e2aLCA\u3002\n\n3. $solve$ \u51fd\u6570\n\n```\nvoid finddep(int x,int fa,int d){//\u627e\u6700\u5927\u6df1\u5ea6\n\tMaxdep2=max(Maxdep2,d); a[x].push_back(node{RT,cnt,d});\n\tfor(int i=head[x];i;i=e[i].nex){\n\t\tint to=e[i].to;\n\t\tif(vis[to]||to==fa) continue;\n\t\tfinddep(to,x,d+1);//\u76f4\u63a5\u8bb0\u5f55\u6df1\u5ea6\n\t}\n}\nvoid solve(int x){\n\ta[x].push_back(node{x,0,0});//\u91cd\u5fc3\u81ea\u5df1\u4e5f\u8981\u8bb0\u5f55\uff0ccnt=0\u8868\u793a\u4ed6\u662f\u6839\n\tMaxdep1=0; RT=x;\n\tfor(int i=head[x];i;i=e[i].nex){\n\t\tint to=e[i].to;\n\t\tif(vis[to]) continue;\n\t\tMaxdep2=0; ++cnt; finddep(to,x,1);//\u6bcf\u4e2a\u5b50\u6811\u8bb0\u5f55\u6df1\u5ea6\n\t\tMaxdep1=max(Maxdep1,Maxdep2);//\u603b\u7684\u6df1\u5ea6\u8bb0\u5f55\n\t\tDS[1][cnt].resize(Maxdep2+2);//\u5f00\u6811\u72b6\u6570\u7ec4\uff0c1\u8868\u793a\u5b50\u6811\u5185\u7684\n\t}\n\tDS[0][x].resize(Maxdep1+2);//0\u8868\u793a\u91cd\u5fc3\u7684\n        //+2\u7684\u539f\u56e0\uff1a+1\uff1avector\u4e0b\u6807\u4ece0\u5f00\u59cb\uff0c+1\uff1a\u8ddd\u79bb\u53ef\u80fd\u4e3a0\uff08\u6839\u8282\u70b9\u5230\u81ea\u5df1\uff09\n        //\u800c\u6811\u72b6\u6570\u7ec4\u4e0d\u80fd\u4e0b\u6807\u4e3a0\n\tvis[x]=1;//\u7ee7\u7eed\u5206\u6cbb\n\tfor(int i=head[x];i;i=e[i].nex){\n\t\tint to=e[i].to;\n\t\tif(vis[to]) continue;\n\t\tbest=0; all=size[to];\n\t\tfindroot(to,0); solve(best);\n\t}\n}\n```\n\n4. \u5904\u7406\u8be2\u95ee\n\n\u6ce8\u610f\u4e00\u4e9b\u7279\u6b8a\u5224\u65ad\u3002\u6bd4\u5982\u662f\u5426\u662f**\u6839\u8282\u70b9**\uff0c\u67e5\u8be2\u8ddd\u79bb\u662f\u5426**\u5927\u4e8e\u6811\u72b6\u6570\u7ec4\u5927\u5c0f**\u3002\n\n```\nvoid modify(int x,int v){\n\tfor(int i=0;i<a[x].size();i++){//\u5bf9\u4e8e\u201c\u8986\u76d6\u201dx\u7684\u6bcf\u4e00\u4e2a\u5206\u6cbb\u7ed3\u6784\n\t\tint A=a[x][i].G,B=a[x][i].from,C=a[x][i].dis;\n\t\tupdate(A,0,C,v);//\u7b2c\u51e0\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u5b50\u6811\u7684/\u6839\u7684\uff0c\u4f4d\u7f6e\uff0c\u52a0\u7684\u6743\u503c\n\t\tif(B) update(B,1,C,v);//\u5982\u679c\u4e0d\u662f\u6839\u8282\u70b9\n\t}\n\t\n}\nint ask(int x,int k){\n\tint ans=0; \n\tfor(int i=0;i<a[x].size();i++){\n\t\tint A=a[x][i].G,B=a[x][i].from,C=a[x][i].dis;\n\t\tif(k-C<0) continue;// \u7279\u5224\n\t\tans+=query(A,0,k-C); \n\t\tans-=query(B,1,k-C);\n\t}\n\treturn ans;\n}\n```\n\n5. \u6811\u72b6\u6570\u7ec4\n\n\u4e5f\u52a0\u5165\u4e00\u4e9b\u7279\u5224\uff0c\u9632\u6b62\u8d8a\u754c\u3002\n\n```\nvoid update(int x,int op,int p,int v){//+1\u662f\u8ba9\u8ddd\u79bb\u6574\u4f53\u53f3\u79fb1\uff0c\u56e0\u4e3a\u6709\u8ddd\u79bb\u4e3a0\n\tfor(int i=p+1;i<=DS[op][x].size()-1;i+=lowbit(i)) DS[op][x][i]+=v;\n}\nint query(int x,int op,int p){//\u5224\u65ad\u67e5\u8be2\u662f\u5426\u8d85\u8fc7\u6570\u7ec4\u5927\u5c0f\n\tint res=0; p=min(p+1,int(DS[op][x].size()-1));\n\tfor(int i=p;i>=1;i-=lowbit(i)) res+=DS[op][x][i];\n\treturn res;\n}\n```\n\n## \u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\n#define N 100005\nusing namespace std;\nint value[N],size[N],vis[N],f[N],head[N],tot,n,m;\nint all,best,cnt,Maxdep1,Maxdep2,RT;\nstruct edge{\n\tint to,nex;\n}e[N<<1];\nstruct node{\n\tint G,from,dis;\n};\nvector<node> a[N];\nvector<int> DS[2][N];\nint lowbit(int x){ return x&-x; }\nvoid update(int x,int op,int p,int v){\n\tfor(int i=p+1;i<=DS[op][x].size()-1;i+=lowbit(i)) DS[op][x][i]+=v;\n}\nint query(int x,int op,int p){\n\tint res=0; p=min(p+1,int(DS[op][x].size()-1));\n\tfor(int i=p;i>=1;i-=lowbit(i)) res+=DS[op][x][i];\n\treturn res;\n}\nvoid add(int x,int y){\n\te[++tot].to=y;\n\te[tot].nex=head[x];\n\thead[x]=tot;\n}\nvoid findroot(int x,int fa){\n\tf[x]=0; size[x]=1;\n\tfor(int i=head[x];i;i=e[i].nex){\n\t\tint to=e[i].to;\n\t\tif(vis[to]||to==fa) continue;\n\t\tfindroot(to,x);\n\t\tsize[x]+=size[to]; f[x]=max(f[x],size[to]);\n\t}\n\tf[x]=max(f[x],all-size[x]);\n\tif(f[best]>f[x]) best=x;\n}\nvoid finddep(int x,int fa,int d){\n\tMaxdep2=max(Maxdep2,d); a[x].push_back(node{RT,cnt,d});\n\tfor(int i=head[x];i;i=e[i].nex){\n\t\tint to=e[i].to;\n\t\tif(vis[to]||to==fa) continue;\n\t\tfinddep(to,x,d+1);\n\t}\n}\nvoid solve(int x){\n\ta[x].push_back(node{x,0,0});\n\tMaxdep1=0; RT=x;\n\tfor(int i=head[x];i;i=e[i].nex){\n\t\tint to=e[i].to;\n\t\tif(vis[to]) continue;\n\t\tMaxdep2=0; ++cnt; finddep(to,x,1);\n\t\tMaxdep1=max(Maxdep1,Maxdep2);\n\t\tDS[1][cnt].resize(Maxdep2+2);\n\t}\n\tDS[0][x].resize(Maxdep1+2);\n\tvis[x]=1;\n\tfor(int i=head[x];i;i=e[i].nex){\n\t\tint to=e[i].to;\n\t\tif(vis[to]) continue;\n\t\tbest=0; all=size[to];\n\t\tfindroot(to,0); solve(best);\n\t}\n}\nvoid modify(int x,int v){\n\tfor(int i=0;i<a[x].size();i++){\n\t\tint A=a[x][i].G,B=a[x][i].from,C=a[x][i].dis;\n\t\tupdate(A,0,C,v);\n\t\tif(B) update(B,1,C,v);\n\t}\n\t\n}\nint ask(int x,int k){\n\tint ans=0; \n\tfor(int i=0;i<a[x].size();i++){\n\t\tint A=a[x][i].G,B=a[x][i].from,C=a[x][i].dis;\n\t\tif(k-C<0) continue;\n\t\tans+=query(A,0,k-C); \n\t\tans-=query(B,1,k-C);\n\t}\n\treturn ans;\n}\nsigned main(){\n\tint op,x,y,lastans;\n\twhile(cin>>n>>m){\n\t\tmemset(head,0,sizeof(head)); tot=0;\n\t\tfor(int i=1;i<=n;i++) cin>>value[i];\n\t\tfor(int i=1;i<n;i++) cin>>x>>y,add(x,y),add(y,x);\n\t\tbest=0; f[0]=0x3f3f3f3f; all=n; //\u70b9\u5206\u6cbb\u9884\u5904\u7406\n\t\tmemset(vis,0,sizeof(vis)); cnt=0;\n\t\tfindroot(1,0); solve(best);\n\t\tfor(int i=1;i<=n;i++) modify(i,value[i]);//\u66f4\u65b0\n\t\tlastans=0; \n\t\tfor(int i=1;i<=m;i++){\n\t\t\tcin>>op>>x>>y; x^=lastans; y^=lastans;//\u5f3a\u5236\u5728\u7ebf\n\t\t\tif(op==0) lastans=ask(x,y),cout<<lastans<<endl;\n\t\t\telse modify(x,y-value[x]),value[x]=y;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1614258982,
        "uid": 282080,
        "name": "RefreshinglyNaive",
        "ccfLevel": 5,
        "title": "P6329\u9898\u89e3"
    },
    {
        "content": "## \u9898\u89e3\n\n\u70b9\u5206\u6811\u6700\u7b80\u5355\u7684\u5199\u6cd5\u5c31\u662f\u7ef4\u62a4**\u4e24\u4e2a\u6570\u636e\u7ed3\u6784**\uff08\u4e00\u822c\u662fvector\uff09\n\n\u4e00\u4e2a\u8bb0\u5f55\u70b9\u5206\u6811\u4e0a**\u4ee5\u70b9u\u4e3a\u6839\u7684\u5b50\u6811\u4e0eu\u7684\u4fe1\u606f**\uff08\u5230u\u7684\u8ddd\u79bb\uff09 \n\n\u4e00\u4e2a\u8bb0\u5f55\u70b9\u5206\u6811\u4e0a**\u4ee5\u70b9u\u4e3a\u6839\u7684\u5b50\u6811\u4e0efa[u]\u7684\u4fe1\u606f**\uff08\u5230\u6cd5fa[u]\u7684\u8ddd\u79bb\uff09\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u5bb9\u65a5\uff08\u51cf\u4e00\u51cf\uff09\uff0c\u6c42\u51fa**\u5728fa[u]\u7684\u5b50\u6811\u4e2d\u4e14\u4e0d\u5728u\u7684\u5b50\u6811\u4e2d**\u7684\u4fe1\u606f\uff08\u5230\u67d0\u67d0\u70b9\u7684\u8ddd\u79bb\uff09\n\n\u9664\u4e86\u8fd9\u79cd\u5199\u6cd5\uff0c\u5c31\u8981\u91cd\u6784\u6811\uff08\u4f7f\u5ea6\u6570<=3\uff09\u4e86\n\n\u8fd9\u9898\u8fd8\u6709\u4e00\u4e2a\u96be\u70b9\u5c31\u662f\u8fd9\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\u662f\u6811\u72b6\u6570\u7ec4\n\n\u90a3\u4e48\u5c31\u8981\u52a8\u6001\u5f00\u70b9\uff08vector\uff09\uff0c\u6709\u70b9\u9ebb\u70e6 \n\n\u8ddd\u79bb\u4e3a0\u7684\u70b9\uff08\u672c\u8eab\uff09\uff0c\u6811\u72b6\u6570\u7ec4\u4e0d\u597d\u5904\u7406\uff0c\u6211\u4eec\u5c31\u5148\u4e0d\u52a0\u5165\uff0c\u5230\u8981\u7528\u7684\u65f6\u5019\u76f4\u63a5\u52a0 \n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define next Next\n//#define gc getchar\n//#define int long long\nconst int N=2e6+5;\nint n,m,top,t,sum,rt,lastans,sz[N],fa[N],vis[N],ru[N],id[N],dep[N],a[N];\nint head[N],ma[N],Log[N],size[N],st[N][21];\nstruct node{\n\tint too,next;\n}edge[N*2];\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int gc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\ninline int read()\n{\n    int ret=0,f=0;char c=gc();\n    while(!isdigit(c)){if(c=='-')f=1;c=gc();}\n    while(isdigit(c)){ret=ret*10+c-48;c=gc();}\n    if(f)return -ret;return ret;\n}\nvoid write(int x)\n{\n\tif(x<10){putchar(x+'0');return;}\n\twrite(x/10);\n\tputchar(x%10+'0');\n}\nint lowbit(int x)\n{\n\treturn x&-x;\n}\nstruct Tree{\n\tvector<int>c;\n\tvoid init(int n)\n\t{\n\t\tfor(int i=0;i<=n;i++)\n\t\t\tc.push_back(0);\n\t}\n\tvoid change(int x,int y)\n\t{\n\t\tint n=c.size()-1;\n\t\twhile(x<=n)\n\t\t{\n\t\t\tc[x]+=y;\n\t\t\tx+=lowbit(x);\n\t\t}\n\t}\n\tint find(int x)\n\t{\n\t\tint res=0;\n\t\tif(x>c.size()-1)x=c.size()-1;//\u6ce8\u610f \n\t\twhile(x>0)\n\t\t{\n\t\t\tres+=c[x];\n\t\t\tx-=lowbit(x);\n\t\t}\n\t\treturn res;\n\t}\n}T1[N],T2[N];\nvoid add(int a,int b)\n{\n\tedge[++top].too=b;edge[top].next=head[a];head[a]=top;\n}\nvoid dfs(int u,int fa,int d)\n{\n\tru[u]=++t;\n\tid[t]=u;\n\tdep[t]=d;\n\tfor(int i=head[u];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].too;\n\t\tif(v==fa)continue;\n\t\tdfs(v,u,d+1);\n\t\tid[++t]=u;\n\t\tdep[t]=d;\n\t}\n}\nint LCA(int x,int y)\n{\n\tint l=ru[x],r=ru[y];\n\tif(l>r)swap(l,r);\n\tint k=Log[r-l+1];\n\tx=st[l][k];y=st[r-(1<<k)+1][k];\n\tif(dep[x]<=dep[y])return id[x]; \n\treturn id[y];\n\t//\u6ce8\u610fLCA\u662f\u8981\u8f6c\u5316\u4e3aid\u7684 \n}\nint dis(int x,int y)\n{\n\tint lca=LCA(x,y);\n\treturn dep[ru[x]]+dep[ru[y]]-2*dep[ru[lca]];\n\t//\u6ce8\u610f\u8fd9\u91cc\u7684dep[x]\u662f\u7f16\u53f7\u4e3ax\u7684\u70b9\u7684\u6df1\u5ea6\uff0c\u4e0d\u662f\u70b9x\u7684\u6df1\u5ea6 \n}\nvoid getrt(int u,int fa)\n{\n\tma[u]=0;size[u]=1;\n\tfor(int i=head[u];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].too;\n\t\tif(v==fa||vis[v])continue;\n\t\tgetrt(v,u);\n\t\tsize[u]+=size[v];\n\t\tma[u]=max(ma[u],size[v]);\n\t}\n\tma[u]=max(ma[u],sum-size[u]);\n\tif(ma[u]<ma[rt])rt=u;\n}\nvoid solve(int u)\n{\n\tvis[u]=1;\n\tfor(int i=head[u];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].too;\n\t\tif(vis[v])continue;\n\t\tma[rt=0]=sum=size[v];\n\t\tgetrt(v,0);\n\t\tfa[rt]=u;\n\t\tsz[rt]=size[v];//\u6ce8\u610frt\u7684\u5927\u5c0f\u662fsize[v] \n\t\tT1[rt].init(size[v]);//\u6ce8\u610f\u4e0d\u80fd\u5168\u5f00n\uff0c\u5426\u5219\u53d8n^2 \n\t\tT2[rt].init(size[v]); \n\t\tsolve(rt);\n\t}\n}\nvoid work(int x,int y)\n{\n\tfor(int i=fa[x];i;i=fa[i])\n\t{\n\t\tint len=dis(x,i);\n\t\tif(len<=sz[i])T1[i].change(len,y);\n\t}\n\tfor(int i=x;i;i=fa[i])\n\t{\n\t\tif(fa[i]==0)break;\n\t\tint len=dis(x,fa[i]);\n\t\tif(len<=sz[i])T2[i].change(len,y);\n\t}\n}\nsigned main()\n{\n\tLog[0]=-1;\n\tfor(int i=1;i<=200000;i++)Log[i]=Log[i/2]+1;\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tdfs(1,0,0);\n\tfor(int i=1;i<=t;i++)st[i][0]=i;\n\tfor(int i=1;i<=Log[t];i++)\n\t\tfor(int j=1;j<=t-(1<<i)+1;j++)\n\t\t{\n\t\t\tint x=st[j][i-1],y=st[j+(1<<(i-1))][i-1];\n\t\t\tif(dep[x]<=dep[y])st[j][i]=x;\n\t\t\telse st[j][i]=y;\n\t\t}\n\tma[rt=0]=sum=n;\n\tgetrt(1,0);\n\tsz[rt]=n;\n\tT1[rt].init(n);\n\tT2[rt].init(n);\n\tsolve(rt);\n\tfor(int i=1;i<=n;i++)\n\t\twork(i,a[i]);\n\twhile(m--)\n\t{\n\t\tint opt=read(),x=read()^lastans,y=read()^lastans;\n\t\tif(opt==0)\n\t\t{\n\t\t\tint res=T1[x].find(y)+a[x];\n\t\t\t//\u6ce8\u610f\u4e3a\u4e86\u65b9\u4fbf\u6811\u72b6\u6570\u7ec4\uff0c\u6ca1\u6709\u628a\u8ddd\u79bb\u4e3a0\u7684\u70b9\u653e\u8fdb\u53bb \n\t\t\tfor(int i=x;i;i=fa[i])\n\t\t\t{\n\t\t\t\tif(fa[i]==0)break;\n\t\t\t\tint len=dis(x,fa[i]);\n\t\t\t\tif(y-len>=0)\n\t\t\t\t{\n\t\t\t\t\tres+=T1[fa[i]].find(y-len)+a[fa[i]];\n\t\t\t\t\tres-=T2[i].find(y-len);\n\t\t\t\t}\n\t\t\t}\n\t\t\twrite(lastans=res);\n\t\t\tputchar('\\n'); \n\t\t}\n\t\telse{\n\t\t\twork(x,y-a[x]);\n\t\t\ta[x]=y;\n\t\t}\n\t}\n\treturn 0;\n}\n/*\n5 1\n1 3 5 7 9\n1 2\n2 3\n3 4\n3 5\n0 2 1\n*/\n/*\n# \u70b9\u5206\u6811\u6700\u7b80\u5355\u7684\u5199\u6cd5\u5c31\u662f\u7ef4\u62a4\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\uff08\u4e00\u822c\u662fvector\uff09\n\u4e00\u4e2a\u8bb0\u5f55\u70b9\u5206\u6811\u4e0a\u4ee5\u70b9u\u4e3a\u6839\u7684\u5b50\u6811\u4e0eu\u7684\u4fe1\u606f\uff08\u5230u\u7684\u8ddd\u79bb\uff09 \n\u4e00\u4e2a\u8bb0\u5f55\u70b9\u5206\u6811\u4e0a\u4ee5\u70b9u\u4e3a\u6839\u7684\u5b50\u6811\u4e0efa[u]\u7684\u4fe1\u606f\uff08\u5230\u6cd5fa[u]\u7684\u8ddd\u79bb\uff09\n\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u5bb9\u65a5\uff08\u51cf\u4e00\u51cf\uff09\uff0c\u6c42\u51fa\u5728fa[u]\u7684\u5b50\u6811\u4e2d\u4e14\u4e0d\u5728u\u7684\u5b50\u6811\u4e2d\u7684\u4fe1\u606f\uff08\u5230\u67d0\u67d0\u70b9\u7684\u8ddd\u79bb\uff09\n\u9664\u4e86\u8fd9\u79cd\u5199\u6cd5\uff0c\u5c31\u8981\u91cd\u6784\u6811\uff08\u4f7f\u5ea6\u6570<=3\uff09\u4e86\n\u8fd9\u9898\u8fd8\u6709\u4e00\u4e2a\u96be\u70b9\u5c31\u662f\u8fd9\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\u662f\u6811\u72b6\u6570\u7ec4\n\u90a3\u4e48\u5c31\u8981\u52a8\u6001\u5f00\u70b9\uff08vector\uff09\uff0c\u6709\u70b9\u9ebb\u70e6 \n*/\n```",
        "postTime": 1595289483,
        "uid": 39484,
        "name": "\u7c73\u5947",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6329 \u3010\u3010\u6a21\u677f\u3011\u70b9\u5206\u6811 | \u9707\u6ce2\u3011"
    },
    {
        "content": "- \u6211\u4eec\u4e4b\u524d\u5728\u601d\u8003\u70b9\u5206\u6cbb\u7684\u65f6\u5019\u5ffd\u7136\u60f3\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\n- \u5982\u679c\u628a\u6bcf\u6b21\u7684\u5206\u6cbb\u91cd\u5fc3\u5168\u90e8\u5efa\u7acb\u7236\u5b50\u5173\u7cfb\uff0c\u663e\u7136\u53ef\u4ee5\u5f97\u5230\u4e00\u68f5\u65b0\u6811\uff0c\u800c\u8fd9\u68f5\u6811\u7684\u9ad8\u5ea6\u4e3a\u4e25\u683c $O(\\log n)$\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/9iiwnfyx.png)\n- \u7531\u4e8e\u70b9\u5206\u6811\u7684\u9ad8\u5ea6\u5f88\u5c11\uff08\u63d0\u9ad8\u884c\u653f\u6548\u7387\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u4fdd\u5b58\u5173\u4e8e\u6bcf\u4e2a\u70b9\u5206\u6811\u4e0a\u8282\u70b9\u7ebf\u6027\u7684\u4fe1\u606f\uff08\u66f4\u597d\u5730\u201c\u7ba1\u8f96\u201d\u5b50\u6811\uff0c\u4e2d\u592e\u96c6\u6743\uff09\uff01\u6240\u4ee5\u5f88\u591a\u66b4\u529b\u7684\u64cd\u4f5c\u90fd\u662f\u53ef\u4ee5\u641e\u7684\uff08~~\u66b4\u653f~~\uff09\u3002\n\n**\u5f15\u5165**\n- \u8ba9\u6211\u4eec\u6765\u4e00\u9053[\u4f8b\u9898](https://www.luogu.com.cn/problem/P6329)\uff0c\u5b83\u8981\u6c42\u5728\u7ebf\u5730\u4fee\u6539\u70b9\u6743\uff0c\u67e5\u8be2\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $k$ \u7684\u70b9\u7684\u70b9\u6743\u548c\u3002\n- \u6211\u4eec\u5148\u5efa\u51fa\u70b9\u5206\u6811\uff0c\u4e00\u4e2a\u5f88\u66b4\u529b\u7684\u60f3\u6cd5\u5c31\u662f\u7528 $\\text{vector}$ \u6c42\u51fa $c(u,k)$ \u8868\u793a $u$ \u5728\u70b9\u5206\u6cbb\u4e0b\u7684\u5b50\u6811\u5185\u5728\u539f\u6811\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $k$ \u7684\u70b9\u7684\u4e2a\u6570\uff0c\u9884\u5904\u7406 $d(u,k)$ \u8868\u793a $u$ \u5728\u70b9\u5206\u6cbb\u4e0a\u7684 $k$ \u7ea7\u7956\u5148\u4e0e\u5b83\u5728\u539f\u6811\u4e0a\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u67e5\u8be2\u7684\u65f6\u5019\u66b4\u529b\u67e5\u8be2\uff08$f(u,k)$ \u8868\u793a\u5728\u70b9\u5206\u6811\u4e0a\u7684 $k$ \u7ea7\u7956\u5148\uff09$f(fa(u,i),k-d(u,i))$\u3002\n- \u7136\u540e\u4f60\u5f88\u5feb\u53d1\u73b0\u8fd9\u6837\u4f1a\u91cd\u590d\uff0c\u56e0\u4e3a\u5b83\u7684\u7236\u4eb2\u4f1a\u67e5\u5230\u5b83\u513f\u5b50\uff0c\u6240\u4ee5\u8fd8\u8981\u8bbe $g(u,k)$ \u8868\u793a $u$ \u5728\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2\u5728\u539f\u6811\u4e0a\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e $k$ \u7684\u70b9\u6709\u591a\u5c11\u4e2a\u5728 $u$ \u7684\u5b50\u6811\u4e0a\uff0c\u4ece\u800c\u51cf\u53bb\u91cd\u590d\u7684\u90e8\u5206\u3002\n- \u63a5\u4e0b\u6765\u4f60\u8fd8\u8981\u5e26\u4fee\uff0c\u4f46\u662f\u4f60\u5f88\u5feb\u53d1\u73b0\u8fd9\u5e76\u4e0d\u662f\u96be\u4e8b\uff0c\u66b4\u529b\u5728\u70b9\u5206\u6811\u4e0a\u8df3\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u8fd9\u4e00\u8fc7\u7a0b\u3002\n- \u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n+q\\log^2 n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n**\u5b9e\u73b0\u7ec6\u8282**\n- \u6211\u8ba4\u4e3a\u70b9\u5206\u6811\u7684\u5b9e\u73b0\u5f88\u6709\u7ec6\u8282\uff0c\u7c7b\u4f3c\u4e8e[\u5206\u6cbb](https://www.luogu.com.cn/blog/luo1gu1zui1bang1/post-ji-chu-you-hua-fen-zhi)\u7684\u5185\u5bb9\uff0c\u5b83\u53ef\u4ee5\u5f62\u8c61\u5316\u5730\u5206\u4e3a\u8fd9\u51e0\u6b65\uff1a\n- \u7b2c\u4e00\u6b65\u5373\u5bfb\u627e\u91cd\u5fc3\uff0c\u5728\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u4e0a\u5c42\u5bf9\u5b50\u6811\u7684\u5f71\u54cd\uff08\u6211\u662f\u901a\u8fc7\u4e00\u4e2a\u961f\u5217\u6765\u5b9e\u73b0\u7684\uff09\u3002\n- \u7b2c\u4e8c\u6b65\u5373\u6b63\u5f0f\u5730\u8ba1\u7b97\u5b50\u6811\u5185\u90e8\u7684\u8d21\u732e\uff0c\u7136\u540e\u627e\u5230\u91cd\u5fc3\uff0c\u540c\u65f6\u4e0b\u4f20\u5bf9\u5b50\u6811\u7684\u5f71\u54cd\uff08\u6211\u540c\u6837\u901a\u8fc7\u4e00\u4e2a\u961f\u5217\u5b9e\u73b0\uff09\u3002\n- \u7b2c\u4e09\u6b65\u5373\u5206\u88c2\u4e0b\u4f20\uff0c\u628a\u8fd9\u4e9b\u7eb2\u8981\u5728\u5934\u8111\u5185\u60f3\u4e00\u60f3\uff0c\u601d\u8def\u5c31\u9010\u6e10\u6e05\u6670\u4e86\u3002\n- $f$ \u51fd\u6570\u548c $g$ \u51fd\u6570\u5bf9\u4e8e\u7279\u5b9a\u7684\u8282\u70b9 $u$ \u6240\u9700\u8981\u5f00\u7684\u7a7a\u95f4\u5927\u5c0f\u540c\u6837\u5341\u5206\u91cd\u8981\uff0c$f$ \u51fd\u6570\u5e94\u8be5\u81f3\u5c11\u5f00\u4ee5 $u$ \u4e3a\u6839\uff0c\u8fd9\u68f5\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6\u90a3\u4e48\u591a\u7684\u7a7a\u95f4\uff0c\u800c $g$ \u51fd\u6570\u5e94\u8be5\u5f00\u4ee5 $u$ \u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2\u4e3a\u6839\uff0c\u8fd9\u68f5\u5b50\u6811\u7684\u6df1\u5ea6\u90a3\u4e48\u591a\u7684\u7a7a\u95f4\uff0c\u5f53\u7136\uff0c\u4f60\u5168\u90e8\u8bbe\u6210\u5b50\u6811\u5927\u5c0f\u4e5f\u53ef\u4ee5\u3002\n- \u8fd9\u91cc\u5410\u69fd\u4e00\u4e0b\uff0c\u6211\u4e00\u5f00\u59cb\u70b9\u5206\u6cbb\u6253\u9519\u8fd8\u8fc7\u4e86\u597d\u51e0\u9898\uff0c\u8fd9\u6570\u636e\u6709\u70b9\u6c34\uff0c[\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/15plvu6a)\u3002\n- [\u8c03\u8bd5\u4ee3\u7801](https://www.luogu.com.cn/paste/e7d831z8)\u3002",
        "postTime": 1647440891,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u5206\u6cbb\u3011\u70b9\u5206\u6811"
    },
    {
        "content": "\u7565\u89e3\u7684\u201c\u7565\u201d\u5b57\u4e3b\u8981\u6307\u4ee3\u7801\u5341\u5206\u7b80\u77ed\uff0c\u52a0 `fread` \u5feb\u8bfb\u53ea\u6709 2.23k\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\n\n1. \u6811\u7684\u91cd\u5fc3\uff1b\n2. \u6811\u72b6\u6570\u7ec4\uff1b\n3. \u70b9\u5206\u6cbb\uff08\u4e0d\u4e00\u5b9a\u8981\u5199\u51fa\u6765\uff0c\u6211\u81f3\u4eca\u6ca1\u6709\u5199\u8fc7\u70b9\u5206\u6cbb\uff09\u3002\n\n\u6b65\u9aa4\u5982\u4e0b\uff1a\n\n1. \u627e\u5230\u91cd\u5fc3\uff0c\u5904\u7406\u51fa\u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u5e76\u5efa\u7acb\u6700\u5927\u6df1\u5ea6\u5927\u5c0f\u7684\u6811\u72b6\u6570\u7ec4\uff1b\n2. \u5904\u7406\u51fa\u6240\u6709\u8282\u70b9\u5728\u91cd\u5fc3\u7684\u90a3\u4e2a\u513f\u5b50\u4e0b\u9762\uff0c\u5bf9\u4e8e\u91cd\u5fc3\u7684\u6bcf\u4e00\u4e2a\u513f\u5b50\u5efa\u7acb\u4e00\u4e2a\u4ee5\u8be5\u68f5\u5b50\u6811\u4e0b\u6700\u5927\u6df1\u5ea6\u5927\u5c0f\u7684\u6811\u72b6\u6570\u7ec4\u3002\n3. \u9012\u5f52\u5206\u6cbb\u5efa\u6811\u3002\n\n\u8fd9\u6837\uff0c\u6309\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u5c06\u6743\u503c\u63d2\u5165\u70b9\u5206\u6811\u4e0a\u6bcf\u4e00\u4e2a\u6df1\u5ea6\u7684\u4e24\u68f5\u6811\u72b6\u6570\u7ec4\uff0c\u67e5\u8be2\u65f6\u8981\u5bf9\u7740\u4e24\u68f5\u6811\u72b6\u6570\u7ec4\u5dee\u5206\u4e00\u4e0b\u3002\n\n\u6709\u4e00\u4e9b\u96be\u7406\u89e3\uff0c\u53ef\u4ee5\u770b\u4ee3\u7801\uff1a\n```cpp\nvoid dfs1(int x=nps,int pr=0){\n\tsz[x]=1;\n\tfor(int y:lk[x])\n\t\tif(!vs[y]&&y!=pr)\n\t\t\tdfs1(y,x),sz[x]+=sz[y];\n}\nvoid dfs2(int x=nps,int pr=0){\n\taw[x]=sz[nps]-sz[x];\n\tfor(int y:lk[x])\n\t\tif(!vs[y]&&y!=pr)\n\t\t\tdfs2(y,x),aw[x]=max(aw[x],sz[y]);\n\tif(aw[x]<aw[rt])rt=x;\n}\nvoid dfs3(int x,int pr=0){\n\tf[x][++cn[x]]=rt,mxd[x]=d[x][cn[x]];\n\tfor(int y:lk[x])\n\t\tif(!vs[y]&&y!=pr){\n\t\td[y][cn[x]]=d[x][cn[x]]+1;\n\t\t_f[y][cn[x]]=_f[x][cn[x]],dfs3(y,x);\n\t\tif(mxd[y]>mxd[x])mxd[x]=mxd[y];\n\t}\n}\nvoid calc(int ps=1){\n\tnps=ps,rt=0,dfs1(),dfs2(),vs[rt]=1,++cn[rt],mxd[rt]=0;\n\tfor(int y:lk[rt])\n\t\tif(!vs[y]){\n\t\t\t_f[y][cn[rt]]=y,d[y][cn[rt]]=1,dfs3(y);\n\t\t\tct[y][cn[rt]].resize(mxd[y]+2);\n\t\t\tif(mxd[y]>mxd[rt])mxd[rt]=mxd[y];\n\t\t}ct[rt][cn[rt]].resize(mxd[rt]+2);\n\tfor(int y:lk[rt])\n\t\tif(!vs[y])calc(y);\n}\ninline void add(int x,int p,int d,int v){\n\tint sz=ct[x][p].size();\n\tfor(++d;d<sz;d+=d&-d)ct[x][p][d]+=v;\n}\ninline int qry(int x,int p,int d){\n\tint res=0;d=max(min(d+1,(int)ct[x][p].size()-1),0);\n\tfor(;d;d-=d&-d)res+=ct[x][p][d];\n\treturn res;\n}\ninline void Add(int x,int v){\n\tadd(x,cn[x],0,v);\n\tfor(int i=cn[x]-1;i;--i){\n\t\tadd(f[x][i],i,d[x][i],v);\n\t\tadd(_f[x][i],i,d[x][i],v);\n\t}\n}\n\n```\n\u70b9\u5206\u6811\u7684\u4f18\u70b9\u5728\u4e8e\u901a\u8fc7\u6bcf\u6b21\u627e\u91cd\u5fc3\uff0c\u4f7f\u5f97\u5206\u6cbb\u7684\u6b21\u6570\u662f $O(\\log_2n)$ \u7684\uff0c\u4e8e\u662f\u5355\u6b21\u4fee\u6539\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u5747\u4e3a $O(\\log_2^2n)$\u3002\n\n\u7ed9\u51fa\u4e3b\u51fd\u6570\u4ee3\u7801\u4f9b\u53c2\u8003\uff1a\n```cpp\nint main(){\n\tread(n,q),aw[0]=2e9;int i,op,x,y;\n\tfor(x=1;x<=n;++x)read(vl[x]);\n\tfor(i=1;i<n;++i){\n\t\tread(x,y);\n\t\tlk[x].push_back(y);\n\t\tlk[y].push_back(x);\n\t}calc();\n\tfor(x=1;x<=n;++x)Add(x,vl[x]);\n\twhile(q--){\n\t\tread(op,x,y),x^=ans,y^=ans;\n\t\tif(op){\n\t\t\tAdd(x,y-vl[x]),vl[x]=y;\n\t\t}else{\n\t\t\tans=qry(x,cn[x],y);\n\t\t\tfor(i=cn[x]-1;i;--i)\n\t\t\t\tans+=qry(f[x][i],i,y-d[x][i])-qry(_f[x][i],i,y-d[x][i]);\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}return 0;\n}\n```",
        "postTime": 1659742973,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u70b9\u5206\u6811\u7565\u89e3"
    },
    {
        "content": "# \u70b9\u5206\u6cbb\n\n\u70b9\u5206\u6cbb\u9002\u5408\u5904\u7406\u5927\u89c4\u6a21\u7684\u6811\u4e0a\u8def\u5f84\u4fe1\u606f\u95ee\u9898\u3002\n\n### \u95ee\u9898\u5f15\u5165\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5\u6709 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u4e24\u6761\u8fb9\u4e4b\u95f4\u6709\u8fb9\u6743\uff0c\u8be2\u95ee\u6811\u4e0a\u8ddd\u79bb\u4e3a $k$ \u7684\u70b9\u5bf9\u662f\u5426\u5b58\u5728\u3002\n\n### \u6d41\u7a0b\u5982\u4e0b\uff1a\n\n1. \u9009\u62e9\u5f53\u524d\u6811\u7684\u91cd\u5fc3\u4f5c\u4e3a\u6839\u7ed3\u70b9 $root$\uff0c\u6240\u6709\u5b8c\u5168\u4f4d\u4e8e\u5176\u5b50\u6811\u7684\u8def\u5f84\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u662f\u7ecf\u8fc7 $root$ \u7684\u8def\u5f84\uff0c\u4e8c\u662f\u4e0d\u7ecf\u8fc7 $root$ \u7684\u8def\u5f84\uff0c\u663e\u7136\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u8def\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u5176\u5b50\u8282\u70b9\u6765\u5f97\u5230\u8fd9\u4e9b\u8def\u5f84\u7684\u7b54\u6848\uff1b\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u8def\u5f84\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52 $root$ \u5b50\u6811\u6765\u5f97\u5230\u7b54\u6848\uff0c\u5373\u6b65\u9aa4 2\u3002\u5728\u6b65\u9aa4 1 \u6700\u540e\uff0c\u6211\u4eec\u5c06 $root$ \u6807\u8bb0\u4e3a\u4e0d\u53ef\u5230\u8fbe\u3002\n2. \u5bf9\u4e8e $root$ \u7684\u6bcf\u4e00\u4e2a\u76f4\u63a5\u76f8\u8fde\u7684\u5b50\u8282\u70b9\u6784\u6210\u7684\u5b50\u6811\u4e2d\uff0c\u6211\u4eec\u5206\u522b\u9012\u5f52\u5904\u7406\u5176\u5b50\u6811\u3002\n3. \u91cd\u590d 1\u30012 \u4e24\u4e2a\u6b65\u9aa4\uff0c\u76f4\u5230\u6240\u6709\u7ed3\u70b9\u90fd\u6210\u4e3a\u8fc7 $root$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6  $\\mathcal O(n \\log n)$\u3002\n\n### \u6b63\u786e\u6027\u8bc1\u660e\uff1a\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u6761\u8def\u5f84 $u_1 \\to u_2 \\to \\dots \\to u_k$\uff0c\u8bbe\u8def\u5f84\u4e2d\u5728\u70b9\u5206\u6cbb\u4e2d\u6700\u65e9\u904d\u5386\u5230\u7684\u70b9\u4e3a $u_w$\uff0c\u663e\u7136\uff0c\u8fd9\u6761\u8def\u5f84\u4e00\u5b9a\u4f1a\u5728 $u_w$ \u4e3a $root$ \u65f6\u88ab\u8ba1\u7b97\u5165\u7b54\u6848\uff0c\u53c8\u8003\u8651\u5230 $u_w$ \u5728\u6b65\u9aa4 1 \u540e\u4f1a\u88ab\u6807\u8bb0\u4e3a\u4e0d\u53ef\u5230\u8fbe\uff0c\u6545\u8fd9\u6761\u8def\u5f84\u5f53\u4e14\u4ec5\u5f53\u5728 $u_w$ \u4e3a $root$ \u65f6\u4f1a\u88ab\u8ba1\u7b97\u5165\u7b54\u6848\u3002\n\n### \u65f6\u95f4\u590d\u6742\u5ea6\u8bc1\u660e\uff1a\n\n\u8003\u8651\u5230\u6bcf\u6b21\u9009\u62e9\u7684 $root$ \u5747\u4e3a\u5b50\u6811\u7684\u91cd\u5fc3\uff0c\u6545\u53ea\u4f1a\u6709 $\\log n$ \u5c42\uff0c\u6bcf\u4e00\u5c42\u7edf\u8ba1\u7b54\u6848 & \u627e\u91cd\u5fc3\u7684\u603b\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n)$\uff0c\u6545\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n \\log n)$\u3002\n\n# \u70b9\u5206\u6811\n\n### \u95ee\u9898\u5f15\u5165\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5\u6709 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u70b9\u6709\u70b9\u6743\uff0c\u6709 $q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4fee\u6539\u4e00\u4e2a\u70b9\u6743\u6216\u8be2\u95ee\u6240\u6709\u4e0e\u70b9 $x$ \u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e $k$ \u7684\u70b9\u7684\u70b9\u6743\u4e4b\u548c\u3002\n\n### \u5206\u6790\uff1a\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u8dd1\u70b9\u5206\u6cbb\u663e\u7136\u884c\u4e0d\u901a\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u70b9\u5206\u6cbb\u90fd\u4f1a\u6d6a\u8d39\u65f6\u95f4\u5728\u627e\u91cd\u5fc3 & \u7edf\u8ba1\u65e0\u7528\u7684\u7b54\u6848\uff0c\u6211\u4eec\u8003\u8651\u628a\u70b9\u5206\u6cbb\u7684\u8fc7\u7a0b\u8bb0\u5f55\u4e0b\u6765\uff0c\u5373\u6784\u9020\u4e00\u68f5\u70b9\u5206\u6811\u3002\n\n### \u6784\u9020\u70b9\u5206\u6811\u6d41\u7a0b\uff1a\n\n\u6d41\u7a0b\u5f88\u7b80\u5355\uff0c\u9009\u62e9\u5f53\u524d\u6811\u7684\u91cd\u5fc3\u4f5c\u4e3a $root$\uff0c\u5bf9\u4e8e $root$ \u7684\u6bcf\u4e00\u4e2a\u76f4\u63a5\u76f8\u8fde\u7684\u5b50\u8282\u70b9\u6784\u6210\u7684\u5b50\u6811\u4e2d\uff0c\u6211\u4eec\u5206\u522b\u627e\u5230\u5176\u5b50\u6811\u7684\u91cd\u5fc3\u4f5c\u4e3a\u65b0\u7684 $root\u2019$\uff0c\u5c06 $root'$ \u5728\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2\u5b9a\u4e3a $root$\uff0c\u5c06 $root$ \u6807\u8bb0\u4e3a\u4e0d\u53ef\u5230\u8fbe\uff0c\u5206\u522b\u5bf9\u5b50\u6811\u9012\u5f52\u5904\u7406\u5373\u53ef\u3002\n\n### \u6027\u8d28\uff1a\n\n1. \u6bcf\u4e00\u4e2a\u7ed3\u70b9\u5747\u4f1a\u51fa\u73b0\u5728\u70b9\u5206\u6811\u4e2d\u51fa\u73b0\u3002\n2. \u6811\u9ad8\u4e3a $\\log n$ \u7ea7\u522b\u3002\n3. \u5bf9\u4e8e\u4efb\u610f\u4e24\u70b9 $u, v$\uff0c\u5728\u70b9\u5206\u6811\u4e0a\u7684 LCA \uff08\u8bbe\u4e3a $w$\uff09\u4e00\u5b9a\u5728\u539f\u6811 $u \\to v$ \u7684\u8def\u5f84\u4e0a\uff0c\u5373 $\\operatorname{dist}(u, v) = \\operatorname{dist}(u, w) + \\operatorname{dist}(w, v)$\u3002\n\n\u7531\u4ee5\u4e0a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u4fbf\u53ef\u4ee5\u901a\u8fc7 $x$ \u5728\u70b9\u5206\u6811\u4e0a\u8df3\u7236\u4eb2\u7ed3\u70b9\u6765\u627e\u5230\u6240\u6709\u7ecf\u8fc7 $x$ \u7684\u8def\u5f84\u3002\n\n\u5bf9\u4e8e\u6b64\u95ee\u9898\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u52a8\u6001\u5f00\u70b9\u503c\u57df\u7ebf\u6bb5\u6811 + \u5bb9\u65a5\u4fbf\u53ef\u5728 $\\mathcal O(n \\log n + q \\log^2 n)$ \u5b8c\u6210\u6b64\u9898\u3002\n\n",
        "postTime": 1644653326,
        "uid": 128195,
        "name": "chzhc",
        "ccfLevel": 7,
        "title": "\u70b9\u5206\u6811"
    },
    {
        "content": "~~\u4ec0\u4e48\u53eb\u5199\u4e24\u6b21\u6a21\u677f\u7ed3\u679c\u90fd\u88ab\u5361\u5e38\u554a~~\n\n- \u70b9\u5206\u6811\n\n   \u70b9\u5206\u6811\u5c31\u662f\u5c06\u6bcf\u6b21\u70b9\u5206\u6cbb\u65f6\u91cd\u5fc3\u7684\u5173\u7cfb\u53d8\u4e3a\u4e00\u9897\u6811\uff0c\u4ece\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u91cd\u5fc3\u5411\u8fd9\u4e2a\u8054\u901a\u5757\u53bb\u6389\u91cd\u5fc3\u540e\uff0c\u5f62\u6210\u7684\u5b50\u95ee\u9898\u7684\u91cd\u5fc3\u8fde\u8fb9\n  \n  \u6613\u77e5\u6bcf\u4e2a\u70b9\u90fd\u4f1a\u5728\u6811\u4e0a\u51fa\u73b0\u4e00\u6b21\uff0c\u4e5f\u53ea\u4f1a\u5728\u6811\u4e0a\u51fa\u73b0\u4e00\u6b21\uff0c\u4e14\u6811\u9ad8\u4e0d\u8d85\u8fc7 $\\log n$\uff0c\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u5c31\u4ee3\u8868\u7740\u8fd9\u4e2a\u70b9\u4f5c\u4e3a\u91cd\u5fc3\u65f6\uff0c\u6c42\u89e3\u7684\u8054\u901a\u5757\u5185\u7684\u6240\u6709\u70b9\n  \n  \u5982\u679c\u8981\u4ece $u$ \u8d70\u5230 $v$\uff0c\u5fc5\u5b9a\u8981\u8d70\u8fc7 $LCA(u,v)$ \u8fd9\u4e2a\u70b9\uff0c\u56e0\u4e3a\u5b83 $u,v$ \u5c5e\u4e8e $LCA(u,v)$ \u7684\u4e0d\u540c\u5b50\u6811\uff0c\u6240\u4ee5\u5b83\u4eec\u5c5e\u4e8e\u4e0d\u540c\u7684\u5b50\u95ee\u9898\uff0c\u53bb\u6389 $LCA(u,v)$ \u540e\u4e24\u70b9\u4e0d\u8fde\u901a\uff0c\u8fd9\u662f\u6839\u636e\u70b9\u5206\u7684\u8fc7\u7a0b\u51b3\u5b9a\u7684\n  \n- \u672c\u9898\u89e3\u6790\n\n  \u5148\u4e0d\u7ba1\u4fee\u6539\uff0c\u90a3\u4e48\u672c\u9898\u6c42\u7684\u662f $dis(x,v) \\le k$ \u7684\u6240\u6709 $v$ \u7684 $value$ \u4e4b\u548c\n  \n  \u6211\u4eec\u8003\u8651\u5728 $LCA(x,v)$ \u5904\u7edf\u8ba1 $v$ \u7684\u8d21\u732e\uff0c\u679a\u4e3e $u = LCA(x,v)$\uff0c\u90a3\u4e48\u6ee1\u8db3\u6761\u4ef6\u7684 $v$ \u5fc5\u5b9a\u6ee1\u8db3\uff0c$dis(u,v) \\le k - dis(x,u)$ \n  \n  \u4f46\u662f\u8fd9\u6837\u4f1a\u91cd\u590d\u7edf\u8ba1\uff0c\u800c\u6ee1\u8db3 $u = LCA(x,v)$ \u7684 $v$ \u5fc5\u5b9a\u6ee1\u8db3\uff0c$v,x$ \u90fd\u5728 $u$ \u7684\u5b50\u6811\u5185\uff0c\u4e14\u5c5e\u4e8e\u5b83\u7684\u4e0d\u540c\u5b50\u6811\n  \n  \u672c\u9898\u662f\u6c42\u548c\uff0c\u5177\u5907\u53ef\u51cf\u6027\uff0c\u4e8e\u662f\u53ef\u4ee5\u52a0\u4e0a\u5c5e\u4e8e $u$ \u5b50\u6811\u5185\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\uff0c\u51cf\u6389 $pre$ \u5bf9\u4e8e $pre$ \u7236\u4eb2\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\n  \n  $pre$ \u6307\u7684\u662f $u$ \u7684\u4e00\u4e2a\u513f\u5b50\uff0c\u4e14\u6ee1\u8db3 $u$ \u5728 $pre$ \u7684\u5b50\u6811\u5185 \n  \n  \u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u8981\u7ef4\u62a4\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u6ee1\u8db3\u67e5\u8be2\uff1a\n  \n  - \u5728 $x$ \u7684\u5b50\u6811\u5185\uff0c\u6240\u6709 $v$ \u6ee1\u8db3 $dis(x,v) \\le k$ \u7684 $value$ \u4e4b\u548c\uff0c$k$ \u662f\u6bcf\u6b21\u7ed9\u5b9a\u7684\u503c\n  \n  - \u5728 $x$ \u7684\u5b50\u6811\u5185\uff0c\u6240\u6709 $v$ \u6ee1\u8db3 $dis(fa_x,v) \\le k$ \u7684 $value$ \u503c\u4e4b\u548c\n  \n  \u56e0\u4e3a\u4fee\u6539\u5bf9\u70b9\u5206\u6811\u7684\u7ed3\u6784\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\uff0c\u6240\u4ee5\u5bf9\u4e8e\u56fa\u5b9a\u7684 $x,v$\uff0c$dis(x.v)$ \u662f\u56fa\u5b9a\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u4e0b\u6807\uff0c\u8fd9\u6837\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u6c42\u548c\u95ee\u9898\n  \n  \u7136\u540e\u8003\u8651\u4fee\u6539\u5bf9\u5e94\u8fc7\u6765\u662f\u4ec0\u4e48\n  \n  \u53ef\u4ee5\u53d1\u73b0\uff0c\u53d7\u5f71\u54cd\u7684 $u$ \u7684\u5b50\u6811\u4e00\u5b9a\u5305\u542b $x$ \u8fd9\u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f $u$ \u4e00\u5b9a\u662f $x$ \u7684\u7956\u5148\n  \n  \u7136\u540e\u6309\u7167\u5b9a\u4e49\u4fee\u6539\uff0c\u53d1\u73b0\u5b9e\u9645\u4e0a\u662f\u5355\u70b9\u4fee\u6539\n  \n  \u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6c42\u548c\u81ea\u7136\u662f\u7ebf\u6bb5\u6811\n  \n  \u4f46\u662f\u7531\u4e8e\u8981\u5f00 $n$ \u68f5\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u53ea\u80fd\u7528\u52a8\u6001\u5f00\u70b9\n  \n  \u6709\u4e2a\u65b9\u4fbf\u7684\u5199\u6cd5\uff1a\u679a\u4e3e $x$ \u7684\u6240\u6709\u7956\u5148\u65f6\uff0c\u53ef\u4ee5\u4ece $x$ \u70b9\u4e00\u4e2a\u4e00\u4e2a\u5f80\u4e0a\u8df3\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u6c42\u51fa\u6bcf\u6b21\u7684 $pre$ \u4e86\n  \n  \u590d\u6742\u5ea6\u5206\u6790\uff1a\n  \n  \u5bf9\u7740\u6811\u8fdb\u884c\u70b9\u5206\u7684\u590d\u6742\u5ea6\u662f $n \\log  n$ \u7684\n  \n  \u521d\u59cb\u5316\u53ef\u4ee5\u770b\u505a $n$ \u6b21\u4fee\u6539\uff0c\u8fd9\u6837\u8f6c\u5316\u4e3a $n + m$ \u6b21\u64cd\u4f5c\n  \n  \u4e00\u6b21\u64cd\u4f5c\u90fd\u662f\u679a\u4e3e $x$ \u7684\u6240\u6709\u7956\u5148\uff0c\u800c $x$ \u7684\u6df1\u5ea6\u4e3a $\\log n$ \u7ea7\u522b\u7684\uff0c\u4e5f\u5c31\u662f\u53ea\u4fee\u6539 $\\log n$ \u4e2a\u8282\u70b9\uff0c\u6bcf\u6b21\u4fee\u6539\u90fd\u662f\u5728\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u4e0a\u64cd\u4f5c\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u4e5f\u662f\u5355\u6b21 $\\log n$ \u7684\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f $(n + m) \\log^2 n$ \n  \n- \u6b27\u62c9\u5e8f + RMQ LCA\n\n  \u70b9\u5206\u6811\u91cc\u8981\u5927\u91cf\u6c42\u4e24\u70b9\u95f4\u8ddd\u79bb\uff0c\u7528\u500d\u589e LCA \u5f88\u5bb9\u6613\u88ab\u5361\uff0c\u6240\u4ee5\u987a\u4fbf\u4ecb\u7ecd\u4e00\u4e0b $O(1)$ \u67e5\u8be2\u7684 LCA\n  \n  \u9996\u5148 LCA \u53ef\u4ee5\u770b\u505a\u662f $u$ \u5230 $v$ \u8def\u5f84\u4e0a\u6df1\u5ea6\u6700\u5c0f\u7684\u4e00\u4e2a\u70b9\n  \n  \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u60f3\u529e\u6cd5\u8868\u793a\u51fa $u$ \u5230 $v$ \u7684\u8def\u5f84\u5c31\u53ef\u4ee5\u4e86\n  \n  \u8fd9\u91cc\u5f15\u5165\u4e00\u4e2a dfs \u5e8f\u7684\u53d8\u79cd\uff1a\u6b27\u62c9\u5e8f\uff0c\u5373\u5728 dfs \u65f6\uff0c\u6bcf\u8bbf\u95ee\u5230\u4e00\u4e2a\u8282\u70b9\u90fd\u8bb0\u5f55\u4e00\u6b21\uff0c\u65e0\u8bba\u662f\u8fd4\u56de\u5230\u7236\u4eb2\u8fd8\u662f\u9012\u5f52\u5230\u513f\u5b50\n  \n  \u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u6837\u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u88ab\u8bb0\u5f55\u5230\u5f88\u591a\u6b21\uff0c\u8bbe $x$ \u8282\u70b9\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u5230\u7684\u6b27\u62c9\u5e8f\u4e3a $dfn_x$\uff0c\u90a3\u4e48 $[dfn_u,dfn_v]$ \u533a\u95f4\u5305\u542b\u54ea\u4e9b\u70b9\u5462\uff1f\n  \n  ~~\u5b9e\u9645\u4e0a\u6709\u5f88\u591a\u70b9~~\uff0c\u53ef\u80fd\u5305\u597d $LCA(u,v)$ \u7684\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\uff0c\u4f46\u662f\u4e00\u5b9a\u4e0d\u5b58\u5728\u4e00\u4e2a\u70b9\u4e0d\u5728 $LCA(u,v)$ \u7684\u5b50\u6811\u5185\n  \n  \u53ef\u4ee5\u8003\u8651\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\n  \n  \u8bbe $[dfn_u,dfn_v]$ \u4e2d\u5305\u542b\u4e00\u4e2a\u70b9 $k$ \u6ee1\u8db3\u5176\u4e0d\u5728 $LCA(u,v)$ \u5b50\u6811\u5185\n  \n  \u90a3\u4e48\u5b83\u4e00\u5b9a\u662f\u4ece $u$ \u5f80\u4e0a\u4e00\u76f4\u8d70\uff0c\u7ecf\u8fc7\u4e86\u8fde\u63a5 $LCA(u,v)$ \u548c $fa_{LCA(u,v)}$ \u7684\u8fb9\u624d\u5230\u8fbe\n  \n  \u800c\u6839\u636e dfs \u7684\u6027\u8d28\uff0c\u8d70\u5230\u8fd9\u6761\u8fb9\u65f6\u4e00\u5b9a\u5df2\u7ecf\u5904\u7406\u5b8c\u4e86 $LCA(u,v)$ \u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\uff0c\u6240\u4ee5 $k$ \u4e0d\u5b58\u5728 \n  \n  \u800c $LCA(u,v)$ \u5b50\u6811\u5185\u6df1\u5ea6\u6700\u5c0f\u7684\u70b9\u5c31\u662f\u5b83\u81ea\u5df1\n  \n  \u6240\u4ee5\u5199\u4e00\u4e2a ST \u8868\u7ef4\u62a4\u6b27\u62c9\u5e8f\u4e0a\u7684 RMQ\uff0c\u5e76\u7ef4\u62a4\u6700\u5c0f\u503c\u6765\u6e90\u5c31\u53ef\u4ee5\u4e86\n  \n\u88ab\u5361\u5e38\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nint n,m;\nint a[100005];\n\nint cnt;\nint head[100005];\nstruct eg{\n\tint to,nxt;\n}edge[200005];\n\nvoid make(int u,int v){\n\tedge[++cnt].to = v;\n\tedge[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\n\nnamespace DIST{\n\tint cnt = 0;\n    int deep[100005],dfn[200005],id[200005];\n\tvoid dfs(int now,int fa){\n\t\tdeep[now] = deep[fa] + 1;\n\t\t++cnt;\n\t\tdfn[now] = cnt;\n\t\tid[cnt] = now;\n\t\tfor(int i = head[now];i;i = edge[i].nxt){\n\t\t\tif(edge[i].to == fa) continue;\n\t\t\tdfs(edge[i].to,now);\n\t\t\t++cnt;\n\t\t\tid[cnt] = now;\n\t\t}\n\t}\t\n\tint ST[18][200005],num[18][200005];\n\tvoid init(){\n\t\tdfs(1,0);\n\t\t/*for(int i = 1;i <= n;i++) printf(\"%d \",dfn[i]);\n\t\tprintf(\"\\n\");\n\t\tfor(int i = 1;i <= cnt;i++) printf(\"%d \",id[i]);\n\t\tprintf(\"\\n\");*/\n\t\tfor(int i = 1;i <= cnt;i++){\n\t\t\tST[0][i] = deep[id[i]];\n\t\t\tnum[0][i] = id[i];\n\t\t}\n\t\tfor(int i = 1;i <= 18;i++){\n\t\t\tfor(int j = 1;j <= cnt;j++){\n\t\t\t\tif(j + (1 << i) - 1 > cnt) break;\n\t\t\t\tST[i][j] = min(ST[i - 1][j],ST[i - 1][j + (1 << (i - 1))]);\n\t\t\t\tif(ST[i - 1][j] > ST[i - 1][j + (1 << (i - 1))]) num[i][j] = num[i - 1][j + (1 << (i - 1))];\n\t\t\t\telse num[i][j] = num[i - 1][j];\n\t\t\t}\n\t\t}\n\t}\n\tint LCA(int u,int v){\n\t\tint x = dfn[u],y = dfn[v];\n\t\tif(x > y) swap(x,y);\n\t\tint d = log2(y - x + 1);\n\t\tif(ST[d][x] > ST[d][y - (1 << d) + 1]) return num[d][y - (1 << d) + 1];\n\t\telse return num[d][x];\n\t}\n\tint getdis(int u,int v){\n\t\tint d = LCA(u,v);\n\t\t//printf(\"dis(%d,%d) = %d\\n\",u,v,deep[u] + deep[v] - 2 * deep[d]);\n\t\treturn deep[u] + deep[v] - 2 * deep[d];\n\t}\n};\n\nint vis[100005],siz[100005],mx[100005],rt,heavy;\n\nvoid dfs1(int now,int fa){\n\tsiz[now] = 1;\n\tfor(int i = head[now];i;i = edge[i].nxt){\n\t\tif(edge[i].to == fa || vis[edge[i].to]) continue;\n\t\tdfs1(edge[i].to,now);\n\t\tsiz[now] += siz[edge[i].to]; \n\t} \n}\n\nvoid dfs2(int now,int fa){\n\tmx[now] = siz[rt] - siz[now];\n\tfor(int i = head[now];i;i = edge[i].nxt){\n\t\tif(edge[i].to == fa || vis[edge[i].to]) continue;\n\t\tdfs2(edge[i].to,now);\n\t\tmx[now] = max(mx[now],siz[edge[i].to]);\n\t}\n\tif(mx[now] < mx[heavy]) heavy = now;\n} \n\nint fa[100005];//fa[i] i \u5728\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2 \n\nvoid solve(int x,int pre){//\u6c42\u89e3\u5305\u542b x \u7684\u8054\u901a\u5757,\u4e0a\u7ea7\u91cd\u5fc3\u4e3a pre \n\trt = heavy = x;\n\tdfs1(x,0);\n\tdfs2(x,0);\n\tfa[heavy] = pre;\n\tvis[heavy] = 1;\n\tint tmp = heavy;\n\tfor(int i = head[heavy];i;i = edge[i].nxt) if(!vis[edge[i].to]) solve(edge[i].to,tmp);\n}\n\nint T1[100005],T2[100005];\nstruct node{\n\tint val,l,r;\n}tree[57800005];\n#define ls tree[rt].l\n#define rs tree[rt].r\n\nvoid Q(int &x) {if(x == 0) x = ++cnt;}\n\nvoid upload(int rt,int l,int r,int id,int v){\n\ttree[rt].val += v;\n\tif(l == r) return;\n\tint mid = l + r >> 1;\n\tif(id <= mid){\n\t\tQ(ls);\n\t\tupload(ls,l,mid,id,v);\n\t}else{\n\t\tQ(rs);\n\t\tupload(rs,mid+1,r,id,v);\n\t}\n}\n\nint query(int rt,int l,int r,int L,int R){\n\tif(!rt) return 0;\n\tif(l == L && r == R) return tree[rt].val;\n\tint mid = l + r >> 1;\n\tif(R <= mid){\n\t\treturn query(ls,l,mid,L,R);\n\t}else if(L > mid){\n\t\treturn query(rs,mid+1,r,L,R);\n\t}else{\n\t\treturn query(ls,l,mid,L,mid) + query(rs,mid+1,r,mid+1,R);\n\t}\n}\n\nvoid modify(int x,int v){//\u7ed9 x \u52a0\u4e0a v\n    int u = x; \n\twhile(u){\n\t\tint d = DIST::getdis(u,x);\n\t\tupload(T1[u],0,n,d,v);\n\t\tif(fa[u]) d = DIST::getdis(fa[u],x);\n\t\tupload(T2[u],0,n,d,v);\n\t\tu = fa[u];\n\t}\n}\n\nint ask(int x,int k){\n\tint u = x,ans = 0,pre = 0;\n\twhile(u){\n\t\tint d = DIST::getdis(u,x);\n\t\tif(d <= k) ans += query(T1[u],0,n,0,k - d) - query(T2[pre],0,n,0,k - d);\n\t\tpre = u;\n\t\tu = fa[u];\n\t}\n\treturn ans;\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i = 1;i < n;i++){\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tmake(u,v);\n\t\tmake(v,u);\n\t}\n\tsolve(1,0);\n\t//for(int i = 1;i <= n;i++) printf(\"%d \",fa[i]);\n\tDIST::init();\n\tcnt = 0;\n\tfor(int i = 1;i <= n;i++) T1[i] = ++cnt;\n\tfor(int i = 1;i <= n;i++) T2[i] = ++cnt;\n\tfor(int i = 1;i <= n;i++) modify(i,a[i]);\n\tint op,u,k,lastans = 0;\n\tfor(int i = 1;i <= m;i++){\n\t\tscanf(\"%d%d%d\",&op,&u,&k);\n\t\tu ^= lastans;k ^= lastans;\n\t\tif(op == 0){\n\t\t\tlastans = ask(u,k);\n\t\t\tprintf(\"%d\\n\",lastans);\n\t\t}else{\n\t\t\tmodify(u,k - a[u]);\n\t\t\ta[u] = k;\n\t\t}\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1605096694,
        "uid": 49776,
        "name": "chenxinyang2006",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6329 \u3010\u3010\u6a21\u677f\u3011\u70b9\u5206\u6811 | \u9707\u6ce2\u3011"
    },
    {
        "content": "## \u70b9\u5206\u6811\n\n\u4ec0\u4e48\u662f\u70b9\u5206\u6811\uff1f\n\n\u70b9\u5206\u6811\u662f\u539f\u6811\u7684\u4e00\u4e2a\u91cd\u6784\u3002\u5728\u70b9\u5206\u6cbb\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u9009\u53d6\u91cd\u5fc3\uff0c\u8fd9\u6837\u5206\u6cbb\u7684\u5c42\u6570\u662f $\\log n$ \u7ea7\u522b\u7684\uff0c\u6211\u4eec\u628a\u6bcf\u6b21\u9009\u53d6\u7684\u91cd\u5fc3\u4e0e\u4e0a\u4e00\u5c42\u7684\u91cd\u5fc3\u8fde\u8d77\u6765\uff0c\u5c31\u6210\u4e86\u6df1\u5ea6\u53ea\u6709 $\\log n$ \u7ea7\u522b\u7684\u70b9\u5206\u6811\u3002\n\n\u5982\u679c\u5bf9\u6811\u578b\u7ed3\u6784\u590d\u6742\u5ea6\u6709\u4e86\u89e3\u7684\u8bdd\uff0c\u5c31\u80fd\u660e\u767d\u4e3a\u4ec0\u4e48\u8fd9\u6837\u91cd\u6784\u540e\u7684\u6811\u6709\u7740\u4f18\u826f\u7684\u6027\u8d28\u4e86\uff1a\u56e0\u4e3a\u5c42\u6570\u5c11\uff0c\u6240\u4ee5\u5f88\u591a\u66b4\u529b\u505a\u6cd5\u90fd\u662f\u590d\u6742\u5ea6\u6b63\u786e\u7684\u3002\n\n\u5f88\u591a\u770b\u4e0a\u53bb\u662f $O(n)$ \u6811\u4e0a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\uff0c\u5b9e\u9645\u4e0a\u662f $O(depth)$ \u7684\u590d\u6742\u5ea6\uff0c\u53ea\u8981\u6df1\u5ea6\u7684\u8303\u56f4\u6709\u4fdd\u8bc1\uff0c\u590d\u6742\u5ea6\u5c31\u6709\u4fdd\u8bc1\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u5c06\u6811\u91cd\u6784\u6765\u4fdd\u8bc1\u6df1\u5ea6\uff0c\u4ece\u800c\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\n\n## \u5e94\u7528\n\n\u70b9\u5206\u6811\u7684\u5efa\u6811\u6bd4\u8f83\u7b80\u5355\uff0c\u5177\u4f53\u5e94\u7528\u5219\u8981\u5177\u4f53\u9898\u76ee\u5177\u4f53\u5206\u6790\u3002\n\n\u4ee5\u6a21\u677f\u9898\u4e3a\u4f8b\uff0c\u6211\u4eec\u5148\u8003\u8651\u67e5\u8be2\u3002\n\n\u4e00\u4e2a\u8282\u70b9\u5230\u5176\u4f59\u8282\u70b9\u7684\u8def\u5f84\u5206\u4e3a\u4e24\u79cd:\u5728\u539f\u6811\u4e0a\u7ecf\u8fc7\u8be5\u8282\u70b9\u5728\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2\u7684\u8def\u5f84\uff0c\u4e0e\u5728\u539f\u6811\u4e0a\u4e0d\u7ecf\u8fc7\u8be5\u8282\u70b9\u5728\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2\u7684\u8def\u5f84\u3002\n\n\u663e\u7136\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u8def\u5f84\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7ef4\u62a4\u5728\u5176\u70b9\u5206\u6811\u4e0a\u7684\u5b50\u6811\u4e2d\uff0c\u4e0e\u5176\u8ddd\u79bb $dist$ \u6ee1\u8db3 $dist<=k$ \u7684\u8282\u70b9\u6743\u503c\u548c\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u8def\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u666e\u904d\u5316\u4e3a\uff0c\u4ece $x$ \u7ecf\u8fc7 $p$\uff0c$dist<=k$ \u7684\u8def\u5f84\uff0c\u4e14 $p$ \u662f $x$ \u7684\u7956\u5148\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7ee7\u7eed\u5206\u7c7b\uff0c\u8def\u5f84\u53ef\u4ee5\u5206\u4e3a \u7ecf\u8fc7 $p$ \u7684\u7236\u4eb2\u7684\u8def\u5f84\uff0c\u7ecf\u8fc7 $p$ \u4f46\u4e0d\u7ecf\u8fc7\u5176\u7236\u4eb2\u7684\u8def\u5f84\u3002\n\n\u524d\u4e00\u4e2a\u95ee\u9898\u663e\u7136\u4e0e\u539f\u95ee\u9898\u7b49\u4ef7\uff0c\u53ef\u4ee5\u9012\u5f52\u6c42\u89e3\u3002\n\n\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u8bbe $x$ \u6240\u5728\u7684 $p$ \u7684\u5b50\u6811\u7684\u6839\u4e3a $q$\uff0c\u5373 $q$ \u662f $p$ \u7684\u513f\u5b50\u4e14 $q$ \u662f $x$ \u7684\u7956\u5148 \u3002\n\n\u663e\u7136\u8def\u5f84\u53ef\u4ee5\u4ece\u4e2d\u95f4\u5207\u5f00\u6765\uff0c\u53d8\u6210 $x$ \u5230 $p$ \u7684\u8def\u5f84\u4e0e $p$ \u5230\u7ec8\u70b9\u7684\u8def\u5f84\uff0c\u4e14\u7b2c\u4e8c\u6761\u8def\u5f84\u4e0d\u80fd\u7ecf\u8fc7 $q$ \u6240\u5728\u7684\u5b50\u6811\u4e2d\u7684\u8282\u70b9\uff0c\u800c\u7b2c\u4e00\u6761\u8def\u5f84\u7684\u957f\u5ea6\u662f\u786e\u5b9a\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528 $p$ \u5230\u5176\u5b50\u6811\u4e2d $dist<=k-dist(x,p)$ \u7684\u8def\u5f84\u51cf\u53bb $p$ \u5230 $q$ \u5b50\u6811\u4e2d\u957f\u5ea6 $dist<=k-dist(x,p)$ \u7684\u8def\u5f84\u5728\u5f97\u5230\u3002\n\n\u5373\uff0c\u6211\u4eec\u4ee4 $Ans(x,p,k)$ \u4e3a\u6240\u6709 $dist_{x,y}<=k$ \u4e14 $x$ \u5230 $y$ \u7684\u8def\u5f84\u7ecf\u8fc7 $p$ \u7684 $y$ \u7684\u6743\u503c\u548c\uff0c$query_1(p,k)$ \u4e3a\u6240\u6709 $dist_{p,y}<=k$ \u4e14 $y$ \u5728\u70b9\u5206\u6811\u4e0a\u662f $p$ \u5b50\u6811\u7684 $y$ \u7684\u6743\u503c\u548c\uff0c$query_2(p,k)$ \u4e3a\u6240\u6709 $dist_{y,fa_p}<=k$ \u4e14 $y$ \u5728\u70b9\u5206\u6811\u4e0a\u662f $p$ \u5b50\u6811\u7684 $y$ \u7684\u6743\u503c\u548c\uff0c\u90a3\u4e48\u6709\u516c\u5f0f\n\n$$\nAns(x,p,k)=Ans(x,fa_p,k)+query_1(p,k-dist(x,p))-query_2(q,k-dist(x,p))\n$$\n\n\u5176\u4e2d $p=fa_q$,\u4e14 $p$\u3001$q$ \u4e3a $x$\u7684\u7956\u5148\u3002\n\n\u6211\u4eec\u6700\u540e\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f\n\n$$\nAns(x,fa_p,k)+query_1(x,k)\n$$\n\n\u81f3\u4e8e\u4fee\u6539\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u5411\u4e0a\u8df3\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u7ef4\u62a4\u5355\u70b9\u4fee\u6539\u3001\u524d\u7f00\u67e5\u8be2\u7684\u7ed3\u6784\uff0c\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u6216\u8005\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$\u3002\u56e0\u4e3a\u7a7a\u95f4\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 ```int *tree=new int[sz(x)]``` \u6765\u5f00\u6811\u72b6\u6570\u7ec4\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u56e0\u4e3a\u5f3a\u5236\u5728\u7ebf\u4ee5\u53ca\u5e38\u6570\u95ee\u9898\uff0c\u52a0\u4e0a\u9700\u8981\u5927\u91cf\u6c42\u8ddd\u79bb\u4f1a\u67e5\u8be2\u8f83\u591a\u6b21LCA\uff0c\u6240\u4ee5\u4e2a\u4eba\u5efa\u8bae\u4f7f\u7528 $O(n\\log n)-O(1)$ \u7684\u6b27\u62c9\u5e8fST\u8868LCA\u6216\u8005 $O(n)-O(1)$ \u7684\u56db\u6bdb\u5b50LCA\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nclass node{\n\tpublic:\n\tint nt,v,w;\n}e[200003];\nint tot,h[100003]; \nvoid add(int x,int y,int z)\n{\n\te[++tot].v=y;\n\te[tot].w=z;\n\te[tot].nt=h[x];\n\th[x]=tot;\n}\nbool vis[100003];\nint sz[100003],dp[100003],po[100003],fa[100003];\nint getsize(int x){\n\tint ans=1;\n\tvis[x]=1;\n\tsz[x]=0;\n\tdp[x]=0;\n\tfor(int i=h[x];i;i=e[i].nt)if(!vis[e[i].v]){\n\tans+=getsize(e[i].v);\n\t}\n\tvis[x]=0;\n\treturn ans;\n} \nint getroot(int s,int x){\n\tvis[x]=1;\n\tfor(int i=h[x];i;i=e[i].nt)if(!vis[e[i].v]){\n\tgetroot(s,e[i].v);\n\tdp[x]=max(dp[x],sz[e[i].v]);\n\tsz[x]+=sz[e[i].v];\n\t}\n\tsz[x]++;\n\tdp[x]=max(dp[x],s-sz[x]);\n\tpo[x]=x;\n\tfor(int i=h[x];i;i=e[i].nt)if(!vis[e[i].v])\n\tif(dp[po[e[i].v]]<dp[po[x]]) po[x]=po[e[i].v];\n\tvis[x]=0;\n\treturn po[x];\n}\nint siz[100003];\nvoid get_pdtree(int x){\n\tvis[x]=1;\n\tfor(int i=h[x];i;i=e[i].nt)if(!vis[e[i].v]){\n\tint s=getsize(e[i].v);\n\tint v=getroot(s,e[i].v);\n\tfa[v]=x;\n\tget_pdtree(v);\n\tsiz[x]+=siz[v];\n\t}\n\tsiz[x]++;\n\tvis[x]=0;\n}\ntemplate<class T>\nclass ST{\n\tpublic:\n\tT dp[200003][18];\n\tint f[32],maxn[200003];\n\tvoid build(T a[],int n){\n\t\tf[0]=1;\n\t\tfor(int i=1;i<=17;i++) \n\t\tf[i]=f[i-1]*2;\n\t\tfor(int i=1;i<=n;i++)\n\t\tdp[i][0]=a[i];\n\t\tfor(int j=1;j<=17;j++)\n\t\tfor(int i=1;i+f[j]-1<=n;i++)\n\t\tdp[i][j]=min(dp[i+f[j-1]][j-1],dp[i][j-1]);\n\t\tint p=-1;\n\t\tfor(int i=1;i<=n;i++){\n\t\tif(i==f[p+1]) p++;\n\t\tmaxn[i]=p;\n\t\t}\n\t}\n\tT query(int l,int r){\n\tint p=maxn[r-l+1];\n\treturn min(dp[l][p],dp[r-f[p]+1][p]);\n\t}\n}; \nST<pair<int,int> > st;\nint d[100003],cnt,p[100003],dis[100003];\npair<int,int> a[200003];\nvoid dfs(int x){\n    a[++cnt]={d[x],x};\n\tif(!p[x]) p[x]=cnt;\n\tfor(int i=h[x];i;i=e[i].nt)\n\tif(!d[e[i].v] && e[i].v!=1) {\n\td[e[i].v]=d[x]+1;\n\tdis[e[i].v]=dis[x]+e[i].w;\n\tdfs(e[i].v);\t\n\ta[++cnt]={d[x],x};\n\t}\n}\nint LCA(int l,int r){\n\tif(p[l]>p[r]) swap(l,r);\n    return st.query(p[l],p[r]).second;\n}\nclass bitarray{\n\tpublic:\n\tint* tree;\n\tint n;\n\tvoid init(int x){n=x;tree=new int[n+1];for(int i=1;i<=n;i++) tree[i]=0;}\n\tvoid update(int x,int val){\n\t\tfor(;x<=n;x+=x&(-x))tree[x]+=val;\n\t} \n\tint query(int x){\n\t\tif(x<=0) return 0;\n\t\tx=min(x,n);\n\t\tint sum=0;\n\t\tfor(;x;x-=x&(-x)) sum+=tree[x];\n\t\treturn sum;\n\t}\n}Tr[100003],Tf[100003];\nint val[100003];\nint maxn;\nint dist(int x,int y){\n\tif(x==y) return 0;\n\tint lca=LCA(x,y);\n\tint ans=dis[x]+dis[y]-2*dis[lca];\n\tmaxn=max(maxn,ans);\n\treturn ans;\n}\nint test; \nvoid update(int x,int val){\n\tint p=x;\n\twhile(p){\n\tTr[p].update(dist(x,p)+1,val);\n\tif(fa[p])Tf[p].update(dist(x,fa[p])+1,val);\n\tp=fa[p];\n\t}\n} \nint query(int x,int k){\n\tint p=x,ans=Tr[x].query(k+1);\n\twhile(fa[p]){\n\tint d=dist(fa[p],x);\n\tans-=Tf[p].query(k-d+1);\n\tans+=Tr[fa[p]].query(k-d+1);\n\tp=fa[p];\n\t}\n\treturn ans;\n}\nint rt;\nint main(){\n\tint m;\n\tcin>>n>>m;\t\n\tfor(int i=1;i<=n;i++){\n\tscanf(\"%d\",&val[i]);\n\t}\n\tfor(int i=1;i<n;i++){\n\tint x,y,z=1;\n\tscanf(\"%d%d\",&x,&y);\n\tadd(x,y,z);\n\tadd(y,x,z);\n\t}\n\tdfs(1);\n\tst.build(a,cnt);\n\trt=getroot(n,1);\n\tfa[rt]=0;\n\tget_pdtree(rt);\n\tfor(int i=1;i<=n;i++) Tr[i].init(siz[i]+2),Tf[i].init(siz[i]+2);\n\tfor(int i=1;i<=n;i++) update(i,val[i]);\n\tint last=0;\n\tfor(int i=1;i<=m;i++){\n\tint op,x,y;\n\tscanf(\"%d%d%d\",&op,&x,&y);\n\tx^=last,y^=last;\n\tif(op) {update(x,y-val[x]);val[x]=y;}\n\telse {last=query(x,y);printf(\"%d\\n\",last);}\n\t}\n}\n```\n\n",
        "postTime": 1636028940,
        "uid": 147670,
        "name": "\u91d1\u73c2\u62c9",
        "ccfLevel": 0,
        "title": "\u70b9\u5206\u6811"
    },
    {
        "content": "[\u70b9\u5206\u6cbb](https://wdsa001.github.io/2021/12/24/dian-fen-zhi-dian-fen-shu/#toc-heading-1)\n\n## \u70b9\u5206\u6811\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6329)\n\n\u9898\u76ee\u8981\u6211\u4eec\u6c42\u70b9\u8986\u76d6\u7684\u6743\u503c\u548c\u5355\u70b9\u4fee\u6539\u3002\n\n\u548c\u70b9\u5206\u6cbb\u7684\u601d\u8def\u76f8\u540c\u7684\u662f\u8981\u627e\u91cd\u5fc3\uff0c\u8981\u5b58\u8282\u70b9\u6765\u6e90\uff08\u4e0b\u9762\u53eb\u505a\u7236\u8282\u70b9\uff09\uff0c\u5728\u70b9\u5206\u6cbb\u7684\u9898\u4e2d\u6211\u4eec\u786e\u5b9a\u7684\u662f\u957f\u5ea6\u662f\u5426\u5b58\u5728\u3002\u4f46\u662f\u672c\u9898\u6211\u4eec\u6c42\u7684\u662f\u8303\u56f4\u70b9\u503c\u548c\u3002\n\n\u6211\u4eec\u662f\u6839\u636e\u79bb\u70b9\u7684\u8ddd\u79bb\u786e\u5b9a\u8303\u56f4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u5b58\u50a8\u6bcf\u4e2a\u6df1\u5ea6\uff08\u5230\u5f53\u524d\u8282\u70b9\u7684\u8ddd\u79bb\uff09\u6765\u5904\u7406\u6743\u503c\u548c\uff08\u8fd9\u91cc\u6211\u4eec\u7528\u7684\u662f [\u6811\u72b6\u6570\u7ec4](https://wdsa001.github.io/2021/09/18/shu-zhuang-shu-zu/)\uff09\u3002\n\n\u540c\u65f6\u6211\u4eec\u8981\u5b58\u50a8\u5f53\u524d\u8282\u70b9\u7684\u7236\u8282\u70b9\u7684\u6df1\u5ea6\u7684\u6743\u503c\u4fe1\u606f\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5728\u4ece\u5f53\u524d\u8282\u70b9\u5f80\u56de\u722c\u7684\u65f6\u5019\u66f4\u65b9\u4fbf\u7684\u53bb\u91cd\u3002\n\n### \u4ee3\u7801\u601d\u8def\n\n- \u521d\u59cb\u5316\u5e76\u8bfb\u53d6\u57fa\u672c\u4fe1\u606f\uff08\u8282\u70b9\u6743\u503c\u548c\u8fde\u8fb9\uff09\u3002\n\n- \u627e\u91cd\u5fc3\u3002\n\n- \u5904\u7406\u6240\u6709\u8282\u70b9\u5230\u91cd\u5fc3\u7684\u8ddd\u79bb\uff0c\u6df1\u5ea6\u8d21\u732e\u7684\u6743\u503c\u3002\u7edf\u8ba1\u5904\u7406\u7236\u8282\u70b9\u76f8\u5173\u60c5\u51b5\u3002\n\n- \u627e\u65b0\u91cd\u5fc3\uff0c\u7ee7\u7eed\u5904\u7406\u4e0a\u8fb9\u7684\u6b65\u9aa4\u3002\n\n- \u8986\u76d6\u6743\u503c\u8be2\u95ee\u3002\n\n- \u7edf\u8ba1\u5f53\u524d\u8282\u70b9\u7684\u8d21\u732e\u3002\n\n- \u8df3\u7236\u8282\u70b9\u4eec\u7ee7\u7eed\u5904\u7406\u8d21\u732e\u540c\u65f6\u53bb\u91cd\uff08\u6709\u4e9b\u6743\u503c\u8d21\u732e\u591a\u6b21\uff09\uff0c\u7ed3\u675f\u6761\u4ef6\u662f\u7236\u8282\u70b9\u5230\u8282\u70b9\u7684\u8ddd\u79bb\u5728\u8986\u76d6\u8303\u56f4\u5185\u3002\n\n- \u8f93\u51fa\u7edf\u8ba1\u7ed3\u679c\uff0c\u540c\u65f6\u8bb0\u5f55\u7ed3\u679c\uff08\u4fe1\u606f\u89e3\u5bc6\u8981\u7528\uff09\u3002\n\n- \u5355\u70b9\u4fee\u6539\u3002\n\n- \u4ece\u5f53\u524d\u8282\u70b9\u5f80\u6839\u8282\u70b9\u8df3\uff08\u53ea\u5bf9\u8fd9\u4e9b\u70b9\u6709\u8d21\u732e\uff09\uff0c\u6811\u72b6\u6570\u7ec4\u5355\u70b9\u4fee\u6539\uff0c\u63a5\u7684\u540c\u65f6\u5904\u7406\u8bb0\u5f55\u7236\u8282\u70b9\u60c5\u51b5\u3002\n\n- \u57ce\u5e02\u6743\u503c\u4fee\u6539\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<cstring>\n#include<cctype>\n#include<map>\n#include<vector>\nusing namespace std;\nlong long r_r(){//\u5feb\u8bfb \n\tlong long x=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\nconst int o_o=2e5+5;\nint l_t(int x){\n\treturn x&(-x);\n}\nint n,m;\nint a_s;//\u7ed3\u679c \nint l_a;//\u4e0a\u6b21\u8f93\u51fa\uff0c\u7528\u4e8e\u89e3\u5bc6 \nint f[o_o];\nint d[o_o];\nint b_b[o_o];//\u6807\u8bb0\u8282\u70b9\u662f\u5426\u5f53\u8fc7\u91cd\u5fc3 \nint d_p[o_o];//\u8bb0\u5f55\u5f53\u524d\u91cd\u5fc3\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6 \nint m_d_p;//\u8bb0\u5f55\u5f53\u524d\u91cd\u5fc3\u5f62\u6210\u7684\u6811\u7684\u6700\u5927\u6df1\u5ea6 \n\n//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9 \nstruct po{\n\tint v;\n\tint n_t;\n}p_p[o_o<<1];//\u5b58\u8fb9 \nint x_p,h_d[o_o];\n\nint v_v[o_o];//\u6bcf\u4e2a\u8282\u70b9\uff08\u57ce\u5e02\uff09\u7684\u6743\u503c \nmap<int,int>i_d[o_o];//\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u5728\u4e0d\u540c\u91cd\u5fc3\u65f6\u7684\u6df1\u5ea6 \nvector<int>l_s[o_o];//\u5f53\u524d\u91cd\u5fc3\u65f6\u4e0a\u6b21\u91cd\u5fc3\u7684\u533a\u95f4\u548c \nvector<int>n_s[o_o];//\u5f53\u524d\u91cd\u5fc3\u65f6\u7684\u533a\u95f4\u6743\u503c\u548c \nvoid a_d(int u,int v){//\u8fde\u8fb9 \n\tp_p[++x_p].v=v;\n\tp_p[x_p].n_t=h_d[u];\n\th_d[u]=x_p;\n}\nint g_g;//\u6839\u8282\u70b9\uff08\u91cd\u5fc3\uff09 \nint s_n;\nint m_s[o_o];//\u5f53\u524d\u8282\u70b9\u6700\u5927\u5b50\u6811 \nint s_z[o_o];//\u5b50\u6811\u5927\u5c0f \nvoid d_f(int x,int f_a){//\u627e\u6839\u8282\u70b9 \n\ts_z[x]=1;//\u521d\u59cb\u5316\u5b50\u6811\u5927\u5c0f \n\tm_s[x]=0;//\u521d\u59cb\u5316\u5f53\u524d\u8282\u70b9\u6700\u5927\u5b50\u6811 \n\tfor(int i=h_d[x];i;i=p_p[i].n_t){//\u904d\u5386\u8fb9 \n\t\tif(p_p[i].v!=f_a&&!b_b[p_p[i].v]){\n\t\t\td_f(p_p[i].v,x);\n\t\t\ts_z[x]+=s_z[p_p[i].v];//\u7d2f\u8ba1\u5b50\u6811\u5927\u5c0f \n\t\t\tm_s[x]=max(m_s[x],s_z[p_p[i].v]);//\u66f4\u65b0\u6700\u5927\u5b50\u6811 \n\t\t}\n\t}\n\tm_s[x]=max(m_s[x],s_n-s_z[x]);\n\tif(m_s[x]<m_s[g_g])g_g=x;//\u66f4\u65b0\u6839\u8282\u70b9 \n}\nvoid a_d(int k_k,int x,int v){\n\tint t=n_s[k_k].size();//\u5f53\u524d\u7684\u6df1\u5ea6\u8303\u56f4 \n\twhile(x<t){//\u5728\u8303\u56f4\u5185 \n\t\tn_s[k_k][x]+=v;//\u7d2f\u8ba1\u533a\u95f4\u6df1\u5ea6\u6743\u503c \n\t\tx+=l_t(x);\n\t}\n}\nvoid a_d2(int k_k,int x,int v){\n\tint t=l_s[k_k].size();//\u4e0a\u4e2a\u6839\u8282\u70b9\uff08\u91cd\u5fc3\uff09\u7684\u8303\u56f4 \n\twhile(x<t){\n\t\tl_s[k_k][x]+=v;//\u7d2f\u8ba1\u533a\u95f4\u6df1\u5ea6\u6743\u503c \n\t\tx+=l_t(x);\n\t}\n}\nint q_1(int k_k,int x){\n\tint r_s=0;\n\tif(x>=n_s[k_k].size())\n\t\tx=(int)n_s[k_k].size()-1;\n\t//\u9650\u5236\u533a\u95f4\u8303\u56f4\uff08\u6df1\u5ea6\u53ea\u6709\u8fd9\u4e9b\uff0c\u8303\u56f4\u518d\u5927\u4e5f\u6ca1\u7528\uff09 \n\t\n\twhile(x){\n\t\tr_s+=n_s[k_k][x];//\u7edf\u8ba1\u76ee\u6807\u6df1\u5ea6\u8303\u56f4\u5185\u7684\u6743\u503c \n\t\tx-=l_t(x);\n\t}\n\treturn r_s;\n}\nint q_2(int k_k,int x){\n\tint r_s=0;\n\tif(x>=l_s[k_k].size())\n\t\tx=(int)l_s[k_k].size()-1;\n\t//\u9650\u5236\u533a\u95f4\u8303\u56f4\uff08\u6df1\u5ea6\u53ea\u6709\u8fd9\u4e9b\uff0c\u8303\u56f4\u518d\u5927\u4e5f\u6ca1\u7528\uff09 \n\t\n\twhile(x){\n\t\tr_s+=l_s[k_k][x];//\u7edf\u8ba1\u76ee\u6807\u6df1\u5ea6\u8303\u56f4\u5185\u7684\u6743\u503c \n\t\tx-=l_t(x);\n\t}\n\treturn r_s;\n}\nvoid c_1(int x,int f_a,int k_k){\n\ts_z[x]=1;//\u521d\u59cb\u5316\u5b50\u6811\u5927\u5c0f \n\td_p[x]=d_p[f_a]+1;//\u66f4\u65b0\u6df1\u5ea6 \n\ti_d[k_k][x]=d_p[x];//\u8bb0\u5f55\u6df1\u5ea6 \n\tfor(int i=h_d[x];i;i=p_p[i].n_t)//\u904d\u5386\u6240\u6709\u76f8\u8fde\u7684\u70b9 \n\t\tif(!b_b[p_p[i].v]&&p_p[i].v!=f_a){//\u6ca1\u6709\u5f53\u8fc7\u91cd\u5fc3\u5e76\u4e14\u4e0d\u662f\u7236\u8282\u70b9 \n\t\t\tc_1(p_p[i].v,x,k_k);//\u5148\u904d\u5386\u5b50\u8282\u70b9 \n\t\t\ts_z[x]+=s_z[p_p[i].v];//\u66f4\u65b0\u5b50\u6811\u5927\u5c0f \n\t\t}\n\tm_d_p=max(d_p[x],m_d_p);//\u66f4\u65b0\u6700\u5927\u6df1\u5ea6 \n}\nvoid c_2(int x,int f_a,int k_k,int k){\n\ta_d(k_k,d_p[x],v_v[x]);\n\t//\u5f53 k_k \u4e3a\u6839\u8282\u70b9\u65f6\uff0cx \u8282\u70b9\u7684\u6df1\u5ea6\u548c\u6743\u503c\u4f20\u53c2 \n\t\n\tif(k)a_d2(k_k,i_d[k][x],v_v[x]);\n\t//\u4e0d\u662f\u521d\u59cb\u70b9\uff0c\u5f53 k_k \u4e3a\u6839\u8282\u70b9\u65f6\uff0cx\u8282\u70b9\u5728\u4e0a\u4e00\u4e2a\u91cd\u5fc3\u7684\u6df1\u5ea6\u548c\u6743\u503c \n\t \n\tfor(int i=h_d[x];i;i=p_p[i].n_t)//\u904d\u5386\u6240\u6709\u76f8\u8fde\u7684\u70b9 \n\t\tif(!b_b[p_p[i].v]&&p_p[i].v!=f_a)//\u6ca1\u5f53\u8fc7\u91cd\u5fc3\u5e76\u4e14\u4e0d\u662f\u7236\u8282\u70b9 \n\t\t\tc_2(p_p[i].v,x,k_k,k);//\u7ee7\u7eed\u904d\u5386 \n}\nvoid f_t(int x,int f_a,int h){\n\tint m_x;\n\tb_b[x]=1;//\u6807\u8bb0\uff0c\u5f53\u524d\u8282\u70b9\u5f53\u8fc7\u91cd\u5fc3\u4e86 \n\tm_d_p=0;//\u521d\u59cb\u5316\u6700\u5927\u6df1\u5ea6 \n\tc_1(x,0,x);//\u5904\u7406\u6bcf\u4e2a\u8282\u70b9\u6df1\u5ea6\u548c\u5b50\u6811\u5927\u5c0f \n\tfor(int i=0;i<=m_d_p;++i)n_s[x].push_back(0);//\u521d\u59cb\u5316 \n\tfor(int i=0;i<=h;++i)l_s[x].push_back(0);//\u521d\u59cb\u5316 \n\tm_x=m_d_p;//\u8bb0\u5f55\u6700\u5927\u6df1\u5ea6 \n\tc_2(x,0,x,f_a);//\u7ef4\u62a4\u6240\u6709\u8282\u70b9\u5728\u5f53\u524d\u91cd\u5fc3\u548c\u4e0a\u4e00\u4e2a\u91cd\u5fc3\u65f6\u7684\u533a\u95f4\u548c \n\tfor(int i=h_d[x];i;i=p_p[i].n_t){//\u904d\u5386\u6240\u6709\u76f8\u8fde\u7684\u70b9 \n\t\tif(b_b[p_p[i].v])continue;\n\t\ts_n=s_z[p_p[i].v];//\u66f4\u65b0\u8282\u70b9\u6570\u91cf \n\t\t\n\t\t//\u521d\u59cb\u5316\uff08\u627e\u522b\u7684\u91cd\u5fc3\uff09 \n\t\tg_g=0;\n\t\tm_s[0]=0x3f3f3f3f;\n\t\td_f(p_p[i].v,x);//\u521d\u59cb\u5316\u65b0\u91cd\u5fc3 \n\t\tf[g_g]=x;//\u66f4\u65b0\u7236\u8282\u70b9 \n\t\tf_t(g_g,x,m_x);//\u7ee7\u7eed\u5904\u7406 \n\t}\n}\nint main(){\n\tn=r_r(),m=r_r();\n\tfor(int i=1;i<=n;++i)v_v[i]=r_r();//\u8bfb\u5165\u6bcf\u4e2a\u57ce\u5e02\u7684\u4ef7\u503c \n\tfor(int i=1;i<n;++i){//\u8fde\u8fb9 \n\t\tint u=r_r(),v=r_r();\n\t\ta_d(u,v);\n\t\ta_d(v,u);\n\t}\n\t//\u521d\u59cb\u5316 \n\tg_g=0;\n\tm_s[0]=0x3f3f3f3f;\n\ts_n=n;//\u8bb0\u5f55\u8282\u70b9\u603b\u6570\u91cf \n\td_f(1,0);//\u627e\u91cd\u5fc3 \n\tf_t(g_g,0,0);//\u5904\u7406\u6240\u6709\u8282\u70b9\u6210\u4e3a\u91cd\u5fc3\u7684\u60c5\u51b5 \n\twhile(m--){//\u5904\u7406\u8be2\u95ee \n\t\tint op=r_r(),x=r_r()^l_a,v=r_r()^l_a;//\u89e3\u5bc6 \n\t\tif(!op){//\u7edf\u8ba1\u6743\u503c \n\t\t\tint f_x=f[x];//\u8bb0\u5f55\u7236\u8282\u70b9 \n\t\t\tint l_x=x;//\u8bb0\u5f55\u5f53\u524d\u8282\u70b9 \n\t\t\tint f_d;//\u8bb0\u5f55\u6df1\u5ea6 \n\t\t\ta_s+=q_1(x,v+1);//\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u8303\u56f4\u5185\u7684\u6743\u503c \n\t\t\twhile(f_x){//\u6ca1\u6709\u5230\u6839\u5c31\u4e00\u76f4\u722c \n\t\t\t\tf_d=i_d[f_x][x]-1;//\u8bb0\u5f55\u6df1\u5ea6 \n\t\t\t\tif(v-f_d<0){//\u4e0d\u5728\u5f71\u54cd\u8303\u56f4\u5185 \n\t\t\t\t\tl_x=f_x;//\u8bb0\u5f55\u8fd9\u6b21\u8282\u70b9 \n\t\t\t\t\tf_x=f[f_x];//\u5f80\u4e0a\u722c \n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ta_s+=q_1(f_x,v-f_d+1);//\u7edf\u8ba1\u8d21\u732e \n\t\t\t\ta_s-=q_2(l_x,v-f_d+1);//\u53bb\u91cd \n\t\t\t\tl_x=f_x;//\u8bb0\u5f55\u8282\u70b9 \n\t\t\t\tf_x=f[f_x];//\u5f80\u4e0a\u722c \n\t\t\t}\n\t\t\tprintf(\"%d\\n\",(l_a=a_s)); \n\t\t\ta_s=0;\n\t\t}else{//\u5355\u70b9\u4fee\u6539 \n\t\t\tint k_k=x;//\u8bb0\u5f55\u8282\u70b9 \n\t\t\ta_d(x,1,-v_v[x]+v);//\u5f53\u524d\u8282\u70b9\u533a\u95f4\u4fee\u6539 \n\t\t\twhile(f[x]){//\u6ca1\u6709\u5230\u6839\u5c31\u4e00\u76f4\u722c\n\t\t\t\tint f_d=i_d[f[x]][k_k];//\u8bb0\u5f55\u6df1\u5ea6 \n\t\t\t\t\n\t\t\t\t//\u66f4\u65b0\u533a\u95f4\u6743\u503c \n\t\t\t\ta_d(f[x],f_d,-v_v[k_k]+v);\n\t\t\t\ta_d2(x,f_d,-v_v[k_k]+v);\n\t\t\t\t\n\t\t\t\tx=f[x];//\u5f80\u4e0a\u722c \n\t\t\t}\n\t\t\tv_v[k_k]=v;//\u8282\u70b9\u6743\u503c\u66f4\u65b0 \n\t\t}\n\t}\n\treturn 0; \n}\n\n```\n\n### \u4f18\u5316\n\n\u8fd9\u4efd\u4ee3\u7801\u4e0d\u4ec5\u6162\uff0c\u7a7a\u95f4\u4e5f\u5927\uff0c\u4f46\u53ef\u4ee5\u8fc7\u3002\u3002\u3002\n\n\u4f46\u662f\uff0c\u53ef\u4ee5\u4f18\u5316\u3002\n\n### \u65f6\u95f4\u7a7a\u95f4\u4f18\u5316\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a[\u6811\u94fe\u5256\u5206](https://wdsa001.github.io/2021/08/31/shu-lian-pou-fen/)\n\n\u5728\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff08`map` \u4e5f\u5360\u4e00\u7ef4\uff09\u5c06\u6bcf\u4e2a\u8282\u70b9\u5728\u4e0d\u540c\u91cd\u5fc3\u65f6\u7684\u6df1\u5ea6\u8bb0\u5f55\u4e0b\u6765\u4e86\uff0c\u4f46\u662f\u7531\u4e8e\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u4e0d\u662f\u5f88\u5927\uff0c\u6240\u4ee5 $O(\\log n)$ \u548c\u4e00\u4e2a\u5927\u5e38\u6570\u5dee\u4e0d\u591a\uff0c\u4e0d\u4f1a\u8fc7\u591a\u5f71\u54cd\u65f6\u95f4\u6548\u7387\uff0c\u4f46\u662f\u5927\u5927\u8282\u7701\u4e86\u7a7a\u95f4\u3002\n\n\u6211\u4eec\u5c06\u6574\u9897\u6811\u5256\u5206\u4e00\u904d\uff0c\u9996\u5148\u6211\u4eec\u7528\u6811\u5256\u662f\u89e3\u51b3\u5feb\u901f\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u5728\u4e0d\u540c\u91cd\u5fc3\u65f6\u7684\u6df1\u5ea6\uff0c\u5c31\u662f\u5f53\u524d\u8282\u70b9\u5728\u4e0d\u540c\u91cd\u5fc3\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u6811\u5256\u6c42\u4e24\u70b9\u7684\u516c\u5171\u7956\u5148\uff0c\u4ece\u800c\u5feb\u901f\u83b7\u5f97\u957f\u5ea6\u3002\n\n\u540c\u65f6\uff0c\u4e0a\u9762\u4e3a\u4e86\u9632\u6b62\u6d6a\u8d39\u7a7a\u95f4\u6211\u4eec\u7528\u7684 `map` \u5b58\u50a8\u3002\u4f46\u662f\u5b83\u7684\u5185\u90e8\u662f\u7ea2\u9ed1\u6811\uff0c\u6bcf\u591a\u4e00\u4e2a\u503c\u90fd\u8981\u63d2\u5165\uff0c\u8fd8\u8981\u8c03\u6574\u6574\u68f5\u6811\uff08`unordered_map` \u6548\u7387\u66f4\u9ad8\uff0c\u4f46\u662f\u4e5f\u5f88\u6162\uff09\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u7528\u6811\u5256\u6c42 `lca` \u5b9e\u73b0\u4e86\u65f6\u7a7a\u53cc\u8d62\uff01\n\n### \u4f18\u5316\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<cstring>\n#include<cctype>\n#include<map>\n#include<vector>\nusing namespace std;\nlong long r_r(){//\u5feb\u8bfb \n\tlong long x=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\nconst int o_o=1e5+10;\nint v_v[o_o<<1],h_d[o_o],n_t[o_o<<1],x_p;//\u94fe\u5f0f\u524d\u5411\u661f \nvoid a_d(int u,int v){//\u52a0\u8fb9 \n\tv_v[++x_p]=v;\n\tn_t[x_p]=h_d[u];\n\th_d[u]=x_p;\n}\nbool b_b[o_o];//\u5224\u65ad\u662f\u5426\u5f53\u8fc7\u6839\u8282\u70b9 \nint s_z[o_o];//\u5b50\u6811\u603b\u91cf\uff08\u5b50\u6811\u8282\u70b9\u4e2a\u6570\uff09 \nint m_s[o_o];//\u6700\u5927\u5b50\u6811 \nint s_n;//\u8282\u70b9\u6570\u91cf \nint g_g;//\u6839\u8282\u70b9\uff08\u5f53\u524d\u91cd\u5fc3\uff09 \nvoid f_g(int x,int f_a){//\u5904\u7406\u91cd\u5fc3 \n\ts_z[x]=1;//\u521d\u59cb\u5316\u5b50\u6811\u91cd\u91cf \n\tm_s[x]=0;//\u521d\u59cb\u5316\u6700\u5927\u5b50\u6811 \n\tfor(int i=h_d[x];i;i=n_t[i]){\n\t\tint v=v_v[i];\n\t\tif(!b_b[v]&&v!=f_a){//\u6ca1\u6709\u5f53\u8fc7\u91cd\u5fc3\u4e0d\u662f\u7236\u8282\u70b9 \n\t\t\tf_g(v,x);\n\t\t\ts_z[x]+=s_z[v];//\u7d2f\u8ba1\u5b50\u6811\u91cd\u91cf \n\t\t\tm_s[x]=max(m_s[x],s_z[v]);//\u66f4\u65b0\u6700\u5927\u5b50\u6811 \n\t\t}\n\t}\n\tm_s[x]=max(m_s[x],s_n-s_z[x]);\n\tif(m_s[x]<m_s[g_g])g_g=x;//\u66f4\u65b0\u6839\u8282\u70b9\uff08\u91cd\u5fc3\uff09 \n}\nstruct ss{\n\tvector<int> v_l;\n\tint l_n;\n\tss(){}\n\tss(int l_i){//\u521d\u59cb\u5316\u957f\u5ea6 \n\t\tl_n=l_i+1;\n\t\tv_l.resize(l_i+2);\n\t}\n\tvoid g_a(int k,int v){//\u6811\u72b6\u6570\u7ec4\u66f4\u65b0\u6743\u503c \n\t\tfor(int i=k+1;i<=l_n;i+=i&(-i))v_l[i]+=v;\n\t}\n\tint q_i(int k){//\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\u6743\u503c \n\t\tint r_s=0;\n\t\tfor(int i=min(k+1,l_n);i>0;i-=i&(-i))r_s+=v_l[i];//\u6ce8\u610f\u8fb9\u754c \n\t\treturn r_s;\n\t}\n}n_x[o_o],l_x[o_o];\nint i_d[o_o];//\u5b50\u6811\u4e2d\u8282\u70b9\u7f16\u53f7 \nint n_i;//\u5b50\u6811\u4e2d\u8282\u70b9\u7684\u6570\u91cf \nint d_p[o_o];//\u8282\u70b9\u6df1\u5ea6 \nvoid s_l(int x,int f_a){//\u8bb0\u5f55\u5b50\u6811\u4e2d\u6240\u6709\u8282\u70b9 \n\ti_d[++n_i]=x;//\u8fdb\u5165\u961f\u4e2d \n\td_p[x]=d_p[f_a]+1;//\u66f4\u65b0\u6df1\u5ea6 \n\tfor(int i=h_d[x];i;i=n_t[i]){\n\t\tint v=v_v[i];\n\t\tif(!b_b[v]&&v!=f_a)s_l(v,x);//\u5728\u5b50\u6811\u4e2d\u5e76\u4e14\u4e0d\u662f\u7236\u8282\u70b9\u7ee7\u7eed\u627e \n\t}\n}\nint v_l[o_o];//\u8282\u70b9\u6743\u503c \nint l_i[o_o],r_i[o_o];//\u8bb0\u5f55\u5de6\u53f3\u7aef\u70b9 \nint m_p[o_o];//\u5f53\u524d\u8282\u70b9\u7684\u6df1\u5ea6 \nint g_i[o_o];//\u8bb0\u5f55\u8282\u70b9\u7684\u6240\u5c5e\u7684\u6839\u8282\u70b9 \nvoid b_t(int k){//\u5904\u7406\u5f53\u524d\u6839\u8282\u70b9\u6574\u68f5\u6811\u7684\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u7ba1\u8f96\u8303\u56f4\u6df1\u5ea6\u5bf9\u5e94\u7684\u6743\u503c \n\tn_i=0;//\u961f\u5217\u4e0b\u6807\u91cd\u7f6e \n\td_p[k]=0;//\u521d\u59cb\u5316\u6df1\u5ea6 \n\tint m_d_p=0;//\u521d\u59cb\u5316\u6700\u5927\u6df1\u5ea6 \n\tfor(int i=h_d[k];i;i=n_t[i]){\n\t\tint v=v_v[i];\n\t\tif(!b_b[v]){//\u5728\u5b50\u6811\u8303\u56f4\u5185 \n\t\t\tl_i[v]=n_i+1;//\u8bb0\u5f55\u5de6\u7aef\u70b9 \n\t\t\ts_l(v,k);\n\t\t\tr_i[v]=n_i;//\u8bb0\u5f55\u53f3\u7aef\u70b9 \n\t\t\tm_p[v]=0;//\u521d\u59cb\u5316\u8282\u70b9\u6df1\u5ea6 \n\t\t\tfor(int j=l_i[v];j<=n_i;j++)//\u8303\u56f4\u5185\u6700\u5927\u6df1\u5ea6\u8282\u70b9 \n\t\t\t\tm_p[v]=max(m_p[v],d_p[i_d[j]]);//\u5f53\u524d\u8282\u70b9\u5b50\u6811\u4e2d\u6700\u5927\u6df1\u5ea6\u66f4\u65b0 \n\t\t\tm_d_p=max(m_d_p,m_p[v]);//\u66f4\u65b0\u603b\u5b50\u6811\u6700\u5927\u6df1\u5ea6 \n\t\t}\n\t}\n\t\n\t//\u5904\u7406\u5f53\u524d\u8282\u70b9\u4fe1\u606f \n\tn_x[k]=ss(m_d_p);//\u521d\u59cb\u5316\u957f\u5ea6 \n\tn_x[k].g_a(0,v_l[k]);//\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\u533a\u95f4\u6743\u503c \n\tfor(int i=h_d[k];i;i=n_t[i]){\n\t\tint v=v_v[i];\n\t\tif(!b_b[v]){//\u5b50\u6811\u8303\u56f4\u5185 \n\t\t\tint g_g=g_i[v];//\u8bb0\u5f55\u6839\u8282\u70b9 \n\t\t\tl_x[g_g]=ss(m_p[v]);//\u66f4\u65b0\u5b50\u6811\u957f\u5ea6 \n\t\t\tfor(int j=l_i[v];j<=r_i[v];++j){//\u679a\u4e3e\u5b50\u6811\u5143\u7d20 \n\t\t\t\tint x=i_d[j];//\u8bb0\u5f55\u5f53\u524d\u4e0b\u8868 \n\t\t\t\t\n\t\t\t\t//\u6839\u636e\u6df1\u5ea6\u66f4\u65b0\u6743\u503c \n\t\t\t\tn_x[k].g_a(d_p[x],v_l[x]);//\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u6743\u503c \n\t\t\t\tl_x[g_g].g_a(d_p[x],v_l[x]);//\u66f4\u65b0\u5b50\u6811\u8282\u70b9\u6743\u503c \n\t\t\t}\n\t\t}\n\t}\n}\nint f_a[o_o];//\u8bb0\u5f55\u7236\u8282\u70b9 \nvoid d_f(int x){\n\tb_b[x]=1;//\u6807\u8bb0\u8282\u70b9\u5f53\u8fc7\u91cd\u5fc3 \n\tfor(int i=h_d[x];i;i=n_t[i]){\n\t\tint v=v_v[i];\n\t\tif(!b_b[v]){//\u5728\u5b50\u6811\u8303\u56f4\u5185\uff08\u6ca1\u5f53\u8fc7\u91cd\u5fc3\uff09 \n\t\t\ts_n=s_z[v];//\u66f4\u65b0\u5b50\u6811\u4e2d\u8282\u70b9\u6570\u91cf \n\t\t\t\n\t\t\t//\u66f4\u65b0\u91cd\u5fc3 \n\t\t\tg_g=0;\n\t\t\tf_g(v,0);\n\t\t\tg_i[v]=g_g;//\u8bb0\u5f55\u5b50\u6811\u6240\u5c5e\u7684\u6839\u8282\u70b9 \n\t\t\tf_a[g_g]=x;//\u8bb0\u5f55\u7236\u8282\u70b9 \n\t\t}\n\t}\n\tb_t(x);//\u5904\u7406\u6574\u68f5\u6811\u7684\u76f8\u5173\u4fe1\u606f \n\tfor(int i=h_d[x];i;i=n_t[i]){\n\t\tint v=v_v[i];\n\t\tif(!b_b[v])d_f(g_i[v]);//\u5904\u7406\u6240\u6709\u5b50\u8282\u70b9 \n\t}\n}\n\n//\u6811\u94fe\u5256\u5206\u90e8\u5206 \nint f_i[o_o];//\u7236\u8282\u70b9 \nint b_s[o_o];//\u5b57\u6570\u6700\u5927\u5b50\u8282\u70b9\u66f4\u65b0 \nint t_p[o_o];//\u8bb0\u5f55\u94fe\u9876 \nvoid d_1(int x,int f_a){\n\ts_z[x]=1;//\u521d\u59cb\u5316\u5b50\u6811\u8282\u70b9\u5927\u5c0f \n\tf_i[x]=f_a;//\u66f4\u65b0\u7236\u8282\u70b9 \n\td_p[x]=d_p[f_a]+1;//\u66f4\u65b0\u6df1\u5ea6 \n\tfor(int i=h_d[x];i;i=n_t[i]){\n\t\tint v=v_v[i];\n\t\tif(v!=f_a){//\u4e0d\u662f\u7236\u8282\u70b9\uff08\u4e0d\u4f1a\u8dd1\u73af\uff09 \n\t\t\td_1(v,x);\n\t\t\ts_z[x]+=s_z[v];//\u7d2f\u8ba1\u5b50\u6811\u5927\u5c0f \n\t\t\tif(s_z[v]>s_z[b_s[x]])b_s[x]=v;//\u66f4\u65b0\u5b50\u6811\u6700\u5927\u7684\u5b50\u8282\u70b9 \n\t\t}\n\t}\n}\nvoid d_2(int x,int t_n){\n\tt_p[x]=t_n;//\u8bb0\u5f55\u94fe\u9876 \n\tif(!b_s[x])return; \n\td_2(b_s[x],t_n);//\u7ee7\u7eed\u8dd1\u94fe \n\tfor(int i=h_d[x];i;i=n_t[i]){\n\t\tint v=v_v[i];\n\t\tif(v!=f_i[x]&&v!=b_s[x])d_2(v,v);//\u5f00\u65b0\u94fe \n\t}\n}\nint l_a(int x,int y){//\u627e\u516c\u5171\u7956\u5148 \n\twhile(t_p[x]!=t_p[y]){//\u8df3\u5230\u4e00\u6761\u94fe\u4e0a \n\t\tif(d_p[t_p[x]]<d_p[t_p[y]])swap(x,y);\n\t\tx=f_i[t_p[x]];//\u5f80\u56de\u722c \n\t}\n\treturn d_p[x]<d_p[y]?x:y;//\u8282\u70b9\u5c0f\u7684\u65f6\u516c\u5171\u7956\u5148 \n}\n\nint g_d(int x,int y){//\u8ba1\u7b97\u8ddd\u79bb \n\treturn d_p[x]+d_p[y]-(d_p[l_a(x,y)]<<1);\n}\nint q_i(int x,int k){//\u67e5\u8be2 \n\tint r_s=n_x[x].q_i(k);//\u8bb0\u5f55\u6743\u503c\u548c \n\tint k_k=x;\n\twhile(f_a[k_k]){\n\t\tint d=g_d(f_a[k_k],x);//\u8ba1\u7b97\u8ddd\u79bb \n\t\t\n\t\tif(d<=k)r_s+=n_x[f_a[k_k]].q_i(k-d)-l_x[k_k].q_i(k-d);\n\t\t//\u7edf\u8ba1\u8def\u5f84\u4e0a\u53bb\u91cd\u540e\u7684\u7ed3\u679c\uff08\u6ce8\u610f\u5728\u8303\u56f4\u5185\u7684\u8282\u70b9\u6743\u503c\u624d\u7edf\u8ba1\uff09 \n\t\t\n\t\tk_k=f_a[k_k];//\u5f80\u56de\u722c  \n\t}\n\treturn r_s;\n}\nvoid g_a(int x,int v){//\u5355\u70b9\u4fee\u6539 \n\tint k_k=v-v_l[x];//\u53d8\u5316\u7684\u503c \n\tif(!k_k)return;//\u6ca1\u6709\u53d8\u5316\u4e0d\u7528\u6539 \n\tv_l[x]=v;//\u6539\u6743\u503c \n\tn_x[x].g_a(0,k_k);//\u5b50\u6811\u6811\u72b6\u6570\u7ec4\u8303\u56f4\u6743\u503c\u66f4\u65b0 \n\tint x_x=x;\n\twhile(f_a[x_x]){\n\t\tint d=g_d(f_a[x_x],x);//\u8ba1\u7b97\u8ddd\u79bb \n\t\tn_x[f_a[x_x]].g_a(d,k_k);//\u66f4\u65b0\u7236\u8282\u70b9\u8303\u56f4\u6743\u503c\u548c \n\t\tl_x[x_x].g_a(d,k_k);//\u66f4\u65b0\u5b50\u6811\u8303\u56f4\u6743\u503c\u548c \n\t\tx_x=f_a[x_x];//\u5f80\u6839\u5904\u722c \n\t}\n}\nint main(){\n\tint n=r_r(),m=r_r();\n\tfor(int i=1;i<=n;++i)v_l[i]=r_r();//\u8bb0\u5f55\u8282\u70b9\u6743\u503c \n\tfor(int i=1;i<=n-1;++i){//\u52a0\u8fb9 \n\t\tint u=r_r(),v=r_r();\n\t\ta_d(u,v);\n\t\ta_d(v,u);\n\t}\n\tm_s[0]=n+1;//\u521d\u59cb\u5316 \n\ts_n=n;//\u8bb0\u5f55\u8282\u70b9\u6570\u91cf \n\tf_g(1,0);//\u5904\u7406\u91cd\u5fc3 \n\td_f(g_g);//\u5904\u7406\u6574\u4e2a\u6811\u7684\u57fa\u672c\u4fe1\u606f \n\t\n\t//\u5c06\u6574\u68f5\u6811\u5256\u5206 \n\td_1(1,0);\n\td_2(1,1);\n\t\n\tint l_s=0;//\u8bb0\u5f55\u4e0a\u6b21\u7ed3\u679c\uff0c\u7528\u4e8e\u89e3\u5bc6 \n\twhile(m--){\n\t\tint op=r_r(),x=r_r()^l_s,k=r_r()^l_s;//\u89e3\u5bc6 \n\t\tif(op==0)printf(\"%lld\\n\",l_s=q_i(x,k));//\u8be2\u95ee\u8303\u56f4\u5185\u6743\u503c\u548c \n\t\telse g_a(x,k);//\u5355\u70b9\u4fee\u6539 \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1640404728,
        "uid": 120012,
        "name": "\u738b\u5927\u795e\u2014\u2014A001",
        "ccfLevel": 0,
        "title": "\u70b9\u5206\u6811\u9898\u89e3"
    }
]