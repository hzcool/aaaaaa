[
    {
        "content": "## \u4e00\u9053\u6700\u5c0f\u751f\u6210\u6811\u7684\u53d8\u5f0f\u9898\uff0c\n## \u4e0d\u77e5\u9053\u56f0\u4e86\u6211\u591a\u957f\u65f6\u95f4\uff0c\u6bd5\u7adf\u6211\u592a\u5f31\u3002\n#### \u4f46\u4f5c\u4e3a\u4e00\u4e2a\u849f\u84bb\uff0c\u6211\u8fd8\u662f\u8981\u4ecb\u7ecd\u4e00\u4e0b\u6211\u7684\u505a\u6cd5\u3002\u300b\u300b\u300b\n\n------------\n\n## \u6211\u4eec\u628a\u6bcf\u4e2a\u70b9\u770b\u6210\u4e00\u4e2a\u90e8\u843d\uff0c\u6bcf\u6b21\u53d6\u6700\u5c0f\u8ddd\u79bb\u7684\u4e24\u4e2a\u62b1\u56e2\uff0c\u540c\u65f6\u90e8\u843d\u4e5f\u51cf\u5c11\u4e86\u4e00\u4e2a....\u7136\u540e\u51cf\u51cf\u51cf\uff0c\u76f4\u5230\u90e8\u843d\u6570==\u76ee\u6807\u6570\uff0c\u6b64\u65f6\u4e0b\u4e00\u4e2a\u4e0d\u540c\u90e8\u843d\u7684\u8ddd\u79bb\u5c31\u662f\u6700\u77ed\u7684\u8ddd\u79bb\uff01\n\n------------\n\n### \u662f\u4e0d\u662f\u5f88\u597d\u7406\u89e3\uff1f\n## \u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\n#include<cmath> \nconst int MA = 1e7;\nusing namespace std;\nint o,n,k,num,flag;\nint fa[MA];\ninline int read()\n{\n    int x = 0;\n    char c = getchar();\n\twhile (!isdigit(c))c = getchar();\n    while(c>='0'&&c<='9')\n    {\n        x = x*10+c-'0';\n        c = getchar();\n    }\n    return x;\n}\nstruct s\n{\n\tint x,y;double l; \n}ass[MA],e[MA];//\u7ed3\u6784\u4f53\u5b58\u70b9\uff1b \n\ndouble cmp(s x,s y)\n{\treturn x.l < y.l;}\n//\u6bd4\u8f83\u8fb9\u957f\uff1b\n//\nint find(int a)\n{\n\tif(fa[a]!=a)\n\t\tfa[a] = find(fa[a]);\n\treturn fa[a];\n}\nvoid unionn(int a,int b)\n{\tfa[find(b)] = find(a); }\n//\u5e76\u67e5\u96c6\uff1b\nvoid kruskal()\n{\n\tfor(int i=1;i<=o;i++)\n\t{\n\t\tif(num==n-k) flag = 1;\n\t\tif(find(e[i].x)!=find(e[i].y))\n\t\t{\n\t\t\tnum++;\n\t\t\tunionn(e[i].x,e[i].y);\n\t\tif(flag){\n\t\t\tprintf(\"%.2lf\",e[i].l);\n\t\t\treturn ;//\u5199\u5728\u91cc\u9762\uff0c\u56e0\u4e3a\u8981\u4e0d\u540c\u7684\u90e8\u843d\u8ddd\u79bb\uff1b\n\t\t\t}\t\n\t\t}\n\t}\n}\ndouble measure(int a,int b)//\u6c42\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\n{\n\treturn sqrt(pow((ass[a].x-ass[b].x),2)+pow((ass[a].y-ass[b].y),2));\n}\n\nint main()\n{\n    n = read(),k = read();\n    for(int i=1;i<=n;i++)\n        ass[i].x = read(),ass[i].y = read();\n    o = 0;//\u8fb9\u6570\uff1b\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<i;j++)\n        {\n            if(i!=j)e[++o].x=i,e[o].y=j,e[o].l=measure(i,j); //\u4e3a\u6240\u6709\u7684\u70b9\u5efa\u8fb9\uff1b\n        }\n    for(int i=1;i<=n;i++)\n    \tfa[i] = i;\n\tsort(e+1,e+1+o,cmp);\n//\tfor(int i=1;i<=o;i++)\n//\t\tcout<<e[i].l<<endl;\n\tkruskal();   \n    return 0;\n}\n```\n\n\n------------\n# \u540e\u8bb0\uff1a\n## \u56e0\u4e3a\u8fd9\u79cd\u66b4\u529b\u7684\u505a\u6cd5\u592a\u6734\u7d20....\n### \u5efa\u8fb9\u6570\u662f\uff08n/2\uff09*(n-1);\n### n = 1000\u65f6\uff0co = ....~~499500~~;\n#### \u597d\u5427\u63d0\u4ea4\u4e00\u4e0b\uff0c\n![C11hCj.png](https://s1.ax1x.com/2018/04/25/C11hCj.png)\n### \u4fa5\u5e78A\u8fc7 : )",
        "postTime": 1524296388,
        "uid": 59032,
        "name": "\u8f7b\u5c18",
        "ccfLevel": 0,
        "title": "\u90e8\u843d\u5212\u5206"
    },
    {
        "content": "\u6211\u89c9\u5f97\u51e0\u4e4e\u5c31\u662f\u4e00\u9053\u6700\u5c0f\u751f\u6210\u6811\u6a21\u677f\u554a...\n\n\u9898\u89e3\u91cc\u8bb8\u591a\u5927\u4f6c\u90fd\u8bf4\u9009\u7b2cn-k+1\u6761\u8fb9\uff0c\u53ef\u6211\u89c9\u5f97\u8981\u8fd9\u4e48\u8bb2\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\n\n![](https://cdn.luogu.com.cn/upload/pic/53677.png)\n\n(\u865a\u8fb9\u4e3a\u80fd\u9009\u7684\u8fb9\uff0c\u5b9e\u8fb9\u4e3a\u6700\u5c0f\u751f\u6210\u6811)\n\n\u4ee4n=5,k=2,(1,3)<(1,2)<(3,4)<(4,5)\uff08PS:(4,5)<(2,5)\uff0c\u56fe\u753b\u9519\u4e86\uff0c\u89c1\u8c05\uff09\n\n\u7136\u540e\u5f00\u59cb\u5206\u90e8\u843d\uff08\u88ab\u540c\u4e00\u4e2a\u4e09\u89d2\u5f62\u5957\u4f4f\u7684\u4e3a\u4e00\u4e2a\u90e8\u843d\u7684\uff09\uff1a\n\n(1)\n\n![](https://cdn.luogu.com.cn/upload/pic/53680.png)\n\n\u8fd9\u6837\u80af\u5b9a\u4e0d\u4e3a\u6700\u4f18\u90e8\u843d\u5212\u5206\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u8ddd\u79bb\u4e3a(1,3)\n\n(2)\n\n![](https://cdn.luogu.com.cn/upload/pic/53682.png)\n\n\u540c\u7406\uff0c\u8fd9\u6837\u4e5f\u4e0d\u884c\n\n(3)\n\n![](https://cdn.luogu.com.cn/upload/pic/53718.png)\n\n\u8fd9\u6837\u5f53\u7136\u662f\u4e0d\u884c\u7684\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5f97\u51fa\u4e86\u8fd9\u6837\u4e00\u4e2a\u7ed3\u8bba\uff1a\n\n\u8981\u5c3d\u91cf\u9009\u5927\u8fb9\n\n\u6240\u4ee5\u5c0f\u8fb9\u8981\u5c3d\u91cf\u5728\u4e00\u4e2a\u90e8\u843d\u91cc\uff0c\u5373\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/53719.png)\n\n\u53c8\u56e0\u4e3a\u6709k\u4e2a\u90e8\u843d\uff0c\u6240\u4ee5\u53ef\u4ee5\u6d88\u6389(n-1)-(k-1)\u6761\u8fb9\uff0c\u6240\u4ee5\u6700\u5c0f\u7684\u4e3a\u7b2cn-k+1\u6761\u8fb9\uff0c\u6240\u4ee5\u5c31\u8f93\u51faa[n-k+1]\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ninline int read(){\n    int r=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1,c=getchar();}\n    while(c>='0'&&c<='9')r=(r<<1)+(r<<3)+c-'0',c=getchar();\n    return r*f;\n}\nstruct E{\n    int u,v;\n    double dis;//\u8bb0\u5f97\u4e3adouble\n}e[10000001];\nint f[10001],s_e,n,m;\nint find(int x){\n    if(f[x]!=x)f[x]=find(f[x]);\n    return f[x];\n}\ninline bool cmp(E a,E b){\n    return a.dis<b.dis; \n}\ndouble a[10001];//\u8bb0\u5f97\u4e3adouble\nint x[10001],y[10001];\nint main(){\n    n=read(),m=read();\n    for(int i=1;i<=n;i++)f[i]=i,x[i]=read(),y[i]=read();\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<i;j++){\n            s_e++;\n            e[s_e].u=i;\n            e[s_e].v=j;\n            e[s_e].dis=(double)sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));//\u8ba1\u7b97sqrt((x1-x2)^2+(y1-y2)^2)\uff0c\u5373\u8ddd\u79bb\n        }\n    sort(e+1,e+1+s_e,cmp);//\u6700\u5c0f\u751f\u6210\u6811\n    int i=1;\n    int j=0;\n    while(j<n-1){\n        int fu=find(e[i].u),fv=find(e[i].v);\n        double dis=e[i].dis;//\u8bb0\u5f97\u4e3adouble\n        if(fu!=fv){\n            f[fu]=fv;\n            j++;\n            a[j]=dis;//\u8bb0\u5f97\u4e3adouble\n        }\n        i++;\n    }\n    printf(\"%.2lf\",a[n-m+1]);//\u8bb0\u5f97\u662f\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d\u4e24\u4f4d\n    return 0;\n}\n```",
        "postTime": 1552196358,
        "uid": 71403,
        "name": "\u4e00\u53f6\u77e5\u79cb\u3002",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4047 \u3010[JSOI2010]\u90e8\u843d\u5212\u5206\u3011"
    },
    {
        "content": "[\u5230\u535a\u5ba2\u98df\u7528\u66f4\u52a0~~\u4f18\u96c5~~\u4f18\u79c0](http://www.wjyyy.top/735.html)\n\n## \u89e3\u6cd5\uff1a\n\u6211\u7684\u7b2c\u4e00\u601d\u8def\u662f**\u4e8c\u5206\u7b54\u6848**\u68c0\u9a8c\uff0c\u628a\u67d0\u4e2a\u8ddd\u79bb\u4ee5\u5185\u7684\u5212\u5206\u4e3a\u540c\u4e00\u4e2a\u90e8\u843d\uff0c\u68c0\u67e5\u662f\u5426\u88ab\u5212\u5206\u4e3ak\u4e2a\u90e8\u843d\u3002\u5982\u679c\u8d85\u8fc7k\u4e2a\uff0c\u5219\u8303\u56f4\u6269\u5927\uff0c\u5982\u679c\u4e0d\u8d85\u8fc7k\u4e2a\uff08\u542bk\u4e2a\uff09\uff0c\u5219\u8303\u56f4\u7f29\u5c0f\u3002\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u5206\u51fak\u4e2a\u90e8\u843d\uff0c**\u4f7f\u4e24\u4e24\u90e8\u843d\u95f4\u6700\u5c0f\u7684\u8ddd\u79bb\u6700\u5927**\u3002\u800c\u540c\u65f6\uff0c\u5f53\u90e8\u843d\u591a\u4e86\u5e94\u5f53\u63a7\u5236\u8ddd\u79bb\u589e\u5927\uff0c\u5f53\u90e8\u843d\u5c11\u4e86\u63a7\u5236\u8ddd\u79bb\u51cf\u5c0f\u3002\u56e0\u6b64\u662f\u6709**\u5355\u8c03\u6027**\u7684\u3002~~\uff08\u4e00\u5f00\u59cb\u5e76\u67e5\u96c6\u5199\u9519\u53ea\u670970\u5206\u5413\u5f97\u6211\u6253\u4e86\u597d\u957f\u65f6\u95f4\u7684\u5bf9\u62cd\uff09~~\n   \n### \u4e8c\u5206\u7b54\u6848\u8fc7\u7a0b\uff1a\n\u68c0\u67e5\u4ee5mid\u4e3a\u8ddd\u79bb\uff0c\u679a\u4e3e\u5404\u4e2a\u70b9\uff0c\u4e0e\u70b9i\u7684\u8ddd\u79bb\u6bd4mid\u5c0f\u7684\uff0c\u5219\u4e0ei\u5f52\u4e3a\u4e00\u4e2a\u90e8\u843d\u3002\u56e0\u4e3a\u90e8\u843d\u7684\u57fa\u51c6\u70b9\u4e0d\u540c\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u70b9\u53ef\u4ee5\u56e0\u4e3a**\u5b58\u5728\u90e8\u843d\u91cc\u4e00\u4e2a\u70b9\u4e0e\u4e4b\u8ddd\u79bb\u5c0f\u4e8emid**\u800c\u88ab\u5f52\u4e3a\u4e00\u4e2a\u90e8\u843d\u3002\u56e0\u4e3a\u628a\u5404\u4e2a\u70b9\u62c9\u8fdb\u540c\u4e00\u4e2a\u90e8\u843d\u7684\u70b9\u53ef\u80fd\u4e0d\u540c\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u88ab\u5f52\u4e3a\u4e00\u4e2a\u90e8\u843d\u7684\u7528\u5e76\u67e5\u96c6\u653e\u5728\u4e00\u8d77\u5c31\u53ef\u4ee5\u4e86\u3002\n\n#### \u5176\u4ed6\n\n\u9898\u89e3\u91cc\u5176\u4ed6\u540c\u5b66\u505a\u7684\u662f\u7528\u751f\u6210\u6811\u6765\u505a\u7684\uff0c\u5c31\u662f\u628a\u6240\u6709\u70b9\u4e24\u4e24\u4e92\u8fde\uff0c\u5f53\u505a\u4e00\u4e2a\u6709$\\frac{n(n-1)}2$\u6761\u8fb9\u7684\u7a20\u5bc6\u56fe\uff0c\u6765\u505a\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6bcf**\u62c9**\u4e00\u4e2a\u70b9\u8fdb\u6765\u5c31\u51cf\u5c11\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u6700\u540e\u4e00\u4e2a\u4f7f\u5f97\u8fde\u901a\u5757\u4e2a\u6570\u51cf\u4e3ak\u7684\u8fb9\u5373\u4e3a\u6240\u6c42\u3002\u8fd9\u6837\u5728\u67d0\u4e9b\u60c5\u51b5\u4f1a\u6bd4\u4e8c\u5206\u7b54\u6848\u66f4\u4f18\uff0c\u4f46\u5728\u7a20\u5bc6\u56fe\u7528\u4e8c\u5206\u7b54\u6848\u6bd4\u7528kruscal\u5728\u65f6\u95f4\u548c\u7a7a\u95f4\u4e0a\u90fd\u7a0d\u5fae\u4f18\u4e00\u4e9b :) \u3002\u4e0d\u8fc7\u6bd4\u8f83\u96be\u60f3\uff0c\u7ec6\u8282\u9887\u591a\u3002 \n\n**tips\uff1a\u4e8c\u5206\u5e73\u65b9\u6700\u540e\u5f00\u6839\u53ef\u80fd\u7cbe\u5ea6\u66f4\u6709\u4fdd\u8bc1\uff0c\u8fd9\u4e2a\u9898\u4fdd\u75592\u4f4d\u5c0f\u6570\u5c31\u65e0\u6240\u8c13\u4e86&& \u53d1\u73b0\u9898\u76ee\u56fe\u7247\u539f\u6765\u6709\u5f69\u86cb\u300eJSOI\u300f\u554a**\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#define eps 1e-4\nint c[10100],n,m;\nint x[1010],y[1010];\nint my_find(int x)\n{\n    if(c[x]==x)\n        return x;\n    return c[x]=my_find(c[x]);\n}\nbool check(double ans)\n{\n    for(int i=1;i<=n;i++)\n        c[i]=i;\n    int cnt=0;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            if((x[j]-x[i])*(x[j]-x[i])+(y[j]-y[i])*(y[j]-y[i])<=ans)//\u6682\u65f6\u4e0d\u5f00\u6839\u53f7\n                c[my_find(i)]=my_find(j);\n    for(int i=1;i<=n;i++)\n        if(my_find(i)==i)\n            cnt++;\n    if(cnt<m)//\u6846\u591a\u4e86\n        return false;\n    return true;\n}\nint main()\n{\n    double mx=0.0,my=0.0;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&x[i],&y[i]);\n        mx=mx>x[i]?mx:x[i];//\u51cf\u5c0f\u4e8c\u5206\u4e0a\u754c\uff08\u5176\u5b9e\u6ca1\u5fc5\u8981\uff09\n        my=my>y[i]?my:y[i];\n    }\n    //\u4e8c\u5206\u5e73\u65b9\uff0c\u4fdd\u8bc1\u7cbe\u5ea6\uff08\u5176\u5b9e\u4e5f\u6ca1\u5fc5\u8981\uff09\n    double l=0.0,r=mx*mx+my*my,mid;\n    while(r-l>eps)\n    {\n        mid=(l+r)/2.0;\n        if(check(mid))\n            l=mid;\n        else\n            r=mid;\n    }\n    printf(\"%.2lf\\n\",sqrt(l));\n    return 0;\n}\n```",
        "postTime": 1530790429,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4047 \u3010[JSOI2010]\u90e8\u843d\u5212\u5206\u3011 \u5e76\u67e5\u96c6+\u4e8c\u5206\u7b54\u6848"
    },
    {
        "content": "~~\u8fd9\u9898\u771f\u6ca1\u5230\u84dd\u9898~~\u5927\u6982\u5c31\u9ec4\u9898\u5427\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u8d2a\u5fc3\u7b56\u7565(\u5176\u5b9e\u662f\u6211\u4e0d\u4f1a\u4e8c\u5206)\uff0c\u5148\u628a\u6240\u6709\u91ce\u4eba\u4e4b\u95f4\u7684\u8ddd\u79bb\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u6bcf\u6b21\u627e\u5230**\u6700\u5c0f\u7684\u4e00\u6761\u8fb9**\uff0c\u628a\u8fd9\u4e24\u4e2a\u91ce\u4eba\u5408\u6210\u4e00\u4e2a\u90e8\u843d\uff0c\u6700\u8fd1\u7684\u4e24\u4e2a\u90e8\u843d\u7684\u8ddd\u79bb\u5c31\u4f1a\u589e\u5927\uff0c\u603b\u90e8\u843d\u6570-1\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u8fde\u7684\u70b9\u5df2\u7ecf\u662f\u540c\u4e00\u4e2a\u90e8\u843d\u4e86\uff0c\u5c31\u8df3\u8fc7\u3002\n\n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a**\u6700\u5c0f\u751f\u6210\u6811**\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u4e00\u5171\u6709k\u4e2a\u90e8\u843d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627en-k\u6761\u8fb9\uff0c\u7b2cn-k+1\u6761\u8fb9\u5c31\u662f\u7b54\u6848\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n    int u,v;\n    double w;\n}a[1000000];\nint n,f[10000],cnt,k,l;\nint x[10000],y[10000];\nvoid add(int uu,int vv,double ww)  //uu\u5230vv\u7684\u8ddd\u79bb\u4e3aww\n{a[++cnt].u=uu;a[cnt].v=vv;a[cnt].w=ww;}\nbool cmp(node a1,node a2)\n{return a1.w<a2.w;}\nint find(int u)  //\u5e76\u67e5\u96c6\n{\n    if(f[u]==u) return u;\n    else return f[u]=find(f[u]);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;i++)\n        f[i]=i;\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",&x[i],&y[i]);\n    for(int i=1;i<=n;i++)\n        for(int j=i+1;j<=n;j++)   //\u628a\u4efb\u610f\u4e24\u4e2a\u91ce\u4eba\u7684\u8ddd\u79bb\u5b58\u8d77\u6765\n        {\n            double s=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));\n            add(i,j,s);\n        }\n    sort(a+1,a+cnt+1,cmp);     //\u6392\u5e8f\n    for(int i=1;i<=cnt;i++)    \n    {\n        int uu=find(a[i].u);   \n        int vv=find(a[i].v);\n        if(uu==vv) continue;   //\u8fb9\u8fde\u7684\u4e24\u70b9\u5728\u540c\u4e00\u4e2a\u90e8\u843d\uff0c\u8df3\u8fc7\n        f[uu]=vv;              //\u8fde\u8d77\u6765\n        l++;                  \n        if(l==n-k+1)           //\u7b2cn-k+1\u6761\u8fb9\u4e3a\u7b54\u6848\n        {\n            printf(\"%.2lf\",a[i].w);\n            return 0;\n        }\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1531665630,
        "uid": 44438,
        "name": "\u671b\u773c\u6d6e\u4e91",
        "ccfLevel": 0,
        "title": "\u90e8\u843d\u5212\u5206"
    },
    {
        "content": "\u53d1\u73b0\u9898\u89e3\u533a\u5168\u90fd\u662f\u5e26 $\\log$ \u7684\u89e3\u6cd5\u2026\u2026\u8981\u4e48 Kruskal \u8981\u4e48\u4e8c\u5206\u7b54\u6848\u3002\u548b\u7684\uff0c**\u6211\u5802\u5802 $O(n^2)$ Prim \u4e0d\u88ab\u8ba4\u53ef\u5417\uff1f**\r\n\r\n[\u559c\u63d0\u6700\u4f18\u89e3 36 ms\u3002](https://www.luogu.com.cn/record/77615656)\r\n\r\n\u5982\u5176\u4ed6\u9898\u89e3\u6240\u8bf4\uff0c\u6211\u4eec\u8981\u505a\u7684\u662f\u6c42\u51fa\u8fd9\u4e2a**\u5b8c\u5168\u56fe**\u7684\u6700\u5c0f\u751f\u6210\u6811\uff08\u4ee5\u4e0b\u7b80\u79f0 MST\uff09\u3002\u56e0\u4e3a MST \u4e0a\u6bcf\u4e00\u6761\u8fb9\u5220\u53bb\u540e\u4e24\u90e8\u5206\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u4e00\u5b9a\u5c31\u662f\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u672c\u8eab\uff0c\u6240\u4ee5\u4e00\u79cd\u6700\u4f18\u7684\u90e8\u843d\u5212\u5206\u65b9\u6848\u5c31\u662f\u5220\u53bb MST \u4e2d\u8fb9\u6743\u6700\u5927\u7684 $k-1$ \u6761\u8fb9\u3002\r\n\r\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u7b54\u6848\u4e3a MST \u4e2d\u8fb9\u6743\u7b2c $k-1$ \u5927\u3002\r\n\r\n\u6211\u4eec\u8dd1 Prim \u4e4b\u540e\u8fb9\u6743\u6392\u5e8f\u5373\u53ef\uff0c\u4e0d\u4f1a Prim \u7684\u8bf7\u51fa\u95e8\u53f3\u8f6c\u767e\u5ea6\u6216\u770b\u4ee3\u7801\u3002\r\n\r\n**\u65f6\u95f4 $O(n^2)$\u3002**\r\n\r\n```cpp\r\n//We'll be counting stars.\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define For(i,j,k) for(int i=(j),i##_=(k);i<=i##_;i++)\r\n#define db double\r\n#define N 1001\r\nint tot=0,n,k,a[N],b[N];\r\nbool vis[N];\r\ndb dis[N],s[N];\r\ninline db pw(int x){return (db)x*x;}\r\ninline db Dis(int x,int y){return sqrt(pw(a[x]-a[y])+pw(b[x]-b[y]));}\r\nint main(){\r\n\tscanf(\"%d%d\",&n,&k);\r\n\tFor(i,1,n) scanf(\"%d%d\",a+i,b+i);\r\n\tFor(i,0,n) dis[i]=(i==1)?0:1e9;\r\n\tFor(i,1,n){\r\n\t\tint x=0;\r\n\t\tFor(j,1,n) if(!vis[j] && dis[j]<dis[x]) x=j;\r\n\t\tvis[x]=1;\r\n\t\ts[tot++]=dis[x];\r\n\t\tFor(j,1,n) if(!vis[j]) dis[j]=min(dis[j],Dis(x,j));\r\n\t}\r\n\tsort(s+1,s+tot,greater<db>());\r\n\tprintf(\"%.2lf\\n\",s[k-1]);\r\nreturn 0;}\r\n```",
        "postTime": 1655622324,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "P4047 [JSOI2010]\u90e8\u843d\u5212\u5206\uff08Prim\uff09"
    },
    {
        "content": "\u5148\u770b\u770b\u9898\u5e72\u201c\u4f7f\u9760\u5f97\u6700\u8fd1\u7684\u4e24\u4e2a\u90e8\u843d\u5c3d\u53ef\u80fd\u8fdc\u79bb\u3002\u201d\u8fd9\u660e\u663e\u662f\u4e00\u4e2a\u4e8c\u5206\u6c42\u6700\u5927\u503c\u5417\u3002\n\u53ea\u8981\u4e8c\u5206\u5c0f\u6570\u5c31\u884c\u4e86\u3002\n\u90a3\u83ab\u5982\u4f55\u63a7\u5236\u7cbe\u5ea6\u5462\uff1f\n\u770b\u770b\u4ee3\u7801\uff1a\n```cpp\n        while(r-l>esp)\n\t{\n\t\tdouble mid=(l+r)/2;\n\t\tif(judge(mid)==0)\n\t\t{\n\t\t    r=mid;\n\t\t    ans=r;\n\t\t}\n\t\telse l=mid;\n\t}\n```\n\u6ce8\u610f\u8fd9\u91cc\u4e0d\u80fd\u8ba9l+1\u6216r-1\u3002\n\u76f4\u63a5\u8ba9\u4ed6\u4eec\u7b49\u4e8emid\u5c31\u884c\u4e86\u3002\n\n\u6ce8\u610f\u4fdd\u6301\u7cbe\u5ea6\u4ee4esp=1e-8\u5c31\u591f\u4e86\u3002\n\n\u770b\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint i,j,n,m;\nint fa[10000];\nint x[10000],y[10000];\nint vis[10000];\ndouble ans;\nconst double esp=1e-8;\nint find(int x)\n{\n\tif(fa[x]==x)\n\t{\n\t\treturn x;\n\t}\n\treturn fa[x]=find(fa[x]);\n}\nint judge(double p)\n{\n\tint cnt=0;\n\tmemset(vis,0,sizeof(vis));\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfa[i]=i;\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tif(find(i)!=find(j)&&(sqrt(abs(x[i]-x[j])*abs(x[i]-x[j])+abs(y[i]-y[j])*abs(y[i]-y[j]))<=p))\n\t\t\t{\n\t\t\t\tfa[find(i)]=find(j);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(vis[fa[i]]==0)\n\t\t{\n\t\t\tvis[fa[i]]=1;\n\t\t\tcnt++;\n\t\t}\n\t}\n\tif(cnt>=m)\n\t{\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nint main()\n{\n\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&x[i],&y[i]);\n\t}\n\tdouble l=0,r=50000;\n\twhile(r-l>esp)\n\t{\n\t\tdouble mid=(l+r)/2;\n\t\tif(judge(mid)==0)\n\t\t{\n\t\t    r=mid;\n\t\t    ans=r;\n\t\t}\n\t\telse l=mid;\n\t}\n\tprintf(\"%.2lf\",ans);\n\treturn 0;\n}\n```\n\u8fd9\u6837\u5c31\u5f00\u5fc3\u7684AC\u4e86",
        "postTime": 1572178446,
        "uid": 85079,
        "name": "zhoubaobao",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4047 \u3010[JSOI2010]\u90e8\u843d\u5212\u5206\u3011"
    },
    {
        "content": "\u65b0\u4eba\u672a\u5199\u8fc7\u51e0\u7bc7\u9898\u89e3\uff0c\u8bf7\u591a\u591a\u5305\u6db5\n\n\u8fd9\u9053\u9898\u770b\u4f3c\u4e8c\u5206\uff0c\u800c\u672c\u4eba\u8ba4\u4e3akrustrsl\u624d\u662f\u6b63\u89e3\u3002\n\n\u6765\u770b\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,x[1010],y[1010],num,father[1010];\nstruct edge{\n\tint from,to,dis;\n}a[1000010]; \n#define lj (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j])//\u7ea2\u5b9a\u4e49 \ninline int v(edge a,edge b){//\u7b80\u5355\u6392\u5e8f \n\treturn a.dis<b.dis; \n}\ninline int find(int x){\t//\u538b\u7f29\u8def\u5f84 \n\tif(father[x]!=x)\n\t\tfather[x]=find(father[x]);\n\treturn father[x];\n}\ninline int f(int x){\t//\u627e\u5230\u5269\u4f59\u90e8\u843d\u4e2d\u7684\u6700\u5c0f\u8def\u5f84 \n\tfor(int i=x;i<=num;i++){\n\t\tint q=find(a[i].from),w=find(a[i].to);\n\t\tif(q!=w){\t//\u4e0d\u80fd\u8ba9\u4ed6\u4eec\u5728\u540c\u4e00\u90e8\u843d\u4e2d \n\t\t\treturn a[i].dis;\n\t\t}\n\t}\n}\ninline int krustral(){\t//krustral\u7684\u6a21\u677f \n\tfor(register int i=1;i<=n;i++)father[i]=i;\n\tint k=n;\n\tfor(register int i=1;i<=num;i++){\n\t\tif(k==m){\t//\u4ecen\u51cf\u5230m\n\t\t\treturn f(i);\n\t\t}\n\t\tint q=find(a[i].from),w=find(a[i].to);\n\t\tif(q!=w){\n\t\t\tfather[q]=w;\n\t\t\tk--;\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>x[i]>>y[i];\t\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tnum++;\n\t\t\ta[num].from=i;\n\t\t\ta[num].to=j;\n\t\t\ta[num].dis=lj;\n\t\t}\n\t}\n\tsort(a+1,a+1+num,v);\n\tdouble ans=sqrt(krustral());//\u5728\u6700\u540e\u624d\u5f00\u65b9 \n\tprintf(\"%0.2lf\",ans);\n\treturn 0;\n}\n```\nThank you\uff01",
        "postTime": 1552650790,
        "uid": 99247,
        "name": "\u5514\u554a\u5514",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4047 \u3010[JSOI2010]\u90e8\u843d\u5212\u5206\u3011"
    },
    {
        "content": "\u672c\u6765\u770b\u5230\u201c\u6700\u8fd1\u7684\u90e8\u843d\u5c3d\u53ef\u80fd\u8fdc\u79bb\u201d\uff0c\u77ac\u95f4\u60f3\u5230\u4e86**\u4e8c\u5206\u7b54\u6848**\uff0c\u4f46\u662f\u56e0\u4e3a\u4e2a\u4eba\u592a\u83dc\uff0c\u60f3\u4e0d\u5230\u600e\u4e48$Check$\uff0c\u4e8e\u662f\u53ea\u80fd\u627e\u522b\u7684\u7b97\u6cd5\n\n\u91cd\u65b0\u8bfb\u9898\uff0c\u8981\u4f7f\u201c\u6700\u8fd1\u7684\u6700\u8fdc\u201d\uff0c\u5f53\u65f6\u60f3\u5230\u7684\u5c31\u662f\u8d2a\u5fc3\u7684\u505a\u6cd5\uff0c\u6bcf\u6b21\u628a\u6700\u8fd1\u7684\u4e24\u4e2a\u90e8\u843d\u5408\u5230\u4e00\u4e2a\u90e8\u843d\u91cc\u9762\u53bb\n\n\u7136\u540e\u778e\u5199\u4e86\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u5565\u4e5f\u8fc7\u4e0d\u53bb\u2026\u2026\n\n\u601d\u8003\u4e00\u756a\u540e\uff0c\u53d1\u73b0\u548c\u5e76\u67e5\u96c6\u6709\u5173\u7684\u7b97\u6cd5\uff0c\u6ca1\u9519\uff1a$Kruskal$\n\n\u8003\u8651\u6700\u5c0f\u751f\u6210\u6811\u7684\u5b9a\u4e49\uff0c\u7528\u901a\u4fd7\u7684\u8bed\u8a00\u8bb2\uff0c\u5c31\u662f\u5728\u4e00\u4e2a\u56fe\u4e2d\u9009\u62e9\u4e00\u4e9b\u8fb9\uff0c\u4f7f\u56fe\u8054\u901a\u4e14\u8fb9\u6743\u6700\u5c0f\uff0c\u5957\u5728\u8fd9\u9898\u597d\u50cf\u6ca1\u5565\u6bdb\u75c5\uff0c\u5220\u53bb\u7684\u8fb9\u53ef\u4ee5\u770b\u505a\u662f\u4e24\u4e2a\u90e8\u843d\u5408\u5728\u4e86\u4e00\u8d77\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u600e\u4e48\u5efa\u8fb9\uff0c\u5f88\u660e\u663e\uff0c\u76f4\u63a5\u5927\u529b$n^2$\uff0c\u5efa\u4e00\u4e2a\u5b8c\u5168\u56fe\u5373\u53ef\n\n\u867d\u7136\u8bf4$Prim$\u66f4\u9002\u7528\u4e8e\u7a20\u5bc6\u56fe\uff0c\u4f46\u662f\u8fd9\u9898\u6211\u4e0d\u77e5\u9053\u600e\u4e48\u5199$Prim$\u554a\uff01\n\n\u8fd8\u662f\u5199\u4e86\u4e07\u91d1\u6cb9$Kruskal$\u3010\u5927\u96fe\u3011\n\n\u8fd9\u9898\u8fd8\u6709\u4e00\u4e2a\u5730\u65b9\u8981\u6ce8\u610f\uff0c\u5c31\u662f\u6309\u957f\u5ea6\u6392\u5e8f\u540e\u53ea\u9700\u8981\u9009\u62e9$n-k$\u6761\u8fb9\uff0c\u800c\u7b54\u6848\u5219\u662f\u7b2c$n-k+1$\u6761\u8fb9\u7684\u957f\u5ea6\n\n\u89c1\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct Node//Kruskal\u6807\u51c6\u7ed3\u6784\u4f53\n{\n\tint u,v;\n\tdouble val;\n\tfriend bool operator < (const Node &x,const Node &y)\n\t{\n\t\treturn x.val<y.val;//\u91cd\u8f7d\u8fd0\u7b97\u7b26\u66ff\u4ee3cmp\u51fd\u6570\n\t}\n}a[1000005];\nint n,k,f[1005],tot;\ndouble tx[1005],ty[1005],ans;\nint Find(int x)//\u5e76\u67e5\u96c6\u6838\u5fc3\u51fd\u6570\uff0c\u4e0d\u8c08\n{\n\treturn x==f[x]?x:f[x]=Find(f[x]);\n}\nvoid Merge(int x,int y)//\u5c06\u4e24\u4e2a\u70b9\u5408\u5e76\n{\n\tx=Find(x);\n\ty=Find(y);\n\tif(x^y) f[x]=y;\n}\ndouble Calc(double x,double y,double xx,double yy)//\u8ba1\u7b97\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\n{\n\treturn sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\n}\nvoid Kruskal()//\u6700\u5c0f\u751f\u6210\u6811Kruskal\uff0c\u4e0d\u8c08\n{\n\tint sum=0;\n\tbool fg=0;\n\tfor(int i=1;i<=tot;i++)\n\t{\n\t\tif(sum==n-k) fg=1;//\u6ce8\u610f\uff0c\u53ea\u9700\u8981\u627en-k\u6761\u8fb9\n\t\tint p=Find(a[i].u),q=Find(a[i].v);\n\t\tif(p!=q)\n\t\t{\n\t\t\tsum++;\n\t\t\tMerge(a[i].u,a[i].v);\n\t\t\tif(fg)\n\t\t\t{\n\t\t\t\tans=a[i].val;//\u7b54\u6848\u662f\u7b2cn-k+1\u6761\u8fb9\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&k);\n\tfor(int i=1;i<=n;i++) scanf(\"%lf %lf\",&tx[i],&ty[i]);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tf[i]=i;\n\t\tfor(int j=1;j<i;j++)\n\t\t{\n\t\t\ta[++tot].u=i;\n\t\t\ta[tot].v=j;\n\t\t\ta[tot].val=Calc(tx[i],ty[i],tx[j],ty[j]);//\u5efa\u7acb\u5b8c\u5168\u56fe\n\t\t}\n\t}\n\tsort(a+1,a+tot+1);\n\tKruskal();//\u8dd1Kruskal\u8ba1\u7b97\u7b54\u6848\n\tprintf(\"%.2lf\\n\",ans);//\u8f93\u51fa\u5373\u53ef\n\treturn 0;\n}\n```",
        "postTime": 1542769521,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4047 \u3010[JSOI2010]\u90e8\u843d\u5212\u5206\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u5148\u6765\u770b\u8fd9\u9053\u9898\u7684\u6570\u636e\u89c4\u6a21\u3002\u3002\n\n\u4e00\u770b\u53ea\u67091000\uff0c\u90a3\u5c31\u53ef\u4ee5\u4e71\u641e\u4e86\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u66b4\u529b\u51fa\u6bcf\u4e24\u4e2a\u8282\u70b9\u95f4\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u5229\u7528\u5e76\u67e5\u96c6\uff08kruskal\uff09\u7684\u601d\u8def\uff0c\u5148sort\u5c06\u8ddd\u79bb\u6392\u5e8f\uff0c\u5c06\u6bcf\u4e2a\u70b9\u81ea\u8eab\u770b\u505a\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u7136\u540e\u4ece\u6700\u5c0f\u7684\u5f00\u59cb\u641c\uff0c\u5982\u679c\u4e24\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\uff0c\u5c31\u5e76\u96c6\uff0c\uff0c\u7136\u540e\u96c6\u5408\u6570-1\uff0c\u5f53\u96c6\u5408\u6570==k\u65f6\uff0c\u5f53\u518d\u641c\u5230\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u7684\u4e24\u4e2a\u70b9\u65f6\uff0c\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c31\u662f\u7b54\u6848\uff01\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n            \n```cpp\n    #include<bits/stdc++.h>\n    using namespace std;\n    typedef double dd;\n    const int maxn=1010;\n    dd ans;\n    int fa[maxn],n,k,cnt;\n    const dd eps=1e-5;\n    //\u8fb9\u7ed3\u6784\u4f53\n    struct ed{\n        int next,to;\n        dd w;    \n    }e[maxn*maxn];\n    //\u70b9\u7ed3\u6784\u4f53\n    struct point{\n        dd x, y;    \n    }g[maxn];\n    //\u6c42\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\n    dd f(int a,int b){\n        return sqrt((g[a].x-g[b].x)*(g[a].x-g[b].x)+(g[a].y-g[b].y)*(g[a].y-g[b].y));    \n    } \n    bool cm(ed a,ed b){\n        return a.w<b.w+eps;    \n    }\n    //\u5e76\u67e5\u96c6\u627efather\n    int ffa(int a){\n        return fa[a]==a?a:fa[a]=ffa(fa[a]);        \n    }\n    //\u5224\u65ad\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\n    bool pan(int a,int b){\n        if(ffa(a)==ffa(b))\n            return 1;\n        return 0;\n    }    \n    //\u5e76\u96c6\n    void connect(int a,int b){\n        fa[ffa(b)]=ffa(a);\n    }    \n    int main()\n    {\n        scanf(\"%d%d\",&n,&k);\n        for(int i=1;i<=n;i++)\n            scanf(\"%lf%lf\",&g[i].x,&g[i].y);    \n        for(int i=1;i<n;i++)\n            for(int j=i+1;j<=n;j++){\n                e[++cnt].w=f(i,j);    \n                e[cnt].next=i;\n                e[cnt].to=j;\n            }\n        sort(e+1,e+cnt+1,cm);\n        int t=n;\n        //\u521d\u59cb\u5316\n        for(int i=1;i<=n;i++)    \n            fa[i]=i;\n        for(int i=1;i<=cnt;i++){\n            //\u627e\u4e0b\u4e00\u6b21\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u7684\u4e24\u4e2a\u70b9\n            if(t<=k){\n                for(int j=i;j<=cnt;j++)\n                    if(!pan(e[j].next,e[j].to)){\n                        ans=e[j].w;\n                        break;    \n                    }    \n                break;\n            }\n            if(!pan(e[i].next,e[i].to)){\n                t--;\n                connect(e[i].next,e[i].to);    \n            }    \n        }\n        printf(\"%.2lf\",ans);\n        return 0;    \n}\n```",
        "postTime": 1515432188,
        "uid": 55964,
        "name": "tang666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4047 \u3010[JSOI2010]\u90e8\u843d\u5212\u5206\u3011"
    },
    {
        "content": "\u9898\u89e3\uff1a\n\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u4e2a\u9898\u7684\u65f6\u5019\uff0c\u521d\u6b65\u731c\u60f3\u53ef\u80fd\u662f\u4e8c\u5206\uff0c\n\n\u6bd5\u7adf\u662f\u6700\u5c0f\u503c\u6700\u5927\uff0c\u4e8e\u662f\u5f00\u59cb\u601d\u8003\u600e\u4e48\u4e8c\u5206\uff0c\n\n\u8003\u8651\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\uff0c\u6211\u4eec\u628a\u8ddd\u79bb\u5c0f\u7684\u70b9\u653e\u4e00\u5806\uff0c\u7ec4\u6210\u4e00\u4e2a\u90e8\u843d\uff0c\u8fd9\u6837\u6700\u5c0f\u503c\u4e00\u5b9a\u662f\u6700\u5927\u7684\uff08\u7a81\u7136\u53d1\u73b0\u53d8\u6210\u4e86\u8d2a\u5fc3\n\n\u90a3\u600e\u4e48\u628a\u8fb9\u6743\u5c0f\u7684\u5148\u8fde\u8d77\u6765\u5462\uff1f\n\u5f88\u7b80\u5355\uff0c\u6700\u5c0f\u751f\u6210\u6811\u5566\n\n\u56e0\u4e3a\u8981\u5206\u6210K\u4e2a\u90e8\u843d\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u7684\u77e5\u9053\uff0c\u628an-k+1\u4e00\u4e2a\u90e8\u843d\u8fde\u8d77\u6765\u80af\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u7136\u540e\u5c31\u53d8\u6210\u6a21\u677f\u9898\u4e86QAQ\n\n~~\u6c42\u7ba1\u7406\u5458\u8ba9\u6211\u53d1\u4e2a\u9898\u89e3~~\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#define N 1006\n#define fo(i) for(int i=1;i<=n;i++)\n#define Fo(j) for(int j=1;j<=n;j++)\nusing namespace std;\nconst int M=2000005;\nint n,k,tot,fa[N];\nstruct NODE{\n\tint x,y;\n}dian[N];\nstruct node{\n\tint x,y;\n\tdouble z;\n\tbool operator <(const node &a){\n\t\treturn this->z <a.z;\n\t}\n}bian[M];\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\ninline double cal(int a,int b){\n\treturn (double)(sqrt((double)((dian[a].x-dian[b].x)*(dian[a].x-dian[b].x))+(double)((dian[a].y-dian[b].y)*(dian[a].y-dian[b].y))));\n}\ninline void init(){\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n\tfo(i) dian[i].x=read(),dian[i].y=read();\n\tfo(i){\n\t\tFo(j){\n\t\t\tif(i<j){\n\t\t\t\t++tot;\n\t\t\t\tbian[tot].x=i;\n\t\t\t\tbian[tot].y=j;\n\t\t\t\tbian[tot].z=cal(i,j); \n\t\t\t}\n\t\t}\n\t}\n\tsort(bian+1,bian+tot+1);\n}\nint find(int x){\n\tif(fa[x]==x) return fa[x];\n\treturn find(fa[x]);\n}\ninline void kruskal(){\n\tint cnt=0;\n\tfor(int i=1;i<=tot;i++){\n\t\tif(fa[find(bian[i].x)]!=fa[find(bian[i].y)]){\n\t\t\tcnt++;\n\t\t\tfa[find(bian[i].x)]=fa[find(bian[i].y)];\n\t\t}\n\t\tif(cnt==n-k+1){\n\t\t\tprintf(\"%.2lf\",bian[i].z);\n\t\t\treturn ;\n\t\t}\n\t}\n}\nint main(){\n\tn=read();k=read();\n\tinit();\n\tkruskal();\n\treturn 0;\n} \n```\n",
        "postTime": 1583823760,
        "uid": 45444,
        "name": "zhn_666",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4047 \u3010[JSOI2010]\u90e8\u843d\u5212\u5206\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u9898\u76ee\u7684\u610f\u601d\u5f88\u7b80\u5355\u7ed9\u4f60\u7ed9\u51fan\u4e2a\u70b9\uff0c\u8ba9\u4f60\u5212\u5206\u6210m\u4e2a\u96c6\u5408\u3002\u73b0\u5728\u95ee\u4f60\u96c6\u5408\u4e4b\n      \u95f4\u6700\u77ed\u8ddd\u79bb\u6700\u5927\u662f\u591a\u5c11\u3002\n\u601d\u8def\uff1a\u601d\u8def\u6240\u6709\u9898\u89e3\u90fd\u662f\u6700\u5c0f\u751f\u6210\u6811\u3002\n      \u53ef\u4ee5\u8003\u8651\u6bcf\u6b21\u5408\u5e76\u4e24\u4e2a\u70b9\uff0c\u6700\u540e\u5269\u4e0b\u7684\u6b63\u597d\u662fm\u4e2a\u96c6\u5408\u561b\u3002\n\u5751\u70b9\uff1a\u4e0d\u662f\u5408\u5e76\u5b8cn-m\u6761\u8fb9\u540e\u7684\u4e00\u6761\u8fb9\uff0c\u800c\u662f\u5408\u5e76\u7b2cn-m+1\u524d\u7684\u8fb9\u3002\u6ce8\u610f\u4ee3\u7801\u7684\u7b2c\n      74\u884c\u3002\n      \n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 1200\n#define MAXP 55\n#define maxnode 50010\n#define sigma_size 26\n#define mod 1000000007\n#define INF 0x3f3f3f3f\n#define lc  (id<<1)\n#define rc  (id<<1|1)\nusing namespace std;\ntypedef long long LL;\n\nint n,m;\nstruct poin\n{\n    int x,y;\n    poin(int x=0,int y=0):x(x),y(y){};\n};\npoin point[MAXN];\nint pre[MAXN];\nstruct Edge\n{\n    int from,to;\n    double dist;\n    Edge(int from=0,int to=0,double dist=0):from(from),to(to),dist(dist){};\n};\nvector<Edge> edges;\n\nvoid init(int n)\n{\n    for(int i=0;i<=n;i++)\n        pre[i]=i;\n}\n\nint Find(int x)\n{\n    return pre[x]==x?x:pre[x]=Find(pre[x]);\n}\n\nbool comp(Edge A,Edge B)\n{\n    return A.dist<B.dist;\n}\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    int u,v,w;\n    init(n);\n    for(int i=0;i<n;i++)\n    {\n       scanf(\"%d %d\",&point[i].x,&point[i].y);\n    }\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            double pp=(point[i].x-point[j].x)*(point[i].x-point[j].x)*1.0+(point[i].y-point[j].y)*(point[i].y-point[j].y)*1.0;\n            pp=sqrt(pp);\n            edges.push_back({i,j,pp});\n        }\n    }\n    sort(edges.begin(),edges.end(),comp);\n    m=n-m;\n    int ans=0;\n    for(int i=0;i<edges.size();i++)\n    {\n        Edge &e=edges[i];\n        int xx=Find(e.from);\n        int yy=Find(e.to);\n        if(xx!=yy)\n        {\n            if(ans==m)\n            {\n                printf(\"%.2lf\\n\",e.dist);\n                break;\n            }\n            pre[xx]=yy;\n            ans++;\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1577939321,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4047 \u3010[JSOI2010]\u90e8\u843d\u5212\u5206\u3011"
    },
    {
        "content": "\u663e\u7136\u6700\u8fd1\u7684\u4e24\u4e2a\u90e8\u843d\u7684\u8ddd\u79bb\u662f\u6709\u5355\u8c03\u6027\u7684 \u56e0\u6b64\u53ef\u4ee5\u4e8c\u5206\n\n\u8003\u8651check \u6211\u4eec\u904d\u5386\u6240\u6709\u70b9 \u5148\u628a<=limit\u7684\u70b9\u8fde\u8d77\u6765 \u8fd9\u6837\u662f\u80af\u5b9a\u53ef\u4ee5\u5212\u5206\u5728\u4e00\u4e2a\u90e8\u843d\u91cc\u7684 \u518d\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e00\u4e0b\n\n\u7136\u540e\u626b\u4e00\u904d \u5982\u679cfather[i]=i \u8bf4\u660e\u5c31\u6709\u4e00\u4e2a\u90e8\u843d\n\n\u6ce8\u610fdouble\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1005\n#define eps 1e-6\nusing namespace std;\ntemplate<class T>\ninline void read(T &x)\n{\n    x=0;\n    static char ch=getchar();\n    while(ch<'0'||ch>'9')   ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n}\nint n,k;\ndouble dis[N][N];\nstruct P\n{\n    double x,y;\n}point[N];\ninline double calc_dis(int i,int j)\n{\n    return sqrt((point[i].x-point[j].x)*(point[i].x-point[j].x)+(point[i].y-point[j].y)*(point[i].y-point[j].y));\n}\nint father[N];\ninline int getfather(int x)\n{\n    if(father[x]==x)    return x;\n    father[x]=getfather(father[x]);\n    return father[x];\n}\ninline bool check(double limit)\n{\n    for(int i=1;i<=n;i++)   father[i]=i;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=i+1;j<=n;j++)\n        {\n            if(dis[i][j]>limit) continue;\n            int fa1=getfather(i),fa2=getfather(j);\n            if(fa1!=fa2)    father[fa1]=fa2;\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++)\n        if(father[i]==i)    ans++;\n    return ans>=k;\n}\nint main()\n{\n    read(n);    read(k);\n    for(int i=1;i<=n;i++) read(point[i].x), read(point[i].y);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            dis[i][j]=calc_dis(i,j); \n    double l=0,r=100000;\n    while(l+eps<=r)\n    {\n        double m=(l+r)/2;\n        if(check(m))    l=m;\n        else r=m;   \n    }\n    cout<<fixed<<setprecision(2)<<l;\n    return 0;\n}\n```",
        "postTime": 1540447971,
        "uid": 60299,
        "name": "Patrickpwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4047 \u3010[JSOI2010]\u90e8\u843d\u5212\u5206\u3011"
    },
    {
        "content": "\u660e\u663e\u7684kruskal\u7684\u88f8\u9898\uff0c\u4ed4\u7ec6\u60f3\u60f3kruskal\u7684\u5b9a\u4e49\uff0c\u6bcf\u4e00\u6b21\u8fde\u8fb9\u662f\u628a\u4e24\u4e2a\u8054\u901a\u5757\u8fde\u5728\u4e00\u8d77\uff0c\u6240\u4ee5\u6bcf\u4e00\u6b21\u8fde\u8fb9\u51cf\u5c11\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u7531\u4e8ekruskal\u7684\u6027\u8d28\u663e\u7136\u518d\u8fde\u4e00\u6b21\u7684\u8fb9\u5c31\u662f\u7b54\u6848\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int  MAXN = 1000 + 5;\nint n,k;\nint x[MAXN],y[MAXN];\nstruct node{\n\tdouble len;\n\tint x,y;\n}len[500000];\ndouble getlen(int x,int y){\n\treturn sqrt(x * x + y * y);\n}\nint fa[MAXN];\nint find(int x){return x == fa[x] ? x : fa[x] = find(fa[x]);}\nbool cmp(node a,node b){return a.len < b.len;}\nint main()\n{\n\tfreopen(\"group.in\",\"r\",stdin);\n\tfreopen(\"group.out\",\"w\",stdout);\n\tscanf(\"%d %d\",&n,&k);\n\tfor(int i = 1; i <= n; ++i){\n\t\tscanf(\"%d %d\",&x[i],&y[i]);\n\t\tfa[i] = i;\n\t}\n\tint cnt = 0;\n\tfor(int i = 1; i <= n; ++i){\n\t\tfor(int j = i + 1; j <= n; ++j){\n\t\t\tlen[++cnt] = (node){getlen(x[i] - x[j],y[i] - y[j]),i,j};\n\t\t}\n\t}\n\tsort(len + 1,len + 1 + cnt,cmp);\n\tint ans = 0,tot = n - k + 1;\n\tfor(int i = 1; i <= cnt; ++i){\n\t\tint  x1 = find(len[i].x),y1 = find(len[i].y);\n\t\tif(x1 == y1)continue;\n\t\ttot --;\n\t\tfa[y1] = x1;\n\t\tif(tot == 0){\n\t\t\tprintf(\"%.2lf\",len[i].len);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\t\n```",
        "postTime": 1534400652,
        "uid": 52576,
        "name": "moye\u5230\u7897\u91cc\u6765",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4047 \u3010[JSOI2010]\u90e8\u843d\u5212\u5206\u3011"
    },
    {
        "content": "### \u67d0\u4f4d\u5de8\u4f6c\uff08NOIP\u590d\u8d5b595\u5206\uff09\u628a\u8fd9\u9053\u9898\u5b9a\u4e49\u4e3a**\u6a21\u677f\u9898**\n ~~\u7a76\u7adf\u662f\u4e8c\u5206\u6a21\u677f\u5462\u8fd8\u662f\u6700\u5c0f\u751f\u6210\u6811\uff08Kruskal\uff09\u6a21\u677f\u5462\uff08\u624b\u52a8\u6ed1\u7a3d\uff09~~\n \n _\u4e5f\u53ef\u89c1\u8fd9\u9053\u9898\u76ee\u7684\u91cd\u8981\u6027_ \uff08\u4f5c\u4e3a\u4e00\u4e2a\u849f\u84bb\uff0c\u6211\u8868\u793a\u5f88\u65e0\u52a9\u554a\uff09\n \n \u597d\u591a\u5de8\u4f6c\u90fd\u5206\u4eab\u4e86\u8fd9\u9053\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u5f53\u7136\u6211\u4e5f\u6ca1\u4ec0\u4e48\u66f4\u597d\u7684\u65b9\u6cd5\uff0c\u65e0\u975e\u5c31\u662f\u4e8c\u5206\u7b54\u6848\u548cKruskal\u3002\u800c\u4e14\u6211\u7684\u505a\u6cd5\u5341\u5206\u4e0d\u51fa\u8272\uff0c\u51e0\u4e4eTLE\u3002\n \n\u6211\u7a76\u7adf\u5e72\u4e86\u4ec0\u4e48\uff1f\uff1f\uff1f\n\n1.\u9012\u5f52\u5feb\u901f\u5e42(\u8ba1\u7b97\u8ddd\u79bb\u65f6\u5e73\u65b9\uff0c\u5f88\u660e\u663e\u8fd9\u4e2a\u4e1c\u897f\u5f88\u50bb\uff0c~~\u4f46\u662f\u6211\u5c31\u662f\u60f3\u5199~~)\n```\nin int kmod(int a,int n)\n{\n\tif(n==0)return 1;\n\tif(n==1)return a;\n\tint c=kmod(a,n/2);\n\tif(n%2==1)return c*c*a;\n\telse return c*c; \n}\n```\n2.\u5feb\u8bfb\uff08\u636e\u8bf4\u4f4d\u8fd0\u7b97\u4f1a\u5feb\u70b9\uff09\n```cpp\nin int read(){\n\tint x=0;bool y=0;char ch;\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-')y=1;\n\t\tch=getchar();}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();}\n\treturn y?-x:x;\n}\n```\n3.\u7ed3\u6784\u4f53\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\uff08\u8fd9\u4e2a\u597d\u50cf\u7528\u7684\u4eba\u5c11\u5206\u4eab\u4e0b\uff0c\u90a3\u4f4d\u5de8\u4f6c\u6559\u7684\uff09\n```\nstruct edge{\n\tdouble len;\n\tint u,v;\n\tedge(double _len=0,int _u=0,int _v=0){\n\tlen=_len;u=_u;v=_v;}\n}e[maxn*maxn<<1];\n```\n```cpp\nstruct node{\n\tint x,y;\n\tnode(int _x=0,int _y=0)\n\t{\n\t\tx=_x;y=_y;\n\t}\n}a[maxn];\n```\n4.\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570\uff08const\u4e0e&\u5e76\u7528\uff0c\u636e\u8bf4\u4f1a\u5feb\uff09\n```cpp\nin bool cmp(const edge &x,const edge &y)\n{\n\treturn x.len<y.len;\n } \n```\n5.\u5185\u8054\u51fd\u6570\uff08\u4f1a\u6709\u5e38\u6570\u4f18\u5316\uff0cemmm\uff0c\u5b8f\u5b9a\u4e49\u4e0bin\uff0c\u65b9\u4fbf\uff0c\u52a0\u5728\u51fd\u6570\u5f00\u5934\uff09\n```cpp\n#define in inline\n```\n6.register\uff08\u7ee7\u7eed\u4f18\u5316\uff09\n```cpp\n#define re rigister\nfor(re int i=1;;i++)\n```\n\u56e0\u4e3a~~NOIP~~\uff08\u5df2\u6b7b\uff09\u662f\u4e0d\u5f00O2\u7684\uff0c\u6240\u4ee5\u672c\u6765\u5f00\u6c27\u6c14\u80fdAC\uff0c\u4e0d\u5f00\u6c27\u6c14\u4f1aTLE\u7684\u7a0b\u5e8f\u5c31\u6709\u4e86\u8fd9\u4e9b\u4e1c\u897f\uff08\u5f88\u8822\uff09\u3002\n\n\u5f88\u660e\u663e\u4ee5\u4e0a\u6709\u4e9b\u505a\u6cd5\u5728\u8fd9\u9053\u9898\u4e2d\u4e0d\u53ef\u53d6\uff0c\u5e0c\u671b\u5927\u5bb6\u614e\u91cd\u91c7\u7528\u3002\n------------\n\u601d\u60f3\u5c31\u662f\u7528\u67d0K\u7b97\u6cd5\u4eceN\u5757\u6784\u9020\u5230\u5230\u53ea\u5269K\u5757\uff0c\u4e0b\u4e00\u6761\u8fb9\u5373\u6c42\u7684\u503c\u3002\n\u7136\u540e\u5206\u4eab\u4e0b\u662f\u591a\u4e48\u777f\uff08ruo\uff09\u667a\u505a\u6cd5\uff08\u6700\u7ec8\u7684AC\u4ee3\u7801\uff09\uff0c\u7adf\u7136\u4f1aTLE\u3002\n```cpp\n#include<iostream>\n#include<cctype>\n#include<cstdio>\n#include<cstring>\n#include<cmath> \n#include<algorithm>\n//#include<bits/stdc++.h>\n//#define ll long long\n#define re register\n#define in inline\n#define maxn 1234\nusing namespace std;\nint f[maxn];//\u5e76\u67e5\u96c6\nint n,m,cnt=0;\nin int kmod(int a,int n)//\u5feb\u901f\u5e42\uff08\u4e0d\u53d6\u6a21\uff09\n{\n\tif(n==0)return 1;\n\tif(n==1)return a;\n\tint c=kmod(a,n/2);\n\tif(n%2==1)return c*c*a;\n\telse return c*c; \n}\nin int read(){//\u5feb\u8bfb\uff1f\uff1f\u4f18\u5316\n\tint x=0;bool y=0;char ch;\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-')y=1;\n\t\tch=getchar();}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();}\n\treturn y?-x:x;\n}\nstruct edge{//\u5305\u542b\u6784\u9020\u51fd\u6570\n\tdouble len;\n\tint u,v;\n\tedge(double _len=0,int _u=0,int _v=0){\n\tlen=_len;u=_u;v=_v;}\n}e[maxn*maxn<<1];\nin bool cmp(const edge &x,const edge &y)//\u6bd4\u8f83\u51fd\u6570\n{\n\treturn x.len<y.len;\n } \nstruct node{\n\tint x,y;\n\tnode(int _x=0,int _y=0)//\u6784\u9020\u51fd\u6570\n\t{\n\t\tx=_x;y=_y;\n\t}\n}a[maxn];\nin double relen(const node &x,const node &y){\n//\u8ba1\u7b97\u8ddd\u79bb\uff08\u6700\u8822\u5feb\u901f\u5e42\u7684\u5b58\u5728\uff09\n\treturn sqrt(kmod((x.x-y.x),2)+kmod((x.y-y.y),2));\n}\nin int getf(int u)//\u5e76\u67e5\u96c6\u8def\u5f84\u538b\u7f29\n{\n\treturn u==f[u]?u:f[u]=getf(f[u]); \n}\nint main()\n{\n\tn=read();m=read();\n\tfor(re int i=1;i<=n;i++)a[i]=node(read(),read());//\u8bfb\u70b9\n\tfor(re int i=1;i<=n;i++)\n\tfor(re int j=1;j<=n;j++)\n\t{\n\t\tif(i==j)continue;\n\t\te[++cnt]=edge(relen(a[i],a[j]),i,j);\n        //\u5efa\u8fb9\uff0c\u5982\u6b64\u7a20\u5bc6\u4ee5\u81f3\u4e8e\u5b8c\u5168\u56feemmm\n        /*\u4e3a\u4ec0\u4e48\u4e0d\u662fi:1\u2014>n;j:i-1\u2014>n\u5462\uff1f\u597d\u50cf\u65e0\u5411\u56fe\u5efa\u6811\u5176\u5b9e\u53ea\u7528\u4e00\u6761\u8fb9\u5c31\u597d\uff0c\u53cd\u6b63\u5efa\u6811\u4e0d\u8ba1\u65b9\u5411\uff0c\u4f46\u662f\u5b83WA\u4e86\u3002*/\n\t}\n\tsort(e+1,e+1+cnt,cmp);//\u5bf9\u8fb9\u6743\u6392\u5e8f\n\tfor(re int i=1;i<=n;i++)f[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\tint nu=0;int i;//\u5f88\u8822\uff0c\u7528nu\u8bb0\u5f55\u6784\u9020\u8def\u5f84\u7684\u6761\u6570\uff0c\u7528i\u81ea\u589e\n\tfor(i=1;;i++)\n\t{\n\t\tint u=e[i].u,v=e[i].v;\n\t\tint fu=getf(u),fv=getf(v);\n\t\tif(fu==fv)continue;f[fu]=fv;\n     //\u5224\u65ad\u8fb9\u7684\u4e24\u7aef\u70b9\u662f\u5426\u8054\u901a\uff0c\u82e5\u8054\u901a\u5c31\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\u4e0d\u8ba1\u6570\u3002\n\t\tif(++nu==n-m+1)break;//\u7ec8\u6b62\u6761\u4ef6\n\t}\n\tprintf(\"%.2lf\",e[i].len);//\u6700\u540e\u8f93\u51fa\u4e00\u4e0b\n\treturn 0; \n}\n```\n\u849f\u84bb\u9898\u89e3\uff0c\u671b\u5927\u4f6c\u6307\u6559\u3002\n\n\n",
        "postTime": 1570182392,
        "uid": 158869,
        "name": "\u76e7\u92c5",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4047 \u3010[JSOI2010]\u90e8\u843d\u5212\u5206\u3011"
    },
    {
        "content": "\u4e00\u904dA\u4e86\u8fd9\u9053\u9898\uff0c\uff0c\uff0c\u8868\u793a\u8fd8\u662f\u5f88\u5f00\u5fc3\u7684\uff0c\n\u8d21\u732e\u4e00\u7bc7\u6ca1\u6709double\u53d8\u91cf\u7684\u9898\u89e3\uff08\u5176\u5b9e\u53ea\u662f\u4e00\u4e2a\u5c0f\u5c0f\u7684\u5361\u5e38\uff09\n\u4f46\u662f\u8fd8\u662f\u6bd4\u8f83\u5feb\uff0c\n\u6df7\u8fdb\u4e86\u7b2c\u4e00\u7248\n\u601d\u8def\u8fd8\u662f\u6bd4\u8f83\u5de7\u5999\uff0c\n\u5c06\u6c42\u6700\u5c0f\u503c\u6700\u5927\u8f6c\u6362\u4e3a\u7528kruskal\u53bb\u6389\u5c0f\u8fb9\uff0c\u6700\u540e\u5c31\u4f1a\u7559\u4e0b\u6700\u4f18\u7684\u8fb9\n\t#include<bits/stdc++.h>\n\tusing namespace std;\n\t#define AC 1000010\n\t#define R register int\n\tstruct abc{\n\t\tint f,w,length;\n\t}way[AC];\n\tint n,k,x[1010],y[1010],now;\n\tint father[1010],tot,cnt;//tot\u4e3a\u5df2\u7ecf\u6d88\u9664\u7684\u5e76\u67e5\u96c6\u4e2a\u6570\uff0c\n\t\n\tbool cmp(abc a,abc b)\n\t{\n\t\treturn a.length<b.length;\n\t}\n\t\n\tinline int find(int x)\n\t{\n\t\tif(father[x]==x)\treturn x;\n\t\telse return father[x]=find(father[x]);\n\t}\n\n\tinline int read()\n\t{\n\t\tint x=0;char c;\n\t\twhile(isspace(c=getchar()));\n\t\twhile(c>='0' && c<='9')x=x*10+c-'0',c=getchar();\n\t\treturn x;\n\t}\n\n\tvoid kruskal()\n\t{\n\t\tint father1,father2;\n\t\tfor(R i=1;i<=cnt;i++)\n\t\t{\n\t\t\tfather1=find(way[i].f),father2=find(way[i].w);\n\t\t\tif(father1!=father2)\n\t\t\t{\n\t\t\t\ttot++;\n\t\t\t\tif(father1<father2)\tfather[father2]=father1;\n\t\t\t\telse father[father1]=father2;\n\t\t\t\tif(n-tot==k)//\u5408\u5e76\u5230k\u4e2a\u96c6\u5408\u5c31\u9000\u51fa \n\t\t\t\t{\n\t\t\t\t\tnow=i+1;//\u641c\u7d22\u7b54\u6848\u4ecenow\u5f00\u59cb\uff0c\u56e0\u4e3a\u4e4b\u524d\u6ca1\u6709\u9009\u7684\u8fb9\u90fd\u662f\u56e0\u4e3a\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u5185\n\t\t\t\t\tbreak;//\u800c\u8fd9\u91cc\u8981\u7edf\u8ba1\u7684\u662f\u4e0d\u540c\u90e8\u843d\u7684\u8ddd\u79bb\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid pre()\n\t{\n\t\tn=read(),k=read();\n\t\tfor(R i=1;i<=n;i++)\tx[i]=read(),y[i]=read(),father[i]=i;\n\t\tfor(R i=1;i<=n;i++)\n\t\tfor(R j=i+1;j<=n;j++)\n\t\t\t{\n\t\t\t\tway[++cnt].f=i,way[cnt].w=j;\n\t\t\t\tway[cnt].length=(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);\n\t\t\t}//\u975e\u771f\u5b9e\u8ddd\u79bb\n\t\tsort(way+1,way+cnt+1,cmp);\n\t}\n\n\tvoid work()\n\t{\n\t\tkruskal();\n\t\tfor(R i=now;i<=cnt;i++)\n\t\t{\n\t\t\tif(find(way[i].f) != find(way[i].w))\n\t\t\t{\n\t\t\t\tprintf(\"%.2f\\n\",sqrt((double)way[i].length));\n\t\t\t\texit(0);\n\t\t\t}\n\t\t}\n\t}\n\n\tint main()\n\t{\n\t\tfreopen(\"in.in\",\"r\",stdin);\n\t\tpre();\n\t\twork();\n\t\tfclose(stdin);\n\t\treturn 0;\n\t}",
        "postTime": 1518166205,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4047 \u3010[JSOI2010]\u90e8\u843d\u5212\u5206\u3011"
    }
]