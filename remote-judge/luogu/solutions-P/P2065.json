[
    {
        "content": "# \u4e00\u9053\u7f51\u7edc\u6d41\u7684\u9898\uff0c\u91cd\u5728\u5efa\u56fe  \n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2065)  \n## \u9898\u76ee\u5206\u6790\n\u9996\u5148\uff0c\u6211\u4eec\u7b80\u5316\u4e00\u4e0b\u9898\u9762\uff1a  \n- \u6709\u4e24\u5806\u6570\u3002 \n\n- \u4e00\u6b21\u53ea\u80fd\u5728\u4e24\u5806\u4e2d\u5206\u522b\u9009\u4e00\u4e2a\u6570\u4e14\u4e0d\u4e92\u8d28\u3002  \n- \u6c42\u6700\u591a\u80fd\u53d6\u51e0\u6b21\u3002  \n- $1 \\le n,m\\le 500$  \n## \u9519\u8bef\u89e3\n\u5176\u5b9e\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u60f3\u5230\u4e86\u7528\u4e8c\u5206\u505a\uff1a  \n1. \u5982\u679c\u4e00\u4e2a\u84dd\u8272\u6570\u5b57\u548c\u4e00\u4e2a\u7ea2\u8272\u6570\u5b57\u4e0d\u4e92\u8d28\uff0c\u6211\u4eec\u5c31\u628a\u5b83\u4eec\u8fde\u8d77\u6765\u3002  \n\n1. \u7136\u540e\u7528\u4e00\u4e2a\u4e8c\u5206\u8dd1\u4e00\u904d\uff0c\u6c42\u51fa\u6700\u5927\u5339\u914d\u3002  \n\n\u4f46\u662f\u5b9e\u9645\u64cd\u4f5c\u4e0a\u662f\u8981T\u6389\u7684\uff0c\u56e0\u4e3a\u4e8c\u5206\u5339\u914d\u6709\u7740 $O(nm)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u52a0\u4e0a\u8fde\u7ebf\u7684\u65f6\u95f4\u662f\u4e00\u5b9a\u4f1aT\u6389\u7684\u3002\n## \u6b63\u89e3\n\u7136\u540e\u554a\uff0c\u6211\u5c31\u60f3\u5230\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\uff1a  \n1. \u56e0\u4e3a\u84dd\u8272\u6570\u5b57\u548c\u7ea2\u8272\u6570\u5b57\u4e92\u8d28\u65f6\u624d\u53ef\u4ee5\u914d\u5bf9\uff0c\u6240\u4ee5\u53ef\u4ee5\u770b\u6210\u84dd\u8272\u7684\u6570\u5b57\u548c\u7ea2\u8272\u7684\u6570\u5b57\u662f\u901a\u8fc7\u5b83\u4eec\u5171\u540c\u7684\u8d28\u56e0\u6570\u8fde\u63a5\u8d77\u6765\u7684\u3002\n\n1. \u7531\u4e8e\u6bcf\u4e00\u5f20\u724c\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u6240\u4ee5\u6bcf\u4e00\u6761\u6d41\u7684\u6d41\u91cf\u90fd\u4e3a1\u3002  \n1. \u6211\u4eec\u628a\u6e90\u70b9\u548c\u6bcf\u4e00\u4e2a\u84dd\u8272\u70b9\u8fde\u8d77\u6765\uff0c\u628a\u6bcf\u4e00\u4e2a\u7ea2\u8272\u70b9\u548c\u6c47\u70b9\u8fde\u8d77\u6765\uff0c\u84dd\u8272\u70b9\u548c\u7ea2\u8272\u70b9\u7531\u4e2d\u95f4\u7684\u8d28\u6570\u70b9\u8fde\u8d77\u6765\u3002  \n1. \u6700\u540e\u8dd1\u4e00\u904d\u7f51\u7edc\u6d41\u5c31\u597d\u4e86\u3002 \n\n\u5176\u4e2d\u5728\u7b97\u8d28\u6570\u70b9\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u7528\u8bd5\u9664\u6cd5\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u8fc7\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0bPollard's Rho\u7b97\u6cd5\u3002             \n\n[Pollard's Rho](https://zhuanlan.zhihu.com/p/267884783)   \n\n~~(\u4e0d\u662f\u6211\u5199\u7684)~~  \n## \u5efa\u56fe\n\u63a5\u4e0b\u6765\uff0c\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u9700\u8981\u89e3\u51b3\uff0c\u5c31\u662f\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u7ed9\u70b9\u6807\u53f7\u5462\uff1f  \n\n\u8fd9\u91cc\u5206\u4eab\u4e00\u79cd\u65b9\u6cd5 \uff1a  \n\n\u56e0\u4e3a\u4e2d\u95f4\u7684\u8d28\u6570\u70b9\u4e2a\u6570\u6211\u4eec\u662f\u4e8b\u5148\u4e0d\u77e5\u9053\u7684\uff0c\u6240\u4ee5\u6807\u53f7\u7ea2\u70b9\u5e94\u8be5\u653e\u5728\u901a\u8fc7\u84dd\u70b9\u7b97\u8d28\u6570\u70b9\u7684\u64cd\u4f5c\u4e4b\u540e\u3002  \n\u7531\u6b64\u53ef\u5f97\uff1a  \n1. \u6e90\u70b9\u4e3a\u201c0\u201d\u53f7\u70b9\uff0c  \n\n1. \u84dd\u70b9\u7f16\u53f7\u4e3a1\u5230 blue\uff0c  \n1. \u8d28\u6570\u70b9\u7f16\u53f7\u4e3a blue \u5230 blue + total\uff0c  \n1. \u7ea2\u70b9\u7f16\u53f7\u4e3a blue + total \u5230 blue + total + red\uff0c  \n1. \u6c47\u70b9\u7f16\u53f7\u4e3a blue + red + total + 1\u3002  \n\n\u4e0b\u9762\u662f\u901a\u8fc7\u6837\u4f8b\u4e2d\u7b2c\u4e00\u4e2a\u6570\u636e\u6240\u5efa\u5f97\u56fe\uff1a\n\n![1](https://cdn.luogu.com.cn/upload/image_hosting/rh9i74mf.png?x-oss-process=image/resize,m_lfit,h_170,w_225)  \n\n## \u4ee3\u7801\n\u6700\u540e\u653e\u4e0aAC\u4ee3\u7801\uff0c\u5e0c\u671b\u53ef\u4ee5\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3\n\nCode:\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nconst int N = 1000010, M = 2000010, INF = 1e9;\n\nlong long head[N], edge[M], next_[M], ver[M], tot;\nint  q[N], d[N], cur[N];\nint n, m, S, T;\nint red, blue, total;\nint p[35500], b[35500]; \n\nint min_(int x, int y){\n\tif(x < y) return x;\n\treturn y;\n}\n\nvoid add(int x, int y, int z){\n\tver[tot] = y, edge[tot] = z, next_[tot] = head[x], head[x] = tot ++;\n\tver[tot] = x, edge[tot] = 0, next_[tot] = head[y], head[y] = tot ++;\n}\n\nvoid divide(int x, int e){\t\t\t\t\t\t\t\t//\u7528\u8bd5\u9664\u6cd5\u627e\u8d28\u6570\u70b9\u5e76\u8fde\u63a5 \n\t\n\tint y = 0;\n\tfor (int o = 2; o <= sqrt(x); o ++){\n\t\tif(x % o == 0) {\n\t\t\tp[++ y] = o;\n\t\t\twhile (x % o == 0) x /= o;\n\t\t}\n\t}\n\tif(x > 1) p[++ y] = x;\n\tfor(int o = 1;o <= y; o ++) {\n\t\tif(b[p[o]] != 0) add(e, b[p[o]] + red + blue, 1);\n\t\telse b[p[o]] = ++ total, add(e, b[p[o]] + red + blue, 1);\n\t}\n\treturn ;\n}\n\nvoid divide_2(int x,int e){\n\tint y = 0;\n\tfor (int o = 2; o <= sqrt(x); o ++){\n\t\tif(x % o == 0) {\n\t\t\tp[++ y] = o;\n\t\t\twhile (x % o == 0) x /= o;\n\t\t}\n\t}\n\tif(x > 1) p[++ y] = x;\n\tfor(int o = 1;o <= y; o ++) {\n\t\tif(b[p[o]] != 0) add(b[p[o]] + red + blue, e, 1);\n\t}\n\treturn ;\n}\n\nbool bfs() {\t\t\t\t\t\t\t\t\t\t\t\t\n\tint hh = 0, tt = 0;\n\tmemset(d, -1, sizeof d);\n\tq[0] = S, d[S] = 0, cur[S] = head[S];\n\twhile (hh <= tt) {\n\t\tint t = q[hh++];\n\t\tfor (int i = head[t]; ~i; i = next_[i]) {\n\t\t\tint ver_ = ver[i];\n\t\t\tif (d[ver_] == -1 && edge[i]) {\n\t\t\t\td[ver_] = d[t] + 1;\n\t\t\t\tcur[ver_] = head[ver_];\t\t\t\t\t\t \n\t\t\t\tif (ver_ == T) return true;\n\t\t\t\tq[++ tt] = ver_;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;   \n}\n\nint find(int u, int limit) {\t\t\t\t\t\t\t\t\t \n\tif(u == T) return limit;\n   \tint flow = 0;\n\tfor (int i = cur[u]; ~i && flow < limit; i = next_[i]) {\n\t\tcur[u] = i;\n\t\tint ver_ = ver[i];\n\t\tif (d[ver_] == d[u] + 1 && edge[i]) {\n\t\t\tint t = find(ver_, min_(edge[i], limit - flow));\n\t\t\tif (!t) d[ver_] = -1;\n\t\t\tedge[i] -= t, edge[i ^ 1] += t, flow += t;\n\t\t}\n\t}\n\treturn flow;\n}\n\nint dinic() {\t\t\t\t\t\t\t\t\t\t\t\t //dinic \u8dd1\u7f51\u7edc\u6d41 \n\tint r = 0, flow;\n\twhile (bfs()) while (flow = find(S, INF)) r += flow;\n\treturn r;\n}\n\nint num;\n\nint main(){\n\tcin >> num;\n\t\n\tfor(int w = num; w > 0; w --){\n\t\ttot = 0;\n\t\tmemset(head, -1, sizeof head);\n\t\tmemset(p, 0, sizeof p);\n\t\tmemset(b, 0, sizeof b);\n\t\ttotal = 0;\n\t\tcin >> blue >> red;\n\t\tfor(int j = 1;j <= blue; j++){\t\t\t\t\t//\u63a5\u70b9 \n\t\t\tadd(0, j, 1);\n\t\t}\n\t\tfor(int j = 1;j <= blue; j++){\n\t\t\tint blue_;\n\t\t\tcin >> blue_;\n\t\t\tdivide(blue_, j);\n\t\t}\n\t\tfor(int i = 1; i <= red; i++){\n\t\t\tint red_;\n\t\t\tcin >> red_;\n\t\t\tdivide_2(red_, i + blue);\n\t\t}\n\t\t\n\t\tfor(int i = 1; i <= red; i++){\n\t\t\tadd(i + blue, red + blue + total + 1, 1);\n\t\t}\n\t\tS = 0;\n\t\tT = blue + red + total + 1;\n\t\tcout << dinic() << endl;\n\t}\n\treturn 0;\n}\n\n```\n## \u540e\u8bb0\n\u8fd9\u9053\u9898\u6211\u6539\u4e86\u597d\u4e45\u624d\u8fc7\uff0c\u600e\u4e48\u4e5f\u6ca1\u6709\u60f3\u5230\u662fhead\u6570\u7ec4\u6ca1\u6709\u521d\u59cb\u5316\u201c-1\u201d\u7684\u539f\u56e0\uff0c\u5e0c\u671b\u5176\u4ed6\u540c\u5b66\u4e0d\u8981\u72af\u540c\u6837\u9519\u8bef\u54e6\uff01",
        "postTime": 1617937665,
        "uid": 211276,
        "name": "\u95f2\u4eba",
        "ccfLevel": 0,
        "title": "\u95f2\u4eba\u306e\u9898\u89e32065"
    },
    {
        "content": "\u6570\u636e\u7ed9\u7684\u8c8c\u4f3c\u5f88\u826f\u5fc3\uff0c\u4f46\u4e8b\u5b9e\u6839\u672c\u4e0d\u662f\u8fd9\u6837\u7684\u3002\u3002\n\n\u6b63\u89e3\u662f\u7f51\u7edc\u6d41\uff0c\u4f46\u6a21\u578b\u5efa\u7684\u4e0d\u5bf9\u53ef\u80fd\u4f1a\u5bfc\u81f4TLE\uff0c\u867d\u7136\u6570\u636e\u89c4\u6a21\u770b\u8d77\u6765\u662f\u80fd\u8fc7\u7684\u3002\n\n\u4ee5\u4e0a\u5c31\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u7f51\u7edc\u6d41\uff0c\u7528\u4e8c\u5206\u56fe\u4e5f\u80fd\u89e3\u51fa\u6765\uff0c\u4f46\u662fn^2\u53bb\u5efa\u8fb9\u662f\u5bfc\u81f4TLE\u7684\u76f4\u63a5\u539f\u56e0\uff0c\u56e0\u6b64\u6211\u4eec\u5c31\u8981\u8003\u8651\u66f4\u6362\u4e00\u79cd\u5efa\u6a21\u65b9\u5f0f\u3002\n\n\u6211\u4eec\u518d\u6765\u8003\u8651\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u4ed6\u4eec\u7684GCD>1\uff0c\u5c31\u610f\u5473\u7740\u4ed6\u4eec\u6709\u81f3\u5c11\u4e00\u4e2a\u5171\u540c\u7684\u8d28\u56e0\u5b50\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u60f3\uff0c\u80fd\u5426\u501f\u52a9\u8fd9\u4e2a\u6027\u8d28\u6765\u5efa\u6a21\u5462?\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u6bcf\u4e00\u4e2a\u6570\u90fd\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u7136\u540e\u5c06\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u8d28\u6570\u90fd\u653e\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u7d27\u63a5\u7740\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u5c06\u5b83\u4e0e\u5176\u6240\u6709\u7684\u56e0\u5b50\u5404\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u5f27(\u5f53\u7136\uff0c\u6570\u5b57\u989c\u8272\u4e0d\u540c\u65f6\u5f27\u7684\u65b9\u5411\u4e5f\u662f\u4e0d\u540c\u7684)\uff0c\u7136\u540e\u8d85\u7ea7\u6e90\u8fde\u5411\u4e00\u79cd\u989c\u8272\uff0c\u8d85\u7ea7\u6c47\u8fde\u5411\u53e6\u5916\u4e00\u79cd\u989c\u8272\uff0c\u6309\u7167\u8fd9\u6837\u7684\u6a21\u578b\u518d\u53bb\u8dd1Dinic\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e86\u3002\n\n\u8be6\u7ec6\u4ee3\u7801\u53ef\u4ee5\u53c2\u89c1\u6211\u7684\u535a\u5ba2[Youngsc](http://youngscc.github.io/2017/10/11/[TJOI2011]%E5%8D%A1%E7%89%87/)\u3002\n\n(\u51cf\u5c11\u4ee3\u7801\u590d\u5236\uff0c\u5171\u521b\u7f8e\u597d\u6d1b\u8c37)\n",
        "postTime": 1507723248,
        "uid": 36282,
        "name": "Youngsc",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2065 \u3010[TJOI2011]\u5361\u7247\u3011"
    },
    {
        "content": "~~\u8fd9\u9898\u6709\u6bd2\u554a\u3002\u3002\u3002~~\n\n\u88f8\u7684\u7f51\u7edc\u6d41\uff0c\u4f46\u662f\u5f53\u4f60\u5199\u5b8c\u4e4b\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u63d0\u4ea4\u53ef\u80fd\u4f1aTLE*3\u3002\u3002\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\n\nn^2\u5efa\u8fb9\u770b\u4f3c\u80fd\u8fc7\uff0c\u4f46\u5b9e\u9645\u4e0d\u7136\uff0c\u603b\u590d\u6742\u5ea6\u6700\u591a\u4e3a\n\nO ( 100 \u00d7 ( 500 \u00d7 500 \u00d7 log500 + 500 \u00d7 500 \u00d7 (\u8fb9\u6570) + (\u5e38\u6570) ) ) ;\n\n\u5927\u6570\u636e\u80af\u5b9aTLE\u554a\u3002\u3002\u3002\n\n\u4e8e\u662f\u60f3\u4f18\u5316\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6570\u5b57\u662f\u4e0d\u8d85\u8fc7 10^7 \u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5c06\u6570\u5b57\u4e0e\u5176\u8d28\u56e0\u6570\u8fde\u8fb9\uff0c\u4ece\u84dd\u5361\u8fde\u5230\u8d28\u56e0\u6570\uff0c\u518d\u8fde\u5230\u7ea2\u5361\uff0c\u6d41\u91cf\u4e3aMAX\u3002\n\n\u518d\u4ece\u6e90\u70b9\u8fde\u5230\u84dd\u5361\uff0c\u7ea2\u5361\u8fde\u5230\u6c47\u70b9\uff0c\u6d41\u91cf\u5747\u4e3a1\uff0c\u5efa\u56fe\u5c31\u5b8c\u6210\u4e86\u3002\n\n\u6ce8\u610f\uff1a\u90fd\u662f\u6709\u5411\u8fb9\uff01\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u8dd1\u7f51\u7edc\u6d41\u4e86\u3002\n\n\u9644\u4ee3\u7801\uff08Dinic\uff09\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define MAXN 100010\n#define MAXM 10000010\n#define MAX 999999999\nusing namespace std;\nint n,m,k=0,s,t,c;\nint x[MAXN],y[MAXN],head[MAXN<<1],deep[MAXN<<1],prime[MAXM];\nbool np[MAXM];\nstruct node{//\u524d\u5411\u661f\u2014\u2014\u7f51\u7edc\u6d41\u5c31\u662f\u8981\u5f00\u5927\u6570\u7ec4\u3002\u3002\u3002\n    int next,to,w;\n}a[MAXM/10+9];\ninline int read(){//\u8bfb\u4f18\n    int date=0,w=1;char c=0;\n    while(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\n    while(c>='0'&&c<='9'){date=date*10+c-'0';c=getchar();}\n    return date*w;\n}\ninline void add(int u,int v,int w){//\u52a0\u8fb9\n    a[c].to=v;a[c].w=w;a[c].next=head[u];head[u]=c++;\n    a[c].to=u;a[c].w=0;a[c].next=head[v];head[v]=c++;//\u6ce8\u610f\uff0c\u53cd\u5411\u8fb9\u6d41\u91cf\u4e00\u5b9a\u4e3a0\n}\nbool bfs(){//\u5206\u5c42\u56fe\n    int u,v;\n    queue<int> q;\n    for(int i=s;i<=t;i++)deep[i]=0;\n    deep[s]=1;\n    q.push(s);\n    while(!q.empty()){\n        u=q.front();\n        q.pop();\n        for(int i=head[u];i;i=a[i].next){\n            v=a[i].to;\n            if(a[i].w&&!deep[v]){\n                deep[v]=deep[u]+1;\n                if(v==t)return true;//\u6709\u589e\u5e7f\u8def\n                q.push(v);\n            }\n        }\n    }\n    return false;//\u6ca1\u6709\u589e\u5e7f\u8def\n}\nint dfs(int x,int limit){//\u8dd1\u589e\u5e7f\u8def\n    if(x==t)return limit;\n    int v,sum,cost=0;\n    for(int i=head[x];i;i=a[i].next){\n        v=a[i].to;\n        if(a[i].w&&deep[v]==deep[x]+1){\n            sum=dfs(v,min(a[i].w,limit-cost));\n            if(sum>0){\n                a[i].w-=sum;\n                a[i^1].w+=sum;\n                cost+=sum;\n                if(cost==limit)break;\n            }\n            else deep[v]=-1;\n        }\n    }\n    return cost;\n}\nint dinic(){//\u6c42\u6700\u5927\u6d41\n    int ans=0;\n    while(bfs())ans+=dfs(s,MAX);\n    return ans;\n}\ninline void linkx(int x,int id){//\u4ece\u84dd\u5361\u8fde\u5230\u8d28\u56e0\u6570\n    for(int i=1;i<=k&&prime[i]<=x;i++){\n        if(x%prime[i]==0){\n            add(id,i+n+m,MAX);\n            t=max(t,i+n+m);//\u6807\u8bb0\u6c47\u70b9\n            while(x%prime[i]==0)x/=prime[i];\n        }\n    }\n}\ninline void linky(int y,int id){//\u4ece\u8d28\u56e0\u6570\u8fde\u5230\u7ea2\u5361\n    for(int i=1;i<=k&&prime[i]<=y;i++){\n        if(y%prime[i]==0){\n            add(i+n+m,id,MAX);\n            t=max(t,i+n+m);//\u6807\u8bb0\u6c47\u70b9\n            while(y%prime[i]==0)y/=prime[i];\n        }\n    }\n}\nvoid work(){//\u8bfb\u5165+\u9884\u5904\u7406+\u5efa\u56fe\n    int u,v,w;\n    n=read();m=read();\n    for(int i=1;i<=n;i++){\n        x[i]=read();\n        linkx(x[i],i);\n    }\n    for(int i=1;i<=m;i++){\n        y[i]=read();\n        linky(y[i],i+n);\n    }\n    s=0;t++;//\u6807\u6e90\u6c47\u70b9\n    for(int i=1;i<=n;i++)add(s,i,1);\n    for(int i=1;i<=m;i++)add(i+n,t,1);\n    printf(\"%d\\n\",dinic());\n}\ninline void init(){//\u6e05\u7a7a\u56fe\n    c=2;//\u8bb0\u5f97\u4e00\u5b9a\u4ece\u5076\u6570\u5f00\u59cb\uff0c\u59820,2\u7b49\n    memset(head,0,sizeof(head));\n}\nvoid make(){//\u7ebf\u6027\u7b5b\u7d20\u6570\n    int x=MAXM-10;\n    np[0]=np[1]=true;\n    for(int i=2;i<=x;i++){\n        if(!np[i])prime[++k]=i;\n        for(int j=1;j<=k&&prime[j]*i<=x;j++){\n            np[prime[j]*i]=true;\n            if(i%prime[j]==0)break;\n        }\n    }\n}\nint main(){//\u4e3b\u51fd\u6570So easy!\n    int cases=read();\n    make();\n    while(cases--){\n        init();\n        work();\n    }\n    return 0;\n}\n\n```",
        "postTime": 1523369570,
        "uid": 49998,
        "name": "\u65af\u5fb7\u54e5\u5c14\u6469",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2065 \u3010[TJOI2011]\u5361\u7247\u3011"
    },
    {
        "content": "\u522b\u770b\u6570\u636e\u8303\u56f4\u5c0f\uff0c\u76f4\u63a5\u8dd1\u5308\u7259\u5229\u4f1a $\\color{blue}\\textsf{TLE}$ \u4e09\u4e2a\u70b9\u3002\u74f6\u9888\u5176\u5b9e\u662f\u5728\u8fde\u8fb9\u4e0a\uff0c$\\mathcal{O}(n^2)$ \u8fde\u8fb9\u663e\u7136\u4e0d\u4f18\u3002\n\n\u6b64\u9898\u6b63\u89e3\u662f**\u7f51\u7edc\u6d41**\u3002\n\n\u9898\u76ee\u8981\u6c42**\u4e0d\u4e92\u8d28**\u7684\u70b9\u90fd\u8981\u8fde\u8fb9\uff0c\u4e0d\u4e92\u8d28\uff0c\u8bc1\u660e\u4e24\u4e2a\u70b9\u5b58\u5728\u4e00\u4e2a\u5171\u540c\u7684\u8d28\u56e0\u6570\u3002\n\n\u90a3\u53ef\u4ee5\u591a\u589e\u52a0\u4e00\u4e2a\u70b9\u90e8\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5bf9\u5176\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u7136\u540e\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u8dd1\u4e00\u8fb9\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u9700\u8981\u5efa\u7acb\u8fd9\u4e9b\u70b9\uff1a\n\n- \u8d85\u7ea7\u6e90\u70b9 $s$\uff0c\u8d85\u7ea7\u6c47\u70b9 $t$\n- \u84dd\u5361\u70b9\n- \u7ea2\u5361\u70b9\n- \u8d28\u56e0\u6570\u70b9\n\n\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qb0p6zyx.png)\n\n\u6574\u4e2a\u56fe\u5efa\u51fa\u6765\u5927\u6982\u5c31\u662f\u8fd9\u6837\u5b50\uff0c\u56fe\u4e11\u8f7b\u55b7\uff08\n\n\u70b9 $1\\sim4$ \u662f\u84dd\u5361\uff0c$5\\sim8$ \u662f\u7ea2\u5361\u3002\n\n\u4e2d\u95f4\u4e24\u4e2a\u70b9\u5c31\u662f\u8d28\u56e0\u6570\uff0c\u6574\u5f20\u56fe\u7684\u6700\u5927\u6d41\u662f $2$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define mst(x) memset(x, 0, sizeof x)\nusing namespace std;\n\nconst int N = 2e6 + 5;\nint red, blue, tot;\nint a[N];\nint maxflow;\nint s, t;\nint flow[N], dep[N];\nstruct edge\n{\n\tint to, nxt;\n}e[N << 1];\nint head[N], idx = 1;\nvoid add(int x, int y, int w)\n{\n\te[ ++ idx] = {y, head[x]}, head[x] = idx, flow[idx] = w;\n\te[ ++ idx] = {x, head[y]}, head[y] = idx, flow[idx] = 0;\n}\nbool bfs()\n{\n\tmemset(dep, 0, sizeof dep);\n\tqueue<int> q;\n\tdep[s] = 1, q.push(s);\n\twhile (!q.empty())\n\t{\n\t\tint u = q.front(); q.pop();\n\t\tfor (int i = head[u]; i; i = e[i].nxt)\n\t\t{\n\t\t\tint v = e[i].to;\n\t\t\tif (flow[i] && !dep[v])\n\t\t\t{\n\t\t\t\tdep[v] = dep[u] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t];\n}\nint dfs(int u, int in)\n{\n\tif (u == t) return in;\n\tint out = 0;\n\tfor (int i = head[u]; i && in; i = e[i].nxt)\n\t{\n\t\tint v = e[i].to;\n\t\tif (flow[i] && dep[v] == dep[u] + 1)\n\t\t{\n\t\t\tint fl = dfs(v, min(flow[i], in));\n\t\t\tflow[i] -= fl, flow[i ^ 1] += fl;\n\t\t\tin -= fl, out += fl;\n\t\t}\n\t}\n\tif (!out) dep[u] = 0;\n\treturn out;\n}\n\nvoid link1(int x, int p)\n{\n\tvector<int> primes;\n\tfor (int i = 2; i * i <= x; i ++ )\n\t\tif (x % i == 0)\n\t\t{\n\t\t\tprimes.emplace_back(i);\n\t\t\twhile (x % i == 0) x /= i;\n\t\t}\n\tif (x > 1) primes.emplace_back(x);\n\tfor (auto d: primes)\n\t{\n\t\tif (!a[d]) a[d] = ++ tot;\n\t\tadd(p, a[d] + blue + red, 1);\n\t}\n}\nvoid link2(int x, int p)\n{\n\tvector<int> primes;\n\tfor (int i = 2; i * i <= x; i ++ )\n\t\tif (x % i == 0)\n\t\t{\n\t\t\tprimes.emplace_back(i);\n\t\t\twhile (x % i == 0) x /= i;\n\t\t}\n\tif (x > 1) primes.emplace_back(x);\n\tfor (auto d: primes)\n\t\tif (a[d]) add(a[d] + blue + red, p, 1);\n}\n\nint main()\n{\n\tint tt;\n\tscanf(\"%d\", &tt);\n\twhile (tt -- )\n\t{\n\t\tmst(head), mst(a), maxflow = tot = 0, idx = 1;\n\t\tscanf(\"%d%d\", &blue, &red);\n\t\tfor (int i = 1; i <= blue; i ++ ) add(0, i, 1);\n\t\tfor (int i = 1, x; i <= blue; i ++ ) scanf(\"%d\", &x), link1(x, i);\n\t\tfor (int i = 1, x; i <= red; i ++ ) scanf(\"%d\", &x), link2(x, i + blue);\n\t\ts = 0, t = 1 + red + blue + tot;\n\t\tfor (int i = 1; i <= red; i ++ ) add(i + blue, t, 1);\n\t\twhile (bfs()) maxflow += dfs(s, 1 << 30);\n\t\tprintf(\"%d\\n\", maxflow);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1659498619,
        "uid": 482728,
        "name": "Engulf",
        "ccfLevel": 0,
        "title": "P2065 [TJOI2011] \u5361\u7247 \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2065)\n\n## \u601d\u8def\u7b80\u8ff0\n+ \u6ce8\u610f\u5230\u62ff\u8d70\u4e00\u7ec4\u5361\u7247\u7684\u8981\u6c42\u662f\uff1a\n1. \u8fd9\u7ec4\u5361\u7247\u989c\u8272\u4e0d\u540c\u3002\n2. \u4e24\u5f20\u5361\u7247\u4e0a\u9762\u7684\u6570\u5b57\u7684\u6700\u5927\u516c\u7ea6\u6570\u5927\u4e8e1\u3002\n+ \u989c\u8272\u4e0d\u540c\u5bb9\u6613\u60f3\u5230\u5361\u7247\u53ef\u4ee5\u53d8\u6210\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\u5177\u4f53\u5730\uff0c\u6839\u636e\u989c\u8272\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u7136\u540e\u6839\u636e\u7b2c\u4e8c\u4e2a\u8981\u6c42 `\u4e24\u5f20\u5361\u7247\u4e0a\u9762\u7684\u6570\u5b57\u7684\u6700\u5927\u516c\u7ea6\u6570\u5927\u4e8e1` **\u66b4\u529b\u5efa\u8fb9**\u3002\n+ \u63a5\u4e0b\u6765\u5c31\u5bb9\u6613\u53d1\u73b0\u662f\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\u4f7f\u7528\u5308\u7259\u5229\u7b97\u6cd5\u3002\n+ \u7136\u540e\u63d0\u4ea4\uff0c\u5f97\u5230 $4$ \u4e2a TLE \u7684\u597d\u6210\u7ee9\u3002\u3002\u3002\n+ \u60f3\u5230\u672c\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(Tnm)$ \u7684\u3002\u800c\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5308\u7259\u5229\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5f80\u5f80\u662f $O(\\texttt{\u53ef\u8fc7})$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651**\u4f18\u5316\u5efa\u8fb9\u7684\u8fc7\u7a0b**\u3002\n+ \u800c\u7b2c\u4e8c\u8981\u6c42\u5176\u5b9e\u4e5f\u7b49\u4ef7\u4e8e **\u4e24\u4e2a\u6570\u80fd\u88ab\u4e00\u4e2a\u4e0d\u4e3a1\u7684\u6b63\u6574\u6570\u6574\u9664**\uff0c\u4e5f\u53ef\u4ee5\u7b49\u4ef7\u4e8e **\u4e24\u4e2a\u6570\u80fd\u88ab\u4e00\u4e2a\u76f8\u540c\u7684\u8d28\u6570\u6574\u9664**\u3002\n+ \u4e8e\u662f\u5efa\u8fb9\u7684\u505a\u6cd5\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u5c06 $r[]$ \u8d28\u56e0\u6570\u5206\u89e3\uff0c\u5e76\u4e14\u6254\u5230\u76f8\u5e94\u7684\u6876\u91cc\u3002\u518d\u5c06 $b[]$ \u8d28\u56e0\u6570\u5206\u89e3\uff0c\u5728\u76f8\u5e94\u7684\u6876\u91cc\u8fde\u8fb9\u3002\u5efa\u56fe\u53ef\u4ee5\u4f7f\u7528 set \u66ff\u4ee3 vector \u907f\u514d\u91cd\u590d\u5efa\u8fb9\u3002\n+ \u663e\u7136\u6211\u4eec\u5f00 $10^7$ \u7ea7\u522b\u4e2a\u6570\u7684 vector \u4f1a MLE, \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 map \u6765\u5f00 vector \uff0c\u5373 ```map<int, vector<int> >```\u3002\n\n## \u4e11\u964b\u7684\u4ee3\u7801\n\u7801\u91cf\u5176\u5b9e\u5f88\u5c0f\u3002\n\n[click here](https://www.luogu.com.cn/paste/xuvkh0a4)",
        "postTime": 1652607382,
        "uid": 312306,
        "name": "LJ07",
        "ccfLevel": 0,
        "title": "[Solution]P2065 [TJOI2011]\u5361\u7247"
    },
    {
        "content": "[P2065 [TJOI2011]\u5361\u7247](https://www.luogu.com.cn/problem/P2065)\n\n\u7f51\u7edc\u6d41\u597d\u9898\uff0c\u770b\u7740\u6570\u636e\u5f88\u5c0f\uff0c\u5b9e\u9645\u4e0a\u975e\u5e38\u5751\u3002\n\n\u5361\u7247\u5206\u4e3a\u84dd\u8272\u548c\u7ea2\u8272\uff0c\u8003\u8651\u5c06\u4e24\u4e2a\u53ef\u4ee5\u4e00\u8d77\u53d6\u7684\u5361\u7247\u8fde\u8d77\u6765\uff0c\u518d\u5c06\u6e90\u70b9\u548c\u6c47\u70b9\u5206\u522b\u4e0e\u5b83\u4eec\u8fde\u8d77\u6765\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $ O(n ^ 2 ) $\uff0c\u4ea4\u4e0a\u53bb\uff0c$ TLE \\  70 \\  pts $\uff0c\u6ca1\u529e\u6cd5\u53ea\u80fd\u53e6\u5916\u60f3\u529e\u6cd5\u3002\n\n\u63a5\u7740\u6211\u4eec\u8003\u8651\u5c06\u6bcf\u4e2a\u6570\u8fdb\u884c\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5c06\u6bcf\u4e2a\u6570\u5206\u522b\u4e0e\u4ed6\u4eec\u7684\u8d28\u56e0\u6570\u8fde\u8d77\u6765\uff0c\u8fb9\u6743\u4e3a $ \\infty $\u3002\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fdb\u884c\u8fd9\u6837\u7684\u8f6c\u6362\u5462\uff1f\u9898\u76ee\u8981\u6c42\u4e24\u4e2a\u6570\u4e0d\u4e92\u8d28\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u6570\u6709\u516c\u5171\u56e0\u5b50\u5c31\u5f53\u7136\u4e0d\u4e92\u8d28\u4e86\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u8fd9\u6837\u8f6c\u5316\u3002\u6700\u540e\u5c06\u6e90\u70b9\u4e0e\u84dd\u5361\u76f8\u8fde\uff0c\u7ea2\u5361\u4e0e\u6c47\u70b9\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a $ 1 $ \u8dd1\u6700\u5927\u6d41\u5373\u53ef\uff0c\u8fde\u8fb9\u5982\u4e0b\u56fe\u3002\u5176\u5b9e\u53ea\u9700\u8981\u8fd9\u5f20\u56fe\u5c31\u80fd\u591f\u505a\u8fd9\u9053\u9898\uff0c\u6b64\u56fe\u4ee5\u6837\u4f8b\u4e00\u4e3a\u4f8b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cif8ncnx.png)\n\n\u63a5\u4e0b\u6765\u8bb2\u4e00\u4e0b\u4ee3\u7801\u5b9e\u73b0\u3002\n\n\u7531\u4e8e\u6bcf\u5f20\u5361\u7247\u7684\u6570\u503c\u6700\u5927\u4e3a $ 10 ^ 7 $\uff0c\u6211\u4eec\u4e5f\u4e0d\u77e5\u9053\u6700\u5927\u7684\u8d28\u6570\u662f\u591a\u5c11\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u5c06\u6240\u6709\u7684\u8d28\u6570\u7b5b\u51fa\u6765\u3002\n\n\u63a5\u7740\u5bf9\u6bcf\u5f20\u5361\u7247\u4e0a\u7684\u6570\u503c\u8fdb\u884c\u56e0\u5f0f\u5206\u89e3\uff0c\u7136\u540e\u627e\u51fa\u6700\u5927\u7684\uff0c\u67e5\u627e\u5b83\u662f\u7b2c\u51e0\u5927\u7684\uff0c\u4e2d\u95f4\u4e00\u5217\u5c31\u4f1a\u6709\u591a\u5c11\u4e2a\u70b9\uff0c\u5177\u4f53\u4f53\u73b0\u4e3a rk \u6570\u7ec4\uff0c$ T $ \u7684\u8ba1\u7b97\u4e0a\u3002\n\u518d\u8fdb\u884c\u8fde\u8fb9\u5373\u53ef\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6837\u4f8b\u4e00\u7684\u8d28\u56e0\u6570\u4e3a $ 2 $\u3001$ 3 $ \u548c $ 5 $\uff0c\u6240\u4ee5\u4e2d\u95f4\u4e00\u5217\u5c31\u6709\u4e09\u4e2a\u70b9\u3002\n\n\u4e0d\u61c2\u7684\u89c1\u4ee3\u7801\uff0c\u6216\u79c1\u4fe1\u6211\u3002\n\nCode\n\n```cpp\n# include <bits/stdc++.h>\nusing namespace std;\n\nint TT;\nconst int Siz = 500 + 5;\nconst int N = 1e6 + 1;\nconst int M = 1e6 + 1;\nconst int Rk = 1e7 + 5;\nconst int inf = 1e9;\n\nint n , m , ans;\nint gcd(int a , int b) {\n\treturn a % b == 0 ? b : gcd(b , a % b);\n}\ntypedef struct {\n\tint x , y , z , next;\n}Node;\nNode edge[M];\nint E , elast[N];\nint S , T;\n\nvoid add(int x , int y , int z) {\n\tE ++ , edge[E].x = x , edge[E].y = y , edge[E].z = z , edge[E].next = elast[x] , elast[x] = E;\n}\n\nvector<int> Kikyo[Siz] , Elodie[Siz];\nint maxv = -1;\nvoid decompose_Kikyo(int x , int n) {\n\tfor (int i = 2 ; i * i <= n ; i ++) {\n\t\tif (n % i == 0) {\n\t\t\tKikyo[x].push_back(i) , maxv = max(maxv , i);\n\t\t\twhile (n % i == 0) n /= i;\n\t\t}\n\t}\n\tif (n > 1) Kikyo[x].push_back(n) , maxv = max(maxv , n);\n}\n\nvoid decompose_Elodie(int x , int n) {\n\tfor (int i = 2 ; i * i <= n ; i ++) {\n\t\tif (n % i == 0) {\n\t\t\tElodie[x].push_back(i) , maxv = max(maxv , i);\n\t\t\twhile (n % i == 0) n /= i;\n\t\t}\n\t}\n\tif (n > 1) Elodie[x].push_back(n) , maxv = max(maxv , n);\n}\n\nint primes[N] , tot = 0 , rk[Rk];\nbool st[Rk];\nvoid init(int n) {\n\tfor (int i = 2 ; i <= n ; i ++) {\n        if (!st[i]) primes[++ tot] = i;\n        for (int j = 1 ; i * primes[j] <= n ; j ++) {\n            st[i * primes[j]] = true;\n            if (i % primes[j] == 0) break;\n        }\n    }\n\tfor (int i = 1 ; i <= tot ; i ++) {\n\t\trk[primes[i]] = i;\n\t}\n}\n\nvoid build() {\n\tfor (int i = 1 ; i <= m ; i ++) {\n\t\tadd(S , i , 1) , add(i , S , 0);\n\t\tfor (int j = 0 ; j < Kikyo[i].size() ; j ++) {\n\t\t\tint x = Kikyo[i][j];\n\t\t\tadd(i , m + rk[x] , inf) , add(m + rk[x] , i , 0);\n\t\t}\n    }\n    for (int i = 1 ; i <= n ; i ++) {\n    \tadd(m + tot + i , T , 1) , add(T , m + tot + i , 0);\n    \tfor (int j = 0 ; j < Elodie[i].size() ; j ++) {\n    \t\tint x = Elodie[i][j];\n    \t\tadd(m + rk[x] , m + tot + i , inf) , add(m + tot + i , m + rk[x] , 0);\n\t\t}\n\t}\n}\n\nint dis[N] , cnt[N];\nvoid bfs(int start) {\n    queue<int> q;\n    q.push(start);\n    dis[start] = 0;\n    cnt[S] = 1;\n    while (!q.empty()) {\n        int cur = q.front();\n        q.pop();\n        for (int i = elast[cur] ; i ; i = edge[i].next) {\n            int v = edge[i].y;\n            if (dis[v] != -1) continue;\n            dis[v] = dis[cur] + 1;\n            q.push(v);\n            cnt[dis[v]] ++;\n        }\n    }\n}\nint cur[N];\nint dfs(int u , int flow) {\n    if (u == T) return flow;\n    int delta = 0;\n    for (int i = cur[u] ; i ; i = edge[i].next) {\n        cur[u] = i;\n        int v = edge[i].y;\n        if (edge[i].z > 0 && dis[u] == dis[v] + 1) {\n            int temp = dfs(v , min(flow - delta , edge[i].z));\n            edge[i].z -= temp;\n            edge[i ^ 1].z += temp;\n            delta += temp;\n            if (delta == flow) return delta;\n        }\n    }\n    if (dis[S] >= T + 1) return delta;\n    cur[u] = elast[u];\n    if (-- cnt[dis[u]] == 0) dis[S] = T + 1;\n    cnt[++ dis[u]] ++;\n    return delta;\n}\nint Isap() {\n    int ans = 0;\n    memset(cnt , 0 , sizeof cnt);\n    memset(dis , -1 , sizeof dis);\n    bfs(T);\n    for (int i = 0 ; i <= T ; i ++) {\n        cur[i] = elast[i];\n    }\n    while (dis[S] < T + 1) ans += dfs(S , inf);\n    return ans;\n}\n\nint main() {\n\tcin >> TT;\n\tinit(10000000);\n\twhile (TT --) {\n\t    memset(elast , 0 , sizeof elast);\n\t    E = 1;\n\t    maxv = -1;\n\t    scanf(\"%d%d\" , &m , &n);\n\t    for (int i = 1 ; i <= m ; i ++) Kikyo[i].clear();\n\t    for (int i = 1 ; i <= n ; i ++) Elodie[i].clear();\n    \tfor (register int i = 1 ; i <= m ; i ++) {\n    \t\tint x;\n\t\t\tscanf(\"%d\" , &x);\n    \t\tdecompose_Kikyo(i , x);\n    \t}\t\n    \tfor (register int i = 1 ; i <= n ; i ++) {\n    \t\tint x;\n    \t\tscanf(\"%d\" , &x);\n    \t\tdecompose_Elodie(i , x);\n\t\t}\n \t\tS = 0 , T = m + n + rk[maxv] + 1 , tot = rk[maxv];\n\t\tbuild();\n\t\tprintf(\"%d\\n\" , Isap());\n\t}\n}\n```",
        "postTime": 1629904227,
        "uid": 335477,
        "name": "ker_xyxyxyx_xxs",
        "ccfLevel": 0,
        "title": "P2065 [TJOI2011]\u5361\u7247"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2065)\n\n### \u4e00\u9053\u5f88\u5999\u7684\u7f51\u7edc\u6d41\u5efa\u56fe\u9898\n\n> \u7f51\u7edc\u6d41\u4ee3\u7801\u53ea\u6709\u666e\u53ca\u96be\u5ea6\uff0c\u771f\u6b63\u91cd\u8981\u7684\u5730\u65b9\u5728\u4e8e\u5efa\u56fe\u2014\u2014\u9c81\u8fc5\n\n## Description\n\n> \u7ed9\u4f60\u4e24\u7ec4\u5361\u7247\uff0c\u5361\u7247\u6709\u6743\u503c\uff0c\u53ea\u6709\u4e24\u79cd\u989c\u8272\u4e0d\u540c\u5361\u7247\u7684\u6700\u5927\u516c\u7ea6\u6570\u5927\u4e8e $1$ \u65f6\u624d\u53ef\u4ee5\u5339\u914d\uff0c\u95ee\u6700\u591a\u80fd\u5339\u914d\u591a\u5c11\u5bf9\u3002 $T$ \u7ec4\u6570\u636e\u3002\n\n## Solution\n\n\u7528\u7f51\u7edc\u6d41\u6765\u505a\u5e94\u8be5\u6bd4\u8f83\u597d\u60f3\u3002\n\n\u4e00\u79cd\u6734\u7d20\u7684\u505a\u6cd5\u662f\uff1a\n\n- \u6e90\u70b9\u8fde\u5411\u6240\u6709\u7684\u7ea2\u8272\u5361\u7247\uff0c\u6240\u6709\u84dd\u8272\u5361\u7247\u8fde\u5411\u6c47\u70b9\uff0c\u6d41\u91cf\u4e3a $1$\u3002\u8868\u793a\u6240\u6709\u7684\u5361\u7247\u90fd\u80fd\u9009\u4e00\u6b21\u3002\n- $O(nm)$ \u904d\u5386\u6240\u6709\u5361\u7247\u5bf9\uff0c\u6c42\u51fa\u4ed6\u4eec\u7684 $\\text{gcd}$ \u5224\u65ad\uff0c\u66b4\u529b\u8fde\u8fb9\u3002\n\n\u8dd1\u4e00\u4e2a\u6700\u5927\u6d41\u5c31\u597d\u4e86\u3002\n\n\u53ea\u80fd\u62ff $70 \\texttt{pts}$ ~~\u6570\u636e\u8fd8\u662f\u6c34~~\u3002\n\n\u53d1\u73b0\u4e0a\u9762\u7684\u5c40\u9650\u5728\u4e8e\u5efa\u56fe\u6240\u7528\u7684\u65f6\u95f4\u662f $O(nm)$\uff0c\u8fd8\u8981\u52a0\u4e0a\u6c42 $\\gcd$ \u7684\u8017\u65f6\u3002\n\n\u8003\u8651\u5230 $\\text{gcd}$ \u548c\u8d28\u56e0\u6570\u6709\u5173\uff0c\u8003\u8651\u5bf9\u6bcf\u4e2a\u5361\u7247\u8fdb\u884c\u5206\u89e3\u8d28\u56e0\u6570\u3002\n\n\u8ba9\u6bcf\u4e2a\u7ea2\u8272\u5361\u7247\u8fde\u5411\u5b83\u4eec\u7684\u6240\u6709\u8d28\u56e0\u6570\uff0c\u8ba9\u6bcf\u4e2a\u84dd\u8272\u5361\u7247\u7684\u6240\u6709\u8d28\u56e0\u6570\u8fde\u5411\u5b83\u4eec\u81ea\u5df1\u3002\n\n\u8fde\u8fb9\u65b9\u5f0f\uff1a\u6e90\u70b9 $\\to$ \u7ea2\u8272\u5361\u7247 $\\to$ \u8d28\u56e0\u6570 $\\to$ \u84dd\u8272\u5361\u7247 $\\to$ \u6c47\u70b9\u3002\n\n~~\u6240\u4ee5\u6839\u672c\u5c31\u4e0d\u7528 ISAP\u3002~~\n\n### Tips/Trick\n\n- \u8d28\u56e0\u6570\u8981\u7b5b\u5230 $10^7$\uff0c\u4e0d\u8981\u8d2a\u56fe\u590d\u6742\u5ea6\u7b5b\u5230 $\\sqrt{10^7}$\u3002\u5982\u679c\u6709\u4e24\u4e2a\u5927\u8d28\u6570\u4f60\u5c31\u6302\u4e86\uff1b\n- \u6e90\u70b9\u548c\u6c47\u70b9\u7684\u9009\u62e9\u4e0d\u8981\u4e0e\u4e2d\u95f4\u70b9\u91cd\u590d\uff1b\n- \u591a\u6d4b\u8981\u6e05\u7a7a\uff08\u663e\u7136\u8fd9\u9053\u9898\u53ea\u9700\u8981\u6e05\u7a7a ```head``` \u6570\u7ec4\u548c\u8bb0\u5f55\u8fb9\u6570\u7684\u53d8\u91cf\u3002\n\n\u5269\u4e0b\u7684\u770b\u4ee3\u7801\u5427\u3002\n\n## Code\n\n```cpp\n/*\nWork by: Suzt_ilymics\nProblem: P2065 [TJOI2011]\u5361\u7247\nKnowledge: \u7f51\u7edc\u6d41Dinic\u5f27\u4f18\u5316 \nTime: O(\u80fd\u8fc7)\n*/\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#define LL long long\n#define orz cout<<\"lkp AK IOI!\"<<endl\n\nusing namespace std;\nconst int MAXN = 2e6+5;\nconst int INF = 1e9+7;\nconst int mod = 1e9+7;\n\nstruct edge{\n    int to, w, nxt;\n}e[MAXN << 1];\nint head[MAXN], num_edge = 1;\n\nint T, n, m, s, t;\nint a[MAXN], b[MAXN], tmp[MAXN], Cnt = 0;\nint dis[MAXN], cur[MAXN];\nbool vis[10000030];\n\nint read(){\n    int s = 0, f = 0;\n    char ch = getchar();\n    while(!isdigit(ch))  f |= (ch == '-'), ch = getchar();\n    while(isdigit(ch)) s = (s << 1) + (s << 3) + ch - '0' , ch = getchar();\n    return f ? -s : s;\n}\n\nint Gcd(int x, int y) { return y ? Gcd(y, x % y) : x; }\nvoid add_edge(int from, int to, int w) { e[++num_edge] = (edge){to, w, head[from]}, head[from] = num_edge; }\n\nbool bfs() {\n    memset(dis, -1, sizeof dis);\n    queue<int> q;\n    q.push(s), dis[s] = 0, cur[s] = head[s];\n    while(!q.empty()) {\n        int u = q.front(); q.pop();\n        for(int i = head[u]; i; i = e[i].nxt) {\n            int v = e[i].to;\n            if(e[i].w && dis[v] == -1) {\n                dis[v] = dis[u] + 1;\n                cur[v] = head[v];\n                q.push(v);\n                if(v == t) return true;\n            }\n        }\n    }\n    return false;\n}\n\nint dfs(int u, int limit) {\n    if(u == t) return limit;\n    int flow = 0;\n    for(int i = cur[u]; i && flow < limit; i = e[i].nxt) {\n        cur[u] = i; int v = e[i].to;\n        if(e[i].w && dis[v] == dis[u] + 1) {\n            int f = dfs(v, min(e[i].w, limit - flow));\n            if(!f) dis[v] = INF;\n            e[i].w -= f, e[i ^ 1].w += f;\n            flow += f; \n        }\n    }\n    return flow;\n}\n\nint Dinic() {\n    int maxflow = 0, flow = 0;\n    while(bfs()) while(flow = dfs(s, INF)) maxflow += flow;\n    return maxflow;\n} \n\nvoid clear() {\n    for(int i = 1; i <= t; ++i) head[i] = 0; \n    num_edge = 1;\n}\n\nvoid Init(int limit) {\n    for(int i = 2; i <= limit; ++i) {\n        if(!vis[i]) tmp[++ Cnt] = i;\n        for(int j = 1; j <= Cnt && i * tmp[j] <= limit; ++j) {\n            vis[i * tmp[j]] = true;\n            if(i % tmp[j] == 0) break; \n        }\n    }\n//    cout<<Cnt<<endl;\n}\n\nint main()\n{\n    Init(10000000);\n    T = read();\n    while(T--) {\n        n = read(), m = read();\n        s = Cnt + n + m + 1, t = s + 1;\n        for(int i = 1; i <= n; ++i) a[i] = read(), add_edge(s, i, 1), add_edge(i, s, 0);\n        for(int i = 1; i <= m; ++i) b[i] = read(), add_edge(i + n, t, 1), add_edge(t, i + n, 0);\n        for(int i = 1; i <= n; ++i) {\n            for(int j = 1; j <= Cnt && a[i] != 1; ++j) {\n                if(a[i] % tmp[j] == 0) {\n                    add_edge(i, j + n + m, 1), add_edge(j + n + m, i, 0);\n                    while(a[i] % tmp[j] == 0) a[i] /= tmp[j];\n                }\n            }\n        }\n        for(int i = 1; i <= m; ++i) {\n            for(int j = 1; j <= Cnt && b[i] != 1; ++j) {\n                if(b[i] % tmp[j] == 0) {\n                    add_edge(j + n + m, n + i, 1), add_edge(n + i, j + n + m, 0);\n                    while(b[i] % tmp[j] == 0) b[i] /= tmp[j];\n                }\n            }\n        }\n        printf(\"%d\\n\", Dinic());\n        clear();\n    }\n    return 0;\n}\n```",
        "postTime": 1619339358,
        "uid": 230580,
        "name": "Suzt_ilymtics",
        "ccfLevel": 6,
        "title": "P2065 [TJOI2011]\u5361\u7247 \u9898\u89e3"
    },
    {
        "content": "\u770b\u5927\u5bb6\u5efa\u56fe\u65f6\u4e2d\u95f4\u90fd\u8fde\u4e86\u8d28\u6570\u70b9\uff0c\u53d1\u4e00\u4e2a\u4e0d\u7528\u8d28\u6570\u70b9\u7684\u89e3\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u4ece\u6e90\u70b9\u5411\u6bcf\u4e00\u4e2a\u84dd\u8272\u5361\u7247\u5bf9\u5e94\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u518d\u4ece\u6bcf\u4e00\u4e2a\u7ea2\u8272\u5361\u7247\u5bf9\u5e94\u7684\u70b9\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u5982\u679c\u4e24\u5f20\u5361\u7247\u53ef\u4ee5\u4e00\u8d77\u62ff\u8d70\uff0c\u90a3\u5c31\u5728\u5b83\u4eec\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff08\u84dd\u8272\u8fde\u5230\u7ea2\u8272\uff09\uff0c\u8fd9\u4e9b\u8fb9\u7684\u6700\u5927\u6d41\u91cf\u90fd\u662f $1$\u3002\u5efa\u597d\u56fe\u4ee5\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528 Dinic \u6c42\u51fa\u7b54\u6848\u3002\n\n\u4f46\u662f\u91cd\u70b9\u4e0d\u5728\u8fd9\u91cc\uff0c\u5982\u679c\u4f60\u76f4\u63a5\u679a\u4e3e $i$ \u548c $j$ \u7136\u540e\u5224\u65ad $\\gcd(b_i,r_j)$ \u662f\u5426\u5927\u4e8e $1$\uff0c\u4f60\u53ea\u80fd\u62ff\u5230 `70pts`\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u7528\u7ebf\u6027\u7b5b\u6c42\u51fa\u6bcf\u4e00\u4e2a\u6570\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u548c\u8fd9\u4e2a\u6570\u9664\u53bb\u8fd9\u4e2a\u6700\u5c0f\u8d28\u56e0\u5b50\u7684\u51e0\u6b21\u65b9\u4ee5\u540e\u5bf9\u5e94\u7684\u6570\u3002\n\n\u5177\u4f53\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 $pr[i]$ \u8868\u793a $i$ \u8fd9\u4e2a\u6570\u9664\u53bb\u5b83\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u7684\u51e0\u6b21\u65b9\u4ee5\u540e\u5bf9\u5e94\u7684\u6570\uff0c\u6211\u4eec\u7528 $d[i]$ \u8868\u793a $i$ \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u3002\n\n\u5982\u679c $d[i]=d[i/d[i]]$\uff0c\u6211\u4eec\u5c31\u4ee4 $pr[i]=pr[i/d[i]]$\uff0c\u5426\u5219 $pr[i]=i/d[i]$\u3002\n\n\u63a5\u4e0b\u6765\u5982\u679c\u6211\u4eec\u8981\u5224\u65ad\u4e24\u4e2a\u6570 $x$ \u548c $y$ \u662f\u5426\u6709\u516c\u5171\u7684\u8d28\u56e0\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5224\u65ad $d[x]$ \u662f\u5426\u6574\u9664 $y$\uff0c\u7136\u540e\u518d\u4ee4 $x=pr[x]$\uff0c\u56de\u5230\u521a\u521a\u7684\u64cd\u4f5c\uff0c\u91cd\u590d\u76f4\u5230 $x=1$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;++i)\nusing namespace std;\ninline int read(){\n\tint x=0;char ch=getchar();\n\twhile(!isdigit(ch))ch=getchar();\n\twhile(isdigit(ch))x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn x;\n}\nint T,n,m,s,t,l,r,cnt,tot,ans,a[502],b[502],d[1003],q[1003],p[664581],d1[10000002],pr[10000002];\nint vr[502000],ed[502000],nx[502000],now[1003],hd[1003];\ninline void add(int x,int y,int z){\n\tvr[++tot]=y,ed[tot]=z,nx[tot]=hd[x],hd[x]=tot;\n\tvr[++tot]=x,ed[tot]=0,nx[tot]=hd[y],hd[y]=tot;\n}\nbool bfs(){\n\tmemset(d,0,sizeof(d));\n\td[s]=1,now[s]=hd[s];\n\tl=r=1,q[1]=s;\n\twhile(l<=r){\n\t\tint x=q[l++];\n\t\tfor(int i=hd[x],y;i;i=nx[i])if(ed[i]&&!d[y=vr[i]]){\n\t\t\td[y]=d[x]+1,now[y]=hd[y];\n\t\t\tif(y==t)return 1;\n\t\t\tq[++r]=y;\n\t\t}\n\t}\n\treturn 0;\n}\nint dinic(int x,int flow){\n\tif(x==t)return flow;\n\tint rest=flow,num,i,y;\n\tfor(i=now[x];i;i=nx[i])if(ed[i]&&d[y=vr[i]]==d[x]+1){\n\t\tnum=dinic(y,min(rest,ed[i]));\n\t\tif(num){\n\t\t\ted[i]-=num,ed[i^1]+=num;\n\t\t\trest-=num;\n\t\t\tif(!rest)break;\n\t\t}else d[y]=0;\n\t}\n\tnow[x]=i;\n\treturn flow-rest;\n}\ninline bool check(int x,int y){\n\twhile(x!=1){\n\t\tif(y%d1[x]==0)return 1;\n\t\tx=pr[x];\n\t}\n\treturn 0;\n}\nsigned main(){\n\trep(i,2,10000000){\n\t\tif(!d1[i])d1[i]=i,p[++cnt]=i;\n\t\tpr[i]=d1[i]==d1[i/d1[i]]?pr[i/d1[i]]:i/d1[i];\n\t\trep(j,1,cnt){\n\t\t\tif(p[j]>d1[i]||p[j]>10000000/i)break;\n\t\t\td1[p[j]*i]=p[j];\n\t\t}\n\t}\n\tT=read();\n\twhile(T--){\n\t\tn=read(),m=read();\n\t\ts=0,t=n+m+1;\n\t\ttot=1;\n\t\tmemset(hd,0,sizeof(hd));\n\t\trep(i,1,n)a[i]=read();\n\t\trep(i,1,m)b[i]=read(),add(i+n,t,1);\n\t\trep(i,1,n){\n\t\t\tbool fl=0;\n\t\t\trep(j,1,m)if(check(a[i],b[j]))add(i,j+n,1),fl=1;\n\t\t\tif(fl)add(0,i,1);\n\t\t}\n\t\tans=0;\n\t\twhile(bfs())ans+=dinic(0,0x7fffffff);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1661483794,
        "uid": 329857,
        "name": "zifanwang",
        "ccfLevel": 7,
        "title": "P2065 [TJOI2011] \u5361\u7247 \u9898\u89e3"
    },
    {
        "content": "\u5199\u4e86\u534a\u4e2a\u4e2d\u5348 + \u534a\u4e2a\u665a\u4e0a\u3002\u3002\u3002\n\n\u8fd9\u9898\u4e00\u773c\u770b\u4e0a\u53bb\u662f\u4e2a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u628a\u84dd\u8272\u5361\u7247\u770b\u4f5c\u5de6\u8fb9\u7684\u70b9\uff0c\u628a\u7ea2\u8272\u5361\u7247\u770b\u4f5c\u53f3\u8fb9\u7684\u70b9\uff0c\u7136\u540e\u66b4\u529b\u627e\u4e24\u8fb9\u5199\u7740\u6574\u6570\u7684 $\\gcd$ \u4e0d\u4e3a $1$ \u7684\u70b9\u5bf9\u5efa\u8fb9\uff0c\u5199\u4e2a\u5308\u7259\u5229\u7b97\u6cd5\u8dd1\u4e00\u904d\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u5c31\u53ef\u4ee5\u62ff\u5230 70 pts \u7684\u597d\u6210\u7ee9\u3002\n\n\u6b64\u65f6\u4f60\u53ef\u80fd\u975e\u5e38\u81ea\u95ed\uff0c\u56e0\u4e3a TLE \u7684\u4e09\u4e2a\u70b9\u65f6\u95f4\u5206\u522b\u662f 1.14s\uff0c1.15s\uff0c1.16s\u3002\u4f60\u53ef\u80fd\u5c1d\u8bd5\u5361\u5e38\uff0c\u4f46\u6700\u7ec8\u53d1\u73b0\u662f\u5f92\u52b3\u3002\n\n\u4f60\u53ef\u80fd\u60f3\u8d77\u8001\u5e08\u66fe\u7ecf\u8bf4\u8fc7\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u53ef\u4ee5\u901a\u8fc7 dinic \u8dd1\u6700\u5927\u6d41\u6c42\u5f97\uff0c\u590d\u6742\u5ea6\u5c06\u964d\u81f3 $n \\sqrt{e}$\u3002\u5177\u4f53\u7684\uff0c\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9 $s$\uff0c\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9 $t$\uff0c\u5c06 $s$ \u548c\u5de6\u90e8\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u5c06\u53f3\u90e8\u70b9\u548c $t$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\u6b64\u65f6\u4ece $s$ \u5230 $t$ \u7684\u6700\u5927\u6d41\u5c31\u662f\u8be5\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u3002\u6b64\u65f6\u4f60\u4f9d\u65e7\u53ef\u4ee5\u62ff\u5230 70 pts \u7684\u597d\u6210\u7ee9\u3002\n\n\u4f60\u4f1a\u53d1\u73b0 TLE \u7684\u4e09\u4e2a\u70b9\u65f6\u95f4\u90fd\u662f 1.20s\uff0c\u53ef\u80fd\u81ea\u95ed\u5730\u6000\u7591\u81ea\u5df1\u662f\u5426\u5b66\u4e86\u4e00\u4e2a\u5047\u7684 dinic\uff08\uff1f\n\n\u7136\u800c\u4f60\u4ed4\u7ec6\u5206\u6790\uff0c\u53d1\u73b0\u95ee\u9898\u5e76\u4e0d\u5728 dinic \u4e0a\uff0c\u800c\u5728\u5efa\u56fe\u4e0a\u3002\u5177\u4f53\u7684\uff0c\u7531\u4e8e\u6211\u4eec\u5efa\u56fe\u9700\u8981\u679a\u4e3e\u5de6\u90e8\u3001\u53f3\u90e8\u70b9\uff0c\u518d\u6c42\u4e00\u904d $\\gcd$\uff0c\u590d\u6742\u5ea6\u76f4\u63a5\u98d9\u5230\u4e86 $O(nm \\log{a_i})$\uff0c\u518d\u52a0\u4e2a\u591a\u6d4b\u4e0d T \u98de\u5c31\u602a\u4e86\u3002\n\n\u6240\u4ee5\u8003\u8651\u4f18\u5316\u5efa\u56fe\uff0c\u4ece\u9898\u76ee\u6027\u8d28\u51fa\u53d1\u3002\u4e24\u4e2a\u6570\u6700\u5927\u516c\u7ea6\u6570\u5927\u4e8e $1$\uff0c\u5c31\u662f\u8bf4\u4e24\u4e2a\u6570\u81f3\u5c11\u6709\u4e00\u4e2a\u516c\u5171\u8d28\u56e0\u6570\u3002\u8003\u8651\u62c6\u8fb9\uff0c\u5f15\u5165\u5173\u952e\u70b9\u8868\u793a\u4e24\u6570\u7684\u516c\u5171\u8d28\u56e0\u6570\uff0c\u628a\u539f\u6765\u4ece\u5de6\u90e8\u70b9\u8fde\u5411\u53f3\u90e8\u70b9\u7684\u8fb9\u62c6\u4e3a\u4e24\u6761\uff1a\u4ece\u5de6\u90e8\u70b9 $i$ \u8fde\u5411\u8868\u793a $a_i,a_j$ \u516c\u5171\u8d28\u56e0\u5b50\u7684**\u4e2d\u90e8\u5173\u952e\u70b9**\u7684\u8fb9\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e2d\u8f6c\uff09\uff0c\u4ece\u5173\u952e\u70b9\u8fde\u5411\u53f3\u90e8\u70b9 $j$ \u7684\u8fb9\u3002\u6211\u4eec\u5728\u679a\u4e3e\u5de6\u90e8\u70b9\u3001\u53f3\u90e8\u70b9\u65f6\uff0c\u53ea\u9700\u5404\u8003\u8651\u4e24\u8005\u5176\u4e00\u3002\u5177\u4f53\u7684\uff0c\u5148\u6c42\u51fa\u5de6\u90e8\u70b9\u3001\u53f3\u90e8\u70b9\u7684\u6240\u6709\u6570\u7684\u8d28\u56e0\u6570\uff0c\u5c06\u5176\u79bb\u6563\u5316\u3002\u7136\u540e\u5bf9\u4e8e $i \\in [1,n]$\uff0c\u5bf9\u4e8e $a_i$ \u7684\u6bcf\u4e00\u4e2a\u8d28\u56e0\u5b50 $j$\uff0c\u4ee4\u8868\u793a $i$ \u7684\u70b9\u7684\u7f16\u53f7\u4e3a $x$\uff0c\u8868\u793a $j$ \u7684\u70b9\u7684\u7f16\u53f7\u4e3a $y$\uff0c\u8fde\u4e00\u6761 $x \\to y$\uff0c\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\u5bf9\u4e8e\u53f3\u90e8\u70b9\uff0c\u540c\u7406\uff0c\u53ea\u4e0d\u8fc7\u5efa\u8fb9\u7684\u987a\u5e8f\u8981\u53cd\u8fc7\u6765\u3002\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u8bc1 $\\forall i\\in[1,n],j \\in [1,m] \\text{ s.t. }\\gcd(a_i,a_j)>1,i,j$ \u90fd\u662f\u8054\u901a\u7684\uff0c\u5373\u4ece $i$ \u53ef\u4ee5\u901a\u8fc7\u4e2d\u90e8\u7684\u5173\u952e\u70b9\u201c\u4e2d\u8f6c\u201d\u540e\u5230\u8fbe $j$\uff0c\u8fd9\u548c\u6211\u4eec\u4e00\u5f00\u59cb\u66b4\u529b\u5efa\u8fb9\u662f\u7b49\u6548\u7684\uff0c\u5e76\u4e14\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u7f29\u5c0f\u4e86\u4e00\u4e2a\u91cf\u7ea7\u3002\u6b64\u65f6\u5efa\u8fb9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n \\sqrt{a_i} \\log v),v$ \u8868\u793a\u8d28\u56e0\u5b50\u7684\u603b\u4e2a\u6570\uff0c\u662f\u4e25\u683c\u4f18\u4e8e\u66b4\u529b\u7684\u3002\u7136\u540e\u518d\u8dd1\u4e00\u904d $s \\to t$ \u7684\u6700\u5927\u6d41\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u3002\n\n\u6b64\u65f6\u6211\u4eec\u5efa\u7684\u56fe\u5927\u6982\u662f\u8fd9\u4e2a\u5f62\u6001\u7684\uff0c\u4e2d\u95f4\u7684\u9ed1\u70b9\u8868\u793a\u5173\u952e\u70b9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1cxpfhjb.png)\n\n\u4ee3\u7801\u7a0d\u5fae\u957f\u4e86\u4e00\u70b9\uff0c\u4e00\u767e\u4e8c\u5341\u884c\u3002\n\n### Code\uff1a\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\nint T, n, m, s, t, p=1, ans, cnt, a[505], b[505], h[2010], dep[2010], pri[2010], id[2010];\nint gcd(int x, int y){\n\tif (!y) return x;\n\treturn gcd(y, x%y);\n}\nstruct node{\n\tint x, y, z, next;\n}d[500010];\nvoid add(int x, int y, int z){\n\td[++p].y = y, d[p].z = z, d[p].next = h[x], h[x] = p;\n}\nint bfs(){\n\tqueue <int> q;\n\tmemset(dep, 0, sizeof(dep));\n\tdep[s] = 1;\n\tq.push(s);\n\twhile (!q.empty()){\n\t\tint x = q.front(); q.pop();\n\t\tfor (int i=h[x]; i; i=d[i].next){\n\t\t\tint y = d[i].y;\n\t\t\tif (d[i].z && !dep[y]){\n\t\t\t\tdep[y] = dep[x] + 1;\n\t\t\t\tq.push(y);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t];\n}\nint dfs(int x, int flow){\n\tif (x == t) return flow;\n\tint out = 0;\n\tfor (int i=h[x]; i; i=d[i].next){\n\t\tint y = d[i].y;\n\t\tif (dep[y] == dep[x] + 1 && d[i].z){\n\t\t\tint now = dfs(y, min(flow, d[i].z));\n\t\t\td[i].z -= now, d[i^1].z += now;\n\t\t\tout += now, flow -= now;\n\t\t}\n\t}\n\tif (!out) dep[x] = 0;\n\treturn out;\n}\nmap <int, int> mp;\nmap <int, int> :: iterator p2;\nint main(){\n\tscanf (\"%d\", &T);\n\twhile (T --){\n\t\tmp.clear();\n\t\tans = 0;\n\t\tcnt = p = 1;\n\t\tmemset(h, 0, sizeof(h));\n\t\tscanf (\"%d%d\", &n, &m);\n\t\tfor (int i=1; i<=n; i++){\n\t\t\tscanf (\"%d\", &a[i]);\n\t\t\tint tmp = a[i];\n\t\t\tfor (int j=2; j<=sqrt(a[i]); j++){\n\t\t\t\twhile (tmp % j == 0){\n\t\t\t\t\ttmp /= j, mp[j] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tmp > 1) mp[tmp] = 1;\n\t\t}\n\t\tfor (int i=1; i<=m; i++){\n\t\t\tscanf (\"%d\", &b[i]);\n\t\t\tint tmp = b[i];\n\t\t\tfor (int j=2; j<=sqrt(b[i]); j++){\n\t\t\t\twhile (tmp % j == 0){\n\t\t\t\t\ttmp /= j, mp[j] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tmp > 1) mp[tmp] = 1;\n\t\t}\n\t\tfor (p2=mp.begin(); p2!=mp.end(); p2++){\n\t\t\tmp[p2->first] = ++cnt;\n\t\t}\n\t\tfor (int i=1; i<=n; i++){\n\t\t\tint tmp = a[i];\n\t\t\tfor (int j=2; j<=sqrt(a[i]); j++){\n\t\t\t\tif (tmp % j == 0){\n\t\t\t\t\tif (mp[j]) add(i, n+m+mp[j], 1);\n\t\t\t\t\tif (mp[j]) add(n+m+mp[j], i, 0);\n\t\t\t\t}\n\t\t\t\twhile (tmp % j == 0) tmp /= j;\n\t\t\t}\n\t\t\tif (tmp){\n\t\t\t\tif (mp[tmp]) add(i, n+m+mp[tmp], 1);\n\t\t\t\tif (mp[tmp]) add(n+m+mp[tmp], i, 0);\t\n\t\t\t}\n\t\t}\n\t\tfor (int i=1; i<=m; i++){\n\t\t\tint tmp = b[i];\n\t\t\tfor (int j=2; j<=sqrt(b[i]); j++){\n\t\t\t\tif (tmp % j == 0){\n\t\t\t\t\tif (mp[j]) add(n+m+mp[j], n+i, 1);\n\t\t\t\t\tif (mp[j]) add(n+i, n+m+mp[j], 0);\n\t\t\t\t}\n\t\t\t\twhile (tmp % j == 0) tmp /= j;\n\t\t\t}\n\t\t\tif (tmp){\n\t\t\t\tif (mp[tmp]) add(n+m+mp[tmp], n+i, 1);\n\t\t\t\tif (mp[tmp]) add(n+i, n+m+mp[tmp], 0);\n\t\t\t}\n\t\t}\n\t\tfor (int i=1; i<=n; i++){\n\t\t\tadd(0, i, 1);\n\t\t\tadd(i, 0, 0);\n\t\t}\n\t\tfor (int i=1; i<=m; i++){\n\t\t\tadd(n+i, n+m+1, 1);\n\t\t\tadd(n+m+1, n+i, 0);\n\t\t}\n\t\ts = 0, t = n + m + 1;\n\t\twhile (bfs()){\n\t\t\tans += dfs(s, 1e9);\n\t\t}\n\t\tprintf (\"%d\\n\", ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1660307579,
        "uid": 399286,
        "name": "\u82cf\u8054\u5c0f\u6e23",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3] P2065 [TJOI2011] \u5361\u7247"
    },
    {
        "content": "# P2065 [TJOI2011]\u5361\u7247\n\n[P2065 [TJOI2011]\u5361\u7247](https://www.luogu.com.cn/problem/P2065)\n\n## \u5206\u6790\n\n\u8fd9\u9053\u9898\u663e\u7136\u53ef\u4ee5\u7528\u6700\u5927\u6d41\u6765\u505a\uff0c\u5c06\u7ea2\u8272\u5361\u7247\u653e\u5728\u4e00\u8fb9\uff0c\u84dd\u8272\u5361\u7247\u653e\u5728\u53e6\u4e00\u8fb9\uff0c\u4ece\u6e90\u70b9 $s$ \u5411\u6bcf\u4e2a\u7ea2\u8272\u5361\u7247\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u4ece\u6bcf\u4e2a\u84dd\u8272\u5361\u7247\u5411\u6c47\u70b9 $t$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u5e76\u628a\u6240\u6709\u516c\u7ea6\u6570\u4e0d\u4e3a $1$ \u7684\u5f02\u8272\u5361\u7247\u7528\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\u8fde\u8d77\u6765\uff0c\u518d\u4ece\u6e90\u70b9\u5411\u6c47\u70b9\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u3002\u8fd9\u9053\u9898\u770b\u4f3c\u53ef\u4ee5\u8fd9\u6837\u7b80\u5355\u5730\u5efa\u56fe\uff0c\u4f46\u662f\u8fd9\u6837\u5176\u5b9e\u4f1a $\\color{purple}{TLE}$ \uff0c\u53ea\u6709 $70$ \u5206\u3002\u5206\u6790\u4e00\u4e0b\uff0c\u6211\u4eec\u603b\u5171\u6709 $n\\times m$ \u6761\u8fb9\uff0c\u6bcf\u4e00\u6b21\u90fd\u8981\u8dd1\u4e00\u8fb9\u6700\u5927\u516c\u7ea6\u6570\uff0c\u8fd9\u4e9b\u6570\u6700\u5927\u662f $1000000$ \uff0c\u5f88\u5bb9\u6613\u88ab\u5361\u6389\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u5efa\u8fb9\u65b9\u6cd5\u3002\n\n![1](https://cdn.luogu.com.cn/upload/image_hosting/hv4womq2.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u6211\u4eec\u4e4b\u524d\u7684\u65b9\u6cd5\u9700\u8981 $n\\times m$ \u6761\u8fb9\uff0c\u5982\u679c\u80fd\u627e\u5230\u4e00\u79cd $n+m$ \u6b21\u7684\u5efa\u8fb9\u5c31\u53ef\u4ee5\u4e86\u3002\u5efa\u8fb9\u7684\u6807\u51c6\u662f\u4e24\u4e2a\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u4e0d\u4e3a $1$ \uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a\u6570\u5b58\u5728\u540c\u6837\u7684\u8d28\u56e0\u6570\u3002\u8fd9 $n+m$ \u4e2a\u6570\u4e2d\u5bf9\u4e8e\u5f02\u8272\u7684\u5361\u7247\uff0c\u6240\u6709\u6709\u8d28\u56e0\u6570 $2$ \u7684\u6570\u90fd\u76f8\u4e92\u5339\u914d\uff0c\u6709\u8d28\u56e0\u6570 $3$ \u7684\u6570\u90fd\u53ef\u4ee5\u76f8\u4e92\u5339\u914d\uff0c\u7b49\u7b49\u3002\u5982\u679c\u6211\u4eec\u628a\u6709\u8d28\u56e0\u6570 $2$ \u7684\u8fde\u5728\u4e00\u4e2a\u70b9\u4e0a\uff0c\u6709\u8d28\u56e0\u6570 $3$ \u7684\u8fde\u5728\u4e00\u4e2a\u70b9\u4e0a\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u53ea\u9700\u8981 $n+m$ \u6b21\u5206\u89e3\u8d28\u56e0\u6570\u5373\u53ef\u3002\u5176\u4e2d\u7ea2\u8272\u5361\u7247\u4e0e\u8d28\u56e0\u6570\u70b9\u7684\u8fb9\u7531\u7ea2\u8272\u5361\u7247\u6307\u5411\u8d28\u56e0\u6570\u70b9\uff0c\u84dd\u8272\u5361\u7247\u4e0e\u8d28\u56e0\u6570\u70b9\u7684\u8fb9\u7531\u8d28\u56e0\u6570\u70b9\u6307\u5411\u84dd\u8272\u5361\u7247\uff0c\u518d\u8fde\u63a5\u6e90\u6c47\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u56fe\uff1a\n\n![2](https://cdn.luogu.com.cn/upload/image_hosting/pmbt5mfu.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n## code\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cmath>\nusing namespace std;\nint N,n1,n2,q=0,p=1,s1,s2,t[10001],t0[10001],f[10001],g[10001],d[10000001];\nbool u=true;\nstruct str\n{\n    int m,q,r;\n}a[1000001];\nint gcd(int a,int b)\n{\n    if(b==0) return a;\n    return gcd(b,a%b);\n}\nvoid road(int x,int y,int r)\n{\n    a[++p].m=y;\n    a[p].q=t[x];\n    t[x]=p;\n    a[p].r=r;\n}\nvoid bfs()\n{\n    queue<int> Q;\n    Q.push(s2);\n    f[s2]=1;\n    g[1]=1;\n    while(!Q.empty())\n    {\n        int k=Q.front();\n        Q.pop();\n        for(int i=t[k];i!=0;i=a[i].q)\n        {\n            if(f[a[i].m]==0)\n            {\n                f[a[i].m]=f[k]+1;\n                ++g[f[a[i].m]];\n                Q.push(a[i].m);\n            }\n        }\n    }\n}\nint dfs(int x,int r)\n{\n    if(x==s2) return r;\n    int s=0;\n    for(int i=t0[x];i!=0;i=a[i].q)\n    {\n        t0[x]=i;\n        if(f[x]==f[a[i].m]+1&&a[i].r!=0)\n        {\n            int z=dfs(a[i].m,min(r,a[i].r));\n            if(z!=0)\n            {\n                a[i].r-=z;\n                a[i^1].r+=z;\n                r-=z;\n                s+=z;\n            }\n            if(r==0) return s;\n        }\n    }\n    --g[f[x]];\n    if(g[f[x]]==0) u=false;\n    ++f[x];\n    ++g[f[x]];\n    return s;\n}\nvoid ss1(int k,int x)\n{\n    for(int i=2;i<=sqrt(x)&&x!=1;++i)\n    {\n        if(x%i==0)\n        {\n            if(d[i]==0) d[i]=++q;\n            road(k,n1+n2+d[i],1);\n            road(n1+n2+d[i],k,0);\n        }\n        while(x%i==0) x/=i;\n    }\n    if(x>1)\n    {\n        if(d[x]==0) d[x]=++q;\n        road(k,n1+n2+d[x],1);\n        road(n1+n2+d[x],k,0);\n    }\n}\nvoid ss2(int k,int x)\n{\n    for(int i=2;i<=sqrt(x)&&x!=1;++i)\n    {\n        if(x%i==0)\n        {\n            if(d[i]==0) d[i]=++q;\n            road(n1+n2+d[i],k,1);\n            road(k,n1+n2+d[i],0);\n        }\n        while(x%i==0) x/=i;\n    }\n    if(x>1)\n    {\n        if(d[x]==0) d[x]=++q;\n        road(n1+n2+d[x],k,1);\n        road(k,n1+n2+d[x],0);\n    }\n}\nvoid abc()\n{\n    scanf(\"%d%d\",&n1,&n2);\n    p=1;\n    for(int i=1;i<=N;++i) f[i]=g[i]=t[i]=0;\n    u=true;\n    for(int i=1;i<=n1;++i)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        ss1(i,x);\n    }\n    for(int i=1;i<=n2;++i)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        ss2(n1+i,x);\n    }\n    N=n1+n2+q+2;\n    s1=N-1;\n    s2=N;\n    for(int i=1;i<=n1;++i)\n    {\n        road(s1,i,1);\n        road(i,s1,0);\n    }\n    for(int i=1;i<=n2;++i)\n    {\n        road(n1+i,s2,1);\n        road(s2,n1+i,0);\n    }\n    bfs();\n    int r=0;\n    while(u==true)\n    {\n        for(int i=1;i<=N;++i) t0[i]=t[i];\n        r+=dfs(s1,1e18);\n    }\n    printf(\"%d\\n\",r);\n    return;\n}\nint main()\n{\n    int T;\n    scanf(\"%d\",&T);\n    while(T--) abc();\n    return 0;\n}\n```",
        "postTime": 1646717120,
        "uid": 291248,
        "name": "\u8d75\u60a6\u5c91",
        "ccfLevel": 7,
        "title": "P2065 [TJOI2011]\u5361\u7247"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u4e8c\u5206\u56fe\u4e0a\u7684\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u6743\u503c\u3002\u5982\u679c\u4e00\u4e2a\u5de6\u90e8\u70b9\u7684\u6743\u503c\u548c\u4e00\u4e2a\u53f3\u90e8\u70b9\u7684\u6743\u503c\u7684 $\\gcd$ \u5927\u4e8e $1$\uff0c\u5219\u8fd9\u4e24\u70b9\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\u3002\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\n\n## \u89e3\u6790\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u66b4\u529b\u5efa\u8fb9\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5efa $n^2$ \u6761\u8fb9\uff0c\u5728 $100$ \u7ec4\u6570\u636e\u7684\u60c5\u51b5\u4e0b\uff0c\u975e\u5e38\u5bb9\u6613 TLE\u3002\n\n\u6211\u4eec\u8003\u8651\u4f18\u5316\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5de6\u90e8\u70b9\u7684\u6743\u503c\u548c\u4e00\u4e2a\u53f3\u90e8\u70b9\u7684\u6743\u503c\u7684 $\\gcd$ \u5927\u4e8e $1$ \u8fd9\u4e2a\u6761\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fd9\u4e24\u4e2a\u70b9\u6709\u4e00\u4e2a\u5171\u540c\u7684\u56e0\u5b50\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u8fdb\u884c\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u7136\u540e\u5bf9\u4e8e\u5de6\u90e8\u70b9\uff0c\u4ee4\u8fd9\u4e2a\u70b9\u8fde\u5411\u56e0\u5b50\uff1b\u5bf9\u4e8e\u53f3\u90e8\u70b9\uff0c\u4ee4\u56e0\u5b50\u8fde\u5411\u8fd9\u4e2a\u70b9\u3002\u6700\u540e\u5efa\u51fa\u8fde\u5411\u6240\u6709\u5de6\u90e8\u8fb9\u7684\u8d85\u7ea7\u6e90\u70b9\u548c\u6240\u6709\u53f3\u90e8\u8fb9\u8fde\u5411\u7684\u8d85\u7ea7\u6c47\u70b9\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u4e00\u6761\u8fb9\u5c31\u53d8\u6210\u4e86\u8d85\u7ea7\u539f\u70b9\u5230\u5de6\u90e8\u70b9\u5230\u5171\u540c\u56e0\u5b50\u5230\u53f3\u90e8\u70b9\u518d\u5230\u8d85\u7ea7\u6c47\u70b9\u3002\u7531\u4e8e $\\log_210^7<24$\uff0c\u56e0\u6b64\u6bcf\u4e2a\u70b9\u8fde\u7684\u8fb9\u5c31\u4ece\u53ef\u80fd\u6700\u591a\u7684 $500$ \u53d8\u6210\u4e86\u4e00\u4e2a\u4e0d\u5927\u4e8e $24$ \u7684\u6570\uff0c\u6211\u4eec\u5c31\u6210\u529f\u505a\u5230\u4e86\u4f18\u5316\uff0c\u63a5\u7740\u53ea\u9700\u8981\u8dd1\u4e00\u904d\u7f51\u7edc\u6d41\u5c31\u53ef\u4ee5\u4e86\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nint t,m,n;\nmap<int,int> ma;//\u5f00\u4e2a map \u8bb0\u5f55\u8d28\u56e0\u6570\u4ee3\u8868\u7684\u70b9\nstruct edge{\n\tint to,nxt,w;\n}e[N<<3];\nint head[N],cnt=1;\ninline void add(int u,int v,int w){\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u];\n\te[cnt].w=w;\n\thead[u]=cnt;\n}\nint tot,ans;\n//\u4ee5\u4e0b\u4e3a Dinic\nint dep[N];\ninline bool bfs(){\n\tmemset(dep,0,sizeof(dep));\n\tqueue<int> q;q.push(1);dep[1]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].to;\n\t\t\tif(e[i].w&&(!dep[v])){\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\tif(dep[2]) return true;\n\treturn false;\n}\ninline int dfs(int u,int in){\n\tif(u==2) return in;\n\tint out=0;\n\tfor(int i=head[u];i&&in;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(e[i].w&&dep[v]==dep[u]+1){\n\t\t\tint tmp=dfs(v,min(in,e[i].w));\n\t\t\te[i].w-=tmp;e[i^1].w+=tmp;\n\t\t\tin-=tmp;\n\t\t\tout+=tmp;\n\t\t}\n\t}\n\tif(!out) dep[u]=0;\n\treturn out;\n}\n//\u4ee5\u4e0a\u4e3a Dinic\nsigned main(){\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d%d\",&m,&n);ans=0;\n\t\ttot=n+m+2;cnt=1;memset(head,0,sizeof(head));ma.clear();\n\t\tfor(int i=3,x;i<=m+2;i++){\n\t\t\tadd(1,i,1);add(i,1,0);//\u8d85\u7ea7\u6e90\u70b9\n\t\t\tscanf(\"%d\",&x);\n\t\t\tfor(int j=2;j<=x;j++){//\u5206\u89e3\u8d28\u56e0\u6570\n\t\t\t\tif(x%j==0){\n\t\t\t\t\tif(!ma[j]){\n\t\t\t\t\t\ttot++;\n\t\t\t\t\t\tadd(i,tot,1);add(tot,i,0);\n\t\t\t\t\t\tma[j]=tot;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tadd(i,ma[j],1);add(ma[j],i,0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=m+3,x;i<=m+2+n;i++){\n\t\t\tadd(2,i,0);add(i,2,1);//\u8d85\u7ea7\u6c47\u70b9\n\t\t\tscanf(\"%d\",&x);\n\t\t\tfor(int j=2;j<=x;j++){//\u5206\u89e3\u8d28\u56e0\u6570\n\t\t\t\tif(x%j==0){\n\t\t\t\t\tif(!ma[j]){\n\t\t\t\t\t\ttot++;\n\t\t\t\t\t\tadd(i,tot,0);add(tot,i,1);\n\t\t\t\t\t\tma[j]=tot;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tadd(i,ma[j],0);add(ma[j],i,1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twhile(bfs()){\n\t\t\tans+=dfs(1,1e9);\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1615120464,
        "uid": 195229,
        "name": "water_tomato",
        "ccfLevel": 7,
        "title": "P2065 [TJOI2011]\u5361\u7247 \u9898\u89e3"
    },
    {
        "content": "\u7528\u5308\u7259\u5229\u7b97\u6cd5\u6c34\u8fc7\u4e86~~\u5b9e\u9645\u4e0a\u662f\u6211\u4e0d\u4f1a\u7f51\u7edc\u6d41~~\n\n\u5f88\u5bb9\u6613\u770b\u51fa\u6765\u53ef\u4ee5\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u4f46\u662f\u542c\u8bf4\u4f1aTLE\n\n\u6240\u4ee5\u5c31\u628a\u7b2c\u4e00\u7ec4\u7684\u6bcf\u4e00\u4e2a\u6570\u8d28\u56e0\u6570\u5206\u89e3\u4e00\u4e0b\uff0c\n\u7528\u4e34\u63a5\u8868\u628a\u8d28\u56e0\u6570\u5bf9\u5e94\u7684\u8282\u70b9\u53f7\u5b58\u8d77\u6765\uff0c\n\u518d\u628a\u53e6\u4e00\u7ec4\u8d28\u56e0\u6570\u5206\u89e3\uff0c\n\u5c06\u6bcf\u4e2a\u6570\u5bf9\u5e94\u7684\u6bcf\u4e2a\u8d28\u56e0\u6570\u6240\u5bf9\u5e94\u7684\u7b2c\u4e00\u7ec4\u6570\u7684\u70b9\u548c\u5b83\u8fde\u8d77\u6765\n\u5c31\u53ef\u4ee5\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\u4e86\n\n\uff08\u8d28\u56e0\u6570\u5206\u89e3\u53ef\u4ee5x^0.5\u5206\u89e3\u51fa\u6765\uff0c\u4f46\u662f\u6211\u592a\u849f\u4e86\uff0c\u4ece2~x\u679a\u4e3e\u4e86\u4e00\u904d\uff09\n\n\u672c\u6765\u60f3\u9a97\u70b9\u90e8\u5206\u5206\u7684\uff0c\u7136\u540e\u5c31\u8c1c\u4e00\u6837\u5730AC\u4e86\u3002\u3002\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<bitset>\n#include<cmath>\nusing namespace std;\nint t,m,n,num,prime[100010],pnum,h1[100010],n1,head[100010],mat[100010];\nstruct Node{\n\tint to,next;\n} p[10000010];\nstruct NODE{\n\tint to,next;\n} e[10000010];\ninline void add1(int x,int y)\n{\n\tp[++n1].to=y;\n\tp[n1].next=h1[x];\n\th1[x]=n1;\n}\ninline void add(int x,int y)\n{\n\te[++num].to=y;\n\te[num].next=head[x];\n\thead[x]=num;\n}\nbitset<1000010> not_prime;\nbitset<100010> used;\ninline void Get_Prime()\n{\n\tnot_prime[1]=1;\n\tfor(int i=2;i<=1000010;i++)\n\t{\n\t\tif(!not_prime[i]) prime[++pnum]=i;\n\t\tfor(int j=1;j<=pnum&&i*prime[j]<=1000010;j++)\n\t\t{\n\t\t\tnot_prime[i*prime[j]]=1;\n\t\t\tif(i%prime[j]==0) break;\n\t\t}\n\t}\n}\ninline bool find(int x)\n{\n\tfor(int i=head[x];i;i=e[i].next)\n\t{\n\t\tint v=e[i].to;\n\t\tif(!used[v])\n\t\t{\n\t\t\tused[v]=1;\n\t\t\tif(mat[v]==0||find(mat[v]))\n\t\t\t{\n\t\t\t\tmat[v]=x;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint main()\n{\n\tscanf(\"%d\",&t);\n\tGet_Prime();\t\t\t\t\t\t//\u7b5b\u7d20\u6570\n\twhile(t--)\n\t{\n\t\tmemset(mat,0,sizeof(mat));\t\t//\u521d\u59cb\u5316\n\t\tmemset(h1,0,sizeof(h1));\n\t\tmemset(head,0,sizeof(head));\n\t\tnum=0;n1=0;\n\t\tscanf(\"%d%d\",&m,&n);\n\t\tint x;\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tfor(int j=1;prime[j]<=x;j++)\t//\u5206\u89e3\u8d28\u56e0\u6570\n\t\t\t if(x%prime[j]==0)\n\t\t\t {\n\t\t\t \tadd1(j,i);\n\t\t\t \twhile(x%prime[j]==0) x/=prime[j];\n\t\t\t }\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tfor(int j=1;prime[j]<=x;j++)\n\t\t\t if(x%prime[j]==0)\n\t\t\t {\n\t\t\t \tfor(int l=h1[j];l;l=p[l].next) add(p[l].to,i);\n\t\t\t \twhile(x%prime[j]==0) x/=prime[j];\n\t\t\t }\n\t\t}\n\t\tint ans=0;\n\t\tfor(int i=1;i<=m;i++)\t\t//\u5308\u7259\u5229\u677f\u5b50\n\t\t{\n\t\t\tused.reset();\t\n\t\t\tif(find(i)) ans++;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1524814028,
        "uid": 39157,
        "name": "_yjk",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2065 \u3010[TJOI2011]\u5361\u7247\u3011"
    },
    {
        "content": "\u5148\u8003\u8651\u4e00\u4e2a\u663e\u7136\u7684\u505a\u6cd5\u3002\u65b0\u5efa\u4e00\u4e2a\u6e90\u70b9\uff0c\u5411\u6240\u6709\u84dd\u8272\u5361\u7247\u8fde\u8fb9\u3002\u65b0\u5efa\u4e00\u4e2a\u6c47\u70b9\uff0c\u6240\u6709\u7ea2\u8272\u5361\u7247\u5411\u5b83\u8fde\u8fb9\u3002\u6240\u6709\u6743\u503c\u4e0d\u4e92\u8d28\u7684\u7ea2\u84dd\u5361\u7247\u4e4b\u95f4\u8fde\u8fb9\u3002\u5728\u8fd9\u5f20\u56fe\u4e0a\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u4e2a\u505a\u6cd5\u7531\u4e8e\u8fb9\u6570\u592a\u591a\uff0c\u8fc7\u4e0d\u4e86\u3002\u6545\u8003\u8651\u4f18\u5316\u8fb9\u6570\u3002\n\n\u5148\u5f15\u5165\u53e6\u4e00\u4e2a\u95ee\u9898\uff1a\u600e\u4e48\u7528\u8f83\u5c11\u7684\u8fb9\u6570\u5efa\u51fa\u4e00\u5f20\u5b8c\u5168\u56fe\u3002\n\n\u5efa\u51fa\u4e00\u4e2a\u65b0\u70b9\uff0c\u6240\u6709\u70b9\u90fd\u5411\u5b83\u8fde\u8fb9\u5373\u53ef\u3002\n\n\u901a\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u60f3\u8981\u4f18\u5316\u8fb9\u6570\uff0c\u53ef\u4ee5\u5efa\u51fa\u65b0\u70b9\u3002\n\n\u5728\u539f\u95ee\u9898\u4e2d\uff0c\u5c31\u53ef\u4ee5\u5efa\u51fa\u82e5\u5e72\u4e2a\u65b0\u70b9\uff0c\u8868\u793a\u6743\u503c\u8303\u56f4\u5185\u7684\u6240\u6709\u8d28\u6570\u3002\n\n\u5bf9\u4e8e\u84dd\u8272\u5361\u7247\uff0c\u628a\u5b83\u7684\u6743\u503c\u8d28\u56e0\u6570\u5206\u89e3\u540e\uff0c\u5411\u5f97\u5230\u7684\u6bcf\u79cd\u8d28\u6570\u5bf9\u5e94\u7684\u70b9\u8fde\u8fb9\u3002\u5bf9\u4e8e\u7ea2\u8272\u5361\u7247\uff0c\u628a\u5b83\u7684\u6743\u503c\u8d28\u56e0\u6570\u5206\u89e3\u540e\uff0c\u7531\u5f97\u5230\u7684\u6bcf\u79cd\u8d28\u6570\u5bf9\u5e94\u7684\u70b9\u5411\u5b83\u8fde\u8fb9\u3002\n\n\u8fd9\u6837\uff0c\u8fb9\u6570\u5c31\u5927\u5927\u51cf\u5c11\u4e86\u3002\uff08\u901a\u8fc7\u8ba1\u7b97\u53ef\u5f97\uff0c\u6bcf\u5f20\u84dd\u8272\u5361\u7247\u81f3\u591a\u8fde\u51fa 8 \u6761\u8fb9\uff0c\u7ea2\u8272\u5361\u7247\u540c\u7406\uff09\n\n\u76f4\u63a5\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int N=1e6+10;\nconst int M=1e4+10;\nconst int L=1e7+10;\nconst int inf=1e9;\nint _,n,m,S,T;\nint a[N],b[N];\nint cnt=1,hd[M];\nint nxt[M],to[M],val[M];\nint ans,d[N],mp[L];\nint tot,fl[L],pr[N];\nqueue <int> q;\nvoid add(int x,int y,int z)\n{\n\tto[++cnt]=y,val[cnt]=z;\n\tnxt[cnt]=hd[x],hd[x]=cnt;\n}\nint MIN(int x,int y)\n{\n\treturn x<y?x:y;\n}\nvoid LLL(int n)\n{\n\tfl[1]=1;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tif(!fl[i]) pr[++tot]=i,mp[i]=tot;\n\t\tfor(int j=1;j<=tot&&i*pr[j]<=n;j++)\n\t\t{\n\t\t\tfl[i*pr[j]]=1;\n\t\t\tif(i%pr[j]==0) break;\n\t\t}\n\t}\n}\nbool bfs()\n{\n\tmemset(d,0,sizeof(d));\n\twhile(q.size()) q.pop();\n\td[S]=1,q.push(S);\n\twhile(q.size())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=hd[x];i;i=nxt[i])\n\t\t{\n\t\t\tint t=to[i],v=val[i];\n\t\t\tif(v<=0||d[t]) continue;\n\t\t\td[t]=d[x]+1,q.push(t);\n\t\t\tif(t==T) return true;\n\t\t}\n\t}\n\treturn false;\n}\nint dfs(int x,int flow)\n{\n\tif(x==T) return flow;\n\tint sum=0;\n\tfor(int i=hd[x];i;i=nxt[i])\n\t{\n\t\tif(!flow) break;\n\t\tint t=to[i],v=val[i];\n\t\tif(v<=0||d[t]!=d[x]+1) continue;\n\t\tint res=dfs(t,MIN(flow,v));\n\t\tval[i]-=res,val[i^1]+=res;\n\t\tflow-=res,sum+=res;\n\t}\n\tif(!sum) d[x]=0;\n\treturn sum;\n}\nint main()\n{\n\tLLL(L-1);\n\tscanf(\"%d\",&_);\n\twhile(_--)\n\t{\n\t\tcnt=1,ans=0;\n\t\tmemset(hd,0,sizeof(hd));\n\t\tmemset(nxt,0,sizeof(nxt));\n\t\tmemset(to,0,sizeof(to));\n\t\tmemset(val,0,sizeof(val));\n\t\tscanf(\"%d%d\",&n,&m),S=0,T=n+m+tot+1;\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\t\tfor(int i=1;i<=m;i++) scanf(\"%d\",&b[i]);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(mp[a[i]]) add(i,n+m+mp[a[i]],1),add(n+m+mp[a[i]],i,0);\n\t\t\telse\n\t\t\t{\n\t\t\t\tint x=a[i];\n\t\t\t\tfor(int j=1;j<=tot;j++)\n\t\t\t\t{\n\t\t\t\t\tif(x==1) break;\n\t\t\t\t\tif(x%pr[j]==0) add(i,n+m+j,1),add(n+m+j,i,0);\n\t\t\t\t\twhile(x%pr[j]==0) x/=pr[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tif(mp[b[i]]) add(n+m+mp[b[i]],n+i,1),add(n+i,n+m+mp[b[i]],0);\n\t\t\telse\n\t\t\t{\n\t\t\t\tint x=b[i];\n\t\t\t\tfor(int j=1;j<=tot;j++)\n\t\t\t\t{\n\t\t\t\t\tif(x==1) break;\n\t\t\t\t\tif(x%pr[j]==0) add(n+m+j,n+i,1),add(n+i,n+m+j,0);\n\t\t\t\t\twhile(x%pr[j]==0) x/=pr[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tadd(S,i,1),add(i,S,0);\n\t\tfor(int i=1;i<=m;i++)\n\t\t\tadd(n+i,T,1),add(T,n+i,0);\n\t\twhile(bfs()) ans+=dfs(S,inf);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1631686732,
        "uid": 186587,
        "name": "BBD186587",
        "ccfLevel": 0,
        "title": "P2065"
    },
    {
        "content": "### 1 \u601d\u8def\n\n\u4e00\u770b\u5c31\u662f\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u6211\u66f4\u4e60\u60ef\u4e8e\u8dd1 `dinic` \u7f51\u7edc\u6d41\u3002\n\n\u4f46\u662f\uff0c\u5982\u6b64\u4e4b\u5927\u7684\u6570\u636e\u80af\u5b9a\u80fd\u591f\u628a\u7a0b\u5e8f T \u98de\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c $2$ \u4e2a\u6570\u4e0d\u4e92\u8d28\uff0c\u90a3\u4e48\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u8d28\u6570\u662f\u5b83\u4eec\u7684\u516c\u56e0\u6570\u3002\n\n\u8bbe\u84dd\u5361\u6709 $m$ \u5f20\uff0c\u5206\u522b\u4e3a $b[1],b[2],b[3],......,b[m]$\u3002\n\n\u7ea2\u5361\u6709 $n$ \u5f20\uff0c\u5206\u522b\u4e3a $r[1],r[2],r[3],......,r[n]$\u3002\n\n\u5148\u9884\u5904\u7406\u8d28\u6570\uff0c\u5c06\u6240\u6709\u7684\u5c0f\u4e8e $10^7$ \u7684\u8d28\u6570\u5b58\u5230\u6570\u7ec4\u91cc\u3002\u8bbe\u603b\u7684\u8d28\u6570\u4e2a\u6570\u4e3a $pi$\uff0c\u7b2c $i\\ (1\\le i\\le pi)$ \u4e2a\u8d28\u6570\u4e3a $pr[i]$\u3002\u6bd4\u5982 $pr[1]=2,pr[2]=3,pr[3]=5$\u3002\n\n\u7136\u540e\uff0c\u7ed9\u6bcf\u5f20\u84dd\u5361\u6807\u53f7\u4e3a $1\\to m$\uff0c\u7ed9\u6bcf\u5f20\u7ea2\u5361\u6807\u53f7\u4e3a $m+1\\to m+n$\uff0c\u7ed9\u7b2c $i$ \u4e2a\u8d28\u6570\u6807\u53f7\u4e3a $i+m+n$\u3002\n\n\u5982\u679c\u4e00\u5f20\u84dd\u5361\u80fd\u6574\u9664\u4ee5\u4e00\u4e2a\u8d28\u6570\uff0c\u5c31**\u4ece\u84dd\u5361\u5411\u8d28\u6570**\u8fde\u5bb9\u91cf\u4e3a\u201c\u65e0\u9650\u201d\u7684\u8fb9\u3002\n\n\u5982\u679c\u4e00\u5f20\u7ea2\u5361\u80fd\u6574\u9664\u4ee5\u4e00\u4e2a\u8d28\u6570\uff0c\u5c31**\u4ece\u8d28\u6570\u5411\u7ea2\u5361**\u8fde\u5bb9\u91cf\u4e3a\u201d\u65e0\u9650\u201c\u7684\u8fb9\u3002\n\n\u7136\u540e\uff0c\u4ece\u6e90\u70b9\u5411\u6bcf\u4e2a\u84dd\u5361\u8fde\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u540c\u6837\uff0c\u4ece\u6bcf\u4e2a\u7ea2\u5361\u5411\u6c47\u70b9\u8fde\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u8dd1\u4e00\u904d\u7f51\u7edc\u6d41\u5373\u53ef\u3002\n\n\u6211\u4e0d\u77e5\u9053\u4e0d\u5438\u6c27\u4f1a\u4e0d\u4f1a\u8d85\u65f6\uff0c\u5438\u6c27\u6700\u6162\u70b9 $212$ \u6beb\u79d2\u3002\n\n### 2 \u4ee3\u7801\u4e0e\u8bb0\u5f55\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define inf 0x3f3f3f3f//\u4e00\u4e2a\u5f88\u5927\u7684\u6570\nusing namespace std;\nint ca;//\u6d4b\u8bd5\u6570\u636e\u7ec4\u6570\nbool nop[10000002/*10^7+2*/];//\u662f\u5426\u4e3a\u5408\u6570\nint pr[10000002/*10^7+2*/];//\u8d28\u6570\nint pi=0;//\u4e0b\u6807\nint m;//\u84dd\u5361\u6570\nint n;//\u7ea2\u5361\u6570\nint b[200000/*2*10^5*/];//\u84dd\u5361\nint r[200000/*2*10^5*/];//\u7ea2\u5361\nstruct E{\n\tint v,w,a,nx;//\u7aef\u70b9\u3001\u6d41\u91cf\u3001\u53cd\u8fb9\u3001\u4e0b\u4e00\u6761\n}e[1000002/*10^6+2*/];//\u8fb9\nint ei;//\u4e0b\u6807\nint fir[200000/*2*10^5*/];//\u5f00\u59cb\u8def\u5f84\nint s;//\u6e90\u70b9\nint t;//\u6c47\u70b9\nint de[200000/*2*10^5*/];//\u6df1\u5ea6\nint ans;//\u7b54\u6848\ninline void addedge(int u,int v,int w){\n\t++ei; e[ei].v=v; e[ei].w=w; e[ei].a=ei+1; e[ei].nx=fir[u]; fir[u]=ei;\n\t++ei; e[ei].v=u; e[ei].w=0; e[ei].a=ei-1; e[ei].nx=fir[v]; fir[v]=ei;\n}\ninline int ma(int a,int b){\n\treturn a>b?a:b;\n}\ninline int mi(int a,int b){\n\treturn a<b?a:b;\n}\nvoid unb(int a,int u){\n\tfor(int i=1;i<=pi&&pr[i]<=a;++i){\n\t\tif(!(a%pr[i])){\n\t\t\taddedge(u,i+m+n,inf);//\u8fde\u63a5\u4e0d\u540c\u989c\u8272\u7684\u70b9\u662f\u6709\u533a\u522b\u7684\n\t\t\twhile(!(a%pr[i]))a/=pr[i];\n\t\t\tt=ma(t,i+m+n);\n\t\t}\n\t}\n}\nvoid unr(int a,int u){\n\tfor(int i=1;i<=pi&&pr[i]<=a;++i){\n\t\tif(!(a%pr[i])){\n\t\t\taddedge(i+m+n,u,inf);//\u8fde\u63a5\u4e0d\u540c\u989c\u8272\u7684\u70b9\u662f\u6709\u533a\u522b\u7684\n\t\t\twhile(!(a%pr[i]))a/=pr[i];\n\t\t\tt=ma(t,i+m+n);\n\t\t}\n\t}\n}\nbool bfs(){\n\tmemset(de,0,sizeof(de));\n\tde[s]=1;\n\tqueue<int>q;\n\tq.push(s);\n\tint u;\n\twhile(!q.empty()){\n\t\tu=q.front();\n\t\tq.pop();\n\t\tfor(int i=fir[u],v;i;i=e[i].nx){\n\t\t\tv=e[i].v;\n\t\t\tif(e[i].w&&!de[v]){\n\t\t\t\tde[v]=de[u]+1;//\u66f4\u65b0\u6df1\u5ea6\n\t\t\t\tq.push(v);//\u4e0b\u4e00\u4e2a\u7ed3\u70b9\n\t\t\t}\n\t\t}\n\t}\n\treturn de[t];//\u662f\u5426\u5230\u8fbe\n}\nint dfs(int u,int f){\n\tif(u==t)return f;//\u5230\u8fbe\u7ec8\u70b9\u56de\u5bb6\n\tint res=0;\n\tfor(int i=fir[u],v;i;i=e[i].nx){\n\t\tv=e[i].v;\n\t\tif(e[i].w&&de[u]+1==de[v]){\n\t\t\tint w=dfs(v,mi(f,e[i].w));\n\t\t\te[i].w-=w;//\u7528\u5b8c\u4e86\u6d41\u91cf\n\t\t\te[e[i].a].w+=w;//\u53cd\u5411\u8fb9\u66f4\u65b0\n\t\t\tres+=w;//\u6d41\u91cf\u53c8\u591a\u4e86\u5462\n\t\t\tf-=w;//\u540c\u6837\u7528\u5b8c\u4e86\u6d41\u91cf\n\t\t}\n\t}\n\treturn res;\n}\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"P2065_1.in\",\"r\",stdin);\n\tfreopen(\"P2065_1.out\",\"w\",stdout);\n\t#endif\n\tscanf(\"%d\",&ca);\n\tmemset(nop,0,sizeof(nop));\n\tfor(int i=2;i<=10000000;++i){\n\t\tif(nop[i])continue;\n\t\tpr[++pi]=i;\n\t\tfor(int j=1;j<=pi&&i*pr[j]<=10000000;++j){\n\t\t\tnop[i*pr[j]]=true;\n\t\t\tif(!(i%pr[j]))break;\n\t\t}\n\t}\n\twhile(ca--){\n\t\tscanf(\"%d%d\",&m,&n);//\u6ce8\u610f\u8f93\u5165\u7684\u987a\u5e8f\n\t\tei=0;\n\t\tmemset(fir,0,sizeof(fir));\n\t\ts=0;\n\t\tt=0;\n\t\tfor(int i=1;i<=m;++i){\n\t\t\tscanf(\"%d\",b+i);\n\t\t\tunb(b[i],i);//\u8fde\u63a5\u84dd\u70b9\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tscanf(\"%d\",r+i);\n\t\t\tunr(r[i],i+m);//\u8fde\u63a5\u7ea2\u70b9\n\t\t}\n\t\t++t;//\u66f4\u65b0\u6c47\u70b9\n\t\tfor(int i=1;i<=m;++i){\n\t\t\taddedge(s,i,1);\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\taddedge(i+m,t,1);\n\t\t}\n\t\tans=0;\n\t\twhile(bfs())ans+=dfs(s,inf);//dinic\u7b97\u6cd5\n\t\tprintf(\"%d\\n\",ans);//\u8f93\u51fa\uff0c\u641e\u5b9a\n\t}\n\treturn 0;\n}\n```\n\n[\u8bb0\u5f55\u4f20\u9001\u95e8](https://www.luogu.com.cn/record/56760553)\n\nBy **dengziyue**",
        "postTime": 1629709893,
        "uid": 387840,
        "name": "happy_dengziyue",
        "ccfLevel": 6,
        "title": "P2065\u9898\u89e3"
    },
    {
        "content": "# P2065 [TJOI2011]\u5361\u7247 \u9898\u89e3\n\n\u521a\u5b66\u7f51\u7edc\u6d41\uff0c\u8bb0\u4e00\u7bc7\u9898\u89e3\u3002\n\n## \u9898\u610f\n\n\u7ed9\u4f60\u4e24\u5806\u5361\u7247\uff0c\u5206\u84dd\u7684\u548c\u7ea2\u7684\uff0c\u5206\u522b\u6709 $n$ \u4e2a\u548c $m$ \u4e2a\uff0c\u7136\u540e\u6bcf\u4e2a\u5361\u7247\u4e0a\u90fd\u6709\u4e00\u4e2a\u6570\u3002\u4e00\u4e2a\u4eba\u8981\u62ff\u5f88\u591a\u5f20\u5361\u7247\uff0c\u6bcf\u6b21\u53ea\u80fd\u4ece\u4e24\u5806\u4e2d\u5404\u53d6\u4e00\u4e2a\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a\u5361\u7247\u4e0a\u7684 $\\gcd>1$\uff0c\u95ee\uff1a\u6700\u591a\u80fd\u62ff\u591a\u5c11\u4e2a\u3002\n\n## \u601d\u8def1\n\n> \u8fd9\u4e0d\u5c31\u662f\u4e2a\u4e8c\u5206\u56fe\u677f\u5b50\u5417\uff0c\u66b4\u529b\u5efa\u56fe\u7136\u540e\u8dd1EK\u4e0d\u5c31\u53ef\u4ee5\u8fc7\u4e86\u5417\uff1f\n\n\u7136\u540e\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/etrcic7o.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u7a0d\u5fae\u60f3\u4e00\u4e0b\u53d1\u73b0\u5efa\u56fe\u5c31 $O(nm)$ \u4e86\uff0c\u518d\u5e26\u4e00\u5806\u5e38\u6570\u5c31 T \u98de\u4e86\u3002\n\n## \u601d\u8def2\n\n\u77e5\u9053\u662f\u5efa\u56fe\u6162\u4e86\uff0c\u5c31\u8981\u53bb\u4f18\u5316\u5efa\u56fe\u3002\n\n\u5f88\u660e\u663e\u8fd9\u91cc\u4e0d\u80fd\u4e24\u8fb9\u540c\u65f6\u5efa\uff0c\u6240\u4ee5\u8981\u4e24\u8fb9\u5206\u5f00\u5efa\u56fe\u3002\n\n\u95ee\u9898\u6765\u4e86\uff1a\u600e\u4e48\u5efa\uff1f\n\n\u8fd9\u91cc\u53d1\u73b0\u662f\u7528 $\\gcd$ \u8fde\u63a5\u4e24\u8fb9\u7684\uff0c\u90a3\u4e48\u53ea\u8981\u627e\u5230\u4e2d\u95f4\u7684\u4e00\u5806\u201c\u4e2d\u95f4\u5546\u201d\u5373\u53ef\u3002\u7136\u540e\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u7528**\u8d28\u56e0\u6570**\u3002\n\n\u5148\u9884\u5904\u7406\u4e00\u904d $1\\sim 10^7$ \u7684\u8d28\u56e0\u6570\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u5361\u7247\uff0c\u518d\u5411\u5361\u7247\u4e0a\u6570\u5b57\u7684\u6240\u6709\u8d28\u56e0\u6570\u8fde\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u8dd1\u4e00\u904d\u7f51\u7edc\u6d41\uff0c\u95ee\u9898\u5c31\u8fce\u5203\u800c\u89e3\u4e86\u3002\n\n## \u4ee3\u7801(EK)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 2e4 + 5;\nconst int M = 1e5 + 5;\nconst int PRIME = 1e7 + 5;\nconst int CNT = 6e5 + 5;\n\nint T;\nint n, m, s, t, ans;\nint b[N], r[N];\nint tot, pre[M << 1], to[M << 1], val[M << 1], tail[N];\n\nvoid addEdge (int u, int v, int w) {\n\tto[++tot] = v, val[tot] = w, pre[tot] = tail[u], tail[u] = tot;\n\tto[++tot] = u, val[tot] = 0, pre[tot] = tail[v], tail[v] = tot;\n}\n\nint gcd (int m, int n) {\n\tif (m < n) swap(m, n);\n\tif (n == 0) return m;\n\treturn gcd(n, m % n);\n}\n\nint cnt;\nint primes[CNT];\nvoid Prework () { //\u9884\u5904\u7406\u8d28\u6570\uff08\u57c3\u6c0f\u7b5b\uff09\n\tbool vis[PRIME] = {0};\n\tfor (int i = 2; i * i <= 1e7; ++i)\n\t\tif (!vis[i])\n\t\t\tfor (int j = i * i; j <= 1e7; j += i)\n\t\t\t\tvis[j] = true;\n\tfor (int i = 2; i <= 1e7; ++i)\n\t\tif (!vis[i]) primes[++cnt] = i;\n}\n\nnamespace MaxFlow { //\u7f51\u7edc\u6d41\n#define INF 0x3f3f3f3f\n\tint p[N] = {0}, inc[N];\n\tbool vis[N];\n\tint q[N];\n\tvoid Init () { memset(p, 0, sizeof(p)), memset(inc, 0, sizeof(inc)); }\n\tbool BFS () {\n\t\tmemset(vis, false, sizeof(vis));\n\t\tint head = 0, back = 1;\n\t\tvis[s] = true, inc[s] = INF; q[1] = s;\n\t\twhile (head < back) {\n\t\t\tint nowfront = q[++head];\n\t\t\tfor (int ind = tail[nowfront]; ind; ind = pre[ind]) {\n\t\t\t\tif (!val[ind]) continue ;\n\t\t\t\tif (vis[to[ind]]) continue ;\n\t\t\t\tinc[to[ind]] = min(inc[nowfront], val[ind]);\n\t\t\t\tvis[to[ind]] = true, q[++back] = to[ind], p[to[ind]] = ind;\n\t\t\t\tif (to[ind] == t) return true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tvoid Work () {\n\t\tint cur = t;\n\t\twhile (cur ^ s) {\n\t\t\tint las = p[cur];\n\t\t\tval[las] -= inc[t], val[las ^ 1] += inc[t];\n\t\t\tcur = to[las ^ 1];\n\t\t}\n\t\tans += inc[t];\n\t\treturn ;\n\t}\n}\n\nint main() {\n\tscanf(\"%d\", &T);\n\tPrework();\n\twhile (T--) {\n\t\tscanf(\"%d%d\", &n, &m); s = n + m + 1, t = n + m + 2;\n\t\tmemset(pre, 0, sizeof(pre)), memset(tail, 0, sizeof(tail));\n\t\ttot = 1; ans = 0;\n\t\tfor (int i = 1; i <= n; ++i) scanf(\"%d\", &b[i]), addEdge(s, i, 1); //\u5de6\u8fb9\u7684\u8d85\u7ea7\u6e90\u70b9\u5411i\u8fde\u8fb9\n\t\tfor (int i = 1; i <= m; ++i) scanf(\"%d\", &r[i]), addEdge(i + n, t, 1); //\u53f3\u8fb9\u7684\u8d85\u7ea7\u6e90\u70b9\u5411i+n\u8fde\u8fb9\uff08\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662fi+n\u5c31\u4e0d\u7528\u89e3\u91ca\u4e86\u5427\uff09\n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\tfor (int j = 1; j <= cnt; ++j) {\n\t\t\t\tif (primes[j] > b[i]) break ;\n\t\t\t\tif (b[i] % primes[j] == 0) addEdge(i, j + n + m + 2, 1); //\u627e\u5230\u8d28\u56e0\u6570\u7136\u540e\u5efa\u8fb9\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i <= m; ++i) {\n\t\t\tfor (int j = 1; j <= cnt; ++j) {\n\t\t\t\tif (primes[j] > r[i]) break ;\n\t\t\t\tif (r[i] % primes[j] == 0) addEdge(j + n + m + 2, i + n, 1);\n\t\t\t}\n\t\t}\n\t\twhile (MaxFlow::BFS()) MaxFlow::Work();\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n} \n```\n\n\u81f3\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u4e0d\u4f1a\u7b97\u3002",
        "postTime": 1618668897,
        "uid": 176843,
        "name": "Scarab",
        "ccfLevel": 0,
        "title": "P2065 [TJOI2011]\u5361\u7247 \u9898\u89e3"
    },
    {
        "content": "## \u4fee\u6539\u90e8\u5206\n\u6539\u4e86 $\\LaTeX$\u3002\n\n## \u5206\u6790\n\u8fd9\u9053\u9898\u90a3\u53eb\u4e00\u4e2a\u5751\u4eba\u3002\n\n\u9996\u5148\u5bb9\u6613\u60f3\u5230\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u770b\u662f\u5426\u6ee1\u8db3 $\\gcd\\ge2$\uff0c\u6ee1\u8db3\u5c31\u52a0\u8fb9\u3002\u8dd1\u4e00\u8fb9\u4e8c\u5206\u56fe\u3002\n\n\u7136\u540e\u5feb\u4e50\u5730 TLE 70pts\u3002\n\n\u7136\u540e\u60f3\u5230\u7528 EK \u8dd1\u4e8c\u5206\u56fe\uff08\u53ea\u5b66\u8fc7 EK\uff09\u3002\n\n\u7136\u540e\u5feb\u4e50\u5730 TLE 70pts\u3002\n\n\u7136\u540e\u60f3\u5230\u7528 ISAP \u8dd1\u4e8c\u5206\u56fe\u3002\n\n\u7136\u540e\u5feb\u4e50\u5730 TLE 0pts\u3002\uff08\u81ea\u5b66 ISAP \u5b66\u5e9f\u4e86\uff0c\u6d6a\u8d39\u4e00\u4e2a\u4e0b\u5348\uff09\n\n\u7136\u540e\u53d1\u73b0\u4e00\u4e2a\u5feb\u4e0a\u4e00\u4e07\u500d\u7684\u65b9\u6cd5\u3002\n\n\u9996\u5148\u8bb2\u4e00\u4e0b\u600e\u4e48\u5361\u6389\u4e0a\u9762\u90a3\u4e2a\u7b97\u6cd5\uff1a\u6240\u6709\u7684\u6570\u90fd\u662f 2 \u5c31\u884c\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0 $\\gcd$ \u548c\u8d28\u56e0\u6570\u6709\u5173\u3002\n\n\u90a3\u4e48\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9 0 \u8fde\u5411 $1\\sim m$\uff0c\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9 $n + m + 1 $\u8fde\u5411 $m+1\\sim n+m$\u3002\u628a\u6bcf\u4e2a\u70b9\u8fde\u5411\u81ea\u5df1\u6240\u6709\u7684\u8d28\u56e0\u6570\u3002\u5bb9\u91cf\u5747\u4e3a 1\u3002\n\n\u56e0\u4e3a\u91cd\u590d\u7684\u8d28\u56e0\u6570\u53ea\u8fde\u4e00\u6761\u8fb9\uff0c\u6240\u4ee5\u8fb9\u6570\u5927\u5927\u51cf\u5c0f\u3002\n\n\u671f\u95f4\u8fd8\u56e0\u4e3a\u628a\u6240\u6709\u7684\u8d28\u56e0\u6570\u9884\u5904\u7406\u51fa\u6765 TLE \u4e86\u4e00\u4e07\u5e74\u3002\n\n## \u89e3\u51b3\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <map>\n\nusing namespace std;\n\nconst int N = 25000, M = 100005;\nint n, m, head[N], ver[M], nxt[M], edge[M], tot, maxflow, que[N], pre[N], l, r, increase[N], b[N], R[N], cnt;\nchar vis[N];\nmap <int, int> mp;\n\ninline int bfs() {\n\tl = 1, r = 1, que[1] = 0, increase[0] = 0x3f3f3f3f;\n\tmemset(vis, 0, sizeof(vis)), vis[0] = true;\n\twhile (l <= r) {\n\t\tint cur = que[l++];\n\t\tfor (int i = head[cur]; ~i; i = nxt[i])\n\t\t\tif (edge[i] && !vis[ver[i]]) {\n\t\t\t\tvis[ver[i]] = 1, pre[ver[i]] = i, increase[ver[i]] = min(increase[cur], edge[i]);\n\t\t\t\tif (increase[ver[i]])\n\t\t\t\t\tque[++r] = ver[i];\n\t\t\t\tif (ver[i] == n + m + 1)\n\t\t\t\t\treturn increase[ver[i]];\n\t\t\t}\n\t}\n\treturn 0;\n}\n\ninline void update() {\n\tmaxflow += increase[n + m + 1];\n\tint cur = n + m + 1;\n\twhile (cur) {\n\t\tint last = pre[cur];\n\t\tedge[last] -= increase[n + m + 1], edge[last ^ 1] += increase[n + m + 1];\n\t\tcur = ver[last ^ 1];\n\t}\n}\n\ninline void EK() {\n\twhile (bfs())\n\t\tupdate();\n}\n\ninline void addedge(int u, int v, int w) { ver[++tot] = v, nxt[tot] = head[u], edge[tot] = w, head[u] = tot; }\n\ninline void init() {\n\ttot = -1, maxflow = 0;\n\tmemset(head, -1, sizeof(head));\n    mp.clear();\n}\n\ninline void read(int &ret) {\n\tret = 0;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9') ch = getchar();\n\twhile (ch >= '0' && ch <= '9') ret = ret * 10 + ch - '0', ch = getchar();\n}\n\nint main() {\n\tint T;\n\tcin >> T;\n\twhile (T--) {\n\t\tcin >> m >> n;\n\t\tinit();\n        cnt = n + m + 1;\n\t\tfor (int i = 1; i <= m; i++) {\n            read(b[i]), addedge(0, i, 1), addedge(i, 0, 0);\n            for (int j = 2; j * j <= b[i]; j++)\n                if (b[i] % j == 0) {\n                    while (b[i] % j == 0) b[i] /= j;\n                    if (!mp[j])\n                        mp[j] = ++cnt;\n                    addedge(i, mp[j], 1), addedge(mp[j], i, 0);\n                }\n            if (b[i] > 1) {\n                if (!mp[b[i]])\n                    mp[b[i]] = ++cnt;\n                addedge(i, mp[b[i]], 1), addedge(mp[b[i]], i, 0);\n            }\n        }\n\t\tfor (int i = 1; i <= n; i++) {\n            read(R[i]), addedge(i + m, n + m + 1, 1), addedge(n + m + 1, i + m, 0);\n            for (int j = 2; j * j <= R[i]; j++)\n                if (R[i] % j == 0) {\n                    while (R[i] % j == 0) R[i] /= j;\n                    if (!mp[j])\n                        mp[j] = ++cnt;\n                    addedge(i + m, mp[j], 0), addedge(mp[j], i + m, 1);\n                }\n            if (R[i] > 1) {\n                if (!mp[R[i]])\n                    mp[R[i]] = ++cnt;\n                addedge(i + m, mp[R[i]], 0), addedge(mp[R[i]], i + m, 1);\n            }\n        }\n\t\tEK();\n\t\tcout << maxflow << endl;\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1616947165,
        "uid": 253946,
        "name": "ClHg2",
        "ccfLevel": 7,
        "title": "P2065 \u9898\u89e3"
    }
]