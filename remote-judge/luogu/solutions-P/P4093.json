[
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\u3002\n\n\u540c\u65f6\u8fd9\u4e2a\u5e8f\u5217\u8fd8\u53ef\u80fd\u53d1\u751f\u53d8\u5316\uff0c\u6bcf\u4e00\u79cd\u53d8\u5316 $(x_i,y_i)$ \u5bf9\u5e94\u7740 $a_{x_i}$ \u53ef\u80fd\u53d8\u6210 $y_i$\u3002\n\n\u4e0d\u4f1a\u540c\u65f6\u53d1\u751f\u4e24\u79cd\u53d8\u5316\u3002\n\n\u9700\u8981\u627e\u51fa\u4e00\u4e2a\u6700\u957f\u7684\u5b50\u5e8f\u5217\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u5b50\u5e8f\u5217\u5728\u4efb\u610f\u4e00\u79cd\u53d8\u5316\u4e0b\u90fd\u662f\u4e0d\u964d\u7684\u3002\n\n\u53ea\u9700\u8981\u6c42\u51fa\u8fd9\u4e2a\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u5373\u53ef\u3002\n\n**\u6ce8\u610f\uff1a\u53ef\u4ee5\u4e0d\u53d1\u751f\u4efb\u4f55\u53d8\u5316\u3002**\n\n### \u9898\u89e3\uff1a\n\n\u8bb0 $f[i]$ \u4e3a\u4ee5\u7b2c $i$ \u9879\u7ed3\u5c3e\u7684\u5b50\u5e8f\u5217\u6700\u957f\u957f\u5ea6\u3002\n\n\u5219\u6709\u8f6c\u79fb\uff1a$f[i]=\\max_{j<i}(f[j])+1$\uff0c\u540c\u65f6\u8fd8\u8981\u6ee1\u8db3 $maxval_j\\le a_i$ \u548c $a_j\\le minval_i$\u3002  \n\u5176\u4e2d $maxval_i$ \u8868\u793a\u7b2c $i$ \u9879\u6700\u5927\u80fd\u53d8\u6210\u7684\u503c\uff0c$minval_i$ \u8868\u793a\u7b2c $i$ \u9879\u6700\u5c0f\u80fd\u53d8\u6210\u7684\u503c\u3002\n\n\u6309\u7167\u9879\u4ece\u5c0f\u5230\u5927\u8f6c\u79fb\uff0c\u5f62\u6210\u4e86**\u5929\u7136\u7684\u65f6\u95f4\u987a\u5e8f**\uff0c\u540c\u65f6\u8fd8\u8981\u6ee1\u8db3\u4e24\u4e2a\u504f\u5e8f\u9650\u5236\u3002\n\n\u7b97\u4e0a\u65f6\u95f4\u987a\u5e8f\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u7528 CDQ \u5206\u6cbb + \u6570\u636e\u7ed3\u6784\uff08\u6211\u7528\u4e86\u6811\u72b6\u6570\u7ec4\uff09\u5c31\u80fd\u89e3\u51b3\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nconst int MN = 100005;\nconst int MC = 100000;\n\nint N, M;\nint A[MN], Mx[MN], Mn[MN];\nint f[MN], Ans;\nint p[MN];\ninline bool cmp1(int i, int j) { return Mx[i] < Mx[j]; }\ninline bool cmp2(int i, int j) { return A[i] < A[j]; }\n\nint B[MN];\ninline void Ins(int i, int x) { for (; i <= MC; i += i & -i) B[i] = max(B[i], x); }\ninline void Clr(int i) { for (; i <= MC; i += i & -i) B[i] = 0; }\ninline int Qur(int i) { int A = 0; for (; i; i -= i & -i) A = max(A, B[i]); return A;}\n\nvoid CDQ(int lb, int rb) {\n\tif (lb == rb) {\n\t\tf[lb] = max(f[lb], 1);\n\t\treturn;\n\t}\n\tint mid = lb + rb >> 1;\n\tCDQ(lb, mid);\n\tfor (int i = lb; i <= rb; ++i)\n\t\tp[i] = i;\n\tsort(p + lb, p + mid + 1, cmp1);\n\tsort(p + mid + 1, p + rb + 1, cmp2);\n\tint j = lb;\n\tfor (int i = mid + 1; i <= rb; ++i) {\n\t\twhile (j <= mid && Mx[p[j]] <= A[p[i]]) {\n\t\t\tIns(A[p[j]], f[p[j]]);\n\t\t\t++j;\n\t\t}\n\t\tf[p[i]] = max(f[p[i]], Qur(Mn[p[i]]) + 1);\n\t}\n\tfor (int i = lb; i <= mid; ++i)\n\t\tClr(A[i]);\n\tCDQ(mid + 1, rb);\n}\n\nint main() {\n\tint x, y;\n\tscanf(\"%d%d\", &N, &M);\n\tfor (int i = 1; i <= N; ++i)\n\t\tscanf(\"%d\", &A[i]),\n\t\tMx[i] = Mn[i] = A[i];\n\tfor (int i = 1; i <= M; ++i)\n\t\tscanf(\"%d%d\", &x, &y),\n\t\tMx[x] = max(Mx[x], y),\n\t\tMn[x] = min(Mn[x], y);\n\tCDQ(1, N);\n\tfor (int i = 1; i <= N; ++i)\n\t\tAns = max(Ans, f[i]);\n\tprintf(\"%d\\n\", Ans);\n\treturn 0;\n}\n```",
        "postTime": 1544448550,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4093 \u3010[HEOI2016/TJOI2016]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u975e\u5e38\u4f20\u7edf\u7684\u4e00\u9053cdq\u5957dp\u7684\u9898\u76ee\n\n\u5982\u679c\u719f\u7ec3\u638c\u63e1cdq\u7684\u8bdd\u5e94\u8be5\u53ef\u4ee5\u5f88\u5feb\u7684\u6572\u51fa\u6765\uff1f\n\n## CDQ\u5206\u6cbb\u4f18\u5316dp\n\n\u5148\u8bf4\u4ec0\u4e48\u662fCDQ\n\n\u5176\u5b9ecdq\u5c31\u662f\u6eda\u52a8\u5f0f\u7684\u6811\u5957\u6811\n\n\u8fd8\u8bb0\u5f97dp\u91cc\u6709\u4e00\u4e2a\u4e1c\u897f\u53eb\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u5417\uff1f\n\n\u6eda\u52a8\u6570\u7ec4\u4ec5\u4ec5\u4f18\u5316\u4e86\u7a7a\u95f4\u5374\u6ca1\u6709\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\n\ncdq\u5206\u6cbb\u4e5f\u662f\u5982\u6b64\uff0c\u76f8\u8f83\u4e8e\u6811\u5957\u6811\uff0ccdq\u5206\u6cbb\u5e76\u4e0d\u4f1a\u8282\u7ea6\u65f6\u95f4\u590d\u6742\u5ea6\n\n\u76f8\u53cd\uff0ccdq\u5206\u6cbb\u7684\u7279\u70b9\u662f\u7701\u7a7a\u95f4\uff0c\u4ece\u5934\u5230\u5c3e\u53ea\u6709\u4e00\u4e2a\u4f4e\u7ef4\u6570\u636e\u7ed3\u6784\u548c\u88ab\u5206\u6cbb\u6570\u7ec4\u7684\u7a7a\u95f4\u5f00\u9500\uff0c(\u4ee5\u53ca\u4e00\u70b9\u7cfb\u7edf\u6808\u7684\u5185\u5b58\uff1f)\uff0c\u4ee5\u53ca\u6bd4\u6811\u5957\u6811\u5c11\u7684\u5e38\u6570\u548c\u4ee3\u7801\u91cf\n\n\u4e3a\u4ec0\u4e48cdq\u53ef\u4ee5\u90e8\u5206\u7684\u66ff\u4ee3\u6811\u5957\u6811\u5462\uff1f\n\n**\u56e0\u4e3acdq\u5206\u6cbb\u90a3\u4e2asolve\u51fd\u6570\u7684\u672c\u8d28\u662f\u6811\u5957\u6811\u5916\u5c42\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u51fd\u6570**\n\n\u6362\u53e5\u8bdd\u6765\u8bb2\uff0c\u5982\u679c\u6211\u4eec\u53ea\u662f\u9700\u8981\u6811\u5957\u6811\u5916\u5c42\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u51fd\u6570\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528cdq\u5206\u6cbb\uff0c\u5728\u65f6\u95f4\u7ef4\u5ea6\u800c\u4e0d\u662f\u5728\u7a7a\u95f4\u7ef4\u5ea6\u4e0a\u751f\u6210\u8fd9\u4e2a\u6811\u5957\u6811\u7684\u5916\u5c42\u90e8\u5206\uff0c\u4ece\u800c\u9690\u6027\u7684\u4f7f\u7528\u4e86\u4e00\u4e2a\u6811\u5957\u6811\n\n\u90a3\u4e48\u4e0b\u9762\u6211\u4eec\u4ee5\u8fd9\u4e2a\u9898\u4e3a\u4f8b\u8bb2\u89e3\u4e0bCDQ\u5206\u6cbb\u7684\u6b63\u786e\u59ff\u52bf\u5427(\u5176\u5b9e\u4e5f\u4e0d\u4e00\u5b9a\u6b63\u786e)\n\n\u9996\u5148\u7531\u4e8e\u8fd9\u9053\u9898\u672c\u8d28\u4e0a\u8fd8\u662f\u4e00\u4e2adp\u6240\u4ee5\u8bf7\u5148\u8ba9\u6211\u4eec\u63a8\u4e00\u53d1\u8f6c\u79fb\u65b9\u7a0b\n\n\u4ee4$Dp_{i}$\u4ee5i\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6(\u5141\u8bb8\u5176\u4e2d\u4e00\u4e2a\u5143\u7d20\u4efb\u610f\u53d8\u6362)\n\n\u90a3\u4e48\u4e3a\u4e86\u6c42$Dp_{i}$\u6211\u4eec\u679a\u4e3e\u4e0a\u4e00\u4e2a\u70b9\u662f\u8c01\n\n\u6240\u4ee5\u5927\u6982\u957f\u8fd9\u6837\uff1f\n\n## $Dp_{i}=max(Dp_{j})+1$\n\n\u4e2dj\u540c\u65f6\u6ee1\u8db3\u4e0b\u97623\u4e2a\u9650\u5236\n\n1.$j<=i$\n\n2.$val_{j}<=min_{i}$\n\n3.$max_{j}<=val_{i}$\n\n\u540e\u4e24\u4e2a\u9650\u5236\u6761\u4ef6\u662f\u6211\u4eec\u679a\u4e3ei\u548cj\u90a3\u4e2a\u53d8\u5316\u4e4b\u540e\u4ea7\u751f\u7684\u7ed3\u679c\n\n(max\u548cmin\u8868\u793a\u7684\u662f\u4e00\u4e2a\u5143\u7d20\u53ef\u4ee5\u53d8\u5316\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c)\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0max\u8fd0\u7b97\u662f\u5141\u8bb8\u4e71\u5e8f\u7684\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u4f60\u4e3a\u6bcf\u4e00\u4e2ai\u6c42\u51fa\u4e86\u4e00\u4e2a\u6240\u6709\u5408\u6cd5\u7684j\u96c6\u5408\uff0c\u5c31\u53ef\u4ee5\u8f6c\u79fb\n\n\u81f3\u4e8e\u6c42\u8fd9\u4e2a\u96c6\u5408\u7684\u8fc7\u7a0b\uff0c\u662f\u968f\u4fbf\u7684\uff0c\u4f60\u60f3\u600e\u4e48\u6c42\u5c31\u600e\u4e48\u6c42\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u53ea\u662f\u5904\u7406l\uff0cr\u8fd9\u4e00\u6bb5\u533a\u95f4\u7684\u8f6c\u79fb\u5173\u7cfb\uff0c\u5047\u8bbe\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e9b\u5965\u5999\u91cd\u91cd\u7684\u624b\u6cd5\u4f7f\u5f97l\u4ee5\u524d\u7684dp\u503c\u5168\u90e8\u88ab\u6c42\u51fa\u5e76\u4e14\u4e5f\u5411l\uff0cr\u533a\u95f4\u7684\u70b9\u8fdb\u884c\u4e86\u8f6c\u79fb\n\n**\u6211\u4eec\u5e0c\u671b\u671b\u8fd9\u4e2asolve\u51fd\u6570\u7ed3\u675f\u65f6\uff0cl,r\u5185\u7684dp\u503c\u5168\u90e8\u88ab\u6c42\u51fa**\n\n _(\u663e\u7136\u5728\u53ea\u6709\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u8fd9\u4e2a\u70b9\u7684dp\u503c\u5df2\u7ecf\u88ab\u6c42\u51fa\u53ef\u4ee5\u76f4\u63a5return)_ \n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981**\u8003\u8651l\uff0cr\u4e4b\u95f4\u70b9\u7684\u8f6c\u79fb\u5173\u7cfb**\u5c31\u884c\u4e86\n\n\u6b64\u65f6\u6211\u4eec\u4eba\u4e3a\u7684\u5c06\u8fd9\u4e2a\u533a\u95f4\u5206\u4e3a\u4e24\u534a\uff0c\u540c\u65f6\u6211\u4eec\u9012\u5f52\u7684\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570solve(l,mid)\n\n\u8fd9\u6837\u56e0\u4e3a\u6211\u4eec\u8c03\u7528\u4e86\u4e00\u6b21solve\u51fd\u6570\uff0c\u6240\u4ee5l,mid\u4e4b\u95f4\u7684\u70b9\u5df2\u7ecf\u88ab\u6c42\u51fa\u4e86\n\n\u6b64\u65f6\u6211\u4eec\u53ea\u8003\u8651l,mid\u5bf9mid\uff0cr\u4e4b\u95f4\u7684\u8f6c\u79fb\u5173\u7cfb\n\n\u53d1\u73b0**l\uff0cmid\u7684\u4e0b\u6807\u5168\u90e8\u5c0f\u4e8emid\uff0cr\u4e4b\u95f4\u7684\u4e0b\u6807**\uff0c\u6240\u4ee5\u8fd9\u4e00\u7ef4\u7684\u9650\u5236\u4e0d\u5b58\u5728\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u628al\uff0cmid\u6309val\u503c\u6392\u5e8f\uff0c\u628amid\uff0cr\u6309min\u503c\u6392\u5e8f\n\n\u6b64\u65f6\u6211\u4eec\u679a\u4e3e\u6211\u4eec\u8981\u8981\u7528l\uff0cmid\u4e2d\u7684\u70b9\u8f6c\u79fbmid\uff0cr\u4e2d\u7684\u67d0\u4e00\u4e2a\u70b9i\n\n\u73b0\u5728\u8981\u4f7f\u7528\u4e00\u4e9b\u5947\u6280\u6deb\u5de7\u6765\u6d88\u6389\u5269\u4e0b\u7684\u4e24\u4f4d\u9650\u5236\u4e86\n\n\u53d1\u73b0l,mid\u4e2d\u53ef\u4ee5\u8f6c\u79fb\u5230i\u7684\u70b9\uff0c\u5728\u6309val\u6392\u5e8f\u4e4b\u540e\u662f\u4e00\u4e2a\u8fde\u7eed\u524d\u7f00\uff0c\u5047\u8bbe\u8fd9\u662f\u4ee5j\u4e3a\u7ed3\u5c3e\u7684\u524d\u7f00\n\n\u6b64\u65f6\u6211\u4eec\u53d1\u73b0j\u4e4b\u524d\u7684\u70b9\u7684val\u503c\u5168\u90e8\u5c0f\u4e8e\u7b49\u4e8ei\u7684min\uff0c\u6240\u4ee5\u7b2c\u4e8c\u7ef4\u9650\u5236\u4e5f\u4e0d\u5b58\u5728\u4e86\n\n\u4e0b\u9762\u6211\u4eec\u8003\u8651\u7b2c\u4e09\u7ef4\u9650\u5236\uff0c\u53d1\u73b0\u662f$max_{j}<=val_{i}$\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06j\u4e4b\u524d\u7684\u6240\u6709\u70b9p\u90fd\u5c06\u5404\u81ea\u7684dp\u503c\u63d2\u5165\u5230\u6811\u72b6\u6570\u7ec4\u7684$max_{p}$\u4f4d\u7f6e\u4e0a\uff0c\u6b64\u65f6\u6211\u4eec\u53ea\u9700\u8981\u67e5\u4e00\u53d1\u524d\u7f00\u6700\u5927\u503c\u548ci\u5f53\u524d\u7684dp\u503c\u53d6\u4e2amax\u5c31\u53ef\u4ee5\u5b8c\u6210\u5728l,mid\u8303\u56f4\u5185\u7684\u8f6c\u79fb\u4e86\n\n\u7531\u4e8e\u6211\u4eec\u53d1\u73b0i\u662f\u6309$min_{i}$\u6392\u5e8f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1j\u6307\u9488\u4e0d\u4f1a\u540e\u9000\uff0c\u6811\u72b6\u6570\u7ec4\u91cc\u4e5f\u4e0d\u4f1a\u5220\u9664\u70b9\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u603b\u590d\u6742\u5ea6\u662f$O(LenlogLen)$\u7684\n\n\u4f46\u662f\u6211\u4eec\u5e76\u4e0d\u53ef\u4ee5\u5c31\u6b64\u8fd4\u56de\uff0c\u56e0\u4e3a\u6b64\u65f6l\uff0cr\u5185\u7684dp\u503c\u5e76\u6ca1\u6c42\u5b8c\uff0c\u4f46\u662fl\uff0cmid\u5185\u7684\u503c\u5df2\u7ecf\u6c42\u597d\u4e86\uff0c\u800c\u4e14\u4e5f\u5411mid\uff0cr\u5b8c\u6210\u4e86\u8f6c\u79fb\uff0c\u6240\u4ee5\u6ee1\u8db3\u6211\u4eec\u4f7f\u7528solve(mid\uff0cr)\u7684\u6761\u4ef6\u4e86\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u6b21solve(mid\uff0cr)\u6765\u8bb2mid\u5230r\u8303\u56f4\u5185\u7684dp\u503c\u6c42\u51fa\n\n\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e86l\uff0cr\u5185\u7684\u5168\u90e8dp\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5return\u4e86\n\n\u5982\u679c\u4f60\u8db3\u591f\u719f\u7ec3\u7684\u8bdd\u5f88\u5bb9\u6613\u7684\u5c31\u53ef\u4ee5\u770b\u51fa\u4e0a\u8ff0\u7b97\u6cd5\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9\u7740dp\u503c\u5efa\u4e86\u4e00\u68f5\u7ebf\u6bb5\u6811\u7136\u540e\u8dd1\u4e86\u4e00\u904d\u7ebf\u6bb5\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7136\u540e\u52a8\u6001\u7684\u4fdd\u5b58\u4e86\u4e0b\u6bcf\u4e2a\u533a\u95f4\u7684dp\u503c\u7ed3\u679c\n\n\u6211\u4eecsolve\u51fd\u6570\u5176\u5b9e\u5c31\u662f\u8003\u8651\u4e86\u7ebf\u6bb5\u6811\u4e0a3\u4e2a\u8282\u70b9\u7684\u5173\u7cfb(l,r)(l,mid)(r,mid)\n\n\u540c\u65f6\u5728\u6bcf\u4e2asolve\u51fd\u6570\u7ed3\u675f\u7684\u65f6\u523b\uff0c\u8fd9\u4e2adp\u6570\u7ec4\u5b9e\u9645\u4e0a\u5b58\u50a8\u4e86\u7ebf\u6bb5\u6811\u8fd9\u4e2a\u8282\u70b9\u7684\u5168\u90e8\u4fe1\u606f\n\n\u6240\u4ee5\u6211\u4eec\u6700\u540e\u8981\u505a\u7684\u4e8b\u5c31\u662f\u8c03\u7528\u4e00\u6b21solve(0,n)\u51fd\u6570\uff0c\u6c42\u51fa\u6700\u5927\u7684dp\u503c\u800c\u5df2\n\n~~(\u5e9f\u4e86\u90a3\u4e48\u591a\u8bdd\u5176\u5b9e\u4ee3\u7801\u53ea\u670950\u884c)~~\n\n\u4e0a\u4ee3\u7801~\n\n```\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int N=1e5+10;\nstruct nod{int val;int mi;int ma;int pos;int dp;}a[N];int n;int m;int res=1;\ninline bool cmp1(const nod& a,const nod& b){return a.val<b.val;}//3\u4e2a\u6bd4\u8f83\u51fd\u6570\ninline bool cmp2(const nod& a,const nod& b){return a.mi<b.mi;}\ninline bool cmp3(const nod& a,const nod& b){return a.pos<b.pos;}\nstruct data//\u79bb\u6563\u5316\n{\n    int v;int fr;int tp;\n    friend bool operator <(data a,data b){return a.v<b.v;}\n    friend bool operator ==(data a,data b){return a.v==b.v;}\n}l[3*N];int rk[3*N];int ct;\nstruct trearray//\u6811\u72b6\u6570\u7ec4\n{\n    int ta[3*N];\n    inline void c(int x,int c){for(;x<=3*n;x+=x&(-x)){ta[x]=max(ta[x],c);}}\n    inline void d(int x){for(;x<=3*n;x+=x&(-x)){ta[x]=0;}}\n    inline int  q(int x){int r=0;for(;x>0;x-=x&(-x)){r=max(r,ta[x]);}return r;}\n}ta;\nvoid solve(int l,int r)//solve\u51fd\u6570\n{\n    if(r-l==1){return;}int mid=(l+r)/2;\n    solve(l,mid);sort(a+l+1,a+mid+1,cmp1);sort(a+mid+1,a+r+1,cmp2);\n    for(int i=mid+1,j=l+1;i<=r;i++)//\u53cc\u6307\u9488+\u6811\u72b6\u6570\u7ec4\u8f6c\u79fb\n    {for(;a[j].val<=a[i].mi&&j<=mid;j++){ta.c(a[j].ma,a[j].dp);}a[i].dp=max(a[i].dp,ta.q(a[i].val)+1);}\n    for(int i=l+1;i<=mid;i++){ta.d(a[i].ma);}sort(a+mid+1,a+r+1,cmp3);solve(mid,r);//\u6700\u540e\u522b\u5fd8\u4e86\u628amid\u5230r\u6062\u590d\u4e0b\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){int t;scanf(\"%d\",&t);a[i]=(nod){t,t,t,i,0};}\n    for(int i=1;i<=m;i++)\n    {int x;int t;scanf(\"%d%d\",&x,&t);a[x].mi=min(a[x].mi,t);a[x].ma=max(a[x].ma,t);}\n    for(int i=1;i<=n;i++)//\u79bb\u6563\u5316\n    {l[++ct]=(data){a[i].val,i,0};l[++ct]=(data){a[i].mi,i,1};l[++ct]=(data){a[i].ma,i,2};}\n    sort(l+1,l+3*n+1);rk[1]=1;\n    for(int i=2;i<=3*n;i++){rk[i]=(l[i]==l[i-1])?rk[i-1]:i;}\n    for(int i=1;i<=3*n;i++)\n    {\n        switch(l[i].tp)\n        {\n            case 0:{a[l[i].fr].val=rk[i];break;}\n            case 1:{a[l[i].fr].mi=rk[i];break;}\n            case 2:{a[l[i].fr].ma=rk[i];break;}\n        }\n    }a[1].dp=1;solve(0,n);//\u7136\u540esolve(0,n)\u5c31\u597d\u4e86\n    for(int i=1;i<=n;i++){res=max(res,a[i].dp);}\n    printf(\"%d\",res);return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n```",
        "postTime": 1521974396,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4093 \u3010[HEOI2016/TJOI2016]\u5e8f\u5217\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/aday526/p/solution-p4093.html)  \n\n## Solution\n\u8fd9\u663e\u7136\u662f\u6c42 $\\mathsf{LIS}$ \u7684\u6a21\u677f\u591a\u4e86\u4e24\u7ef4\u9650\u5236\uff0c\u8f6c\u79fb\u65b9\u7a0b\u4e3a $f_i=\\max\\limits_{j<i,a_i\\ge mx_j,mn_i\\ge a_j}f_j+1$\uff0c\u5176\u4e2d $f_i$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff0c$mx_i,mn_i$ \u8868\u793a $a_i$ \u80fd\u53d8\u5316\u5230\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u4ecb\u4e8e $mx_i$ \u548c $mn_i$ \u4e4b\u95f4\u7684\u6570\u90fd\u6ca1\u6709\u7528\u3002  \n\n\u5bf9\u4e8e\u65b9\u7a0b\u7684\u8fd9\u4e09\u4e2a\u9650\u5236\uff0c\u53ef\u4ee5\u5f53\u4e09\u7ef4\u504f\u5e8f\u6765\u505a\uff0c\u6bcf\u6b21\u7528 $f_i$ \u66f4\u65b0 $(a_i,mx_i)$ \u77e9\u5f62\u5185\u7684\u6700\u5927\u503c\uff0c\u67e5\u8be2\u65f6\u67e5 $(mn_i,a_i)$ \u5185\u7684\u6700\u5927\u503c\u5373\u53ef\u3002  \n\n\u5b9e\u73b0\u7684\u8bdd\uff0c\u53ef\u4ee5\u7528 $\\mathsf{CDQ}$ \u5206\u6cbb\u6216\u6811\u5957\u6811\uff0c\u8fd9\u91cc\u6211\u7528\u4e86\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\uff0c\u7528 `pb_ds` \u7684\u54c8\u5e0c\u8868 `gp_hash_table` \u6765\u5b9e\u73b0\u7c7b\u4f3c\u7684\u52a8\u6001\u5f00\u70b9\u3002\n## Code\n```cpp\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/hash_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\nconst int N=1e5+5;\nint n,m,mv,ans,a[N],mn[N],mx[N];\ngp_hash_table<int,int>c[N];\ninline void add(int x,int y,int v){\n\tfor(int i=x;i<=mv;i+=i&-i)\n\t\tfor(int j=y;j<=mv;j+=j&-j)\n\t\t\tc[i][j]=max(c[i][j],v);\n}\ninline int ask(int x,int y){\n\tint res=0;\n\tfor(int i=x;i;i-=i&-i)\n\t\tfor(int j=y;j;j-=j&-j)\n\t\t\tres=max(res,c[i][j]);\n\treturn res;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",a+i),mv=max(mv,mx[i]=mn[i]=a[i]);\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tmx[x]=max(mx[x],y);\n\t\tmn[x]=min(mn[x],y);\n\t\tmv=max(mv,mx[x]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tint res=ask(mn[i],a[i])+1;\n\t\tadd(a[i],mx[i],res);\n\t\tans=max(ans,res);\n\t}printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1630047747,
        "uid": 312393,
        "name": "ADay",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4093 [HEOI2016/TJOI2016]\u5e8f\u5217"
    },
    {
        "content": "\u4e22\u4e2a[\u535a\u5ba2](https://www.zgz233.xyz/2018/01/24/bzoj-4553-tjoi2016heoi2016%E5%BA%8F%E5%88%97/)\u94fe\u63a5\u3002\n\n\n\n\u8bb0 $l_i$ \u4e3a $i$ \u80fd\u5230\u7684\u6700\u5c0f\u72b6\u6001\uff0c$r_i$ \u4e3a\u6700\u5927\u3002\n\n\n\u53d8\u5f62\u7684 $LIS$ \uff0c\u8003\u8651\u4e00\u4e2a\u4e24\u4e2a\u76f8\u90bb\u7684\u72b6\u6001 $i$ \u548c $j$ \uff0c \u4ec0\u4e48\u60c5\u51b5 $j$ \u80fd\u66f4\u65b0 $i$\uff0c\u5373\uff1a\n\n\n$j<i$\n\n$a_j<a_i$\n\n\n$a_j<l_i$\n\n\n$r_j<a_i$\n\n\n\u5b9e\u9645\u4e0a\u53d1\u73b0\u7b2c\u4e8c\u6761\u5305\u542b\u4e8e\u4e09\u56db\u6761\u4e86\u3002\n\n\n\u90a3\u4e48\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u5199\u4e86\u4e2a CDQ \u7ec3\u624b\u3002\u7531\u4e8e\u65f6\u95f4\u9650\u5236\u6bd4\u8f83\u677e\u6240\u4ee5\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u548c 2DT \u4e5f\u80fd\u8fc7...\n\n\n```cpp\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <iomanip>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define N 100010\n#define ll long long\nusing namespace std;\nchar xB[1<<15],*xS=xB,*xT=xB;\n#define getchar() (xS==xT&&(xT=(xS=xB)+fread(xB,1,1<<15,stdin),xS==xT)?0:*xS++)\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\ninline int Mn(int a,int b)\n{return a<b?a:b;}\ninline int Mx(int a,int b)\n{return a>b?a:b;}\nint n,m,p;\nstruct zgz\n{\n    int v,l,r,id;\n    void read_in(int x)\n    {v=l=r=read();id=x,p=Mx(p,v);}\n}b[N],d[N];\ninline bool cmpv(const zgz &a,const zgz &b)\n{return a.v<b.v;}\ninline bool cmpl(const zgz &a,const zgz &b)\n{return a.l<b.l;}\ninline bool cmpid(const zgz &a,const zgz &b)\n{return a.id<b.id;}\nint c[N];\nvoid modify(int x,int v)\n{\n    for(;x<=p;x+=x&(-x))\n    c[x]=Mx(c[x],v);\n}\nint ask(int x)\n{\n    int ret=0;\n    for(;x;x-=x&(-x))\n    ret=Mx(c[x],ret);\n    return ret;\n}\nvoid clear(int x)\n{\n    for(;x<=p;x+=x&(-x))\n    c[x]=0;\n}\nint f[N];\nvoid CDQ(int l,int r)\n{\n    if(l==r)return ;\n    int mid=(l+r)>>1;\n    CDQ(l,mid);\n    sort(b+l,b+mid+1,cmpv),sort(b+mid+1,b+r+1,cmpl);\n    int i=l,j=mid+1;\n    for(;j<=r;j++)\n    {\n        while(i<=mid&&b[i].v<=b[j].l)modify(b[i].r,f[b[i].id]),i++;\n        f[b[j].id]=Mx(f[b[j].id],ask(b[j].v)+1);\n    }\n    while(i>l)i--,clear(b[i].r);\n    sort(b+l,b+r+1,cmpid);\n    CDQ(mid+1,r);\n}\nint ans;\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=n;i++)b[i].read_in(i);\n    for(int i=1;i<=m;i++)\n    {\n        int x=read(),y=read();\n        b[x].l=Mn(b[x].l,y),b[x].r=Mx(b[x].r,y);\n    }\n    for(int i=1;i<=n;i++)f[i]=1;\n    CDQ(1,n);\n    for(int i=1;i<=n;i++)ans=Mx(ans,f[i]);\n    printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1516800861,
        "uid": 30459,
        "name": "\u6d88\u5931\u7684\u6d77\u5cb8\u7ebf",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4093 \u3010[HEOI2016/TJOI2016]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u770b\u4e0a\u53bb\u5c31\u662f\u53ef\u4ee5dp\u7684\u6837\u5b50\u3002\n\n\u8bbe$dp_{i}$\u4e3a\u4ee5i\u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5e8f\u5217\u3002\n\n\u6613\u5f97:$dp_{i}$ = $max(dp_{j})+1$ $(j<=i$&&$Max_{j}<=a_{i}$&&$a_{j}<=Min_{i})$\n\n$Max_{i}$\u548c$Min_{i}$\u8868\u793a\u7b2ci\u4e2a\u70b9\u6240\u6709\u53d8\u5316\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\n\n\u6211\u4eec\u8003\u8651\u7528\u4e00\u4e2a\u4ec0\u4e48\u4e1c\u897f\u6765\u7ef4\u62a4\u8fd9\u4e2adp\u3002\n\n\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u6811\u72b6\u6570\u7ec4\u5957\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u800c\u4e14\u5199\u90a3\u73a9\u610f\u5e94\u8be5\u4e5f\u4e0d\u4f1a\u592a\u957f\u3002\n\n\u7a81\u7136\u60f3\u5230\u6700\u8fd1\u5b66\u4e86CDQ\u3002\n\n\u4e8e\u662f\u8bb2\u4e0bCDQ\u600e\u4e48\u641e\u3002\n\n\u56e0\u4e3a\u6709\u4e24\u4e2a\u4e24\u8fb9\u4e0d\u662f\u540c\u4e00\u4e2a\u6570\u7ec4\u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u5728solve\u7684\u65f6\u5019\uff0c\u8981\u5bf9$[l,mid]$\u548c$[mid+1,r]$\u7684\u6839\u636e\u4e0d\u540c\u7684\u4e24\u4e2a\u6570\u7ec4sort\u4e0b\uff0c\u7136\u540e\u7528\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00max\uff0c\u7b97\u4e0b\u5de6\u8fb9\u5bf9\u53f3\u8fb9\u7684\u8d21\u732e\u3002\n\n\u7136\u540e\u56e0\u4e3a\u662fdp\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5206\u6cbb$[l,mid]$\u548c$[mid+1,r]$\u7136\u540e\u5408\u5e76\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u5206\u6cbb$[l,mid]$\u7136\u540e\u7b97\u597d$[l,mid]$\u5bf9$[mid+1,r]$\u7684\u8d21\u732e\uff0c\u7136\u540e\u518d\u53bb\u5206\u6cbb$[mid+1,r]$ \uff08\u8bb0\u5f97\u53bb\u505a$[mid+1,r]$\u524d\u5148\u628a\u6570\u7ec4$[mid+1,r]$\u6062\u590d\uff09\n\n\u5177\u4f53\u4ee3\u7801\u53ef\u4ee5\u89c1\u6211[\u535a\u5ba2](http://www.cnblogs.com/zykykyk/p/9073893.html)",
        "postTime": 1527081715,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4093 \u3010[HEOI2016/TJOI2016]\u5e8f\u5217\u3011"
    },
    {
        "content": "# \u5e8f\u5217\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4093)\n## \u601d\u8def\n\u6211\u4eec\u53ef\u4ee5\u8bbe$l_i,r_i,v_i$\u5206\u522b\u8868\u793a\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u53d6\u7684\u6700\u5c0f\u503c\uff0c\u6700\u5927\u503c\uff0c\u539f\u503c\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u5e8f\u5217\u53ea\u80fd\u6539\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5217\u51fa$dp$\u65b9\u7a0b:\n\n$$dp[i]=\\max\\{dp[j]\\}+1,i>j\\bigvee l_i\\geq v_j\\bigvee v_i \\geq r_j$$\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u65f6\u95f4\u8fd9\u4e00\u7ef4\u5ea6\u662f\u4e00\u4e2a\u5929\u7136\u7684\u7ef4\u5ea6\uff0c\u6211\u4eec\u4e0d\u7528\u7ba1\u5b83\uff0c\u7136\u540e\u53ef\u4ee5\u76f4\u63a5\u7528$\\text {cdq}$\u5206\u6cbb\u4f18\u5316\u8fd9\u4e2a$\\text {dp}$\u4e86\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n\u8bdd\u8bf4\u8fd9\u662f\u6211\u63a5\u89e6\u7684\u7b2c\u4e00\u9053$\\text {cdq}$\u5206\u6cbb\u4f18\u5316$\\text {dp}$\u3002\u3002\u3002\u679c\u7136\u8fd8\u662f\u6211\u83dc\u4e86\u3002\n## $\\text {Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define MAXN 100005\n\nint n,m;\n\nclass Bit_tree\n{\n\tprivate:\n\t\tint bit[MAXN];\n\t\tint lowbit (int &x){return x & (-x);}\n\tpublic:\n\t\tvoid clearback (int pos){for (Int i = pos;i <= n;i += lowbit (i)) bit[i] = 0;}\n\t\tvoid update (int pos,int x){for (Int i = pos;i <= n;i += lowbit (i)) bit[i] = max (bit[i],x);}\n\t\tint query (int pos){int ans = 0;for (Int i = pos;i;i -= lowbit (i)) ans = max (ans,bit[i]);return ans;}\n}Tree;\n\nstruct node\n{\n\tint v,l,r,Index;//\u5206\u522b\u6bcf\u4e2a\u70b9\u7684\u539f\u6743\u503c\uff0c\u6700\u5927\u6743\u503c\uff0c\u6700\u5c0f\u6743\u503c\uff0c\u7f16\u53f7 \n}a[MAXN];\n\nint dp[MAXN];\n\nbool cmpv (node A,node V){return A.v < V.v;}\nbool cmpl (node A,node V){return A.l < V.l;}\nbool cmpid (node A,node V){return A.Index < V.Index;}\n\nvoid cdq (int l,int r)\n{\n\tif (l == r) return ;\n\tint mid = (l + r) >> 1;\n\tcdq (l,mid);\n\tsort (a + l,a + mid + 1,cmpv),sort (a + mid + 1,a + r + 1,cmpl);\n\tint i = l,j = mid + 1;\n\tfor (;j <= r;++ j)\n\t{\n\t\twhile (i <= mid && a[i].v <= a[j].l) Tree.update (a[i].r,dp[a[i].Index]),i ++;\n\t\tdp[a[j].Index] = max (dp[a[j].Index],Tree.query (a[j].v) + 1);\n\t} \n\twhile (i > l) Tree.clearback (a[-- i].r);\n\tsort (a + mid + 1,a + r + 1,cmpid);\n\tcdq (mid + 1,r);\n}\n\nint read ()\n{\n\tint x = 0;char c = getchar();int f = 1;\n\twhile (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}\n\twhile (c >= '0' && c <= '9'){x = (x << 3) + (x << 1) + c - '0';c = getchar();}\n\treturn x * f;\n}\n\nvoid write (int x)\n{\n\tif (x < 0){x = -x;putchar ('-');}\n\tif (x > 9) write (x / 10);\n\tputchar (x % 10 + '0');\n}\n\nsigned main()\n{\n\tn = read (),m = read ();\n\tfor (Int i = 1;i <= n;++ i) a[i].v = a[i].l = a[i].r = read (),a[i].Index = i;\n\tfor (Int i = 1;i <= m;++ i)\n\t{\n\t\tint x = read (),y = read ();\n\t\ta[x].l = min (a[x].l,y),a[x].r = max (a[x].r,y);\n\t}\n\tfor (Int i = 1;i <= n;++ i) dp[i] = 1;\n\tcdq (1,n);\n\tint maxn = 0;\n\tfor (Int i = 1;i <= n;++ i) maxn = max (maxn,dp[i]);\n\twrite (maxn),putchar ('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1584701939,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4093 \u3010[HEOI2016/TJOI2016]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662fDP\u5e94\u8be5\u4e0d\u96be\u770b\u51fa\u6765\u3002\n\n$dp[i]$\u8868\u793a\u9009\u62e9$i$\u4ee5\u540e\u6240\u80fd\u5f62\u6210\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u5e8f\u5217\u7684\u6700\u5927\u503c\n\n\u8f6c\u79fb\u7684\u65f6\u5019\u679a\u4e3e\u524d\u9762\u7684\u70b9$(j)$\u3002\n\n\u8bbe$MX[i]$\u8868\u793a$i$\u53f7\u4f4d\u7f6e\u80fd\u53d8\u6210\u7684\u6700\u5927\u503c\uff0c$MI[i]$\u8868\u793a$i$\u53f7\u4f4d\u7f6e\u80fd\u53d8\u6210\u7684\u6700\u5c0f\u503c\uff0c$a$\u4e3a\u539f\u5e8f\u5217\n\n\u8fd9\u6837\u8f6c\u79fb\u7684\u65f6\u5019\u4f1a\u6709\u4e24\u4e2a\u9650\u5236\u6761\u4ef6\n\n$a[i]>=MX[j]$ && $MI[i]>=a[j]$\n\n\u8fd9\u5f88\u660e\u663e\u662f\u4e2a\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\u561b\uff0c\u7528CDQ\u6811\u5957\u6811\u4ec0\u4e48\u7684\u90fd\u53ef\u4ee5\u641e\u3002\n\n\u6811\u5957\u6811\u7684\u8bdd\uff0c\u5c06$a$\u62bd\u8c61\u4e3a$x$\u8f74\uff0c\u5c06$MX$\u62bd\u8c61\u4e3a$y$\u8f74\n\n\u8f6c\u79fb\u7684\u65f6\u5019\u6211\u4eec\u5b9e\u9645\u662f\u5728\u5de6\u4e0b\u89d2\u4e3a$(0,0)$\uff0c\u53f3\u4e0a\u89d2\u4e3a$MI[i],a[i]$\u7684\u77e9\u9635\u4e2d\u67e5\u6700\u5927\u503c\n\n\u6bcf\u6b21\u8f6c\u79fb\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u7684\u8bdd\u5b9e\u9645\u4e0a\u53ea\u662f\u6539\u53d8\u4e86$a[i],mx[i]$\u7684\u503c\n\n\u7136\u540e\u5c31\u80fd\u5f88\u81ea\u7136\u7684\u60f3\u5230\u6811\u5957\u6811\u4e86\uff0c\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u6216\u8005\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811\u90fd\u53ef\u4ee5\u641e\n\n \n\n\u540e\u8005\u5e38\u6570\u5c0f\u4e00\u4e9b\n\n\u7ebf\u6bb5\u6811\u7684\u6570\u7ec4\u4e00\u5b9a\u8981\u5f00\u7684\u8db3\u591f\u5927\uff01\uff01\uff01\uff01\n\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=6*1e6+10;\nconst int MAXNN=1e5+10;\nconst int INF=1e8+10;\ninline int read()\n{\n    char c=getchar();int x=0,f=1;\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\nint root[MAXN],N,M,MX[MAXNN],MI[MAXNN],a[MAXNN];\nstruct S\n{\n\tstruct node\n\t{\n\t\tint ls,rs,mx;\n\t}T[MAXN];\n\tint tot;\n\tint query(int now,int ll,int rr,int pos)\n\t{\n\t\tif(ll==rr) \n\t\t\treturn T[now].mx;\n\t\tint mid=ll+rr>>1;\n\t\tif(pos<=mid) \n\t\t\treturn query(T[now].ls,ll,mid,pos);\n\t\telse \n\t\t\treturn max( T[T[now].ls].mx , query(T[now].rs,mid+1,rr,pos));\t\n\t}\n\tvoid change(int &now,int ll,int rr,int pos,int val)\n\t{\n\t\tif(!now) now=++tot;\n\t\tT[now].mx=max(T[now].mx,val);\n\t\tif(ll==rr) return ;\n\t\tint mid=ll+rr>>1;\n\t\tif(pos<=mid) change(T[now].ls,ll,mid,pos,val);\n\t\telse \t\t change(T[now].rs,mid+1,rr,pos,val);\n\t}\n}tree;\nstruct B\n{ \n\tint N;\n\tint Tree[MAXNN];\n\tint lowbit(int p) {return p&(-p);}\n\tint Query(int k,int val)\n\t{\n\t\tint ans=0;\n\t\twhile(k) \n\t\t{\n\t\t\tans=max(ans,tree.query(root[k],1,N,val));\n\t\t\tk-=lowbit(k);\n\t\t}\n\t\treturn ans;\n\t}\n\tvoid Change(int k,int pos,int val)\n\t{\n\t\twhile(k<=N)\n\t\t{\n\t\t\ttree.change(root[k],1,N,pos,val);\n\t\t\tk+=lowbit(k);\n\t\t}\n\t}\n}BIT;\nint main()\n{\n\t//freopen(\"heoi2016_seq.in\",\"r\",stdin);\n\t//freopen(\"heoi2016_seq.out\",\"w\",stdout);\n\tN=read();M=read();\n\tfor(int i=1;i<=N;i++) MX[i]=MI[i]=a[i]=read();\n\tfor(int i=1;i<=M;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\tMX[x]=max(MX[x],y);BIT.N=max(BIT.N,MX[x]);\n\t\tMI[x]=min(MI[x],y);\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tint now=BIT.Query(MI[i],a[i])+1;\n\t\tBIT.Change(a[i],MX[i],now);\n\t\tans=max(ans,now);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n ",
        "postTime": 1518270171,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4093 \u3010[HEOI2016/TJOI2016]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u6709\u4e00\u4e2a\u53d8\u5316\u540e\u7684\u6700\u5927\u503c\u4ee5\u53ca\u4e00\u4e2a\u53d8\u5316\u540e\u7684\u6700\u5c0f\u503c\u3002\u8bbe\u7b2c $i$ \u4f4d\u7684\u503c\u7684\u6700\u5927\u503c\u4f4d $max_i$\uff0c \u6700\u5c0f\u503c\u4e3a $min_i$\uff0c\u539f\u672c\u7684\u503c\u4e3a $o_i$\u3002\u90a3\u4e48\u4e3a\u4e86\u4fdd\u8bc1\u7b2c $i$ \u4e2a\u6570\u65e0\u8bba\u600e\u6837\u53d8\u5316\u90fd\u5c0f\u4e8e\u7b2c $j$ \u4e2a\u6570\uff0c\u90a3\u4e48\u9700\u8981\u4fdd\u8bc1\uff1a\n\n+ $o_i<min_j$\n+ $max_i<o_j$\n\n\u4e8e\u662f\u6211\u4eec\u6109\u5feb\u7684\u53d1\u73b0\u8fd9\u5c31\u662f\u6c42\u4e09\u7ef4\u504f\u5e8f\u6c42 LIS\u3002\u4e8e\u662f\u76f4\u63a5\u5957\u7528 cdq \u5206\u6cbb\u3002\u5728\u8ba1\u7b97\u5de6\u90e8\u5bf9\u53f3\u90e8\u8d21\u732e\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u66f4\u65b0\u53f3\u8fb9\u7684 dp \u6570\u7ec4\u5373\u53ef\u3002\n\n**\u7ec6\u8282\uff1a\u6ce8\u610f\u8981\u5148\u7b97\u5de6\u8fb9\uff0c\u7136\u540e\u66f4\u65b0\u53f3\u8fb9\uff0c\u6700\u540e\u518d\u9012\u5f52\u53f3\u8fb9\u3002**\n\n\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u5728\u9012\u5f52\u53f3\u9762\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u4e86\u53f3\u9762\u7684\u90e8\u5206\u6570\u636e\u6765\u66f4\u65b0\u53f3\u9762\u7684\u53e6\u4e00\u534a\u6570\u636e\u3002\u800c\u5c1a\u672a\u8ba1\u7b97\u5de6\u8fb9\u5bf9\u53f3\u8fb9\u8d21\u732e\u65f6\uff0c\u53f3\u8fb9\u7684 dp \u6570\u7ec4\u5c1a\u672a\u66f4\u65b0\uff0c\u4e0d\u80fd\u7528\u6765\u8ba1\u7b97\u5176\u5b83\u7684\u6570\u636e\u3002\n\n[Code Here](https://www.luogu.com.cn/paste/k65l6i5j)",
        "postTime": 1590214752,
        "uid": 319914,
        "name": "Aftershock",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4093 \u3010[HEOI2016/TJOI2016]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u539f\u6765\u5f88\u6c34\u7684\uff1f\n\n# noteskey\n\n\u4e00\u5f00\u59cb\u4ee5\u4e3a\u662f\u987a\u5e8f\u7684 m \u4e2a\u4fee\u6539\uff0c\u7136\u540e\u9009\u51fa\u4e00\u6bb5\u6700\u957f\u5b50\u5e8f\u5217\u4f7f\u5f97\u6bcf\u6b21\u4fee\u6539\u540e\u90fd\u6ee1\u8db3\u4e0d\u964d\n\n\u8fd9 TM \u6839\u672c\u4e0d\u53ef\u505a\u554a\uff01 \u4e8e\u662f\u5c31\u53bb\u770b\u9898\u89e3\u4e86\uff0c\u7136\u540e\u770b\u5230\u8f6c\u79fb\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u7684\u6211\u53d1\u51fa\u4e86\u9ed1\u4eba\u95ee\u53f7...\n\n\u7136\u540e\u624d\u53d1\u73b0\u539f\u6765\u662f\u6c42\u7684\u5b50\u5e8f\u5217\u662f\u6ee1\u8db3\u4efb\u610f\u4e00\u6b21\u4fee\u6539\u540e\u4e0d\u964d...\n\n\u4e8e\u662f\u5217\u51fa\u4e24\uff08san\uff09\u4e2a\u6761\u4ef6\u5f0f\u5b50\uff0c\u5c31\u53ef\u4ee5 CDQ \u5207\u6389\u4e86 QWQ\n\n> $j<i$\n\n> $a_j<min_i$\n\n> $max_j<a_i$\n\n\u8fd9\u91cc\u7684 max \u548c min \u5c31\u662f\u67d0\u4e2a\u4f4d\u7f6e\u4e0a\u51fa\u73b0\u8fc7\u7684\u6700 \u5927/\u5c0f \u503c\n\n\n\n# watch out\n\n\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f CDQ \u5148\u5904\u7406\u5de6\u534a\u90e8\u5206\u518d\u5904\u7406\u5f53\u524d\u90e8\u5206\u518d\u5904\u7406\u53f3\u534a\u90e8\u5206\uff0c\u5426\u5219\u5de6\u534a\u90e8\u5206\u5bf9\u53f3\u534a\u90e8\u5206\u7684\u8d21\u732e\u5c31\u4f1a\u51fa\u9505\n\n\n\u8fd8\u6709\u5c31\u662f\u770b\u6e05\u695a\u9898\u76ee\uff0c\u522b\u4ea4\u9519\u9898\uff0c\u6211\u5c31\u662f\u90a3\u4e2a\u4ea4\u9519\u9898 RE \u4e86\u5341\u51e0\u6b21\u7684...\n\n\n# code\n\n\u53ef\u80fd\u67d0\u4e2a\u5408\u5e76\u8fd8\u6709\u4f18\u5316\u7684\u7a7a\u95f4\uff1f\u3010\u96fe\n\n```cpp\n//by Judge\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define Rg register\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(Rg int i=(a),I=(b)-1;i>I;--i)\n#define ll long long\nusing namespace std;\nconst int M=1e5+3;\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline bool cmax(int& a,int b){return a<b?a=b,1:0;}\ninline bool cmin(int& a,int b){return a>b?a=b,1:0;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} int n,m,p,ans,f[M],c[M];\nstruct node{ int x,l,r,id;\n\tinline void init(int iid){\n\t\tx=l=r=read(),id=iid,cmax(p,x);\n\t}\n}a[M];\ninline bool cmpx(node& a,node& b){return a.x<b.x;}\ninline bool cmpl(node& a,node& b){return a.l<b.l;}\ninline bool cmpid(node& a,node& b){return a.id<b.id;}\ninline void clear(int x){for(;x<=p;x+=x&-x) c[x]=0;}\ninline void update(int x,int d){for(;x<=p;x+=x&-x) cmax(c[x],d);}\ninline int query(int x,int s=0){for(;x;x^=x&-x) cmax(s,c[x]);return s;}\nvoid CDQ(int l,int r){ if(l==r) return ; int mid=(l+r)>>1;\n\tCDQ(l,mid),sort(a+l,a+1+mid,cmpx),sort(a+1+mid,a+1+r,cmpl);\n\tRg int i=l,j=mid+1;\n\tfor(;j<=r;++j){\n\t\twhile(i<=mid&&a[i].x<=a[j].l)\n\t\t\tupdate(a[i].r,f[a[i].id]),++i;\n\t\tcmax(f[a[j].id],query(a[j].x)+1);\n\t}\n\twhile(i>l) --i,clear(a[i].r); j=r,i=l;\n\tsort(a+l,a+1+r,cmpid);\n\tCDQ(mid+1,r);\n}\nint main(){ n=read(),m=read(); Rg int x,y;\n\tfp(i,1,n) a[i].init(i),f[i]=1;\n\tfp(i,1,m) x=read(),y=read(),\n\t\tcmin(a[x].l,y),cmax(a[x].r,y);\n\tCDQ(1,n); fp(i,1,n) cmax(ans,f[i]);\n\treturn !printf(\"%d\\n\",ans);\n}\n```\n",
        "postTime": 1555977858,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4093 \u3010[HEOI2016/TJOI2016]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u628a\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c\u653e\u5230\u7ed3\u6784\u4f53\u4e2d\uff0c$a_i$ \u8868\u793a\u539f\u503c\uff0c$b_i$ \u8868\u793a\u80fd\u53d6\u5230\u7684\u6700\u5c0f\u503c\uff0c$c_i$ \u8868\u793a\u80fd\u53d6\u5230\u7684\u6700\u5927\u503c\u3002\u8003\u8651\u4ec0\u4e48\u6837\u7684\u4e24\u4e2a\u4f4d\u7f6e $i,j$ \u53ef\u4ee5\u5728\u7b54\u6848\u7684\u5e8f\u5217\u4e2d\u76f8\u90bb\uff0c\u663e\u7136\u8981\u6ee1\u8db3\n\n1. $c_j\\leq a_i$\n\n2. $a_j\\leq b_i$\n\n3. $j<i$\n\n\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u91c7\u7528 cdq \u5206\u6cbb\u89e3\u51b3\u3002\n\ncdq \u53ef\u4ee5\u76f4\u63a5\u89e3\u51b3\u6761\u4ef6 $3$\uff0c\u5728\u8ba1\u7b97 [ $l,mid$ ] \u5bf9 [ $mid+1,r$ ] \u7684\u8d21\u732e\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9 [ $l,mid$ ] \u6309 $a$ \u6392\u5e8f\uff0c\u8ba9 [ $mid+1,r$ ] \u6309 $b$ \u6392\u5e8f\uff0c\u91c7\u53d6\u53cc\u9488\u7684\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u6761\u4ef6 $2$\uff0c\u6700\u540e\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u5b58 $c$ \u4f4d\u7f6e\u7684 dp \u6700\u5927\u503c\uff0c\u89e3\u51b3\u4e86\u6761\u4ef6 $1$\u3002\n\n\u4e0b\u9762\u662f AC \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n#define lowbit(i) (i&-i)\n\nint n,m,mx,f[100005],ans,t[100005];\nstruct node{\n\tint a,b,c,u;\n}q[100005],q0[100005];\n\nbool cmpa(node x,node y)\n{\n\treturn x.a<y.a;\n}\n\nbool cmpb(node x,node y)\n{\n\treturn x.b<y.b;\n}\n\nvoid fix(int x,int v)\n{\n\tfor(int i=x;i<=mx;i+=lowbit(i))\n\t\tif(v==-1)\n\t\t\tt[i] = 0;\n\t\telse\n\t\t\tt[i] = max(t[i],v);\n}\n\nint ask(int x)\n{\n\tint s=0;\n\tfor(int i=x;i>=1;i-=lowbit(i))\n\t\ts = max(s,t[i]);\n\treturn s;\n}\n\nvoid cdq_(int l,int r)\n{\n\tif(l==r)\n\t\treturn;\n\tint mid=l+r>>1;\n\tcdq_(l,mid);\n\tsort(q+l,q+1+mid,cmpa), sort(q+1+mid,q+1+r,cmpb);\n\tfor(int i=mid+1,j=l;i<=r;i++)\n\t{\n\t\twhile(j<=mid && q[j].a<=q[i].b)\n\t\t\tfix(q[j].c,f[q[j].u]), j++;\n\t\tf[q[i].u] = max(f[q[i].u],ask(q[i].a)+1);\n\t}\n\tfor(int i=l;i<=mid;i++)\n\t\tfix(q[i].c,-1);\n\tfor(int i=l;i<=r;i++)\n\t\tq[i] = q0[i];\n\tcdq_(mid+1,r);\n}\n\nsigned main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n&&cin>>q[i].a;i++)\n\t\tq[i].b = q[i].c = q[i].a, q[i].u = i, mx = max(mx,q[i].a);\n\tfor(int i=1,x,y;i<=m&&cin>>x>>y;i++)\n\t\tq[x].b = min(q[x].b,y), q[x].c = max(q[x].c,y), mx = max(mx,y);\n\tfor(int i=1;i<=n;i++)\n\t\tf[i] = 1, q0[i] = q[i];\n\tcdq_(1,n);\n\tfor(int i=1;i<=n;i++)\n\t\tans = max(ans,f[i]);\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n```\n\n\u795d\u5927\u5bb6 AC \u6109\u5feb\uff01",
        "postTime": 1626270288,
        "uid": 123298,
        "name": "kouylty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3\u3010P4093 [HEOI/TJOI2016]\u5e8f\u5217\u3011"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\n\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u4e0d\u8fc7\u662f\u6c38\u4e45\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u800c\u4e14\u6bcf\u6b21\u53d8\u5316\u53ea\u80fd\u6539\u4e00\u4e2a\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e i \u548c j\uff0ci \u5904\u6240\u6709\u503c\u90fd\u8981\u5c0f\u4e8e\u7b49\u4e8e j \u5904\uff0cj \u5904\u6240\u6709\u503c\u90fd\u8981\u5927\u4e8e\u7b49\u4e8e i \u5904\u624d\u53ef\u4ee5\u3002\n## 50pts \u505a\u6cd5\n\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u6613\u5f97\u57fa\u7840 DP\uff1a\n\n$$f_i=\\max(f_i,f_j+1)$$\n\n\u6761\u4ef6\uff1a\n\n1. $maxx_j \\leq a_i$\n2. $minn_i \\leq a_j$\n3. $1 \\leq j < i$\n\n\u8fd9\u91cc f \u8868\u793a\u4ee5 i \u4e3a\u7ed3\u5c3e\u6700\u5927\u7684\u5e8f\u5217\u957f\u5ea6\uff0c a \u8868\u793a\u8be5\u4f4d\u7f6e\u521d\u59cb\u503c\uff0cmaxn \u548c minn \u5206\u522b\u8868\u793a\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u51fa\u73b0\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\n\n\u5982\u679c\u60a8\u63a8\u4e0d\u51fa\u8fd9\u4e00\u70b9\uff0c\u5efa\u8bae\u5148\u5b66\u7ebf\u6027 DP \u3002\u3002\u3002\n\n$\\mathcal O(n^2)$ \u7684\u57fa\u7840 DP \u53ef\u4ee5\u62ff\u5230 50pts\u3002\n\n### code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a[100010],maxx[100001],minn[100001],tot[100001],ans;\nnamespace AYX\n{\tinline short main()\n\t{\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;++i)scanf(\"%d\",&a[i]),maxx[i]=minn[i]=a[i];\n\t\tfor(int i=1;i<=m;++i)\n\t\t{\tint pos,x;\n\t\t\tscanf(\"%d%d\",&pos,&x);\n\t\t\tmaxx[pos]=max(maxx[pos],x);\n\t\t\tminn[pos]=min(minn[pos],x);\n\t\t}\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\ttot[i]=1;\n\t\t\tfor(int j=1;j<i;++j)\n\t\t\tif(a[j]<=minn[i] and maxx[j]<=a[i])tot[i]=max(tot[i],tot[j]+1);\n\t\t\tans=max(ans,tot[i]);\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t\treturn 0;\n\t}\n}\nsigned main()\n{return AYX::main();\n}\n```\n## \u4e0b\u9762\u662f 100pts \u505a\u6cd5\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e dp \u8f6c\u79fb\u7684\u6761\u4ef6\uff1a\n\n1. $maxn_i\\le a_i$\n2. $a_j \\le minn_i$\n3. $j<i$\n\n\u8fd9\u5b9e\u9645\u4e0a\u6784\u6210\u4e86\u4e09\u7ef4\u504f\u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 CDQ \u5206\u6cbb\u6765\u4f18\u5316 DP \u7684\u8f6c\u79fb\u3002\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u6a21\u677f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4 max \u503c\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\u662f $j<i$ \u8fd9\u4e2a\u6761\u4ef6\uff0c\u5728 sort \u8fc7\u7a0b\u4e2d\uff0cid \u7684\u4f4d\u7f6e\u4f1a\u88ab\u6253\u4e71\uff0c\u8fd9\u6837\u53ef\u80fd\u5bfc\u81f4\u540e\u9762\u5411\u524d\u9762\u8f6c\u79fb\uff0c\u4f1a  WA \u3002\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u529e\u5462\uff1f CDQ  \u65f6\u6253\u4e71\u4e86\u987a\u5e8f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u672c\u6b21 CDQ \u8fc7\u7a0b\u540e\u4e0b\u4e00\u4e2a CDQ \u524d\u628a\u4f4d\u7f6e\u53d8\u56de\u6765\u5373\u53ef\u3002\n\n\u5177\u4f53\u5b9e\u73b0\uff1a\u3000`sort(p+mid+1,p+r+1,cmp3);` \n\ncmp3 \uff1a\u3000`return i.id<j.id;`\n\n\u8fd9\u6837\u8fd9\u9053\u9898\u5c31\u5b8c\u7f8e\u89e3\u51b3\u4e86\u3002\n\n### code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,f[1000001],ans,c[1000001],nn;\nstruct LCIS\n{int a,maxn,minn,id;}p[1000001];\nnamespace AYX\n{\tinline bool cmp1(LCIS i,LCIS j)\n\t{return i.maxn<j.maxn;}\n\tinline bool cmp2(LCIS i,LCIS j)\n\t{return i.a<j.a;}\n\tinline bool cmp3(LCIS i,LCIS j)\n\t{return i.id<j.id;}\n\tinline void add(int x,int val)\n\t{for(int i=x;i<=n;i+=i&-i)c[i]=max(c[i],val);}\n\tinline int query(int x)\n\t{int res=0;for(int i=x;i;i-=i&-i)res=max(res,c[i]);return res;}\n\tinline void clear(int x)\n\t{for(int i=x;i<=n;i+=i&-i)c[i]=0;}\n\tinline void CDQ(int l,int r)\n\t{\tif(l==r){f[p[l].id]=max(f[p[l].id],1);return ;}\n\t\tint mid=(l+r)>>1;\n\t\tCDQ(l,mid);\n\t\tsort(p+l,p+mid+1,cmp1);\n\t\tsort(p+mid+1,p+r+1,cmp2);\n\t\tint j=l;\n\t\tfor(int i=mid+1;i<=r;++i)\n\t\t{\twhile(j<=mid and p[j].maxn<=p[i].a)add(p[j].a,f[p[j].id]),++j;\n\t\t\tf[p[i].id]=max(f[p[i].id],query(p[i].minn)+1);\n\t\t}\n\t\tfor(int i=l;i<j;++i)clear(p[i].a);\n\t\tsort(p+mid+1,p+r+1,cmp3);\n\t\tCDQ(mid+1,r);\n\t}\n\tinline short main()\n\t{\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;++i)scanf(\"%d\",&p[i].a),p[i].maxn=p[i].minn=p[i].a,p[i].id=i;\n\t\tfor(int i=1;i<=m;++i)\n\t\t{\tint pos,x;\n\t\t\tscanf(\"%d%d\",&pos,&x);\n\t\t\tp[pos].maxn=max(p[pos].maxn,x);\n\t\t\tp[pos].minn=min(p[pos].minn,x);\n\t\t}\n\t\tCDQ(1,n);\n\t\tfor(int i=1;i<=n;++i)ans=max(ans,f[i]);\n\t\tprintf(\"%d\\n\",ans);\n\t\treturn 0;\n\t}\n}\nsigned main()\n{return AYX::main();\n}\n\n```\n\n\u4fee\u6539\u4e86 $\\LaTeX$ \uff0c\u671b\u901a\u8fc7\uff0c\u8c22\u8c22\u3002\u3002",
        "postTime": 1624415492,
        "uid": 464886,
        "name": "hzoi_zxb",
        "ccfLevel": 0,
        "title": "HEOI2016 \u5e8f\u5217"
    },
    {
        "content": "### [$$blog$$](https://www.cnblogs.com/hbxblog/p/10253236.html)\n---\n### \u9898\u76ee\u94fe\u63a5\n[\u6233\u8fd9](https://www.luogu.org/problemnew/show/P4093)\n\n### Solution \n\n\u9996\u5148\u8003\u8651\u6700\u66b4\u529b\u7684dp\n\u6211\u4eec\u8bbe:\n$f[i]$\u8868\u793a\u9009\u62e9$i$\u4ee5\u540e\u6240\u80fd\u5f62\u6210\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u5e8f\u5217\u7684\u6700\u5927\u503c\n$minx[i]$\u8868\u793a$i$\u80fd\u8f6c\u6362\u4e3a\u7684\u6700\u5c0f\u503c\n$maxx[i]$\u8868\u793a$i$\u80fd\u8f6c\u6362\u4e3a\u7684\u6700\u5927\u503c\n\n\u4e8e\u662f\u8f6c\u79fb\u7684\u6761\u4ef6\u663e\u7136\u4e86:\n1. $i>j$\n2. $minx[i]>=a[j]$\n3. $a[i]>=maxx[i]$\n\n\u5bf9\u4e8e\u66b4\u529b\u76f4\u63a5\u679a\u4e3ej\u8f6c\u79fb\u5c31\u597d\u4e86,\u4f46\u5374\u53ea\u670950\u5206,\u60f3\u60f3\u6b63\u89e3\u3002\n\u6761\u4ef6\u5f88\u660e\u663e\u662f\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\u554a\u3002\u6211\u4eec\u53ef\u4ee5\u968f\u4fbf\u7528\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\uff1a\n\u5982: cdq\u5206\u6cbb,\u6811\u5957\u6811\u4ec0\u4e48\u7684\u3002\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\n\n### code\n\u7ebf\u6bb5\u6811+\u6811\u72b6\u6570\u7ec4\n``` cpp\n#include<bits/stdc++.h>\n#define rg register\n#define file(x) freopen(x\".in\",\"r\",stdin);freopen(x\".out\",\"w\",stdout);\nusing namespace std;\nint read() {\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9') f=(c=='-')?-1:1,c=getchar();\n\twhile(c>='0'&&c<='9') x=x*10+c-48,c=getchar();\n\treturn f*x;\n}\nstruct node {\n\tint l,r,v;\n} a[100001*100];\nint tot,root[100010];\nvoid update(int &k,int l,int r,int pos,int v) {\n\tif(k==0)\n\t\tk=++tot;\n\ta[k].v=max(a[k].v,v);\n\tif(l==r)\n\t\treturn ;\n\tint mid=(l+r)>>1;\n\tif(pos<=mid) update(a[k].l,l,mid,pos,v);\n\telse update(a[k].r,mid+1,r,pos,v);\n}\nint find(int k,int l,int r,int begin,int end) {\n\tif(k==0)\n\t\treturn 0;\n\tif(l==begin&&r==end)\n\t\treturn a[k].v;\n\tint mid=(l+r)>>1;\n\tif(end<=mid)\n\t\treturn find(a[k].l,l,mid,begin,end);\n\telse if(begin>mid)\n\t\treturn find(a[k].r,mid+1,r,begin,end);\n\telse return max(find(a[k].l,l,mid,begin,mid),find(a[k].r,mid+1,r,mid+1,end));\n}\n#define lowbit(x) (x&(-x))\nvoid add(int x,int y,int v) {\n\twhile(x<=100005)\n\t\tupdate(root[x],1,100005,y,v),x+=lowbit(x);\n}\nint sum(int x,int y) {\n\tint js=0;\n\twhile(x)\n\t\tjs=max(find(root[x],1,100005,1,y),js),x-=lowbit(x);\n\treturn js;\n}\nint b[100010],minx[100010],maxx[100010];\nint main() {\n\tint n=read(),m=read(),x,y,ans=0;\n\tfor(int i=1; i<=n; i++)\n\t\tb[i]=minx[i]=maxx[i]=read();\n\tfor(int i=1; i<=m; i++)\n\t\tx=read(),y=read(),maxx[x]=max(maxx[x],y),minx[x]=min(minx[x],y);\n\tfor(int i=1; i<=n; i++) {\n\t\tint js=sum(minx[i],b[i])+1;\n\t\tans=max(ans,js);\n\t\tadd(b[i],maxx[i],js);\n\t}\n\tcout<<ans;\n}\n```\n\n",
        "postTime": 1547136506,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4093 \u3010[HEOI2016/TJOI2016]\u5e8f\u5217\u3011"
    },
    {
        "content": "\u6211\u4eec\u8bbe$maxv_i$\u4e3a\u7b2c$i$\u4e2a\u6570\u53d8\u5316\u7684\u6700\u5927\u503c;$minv_i$\u4e3a\u7b2c$i$\u4e2a\u6570\u53d8\u5316\u7684\u6700\u5c0f\u503c,$a_i$\u4f4d\u539f\u6765\u7684\u6570\u503c\n\n\u5219\u9898\u76ee\u8981\u6c42\u8f6c\u5316\u4e3a,\u6c42\u4e00\u4e2a\u6700\u957f\u7684\u5e8f\u5217,\u4f7f\u4e00\u4e0b\u6761\u4ef6\u6ee1\u8db3\n- $j<i$\n- $max(a_j,maxv_j) \\le a_i$\n- $a_j\\le min(a_i,minv_i)$\n\n\u90a3\u8fd9\u79cd\u4e0d\u7b49\u5f0f\u95ee\u9898\u5c31\u80fd\u8f6c\u5316\u4e3a\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2aj,\u6211\u4eec\u6bcf\u4e00\u6b21\u5c31\u53ef\u4ee5\u5728\u5e73\u9762\u5185\u52a0\u4e00\u4e2a\u5750\u6807\u4e3a$(maxv_j,a_j)$\u7684\u6743\u503c\u4e3a$dp_j$\u70b9,\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8f6c\u79fb,\u53ef\u4ee5\u4ece$(0,0)$\u5230$(a_i,minv_i)$\u4e2d\u627e\u5230\u4e00\u4e2a\u70b9\u6743\u6700\u5927\u7684\u70b9,\u5f53\u524d\u70b9\u7b54\u6848\u5c31\u662f\u627e\u5230\u70b9\u7684\u6743\u503c+1\u3002\n\n\u627e\u70b9\u5c31\u80fd\u7528\u5f88\u591a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4,cdq\u5206\u5236\u6811\u5957\u6811,k-d tree\u90fd\u53ef\u4ee5,\u8fd9\u91cc\u6211\u7528\u4e86**\u6811\u72b6\u6570\u7ec4\u5957treap**,\u76f8\u6bd4\u4e8e\u5957\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811,\u5e73\u8861\u6811\u6bd4\u7ebf\u6bb5\u6811\u7a7a\u95f4\u66f4\u5c0f,\u7a7a\u95f4\u590d\u6742\u5ea6$O(nlogn)$\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<stack>\n#include<vector>\n#include<cstring>\n#include<queue>\n#include<bitset>\nusing namespace std;\nconst int maxn=150000+23333;\ntypedef long long ll;\ninline int read(){\n    int an=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch<='9'&&ch>='0'){an=an*10+(ch^48);ch=getchar();}\n    return an*f;\n}\n/*\nj<i\na_j<a_i\na_j<min_{a_i}\nmax_{a_j}<a_i\nf_i=max(f_i,f_j+1)\n*/\nint n,m;\nint a[maxn],b[maxn],c[maxn],maxv;\nint dp[maxn];\nstruct Treap{\n    int ran[maxn<<3],l[maxn<<3],r[maxn<<3],v[maxn<<3],w[maxn<<3],cnt,ma[maxn<<3];\n    inline void update(int k){ma[k]=max(ma[r[k]],max(w[k],ma[l[k]]));}\n    inline void l_change(int &k){int t=r[k];r[k]=l[t];l[t]=k;update(k);update(t);k=t;}\n    inline void r_change(int &k){int t=l[k];l[k]=r[t];r[t]=k;update(k);update(t);k=t;}\n    inline void insert(int &k,int x,int val){\n        if(!k){cnt++;k=cnt;ran[k]=rand();ma[k]=w[k]=val;v[k]=x;return;}\n        else if(v[k]==x)w[k]=max(w[k],val);\n        else if(x<v[k]){insert(l[k],x,val);if(ran[l[k]]<ran[k])r_change(k);}\n        else {insert(r[k],x,val);if(ran[r[k]]<ran[k])l_change(k);}\n        update(k);\n    }\n    inline int query(int k,int x){\n        int re=0;\n        for(;k;){\n            if(v[k]>x)k=l[k];\n            else re=max(re,max(ma[l[k]],w[k])),k=r[k];\n        }\n        return re;\n    }\\\\\u524d\u9a71\u6700\u5927\n}t;\nstruct BIT{\n    int root[maxn];\n    inline int query(int k,int x){\n        int re=0;\n        for(;k;k-=k&-k)\n        re=max(re,t.query(root[k],x));\n        return re;\n    }\n    inline void add(int k,int x,int val){\n        for(;k<=maxv;k+=k&-k)t.insert(root[k],x,val);\n    }\n}T;\nint ans;\nint main(){\n    srand(233333);\n    n=read();m=read();\n    for(int i=1;i<=n;i++)b[i]=c[i]=a[i]=read();\n    for(int i=1;i<=m;i++){\n        int x=read(),y=read();\n        b[x]=min(b[x],y);c[x]=max(c[x],y);\n    }\n    for(int i=1;i<=n;i++)maxv=max(maxv,c[i]);\n    for(int i=1;i<=n;i++){\n        int x=T.query(b[i],a[i]);\n        dp[i]=x+1;\n        T.add(a[i],c[i],dp[i]);\n        ans=max(ans,dp[i]);\n    }\n    cout<<ans;\n    return 0;\n}\n```\n~~\u6811\u5957\u6811\u5c31\u662f\u4e00\u4e2d\u601d\u60f3,\u5177\u4f53\u5b9e\u73b0\u8981\u9760\u81ea\u5df1\u9886\u609f~~",
        "postTime": 1518344023,
        "uid": 24570,
        "name": "s_a_b_e_r",
        "ccfLevel": 0,
        "title": "P4093 [HEOI2016/TJOI2016]\u5e8f\u5217"
    },
    {
        "content": "$O(n^2)$DP\u5f88\u597d\u5199\uff0c\u5bf9\u4e8e\u5f53\u524d\u7684i\u4ece\u4e4b\u524d\u6ee1\u8db3\u6761\u4ef6\u7684j\u4e2d\u9009\u4e00\u4e2a\u6700\u5927\u503c,$dp[i]=d[j]+1$\n```cpp\n for(int j=1; j<i; ++j)\n\tif(a[j]<=minv[i]&&maxv[j]<=a[i])//\u5e8f\u5217\u53ea\u4f1a\u53d8\u6362\u4e00\u6b21 \n\t\tdp[i]=max{dp[j]+1};\n```\n\u8f6c\u79fb\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a$a[j]<=minv[i]\\ \\&\\&\\ maxv[j]<=a[i]$\n\n\u8fd9\u662f\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\uff0cCDQ\u3001\u6811\u5957\u6811\u90fd\u53ef\u4ee5\u3002\n\n\u62ff$minv[x]$\u548c$a[y]$\u4f5c\u4e3a\u4e24\u4e2a\u5750\u6807\u8f74\uff0c$dp[j]$\u8868\u793a\u5176\u4e0a\u4e00\u70b9$(A[j],maxv[j])$.\n\n\u8fd9\u6837\u5c31\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\uff0c\u53ef\u4ee5\u5411\u5176\u4e2d\u63d2\u5165\u4e00\u4e9b\u70b9dp[i]\uff0c\u8be2\u95ee\u4e00\u4e2a\u77e9\u5f62\u533a\u57df(\u4e5f\u662f\u4e00\u6bb5\u524d\u7f00)\u4e2d\u67d0\u70b9\u6700\u5927\u503c \n\n\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811 \u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811\u90fd\u53ef\u505a \u590d\u6742\u5ea6$O(nlog^2n)$\n\n\u524d\u8005\u5e38\u6570\u592a\u5927\uff0c\u7a7a\u95f4\u6d88\u8017\u5927\uff1b\u540e\u8005\u4f18\u8bb8\u591a\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n#define gc() getchar()\n#define now node[rt]\n#define lson l,m,node[rt].ls\n#define rson m+1,r,node[rt].rs\n#define lb(x) ((x)&-(x))\nconst int N=1e5+5;\n\nint n,m,A[N],minv[N],maxv[N],MaxV,MaxA;\nnamespace Tree_2D\n{\n\tstruct Seg_Tree\n\t{\n\t\tstruct Node\n\t\t{\n\t\t\tint maxv,ls,rs;\n\t\t}node[N<<6];//\u8fd8\u8981\u518d\u5c0f\u70b9\u3002\u3002\u4e0d\u7136BZOJ\u4e0a\u4f9d\u65e7MLE \n\t\tinline int new_Node()\n\t\t{\n\t\t\tstatic int cnt=0;\n\t\t\treturn ++cnt;\n\t\t}\n\t\tvoid Insert(int l,int r,int &rt,int p,int v)\n\t\t{\n\t\t\tif(!rt) rt = new_Node();\n\t\t\tnow.maxv = std::max(now.maxv, v);\n\t\t\tif(l<r)\n\t\t\t{\n\t\t\t\tint m=l+r>>1;\n\t\t\t\tif(p<=m) Insert(lson,p,v);\n\t\t\t\telse Insert(rson,p,v);\n\t\t\t}\n\t\t}\n\t\tint Query(int l,int r,int rt,int L,int R)\n\t\t{\n\t\t\tif(!rt) return 0;\n\t\t\tif(L<=l && r<=R) return now.maxv;\n\t\t\tint m=l+r>>1;\n\t\t\tif(L<=m)\n\t\t\t\tif(m<R) return std::max(Query(lson,L,R),Query(rson,L,R));\n\t\t\t\telse return Query(lson,L,R);\n\t\t\treturn Query(rson,L,R);\n\t\t}\n\t}t;\n\tstruct Bit\n\t{\n\t\tint root[N];\n\t\tvoid Insert(int p,int y,int v)\n\t\t{\n\t\t\twhile(p<=MaxV)\n\t\t\t\tt.Insert(1,MaxA,root[p],y,v), p+=lb(p);\n\t\t}\n\t\tint Query(int p,int y)\n\t\t{\n\t\t\tint res=0;\n\t\t\twhile(p)\n\t\t\t\tres=std::max(res,t.Query(1,MaxA,root[p],1,y)), p-=lb(p);\n\t\t\treturn res;\n\t\t}\n\t}t2D;\n}\n#undef now\ninline int read()\n{\n\tint now=0;register char c=gc();\n\tfor(;!isdigit(c);c=gc());\n\tfor(;isdigit(c);now=now*10+c-'0',c=gc());\n\treturn now;\n}\n\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1; i<=n; ++i)\n\t\tmaxv[i]=minv[i]=A[i]=read(), MaxA=std::max(MaxA,A[i]);\n\tfor(int x,y,i=1; i<=m; ++i)\n\t\tx=read(), y=read(), maxv[x]=std::max(maxv[x],y), minv[x]=std::min(minv[x],y);\n\tfor(int i=1; i<=n; ++i) MaxV=std::max(MaxV,maxv[i]);\n\tint ans=0;\n\tfor(int v,i=1; i<=n; ++i)\n\t{\n\t\tv = Tree_2D::t2D.Query(minv[i], A[i]) + 1;\n\t\tTree_2D::t2D.Insert(A[i], maxv[i], v);\n\t\tans = std::max(ans, v);\n\t}\n\tprintf(\"%d\",ans);\n\n\treturn 0;\n}\n```",
        "postTime": 1518316752,
        "uid": 39887,
        "name": "SovietPower\u2728",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4093 \u3010[HEOI2016/TJOI2016]\u5e8f\u5217\u3011"
    },
    {
        "content": "### \u9898\u89e3\n\n\u5f88\u50cf\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u5bf9\u5427~~\uff08\u5e9f\u8bdd\uff09~~\n\n\u8bbe$up[i]$\u548c$down[i]$\u5206\u522b\u8868\u793a$i$\u6700\u5927\u6700\u5c0f\u80fd\u53d6\u591a\u5c11\n\n\u6ce8\u610f\u5230\uff1a\n\n$$f[i] = max_j\\left\\{f[j]\\right\\} + 1$$\n\n$$a[j] \\leq down[i],\\; up[j] \\leq a[i],\\; j \\leq i$$\n\n\u4e09\u7ef4\u504f\u5e8f\uff01\uff01\uff01\n\n$CDQ$\u5206\u6cbb\u8d70\u8d77\n\n### \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#include<algorithm>\n#define RG register\n\ninline int read()\n{\n\tint data = 0, w = 1; char ch = getchar();\n\twhile(ch != '-' && (!isdigit(ch))) ch = getchar();\n\tif(ch == '-') w = -1, ch = getchar();\n\twhile(isdigit(ch)) data = data * 10 + (ch ^ 48), ch = getchar();\n\treturn data * w;\n}\n\nusing std::max;\nconst int maxn(100010);\nint n, m, a[maxn], up[maxn], down[maxn], c[maxn], f[maxn], Max;\ninline bool cmp_1(int x, int y) { return a[x] < a[y]; }\ninline bool cmp_2(int x, int y) { return down[x] < down[y]; }\nvoid clean(int x) { while(x <= Max) c[x] = 0, x += x & -x; }\nvoid add(int x, int v) { while(x <= Max) c[x] = max(c[x], v), x += x & -x; }\nint query(int x)\n{\n\tint ans = 0;\n\twhile(x) ans = max(ans, c[x]), x -= x & -x;\n\treturn ans;\n}\n\nvoid Div(int l, int r)\n{\n\tstatic int id[maxn];\n\tif(l == r) return (void)(f[l] = max(f[l], 1));\n\tint mid = (l + r) >> 1; Div(l, mid);\n\tfor(RG int i = l; i <= r; i++) id[i] = i;\n\tstd::sort(id + l, id + mid + 1, cmp_1);\n\tstd::sort(id + mid + 1, id + r + 1, cmp_2);\n\tint j = l;\n\tfor(RG int i = mid + 1; i <= r; i++)\n\t{\n\t\twhile(j <= mid && a[id[j]] <= down[id[i]]) add(up[id[j]], f[id[j]]), j++;\n\t\tf[id[i]] = max(f[id[i]], query(a[id[i]]) + 1);\n\t}\n\tfor(RG int i = l; i < j; i++) clean(up[id[i]]);\n\tDiv(mid + 1, r);\n}\n\nint main()\n{\n\tn = read(), m = read();\n\tfor(RG int i = 1; i <= n; i++) up[i] = down[i] = a[i] = read();\n\tfor(RG int i = 1, x, y; i <= m; i++)\n\t\tx = read(), y = read(),\n\t\t  up[x] = max(up[x], y),\n\t\t  down[x] = std::min(down[x], y);\n\tMax = *std::max_element(up + 1, up + n + 1);\n\tDiv(1, n); printf(\"%d\\n\", *std::max_element(f + 1, f + n + 1));\n\treturn 0;\n}\n```\n\n",
        "postTime": 1547695228,
        "uid": 46800,
        "name": "xgzc",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4093 \u3010[HEOI2016/TJOI2016]\u5e8f\u5217\u3011"
    }
]