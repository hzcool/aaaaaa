[
    {
        "content": "\u9996\u5148\u5e94\u8be5\u4e0d\u96be\u60f3\u5230\u4e00\u7ef4$dp$,$dp[i]$\u8868\u793a\u5230\u7b2c$i$\u4e2a\u70b9\u7684\u6700\u5927\u53d7\u76ca,\u5bf9\u6bcf\u4e2a\u70b9$dfs$\u5230\u5b83\u6240\u6709\u540e\u9762\u8ddd\u79bb\u5b83$a,b$\u957f\u5ea6\u7684\u70b9\u5e76\u66f4\u65b0  \n\n\u7136\u800c\u540e\u6765\u8fd9\u6837\u590d\u6742\u5ea6\u6700\u574f\u662f$O(n^b)$,\u6bd4\u5982\u4e0b\u9762\u8fd9\u79cd\u56fe:  \n\n![](https://cdn.luogu.com.cn/upload/pic/34710.png)\n\n\u5982\u679c$b=2$\u90a3\u4e48\u5bf9\u4e8e\u5de6\u4fa7\u7684\u6bcf\u4e00\u4e2a\u70b9,\u90fd\u4f1a\u53bb\u66f4\u65b0\u53f3\u8fb9\u7684\u6240\u6709\u70b9,\u590d\u6742\u5ea6\u5c31\u662f\u5e73\u65b9\u7ea7\u522b\u7684,\u4f60\u53ef\u4ee5\u8bd5\u60f3\u5982\u679c\u8fd9\u79cd\u7ed3\u6784\u91cd\u590d\u5341\u6b21\u7136\u540e$b=20$\u7684\u590d\u6742\u5ea6  \n\n$gg$  \n\n\u5176\u5b9e\u505a\u5230\u8fd9\u91cc$60$\u5206\u4e5f\u662f\u4e0d\u9519\u7684\u6210\u7ee9\u4e86,\u6b63\u89e3\u662f\u4e0d\u592a\u597d\u60f3\u7684\u4e8c\u7ef4$dp$,\u610f\u4f1a\u4e00\u4e0b\u5c31\u597d  \n\n$dp[i][k]$\u8868\u793a\u7b2c$i$\u53f7\u70b9,\u8fd8\u9700\u8981\u4ece\u8fd9\u4e2a\u70b9\u8d70$k$\u6b65\u624d\u80fd\u505c\u4e0b\u6765\u7684\u6700\u5927\u6536\u76ca  \n\n\u90a3\u4e48,\u5148\u62d3\u6251\u6392\u5e8f,\u5bf9\u4e8e\u4e00\u4e2a\u70b9$u$,\u6211\u4eec\u679a\u4e3e\u5b83\u76f4\u63a5\u76f8\u8fde\u7684\u70b9$v$,\u90a3\u4e48\u8f6c\u79fb\u6709\u56db\u79cd:  \n$$dp[v][i]=max(dp[v][i],dp[u][i+1])(0<i<b)$$\n\n$$dp[v][a-1]=max(dp[v][a-1],dp[u][0]-w_a)$$  \n\n$$dp[v][b-1]=max(dp[v][b-1],dp[u][0]-w_b)$$  \n\n$$dp[v][0]=max(dp[v][0],dp[u][1]+w[v])$$($w[i]$\u8868\u793a$i$\u5904\u6536\u76ca)  \n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u6c34\u8fc7\u4e86(\u96fe),\u6ce8\u610f$dp[1][0]$\u7684\u521d\u503c  \n\n\u96be\u5ea6\u4e3b\u8981\u96c6\u4e2d\u5728\u601d\u7ef4\u96be\u5ea6\u4e0a  \n\n$ACcode$  \n```cpp\n    struct edge\n    {\n        int to,next;\n    }e[maxn<<4];\n    int head[maxn],cnt=0;\n    int f[maxn][51];\n    int rudu[maxn];\n    int w[maxn];\n    inline void addedge(int u,int v)\n    {\n        e[++cnt].to=v,e[cnt].next=head[u],head[u]=cnt;\n    }\n    queue<int>q;\n    void del(int x)\n    {\n        for(int i=head[x];i;i=e[i].next)\n        {\n            int v=e[i].to;\n            rudu[v]--;\n            if(!rudu[v]&&v!=1)q.push(v);\n        }\n    }\n    int main()\n    {\n        scanf(\"%d%d%d%d%d%d%d\",&n,&m,&k,&a,&b,&wa,&wb);\n        int u,v;\n        for(int i=1;i<=n;++i)u=read(),v=read(),w[u]+=v;\n        for(int i=1;i<=k;++i)u=read(),v=read(),addedge(u,v),rudu[v]++;\n        memset(f,-127,sizeof(f));\n        for(int i=2;i<=m;++i)\n            if(!rudu[i])q.push(i);\n        while(!q.empty())\n        {\n            int u=q.front();q.pop();\n            del(u);\n        }\n        q.push(1);\n        f[1][0]=w[1];\n        while(!q.empty())\n        {\n            int x=q.front();q.pop();\n            del(x);\n            for(int i=head[x];i;i=e[i].next)\n            {\n                int v=e[i].to;\n                if(f[x][0]!=f[0][0])\n                {\n                    if(a!=1)f[v][a-1]=max(f[v][a-1],f[x][0]-wa);\n                    else f[v][0]=max(f[v][0],f[x][0]-wa+w[v]);\n                }\n                if(f[x][0]!=f[0][0])\n                {\n                    if(b!=1)f[v][b-1]=max(f[v][b-1],f[x][0]-wb);\n                    else f[v][0]=max(f[v][0],f[x][0]-wb+w[v]);\n                }\n                if(f[x][1]!=f[0][0])f[v][0]=max(f[v][0],f[x][1]+w[v]);\n                for(int j=b;j>1;--j)\n                    if(f[x][j]!=f[0][0])f[v][j-1]=max(f[v][j-1],f[x][j]);\n            }\n        }\n        int ans=0;\n        for(int i=1;i<=m;++i)ans=max(ans,f[i][0]);\n        printf(\"%d\\n\",ans);\n    }\n```",
        "postTime": 1538885907,
        "uid": 93483,
        "name": "x_angelkawaii_x",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4918 \u3010\u4fe1\u4ef0\u6536\u96c6\u3011"
    },
    {
        "content": "\u6211WA\u4e86\u6570\u6b21\u540e\uff0c\u51b3\u5b9a\u770b\u9898\u89e3\uff0c\u5e76\u62ff\u51fa\u9898\u4eba\u7684\u7a0b\u5e8f\u6765\u5bf9\u62cd\uff0c\u4f46\u662f\u4e0d\u7ba1\u600e\u4e48\u5bf9\u62cd\uff0c\u8f93\u51fa\u7ed3\u679c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u7136\u540e\u518d\u770b\u4e00\u6b21\u9898\u76ee\uff0c\u53d1\u73b0\u81ea\u5df1\u5ffd\u89c6\u4e86\u201c\u4e0d\u4fdd\u8bc1pos\u4e92\u4e0d\u76f8\u540c\u201d\u8fd9\u4e00\u6761\u4ef6\u2026\u2026\u53ef\u89c1\u8ba4\u771f\u5ba1\u9898\u7684\u91cd\u8981\u6027\u3002\n\n\u6211\u7684\u505a\u6cd5\u4e0e\u51fa\u9898\u4eba\u6709\u70b9\u76f8\u4f3c\uff0c\u4f46\u601d\u7ef4\u65b9\u5f0f\u53c8\u6709\u70b9\u4e0d\u540c\uff0c\u8fd9\u91cc\u59d1\u4e14\u8bb2\u4e00\u8bb2\u3002\n\n\u770b\u5b8c\u8fd9\u9898\uff0c\u6211\u60f3\u5230DAG\u4e0a\u7684DP\uff0c\u4e8e\u662f\u987a\u7740\u8fd9\u4e2a\u601d\u8def\u6765\u601d\u8003\u3002\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u9898\u76ee\u4e2d\u201c\u5979\u53ef\u4ee5\u4e00\u6b21\u79fb\u52a8$a$\u4e2a\u5355\u4f4d\u957f\u5ea6(\u79f0\u4e3a\u5c0f\u77ac\u79fb),\u4e5f\u53ef\u4ee5\u4e00\u6b21\u79fb\u52a8b\u4e2a\u5355\u4f4d\u957f\u5ea6(\u79f0\u4e3a\u5927\u77ac\u79fb),\u5206\u522b\u4f1a\u82b1\u8d39$wa,wb$\u70b9\u7075\u529b\u201d\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u65e9\u82d7\u4ece\u4e0a\u4e00\u4e2a\u88ab\u6536\u96c6\u4fe1\u4ef0\u7684\u7ed3\u70b9\u51fa\u53d1\uff0c\u8d70\u5b8c$a$\u4e2a\u5355\u4f4d\u957f\u5ea6\uff0c\u5219**\u53ef\u4ee5**\u6536\u96c6\u5f53\u524d\u7ed3\u70b9\u7684\u4fe1\u4ef0\uff0c\u82e5\u8981\u6536\u96c6\u5f53\u524d\u7ed3\u70b9\u7684\u4fe1\u4ef0\uff0c\u5219\u8981\u82b1\u8d39$wa$\u7684\u7075\u529b\uff1b\u5f53\u65e9\u82d7\u4ece\u4e0a\u4e00\u4e2a\u88ab\u6536\u96c6\u4fe1\u4ef0\u7684\u7ed3\u70b9\u51fa\u53d1\uff0c\u8d70\u5b8c$b$\u4e2a\u957f\u5ea6\u5355\u4f4d\uff0c\u5219**\u5fc5\u987b**\u6536\u96c6\u5f53\u524d\u8282\u70b9\u7684\u4fe1\u4ef0\uff0c\u5e76\u82b1\u8d39$wb$\u7684\u7075\u529b\u3002\n\n\u8bbe$dp[i][j]$\u8868\u793a\u4ece\u4e0a\u4e00\u4e2a\u88ab\u6536\u96c6\u4fe1\u4ef0\u7684\u7ed3\u70b9\u51fa\u53d1\uff0c\u8d70$j$\u6b65\u5230\u7ed3\u70b9$i$\u65f6\u7684(\u4fe1\u4ef0\u6570\u91cf-\u7075\u529b\u8017\u8d39)\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48$dp[i][0]$\u5219\u662f\u8868\u793a\u7ed3\u70b9i\u7684\u4fe1\u4ef0\u88ab\u6536\u96c6\uff0c\u8bbe$faith[i]$\u8868\u793a\u5728\u7ed3\u70b9$i$\u7684\u4fe1\u4ef0\u6570\u3002\n\n$dp$\u6570\u7ec4\u521d\u59cb\u65f6\u53ef\u5168\u90e8\u8d4b\u503c\u4e3a$-\u221e$\u3002\n\n\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\uff08~~\u5e94\u8be5\u6bd4\u8f83\u597d\u60f3\u5427~~\uff09\n\n$dp[1][0]=faith[1]$\n\n\u8bbe\u7ed3\u70b9u\u53ef\u76f4\u63a5\u8d70\u5230\u7ed3\u70b9v\u3002\n\n\u5bf9\u4e8e$1 \\leq i < b,dp[v][i]=max(dp[v][i],dp[u][i-1])$\n\n$dp[v][0]=max(dp[v][0],dp[u][a-1]+faith[v]-wa,dp[u][b-1]+faith[v]-wb)$\n\n\u5173\u4e8e\u7b54\u6848\uff0c\u5219\u662f\u5bf9\u4e8e$1 \\leq i \\leq m$\uff0c$ans=max(ans,dp[i][0])$\n\n\u53ef\u80fd\u6211\u7684\u8bed\u8a00\u8868\u8fbe\u6709\u4e9b\u602a\u602a\u7684\uff0c\u5982\u679c\u5199\u9519\u4e86\u4e9b\u4ec0\u4e48\uff0c\u53ef\u4ee5\u53d1\u79c1\u4fe1\u7ed9\u6211\u3002\n\n~~\u51fa\u9898\u4eba\u8bf4\u201c\u96be\u5ea6\u4e3b\u8981\u96c6\u4e2d\u5728\u601d\u7ef4\u96be\u5ea6\u4e0a\u201d\uff0c\u7136\u800c\u6211\u5374\u89c9\u5f97\u96be\u5ea6\u4e3b\u8981\u96c6\u4e2d\u5728\u5ba1\u9898\u4e0a\uff08\u96fe\uff09~~\n\nC++\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n\n#define maxn 100005\n#define maxm 200005\n#define maxk 300005\n#define maxb 55\n#define inf 0x3f3f3f3f\n\nstruct edge_type\n{\n    int to,next;\n}e[maxk];\nint head[maxm];\nint in_degree[maxm];\n\nint n,m,k;\nint a,b,wa,wb;\nint pos,faith[maxm];\nint u,v;\n\nint dp[maxm][maxb];\n\nint ans;\n\ninline void add_e(int u,int v,int x)\n{\n    e[x].to=v;\n    e[x].next=head[u];\n    head[u]=x;\n}\n\nint qhy[maxm],closed,open;\n\nvoid bfs()\n{\n    int i;\n    \n    closed=0;\n    open=1;\n    qhy[1]=1;\n    do{\n        closed++;\n        for(i=head[qhy[closed]];i;i=e[i].next)\n        {\n            if (in_degree[e[i].to]==0) qhy[++open]=e[i].to;\n            in_degree[e[i].to]++;\n        }\n    }while (closed<open);\n}\n\nvoid top_sort()\n{\n    int i,j,tmp;\n    \n    closed=0;\n    open=1;\n    qhy[1]=1;\n    dp[1][0]=faith[1];\n    do{\n        closed++;\n        for(i=head[qhy[closed]];i;i=e[i].next)\n        {\n            for(j=1;j<b;j++)\n                if (dp[e[i].to][j]<dp[qhy[closed]][j-1]) dp[e[i].to][j]=dp[qhy[closed]][j-1];\n                \n            if (dp[qhy[closed]][b-1]!=-inf&&dp[e[i].to][0]<dp[qhy[closed]][b-1]+faith[e[i].to]-wb)\n                dp[e[i].to][0]=dp[qhy[closed]][b-1]+faith[e[i].to]-wb;\n            \n            if (dp[qhy[closed]][a-1]!=-inf&&dp[e[i].to][0]<dp[qhy[closed]][a-1]+faith[e[i].to]-wa)\n                dp[e[i].to][0]=dp[qhy[closed]][a-1]+faith[e[i].to]-wa;\n                \n            in_degree[e[i].to]--;\n            if (in_degree[e[i].to]==0) qhy[++open]=e[i].to;\n        }\n    }while (closed<open);\n}\n\nint main()\n{\n    int i,j,tmp;\n\n    scanf(\"%d%d%d\",&n,&m,&k);\n    scanf(\"%d%d\",&a,&b);\n    scanf(\"%d%d\",&wa,&wb);\n\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&pos,&tmp);\n        faith[pos]+=tmp;\n    }\n    \n    for(i=1;i<=m;i++)\n        for(j=0;j<b;j++) dp[i][j]=-inf;\n\n    for(i=1;i<=k;i++)\n    {\n        scanf(\"%d%d\",&u,&v);\n        add_e(u,v,i);\n    }\n    \n    bfs();\n    top_sort();\n\n    for(i=1;i<=m;i++)\n        if (ans<dp[i][0]) ans=dp[i][0];\n    \n    printf(\"%d\\n\",ans);\n    \n    return 0;\n}\n```",
        "postTime": 1540958158,
        "uid": 21935,
        "name": "\u9505\u94a2Carl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4918 \u3010\u4fe1\u4ef0\u6536\u96c6\u3011"
    }
]