[
    {
        "content": "\u9996\u5148\uff0c\u611f\u8c22 rushcheyo, negiizhao, Created_Equal \u4e8e IOI 2020\u4e2d\u56fd\u56fd\u5bb6\u96c6\u8bad\u961f\u7b2c\u4e00\u9636\u6bb5\u4f5c\u4e1a\u300a\u8f6c\u7f6e\u539f\u7406\u7684\u7b80\u5355\u4ecb\u7ecd\u300b\u4e2d\uff0c\u5bf9\u4e8e\u672c\u7b97\u6cd5\u4ee5\u53ca\u8f6c\u7f6e\u539f\u7406\u7684\u5f15\u5165\u548c\u4ecb\u7ecd\u5de5\u4f5c\u3002\u539f\u672c\u8be5\u6587\u7ae0\u7684\u5185\u5bb9\u4f1a\u7531\u4ed6\u4eec\u5728 WC2020 \u4e2d\u8fdb\u884c\u5206\u4eab\uff0c\u53ef\u60dc\u7684\u662f\u8ba1\u5212\u8d76\u4e0d\u4e0a\u53d8\u5316\u3002\n\n\u4e0b\u9762\u4ecb\u7ecd\u7684\u65b9\u6cd5\u662f\u591a\u70b9\u6c42\u503c\u7684\u4e00\u79cd\u66f4\u5feb\uff0c\u4ee3\u7801\u91cf\u66f4\u5c0f\u7684\u7b97\u6cd5\u3002\u4e3a\u4e86\u5efa\u7acb\u5bf9\u5176\u6709\u5916\u5ef6\u6027\u7684\u7406\u89e3\uff0c\u6211\u4eec\u9996\u5148\u8981\u7b80\u5355\u89e3\u91ca\u8f6c\u7f6e\u539f\u7406\uff0c\u6216\u79f0\u7279\u52d2\u6839\u539f\u7406\uff08Tellegen's Principle\uff09\u7684\u6838\u5fc3\u601d\u60f3\uff1a\n\n\u5bf9\u4e8e\u77e9\u9635 $\\mathbf M$ \u548c\u4efb\u4e00\u5411\u91cf $\\mathbf v$\uff0c\u4e3a\u4e86\u4f18\u5316\u8ba1\u7b97 $\\mathbf {Mv}$\uff0c\u8f6c\u7f6e\u539f\u7406\u6307\u51fa\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u5bdf\u8ba1\u7b97 $\\mathbf M^{\\mathsf T}\\mathbf v$ \u7684\u65b9\u6cd5\u3002\u5373\u77e9\u9635\u7684\u8f6c\u7f6e\u3002\u8bbe\u6709\u77e9\u9635 $\\mathbf M = {\\mathbf E}_1{\\mathbf E}_2 \\cdots {\\mathbf E}_k$ \u8fd9\u4e00\u5206\u89e3\uff0c\u5176\u4e2d ${\\mathbf E}_i$ \u5747\u4e3a\u521d\u7b49\u77e9\u9635\uff0c\u90a3\u4e48\u6211\u4eec\u6709 ${\\mathbf M}^\\mathsf T = {\\mathbf E}_k^\\mathsf T\\cdots {\\mathbf E}_2^\\mathsf T{\\mathbf E}_1^\\mathsf T$\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u521d\u7b49\u77e9\u9635\u4e2d\u4e3b\u8981\u5206\u4e3a\uff1a\n\n1. $\\mathbf {Ev}$ \u7684\u6548\u679c\u662f\u8ba9\u5411\u91cf $\\mathbf v$ \u7684\u7b2c $i$ \u4f4d\u4e58\u4ee5 $c$\uff0c\u90a3\u4e48\u5176\u8f6c\u7f6e\u7684\u6548\u679c\u4e5f\u662f\u4e00\u6837\u7684\u3002\n2. $\\mathbf {Ev}$ \u7684\u6548\u679c\u662f\u8ba9\u5411\u91cf $\\mathbf v$ \u7684\u7b2c $i$ \u4f4d\u4e58\u4ee5 $c$ \u52a0\u5230\u7b2c $j$ \u4f4d\uff0c\u90a3\u4e48\u5176\u8f6c\u7f6e\u7684\u6548\u679c\u5c31\u662f\u8ba9\u5411\u91cf\u7684\u7b2c $j$ \u4f4d\u4e58\u4ee5 $c$ \u52a0\u5230\u7b2c $i$ \u4f4d\u4e0a\u3002\n\n\u6211\u4eec\u8003\u8651\u7ed9\u5b9a\u4e00\u7ec4 $x_0 \\sim x_{n-1}$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u7ed9\u4e00\u4e2a $n-1$ \u6b21\u591a\u9879\u5f0f\u7684\u5199\u4f5c\u7cfb\u6570\u5411\u91cf\u7684\u5f62\u5f0f\uff0c\u8f6c\u5316\u4e3a\u5404\u4f4d\u7f6e\u70b9\u503c\u7684\u53d8\u6362\u662f\u7ebf\u6027\u53d8\u6362\uff0c\u53ef\u5199\u4f5c\u77e9\u9635\n\n$$\n\\mathbf V(x_0, x_1,\\dots, x_{n-1})=\\begin{bmatrix}\n1&x_0&x_0^2&\\cdots& x_0^{n-1}\\\\\n1&x_1&x_1^2&\\cdots& x_1^{n-1}\\\\\n\\vdots&\\vdots&\\vdots&\\ddots&\\vdots\\\\\n1&x_{n-1}&x_{n-1}^2&\\cdots& x_{n-1}^{n-1}\n\\end{bmatrix}\n$$\n\n\u8003\u8651\u5176\u8f6c\u7f6e $\\mathbf V(x_0, x_1,\\dots, x_{n-1})^{\\mathsf T} \\mathbf v = \\begin{bmatrix}\n1&1&1&\\cdots& 1\\\\\nx_0&x_1&x_2&\\cdots& x_{n-1}\\\\\n\\vdots&\\vdots&\\vdots&\\ddots&\\vdots\\\\\nx_0^{n-1}&x_1^{n-1}&x_2^{n-1}&\\cdots& x_{n-1}^{n-1}\n\\end{bmatrix}\\mathbf v$\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5176\u8f6c\u7f6e\u6240\u6c42\u7684\u5b9e\u9645\u4e0a\u5c31\u662f\n\n$$\n[x^k]\\sum_{i=0}^{n-1} \\frac{v_i}{1- x_i x}\n$$\n\n\u800c\u6211\u4eec\u77e5\u9053\u4e3a\u4e86\u6c42\u8fd9\u4e2a\uff0c\u6211\u4eec\u5e38\u91c7\u53d6\u7684\u505a\u6cd5\u662f\u8fd9\u6837\u7684 $\\Theta(n\\log^2n)$ \u8fc7\u7a0b\uff1a\n\n1. \u5bf9\u6574\u4f53\u8fdb\u884c\u5206\u6cbb\uff0c\u7ef4\u62a4\u5bf9\u4e8e\u5de6\u53f3 $\\frac n2$ \u4e24\u90e8\u5206\u7684 $(u_1, L), (u_2, R)$\uff0c\u5373\u5206\u5b50\u548c\u5206\u6bcd\u90e8\u5206\uff0c\u7136\u540e\u5408\u5e76\u4e3a $(uR+vL, LR)$\u3002\n2. \u6700\u7ec8\uff0c\u8ba1\u7b97 $\\frac{u_1}{P}$\u3002\n\n\u6ce8\u610f\uff0c\u4e2d\u95f4\u6240\u6709\u7684\u5206\u6bcd\u4ec5\u4ec5\u662f\u8fd9\u4e2a\u7ebf\u6027\u53d8\u6362\u4e2d\u77e9\u9635\u91cc\u7684\u4e1c\u897f\uff0c\u662f\u5bf9\u4e8e $u$ \u7684\u7ebf\u6027\u53d8\u6362\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u6709\u5fc5\u8981\u6ce8\u610f\u4e00\u4e0b\u4e00\u4e2a\u91cd\u8981\u7684\u7ebf\u6027\u53d8\u6362\uff1a\u591a\u9879\u5f0f\u4e58\u6cd5\u4f5c\u7528 $\\mathbf{MUL}(A) \\mathbf v$ \u7684\u8f6c\u7f6e $\\mathbf{MUL}(A)^\\mathsf T\\mathbf v$\u3002\n\n\u5bf9\u4e8e\u591a\u9879\u5f0f $A(x)=\\sum_i a_ix^i$\uff0c\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a $v_j$ \u4e58\u4e0a $a_i$ \u4f1a\u8d21\u732e\u7ed9 $i+j$ \u4f4d\u7f6e\u3002\u56e0\u800c\u8f6c\u7f6e\u540e\u5c31\u662f $v_j$ \u4e58\u4e0a $a_i(i\\le j)$ \u4f1a\u8d21\u732e\u7ed9 $j-i$ \u4f4d\u7f6e\u3002\u56e0\u6b64\u8fd9\u662f\u53e6\u4e00\u4e2a\u65b9\u5411\u7684\u5377\u79ef\u5f62\u5f0f\u3002\u6b64\u5916\uff0c\u82e5\u539f\u53d8\u6362\u4e0d\u6ea2\u51fa\uff0c\u5219\u8f6c\u7f6e\u53d8\u6362\u7684 FFT \u957f\u5ea6\u4e5f\u662f $n$ \u800c\u4e0d\u662f $2n$\uff0c\u56e0\u4e3a\u5faa\u73af\u5377\u79ef\u6ea2\u51fa\u7684\u90e8\u5206\u6211\u4eec\u6b63\u597d\u4e0d\u8981\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u7684\u65b0\u7684\u591a\u70b9\u6c42\u503c\u505a\u6cd5\u5982\u4e0b\uff1a\n\n1. \u5bf9\u6574\u4f53\u8fdb\u884c\u5206\u6cbb\uff0c\u7ef4\u62a4\u51fa\u7ebf\u6bb5\u6811\u5bf9\u5e94\u7684\u6bcf\u4e2a\u5b50\u6811\u7684 $(1-x_i x)$ \u4e4b\u4e58\u79ef\u3002\n2. \u5bf9\u4e8e\u8981\u6c42\u503c\u7684 $m-1$ \u6b21\u591a\u9879\u5f0f\uff0c\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u8ba1\u7b97 $\\mathbf {MUL} (P^{-1} \\bmod x^{m})^\\mathsf T \\mathbf v$\uff0c\u7136\u540e\u4fdd\u7559\u524d $n$ \u4f4d\u3002\n3. \u4ece\u7ebf\u6bb5\u6811\u81ea\u9876\u5411\u4e0b\u9012\u5f52\uff0c\u4ee4\u4e0b\u4f20\u7684\u4e24\u90e8\u5206\u5411\u91cf $\\mathbf l = \\mathbf{MUL}(R)^\\mathsf T\\mathbf v,\\mathbf r = \\mathbf{MUL}(L)^\\mathsf T\\mathbf v$\n4. \u6700\u7ec8\uff0c\u5f97\u5230\u7684\u53f6\u8282\u70b9\u7684\u5411\u91cf\u957f\u5ea6\u5747\u4e3a $1$\uff0c\u5bf9\u5e94\u4e8e\u8be5\u5904\u7684\u70b9\u503c\u3002\n\n\u65b0\u7684\u7b97\u6cd5\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a\n\n1. \u4e0d\u9700\u8981\u5199\u591a\u9879\u5f0f\u53d6\u6a21\n2. \u5e38\u6570\u6709\u663e\u8457\u63d0\u5347",
        "postTime": 1589786776,
        "uid": 21423,
        "name": "Elegia",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5050 \u3010\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c\u3011"
    },
    {
        "content": "\u8bb0\u5f85\u6c42\u503c\u7684\u591a\u9879\u5f0f\u4e3a $F(x)$\uff0c\u9700\u8981\u6c42\u51fa\u5176\u5728 $x_0$ \u5904\u7684\u70b9\u503c $F(x_0)$\u3002\n\n\u5982\u679c $F(x)=Q(x)G(x)+R(x)$\uff0c\u5219\u6709 $F(x_0)=Q(x_0)G(x_0)+R(x_0)$\u3002 \u5982\u679c\u6784\u9020 $G(x)$ \u4f7f\u5f97 $G(x_0)=0$\uff0c\u90a3\u4e48\u5c31\u6709 $F(x_0)=R(x_0)$\u3002\n\n\u90a3\u4e48\u6784\u9020 $G(x)=x-x_0$\uff0c\u5219 $F(x)$ \u5bf9 $G(x)$ \u505a\u591a\u9879\u5f0f\u53d6\u6a21\u540e\u5f97\u5230\u7684\u5e38\u6570\u9879\u5c31\u662f $F(x_0)$\uff08\u56e0\u4e3a\u53d6\u6a21\u540e\u53ea\u6709\u8fd9\u4e00\u9879\u4e86\uff09\u3002\n\n\u591a\u9879\u5f0f\u53d6\u6a21\u7684\u8fc7\u7a0b\u53ef\u4ee5\u5206\u6cbb\u8fdb\u884c\uff0c\u5c06 $F(x)$ \u5bf9 $\\prod_{i=1}^{m/2} (x-x_i)$ \u548c $\\prod_{i=m/2+1}^{m} (x-x_i)$ \u5206\u522b\u53d6\u6a21\uff0c\u518d\u5c06\u53d6\u6a21\u540e\u7684\u7ed3\u679c\u5411\u4e24\u8fb9\u9012\u5f52\u4e0b\u53bb\u3002\u6bcf\u6b21 $O(mlogm)$ \u7684\u591a\u9879\u5f0f\u53d6\u6a21\u90fd\u53ef\u4ee5\u4f7f\u5f97\u539f\u95ee\u9898\u7684\u89c4\u6a21\u51cf\u534a\uff0c\u5c31\u53ef\u4ee5\u5728 $O(nlogn+mlog^2m)$ \u7684\u65f6\u95f4\u5185\u6c42\u51fa\u6240\u6709\u7684\u70b9\u503c\uff08\u6700\u5f00\u59cb\u8fd8\u9700\u8981\u5c06 $F(x)$ \u5bf9 $\\prod_{i=1}^{m}(x-x_i)$ \u53d6\u6a21\uff09\u3002\n\n\u8fd9\u662f\u5927\u90e8\u5206\u4eba\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u9274\u4e8e\u591a\u9879\u5f0f\u53d6\u6a21\u7684\u5927\u5e38\u6570\uff0c\u8fd9\u4e2a\u505a\u6cd5\u7684\u6548\u7387\u5e76\u4e0d\u9ad8\u3002\n\n\u91cd\u65b0\u5206\u6790\u4e00\u4e0b\uff0c$R(x)$ \u53ea\u6709\u5e38\u6570\u9879\uff0c\u5982\u679c\u80fd\u7b97\u51fa $Q(x)$ \u7684\u5e38\u6570\u9879\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa $R(x)$\u3002\n\n\u8003\u8651\u4e00\u4e0b\u591a\u9879\u5f0f\u9664\u6cd5\u662f\u8fdb\u884c\u4e86\u4e00\u4e2a\u600e\u4e48\u6837\u7684\u8fc7\u7a0b\uff0c\u5047\u8bbe $F(x),G(x)$ \u7684\u6700\u9ad8\u6b21\u9879\u6b21\u6570\u5206\u522b\u4e3a $n,m$\uff1a\n\n$$F(x)=Q(x)G(x)+R(x)$$\n\n$$x^nF(\\frac{1}{x})=x^{n-m}Q(\\frac{1}{x})x^mG(\\frac{1}{x})+x^nR(\\frac{1}{x})$$\n\n$$F_r(x)=Q_r(x)G_r(x)+x^{n-m+1}R_r(x)$$\n\n$$Q_r(x)=F_r(x)G_r^{-1}(x)\\pmod{x^{n-m+1}}$$\n\n\u5728\u8fd9\u91cc\uff0c$F_r(x)$ \u8868\u793a\u7684\u662f $F_r(x)$ \u7684\u7cfb\u6570\u7ffb\u8f6c\u540e\u7684\u7ed3\u679c\u3002\n\n\u8bbe $G(x)=\\prod_{i=1}^{m}(x-x_i),G_0(x)=\\prod_{i=1}^{m/2}(x-x_i),G_1(x)=\\prod_{i=m/2+1}^{m}(x-x_i)$ \u3002\n\n\u53ef\u4ee5\u60f3\u5230\u5148\u6c42\u51fa $Q_r(x)=F_r(x)G_r^{-1}(x)$ \u7136\u540e\u7528\u5229\u7528 $G_{0r}^{-1}(x)=G_r^{-1}(x)G_1(x)$ \u6765\u5411\u4e0b\u9012\u5f52\u3002\n\n\u6700\u5e95\u5c42\u7684 $Q(x)$ \u6709 $n$ \u9879\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e3a\u4e86\u4fdd\u8bc1\u5e95\u5c42\u8ba1\u7b97\u7ed3\u679c\u662f\u6b63\u786e\u7684\uff0c\u6240\u6709\u7684\u8ba1\u7b97\u90fd\u5fc5\u987b\u81f3\u5c11\u5728 $\\pmod{x^n}$ \u7684\u610f\u4e49\u4e0b\u8fdb\u884c\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u663e\u7136\u662f\u65e0\u6cd5\u63a5\u53d7\u7684\u3002\n\n\u4f46\u662f\u6ce8\u610f\u5230\u6839\u672c\u4e0d\u9700\u8981\u8ba1\u7b97\u51fa $Q(x)$\uff0c\u53ea\u9700\u8981\u8ba1\u7b97\u51fa $Q(x)$ \u7684\u5e38\u6570\u9879\uff0c\u6216\u8005\u8bf4 $[x^{n-1}]Q_r(x)$\u3002\u6362\u8a00\u4e4b\uff0c\u53ea\u6709\u67d0\u4e00\u9879\u53ef\u80fd\u5bf9\u6700\u9ad8\u9879\u4ea7\u751f\u8d21\u732e\u624d\u9700\u8981\u4fdd\u7559\uff0c\u5426\u5219\u53ef\u4ee5\u76f4\u63a5\u820d\u5f03\u3002\n\n\u5982\u679c\u63a5\u4e0b\u6765\u4e58\u4e0a\u7684\u82e5\u5e72 $G(x)$ \u4e4b\u79ef\u7684\u6b21\u6570\u754c\u4e3a $k$\uff0c\u90a3\u4e48\u5c31\u53ea\u9700\u8981\u4fdd\u7559 $Q(x)$ \u7684\u6700\u540e $k$ \u9879\uff0c\u56e0\u4e3a\u524d\u9762\u7684\u82e5\u5e72\u9879\u4e0d\u53ef\u80fd\u5bf9\u6700\u9ad8\u9879\u4ea7\u751f\u8d21\u732e\u3002\n\n\u5373\uff0c\u9012\u5f52\u5230\u533a\u95f4 $[l,r]$ \u7684 $Q(x)$ \u53ea\u9700\u8981\u4fdd\u7559\u6700\u9ad8\u7684 $r-l+1$ \u9879\u3002\n\n\u8fd9\u6837\uff0c\u6bcf\u6b21\u53ea\u9700\u8981\u4e00\u6b21\u591a\u9879\u5f0f\u4e58\u6cd5\u800c\u4e0d\u662f\u591a\u9879\u5f0f\u53d6\u6a21\u5c31\u53ef\u4ee5\u4f7f\u5f97\u95ee\u9898\u89c4\u6a21\u51cf\u534a\uff0c\u6548\u7387\u5f97\u5230\u4e86\u663e\u8457\u7684\u63d0\u5347\uff08\u5bf9\u6211\u800c\u8a00\uff0c\u4e94\u500d\uff09\u3002\n\n\u6b64\u5916\uff0c\u8fd8\u9700\u8981\u6ce8\u610f\uff1a\u6700\u5e95\u5c42\u9700\u8981\u7b2c $n$ \u9879\uff0c\u4f46\u662f\u9012\u5f52\u8ba1\u7b97\u65f6\u5f53\u6210\u53ea\u6709 $m$ \u9879\u6765\u5904\u7406\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4 $n>m$ \u65f6\u7b54\u6848\u4f1a\u9519\u3002\n\n\u8fd9\u6709\u4e24\u4e2a\u65b9\u6cd5\u89e3\u51b3\uff0c\u7b2c\u4e00\u79cd\u5c31\u662f\u5c06 $F(x)$ \u5bf9 $G(x)$ \u53d6\u6a21\u3002\u7b2c\u4e8c\u79cd\u66f4\u7b80\u5355\uff0c\u4ee4 $m=\\max(m,n)$\uff0c\u591a\u51fa\u6765\u7684\u4e00\u4e9b\u8be2\u95ee\u4e0d\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002\n\n\uff08\u4e00\u5343\u4e2a\u4eba\u5c31\u6709\u4e00\u5343\u4e2a\u591a\u9879\u5f0f\u677f\u5b50\uff0c\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define I inline int\n#define V inline void\n#define ll long long int\n#define isnum(ch) ('0'<=ch&&ch<='9')\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define ROF(i,a,b) for(int i=a;i>=b;i--)\n#define gc (_op==_ed&&(_ed=(_op=_buf)+fread(_buf,1,100000,stdin),_op==_ed)?EOF:*_op++)\nchar _buf[100000],*_op(_buf),*_ed(_buf);\nconst int N=1<<18|1,mod=998244353;\nV check(int&x){x-=mod,x+=x>>31&mod;}\nI getint(){\n\tint _s=0;char _ch=gc;\n\twhile(!isnum(_ch))_ch=gc;\n\twhile(isnum(_ch))_s=_s*10+_ch-48,_ch=gc;\n\treturn _s;\n}\nI Pow(ll t,int x){\n\tll s=1;\n\tfor(;x;x>>=1,t=t*t%mod)if(x&1)s=s*t%mod;\n\treturn s;\n}\nnamespace poly{\n\tint lmt,w[N],r[N];\n\tV init(int n){\n\t\tint l=-1,wn;\n\t\tfor(lmt=1;lmt<=n;)lmt<<=1,l++;\n\t\tFOR(i,0,lmt-1)r[i]=(r[i>>1]>>1)|((i&1)<<l);\n\t\twn=Pow(3,mod>>++l),w[lmt>>1]=1;\n\t\tFOR(i,(lmt>>1)+1,lmt-1)w[i]=1ll*w[i-1]*wn%mod;\n\t\tROF(i,(lmt>>1)-1,1)w[i]=w[i<<1];\n\t}\n\tV cl(int*a,int n){memset(a,0,n<<2);}\n\tI getLen(int n){return 1<<32-__builtin_clz(n);}\n\tV mul(int*a,int x,int n,int*b){while(n--)*b++=1ll**a++*x%mod;}\n\tV dot(int*a,int*b,int n,int*c){while(n--)*c++=1ll**a++**b++%mod;}\n\tV DFT(int*a,int l){\n\t\tstatic unsigned ll tmp[N];\n\t\tint u=__builtin_ctz(lmt/l),t;\n\t\tFOR(i,0,l-1)tmp[i]=a[r[i]>>u];\n\t\tfor(int i=1;i^l;i<<=1)for(int j=0,d=i<<1;j^l;j+=d)FOR(k,0,i-1)\n\t\t\tt=tmp[i|j|k]*w[i|k]%mod,tmp[i|j|k]=tmp[j|k]+mod-t,tmp[j|k]+=t;\n\t\tFOR(i,0,l-1)a[i]=tmp[i]%mod;\n\t}\n\tV IDFT(int*a,int l){reverse(a+1,a+l),DFT(a,l),mul(a,mod-mod/l,l,a);}\n\tV Inv(const int*a,int n,int*b){\n\t\tstatic int A[N],B[N],tmp[N],d,l;\n\t\ttmp[0]=Pow(a[0],mod-2),cl(A,d),cl(B,d);\n\t\tfor(d=1,l=2;d<n;d<<=1,l<<=1){\n\t\t\tcopy(a,a+min(l,n),A),copy(tmp,tmp+d,B);\n\t\t\tDFT(A,l),DFT(B,l),dot(A,B,l,A),IDFT(A,l);\n\t\t\tcl(A,d),DFT(A,l),dot(A,B,l,A),IDFT(A,l);\n\t\t\tcopy(A+d,A+l,tmp+d),mul(tmp+d,mod-1,d,tmp+d);\n\t\t}\n\t\tcopy(tmp,tmp+n,b);\n\t}\n\tint*f[N],*g[N],bin[N<<5],*np(bin);\n\tV Mul(int*a,int*b,int n,int m,int*c){\n\t\tstatic int A[N],B[N],l;\n\t\tl=getLen(n+m-1),copy(a,a+n,A),copy(b,b+m,B);\n\t\tDFT(A,l),DFT(B,l),dot(A,B,l,A),IDFT(A,l);\n\t\tcopy(A,A+n+m-1,c),cl(A,l),cl(B,l);\n\t}\n\tV eva_init(int p,int l,int r,int*a){\n\t\tg[p]=np,np+=r-l+2,f[p]=np,np+=r-l+2;\n\t\tif(l==r)return g[p][0]=1,check(g[p][1]=mod-a[l]);\n\t\tint lc=p<<1,rc=lc|1,mid=l+r>>1,len1=mid-l+2,len2=r-mid+1;\n\t\teva_init(lc,l,mid,a),eva_init(rc,mid+1,r,a);\n\t\tMul(g[lc],g[rc],len1,len2,g[p]);\n\t}\n\tV Mult(int*a,int*b,int n,int m,int*c){\n\t\tstatic int A[N],B[N],l;\n\t\tl=getLen(n),copy(a,a+n,A),reverse_copy(b,b+m,B);\n\t\tDFT(A,l),DFT(B,l),dot(A,B,l,A),IDFT(A,l);\n\t\tcopy(A+m-1,A+n,c);\n\t\tcl(A,l),cl(B,l);\n\t}\n\tV eva_work(int p,int l,int r,int*a){\n\t\tif(l==r)return void(a[l]=f[p][0]);\n\t\tint lc=p<<1,rc=lc|1,mid=l+r>>1,len1=mid-l+2,len2=r-mid+1;\n\t\tMult(f[p],g[rc],r-l+1,len2,f[lc]);\n\t\teva_work(lc,l,mid,a);\n\t\tMult(f[p],g[lc],r-l+1,len1,f[rc]);\n\t\teva_work(rc,mid+1,r,a);\n\t}\n\tV eva(int*a,int*b,int n,int m,int*c){\n\t\tstatic int X[N],Y[N],l;\n\t\teva_init(1,1,m,b),Inv(g[1],m+1,X);\n\t\treverse(X,X+m+1),Mul(a,X,n,m+1,Y);\n\t\tcopy(Y+n,Y+n+m,f[1]),eva_work(1,1,m,c);\n\t\tFOR(i,1,m)check(c[i]=1ll*c[i]*b[i]%mod+a[0]);\n\t}\n}\nint n,m,a[N],b[N],c[N];\nint main(){\n\tn=getint()+1,m=getint(),poly::init(max(n,m+1)<<1);\n\tFOR(i,0,n-1)a[i]=getint();\n\tFOR(i,1,m)b[i]=getint();\n\tn=max(n,m+1),poly::eva(a,b,n,max(n-1,m),c);\n\tFOR(i,1,m)cout<<c[i]<<'\\n';\n\treturn 0;\n}\n```\n\nP.S. \u4ee3\u7801\u91cc\u8fd8\u4f7f\u7528\u4e86\u4e00\u4e2a\u4f18\u5316\uff0c\u5c31\u662f\u4ece\u4e0a\u5f80\u4e0b\u8ba1\u7b97 $Q$ \u7684\u65f6\u5019\uff0c\u4f1a\u6709\u957f\u5ea6\u4e3a $l$ \u7684\u591a\u9879\u5f0f\u4e58\u4e0a\u957f\u5ea6\u4e3a $\\frac{l}{2}$ \u7684\u591a\u9879\u5f0f\u7136\u540e\u53ea\u53d6\u540e $\\frac{l}{2}$ \u9879\u7684\u64cd\u4f5c\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u5229\u7528 $FFT$ \u5faa\u73af\u5377\u79ef\u7684\u6027\u8d28\u53ea\u8fdb\u884c\u957f\u5ea6\u4e3a $l$ \u7684 $DFT$\u3002\n",
        "postTime": 1580825691,
        "uid": 109236,
        "name": "Fuyuki",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5050 \u3010\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c\u3011"
    },
    {
        "content": "\u6211\u4eec\u5c06\u8981\u6c42\u503c\u7684\u70b9\u5747\u5206\u6210\u4e24\u4efd\uff0c\u6784\u9020\u591a\u9879\u5f0f$P_0(x)=\\prod\\limits_{i=1}^{\\lfloor\\frac n 2\\rfloor}(x-x_i)$\uff0c$P_1(x)=\\prod\\limits_{i=\\lfloor\\frac n 2\\rfloor+1}^{n}(x-x_i)$\u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e$\\forall i\\in[1,\\lfloor\\frac n 2 \\rfloor]$\uff0c\u6709$P_0(x_i)=0$\u3002$P_1$\u540c\u7406\u3002\n\n\u6211\u4eec\u5047\u8bbe\u591a\u9879\u5f0f$D(x),R(x)$\u6ee1\u8db3\uff1a$D(x)$\u662f\u4e00\u4e2a$n-\\lfloor\\frac n 2\\rfloor$\u6b21\u591a\u9879\u5f0f\uff0c$R(x)$\u662f\u4e00\u4e2a\u6b21\u6570\u4e0d\u8d85\u8fc7$\\lfloor\\frac n 2\\rfloor-1$\u7684\u591a\u9879\u5f0f\uff0c\u4e14$A(x)=P_0(x)D(x)+R(x)$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e$\\forall i\\in[1,\\lfloor\\frac n 2 \\rfloor]$\uff0c\u6709$A(x_i)=R(x_i)$\u3002$P_1$\u540c\u7406\u53ef\u5f97\u3002\n\n\u7531\u4e8e$R(x)$\u7684\u6b21\u6570\u662f$A(x)$\u7684\u6b21\u6570\u7684\u4e00\u534a\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u4e00\u4e2a\u89c4\u6a21\u4e3a$n$\u7684\u95ee\u9898\uff0c\u7528$O(n\\log n)$\u7684\u590d\u6742\u5ea6\uff08\u591a\u9879\u5f0f\u53d6\u6a21\uff0c\u8be6\u89c1\u591a\u9879\u5f0f\u9664\u6cd5\uff09\uff0c\u8f6c\u5316\u4e3a\u4e24\u4e2a\u89c4\u6a21\u4e3a$\\frac n 2$\u7684\u95ee\u9898\u3002\n\n\u5206\u6cbb\u8ba1\u7b97\u5373\u53ef\uff0c\u7531\u4e3b\u5b9a\u7406\u5f97\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log^2 n)$\u3002\n\n\u6c42\u6bcf\u6b21\u7684$P_0(x),P_1(x)$\uff0c\u53ef\u4ee5\u5f00\u59cb\u7528\u4e00\u6b21\u5206\u6cbbNTT\u9884\u5904\u7406\u3002\u6b64\u5904\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e3a$O(n\\log^2 n)$\u3002\n\n\u5e38\u6570\u6781\u5927\u5c31\u662f\u4e86QAQ\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\ntypedef long long LL;\nconst int md=998244353,N=262145;\n//Poly begin\nint rev[N],lim,g[20][N],M,vv;\ninline void upd(int&a){a+=a>>31&md;}\ninline int pow(int a,int b){\n    int ret=1;\n    for(;b;b>>=1,a=(LL)a*a%md)if(b&1)ret=(LL)ret*a%md;return ret;\n}\ninline void init(int n){\n    int l=-1;\n    for(lim=1;lim<n;lim<<=1)++l;M=l+1;\n    for(int i=1;i<lim;++i)rev[i]=(rev[i>>1]>>1)|((i&1)<<l);vv=pow(lim,md-2);\n}\nvoid NTT(int*a,int f){\n    for(int i=1;i<lim;++i)if(i<rev[i])std::swap(a[i],a[rev[i]]);\n    for(int i=0;i<M;++i){\n        const int*G=g[i],c=1<<i;\n        for(int j=0;j<lim;j+=c<<1)\n        for(int k=0;k<c;++k){\n            const int x=a[j+k],y=a[j+k+c]*(LL)G[k]%md;\n            upd(a[j+k]+=y-md),upd(a[j+k+c]=x-y);\n        }\n    }\n    if(!f){\n        for(int i=0;i<lim;++i)a[i]=(LL)a[i]*vv%md;\n        std::reverse(a+1,a+lim);\n    }\n}\nvoid INV(const int*a,int*B,int n){\n    if(n==1){\n        *B=pow(*a,md-2);\n        return;\n    }\n    INV(a,B,n+1>>1);\n    init(n<<1);\n    static int A[N];\n    for(int i=0;i<n;++i)A[i]=a[i];\n    for(int i=n;i<lim;++i)A[i]=0;\n    NTT(A,1),NTT(B,1);\n    for(int i=0;i<lim;++i)B[i]=B[i]*(2-(LL)A[i]*B[i]%md+md)%md;\n    NTT(B,0);\n    for(int i=n;i<lim;++i)B[i]=0;\n}\nvoid REV(int*A,int n){std::reverse(A,A+n+1);}\nvoid MOD(const int*a,const int*b,int*R,int n,int m){\n    static int A[N],B[N],D[N];\n    for(int i=0;i<n<<1;++i)D[i]=0;\n    for(int i=0;i<=m;++i)B[i]=b[i];\n    REV(B,m);\n    for(int i=n-m+1;i<n<<1;++i)B[i]=0;\n    INV(B,D,n-m+1);\n    init(n-m+1<<1);\n    for(int i=0;i<=n-m+1;++i)A[i]=a[n-i];\n    for(int i=n-m+2;i<lim;++i)A[i]=0;\n    NTT(A,1),NTT(D,1);\n    for(int i=0;i<lim;++i)D[i]=(LL)D[i]*A[i]%md;\n    NTT(D,0);\n    REV(D,n-m);\n    init(n+1<<1);\n    for(int i=n-m+1;i<lim;++i)D[i]=0;\n    for(int i=0;i<lim;++i)A[i]=B[i]=0;\n    for(int i=0;i<=m;++i)B[i]=b[i];\n    for(int i=0;i<=n;++i)A[i]=a[i];\n    NTT(B,1),NTT(D,1);\n    for(int i=0;i<lim;++i)B[i]=(LL)B[i]*D[i]%md;\n    NTT(B,0);\n    for(int i=0;i<m;++i)upd(R[i]=A[i]-B[i]);\n}\n//Poly end\nint n,m,A[N],a[N],*P[N],len[N];\nvoid solve(int l,int r,int o){\n    if(l==r){\n        len[o]=1;\n        P[o]=new int[2];\n        upd(P[o][0]=-a[l]),P[o][1]=1;\n        return;\n    }\n    const int mid=l+r>>1,L=o<<1,R=L|1;\n    solve(l,mid,L),solve(mid+1,r,R);\n    len[o]=len[L]+len[R];\n    P[o]=new int[len[o]+1];\n    init(len[o]+1<<1);\n    static int A[N],B[N];\n    for(int i=len[L];~i;--i)A[i]=P[L][i];\n    for(int i=len[L]+1;i<lim;++i)A[i]=0;\n    for(int i=len[R];~i;--i)B[i]=P[R][i];\n    for(int i=len[R]+1;i<lim;++i)B[i]=0;\n    NTT(A,1),NTT(B,1);\n    for(int i=0;i<lim;++i)A[i]=(LL)A[i]*B[i]%md;\n    NTT(A,0);\n    for(int i=len[o];~i;--i)P[o][i]=A[i];\n}\nvoid solve(int l,int r,int o,const int*A){\n    if(l==r){printf(\"%d\\n\",*A);return;}\n    const int mid=l+r>>1,L=o<<1,R=L|1;\n    int B[len[o]+2<<1];\n    MOD(A,P[L],B,len[o]-1,len[L]);\n    solve(l,mid,L,B);\n    MOD(A,P[R],B,len[o]-1,len[R]);\n    solve(mid+1,r,R,B);\n}\nint main(){\n    for(int i=0;i<19;++i){\n        int*G=g[i];\n        G[0]=1;\n        const int gi=G[1]=pow(3,(md-1)/(1<<i+1));\n        for(int j=2;j<1<<i;++j)G[j]=(LL)G[j-1]*gi%md;\n    }\n    scanf(\"%d%d\",&n,&m);if(!m)return 0;\n    for(int i=0;i<=n;++i)scanf(\"%d\",A+i);\n    for(int i=1;i<=m;++i)scanf(\"%d\",a+i);\n    solve(1,m,1);\n    if(n>=m)MOD(A,P[1],A,n,m);\n    solve(1,m,1,A);\n    return 0;\n}\n```",
        "postTime": 1545821056,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5050 \u3010\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c\u3011"
    },
    {
        "content": "## \u591a\u70b9\u6c42\u503c\u63d2\u503c\u3001\u8f6c\u7f6e\u7b97\u6cd5\u4ee5\u53ca\u8303\u5fb7\u8499\u5fb7\u77e9\u9635\u9006\n\n### \u591a\u70b9\u6c42\u503c\n\n\u7ed9\u5b9a $n$ \u9879\u591a\u9879\u5f0f $f(x)$ \u53ca $a_0,a_1\\cdots,a_{m-1}$\uff0c\u6c42 $f(a_0),f(a_1),f(a_2)\\cdots f(a_{m-1})$\u3002\n\n\u8fd9\u5c31\u662f\u7ecf\u5178\u7684\u591a\u70b9\u6c42\u503c\u95ee\u9898\u3002\u6211\u4eec\u6709\u5bb9\u6613\u7406\u89e3\u7684 $\\Theta(n\\log^2n)$ \u7b97\u6cd5\uff1a\n\n\u6ce8\u610f\u5230 $f(a_i) \\equiv f(x)\\pmod{(x-a_i)}$\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6c42\u51fa $f(x)$ \u5bf9 $m$ \u4e2a\u5355\u9879\u5f0f\u53d6\u6a21\u7684\u7ed3\u679c\u3002\u6211\u4eec\u5206\u6cbb\uff1a\u5c06\u6c42\u503c\u70b9 $0\\sim m-1$ \u5747\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u4e8e\u524d\u4e00\u90e8\u5206\uff0c\u5f53\u524d\u591a\u9879\u5f0f\u5bf9 $\\prod\\limits_{i=0}^{m/2}(x-a_i)$ \u53d6\u6a21\u540e\u9012\u5f52\uff0c\u5bf9 $\\prod\\limits_{i=m/2+1}^{m-1}(x-a_i)$ \u53d6\u6a21\u540e\u9012\u5f52\u4e0b\u53bb\u5373\u53ef\u3002\u53d6\u6a21\u590d\u6742\u5ea6 $\\Theta(n\\log n)$\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f $\\Theta(n\\log^2n)$ \u7684\u3002\u8fd9\u4e2a\u7b97\u6cd5\u5bb9\u6613\uff0c\u4f46\u662f\u53d6\u6a21\u5177\u6709\u6781\u5927\u5e38\u6570\uff0c\u6240\u4ee5\u603b\u6548\u7387\u6781\u4f4e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u6709\u66f4\u4f18\u3001\u4e14\u7406\u8bba\u4ef7\u503c\u66f4\u9ad8\u7684\u8f6c\u7f6e\u7b97\u6cd5\u3002\n\n### \u8f6c\u7f6e\u7b97\u6cd5\n\n\u591a\u70b9\u6c42\u503c\u7b97\u6cd5\u7684\u672c\u8d28\u662f\u76f8\u5f53\u7b80\u5355\u7684\uff1a\u6c42\u4e00\u4e2a\u5411\u91cf\u5de6\u4e58\u8303\u5fb7\u8499\u5fb7\u77e9\u9635\n$$\n\\mathrm V(a_0,\\cdots,a_{m-1})=\\begin{bmatrix}1 & a_0 & a_0^2 &\\cdots& a_0^{n-1} \\\\ 1 & a_1 & a_1^2 &\\cdots& a_1^{n-1} \\\\ \\vdots&\\vdots&\\vdots &\\ddots& \\vdots \\\\ 1 & a_{m-1} & a_{m-1}^2 &\\cdots& a_{m-1}^{n-1} \\end{bmatrix}\n$$\n\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u77e9\u9635 $\\mathrm V$ \u7684\u8f6c\u7f6e $\\mathrm V^{T}$ \u5de6\u4e58\u5411\u91cf\u662f\u597d\u6c42\u7684\uff1a \n$$\n\\mathrm V^T(a_0,a_1,\\cdots,a_{m-1}) =\n\\begin{bmatrix}\n1 & 1 &\\cdots& 1 \\\\\na_0 & a_1 &\\cdots& a_{m-1} \\\\\n\\vdots &\\vdots &\\ddots& \\vdots \\\\\na_0^{n-1} & a_1^{n-1} &\\cdots& a_{m-1}^{n-1}\n\\end{bmatrix}\n,\\quad\\quad g_i = \\sum_{j=0}^{m-1} f_ja_j^i\n$$\n\u8fd9\u91cc\u82e5 $\\mathrm V$ \u4e0d\u662f\u65b9\u9635\uff0c\u65e0\u6cd5\u53f3\u4e58\u76f8\u540c\u7684\u5411\u91cf\u3002\u6240\u4ee5\u8ba4\u4e3a $n=m$\uff0c\u4e0d\u5931\u4e00\u822c\u6027\u3002\n\n\u8bb0 $G(x)$ \u4e3a $g_i$ \u7684\u751f\u6210\u51fd\u6570\uff0c\u6709\n$$\nG(x) = \\sum_{n\\ge 0}\\sum_{i=0}^{m-1}f_i(a_ix)^n = \\sum_{i=0}^{m-1}\\frac {f_i}{1-a_ix}\n$$\n\u8f83\u4e3a\u6e05\u6670\u7684\u5f62\u5f0f\u4e0b\uff0c\u53ef\u4ee5\u91c7\u7528\u5206\u6cbb\u6c42 $G(x)$ \u7684\u524d $n$ \u9879\u3002\u7ef4\u62a4\u5206\u6bcd\u5373 $Q_{l,r}(x) = \\prod\\limits_{i=l}^{r}(1-a_ix)$ \u548c\u5206\u5b50 $P_{l,r}(x)$\u3002\n\n\u5bf9\u4e8e\u5206\u6cbb\u533a\u95f4 $[l,r]$ \u53ca\u4e2d\u70b9 $m$\uff0c\n$$\n\\begin{aligned}\nQ_{l,r}(x) &= Q_{l,m}(x)\\times Q_{m + 1,r}(x) \\\\\nP_{l,r}(x) &= P_{l,m}(x)\\times Q_{m + 1,r}(x) + P_{m+1,r}(x)\\times Q_{l,m}(x)\n\\end{aligned}\n$$\n\u6ce8\u610f\u5230\u4e58\u6cd5\u548c\u52a0\u6cd5\u90fd\u4e0d\u8d85\u8fc7\u533a\u95f4\u957f\u5ea6\u9879\uff0c\u6240\u4ee5\u7b97\u6cd5\u590d\u6742\u5ea6\u662f $\\Theta(n\\log^2n)$ \u7684\u3002\n\n\u8fd9\u4e2a\u77e9\u9635\u8f6c\u7f6e\u540e\u7684\u7b97\u6cd5\u548c\u6211\u4eec\u9700\u8981\u7684\u7b97\u6cd5\u6709\u4ec0\u4e48\u8054\u7cfb\u5462\uff1f\n\n\u8003\u8651 $A,B$ \u77e9\u9635\uff0c$(AB)^T = B^TA^T$\uff0c\u4ee5\u53ca $(A_1A_2\\cdots A_k)^T = A_k^TA_{k-1}^T\\cdots A_0^T$\u3002\n\n\u8003\u8651\u5230\u591a\u70b9\u6c42\u503c\u6574\u4e2a\u7b97\u6cd5\u662f**\u5173\u4e8e\u521d\u59cb\u5411\u91cf**\u7684\u7ebf\u6027\u53d8\u6362\uff0c\u4ee5\u53ca\u5176\u4e2d\u7684\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u662f\u7ebf\u6027\u7684\uff1b\u5177\u4f53\u6765\u8bf4\uff0c\u89c2\u5bdf\u5206\u6cbb\u5408\u5e76\u8fc7\u7a0b\uff0c$Q(x)$ \u7684\u6c42\u89e3\u548c\u521d\u59cb\u5411\u91cf $f_i$ \u65e0\u5173\uff0c\u53ef\u4ee5\u89c6\u4f5c\u5e38\u91cf\u3002\u800c $P(x)$ \u7684\u6c42\u89e3\u662f\u6709\u5173 $f_i$ \u7684\u5173\u4e8e $x$ \u7684\u591a\u9879\u5f0f\u4e0e\u5e38\u591a\u9879\u5f0f\u76f8\u4e58\u518d\u76f8\u52a0\uff0c\u4e3a\u4ec0\u4e48\u5b83\u662f\u7ebf\u6027\u7684\u5462\uff1f\u53ef\u4ee5\u770b\u51fa\uff0c$[x^k]P(x)$ \u59cb\u7ec8\u5177\u6709 $\\sum\\limits_{i=0}^{m-1}f_ic_{k,i}$ \u7684\u5f62\u5f0f\uff0c$c_{k,i}$ \u662f\u5e38\u6570\u3002\u8fd9\u548c\u77e9\u9635\u4f5c\u7528\u4e0b\u5411\u91cf\u5f97\u5230\u7684\u9879\u662f\u76f8\u7b26\u7684\u3002\n\n**\u4e5f\u5c31\u662f\u8bf4\uff0c$P(x)$ \u662f\u4e00\u4e2a\u77e9\u9635\uff08\u53d8\u6362\uff09\uff0c\u884c\u6309\u7167 $x$ \u7684\u5e42\u6807\u53f7\uff0c\u5217\u6309\u7167 $f_i$ \u6807\u53f7\u3002\u800c $Q(x)$ \u662f\u4e00\u4e2a\uff08\u5217\uff09\u5411\u91cf\u3002**\n\n\u6211\u4eec\u5c06\u6c42\u89e3\u8f6c\u7f6e\u53d8\u6362 $\\mathrm V^T$ \u95ee\u9898\u7684\u6bcf\u4e00\u4e2a\u8f83\u4e3a\u57fa\u672c\u7684\u6b65\u9aa4\u9006\u5e8f\u8fdb\u884c\uff0c\u5e76\u4fee\u6539\u4e3a\u8f6c\u7f6e\u8fc7\u7a0b\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u539f\u53d8\u6362 $\\mathrm V$ \u95ee\u9898\u7684\u7b97\u6cd5\uff0c\u4e0d\u59a8\u79f0\u4e3a\u8f6c\u7f6e\u7b97\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u76f8\u4fe1\uff0c\u8f6c\u7f6e\u7b97\u6cd5\u548c\u539f\u7b97\u6cd5\u6709\u76f8\u540c\u7684\u590d\u6742\u5ea6\uff1b\u56e0\u4e3a\u6211\u4eec\u8fdb\u884c\u76f8\u540c\u591a\u6b21\u7684\u7ebf\u6027\u8fd0\u7b97\u3002\n\n\u8fd9\u5c31\u662f**\u8f6c\u7f6e\u539f\u7406**\uff0c\u6216\u79f0**\u7279\u52d2\u6839\u539f\u7406**\uff08$\\text{Tellegen's Principle}$\uff09\u3002\n\n---\n\n\u73b0\u5728\u6211\u4eec\u5c1d\u8bd5\u63cf\u8ff0\u4e0a\u8ff0\u7b97\u6cd5\u7684\u8f6c\u7f6e\u7b97\u6cd5\u3002\n\n\u9996\u5148\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u6211\u4eec\u5c06\u5982\u4f55\u5206\u89e3\u77e9\u9635 $\\mathrm V^T$ \u3002\u5982\u679c\u5206\u89e3\u4e3a\u521d\u7b49\u77e9\u9635\u7684\u8bdd\uff0c\u6240\u6709\u8f6c\u7f6e\u662f\u663e\u7136\u7684\uff0c\u4f46\u662f\u51fa\u4e8e\u5c01\u88c5\u548c\u5b58\u5728\u4e2d\u95f4\u53d8\u91cf\u7684\u5173\u7cfb\uff0c\u4e0d\u59a8\u5206\u6790\u5c06\u54ea\u4e9b\u6b65\u9aa4\u4f5c\u4e3a\u57fa\u672c\u6b65\u9aa4\u9006\u5e8f\u5e76\u8f6c\u7f6e\u3002\u539f\u7b97\u6cd5\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a\n$$\n\\begin{aligned}\n&1\\ \\ \\text{Solve} (l,r): \\\\\n&2\\ \\quad\\quad \\text{if } l = r: \\text{return }f_l \\\\\n&3\\ \\quad\\quad m \\leftarrow \\lfloor(l+r)/2\\rfloor \\\\\n&4\\ \\quad\\quad F,x,y \\leftarrow 0 \\quad\\quad\\quad\\quad \\text{// initial value can be given before all, doesn't count}\\\\\n&5\\ \\quad\\quad L \\leftarrow \\mathrm{Solve}(l,m) \\\\\n&6\\ \\quad\\quad R \\leftarrow \\mathrm{Solve}(m+1,r) \\\\\n&7\\ \\quad\\quad x \\leftarrow x + L\\times Q_{m+1,r}(x) \\\\\n&8\\ \\quad\\quad y \\leftarrow y + R\\times Q_{l,m}(x) \\\\\n&9\\ \\quad\\quad F \\leftarrow F+1\\times x \\\\\n1&0\\ \\quad\\quad F \\leftarrow F+1\\times y \\\\\n1&1\\ \\quad\\quad \\mathrm {return\\ } F \\\\\n1&2\\ \\ g \\leftarrow g+\\mathrm{Solve}(0,m-1)\\times Q_{0,m-1}(x)\n\\end{aligned}\n$$\n\u6ce8\u610f\u5230\u6211\u4eec\u5c06\u8d4b\u503c\u548c\u52a0\u6cd5\u8fd0\u7b97\u4fee\u6539\u4e3a\u4e86\u521d\u7b49\u53d8\u6362\u7684\u5f62\u5f0f $x \\leftarrow x + c\\times y$\uff08\u8bf7\u6ce8\u610f $x,y,L,R$ \u90fd\u662f\u5173\u4e8e $f_i$ \u7684\u5411\u91cf\uff1b\u51fd\u6570\u8fd4\u56de\u503c\u5360\u7528\u7684\u53d8\u91cf\u548c $L,R$ \u8ba4\u4e3a\u662f\u4e00\u81f4\u7684\uff0c\u8fd9\u91cc\u4e0d\u5b58\u5728\u8d4b\u503c\uff09\u3002\u5b83\u7684\u8f6c\u7f6e\u662f $y\\leftarrow y + c\\times x$\u3002 \u8fd9\u662f\u5341\u5206\u91cd\u8981\u7684\u3002\n\n\u7a0b\u5e8f\u4e2d\u6709\u4e00\u4e9b\u5b9e\u9645\u4e0a\u987a\u5e8f\u65e0\u5173\u7684\u8fc7\u7a0b\uff0c\u6bd4\u5982 $5,6$ \u4e4b\u95f4\uff0c$7,8$ \u53ca $9,10$ \u4e4b\u95f4\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u540e\u5e8f\u904d\u5386\u7684\u9012\u5f52\u7b97\u6cd5\u3002\u6240\u4ee5\u6211\u4eec\u6539\u6210\u5148\u5e8f\u904d\u5386\u3002\u89c2\u5bdf\u5230\uff0c**\u6bcf\u4e00\u5c42\u9012\u5f52\u7684 $F$ \u503c\u4e8b\u5148\u7531\u4e0a\u4e00\u5c42\u7ed9\u51fa\u4e86**\uff0c\u6240\u4ee5\u6539\u6210\u4e0d\u8fd4\u56de\u7684\u8fc7\u7a0b\uff0c\u591a\u5e26\u4e00\u4e2a\u53c2\u6570\u3002\u5c1d\u8bd5\u5199\u51fa\uff1a\n$$\n\\begin{aligned}\n&1\\ \\ \\text{Solve} (l,r,F): \\\\\n&2\\ \\quad\\quad \\text{if } l = r: f_l\\leftarrow F_0;\\text{ return } \\\\\n&3\\ \\quad\\quad m \\leftarrow \\lfloor(l+r)/2\\rfloor \\\\\n&4\\ \\quad\\quad x \\leftarrow x+1\\times^T F \\\\\n&5\\ \\quad\\quad y \\leftarrow y+1\\times^T F \\\\\n&6\\ \\quad\\quad L \\leftarrow L + x\\times^T Q_{m+1,r}(x) \\\\\n&7\\ \\quad\\quad R \\leftarrow R + y\\times^T Q_{l,m}(x) \\\\\n&8\\ \\quad\\quad \\mathrm{Solve}(l,m,L) \\\\\n&9\\ \\quad\\quad \\mathrm{Solve}(m+1,r,R) \\\\\n1&0\\ \\quad\\quad \\mathrm{return} \\\\\n1&1\\ \\ \\mathrm{Solve}(0,m-1,g\\times^T Q_{0,m-1}(x))\n\\end{aligned}\n$$\n\u5f62\u5f0f\u610f\u5916\u5730\u66f4\u52a0\u7b80\u5355\uff0c\u518d\u5c06 $x,y$ \u7701\u7565\u6389\u53ef\u5f97\n$$\n\\begin{aligned}\n&1\\ \\ \\text{Solve} (l,r,F): \\\\\n&2\\ \\quad\\quad \\text{if } l = r: f_l\\leftarrow F_0;\\text{ return } \\\\\n&3\\ \\quad\\quad m \\leftarrow \\lfloor(l+r)/2\\rfloor \\\\\n&6\\ \\quad\\quad L \\leftarrow L + F\\times^T Q_{m+1,r}(x) \\\\\n&7\\ \\quad\\quad R \\leftarrow R + F\\times^T Q_{l,m}(x) \\\\\n&8\\ \\quad\\quad \\mathrm{Solve}(l,m,L) \\\\\n&9\\ \\quad\\quad \\mathrm{Solve}(m+1,r,R) \\\\\n1&0\\ \\quad\\quad \\mathrm{return} \\\\\n1&1\\ \\  \\mathrm{Solve}(0,m-1,g\\times^T Q_{0,m-1}(x))\n\\end{aligned}\n$$\n\u8fd9\u91cc $\\times^T$ \u662f\u591a\u9879\u5f0f\u4e58\u6cd5\uff0c\u5373\u5404\u9879\u5377\u79ef\u7684\u8f6c\u7f6e\uff1b\u5b9e\u9645\u4e0a\u53ea\u8981\u628a\u6bcf\u4e00\u6b21\u300c\u4e24\u9879\u76f8\u4e58\u7d2f\u52a0\u300d\u7684\u8fc7\u7a0b\u7f6e\u6362\u5373\u53ef\uff0c\u5b83\u4eec\u7684\u987a\u5e8f\u662f\u65e0\u5173\u7d27\u8981\u7684\u3002\n\n\u8bbe $c_k = \\sum\\limits_{i=0}^ka_{k-i}b_i$\uff0c\u5176\u4e2d $a_i$ \u662f\u521d\u59cb\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\u800c $b_i$ \u662f\u5e38\u91cf\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fc7\u7a0b\n$$\nc_k \\leftarrow c_k + a_{k-i}\\times b_i\n$$\n\u7f6e\u6362\u5f97\u5230\n$$\na_{k-i} \\leftarrow a_{k-i} + c_k\\times b_i\n$$\n\u8fd9\u662f\u5dee\u9879\u5377\u79ef\u3002\u4f46\u662f\u6ce8\u610f\u5230\u539f\u4e58\u6cd5\u8d85\u8fc7\u9879\u6570\u7684\u4e0d\u4f1a\u6709\u8d21\u732e\uff0c\u6240\u4ee5\u9700\u8981\u622a\u53d6\u5dee\u5377\u79ef\u7684 $n-m+1$ \u9879\uff08\u9664\u4e86\u9012\u5f52\u524d\u7684\u4e00\u6b21\u4e58\u6cd5\uff09\uff0c\u540c\u65f6\u4fdd\u8bc1\u4e86\u590d\u6742\u5ea6\u4ecd\u662f $\\Theta(n\\log^2n)$\u3002\n\n\u53e6\u5916\uff0c\u9664\u4e86\u5206\u6790\u7d2f\u52a0\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u79cd DFT \u8f6c\u7f6e\u7684\u89e3\u6cd5\u3002\n\n\u8003\u8651\u53e6\u4e00\u79cd\u4e58\u6cd5\u7684\u63cf\u8ff0\uff1aDFT\uff0c\u5bf9\u5e94\u70b9\u76f8\u4e58\uff0cIDFT\u3002\n\nDFT \u7684\u53d8\u6362\u77e9\u9635 $(\\omega_n^i)^j = (\\omega_n^j)^i = (\\omega_n)^{ij}$\uff0c\u6240\u4ee5\u5b83\u662f\u5bf9\u79f0\u7684\uff0c\u8f6c\u7f6e\u7b49\u4e8e\u672c\u8eab\u3002 IDFT \u53c8\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e00\u6b21 DFT\uff0c\u4e00\u6b21\u6570\u4e58\u548c\u4e00\u6b21\u9006\u5e8f\u3002\u9006\u5e8f\u53d8\u6362\u7684\u77e9\u9635\u5c31\u662f\u526f\u5bf9\u89d2\u7ebf\uff0c\u4e5f\u662f\u5bf9\u79f0\u7684\u3002\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u8f6c\u7f6e\u540e\u5c31\u662f\uff1a\u9006\u5e8f\uff0c\u6570\u4e58\uff0cDFT\uff0c\u5bf9\u5e94\u70b9\u76f8\u4e58\uff0cDFT\u3002\u8fd9\u91cc\u7684\u82e5\u5e72\u9879\u90fd\u662f\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u300c\u53d8\u6362\u300d\u4e86\uff0c\u6ca1\u6709\u5fc5\u8981\u5c55\u5f00\u3002\n\n\u81ea\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u5168\u89e3\u51b3\u4e86\u591a\u70b9\u6c42\u503c\u95ee\u9898\u3002\n\n```c++\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <vector>\n\nconst int N = 64000 * 4;\nconst int p = 998244353;\ntypedef std::vector <int> Poly;\n\nchar buf[1 << 25] ,*p1 = buf ,*p2 = buf;\n#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf ,1 ,1 << 21 ,stdin) ,p1 == p2) ? EOF : *p1++)\ninline int read() {\n    int x = 0, f = 1; char ch = getchar();\n    while(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n    while(ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();\n    return x * f;\n}\n\ninline int pls(int a,int b) { return a + b >= p ? a + b - p : a + b; }\ninline int mus(int a,int b) { return a - b < 0 ? a - b + p : a - b; }\ninline int prd(int a,int b) { return 1ll * a * b % p; }\ninline int fastpow(int a,int b) {\n    int r = 1;\n    while(b) {\n        if(b & 1) r = 1ll * r * a % p;\n        a = 1ll * a * a % p;\n        b >>= 1;\n    }\n    return r;\n}\n\nint rev[N];\nvoid NTT(Poly &a) {\n    int N = a.size();\n    for(int i = 0;i < N;i++) rev[i] = (rev[i >> 1] >> 1) | ((i & 1) * N / 2);\n    for(int i = 0;i < N;i++) if(i > rev[i]) std::swap(a[i],a[rev[i]]);\n    for(int n = 2, m = 1;n <= N;m = n, n <<= 1) {\n        int g1 = fastpow(3,(p - 1) / n), t1, t2;\n        for(int l = 0;l < N;l += n) {\n            int g = 1;\n            for(int i = l;i < l + m;i++) {\n                t1 = a[i], t2 = prd(a[i + m],g);\n                a[i] = pls(t1,t2), a[i + m] = mus(t1,t2);\n                g = prd(g,g1);\n            }\n        }\n    }\n    return;\n}\n\nvoid INTT(Poly &a) {\n    NTT(a), std::reverse(a.begin() + 1,a.end()); \n    int invN = fastpow(a.size(),p - 2);\n    for(int i = 0;i < (int)a.size();i++) a[i] = prd(a[i],invN);\n}\n\nPoly Mul(Poly a,Poly b) {\n    int n = a.size() + b.size() - 1, N = 1;\n    while(N < (int)(a.size() + b.size())) N <<= 1;\n    a.resize(N), b.resize(N), NTT(a), NTT(b);\n    for(int i = 0;i < N;i++) a[i] = prd(a[i],b[i]);\n    INTT(a), a.resize(n);\n    return a;\n}\n\nPoly MulT(Poly a,Poly b) {\n    int n = a.size(), m = b.size(); \n    std::reverse(b.begin(),b.end()), b = Mul(a,b);\n    for(int i = 0;i < n;i++) a[i] = b[i + m - 1];\n    return a;\n}\n\nPoly tmp;\nPoly Inv(Poly a,int n) {\n    if(n == 1) return Poly(1,fastpow(a[0],p - 2));\n    Poly b = Inv(a,(n + 1) / 2);\n    int N = 1; while(N <= 2 * n) N <<= 1;\n    tmp.resize(N), b.resize(N);\n    for(int i = 0;i < n;i++) tmp[i] = a[i];\n    for(int i = n;i < N;i++) tmp[i] = 0;\n    NTT(tmp), NTT(b);\n    for(int i = 0;i < N;i++) b[i] = mus(prd(2,b[i]),prd(prd(b[i],b[i]),tmp[i]));\n    INTT(b), b.resize(n); return b;\n}\n\nint n,m; Poly a,f,v;\n\n#define lc(k) k << 1\n#define rc(k) k << 1 | 1\nconst int NODE = N * 4;\nPoly Q[NODE];\n\nvoid Init(Poly &a,int k,int l,int r) {\n    if(l == r) {\n        Q[k].resize(2);\n        Q[k][0] = 1, Q[k][1] = mus(0,a[l]);\n        return;\n    }\n    int m = (l + r) / 2;\n    Init(a,lc(k),l,m), Init(a,rc(k),m + 1,r);\n    Q[k] = Mul(Q[lc(k)],Q[rc(k)]);\n    return;\n}\n\nvoid Multipoints(int k,int l,int r,Poly F,Poly &g) {\n    F.resize(r - l + 1);\n    if(l == r) return void(g[l] = F[0]);\n    int m = (l + r) / 2;\n    Multipoints(lc(k),l,m,MulT(F,Q[rc(k)]),g);\n    Multipoints(rc(k),m + 1,r,MulT(F,Q[lc(k)]),g);\n    return;\n}\n\nvoid Multipoint(Poly f,Poly a,Poly &v,int n) {\n    f.resize(n + 1), a.resize(n);\n    Init(a,1,0,n - 1), v.resize(n);\n    Multipoints(1,0,n - 1,MulT(f,Inv(Q[1],n + 1)),v);\n    return;\n}\n\nint main() {\n    n = read() + 1, m = read();\n    for(int i = 0;i < n;i++) f.push_back(read());\n    for(int i = 0;i < m;i++) a.push_back(read());\n    Multipoint(f,a,v,std::max(n,m));\n    for(int i = 0;i < m;i++) std::printf(\"%d\\n\",v[i]);\n    return 0;\n}\n\n```\n\n\n\n## \u5feb\u901f\u63d2\u503c\n\n\u6709\u62c9\u683c\u6717\u65e5\u63d2\u503c\u516c\u5f0f\uff1a\n$$\nf(x) = \\sum_{i=0}^{n-1}y_i\\prod_{j\\ne i}\\frac{x-x_j}{x_i-x_j}\n$$\n\u6211\u4eec\u8981\u6c42\u8fd9\u4e2a\u5f0f\u5b50\u3002 \u76f4\u89c2\u7684 $\\Theta(n^2)$ \u7b97\u6cd5\u662f\u6c42\u51fa $F(x) = \\prod\\limits_{i=0}^{n-1}(x-x_i)$ \u548c $q_i = \\prod\\limits_{j\\ne i}(x_i-x_j)$\uff0c\u4f5c $n$ \u6b21\u591a\u9879\u5f0f\u9664\u4e00\u6b21\u5f0f\u5373\u53ef\u3002\n\n\u6c42 $n$ \u6b21\u591a\u9879\u5f0f\u9664\u5355\u9879\u5f0f\uff1f\u6211\u4eec\u4e0d\u7981\u628a\u5b83\u548c\u521a\u624d\u7684\u5206\u6cbb\u53d6\u6a21\u591a\u70b9\u6c42\u503c\u7b97\u6cd5\u8054\u7cfb\u8d77\u6765\u3002\u7136\u800c\u8fd9\u91cc\u6211\u4eec\u6c42\u7684\u662f\u9664\u6cd5\u5546\u800c\u975e\u4f59\u5f0f\uff0c\u6240\u4ee5\u5206\u6cbb\u53d6\u6a21\u662f\u4e0d\u5bf9\u7684\u3002\n\n\u8003\u8651\u591a\u9879\u5f0f $\\dfrac{F(x)}{x-x_i}$\uff0c\u5b83\u662f\u8fde\u7eed\u53ef\u5bfc\u7684\uff0c\u4e14\u5728\u9664 $x=x_i$ \u4ee5\u5916\u7684\u70b9\u90fd\u548c $\\prod\\limits_{j\\ne i}(x-x_j)$ \u503c\u76f8\u540c\u3002\u6240\u4ee5 $x-x_i$ \u662f\u5b83\u7684\u53ef\u53bb\u95f4\u65ad\u70b9\u3002\u53d6\u6781\u9650\u5f97\uff1a\n$$\n\\left.\\prod_{j\\ne i}(x-x_j)\\right|_{x=x_i} = \\lim_{x\\to x_i}\\frac{F(x)}{x-x_i} = \\lim_{x\\to x_i}F'(x) = F'(x_i)\n$$\n\u4f7f\u7528\u6d1b\u5fc5\u8fbe\u6cd5\u5219\u3002\u6240\u4ee5 $q_i = F'(x_i)$\u3002\u5206\u6cbb\u6c42\u51fa $F(x)$ \u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u70b9\u6c42\u503c\u5f97\u5230 $q_i$\u3002\n\n\u6211\u4eec\u8981\u6c42 $f_{0,n-1}(x) = \\sum\\limits_{i=0}^{n-1}\\dfrac{y_i}{q_i}\\prod\\limits_{j\\ne i}(x-x_j)$\uff0c\u4e0d\u59a8\u518d\u8bb0 $t_i = \\dfrac{y_i}{q_i}$\u3002\u8fd9\u4e2a\u5f62\u5f0f\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5206\u6cbb\u8ba1\u7b97\uff0c\u590d\u6742\u5ea6 $\\Theta(n\\log^2n)$\u3002\n\n```c++\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <vector>\n\nconst int N = 400001;\nconst int p = 998244353;\ntypedef std::vector <int> Poly;\n\nchar buf[1 << 25] ,*p1 = buf ,*p2 = buf;\n#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf ,1 ,1 << 21 ,stdin) ,p1 == p2) ? EOF : *p1++)\ninline int read() {\n    int x = 0, f = 1; char ch = getchar();\n    while(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n    while(ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();\n    return x * f;\n}\n\ninline int pls(int a,int b) { return a + b >= p ? a + b - p : a + b; }\ninline int mus(int a,int b) { return a - b < 0 ? a - b + p : a - b; }\ninline int prd(int a,int b) { return 1ll * a * b % p; }\ninline int fastpow(int a,int b) {\n    int r = 1;\n    while(b) {\n        if(b & 1) r = 1ll * r * a % p;\n        a = 1ll * a * a % p;\n        b >>= 1;\n    }\n    return r;\n}\n\nint rev[N];\nvoid NTT(Poly &a) {\n    int N = a.size();\n    for(int i = 0;i < N;i++) rev[i] = (rev[i >> 1] >> 1) | ((i & 1) * N / 2);\n    for(int i = 0;i < N;i++) if(i > rev[i]) std::swap(a[i],a[rev[i]]);\n    for(int n = 2, m = 1;n <= N;m = n, n <<= 1) {\n        int g1 = fastpow(3,(p - 1) / n), t1, t2;\n        for(int l = 0;l < N;l += n) {\n            int g = 1;\n            for(int i = l;i < l + m;i++) {\n                t1 = a[i], t2 = prd(a[i + m],g);\n                a[i] = pls(t1,t2), a[i + m] = mus(t1,t2);\n                g = prd(g,g1);\n            }\n        }\n    }\n    return;\n}\n\nvoid INTT(Poly &a) {\n    NTT(a), std::reverse(a.begin() + 1,a.end()); \n    int invN = fastpow(a.size(),p - 2);\n    for(int i = 0;i < (int)a.size();i++) a[i] = prd(a[i],invN);\n}\n\nPoly Mul(Poly a,Poly b) {\n    int n = a.size() + b.size() - 1, N = 1;\n    while(N < (int)(a.size() + b.size())) N <<= 1;\n    a.resize(N), b.resize(N), NTT(a), NTT(b);\n    for(int i = 0;i < N;i++) a[i] = prd(a[i],b[i]);\n    INTT(a), a.resize(n);\n    return a;\n}\n\nPoly MulT(Poly a,Poly b) {\n    int n = a.size(), m = b.size(); \n    std::reverse(b.begin(),b.end()), b = Mul(a,b);\n    for(int i = 0;i < n;i++) a[i] = b[i + m - 1];\n    return a;\n}\n\nPoly tmp;\nPoly Inv(Poly a,int n) {\n    if(n == 1) return Poly(1,fastpow(a[0],p - 2));\n    Poly b = Inv(a,(n + 1) / 2);\n    int N = 1; while(N <= 2 * n) N <<= 1;\n    tmp.resize(N), b.resize(N);\n    for(int i = 0;i < n;i++) tmp[i] = a[i];\n    for(int i = n;i < N;i++) tmp[i] = 0;\n    NTT(tmp), NTT(b);\n    for(int i = 0;i < N;i++) b[i] = mus(prd(2,b[i]),prd(prd(b[i],b[i]),tmp[i]));\n    INTT(b), b.resize(n); return b;\n}\n\nPoly Dervt(Poly a) {\n    for(int i = 0;i < (int)a.size() - 1;i++) a[i] = prd(i + 1,a[i + 1]);\n    a.pop_back(); return a;\n}\n\n#define lc(k) k << 1\n#define rc(k) k << 1 | 1\nPoly Q[N];\n\nvoid MultiInit(Poly &a,int k,int l,int r) {\n    if(l == r) {\n        Q[k].resize(2);\n        Q[k][0] = 1, Q[k][1] = mus(0,a[l]);\n        return;\n    }\n    int m = (l + r) / 2;\n    MultiInit(a,lc(k),l,m), MultiInit(a,rc(k),m + 1,r);\n    Q[k] = Mul(Q[lc(k)],Q[rc(k)]);\n    return;\n}\n\nvoid Multipoints(int k,int l,int r,Poly F,Poly &g) {\n    F.resize(r - l + 1);\n    if(l == r) return void(g[l] = F[0]);\n    int m = (l + r) / 2;\n    Multipoints(lc(k),l,m,MulT(F,Q[rc(k)]),g);\n    Multipoints(rc(k),m + 1,r,MulT(F,Q[lc(k)]),g);\n    return;\n}\n\nvoid Multipoint(Poly f,Poly a,Poly &v,int n) {\n    f.resize(n + 1), a.resize(n);\n    MultiInit(a,1,0,n - 1), v.resize(n);\n    Multipoints(1,0,n - 1,MulT(f,Inv(Q[1],n + 1)),v);\n    return;\n}\n\nint n; Poly x,y,t,f;\n\nPoly F[N];\nvoid InterInit(int k,int l,int r) {\n    if(l == r) {\n        F[k].resize(2);\n        F[k][0] = mus(0,x[l]), F[k][1] = 1;\n        return;\n    }\n    int m = (l + r) / 2;\n    InterInit(lc(k),l,m);\n    InterInit(rc(k),m + 1,r);\n    F[k] = Mul(F[lc(k)],F[rc(k)]);\n    return;\n}\n\nPoly InterSolve(int k,int l,int r,Poly &t) {\n    if(l == r) return Poly(1,t[l]);\n    int m = (l + r) / 2;\n    Poly L(InterSolve(lc(k),l,m,t));\n    Poly R(InterSolve(rc(k),m + 1,r,t));\n    R = Mul(R,F[lc(k)]);\n    L = Mul(L,F[rc(k)]);\n    for(int i = 0;i < (int)R.size();i++) L[i] = pls(L[i],R[i]);\n    return L;\n}\n\nvoid Interpolate(Poly x,Poly y,Poly &f,int n) {\n    InterInit(1,0,n - 1);\n    F[1] = Dervt(F[1]), Multipoint(F[1],x,t,n);\n    for(int i = 0;i < n;i++) t[i] = prd(y[i],fastpow(t[i],p - 2));\n    f = InterSolve(1,0,n - 1,t);\n    return;\n}\n\nint main() {\n    n = read();\n    for(int i = 0;i < n;i++) x.push_back(read()), y.push_back(read());\n    Interpolate(x,y,f,n);\n    for(int i = 0;i < n;i++) std::printf(\"%d \",f[i]);\n    return 0;\n}\n\n```\n\n\n\n### \u8303\u5fb7\u8499\u5fb7\u77e9\u9635\u9006\n\n\u63d2\u503c\u662f\u6c42\u70b9\u503c\u7684\u9006\u8fd0\u7b97\uff0c\u6240\u4ee5\u63d2\u503c\u5c31\u662f\u6c42\u8303\u5fb7\u8499\u5fb7\u77e9\u9635\u7684\u9006\u4e58\u5411\u91cf\u3002\n\n\u8fd9\u4e2a\u77e9\u9635\u6ca1\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u5f62\u5f0f\uff0c\u4f46\u662f\u6211\u4eec\u8fd9\u91cc\u5c31\u53ef\u4ee5\u901a\u8fc7\u62c9\u683c\u6717\u65e5\u516c\u5f0f\u5f97\u5230\n$$\n\\mathrm V^{-1}_{ij} = [x^{i}]\\prod\\limits_{k\\ne j}\\dfrac{x-x_k}{x_j-x_k}\n$$\n\u5c55\u5f00\u5f0f\u76f8\u5f53\u590d\u6742\u3002\n\n",
        "postTime": 1641781629,
        "uid": 219595,
        "name": "Vocalise",
        "ccfLevel": 9,
        "title": "\u591a\u70b9\u6c42\u503c\u63d2\u503c\u3001\u8f6c\u7f6e\u7b97\u6cd5\u4ee5\u53ca\u8303\u5fb7\u8499\u5fb7\u77e9\u9635\u9006"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P5050)\n\n\u4eba\u50bb\u5e38\u6570\u5927.jpg\n\n\u56e0\u4e3a\u6c42\u9006\u7684\u65f6\u5019\u6ca1\u6e05\u96f6\u7ed3\u679c\u8c03\u4e86\u51e0\u4e2a\u5c0f\u65f6\u2026\u2026\n\n## \u524d\u7f6e\u829d\u58eb\n\n\u591a\u9879\u5f0f\u9664\u6cd5\uff0c\u591a\u9879\u5f0f\u6c42\u9006\n\n\u4ec0\u4e48\uff1f\u4f60\u4e0d\u4f1a\uff1f\u5de6\u8f6c\u4f60\u8c37\u6a21\u677f\u533a\uff0c\u5305\u6559\u5305\u4f1a\n\n## \u9898\u89e3\n\n\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\u4e00\u4e2a\u7ed3\u8bba$$f(x_0)\\equiv f(x)\\pmod{(x-x_0)}$$\n\n\u5176\u4e2d$x_0$\u4e3a\u4e00\u4e2a\u5e38\u91cf\uff0c$f(x_0)$\u4e5f\u4e3a\u4e00\u4e2a\u5e38\u91cf\n\n\u8bc1\u660e\u5982\u4e0b\uff0c\u8bbe$f(x)=g(x)(x-x_0)+A$\uff0c\u4e5f\u5c31\u662f\u8bf4$A$\u662f$f(x)$\u5bf9$(x-x_0)$\u8fd9\u4e2a\u591a\u9879\u5f0f\u53d6\u6a21\u4e4b\u540e\u7684\u7ed3\u679c\n\n\u56e0\u4e3a$(x-x_0)$\u7684\u6700\u9ad8\u6b21\u9879\u4e3a$1$\uff0c\u6240\u4ee5$A$\u7684\u6700\u9ad8\u6b21\u9879\u4e3a$0$\uff0c\u4e5f\u5c31\u662f\u8bf4$A$\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u5373$f(x)\\equiv A\\pmod{(x-x_0)}$\n\n\u6211\u4eec\u628a$x_0$\u4ee3\u5165\u4e0a\u5f0f\uff0c\u5f97$f(x_0)=g(x_0)(x_0-x_0)+A$\uff0c\u540c\u7406\u53ef\u5f97$f(x_0)\\equiv A\\pmod{(x-x_0)}$\n\n\u4e8e\u662f\u6211\u4eec\u77e5\u9053\u4e0a\u5f0f\u6210\u7acb\n\n~~\u8fd9\u6709\u6bdb\u7528\u554a$O(n\\log n)$\u591a\u9879\u5f0f\u53d6\u6a21\u8fd8\u6ca1\u6211\u66b4\u529b\u5feb~~\n\n\u4e4d\u4e00\u770b\u7684\u786e\u6ca1\u5565\u5375\u7528\uff0c\u4f46\u662f\u8003\u8651\u53d6\u6a21\u7684\u8fc7\u7a0b\u662f\u5426\u80fd\u4f18\u5316\u5462\uff1f\n\n\u7b54\u6848\u662f\u53ef\u4ee5\u7684\uff0c\u6211\u4eec\u8003\u8651\u5206\u6cbb\u3002\u8bbe\u5f53\u524d\u5206\u6cbb\u533a\u95f4\u4e3a$[l,r]$\uff0c\u4ee4$P_0=\\prod_{i=l}^{mid}(x-x_i)$\uff0c$P_1=\\prod_{i=mid+1}^r (x-x_i)$\uff0c\u5f53\u524d\u5df2\u7ecf\u7b97\u51fa\u4e86$A\\equiv f(x)\\pmod{\\prod_{i=l}^r(x-x_i)}$\uff0c\u90a3\u4e48\u53ea\u8981\u5206\u522b\u7528$A$\u5bf9$P_0$\u548c$P_1$\u53d6\u6a21\uff0c\u7136\u540e\u7ee7\u7eed\u9012\u5f52\u4e0b\u53bb\u5c31\u884c\u4e86\u3002\u53d6\u6a21\u4e4b\u540e$A(x)$\u7684\u6700\u9ad8\u6b21\u9879\u7684\u6b21\u6570\u53d8\u4e3a\u539f\u6765\u7684\u4e00\u534a\uff0c\u95ee\u9898\u89c4\u6a21\u4e5f\u5c31\u53d8\u4e3a\u539f\u6765\u7684\u4e00\u534a\u3002\u7ee7\u7eed\u9012\u5f52\u4e0b\u53bb\u5c31\u884c\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n\\log^2n)$\n\nupd\uff1a\u6539\u4e86\u6539\u4ee3\u7801\uff0c\u5e38\u6570\u5e94\u8be5\u4f1a\u5c0f\u4e00\u70b9\uff0c\u6bd4\u65b9\u8bf4\u5206\u6cbb\u5230\u67d0\u4e2a\u65f6\u5019\u66b4\u529b\u79e6\u4e5d\u97f6\u5c55\u5f00\n\n```cpp\n//minamoto\n#include<bits/stdc++.h>\n#define R register\n#define fp(i,a,b) for(R int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(R int i=(a),I=(b)-1;i>I;--i)\n#define go(u) for(int i=head[u],v=e[i].v;i;i=e[i].nx,v=e[i].v)\nusing namespace std;\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline char getc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\nint read(){\n    R int res,f=1;R char ch;\n    while((ch=getc())>'9'||ch<'0')(ch=='-')&&(f=-1);\n    for(res=ch-'0';(ch=getc())>='0'&&ch<='9';res=res*10+ch-'0');\n    return res*f;\n}\nchar sr[1<<21],z[20];int C=-1,Z=0;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\nvoid print(R int x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]='-',x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=(1<<17)+5,P=998244353;\ninline int add(R int x,R int y){return x+y>=P?x+y-P:x+y;}\ninline int dec(R int x,R int y){return x-y<0?x-y+P:x-y;}\ninline int mul(R int x,R int y){return 1ll*x*y-1ll*x*y/P*P;}\nint ksm(R int x,R int y){\n\tR int res=1;\n\tfor(;y;y>>=1,x=mul(x,x))(y&1)?res=mul(res,x):0;\n\treturn res;\n}\nint r[19][N],w[2][N],lg[N],inv[19];\nvoid Pre(){\n\tfp(d,1,17){\n\t\tfp(i,1,(1<<d)-1)r[d][i]=(r[d][i>>1]>>1)|((i&1)<<(d-1));\n\t\tlg[1<<d]=d,inv[d]=ksm(1<<d,P-2);\n\t}\n\tfor(R int t=(P-1)>>1,i=1,x,y;i<131072;i<<=1,t>>=1){\n\t\tx=ksm(3,t),y=ksm(332748118,t),w[0][i]=w[1][i]=1;\n\t\tfp(k,1,i-1)\n\t\t\tw[1][k+i]=mul(w[1][k+i-1],x),\n\t\t\tw[0][k+i]=mul(w[0][k+i-1],y);\n\t}\n}\nint lim,d,n,m;\ninline void init(R int len){lim=1,d=0;while(lim<len)lim<<=1,++d;}\nvoid NTT(int *A,int ty){\n\tfp(i,0,lim-1)if(i<r[d][i])swap(A[i],A[r[d][i]]);\n\tfor(R int mid=1;mid<lim;mid<<=1)\n\t\tfor(R int j=0,t;j<lim;j+=(mid<<1))\n\t\t\tfp(k,0,mid-1)\n\t\t\t\tA[j+k+mid]=dec(A[j+k],t=mul(w[ty][mid+k],A[j+k+mid])),\n\t\t\t\tA[j+k]=add(A[j+k],t);\n\tif(!ty)fp(i,0,lim-1)A[i]=mul(A[i],inv[d]);\n}\nvoid Inv(int *a,int *b,int len){\n\tif(len==1)return b[0]=ksm(a[0],P-2),void();\n\tInv(a,b,len>>1),lim=(len<<1),d=lg[lim];\n\tstatic int A[N],B[N];\n\tfp(i,0,len-1)A[i]=a[i],B[i]=b[i];fp(i,len,lim-1)A[i]=B[i]=0;\n\tNTT(A,1),NTT(B,1);\n\tfp(i,0,lim-1)A[i]=mul(A[i],mul(B[i],B[i]));\n\tNTT(A,0);\n\tfp(i,0,len-1)b[i]=dec(add(b[i],b[i]),A[i]);\n\tfp(i,len,lim-1)b[i]=0;\n}\nstruct node{\n\tnode *lc,*rc;vector<int>vec;int deg;\n\tvoid Mod(const int *a,int *r,int n){\n\t\tstatic int A[N],B[N],D[N];\n\t\tint len=1;while(len<=n-deg)len<<=1;\n\t\tfp(i,0,n)A[i]=a[n-i];fp(i,0,deg)B[i]=vec[deg-i];\n\t\tfp(i,n-deg+1,len-1)B[i]=0;\n\t\tInv(B,D,len);\n\t\tlim=(len<<1),d=lg[lim];\n\t\tfp(i,n-deg+1,lim-1)A[i]=D[i]=0;\n\t\tNTT(A,1),NTT(D,1);\n\t\tfp(i,0,lim-1)A[i]=mul(A[i],D[i]);\n\t\tNTT(A,0);\n\t\treverse(A,A+n-deg+1);\n\t\tinit(n+1);\n\t\tfp(i,n-deg+1,lim-1)A[i]=0;\n\t\tfp(i,0,deg)B[i]=vec[i];fp(i,deg+1,lim-1)B[i]=0;\n\t\tNTT(A,1),NTT(B,1);\n\t\tfp(i,0,lim-1)A[i]=mul(A[i],B[i]);\n\t\tNTT(A,0);\n\t\tfp(i,0,deg-1)r[i]=dec(a[i],A[i]);\n\t}\n\tvoid Mul(){\n\t\tstatic int A[N],B[N];deg=lc->deg+rc->deg,vec.resize(deg+1),init(deg+1);\n\t\tfp(i,0,lc->deg)A[i]=lc->vec[i];fp(i,lc->deg+1,lim-1)A[i]=0;\n\t\tfp(i,0,rc->deg)B[i]=rc->vec[i];fp(i,rc->deg+1,lim-1)B[i]=0;\n\t\tNTT(A,1),NTT(B,1);\n\t\tfp(i,0,lim-1)A[i]=mul(A[i],B[i]);\n\t\tNTT(A,0);\n\t\tfp(i,0,deg)vec[i]=A[i];\n\t}\n}pool[N],*rt;\nint A[N],a[N],tot;\ninline node* newnode(){return &pool[tot++];}\nvoid solve(node* &p,int l,int r){\n\tp=newnode();\n\tif(l==r)return p->deg=1,p->vec.resize(2),p->vec[0]=P-a[l],p->vec[1]=1,void();\n\tint mid=(l+r)>>1;\n\tsolve(p->lc,l,mid),solve(p->rc,mid+1,r);\n\tp->Mul();\n}\nint b[25];\nvoid calc(node* p,int l,int r,const int *A){\n\tif(r-l<=512){\n\t\tfp(i,l,r){\n\t\t\tint x=a[i],c1,c2,c3,c4,now=A[r-l];\n\t\t\tb[0]=1;fp(j,1,16)b[j]=mul(b[j-1],x);\n\t\t\tfor(R int j=r-l-1;j-15>=0;j-=16){\n\t\t\t\tc1=(1ll*now*b[16]+1ll*A[j]*b[15]+1ll*A[j-1]*b[14]+1ll*A[j-2]*b[13])%P,\n\t\t\t\tc2=(1ll*A[j-3]*b[12]+1ll*A[j-4]*b[11]+1ll*A[j-5]*b[10]+1ll*A[j-6]*b[9])%P,\n\t\t\t\tc3=(1ll*A[j-7]*b[8]+1ll*A[j-8]*b[7]+1ll*A[j-9]*b[6]+1ll*A[j-10]*b[5])%P,\n\t\t\t\tc4=(1ll*A[j-11]*b[4]+1ll*A[j-12]*b[3]+1ll*A[j-13]*b[2]+1ll*A[j-14]*b[1])%P,\n\t\t\t\tnow=(0ll+c1+c2+c3+c4+A[j-15])%P;\n\t\t\t}\n\t\t\tfd(j,(r-l)%16-1,0)now=(1ll*now*x+A[j])%P;\n\t\t\tprint(now);\n\t\t}\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1,b[p->deg+1];\n\tp->lc->Mod(A,b,p->deg-1),calc(p->lc,l,mid,b);\n\tp->rc->Mod(A,b,p->deg-1),calc(p->rc,mid+1,r,b);\n}\nint main(){\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n\tn=read(),m=read();if(!m)return 0;\n\tPre();\n\tfp(i,0,n)A[i]=read();\n\tfp(i,1,m)a[i]=read();\n\tsolve(rt,1,m);\n\tif(n>=m)rt->Mod(A,A,n);\n\tcalc(rt,1,m,A);\n\treturn Ot(),0;\n}\n```",
        "postTime": 1550058751,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5050 \u3010\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c\u3011"
    },
    {
        "content": "\u8c03\u4e86\u4e00\u4e2a\u6708\u7ec8\u4e8e\u8c03\u51fa\u6765\u4e86\u2026\u2026\n\n\u8fd9\u91cc\u5c31\u52a0\u70b9\u8be6\u7ec6\u7684\u6ce8\u91ca\u8868\u660e\u54ea\u91cc\u5bb9\u6613\u5199\u9519\u597d\u4e86\u3002\u6bd5\u7adf\u6ca1\u9898\u89e3\u8c03\u8fd9\u79cd\u9898\u4f1a\u6b7b\u4eba\u7684\u2026\u2026\n\n---\n\u6211\u4eec\u53d1\u73b0\u5982\u679c\u6784\u9020\u4e00\u4e2a\u591a\u9879\u5f0f $P_{l,r}(x)=\\prod\\limits^r_{i=l}(x-a_i)$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6240\u6709\u7684 $l\\le i\\le r$\uff0c\u90fd\u6709 $P_{l,r}(a_i)=0$\u3002\n\n\u5b58\u5728\u4e00\u4e2a $n-(r-l+1)$ \u6b21\u591a\u9879\u5f0f $Q$\uff0c\u548c $r-l$ \u6b21\u591a\u9879\u5f0f $R$ \u6ee1\u8db3 $F(a_i)=P_{l,r}(a_i)Q(a_i)+R(a_i)$\u3002\u56e0\u4e3a $P_{l,r}(a_i)=0$\uff0c\u6240\u4ee5 $F(a_i)=R(a_i)$\u3002\u6211\u4eec\u4fbf\u6210\u529f\u628a\u4e00\u4e2a $n$ \u6b21\u591a\u9879\u5f0f\u53d8\u6210\u4e86 $r-l$ \u6b21\u591a\u9879\u5f0f\u3002\n\n\u6c42 $R(a_i)$\uff1f\u53d1\u73b0\u5b83\u5b9e\u9645\u4e0a\u662f $F$ \u6a21 $P_{l,r}$\uff0c\u591a\u9879\u5f0f\u9664\u6cd5/\u53d6\u6a21\uff01\n\n\u73b0\u5728\u8003\u8651\u5206\u6cbb\u3002\u4ee4 $F_{l,r}(x)$ \u4e3a\u5f53\u524d\u533a\u95f4\u7684\u591a\u9879\u5f0f\uff0c\u90a3\u4e48\u5206\u6210 $[l,mid]$ \u548c $[mid+1,r]$ \u8ba1\u7b97\u3002\u4ee5 $[l,mid]$ \u4e3a\u4f8b\uff0c$F_{l,r}(a_i)=P_{l,mid}(a_i)Q(a_i)+F_{l,mid}(a_i)$\u3002\n\n\u8fb9\u754c\uff1a$l=r$ \u65f6 $F$ \u6b21\u6570\u4e3a $0$\uff0c\u90a3\u4e48 $F(a_i)=[x^0]F_{l,r}(x)$\u3002\n\n\u4f46\u662f $P_{l,r}(x)$ \u76f4\u63a5\u6c42\u4e5f\u4e0d\u53ef\u627f\u53d7\u3002\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u53e6\u5916\u518d\u6765\u4e00\u6b21\u5206\u6cbb\uff0c$P_{l,r}(x)=P_{l,mid}(x)P_{mid+1,r}(x)$\u3002\u8fb9\u754c\u4e5f\u662f $l=r$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$T(n)=2T(\\frac{n}{2})+O(n\\log n)=O(n\\log^2n)$\u3002\n\n\u56e0\u4e3a\u81ea\u5e26\u5927\u5e38\u6570\uff0c\u6211\u5c31\u6a21\u4eff\u4e86@officeyutong \u7684\u505a\u6cd5\uff0c\u5728 $r-l\\le100$ \u7684\u65f6\u5019\u76f4\u63a5\u79e6\u4e5d\u97f6\u7206\u7b97\u3002\u5b9e\u9645\u4e0a\u4f1a\u8dd1\u5f97\u5feb\u5f88\u591a\u3002\n\n\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801+\u6ce8\u91ca\uff1a\uff08\u6211\u7528vector\u5199\u7684\uff0c\u53ef\u80fd\u4f1a\u6bd4\u8f83\u4e11\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=998244353,g=3;\n#define lson o<<1,l,mid\n#define rson o<<1|1,mid+1,r\n#define FOR(i,a,b) for(int i=(a);i<=(b);i++)\n#define ROF(i,a,b) for(int i=(a);i>=(b);i--)\ninline int read(){\n\tint x=0,f=0;char ch=getchar();\n\twhile(ch<'0' || ch>'9') f|=ch=='-',ch=getchar();\n\twhile(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn f?-x:x;\n}\nint n,m,b[64444],ans[64444];\nint limit,l,rev[266666];\nvector<int> poly[266666],a;\ninline void init(int upr){\n\tfor(limit=1,l=0;limit<=upr;limit<<=1,l++);\n\tFOR(i,0,limit-1) rev[i]=(rev[i>>1]>>1)|((i&1)<<(l-1));\n}\ninline int add(int x,int y){return x+y>=mod?x+y-mod:x+y;}\ninline int sub(int x,int y){return x<y?x-y+mod:x-y;}\ninline int qpow(int a,int b){\n\tint ans=1;\n\tfor(;b;b>>=1,a=1ll*a*a%mod) if(b&1) ans=1ll*ans*a%mod;\n\treturn ans;\n}\nvoid NTT(vector<int> &A,int tp){\n\twhile(A.size()<limit) A.push_back(0);\t//\u52a0\u4e0a\u8fd9\u8bdd\uff01\u4e0d\u7136\u4f1a\u8d8a\u754c\uff01\n\tFOR(i,0,limit-1) if(i<rev[i]) swap(A[i],A[rev[i]]);\n\tfor(int i=1;i<limit;i<<=1)\n\t\tfor(int j=0,r=i<<1,Wn=qpow(g,mod-1+tp*(mod-1)/r);j<limit;j+=r)\n\t\t\tfor(int k=0,w=1;k<i;k++,w=1ll*w*Wn%mod){\n\t\t\t\tint x=A[j+k],y=1ll*A[i+j+k]*w%mod;\n\t\t\t\tA[j+k]=add(x,y);A[i+j+k]=sub(x,y);\n\t\t\t}\n\tif(tp==-1){\n\t\tint linv=qpow(limit,mod-2);\n\t\tFOR(i,0,limit-1) A[i]=1ll*A[i]*linv%mod;\n\t}\n}\nvoid NTT(vector<int> A,vector<int> B,vector<int> &C){\n\tC.clear();\t//\u6e05\u7a7a\uff01\n\tNTT(A,1);NTT(B,1);\n\tFOR(i,0,limit-1) C.push_back(1ll*A[i]*B[i]%mod);\t//\u4e0d\u80fd\u76f4\u63a5\u7528\u4e0b\u6807\uff01\n\tNTT(C,-1);\n}\nvoid inv(vector<int> A,vector<int> &B,int deg){\t//\u9006\u5143\uff08\u5fc5\u987b\u4fdd\u8bc1\u8c03\u7528\u65f6B\u662f\u7a7a\u7684\uff09\n\tif(deg==1) return B.push_back(qpow(A[0],mod-2));\n\tinv(A,B,(deg+1)>>1);\n\tinit(deg<<1);\n\twhile(A.size()<limit) A.push_back(0);\t//\u867d\u7136NTT\u5185\u6709\u8865\u5168\u5230limit\u7684\u8bdd\uff0c\u4f46\u8fd9\u4e5f\u8981\u5199\n\tFOR(i,deg,limit-1) A[i]=0;\t//\u56e0\u4e3a\u8fd9\u91cc\u9700\u8981\u628adeg\u540e\u7684\u8bbe\u4e3a0\n\tNTT(A,1);NTT(B,1);\n\tFOR(i,0,limit-1) B[i]=1ll*sub(2,1ll*A[i]*B[i]%mod)*B[i]%mod;\n\tNTT(B,-1);\n\tFOR(i,deg,limit-1) B[i]=0;\n}\nvoid modulo(vector<int> A,vector<int> B,vector<int> &D,int n,int m){\n\t//\u53d6\u6a21\uff08\u987b\u4fdd\u8bc1B\u9ad8\u4f4d\u4e3a\u7a7a\uff0cA\u968f\u4fbf\uff09\n\twhile(A.size()<=n) A.push_back(0);\n\twhile(B.size()<=m) B.push_back(0);\t//\u628a\u7a7a\u4f4d\u8865\u5168\uff01\uff08\u5177\u4f53\u539f\u56e0\u4e0b\u6587\u4f1a\u8bf4\uff09\n\tif(n<m) return void(D=A);\t//\u5982\u679c\u9664\u4e0d\u4e86\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u88ab\u9664\u6570\uff01\n\tvector<int> Arev,Brev,Brevinv,Crev,C;D.clear();\n\tFOR(i,0,n) Arev.push_back(A[n-i]);\n\tFOR(i,0,m) Brev.push_back(B[m-i]);\n\tFOR(i,n-m+2,Arev.size()-1) Arev[i]=0;\n\tFOR(i,n-m+1,Brev.size()-1) Brev[i]=0;\t//\u8bb0\u5f97\u6e05\u96f6\n\tinv(Brev,Brevinv,n-m+1);\n\tinit((n-m+1)<<1);\n\tNTT(Arev,Brevinv,Crev);\n\tFOR(i,0,n-m) C.push_back(Crev[n-m-i]);\n\tinit(n<<1);\n\tNTT(B,C,D);\n\tFOR(i,0,m-1) D[i]=sub(A[i],D[i]);\n\tFOR(i,m,limit-1) D[i]=0;\n}\nvoid get_poly(int o,int l,int r){\n\tif(l==r) return void((poly[o].push_back(b[l]?mod-b[l]:0),poly[o].push_back(1)));\n    //l=r\u65f6\u5c31\u662fx-a_l\n\tint mid=(l+r)>>1;\n\tget_poly(lson);get_poly(rson);\t//\u5206\u6cbb\u4e24\u8fb9\n\tinit(r-l+1);\n\tNTT(poly[o<<1],poly[o<<1|1],poly[o]);\t//\u4e58\u5230\u81ea\u5df1\u8fd9\n}\nvoid solve(vector<int> A,int o,int l,int r){\n\tif(r-l<=100){\t//\u5e38\u6570\uff08\uff1f\uff09\u4f18\u5316\n\t\tFOR(i,l,r){\n\t\t\tint s=0;\n\t\t\tROF(j,A.size()-1,0) s=add(1ll*s*b[i]%mod,A[j]);\t//\u76f4\u63a5\u79e6\u4e5d\u97f6\n\t\t\tans[i]=s;\n\t\t}\n\t\treturn;\n\t}\n\tvector<int> B;int mid=(l+r)>>1;\n\tmodulo(A,poly[o<<1],B,r-l,mid-l+1);\t//\u53d6\u6a21\u5230\u5de6\u8fb9\n    //\u6b64\u65f6A\u7684\u6b21\u6570\u5e94\u8be5<=r-l\n\tsolve(B,lson);\n\tmodulo(A,poly[o<<1|1],B,r-l,r-mid);\t//\u53d6\u6a21\u5230\u53f3\u8fb9\n    //\u56e0\u4e3aA\u4e00\u5f00\u59cb\u7684\u6b21\u6570\uff08\u5c31\u662fn\uff09\u53ef\u80fd\u5de8\u5c0f\u65e0\u6bd4\uff0c\u751a\u81f3<r-l\uff0c\u6240\u4ee5\u5728\u53d6\u6a21\u4e2d\u8981\u628a\u9ad8\u4f4d\u8865\u9f50\uff0c\u4e0d\u7136\u53ef\u80fd\u8d8a\u754c\n\tsolve(B,rson);\n}\nint main(){\n\tn=read();m=read();\n\tFOR(i,0,n) a.push_back(read());\n\tFOR(i,1,m) b[i]=read();\n\tget_poly(1,1,m);\n\tmodulo(a,poly[1],a,n,m);\t//\u63d0\u524d\u53d6\u6a21\uff08\u6ce8\u610f\uff01\u5c31\u662f\u8fd9\u91cc\u53ef\u80fdn<m\uff0c\u6240\u4ee5\u5728\u53d6\u6a21\u4e2d\u5c31\u8981\u7279\u5224\uff09\n\tsolve(a,1,1,m);\n\tFOR(i,1,m) printf(\"%d\\n\",ans[i]);\n}\n```",
        "postTime": 1548821036,
        "uid": 72118,
        "name": "AThousandSuns",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5050 \u3010\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c\u3011"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P5050)\n## \u9898\u610f\n\u7ed9\u51fa $n$ \u6b21\u591a\u9879\u5f0f $F(x)=\\sum_{i=0}^n f_ix^i$\uff0c$m$ \u7ec4\u8be2\u95ee\uff0c\u7b2c $i$ \u6b21\u8be2\u95ee\u7ed9\u51fa $x_i$\uff0c\u6c42\u51fa $F(x_i)$ \u7684\u503c\u3002\n\n$1\\le n,m\\le 6.4\\times 10^4$.\n## \u601d\u8def\n$\\text{Update 2021.12.22}$\uff1a\u66f4\u6539\u4e86\u4ee3\u7801\u3002\n\n$\\text{Update 2022.04.07}$\uff1a\u5bf9\u4ee3\u7801\u5b9e\u73b0\u4e0e\u4ee3\u7801\u7ec6\u8282\u8fdb\u884c\u8865\u5145\u8bf4\u660e\u3002\n\n\u597d\u597d\u7406\u89e3\u4e86\u4e00\u4e0b\u51b3\u5b9a\u6765\u5199\u4e2a\u9898\u89e3\u3002\n\n\uff08\u4ee5\u4e0b\u9ed8\u8ba4 $mid=\\lfloor\\frac {l+r} 2\\rfloor$\uff09\n\n\u6211\u4eec\u5047\u8bbe $F=Q\\cdot G+R$\uff0c\u53ef\u4ee5\u5f97\u5230 $F(x_0)=Q(x_0)\\cdot G(x_0)+R(x_0)$\uff0c\u8003\u8651\u6784\u9020 $G(x)=x-x_0$ \u4f7f\u5f97 $F(x_0)=R(x_0)$\uff0c\u6b64\u65f6 $F$ \u5bf9 $1$ \u6b21\u591a\u9879\u5f0f $G$ \u53d6\u6a21\u540e\u5f97\u5230\u7684 $0$ \u6b21\u591a\u9879\u5f0f $R$ \u7684\u53d6\u503c\u4e0e\u5176 $x$ \u7684\u53d6\u503c\u65e0\u5173\uff0c\u5373 $R(x)=R(x_0)=F(x_0)$\u3002\n\n\u4e8e\u662f\u5bf9\u4e8e $m$ \u4e2a\u8be2\u95ee\u53ef\u4ee5\u5206\u6cbb\u5904\u7406\uff0c\u9012\u5f52 $[l,mid]$ \u548c $(mid,r]$ \u6c42\u51fa $\\displaystyle\\prod_{i=l}^{mid}(x-x_i)$ \u548c $\\displaystyle\\prod_{i=mid+1}^{r}(x-x_i)$\uff0c\u5c06\u5f53\u524d\u591a\u9879\u5f0f $F$ \u5bf9\u4e0a\u8ff0\u4e24\u591a\u9879\u5f0f\u5206\u522b\u53d6\u6a21\u540e\u9012\u5f52\u5904\u7406\u3002\u5bb9\u6613\u53d1\u73b0\uff0c$n\\le m$  \u65f6\u5bf9\u4e8e\u533a\u95f4 $[l,r]$ \u7684\u591a\u9879\u5f0f $F$ \u7684\u6b21\u6570\u4e3a $\\min(n,r-l+1)$\uff0c\u6ce8\u610f\uff0c$n>m$ \u65f6\u8fd8\u9700\u5148\u4ee4 $F$ \u5bf9 $\\displaystyle\\prod_{i=1}^m(x-x_i)$ \u53d6\u6a21\uff0c\u6216\u76f4\u63a5\u4ee4 $m=\\max(m,n)$\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6 $T(n)=2T(\\frac n 2)+O(n\\log n)=O(n\\log^2n)$ \u7684\u7b97\u6cd5\uff08\u5047\u8bbe $n,m$ \u540c\u9636\uff09\uff0c\u4f46\u7531\u4e8e\u591a\u9879\u5f0f\u53d6\u6a21\u7684\u5de8\u5927\u5e38\u6570\u8dd1\u5f97\u5f88\u6162\u3002\n\n\u6211\u4eec\u8bbe $G_{l,r}=\\displaystyle\\prod_{i=l}^r(x-x_i)$\uff0c\u663e\u7136\u5730\uff0c$G_{l,r}=G_{l,mid}\\cdot G_{mid+1,r}$\u3002\n\n\u7531\u4e8e $R$ \u53ea\u6709\u5e38\u6570\u9879\uff0c\u6545\u53ea\u9700\u7b97\u51fa $Q$ \u7684\u5e38\u6570\u9879\u5373\u53ef\u7b97\u51fa $R(x_0)$\uff0c\u8003\u8651\u5176\u610f\u4e49\uff0c\u53ef\u53d1\u73b0 $R(x_0)=[x^0]Q(x)\\cdot x_0+[x^0]F(x)$\u3002\n\n\u5728\u591a\u9879\u5f0f\u53d6\u6a21\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5f97\u5230\u4e86 $Q_R\\equiv \\dfrac {F_R}{G_R}(\\bmod x^{n-m+1})$ \u7684\u5f0f\u5b50\uff0c\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u6c42\u51fa $Q_R$ \u540e\u4f7f\u7528 ${G_{l,mid}}_R^{-1}={G_{l,r}}_R^{-1}{G_{mid+1,r}}_R$ \u5206\u6cbb\u5904\u7406\u3002\n\n\u9884\u5904\u7406\u5b8c $G$ \u540e\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa $\\dfrac{F_R}{{G_{1,m}}_R}$\uff0c\u9012\u5f52\u5230 $[l,r]$ \u533a\u95f4\u65f6\uff0c\u591a\u9879\u5f0f\u5373 $\\dfrac{F_R}{{G_{l,r}}_R}$\uff0c\u6240\u4ee5\u5f97\u5230\u4e86 $Q_R$\u3002\n\n\u8003\u8651\u5230 $Q_R$ \u5728\u9012\u5f52\u5230\u533a\u95f4 $[l,r]$ \u65f6\uff0c\u5bf9\u957f\u4e3a $r-l+1$ \u7684\u591a\u9879\u5f0f\u53d6\u6a21\uff0c\u4ece\u800c\u5176\u9879\u6570\u4e3a $r-l$\uff0c\u4e8e\u662f\u53ea\u4fdd\u7559 $Q$ \u7684\u540e $r-l$ \u4f4d\uff0c\u8fd9\u4e5f\u4fdd\u8bc1\u4e86\u8be5\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c\u5e38\u6570\u5c0f\u3002\n\n\u4e8b\u5b9e\u4e0a\u8fd9\u662f\u8f6c\u7f6e\u7b97\u6cd5\u7684\u53e6\u4e00\u79cd\u672c\u8d28\u76f8\u540c\u7684\u5bb9\u6613\u7406\u89e3\u7684\u65b9\u5f0f\u3002\n\n\u6709\u5173\u4ee3\u7801\uff1a\u4ee3\u7801\u4e2d\u7684 `T1` \u7ef4\u62a4\u7684\u662f $G_R$\uff0c`T2` \u7ef4\u62a4\u7684\u662f $Q$\uff0c\u4e0e\u4e0a\u9762\u7684\u8bb2\u8ff0\u7a0d\u6709\u533a\u522b\uff0c\u4f46\u672c\u8d28\u76f8\u540c\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{//by cyffff\n\t\n}\nconst int N=131072+10,mod=998244353,inv2=mod+1>>1;\nnamespace Init{\n\tint fac[N],ifac[N],inv[N],G[17][N];\n\tinline int qpow(int x,int y){\n\t\tint res=1;\n\t\twhile(y){\n\t\t\tif(y&1) res=1ll*res*x%mod;\n\t\t\tx=1ll*x*x%mod;\n\t\t\ty>>=1;\n\t\t}\n\t\treturn res;\n\t}\n\tinline void getG(){\n\t\tfor(int i=0;i<17;i++){\n\t\t\tint *P=G[i],W=1<<i;\n\t\t\tP[0]=1;\n\t\t\tP[1]=qpow(3,(mod-1)/(1<<i+1));\n\t\t\tconst int tmp=P[1];\n\t\t\tfor(int j=2;j<W;j++)\n\t\t\t\tP[j]=1ll*P[j-1]*tmp%mod;\n\t\t}\n\t}\n\tinline void Prefix(int L){\n\t\tfac[0]=1;\n\t\tfor(int i=1;i<=L;i++)\n\t\t\tfac[i]=1ll*fac[i-1]*i%mod;\n\t\tifac[L]=qpow(fac[L],mod-2);\n\t\tfor(int i=L;i>=1;i--)\n\t\t\tifac[i-1]=1ll*ifac[i]*i%mod;\n\t\tfor(int i=1;i<=L;i++)\n\t\t\tinv[i]=1ll*ifac[i]*fac[i-1]%mod;\n\t}\n}\nusing namespace Init;\nnamespace Poly{\n\tint lim,rev[N];\n\tint F[N],G[N],H[N];\n\tint T1[N],T2[N],T3[N];\n\tinline void init(int n,int mode=1){\n\t\tif(mode){\n\t\t\tint l=0;\n\t\t\tfor(lim=1;lim<=n;lim<<=1)l++;\n\t\t\tfor(int i=1;i<lim;i++)\n\t\t\t\trev[i]=(rev[i>>1]>>1)|((i&1)<<(l-1));\n\t\t}else{\n\t\t\tfor(lim=1;lim<=n;lim<<=1);\n\t\t}\n\t}\n\tinline void NTT(int *a,int T){\n\t\tfor(int i=0;i<lim;i++)\n\t\t\tif(i<rev[i])\n\t\t\t\tswap(a[i],a[rev[i]]);\n\t\tfor(int i=1,o=0;i<lim;i<<=1,o++){\n\t\t\tconst int *P=::G[o];\n\t\t\tfor(int j=0;j<lim;j+=(i<<1)){\n\t\t\t\tint t1,t2;\n\t\t\t\tfor(int k=0;k<i;k++){\n\t\t\t\t\tt1=a[j+k];\n\t\t\t\t\tt2=1ll*P[k]*a[i+j+k]%mod;\n\t\t\t\t\ta[j+k]=(t1+t2)%mod;\n\t\t\t\t\ta[i+j+k]=(t1-t2+mod)%mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(T==1) return ;\n\t\tint Inv=qpow(lim,mod-2);\n\t\treverse(a+1,a+lim);\n\t\tfor(int i=0;i<lim;i++)\n\t\t\ta[i]=1ll*a[i]*Inv%mod;\n\t}\n\tinline void Mul(int *a,int *b){\n\t\tfor(int i=0;i<lim;i++)\n\t\t\tF[i]=b[i];\n\t\tNTT(a,1),NTT(F,1);\n\t\tfor(int i=0;i<lim;i++)\n\t\t\ta[i]=1ll*a[i]*F[i]%mod;\n\t\tNTT(a,-1);\n\t}\n\tinline void Mul(int *a,int *b,int *c,int n,int m){\n\t\tstatic int T1[N],T2[N],T3[N];\n\t\tfor(int i=0;i<n;i++)\n\t\t\tT1[i]=a[i];\n\t\tfor(int i=0;i<m;i++)\n\t\t\tT2[i]=b[i];\n\t\tfor(int i=n;i<lim;i++)\n\t\t\tT1[i]=0;\n\t\tfor(int i=m;i<lim;i++)\n\t\t\tT2[i]=0;\n\t\tNTT(T1,1),NTT(T2,1);\n\t\tfor(int i=0;i<lim;i++)\n\t\t\tT3[i]=1ll*T1[i]*T2[i]%mod;\n\t\tNTT(T3,-1);\n\t\tfor(int i=0;i<n+m-1;i++)\n\t\t\tc[i]=T3[i];\n\t}\n\tinline void Sqr(int *a,int *b){\n\t\tstatic int F[N];\n\t\tfor(int i=0;i<lim;i++)\n\t\t\tF[i]=a[i];\n\t\tNTT(F,1);\n\t\tfor(int i=0;i<lim;i++)\n\t\t\tb[i]=1ll*F[i]*F[i]%mod;\n\t\tNTT(b,-1);\n\t}\n\tinline void Inv(int *a,int *b,int n){\n\t\tstatic int T4[N];\n\t\tif(n==1){\n\t\t\tb[0]=qpow(a[0],mod-2);\n\t\t\treturn ;\n\t\t}\n\t\tInv(a,b,n+1>>1);\n\t\tinit(n<<1);\n\t\tfor(int i=0;i<n;i++)\n\t\t\tT4[i]=a[i];\n\t\tfor(int i=n;i<lim;i++)\n\t\t\tT4[i]=0;\n\t\tNTT(b,1),NTT(T4,1);\n\t\tfor(int i=0;i<lim;i++)\n\t\t\tb[i]=1ll*b[i]*(2-1ll*b[i]*T4[i]%mod+mod)%mod;\n\t\tNTT(b,-1);\n\t\tfor(int i=n;i<lim;i++)\n\t\t\tb[i]=0;\n\t}\n}\nnamespace Evaluation{\n\tusing namespace Poly;\n\t#define ls (rt<<1)\n\t#define rs (rt<<1|1)\n\tinline void MulT(int *a,int *b,int *c,int n,int m){\n\t\tstatic int T1[N],T2[N],T3[N];\n\t\tfor(int i=0;i<n;i++)\n\t\t\tT1[i]=a[i];\n\t\tfor(int i=0;i<m;i++)\n\t\t\tT2[i]=b[i];\n\t\treverse(T2,T2+m);\n\t\tfor(int i=n;i<lim;i++)\n\t\t\tT1[i]=0;\n\t\tfor(int i=m;i<lim;i++)\n\t\t\tT2[i]=0;\n\t\tNTT(T1,1),NTT(T2,1);\n\t\tfor(int i=0;i<lim;i++)\n\t\t\tT3[i]=1ll*T1[i]*T2[i]%mod;\n\t\tNTT(T3,-1);\n\t\tfor(int i=m-1;i<n;i++)\n\t\t\tc[i-m+1]=T3[i];\n\t}\n\tint *T1[N],*T2[N],T3[N],T4[N],pool[N*32],*now=pool;\n\tinline void CDQ(int *Q,int rt,int l,int r){\n\t\tT1[rt]=now,now+=r-l+2;\n\t\tT2[rt]=now,now+=r-l+2;\n\t\tif(l==r){\n\t\t\tT1[rt][0]=1;\n\t\t\tT1[rt][1]=(mod-Q[l])%mod;\n\t\t\treturn ;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tCDQ(Q,ls,l,mid),CDQ(Q,rs,mid+1,r);\n\t\tinit(r-l+1);\n\t\tMul(T1[ls],T1[rs],T1[rt],mid-l+2,r-mid+1);\n\t}\n\tinline void Solve(int *S,int rt,int l,int r){\n\t\tif(l==r){\n\t\t\tS[l]=T2[rt][0];\n\t\t\treturn ;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tinit(r-l+1);\n\t\tMulT(T2[rt],T1[rs],T2[ls],r-l+1,r-mid+1);\n\t\tMulT(T2[rt],T1[ls],T2[rs],r-l+1,mid-l+2);\n\t\tSolve(S,ls,l,mid),Solve(S,rs,mid+1,r);\n\t}\n\tinline void Evaluation(int *F,int *Q,int *S,int n,int m){\n\t\tn=max(n,m+1);\n\t\tm=max(m,n-1);\n\t\tCDQ(Q,1,1,m);\n\t\tInv(T1[1],T3,m+1);\n\t\treverse(T3,T3+m+1);\n\t\tMul(F,T3,T4,n,m+1);\n\t\tfor(int i=n;i<n+m;i++)\n\t\t\tT2[1][i-n]=T4[i];\n\t\tSolve(S,1,1,m);\n\t\tfor(int i=1;i<=m;i++)\n\t\t\tS[i]=(1ll*S[i]*Q[i]%mod+F[0])%mod;\n\t}\n}\nint n,m,F[N],Q[N],S[N];\nint main(){\n\tn=read()+1,m=read();\n\tgetG();\n\tfor(int i=0;i<n;i++)\n\t\tF[i]=read();\n\tfor(int i=1;i<=m;i++)\n\t\tQ[i]=read();\n\tEvaluation::Evaluation(F,Q,S,n,m);\n\tfor(int i=1;i<=m;i++)\n\t\twrite(S[i]),putc('\\n');\n\tflush();\n}\n```\n\n\u53e6\u5916\u6211\u8fd8\u5b9e\u73b0\u4e86\u4efb\u610f\u6a21\u6570\u591a\u70b9\u6c42\u503c\uff0c\u8dd1\u4e00\u4e2a\u70b9\u5927\u6982\u8981 300ms\uff0c[\u4ee3\u7801](https://www.luogu.com.cn/paste/5tilxdew)\u3002\u5b9e\u6d4b\u53ef\u4ee5\u8f7b\u677e\u8dd1\u8fc7 [P5282](https://www.luogu.com.cn/problem/P5282)\u3002\n\n\u518d\u89c1 qwq~",
        "postTime": 1626355888,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5050\u3010\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a $n-1$ \u6b21\u591a\u9879\u5f0f $f(x)$ \u548c $m$ \u4e2a\u6570 $a_i$ \uff0c\u6c42\u6240\u6709 $f(a_i)$ \u7684\u503c\u3002\n\n\u7b54\u6848\u5bf9 $998244353$ \u53d6\u6a21\u3002\n\n\u6570\u636e\u8303\u56f4 $1\\leq n,m\\leq 6.4\\cdot 10^4$ \uff0c $0\\leq a_i,[x^i]f(x)\\leq 998244353$ \u3002\n\n### \u524d\u7f6e\u829d\u58eb\uff1a\n\u591a\u9879\u5f0f\u9664\u6cd5\uff08\u4f46\u5546\u6ca1\u7528\uff0c\u5176\u5b9e\u5c31\u662f\u53d6\u6a21\uff09\u3002\uff08\u4e0d\u7528\u725b\u987f\u8fed\u4ee3\uff0c\u751a\u81f3~~\u975e\u5e38\u5165\u95e8\u7684~~\u6c42\u5bfc\uff0c\u79ef\u5206\u90fd\u4e0d\u8981\uff0c\u8001\u5c11\u54b8\u5b9c\uff01\uff09\n\n\u4e0d\u4f1a\u51fa\u95e8\u5de6\u62d0\u5373\u53ef\u3002\u3002\uff08\u5e94\u8be5\u5df2\u7ecf\u6ca1\u6709\u4eba\u8bfb\u5230\u8fd9\u91cc\u5c31\u8d70\u4e86\u5427\uff09\n\n### solution\n\u591a\u9879\u5f0f\u9664\u6cd5\u7684\u8bdd\u63a8\u8350\u4ffa\u7684[\u6587\u7ae0](https://www.luogu.com.cn/blog/N-pilot-S/solution-p4512)\u3002\uff08\u5176\u5b9e\u968f\u4fbf\u90a3\u7bc7\u90fd\u884c\uff0c\u4e86\u89e3\u539f\u7406\u4e86\u5c31\u597d\u4e86\uff09\n\n\u5148\u6765\u4e24\u4e2a\u63a8\u8bba\uff1a\n\n1.$f(a_i)\\equiv f(x)\\ mod\\ (x-a_i)$\n\n\u611f\u89c9\u5927\u4f6c\u4eec\u7684\u8bc1\u6cd5\u4e0d\u592a\u597d\u7406\u89e3\u3002\u3002\uff08\u662f\u6211\u592a\u83dc\u4e86\uff09\n\n\u5176\u5b9e\u8fd8\u53ef\u4ee5\u8fd9\u6837\uff1a\n\n\u5f53\u6211\u4eec\u5bf9\u4e24\u4e2a\u5f0f\u5b50\u540c\u9664 $(x-a_i)$ \u7684\u65f6\u5019\u3002\uff08\u90fd\u4f1a\u5199\u7ad6\u5f0f\u5427\n\n\u5bf9\u4e8e\u5f53\u524d\u7684\u88ab\u9664\u6570\u6700\u9ad8\u6b21\u9879\uff0c\u5728\u5bf9\u9f50\u4e86\u6b21\u6570\u4e0e\u7cfb\u6570\u540e\uff0c\u51cf\u53bb\u4e86\u51e0\u4e2a $x$ \uff0c\u5c31\u4f1a\u7ad9\u8d77\u6765\u51e0\u4e2a $a_i$ \u3002\n\n\u610f\u601d\u5c31\u662f $f(x)$ \u9664\u4ee5 $(x-a_i)$ \u7684\u4f59\u6570\u5c31\u53ef\u4ee5\u5316\u5f52\u6210 $f(a_i)$ \u3002\uff08\u5f53\u7136\u80af\u5b9a\u8fd8\u80fd\u518d\u9664\u4e0b\u53bb\uff0c\u4e3b\u8981\u662f\u8bc1\u660e\u63a8\u8bba\u7684\u6210\u7acb\uff09\n\n\u90a3\u4e48\u5bf9\u4e8e\u67ff\u5b50\uff08\u5176\u5b9e\u5c31\u662f\u591a\u9879\u5f0f\u9664\u6cd5\u91cc\u7684\u67ff\u5b50\uff09\uff1a\n\n$f(x)=q(x)\\cdot g(x)+r(x)$\n\n\u5982\u679c\u6211\u4eec\u6784\u9020 $g(x)=(x-a_i)$ \u6700\u540e $f(x)=r(x)$ \uff0c\u6ce8\u610f\u819c\u4e00\u4e2a\u4e00\u6b21\u9879\u7684\u591a\u9879\u5f0f\uff0c\u6700\u540e\u5c31\u53ea\u4f1a\u5269\u5e38\u6570\u9879\uff08\u829c\u6e56\u8d77\u98de\u3002\u3002\uff09\n\n2.$(f(x)\\ mod\\ \\varphi(x)\\cdot g(x))\\ mod\\ g(x)=f(x)\\ mod\\ g(x)$\n\n\u628a\u591a\u9879\u5f0f\u66ff\u6362\u6210\u4e00\u4e2a\u5e38\u6570\u4f1a\u597d\u7406\u89e3\u5f97\u591a\uff0c\u6a21\u62df\u4e00\u4e0b\u5c31\u597d\u4e86\u3002~~\u5bf9 $c$ \u53d6\u6a21\u8fd8\u8d76\u4e0d\u4e0a\u5bf9 $n\\cdot c$ \u53d6\u6a21\uff1f~~\n\n\u63a8\u8bba\u8bf4\u5b8c\u4e86\uff08\u6709\u6ca1\u6709\u611f\u89c9\u63a8\u8bba\u4e8c\u6709\u70b9\u8fed\u4ee3\u7684\u610f\u601d\uff1f\uff09\n\n\u9884\u5904\u7406\u51fa\u6240\u6709\u533a\u95f4 $[l,r]$ \u6240\u5bf9\u5e94\u7684 $\\prod_{i=l}^{r}{(x-a_i)}$ \uff0c\u54c7\u54e6\uff0c\u4e58\u79ef\u5f62\u5f0f\u54df\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u8003\u8651\u5206\u6cbb FFT \u4e86\u3002\n\n\u5728\u9012\u5f52\u7684\u65f6\u5019\uff0c\u8ba9\u591a\u9879\u5f0f\u76f4\u63a5\u5bf9\u5f53\u524d\u533a\u95f4\u6240\u5bf9\u5e94\u7684\u6a21\u6570\u53d6\u6a21\uff0c\u7136\u540e\u7ee7\u7eed\u5411\u4e0b\u4f20\uff08\u6839\u636e\u63a8\u8bba\u4e8c\uff0c\u8fd9\u6837\u505a\u4e5f\u4e0d\u4f1a\u6709\u5f71\u54cd\uff09\uff0c\u6700\u540e\u5230\u4e86\u53f6\u5b50\u7ed3\u70b9\u7684\u65f6\u5019\u5c31\u597d\u4e86\uff08\u6839\u636e\u63a8\u8bba\u4e00\uff0c\u6700\u540e\u819c\u5b8c\u53ea\u5269\u5e38\u6570\u9879\uff09\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log_{2}^{2}{n})$ \u3002\n\n\u4eba\u50bb\u5e38\u719f\u5927 wtcl \u3002\u3002\n\n\uff08\u8f6c\u7f6e\u5b9a\u7406\u4ec0\u4e48\u7684\u538b\u6839\u4e0d\u77e5\u9053/kel\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=128e3+10;\ntypedef ll arr[N<<1];\nconst int mod=998244353;\nconst int inv3=332748118;\nint n,m,g[N],lim=1,fre,id[N<<1];\narr f[20],fr,gr,gi,q,ans,tp1,tp2,tmp,F1,G1;\nint rt,tot,ls[N],rs[N],Ans[N];\nvector<int> v[N];\ninline ll inc(ll x,ll y){return x+y>=mod?x+y-mod:x+y;}\ninline ll dec(ll x,ll y){return x-y<0?x-y+mod:x-y;}\ninline ll mul(ll x,ll y){return 1ll*x*y%mod;}\ninline ll read()\n{\n\tll s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n\treturn s*w;\n}\ninline int ksm(int a,int b)\n{\n\tint tmp=1;\n\twhile(b)\n\t{\n\t\tif(b&1)tmp=(1ll*tmp*a)%mod;\n\t\tb>>=1,a=(1ll*a*a)%mod;\n\t}\n\treturn tmp;\n}\ninline void Never_Tell_TLE(ll* NTT,int sign)\n{\n\tfor(int i=0;i<=lim;++i)if(i<id[i])\n\t{\n\t\tll NTt=NTT[i];\n\t\tNTT[i]=NTT[id[i]];\n\t\tNTT[id[i]]=NTt;\n\t}\n\tfor(int mid=1;mid<lim;mid<<=1)\n\t{\n\t\tint Unit_root;\n\t\tif(sign==1)Unit_root=ksm(3,(mod-1)/(mid<<1));\n\t\telse Unit_root=ksm(inv3,(mod-1)/(mid<<1));\n\t\tfor(int R=mid<<1,r=0;r<lim;r+=R)\n\t\t{\n\t\t\tint pw=1;\n\t\t\tfor(int l=0;l<mid;++l,pw=(1ll*pw*Unit_root)%mod)\n\t\t\t{\n\t\t\t\tint butt=NTT[l+r],rfly=(1ll*pw*NTT[l+r+mid])%mod;\n\t\t\t\tNTT[l+r]=inc(butt,rfly);\n\t\t\t\tNTT[l+r+mid]=dec(butt,rfly);\n\t\t\t}\n\t\t}\n\t}\n\tif(sign==-1)\n\t{\n\t\tint inv_lim=ksm(lim,mod-2);\n\t\tfor(int i=0;i<=lim;++i)NTT[i]=(1ll*NTT[i]*inv_lim)%mod;\n\t}\n}\n/*\n\u6b64Inv\u975e\u5f7cInv\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\n\u56e0\u4e3a\u591a\u9879\u5f0f\u662f0~n/m\u800c\u975e0~(n-1)/(m-1)\n\u8c03\u7528\u7684\u65f6\u5019\u4e5f\u8981\u591a\u52a0\u6ce8\u610f \n*/\ninline void Inv(ll* F,ll* G,int nm)\n{\n\tif(nm==1)\n\t{\n\t\tG[0]=ksm(F[0],mod-2);\n\t\treturn;\n\t}\n\tInv(F,G,nm>>1);\n\tlim=1,fre=0;\n\tfor(;lim<=(nm<<1);lim<<=1)++fre;\n\tfor(int i=0;i<=lim;++i)id[i]=(id[i>>1]>>1)|((i&1)<<(fre-1));\n\tfor(int i=0;i<=nm;++i)ans[i]=F[i];\n\tfor(int i=nm+1;i<=lim;++i)ans[i]=0;\n\tNever_Tell_TLE(ans,1),Never_Tell_TLE(G,1);\n\tfor(int i=0;i<=lim;++i)G[i]=mul(inc(2ll,-mul(ans[i],G[i])+mod),G[i]);\n\tNever_Tell_TLE(G,-1);\n\tfor(int i=nm;i<=lim;++i)G[i]=0;\n}\ninline void Mul(ll* F,ll* G,int nm)\n{\n\tif(nm)\n\t{\n\t\tlim=1,fre=0;\n\t\tfor(;lim<=(nm<<1);lim<<=1)++fre;\n\t}\n\tfor(int i=0;i<=lim;++i)id[i]=(id[i>>1]>>1)|((i&1)<<(fre-1));\n\tfor(int i=0;i<lim;++i)F1[i]=F[i],G1[i]=G[i];\n\tNever_Tell_TLE(F1,1),Never_Tell_TLE(G1,1);\n\tfor(int i=0;i<lim;++i)F1[i]=mul(F1[i],G1[i]);\n\tNever_Tell_TLE(F1,-1);\n\tfor(int i=0;i<lim;++i)F[i]=F1[i];\n}\ninline void Mod(ll* F,ll* G,ll* R,int n,int m,ll* FR,ll* GR,ll* GI,ll* Q)\n{\n\tfor(int i=0;i<=n;++i)FR[n-i]=F[i];\n\tfor(int i=0;i<=m;++i)GR[m-i]=G[i];\n\tfor(int i=n-m+1;i<=m;++i)GR[i]=0;\n\tint lm=1,fe=0;\n\tfor(;lm<=(n-m);lm<<=1)++fe;\n\tInv(GR,GI,lm);\n\tMul(FR,GI,n);\n\tfor(int i=0;i<=n-m;++i)Q[i]=FR[n-m-i];\n\tfor(int i=n-m+1;i<=lim;++i)Q[i]=0;\n\tMul(Q,G,n);\n\tfor(int i=0;i<m;++i)R[i]=inc(F[i],-Q[i]+mod);\n\tfor(int i=0;i<=lim;++i)FR[i]=GR[i]=GI[i]=Q[i]=0;\n}\ninline void tree_form(int &p,int l,int r)\n{\n\tp=++tot;lim=1,fre=0;\n\tfor(;lim<=(r-l+1);lim<<=1)++fre;\n\tv[p].resize(lim);\n\tif(l==r)\n\t{\n\t\tv[p][0]=dec(mod,g[l]),v[p][1]=1;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1,cnt;\n\ttree_form(ls[p],l,mid),tree_form(rs[p],mid+1,r);\n\tlim=1,fre=0;\n\tfor(;lim<=(r-l+1);lim<<=1)++fre;\n\tcnt=v[ls[p]].size();\n\tfor(int i=0;i<cnt;++i)tp1[i]=v[ls[p]][i];\n\tfor(int i=cnt;i<=lim;++i)tp1[i]=0;\n\tcnt=v[rs[p]].size();\n\tfor(int i=0;i<cnt;++i)tp2[i]=v[rs[p]][i];\n\tfor(int i=cnt;i<=lim;++i)tp2[i]=0;\n\tMul(tp1,tp2,0);\n\tfor(int i=0;i<lim;++i)v[p][i]=tp1[i];\n}\ninline void solve(int p,int l,int r,int dep,int siz)\n{\n\tfor(int i=0;i<=r-l+1;++i)tmp[i]=v[p][i];\n\tif(siz<r-l+1)for(int i=0;i<=r-l;++i)f[dep][i]=f[dep-1][i];\n\telse Mod(f[dep-1],tmp,f[dep],siz,r-l+1,fr,gr,gi,q);\n\tfor(int i=0;i<=r-l+1;++i)tmp[i]=0;\n\tif(l==r)\n\t{\n\t\tAns[l]=f[dep][0];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tsolve(ls[p],l,mid,dep+1,r-l);\n\tsolve(rs[p],mid+1,r,dep+1,r-l);\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=0;i<=n;++i)f[0][i]=read();\n\tfor(int i=1;i<=m;++i)g[i]=read();\n\ttree_form(rt,1,m);\n\tsolve(rt,1,m,1,n);\n\tfor(int i=1;i<=m;++i)printf(\"%d\\n\",Ans[i]);\n\treturn 0;\n}\n```\n\n\u53ea\u6c42\u80fd\u5e2e\u52a9\u5230\u51e0\u4e2a\u4eba\u7f62\u3002\u3002",
        "postTime": 1618143548,
        "uid": 206024,
        "name": "Illusory_dimes",
        "ccfLevel": 7,
        "title": "\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c \u9898\u89e3"
    },
    {
        "content": "![](https://cdn.luogu.com.cn/upload/pic/48589.png)  \n\u4e00\u5b9a\u8981\u53ca\u65f6\u6e05\u7a7a\u5b58\u50a8\u591a\u9879\u5f0f\u6570\u7ec4\u4e2d\u4e0d\u76f8\u5173\u7684\u9879\u3002  \n\u8bf7\u5ffd\u7565\u5927\u91cf\u8c03\u8bd5\u4ee3\u7801\u3002  \n\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#include <assert.h>\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <vector>\nusing int_t = int;\nusing std::cin;\nusing std::cout;\nusing std::endl;\n#ifdef DEBUG\n#define debug(x) cout << #x << \" = \" << x << endl;\n#else\n#define debug(x)\n\n#endif\n\nconst int_t mod = 998244353;\nconst int_t g = 3;\nconst int_t LARGE = 1 << 20;\nint_t power(int_t base, int_t index);\nvoid transform(int_t *A, int_t size, int_t arg);\nconstexpr int_t upper2n(int_t x);\nvoid poly_mul(int_t *A, int_t *B, int_t size);\nvoid poly_inv(int_t *A, int_t *inv, int_t n);\nvoid poly_div(int_t *A, int_t n, int_t *B, int_t m, int_t *Q, int_t *R);\nvoid poly_dc_mul(int_t *base, int_t n);\nvoid poly_evaluation(int_t *A, const int_t *seq, int_t *result, int_t left,\n                     int_t right);\n\ntemplate <class T>\nstd::ostream &operator<<(std::ostream &os, std::vector<T> &x) {\n    os << \"{ \";\n    for (int_t v : x) os << v << \" \";\n    os << \"} \";\n    return os;\n}\ninline int_t bitRev(int_t x, int_t size2) {\n    int_t res = 0;\n    for (int_t i = 1; i < size2; i++) {\n        res |= (x & 1);\n        res <<= 1;\n        x >>= 1;\n    }\n    return res | (x & 1);\n};\nint bitRevs[20][LARGE + 1];\nint main() {\n#ifdef TIME\n    auto begin = clock();\n#endif\n    for (int_t i = 1; (1 << i) < LARGE; i++) {\n        for (int_t j = 0; j < LARGE; j++) {\n            bitRevs[i][j] = bitRev(j, i);\n        }\n    }\n    // {\n    //     static int_t A[LARGE], B[LARGE];\n    //     int_t n, m;\n    //     cin >> n >> m;\n    //     for (int_t i = 0; i <= n; i++) cin >> A[i];\n    //     for (int_t i = 0; i <= m; i++) cin >> B[i];\n    //     int_t size = upper2n(n + m + 1);\n    //     transform(A, size);\n    //     for (int_t i = 0; i < size; i++) cout << A[i] << \" \";\n    //     cout << endl;\n    //     transform(B, size);\n    //     for (int_t i = 0; i < size; i++) cout << B[i] << \" \";\n    //     cout << endl;\n    //     for (int_t i = 0; i < size; i++) A[i] = 1ll * A[i] * B[i] % mod;\n    //     transform<-1>(A, size);\n    //     for (int_t i = 0; i <= n + m; i++)\n    //         cout << 1ll * A[i] * power(size, -1) % mod << \" \";\n    //     return 0;\n    // }\n\n    int n, m;\n    static int_t A[LARGE], seq[LARGE], result[LARGE];\n    scanf(\"%d%d\", &n, &m);\n    for (int_t i = 0; i <= n; i++) scanf(\"%d\", &A[i]);\n    for (int_t i = 0; i < m; i++) scanf(\"%d\", &seq[i]);\n    poly_evaluation(A, seq, result, 0, std::max(n + 1, m));\n    for (int_t i = 0; i < m; i++) {\n        printf(\"%d\\n\", (int)result[i]);\n    }\n#ifdef TIME\n    auto end = clock();\n    std::cerr << (end - begin) / (1.0 * CLOCKS_PER_SEC) << endl;\n#endif\n    return 0;\n}\n\n//\u8ba1\u7b97n-1\u6b21\u591a\u9879\u5f0fA\u4ee3\u5165x\u7684\u503c\nint_t sub(int_t *A, int_t n, int_t x) {\n    int_t result = 0;\n    for (int_t i = 0; i < n; i++) {\n        result = ((int64_t)result * x + A[n - i - 1]) % mod;\n    }\n    return result;\n}\n\n//[left,right]\u95ed\u533a\u95f4\n//\u4e0b\u6807\u4ece0\u5f00\u59cb\nvoid poly_evaluation(int_t *A, const int_t *seq, int_t *result, int_t left,\n                     int_t right) {\n    if (right - left <= 2000) {\n        for (int_t i = left; i <= right; i++) {\n            result[i] = sub(A + left, right - left + 1, seq[i]);\n        }\n        return;\n    }\n    if (left == right) {\n        result[left] = A[left];\n        return;\n    }\n    static int_t P0[LARGE], P1[LARGE], Q[LARGE], R0[LARGE], R1[LARGE];\n    int_t mid = (right + left) / 2;\n    int_t size = upper2n(right - left + 2);\n    for (int_t i = 0; i < size; i++) {\n        P0[i] = P1[i] = 0;\n    }\n    int_t size1 = upper2n((mid - left + 1) * 2 + 1),\n          size2 = upper2n((right - mid) * 2 + 1);\n    for (int_t i = 0; i < std::max(size1, size2); i += 2) {\n        P0[i] = P1[i] = 1;\n    }\n    for (int_t i = 0; i < mid - left + 1; i++) {\n        P0[i * 2] = -seq[i + left];\n        P0[i * 2 + 1] = 1;\n    }\n    for (int_t i = 0; i < right - mid; i++) {\n        P1[i * 2] = -seq[i + mid + 1];\n        P1[i * 2 + 1] = 1;\n    }\n#ifdef DEBUG\n    cout << \"processing at interval \" << left << \",\" << right << endl;\n    cout << \"mid = \" << mid << endl;\n    // cout << \"size0=\" << size0 << endl;\n    cout << \"size1=\" << size1 << \",size2=\" << size2 << endl;\n    // cout << \"size=\" << size << endl;\n    cout << \"A \";\n    for (int_t i = left; i <= right; i++) cout << A[i] << \" \";\n    cout << endl;\n    cout << \"P0 \";\n    for (int_t i = 0; i < size1; i++) cout << P0[i] << \" \";\n    cout << endl;\n    cout << \"P1 \";\n    for (int_t i = 0; i < size2; i++) cout << P1[i] << \" \";\n    cout << endl;\n#endif\n    poly_dc_mul(P0, size1);\n    poly_dc_mul(P1, size2);\n    poly_div(A + left, right - left, P0, mid - left + 1, Q, R0);\n    poly_div(A + left, right - left, P1, right - mid, Q, R1);\n    for (int_t i = mid - left + 1; i < size1; i++) R0[i] = 0;\n    for (int_t i = right - mid; i < size2; i++) R1[i] = 0;\n\n#ifdef DEBUG\n\n    cout << \"P0 \";\n    for (int_t i = 0; i <= mid - left + 1; i++) cout << P0[i] << \" \";\n    cout << endl;\n    cout << \"P1 \";\n    for (int_t i = 0; i <= right - mid; i++) cout << P1[i] << \" \";\n    cout << endl;\n    cout << \"R0 \";\n    for (int_t i = 0; i < size1; i++) cout << R0[i] << \" \";\n    cout << endl;\n    cout << \"R1 \";\n    for (int_t i = 0; i < size2; i++) cout << R1[i] << \" \";\n    cout << endl;\n\n#endif\n    for (int_t i = 0; i < mid - left + 1; i++) {\n        A[i + left] = R0[i];\n    }\n    for (int_t i = 0; i < right - mid; i++) {\n        A[i + mid + 1] = R1[i];\n    }\n#ifdef DEBUG\n    cout << \"A modfied \";\n    for (int_t i = left; i <= right; i++) cout << A[i] << \" \";\n    cout << endl;\n#endif\n#ifdef DEBUG\n    cout << endl << endl;\n#endif\n    poly_evaluation(A, seq, result, left, mid);\n    poly_evaluation(A, seq, result, mid + 1, right);\n}\n//\u8ba1\u7b97\u5206\u6cbb\u4e58\u6cd5,n\u662f\u9879\u6570,\u5fc5\u987b\u662f2\u7684\u5e42\u6b21\n//\u521d\u59cb\u65f6base\u4e2d\u5b58\u653e\u7740\u82e5\u5e72\u4e2a\u6b21\u6570\u4e3a1\u7684\u591a\u9879\u5f0f\uff0c\u6bcf\u4e2a\u5360\u4e86\u4e24\u4e2a\u4f4d\u7f6e\ninline void poly_dc_mul(int_t *base, int_t n) {\n#ifdef DEBUG\n\n    // cout << \"calc \" << endl;\n    // for (int_t i = 0; i < n; i++)\n    //     cout << base[i] << \" \";\n    // cout << \"=\"\n    //      << \" \";\n    assert((1 << (int_t)log2(n)) == n);\n#endif\n\n    //\u679a\u4e3e\u5757\u5927\u5c0f\n    for (int_t i = 4; i <= n; i *= 2) {\n        //\u6bcf\u5757\u524d\u540e\u4e24\u90e8\u5206\u76f8\u4e58\n        for (int_t j = 0; j < n; j += i) {\n            static int_t A[LARGE], B[LARGE];\n            std::fill(A, A + i, 0);\n            std::fill(B, B + i, 0);\n            std::copy(base + j, base + j + i / 2, A);\n            std::copy(base + j + i / 2, base + j + i, B);\n            poly_mul(A, B, i);\n            std::copy(A, A + i, base + j);\n        }\n    }\n#ifdef DEBUG\n    // for (int_t i = 0; i < n; i++)\n    //     cout << base[i] << \" \";\n    // cout << endl\n    //      << endl;\n#endif\n}\n//\u8ba1\u7b97n\u6b21\u591a\u9879\u5f0fA\u9664\u4ee5m\u6b21\u591a\u9879\u5f0fB\u7684\u5546\u548c\u4f59\u6570\u3002\n//\u9700\u8981\u786e\u4fdd\u9ad8\u6b21\u9879\u5e72\u51c0\u3002\ninline void poly_div(int_t *A, int_t n, int_t *B, int_t m, int_t *Q, int_t *R) {\n    const int_t size = upper2n(n + m + 1);\n    // #ifdef DEBUG\n    // cout<<\"moding \"\n    // #endif\n    static int_t Ax[LARGE], Bx[LARGE], Qx[LARGE], Binv[LARGE];\n    for (int_t i = 0; i <= n; i++) Ax[i] = A[n - i];\n    for (int_t i = 0; i <= m; i++) Bx[i] = B[m - i];\n    const int_t len = size - (n - m + 1);\n    memset(&Ax[n - m + 1], 0, sizeof(int_t) * len);\n    memset(&Bx[n - m + 1], 0, sizeof(int_t) * len);\n    poly_inv(Bx, Binv, n - m + 1);\n    memcpy(Bx, Binv, sizeof(int_t) * (n - m + 1));\n    memset(&Ax[n - m + 1], 0, sizeof(int_t) * len);\n    poly_mul(Ax, Bx, size);\n    for (int_t i = 0; i <= n - m; i++) {\n        Qx[i] = Q[i] = Ax[n - m - i];\n    }\n    memset(&Qx[n - m + 1], 0, sizeof(int_t) * len);\n    poly_mul(Qx, B, size);\n    for (int_t i = 0; i <= m - 1; i++)\n        R[i] = ((int64_t)A[i] - Qx[i] + 2 * mod) % mod;\n}\ninline void poly_mul(int_t *A, int_t *Bx, int_t size) {\n    static int_t B[LARGE + 1];\n    memcpy(B, Bx, sizeof(int_t) * size);\n    transform(A, size, 1);\n    transform(B, size, 1);\n    for (int_t i = 0; i < size; i++) A[i] = (int64_t)A[i] * B[i] % mod;\n    transform(A, size, -1);\n    const int_t inv = power(size, -1);\n    for (int_t i = 0; i < size; i++) A[i] = (int64_t)A[i] * inv % mod;\n}\nvoid poly_inv(int_t *A, int_t *inv, int_t n) {\n    static int_t Ax[LARGE];\n    if (n == 1) {\n        inv[0] = power(A[0], -1);\n        // for (int_t i = 1; i < upper2n(3); i++) inv[i] = 0;\n        return;\n    }\n    poly_inv(A, inv, n / 2 + n % 2);\n    // C(x)<-2B(x)-A(x)B(x)^2\n    int_t size = upper2n(3 * n + 1);\n    for (int_t i = 0; i < size; i++) {\n        if (i < n)\n            Ax[i] = A[i];\n        else\n            Ax[i] = 0;\n    }\n    for (int_t i = n; i < size; i++) inv[i] = 0;\n    // for(int_t i=)\n    transform(Ax, size, 1);\n    transform(inv, size, 1);\n    for (int_t i = 0; i < size; i++)\n        inv[i] = ((int64_t)2 * inv[i] -\n                  (int64_t)Ax[i] * inv[i] % mod * inv[i] % mod + 2 * mod) %\n                 mod;\n    transform(inv, size, -1);\n    const int_t size_inv = power(size, -1);\n    for (int_t i = 0; i < size; i++) {\n        if (i < n)\n            inv[i] = (int64_t)inv[i] * size_inv % mod;\n        else\n            inv[i] = 0;\n    }\n}\ninline constexpr int_t upper2n(int_t x) {\n    int_t res = 1;\n    while (res < x) res *= 2;\n    return res;\n}\ninline void transform(int_t *A, int_t size, int_t arg) {\n    const int_t size2 = log2(size);\n    for (int_t i = 0; i < size; i++) {\n        int_t x = bitRevs[size2][i];\n        if (x > i) std::swap(A[x], A[i]);\n    }\n    for (int_t i = 2; i <= size; i *= 2) {\n        int_t mr = power(g, arg * (mod - 1) / i);\n        int_t *p1 = A;\n        int_t *p2 = p1 + i / 2;\n        int_t counter = 0;\n        int_t curr = 1;\n        while (p2 < A + size) {\n            int_t u = *p1, t = *p2 * (int64_t)curr % mod;\n            *p1 = (u + t) % mod;\n            *p2 = ((int64_t)u - t + (int64_t)2 * mod) % mod;\n            curr = (int64_t)curr * mr % mod;\n            counter += 1;\n            p1++;\n            p2++;\n            if (counter == (i >> 1)) {\n                counter = 0;\n                p1 += (i >> 1);\n                p2 += (i >> 1);\n                curr = 1;\n            }\n        }\n    }\n}\n\nint_t power(int_t base, int_t index) {\n    const int_t phi = mod - 1;\n    base = (base % mod + mod) % mod;\n    index = (index % phi + phi) % phi;\n    int_t result = 1;\n    while (index) {\n        if (index & 1) result = (int64_t)result * base % mod;\n        base = (int64_t)base * base % mod;\n        index >>= 1;\n    }\n    return result;\n}\n```\n------------\n\n\u4e3a\u4ec0\u4e48\u6d1b\u8c37\u8fd8\u4e0d\u652f\u6301\u591a\u884cLatex\u554a...  \nAxMath\u5bfc\u51fa\u90fd\u6ca1\u6cd5\u7528\u4e86..\n",
        "postTime": 1547468088,
        "uid": 56891,
        "name": "officeyutong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5050 \u3010\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c\u3011"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10201900.html)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\u7ed9\u4f60\u4e00\u4e2a$n$\u6b21\u591a\u9879\u5f0f$f(x)$\uff0c\u4ee5\u53ca$m$\u4e2a$x_i$\uff0c\u5bf9\u4e8e$i\\in[1,m]$\uff0c\u6c42$f(x_i)$\n\n**\u9898\u89e3\uff1a**\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c\n\n\u4ee4$g(x)=\\prod\\limits_{i=1}^m(x-x_i)$\uff0c\u6c42\u51fa$R(x)$\u4f7f\u5f97$f(x)=Q(x)\\times g(x)+R(x)$\u3002\u56e0\u4e3a\u5f53$x=x_i$\u65f6\uff0c$g(x)=0$\uff0c\u5373$f(x)=R(x)$\uff0c$f(x)$\u662f$n$\u6b21\u7684\uff0c$R(x)$\u662f$m-1$\u6b21\u7684\uff0c\u4f3c\u4e4e\u53ef\u4ee5\u4f7f\u5f97\u95ee\u9898\u7f29\u5c0f\u4e86\n\n\u8003\u8651\u5206\u6cbb\uff0c\u73b0\u5728\u533a\u95f4\u4e3a$[l,r]$\uff0c\u4ee4$g_L(x)=\\prod\\limits_{i=l}^{mid}(x-x_i)$\uff0c$g_R(x)=\\prod\\limits_{i=mid}^r(x-x_i)$\uff0c\u6240\u4ee5$R_L(x)=f(x)\\bmod g_L(x)$\uff0c$R_R(x)=f(x)\\bmod g_R(x)$\u3002\u6700\u540e\u5f53$l=r$\u65f6\uff0c\u7b2c$i$\u4e2a\u7684\u503c\u5c31\u662f\u5f53\u524d$R(x)$\u7684\u5e38\u6570\u9879\u3002\n\n\u90a3$g(x)$\u600e\u4e48\u7b97\u5462\uff0c\u5206\u6cbb$FFT$\uff0c\u53ef\u4ee5\u5148\u628a\u6bcf\u4e2a\u7684$g(x)$\u6c42\u51fa\u6765\uff0c\u7528$vector$\u4fdd\u5b58\u4e00\u4e0b\u5c31\u884c\u4e86\n\n**\u5361\u70b9\uff1a**\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u7528$C++$\u4f1a$MLE$\uff0c$C++11$\u5c31\u8fc7\u4e86\uff0c\u6709\u53ef\u80fd\u662f$vector$\u521d\u59cb\u5316\u90e8\u5206\u51fa\u9505\u4e86\n\n\n\n**C++ Code\uff1a**\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\nconst int mod = 998244353, G = 3;\n\nnamespace Math {\n\tinline int pw(int base, int p) {\n\t\tstatic int res;\n\t\tfor (res = 1; p; p >>= 1, base = static_cast<long long> (base) * base % mod) if (p & 1) res = static_cast<long long> (res) * base % mod;\n\t\treturn res;\n\t}\n\tinline int inv(int x) { return pw(x, mod - 2); }\n}\ninline void reduce(int &x) { x += x >> 31 & mod; }\n\n#define maxn 65536\nint a[maxn], ans[maxn];\nnamespace Poly {\n#define N maxn\n\tint rev[N], lim, s, ilim;\n\tint Wn[N + 1];\n\tinline void clear(register int *l, const int *r) {\n\t\tif (l >= r) return ;\n\t\twhile (l != r) *l++ = 0;\n\t}\n\n\tinline void init(const int n) {\n\t\ts = -1, lim = 1; while (lim < n) lim <<= 1, ++s; ilim = Math::inv(lim);\n\t\tfor (register int i = 0; i < lim; ++i) rev[i] = rev[i >> 1] >> 1 | (i & 1) << s;\n\t\tconst int t = Math::pw(G, (mod - 1) / lim);\n\t\t*Wn = 1; for (register int *i = Wn; i != Wn + lim; ++i) *(i + 1) = static_cast<long long> (*i) * t % mod;\n\t}\n\tinline void NTT(int *A, const int op = 1) {\n\t\tstatic int Wt[N];\n\t\tfor (register int i = 1; i < lim; ++i) if (i < rev[i]) std::swap(A[i], A[rev[i]]);\n\t\tfor (register int mid = 1; mid < lim; mid <<= 1) {\n\t\t\tconst int t = lim / mid >> 1;\n\t\t\t*Wt = Wn[op ? 0 : lim];\n\t\t\tfor (register int *i = Wt, W = 0; i != Wt + mid; ++i, W += t) *i = Wn[op ? W : lim - W];\n\t\t\tfor (register int i = 0; i < lim; i += mid << 1) {\n\t\t\t\tfor (register int j = 0; j < mid; ++j) {\n\t\t\t\t\tconst int X = A[i + j], Y = static_cast<long long> (Wt[j]) * A[i + j + mid] % mod;\n\t\t\t\t\treduce(A[i + j] += Y - mod), reduce(A[i + j + mid] = X - Y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!op) for (register int *i = A; i != A + lim; ++i) *i = static_cast<long long> (*i) * ilim % mod;\n\t}\n\n\tstd::vector<int> P[N << 1], S[N << 1];\n\tint C[N], D[N];\n\tvoid DC_NTT(int rt, int l, int r) {\n\t\tif (l == r) { P[rt] = {a[l], 1}; return ; }\n\t\tint mid = l + r >> 1;\n\t\tDC_NTT(rt << 1, l, mid), DC_NTT(rt << 1 | 1, mid + 1, r);\n\t\tint L = rt << 1, R = rt << 1 | 1;\n\t\tint n = P[L].size(), m = P[R].size();\n\t\tinit(n + m - 1);\n\t\tstd::copy(P[L].begin(), P[L].end(), C); clear(C + n, C + lim);\n\t\tstd::copy(P[R].begin(), P[R].end(), D); clear(D + m, D + lim);\n\t\tNTT(C), NTT(D);\n\t\tfor (int i = 0; i < lim; ++i) C[i] = static_cast<long long> (C[i]) * D[i] % mod;\n\t\tNTT(C, 0);\n\t\tP[rt].assign(C, C + n + m - 1);\n\t}\n\n\tint E[N];\n\tvoid INV(int *A, int *B, int n) {\n\t\tif (n == 1) {\n\t\t\t*B = Math::inv(*A);\n\t\t\treturn ;\n\t\t}\n\t\tINV(A, B, n + 1 >> 1);\n\t\tinit(n + n - 1);\n\t\tstd::copy(A, A + n, E); clear(E + n, E + lim);\n\t\tclear(B + (n + 1 >> 1), B + lim);\n\t\tNTT(B), NTT(E);\n\t\tfor (int i = 0; i < lim; ++i) B[i] = (2 + mod - static_cast<long long> (B[i]) * E[i] % mod) * B[i] % mod;\n\t\tNTT(B, 0); clear(B + n, B + lim);\n\t}\n\tint F[N];\n\tvoid DIV(int A, int n, int B, int m) {\n\t\tconst int len = n - m + 1;\n\t\tinit(len << 1);\n\t\tstd::reverse_copy(S[A].begin(), S[A].end(), C); clear(C + len, C + lim);\n\t\tstd::reverse_copy(P[B].begin(), P[B].end(), D); clear(D + len, D + lim);\n\t\tclear(F, F + lim);\n\t\tINV(D, F, len);\n\t\tNTT(C), NTT(F);\n\t\tfor (int i = 0; i < lim; ++i) F[i] = static_cast<long long> (F[i]) * C[i] % mod;\n\t\tNTT(F, 0);\n\t\tclear(F + len, F + lim);\n\t}\n\tvoid __DIVMOD(int res, int A, int n, int B, int m) {\n\t\tif (n < m) {\n\t\t\tS[res].assign(S[A].begin(), S[A].end());\n\t\t\treturn ;\n\t\t}\n\t\tDIV(A, n, B, m);\n\t\tinit(n);\n\t\tstd::reverse_copy(F, F + n - m + 1, C); clear(C + n - m + 1, C + lim);\n\t\tstd::copy(P[B].begin(), P[B].end(), D); clear(D + m, D + lim);\n\t\tNTT(C), NTT(D);\n\t\tfor (int i = 0; i < lim; ++i) C[i] = static_cast<long long> (C[i]) * D[i] % mod;\n\t\tNTT(C, 0);\n\t\tfor (int i = 0; i < m - 1; ++i) reduce(C[i] = S[A][i] - C[i]);\n\t\tS[res].assign(C, C + m - 1);\n\t}\n\tvoid DIVMOD(int res, int A) {\n\t\tint n = S[A].size(), m = P[res].size();\n\t\t__DIVMOD(res, A, n, res, m);\n\t}\n\n\tvoid solve(int rt, int l, int r) {\n\t\tif (l == r) {\n\t\t\tans[l] = S[rt][0];\n\t\t\treturn ;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tDIVMOD(rt << 1, rt), DIVMOD(rt << 1 | 1, rt);\n\t\tsolve(rt << 1, l, mid), solve(rt << 1 | 1, mid + 1, r);\n\t}\n\n\tvoid work(int *f, int n, int m) {\n\t\tDC_NTT(1, 1, m);\n\t\tS[0].assign(f, f + n);\n\t\tDIVMOD(1, 0);\n\t\tsolve(1, 1, m);\n\t}\n#undef N\n}\n\nint n, m;\nint f[maxn];\nint main() {\n\tscanf(\"%d%d\", &n, &m); if (!m) return 0; ++n;\n\tfor (int i = 0; i < n; ++i) scanf(\"%d\", f + i);\n\tfor (int i = 1; i <= m; ++i) scanf(\"%d\", a + i), reduce(a[i] = -a[i]);\n\tPoly::work(f, n, m);\n\tfor (int i = 1; i <= m; ++i) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1546233934,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5050 \u3010\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c\u3011"
    },
    {
        "content": "\n\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2an\u6b21\u591a\u9879\u5f0ff(x)\uff0c\u73b0\u5728\u8bf7\u4f60\u5bf9\u4e8ei\u2208[1,m]\uff0c\u6c42\u51faf(ai\u200b)\u3002\n\n\u6211\u4eec\u8003\u8651\u5206\u6cbb\u5904\u7406\uff0c\u5bf9\u4e8ei\u2208[1,m/2] , \u6211\u4eec\u6784\u9020\u4e00\u4e2ag(x) = \u220f\uff08x-ai) (1<=i<=n/2),\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e[1,m/2]\u4e2d\u6240\u6709\u7684x\u503c\u4ee3\u5165\u8fd9\u4e2a\u51fd\u6570\u503c\u90fd\u4e3a0\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5bf9\u4e8e[1,m/2]\u7684\u539f\u51fd\u6570\u7684f\u90fd%\u4e0ag(x)\u5e94\u8be5\u662f\u4e0d\u4f1a\u5f71\u54cd\uff08\u5373\u6d88\u9664\u6389\u82e5\u5e72\u4e2ag(x)\u4e0d\u4f1a\u5f71\u54cd)\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u540c\u65f6\u8fbe\u5230\u6d88\u9664\u5927\u4e8e\u7b49\u4e8ex^(m/2)\u6b21\u9879\u7684\u76ee\u7684\uff0c\u6211\u4eec\u53d1\u73b0\u6d88\u9664\u5230\u6700\u540e\u5269\u4e0b\u7684\u90a3\u4e2a\u5e38\u6570\u9879\u7684\u503c\u6070\u597d\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684f(x)\uff08\u56e0\u4e3a\u9664\u4e86\u5e38\u6570\u9879\u90fd\u88ab\u6211\u4eec\u6d88\u9664\u6389\u4e86\uff09, \u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08nlog^2n)\n\n\u6211\u4eec\u5199\u6210\u4e00\u4e2a\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684\u7ed3\u6784\u628a\u63d2\u503c\u7684\u591a\u9879\u5f0f\u5b58\u4e0b\u6765\u3002\n\n[\u6b22\u8fce\u6765Newuser\u5c0f\u7ad9\u73a9owo](http://www.newuser.top/2018/12/04/%E3%80%90moban%E3%80%91%E5%A4%9A%E9%A1%B9%E5%BC%8F%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF/)\n```cpp\n#include<stdio.h>\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<vector>\nusing namespace std;\nconst int maxn = 64005;\nconst int mod = 998244353;\nconst int g = 3;\nint mul(int x,int y) { return 1ll*x*y%mod; }\nint add(int x,int y) { x+=y; return x>=mod?x-mod:x; }\nint sub(int x,int y) { x-=y; return x<0?x+mod:x; }\nint ksm(int a,int b) {\n\tint ans = 1;\n\tfor(;b;b>>=1,a=mul(a,a))\n\t\tif(b&1) ans = mul(ans,a);\n\treturn ans;\n}\nvoid ntt(int *a,int deg,int dft) {\n\tfor(int i=0,j=0;i<deg;i++) {\n\t\tif(i<j) swap(a[i],a[j]);\n\t\tfor(int k=(deg>>1);(j^=k)<k;k>>=1);\n\t}\n\tfor(int st=1;st<deg;st<<=1) {\n\t\tint dwg = (dft==1) ? ksm(g,(mod-1)/(st<<1)) : ksm(g,mod-1-(mod-1)/(st<<1));\n\t\tfor(int i=0;i<deg;i+=(st<<1)) {\n\t\t\tint ng = 1;\n\t\t\tfor(int j=i;j<i+st;j++) {\n\t\t\t\tint x = a[j]; int y = mul(ng,a[j+st]);\n\t\t\t\tng = mul(ng,dwg);\n\t\t\t\ta[j] = add(x,y); a[j+st] = add(x,mod-y);\n\t\t\t}\n\t\t}\n\t}\n\tif(dft==1) return;\n\tint invs = ksm(deg,mod-2);\n\tfor(int i=0;i<deg;i++) a[i] = mul(invs,a[i]);\n}\nint F[18][maxn*4];\nint n,m;\nint ta[maxn*4],tb[maxn*4];\nvoid MULL(int *a,int *b,int *c,int le) {\n\tfor(int i=0;i<le;i++) ta[i]=b[i];\n\tfor(int j=0;j<le;j++) tb[j]=c[j];\n\tntt(ta,le,1); ntt(tb,le,1);\n\tfor(int i=0;i<le;i++) ta[i]=mul(ta[i],tb[i]);\n\tntt(ta,le,-1);\n\tfor(int i=0;i<le;i++) a[i] = ta[i];\n}\nvoid ginv(int deg,int *a,int *b) {\n\tif(deg==1) { b[0]=ksm(a[0],mod-2); return; }\n\tginv(deg>>1,a,b);\n\tfor(int i=0;i<deg;i++) ta[i]=a[i];\n\tfor(int i=deg;i<(deg<<1);i++) ta[i]=0;\n\tntt(ta,deg<<1,1); ntt(b,deg<<1,1);\n\tfor(int i=0;i<(deg<<1);i++) b[i]=mul(b[i],sub(2,mul(ta[i],b[i])));\n\tntt(b,(deg<<1),-1);\n\tfor(int i=deg;i<(deg<<1);i++) b[i]=0;\n}\nint Q[maxn*4],Fr[maxn*4],Gr[maxn*4],Gri[maxn*4],tmp[maxn*4];\nvoid gmod(int *O,int *F,int *G,int n,int m) {//F%G==O (F n G m)\n\tfor(int i=0;i<=n;i++) Fr[i] = F[n-i];\n\tfor(int i=0;i<=m;i++) Gr[i] = G[m-i];\n\tfor(int i=n-m+2;i<=m;i++) Gr[i] = 0;\n\tint le = 1; for(;le<=(n-m);le<<=1);\n\tfor(int i=n-m+1;i<=m;i++) Gr[i]=0;\n\tginv(le,Gr,Gri);\n\tle = 1; for(;le<=(n<<1);le<<=1);\n\tMULL(Q,Gri,Fr,le);\n\treverse(Q,Q+n-m+1);\n\tfor(int i=n-m+1;i<le;i++) Q[i]=0;\n\tMULL(tmp,Q,G,le);\n\tfor(int i=0;i<m;i++) O[i] = sub(F[i],tmp[i]);\n\tfor(int i=0;i<le;i++) tmp[i] = Fr[i] = Gr[i] = Gri[i] = Q[i] = 0;\n}\nvector<int>ve[maxn*2];\nint tot,rt,ls[maxn*2],rs[maxn*2],X[maxn];\nint tpa[maxn*4],tpb[maxn*4],tpc[maxn*4];\nvoid maketree(int &p,int l,int r) {\n\tp = ++tot;\n\tint len = 1; for(;len<r-l+2;len<<=1);\n\tve[p].resize(len); // len ci\n\tif(l==r) {\n\t\tve[p][0] = (mod-(X[l]%mod+mod)%mod); ve[p][1] = 1; return; \n\t}\n\tint mid = (l+r)>>1;\n\tmaketree(ls[p],l,mid); maketree(rs[p],mid+1,r);\n\t\n\tint ss = ve[ls[p]].size();\n\tfor(int i=0;i<ss;i++) tpa[i] = ve[ls[p]][i]; for(int i=ss;i<len;i++) tpa[i]=0;\n\t\n\t\tss = ve[rs[p]].size();\n\tfor(int i=0;i<ss;i++) tpb[i] = ve[rs[p]][i]; for(int i=ss;i<len;i++) tpb[i]=0;\n\n\tMULL(tpc,tpa,tpb,len);\n\tfor(int i=0;i<len;i++) ve[p][i] = tpc[i];\n}\nint G[maxn*4];\nint ANS[maxn];\nvoid DC(int dep,int p,int l,int r,int cs) {\n\tint m = r-l+1;\n\tfor(int i=0;i<=m;i++) G[i] = ve[p][i];\n\tif(cs>=m) gmod(F[dep],F[dep-1],G,cs,m);\n\telse {\n\t\tfor(int i=0;i<=m-1;i++) F[dep][i] = F[dep-1][i];\n\t}\n\tfor(int i=0;i<=m;i++) G[i] = 0;\n\tif(l==r) {\n\t\tANS[l] = F[dep][0];\n\t\treturn;\n\t}\n\tint mid = (l+r)>>1;\n\tDC(dep+1,ls[p],l,mid,m-1);\n\tDC(dep+1,rs[p],mid+1,r,m-1);\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0;i<=n;i++) {\n\t\tint x; scanf(\"%d\",&x);\n\t\tF[0][i] = x;\n\t}\n\tfor(int i=1;i<=m;i++) scanf(\"%d\",&X[i]);\n\tmaketree(rt,1,m);\n\tfor(int i=0;i<=m;i++) G[i] = ve[rt][i];\n\tDC(1,rt,1,m,n);\n\tfor(int i=1;i<=m;i++) printf(\"%d\\n\",ANS[i]);\n}\n```",
        "postTime": 1544624111,
        "uid": 55343,
        "name": "Newuser",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5050 \u3010\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c\u3011"
    },
    {
        "content": "\u6574\u4e86\u4e00\u5929\uff0c\u6ca1\u6551\u4e86\uff08\n\n\u4f7f\u7528\u4e86\u975e\uff08\u591a\u6b21\uff09\u53d6\u6a21\u505a\u6cd5\uff0c\u4f46\u662f\u4e00\u4e2a\u70b9\u8dd1 1.2s\uff0c\u96be\u8fc7\u3002\n\n---\n\n#### \u7406\u8bba\u63a8\u5bfc\n\n\u7ea6\u5b9a $n$ \u4e3a $F(x)$ \u7684\u9879\u6570\uff0c\u5176\u6700\u9ad8\u6b21\u4e3a $n-1$ \u6b21\u3002\n\n\u7531\u4f59\u5f0f\u5b9a\u7406\u6709 $F(x_i)=F(z) \\mod (z-x_i)$\uff0c\u4f59\u5f0f $R_i$ \u53ea\u6709\u5e38\u6570\u9879\u3002\n\n\u8bbe $G_i=x_i+z$\uff0c$Q_i,R_i$ \u7684\u610f\u4e49\u4e0e\u591a\u9879\u5f0f\u53d6\u6a21\u4e2d\u7684\u76f8\u540c\u3002\n\n\u7531\u4e8e $G_i$ \u662f\u4e00\u6b21\u5f0f\uff0c\u5219 $Q_i$ \u6700\u9ad8\u6b21\u4e3a $n-2$ \u6b21\u3002\n\n\u591a\u9879\u5f0f\u53d6\u6a21\u544a\u8bc9\u6211\u4eec $Q_{iR}\\equiv F_R \\cdot G_{iR}^{-1}\\ \\ \\ (\\mod z^{n-m+1})$\u3002\n\n\u8bbe $Q_{R(l,r)}=F_R\\cdot (\\prod_{i=l}^rG_{iR})^{-1}$\u3002\u56e0\u4e3a\u9700\u8981\u7528\u4e8e\u5206\u6cbb\u8ba1\u7b97\uff0c\u4e0d\u518d\u8003\u8651\u539f\u6765\u7684\u6a21\u610f\u4e49\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u6709 $Q_{R(l,mid)}\\equiv Q_{R(l,r)} \\cdot \\prod_{i=mid+1}^rG_{iR}$\uff0c$Q_{R(mid+1,r)}$ \u540c\u7406\u3002\u4e8e\u662f\u53ef\u4ee5\u5206\u6cbb\u89e3\u51b3\u3002\n\n\u53c8\u56e0\u4e3a $R_i$ \u53ea\u6709\u5e38\u6570\u9879\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa $Q_i$ \u7684\u5e38\u6570\u9879\uff0c\u5373 $[z^{n-2}]Q_{iR}$\uff0c\u5373 $Q_{iR}$ \u7684\u6700\u9ad8\u4f4d\u3002\u53ef\u4ee5\u53d1\u73b0\u5f53\u5206\u6cbb\u8fdb\u5165\u5b50\u533a\u95f4\u65f6\uff0c\u7531\u4e8e\u8fd8\u80fd\u4e58\u4e0a\u7684 $G_i$ \u53ea\u6709 $len-1$ \u4e2a\uff0c\u6700\u7ec8\u80fd\u8d21\u732e\u5230\u6700\u9ad8\u4f4d\u7684\u53ea\u6709\u540e $len$ \u4e2a\u4f4d\u7f6e\uff0c\u53ea\u4fdd\u5b58\u6709\u8d21\u732e\u7684\u4f4d\u7f6e\u5373\u53ef\uff08\u6b64\u5904 $len$ \u4e3a\u5b50\u533a\u95f4\u957f\u5ea6\uff09\u3002\n\n\u6ce8\u610f\u6b64\u5904\u7684**\u540e $len$ \u4e2a\u4f4d\u7f6e**\u6307\u7684\u662f\u76f8\u5bf9\u4e8e $z^{n-2}$ \u5728\u672c\u533a\u95f4\u5bf9\u5e94\u4f4d\u7f6e\u800c\u8a00\u7684\uff0c\u8fd9\u662f\u4ee4\u4eba\u8ff7\u60d1\u7684\uff0c\u53ef\u4ee5\u81ea\u5df1\u753b\u4e2a\u56fe\u611f\u53d7\u4e00\u4e0b\u3002\u5177\u4f53\u5b9e\u73b0\u89c1\u4e0b\u6587\u3002\n\n\u4e8e\u662f\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$\u3002\n\n---\n\n#### \u5177\u4f53\u5b9e\u73b0\n\n\u4ec5\u4f9b\u53c2\u8003\u3002\n\n\u9996\u5148\u9884\u5904\u7406\u4e00\u4e0b\u6bcf\u4e2a\u5206\u6cbb\u6bb5\u7684 $\\prod_{i=l}^{r}G_{iR}$\u3002\n\n\u4ee5\u4fbf\u5904\u7406\uff0c\u6211\u4eec\u94a6\u5b9a $z^{n-2}$ \u5728\u5f53\u524d\u533a\u95f4 $(l,r)$ \u7684\u5bf9\u5e94\u4f4d\u7f6e\u662f $Q_{R(l,r)}$ \u7684\u6700\u9ad8\u4f4d\uff0c\u5373 $z^{len-1}$\uff0c$len=r-l+1$\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5206\u6cbb\u5230\u5de6\u533a\u95f4\u65f6\uff1a \n$$Q_{R(l,mid)}=\\sum_{i=\\frac{len}{2}}^{len-1}x^{i-\\frac{len}{2}}\\cdot [x^{i}](Q_{R(l,r)}\n \\prod_{j=mid+1}^{r}G_{jR})$$\n \n\u90a3\u6211\u4eec\u5927\u6982\u9700\u8981\u5c06\u7b2c\u4e00\u5c42\u5206\u6cbb\u7684 $Q_R$ \u53f3\u79fb\u4e00\u4f4d\u3002\n\n\u641e\u6e05\u695a\u8fd9\u4e2a\uff0c\u5927\u6982\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\u3002\n\n\u5176\u4ed6\u4e24\u7bc7\u9898\u89e3\u7684\u4ee3\u7801\u662f\u771f\u7684\u6ca1\u770b\u61c2\uff0c\u4e0d\u77e5\u9053\u4e3a\u5565\u8981\u7ffb\u8f6c $G_{R}^{-1}$\uff0c\u597d\u50cf\u7528\u4e86\u4e00\u4e9b\u795e\u79d8\u64cd\u4f5c\u3002\n\n---\n\n#### Code\n\n\u7ed9\u70b9\u6838\u5fc3\u4ee3\u7801\u3002\n\n\u56e0\u4e3a $\\prod G_{iR}$ \u5e38\u6570\u9879\u5fc5\u7136\u4e3a 1\uff0c\u6240\u4ee5\u53ef\u4ee5\u53bb\u6389\uff0c\u90a3\u4e48\u9879\u6570\u5c31\u4e0e\u533a\u95f4\u957f\u5ea6\u76f8\u540c\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528\u9759\u6001\u6570\u7ec4\u4fdd\u5b58\uff0c\u800c\u4e0d\u5fc5\u52a8\u6001\u5f00\u70b9\u3002\n\n\u6b64\u5904\u5c06 m \u8865\u9f50\u81f3\u4e8c\u7684\u6b21\u5e42\uff0c\u540c\u65f6\u6ee1\u8db3 $n>m$\uff0c\u7701\u53bb\u5927\u91cf\u7ec6\u8282\u3002\n\nEVA->\u65b0\u4e16\u7eaa\u798f\u97f3\u6218\u58eb\n\n```\nvoid eva_solve(ull *F,int l,int r,int dep,int id){\n\tstatic ull H[maxn],A[maxn],B[maxn],x,y;\n\tif(l==r) return;\n\tint len=r-l+1;\n\tint lim=len<<1;\n\tint mid=(l+r)>>1; \n\tmemcpy(H,EVA[dep]+l,8*len);\n\tmemcpy(A+1,EVA[dep+1]+l,4*len),A[0]=1;\n\tmemcpy(B+1,EVA[dep+1]+mid+1,4*len),B[0]=1;\n\tNTT(H,1,lim,id),NTT(A,1,lim,id),NTT(B,1,lim,id);\n\tfor(int i=0;i<lim;++i){\n\t\tx=A[i],y=B[i];\n\t\tA[i]=H[i]*y%p[id];\n\t\tB[i]=H[i]*x%p[id];\n\t}\n\tNTT(A,-1,lim,id),NTT(B,-1,lim,id);\n\tmemcpy(EVA[dep+1]+l,A+(len>>1),4*len);//\u540elen>>1\u4e2a\n\tmemcpy(EVA[dep+1]+mid+1,B+(len>>1),4*len);\n\tmemset(H,0,8*lim),memset(A,0,8*lim),memset(B,0,8*lim);\n\teva_solve(F,l,mid,dep+1,id);\n\teva_solve(F,mid+1,r,dep+1,id);\n}\nvoid eva_init(ull *X,int l,int r,int dep,int id){\n\tstatic ull A[maxn],B[maxn];\n\tif(l==r){\n\t\tEVA[dep][l]=X[l]>0?p[id]-X[l]:-X[l];\n\t\treturn;\n\t}\n\tint len=r-l+1;\n\tint mid=(l+r)>>1;\n\teva_init(X,l,mid,dep+1,id);\n\teva_init(X,mid+1,r,dep+1,id);\n\tint lim=len<<1;\n\tmemcpy(A+1,EVA[dep+1]+l,4*len),A[0]=1;\n\tmemcpy(B+1,EVA[dep+1]+mid+1,4*len),B[0]=1;\n\tNTT(A,1,lim,id),NTT(B,1,lim,id);\n\tfor(int i=0;i<lim;++i) \n\tA[i]=A[i]*B[i]%p[id];\n\tNTT(A,-1,lim,id);\n\tmemcpy(EVA[dep]+l,A+1,8*len);\n\tmemset(A,0,8*lim);\n\tmemset(B,0,8*lim);\n}\nvoid eva(ull *F,ull *G,ull *X,int len,int id){//X\u5373xi\n\tstatic ull H[maxn],T[maxn];\n\tint lim=len<<1;\n\teva_init(X,0,len-1,0,id);\n\tmemcpy(H+1,EVA[0],8*len),H[0]=1;\n\tinvf(H,T,len+1,id);\n\tmemcpy(H,F,8*len),H[len]=0;\n\treverse(H,H+len);\n\tNTT(H,1,lim,id),NTT(T,1,lim,id);\n\tfor(int i=0;i<lim;++i)\n\tH[i]=H[i]*T[i]%p[id];\n\tNTT(H,-1,lim,id);\n\tmemcpy(EVA[0]+1,H,8*(len-1)),EVA[0][0]=0;//\u53f3\u79fb\u4e00\u4f4d\n\teva_solve(F,0,len-1,0,id);\n\tfor(int i=0;i<len;++i)\n\tG[i]=add(F[0],EVA[to[len]][i]*X[i]%p[id],p[id]);\n\tmemset(T,0,8*(len+1));\n\tmemset(H,0,8*len);\n}\n```",
        "postTime": 1646401615,
        "uid": 90869,
        "name": "tylon2006",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5050 \u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c"
    },
    {
        "content": "[\u6a21\u677f](https://www.luogu.com.cn/problem/P5050)\n\n\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c\uff0c\u5373\u6c42\u591a\u9879\u5f0f $A(x)$ \u5728\u70b9 $x_1,x_2,\\cdots,x_n$ \u4e0a\u5206\u522b\u53d6\u5230\u7684\u503c\u3002\n\n\u6784\u9020\u51fd\u6570\n$$\n\\begin{aligned}\nP_0(x)&=\\prod_{i=1}^{\\lfloor\\frac{n}{2}\\rfloor}(x-x_i)\\\\\nP_1(x)&=\\prod_{i=\\lfloor\\frac{n}{2}\\rfloor+1}^{n}(x-x_i)\n\\end{aligned}\n$$\n\u8bbe $A(x)=P_0(x)D(x)+R(x)$\uff0c\u4e14 $\\deg R<\\deg P_0=\\lfloor\\frac{n}{2}\\rfloor$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e $\\forall x\\in \\{x_1,x_2,\\cdots,x_{\\lfloor\\frac{n}{2}\\rfloor}\\}$\uff0c\u90fd\u6709 $A(x)=R(x)$\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u5c06\u4e00\u4e2a $\\deg =n$ \uff0c\u6709 $n$ \u4e2a\u70b9\u7684\u95ee\u9898\uff0c\u8f6c\u5316\u4e3a\u4e00\u4e2a $\\deg <\\lfloor\\frac{n}{2}\\rfloor$ \uff0c\u6709 $\\lfloor\\frac{n}{2}\\rfloor$ \u4e2a\u70b9\u7684\u95ee\u9898\u3002\n\n\u53e6\u4e00\u534a\u70b9\u503c\u4e0e\u4e0a\u9762\u540c\u7406\u3002\n\n\u56e0\u6b64\u5206\u6cbb NTT \u5373\u53ef\uff0c\u6ce8\u610f\u8ba1\u7b97 $P_0(x)$ \u548c $P_1(x)$ \u540c\u6837\u53ef\u4ee5\u7528\u4e00\u6b21\u5206\u6cbb NTT \u9884\u5904\u7406\u3002\n\n\u8bbe\u8ba1\u7b97\u7684\u590d\u6742\u5ea6\u4e3a $T(x)$\uff0c\u5219 $T(x)=2T(\\frac{x}{2})+O(n\\log n)$\uff0c\u6b64\u5904 $O(n\\log n)$ \u7684\u90e8\u5206\u662f\u7b97 $D(x),R(x)$ \u7684\u590d\u6742\u5ea6\uff0c\u5bb9\u6613\u53d1\u73b0\u9884\u8ba1\u7b97\u590d\u6742\u5ea6\u4e5f\u662f $T(x)$\u3002\n\n\u7531\u4e3b\u5b9a\u7406\u53ef\u5f97\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log^2 n)$\u3002\n\n\u5b9e\u9645\u5e94\u7528\u65f6\u53ef\u4ee5\u901a\u8fc7\u7528\u66b4\u529b\u79e6\u4e5d\u97f6\u8fdb\u884c\u526a\u679d\u6765\u4f18\u5316\u5e38\u6570\u3002\n\n\u8003\u8651\u5230\u672c\u9898\u8c03\u8bd5\u8f83\u4e3a\u56f0\u96be \u5728\u6b64\u76f4\u63a5\u653e\u51fa\u5b8c\u6574\u4ee3\u7801\uff0c\u603b\u957f 4.9K\uff0c\u6ca1\u6709\u7ecf\u8fc7\u523b\u610f\u5361\u5e38\uff0c\u6240\u4ee5\u53ef\u8bfb\u6027\u5c1a\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nstruct IO_Tp {\n    const static int _I_Buffer_Size = 2 << 22;\n    char _I_Buffer[_I_Buffer_Size], *_I_pos = _I_Buffer;\n\n    const static int _O_Buffer_Size = 2 << 22;\n    char _O_Buffer[_O_Buffer_Size], *_O_pos = _O_Buffer;\n\n    IO_Tp() { fread(_I_Buffer, 1, _I_Buffer_Size, stdin); }\n    ~IO_Tp() { fwrite(_O_Buffer, 1, _O_pos - _O_Buffer, stdout); }\n\n    IO_Tp &operator>>(ll &res) {\n    \tll f=1;\n        while (!isdigit(*_I_pos)&&(*_I_pos)!='-') ++_I_pos;\n        if(*_I_pos=='-')f=-1,++_I_pos;\n        res = *_I_pos++ - '0';\n        while (isdigit(*_I_pos)) res = res * 10 + (*_I_pos++ - '0');\n        res*=f;\n        return *this;\n    }\n\n    IO_Tp &operator<<(ll n) {\n    \tif(n<0)*_O_pos++='-',n=-n;\n        static char _buf[10];\n        char *_pos = _buf;\n        do\n            *_pos++ = '0' + n % 10;\n        while (n /= 10);\n        while (_pos != _buf) *_O_pos++ = *--_pos;\n        return *this;\n    }\n\n    IO_Tp &operator<<(char ch) {\n        *_O_pos++ = ch;\n        return *this;\n    }\n} IO;\n\nconst ll N=1048576,P=998244353;\n#define clear(a) memset((a),0,len<<5)\nnamespace Poly{\n    const ll G=3,img=86583718;\n    ll lmt,rev[N],a[N],b[N],c[N],d[N],e[N],h[N],x[N],y[N],z[N],X[N],Y[N],ff[N],gg[N],iv[N],t[N];//poly1\n    ll A[N],B[N],Len[N],*p[N];\n    inline ll qpow(ll a,ll k){\n        ll ret=1;\n        while(k){\n            if(k&1)ret=ret*a%P;\n            a=(a*a)%P;\n            k>>=1;\n        }\n        return ret%P;\n    }\n    inline void init(ll n){\n        lmt=1;ll t=0;\n        while(lmt<n)lmt<<=1,t++;\n        for(ll i=1;i<lmt;i++)rev[i]=(rev[i>>1]>>1)|(i&1)<<(t-1);\n    }\n    inline void NTT(ll *A,ll lmt,ll tp){\n        for(ll i=0;i<lmt;i++)if(i<rev[i])swap(A[i],A[rev[i]]);\n        for(ll m=1;m<lmt;m<<=1)\n            for(ll j=0,Wn=qpow(G,(P-1)/(m<<1));j<lmt;j+=m<<1)\n                for(ll k=0,w=1,x,y;k<m;k++,w=w*Wn%P)\n                    x=A[j+k],y=w*A[j+k+m]%P,A[j+k]=(x+y)%P,A[j+k+m]=(x-y+P)%P;\n        if(tp==1)return;\n        reverse(A+1,A+lmt);\n        for(ll i=0,inv=qpow(lmt,P-2);i<=lmt;i++)A[i]=A[i]*inv%P;\n    } \n    inline void mul(ll *f,ll *g,ll len){\n        init(len);\n        NTT(f,lmt,1);NTT(g,lmt,1);\n        for(ll i=0;i<lmt;i++)f[i]=(f[i]*g[i])%P;\n        NTT(f,lmt,-1);\n    } \n    void getinv(ll*f,ll*g,ll len){\n        if(len==1){g[0]=qpow(f[0],P-2);return;}\n        getinv(f,g,len+1>>1);\n        init(len<<1);\n        for(ll i=0;i<len;i++)c[i]=f[i];\n        for(ll i=len;i<lmt;i++)c[i]=0;\n        NTT(c,lmt,1),NTT(g,lmt,1);\n        for(ll i=0;i<lmt;i++)g[i]=(2LL-g[i]*c[i]%P+P)%P*g[i]%P;\n        NTT(g,lmt,-1);\n        for(ll i=len;i<lmt;i++)g[i]=0; \n        clear(c);\n    }\n    inline void div(ll *f,ll *g,ll *q,ll *r,ll n,ll m){\n        for(ll i=0,t=n-1;i<n;i++,t--)ff[i]=f[t];\n        for(ll i=0,t=m-1;i<m;i++,t--)gg[i]=g[t];\n        ll len=n-m+1;\n        for(ll i=len;i<n;i++)ff[i]=gg[i]=0;\n        getinv(gg,iv,len);\n        mul(ff,iv,len<<1);\n        for(ll i=0,t=len-1;i<len;i++)q[i]=ff[t--];\n        for(ll i=len;i<n;i++)q[i]=0;\n        for(ll i=0;i<n;i++)t[i]=q[i];\n        len=n;\n        clear(gg);\n        for(ll i=0;i<m;i++)gg[i]=g[i];\n        mul(t,gg,n<<1);\n        for(ll i=0;i<m-1;i++)r[i]=(f[i]-t[i]+P)%P;\n        clear(ff),clear(gg),clear(iv),clear(t);\n    }\n    void getP(const ll *a,ll k,ll l,ll r){\n    \tif(l==r){\n    \t\tLen[k]=1;\n    \t\tp[k]=new ll[2];\n    \t\tp[k][0]=P-a[l];\n    \t\tp[k][1]=1;\n    \t\treturn;\n\t\t}\n\t\tll mid=l+r>>1;\n\t\tgetP(a,k<<1,l,mid);\n\t\tgetP(a,k<<1|1,mid+1,r);\n\t\tLen[k]=Len[k<<1]+Len[k<<1|1];\n\t\tp[k]=new ll[Len[k]+1];\n\t\tinit(Len[k]+1<<1);\n\t\tstatic ll A[N],B[N];\n\t\tfor(ll i=0;i<=Len[k<<1];i++)A[i]=p[k<<1][i];\n\t\tfor(ll i=Len[k<<1]+1;i<lmt;i++)A[i]=0;\n\t\tfor(ll i=0;i<=Len[k<<1|1];i++)B[i]=p[k<<1|1][i];\n\t\tfor(ll i=Len[k<<1|1]+1;i<lmt;i++)B[i]=0;\n\t\tNTT(A,lmt,1);NTT(B,lmt,1);\n\t\tfor(ll i=0;i<lmt;i++)A[i]=A[i]*B[i]%P;\n\t\tNTT(A,lmt,-1);\n\t\tfor(ll i=0;i<=Len[k];i++)p[k][i]=A[i];\n\t}\n\tvoid solve(ll k,ll l,ll r,const ll *a,ll *A,ll *ans){\n\t\tif(Len[k]<=500){\n\t\t\tll m=Len[k]-1;\n\t\t\tfor(ll i=l;i<=r;i++)\n\t\t\t\tfor(ll j=m;j>=0;j--)\n\t\t\t\t\tans[i]=(ans[i]*a[i]+A[j])%P;\n\t\t\treturn;\n\t\t}\n\t\tif(l==r){ans[l]=*A;return;}\n\t\tll mid=l+r>>1,R[Len[k]+2>>1];\n\t\tstatic ll t[N];\n\t\tdiv(A,p[k<<1],t,R,Len[k],Len[k<<1]+1);\n\t\tsolve(k<<1,l,mid,a,R,ans);\n\t\tdiv(A,p[k<<1|1],t,R,Len[k],Len[k<<1|1]+1); \n\t\tsolve(k<<1|1,mid+1,r,a,R,ans);\n\t}\n\tvoid evaluation(ll *f,ll *a,ll *ans,ll n,ll m){\n\t\tgetP(a,1,1,m); \n\t\tif(n>m){\n\t\t\tstatic ll t[N];\n\t\t\tdiv(f,p[1],t,f,n,m+1);\n\t\t}\n\t\tsolve(1,1,m,a,f,ans);\n\t}\n}\nusing Poly::evaluation;\nll n,m,f[N],a[N],ans[N];\nint main(){\n\tIO>>n>>m;n++;\n\tfor(ll i=0;i<n;i++)IO>>f[i];\n\tfor(ll i=1;i<=m;i++)IO>>a[i];\n\tevaluation(f,a,ans,n,m);\n\tfor(ll i=1;i<=m;i++)IO<<ans[i]<<'\\n';\n\treturn 0;\n}\n```\n",
        "postTime": 1610613303,
        "uid": 121027,
        "name": "Spasmodic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5050 \u3010\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u591a\u70b9\u6c42\u503c\u3011"
    }
]