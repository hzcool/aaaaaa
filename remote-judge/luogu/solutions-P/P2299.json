[
    {
        "content": "\u672c\u6765\u8ba4\u4e3a\u662fdijkstra\n\n\u5176\u5b9eBELLMAN-FORD\u5c31\u62a1\u8fc7\u53bb\u4e86\uff08\u5212\u6389\uff09\n \n \u4ee5\u4e0b\u662fB-F\u4ee3\u7801\n \n\n------------\n\n \n ```cpp\n#include<cstdio>\nusing namespace std;\nint a[1000001],b[1000001],c[1000001],d[2510];\n/*\u6ce8\u610f\u6570\u7ec4\u5927\u5c0f\uff0c\u6ca1\u7ed9\u8303\u56f4\uff0c100W\u624d\u8fc7\u3002\u3002\u3002*/\nint main()\n{\n\tint n,m;\n\tint i,j;\n    int INF=999999999;\n    //INF\u5c3d\u91cf\u5927\uff0c\u4f46\u662f\u8981\u4fdd\u8bc12*INF\u4e0d\u7206\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&a[i],&b[i],&c[i]);\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(i==1) d[i]=0;\n\t\telse d[i]=INF;\n\t}//\u8d4b\u521d\u503c\n\tfor(i=1;i<=n-1;i++)\n\t{\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tif(d[a[j]]+c[j]<d[b[j]])\n\t\t\td[b[j]]=d[a[j]]+c[j];\n            //\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u6765\u56de\u4e24\u904d\n\t\t\tif(d[b[j]]+c[j]<d[a[j]])\n\t\t\td[a[j]]=d[b[j]]+c[j];\t\t\n\t\t}//\u6807\u51c6\u7684\u677e\u5f1b\n\t}\n\tprintf(\"%d\",d[n]);//\u9898\u76ee\u9519\u4e86\uff0c\u5e94\u8be5\u662fN\u4e0d\u662fM\n\treturn 0;\n}\n```\n\n------------\n//\u849f\u84bb\u9898\u89e3\uff0c\u591a\u591a\u6307\u6559\n",
        "postTime": 1517883347,
        "uid": 48726,
        "name": "Dr.\u4e5d\u547d\u732b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "# \u6b64\u4ee3\u7801\u662f\u53d7SDWC 2019 rk7\u6307\u5bfc\u800c\u5199\u51fa\u6765\u7684\uff01\uff01\n\u770b\u5230\u9898\u89e3\u91cc\u4e00\u5806\u5806\u5168\u662fSPFA\uff0cdijkstra\u5728\u540e\u9762\u4e86\u3002\u6211\u5c31\u60f3\u53d1\u4e00\u4e2a\u5806\u4f18\u5316\u5f97dijkstra\uff08\u4e5f\u662fSDWC 2019 rk7\u6559\u6211\u7684\uff09\u3002\n\u5229\u7528\u4e86\u90bb\u63a5\u8868\uff0cSTL\u4e2d\u7684\u4f18\u5148\u961f\u5217\uff08~~\u5e9f\u8bdd~~\uff09\u3002\n\u4e3a\u4e86\u9632\u6b62\u50cf\u67d0\u4f4d\u5927\u4f6c\u4e00\u6837\uff0c\u6284\u81ea\u5df1\u9898\u89e3\u88ab\u68d5\u540d\uff0c\u6211\u5148\u81ea\u5df1AC\u6389\u4e86QWQ\u3002\n\u5728\u8fd9\u91cc\u6211\u771f\u631a\u7684\u5bf9\u90a3\u4f4d\u8dd1\u4e866\u904dDP\u7684\u5927\u4f6c\u8bf4\u4e00\u58f0tql\uff01\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#include<queue>\n#define maxn 100001\n#define inf 0x7fffffff\nusing namespace std;\nint head[maxn],cnt,dis[maxn],n,m;\nbool vis[maxn]={0};\nstruct node{\n    int dis,jd;\n    bool operator < (const node &a) const{\n    return a.dis<dis;\n    }\n};\nstruct Edge{\n    int next,to,worth;\n}e[maxn*1000];\nvoid insert(int from,int to,int worth)\n{\n    e[++cnt].next=head[from];\n    e[cnt].to=to;\n    e[cnt].worth=worth; \n    head[from]=cnt;\n}\nvoid dijkstra()\n{\n    priority_queue<node>q;\n    for(int i=1;i<=n;i++)\n    dis[i]=inf;\n    dis[1]=0;\n    q.push((node){0,1});\n    while(!q.empty())\n    {\n        node now=q.top();\n        q.pop();\n        if(vis[now.jd]) continue;\n        vis[now.jd]=true;\n        for(int i=head[now.jd];i;i=e[i].next)\n        if(dis[e[i].to]>dis[now.jd]+e[i].worth)\n        {\n            dis[e[i].to]=dis[now.jd]+e[i].worth;\n            q.push((node){dis[e[i].to],e[i].to});\n        }\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(0);\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        int x,y,z;\n        cin>>x>>y>>z;\n        insert(x,y,z);\n  \t\tinsert(y,x,z);\n    }\n    dijkstra();\n    cout<<dis[n];\n    return 0;\n}\n```\n",
        "postTime": 1551865625,
        "uid": 100899,
        "name": "\u5229\u5203\u968f\u4eba",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "# \u5355\u6e90\u6700\u77ed\u8def\u5f84\uff0cSPFA\uff0c\u5c31\u4e0d\u8be6\u7ec6\u8bb2\u89e3\u4e86\uff0c\u5e26\u6765\u666e\u901a\u4e0epb\\_ds\u4e24\u4e2a\u7248\u672c #\n\n\n\n## \u8fd9\u662f\u6b63\u5e38\u7248\u672c ##\n\n\n\n\n\n```cpp\n#include <bits/stdc++.h> //\u4e07\u80fd\u5934\u6587\u4ef6 \nusing namespace std;\nstruct Edge\n{\n    int nxt, to, val;\n}a[3125000]; //\u5947\u602a\u7684struct \nint fir[5000], d[5000], b[5000];\nint n, m, u, v, w, cnt;\nqueue < int > q;\nint read_int() //\u5feb\u8bfb \n{\n    int x, f = 1;\n    char ch;\n    while (ch = getchar(), ch < 48 || ch > 57)\n        if (ch == '-') f = -f;\n    x = ch - 48;\n    while (ch = getchar(), ch >= 48 && ch <= 57)\n        x = x * 10 + ch - 48;\n    return x * f;\n}\nvoid write_int(int x) //\u5feb\u8f93(\u53cd\u6b63\u6211\u8fd9\u4e48\u53eb) \n{  \n    if (x == 0)\n    {\n        putchar('0');\n        return;\n    }\n    int num = 0;\n    char c[11];\n    while (x)\n        c[++num] = x % 10 + 48, x /= 10;\n    while (num)\n        putchar(c[num--]);\n}\nint add_edge(int u, int v, int w) //\u6dfb\u52a0\u4e00\u6761\u8fb9 \n{\n    a[++cnt].to = v;\n    a[cnt].val = w;\n    a[cnt].nxt = fir[u];\n    fir[u] = cnt;\n}\nint main()\n{\n    n = read_int();\n    m = read_int();\n    for (int i = 1; i <= m; ++i)\n    {\n        u = read_int();\n        v = read_int();\n        w = read_int();\n        add_edge(u, v, w);\n        add_edge(v, u, w); //\u65e0\u5411\u8fb9 \n    }\n    for (int i = 1; i <= n; ++i)\n        d[i] = 0x7fffffff; //maxlongint\u521d\u59cb\u5316 \n    q.push(1);\n    b[1] = 1; //\u5165\u961f \n    d[1] = 0; \n    while (!q.empty()) //\u5982\u679c\u961f\u5217\u4e0d\u4e3a\u7a7a \n    {\n        u = q.front();\n        q.pop(); //\u51fa\u961f\n        b[u] = 0; //\u539f\u6765\u6f0f\u4e86\u8fd9\u53e5\uff0c\u4e0d\u65ad80 \n        for (int i = fir[u]; i; i = a[i].nxt)\n            if (d[u] + a[i].val < d[a[i].to]) //relax\u6761\u4ef6\u5224\u65ad \n            {\n                d[a[i].to] = d[u] + a[i].val;\n                if (!b[a[i].to]) //\u5165\u961f \n                {\n                    q.push(a[i].to);\n                    b[a[i].to] = 1;\n                }\n            }\n    }\n    write_int(d[n]);\n}\n```\n## \u4e0b\u9762\u662fpb\\_ds\u7248\u672c(\u7528\u6cd5\u57fa\u672c\u4e00\u6837,\u76f8\u540c\u7684\u5c31\u4e0d\u5199\u4e86) ##\n\n\n\n```cpp\n#include <bits/stdc++.h>\n#include <ext/pb_ds/priority_queue.hpp> //pb_ds\u7684priority_queue\u5934\u6587\u4ef6 \nusing namespace std;\nstruct Edge\n{\n    int nxt, to, val;\n}a[3125000];\nint fir[5000], d[5000], b[5000];\nint n, m, u, v, w, cnt;\nstruct comp\n{\n    __inline__ __attribute((always_inline)) bool operator()(int a, int b)\n    {\n        return d[a] > d[b];\n    }\n}; //\u6bd4\u8f83\u5668,\u7528\u4e8epb_ds\u7684priority_queue \n__gnu_pbds::priority_queue < int, comp > q; //__gnu_pbds\u662fpb_ds\u7684\u547d\u540d\u7a7a\u95f4\nint read_int()\n{\n    int x, f = 1;\n    char ch;\n    while (ch = getchar(), ch < 48 || ch > 57)\n        if (ch == '-') f = -f;\n    x = ch - 48;\n    while (ch = getchar(), ch >= 48 && ch <= 57)\n        x = x * 10 + ch - 48;\n    return x * f;\n}\nvoid write_int(int x)  \n{  \n    if (x == 0)\n    {\n        putchar('0');\n        return;\n    }\n    int num = 0;\n    char c[11];\n    while (x)\n        c[++num] = x % 10 + 48, x /= 10;\n    while (num)\n        putchar(c[num--]);\n}\nint add_edge(int u, int v, int w)\n{\n    a[++cnt].to = v;\n    a[cnt].val = w;\n    a[cnt].nxt = fir[u];\n    fir[u] = cnt;\n}\nint main()\n{\n    n = read_int();\n    m = read_int();\n    for (int i = 1; i <= m; ++i)\n    {\n        u = read_int();\n        v = read_int();\n        w = read_int();\n        add_edge(u, v, w);\n        add_edge(v, u, w);\n    }\n    for (int i = 1; i <= n; ++i)\n        d[i] = 0x7fffffff;\n    q.push(1);\n    b[1] = 1;\n    d[1] = 0;\n    while (!q.empty())\n    {\n        u = q.top();\n        q.pop();\n        b[u] = 0;\n        for (int i = fir[u]; i; i = a[i].nxt)\n            if (d[u] + a[i].val < d[a[i].to])\n            {\n                d[a[i].to] = d[u] + a[i].val;\n                if (!b[a[i].to])\n                {\n                    q.push(a[i].to);\n                    b[a[i].to] = 1;\n                }\n            }\n    }\n    write_int(d[n]);\n}\n```",
        "postTime": 1493547746,
        "uid": 22132,
        "name": "little_gift",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "## \u5e26\u6765\u4e24\u79cd\u89e3\u6cd5\uff0c\u4e00\u79cd\u662f\u5927\u5bb6\u7528\u70c2\u6389\u7684\uff0c\u8fd8\u6709\u4e00\u79cd\u662f\u76ee\u524d\u5e76\u6ca1\u6709\u5728\u9898\u89e3\u4e2d\u770b\u5230\u7684\u3002\u6ce8\uff1a\u4e24\u79cd\u90fd\u662fdijkstra\n### \u5148\u8bf4\u7b2c\u4e00\u79cd\n#### \u76f4\u63a5\u66b4\u529b\uff0c\u5c31\u662fdijkstra\u7684\u6a21\u677f\n```cpp\n #include<stdio.h>\n#include<string.h>\nint n,m,from,to,x,f[10005],b[10005],w[2505][2505];\ntemplate<typename TYPE>\ninline void read(TYPE&x){\n\tx=0;int w=1;register char c=getchar();for(;c<'0'||c>'9';c=getchar()) if (c=='-') w=-1;\n\tfor(;c>='0'&&c<='9';x=(x<<3)+(x<<1)+(c^48),c=getchar());x*=w;\n}\nint main(){\n//\tfreopen(\"tx.in\",\"r\",stdin);freopen(\"tx.out\",\"w\",stdout);\n\tread(n);read(m);memset(w,0x3f,sizeof(w));//memset(f,0x3f,sizeof(f));b[0]=1;\n//\tprintf(\"%0x\",w[1][1]);\n\tfor(register int i=1;i<=m;i++){read(from);read(to);read(x);if (w[from][to]>x) w[from][to]=x,w[to][from]=x;}\n\tfor(register int i=1;i<=n;i++) f[i]=w[1][i];\n\tf[1]=0;int minl,k;\n\tfor(register int i=1;i<=n-1;i++){\n\t\tminl=0x3f3f3f3f;k=0;for(register int j=1;j<=n;j++) if (!b[j]&&f[j]<minl) minl=f[j],k=j;\n\t\tif (k==0) break;\n\t\tb[k]=1;\n\t\tfor(register int j=1;j<=n;j++) if (f[k]+w[k][j]<f[j]) f[j]=f[k]+w[k][j];\n\t}\n\treturn printf(\"%d\\n\",f[n]),0;\n}\n```\n### \u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^2),\u867d\u7136\u8fc7\u8fd9\u9053\u9898\u662f\u591f\u4e86\uff0c\u4f46\u662f\u6709\u6ca1\u6709\u66f4\u5feb\u7684\u89e3\u6cd5\u5462\uff1f\n### \u5f88\u663e\u7136\u7b2c\u4e8c\u4e2a\u5faa\u73af\u662f\u6c42\u6700\u5c0f\u503c\uff0c\u4e8e\u662f\u6211\u4eec\u8054\u60f3\u5230\u5c0f\u6839\u5806\uff0c\u5c0f\u6839\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ea\u6709logn.\n#### \u4e8e\u662f\u6211\u4eec\u5c06\u5b58\u50a8\u65b9\u5f0f\u6539\u4e3a\u94fe\u5f0f\u524d\u9879\u661f\n#### \u6ce8\u610f:\u4f18\u5148\u961f\u5217\u5f97\u7528\u7ed3\u6784\u4f53\u6216pair\n\u5177\u4f53\u89e3\u91ca\u89c1\u4ee3\u7801\n```cpp\n#include<queue>\n#include<vector>\n#include<stdio.h>\n#include<string.h>\nusing namespace std;\nint n,m,from,to,x,num,head[2505],f[10005],v[25005];//w[2505][2505];\npriority_queue<pair<int , int > > q;\ntemplate<typename TYPE>\ninline void read(TYPE&x){\n\tx=0;int w=1;register char c=getchar();for(;c<'0'||c>'9';c=getchar()) if (c=='-') w=-1;\n\tfor(;c>='0'&&c<='9';x=(x<<3)+(x<<1)+(c^48),c=getchar());x*=w;\n}\nstruct Edge{int next,to,x;}edge[400005];\ninline int add(int from,int to,int x){edge[++num].next=head[from];edge[num].x=x;edge[num].to=to;head[from]=num;}\nint main(){\n//\tfreopen(\"tx.in\",\"r\",stdin);freopen(\"tx.out\",\"w\",stdout);\n\tread(n);read(m);;memset(f,0x3f,sizeof(f));\n//\tprintf(\"%0x\",w[1][1]);\n\tfor(register int i=1;i<=m;i++){\n\t\tread(from);read(to);read(x);\n\t\tadd(from,to,x),add(to,from,x);//\u5b58\u8d2e\n\t}\n//\tfor(register int i=1;i<=n;i++) f[i]=w[1][i];\n\tf[1]=0;q.push(make_pair(0,1));//\u521d\u59cb\u5316\n\twhile(!q.empty()){\n\t\tint x=q.top().second;q.pop();\n\t\tif (v[x]) continue;\n\t\tv[x]=1;\n\t\tfor(int i=head[x];i;i=edge[i].next){//\u904d\u5386\u6240\u6709\u76f8\u8fde\u7684\u8fb9\n\t\t\tint y=edge[i].to,z=edge[i].x;\n\t\t\tif (f[y]>f[x]+z) f[y]=f[x]+z,q.push(make_pair(-f[y],y));//\u5165\u961f \u8fd9\u91cc\u4e3a\u4e86\u4e0d\u5199CMP\u6545\u53ef\u4ee5\u7528-f[y]\n\t\t}\n\t}\n\treturn printf(\"%d\\n\",f[n]),0;\n\n```\n",
        "postTime": 1570381175,
        "uid": 112109,
        "name": "Alphaban",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5b8c\u5168\u662f\u4e2a\u6700\u77ed\u8def\u88f8\u9898\uff0c\u6211\u7528\u7684\u662fdij+\u5806\u4f18\u5316\uff0c\u8dd1\u7684\u8fd8\u7b97\u5feb\u5427\u3002\n\n\u8fd8\u6709\uff0c\u8fd9\u4e2a\u9898\u8bb0\u5f97\u8981\u5efa\u53cc\u5411\u8fb9\uff0c\u4e4b\u524d\u7a9d\u8c8c\u4f3c\u88ab\u5751\u4e86\u3002\n\n\u7136\u540e\u5c31\u662f ~~(\u4f60\u4eec\u559c\u6b22\u7684)~~ \u4ee3\u7801\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define N 200009\n#define inf 2e9 \nusing namespace std;\nbool ok[N];\nint n,m,s,dst[N],x[N];\nvector<int> to[N],w[N];\nstruct Node{int c,u;};\nstruct GREATER{\n\tbool operator()(const Node&a,const Node&b){\n\t\treturn a.c>b.c;\n\t}\n};\npriority_queue<Node,vector<Node>,GREATER> q;\nvoid dijkstra(int s){\n\tfill(dst,dst+n+9,inf);\n\tdst[s]=0;\n\tq.push((Node){0,s});\n\twhile(!q.empty()){\n\t\tint u=q.top().u; q.pop();\n\t\tif(ok[u]) continue;\n\t\tok[u]=1;\n\t\tfor(int i=0;i<to[u].size();i++){\n\t\t\tint v=to[u][i];\n\t\t\tif(!ok[v]&&dst[v]>dst[u]+w[u][i]){\n\t\t\t\tdst[v]=(dst[u]+w[u][i]);\n\t\t\t\tq.push((Node){dst[v],v});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n>>m; s=1;\n\twhile(m--){\n\t\tint a,b,c;\n\t\tcin>>a>>b>>c;\n\t\tto[a].push_back(b);\n\t\tw[a].push_back(c);\n\t\tto[b].push_back(a);\n\t\tw[b].push_back(c);\n\t}\n\tdijkstra(s);\n\tcout<<dst[n]<<endl;\n\treturn 0;\n}\n// \u4e0d\u4f1adij+\u5806\u4f18\u5316\u53ef\u4ee5\u5de6\u8f6c\uff1a https://www.luogu.org/problem/P4779\n```",
        "postTime": 1569158024,
        "uid": 91204,
        "name": "Fatalis_Lights",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "## \u4e00\u9053~~\u7eaf\u7cb9\u7684~~Dijkstra\u6a21\u677f\u9898\n### \u9898\u76ee\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u662f\u5355\u6e90\u975e\u8d1f\u8fb9\u6743\uff0c\u90bb\u63a5\u77e9\u9635+Dijkstra\u5c31\u53ef\u4ee5\u8fc7\u3002\n\n------------\n\n# \u6ce8\u610f\uff01\uff0140\u5206\u539f\u56e0\u5982\u4e0b\uff1a\n- \u5404\u4f4ddalao\u8981\u6ce8\u610f\u7684\u662f\u5b58\u50a8\u90bb\u63a5\u77e9\u9635\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u53bb\u91cd\uff0c\u5426\u5219\u540e\u9762\u7684\u8def\u5f84\u4f1a\u628a\u4e4b\u524d\u7684\u8986\u76d6(~~\u88ab\u5361\u4e86\u5f88\u4e45\u624d\u53d1\u73b0~~)\uff1a \n```cpp\n   for (i=1;i<=m;i++)\n   {\n\tcin>>x>>y>>z;\n\tf[x][y]=f[y][x]=min(z,f[x][y]);\n   }\n```\n- \u6240\u4ee5\u8981\u505a\u4e00\u4e2a\u6bd4\u8f83\uff0c\u4fdd\u8bc1\u5b58\u5165\u7684\u8def\u5f84\u957f\u5ea6\u6700\u5c0f\u3002\n####  \u4e0b\u9762\u732e\u4e0a\u672c\u849f\u84bb\u7684\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint f[2501][2501],c[2501],b[2501];\nint main()\n{\n   int n,m,x,y,z,i,j;\n   memset(f,0x3f3f3f3f,sizeof(f));  //\u90bb\u63a5\u77e9\u9635\u521d\u59cb\u5316\u6700\u5927\u503c \n   cin>>n>>m;\n   for (i=1;i<=m;i++)\n   {\n\tcin>>x>>y>>z;\n\tf[x][y]=f[y][x]=min(z,f[x][y]); //\u8f93\u5165&\u5b58\u50a8&\u5224\u91cd \n   }\n   for (i=1;i<=n;i++)               //\u7ecf\u5178Dijkstra\u6a21\u677f,\u8d77\u70b9\u4e3a1 \n   c[i]=f[1][i];\n   memset(b,0,sizeof(b));\n   b[1]=1;\n   c[1]=0;\n   for (i=1;i<n;i++)\n   {\n\t    int minn=0x3f3f3f3f;\n\t    int k=0;\n\t    for (j=1;j<=n;j++)\n\t        if ((!b[j])&&(c[j]<minn))\n\t        {\n\t\t     minn=c[j];\n\t         k=j;\n\t        }\n\t    if (!k) break;\n\t      b[k]=1;\n\t    for (j=1;j<=n;j++)\n\t      c[j]=min(c[j],c[k]+f[k][j]);\n   } \n   cout<<c[n];                      //\u56e0\u4e3a\u662f1~n\u6240\u4ee5\u8f93\u51fac[n]\n}\n```\n\u60f3\u8981~~\u548c\u672c\u849f\u84bb\u4e00\u8d77~~\u5b66\u4e60Dijkstra\u7684\u5927\u4f6c\u4eec\u6765 [\u8fd9\u91cc](https://blog.csdn.net/qq_35644234/article/details/60870719)",
        "postTime": 1566203210,
        "uid": 19704,
        "name": "dan_daning_L",
        "ccfLevel": 0,
        "title": "\u9898\u89e3P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "# \u663e\u800c\u6613\u89c1\u7684\u4e00\u9053\u5355\u6e90\u6700\u77ed\u8def~~\u88f8\u9898~~\n\u9898\u76ee\u5c31\u6ca1\u4ec0\u4e48\u53ef\u4ee5\u89e3\u91ca\u7684\u4e86\uff0c\u6bd5\u7adf\u90fd\u770b\u5f97\u51fa\u6765\u662f\u6700\u77ed\u8def\n\n\u4f46\u662f\u8fd9\u4e2a\u9898\u76ee\u6709\u5751\u554a\n\n\u597d\u5427\u73b0\u5728\u6211\u4e0d\u8bf4\n## \u4ee3\u7801\n```\n//Shikita\n#include<iostream>\n#include<queue>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=2505,M=400005;\nint head[N],ver[M],edge[M],Next[M],d[N],f[2505][2505];\nbool v[N];\nint n,m,tot;\nstruct node{int x,y;}ff;\nqueue<node>qq;\npriority_queue< pair<int ,int> > q;\nint read()\n{\n    int x=0,w=1;char ch=getchar();\n    while(ch>'9'||ch<'0') {if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    return x*w;\n}\nvoid add(int x,int y,int z)\n{\n\tver[++tot]=y,edge[tot]=z,Next[tot]=head[x],head[x]=tot;\n}\nvoid dijkstra()\n{\n\tmemset(d,0x3f,sizeof(d));\n\tmemset(v,0,sizeof(v));\n\td[1]=0;\n\tq.push(make_pair(0,1));\n\twhile(q.size())\n\t{\n\t\tint x=q.top().second;\n\t\tq.pop();\n\t\tif(v[x]) continue;\n\t\tv[x]=1;\n\t\tfor(int i=head[x];i;i=Next[i])\n\t\t{\n\t\t\tint y=ver[i],z=edge[i];\n\t\t\tif(d[y]>d[x]+z)\n\t\t\t{\n\t\t\t\td[y]=d[x]+z;\n\t\t\t\tq.push(make_pair(-d[y],y));\n\t\t\t}\n\t\t}\n\t} \n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=read(),y=read(),z=read();\n\t\tif(f[x][y]==0)\n\t\t{\n\t\t\tf[x][y]=z;\n\t\t\tff.x=x,ff.y=y;\n\t\t\tqq.push(ff);\n\t\t}\n\t\telse f[x][y]=min(f[x][y],z);\n\t}\n\twhile(!qq.empty())\n\t{\n\t\tff=qq.front();qq.pop();\n\t\tadd(ff.x,ff.y,f[ff.x][ff.y]);\n\t\tadd(ff.y,ff.x,f[ff.x][ff.y]);\n\t}\n\tdijkstra();\n\tcout<<d[n]<<endl;\n}\n```\n\u6211\u4eec\u9700\u8981\u5224\u91cd\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u56e0\u4e3a\u6570\u636e\u7684\u539f\u56e0\uff0c\u5982\u679c\u4e0d\u5224\u91cd\u4f1aWA\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u5341\u4e2a\u70b9\n\n\u867d\u7136\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\n\n\u800c\u4e14\u6211\u7684\u5224\u91cd\u4e5f\u975e\u5e38\u4e11\u964b\u3002\u3002\u3002\n\n\u597d\u5427\u5404\u4f4d\u5927\u4f6c\u5c31\u591a\u591a\u5305\u542b\u5427",
        "postTime": 1538738130,
        "uid": 41887,
        "name": "Shikita",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "\u6211\u5f3a\u70c8\u6000\u7591\u8fd9\u9053\u9898\u968f\u673a\u6570\u636e\n\n\u8981\u53bb\u91cd~~\uff08\u9a71\u866b\uff09~~\uff01\n\n\u6211\u8001\u8001\u5b9e\u5b9e\u5199dijkstra\n\n\u7136\u540e\u5c31A\u4e86\u56db\u4e2a\u70b9\n\n\u6211\u786c\u751f\u751f\u6311\u4e86~~\u4e00\u5929\uff08\u4e00\u5206\u949f\uff09~~\n\n\u53d1\u73b0\u8981\u9a71\u866b\n\nAC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=2510;\nint f[inf][inf],dis[inf];\nint vis[inf];\nint main()\n{\n\tint n,i,j,m,x,y,k,minn;\n\tcin>>n>>m;\n\tmemset(f,0x7f,sizeof(f));\n\tfor(i=1;i<=m;i++)\n\t{\tcin>>x>>y>>k;\n\t    if(k<f[x][y])\n\t\t\tf[x][y]=f[y][x]=k;}\n\tfor(i=1;i<=n;i++)\t\n\t\tdis[i]=f[1][i];\n\tdis[1]=0;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tminn=0X7fffff;k=0;\n\t\tfor(j=1;j<=n;j++)\n\t\t{\tif(vis[j]==0&&minn>dis[j])\n\t\t\t{\tminn=dis[j];k=j;}\n\t\t}\n\t\tvis[k]=1;if(k==0) break;\n\t\tfor(j=1;j<=n;j++)\n\t\t{\tif(dis[j]>dis[k]+f[k][j])\n\t\t\t\tdis[j]=dis[k]+f[k][j];}\n\t}\n\tcout<<dis[n]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1538648381,
        "uid": 61228,
        "name": "zdx1031705564",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u53ef\u4ee5\u4f7f\u7528\u88f8\u7684\u8fea\u6770\u65af\u7279\u62c9+\u90bb\u63a5\u77e9\u9635\u6c34\u8fc7\uff0c\u4e5f\u53ef\u4ee5\u7528\u90bb\u63a5\u8868SPFA\u8fc7\u3002\u5728\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u65b0\u7684\u65b9\u6cd5\uff1a\n\n# **\u524d\u5411\u661f**\uff08\u4e0d\u662f\u94fe\u5f0f\u7684\uff09\n\n\u6240\u8c13\u524d\u5411\u661f\uff0c\u5c31\u662f\u4e00\u4e2a\u8fb9\u96c6\u6570\u7ec4\u5728\u8bfb\u5165\u5b8c\u4e4b\u540e\uff0c\u518d\u8fdb\u884c\u4e00\u6b21\u6392\u5e8f\uff0c\u4f7f\u5f97\u540c\u4e00\u4e2a\u9876\u70b9\u7684\u51fa\u8fb9\u90fd\u653e\u5728\u4e00\u5757\uff0c\u65b9\u4fbf\u904d\u5386\u3002\u5b9e\u73b0\u8d77\u6765\u8f83\u4e4b\u90bb\u63a5\u8868\u7b80\u5355\u5f88\u591a\uff08\u6bd5\u7adf\u4e0d\u7528\u6307\u9488\uff09\uff0c\u4f46\u6548\u7387\u8f83\u4f4e\uff08\u9700\u8981\u4e00\u4e2asort\uff08n log n\uff09\u7684\u590d\u6742\u5ea6\uff09\n\n\n\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u8fdb\u884cSPFA\u4e86\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u6570\u636e\u8303\u56f4\u4e0d\u5927\u7684\u9898\u76ee\u800c\u8a00\uff0c\u524d\u5411\u661f\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node//\u8fb9\u7ed3\u6784\u4f53\n{\n    int from;\n    int to;\n    int dist;\n};\nlong long dist[10005];//\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\nint head[10005],len[10005],n,m,s,num;//head\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7b2c\u4e00\u6761\u51fa\u8fb9\u7684\u4f4d\u7f6e\uff0clen\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u6709\u51e0\u6761\u51fa\u8fb9\nbool vis[10005];\nnode edge[3125000];//\u4ece\u697c\u4e0adalao\u4eec\u7684\u7a0b\u5e8f\u91cc\u770b\u5230\u7684\u7384\u5b66\u6570\u636e\u8303\u56f4\nqueue<int>team;\nvoid addedge(int x,int y,int z)\n{\n    num++;\n    len[x]++;\n    edge[num].from=x;\n    edge[num].to=y;\n    edge[num].dist=z;\n}\nbool cmp(node a,node b)\n{\n    if ((a.from==b.from)&&(a.to==b.to)) return a.dist<b.dist;//\u5982\u679c\u8d77\u70b9\u7ec8\u70b9\u90fd\u76f8\u540c\uff0c\u5c31\u6bd4\u8f83\u6743\u91cd\n    if (a.from==b.from) return a.to<b.to;//\u8d77\u70b9\u76f8\u540c\u6bd4\u8f83\u7ec8\u70b9\n    return a.from<b.from;//\u6bd4\u8f83\u8d77\u70b9\n}\nint main()\n{\n    memset(head,-1,sizeof(head));\n    memset(len,0,sizeof(len));\n    memset(vis,false,sizeof(vis));\n    memset(dist,0x3f,sizeof(dist));\n    cin>>n>>m;\n    s=1;\n    num=0;\n    for(int i=0;i<m;i++)\n    {\n        int a,b,c;\n        cin>>a>>b>>c;\n        addedge(a,b,c);\n        addedge(b,a,c);//\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u52a0\u4e24\u6b21\n    }\n    sort(edge+1,edge+num+1,cmp);\n    for(int i=1;i<=num;i++)\n    {\n        if (edge[i].from!=edge[i-1].from) head[edge[i].from]=i;\n    }\n    dist[s]=0;\n    team.push(s);\n    vis[s]=true;\n    while(!team.empty())\n    {\n        int q=team.front();\n        for(int i=head[q];i<head[q]+len[q];i++)\n        {\n            if (dist[edge[i].to]>dist[edge[i].from]+edge[i].dist)\n            {\n                dist[edge[i].to]=dist[edge[i].from]+edge[i].dist;\n                if(!vis[edge[i].to])\n                {\n                    vis[edge[i].to]=true;\n                    team.push(edge[i].to);\n                }\n            }\n        }\n        vis[q]=false;\n        team.pop();\n    }//SPFA\uff0c\u4e0d\u518d\u8d58\u8ff0\n    cout<<dist[n];\n    return 0;//\u7ed3\u675f\u4e86\uff1f\n}\n```",
        "postTime": 1512881137,
        "uid": 41953,
        "name": "\u5188\u5d0e\u68a6\u7f8e",
        "ccfLevel": 0,
        "title": "P2299 Mzc\u4e0e\u4f53\u59d4\u7684\u4e89\u593a\u6218"
    },
    {
        "content": "\u5177\u4f53\u601d\u8def\u662f\u8fed\u4ee3\u3002\n\n\u6bcf\u6b21\u4f18\u5316\u4e24\u4e2a\u7ad9\u70b9\u4e4b\u95f4\u7684\u8def\u3002\u4e00\u76f4\u8fed\u4ee3\u76f4\u5230\u4e0d\u80fd\u518d\u4f18\u5316\u4e86\uff0c\u6700\u540e\u8f93\u51fa\u3002\n\n------------\n\u6211\u4eec\u62ff\n```\n3 3\n1 2 5\n2 3 3\n1 3 7\n```\n\u505a\u4f8b\u5b50\uff08\u662f\u4e0d\u662f\u6709\u70b9\u592a\u7b80\u5355\u4e86\n![](https://cdn.luogu.com.cn/upload/pic/60721.png)\n\n\u7167\u7740\u4ee3\u7801\u6765\u8bb2\n\n\u6211\u4eec\u53ea\u770b$a$\u6570\u7ec4\u7684\u524d\u4e09\u4e2a\uff0c\u73b0\u5728\u76ee\u524d\u662f$\\{0,\\infty,\\infty\\}$\n\n\u626b\u4e00\u904d\uff0c\u53d1\u73b0$1$\u5230$2$\u4e4b\u95f4\u53ef\u4ee5\u4f18\u5316\uff0c\u628a$ok$\u7f6e\u96f6\uff0c\u5e76\u4e14\u66f4\u65b0\u6570\u7ec4\uff1a$\\{0,5,\\infty\\}$\n\n\u7136\u540e$2$\u5230$3$\u4e4b\u95f4\u4e5f\u6709\u8def\uff0c\u6570\u7ec4\u53d8\u6210$\\{0,5,8\\}$\uff0c\u6ce8\u610f\u76ee\u524d\u662f$8$\uff0c\u56e0\u4e3a$1$\u5230$3$\u4e4b\u95f4\u6ca1\u6709\u8def\uff0c\u53ea\u80fd\u901a\u8fc7$1-2-3$\u7684\u8def\u7ebf\uff0c\u6240\u4ee5\u5c31\u662f$5+3=8$\u3002\n\n\u63a5\u4e0b\u6765\u770b\u5230$1$\u53ef\u4ee5\u53bb$3$\uff0c\u65f6\u95f4\u662f$7$\uff0c\u770b\u4e00\u4e0b$a$\u6570\u7ec4\u7684\u7b2c$3$\u4e2a\u662f$8$\uff0c\u6240\u4ee5$1$\u5230$3$\u4f18\u5316\u4e00\u4e0b$\\{0,5,7\\}$\n\n\u518d\u626b\u4e00\u6b21\uff0c\u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u53ef\u4ee5\u4f18\u5316\u7684\uff0c\u53d1\u73b0\u6ca1\u6709\uff0c\u6700\u540e\u8f93\u51fa$a[3]$\uff0c\u6240\u4ee5\u5c31\u662f$7$\u3002\n\n------------\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nint m,n,f[1000001],t[1000001],a[5005],y[1000001],ok;\n//f\u662f\u6765\u81ea\u7684\u505c\u7ad9\u70b9\uff0ct\u662f\u5230\u8fbe\u7684\u505c\u7ad9\u70b9\uff0cy\u662f\u65f6\u95f4\uff0ca[i]\u4ee3\u88681\u53f7\u7ad9\u70b9\u5230i\u53f7\u7ad9\u70b9\u6700\u77ed\u7684\u8def\u3002\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=2;i<=5000;i++)a[i]=1e7;//\u521d\u59cb\u53161\u5230\u6bcf\u4e2a\u505c\u7ad9\u70b9\u95f4\u9700\u8981\u65e0\u7a77\u5927\u7684\u65f6\u95f4\uff08\u7ad9\u70b9\u4e4b\u95f4\u6ca1\u6709\u8def\uff09\n    a[1]=0;//\u6ce8\u610f1\u53ef\u4ee5\u53bb\u5230\u672c\u8eab\u4e0d\u7528\u65f6\u95f4\n    for(int i=0;i<m;i++)scanf(\"%d%d%d\",&f[i],&t[i],&y[i]);\n    while(!ok){//\u4e00\u76f4\u8fed\u4ee3\u76f4\u5230\u4e0d\u80fd\u518d\u4f18\u5316\n        ok=true;//\u5047\u88c5\u4e0d\u80fd\u518d\u4f18\u5316\u4e86\n        for(int i=0;i<m;i++){//\u5faa\u73af\u628a\u6240\u6709\u7ad9\u70b9\u626b\u4e00\u904d\n            if(a[t[i]]>a[f[i]]+y[i]){a[t[i]]=a[f[i]]+y[i];ok=false;}//\u5982\u679c\u5230\u6700\u540e\u7684\u70b9\u8fd8\u6709\u66f4\u77ed\u7684\u8def\u5c31\u628aok\u7f6e\u4e3a0\u5e76\u4e14\u66f4\u65b0\u6570\u7ec4\n            if(a[f[i]]>a[t[i]]+y[i]){a[f[i]]=a[t[i]]+y[i];ok=false;}//\u56e0\u4e3a\u662f\u65e0\u5411\u7684\uff0c\u6240\u4ee5\u8fd4\u56de\u6765\u7684\u8def\u4e5f\u5f97\u4f18\u5316\n        }\n    }\n    printf(\"%d\",a[n]);//\u8f93\u51fa\u6700\u77ed\u7684\u65f6\u95f4\n}\n```",
        "postTime": 1554886705,
        "uid": 58546,
        "name": "CZQ_King",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "\u6700\u77ed\u8def\n\n\u6211\u7528\u4e86dijkstra\u548cspfa\u4e24\u79cd\u505a\u6cd5\uff1b\n\n\u4ee3\u7801\u6765\u6e90\uff1a\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b \u674e\u715c\u4e1c\u8457\n\ndijkstra+priority_queue+\u94fe\u5f0f\u524d\u5411\u661f\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nll ver[400010],edge[400010],head[400010],Next[400010],tot;\nll d[400010],v[400010],n,m;\npriority_queue<pair<ll,ll> > q;\n\ninline void addEdge(ll x,ll y,ll z){//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\n    ver[++tot]=y;//\u6307\u5411\u7684\u70b9\n    edge[tot]=z;//\u8fb9\u7684\u957f\u5ea6\n    Next[tot]=head[x];//\u4e0b\u4e00\u6761\u8fb9\n    head[x]=tot;//\u70b9\u6307\u5411\u7684\u7b2c\u4e00\u6761\u8fb9\n}\n\ninline void dijkstra(){\n    memset(d,0x3f,sizeof(d));\n    memset(v,0,sizeof(v));\n    d[1]=0;\n    q.push(make_pair(0,1));\n    while(!q.empty()){//\u5806\u4f18\u5316\n        ll x=q.top().second; q.pop();\n        if(v[x]) continue;\n        v[x]=1;\n        for(ll i=head[x]; i; i=Next[i]){//\u904d\u5386\u6bcf\u4e00\u6761\u8fb9\n            ll y=ver[i],z=edge[i];\n            if(d[y]>d[x]+z){\n                d[y]=d[x]+z;\n                q.push(make_pair(-d[y],y));\n                //\u8fd9\u91cc\u8981\u6ce8\u610f\u4e00\u4e0b\uff0c\u4f18\u5148\u961f\u5217\u662f\u5927\u6839\u5806\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u63a8\u8fdb\u8d1f\u6570\n                //\u5b9a\u4e49\u65f6\u53ef\u4e00\u8fd9\u6837\u5199\n                //priority_queue<pair<ll,ll>,vector<pair<ll,ll> >,greater<pair<ll,ll> > >\n                //\u8fd9\u6837\u5c31\u662f\u5c0f\u6839\u5806\u4e86\n                //\u5f53\u7136\u5165\u961f\u65f6\u76f4\u63a5\u5199\u4f5cq.push(make_pair(d[y],y);\n            }\n        }\n    }\n}\n\nint main(){\n    scanf(\"%lld %lld\",&n,&m);\n    while(m--){\n        ll x,y,z;\n        scanf(\"%lld %lld %lld\",&x,&y,&z);\n        addEdge(x,y,z);\n        addEdge(y,x,z);\n        //\u65e0\u5411\u56fe\u5b58\u53cc\u5411\u8fb9\n    }\n    dijkstra();\n    printf(\"%lld\",d[n]);\n    return 0;\n}\n```\n\nspfa+\u94fe\u5f0f\u524d\u5411\u661f\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nll n,m,s,t,d[400010],ver[400010],edge[400010],Next[400010],head[400010],tot;\nbool v[400010];\nqueue<ll> q;\n\ninline void addEdge(ll x,ll y,ll z){//\u540c\u4e0a\n    ver[++tot]=y;\n    edge[tot]=z;\n    Next[tot]=head[x];\n    head[x]=tot;\n}\n\ninline void spfa(){\n    memset(d,0x3f,sizeof(d));\n    memset(v,0,sizeof(v));\n    d[1]=0; v[1]=1;\n    q.push(1);\n    while(!q.empty()){\n        ll x=q.front(); q.pop();\n        v[x]=0;\n        for(ll i=head[x]; i; i=Next[i]){\n            ll y=ver[i],z=edge[i];\n            if(d[y]>d[x]+z){\n                d[y]=d[x]+z;\n                if(v[y]==0){//\u5f53\u8fd9\u4e2a\u70b9\u6ca1\u6709\u5728\u961f\u5217\u4e2d\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5165\u961f\n                    q.push(y);\n                    v[y]=1;\n                }\n            }\n        }\n    }\n}\n\nint main(){\n    scanf(\"%lld %lld\",&n,&m);\n    while(m--){\n        ll x,y,z;\n        scanf(\"%lld %lld %lld\",&x,&y,&z);\n        addEdge(x,y,z);\n        addEdge(y,x,z);\n        //\u540c\u4e0a\n    }\n    spfa();\n    printf(\"%lld\",d[n]);\n    return 0;\n}\n```",
        "postTime": 1541639491,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "# \u9898\u76ee\n## \u9898\u76ee\u63cf\u8ff0\n\nmzc\u5bb6\u5f88\u6709\u94b1\uff08\u5f00\u73a9\u7b11\uff09\uff0c\u4ed6\u5bb6\u6709n\u4e2a\u7537\u5bb6\u4e01\uff08\u505a\u8fc7\u524d\u4e09\u5f39\u7684\u90fd\u77e5\u9053\uff09\u3002\u4f46\u5982\u6b64\u4e4b\u591a\u7684\u7537\u5bb6\u4e01\u5438\u5f15\u6765\u4e86\u6211\u4eec\u7684\u4f53\u59d4\uff08\u77ee\u80d6\u5c0f\u4f19\uff09\uff0c\u4ed6\u8981\u6765\u4e0emzc\u4e89\u593a\u7537\u5bb6\u4e01\u3002\n\nmzc\u5f88\u751f\u6c14\uff0c\u51b3\u5b9a\u4e0e\u5176\u51b3\u6597\uff0c\u4f46cat\u7684\u4f53\u529b\u786e\u5b9e\u6709\u4e9b\u4e0d\u7a33\u5b9a\uff0c\u6240\u4ee5\u4ed6\u9700\u8981\u4f60\u6765\u5e2e\u4ed6\u8ba1\u7b97\u4e00\u4e0b\u6700\u77ed\u9700\u8981\u7684\u65f6\u95f4\u3002\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n### \u8f93\u5165\u683c\u5f0f\uff1a\n\n\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6570n,m.n\u8868\u793a\u6709n\u4e2a\u505c\u7559\u7ad9\uff0cm\u8868\u793a\u5171\u6709m\u6761\u8def\u3002\n\n\u4e4b\u540em\u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6570$a_i$ $b_i$ $c_i$\u200b\uff0c\u8868\u793a\u7b2c$a_i$\u4e2a\u505c\u7559\u7ad9\u5230\u7b2c$b_i$\u200b\u4e2a\u505c\u7559\u7ad9\u9700\u8981$c_i$\u7684\u65f6\u95f4\u3002\uff08\u65e0\u5411\uff09\n\n### \u8f93\u51fa\u683c\u5f0f\uff1a\n\n\u4e00\u884c\uff0c\u8f93\u51fa1\u5230n\u6700\u77ed\u65f6\u95f4\u3002\n\n# \u5206\u6790\uff1a\n\u6211\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u770b\u4e86\u4e00\u5927\u5806\u9898\u76ee\u8fd8\u4ee5\u4e3a\u662f\u4ec0\u4e48\u9ad8\u6df1\u7b97\u6cd5\u7ed3\u679c\u53ea\u662f\u6bd4\u6a21\u677f\u9898\u8fd8\u6a21\u677f\u7684\u5355\u6e90\u6700\u77ed\u8def\u3002\u3002\u3002\n\n\u5207\u5165\u6b63\u9898\uff0c\u8fd9\u9053\u9898\u770b\u51fa\u662f\u5355\u6e90\u6700\u77ed\u8def\u540e\u5c31\u53ef\u4ee5\u7528dijkstra\u6216\u8005spfa\u6765\u89e3\u51fa\u4e86\uff0c\u8003\u8651\u5230\u6ca1\u6709\u8d1f\u8fb9\u6743\uff0c\u53ef\u4ee5\u7528\u6700\u7b80\u5355\u4e5f\u6700\u7701\u65f6\u7684dijkstra\u6765\u5199\uff08spfa\u6211\u6015\u88ab\u5361\uff0c~~\u5176\u5b9e\u4e3b\u8981\u662fdijkstra\u5199\u719f\u4e86\u3002\u3002\u3002~~\uff09\u3002\u4e0b\u9762\u5c31\u770b\u4ee3\u7801\u3002\n\n# [\u4ee3\u7801](https://blog.csdn.net/kkkksc03/article/details/83151755)\n",
        "postTime": 1539862783,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e0d\u96be\uff0c\u53ef\u4ee5\u60f3\u5230\u7528dijkstra\u53ef\u8f7b\u677e\u8dd1\u8fc7\n\n\u4f46\u662f\u8981\u6ce8\u610f\u4e09\u4e2a\u5730\u65b9\uff1a\n\t\n1.\u6bcf\u4e00\u6761\u8fb9\u662f\u53cc\u5411\u7684\n\n2.\u53cc\u5411\u8fb9\u8981\u5f00\u53cc\u500d\u7a7a\u95f4\n\n3.\u5176\u5b9e\u8fd9\u79cd\u7a20\u5bc6\u56fe\u7528\u90bb\u63a5\u77e9\u9635\u4f1a\u66f4\u4f18\u79c0\n\n### \u518d\u7ed9\u51fadijkstra\u7684\u5806\u4f18\u5316\u7248\u672c\n\n\u6211\u91c7\u7528\u7684\u662f\u4f18\u5148\u961f\u5217\uff0cpair\u7684\u7b2c\u4e00\u7ef4\u4e3adis\u8def\u5f84\u7684\u76f8\u53cd\u6570\uff0c\u8fd9\n\n\u6837\u5c31\u4e0d\u7528\u5199\u6bd4\u8f83\u51fd\u6570\u4e86\n\n\n\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long \n#define N 500005\nusing namespace std;\nstruct Edge{\n\tint to,next,val;\n}E[N];\nint dis[N],n,m,x,y,z,tot,Head[N];\nbool vis[N];\nvoid addedge(int x,int y,int z){\n\tE[++tot]={y,Head[x],z};\n\tHead[x]=tot;\n}\nvoid SPFA(){\n\tpriority_queue<pair<int,int> >q;//\u5927\u6839\u5806\uff08\u4f18\u5148\u961f\u5217\uff09\uff0c\u7b2c\u4e8c\u7ef4\u4e3a\u8282\u70b9\u7f16\u53f7 \n\tfor (int i=1;i<=N-2;i++) dis[i]=1023456789;//\u8def\u5f84\u957f\u5ea6 \n\tmemset(vis,false,sizeof(vis));//\u6709\u6ca1\u6709\u8bbf\u95ee\u8fc7 \n\tdis[1]=0;\n\tq.push(make_pair(0,1));\n\twhile (q.size()){\n\t\tint ver=q.top().second;\n\t\tq.pop();\n\t\tif (vis[ver]) continue;\n\t\tvis[ver]=true;\n\t\tfor (int i=Head[ver];i;i=E[i].next){\n\t\t\tif (dis[E[i].to]>dis[ver]+E[i].val){//\u4e09\u89d2\u5f62\u6cd5\u5219 \n\t\t\t\tdis[E[i].to]=dis[ver]+E[i].val;\n\t\t\t\tq.push(make_pair(-dis[E[i].to],E[i].to));\n\t\t\t}\n\t\t} \n\t}\n}\nmain(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor (int i=1;i<=m;i++){\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\taddedge(x,y,z);//\u6dfb\u52a0\u53cc\u5411\u8fb9\n\t\taddedge(y,x,z);\n\t}\n\tSPFA();\n\tprintf(\"%lld\\n\",dis[n]);\n\treturn 0;\n}\n```",
        "postTime": 1534160798,
        "uid": 21267,
        "name": "titititing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "\u597d\u5427\u3002\u3002\u3002\u7adf\u7136\u6ca1\u4eba\u5199\u94fe\u5f0f\u524d\u5411\u661f\u7684\u9898\u89e3\uff0c\u90a3\u6211\u6765\u4e00\u53d1\u5427\n\u94fe\u5f0f\u524d\u5411\u661f\u8981\u5feb\u4e00\u70b9\n\u800c\u4e14\u6ca1\u5fc5\u8981\u5224\u91cd\n```cpp\n#include<bits/stdc++.h> //\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nconst int N = 200100;\nstruct Node{ // \u7ed3\u6784\u4f53\n\tint ne;\n\tint to;\n\tint w;\n}e[N<<1];\nint head[N],dis[N];\nbool vis[N];\nint n,m,x,y,val,cnt,ans;\nvoid init() // \u521d\u59cb\u5316\u51fd\u6570\n{\n\tmemset(head,-1,sizeof(head));\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tcnt = 0;\n}\nvoid add(int u,int v,int val) // \u52a0\u8fb9\n{\n\te[cnt].to = v;\n\te[cnt].w = val;\n\te[cnt].ne = head[u];\n\thead[u] = cnt ++;\n}\nvoid SPFA()\n{\n\tqueue<int>q;\n\tq.push(1);\n\tdis[1] = 0;\n\tvis[1] = 1;\n\twhile(!q.empty())\n\t{\n\t\tint k = q.front();\n\t\tq.pop();\n\t\tfor(int i=head[k];~i;i=e[i].ne)\n\t\t{\n\t\t\tint t = e[i].to;\n\t\t\tif(dis[t] > dis[k] + e[i].w)\n\t\t\t{\n\t\t\t\tdis[t] = dis[k] + e[i].w;\n\t\t\t\tif(!vis[t])\n\t\t\t\t{\n\t\t\t\t\tq.push(t);\n\t\t\t\t\tvis[t] = 1;\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t\tvis[k] = 0;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tinit();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&val);\n\t\tadd(x,y,val);\n\t\tadd(y,x,val);\n\t}\n\tSPFA();\n\tprintf(\"%d\\n\",dis[n]);\n\treturn 0;\n}\n```\n\u5bf9\u4e8e\u4e0d\u7406\u89e3\u94fe\u5f0f\u524d\u5411\u661f\u7684\u5b69\u7eb8\uff0c\u8fd9\u7bc7\u535a\u5ba2\u4e0d\u9519\u7684\n\n[\u6df1\u5ea6\u7406\u89e3\u94fe\u5f0f\u524d\u5411\u661f](https://blog.csdn.net/acdreamers/article/details/16902023)",
        "postTime": 1524221340,
        "uid": 20625,
        "name": "flipped",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "\u4e00\u9053\u4f9b\u56fe\u8bba\u521d\u5b66\u8005\u7ec3\u4e60\u7684\u6a21\u677f\u9898\uff0c\u53ef\u4ee5\u7528spfa+\u90bb\u63a5\u8868\u6253\u8fc7\uff08\u8c8c\u4f3c\u90bb\u63a5\u77e9\u9635\u4e5f\u884c\uff1f\uff1f\uff09\uff0c\u552f\u4e00\u8981\u6ce8\u610f\u7684\u5c31\u662f\u6570\u636e\u8303\u56f4\u3002\u5f00\u5c0f\u4e86\u4f1a80\u5206\n\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define inf 1e9; \nusing namespace std;\nconst int maxn=10010;\nconst int maxm=1000010;\nint head[maxn],nnext[maxm];\nint to[maxm],length[maxm];\nint tot;\nint dis[maxn];\nbool b[maxn];\nint team[maxn];\nvoid add(int x,int y,int l)\n{\n\ttot++;\n\tnnext[tot]=head[x];\n\thead[x]=tot;\n\tto[tot]=y;\n\tlength[tot]=l;\n}\n\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t}\t\n\t\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdis[i]=inf;\n\t}dis[1]=0;\n\t\n\tint s=0,t=0;\n\tteam[t]=1;\n\tt++;\n\tb[1]=true;\n\t\n\twhile(s!=t)\n\t{\n\t\tint now=team[s];\n\t\ts++;\n\t\ts%=n;\n\t\tb[now]=false;\n\t\tfor(int i=head[now];i;i=nnext[i])\n\t\t{\n\t\t\tint x=to[i];\n\t\t\tif(dis[x]>dis[now]+length[i])\n\t\t\t{\n\t\t\t\tdis[x]=dis[now]+length[i];\n\t\t\t\tif(b[x]==false)\n\t\t\t\t{\n\t\t\t\t\tteam[t]=x;\n\t\t\t\t\tt++;\n\t\t\t\t\tt%=n;\n\t\t\t\t\tb[x]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprintf(\"%d\",dis[n]);\n\treturn 0;\n} \n```\n",
        "postTime": 1520509337,
        "uid": 49758,
        "name": "\u53cb\u5229\u5948\u7eea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "~~Bellman\\_ford\u8fd9\u4e48\u597d\u80cc\u4e3a\u5565\u6ca1\u4eba\u5199\u8fd9\u4e2a\u5462~~\n\n\u53e6\u5916\u5410\u69fd\u4e00\u6ce2\u9898\u9762\uff0c\u8be5\u8bf4\u7684\u4e00\u70b9\u90fd\u4e0d\u6e05\u695a\\_(:\u0437\u309d\u2220)\\_\n\n\u5404\u79cd\u6700\u77ed\u8def\u7b97\u6cd5\u7684\u6838\u5fc3\u90fd\u5728\u4e8e\u4e00\u4e2a\u57fa\u672c\u4e8b\u5b9e\uff1a\n\n\u6709\u4e00\u6761\u8fb9\uff1a\u5b58\u5728 **dis[e.u]+e.w<dis[e.v]** \u8fd9\u6837\u7684\u4e00\u4e2a\u5173\u7cfb\uff0c\u7136\u540e\u6211\u4eec\u66f4\u65b0\u8fb9\u7684\u957f\u5ea6\u2014\u2014\u6211\u4eec\u79f0\u8fd9\u4e2a\u64cd\u4f5c\u53eb\u505a\u677e\u5f1b\n\n\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u677e\u5f1bnm\u6b21\uff0c\u8fd9\u4e5f\u6b63\u662f\u6734\u7d20bellman\u2014ford\u7684\u590d\u6742\u5ea6\u3002\n\n\u4f46\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2abool\u8bb0\u5f55\u201c\u662f\u5426\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\u201d\u5c31\u53ef\u4ee5\u6392\u9664\u5197\u4f59\u65e0\u6548\u7684\u677e\u5f1b\u64cd\u4f5c\u4e86\u2014\u2014\u53d1\u73b0\u6ca1\u6709\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\u540ebreak\uff1b\n\n###\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxm=2500*2500+10,maxn=2500+10;\n//\u6309\u7167\u7a20\u5bc6\u56fe\u4e3e\u8fb9\uff0c\u4e0d\u4f1a\u8d85\u5185\u5b58 \nint u[maxm],v[maxm],w[maxm];\nint dis[maxn];\nint n,m;\nint main(){\n    memset(dis,0x3f,sizeof(dis));\n    //\u521d\u59cb\u5316\u8def\u957f\u4e3a\u65e0\u7a77\u5927 \n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n        scanf(\"%d%d%d\",&u[i],&v[i],&w[i]);\n    int k=n-1;\n    dis[1]=0;\n    //\u8d77\u70b9->\u8d77\u70b9\u7684\u8ddd\u79bb\u4e3a0 \n    while(k--){\n        bool if_los=false;\n        for(int i=1;i<=m;i++){\n            int &from=u[i],&to=v[i],&cost=w[i];\n            if(dis[to]>dis[from]+cost){\n                dis[to]=dis[from]+cost;\n                if_los=true;\n            }\n            if(dis[from]>dis[to]+cost){\n                dis[from]=dis[to]+cost;\n                if_los=true;\n            }\n        }\n        if(!if_los) break;    \n        //\u5982\u679c\u6ca1\u6709\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\uff0c\u90a3\u4e48\u6700\u77ed\u8def\u5df2\u7ecf\u6c42\u89e3\u5b8c\u6bd5    \n    }\n    cout<<dis[n];\n    return 0;\n}\n```",
        "postTime": 1515421024,
        "uid": 38283,
        "name": "Dog_Two",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "Dijkstra+\u5806\u4f18\u5316\n\n\u4f7f\u7528\u52a8\u6001\u6570\u7ec4\u5b58\u50a8\u8fb9\u53ca\u7f16\u53f7\n\n\u7f16\u5199\u96be\u5ea6\u6bd4\u90bb\u63a5\u77e9\u9635\u7a0d\u5927\u4f46\u662f\u8dd1\u7684\u6bd4\u90bb\u63a5\u77e9\u9635\u5feb\n\n\uff08\u9644\u4e0a\u8bfb\u5165\u4f18\u5316\uff1a\u76ee\u524d\u6536\u96c6\u5230\u6700\u5feb\u7684\u8bfb\u5165\u4f18\u5316\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<queue>\n#include<cctype>\nusing namespace std;\nstruct edge{\n    int from,to,dist;\n};\nstruct data{\n    int d,u;   //\u5230\u8fbe \u7f16\u53f7\u4e3au\u7684\u70b9 \u7684\u6700\u77ed\u8def\u7a0b\u4e3ad\n    bool operator < (const data &tmp) const{\n        return d>tmp.d;\n    }    //\u81ea\u5b9a\u4e49\u5806\n};\nint d[2502];\nvector <edge> ed;\nvector <int> g[2502];    //\u5b58\u8fb9\u4ee5\u53ca\u7f16\u53f7\npriority_queue <data> h;\ninline int readint()  //\u8bfb\u5165\u4f18\u5316\n{\n    char c=getchar(); int x=0;\n    while(!isdigit(c)) c=getchar();\n    while(isdigit(c))\n    {\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return x;\n}\nint main()\n{\n    memset(d,127/3,sizeof(d));   //\u521d\u59cb\u5316\u4e3ainf \u5c0f\u5fc3\u6ea2\u51fa\n    int n,m,i,j,q1,q2,q3,u=-1;\n    n=readint(); m=readint();\n    for(i=1;i<=m;i++)\n    {\n        q1=readint(); q2=readint(); q3=readint();\n        ed.push_back((edge){q1,q2,q3});\n        g[q1].push_back(++u);\n        ed.push_back((edge){q2,q1,q3});\n        g[q2].push_back(++u);\n    } //\u5b58\u8fb9\uff08\u65e0\u5411\u56fe\u5b58\u4e24\u6b21\uff09\n    d[1]=0;\n    h.push((data){0,1});\n    while(!h.empty())\n    {\n        data x=h.top(); h.pop();\n        int u=x.u,len=g[u].size();\n        if(x.d!=d[u]) continue;\n        for(i=0;i<len;i++)\n        {\n            edge &e=ed[g[u][i]];\n            if(d[u]+e.dist<d[e.to])\n            {\n                d[e.to]=d[u]+e.dist;\n                h.push((data){d[e.to],e.to});\n            }\n        }\n    }\n    printf(\"%d\",d[n]);\n    return 0;\n}\n```",
        "postTime": 1506821656,
        "uid": 21679,
        "name": "\u9999\u98ce\u667a\u4e43",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "\u3010P\u515a\u798f\u5229\u65f6\u95f4\u3011\uff08\u7b2c26\u6ce2) ~~expected~~\n\n\u5404\u4f4d\u5927\u795e\u7528SPFA\u6253\u51fa\u4e00\u6ce2\u5feb\u901f\u7684SPFA\u7684\u7a0b\u5e8f\n\n\u4e0b\u9762\u6709dijkstra+\u90bb\u63a5\u77e9\u9635 \u62ff\u5230AC\n\n\u6211\u5c31\u60f3\u8bf4\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u88f8\u7684dijkstra\u554a\uff01\uff01\uff01\n\n```cpp\nconst longlong=214748364;\n      maxn=5000;\nvar i,j,n,m,s,x,y,z:longint;\n    d:array[1..maxn]of longint;\n    g:array[1..maxn,1..maxn]of longint;\nfunction min(a,b:longint):longint;//\u5c31\u662f\u5224\u65ad\u6700\u5c0f\u503c\u4fdd\u8bc1\u6570\u636e\u5927\u65f6\u8fd8\u80fd\u5f97\u5230\u6700\u4f18\u89e3\u7b54\nbegin\n if a>b then exit(b) else exit(a);\nend;\nprocedure dijkstra(v0:longint);//\u6a21\u677fdijkstra\nvar i,j,k,minn:longint;\n    u:array[1..maxn]of boolean;\nbegin\n fillchar(u,sizeof(u),false);\n for i:=1 to n do d[i]:=g[v0,i];\n d[v0]:=0;\n u[v0]:=true;\n for i:=1 to n do begin\n  minn:=longlong; k:=0;\n  for j:=1 to n do\n   if (not u[j])and(d[j]<minn) then begin\n    minn:=d[j]; k:=j;\n   end;\n  if k=0 then break;\n  u[k]:=true;\n  for j:=1 to n do\n   if (not u[j])and(g[k,j]+d[k]<d[j])then\n      d[j]:=g[k,j]+d[k];\n end;\nend;\nbegin\n readln(n,m);\n for i:=1 to n do\n  for j:=1 to n do\n   if i<>j then g[i,j]:=longlong  div 3//\u8d4b\u521d\u503c\uff0c\u5982\u679c\u4e0ddiv 3 \u53ef\u80fd\u4f1a\u7206~~\n   else g[i,j]:=0;\n for i:=1 to m do begin\n  readln(x,y,z);\n  g[x,y]:=min(g[x,y],z);\n  g[y,x]:=g[x,y];//\u8fd9\u91cc\u662f\u53cc\u5411\u56fe~~\u5426\u5219\u5475\u5475\u5475~~\n end;\n dijkstra(1);\n writeln(d[n]);\nend.\n```\n##\u5751\u70b9\u5168\u89e3\u6790\n1\u3001\u7a7a\u95f42500^2=6250000 \u8fd9\u4e48\u591a\u4e2alongint \u5c31\u662f 25,000,000 B= 23MB \u6ca1\u6709\u70b8\u7a7a\u95f4\n\n2\u3001\u65f6\u95f4O(2500^2)\u65f6\u95f4\u5c0f\u4e8e1s\n\n3\u3001\u56fe\u662f**\u65e0\u5411\u56fe**\uff01\uff01\uff01\u5426\u5219\u720630\uff01\uff01\uff01\n\n#\u6240\u4ee5\u8981\u4ed4\u7ec6\uff01\uff01\uff01\n",
        "postTime": 1488271803,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u7adf\u7136\u6ca1\u6709SPFA\u2026\u2026\n\nSPFA\u961f\u5f00\u7684\u8db3\u591f\u5927\u5c31\u53ef\u4ee5\u4e86\u2026\u2026\n\n\u4f46\u662f\u2026\u2026\u677f\u5b50\u8fd8\u662f\u4e00\u6837\u7684\u2026\u2026\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,m,x,y,z,op,head[50009],next[50009],dis[50009],len[50009],v[50009],l,r,team[50009],pd[50009],u,v1,e,out,fh;\nchar cc;\nint read()//\u8bfb\u5165\u4f18\u5316\n{\n    out=0,fh=1,cc=getchar();\n    if(cc=='-'){fh=-1;}\n    while(cc>'9'||cc<'0'){cc=getchar();}\n    while(cc>='0'&&cc<='9')\n    {\n        out=out*10+cc-'0',\n        cc=getchar();\n    }\n    return out*fh;\n}\nvoid lt(int x,int y,int z)//\u5355\u5411\u8054\u901a\n{\n    op++,v[op]=y;\n    next[op]=head[x],head[x]=op,len[op]=z;\n    return;\n}\nvoid SPFA(int s)//SPFA\u2026\u2026\n{\n    for(int i=1;i<=50000;i++){dis[i]=23333333;}\n    memset(team,0,sizeof(team));\n    memset(pd,0,sizeof(pd));\n    l=0,r=1,team[1]=s,pd[s]=1,dis[s]=0;\n    while(l!=r)\n    {\n        l=(l+1)%50000,u=team[l],pd[u]=0,e=head[u];\n        while(e!=0)\n        {\n            v1=v[e];\n            if(dis[v1]>dis[u]+len[e])\n            {\n                dis[v1]=dis[u]+len[e];\n                if(!pd[v1])\n                {\n                    r=(r+1)%50000,\n                    team[r]=v1,\n                    pd[v1]=1;\n                }\n            }\n            e=next[e];\n        }\n    }\n    return;\n}\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=m;i++)\n    {\n        x=read(),y=read(),z=read();\n        lt(x,y,z);lt(y,x,z);//\u65e0\u5411\u56fe\n    }\n    SPFA(1);//\u4ece1\u5f00\u59cb\u8dd1SPFA\n    printf(\"%d\",dis[n]);\n    return 0;\n}\n```",
        "postTime": 1483750958,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "\u4ee3\u7801\u697c\u4e0a\u5df2\u7ecf\u7ed9\u51fa\u4e86\uff0c\u6211\u5c31\u4e0d\u518d\u8bf4\u4e86\u3002\n\n\u4e3b\u8981\u8bf4\u8bf4\u6211\u7684\u7ecf\u5386\u3002\n\n\u7b2c\u4e00\u6b21\uff1a10\u5206\uff0cDijkstra\u5f00\u59cb\u7684\u627e\u6700\u5c0f\u8ddd\u79bb\u7684\u70b9\u65f6 min\u53d8\u91cf \u5fd8\u8bb0\u6bcf\u6b21\u8d4b\u503c\u4e86\u3002\u52a0\u4e0a\uff1a\n\n\u00b7\u00b7\u00b7cpp\n\nmn = inf;\n\n\u00b7\u00b7\u00b7\n\u5c31\u597d\u4e86\n\n\u7b2c\u4e8c~ \u4e94\u6b21\uff1a40\u5206\uff0c\u6ce8\u610f\uff0c\u53ef\u80fd\u6709\u91cd\u8fb9\u3002\u697c\u4e0a\u8bf4\u4f3c\u4e4e\u6ca1\u5fc5\u8981\uff0c\u4f46\u7ed3\u679c\u662f\u5f88\u6709\u5fc5\u8981\u7684\u54e6\uff01\n\n\u5373\u8d4b\u503c\u8bed\u53e5\u9700\u8981\u53d8\u6210\uff1a\n\n\u00b7\u00b7\u00b7cpp\n\ngraph[x][y] = graph[y][x] = mnn(graph[x][y], z);         // mnn() \u5c31\u662f min() \u51fd\u6570\uff0c\u4e3a\u4e86\u907f\u514d\u4e0eSTL\u7684\u51fd\u6570\u51b2\u7a81\u3002\n\n\u00b7\u00b7\u00b7\n\u7b2c\u516d\u6b21\uff1aAC\u3002\n\n##\u4e00\u5b9a\u8981\u6ce8\u610f\u7ec6\u8282\uff01\uff01\n",
        "postTime": 1480770654,
        "uid": 17170,
        "name": "Deny_\u5c0f\u7530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "******\u88f8\u7684\u6700\u77ed\u8def******\n\n- \u975e\u5e38\u9002\u5408\u7ec3\u624b\n\n- \u63d0\u4f9b\u4e00\u4e2ac++\u7684dijkstra\n\n- \u6700\u77ed\u8def\u52a0\u90bb\u63a5\u77e9\u9635\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint a[2501][2501],vis[10001],dis[10001];\nint main()\n{\n    memset(a,0x7f,sizeof(a));\n    int n,m;\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        int x,y,z;\n        cin>>x>>y>>z;\n        if(z<a[x][y])          //\u5224\u91cd\uff0c\u8c8c\u4f3c\u6b64\u9898\u4e0d\u9700\u8981\n        {\n            a[x][y]=z;       //**\u65e0\u5411\u56fe**\n            a[y][x]=z;\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        dis[i]=a[1][i];         //\u521d\u59cb\u5316\n    }\n    dis[1]=0;\n    for(int i=1;i<=n;i++)   //\u5f00\u59cbdijkstra\u7b97\u6cd5\n    {\n        int k=0;\n        int minn=0x7fffff;\n        for(int j=1;j<=n;j++)\n        {\n            if(vis[j]==0&&dis[j]<minn)\n            {\n                minn=dis[j];\n                k=j;\n            }\n        }\n        if(k==0) break;\n        vis[k]=1;\n        for(int j=1;j<=n;j++)\n        {\n            if(dis[k]+a[k][j]<dis[j]) dis[j]=dis[k]+a[k][j];\n        }\n    }\n    cout<<dis[n];\n    return 0;\n}\n```",
        "postTime": 1479043421,
        "uid": 18441,
        "name": "Drug__Lover",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6c42\u70b91\u81f3\u70b9n\u7684\u6700\u77ed\u8def\u3002\n\n\u6700\u77ed\u8def\u6a21\u677f\u3002\n\n\u6570\u636e\u8303\u56f4\u8fd8\u5f88\u5c0f\u3002\n\n\u88f8\u7684Dijkstra+\u90bb\u63a5\u77e9\u9635\u5c31\u8fc7\u4e86\u3002\n\n\u9644pascal\u4ee3\u7801\uff1a\n\n```cpp\nvar map:array [1..2500,1..2500] of longint;//\u90bb\u63a5\u77e9\u9635\nf:array [1..2500] of longint;\nb:array [1..2500] of boolean;\nmin,minat,x,y,z,n,m,i,j:longint;\nbegin\n  read(n,m);\n  fillchar(map,sizeof(map),127);\n  for i:=1 to m do\n  begin\n    read(x,y,z);\n    if map[x,y]>z then\n    begin\n      map[x,y]:=z;\n      map[y,x]:=z;\n    end;\n  end;\n  fillchar(f,sizeof(f),127);\n  f[1]:=0;\n  for i:=1 to n do\n  begin\n    min:=maxlongint;\n    for j:=1 to n do\n    if (f[j]<min) and not(b[j]) then//\u672a\u5230\u8fc7\u7684\u70b9\u4e2d\u6700\u5c0f\u7684\u3002\n    begin\n      min:=f[j];\n      minat:=j;\n    end;\n    b[minat]:=true;//\u6807\u8bb0\n    for j:=1 to n do\n    if f[minat]+map[minat,j]<f[j] then f[j]:=f[minat]+map[minat,j];//\u677e\u5f1b\n  end;\n  write(f[n]);\nend.\n```",
        "postTime": 1470629268,
        "uid": 13940,
        "name": "pupuvovovovovo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2299 \u3010Mzc\u548c\u4f53\u59d4\u7684\u4e89\u593a\u6218\u3011"
    }
]