[
    {
        "content": " \u7ebf\u6bb5\u6811\u5408\u5e76&\u5206\u88c2\n\n\u7f51\u4e0a\u627e\u7ebf\u6bb5\u6811\u5408\u5e76/\u5206\u88c2\u7684\u535a\u5ba2\uff0c\u8bb2\u5f97\u5f88\u6e05\u695a\u7684\u4e5f\u4e0d\u591a\uff0c\u67d0\u4e9b\u90e8\u5206\u53ea\u6709\u81ea\u5df1 yy \u4e00\u4e0b\u4e86\u3002\n\n\u524d\u7f6e\u829d\u58eb\uff1a\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u3002\n\n\u5728\u4ee5\u4e0b\u8ba8\u8bba\u4e2d\uff0c\u6211\u4eec\u8bbe\u503c\u57df\u90fd\u4e3a $[1,n]$ \u4e2d\u7684\u6574\u6570\u3002\n\n\u5148\u5b9a\u4e49\u4ee3\u7801\u4e2d\u7684\u4e00\u4e9b\u4e1c\u897f\uff1a\n\n$ch[i][0]$ \u8868\u793a $i$ \u7684\u5de6\u5b50\u7ed3\u70b9\uff0c$ch[i][1]$ \u8868\u793a $i$ \u7684\u53f3\u5b50\u7ed3\u70b9\uff0c$val[i]$ \u8868\u793a $i$ \u70b9\u7ef4\u62a4\u7684\u503c\uff08\u51fa\u73b0\u4e86\u591a\u5c11\u4e2a\u8be5\u503c\u57df\u4e2d\u7684\u6570\uff09\n\n------\n\n \u4e00\u3001\u7ebf\u6bb5\u6811\u5408\u5e76\n\n\u6709\u65f6\u6211\u4eec\u9700\u8981\u6574\u5408\u4e24\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u4fe1\u606f\uff0c\u8fd9\u4e2a\u6574\u5408\u7684\u8fc7\u7a0b\u79f0\u4e3a\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\u6211\u4eec\u4ee5\u6700\u7b80\u5355\u7684\u5408\u5e76\u4e3a\u4f8b\uff1a\u5c06\u4e24\u68f5\u6811\u76f8\u52a0\u3002\n\n\u4e24\u68f5\u6811\u5982\u4f55\u76f8\u52a0\u5462\uff1f\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\uff0c\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5f53\u524d\u533a\u95f4\u4e2d\u6570\u7684\u4e2a\u6570\uff0c\u800c\u6570\u7684\u4e2a\u6570\u662f\u53ef\u4ee5\u76f8\u52a0\u7684\uff0c\u8fd9\u4e2a\u5408\u5e76\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u628a\u4e24\u4e2a\u53ef\u91cd\u96c6\u5408\u5e76\uff0c\u5bf9\u5e94\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u53d1\u751f\u7684\u8fc7\u7a0b\u3002\u800c\u76f8\u52a0\u7684\u539f\u7406\u5f88\u7b80\u5355\uff0c\u4e24\u68f5\u540c\u6784\u7684\u7ebf\u6bb5\u6811\uff0c\u53ea\u9700\u8981\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u52a0\u5373\u53ef\uff0c\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lersbjt4.png)\n\n\u6ce8\u610f\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u4e0a\u67d0\u4e9b\u70b9\u662f\u7f3a\u7684\uff0c\u5176\u503c\u5f53\u7136\u662f $0$\u3002\n\n\u5982\u4f55\u5408\u5e76\u4e24\u68f5\u7ebf\u6bb5\u6811\u5462\uff1f\n\n\u66b4\u529b\u662f\u5f88\u7b80\u5355\u7684\uff0c\u6211\u4eec\u679a\u4e3e $1$ \u5230 $n$\uff0c\u5c06\u7b2c\u4e8c\u68f5\u6811\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u503c\u5728\u7b2c\u4e00\u68f5\u6811\u4e0a\u505a\u5355\u70b9\u4fee\u6539\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u4f46\u53ea\u80fd\u9002\u7528\u4e8e\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\uff08\u6bd4\u5982\u8bf4\u5982\u679c\u5e26\u4e86\u5206\u88c2\u6216\u8005\u4e00\u4e2a\u503c\u5728\u591a\u68f5\u6811\u4e0a\u51fa\u73b0\uff0c\u542f\u53d1\u5f0f\u5408\u5e76\u5c31\u6b47\u83dc\u4e86\uff09\u3002\n\n------\n\n\u800c\u6211\u4eec\u53ef\u4ee5\u9012\u5f52\u5904\u7406\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u8bbe\u6211\u4eec\u73b0\u5728\u8981\u5408\u5e76\u7684\u662f\u4ee5 $x,y$ \u4e3a\u6839\u7684\u4e24\u68f5\u5b50\u6811\uff0c\u8981\u786e\u4fdd\u5b83\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a\u5904\u4e8e\u540c\u4e00\u4f4d\u7f6e\uff08\u5373\u5b83\u4eec\u662f\u4e24\u68f5\u6811\u4e0a\u4ee3\u8868\u540c\u4e00\u533a\u95f4\u7684\u70b9\uff09\u3002\n\n\u5982\u679c $x,y$ \u5176\u4e2d\u4e00\u4e2a\u4e3a $0$ \uff08\u4e5f\u5c31\u662f\u67d0\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u6ca1\u6709\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u70b9\uff09\uff0c\u65e0\u9700\u5408\u5e76\uff0c\u8fd4\u56de\u53e6\u4e00\u4e2a\u975e $0$ \u7684\u70b9\u5373\u53ef\u3002\n\n\u5426\u5219\uff0c\u6211\u4eec\u5148\u5408\u5e76 $x,y$ \u7684\u5de6\u53f3\u5b50\u7ed3\u70b9\uff0c\u518d\u6839\u636e\u4e24\u5b50\u7ed3\u70b9\u7684\u4fe1\u606f\u6574\u5408\u5f97\u5230 $x,y$ \u5408\u5e76\u7684\u7ed3\u679c\u3002\n\n\u7ebf\u6bb5\u6811\u5408\u5e76\u4e00\u822c\u6709\u4e24\u79cd\u5199\u6cd5\uff1a\u65b0\u5efa\u7ed3\u70b9\u548c\u4e0d\u65b0\u5efa\u7ed3\u70b9\u3002\u4f46\u662f\u4e24\u8005\u539f\u7406\u662f\u4e00\u6837\u7684\u3002\n\n\u65b0\u5efa\u7ed3\u70b9\u7684\u5199\u6cd5\uff1a\n\n   \u65b0\u5efa\u4e00\u4e2a\u7ed3\u70b9 $p$ \u4f5c\u4e3a $x,y$ \u5408\u5e76\u7684\u7ed3\u679c\u3002\u5c06 $ch[x][0]$ \u548c $ch[y][0]$ \u7684\u5408\u5e76\u7ed3\u679c\u8bb0\u4e3a $sl$\uff0c$ch[x][1]$ \u548c $ch[y][1]$ \u7684\u5408\u5e76\u7ed3\u679c\u8bb0\u4e3a $sr$\uff0c\u4ee4 $sl,sr$ \u5206\u522b\u4e3a $p$ \u7684\u4e24\u4e2a\u5b50\u7ed3\u70b9\uff0c\u5bf9 $p$ \u505a\u4e00\u6b21 pushup\u200b \u5373\u53ef\u5f97\u5230\u7ed3\u679c\u3002\u6b64\u540e $x,y$ \u5c31\u6ca1\u6709\u7528\u7684\uff0c\u53ef\u4ee5\u56de\u6536\uff08\u8282\u7701\u7a7a\u95f4\u7684\u65b9\u6cd5\uff09\u3002\u4f46\u662f\u6709\u65f6 $x,y$ \u7684\u4fe1\u606f\u4e0d\u80fd\u4e22\uff0c\u8fd9\u65f6\u5c31\u4e0d\u80fd\u56de\u6536\u3002\n   \n   \uff08\u8fd9\u91cc\u539f\u5148\u7684\u4ee3\u7801\u6709\u70b9\u95ee\u9898\uff0c\u5148\u5220\u4e86\uff09\n\n\u4e0d\u65b0\u5efa\u7ed3\u70b9\u7684\u5199\u6cd5\uff1a\n\n   \u5982\u679c\u4e00\u4e2a\u70b9\u5408\u5e76\u5b8c\u5c31\u53ef\u4ee5\u6254\u6389\uff0c\u90a3\u8fd8\u53ef\u4ee5\u5199\u5f97\u66f4\u52a0\u7b80\u4fbf\uff0c\u76f4\u63a5\u5c06 $x$ \u4f5c\u4e3a\u5408\u5e76\u540e\u7684\u7ed3\u679c\uff0c\u5c06 $y$ \u7684\u503c\u52a0\u5230 $x$ \u4e0a\u5373\u53ef\uff08\u76f4\u63a5\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u52a0\uff09\uff0c\u751a\u81f3\u4e0d\u9700\u8981 pushup\uff0c\u4f46\u662f\u6ce8\u610f\uff0c\u5982\u679c $x=0$\uff0c\u8fd4\u56de\u7684\u662f $y$\uff0c\u6240\u4ee5\u6bd4\u8f83\u4fdd\u9669\u7684\u5199\u6cd5\u662f $x=merge(x,y)$\u3002\n\n   \u4e8b\u5b9e\u4e0a\u8fd9\u91cc\u6211\u4eec\u8fde\u5f53\u524d\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9 $l,r$ \u4e5f\u53ef\u4ee5\u53bb\u6389\uff0c\u56e0\u4e3a\u5230\u53f6\u7ed3\u70b9\u540e $ch[x][i]$ \u81ea\u7136\u662f $0$\uff0c\u81ea\u7136\u4f1a\u8fd4\u56de\u3002\n\n```cpp\nint merge (int x,int y) {\n   \tif (!x||!y) {return x+y;}     // \u53ea\u6709\u4e00\u8fb9\u6709\u70b9\uff0c\u4e0d\u7528\u5408\u5e76\n   \tval[x]+=val[y];               // \u4fe1\u606f\u6574\u5408\n   \tch[x][0]=merge(ch[x][0],ch[y][0]);\n   \tch[x][1]=merge(ch[x][1],ch[y][1]);\n   \tdel(y);                       // \u5783\u573e\u56de\u6536\n   \treturn x;\n}\n```\n\n\u8fd9\u4e1c\u897f\u770b\u7740\u5f88\u4e00\u822c\uff0c\u590d\u6742\u5ea6\u600e\u4e48\u6837\u5462\uff1f\n\n\u5355\u72ec\u8ba8\u8bba\u4e00\u6b21\u5408\u5e76\u7684\u590d\u6742\u5ea6\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\uff0c\u5982\u679c\u4e24\u68f5\u6811\u90fd\u662f\u6ee1\u7684\uff0c\u590d\u6742\u5ea6\u5c31\u5230 $O(n)$ \u4e86\uff0c\u6240\u4ee5\u4e00\u822c\u4ece\u5747\u644a\u89d2\u5ea6\u6765\u8ba8\u8bba\u3002\n\n------\n\n\u5982\u679c\u73b0\u5728\u6709 $m$ \u68f5\u7ebf\u6bb5\u6811\uff08\u6bcf\u68f5\u6811\u521d\u59cb\u53ea\u6709\u4e00\u4e2a\u4f4d\u7f6e\u6709\u6743\u503c\uff09\uff0c\u7ecf\u8fc7\u82e5\u5e72\u6b21\u5408\u5e76\u6700\u540e\u53d8\u6210 $1$ \u68f5\uff0c\u6b64\u8fc7\u7a0b\u7684\u590d\u6742\u5ea6\u662f\u591a\u5c11\u5462\uff1f\n\n\u4f8b\u9898\uff1a[P4556](https://www.luogu.com.cn/problem/P4556)\uff0c[P5298](https://www.luogu.com.cn/problem/P5298)\n\n\u4e0d\u8bf4\u5177\u4f53\u600e\u4e48\u505a\u4e86\uff0c\u8fd9\u4e9b\u9898\u90fd\u6709\u5f88\u5b8c\u6574\u7684\u9898\u89e3\uff0c\u6211\u5c31\u5206\u6790\u4e00\u4e0b\u590d\u6742\u5ea6\uff08\u8fd9\u4e9b\u9898\u90fd\u7b26\u5408\u4e0a\u9762\u63d0\u5230\u7684\u6a21\u578b\uff09\u3002\n\n\u4e00\u5f00\u59cb\u6709 $m$ \u68f5\u6811\uff0c\u53ea\u6709\u4e00\u4e2a\u4f4d\u7f6e\u6709\u6743\u503c\uff0c\u6240\u4ee5\u4e00\u68f5\u6811\u4e0a\u7ed3\u70b9\u6570\u91cf\u4e3a $O(\\log n)$\uff0c$m$ \u68f5\u6811\u7684\u7ed3\u70b9\u603b\u6570\u4e5f\u5c31\u662f $O(m\\log n)$\u3002\n\n\u5206\u6790\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u6bcf\u4e00\u6b21\u8fdb\u5165 merge \u51fd\u6570\uff0c\u8981\u4e48\u505c\u6b62\u9012\u5f52\uff0c\u8981\u4e48\u7ee7\u7eed\u9012\u5f52\u5e76\u6709\u4e00\u4e2a\u70b9\u88ab\u5783\u573e\u56de\u6536\u3002\u663e\u7136\u505c\u6b62\u9012\u5f52\u7684 merge \u6b21\u6570\u4e0e\u7ee7\u7eed\u9012\u5f52\u7684 merge \u6b21\u6570\u540c\u9636\uff08\u4e0d\u7ee7\u7eed\u9012\u5f52\u7684\u60c5\u51b5\u662f\u4ece\u9012\u5f52\u7684\u60c5\u51b5\u51fa\u6765\u7684\uff0c\u4e0d\u4f1a\u8d85\u8fc7\u5176\u4e24\u500d\u7684\u6570\u91cf\uff09\u3002\n\n\u56e0\u6b64\u6574\u4e2a\u8fc7\u7a0b\u7684\u590d\u6742\u5ea6\u5c31\u7b49\u4e8e\u7ee7\u7eed\u9012\u5f52\u7684 merge \u51fd\u6570\u8fdb\u5165\u6b21\u6570\u7684\u590d\u6742\u5ea6\uff08\u6bcf\u4e00\u6b21\u6267\u884c merge \u5728\u4e0d\u8003\u8651\u9012\u5f52\u65f6\u590d\u6742\u5ea6 $O(1)$\uff09\uff0c\u4e5f\u5c31\u7b49\u540c\u4e8e\u88ab\u5220\u9664\u7684\u7ed3\u70b9\u4e2a\u6570\uff0c\u662f\u4e0d\u8d85\u8fc7 $O(m\\log n)$ \u7684\uff08\u6709\u70b9\u50cf\u52bf\u80fd\u5206\u6790\uff1f\uff09\u3002\n\n\u6ce8\u610f\u590d\u6742\u5ea6\u672c\u8eab\u548c\u662f\u5426\u56de\u6536\u7ed3\u70b9\u6ca1\u6709\u5173\u7cfb\uff0c\u53ea\u662f\u501f\u4ee5\u5206\u6790\u800c\u5df2\u3002\n\n\u6240\u4ee5\u6574\u4e2a\u8fc7\u7a0b\u7684\u590d\u6742\u5ea6\u4e5f\u5c31\u662f $O(m\\log n)$\u3002\n\n\u4f46\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u590d\u6742\u5ea6\u4e0d\u603b\u662f\u5bf9\u7684\uff0c\u4e0d\u8fc7\u672c\u9898\u4e2d $1$ \u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u6211\u4e0d\u77e5\u9053\u662f\u5426\u662f\u5747\u644a $\\log n$ \u7684\uff0c\u5e0c\u671b\u6709\u4eba\u80fd\u8bc1\u660e/\u8bc1\u4f2a\u4e00\u4e0b\u3002\n\n------\n\n\u4e8c\u3001\u7ebf\u6bb5\u6811\u5206\u88c2\n\n\u5c06\u4e00\u4e2a\u53ef\u91cd\u96c6\u524d $k$ \u5c0f\u7684\u6570\u4e0e\u4e4b\u540e\u7684\u6570\u5206\u6210\u4e24\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u5c31\u8981\u88c2\u6210\u4e24\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\u5c06 $[1,3]$ \u548c $[4,4]$ \u5206\u5f00\uff08\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u76f4\u63a5\u7528\u6743\u503c\u63cf\u8ff0\u4e86\uff0c\u4e00\u822c\u662f\u6309\u7167\u7b2c $k$ \u5c0f\u7684\u4f4d\u7f6e\u6765\u7684\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/g0vypgpq.png)\n\n\u66b4\u529b\u5f53\u7136\u4e5f\u5f88\u7b80\u5355\uff0c\u627e\u5230\u7b2c $k$\uff0c\u540e\u9762\u7684\u503c\u65b0\u5efa\u4e00\u68f5\u6811\uff0c\u5728\u539f\u6811\u4e0a\u51cf\u6389\u5373\u53ef\u3002\n\n\u7136\u800c\u6211\u4eec\u53ef\u4ee5\u4eff\u7167 FHQ Treap \u7684\u5957\u8def\uff0c\u5b9e\u73b0 $O(\\log n)$ \u7684\u5206\u88c2\u3002\n\n\u8bbe\u6211\u4eec\u73b0\u5728\u8981\u5c06\u4ee5 $x$ \u4e3a\u6839\u7684\u6811\u5206\u88c2\u6210 $x,y$ \u4e3a\u6839\u7684\u8fd9\u4e24\u68f5\u6811\uff08$y$ \u672c\u6765\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u4f20\u5f15\u7528\uff09\uff0c\u4ee5\u7b2c $k$ \u5c0f\u4e3a\u754c\uff0c\u524d $k$ \u5c0f\u5728 $x$\uff0c\u4e4b\u540e\u7684\u5728 $y$\u3002\n\n\u9996\u5148\u770b $x$ \u7684\u5de6\u5b50\u6811\u7684\u503c $v$\uff0c\u5982\u679c $v<k$\uff0c\u90a3\u4e48\u5de6\u4fa7\u4f9d\u7136\u5f52 $x$\uff08\u4e0d\u9700\u8981\u5904\u7406\uff09\uff0c\u9012\u5f52\u53f3\u4fa7\u5373\u53ef\uff0c\u6ce8\u610f $k$ \u53d8\u6210\u4e86 $k-v$\u3002\n\n\u5982\u679c $v=k$\uff0c\u90a3\u4e48\u5de6\u8fb9\u5f52 $x$\uff0c\u53f3\u8fb9\u5f52 $y$ \u5373\u53ef\u3002\n\n\u5982\u679c $v>k$\uff0c\u90a3\u4e48\u53f3\u8fb9\u5f52 $y$\uff0c\u9012\u5f52\u5de6\u4fa7\u5373\u53ef\u3002\n\n\u770b\u5b8c\u7ed3\u6784\u540e\u770b\u6743\u503c\uff0c$x$ \u7684\u65b0\u6743\u503c\u5f53\u7136\u662f $k$\uff0c\u90a3\u4e48 $y$ \u7684\u6743\u503c\u4e5f\u5c31\u662f $x$ \u539f\u5148\u7684\u6743\u503c\u51cf\u53bb $k$ \u4e86\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c $v\\ge k$\uff0c\u90a3\u4e48 $y$ \u7684\u53f3\u5b50\u7ed3\u70b9\u90fd\u662f\u9700\u8981\u8d4b\u503c\u7684\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u76f4\u63a5\u5f52\u5230\u4e86\u540c\u4e00\u53e5\u91cc\uff08else \u6240\u5728\u7684\u90a3\u4e00\u53e5\uff09\uff1a\n\n```cpp\nvoid split (int x,int &y,ll k) {\n\ty=newnod();\n\tll v=val[ch[x][0]];\n\tif (k>v) {split(ch[x][1],ch[y][1],k-v);}\n\telse {swap(ch[x][1],ch[y][1]);}         // \u53f3\u5b50\u6811\u5f52 y\uff0cx \u7684\u53f3\u5b50\u6811\u53d8\u6210 0\n\tif (k<v) {split(ch[x][0],ch[y][0],k);}\n\tval[y]=val[x]-k;\n\tval[x]=k;\n\treturn;\n}\n```\n\n\u8fd9\u4e2a\u6bcf\u6b21\u53ea\u9012\u5f52\u4e00\u8fb9\uff0c\u590d\u6742\u5ea6\u662f $O(\\log n)$ \u6ca1\u5565\u95ee\u9898\u3002\n\n------\n\n\u4e09\u3001\u8fd9\u9053\u9898\n\n\u6bcf\u4e2a\u64cd\u4f5c\u5206\u522b\u6765\u770b\u3002\n\n\u5c06 $[x,y]$ \u5206\u88c2\u51fa\u6765\uff1a\u5148\u5206\u51fa $[1,x-1]$\uff0c\u518d\u4ece $[x,n]$ \u4e2d\u5206\u51fa $[x,y]$ \u548c $[y+1,n]$\uff0c\u6700\u540e\u628a $[1,x-1]$ \u548c $[y+1,n]$ \u5408\u5e76\u3002\u6211\u6ce8\u610f\u5230 std \u4e0d\u662f\u8fd9\u6837\u7684\uff0cstd \u7684\u5206\u88c2\u5199\u7684\u5c31\u662f\u5206\u88c2\u51fa\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u5728\u8fd9\u91cc\u7528\u4e86\u4e00\u6b21\u5408\u5e76\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u662f\u5bf9\u7684\uff0c\u7a0d\u540e\u4f1a\u8bc1\u660e\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\uff1b\n\n\u5c06 $t$ \u6811\u5408\u5e76\u5165 $p$ \u6811\uff1a\u5355\u6b21\u5408\u5e76\u5373\u53ef\uff0c\u4e0d\u786e\u5b9a\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u4e0d\u8d85\u8fc7 $2\\times 10^3$ \u6b21\u603b\u6ca1\u95ee\u9898\u7684\uff1b\n\n$p$ \u6811\u4e2d\u63d2\u5165 $a$ \u4e2a $q$\uff1a\u5355\u70b9\u4fee\u6539\uff0c\u590d\u6742\u5ea6 $O(\\log n)$\uff1b\n\n\u67e5\u8be2 $[x,y]$ \u4e2d\u6570\u7684\u4e2a\u6570\uff1a\u533a\u95f4\u6c42\u548c\uff0c\u590d\u6742\u5ea6 $O(\\log n)$\uff1b\n\n\u67e5\u8be2\u7b2c $k$ \u5c0f\uff1a\u7ecf\u5178\u64cd\u4f5c\uff0c\u590d\u6742\u5ea6 $O(\\log n)$\u3002\n\n\u6700\u540e\u8bf4\u4e00\u4e0b $0$ \u64cd\u4f5c\u7684\u590d\u6742\u5ea6\uff1a\n\n\u4e24\u6b21\u5206\u88c2\u662f $O(\\log n)$ \u6ca1\u95ee\u9898\uff0c\u4e3b\u8981\u770b\u5408\u5e76\u3002\u6ce8\u610f\u5408\u5e76\u7684\u4e24\u4e2a\u533a\u95f4\u6ca1\u6709\u4ea4\u96c6\uff0c\u6211\u4eec\u5c31\u770b\u4e00\u770b\u6bcf\u4e00\u5c42\u4f1a\u6d89\u53ca\u51e0\u4e2a\u70b9\u3002\n\n\u5bf9\u4e8e\u7b2c $1$ \u5c42\uff1a\u603b\u5171\u5c31 $1$ \u4e2a\u70b9...\n\n\u5bf9\u4e8e\u7b2c $i$ \u5c42\uff1a\u5982\u679c\u7b2c $i-1$ \u5c42\u53ea\u9012\u5f52\u4e0b\u6765 $1$ \u4e2a\u70b9\uff08\u8bbe\u4e3a $u$\uff09\uff0c\u518d\u8bbe $x$ \u548c $y$ \u4e3a $u$ \u7684\u5de6\u53f3\u5b50\u7ed3\u70b9\u3002\u5982\u679c\u524d\u4e00\u68f5\u6811\u5360\u4e86 $x,y$ \u4e24\u4e2a\u70b9\uff0c\u90a3\u4e48\u56e0\u4e3a\u540e\u4e00\u68f5\u6811\u5360\u7684\u533a\u95f4\u4e25\u683c\u5728\u524d\u4e00\u68f5\u6811\u4e4b\u540e\uff0c\u6240\u4ee5\u53ea\u4f1a\u5360 $y$\uff0c\u90a3\u4e48\u9700\u8981\u9012\u5f52\u7684\u53ea\u6709 $y$\uff0c\u53cd\u8fc7\u6765\u7684\u8bdd\u540c\u7406\u9700\u8981\u9012\u5f52\u7684\u53ea\u6709 $x$\uff0c\u6240\u4ee5\u7b2c $i$ \u5c42\u4e5f\u53ea\u9700\u8981\u9012\u5f52 $1$ \u4e2a\u70b9\u3002\n\n\u6bcf\u4e00\u5c42\u53ea\u5f80\u4e0b\u9012\u5f52\u4e00\u4e2a\u70b9\uff0c\u590d\u6742\u5ea6\u5c31\u662f $O(\\log n)$ \u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int MAXN=200010;\nint n,m,tot,cnt,seq=1,op,x,y,z,bac[MAXN<<5],ch[MAXN<<5][2],rt[MAXN];\nll val[MAXN<<5];\nint newnod () {return (cnt?bac[cnt--]:++tot);}\nvoid del (int p) {\n\tbac[++cnt]=p,ch[p][0]=ch[p][1]=val[p]=0;\n\treturn;\n}\nvoid modify (int &p,int l,int r,int pos,int v) {\n\tif (!p) {p=newnod();}\n\tval[p]+=v;\n\tif (l==r) {return;}\n\tint mid=(l+r)>>1;\n\tif (pos<=mid) {modify(ch[p][0],l,mid,pos,v);}\n\telse {modify(ch[p][1],mid+1,r,pos,v);}\n\treturn;\n}\nll query (int p,int l,int r,int xl,int xr) {\n\tif (xr<l||r<xl) {return 0;}\n\tif (xl<=l&&r<=xr) {return val[p];}\n\tint mid=(l+r)>>1;\n\treturn query(ch[p][0],l,mid,xl,xr)+query(ch[p][1],mid+1,r,xl,xr);\n}\nint kth (int p,int l,int r,int k) {\n\tif (l==r) {return l;}\n\tint mid=(l+r)>>1;\n\tif (val[ch[p][0]]>=k) {return kth(ch[p][0],l,mid,k);}\n\telse {return kth(ch[p][1],mid+1,r,k-val[ch[p][0]]);}\n}\nint merge (int x,int y) {\n\tif (!x||!y) {return x+y;}\n\tval[x]+=val[y];\n\tch[x][0]=merge(ch[x][0],ch[y][0]);\n\tch[x][1]=merge(ch[x][1],ch[y][1]);\n\tdel(y); \n\treturn x;\n}\nvoid split (int x,int &y,ll k) {\n\tif (x==0) {return;}\n\ty=newnod();\n\tll v=val[ch[x][0]];\n\tif (k>v) {split(ch[x][1],ch[y][1],k-v);}\n\telse {swap(ch[x][1],ch[y][1]);}\n\tif (k<v) {split(ch[x][0],ch[y][0],k);}\n\tval[y]=val[x]-k;\n\tval[x]=k;\n\treturn;\n}\nint main () {\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;i++) {\n\t\tscanf(\"%d\",&x);\n\t\tmodify(rt[1],1,n,i,x);\n\t}\n\tfor (int i=1;i<=m;i++) {\n\t\tscanf(\"%d\",&op);\n\t\tif (op==0) {\n\t\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\t\tll k1=query(rt[x],1,n,1,z),k2=query(rt[x],1,n,y,z);\n\t\t\tint tmp=0;\n\t\t\tsplit(rt[x],rt[++seq],k1-k2);\n\t\t\tsplit(rt[seq],tmp,k2);\n\t\t\trt[x]=merge(rt[x],tmp);\n\t\t} else if (op==1) {\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\trt[x]=merge(rt[x],rt[y]);\n\t\t} else if (op==2) {\n\t\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\t\tmodify(rt[x],1,n,z,y);\n\t\t} else if (op==3) {\n\t\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\t\tprintf(\"%lld\\n\",query(rt[x],1,n,y,z));\n\t\t} else if (op==4) {\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tif (val[rt[x]]<y) {printf(\"-1\\n\");continue;}\n\t\t\tprintf(\"%d\\n\",kth(rt[x],1,n,y));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1580025405,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6012 \u3010\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u88c2\u3011"
    },
    {
        "content": "## \u6d45\u8c08\u7ebf\u6bb5\u6811\u5206\u88c2 \n## $\\text{Part -1}$ \u76ee\u5f55\n- $\\text{Part 0}$ \u524d\u8a00\n- $\\text{Part 1}$ \u4ecb\u7ecd\n- $\\text{Part 2}$ \u5b9e\u73b0\n- $\\text{Part 3}$ \u5e94\u7528\n- $\\text{Part 4}$ \u540e\u8bb0\n- $\\text{Part 5}$ \u53c2\u8003\n\n## $\\text{Part 0}$ \u524d\u8a00\n- Q\uff1a\u6709\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u662f\u652f\u6301\u7528\u5408\u5e76&\u5206\u88c2\u67e5\u8be2\u7b54\u6848\u4fe1\u606f\u7684\u5462\uff1f\n- A\uff1a$\\text{fhq-Treap}$\n- Q\uff1a\u8fd8\u6709\u5417\uff1f\n- A\uff1a\u5f53\u7136\uff0c\u7ebf\u6bb5\u6811\u3002\n\n\u524d\u7f6e\u829d\u58eb\uff1a[\u6743\u503c\u7ebf\u6bb5\u6811](https://www.luogu.com.cn/blog/bfqaq/qian-tan-quan-zhi-xian-duan-shu)\u3001[\u7ebf\u6bb5\u6811\u5408\u5e76](https://www.luogu.com.cn/blog/styx-ferryman/xian-duan-shu-ge-bing-zong-ru-men-dao-fang-qi)\n\n\u7ea6\u5b9a\uff1a$val_x$ \u4e3a\u8282\u70b9 $x$ \u7684\u6743\u503c\uff0c $ls(x),rs(x)$ \u5206\u522b\u4e3a $x$ \u8282\u70b9\u7684\u5de6\u513f\u5b50\u3001\u53f3\u513f\u5b50\u3002\n\n$\\text{An Interesting Fact}$\uff1a$\\text{URL}$ \u4e2d\u7684 $\\text{segment}$ \u6253\u9519\u4e86\u3002\n## $\\text{Part 1}$ \u4ecb\u7ecd\n\u7ebf\u6bb5\u6811\u5206\u88c2\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f\u5c06\u7ebf\u6bb5\u6811\u5206\u88c2\u5f00\u3002\u4e3a\u4e86\u7ef4\u62a4\u7ebf\u6bb5\u6811\u5408\u5e76\u6240\u7ef4\u62a4\u7684\u53ef\u91cd\u96c6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6743\u503c\u7ebf\u6bb5\u6811\u4e2d\u524d $k$ \u5c0f\u7684\u4f4d\u7f6e\u548c\u5176\u4f59\u6570\u5206\u5728\u4e24\u9897\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u5177\u4f53\u600e\u4e48\u5206\u88c2\u5462\uff1f\u6211\u4eec\u6765\u770b\u4e00\u5f20\u56fe\uff1a\n\n![sum](https://cdn.luogu.com.cn/upload/image_hosting/77dv4pwn.png?x-oss-process=image/resize,m_lfit,h_170,w_225)![l](https://cdn.luogu.com.cn/upload/image_hosting/z08dbgcz.png?x-oss-process=image/resize,m_lfit,h_170,w_225)![right](https://cdn.luogu.com.cn/upload/image_hosting/a9fm6he1.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u6700\u5de6\u8fb9\u7684\u7ebf\u6bb5\u6811\u5373\u53ef\u6309 $[1,3]$ \u548c $[4,4]$ \u5206\u88c2\u6210\u53f3\u8fb9\u4e24\u9897\u7ebf\u6bb5\u6811\u3002\n\n\uff08wtcl \u4e0d\u4f1a\u753b\u6811\u8bf7\u8c05\u89e3\uff09\n## $\\text{Part 2}$ \u5b9e\u73b0\n\u600e\u4e48\u5b9e\u73b0\uff1f\n\n~~\u6211\u4f1a\u66b4\u529b $O(n)$\uff01~~\n\n\u56de\u987e $\\text{Part 0}$\uff0c\u6211\u4eec\u5c06\u7ebf\u6bb5\u6811\u5206\u88c2\u4e0e $\\text{fhq-Treap}$ \u5bf9\u6bd4\uff0c\u73b0\u5728\u6211\u4eec\u4e5f\u53ef\u4ee5\u53c2\u8003 $\\text{fhq-Treap}$ \u7684\u5206\u88c2\u65b9\u6cd5\u3002\n\n\u8003\u8651\u51fd\u6570 $\\text{split}(x,y,k)$ \u5206\u88c2\u7ebf\u6bb5\u6811\u4e0a\u4ee5 $x$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\uff0c\u53e6\u4e00\u9897\u7ebf\u6bb5\u6811\u4e3a $y$\uff0c\u5176\u4e2d\u5b9a\u4e49 $v=val_{ls(x)}$\u3002\n\n- $v<k$\uff0c\u5de6\u7aef\u4e0d\u9700\u8981\u4fee\u6539\uff0c\u76f4\u63a5\u6267\u884c $\\text{split}(rs(x),rs(y),k-v)$\u3002\n- $v=k$\uff0c\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u5de6\u5b50\u6811\u6b63\u597d\u5305\u542b\u524d $k$ \u4e2a\uff0c\u4e8e\u662f\u76f4\u63a5\u5c06\u53f3\u5b50\u6811\u5f52\u7ed9 $y$\uff0c\u5373${rs(y)=rs(x),rs(x)=0}$\u3002\n- $v>k$\uff0c\u53f3\u5b50\u6811\u5168\u90e8\u5927\u4e8e $k$\uff0c\u76f4\u63a5\u5f52\u7ed9 $y$\uff0c\u63a5\u7740\u9012\u5f52\u5de6\u5b50\u6811\uff0c\u6267\u884c $\\text{split}(ls(x),ls(y),k)$\u3002\n\n\u4ee3\u7801\u5f88\u597d\u5199\uff0c\u8d34\u4e00\u4e0b\uff1a\n```cpp\ninline void split(int x,int &y,ll k){\n\tif(!x) return ;\n\ty=newnode();\n\tll v=val[son[x][0]];\n\tif(k>v)\n\t\tsplit(son[x][1],son[y][1],k-v);\n\telse\n\t\tswap(son[x][1],son[y][1]);\n\tif(k<v)\n\t\tsplit(son[x][0],son[y][0],k);\n\tval[y]=val[x]-k;\n\tval[x]=k;\n}\n```\n\u6211\u4eec\u53d1\u73b0\u4e0a\u8ff0\u4e09\u79cd\u60c5\u51b5\u90fd\u662f\u6bcf\u5c42\u53ea\u9012\u5f52 $O(1)$ \u6b21\uff0c\u590d\u6742\u5ea6 $O(\\log n)$\u3002\n## $\\text{Part 3}$ \u5e94\u7528\n### \u4f8b1 P5494 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u88c2\n[$\\text{Link}$](https://www.luogu.com.cn/problem/P5494)\n\n\u7b80\u5316\u9898\u610f\uff1a\u7ef4\u62a4\u4e00\u4e9b\u53ef\u91cd\u96c6\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n- $\\text{cut}(p,x,y)$\uff0c\u5c06\u53ef\u91cd\u96c6 $p$ \u4e2d\u5728 $[x,y]$ \u8303\u56f4\u4e2d\u7684\u6570\u79fb\u52a8\u5230\u4e00\u4e2a\u65b0\u7684\u53ef\u91cd\u96c6\u4e2d\u3002\n- $\\text{copy}(p,t)$\uff0c\u5c06\u53ef\u91cd\u96c6 $t$ \u4e2d\u7684\u6570\u653e\u5165\u53ef\u91cd\u96c6 $p$ \u5e76\u5220\u9664 $t$\u3002\n- $\\text{insert}(p,x,q)$\uff0c\u5411\u53ef\u91cd\u96c6 $p$ \u4e2d\u653e\u5165 $x$ \u4e2a\u6570\u5b57 $q$\u3002\n- $\\text{query}(p,x,y)$\uff0c\u7edf\u8ba1\u53ef\u91cd\u96c6 $p$ \u4e2d\u5728 $[x,y]$ \u8303\u56f4\u4e2d\u7684\u6570\u7684\u4e2a\u6570\u3002\n- $\\text{queryk}(p,k)$\uff0c\u67e5\u8be2\u53ef\u91cd\u96c6 $p$ \u4e2d\u7b2c $k$ \u5c0f\u7684\u6570\u3002\n\n\u6bcf\u4e2a\u64cd\u4f5c\u5206\u6790\u4e00\u4e0b\uff1a\n\n$\\text{copy}$ \u53ef\u4ee5\u76f4\u63a5 $p=\\text{merge}(p,t)$\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u5408\u5e76\u7ebf\u6bb5\u6811\u3002\n\n$\\text{insert}$ \u53ef\u4ee5\u76f4\u63a5\u5728 $p$ \u4e2d\u5355\u70b9\u4fee\u6539\uff0c\u590d\u6742\u5ea6 $O(\\log n)$\u3002\n\n$\\text{query}$\uff0c\u76f4\u63a5\u533a\u95f4\u6c42\u548c\uff0c\u590d\u6742\u5ea6 $O(\\log n)$\u3002\n\n$\\text{queryk}$\uff0c\u6c42\u5168\u5c40\u7b2c $k$ \u5c0f\uff0c\u590d\u6742\u5ea6 $O(\\log n)$\u3002\n\n$\\text{cut}$\uff0c\u8003\u8651\u5c06 $[1,x-1],[x,y],[y+1,n]$ \u4e09\u6bb5 $\\text{split}$ \u51fa\u6765\uff0c\u5c06 $[1,x-1],[y+1,n]\\,\\,\\text{merge}$ \u56de\u53bb\u5373\u53ef\u3002\n\n\u7136\u540e\u662f\u8bc1\u4e00\u4e0b\u5408\u5e76\u7684\u590d\u6742\u5ea6\uff1a\n\n$\\text{insert}$ \u5728\u7ebf\u6bb5\u6811\u4e2d\u53ea\u4f1a\u65b0\u5efa $O(1)$ \u4e2a\u53f6\u5b50\uff0c\u5219\u5bf9\u4e8e\u4e24\u68f5\u6811\u5408\u5e76\u53ea\u4f1a\u9020\u6210 $O(\\log n)$ \u7684\u5f71\u54cd\uff0c\u5219\u603b\u7684\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\u3002\n\n\u5bf9\u4e8e $\\text{cut}$ \u64cd\u4f5c\uff0c\u5355\u6b21\u590d\u6742\u5ea6 $O(\\log n)$\uff0c\u5982\u679c\u5206\u88c2\u51fa\u6765 $x$ \u4e2a\u53f6\u7ed3\u70b9\uff0c\u5219\u51cf\u5c11\u4e86\u6b64\u540e $O(x\\log n)$ \u7684\u5408\u5e76\u590d\u6742\u5ea6\u3002\u5982\u679c\u5408\u5e76\u88ab\u5206\u88c2\u51fa\u6765\u7684\u590d\u6742\u5ea6\u589e\u52a0\u5219\u9700\u8981\u63d2\u5165\u91cd\u65b0\u8865\u5145\u53f6\u7ed3\u70b9\uff0c\u8f6c\u5316\u4e3a $\\text{insert}$ \u7684\u5f71\u54cd\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N=4e5+10;\nint n,m;\nstruct Segment_Tree{\n\tint son[N*20][2],rt[N],cnt,rtc=1;\n\tll val[N*20];\n\tint pool[N*20],delcnt;\n\t#define ls (son[rt][0])\n\t#define rs (son[rt][1])\n\tinline int newnode(){\n\t\treturn delcnt?pool[delcnt--]:++cnt;\n\t}\n\tinline void del(int rt){\n\t\tpool[++delcnt]=rt;\n\t\tls=rs=val[rt]=0;\n\t}\n\tinline void modify(int &rt,int l,int r,int p,int v){\n\t\tif(!rt)\n\t\t\trt=newnode();\n\t\tval[rt]+=v;\n\t\tif(l==r) return ;\n\t\tint mid=l+r>>1;\n\t\tif(p<=mid)\n\t\t\tmodify(ls,l,mid,p,v);\n\t\telse\n\t\t\tmodify(rs,mid+1,r,p,v);\n\t}\n\tinline ll query(int rt,int l,int r,int L,int R){\n\t\tif(R<l||r<L)\n\t\t\treturn 0;\n\t\tif(L<=l&&R>=r)\n\t\t\treturn val[rt];\n\t\tint mid=l+r>>1;\n\t\treturn query(ls,l,mid,L,R)+query(rs,mid+1,r,L,R);\n\t}\n\tinline int queryk(int rt,int l,int r,int v){\n\t\tif(l==r) return l;\n\t\tint mid=l+r>>1;\n\t\tif(val[ls]>=v)\n\t\t\treturn queryk(ls,l,mid,v);\n\t\telse\n\t\t\treturn queryk(rs,mid+1,r,v-val[ls]);\n\t}\n\tinline int merge(int a,int b){\n\t\tif(!a||!b) return a+b;\n\t\tval[a]+=val[b];\n\t\tson[a][0]=merge(son[a][0],son[b][0]);\n\t\tson[a][1]=merge(son[a][1],son[b][1]);\n\t\tdel(b);\n\t\treturn a;\n\t}\n\tinline void split(int x,int &y,ll k){\n    \tif(!x) return ;\n    \ty=newnode();\n    \tll v=val[son[x][0]];\n    \tif(k>v)\n    \t\tsplit(son[x][1],son[y][1],k-v);\n    \telse\n    \t\tswap(son[x][1],son[y][1]);\n    \tif(k<v)\n    \t\tsplit(son[x][0],son[y][0],k);\n    \tval[y]=val[x]-k;\n    \tval[x]=k;\n    }\n}t;\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++){\n\t\tint x=read();\n\t\tt.modify(t.rt[1],1,n,i,x);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint opt=read();\n\t\tswitch(opt){\n\t\t\tcase 0:{\n\t\t\t\tint x=read(),y=read(),z=read();\n\t\t\t\tll q1=t.query(t.rt[x],1,n,1,z),q2=t.query(t.rt[x],1,n,y,z);\n\t\t\t\tint a=0;\n\t\t\t\tt.split(t.rt[x],t.rt[++t.rtc],q1-q2);\n\t\t\t\tt.split(t.rt[t.rtc],a,q2);\n\t\t\t\tt.rt[x]=t.merge(t.rt[x],a);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 1:{\n\t\t\t\tint x=read(),y=read();\n\t\t\t\tt.rt[x]=t.merge(t.rt[x],t.rt[y]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2:{\n\t\t\t\tint x=read(),y=read(),z=read();\n\t\t\t\tt.modify(t.rt[x],1,n,z,y);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3:{\n\t\t\t\tint x=read(),y=read(),z=read();\n\t\t\t\twrite(t.query(t.rt[x],1,n,y,z));\n\t\t\t\tputc('\\n');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 4:{\n\t\t\t\tint x=read(),y=read();\n\t\t\t\tif(t.val[t.rt[x]]<y) write(-1);\n\t\t\t\telse write(t.queryk(t.rt[x],1,n,y));\n\t\t\t\tputc('\\n');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tflush();\n}\n```\n\uff08\u6211\u6240\u6709\u4ee3\u7801\u4e2d\u7684\u5feb\u8bfb\u5feb\u5199\u90fd\u5220\u6389\u4e86\uff0c\u9700\u8981\u7684\u53ef\u4ee5\u5728[$\\text{ P7809 }$](https://www.luogu.com.cn/problem/P7809)\u627e\u5230\u3002\uff09\n### \u4f8b2 P2824 [HEOI2016/TJOI2016]\u6392\u5e8f\n[$\\text{Link}$](https://www.luogu.com.cn/problem/P2824)\n\n\u7b80\u5316\u9898\u610f\uff1a\u7ef4\u62a4\u4e00\u4e2a $[1,n]$ \u7684\u6392\u5217\uff0c$m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u533a\u95f4\u5347\u5e8f\u6216\u8005\u964d\u5e8f\u6392\u5e8f\uff0c\u6700\u540e\u6c42\u4f4d\u7f6e $p$ \u4e0a\u7684\u6570\u3002\n\n\u8003\u8651\u6392\u5e8f\u4e4b\u540e\u5408\u5e76\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u7b80\u5355\u5408\u5e76\u3002\n\n\u8003\u8651\u7528\u73c2\u6735\u8389\u6811\u7ef4\u62a4\u6709\u5e8f\u533a\u95f4\uff0c$\\text{sort}(l,r,op)$ \u53ef\u4ee5\u76f4\u63a5\u5148 $\\text{split}'(r+1),\\text{split}'(l)$\uff08\u6ce8\u610f $\\text{split}'$ \u662f\u73c2\u6735\u8389\u6811\u4e0a\u7684\u5206\u88c2\u64cd\u4f5c\uff09\uff0c\u53ef\u4ee5\u5c06\u4e24\u8fb9\u7684\u533a\u95f4 $\\text{split}$ \u5f00\uff0c\u518d\u5728\u73c2\u6735\u8389\u6811\u4e2d\u95f4\u533a\u95f4\u7684\u7ebf\u6bb5\u6811 $\\text{merge}$ \u8d77\u6765\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u611f\u6027\u5206\u6790\u4e00\u4e0b\u6bcf\u6b21\u5206\u88c2\u591a\u51fa\u6765 $O(1)$ \u7ea7\u522b\u7684\u533a\u95f4\uff0c\u603b\u5171\u5408\u5e76\u662f $O(n+m)$ \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\uff08$n,m$ \u540c\u7ea7\uff09\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N=4e5+10;\nint n,m;\nstruct Segment_Tree{\n\tint son[N*20][2],rt[N],cnt,rtc=1;\n\tll val[N*20];\n\tint pool[N*20],delcnt;\n\t#define ls (son[rt][0])\n\t#define rs (son[rt][1])\n\tinline int newnode(){\n\t\treturn delcnt?pool[delcnt--]:++cnt;\n\t}\n\tinline void del(int rt){\n\t\tpool[++delcnt]=rt;\n\t\tls=rs=val[rt]=0;\n\t}\n\tinline void modify(int &rt,int l,int r,int p){\n\t\tif(!rt){\n\t\t\trt=newnode();\n\t\t}\n\t\tval[rt]=1;\n\t\tif(l==r) return ;\n\t\tint mid=l+r>>1;\n\t\tif(p<=mid) modify(ls,l,mid,p);\n\t\telse modify(rs,mid+1,r,p);\n\t}\n\tinline int merge(int a,int b){\n\t\tif(!a||!b) return a+b;\n\t\tval[a]+=val[b];\n\t\tson[a][0]=merge(son[a][0],son[b][0]);\n\t\tson[a][1]=merge(son[a][1],son[b][1]);\n\t\tdel(b);\n\t\treturn a;\n\t}\n\tinline void split(int &x,int y,int v,int p){\n\t\tif(val[y]==v) return ;\n\t\tx=newnode();\n\t\tval[x]=val[y]-v;\n\t\tval[y]=v;\n\t\tll q=val[son[x][0]];\n\t\tif(v<=val[son[y][p]]){\n\t\t\tsplit(son[x][p],son[y][p],v,p);son[x][!p]=son[y][!p],son[y][!p]=0;\n\t\t}else{\n\t\t\tsplit(son[x][!p],son[y][!p],v-val[son[y][p]],p);\n\t\t}\n\t}\n\tinline int query(int rt,int l,int r){\n\t\tif(l==r) return l;\n\t\tint mid=l+r>>1;\n\t\treturn ls?query(ls,l,mid):query(rs,mid+1,r);\n\t}\n}t;\n#define sit set<node>::iterator\nstruct node{\n\tint l,r;\n\tmutable int v;\n\tnode(int L,int R=-1,int V=0):l(L),r(R),v(V){}\n\tfriend bool operator<(const node& a,const node &b){\n\t\treturn a.l<b.l;\n\t}\n};\nset<node>a;\ninline sit split(int p){\n\tsit it=a.lower_bound(node(p));\n\tif(it!=a.end()&&it->l==p)\n\t\treturn it;\n\tit--;\n\tint l=it->l,r=it->r,v=it->v;\n\ta.erase(it);\n\tt.split(t.rt[p],t.rt[l],p-l,v);\n\ta.insert(node(l,p-1,v));\n\treturn a.insert(node(p,r,v)).first;\n}\nint main(){\n\tn=read(),m=read();\n\ta.insert(node(n+1,n+1,0));\n\tfor(int i=1;i<=n;i++){\n\t\tt.modify(t.rt[i],0,n,read());\n\t\ta.insert(node(i,i,0));\n\t}\n\twhile(m--){\n\t\tint opt=read(),l=read(),r=read();\n\t\tsit R=split(r+1),L=split(l);\n\t\tL->v=opt;\n\t\tfor(sit i=++L;i!=R;i++)t.merge(t.rt[l],t.rt[i->l]);\n\t\ta.erase(L,R);\n\t}\n\tint q=read();\n\tsplit(q+1),split(q);\n\tprintf(\"%d\\n\",t.query(t.rt[q],0,n));\n\tflush();\n}\n```\n### \u4f8b3 CF558E A Simple Task\n[$\\text{Link}$](https://www.luogu.com.cn/problem/CF558E)\n\n\u7b80\u5316\u9898\u610f\uff1a\u7ef4\u62a4\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c$m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u533a\u95f4\u5347\u5e8f\u6216\u8005\u964d\u5e8f\u6392\u5e8f\uff0c\u6700\u540e\u6c42\u6574\u4e2a\u5b57\u7b26\u4e32\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u9053\u9898\u548c\u4e0a\u4e00\u9053\u9898\u57fa\u672c\u4e00\u6837\uff0c\u4e8e\u662f\u628a\u4ee3\u7801\u4e00\u7c98\uff0c\u6539\u51e0\u4e0b\uff0c\u53d1\u73b0\u8fc7\u4e0d\u4e86\u6837\u4f8b\uff01\n\n\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u4e0a\u4e00\u9053\u9898\u7684\u5e8f\u5217\u662f $[1,n]$ \u7684\u4e00\u4e2a\u6392\u5217\uff0c\u8fd9\u9053\u9898\u7684\u5374\u662f\u6709\u91cd\u590d\u7684\u3002\n\n\u600e\u4e48\u5904\u7406\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5f3a\u884c\u5c06 $[1,26]$ \u7684\u4e00\u4e2a\u5e8f\u5217\u201c\u79bb\u6563\u5316\u201d\u6210 $[1,n]$ \u7684\u6392\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 $\\text{pair}$ \u8fdb\u884c\u79bb\u6563\u5316\u3002\n\n\u79bb\u6563\u5316\uff1a\n```cpp\nint d[N],e[N];\npair<int,int>c[N];\nfor(int i=1;i<=n;i++){\n\tc[i]=make_pair(d[i]=getc()-'a'+1,i);\n}\nsort(c+1,c+n+1);\nfor(int i=1;i<=n;i++){\n\tint k=lower_bound(c+1,c+n+1,make_pair(d[i],i))-c;\n\te[k]=d[i];\n}\n```\n\u8981\u5b8c\u6574\u4ee3\u7801\u53ef\u4ee5\u70b9 [$\\text{Here}$](https://www.luogu.com.cn/paste/ztiz3sk1)\u3002\n## $\\text{Part 4}$ \u540e\u8bb0\n\u5199\u8fd9\u7bc7\u6587\u7ae0\u52a0\u6df1\u4e86\u6211\u5bf9\u7ebf\u6bb5\u6811\u5206\u88c2\u7684\u7406\u89e3\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u5206\u88c2\u8003\u5230\u7684\u6b21\u6570\u5f88\u5c11\uff0c\u6240\u4ee5\u6ca1\u6709\u627e\u5230\u591a\u5c11\u9898\u505a\u4f8b\u5b50\uff0c\u975e\u5e38\u611f\u8c22\u4f60\u770b\u5230\u8fd9\u91cc\uff0c\u6211\u6709\u4e9b\u4e1c\u897f\u5199\u5f97\u4e0d\u591f\u597d\u3001\u4e0d\u591f\u4e25\u8c28\uff0c\u6216\u8005\u6709\u5176\u4ed6\u4f8b\u9898\uff0c\u4f60\u4eec\u53ef\u4ee5\u5e2e\u5fd9\u6307\u51fa\uff0c\u4e07\u5206\u611f\u8c22\uff01\n## $\\text{Part 5}$ \u53c2\u8003\n[\u9898\u89e3 P6012 \u3010\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u88c2\u3011 - ix35](https://www.luogu.com.cn/blog/ix-35/solution-p6012)\n\n[\u9898\u89e3 P2824 \u3010[HEOI2016/TJOI2016]\u6392\u5e8f\u3011 - \u4e00\u6276\u82cf\u4e00](https://www.luogu.com.cn/blog/fusu2333/solution-p2824)\n\n- $\\text{upd 2021.7.4}$\uff1a\u611f\u8c22 [dying](https://www.luogu.com.cn/user/85593) \u548c [GuidingStar](https://www.luogu.com.cn/user/75840) \u6307\u51fa\u5408\u5e76\u7684\u590d\u6742\u5ea6\u8bc1\u660e\u95ee\u9898\u3002\u5982\u679c\u4ecd\u9519\u8bef\u8bf7\u7ee7\u7eed\u6307\u51fa\uff01\n- $\\text{upd 2021.7.28}$\uff1a\u5bf9\u90e8\u5206\u4ee3\u7801\u7684\u5b9e\u73b0\u8fdb\u884c\u4fee\u6539\uff0c\u66f4\u80fd\u770b\u4e86\u3002\n- $\\text{upd 2021.8.21}$\uff1a$\\text{fixed a typo}$\u3002\n- $\\text{upd 2021.8.27}$\uff1a$\\text{added\\&fixed something}$\u3002\n- $\\text{upd 2021.8.28}$\uff1a$\\text{fixed something}$\u3002",
        "postTime": 1618925711,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u3010\u65e5\u62a5#359\u3011\u6d45\u8c08\u7ebf\u6bb5\u6811\u5206\u88c2"
    },
    {
        "content": "(\u56e0\u4e3a\u6ca1\u6709\u8ba4\u8bc1,\u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u7531[Froggy](https://www.luogu.com.cn/user/100285)\u4e0a\u4f20)\n\u7ebf\u6bb5\u6811\u5206\u88c2\u7528\u5230\u7684\u5730\u65b9\u786e\u5b9e\u5e76\u4e0d\u591a,luogu\u4e0a\u4ee5\u524d\u4e5f\u6ca1\u6709\u8fd9\u9053\u6a21\u677f\u9898,\u6240\u4ee5\u5c31\u51fa\u4e86\u4e00\u9053,\u5b9e\u5728\u662f\u60f3\u4e0d\u51fa\u600e\u4e48\u51fa\u6a21\u677f\u4e86,\u6240\u4ee5\u8fd9\u9053\u9898\u53ef\u80fd\u53ef\u4ee5\u7528\u4e00\u4e9b\u5176\u4ed6\u7684\u7b97\u6cd5\u6c34\u8fc7\u53bb.\n\n# \u524d\u7f6e\u829d\u58eb\n\n1. [\u7ebf\u6bb5\u6811](https://baike.baidu.com/item/\u7ebf\u6bb5\u6811/10983506?fr=aladdin): \u672c\u9898\u4e2d\u7528\u5230\u7684\u662f\u6743\u503c\u7ebf\u6bb5\u6811(\u67e5\u8be2\u6bcf\u4e2a\u6570\u5728\u5e8f\u5217\u4e2d\u51fa\u73b0\u7684\u6b21\u6570,\u5e8f\u5217\u4e2d\u7b2ck\u5927\u7684\u6570\u7b49\u64cd\u4f5c).\n2. \u7ebf\u6bb5\u6811\u5408\u5e76: ~~\u4e3a\u4e86\u589e\u52a0\u4e00\u4e0b\u7801\u91cf\u624d\u653e\u4e0a\u7684~~.\n\n# \u7ebf\u6bb5\u6811\u5206\u88c2\n\u65e2\u7136\u662f\u6a21\u677f\u9898,\u8fd9\u4e2a\u81ea\u7136\u624d\u662f\u91cd\u70b9.\n\u4ee5\u4e0b\u8fd9\u6837\u4e00\u9897\u7ebf\u6bb5\u6811:\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200121180206699.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4eV9fb3J6,size_16,color_FFFFFF,t_70)\n\n\u9700\u8981\u5c06\u6a59\u8272\u7ebf\u6bb5\u8986\u76d6\u7684\u90e8\u5206\u5206\u88c2\u51fa\u6765,\u9700\u8981\u5efa\u4e00\u9897\u65b0\u7684\u6811,\u5f53\u4e00\u4e2a\u8282\u70b9\u6240\u4ee3\u8868\u7684\u533a\u95f4\u4e0e\u9700\u8981\u5206\u88c2\u7684\u533a\u95f4\u6709\u4ea4\u65f6\u9700\u8981\u5f00\u4e00\u4e2a\u65b0\u7684\u8282\u70b9(\u7eff\u8272\u90e8\u5206),\u539f\u6765\u7684\u6811\u4e2d\u9700\u8981\u5c06\u90a3\u4e9b\u6574\u4e2a\u88ab\u5206\u88c2\u7684\u90e8\u5206\u76f4\u63a5\u63a5\u5230\u65b0\u7684\u6811\u4e0b\u9762,\u5e76\u4e14\u5c06\u4e8e\u539f\u6765\u7684\u6811\u7684\u8fb9\u65ad\u5f00(\u7ea2\u8272\u90e8\u5206),\u53ef\u4ee5\u53d1\u73b0\u88ab\u65ad\u5f00\u7684\u8fb9\u6700\u591a\u53ea\u4f1a\u6709$\\log_2N$\u6761,\u6240\u4ee5\u6700\u7ec8\u6bcf\u6b21\u5206\u88c2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$\\log_2N$(\u8bc1\u660e\u65b9\u6cd5\u4e0e\u533a\u95f4\u4fee\u6539\u4e3a$N\\log_2N$\u76f8\u540c).\n\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define rap(i,first,last) for(int i=first;i<=last;++i)\n//\u7ebf\u6bb5\u6811\u6807\u51c6define\n#define Lson (tree[now].lson)\n#define Rson (tree[now].rson)\n#define Middle ((left+right)>>1)\n#define Left Lson,left,Middle\n#define Right Rson,Middle+1,right\n#define Now nowleft,nowright\nusing namespace std;\nconst int maxN=6e5+7;//\u56e0\u4e3a\u6709\u5206\u88c2,\u9700\u8981\u5927\u4e00\u70b9\u7684\u7a7a\u95f4\nint N,M;\nstruct Tree//\u7ebf\u6bb5\u6811\u4e2d\u6bcf\u4e00\u4e2a\u8282\u70b9\n{\n\tint lson,rson;//\u52a8\u6001\u5f00\u70b9,\u8bb0\u5f55\u5de6\u53f3\u513f\u5b50\n\tlong long sum;//\u533a\u95f4\u548c\n}tree[maxN*4];\nint cnt=0;\n//\u4e00\u4e0b\u662f\u4e00\u4e2a\u7a7a\u95f4\u56de\u6536,\u53ef\u4ee5\u5c06\u5728\u7ebf\u6bb5\u6811\u5408\u5e76\u540e\u6ca1\u6709\u7528\u7684\u70b9\u56de\u6536,\u66f4\u597d\u5730\u5229\u7528\u7a7a\u95f4\nint tot=0;//\u5220\u6389\u7684\u8282\u70b9\u7684\u4e2a\u6570\nint rubbish[maxN*4];//\u7528\u6765\u653e\u5220\u6389\u7684\u8282\u70b9\u7684\u7f16\u53f7\nvoid Del(int &now)//\u5220\u9664\u4e00\u4e2a\u8282\u70b9\n{\n\ttree[now].lson=tree[now].rson=tree[now].sum=0;//\u5148\u6e05\u7a7a\n\trubbish[++tot]=now;//\u653e\u5165\u5783\u573e\u6876\n\tnow=0;\n}\nint New()//\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\n{\n\tif(tot)return rubbish[tot--];//\u5783\u573e\u6876\u4e0d\u662f\u7a7a\u7684\u5c31\u4ece\u5783\u573e\u6876\u4e0a\u9762\u62ff\u4e00\u4e2a\n\treturn ++cnt;//\u5783\u573e\u6876\u662f\u7a7a\u7684\u5c31\u62ff\u4e00\u4e2a\u5168\u65b0\u7684\u8282\u70b9\n}\n//\u7a7a\u95f4\u56de\u6536\u4ee3\u7801\u7ed3\u675f\nint arr[maxN];//\u5f00\u59cb\u8bfb\u5165\u7684\u6570\u7ec4\nvoid PushUp(int now)//\u5408\u5e76\u4fe1\u606f\n{\n\ttree[now].sum=tree[Lson].sum+tree[Rson].sum;\n}\nvoid Build(int &now,int left=1,int right=N)//\u5efa\u6811\n{\n\tif(!now)now=New();//\u5f97\u5230\u4e00\u4e2a\u65b0\u8282\u70b9\n\tif(left==right)\n\t{\n\t\ttree[now].sum=arr[left];//\u53f6\u8282\u70b9\u76f4\u63a5\u8d4b\u503c\n\t\treturn;\n\t}\n\tBuild(Left);//\u5efa\u5de6\u5b50\u6811\n\tBuild(Right);//\u5efa\u53f3\u5b50\u6811\n\tPushUp(now);//\u5408\u5e76\u4fe1\u606f\n}\nvoid Merge(int &tree1,int &tree2,int left=1,int right=N)//\u7ebf\u6bb5\u6811\u5408\u5e76,\u5c06tree2\u5408\u5e76\u5230tree1\u4e0a\n{\n\tif(!tree1||!tree2)//\u5982\u679c\u5f53\u524d\u8fd9\u68f5\u6811\u53ea\u6709\u5176\u4e2d\u4e00\u9897\u6811\u6709\u5c31\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\n\t{\n\t\ttree1+=tree2;\n\t\treturn;\n\t}\n\tif(left==right)//\u53f6\u8282\u70b9\u5c31\u76f4\u63a5\u5408\u5e76\n\t{\n\t\ttree[tree1].sum+=tree[tree2].sum;\n\t\tDel(tree2);//\u5220\u6389tree2\n\t\treturn;\n\t}\n\tMerge(tree[tree1].lson,tree[tree2].lson,left,Middle);//\u7ee7\u7eed\u5408\u5e76\n\tMerge(tree[tree1].rson,tree[tree2].rson,Middle+1,right);\n\tDel(tree2);//\u5220\u6389tree2\n\tPushUp(tree1);//\u5408\u5e76\u4fe1\u606f\n}\nvoid Split(int &tree1,int &tree2,int nowleft,int nowright,int left=1,int right=N)//\u7ebf\u6bb5\u6811\u5206\u88c2(\u5c06tree1\u4e2dnowleft~nowright\u90e8\u5206\u5206\u88c2\u5230tree2\u4e2d)\n{\n\tif(right<nowleft||nowright<left)return;//\u6ca1\u6709\u88ab\u8986\u76d6\u5c31\u76f4\u63a5\u8fd4\u56de\n\tif(!tree1)return;//\u5982\u679ctree1\u6ca1\u6709\u81ea\u7136\u4e5f\u6ca1\u6709\u7528\u4e86\n\tif(nowleft<=left&&right<=nowright)//\u88ab\u5b8c\u5168\u8986\u76d6\u65f6\n\t{\n\t\ttree2=tree1;\n\t\ttree1=0;//\u628a\u8fb9\u65ad\u5f00\n\t\treturn;\n\t}\n\tif(!tree2)tree2=New();//\u5f97\u5230\u4e00\u4e2a\u65b0\u8282\u70b9\n\tSplit(tree[tree1].lson,tree[tree2].lson,Now,left,Middle);//\u5de6\u53f3\u5b50\u6811\u7ee7\u7eed\u5206\u88c2\n\tSplit(tree[tree1].rson,tree[tree2].rson,Now,Middle+1,right);\n\tPushUp(tree1);//\u5408\u5e76\u4e24\u6570\u4fe1\u606f\n\tPushUp(tree2);\n}\nvoid UpData(int num,int add,int &now,int left=1,int right=N)//\u5355\u70b9\u4fee\u6539(\u4e0d\u591a\u8bb2)\n{\n\tif(num<left||num>right)return;\n\tif(!now)now=New();\n\tif(left==right)\n\t{\n\t\ttree[now].sum+=add;\n\t\treturn;\n\t}\n\tUpData(num,add,Left);\n\tUpData(num,add,Right);\n\tPushUp(now);\n}\nlong long QuerySum(int nowleft,int nowright,int now,int left=1,int right=N)//\u67e5\u8be2\u533a\u95f4\u548c(\u4e0d\u591a\u8bb2)\n{\n\tif(nowright<left||right<nowleft)return 0;\n\tif(!now)return 0;\n\tif(nowleft<=left&&right<=nowright)\n\t{\n\t\treturn tree[now].sum;\n\t}\n\treturn QuerySum(Now,Left)+QuerySum(Now,Right);\n}\nint QueryKth(long long k,int now,int left=1,int right=N)//\u67e5\u8be2\u533a\u95f4\u7b2ck\u5927(\u4e0d\u591a\u8bb2)\n{\n\tif(k<=0)return -1;\n\tif(left==right)return left;\n\tif(tree[Lson].sum>=k)return QueryKth(k,Left);\n\treturn QueryKth(k-tree[Lson].sum,Right);\n}\nint root[maxN];//\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u5e8f\u5217\u7684\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\nint cnttree=1;//\u5e8f\u5217\u7684\u7f16\u53f7\nint main()\n{\n\tscanf(\"%d%d\",&N,&M);\n\trap(i,1,N)scanf(\"%d\",&arr[i]);\n\tBuild(root[1]);//\u4ee5root[1]\u5efa\u6811\n\tint check,p,t,x,y,k,q,kth;\n\trap(i,1,M)\n\t{\n\t\tscanf(\"%d\",&check);\n\t\tif(check==0)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&p,&x,&y);\n\t\t\tSplit(root[p],root[++cnttree]/*\u5efa\u4e00\u9897\u65b0\u6811*/,x,y);//\u5206\u88c2\n\t\t}\n\t\tif(check==1)\n\t\t{\n\t\t\tscanf(\"%d%d\",&p,&t);\n\t\t\tMerge(root[p],root[t]);//\u5408\u5e76\n\t\t}\n\t\tif(check==2)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&p,&x,&q);\n\t\t\tUpData(q,x,root[p]);//\u4fee\u6539\n\t\t}\n\t\tif(check==3)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&p,&x,&y);\n\t\t\tprintf(\"%lld\\n\",QuerySum(x,y,root[p]));//\u533a\u95f4\u548c\n\t\t}\n\t\tif(check==4)\n\t\t{\n\t\t\tscanf(\"%d%d\",&p,&k);\n\t\t\tif(QuerySum(1,N,root[p])<k)kth=-1;//\u533a\u95f4\u548c\u90fd\u6ca1\u6709k\u81ea\u7136\u662f\u4e0d\u4f1a\u6709\u7b2ck\u5927\u4e86\n\t\t\telse\n\t\t\tkth=QueryKth(k,root[p]);\n\t\t\tprintf(\"%d\\n\",kth);\n\t\t}\n\t}\n}\n```",
        "postTime": 1579998936,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6012 \u3010\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u88c2\u3011"
    },
    {
        "content": "\u6a21\u677f\u9898\uff0c\u8981\u6c42\u7ef4\u62a4\u6743\u503c\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u5206\u88c2\uff0c\u5355\u9879\u63d2\u5165\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u627e\u7b2c $k$ \u5c0f\u3002\n\n\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u8282\u70b9 $[l,r]$ \u7ef4\u62a4\u7684\u4fe1\u606f\u6709\uff0c\u4ed6\u7684\u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\uff0c\u533a\u95f4\u5185\u5143\u7d20\u4e2a\u6570\u3002\n\n### \u5355\u9879\u63d2\u5165\n\n---\n\n\u6743\u503c\u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\uff0c\u6b64\u9898\u4e0d\u7528\u79bb\u6563\u5316\u3002\n\n```cpp\nvoid update(int const &p,int const &v,int &x,int const &l=1,int const &r=n){\n\tif(!x) x=newnode();//\u52a8\u6001\u5f00\u70b9\n\ttr[x].v+=v;\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tif(p<=mid) update(p,v,tr[x].ls,l,mid);\n\telse update(p,v,tr[x].rs,mid+1,r);\n}\n```\n\n### \u533a\u95f4\u67e5\u8be2\n\n---\n\n\u4e5f\u662f\u57fa\u672c\u64cd\u4f5c\uff0c\u6ce8\u610f\u7684\u662f\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u5728\u627e\u5230\u7a7a\u8282\u70b9\u540e\u5c31\u53ef\u4ee5\u8fd4\u56de\u4e86\u3002\n\n```cpp\nlong long query(int const &pl,int const &pr,int const &x,int const &l=1,int const &r=n){\n\tif(!x) return 0;\n\tif(pl==l&&pr==r) return tr[x].v;\n\tint mid=(l+r)>>1;\n\tif(pr<=mid) return query(pl,pr,tr[x].ls,l,mid);\n\telse if(pl>mid) return query(pl,pr,tr[x].rs,mid+1,r);\n\telse return query(pl,mid,tr[x].ls,l,mid)+query(mid+1,pr,tr[x].rs,mid+1,r);\n}\n```\n\n### \u627e\u7b2c $k$ \u5c0f\n\n---\n\n\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u5982\u679c\u5de6\u5b69\u5b50\u7684\u5143\u7d20\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e $k$\uff0c\u8bf4\u660e\u7b2c $k$ \u5c0f\u5728\u5de6\u5b50\u6811\u5185\uff1b\u5426\u5219\uff0c\u5728\u53f3\u5b50\u6811\u5185\u3002\n\n```cpp\nint kth(long long const &p,int const &x,int const &l=1,int const &r=n){\n\tif(tr[x].v<p) return -1;\n\tif(l==r) return l;\n\tint mid=(l+r)>>1;\n\tif(tr[tr[x].ls].v>=p) return kth(p,tr[x].ls,l,mid);\n\telse return kth(p-tr[tr[x].ls].v,tr[x].rs,mid+1,r);\n}\n```\n\n### \u7ebf\u6bb5\u6811\u5408\u5e76\n\n---\n\n\u7ebf\u6bb5\u6811\u5408\u5e76\u6709\u4e24\u79cd\u5199\u6cd5\uff0c\u8fd9\u91cc\u5199\u7684\u662f\u5c06\u4e00\u68f5\u6811\u5408\u5e76\u5230\u53e6\u4e00\u9897\u4e0a\u7684\u5199\u6cd5\u3002\u5bf9\u4e8e $t$ \u4e2d\u6ca1\u6709\u7684\u8282\u70b9\u4e0d\u7528\u904d\u5386\uff1b\u5bf9\u4e8e $p$ \u4e2d\u6ca1\u6709\u4f46 $t$ \u4e2d\u6709\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u628a\u8be5\u8282\u70b9\u6302\u5728 $p$ \u4e0a\u3002\uff08$p,t$ \u7684\u542b\u4e49\u89c1\u9898\u76ee\uff09\n\n```cpp\nvoid merge(int &x1,int &x2,int const &l=1,int const &r=n){\n\tif(!x2) return;\n\tif(!x1){x1=x2;x2=0;return;}\n\ttr[x1].v+=tr[x2].v;\n\tint mid=(l+r)>>1;\n\tmerge(tr[x1].ls,tr[x2].ls,l,mid);\n\tmerge(tr[x1].rs,tr[x2].rs,l,mid);\n\tdelnode(x2);//\u5783\u573e\u56de\u6536\n}\n```\n\n### \u7ebf\u6bb5\u6811\u5206\u88c2\n\n\u7ec8\u4e8e\u5230\u6b63\u9898\u4e86\uff0c\u7ebf\u6bb5\u6811\u5206\u88c2\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u9006\u64cd\u4f5c\u3002\u5bf9\u4e8e\u5f85\u5206\u88c2\u533a\u57df\u4e0e\u5176\u4ed6\u533a\u57df\u7684\u516c\u6709\u8282\u70b9\uff0c\u590d\u5236\u4e00\u4efd\uff1b\u5bf9\u4e8e\u72ec\u6709\u8282\u70b9\uff0c\u76f4\u63a5\u62ff\u8fc7\u6765\u6302\u4e0a\u53bb\uff1b\u6700\u540e\u8bb0\u5f97 `pushup`\u3002 \n\n```cpp\nvoid split(int const &pl,int const &pr,int &x1,int &x2,int const &l=1,int const &r=n){\n\tif(pl==l&&pr==r){\n\t\tx2=x1;\n\t\tx1=0;\n\t\treturn;\n\t}\n\tif(!x2) x2=newnode();\n\tint mid=(l+r)>>1;\n\tif(pr<=mid) split(pl,pr,tr[x1].ls,tr[x2].ls,l,mid);\n\telse if(pl>mid) split(pl,pr,tr[x1].rs,tr[x2].rs,mid+1,r);\n\telse split(pl,mid,tr[x1].ls,tr[x2].ls,l,mid),split(mid+1,pr,tr[x1].rs,tr[x2].rs,mid+1,r);\n\ttr[x1].v=tr[tr[x1].ls].v+tr[tr[x1].rs].v;//pushup\n\ttr[x2].v=tr[tr[x2].ls].v+tr[tr[x2].rs].v;\n}\n```\n\n### ~~\u53ef\u56de\u6536\u5783\u573e(~~\n\n---\n\u65b0\u5efa\u8282\u70b9\u548c\u5220\u9664\u8282\u70b9\uff0c\u5f00\u4e2a\u5783\u573e\u6876\uff0c\u56de\u6536\u5e9f\u5f03\u8282\u70b9\u3002\n\n```cpp\nint newnode(){\n\tif(tp!=lj)return *--tp;\n\telse return ++cnt;\n}\nvoid delnode(int &x){\n\t*tp++=x;\n\ttr[x].v=tr[x].ls=tr[x].rs=0;\n\tx=0;\n}\n```\n\n## \u65f6\u95f4\u590d\u6742\u5ea6\u8bc1\u660e\n\n- \u5355\u70b9\u4fee\u6539\uff1a\u7531\u4e8e\u7ebf\u6bb5\u6811\u7684\u4e8c\u5206\u7ed3\u6784\uff0c\u6df1\u5ea6\u4e3a ${\\log_2n}$\uff0c\u6bcf\u5c42\u53ea\u8bbf\u95ee $1$ \u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathrm {O(\\log_2n)}$\u3002\n\n- \u533a\u95f4\u67e5\u8be2\uff1a\u79f0\u88ab\u8be2\u95ee\u533a\u95f4\u5b8c\u6574\u5305\u542b\u7684\u8282\u70b9\u4e3a\u5b8c\u6574\u8282\u70b9\uff0c\u88ab\u90e8\u5206\u5305\u542b\u7684\u4e3a\u8fb9\u7f18\u8282\u70b9\uff0c\u5219\u6bcf\u4e00\u5c42\u6700\u591a\u53ea\u8bbf\u95ee $2$ \u4e2a\u8fb9\u7f18\u8282\u70b9\uff0c\u4f4d\u4e8e\u533a\u95f4\u8fb9\u7f18\uff1b\u6700\u591a\u8bbf\u95ee $2$ \u4e2a\u5b8c\u6574\u8282\u70b9\uff0c\u56e0\u4e3a\u5b8c\u6574\u8282\u70b9\u7684\u5144\u5f1f\u4e00\u5b9a\u4e0d\u662f\u5b8c\u6574\u8282\u70b9\u3002\u539f\u56e0\u662f\uff0c\u82e5\u4e00\u4e2a\u8282\u70b9\u7684\u4e24\u4e2a\u5b69\u5b50\u5747\u4e3a\u5b8c\u6574\u8282\u70b9\uff0c\u5219\u8be5\u8282\u70b9\u4e3a\u5b8c\u6574\u8282\u70b9\uff0c\u4e0d\u4f1a\u8bbf\u95ee\u5176\u5b69\u5b50\u3002\u6240\u4ee5\u4e00\u5c42\u6700\u591a\u8bbf\u95ee $4$ \u8282\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathrm{O(\\log_2n)}$\n\n- \u627e\u7b2c $k$ \u5c0f\uff1a\u6bcf\u5c42\u53ea\u4f1a\u8bbf\u95ee $1$ \u4e2a\u8282\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathrm {O(\\log_2n)}$\u3002\n\n- \u7ebf\u6bb5\u6811\u5408\u5e76\uff1a\u663e\u7136\uff0c\u6211\u4eec\u6bcf\u6b21\u53ea\u4f1a\u8bbf\u95ee\u91cd\u5408\u8282\u70b9\uff0c\u90a3\u4e48\u5355\u6b21\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8f83\u5c0f\u6811\u7684\u8282\u70b9\u4e2a\u6570\uff0c\u90a3\u4e48\u663e\u7136\uff0c\u591a\u6b21\u5408\u5e76\u7684\u603b\u590d\u6742\u5ea6\u4e3a\u603b\u70b9\u6570\u7ea7\u522b\uff0c$\\mathrm {O(n\\log_2n)}$\u3002\n\n  - \u6ce8\uff1a\u4e0d\u80fd\u7b80\u5355\u7684\u8ba4\u4e3a\u5176\u590d\u6742\u5ea6\u4e3a\u5355\u6b21\u5408\u5e76\u7684\u6700\u574f\u590d\u6742\u5ea6\u4e58\u8be2\u95ee\u6b21\u6570\u3002\u611f\u6027\u7406\u89e3\uff0c\u5728\u672c\u9898\u4e2d\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u82b1\u8d39\u4e00\u6b21\u8be2\u95ee\u4f7f\u6811\u7684\u8282\u70b9\u52a0\u4e00\u6761\u94fe\uff0c\u8ba9\u5408\u5e76\u7684\u590d\u6742\u5ea6\u589e\u5927\uff0c\u4f46\u4e5f\u4f1a\u5931\u53bb\u4e00\u6b21\u8fdb\u884c\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u673a\u4f1a\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u5176\u603b\u590d\u6742\u5ea6\u4e0d\u4f1a\u8fc7\u9ad8\u3002\uff08\u5f88\u7384\u5b66\uff0c\u6211\u4e5f\u4e0d\u4f1a\u66f4\u4e25\u8c28\u7684\u8bc1\u660e\uff0c\u5e0c\u671b\u6709\u5927\u4f6c\u6559\u6211\uff09\n  \n- \u7ebf\u6bb5\u6811\u5206\u88c2\uff1a\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u8bbf\u95ee\u7684\u8282\u70b9\u548c\u533a\u95f4\u67e5\u8be2\u662f\u4e00\u81f4\u7684\uff0c\u590d\u5236\u8fb9\u7f18\u8282\u70b9\uff0c\u76f4\u63a5\u62ff\u8d70\u5b8c\u6574\u8282\u70b9\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathrm{O(\\log_2n)}$\n\n### \u5b8c\u6574\u4ee3\u7801\n\n[**link**](https://www.luogu.com.cn/paste/wu1u7lxp)",
        "postTime": 1600430915,
        "uid": 55707,
        "name": "gxy001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5494 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u88c2"
    },
    {
        "content": "\u8fd9\u91cc\u732e\u4e0a\u4e00\u4efd\u4e0d\u7b97\u7279\u522b\u7f13\u6162\u7684\u5e73\u8861\u6811\u9898\u89e3\u3002\n\n> ~~\u56e0\u4e3a\u6807\u7b7e\u91cc\u6709\u63d0\u793a\u5e73\u8861\u6811\u548c\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u4f18\u5148\u9009\u62e9\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u8fd9\u4e9b\u96c6\u5408\u3002~~\n\n\u94b3\u5236\u829d\u58eb\uff1afhq-Treap\n\n# \u6734\u7d20\u505a\u6cd5\u53ca\u5206\u6790\n\n\u5bf9\u4e8e\u4e00\u4e2a\u96c6\u5408\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u53ef\u91cd treap \u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c 0\uff0c\u76f4\u63a5\u5c06 p \u6309 $(-\\infty,x),[x,y],(y,+\\infty)$ \u5206\u88c2\u6210\u4e09\u5757\uff0c\u65b0\u7684\u96c6\u5408\u5c31\u662f\u4e2d\u95f4\u90a3\u4e00\u5757\uff0c\u628a\u4e24\u8fb9\u7684\u5408\u5e76\u8d77\u6765\u5c31\u662f p \u4e86\u3002\n\n\uff08\u64cd\u4f5c 1 \u6700\u540e\u5206\u6790\uff09\n\n\u5bf9\u4e8e\u64cd\u4f5c 2\uff0c\u8fd8\u662f\u88c2\u6210\u4e09\u5757\uff0c\u5982\u679c\u4e2d\u95f4\u90a3\u5757\u6709\u7684\u8bdd\uff0c\u76f4\u63a5\u52a0 cnt \u5c31\u53ef\u4ee5\u4e86\uff0c\u5426\u5219\u7684\u8bdd\u5c31\u65b0\u5efa\u8282\u70b9\uff0c\u6700\u540e\u518d merge \u8d77\u6765\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c 3\uff0c\u4e00\u6837\u88c2\u6210\u4e09\u5757\uff0c\u8f93\u51fa\u4e2d\u95f4\u90a3\u4e00\u5757\u7684\u5927\u5c0f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c 4\uff0c\u5199\u4e00\u4e2a\u5e73\u8861\u6811\u4e0a\u67e5\u7b2c k \u5c0f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u81f3\u6b64\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f treap \u57fa\u672c\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n\u518d\u6765\u770b\u64cd\u4f5c 1\uff0c\u5bb9\u6613\u53d1\u73b0\u8981\u5408\u5e76\u7684\u4e24\u4e2a\u96c6\u5408\u7684\u503c\u57df\u662f\u6709\u53ef\u80fd\u4f1a\u76f8\u4ea4\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u7b80\u5355\u5730 merge\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u5408\u5e76\u662f\u5982\u4f55\u505a\u5230\u7684\uff1a\u7ebf\u6bb5\u6811\u6bcf\u6b21\u5c06\u6240\u6709\u503c\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u7136\u540e\u5206\u522b\u5408\u5e76\u3002\n\n\u90a3\u6211\u4eec\u53ef\u4ee5\u4eff\u7167\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\uff0c\u8bbe\u8981\u5408\u5e76\u7684\u4e24\u68f5\u6811\u7684\u6839\u8282\u70b9\u4e3a x \u548c y \u90a3\u5c06 y \u4ee5 x \u7684\u6743\u503c\u88c2\u6210\u4e09\u5757\uff0c\u7136\u540e\u5206\u522b\u9012\u5f52\u5408\u5e76\u3002\n\n\u7136\u540e\u6211\u4eec\u5929\u771f\u5730\u8fd9\u6837\u5199\u4e86\uff0c\u7136\u540e\u4ea4\u4e86\u4e0a\u53bb\u3002\n\n[\u526a\u5207\u677f\u4ee3\u78011](https://www.luogu.com.cn/paste/gofprdd3)\n\n\u5e76\u4e0d\u80fd\u901a\u8fc7\uff0c\u5012\u6570\u7b2c\u4e8c\u4e2a\u70b9\u8d85\u65f6\uff0c~~\u5982\u9898\u9762\u6240\u8ff0\uff0c\u5012\u6570\u7b2c\u4e8c\u4e2a\u70b9 hack \u4e86\u5e73\u8861\u6811~~\u3002\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u8981\u53d1\u626c\u4fe1\u606f\u5b66\u7cbe\u795e\uff08bushi\uff09\uff0c\u5c1d\u8bd5\u770b\u770b\u5230\u5e95\u662f\u5982\u4f55\u88ab\u5361\u7684\u3002\n\n# \u4f18\u5316\n\n\u4e0b\u8f7d\u4e86\u6570\u636e\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6240\u6709\u64cd\u4f5c\u5c31\u662f\u4ece\u96c6\u5408 1 \u4e2d\u622a\u4e00\u6bb5\u4e0b\u6765\uff0c\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u518d\u63a5\u56de\u53bb\u3002\n\n\u6240\u4ee5\u5c31\u5bb9\u6613\u53d1\u73b0\u4e86\uff0c\u8fd9\u79cd\u505a\u6cd5\u7f3a\u9677\u5728\u4e8e\u5728\u64cd\u4f5c 1 \u7684\u5408\u5e76\u4e2d\u6ca1\u6709\u529e\u6cd5\u5408\u7406\u5730\u6539\u53d8\u6811\u5730\u5f62\u6001\uff0c\u5bfc\u81f4\u9ad8\u5ea6\u4f1a\u4e0d\u65ad\u5730\u7d2f\u79ef\uff0c\u65e0\u6cd5\u5f97\u5230\u8c03\u6574\u3002\u8fd9\u4e00\u70b9\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u6811\u9ad8\u7136\u540e\u8dd1\u4e00\u4e0b\u5f97\u5230\u9a8c\u8bc1\uff1a\u6811\u9ad8\u5f88\u5feb\u5c31\u589e\u957f\u5230\u4e86\u4e09\u56db\u5343\u3002\n\n\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u52a0\u5165\u4e00\u4e2a\u5341\u5206\u6d45\u663e\u7684\u4f18\u5316\uff1a\u5982\u679c\u4e24\u68f5\u6811\u503c\u57df\u5df2\u7ecf\u4e0d\u4ea4\u4e86\uff0c\u90a3\u4e48\u76f4\u63a5 merge \u5c31\u53ef\u4ee5\u4e86\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u6837\u8dd1\u8d77\u6765\u4f1a\u5feb\u5f88\u591a\u4e86\uff0c\u4f46\u662f\u4f9d\u7136\u8981\u8dd1\u4e00\u5206\u949f\u5de6\u53f3\u3002\uff08\u56e0\u4e3a\u590d\u6742\u5ea6\u5e76\u6ca1\u6709\u5b9e\u8d28\u6027\u7684\u6539\u53d8\uff09\n\n\u6211\u4eec\u770b\u5230\u6bcf\u6b21\u603b\u662f y \u5f80 x \u4e0a\u5408\u5e76\uff0c\u5f88\u5bb9\u6613\u53d1\u751f\u5927\u7684\u5e76\u5230\u5c0f\u7684\u4e0a\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u6811\u7684\u9ad8\u5ea6\u5c31\u4f1a\u589e\u52a0\uff0c\u6240\u4ee5\u8fd9\u542f\u53d1\u4e86\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u5408\u5e76\u65f6\u90fd\u5c06\u5c0f\u7684\u5f80\u5927\u7684\u4e0a\u5408\u5e76\uff0c\u8fd9\u65f6\u53ef\u4ee5\u60ca\u559c\u7684\u53d1\u73b0\u5f00 O2 \u672c\u5730\u53ea\u7528\u8dd1 ``800ms`` \u5de6\u53f3\uff0c\u7136\u540e\u4e00\u63d0\u4ea4\uff0c\u5c31\u901a\u8fc7\u4e86\u3002\n\n[\u526a\u5207\u677f\u4ee3\u78012](https://www.luogu.com.cn/paste/8uoj5msp)\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.com.cn/record/74582018)\n\n\u7b80\u5355\u5206\u6790\u4e00\u4e0b\u590d\u6742\u5ea6\uff1a\u4ece\u6811\u9ad8\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u6bcf\u6b21\u5c06\u5c0f\u7684\u63d2\u8fdb\u5927\u7684\u662f\u4e0d\u4f1a\u5bf9\u5927\u6811\u7684\u6811\u9ad8\u4ea7\u751f\u5f71\u54cd\u7684\uff0c\u6240\u4ee5\u6bcf\u6b21\u5408\u5e76\u540e\u6811\u9ad8\u90fd\u4f1a\u4fdd\u6301\u539f\u9ad8\u5ea6\uff0c\u4ece\u800c\u907f\u514d\u4e86\u539f\u6765\u7ed3\u6784\u4e0d\u53d8\u5e26\u6765\u7684\u9ad8\u5ea6\u731b\u589e\u3002\u540c\u6837\u8fd9\u4e00\u70b9\u53ef\u4ee5\u8fd0\u884c\u4ee3\u7801\u8f93\u51fa\u6811\u9ad8\u5f97\u5230\u9a8c\u8bc1\u3002\n\n\u56e0\u6b64\u8fd9\u4e2a\u5408\u5e76\u64cd\u4f5c\u590d\u6742\u5ea6\u5916\u5c42\u662f\u7c7b\u4f3c\u4e8e\u7ebf\u6bb5\u6811\u7684\uff0c\u6bcf\u4e2a\u70b9\u4f1a\u8d21\u732e $O(\\log n)$ \u5c42\u7684\u9012\u5f52\uff0c\u800c\u6bcf\u5c42\u9012\u5f52\u90fd\u9700\u8981\u5bf9\u5c0f\u6811\u8fdb\u884c\u4e00\u6b21 split\uff0c\u56e0\u800c\u590d\u6742\u5ea6\u4e3a $O(\\log^2n)$\u3002\n\n> \u4ece\u6570\u636e\u7ed3\u6784\u7a33\u5b9a\u6027\u7684\u89d2\u5ea6\u5206\u6790\uff0c\u5b9e\u9645\u4e0a\u7ebf\u6bb5\u6811\u5c31\u662f\u51ed\u81ea\u8eab\u7ed3\u6784\u505a\u5230\u4e86\u6811\u9ad8\u4fdd\u6301\u4e3a $O(\\log n)$ \u7684\u540c\u65f6\uff0c\u8fd8\u80fd\u591f $O(1)$ \u5730\u5206\u88c2\u503c\u57df\u533a\u95f4\uff0c\u800c\u5e73\u8861\u6811\u5219\u9700\u8981\u901a\u8fc7\u542f\u53d1\u5f0f\u5408\u5e76\u7ef4\u62a4\u6811\u9ad8\u4ee5\u53ca split \u5206\u88c2\u503c\u57df\u3002\n\n\u7efc\u5408\u8d77\u6765\u770b\uff0c\u590d\u6742\u5ea6\u5c31\u662f $O(n\\log^2 n)$\u3002\n\n\u7531\u4e8e\u6bcf\u6b21 split \u90fd\u53d1\u751f\u5728\u5c0f\u6811\u4e0a\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u7b2c\u4e8c\u4e2a log \u662f\u5f88\u8dd1\u4e0d\u6ee1\u7684\uff0c\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48 $O(n\\log^2n)$ \u4e5f\u8dd1\u5f97\u6bd4\u8f83\u5feb\u7684\u539f\u56e0\u3002\n\n\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u6bd4\u8d77\u6765\u5f88\u62c9\uff0c\u4f46\u662f\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n)$\u3002\u5927\u6982\u7b97\u662f\u4e00\u4e2a\u4f18\u52bf\u5427\u3002\uff08\u7b11\uff09\n\n~~\uff08\u4f46\u662f\u4f3c\u4e4e\u8fd9\u4e2a treap \u7684\u53ef\u62d3\u5c55\u6027\u66f4\u5f3a\u4e00\u4e9b\uff09~~",
        "postTime": 1650893980,
        "uid": 172124,
        "name": "\u5c0f\u67ef",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5494\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u88c2"
    },
    {
        "content": "### Part 0\uff1a\u524d\u8a00\n01trie \u5c06\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u8f6c\u5316\u4e3a\u5b57\u7b26\u63d2\u5165\u5230\u5b57\u5178\u6811\uff0c\u4ece\u800c\u53ef\u4ee5\u5728\u6811\u4e0a\u4e8c\u5206\uff0c\u5b9e\u73b0\u7c7b\u4f3c\u5e73\u8861\u6811\u7684\u67e5\u8be2\u529f\u80fd\uff0c\u88ab\u79f0\u4e3a\u5e38\u6570\u3001\u7801\u91cf\u4f18\u79c0\uff0c\u5bb9\u6613\u8c03\u8bd5\u7684\u5e73\u8861\u6811\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $O(n\\log_2C)$\uff0c$C$ \u4e3a\u503c\u57df\uff0c\u4ee5\u4e0b\u5747\u540c\u3002\n\n\u672c\u4e0d\u60f3\u5199\u9898\u89e3\uff0c\u4f46\u53ef\u7231\u7684 ydq [\u5199\u4e86](https://mfeitveer.blog.luogu.org/solution-p5494)\uff0c\u4e8e\u662f\u5c31\u4ecb\u7ecd\u4e00\u4e0b,\u4e8b\u5b9e\u8bc1\u660e\u4ed6\u6ca1\u7528 `fread` \u7801\u91cf\u8fd8\u662f\u6bd4\u6211\u5927\u3002\n\n### Part 1\uff1a01trie \u7684\u5408\u5e76\n\n\u5408\u5e76\u7684\u672c\u8d28\u662f\u5bf9\u4e8e\u4e24\u9897 $trie$ \u6c42\u548c\uff0c\u8fc7\u7a0b\u5982\u4e0b\uff1a\n1. \u82e5\u4e24\u68f5\u6811\u6709\u4e00\u68f5\u4e3a\u7a7a\uff0c\u8fd4\u56de\u975e\u7a7a\u7684\u6811\uff1b\n2. \u5426\u5219\uff0c\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u5927\u5c0f\u4e3a\u4e24\u6811\u5927\u5c0f\u548c\uff08\u5927\u5c0f\u6307\u53f6\u5b50\u6570\u91cf\uff0c\u4e0b\u540c\uff09\uff1b\n3. \u9012\u5f52\u5c06\u5de6\u53f3\u513f\u5b50\u5408\u5e76\uff0c\u63a5\u7ed9\u65b0\u5efa\u8282\u70b9\uff1b\n4. \u8fd4\u56de\u65b0\u5efa\u8282\u70b9\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff08\u5c06 $y$ \u5408\u5e76\u7ed9 $x$\uff09\uff1a\n```cpp\nvoid Meg(int &x,int y,int w=W){\n\tif(!x||!y)return void(x|=y);\n\tsz[x]+=sz[y];\n\tif(w--){\n\t\tMeg(t[x][0],t[y][0],w);\n\t\tMeg(t[x][1],t[y][1],w);\n\t}\n}\n```\n\u8003\u8651\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u7531\u4e8e\u6bcf\u4e00\u6b21\u540c\u65f6\u62e5\u6709\uff08\u5373\u8fdb\u5165\u4e86\u7b2c\u4e8c\u6b65\uff09\u7684\u8282\u70b9\u90fd\u4f1a\u4ece\u4e24\u4e2a\u51cf\u5c11\u5230\u4e00\u4e2a\uff0c\u800c\u8282\u70b9\u6570\u662f $O(n\\log_2C)$ \u7684\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f $O(n\\log_2C)$ \u7684\u3002\n\n### Part 2\uff1a01trie \u7684\u5206\u88c2\n\n\u5206\u88c2\u7684\u672c\u8d28\u662f\u50cf fhq \u4e00\u6837\u5c06\u4e00\u68f5 01trie \u6309\u503c\u57df\u5206\u4e3a\u4e24\u68f5 01trie\uff0c\u8fc7\u7a0b\u5982\u4e0b\uff1a\n1. \u8d70\u5230\u7a7a\u5b50\u6811\uff0c\u76f4\u63a5\u8fd4\u56de\u96f6\uff1b\n2. \u8003\u8651\u503c\u57df\u4e0a\u8fd9\u4e00\u4f4d\u662f\u5426\u4e3a\u4e00\uff0c\u5c06\u5de6\u5b50\u6811\u5168\u90e8\u5206\u7ed9\u5de6\u8fb9\u6216\u5c06\u53f3\u5b50\u6811\u5206\u7ed9\u53f3\u8fb9\uff1b\n3. \u672a\u88ab\u76f4\u63a5\u5206\u914d\u7684\u4e00\u68f5\u5b50\u6811\u7ee7\u7eed\u9012\u5f52\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n```cpp\nvoid Spt(int &x,int &y,int nod,int w=W){\n\tif(!nod)return void(x=y=0);\n\tif(w--){\n\t\tif((val>>w)&1){\n\t\t\tx=nod,y=++cnt,Spt(t[x][1],t[y][1],t[x][1],w);\n\t\t}else{\n\t\t\ty=nod,x=++cnt,Spt(t[x][0],t[y][0],t[y][0],w);\n\t\t}\n\t\tsz[x]=sz[t[x][0]]+sz[t[x][1]];\n\t\tsz[y]=sz[t[y][0]]+sz[t[y][1]];\n\t}else x=nod,y=0;\n}\n```\n\u7531\u4e8e\u6bcf\u6b21\u5206\u88c2\u53ea\u4f1a\u589e\u52a0 $O(\\log_2C)$ \u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u662f \u603b\u590d\u6742\u5ea6 $O(n\\log_2C)$ \u7684\u3002\n\n\u800c\u672c\u9898\u503c\u57df\u4e3a $n$\uff0c\u64cd\u4f5c\u6570\u4e3a $m$\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a $O((n+m)\\log_2n)$\u3002\n\n\u9644\u4e0a AC \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+5,T=7e6+7,W=20;\nchar buf[N+5],*p1,*p2,c;\ntypedef long long ll;\n#define int ll\n#define gc (p1==p2&&(p2=(p1=buf)+fread(buf,1,N,stdin),p1==p2)?EOF:*p1++)\ninline ll read(){\n    ll x,f=1;for(c=gc;c<48;c=gc)if(c=='-')f=-f;\n    for(x=0;c>47;x=x*10+(48^c),c=gc);return x*f;\n}\nnamespace trie_01{\n\tint t[T][2],cnt,val,dc;\n\tll sz[T];\n\tvoid Ins(int &x,int w=W){\n\t\tif(!x)x=++cnt;sz[x]+=dc;\n\t\tif(w--)Ins(t[x][(val>>w)&1],w);\n\t}\n\tvoid Meg(int &x,int y,int w=W){\n\t\tif(!x||!y)return void(x|=y);\n\t\tsz[x]+=sz[y];\n\t\tif(w--){\n\t\t\tMeg(t[x][0],t[y][0],w);\n\t\t\tMeg(t[x][1],t[y][1],w);\n\t\t}\n\t}\n\tvoid Spt(int &x,int &y,int nod,int w=W){\n\t\tif(!nod)return void(x=y=0);\n\t\tif(w--){\n\t\t\tif((val>>w)&1){\n\t\t\t\tx=nod,y=++cnt,Spt(t[x][1],t[y][1],t[x][1],w);\n\t\t\t}else{\n\t\t\t\ty=nod,x=++cnt,Spt(t[x][0],t[y][0],t[y][0],w);\n\t\t\t}\n\t\t\tsz[x]=sz[t[x][0]]+sz[t[x][1]];\n\t\t\tsz[y]=sz[t[y][0]]+sz[t[y][1]];\n\t\t}else x=nod,y=0;\n\t}\n\tstruct Trie{\n\t\tint rt;\n\t\tinline void insert(int x,int ct){\n\t\t\tval=x,dc=ct,Ins(rt);\n\t\t}\n\t\tinline void join(Trie &y){Meg(rt,y.rt);}\n\t\tinline int split(int l,int r){\n\t\t\tint L,R;val=l-1,Spt(L,rt,rt),val=r;\n\t\t\tSpt(rt,R,rt),Meg(L,R);swap(rt,L);return L;\n\t\t}\n\t\tinline ll rank(int d){\n\t\t\tint res=0,w=W,x=rt;\n\t\t\twhile(w--)\n\t\t\t\tif((d>>w)&1)res+=sz[t[x][0]],x=t[x][1];\n\t\t\t\telse x=t[x][0];\n\t\t\treturn res;\n\t\t}\n\t\tinline int gval(ll rk){\n\t\t\tif(rk<1||rk>sz[rt])return -1;\n\t\t\tint res=0,w=W,k,x=rt;\n\t\t\twhile(w--){\n\t\t\t\tk=sz[t[x][0]];\n\t\t\t\tif(rk<=k)x=t[x][0];\n\t\t\t\telse rk-=k,x=t[x][1],res|=1<<w;\n\t\t\t}return res;\n\t\t}\n\t}tr[N];\n} // namespace trie_01\nusing trie_01::tr;\nll n,q,cnt=1;\nsigned main(){\n\tll op,x,l,r,k;\n\tn=read(),q=read();\n\tfor(x=1;x<=n;++x)tr[1].insert(x,read());\n\twhile(q--){\n\t\top=read();\n\t\tswitch(op){\n\t\t\tcase 0:x=read(),l=read(),r=read(),tr[++cnt].rt=tr[x].split(l,r);break;\n\t\t\tcase 1:x=read(),k=read(),tr[x].join(tr[k]);break;\n\t\t\tcase 2:x=read(),k=read(),l=read(),tr[x].insert(l,k);\n\t\t\tbreak;\n\t\t\tcase 3:x=read(),l=read(),r=read();\n\t\t\tprintf(\"%lld\\n\",tr[x].rank(r+1)-tr[x].rank(l));break;\n\t\t\tcase 4:x=read(),k=read();printf(\"%d\\n\",tr[x].gval(k));\n\t\t\tdefault:break;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1660183067,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "01trie \u7684\u5408\u5e76\u4e0e\u5206\u88c2"
    },
    {
        "content": "## \u7ebf\u6bb5\u6811\u5206\u88c2\n- \u6570\u636e\u7ed3\u6784\n- \u5e73\u8861\u6811\n- \u7ebf\u6bb5\u6811\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5494)\n\n### \u6574\u4f53\u601d\u8def\n- \u5b9e\u73b0\u52a8\u6001\u5f00\u70b9\n- \u5efa\u6811\uff08\u6839\u8282\u70b9\u4e3a 1\uff09\n- \u5b9e\u73b0\u64cd\u4f5c\u4e00\uff1a\u5206\u88c2\uff08\u5f00\u70b9\uff09\n- \u5b9e\u73b0\u64cd\u4f5c\u4e8c\uff1a\u5408\u5e76\uff08\u5408\u5e76\uff0c\u5220\u70b9\uff09\n- \u5b9e\u73b0\u5e9f\u70b9\u56de\u6536\uff08\u518d\u5229\u7528\uff09\n- \u5b9e\u73b0\u64cd\u4f5c\u4e09\uff1a\u63d2\u5165\uff08\u53f6\u5b50\u7ed3\u70b9\u52a0\u6743\uff09\n- \u5b9e\u73b0\u64cd\u4f5c\u56db\uff1a\u67e5\u627e\u533a\u95f4\u6570\u7684\u4e2a\u6570\uff08\u7ebf\u6bb5\u6811\u533a\u95f4\u548c\uff09\n- \u5b9e\u73b0\u64cd\u4f5c\u4e94\uff1a\u6839\u636e\u6392\u540d\u627e\u539f\u6570\uff08Splay\uff09\n\n#### \u5404\u53d8\u91cf\u610f\u4e49\n```cpp\nconst int o_o=6e5+10;//\u6570\u7ec4\u5927\u5c0f \nint n,m;//\u5e8f\u5217\u957f\u5ea6\uff0c\u64cd\u4f5c\u6b21\u6570 \nstruct po{\n\tint l,r;//\u7ebf\u6bb5\u6811\u8282\u70b9\u5de6\u53f3\u8fb9\u754c \n\tlong long s_m;//\u533a\u95f4\u548c \n}t_r[o_o<<2];\nint x_p=0;//\u6240\u6709\u8282\u70b9\u4e2a\u4e2a\u6570\uff08\u5305\u62ec\u5783\u573e\u6876\u4e2d\u7684\u70b9\uff09 \nint s_m=0;//\u5783\u573e\u6876\u4e2d\u53ef\u7528\u7684\u70b9 \nint r_s[o_o<<2];//\u8282\u70b9\u5783\u573e\u6876 \nint r_t[o_o];//\u8bb0\u5f55\u6bcf\u4e2a\u5e8f\u5217\u7684\u7ebf\u6bb5\u6811\u6839\u8282\u70b9 \nint x_t=1;//\u65b0\u53ef\u91cd\u96c6\u5e8f\u53f7 \nint a_a[o_o];//\u539f\u5e8f\u5217 \n```\n\n#### \u5b9e\u73b0\u52a8\u6001\u5f00\u70b9&\u5e9f\u70b9\u56de\u6536\uff08\u518d\u5229\u7528\uff09\n\u52a8\u6001\u5f00\u70b9\u7528\u6765\u5373\u65f6\u7ed9\u65b0\u8282\u70b9\u8d4b\u4e88\u7f16\u53f7\u3002\u7531\u4e8e\u672c\u9898\u7a7a\u95f4\u8303\u56f4\u8f83\u7d27\u8feb\uff0c\u8981\u8fdb\u884c\u5e9f\u70b9\u7684\u56de\u6536\u5229\u7528\u3002\n\n\u6211\u4eec\u8981\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4\u4e13\u95e8\u7528\u5e9f\u5f03\u7684\u70b9\uff0c\u8981\u65b0\u65f6\u7684\u65f6\uff0c\u5148\u4e0d\u5f00\u65b0\u70b9\uff0c\u5148\u5e9f\u7269\u5229\u7528\u3002\uff08\u65b0\u5f00\u4e00\u4e2a\u8bb0\u5f55\u5e9f\u70b9\u7684\u6570\u7ec4\u8981\u6bd4\u76f4\u63a5\u5f00\u4e24\u4e2a\u5b58\u70b9\u6570\u7ec4\u4f18\u7684\u591a\uff09\u3002\n\n```cpp\nvoid d_l(int &k){//\u5220\u9664\u8282\u70b9 \n\tt_r[k].l=t_r[k].r=t_r[k].s_m=0;//\u6e05\u7a7a\u6570\u636e \n\tr_s[++s_m]=k;//\u653e\u5165\u5783\u573e\u6876 \n\tk=0;//\u8282\u70b9\u7f16\u53f7\u6e05\u7a7a \n}\nint n_w(){//\u8d4b\u65b0\u8282\u70b9\u7f16\u53f7 \n\tif(s_m)return r_s[s_m--];//\u5783\u573e\u6876\u4e2d\u6709\u53ef\u7528\u7684\uff0c\u5148\u56de\u6536\u5229\u7528 \n\treturn ++x_p;//\u9020\u65b0\u70b9 \n}\n```\n\n#### \u5efa\u6811\n\u7ebf\u6bb5\u6811\u57fa\u7840\u64cd\u4f5c\u3002\uff08\u9700\u8981\u590d\u4e60\u7684\u53ef\u4ee5\u770b[\u8fd9\u91cc](https://wdsa001.github.io/2021/09/16/xian-duan-shu/)\uff09\u3002\n\n```cpp\nvoid u_p(int k){//\u66f4\u65b0\u8282\u70b9\u4fe1\u606f \n\tt_r[k].s_m=t_r[t_r[k].l].s_m+t_r[t_r[k].r].s_m;\n}\nvoid b_t(int &k,int l=1,int r=n){\n\tif(!k)k=n_w();//\u4e0d\u5b58\u5728\u8282\u70b9\uff0c\u8d4b\u4e88\u7f16\u53f7 \n\tif(l==r){\n\t\tt_r[k].s_m=a_a[l];//\u53f6\u8282\u70b9\u8d4b\u503c \n\t\treturn;\n\t}\n\tint m_i=(l+r)>>1; \n\tb_t(t_r[k].l,l,m_i);//\u5de6\u5b50\u6811 \n\tb_t(t_r[k].r,m_i+1,r);//\u53f3\u5b50\u6811 \n\tu_p(k);//\u66f4\u65b0\u8282\u70b9\u4fe1\u606f \n}\n```\n\n#### \u5b9e\u73b0\u64cd\u4f5c\u4e00\uff1a\u5206\u88c2\n\u5206\u88c2\u7684\u4e3b\u8981\u601d\u8def\u5728\u4e8e\u52a8\u6001\u5f00\u70b9\u548c\u503c\u7684\u8f6c\u79fb\uff08\u5c06\u539f\u503c\u9644\u5728\u65b0\u6811\u4e0a\u540c\u65f6**\u6e05\u7a7a**\u539f\u70b9\uff08\u4e0d\u662f\u5220\u9664\uff09\uff09\u3002\n\n**\u6ce8\u610f\u66f4\u65b0\u88ab\u5206\u88c2\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u7684\u503c\uff01**\n\n```cpp\nvoid n_t(int &t_1,int &t_2,int x,int y,int l=1,int r=n){//\u5efa\u65b0\u6811\uff0c\u5206\u88c2 \n\tif(r<x||y<l)return;//\u4e0d\u5728\u8303\u56f4\u5185\uff0c\u8fd4\u56de \n\tif(!t_1)return;//\u6811\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de \n\tif(x<=l&&r<=y){//\u5728\u8303\u56f4\u5185 \n\t\tt_2=t_1;//\u8282\u70b9\u8d4b\u503c \n\t\tt_1=0;//\u539f\u8282\u70b9\u6e05\u7a7a \n\t\treturn;\n\t}\n\tif(!t_2)t_2=n_w();//\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u5efa\u65b0\u70b9 \n\tint m_i=(l+r)>>1;\n\tn_t(t_r[t_1].l,t_r[t_2].l,x,y,l,m_i);//\u5de6\u5b50\u6811\u5206\u88c2 \n\tn_t(t_r[t_1].r,t_r[t_2].r,x,y,m_i+1,r);//\u53f3\u5b50\u6811\u5206\u88c2 \n\tu_p(t_1);//\u66f4\u65b0\u8282\u70b9 \n\tu_p(t_2);//\u66f4\u65b0\u8282\u70b9 \n}\n```\n\n#### \u5b9e\u73b0\u64cd\u4f5c\u4e8c\uff1a\u5408\u5e76\n\u5408\u5e76\u7684\u601d\u8def\u4e0e\u5206\u88c2\u7684\u601d\u8def\u5f88\u50cf\u4f46\u533a\u522b\u5728\u4e8e\uff0c\u8282\u70b9\u8981\u5220\u9664\u3002\u539f\u56e0\u5728\u4e8e\u9898\u5e72\uff1a\uff08\u6570\u636e\u4fdd\u8bc1\u5728\u6b64\u540e\u7684\u64cd\u4f5c\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u53ef\u91cd\u96c6 $t$\uff09\u3002\n\n\u6240\u4ee5\uff0c\u8fd9\u4e9b\u7a7a\u51fa\u6765\u7684\u8282\u70b9\u5c31\u53ef\u4ee5\u76f4\u63a5\u56de\u6536\u4e86\u3002**\u4e0d\u4ec5\u8981\u5220\u53f6\u8282\u70b9\uff0c\u8981\u5220\u6240\u6709\u7684\u8282\u70b9**\u3002\n\n```cpp\nvoid b_g(int &t_1,int &t_2,int l=1,int r=n){//\u7ebf\u6bb5\u6811\u5408\u5e76 \n\tif(!t_1||!t_2){//\u6709\u4e00\u68f5\u4e0d\u5b58\u5728 \n\t\tt_1+=t_2;//\u76f4\u63a5\u8d4b\u503c \n\t\treturn;\n\t}\n\tif(l==r){//\u662f\u53f6\u8282\u70b9\uff0c\u5408\u5e76 \n\t\tt_r[t_1].s_m+=t_r[t_2].s_m;\n\t\td_l(t_2);//\u5220\u6389\u88ab\u5408\u5e76\u7684\u8282\u70b9\uff08\u53f6\u5b50\u7ed3\u70b9\uff09 \n\t\treturn;\n\t}\n\tint m_i=(l+r)>>1;\n\tb_g(t_r[t_1].l,t_r[t_2].l,l,m_i);//\u5de6\u5b50\u6811\u5408\u5e76 \n\tb_g(t_r[t_1].r,t_r[t_2].r,m_i+1,r);//\u53f3\u5b50\u6811\u5408\u5e76 \n\td_l(t_2);//\u5220\u6389\u88ab\u5408\u5e76\u7684\u8282\u70b9\uff08\u533a\u95f4\u8282\u70b9\uff09 \n\tu_p(t_1);//\u66f4\u65b0\u8282\u70b9\u4fe1\u606f \n}\n```\n\n#### \u5b9e\u73b0\u64cd\u4f5c\u4e09\uff1a\u63d2\u5165\n\u627e\u5230\u5b50\u53f6\u7f16\u53f7\u4e3a $q$ \u7684\u53f6\u5b50\uff0c\u5c06\u4ed6\u7684\u6743\u503c\uff08\u6216\u8005\u8bf4\u4e2a\u6570\uff09\u52a0\u4e0a $x$ \u5373\u53ef\u3002\n\n```cpp\nvoid a_d(int n_m,int v,int &k,int l=1,int r=n){\n\tif(n_m<l||n_m>r)return;//\u4e0d\u5728\u8303\u56f4\u5185\u8fd4\u56de \n\tif(!k)k=n_w();//\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u65b0\u5efa\u8282\u70b9 \n\tif(l==r){//\u627e\u5230\u53f6\u5b50\u7ed3\u70b9 \n\t\tt_r[k].s_m+=v;//\u52a0\u6743\uff08\u589e\u52a0\u6570\u91cf\uff09 \n\t\treturn;\n\t}\n\tint m_i=(l+r)>>1;\n\ta_d(n_m,v,t_r[k].l,l,m_i);//\u5de6\u5b50\u6811\u7ef4\u62a4 \n\ta_d(n_m,v,t_r[k].r,m_i+1,r);//\u53f3\u5b50\u6811\u7ef4\u62a4 \n\tu_p(k);//\u66f4\u65b0\u8282\u70b9\u4fe1\u606f \n}\n```\n\n#### \u5b9e\u73b0\u64cd\u4f5c\u56db\uff1a\u67e5\u627e\u533a\u95f4\u6570\u7684\u4e2a\u6570\n\u7ebf\u6bb5\u6811\u533a\u95f4\u548c\u64cd\u4f5c\u3002\n\n```cpp\nlong long s_a(int x,int y,int k,int l=1,int r=n){\n\tif(y<l||r<x)return 0;//\u533a\u95f4\u5916\uff0c\u8fd4\u56de \n\tif(!k)return 0;//\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de \n\tif(x<=l&&r<=y)return t_r[k].s_m;//\u88ab\u8303\u56f4\u5305\u542b\uff0c\u8fd4\u56de\u4e2a\u6570 \n\tint m_i=(l+r)>>1;\n\treturn s_a(x,y,t_r[k].l,l,m_i)+s_a(x,y,t_r[k].r,m_i+1,r);//\u8fd4\u56de\u5de6\u53f3\u5b50\u6811\u7b26\u5408\u8981\u6c42\u7684\u548c\uff08\u6b64\u8282\u70b9\u7684\u5b50\u6811\u603b\u8d21\u732e\uff09 \n}\n```\n\n#### \u5b9e\u73b0\u64cd\u4f5c\u4e94\uff1a\u6839\u636e\u6392\u540d\u627e\u539f\u6570\n\u672c\u64cd\u4f5c\u7528\u5230\u4e86\u5e73\u8861\u6811\u7684\u601d\u60f3\uff0c\u5982\u679c\u5de6\u533a\u95f4\u7684\u5927\u5c0f\u6bd4 $k$ \u5927\uff0c\u90a3\u4e48\u6392\u540d\u4e3a $k$ \u7684\u503c\u4e00\u5b9a\u5728\u5176\u4e2d\uff0c\u5426\u5219\u51cf\u53bb\u5de6\u5b50\u6811\u7684\u5927\u5c0f\uff08\u5de6\u8fb9\u7684\u6570\u6392\u540d\u4e00\u5b9a\u6bd4\u5b83\u5c0f\uff09\uff0c\u8df3\u5230\u53f3\u5b50\u6811\u7ee7\u7eed\u627e\u3002\n\n```cpp\nint f_k(long long p_k,int k,int l=1,int r=n){\n\tif(p_k<=0)return -1;//\u672a\u627e\u5230\uff0c\u76f4\u63a5\u8fd4\u56de \n\tif(l==r)return l;//\u627e\u5230\u8282\u70b9\uff0c\u8fd4\u56de\u503c \n\tint m_i=(l+r)>>1;\n\tif(t_r[t_r[k].l].s_m>=p_k)return f_k(p_k,t_r[k].l,l,m_i);//\u5de6\u5b50\u6811\u7684\u6570\u91cf\u8d85\u8fc7 k \u7684\u6392\u540d\u6570\uff0c\u4e00\u5b9a\u5728\u5de6\u5b50\u6811 \n\treturn f_k(p_k-t_r[t_r[k].l].s_m,t_r[k].r,m_i+1,r);//\u51cf\u53bb\u5de6\u5b50\u6811\u7684\u6570\u7684\u6570\u91cf\uff0c\u5728\u53f3\u5b50\u6811\u7ee7\u7eed\u627e \n}\n```\n\n\n### \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<cstdlib>\n#include<queue>\n#include<vector>\nusing namespace std;\nlong long r_r(){//\u5feb\u8bfb \n\tlong long k=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tk=(k<<1)+(k<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn k*f;\n}\nconst int o_o=6e5+10;//\u6570\u7ec4\u5927\u5c0f \nint n,m;//\u5e8f\u5217\u957f\u5ea6\uff0c\u64cd\u4f5c\u6b21\u6570 \nstruct po{\n\tint l,r;//\u7ebf\u6bb5\u6811\u8282\u70b9\u5de6\u53f3\u8fb9\u754c \n\tlong long s_m;//\u533a\u95f4\u548c \n}t_r[o_o<<2];\nint x_p=0;//\u6240\u6709\u8282\u70b9\u4e2a\u4e2a\u6570\uff08\u5305\u62ec\u5783\u573e\u6876\u4e2d\u7684\u70b9\uff09 \nint s_m=0;//\u5783\u573e\u6876\u4e2d\u53ef\u7528\u7684\u70b9 \nint r_s[o_o<<2];//\u8282\u70b9\u5783\u573e\u6876 \nint r_t[o_o];//\u8bb0\u5f55\u6bcf\u4e2a\u5e8f\u5217\u7684\u7ebf\u6bb5\u6811\u6839\u8282\u70b9 \nint x_t=1;//\u65b0\u53ef\u91cd\u96c6\u5e8f\u53f7 \nint a_a[o_o];//\u539f\u5e8f\u5217 \nvoid d_l(int &k){//\u5220\u9664\u8282\u70b9 \n\tt_r[k].l=t_r[k].r=t_r[k].s_m=0;//\u6e05\u7a7a\u6570\u636e \n\tr_s[++s_m]=k;//\u653e\u5165\u5783\u573e\u6876 \n\tk=0;//\u8282\u70b9\u7f16\u53f7\u6e05\u7a7a \n}\nint n_w(){//\u8d4b\u65b0\u8282\u70b9\u7f16\u53f7 \n\tif(s_m)return r_s[s_m--];//\u5783\u573e\u6876\u4e2d\u6709\u53ef\u7528\u7684\uff0c\u5148\u56de\u6536\u5229\u7528 \n\treturn ++x_p;//\u9020\u65b0\u70b9 \n}\nvoid u_p(int k){//\u66f4\u65b0\u8282\u70b9\u4fe1\u606f \n\tt_r[k].s_m=t_r[t_r[k].l].s_m+t_r[t_r[k].r].s_m;\n}\nvoid b_t(int &k,int l=1,int r=n){\n\tif(!k)k=n_w();//\u4e0d\u5b58\u5728\u8282\u70b9\uff0c\u8d4b\u4e88\u7f16\u53f7 \n\tif(l==r){\n\t\tt_r[k].s_m=a_a[l];//\u53f6\u8282\u70b9\u8d4b\u503c \n\t\treturn;\n\t}\n\tint m_i=(l+r)>>1; \n\tb_t(t_r[k].l,l,m_i);//\u5de6\u5b50\u6811 \n\tb_t(t_r[k].r,m_i+1,r);//\u53f3\u5b50\u6811 \n\tu_p(k);//\u66f4\u65b0\u8282\u70b9\u4fe1\u606f \n}\nvoid b_g(int &t_1,int &t_2,int l=1,int r=n){//\u7ebf\u6bb5\u6811\u5408\u5e76 \n\tif(!t_1||!t_2){//\u6709\u4e00\u68f5\u4e0d\u5b58\u5728 \n\t\tt_1+=t_2;//\u76f4\u63a5\u8d4b\u503c \n\t\treturn;\n\t}\n\tif(l==r){//\u662f\u53f6\u8282\u70b9\uff0c\u5408\u5e76 \n\t\tt_r[t_1].s_m+=t_r[t_2].s_m;\n\t\td_l(t_2);//\u5220\u6389\u88ab\u5408\u5e76\u7684\u8282\u70b9\uff08\u53f6\u5b50\u7ed3\u70b9\uff09 \n\t\treturn;\n\t}\n\tint m_i=(l+r)>>1;\n\tb_g(t_r[t_1].l,t_r[t_2].l,l,m_i);//\u5de6\u5b50\u6811\u5408\u5e76 \n\tb_g(t_r[t_1].r,t_r[t_2].r,m_i+1,r);//\u53f3\u5b50\u6811\u5408\u5e76 \n\td_l(t_2);//\u5220\u6389\u88ab\u5408\u5e76\u7684\u8282\u70b9\uff08\u533a\u95f4\u8282\u70b9\uff09 \n\tu_p(t_1);//\u66f4\u65b0\u8282\u70b9\u4fe1\u606f \n}\nvoid n_t(int &t_1,int &t_2,int x,int y,int l=1,int r=n){//\u5efa\u65b0\u6811\uff0c\u5206\u88c2 \n\tif(r<x||y<l)return;//\u4e0d\u5728\u8303\u56f4\u5185\uff0c\u8fd4\u56de \n\tif(!t_1)return;//\u6811\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de \n\tif(x<=l&&r<=y){//\u5728\u8303\u56f4\u5185 \n\t\tt_2=t_1;//\u8282\u70b9\u8d4b\u503c \n\t\tt_1=0;//\u539f\u8282\u70b9\u6e05\u7a7a \n\t\treturn;\n\t}\n\tif(!t_2)t_2=n_w();//\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u5efa\u65b0\u70b9 \n\tint m_i=(l+r)>>1;\n\tn_t(t_r[t_1].l,t_r[t_2].l,x,y,l,m_i);//\u5de6\u5b50\u6811\u5206\u88c2 \n\tn_t(t_r[t_1].r,t_r[t_2].r,x,y,m_i+1,r);//\u53f3\u5b50\u6811\u5206\u88c2 \n\tu_p(t_1);//\u66f4\u65b0\u8282\u70b9 \n\tu_p(t_2);//\u66f4\u65b0\u8282\u70b9 \n}\nvoid a_d(int n_m,int v,int &k,int l=1,int r=n){\n\tif(n_m<l||n_m>r)return;//\u4e0d\u5728\u8303\u56f4\u5185\u8fd4\u56de \n\tif(!k)k=n_w();//\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u65b0\u5efa\u8282\u70b9 \n\tif(l==r){//\u627e\u5230\u53f6\u5b50\u7ed3\u70b9 \n\t\tt_r[k].s_m+=v;//\u52a0\u6743\uff08\u589e\u52a0\u6570\u91cf\uff09 \n\t\treturn;\n\t}\n\tint m_i=(l+r)>>1;\n\ta_d(n_m,v,t_r[k].l,l,m_i);//\u5de6\u5b50\u6811\u7ef4\u62a4 \n\ta_d(n_m,v,t_r[k].r,m_i+1,r);//\u53f3\u5b50\u6811\u7ef4\u62a4 \n\tu_p(k);//\u66f4\u65b0\u8282\u70b9\u4fe1\u606f \n}\nlong long s_a(int x,int y,int k,int l=1,int r=n){\n\tif(y<l||r<x)return 0;//\u533a\u95f4\u5916\uff0c\u8fd4\u56de \n\tif(!k)return 0;//\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de \n\tif(x<=l&&r<=y)return t_r[k].s_m;//\u88ab\u8303\u56f4\u5305\u542b\uff0c\u8fd4\u56de\u4e2a\u6570 \n\tint m_i=(l+r)>>1;\n\treturn s_a(x,y,t_r[k].l,l,m_i)+s_a(x,y,t_r[k].r,m_i+1,r);//\u8fd4\u56de\u5de6\u53f3\u5b50\u6811\u7b26\u5408\u8981\u6c42\u7684\u548c\uff08\u6b64\u8282\u70b9\u7684\u5b50\u6811\u603b\u8d21\u732e\uff09 \n}\nint f_k(long long p_k,int k,int l=1,int r=n){\n\tif(p_k<=0)return -1;//\u672a\u627e\u5230\uff0c\u76f4\u63a5\u8fd4\u56de \n\tif(l==r)return l;//\u627e\u5230\u8282\u70b9\uff0c\u8fd4\u56de\u503c \n\tint m_i=(l+r)>>1;\n\tif(t_r[t_r[k].l].s_m>=p_k)return f_k(p_k,t_r[k].l,l,m_i);//\u5de6\u5b50\u6811\u7684\u6570\u91cf\u8d85\u8fc7 k \u7684\u6392\u540d\u6570\uff0c\u4e00\u5b9a\u5728\u5de6\u5b50\u6811 \n\treturn f_k(p_k-t_r[t_r[k].l].s_m,t_r[k].r,m_i+1,r);//\u51cf\u53bb\u5de6\u5b50\u6811\u7684\u6570\u7684\u6570\u91cf\uff0c\u5728\u53f3\u5b50\u6811\u7ee7\u7eed\u627e \n}\nint main(){\n\tn=r_r(),m=r_r();\n\tfor(int i=1;i<=n;i++)a_a[i]=r_r();//\u8bfb\u5165\u5e8f\u5217 \n\tb_t(r_t[1]);//\u4ee5 1 \u4e3a\u6839\u8282\u70b9\u5efa\u6811 \n\tfor(int i=1;i<=m;i++){\n\t\tint op=r_r();\n\t\tif(op==0){\n\t\t\tint p=r_r(),x=r_r(),y=r_r();\n\t\t\tn_t(r_t[p],r_t[++x_t],x,y);//\u5efa\u65b0\u6811 \n\t\t}else if(op==1){\n\t\t\tint p=r_r(),t=r_r();\n\t\t\tb_g(r_t[p],r_t[t]);//\u5408\u5e76\u53ef\u91cd\u96c6 \n\t\t}else if(op==2){\n\t\t\tint p=r_r(),x=r_r(),q=r_r();\n\t\t\ta_d(q,x,r_t[p]);//\u52a0\u6570\u5b57 \n\t\t}else if(op==3){\n\t\t\tint p=r_r(),x=r_r(),y=r_r();\n\t\t\tprintf(\"%lld\\n\",s_a(x,y,r_t[p]));//\u67e5\u8be2\u8303\u56f4\u5185\u6570\u7684\u4e2a\u6570 \n\t\t}else {\n\t\t\tint a_s=0;\n\t\t\tint p=r_r(),k=r_r();\n\t\t\tif(s_a(1,n,r_t[p])<k)a_s=-1;//\u603b\u6570\u4e0d\u591f k \u4e2a\uff0c\u4e0d\u5b58\u5728\u7b2c k \u5c0f \n\t\t\telse a_s=f_k(k,r_t[p]);//\u67e5\u627e\u7b2c k \u5c0f \n\t\t\tprintf(\"%d\\n\",a_s);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1631880911,
        "uid": 120012,
        "name": "\u738b\u5927\u795e\u2014\u2014A001",
        "ccfLevel": 0,
        "title": "P5494 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u88c2\u9898\u89e3"
    },
    {
        "content": "- \u95f2\u8bdd\n\n  \u7ebf\u6bb5\u6811\u53c8\u6709\u65b0\u677f\u5b50\u4e86\uff0c\u8fd9\u662f\u597d\u7684\n  \n  ~~\u4f46\u6211\u5f00\u59cb\u5199\u540e\uff0c\u8fde\u7eed\u7206\u96f6\u4e866\u6b21\uff0c\u6211\u592a\u83dc\u4e86~~\n\n  \u8fd9\u6b21\u8981\u652f\u6301\u7684\u64cd\u4f5c\u5206\u522b\u662f\uff1a\n\n  1.\u7ebf\u6bb5\u6811\u5206\u88c2\n\n  2.\u7ebf\u6bb5\u6811\u5408\u5e76\n\n  3.\u5355\u70b9\u52a0\n\n  4.\u533a\u95f4\u6c42\u548c\n\n   5.\u5168\u5c40kth\uff0c\u4e5f\u5c31\u662f\u7ebf\u6bb5\u6811\u5185\u4e8c\u5206\n \n   2 ~ 5 \u64cd\u4f5c\u90fd\u662f\u6bd4\u8f83\u5e38\u89c1\u7684\uff0c\u4e3b\u8981\u8bf4\u4e00\u4e0b1\u64cd\u4f5c\u600e\u4e48\u529e\n\n- \u7ebf\u6bb5\u6811\u5206\u88c2\n\n   ![](https://cdn.luogu.com.cn/upload/image_hosting/r4rqjq0p.png?x-oss-process=image/resize,m_lfit,h_340,w_450)\n\n   \u6bd4\u5982\u4f60\u6709\u8fd9\u9897\u7ebf\u6bb5\u6811\uff08\u8282\u70b9\u4e0a\u5199\u7684\u662f\u533a\u95f4\u548c\uff09\uff0c\u7136\u540e\u4f60\u8981\u628a $[2,4]$ \u5206\u88c2\u51fa\u6765\n\n  \u90a3\u4e48\u5e94\u8be5\u6709\u8fd9\u51e0\u4e2a\u6b65\u9aa4\uff1a\n\n  1.\u627e\u51fa\u8981\u5206\u88c2\u7684\u51e0\u4e2a\u5b50\u6811\u7684\u6839\uff0c\u4e5f\u5c31\u662f 9,5,6 \u8282\u70b9\n\n  2.\u5220\u53bb\u539f\u7ebf\u6bb5\u6811\u4e0a\u8fd9\u51e0\u4e2a\u533a\u95f4\u7684\u8d21\u732e\n\n  3.\u628a\u65b0\u7ebf\u6bb5\u6811\u4e0a\u5c42\u7684\u4e00\u4e9b\u8282\u70b9\u5efa\u597d\uff0c\uff08\u6307pushup\uff09\uff0c\u7136\u540e\u6307\u5411\u5206\u88c2\u51fa\u7684\u5b50\u6811\u7684\u6839\n\n  \u5206\u88c2\u5b8c\u662f\u8fd9\u6837\u7684\uff0c\u7ea2\u8272\u8282\u70b9\u8868\u793a\u65b0\u5efa\uff0c\u7ea2\u8272\u8fb9\u8868\u793a\u65b0\u8fde\uff1a\uff08\u7f16\u53f7\u795e\u9690\u4e86\uff09\n  \n  ![](https://cdn.luogu.com.cn/upload/image_hosting/v4scop7y.png?x-oss-process=image/resize,m_lfit,h_340,w_450)\n\n  \u611f\u89c9\u8d85\u7ea7\u50cf\u4e3b\u5e2d\u6811\n  \n  \u4e5f\u786e\u5b9e\u53ef\u4ee5\u5b66\u4e60\u4e3b\u5e2d\u6811\u7684\u505a\u6cd5\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\u6bcf\u9897\u7ebf\u6bb5\u6811\u7684\u6839\n\n- \u5408\u5e76\u590d\u6742\u5ea6\u5206\u6790\n\n  \u56e0\u4e3a\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u590d\u6742\u5ea6\u8c8c\u4f3c\u633a\u7384\u5b66\u7684\uff0c\u6211\u6765\u666e\u53ca\u4e00\u4e0b\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u590d\u6742\u5ea6\u5206\u6790\n \n  \u4ec5\u5f53\u4e24\u9897\u7ebf\u6bb5\u6811\u5728\u76f8\u540c\u7684\u8282\u70b9\u90fd\u6709\u503c\u65f6\uff0c\u5408\u5e76\u624d\u9700\u8981\u82b1\u8d39\u65f6\u95f4\uff0c\u5426\u5219\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u6709\u503c\u7684\u4e00\u8fb9\n\n  \u4e5f\u5c31\u662f\u8bf4\uff0c\u5408\u5e76\u4e00\u6b21\uff0c\u603b\u8282\u70b9\u6570\u91cf\u51cf\u5c111\n\n  \u4e00\u64cd\u4f5c\u4f1a\u5728\u65b0\u7ebf\u6bb5\u6811\u4e0a\uff0c\u589e\u52a0 $\\log n$ \u4e2a\u8282\u70b9\n\n  \u4e09\u64cd\u4f5c\u4f1a\u589e\u52a0\u4e00\u6761\u94fe\u7684\u8282\u70b9\uff0c\u4e5f\u662f $\\log n$ \u4e2a\n\n  \u6240\u4ee5\u603b\u8282\u70b9\u6570\u4e0d\u8d85\u8fc7 $n + m \\log n$\uff0c\u5408\u5e76\u603b\u590d\u6742\u5ea6\u4e0d\u8d85\u8fc7 $n + m \\log n$\n  \ncode\uff1a\n\n```cpp\n#include <cstdio>\n#define ll long long\n#define ls tree[rt].l\n#define rs tree[rt].r\nint n,m;\nint c = 1;\nint T[200005];\n\nint cnt;\nstruct node{\n\tll val;\n\tint l,r;\n}tree[400005 << 5];\n\nint Q(int &x) {if(x == 0) x = ++cnt;}\n\nvoid pushup(int rt){\n\ttree[rt].val = tree[ls].val + tree[rs].val;\n}\n\nint build(int l,int r){\n\tint rt = ++cnt;\n\tif(l == r){\n\t\tscanf(\"%lld\",&tree[rt].val);\n\t\treturn rt;\n\t}\n\tint mid = l + r >> 1;\n\tls = build(l,mid);\n\trs = build(mid + 1,r);\n\tpushup(rt);\n\treturn rt;\n}\n\nint spilt(int Q,int l,int r,int L,int R){\n    int rt = ++cnt;\n    if(l == L && r == R){\n    \ttree[rt] = tree[Q];\n    \ttree[Q].val = tree[Q].l = tree[Q].r = 0;\n    \treturn rt;\n\t}\n\tint mid = l + r >> 1;\n\tif(R <= mid){\n\t\tls = spilt(tree[Q].l,l,mid,L,R);\n\t}else if(L > mid){\n\t\trs = spilt(tree[Q].r,mid+1,r,L,R);\n\t}else{\n\t\tls = spilt(tree[Q].l,l,mid,L,mid);\n\t\trs = spilt(tree[Q].r,mid+1,r,mid+1,R);\n\t}\n\tpushup(rt);pushup(Q);\n\treturn rt;\n}\n\nint merge(int x,int y){\n\tif(!x) return y;\n\tif(!y) return x;\n\tint rt = ++cnt;\n\ttree[rt].val = tree[x].val + tree[y].val;\n\tls = merge(tree[x].l,tree[y].l);\n\trs = merge(tree[x].r,tree[y].r);\n\treturn rt;\n}\n\nvoid upload(int rt,int l,int r,int id,int C){\n\ttree[rt].val += C;\n\tif(l == r){\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tif(id <= mid){\n\t\tQ(ls);\n\t\tupload(ls,l,mid,id,C);\n\t}else{\n\t\tQ(rs);\n\t\tupload(rs,mid+1,r,id,C);\n\t}\n}\n\nll query(int rt,int l,int r,int L,int R){\n\tif(l == L && r == R){\n\t\treturn tree[rt].val;\n\t}\n\tint mid = l + r >> 1;\n\tif(R <= mid){\n\t\treturn query(ls,l,mid,L,R);\n\t}else if(L > mid){\n\t\treturn query(rs,mid+1,r,L,R);\n\t}else{\n\t\treturn query(ls,l,mid,L,mid) + query(rs,mid+1,r,mid+1,R);\n\t}\n}\n\nint kth(int rt,int l,int r,ll k){\n\tif(l == r){\n\t\treturn l;\n\t}\n\tint mid = l + r >> 1;\n\tif(tree[ls].val >= k){\n\t\treturn kth(ls,l,mid,k);\n\t}else{\n\t\treturn kth(rs,mid+1,r,k - tree[ls].val);\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tT[1] = build(1,n);\n\tint opt,p,x,y;\n\tfor(int i = 1;i <= m;i++){\n\t\tscanf(\"%d%d\",&opt,&p);\n\t\tif(opt == 0){\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tT[++c] = spilt(T[p],1,n,x,y);\n\t\t}else if(opt == 1){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tT[p] = merge(T[p],T[x]);\n\t\t}else if(opt == 2){\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tupload(T[p],1,n,y,x);\n\t\t}else if(opt == 3){\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tprintf(\"%lld\\n\",query(T[p],1,n,x,y));\n\t\t}else{\n\t\t\tll k;\n\t\t\tscanf(\"%lld\",&k);\n\t\t\tif(query(T[p],1,n,1,n) < k) printf(\"-1\\n\");\n\t\t\telse printf(\"%d\\n\",kth(T[p],1,n,k));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u5206\u88c2\u7684\u590d\u6742\u5ea6\u662f\u6bd4\u5e73\u8861\u6811\u4f18\u79c0\u7684\uff0c\u5e73\u8861\u6811\u8c8c\u4f3c\u53c8\u5c11\u4e86\u4e2a\u4f18\u52bf",
        "postTime": 1585381123,
        "uid": 49776,
        "name": "chenxinyang2006",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5494 \u3010\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u88c2\u3011"
    },
    {
        "content": "# \u3010\u9898\u89e3\u3011\u7ebf\u6bb5\u6811\u5206\u88c2\n[\u535a\u5ba2\u4f20\u9001\u95e8](https://dying.blog.luogu.org/post-ti-xie-xian-duan-shu-fen-lie)\n\n~~\u8fd9\u91cc\u7adf\u7136\u6ca1\u6709\u6307\u9488\u9898\u89e3\uff0c\u8d76\u5feb\u6c34\u4e00\u53d1~~\n\n**\u6709\u5408\u5e76\u590d\u6742\u5ea6\u8bc1\u660e\uff01\uff01\uff01**\n\n\u5148\u5410\u69fd\u4e00\u53e5\uff1a\u5176\u4ed6\u56fe\u7247\u611f\u89c9\u7528\u5904\u4e0d\u5927\uff0c\u849f\u84bb\u5b66\u4e60\u7684\u65f6\u5019\u770b\u56fe\u6c38\u8fdc\u770b\u4e0d\u61c2\uff0c\u4ee3\u7801\u4e00\u770b\u5c31\u61c2\n## \u524d\u7f6e\u829d\u58eb\uff1a**\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811**\n\n\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u6211\u7528\u6307\u9488\u65f6\u4e3a\u4e86\u9632\u6b62RE\u7684\u5c0f\u6280\u5de7\n```cpp\nstruct node{\n    int val;\n    node*son[2];\n};\nnode*null=new node();\n\n*null=(node){0,{null,null}};\n\nnode*New(){node*p=new node;*p={0,null,null};return p;}\n```\n\u8fd9\u6837\u5c31\u907f\u514d\u4e86RE\uff0c\u5199\u4ee3\u7801\u5c06\u4f1a\u65b9\u4fbf\u5f88\u591a\uff0c\u6bd4\u5982```push_up()```\u5c31\u53ef\u4ee5\u76f4\u63a5```p->val=p->son[0]->val+p->son[1]->val;```~~\uff08\u4f46\u8fd9\u6837\u4f1a\u8ba9\u4f60\u5185\u5b58\u8bbf\u95ee\u4e0d\u90a3\u4e48\u8fde\u7eed\uff0c\u4e00\u9053\u9898\u53ef\u80fd\u4f1a\u6162\u4e2a\u4e00\u4e24\u6beb\u79d2\uff09~~\n\n**\u4e00\u5b9a\u8981\u8bb0\u4f4f\u624b\u52a8\u5b9a\u4e49\u7684 $null$ \u4e0d\u80fd\u5728 ```new``` \u7684\u62ec\u53f7\u91cc\u8d4b\u503c\uff0c\u90a3\u65f6\u7684 $null$ \u662f\u7a7a\u6307\u9488\uff0c\u540e\u679c\u5c31\u662f $null$ \u7684\u5de6\u53f3\u513f\u5b50\u5c31\u5c06\u88ab\u8d4b\u503c\u4e3a\u7a7a\u6307\u9488\uff01\u8fd9\u9053\u9898\u5f71\u54cd\u4e0d\u5927\uff0c\u53ea\u8981\u67e5\u8be2\u65f6\u65f6\u523b\u5224\u4e86\u6307\u9488\u662f\u5426\u4e3a $null$ \u5c31\u6ca1\u95ee\u9898\uff0c\u4f46\u5e73\u8861\u6811\u4e4b\u7c7b\u7684\u5c31\u7279\u522b\u5bb9\u6613RE**\n\n\u672c\u4eba\u559c\u6b22```struct```\uff0c\u6240\u4ee5\u9664\u4e86\u4e0a\u9762\u653e\u7684\u90a3\u6bb5\u4ee3\u7801\u548c\u4e3b\u51fd\u6570\uff0c\u5176\u4ed6\u90fd\u5c01\u8d77\u6765\u4e86\n```cpp\nstruct split_segment_tree{\n    int n;//\u8fd9\u4e2a\u6811\u7684\u503c\u57df\u8303\u56f4\n    node*root;\n    node*New(){node*p=new node;*p={0,null,null};return p;}\n    split_segment_tree(){root=New();}//\u6784\u9020\u51fd\u6570\uff0c\u6bcf\u65b0\u5efa\u4e00\u4e2a\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5c31\u4f1a\u5148\u6267\u884c\u8fd9\u4e2a\u51fd\u6570\n    void de(node*&p){//\u9012\u5f52\u5220\u9664\n    \tif(p==null)return;//null\u4e0d\u80fd\u5220\u9664\uff08\u6bd5\u7adf\u662f\u4fdd\u547d\u795e\u5668\uff09\n    \tde(p->son[1]),de(p->son[0]);\n    \tdelete p;\n    }\n    ~split_segment_tree(){de(root);}//\u6790\u6784\u51fd\u6570\uff0c\u5728delete\u65f6\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\n    inline void build(int length){n=length;}//\u522b\u614c\uff0c\u8fd9\u4e2a\u4e0d\u662f\u771f\u6b63\u7684build\uff0c\u4e3a\u51cf\u5c11\u7801\u91cf\uff0c\u6211\u6ca1\u5199build\n    inline void push_up(node*p){\n        p->val=p->son[0]->val+p->son[1]->val;\n    }\n    inline int size(){return root->val;}\n};\n```\n\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u6211\u5b9a\u4e49\u7684\u6307\u9488```split_segment_tree*T[200010];```\n## \u5206\u88c2\u64cd\u4f5c\n\u9aa8\u67b6\u548c\u7ebf\u6bb5\u6811\u533a\u95f4\u64cd\u4f5c\u6ca1\u4ec0\u4e48\u533a\u522b\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\n```cpp\n\tvoid spt(int l,int r,int left,int right,node*&p,node*&q){//q\u8981\u5f15\u7528\u4f20\u53c2\uff0cp\u4e0d\u9700\u8981\uff0c\u4f46\u6211\u559c\u6b22hhh\n\t\tif(p==null)return; //\u539f\u6811\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u76f4\u63a5\u8fd4\u56de\n\t\tif(l<=left&&right<=r){q=p,p=null;return;}//\u5982\u679c\u5168\u90e8\u5305\u542b\uff0c\u76f4\u63a5\u6362\u8282\u70b9\uff08\u8fd9\u662f\u5206\u88c2\uff0c\u4e0d\u662f\u590d\u5236\uff0c\u5206\u88c2\u539f\u6811\u8282\u70b9\u5c31\u4f1a\u6d88\u5931\uff0c\u4e0d\u4f1a\u51b2\u7a81\uff09\n\t\t//\u8fd9\u540e\u9762\u5c31\u548c\u533a\u95f4\u52a0\u6cd5\u4e00\u6837\u4e86\n\t\tif(q==null)q=New();//\u5176\u5b9eq\u80af\u5b9a\u662f\u7a7a\u7684\uff0c\u4e0d\u9700\u8981\u5224\u65ad\n\t\tint mid=left+right>>1;\n\t\tif(l<=mid)spt(l,r,left,mid,p->son[0],q->son[0]);\n\t\tif(r>mid)spt(l,r,mid+1,right,p->son[1],q->son[1]);\n\t\tpush_up(q),push_up(p);//\u4e0d\u8981\u5fd8\u4e86\u4e24\u68f5\u6811\u90fd\u8981push_up\uff01\uff01\uff01\n\t}\n\tinline void split(split_segment_tree*&T2,int l,int r,int lenth){\n\t\tT2=new split_segment_tree;//\u6784\u5efa\u4e00\u9897\u65b0\u6811\uff08\u4e0a\u8fb9\u5199\u4e86\u6784\u9020\u51fd\u6570\uff0c\u4f1a\u65b0\u5efa\u4e00\u4e2a\u6839\u8282\u70b9\uff09\n\t\tT2->build(lenth);//\u786e\u5b9a\u8303\u56f4\n\t\tspt(l,r,1,n,root,T2->root);//\u5206\u88c2\u64cd\u4f5c\n\t}\n    \n```\n\u770b\u4ed6\u548c\u533a\u95f4\u52a0\u6cd5\u957f\u5f97\u591a\u50cf\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(\\log_2n)$\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\n## \u5408\u5e76\u64cd\u4f5c\n~~\u6211\u66f4\u613f\u610f\u628a\u5b83\u53eb\u505a\u541e\u5e76\uff0c\u6bd5\u7adf\u6709\u4e00\u65b9\u4f1a\u76f4\u63a5\u6b7b\u6389~~\n\n\u4ee3\u7801\u66f4\u7b80\u5355\n\ncode\uff1a\n```cpp\n\tvoid mge(node*&p,node*&q){//\u4e0d\u7528\u5f15\u7528\uff0c\u4f46\u6211\u559c\u6b22\n\t\tif(q==null)return;//\u88ab\u541e\u7684\u4e00\u65b9\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u4e00\u70b9\u90fd\u4e0d\u597d\u5403\n\t\tif(p==null){p=q,q=null;return;}//\u81ea\u5df1\u6ca1\u6709\uff0c\u76f4\u63a5\u8fde\u6839\u62a2\u5b8c\n\t\tmge(p->son[0],q->son[0]),mge(p->son[1],q->son[1]);\n\t\tp->val+=q->val;//\u81ea\u5df1\u513f\u5b50\u62a2\u7684\u8bb0\u4e2a\u6570\n\t}\n\tvoid merge(split_segment_tree*T2){\n\t\tmge(root,T2->root);\n\t\tdelete T2;//\u5199\u4e86\u6790\u6784\u51fd\u6570\uff0c\u4f1a\u91ca\u653e\u6240\u6709\u5185\u5b58\n\t}\n```\n\u91cd\u70b9\uff01\u806a\u660e\u7684\u4f60\uff0c\u4e00\u5b9a\u770b\u51fa\u6765\u95ee\u9898\u6765\u4e86\uff0c\u7ebf\u6bb5\u6811\u8282\u70b9\u6700\u591a\u6709 $2n$ \u4e2a\uff0c\u90a3\u8fd9\u6bb5\u4ee3\u7801\u6700\u574f\u60c5\u51b5\u5c31\u662f $O(n)$ \u7684\uff0c\u6216\u8bb8\u8fd8\u5e26\u5927\u5e38\u6570\uff0c\u90a3\u5c82\u4e0d\u662f\u76f4\u63a5T\u98de\uff1f\n\n\u7136\u9e45\u5408\u5e76\u5e76\u4e0d\u4f1a\u5f71\u54cd\u603b\u590d\u6742\u5ea6\uff0c\u8bc1\u660e\uff1a\n\n>**\u8bc1\u660e\u6210\u7acb\u6761\u4ef6\uff1a\u5408\u5e76\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u6700\u591a\u5e26\u6765\u7684\u5408\u5e76\u8d1f\u62c5\u662f $O(\\log_2n)$**\n\n>\u521d\u59cb\u72b6\u6001\u6709\u53ea\u6709\u4e00\u68f5\u6811\u53ef\u80fd\u662f\u6ee1\u7684\uff0c\u5176\u4ed6\u5168\u662f\u7a7a\u6811\uff0c\u6240\u4ee5\u521a\u5f00\u59cb\u4e0d\u5b58\u5728\u4e00\u5927\u5806\u6ee1\u6811\u5408\u5e76\uff0c\u4e4b\u540e\u5462\uff1f\n\n>\u6ce8\u610f\u8fd9\u9053\u9898\u7684\u5176\u4ed6\u64cd\u4f5c\uff1a\n\n>- **\u5355\u70b9**\u63d2\u5165\n\n>>\u4e00\u6b21\u63d2\u5165\u65f6\u95f4\u590d\u6742\u5ea6$O(\\log_2n)$,\u6700\u591a\u53ea\u4f1a\u65b0\u5efa1\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u7ed9\u4e00\u6b21\u5408\u5e76\u5e26\u6765\u7684\u8d1f\u62c5\u6700\u591a\u53ea\u6709$O(\\log_2n)$\uff0c\u800c\u4e14\u8981\u8fbe\u5230$O(\\log_2n)$\u8fd8\u9700\u8981\u6ee1\u8db3\u53e6\u4e00\u68f5\u6811\u7684\u5bf9\u5e94\u7684\u53f6\u5b50\u8282\u70b9\u5728\uff0c\u5982\u679c\u6709\u4e00\u65b9\u662f\u7a7a\u7684\uff0c\u5c31\u76f4\u63a5```return```\u6389\u4e86\u3002\u6240\u4ee5\u5bf9\u4e8e\u4e24\u9897\u7a7a\u6811\u9700\u8981\u63d2\u5165\u4e24\u6b21\uff0c\u56e0\u4e3a\u5f00\u59cb\u53ea\u6709\u4e00\u68f5\u6811\u662f\u6ee1\u7684\uff0c\u5b83\u548c\u5176\u4ed6\u6811\u8fdb\u884c\u5408\u5e76\u5982\u679c\u6bcf\u4e2a\u8282\u70b9\u5982\u679c\u4f1a\u5e26\u6765\u8d1f\u62c5\uff0c\u4e5f\u9700\u8981\u4e00\u6b21\u63d2\u5165\u64cd\u4f5c\u3002\u6240\u4ee5\u5982\u679c\u8fd9\u6b21\u64cd\u4f5c\u590d\u6742\u5ea6\u4e3a$O(x\\log_2n)$\u7684\u8bdd\uff0c\u81f3\u5c11\u8fdb\u884c\u4e86 $x$ \u6b21\u63d2\u5165\u64cd\u4f5c\uff08\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u64cd\u4f5c\u7684\u8bdd\uff09\uff0c\u5176\u590d\u6742\u5ea6\u53ef\u4ee5\u5747\u644a\u5728\u6bcf\u4e00\u4e2a\u63d2\u5165\u64cd\u4f5c\u4e0a\uff0c\u4e0d\u81f3\u4e8e\u5f71\u54cd\u603b\u590d\u6742\u5ea6\u3002\n\n>- \u5206\u88c2\n\n>>\u81f3\u4e8e\u5206\u88c2\uff0c\u590d\u6742\u5ea6$O(\\log_2n)$\uff0c\u91cd\u70b9\u5728\u4e8e\uff0c\u5206\u88c2\u540e\u539f\u6811\u88ab\u5206\u88c2\u7684\u53f6\u5b50\u8282\u70b9\u5c31\u4e0d\u5728\u4e86\uff0c\u6240\u4ee5\u518d\u5408\u5e76\u65f6\u88ab\u5206\u88c2\u6389\u7684\u53f6\u5b50\u5c06\u4e0d\u4f1a\u5360\u7528\u65f6\u95f4\uff0c\u6240\u4ee5\u5206\u88c2\u4e0d\u4f1a\u5bf9\u4e00\u6b21\u5408\u5e76\u4ea7\u751f\u5f71\u54cd\uff01\uff01\uff01\u5408\u5e76\u88ab\u5206\u88c2\u7684\u53f6\u5b50\u8282\u70b9\u4f1a\u82b1\u8d39\u65f6\u95f4\u5f53\u4e14\u4ec5\u5f53\u5728\u6b64\u4f4d\u7f6e\u518d\u8fdb\u884c\u63d2\u5165\u65f6\uff0c\u590d\u6742\u5ea6\u540c\u6837\u53ef\u4ee5\u5747\u644a\u5728\u63d2\u5165\u4e0a\u3002\n\n>- \u67e5\u8be2\n\n>>\u8fd9\u4e2a\u5c31\u4e0d\u7528\u6211\u8bf4\u4e86\u5427\uff0c\u8fde\u4e2a\u61d2\u6807\u8bb0\u90fd\u6ca1\u6709\uff0c\u4e0d\u4f1a\u65b0\u5efa\u8282\u70b9\uff0c\u6574\u68f5\u6811\u90fd\u4e0d\u4f1a\u6539\u53d8\uff0c\u80af\u5b9a\u6ca1\u6709\u5f71\u54cd\u3002\n\n>\u7efc\u4e0a\uff0c```merge```\u64cd\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u8bc1\u6bd5\u3002\n\n## kth\n\u8fd9\u4e2a\u5728\u5176\u4ed6\u9898\u4e2d\u51fa\u73b0\u8f83\u591a\uff0c\u7279\u522b\u662f\u6811\u5957\u6811\u7684\u9898\u76ee\u3002\n```cpp\n\tint gal(int k,int l,int r,node*p){\n\t\tif(l==r)return l;//\u9012\u5f52\u5230\u53f6\u5b50\u7ed3\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de\u503c\n\t\tint mid=l+r>>1;\n\t\tif(p->son[0]->val>=k)return gal(k,l,mid,p->son[0]);//\u5982\u679c\u5de6\u5b50\u6811\u6bd4k\u5927\uff0c\u90a3\u7b2ck\u5927\u7684\u6570\u4e00\u5b9a\u5728\u5de6\u5b50\u6811\uff08\u8fd9\u662f\u6743\u503c\u7ebf\u6bb5\u6811\uff01\uff01\uff01\uff09\n\t\telse return gal(k-p->son[0]->val,mid+1,r,p->son[1]);//\u641c\u7d22\u53f3\u5b50\u6811\uff08\u8bb0\u5f97\u51cfk\uff01\uff01\uff01\uff09\n\t}\n\tinline int get_val(int k){return k>size()?-1:gal(k,1,n,root);}\n\t//\u5982\u679c\u6bd4size\u90fd\u5927\uff0c\u76f4\u63a5\u8fd4\u56de-1\n```\n## \u63d2\u5165\u548c\u67e5\u8be2\n\u8fd9\u4e2a\u5c31\u548c\u666e\u901a\u6743\u503c\u7ebf\u6bb5\u6811\u4e00\u6a21\u4e00\u6837\u4e86\uff0c\u4e0d\u518d\u8d58\u8ff0\n\n\u67e5\u8be2\u7684\u4ee3\u7801\u653e\u4e00\u4e0b\uff0c\u91cc\u9762\u6709\u4e2a\u8981\u63d0\u793a\u7684\u4e1c\u897f\n```cpp\n\tint sch(int l,int r,int left,int right,node*p){\n\t\tif((l<=left&&right<=r)||p==null)return p->val;//\u5982\u679c\u8fd9\u91cc\u6ca1\u5224\u65adnull\uff0c\u800c\u4e14\u4e4b\u524dnull\u7684\u5b50\u8282\u70b9\u8fd8\u662f\u7a7a\u7684\uff080x0\uff09\u7684\u8bdd\uff0cRE\u662f\u8dd1\u4e0d\u4e86\u7684\u3002\n\t\tint mid=left+right>>1,ans=0;\n\t\tif(l<=mid)ans=sch(l,r,left,mid,p->son[0]);\n\t\tif(r>mid)ans+=sch(l,r,mid+1,right,p->son[1]);\n\t\treturn ans;\n\t}\n\tinline int search(int l,int r){return sch(l,r,1,n,root);}\n```\n## \u7b80\u6d01\u7684main\n```cpp\nsigned main(){\n\t*null=(node){0,{null,null}};\n\tT[1]=new split_segment_tree;\n\tT[1]->build(n);\n\tfor(int i=1;i<=n;i++){\n\t\tint a=read();\n\t\tif(a)T[1]->insert(i,a);//\u6ca1\u6709\u5c31\u4e0d\u7528\u52a0\u4e86\uff0c\u5176\u5b9e\u8fd9\u4e0d\u4e00\u5b9a\u6bd4build\u8981\u6162\n\t}\n\twhile(m--){\n\t\tint op=read(),p=read();\n\t\tswitch(op){\n\t\t\tcase 0:{\n\t\t\t\tint l=read(),r=read();\n\t\t\t\tT[p]->split(T[++idx],l,r,n);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 1:{\n\t\t\t\tint t=read();\n\t\t\t\tT[p]->merge(T[t]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2:{\n\t\t\t\tint x=read(),q=read();\n\t\t\t\tT[p]->insert(q,x);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3:{\n\t\t\t\tint x=read(),y=read();\n\t\t\t\tprint(T[p]->search(x,y)),putchar('\\n');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 4:{\n\t\t\t\tint k=read();\n\t\t\t\tprint(T[p]->get_val(k)),putchar('\\n');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn~EOF;\n}\n```\n$\\color{Red}{\\text{\u5b8c\u7ed3\u6492\u82b1}}$\uff01\uff01\uff01",
        "postTime": 1622511953,
        "uid": 85593,
        "name": "dying",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011\u7ebf\u6bb5\u6811\u5206\u88c2"
    },
    {
        "content": "## \u8bf4\u5728\u524d\u9762\u7684\uff1a\n\u672c\u6587\u4e3b\u8981\u8bf4\u660e\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u5408\u5e76 $(merge)$ \u548c\u5206\u88c2 $(split)$ \u3002\u4e3b\u8981\u662f\u8d77\u629b\u7816\u5f15\u7389\u7684\u4f5c\u7528\u3002\u672c\u6587\u53c2\u8003\u7684\u4ee3\u7801\u8f83\u591a\uff0c\u82e5\u4ee3\u7801\u96f7\u540c\u8bf7\u52ff\u5728\u610f\u3002\u82e5\u683c\u5f0f\u70b8\u4e86\uff0c\u8bf7\u89c1[\u535a\u5ba2](https://www.luogu.com.cn/blog/xzc/quan-zhi-xian-duan-shu)\n\u3002\n## \u7ebf\u6bb5\u6811\u57fa\u672c\u95ee\u9898\n\u4f5c\u4e3a\u6211\u4eec\u8f83\u5148\u63a5\u89e6\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5927\u4f53\u7684\u7528\u9014\u4f8b\u5982\uff1a\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u3002\u60f3\u5fc5\u5927\u5bb6\u4e5f\u5e94\u8be5\u4f1a\u4e86\uff0c\u8fd9\u91cc\u4e0d\u505a\u591a\u7684\u4ecb\u7ecd\u3002\n## \u7a7a\u95f4\u95ee\u9898\n\u4e00\u822c\u7ebf\u6bb5\u6811\u5f00 $4\\times n$ \u7684\u7a7a\u95f4\u5176\u539f\u56e0\u5728\u4e8e\uff1a\u7ebf\u6bb5\u6811\u662f\u4e00\u9897\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\u4ee5\u4e0b\u662f\u62d9\u52a3\u7684\u8bc1\u660e\uff1a\n\u7531\u4e8e\u7ebf\u6bb5\u6811\u6df1\u5ea6\u4e3a $\\ulcorner \\log_{2} n\\urcorner$ \u6240\u4ee5\u4e00\u5171\u5c31\u6709 $2^{\\ulcorner \\log_2 n \\urcorner+1}-1$ \u4e2a\u8282\u70b9\uff0c $\\frac{2^{\\ulcorner \\log_2 n \\urcorner+1}-1}{n}$ \u7684\u6700\u5927\u503c\u5728 $n=2^k-1$ \u662f\u53d6\u5230\uff0c\u6240\u4ee5 \n$$\n\\frac{2^{\\ulcorner \\log_2 n \\urcorner+1}-1}{n}=\\frac{2^{\\log k+2}-1}{2^k-1} = \\frac{2^k \\times 4-1}{2^k-1} = 4+ \\frac{3}{2^k-1}\n$$\n\u6240\u4ee5\u4e00\u822c\u7ebf\u6bb5\u6811\u5f00\u56db\u500d\u7a7a\u95f4\u662f\u4e3a\u4e86\u5b89\u5168\u3002\u800c\u719f\u7ec3\u4ee5\u540e\u5c31\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u3002\n## \u65f6\u95f4\u95ee\u9898\n\u4e00\u822c\u7ebf\u6bb5\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u7531\u6811\u9ad8\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u8fd9\u4e5f\u89e3\u91ca\u4e86\u7ebf\u6bb5\u6811 $O(\\log n)$ \u7684\u5355\u6b21\u67e5\u8be2\u6216\u4fee\u6539\u3002\n# \u6743\u503c\u7ebf\u6bb5\u6811\n\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u4f60\u53ef\u4ee5\u7406\u6027\u7406\u89e3\u4e3a\u4e00\u4e2a\u7531\u7ebf\u6bb5\u6811\u5b9e\u73b0\u7684 $\\text{\u6876}$ \u3002\u6bcf\u4e00\u4e2a\u8282\u70b9\u4fdd\u5b58\u7684\u662f\u503c\u5927\u5c0f\u5728\u7ba1\u8f96\u533a\u95f4\u4e2d\u7684\u4e2a\u6570\uff0c\u90a3\u4e48\u53f6\u8282\u70b9\u7684\u7f16\u53f7\u4e5f\u5c31\u662f\u8fd9\u4e2a\u503c\u7684\u4e2a\u6570\u3002\n## \u67e5\u8be2\u7b2c K \u5c0f\u503c\n\u6709\u4e86\u6743\u503c\u7ebf\u6bb5\u6811\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u5b83\u505a\u4e00\u4e9b\u64cd\u4f5c \u3002\u67e5\u8be2\u7b2c K \u5c0f\u7684\u503c\uff0c\u5199\u6cd5\u4e0e\u5e73\u8861\u6811\u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u4e0e\u5de6\u5b50\u6811\u6bd4\u8f83\u5927\u5c0f\u6765\u51b3\u5b9a\u5411\u5de6\u8fd8\u662f\u5411\u53f3\u3002\n```cpp\nint kth(int x,int l,int r,int k)\n{\n\tif(l==r) {return l;}\n\tint mid=l+r>>1;\n\tif(sum[lc[x]]>=k) return kth(lc[x],l,mid,k);\n\treturn kth(rc[x],mid+1,r,k-sum[lc[x]]);\n} \n```\n## \u5220\u9664\\\u63d2\u5165\u4e00\u4e2a\u6570\n\u5220\u9664\u548c\u63d2\u5165\u5c31\u4f8b\u5982\u666e\u901a\u7ebf\u6bb5\u6811\u7684\u5355\u70b9\u4fee\u6539(\u5176\u5b9e\u8d28\u4e5f\u7684\u786e\u662f\u8fd9\u6837\u7684) \u3002\u5220\u9664\u5c31\u662f\u5c06\u7ba1\u8f96\u8fd9\u4e2a\u503c\u7684\u6240\u6709\u8282\u70b9\u7684\u5927\u5c0f\u90fd\u51cf\u4e00\u3002\u63d2\u5165\u540c\u7406\u3002\n```cpp\nint insert(int x,int l,int r,int p,int v)\n{\n\tif(!x) x = ++cnt;\n\tif(l == r){\n\t\tsum[x]+=v;\n\t\treturn x;\n\t}\n\tint mid=l+r>>1;\n\tif(p<=mid) lc[x] = insert(lc[x],l,mid,p,v);\n\telse rc[x] = insert(rc[x],mid+1,r,p,v); \n\tpushup(x);\n\treturn x;\n}\n```\n## \u53ef\u6301\u4e45\u5316\n\u8bf4\u5b8c\u4e86\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u5c31\u5f15\u5165\u65b0\u7684\u64cd\u4f5c\uff1a\u53ef\u6301\u4e45\u5316 \u3002\u53ef\u6301\u4e45\u5316\u6700\u7ecf\u5178\u7684\u64cd\u4f5c\u5c31\u662f\u67e5\u8be2\u533a\u95f4\u7b2c K \u5c0f\u3002\u6709\u4e86\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u4e5f\u53ef\u4ee5\u53d8\u5f62\u4e3a\u53ef\u6301\u4e45\u5316\u6570\u7ec4\uff0c\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3002\n\n## \u67e5\u8be2\u533a\u95f4\u7b2c K \u5c0f\n\u533a\u95f4\u7b2c K \u5c0f\uff0c\u4f60\u53ef\u4ee5\u770b\u505a\u4e3a $sum_R-sum_{L-1}$ \u4e2d\u7684\u7b2c K \u5c0f\u3002\u5176\u5b9e\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4e00\u822c\u4e5f\u5f62\u5bb9\u524d\u7f00\u548c\u7684\u5f62\u5f0f\u7684\u95ee\u9898\u6216\u8005\u4e00\u4e9b\u9700\u8981\u67e5\u8be2\u5386\u53f2\u72b6\u6001\u7684\u9898\u3002\u53ef\u6301\u4e45\u7ebf\u6bb5\u6811\u7684\u67e5\u8be2\u4e0e\u6743\u503c\u7ebf\u6bb5\u6811\u5341\u5206\u76f8\u50cf\u3002\n\n```cpp\nint query(int p,int q,int l,int r,int x) {\n    if(l==r) return l;\n    int k=sum[lc[p]]-sum[lc[q]];\n    if(x<=k) return query(lc[p],lc[q],l,mid,x);\n    else return query(rc[p],rc[q],mid+1,r,x-k);\n}\n```\n\n## \u5408\u5e76(merge)\n\u6709\u65f6\u5019\u6211\u4eec\u5f80\u5f80\u9700\u8981\u5c06\u591a\u9897\u6743\u503c\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u6240\u4ee5\u4e5f\u5c31\u6709\u4e86\u8fd9\u4e2a\u64cd\u4f5c\u3002\u5408\u5e76\uff0c\u4f60\u53ef\u4ee5\u770b\u4f5c\u5c06\u4e00\u9897\u7ebf\u6bb5\u6811\u590d\u5236\u5230\u53e6\u4e00\u9897\u4e0a\u3002\n\n- \u5982\u679c\u53cc\u65b9\u90fd\u6709\u8fd9\u4e2a\u8282\u70b9\u90a3\u4e48\u76f4\u63a5\u76f8\u52a0\u3002\n- \u5982\u679c\u53ea\u6709\u4e00\u65b9\u6709\u8fd9\u4e2a\u8282\u70b9\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\uff0c\u56e0\u4e3a\u5b50\u8282\u70b9\u80af\u5b9a\u4e5f\u6ca1\u4e86\u3002(\u8fd9\u4e5f\u662f\u5408\u5e76\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$ )\u7684\u539f\u56e0\u3002\n```cpp\nint merge(int a,int b,int l,int r)\n{\n\tif(!a||!b) return a|b;\n\tif(l==r) \n\t{\n\t\tsum[a]+=sum[b];\n\t\treturn a;\n\t}\n\tint mid=l+r>>1;\n\tlc[a] = merge(lc[a],lc[b],l,mid);\n\trc[a] = merge(rc[a],rc[b],mid+1,r);\n\tpushup(a);\n\treturn a;\n}\n```\n\u53ef\u4ee5\u53d1\u73b0\u5728\u5408\u5e76\u65f6\uff0c\u7ebf\u6bb5\u6811\u662f\u4e24\u8fb9\u90fd\u8981\u9012\u5f52\u7684\u3002\u5982\u679c\u6ca1\u6709\n~~~\nif(!a||!b) return a|b;\n~~~\n\u90a3\u4e48\u7ebf\u6bb5\u6811\u5408\u5e76\u662f\u4e00\u4e2a $O(n \\log n)$ \u7684\u51fd\u6570\uff0c\u7ec6\u601d\u6781\u6050\u3002\u6211\u4eec\u8003\u8651\u5206\u6790\u6743\u503c\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n### \u65f6\u95f4\u590d\u6742\u5ea6\n\n\u5982\u679c\u4e00\u5f00\u59cb\u6211\u4eec\u8981\u63d2\u5165 $k$ \u4e2a\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7a7a\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u5c31\u4f1a\u589e\u52a0 $k \\log k$ \u4e2a\u8282\u70b9\uff0c\u6bcf\u6b21\u589e\u52a0\u4e00\u4e2a\u8282\u70b9\u7684\u590d\u6742\u5ea6\u662f $O(1)$ \u7684\uff0c\u90a3\u4e48 $n$ \u9897\u503c\u57df\u65e0\u91cd\u5408\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u5728\u5408\u5e76\u65f6\uff0c\u505a\u5230 $O(n\\log n)$ \u3002\u4f46\u90a3\u5982\u679c\u662f $n$ \u9897\u5168\u6ee1\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u5408\u5e76......$O(n^2\\log n)$ \u3002\u53ef\u4ee5\u770b\u51fa\u6743\u503c\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u63d2\u5165\u8282\u70b9\u6709\u5173\u3002\u4f46\u76ee\u524d\u6765\u770b\u5728 $10^5$ \u7684\u968f\u673a\u6570\u636e\u4e0b\uff0c\u8dd1\u5f97\u8fd8\u7b97\u5feb\u3002\n\n## \u5206\u88c2(split)\n\n\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u5c06\u4e00\u9897\u6743\u503c\u7ebf\u6bb5\u6811\u5206\u6210\u591a\u9897\u3002\u8bf4\u4e2a\u5b9e\u8bdd\u8fd9\u6837\u7684\u9898\u8fd8\u662f\u6709\u70b9\u5c11\uff0c\u91cd\u70b9\u5e94\u8be5\u662f\u4e0a\u6587\u7684\u5408\u5e76(merge)\u3002\u8fd9\u91cc\u7684\u5206\u88c2\u57fa\u672c\u662f\u6309 @ix35\n\u5927\u4f6c\u7684\u4ee3\u7801\u5b9e\u73b0\u7684\uff0c\u7531\u8877\u7684\u611f\u8c22\u4ed6\u3002\n\n- \u5206\u88c2\u4e0e\u67e5\u8be2\u7b2c K \u5c0f\u7c7b\u4f3c\uff0c\u5982\u679c\u662f\u6309\u4e2a\u6570\u5206\u3002\n- \u6211\u4eec\u53ef\u4ee5\u6309\u7167 FHQ treap \u7684 split \u6765\u7406\u89e3\uff0c\u5982\u679c\u53f3\u5b50\u6811\u5e94\u8be5\u5168\u4e3a $Y$ \u7684\uff0c\u5c31\u628a\u53f3\u5b50\u6811\u5168\u7ed9 $Y$\uff0c\u7136\u540e\u76f4\u63a5\u5411\u5de6\u9012\u5f52\u3002\u5982\u679c\u53f3\u5b50\u6811\u6709\u53ea\u6709\u4e00\u90e8\u5206\u5e94\u8be5\u4e3a $Y$ \u7684\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u5411\u53f3\u9012\u5f52\u3002\u5982\u679c\u5728\u6b64\u521a\u597d\u5e73\u5206\uff0c\u90a3\u5c31\u4f60\u4e00\u534a\uff0c\u6211\u4e00\u534a\uff0c\u7136\u540e\u9000\u51fa\u3002\n- \u5206\u5b8c\u540e\u7684\u5927\u5c0f $X$ \u5c31\u662f\u539f\u5927\u5c0f\u51cf\u53bb\u5206\u51fa\u53bb\u7684 \uff0c$Y$ \u7684\u5927\u5c0f\u5c31\u662f\u5206\u51fa\u53bb\u7684\u5927\u5c0f\u3002\n\n```cpp\nint split(int x,int y,int k)\n{\n\ty = ++cnt;\n\tint v = sum[lc[x]];\n\tif(k > v){\n\t\trc[y] = split(rc[x],rc[y],k-v);//\u8981\u4e0d\u8d77\uff0c\u53ea\u80fd\u5411\u53f3\u3002 \n\t}\n\telse if(k == v){swap(rc[x],rc[y]);}//\u4f60\u4e00\u534a\uff0c\u6211\u4e00\u534a \u3002 \n\telse \n\t{\n\t\tswap(rc[x],rc[y]);//\u5148\u628a\u53f3\u5b50\u6811\u7ed9\u4f60 \u3002 \n\t\tlc[y] = split(lc[x],lc[y],k);//\u518d\u5411\u5de6 \u3002 \n\t}\n\tsum[y] = sum[x] - k;\n\tsum[x] = k;\n\treturn y;\n}\n```\n### \u603b\u7ed3\n\u6743\u503c\u7ebf\u6bb5\u6811\u662f\u4e00\u79cd\u975e\u5e38\u5c0f\u5de7\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6211\u8ba4\u4e3a\u662f\u975e\u5e38\u6709\u5fc5\u8981\u5b66\u4e60\u7684\u3002\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 200100;\nconst int size = 100000;\n#define int long long\nstruct node{\n\tint lc[N*40],rc[N*40],sum[N*40],cnt;\n\tnode(){cnt=0;}\n\tvoid pushup(int x)\n\t{\n\t\tsum[x] = sum[lc[x]]+sum[rc[x]];\n\t}\n\tint merge(int a,int b,int l,int r)\n\t{\n\t\tif(!a||!b) return a|b;\n\t\tif(l==r) \n\t\t{\n\t\t\tsum[a]+=sum[b];\n\t\t\treturn a;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tlc[a] = merge(lc[a],lc[b],l,mid);\n\t\trc[a] = merge(rc[a],rc[b],mid+1,r);\n\t\tpushup(a);\n\t\treturn a;\n\t}\n\tint split(int x,int y,int k)\n\t{\n\t\ty = ++cnt;\n\t\tint v = sum[lc[x]];\n\t\tif(k > v){\n\t\t\trc[y] = split(rc[x],rc[y],k-v);//\u8981\u4e0d\u8d77\uff0c\u53ea\u80fd\u5411\u53f3\u3002 \n\t\t}\n\t\telse if(k == v){swap(rc[x],rc[y]);}//\u4f60\u4e00\u534a\uff0c\u6211\u4e00\u534a \u3002 \n\t\telse \n\t\t{\n\t\t\tswap(rc[x],rc[y]);//\u5148\u628a\u53f3\u5b50\u6811\u7ed9\u4f60 \u3002 \n\t\t\tlc[y] = split(lc[x],lc[y],k);//\u518d\u5411\u5de6 \u3002 \n\t\t}\n\t\tsum[y] = sum[x] - k;\n\t\tsum[x] = k;\n\t\treturn y;\n\t}\n\tint insert(int x,int l,int r,int p,int v)\n\t{\n\t\tif(!x) x = ++cnt;\n\t\tif(l == r){\n\t\t\tsum[x]+=v;\n\t\t\treturn x;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tif(p<=mid) lc[x] = insert(lc[x],l,mid,p,v);\n\t\telse rc[x] = insert(rc[x],mid+1,r,p,v); \n\t\tpushup(x);\n\t\treturn x;\n\t}\n\tint kth(int x,int l,int r,int k)\n\t{\n\t\tif(l==r) {return l;}\n\t\tint mid=l+r>>1;\n\t\tif(sum[lc[x]]>=k) return kth(lc[x],l,mid,k);\n\t\treturn kth(rc[x],mid+1,r,k-sum[lc[x]]);\n\t} \n\tint query(int x,int l,int r,int L,int R)\n\t{\n\t\tif(r<L||l>R) return 0;\n\t\tif(L<=l&&r<=R) return sum[x];\n\t\tint mid = l+r>>1;\n\t\treturn query(lc[x],l,mid,L,R)+query(rc[x],mid+1,r,L,R);\n\t}\n}T;\nint read(){\n\tint x=0,f=0;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\n\treturn f?-x:x;\n}\nint rt[N],n,m,cnt=1;\nsigned main () {\n\tn=read();m=read();\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tint a=read();\n\t\trt[1] = T.insert(rt[1],1,n,i,a);\n\t}\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tint opt=read();\n\t\tif(opt==0){\n\t\t\tint x=read(),y=read(),z=read();\n\t\t\tint k1=T.query(rt[x],1,n,1,z),k2=T.query(rt[x],1,n,y,z);\n\t\t\tint tmp=0;\n\t\t\trt[++cnt]=T.split(rt[x],rt[cnt],k1-k2);\n\t\t\ttmp = T.split(rt[cnt],tmp,k2);\n\t\t\trt[x]=T.merge(rt[x],tmp,1,n);\n\t\t}\n\t\tif(opt==1)\n\t\t{\n\t\t\tint x=read(),y=read();\n\t\t\trt[x]=T.merge(rt[x],rt[y],1,n);\n\t\t}\n\t\tif(opt==2)\n\t\t{\n\t\t\tint x=read(),y=read(),z=read();\n\t\t\tT.insert(rt[x],1,n,z,y);\n\t\t}\n\t\tif(opt==3)\n\t\t{\n\t\t\tint x=read(),y=read(),z=read();\n\t\t\tint ans=T.query(rt[x],1,n,y,z);\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}\n\t\tif(opt==4)\n\t\t{\n\t\t\tint x=read(),y=read();\n\t\t\tif(T.sum[rt[x]]<y) puts(\"-1\");\n\t\t\telse printf(\"%lld\\n\",T.kth(rt[x],1,n,y));\n\t\t}\n\t}\n\treturn 0;\n}\n\t\n```\n### \u4f8b\u9898(\u5927\u591a\u6570\u662f\u5173\u4e8emerge\u7684)\n[P4556 [Vani\u6709\u7ea6\u4f1a]\u96e8\u5929\u7684\u5c3e\u5df4 /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5408\u5e76](https://www.luogu.com.cn/problem/P4556)\n\n[P3224 [HNOI2012]\u6c38\u65e0\u4e61](https://www.luogu.com.cn/problem/P3224)\n\n[P3834 \u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811 1\uff08\u4e3b\u5e2d\u6811\uff09](https://www.luogu.com.cn/problem/P3834)",
        "postTime": 1588772178,
        "uid": 227824,
        "name": "JK_LOVER",
        "ccfLevel": 0,
        "title": "\u6743\u503c\u7ebf\u6bb5\u6811"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/mfeitveer/p/16554748.html)\n\n\u5f88\u4e45\u4e4b\u524d\u5199\u7684\u9898\u76ee\u4e86\uff0c\u5199\u4e00\u7bc7\u9898\u89e3\u6765\u56de\u5fc6\u4e00\u4e0b\u3002\n\n### \u7ebf\u6bb5\u6811\u5408\u5e76\u4e0e\u5206\u88c2\n\n\u7ebf\u6bb5\u6811\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u610f\u601d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u652f\u6301\u5f88\u591a\u7684\u64cd\u4f5c\uff0c\u5305\u62ec\u5206\u88c2\u4e0e\u5408\u5e76\u3002\n\n### \u5408\u5e76\n\n[\u4f8b\u9898\uff1aP4556 [Vani\u6709\u7ea6\u4f1a]\u96e8\u5929\u7684\u5c3e\u5df4 /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5408\u5e76](https://www.luogu.com.cn/problem/P4556)\n\n\u9996\u5148\uff0c\u652f\u6301\u5408\u5e76\u7684\u64cd\u4f5c\u7684\u7ebf\u6bb5\u6811\uff0c\u51fa\u4e8e\u7a7a\u95f4\u4e0e\u65f6\u95f4\u7684\u8003\u8651\uff0c\u9700\u8981\u5199\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u3002\n\n\u8003\u8651\u5982\u4f55\u5408\u5e76\u4e24\u9897\u7ebf\u6bb5\u6811\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qc0l1tki.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vszdh20b.png)\n\n\u9996\u5148\u4f1a\u904d\u5386\u5230\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u53d1\u73b0\u4e24\u68f5\u7ebf\u6bb5\u6811\u90fd\u6709\uff0c\u90a3\u4e48\u5c31\u5c06\u7ef4\u62a4\u7684\u4e1c\u897f\u5408\u5e76\u3002\n\n\u7136\u540e\u5230\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u540c\u7406\uff0c\u63a5\u7740\uff0c\u53d1\u73b0\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u6ca1\u6709 $(1,2)$ \u53f7\u8282\u70b9\uff0c\u90a3\u4e48\u76f4\u63a5\u63a5\u4e0a\uff0c\u65e0\u9700\u904d\u5386\u3002\n\n\u7136\u540e\u5408\u5e76 $(3,3)$\uff0c\u63a5\u4e0a $(4,5)$\uff0c\u8fd9\u5c31\u662f\u5927\u6982\u7684\u7b97\u6cd5\u6d41\u7a0b\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u3002\n\n1. \u904d\u5386\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u82e5\u6709\u4e00\u65b9\u6ca1\u6709\uff0c\u5219\u76f4\u63a5\u63a5\u4e0a\u3002\n\n2. \u5426\u5219\uff0c\u7ee7\u7eed\u904d\u5386\uff0c\u5408\u5e76\u4fe1\u606f\u3002\n\n3. \u5f53\u7136\uff0c\u5408\u5e76\u5b8c\u540e\u6ca1\u6709\u7528\u7684\u8282\u70b9\u9700\u8981\u5220\u9664\u3002\n\n```cpp\ninline int merge(int p1 , int p2 , int l , int r)\n{\n    if(!p1 || !p2) return p1 + p2;\n    t[p1].val += t[p2].val;\n    if(l == r) { del(p2); return p1; }\n    t[p1].l = merge(t[p1].l , t[p2].l , l , (l + r) / 2);\n    t[p1].r = merge(t[p1].r , t[p2].r , (l + r) / 2 + 1 , r);\n    del(p2); return p1;\n}\n\n```\n\n### \u5206\u88c2\n\n[\u4f8b\u9898\uff1aP5494 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u88c2](https://www.luogu.com.cn/problem/P5494)\n\n\u4e00\u822c\u6765\u8bb2\uff0c\u7ebf\u6bb5\u6811\u7684\u5206\u88c2\u662f\u5c06\u524d $\\text{k}$ \u4e2a\u8282\u70b9\u5206\u5230\u4e00\u9897\u7ebf\u6bb5\u6811\u4e0a\uff0c\u5176\u4f59\u7684\u5206\u88c2\u5230\u53e6\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u548c $\\text{FHQ treap}$ \u76f8\u4f3c\u7684\u8fc7\u7a0b\u3002\n\n1. \u82e5\u6b64\u65f6\u88ab\u5206\u88c2\u7684\u7ebf\u6bb5\u6811\u7684\u5de6\u513f\u5b50\u5b50\u6811\u5927\u5c0f\u5927\u4e8e\u7b49\u4e8e $\\text{k}$\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06\u6574\u4e2a\u53f3\u513f\u5b50\u9001\u7ed9\u7b2c\u4e8c\u68f5\u7ebf\u6bb5\u6811\u3002\n\n2. \u82e5\u5de6\u513f\u5b50\u5b50\u6811\u5927\u5c0f\u8fd8\u5927\u4e8e $\\text{k}$ \u90a3\u4e48\u5c31\u8981\u5230\u5de6\u513f\u5b50\u5904\u7ee7\u7eed\u5206\u88c2\u3002\n\n3. \u82e5\u5de6\u513f\u5b50\u5b50\u6811\u5927\u5c0f\u5c0f\u4e8e $\\text{k}$ \u90a3\u4e48\u5c31\u8981\u5230\u53f3\u513f\u5b50\u5904\u7ee7\u7eed\u5206\u88c2\u3002\n\n```cpp\ninline void split(int x , int &y , int k)\n{\n\tif(!x) return; y = new_node(); int val = t[t[x].son[0]].sum;\n\tif(val < k) split(t[x].son[1] , t[y].son[1] , k - val);\n\telse swap(t[x].son[1] , t[y].son[1]);\n\tif(val > k) split(t[x].son[0] , t[y].son[0] , k);\n\tt[y].sum = t[x].sum - k , t[x].sum = k;\n}\n\n```\n\n### \u65f6\u95f4\u590d\u6742\u5ea6\n\n#### \u5408\u5e76\n\n\u6211\u77e5\u9053\u7684\uff0c\u5927\u6982\u6709\u4e24\u79cd\u8bc1\u660e\u65b9\u6cd5\u3002\n\n\u7b2c\u4e00\u79cd\u662f\u6211\u4eec\u77e5\u9053\u6240\u6709\u7684\u8282\u70b9\u4e00\u5171\u6709 $n\\log n$ \u4e2a\u3002\n\n\u800c\u6211\u4eec\u6bcf\u6b21\u5408\u5e76\u90fd\u53ea\u4f1a\u5408\u5e76\u4e24\u65b9\u90fd\u6709\u7684\u8282\u70b9\uff0c\u5e76\u4e14\u5220\u6389\u5176\u4e2d\u4e4b\u4e00\u3002\n\n\u6545\u6700\u591a\u53ea\u4f1a\u5220\u9664 $n\\log n$ \u6b21\uff0c\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\u3002\n\n\u7b2c\u4e8c\u79cd\u53ef\u80fd\u53ea\u662f\u7b2c\u4e00\u79cd\u7684\u53e6\u4e00\u4e2a\u8bf4\u6cd5\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u4e00\u6b21\u5408\u5e76\u90fd\u4f1a\u6709\u53f6\u5b50\u8282\u70b9\uff0c~~\u4e00\u53e5\u5e9f\u8bdd~~\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u4f1a\u9700\u8981 $O(\\log n)$\u3002\n\n\u800c\u53ea\u6709 $n$ \u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u6545\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\u3002\n\n\u4ed4\u7ec6\u60f3\u4e00\u60f3\uff0c\u4e24\u79cd\u90fd\u662f\u4e00\u4e2a\u539f\u7406\u3002\n\n#### \u5206\u88c2\n\n\u5206\u88c2\u7684\u590d\u6742\u5ea6\u5c31\u6bd4\u8f83\u597d\u8bc1\u4e86\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u6b21\u5206\u88c2\u7684\u64cd\u4f5c\u4e0e\u67e5\u8be2\u7684\u64cd\u4f5c\u5f88\u50cf\u3002\n\n\u53ef\u4ee5\u8bf4\u4e0e\u67e5\u627e\u7b2c $k$ \u4e2a\u6570\u7b80\u76f4\u4e00\u6a21\u4e00\u6837\u3002\n\n\u6545\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\n\n### \u5173\u4e8e\u6b64\u9898\n\n\u603b\u4f53\u6765\u8bf4\uff0c\u7ebf\u6bb5\u6811\u7684\u5408\u5e76\u4e0e\u5206\u88c2\u53ea\u8981\u638c\u63e1\u601d\u8def\u4ee3\u7801\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\u3002\n\n\u6700\u540e\u9644\u4e0a\u6b64\u9898\u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nconst int N = 200010;\n\nint n, m, cnt, top, tot, stk[N * 32], root[N];\n\nstruct Tree\n{\n    int sum, son[2];\n} t[N * 32];\n\ninline int read()\n{\n    int asd = 0, qwe = 1; char zxc;\n    while (!isdigit(zxc = getchar())) if (zxc == '-') qwe = -1;\n    while (isdigit(zxc)) asd = asd * 10 + zxc - '0', zxc = getchar();\n    return asd * qwe;\n}\n\ninline void del(int x)\n{\n    if (!x)\n        return;\n    t[x].sum = t[x].son[0] = t[x].son[1] = 0;\n    stk[++top] = x;\n}\n\ninline int new_node()\n{\n    return (top ? stk[top--] : ++cnt);\n}\n\ninline void update(int &p, int l, int r, int k, int val)\n{\n    if (!p)\n        p = new_node();\n    t[p].sum += val;\n    if (l == r)\n        return;\n    int mid = (l + r) / 2;\n    if (mid >= k)\n        update(t[p].son[0], l, mid, k, val);\n    else\n        update(t[p].son[1], mid + 1, r, k, val);\n}\n\ninline int merge(int x, int y)\n{\n    if (!x || !y)\n        return x + y;\n    t[x].sum += t[y].sum;\n    t[x].son[0] = merge(t[x].son[0], t[y].son[0]);\n    t[x].son[1] = merge(t[x].son[1], t[y].son[1]);\n    del(y);\n    return x;\n}\n\ninline void split(int x, int &y, int k)\n{\n    if (!x)\n        return;\n    y = new_node();\n    int val = t[t[x].son[0]].sum;\n    if (val < k)\n        split(t[x].son[1], t[y].son[1], k - val);\n    else\n        swap(t[x].son[1], t[y].son[1]);\n    if (val > k)\n        split(t[x].son[0], t[y].son[0], k);\n    t[y].sum = t[x].sum - k, t[x].sum = k;\n}\n\ninline int ask1(int p, int l, int r, int ql, int qr)\n{\n    if (!p || l > qr || r < ql)\n        return 0;\n    if (ql <= l && r <= qr)\n        return t[p].sum;\n    int mid = (l + r) / 2;\n    return ask1(t[p].son[0], l, mid, ql, qr) + ask1(t[p].son[1], mid + 1, r, ql, qr);\n}\n\ninline int ask2(int p, int l, int r, int k)\n{\n    if (l == r)\n        return l;\n    if (t[t[p].son[0]].sum >= k)\n        return ask2(t[p].son[0], l, (l + r) / 2, k);\n    else\n        return ask2(t[p].son[1], (l + r) / 2 + 1, r, k - t[t[p].son[0]].sum);\n}\n\nsigned main()\n{\n    n = read(), m = read(), tot = 1;\n    for (int i = 1; i <= n; i++)\n    {\n        int x = read();\n        if (x)\n            update(root[1], 1, n, i, x);\n    }\n    for (int i = 1; i <= m; i++)\n    {\n        int opt = read();\n        if (opt == 0)\n        {\n            ++tot;\n            int p = read(), x = read(), y = read(), tmp = 0;\n            int k1 = ask1(root[p], 1, n, 1, y);\n            int k2 = ask1(root[p], 1, n, x, y);\n            split(root[p], root[tot], k1 - k2);\n            split(root[tot], tmp, k2);\n            root[p] = merge(root[p], tmp);\n        }\n        if (opt == 1)\n        {\n            int x = read(), y = read();\n            root[x] = merge(root[x], root[y]);\n        }\n        if (opt == 2)\n        {\n            int p = read(), x = read(), q = read();\n            update(root[p], 1, n, q, x);\n        }\n        if (opt == 3)\n        {\n            int p = read(), x = read(), y = read();\n            printf(\"%lld\\n\", ask1(root[p], 1, n, x, y));\n        }\n        if (opt == 4)\n        {\n            int p = read(), k = read();\n            if (t[root[p]].sum < k)\n                puts(\"-1\");\n            else\n                printf(\"%lld\\n\", ask2(root[p], 1, n, k));\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1659687283,
        "uid": 320933,
        "name": "Mfeitveer",
        "ccfLevel": 0,
        "title": "P5494 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u88c2 \u9898\u89e3"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u677f\u677f\u7cfb\u5217\n\n# \u524d\u7f6e\u829d\u58eb\n\n\u7ebf\u6bb5\u6811\uff08~~\u4e0d\u4f1a\u4f60\u8fd8\u6765\u505a\u8fd9\u4e2a\u9898\u5e72\u561b~~\uff09\uff0c**\u52a8\u6001\u5f00\u70b9**\u3002\n\n# Solution\n\n\u5148\u663e\u7136\u7684\u770b\u51fa\u8fd9\u9898\u7ef4\u62a4\u7684\u662f\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u5c31\u662f\u4e00\u4e9b\u64cd\u4f5c\u3002\n\n**\u64cd\u4f5c 1\uff1a**\n\n\u64cd\u4f5c 0 \u9700\u8981\uff0c\u6240\u4ee5\u5148\u8bb2\u3002\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u5408\u5e76\u5f88\u5de7\u7684\u4e00\u70b9\u662f\u52a8\u6001\u5f00\u70b9\u4e2d\u603b\u7ed3\u70b9\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7 $O(m\\log n)$\uff0c\u6240\u4ee5\u904d\u5386\u6bcf\u4e00\u4e2a\u5bf9\u5e94\u7684\u4e24\u4e2a\u7ed3\u70b9\uff0c\u82e5\u6709\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u8fd4\u56de\u53e6\u4e00\u4e2a\uff0c\u5426\u5219\u786e\u5b9a\u4e00\u4e2a\u4e3a\u5408\u5e76\u540e\u7684\u6839\u7ed3\u70b9\u7ee7\u7eed\u9012\u5f52\u3002\n\n```cpp\nint merge(int p,int q,int l,int r) {\n\tif(!p) return q;if(!q) return p;\n\tif(l==r) {tr[p].sum+=tr[q].sum;return p;}\n\ttr[p].lc=merge(tr[p].lc,tr[q].lc,l,l+r>>1);\n\ttr[p].rc=merge(tr[p].rc,tr[q].rc,(l+r>>1)+1,r);\n\tpushup(p);\n\treturn p;\n}\n```\n\n**\u64cd\u4f5c 0\uff1a**\n\n\u641e\u5b9a\u7ebf\u6bb5\u6811\u5206\u88c2\u5c31\u884c\u4e86\uff08\u8fd9\u9898\u7684\u5173\u952e\u6240\u5728\uff09\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u628a\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5206\u88c2\u6210\u4e24\u534a\u5c31\u662f\u5c06\u5176\u4e2d\u4e00\u6761\u94fe\u201c\u5206\u5f00\u201d\uff0c\u9012\u5f52\u8fd9\u6761\u94fe\u5c31 OK \u4e86\uff0c\u5b8c\u5168\u6ca1\u6709\u6280\u672f\u542b\u91cf\uff08\u6a21\u62df\uff09\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u8003\u8651\u5206\u88c2\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\uff0c\u518d\u5c06\u53f3\u8fb9\u548c\u5de6\u8fb9\u5408\u5e76\u5c31\u884c\u4e86\uff0c**\u6ce8\u610f\u5408\u5e76\u65f6**\u8fd9\u4e24\u4e2a\u533a\u95f4\u662f\u201c\u5206\u5f00\u7684\u201d\uff08\u6ca1\u6709\u4ea4\u96c6\uff09\uff0c\u5373\u4f7f\u7528 `merge(p,q,l,r)` \u65f6\u904d\u5386\u7684\u662f\u7ed3\u70b9\u7ba1\u7406\u533a\u95f4\u5305\u542b\u64cd\u4f5c\u7684\u533a\u95f4\u7684\u7ed3\u70b9\uff08$\\{p|l_p\\le x\\le y\\le r_p\\}$\uff09\uff0c\u8fd9\u6837\u7684\u7ed3\u70b9\u6570\u4e0d\u8d85\u8fc7 $O(\\log n)$\uff0c\u6240\u4ee5\u8fd9\u6837\u201c\u66b4\u529b\u201d\u590d\u6742\u5ea6\u662f\u6ca1\u95ee\u9898\u7684\u3002\n\n**split \u51fd\u6570**\n\n```cpp\nint split(int p,int x,int l,int r) {\n\tif(l==r) return p;\n\tint tmp=New();\n\tint mid=l+r>>1;\n\tif(x<=mid&&tr[p].lc) tr[tmp].lc=split(tr[p].lc,x,l,mid),tr[tmp].rc=tr[p].rc,tr[p].rc=0,(tr[p].lc==tr[tmp].lc)&&(tr[p].lc=0);\n\telse if(tr[p].rc) tr[tmp].rc=split(tr[p].rc,x,mid+1,r),(tr[p].rc==tr[tmp].rc)&&(tr[p].rc=0);\n\tpushup(p),pushup(tmp);\n\treturn tmp;\n}\n```\n**\u4e3b\u51fd\u6570 Code**\n\n```cpp\np=read(),x=read(),y=read(),rt[++root]=split(rt[p],x,1,n);\nif(y==n) continue;\nTmp=split(rt[root],y+1,1,n),rt[p]=merge(rt[p],Tmp,1,n);\n```\n\n\u64cd\u4f5c $2,3,4$ \u5c31\u662f\u7b80\u5355\u7684\u5355\u70b9\u52a0\uff0c\u533a\u95f4\u548c\u548c $kth$ \u95ee\u9898\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n**\u603b Code**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace IO{//by cyffff\n\tchar ibuf[(1<<20)+1],*iS,*iT;\n\t#define ll long long\n\t#if ONLINE_JUDGE\n\t#define gh() (iS==iT?iT=(iS=ibuf)+fread(ibuf,1,(1<<20)+1,stdin),(iS==iT?EOF:*iS++):*iS++)\n \t#else\n\t#define gh() getchar()\n\t#endif\n\tinline ll read(){\n\t\tchar ch=gh();\n\t\tll x=0;\n\t\tchar t=0;\n\t\twhile(ch<'0'||ch>'9')   t|=ch=='-',ch=gh();\n\t\twhile(ch>='0'&&ch<='9') x=x*10+(ch^48),ch=gh();\n\t\treturn t?-x:x;\n\t}\n\tvoid write(ll x) {\n\t\tif(x<0) putchar('-'),x=~(x-1);\n\t\tif(x>=10) write(x/10);\n\t\tputchar(x%10^48);\n\t}\n}\nusing IO::read;\nusing IO::write;\nconst int N=200005;\nstruct node {\n\tint lc,rc;ll sum;\n}tr[N<<5];\nint tot=0,n,m,rt[N],root,op,p,x,y,Tmp;\ninline int New() {tr[++tot]=(node){0,0,0};return tot;}\ninline void pushup(int p) {tr[p].sum=tr[tr[p].lc].sum+tr[tr[p].rc].sum;}\nvoid build(int p,int l,int r) {\n\tif(l==r) {tr[p].sum=read();return ;}\n\ttr[p].lc=New(),tr[p].rc=New();\n\tbuild(tr[p].lc,l,l+r>>1),build(tr[p].rc,(l+r>>1)+1,r),pushup(p);\n}\nvoid add(int p,int x,int delta,int l,int r) {\n\tif(l==r) {tr[p].sum+=delta;return ;}\n\tif((l+r>>1)>=x) (tr[p].lc==0)&&(tr[p].lc=New()),add(tr[p].lc,x,delta,l,l+r>>1);\n\telse (tr[p].rc==0)&&(tr[p].rc=New()),add(tr[p].rc,x,delta,(l+r>>1)+1,r);\n\tpushup(p);\n}\nint merge(int p,int q,int l,int r) {\n\tif(!p) return q;if(!q) return p;\n\tif(l==r) {tr[p].sum+=tr[q].sum;return p;}\n\ttr[p].lc=merge(tr[p].lc,tr[q].lc,l,l+r>>1);\n\ttr[p].rc=merge(tr[p].rc,tr[q].rc,(l+r>>1)+1,r);\n\tpushup(p);\n\treturn p;\n}\nint split(int p,int x,int l,int r) {\n\tif(l==r) return p;\n\tint tmp=New();\n\tint mid=l+r>>1;\n\tif(x<=mid&&tr[p].lc) tr[tmp].lc=split(tr[p].lc,x,l,mid),tr[tmp].rc=tr[p].rc,tr[p].rc=0,(tr[p].lc==tr[tmp].lc)&&(tr[p].lc=0);\n\telse if(tr[p].rc) tr[tmp].rc=split(tr[p].rc,x,mid+1,r),(tr[p].rc==tr[tmp].rc)&&(tr[p].rc=0);\n\tpushup(p),pushup(tmp);\n\treturn tmp;\n}\nll ask(int p,int l,int r,int s,int t) {\n\tif(s>r||t<l||!p) return 0;\n\tif(s<=l&&r<=t) return tr[p].sum;\n\treturn ask(tr[p].lc,l,l+r>>1,s,t)+ask(tr[p].rc,(l+r>>1)+1,r,s,t);\n}\nint kth(int p,int k,int l,int r) {\n\tif(l==r) return l;\n\tif(tr[p].lc&&tr[tr[p].lc].sum>=k) return kth(tr[p].lc,k,l,l+r>>1);\n\t(tr[p].lc)&&(k-=tr[tr[p].lc].sum);\n\treturn kth(tr[p].rc,k,(l+r>>1)+1,r);\n}\nint main() {\n\tn=read(),m=read(),tr[rt[++root]=++tot]=(node){0,0,0},build(1,1,n);\n\twhile(m--) {\n\t\top=read();\n\t\tif(op==0) {\n\t\t\tp=read(),x=read(),y=read(),rt[++root]=split(rt[p],x,1,n);\n\t\t\tif(y==n) continue;\n\t\t\tTmp=split(rt[root],y+1,1,n),rt[p]=merge(rt[p],Tmp,1,n);\n\t\t}else if(op==1) {\n\t\t\tx=read(),y=read(),rt[x]=merge(rt[x],rt[y],1,n);\n\t\t}else if(op==2) {\n\t\t\tp=read(),x=read(),y=read(),add(rt[p],y,x,1,n);\n\t\t}else if(op==3) {\n\t\t\tp=read(),x=read(),y=read(),write(ask(rt[p],1,n,x,y)),putchar('\\n');\n\t\t}else {\n\t\t\tp=read(),x=read();\n\t\t\tif(tr[rt[p]].sum<x) {\n\t\t\t\tputchar('-'),putchar('1'),putchar('\\n');\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\twrite(kth(rt[p],x,1,n)),putchar('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1648560535,
        "uid": 383791,
        "name": "Others",
        "ccfLevel": 7,
        "title": "P5494 \u9898\u89e3"
    },
    {
        "content": "## [Link](https://www.luogu.com.cn/problem/P5494)\n\n\u7ebf\u6bb5\u6811\u5206\u88c2\u677f\u5b50\u9898\u3002\u4e5f\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u677f\u5b50\u9898\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n\u5148\u8bb2\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\u987e\u540d\u601d\u4e49\uff0c\u7ebf\u6bb5\u6811\u5408\u5e76\u5c31\u662f\u5c06\u4e24\u9897\u7ebf\u6bb5\u6811\u5408\u5e76\u6210\u4e00\u9897\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u5408\u5e76\u7684\u662f\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n\u4f8b\u5982\u6211\u4eec\u6709\u4e24\u4e2a\u53ef\u91cd\u96c6 $a$ \u548c $b$\uff0c\u5206\u522b\u5efa\u51fa\u6743\u503c\u7ebf\u6bb5\u6811 $A$ \u548c $B$\u3002\u5176\u4e2d$A$ \u7684\u8282\u70b9 $p$ \u5b58\u653e $a$ \u4e2d\u503c\u5728 $[l_p,r_p]$ \u4e2d\u7684\u4e2a\u6570\uff0c$B$ \u540c\u7406\u3002\n\n\u90a3\u6211\u4eec\u82e5\u5c06\u4e24\u4e2a\u96c6\u5408\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u53ea\u9700\u8981\u5c06\u8868\u793a\u8be5\u96c6\u5408\u7684\u7ebf\u6bb5\u5408\u5e76\u5728\u4e00\u8d77\u3002\u90a3\u4e48\u600e\u4e48\u5408\u5e76\u5462\uff1f\n\n\u5047\u8bbe\u4e24\u4e2a\u53ef\u91cd\u96c6\u7684\u503c\u5728 $[1,v]$ \u4e4b\u95f4\uff0c\u90a3\u4e48\u6bcf\u9897\u7ebf\u6bb5\u6811\u5171\u6709 $2v-1$ \u4e2a\u8282\u70b9\uff0c\u82e5\u66b4\u529b\u5408\u5e76\uff0c\u4e5f\u5c31\u662f\u5bf9\u5e94\u8282\u70b9\u7684\u503c\u66b4\u529b\u76f8\u52a0\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(v)$ \u7684\u3002\u663e\u7136\u4f1a\u8d85\u65f6\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u5728\u7ebf\u6bb5\u6811 $A$ \u4e2d\uff0c\u4f1a\u6709\u5927\u91cf\u7684\u7a7a\u8282\u70b9\uff0c\u6ca1\u6709\u503c\u5728\u8be5\u8282\u70b9\u8868\u793a\u7684\u503c\u57df\u4e2d\u3002\u90a3\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6709\u5185\u5bb9\u7684\u8282\u70b9\u5408\u5e76\u5373\u53ef\u3002\n\n\u82e5\u5bf9\u5e94\u8282\u70b9 $p$ \u548c $p'$ \u5408\u5e76\uff0c\u5206\u7c7b\u4e00\u4e0b\uff08\u4e00\u4e0b\u6709/\u6ca1\u6709\u6307\u5185\u5bb9\uff09\n\n- $A$ \u6709 $B$ \u6ca1\u6709\uff0c\u8be5\u8282\u70b9\u76f4\u63a5\u4e3a $p$\u3002\n\n- $A$ \u6ca1\u6709 $B$ \u6709\uff0c\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\u8d4b\u4e3a $p'$ \u7ed9 $A$\uff0c\u7136\u540e\u9012\u5f52 $p'$ \u7684\u5de6\u53f3\u513f\u5b50\u7ee7\u7eed\u5408\u5e76\u3002\n\n- $A,B$ \u90fd\u6ca1\u6709\uff0c\u8d4b $0$\u3002\n\n- $A,B$ \u90fd\u6709\uff0c\u9012\u5f52\u5de6\u53f3\u513f\u5b50\u3002\u6700\u540e\u5408\u5e76\u3002\n\n------------\n\u7ebf\u6bb5\u6811\u5206\u88c2\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5c06\u4e00\u9897\u7ebf\u6bb5\u6811\u5206\u88c2\u6210\u4e24\u9897\u3002\n\n\u4f8b\u5982\u6211\u4eec\u6709\u4e00\u4e2a\u53ef\u91cd\u96c6 $a$\uff0c\u6211\u4eec\u9700\u8981\u5c06 $a$ \u5206\u88c2\u6210 $a'$ \u548c $b$\uff0c\u5176\u4e2d $b$ \u4e2d\u7684\u6570\u5728 $[l,r]$ \u4e4b\u95f4\uff0c$a$ \u4e2d\u6ca1\u6709\u6570\u5728 $[l,r]$ \u4e4b\u95f4\u3002\n\n\u6211\u4eec\u5efa\u4e00\u9897\u6743\u503c\u7ebf\u6bb5\u6811\u8868\u793a $A$\u3002\u8981\u5206\u88c2\u51fa $A'$ \u548c $B$ \u51fa\u6765\u3002\n\n\u76f4\u63a5\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u8bbf\u95ee\u3002\n\n\u5728\u8282\u70b9 $p$ \u65f6\uff0c\u82e5 $l<=l_p$ \u4e14 $r_p<=r$\uff0c\u90a3\u4e48\u76f4\u63a5\u63a5\u5230\u7ebf\u6bb5\u6811 $B$ \u4e0a\u3002\u5220\u9664\u7ebf\u6bb5\u6811 $A$ \u4e2d\u8be5\u8282\u70b9\u3002\n\n\u82e5\u4e0d\u5b8c\u5168\u5305\u542b\uff0c\u9012\u5f52\u5de6\u53f3\u513f\u5b50\u3002\n\n\u82e5\u5b8c\u5168\u4e0d\u5305\u542b\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\n\n~~\u5408\u5e76\u548c\u5206\u88c2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u7b97\uff0c\u4f46\u662f\u80fd\u8fc7\u5c31\u662f\u4e86\u3002~~\n\n\u73b0\u5728\u770b\u4e00\u4e0b\u9898\u76ee\uff0c\u5171 $5$ \u4e2a\u64cd\u4f5c\u3002\n\n\u64cd\u4f5c $0$\uff0c\u76f4\u63a5\u5206\u88c2\u3002\n\n\u64cd\u4f5c $1$\uff0c\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\u64cd\u4f5c $2$\uff0c\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\u3002\n\n\u64cd\u4f5c $3$\uff0c\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u8be2\u3002\n\n\u64cd\u4f5c $4$\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u4e2d\u67e5\u8be2\u7b2c $k$ \u5c0f\uff0c\u4e0d\u4f1a\u7684\u53ef\u4ee5\u53bb\u770b\u4e00\u4e0b\u666e\u901a\u5e73\u8861\u6811\u7684\u9898\u89e3\uff0c\u91cc\u9762\u6709\u7ebf\u6bb5\u6811\u6c42\u7b2c $k$ \u5c0f\u3002\n\n\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u4e0d\u4f1a\u7b97\u2026\u2026\n\n\u4e00\u4e2a\u6280\u5de7\uff0c\u56e0\u4e3a\u8fd9\u9898\u5408\u5e76\u540e\u4f1a\u5408\u5e76\u540e\u4f1a\u6e05\u7a7a\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bbe\u4e00\u4e2a $vector$ \u6765\u5b58\u90a3\u4e9b\u5e9f\u6389\u7684\u8282\u70b9\uff0c\u7136\u540e\u52a8\u6001\u5f00\u70b9\u7684\u65f6\u5019\u4f18\u5148\u4ece\u5e9f\u8282\u70b9\u4e2d\u53d6\u3002\u82e5\u6ca1\u6709\u624d\u65b0\u5efa\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline int read()\n{\n\tint s=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar());\n\tfor(;isdigit(c);c=getchar())\n\t\ts=s*10+c-'0';\n\treturn s;\n}\nint v,m,tot=1,tot1,root[200005];\nstruct segment_tree{\n\tll cnt;\n\tint ls,rs;\n}s[200005*32];\nvector<int>rubbish;\ninline int New()\n{\n\tif(!rubbish.empty())\n\t{\n\t\tint temp=rubbish.back();\n\t\trubbish.pop_back();\n\t\treturn temp;\n\t}\n\treturn ++tot1;\n}\ninline void del(int &p)\n{\n\ts[p].ls=s[p].rs=s[p].cnt=0;\n\trubbish.push_back(p);\n\tp=0;\n}\ninline void push_up(int p)\n{\n\ts[p].cnt=s[s[p].ls].cnt+s[s[p].rs].cnt;\n}\nvoid build(int l,int r,int &p)\n{\n\tif(!p)p=New();\n\tif(l==r)\n\t{\n\t\ts[p].cnt=read();\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(l,mid,s[p].ls);\n\tbuild(mid+1,r,s[p].rs);\n\tpush_up(p);\n}\nvoid split(int ql,int qr,int l,int r,int &p1,int &p2)\n{\n\tif(ql>r||qr<l||!p1)return;\n\tif(ql<=l&&r<=qr)\n\t{\n\t\tp2=p1;\n\t\tp1=0;\n\t\treturn;\n\t}\n\tif(!p2)p2=New();\n\tint mid=(l+r)/2;\n\tsplit(ql,qr,l,mid,s[p1].ls,s[p2].ls);\n\tsplit(ql,qr,mid+1,r,s[p1].rs,s[p2].rs);\n\tpush_up(p1),push_up(p2);\n}\nvoid merge(int l,int r,int &p1,int &p2)\n{\n\tif(!p1||!p2)\n\t{\n\t\tp1+=p2;\n\t\treturn;\n\t}\n\tif(l==r)\n\t{\n\t\ts[p1].cnt+=s[p2].cnt;\n\t\tdel(p2);\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tmerge(l,mid,s[p1].ls,s[p2].ls);\n\tmerge(mid+1,r,s[p1].rs,s[p2].rs);\n\tdel(p2);\n\tpush_up(p1);\n}\nvoid update(int pos,int k,int l,int r,int &p)\n{\n\tif(pos<l||r<pos)return;\n\tif(!p)p=New();\n\tif(l==r)\n\t{\n\t\ts[p].cnt+=k;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tupdate(pos,k,l,mid,s[p].ls),update(pos,k,mid+1,r,s[p].rs);\n\tpush_up(p);\n}\nll query_cnt(int ql,int qr,int l,int r,int p)\n{\n\tif(ql>r||qr<l||!p)return 0;\n\tif(ql<=l&&r<=qr)\n\t\treturn s[p].cnt;\n\tint mid=(l+r)/2;\n\treturn query_cnt(ql,qr,l,mid,s[p].ls)+query_cnt(ql,qr,mid+1,r,s[p].rs);\n}\nint query_kth(int k,int l,int r,int p)\n{\n\tif(l==r)return l;\n\tint mid=(l+r)/2;\n\tif(s[s[p].ls].cnt>=k)return query_kth(k,l,mid,s[p].ls);\n\treturn query_kth(k-s[s[p].ls].cnt,mid+1,r,s[p].rs);\n}\nint main()\n{\n\tv=read(),m=read();\n\tbuild(1,v,root[1]);\n\twhile(m--)\n\t{\n\t\tint op=read();\n\t\tif(op==0)\n\t\t{\n\t\t\tint x=read(),l=read(),r=read();\n\t\t\tsplit(l,r,1,v,root[x],root[++tot]);\n\t\t}\n\t\tif(op==1)\n\t\t{\n\t\t\tint x=read(),y=read();\n\t\t\tmerge(1,v,root[x],root[y]);\n\t\t}\n\t\tif(op==2)\n\t\t{\n\t\t\tint x=read(),k=read(),num=read();\n\t\t\tupdate(num,k,1,v,root[x]);\n\t\t}\n\t\tif(op==3)\n\t\t{\n\t\t\tint x=read(),l=read(),r=read();\n\t\t\tprintf(\"%lld\\n\",query_cnt(l,r,1,v,root[x]));\n\t\t}\n\t\tif(op==4)\n\t\t{\n\t\t\tint x=read(),k=read();\n\t\t\tif(s[root[x]].cnt<k)printf(\"-1\\n\");\n\t\t\telse printf(\"%d\\n\",query_kth(k,1,v,root[x]));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1643961739,
        "uid": 306049,
        "name": "Utilokasteinn",
        "ccfLevel": 0,
        "title": "P5494 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u88c2"
    }
]