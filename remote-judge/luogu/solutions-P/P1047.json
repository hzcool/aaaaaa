[
    {
        "content": "\u60f3\u4e86\u60f3\uff0c\u5176\u5b9e\u53ea\u7528\u4e09\u904d\u5faa\u73af\u5c31\u53ef\u4ee5\u7684\u3002\n\n\u601d\u8def\uff1a\n\n\u7b2c\u4e00\u904d\uff0c\u5c06\u8def\u4e0a\u7684\u6240\u6709\u6811\u6253\u4e0a\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u3002\n\n\u7b2c\u4e8c\u904d\uff0c\u8bfb\u5165\u533a\u95f4\u7684\u5934\u548c\u5c3e\uff0c\u4ece\u8fd9\u4e2a\u533a\u95f4\u7684\u5934\u5f00\u59cb\u5faa\u73af\uff0c\u5230\u5c3e\u7ed3\u675f\uff0c\u6807\u8bb0\u4e3a\u8bbf\u95ee\u8fc7\u3002\n\n\u7b2c\u4e09\u904d\uff0c\u987a\u5e8f\u8bbf\u95ee\u8def\u4e0a\u7684\u6811\uff0c\u53ea\u8981\u6ca1\u8bbf\u95ee\u8fc7\uff0c\u8ba1\u6570\u52a01\uff0c\u8fd9\u6837\u5c31\u6c42\u51fa\u4e86\u8def\u4e0a\u6240\u6709\u8fd8\u5b58\u5728\u7684\u6811\u7684\u6570\u76ee\u3002\n\n\n\u7a0b\u5e8f\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\n#include<cstring>\n//\u4ee5\u4e0a\u4e0d\u89e3\u91ca\nint L,M;\n//\u53d8\u91cf\u540d\u79f0\u4e0e\u539f\u9898\u76f8\u540c\nint cnt=0;\n//\u5269\u4f59\u6811\u7684\u6570\u76ee\nint vis[10000+10];\n//\u7528\u6765\u5224\u65ad\u6811\u6728\u6709\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\nint main()\n{\n    memset(vis,0,sizeof(vis));//\u521d\u59cb\u5316\u8be5\u6570\u7ec4\n    cin>>L>>M;//\u6807\u51c6\u8f93\u5165\uff0c\u4e0d\u89e3\u91ca\n    for(int i=0;i<=L;i++)\n        vis[i]=0;//\u4ece0\u8fd9\u4e2a\u6811\u5f00\u59cb\uff0c\u5c06\u8fd9\u6761\u8def\u4e0a\u6240\u6709\u7684\u6811\u6807\u8bb0\u4e3a\u672a\u8bbf\u95ee\u8fc7\n    for(int i=1;i<=M;i++)\n    {\n        int head,tail;//\u5b9a\u4e49\u533a\u95f4\u7684\u5934\u548c\u5c3e\n        cin>>head>>tail;\n        for(int j=head;j<=tail;j++)\n            if(vis[j]==0)\n                vis[j]=1;//\u4ece\u8fd9\u4e2a\u533a\u95f4\u7684\u5934\u548c\u5c3e\u5f00\u59cb\uff0c\u5c06\u6240\u6709\u533a\u95f4\u5185\u7684\u6811\u6807\u8bb0\u4e3a\u8bbf\u95ee\u8fc7\n    }\n    for(int i=0;i<=L;i++)\n    {\n        if(vis[i]==0)\n            cnt++;//\u8ba1\u7b97\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u6811\u7684\u6570\u76ee\n    }\n    cout<<cnt<<endl;\n    return 0;\n} \n```\n\u5927\u4f53\u5c31\u662f\u8fd9\u6837\uff0c\u7b2c\u4e00\u6b21\u653e\u9898\u89e3\uff0c\u8bf7\u5927\u5bb6\u63ea\u4e00\u4e0b\u9519\u5427",
        "postTime": 1475762252,
        "uid": 21725,
        "name": "ChargeDonkey",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\n\n\u4e3a\u4f55\u8981\u7528\u6811\u72b6\u6570\u7ec4\uff1f\u53ea\u662f\u4e3a\u4e86\u70ab\u8000\u4f60\u4eec\u7684\u5b66\u8bc6\u5417\uff1f\u7528\u6a21\u62df\u96be\u9053\u4e0d\u662f\u66f4\u597d\u5417\uff1f\n\n\u2014\u2014\u4e3a\u4f55\u8981\u7528\u6a21\u62df\uff1f\u53ea\u662f\u4e3a\u4e86\u70ab\u8000\u4f60\u4eec\u7684\u5b66\u8bc6\u5417\uff1f\u7528\u7ebf\u6bb5\u6811\u96be\u9053\u4e0d\u662f\u66f4\u597d\u5417\uff1f\n\n\u2014\u2014\u4e3a\u4f55\u8981\u7528\u7ebf\u6bb5\u6811\uff1f\u53ea\u662f\u4e3a\u4e86\u70ab\u8000\u4f60\u4eec\u7684\u5b66\u8bc6\u5417\uff1f\u7528\u5206\u5757\u96be\u9053\u4e0d\u662f\u66f4\u597d\u5417\uff1f\n\n\u2014\u2014\u4e3a\u4f55\u8981\u7528\u5206\u5757\uff1f\u53ea\u662f\u4e3a\u4e86\u70ab\u8000\u4f60\u4eec\u7684\u5b66\u8bc6\u5417\uff1f\u7528**\u73c2\u6735\u8389\u6811**\u96be\u9053\u4e0d\u662f\u66f4\u597d\u5417\uff1f\n\n\uff08\u4ee5\u4e0a\u6539\u7f16\u81ea\u672c\u9898\u4e00\u9898\u89e3\u7684\u8bc4\u8bbaqwq\uff09\n\n------------\n### \u5c0f\u849f\u84bb\u7ec8\u4e8e\u6709\u673a\u4f1a\u5199\u4e00\u9053\u8fd9\u4e48\u96be\u7684\u9898\u7684\u9898\u89e3\u4e86\uff0cSo exciting\uff01\n\u770b\u4e86\u4e0a\u9762\u7684\u4e00\u6bb5\u8bdd\uff0c\u5404\u4f4d\u5de8\u4f6c\u4e00\u5b9a\u5df2\u7ecf\u660e\u767d\u5c0f\u849f\u84bb\u8fd9\u7bc7\u9898\u89e3\u60f3\u8bb2\u7684\u662f\u4ec0\u4e48\u4e86\uff0c**\u4f46\u662f**\n## \u73c2\u6735\u8389\u6811\u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\uff1f\n![](https://cdn.luogu.com.cn/upload/pic/37472.png)\n\n#### \u80af\u5b9a\u6709\u4eba\u60f3\u95ee\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c0f\u849f\u84bb\u8fd9\u91cc\u5148\u4e0d\u8bf4\uff0c\u5404\u4f4d\u6682\u4e14\u770b\u770b\u5c0f\u849f\u84bb\u505a\u8fd9\u9053\u9898\u7684\u5fc3\u8def\u5386\u7a0bQ\u03c9Q\n\n\n~~\u5728\u521a\u5b66OI\u7684\u65f6\u5019\uff0c~~\u5c0f\u849f\u84bb\u6700\u5f00\u59cb\u81ea\u7136\u662f\u7528**\u6a21\u62df**\u505a\u7684\uff0c\u76f4\u63a5N\u65b9\u66b4\u529b\u8986\u76d6\uff0c\u6700\u540e\u518d\u53bb\u67e5\u8be2qwq\n\n\u4e4b\u540e\u5c0f\u849f\u84bb\u63a5\u89e6\u4e86**\u7ebf\u6bb5\u6811**\uff0c\u611f\u89c9\u7ebf\u6bb5\u6811\u8fd9\u4e1c\u897f\u597d\u597d\u7528\u5440\uff0c~~\u624b\u91cc\u62ff\u7740\u9524\u5b50\u770b\u4ec0\u4e48\u90fd\u662f\u9489\u5b50~~\uff0c\u7ed3\u679c\u5c31\u91cd\u65b0\u53d1\u73b0\u4e86\u8fd9\u9053\u795e\u9898\uff0c\u4e00\u5f00\u59cb\u8fd8\u8c03\u4e86\u4e0d\u5c11\u65f6\u95f4\uff0c\u540e\u6765\u53d1\u73b0\u5176\u5b9e\u5c31\u662f\u4e2a\u7ebf\u6bb5\u6811\u7684\u677f\u5b50qwq\uff0c\u521d\u59cb\u503c\u90fd\u8d4b\u4e3a1\uff0cupdate\u8d4b\u503c\u4e3a0\uff0c\u6700\u540equery\u6c42\u548c\u4e00\u4e0b\u5c31\u5b8c\u4e8b\u4e86(\u8fd9\u9053\u9898\u56e0\u4e3a\u662f\u7edf\u8ba1\u5168\u90e8\u533a\u95f4\u53ef\u4ee5\u76f4\u63a5\u8f93\u51faans[1])\n\n\u4e4b\u540e\u5c0f\u849f\u84bb\u6709\u53bb\u5b66\u4e86**\u5206\u5757**\uff0c~~\u611f\u89c9\u5206\u5757\u8fd9\u4e1c\u897f\u4e5f\u597d\u597d\u7528\u5440~~\uff0c\u628a\u6570\u5217\u5206\u6210\u6839\u53f7n\u5757\uff0c\u5bf9\u4e8e\u6563\u5757\u76f4\u63a5\u66b4\u529b\u4fee\u6539\uff0c\u6574\u5757\u6253\u4e2atag\uff0c\u540c\u65f6\u8981\u7ef4\u62a4\u4e00\u4e2aans\u6570\u7ec4\uff0c\u4fdd\u5b58\u6bcf\u4e2a\u5757\u5185\u7684\u7b54\u6848\u3002\u67e5\u8be2\u56e0\u4e3a\u662f\u4ece0~n,\u4e00\u5b9a\u90fd\u662f\u6574\u5757\uff0c\u5c0f\u849f\u84bb\u5c31\u5077\u4e86\u4e2a\u61d2\uff0c\u76f4\u63a5\u628a\u6240\u6709\u7684ans\u52a0\u8d77\u6765\u4e86\u3002\n\n\uff08**\u4ee5\u4e0a\u4e09\u79cd\u65b9\u6cd5\u7684\u4ee3\u7801\u5728\u9898\u89e3\u6700\u540e\u7ed9\u51fa\uff09 **\n\n### \u597d\u4e86\uff0c\u7ec8\u4e8e\u8981\u8fdb\u5165\u4eca\u5929\u7684\u6b63\u9898\u4e86\uff01\n\u89c2\u5bdf\u9898\u76ee\uff1a\u533a\u95f4\u8d4b\u503c\u4e3a0\n\n### \u9009\u62e9\u73c2\u6735\u8389\u6811\n![](https://cdn.luogu.com.cn/upload/pic/37474.png)\n\n\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b,\u73c2\u6735\u8389\u6811\u662f\u4e00\u79cd\u57fa\u4e8eset\u7684\u66b4\u529b\u6570\u636e\u7ed3\u6784\n\n\u73c2\u6735\u8389\u6811\u7684\u5173\u952e\u5728\u4e8e\u63a8\u5e73\u4e00\u6bb5\u533a\u95f4\uff0c\u5373\u628a\u4e00\u6bb5\u533a\u95f4\u7684\u6570\u53d8\u7684\u4e00\u6837\uff08\u4f3c\u4e4e\u6240\u6709\u73c2\u6735\u8389\u6811\u7684\u8bb2\u89e3\u91cc\u9762\u90fd\u8bf4\u4e86\u8fd9\u4e00\u53e5\u8bdd\uff09\n\n\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u5efa\u7acb\u4e00\u4e2a\u96c6\u5408\n\n\u5f53\u9700\u8981\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5c31\u628a\u8981\u4fee\u6539\u533a\u95f4\u5206\u6210\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u9700\u8981\u4fee\u6539\u7684\uff0c\u4e00\u90e8\u5206\u662f\u4e0d\u9700\u8981\u4fee\u6539\u7684\uff0c\u8fd4\u56de\u9700\u8981\u4fee\u6539\u7684\u5730\u5740\uff1b\n\n\u7136\u540e\u628a\u8fd9\u4e00\u6bb5\u533a\u95f4\u5185\u6240\u6709\u7684\u96c6\u5408\u90fd\u5220\u6389\uff0c\u7528\u4e00\u4e2a\u5927\u96c6\u5408\u4ee3\u66ff\u4e4b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u90a3\u4e48\u4ee3\u7801\u5982\u4e0b\uff1a\n**\u5148\u4e0a\u73c2\u6735\u8389\u6811\uff1a**\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<set>\n#include<algorithm>\n#define re register\n#define FOR(i,l,r) for(re int i=l;i<=r;++i)\n#define IT set<node>::iterator\nusing namespace std;\n\nint n,m,x,y;\n\ninline void in(re int &x){\n    x=0;char c=getchar();\n    while(c<'0'||c>'9'){\n        c=getchar();\n    }\n    while(c<='9'&&c>='0'){\n        x=(x<<1)+(x<<3)+(c^'0');\n        c=getchar();\n    }\n}\n\ninline void out(re int a){\n    if(a>=10)out(a/10);\n    putchar(a%10+'0');\n}\n\nstruct node{\n    int l,r;\n    mutable int v;\n    node(int L,int R=-1,int V=0):l(L),r(R),v(V) {}\n    bool operator <(const node &o)const{\n        return l<o.l;\n    }\n};\n\nset<node> s;\n\ninline IT split(re int pos){\n    IT it=s.lower_bound(node(pos));\n    if(it!=s.end()&&it->l==pos)\n      return it;\n    --it;\n    int L=it->l;\n    int R=it->r;\n    int V=it->v;\n    s.erase(it);\n    s.insert(node(L,pos-1,V));\n    return s.insert(node(pos,R,V)).first;\n}\n\ninline void assign_val(re int l,re int r,re int val=0){\n    IT itr=split(r+1),itl=split(l);\n    s.erase(itl,itr);\n    s.insert(node(l,r,val));\n}\n\ninline int query(re int l,re int r){\n    int res=0;\n    IT itr=split(r+1),itl=split(l);\n    for(;itl!=itr;++itl)\n      res+=(itl->r-itl->l+1)*(itl->v);\n    return res;\n}\n\nint main(){\n    in(n),in(m);\n    s.insert(node(0,n,1));\n    FOR(i,1,m){\n        in(x),in(y);\n        assign_val(x,y,0);\n    }\n    out(query(0,n));\n    puts(\"\");\n}\n```\n### \u7136\u540e\u662f\u4e4b\u524d\u63d0\u5230\u7684\u4e09\u79cd\u65b9\u6cd5\uff1a\n\n**code1 \u6a21\u62df\uff1a**\n\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio> \n#define re register\n#define FOR(i,l,r) for(re int i=l;i<=r;++i)\nusing namespace std;\n\nint a[200001],i,h1,h2,s=0,m,l,j;\n\ninline void in(re int &x){\n    x=0;char c=getchar();\n    while(c<'0'||c>'9'){\n        c=getchar();\n    }\n    while(c<='9'&&c>='0'){\n        x=(x<<1)+(x<<3)+(c^'0');\n        c=getchar();\n    }\n}\n\ninline void out(re int a){\n    if(a>=10)out(a/10);\n    putchar(a%10+'0');\n}\n\nint main(){\n    in(l),in(m); \n    FOR(i,1,m){\n    \tin(h1),in(h2);\n    \tFOR(j,h1,h2)\n          a[j]=1;\n    }\n\tFOR(i,0,l)  \n      if(a[i]==0)\n        ++s;\n    out(s);\n    puts(\"\");    \n}\n```\n**code2 \u7ebf\u6bb5\u6811:**\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define re register\n#define FOR(i,l,r) for(re int i=l;i<=r;++i)\nusing namespace std;\n\nint a[100001],ans[100001],tag[100001],m,n,k,l,t,cnt,x,y;\n\ninline int in(){  \n    char ch;  \n    int a=0;  \n    while(!(((ch=getchar())>='0')&&(ch<='9')));  \n    a*=10;a+=ch-'0';  \n    while(((ch=getchar())>='0')&&(ch<='9'))a*=10,a+=ch-'0';  \n    return a;  \n}\n\ninline void out(int a){\n    if(a>=10)out(a/10);\n    putchar(a%10+'0');\n}\n\ninline int ls(int ss){\n    return ss<<1;\n}\n\ninline int rs(int ss){\n    return (ss<<1)|1;\n}\n\ninline void push_up(int k){\n    ans[k]=ans[ls(k)]+ans[rs(k)];\n}\n\ninline void push_down(int i){\n    if(tag[i]){\n        tag[i]=0;\n        tag[ls(i)]=1;\n        tag[rs(i)]=1;\n        ans[ls(i)]=0;\n        ans[rs(i)]=0;\n    }\n}\n\ninline void build(int p,int l,int r){\n    if(l==r){\n        ans[p]=1;\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(ls(p),l,mid);\n    build(rs(p),mid+1,r);\n    push_up(p);\n}\n\ninline void update(int nl,int nr,int l,int r,int p){\n    if(nl<=l&&r<=nr){\n        tag[p]=1;\n        ans[p]=0;\n        return;\n    }\n    push_down(p);\n    int mid=(l+r)>>1;\n    if(nl<=mid) update(nl,nr,l,mid,ls(p));\n    if(nr>mid) update(nl,nr,mid+1,r,rs(p));\n    push_up(p);\n}\n\nint main(){\n    n=in(),m=in();\n    build(1,1,n+1);\n    FOR(i,1,m){\n        x=in(),y=in();\n        update(x+1,y+1,1,n+1,1);\n    }\n    out(ans[1]);\n    puts(\"\");\n}\n```\n\n**code3 \u5206\u5757\uff1a**\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath> \n#define maxn 500010\n#define re register\n#define FOR(i,l,r) for(re int i=l;i<=r;++i)\nusing namespace std;\n\nint n,m,c,r,t,x,y,z,sq,anss;\nint a[maxn],b[maxn],tag[maxn],ans[maxn];\n\ninline void in(int &x){\n    x=0;char c=getchar();\n    while(c<'0'||c>'9'){\n        c=getchar();\n    }\n    while(c<='9'&&c>='0'){\n        x=(x<<1)+(x<<3)+(c^'0');\n        c=getchar();\n    }\n}\n\ninline void out(int a){\n    if(a>=10)out(a/10);\n    putchar(a%10+'0');\n}\n\nvoid doit(int x,int y){\n\tif(tag[b[x]]!=1)\n\t  FOR(i,x,min(y,b[x]*sq))\n\t    ans[b[x]]-=a[i],a[i]=0;\n\tif(b[x]!=b[y]&&tag[b[y]]!=1)\n\t  FOR(i,(b[y]-1)*sq+1,y)\n\t    ans[b[y]]-=a[i],a[i]=0;\n\tFOR(i,b[x]+1,b[y]-1)\n\t  tag[i]=1,ans[i]=0;\n}\n\nint main(){\n\tin(n),in(m);\n\tsq=sqrt(n);\n\tFOR(i,0,n)\n\t  a[i]=1,b[i]=(i-1)/sq+1,++ans[b[i]];\n\tFOR(i,1,m){\n\t\tin(x),in(y);\n\t\tdoit(x,y);\n\t}\n\tFOR(i,1,b[n])\n\t  anss+=ans[i];\n\tout(anss);\n\tputs(\"\");\n} \n```\n**\u5c0f\u849f\u84bb\u7684\u9898\u89e3\u4e5f\u5c31\u5230\u6b64\u7ed3\u675f\u5566qwq**\n\n**\u5982\u679c\u6709\u4ec0\u4e48\u610f\u89c1\u6216\u5efa\u8bae\u7684\u8bdd\u8bf7\u548c\u5c0f\u849f\u84bb\u79c1\u4fe1\u5450qwq**\n\n### \u6700\u540e\u795d\u5927\u5bb6NOIP RP++!",
        "postTime": 1539339759,
        "uid": 66965,
        "name": "Juan_feng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5229\u75280\u548c1\u6807\u8bb0\uff0c\u82e5\u5df2\u7ecf\u79fb\u6811\uff0c\u5219\u4e3a1.\n\n\u76f4\u63a5\u5728\u8f93\u5165\u7684\u5faa\u73af\u91cc\u5224\u65ad\u3001\u6807\u8bb0\u3002\n\n\u6700\u540e\u518d\u8fc7\u4e00\u904d\uff0c\u8ba1\u6570\u3002\n\n```cpp\n\t\n    include <iostream>\n\tusing namespace std;\n    int main(){\n  int i,j,k,m,n,l,sum=0;\n  int a[10001],q,z; cin>>l>>m;\n  for(i=0;i<=l;i++)a[i]=0;\n  for(i=1;i<=m;i++){ cin>>q>>z; \t \n  for(j=q;j<=z;j++)if(a[j]==0)a[j]++; } \n  for(i=0;i<=l;i++)if(a[i]==0)sum++;\n  cout<<sum;\n  }\n```",
        "postTime": 1538736178,
        "uid": 114504,
        "name": "\u68a6\u91cc\u8c03\u97f3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u6821\u95e8\u5916\u7684\u6811 \uff08C\u8bed\u8a00\u63cf\u8ff0\uff09 \u7528\u4e00\u4e2a\u6570\u7ec4\u50a8\u5b58\u5e38\u6570\n\n\n\u51a5\u601d\u82e6\u60f3\u4e0d\u77e5\u9053\u600e\u4e48\u628a\u51e0\u4e2a\u8f93\u5165\u5408\u5e76\uff0c\u6ca1\u529e\u6cd5\u5c31\u7528\u4e86\u7b28\u7b28\u7684\u65b9\u6cd5\uff0c\n\n\n\u5408\u5e76\u6cd5\u4e4b\u540e\u518d\u60f3\u4e00\u4e0b\n\n\n\u6ce8\u610f\u4e8b\u9879:\n\n\n\n\u6807\u8bb0\u8fdb\u6570\u7ec4\u5343\u4e07\u4e0d\u8981else \u518d\u6807\u8bb0\uff0c\u6211\u521a\u6389\u4e86\u5751\n\n\n\n\u53c2\u8003\u4ee3\u7801:#include<stdio.h>\n\n\n\n\n\n```cpp\nint main()\n{\n    int i,j,L,a[2],b[10001],M,count=0;\n    scanf(\"%d%d\",&L,&M);\n    for(i=0;i<=L;i++)\n        b[i]=0;\n    for(i=1;i<=M;i++){\n        for(j=0;j<2;j++)\n            scanf(\"%d\",&a[j]);\n        for(j=0;j<=L;j++)\n            if(j>=a[0]&&j<=a[1]) b[j]=1;\n    }\n    for(i=0;i<=L;i++)\n        if(b[i]==0) count++;\n    printf(\"%d\",count);\n     return 0;\n}\n```\n\u65b9\u6cd52\uff1a\n\nc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                     \n\n\n\n\n\n```cpp\n#include<stdio.h>                      \nint main()                             \n{                                      \n int L,M;//L\u9053\u8def\u957f\u5ea6M\u4ee3\u8868\u533a\u57df\u6570\u76ee    \n int i,initial,end,l=0,nb=0;       \nscanf(\"%d%d\",&L,&M);                  \nint road[L+1]; //\u4ee3\u8868\u6570\u8f74\u7684\u957f\u5ea6\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9                       \nfor(i=0;i<=L;i++)                     \n road[i]=0;        //0\u8868\u793a\u8282\u70b9\u4e0a\u6709\u6811\u6728                 \nfor(i=0;i<M;i++){                     \nscanf(\"%d%d\",&initial,&end);          \n     for(l=initial;l<=end;l++)         \n  road[l]=1;     //1\u8868\u793a\u8be5\u8282\u70b9\u7684\u6811\u88ab\u780d\u4f10\u4e86\u3002                   \n}                                     \n   for(i=0;i<L+1;i++){                 \n  if(road[i]==0)                     \n    nb++;  //\u8ba1\u7b97\u6709\u6811\u6728\u7684\u8282\u70b9\u7684\u6570\u91cf                           \n    }                                  \nprintf(\"%d\",nb);                      \nreturn 0;                            \n}                                      \n```\n\u65b9\u6cd53\uff1a\nc\n\u89e3\u9898\u601d\u8def:\n\n\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4\uff1b\u6570\u7ec4\u4e0b\u6807\u4ee3\u8868\u6570\u8f74\u4e0a\u7684\u6bcf\u4e2a\u6574\u6570\u70b9\u53730\uff0c1\uff0c2\uff0c\u2026\u2026\uff0cn(\u957f\u5ea6\u4e3a500\u7684\u516c\u8def\u6709501\u9897\u6811\uff09\uff1b\n\n\u628a\u8fd9\u4e2a\u6570\u7ec4\u521d\u59cb\u5316\u5168\u4e3a1\uff08\u4e3a1\u4ee3\u8868\u6709\u6811\uff0c0\u4ee3\u8868\u88ab\u79fb\u9664\uff09\uff1b\n\n\n\u8f93\u5165\u79fb\u9664\u533a\u57df(x,y)\uff0c\u628a\u8fd9\u4e2a\u533a\u57df\u4e0a\u7684\u6811\u5168\u7f6e0\uff1b\uff08\u6709\u591a\u4e2a\uff0c\u7528\u5faa\u73af\u63a7\u5236\uff09\uff1b\n\n\n\u8f93\u51fa\u4e3a1\u7684\u6811\u7684\u6570\u76ee\uff1b\n\n\n\u6ce8\u610f\u4e8b\u9879:\n\n\u6570\u8f74\u4e0a\u76840\u70b9\u4e5f\u6709\u6570\uff1b\n\n\n\n\n\n\u53c2\u8003\u4ee3\u7801:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n```cpp\n#include<stdio.h>\nvoid chushihua(int *a,int n);\nvoid yichu(int *a,int x,int y);\nvoid output(int *a,int n);\nvoid function();\n```\n/\\*--------------------------------------------------\\*/\n```cpp\nint main()\n{\n  function();\n  return 0;\n}\n```\n/\\*--------------------------------------------------\\*/\n \n```cpp\nvoid function()\n{\n int n,h;\n int x,y;\n int a[10001];\n while(scanf(\"%d%d\",&n,&h)!=EOF)\n {\n  chushihua(a,n);\n  for(int i=0;i<h;i++)\n   {scanf(\"%d%d\",&x,&y);yichu(a,x,y);}\n   output(a,n);\n }\nreturn ;\n}\n```\n/\\*--------------------------------------------------\\*/\n```cpp\nvoid chushihua(int *a,int n)\n{\n for(int i=0;i<=n;i++)\n  a[i]=1;\n  return ;\n}\n```\n/\\*--------------------------------------------------\\*/\n```cpp\nvoid yichu(int *a,int x,int y)\n{\n for(int i=x;i<=y;i++)\n  a[i]=0;\n  return ;\n}\n```\n/\\*--------------------------------------------------\\*/\n \n\n```cpp\nvoid output(int *a,int n)\n{\n int sum=0;\n for(int i=0;i<=n;i++)\n  {if(a[i]==1)sum++;}\n  printf(\"%d\\n\",sum);\n  return ;\n}\n```\n\u63a5\u4e0b\u6765\u662fc++\u9009\u624b\u9700\u6ce8\u610f\u7684\n\n\n\u89e3\u9898\u601d\u8def:\n\n\u5229\u7528\u6807\u8bb0\u6570\u7ec4\n\n\n\n\n\n\u6ce8\u610f\u4e8b\u9879:\n\n\u660e\u786e\u7aef\u70b9\u662f\u5426\u5305\u542b\u5176\u4e2d\n\n\n\n\n\n\u53c2\u8003\u4ee3\u7801:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\nusing namespace std;\nint main ()\n{\nint l,m;\ncin>>l>>m;\nint *p=new int [l+1];\nfor(int i=0;i<l+1;i++)\n*(p+i)=1;\nfor(int i=0;i<m;i++)\n{\nint temp1,temp2;\ncin>>temp1>>temp2;\nfor(int j=temp1;j<=temp2;j++)\n*(p+j)=0;\n}\nint count=0;\nfor(int i=0;i<l+1;i++)\nif(*(p+i)) count++;\ncout<<count<<endl;\nreturn 0;\n } \n```\n\u65b9\u6cd52\uff1a\n\n\n\u4f7f\u7528\u6570\u7ec4\u7684\u65f6\u5019\uff0c\u6570\u7ec4\u8981\u5927\u4e00\u4e9b\u624d\u884c\uff0c\u5b9a\u4e49\u5728\u4e3b\u51fd\u6570\u5916\uff0c\u9632\u6b62\u6808\u6ea2\u51fa\n\n \n \n \n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint road[10000];\nint main(void)\n{\n    int l , m , i , j , count=0;\n    int a[100],b[100];\n    while(scanf(\"%d%d\",&l,&m)!=EOF){\n    count=0;\n    for(i=0;i<m;i++)\n    {\n        cin >> a[i];\n        cin >> b[i];\n    }\n    for(i=0;i<=l;i++)\n    {\n         road[i]=0;\n         for( j=0;j<m;j++)\n         {\n             if(i>=a[j]&&i<=b[j])\n             road[i]=1;\n         }\n         if(road[i]==0) count++;\n    }\n     printf(\"%d\\n\",count);\n}\n    return 0;\n}\n```\n\u65b9\u6cd53:\n\u4f7f\u7528c++\u7684\u96c6\u5408\n\n\n\n```cpp\n#include<iostream>\n#include<set>\nusing namespace std;\nint main(void)\n{\n    int a[100],b[100], i , j ,  l , n ;\n    set<int>box;\n    cin >> l >> n ;\n    for(i=0;i<n;i++)\n    cin >> a[i] >> b[i] ;\n    for(i=0;i<n;i++)\n    for(j=a[i];j<=b[i];j++)\n    box.insert(j);\n    cout << l + 1 - box.size() <<  endl;\n    return 0;\n}\n\n```",
        "postTime": 1514295334,
        "uid": 64191,
        "name": "\u5c0f\u767d\u4e00\u679a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u5982\u679c\u533a\u95f4\u6ca1\u6709\u91cd\u5408\uff0c\u5f88\u591a\u4eba\u7684\u60ef\u6027\u601d\u7ef4\u5c31\u662f\u60f3\u7740\u628a\u7ed3\u679c\u201c\u7b97\u201d\u6765\uff0c\u5c31\u662f\u5206\u522b\u628a\u4e09\u4e2a\u533a\u95f4\u7684\u4e0a\u754c\u51cf\u53bb\u4e0b\u754c\u52a0\u4e00\uff0c\u7136\u540e\u76f8\u52a0\u8d77\u6765\u3002\u5982\u679c\u6709\u533a\u95f4\u91cd\u5408\u5f88\u591a\u4eba\u53ef\u80fd\u8fd8\u662f\u6ca1\u6709\u626d\u8f6c\u601d\u7ef4\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8ba9\u8ba1\u7b97\u673a\u53bb\u6570\u3002\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4\uff0c\u628a\u6570\u4ece0\u5230L\u4f9d\u6b21\u7f16\u53f7\uff0c\u628a\u780d\u4e86\u7684\u6811\u6807\u8bb0\u4e3a-1\u3002\u5982\u679c\u6709\u533a\u95f4\u91cd\u5408\u5927\u4e0d\u4e86\u662f\u91cd\u590d\u8d4b\u503c\u7f62\u4e86\u3002\u6700\u540e\u904d\u5386\u6574\u4e2a\u6570\u7ec4\uff0c\u9047\u5230\u975e\u8d1f\u6570\uff0cans\u52a0\u4e00\u5373\u53ef\u5f97\u5230\u6700\u7ec8\u7b54\u6848\u3002\u601d\u8def\u7b80\u5355\uff0c\u4ee3\u7801\u81ea\u7136\u4e5f\u4e0d\u590d\u6742\n\n\n------------\n```c\n#include<stdio.h>\nint main()\n{\n\tint L,n,i,ans=0,p,q;\n\tint a[10005];\n\tscanf(\"%d%d\",&L,&n);\n\tfor(i=0;i<=L;i++)\n\t\ta[i]=i;\n\t\n\twhile(n--)\n\t{\n\t\tscanf(\"%d%d\",&p,&q);\n\t\tfor(i=p;i<=q;i++)\n\t\t\ta[i]=-1;\n\t}\n\n\tfor(i=0;i<=L;i++)\n\t\tif(a[i]>=0)\n\t\t\tans++;\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1541925652,
        "uid": 153853,
        "name": "passerbyYSQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u65b0\u5efa\u6570\u7ec4\u4f7f\u6240\u6709\u6574\u6570\u70b9\u521d\u503c\u5747\u4e3a0\uff0c\u6bcf\u6b21\u5faa\u73af\u8f93\u5165\u8d77\u59cb\u70b9\u548c\u7ec8\u6b62\u70b9\u540e\uff0c\u628a\u5728\u8d77\u59cb\u70b9\u548c\u7ec8\u6b62\u70b9\u7684\u8fd9\u6bb5\u8ddd\u79bb\u4e2d\u7684\u6574\u6570\u70b9\u6807\u8bb0\u4e3a1\n\n```cpp\n#include<iostream>\nusing namespace std;\nint a[10001],s[101],e[101];\nint main(){\n\tint L,M;\n\tint ans=0;\n\tcin>>L>>M;\n\tfor(int i=0;i<M;i++){\n\t\tcin>>s[i]>>e[i];\n\t\tfor(int j=s[i];j<=e[i];j++){\n\t\t\ta[j]=1;//\u5728\u9a6c\u8def\u4e0a\u8fd9\u6bb5\u8ddd\u79bb\u7684\u6574\u6570\u70b9\u6807\u4f4d1\n\t\t}\n\t}\n\tfor(int i=0;i<=L;i++){\n\t\tif(a[i]==0)ans++;//\u6ca1\u88ab\u6807\u8bb0\u8fc7\u7684\u70b9\u8bf4\u660e\u6ca1\u6709\u4fee\u5730\u94c1\uff0c\u6811\u4fdd\u7559\n\t}\n\tcout<<ans;\n} \n```",
        "postTime": 1533485156,
        "uid": 41506,
        "name": "\u806a\u806a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "### \u6b64\u9898\u89e3\u5206\u4e24\u90e8\u5206\uff0c\u8bf7\u9009\u624b\u5bf9\u53f7\u5165\u5ea7\n\n### 1.\u666e\u53ca\u7ec4\u521d\u5b66\u8005\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7for\u5faa\u73af\u6765\u5b9e\u73b0\u64cd\u4f5c\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\u662f\u5426\u6709\u6811\u3002\u5f53\u4fee\u6539\u65f6\uff0c\u5d4c\u5957\u4e00\u4e2afor\u5faa\u73af\u53ef\u4ee5\u628a\u8fd9\u4e00\u90e8\u5206\u6807\u8bb0\u4e0b\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\nusing namespace std;\nint main()\n{\n    int a[10010],b,c,d,e,f=0;\n    cin>>b>>c;\n    for(int i=0;i<=b;i++)\n    {\n        a[i]=1;//\u628a\u6709\u6811\u7684\u6807\u8bb0\u4e0a\n    }\n    for(int j=0;j<=c-1;j++)\n    {\n        cin>>d>>e;\n        for(int k=d;k<=e;k++)\n        {\n            a[k]=0;//\u88ab\u780d\u7684\u8bb0\u5f97\u6539\u4e3a0\n        }\n    }\n    for(int l=0;l<=b;l++)\n    {\n        if (a[l]==1)\n            f++;//\u7edf\u8ba1\u5269\u4f59\u7684\u6811\n    }\n    cout<<f;\n    return 0;\n}\n```\n\n### 2.\u63d0\u9ad8\u7ec4~~\u65e0\u8111~~\u505a\u6cd5\n\n\u8fd9\u4e48\u7b80\u5355\uff0c\u4e00\u5b9a\u662f**\u7ebf\u6bb5\u6811**\u3002\n\n\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5efa\u4e00\u68f5\u533a\u95f4\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u7684\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\uff0c\uff0c\uff0c\u5c31\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u7684\u53ef\u4ee5\u53bb[\u8fd9\u91cc](https://yizimiyuanxin.blog.luogu.org/ac-jun-tuan-zhou-bao-xian-duan-shu-zong-ru-men-dao-ru-tu)\u548c[\u8fd9\u91cc](https://yizimiyuanxin.blog.luogu.org/ac-jun-tuan-zhou-bao-di-er-zhou-xian-duan-shu-zong-ru-men-dao-ru-tu-post)\u5b66\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<ctime>\nusing namespace std;\n#define go(i,j,n,k) for(int i=j;i<=n;i+=k)\n#define fo(i,j,n,k) for(int i=j;i>=n;i-=k)\n#define rep(i,x) for(int i=h[x];i;i=e[i].nxt)\n#define mn 100010\n#define inf 2147483637\n#define ll long long\n//#define LOCAL\n#define Debug(...) fprintf(stderr, __VA_ARGS__)\n#define root 0,n,1\n#define lson l,m,rt<<1\n#define rson m+1,r,rt<<1|1\n#define bson l,r,rt\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nll z[mn<<2],col[mn<<2];\ninline void update(int rt){\n\tz[rt]=z[rt<<1]+z[rt<<1|1];\n}\ninline void color(int l,int r,int rt,ll v){\n\tz[rt]=(r-l+1)*v;\n\tcol[rt]=v;\n}\ninline void push_col(int l,int r,int rt){\n\tif(col[rt]){\n\t\tint m=(l+r)>>1;\n\t\tcolor(lson,col[rt]);\n\t\tcolor(rson,col[rt]);\n\t\tcol[rt]=0;\n\t}\n}\ninline void build(int l,int r,int rt){\n\tif(l==r){z[rt]=0;return;}\n\tint m=(l+r)>>1;\n\tbuild(lson);\n\tbuild(rson);\n\tupdate(rt);\n}\ninline void modify(int l,int r,int rt,int nowl,int nowr,ll v){\n\tif(nowl<=l && r<=nowr){color(bson,v);return;}\n\tint m=(l+r)>>1;\n\tpush_col(bson);\n\tif(nowl<=m)\tmodify(lson,nowl,nowr,v);\n\tif(m<nowr)  modify(rson,nowl,nowr,v);\n\tupdate(rt);\n}\ninline ll query(int l,int r,int rt,int nowl,int nowr){\n\tif(nowl<=l && r<=nowr)\treturn z[rt];\n\tint m=(l+r)>>1;\n\tpush_col(bson);\n\tif(nowl<=m){\n\t\tif(m<nowr)\n\t\t\treturn query(lson,nowl,nowr)+query(rson,nowl,nowr);\n\t\telse\n\t\t\treturn query(lson,nowl,nowr);\n\t}else{\n\t\treturn query(rson,nowl,nowr);\n\t}\n}\nint n,m;\nint main(){\n\tn=read();m=read();\n\tbuild(0,n,1);\n\tgo(i,1,m,1){\n\t\tint a=read(),b=read();\n\t\tmodify(root,a,b,1);\n\t}\n\tcout << n - query(root,0,n) + 1 << \"\\n\";\n    //\u6211\u4eec\u7edf\u8ba1\u7684\u662f\u88ab\u780d\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u6700\u540e\u8981\u628a\u5b83\u53d8\u6210\u5269\u7684\u6811\u7684\u6570\u76ee\n\t#ifdef LOCAL\n    \tDebug(\"\\nMy Time: %.3lfms\\n\", (double)clock() / CLOCKS_PER_SEC);\n\t#endif\n\treturn 0;\n}\n\n```\n\n#### \u7b2c12\u6b21\u53d1\u9898\u89e3\uff0c\u5e0c\u671b\u53ef\u4ee5\u517c\u987e\u6240\u6709\u7684\u9009\u624b",
        "postTime": 1537104956,
        "uid": 71168,
        "name": "yizimi\u8fdc\u6b23",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u4e00\u4e2a\u7b80\u5355Python\u65b9\u6cd5\uff0c\u907f\u514d\u521b\u5efa\u8d85\u957f\u6570\u7ec4\uff1a\n```python\ninitialization = input().split()  #\u83b7\u53d6L\u548cM\nl = int(initialization[0])\nm = int(initialization[1])\nthe_tree = [0 for i in range(l + 1)]  #\u5229\u7528\u63a8\u5bfc\u5f0f\u521d\u59cb\u5316\u6570\u7ec4\uff0c\u6709\u6811\u4e3a0\nfor i in range(m):  #\u780d\u6811\u5f00\u59cb\uff0c\u780d\u6389\u7684\u70b9\u8bb0\u4e3a1\n\tnum = input().split()\n\tstart = int(num[0])  #\u533a\u95f4\u5de6\u7aef\u70b9\n\tend = int(num[1]) + 1  #\u533a\u95f4\u53f3\u7aef\u70b9\n\tfor i in range(start,end):  \n\t\tthe_tree[i] = 1\ntree_number = the_tree.count(0)  #\u5229\u7528\u5185\u7f6ecount\u51fd\u6570\u8bb0\u5f55\u5269\u4f59\u7684\u6811\nprint(tree_number,end = '')\n```\n",
        "postTime": 1535860809,
        "uid": 71661,
        "name": "\u516c\u5b59\u5ddd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u4ec5\u4f9b\u53c2\u8003\uff0c\u6b22\u8fce\u7ed9\u51fa\u65b0\u601d\u8def\n```c\n#include<stdio.h>\nint main(){\n    int L,M,b[10000]={0},sum=0,c,d;\n    scanf(\"%d %d\",&L,&M);\n    for(int i=0;i<=L;i++){\n        b[i]=1;\n    }\n    for(int i=0;i<M;i++){\n        scanf(\"%d %d\",&c,&d);\n        for(;c<=d;c++){\n            b[c]=0;\n        }\n    }\n    for(int i=0;i<=L;i++){\n        sum+=b[i];\n    }\n    printf(\"%d\",sum);\n    return 0;\n}\n```",
        "postTime": 1533383256,
        "uid": 118325,
        "name": "IsolatedTraveler",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "```\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner input  =new Scanner(System.in);\n\t\tint L=input.nextInt();\n\t\tint a[]=new int[L+1];\n\t\tint count=0;\n\t\tfor(int i=0;i<=L;i++) //\u5c06\u8def\u4e0a\u7684\u6240\u6709\u6811\u6253\u4e0a\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n\t\t{\n\t\t\ta[i]=0;\n\t\t}\n\t\tint M=input.nextInt();\n\t\tfor(int i=1;i<=M;i++)   //\u5faa\u73afM\u6b21\n\t\t{\n\t\t\tint start=input.nextInt(); //\u533a\u95f4\u7684\u5934\n\t\t\tint end=input.nextInt();   //\u533a\u95f4\u7684\u5c3e\n\t\t\tfor(int j=start;j<=end;j++)\n\t\t\t{\n\t\t\t\tif(a[j]==0)\n\t\t\t\t{\n\t\t\t\t\ta[j]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<=L;i++)\n\t\t{\n\t\t\tif(a[i]==0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n\n```\n\u9898\u76ee\u60f3\u8d77\u6765\u590d\u6742\uff0c\u505a\u8d77\u6765\u4e0d\u96be\uff0c\u6b7b\u65b9\u6cd5\uff01",
        "postTime": 1551769930,
        "uid": 186306,
        "name": "TiMan",
        "ccfLevel": 0,
        "title": "JAVA\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u975e\u5e38\u9002\u5408\u7ebf\u6bb5\u6811\u521d\u5b66\u8005\u7ec3\u4ee3\u7801\u7684\u9898\u76ee\u3002\n\u6211\u4e5f\u5e0c\u671b\u80fd\u5199\u4e00\u7bc7\u521d\u5b66\u7ebf\u6bb5\u6811\u7684\u540c\u5b66\u4eec\uff08\u6bd4\u5982\u6211\uff09\u80fd\u770b\u61c2\u7684\u9898\u89e3\u3002\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u5e76\u4e0d\u590d\u6742\uff0c\u4e0e\u7ef4\u62a4\u7ebf\u6bb5\u6811\u4e0a\u7684\u533a\u95f4\u548c\u5dee\u4e0d\u591a\uff0c\u5728\u66f4\u65b0\u7ebf\u6bb5\u6811\u65f6\u5c06\u76ee\u6807\u8303\u56f4\u5185\u7684\u7ebf\u6bb5\u503c\u8d4b\u4e3a0\uff0c\u5e76\u6253\u4e0alazytag\uff08\u4e0e\u7ebf\u6bb5\u6811\u4e0a\u7684\u533a\u95f4\u548c\u7565\u6709\u4e0d\u540c\uff09\uff0c\u67e5\u8be2\u65f6\u4e0b\u63a8\u6807\u8bb0\u5e76\u66f4\u65b0\u53f6\u8282\u70b9\u5373\u53ef,\u6700\u540e\u4fee\u6539\u533a\u95f4\u5185\u7684\u8282\u70b9\u4fbf\u90fd\u88ab\u8d4b\u4e3a\u4e860\uff0c\u6574\u4e2a\u533a\u95f4\u548c\u4e5f\u4f1a\u968f\u4e4b\u53d8\u4e3a0\u3002\n(lazytag \u7684\u4e0b\u63a8\u6ce8\u91ca\u91cc\u4f1a\u6709\u8be6\u7ec6\u89e3\u91ca)\n\n\u7531\u4e8e\u539f\u70b90\u4e0a\u4e5f\u6709\u4e00\u68f5\u6811\uff0c\u4e3a\u4e86\u6784\u9020\u7ebf\u6bb5\u6811\u7684\u65b9\u4fbf\uff0c\u8fd9\u91cc\u8f93\u5165\u540e\u76f4\u63a5\u5c06\u603b\u957f\u5ea6n\u52a0\u4e00\uff08\u6811\u7684\u4f4d\u7f6e\u75310~n->1~n+1\uff09\uff0c\u540c\u7406\u8f66\u7ad9\u4f4d\u7f6e\u7684\u5de6\u53f3\u7aef\u70b9\u8f93\u5165\u540e\u4e5f\u8981\u52a0\u4e00\u3002\n\n\u6700\u540e\u76f4\u63a5\u8f93\u51fa\u6574\u4e2a\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u503c\u4e4b\u548c\u5c31\u53ef\u4ee5\u4e86\uff08\u5373tree[1].w)\u3002\n\n```\n#include<bits/stdc++.h>\n#define MAXN 100007\nusing namespace std;\nint n,m,x,y;\nstruct SegTree{\n\tint l;//\u5de6\u7aef\u70b9\n\tint r;//\u53f3\u7aef\u70b9\n\tlong long w;//\u533a\u95f4\u548c\uff08\u8868\u793a\u533a\u95f4\u5185\u6811\u7684\u603b\u6570\uff09\n\tint lt;//lazytag(\u61d2\u60f0\u6807\u8bb0)\n\tint add;\n\tint mul;\n\tSegTree() {lt=1;}//\u5c06lazytag\u521d\u59cb\u5316\u4e3a\u4e00\n}tree[MAXN<<2];  //\u6ce8\u610ftree\u6570\u7ec4\u7684\u957f\u5ea6\u81f3\u5c11\u4e3amaxn*4\ninline void build(int l,int r,int u)//\u5efa\u6811\n{\n\ttree[u].l=l,tree[u].r=r;\n\tif(l==r) {tree[u].w=1;return;}//\u4e00\u65e6\u627e\u5230\u53f6\u8282\u70b9\uff0c\u76f4\u63a5\u5c06\u503c\u8d4b\u4e3a1(\u56e0\u4e3a\u6ca1\u4e2a\u70b9\u4e0a\u53ea\u6709\u4e00\u68f5\u6811)\n\tint m=(l+r)/2;//\u4e8c\u5206\n\tbuild(l,m,u+u);\n\tbuild(m+1,r,u+u+1);\n\ttree[u].w=tree[u+u].w+tree[u+u+1].w;//\u533a\u95f4\u548c\u5373\u4e3a\u4e24\u5b50\u6811\u7684\u533a\u95f4\u548c\u4e4b\u548c\uff08\u7ed5\u53e3\u4f46\u4e0d\u96be\u7406\u89e3\uff09\n}\ninline void down(int u)//\u4e0b\u63a8lazytag\n{\n\ttree[u+u].lt=tree[u].lt;  //\u76f4\u63a5\u5c06lazytag\u8d4b\u7ed9\u5b50\u8282\u70b9\n\ttree[u+u+1].lt=tree[u].lt;\n\ttree[u+u].w=tree[u].lt;   //\u7531\u4e8elazytag\u88ab\u6807\u8bb0\u540e\u503c\u4e3a0\uff0c\u4fee\u6539\u533a\u95f4\u5185\u7684\u6811\u4e5f\u8981\u53d8\u4e3a0\uff0c\u6240\u4ee5\u76f4\u63a5\u5c06lazytag\u8d4b\u7ed9\u5b50\u8282\u70b9\u7684w\n\ttree[u+u+1].w=tree[u].lt;\n\ttree[u].lt=1;            //\u5c06\u6807\u8bb0\u53bb\u6389\n}\ninline void change(int u)//\u533a\u95f4\u4fee\u6539\n{\n\tif(tree[u].l>=x&&tree[u].r<=y) //\u82e5\u8be5\u533a\u95f4\u88ab\u5f85\u4fee\u6539\u533a\u95f4\u8986\u76d6\uff0c\u76f4\u63a5\u5c06\u533a\u95f4\u548c\u6e050\uff08\u6811\u8981\u5168\u90e8\u53bb\u6389\uff09\uff0c\u5e76\u6253\u4e0a\u6807\u8bb0\n\t{\n\t\ttree[u].w=0;\n\t\ttree[u].lt=0;\n\t\treturn;\n\t}\n\tif(tree[u].lt!=1) down(u);//\u82e5\u6709\u6807\u8bb0\u5219\u4e0b\u63a8\n\tint m=(tree[u].l+tree[u].r)/2;\n\tif(x<=m) change(u+u);//\u5224\u65ad\u4e2d\u70b9\u5de6\u53f3\u662f\u5426\u6709\u5f85\u4fee\u6539\u7684\u70b9\n\tif(y>m) change(u+u+1);\n\ttree[u].w=tree[u+u+1].w+tree[u+u].w;//\u66f4\u65b0\u5f53\u524d\u70b9\u7684\u533a\u95f4\u548c\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m); ++n;//\u6811\u7684\u4f4d\u7f6e\u75310~n->1~n+1\n\tbuild(1,n,1);\n\twhile(m--)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\t++x,++y;\n\t\tchange(1);\n\t}\n\tprintf(\"%lld\",tree[1].w);//\u76f4\u63a5\u8f93\u51fa\u4fee\u6539\u540e\u6574\u4e2a\u533a\u95f4\u4e4b\u548c\n\treturn 0;\n}\n```",
        "postTime": 1519626892,
        "uid": 26512,
        "name": "Christopher_Yan",
        "ccfLevel": 0,
        "title": "\u6d1b\u8c37 1047 \u6821\u95e8\u5916\u7684\u6811"
    },
    {
        "content": "```python\nl, m = map(int, input().split(' '))\ntrees = [True]*(l+1)\nfor i in range(m):\n    start, end = map(int, input().split(' '))\n    trees[start:end+1] = [False]*(end+1-start)\nprint(sum(trees))\n\n```",
        "postTime": 1533280892,
        "uid": 44565,
        "name": "\u65b9\u5b50\u6b63",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u770b\u89c1\u4e00\u5806dalao\u9898\u89e3\u5199\u6811\u72b6\u6570\u7ec4\u7ebf\u6bb5\u6811\uff0c\u849f\u84bb\u5728\u8fd9\u91cc\u5b89\u5229\u4e00\u79cd**\u6bd2\u7624\u6570\u636e\u7ed3\u6784**\u2014\u2014\u73c2\u6735\u8389\u6811\u3002\n\n------------\n### \u4e00\u3001\u4ecb\u7ecd\u3002\n\u73c2\u6735\u8389\u6811(ChthollyTree)\uff0c\u53c8\u540dOldDriverTree~~(\u8001\u53f8\u673a\u6811)~~\uff0c\u7b80\u79f0ODT\uff0c\u662f\u4e00\u79cd\u975e\u5e38\u66b4\u529b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u5c06\u4e00\u6bb5\u503c\u76f8\u540c\u7684\u533a\u95f4\u4ee5\u4e09\u5143\u7ec4 < \u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\uff0c\u503c > \u7684\u65b9\u5f0f\u5b58\u50a8\u8d77\u6765\uff0c\u56e0\u6b64\u5b83\u7684\u6548\u7387\u662f\u5efa\u7acb\u5728\u533a\u95f4\u63a8\u5e73\u64cd\u4f5c(assign)\u4e0a\u7684(\u4e5f\u5c31\u662f\u672c\u9898\u7684\u780d\u6811)\u3002\n### \u4e8c\u3001\u5b58\u50a8\u65b9\u5f0f\u3002\n\u73c2\u6735\u8389\u6811\u7684\u5b58\u50a8\u57fa\u4e8e\u5e73\u8861\u6811(\u6211\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u7528\u4e86STL\u7684set)\uff0c\u8fd9\u91cc\u5b9a\u4e49\u73c2\u6735\u8389\u6811\u7684\u7ed3\u70b9\u4e3a\uff1a\n```cpp\nstruct node\n{\n    int l,r,v;\n    node(int L,int R=-1,int V=0):l(L),r(R),v(V) {}\n    bool operator < (const node& x) const {return l<x.l;}\n};\n```\n\u8fd9\u91cc\u7684 l \u548c r \u662f\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9(\u95ed\u533a\u95f4)\uff0cv \u662f\u8be5\u533a\u95f4\u7684\u503c(\u8868\u793a\u8fd9\u4e00\u533a\u95f4\u5185\u6240\u6709\u5143\u7d20\u7684\u503c\u90fd\u662fv)\uff0c\u7136\u540e\u662f\u6784\u9020\u51fd\u6570\u548c\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u8fd9\u91cc\u91cd\u8f7d\u6210\u6bd4\u8f83\u533a\u95f4\u5de6\u7aef\u70b9\u3002\n\u6700\u540e\u628a\u533a\u95f4\u6254\u8fdb\u5e73\u8861\u6811\u5c31\u884c\u4e86\uff1a\n```cpp\nset<node>s;\ntypedef set<node>::iterator IT;\n```\n### \u4e09\u3001\u6838\u5fc3\u64cd\u4f5c\u3002\n\u73c2\u6735\u8389\u6811\u7684\u64cd\u4f5c\u662f\u57fa\u4e8e\u4e00\u4e2a\u6838\u5fc3\u64cd\u4f5c split \u7684\uff0c\u4f20\u5165\u53c2\u6570 pos \u540e\uff0c\u5b83\u80fd\u8fd4\u56de\u5de6\u7aef\u70b9\u503c\u4e3a pos \u7684\u7ed3\u70b9\u7684\u8fed\u4ee3\u5668\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u7ed3\u70b9\uff0c\u5b83\u5c31\u4f1a\u628a\u5305\u542b pos \u7684\u7ed3\u70b9 < l\uff0cr\uff0cv > \u62c6\u6210 < l , pos-1 , v > \u548c < pos , r , v > \u7136\u540e\u8fd4\u56de\u540e\u9762\u8fd9\u4e2a\u7ed3\u70b9\u7684\u8fed\u4ee3\u5668\u3002\n\n\u5148\u4e0a\u4ee3\u7801\uff1a\n```cpp\nIT split(int pos)\n{\n    IT it=s.lower_bound(node(pos));\n    if(it!=s.end()&&it->l==pos) return it;\n    --it;\n    int L=it->l,R=it->r,V=it->v;\n    s.erase(it);\n    s.insert(node(L,pos-1,V));\n    return s.insert(node(pos,R,V)).first;\n}\n```\n\u4e00\u884c\u884c\u6765\u770b\uff1a\n```cpp\nIT it=s.lower_bound(node(pos));\n```\nlower_bound\u662f\u83b7\u53d6\u5de6\u7aef\u70b9\u5927\u4e8e\u7b49\u4e8e pos \u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9\u3002\n```cpp\nif(it!=s.end()&&it->l==pos) return it;\n```\n\u5982\u679c\u8fd9\u4e2a\u7ed3\u70b9\u7684\u5de6\u7aef\u70b9\u6b63\u597d\u662f pos \uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u8fd4\u56de\u5b83\u3002\n```cpp\n--it;\nint L=it->l,R=it->r,V=it->v;\n```\n\u5426\u5219\u7684\u8bdd --it \u5f97\u5230\u7684\u5c31\u662f\u5305\u542b pos \u7684\u7ed3\u70b9\uff0c\u6211\u4eec\u7528 L\u3001R\u3001V \u50a8\u5b58\u5b83\u7684\u5de6\u53f3\u7aef\u70b9\u548c\u503c\u3002\n```cpp\ns.erase(it);\n```\n\u7136\u540e\u6211\u4eec\u5220\u6389\u8fd9\u4e2a\u7ed3\u70b9\u3002\n```cpp\ns.insert(node(L,pos-1,V));\nreturn s.insert(node(pos,R,V)).first;\n```\n\u6700\u540e\u6211\u4eec\u63d2\u5165\u4e24\u4e2a\u65b0\u7684\u7ed3\u70b9\uff0c\u5de6\u53f3\u7aef\u70b9\u5206\u522b\u662f < L\u3001pos-1 > \u548c < pos\u3001R > \uff0c\n\u987a\u4fbf\u8fd4\u56de\u540e\u9762\u8fd9\u4e2a\u7ed3\u70b9\u7684\u8fed\u4ee3\u5668\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86 split \u64cd\u4f5c\u3002\n### \u56db\u3001\u533a\u95f4\u63a8\u5e73\u3002\n\u8fd9\u662f\u4fdd\u8bc1\u73c2\u6735\u8389\u6811\u590d\u6742\u5ea6\u4e0d\u81f3\u4e8e\u7206\u70b8\u7684\u91cd\u8981\u64cd\u4f5c\uff0c\u5b83\u80fd\u5c06\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u503c\u53d8\u5f97\u4e00\u6837\uff0c\u672c\u9898\u7684\u780d\u6811\u5c31\u662f\u533a\u95f4\u8d4b\u503c\u4e3a 0 \u3002\n\n\u5148\u4e0a\u4ee3\u7801\uff1a\n```cpp\nvoid assign(int l,int r,int v)\n{\n    IT itl=split(l),itr=split(r+1);\n    s.erase(itl,itr);\n    s.insert(node(l,r,v));\n}\n```\n\u770b\u4e0a\u53bb\u5341\u5206\u7684\u66b4\u529b\uff0c\u4e8b\u5b9e\u4e0a\u73c2\u6735\u8389\u6811\u5c31\u662f\u8fd9\u4e48\u66b4\u529b\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\u4ee3\u7801\uff1a\n```cpp\nIT itl=split(l),itr=split(r+1);\n```\nitl \u6307\u5411\u7684\u7ed3\u70b9\u5de6\u7aef\u70b9\u4e3a l \uff0citr\u6307\u5411\u7684\u7ed3\u70b9\u5de6\u7aef\u70b9\u4e3a r+1 \u3002\n```cpp\ns.erase(itl,itr);\n```\n\u5220\u53bb\u5e73\u8861\u6811\u4e2d \\[ itl , itr ) \u7684\u7ed3\u70b9(\u534a\u5f00\u534a\u95ed\u533a\u95f4)\u3002\n```cpp\ns.insert(node(l,r,v));\n```\n\u76f4\u63a5\u63d2\u5165\u4e00\u4e2a < l , r > \uff0c\u503c\u4e3av\u7684\u533a\u95f4\u3002\n\n\u5c31\u662f\u8fd9\u4e48\u76f4\u63a5\u66b4\u529b\uff01\n### \u4e94\u3001\u5176\u4ed6\u64cd\u4f5c\u3002\n#### 1.\u521d\u59cb\u5316\n\u521d\u59cb\u5316\u64cd\u4f5c\u5c31\u662f\u76f4\u63a5\u63d2\u5165\uff0c\u672c\u9898\u6240\u6709\u6811\u9ed8\u8ba4\u90fd\u662f\u79cd\u4e0a\u7684\uff0c\u5168\u90e8\u8d4b\u503c\u4e3a 1 \u5c31\u884c\uff1a\n```cpp\ns.insert(node(0,l,1));\n```\n#### 2.\u533a\u95f4\u64cd\u4f5c\n\u533a\u95f4\u64cd\u4f5c\u7684\u8bdd\u8fd9\u91cc\u5c31\u4ee5\u9898\u76ee\u7684\u6c42\u548c\u4e3a\u4f8b\uff0c\u5148\u4e0a\u4ee3\u7801\uff1a\n```cpp\nint sum(int l,int r)\n{\n\tint _sum=0;\n    IT itl=split(l),itr=split(r+1);\n    for(;itl!=itr;++itl)\n    _sum+=(itl->v)*((itl->r)-(itl->l)+1);\n    return _sum;\n}\n```\n\u540c\u6837\u662f\u975e\u5e38\u7684\u66b4\u529b\uff0c\u76f4\u63a5\u53d6\u51fa\u6240\u6709\u533a\u95f4\u5185\u7684\u7ed3\u70b9\u66b4\u529b\u6c42\u548c\u5c31\u884c\u4e86\uff0c\u5176\u4ed6\u7684\u64cd\u4f5c\u5982\u533a\u95f4\u52a0\u6cd5\u4e58\u6cd5\u4ec0\u4e48\u7684\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u53d6\u51fa\u7ed3\u70b9\u904d\u5386\u4e00\u904d\u5c31\u884c\u3002\n### \u516d\u3001\u672c\u9898\u4ee3\u7801\u3002\n\u6700\u540e\u653e\u4e0a\u672c\u9898AC\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<set>\nusing namespace std;\n\nstruct node\n{\n    int l,r,v;\n    node(int L,int R=-1,int V=0):l(L),r(R),v(V) {}\n    bool operator < (const node& x) const {return l<x.l;}\n};\nint l,m,x,y,_sum;\nset<node>s;\ntypedef set<node>::iterator IT;\n\nIT split(int pos)\n{\n    IT it=s.lower_bound(node(pos));\n    if(it!=s.end()&&it->l==pos) return it;\n    --it;\n    int L=it->l,R=it->r,V=it->v;\n    s.erase(it);\n    s.insert(node(L,pos-1,V));\n    return s.insert(node(pos,R,V)).first;\n}\n\nvoid remove(int l,int r)\n{\n    IT itl=split(l),itr=split(r+1);\n    s.erase(itl,itr);\n    s.insert(node(l,r,0));\n}\n\nvoid sum()\n{\n\tfor(IT it=s.begin();it!=s.end();++it)\n    _sum+=it->v*(it->r-it->l+1);\n}\n\nint main()\n{\n    scanf(\"%d%d\",&l,&m);\n    s.insert(node(0,l,1));\n    for(int i=1;i<=m;++i)\n    {\n        scanf(\"%d%d\",&x,&y);\n        remove(x,y);\n    }\n    sum();\n    printf(\"%d\",_sum);\n}\n```\n### \u4e03\u3001\u603b\u7ed3\n\u73c2\u6735\u8389\u6811\u7684\u6548\u7387\u5efa\u7acb\u5728\u533a\u95f4\u63a8\u5e73\u64cd\u4f5c(assign)\u4e0a\uff0c\u5b83\u80fd\u4f7f\u7ed3\u70b9\u6570\u91cf\u5feb\u901f\u51cf\u5c0f\u4ece\u800c\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u56e0\u6b64\u73c2\u6735\u8389\u6811\u5341\u5206\u5bb9\u6613\u88ab\u5361\uff0c\u4e0d\u5230\u4e07\u4e0d\u5f97\u5df2\u8fd8\u662f\u5f97\u4e56\u4e56\u7528\u522b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e0d\u8fc7\u5b83\u7684\u4ee3\u7801\u5341\u5206\u7b80\u5355\uff0c\u8003\u573a\u4e0a\u5199\u4e0d\u51fa\u522b\u7684\u6570\u636e\u7ed3\u6784\u65f6\u4e5f\u662f\u53ef\u4ee5\u4ea4\u4e00\u4e2a\u73c2\u6735\u8389\u6811\u7684\u3002",
        "postTime": 1539850305,
        "uid": 126486,
        "name": "yurzhang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "Zuoing\u9898\u89e3\n\nI'm still alive,so I'm still zuoing!\n\n\u672c\u4eba\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u8fd8\u8bf7\u5927\u795e\u591a\u591a\u6307\u6b63\u3002\n\n\u8fd9\u4e2a\u9898\u5176\u5b9e\u4e0d\u8981\u7ea0\u7ed3\u600e\u4e48\u7b97\u91cd\u5408\uff0c\u56de\u5f52\u73b0\u5b9e\uff1a\u5148\u79cd\u6811\u518d\u62d4\u6811\u5c31\u884c\u5566\u3002\n\n```c++11\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\uff0c~~\u672c\u4ebaZuoing\u8d85\u613f\u610f\u7528\u5c45\u7136\u8fd8\u6ca1...~~\uff08\u4e0d\u5efa\u8bae\u4f7f\u7528 \u88abCE\u4e86\u4e0d\u7ba1\uff09\nusing namespace std;\n\nint main(){//\u4e3b\u7a0b\u5e8f\n\tint L,M,s[10000],b,e,c=0;//\u5b9a\u4e49\u53d8\u91cfL\uff08\u9a6c\u8def\u957f\u5ea6\uff09\uff0cM\uff08\u533a\u57df\u6570\u76ee\uff09\uff0cs\u3010\u6570\u7ec4\u3011\uff08\u9053\u8def\u957f\uff09\uff0cb\uff08\u9053\u8def\u8d77\u59cb\u70b9\uff09\uff0ce\uff08\u9053\u8def\u7ec8\u6b62\u70b9\uff09\uff0cc\uff08\u7b54\u6848\uff09\n\tcin>>L>>M;//\u8f93\u5165L\uff0cM\n\tfor(int i=0;i<=L;i++){//\u5b9a\u4e49i\uff0ci<L\uff0c\u8bf4\u660e\u6267\u884cL\u6b21\n\t\ts[i]=1;//\u628a\u957f\u5ea6\u5185\u6240\u6709s\u6807\u8bb0\u4e3a1\n\t}\n\tfor(int i=0;i<M;i++){//\u5faa\u73afM\u6b21\n\t\tcin>>b>>e;//\u8f93\u5165b\uff0ce\n\t\tfor(int j=b;j<=e;j++){//\u5faa\u73af b\u5230e\u7684\u957f\u5ea6 \u6b21\n\t\t\ts[j]=0;//\u628a\u6b64\u70b9s\u6807\u8bb0\u4e3a0\uff08\u628a\u6811\u62d4\u6389\uff0c\u5f53\u7136\u62d4\u8fc7\u5c31\u4e0d\u62d4\u4e86\uff09\n\t\t}\n\t}\n\tfor(int i=0;i<=L;i++){//\u5faa\u73afL\u6b21\n\t\tif(s[i]==1){//\u53ea\u8981\u6b64\u70b9s\u7b49\u4e8e1\uff08\u6ca1\u6709\u91cd\u590d\uff09\n\t\t\tc+=1;//\u7b54\u6848\u52a0\u4e00\n\t\t}\n\t}\n\tcout<<c<<endl;//\u8f93\u51fa\u7b54\u6848c\n\treturn 0;\n}\n\n```\n\u5927\u5bb6\u53ef\u4ee5\u7528\u8fd9\u4e2a\u9898\u89e3\u54c8^_^ ",
        "postTime": 1517482307,
        "uid": 72300,
        "name": "\u539f\u682a\u9f99\u8475",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u5708\u9898\u89e3\u4e0b\u6765\uff0c\u53d1\u73b0\u6ca1\u548c\u6211\u601d\u8def\u4e00\u6837\u7684\u3002  \n\u601d\u8def\u5c31\u662f\u628a\u91cd\u53e0\u533a\u57df\u5408\u5e76\u3001\u5220\u9664\uff0c\u7136\u540e\u6570\u5b66\u8ba1\u7b97\u51fa\u5269\u4e0b\u7684\u6811\u7684\u6570\u91cf\u3002\n```cpp\n#include <bits/stdc++.h>\n#define FOR(a,b,i) for(int i=a;i<b;++i)\n\nusing namespace std;\n\nint L, M, A[105], B[105];\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin >> L >> M;\n    FOR(0, M, i) {\n        cin >> A[i] >> B[i];\n        // \u56e0\u4e3a\u9898\u76ee\u6ca1\u8bf4\u533a\u95f4\u7aef\u70b9\u7684\u8303\u56f4\uff0c\u4e8e\u662f\u5728\u4e0b\u9762\u505a\u4e86\u4fee\u6b63\uff08\u5b9e\u9645\u611f\u89c9\u4e5f\u6ca1\u5fc5\u8981\uff09\n        if (A[i] < 0) A[i] = 0;\n        else if (A[i] > L) A[i] = L;\n        if (B[i] < 0) B[i] = 0;\n        else if (B[i] > L) B[i] = L;\n    }\n    // \u6570\u636e\u8bfb\u5b8c\u540e\uff0cA[i]\u8868\u793a\u533a\u57dfi\u7684\u5de6\u7aef\u70b9\uff0cB[i]\u8868\u793a\u533a\u57dfi\u7684\u53f3\u7aef\u70b9\n    // \u4e0b\u9762\u5bf9\u7aef\u70b9\u5904\u7406\uff0c\u5408\u5e76\u91cd\u53e0\u7684\u533a\u95f4\n    FOR(0, M, i) {\n        // \u82e5\u51fa\u73b0\u7aef\u70b9\u5c0f\u4e8e0\uff0c\u8bf4\u660e\u8be5\u533a\u57df\u5df2\u7ecf\u79fb\u9664\uff0c\u76f4\u63a5\u8df3\u8fc7\n        if (A[i] < 0 || B[i] < 0) continue;\n        FOR(i + 1, M, j) {\n            if (A[j] < 0 || B[j] < 0) continue;\n            // \u5bf9\u533a\u57dfi\u548c\u533a\u57dfj\u6bd4\u8f83\uff0c\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u51b5\n            // \u6b64\u6b65\u64cd\u4f5c\u4e0d\u80fd\u79fb\u9664\u533a\u57dfj\u800c\u4fdd\u7559\u533a\u57dfi\uff0c\u56e0\u4e3a\u5728\u4e4b\u540e\u7684\u6bd4\u8f83\u91cc\u533a\u57dfi\u4e0d\u4f1a\u53c2\u4e0e\uff0c\u5bfc\u81f4\u4e0d\u80fd\u7ee7\u7eed\u7c7b\u4f3c\u8fd9\u6837\u5904\u7406\u5408\u5e76\n            if (A[i] <= A[j] && B[i] >= B[j]) {\n                // \u533a\u57dfi\u5305\u542b\u533a\u57dfj\uff0c\u5c06\u533a\u57dfj\u7684\u8303\u56f4\u8bbe\u7f6e\u4e3a\u533a\u57dfi\u7684\n                A[j] = A[i];\n                B[j] = B[i];\n                A[i] = B[i] = -1; // \u79fb\u9664\u533a\u57dfi\n                break; // \u56e0\u4e3a\u533a\u57dfi\u5df2\u7ecf\u5904\u7406\uff0c\u4e0d\u9700\u8981\u7ee7\u7eed\u5faa\u73af\u6bd4\u8f83\u533a\u57dfi\u4e0e\u533a\u57dfj+1\n            } else if (A[i] > A[j] && B[i] < B[j]) {\n                // \u533a\u57dfj\u5305\u542b\u533a\u57dfi\uff0c\u8bf4\u660e\u533a\u57dfi\u4e0d\u9700\u8981\u8003\u8651\n                A[i] = B[i] = -1;\n                break;\n            } else if (A[i] <= A[j] && B[i] >= A[j]) {\n                // \u533a\u57df\u90e8\u5206\u91cd\u53e0\u60c5\u51b5\uff0c\u533a\u57dfi\u7684\u5de6\u7aef\u70b9\u6bd4\u533a\u57dfj\u7684\u5de6\u7aef\u70b9\u66f4\u524d\uff0c\u628a\u533a\u57dfj\u7684\u5de6\u7aef\u70b9\u63d0\u524d\u5230\u533a\u57dfi\u7684\u5de6\u7aef\u70b9\u4f4d\u7f6e\n                // \u53f3\u7aef\u70b9\u90e8\u5206\u4e00\u5b9a\u662f\u533a\u57dfj\u6bd4\u533a\u57dfi\u7684\u66f4\u540e\n                // \u793a\u610f\u56fe(\u5904\u7406\u524d)\uff1a\n                // |    i    |\n                //       |       j     |\n                // \u793a\u610f\u56fe(\u5904\u7406\u540e)\uff1a\n                //  (\u533a\u57dfi\u4e0d\u5b58\u5728)\n                // |             j     |\n                A[j] = A[i];\n                A[i] = B[i] = -1;\n                break;\n            } else if (A[i] <= B[j] && B[i] >= B[j]) {\n                // \u533a\u57df\u90e8\u5206\u91cd\u53e0\u60c5\u51b5\uff0c\u533a\u57dfi\u7684\u53f3\u7aef\u70b9\u6bd4\u533a\u57dfj\u7684\u53f3\u7aef\u70b9\u66f4\u540e\uff0c\u628a\u533a\u57dfj\u7684\u53f3\u7aef\u70b9\u589e\u52a0\u5230\u533a\u57dfi\u7684\u53f3\u7aef\u70b9\u4f4d\u7f6e\n                // \u5de6\u7aef\u70b9\u90e8\u5206\u4e00\u5b9a\u662f\u533a\u57dfj\u6bd4\u533a\u57dfi\u7684\u66f4\u524d\n                // \u793a\u610f\u56fe(\u5904\u7406\u524d)\uff1a\n                //           |    i    |\n                // |       j     |\n                // \u793a\u610f\u56fe(\u5904\u7406\u540e)\uff1a\n                //  (\u533a\u57dfi\u4e0d\u5b58\u5728)\n                // |       j           |\n                B[j] = B[i];\n                A[i] = B[i] = -1;\n                break;\n            }\n        }\n    }\n    // \u5269\u4e0b\u975e\u91cd\u53e0\u7684\u533a\u57df\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u8ba1\u7b97\u4e86\n    FOR(0, M, i) {\n        // cout << \"A[\" << i << \"]=\" << A[i] << \",B[\" << i << \"]=\" << B[i] << endl;\n        if (A[i] < 0 || B[i] < 0) continue; // \u8df3\u8fc7\u79fb\u9664\u7684\u533a\u57df\n        L -= (B[i] - A[i] + 1); // \u6bcf\u6b21\u7528\u5269\u4f59\u6811\u7684\u6570\u91cf\u51cf\u6389\u533a\u57dfi\u7684\u6811\u7684\u6570\u91cf\n    }\n    cout << L + 1; // \u8fd9\u91cc+1\u662f\u56e0\u4e3a\u6700\u5f00\u59cb\u5b9e\u9645\u4e0a\u6709L+1\u68f5\u6811\n    return 0;\n}\n```",
        "postTime": 1537123914,
        "uid": 130205,
        "name": "__\u627e\u4e0d\u5230\u597d\u53cb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "//\u849f\u84bb\u5728\u505a~~\u6c34~~\u9898\u65f6\uff0c\u53d1\u73b0\u5176\u4ed6\u5927\u4f6c\u7684\u89e3\u6cd5\u90fd~~\u770b\u4e0d\u61c2~~\n\n//\u4e00\u4e2a\u601d\u8def\u7b80\u5355\u7684\u505a\u6cd5\n\n//\u5229\u7528\u4e00\u4e2a\u5e03\u5c14\u6570\u7ec4\uff0c\u5148\u521d\u59cb\u5316\u4e3atrue\uff0c\u7136\u540e\u5728\u8f93\u5165\u7684\u533a\u95f4\u91cc\uff0c\u66f4\u6539\u4e3afalse\uff0c\u6700\u540e\u4ece\u5934\u5230\u5c3e\u518d\u626b\u4e00\u904d\uff0c\u662ftrue\u5c31++\uff0c\u6700\u540e\u8f93\u51fa\u5373\u53ef\n\n//### **\u6ce8\u610f0\u7684\u4f4d\u7f6e\u4e5f\u662f\u6709\u6811\u7684**\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ans,i,j,l,x,y;\nbool a[10010];//\u5e03\u5c14\u6570\u7ec4\nint main(){\nios::sync_with_stdio;//\u5c0f\u5c0f\u7684\u4f18\u5316\uff0c\u8ba9cin\u4e0escanf\u4e00\u6837\u5feb\n\tcin>>l>>n;//\u8bfb\u5165\u6570\u636e\n\tmemset(a,true,sizeof(a));//\u521d\u59cb\u5316\n\tfor(i=1;i<=n;i++){//\u4e00\u5171\u6709n\u7ec4\u533a\u95f4\u6570\u636e\n\t\tcin>>x>>y;//\u8bfb\u5165\uff08\u5176\u5b9e\u662f\u533a\u95f4\u7684\u5934\u548c\u5c3e\uff09\n\t\tfor(j=x;j<=y;j++)a[j]=false;//\u5c06\u8fd9\u4e2a\u533a\u95f4\u66f4\u6539\u4e3afalse\n\t}\n\tans=0;//\u521d\u59cb\u5316\n\tfor(i=0;i<=l;i++){//\u4ece\u5934\u5230\u5c3e\u626b\u4e00\u904d\uff0c\u7edf\u8ba1true\u7684\u4e2a\u6570\n\t\tif(a[i])ans++;//\u7d2f\u52a0\n\t}\n\tcout<<ans;//\u8f93\u51fa\n\treturn 0;//\u597d\u4e60\u60ef\n}\n```",
        "postTime": 1533184485,
        "uid": 8321,
        "name": "Twinkle3110",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u628a\u5934\u548c\u5c3e\u5f04\u8fdb\u4e24\u4e2a\u6570\u7ec4\u91cc\u9762\uff0c\u7136\u540e\u5feb\u6392\n\u7136\u540e\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f\u6709\u4ea4\u96c6\uff0c\u4e00\u79cd\u65e0\u4ea4\u96c6\n\u505a\u4e00\u4e2a\u5206\u533a\u6570\u7ec4\n\u6709\u4ea4\u96c6\uff0c\u53ea\u8981\u6bd4\u8f83\u4e0b\u4e00\u4e2a\u7684\u5934\u662f\u5426\u5c11\u4e8e\u4e0a\u4e00\u4e2a\u7684\u5c3e\u5373\u53ef\n\u65e0\u4ea4\u96c6\u7684\u8bdd\uff0c\u5c31\u4f7f\u6807\u8bb0\u533a\u95f4\u6570+1\uff0c\u5e76\u5b58\u5165\u5206\u533a\u6570\u7ec4\u4e2d\n\u6700\u540e\u904d\u5386\u5206\u533a\u6570\u7ec4\uff0c\u8ba1\u7b97\u5c3e\u51cf\u53bb\u5934+1\uff0c\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u533a\u95f4\u8981\u780d\u53bb\u7684\u6811\u6728\u7684\u6570\u91cf\uff0c\u63a5\u7740\u7528\u957f\u5ea6L+1 \u51cf\u53bb\uff0c\u5c31\u5f97\u5230\u7b54\u6848\u4e86\n\u4e3a\u4ec0\u4e48\u90fd\u662f\u8981+1,\u56e0\u4e3a\u6811\u662f\u4ece0\u5f00\u59cb\u7b97\u7684\u3002\u6240\u4ee5\u8981+1\n\n```java\npackage p1047;\n\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO \u81ea\u52a8\u751f\u6210\u7684\u65b9\u6cd5\u5b58\u6839\n\t\tint L,M;\n\t\tScanner in = new Scanner(System.in);\n\t\tL = in.nextInt();\n\t\tM = in.nextInt();\n\t\tint head[] = new int[M];\n\t\tint tail[] = new int[M];\n\t\tint fenqu[][] = new int[101][2];\n\t\tint count=0;\n\t\tfor(int i=0;i<M;i++) {\n\t\t\thead[i]=in.nextInt();\n\t\t\ttail[i]=in.nextInt();\n\t\t}\n\t\tArrays.sort(head);\n\t\tArrays.sort(tail);\n\t\tfenqu[count][0]=head[0];\n\t\tfenqu[count][1]=tail[0];\n\t\tfor(int j=1;j<M;j++) {\n\t\t\tif(head[j]<=tail[j-1]) {\n\t\t\t\tfenqu[count][1]=tail[j];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfenqu[++count][0]=head[j];\n\t\t\t\tfenqu[count][1]=tail[j];\n\t\t\t}\n\t\t}\n\t\tint sum=0;\n\t\tfor(int q=0;q<=count;q++) {\n\t\t\tsum+=fenqu[q][1]-fenqu[q][0]+1;\n\t\t}\n\t\tSystem.out.println((L+1)-sum);\n\t}\n\n}\n\n```",
        "postTime": 1542597223,
        "uid": 145473,
        "name": "\u706cAmiya\u706c",
        "ccfLevel": 0,
        "title": "\u7ecf\u5178\u5206\u533a\u95f4\u9898\u76ee"
    },
    {
        "content": "\u626c\u4e2d\u590f\u4ee4\u8425\u6539\u4e86\u6570\u636e\u2026\u2026\u8def\u53ef\u80fd\u957f\u5ea6\u8fbe\u52302\u4ebf\u3002\n\n\u7ebf\u6bb5\u6811\u6570\u7ec4\u5f00\u4e0d\u4e0b\u3002\u76f4\u63a5\u6a21\u62df\u8d85\u65f6\u3002\n\n\u4e8e\u662f\u641e\u4e86\u4e00\u4e2a\u548c\u590d\u6742\u5ea6\u548cm\u76f8\u5173\u7684\u9898\u89e3\u3002\n\n\u628a\u5f00\u59cb\u780d\u6811\u548c\u7ed3\u675f\u780d\u6811+1\u7684\u4f4d\u7f6e\u770b\u6210\u4e24\u79cd\u6807\u8bb0\uff0c\u5206\u522b\u8bb0\u4f5c0\u548c1\u3002\n\n\u5b9e\u9645\u4e0a\u53ea\u8981\u6709\u4e00\u4e2a\u533a\u95f4\u8986\u76d6\u8fd9\u5730\u65b9\u7684\u6811\u5c31\u8981\u780d\uff0c\u6240\u4ee5\u53ea\u8981\u5728\u67d0\u4f4d\u7f6e\u4e4b\u524d\u76840\u6bd41\u591a\uff0c\u6b64\u5730\u7684\u6811\u5c31\u8981\u780d\u3002\n\n\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u5b58\u50a8\u8fd9\u4e9b\u6807\u8bb0\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n\nusing namespace std;\n\nint getnum(){\n\tint x=0; int sign=1;\n\tchar c=getchar();\n\twhile (c>'9' || c<'0'){\n\t\tif (c=='-') sign=-sign;\n\t\tc=getchar();\n\t}\n\t\n\twhile (c>='0' && c<='9'){\n\t\tx=(x<<3)+(x<<1)+c-'0';\n\t\tc=getchar();\n\t}\n\t\n\treturn x*sign;\n}\nstruct point{\n\tint x, y;\n\tbool operator < (const point &b) const{\n\t\treturn (x<b.x)||(x==b.x && y<b.y);\n\t}\n\t\n};\nint main(){\n\t//freopen(\"tree.in\", \"r\", stdin);\n\t\n\tint l, m;\n\tl=getnum();\n\tm=getnum();\n\tpriority_queue<point> pt;\n\tfor (int i=1; i<=m; i++){\n\t\tint a,b;\n\t\ta=getnum();\n\t\tb=getnum();\n\t\tpt.push((point){-a, 0});\n\t\tpt.push((point){-(b+1), 1}); //[a, b+1)\n\t}\n\tint flag=0;\n\tint last=0;\n\tint cnt=0;\n\twhile(pt.size()){\n\t\tpoint now=pt.top();\n\t\tpt.pop();\n\t\tif (now.y==0){\n\t\t\tif (!flag) last=-now.x;\n\t\t\tflag++;\n\t\t}\n\t\tif (now.y==1){\n\t\t\tflag--;\n\t\t\tif (!flag) cnt+=-now.x-last;\n\t\t}\n\t}\n\tcout<<l-cnt+1<<endl;\n}\n```",
        "postTime": 1531097119,
        "uid": 81690,
        "name": "EricWay1024",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "/\\*\n1.\u5bf9\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u6392\u5e8f\n\n2.\u6bcf\u4e00\u4e2a\u533a\u95f4\u53ef\u80fd\u4e0e\u4e4b\u524d\u7684\u533a\u95f4\u5408\u5e76\uff0c\u4e5f\u53ef\u80fd\u5355\u72ec\u5206\u51fa\u6765\n\n3.\u7edf\u8ba1\u6240\u6709\u5408\u5e76\u540e\u7684\u533a\u95f4\n\n\\*/\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint i,l,m,ans=0,p=1;\nstruct qq\n{\n    int l,r;\n} a[101];\nint comp(qq x, qq y)\n{\n    return x.l < y.l;\n}\nint main()\n{\n    scanf(\"%d%d\",&l,&m);\n    for (i=1; i<=m; i++)\n      scanf(\"%d%d\",&a[i].l,&a[i].r);\n    sort(a+1,a+m+1,comp);\n    for (i=2; i<=m; i++)\n        if (a[i].l>a[p].r) a[++p]=a[i];\n        else a[p].r=max(a[p].r,a[i].r);\n    for (i=1; i<=p; i++) ans+=a[i].r-a[i].l+1;  \n    printf(\"%d\",l+1-ans);  \n    return 0;\n}\n```",
        "postTime": 1479521194,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "### Force $O(LMC)$\n\nL\uff1a\u9a6c\u8def\u957f\u5ea6\u3002M\uff1a\u533a\u95f4\u6570\u91cf\u3002C\uff1a\u533a\u95f4\u5e73\u5747\u957f\u5ea6\u3002\uff08\u5982\u679c\u6570\u636e\u6bd4\u8f83\u9971\u6ee1\uff0c\u53ef\u4ee5\u5f53\u4f5c$O(n^3)$\u7406\u89e3\uff09\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std; \n#define Max 105\n#define Lax 10005\nint main(){\n    int L, M;\n    int a[Max][2];\n    cin>>L>>M;\n    for(int i = 0; i < M; ++i)\n        cin>>a[i][0]>>a[i][1];\n\n    bool result[Lax]={0}; //\u5bf9\u6bcf\u9897\u6811\u8bbe\u7f6e\u706f\n    for(int i = 0; i < M; ++i)\n        for(int j = a[i][0]; j <= a[i][1]; ++j)\n            result[j] = 1;\n\n    int Result = 0;\n    for(int i = 0; i <= L; ++i)\n        Result += !result[i]; //\u53cd\u8f6c\u6c42\u548c\n    cout<<Result;\n}\n\n```\n\n### \u5355\u8c03\u6808 $O(MlogM)$\n\n\u6211\u4eec\u5148\u7ed9M\u4e2a\u533a\u95f4\u6309\u7167**\u6240\u6709\u7aef\u70b9\u7684\u5148\u540e**\u6392\u4e2a\u5e8f\uff0c\u9700\u8981$O(MlogM)$\u3002\n\n\u4ece\u6700\u5de6\u8fb9\u5f00\u59cb\u904d\u5386\uff0c\u5219\u6bcf\u4e00\u4e2a\u533a\u95f4\u90fd\u6709\u4e00\u4e2a**\u8bde\u751f\u65f6\u95f4**\u548c**\u6d88\u4ea1\u65f6\u95f4**\u3002\n\n\u4e00\u4e2a\u597d\u73a9\u7684\u73b0\u8c61\u662f\uff1a\n\n![Imgur](https://i.imgur.com/LTCJTKE.png)\n\n> \u6211\u4eec\u53ef\u80fd\u78b0\u5230\u4ee5\u4e0a\u4e24\u79cd\u533a\u95f4\u5f62\u6001\uff0c**\u4f46\u662f\u5b83\u4eec\u5728\u8fd9\u9053\u9898\u7684\u5f71\u54cd\u662f\u7b49\u6548\u7684**\uff01\u8fd9\u4e0d\u662f\u62ec\u53f7\u5339\u914d\u95ee\u9898\u4e48\u3002\u3002\n\n\u6211\u4eec\u53ea\u987b\u7ef4\u62a4\u4e00\u4e2a\u6808\uff08\u5b58\u50a8**\"<font size =4 color=blue>[</font>\"**\uff09\uff1a\uff08\u6211\u628a\u5355\u8c03\u6808\u5f62\u8c61\u5730\u53eb\u505a`\u6808\u706f`\uff09\n\n- \u5f53\u6808\u4e3a\u7a7a\u65f6\uff0c\u6811\u5b58\u5728\uff0c\u505a\u8bb0\u5f55\u3010\u706f\u4eae\uff0c\u901a\u884c\u3011\n- \u5f53\u6808\u4e0d\u4e3a\u7a7a\uff0c\u6811\u88ab\u780d\u4e86\uff0c\u8df3\u8fc7\u3010\u706f\u706d\uff0c\u963b\u585e\u3011\n  - \u9047\u5230**\"<font size =4 color=blue>[</font>\"**\uff0c\u538b\u5165\u6808\n  - \u9047\u5230**\"<font size =4 color=red>]</font>\"**\uff0c\u5f39\u51fa\u4e00\u4e2a**\"<font size =4 color=blue>[</font>\"**\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u5355\u8c03\u6808\u8fa3~\n\n> \u5f53\u7136\uff0c~~\u8fd9\u53ef\u80fd\u662f\u5e7f\u4e49\u7684\u5355\u8c03\u6808\u3002\u30022333~~\n>\n> \u4e8b\u5b9e\u4e0a\uff0c\u53ea\u9700\u8981\u7ef4\u62a4**\"<font size =4 color=blue>[</font>\"**\u7684\u6570\u91cf\u5c31\u884c\u4e86\uff0c\u7528\u4e00\u4e2a`int size`\u3002\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std; \n#define Max 105 * 2\n\nstruct Endpoint{\n    int site; //where is this comma\n    int dire; //direction: 1, left comma [ ; -1, right comma ]\n};\n\nbool cmp(Endpoint a, Endpoint b){\n    return a.site < b.site;\n}\n\nint main(){\n    int L, M;\n    Endpoint p[Max * 2];\n    cin>>L>>M;\n    for(int i = 0; i < M*2; i += 2){ //every step for 2 paired elements\n        cin>> p[i].site >> p[i + 1].site;\n        p[i].dire   =  1;  // 1, left comma\n        p[i+1].dire = -1;  //-1, right comma\n    }\n\t\n    sort(p, p + M*2, cmp);  //sort by site, O(MlogM)\n    \n    int ans = 0;\n\tint size = 0; //initialize stack size to 0\n    int bias = -1; //bias for caculating, imagine there is a right comma ] at site:-1\n\tp[M*2].site = L + 1; p[M*2].dire = 1; //imagine there is a left comma [ at site:L+1\n\tfor(int i = 0; i <= M*2; i++){ //O(M)\n        if(!size){  //stack is empty\n        \tans += p[i].site - bias - 1;\n\t\t}\n\t\tsize += p[i].dire; //renew stack size\n\t\tbias = p[i].site; //renew bias\n    }\n\n    cout<<ans;\n}\n```\n\n\u611f\u89c9\u6808\u8fd9\u79cd\u5b58\u50a8\u7ed3\u6784\u5c31\u50cf\u4eba\u8111\u7684\u6df1\u5c42\u8bb0\u5fc6\u4e00\u6837\uff0c\u9002\u5408\u4e8e**\u957f\u671f\u7684\u8bb0\u5fc6**\u4ee5\u53ca**\u9ad8\u9891\u6d45\u5c42\u601d\u8003/\u64cd\u4f5c**\u3002\n\n> \u76f8\u5bf9\u800c\u8a00\uff0c\u961f\u5217\u5219\u9002\u5408\u77ed\u671f\u7684\u8bb0\u5fc6\u4ee5\u53ca\u6df1\u5ea6\u601d\u8003\u3002\n>\n> \u5355\u8c03\u961f\u5217=\u5355\u8c03\u6808+\u961f\u5217\u3002\u7531\u4e8e\u589e\u52a0\u4e86\u5934\u90e8\u901a\u9053\uff0c\u5355\u8c03\u961f\u5217\u7684\u8bb0\u5fc6\u80fd\u529b\u6bd4\u8f83\u7075\u6d3b\uff0c\u5e76\u4e14\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u6df1\u5c42\u3001\u6d45\u5c42\u601d\u8003\u3002",
        "postTime": 1548320789,
        "uid": 124054,
        "name": "Vel_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u6b21\u653e\u9898\u89e3\uff0c\u5927\u5bb6\u51d1\u5408\u7740\u770b\u5427\u2026\u2026\n\n\u601d\u8def\u5c31\u662f\u5bf9\u6811\u7684\u72b6\u6001\u505a\u4e00\u4e2a\u6807\u8bb0\n\n\u5176\u4ed6\u7684\u90fd\u5728\u6ce8\u91ca\u91cc\n\n```cpp\n#include<iostream>\nusing namespace std;\nint rd[10001],stt[101],ed[101];     //rd=road,stt=start,ed=end......(\u611f\u89c9\u81ea\u5df1\u5728\u8bf4\u5e9f\u8bdd......) \nint main()\n{\n\tint i,j,k,l,m,ans,temp=0;\n\tcin>>l>>m;                      //\u9898\u76ee\u4e2d\u7684L\u548cM\u6211\u8fd9\u91cc\u7528l\u548cm\u66ff\u4ee3(\u56e0\u4e3a\u61d2\u5f97\u6309Shift......) \n\tl++;                            //\u9898\u76ee\u4e2d\u4ece0\u5f00\u59cb\u5230L\u7ed3\u675f\uff0c\u6240\u4ee5\u5e94\u8be5\u6709L+1\u68f5\u6811 \n\tfor(i=1;i<=m;i++)\n\t{\n\t\tcin>>stt[i]>>ed[i];         //\u8bfb\u5165\u780d\u6811\u7684\u533a\u95f4 \n\t}\n\tfor(j=1;j<=m;j++)\n\t{\n\t\tfor(i=stt[j];i<=ed[j];i++)  //\u68c0\u6d4b\u6bcf\u4e00\u4e2a\u533a\u95f4\u5185\u6811\u7684\u72b6\u6001,\u5982\u679c\u672a\u88ab\u780d(\u75280\u8868\u793a),\u5c31\u780d\u6389(\u75281\u8868\u793a) \n\t\t{\n\t\t\tif(rd[i]==0)\n\t\t\t{\n\t\t\t\trd[i]=1;\n\t\t\t\ttemp++;             //\u8ba1\u6570\u5668\uff0c\u8bb0\u5f55\u780d\u6811\u7684\u4e2a\u6570 \n\t\t\t}\n\t\t}\n\t}\n\tans=l-temp;                     //\u7528\u603b\u6570\u76ee\u51cf\u53bb\u88ab\u780d\u6570\u76ee\u5373\u4e3a\u6240\u6c42 \n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1531924553,
        "uid": 98451,
        "name": "Pommissarzhu",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u521a\u5f00\u59cb\u770b\u5230\u8fd9\u9898\u76ee\u7684\u65f6\u5019\u770b\u5230\u6570\u636e1<=L<=10000,1<=M<=100\uff0c\u5b8c\u5168\u53ef\u4ee5\u66b4\u529b\u5904\u7406\uff0c\u76f4\u63a5\u6bcf\u4e2a\u533a\u95f4\u7684l\u5230r\u6807\u8bb0\u4e3a1\u8868\u793a\u780d\u4e86\uff0c\u7136\u540e\u4e00\u4e2a\u67e5\u8be2\u5faa\u73af\u5c31\u53ef\u4ee5\u7edf\u8ba10\u7684\u4e2a\u6570\u5c31\u662f\u7b54\u6848\u3002\u590d\u6742\u5ea6O(LM)\u3002\n\n\u7136\u540e\u60f3\u80fd\u5426\u4f18\u5316\uff0c\u4e8e\u662f\u53c8\u60f3\u5230\u7528\u5dee\u5206\u7684\u65b9\u6cd5\u6765\u5904\u7406\uff0c\u7528\u8d1f\u6570\u8868\u793a\u5df2\u7ecf\u780d\u4e86\u7684\u6811\uff0c\u6700\u540e\u7edf\u8ba1\u6b63\u6570\u4e2a\u6570\u5c31\u662f\u7b54\u6848\u3002\u590d\u6742\u5ea6O(L)\u3002\n\n\u540e\u6765\u53c8\u4ed4\u7ec6\u60f3\u4e86\u4ee5\u4e0b\uff0c\u8fd9\u9898\u4e0d\u5c31\u662f\u7b80\u5355\u7684\u533a\u95f4\u5408\u5e76\u95ee\u9898\u4e48\uff0c\u5148\u5bf9l\u91cd\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u533a\u95f4\u91cd\u590d\u4e86\u5c31\u5408\u5e76\uff0c\u6ca1\u6709\u91cd\u590d\u5c31\u8ba1\u7b97\u88ab\u780d\u7684\u6811\u4e2a\u6570\u3002\u7b54\u6848\u5c31\u662f\u603b\u6570-\u88ab\u780d\u7684\u6811\u3002\u590d\u6742\u5ea6O(\u6392\u5e8f+M)\u3002\n\u7a0b\u5e8f\u5982\u4e0b\uff1a\n\n\n------------\n```cpp\n\n#include<stdio.h>\n#include<iostream>\n#include<map>\n#include<string.h>\n#include<string>\n#include<algorithm>\n#include<stdio.h>\n#include<math.h>\n#include<vector>\n#include<functional>\n#include<stdlib.h>\n#include<queue>\n#include<stack>\nusing namespace std;\n#define ll long long\nconst int INF = 0x3f3f3f3f;\nconst double pi = acos(-1.0);\n\npair<int, int> p[105];\nbool cmp(pair<int,int> a, pair<int, int> b) {\n\treturn a.first < b.first;\n}\nint main()\n{\n\tint L, n;\n\tcin >> L >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d %d\", &p[i].first, &p[i].second);\n\t\tif (p[i].first < 0) p[i].first = 0;//\u907f\u514d\u8d8a\u754c\n\t\tif (p[i].second > L)p[i].second = L;\n\t}\n\tsort(p + 1, p + 1 + n, cmp);\n\tint cnt = 0;//\u88ab\u780d\u53bb\u7684\u6811\n\tint ml=p[1].first, mr = p[1].second;\n\tfor (int i = 2; i <= n; i++) {\n\t\tint l = p[i].first, r = p[i].second;\n\t\tif (l <= mr) {\n\t\t\tmr = max(mr, r);//\u5408\u5e76\n\t\t}\n\t\telse if (l > mr) {\n\t\t\tcnt += (mr + 1 - ml);//\u7edf\u8ba1\n\t\t\tml = l, mr = r;\n\t\t}\n\t}\n\tcnt += (mr + 1 - ml);//\u6700\u540e\u4e00\u4e2a\u533a\u95f4\n\tcout << L + 1- cnt << endl;\n\treturn 0;\n}\n```",
        "postTime": 1530530014,
        "uid": 108783,
        "name": "ziyisama",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u7528\u6a21\u62df\u7684\u65b9\u5f0f\u8fc7\u4e8e\u7b80\u5355\uff0c\u5c1d\u8bd5\u7528\u94fe\u8868\u7684\u65b9\u5f0f\u89e3\u51b3\u4e86\u4e00\u4e0b\u3002\u4e3b\u8981\u601d\u8def\u662f\u7528\u6307\u9488\u94fe\u8868\u7684\u65b9\u5f0f\uff0c\u63d2\u5165\u4fdd\u5b58\u6bcf\u4e2a\u4fee\u8def\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u5728\u63d2\u5165\u7684\u65f6\u5019\u540c\u65f6\u6807\u8bb0\u4e86\u662f\u8d77\u70b9\u8fd8\u662f\u7ec8\u70b9\uff0c\u5e76\u4e14\u540c\u65f6\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u7684\u6392\u5e8f\u3002\u5254\u9664\u91cd\u590d\u6bb5\u843d\uff0c\u53ea\u8ba1\u7b97\u9996\u4e2a\u8d77\u70b9\u548c\u9996\u4e2a\u7ec8\u70b9\u7684\u4f4d\u7f6e\uff0c\u4fee\u8def\u62c6\u9664\u7684\u6811\u7684\u6570\u91cf\u5c31\u662f\u7ec8\u70b9-\u8d77\u70b9+1\u3002\u539f\u5148\u6811\u7684\u4e2a\u6570\u662f\u8f93\u5165\u7684\u8def\u7684\u957f\u5ea6+1\u3002\u76f4\u63a5\u8ba1\u7b97\u5373\u53ef\u6c42\u51fa\u7b54\u6848\u3002\n\n    \n\n    \n\n\n    \n    \n    \n```cpp\n#include<iostream>\n#include<string.h>\nusing namespace std;\nint main()\n{\n    struct duandian           //\u5b58\u50a8\u6240\u6709\u4fee\u8def\u7684\u5de6\u7aef\u70b9\u6216\u53f3\u7aef\u70b9 \n        {\n              int left;    //1\u4e3a\u5de6\u7aef\u70b9\uff0c2\u4e3a\u53f3\u7aef\u70b9 \n              int dian;    //\u7aef\u70b9\u4f4d\u7f6e\n            duandian *next;   \n        } ;    \n    int lu,xiuci,xiuleft,xiuright,i,start,startdian,xiulong;    \n    duandian *p,*q,*head,*prior;\n    cin>>lu>>xiuci;\n    for (i=1;i<=xiuci;i++)\n    {\n        cin>>xiuleft>>xiuright;\n        p=new duandian;\n        p->left=1;\n        p->dian=xiuleft;\n        if (i==1)\n        {\n            head=p;\n            head->next=NULL;\n        }\n        else\n        {\n            if (xiuleft<head->dian)\n            {\n                p->next=head;\n                head=p;\n            }            \n            else\n            {\n                prior=head;\n                q=head->next;\n                while ((xiuleft>q->dian)&&(q->next!=NULL))\n                {\n                    prior=q;\n                    q=q->next;\n                }\n                if (!(xiuleft>q->dian))\n                {\n                    p->next=q;\n                    prior->next=p;\n                }\n                else\n                {\n                    p->next=NULL;\n                    q->next=p;\n                }\n            }\n        }\n        p=new duandian;\n        p->left=2;\n        p->dian=xiuright;\n        prior=head;\n        if (head->next!=NULL)\n        {\n            q=head->next;\n            while ((xiuright>q->dian)&&(q->next!=NULL))\n            {\n                prior=q;\n                q=q->next;\n            }\n            if (!(xiuright>q->dian))\n            {\n                p->next=q;\n                prior->next=p;\n            }\n            else\n            {\n                p->next=NULL;\n                q->next=p;\n            }\n        }\n        else\n        {\n            p->next=NULL;\n            prior->next=p;\n        }\n    }\n    prior=head;    q=head->next;\n    cout<<prior->left<<\",\"<<prior->dian<<\",\";\n    while ((q!=NULL))\n    {\n        cout<<q->left<<\",\"<<q->dian<<\",\";\n        prior=prior->next;\n        q=q->next;\n    }\n    cout<<endl;    \n    prior=head;    q=head->next;    xiulong=0;    startdian=head->dian;\n    if (q->left==1)    start=2;\n    if (q->left==2)    \n    {\n        xiulong=(q->dian)-startdian+1;\n        start=0;     \n        if (q->next!=NULL)        startdian=q->next->dian;\n    }\n    while ((q->next!=NULL))\n    {\n        prior=prior->next;\n        q=q->next;\n        if (q->left==1)    start++;\n        if (q->left==2)\n        {\n            start--;\n            if (start==0)\n            {\n                xiulong=(q->dian)-startdian+1+xiulong;\n                start=0;\n                if (q->next!=NULL)        startdian=q->next->dian;\n            }\n        }\n    }\n    cout<<(lu+1-xiulong);\n    return 0;\n}\n```",
        "postTime": 1485867432,
        "uid": 34693,
        "name": "XiaoShenKeDeJiuSh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u795e\u5947\u7684\u9898\uff0c\u505a\u6cd5\u5f88\u591a\n\n\u672c\u849f\u84bb\u4e3a\u4e86A\u6389\u67d0\u8d85\u6076\u5fc3\u7684\u52a0\u5f3a\u7248(n<=2e8)\u800c\u5199\u4e86\u67d0\u5947\u602a\u7b97\u6cd5\n\n\u56e0\u4e3an\u7684\u5927\u5c0f\uff0c\u53ea\u80fd\u5411m\u8003\u8651,\u590d\u6742\u5ea6\u4e0d\u80fd\u5305\u62ecn\n\n## \u7b97\u6cd5\u5982\u4e0b\uff1a\n\n- \u7528a\u6570\u7ec4\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u79fb\u52a8\u533a\u95f4\u7684\u8d77\u70b9\u7ec8\u70b9\u5e76\u6309\u5927\u5c0f\u6392\u5e8f \n\n- \u603b\u8ddd\u79bb\u52a0\u4e0a\u4ece0\u5230a[1]\u7684\u8ddd\u79bb\u548ca[2*m]\u5230l\u7684\u8ddd\u79bb\n\n- \u679a\u4e3e2*m\u4e2a\u70b9,\u8bb0\u5f55\u5f53\u524d\u8fd8\u6709\u591a\u5c11\u4e2a\u6ca1\u6709\u5bf9\u5e94\u7684\u8d77\u70b9\n\n- \u82e5\u5f53\u524d\u5df2\u65e0\u6ca1\u6709\u5bf9\u5e94\u7684\u8d77\u70b9\uff0c\u52a0\u4e0a\u5f53\u524da[i]\u5230a[i-1]\u7684\u8ddd\u79bb\n\n- \u8f93\u51fa\u603b\u8ddd\u79bb\n\n## \u91cd\u70b9\uff1a\n\n1. ### \u4e3a\u4ec0\u4e48\u8981\u8bb0\u5f55\u5f53\u524d\u8fd8\u6709\u591a\u5c11\u4e2a\u6ca1\u6709\u5bf9\u5e94\u7684\u8d77\u70b9?\n\n\tans\uff1a\u56e0\u4e3a\u5982\u679c\u5f53\u524d\u8fd8\u6709\u6ca1\u6709\u5bf9\u5e94\u7684\u8d77\u70b9\uff0c\u5219a[i]\u4e0ea[i-1]\u4e4b\u95f4\u7684\u8ddd\u79bb\u4f1a\u5305\u542b\u5728\u6ca1\u6709\u5bf9\u5e94\u7684\u8d77\u70b9\u6240\u5bf9\u5e94\u7684\u79fb\u52a8\u533a\u95f4\u5185\u3002\n    \n  \t\u6bd4\u5982\u8bf4\u6837\u4f8b\uff1a\n    ```cpp\n\t500 3\n\t150 300\n\t100 200\n\t470 471\n\t```\n    \n    \u5f53\u679a\u4e3e\u5230150\u8fd9\u4e2a\u8d77\u70b9\u65f6\uff0c150~100\u7684\u8ddd\u79bb\u5e94\u662f\u5305\u542b\u5728100~200\u4e2d\u7684\uff0c\u6240\u4ee5\u4e0d\u52a0\u3002\n    \n2. ### \u4e3a\u4ec0\u4e48\u8fd9\u6837\u80fd\u5bf9?\n\tans:\u8fd9\u6837\u5b50\u7b97\u5176\u5b9e\u662f\u7edf\u8ba1\u591a\u4e2a\u79fb\u52a8\u533a\u95f4\u4e4b\u95f4\u7684\u6811\u548c\u3002\n    \n    \u5f00\u5934\u7684\u6811\u548c\u7ed3\u5c3e\u7684\u6811\u672a\u88ab\u7edf\u8ba1\uff0c\u6240\u4ee5\u5148\u52a0\u4e0a\u3002\u800c\u4e2d\u95f4\u7b97a[i]~a[i-1]\u8ddd\u79bb\u65f6\u5e94\u662f\uff08a[i].s-a[i-1].s-1\uff09,\u51cf\u4e00\u662f\u56e0\u4e3a\u79fb\u52a8\u533a\u95f4\u662f\u95ed\u5408\u533a\u95f4\u3002\n    \n## \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct data{\n\tint s,q;\n}a[40001];\nbool cmp(data u,data v){\n\treturn u.s<v.s;\n}\nint main(){\n\tint l,m,x,y,tot=0,sum=0;\n\tscanf(\"%d%d\",&l,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\ta[i*2-1].q=0;//\u8bb0\u5f55\u662f\u5f00\u5934\u8fd8\u662f\u7ed3\u5c3e\n\t\ta[i*2-1].s=x;\n\t\ta[i*2].q=1;\n\t\ta[i*2].s=y;\n\t}\n\tsort(a+1,a+m*2+1,cmp);//\u6392\u5e8f\n\tsum+=a[1].s+l-a[2*m].s;\n\tfor(int i=1;i<=2*m;i++){//\u795e\u5947\u7684O(2*m)\u65f6\u95f4\u590d\u6742\u5ea6\n\t\tif(!tot&&i>1) sum+=a[i].s-a[i-1].s-1; \n\t\tif(!a[i].q) tot++;\n\t\telse tot--;\n\t}\n\tprintf(\"%d\",sum);//AC~\n}\n```\n\n\u6c42\u8fc7\u5ba1QAQ",
        "postTime": 1542421687,
        "uid": 90869,
        "name": "tylon2006",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "~~\u56e0\u4e3a\u6d1b\u5495markdown\u83ab\u540d\u7684\u5361\u6240\u4ee5\u662f\u5728typora\u4e0a\u7f16\u8f91\u4e86\u624d\u8d34\u4e0a\u6765\u7684~~\n\n\n\n# \u666e\u901a\u89e3\u6cd5\n\n\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u6bcf\u6b21\u4ecestart\u5230end\u628a\u6811\u780d\u4e00\u904d\uff0c\u6700\u540e\u626b\u4e00\u904d\u6570\u6709\u591a\u5c11\u68f5\u6811\n\n```C++\n#include <iostream>\n\nusing namespace std;\n\nconst int MAXL = 10001;\n\nint road[MAXL];//\u6ce8\u610f\uff0c\u4e3a\u4e86\u4e0d\u7528memset/\u5faa\u73af\u8d4b\u503c\uff0c\u6211\u75280\u8868\u793a\u6709\u6811\uff0c1\u8868\u793a\u6ca1\u6709\u6811\n\nint main()\n{\n\tint L,M,start,end,result = 0;\n\n\tcin>>L>>M;\n\n\tfor(int i = 0; i < M; ++i)\n\t{\n\t\tcin>>start>>end;\n\t\tfor (int j = start; j <= end; ++j)\n\t\t\troad[j] = 1;\n\t}\n    \n\tfor(int i = 0; i <= L; ++i)\n\t\tif(!road[i])\n\t\t\t++result;\n\t\n\tcout<<result;\n\n\treturn 0;\n}\n\n```\n\n[\u8dd1\u5f97\u5f88\u5feb\u2026\u2026](https://www.luogu.org/record/show?rid=7941162)\n\n![](https://cdn.luogu.com.cn/upload/pic/34972.png)\n\n# \u8111\u6d1e\u89e3\u6cd5\n\n\u4e8b\u60c5\u662f\u8fd9\u6837\u7684\uff0c\u67d0\u4e00\u5929\u4e0a\u8bfe\u7684\u65f6\u5019\uff0c\u672c\u849f\u84bb\u8111\u5b50\u91cc\u5374\u5168\u90fd\u662f\u4e00\u7247\u4e00\u7247\u7684\u533a\u95f4\u2026\u2026\n\n\u60f3\u7740\u60f3\u7740\u7a81\u7136\u8e66\u51fa\u6765\u4e00\u4e2a\u60f3\u6cd5\u2026\u2026\n\n>  _\u5982\u679c\u6211\u7528\u4e00\u4e2a\u4e25\u683c\u4e8c\u53c9\u6811\u6765\u7ef4\u62a4\u8fd9\u4e9b\u533a\u95f4\u4f1a\u600e\u4e48\u6837\uff1f_ \n\n\u4e8e\u662f\u5728\u8349\u7a3f\u7eb8\u4e0a\u5199\u5199\u5199\u2026\u2026\u5199\u5199\u5199\u2026\u2026\u5199\u5199\u5199\u2026\u2026\n\n```C++\n//\u539f\u8c05\u6211\u795e\u5947\u7684\u9884\u5904\u7406\u8bed\u53e5\u548c\u539f\u6765\u7684\u82f1\u6587\u6ce8\u91ca\n#include <iostream>\n\n#define min(a,b) ((a) < (b) ? (a) : (b))\n#define max(a,b) ((a) > (b) ? (a) : (b))\n\n#define DEBUG 0\n\n/**\n    P1047 \u6821\u95e8\u5916\u7684\u6811\n    using some WTF data structure ... whatever\n*/\n\nusing std::cin;\nusing std::cout;\n\nconst int MAXL = 10010,MAXM = 105;\n\nstruct node\n{\n    int lb,rb,//\u5de6\u53f3\u8fb9\u754c, node.range = [lb,rb]\n        cnt;//\u5f53\u524d\u7ed3\u70b9\u6709\u591a\u5c11\u68f5\u6811\n    node *lch,*rch;// l/r child\n\n    node():lb(),rb(),cnt(),lch(),rch(){}\n    node(int l,int r,int c):lb(l),rb(r),cnt(c),lch(),rch(){}\n    node(int l,int r,int c,node *lc,node *rc):lb(l),rb(r),cnt(c),lch(lc),rch(rc){}\n};\n\nnode *root;\n\nvoid read(int &x)\n{\n    char ch = '\\0';x = 0;\n    while(ch < '0' || ch > '9')cin.get(ch);\n    while(ch >= '0' && ch <= '9'){x = (x<<1) + (x<<3) + ch - '0';cin.get(ch);}\n}\n\nvoid release(node *ntr)\n//\u5220\u6389\u4e00\u4e2a\u7ed3\u70b9\uff0c\u9012\u5f52\u5730delete\u5b50\u8282\u70b9\n{\n    if(!ntr)\n        return;\n    release(ntr->lch);\n    release(ntr->rch);\n    delete ntr;\n}\n\nint cut(node *curr,int &lb,int &rb)\n//\u6700\u4e3b\u8981\u7684\u64cd\u4f5c\uff0c\u780d\u6811\uff0c\u4ecelb\u780d\u5230rb\uff0c\u540c\u65f6\u66f4\u65b0cnt\n//\u8fd4\u56de\u503c\u4e3a\u66f4\u65b0\u540e\u7684cnt\n{\n\t//\u5b89\u6392\u4e0d\u4e0a\uff0c\u8fd4\u56de\u539f\u503c\n    //if out of range,return original value\n    if(lb > curr->rb || rb < curr->lb)\n        return curr->cnt;\n    //\u5f53\u524d\u7ed3\u70b9\u88ab\u5b89\u6392\u4e86\uff08\u6307\u5b8c\u5168\u88ab[lb,rb]\u8986\u76d6\n    //if [lb,rb] covered curr->range,curr is completely cut,return 0;\n    if(lb <= curr->lb && rb >= curr->rb)\n    {\n        release(curr);\n        return 0;\n    }\n\n    int lc = 0,rc = 0;//lcount,rcount\n\n    if(!curr->lch && !curr->rch)\n    //\u5982\u679c\u6ca1\u6709\u5b50\u8282\u70b9\n    {\n        if(lb >= curr->lb && rb <= curr->rb)\n        {\n            //if cut:      ---------\n            //\t curr:   --------------\n            //divide sub-ranges into lch,rch\n            lc = lb - curr->lb;\n            rc = curr->rb - rb;\n            curr->lch = new node(curr->lb,lb - 1,lc);\n            curr->rch = new node(rb + 1,curr->rb,rc);\n            return curr->cnt = lc + rc;\n        }\n        \n        //\u5982\u679c\u4e0d\u662f\u780d\u4e24\u6bb5\uff0c\u4fee\u6539\u5f53\u524d\u7ed3\u70b9\u7684lb,rb\u5e76\u66f4\u65b0cnt\u5c31\u53ef\u4ee5\u4e86\n        if(lb >= curr->lb)\n            *curr = (node){curr->lb,lb - 1,lb - curr->lb};\n        else\n            *curr = (node){rb + 1,curr->rb,curr->rb - rb};\n\n        return curr->cnt;\n\n    }\n\n    //\u6709\u5b50\u7ed3\u70b9\uff0c\u5f80\u4e0b\u641c\n    //has lch,rch,traversal\n    lc = cut(curr->lch,lb,rb);\n    rc = cut(curr->rch,lb,rb);\n\n    //\u5355\u4fa7\u6811\u780d\u5b8c\u4e86\uff0c\u5408\u5e76\u53e6\u4e00\u4fa7\u5b50\u7ed3\u70b9\n    \n    //lc == 0 => [lb,rb] covered curr->lch->range\n    //curr->lch is dead\n    //merge curr->lch into curr\n    if(!lc)\n    {\n        //curr = rch\n        node *temp = curr->rch;\n        *curr = (node){temp->lb,temp->rb,temp->cnt,temp->lch,temp->rch};\n        delete temp;\n        return curr->cnt;\n    }\n\n    if(!rc)\n    {\n        //curr = lch\n        node *temp = curr->lch;\n        *curr = (node){temp->lb,temp->rb,temp->cnt,temp->lch,temp->rch};\n        delete temp;\n        return curr->cnt;\n    }\n\n    return curr->cnt = lc + rc;\n}\n\nint main()\n{\n    int L,M,l,r;\n\n    read(L);read(M);\n    root = new node(0,L,L+1);\n    for(int i = 0;i < M;++i)\n    {\n        read(l);read(r);\n        cut(root,l,r);\n    }\n\n    cout<<root->cnt;\n\n#if DEBUG\n    system(\"pause\");\n#endif\n    \n    return 0;\n}\n```\n\n[\u7ed3\u679c\u2026\u2026](https://www.luogu.org/recordnew/show/10132272)\n\n![](https://cdn.luogu.com.cn/upload/pic/34970.png)\n\n![](https://cdn.luogu.com.cn/upload/pic/34968.png)\n\n\u66f4\u6162\u4e86\u2026\u2026\u5012\u662f\u5185\u5b58\u5f88\u7701\u2026\u2026\n\n\u6012\u5220release(node*)\u518d\u8bd5\u4e00\u904d\u2026\u2026\n\n[\u624d\u5feb\u4e862ms\u2026\u2026](https://www.luogu.org/recordnew/show/10132384)\n\n\u554a\u554a\u554a\u7b97\u4e86\u53cd\u6b63\u7701\u5185\u5b58\n\n\u4f46\u662f\u6211\u7ffb\u8bc4\u6d4b\u8bb0\u5f55\u65f6\u53d1\u89c9\n\n![](https://cdn.luogu.com.cn/upload/pic/34973.png)\n\n**0ms/0.34MB!**\n\n\u5b9a\u775b\u4e00\u770b\uff0cpascal\u2026\u2026\n\n\u4e5f\u8bb8\u56e0\u4e3apascal\u662f16\u4f4dint?\n\n\u6b63\u5e38\u89e3\u6cd5\uff0cint\u6539char\n\n[31ms,692KB](https://www.luogu.org/recordnew/show/11313959)\n\n![](https://cdn.luogu.com.cn/upload/pic/34974.png)\n\n![](https://cdn.luogu.com.cn/upload/pic/34976.png)",
        "postTime": 1538318669,
        "uid": 67794,
        "name": "hajbw10",
        "ccfLevel": 0,
        "title": "\u95f2\u7740\u6ca1\u4e8b\u5e72\u4e8e\u662f\u5728\u6821\u95e8\u5916\u79cd\u6811"
    },
    {
        "content": "\u7ecf\u5178\u7684\u533a\u95f4\u8986\u76d6\u95ee\u9898\n\n\u5927\u5bb6\u4e3a\u4ec0\u4e48\u90fd\u7528\u6742\u6280\u5199\u6cd5\u7ebf\u6bb5\u6811\u505a\u554a\n\n\u6211\u592a\u83dc\u4e86\u4e0d\u4f1a\u53ea\u80fd\u4ea4\u4e86\u4e00\u4e2a\u5206\u5757\n\n\u539f\u6765\u4ee5\u4e3a\u5206\u5757\u4f1a\u88ab\u5361\u7ed3\u679c\u6ca1\u6709\n\n\u601d\u8def\u5c31\u662f\u5206\u5757\uff0c\u50cf\u7ebf\u6bb5\u6811\u4e00\u6837\u7ef4\u62a4\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n\nusing namespace std;\n\nconst int maxn=1000010;\n\nint pos[maxn],a[maxn],b[maxn],tag[maxn];//a\uff1a\u539f\u6570\u7ec4\uff0cb\uff1a\u4fdd\u5b58\u6bcf\u4e2a\u5757\u6392\u5e8f\u540e\u7684\u60c5\u51b5\uff1bpos\uff1a\u5728\u54ea\u4e2a\u5757\u5185\uff0ctag\uff1a\u6807\u7b7e,\u5176\u4e2dblock\u548ctag\u53ef\u4ee5\u53ea\u5f00sqrt\uff08n\uff09 \nint block,m;\nint n,q;\ninline void build(int x){\n    int l=(x-1)*block+1,r=min(x*block,n);\n    for(register int i=l;i<=r;i++)\n        b[i]=a[i];\n    sort(b+l,b+r+1);//\u7ef4\u62a4\u6392\u5e8f\u540e\u7684\u5757 \n}\ninline void modify(int l,int r,int v)//\u4fee\u6539\n{\n    if(pos[l]==pos[r])\n        for(register int i=l;i<=r;i++)\n            a[i]=v;//\u5bf9\u5355\u4e2a\u5757\u8fdb\u884c\u64cd\u4f5c \n    else {\n        for(register int i=l;i<=pos[l]*block;i++)\n            a[i]=v;//\u5bf9\u5de6\u8fb9\u7684\u96f6\u6563\u5757\u8fdb\u884c\u4fee\u6539\n        for(register int i=(pos[r]-1)*block+1;i<=r;i++)\n            a[i]=v;//\u5bf9\u53f3\u8fb9\u7684\u5757\u96f6\u6563\u8fdb\u884c\u4fee\u6539\n        for(register int i=(pos[l]+1);i<pos[r];i++)\n            tag[i]=v;//\u5bf9\u6574\u5757\u8fdb\u884ctag\u64cd\u4f5c\n    }\n    build(pos[l]);\n    build(pos[r]);//\u91cd\u6784\u5de6\u53f3\u4e24\u4e2a\u5757 \n}\n\ninline int find(int l,int r,int v)//\u67e5\u8be2\u5927\u4e8ev\u4e2a\u6570 \n{\n    register int ans=0;\n    if(pos[l]==pos[r])\n        for(register int i=l;i<=r;i++)\n            ans+=a[i]+tag[pos[i]]>=v;//\u5355\u4e2a\u5757\uff0c\u76f4\u63a5O\uff08sqrt(n))\u5904\u7406 \n    else {\n        for(register int i=l;i<=pos[l]*block;i++ )\n            ans+=a[i]+tag[pos[i]]>=v;//\u96f6\u6563\u5757 \n        for(register int i=(pos[r]-1)*block+1;i<=r;i++)\n            ans+=a[i]+tag[pos[i]]>=v;//\u96f6\u6563\u5757\n        for(register int i=pos[l]+1;i<pos[r];i++)\n            if(b[min(i*block,n)]>=v-tag[i])//\u56e0\u4e3ab\u7ecf\u8fc7\u6392\u5e8f,\u53ef\u4ee5\u7528\u8fd9\u4e2a\u7279\u6027\n                ans+=b+min(i*block,n)-upper_bound(b+(i-1)*block+1,b+min(i*block,n),v-tag[i])+1;\n    }\n    return ans;\n}\n\nint main()\n{\n    scanf(\"%d %d\",&n,&q);\n    block=sqrt(n); \n    m=n/block+!!(n%block);\n    modify(0,n,1);//\u5148\u5168\u90e8\u8868\u793a\u4e3a\u5b58\u5728\n    for(register int i=1;i<=m;i++) build(i);\n    while(q--) {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        modify(x,y,0);//\u8986\u76d6\u6389\n    }\n    printf(\"%d\",find(0,n,1));//\u67e5\u8be2\n    return 0;\n}\n```",
        "postTime": 1521872761,
        "uid": 45443,
        "name": "codesonic",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\n```cpp\n//2005PJ\n//\u770b\u4e86\u4e00\u4e0b\u767e\u79d1\u7684\u9898\u89e3\uff0c\u53d1\u73b0\u8fd8\u6ca1\u6709\u7528\u6392\u5e8f\u505a\u7684\u3002\n//\u6392\u5e8f\u662fnlogn\uff0c\u518d\u52a0\u4e0a\u4e00\u6b21m\u7684\u904d\u5386\uff0c\u5c31\u7b97\u8fd9\u4e2a\u6570\u636e\u89c4\u6a21\u518d\u592710000\u500d\u90fd\u4e0d\u4f1a\u7206\u3002\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct edge{\n    int l,r;\n} tree[147];//\u7ed3\u6784\u4f53\uff0c\u65b0\u4eba\u53ef\u4ee5\u901a\u8fc7\u8fd9\u9053\u9898\u719f\u6089\u7ed3\u6784\u4f53\u6392\u5e8f\u7684\u65b9\u6cd5\u3002\nbool cmp(edge a, edge b){\n    return a.l<b.l;\n```\n}//\u7f51\u4e0a\u8fd8\u6709\u4e00\u79cd\u662f\u901a\u8fc7\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u5728\u8003\u8bd5\u7684\u65f6\u5019cmp\u597d\u5199\u6613\u61c2\u66f4\u52a0\u65b9\u4fbf\u3002\n```cpp\nint L,M;\nint ans=0;\nint main(){\n    scanf(\"%d%d\",&L,&M);\n    for(int i=1;i<=M;i++) scanf(\"%d%d\",&tree[i].l,&tree[i].r);\n    sort(tree+1,tree+M+1,cmp);//\u4ee5\u5de6\u7aef\u70b9\u4e3a\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n    int    left = tree[1].l; //\u904d\u5386\u641c\u7d22\u6bcf\u4e00\u6bb5\u8def\n    int right = tree[1].r;\n    for(int i=2;i<=M;i++) {\n        if (tree[i].l<right &&tree[i].r>right) right=tree[i].r; /*\u56e0\u4e3a\u6392\u8fc7\u5e8f\uff0c\u6240\u4ee5\u6bcf\u6bb5\u8def\u7684\u5de6\u7aef\u70b9\u90fd\u4f1a\u6bd4\u4e0b\u4e00\u4e2a\u5927\uff0c\u6240\u4ee5\u5982\u679c\u53f3\u7aef\u70b9\u6bd4\u4ed6\u5927\u5c31\u4f1a\u88ab\u5305\u542b*/\n        if (tree[i].l>right) {\n            ans +=  right-left+1;\n            left = tree[i].l;\n            right = tree[i].r; //\u5982\u679c\u6ca1\u6709\u88ab\u5305\u542b\uff0c\u8ba1\u7b97\u7b54\u6848+\u66f4\u65b0\u5de6\u53f3\u7aef\u70b9\u3002\n        }\n    }\n    ans += right - left + 1;\n    ans = L-ans+1; //ans\u4e4b\u524d\u8bb0\u5f55\u7684\u662f\u780d\u4e86\u591a\u5c11\u4e2a\uff0c\u9898\u76ee\u95ee\u751f\u591a\u5c11\u4e2a\uff0c\u51cf\u4e00\u51cf\u5c31\u597d\u4e86\u3002\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1479374619,
        "uid": 28598,
        "name": "\u5c18\u5c0f\u4e03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "```delphi\n\nvar\n  a:array[0..10000001] of integer;\n  s,m,x,y,i,o,ans:longint;\nbegin\n  readln(s,m);//\u8f93\u5165\u4e0d\u8bf4\n  for i:=1 to m do\n  begin\n    readln(x,y);\n    inc(a[x]);//\u7ed9\u5f00\u5934\u505a\u4e0a\u6807\u8bb0+1\n    dec(a[y+1]);\u7ed9\u7ed3\u5c3e\u505a\u4e0a\u6807\u8bb0-1\n  end;\n  for i:=0 to s do\n  begin\n    o:=o+a[i];//\u628a\u6570\u7ec4\u5143\u7d20\u91cc\u7684\u6570\u5b57\u52a0\u8d77\u6765\n    if o=0 then inc(ans);//\u5982\u679c\u7b49\u4e8e0\uff08\u5728\u6ca1\u6709\u6539\u52a8\u65f6\u4e00\u76f4\u662f0\uff0c\u5728\u52a0\u4e0a\u5f00\u5934\u65f6o\u5c31\u662f1\uff0c\u518d\u51cf\u53bb\u7ed3\u5c3e\u540e\u53c8\u662f0\uff09\n  end;\n  writeln(ans);//\u8f93\u51fa\u4e0d\u89e3\u91ca\nend.\n\n```",
        "postTime": 1444548699,
        "uid": 9924,
        "name": "LEXUGE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u5199\u4e00\u4e0b Java\u7684\u4ee3\u7801\n\n\u601d\u8def: \u521b\u5efa\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684\u6570\u7ec4,\u7528\u6765\u5b58\u50a8\u6811\u7684\u72b6\u6001, Java\u9ed8\u8ba4\u503c\u4e3afalse\n\n\u7136\u540e\u6839\u636e\u8bfb\u5165\u7684\u533a\u57df\u7684\u8d77\u59cb\u503c, \u6309\u987a\u5e8f\u628a\u8d77\u59cb\u4f4d\u7f6e\u53ca\u4e2d\u95f4\u90e8\u5206\u7684\u6811\u7684\u72b6\u6001\u6807\u8bb0\u4e3atrue, \u6700\u540e\u53ea\u9700\u8981\u7edf\u8ba1\u4e00\u4e0bfalse\u7684\u6570\u91cf\n\n```java\nimport java.io.*;\nimport java.util.*;\npublic class Main{\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner cin = new Scanner(System.in);\n\t\tint l, m, subway[][];\n\t\tl = cin.nextInt();\n\t\tm = cin.nextInt();\n\t\tsubway = new int[m][2];\n\t\tfor(int i=0; i<subway.length; i++){\n\t\t\tsubway[i][0] = cin.nextInt();\n\t\t\tsubway[i][1] = cin.nextInt();\n\t\t}\n\t\tboolean tree[] = new boolean[l+1]; //\u5b58\u50a8\u6811\u7684\u72b6\u6001\u7684\u6570\u7ec4\n\t\t// \u6839\u636e\u533a\u57df\u7684\u8d77\u59cb\u6807\u8bb0\u5bf9\u5e94\u7684\u6811\u7684\u72b6\u6001\u4e3atrue\n\t\tfor(int i=0; i<subway.length; i++){\n\t\t\tfor(int j=subway[i][0]; j<=subway[i][1]; j++){\n\t\t\t\ttree[j] = true;\n\t\t\t}\n\t\t}\n\t\tint count = 0;\n        // \u7edf\u8ba1\u672a\u88ab\u6807\u8bb0\u7684\u6811\n\t\tfor(int i=0; i<=l; i++){\n\t\t\tif(tree[i] == false)\n\t\t\t\tcount++;\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n```",
        "postTime": 1534257049,
        "uid": 119185,
        "name": "silverKnight",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u7ecf\u5178\u7684\u5206\u5757\u9898\u76ee\n\n\u6211\u4eec\u5c06\u6574\u4e2a\u5e8f\u5217\u5206\u4e3a$\\sqrt n$\u5757\uff0c\u7136\u540e\u6bcf\u6b21\u64cd\u4f5c\u76f8\u5f53\u4e8e\u628a\u5f53\u524d\u533a\u95f4\u8d4b\u503c\u4e3a0\uff0c\u6700\u540e\u67e5\u8be2\u5e8f\u5217\u603b\u548c\u3002\n\n\u9700\u8981\u8bb0\u5f55\u7684\u503c\uff1a\u6bcf\u4e00\u4e2a\u70b9\u5c5e\u4e8e\u54ea\u4e00\u5757\uff0c\u6bcf\u4e00\u5757\u5f53\u524d\u7684\u548c\uff0c\u6bcf\u4e00\u4e2a\u70b9\u662f\u5426\u6709\u6811\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u5904\u7406\u8fb9\u89d2\u5757\uff0c\u5982\u679c\u5f53\u524d\u70b9\u6709\u6811\uff0c\u5219\u5c06\u8fd9\u5757\u7b54\u6848\u51cf$1$\uff0c\u6700\u540e\u8d4b\u503c\u4e3a$0$\u3002\n\n\u4fee\u6539\u64cd\u4f5c\u4ee3\u7801\uff1a\n```\nvoid modify(int l,int r)\n{\n\tfor(int i=l;i<=min(r,belong[l]*block);i++)//\u5de6\u8fb9\u5757\n\t{\n\t\tif(sum[belong[i]]==0)//\u8fd9\u5757\u7684\u6811\u90fd\u6ca1\u4e86\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(a[i])//\u8fd8\u6709\u6811\n\t\t{\n\t\t\tsum[belong[i]]--;\n\t\t}\n\t\ta[i]=0;\n\t}\n\tif(belong[l]!=belong[r])\n\t{\n\t\tfor(int i=(belong[r]-1)*block+1;i<=r;i++)//\u53f3\u8fb9\u5757\n\t\t{\n\t\t\tif(sum[belong[i]]==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(a[i])\n\t\t\t{\n\t\t\t\tsum[belong[i]]--;\n\t\t\t}\n\t\t\ta[i]=0;\n\t\t}\n\t}\n\tfor(int i=belong[l]+1;i<belong[r];i++)//\u4e2d\u95f4\u7684\u6574\u5757\n\t{\n\t\tsum[i]=0;//\u6811\u5168\u62c6\u5b8c\n\t}\n}\n```\n\u590d\u6742\u5ea6\u5206\u6790\uff1a\u5de6\u53f3\u4e24\u4e2a\u8fb9\u5757\uff0c\u6bcf\u6b21\u66b4\u529b\u4fee\u6539\u6700\u591a$\\sqrt n$\u5757\uff0c\u4e2d\u95f4\u6700\u591a$\\sqrt n$\u5757\uff0c\u6545\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(\\sqrt n)$\n\n\u67e5\u8be2\u540c\u7406\uff0c\u672c\u6765\u53ea\u9700\u8981\u628a\u6240\u6709\u5757$sum$\u52a0\u8d77\u6765\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8bf4\u660e\uff0c\u8fd8\u662f\u5199\u4e86\u5177\u6709\u4e00\u822c\u6027\u7684\u67e5\u8be2\u65b9\u6cd5\u3002\n\n\u4e0e\u4fee\u6539\u540c\u7406\uff0c\u53ea\u9700\u8981\u5148\u66b4\u529b\u67e5\u8be2\u8fb9\u5757\u89d2\u5757\u7684\u7b54\u6848\uff0c\u518d\u52a0\u4e0a\u4e2d\u95f4\u5757\u7684\u7b54\u6848\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e3a$O(\\sqrt n)$\n\n\u67e5\u8be2\u4ee3\u7801\uff1a\n```\nint query(int l,int r)\n{\n\tint ans=0;\n\tfor(int i=l;i<=min(r,belong[l]*block);i++)//\u5de6\u8fb9\u5757\n\t{\n\t\tif(sum[belong[i]]==0)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(a[i])\n\t\t{\n\t\t\tans++;\n\t\t}\n\t}\n\tif(belong[l]!=belong[r])\n\t{\n\t\tfor(int i=(belong[r]-1)*block+1;i<=r;i++)//\u53f3\u8fb9\u5757\n\t\t{\n\t\t\tif(sum[belong[i]]==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(a[i])\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=belong[l]+1;i<belong[r];i++)//\u4e2d\u95f4\u6574\u5757\n\t{\n\t\tans+=sum[i];//\u76f4\u63a5\u52a0\u5757\u5185\u6240\u6709\u7b54\u6848\n\t}\n\treturn ans;\n}\n```\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint a[10010],belong[10010],addv[110],n,block,sum[110];\nvoid modify(int l,int r)\n{\n\tfor(int i=l;i<=min(r,belong[l]*block);i++)\n\t{\n\t\tif(sum[belong[i]]==0)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(a[i])\n\t\t{\n\t\t\tsum[belong[i]]--;\n\t\t}\n\t\ta[i]=0;\n\t}\n\tif(belong[l]!=belong[r])\n\t{\n\t\tfor(int i=(belong[r]-1)*block+1;i<=r;i++)\n\t\t{\n\t\t\tif(sum[belong[i]]==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(a[i])\n\t\t\t{\n\t\t\t\tsum[belong[i]]--;\n\t\t\t}\n\t\t\ta[i]=0;\n\t\t}\n\t}\n\tfor(int i=belong[l]+1;i<belong[r];i++)\n\t{\n\t\tsum[i]=0;\n\t}\n}\nint query(int l,int r)\n{\n\tint ans=0;\n\tfor(int i=l;i<=min(r,belong[l]*block);i++)\n\t{\n\t\tif(sum[belong[i]]==0)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(a[i])\n\t\t{\n\t\t\tans++;\n\t\t}\n\t}\n\tif(belong[l]!=belong[r])\n\t{\n\t\tfor(int i=(belong[r]-1)*block+1;i<=r;i++)\n\t\t{\n\t\t\tif(sum[belong[i]]==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(a[i])\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=belong[l]+1;i<belong[r];i++)\n\t{\n\t\tans+=sum[i];\n\t}\n\treturn ans;\n}\nint main()\n{\n\tint m;\n\tcin>>n>>m;\n\tn++;\n\tblock=sqrt(n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=1;\n\t\tbelong[i]=(i-1)/block+1;\n\t\tsum[belong[i]]++;\n\t\taddv[belong[i]]=1;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tl++;\n\t\tr++;\n\t\tmodify(l,r); \n\t}\n\tprintf(\"%d\",query(1,n));\n}\n```",
        "postTime": 1534207799,
        "uid": 48265,
        "name": "decoqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u7b2c\u4e8c\u6b21\u5199\u9898\u89e3\u597d\u6fc0\u52a8\u554a~\uff08\u4e0a\u6b21\u6ca1\u8fc7\uff09\n\n\u4e0d\u8bf4\u591a\u4e86\u8f6c\u5165\u6b63\u9898\n\n\u8fd9\u9898\u6700\u597d\u7684\u529e\u6cd5\u5c31\u662f\u7528\u4e00\u4e2aset\uff0c\u56e0\u4e3aset\u6709\u4e0d\u91cd\u590d\u7684\u7279\u6027\uff0c\u6240\u4ee5\u7528\u5728\u8fd9\u9898\u91cc\u53ef\u4ee5\u7279\u65b9\u4fbf\u5730\u7edf\u8ba1\u54ea\u4e9b\u5730\u65b9\u7684\u6811\u8981\u88ab\u62d4\u6389\u3002\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<set>//\u4e0b\u6587\u6709\u7528\n#include<algorithm>\nusing namespace std;\nint main()\n{\n    int t,m,k[105],h[105],i,j;//\u65e0\u987b\u89e3\u91ca\n    set<int> s;\n    cin>>t>>m;\n    for(i=1;i<=m;i++) cin>>k[i]>>h[i];\n    for(i=1;i<=m;i++)\n      for(j=k[i];j<=h[i];j++) s.insert(j);\n    cout<<t-s.size()+1<<endl;/*+1\u662f\u56e0\u4e3at\u5e76\u4e0d\u662f\u6811\u7684\u603b\u68f5\u6811\uff0c\u56e0\u4e3a0\u70b9\u8fd8\u6709\u4e00\u68f5\u6811\uff0c\u9700\u8981\u52a0\u4e0a*/\n    return 0;//\u7b80\u5355\u7c97\u66b4\n}\n```",
        "postTime": 1516522289,
        "uid": 59995,
        "name": "\u53cd\u6bd4\u4f8b\u51fd\u6570",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u5982\u9898\u76ee\u7b97\u6cd5\u6807\u7b7e\u6240\u8a00\uff0c\u7ebf\u6bb5\u6811~~\uff08\u5176\u5b9e\u4e5f\u662f\u6742\u6280\u5199\u6cd5\uff09~~\n\n\u4e0d\u591a\u8d58\u8ff0\uff0c\u5efa\u6811\u3001\u4fee\u6539\u3001\u67e5\u8be2\u4e00\u6c14\u5475\u6210\uff0c\u5c31\u7b97\u662f\u6742\u6280\uff0c\u4e5f\u8981\u505a\u6742\u6280\u4e2d\u7684\u8c6a\u6770\uff08\u9003\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n``` cpp\n#include <bits/stdc++.h>\n#define N 2000010\nusing namespace std;\nstruct node\n{\n    int left,right;\n    long long val,sum;\n};struct node a[4*N];\nint data[N],n,m,x,y,b;\nlong long z;\nvoid pushup(int p)\n{\n    a[p].sum=a[2*p].sum+a[2*p+1].sum;\n}\nvoid pushdown(int p)\n{\n    if(a[p].val!=-1)\n    {\n        a[2*p].val=a[p].val;\n        a[2*p+1].val=a[p].val;\n        a[2*p].sum=(a[2*p].right-a[2*p].left+1)*a[p].val;\n        a[2*p+1].sum=(a[2*p+1].right-a[2*p+1].left+1)*a[p].val;\n        a[p].val=-1;\n    }\n}//pushup\u3001pushdown\u662f\u57fa\u672c\u64cd\u4f5c\uff0c\u4e0d\u591a\u8bb2\nvoid build(int p,int l,int r)\n{\n    a[p].left=l;\n    a[p].right=r;\n    a[p].val=-1;\n    if(l==r)\n    {\n        a[p].sum=data[l];\n        return;\n    }\n    int mid=(a[p].left+a[p].right)/2;\n    build(2*p,l,mid);\n    build(2*p+1,mid+1,r);\n    a[p].sum=a[2*p].sum+a[2*p+1].sum;\n}//\u5efa\u6811\u4e5f\u5f88\u7b80\u5355\nlong long query(int p,int l,int r)\n{\n    if(a[p].left==l&&a[p].right==r)\n        return a[p].sum;\n    pushdown(p);\n    int mid=(a[p].left+a[p].right)/2;\n    if(r<=mid)\n        return query(2*p,l,r);\n    else if(l>mid)\n        return query(2*p+1,l,r);\n    else\n        return query(2*p,l,mid)+query(2*p+1,mid+1,r);\n}//\u67e5\u8be2\nvoid change(int p,int l,int r,long long d)\n{\n    if(a[p].left==l&&a[p].right==r)\n    {\n        a[p].sum=(l-r+1)*d;\n        a[p].val=0;\n        return;\n    }\n    pushdown(p);\n    int mid=(a[p].left+a[p].right)/2;\n    if(r<=mid)\n        change(2*p,l,r,d);\n    else if(l>mid)\n        change(2*p+1,l,r,d);\n    else\n    {\n        change(2*p,l,mid,d);\n        change(2*p+1,mid+1,r,d);\n    }\n    pushup(p);\n}//\u6b64\u51fd\u6570\u662f\u4e0e\u6a21\u677f\u552f\u4e00\u7684\u5dee\u522b\uff0c\u5c06\u780d\u6389\u7684\u6811\u7684\u503c\u8d4b\u4e3a0\uff0c\u8fd9\u6837\u5c31\u53ea\u9700\u67e5\u8be2\u6839\u8282\u70b9\u5904\u7684\u533a\u95f4\u548c\u4e86\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n+1;i++)\n        data[i]=1;//\u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u521d\u503c\u8d4b\u4e3a1\uff0c\u65b9\u4fbf\u67e5\u8be2\u65f6\u53ea\u67e5\u6839\u8282\u70b9\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e\u8fd9\u91cc\u662f\u7b97\u4e860\u8fd9\u4e2a\u4f4d\u7f6e\u7684\uff0c\u6240\u4ee5n\u3001x\u3001y\u90fd\u8981\u76f8\u5e94\u7684\u52a01\n    build(1,1,n+1);\n    for(int i=1;i<=m;i++)\n    {\n        cin>>x>>y;\n        change(1,x+1,y+1,0);\n    }\n    cout<<query(1,1,n+1);\n    return 0;\n}\n```\n\u6bd4\u8f83\u7b80\u5355\u4e0d\u591a\u8bf4\uff0c\u5177\u4f53\u6ce8\u91ca\u770b\u4ee3\u7801\n",
        "postTime": 1514362425,
        "uid": 55454,
        "name": "DimensionTripper",
        "ccfLevel": 0,
        "title": "P1047 \u6821\u95e8\u5916\u7684\u6811"
    },
    {
        "content": "\u6807\u51c6\u7684\u4e00\u9053\u7ebf\u6bb5\u6811\u3002\n\n\u4e0d\u8fc7\u5355\u70b9\u4fee\u6539\u53d8\u6210\u4e86\u533a\u95f4\u4fee\u6539\uff0c\u5148\u9012\u5f52\u5efa\u6811\u6240\u6709\u53f6\u8282\u70b9\u503c\u4e3a\u4e00\uff0c\u7136\u540e\u6bcf\u8f93\u5165\u4e00\u4e2a\u8303\u56f4\u5c31\u66f4\u65b0\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u8fd9\u4e2a\u533a\u95f4\uff0c\u6700\u540e\u76f4\u63a5\u8f93\u51fasgt[1].sum\u5c31\u597d\u4e86\n\n\u4e00\u5b9a\u8981\u6ce8\u610f\u533a\u95f4\u662f\u4ece0\u5f00\u59cb\u7684\uff01\uff01\uff01\uff01\u88ab\u5751\u4e86\u2026\u2026\n\n[cpp]\n```cpp\n#include<iostream>\n#include<cstdio>\n#define lch now<<1\n#define rch ((now<<1)+1)\n#define smid ((l+r)>>1)\n#define MAXN 40000\nusing namespace std;\nstruct sgt_node{\n    int sum;\n    int l,r;\n}sgt[MAXN];\nint l,m;\nvoid build(int now,int l,int r){//\u9012\u5f52\u5efa\u6811\n    sgt[now].l=l;\n    sgt[now].r=r;\n    if(l==r){\n        sgt[now].sum = 1;\n        return;\n    }\n    build(lch,l,smid);\n    build(rch,smid+1,r);\n    sgt[now].sum=sgt[lch].sum+sgt[rch].sum;\n}\nvoid update(int now,int l,int r,int x,int y){//\u66f4\u65b0\u7ebf\u6bb5\u6811\uff0c\u66f4\u65b0\u8981\u5efa\u706b\u8f66\u7ad9\u7684\u8303\u56f4\n    if(l>y||r<x||sgt[now].sum==0) return; //\u4e0d\u5728\u8303\u56f4\u5185\u6216\u5df2\u7ecf\u6ca1\u6709\u6811\u4e86\u5c31\u76f4\u63a5return\n    if(x<=l&&y>=r){  //\u5982\u679c\u5728\u8303\u56f4\u5185\n        sgt[now].sum=0;\n        return;\n    }\n    update(lch,l,smid,x,y);\n    update(rch,smid+1,r,x,y);\n    sgt[now].sum = sgt[lch].sum+sgt[rch].sum;\n}\nint main()\n{\n    int left, right;\n    cin>>l>>m;\n    build(1,1,l+1);\n    for(int i=1;i<=m;i++){\n        cin>>left>>right;\n        update(1,1,l+1,left+1,right+1);\n    }\n    cout<<sgt[1].sum;  //\u6700\u540e\u76f4\u63a5\u8f93\u51fasgt[1].num\u5c31\u662f\u6574\u6761\u9053\u8def\u4e0a\u7684\u6811\u7684\u6570\u91cf\u5566\n    return 0;\n}\n[/cpp]\n```",
        "postTime": 1468285532,
        "uid": 6775,
        "name": "\uff0c\u3002\uff1f\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    },
    {
        "content": "\u7528A\u6570\u7ec4\uff0c\u8bb0\u5f55\u6bcf\u68f5\u6811\u7684\u60c5\u51b5\uff0ctrue\u8868\u793a\u88ab\u780d\u4e86\uff0cfalse\u8868\u793a\u6ca1\u88ab\u780d\uff0c\u6700\u540e\u7edf\u8ba1\u4e00\u4e0b\u5c31\u884c\u5566~\n\n\u4e0b\u9762\u9644\u4e0a\u672c\u849f\u84bb\u7684\u4ee3\u7801\uff1a\n\n```cpp\nvar\n  a:array[0..10000]of boolean;\n  l,r,i,j,n,m:longint;\nbegin\n  readln(n,m);\n  for i:=1 to m do\n  begin\n    readln(l,r);\n    for j:=l to r do\n    a[j]:=true; \n  end;\n  n:=n+1;\n  for i:=0 to n-1 do\n  if a[i] then dec(n);\n  writeln(n);\nend.\n\u795d\u5404\u4f4d\u6109\u5febAC\n```",
        "postTime": 1457353973,
        "uid": 12825,
        "name": "YczSS",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1047 \u3010\u6821\u95e8\u5916\u7684\u6811\u3011"
    }
]