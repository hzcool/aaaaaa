[
    {
        "content": "\u6211\u4eec\u53d1\u73b0\uff0c$\\forall k>0, Ans_{k} = Ans_{1}$\uff0c\u5176\u4e2d $Ans_{j}$\u8868\u793a\u6b63\u597d\u53cd\u8f6c$j$\u6b21\u7684\u6700\u5927\u7b54\u6848\u3002\u6240\u4ee5\u5bf9\u4e8e\u672c\u9898\uff0c$k=0$\u548c$k\\neq 0$\u5206\u5f00\u8ba8\u8bba\u5373\u53ef\u3002\n\n\u4e3a\u4ec0\u4e48$\\forall k>0, Ans_{k} = Ans_{1}$\u5462\uff1f\n\n\u5047\u8bbe\u5e8f\u5217\u4e3a $\\underrightarrow{1}\\underrightarrow{2}\\underrightarrow{3}$\uff1b\n\n\n\u4ece\u67d0\u4e2a\u4f4d\u7f6e\u7ffb\u8f6c\u540e\u53d8\u6210\uff1a $\\underleftarrow{2}\\underleftarrow{1}\\underleftarrow{3}$\uff1b\n\n\u5c06\u5e8f\u5217\u6574\u4e2a\u7ffb\u8f6c\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u5373\uff1a $\\underrightarrow{3}\\underrightarrow{1}\\underrightarrow{2}$\uff1b\n\n\u5373\u4e00\u6b21\u7ffb\u8f6c\u4e0e\u628a\u5e8f\u5217\u5f00\u5934\u7684\u67d0\u4e00\u6bb5\u63a5\u5230\u5e8f\u5217\u540e\u9762\u7b49\u6548\u3002\u56e0\u6b64\uff0c $\\forall k>0, Ans_{k} = Ans_{1}$\n\n\u6211\u4eec\u53d1\u73b0\u7ffb\u8f6c\u4e24\u6b21\u7b49\u4e8e\u7ffb\u8f6c\u4e00\u6b21\uff0c\u90a3\u4e48\u8fd9\u6837\u63a8\u51fa\u7ffb\u8f6c\u591a\u6b21\u7b49\u4e8e\u7ffb\u8f6c\u4e00\u6b21\u3002\n\n\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u533a\u95f4\u6700\u957f\u989c\u8272\u6bb5\u3002\u5bf9\u4e8e\u6240\u6709$k \\neq 0$\u4e14\u8be2\u95ee\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u989c\u8272\u76f8\u540c\u7684\u8be2\u95ee\uff0c\u5c06\u533a\u95f4\u6700\u957f\u989c\u8272\u6bb5\u4e0e\u8be2\u95ee\u533a\u95f4\u5de6\u53f3\u6700\u957f\u989c\u8272\u6bb5\u957f\u5ea6\u7684\u548c\u53d6max\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff08\u5f88\u4e11\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define L(u) (u<<1)\n#define R(u) (u<<1|1)\nusing namespace std;\n\nconst int MAXN = 200050;\nvoid read(int &x) {\n\tchar ch; while(ch = getchar(), ch < '!'); x = ch - 48;\n\twhile(ch = getchar(), ch > '!') x = (x << 3) + (x << 1) + ch - 48;\n}\n\nstruct Segment_Tree {\n\tint lcol, rcol, col, lmax, rmax, v;\n} t[MAXN << 2];\nint n, m, a[MAXN];\n\nvoid pushup(int u, int l, int r) {\n\tint mid = (l + r) >> 1;\n\tif(t[L(u)].col != t[R(u)].col || t[L(u)].col == -1 || t[R(u)].col == -1) t[u].col = -1;\n\telse t[u].col = t[L(u)].col;\n\tt[u].lcol = t[L(u)].lcol; t[u].rcol = t[R(u)].rcol;\n\tif(t[L(u)].col != -1 && t[L(u)].col == t[R(u)].lcol) t[u].lmax = (mid-l+1)+t[R(u)].lmax;\n\telse t[u].lmax = t[L(u)].lmax;\n\tif(t[R(u)].col != -1 && t[R(u)].col == t[L(u)].rcol) t[u].rmax = (r-mid)+t[L(u)].rmax;\n\telse t[u].rmax = t[R(u)].rmax;\n\tt[u].v = max(t[L(u)].v, t[R(u)].v);\n\tif(t[L(u)].rcol == t[R(u)].lcol) t[u].v = max(t[u].v, t[L(u)].rmax + t[R(u)].lmax);\n}\n\nvoid cover(int u, int l, int r, int c) {\n\t//cout << l << \" \" << r << \" \" << c << endl;\n\tt[u].col = t[u].lcol = t[u].rcol = c;\n\tt[u].v = t[u].lmax = t[u].rmax = r-l+1;\n}\n\nvoid pushdown(int u, int l, int r) {\n\tif(t[u].col != -1) {\n\t\tint mid = (l + r) >> 1;\n\t\tcover(L(u), l, mid, t[u].col);\n\t\tcover(R(u), mid+1, r, t[u].col);\n\t}\n}\n\nvoid build(int u, int l, int r) {\n\tif(l == r) {\n\t\tt[u].lcol = t[u].rcol = t[u].col = a[l];\n\t\tt[u].lmax = t[u].rmax = 1; t[u].v = 1;\n\t\t//cout << l << \" \" << r << \" \" << t[u].v << \" \" << t[u].lcol << \" \" << t[u].rcol << \" \" << t[u].lmax << \" \" << t[u].rmax << endl; \n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(L(u), l, mid); build(R(u), mid+1, r);\n\tpushup(u, l, r);\n\t//cout << l << \" \" << r << \" \" << t[u].v << \" \" << t[u].lcol << \" \" << t[u].rcol << \" \" << t[u].lmax << \" \" << t[u].rmax << endl; \n}\n\nvoid print(int u, int l, int r) {\n\tif(l == r) {\n\t\tcout << l << \" \" << r << \" \" << t[u].v << \" \" << t[u].lcol << \" \" << t[u].rcol << \" \" << t[u].lmax << \" \" << t[u].rmax << endl; \n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tprint(L(u), l, mid); print(R(u), mid+1, r);\n\tcout << l << \" \" << r << \" \" << t[u].v << \" \" << t[u].lcol << \" \" << t[u].rcol << \" \" << t[u].lmax << \" \" << t[u].rmax << endl; \n}\n\nvoid update(int u, int l, int r, int tl, int tr, int c) {\n\tif(tr < l || tl > r) return;\n\tif(tl <= l && r <= tr) {\n\t\tcover(u, l, r, c);\n\t\treturn;\n\t}\n\tpushdown(u, l, r);\n\tint mid = (l + r) >> 1;\n\tupdate(L(u), l, mid, tl, tr, c); update(R(u), mid+1, r, tl, tr, c);\n\tpushup(u, l, r);\n}\n\nint query(int u, int l, int r, int tl, int tr) {\n\tif(tl <= l && r <= tr) return t[u].v;\n\tpushdown(u, l, r);\n\tint mid = (l + r) >> 1;\n\tif(tr <= mid) return query(L(u), l, mid, tl, tr);\n\telse if(tl > mid) return query(R(u), mid+1, r, tl, tr);\n\telse {\n\t\tint res = max(query(L(u), l, mid, tl, tr), query(R(u), mid+1, r, tl, tr));\n\t\tif(t[L(u)].rcol == t[R(u)].lcol) {\n\t\t\tint rm = min(mid-tl+1, t[L(u)].rmax), lm = min(tr-mid, t[R(u)].lmax);\n\t\t\tres = max(res, rm + lm);\n\t\t}\n\t\treturn res;\n\t}\n}\n\nint Qcol(int u, int l, int r, int x) {\n\tif(l == r) return t[u].col;\n\tif(l <= x && x <= r && t[u].col != -1) return t[u].col;\n\tpushdown(u, l, r);\n\tint mid = (l + r) >> 1;\n\tif(x <= mid) return Qcol(L(u), l, mid, x);\n\telse return Qcol(R(u), mid+1, r, x);\n}\n\nint Qlmax(int u, int l, int r, int tl, int tr) {\n\t//cout << l << \" \" << r << \" \" << t[u].v << \" \" << t[u].lcol << \" \" << t[u].rcol << \" \" << t[u].lmax << \" \" << t[u].rmax << endl; \n\tif(l <= tl && tr <= r && l + t[u].lmax - 1 >= tl) return l+t[u].lmax-tl;\n\tpushdown(u, l, r);\n\tint mid = (l + r) >> 1;\n\tif(tl > mid) return Qlmax(R(u), mid+1, r, tl, tr);\n\telse if(tr <= mid) return Qlmax(L(u), l, mid, tl, tr);\n\telse if(t[L(u)].rcol == t[R(u)].lcol && mid-t[L(u)].rmax+1 <= tl) return Qlmax(L(u), l, mid, tl, mid) + Qlmax(R(u), mid+1, r, mid+1, tr);\n\telse return Qlmax(L(u), l, mid, tl, mid);\n\t/*{\n\t\tif(t[L(u)].col != -1) {\n\t\t\tif(t[L(u)].col != t[R(u)].lcol) return mid-tl+1;\n\t\t\telse return mid-tl+1+Qlmax(R(u), mid+1, r, mid+1, tr);\n\t\t} else return Qlmax(L(u), l, mid, tl, mid);\n\t}*/\n}\n\nint Qrmax(int u, int l, int r, int tl, int tr) {\n\t//cout << u << \" \" << l << \" \" << r << \" \" << t[u].v << \" \" << t[u].lcol << \" \" << t[u].rcol << \" \" << t[u].lmax << \" \" << t[u].rmax << \" \" << t[u].col << endl; \n\tif(l <= tl && tr <= r && r - t[u].rmax + 1 <= tr) return tr - r + t[u].rmax;\n\tpushdown(u, l, r);\n\tint mid = (l + r) >> 1;\n\t//cout << R(u) << \" \" << L(u) << \" \" << t[R(u)].col << \" \" << t[L(u)].rcol << endl;\n\tif(tl > mid) return Qrmax(R(u), mid+1, r, tl, tr);\n\telse if(tr <= mid) return Qrmax(L(u), l, mid, tl, tr);\n\telse if(t[R(u)].lcol == t[L(u)].rcol && mid+1+t[R(u)].lmax-1 >= tr) return Qrmax(L(u), l, mid, tl, mid) + Qrmax(R(u), mid+1, r, mid+1, tr);\n\telse return Qrmax(R(u), mid+1, r, mid+1, tr);\n\t/*{\n\t\tif(t[R(u)].col != -1) {\n\t\t\tif(t[R(u)].col != t[L(u)].rcol) return tr-mid;\n\t\t\telse return tr-mid+Qrmax(L(u), l, mid+1, tl, mid);\n\t\t} else return Qrmax(R(u), mid+1, r, mid+1, tr);\n\t}*/\n}\n\nint main() {\n\tread(n); read(m);\n\tfor(int i = 1; i <= n; ++i) read(a[i]);\n\tbuild(1, 1, n);\n\tint l, r, x; char opt;\n\twhile(m--) {\n\t\twhile(opt = getchar(), opt != 'R' && opt != 'Q');\n\t\tread(l); read(r); read(x);\n\t\tif(opt == 'R') update(1, 1, n, l, r, x);\n\t\telse {\n\t\t\tif(x) {\n\t\t\t\tint lc = Qcol(1, 1, n, l), rc = Qcol(1, 1, n, r);\n\t\t\t\tif(lc == rc) {\n\t\t\t\t\tint lm = Qlmax(1, 1, n, l, r), rm = Qrmax(1, 1, n, l, r);\n\t\t\t\t\t//cout << lm << \" \" << rm << endl;\n\t\t\t\t\tprintf(\"%d\\n\", max(query(1, 1, n, l, r), min(lm + rm, r-l+1)));\n\t\t\t\t} else printf(\"%d\\n\", query(1, 1, n, l, r));\n\t\t\t\t//print(1, 1, n);\n\t\t\t} else printf(\"%d\\n\", query(1, 1, n, l, r));\n\t\t}\n\t}\n}\n\n```",
        "postTime": 1565404190,
        "uid": 2491,
        "name": "\u8bd7\u4e43",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5500 \u3010[LnOI2019]\u771f\u6b63\u7684OIer\u4ece\u4e0d\u5973\u88c5\u3011"
    },
    {
        "content": "~~\u9898\u540d\u662f\u5047\u7684\uff01\u9898\u540d\u662f\u5047\u7684\uff01\u9898\u540d\u662f\u5047\u7684\uff01~~\n\n\u975e\u5e38\u6709\u8da3\u7684\u7ed3\u8bba\u9898\u3002\n\n\u8003\u8651\u4e00\u6b21\u5973\u88c5\u53ef\u80fd\u9020\u6210\u7684\u5f71\u54cd\n\n\u82e5\u539f\u533a\u95f4\u4e3a\n\n$$\na_1,a_2,\\dots,a_p,a_{p+1},\\dots,a_n\n$$\n\n\u5728\u4e00\u6b21\u5973\u88c5\u540e\u4f1a\u53d8\u4e3a\n\n$$\na_p,a_{p-1},\\dots,a_1,a_n,\\dots,a_{p+1}\n$$\n\n\u7531\u4e8e\u6574\u4e2a\u7ffb\u8f6c\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6574\u4e2a\u533a\u95f4\u7ffb\u8f6c\n\n$$\na_{p+1},a_{p+2},\\dots,a_n,a_1,a_2,\\dots,a_p\n$$\n\n\u53ef\u4ee5\u53d1\u73b0\u76f8\u5f53\u4e8e\u628a\u524d $p$ \u9879\u79fb\u5230\u4e86\u6700\u540e\u3002\n\n\u5982\u679c\u628a\u8fd9\u4e2a\u533a\u95f4\u653e\u5728\u73af\u4e0a\uff0c\u5219\u4e00\u6b21\u5973\u88c5\u76f8\u5f53\u4e8e\u628a\u8fd9\u4e2a\u73af\u65cb\u8f6c\u4e86\u3002\n\n\u56e0\u6b64\uff0c\u591a\u6b21\u5973\u88c5\u548c\u4e00\u6b21\u5973\u88c5\u6ca1\u6709\u533a\u522b\u3002\n\n~~\u8fd9\u5c31\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u5973\u88c5\u53ea\u6709\u96f6\u6b21\u548c\u65e0\u9650\u6b21\uff0c\u56e0\u4e3a\u4efb\u610f\u591a\u6b21\u5973\u88c5\u76f8\u5f53\u4e8e\u65e0\u9650\u6b21\u5973\u88c5~~\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u533a\u95f4\u6700\u957f\u989c\u8272\u5757\u957f\u5ea6 $ma$\uff0c\u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u989c\u8272\u5757\u957f\u5ea6 $lmax$\uff0c\u4ece\u53f3\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u989c\u8272\u5757\u957f\u5ea6 $rmax$\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u67e5\u8be2\u65f6\u5982\u679c $k>0$ \u4e14 $a_l=a_r$ \u5c31\u7528 $\\min\\{r-l+1,lmax+rmax\\}$ \u66f4\u65b0\u7b54\u6848\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N=200005;\nll n,m,a[N],tag[N];\nstruct data{\n\tll lcol,rcol,col,lmax,rmax,ma;\n\tdata(ll lcol_=0,ll rcol_=0,ll col_=0,ll lmax_=0,ll rmax_=0,ll ma_=0){\n\t\tlcol=lcol_,rcol=rcol_,col=col_,lmax=lmax_,rmax=rmax_,ma=ma_;\n\t}\n}sum[N<<2];\ndata operator+(const data&x,const data&y){\n\tdata ret(x.lcol,y.rcol);\n\tif(x.col==y.col&&x.col!=-1)ret.col=x.col;\n\telse ret.col=-1;\n\tif(x.col==-1||x.col!=y.lcol)ret.lmax=x.lmax;\n\telse ret.lmax=x.lmax+y.lmax;\n\tif(y.col==-1||y.col!=x.rcol)ret.rmax=y.rmax;\n\telse ret.rmax=x.rmax+y.rmax;\n\tret.ma=max(x.ma,y.ma);\n\tif(x.rcol==y.lcol)ret.ma=max(ret.ma,x.rmax+y.lmax);\n\treturn ret;\n}\nvoid pushup(ll k){sum[k]=sum[k<<1]+sum[k<<1|1];}\nvoid build(ll k,ll l,ll r){\n\tif(l==r){\n\t\tsum[k]=data(a[l],a[l],a[l],1,1,1);\n\t\treturn;\n\t}\n\tll mid=l+r>>1;\n\tbuild(k<<1,l,mid);\n\tbuild(k<<1|1,mid+1,r);\n\tpushup(k);\n} \nvoid Add(ll k,ll l,ll r,ll col){\n\tsum[k]=data(col,col,col,r-l+1,r-l+1,r-l+1);\n\ttag[k]=col;\n}\nvoid pushdown(ll k,ll l,ll r,ll mid){\n\tif(!tag[k])return;\n\tAdd(k<<1,l,mid,tag[k]);\n\tAdd(k<<1|1,mid+1,r,tag[k]);\n\ttag[k]=0;\n}\nvoid modify(ll k,ll l,ll r,ll x,ll y,ll v){\n\tif(x<=l&&r<=y){\n\t\tAdd(k,l,r,v);\n\t\treturn;\n\t}\n\tll mid=l+r>>1;\n\tpushdown(k,l,r,mid);\n\tif(x<=mid)modify(k<<1,l,mid,x,y,v);\n\tif(mid<y)modify(k<<1|1,mid+1,r,x,y,v);\n\tpushup(k);\n}\ndata query(ll k,ll l,ll r,ll x,ll y){\n\tif(x<=l&&r<=y)return sum[k];\n\tll mid=l+r>>1;\n\tpushdown(k,l,r,mid);\n\tif(mid>=y)return query(k<<1,l,mid,x,y);\n\tif(x>mid)return query(k<<1|1,mid+1,r,x,y);\n\treturn query(k<<1,l,mid,x,y)+query(k<<1|1,mid+1,r,x,y);\n}\nint main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(ll i=1;i<=n;i++)scanf(\"%lld\",&a[i]);\n\tbuild(1,1,n); \n\twhile(m--){\n\t\tchar op[2];\n\t\tscanf(\"%s\",op);\n\t\tif(op[0]=='Q'){\n\t\t\tll l,r,k,ans;\n\t\t\tscanf(\"%lld%lld%lld\",&l,&r,&k);\n\t\t\tdata res=query(1,1,n,l,r);\n\t\t\tans=res.ma;\n\t\t\tif(k&&res.lcol==res.rcol)ans=max(ans,min(res.lmax+res.rmax,r-l+1));\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}else{\n\t\t\tll l,r,v;\n\t\t\tscanf(\"%lld%lld%lld\",&l,&r,&v);\n\t\t\tmodify(1,1,n,l,r,v);\n\t\t}\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1611385341,
        "uid": 121027,
        "name": "Spasmodic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5500 \u3010[LnOI2019]\u771f\u6b63\u7684OIer\u4ece\u4e0d\u5973\u88c5\u3011"
    }
]